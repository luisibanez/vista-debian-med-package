#---------------------------------------------------------------------------
# Copyright 2011 The Open Source Electronic Health Record Agent
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#---------------------------------------------------------------------------

## Post Import Setup
##

'''
This script sets up VistA after the Routines and Globals import is complete

@copyright The Open Source Electronic Health Record Agent
@license http://www.apache.org/licenses/LICENSE-2.0
'''

import sys
import os
import time
sys.path = ['${VISTA_SOURCE_DIR}/Python/vista'] + sys.path

from OSEHRAHelper import ConnectToMUMPS,PROMPT
VistA=ConnectToMUMPS("${VISTA_BINARY_DIR}/Testing/Log/PostImport1.log","${VISTA_CACHE_INSTANCE}","${VISTA_CACHE_NAMESPACE}")
if ('${VISTA_CACHE_USERNAME}' and '${VISTA_CACHE_PASSWORD}'):
  VistA.login('${VISTA_CACHE_USERNAME}','${VISTA_CACHE_PASSWORD}')
if VistA.type=='cache':
  try:
    VistA.ZN('${VISTA_CACHE_NAMESPACE}')
  except IndexError,no_namechange:
    pass
VistA.wait(PROMPT,60)
#---------------------------------------------------------------------
#- SECTION TO SETUP DEMO VistA SITE -
#---------------------------------------------------------------------
#Initialze FileMan

VistA.write('D ^DINIT')
VistA.wait('Initialize VA FileMan now?')
VistA.write('Yes')
VistA.wait('SITE NAME:')
VistA.write('${TEST_VISTA_SETUP_SITE_NAME}')
VistA.wait('SITE NUMBER')
VistA.write('6161')
VistA.wait('Do you want to change the MUMPS OPERATING SYSTEM File?')
VistA.write('Yes')
VistA.wait('TYPE OF MUMPS SYSTEM YOU ARE USING')
if VistA.type=='cache':
  VistA.write('CACHE')
else:
  VistA.write('GT.M(UNIX)')
VistA.wait(PROMPT,60)
#Setup the ZU Routine
VistA.write('D ^ZUSET')
VistA.wait('Rename')
VistA.write('Yes')
VistA.wait(PROMPT,60)
VistA.write('S DUZ=1 D Q^DI')

# Remove the primary HFS directory from the
# Kernel System Parameters file

VistA.wait('Select OPTION:')
VistA.write('1')
VistA.wait('INPUT TO WHAT FILE')
VistA.write('KERNEL SYSTEM PARAMETERS')
VistA.wait('EDIT WHICH FIELD')
VistA.write('PRIMARY HFS DIRECTORY')
VistA.wait('THEN EDIT FIELD')
VistA.write('')
VistA.wait('DOMAIN NAME')
VistA.write('`1')
VistA.wait('PRIMARY HFS DIRECTORY')
VistA.write(os.path.normpath('${TEST_VISTA_SETUP_PRIMARY_HFS_DIRECTORY}'))
index = VistA.multiwait(['SURE YOU WANT TO DELETE','DOMAIN NAME'])
if index == 0:
  VistA.write('Y')
  VistA.wait('DOMAIN NAME')
VistA.write('')


#Ensure that the null device is correctly configured.

VistA.wait('Select OPTION:')
VistA.write('1')
VistA.wait('INPUT TO WHAT FILE')
VistA.write('DEVICE')
VistA.wait('EDIT WHICH FIELD')
VistA.write('$I\rSIGN-ON/SYSTEM DEVICE\r')
VistA.wait('NAME:')
VistA.write('NULL\r1')
VistA.wait('//')
if sys.platform=='win32':
  VistA.write('//./nul\rNO\r')
else:
  VistA.write('/dev/null\rNO\r')

#Create and Christen the New Domain
VistA.wait('Select OPTION:')
VistA.write('1')
VistA.wait('INPUT TO WHAT FILE')
VistA.write('DOMAIN\r')
VistA.wait('Select DOMAIN NAME')
VistA.write('${TEST_VISTA_SETUP_SITE_NAME}\rY\r^\r\r')
VistA.wait(PROMPT,60)
VistA.write('D CHRISTEN^XMUDCHR')
VistA.wait('Are you sure you want to change the name of this facility?')
VistA.write('Yes')
VistA.wait('Select DOMAIN NAME')
VistA.write('${TEST_VISTA_SETUP_SITE_NAME}')
VistA.wait('PARENT')
VistA.write('')
VistA.wait('TIME ZONE')
VistA.write(time.strftime('%Z').replace(' Time',''))
index = VistA.multiwait([VistA.prompt,'TIME ZONE'])
if index==1:
  VistA.write('EST')
  VistA.wait(PROMPT,60)
VistA.IEN('DOMAIN','${TEST_VISTA_SETUP_SITE_NAME}')
VistA.wait(PROMPT,60)
VistA.write('S $P(^XWB(8994.1,1,0),"^")=' + VistA.IENumber)
VistA.write('S $P(^XTV(8989.3,1,0),"^")=' + VistA.IENumber)
VistA.getenv('${TEST_VISTA_SETUP_VOLUME_SET}')
VistA.wait(PROMPT,60)
VistA.write('S DUZ=1 D Q^DI')
VistA.wait('Select OPTION')
VistA.write('UTILITY')
VistA.wait('UTILITY OPTION')
VistA.write('RE')
VistA.wait('MODIFY WHAT FILE')
VistA.write('8989.3\rNO\rY\rY')
VistA.wait('UTILITY OPTION')
VistA.write('RE')
VistA.wait('MODIFY WHAT FILE')
VistA.write('8994.1\rNO\rY\rY\r')
VistA.wait('Select OPTION')

# Set up the proper Box:Volume pair
VistA.write('1')
VistA.wait('INPUT TO WHAT FILE')
VistA.write('14.5\r')
VistA.wait('Select VOLUME SET')
VistA.write('`1')
VistA.wait('VOLUME SET:')
VistA.write('${TEST_VISTA_SETUP_VOLUME_SET}\r\r\r\r\r')
VistA.wait('TASKMAN FILES UCI')
if VistA.type=='cache':
  VistA.write('${VISTA_CACHE_NAMESPACE}\r\r\r\r\r\r')
else:
  VistA.write('${TEST_VISTA_SETUP_VOLUME_SET}\r\r\r\r\r\r')
VistA.wait('Select OPTION:')
VistA.write('1')
VistA.wait('INPUT TO WHAT FILE')
VistA.write('14.7')
VistA.wait('ALL//')
VistA.write('')
VistA.wait('Select TASKMAN SITE PARAMETERS BOX-VOLUME PAIR:')
VistA.write('`1')
VistA.wait('//')
VistA.write(VistA.boxvol)
VistA.wait('RESERVED')
VistA.write('^\r')

VistA.wait('Select OPTION')
VistA.write('1')
VistA.wait('INPUT TO WHAT FILE')
VistA.write('8994.1\r')
VistA.wait('Select RPC BROKER SITE PARAMETERS DOMAIN NAME')
VistA.write('${TEST_VISTA_SETUP_SITE_NAME}\r\r\r\r' + VistA.boxvol + '\rY\r\r${VISTA_TCP_PORT}\rY')
if VistA.type=='cache':
  VistA.write('1\r1\r1\r')
else:
  VistA.write('1\r\r\r')

VistA.wait('Select OPTION')
VistA.write('1')
VistA.wait('INPUT TO WHAT FILE')
VistA.write('KERNEL SYSTEM PARAMETERS\rVOLUME SET\r\r')
VistA.wait('Select KERNEL SYSTEM PARAMETERS DOMAIN NAME:')
VistA.write('${TEST_VISTA_SETUP_SITE_NAME}\r')
VistA.wait('VOLUME SET')
VistA.write('${TEST_VISTA_SETUP_VOLUME_SET}')
index = VistA.multiwait(['Are you adding','VOLUME SET'])
if index==0:
  VistA.write('Y')
elif index==1:
  VistA.write('')
VistA.wait('MAX SIGNON ALLOWED')
VistA.write('500')
VistA.wait('LOG SYSTEM RT')
VistA.write('N')
VistA.wait('VOLUME SET')
VistA.write('\r\r')


# Start TaskMan
if VistA.type=='cache':
  VistA.wait(PROMPT)
  VistA.write('S DUZ=1 D ^XUP')
  VistA.wait('Select OPTION NAME')
  VistA.write('EVE\r1')
  VistA.wait('Systems Manager Menu')
  VistA.write('Taskman Management')
  VistA.wait('Select Taskman Management')
  VistA.write('SCHED')
  VistA.wait('reschedule:')
  VistA.write('XWB LISTENER STARTER\rY')
  VistA.wait('COMMAND:')
  VistA.write('\r^SPECIAL QUEUEING\rSTARTUP\rS\rE\r')
  VistA.wait('Select Taskman Management')
  VistA.write('')
  VistA.wait('Systems Manager Menu')
  VistA.write('')
  VistA.wait('Do you really want to halt')
  VistA.write('Y')
VistA.wait(PROMPT)
VistA.write('S DUZ=1 D ^XUP')
VistA.wait('Select OPTION NAME')
VistA.write('EVE\r1')
VistA.wait('Systems Manager Menu')
VistA.write('Taskman Management')
VistA.wait('Select Taskman Management')
VistA.write('Taskman Management Utilities')
VistA.wait('Select Taskman Management Utilities')
VistA.write('Restart Task Manager\rY')
VistA.wait('Select Taskman Management Utilities')
VistA.write('')
VistA.wait('Select Taskman Management')
VistA.write('')
VistA.wait('Select Systems Manager Menu')
VistA.write('')
VistA.wait('Do you really want to halt')
VistA.write('Y')
VistA.wait(PROMPT)
VistA.write('K')

#Create the System Manager
VistA.wait(PROMPT,60)
VistA.write('S DUZ=1 D ^XUP')
VistA.wait('Select OPTION NAME')
VistA.write('EVE\r1')
VistA.wait('Systems Manager Menu')
VistA.write('USER MANAGEMENT')
VistA.wait('User Management')
VistA.write('ADD')
VistA.wait(':')
VistA.write('MANAGER,SYSTEM')
VistA.wait('No//')
VistA.write('Y')
VistA.wait('INITIAL:')
VistA.write('SM')
VistA.wait('SSN:')
VistA.write('000000001')
VistA.wait('SEX:')
VistA.write('M')
VistA.wait('NPI')
VistA.write('')

#TODO: Give XUPROGMODE key
VistA.wait('NAME COMPONENTS')
VistA.write('\r\r\r\r\r^PRIMARY MENU OPTION\rEVE\r1\r^Want to edit ACCESS CODE\rY\rSM1234\rSM1234\r^Want to edit VERIFY CODE\rY\rSM1234!!\rSM1234!!\r^SECONDARY MENU OPTIONS\rOR PARAM COORDINATOR MENU\rY\r\r\r\rTIU IRM MAINTENANCE MENU\rY\r\r\r\rXPAR MENU TOOLS\rY\r\r\r\rDG REGISTER PATIENT\rY\r\r\r\r^MULTIPLE SIGN-ON\r1\r1\r99\r^SERVICE/SECTION\rIRM\r^\rY')
VistA.wait('User Account Access Letter')
VistA.write('NO')
VistA.wait('wish to allocate security keys?')
VistA.write('Y')
VistA.wait('Allocate key')
VistA.write('XUMGR')
VistA.wait('Another key')
VistA.write('XUPROG\r1')
VistA.wait('Another key')
VistA.write('SD SUPERVISOR')
VistA.wait('Another key')
VistA.write('SDWL PARAMETER')
VistA.wait('Another key')
VistA.write('SDWL MENU')
VistA.wait('Another key')
VistA.write('')
VistA.wait('Another holder')
VistA.write('')
VistA.wait('YES//')
VistA.write('')
VistA.wait('mail groups?')
VistA.write('\r')
VistA.wait('Systems Manager Menu')
# Set the Listener Starter to run when TaskMan is started
VistA.write('\rY')
VistA.wait(PROMPT,60)
VistA.IEN('NEW PERSON','MANAGER,SYSTEM')
VistA.wait(PROMPT,60)
VistA.write('S DUZ=' + VistA.IENumber + ' S $P(^VA(200,DUZ,0),"^",4)="@"')

 #Open FileMan and start by creating the VistA Health Care institution

VistA.wait(PROMPT,60)
VistA.write('S DUZ=1 S XUMF=1 D Q^DI')
VistA.wait('OPTION:')
VistA.write('1')
VistA.wait('INPUT TO WHAT FILE:')
VistA.write('4')
VistA.wait('EDIT WHICH FIELD')
VistA.write('STATION NUMBER')
VistA.wait('THEN EDIT FIELD')
VistA.write('')
VistA.wait('Select INSTITUTION NAME:')
VistA.write('VISTA HEALTH CARE')
VistA.wait('Are you adding')
VistA.write('Y')
VistA.wait('STATION NUMBER:')
VistA.write('6100')
VistA.wait('Select INSTITUTION NAME:')
VistA.write('')

#Next create the Medical Center Division of the VistA Health Care institution

VistA.wait('Select OPTION:')
VistA.write('1')
VistA.wait('INPUT TO WHAT FILE:')
VistA.write('40.8')
VistA.wait('EDIT WHICH FIELD')
VistA.write('FACILITY NUMBER')
VistA.wait('THEN EDIT FIELD')
VistA.write('INSTITUTION FILE POINTER')
VistA.wait('THEN EDIT FIELD')
VistA.write('')
VistA.wait('DIVISION NAME')
VistA.write('VISTA MEDICAL CENTER')
VistA.wait('Are you adding')
VistA.write('Y')
VistA.wait('MEDICAL CENTER DIVISION NUM:')
VistA.write('')
VistA.wait('FACILITY NUMBER')
VistA.write('6101')
VistA.write('')
VistA.wait('INSTITUTION FILE POINTER')
VistA.write('6100')
VistA.write('\r')


VistA.wait(PROMPT,60)
VistA.write('D Q^DI')
VistA.wait('OPTION')
VistA.write('1')
VistA.wait('INPUT TO WHAT FILE')
VistA.write('ACCESSION\r1')
VistA.wait('EDIT WHICH FIELD')
VistA.write('.4\r')
VistA.wait('Select ACCESSION AREA')
VistA.write('CHEMISTRY')
VistA.wait('NUMERIC IDENTIFIER')
VistA.write('CH\r')

#Change the STREPTOZYME test to be accessioned through the chem area and the Vista Health Care institution
VistA.wait('OPTION')
VistA.write('1')
VistA.wait('INPUT TO WHAT FILE')
VistA.write('LABORATORY TEST')
VistA.wait('EDIT WHICH FIELD')
VistA.write('ACCESSION AREA\r\r')
VistA.wait('Select LABORATORY TEST NAME')
VistA.write('STREPTOZYME')
VistA.wait('Select INSTITUTION')
VistA.write('VISTA HEALTH CARE')
VistA.wait('ACCESSION AREA')
VistA.write('CHEMISTRY\r')

#Change the Package Prefix of the ONCE scheudle to be used by the Laboratory

VistA.wait('OPTION')
VistA.write('1')
VistA.wait('INPUT TO WHAT FILE')
VistA.write('ADMINISTRATION SCHEDULE')
VistA.wait('EDIT WHICH FIELD')
VistA.write('PACKAGE PREFIX\r')
VistA.wait('Select ADMINISTRATION SCHEDULE NAME')
VistA.write('ONCE\rLR\r\r')

#Register the Vitals DLL and GUI Versions within the XPAR Menu

VistA.wait(PROMPT,60)
VistA.write('S GMVDLL=\"GMV_VITALSVIEWENTER.DLL:v. 08/11/09 15:00\"')
VistA.wait(PROMPT,60)
VistA.write('D EN^XPAR(\"SYS\",\"GMV DLL VERSION\",GMVDLL,1)')
VistA.wait(PROMPT,60)
VistA.write('S GMVDLL=\"GMV_VITALSVIEWENTER.DLL:v. 01/21/11 12:52\"')
VistA.wait(PROMPT,60)
VistA.write('D EN^XPAR(\"SYS\",\"GMV DLL VERSION\",GMVDLL,1)')
VistA.wait(PROMPT,60)
VistA.write('S GMVGUI=\"VITALSMANAGER.EXE:5.0.26.1\"')
VistA.wait(PROMPT,60)
VistA.write('D EN^XPAR(\"SYS\",\"GMV GUI VERSION\",GMVGUI,1)')

# Sign into the ZU menu as the System,Manager and start the TCP listeneer

VistA.wait(PROMPT,60)
VistA.write('D ^ZU')
VistA.wait('ACCESS CODE:')
VistA.write('SM1234')
VistA.wait('VERIFY CODE:')
VistA.write('SM1234!!')
VistA.wait('verify code:')
VistA.write('SM1234!!')
VistA.wait('VERIFY CODE:')
VistA.write('SM12345!!')
VistA.wait('right:')
VistA.write('SM12345!!')
VistA.wait('TYPE NAME:')
VistA.write('')

#Enter the Doctor Robert Alexander
VistA.write('USER MANAGEMENT')
VistA.wait('User Management')
VistA.write('ADD')
VistA.wait('name')
VistA.write('ALEXANDER,ROBERT\rY')
VistA.wait('INITIAL:')
VistA.write('RA')
VistA.wait('SSN:')
VistA.write('000000029')
VistA.wait('SEX:')
VistA.write('M')
VistA.wait('NPI')
VistA.write('')
VistA.wait('NAME COMPONENTS')
VistA.write('\r\r\r\r\r^PRIMARY MENU OPTION\rXUCOR\r^SECONDARY MENU OPTIONS\rGMPL MGT MENU\rY\r\r\r\rOR CPRS GUI CHART\rY\r\r\r\rGMV V/M GUI\rY\r\r\r\r^Want to edit ACCESS CODE\rY\rfakedoc1\rfakedoc1\r^Want to edit VERIFY CODE\rY\r2Doc!@#$\r2Doc!@#$\rVISTA HEALTH CARE\rY\r\r\r\r\r^SERVICE/SECTION\rIRM\r^Language\r\r767\rY\rY\rT-1\r\r^RESTRICT PATIENT SELECTION\r0\r\rCOR\rY\rT-1\r\r^MULTIPLE SIGN-ON\r1\r1\r99\r^\rE\rY')
VistA.wait('User Account Access Letter')
VistA.write('NO')
VistA.wait('wish to allocate security keys?')
VistA.write('Y')
VistA.wait('Allocate key')
VistA.write('PROVIDER\r1')
VistA.wait('Another key')
VistA.write('GMV MANAGER')
VistA.wait('Another key')
VistA.write('LRLAB')
VistA.wait('Another key')
VistA.write('LRVERIFY')
VistA.wait('Another key')
VistA.write('ORES')
VistA.wait('Another key')
VistA.write('SD SUPERVISOR')
VistA.wait('Another key')
VistA.write('SDWL PARAMETER')
VistA.wait('Another key')
VistA.write('SDWL MENU')
VistA.wait('Another key')
VistA.write('')
VistA.wait('Another holder')
VistA.write('')
VistA.wait('Do you wish to proceed')
VistA.write('Yes')
VistA.wait('add this user to mail groups')
VistA.write('NO')

#Enter the Nurse Mary Smith
VistA.wait('User Management')
VistA.write('ADD')
VistA.wait('name')
VistA.write('SMITH,MARY\rY')
VistA.wait('INITIAL:')
VistA.write('MS')
VistA.wait('SSN:')
VistA.write('000000030')
VistA.wait('SEX:')
VistA.write('F')
VistA.wait('NPI')
VistA.write('')
VistA.wait('NAME COMPONENTS')
VistA.write('\r\r\r\r\r^PRIMARY MENU OPTION\rXUCOR\r^SECONDARY MENU OPTIONS\rGMPL MGT MENU\rY\r\r\r\rOR CPRS GUI CHART\rY\r\r\r\rGMV V/M GUI\rY\r\r\r\r^Want to edit ACCESS CODE\rY\rfakenurse1\rfakenurse1\r^Want to edit VERIFY CODE\rY\r2Nur!@#$\r2Nur!@#$\rVISTA HEALTH CARE\rY\r\r\r\r\r^SERVICE/SECTION\rIRM\r^Language\r\r289\rY\rY\rT-1\r\r^RESTRICT PATIENT SELECTION\r0\r\rCOR\rY\rT-1\r\r^MULTIPLE SIGN-ON\r1\r1\r99\r^\rE\rY')
VistA.wait('User Account Access Letter')
VistA.write('NO')
VistA.wait('wish to allocate security keys?')
VistA.write('Y')
VistA.wait('Allocate key')
VistA.write('PROVIDER\r1')
VistA.wait('Another key')
VistA.write('ORELSE\r')
VistA.wait('Another holder')
VistA.write('')
VistA.wait('Do you wish to proceed')
VistA.write('Yes')
VistA.wait('add this user to mail groups')
VistA.write('NO\r')

#Create the first patient named "David Carter Jr')
#TODO: Enter patient as a Clerk, not System Manager

VistA.wait('Systems Manager Menu')
VistA.write('Register a Patient')
VistA.wait('PATIENT NAME')
VistA.write('Carter,David Jr\rY')
VistA.wait('SEX')
VistA.write('M')
VistA.wait('DATE OF BIRTH')
VistA.write('03/02/2001')
VistA.wait('SOCIAL SECURITY NUMBER')
VistA.write('000000112')
VistA.wait('TYPE')
VistA.write('NON-VETERAN')
VistA.wait('PATIENT VETERAN')
VistA.write('NO')
VistA.wait('SERVICE CONNECTED')
VistA.write('NO')
VistA.wait('MULTIPLE BIRTH INDICATOR')
VistA.write('')
VistA.wait('//')
VistA.write('^\r')
VistA.wait('MAIDEN NAME:')
VistA.write('')
VistA.wait('[CITY]')
VistA.write('Santa Monica')
VistA.wait('[STATE]')
VistA.write('California')
VistA.wait('ALIAS')
VistA.write('')
if VistA.type=='cache':
  # Enter in more information about the patient.
  VistA.wait('exit:')
  VistA.write('\r')
  VistA.wait('Patient Data')
  VistA.write('Y')
  VistA.wait('QUIT')
  VistA.write('4')
  VistA.wait('COUNTRY')
  VistA.write('')
  VistA.wait('STREET ADDRESS')
  VistA.write('834 Ocean Vista Avenue\r')
  VistA.wait('ZIP')
  VistA.write('90401')
  VistA.wait('CITY')
  VistA.write('1')
  VistA.wait('PHONE NUMBER')
  VistA.write('310-555-2233\r\r')
  VistA.wait('changes')
  VistA.write('Y\r')
  VistA.wait('QUIT')
  VistA.write('\r\r')
  VistA.wait('QUIT')
  VistA.write('1')
  VistA.wait('PRIMARY NOK')
  VistA.write('Carter,David J Sr')
  VistA.wait('RELATIONSHIP')
  VistA.write('FATHER')
  VistA.wait('ADDRESS')
  VistA.write('Y')
  VistA.wait('WORK PHONE')
  VistA.write('310-555-9876\r^')
  VistA.wait('condition')
  VistA.write('N')
  VistA.wait('today')
  VistA.write('Y\r')
else:
  # Workaround to reconnect after GT.M crash
  '''
  Fileman-based Joe Clerk User Setup
  -- Workaround: Can't use Select User Management Option at this point as it causes unexpected exit from menu
  '''
  VistA=ConnectToMUMPS("${VISTA_BINARY_DIR}/Testing/Log/PostImport1A.log","${VISTA_CACHE_INSTANCE}","${VISTA_CACHE_NAMESPACE}")
VistA.wait(PROMPT,60)
VistA.write('S DUZ=1 D Q^DI')
VistA.wait('Select OPTION:')
VistA.write('1')
VistA.wait('INPUT TO WHAT FILE')
VistA.write('200')
VistA.wait('EDIT WHICH FIELD')
VistA.write('PRIMARY MENU OPTION')
VistA.wait('THEN EDIT FIELD')
VistA.write('SECONDARY MENU OPTIONS\r')
VistA.wait('THEN EDIT FIELD')
VistA.write('CPRS TAB\r')
VistA.wait('THEN EDIT FIELD')
VistA.write('ACCESS CODE')
VistA.wait('THEN EDIT FIELD')
VistA.write('VERIFY CODE\r1')
VistA.wait('THEN EDIT FIELD')
VistA.write('DIVISION\r')
VistA.wait('THEN EDIT FIELD')
VistA.write('SERVICE/SECTION')
VistA.wait('THEN EDIT FIELD')
VistA.write('MULTIPLE SIGN-ON LIMIT')
VistA.wait('THEN EDIT FIELD')
VistA.write('MULTIPLE SIGN-ON\r1')
VistA.wait('THEN EDIT FIELD')
VistA.write('Language')
VistA.wait('THEN EDIT FIELD')
VistA.write('RESTRICT PATIENT SELECTION')
VistA.wait('THEN EDIT FIELD')
VistA.write('KEYS\r1\r')
VistA.wait('THEN EDIT FIELD')
VistA.write('\r')
VistA.wait('Select NEW PERSON NAME')
VistA.write('Clerk, Joe')
VistA.wait('Are you adding')
VistA.write('YES')
VistA.wait('NEW PERSON INITIAL')
VistA.write('JC\r')
VistA.wait('PRIMARY MENU OPTION')
VistA.write('XUCORE')
VistA.wait('Select SECONDARY MENU OPTIONS:')
VistA.write('GMPL DATA ENTRY\rY\r\r')
VistA.wait('Select CPRS TAB:')
VistA.write('COR\rY\rT\r\r')
VistA.wait('Want to edit ACCESS CODE')
VistA.write('Y')
VistA.wait('Enter a new ACCESS CODE')
VistA.write('fakeclerk1\rfakeclerk1')
VistA.wait('Want to edit VERIFY CODE')
VistA.write('Y')
VistA.wait('Enter a new VERIFY CODE')
VistA.write('2Cle!@#$\r2Cle!@#$')
VistA.wait('Select DIVISION')
VistA.write('VISTA HEALTH CARE\rY\r')
VistA.wait('SERVICE/SECTION:')
VistA.write('IRM')
VistA.wait('MULTIPLE SIGN-ON LIMIT')
VistA.write('99')
VistA.wait('MULTIPLE SIGN-ON')
VistA.write('ALLOWED')
VistA.wait('LANGUAGE')
VistA.write('1')
VistA.wait('RESTRICT PATIENT SELECTION')
VistA.write('NO')
VistA.wait('Select KEY')
VistA.write('ORELSE\r')
VistA.wait('Select KEY')
VistA.write('PROVIDER\r1\r\r')
VistA.wait('Select NEW PERSON NAME')
VistA.write('\r\r\r')

VistA.wait(PROMPT,60)
VistA.write('D ^ZU')
VistA.wait('ACCESS CODE:')
VistA.write('SM1234')
VistA.wait('VERIFY CODE:')
VistA.write('SM12345!!')
VistA.wait('//')
VistA.write('')

#Set Up the Quick Order Menu for the Strep Throat
VistA.wait('Systems Manager Menu')
VistA.write('CPRS Configuration')
VistA.wait('CPRS Configuration')
VistA.write('MM')
VistA.wait('Order Menu Management')
VistA.write('QO')
VistA.wait('Select QUICK ORDER NAME')
VistA.write('LRZ STREP TEST')
VistA.wait('Are you adding')
VistA.write('Y')
VistA.wait('TYPE OF QUICK ORDER')
VistA.write('LAB\r')
VistA.wait('DISPLAY TEXT')
VistA.write('STREP TEST')
VistA.wait('VERIFY ORDER')
VistA.write('Y')
VistA.wait('DESCRIPTION')
VistA.write('N\r')
VistA.wait('Lab Test')
VistA.write('STREP\r2')
VistA.wait('Collected By')
VistA.write('SP')
VistA.wait('Collection Sample')
VistA.write('SWAB\r')
VistA.wait('Collection Date/Time')
VistA.write('TODAY\r')
VistA.wait('How often')
VistA.write('ONCE')
VistA.wait('PLACE//')
VistA.write('\r\r')
VistA.wait('Option')
VistA.write('ST')
VistA.wait('Select ORDER SET NAME')
VistA.write('STREP TEST')
VistA.wait('Are you adding')
VistA.write('Y')
VistA.wait('Do you wish to copy')
VistA.write('No\r')
VistA.wait('DISPLAY TEXT')
VistA.write('Strep Test\r\r\r')
VistA.wait('COMPONENT SEQUENCE')
VistA.write('10\r')
VistA.wait('ITEM:')
VistA.write('LRZ STREP TEST\r\r\r\r') # Return to EVE menu

#Create a new Order Menu
VistA.wait('Systems Manager Menu')
VistA.write('CPRS Configuration') # We can jump straight to the CPRS (Clin Coord) menu
VistA.wait('CPRS Configuration')
VistA.write('MM') # Order Menu Management
VistA.wait('Order Menu Management')
VistA.write('MN') # Enter/edit order menus
VistA.wait('ORDER MENU:')
VistA.write('ORZ GEN MED WRITE ORDERS LIST') # New menu name
VistA.wait('Are you adding')
VistA.write('Y')
VistA.wait('Do you wish to copy an existing menu')
VistA.write('N')
VistA.wait('DISPLAY TEXT')
VistA.write('') # Ignored by GUI
VistA.wait('Edit') # DESCRIPTION field
VistA.write('N')
#VistA.write('General Medicine Write Orders list') # Menu description
#VistA.wait('2')
#VistA.write('') # End of DESCRIPTION
#VistA.wait('EDIT') # Editor options
#VistA.write('') # We are done with the DESCRIPTION
VistA.wait('COLUMN WIDTH')
VistA.write('80') # Default to 80 characters
VistA.wait('MNEMONIC WIDTH')
VistA.write('') # Ignored by GUI
VistA.wait('PATH SWITCH')
VistA.write('') # Ignored by GUI
VistA.wait('ENTRY ACTION')
VistA.write('') # Shown because we have programmer access - Ignore this field
VistA.wait('EXIT ACTION')
VistA.write('') # Shown because we have programmer access - Ignore this field
# Begin ScreenMan form
VistA.wait('Action')
VistA.write('Add')
VistA.wait('Add')
VistA.write('Menu Items') # Add Menu Items to this Order Menu
# Add items to menu - repeat for each menu item
# Begin 'Add New Orders' menu
VistA.wait('ITEM')
VistA.write('OR ADD MENU CLINICIAN')
VistA.wait('ROW')
VistA.write('1')
VistA.wait('COLUMN')
VistA.write('1')
VistA.wait('DISPLAY TEXT')
VistA.write('')
VistA.wait('MNEMONIC')
VistA.write('')
# End 'Add New Orders'
# Begin 'Allergies' package menu
VistA.wait('ITEM')
VistA.write('GMRAOR ALLERGY ENTER/EDIT')
VistA.wait('ROW')
VistA.write('2')
VistA.wait('COLUMN')
VistA.write('1')
VistA.wait('DISPLAY TEXT')
VistA.write('')
VistA.wait('MNEMONIC')
VistA.write('')
# End 'Allergies'
# Begin 'Diet' package menu
VistA.wait('ITEM')
VistA.write('FHW1')
VistA.wait('ROW')
VistA.write('3')
VistA.wait('COLUMN')
VistA.write('1')
VistA.wait('DISPLAY TEXT')
VistA.write('')
VistA.wait('MNEMONIC')
VistA.write('')
# End 'Diet'
# Begin 'Meds, Inpatient' package menu
VistA.wait('ITEM')
VistA.write('PSJ OR PAT OE')
VistA.wait('ROW')
VistA.write('4')
VistA.wait('COLUMN')
VistA.write('1')
VistA.wait('DISPLAY TEXT')
VistA.write('')
VistA.wait('MNEMONIC')
VistA.write('')
# End 'Meds, Inpatient'
# Begin 'Meds, Non-VA' package menu
VistA.wait('ITEM')
VistA.write('PSH OERR')
VistA.wait('ROW')
VistA.write('5')
VistA.wait('COLUMN')
VistA.write('1')
VistA.wait('DISPLAY TEXT')
VistA.write('')
VistA.wait('MNEMONIC')
VistA.write('')
# End 'Meds, Non-VA'
# Begin 'Meds, Outpatient' package menu
VistA.wait('ITEM')
VistA.write('PSO OERR')
VistA.wait('ROW')
VistA.write('6')
VistA.wait('COLUMN')
VistA.write('1')
VistA.wait('DISPLAY TEXT')
VistA.write('')
VistA.wait('MNEMONIC')
VistA.write('')
# End 'Meds, Outpatient'
# Begin 'IV Fluids' package menu
VistA.wait('ITEM')
VistA.write('PSJI OR PAT FLUID OE')
VistA.wait('ROW')
VistA.write('7')
VistA.wait('COLUMN')
VistA.write('1')
VistA.wait('DISPLAY TEXT')
VistA.write('')
VistA.wait('MNEMONIC')
VistA.write('')
# End 'IV Fluids'
# Begin 'Lab Tests' package menu
VistA.wait('ITEM')
VistA.write('LR OTHER LAB TESTS')
VistA.wait('ROW')
VistA.write('8')
VistA.wait('COLUMN')
VistA.write('1')
VistA.wait('DISPLAY TEXT')
VistA.write('')
VistA.wait('MNEMONIC')
VistA.write('')
# End 'Lab Tests'
# Begin 'Imaging' package menu
VistA.wait('ITEM')
VistA.write('RA OERR EXAM')
VistA.wait('ROW')
VistA.write('9')
VistA.wait('COLUMN')
VistA.write('1')
VistA.wait('DISPLAY TEXT')
VistA.write('')
VistA.wait('MNEMONIC')
VistA.write('')
# End 'Imaging'
# Begin 'Consult' package menu
VistA.wait('ITEM')
VistA.write('GMRCOR CONSULT')
VistA.wait('ROW')
VistA.write('10')
VistA.wait('COLUMN')
VistA.write('1')
VistA.wait('DISPLAY TEXT')
VistA.write('')
VistA.wait('MNEMONIC')
VistA.write('')
# End 'Consult'
# Begin 'Procedure' package menu
VistA.wait('ITEM')
VistA.write('GMRCOR REQUEST')
VistA.wait('ROW')
VistA.write('11')
VistA.wait('COLUMN')
VistA.write('1')
VistA.wait('DISPLAY TEXT')
VistA.write('')
VistA.wait('MNEMONIC')
VistA.write('')
# End 'Procedure'
# Begin 'Vitals' package menu
VistA.wait('ITEM')
VistA.write('GMRVOR')
VistA.wait('CHOOSE') # There is more than one GMRVOR* menu
VistA.write('1') # GMRVOR is the entire menu name and is the first one
VistA.wait('ROW')
VistA.write('12')
VistA.wait('COLUMN')
VistA.write('1')
VistA.wait('DISPLAY TEXT')
VistA.write('')
VistA.wait('MNEMONIC')
VistA.write('')
# End 'Vitals'
# Begin 'Text Only Order' package menu
VistA.wait('ITEM')
VistA.write('OR GXTEXT WORD PROCESSING ORDER')
VistA.wait('ROW')
VistA.write('13')
VistA.wait('COLUMN')
VistA.write('1')
VistA.wait('DISPLAY TEXT')
VistA.write('')
VistA.wait('MNEMONIC')
VistA.write('')
# End 'Text Only Order'
# Begin 'STREP TEST' quick order menu
VistA.wait('ITEM')
VistA.write('LRZ STREP TEST')
VistA.wait('ROW')
VistA.write('14')
VistA.wait('COLUMN')
VistA.write('1')
VistA.wait('DISPLAY TEXT')
VistA.write('')
VistA.wait('MNEMONIC')
VistA.write('')
# End 'STREP TEST'
VistA.wait('ITEM')
VistA.write('') # Done adding menus
VistA.wait('Action')
VistA.write('Quit') # Done editing this menu
VistA.wait('Order Menu Management') # Need to get to CPRS Manager Menu
VistA.write('General Parameter Tools')
VistA.wait('General Parameter Tools') # The System Manager has this as a secondary menu (can jump to it)
VistA.write('EP') # Edit Parameter
VistA.wait('PARAMETER DEFINITION NAME')
VistA.write('ORWDX WRITE ORDERS LIST') # Parameter used to control Write Orders list
VistA.wait('selection')
VistA.write('8') # Set it for the entire System
VistA.wait('Order Dialog')
VistA.write('ORZ GEN MED WRITE ORDERS LIST') # Order menu we want to use
VistA.write('\r\r\r\r') # we are done. Stay at the EVE menu

#Give all users of the instance permission to mark allergies as "Entered in error')
VistA.wait('Systems Manager Menu')
VistA.write('CPRS Configuration')
VistA.wait('CPRS Configuration')
VistA.write('GUI PARAMETERS')
VistA.wait('GUI Parameters')
VistA.write('GUI Mark Allergy Entered in Error')
VistA.wait('Enter selection')
VistA.write('4\rY\r\r')


#Give Mary Smith permission to create shared templates

VistA.wait('Systems Manager Menu')
VistA.write('TIU Maintenance')
VistA.wait('TIU Maintenance')
VistA.write('User Class Management')
VistA.wait('User Class Management')
VistA.write('List Membership by User')
VistA.wait('Select USER')
VistA.write('MS\rAdd\rClinical Coordinator\rT-1\r\r\r')
VistA.wait('Option')
VistA.write('\r')


# Add clinic via the XUP menu to allow scheduling
VistA.wait('Systems Manager Menu')
VistA.write('Core Applications')
VistA.wait('Core Applications')
VistA.write('Scheduling Manager')
VistA.wait('Scheduling Manager\'s Menu')
VistA.write('Supervisor Menu')
VistA.wait('Supervisor Menu')
VistA.write('Set up a Clinic')
VistA.wait('Select CLINIC NAME')
VistA.write('VISTA HEALTH CARE')
VistA.wait('Are you adding')
VistA.write('Y')
VistA.wait('NAME')
VistA.write('')
VistA.wait('ABBREVIATION')
VistA.write('VHC')
VistA.wait('CLINIC MEETS')
VistA.write('Y')
VistA.wait('SERVICE')
VistA.write('M')
VistA.wait('NON-COUNT CLINIC')
VistA.write('N')
VistA.wait('STOP CODE NUMBER')
VistA.write('301\r\r')
VistA.wait('TELEPHONE')
VistA.write('555-555-1414\r\r\r\r\r\r\r\r\r\r\r')
VistA.wait('ALLOWABLE CONSECUTIVE NO-SHOWS')
VistA.write('0')
VistA.wait('FUTURE BOOKING')
VistA.write('90')
VistA.wait('HOUR CLINIC DISPLAY BEGINS')
VistA.write('8\r')
VistA.wait('AUTO-REBOOK')
VistA.write('90\r\r\r\r\r')
VistA.wait('MAXIMUM')
VistA.write('0\r')
VistA.wait('LENGTH OF APP')
VistA.write('30')
VistA.wait('VARIABLE')
VistA.write('Yes')
VistA.wait('DISPLAY INCREMENTS PER HOUR')
VistA.write('2')
dates = ['JUL 2,2012','JUL 3,2012','JUL 4,2012','JUL 5,2012','JUL 6,2012']
for date in dates:
  VistA.wait('AVAILABILITY DATE')
  VistA.write(date)
  VistA.wait('TIME')
  VistA.write('0800-1200\r4')
  VistA.wait('TIME')
  VistA.write('1230-1500\r4')
  VistA.wait('TIME')
  VistA.write('')
  VistA.wait('PATTERN OK')
  VistA.write('Yes')
VistA.wait('AVAILABILITY DATE')
VistA.write('\r\r\r\r\r')
VistA.wait('Do you really want to halt?')
VistA.write('Y')


time.sleep(10)
#Set up the Doctors electronic signature
VistA=ConnectToMUMPS("${VISTA_BINARY_DIR}/Testing/Log/PostImportSignature.log","${VISTA_CACHE_INSTANCE}","${VISTA_CACHE_NAMESPACE}")
if ('${VISTA_CACHE_USERNAME}' and '${VISTA_CACHE_PASSWORD}'):
  VistA.login('${VISTA_CACHE_USERNAME}','${VISTA_CACHE_PASSWORD}')
if VistA.type=='cache':
  try:
    VistA.ZN('${VISTA_CACHE_NAMESPACE}')
  except IndexError,no_namechange:
    pass
VistA.wait(PROMPT,60)
VistA.write('D ^ZU')
VistA.wait('ACCESS CODE:')
VistA.write('fakedoc1')
VistA.wait('VERIFY CODE:')
VistA.write('2Doc!@#$')
VistA.wait('verify code:')
VistA.write('2Doc!@#$')
VistA.wait('VERIFY CODE:')
VistA.write('1Doc!@#$')
VistA.wait('right:')
VistA.write('1Doc!@#$')
VistA.wait('TYPE NAME')
VistA.write('')
VistA.wait('Core Applications')
VistA.write('USER\'s TOOLBOX')
VistA.wait('Toolbox')
VistA.write('ELE')
VistA.wait('INITIAL')
VistA.write('')
VistA.wait('SIGNATURE BLOCK PRINTED NAME')
VistA.write('')
VistA.wait('SIGNATURE BLOCK TITLE')
VistA.write('\r\r\r')
VistA.wait('SIGNATURE CODE')
VistA.write('ROBA123')
VistA.wait('SIGNATURE CODE FOR VERIFICATION')
VistA.write('ROBA123')
VistA.wait('Toolbox')
VistA.write('\r\r\r')

#Set up the Nurse electronic signature
VistA=ConnectToMUMPS("${VISTA_BINARY_DIR}/Testing/Log/PostImport4.log","${VISTA_CACHE_INSTANCE}","${VISTA_CACHE_NAMESPACE}")
if ('${VISTA_CACHE_USERNAME}' and '${VISTA_CACHE_PASSWORD}'):
  VistA.login('${VISTA_CACHE_USERNAME}','${VISTA_CACHE_PASSWORD}')
if VistA.type=='cache':
  try:
    VistA.ZN('${VISTA_CACHE_NAMESPACE}')
  except IndexError,no_namechange:
    pass
VistA.wait(PROMPT,60)
VistA.write('D ^ZU')
VistA.wait('ACCESS CODE:')
VistA.write('fakenurse1')
VistA.wait('VERIFY CODE:')
VistA.write('2Nur!@#$')
VistA.wait('verify code:')
VistA.write('2Nur!@#$')
VistA.wait('VERIFY CODE:')
VistA.write('1Nur!@#$')
VistA.wait('right:')
VistA.write('1Nur!@#$')
VistA.wait('//')
VistA.write('')
VistA.wait('Core Applications')
VistA.write('USER\'s TOOLBOX')
VistA.wait('Toolbox')
VistA.write('ELE')
VistA.wait('INITIAL')
VistA.write('')
VistA.wait('SIGNATURE BLOCK PRINTED NAME')
VistA.write('')
VistA.wait('SIGNATURE BLOCK TITLE')
VistA.write('\r\r\r')
VistA.wait('SIGNATURE CODE')
VistA.write('MARYS123')
VistA.wait('SIGNATURE CODE FOR VERIFICATION')
VistA.write('MARYS123')
VistA.wait('Toolbox')
VistA.write('^\r\r\r\r\r\r')

#Set up the Clerk verification code
VistA=ConnectToMUMPS("${VISTA_BINARY_DIR}/Testing/Log/PostImport5.log","${VISTA_CACHE_INSTANCE}","${VISTA_CACHE_NAMESPACE}")
if ('${VISTA_CACHE_USERNAME}' and '${VISTA_CACHE_PASSWORD}'):
  VistA.login('${VISTA_CACHE_USERNAME}','${VISTA_CACHE_PASSWORD}')
if VistA.type=='cache':
  try:
    VistA.ZN('${VISTA_CACHE_NAMESPACE}')
  except IndexError,no_namechange:
    pass
VistA.wait(PROMPT,60)
VistA.write('D ^ZU')
VistA.wait('ACCESS CODE:')
VistA.write('fakeclerk1')
VistA.wait('VERIFY CODE:')
VistA.write('2Cle!@#$')
VistA.wait('verify code:')
VistA.write('2Cle!@#$')
VistA.wait('VERIFY CODE:')
VistA.write('1Cle!@#$')
VistA.wait('right:')
VistA.write('1Cle!@#$')
VistA.wait('//')
VistA.write('^\r\r\r\r\r\r')
