#---------------------------------------------------------------------------
# Copyright 2011 The Open Source Electronic Health Record Agent
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#---------------------------------------------------------------------------

## Post Import Setup
##

'''
This script sets up VistA after the Routines and Globals import is complete

@copyright The Open Source Electronic Health Record Agent
@license http://www.apache.org/licenses/LICENSE-2.0
'''
import sys
sys.path = ['${VISTA_SOURCE_DIR}/Python/vista'] + sys.path


import os
import time
import OSEHRASetup
from OSEHRAHelper import ConnectToMUMPS,PROMPT

VistA=ConnectToMUMPS("${VISTA_BINARY_DIR}/Testing/Log/PostImport1.log","${VISTA_CACHE_INSTANCE}","${VISTA_CACHE_NAMESPACE}")
if ('${VISTA_CACHE_USERNAME}' and '${VISTA_CACHE_PASSWORD}'):
  VistA.login('${VISTA_CACHE_USERNAME}','${VISTA_CACHE_PASSWORD}')
if VistA.type=='cache':
  try:
    VistA.ZN('${VISTA_CACHE_NAMESPACE}')
  except IndexError,no_namechange:
    pass
VistA.wait(PROMPT,60)
#---------------------------------------------------------------------
#- SECTION TO SETUP DEMO VistA SITE -
#---------------------------------------------------------------------

#Initialize FileMan
# Pass a site name from CMake and have a default site name of 6161

OSEHRASetup.initializeFileman(VistA,"${TEST_VISTA_SETUP_SITE_NAME}","6161")

# Setup the primary HFS directory from the
# Kernel System Parameters file via FileMan
#
# Use an "@" to remove or set a new file path.


OSEHRASetup.setupPrimaryHFSDir(VistA,'${TEST_VISTA_SETUP_PRIMARY_HFS_DIRECTORY}')

# Ensure that the null device is correctly configured by adding
# a $I for the correct platform rather than VMS and removing
# sign-on capabilities

OSEHRASetup.configureNULLDevice(VistA)

# Create and Christen the New Domain:
# Enter the site name into the DOMAIN file then
# christen the domain via the XMUDCHR routine.
# Finally, add entries of new domain to
# Kernel System Parameters and RPC Broker Site Parameters
# and re-index both files.

OSEHRASetup.setupVistADomain(VistA,"${TEST_VISTA_SETUP_SITE_NAME}")

# Set up the proper Box:Volume pair
# VistA.getenv will query the instance for the local Box:Volume pair
# and save the result as the "boxvol" parameter of the VistA object
# IE. It can be printed via 'print VistA.boxvol'
OSEHRASetup.setupBoxVolPair(VistA,'${TEST_VISTA_SETUP_VOLUME_SET}','${TEST_VISTA_SETUP_SITE_NAME}','${VISTA_TCP_PORT}')
OSEHRASetup.setupVolumeSet(VistA,"${TEST_VISTA_SETUP_SITE_NAME}",'${TEST_VISTA_SETUP_VOLUME_SET}',"${VISTA_CACHE_NAMESPACE}")

# Start TaskMan
if VistA.type=='cache':
  # If using Cache as the M environment, Schedule a task to start the
  # XWB Listener Starter on the start up of TaskMan
  OSEHRASetup.scheduleXWBListener(VistA)
# Start TaskMan through the XUP Menu system.
OSEHRASetup.restartTaskMan(VistA)

#Create the System Manager
OSEHRASetup.addSystemManager(VistA)

# Open FileMan and create the VistA Health Care institution
OSEHRASetup.addInstitution(VistA,"VISTA HEALTH CARE","6100")


# Create the Medical Center Division of
# the VistA Health Care institution

OSEHRASetup.addDivision(VistA,'VISTA MEDICAL CENTER',"6101","6100")

# The Sikuli test for CPRS orders a Streptozyme test for the patient
# This information ensures the test can be ordered at the VistA Health care
# Facility
OSEHRASetup.setupStrepTest(VistA)

#Register the Vitals DLL and GUI Versions within the XPAR Menu
OSEHRASetup.registerVitalsCPRS(VistA)

OSEHRASetup.signonZU(VistA,"SM1234","SM1234!!")

OSEHRASetup.addDoctor(VistA,"ALEXANDER,ROBERT","RA","000000029","M","fakedoc1","2Doc!@#$")

#Enter the Nurse Mary Smith
OSEHRASetup.addNurse(VistA,'SMITH,MARY','MS','000000030','F','fakenurse1','2Nur!@#$')

# Add a clerk user with permissions for Problem List Data entry
OSEHRASetup.addClerk(VistA,"CLERK,JOE","JC","000000112","M","fakeclerk1","2Cle!@#$")
#Create a new Order Menu
OSEHRASetup.createOrderMenu(VistA)

#Give all users of the instance permission to mark allergies as "Entered in error')
OSEHRASetup.addAllergiesPermission(VistA)

#Give Mary Smith permission to create shared templates
OSEHRASetup.addTemplatePermission(VistA,"MS")


# Add clinic via the XUP menu to allow scheduling
OSEHRASetup.createClinic(VistA,'VISTA HEALTH CARE','VHC','M')

time.sleep(10)
#Set up the Doctors electronic signature
VistA=ConnectToMUMPS("${VISTA_BINARY_DIR}/Testing/Log/PostImportSignature.log","${VISTA_CACHE_INSTANCE}","${VISTA_CACHE_NAMESPACE}")
if ('${VISTA_CACHE_USERNAME}' and '${VISTA_CACHE_PASSWORD}'):
  VistA.login('${VISTA_CACHE_USERNAME}','${VISTA_CACHE_PASSWORD}')
if VistA.type=='cache':
  try:
    VistA.ZN('${VISTA_CACHE_NAMESPACE}')
  except IndexError,no_namechange:
    pass
OSEHRASetup.setupElectronicSignature(VistA,"fakedoc1",'2Doc!@#$','1Doc!@#$','ROBA123')

#Set up the Nurse electronic signature
VistA=ConnectToMUMPS("${VISTA_BINARY_DIR}/Testing/Log/PostImport4.log","${VISTA_CACHE_INSTANCE}","${VISTA_CACHE_NAMESPACE}")
if ('${VISTA_CACHE_USERNAME}' and '${VISTA_CACHE_PASSWORD}'):
  VistA.login('${VISTA_CACHE_USERNAME}','${VISTA_CACHE_PASSWORD}')
if VistA.type=='cache':
  try:
    VistA.ZN('${VISTA_CACHE_NAMESPACE}')
  except IndexError,no_namechange:
    pass
OSEHRASetup.setupElectronicSignature(VistA,"fakenurse1","2Nur!@#$","1Nur!@#$","MARYS123")

#Set up the Clerk verification code
VistA=ConnectToMUMPS("${VISTA_BINARY_DIR}/Testing/Log/PostImport5.log","${VISTA_CACHE_INSTANCE}","${VISTA_CACHE_NAMESPACE}")
if ('${VISTA_CACHE_USERNAME}' and '${VISTA_CACHE_PASSWORD}'):
  VistA.login('${VISTA_CACHE_USERNAME}','${VISTA_CACHE_PASSWORD}')
if VistA.type=='cache':
  try:
    VistA.ZN('${VISTA_CACHE_NAMESPACE}')
  except IndexError,no_namechange:
    pass
OSEHRASetup.setupElectronicSignature(VistA,"fakeclerk1","2Cle!@#$","1Cle!@#$","CLERKJ123")

# Add patient to the instance using the Clerk user
# and the Register a Patient menu option.
# The patient can be a veteran but not service connected
VistA=ConnectToMUMPS("${VISTA_BINARY_DIR}/Testing/Log/AddPatients.log","${VISTA_CACHE_INSTANCE}","${VISTA_CACHE_NAMESPACE}")
if ('${VISTA_CACHE_USERNAME}' and '${VISTA_CACHE_PASSWORD}'):
  VistA.login('${VISTA_CACHE_USERNAME}','${VISTA_CACHE_PASSWORD}')
if VistA.type=='cache':
  try:
    VistA.ZN('${VISTA_CACHE_NAMESPACE}')
  except IndexError,no_namechange:
    pass
# Function arguments:
# VistA, Patient Name, Patient Sex,Patient DOB, Patient SSN, Patient Veteran?
OSEHRASetup.signonZU(VistA,"fakeclerk1","1Cle!@#$")
OSEHRASetup.addPatient(VistA,"Carter,David JR","M","03/02/2001","000000113","N")