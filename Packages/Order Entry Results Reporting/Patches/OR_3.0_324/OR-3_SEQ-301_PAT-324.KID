Released OR*3*324 SEQ #301
Extracted from mail message
**KIDS**:OR*3.0*324^

**INSTALL NAME**
OR*3.0*324
"BLD",8499,0)
OR*3.0*324^ORDER ENTRY/RESULTS REPORTING^0^3111122^y
"BLD",8499,1,0)
^^14^14^3100608^
"BLD",8499,1,1,0)
This patch will correct the following issues
"BLD",8499,1,2,0)
When a patient is discharged and the user, at the Review Delayed Orders 
"BLD",8499,1,3,0)
prompt, enters "^^" or lets the system timeout the discharge process does
"BLD",8499,1,4,0)
not fully complete. Once the Review Delayed Orders prompt is exited in one
"BLD",8499,1,5,0)
of the ways described above, processes that are supposed to take place
"BLD",8499,1,6,0)
during the discharge don't happen. This is causing some orders to not
"BLD",8499,1,7,0)
discontinue.
"BLD",8499,1,8,0)
 
"BLD",8499,1,9,0)
It was discovered that if a patient is discharged and only has pharmacy 
"BLD",8499,1,10,0)
and/or dietetic orders, the auto discontinue of these orders is not being
"BLD",8499,1,11,0)
recorded in the OE/RR PATIENT EVENT file (#100.2). There is also a rare
"BLD",8499,1,12,0)
circumstance in which if the user discharging the patient is assigned to a
"BLD",8499,1,13,0)
different division than the location of the ward. The entry to the OE/RR
"BLD",8499,1,14,0)
PATIENT EVENT file (#100.2) is not created.
"BLD",8499,4,0)
^9.64PA^^
"BLD",8499,6)
1^
"BLD",8499,6.3)
2
"BLD",8499,"ABPKG")
n
"BLD",8499,"KRN",0)
^9.67PA^779.2^20
"BLD",8499,"KRN",.4,0)
.4
"BLD",8499,"KRN",.401,0)
.401
"BLD",8499,"KRN",.402,0)
.402
"BLD",8499,"KRN",.403,0)
.403
"BLD",8499,"KRN",.5,0)
.5
"BLD",8499,"KRN",.84,0)
.84
"BLD",8499,"KRN",3.6,0)
3.6
"BLD",8499,"KRN",3.8,0)
3.8
"BLD",8499,"KRN",9.2,0)
9.2
"BLD",8499,"KRN",9.8,0)
9.8
"BLD",8499,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",8499,"KRN",9.8,"NM",1,0)
ORCACT3^^0^B7080060
"BLD",8499,"KRN",9.8,"NM",2,0)
ORMEVNT^^0^B75401539
"BLD",8499,"KRN",9.8,"NM",3,0)
ORMEVNT1^^0^B78396667
"BLD",8499,"KRN",9.8,"NM","B","ORCACT3",1)

"BLD",8499,"KRN",9.8,"NM","B","ORMEVNT",2)

"BLD",8499,"KRN",9.8,"NM","B","ORMEVNT1",3)

"BLD",8499,"KRN",19,0)
19
"BLD",8499,"KRN",19,"NM",0)
^9.68A^^
"BLD",8499,"KRN",19.1,0)
19.1
"BLD",8499,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",8499,"KRN",101,0)
101
"BLD",8499,"KRN",101,"NM",0)
^9.68A^^
"BLD",8499,"KRN",409.61,0)
409.61
"BLD",8499,"KRN",771,0)
771
"BLD",8499,"KRN",779.2,0)
779.2
"BLD",8499,"KRN",870,0)
870
"BLD",8499,"KRN",8989.51,0)
8989.51
"BLD",8499,"KRN",8989.52,0)
8989.52
"BLD",8499,"KRN",8994,0)
8994
"BLD",8499,"KRN","B",.4,.4)

"BLD",8499,"KRN","B",.401,.401)

"BLD",8499,"KRN","B",.402,.402)

"BLD",8499,"KRN","B",.403,.403)

"BLD",8499,"KRN","B",.5,.5)

"BLD",8499,"KRN","B",.84,.84)

"BLD",8499,"KRN","B",3.6,3.6)

"BLD",8499,"KRN","B",3.8,3.8)

"BLD",8499,"KRN","B",9.2,9.2)

"BLD",8499,"KRN","B",9.8,9.8)

"BLD",8499,"KRN","B",19,19)

"BLD",8499,"KRN","B",19.1,19.1)

"BLD",8499,"KRN","B",101,101)

"BLD",8499,"KRN","B",409.61,409.61)

"BLD",8499,"KRN","B",771,771)

"BLD",8499,"KRN","B",779.2,779.2)

"BLD",8499,"KRN","B",870,870)

"BLD",8499,"KRN","B",8989.51,8989.51)

"BLD",8499,"KRN","B",8989.52,8989.52)

"BLD",8499,"KRN","B",8994,8994)

"BLD",8499,"QUES",0)
^9.62^^
"BLD",8499,"REQB",0)
^9.611^2^2
"BLD",8499,"REQB",1,0)
OR*3.0*215^2
"BLD",8499,"REQB",2,0)
OR*3.0*243^2
"BLD",8499,"REQB","B","OR*3.0*215",1)

"BLD",8499,"REQB","B","OR*3.0*243",2)

"MBREQ")
0
"PKG",188,-1)
1^1
"PKG",188,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",188,20,0)
^9.402P^^
"PKG",188,22,0)
^9.49I^1^1
"PKG",188,22,1,0)
3.0^2971217^2981113^1
"PKG",188,22,1,"PAH",1,0)
324^3111122^520665228
"PKG",188,22,1,"PAH",1,1,0)
^^14^14^3111122
"PKG",188,22,1,"PAH",1,1,1,0)
This patch will correct the following issues
"PKG",188,22,1,"PAH",1,1,2,0)
When a patient is discharged and the user, at the Review Delayed Orders 
"PKG",188,22,1,"PAH",1,1,3,0)
prompt, enters "^^" or lets the system timeout the discharge process does
"PKG",188,22,1,"PAH",1,1,4,0)
not fully complete. Once the Review Delayed Orders prompt is exited in one
"PKG",188,22,1,"PAH",1,1,5,0)
of the ways described above, processes that are supposed to take place
"PKG",188,22,1,"PAH",1,1,6,0)
during the discharge don't happen. This is causing some orders to not
"PKG",188,22,1,"PAH",1,1,7,0)
discontinue.
"PKG",188,22,1,"PAH",1,1,8,0)
 
"PKG",188,22,1,"PAH",1,1,9,0)
It was discovered that if a patient is discharged and only has pharmacy 
"PKG",188,22,1,"PAH",1,1,10,0)
and/or dietetic orders, the auto discontinue of these orders is not being
"PKG",188,22,1,"PAH",1,1,11,0)
recorded in the OE/RR PATIENT EVENT file (#100.2). There is also a rare
"PKG",188,22,1,"PAH",1,1,12,0)
circumstance in which if the user discharging the patient is assigned to a
"PKG",188,22,1,"PAH",1,1,13,0)
different division than the location of the ward. The entry to the OE/RR
"PKG",188,22,1,"PAH",1,1,14,0)
PATIENT EVENT file (#100.2) is not created.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","ORCACT3")
0^1^B7080060^B6858691
"RTN","ORCACT3",1,0)
ORCACT3 ;SLC/MKB-Delayed Orders ; 6/8/10 9:58am
"RTN","ORCACT3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**7,45,48,79,141,324**;Dec 17, 1997;Build 2
"RTN","ORCACT3",3,0)
EN ; -- main entry point
"RTN","ORCACT3",4,0)
 K ORVP D EN^ORQPT Q:'$G(ORVP)
"RTN","ORCACT3",5,0)
 S ORTAB="DELAY" D EN^VALM("OR DELAYED ORDERS")
"RTN","ORCACT3",6,0)
 Q
"RTN","ORCACT3",7,0)
 ;
"RTN","ORCACT3",8,0)
EN1(ORVP) ; -- entry point for use with DGPM MOVEMENT EVENTS
"RTN","ORCACT3",9,0)
 Q:'$$ACCESS^ORCHTAB  ;CPRS not in user's option menu tree
"RTN","ORCACT3",10,0)
 Q:'$G(ORVP)  Q:'$$REVIEW(DFN)
"RTN","ORCACT3",11,0)
 N ORTAB,DFN ;protect DFN within event protocol
"RTN","ORCACT3",12,0)
 S DFN=+ORVP,ORVP=DFN_";DPT(",ORTAB="DELAY" D SLCT1^ORQPT
"RTN","ORCACT3",13,0)
 D EN^VALM("OR DELAYED ORDERS")
"RTN","ORCACT3",14,0)
 Q
"RTN","ORCACT3",15,0)
 ;
"RTN","ORCACT3",16,0)
REVIEW(PAT) ; -- Want to review delayed orders?
"RTN","ORCACT3",17,0)
 ;*324 New Quit flags, they aren't relevent to this prompt.
"RTN","ORCACT3",18,0)
 N X,Y,DIR,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ORCACT3",19,0)
 Q:'$D(^OR(100,"AEVNT",PAT_";DPT(")) 0
"RTN","ORCACT3",20,0)
 S DIR(0)="YA",DIR("A")="Review delayed orders? ",DIR("B")="YES"
"RTN","ORCACT3",21,0)
 S DIR("?")="Answer YES to review this patient's delayed orders"
"RTN","ORCACT3",22,0)
 D ^DIR
"RTN","ORCACT3",23,0)
 Q +Y
"RTN","ORCACT3",24,0)
 ;
"RTN","ORCACT3",25,0)
INIT ; -- init variables and list array
"RTN","ORCACT3",26,0)
 D TAB^ORCHART(ORTAB)
"RTN","ORCACT3",27,0)
 Q
"RTN","ORCACT3",28,0)
 ;
"RTN","ORCACT3",29,0)
PHDR ; -- protocol menu header code
"RTN","ORCACT3",30,0)
 N ORM,ORI,ORS,ORSYN
"RTN","ORCACT3",31,0)
 S VALMSG=$$MSG^ORCHART D SHOW^VALM
"RTN","ORCACT3",32,0)
 S ORM=+$O(^ORD(101,"B","ORC DELAY ACTIONS",0))
"RTN","ORCACT3",33,0)
 S XQORM("#")=ORM_"^1:"_+$P($G(^TMP("OR",$J,"DELAY",0)),U,2),ORI=0
"RTN","ORCACT3",34,0)
 F  S ORI=+$O(^ORD(101,ORM,10,"B",ORI)) Q:ORI<1  I $D(^ORD(101,ORI,2)) D
"RTN","ORCACT3",35,0)
 . S ORS=0 F  S ORS=$O(^ORD(101,ORI,2,ORS)) Q:ORS'>0  S ORSYN=$G(^(ORS,0)) S:$L(ORSYN) XQORM("KEY",ORSYN)=+ORI_"^1"
"RTN","ORCACT3",36,0)
 Q
"RTN","ORCACT3",37,0)
 ;
"RTN","ORCACT3",38,0)
HELP ; -- help code
"RTN","ORCACT3",39,0)
 N X W !!,"Enter the display numbers of the items you wish to act on; a menu of"
"RTN","ORCACT3",40,0)
 W !,"available actions will then be presented for selection."
"RTN","ORCACT3",41,0)
 W !,"Press <return> to continue ..." R X:DTIME S VALMBCK=""
"RTN","ORCACT3",42,0)
 Q
"RTN","ORCACT3",43,0)
 ;
"RTN","ORCACT3",44,0)
EXIT ; -- exit code
"RTN","ORCACT3",45,0)
 D UNLOCK^ORX2(+ORVP) K ^TMP("OR",$J),^TMP("LRRR",$J)
"RTN","ORCACT3",46,0)
 K VALMCNT,VALMHDR,VALMBG,ORQUIT,ORVP,ORSEX,ORTAB,ORPNM,ORSSN,ORL,ORDOB,ORAGE,ORPD,ORNP,ORSC,ORTS,ORWARD,ORATTEND,ORNMBR,ORACTION,OREBUILD,OREVENT
"RTN","ORCACT3",47,0)
 Q
"RTN","ORCACT3",48,0)
 ;
"RTN","ORCACT3",49,0)
DC ; -- cancel orders
"RTN","ORCACT3",50,0)
 W !!,"This action is no longer supported." H 2
"RTN","ORCACT3",51,0)
 S VALMBCK=""
"RTN","ORCACT3",52,0)
 Q
"RTN","ORCACT3",53,0)
 ;
"RTN","ORCACT3",54,0)
RELEASE ; -- Release orders to the service
"RTN","ORCACT3",55,0)
 W !!,"This action is no longer supported." H 2
"RTN","ORCACT3",56,0)
 S VALMBCK=""
"RTN","ORCACT3",57,0)
 Q
"RTN","ORCACT3",58,0)
 ;
"RTN","ORCACT3",59,0)
TS ; -- Edit treating specialty
"RTN","ORCACT3",60,0)
 W !!,"This action is no longer supported." H 2
"RTN","ORCACT3",61,0)
 S VALMBCK=""
"RTN","ORCACT3",62,0)
 Q
"RTN","ORMEVNT")
0^2^B75401539^B75252404
"RTN","ORMEVNT",1,0)
ORMEVNT ;SLC/MKB-Trigger HL7 msg off MAS events ; 6/8/10 9:49am
"RTN","ORMEVNT",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**24,45,70,79,141,165,177,186,195,278,243,324**;Dec 17, 1997;Build 2
"RTN","ORMEVNT",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ORMEVNT",4,0)
 ;
"RTN","ORMEVNT",5,0)
EN1 ; -- tasked entry point
"RTN","ORMEVNT",6,0)
 Q:'$G(DFN)  Q:$D(DGPMPC)  Q:DGPMT=4!(DGPMT=5)  ;skip lodger mvts
"RTN","ORMEVNT",7,0)
 N ZTDESC,ZTIO,ZTRTN,ZTDTH,ZTSAVE,ZTSK,I
"RTN","ORMEVNT",8,0)
 S ZTDESC="Auto-DC and/or Release orders on MAS movement",ZTIO=""
"RTN","ORMEVNT",9,0)
 S ZTRTN="EN^ORMEVNT",ZTDTH=$H,ZTSAVE("^UTILITY(""DGPM"",$J,")=""
"RTN","ORMEVNT",10,0)
 F I="DFN","DGPMDA","DGPMA","DGPMP","DGPMT" S ZTSAVE(I)=""
"RTN","ORMEVNT",11,0)
 D ^%ZTLOAD ;D EN^ORYDGPM
"RTN","ORMEVNT",12,0)
 Q
"RTN","ORMEVNT",13,0)
 ;
"RTN","ORMEVNT",14,0)
EN ; -- main entry point
"RTN","ORMEVNT",15,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ORMEVNT",16,0)
 Q:'$G(DFN)  Q:$D(DGPMPC)  Q:DGPMT=4!(DGPMT=5)
"RTN","ORMEVNT",17,0)
 I '$G(DGPMP) S ^XTMP("OREVENT",DFN,DGPMDA,0)=DT_U_$$FMADD^XLFDT(DT,2)_U_"Event process flag" ;195
"RTN","ORMEVNT",18,0)
 I $G(DGPMP),$D(^XTMP("OREVENT",DFN,DGPMDA)) D EN1 Q  ;195 edits processed after new JEH
"RTN","ORMEVNT",19,0)
 N XQORQUIT,XQORPOP,DTOUT,DUOUT,DIRUT,DIROUT ;protect protocol context
"RTN","ORMEVNT",20,0)
 N VAIP,DONE,ORVP,ORWARD,ORTS,ORL,ORDIV,ORLAST,X,Y,I,ORCURRNT,OREVENT,ORDCRULE,ORACT,ORPRINT
"RTN","ORMEVNT",21,0)
 S VAIP("E")=DGPMDA D IN5^VADPT M ORVP=VAIP I '$G(DGPMA) D  Q  ;deleted
"RTN","ORMEVNT",22,0)
 . N LAST,OREVT S LAST=+$O(^ORE(100.2,"ADT",DGPMDA,""),-1) Q:LAST<1
"RTN","ORMEVNT",23,0)
 . S OREVT=+$O(^ORE(100.2,"ADT",DGPMDA,LAST,0))
"RTN","ORMEVNT",24,0)
 . D ACTLOG^OREVNTX(OREVT,"DL")
"RTN","ORMEVNT",25,0)
A ;
"RTN","ORMEVNT",26,0)
 S ORVP=+DFN_";DPT(",ORTS=+$G(^DPT(DFN,.103)),ORWARD=$G(^(.1))
"RTN","ORMEVNT",27,0)
 S ORWARD=$S($L(ORWARD):+$O(^DIC(42,"B",ORWARD,0)),1:0)
"RTN","ORMEVNT",28,0)
 S ORL=$S(ORWARD:+$G(^DIC(42,ORWARD,44))_";SC(",1:""),ORDIV=$$DIV(+ORL)
"RTN","ORMEVNT",29,0)
 S ORLAST("TS")=$$PREVTS,X=+VAIP(15,4) F I="WD","LOC","DIV" S ORLAST(I)=""
"RTN","ORMEVNT",30,0)
 S:X ORLAST("WD")=X,Y=+$G(^DIC(42,X,44)),ORLAST("LOC")=Y_";SC(",ORLAST("DIV")=$$DIV(Y)
"RTN","ORMEVNT",31,0)
 N OREVNTLK S OREVNTLK=""  ;JEH
"RTN","ORMEVNT",32,0)
 S ORCURRNT=$$CURRENT,OREVENT=$$PATEVT,ORACT=$S($G(DGPMP):"ED",1:"NW") ; Lock
"RTN","ORMEVNT",33,0)
 I OREVENT=-1 D EN1 Q  ;195 Can't lock, retry
"RTN","ORMEVNT",34,0)
 S OREVNTLK=OREVENT  ; save routine copy of ifn JEH
"RTN","ORMEVNT",35,0)
 I $G(DGPMP),$D(^ORE(100.2,"ADT",DGPMDA)) D   ;edited 
"RTN","ORMEVNT",36,0)
 . N LAST,OREVT,DA,X,I S LAST=+$O(^ORE(100.2,"ADT",DGPMDA,""),-1) Q:LAST<1
"RTN","ORMEVNT",37,0)
 . S OREVT=+$O(^ORE(100.2,"ADT",DGPMDA,LAST,0)),DA=+$O(^(OREVT,0))
"RTN","ORMEVNT",38,0)
 . S X=$G(^ORE(100.2,OREVT,10,DA,0)) ;last activity on movement
"RTN","ORMEVNT",39,0)
 . I $P(X,U,5)=+$G(VAIP(4)),$P(X,U,6)=+$G(VAIP(8)),$P(X,U,7)=+$G(VAIP(5)) S DONE=1 Q  ;no change
"RTN","ORMEVNT",40,0)
 . I 'OREVENT D ACTLOG^OREVNTX(OREVT,"ED",$$TYPE(DGPMT),1) S DONE=1
"RTN","ORMEVNT",41,0)
 I $G(DONE) D FINISHED Q  ; unlock and clean up before quit IFNjeh 
"RTN","ORMEVNT",42,0)
B ;
"RTN","ORMEVNT",43,0)
 I '$G(DGPMP),ORCURRNT D  ;new mvt - autoDC
"RTN","ORMEVNT",44,0)
 . I $D(^ORE(100.2,"ADT",DGPMDA)) D  Q:$G(DONE)  ;ReEntered
"RTN","ORMEVNT",45,0)
 .. N LAST,OREVT S DONE=0
"RTN","ORMEVNT",46,0)
 .. S LAST=+$O(^ORE(100.2,"ADT",DGPMDA,""),-1),OREVT=+$O(^(LAST,0))
"RTN","ORMEVNT",47,0)
 .. Q:+ORVP'=+$G(^ORE(100.2,OREVT,0))  ;diff pat -> diff mvt
"RTN","ORMEVNT",48,0)
 .. S ORACT="RE",DONE=1 Q:OREVENT  ;log on new event instead
"RTN","ORMEVNT",49,0)
 .. D ACTLOG^OREVNTX(OREVT,ORACT,$$TYPE(DGPMT),1)
"RTN","ORMEVNT",50,0)
 . I DGPMT=3 D COMP("ALG") ;keep until GMRA*4*15 gets out
"RTN","ORMEVNT",51,0)
 . S ORDCRULE=$$DCEVT D:ORDCRULE AUTODC^ORMEVNT1(ORDCRULE,$P(DGPMA,U))
"RTN","ORMEVNT",52,0)
 . I DGPMT=1!(DGPMT=2&("^13^40^"[("^"_$P(DGPMA,U,18)_"^"))) I $G(^XTMP("ORDCOBS-"_+ORVP,0)) D REINST ;186 TO ASIH tran mvmt
"RTN","ORMEVNT",53,0)
C ;
"RTN","ORMEVNT",54,0)
 I OREVENT D  ;release delayed orders, complete event
"RTN","ORMEVNT",55,0)
 . D RELEASE^ORMEVNT1(OREVENT),DONE^OREVNTX(OREVENT,$P(DGPMA,U),DGPMDA)
"RTN","ORMEVNT",56,0)
 . I '$G(VAIP(1)) M VAIP=ORVP ;reset for ACTLOG use
"RTN","ORMEVNT",57,0)
 . D ACTLOG^OREVNTX(OREVENT,ORACT,$$TYPE(DGPMT),1)
"RTN","ORMEVNT",58,0)
 . I DGPMT=1,'$P($G(^ORE(100.2,+OREVENT,0)),U,3) S $P(^(0),U,3)=DGPMDA
"RTN","ORMEVNT",59,0)
 . ;D UNLEVT^ORX2(OREVENT)
"RTN","ORMEVNT",60,0)
 I $O(ORPRINT(0)),$G(ORL) D PRINTS^ORWD1(.ORPRINT,+ORL)
"RTN","ORMEVNT",61,0)
 I DGPMT=3,ORCURRNT,'$G(DGPMP) D DISCH ;lapse remaining events
"RTN","ORMEVNT",62,0)
 I '$G(DFN),$G(ORVP) S DFN=+ORVP ;just in case
"RTN","ORMEVNT",63,0)
FINISHED  ; unlock and clean up JEH
"RTN","ORMEVNT",64,0)
 D:$G(OREVNTLK) UNLEVT^ORX2(OREVNTLK) K ^XTMP("OREVENT",DFN,DGPMDA) ;195
"RTN","ORMEVNT",65,0)
 Q
"RTN","ORMEVNT",66,0)
 ;
"RTN","ORMEVNT",67,0)
CURRENT() ; -- Returns 1 or 0, if DGPMDA is the latest movement
"RTN","ORMEVNT",68,0)
 N Y,LAST,LASTYPE,LASTDT S Y=0
"RTN","ORMEVNT",69,0)
 S LAST=+VAIP(14),LASTDT=+VAIP(14,1),LASTYPE=+VAIP(14,2)
"RTN","ORMEVNT",70,0)
 ; VAIP(14) = last physical movement for the admission
"RTN","ORMEVNT",71,0)
 I DGPMT=6 D  G CQ
"RTN","ORMEVNT",72,0)
 . N CA,IDT I LAST,LASTDT>+VAIP(3) Q  ;last physical mvt
"RTN","ORMEVNT",73,0)
 . S CA=+VAIP(13),IDT=9999999.9999999-VAIP(3)
"RTN","ORMEVNT",74,0)
 . I '$O(^DGPM("ATS",DFN,CA,IDT),-1) S Y=1 Q  ;last TS mvt
"RTN","ORMEVNT",75,0)
 I DGPMT=3 D  ;get last mvt overall
"RTN","ORMEVNT",76,0)
 . N VAIP,Y S VAIP("D")="LAST" D IN5^VADPT
"RTN","ORMEVNT",77,0)
 . S LAST=+VAIP(14),LASTYPE=+VAIP(14,2) ;reset
"RTN","ORMEVNT",78,0)
 I LAST=DGPMDA S Y=1 G CQ ;primary mvt
"RTN","ORMEVNT",79,0)
 I $D(^UTILITY("DGPM",$J,LASTYPE,LAST)) S Y=1 ;secondary mvt
"RTN","ORMEVNT",80,0)
CQ Q Y
"RTN","ORMEVNT",81,0)
 ;
"RTN","ORMEVNT",82,0)
PREVTS() ; -- Returns previous treating specialty
"RTN","ORMEVNT",83,0)
 N TS,TSP,CA,ID,LAST,Y
"RTN","ORMEVNT",84,0)
 S TS=+$O(^UTILITY("DGPM",$J,6,0)),TSP=$G(^(TS,"P"))
"RTN","ORMEVNT",85,0)
 I $G(TSP) S Y=+$P(TSP,U,9) G PRVQ ;edited TS mvt
"RTN","ORMEVNT",86,0)
 ; look for TS mvt since last phys mvt
"RTN","ORMEVNT",87,0)
 S CA=$P(DGPMA,U,14),ID=9999999.9999999-DGPMA
"RTN","ORMEVNT",88,0)
 S LAST=+$O(^DGPM("ATS",DFN,CA,ID)),Y=$S(LAST:+$O(^(LAST,0)),1:+VAIP(15,6))
"RTN","ORMEVNT",89,0)
PRVQ Q Y
"RTN","ORMEVNT",90,0)
 ;
"RTN","ORMEVNT",91,0)
TYPE(X) ; -- Return type of event from MAS code
"RTN","ORMEVNT",92,0)
 N Y S Y=$S(X=1:"A",X=2:"T",X=3:"D",X=6:"S",1:"")
"RTN","ORMEVNT",93,0)
 Q Y
"RTN","ORMEVNT",94,0)
 ;
"RTN","ORMEVNT",95,0)
DIV(LOC) ; -- Return Institution file #4 ptr for LOC
"RTN","ORMEVNT",96,0)
 N X0,Y S X0=$G(^SC(+LOC,0))
"RTN","ORMEVNT",97,0)
 S Y=$S($P(X0,U,4):$P(X0,U,4),$P(X0,U,15):$$SITE^VASITE(DT,$P(X0,U,15)),1:+$G(DUZ(2)))
"RTN","ORMEVNT",98,0)
 Q Y
"RTN","ORMEVNT",99,0)
 ;
"RTN","ORMEVNT",100,0)
PATEVT() ; -- Find match to new data in Patient Event file
"RTN","ORMEVNT",101,0)
 N TYPE,MVTYPE,EVT,IFN,X0,Y S Y="" G:'$G(ORCURRNT) PTQ
"RTN","ORMEVNT",102,0)
 S TYPE=$S(DGPMT=1:"A",DGPMT=3:"D",DGPMT=2!(DGPMT=6):"T",1:""),EVT=0
"RTN","ORMEVNT",103,0)
 S MVTYPE=$P(DGPMA,U,18),TYPE(1)="",MVTYPE(1)=""
"RTN","ORMEVNT",104,0)
 I DGPMT=2,MVTYPE=13 S TYPE(1)="A",MVTYPE(1)=40 ;To ASIH
"RTN","ORMEVNT",105,0)
 I DGPMT=3,MVTYPE=41 S TYPE(1)="T",MVTYPE(1)=14 ;From ASIH
"RTN","ORMEVNT",106,0)
 I DGPMT'=3,$$GET1^DIQ(45.7,+$G(ORTS)_",","SPECIALTY:SERVICE")="NHCU" S TYPE(1)=$S(TYPE="A":"T",1:"A") ;DBIA #1154
"RTN","ORMEVNT",107,0)
 F  S EVT=+$O(^ORE(100.2,"AE",DFN,EVT)) Q:EVT<1  S IFN=+$O(^(EVT,0)) D  Q:Y
"RTN","ORMEVNT",108,0)
 . Q:$$LAPSED^OREVNTX(+IFN)  Q:$P($G(^ORE(100.2,IFN,1)),U,5)
"RTN","ORMEVNT",109,0)
 . S X0=$G(^ORD(100.5,EVT,0)) Q:$P(X0,U,3)'=ORDIV
"RTN","ORMEVNT",110,0)
 . I $P(X0,U,2)'=TYPE,$P(X0,U,2)'=TYPE(1) Q  ;Xaction type
"RTN","ORMEVNT",111,0)
 . I $P(X0,U,7),$P(X0,U,7)'=MVTYPE,$P(X0,U,7)'=MVTYPE(1) Q  ;Mvt type
"RTN","ORMEVNT",112,0)
 . I $O(^ORD(100.5,EVT,"TS",0)) Q:'$D(^("B",ORTS))  Q:ORTS=ORLAST("TS")&(ORDIV=ORLAST("DIV"))
"RTN","ORMEVNT",113,0)
 . I $O(^ORD(100.5,EVT,"LOC",0)) Q:'$D(^("B",ORWARD))  Q:ORWARD=ORLAST("WD")
"RTN","ORMEVNT",114,0)
 . S Y=+IFN ;ok
"RTN","ORMEVNT",115,0)
 I Y S:'$$LCKEVT^ORX2(Y) Y=-1 ;195 Lock event if possible
"RTN","ORMEVNT",116,0)
PTQ Q Y
"RTN","ORMEVNT",117,0)
 ;
"RTN","ORMEVNT",118,0)
DCEVT() ; -- Find match to event in AutoDC Rules file for [new] ORDIV,ORTS,ORL
"RTN","ORMEVNT",119,0)
 N MVTYPE,DIV,XFER,ORY,EXC,OBS
"RTN","ORMEVNT",120,0)
 S OBS=$S(DGPMT=3:$$MVT^DGPMOBS(DGPMDA),1:0) ;observation mvt
"RTN","ORMEVNT",121,0)
 S MVTYPE=+$P(DGPMA,U,18) S:MVTYPE=41 MVTYPE=14 S:MVTYPE=40 MVTYPE=13 ;ASIH- 186
"RTN","ORMEVNT",122,0)
 S XFER=$S(DGPMT=2:1,DGPMT=6:1,MVTYPE'=14:0,OBS:0,1:1)
"RTN","ORMEVNT",123,0)
 I DGPMT=2,MVTYPE=13,$G(^XTMP("ORDCOBS-"_+ORVP,"READMIT")) S ORY=0 K ^XTMP("ORDCOBS-"_+ORVP,"READMIT") G DCQ ;186 Obs readmit from ASIH don't auto-dc
"RTN","ORMEVNT",124,0)
 I XFER,ORLAST("TS")'=ORTS,$D(^ORD(100.6,"AC",ORDIV,20)) S MVTYPE=20 ;TS
"RTN","ORMEVNT",125,0)
 S DIV=ORDIV I DGPMT=3,MVTYPE'=14 S DIV=ORLAST("DIV") ;discharge
"RTN","ORMEVNT",126,0)
 ;*324 Replace ORDIV with DIV
"RTN","ORMEVNT",127,0)
 S ORY=+$O(^ORD(100.6,"AC",DIV,MVTYPE,0)) K:ORY<1&(DGPMT=3)&(OBS) ^XTMP("ORDCOBS-"_+ORVP) G:ORY<1 DCQ ;186, If obs, no active rule, no reinstate
"RTN","ORMEVNT",128,0)
 I MVTYPE=20,$D(^ORD(100.6,ORY,4,ORLAST("TS"),1,ORTS))!(ORTS=ORLAST("TS")) S ORY=0 G DCQ
"RTN","ORMEVNT",129,0)
 I MVTYPE=4 D  G DCQ ;ck Div and Loc multiples
"RTN","ORMEVNT",130,0)
 . I ORLAST("DIV")'=ORDIV S:'$D(^ORD(100.6,ORY,6,ORLAST("DIV"))) ORY=0 Q
"RTN","ORMEVNT",131,0)
 . N OLD,INCL S INCL=0 ;ck incl loc's
"RTN","ORMEVNT",132,0)
 . F OLD=+ORLAST("LOC"),"ALL" I $D(^ORD(100.6,ORY,5,"ADC",OLD,+ORL))!$D(^("ALL")) S INCL=1 Q
"RTN","ORMEVNT",133,0)
 . S:'INCL ORY=0
"RTN","ORMEVNT",134,0)
 I DGPMT=3,OBS D  ;readmitting from observation?
"RTN","ORMEVNT",135,0)
 . N TORY
"RTN","ORMEVNT",136,0)
 . S TORY=ORY
"RTN","ORMEVNT",137,0)
 . S EXC=+$P($G(^ORD(100.6,ORY,0)),U,6) S:EXC=2 ORY=0 ;ignore rule
"RTN","ORMEVNT",138,0)
 . I EXC=1,'$D(ZTQUEUED),$$READMIT S ORY=0
"RTN","ORMEVNT",139,0)
 . I ORY=0 D DCGEN^ORMEVNT2,TIMER^ORMEVNT2 S:"^14^41^"[("^"_$P(DGPMA,U,18)_"^") ^XTMP("ORDCOBS-"_+ORVP,"READMIT")=1 ;177,186 
"RTN","ORMEVNT",140,0)
 . K:ORY ^XTMP("ORDCOBS-"_+ORVP) ;have rule -> dc, don't reinstate meds
"RTN","ORMEVNT",141,0)
DCQ Q ORY
"RTN","ORMEVNT",142,0)
 ;
"RTN","ORMEVNT",143,0)
READMIT() ; -- Return 1 or 0, if patient is being readmitted
"RTN","ORMEVNT",144,0)
 N X,Y,DIR
"RTN","ORMEVNT",145,0)
 S DIR(0)="YA",DIR("A")="Will the patient be re-admitted immediately? "
"RTN","ORMEVNT",146,0)
 S DIR("?")="Enter YES if the patient is to be admitted to the hospital immediately following this discharge from observation."
"RTN","ORMEVNT",147,0)
 D ^DIR S:$D(DTOUT)!$D(DUOUT) Y="^"
"RTN","ORMEVNT",148,0)
 Q Y
"RTN","ORMEVNT",149,0)
 ;
"RTN","ORMEVNT",150,0)
COMP(ORDG) ; -- Complete orders on event [Keep until GMRA*4*15]
"RTN","ORMEVNT",151,0)
 N ORI,ORLIST,ORIFN,OREDT
"RTN","ORMEVNT",152,0)
 I 'ORDG S:ORDG?1.U ORDG=+$O(^ORD(100.98,"B",ORDG,0)) Q:ORDG'>0
"RTN","ORMEVNT",153,0)
 D EN^ORQ1(ORVP,ORDG,2) S ORI=0,OREDT=$P(DGPMA,U)
"RTN","ORMEVNT",154,0)
 F  S ORI=$O(^TMP("ORR",$J,ORLIST,ORI)) Q:ORI'>0  S ORIFN=^(ORI) D STATUS^ORCSAVE2(+ORIFN,2) S:$G(OREDT) $P(^OR(100,+ORIFN,3),U)=OREDT,$P(^(6),U,6)=OREDT
"RTN","ORMEVNT",155,0)
 Q
"RTN","ORMEVNT",156,0)
 ;
"RTN","ORMEVNT",157,0)
LOC(NODE) ; -- Returns [new] patient location from NODE
"RTN","ORMEVNT",158,0)
 N X,Y S X=$P($G(NODE),U,6)
"RTN","ORMEVNT",159,0)
 I X'>0 S X=$P($G(^DPT(+ORVP,.1)),U) S:$L(X) X=$O(^DIC(42,"B",X,0))
"RTN","ORMEVNT",160,0)
 S Y=+$G(^DIC(42,+X,44))_";SC("
"RTN","ORMEVNT",161,0)
 Q Y
"RTN","ORMEVNT",162,0)
 ;
"RTN","ORMEVNT",163,0)
DISCH ; -- Lapse/cancel outstanding events on discharge
"RTN","ORMEVNT",164,0)
 D DISCH^ORMEVNT2 ;195 Code moved to ORMEVNT2 for space considerations
"RTN","ORMEVNT",165,0)
 Q
"RTN","ORMEVNT",166,0)
 ;
"RTN","ORMEVNT",167,0)
XTMP ; -- Save ORIFN to possibly reinstate on admission
"RTN","ORMEVNT",168,0)
 ;    Also uses ORVP, DGPMDA
"RTN","ORMEVNT",169,0)
 Q:'$G(DGPMDA)  Q:'$G(ORIFN)  Q:'$G(ORVP)
"RTN","ORMEVNT",170,0)
 N ORNOW S ORNOW=+$$NOW^XLFDT
"RTN","ORMEVNT",171,0)
 I $G(^XTMP("ORDCOBS-"_+ORVP,0)),+^(0)<ORNOW K ^XTMP("ORDCOBS-"_+ORVP)
"RTN","ORMEVNT",172,0)
 I '$G(^XTMP("ORDCOBS-"_+ORVP,0)) D
"RTN","ORMEVNT",173,0)
 . N ORNOW1H S ORNOW1H=$$FMADD^XLFDT(ORNOW,,1)
"RTN","ORMEVNT",174,0)
 . S ^XTMP("ORDCOBS-"_+ORVP,0)=ORNOW1H_U_ORNOW_"^InptMeds AutoDC'd on Discharge from Observation"
"RTN","ORMEVNT",175,0)
 S ^XTMP("ORDCOBS-"_+ORVP,+ORIFN)=$G(^OR(100,+ORIFN,4))
"RTN","ORMEVNT",176,0)
 S ^XTMP("ORDCOBS-"_+ORVP,"DISCHARGE")=DGPMDA
"RTN","ORMEVNT",177,0)
 Q
"RTN","ORMEVNT",178,0)
 ;
"RTN","ORMEVNT",179,0)
REINST ; -- Reinstate meds from observation
"RTN","ORMEVNT",180,0)
 I '$L($T(ENR^PSJOERI)) K ^XTMP("ORDCOBS-"_+ORVP) Q   ;DBIA 3598
"RTN","ORMEVNT",181,0)
 N ORIDT,ORLASTDC,X0,ORIFN,PSIFN
"RTN","ORMEVNT",182,0)
 S ORIDT=+$O(^DGPM("ATID3",+ORVP,0)) S:DGPMT=2 ORIDT=$O(^DGPM("ATID3",+ORVP,ORIDT)) Q:ORIDT<1  S ORLASTDC=+$O(^(ORIDT,0)) ;186 If reinstating for transfer TO ASIH then skip pseudo discharge for WHILE ASIH
"RTN","ORMEVNT",183,0)
 Q:$G(^XTMP("ORDCOBS-"_+ORVP,"DISCHARGE"))'=ORLASTDC  S X0=$G(^(0))
"RTN","ORMEVNT",184,0)
 I $P(X0,U)<$$NOW^XLFDT K ^XTMP("ORDCOBS-"_+ORVP) Q  ;readmit after one hour 177
"RTN","ORMEVNT",185,0)
 S ORIFN=0 F  S ORIFN=+$O(^XTMP("ORDCOBS-"_+ORVP,ORIFN))  Q:ORIFN<1  S PSIFN=$G(^(ORIFN)) D:PSIFN ENR^PSJOERI(+ORVP,PSIFN,+ORWARD)  ;DBIA 3598
"RTN","ORMEVNT",186,0)
 K ^XTMP("ORDCOBS-"_+ORVP)
"RTN","ORMEVNT",187,0)
 Q
"RTN","ORMEVNT",188,0)
 ;
"RTN","ORMEVNT",189,0)
 ; -- Moved code:
"RTN","ORMEVNT",190,0)
EXP(ORDER,ORSTOP) G EXP^ORMEVNT1
"RTN","ORMEVNT",191,0)
ACTIVE(ORDER,ORSTRT) G ACT^ORMEVNT1
"RTN","ORMEVNT",192,0)
PURGE(ORDER) G PUR^ORMEVNT1
"RTN","ORMEVNT1")
0^3^B78396667^B76421359
"RTN","ORMEVNT1",1,0)
ORMEVNT1 ;SLC/MKB-Trigger HL7 msg off OR events,ORMTIME ; 6/8/10 9:55am
"RTN","ORMEVNT1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**141,165,177,186,215,324**;Dec 17, 1997;Build 2
"RTN","ORMEVNT1",3,0)
 ;
"RTN","ORMEVNT1",4,0)
 ;DBIA Section
"RTN","ORMEVNT1",5,0)
 ; 3559 - Direct read of ^SRF
"RTN","ORMEVNT1",6,0)
 ;10039 - Direct read of ^DIC(42,
"RTN","ORMEVNT1",7,0)
 ;
"RTN","ORMEVNT1",8,0)
OR2(ORSRDA) ;Queue EDO process to background, return control to surgery
"RTN","ORMEVNT1",9,0)
 ;
"RTN","ORMEVNT1",10,0)
 N ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTSK,ZTSAVE
"RTN","ORMEVNT1",11,0)
 S ZTRTN="OR2Q^ORMEVNT1",ZTDTH=$H,ZTDESC="Surgery triggered EDO processing",ZTIO="",ZTSAVE("ORSRDA")="" D ^%ZTLOAD
"RTN","ORMEVNT1",12,0)
 Q
"RTN","ORMEVNT1",13,0)
 ;
"RTN","ORMEVNT1",14,0)
OR2Q ; -- Kill logic, from Surgery package [DBIA #3558]
"RTN","ORMEVNT1",15,0)
 I $D(^XTMP("ORSURG",ORSRDA)) D OR2(ORSRDA) Q  ;186 requeue if flag set
"RTN","ORMEVNT1",16,0)
 N X,Y,DA,OREVT,ORSRF,ORACT
"RTN","ORMEVNT1",17,0)
 S OREVT=+$O(^ORE(100.2,"ASR",+$G(ORSRDA),0)) Q:OREVT<1
"RTN","ORMEVNT1",18,0)
 S ORSRF=$G(^SRF(+ORSRDA,.2)),ORACT=$S($L($P(ORSRF,U,12)):"ED",1:"DL")
"RTN","ORMEVNT1",19,0)
 D ACTLOG^OREVNTX(OREVT,ORACT)
"RTN","ORMEVNT1",20,0)
 Q
"RTN","ORMEVNT1",21,0)
 ;
"RTN","ORMEVNT1",22,0)
OR1(ORSRDA,ORSRX) ;Queue EDO process to background, return control to surgery
"RTN","ORMEVNT1",23,0)
 N ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTSK,ZTSAVE
"RTN","ORMEVNT1",24,0)
 S ZTRTN="OR1Q^ORMEVNT1",ZTDTH=$H,ZTDESC="Surgery triggered EDO processing",ZTIO="",ZTSAVE("ORSRDA")="",ZTSAVE("ORSRX")="" D ^%ZTLOAD
"RTN","ORMEVNT1",25,0)
 Q
"RTN","ORMEVNT1",26,0)
 ;
"RTN","ORMEVNT1",27,0)
OR1Q ; -- Set logic, from Surgery package [DBIA #3558]
"RTN","ORMEVNT1",28,0)
 I $D(^XTMP("ORSURG",ORSRDA)) D OR1(ORSRDA,ORSRX) Q  ;186 requeue if flag set
"RTN","ORMEVNT1",29,0)
 N X S X=ORSRX
"RTN","ORMEVNT1",30,0)
 I $G(^SRF(+$G(ORSRDA),"CON")),$D(^ORE(100.2,"ASR",+^("CON"))) Q  ;concurrent
"RTN","ORMEVNT1",31,0)
 Q:$D(^ORE(100.2,"ASR",+$G(ORSRDA)))  Q:'$$CURRENT  ;edit
"RTN","ORMEVNT1",32,0)
 ;
"RTN","ORMEVNT1",33,0)
 N ORSR0,DFN,VAIP,VAERR,X,Y,DA,ORVP,ORL,ORDIV,ORTS,OREVENT,ORDCRULE,ORPRINT
"RTN","ORMEVNT1",34,0)
 S ORSR0=$G(^SRF(+$G(ORSRDA),0)),DFN=+$P(ORSR0,U)
"RTN","ORMEVNT1",35,0)
 D IN5^VADPT Q:'$G(VAIP(13))  ;not admitted
"RTN","ORMEVNT1",36,0)
 S ^XTMP("ORSURG",ORSRDA)=$$FMADD^XLFDT(DT,5)_U_DT ;186 Set flag
"RTN","ORMEVNT1",37,0)
 S ORL=$P($G(^SRS(+$P(ORSR0,U,2),0)),U)_";SC(",ORDIV=$$DIV(+ORL) ;DBIA #3362
"RTN","ORMEVNT1",38,0)
 ;*324 Add set ORDIV to grab the institution
"RTN","ORMEVNT1",39,0)
 I '$G(LOC) S ORL=+$G(^DIC(42,+$G(VAIP(5)),44))_";SC(",ORDIV=$$DIV(+ORL) ;186 If no O.R. loc then use current loc
"RTN","ORMEVNT1",40,0)
 S ORTS=+$G(VAIP(8)) ; need surg spec too?  DBIA #991
"RTN","ORMEVNT1",41,0)
 S ORVP=DFN_";DPT(",OREVENT=$$PATEVT,ORDCRULE=$$DCEVT
"RTN","ORMEVNT1",42,0)
 D:ORDCRULE AUTODC(ORDCRULE,ORSRX) I OREVENT D
"RTN","ORMEVNT1",43,0)
 . D RELEASE(OREVENT),DONE^OREVNTX(OREVENT,ORSRX,,ORSRDA)
"RTN","ORMEVNT1",44,0)
 . D ACTLOG^OREVNTX(OREVENT,"NW","O")
"RTN","ORMEVNT1",45,0)
 I $O(ORPRINT(0)),$G(ORL) D PRINTS^ORWD1(.ORPRINT,+ORL)
"RTN","ORMEVNT1",46,0)
 K ^XTMP("ORSURG",ORSRDA) ;186
"RTN","ORMEVNT1",47,0)
 Q
"RTN","ORMEVNT1",48,0)
 ;
"RTN","ORMEVNT1",49,0)
DIV(LOC) ; -- Return Institution file #4 ptr for LOC
"RTN","ORMEVNT1",50,0)
 N X0,Y S X0=$G(^SC(+LOC,0))
"RTN","ORMEVNT1",51,0)
 S Y=$S($P(X0,U,4):$P(X0,U,4),$P(X0,U,15):$$SITE^VASITE(DT,$P(X0,U,15)),1:+$G(DUZ(2)))
"RTN","ORMEVNT1",52,0)
 Q Y
"RTN","ORMEVNT1",53,0)
 ;
"RTN","ORMEVNT1",54,0)
CURRENT() ; -- Is posted mvt the latest one?
"RTN","ORMEVNT1",55,0)
 N Y S Y=$S((DT-X)<1:1,1:0)
"RTN","ORMEVNT1",56,0)
 Q Y
"RTN","ORMEVNT1",57,0)
 ;
"RTN","ORMEVNT1",58,0)
PATEVT() ; -- Find match to new data in Patient Event file
"RTN","ORMEVNT1",59,0)
 N EVT,IFN,X0,Y S EVT=0,Y=""
"RTN","ORMEVNT1",60,0)
 F  S EVT=+$O(^ORE(100.2,"AE",+ORVP,EVT)) Q:EVT<1  S IFN=$O(^(EVT,0)) D  Q:Y
"RTN","ORMEVNT1",61,0)
 . Q:$$LAPSED^OREVNTX(+IFN)  ;don't release orders
"RTN","ORMEVNT1",62,0)
 . S X0=$G(^ORD(100.5,EVT,0))
"RTN","ORMEVNT1",63,0)
 . I $P(X0,U,2)="O",$P(X0,U,3)=ORDIV S Y=+IFN Q
"RTN","ORMEVNT1",64,0)
 Q Y
"RTN","ORMEVNT1",65,0)
 ;
"RTN","ORMEVNT1",66,0)
DCEVT() ; -- Find match to event in AutoDC Rules file for [new] ORDIV
"RTN","ORMEVNT1",67,0)
 N Y I '$G(^DPT(+ORVP,.105)) Q 0 ;no auto-dc's if not admitted
"RTN","ORMEVNT1",68,0)
 S Y=+$O(^ORD(100.6,"AE",ORDIV,"O",0))
"RTN","ORMEVNT1",69,0)
 Q Y
"RTN","ORMEVNT1",70,0)
 ;
"RTN","ORMEVNT1",71,0)
AUTODC(ORDC,ORDT) ; -- DC orders based on rule ORDC [also from ORMEVNT]
"RTN","ORMEVNT1",72,0)
 ;    Expects VAIP array with current admission data
"RTN","ORMEVNT1",73,0)
 N ORADM,ORNOW,ORN,X,OREASON,ORNATR,ORCREATE,ORPRNT,ORSIG,ORDG,ORI,ORPKG,ORLIST,ORIFN,OR0,ORDER,ORERR
"RTN","ORMEVNT1",74,0)
 S OREASON=+$P($G(^ORD(100.6,ORDC,0)),U,4) I OREASON<1 D
"RTN","ORMEVNT1",75,0)
 . S OREASON=$S('$G(DGPMT):"OROR",DGPMT=1:"ORADMIT",DGPMT=2:"ORTRANS",DGPMT=3:"ORDIS",1:"ORSPEC")
"RTN","ORMEVNT1",76,0)
 . S OREASON=+$O(^ORD(100.03,"C",OREASON,0))
"RTN","ORMEVNT1",77,0)
 S ORNATR=+$P($G(^ORD(100.03,+$G(OREASON),0)),U,7)
"RTN","ORMEVNT1",78,0)
 S:ORNATR'>0 ORNATR=+$O(^ORD(100.02,"C","A",0))
"RTN","ORMEVNT1",79,0)
 S X=$G(^ORD(100.02,ORNATR,1)),ORCREATE=+$P(X,U),ORPRNT=+$P(X,U,2)
"RTN","ORMEVNT1",80,0)
 S ORSIG=$S('ORCREATE:"",1:$P(X,U,4)),ORDG=$O(^ORD(100.98,"B","ALL",0))
"RTN","ORMEVNT1",81,0)
 S ORI=0 F  S ORI=$O(^ORD(100.6,ORDC,7,"B",ORI)) Q:ORI<1  S ORPKG(ORI)=1
"RTN","ORMEVNT1",82,0)
 D:$G(DGPMT)'=1 CHKOBS S:'$G(ORADM) ORADM=+$G(VAIP(13,1)) S ORNOW=$$NOW^XLFDT,ORN="A",ORI=6 ;177
"RTN","ORMEVNT1",83,0)
 I $G(DGPMT)=1 S ORI=2,ORADM="",ORN="A"
"RTN","ORMEVNT1",84,0)
 I $G(DGPMT)=3,"^12^38^"[(U_$P(DGPMA,U,18)_U) S ORI=2,ORADM="",ORN=""
"RTN","ORMEVNT1",85,0)
 D EN^ORQ1(ORVP,ORDG,ORI,,ORADM,ORNOW),ADMORD S ORI=0
"RTN","ORMEVNT1",86,0)
DC1 F  S ORI=$O(^TMP("ORR",$J,ORLIST,ORI)) Q:ORI'>0  S ORIFN=^(ORI) D
"RTN","ORMEVNT1",87,0)
 . ;Q:$P(ORIFN,";",2)>1  ; or DC/Delete actions ??
"RTN","ORMEVNT1",88,0)
 . Q:"^1^2^7^11^12^13^"[(U_$P(^OR(100,+ORIFN,3),U,3)_U)  S OR0=$G(^(0))
"RTN","ORMEVNT1",89,0)
 . Q:'$G(ORPKG($P(OR0,U,14)))  Q:$D(^ORD(100.6,ORDC,10,"B",+$P(OR0,U,11)))
"RTN","ORMEVNT1",90,0)
 . S X=+$$VALUE^ORX8(+ORIFN,"ORDERABLE") Q:$D(^ORD(100.6,ORDC,8,"B",X))
"RTN","ORMEVNT1",91,0)
 . Q:'$$VALID^ORCACT0(ORIFN,"DC",,ORN)  ;ok to auto-dc order?
"RTN","ORMEVNT1",92,0)
 . I '$G(OREVENT) S OREVENT=+$$NEW^OREVNT(+ORVP) ;no delayed orders
"RTN","ORMEVNT1",93,0)
 . S ORDER=+ORIFN_$S(ORCREATE:";"_$$ACTION^ORCSAVE("DC",+ORIFN,$G(ORNP),,$G(ORDT)),1:"")
"RTN","ORMEVNT1",94,0)
 . D EN^ORCSEND(ORDER,"DC",ORSIG,1,ORNATR,$G(OREASON),.ORERR) Q:$G(ORERR)
"RTN","ORMEVNT1",95,0)
 . S $P(^OR(100,+ORIFN,6),U,8)=OREVENT D SAVE(ORIFN,OREVENT,3)
"RTN","ORMEVNT1",96,0)
 . S:ORPRNT ORPRINT=$G(ORPRINT)+1,ORPRINT(ORPRINT)=ORDER_"^1"
"RTN","ORMEVNT1",97,0)
 ;*324 Create an event if package orders auto-dcd but no orders released or dc'd by CPRS.
"RTN","ORMEVNT1",98,0)
 I '$G(OREVENT),$G(DGPMDA),$D(^XTMP("ORDC-"_DGPMDA)) S OREVENT=$$NEW^OREVNT(+ORVP)
"RTN","ORMEVNT1",99,0)
DC2 I $G(OREVENT) D
"RTN","ORMEVNT1",100,0)
 . S $P(^ORE(100.2,OREVENT,1),U,3)=ORDC,^ORE(100.2,"DC",ORDC,OREVENT)=""
"RTN","ORMEVNT1",101,0)
 . I $G(DGPMDA),$D(^XTMP("ORDC-"_DGPMDA)) D XTMP ;save order#'s
"RTN","ORMEVNT1",102,0)
 K ^TMP("ORR",$J,ORLIST),^XTMP("ORDC-"_$G(DGPMDA))
"RTN","ORMEVNT1",103,0)
 Q
"RTN","ORMEVNT1",104,0)
 ;
"RTN","ORMEVNT1",105,0)
RELEASE(OREVT) ; -- release orders for OREVT [also from ORMEVNT]
"RTN","ORMEVNT1",106,0)
 ;    Returns ORPRINT(#)=order^prints for orders released
"RTN","ORMEVNT1",107,0)
 Q:'$G(OREVT)  N ORPARM,ORLR,ORX,ORI,ORV,ORIFN,ORERR,OR0,OR3,ORLAB
"RTN","ORMEVNT1",108,0)
 S ORPARM="" I $G(ORL) F ORI="CHART COPY","LABELS","REQUISITIONS","SERVICE","WORK COPY" S ORX=$S(ORI="SERVICE":0,1:$$GET^XPAR("ALL^"_ORL,"ORPF PROMPT FOR "_ORI,1,"I")),ORPARM=ORPARM_U_$S(ORX="*":0,1:1)
"RTN","ORMEVNT1",109,0)
 I $D(^XTMP("ORSURG",+$G(ORSRDA))) S ORL=+$G(^DIC(42,+$G(VAIP(5)),44))_";SC(" ;186 Reset loc
"RTN","ORMEVNT1",110,0)
 F ORI="LR","VBEC" S ORX=+$O(^DIC(9.4,"C",ORI,0)) S:ORX ORLR(ORX)=1
"RTN","ORMEVNT1",111,0)
 S ORX=OREVT,ORI=0
"RTN","ORMEVNT1",112,0)
 F  S ORI=+$O(^ORE(100.2,"DAD",OREVT,ORI)) Q:ORI<1  S ORX=ORX_U_ORI
"RTN","ORMEVNT1",113,0)
 F ORV=1:1:$L(ORX,U) S OREVT=$P(ORX,U,ORV) D  ;event[+children]
"RTN","ORMEVNT1",114,0)
 . F  S ORI=$O(^OR(100,"AEVNT",ORVP,OREVT,ORI)) Q:ORI'>0  D
"RTN","ORMEVNT1",115,0)
 .. S ORIFN=ORI,OR0=$G(^OR(100,ORIFN,0)),OR3=$G(^(3))
"RTN","ORMEVNT1",116,0)
 .. I ORIFN=+$P($G(^ORE(100.2,OREVT,0)),U,4) D  Q  ;event order
"RTN","ORMEVNT1",117,0)
 ... Q:$$TYPE^OREVNTX(OREVT)="D"  Q:$P(OR3,U,3)=11
"RTN","ORMEVNT1",118,0)
 ... S ORPRINT=+$G(ORPRINT)+1,ORPRINT(ORPRINT)=ORIFN_";1"_ORPARM
"RTN","ORMEVNT1",119,0)
 .. Q:$P(OR3,U,3)'=10  Q:$P(OR3,U,9)  ;released or cancelled, has parent
"RTN","ORMEVNT1",120,0)
 .. S:$G(ORL) $P(^OR(100,ORIFN,0),U,10)=ORL ;set location
"RTN","ORMEVNT1",121,0)
 .. S:$G(ORTS) $P(^OR(100,ORIFN,0),U,13)=ORTS ;set specialty
"RTN","ORMEVNT1",122,0)
 .. I $G(ORLR(+$P(OR0,U,14))),'$G(ORLAB) D BHS^ORMBLD(ORVP) S ORLAB=1
"RTN","ORMEVNT1",123,0)
 .. K ORERR D EN1^ORCSEND(ORIFN,.ORERR) Q:$G(ORERR)
"RTN","ORMEVNT1",124,0)
 .. Q:"^10^11^"[(U_$P($G(^OR(100,ORIFN,3)),U,3)_U)  D SAVE(ORIFN,OREVT,2)
"RTN","ORMEVNT1",125,0)
 .. S ORPRINT=+$G(ORPRINT)+1,ORPRINT(ORPRINT)=ORIFN_";1"_ORPARM
"RTN","ORMEVNT1",126,0)
 D BTS^ORMBLD(ORVP):$G(ORLAB) ;send batch hdr/tlr segments for labs
"RTN","ORMEVNT1",127,0)
 Q
"RTN","ORMEVNT1",128,0)
 ;
"RTN","ORMEVNT1",129,0)
ADMORD ; -- Add admission order to list
"RTN","ORMEVNT1",130,0)
 ;    Uses VAIP(13),ORADM from AUTODC
"RTN","ORMEVNT1",131,0)
 ;Q:$G(DGPMT)'=3
"RTN","ORMEVNT1",132,0)
 I $G(DGPMT)=3 Q:"^12^38^"[(U_$P(DGPMA,U,18)_U)  ;already included
"RTN","ORMEVNT1",133,0)
 N LAST,ADMEVT,IFN
"RTN","ORMEVNT1",134,0)
 S LAST=+$O(^ORE(100.2,"ADT",+$G(VAIP(13)),""),-1),ADMEVT=+$O(^(LAST,0))
"RTN","ORMEVNT1",135,0)
 S IFN=+$P($G(^ORE(100.2,ADMEVT,0)),U,4) Q:IFN<1
"RTN","ORMEVNT1",136,0)
 I $P($G(^OR(100,IFN,8,1,0)),U,16)<ORADM D  ;add to auto-dc list
"RTN","ORMEVNT1",137,0)
 . N ORI S ORI=+$O(^TMP("ORR",$J,ORLIST,"A"),-1),ORI=ORI+1
"RTN","ORMEVNT1",138,0)
 . S ^TMP("ORR",$J,ORLIST,ORI)=IFN
"RTN","ORMEVNT1",139,0)
 Q
"RTN","ORMEVNT1",140,0)
 ;
"RTN","ORMEVNT1",141,0)
XTMP ; -- Save auto-dc'd by package order numbers
"RTN","ORMEVNT1",142,0)
 N ORDC,ORIFN,X Q:'$G(OREVENT)
"RTN","ORMEVNT1",143,0)
 S ORDC="ORDC-"_$G(DGPMDA),ORIFN=0
"RTN","ORMEVNT1",144,0)
 F  S ORIFN=+$O(^XTMP(ORDC,ORIFN)) Q:ORIFN<1  S X=$G(^(ORIFN)) D
"RTN","ORMEVNT1",145,0)
 . D SAVE(ORIFN,OREVENT,3,X)
"RTN","ORMEVNT1",146,0)
 . S $P(^OR(100,+ORIFN,6),U,8)=OREVENT
"RTN","ORMEVNT1",147,0)
 Q
"RTN","ORMEVNT1",148,0)
 ;
"RTN","ORMEVNT1",149,0)
SAVE(IFN,EVT,NODE,PKG) ; -- Save order# IFN with EVT at NODE
"RTN","ORMEVNT1",150,0)
 ;    NODE=2: Released orders, NODE=3: Auto-DC'd orders
"RTN","ORMEVNT1",151,0)
 Q:'$G(IFN)!'$G(EVT)!'$G(NODE)  ;missing data
"RTN","ORMEVNT1",152,0)
 Q:$D(^ORE(100.2,EVT,NODE,+IFN,0))  ;already saved
"RTN","ORMEVNT1",153,0)
 N I,HDR,TOTAL
"RTN","ORMEVNT1",154,0)
 F I=1:1:10 L +^ORE(100.2,EVT,NODE,0):1 Q:$T  H 2
"RTN","ORMEVNT1",155,0)
 Q:'$T  S HDR=$G(^ORE(100.2,EVT,NODE,0))
"RTN","ORMEVNT1",156,0)
 I '$L(HDR) S:NODE=2 HDR="^100.26PA^^" S:NODE=3 HDR="^100.27PA^^"
"RTN","ORMEVNT1",157,0)
 Q:'$L(HDR)  S TOTAL=+$P(HDR,U,4),$P(HDR,U,3,4)=+IFN_U_(TOTAL+1)
"RTN","ORMEVNT1",158,0)
 S ^ORE(100.2,EVT,NODE,0)=HDR L -^ORE(100.2,EVT,NODE,0)
"RTN","ORMEVNT1",159,0)
 S ^ORE(100.2,EVT,NODE,+IFN,0)=+IFN_$S($D(PKG):U_PKG,1:"")
"RTN","ORMEVNT1",160,0)
 Q
"RTN","ORMEVNT1",161,0)
 ;
"RTN","ORMEVNT1",162,0)
EXP ; -- expire an order from EXP^ORMEVNT(ORDER,ORSTOP)
"RTN","ORMEVNT1",163,0)
 ;    [ORMTIME]
"RTN","ORMEVNT1",164,0)
 G:'$D(^OR(100,+ORDER,0)) EXPQ
"RTN","ORMEVNT1",165,0)
 N OR0,ORNMSP,ORSTS
"RTN","ORMEVNT1",166,0)
 S OR0=$G(^OR(100,+ORDER,0)),ORSTS=$P($G(^(3)),U,3)
"RTN","ORMEVNT1",167,0)
 I "^1^2^7^12^13^14^"[(U_ORSTS_U) G EXPQ ;done
"RTN","ORMEVNT1",168,0)
 I $O(^OR(100,+ORDER,2,0)) G EXPQ ;parent
"RTN","ORMEVNT1",169,0)
 I $P(^ORD(100.98,$P(OR0,U,11),0),U,3)="NV RX" G EXPQ  ;Non-VA med
"RTN","ORMEVNT1",170,0)
 S ORNMSP=$$NMSP^ORCD($P(OR0,U,14))
"RTN","ORMEVNT1",171,0)
 D:ORNMSP="PS"!(ORNMSP="FH") MSG^ORMBLD(+ORDER,"SS")
"RTN","ORMEVNT1",172,0)
 I ORNMSP="OR"!(ORNMSP="FH"),"^1^7^"'[(U_ORSTS_U) D STATUS^ORCSAVE2(+ORDER,7) ;ck FH
"RTN","ORMEVNT1",173,0)
EXPQ K ^OR(100,"AE",ORSTOP,ORDER)
"RTN","ORMEVNT1",174,0)
 Q
"RTN","ORMEVNT1",175,0)
 ;
"RTN","ORMEVNT1",176,0)
ACT ; -- activate an order from ACTIVE^ORMEVNT(ORDER,ORSTRT)
"RTN","ORMEVNT1",177,0)
 ;    [ORMTIME]
"RTN","ORMEVNT1",178,0)
 G:'$D(^OR(100,+ORDER,0)) ACTQ
"RTN","ORMEVNT1",179,0)
 N OR0,ORNMSP,ORSTS
"RTN","ORMEVNT1",180,0)
 S OR0=$G(^OR(100,+ORDER,0)),ORSTS=$P($G(^(3)),U,3)
"RTN","ORMEVNT1",181,0)
 I "^1^2^6^7^12^13^14^"[(U_ORSTS_U) G ACTQ ;done
"RTN","ORMEVNT1",182,0)
 I $O(^OR(100,+ORDER,2,0)) G ACTQ ;parent
"RTN","ORMEVNT1",183,0)
 S ORNMSP=$$NMSP^ORCD($P(OR0,U,14))
"RTN","ORMEVNT1",184,0)
 D:ORNMSP="PS"!(ORNMSP="FH") MSG^ORMBLD(+ORDER,"SS")
"RTN","ORMEVNT1",185,0)
 I ORNMSP="OR"!(ORNMSP="FH"),ORSTS=8 D STATUS^ORCSAVE2(+ORDER,6) ;ck FH
"RTN","ORMEVNT1",186,0)
ACTQ K ^OR(100,"AD",ORSTRT,ORDER)
"RTN","ORMEVNT1",187,0)
 Q
"RTN","ORMEVNT1",188,0)
 ;
"RTN","ORMEVNT1",189,0)
PUR ; -- purge an order
"RTN","ORMEVNT1",190,0)
 ;    from PURGE^ORMEVNT(ORDER)
"RTN","ORMEVNT1",191,0)
 N ORSTS,ORPK,ORNMSP,ORCHLD Q:'$D(^OR(100,ORDER))
"RTN","ORMEVNT1",192,0)
 S ORSTS=$P($G(^OR(100,ORDER,3)),U,3),ORPK=$G(^(4)),ORNMSP=$P($G(^(0)),U,14),ORNMSP=$$NMSP^ORCD(ORNMSP)
"RTN","ORMEVNT1",193,0)
 I '$L(ORPK)!(ORSTS=11)!(ORNMSP="OR")!(ORNMSP="LR"&('ORPK)) D DELETE^ORCSAVE2(ORDER) Q
"RTN","ORMEVNT1",194,0)
 I '$D(^OR(100,ORDER,2)) D MSG^ORMBLD(ORDER,"Z@") Q
"RTN","ORMEVNT1",195,0)
 S ORCHLD=0 F  S ORCHLD=$O(^OR(100,ORDER,2,ORCHLD)) Q:ORCHLD'>0  D MSG^ORMBLD(ORCHLD,"Z@")
"RTN","ORMEVNT1",196,0)
 I '$O(^OR(100,ORDER,2,0)) D DELETE^ORCSAVE2(ORDER) ; delete parent
"RTN","ORMEVNT1",197,0)
 Q
"RTN","ORMEVNT1",198,0)
 ;
"RTN","ORMEVNT1",199,0)
CHKOBS ;177, previous dx from obs?
"RTN","ORMEVNT1",200,0)
 N INVDT,PDCDT,PDCMVT,CADMDT
"RTN","ORMEVNT1",201,0)
 S CADMDT=+$G(VAIP(13,1)) Q:'CADMDT  ;Current admission d/t of movement
"RTN","ORMEVNT1",202,0)
 S INVDT=9999999.9999999-(+VAIP(3)) ;Inverse date of movement
"RTN","ORMEVNT1",203,0)
 S PDCDT=$O(^DGPM("ATID3",DFN,INVDT)) Q:'+PDCDT  ;No previous discharge
"RTN","ORMEVNT1",204,0)
 S PDCMVT=$O(^DGPM("ATID3",DFN,PDCDT,0))
"RTN","ORMEVNT1",205,0)
 Q:+$$MVT^DGPMOBS(PDCMVT)'=1  ;Quit if previous discharge not from obs
"RTN","ORMEVNT1",206,0)
 N VAIP
"RTN","ORMEVNT1",207,0)
 S VAIP("E")=PDCMVT
"RTN","ORMEVNT1",208,0)
 D IN5^VADPT
"RTN","ORMEVNT1",209,0)
 Q:'$G(VAIP(13))  ;No previous admission data
"RTN","ORMEVNT1",210,0)
 Q:$$FMDIFF^XLFDT(CADMDT,+$G(VAIP(3)),2)>3600  ;Quit if previous discharge was more than 1 hour before admission
"RTN","ORMEVNT1",211,0)
 S ORADM=+$G(VAIP(13,1))
"RTN","ORMEVNT1",212,0)
 Q
"VER")
8.0^22.0
"BLD",8499,6)
^301
**END**
**END**
