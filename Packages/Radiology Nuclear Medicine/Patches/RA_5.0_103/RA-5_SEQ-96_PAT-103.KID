Released RA*5*103 SEQ #96
Extracted from mail message
**KIDS**:RA*5.0*103^

**INSTALL NAME**
RA*5.0*103
"BLD",7603,0)
RA*5.0*103^RADIOLOGY/NUCLEAR MEDICINE^0^3100903^y
"BLD",7603,1,0)
^^1^1^3100407^
"BLD",7603,1,1,0)
CPT DISPLAY ISSUE, OUTSIDE REPORT ALERT ISSUE, OUTSIDE REPORT STATUS ISSUE
"BLD",7603,4,0)
^9.64PA^^
"BLD",7603,6.3)
2
"BLD",7603,"ABPKG")
n
"BLD",7603,"KRN",0)
^9.67PA^779.2^20
"BLD",7603,"KRN",.4,0)
.4
"BLD",7603,"KRN",.401,0)
.401
"BLD",7603,"KRN",.402,0)
.402
"BLD",7603,"KRN",.403,0)
.403
"BLD",7603,"KRN",.5,0)
.5
"BLD",7603,"KRN",.84,0)
.84
"BLD",7603,"KRN",3.6,0)
3.6
"BLD",7603,"KRN",3.8,0)
3.8
"BLD",7603,"KRN",9.2,0)
9.2
"BLD",7603,"KRN",9.8,0)
9.8
"BLD",7603,"KRN",9.8,"NM",0)
^9.68A^5^4
"BLD",7603,"KRN",9.8,"NM",1,0)
RACPT1^^0^B21685324
"BLD",7603,"KRN",9.8,"NM",2,0)
RAHLRPT^^0^B66664791
"BLD",7603,"KRN",9.8,"NM",4,0)
RARTE7^^0^B24383964
"BLD",7603,"KRN",9.8,"NM",5,0)
RAHLRU^^0^B29214365
"BLD",7603,"KRN",9.8,"NM","B","RACPT1",1)

"BLD",7603,"KRN",9.8,"NM","B","RAHLRPT",2)

"BLD",7603,"KRN",9.8,"NM","B","RAHLRU",5)

"BLD",7603,"KRN",9.8,"NM","B","RARTE7",4)

"BLD",7603,"KRN",19,0)
19
"BLD",7603,"KRN",19.1,0)
19.1
"BLD",7603,"KRN",101,0)
101
"BLD",7603,"KRN",409.61,0)
409.61
"BLD",7603,"KRN",771,0)
771
"BLD",7603,"KRN",779.2,0)
779.2
"BLD",7603,"KRN",870,0)
870
"BLD",7603,"KRN",8989.51,0)
8989.51
"BLD",7603,"KRN",8989.52,0)
8989.52
"BLD",7603,"KRN",8994,0)
8994
"BLD",7603,"KRN","B",.4,.4)

"BLD",7603,"KRN","B",.401,.401)

"BLD",7603,"KRN","B",.402,.402)

"BLD",7603,"KRN","B",.403,.403)

"BLD",7603,"KRN","B",.5,.5)

"BLD",7603,"KRN","B",.84,.84)

"BLD",7603,"KRN","B",3.6,3.6)

"BLD",7603,"KRN","B",3.8,3.8)

"BLD",7603,"KRN","B",9.2,9.2)

"BLD",7603,"KRN","B",9.8,9.8)

"BLD",7603,"KRN","B",19,19)

"BLD",7603,"KRN","B",19.1,19.1)

"BLD",7603,"KRN","B",101,101)

"BLD",7603,"KRN","B",409.61,409.61)

"BLD",7603,"KRN","B",771,771)

"BLD",7603,"KRN","B",779.2,779.2)

"BLD",7603,"KRN","B",870,870)

"BLD",7603,"KRN","B",8989.51,8989.51)

"BLD",7603,"KRN","B",8989.52,8989.52)

"BLD",7603,"KRN","B",8994,8994)

"BLD",7603,"QUES",0)
^9.62^^
"BLD",7603,"REQB",0)
^9.611^5^4
"BLD",7603,"REQB",1,0)
RA*5.0*69^1
"BLD",7603,"REQB",2,0)
RA*5.0*84^1
"BLD",7603,"REQB",4,0)
RA*5.0*97^1
"BLD",7603,"REQB",5,0)
RA*5.0*81^1
"BLD",7603,"REQB","B","RA*5.0*69",1)

"BLD",7603,"REQB","B","RA*5.0*81",5)

"BLD",7603,"REQB","B","RA*5.0*84",2)

"BLD",7603,"REQB","B","RA*5.0*97",4)

"MBREQ")
0
"PKG",18,-1)
1^1
"PKG",18,0)
RADIOLOGY/NUCLEAR MEDICINE^RA^REGISTERS PATIENTS,RECORDS EXAMS,PROFILES,AMIS REPORTS
"PKG",18,20,0)
^9.402P^^
"PKG",18,22,0)
^9.49I^1^1
"PKG",18,22,1,0)
5.0^3051109^2980407^50
"PKG",18,22,1,"PAH",1,0)
103^3100903
"PKG",18,22,1,"PAH",1,1,0)
^^1^1^3100903
"PKG",18,22,1,"PAH",1,1,1,0)
CPT DISPLAY ISSUE, OUTSIDE REPORT ALERT ISSUE, OUTSIDE REPORT STATUS ISSUE
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","RACPT1")
0^1^B21685324^B19705347
"RTN","RACPT1",1,0)
RACPT1 ;HISC/GJC,FPT-Procedure/CPT Stats Report ;12/29/00  11:28
"RTN","RACPT1",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**26,69,103**;Mar 16, 1998;Build 2
"RTN","RACPT1",3,0)
 ;04/05/2010 KAM/BP Remedy Call 349101 CPT Codes w/modifiers do not
"RTN","RACPT1",4,0)
 ;                                     display properly
"RTN","RACPT1",5,0)
 ;01/19/2006 KAM/BAY Remedy Call 97373 CPT Code Display Problem
"RTN","RACPT1",6,0)
CHK ;
"RTN","RACPT1",7,0)
 I $O(RACCESS(DUZ,""))="" D SETVARS^RAPSET1(0) S RAPSTX=""
"RTN","RACPT1",8,0)
 I $O(RACCESS(DUZ,""))="" D ACCVIO^RAUTL19 S RAQUIT=1 Q
"RTN","RACPT1",9,0)
 D ASK1^RAWKL ;ask if want separate CPT mods
"RTN","RACPT1",10,0)
 I $$DIVLOC^RAUTL7() D  S RAQUIT=1 Q
"RTN","RACPT1",11,0)
 . I $O(^TMP($J,"RA D-TYPE",""))="" W !!?5,"No divisions selected." Q
"RTN","RACPT1",12,0)
 . I $O(^TMP($J,"RA I-TYPE",""))="" W !!?5,"No imaging types selected."
"RTN","RACPT1",13,0)
 . Q
"RTN","RACPT1",14,0)
 W ! S RACAN=$$YESNO()
"RTN","RACPT1",15,0)
 ; RACAN=0: cancelled exams excluded, RACAN=1: cancelled exams
"RTN","RACPT1",16,0)
 ; are included, RACAN=-1: exit option
"RTN","RACPT1",17,0)
 S:RACAN<0 RAQUIT=1 Q:$G(RAQUIT)
"RTN","RACPT1",18,0)
 K DIR S DIR(0)="Y",DIR("B")="Yes"
"RTN","RACPT1",19,0)
 S DIR("A")="Do you wish to include all Procedures"
"RTN","RACPT1",20,0)
 S DIR("?",1)="Enter 'Yes' to select all entries in the file."
"RTN","RACPT1",21,0)
 S DIR("?")="Enter 'No' to select a subset of entries in the file."
"RTN","RACPT1",22,0)
 W ! D ^DIR K DIR I $D(DIRUT) S RAQUIT=1 Q
"RTN","RACPT1",23,0)
 S RAINPUT=+Y
"RTN","RACPT1",24,0)
 I RAINPUT=0 D  Q:$G(RAQUIT)
"RTN","RACPT1",25,0)
 . K RADIC
"RTN","RACPT1",26,0)
 . S RADIC="^RAMIS(71,",RADIC(0)="EMQZ",RADIC("A")="Select PROCEDURE: "
"RTN","RACPT1",27,0)
 . S RAUTIL="RA P-TYPE" D EN1^RASELCT(.RADIC,RAUTIL,"",RAINPUT)
"RTN","RACPT1",28,0)
 . I $O(^TMP($J,"RA P-TYPE",""))=""!$G(RAQUIT) W !!?5,"No procedures selected." S RAQUIT=1
"RTN","RACPT1",29,0)
 . Q
"RTN","RACPT1",30,0)
 S RANUMPRC=$$PROCNUM()
"RTN","RACPT1",31,0)
DATE D DATE^RAUTL Q:RAPOP
"RTN","RACPT1",32,0)
 ;S Z=9999999.9999, WHY IS THIS NEEDED?
"RTN","RACPT1",33,0)
 S RABEG=BEGDATE,RAEND=ENDDATE+.9
"RTN","RACPT1",34,0)
 S DIR(0)="S^I:INPATIENT;O:OUTPATIENT;B:BOTH;",DIR("B")="BOTH",DIR("?",1)="This CPT Workload Report can be broken",DIR("?")="out by Inpatient, Outpatient or Both.",DIR("A")="Report to include"
"RTN","RACPT1",35,0)
 D ^DIR S RASORT=Y I $D(DIRUT) S RAQUIT=1 Q
"RTN","RACPT1",36,0)
 K DIR,X,Y
"RTN","RACPT1",37,0)
 S ZTRTN="START^RACPT"
"RTN","RACPT1",38,0)
 F RASV="RACAN","RANUMPRC","BEGDATE","ENDDATE","RABEG","RAEND","RASORT","RAINPUT","RACMLIST" S ZTSAVE(RASV)=""
"RTN","RACPT1",39,0)
 F RASV="D","I","P" S ZTSAVE("^TMP($J,""RA "_RASV_"-TYPE"",")=""
"RTN","RACPT1",40,0)
 W ! D ZIS^RAUTL
"RTN","RACPT1",41,0)
 Q
"RTN","RACPT1",42,0)
PRINT ; Output data
"RTN","RACPT1",43,0)
 ; 01/19/2006 KAM/BAY Changed next line to utilize $$NAMCODE^RACPTMSC
"RTN","RACPT1",44,0)
 I '$G(RACMLIST) W !,$P($$NAMCODE^RACPTMSC(CPT,""),U),?7,$S($D(^RAMIS(71,J,0)):$E($P(^(0),"^"),1,38),1:"UNKNOWN") S RATOT(1)=+$P(^(0),U,10) ;cost per unit
"RTN","RACPT1",45,0)
 ; 01/19/2006 KAM/BAY Changed next line to utilize $$NAMCODE^RACPTMSC
"RTN","RACPT1",46,0)
 ;I $G(RACMLIST) W !,$P($$NAMCODE^RACPTMSC(CPT,""),U),?15,$S($D(^RAMIS(71,J,0)):$E($P(^(0),"^"),1,30),1:"UNKNOWN") S RATOT(1)=+$P(^(0),U,10) ;cost per unit
"RTN","RACPT1",47,0)
 ; 01/13/2010 KAM/BAY Changed next line to display CPT w/Modifier
"RTN","RACPT1",48,0)
 I $G(RACMLIST) W !,$S(CPT["-":$P($$NAMCODE^RACPTMSC($P(CPT,"-"),""),U)_"-"_$P(CPT,"-",2),1:$P($$NAMCODE^RACPTMSC(CPT,""),U)),?15,$S($D(^RAMIS(71,J,0)):$E($P(^(0),"^"),1,30),1:"UNKNOWN") S RATOT(1)=+$P(^(0),U,10) ;cost per unit KEN TESTING
"RTN","RACPT1",49,0)
 S RATOT(2)=RATOT*RATOT(1) ;occurrence * cost per unit
"RTN","RACPT1",50,0)
 S RATOT(4)=$G(^TMP($J,"RA",RAI,RADIV,RAIMAG(1),"DONE"))
"RTN","RACPT1",51,0)
 S RATOT(5)=$G(^TMP($J,"RA",RAI,RADIV,RAIMAG(1),"COST"))
"RTN","RACPT1",52,0)
 W ?45,$J(RATOT,5),?52,$S(RATOT(4)=0:$J(0,3,0),1:$J(RATOT/RATOT(4)*100,3,0))
"RTN","RACPT1",53,0)
 W ?56,$J(RATOT(1),8,2)
"RTN","RACPT1",54,0)
 W ?65,$J(RATOT(2),10,2),?77,$S(RATOT(5)=0:$J(0,3,0),1:$J(RATOT(2)/RATOT(5)*100,3,0))
"RTN","RACPT1",55,0)
 I $E(IOST,1,2)="C-",$Y+4>IOSL D HANG1,HED:'RAEXIT
"RTN","RACPT1",56,0)
 Q
"RTN","RACPT1",57,0)
HED ; Issue header
"RTN","RACPT1",58,0)
 W:($E(IOST)="C")!(PAGE>1) @IOF
"RTN","RACPT1",59,0)
 N RA S RA=">>>>> PROCEDURE/CPT STATISTICS REPORT "
"RTN","RACPT1",60,0)
 S RA=RA_$S(RAI="I":"(INPATIENT)",RAI="O":"(OUTPATIENT)",1:"")_" <<<<<"
"RTN","RACPT1",61,0)
 W !?78-$L(RA)\2,RA,?70,"Page: ",PAGE S PAGE=PAGE+1
"RTN","RACPT1",62,0)
 W !!,"    Division: ",$S(RADIV="":"Unknown",$D(^DIC(4,RADIV,0)):$P(^(0),U),1:"Unknown")
"RTN","RACPT1",63,0)
 W !,"Imaging Type: ",RAIMAG(0)
"RTN","RACPT1",64,0)
 W ?52,"For period: ",BEGDATE(0)," to"
"RTN","RACPT1",65,0)
 W !,"    Run Date: ",RARUNDTE,?64,ENDDATE(0)
"RTN","RACPT1",66,0)
 W !,"    # of Procedures selected: ",$S(RAINPUT:"All",1:RANUMPRC)
"RTN","RACPT1",67,0)
 W ?52,"Cancelled Exams: "_$S(RACAN:"in",1:"ex")_"cluded"
"RTN","RACPT1",68,0)
 W:'$G(RACMLIST) !!,"CPT",?7,"PROCEDURE"
"RTN","RACPT1",69,0)
 W:$G(RACMLIST) !!,"CPT (* : >3 CPT mods)",?25,"PROCEDURE"
"RTN","RACPT1",70,0)
 W ?44,"# DONE",?52,"(%)",?59,"$UNIT",?69,"$TOTAL",?77,"(%)",!,QQ
"RTN","RACPT1",71,0)
 Q
"RTN","RACPT1",72,0)
HANG ; get to the EOP
"RTN","RACPT1",73,0)
 Q:$E(IOST,1,2)'="C-"
"RTN","RACPT1",74,0)
 F Z=1:1:(IOSL-($Y+4)) W !
"RTN","RACPT1",75,0)
HANG1 ; Issue EOP prompt
"RTN","RACPT1",76,0)
 R !!,"Press RETURN to continue or an '^' to stop ",X:DTIME
"RTN","RACPT1",77,0)
 S RAEXIT=(X=U)
"RTN","RACPT1",78,0)
 Q
"RTN","RACPT1",79,0)
SRTPA(RA) ; Check on the sort parameters.  If inpatient and outpatient,
"RTN","RACPT1",80,0)
 ; issue a EOP prompt when the sort parameter changes.
"RTN","RACPT1",81,0)
 ; '1' implies that we are sorting by both inpatient/outpatient and
"RTN","RACPT1",82,0)
 ; are on the second parameter, '0' implies that we fail the above
"RTN","RACPT1",83,0)
 ; conditions.
"RTN","RACPT1",84,0)
 I ($L(RASORT,",")#2)=0,(RA>1),('+$G(RAEOPFLG)) Q 1
"RTN","RACPT1",85,0)
 Q 0
"RTN","RACPT1",86,0)
PROCNUM() ; Determine the number of procedures a user has chosen.
"RTN","RACPT1",87,0)
 N X,Y S X="",Y=0
"RTN","RACPT1",88,0)
 F  S X=$O(^TMP($J,"RA P-TYPE",X)) Q:X']""  S Y=Y+1
"RTN","RACPT1",89,0)
 Q Y
"RTN","RACPT1",90,0)
YESNO() ; Pass back the user's response to the 'Yes/No' question
"RTN","RACPT1",91,0)
 ; returns: 0=user answers No, 1=user answers Yes, -1='^' or timeout
"RTN","RACPT1",92,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y S DIR(0)="Y",DIR("B")="Yes"
"RTN","RACPT1",93,0)
 S DIR("A")="Do you wish to include cancelled cases"
"RTN","RACPT1",94,0)
 S DIR("?",1)="Enter 'Yes' if exams with an examination status of Cancelled"
"RTN","RACPT1",95,0)
 S DIR("?",2)="are to be included on the report.  Enter 'No' if cancelled exams"
"RTN","RACPT1",96,0)
 S DIR("?")="are to be excluded from the report." D ^DIR
"RTN","RACPT1",97,0)
 S:$D(DIRUT) Y=-1
"RTN","RACPT1",98,0)
 Q Y
"RTN","RAHLRPT")
0^2^B66664791^B65194652
"RTN","RAHLRPT",1,0)
RAHLRPT ;HISC/CAH AISC/SAW-Compiles HL7 'ORU' Message Type ; 4/26/01 10:40am
"RTN","RAHLRPT",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**2,12,10,25,81,80,84,103**;Mar 16, 1998;Build 2
"RTN","RAHLRPT",3,0)
 ; 12/15/2009 BP/KAM RA*5*103 Outside Report Status Code needs 'F'
"RTN","RAHLRPT",4,0)
EN ; Called from RA RPT and RA RPT 2.3 protocol entry action
"RTN","RAHLRPT",5,0)
 ; Input variables:
"RTN","RAHLRPT",6,0)
 ;   RADFN=file 2 IEN (DFN)
"RTN","RAHLRPT",7,0)
 ;   RADTI=file 70 Exam subrecord IEN (reverse date/time)
"RTN","RAHLRPT",8,0)
 ;   RACNI=file 70 Case subrecord IEN
"RTN","RAHLRPT",9,0)
 ;   RARPT=file 74 Report IEN
"RTN","RAHLRPT",10,0)
 ;   RASSS=List of Subscribers passed into GENERATE^HLMA  will be set into HLP array.
"RTN","RAHLRPT",11,0)
 ; Output variables:
"RTN","RAHLRPT",12,0)
 ;   HLA("HLS", array containing HL7 msg
"RTN","RAHLRPT",13,0)
 ;   RATELREL = 1  Indicates that the text: 'Released for local dictation by National Teleradiology'
"RTN","RAHLRPT",14,0)
 ;              has been included in Impression or Report section
"RTN","RAHLRPT",15,0)
 ;   RATELX =   Text used as indication of Release for local dictation... if not set use defauld above...
"RTN","RAHLRPT",16,0)
 ;   RATELE =   1 If RANOSEND is Teleradiology type vendor
"RTN","RAHLRPT",17,0)
 ;
"RTN","RAHLRPT",18,0)
 ;Integration Agreements
"RTN","RAHLRPT",19,0)
 ;----------------------
"RTN","RAHLRPT",20,0)
 ;$$GET1^DIQ(2056); ^DIWP(10011); $$HLDATE/$$HLNAME^HLFNC(10106)
"RTN","RAHLRPT",21,0)
 ;GENERATE^HLMA(2164); DEM^VADPT(10061); $$FMTHL7^XLFDT(10103)
"RTN","RAHLRPT",22,0)
 ;$$PATCH^XPDUTL(10141); $$VERSION^XPDUTL(10141)
"RTN","RAHLRPT",23,0)
 ;
"RTN","RAHLRPT",24,0)
 N RASET,RACN0,RATELE,RATELREL,RATELX
"RTN","RAHLRPT",25,0)
 D INIT^RAHLRPTT ;Patch 84
"RTN","RAHLRPT",26,0)
 I +$P(RACN0,U,25)=2 D  Q  ; printset
"RTN","RAHLRPT",27,0)
 .; loop through all cases in set and create message
"RTN","RAHLRPT",28,0)
 .S RASET=1
"RTN","RAHLRPT",29,0)
 .N RACNI,RAII S RAII=0
"RTN","RAHLRPT",30,0)
 .F  S RAII=$O(^RADPT(RADFN,"DT",RADTI,"P",RAII)) Q:RAII'>0  D
"RTN","RAHLRPT",31,0)
 .. Q:$P(^RADPT(RADFN,"DT",RADTI,"P",RAII,0),U,25)'=2
"RTN","RAHLRPT",32,0)
 .. S RACNI=RAII
"RTN","RAHLRPT",33,0)
 .. D NEW
"RTN","RAHLRPT",34,0)
NEW ; new variables
"RTN","RAHLRPT",35,0)
 S:$D(ZTQUEUED) ZTREQ="@" ; delete task from task global
"RTN","RAHLRPT",36,0)
 N DFN,DIWF,DIWL,DIWR,RACPT,RACPTNDE,RADTECN,RADTE0,RADTV,RAI,RAN,RAOBR4,RAPRCNDE,RAPROC,RAPROCIT,RAPRV,RARPT0
"RTN","RAHLRPT",37,0)
 N VADM,VAERR,X,X1,X2,XX2,Y,X0,OBR36,EID,HL,INT,HLQ,HLFS,HLECH,HLA,RAN K RAVADM
"RTN","RAHLRPT",38,0)
 D INIT^RAHLRU ;initialize HL7 variables
"RTN","RAHLRPT",39,0)
 Q:+$G(HL)=15  ;no known client(item) linked to the event driver protocol
"RTN","RAHLRPT",40,0)
 Q:$O(HL(""))=""  ;failed return from INIT^HLFNC2 (called by INIT^RAHLRU)
"RTN","RAHLRPT",41,0)
 ;
"RTN","RAHLRPT",42,0)
 ;** branch to new HL7 logic when the HL7 version surpasses 2.3 **
"RTN","RAHLRPT",43,0)
 I HL("VER")>2.3,($T(^RAHLRPT1))'="" D EN^RAHLRPT1(RADFN,RADTI,RACNI,RAEID),EXIT Q
"RTN","RAHLRPT",44,0)
 ;** branch to new HL7 logic when the HL7 version surpasses 2.3 **
"RTN","RAHLRPT",45,0)
 ;
"RTN","RAHLRPT",46,0)
 S DFN=RADFN D DEM^VADPT
"RTN","RAHLRPT",47,0)
 I VADM(1)']"" S HLP("ERRTEXT")="Invalid Patient Identifier" G EXIT
"RTN","RAHLRPT",48,0)
 S RAN=0
"RTN","RAHLRPT",49,0)
 S RAVADM(3)=$S($E(+VADM(3),6,7)="00":"",1:+VADM(3)) ; NOTE: Check
"RTN","RAHLRPT",50,0)
 ; for an inexact date of birth.  If inexact, pass null for DOB in
"RTN","RAHLRPT",51,0)
 ; the 'PID' segment.  Some COTS systems can't handle inexact DOB's.
"RTN","RAHLRPT",52,0)
 D SETUP^RAHLRPTT,PID^RAHLRPTT,OBR,OBXPRC,OBXIMP,OBXDIA,OBXRPT,OBXMOD,OBXTCM
"RTN","RAHLRPT",53,0)
EXIT ; set HL7 message type & return to RA RPT protocol
"RTN","RAHLRPT",54,0)
 ;For P84 see if this is a >>Released for local reading<< type report and if yes resend the ORM (^RAHLRS1)...
"RTN","RAHLRPT",55,0)
 I $G(RATELREL) D RESEND^RAHLRPTT(RADFN,RADTI,RACNI) Q  ;P84 resend in the case that report released from Telerad
"RTN","RAHLRPT",56,0)
 S HL("MTN")="ORU"
"RTN","RAHLRPT",57,0)
 N HLEID,HLARYTYP,HLFORMAT,HLMTIEN,HLP
"RTN","RAHLRPT",58,0)
 S HLEID=RAEID,HLARYTYP="LM",HLFORMAT=1,HLMTIEN="",HLP("PRIORITY")="I"
"RTN","RAHLRPT",59,0)
 M:$D(RASSS) HLP=RASSS
"RTN","RAHLRPT",60,0)
 D:$D(RASSSX(HLEID)) GETHLP^RAHLRS1(HLEID,.HLP,"RASSSX")
"RTN","RAHLRPT",61,0)
 D GENERATE^HLMA(HLEID,HLARYTYP,HLFORMAT,.HLRESLT,HLMTIEN,.HLP)
"RTN","RAHLRPT",62,0)
 K RAVADM
"RTN","RAHLRPT",63,0)
 Q
"RTN","RAHLRPT",64,0)
 ;
"RTN","RAHLRPT",65,0)
OBR ;Compile 'OBR' Segment
"RTN","RAHLRPT",66,0)
 S RAOBR4=$P(RACPTNDE,U)_$E(HLECH)_$P(RACPTNDE,U,2)_$E(HLECH)_"C4"_$E(HLECH)_+RAPROC_$E(HLECH)_$P(RAPRCNDE,U)_$E(HLECH)_"99RAP"
"RTN","RAHLRPT",67,0)
 ; Replace above with following when Imaging can cope with ESC chars
"RTN","RAHLRPT",68,0)
 ; S RAOBR4=$P(RACPTNDE,U)_$E(HLECH)_$$ESCAPE^RAHLRU($P(RACPTNDE,U,2))_$E(HLECH)_"C4"_$E(HLECH)_+RAPROC_$E(HLECH)_$$ESCAPE^RAHLRU($P(RAPRCNDE,U))_$E(HLECH)_"99RAP"
"RTN","RAHLRPT",69,0)
 ; Have to use LOCAL code if Broad Procedure - no CPT code
"RTN","RAHLRPT",70,0)
 I $P(RAOBR4,$E(HLECH))=""!($P(RAOBR4,$E(HLECH),2)="") S $P(RAOBR4,$E(HLECH),1,3)=$P(RAOBR4,$E(HLECH),4,5)_$E(HLECH)_"LOCAL"
"RTN","RAHLRPT",71,0)
 S X1="OBR"_HLFS_HLFS_HLFS_RADTI_"-"_RACNI_$E(HLECH)_RADTECN_$E(HLECH)_"L"_HLFS_RAOBR4_HLFS_HLFS_HLFS_RADTE0_HLFS_HLQ_HLFS_HLQ_HLFS_HLFS_HLFS_HLFS_HLFS,Y=$$HLDATE^HLFNC($P(RARPT0,"^",6)) S X1=X1_Y_HLFS_HLFS
"RTN","RAHLRPT",72,0)
 S RAPRV=$$GET1^DIQ(200,+$P(RACN0,"^",14),.01)
"RTN","RAHLRPT",73,0)
 S Y=$$HLNAME^HLFNC(RAPRV) S X1=X1_$S(Y]"":+$P(RACN0,"^",14)_$E(HLECH)_Y,1:"")
"RTN","RAHLRPT",74,0)
 S $P(X1,HLFS,19)=$S($D(^DIC(42,+$P(RACN0,"^",6),0)):$P(^(0),"^"),$D(^SC(+$P(RACN0,"^",8),0)):$P(^(0),"^"),1:"Unknown")
"RTN","RAHLRPT",75,0)
 ; PCE 21 -> ien file #79.1~name of img loc~stn #~stn name
"RTN","RAHLRPT",76,0)
 N RACN00,RA20 S RACN00=$G(^RADPT(RADFN,"DT",RADTI,0))
"RTN","RAHLRPT",77,0)
 S RA20=+$G(^RA(79.1,+$P(RACN00,U,4),0))
"RTN","RAHLRPT",78,0)
 S $P(X1,HLFS,21)=$P(RACN00,"^",4)_$E(HLECH)_$P($G(^SC(RA20,0)),"^")_$E(HLECH)_$P(RACN00,"^",3)_$E(HLECH)_$P($G(^DIC(4,$P(RACN00,U,3),0)),"^")
"RTN","RAHLRPT",79,0)
 S $P(X1,HLFS,21)=$P(X1,HLFS,21)
"RTN","RAHLRPT",80,0)
 ; Replace above with following when Imaging can cope with ESC chars
"RTN","RAHLRPT",81,0)
 ; S $P(X1,HLFS,21)=$$ESCAPE^RAHLRU($P(X1,HLFS,21))
"RTN","RAHLRPT",82,0)
 ;
"RTN","RAHLRPT",83,0)
 S OBR36=9999999.9999-RADTI
"RTN","RAHLRPT",84,0)
 S $P(X1,HLFS,37)=$$FMTHL7^XLFDT(OBR36)
"RTN","RAHLRPT",85,0)
 ;
"RTN","RAHLRPT",86,0)
 S RADTV=HLDT1 I $P(RARPT0,"^",5)="V",$P(RARPT0,"^",7) K RADTV S RADTV=$$HLDATE^HLFNC($P(RARPT0,"^",7))
"RTN","RAHLRPT",87,0)
 ;04/06/2010 BP/KAM RA*5*103 Remedy Call 363538 Changed next line to
"RTN","RAHLRPT",88,0)
 ;                                              test for 'EF' or 'V'
"RTN","RAHLRPT",89,0)
 ;S $P(X1,HLFS,23)=RADTV,$P(X1,HLFS,26)=$S($P(RARPT0,"^",5)="V":"F",1:"R")
"RTN","RAHLRPT",90,0)
 S $P(X1,HLFS,23)=RADTV,$P(X1,HLFS,26)=$S(($P(RARPT0,"^",5)="V")!($P(RARPT0,"^",5)="EF"):"F",1:"R")
"RTN","RAHLRPT",91,0)
 ;Principal Result Interpreter = Verifying Physician
"RTN","RAHLRPT",92,0)
 S $P(X1,HLFS,33)="" I $P(RARPT0,"^",9) D
"RTN","RAHLRPT",93,0)
 .S X2=$$GET1^DIQ(200,$P(RARPT0,"^",9),.01) Q:X2']""
"RTN","RAHLRPT",94,0)
 .S Y=$$HLNAME^HLFNC(X2) Q:Y']""
"RTN","RAHLRPT",95,0)
 .S $P(X1,HLFS,33)=$P(RARPT0,"^",9)_$E(HLECH)_Y
"RTN","RAHLRPT",96,0)
 ;Assistant Result Interpreter = Primary Interpreting Staff OR Resident
"RTN","RAHLRPT",97,0)
 S $P(X1,HLFS,34)="" I $P(RACN0,"^",15) D
"RTN","RAHLRPT",98,0)
 .S X2=$$GET1^DIQ(200,$P(RACN0,"^",15),.01) Q:X2']""
"RTN","RAHLRPT",99,0)
 .S Y=$$HLNAME^HLFNC(X2) Q:Y']""
"RTN","RAHLRPT",100,0)
 .S $P(X1,HLFS,34)=$P(RACN0,"^",15)_$E(HLECH)_Y
"RTN","RAHLRPT",101,0)
 I $P(RACN0,"^",12) D
"RTN","RAHLRPT",102,0)
 .S X2=$$GET1^DIQ(200,$P(RACN0,"^",12),.01) Q:X2']""
"RTN","RAHLRPT",103,0)
 .S Y=$$HLNAME^HLFNC(X2) Q:Y']""
"RTN","RAHLRPT",104,0)
 .S $P(X1,HLFS,34)=$P(RACN0,"^",12)_$E(HLECH)_Y
"RTN","RAHLRPT",105,0)
 ;Technician = Technologist
"RTN","RAHLRPT",106,0)
 S $P(X1,HLFS,35)="" I $O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"TC",0)) D
"RTN","RAHLRPT",107,0)
 .S X2=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"TC",0)) I X2']"" Q
"RTN","RAHLRPT",108,0)
 .S X2=$P($G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"TC",X2,0)),"^",1) I X2']"" Q
"RTN","RAHLRPT",109,0)
 .S XX2=$$GET1^DIQ(200,X2,.01) Q:XX2']""
"RTN","RAHLRPT",110,0)
 .S Y=$$HLNAME^HLFNC(XX2) I Y']"" Q
"RTN","RAHLRPT",111,0)
 .S $P(X1,HLFS,35)=X2_$E(HLECH)_Y
"RTN","RAHLRPT",112,0)
 ;Transcriptionist
"RTN","RAHLRPT",113,0)
 S $P(X1,HLFS,36)="" I $G(^RARPT(RARPT,"T")) D
"RTN","RAHLRPT",114,0)
 .S X2=$$GET1^DIQ(200,$P(^RARPT(RARPT,"T"),"^",1),.01) I X2']"" Q
"RTN","RAHLRPT",115,0)
 .S Y=$$HLNAME^HLFNC(X2) I Y']"" Q
"RTN","RAHLRPT",116,0)
 .S $P(X1,HLFS,36)=^RARPT(RARPT,"T")_$E(HLECH)_Y
"RTN","RAHLRPT",117,0)
 ;
"RTN","RAHLRPT",118,0)
 ; if long str, break so 2nd str begins with separator to avoid abend
"RTN","RAHLRPT",119,0)
 N RAPART I $L(X1)>245 F RAPART=5:1:18 S RAPART(1)=$P(X1,HLFS,1,RAPART),RAPART(2)=$P(X1,HLFS,RAPART+1,99) Q:$L(RAPART(1))<245&($L(RAPART(2))<245)&($P(RAPART(2),HLFS)="")
"RTN","RAHLRPT",120,0)
 I $D(RAPART) K:RAPART=18 RAPART ;if RAPART reaches 18, then something's wrong, so kill RAPART to allow abend due "string too long"
"RTN","RAHLRPT",121,0)
 S RAN=RAN+1
"RTN","RAHLRPT",122,0)
 I $D(RAPART) S HLA("HLS",RAN)=$P(RAPART(1),HLFS)_HLFS,HLA("HLS",RAN,1)=$P(RAPART(1),HLFS,2,99)_HLFS,HLA("HLS",RAN,2)=RAPART(2) K RAPART Q
"RTN","RAHLRPT",123,0)
 S HLA("HLS",RAN)=X1
"RTN","RAHLRPT",124,0)
 Q
"RTN","RAHLRPT",125,0)
OBXDIA ;Compile 'OBX' Segment for Diagnostic Code
"RTN","RAHLRPT",126,0)
 S RAI=$P($G(^RA(78.3,+$P(RACN0,"^",13),0)),"^") I RAI]"" D
"RTN","RAHLRPT",127,0)
 .S RAN=RAN+1
"RTN","RAHLRPT",128,0)
 .I $$PATCH^XPDUTL("MAG*2.5*1")!(+$$VERSION^XPDUTL("MAG")>2.5) D
"RTN","RAHLRPT",129,0)
 ..S HLA("HLS",RAN)="OBX"_HLFS_HLFS_"CE"_HLFS_"D"_$E(HLECH)_"DIAGNOSTIC CODE"_$E(HLECH)_"L"_HLFS_HLFS_+$P(RACN0,"^",13)_$E(HLECH)_RAI_$E(HLECH)_"L"
"RTN","RAHLRPT",130,0)
 ..; Replace above with following when Imaging can cope with ESC chars
"RTN","RAHLRPT",131,0)
 ..; S HLA("HLS",RAN)="OBX"_HLFS_HLFS_"CE"_HLFS_"D"_$E(HLECH)_"DIAGNOSTIC CODE"_$E(HLECH)_"L"_HLFS_HLFS_+$P(RACN0,"^",13)_$E(HLECH)_$$ESCAPE^RAHLRU(RAI)_$E(HLECH)_"L"
"RTN","RAHLRPT",132,0)
 .E  D
"RTN","RAHLRPT",133,0)
 ..S HLA("HLS",RAN)="OBX"_HLFS_HLFS_"ST"_HLFS_"D"_$E(HLECH)_"DIAGNOSTIC CODE"_$E(HLECH)_"L"_HLFS_HLFS_RAI
"RTN","RAHLRPT",134,0)
 .D OBX11^RAHLRU
"RTN","RAHLRPT",135,0)
 Q:'$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"DX",0))  ;any secondary dx
"RTN","RAHLRPT",136,0)
 S X2=0
"RTN","RAHLRPT",137,0)
OBXDIA2 S X2=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"DX",X2)) Q:'X2
"RTN","RAHLRPT",138,0)
 S Y=+^(X2,0),X=$P($G(^RA(78.3,+Y,0)),U)
"RTN","RAHLRPT",139,0)
 I X]"" D
"RTN","RAHLRPT",140,0)
 .S RAN=RAN+1
"RTN","RAHLRPT",141,0)
 .I $$PATCH^XPDUTL("MAG*2.5*1")!(+$$VERSION^XPDUTL("MAG")>2.5) D
"RTN","RAHLRPT",142,0)
 ..S HLA("HLS",RAN)="OBX"_HLFS_HLFS_"CE"_HLFS_"D"_$E(HLECH)_"DIAGNOSTIC CODE"_$E(HLECH)_"L"_HLFS_HLFS_Y_$E(HLECH)_X_$E(HLECH)_"L"
"RTN","RAHLRPT",143,0)
 ..; Replace above with following when Imaging can cope with ESC chars
"RTN","RAHLRPT",144,0)
 ..; S HLA("HLS",RAN)="OBX"_HLFS_HLFS_"CE"_HLFS_"D"_$E(HLECH)_"DIAGNOSTIC CODE"_$E(HLECH)_"L"_HLFS_HLFS_Y_$E(HLECH)_$$ESCAPE^RAHLRU(X)_$E(HLECH)_"L"
"RTN","RAHLRPT",145,0)
 .E  D
"RTN","RAHLRPT",146,0)
 ..S HLA("HLS",RAN)="OBX"_HLFS_HLFS_"ST"_HLFS_"D"_$E(HLECH)_"DIAGNOSTIC CODE"_$E(HLECH)_"L"_HLFS_HLFS_X
"RTN","RAHLRPT",147,0)
 .D OBX11^RAHLRU
"RTN","RAHLRPT",148,0)
 G OBXDIA2
"RTN","RAHLRPT",149,0)
 ;
"RTN","RAHLRPT",150,0)
OBXIMP ;Compile 'OBX' segment for Impression
"RTN","RAHLRPT",151,0)
 I '$O(^RARPT(RARPT,"I",0)) S RAN=RAN+1,HLA("HLS",RAN)="OBX"_HLFS_HLFS_"TX"_HLFS_"I"_$E(HLECH)_"IMPRESSION"_$E(HLECH)_"L"_HLFS_HLFS_"None Entered" D OBX11^RAHLRU Q
"RTN","RAHLRPT",152,0)
 K ^UTILITY($J,"W") S DIWF="",DIWR=80,DIWL=1
"RTN","RAHLRPT",153,0)
 F RAI=0:0 S RAI=$O(^RARPT(RARPT,"I",RAI)) Q:'RAI  I $D(^(RAI,0)) S X=^(0) D RATELREL,^DIWP
"RTN","RAHLRPT",154,0)
 F RAI=0:0 S RAI=$O(^UTILITY($J,"W",DIWL,RAI)) Q:'RAI  I $D(^(RAI,0)) S RAN=RAN+1,HLA("HLS",RAN)="OBX"_HLFS_HLFS_"TX"_HLFS_"I"_$E(HLECH)_"IMPRESSION"_$E(HLECH)_"L"_HLFS_HLFS_^(0) D OBX11^RAHLRU
"RTN","RAHLRPT",155,0)
 Q
"RTN","RAHLRPT",156,0)
OBXMOD ;Compile 'OBX' Segment for Modifiers
"RTN","RAHLRPT",157,0)
 S RAN=RAN+1 D OBXMOD^RAHLRU
"RTN","RAHLRPT",158,0)
 Q
"RTN","RAHLRPT",159,0)
OBXPRC ;Compile 'OBX' Segment for Procedure
"RTN","RAHLRPT",160,0)
 S RAN=RAN+1 D OBXPRC^RAHLRU
"RTN","RAHLRPT",161,0)
 Q
"RTN","RAHLRPT",162,0)
OBXTCM ;Compile 'OBX' Segment for Tech Comments
"RTN","RAHLRPT",163,0)
 D OBXTCM^RAHLRU
"RTN","RAHLRPT",164,0)
 Q
"RTN","RAHLRPT",165,0)
OBXRPT ;Compile 'OBX' Segment for Radiology Report Text
"RTN","RAHLRPT",166,0)
 I '$O(^RARPT(RARPT,"R",0)) S RAN=RAN+1,HLA("HLS",RAN)="OBX"_HLFS_HLFS_"TX"_HLFS_"R"_$E(HLECH)_"REPORT"_$E(HLECH)_"L"_HLFS_HLFS_"None Entered" D OBX11^RAHLRU Q
"RTN","RAHLRPT",167,0)
 K ^UTILITY($J,"W") S DIWF="",DIWR=80,DIWL=1
"RTN","RAHLRPT",168,0)
 F RAI=0:0 S RAI=$O(^RARPT(RARPT,"R",RAI)) Q:'RAI  I $D(^(RAI,0)) S X=^(0) D RATELREL,^DIWP
"RTN","RAHLRPT",169,0)
 F RAI=0:0 S RAI=$O(^UTILITY($J,"W",DIWL,RAI)) Q:'RAI  I $D(^(RAI,0)) S RAN=RAN+1,HLA("HLS",RAN)="OBX"_HLFS_HLFS_"TX"_HLFS_"R"_$E(HLECH)_"REPORT"_$E(HLECH)_"L"_HLFS_HLFS_^(0) D OBX11^RAHLRU
"RTN","RAHLRPT",170,0)
 ; Replace above with following when Imaging can cope with ESC chars
"RTN","RAHLRPT",171,0)
 ; F RAI=0:0 S RAI=$O(^UTILITY($J,"W",DIWL,RAI)) Q:'RAI  I $D(^(RAI,0)) S RAN=RAN+1,HLA("HLS",RAN)="OBX"_HLFS_HLFS_"TX"_HLFS_"R"_$E(HLECH)_"REPORT"_$E(HLECH)_"L"_HLFS_HLFS_$$ESCAPE^RAHLRU(^(0)) D OBX11^RAHLRU
"RTN","RAHLRPT",172,0)
 Q
"RTN","RAHLRPT",173,0)
RATELREL ;Release the study for local reading
"RTN","RAHLRPT",174,0)
 I $G(RATELE),X[$G(RATELX) S RATELREL=1 Q
"RTN","RAHLRPT",175,0)
 ; 
"RTN","RAHLRU")
0^5^B29214365^B28042615
"RTN","RAHLRU",1,0)
RAHLRU ;HISC/SWM - utilities for HL7 messaging ;03/16/98  11:03
"RTN","RAHLRU",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**10,25,81,103**;Mar 16, 1998;Build 2
"RTN","RAHLRU",3,0)
 ;
"RTN","RAHLRU",4,0)
 ; 08/13/2010 BP/KAM RA*5*103 Outside Report Status Code needs 'F'
"RTN","RAHLRU",5,0)
 ;IA 2701 used to store ICN in PID-3 ($$GETICN^MPIF001)
"RTN","RAHLRU",6,0)
 ;IA 3630 used to build the PID segment for our ORM & ORU HL7 messages
"RTN","RAHLRU",7,0)
 ;
"RTN","RAHLRU",8,0)
OBX11 ; set OBX-11, = 12th piece of string where piece 1 is "OBX"
"RTN","RAHLRU",9,0)
 N RARPTIEN,Y
"RTN","RAHLRU",10,0)
 S RARPTIEN=+$G(RARPT)
"RTN","RAHLRU",11,0)
 S Y=$P($G(^RARPT(RARPTIEN,0)),U,5)
"RTN","RAHLRU",12,0)
 ; 08/13/2010 BP/KAM RA*5*103 Remedy Call 363538 Changed next line to
"RTN","RAHLRU",13,0)
 ;                                               test for 'EF' or 'V'
"RTN","RAHLRU",14,0)
 ;S $P(HLA("HLS",RAN),HLFS,12)=$S(Y="R":"P",Y="V":"F",1:"I")
"RTN","RAHLRU",15,0)
 S $P(HLA("HLS",RAN),HLFS,12)=$S(Y="R":"P",(Y="V")!(Y="EF"):"F",1:"I")
"RTN","RAHLRU",16,0)
 ; END *103 CHANGE
"RTN","RAHLRU",17,0)
 I $D(^RARPT(RARPTIEN,"ERR")) D  Q
"RTN","RAHLRU",18,0)
 .S $P(HLA("HLS",RAN),HLFS,12)="C"
"RTN","RAHLRU",19,0)
 Q
"RTN","RAHLRU",20,0)
 ;
"RTN","RAHLRU",21,0)
ESCAPE(XDTA) ;apply the appropriate escape sequence to a string of data
"RTN","RAHLRU",22,0)
 ; Insert a escape sequence place holder, then swap the escape sequence
"RTN","RAHLRU",23,0)
 ; place holder with the real escape sequence. This action requires two
"RTN","RAHLRU",24,0)
 ; passes because the escape sequence uses the escape ("\") character.
"RTN","RAHLRU",25,0)
 ; Input:  XDTA=data string to be escaped (if necessary)
"RTN","RAHLRU",26,0)
 ;         HLFS=field separator     (global scope; set in INIT^RAHLR)
"RTN","RAHLRU",27,0)
 ;        HLECH=encoding characters (global scope; set in INIT^RAHLR)
"RTN","RAHLRU",28,0)
 ; Return: XDTA=an escaped data string
"RTN","RAHLRU",29,0)
 ;
"RTN","RAHLRU",30,0)
 N UFS,UCS,URS,UEC,USS ;field, component, repetition, escape, & subcomponent
"RTN","RAHLRU",31,0)
 S UFS=HLFS,UCS=$E(HLECH),URS=$E(HLECH,2),UEC=$E(HLECH,3),USS=$E(HLECH,4)
"RTN","RAHLRU",32,0)
 F  Q:XDTA'[UFS  S XDTA=$P(XDTA,UFS)_$C(1)_$P(XDTA,UFS,2,999)
"RTN","RAHLRU",33,0)
 F  Q:XDTA'[UCS  S XDTA=$P(XDTA,UCS)_$C(2)_$P(XDTA,UCS,2,999)
"RTN","RAHLRU",34,0)
 F  Q:XDTA'[URS  S XDTA=$P(XDTA,URS)_$C(3)_$P(XDTA,URS,2,999)
"RTN","RAHLRU",35,0)
 F  Q:XDTA'[UEC  S XDTA=$P(XDTA,UEC)_$C(4)_$P(XDTA,UEC,2,999)
"RTN","RAHLRU",36,0)
 F  Q:XDTA'[USS  S XDTA=$P(XDTA,USS)_$C(5)_$P(XDTA,USS,2,999)
"RTN","RAHLRU",37,0)
 F  Q:XDTA'[$C(1)  S XDTA=$P(XDTA,$C(1))_UEC_"F"_UEC_$P(XDTA,$C(1),2,999)
"RTN","RAHLRU",38,0)
 F  Q:XDTA'[$C(2)  S XDTA=$P(XDTA,$C(2))_UEC_"S"_UEC_$P(XDTA,$C(2),2,999)
"RTN","RAHLRU",39,0)
 F  Q:XDTA'[$C(3)  S XDTA=$P(XDTA,$C(3))_UEC_"R"_UEC_$P(XDTA,$C(3),2,999)
"RTN","RAHLRU",40,0)
 F  Q:XDTA'[$C(4)  S XDTA=$P(XDTA,$C(4))_UEC_"E"_UEC_$P(XDTA,$C(4),2,999)
"RTN","RAHLRU",41,0)
 F  Q:XDTA'[$C(5)  S XDTA=$P(XDTA,$C(5))_UEC_"T"_UEC_$P(XDTA,$C(5),2,999)
"RTN","RAHLRU",42,0)
 Q XDTA
"RTN","RAHLRU",43,0)
 ;
"RTN","RAHLRU",44,0)
 ;
"RTN","RAHLRU",45,0)
 ;ESCAPE(STR)    ;'Escape out' the formatting codes in data strings...
"RTN","RAHLRU",46,0)
 ; Input: Where STR is the data string to 'escape out'.
"RTN","RAHLRU",47,0)
 ;    ex: "this is a test case^"
"RTN","RAHLRU",48,0)
 ;Output: "this is a test case\S\"
"RTN","RAHLRU",49,0)
 ;
"RTN","RAHLRU",50,0)
 ;assuming the following as our encoding characters (HLECH): "^~\&" 
"RTN","RAHLRU",51,0)
 ;encoding character position, character representations, & escape seq
"RTN","RAHLRU",52,0)
 ;1) component separator    "^"  \S\
"RTN","RAHLRU",53,0)
 ;2) repetition separator   "~"  \R\
"RTN","RAHLRU",54,0)
 ;3) escape character       "\"  \E\
"RTN","RAHLRU",55,0)
 ;4) subcomponent separator "&"  \T\
"RTN","RAHLRU",56,0)
 ;
"RTN","RAHLRU",57,0)
 ;assuming the following as our field separator (HLFS): "|" the escape
"RTN","RAHLRU",58,0)
 ;sequence is: \F\. All of the following can be embedded in data, so
"RTN","RAHLRU",59,0)
 ;field separator and encoding characters have to be converted to the
"RTN","RAHLRU",60,0)
 ;correct formatting codes (escape sequences). We'll accomplish this by
"RTN","RAHLRU",61,0)
 ;concatenating the field separator string to the encoding character
"RTN","RAHLRU",62,0)
 ;string (ENCDE).
"RTN","RAHLRU",63,0)
 ;
"RTN","RAHLRU",64,0)
 ;Q:STR="" STR ;no string to escape...
"RTN","RAHLRU",65,0)
 ;N BUF,ESC,CH,I1,I2,ENCDE S ENCDE=HLFS_HLECH
"RTN","RAHLRU",66,0)
 ;--- Find all occurences of field separator & encoding
"RTN","RAHLRU",67,0)
 ;--- characters; save their positions to a local array
"RTN","RAHLRU",68,0)
 ;F I1=1:1:5  D
"RTN","RAHLRU",69,0)
 ;. S CH=$E(ENCDE,I1),I2=1
"RTN","RAHLRU",70,0)
 ;. F  S I2=$F(STR,CH,I2)  Q:'I2  S BUF(I2-1)=I1
"RTN","RAHLRU",71,0)
 ;Q:$D(BUF)<10 STR
"RTN","RAHLRU",72,0)
 ;--- Replace HL7 field separator & encoding chars with formatting codes
"RTN","RAHLRU",73,0)
 ;S (BUF,I2)="",ESC=$E(HLECH,3)  S:ESC="" ESC="\"
"RTN","RAHLRU",74,0)
 ;F  S I1=I2,I2=$O(BUF(I2))  Q:I2=""  D
"RTN","RAHLRU",75,0)
 ;. S BUF=BUF_$E(STR,I1+1,I2-1)_ESC_$E("FSRET",BUF(I2))_ESC
"RTN","RAHLRU",76,0)
 ;Q BUF_$E(STR,I1+1,$L(STR))
"RTN","RAHLRU",77,0)
 ;
"RTN","RAHLRU",78,0)
OBXPRC ;Compile 'OBX' Segment for Procedure
"RTN","RAHLRU",79,0)
 S HLA("HLS",RAN)="OBX"_HLFS_HLFS_"CE"_HLFS_"P"_$E(HLECH)_"PROCEDURE"_$E(HLECH)_"L"_HLFS_HLFS_$P(RACN0,"^",2)
"RTN","RAHLRU",80,0)
 S X=$S($D(^RAMIS(71,+$P(RACN0,"^",2),0)):$P(^(0),"^"),1:""),HLA("HLS",RAN)=HLA("HLS",RAN)_$E(HLECH)_X_$E(HLECH)_"L" D OBX11
"RTN","RAHLRU",81,0)
 ; Replace above with following when Imaging can cope with ESC chars
"RTN","RAHLRU",82,0)
 ; S X=$S($D(^RAMIS(71,+$P(RACN0,"^",2),0)):$P(^(0),"^"),1:""),HLA("HLS",RAN)=HLA("HLS",RAN)_$E(HLECH)_$$ESCAPE(X)_$E(HLECH)_"L" D OBX11
"RTN","RAHLRU",83,0)
 Q
"RTN","RAHLRU",84,0)
OBXMOD ; Compile 'OBX' segments for both types of modifiers
"RTN","RAHLRU",85,0)
 ; Procedure modifiers
"RTN","RAHLRU",86,0)
 N X3
"RTN","RAHLRU",87,0)
 D MODS^RAUTL2 S HLA("HLS",RAN)="OBX"_HLFS_HLFS_"TX"_HLFS_"M"_$E(HLECH)_"MODIFIERS"_$E(HLECH)_"L"_HLFS_HLFS_Y D OBX11
"RTN","RAHLRU",88,0)
 Q:Y(1)="None"
"RTN","RAHLRU",89,0)
 ; CPT Modifiers
"RTN","RAHLRU",90,0)
 F RAI=1:1 S X0=$P(Y(1),", ",RAI),X1=$P(Y(2),", ",RAI) Q:X0=""  D
"RTN","RAHLRU",91,0)
 . S RAN=RAN+1
"RTN","RAHLRU",92,0)
 . S X3=$$BASICMOD^RACPTMSC(X1,DT)
"RTN","RAHLRU",93,0)
 . S HLA("HLS",RAN)="OBX"_HLFS_HLFS_"CE"_HLFS_"C4"_$E(HLECH)_"CPT MODIFIERS"_$E(HLECH)_"C4"_HLFS_HLFS_X0_$E(HLECH)_$P(X3,"^",3)_$E(HLECH)_"C4"
"RTN","RAHLRU",94,0)
 . ; Replace above with following when Imaging can cope with ESC chars
"RTN","RAHLRU",95,0)
 . ;S HLA("HLS",RAN)="OBX"_HLFS_HLFS_"CE"_HLFS_"C4"_$E(HLECH)_"CPT MODIFIERS"_$E(HLECH)_"C4"_HLFS_HLFS_X0_$E(HLECH)_$$ESCAPE($P(X3,"^",3))_$E(HLECH)_"C4"
"RTN","RAHLRU",96,0)
 . I $P(X3,"^",4)]"" S HLA("HLS",RAN)=HLA("HLS",RAN)_$E(HLECH)_$P(X3,"^",4)_$E(HLECH)_$P(X3,"^",3)_$E(HLECH)_"C4"
"RTN","RAHLRU",97,0)
 . ; Replace above with following when Imaging can cope with ESC chars
"RTN","RAHLRU",98,0)
 . ;I $P(X3,"^",4)]"" S HLA("HLS",RAN)=HLA("HLS",RAN)_$E(HLECH)_$P(X3,"^",4)_$E(HLECH)_$$ESCAPE($P(X3,"^",3))_$E(HLECH)_"C4"
"RTN","RAHLRU",99,0)
 . D OBX11
"RTN","RAHLRU",100,0)
 . Q
"RTN","RAHLRU",101,0)
 Q
"RTN","RAHLRU",102,0)
 ;
"RTN","RAHLRU",103,0)
OBXTCM ; Compile 'OBX' segment for latest TECH COMMENT
"RTN","RAHLRU",104,0)
 ;
"RTN","RAHLRU",105,0)
 ; Only Released version of Imaging 2.5 able to handle Tech Comments
"RTN","RAHLRU",106,0)
 Q:'($$PATCH^XPDUTL("MAG*2.5*1")!(+$$VERSION^XPDUTL("MAG")>2.5))
"RTN","RAHLRU",107,0)
 ;
"RTN","RAHLRU",108,0)
 N X4,X3
"RTN","RAHLRU",109,0)
 S X4=$$GETTCOM^RAUTL11(RADFN,RADTI,RACNI)
"RTN","RAHLRU",110,0)
 Q:X4=""
"RTN","RAHLRU",111,0)
 S RAN=RAN+1
"RTN","RAHLRU",112,0)
 S HLA("HLS",RAN)="OBX"_HLFS_HLFS_"TX"_HLFS_"TCM"_$E(HLECH)_"TECH COMMENT"_$E(HLECH)_"L"_HLFS_HLFS
"RTN","RAHLRU",113,0)
 D OBX11
"RTN","RAHLRU",114,0)
 I $L(X4)+$L(HLA("HLS",RAN))'>245 D  Q
"RTN","RAHLRU",115,0)
 .S $P(HLA("HLS",RAN),HLFS,6)=X4
"RTN","RAHLRU",116,0)
 ;
"RTN","RAHLRU",117,0)
 ; If Tech Comment is v. long it will need to be
"RTN","RAHLRU",118,0)
 ; split into two parts. Do not split words if possible....
"RTN","RAHLRU",119,0)
 ;
"RTN","RAHLRU",120,0)
 S X3=$E(X4,1,245-$L(HLA("HLS",RAN)))
"RTN","RAHLRU",121,0)
 I $L(X3," ")>1 S X3=$P(X3," ",1,$L(X3," ")-1)
"RTN","RAHLRU",122,0)
 S X4=$P(X4,X3,2)
"RTN","RAHLRU",123,0)
 S $P(HLA("HLS",RAN),HLFS,6)=X3
"RTN","RAHLRU",124,0)
 S HLA("HLS",RAN,1)=X4_HLFS_$P(HLA("HLS",RAN),HLFS,7,12)
"RTN","RAHLRU",125,0)
 S HLA("HLS",RAN)=$P(HLA("HLS",RAN),HLFS,1,6)
"RTN","RAHLRU",126,0)
 Q
"RTN","RAHLRU",127,0)
 ;
"RTN","RAHLRU",128,0)
INIT ; initialize HL7 variables; called from RAHLR & RAHLRPT
"RTN","RAHLRU",129,0)
 Q:'$G(RAEID)  ;undefined server application
"RTN","RAHLRU",130,0)
 S HLDT=$$NOW^XLFDT(),HLDT1=$$HLDATE^HLFNC(HLDT),EID=RAEID
"RTN","RAHLRU",131,0)
 S HL="HLS(""HLS"")",INT=1
"RTN","RAHLRU",132,0)
 D INIT^HLFNC2(EID,.HL,INT)
"RTN","RAHLRU",133,0)
 Q:'$D(HL("Q"))  ;improperly defined server application
"RTN","RAHLRU",134,0)
 S HLQ=HL("Q"),HLFS=HL("FS"),HLECH=HL("ECH") K EID,INT
"RTN","RAHLRU",135,0)
 Q
"RTN","RAHLRU",136,0)
 ;
"RTN","RAHLRU",137,0)
DOB(X) ;strip off trailing "0"'s from the date of birth
"RTN","RAHLRU",138,0)
 I $E(X,5,6)="00" S X=$E(X,1,4) ;if no month then no day, return year
"RTN","RAHLRU",139,0)
 E  I $E(X,7,8)="00" S X=$E(X,1,6) ;if month & no day, return month/year
"RTN","RAHLRU",140,0)
 Q X
"RTN","RAHLRU",141,0)
 ;
"RTN","RAHLRU",142,0)
CPTMOD(RAIEN,HLECH,DT) ;return OBX-5 as it pertains to CPT Modifiers
"RTN","RAHLRU",143,0)
 ;called from: RAHLRPT1 & RAHLR2
"RTN","RAHLRU",144,0)
 ;input: RAIEN=IEN of the record in file 81.3
"RTN","RAHLRU",145,0)
 ;       HLECH=HL7 encoding characters
"RTN","RAHLRU",146,0)
 ;          DT=today's date
"RTN","RAHLRU",147,0)
 N X S X=$$BASICMOD^RACPTMSC(RAIEN,DT)
"RTN","RAHLRU",148,0)
 ;1st piece=IEN #81.3; 3rd piece=versioned name; 5th piece=coding sys
"RTN","RAHLRU",149,0)
 Q RAIEN_$E(HLECH,1)_$$ESCAPE^RAHLRU($P(X,U,3))_$E(HLECH,1)_$P(X,U,5)
"RTN","RAHLRU",150,0)
GETSFLAG(SAN,MTN,ETN,VER) ;Return HL nessage flag (79.721,1)
"RTN","RAHLRU",151,0)
 Q:'$L(SAN)!'$L(MTN)!'$L(ETN)!'$L(VER) 0
"RTN","RAHLRU",152,0)
 S SAN=$O(^HL(771,"B",SAN,0)) Q:'SAN 0
"RTN","RAHLRU",153,0)
 S MTN=$O(^HL(771.2,"B",MTN,0)) Q:'MTN 0
"RTN","RAHLRU",154,0)
 S ETN=$O(^HL(779.001,"B",ETN,0)) Q:'ETN 0
"RTN","RAHLRU",155,0)
 S VER=$O(^HL(771.5,"B",VER,0)) Q:'VER 0
"RTN","RAHLRU",156,0)
 Q +$P($G(^RA(79.7,SAN,1,MTN,1,ETN,1,VER,0)),U,2)
"RTN","RARTE7")
0^4^B24383964^B23848565
"RTN","RARTE7",1,0)
RARTE7 ;HISC/SM continuation - Delete a Report, Outside Rpt misc;10/10/08 16:05
"RTN","RARTE7",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**56,95,97,103**;Mar 16, 1998;Build 2
"RTN","RARTE7",3,0)
 ;Supported IA #2053 NOW^XLFDT, FILE^DIE, UPDATE^DIE
"RTN","RARTE7",4,0)
 ;Supported IA #2052 GET1^DID
"RTN","RARTE7",5,0)
 ;Supported IA #2055 ROOT^DILFD
"RTN","RARTE7",6,0)
 ;
"RTN","RARTE7",7,0)
 ;04/06/2010 BP/KAM RA*5*103 Remedy Ticket 324541 Outside Reports does
"RTN","RARTE7",8,0)
 ;                           not generate Imaging Results CPRS Alert
"RTN","RARTE7",9,0)
 Q
"RTN","RARTE7",10,0)
MARKDEL ; set field 5 to "X" to mark rpt as deleted
"RTN","RARTE7",11,0)
 ; also update activity log, send report deletion bulletin, store then delete
"RTN","RARTE7",12,0)
 ; associated DX, Staff, Resident data
"RTN","RARTE7",13,0)
 N DA,DIK,RA1,RA2,RAA,RAFDA,RAIEN2,RAIENDX,RAIENL,RACLOAK
"RTN","RARTE7",14,0)
 N RAMEMARR,RAMSG,RAOUT,RAPRTSET,RASAVE,RAX,RA7003
"RTN","RARTE7",15,0)
 N RAF1,RAF2,RAF3,RAIENS
"RTN","RARTE7",16,0)
 ;
"RTN","RARTE7",17,0)
 ;PART 1 - mark report as deleted
"RTN","RARTE7",18,0)
 ;
"RTN","RARTE7",19,0)
 S RASAVE=$P(^RARPT(RAIEN,0),U,5) ;save current rpt status
"RTN","RARTE7",20,0)
 S RAFDA(74,RAIEN_",",5)="X" ;change rpt status
"RTN","RARTE7",21,0)
 D FILE^DIE("","RAFDA")
"RTN","RARTE7",22,0)
 K RAFDA
"RTN","RARTE7",23,0)
 ;
"RTN","RARTE7",24,0)
 ;PART 2 - add new entry to ACTIVITY LOG and store primary data
"RTN","RARTE7",25,0)
 ;
"RTN","RARTE7",26,0)
 S RA7003=^RADPT(RADFN,"DT",RADTI,"P",RACNI,0)
"RTN","RARTE7",27,0)
 S RAIENL="+1,"_RAIEN_","
"RTN","RARTE7",28,0)
 S RAFDA(74.01,RAIENL,.01)=+$E($$NOW^XLFDT(),1,12)
"RTN","RARTE7",29,0)
 S RAFDA(74.01,RAIENL,2)="X"
"RTN","RARTE7",30,0)
 S RAFDA(74.01,RAIENL,3)=$G(DUZ)
"RTN","RARTE7",31,0)
 S RAFDA(74.01,RAIENL,4)=RASAVE ;store before-delete rpt status
"RTN","RARTE7",32,0)
 S RAFDA(74.01,RAIENL,5)=$P(RA7003,U,13) ; store Prim DX code
"RTN","RARTE7",33,0)
 S RAFDA(74.01,RAIENL,7)=$P(RA7003,U,15) ; store Prim Staff
"RTN","RARTE7",34,0)
 S RAFDA(74.01,RAIENL,9)=$P(RA7003,U,12) ; store Prim Resident
"RTN","RARTE7",35,0)
 D UPDATE^DIE(,"RAFDA","RAOUT","RAMSG")
"RTN","RARTE7",36,0)
 W:$D(RAMSG("DIERR")) !!,"Could not update deleted Report's Activity Log."
"RTN","RARTE7",37,0)
 K RAFDA
"RTN","RARTE7",38,0)
 ;
"RTN","RARTE7",39,0)
 ; store Secondary DXs/Staff/Residents under this ACTIVITY LOG
"RTN","RARTE7",40,0)
 ; if printset, no need to store each case's sec DX, they should be same
"RTN","RARTE7",41,0)
 Q:'RAOUT(1)  ;no record set in 74.01
"RTN","RARTE7",42,0)
 S RAIEN2=RAOUT(1)
"RTN","RARTE7",43,0)
 ;
"RTN","RARTE7",44,0)
 ;PART 3 - send report deletion bulletin
"RTN","RARTE7",45,0)
 ;
"RTN","RARTE7",46,0)
 D CLOAK^RABUL3 ; requires RAIEN and RAIEN2
"RTN","RARTE7",47,0)
 ;
"RTN","RARTE7",48,0)
 ;PART 4 - store secondary DX, Staff, Resident data
"RTN","RARTE7",49,0)
 ;
"RTN","RARTE7",50,0)
 ;don't need separate logic for printset for storing identical data
"RTN","RARTE7",51,0)
 F RAFLD=5,7,9 D SET7401(RAFLD)
"RTN","RARTE7",52,0)
 ;
"RTN","RARTE7",53,0)
 ;PART 5 - remove Prim. and Sec.  DX, Staff, Resident from case record
"RTN","RARTE7",54,0)
 ;
"RTN","RARTE7",55,0)
 D EN2^RAUTL20(.RAMEMARR) ; is case part of a printset?
"RTN","RARTE7",56,0)
 G:RAPRTSET PSET
"RTN","RARTE7",57,0)
 ;
"RTN","RARTE7",58,0)
 ; single case
"RTN","RARTE7",59,0)
 ;
"RTN","RARTE7",60,0)
 ; delete primaries
"RTN","RARTE7",61,0)
 S RAFDA(70.03,RACNI_","_RADTI_","_RADFN_",",13)="@" ;Prim. DX
"RTN","RARTE7",62,0)
 S RAFDA(70.03,RACNI_","_RADTI_","_RADFN_",",15)="@" ;Prim. Staff
"RTN","RARTE7",63,0)
 S RAFDA(70.03,RACNI_","_RADTI_","_RADFN_",",12)="@" ;Prim. Resident
"RTN","RARTE7",64,0)
 D FILE^DIE("","RAFDA")
"RTN","RARTE7",65,0)
 K RAFDA
"RTN","RARTE7",66,0)
 ;
"RTN","RARTE7",67,0)
 ; delete secondaries
"RTN","RARTE7",68,0)
 F RASUB=70.14,70.11,70.09 D KILSEC(RASUB,RACNI)
"RTN","RARTE7",69,0)
 Q
"RTN","RARTE7",70,0)
 ;
"RTN","RARTE7",71,0)
 ; cases from printset
"RTN","RARTE7",72,0)
 ;
"RTN","RARTE7",73,0)
PSET ;delete primary and secondary data
"RTN","RARTE7",74,0)
 S RA1=0
"RTN","RARTE7",75,0)
 F  S RA1=$O(RAMEMARR(RA1)) Q:RA1=""  D
"RTN","RARTE7",76,0)
 .; delete primary from 70.03
"RTN","RARTE7",77,0)
 .S RAFDA(70.03,RA1_","_RADTI_","_RADFN_",",13)="@" ;Prim. DX
"RTN","RARTE7",78,0)
 .S RAFDA(70.03,RA1_","_RADTI_","_RADFN_",",15)="@" ;Prim. Staff
"RTN","RARTE7",79,0)
 .S RAFDA(70.03,RA1_","_RADTI_","_RADFN_",",12)="@" ;Prim. Resident
"RTN","RARTE7",80,0)
 .D FILE^DIE("","RAFDA")
"RTN","RARTE7",81,0)
 .K RAFDA
"RTN","RARTE7",82,0)
 .F RASUB=70.14,70.11,70.09 D KILSEC(RASUB,RA1)
"RTN","RARTE7",83,0)
 Q
"RTN","RARTE7",84,0)
KILSEC(RAF2,RAC1) ;kill secondary data
"RTN","RARTE7",85,0)
 ;RAF2 subfile number from file 70's secondaries
"RTN","RARTE7",86,0)
 ;RAC1 ien for subfile 70.03
"RTN","RARTE7",87,0)
 N RAA,RAROOT
"RTN","RARTE7",88,0)
 K DA,DIK
"RTN","RARTE7",89,0)
 S RAIENS=1_","_RAC1_","_RADTI_","_RADFN_","
"RTN","RARTE7",90,0)
 S RAROOT=$$ROOT^DILFD(RAF2,RAIENS,1) ; closed root
"RTN","RARTE7",91,0)
 M RAA=@RAROOT
"RTN","RARTE7",92,0)
 Q:$O(RAA(0))'>0  ;no secondaries
"RTN","RARTE7",93,0)
 D DA^DILF(RAIENS,.DA) ;get the DA array
"RTN","RARTE7",94,0)
 S DIK=$$ROOT^DILFD(RAF2,RAIENS)
"RTN","RARTE7",95,0)
 S RA2=0
"RTN","RARTE7",96,0)
 F  S RA2=$O(RAA(RA2)) Q:'RA2  S DA=RA2 D ^DIK
"RTN","RARTE7",97,0)
 K DIK
"RTN","RARTE7",98,0)
 Q
"RTN","RARTE7",99,0)
SET7401(X) ; use this for DX, Staff, Resident secondaries 
"RTN","RARTE7",100,0)
 ; set activity log's subfiles to store any secondaries
"RTN","RARTE7",101,0)
 K RAFDA,RAMSG,RAA
"RTN","RARTE7",102,0)
 ; X is the Field number from subfile 74.01:
"RTN","RARTE7",103,0)
 ; 5 = BEFORE DELETION PRIM. DX CODE
"RTN","RARTE7",104,0)
 ; 7 = BEFORE DELETION PRIM. STAFF
"RTN","RARTE7",105,0)
 ; 9 = BEFORE DELETION PRIM. RESIDENT
"RTN","RARTE7",106,0)
 ;
"RTN","RARTE7",107,0)
 ; RAF1 = subfile number from file 74's activity log
"RTN","RARTE7",108,0)
 ; RAF2 = subfile number from file 70's secondaries
"RTN","RARTE7",109,0)
 ; RAF3 = subfile number pointed to from file 70's secondaries
"RTN","RARTE7",110,0)
 ;
"RTN","RARTE7",111,0)
 S RAF1=$S(X=5:74.16,X=7:74.18,X=9:74.19,1:"") Q:RAF1=""
"RTN","RARTE7",112,0)
 S RAF2=$S(X=5:70.14,X=7:70.11,X=9:70.09,1:"") Q:RAF2=""
"RTN","RARTE7",113,0)
 S RAIENS=1_","_RACNI_","_RADTI_","_RADFN_","
"RTN","RARTE7",114,0)
 S RAROOT=$$ROOT^DILFD(RAF2,RAIENS,1) ; closed root, file 70's secondaries
"RTN","RARTE7",115,0)
 M RAA=@RAROOT
"RTN","RARTE7",116,0)
 Q:$O(RAA(0))'>0  ; no secondaries
"RTN","RARTE7",117,0)
 ;
"RTN","RARTE7",118,0)
 S RAF3=$$GET1^DID(RAF2,.01,"","POINTER")
"RTN","RARTE7",119,0)
 ; extract file number from RAF3
"RTN","RARTE7",120,0)
 S RAF3=$TR(RAF3,$TR(RAF3,"0123456789."))
"RTN","RARTE7",121,0)
 ;
"RTN","RARTE7",122,0)
 ; store Secondary DXs
"RTN","RARTE7",123,0)
 S RA1=0
"RTN","RARTE7",124,0)
 S RAIENDX="+2,"_RAIEN2_","_RAIEN_","
"RTN","RARTE7",125,0)
 F  S RA1=$O(RAA(RA1)) Q:'RA1  S RAX=$G(RAA(RA1,0)) D:RAX
"RTN","RARTE7",126,0)
 .S RAFDA(RAF1,RAIENDX,.01)=RAX
"RTN","RARTE7",127,0)
 .D UPDATE^DIE(,"RAFDA",,"RAMSG")
"RTN","RARTE7",128,0)
 .W:$D(RAMSG("DIERR")) !!,"Could not store ",$$GET1^DID(RAF2,.01,"","LABEL"),"'s value: ",$$GET1^DIQ(RAF3,RAX,.01)
"RTN","RARTE7",129,0)
 .K RAFDA,RAMSG
"RTN","RARTE7",130,0)
 .Q
"RTN","RARTE7",131,0)
 Q
"RTN","RARTE7",132,0)
ANYDX(ARRAY) ; called from RARTE5
"RTN","RARTE7",133,0)
 ; input ARRAY name to store all DXs for this case
"RTN","RARTE7",134,0)
 ; output:
"RTN","RARTE7",135,0)
 ;  =1 if one or more diag codes
"RTN","RARTE7",136,0)
 ;  =0 if no diag code
"RTN","RARTE7",137,0)
 ;  ARRAY() stores diag codes as merged from case
"RTN","RARTE7",138,0)
 Q:'$D(RADFN)!('$D(RADTI))!('$D(RACNI))
"RTN","RARTE7",139,0)
 K ARRAY
"RTN","RARTE7",140,0)
 M ARRAY=^RADPT(RADFN,"DT",RADTI,"P",RACNI,"DX") ;Sec Diags
"RTN","RARTE7",141,0)
 S ARRAY(9999,0)=$P(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0),U,13) ;Prim Diag
"RTN","RARTE7",142,0)
 I $O(ARRAY(0)) Q 1
"RTN","RARTE7",143,0)
 Q 0
"RTN","RARTE7",144,0)
 ;
"RTN","RARTE7",145,0)
ALERT ; for Outside Report, ck if new/changed diags require alert
"RTN","RARTE7",146,0)
 ; this is called from RARTE5 each time an outside report is edited
"RTN","RARTE7",147,0)
 Q:'$D(RADFN)!('$D(RADTI))!('$D(RACNI))
"RTN","RARTE7",148,0)
 N RASAVE,RAY3,X
"RTN","RARTE7",149,0)
 ; set RASAVE() for OENOTE^RAUTL00
"RTN","RARTE7",150,0)
 S RASAVE("RADFN")=RADFN,RASAVE("RADTI")=RADTI,RASAVE("RACNI")=RACNI
"RTN","RARTE7",151,0)
 ;
"RTN","RARTE7",152,0)
 N I
"RTN","RARTE7",153,0)
 Q:(RANY1=0)&(RANY2=0)  ;no diags before and after edit
"RTN","RARTE7",154,0)
 S I=0
"RTN","RARTE7",155,0)
 ; loop RAA2 
"RTN","RARTE7",156,0)
 F  S I=$O(RAA2(I)) Q:'I  K:RAA2(I,0)=$G(RAA1(I,0)) RAA2(I,0)
"RTN","RARTE7",157,0)
 ;04/06/2010 BP/KAM RA*5*103 Rem Tkt 324541 Commented out next line
"RTN","RARTE7",158,0)
 ;Q:'$O(RAA2(0))
"RTN","RARTE7",159,0)
 K RAAB
"RTN","RARTE7",160,0)
 S I=0 F  S I=$O(RAA2(I)) Q:'I  D
"RTN","RARTE7",161,0)
 .I $D(^RA(78.3,+RAA2(I,0),0)),($P(^(0),U,4)="y") S RAAB=1
"RTN","RARTE7",162,0)
 .Q
"RTN","RARTE7",163,0)
 ; invoke notification for either condition:
"RTN","RARTE7",164,0)
 ; (1) new EF report is made --> non-critical imaging alert
"RTN","RARTE7",165,0)
 ; (2) old/new EF report w abnormal DX --> abnormal alert
"RTN","RARTE7",166,0)
 ; either of the above alert may be from an amended report or not
"RTN","RARTE7",167,0)
 I $G(RAAB)!RAFIRST D
"RTN","RARTE7",168,0)
 .S RAY3=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0))
"RTN","RARTE7",169,0)
 .S X=RAY3 ; X is input to OENOTE
"RTN","RARTE7",170,0)
 .D OENOTE^RAUTL00
"RTN","RARTE7",171,0)
 Q
"VER")
8.0^22.0
"BLD",7603,6)
^96
**END**
**END**
