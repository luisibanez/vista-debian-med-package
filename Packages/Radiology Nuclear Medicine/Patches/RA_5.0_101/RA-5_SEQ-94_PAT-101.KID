Released RA*5*101 SEQ #94
Extracted from mail message
**KIDS**:RA*5.0*101^

**INSTALL NAME**
RA*5.0*101
"BLD",7464,0)
RA*5.0*101^RADIOLOGY/NUCLEAR MEDICINE^0^3101201^y
"BLD",7464,1,0)
^^3^3^3090825^
"BLD",7464,1,1,0)
Patch one hundred-one for the Radiology/Nuclear Medicine 5.0 software.  
"BLD",7464,1,2,0)
Please review the Description and Installation Instructions for RA*5.0*101
"BLD",7464,1,3,0)
before installing this patch.
"BLD",7464,4,0)
^9.64PA^^
"BLD",7464,6.3)
4
"BLD",7464,"KRN",0)
^9.67PA^779.2^20
"BLD",7464,"KRN",.4,0)
.4
"BLD",7464,"KRN",.401,0)
.401
"BLD",7464,"KRN",.402,0)
.402
"BLD",7464,"KRN",.403,0)
.403
"BLD",7464,"KRN",.5,0)
.5
"BLD",7464,"KRN",.84,0)
.84
"BLD",7464,"KRN",3.6,0)
3.6
"BLD",7464,"KRN",3.8,0)
3.8
"BLD",7464,"KRN",9.2,0)
9.2
"BLD",7464,"KRN",9.8,0)
9.8
"BLD",7464,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",7464,"KRN",9.8,"NM",1,0)
RARIC^^0^B23522072
"BLD",7464,"KRN",9.8,"NM","B","RARIC",1)

"BLD",7464,"KRN",19,0)
19
"BLD",7464,"KRN",19.1,0)
19.1
"BLD",7464,"KRN",101,0)
101
"BLD",7464,"KRN",409.61,0)
409.61
"BLD",7464,"KRN",771,0)
771
"BLD",7464,"KRN",779.2,0)
779.2
"BLD",7464,"KRN",870,0)
870
"BLD",7464,"KRN",8989.51,0)
8989.51
"BLD",7464,"KRN",8989.52,0)
8989.52
"BLD",7464,"KRN",8994,0)
8994
"BLD",7464,"KRN","B",.4,.4)

"BLD",7464,"KRN","B",.401,.401)

"BLD",7464,"KRN","B",.402,.402)

"BLD",7464,"KRN","B",.403,.403)

"BLD",7464,"KRN","B",.5,.5)

"BLD",7464,"KRN","B",.84,.84)

"BLD",7464,"KRN","B",3.6,3.6)

"BLD",7464,"KRN","B",3.8,3.8)

"BLD",7464,"KRN","B",9.2,9.2)

"BLD",7464,"KRN","B",9.8,9.8)

"BLD",7464,"KRN","B",19,19)

"BLD",7464,"KRN","B",19.1,19.1)

"BLD",7464,"KRN","B",101,101)

"BLD",7464,"KRN","B",409.61,409.61)

"BLD",7464,"KRN","B",771,771)

"BLD",7464,"KRN","B",779.2,779.2)

"BLD",7464,"KRN","B",870,870)

"BLD",7464,"KRN","B",8989.51,8989.51)

"BLD",7464,"KRN","B",8989.52,8989.52)

"BLD",7464,"KRN","B",8994,8994)

"BLD",7464,"QUES",0)
^9.62^^
"BLD",7464,"REQB",0)
^9.611^1^1
"BLD",7464,"REQB",1,0)
RA*5.0*27^1
"BLD",7464,"REQB","B","RA*5.0*27",1)

"MBREQ")
0
"PKG",18,-1)
1^1
"PKG",18,0)
RADIOLOGY/NUCLEAR MEDICINE^RA^REGISTERS PATIENTS,RECORDS EXAMS,PROFILES,AMIS REPORTS
"PKG",18,20,0)
^9.402P^^
"PKG",18,22,0)
^9.49I^1^1
"PKG",18,22,1,0)
5.0^3051109^2980407^50
"PKG",18,22,1,"PAH",1,0)
101^3101201^1866
"PKG",18,22,1,"PAH",1,1,0)
^^3^3^3101201
"PKG",18,22,1,"PAH",1,1,1,0)
Patch one hundred-one for the Radiology/Nuclear Medicine 5.0 software.  
"PKG",18,22,1,"PAH",1,1,2,0)
Please review the Description and Installation Instructions for RA*5.0*101
"PKG",18,22,1,"PAH",1,1,3,0)
before installing this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","RARIC")
0^1^B23522072^B11284123
"RTN","RARIC",1,0)
RARIC ;HISC/FPT,GJC AISC/SAW-Radiologic Image Capture and Display Routine ;08/05/08  14:35
"RTN","RARIC",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**23,27,101**;Mar 16, 1998;Build 4
"RTN","RARIC",3,0)
 ;
"RTN","RARIC",4,0)
 ;In response to: Remedy #330689 (Tucson); PSPO 1460
"RTN","RARIC",5,0)
 ;
"RTN","RARIC",6,0)
 ;Supported IA #2053 FILE/UPDATE^DIE
"RTN","RARIC",7,0)
 ;Supported IA #2054 LOCK^DILF
"RTN","RARIC",8,0)
 ;Supported IA #10103 $$NOW^XLFDT
"RTN","RARIC",9,0)
 ;
"RTN","RARIC",10,0)
CREATE ; >>create new stub entry in file 74<<
"RTN","RARIC",11,0)
 ; --------------------------------------------------------------------
"RTN","RARIC",12,0)
 ; called from ^MAGDIR9A (the value of RARPT is currently null)
"RTN","RARIC",13,0)
 ; If no report entry is created, RARPT will remain null
"RTN","RARIC",14,0)
 ;
"RTN","RARIC",15,0)
 ;input variables
"RTN","RARIC",16,0)
 ; RADTE - ext. date/time of exam, RADFN - patient DFN,
"RTN","RARIC",17,0)
 ; RADTI - int. date/time of exam), RACN - case number &
"RTN","RARIC",18,0)
 ; RACNI - IEN of case record
"RTN","RARIC",19,0)
 ;
"RTN","RARIC",20,0)
 ;output variables
"RTN","RARIC",21,0)
 ; RARPT - IEN of the report: null if error; or positive
"RTN","RARIC",22,0)
 ;
"RTN","RARIC",23,0)
 ; lock the exam node; quit if the lock fails
"RTN","RARIC",24,0)
 S RARPT="" S U=$G(U,"^")
"RTN","RARIC",25,0)
 L +^RADPT(RADFN,"DT",RADTI,"P",RACNI,0):1E9
"RTN","RARIC",26,0)
 ;
"RTN","RARIC",27,0)
 ; Set RAY2 to the REGISTERED EXAMS node.
"RTN","RARIC",28,0)
 ; Set RAY3 to the EXAMINATIONS node.
"RTN","RARIC",29,0)
 N RAY2,RAY3 S RAY2=$G(^RADPT(RADFN,"DT",RADTI,0))
"RTN","RARIC",30,0)
 S RAY3=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0))
"RTN","RARIC",31,0)
 ;
"RTN","RARIC",32,0)
 ;
"RTN","RARIC",33,0)
 ; 1 - If the Imaging value of the case number does not match
"RTN","RARIC",34,0)
 ; the case number on disk quit.  2 - Quit if the exam was purged.
"RTN","RARIC",35,0)
 ; =================================================================
"RTN","RARIC",36,0)
 I $P(RAY3,U)'=RACN D UNLOCXAM Q  ; - 1
"RTN","RARIC",37,0)
 I $P($G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"PURGE")),U)>0 D UNLOCXAM Q  ; - 2
"RTN","RARIC",38,0)
 ;
"RTN","RARIC",39,0)
 ;
"RTN","RARIC",40,0)
 ; If a report was created for this case while waiting
"RTN","RARIC",41,0)
 ; to access the exam node (timeout) set RARPT, unlock
"RTN","RARIC",42,0)
 ; the exam node & exit (XIT).
"RTN","RARIC",43,0)
 ; =================================================================
"RTN","RARIC",44,0)
 S RARPT=$P(RAY3,U,17)
"RTN","RARIC",45,0)
 I RARPT D UNLOCXAM Q
"RTN","RARIC",46,0)
 ;
"RTN","RARIC",47,0)
 ;
"RTN","RARIC",48,0)
 ; Create the accession number. The format may be that 
"RTN","RARIC",49,0)
 ; of the legacy accession or it may be (w/p47) a site
"RTN","RARIC",50,0)
 ; specific accession (SSAN). Check if patch RA*5.0*47
"RTN","RARIC",51,0)
 ; has been installed.
"RTN","RARIC",52,0)
 ;
"RTN","RARIC",53,0)
 ; Because we entered the Radiology application through
"RTN","RARIC",54,0)
 ; a foreign source the following package wide Radiology
"RTN","RARIC",55,0)
 ; variables must be defined: RAMDIV & RAMDV
"RTN","RARIC",56,0)
 ; =================================================================
"RTN","RARIC",57,0)
 N RACESION,RAMDIV,RAMDV
"RTN","RARIC",58,0)
 S RAMDIV=+$P(RAY2,U,3),RAMDV=$S($D(^RA(79,RAMDIV,.1)):^(.1),1:"")
"RTN","RARIC",59,0)
 I $P(RAY3,U,31)'="" D  ; use SSAN
"RTN","RARIC",60,0)
 .S RACESION=$P(RAY3,U,31)
"RTN","RARIC",61,0)
 .Q
"RTN","RARIC",62,0)
 ; else use the legacy accession
"RTN","RARIC",63,0)
 E  S RACESION=$E(RADTE,4,7)_$E(RADTE,2,3)_"-"_RACN
"RTN","RARIC",64,0)
 ;
"RTN","RARIC",65,0)
 ;
"RTN","RARIC",66,0)
 N RA1,RAERR,RAFDA,RAFDAIEN,RAIEN,RAPRTSET,RAMEMARR,RATXT,RAX,RAXIT,RAY
"RTN","RARIC",67,0)
 ;
"RTN","RARIC",68,0)
 ; Check if this case is part of a print set.
"RTN","RARIC",69,0)
 ; =================================================================
"RTN","RARIC",70,0)
 ; D EN2^RAUTL20(.RAMEMARR) is a silent call!
"RTN","RARIC",71,0)
 ; RAMEMARR = # of descendents
"RTN","RARIC",72,0)
 ; RAMEMARR(n)=case #^procedure IEN^report text IEN^exam status IEN
"RTN","RARIC",73,0)
 ; (where 'n' is RACNI)
"RTN","RARIC",74,0)
 ; If printset RAPRTSET=1, else RAPRTSET=0
"RTN","RARIC",75,0)
 D EN2^RAUTL20(.RAMEMARR) ; is this case part of a print set ?
"RTN","RARIC",76,0)
 ;
"RTN","RARIC",77,0)
 ;
"RTN","RARIC",78,0)
 ; Find the next available RAD/NUC MED REPORTS IEN, lock that record
"RTN","RARIC",79,0)
 ; & file the report specific data into that new report record.
"RTN","RARIC",80,0)
 ; =================================================================
"RTN","RARIC",81,0)
 S RAFDAIEN(1)=$$NEWIEN()
"RTN","RARIC",82,0)
 ;
"RTN","RARIC",83,0)
 ;  ** Note: ^RARPT(RAFDAIEN(1)) is locked; it is up to  **
"RTN","RARIC",84,0)
 ;  ** YOU to unlock the record before the process quits **
"RTN","RARIC",85,0)
 ;
"RTN","RARIC",86,0)
 S RAY="+1",RAX="RAFDA(74,"""_RAY_","")"
"RTN","RARIC",87,0)
 S @RAX@(.01)=RACESION
"RTN","RARIC",88,0)
 S @RAX@(2)=RADFN
"RTN","RARIC",89,0)
 S @RAX@(3)=(9999999.9999-RADTI)
"RTN","RARIC",90,0)
 S @RAX@(4)=RACN
"RTN","RARIC",91,0)
 S @RAX@(6)=DT
"RTN","RARIC",92,0)
 ;
"RTN","RARIC",93,0)
 ;The filing of report text is no longer required.
"RTN","RARIC",94,0)
 ;K RATXT("RPT") S RATXT("RPT",1)="Images collected."
"RTN","RARIC",95,0)
 ;S @RAX@(200)="RATXT(""RPT"")"
"RTN","RARIC",96,0)
 ;
"RTN","RARIC",97,0)
 ; Create the Activity Log (74.01) sub-file record.
"RTN","RARIC",98,0)
 S RAX="RAFDA(74.01,""+2,"_RAY_","")"
"RTN","RARIC",99,0)
 S @RAX@(.01)=$$NOW^XLFDT()
"RTN","RARIC",100,0)
 S @RAX@(2)=$S($D(RAESIG)#2:"V",1:"C")
"RTN","RARIC",101,0)
 S @RAX@(3)=$S($G(RAVERF):RAVERF,1:DUZ)
"RTN","RARIC",102,0)
 D UPDATE^DIE("","RAFDA","RAFDAIEN","RAERR")
"RTN","RARIC",103,0)
 ;
"RTN","RARIC",104,0)
 ;
"RTN","RARIC",105,0)
 ; If there happened to be an error when calling UPDATE^DIE
"RTN","RARIC",106,0)
 ; kill off the stub report record.
"RTN","RARIC",107,0)
 ; =================================================================
"RTN","RARIC",108,0)
 I $D(RAERR("DIERR"))#2,($D(^RARPT(RAFDAIEN(1),0))#2) D  D XIT Q
"RTN","RARIC",109,0)
 .D DELRPT(RAFDAIEN(1)) ;note: RARPT is null
"RTN","RARIC",110,0)
 .QUIT
"RTN","RARIC",111,0)
 ;
"RTN","RARIC",112,0)
 ;
"RTN","RARIC",113,0)
 ;
"RTN","RARIC",114,0)
 ; ** 70.03 - set report text field in the EXAMINATIONS node - 70.03 **
"RTN","RARIC",115,0)
 ; ** 70.03 -           locked at the top of RARIC           - 70.03 ** 
"RTN","RARIC",116,0)
 ; =================================================================
"RTN","RARIC",117,0)
 K RAERR,RAFDA,RAIEN,RATXT
"RTN","RARIC",118,0)
 ;
"RTN","RARIC",119,0)
 S RAIEN=RACNI_","_RADTI_","_RADFN_","
"RTN","RARIC",120,0)
 S RAFDA(70.03,RAIEN,17)=RAFDAIEN(1)
"RTN","RARIC",121,0)
 D FILE^DIE("","RAFDA","RAERR")
"RTN","RARIC",122,0)
 ;
"RTN","RARIC",123,0)
 ; the REPORT TEXT field was not set correctly
"RTN","RARIC",124,0)
 I $D(RAERR("DIERR"))#2 D DELRPT(RAFDAIEN(1)) D XIT Q
"RTN","RARIC",125,0)
 ;
"RTN","RARIC",126,0)
 ;
"RTN","RARIC",127,0)
 ;the report record has been created, set RARPT = RAFDAIEN(1)
"RTN","RARIC",128,0)
 S RARPT=RAFDAIEN(1)
"RTN","RARIC",129,0)
 ;
"RTN","RARIC",130,0)
 ;
"RTN","RARIC",131,0)
 ; create a var RARIC to suppress display of info msg from PTR^RARTE2
"RTN","RARIC",132,0)
 ; PTR^RARTE2 requires that RARPT the IEN of an existing report record.
"RTN","RARIC",133,0)
 ; =================================================================
"RTN","RARIC",134,0)
 N RARPTN S RARPTN=$P(^RARPT(RARPT,0),U)
"RTN","RARIC",135,0)
 I RAPRTSET N RARIC S RARIC=1 D PTR^RARTE2
"RTN","RARIC",136,0)
 ; don't have to check raxit, since we're quitting now
"RTN","RARIC",137,0)
 ;
"RTN","RARIC",138,0)
 ;
"RTN","RARIC",139,0)
XIT ;exit the CREATE subroutine
"RTN","RARIC",140,0)
 ; =================================================================
"RTN","RARIC",141,0)
 ;Unlock the case node & unlock the report.
"RTN","RARIC",142,0)
 D UNLOCXAM L -^RARPT(RAFDAIEN(1))
"RTN","RARIC",143,0)
 QUIT
"RTN","RARIC",144,0)
 ;
"RTN","RARIC",145,0)
 ;
"RTN","RARIC",146,0)
PTR ; associate images with a radiology report record
"RTN","RARIC",147,0)
 ; --------------------------------------------------------------------
"RTN","RARIC",148,0)
 ;
"RTN","RARIC",149,0)
 ; input:   RARPT - IEN of Rad/NM Report file #74
"RTN","RARIC",150,0)
 ;          MAGGP - IEN of record in file 2005 pointed to by a report
"RTN","RARIC",151,0)
 ;
"RTN","RARIC",152,0)
 ; returns: Y=0  - variable MAGGP does not exist
"RTN","RARIC",153,0)
 ;          Y=-1 - FileMan could not create an entry
"RTN","RARIC",154,0)
 ;          Y>0  - FileMan created an entry
"RTN","RARIC",155,0)
 ;
"RTN","RARIC",156,0)
 S Y=0 Q:$G(MAGGP)'>0
"RTN","RARIC",157,0)
 L +^RARPT(RARPT):$G(DILOCKTM,5)
"RTN","RARIC",158,0)
 I '$T S Y=-1 Q  ;lock failed...
"RTN","RARIC",159,0)
 N RAFDA,RAIEN,RARSLT
"RTN","RARIC",160,0)
 S RAFDA(74.02005,"+1,"_RARPT_",",.01)=MAGGP
"RTN","RARIC",161,0)
 D UPDATE^DIE(,"RAFDA","RAIEN","RARSLT")
"RTN","RARIC",162,0)
 I $D(RARSLT("DIERR"))#2 D
"RTN","RARIC",163,0)
 .S Y=-1 ;RAIEN(1) undef
"RTN","RARIC",164,0)
 .QUIT
"RTN","RARIC",165,0)
 E  I RAIEN(1)>0 S Y=RAIEN(1)
"RTN","RARIC",166,0)
 L -^RARPT(RARPT)
"RTN","RARIC",167,0)
 QUIT
"RTN","RARIC",168,0)
 ;
"RTN","RARIC",169,0)
 ;
"RTN","RARIC",170,0)
DELRPT(Y) ; delete a report (RARIC). The report record should
"RTN","RARIC",171,0)
 ;be locked by the software calling this function.
"RTN","RARIC",172,0)
 ; --------------------------------------------------------------------
"RTN","RARIC",173,0)
 ; Input: Y = the IEN of the report record
"RTN","RARIC",174,0)
 ;
"RTN","RARIC",175,0)
 K RAERR,RAFDA S RAFDA(74,Y_",",.01)="@"
"RTN","RARIC",176,0)
 D FILE^DIE("","RAFDA","RAERR") K RAERR,RAFDA
"RTN","RARIC",177,0)
 Q
"RTN","RARIC",178,0)
 ;
"RTN","RARIC",179,0)
 ;
"RTN","RARIC",180,0)
NEWIEN() ; ##### ALLOCATES A NEW RECORD IN THE RAD/NUC MED REPORTS FILE
"RTN","RARIC",181,0)
 ;         (#74) AND LOCKS IT
"RTN","RARIC",182,0)
 ; --------------------------------------------------------------------
"RTN","RARIC",183,0)
 ; Return Values
"RTN","RARIC",184,0)
 ; =============
"RTN","RARIC",185,0)
 ; >0  IEN for the new record in the RAD/NUC MED REPORTS FILE (#74)
"RTN","RARIC",186,0)
 ;
"RTN","RARIC",187,0)
 ; Notes
"RTN","RARIC",188,0)
 ; =====
"RTN","RARIC",189,0)
 ;
"RTN","RARIC",190,0)
 ; The placeholder for the new record (^RARPT(IEN) node) is LOCKed 
"RTN","RARIC",191,0)
 ; by this function. It is responsibility of the caller to unlock the 
"RTN","RARIC",192,0)
 ; record after it is created or the record creation is canceled.
"RTN","RARIC",193,0)
 ;
"RTN","RARIC",194,0)
 N IEN,NEWIEN,NODE
"RTN","RARIC",195,0)
 S NEWIEN=0
"RTN","RARIC",196,0)
 ;---
"RTN","RARIC",197,0)
 F  D  Q:NEWIEN
"RTN","RARIC",198,0)
 . S IEN=$O(^RARPT(" "),-1)+1
"RTN","RARIC",199,0)
 . ;--- If the record already exists, skip it
"RTN","RARIC",200,0)
 . S NODE=$NA(^RARPT(IEN))  Q:$D(@NODE)
"RTN","RARIC",201,0)
 . ;--- Lock the placeholder in order to make sure that nobody
"RTN","RARIC",202,0)
 . ;--- else is trying to allocate it at the same time.
"RTN","RARIC",203,0)
 . D LOCK^DILF(NODE)  E  Q
"RTN","RARIC",204,0)
 . ;--- Double check that the record has not been created after the
"RTN","RARIC",205,0)
 . ;--- previous $D() check and the LOCK command (a race condition)
"RTN","RARIC",206,0)
 . I $D(@NODE)  L -@NODE  Q
"RTN","RARIC",207,0)
 . ;--- Success
"RTN","RARIC",208,0)
 . S NEWIEN=IEN
"RTN","RARIC",209,0)
 . Q
"RTN","RARIC",210,0)
 ;---
"RTN","RARIC",211,0)
 Q NEWIEN
"RTN","RARIC",212,0)
 ;
"RTN","RARIC",213,0)
 ;
"RTN","RARIC",214,0)
UNLOCXAM ;Unlock the EXAMINATION node locked by this process.
"RTN","RARIC",215,0)
 ; --------------------------------------------------------------------
"RTN","RARIC",216,0)
 L -^RADPT(RADFN,"DT",RADTI,"P",RACNI,0) QUIT
"RTN","RARIC",217,0)
 ;
"VER")
8.0^22.0
"BLD",7464,6)
^94
**END**
**END**
