Released VPR*1*2 SEQ #2
Extracted from mail message
**KIDS**:VPR*1.0*2^

**INSTALL NAME**
VPR*1.0*2
"BLD",8071,0)
VPR*1.0*2^VIRTUAL PATIENT RECORD^0^3130910^y
"BLD",8071,1,0)
^9.61A^2^2^3120924^^^^
"BLD",8071,1,1,0)
The Virtual Patient Record (VPR) data extract RPC, which returns data
"BLD",8071,1,2,0)
from the local VistA system, is updated in this patch.
"BLD",8071,4,0)
^9.64PA^^0
"BLD",8071,6.3)
317
"BLD",8071,"ABPKG")
n
"BLD",8071,"INI")

"BLD",8071,"INIT")
POST^VPRP2I
"BLD",8071,"KRN",0)
^9.67PA^779.2^20
"BLD",8071,"KRN",.4,0)
.4
"BLD",8071,"KRN",.4,"NM",0)
^9.68A^^
"BLD",8071,"KRN",.401,0)
.401
"BLD",8071,"KRN",.402,0)
.402
"BLD",8071,"KRN",.403,0)
.403
"BLD",8071,"KRN",.5,0)
.5
"BLD",8071,"KRN",.84,0)
.84
"BLD",8071,"KRN",3.6,0)
3.6
"BLD",8071,"KRN",3.8,0)
3.8
"BLD",8071,"KRN",9.2,0)
9.2
"BLD",8071,"KRN",9.8,0)
9.8
"BLD",8071,"KRN",9.8,"NM",0)
^9.68A^37^32
"BLD",8071,"KRN",9.8,"NM",2,0)
VPRDJ^^0^B22186238
"BLD",8071,"KRN",9.8,"NM",3,0)
VPRDJ0^^0^B87481337
"BLD",8071,"KRN",9.8,"NM",4,0)
VPRDJ01^^0^B39474581
"BLD",8071,"KRN",9.8,"NM",5,0)
VPRDJ02^^0^B43626306
"BLD",8071,"KRN",9.8,"NM",6,0)
VPRDJ03^^0^B49743518
"BLD",8071,"KRN",9.8,"NM",7,0)
VPRDJ04^^0^B47678729
"BLD",8071,"KRN",9.8,"NM",8,0)
VPRDJ05^^0^B76359424
"BLD",8071,"KRN",9.8,"NM",9,0)
VPRDJ06^^0^B49853799
"BLD",8071,"KRN",9.8,"NM",10,0)
VPRDJ07^^0^B19635784
"BLD",8071,"KRN",9.8,"NM",11,0)
VPRDJ08^^0^B60175705
"BLD",8071,"KRN",9.8,"NM",12,0)
VPRDJ09^^0^B37647658
"BLD",8071,"KRN",9.8,"NM",14,0)
VPRJSON^^0^B11235996
"BLD",8071,"KRN",9.8,"NM",15,0)
VPRJSOND^^0^B63619549
"BLD",8071,"KRN",9.8,"NM",16,0)
VPRJSONE^^0^B20857447
"BLD",8071,"KRN",9.8,"NM",17,0)
VPRUTILS^^0^B9723974
"BLD",8071,"KRN",9.8,"NM",18,0)
VPRDJ05V^^0^B45875553
"BLD",8071,"KRN",9.8,"NM",21,0)
VPRDJ00^^0^B58623073
"BLD",8071,"KRN",9.8,"NM",22,0)
VPRDMDC^^0^B58663659
"BLD",8071,"KRN",9.8,"NM",23,0)
VPRDCRC^^0^B46793433
"BLD",8071,"KRN",9.8,"NM",24,0)
VPRDJ04A^^0^B36420588
"BLD",8071,"KRN",9.8,"NM",25,0)
VPRDJ08A^^0^B39219672
"BLD",8071,"KRN",9.8,"NM",27,0)
VPRD^^0^B29175301
"BLD",8071,"KRN",9.8,"NM",28,0)
VPRDGMPL^^0^B27827751
"BLD",8071,"KRN",9.8,"NM",29,0)
VPRDLRA^^0^B76865545
"BLD",8071,"KRN",9.8,"NM",30,0)
VPRDTIU^^0^B81103735
"BLD",8071,"KRN",9.8,"NM",31,0)
VPRDVSIT^^0^B89271062
"BLD",8071,"KRN",9.8,"NM",32,0)
VPRDJT^^0^B9998610
"BLD",8071,"KRN",9.8,"NM",33,0)
VPRDMC^^0^B58353015
"BLD",8071,"KRN",9.8,"NM",34,0)
VPRP2I^^0^B236349
"BLD",8071,"KRN",9.8,"NM",35,0)
VPRDLR^^0^B24009801
"BLD",8071,"KRN",9.8,"NM",36,0)
VPRDLRO^^0^B27947758
"BLD",8071,"KRN",9.8,"NM",37,0)
VPRDPXIM^^0^B15866293
"BLD",8071,"KRN",9.8,"NM","B","VPRD",27)

"BLD",8071,"KRN",9.8,"NM","B","VPRDCRC",23)

"BLD",8071,"KRN",9.8,"NM","B","VPRDGMPL",28)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ",2)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ0",3)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ00",21)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ01",4)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ02",5)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ03",6)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ04",7)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ04A",24)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ05",8)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ05V",18)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ06",9)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ07",10)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ08",11)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ08A",25)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ09",12)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJT",32)

"BLD",8071,"KRN",9.8,"NM","B","VPRDLR",35)

"BLD",8071,"KRN",9.8,"NM","B","VPRDLRA",29)

"BLD",8071,"KRN",9.8,"NM","B","VPRDLRO",36)

"BLD",8071,"KRN",9.8,"NM","B","VPRDMC",33)

"BLD",8071,"KRN",9.8,"NM","B","VPRDMDC",22)

"BLD",8071,"KRN",9.8,"NM","B","VPRDPXIM",37)

"BLD",8071,"KRN",9.8,"NM","B","VPRDTIU",30)

"BLD",8071,"KRN",9.8,"NM","B","VPRDVSIT",31)

"BLD",8071,"KRN",9.8,"NM","B","VPRJSON",14)

"BLD",8071,"KRN",9.8,"NM","B","VPRJSOND",15)

"BLD",8071,"KRN",9.8,"NM","B","VPRJSONE",16)

"BLD",8071,"KRN",9.8,"NM","B","VPRP2I",34)

"BLD",8071,"KRN",9.8,"NM","B","VPRUTILS",17)

"BLD",8071,"KRN",19,0)
19
"BLD",8071,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",8071,"KRN",19,"NM",1,0)
VPR TEST JSON^^0
"BLD",8071,"KRN",19,"NM","B","VPR TEST JSON",1)

"BLD",8071,"KRN",19.1,0)
19.1
"BLD",8071,"KRN",19.1,"NM",0)
^9.68A^^0
"BLD",8071,"KRN",101,0)
101
"BLD",8071,"KRN",101,"NM",0)
^9.68A^^0
"BLD",8071,"KRN",409.61,0)
409.61
"BLD",8071,"KRN",771,0)
771
"BLD",8071,"KRN",779.2,0)
779.2
"BLD",8071,"KRN",870,0)
870
"BLD",8071,"KRN",8989.51,0)
8989.51
"BLD",8071,"KRN",8989.51,"NM",0)
^9.68A^3^3
"BLD",8071,"KRN",8989.51,"NM",1,0)
VPR OBS VIEW TYPE^^0
"BLD",8071,"KRN",8989.51,"NM",2,0)
VPR VERSION^^0
"BLD",8071,"KRN",8989.51,"NM",3,0)
VPR SYSTEM NAME^^0
"BLD",8071,"KRN",8989.51,"NM","B","VPR OBS VIEW TYPE",1)

"BLD",8071,"KRN",8989.51,"NM","B","VPR SYSTEM NAME",3)

"BLD",8071,"KRN",8989.51,"NM","B","VPR VERSION",2)

"BLD",8071,"KRN",8989.52,0)
8989.52
"BLD",8071,"KRN",8994,0)
8994
"BLD",8071,"KRN",8994,"NM",0)
^9.68A^17^2
"BLD",8071,"KRN",8994,"NM",16,0)
VPR GET PATIENT DATA JSON^^0
"BLD",8071,"KRN",8994,"NM",17,0)
VPR GET CHECKSUM^^0
"BLD",8071,"KRN",8994,"NM","B","VPR GET CHECKSUM",17)

"BLD",8071,"KRN",8994,"NM","B","VPR GET PATIENT DATA JSON",16)

"BLD",8071,"KRN","B",.4,.4)

"BLD",8071,"KRN","B",.401,.401)

"BLD",8071,"KRN","B",.402,.402)

"BLD",8071,"KRN","B",.403,.403)

"BLD",8071,"KRN","B",.5,.5)

"BLD",8071,"KRN","B",.84,.84)

"BLD",8071,"KRN","B",3.6,3.6)

"BLD",8071,"KRN","B",3.8,3.8)

"BLD",8071,"KRN","B",9.2,9.2)

"BLD",8071,"KRN","B",9.8,9.8)

"BLD",8071,"KRN","B",19,19)

"BLD",8071,"KRN","B",19.1,19.1)

"BLD",8071,"KRN","B",101,101)

"BLD",8071,"KRN","B",409.61,409.61)

"BLD",8071,"KRN","B",771,771)

"BLD",8071,"KRN","B",779.2,779.2)

"BLD",8071,"KRN","B",870,870)

"BLD",8071,"KRN","B",8989.51,8989.51)

"BLD",8071,"KRN","B",8989.52,8989.52)

"BLD",8071,"KRN","B",8994,8994)

"BLD",8071,"PRE")

"BLD",8071,"QUES",0)
^9.62^^
"BLD",8071,"REQB",0)
^9.611^1^1
"BLD",8071,"REQB",1,0)
VPR*1.0*1^2
"BLD",8071,"REQB","B","VPR*1.0*1",1)

"INIT")
POST^VPRP2I
"KRN",19,14102,-1)
0^1
"KRN",19,14102,0)
VPR TEST JSON^View JSON results^^R^^^^^^^^VIRTUAL PATIENT RECORD
"KRN",19,14102,1,0)
^^2^2^3130723^
"KRN",19,14102,1,1,0)
This option provides a way to run the VPR GET PATIENT DATA JSON remote
"KRN",19,14102,1,2,0)
procedure call from within VistA and view the results onscreen.
"KRN",19,14102,25)
EN^VPRDJT
"KRN",19,14102,"U")
VIEW JSON RESULTS
"KRN",8989.5,17299,0)
571;DIC(9.4,^VPR VERSION^1
"KRN",8989.5,17299,1)
1.02
"KRN",8989.51,671,-1)
0^1
"KRN",8989.51,671,0)
VPR OBS VIEW TYPE^Observation View Type^1^GUID
"KRN",8989.51,671,1)
S^IV:IV;F:Foley;D:Drain;V:Vitals;I:I&O^Select the type of item described in this view.
"KRN",8989.51,671,6)
F^1:40^Enter the GUID for this observation view.
"KRN",8989.51,671,20,0)
^8989.512^2^2^3130806^^
"KRN",8989.51,671,20,1,0)
This parameter will assign a type to those groups of observations,
"KRN",8989.51,671,20,2,0)
or views, in CLiO that describe an instance of catheter care.
"KRN",8989.51,671,30,0)
^8989.513I^1^1
"KRN",8989.51,671,30,1,0)
1^4.2
"KRN",8989.51,672,-1)
0^2
"KRN",8989.51,672,0)
VPR VERSION^VPR Version^^^Version:
"KRN",8989.51,672,1)
N^1:99:2^Enter the current version number of the VPR data extracts.
"KRN",8989.51,672,20,0)
^^3^3^3130723^
"KRN",8989.51,672,20,1,0)
This parameter holds the current version number of the Virtual Patient
"KRN",8989.51,672,20,2,0)
Record (VPR) data extract RPC's, in the form V.PP where V is the
"KRN",8989.51,672,20,3,0)
package version number and PP is the latest patch number.
"KRN",8989.51,672,30,0)
^8989.513I^1^1
"KRN",8989.51,672,30,1,0)
1^9.4
"KRN",8989.51,673,-1)
0^3
"KRN",8989.51,673,0)
VPR SYSTEM NAME^Hashed System Name
"KRN",8989.51,673,1)
F^1:10^Enter the CRC hashed name for this system.
"KRN",8989.51,673,20,0)
^^3^3^3130905^
"KRN",8989.51,673,20,1,0)
This parameter holds the name of this VistA system, as a hashed base 16
"KRN",8989.51,673,20,2,0)
value.  It is calculated by a VPR patch post-init and stuffed into the
"KRN",8989.51,673,20,3,0)
SYStem level value, and should NOT be modified.
"KRN",8989.51,673,30,0)
^8989.513I^1^1
"KRN",8989.51,673,30,1,0)
1^4.2
"KRN",8994,2930,-1)
0^16
"KRN",8994,2930,0)
VPR GET PATIENT DATA JSON^GET^VPRDJ^4^S^^^0^1^^1
"KRN",8994,2930,1,0)
^8994.01^2^2^3121003^^^^
"KRN",8994,2930,1,1,0)
This RPC retrieves the requested data from VistA, and returns it in
"KRN",8994,2930,1,2,0)
^TMP("VPR",$J,n) as JSON.
"KRN",8994,2930,2,0)
^8994.02A^1^1
"KRN",8994,2930,2,1,0)
FILTER^2^^0^1
"KRN",8994,2930,2,1,1,0)
^8994.021^1^1^3120629^^^^
"KRN",8994,2930,2,1,1,1,0)
List of name-value pairs defining the search.
"KRN",8994,2930,2,"B","FILTER",1)

"KRN",8994,2930,2,"PARAMSEQ",1,1)

"KRN",8994,2930,3,0)
^8994.03^1^1^3120629^^^^
"KRN",8994,2930,3,1,0)
Text array formatted as JSON
"KRN",8994,2956,-1)
0^17
"KRN",8994,2956,0)
VPR GET CHECKSUM^CHECK^VPRDCRC^4^S^^^0^1^^1
"KRN",8994,2956,1,0)
^8994.01^1^1^3130418^^^^
"KRN",8994,2956,1,1,0)
This RPC retrieves the requested data from VistA and returns its checksum.
"KRN",8994,2956,2,0)
^8994.02A^1^1
"KRN",8994,2956,2,1,0)
FILTER^2^^0^1
"KRN",8994,2956,2,1,1,0)
^8994.021^1^1^3130418^^^^
"KRN",8994,2956,2,1,1,1,0)
List of name-value pairs defining the search.
"KRN",8994,2956,2,"B","FILTER",1)

"KRN",8994,2956,2,"PARAMSEQ",1,1)

"KRN",8994,2956,3,0)
^8994.03^1^1^3130418^^^^
"KRN",8994,2956,3,1,0)
The CRC32 checksum value of the data.
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",571,-1)
1^1
"PKG",571,0)
VIRTUAL PATIENT RECORD^VPR^Utilities to manage a virtual copy of the patient record
"PKG",571,20,0)
^9.402P^^
"PKG",571,22,0)
^9.49I^1^1
"PKG",571,22,1,0)
1.0^3110804^3110525^1085
"PKG",571,22,1,"PAH",1,0)
2^3130910^1086
"PKG",571,22,1,"PAH",1,1,0)
^^2^2^3130910
"PKG",571,22,1,"PAH",1,1,1,0)
The Virtual Patient Record (VPR) data extract RPC, which returns data
"PKG",571,22,1,"PAH",1,1,2,0)
from the local VistA system, is updated in this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
32
"RTN","VPRD")
0^27^B29175301^B28899728
"RTN","VPRD",1,0)
VPRD ;SLC/MKB -- Serve VistA data as XML via RPC ;8/2/11  15:29
"RTN","VPRD",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**1,2**;Sep 01, 2011;Build 317
"RTN","VPRD",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRD",4,0)
 ;
"RTN","VPRD",5,0)
 ; External References          DBIA#
"RTN","VPRD",6,0)
 ; -------------------          -----
"RTN","VPRD",7,0)
 ; ^DPT                         10035
"RTN","VPRD",8,0)
 ; ^SC                          10040
"RTN","VPRD",9,0)
 ; DIQ                           2056
"RTN","VPRD",10,0)
 ; MPIF001                       2701
"RTN","VPRD",11,0)
 ; VASITE                       10112
"RTN","VPRD",12,0)
 ; XLFDT                        10103
"RTN","VPRD",13,0)
 ; XLFSTR                       10104
"RTN","VPRD",14,0)
 ; XPAR                          2263
"RTN","VPRD",15,0)
 ; XUAF4                         2171
"RTN","VPRD",16,0)
 ;
"RTN","VPRD",17,0)
GET(VPR,DFN,TYPE,START,STOP,MAX,ID,FILTER) ; -- Return search results as XML in @VPR@(n) 
"RTN","VPRD",18,0)
 ; RPC = VPR GET PATIENT DATA
"RTN","VPRD",19,0)
 N ICN,VPRI,VPRTOTL,VPRTEXT
"RTN","VPRD",20,0)
 S VPR=$NA(^TMP("VPR",$J)) K @VPR
"RTN","VPRD",21,0)
 S VPRTEXT=+$G(FILTER("text")) ;include report/document text?
"RTN","VPRD",22,0)
 ;
"RTN","VPRD",23,0)
 ; parse & validate input parameters
"RTN","VPRD",24,0)
 S ICN=+$P($G(DFN),";",2),DFN=+$G(DFN),ID=$G(ID)
"RTN","VPRD",25,0)
 I DFN<1,ICN S DFN=+$$GETDFN^MPIF001(ICN)
"RTN","VPRD",26,0)
 S TYPE=$$LOW^XLFSTR($G(TYPE)) I TYPE="" S TYPE=$$ALL
"RTN","VPRD",27,0)
 I TYPE'="new",DFN<1!'$D(^DPT(DFN)) D ERR(1,DFN) G GTQ
"RTN","VPRD",28,0)
 S:'$G(START) START=1410102 S:'$G(STOP) STOP=4141015 S:'$G(MAX) MAX=9999
"RTN","VPRD",29,0)
 I START,STOP,STOP<START N X S X=START,START=STOP,STOP=X  ;switch
"RTN","VPRD",30,0)
 I STOP,$L(STOP,".")<2 S STOP=STOP_".24"
"RTN","VPRD",31,0)
 I ID="",$D(FILTER("id")) S ID=FILTER("id")
"RTN","VPRD",32,0)
 ;
"RTN","VPRD",33,0)
 ; extract data
"RTN","VPRD",34,0)
 N VPRTYPE,VPRP,VPRHDR,VPRTAG,VPRTN
"RTN","VPRD",35,0)
 S VPRTYPE=TYPE D ADD("<results version='1.1' timeZone='"_$$TZ^XLFDT_"' >")
"RTN","VPRD",36,0)
 F VPRP=1:1:$L(VPRTYPE,";") S VPRTAG=$P(VPRTYPE,";",VPRP) I $L(VPRTAG) D
"RTN","VPRD",37,0)
 . S VPRTN="EN^"_$$RTN(.VPRTAG) Q:'$L($T(@VPRTN))  ;D ERR(2) Q
"RTN","VPRD",38,0)
 . D ADD("<"_VPRTAG) S VPRHDR=VPRI,VPRTOTL=0
"RTN","VPRD",39,0)
 . D @(VPRTN_"(DFN,START,STOP,MAX,ID)")
"RTN","VPRD",40,0)
 . S @VPR@(VPRHDR)=@VPR@(VPRHDR)_" total='"_+$G(VPRTOTL)_"' >" D ADD("</"_VPRTAG_">")
"RTN","VPRD",41,0)
 D ADD("</results>")
"RTN","VPRD",42,0)
 ;
"RTN","VPRD",43,0)
GTQ ; end
"RTN","VPRD",44,0)
 Q
"RTN","VPRD",45,0)
 ;
"RTN","VPRD",46,0)
RTN(X) ; -- Return name of VPRDxxxx routine for clinical domain X
"RTN","VPRD",47,0)
 ;  X is also enforced as expected group tag name, if passed by ref
"RTN","VPRD",48,0)
 N Y S Y="VPRD",X=$G(X) I X="" Q Y
"RTN","VPRD",49,0)
 I X["accession"    S Y="VPRDLRA",X="accessions"
"RTN","VPRD",50,0)
 I X["allerg"       S Y="VPRDGMRA",X="reactions"
"RTN","VPRD",51,0)
 I X["appointment"  S Y="VPRDSDAM",X="appointments"
"RTN","VPRD",52,0)
 I X["clinicalProc" S Y="VPRDMC",X="clinicalProcedures"
"RTN","VPRD",53,0)
 I X["consult"      S Y="VPRDGMRC",X="consults"
"RTN","VPRD",54,0)
 I X["demograph"    S Y="VPRDPT",X="demographics"
"RTN","VPRD",55,0)
 I X["document"     S Y="VPRDTIU",X="documents"
"RTN","VPRD",56,0)
 I X["factor"       S Y="VPRDPXHF",X="healthFactors"
"RTN","VPRD",57,0)
 I X["flag"         S Y="VPRDGPF",X="flags"
"RTN","VPRD",58,0)
 I X["immunization" S Y="VPRDPXIM",X="immunizations"
"RTN","VPRD",59,0)
 I X["skin"         S Y="VPRDPXSK",X="skinTests"
"RTN","VPRD",60,0)
 I X?1"exam".E      S Y="VPRDPXAM",X="exams"
"RTN","VPRD",61,0)
 I X["educat"       S Y="VPRDPXED",X="educationTopics"
"RTN","VPRD",62,0)
 I X["insur"        S Y="VPRDIB",X="insurancePolicies"
"RTN","VPRD",63,0)
 I X["polic"        S Y="VPRDIB",X="insurancePolicies"
"RTN","VPRD",64,0)
 I X["lab"          S Y="VPRDLR",X="labs"
"RTN","VPRD",65,0)
 I X["panel"        S Y="VPRDLRO",X="panels"
"RTN","VPRD",66,0)
 I X["med"          S Y="VPRDPS",X="meds"
"RTN","VPRD",67,0)
 I X["pharm"        S Y="VPRDPSOR",X="meds"
"RTN","VPRD",68,0)
 I X["observ"       S Y="VPRDMDC",X="observations"
"RTN","VPRD",69,0)
 I X["order"        S Y="VPRDOR",X="orders"
"RTN","VPRD",70,0)
 I X["patient"      S Y="VPRDPT",X="demographics"
"RTN","VPRD",71,0)
 I X["problem"      S Y="VPRDGMPL",X="problems"
"RTN","VPRD",72,0)
 I X["procedure"    S Y="VPRDPROC",X="procedures"
"RTN","VPRD",73,0)
 I X["reaction"     S Y="VPRDGMRA",X="reactions"
"RTN","VPRD",74,0)
 I X["surg"         S Y="VPRDSR",X="surgeries"
"RTN","VPRD",75,0)
 I X["visit"        S Y="VPRDVSIT",X="visits"
"RTN","VPRD",76,0)
 I X["vital"        S Y="VPRDGMV",X="vitals"
"RTN","VPRD",77,0)
 I X["rad"          S Y="VPRDRA",X="radiologyExams"
"RTN","VPRD",78,0)
 I X["xray"         S Y="VPRDRA",X="radiologyExams"
"RTN","VPRD",79,0)
 ; X["new"          S Y="VPRDX",X="patients"
"RTN","VPRD",80,0)
 Q Y
"RTN","VPRD",81,0)
 ;
"RTN","VPRD",82,0)
TAG(X) ; -- return plural name for group tags
"RTN","VPRD",83,0)
 N Y S:X'?1.L X=$$LOW^XLFSTR(X)
"RTN","VPRD",84,0)
 I $E(X,$L(X))="s" S Y=X
"RTN","VPRD",85,0)
 I $E(X,$L(X))="y" S Y=$E(X,1,$L(X)-1)_"ies"
"RTN","VPRD",86,0)
 E  S Y=X_"s"
"RTN","VPRD",87,0)
 Q Y
"RTN","VPRD",88,0)
 ;
"RTN","VPRD",89,0)
ALL() ; -- return string for all types of data
"RTN","VPRD",90,0)
 Q "demographics;reactions;problems;vitals;labs;meds;immunizations;observation;visits;appointments;documents;procedures;consults;flags;factors;skinTests;exams;education;insurance"
"RTN","VPRD",91,0)
 ;
"RTN","VPRD",92,0)
ERR(X,VAL) ; -- return error message
"RTN","VPRD",93,0)
 N MSG  S MSG="Error"
"RTN","VPRD",94,0)
 I X=1  S MSG="Patient with dfn '"_$G(VAL)_"' not found"
"RTN","VPRD",95,0)
 I X=2  S MSG="Requested domain type '"_$G(VAL)_"' not recognized"
"RTN","VPRD",96,0)
 I X=99 S MSG="Unknown request"
"RTN","VPRD",97,0)
 ;
"RTN","VPRD",98,0)
 D ADD("<error>")
"RTN","VPRD",99,0)
 D ADD("<message>"_MSG_"</message>")
"RTN","VPRD",100,0)
 D ADD("</error>")
"RTN","VPRD",101,0)
 Q
"RTN","VPRD",102,0)
 ;
"RTN","VPRD",103,0)
ESC(X) ; -- escape outgoing XML
"RTN","VPRD",104,0)
 ; Q $ZCONVERT(X,"O","HTML")  ; uncomment for fastest performance on Cache
"RTN","VPRD",105,0)
 ;
"RTN","VPRD",106,0)
 N I,Y,QOT S QOT=""""
"RTN","VPRD",107,0)
 S Y=$P(X,"&") F I=2:1:$L(X,"&") S Y=Y_"&amp;"_$P(X,"&",I)
"RTN","VPRD",108,0)
 S X=Y,Y=$P(X,"<") F I=2:1:$L(X,"<") S Y=Y_"&lt;"_$P(X,"<",I)
"RTN","VPRD",109,0)
 S X=Y,Y=$P(X,">") F I=2:1:$L(X,">") S Y=Y_"&gt;"_$P(X,">",I)
"RTN","VPRD",110,0)
 S X=Y,Y=$P(X,"'") F I=2:1:$L(X,"'") S Y=Y_"&apos;"_$P(X,"'",I)
"RTN","VPRD",111,0)
 S X=Y,Y=$P(X,QOT) F I=2:1:$L(X,QOT) S Y=Y_"&quot;"_$P(X,QOT,I)
"RTN","VPRD",112,0)
 Q Y
"RTN","VPRD",113,0)
 ;
"RTN","VPRD",114,0)
ADD(X) ; Add a line @VPR@(n)=X
"RTN","VPRD",115,0)
 S VPRI=$G(VPRI)+1
"RTN","VPRD",116,0)
 S @VPR@(VPRI)=X
"RTN","VPRD",117,0)
 Q
"RTN","VPRD",118,0)
 ;
"RTN","VPRD",119,0)
STRING(ARRAY) ; -- Return text in ARRAY(n) or ARRAY(n,0) as a string
"RTN","VPRD",120,0)
 N I,X,Y S Y=""
"RTN","VPRD",121,0)
 S I=+$O(ARRAY("")) I I=0 S I=+$O(ARRAY(0))
"RTN","VPRD",122,0)
 S Y=$S($D(ARRAY(I,0)):ARRAY(I,0),1:$G(ARRAY(I)))
"RTN","VPRD",123,0)
 F  S I=$O(ARRAY(I)) Q:I<1  D
"RTN","VPRD",124,0)
 . S X=$S($D(ARRAY(I,0)):ARRAY(I,0),1:ARRAY(I))
"RTN","VPRD",125,0)
 . I $E(X)=" " S Y=Y_$C(13,10)_X Q
"RTN","VPRD",126,0)
 . S Y=Y_$S($E(Y,$L(Y))=" ":"",1:" ")_X
"RTN","VPRD",127,0)
 Q Y
"RTN","VPRD",128,0)
 ;
"RTN","VPRD",129,0)
FAC(X) ; -- return Institution file station# for location X
"RTN","VPRD",130,0)
 N HLOC,FAC,Y0,Y S Y=""
"RTN","VPRD",131,0)
 S HLOC=$G(^SC(+$G(X),0)),FAC=$P(HLOC,U,4)
"RTN","VPRD",132,0)
 ; Get P:4 via Med Ctr Div, if not directly linked
"RTN","VPRD",133,0)
 I 'FAC,$P(HLOC,U,15) S FAC=$$GET1^DIQ(44,+$G(X)_",","3.5:.07","I")
"RTN","VPRD",134,0)
 S Y0=$S(FAC:$$NS^XUAF4(FAC),1:$P($$SITE^VASITE,U,2,3)) ;name^stn#
"RTN","VPRD",135,0)
 S:$L(Y0) Y=$P(Y0,U,2)_U_$P(Y0,U) ;switch to stn#^name
"RTN","VPRD",136,0)
 I $L(Y),'Y S $P(Y,U)=FAC
"RTN","VPRD",137,0)
 Q Y
"RTN","VPRD",138,0)
 ;
"RTN","VPRD",139,0)
VUID(IEN,FILE) ; -- Return VUID for item
"RTN","VPRD",140,0)
 Q $$GET1^DIQ(FILE,IEN_",",99.99)
"RTN","VPRD",141,0)
 ;
"RTN","VPRD",142,0)
VERSION(RET) ; -- Return current version of data extracts
"RTN","VPRD",143,0)
 S RET=$$GET^XPAR("ALL","VPR VERSION")
"RTN","VPRD",144,0)
 Q
"RTN","VPRDCRC")
0^23^B46793433^n/a
"RTN","VPRDCRC",1,0)
VPRDCRC ;SLC/MKB,AGP -- Compute CRC32 for VistA data ;7/26/13 11:09am
"RTN","VPRDCRC",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 317
"RTN","VPRDCRC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDCRC",4,0)
 ;
"RTN","VPRDCRC",5,0)
 ; External References          DBIA#
"RTN","VPRDCRC",6,0)
 ; -------------------          -----
"RTN","VPRDCRC",7,0)
 ; ^DPT                         10035
"RTN","VPRDCRC",8,0)
 ; %ZTLOAD                      10063
"RTN","VPRDCRC",9,0)
 ; MPIF001                       2701
"RTN","VPRDCRC",10,0)
 ; XLFCRC                        3156
"RTN","VPRDCRC",11,0)
 ; XLFDT                        10103
"RTN","VPRDCRC",12,0)
 ;
"RTN","VPRDCRC",13,0)
CHECK(VPRCRC,FILTER) ; -- Return CRC32 checksums of VistA data
"RTN","VPRDCRC",14,0)
 ; RPC = VPR GET CHECKSUM
"RTN","VPRDCRC",15,0)
 ; where FILTER("system")    = name of calling/client system
"RTN","VPRDCRC",16,0)
 ;       FILTER("patientId") = DFN or DFN;ICN
"RTN","VPRDCRC",17,0)
 ;       FILTER("domain")    = name of desired data type (see VPRDJ0)
"RTN","VPRDCRC",18,0)
 ;       FILTER("uid")       = single item id to return  [opt]
"RTN","VPRDCRC",19,0)
 ;       FILTER("start")     = start date.time of search [opt]
"RTN","VPRDCRC",20,0)
 ;       FILTER("stop")      = stop date.time of search  [opt]
"RTN","VPRDCRC",21,0)
 ;       FILTER("queued")    = true or false
"RTN","VPRDCRC",22,0)
 ;
"RTN","VPRDCRC",23,0)
 ; VPRCRC returns the name of the ^TMP array containing the results
"RTN","VPRDCRC",24,0)
 ;
"RTN","VPRDCRC",25,0)
 N DFN,NODE,QUEUED,SYS,VPRSYS
"RTN","VPRDCRC",26,0)
 K ^TMP("VPRDCRC",$J),VPRCRC
"RTN","VPRDCRC",27,0)
 S SYS=$G(FILTER("system")) I SYS="" Q
"RTN","VPRDCRC",28,0)
 S DFN=$G(FILTER("patientId")) I DFN="" Q
"RTN","VPRDCRC",29,0)
 S QUEUED=$G(FILTER("queued"))
"RTN","VPRDCRC",30,0)
 S NODE="VPRDCRC "_SYS_"-"_"-"_DFN
"RTN","VPRDCRC",31,0)
 S FILTER("node")=NODE
"RTN","VPRDCRC",32,0)
 S VPRSYS=$$GET^XPAR("SYS","VPR SYSTEM NAME")
"RTN","VPRDCRC",33,0)
 ;
"RTN","VPRDCRC",34,0)
 ; - if not queued, generate checksums and exit w/values in ^TMP
"RTN","VPRDCRC",35,0)
 I QUEUED'="true" D  Q
"RTN","VPRDCRC",36,0)
 . S ^XTMP(NODE,0)=$$FMADD^XLFDT(DT,1)_U_DT_U_"Checksum for Server "_SYS_" patient "_DFN
"RTN","VPRDCRC",37,0)
 . D EN(.FILTER)
"RTN","VPRDCRC",38,0)
 . M ^TMP("VPRDCRC",$J)=^XTMP(NODE,"data")
"RTN","VPRDCRC",39,0)
 . S VPRCRC=$NA(^TMP("VPRDCRC",$J))
"RTN","VPRDCRC",40,0)
 . K ^XTMP(NODE)
"RTN","VPRDCRC",41,0)
 ;
"RTN","VPRDCRC",42,0)
 ; - Queue job if not started, else return data if done
"RTN","VPRDCRC",43,0)
 I +$G(^XTMP(NODE,"start"))=0 D QUEUED(.FILTER,NODE,SYS,DFN) Q
"RTN","VPRDCRC",44,0)
 I +$G(^XTMP(NODE,"stop"))>0 D  K ^XTMP(NODE)
"RTN","VPRDCRC",45,0)
 . I $G(^XTMP(NODE,"error"))'=""  S VPRCRC=^XTMP(NODE,"error") Q
"RTN","VPRDCRC",46,0)
 . S VPRCRC=$NA(^TMP("VPRDCRC",$J))
"RTN","VPRDCRC",47,0)
 . M ^TMP("VPRDCRC",$J)=^XTMP(NODE,"data")
"RTN","VPRDCRC",48,0)
 Q
"RTN","VPRDCRC",49,0)
 ;
"RTN","VPRDCRC",50,0)
QUEUED(FILTER,NODE,SYS,DFN) ; -- start job to generate checksums
"RTN","VPRDCRC",51,0)
 N ZTDESC,ZTIO,ZTRTN,ZTSAVE,ZTDTH,ZTSK
"RTN","VPRDCRC",52,0)
 S ^XTMP(NODE,0)=$$FMADD^XLFDT(DT,1)_U_DT_U_"Checksum for Server "_SYS_" patient "_DFN
"RTN","VPRDCRC",53,0)
 S ZTRTN="EN1^VPRDCRC",ZTDESC="Patient Checksum Extract for "_DFN
"RTN","VPRDCRC",54,0)
 S ZTDTH=$$NOW^XLFDT(),ZTIO="",ZTSAVE("FILTER(")=""
"RTN","VPRDCRC",55,0)
 S ^XTMP(NODE,"start")=$$NOW^XLFDT()
"RTN","VPRDCRC",56,0)
 D ^%ZTLOAD I +$G(ZTSK)>0  S ^XTMP(NODE,"task")=+$G(ZTSK) Q    ;success
"RTN","VPRDCRC",57,0)
 S ^XTMP(NODE,"error")="Cannot start a task job"
"RTN","VPRDCRC",58,0)
 S ^XTMP(NODE,"stop")=$$NOW^XLFDT()
"RTN","VPRDCRC",59,0)
 S ^XTMP(NODE,"task")=ZTSK
"RTN","VPRDCRC",60,0)
 Q
"RTN","VPRDCRC",61,0)
 ;
"RTN","VPRDCRC",62,0)
EN(FILTER) ; -- Return CRC values of requested data in ^XTMP(node,"data") as JSON
"RTN","VPRDCRC",63,0)
EN1 ;           [entry point for queued job]
"RTN","VPRDCRC",64,0)
 ;
"RTN","VPRDCRC",65,0)
 N ICN,DFN,NODE,UID,VPRP,TYPE,VPRTN,CRC
"RTN","VPRDCRC",66,0)
 N VPRCRC,VPRSTART,VPRSTOP,VPRMAX,VPRI,VPRID,VPRTYPE ;for VPRDJ0
"RTN","VPRDCRC",67,0)
 K ^TMP("VPRCRC",$J),^TMP("VPRCRCF",$J)
"RTN","VPRDCRC",68,0)
 ;
"RTN","VPRDCRC",69,0)
 ; parse & validate input parameters
"RTN","VPRDCRC",70,0)
 S DFN=$G(FILTER("patientId")),VPRCRC=""
"RTN","VPRDCRC",71,0)
 S ICN=+$P($G(DFN),";",2),DFN=+$G(DFN)
"RTN","VPRDCRC",72,0)
 I DFN<1,ICN S DFN=+$$GETDFN^MPIF001(ICN)
"RTN","VPRDCRC",73,0)
 Q:DFN<1!'$D(^DPT(DFN))
"RTN","VPRDCRC",74,0)
 S NODE=$G(FILTER("node")) I NODE="" S NODE="VPRDCRC"
"RTN","VPRDCRC",75,0)
 ;
"RTN","VPRDCRC",76,0)
 S VPRMAX=9999,VPRI=0                                ;for VPRDJ0
"RTN","VPRDCRC",77,0)
 S VPRSTART=+$G(FILTER("start"),1410102)
"RTN","VPRDCRC",78,0)
 S VPRSTOP=+$G(FILTER("stop"),4141015)
"RTN","VPRDCRC",79,0)
 S UID=$G(FILTER("uid")),VPRTYPE=$G(FILTER("domain"))
"RTN","VPRDCRC",80,0)
 I $L(UID) S VPRTYPE=$P(UID,":",3),VPRID=$P(UID,":",6)
"RTN","VPRDCRC",81,0)
 E  S:VPRTYPE="" VPRTYPE=$$ALL
"RTN","VPRDCRC",82,0)
 ;
"RTN","VPRDCRC",83,0)
 F VPRP=1:1:$L(VPRTYPE,";") S TYPE=$P(VPRTYPE,";",VPRP) I $L(TYPE) D
"RTN","VPRDCRC",84,0)
 . S VPRTN=$$TAG^VPRDJ(TYPE)_"^VPRDJ0" Q:'$L($T(@VPRTN))
"RTN","VPRDCRC",85,0)
 . D @VPRTN
"RTN","VPRDCRC",86,0)
 ;
"RTN","VPRDCRC",87,0)
 I $L(UID) D  G ENQ ;single item
"RTN","VPRDCRC",88,0)
 . S CRC=$G(^TMP("VPRCRC",$J,VPRTYPE,UID))
"RTN","VPRDCRC",89,0)
 . S ^XTMP(NODE,"data",1)=CRC,^XTMP(NODE,"stop")=$$NOW^XLFDT()
"RTN","VPRDCRC",90,0)
 ; generate checksum for each domain requested
"RTN","VPRDCRC",91,0)
 S TYPE="" F  S TYPE=$O(^TMP("VPRCRC",$J,TYPE)) Q:TYPE=""  D
"RTN","VPRDCRC",92,0)
 . S CRC="" D GET($NA(^TMP("VPRCRC",$J,TYPE)),.CRC)
"RTN","VPRDCRC",93,0)
 . S ^TMP("VPRCRC",$J,TYPE)=CRC
"RTN","VPRDCRC",94,0)
 I $L(VPRTYPE,";")>1 D  ;get whole-chart checksum
"RTN","VPRDCRC",95,0)
 . S CRC="" D GET($NA(^TMP("VPRCRC",$J)),.CRC)
"RTN","VPRDCRC",96,0)
 . S ^TMP("VPRCRC",$J,"patient")=CRC
"RTN","VPRDCRC",97,0)
 ;
"RTN","VPRDCRC",98,0)
ENCODE ; -- return list(s) of checksums as JSON
"RTN","VPRDCRC",99,0)
 D PREP
"RTN","VPRDCRC",100,0)
 D ENCODE^VPRJSON($NA(^TMP("VPRCRCF",$J)),$NA(^XTMP(NODE,"data")),"ERROR")
"RTN","VPRDCRC",101,0)
 S ^XTMP(NODE,"stop")=$$NOW^XLFDT()
"RTN","VPRDCRC",102,0)
 ;
"RTN","VPRDCRC",103,0)
ENQ K ^TMP("VPRCRC",$J),^TMP("VPRCRCF",$J)
"RTN","VPRDCRC",104,0)
 Q
"RTN","VPRDCRC",105,0)
 ;
"RTN","VPRDCRC",106,0)
PREP ; -- reformat ^TMP("VPRCRC",$J) for JSON utility -> ^TMP("VPRCRCF",$J)
"RTN","VPRDCRC",107,0)
 N DCNT,DOMAIN,UID,UCNT
"RTN","VPRDCRC",108,0)
 S DOMAIN="",DCNT=0
"RTN","VPRDCRC",109,0)
 F  S DOMAIN=$O(^TMP("VPRCRC",$J,DOMAIN)) Q:DOMAIN=""  D
"RTN","VPRDCRC",110,0)
 . S ^TMP("VPRCRCF",$J,DOMAIN,"crc")=^TMP("VPRCRC",$J,DOMAIN)
"RTN","VPRDCRC",111,0)
 . S UCNT=0,UID="" F  S UID=$O(^TMP("VPRCRC",$J,DOMAIN,UID)) Q:UID=""  D
"RTN","VPRDCRC",112,0)
 .. S UCNT=UCNT+1,^TMP("VPRCRCF",$J,DOMAIN,"uids",UCNT,UID)=^TMP("VPRCRC",$J,DOMAIN,UID)
"RTN","VPRDCRC",113,0)
 Q
"RTN","VPRDCRC",114,0)
 ;
"RTN","VPRDCRC",115,0)
GET(LIST,CRC) ; -- compute CRC32 value for LIST of strings
"RTN","VPRDCRC",116,0)
 N I S CRC=$G(CRC),I=""
"RTN","VPRDCRC",117,0)
 F  S I=$O(@LIST@(I)) Q:I=""  I $G(@LIST@(I))'="" S CRC=$$CRC32^XLFCRC(I_":"_@LIST@(I),CRC)
"RTN","VPRDCRC",118,0)
 Q
"RTN","VPRDCRC",119,0)
 ;
"RTN","VPRDCRC",120,0)
ONE(ARRAY,COLL) ; -- process one data item [save result in ^TMP]
"RTN","VPRDCRC",121,0)
 N LIST,UID,ATTR,CRC
"RTN","VPRDCRC",122,0)
 S LIST=$$ATTR(COLL),UID=$G(@ARRAY@("uid")) Q:UID=""
"RTN","VPRDCRC",123,0)
 S ATTR="" F  S ATTR=$O(@ARRAY@(ATTR)) Q:ATTR=""  I LIST'[(U_ATTR_U) K @ARRAY@(ATTR)
"RTN","VPRDCRC",124,0)
 D GET(ARRAY,.CRC)
"RTN","VPRDCRC",125,0)
 S ^TMP("VPRCRC",$J,COLL,UID)=CRC
"RTN","VPRDCRC",126,0)
 S VPRI=VPRI+1
"RTN","VPRDCRC",127,0)
 Q
"RTN","VPRDCRC",128,0)
 ;
"RTN","VPRDCRC",129,0)
GET1(ARRAY,COLL) ; -- process one data item [return result]
"RTN","VPRDCRC",130,0)
 N LIST,ATTR,ITEM,CRC
"RTN","VPRDCRC",131,0)
 S LIST=$$ATTR(COLL)
"RTN","VPRDCRC",132,0)
 S ATTR="" F  S ATTR=$O(@ARRAY@(ATTR)) Q:ATTR=""  I LIST[(U_ATTR_U) S ITEM(ATTR)=@ARRAY@(ATTR)
"RTN","VPRDCRC",133,0)
 D GET(ITEM,.CRC)
"RTN","VPRDCRC",134,0)
 Q CRC
"RTN","VPRDCRC",135,0)
 ;
"RTN","VPRDCRC",136,0)
ALL() ; -- return string for all types of data
"RTN","VPRDCRC",137,0)
 Q "problem;allergy;consult;vital;lab;procedure;obs;order;treatment;med;ptf;factor;immunization;exam;cpt;education;pov;skin;image;appointment;surgery;document;visit;mh"
"RTN","VPRDCRC",138,0)
 ;
"RTN","VPRDCRC",139,0)
ATTR(X) ; -- return list of attributes needed for collection X
"RTN","VPRDCRC",140,0)
 N Y S Y=""
"RTN","VPRDCRC",141,0)
 I X="vital"        S Y="^observed^typeName^result^"
"RTN","VPRDCRC",142,0)
 I X="problem"      S Y="^onset^problemText^statusName^"
"RTN","VPRDCRC",143,0)
 I X="allergy"      S Y="^entered^summary^"
"RTN","VPRDCRC",144,0)
 I X="order"        S Y="^start^name^statusName^"
"RTN","VPRDCRC",145,0)
 I X="treatment"    S Y="^start^name^statusName^"
"RTN","VPRDCRC",146,0)
 I X="med"          S Y="^overallstart^name^vaStatus^"
"RTN","VPRDCRC",147,0)
 I X="consult"      S Y="^startDate^typeName^statusName^"
"RTN","VPRDCRC",148,0)
 I X="procedure"    S Y="^dateTime^name^statusName^"
"RTN","VPRDCRC",149,0)
 I X="obs"          S Y="^observed^typeName^result^"
"RTN","VPRDCRC",150,0)
 I X="lab"          S Y="^observed^typeName^"
"RTN","VPRDCRC",151,0)
 I X="image"        S Y="^dateTime^name^statusName^"
"RTN","VPRDCRC",152,0)
 I X="surgery"      S Y="^dateTime^typeName^statusName^"
"RTN","VPRDCRC",153,0)
 I X="document"     S Y="^referenceDateTime^localTitle^statusName^"
"RTN","VPRDCRC",154,0)
 I X="mh"           S Y="^administeredDateTime^name^"
"RTN","VPRDCRC",155,0)
 I X="immunization" S Y="^administeredDateTime^name^"
"RTN","VPRDCRC",156,0)
 I X="pov"          S Y="^entered^name^"
"RTN","VPRDCRC",157,0)
 I X="skin"         S Y="^entered^name^result^"
"RTN","VPRDCRC",158,0)
 I X="exam"         S Y="^entered^name^result^"
"RTN","VPRDCRC",159,0)
 I X="cpt"          S Y="^entered^name^"
"RTN","VPRDCRC",160,0)
 I X="education"    S Y="^entered^name^result^"
"RTN","VPRDCRC",161,0)
 I X="factor"       S Y="^entered^name^"
"RTN","VPRDCRC",162,0)
 I X="appointment"  S Y="^dateTime^typeName^appointmentStatus^"
"RTN","VPRDCRC",163,0)
 I X="visit"        S Y="^dateTime^typeName^"
"RTN","VPRDCRC",164,0)
 I X="ptf"          S Y="^arrivalDateTime^icdCode^"
"RTN","VPRDCRC",165,0)
 Q Y
"RTN","VPRDCRC",166,0)
 ;
"RTN","VPRDCRC",167,0)
 ;
"RTN","VPRDCRC",168,0)
TEST(FILTER) ;
"RTN","VPRDCRC",169,0)
 N DONE,OUT
"RTN","VPRDCRC",170,0)
 S DONE=0
"RTN","VPRDCRC",171,0)
 F  D  Q:DONE=1
"RTN","VPRDCRC",172,0)
 .D CHECK(.OUT,.FILTER)
"RTN","VPRDCRC",173,0)
 .H 1 W !,$D(OUT)
"RTN","VPRDCRC",174,0)
 .I $D(OUT)>0 S DONE=1
"RTN","VPRDCRC",175,0)
 Q
"RTN","VPRDGMPL")
0^28^B27827751^B27790775
"RTN","VPRDGMPL",1,0)
VPRDGMPL ;SLC/MKB -- Problem extract ;8/2/11  15:29
"RTN","VPRDGMPL",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**1,2**;Sep 01, 2011;Build 317
"RTN","VPRDGMPL",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDGMPL",4,0)
 ;
"RTN","VPRDGMPL",5,0)
 ; External References          DBIA#
"RTN","VPRDGMPL",6,0)
 ; -------------------          -----
"RTN","VPRDGMPL",7,0)
 ; ^AUPNPROB                     5703
"RTN","VPRDGMPL",8,0)
 ; ^DPT                         10035
"RTN","VPRDGMPL",9,0)
 ; ^VA(200                      10060
"RTN","VPRDGMPL",10,0)
 ; ^WV(790.05                    5772
"RTN","VPRDGMPL",11,0)
 ; %DT                          10003
"RTN","VPRDGMPL",12,0)
 ; DIQ                           2056
"RTN","VPRDGMPL",13,0)
 ; GMPLUTL2                      2741
"RTN","VPRDGMPL",14,0)
 ; SDUTL3                        1252
"RTN","VPRDGMPL",15,0)
 ; XLFDT                        10103
"RTN","VPRDGMPL",16,0)
 ; XUAF4                         2171
"RTN","VPRDGMPL",17,0)
 ;
"RTN","VPRDGMPL",18,0)
 ; ------------ Get problems from VistA ------------
"RTN","VPRDGMPL",19,0)
 ;
"RTN","VPRDGMPL",20,0)
EN(DFN,BEG,END,MAX,IFN) ; -- find patient's problems
"RTN","VPRDGMPL",21,0)
 N VPRSTS,VPRPROB,VPRN,VPRITM,VPRCNT,X
"RTN","VPRDGMPL",22,0)
 ;
"RTN","VPRDGMPL",23,0)
 ; get one problem
"RTN","VPRDGMPL",24,0)
 I $G(IFN)="790.05" D WV(.VPRITM,1),XML(.VPRITM):$D(VPRITM) Q
"RTN","VPRDGMPL",25,0)
 I $G(IFN) D EN1(IFN,.VPRITM),XML(.VPRITM) Q
"RTN","VPRDGMPL",26,0)
 ;
"RTN","VPRDGMPL",27,0)
 ; get all patient problems
"RTN","VPRDGMPL",28,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","VPRDGMPL",29,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999),VPRCNT=0
"RTN","VPRDGMPL",30,0)
 S VPRSTS=$G(FILTER("status")) ;default = all problems
"RTN","VPRDGMPL",31,0)
 D LIST^GMPLUTL2(.VPRPROB,DFN,VPRSTS)
"RTN","VPRDGMPL",32,0)
 S VPRN=0 F  S VPRN=$O(VPRPROB(VPRN)) Q:(VPRN<1)!(VPRCNT'<MAX)  D
"RTN","VPRDGMPL",33,0)
 . S X=$P(VPRPROB(VPRN),U,5) I X,(X<BEG)!(X>END) Q  ;onset
"RTN","VPRDGMPL",34,0)
 . S X=+VPRPROB(VPRN) K VPRITM ;ien
"RTN","VPRDGMPL",35,0)
 . D EN1(X,.VPRITM),XML(.VPRITM)
"RTN","VPRDGMPL",36,0)
 . S VPRCNT=VPRCNT+1
"RTN","VPRDGMPL",37,0)
 I $P($G(^DPT(DFN,0)),U,2)="F" D WV(.VPRITM),XML(.VPRITM):$D(VPRITM)
"RTN","VPRDGMPL",38,0)
 Q
"RTN","VPRDGMPL",39,0)
 ;
"RTN","VPRDGMPL",40,0)
EN1(ID,PROB) ; -- return a problem in PROB("attribute")=value
"RTN","VPRDGMPL",41,0)
 N VPRL,X,I,J K PROB
"RTN","VPRDGMPL",42,0)
 S ID=+$G(ID) Q:ID<1  ;invalid ien
"RTN","VPRDGMPL",43,0)
 D DETAIL^GMPLUTL2(ID,.VPRL) Q:'$D(VPRL)  ;doesn't exist
"RTN","VPRDGMPL",44,0)
 S PROB("id")=ID ;,PROB("lexiconID")=+X1 ;SNOMED?
"RTN","VPRDGMPL",45,0)
 S PROB("name")=$G(VPRL("NARRATIVE"))
"RTN","VPRDGMPL",46,0)
 S X=$G(VPRL("MODIFIED")) S:$L(X) PROB("updated")=$$DATE(X)
"RTN","VPRDGMPL",47,0)
 S PROB("icd")=$G(VPRL("DIAGNOSIS"))
"RTN","VPRDGMPL",48,0)
 S X=$G(VPRL("STATUS")) S:$L(X) PROB("status")=$E(X)_U_X
"RTN","VPRDGMPL",49,0)
 S X=$G(VPRL("HISTORY"))  S:$L(X) PROB("history")=$E(X)_U_X
"RTN","VPRDGMPL",50,0)
 S X=$G(VPRL("PRIORITY")) S:$L(X) PROB("acuity")=$E(X)_U_X
"RTN","VPRDGMPL",51,0)
 S X=$G(VPRL("ONSET")) S:$L(X) PROB("onset")=$$DATE(X)
"RTN","VPRDGMPL",52,0)
 S X=$$GET1^DIQ(9000011,ID_",",1.07,"I") S:X PROB("resolved")=X
"RTN","VPRDGMPL",53,0)
 S X=$P($G(VPRL("ENTERED")),U)  S:$L(X) PROB("entered")=$$DATE(X)
"RTN","VPRDGMPL",54,0)
 S X=$$GET1^DIQ(9000011,ID_",",1.02,"I")
"RTN","VPRDGMPL",55,0)
 S:X="P" PROB("unverified")=0,PROB("removed")=0
"RTN","VPRDGMPL",56,0)
 S:X="T" PROB("unverified")=1,PROB("removed")=0
"RTN","VPRDGMPL",57,0)
 S:X="H" PROB("unverified")=0,PROB("removed")=1
"RTN","VPRDGMPL",58,0)
 S X=$G(VPRL("SC")),X=$S(X="YES":1,X="NO":0,1:"")
"RTN","VPRDGMPL",59,0)
 S:$L(X) PROB("sc")=X I $G(VPRL("EXPOSURE")) D   ;ao^rad^pgulf^hnc^mst^cv
"RTN","VPRDGMPL",60,0)
 . S I=0 F  S I=$O(VPRL("EXPOSURE",I)) Q:I<1  D
"RTN","VPRDGMPL",61,0)
 .. S X=$G(VPRL("EXPOSURE",I))
"RTN","VPRDGMPL",62,0)
 .. S PROB("exposure",I)=$$EXP(X)
"RTN","VPRDGMPL",63,0)
 S X=$G(VPRL("PROVIDER")) S:$L(X) PROB("provider")=$$GET1^DIQ(9000011,ID_",",1.05,"I")_U_X
"RTN","VPRDGMPL",64,0)
 S X=$$GET1^DIQ(9000011,ID_",",1.06) S:$L(X) PROB("service")=X
"RTN","VPRDGMPL",65,0)
 S X=$G(VPRL("CLINIC")) S:$L(X) PROB("location")=X
"RTN","VPRDGMPL",66,0)
 S X=+$$GET1^DIQ(9000011,ID_",",.06,"I")
"RTN","VPRDGMPL",67,0)
 S:X PROB("facility")=$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U)
"RTN","VPRDGMPL",68,0)
 I 'X S PROB("facility")=$$FAC^VPRD ;local stn#^name
"RTN","VPRDGMPL",69,0)
CMT ; comments
"RTN","VPRDGMPL",70,0)
 Q:'$G(VPRL("COMMENT"))
"RTN","VPRDGMPL",71,0)
 S I=0 F  S I=$O(VPRL("COMMENT",I)) Q:I<1  D
"RTN","VPRDGMPL",72,0)
 . S X=$G(VPRL("COMMENT",I))
"RTN","VPRDGMPL",73,0)
 . S PROB("comment",I)=$$DATE($P(X,U))_U_$P(X,U,2,3)
"RTN","VPRDGMPL",74,0)
 . ; = date ^ name of author ^ text
"RTN","VPRDGMPL",75,0)
 Q
"RTN","VPRDGMPL",76,0)
 ;
"RTN","VPRDGMPL",77,0)
WV(PROB,UPD) ; -- return a pregnancy log entry in PROB("attribute")=value
"RTN","VPRDGMPL",78,0)
 N I,X0,Y K PROB
"RTN","VPRDGMPL",79,0)
 S I=$O(^WV(790.05,"C",DFN,""),-1) Q:'I    ;last entry
"RTN","VPRDGMPL",80,0)
 S X0=$G(^WV(790.05,I,0)),Y=0
"RTN","VPRDGMPL",81,0)
 ; status=YES, future due date (allow past 14 days)
"RTN","VPRDGMPL",82,0)
 I $P(X0,U,3),$P(X0,U,4)'<$$FMADD^XLFDT(DT,-14) S Y=1
"RTN","VPRDGMPL",83,0)
 I 'Y,'$G(UPD) Q
"RTN","VPRDGMPL",84,0)
 ; continue if pregnant, or update requested
"RTN","VPRDGMPL",85,0)
 S PROB("id")="790.05",PROB("entered")=+X0
"RTN","VPRDGMPL",86,0)
 S PROB("name")="Pregnancy",PROB("icd")="V22.2"
"RTN","VPRDGMPL",87,0)
 ; PROB("problemType")=64572001            ;HITSP/Condition
"RTN","VPRDGMPL",88,0)
 S PROB("status")=$S(Y:"A^ACTIVE",1:"I^INACTIVE")
"RTN","VPRDGMPL",89,0)
 S PROB("resolved")=$P(X0,U,4)             ;due date
"RTN","VPRDGMPL",90,0)
 S PROB("provider")=$$OUTPTPR^SDUTL3(DFN)  ;primary care
"RTN","VPRDGMPL",91,0)
 S PROB("facility")=$$FAC^VPRD
"RTN","VPRDGMPL",92,0)
 Q
"RTN","VPRDGMPL",93,0)
 ;
"RTN","VPRDGMPL",94,0)
DATE(X) ; -- Return internal form of date X
"RTN","VPRDGMPL",95,0)
 N %DT,Y
"RTN","VPRDGMPL",96,0)
 S %DT="" D ^%DT S:Y<1 Y=X
"RTN","VPRDGMPL",97,0)
 Q Y
"RTN","VPRDGMPL",98,0)
 ;
"RTN","VPRDGMPL",99,0)
VA200(X) ; -- Return ien of New Person X
"RTN","VPRDGMPL",100,0)
 N Y S Y=$S($L($G(X)):+$O(^VA(200,"B",X,0)),1:"")
"RTN","VPRDGMPL",101,0)
 Q Y
"RTN","VPRDGMPL",102,0)
 ;
"RTN","VPRDGMPL",103,0)
EXP(X) ; -- Return code for exposure name X
"RTN","VPRDGMPL",104,0)
 N Y S Y="",X=$E($G(X))
"RTN","VPRDGMPL",105,0)
 I X="A" S Y="AO"  ;agent orange
"RTN","VPRDGMPL",106,0)
 I X="R" S Y="IR"  ;ionizing radiation
"RTN","VPRDGMPL",107,0)
 I X="E" S Y="PG"  ;persian gulf
"RTN","VPRDGMPL",108,0)
 I X="H" S Y="HNC" ;head/neck cancer
"RTN","VPRDGMPL",109,0)
 I X="M" S Y="MST" ;military sexual trauma
"RTN","VPRDGMPL",110,0)
 I X="C" S Y="CV"  ;combat vet
"RTN","VPRDGMPL",111,0)
 I X="S" S Y="SHAD"
"RTN","VPRDGMPL",112,0)
 Q Y
"RTN","VPRDGMPL",113,0)
 ;
"RTN","VPRDGMPL",114,0)
 ; ------------ Return data to middle tier ------------
"RTN","VPRDGMPL",115,0)
 ;
"RTN","VPRDGMPL",116,0)
XML(PROB) ; -- Return patient problem as XML in @VPR@(I)
"RTN","VPRDGMPL",117,0)
 N ATT,I,X,Y,P,TAG
"RTN","VPRDGMPL",118,0)
 D ADD("<problem>") S VPRTOTL=$G(VPRTOTL)+1
"RTN","VPRDGMPL",119,0)
 S ATT="" F  S ATT=$O(PROB(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","VPRDGMPL",120,0)
 . I ATT="exposure" D  S Y="" Q
"RTN","VPRDGMPL",121,0)
 .. S Y="<exposures>" D ADD(Y)
"RTN","VPRDGMPL",122,0)
 .. S I=0 F  S I=$O(PROB(ATT,I)) Q:I<1  S X=$G(PROB(ATT,I)) S:$L(X) Y="<exposure value='"_X_"' />" D ADD(Y)
"RTN","VPRDGMPL",123,0)
 .. D ADD("</exposures>")
"RTN","VPRDGMPL",124,0)
 . I ATT="comment" D  S Y="" Q
"RTN","VPRDGMPL",125,0)
 .. D ADD("<comments>")
"RTN","VPRDGMPL",126,0)
 .. S I=0 F  S I=$O(PROB(ATT,I)) Q:I<1  S X=$G(PROB(ATT,I)) D
"RTN","VPRDGMPL",127,0)
 ... S Y="<comment id='"_I
"RTN","VPRDGMPL",128,0)
 ... S:$L($P(X,U,1)) Y=Y_"' entered='"_$P(X,U)
"RTN","VPRDGMPL",129,0)
 ... S:$L($P(X,U,2)) Y=Y_"' enteredBy='"_$$ESC^VPRD($P(X,U,2))
"RTN","VPRDGMPL",130,0)
 ... S:$L($P(X,U,3)) Y=Y_"' commentText='"_$$ESC^VPRD($P(X,U,3))
"RTN","VPRDGMPL",131,0)
 ... S Y=Y_"' />" D ADD(Y)
"RTN","VPRDGMPL",132,0)
 .. D ADD("</comments>")
"RTN","VPRDGMPL",133,0)
 . S X=$G(PROB(ATT)),Y="" Q:'$L(X)
"RTN","VPRDGMPL",134,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^VPRD(X)_"' />" Q
"RTN","VPRDGMPL",135,0)
 . I $L(X)>1 D  S Y=""
"RTN","VPRDGMPL",136,0)
 .. S Y="<"_ATT_" "
"RTN","VPRDGMPL",137,0)
 .. F P=1:1 S TAG=$P("code^name^Z",U,P) Q:TAG="Z"  I $L($P(X,U,P)) S Y=Y_TAG_"='"_$$ESC^VPRD($P(X,U,P))_"' "
"RTN","VPRDGMPL",138,0)
 .. S Y=Y_"/>" D ADD(Y)
"RTN","VPRDGMPL",139,0)
 D ADD("</problem>")
"RTN","VPRDGMPL",140,0)
 Q
"RTN","VPRDGMPL",141,0)
 ;
"RTN","VPRDGMPL",142,0)
ADD(X) ; Add a line @VPR@(n)=X
"RTN","VPRDGMPL",143,0)
 S VPRI=$G(VPRI)+1
"RTN","VPRDGMPL",144,0)
 S @VPR@(VPRI)=X
"RTN","VPRDGMPL",145,0)
 Q
"RTN","VPRDJ")
0^2^B22186238^n/a
"RTN","VPRDJ",1,0)
VPRDJ ;SLC/MKB -- Serve VistA data as JSON via RPC ;10/18/12 6:26pm
"RTN","VPRDJ",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 317
"RTN","VPRDJ",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ",4,0)
 ;
"RTN","VPRDJ",5,0)
 ; External References          DBIA#
"RTN","VPRDJ",6,0)
 ; -------------------          -----
"RTN","VPRDJ",7,0)
 ; ^DPT                         10035
"RTN","VPRDJ",8,0)
 ; MPIF001                       2701
"RTN","VPRDJ",9,0)
 ; XLFDT                        10103
"RTN","VPRDJ",10,0)
 ; XLFSTR                       10104
"RTN","VPRDJ",11,0)
 ; XUPARAM                       2541
"RTN","VPRDJ",12,0)
 ;
"RTN","VPRDJ",13,0)
GET(VPR,FILTER) ; -- Return search results as JSON in @VPR@(n)
"RTN","VPRDJ",14,0)
 ; RPC = VPR GET PATIENT DATA JSON
"RTN","VPRDJ",15,0)
 ; where FILTER("patientId") = DFN or DFN;ICN
"RTN","VPRDJ",16,0)
 ;       FILTER("domain")    = name of desired data type  (see VPRDJ0)
"RTN","VPRDJ",17,0)
 ;       FILTER("text")      = boolean, to include document text [opt]
"RTN","VPRDJ",18,0)
 ;       FILTER("start")     = start date.time of search         [opt]
"RTN","VPRDJ",19,0)
 ;       FILTER("stop")      = stop date.time of search          [opt]
"RTN","VPRDJ",20,0)
 ;       FILTER("max")       = maximum number of items to return [opt]
"RTN","VPRDJ",21,0)
 ;       FILTER("id")        = single item id to return          [opt]
"RTN","VPRDJ",22,0)
 ;       FILTER("uid")       = single record uid to return       [opt]
"RTN","VPRDJ",23,0)
 ;
"RTN","VPRDJ",24,0)
 N ICN,DFN,VPRSYS,VPRTYPE,VPRSTART,VPRSTOP,VPRMAX,VPRI,VPRID,VPRTEXT,VPRP,VPRTN,VPRERR
"RTN","VPRDJ",25,0)
 S VPR=$NA(^TMP("VPR",$J)),VPRI=0 K @VPR
"RTN","VPRDJ",26,0)
 S VPRSYS=$$GET^XPAR("SYS","VPR SYSTEM NAME")
"RTN","VPRDJ",27,0)
 S DT=$$DT^XLFDT             ;for crossing midnight boundary
"RTN","VPRDJ",28,0)
 ;
"RTN","VPRDJ",29,0)
 I $G(FILTER("uid"))'="" D SEPUID(.FILTER)
"RTN","VPRDJ",30,0)
 ; parse & validate input parameters
"RTN","VPRDJ",31,0)
 S DFN=$G(FILTER("patientId"))
"RTN","VPRDJ",32,0)
 S ICN=+$P($G(DFN),";",2),DFN=+$G(DFN)
"RTN","VPRDJ",33,0)
 I DFN<1,ICN S DFN=+$$GETDFN^MPIF001(ICN)
"RTN","VPRDJ",34,0)
 ;
"RTN","VPRDJ",35,0)
 S VPRTYPE=$G(FILTER("domain")) S:VPRTYPE="" VPRTYPE=$$ALL
"RTN","VPRDJ",36,0)
 I $D(ZTQUEUED) S VPR=$NA(^XTMP(VPRBATCH,DFN,VPRTYPE)) K @VPR
"RTN","VPRDJ",37,0)
 I VPRTYPE'="new",DFN<1!'$D(^DPT(DFN)) S VPRERR=$$ERR(1,DFN) G GTQ
"RTN","VPRDJ",38,0)
 ;
"RTN","VPRDJ",39,0)
 S VPRSTART=+$G(FILTER("start"),1410102)
"RTN","VPRDJ",40,0)
 S VPRSTOP=+$G(FILTER("stop"),4141015)
"RTN","VPRDJ",41,0)
 S VPRMAX=+$G(FILTER("max"),9999)
"RTN","VPRDJ",42,0)
 I VPRSTART,VPRSTOP,VPRSTOP<VPRSTART D
"RTN","VPRDJ",43,0)
 . N X S X=VPRSTART,VPRSTART=VPRSTOP,VPRSTOP=X
"RTN","VPRDJ",44,0)
 I VPRSTOP,$L(VPRSTOP,".")<2 S VPRSTOP=VPRSTOP_".24"
"RTN","VPRDJ",45,0)
 ;
"RTN","VPRDJ",46,0)
 S VPRID=$G(FILTER("id"))
"RTN","VPRDJ",47,0)
 S VPRTEXT=+$G(FILTER("text"),1) ;default = true/text
"RTN","VPRDJ",48,0)
 ;
"RTN","VPRDJ",49,0)
 ; extract data
"RTN","VPRDJ",50,0)
 I VPRTYPE="new",$L($T(EN^VPRDJX)) D EN^VPRDJX(VPRID,VPRMAX) Q  ;data updates
"RTN","VPRDJ",51,0)
 F VPRP=1:1:$L(VPRTYPE,";") S TYPE=$P(VPRTYPE,";",VPRP) I $L(TYPE) D
"RTN","VPRDJ",52,0)
 . S VPRTN=$$TAG(TYPE)_"^VPRDJ0" Q:'$L($T(@VPRTN))
"RTN","VPRDJ",53,0)
 . D @VPRTN
"RTN","VPRDJ",54,0)
 ;
"RTN","VPRDJ",55,0)
GTQ ; add item count and terminating characters
"RTN","VPRDJ",56,0)
 S @VPR@(.5)="{""apiVersion"":""1.01"",""params"":{"_$$SYS_"},"
"RTN","VPRDJ",57,0)
 I $D(VPRERR) S @VPR@(1)="""error"":{""message"":"""_VPRERR_"""}}" Q
"RTN","VPRDJ",58,0)
 I '$D(@VPR)!'$G(VPRI) S @VPR@(1)="""data"":{""totalItems"":0,""items"":[]}}" Q
"RTN","VPRDJ",59,0)
 ;
"RTN","VPRDJ",60,0)
 S @VPR@(.6)="""data"":{""updated"":"""_$$HL7NOW_""",""totalItems"":"_VPRI_",""items"":["
"RTN","VPRDJ",61,0)
 S VPRI=VPRI+1,@VPR@(VPRI)="]}}"
"RTN","VPRDJ",62,0)
 K ^TMP("VPRTEXT",$J)
"RTN","VPRDJ",63,0)
 Q
"RTN","VPRDJ",64,0)
 ;
"RTN","VPRDJ",65,0)
SEPUID(FILTER) ; -- separate uid into FILTER pieces
"RTN","VPRDJ",66,0)
 N UID
"RTN","VPRDJ",67,0)
 S UID=$G(FILTER("uid")) K FILTER("uid") Q:UID=""
"RTN","VPRDJ",68,0)
 I $P(UID,":",4)'=VPRSYS Q
"RTN","VPRDJ",69,0)
 S FILTER("patientId")=$P(UID,":",5)
"RTN","VPRDJ",70,0)
 S FILTER("domain")=$P(UID,":",3)
"RTN","VPRDJ",71,0)
 S FILTER("id")=$P(UID,":",6)
"RTN","VPRDJ",72,0)
 Q
"RTN","VPRDJ",73,0)
 ;
"RTN","VPRDJ",74,0)
SYS() ; -- return system info for JSON header
"RTN","VPRDJ",75,0)
 Q """domain"":"""_$$KSP^XUPARAM("WHERE")_""",""systemId"":"""_VPRSYS_""""
"RTN","VPRDJ",76,0)
 ;
"RTN","VPRDJ",77,0)
TAG(X) ; -- Return linetag in VPRDJ0 routine for clinical domain X
"RTN","VPRDJ",78,0)
 N Y S X=$G(X,"Z")
"RTN","VPRDJ",79,0)
 S Y=$E($$UP^XLFSTR(X),1,8)
"RTN","VPRDJ",80,0)
 S:'$L($T(@(Y_"^VPRDJ0"))) Y="VPR"
"RTN","VPRDJ",81,0)
 Q Y
"RTN","VPRDJ",82,0)
 ;
"RTN","VPRDJ",83,0)
ALL() ; -- return string for all types of data
"RTN","VPRDJ",84,0)
 Q "patient;problem;allergy;consult;vital;lab;procedure;obs;order;treatment;med;ptf;factor;immunization;exam;cpt;education;pov;skin;image;appointment;surgery;document;visit"
"RTN","VPRDJ",85,0)
 ;
"RTN","VPRDJ",86,0)
ERR(X,VAL) ; -- return error message
"RTN","VPRDJ",87,0)
 N MSG  S MSG="Error"
"RTN","VPRDJ",88,0)
 I X=1  S MSG="Patient with dfn '"_$G(VAL)_"' not found"
"RTN","VPRDJ",89,0)
 I X=2  S MSG="Domain type '"_$G(VAL)_"' not recognized"
"RTN","VPRDJ",90,0)
 I X=3  S MSG="UID '"_$G(VAL)_"' not found"
"RTN","VPRDJ",91,0)
 I X=4  S MSG="Unable to create new object"
"RTN","VPRDJ",92,0)
 I X=99 S MSG="Unknown request"
"RTN","VPRDJ",93,0)
 Q MSG
"RTN","VPRDJ",94,0)
 ;
"RTN","VPRDJ",95,0)
HL7NOW() ; -- Return current time in HL7 format
"RTN","VPRDJ",96,0)
 Q $P($$FMTHL7^XLFDT($$NOW^XLFDT),"-")
"RTN","VPRDJ",97,0)
 ;
"RTN","VPRDJ",98,0)
ADD(ITEM,COLL) ; -- add ITEM to results
"RTN","VPRDJ",99,0)
 I $D(VPRCRC),$D(COLL) D ONE^VPRDCRC(ITEM,COLL) Q  ;checksum
"RTN","VPRDJ",100,0)
 ; -- add ITEM to @VPR@(VPRI) to return JSON
"RTN","VPRDJ",101,0)
 N VPRY,VPRERR
"RTN","VPRDJ",102,0)
 D ENCODE^VPRJSON(ITEM,"VPRY","VPRERR")
"RTN","VPRDJ",103,0)
 I $D(VPRERR) D  ;return ERRor instead of ITEM
"RTN","VPRDJ",104,0)
 . N VPRTMP,VPRTXT,VPRITM
"RTN","VPRDJ",105,0)
 . M VPRITM=@ITEM K VPRY
"RTN","VPRDJ",106,0)
 . S VPRTXT(1)="Problem encoding json output."
"RTN","VPRDJ",107,0)
 . D SETERROR^VPRUTILS(.VPRTMP,.VPRERR,.VPRTXT,.VPRITM)
"RTN","VPRDJ",108,0)
 . K VPRERR D ENCODE^VPRJSON("VPRTMP","VPRY","VPRERR")
"RTN","VPRDJ",109,0)
 I $D(VPRY) D
"RTN","VPRDJ",110,0)
 . S VPRI=VPRI+1 S:VPRI>1 @VPR@(VPRI,.3)=","
"RTN","VPRDJ",111,0)
 . M @VPR@(VPRI)=VPRY
"RTN","VPRDJ",112,0)
 Q
"RTN","VPRDJ",113,0)
 ;
"RTN","VPRDJ",114,0)
TEST(DFN,TYPE,ID,TEXT,IN) ; -- test GET, write results to screen
"RTN","VPRDJ",115,0)
 N OUT,IDX
"RTN","VPRDJ",116,0)
 S U="^"
"RTN","VPRDJ",117,0)
 S:'$D(IN("systemID")) IN("systemID")=$$GET^XPAR("SYS","VPR SYSTEM NAME")
"RTN","VPRDJ",118,0)
 S IN("patientId")=+$G(DFN)
"RTN","VPRDJ",119,0)
 S IN("domain")=$G(TYPE)
"RTN","VPRDJ",120,0)
 S:$D(ID) IN("id")=ID
"RTN","VPRDJ",121,0)
 S:$D(TEXT) IN("text")=TEXT
"RTN","VPRDJ",122,0)
 D GET(.OUT,.IN)
"RTN","VPRDJ",123,0)
 ;
"RTN","VPRDJ",124,0)
 S IDX=OUT
"RTN","VPRDJ",125,0)
 F  S IDX=$Q(@IDX) Q:IDX'?1"^TMP(""VPR"","1.N.E  Q:+$P(IDX,",",2)'=$J  W !,@IDX
"RTN","VPRDJ",126,0)
 Q
"RTN","VPRDJ0")
0^3^B87481337^n/a
"RTN","VPRDJ0",1,0)
VPRDJ0 ;SLC/MKB -- Serve VistA data as JSON cont ;6/25/12  16:11
"RTN","VPRDJ0",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 317
"RTN","VPRDJ0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ0",4,0)
 ;
"RTN","VPRDJ0",5,0)
 ; External References          DBIA#
"RTN","VPRDJ0",6,0)
 ; -------------------          -----
"RTN","VPRDJ0",7,0)
 ; ^DPT                         10035  <see VPRDJ0* for others>
"RTN","VPRDJ0",8,0)
 ;
"RTN","VPRDJ0",9,0)
 ; All tags expect DFN, VPRSTART, VPRSTOP, VPRMAX, VPRID, VPRTEXT
"RTN","VPRDJ0",10,0)
 ;
"RTN","VPRDJ0",11,0)
PATIENT ; -- Patient Registration
"RTN","VPRDJ0",12,0)
 D DPT1^VPRDJ00
"RTN","VPRDJ0",13,0)
 Q
"RTN","VPRDJ0",14,0)
 ;
"RTN","VPRDJ0",15,0)
PROBLEM ; -- Problem List
"RTN","VPRDJ0",16,0)
 I $G(VPRID) D GMPL1^VPRDJ02(VPRID) Q
"RTN","VPRDJ0",17,0)
 N ID,VPRSTS,VPRPROB,VPRN,X
"RTN","VPRDJ0",18,0)
 S VPRSTS=$G(FILTER("status")) ;default = all problems
"RTN","VPRDJ0",19,0)
 D LIST^GMPLUTL2(.VPRPROB,DFN,VPRSTS)
"RTN","VPRDJ0",20,0)
 S VPRN=0 F  S VPRN=$O(VPRPROB(VPRN)) Q:(VPRN<1)!(VPRI'<VPRMAX)  D
"RTN","VPRDJ0",21,0)
 . S X=$P(VPRPROB(VPRN),U,6) I X,(X<VPRSTART)!(X>VPRSTOP) Q  ;last updated
"RTN","VPRDJ0",22,0)
 . S ID=+VPRPROB(VPRN) D GMPL1^VPRDJ02(ID)
"RTN","VPRDJ0",23,0)
 Q
"RTN","VPRDJ0",24,0)
 ;
"RTN","VPRDJ0",25,0)
ALLERGY ; -- Allergies/Adverse Reactions
"RTN","VPRDJ0",26,0)
 N GMRAL,ID D EN1^GMRADPT
"RTN","VPRDJ0",27,0)
 I 'GMRAL Q  ;D NKA^VPRDJ02 Q
"RTN","VPRDJ0",28,0)
 I $G(VPRID) D GMRA1^VPRDJ02(VPRID) Q
"RTN","VPRDJ0",29,0)
 S ID=0 F  S ID=+$O(GMRAL(ID)) Q:ID<1  D GMRA1^VPRDJ02(ID) Q:VPRI'<VPRMAX
"RTN","VPRDJ0",30,0)
 Q
"RTN","VPRDJ0",31,0)
 ;
"RTN","VPRDJ0",32,0)
CONSULT ; -- Consult/Request Tracking
"RTN","VPRDJ0",33,0)
 N VPRN,VPRX,ID
"RTN","VPRDJ0",34,0)
 D OER^GMRCSLM1(DFN,"",VPRSTART,VPRSTOP,"")
"RTN","VPRDJ0",35,0)
 S VPRN=0 F  S VPRN=$O(^TMP("GMRCR",$J,"CS",VPRN)) Q:VPRN<1!(VPRN>VPRMAX)  S VPRX=$G(^(VPRN,0)) Q:$E(VPRX)="<"  D
"RTN","VPRDJ0",36,0)
 . I $G(VPRID),VPRID'=+VPRX Q
"RTN","VPRDJ0",37,0)
 . D GMRC1^VPRDJ03(+VPRX)
"RTN","VPRDJ0",38,0)
 K ^TMP("GMRCR",$J,"CS")
"RTN","VPRDJ0",39,0)
 Q
"RTN","VPRDJ0",40,0)
 ;
"RTN","VPRDJ0",41,0)
VITAL ; -- GMR Vital Measurements
"RTN","VPRDJ0",42,0)
 I $L($G(VPRID)) D GMV1^VPRDJ02(VPRID) Q
"RTN","VPRDJ0",43,0)
 N GMRVSTR,VPRIDT,VPRTYP,ID
"RTN","VPRDJ0",44,0)
 S GMRVSTR="BP;T;R;P;HT;WT;CVP;CG;PO2;PN"
"RTN","VPRDJ0",45,0)
 S GMRVSTR(0)=VPRSTART_U_VPRSTOP_U_VPRMAX_"^1"
"RTN","VPRDJ0",46,0)
 D EN1^GMRVUT0
"RTN","VPRDJ0",47,0)
 S VPRIDT=0 F  S VPRIDT=$O(^UTILITY($J,"GMRVD",VPRIDT)) Q:VPRIDT<1  D  Q:VPRI'<VPRMAX
"RTN","VPRDJ0",48,0)
 . S VPRTYP="" F  S VPRTYP=$O(^UTILITY($J,"GMRVD",VPRIDT,VPRTYP)) Q:VPRTYP=""  D
"RTN","VPRDJ0",49,0)
 .. S ID=$O(^UTILITY($J,"GMRVD",VPRIDT,VPRTYP,0)) D GMV1^VPRDJ02(ID)
"RTN","VPRDJ0",50,0)
 K ^UTILITY($J,"GMRVD")
"RTN","VPRDJ0",51,0)
 Q
"RTN","VPRDJ0",52,0)
 ;
"RTN","VPRDJ0",53,0)
LAB ; -- Lab Results
"RTN","VPRDJ0",54,0)
 N LRDFN,VPRSUB,VPRIDT,VPRN,VPRP,VPRACC,BEG,END,SUB,ORPK,ID,X
"RTN","VPRDJ0",55,0)
 S LRDFN=$G(^DPT(DFN,"LR")),VPRSUB=$G(FILTER("category"))
"RTN","VPRDJ0",56,0)
 S BEG=VPRSTART,END=VPRSTOP,VPRID=$G(VPRID),ORPK=""
"RTN","VPRDJ0",57,0)
 I $L(VPRID) D  ;reset for LR7OR1
"RTN","VPRDJ0",58,0)
 . I VPRID S ORPK=VPRID,VPRID=$P(VPRID,";",4,99) Q:VPRID=""  ;order
"RTN","VPRDJ0",59,0)
 . S VPRSUB=$P(VPRID,";"),VPRIDT=+$P(VPRID,";",2)
"RTN","VPRDJ0",60,0)
 . S:VPRIDT (BEG,END)=9999999-VPRIDT
"RTN","VPRDJ0",61,0)
 S SUB=VPRSUB I $L(SUB),"CH^MI"'[SUB S SUB="AP"
"RTN","VPRDJ0",62,0)
 D RR^LR7OR1(DFN,ORPK,BEG,END,SUB,,,VPRMAX)
"RTN","VPRDJ0",63,0)
 S VPRSUB="" F  S VPRSUB=$O(^TMP("LRRR",$J,DFN,VPRSUB)) Q:VPRSUB=""  D
"RTN","VPRDJ0",64,0)
 . S VPRIDT=0 F  S VPRIDT=$O(^TMP("LRRR",$J,DFN,VPRSUB,VPRIDT)) Q:VPRIDT<1  I $O(^(VPRIDT,0)) D  Q:VPRI'<VPRMAX
"RTN","VPRDJ0",65,0)
 .. I VPRSUB="MI"  S ID=VPRSUB_";"_VPRIDT D MI^VPRDJ06 Q
"RTN","VPRDJ0",66,0)
 .. I VPRSUB'="CH" S ID=VPRSUB_";"_VPRIDT D AP^VPRDJ06 Q
"RTN","VPRDJ0",67,0)
 .. D ACC^VPRDJ06 ;get chem accession data
"RTN","VPRDJ0",68,0)
 .. S VPRP=0 F  S VPRP=$O(^TMP("LRRR",$J,DFN,VPRSUB,VPRIDT,VPRP)) Q:VPRP<1  S X=+$G(^(VPRP)) D
"RTN","VPRDJ0",69,0)
 ... S VPRN=$$LRDN^LRPXAPIU(X) I $L(VPRID,";")>2,VPRN'=$P(VPRID,";",3) Q
"RTN","VPRDJ0",70,0)
 ... S ID=VPRSUB_";"_VPRIDT_";"_VPRN D CH1^VPRDJ06
"RTN","VPRDJ0",71,0)
 K ^TMP("LRRR",$J),^TMP("LRX",$J)
"RTN","VPRDJ0",72,0)
 Q
"RTN","VPRDJ0",73,0)
 ;
"RTN","VPRDJ0",74,0)
PROCEDUR ; -- Clinical Procedures
"RTN","VPRDJ0",75,0)
 N VPRN,VPRX,BEG,END,ID
"RTN","VPRDJ0",76,0)
 S BEG=VPRSTART,END=VPRSTOP
"RTN","VPRDJ0",77,0)
 I $G(VPRID) D  ;reset dates for VPRID only
"RTN","VPRDJ0",78,0)
 . N VPRMC,IEN,FILE,X
"RTN","VPRDJ0",79,0)
 . S IEN=+VPRID,FILE=+$P(VPRID,"(",2)  Q:FILE=702  Q:'FILE
"RTN","VPRDJ0",80,0)
 . D MEDLKUP^MCARUTL3(.VPRMC,FILE,IEN)
"RTN","VPRDJ0",81,0)
 . S X=$P(VPRMC,U,6) S:X (BEG,END)=X
"RTN","VPRDJ0",82,0)
 D MDPS1^VPRDJ03(DFN,BEG,END,VPRMAX)    ;gets ^TMP("MDHSP",$J)
"RTN","VPRDJ0",83,0)
 S VPRN=0 F  S VPRN=$O(^TMP("MDHSP",$J,VPRN)) Q:VPRN<1  S VPRX=$G(^(VPRN)) D
"RTN","VPRDJ0",84,0)
 . I $G(VPRID),+VPRID'=+$P(VPRX,U,2) Q  ;update 1 procedure
"RTN","VPRDJ0",85,0)
 . D MC1^VPRDJ03($G(VPRID))             ;uses VPRX
"RTN","VPRDJ0",86,0)
 K ^TMP("MDHSP",$J)
"RTN","VPRDJ0",87,0)
 Q
"RTN","VPRDJ0",88,0)
 ;
"RTN","VPRDJ0",89,0)
OBS ; -- Clinical Observations (CLiO)
"RTN","VPRDJ0",90,0)
 N VPRCLIO,VPRN,ID,X
"RTN","VPRDJ0",91,0)
 I $L($G(VPRID)) D MDC1^VPRDJ03(VPRID) Q
"RTN","VPRDJ0",92,0)
 D QRYPT^VPRDMDC("VPRCLIO",DFN,VPRSTART,VPRSTOP) ;all [verified] observations
"RTN","VPRDJ0",93,0)
 S VPRN=0 F  S VPRN=$O(VPRCLIO(VPRN)) Q:(VPRN<1)!(VPRI'<VPRMAX)  D
"RTN","VPRDJ0",94,0)
 . S ID=$G(VPRCLIO(VPRN)) ;GUID
"RTN","VPRDJ0",95,0)
 . D MDC1^VPRDJ03(ID)
"RTN","VPRDJ0",96,0)
 Q
"RTN","VPRDJ0",97,0)
 ;
"RTN","VPRDJ0",98,0)
ORDER ; -- Order Entry
"RTN","VPRDJ0",99,0)
 N ORLIST,VPRN,DAD,ID,X,X3,X4
"RTN","VPRDJ0",100,0)
 I $G(VPRID) S ORLIST=$H D OR1^VPRDJ01(VPRID) G ORQ
"RTN","VPRDJ0",101,0)
 D EN^ORQ1(DFN_";DPT(",,6,,VPRSTART,VPRSTOP,,,,1)
"RTN","VPRDJ0",102,0)
 S VPRN=0 F  S VPRN=$O(^TMP("ORR",$J,ORLIST,VPRN)) Q:VPRN<1  S ID=$G(^(VPRN)) D  Q:VPRI'<VPRMAX
"RTN","VPRDJ0",103,0)
 . Q:$D(^TMP("ORGOTIT",$J,+ID))  Q:$P(ID,";",2)>1  S ID=+ID    ;actions
"RTN","VPRDJ0",104,0)
 . S X3=$G(^OR(100,ID,3)),X4=$G(^(4))
"RTN","VPRDJ0",105,0)
 . Q:$P(X3,U,3)=13  I X4["P",$P(X3,U,3)=1!($P(X3,U,3)=12) Q  ;cancelled
"RTN","VPRDJ0",106,0)
 . S DAD=+$P(X3,U,9) I DAD D:'$D(^TMP("ORGOTIT",$J,DAD)) OR1^VPRDJ01(DAD) Q
"RTN","VPRDJ0",107,0)
 . D OR1^VPRDJ01(ID)
"RTN","VPRDJ0",108,0)
ORQ ; end
"RTN","VPRDJ0",109,0)
 K ^TMP("ORR",$J),^TMP("ORGOTIT",$J)
"RTN","VPRDJ0",110,0)
 Q
"RTN","VPRDJ0",111,0)
 ;
"RTN","VPRDJ0",112,0)
TREATMEN ; -- Nursing Treatments (orders)
"RTN","VPRDJ0",113,0)
 N ORLIST,ORDG,VPRN,ID,X,X3,X4
"RTN","VPRDJ0",114,0)
 I $G(VPRID) S ORLIST=$H D NTX1^VPRDJ01(VPRID) G TXQ
"RTN","VPRDJ0",115,0)
 S ORDG=+$O(^ORD(100.98,"B","NTX",0))
"RTN","VPRDJ0",116,0)
 D EN^ORQ1(DFN_";DPT(",ORDG,6,,VPRSTART,VPRSTOP,,,,1)
"RTN","VPRDJ0",117,0)
 S VPRN=0 F  S VPRN=$O(^TMP("ORR",$J,ORLIST,VPRN)) Q:VPRN<1  S ID=$G(^(VPRN)) D  Q:VPRI'<VPRMAX
"RTN","VPRDJ0",118,0)
 . Q:$D(^TMP("ORGOTIT",$J,+ID))  Q:$P(ID,";",2)>1  S ID=+ID  ;actions
"RTN","VPRDJ0",119,0)
 . S X3=$G(^OR(100,ID,3)),X4=$G(^(4))
"RTN","VPRDJ0",120,0)
 . Q:$P(X3,U,3)=13  I X4["P",$P(X3,U,3)=1!($P(X3,U,3)=12) Q  ;cancelled
"RTN","VPRDJ0",121,0)
 . D NTX1^VPRDJ01(ID)
"RTN","VPRDJ0",122,0)
TXQ ; end
"RTN","VPRDJ0",123,0)
 K ^TMP("ORR",$J),^TMP("ORGOTIT",$J)
"RTN","VPRDJ0",124,0)
 Q
"RTN","VPRDJ0",125,0)
 ;
"RTN","VPRDJ0",126,0)
MED ; -- Pharmacy
"RTN","VPRDJ0",127,0)
 N ORDIALOG I $G(VPRID),$D(^OR(100,+VPRID)) D PS1^VPRDJ05(VPRID) Q       ;get 1 order
"RTN","VPRDJ0",128,0)
 N TYPE,ORDG,ORVP,ORLIST,VPRN,ORLIST,X3,X4,DAD,ID
"RTN","VPRDJ0",129,0)
 S TYPE=$G(FILTER("vaType")) S:$L(TYPE) TYPE=$S(TYPE="N":"NV",TYPE="V":"IV",1:TYPE)_" "
"RTN","VPRDJ0",130,0)
 S ORDG=+$O(^ORD(100.98,"B",TYPE_"RX",0)),ORVP=DFN_";DPT("
"RTN","VPRDJ0",131,0)
 D EN^ORQ1(ORVP,ORDG,6,,VPRSTART,VPRSTOP)
"RTN","VPRDJ0",132,0)
 K ^TMP("VPROR",$J) S VPRN=0
"RTN","VPRDJ0",133,0)
 F  S VPRN=$O(^TMP("ORR",$J,ORLIST,VPRN)) Q:VPRN<1  S ID=$G(^(VPRN)) D  Q:VPRI'<VPRMAX
"RTN","VPRDJ0",134,0)
 . Q:$D(^TMP("VPROR",$J,+ID))  Q:$P(ID,";",2)>1  S ID=+ID
"RTN","VPRDJ0",135,0)
 . S X3=$G(^OR(100,ID,3)),X4=$G(^(4))
"RTN","VPRDJ0",136,0)
 . Q:$P(X3,U,3)=13  I X4["P",$P(X3,U,3)=1!($P(X3,U,3)=12) Q  ;cancelled
"RTN","VPRDJ0",137,0)
 . S DAD=$P(X3,U,9) I DAD Q:$D(^TMP("VPROR",$J,DAD))  S ID=DAD
"RTN","VPRDJ0",138,0)
 . D PS1^VPRDJ05(ID) S ^TMP("VPROR",$J,ID)=""
"RTN","VPRDJ0",139,0)
 K ^TMP("VPROR",$J),^TMP("ORR",$J),^TMP("ORGOTIT",$J),^TMP($J,"PSOI")
"RTN","VPRDJ0",140,0)
 Q
"RTN","VPRDJ0",141,0)
 ;
"RTN","VPRDJ0",142,0)
PTF ; -- Patient Treatment File
"RTN","VPRDJ0",143,0)
 N VPRIDT,ID,P,TYPE
"RTN","VPRDJ0",144,0)
 I $G(VPRID),VPRID'=+VPRID D PTFA^VPRDJ04A(VPRID) Q
"RTN","VPRDJ0",145,0)
 I $G(VPRID) D  Q:'$D(^TMP("VPRPX",$J))  ;update via DGPM = ien only
"RTN","VPRDJ0",146,0)
 . N X,Y,I S VPRIDT=9999999              ;so build ^TMP nodes
"RTN","VPRDJ0",147,0)
 . D RPC^DGPTFAPI(.Y,VPRID)
"RTN","VPRDJ0",148,0)
 . S X=$P($G(Y(1)),U,3) I $L(X) S ^TMP("VPRPX",$J,VPRIDT,VPRID_";70;DXLS")=X_U
"RTN","VPRDJ0",149,0)
 . F I=1:1:9 S X=$P($G(Y(2)),U,I) I $L(X) S ^TMP("VPRPX",$J,VPRIDT,VPRID_";70;D SD"_I)=X_U
"RTN","VPRDJ0",150,0)
 D:'$G(VPRID) PTF^VPRDJ09 ;sort ^PXRMINDX into ^TMP("VPRPX",$J,IDT)
"RTN","VPRDJ0",151,0)
 S VPRIDT=0 F  S VPRIDT=$O(^TMP("VPRPX",$J,VPRIDT)) Q:VPRIDT<1  D  Q:VPRI'<VPRMAX
"RTN","VPRDJ0",152,0)
 . S ID="" F  S ID=$O(^TMP("VPRPX",$J,VPRIDT,ID)) Q:ID=""  D PTF1^VPRDJ04A Q:VPRI'<VPRMAX
"RTN","VPRDJ0",153,0)
 K ^TMP("VPRPX",$J)
"RTN","VPRDJ0",154,0)
 Q
"RTN","VPRDJ0",155,0)
 ;
"RTN","VPRDJ0",156,0)
FACTOR   D PX^VPRDJ09(9000010.23) Q   ; -- PCE Health Factors
"RTN","VPRDJ0",157,0)
IMMUNIZA D PX^VPRDJ09(9000010.11) Q   ; -- PCE Immunizations
"RTN","VPRDJ0",158,0)
EXAM     D PX^VPRDJ09(9000010.13) Q   ; -- PCE Exams
"RTN","VPRDJ0",159,0)
CPT      D PX^VPRDJ09(9000010.18) Q   ; -- PCE CPT
"RTN","VPRDJ0",160,0)
EDUCATIO D PX^VPRDJ09(9000010.16) Q   ; -- PCE Patient Education
"RTN","VPRDJ0",161,0)
POV      D PX^VPRDJ09(9000010.07) Q   ; -- PCE Purpose of Visit (POV)
"RTN","VPRDJ0",162,0)
SKIN     D PX^VPRDJ09(9000010.12) Q   ; -- PCE Skin Tests
"RTN","VPRDJ0",163,0)
 ;
"RTN","VPRDJ0",164,0)
IMAGE ; -- Radiology/Nuclear Medicine
"RTN","VPRDJ0",165,0)
 D EN1^RAO7PC1(DFN,VPRSTART,VPRSTOP,VPRMAX_"P")
"RTN","VPRDJ0",166,0)
 I $G(VPRID) D RA1^VPRDJ07(VPRID) G IMQ
"RTN","VPRDJ0",167,0)
 N ID S ID=""
"RTN","VPRDJ0",168,0)
 F  S ID=$O(^TMP($J,"RAE1",DFN,ID)) Q:ID=""  D RA1^VPRDJ07(ID)  Q:VPRI'<+VPRMAX
"RTN","VPRDJ0",169,0)
IMQ ; end
"RTN","VPRDJ0",170,0)
 K ^TMP($J,"RAE1")
"RTN","VPRDJ0",171,0)
 Q
"RTN","VPRDJ0",172,0)
 ;
"RTN","VPRDJ0",173,0)
APPOINTM ; -- Scheduling/Appointment Mgt
"RTN","VPRDJ0",174,0)
 N VPRX,VPRNUM,VPRDT,X,VPRA,ID
"RTN","VPRDJ0",175,0)
 S VPRX(1)=VPRSTART_";"_VPRSTOP,VPRX(4)=DFN,ID=$G(VPRID)
"RTN","VPRDJ0",176,0)
 S VPRX("FLDS")="1;2;3;6;9;10;11;13",VPRX("SORT")="P"
"RTN","VPRDJ0",177,0)
 I $L(ID) G:$E(ID)="H" DGS^VPRDJ04 D  Q
"RTN","VPRDJ0",178,0)
 . S VPRDT=$P(ID,";",2),VPRX(1)=$P(ID,";",2)_";"_$P(ID,";",2)
"RTN","VPRDJ0",179,0)
 . S VPRX(2)=$P(ID,";",3)
"RTN","VPRDJ0",180,0)
 . S VPRNUM=$$SDAPI^SDAMA301(.VPRX)
"RTN","VPRDJ0",181,0)
 . D:VPRNUM>0 SDAM1^VPRDJ04
"RTN","VPRDJ0",182,0)
 . K ^TMP($J,"SDAMA301",DFN)
"RTN","VPRDJ0",183,0)
 ; appointments
"RTN","VPRDJ0",184,0)
 S VPRX(3)="R;I;NS;NSR;NT" ;no cancelled appt's
"RTN","VPRDJ0",185,0)
 S VPRNUM=$$SDAPI^SDAMA301(.VPRX),VPRDT=0
"RTN","VPRDJ0",186,0)
 F  S VPRDT=$O(^TMP($J,"SDAMA301",DFN,VPRDT)) Q:VPRDT<1  D  Q:VPRI'<VPRMAX
"RTN","VPRDJ0",187,0)
 . S X=$P($G(^TMP($J,"SDAMA301",DFN,VPRDT)),U,3)
"RTN","VPRDJ0",188,0)
 . ;I VPRDT<DT,$P(X,";")'["NS" Q   ;no prior kept appt's
"RTN","VPRDJ0",189,0)
 . D SDAM1^VPRDJ04
"RTN","VPRDJ0",190,0)
 K ^TMP($J,"SDAMA301",DFN)
"RTN","VPRDJ0",191,0)
 Q
"RTN","VPRDJ0",192,0)
 ;
"RTN","VPRDJ0",193,0)
SURGERY ; -- Surgery
"RTN","VPRDJ0",194,0)
 I $G(VPRID) D SR1^VPRDJ07(VPRID) Q
"RTN","VPRDJ0",195,0)
 Q:'$L($T(LIST^SROESTV))
"RTN","VPRDJ0",196,0)
 N SHOWADD S SHOWADD=1 ;to omit leading '+' with note titles
"RTN","VPRDJ0",197,0)
 N VPRN,VPRY,ID D LIST^SROESTV(.VPRY,DFN,VPRSTART,VPRSTOP,VPRMAX,1)
"RTN","VPRDJ0",198,0)
 S VPRN=0 F  S VPRN=$O(@VPRY@(VPRN)) Q:VPRN<1  D
"RTN","VPRDJ0",199,0)
 . S ID=+$G(@VPRY@(VPRN)) D:ID SR1^VPRDJ07(ID)
"RTN","VPRDJ0",200,0)
 K @VPRY
"RTN","VPRDJ0",201,0)
 Q
"RTN","VPRDJ0",202,0)
 ;
"RTN","VPRDJ0",203,0)
DOCUMENT ; -- Text Integration Utilities
"RTN","VPRDJ0",204,0)
 N VPRC,CLS,VPRS,CTXT,VPRY,VPRN,VPRX,ID
"RTN","VPRDJ0",205,0)
 I $L($G(VPRID)) D TIU1^VPRDJ08(VPRID) Q
"RTN","VPRDJ0",206,0)
 N CLASS,SUBCLASS,STATUS
"RTN","VPRDJ0",207,0)
 D SETUP^VPRDJ08 ;define search criteria
"RTN","VPRDJ0",208,0)
 F VPRC=1:1:$L(CLASS,U) S CLS=$P(CLASS,U,VPRC) D  Q:VPRI'<VPRMAX
"RTN","VPRDJ0",209,0)
 . I CLS="CP" D CP^VPRDJ08A(DFN,VPRSTART,VPRSTOP,VPRMAX) Q
"RTN","VPRDJ0",210,0)
 . I CLS="RA" D RA^VPRDJ08A(DFN,VPRSTART,VPRSTOP,VPRMAX) Q
"RTN","VPRDJ0",211,0)
 . I CLS="LR" D LR^VPRDJ08A(DFN,VPRSTART,VPRSTOP,VPRMAX) Q
"RTN","VPRDJ0",212,0)
 . ; TIU document classes, by sig status
"RTN","VPRDJ0",213,0)
 . F VPRS=1:1:$L(STATUS,U) S CTXT=$P(STATUS,U,VPRS) D  Q:VPRI'<VPRMAX
"RTN","VPRDJ0",214,0)
 .. D CONTEXT^TIUSRVLO(.VPRY,CLS,CTXT,DFN,VPRSTART,VPRSTOP,,VPRMAX,,1)
"RTN","VPRDJ0",215,0)
 .. S VPRN=0 F  S VPRN=$O(@VPRY@(VPRN)) Q:VPRN<1  D  Q:VPRI'<VPRMAX
"RTN","VPRDJ0",216,0)
 ... S VPRX=$G(@VPRY@(VPRN)) Q:'$$MATCH^VPRDJ08(VPRX,CTXT)
"RTN","VPRDJ0",217,0)
 ... Q:$D(^TMP("VPRD",$J,+VPRX))  ;already included
"RTN","VPRDJ0",218,0)
 ... D EN1^VPRDJ08(VPRX,CLS)
"RTN","VPRDJ0",219,0)
 .. K @VPRY
"RTN","VPRDJ0",220,0)
 Q
"RTN","VPRDJ0",221,0)
 ;
"RTN","VPRDJ0",222,0)
VISIT ; -- Visits
"RTN","VPRDJ0",223,0)
 I $L($G(VPRID)) D VSIT1^VPRDJ04(VPRID) Q
"RTN","VPRDJ0",224,0)
 N VPRDT,VPRLOC,END,ID
"RTN","VPRDJ0",225,0)
 N VPRADMIT S VPRADMIT=+$G(^DPT(DFN,.105)) ;current admission
"RTN","VPRDJ0",226,0)
 S END=VPRSTOP I VPRSTOP,VPRSTOP'["." S END=VPRSTOP_".24" ;assume end of day
"RTN","VPRDJ0",227,0)
 S VPRDT=END F  S VPRDT=$O(^AUPNVSIT("AET",DFN,VPRDT),-1)  Q:VPRDT<VPRSTART  D  Q:VPRI'<VPRMAX
"RTN","VPRDJ0",228,0)
 . S VPRLOC=0 F  S VPRLOC=$O(^AUPNVSIT("AET",DFN,VPRDT,VPRLOC)) Q:VPRLOC<1  D
"RTN","VPRDJ0",229,0)
 .. S ID=0 F  S ID=$O(^AUPNVSIT("AET",DFN,VPRDT,VPRLOC,"P",ID)) Q:ID<1  D VSIT1^VPRDJ04(ID)
"RTN","VPRDJ0",230,0)
 ; kill VPRADMIT in VSIT1 if adm is included, but add unless filtered
"RTN","VPRDJ0",231,0)
 I $G(VPRADMIT),VPRMAX'<9999,VPRSTART'>1410102 D VSIT1^VPRDJ04("H"_VPRADMIT)
"RTN","VPRDJ0",232,0)
 Q
"RTN","VPRDJ0",233,0)
 ;
"RTN","VPRDJ0",234,0)
VPR ; -- VPR Patient Objects
"RTN","VPRDJ0",235,0)
 D VPR^VPRDJ02($G(TYPE))
"RTN","VPRDJ0",236,0)
 Q
"RTN","VPRDJ0",237,0)
 ;
"RTN","VPRDJ0",238,0)
MH ; -- Mental Health
"RTN","VPRDJ0",239,0)
 I $L($T(MH^VPRDJ09M)) D MH^VPRDJ09M
"RTN","VPRDJ0",240,0)
 Q
"RTN","VPRDJ00")
0^21^B58623073^n/a
"RTN","VPRDJ00",1,0)
VPRDJ00 ;SLC/MKB -- Patient demographics ;8/11/11  15:29
"RTN","VPRDJ00",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 317
"RTN","VPRDJ00",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ00",4,0)
 ;
"RTN","VPRDJ00",5,0)
 ; External References          DBIA#
"RTN","VPRDJ00",6,0)
 ; -------------------          -----
"RTN","VPRDJ00",7,0)
 ; ^AUPNVSIT                     2028
"RTN","VPRDJ00",8,0)
 ; ^DPT                         10035
"RTN","VPRDJ00",9,0)
 ; DGCV                          4156
"RTN","VPRDJ00",10,0)
 ; DGMSTAPI                      2716
"RTN","VPRDJ00",11,0)
 ; DGNTAPI                       3457
"RTN","VPRDJ00",12,0)
 ; DGPFAPI                       3860
"RTN","VPRDJ00",13,0)
 ; DGRPDB                        4807
"RTN","VPRDJ00",14,0)
 ; DIQ                           2056
"RTN","VPRDJ00",15,0)
 ; MPIF001                       2701
"RTN","VPRDJ00",16,0)
 ; SDUTL3                        1252
"RTN","VPRDJ00",17,0)
 ; VADPT                        10061
"RTN","VPRDJ00",18,0)
 ; VAFCTFU1                      2990
"RTN","VPRDJ00",19,0)
 ; VASITE                       10112
"RTN","VPRDJ00",20,0)
 ; XUAF4                         2171
"RTN","VPRDJ00",21,0)
 ;
"RTN","VPRDJ00",22,0)
 ; All tags expect DFN, VPRID, [VPRSTART, VPRSTOP, VPRMAX, VPRTEXT]
"RTN","VPRDJ00",23,0)
 ;
"RTN","VPRDJ00",24,0)
DPT1 ; -- Demographics [VPRSTART,VPRSTOP,VPRMAX,VPRID not currently used here]
"RTN","VPRDJ00",25,0)
 N PAT,SYS S SYS=$$SITE^VASITE
"RTN","VPRDJ00",26,0)
 D DEM,SVC,PRF,ATC,SUPP,ALIAS,FAC,PC
"RTN","VPRDJ00",27,0)
 I $D(PAT)>9 D ADD^VPRDJ("PAT")
"RTN","VPRDJ00",28,0)
 Q
"RTN","VPRDJ00",29,0)
 ;
"RTN","VPRDJ00",30,0)
DEM ;-demographic data
"RTN","VPRDJ00",31,0)
 N VADM,VA,VAERR,X
"RTN","VPRDJ00",32,0)
 S X=+$$GETICN^MPIF001(DFN) S:X>1 PAT("icn")=X
"RTN","VPRDJ00",33,0)
 D DEM^VADPT S X=VADM(1),PAT("fullName")=X
"RTN","VPRDJ00",34,0)
 S PAT("familyName")=$P(X,","),PAT("givenNames")=$P(X,",",2,99)
"RTN","VPRDJ00",35,0)
 S PAT("ssn")=$P(VADM(2),U),PAT("localId")=DFN
"RTN","VPRDJ00",36,0)
 S PAT("uid")=$$SETUID^VPRUTILS("patient",DFN,DFN)
"RTN","VPRDJ00",37,0)
 S:$D(VA("BID")) PAT("briefId")=$E(X)_VA("BID")
"RTN","VPRDJ00",38,0)
 S X=+$P($P(VADM(3),U),"."),PAT("dateOfBirth")=$$JSONDT^VPRUTILS(X)
"RTN","VPRDJ00",39,0)
 S X=$P(VADM(5),U),PAT("genderCode")="urn:va:pat-gender:"_X,PAT("genderName")=$$NAME(X,"gender")
"RTN","VPRDJ00",40,0)
 S X=+$P($P(VADM(6),U),".") S:X PAT("died")=$$JSONDT^VPRUTILS(X)
"RTN","VPRDJ00",41,0)
 S X=$$GET1^DIQ(38.1,DFN_",",2,"I") S:$L(X) PAT("sensitive")=$$BOOL(X)
"RTN","VPRDJ00",42,0)
 S X=+VADM(9) S:X PAT("religionCode")="urn:va:pat-religion:"_X,PAT("religionName")=$$NAME(X,"religion")
"RTN","VPRDJ00",43,0)
 S X=$P(VADM(10),U,2) I $L(X) D  ;PAT("maritalStatus")=$E(X)
"RTN","VPRDJ00",44,0)
 . S X=$E(X),X=$S(X="S":"L",X="N":"S",1:X)
"RTN","VPRDJ00",45,0)
 . S PAT("maritalStatuses",1,"code")="urn:va:pat-maritalStatus:"_X
"RTN","VPRDJ00",46,0)
 . S PAT("maritalStatuses",1,"name")=$$NAME(X,"maritalStatus")
"RTN","VPRDJ00",47,0)
 I VADM(11) D
"RTN","VPRDJ00",48,0)
 . N I S I=0
"RTN","VPRDJ00",49,0)
 . F  S I=$O(VADM(11,I)) Q:I<1  S X=+VADM(11,I),PAT("ethnicities",X,"ethnicity")=$$GET1^DIQ(2.06,X_","_DFN_",",".01:3")
"RTN","VPRDJ00",50,0)
 I VADM(12) D
"RTN","VPRDJ00",51,0)
 . N I S I=0
"RTN","VPRDJ00",52,0)
 . F  S I=$O(VADM(12,I)) Q:I<1  S X=+VADM(12,I),PAT("races",X,"race")=$$GET1^DIQ(2.02,X_","_DFN_",",".01:3")
"RTN","VPRDJ00",53,0)
 Q
"RTN","VPRDJ00",54,0)
SVC ;-service data
"RTN","VPRDJ00",55,0)
 N VAEL,VASV,VAERR,X,Y,I,AO,IR,PGF,HNC,MST,CV
"RTN","VPRDJ00",56,0)
 D 7^VADPT
"RTN","VPRDJ00",57,0)
 ; PAT("veteran")=VAEL(4)
"RTN","VPRDJ00",58,0)
 S PAT("veteran","serviceConnected")=$$BOOL(+VAEL(3))
"RTN","VPRDJ00",59,0)
 S:VAEL(3) PAT("veteran","serviceConnectionPercent")=+$P(VAEL(3),U,2)
"RTN","VPRDJ00",60,0)
 S X=+$G(^DPT(DFN,"LR")) S:X PAT("veteran","lrdfn")=X
"RTN","VPRDJ00",61,0)
 ;
"RTN","VPRDJ00",62,0)
 ; exposures
"RTN","VPRDJ00",63,0)
 S AO=VASV(2),IR=VASV(3)
"RTN","VPRDJ00",64,0)
 S PGF=VASV(11)!VASV(12)!VASV(13) ;OIF/OEF
"RTN","VPRDJ00",65,0)
 S X=$$GETCUR^DGNTAPI(DFN,"HNC"),X=+($G(HNC("STAT")))
"RTN","VPRDJ00",66,0)
 S HNC=$S(X=4:1,X=5:1,X=1:0,X=6:0,1:"")
"RTN","VPRDJ00",67,0)
 S X=$P($$GETSTAT^DGMSTAPI(DFN),U,2),MST=$S(X="Y":1,X="N":0,1:"")
"RTN","VPRDJ00",68,0)
 S X=$$CVEDT^DGCV(DFN),CV=$S(+X<0:"",+X=0:0,$P(X,U,3):1,1:0)
"RTN","VPRDJ00",69,0)
 S X=AO_U_IR_U_PGF_U_HNC_U_MST_U_CV
"RTN","VPRDJ00",70,0)
 F P=1:1:6 S I=$P(X,U,P),$P(X,U,P)=$S(I:"Yes",I=0:"No",1:"Unknown")
"RTN","VPRDJ00",71,0)
 S NM="agent-orange^ionizing-radiation^sw-asia^head-neck-cancer^mst^combat-vet"
"RTN","VPRDJ00",72,0)
 F P=1:1:6 S PAT("exposures",P,"uid")="urn:va:"_$P(NM,U,P)_":"_$E($P(X,U,P)),PAT("exposures",P,"name")=$P(X,U,P)
"RTN","VPRDJ00",73,0)
 ;
"RTN","VPRDJ00",74,0)
 ; rated disabilities [DGRPDB]
"RTN","VPRDJ00",75,0)
 N VPRDIS,DIS,NM,DX
"RTN","VPRDJ00",76,0)
 D RDIS^DGRPDB(DFN,.VPRDIS)
"RTN","VPRDJ00",77,0)
 S I=0 F  S I=$O(VPRDIS(I)) Q:I<1  D
"RTN","VPRDJ00",78,0)
 . S DIS=VPRDIS(I)
"RTN","VPRDJ00",79,0)
 . S NM=$$GET1^DIQ(31,+DIS_",",.01),DX=$$GET1^DIQ(31,+DIS_",",2)
"RTN","VPRDJ00",80,0)
 . S PAT("disability",+DX)=NM_U_$P(DIS,U,2,3) ;name^%^sc
"RTN","VPRDJ00",81,0)
 Q
"RTN","VPRDJ00",82,0)
PRF ;-patient record flags
"RTN","VPRDJ00",83,0)
 N VPRPF,I,NAME,TEXT
"RTN","VPRDJ00",84,0)
 Q:'$$GETACT^DGPFAPI(DFN,"VPRPF")
"RTN","VPRDJ00",85,0)
 S I=0 F  S I=$O(VPRPF(I)) Q:I<1  D
"RTN","VPRDJ00",86,0)
 . S NAME=$P(VPRPF(I,"FLAG"),U,2)
"RTN","VPRDJ00",87,0)
 . M TEXT=VPRPF(I,"NARR")
"RTN","VPRDJ00",88,0)
 . S PAT("flags",I,"name")=NAME
"RTN","VPRDJ00",89,0)
 . S PAT("flags",I,"text")=$$STRING^VPRD(.TEXT)
"RTN","VPRDJ00",90,0)
 Q
"RTN","VPRDJ00",91,0)
ATC ;-address & telecom
"RTN","VPRDJ00",92,0)
 N VAPA,I,X,P,NM
"RTN","VPRDJ00",93,0)
 S VAPA("P")="" D ADD^VADPT ;permanent address
"RTN","VPRDJ00",94,0)
 S:$L(VAPA(1)) PAT("addresses",1,"streetLine1")=VAPA(1)
"RTN","VPRDJ00",95,0)
 S X=VAPA(2) I $L(X),$L(VAPA(3)) S X=X_" "_VAPA(3)
"RTN","VPRDJ00",96,0)
 S:$L(X) PAT("addresses",1,"streetLine2")=X
"RTN","VPRDJ00",97,0)
 S:$L(VAPA(4)) PAT("addresses",1,"city")=VAPA(4)
"RTN","VPRDJ00",98,0)
 S X=$P(VAPA(5),U,2) S:$L(X) PAT("addresses",1,"stateProvince")=X
"RTN","VPRDJ00",99,0)
 S X=$P(VAPA(11),U,2) S:$L(X) PAT("addresses",1,"postalCode")=X
"RTN","VPRDJ00",100,0)
 ; 
"RTN","VPRDJ00",101,0)
 ; X=home^cell^work phones
"RTN","VPRDJ00",102,0)
 S X=$$FORMAT(VAPA(8))_U_$$FORMAT($$GET1^DIQ(2,DFN_",",.134))_U_$$FORMAT($$GET1^DIQ(2,DFN_",",.132))
"RTN","VPRDJ00",103,0)
 S NM="H^MC^WP" F P=1:1:3 I $L($P(X,U,P)) D
"RTN","VPRDJ00",104,0)
 . S I=$P(NM,U,P),PAT("telecoms",P,"usageCode")=I
"RTN","VPRDJ00",105,0)
 . S PAT("telecoms",P,"usageName")=$S(I="WP":"work place",I="MC":"mobile contact",1:"home address")
"RTN","VPRDJ00",106,0)
 . S PAT("telecoms",P,"telecom")=$P(X,U,P)
"RTN","VPRDJ00",107,0)
 Q
"RTN","VPRDJ00",108,0)
SUPP ;-support contacts
"RTN","VPRDJ00",109,0)
 N VAOA,A,I,X,TYPE,S
"RTN","VPRDJ00",110,0)
 S S=0 F A="",1 K VAOA D
"RTN","VPRDJ00",111,0)
 . S:A VAOA("A")=A D OAD^VADPT Q:'$L($G(VAOA(9)))
"RTN","VPRDJ00",112,0)
 . S S=S+1,TYPE=$S(A=1:"ECON^Emergency Contact",1:"NOK^Next of Kin")
"RTN","VPRDJ00",113,0)
 . S PAT("supports",S,"contactTypeCode")="urn:va:pat-contact:"_$P(TYPE,U)
"RTN","VPRDJ00",114,0)
 . S PAT("supports",S,"contactTypeName")=$P(TYPE,U,2)
"RTN","VPRDJ00",115,0)
 . S:$L(VAOA(9)) PAT("supports",S,"name")=VAOA(9)
"RTN","VPRDJ00",116,0)
 . S:$L(VAOA(10)) PAT("supports",S,"relationship")=VAOA(10)
"RTN","VPRDJ00",117,0)
 . S:$L(VAOA(1)) PAT("supports",S,"addresses",1,"streetLine1")=VAOA(1)
"RTN","VPRDJ00",118,0)
 . S X=VAOA(2) I $L(X),$L(VAOA(3)) S X=X_" "_VAOA(3)
"RTN","VPRDJ00",119,0)
 . S:$L(X) PAT("supports",S,"addresses",1,"streetLine2")=X
"RTN","VPRDJ00",120,0)
 . S:$L(VAOA(4)) PAT("supports",S,"addresses",1,"city")=VAOA(4)
"RTN","VPRDJ00",121,0)
 . S X=$P(VAOA(5),U,2) S:$L(X) PAT("supports",S,"addresses",1,"stateProvince")=X
"RTN","VPRDJ00",122,0)
 . S X=$P(VAOA(11),U,2) S:$L(X) PAT("supports",S,"addresses",1,"postalCode")=X
"RTN","VPRDJ00",123,0)
 . S I=$S(A=1:.33011,1:.21011),X=$$FORMAT(VAOA(8))_U_U_$$FORMAT($$GET1^DIQ(2,DFN_",",I))
"RTN","VPRDJ00",124,0)
 . ; X=home^cell^work phones
"RTN","VPRDJ00",125,0)
 . S NM="H^MC^WP" F P=1:1:3 I $L($P(X,U,P)) D
"RTN","VPRDJ00",126,0)
 .. S I=$P(NM,U,P),PAT("supports",S,"telecomList",P,"usageCode")=I
"RTN","VPRDJ00",127,0)
 .. S PAT("supports",S,"telecomList",P,"usageName")=$S(I="WP":"work place",I="MC":"mobile contact",1:"home address")
"RTN","VPRDJ00",128,0)
 .. S PAT("supports",S,"telecomList",P,"telecom")=$P(X,U,P)
"RTN","VPRDJ00",129,0)
 Q
"RTN","VPRDJ00",130,0)
ALIAS ;-other names used
"RTN","VPRDJ00",131,0)
 N I,X
"RTN","VPRDJ00",132,0)
 S I=0 F  S I=$O(^DPT(DFN,.01,I)) Q:I<1  S X=$G(^(I,0)) D
"RTN","VPRDJ00",133,0)
 . S PAT("aliases",I,"fullName")=$P(X,U)
"RTN","VPRDJ00",134,0)
 Q
"RTN","VPRDJ00",135,0)
FAC ;-treating facilities [see FACLIST^ORWCIRN]
"RTN","VPRDJ00",136,0)
 N IFN S DFN=+$G(DFN) Q:DFN<1
"RTN","VPRDJ00",137,0)
 N VPRY,HOME,LAST,I,X,IEN,VASITE
"RTN","VPRDJ00",138,0)
 S X=$$ALL^VASITE ;VASITE(stn#)=stn# for all local
"RTN","VPRDJ00",139,0)
 I $L($T(TFL^VAFCTFU1)) D TFL^VAFCTFU1(.VPRY,DFN)
"RTN","VPRDJ00",140,0)
 S HOME=+$P($G(^DPT(DFN,"MPI")),U,3) ;home facility
"RTN","VPRDJ00",141,0)
 I $P($G(VPRY(1)),U)<0 D  ;not setup
"RTN","VPRDJ00",142,0)
 . S X=$O(^AUPNVSIT("AA",DFN,0)),LAST=$S(X:9999999-$P(X,"."),1:"")
"RTN","VPRDJ00",143,0)
 . S X=$$SITE^VASITE
"RTN","VPRDJ00",144,0)
 . S VPRY(1)=$P(X,U,3)_U_$P(X,U,2)_U_LAST_U_$$GET1^DIQ(4,+X_",",60)
"RTN","VPRDJ00",145,0)
 S I=0 F  S I=$O(VPRY(I)) Q:I<1  D
"RTN","VPRDJ00",146,0)
 . S X=VPRY(I) Q:$P(X,U)=""  ;unknown
"RTN","VPRDJ00",147,0)
 . S IEN=+$$IEN^XUAF4($P(X,U))
"RTN","VPRDJ00",148,0)
 . I +X=776!(+X=200) S $P(X,U,2)="DEPT. OF DEFENSE"
"RTN","VPRDJ00",149,0)
 . S PAT("facilities",I,"code")=$P(X,U)    ;stn#
"RTN","VPRDJ00",150,0)
 . S PAT("facilities",I,"name")=$P(X,U,2)  ;name
"RTN","VPRDJ00",151,0)
 . S:IEN=HOME PAT("facilities",I,"homeSite")="true"
"RTN","VPRDJ00",152,0)
 . S:$L($P(X,U,3)) PAT("facilities",I,"latestDate")=$$JSONDT^VPRUTILS($P($P(X,U,3),"."))
"RTN","VPRDJ00",153,0)
 . I $D(VASITE(+X)) D
"RTN","VPRDJ00",154,0)
 .. S PAT("facilities",I,"localPatientId")=DFN
"RTN","VPRDJ00",155,0)
 .. S PAT("facilities",I,"systemId")=VPRSYS
"RTN","VPRDJ00",156,0)
 Q
"RTN","VPRDJ00",157,0)
PC ;-primary care assignments
"RTN","VPRDJ00",158,0)
 N X S X=$$OUTPTPR^SDUTL3(DFN) I X D
"RTN","VPRDJ00",159,0)
 . S PAT("pcProviderUid")=$$SETUID^VPRUTILS("user",,+X)
"RTN","VPRDJ00",160,0)
 . S PAT("pcProviderName")=$P(X,U,2)
"RTN","VPRDJ00",161,0)
 S X=$$OUTPTTM^SDUTL3(DFN) I X D
"RTN","VPRDJ00",162,0)
 . S PAT("pcTeamUid")=$$SETUID^VPRUTILS("team",,+X)
"RTN","VPRDJ00",163,0)
 . S PAT("pcTeamName")=$$GET1^DIQ(404.51,+X_",",.01)
"RTN","VPRDJ00",164,0)
 Q
"RTN","VPRDJ00",165,0)
 ;
"RTN","VPRDJ00",166,0)
FORMAT(X) ; -- enforce (xxx)xxx-xxxx phone format
"RTN","VPRDJ00",167,0)
 S X=$G(X) I X?1"("3N1")"3N1"-"4N.E Q X
"RTN","VPRDJ00",168,0)
 N P,N,I,Y S P=""
"RTN","VPRDJ00",169,0)
 F I=1:1:$L(X) S N=$E(X,I) I N=+N S P=P_N
"RTN","VPRDJ00",170,0)
 S:$L(P)<10 P=$E("0000000000",1,10-$L(P))_P
"RTN","VPRDJ00",171,0)
 S Y=$S(P:"("_$E(P,1,3)_")"_$E(P,4,6)_"-"_$E(P,7,10),1:"")
"RTN","VPRDJ00",172,0)
 Q Y
"RTN","VPRDJ00",173,0)
 ;
"RTN","VPRDJ00",174,0)
NAME(CODE,SET) ; -- Return expanded name for code set
"RTN","VPRDJ00",175,0)
 N Y S Y="",CODE=$G(CODE)
"RTN","VPRDJ00",176,0)
 I $G(SET)="gender" S Y=$S(CODE="F":"Female",CODE="M":"Male",1:"Unknown")
"RTN","VPRDJ00",177,0)
 I $G(SET)="maritalStatus" S Y=$S(CODE="D":"Divorced",CODE="M":"Married",CODE="W":"Widowed",CODE="L":"Legally Separated",CODE="S":"Never Married",1:"Unknown")
"RTN","VPRDJ00",178,0)
 I $G(SET)="religion" S Y=$$GET1^DIQ(13,CODE_",",.01)
"RTN","VPRDJ00",179,0)
 Q Y
"RTN","VPRDJ00",180,0)
 ;
"RTN","VPRDJ00",181,0)
BOOL(X) ;
"RTN","VPRDJ00",182,0)
 Q $S(X>0:"true",1:"false")
"RTN","VPRDJ01")
0^4^B39474581^n/a
"RTN","VPRDJ01",1,0)
VPRDJ01 ;SLC/MKB -- Orders ;6/25/12  16:11
"RTN","VPRDJ01",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 317
"RTN","VPRDJ01",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ01",4,0)
 ;
"RTN","VPRDJ01",5,0)
 ; External References          DBIA#
"RTN","VPRDJ01",6,0)
 ; -------------------          -----
"RTN","VPRDJ01",7,0)
 ; ^DPT                         10035
"RTN","VPRDJ01",8,0)
 ; ^OR(100                       5771
"RTN","VPRDJ01",9,0)
 ; ^ORA(102.4                    5769
"RTN","VPRDJ01",10,0)
 ; ^ORD(100.98                    873
"RTN","VPRDJ01",11,0)
 ; ^PXRMINDX                     4290
"RTN","VPRDJ01",12,0)
 ; ^RADPT                        2480
"RTN","VPRDJ01",13,0)
 ; ^SC                          10040
"RTN","VPRDJ01",14,0)
 ; ^VA(200                      10060
"RTN","VPRDJ01",15,0)
 ; DIC                           2051
"RTN","VPRDJ01",16,0)
 ; DIQ                           2056
"RTN","VPRDJ01",17,0)
 ; GMRCGUIB                      2980
"RTN","VPRDJ01",18,0)
 ; LR7OU1                        2955
"RTN","VPRDJ01",19,0)
 ; ORQ1,^TMP("ORR"               3154
"RTN","VPRDJ01",20,0)
 ; ORQ12,^TMP("ORR"              5704
"RTN","VPRDJ01",21,0)
 ; ORX8                          2467
"RTN","VPRDJ01",22,0)
 ; PSS51P1                       4546
"RTN","VPRDJ01",23,0)
 ;
"RTN","VPRDJ01",24,0)
 ; All tags expect DFN, ID, [VPRSTART, VPRSTOP, VPRMAX, VPRTEXT]
"RTN","VPRDJ01",25,0)
 ;
"RTN","VPRDJ01",26,0)
OR1(ID) ; -- order ID >> ^TMP("ORR",$J,ORLIST,VPRN)
"RTN","VPRDJ01",27,0)
 N ORDER,CHILD,VPRC
"RTN","VPRDJ01",28,0)
 D ORX(ID,.ORDER)
"RTN","VPRDJ01",29,0)
 S VPRC=0 F  S VPRC=$O(^OR(100,ID,2,VPRC)) Q:VPRC<1  D
"RTN","VPRDJ01",30,0)
 . K CHILD D ORX(VPRC,.CHILD)
"RTN","VPRDJ01",31,0)
 . M ORDER("children",VPRC)=CHILD
"RTN","VPRDJ01",32,0)
 D ADD^VPRDJ("ORDER","order")
"RTN","VPRDJ01",33,0)
 Q
"RTN","VPRDJ01",34,0)
ORX(IFN,ORD) ; -- extract order IFN into ORD("attribute")
"RTN","VPRDJ01",35,0)
 N ORLIST,ORLST,X0,X8,LOC,X,I,DA
"RTN","VPRDJ01",36,0)
 S ORLST=$S(+$G(VPRN):VPRN-1,1:0) S:'$D(ORLIST) ORLIST=$H
"RTN","VPRDJ01",37,0)
 D GET^ORQ12(IFN,ORLIST,1)
"RTN","VPRDJ01",38,0)
 S X0=$G(^TMP("ORR",$J,ORLIST,ORLST))
"RTN","VPRDJ01",39,0)
 ;
"RTN","VPRDJ01",40,0)
 S ORD("localId")=IFN,ORD("uid")=$$SETUID^VPRUTILS("order",DFN,IFN)
"RTN","VPRDJ01",41,0)
 S X=$$OI^ORX8(+X0) I $L(X) D
"RTN","VPRDJ01",42,0)
 . N ARRAY,NAME
"RTN","VPRDJ01",43,0)
 . S ARRAY("Code")=1_U_"oi",ARRAY("Name")=2,ARRAY("PackageRef")=3
"RTN","VPRDJ01",44,0)
 . D SPLITVAL^VPRUTILS(X,.ARRAY) S ORD("name")=ARRAY("Name")
"RTN","VPRDJ01",45,0)
 . S NAME="" F  S NAME=$O(ARRAY(NAME)) Q:NAME=""  S ORD("oi"_NAME)=$G(ARRAY(NAME))
"RTN","VPRDJ01",46,0)
 S ORD("displayGroup")=$P(X0,U,2)
"RTN","VPRDJ01",47,0)
 S ORD("entered")=$$JSONDT^VPRUTILS($P(X0,U,3))
"RTN","VPRDJ01",48,0)
 S ORD("start")=$$TM($P(X0,U,4)),ORD("stop")=$$TM($P(X0,U,5))
"RTN","VPRDJ01",49,0)
 S ORD("statusCode")="urn:va:order-status:"_$P(X0,U,7)
"RTN","VPRDJ01",50,0)
 S ORD("statusName")=$P(X0,U,6)
"RTN","VPRDJ01",51,0)
 S ORD("statusVuid")="urn:va:vuid:"_$$STS^VPRDOR($P(X0,U,7))
"RTN","VPRDJ01",52,0)
 D SETTEXT^VPRUTILS($NA(^TMP("ORR",$J,ORLIST,ORLST,"TX")),$NA(^TMP("VPRTEXT",$J,IFN)))
"RTN","VPRDJ01",53,0)
 M ORD("content","\")=^TMP("VPRTEXT",$J,IFN)
"RTN","VPRDJ01",54,0)
 S X=$$GET1^DIQ(100,IFN_",",1,"I") I X D
"RTN","VPRDJ01",55,0)
 . S ORD("providerUid")=$$SETUID^VPRUTILS("user",,+X)
"RTN","VPRDJ01",56,0)
 . S ORD("providerName")=$P($G(^VA(200,+X,0)),U)
"RTN","VPRDJ01",57,0)
 S LOC=+$$GET1^DIQ(100,IFN_",",6,"I"),FAC=$$FAC^VPRD(LOC) I LOC D
"RTN","VPRDJ01",58,0)
 . S ORD("locationName")=$P($G(^SC(LOC,0)),U)
"RTN","VPRDJ01",59,0)
 . S ORD("locationUid")=$$SETUID^VPRUTILS("location",,LOC)
"RTN","VPRDJ01",60,0)
 D FACILITY^VPRUTILS(FAC,"ORD")
"RTN","VPRDJ01",61,0)
 S ORD("service")=$$GET1^DIQ(100,IFN_",","12:1")
"RTN","VPRDJ01",62,0)
 S X=$$GET1^DIQ(100,IFN_",",9,"I") S:X ORD("predecessor")=$$SETUID^VPRUTILS("order",DFN,+X)
"RTN","VPRDJ01",63,0)
 S X=$$GET1^DIQ(100,IFN_",",9.1,"I") S:X ORD("successor")=$$SETUID^VPRUTILS("order",DFN,+X)
"RTN","VPRDJ01",64,0)
 D RESULTS
"RTN","VPRDJ01",65,0)
 ; sign/verify
"RTN","VPRDJ01",66,0)
 S X8=$G(^OR(100,IFN,8,1,0)),I=0 I $P(X8,U,6) D       ;signed
"RTN","VPRDJ01",67,0)
 . N PROV S PROV=$P(X8,U,5) S:PROV<1 PROV=$P(X8,U,3)  ;if on chart,
"RTN","VPRDJ01",68,0)
 . D USER(.I,"S",PROV,$P(X8,U,6))                     ;   use provider
"RTN","VPRDJ01",69,0)
 I $P(X8,U,9)  D USER(.I,"N",$P(X8,U,8),$P(X8,U,9))   ;nurse
"RTN","VPRDJ01",70,0)
 I $P(X8,U,11) D USER(.I,"C",$P(X8,U,10),$P(X8,U,11)) ;clerk
"RTN","VPRDJ01",71,0)
 I $P(X8,U,19) D USER(.I,"R",$P(X8,U,18),$P(X8,U,19)) ;chart review
"RTN","VPRDJ01",72,0)
 Q
"RTN","VPRDJ01",73,0)
 ; acknowledgements
"RTN","VPRDJ01",74,0)
 S DA=0 F  S DA=$O(^ORA(102.4,"B",+IFN,DA)) Q:DA<1  D
"RTN","VPRDJ01",75,0)
 . S X0=$G(^ORA(102.4,DA,0)) Q:'$P(X0,U,3)  ;stub - not ack'd
"RTN","VPRDJ01",76,0)
 . S X=+$P(X0,U,2),X=$S(X:X_U_$P($G(^VA(200,X,0)),U),1:U)
"RTN","VPRDJ01",77,0)
 . S ORD("acknowledgement",DA)=X_U_$P(X0,U,3)
"RTN","VPRDJ01",78,0)
 Q
"RTN","VPRDJ01",79,0)
 ;
"RTN","VPRDJ01",80,0)
RESULTS ; -- add ORD("results",n,"uid") list
"RTN","VPRDJ01",81,0)
 N ORPK,ORPKG,ORDG
"RTN","VPRDJ01",82,0)
 S ORPK=$G(^OR(100,IFN,4)),ORPKG=ORD("service"),ORDG=ORD("displayGroup")
"RTN","VPRDJ01",83,0)
 I ORPKG="GMRC" D  Q
"RTN","VPRDJ01",84,0)
 . N VPRD,I,N,X D DOCLIST^GMRCGUIB(.VPRD,+ORPK)
"RTN","VPRDJ01",85,0)
 . S N=1,ORD("results",N,"uid")=$$SETUID^VPRUTILS("consult",DFN,+ORPK)
"RTN","VPRDJ01",86,0)
 . S I=0 F  S I=$O(VPRD(50,I)) Q:I<1  S X=$G(VPRD(50,I)) D
"RTN","VPRDJ01",87,0)
 .. Q:'$D(@(U_$P(X,";",2)_+X_")"))  ;text deleted
"RTN","VPRDJ01",88,0)
 .. S N=N+1,ORD("results",N,"uid")=$$SETUID^VPRUTILS("document",DFN,+X)
"RTN","VPRDJ01",89,0)
 . Q:ORDG'="PROC"
"RTN","VPRDJ01",90,0)
 . N VPRC D FIND^DIC(702,,"@","Q",+ORPK,,"ACON",,,"VPRC") ;CP
"RTN","VPRDJ01",91,0)
 . S I=0 F  S I=$O(VPRC("DILIST",2,I)) Q:I<1  D
"RTN","VPRDJ01",92,0)
 .. S X=+$G(VPRC("DILIST",2,I))_";MDD(702,"
"RTN","VPRDJ01",93,0)
 .. S N=N+1,ORD("results",N,"uid")=$$SETUID^VPRUTILS("procedure",DFN,X)
"RTN","VPRDJ01",94,0)
 I ORPKG="LR" D  Q
"RTN","VPRDJ01",95,0)
 . Q:$L(ORPK,";")'>3  ;no results yet, or parent order
"RTN","VPRDJ01",96,0)
 . N SUB,IDT,CDT,ITM,VPRT,ID,T,N,LRDFN,IDX
"RTN","VPRDJ01",97,0)
 . S SUB=$P(ORPK,";",4),IDT=$P(ORPK,";",5),CDT=9999999-IDT
"RTN","VPRDJ01",98,0)
 . I SUB="CH" D  Q
"RTN","VPRDJ01",99,0)
 .. S ITM=+$G(ORD("oiPackageRef")) D EXPAND^LR7OU1(ITM,.VPRT)
"RTN","VPRDJ01",100,0)
 .. S (T,N)=0 F  S T=$O(VPRT(T)) Q:T<1  S ID=$O(^PXRMINDX(63,"PI",DFN,T,CDT,"")) I $L(ID) S N=N+1,ORD("results",N,"uid")=$$SETUID^VPRUTILS("lab",DFN,$P(ID,";",2,9))
"RTN","VPRDJ01",101,0)
 . I SUB="MI" D  Q
"RTN","VPRDJ01",102,0)
 .. S ITM="M;A;",N=0,LRDFN=$G(^DPT(DFN,"LR"))
"RTN","VPRDJ01",103,0)
 .. F  S ITM=$O(^PXRMINDX(63,"PI",DFN,ITM)) Q:$E(ITM,1,4)'="M;A;"  I $D(^(ITM,CDT)) D
"RTN","VPRDJ01",104,0)
 ... S IDX=LRDFN_";MI;"_IDT
"RTN","VPRDJ01",105,0)
 ... F  S IDX=$O(^PXRMINDX(63,"PI",DFN,ITM,CDT,IDX)) Q:IDX=""  S ID=$P(IDX,";",2,99),N=N+1,ORD("results",N,"uid")=$$SETUID^VPRUTILS("lab",DFN,ID)
"RTN","VPRDJ01",106,0)
 .. S N=N+1,ORD("results",N,"uid")=$$SETUID^VPRUTILS("document",DFN,SUB_";"_IDT)
"RTN","VPRDJ01",107,0)
 . ; SUB:"AP" [AU,CY,EM,SP]
"RTN","VPRDJ01",108,0)
 . S ORD("results",1,"uid")=$$SETUID^VPRUTILS("lab",DFN,SUB_";"_IDT)
"RTN","VPRDJ01",109,0)
 . S ORD("results",2,"uid")=$$SETUID^VPRUTILS("document",DFN,SUB_";"_IDT)
"RTN","VPRDJ01",110,0)
 I ORPKG["PS" D  Q
"RTN","VPRDJ01",111,0)
 . S:ORPK ORD("results",1,"uid")=$$SETUID^VPRUTILS("med",DFN,IFN)
"RTN","VPRDJ01",112,0)
 I ORPKG="RA" D  Q
"RTN","VPRDJ01",113,0)
 . N IDT,CN S IDT=+$O(^RADPT("AO",+ORPK,DFN,0)) Q:'IDT
"RTN","VPRDJ01",114,0)
 . S CN=0 F  S CN=$O(^RADPT("AO",+ORPK,DFN,IDT,CN)) Q:CN<1  S ORD("results",CN,"uid")=$$SETUID^VPRUTILS("image",DFN,IDT_"-"_CN)
"RTN","VPRDJ01",115,0)
 ; rest should be generic (OR) orders
"RTN","VPRDJ01",116,0)
 I ORDG="NTX" S ORD("results",1,"uid")=$$SETUID^VPRUTILS("treatment",DFN,IFN) Q
"RTN","VPRDJ01",117,0)
 I ORDG="V/M" Q  ;no link
"RTN","VPRDJ01",118,0)
 Q
"RTN","VPRDJ01",119,0)
 ;
"RTN","VPRDJ01",120,0)
NTX1(IFN) ; -- extract nursing treatment order IFN into NTX("attribute")
"RTN","VPRDJ01",121,0)
 N NTX,X
"RTN","VPRDJ01",122,0)
 D ORX(IFN,.NTX) ;get basic order info
"RTN","VPRDJ01",123,0)
 S NTX("orderUid")=NTX("uid")
"RTN","VPRDJ01",124,0)
 S NTX("uid")=$$SETUID^VPRUTILS("treatment",DFN,IFN)
"RTN","VPRDJ01",125,0)
 S X=$$VALUE^ORX8(IFN,"COMMENT") S:$L(X) NTX("instructions")=X
"RTN","VPRDJ01",126,0)
 S X=$$VALUE^ORX8(IFN,"SCHEDULE") I X D
"RTN","VPRDJ01",127,0)
 . D ZERO^PSS51P1(X,,,,"VPRS")
"RTN","VPRDJ01",128,0)
 . S NTX("scheduleName")=$G(^TMP($J,"VPRS",X,.01))
"RTN","VPRDJ01",129,0)
 . S NTX("adminTimes")=$G(^TMP($J,"VPRS",X,1))
"RTN","VPRDJ01",130,0)
 . K ^TMP($J,"VPRS")
"RTN","VPRDJ01",131,0)
 D ADD^VPRDJ("NTX","treatment")
"RTN","VPRDJ01",132,0)
 Q
"RTN","VPRDJ01",133,0)
 ;
"RTN","VPRDJ01",134,0)
USER(N,ROLE,IEN,DATE) ; -- add signature/verification data
"RTN","VPRDJ01",135,0)
 S N=+$G(N)+1
"RTN","VPRDJ01",136,0)
 S ORD("clinicians",N,"signedDateTime")=$$JSONDT^VPRUTILS(DATE)
"RTN","VPRDJ01",137,0)
 S ORD("clinicians",N,"role")=$G(ROLE)
"RTN","VPRDJ01",138,0)
 Q:+$G(IEN)<1
"RTN","VPRDJ01",139,0)
 S ORD("clinicians",N,"uid")=$$SETUID^VPRUTILS("user",,IEN)
"RTN","VPRDJ01",140,0)
 S ORD("clinicians",N,"name")=$P($G(^VA(200,IEN,0)),U)
"RTN","VPRDJ01",141,0)
 Q
"RTN","VPRDJ01",142,0)
 ;
"RTN","VPRDJ01",143,0)
TM(X) ; -- strip seconds off a FM time
"RTN","VPRDJ01",144,0)
 N D,T,Y S D=$P(X,"."),T=$P(X,".",2)
"RTN","VPRDJ01",145,0)
 S Y=D_$S(T:"."_$E(T,1,4),1:"")
"RTN","VPRDJ01",146,0)
 S Y=$$JSONDT^VPRUTILS(Y)
"RTN","VPRDJ01",147,0)
 Q Y
"RTN","VPRDJ02")
0^5^B43626306^n/a
"RTN","VPRDJ02",1,0)
VPRDJ02 ;SLC/MKB -- Problems,Allergies,Vitals ;6/25/12  16:11
"RTN","VPRDJ02",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 317
"RTN","VPRDJ02",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ02",4,0)
 ;
"RTN","VPRDJ02",5,0)
 ; External References          DBIA#
"RTN","VPRDJ02",6,0)
 ; -------------------          -----
"RTN","VPRDJ02",7,0)
 ; ^PXRMINDX                     4290
"RTN","VPRDJ02",8,0)
 ; ^SC                          10040
"RTN","VPRDJ02",9,0)
 ; DIC                           2051
"RTN","VPRDJ02",10,0)
 ; DIQ                           2056
"RTN","VPRDJ02",11,0)
 ; GMPLUTL2                      2741
"RTN","VPRDJ02",12,0)
 ; GMRADPT                      10099
"RTN","VPRDJ02",13,0)
 ; GMRAOR2                       2422
"RTN","VPRDJ02",14,0)
 ; GMRVUT0,^UTILITY($J           1446
"RTN","VPRDJ02",15,0)
 ; GMVGETQL                      5048
"RTN","VPRDJ02",16,0)
 ; GMVGETVT                      5047
"RTN","VPRDJ02",17,0)
 ; GMVUTL                        5046
"RTN","VPRDJ02",18,0)
 ; ICDCODE                       3990
"RTN","VPRDJ02",19,0)
 ; XLFSTR                       10104
"RTN","VPRDJ02",20,0)
 ; XUAF4                         2171
"RTN","VPRDJ02",21,0)
 ;
"RTN","VPRDJ02",22,0)
 ; All tags expect DFN, ID, [VPRSTART, VPRSTOP, VPRMAX, VPRTEXT]
"RTN","VPRDJ02",23,0)
 ;
"RTN","VPRDJ02",24,0)
GMPL1(ID) ; -- problem
"RTN","VPRDJ02",25,0)
 N VPRL,PROB,X,I,DATE,USER,FAC
"RTN","VPRDJ02",26,0)
 D DETAIL^GMPLUTL2(ID,.VPRL) Q:'$D(VPRL)  ;doesn't exist
"RTN","VPRDJ02",27,0)
 ;
"RTN","VPRDJ02",28,0)
 S PROB("uid")=$$SETUID^VPRUTILS("problem",DFN,ID),PROB("localId")=ID
"RTN","VPRDJ02",29,0)
 S PROB("problemText")=$G(VPRL("NARRATIVE"))
"RTN","VPRDJ02",30,0)
 S DATE=$P($G(VPRL("ENTERED")),U)
"RTN","VPRDJ02",31,0)
 S:$L(DATE) DATE=$$DATE^VPRDGMPL(DATE),PROB("entered")=$$JSONDT^VPRUTILS(DATE)
"RTN","VPRDJ02",32,0)
 S X=$G(VPRL("DIAGNOSIS")) I $L(X) D
"RTN","VPRDJ02",33,0)
 . N ICD9ZN,DIAG
"RTN","VPRDJ02",34,0)
 . I DATE'>0 S DATE=DT
"RTN","VPRDJ02",35,0)
 . S ICD9ZN=$$ICDDX^ICDCODE(X,DATE),DIAG=$S($P($G(ICD9ZN),U,4)'="":$P(ICD9ZN,U,4),1:X)
"RTN","VPRDJ02",36,0)
 . S PROB("icdCode")=$$SETNCS^VPRUTILS("icd",X),PROB("icdName")=DIAG
"RTN","VPRDJ02",37,0)
 S X=$G(VPRL("ONSET")) S:$L(X) X=$$DATE^VPRDGMPL(X),PROB("onset")=$$JSONDT^VPRUTILS(X)
"RTN","VPRDJ02",38,0)
 S X=$G(VPRL("MODIFIED")) S:$L(X) X=$$DATE^VPRDGMPL(X),PROB("updated")=$$JSONDT^VPRUTILS(X)
"RTN","VPRDJ02",39,0)
 S X=$G(VPRL("STATUS")) I $L(X) D
"RTN","VPRDJ02",40,0)
 . S PROB("statusName")=X,X=$E(X)
"RTN","VPRDJ02",41,0)
 . S X=$S(X="A":55561003,X="I":73425007,1:"")
"RTN","VPRDJ02",42,0)
 . S PROB("statusCode")=$$SETNCS^VPRUTILS("sct",X)
"RTN","VPRDJ02",43,0)
 S X=$G(VPRL("PRIORITY")) I X]"" D
"RTN","VPRDJ02",44,0)
 . S X=$$LOW^XLFSTR(X),PROB("acuityName")=X
"RTN","VPRDJ02",45,0)
 . S PROB("acuityCode")=$$SETVURN^VPRUTILS("prob-acuity",$E(X))
"RTN","VPRDJ02",46,0)
 S X=$$GET1^DIQ(9000011,ID_",",1.07,"I") S:X PROB("resolved")=$$JSONDT^VPRUTILS(X)
"RTN","VPRDJ02",47,0)
 S X=$$GET1^DIQ(9000011,ID_",",1.02,"I")
"RTN","VPRDJ02",48,0)
 S:X="P" PROB("unverified")="false",PROB("removed")="false"
"RTN","VPRDJ02",49,0)
 S:X="T" PROB("unverified")="true",PROB("removed")="false"
"RTN","VPRDJ02",50,0)
 S:X="H" PROB("unverified")="false",PROB("removed")="true"
"RTN","VPRDJ02",51,0)
 S X=$G(VPRL("SC")),X=$S(X="YES":"",X="NO":"false",1:"")
"RTN","VPRDJ02",52,0)
 S:$L(X) PROB("serviceConnected")=X
"RTN","VPRDJ02",53,0)
 S X=$G(VPRL("PROVIDER")) I $L(X) D
"RTN","VPRDJ02",54,0)
 . S PROB("providerName")=X,X=$$GET1^DIQ(9000011,ID_",",1.05,"I")
"RTN","VPRDJ02",55,0)
 . S PROB("providerUid")=$$SETUID^VPRUTILS("user",,+X)
"RTN","VPRDJ02",56,0)
 S X=$$GET1^DIQ(9000011,ID_",",1.06) S:$L(X) PROB("service")=X
"RTN","VPRDJ02",57,0)
 S X=$G(VPRL("CLINIC")) I $L(X) D
"RTN","VPRDJ02",58,0)
 . S PROB("locationName")=X
"RTN","VPRDJ02",59,0)
 . N LOC S LOC=+$$FIND1^DIC(44,,"QX",X)
"RTN","VPRDJ02",60,0)
 . S:LOC PROB("locationUid")=$$SETUID^VPRUTILS("location",,LOC)
"RTN","VPRDJ02",61,0)
 S X=+$$GET1^DIQ(9000011,ID_",",.06,"I")
"RTN","VPRDJ02",62,0)
 S:X FAC=$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U)
"RTN","VPRDJ02",63,0)
 I 'X S FAC=$$FAC^VPRD ;local stn#^name
"RTN","VPRDJ02",64,0)
 D FACILITY^VPRUTILS(FAC,"PROB")
"RTN","VPRDJ02",65,0)
 S I=0 F  S I=$O(VPRL("COMMENT",I)) Q:I<1  D
"RTN","VPRDJ02",66,0)
 . S X=$G(VPRL("COMMENT",I))
"RTN","VPRDJ02",67,0)
 . S USER=$$VA200^VPRDGMPL($P(X,U,2)),DATE=$$DATE^VPRDGMPL($P(X,U))
"RTN","VPRDJ02",68,0)
 . S PROB("comments",I,"enteredByCode")=$$SETUID^VPRUTILS("user",,+USER)
"RTN","VPRDJ02",69,0)
 . S PROB("comments",I,"enteredByName")=$P(X,U,2)
"RTN","VPRDJ02",70,0)
 . S PROB("comments",I,"entered")=$$JSONDT^VPRUTILS(DATE)
"RTN","VPRDJ02",71,0)
 . S PROB("comments",I,"comment")=$P(X,U,3)
"RTN","VPRDJ02",72,0)
 D ADD^VPRDJ("PROB","problem")
"RTN","VPRDJ02",73,0)
 Q
"RTN","VPRDJ02",74,0)
 ;
"RTN","VPRDJ02",75,0)
GMRA1(ID) ; -- allergy/reaction GMRAL(ID)
"RTN","VPRDJ02",76,0)
 N GMRA,VPRY,REAC,X,Y,I
"RTN","VPRDJ02",77,0)
 S GMRA=$G(GMRAL(ID)) D EN1^GMRAOR2(ID,"VPRY")
"RTN","VPRDJ02",78,0)
 ;
"RTN","VPRDJ02",79,0)
 S X=$P(VPRY,U,10) I $L(X) S X=$$DATE^VPRDGMRA(X) Q:X<VPRSTART  Q:X>VPRSTOP  S REAC("entered")=$$JSONDT^VPRUTILS(X)
"RTN","VPRDJ02",80,0)
 S X=$$FAC^VPRD D FACILITY^VPRUTILS(X,"REAC")
"RTN","VPRDJ02",81,0)
 S REAC("kind")="Allergy / Adverse Reaction"
"RTN","VPRDJ02",82,0)
 S REAC("localId")=ID,REAC("uid")=$$SETUID^VPRUTILS("allergy",DFN,ID)
"RTN","VPRDJ02",83,0)
 S (REAC("summary"),REAC("products",1,"name"))=$P(VPRY,U) I $P(GMRA,U,9) D
"RTN","VPRDJ02",84,0)
 . S X=$P(GMRA,U,9),REAC("reference")=X
"RTN","VPRDJ02",85,0)
 . S Y=+$P(X,"(",2) I 'Y,X["PSDRUG" S Y=50
"RTN","VPRDJ02",86,0)
 . S I=$$VUID^VPRD(+X,Y),REAC("products",1,"vuid")=$$SETVURN^VPRUTILS("vuid",I)
"RTN","VPRDJ02",87,0)
 S REAC("historical")=$S($E($P(VPRY,U,5))="H":"true",1:"false")
"RTN","VPRDJ02",88,0)
 ; REAC("adverseEventTypeName")=$P(VPRY,U,7)_" "_$P(VPRY,U,6) ;TYPE_MECH
"RTN","VPRDJ02",89,0)
 I $P(VPRY,U,4)="VERIFIED",$P(VPRY,U,9) S REAC("verified")=$$JSONDT^VPRUTILS($P(VPRY,U,9))
"RTN","VPRDJ02",90,0)
 ; reactions
"RTN","VPRDJ02",91,0)
 S I=0 F  S I=$O(GMRAL(ID,"S",I)) Q:I<1  D
"RTN","VPRDJ02",92,0)
 . S X=$G(GMRAL(ID,"S",I))
"RTN","VPRDJ02",93,0)
 . S REAC("reactions",I,"name")=$P(X,";")
"RTN","VPRDJ02",94,0)
 . S Y=$$VUID^VPRD(+$P(X,";",2),120.83)
"RTN","VPRDJ02",95,0)
 . S REAC("reactions",I,"vuid")=$$SETVURN^VPRUTILS("vuid",Y)
"RTN","VPRDJ02",96,0)
 I GMRA="" S REAC("removed")="true" ;entered in error
"RTN","VPRDJ02",97,0)
 D ADD^VPRDJ("REAC","allergy")
"RTN","VPRDJ02",98,0)
 Q
"RTN","VPRDJ02",99,0)
 ;
"RTN","VPRDJ02",100,0)
NKA ; -- no assessment or NKA [GMRAL=0 or ""]
"RTN","VPRDJ02",101,0)
 N REAC,X
"RTN","VPRDJ02",102,0)
 S REAC("assessment")=$S(GMRAL=0:"nka",1:"not done")
"RTN","VPRDJ02",103,0)
 S X=$$FAC^VPRD D FACILITY^VPRUTILS(X,"REAC")
"RTN","VPRDJ02",104,0)
 D ADD^VPRDJ("REAC","allergy")
"RTN","VPRDJ02",105,0)
 Q
"RTN","VPRDJ02",106,0)
 ;
"RTN","VPRDJ02",107,0)
GMV1(ID) ; -- vital/measurement ^UTILITY($J,"GMRVD",VPRIDT,VPRTYP,ID)
"RTN","VPRDJ02",108,0)
 N VIT,VPRY,X0,TYPE,LOC,FAC,X,Y,MRES,MUNT,HIGH,LOW,I
"RTN","VPRDJ02",109,0)
 D GETREC^GMVUTL(.VPRY,ID,1) S X0=$G(VPRY(0))
"RTN","VPRDJ02",110,0)
 ; GMRVUT0 returns CLiO data with a pseudo-ID >> get real ID
"RTN","VPRDJ02",111,0)
 I X0="",$G(VPRIDT),$D(VPRTYP) D  ;[from VPRDJ0]
"RTN","VPRDJ02",112,0)
 . N GMRVD S GMRVD=$G(^UTILITY($J,"GMRVD",VPRIDT,VPRTYP,ID))
"RTN","VPRDJ02",113,0)
 . S ID=$O(^PXRMINDX(120.5,"PI",DFN,$P(GMRVD,U,3),+GMRVD,""))
"RTN","VPRDJ02",114,0)
 . I $L(ID) D GETREC^GMVUTL(.VPRY,ID,1) S X0=$G(VPRY(0))
"RTN","VPRDJ02",115,0)
 Q:X0=""
"RTN","VPRDJ02",116,0)
 ;
"RTN","VPRDJ02",117,0)
 S VIT("localId")=ID,VIT("kind")="Vital Sign"
"RTN","VPRDJ02",118,0)
 S VIT("uid")=$$SETUID^VPRUTILS("vital",DFN,ID)
"RTN","VPRDJ02",119,0)
 S VIT("observed")=$$JSONDT^VPRUTILS(+X0)
"RTN","VPRDJ02",120,0)
 S VIT("resulted")=$$JSONDT^VPRUTILS(+$P(X0,U,4))
"RTN","VPRDJ02",121,0)
 S TYPE=$$FIELD^GMVGETVT(+$P(X0,U,3),2)
"RTN","VPRDJ02",122,0)
 S VIT("displayName")=TYPE
"RTN","VPRDJ02",123,0)
 S VIT("typeName")=$$FIELD^GMVGETVT($P(X0,U,3),1)
"RTN","VPRDJ02",124,0)
 S VIT("typeCode")="urn:va:vuid:"_$$FIELD^GMVGETVT($P(X0,U,3),4)
"RTN","VPRDJ02",125,0)
 S X=$P(X0,U,8),VIT("result")=X
"RTN","VPRDJ02",126,0)
 S VIT("units")=$$UNIT^VPRDGMV(TYPE),(MRES,MUNT)=""
"RTN","VPRDJ02",127,0)
 I TYPE="T"  S MUNT="C",MRES=$J(X-32*5/9,0,1) ;EN1^GMRVUTL
"RTN","VPRDJ02",128,0)
 I TYPE="HT" S MUNT="cm",MRES=$J(2.54*X,0,2)  ;EN2^GMRVUTL
"RTN","VPRDJ02",129,0)
 I TYPE="WT" S MUNT="kg",MRES=$J(X/2.2,0,2)   ;EN3^GMRVUTL
"RTN","VPRDJ02",130,0)
 I TYPE="CG" S MUNT="cm",MRES=$J(2.54*X,0,2)
"RTN","VPRDJ02",131,0)
 S:MRES VIT("metricResult")=MRES,VIT("metricUnits")=MUNT
"RTN","VPRDJ02",132,0)
 S X=$$RANGE^VPRDGMV(TYPE) I $L(X) S VIT("high")=$P(X,U),VIT("low")=$P(X,U,2)
"RTN","VPRDJ02",133,0)
 S VIT("summary")=VIT("typeName")_" "_VIT("result")_" "_VIT("units")
"RTN","VPRDJ02",134,0)
 F I=1:1:$L(VPRY(5),U) S X=$P(VPRY(5),U,I) I X D
"RTN","VPRDJ02",135,0)
 . S VIT("qualifiers",I,"name")=$$FIELD^GMVGETQL(X,1)
"RTN","VPRDJ02",136,0)
 . S VIT("qualifiers",I,"vuid")=$$FIELD^GMVGETQL(X,3)
"RTN","VPRDJ02",137,0)
 I $G(VPRY(2)) S VIT("removed")="true"        ;entered in error
"RTN","VPRDJ02",138,0)
 S LOC=+$P(X0,U,5),FAC=$$FAC^VPRD(LOC)
"RTN","VPRDJ02",139,0)
 S VIT("locationUid")=$$SETUID^VPRUTILS("location",,LOC)
"RTN","VPRDJ02",140,0)
 S VIT("locationName")=$S(LOC:$P($G(^SC(LOC,0)),U),1:"unknown")
"RTN","VPRDJ02",141,0)
 D FACILITY^VPRUTILS(FAC,"VIT")
"RTN","VPRDJ02",142,0)
 D ADD^VPRDJ("VIT","vital")
"RTN","VPRDJ02",143,0)
 Q
"RTN","VPRDJ02",144,0)
 ;
"RTN","VPRDJ02",145,0)
VPR(COLL) ; -- VPR Patient Objects
"RTN","VPRDJ02",146,0)
 N ID I $L($G(VPRID)) D  Q
"RTN","VPRDJ02",147,0)
 . S ID=+VPRID I 'ID S ID=+$O(^VPR(560.1,"B",VPRID,0)) ;IEN or UID
"RTN","VPRDJ02",148,0)
 . D:ID VPR1(560.1,ID)
"RTN","VPRDJ02",149,0)
 Q:$G(COLL)=""  ;error
"RTN","VPRDJ02",150,0)
 S ID=0 F  S ID=$O(^VPR(560.1,"C",DFN,COLL,ID)) Q:ID<1  D VPR1(560.1,ID)
"RTN","VPRDJ02",151,0)
 Q
"RTN","VPRDJ02",152,0)
VPR1(FNUM,ID) ; -- [patient] object
"RTN","VPRDJ02",153,0)
 N I,X,VPRY
"RTN","VPRDJ02",154,0)
 S I=0 F  S I=$O(^VPR(FNUM,ID,1,I)) Q:I<1  S X=$G(^(I,0)),VPRY(I)=X
"RTN","VPRDJ02",155,0)
 I $D(VPRY) D  ;already encoded JSON
"RTN","VPRDJ02",156,0)
 . S VPRI=VPRI+1 S:VPRI>1 @VPR@(VPRI,.3)=","
"RTN","VPRDJ02",157,0)
 . M @VPR@(VPRI)=VPRY
"RTN","VPRDJ02",158,0)
 Q
"RTN","VPRDJ03")
0^6^B49743518^n/a
"RTN","VPRDJ03",1,0)
VPRDJ03 ;SLC/MKB -- Consults,ClinProcedures,CLiO ;6/25/12  16:11
"RTN","VPRDJ03",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 317
"RTN","VPRDJ03",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ03",4,0)
 ;
"RTN","VPRDJ03",5,0)
 ; External References          DBIA#
"RTN","VPRDJ03",6,0)
 ; -------------------          -----
"RTN","VPRDJ03",7,0)
 ; ^SC                          10040
"RTN","VPRDJ03",8,0)
 ; ^TIU(8925.1                   5677
"RTN","VPRDJ03",9,0)
 ; ^VA(200                      10060
"RTN","VPRDJ03",10,0)
 ; %DT                          10003
"RTN","VPRDJ03",11,0)
 ; DILFD                         2055
"RTN","VPRDJ03",12,0)
 ; DIQ                           2056
"RTN","VPRDJ03",13,0)
 ; GMRCGUIB                      2980
"RTN","VPRDJ03",14,0)
 ; GMRCSLM1,^TMP("GMRCR"         2740
"RTN","VPRDJ03",15,0)
 ; MCARUTL3                      3280
"RTN","VPRDJ03",16,0)
 ; MDPS1,^TMP("MDHSP"            4230
"RTN","VPRDJ03",17,0)
 ; ORX8                          2467
"RTN","VPRDJ03",18,0)
 ; TIULQ                         2693
"RTN","VPRDJ03",19,0)
 ; TIUSRVLO                      2834
"RTN","VPRDJ03",20,0)
 ; XLFSTR                       10104
"RTN","VPRDJ03",21,0)
 ; XUAF4                         2171
"RTN","VPRDJ03",22,0)
 ;
"RTN","VPRDJ03",23,0)
 ; All tags expect DFN, ID, [VPRSTART, VPRSTOP, VPRMAX, VPRTEXT]
"RTN","VPRDJ03",24,0)
 ;
"RTN","VPRDJ03",25,0)
GMRC1(ID) ; -- consult/request VPRX=^TMP("GMRCR",$J,"CS",VPRN,0)
"RTN","VPRDJ03",26,0)
 N CONS,ORDER,VPRD,X0,X,VPRJ,VPRTIU,NT
"RTN","VPRDJ03",27,0)
 S CONS("localId")=+VPRX,CONS("uid")=$$SETUID^VPRUTILS("consult",DFN,+VPRX)
"RTN","VPRDJ03",28,0)
 S CONS("dateTime")=$$JSONDT^VPRUTILS($P(VPRX,U,2))
"RTN","VPRDJ03",29,0)
 S CONS("statusName")=$P(VPRX,U,3),CONS("service")=$P(VPRX,U,4)
"RTN","VPRDJ03",30,0)
 S CONS("consultProcedure")=$P(VPRX,U,5)
"RTN","VPRDJ03",31,0)
 I $P(VPRX,U,6)="*" S CONS("interpretation")="SIGNIFICANT FINDINGS"
"RTN","VPRDJ03",32,0)
 S CONS("typeName")=$P(VPRX,U,7),CONS("category")=$P(VPRX,U,9)
"RTN","VPRDJ03",33,0)
 S ORDER=+$P(VPRX,U,8),CONS("orderName")=$P($$OI^ORX8(ORDER),U,2)
"RTN","VPRDJ03",34,0)
 S CONS("orderUid")=$$SETUID^VPRUTILS("order",DFN,ORDER)
"RTN","VPRDJ03",35,0)
 D DOCLIST^GMRCGUIB(.VPRD,+VPRX) S X0=$G(VPRD(0)) ;=^GMR(123,ID,0)
"RTN","VPRDJ03",36,0)
 S X=+$P(X0,U,14) I X D  ;ordering provider
"RTN","VPRDJ03",37,0)
 . S CONS("providerUid")=$$SETUID^VPRUTILS("user",,X)
"RTN","VPRDJ03",38,0)
 . S CONS("providerName")=$P($G(^VA(200,X,0)),U)
"RTN","VPRDJ03",39,0)
 S VPRJ=0 F  S VPRJ=$O(VPRD(50,VPRJ)) Q:VPRJ<1  S X=$G(VPRD(50,VPRJ)) D
"RTN","VPRDJ03",40,0)
 . Q:'$D(@(U_$P(X,";",2)_+X_")"))  ;text deleted
"RTN","VPRDJ03",41,0)
 . S CONS("results",VPRJ,"uid")=$$SETUID^VPRUTILS("document",DFN,+X)
"RTN","VPRDJ03",42,0)
 . D EXTRACT^TIULQ(+X,"VPRTIU",,.01)
"RTN","VPRDJ03",43,0)
 . S CONS("results",VPRJ,"localTitle")=$G(VPRTIU(+X,.01,"E"))
"RTN","VPRDJ03",44,0)
 . S NT=$$GET1^DIQ(8925.1,+$G(VPRTIU(+X,.01,"I"))_",",1501)
"RTN","VPRDJ03",45,0)
 . S:$L(NT) CONS("results",VPRJ,"nationalTitle")=NT
"RTN","VPRDJ03",46,0)
 S X=$P(X0,U,21),X=$S(X:$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U),1:$$FAC^VPRD)
"RTN","VPRDJ03",47,0)
 D FACILITY^VPRUTILS(X,"CONS")
"RTN","VPRDJ03",48,0)
 D ADD^VPRDJ("CONS","consult")
"RTN","VPRDJ03",49,0)
 Q
"RTN","VPRDJ03",50,0)
 ;
"RTN","VPRDJ03",51,0)
MDPS1(DFN,BEG,END,MAX) ; -- perform CP search (scope variables)
"RTN","VPRDJ03",52,0)
 N MCARCODE,MCARDT,MCARPROC,MCESKEY,MCESSEC,MCFILE,MDC,MDIMG,RES
"RTN","VPRDJ03",53,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","VPRDJ03",54,0)
 K ^TMP("MDHSP",$J) S RES=""
"RTN","VPRDJ03",55,0)
 D EN1^MDPS1(.RES,DFN,BEG,END,MAX,"",0) ;RES=^TMP("MDHSP",$J)
"RTN","VPRDJ03",56,0)
 Q
"RTN","VPRDJ03",57,0)
 ;
"RTN","VPRDJ03",58,0)
MC1(ID) ; -- clinical procedure VPRX=^TMP("MDHSP",$J,VPRN)
"RTN","VPRDJ03",59,0)
 N X,Y,%DT,DATE,RTN,GBL,CONS,TIUN,VPRD,X0,PROC,VPRT,LOC,FAC
"RTN","VPRDJ03",60,0)
 S RTN=$P(VPRX,U,3,4) Q:RTN="PRPRO^MDPS4"  ;skip non-CP items
"RTN","VPRDJ03",61,0)
 S X=$P(VPRX,U,6),%DT="TXS" D ^%DT Q:Y'>0  S DATE=Y
"RTN","VPRDJ03",62,0)
 S GBL=+$P(VPRX,U,2)_";"_$S(RTN="PR702^MDPS1":"MDD(702,",1:$$ROOT^VPRDMC(DFN,$P(VPRX,U,11),DATE))
"RTN","VPRDJ03",63,0)
 Q:'GBL  I $G(ID),ID'=GBL Q                ;unknown, or not requested
"RTN","VPRDJ03",64,0)
 ;
"RTN","VPRDJ03",65,0)
 S CONS=+$P(VPRX,U,13) D:CONS DOCLIST^GMRCGUIB(.VPRD,CONS) S X0=$G(VPRD(0)) ;=^GMR(123,ID,0)
"RTN","VPRDJ03",66,0)
 S TIUN=+$P(VPRX,U,14) S:TIUN TIUN=TIUN_U_$$RESOLVE^TIUSRVLO(TIUN)
"RTN","VPRDJ03",67,0)
 S PROC("localId")=GBL,PROC("category")="CP"
"RTN","VPRDJ03",68,0)
 S PROC("uid")=$$SETUID^VPRUTILS("procedure",DFN,GBL)
"RTN","VPRDJ03",69,0)
 S PROC("name")=$P(VPRX,U),PROC("dateTime")=$$JSONDT^VPRUTILS(DATE)
"RTN","VPRDJ03",70,0)
 S X=$P(VPRX,U,7) S:$L(X) PROC("interpretation")=X
"RTN","VPRDJ03",71,0)
 S PROC("kind")="Procedure"
"RTN","VPRDJ03",72,0)
 I CONS,X0 D
"RTN","VPRDJ03",73,0)
 . N VPRJ S PROC("requested")=$$JSONDT^VPRUTILS(+X0)
"RTN","VPRDJ03",74,0)
 . S PROC("consultUid")=$$SETUID^VPRUTILS("consult",DFN,CONS)
"RTN","VPRDJ03",75,0)
 . S PROC("orderUid")=$$SETUID^VPRUTILS("order",DFN,+$P(X0,U,3))
"RTN","VPRDJ03",76,0)
 . S PROC("statusName")=$$EXTERNAL^DILFD(123,8,,$P(X0,U,12))
"RTN","VPRDJ03",77,0)
 . S VPRJ=0 F  S VPRJ=$O(VPRD(50,VPRJ)) Q:VPRJ<1  S X=+$G(VPRD(50,VPRJ)) D
"RTN","VPRDJ03",78,0)
 .. D NOTE(X)
"RTN","VPRDJ03",79,0)
 .. S:'TIUN TIUN=X_U_$$RESOLVE^TIUSRVLO(X)
"RTN","VPRDJ03",80,0)
 I TIUN D
"RTN","VPRDJ03",81,0)
 . S X=$P(TIUN,U,5) I X D
"RTN","VPRDJ03",82,0)
 .. S PROC("providers",1,"providerUid")=$$SETUID^VPRUTILS("user",,+X)
"RTN","VPRDJ03",83,0)
 .. S PROC("providers",1,"providerName")=$P(X,";",3)
"RTN","VPRDJ03",84,0)
 . S:$P(TIUN,U,11) PROC("hasImages")="true"
"RTN","VPRDJ03",85,0)
 . K VPRT D EXTRACT^TIULQ(+TIUN,"VPRT",,".03;.05;1211",,,"I")
"RTN","VPRDJ03",86,0)
 . S X=+$G(VPRT(+TIUN,.03,"I")),PROC("encounterUid")=$$SETUID^VPRUTILS("visit",DFN,X)
"RTN","VPRDJ03",87,0)
 . S LOC=+$G(VPRT(+TIUN,1211,"I")) I LOC S LOC=LOC_U_$P($G(^SC(LOC,0)),U)
"RTN","VPRDJ03",88,0)
 . E  S X=$P(TIUN,U,6) S:$L(X) LOC=+$O(^SC("B",X,0))_U_X
"RTN","VPRDJ03",89,0)
 . S:LOC PROC("locationUid")=$$SETUID^VPRUTILS("location",,+LOC),PROC("locationName")=$P(LOC,U,2),FAC=$$FAC^VPRD(+LOC)
"RTN","VPRDJ03",90,0)
 . I '$D(PROC("statusName")) S X=+$G(VPRT(+TIUN,.05,"I")),PROC("statusName")=$S(X<6:"PARTIAL RESULTS",1:"COMPLETE")
"RTN","VPRDJ03",91,0)
 . I '$G(PROC("results",+TIUN)) D NOTE(+TIUN)
"RTN","VPRDJ03",92,0)
 ; if no consult or note/visit ...
"RTN","VPRDJ03",93,0)
 S:'$D(PROC("statusName")) PROC("statusName")="COMPLETE"
"RTN","VPRDJ03",94,0)
 I '$D(FAC) S X=$P(X0,U,21),FAC=$S(X:$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U),1:$$FAC^VPRD)
"RTN","VPRDJ03",95,0)
 D FACILITY^VPRUTILS(FAC,"PROC")
"RTN","VPRDJ03",96,0)
 D ADD^VPRDJ("PROC","procedure")
"RTN","VPRDJ03",97,0)
 Q
"RTN","VPRDJ03",98,0)
 ;
"RTN","VPRDJ03",99,0)
NOTE(DA) ; -- add TIU note info
"RTN","VPRDJ03",100,0)
 N VPRT,NT,TEXT
"RTN","VPRDJ03",101,0)
 D EXTRACT^TIULQ(DA,"VPRT",,.01)
"RTN","VPRDJ03",102,0)
 S PROC("results",DA,"uid")=$$SETUID^VPRUTILS("document",+$G(DFN),DA)
"RTN","VPRDJ03",103,0)
 S PROC("results",DA,"localTitle")=$G(VPRT(DA,.01,"E"))
"RTN","VPRDJ03",104,0)
 S NT=$$GET1^DIQ(8925.1,+$G(VPRT(DA,.01,"I"))_",",1501)
"RTN","VPRDJ03",105,0)
 S:$L(NT) PROC("results",DA,"nationalTitle")=NT
"RTN","VPRDJ03",106,0)
 Q
"RTN","VPRDJ03",107,0)
 ;
"RTN","VPRDJ03",108,0)
MDC1(ID) ; -- clinical observation
"RTN","VPRDJ03",109,0)
 N GUID,CLIO,VPRC,VPRT,LOC,FAC,I,X,Y
"RTN","VPRDJ03",110,0)
 S GUID=$G(ID) Q:GUID=""  ;invalid GUID
"RTN","VPRDJ03",111,0)
 D QRYOBS^VPRDMDC("VPRC",GUID) Q:'$D(VPRC)  ;doesn't exist
"RTN","VPRDJ03",112,0)
 Q:$L($G(VPRC("PARENT_ID","E")))            ;PARENT also in list
"RTN","VPRDJ03",113,0)
 ;
"RTN","VPRDJ03",114,0)
 S CLIO("localId")=GUID,CLIO("uid")=$$SETUID^VPRUTILS("obs",DFN,GUID)
"RTN","VPRDJ03",115,0)
 S X=$G(VPRC("TERM_ID","I")) S:X CLIO("typeVuid")="urn:va:vuid:"_X
"RTN","VPRDJ03",116,0)
 S CLIO("typeCode")="urn:va:clioterminology:"_$G(VPRC("TERM_ID","GUID"))
"RTN","VPRDJ03",117,0)
 S CLIO("typeName")=$G(VPRC("TERM_ID","E"))
"RTN","VPRDJ03",118,0)
 S CLIO("result")=$G(VPRC("SVALUE","E"))
"RTN","VPRDJ03",119,0)
 S X=$G(VPRC("UNIT_ID","ABBV")) S:$L(X) CLIO("units")=X
"RTN","VPRDJ03",120,0)
 S X=$G(VPRC("ENTERED_DATE_TIME","I")),CLIO("entered")=$$JSONDT^VPRUTILS(X)
"RTN","VPRDJ03",121,0)
 S X=$G(VPRC("OBSERVED_DATE_TIME","I")),CLIO("observed")=$$JSONDT^VPRUTILS(X)
"RTN","VPRDJ03",122,0)
 D QRYTYPES^VPRDMDC("VPRT")
"RTN","VPRDJ03",123,0)
 F I=3,5 S X=$G(VPRT(I,"XML")) I $L($G(VPRC(X,"E"))) D
"RTN","VPRDJ03",124,0)
 . S Y=VPRT(I,"NAME"),Y=$S(Y="LOCATION":"bodySite",1:$$LOW^XLFSTR(Y))
"RTN","VPRDJ03",125,0)
 . S CLIO(Y_"Code")=VPRC(X,"I"),CLIO(Y_"Name")=VPRC(X,"E")
"RTN","VPRDJ03",126,0)
 F I=4,6,7 S X=$G(VPRT(I,"XML")) I $L($G(VPRC(X,"E"))) D
"RTN","VPRDJ03",127,0)
 . S CLIO("qualifiers",I,"type")=$$LOW^XLFSTR(VPRT(I,"NAME"))
"RTN","VPRDJ03",128,0)
 . S CLIO("qualifiers",I,"code")=VPRC(X,"I")
"RTN","VPRDJ03",129,0)
 . S CLIO("qualifiers",I,"name")=VPRC(X,"E")
"RTN","VPRDJ03",130,0)
 S X=$G(VPRC("RANGE","E")) I $L(X) D
"RTN","VPRDJ03",131,0)
 . S Y=$S(X="Out of Bounds Low":"<",X="Out of Bounds High":">",1:$E(X))
"RTN","VPRDJ03",132,0)
 . S CLIO("interpretationCode")="urn:hl7:observation-interpretation:"_Y
"RTN","VPRDJ03",133,0)
 . S CLIO("interpretationName")=$S(X="<":"Low off scale",X=">":"High off scale",1:X)
"RTN","VPRDJ03",134,0)
 ; X=$G(VPRC("STATUS","E")) S:$L(X) CLIO("resultStatus")=$S(X="unverified":"active",1:"complete")
"RTN","VPRDJ03",135,0)
 I $D(VPRC("SUPP_PAGE")) D  ;add set info
"RTN","VPRDJ03",136,0)
 . S CLIO("setID")=$G(VPRC("SUPP_PAGE","GUID"))
"RTN","VPRDJ03",137,0)
 . S CLIO("setName")=$G(VPRC("SUPP_PAGE","DISPLAY_NAME"))
"RTN","VPRDJ03",138,0)
 . S X=$G(VPRC("SUPP_PAGE","TYPE")) S:$L(X) CLIO("setType")=X
"RTN","VPRDJ03",139,0)
 . S X=$G(VPRC("SUPP_PAGE","ACTIVATED_DATE_TIME")) S:X CLIO("setStart")=$$JSONDT^VPRUTILS(X)
"RTN","VPRDJ03",140,0)
 . S X=$G(VPRC("SUPP_PAGE","DEACTIVATED_DATE_TIME")) S:X CLIO("setStop")=$$JSONDT^VPRUTILS(X)
"RTN","VPRDJ03",141,0)
 S CLIO("statusCode")="urn:va:observation-status:complete",CLIO("statusName")="complete"
"RTN","VPRDJ03",142,0)
 S LOC=$G(VPRC("HOSPITAL_LOCATION_ID","I")),FAC=$$FAC^VPRD(LOC)
"RTN","VPRDJ03",143,0)
 S CLIO("locationUid")=$$SETUID^VPRUTILS("location",,LOC)
"RTN","VPRDJ03",144,0)
 S CLIO("locationName")=$G(VPRC("HOSPITAL_LOCATION_ID","E"))
"RTN","VPRDJ03",145,0)
 D FACILITY^VPRUTILS(FAC,"CLIO")
"RTN","VPRDJ03",146,0)
 S X=$G(VPRC("COMMENT","E")) S:$L(X) CLIO("comment")=X
"RTN","VPRDJ03",147,0)
 D ADD^VPRDJ("CLIO","obs")
"RTN","VPRDJ03",148,0)
 Q
"RTN","VPRDJ04")
0^7^B47678729^n/a
"RTN","VPRDJ04",1,0)
VPRDJ04 ;SLC/MKB -- Appointments,Visits ;6/25/12  16:11
"RTN","VPRDJ04",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 317
"RTN","VPRDJ04",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ04",4,0)
 ;
"RTN","VPRDJ04",5,0)
 ; External References          DBIA#
"RTN","VPRDJ04",6,0)
 ; -------------------          -----
"RTN","VPRDJ04",7,0)
 ; ^AUPNVSIT                     2028
"RTN","VPRDJ04",8,0)
 ; ^DGS(41.1                     3796
"RTN","VPRDJ04",9,0)
 ; ^DIC(42                      10039
"RTN","VPRDJ04",10,0)
 ; ^SC                          10040
"RTN","VPRDJ04",11,0)
 ; ^VA(200                      10060
"RTN","VPRDJ04",12,0)
 ; DIQ                           2056
"RTN","VPRDJ04",13,0)
 ; ICPTCOD                       1995
"RTN","VPRDJ04",14,0)
 ; PXAPI,^TMP("PXKENC"           1894
"RTN","VPRDJ04",15,0)
 ; SDAMA301                      4433
"RTN","VPRDJ04",16,0)
 ; XLFDT                        10103
"RTN","VPRDJ04",17,0)
 ; XUAF4                         2171
"RTN","VPRDJ04",18,0)
 ;
"RTN","VPRDJ04",19,0)
 ; All tags expect DFN, ID, [VPRSTART, VPRSTOP, VPRMAX, VPRTEXT]
"RTN","VPRDJ04",20,0)
 ;
"RTN","VPRDJ04",21,0)
SDAM1 ; -- appointment ^TMP($J,"SDAMA301",DFN,VPRDT)
"RTN","VPRDJ04",22,0)
 N NODE,HLOC,APPT,X,STS,CLS,FAC,SV,PRV
"RTN","VPRDJ04",23,0)
 S NODE=$G(^TMP($J,"SDAMA301",DFN,VPRDT))
"RTN","VPRDJ04",24,0)
 ;
"RTN","VPRDJ04",25,0)
 S HLOC=$P(NODE,U,2),X="A;"_VPRDT_";"_+HLOC
"RTN","VPRDJ04",26,0)
 I $L($G(ID)),$P(ID,";",1,3)'=X Q
"RTN","VPRDJ04",27,0)
 S APPT("localId")=X,APPT("uid")=$$SETUID^VPRUTILS("appointment",DFN,X)
"RTN","VPRDJ04",28,0)
 S X=$P(NODE,U,10),APPT("typeCode")=$P(X,";"),APPT("typeName")=$P(X,";",2)
"RTN","VPRDJ04",29,0)
 S STS=$P(NODE,U,3),CLS=$S($E(STS)="I":"I",1:"O")
"RTN","VPRDJ04",30,0)
 S APPT("dateTime")=$$JSONDT^VPRUTILS(VPRDT)
"RTN","VPRDJ04",31,0)
 S:$L($P(NODE,U,6)) APPT("comment")=$P(NODE,U,6)
"RTN","VPRDJ04",32,0)
 S:$P(NODE,U,9) APPT("checkIn")=$$JSONDT^VPRUTILS($P(NODE,U,9))
"RTN","VPRDJ04",33,0)
 S:$P(NODE,U,11) APPT("checkOut")=$$JSONDT^VPRUTILS($P(NODE,U,11))
"RTN","VPRDJ04",34,0)
 I $L(ID,";")>3 S APPT("reasonName")=$P(ID,";",4),PRV=+$P(ID,";",5) ;from SDAM event
"RTN","VPRDJ04",35,0)
 S FAC=$$FAC^VPRD(+HLOC) D FACILITY^VPRUTILS(FAC,"APPT") I HLOC D
"RTN","VPRDJ04",36,0)
 . S APPT("locationName")=$P(HLOC,";",2)
"RTN","VPRDJ04",37,0)
 . S APPT("locationUid")=$$SETUID^VPRUTILS("location",,+HLOC)
"RTN","VPRDJ04",38,0)
 . S X=$$AMIS^VPRDVSIT(+$P(NODE,U,13))
"RTN","VPRDJ04",39,0)
 . S:$L(X) APPT("stopCodeUid")="urn:va:stop-code:"_$P(X,U),APPT("stopCodeName")=$P(X,U,2)
"RTN","VPRDJ04",40,0)
 . S SV=$$GET1^DIQ(44,+HLOC_",",9.5,"I")
"RTN","VPRDJ04",41,0)
 . I SV S APPT("service")=$$SERV^VPRDSDAM(SV)
"RTN","VPRDJ04",42,0)
 . ;find default provider
"RTN","VPRDJ04",43,0)
 . S:'$G(PRV) PRV=+$$GET1^DIQ(44,+HLOC_",",16,"I") I 'PRV D
"RTN","VPRDJ04",44,0)
 .. N VPRP,I,FIRST
"RTN","VPRDJ04",45,0)
 .. D GETS^DIQ(44,+HLOC_",","2600*","I","VPRP")
"RTN","VPRDJ04",46,0)
 .. S FIRST=$O(VPRP(44.1,"")),I=""
"RTN","VPRDJ04",47,0)
 .. F  S I=$O(VPRP(44.1,I)) Q:I=""  I $G(VPRP(44.1,I,.02,"I")) S PRV=$G(VPRP(44.1,I,.01,"I")) Q
"RTN","VPRDJ04",48,0)
 .. I 'PRV,FIRST S PRV=$G(VPRP(44.1,FIRST,.01,"I"))
"RTN","VPRDJ04",49,0)
 I $G(PRV) S APPT("providers",1,"providerUid")=$$SETUID^VPRUTILS("user",,PRV),APPT("providers",1,"providerName")=$P($G(^VA(200,PRV,0)),U)
"RTN","VPRDJ04",50,0)
 I $G(SV) S APPT("summary")="${"_APPT("service")_"}:"_$P(HLOC,";",2)
"RTN","VPRDJ04",51,0)
 S APPT("patientClassCode")="urn:va:patient-class:"_$S(CLS="I":"IMP",1:"AMB")
"RTN","VPRDJ04",52,0)
 S APPT("patientClassName")=$S(CLS="I":"Inpatient",1:"Ambulatory")
"RTN","VPRDJ04",53,0)
 S APPT("categoryCode")="urn:va:encounter-category:OV",APPT("categoryName")="Outpatient Visit"
"RTN","VPRDJ04",54,0)
 S APPT("appointmentStatus")=$P(STS,";",2)
"RTN","VPRDJ04",55,0)
 D ADD^VPRDJ("APPT","appointment")
"RTN","VPRDJ04",56,0)
 Q
"RTN","VPRDJ04",57,0)
 ;
"RTN","VPRDJ04",58,0)
DGS ; scheduled admissions [from APPOINTM^VPRDJ0]
"RTN","VPRDJ04",59,0)
 S VPRA=0 F  S VPRA=$O(^DGS(41.1,"B",DFN,VPRA)) Q:VPRA<1  D  Q:VPRI'<VPRMAX
"RTN","VPRDJ04",60,0)
 . S VPRX=$G(^DGS(41.1,VPRA,0))
"RTN","VPRDJ04",61,0)
 . I $L($G(ID)),+$P(ID,";",2)=+$P(VPRX,U,2) D DGS1(VPRA) Q
"RTN","VPRDJ04",62,0)
 . Q:$P(VPRX,U,13)  Q:$P(VPRX,U,17)  ;cancelled or admitted
"RTN","VPRDJ04",63,0)
 . S X=$P(VPRX,U,2) Q:X<VPRSTART!(X>VPRSTOP)  ;out of date range
"RTN","VPRDJ04",64,0)
 . D DGS1(VPRA)
"RTN","VPRDJ04",65,0)
 Q
"RTN","VPRDJ04",66,0)
 ;
"RTN","VPRDJ04",67,0)
DGS1(IFN) ; -- scheduled admission
"RTN","VPRDJ04",68,0)
 N ADM,X0,DATE,HLOC,FAC,SV,X
"RTN","VPRDJ04",69,0)
 S X0=$G(^DGS(41.1,+$G(IFN),0)) Q:X0=""  ;deleted
"RTN","VPRDJ04",70,0)
 ;
"RTN","VPRDJ04",71,0)
 S DATE=+$P(X0,U,2),HLOC=+$G(^DIC(42,+$P(X0,U,8),44))
"RTN","VPRDJ04",72,0)
 S X="H;"_DATE,ADM("localId")=X,ADM("uid")=$$SETUID^VPRUTILS("appointment",DFN,X)
"RTN","VPRDJ04",73,0)
 S ADM("dateTime")=$$JSONDT^VPRUTILS(DATE)
"RTN","VPRDJ04",74,0)
 S FAC=$$FAC^VPRD(+HLOC) D FACILITY^VPRUTILS(FAC,"ADM") I HLOC D
"RTN","VPRDJ04",75,0)
 . S HLOC=+HLOC_";"_$P($G(^SC(+HLOC,0)),U)
"RTN","VPRDJ04",76,0)
 . S ADM("uid")=ADM("uid")_";"_+HLOC
"RTN","VPRDJ04",77,0)
 . S ADM("locationName")=$P(HLOC,";",2)
"RTN","VPRDJ04",78,0)
 . S ADM("locationUid")=$$SETUID^VPRUTILS("location",,+HLOC)
"RTN","VPRDJ04",79,0)
 . S X=$$GET1^DIQ(44,+HLOC_",",8,"I"),X=$$AMIS^VPRDVSIT(X)
"RTN","VPRDJ04",80,0)
 . S:$L(X) ADM("stopCodeUid")="urn:va:stop-code:"_$P(X,U),ADM("stopCodeName")=$P(X,U,2)
"RTN","VPRDJ04",81,0)
 . S SV=$$GET1^DIQ(44,+HLOC_",",9.5,"I")
"RTN","VPRDJ04",82,0)
 . I SV S ADM("service")=$$SERV^VPRDSDAM(SV)
"RTN","VPRDJ04",83,0)
 I $G(SV) S ADM("summary")="${"_ADM("service")_"}:"_$P(HLOC,";",2)
"RTN","VPRDJ04",84,0)
 S X=+$P(X0,U,5) I X D
"RTN","VPRDJ04",85,0)
 . S ADM("providers",1,"providerUid")=$$SETUID^VPRUTILS("user",,X)
"RTN","VPRDJ04",86,0)
 . S ADM("providers",1,"providerName")=$P($G(^VA(200,X,0)),U)
"RTN","VPRDJ04",87,0)
 S ADM("patientClassCode")="urn:va:patient-class:IMP",ADM("patientClassName")="Inpatient"
"RTN","VPRDJ04",88,0)
 S ADM("categoryCode")="urn:va:encounter-category:AD",ADM("categoryName")="Admission"
"RTN","VPRDJ04",89,0)
 S ADM("appointmentStatus")=$S($P(X0,U,17):"ADMITTED",$P(X0,U,13):"CANCELLED",1:"SCHEDULED")
"RTN","VPRDJ04",90,0)
 D ADD^VPRDJ("ADM","appointment")
"RTN","VPRDJ04",91,0)
 Q
"RTN","VPRDJ04",92,0)
 ;
"RTN","VPRDJ04",93,0)
VSIT1(ID) ; -- visit
"RTN","VPRDJ04",94,0)
 N VST,X0,X15,X,FAC,LOC,CATG,AMIS,INPT,DA
"RTN","VPRDJ04",95,0)
 I $G(ID)?1"H"1.N D ADM^VPRDJ04A(ID) Q
"RTN","VPRDJ04",96,0)
 D ENCEVENT^PXAPI(ID)
"RTN","VPRDJ04",97,0)
 ;
"RTN","VPRDJ04",98,0)
 S X0=$G(^TMP("PXKENC",$J,ID,"VST",ID,0)),X15=$G(^(150))
"RTN","VPRDJ04",99,0)
 Q:$P(X15,U,3)'="P"  Q:$P(X0,U,7)="E"  Q:$P(X0,U,12)  ;primary, not historical or child
"RTN","VPRDJ04",100,0)
 I $P(X0,U,7)="H" D ADM^VPRDJ04A(ID,+X0) Q
"RTN","VPRDJ04",101,0)
 S VST("localId")=ID,VST("uid")=$$SETUID^VPRUTILS("visit",DFN,ID)
"RTN","VPRDJ04",102,0)
 S VST("dateTime")=$$JSONDT^VPRUTILS(+X0)
"RTN","VPRDJ04",103,0)
 S:$P(X0,U,18) VST("checkOut")=$$JSONDT^VPRUTILS($P(X0,U,18))
"RTN","VPRDJ04",104,0)
 S FAC=+$P(X0,U,6),CATG=$P(X0,U,7),LOC=+$P(X0,U,22)
"RTN","VPRDJ04",105,0)
 S:FAC X=$$STA^XUAF4(FAC)_U_$P($$NS^XUAF4(FAC),U)
"RTN","VPRDJ04",106,0)
 S:'FAC X=$$FAC^VPRD(LOC) D FACILITY^VPRUTILS(X,"VST")
"RTN","VPRDJ04",107,0)
 S X=$S(CATG="H":"AD",CATG="C":"CR",CATG="T":"TC",CATG="N":"U",CATG="R":"NH","D^X"[CATG:"O",1:"OV")
"RTN","VPRDJ04",108,0)
 S VST("categoryCode")="urn:va:encounter-category:"_X
"RTN","VPRDJ04",109,0)
 S VST("categoryName")=$S(X="AD":"Admission",X="CR":"Chart Review",X="TC":"Phone Contact",X="U":"Unknown",X="NH":"Nursing Home",X="O":"Other",1:"Outpatient Visit")
"RTN","VPRDJ04",110,0)
 S INPT=$P(X15,U,2) S:INPT="" INPT=$S("H^I^R^D"[CATG:1,1:0)
"RTN","VPRDJ04",111,0)
 S X=$$CPT^VPRDVSIT(ID) S:X VST("typeName")=$P($$CPT^ICPTCOD(X),U,3)
"RTN","VPRDJ04",112,0)
 I 'X S VST("typeName")=$S('INPT&LOC:$P($G(^SC(LOC,0)),U)_" VISIT",1:$$CATG^VPRDVSIT(CATG))
"RTN","VPRDJ04",113,0)
 S VST("patientClassCode")="urn:va:patient-class:"_$S(INPT:"IMP",1:"AMB")
"RTN","VPRDJ04",114,0)
 S VST("patientClassName")=$S(INPT:"Inpatient",1:"Ambulatory")
"RTN","VPRDJ04",115,0)
 S X=$P(X0,U,8) S:X AMIS=$$AMIS^VPRDVSIT(X) I LOC D
"RTN","VPRDJ04",116,0)
 . N L0 S L0=$G(^SC(LOC,0))
"RTN","VPRDJ04",117,0)
 . I 'X S AMIS=$$AMIS^VPRDVSIT($P(L0,U,7))
"RTN","VPRDJ04",118,0)
 . S VST("locationUid")=$$SETUID^VPRUTILS("location",,+LOC)
"RTN","VPRDJ04",119,0)
 . S VST("locationName")=$P(L0,U)
"RTN","VPRDJ04",120,0)
 . S X=$$SERV^VPRDVSIT($P(L0,U,20)) Q:X=""
"RTN","VPRDJ04",121,0)
 . S:$L(X) VST("service")=X,VST("summary")="${"_VST("service")_"}:"_$P(L0,U)
"RTN","VPRDJ04",122,0)
 S:$D(AMIS) VST("stopCodeUid")="urn:va:stop-code:"_$P(AMIS,U),VST("stopCodeName")=$P(AMIS,U,2)
"RTN","VPRDJ04",123,0)
 S X=$$POV^VPRDVSIT(ID) S:$L(X) VST("reasonUid")=$$SETNCS^VPRUTILS("icd",$P(X,U)),VST("reasonName")=$P(X,U,2)
"RTN","VPRDJ04",124,0)
 ; provider(s)
"RTN","VPRDJ04",125,0)
 S DA=0 F  S DA=$O(^TMP("PXKENC",$J,ID,"PRV",DA)) Q:DA<1  S X0=$G(^(DA,0)) D
"RTN","VPRDJ04",126,0)
 . I $P(X0,U,4)="P" D PROV("VST",DA,+X0,"P",1) Q  ;primary
"RTN","VPRDJ04",127,0)
 . D PROV("VST",DA,+X0,"S")                       ;secondary
"RTN","VPRDJ04",128,0)
 K ^TMP("PXKENC",$J,ID)
"RTN","VPRDJ04",129,0)
 ; note(s)
"RTN","VPRDJ04",130,0)
 D TIU^VPRDJ04A(ID,.VST)
"RTN","VPRDJ04",131,0)
 D ADD^VPRDJ("VST","visit")
"RTN","VPRDJ04",132,0)
 Q
"RTN","VPRDJ04",133,0)
 ;
"RTN","VPRDJ04",134,0)
PROV(ARR,I,IEN,ROLE,PRIM) ; -- add providers
"RTN","VPRDJ04",135,0)
 S @ARR@("providers",I,"providerUid")=$$SETUID^VPRUTILS("user",,+IEN)
"RTN","VPRDJ04",136,0)
 S @ARR@("providers",I,"providerName")=$P($G(^VA(200,+IEN,0)),U)
"RTN","VPRDJ04",137,0)
 S @ARR@("providers",I,"role")=ROLE
"RTN","VPRDJ04",138,0)
 S:$G(PRIM) @ARR@("providers",I,"primary")="true"
"RTN","VPRDJ04",139,0)
 Q
"RTN","VPRDJ04",140,0)
 ;
"RTN","VPRDJ04",141,0)
NAME(IEN) ; -- Return a string 'name' for the visit
"RTN","VPRDJ04",142,0)
 N Y,X0,LOC,DATE
"RTN","VPRDJ04",143,0)
 S X0=$G(^AUPNVSIT(+$G(IEN),0)),Y=""
"RTN","VPRDJ04",144,0)
 S DATE=+X0,LOC=+$P(X0,U,22) S:LOC LOC=$P($G(^SC(LOC,0)),U)_" "
"RTN","VPRDJ04",145,0)
 S Y=LOC_$$FMTE^XLFDT(DATE,"1D") ;Mon DD, YYYY
"RTN","VPRDJ04",146,0)
 Q Y
"RTN","VPRDJ04A")
0^24^B36420588^n/a
"RTN","VPRDJ04A",1,0)
VPRDJ04A ;SLC/MKB -- Admissions,PTF ;7/25/13
"RTN","VPRDJ04A",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 317
"RTN","VPRDJ04A",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ04A",4,0)
 ;
"RTN","VPRDJ04A",5,0)
 ; External References          DBIA#
"RTN","VPRDJ04A",6,0)
 ; -------------------          -----
"RTN","VPRDJ04A",7,0)
 ; ^AUPNVSIT                     2028
"RTN","VPRDJ04A",8,0)
 ; ^DGPM                         1865
"RTN","VPRDJ04A",9,0)
 ; ^DIC(42                      10039
"RTN","VPRDJ04A",10,0)
 ; ^DPT                         10035
"RTN","VPRDJ04A",11,0)
 ; ^SC                          10040
"RTN","VPRDJ04A",12,0)
 ; ^VA(200                      10060
"RTN","VPRDJ04A",13,0)
 ; DGPTFAPI                      3157
"RTN","VPRDJ04A",14,0)
 ; DIC                           2051
"RTN","VPRDJ04A",15,0)
 ; DILFD                         2055
"RTN","VPRDJ04A",16,0)
 ; DIQ                           2056
"RTN","VPRDJ04A",17,0)
 ; ICDCODE                       3990
"RTN","VPRDJ04A",18,0)
 ; ICPTCOD                       1995
"RTN","VPRDJ04A",19,0)
 ; VADPT                        10061
"RTN","VPRDJ04A",20,0)
 ; XUAF4                         2171
"RTN","VPRDJ04A",21,0)
 ;
"RTN","VPRDJ04A",22,0)
 ; All tags expect DFN, ID, [VPRSTART, VPRSTOP, VPRMAX, VPRTEXT]
"RTN","VPRDJ04A",23,0)
 ;
"RTN","VPRDJ04A",24,0)
ADM(ID,DATE) ; -- admission [from VSIT1]
"RTN","VPRDJ04A",25,0)
 N ADM,VADMVT,VAIP,VAERR,MVT,SPEC,HLOC,FAC,ICD,I
"RTN","VPRDJ04A",26,0)
 S ID=$G(ID),DATE=+$G(DATE) Q:ID=""  ;Q:DATE<1
"RTN","VPRDJ04A",27,0)
 I ID S VAIP("D")=DATE,VST=+ID
"RTN","VPRDJ04A",28,0)
 I ID?1"H"1.N S VAIP("E")=+$E(ID,2,99),VST=0
"RTN","VPRDJ04A",29,0)
 D IN5^VADPT Q:'$G(VAIP(1))  ;deleted
"RTN","VPRDJ04A",30,0)
 S VADMVT=+$G(VAIP(13)),ID="H"_VADMVT
"RTN","VPRDJ04A",31,0)
 S ADM("localId")=ID,ADM("uid")=$$SETUID^VPRUTILS("visit",DFN,ID)
"RTN","VPRDJ04A",32,0)
 S:'DATE DATE=+$G(VAIP(13,1)) S:'VST VST=$$VISIT(DFN,DATE)
"RTN","VPRDJ04A",33,0)
 S (ADM("dateTime"),ADM("stay","arrivalDateTime"))=$$JSONDT^VPRUTILS(DATE)
"RTN","VPRDJ04A",34,0)
 S:$L($P(VAIP(6),U,2)) ADM("roomBed")=$P(VAIP(6),U,2)
"RTN","VPRDJ04A",35,0)
 S MVT=13,I=0 I VADMVT=$G(^DPT(DFN,.105)) D  ;if current admission,
"RTN","VPRDJ04A",36,0)
 . S ADM("current")="true",MVT=14            ; use last movement info
"RTN","VPRDJ04A",37,0)
 . S X=$G(^DPT(DFN,.101)) S:$L(X) ADM("roomBed")=X
"RTN","VPRDJ04A",38,0)
 . K VPRADMIT                                ;kill flag from VPRDJ0
"RTN","VPRDJ04A",39,0)
 S SPEC=$G(VAIP(MVT,6)),ADM("specialty")=$P(SPEC,U,2)
"RTN","VPRDJ04A",40,0)
 S X=$$SERV^VPRDVSIT(+SPEC),ADM("service")=X
"RTN","VPRDJ04A",41,0)
 S HLOC=+$G(^DIC(42,+$G(VAIP(MVT,4)),44)),FAC=$$FAC^VPRD(+HLOC) I HLOC D
"RTN","VPRDJ04A",42,0)
 . S ADM("locationUid")=$$SETUID^VPRUTILS("location",,+HLOC)
"RTN","VPRDJ04A",43,0)
 . S ADM("locationName")=$P($G(^SC(HLOC,0)),U)
"RTN","VPRDJ04A",44,0)
 . S X=$$AMIS^VPRDVSIT($P($G(^SC(HLOC,0)),U,7))
"RTN","VPRDJ04A",45,0)
 . S:$L($G(X)) ADM("stopCodeUid")="urn:va:stop-code:"_$P(X,U),ADM("stopCodeName")=$P(X,U,2)
"RTN","VPRDJ04A",46,0)
 . S ADM("summary")="${"_ADM("service")_"}:"_ADM("locationName")
"RTN","VPRDJ04A",47,0)
 D FACILITY^VPRUTILS(FAC,"ADM")
"RTN","VPRDJ04A",48,0)
 S ADM("categoryCode")="urn:va:encounter-category:AD",ADM("categoryName")="Admission"
"RTN","VPRDJ04A",49,0)
 S ADM("patientClassCode")="urn:va:patient-class:IMP",ADM("patientClassName")="Inpatient"
"RTN","VPRDJ04A",50,0)
 I $G(VAIP(17)) S ADM("stay","dischargeDateTime")=$$JSONDT^VPRUTILS(+$G(VAIP(17,1)))
"RTN","VPRDJ04A",51,0)
 I $G(VAIP(18)) S I=I+1 D PROV("ADM",I,+VAIP(18),"A")         ;attending
"RTN","VPRDJ04A",52,0)
 I $G(VAIP(MVT,5)) S I=I+1 D PROV("ADM",I,+VAIP(MVT,5),"P",1) ;primary
"RTN","VPRDJ04A",53,0)
 S ICD=$$POV^VPRDVSIT(VST) S:'ICD ICD=$$PTF^VPRDVSIT(DFN,VAIP(12)) ;PTF>ICD
"RTN","VPRDJ04A",54,0)
 I $L(ICD)<2 S ADM("reasonName")=$G(VAIP(MVT,7))
"RTN","VPRDJ04A",55,0)
 E  S ADM("reasonUid")=$$SETNCS^VPRUTILS("icd",ICD),ADM("reasonName")=$P(ICD,U,2)
"RTN","VPRDJ04A",56,0)
 S X=$$CPT^VPRDVSIT(VST),ADM("typeName")=$S(X:$P($$CPT^ICPTCOD(X),U,3),1:$$CATG^VPRDVSIT("H"))
"RTN","VPRDJ04A",57,0)
 D MVT(VADMVT)   ;sub-movements
"RTN","VPRDJ04A",58,0)
 D TIU(VST,.ADM) ;notes/summary
"RTN","VPRDJ04A",59,0)
 D ADD^VPRDJ("ADM","visit")
"RTN","VPRDJ04A",60,0)
 Q
"RTN","VPRDJ04A",61,0)
 ;
"RTN","VPRDJ04A",62,0)
TIU(VISIT,ARR) ; -- add notes to ARR("document")
"RTN","VPRDJ04A",63,0)
 N X,Y,I,VPRX,LT,NT,DA,CNT,VPRY
"RTN","VPRDJ04A",64,0)
 D FIND^DIC(8925,,.01,"QX",+$G(VISIT),,"V",,,"VPRX")
"RTN","VPRDJ04A",65,0)
 S Y="",(I,CNT)=0
"RTN","VPRDJ04A",66,0)
 F  S I=$O(VPRX("DILIST",1,I)) Q:I<1  D
"RTN","VPRDJ04A",67,0)
 . S LT=$G(VPRX("DILIST","ID",I,.01)) Q:$P(LT," ")="Addendum"
"RTN","VPRDJ04A",68,0)
 . S DA=$G(VPRX("DILIST",2,I))
"RTN","VPRDJ04A",69,0)
 . S NT=$$GET1^DIQ(8925,+DA_",",".01:1501")
"RTN","VPRDJ04A",70,0)
 . S CNT=CNT+1,ARR("documents",CNT,"uid")=$$SETUID^VPRUTILS("document",DFN,+DA)
"RTN","VPRDJ04A",71,0)
 . S ARR("documents",CNT,"localTitle")=LT
"RTN","VPRDJ04A",72,0)
 . S:$L(NT) ARR("documents",CNT,"nationalTitle")=NT
"RTN","VPRDJ04A",73,0)
 Q
"RTN","VPRDJ04A",74,0)
 ;
"RTN","VPRDJ04A",75,0)
PROV(ARR,I,IEN,ROLE,PRIM) ; -- add providers
"RTN","VPRDJ04A",76,0)
 S @ARR@("providers",I,"providerUid")=$$SETUID^VPRUTILS("user",,+IEN)
"RTN","VPRDJ04A",77,0)
 S @ARR@("providers",I,"providerName")=$P($G(^VA(200,+IEN,0)),U)
"RTN","VPRDJ04A",78,0)
 S @ARR@("providers",I,"role")=ROLE
"RTN","VPRDJ04A",79,0)
 S:$G(PRIM) @ARR@("providers",I,"primary")="true"
"RTN","VPRDJ04A",80,0)
 Q
"RTN","VPRDJ04A",81,0)
 ;
"RTN","VPRDJ04A",82,0)
MVT(CA) ; -- add movements to ADM("movement",i,"attribute")
"RTN","VPRDJ04A",83,0)
 N DATE,DA,CNT,X S (DATE,CNT)=0
"RTN","VPRDJ04A",84,0)
 F  S DATE=$O(^DGPM("APCA",DFN,CA,DATE)) Q:DATE<1  S DA=+$O(^(DATE,0)) I DA'=CA D
"RTN","VPRDJ04A",85,0)
 . S X0=$G(^DGPM(DA,0)),CNT=CNT+1
"RTN","VPRDJ04A",86,0)
 . S ADM("movements",CNT,"localId")=DA
"RTN","VPRDJ04A",87,0)
 . S ADM("movements",CNT,"dateTime")=$$JSONDT^VPRUTILS(DATE)
"RTN","VPRDJ04A",88,0)
 . S ADM("movements",CNT,"movementType")=$$EXTERNAL^DILFD(405,.02,,$P(X0,U,2))
"RTN","VPRDJ04A",89,0)
 . S X=+$P(X0,U,19) I X D
"RTN","VPRDJ04A",90,0)
 .. S ADM("movements",CNT,"providerUid")=$$SETUID^VPRUTILS("user",,X)
"RTN","VPRDJ04A",91,0)
 .. S ADM("movements",CNT,"providerName")=$P($G(^VA(200,X,0)),U)
"RTN","VPRDJ04A",92,0)
 . S X=+$P(X0,U,9)
"RTN","VPRDJ04A",93,0)
 . S:X ADM("movements",CNT,"specialty")=$$EXTERNAL^DILFD(405,.09,,X)
"RTN","VPRDJ04A",94,0)
 . S HLOC=+$G(^DIC(42,+$P(X0,U,6),44)),FAC=$$FAC^VPRD(HLOC) I HLOC D
"RTN","VPRDJ04A",95,0)
 .. S ADM("movements",CNT,"locationUid")=$$SETUID^VPRUTILS("location",,HLOC)
"RTN","VPRDJ04A",96,0)
 .. S ADM("movements",CNT,"locationName")=$P($G(^SC(HLOC,0)),U)
"RTN","VPRDJ04A",97,0)
 Q
"RTN","VPRDJ04A",98,0)
 ;
"RTN","VPRDJ04A",99,0)
PTFA(ID) ; -- find ID in ^PXRMINDX(FNUM), fall thru to PX1 if successful
"RTN","VPRDJ04A",100,0)
 N ROOT,IDX,ITEM,DATE K ^TMP("VPRPX",$J)
"RTN","VPRDJ04A",101,0)
 S P=$L(ID,";"),TYPE=$P(ID,";",P),ID=$P(ID,";",1,P-1)
"RTN","VPRDJ04A",102,0)
 S ROOT="^PXRMINDX(45,""ICD9"",""PNI"","_+$G(DFN)_","_""""_TYPE_""""
"RTN","VPRDJ04A",103,0)
 S IDX=ROOT_")" F  S IDX=$Q(@IDX) Q:$P(IDX,",",1,5)'=ROOT  D
"RTN","VPRDJ04A",104,0)
 . I """"_ID_""")"'=$P(IDX,",",8) Q
"RTN","VPRDJ04A",105,0)
 . S DATE=+$P(IDX,",",7),ITEM=+$P(IDX,",",6)
"RTN","VPRDJ04A",106,0)
 . S VPRIDT=9999999-DATE,^TMP("VPRPX",$J,VPRIDT,ID_";"_TYPE)=ITEM_U_DATE
"RTN","VPRDJ04A",107,0)
 Q:'$D(^TMP("VPRPX",$J))  ;not found
"RTN","VPRDJ04A",108,0)
 S ID=ID_";"_TYPE
"RTN","VPRDJ04A",109,0)
PTF1 ; -- PTF where ID=iens;TYPE
"RTN","VPRDJ04A",110,0)
 ;   Expects ^TMP("VPRPX",$J,VPRIDT,ID)=ITM^[DISCHARGE]DATE
"RTN","VPRDJ04A",111,0)
 N TMP,PTF,ADM,DIS,VAIN,VAINDT,HLOC,FAC,X,Y,VISIT,X0
"RTN","VPRDJ04A",112,0)
 ; PTF^DGPTPXRM(+ID,.VPRF)
"RTN","VPRDJ04A",113,0)
 S TMP=$G(^TMP("VPRPX",$J,VPRIDT,ID))
"RTN","VPRDJ04A",114,0)
 ;
"RTN","VPRDJ04A",115,0)
 S PTF("localId")=ID,PTF("uid")=$$SETUID^VPRUTILS("ptf",DFN,ID)
"RTN","VPRDJ04A",116,0)
 S P=$L(ID,";"),TYPE=$P(ID,";",P) S:TYPE="DXLS" PTF("principalDx")="true"
"RTN","VPRDJ04A",117,0)
 S X=$$ICDDX^ICDCODE($P(TMP,U),$P(TMP,U,2)),Y=$S($P(X,U,4)'="":$P(X,U,4),1:$P(X,U,2))
"RTN","VPRDJ04A",118,0)
 S PTF("icdCode")=$$SETNCS^VPRUTILS("icd",$P(X,U,2)),PTF("icdName")=Y
"RTN","VPRDJ04A",119,0)
 S DIS=$P(TMP,U,2) S:DIS VAINDT=DIS-.0001 D INP^VADPT
"RTN","VPRDJ04A",120,0)
 S ADM=+$G(VAIN(7)),HLOC=+$G(^DIC(42,+$G(VAIN(4)),44))
"RTN","VPRDJ04A",121,0)
 S:ADM PTF("arrivalDateTime")=$$JSONDT^VPRUTILS(ADM)
"RTN","VPRDJ04A",122,0)
 S:DIS PTF("dischargeDateTime")=$$JSONDT^VPRUTILS(DIS)
"RTN","VPRDJ04A",123,0)
 S FAC=$$FAC^VPRD(HLOC)
"RTN","VPRDJ04A",124,0)
 S VISIT=+$$VISIT(DFN,ADM) I VISIT D
"RTN","VPRDJ04A",125,0)
 . S PTF("encounterUid")=$$SETUID^VPRUTILS("visit",DFN,VISIT)
"RTN","VPRDJ04A",126,0)
 . S PTF("encounterName")=$$NAME^VPRDJ04(VISIT) Q:FAC
"RTN","VPRDJ04A",127,0)
 . S X0=$G(^AUPNVSIT(+VISIT,0)),FAC=+$P(X0,U,6)
"RTN","VPRDJ04A",128,0)
 . S:FAC X=$$STA^XUAF4(FAC)_U_$P($$NS^XUAF4(FAC),U)
"RTN","VPRDJ04A",129,0)
 . S:'FAC X=$$FAC^VPRD(+$P(X0,U,22)) ;location
"RTN","VPRDJ04A",130,0)
 D:FAC FACILITY^VPRUTILS(FAC,"PTF")
"RTN","VPRDJ04A",131,0)
 D ADD^VPRDJ("PTF","ptf")
"RTN","VPRDJ04A",132,0)
 Q
"RTN","VPRDJ04A",133,0)
 ;
"RTN","VPRDJ04A",134,0)
VISIT(DFN,DATE) ; -- Return visit# for admission
"RTN","VPRDJ04A",135,0)
 N X,Y
"RTN","VPRDJ04A",136,0)
 S X=9999999-$P(DATE,".")_"."_$P(DATE,".",2)
"RTN","VPRDJ04A",137,0)
 S Y=+$O(^AUPNVSIT("AAH",DFN,X,0))
"RTN","VPRDJ04A",138,0)
 Q Y
"RTN","VPRDJ05")
0^8^B76359424^n/a
"RTN","VPRDJ05",1,0)
VPRDJ05 ;SLC/MKB -- Medications by order ;8/2/11  15:29
"RTN","VPRDJ05",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 317
"RTN","VPRDJ05",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ05",4,0)
 ;
"RTN","VPRDJ05",5,0)
 ; External References: see VPRDJ05V for DBIA list
"RTN","VPRDJ05",6,0)
 ;
"RTN","VPRDJ05",7,0)
 ; All tags expect DFN, ID, [VPRSTART, VPRSTOP, VPRMAX, VPRTEXT]
"RTN","VPRDJ05",8,0)
 ;
"RTN","VPRDJ05",9,0)
PS1(ID) ; -- med order
"RTN","VPRDJ05",10,0)
 N ORPK,TYPE S ID=+$G(ID)
"RTN","VPRDJ05",11,0)
 S ORPK=$$PKGID^ORX8(ID),TYPE=$E(ORPK,$L(ORPK)) S:TYPE=+TYPE TYPE="R"
"RTN","VPRDJ05",12,0)
 ;
"RTN","VPRDJ05",13,0)
 N ORUPCHUK,ORVP,ORPCL,ORDUZ,ORODT,ORSTRT,ORSTOP,ORL,ORTO,ORSTS,ORNP,ORPV,ORTX
"RTN","VPRDJ05",14,0)
 N MED,CLS,OI,X,LOC,FAC,DRUG,DA,CNT,VPRESP
"RTN","VPRDJ05",15,0)
 S X=$S(ORPK:$E(ORPK,$L(ORPK)),1:"Z") S:X=+X X="R" ;last char = PS file
"RTN","VPRDJ05",16,0)
 S CLS=$S("RSN"[X:"O","UV"[X:"I",1:$$GET1^DIQ(100,ID_",",10,"I"))
"RTN","VPRDJ05",17,0)
 S MED("uid")=$$SETUID^VPRUTILS("med",DFN,ID)
"RTN","VPRDJ05",18,0)
 S MED("orders",1,"orderUid")=$$SETUID^VPRUTILS("order",DFN,ID)
"RTN","VPRDJ05",19,0)
 S X=$$GET1^DIQ(100,ID_",",9,"I") S:X MED("orders",1,"predecessor")=$$SETUID^VPRUTILS("med",DFN,+X)
"RTN","VPRDJ05",20,0)
 S X=$$GET1^DIQ(100,ID_",",9.1,"I") S:X MED("orders",1,"successor")=$$SETUID^VPRUTILS("med",DFN,+X)
"RTN","VPRDJ05",21,0)
 S:ORPK MED("localId")=ORPK_";"_CLS
"RTN","VPRDJ05",22,0)
 D EN^ORX8(ID) S X="" F  S X=$O(ORUPCHUK(X)) Q:X=""  S:$D(ORUPCHUK(X))#2 @X=ORUPCHUK(X)
"RTN","VPRDJ05",23,0)
 S:$G(ORODT) MED("orders",1,"ordered")=$$JSONDT^VPRUTILS(ORODT)
"RTN","VPRDJ05",24,0)
 S:$G(ORNP) MED("orders",1,"providerUid")=$$SETUID^VPRUTILS("user",,+ORNP),MED("orders",1,"providerName")=$P(ORNP,U,2)
"RTN","VPRDJ05",25,0)
 S LOC=+$G(ORL),FAC=$$FAC^VPRD(LOC) I LOC D
"RTN","VPRDJ05",26,0)
 . S MED("orders",1,"locationUid")=$$SETUID^VPRUTILS("location",,LOC)
"RTN","VPRDJ05",27,0)
 . S MED("orders",1,"locationName")=$P(^SC(LOC,0),U)
"RTN","VPRDJ05",28,0)
 D FACILITY^VPRUTILS(FAC,"MED")
"RTN","VPRDJ05",29,0)
 S:$G(ORSTRT) MED("overallStart")=$$JSONDT^VPRUTILS(ORSTRT)
"RTN","VPRDJ05",30,0)
 S:$G(ORSTOP) (MED("stopped"),MED("overallStop"))=$$JSONDT^VPRUTILS(ORSTOP)
"RTN","VPRDJ05",31,0)
 S MED("vaStatus")=$P($G(ORSTS),U,2)
"RTN","VPRDJ05",32,0)
 S MED("medStatusName")=$$STATUS^VPRDPSOR(+$G(ORSTS))
"RTN","VPRDJ05",33,0)
 S MED("medStatus")=$$MEDSTAT^VPRDJ05V(MED("medStatusName"))
"RTN","VPRDJ05",34,0)
 I CLS="I" D
"RTN","VPRDJ05",35,0)
 . S:$P($G(^SC(+$G(LOC),0)),U,25) MED("IMO")="true"
"RTN","VPRDJ05",36,0)
 . S X=$P($G(^OR(100,ID,3)),U,9) S:X MED("parent")=X
"RTN","VPRDJ05",37,0)
 I ORPK D OEL^PSOORRL(DFN,ORPK_";"_CLS)
"RTN","VPRDJ05",38,0)
 S X=$S(ORPK["N":"N",1:CLS),MED("vaType")=X,MED("medType")=$$TYPE^VPRDJ05V(X)
"RTN","VPRDJ05",39,0)
 I CLS="O" S MED("type")=$S(ORPK["N":"OTC",1:"Prescription")
"RTN","VPRDJ05",40,0)
 S X=$G(VPRESP("COMMENT",1)) S:$L(X) MED("comment")=X
"RTN","VPRDJ05",41,0)
 I $$ISIV^VPRDJ05V G IV1^VPRDJ05V
"RTN","VPRDJ05",42,0)
 ;
"RTN","VPRDJ05",43,0)
A ; - Get order responses
"RTN","VPRDJ05",44,0)
 S OI=$$OI^ORX8(ID) I OI D
"RTN","VPRDJ05",45,0)
 . S X=$P(OI,U,2) S:$E(X,$L(X))=" " X=$E(X,1,$L(X)-1)
"RTN","VPRDJ05",46,0)
 . S MED("name")=X
"RTN","VPRDJ05",47,0)
 . D ZERO^PSS50P7(+$P(OI,U,3),,,"PSOI")
"RTN","VPRDJ05",48,0)
 . S MED("productFormName")=$P($G(^TMP($J,"PSOI",+$P(OI,U,3),.02)),U,2)
"RTN","VPRDJ05",49,0)
 . S:+$G(^TMP($J,"PSOI",+$P(OI,U,3),.09)) MED("supply")="true"
"RTN","VPRDJ05",50,0)
 D RESP^VPRDPSOR(ID,.VPRESP) ;order responses
"RTN","VPRDJ05",51,0)
 S DRUG=+$G(^TMP("PS",$J,"DD",1,0)) S:'DRUG DRUG=+$G(VPRESP("DRUG",1))
"RTN","VPRDJ05",52,0)
 S MED("sig")=$S(CLS="I":"Give: ",1:"")_$G(VPRESP("SIG",1)) ;ORTX(2)
"RTN","VPRDJ05",53,0)
 I CLS="O",'$L($G(VPRESP("SIG",1))),'$D(VPRESP("INSTR")) S MED("sig")=$G(VPRESP("COMMENT",1)) ;old Rx
"RTN","VPRDJ05",54,0)
 ;
"RTN","VPRDJ05",55,0)
B ; - Get dosages
"RTN","VPRDJ05",56,0)
 I '$O(^OR(100,ID,2,0)) D  ;single dose or OP
"RTN","VPRDJ05",57,0)
 . N VPRY,START,STOP,DUR,CONJ,MIN
"RTN","VPRDJ05",58,0)
 . S START=$G(ORSTRT),STOP=$G(ORSTOP),MIN=0
"RTN","VPRDJ05",59,0)
 . S CNT=0 F  S CNT=$O(VPRESP("INSTR",CNT)) Q:CNT<1  D
"RTN","VPRDJ05",60,0)
 .. K VPRY D DOSE(.VPRY,CNT) M MED("dosages",CNT)=VPRY
"RTN","VPRDJ05",61,0)
 .. ;determine start & stop per dose
"RTN","VPRDJ05",62,0)
 .. S MED("dosages",CNT,"relativeStart")=MIN
"RTN","VPRDJ05",63,0)
 .. S DUR=$G(VPRY("complexDuration")),CONJ=$G(VPRY("complexConjunction"))
"RTN","VPRDJ05",64,0)
 .. S STOP=$S(DUR:$$STOP(START,DUR),1:STOP)
"RTN","VPRDJ05",65,0)
 .. S:START MED("dosages",CNT,"start")=$$JSONDT^VPRUTILS(START)
"RTN","VPRDJ05",66,0)
 .. S:STOP MED("dosages",CNT,"stop")=$$JSONDT^VPRUTILS(STOP)
"RTN","VPRDJ05",67,0)
 .. S X=$$RELTIME(START,STOP,DUR,MIN),MED("dosages",CNT,"relativeStop")=$S($E(X)=".":0_X,1:X)
"RTN","VPRDJ05",68,0)
 .. I $E(CONJ)="T",DUR S START=STOP,MIN=X
"RTN","VPRDJ05",69,0)
 I $O(^OR(100,ID,2,0)) D
"RTN","VPRDJ05",70,0)
 . N DD,CONJ,VPRY,MIN
"RTN","VPRDJ05",71,0)
 . M CONJ=VPRESP("CONJ"),DUR=VPRESP("DAYS") S MIN=0
"RTN","VPRDJ05",72,0)
 . S (DA,CNT)=0 F  S DA=$O(^OR(100,ID,2,DA)) Q:DA<1  D  ;child orders
"RTN","VPRDJ05",73,0)
 .. K VPRESP,VPRY D RESP^VPRDPSOR(DA,.VPRESP),DOSE(.VPRY,1)
"RTN","VPRDJ05",74,0)
 .. S CNT=CNT+1 M MED("dosages",CNT)=VPRY
"RTN","VPRDJ05",75,0)
 .. S MED("dosages",CNT,"relativeStart")=MIN
"RTN","VPRDJ05",76,0)
 .. S MED("dosages",CNT,"complexConjunction")=$G(CONJ(CNT))
"RTN","VPRDJ05",77,0)
 .. S MED("dosages",CNT,"complexDuration")=$G(DUR(CNT))
"RTN","VPRDJ05",78,0)
 .. S MED("dosages",CNT,"relatedOrder")=DA
"RTN","VPRDJ05",79,0)
 .. S X=$P($G(^OR(100,DA,0)),U,8,9)
"RTN","VPRDJ05",80,0)
 .. S:$P(X,U) MED("dosages",CNT,"start")=$$JSONDT^VPRUTILS($P(X,U))
"RTN","VPRDJ05",81,0)
 .. S:$P(X,U,2) MED("dosages",CNT,"stop")=$$JSONDT^VPRUTILS($P(X,U,2))
"RTN","VPRDJ05",82,0)
 .. I $P(X,U,2)>$G(ORSTOP) S ORSTOP=$P(X,U,2) ;get last stop time
"RTN","VPRDJ05",83,0)
 .. S X=$$RELTIME($P(X,U),$P(X,U,2),$G(DUR(CNT)),MIN)
"RTN","VPRDJ05",84,0)
 .. S MED("dosages",CNT,"relativeStop")=$S($E(X)=".":0_X,1:X) S:$G(CONJ(CNT))="T" MIN=X
"RTN","VPRDJ05",85,0)
 .. S:'DRUG DD=+$G(VPRESP("DRUG",1)),DD(DD,DA)="" ;dispense drug(s)
"RTN","VPRDJ05",86,0)
 .. ; get ^TMP("PS",$J) from 1st child, if Inpt parent:
"RTN","VPRDJ05",87,0)
 .. I '$D(^TMP("PS",$J)) S ORPK=$$PKGID^ORX8(DA) D OEL^PSOORRL(DFN,ORPK_";"_CLS)
"RTN","VPRDJ05",88,0)
 . S MED("stopped")=$$JSONDT^VPRUTILS($G(ORSTOP)) ;reset from last child order
"RTN","VPRDJ05",89,0)
 . S DD=$O(DD(0)) I DD,'$O(DD(DD)) S DRUG=DD Q    ;1 drug for order
"RTN","VPRDJ05",90,0)
 . S (DD,CNT)=0 F  S DD=$O(DD(DD)) Q:DD<1  S DA=0 F  S DA=$O(DD(DD,DA)) Q:DA<1  S CNT=CNT+1 D NDF(DD,CNT,DA)
"RTN","VPRDJ05",91,0)
 ;
"RTN","VPRDJ05",92,0)
C ; - Get OP data
"RTN","VPRDJ05",93,0)
 I CLS="O",ORPK'["N" D
"RTN","VPRDJ05",94,0)
 . S MED("orders",1,"quantityOrdered")=$G(VPRESP("QTY",1))
"RTN","VPRDJ05",95,0)
 . S MED("orders",1,"daysSupply")=$G(VPRESP("SUPPLY",1))
"RTN","VPRDJ05",96,0)
 . S MED("orders",1,"vaRouting")=$G(VPRESP("PICKUP",1))
"RTN","VPRDJ05",97,0)
 . S MED("orders",1,"fillsAllowed")=$G(VPRESP("REFILLS",1))
"RTN","VPRDJ05",98,0)
 . S MED("patientInstruction")=$G(VPRESP("PI",1))
"RTN","VPRDJ05",99,0)
 . Q:ORPK["P"!(ORPK["S")  ;pending
"RTN","VPRDJ05",100,0)
 . N VPR,RX0,RX1,FILL,RFD,MW,REL
"RTN","VPRDJ05",101,0)
 . K ^TMP("PSOR",$J) D EN^PSOORDER(DFN,+ORPK)
"RTN","VPRDJ05",102,0)
 . S RX0=$G(^TMP("PSOR",$J,+ORPK,0)),RX1=$G(^(1)),MED("orders",1,"prescriptionId")=$P(RX0,U,5)
"RTN","VPRDJ05",103,0)
 . I '$G(VPRESP("QTY",1)) S MED("orders",1,"quantityOrdered")=$P(RX0,U,6)
"RTN","VPRDJ05",104,0)
 . I '$G(VPRESP("SUPPLY",1)) S MED("orders",1,"daysSupply")=$P(RX0,U,7)
"RTN","VPRDJ05",105,0)
 . S MED("orders",1,"fillsRemaining")=$P(RX0,U,9),MED("lastFilled")=$$JSONDT^VPRUTILS($P(RX0,U,3))
"RTN","VPRDJ05",106,0)
 . S I=$P(RX0,U,2) I I S FILL(I)=I_"^^^"_$P(RX0,U,6,7)_"^^^"_$P(RX0,U,13)_"^^"_$P(RX1,U,6) ;original fill
"RTN","VPRDJ05",107,0)
 . S I=0 F  S I=$O(^TMP("PSOR",$J,+ORPK,"REF",I)) Q:I<1  S X=$G(^(I,0)),FILL(+X)=X
"RTN","VPRDJ05",108,0)
 . S I=0 F  S I=$O(^TMP("PSOR",$J,+ORPK,"RPAR",I)) Q:I<1  S X=$G(^(I,0)),$P(X,U,14)=1,FILL(+X)=X
"RTN","VPRDJ05",109,0)
 . S (I,RFD)=0 F  S RFD=$O(FILL(RFD)) Q:RFD<1  S X=$G(FILL(RFD)) D  ;sort 1st
"RTN","VPRDJ05",110,0)
 .. S I=I+1,MW=$P($P(X,U,10),";"),REL=$P($P(X,U,8),".")
"RTN","VPRDJ05",111,0)
 .. S MED("fills",I,"dispenseDate")=$$JSONDT^VPRUTILS($P(RFD,"."))
"RTN","VPRDJ05",112,0)
 .. S MED("fills",I,"releaseDate")=$$JSONDT^VPRUTILS(REL)
"RTN","VPRDJ05",113,0)
 .. S MED("fills",I,"routing")=MW
"RTN","VPRDJ05",114,0)
 .. S MED("fills",I,"quantityDispensed")=$P(X,U,4)
"RTN","VPRDJ05",115,0)
 .. S MED("fills",I,"daysSupplyDispensed")=$P(X,U,5)
"RTN","VPRDJ05",116,0)
 .. S:$P(X,U,14) MED("fills",I,"partial")=1 ;"true"
"RTN","VPRDJ05",117,0)
 . S X=$S($P(RX0,U,11):$P(RX0,U,11),$P(RX0,U,10):$P(RX0,U,10),1:0)
"RTN","VPRDJ05",118,0)
 . S:X MED("orders",1,"fillCost")=X
"RTN","VPRDJ05",119,0)
 . S X=$$GET1^PSODI(52,+ORPK_",",26,"I") S:X MED("overallStop")=$$JSONDT^VPRUTILS($P(X,U,2)) ;1^expirationDate
"RTN","VPRDJ05",120,0)
 I CLS="I" D
"RTN","VPRDJ05",121,0)
 . S X=$$GET1^DIQ(55.06,+ORPK_","_DFN_",",25,"I")
"RTN","VPRDJ05",122,0)
 . S:X MED("overallStop")=$$JSONDT^VPRUTILS(X)
"RTN","VPRDJ05",123,0)
 . D BCMA^VPRDJ05V(.MED,DFN,ORPK)
"RTN","VPRDJ05",124,0)
 ;
"RTN","VPRDJ05",125,0)
PSQ ; finish
"RTN","VPRDJ05",126,0)
 D:DRUG NDF(+DRUG)
"RTN","VPRDJ05",127,0)
 S MED("qualifiedName")=$G(MED("name"))
"RTN","VPRDJ05",128,0)
 S X=+$P($G(^TMP("PS",$J,"RXN",0)),U,5)
"RTN","VPRDJ05",129,0)
 S:X MED("orders",1,"pharmacistUid")=$$SETUID^VPRUTILS("user",,X),MED("orders",1,"pharmacistName")=$P($G(^VA(200,X,0)),U)
"RTN","VPRDJ05",130,0)
 K ^TMP("PS",$J),^TMP($J,"PSOI"),^TMP("PSOR",$J)
"RTN","VPRDJ05",131,0)
 D ADD^VPRDJ("MED","med")
"RTN","VPRDJ05",132,0)
 Q
"RTN","VPRDJ05",133,0)
 ;
"RTN","VPRDJ05",134,0)
DOSE(Y,N) ; -- return dosage data from VPRESP(ID,N) to Y("name")
"RTN","VPRDJ05",135,0)
 N X,DUR,CONJ S N=+$G(N,1) K Y
"RTN","VPRDJ05",136,0)
 S X=$P($G(VPRESP("DOSE",N)),"&",1,2) ; units per dose + noun
"RTN","VPRDJ05",137,0)
 S Y("dose")=$S($L(X)>2:$TR(X,"&"," "),1:$P(X,"&"))
"RTN","VPRDJ05",138,0)
 S Y("units")=$P(X,"&",2)
"RTN","VPRDJ05",139,0)
 S X=+$G(VPRESP("ROUTE",N)) D ALL^PSS51P2(X,,,,"VPRTE")
"RTN","VPRDJ05",140,0)
 S Y("routeName")=$G(^TMP($J,"VPRTE",X,1))
"RTN","VPRDJ05",141,0)
 S X=$G(VPRESP("SCHEDULE",N)) I $L(X) S Y("scheduleName")=X D SCH^VPRDJ05V(X)
"RTN","VPRDJ05",142,0)
 S X=$G(VPRESP("ADMIN",N)) S:$L(X) Y("adminTimes")=X
"RTN","VPRDJ05",143,0)
 S X=$G(VPRESP("DAYS",N)) S:$L(X) Y("complexDuration")=X,DUR=X
"RTN","VPRDJ05",144,0)
 S X=$G(VPRESP("CONJ",N)) S:$L(X) Y("complexConjunction")=X,CONJ=X
"RTN","VPRDJ05",145,0)
 I $L($G(CONJ)),'$L($G(DUR)) D  ;look ahead to find duration
"RTN","VPRDJ05",146,0)
 . N I,D S I=$O(VPRESP("DAYS",N)),D=$S(I:$G(VPRESP("DAYS",I)),1:"")
"RTN","VPRDJ05",147,0)
 . S:$L(D) Y("complexDuration")=D
"RTN","VPRDJ05",148,0)
 K ^TMP($J,"VPRTE")
"RTN","VPRDJ05",149,0)
 Q
"RTN","VPRDJ05",150,0)
 ;
"RTN","VPRDJ05",151,0)
STOP(BEG,X) ; -- Return date after adding X to BEG
"RTN","VPRDJ05",152,0)
 N D,H,M,UNT,Y
"RTN","VPRDJ05",153,0)
 S Y=BEG,(D,H,M)=0,UNT=$P(X,+X,2),X=+X
"RTN","VPRDJ05",154,0)
 S UNT=$S($E(UNT)=" ":$E(UNT,2),1:$E(UNT)) I UNT="" S UNT="D"
"RTN","VPRDJ05",155,0)
 S:UNT="L" D=30*X
"RTN","VPRDJ05",156,0)
 S:UNT="W" D=7*X
"RTN","VPRDJ05",157,0)
 S:UNT="D" D=X
"RTN","VPRDJ05",158,0)
 S:UNT="H" H=X
"RTN","VPRDJ05",159,0)
 S:UNT="M" M=X
"RTN","VPRDJ05",160,0)
 S Y=$$FMADD^XLFDT(BEG,D,H,M)
"RTN","VPRDJ05",161,0)
 Q Y
"RTN","VPRDJ05",162,0)
 ;
"RTN","VPRDJ05",163,0)
NDF(DRUG,VPI,ORD) ; -- Set NDF data for dispense DRUG ien
"RTN","VPRDJ05",164,0)
 ; code ^ name ^ vuid [^ role ^ concentration ^ order]
"RTN","VPRDJ05",165,0)
 N LEN,VPRX,STR,VUID,X,I
"RTN","VPRDJ05",166,0)
 S DRUG=+$G(DRUG) Q:'DRUG
"RTN","VPRDJ05",167,0)
 D EN^PSSDI(50,,50,"901;902",DRUG,"VPRX")
"RTN","VPRDJ05",168,0)
 S STR=$S($G(VPRX(50,DRUG,901)):$G(VPRX(50,DRUG,901))_" "_$G(VPRX(50,DRUG,902)),1:"")
"RTN","VPRDJ05",169,0)
 D NDF^PSS50(DRUG,,,,,"NDF") S VPI=+$G(VPI,1)
"RTN","VPRDJ05",170,0)
 ;
"RTN","VPRDJ05",171,0)
 S MED("products",VPI,"ingredientRole")="urn:sct:410942007" ;Drug
"RTN","VPRDJ05",172,0)
 S:$G(ORD) MED("products",VPI,"relatedOrder")=ORD
"RTN","VPRDJ05",173,0)
 S:$G(STR) MED("products",VPI,"strength")=STR
"RTN","VPRDJ05",174,0)
 S X=$G(MED("name")) S:$L(X) MED("products",VPI,"ingredientName")=X
"RTN","VPRDJ05",175,0)
 ;
"RTN","VPRDJ05",176,0)
 S X=$G(^TMP($J,"NDF",DRUG,20)) ;VA Generic
"RTN","VPRDJ05",177,0)
 S MED("products",VPI,"ingredientCode")="urn:va:vuid:"_$$VUID^VPRD(+X,50.6)
"RTN","VPRDJ05",178,0)
 S MED("products",VPI,"ingredientCodeName")=$P(X,U,2)
"RTN","VPRDJ05",179,0)
 ;
"RTN","VPRDJ05",180,0)
 S X=$G(^TMP($J,"NDF",DRUG,22)) ;VA Product
"RTN","VPRDJ05",181,0)
 S MED("products",VPI,"suppliedCode")="urn:va:vuid:"_$$VUID^VPRD(+X,50.68)
"RTN","VPRDJ05",182,0)
 S MED("products",VPI,"suppliedName")=$P(X,U,2)
"RTN","VPRDJ05",183,0)
 ;
"RTN","VPRDJ05",184,0)
 S X=$G(^TMP($J,"NDF",DRUG,25)) ;VA Drug Class
"RTN","VPRDJ05",185,0)
 S MED("products",VPI,"drugClassCode")="urn:vadc:"_$P(X,U,2)
"RTN","VPRDJ05",186,0)
 S MED("products",VPI,"drugClassName")=$P(X,U,3)
"RTN","VPRDJ05",187,0)
 ;
"RTN","VPRDJ05",188,0)
 K ^TMP($J,"NDF")
"RTN","VPRDJ05",189,0)
 Q
"RTN","VPRDJ05",190,0)
 ;
"RTN","VPRDJ05",191,0)
RELTIME(START,STOP,DUR,MIN) ; -- Return #min for dose
"RTN","VPRDJ05",192,0)
 N Y S Y=0
"RTN","VPRDJ05",193,0)
 I START>0,STOP>0 S Y=$$FMDIFF^XLFDT(STOP,START,2)\60 I 1
"RTN","VPRDJ05",194,0)
 E  I DUR S Y=$$TOMIN(DUR) I 1
"RTN","VPRDJ05",195,0)
 E  S Y=$G(VPRESP("SUPPLY",1))*1440
"RTN","VPRDJ05",196,0)
 S Y=$S(Y:Y+MIN,1:MIN)
"RTN","VPRDJ05",197,0)
 Q Y
"RTN","VPRDJ05",198,0)
 ;
"RTN","VPRDJ05",199,0)
TOMIN(DUR) ;
"RTN","VPRDJ05",200,0)
 N RESULT,TIME,UNIT
"RTN","VPRDJ05",201,0)
 S UNIT=$$UP^XLFSTR($E($P(DUR," ",2)))
"RTN","VPRDJ05",202,0)
 I UNIT="" Q 0
"RTN","VPRDJ05",203,0)
 S TIME=$P(DUR," ")
"RTN","VPRDJ05",204,0)
 S RESULT=$S(UNIT="M":TIME,UNIT="H":TIME*60,UNIT="D":TIME*1440,UNIT="W":TIME*10080,UNIT="L":TIME*43200,1:0)
"RTN","VPRDJ05",205,0)
 Q RESULT
"RTN","VPRDJ05V")
0^18^B45875553^n/a
"RTN","VPRDJ05V",1,0)
VPRDJ05V ;SLC/MKB -- IV/Infusions ;8/2/11  15:29
"RTN","VPRDJ05V",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 317
"RTN","VPRDJ05V",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ05V",4,0)
 ;
"RTN","VPRDJ05V",5,0)
 ; External References          DBIA#
"RTN","VPRDJ05V",6,0)
 ; -------------------          -----
"RTN","VPRDJ05V",7,0)
 ; ^OR(100                       5771
"RTN","VPRDJ05V",8,0)
 ; ^ORD(100.98                    873
"RTN","VPRDJ05V",9,0)
 ; ^ORD(101.43                   2843
"RTN","VPRDJ05V",10,0)
 ; ^PSB(53.79                    5909
"RTN","VPRDJ05V",11,0)
 ; ^SC                          10040
"RTN","VPRDJ05V",12,0)
 ; ^VA(200                      10060
"RTN","VPRDJ05V",13,0)
 ; DIQ                           2056
"RTN","VPRDJ05V",14,0)
 ; ORQ1,^TMP("ORR"               3154
"RTN","VPRDJ05V",15,0)
 ; ORX8                     2467,3071
"RTN","VPRDJ05V",16,0)
 ; PSODI                         4858
"RTN","VPRDJ05V",17,0)
 ; PSOORDER,^TMP("PSOR"          1878
"RTN","VPRDJ05V",18,0)
 ; PSOORRL,^TMP("PS"             2400
"RTN","VPRDJ05V",19,0)
 ; PSS50                         4483
"RTN","VPRDJ05V",20,0)
 ; PSS50P7                       4662
"RTN","VPRDJ05V",21,0)
 ; PSS51P1                       4546
"RTN","VPRDJ05V",22,0)
 ; PSS51P2                       4548
"RTN","VPRDJ05V",23,0)
 ; PSS52P6                       4549
"RTN","VPRDJ05V",24,0)
 ; PSS52P7                       4550
"RTN","VPRDJ05V",25,0)
 ; PSSDI                         4551
"RTN","VPRDJ05V",26,0)
 ; XLFDT                        10103
"RTN","VPRDJ05V",27,0)
 ; XLFSTR                       10104
"RTN","VPRDJ05V",28,0)
 ;
"RTN","VPRDJ05V",29,0)
 ; All tags expect DFN, ID, [VPRSTART, VPRSTOP, VPRMAX, VPRTEXT]
"RTN","VPRDJ05V",30,0)
 ;
"RTN","VPRDJ05V",31,0)
ISIV() ; -- Return 1 or 0, if order is for IV/infusion
"RTN","VPRDJ05V",32,0)
 I ORPK["V" Q 1
"RTN","VPRDJ05V",33,0)
 I $P($G(ORTO),U,2)?1"IV".E Q 1
"RTN","VPRDJ05V",34,0)
 I +$G(ORPCL)=130 Q 1
"RTN","VPRDJ05V",35,0)
 I $G(^TMP("PS",$J,"B",0)) Q 1
"RTN","VPRDJ05V",36,0)
 Q 0
"RTN","VPRDJ05V",37,0)
 ;
"RTN","VPRDJ05V",38,0)
IV1 ; -- IV fluid, Infusion order [continued from VPRDJ05]
"RTN","VPRDJ05V",39,0)
 ; [Also expects ORPK, OEL^PSOORRL data]
"RTN","VPRDJ05V",40,0)
 N PS,PS0,X,X0,RTE,I,ADD,BASE
"RTN","VPRDJ05V",41,0)
 S MED("vaType")="V",MED("medType")="urn:sct:105903003"
"RTN","VPRDJ05V",42,0)
 S (ADD,BASE)=""
"RTN","VPRDJ05V",43,0)
 I ORPK,$D(^TMP("PS",$J)) D  G IVQ
"RTN","VPRDJ05V",44,0)
 . M PS=^TMP("PS",$J) S PS0=$G(PS(0)),MED("name")=$P(PS0,U)
"RTN","VPRDJ05V",45,0)
 . S X=$G(PS("MDR",1,0)) S:$L(X) MED("dosages",1,"routeName")=X
"RTN","VPRDJ05V",46,0)
 . S X=$P($G(PS("SCH",1,0)),U) I $L(X) D
"RTN","VPRDJ05V",47,0)
 .. S MED("dosages",1,"scheduleName")=X
"RTN","VPRDJ05V",48,0)
 .. N Y D SCH(X)
"RTN","VPRDJ05V",49,0)
 .. M MED("dosages",1)=Y
"RTN","VPRDJ05V",50,0)
 . S X=$G(PS("ADM",1,0)) S:$L(X) MED("dosages",1,"adminTimes")=X
"RTN","VPRDJ05V",51,0)
 . S X=$P(PS0,U,2) I X["INFUSE OVER" S MED("dosages",1,"duration")=X
"RTN","VPRDJ05V",52,0)
 . E  S MED("dosages",1,"ivRate")=X
"RTN","VPRDJ05V",53,0)
 . S X=$G(PS("IVLIM",0)) S:$L(X) MED("dosages",1,"restriction")=$$IVLIM(X)
"RTN","VPRDJ05V",54,0)
 . S X=+$P($G(PS("RXN",0)),U,5)
"RTN","VPRDJ05V",55,0)
 . S:X MED("orders",1,"pharmacistUid")=$$SETUID^VPRUTILS("user",,X),MED("orders",1,"pharmacistName")=$P($G(^VA(200,X,0)),U)
"RTN","VPRDJ05V",56,0)
 . D IVP
"RTN","VPRDJ05V",57,0)
 ; no med in PS (pending or cancelled), so use Order values
"RTN","VPRDJ05V",58,0)
 S RTE=+$$VALUE^ORX8(ID,"ROUTE") I RTE D
"RTN","VPRDJ05V",59,0)
 . D ALL^PSS51P2(RTE,,,,"VPRTE")
"RTN","VPRDJ05V",60,0)
 . S MED("dosages",1,"routeName")=$G(^TMP($J,"VPRTE",RTE,1))
"RTN","VPRDJ05V",61,0)
 S X=$$VALUE^ORX8(ID,"SCHEDULE") I $L(X) D
"RTN","VPRDJ05V",62,0)
 . S MED("dosages",1,"scheduleName")=X
"RTN","VPRDJ05V",63,0)
 . N Y D SCH(X)
"RTN","VPRDJ05V",64,0)
 . M MED("dosages",1)=Y
"RTN","VPRDJ05V",65,0)
 S X=$$VALUE^ORX8(ID,"ADMIN") S:$L(X) MED("dosages",1,"adminTimes")=X
"RTN","VPRDJ05V",66,0)
 S X=$$VALUE^ORX8(ID,"RATE")
"RTN","VPRDJ05V",67,0)
 I X["INFUSE OVER" S MED("dosages",1,"duration")=X
"RTN","VPRDJ05V",68,0)
 E  S MED("dosages",1,"ivRate")=X
"RTN","VPRDJ05V",69,0)
 S I=0 F  S I=$O(^OR(100,ID,.1,I)) Q:I<1  S X=+$G(^(I,0)) D
"RTN","VPRDJ05V",70,0)
 . S X0=$G(^ORD(101.43,X,0)),MED("name")=$P(X0,U)
"RTN","VPRDJ05V",71,0)
 . S MED("products",I,"ingredientName")=$P(X0,U)
"RTN","VPRDJ05V",72,0)
 S X=$$VALUE^ORX8(ID,"DAYS") I $L(X) D  S MED("dosages",1,"restriction")=X
"RTN","VPRDJ05V",73,0)
 . I X?1.A1.N S X=$$IVLIM(X) Q
"RTN","VPRDJ05V",74,0)
 . ; CPRS format = "for a total of 3 doses" or "with total volume 100ml"
"RTN","VPRDJ05V",75,0)
 . F I=1:1:$L(X) I $E(X,I)=+$E(X,I) S X=$E(X,I,$L(X)) Q
"RTN","VPRDJ05V",76,0)
IVQ ; done
"RTN","VPRDJ05V",77,0)
 K ^TMP("PS",$J),^TMP($J,"VPRTE")
"RTN","VPRDJ05V",78,0)
 S MED("qualifiedName")=ADD_$S($L(ADD)&$L(BASE):" in ",1:"")_BASE
"RTN","VPRDJ05V",79,0)
 D BCMA(.MED,DFN,ORPK)
"RTN","VPRDJ05V",80,0)
 D ADD^VPRDJ("MED","med")
"RTN","VPRDJ05V",81,0)
 Q
"RTN","VPRDJ05V",82,0)
 ;
"RTN","VPRDJ05V",83,0)
IVP ; -- add IV products
"RTN","VPRDJ05V",84,0)
 ; [expects PS("A") & PS("B") data arrays from IV1]
"RTN","VPRDJ05V",85,0)
 N VPI,N,NAME,IEN,DRUG,OI,X S N=0
"RTN","VPRDJ05V",86,0)
 ; IV Additives
"RTN","VPRDJ05V",87,0)
 S VPI=0 F  S VPI=$O(PS("A",VPI)) Q:VPI<1  D
"RTN","VPRDJ05V",88,0)
 . K ^TMP($J,"VPRPSIV") S NAME=$P($G(PS("A",VPI,0)),U)
"RTN","VPRDJ05V",89,0)
 . D ZERO^PSS52P6("",NAME,"","VPRPSIV")
"RTN","VPRDJ05V",90,0)
 . S IEN=$O(^TMP($J,"VPRPSIV",0)),DRUG=+$G(^(IEN,1)) Q:IEN<1
"RTN","VPRDJ05V",91,0)
 . S OI=$G(^TMP($J,"VPRPSIV",IEN,15)) S:OI NAME=$$NAME(+OI)
"RTN","VPRDJ05V",92,0)
 . S N=N+1 D:DRUG NDF(DRUG,N,"A",NAME)
"RTN","VPRDJ05V",93,0)
 . S MED("products",N,"strength")=$P($G(PS("A",VPI,0)),U,2)
"RTN","VPRDJ05V",94,0)
 ; IV Base Solutions
"RTN","VPRDJ05V",95,0)
 S VPI=0 F  S VPI=$O(PS("B",VPI)) Q:VPI<1  D
"RTN","VPRDJ05V",96,0)
 . K ^TMP($J,"VPRPSIV") S NAME=$P($G(PS("B",VPI,0)),U)
"RTN","VPRDJ05V",97,0)
 . D ZERO^PSS52P7("",NAME,"","VPRPSIV")
"RTN","VPRDJ05V",98,0)
 . S IEN=$O(^TMP($J,"VPRPSIV",0)),DRUG=+$G(^(IEN,1)) Q:IEN<1
"RTN","VPRDJ05V",99,0)
 . S OI=$G(^TMP($J,"VPRPSIV",IEN,9)) S:OI NAME=$$NAME(+OI)
"RTN","VPRDJ05V",100,0)
 . S N=N+1 D:DRUG NDF(DRUG,N,"B",NAME)
"RTN","VPRDJ05V",101,0)
 . S MED("products",N,"volume")=$P($G(PS("B",VPI,0)),U,2)
"RTN","VPRDJ05V",102,0)
 K ^TMP($J,"VPRPSIV")
"RTN","VPRDJ05V",103,0)
 Q 
"RTN","VPRDJ05V",104,0)
 ;
"RTN","VPRDJ05V",105,0)
NAME(PSOI) ; -- return name_form of PS orderable item
"RTN","VPRDJ05V",106,0)
 N Y,VPRX S PSOI=+$G(PSOI),Y=""
"RTN","VPRDJ05V",107,0)
 D EN^PSSDI(50.7,,50.7,".01;.02",PSOI,"VPRX")
"RTN","VPRDJ05V",108,0)
 S:$D(VPRX) Y=$G(VPRX(50.7,PSOI,.01))_" "_$G(VPRX(50.7,PSOI,.02))
"RTN","VPRDJ05V",109,0)
 Q Y
"RTN","VPRDJ05V",110,0)
 ;
"RTN","VPRDJ05V",111,0)
NDF(DRUG,VPI,ROLE,OI) ; -- Set NDF data for dispense DRUG ien
"RTN","VPRDJ05V",112,0)
 ; code ^ name ^ vuid ^ role ^ concentration
"RTN","VPRDJ05V",113,0)
 N VPRX,VUID,X,I,CONC,NM
"RTN","VPRDJ05V",114,0)
 S DRUG=+$G(DRUG) Q:'DRUG
"RTN","VPRDJ05V",115,0)
 D NDF^PSS50(DRUG,,,,,"NDF")
"RTN","VPRDJ05V",116,0)
 S CONC=$P($G(PS(ROLE,VPI,0)),U,2),NM=""
"RTN","VPRDJ05V",117,0)
 ;
"RTN","VPRDJ05V",118,0)
 S MED("products",VPI,"ingredientRole")=$$ROLE(ROLE)
"RTN","VPRDJ05V",119,0)
 S OI=$G(OI) S:$L(OI) MED("products",VPI,"ingredientName")=OI,NM=OI
"RTN","VPRDJ05V",120,0)
 ; NM=X
"RTN","VPRDJ05V",121,0)
 ;
"RTN","VPRDJ05V",122,0)
 S X=$G(^TMP($J,"NDF",DRUG,20)) I X D  ;VA Generic
"RTN","VPRDJ05V",123,0)
 . S MED("products",VPI,"ingredientCode")="urn:va:vuid:"_$$VUID^VPRD(+X,50.6)
"RTN","VPRDJ05V",124,0)
 . S MED("products",VPI,"ingredientCodeName")=$P(X,U,2)
"RTN","VPRDJ05V",125,0)
 ;
"RTN","VPRDJ05V",126,0)
 S X=$G(^TMP($J,"NDF",DRUG,22)) I X D  ;VA Product
"RTN","VPRDJ05V",127,0)
 . S MED("products",VPI,"suppliedCode")="urn:va:vuid:"_$$VUID^VPRD(+X,50.68)
"RTN","VPRDJ05V",128,0)
 . S MED("products",VPI,"suppliedName")=$P(X,U,2)_" "_CONC
"RTN","VPRDJ05V",129,0)
 . S:NM="" NM=$P(X,U,2)
"RTN","VPRDJ05V",130,0)
 ;
"RTN","VPRDJ05V",131,0)
 S X=$G(^TMP($J,"NDF",DRUG,25)) I X D  ;VA Drug Class
"RTN","VPRDJ05V",132,0)
 . S MED("products",VPI,"drugClassCode")="urn:vadc:"_$P(X,U,2)
"RTN","VPRDJ05V",133,0)
 . S MED("products",VPI,"drugClassName")=$P(X,U,3)
"RTN","VPRDJ05V",134,0)
 . S:NM="" NM=$P(X,U,3)
"RTN","VPRDJ05V",135,0)
 ;
"RTN","VPRDJ05V",136,0)
 I $L(NM),ROLE="A" S ADD=ADD_$S($L(ADD):", ",1:"")_NM
"RTN","VPRDJ05V",137,0)
 I $L(NM),ROLE="B" S BASE=BASE_$S($L(BASE):", ",1:"")_NM
"RTN","VPRDJ05V",138,0)
 K ^TMP($J,"NDF",DRUG)
"RTN","VPRDJ05V",139,0)
 Q
"RTN","VPRDJ05V",140,0)
 ;
"RTN","VPRDJ05V",141,0)
IVLIM(X) ; -- Return expanded version of IV Limit X
"RTN","VPRDJ05V",142,0)
 I '$L($G(X)) Q ""
"RTN","VPRDJ05V",143,0)
 N Y,VAL,UNT,I
"RTN","VPRDJ05V",144,0)
 S Y="",X=$$UP^XLFSTR(X)
"RTN","VPRDJ05V",145,0)
 I X?1"DOSES".E S X="A"_$P(X,"DOSES",2)
"RTN","VPRDJ05V",146,0)
 S UNT=$E(X),VAL=0 F I=2:1:$L(X) I $E(X,I) S VAL=$E(X,I,$L(X)) Q
"RTN","VPRDJ05V",147,0)
 I UNT="A" S Y=+VAL_$S(+VAL>1:" doses",1:" dose")
"RTN","VPRDJ05V",148,0)
 I UNT="D" S Y=+VAL_$S(+VAL>1:" days",1:" day")
"RTN","VPRDJ05V",149,0)
 I UNT="H" S Y=+VAL_$S(+VAL>1:" hours",1:" hour")
"RTN","VPRDJ05V",150,0)
 I UNT="C" S Y=+VAL_" CC"
"RTN","VPRDJ05V",151,0)
 I UNT="M" S Y=+VAL_" ml"
"RTN","VPRDJ05V",152,0)
 I UNT="L" S Y=+VAL_" L"
"RTN","VPRDJ05V",153,0)
 Q Y
"RTN","VPRDJ05V",154,0)
 ;
"RTN","VPRDJ05V",155,0)
ROLE(X) ;
"RTN","VPRDJ05V",156,0)
 N RESULT,TXT,Y
"RTN","VPRDJ05V",157,0)
 S RESULT="",TXT="urn:sct:"
"RTN","VPRDJ05V",158,0)
 S RESULT=$S(X="A":TXT_"418804003",X="B":TXT_"418297009",1:TXT_"410942007")
"RTN","VPRDJ05V",159,0)
 Q RESULT
"RTN","VPRDJ05V",160,0)
 ;
"RTN","VPRDJ05V",161,0)
MEDSTAT(X) ;
"RTN","VPRDJ05V",162,0)
 N Y S Y="urn:sct:"
"RTN","VPRDJ05V",163,0)
 S Y=Y_$S(X="active":"55561003",X="historical":"392521001","hold":"421139008",1:"73425007")
"RTN","VPRDJ05V",164,0)
 Q Y
"RTN","VPRDJ05V",165,0)
 ;
"RTN","VPRDJ05V",166,0)
TYPE(VA) ;
"RTN","VPRDJ05V",167,0)
 N RESULT,TXT,Y
"RTN","VPRDJ05V",168,0)
 S RESULT="",TXT="urn:sct:"
"RTN","VPRDJ05V",169,0)
 S RESULT=$S(VA="N":TXT_"329505003",VA="O":TXT_"73639000",1:TXT_"105903003")
"RTN","VPRDJ05V",170,0)
 Q RESULT
"RTN","VPRDJ05V",171,0)
 ;
"RTN","VPRDJ05V",172,0)
SCH(NAME) ; -- Return other schedule info
"RTN","VPRDJ05V",173,0)
 N I K ^TMP($J,"VPRS")
"RTN","VPRDJ05V",174,0)
 I NAME?.E1" PRN" S NAME=$P(NAME," PRN") Q:NAME=""  ;strip off PRN for search
"RTN","VPRDJ05V",175,0)
 D ZERO^PSS51P1("",NAME,"PSJ",,"VPRS")
"RTN","VPRDJ05V",176,0)
 S I=+$O(^TMP($J,"VPRS","B",NAME,0)) Q:'I
"RTN","VPRDJ05V",177,0)
 S Y("scheduleFreq")=+$G(^TMP($J,"VPRS",I,2))
"RTN","VPRDJ05V",178,0)
 S Y("scheduleType")=$P($G(^TMP($J,"VPRS",I,5)),U,2)
"RTN","VPRDJ05V",179,0)
 K ^TMP($J,"VPRS")
"RTN","VPRDJ05V",180,0)
 Q
"RTN","VPRDJ05V",181,0)
 ;
"RTN","VPRDJ05V",182,0)
BCMA(Y,DFN,ORPK) ; -- administration times
"RTN","VPRDJ05V",183,0)
 Q:$G(DFN)<1  Q:$G(ORPK)<1
"RTN","VPRDJ05V",184,0)
 N ADT,DA,CNT,STS S (ADT,CNT)=0
"RTN","VPRDJ05V",185,0)
 F  S ADT=$O(^PSB(53.79,"AORDX",DFN,ORPK,ADT)) Q:ADT<1  D
"RTN","VPRDJ05V",186,0)
 . S DA=0 F  S DA=+$O(^PSB(53.79,"AORDX",DFN,ORPK,ADT,DA)) Q:DA<1  D
"RTN","VPRDJ05V",187,0)
 .. S STS=$$GET1^DIQ(53.79,DA_",",.09) Q:STS="REMOVED"
"RTN","VPRDJ05V",188,0)
 .. S CNT=CNT+1,Y("administrations",CNT,"status")=STS
"RTN","VPRDJ05V",189,0)
 .. S Y("administrations",CNT,"dateTime")=$$JSONDT^VPRUTILS(ADT)
"RTN","VPRDJ05V",190,0)
 Q
"RTN","VPRDJ06")
0^9^B49853799^n/a
"RTN","VPRDJ06",1,0)
VPRDJ06 ;SLC/MKB -- Laboratory ;6/25/12  16:11
"RTN","VPRDJ06",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 317
"RTN","VPRDJ06",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ06",4,0)
 ;
"RTN","VPRDJ06",5,0)
 ; External References          DBIA#
"RTN","VPRDJ06",6,0)
 ; -------------------          -----
"RTN","VPRDJ06",7,0)
 ; ^LAB(60                      10054
"RTN","VPRDJ06",8,0)
 ; ^LR                            525
"RTN","VPRDJ06",9,0)
 ; ^PXRMINDX                     4290
"RTN","VPRDJ06",10,0)
 ; ^TMP("LRRR" [LR7OR1]          2503
"RTN","VPRDJ06",11,0)
 ; DIQ                           2056
"RTN","VPRDJ06",12,0)
 ; LR7OR1,^TMP("LRRR"            2503
"RTN","VPRDJ06",13,0)
 ; LRPXAPI                       4245
"RTN","VPRDJ06",14,0)
 ; LRPXAPIU                      4246
"RTN","VPRDJ06",15,0)
 ; XLFSTR                       10104
"RTN","VPRDJ06",16,0)
 ; XUAF4                         2171
"RTN","VPRDJ06",17,0)
 ;
"RTN","VPRDJ06",18,0)
 ; All tags expect DFN, ID, LRDFN, [VPRSTART, VPRSTOP, VPRMAX, VPRTEXT]
"RTN","VPRDJ06",19,0)
 ;               & ^TMP("LRRR",$J,DFN,VPRSUB,VPRIDT,VPRP),VPRN
"RTN","VPRDJ06",20,0)
 ;
"RTN","VPRDJ06",21,0)
CH1 ; -- lab ID = CH;VPRIDT;VPRN
"RTN","VPRDJ06",22,0)
 N LAB,LRI,X,X0,SPC,LOINC,ORD,CMMT
"RTN","VPRDJ06",23,0)
 M LAB=VPRACC ;get accession info
"RTN","VPRDJ06",24,0)
 S LAB("localId")=ID,LAB("uid")=$$SETUID^VPRUTILS("lab",DFN,ID)
"RTN","VPRDJ06",25,0)
 S LAB("categoryCode")="urn:va:lab-category:CH"
"RTN","VPRDJ06",26,0)
 S LAB("categoryName")="Laboratory"
"RTN","VPRDJ06",27,0)
 S LAB("displayOrder")=VPRP
"RTN","VPRDJ06",28,0)
 S LRI=$G(^LR(LRDFN,"CH",VPRIDT,VPRN))
"RTN","VPRDJ06",29,0)
 S X0=$G(^TMP("LRRR",$J,DFN,"CH",VPRIDT,VPRP)),SPC=+$P(X0,U,19)
"RTN","VPRDJ06",30,0)
 S LAB("typeId")=+X0,LAB("typeName")=$P($G(^LAB(60,+X0,0)),U)
"RTN","VPRDJ06",31,0)
 S:$L($P(X0,U,2)) LAB("result")=$P(X0,U,2)
"RTN","VPRDJ06",32,0)
 S:$L($P(X0,U,4)) LAB("units")=$P(X0,U,4)
"RTN","VPRDJ06",33,0)
 S X=$P(X0,U,5) I $L(X),X["-" S LAB("low")=$$TRIM^XLFSTR($P(X,"-")),LAB("high")=$$TRIM^XLFSTR($P(X,"-",2))
"RTN","VPRDJ06",34,0)
 S X=$P(X0,U,3) I $L(X) D
"RTN","VPRDJ06",35,0)
 . S:X["*" X=$S(X["L":"LL",1:"HH")
"RTN","VPRDJ06",36,0)
 . S LAB("interpretationCode")="urn:hl7:observation-interpretation:"_X
"RTN","VPRDJ06",37,0)
 . S LAB("interpretationName")=$S(X["L":"Low",1:"High")_$S($L(X)>1:" alert",1:"")
"RTN","VPRDJ06",38,0)
 S LAB("displayName")=$S($L($P(X0,U,15)):$P(X0,U,15),1:LAB("test"))
"RTN","VPRDJ06",39,0)
 S ORD=+$P(X0,U,17) S:ORD LAB("labOrderId")=ORD
"RTN","VPRDJ06",40,0)
 S X=$$ORDER^VPRDLR(ORD,+X0) S:X LAB("orderUid")=$$SETUID^VPRUTILS("order",DFN,X)
"RTN","VPRDJ06",41,0)
 S LOINC=$P($P(LRI,U,3),"!",3) ;S:'LOINC LOINC=$$LOINC(+X0,SPC)
"RTN","VPRDJ06",42,0)
 I LOINC S LAB("typeCode")="urn:lnc:"_$$GET1^DIQ(95.3,+LOINC_",",.01),LAB("vuid")="urn:va:vuid:"_$$VUID^VPRD(+LOINC,95.3)
"RTN","VPRDJ06",43,0)
 I 'LOINC S LAB("typeCode")="urn:va:ien:60:"_+X0_":"_SPC
"RTN","VPRDJ06",44,0)
 I $D(^TMP("LRRR",$J,DFN,"CH",VPRIDT,"N")) M CMMT=^("N") S LAB("comment")=$$STRING^VPRD(.CMMT)
"RTN","VPRDJ06",45,0)
 S LAB("statusCode")="urn:va:lab-status:completed",LAB("statusName")="completed"
"RTN","VPRDJ06",46,0)
 D ADD^VPRDJ("LAB","lab")
"RTN","VPRDJ06",47,0)
 Q
"RTN","VPRDJ06",48,0)
 ;
"RTN","VPRDJ06",49,0)
ACC ; -- put accession-level data in VPRACC("attribute")
"RTN","VPRDJ06",50,0)
 N LR0,CDT,SPC,X K VPRACC
"RTN","VPRDJ06",51,0)
 S LR0=$G(^LR(LRDFN,VPRSUB,VPRIDT,0))
"RTN","VPRDJ06",52,0)
 S CDT=9999999-VPRIDT,VPRACC("observed")=$$DATE(CDT)
"RTN","VPRDJ06",53,0)
 S VPRACC("resulted")=$$DATE($P(LR0,U,3)),SPC=+$P(LR0,U,5) I SPC D
"RTN","VPRDJ06",54,0)
 . N IENS,VPRY S IENS=SPC_","
"RTN","VPRDJ06",55,0)
 . D GETS^DIQ(61,IENS,".01;4.1",,"VPRY")
"RTN","VPRDJ06",56,0)
 . S VPRACC("specimen")=$G(VPRY(61,IENS,.01))
"RTN","VPRDJ06",57,0)
 . S VPRACC("sample")=$G(VPRY(61,IENS,4.1))
"RTN","VPRDJ06",58,0)
 S VPRACC("groupUid")=$$SETUID^VPRUTILS("accession",DFN,VPRSUB_";"_VPRIDT)
"RTN","VPRDJ06",59,0)
 S VPRACC("groupName")=$P(LR0,U,6)
"RTN","VPRDJ06",60,0)
 S X=+$P(LR0,U,14) D  D FACILITY^VPRUTILS(X,"VPRACC")
"RTN","VPRDJ06",61,0)
 . S:X X=$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U)
"RTN","VPRDJ06",62,0)
 . I 'X S X=$$FAC^VPRD ;local stn#^name
"RTN","VPRDJ06",63,0)
 Q
"RTN","VPRDJ06",64,0)
 ;
"RTN","VPRDJ06",65,0)
MI ; -- microbiology accession ID = MI;VPRIDT
"RTN","VPRDJ06",66,0)
 N LAB,CDT,LR0,X,ACC,FAC,X0,X1,X2,IDX,VPRM,VPRPX,VPRITM,DA,FLD
"RTN","VPRDJ06",67,0)
 S LAB("localId")=ID,LAB("uid")=$$SETUID^VPRUTILS("lab",DFN,ID)
"RTN","VPRDJ06",68,0)
 S LAB("categoryCode")="urn:va:lab-category:MI"
"RTN","VPRDJ06",69,0)
 S LAB("categoryName")="Microbiology"
"RTN","VPRDJ06",70,0)
 S LAB("statusCode")="urn:va:lab-status:completed",LAB("statusName")="completed"
"RTN","VPRDJ06",71,0)
 S CDT=9999999-VPRIDT,LAB("observed")=$$DATE(CDT)
"RTN","VPRDJ06",72,0)
 S LR0=$G(^LR(LRDFN,"MI",VPRIDT,0))
"RTN","VPRDJ06",73,0)
 S:$P(LR0,U,3) LAB("resulted")=$$DATE($P(LR0,U,3))
"RTN","VPRDJ06",74,0)
 S X=+$P(LR0,U,5) I X D  ;specimen
"RTN","VPRDJ06",75,0)
 . N IENS,VPRY S IENS=X_","
"RTN","VPRDJ06",76,0)
 . D GETS^DIQ(61,IENS,".01;2",,"VPRY")
"RTN","VPRDJ06",77,0)
 . S LAB("specimen")=$G(VPRY(61,IENS,.01))
"RTN","VPRDJ06",78,0)
 . S LAB("sample")=$$GET1^DIQ(61,X_",",4.1)
"RTN","VPRDJ06",79,0)
 S LAB("groupName")=$P(LR0,U,6),ACC=$P(ID,";",1,2) ;accession#
"RTN","VPRDJ06",80,0)
 S LAB("groupUid")=$$SETUID^VPRUTILS("accession",DFN,ACC)
"RTN","VPRDJ06",81,0)
 S X=$P(LR0,U,14),FAC=$S(X:$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U),1:$$FAC^VPRD)
"RTN","VPRDJ06",82,0)
 D FACILITY^VPRUTILS(FAC,"LAB")
"RTN","VPRDJ06",83,0)
 ; get results from ^TMP
"RTN","VPRDJ06",84,0)
 S VPRN=0 F  S VPRN=$O(^TMP("LRRR",$J,DFN,VPRSUB,VPRIDT,VPRN)) Q:VPRN<1  D
"RTN","VPRDJ06",85,0)
 . S X0=$G(^TMP("LRRR",$J,DFN,"MI",VPRIDT,VPRN)),X1=$P(X0,U),X2=$P(X0,U,2)
"RTN","VPRDJ06",86,0)
 . I X1="URINE SCREEN" S LAB("urineScreen")=X2 Q
"RTN","VPRDJ06",87,0)
 . ; X1="ORGANISM" S LAB("organism")=$P(X2,";"),LAB("organismQty")=$P(X2,";",2)
"RTN","VPRDJ06",88,0)
 . I X1="GRAM STAIN" S LAB("gramStain",VPRN,"result")=X2 Q
"RTN","VPRDJ06",89,0)
 . I X1="Bacteriology Remark(s)" S LAB("bactRemarks")=X2 Q
"RTN","VPRDJ06",90,0)
 ; get other results from ^PXRMINDX
"RTN","VPRDJ06",91,0)
 S X=$O(^PXRMINDX(63,"PDI",DFN,CDT,"M;T;0")) I X?1"M;T;"1.N D
"RTN","VPRDJ06",92,0)
 . S IDX=$O(^PXRMINDX(63,"PDI",DFN,CDT,X,"")) K VPRM
"RTN","VPRDJ06",93,0)
 . D LRPXRM^LRPXAPI(.VPRM,IDX,X) Q:VPRM<1
"RTN","VPRDJ06",94,0)
 . S LAB("typeName")=$P(VPRM,U,2)
"RTN","VPRDJ06",95,0)
 . S LAB("typeCode")="urn:va:ien:60:"_+VPRM_":"_+$P(VPRM,U,7)
"RTN","VPRDJ06",96,0)
 F VPRPX="M;O;","M;A;" D
"RTN","VPRDJ06",97,0)
 . S VPRITM=VPRPX F  S VPRITM=$O(^PXRMINDX(63,"PDI",DFN,CDT,VPRITM)) Q:$E(VPRITM,1,4)'=VPRPX  D
"RTN","VPRDJ06",98,0)
 .. S IDX=$O(^PXRMINDX(63,"PDI",DFN,CDT,VPRITM,"")) K VPRM
"RTN","VPRDJ06",99,0)
 .. S DA=$P(IDX,";",5),FLD=$P(IDX,";",6)
"RTN","VPRDJ06",100,0)
 .. D LRPXRM^LRPXAPI(.VPRM,IDX,VPRITM) Q:'$L($G(VPRM))
"RTN","VPRDJ06",101,0)
 .. I VPRPX["O" S LAB("organisms",DA,"name")=$P(VPRM,U,2),LAB("organisms",DA,"qty")=$P(VPRM,U,4) Q
"RTN","VPRDJ06",102,0)
 .. I VPRPX["A" D  Q
"RTN","VPRDJ06",103,0)
 ... S LAB("organisms",DA,"drugs",FLD,"name")=$P(VPRM,U,2)
"RTN","VPRDJ06",104,0)
 ... S LAB("organisms",DA,"drugs",FLD,"result")=$P(VPRM,U,3)
"RTN","VPRDJ06",105,0)
 ... S LAB("organisms",DA,"drugs",FLD,"interp")=$P(VPRM,U,4)
"RTN","VPRDJ06",106,0)
 ... S:$L($P(VPRM,U,5)) LAB("organisms",DA,"drugs",FLD,"restrict")=$P(VPRM,U,5)
"RTN","VPRDJ06",107,0)
 ;
"RTN","VPRDJ06",108,0)
 S LAB("results",1,"uid")=ACC
"RTN","VPRDJ06",109,0)
 S LAB("results",1,"resultUid")=$$SETUID^VPRUTILS("document",DFN,ACC)
"RTN","VPRDJ06",110,0)
 S LAB("results",1,"localTitle")="LR MICROBIOLOGY REPORT"
"RTN","VPRDJ06",111,0)
 I $L($G(^LR(LRDFN,"MI",VPRIDT,99))) S LAB("comment")=^(99)
"RTN","VPRDJ06",112,0)
 D ADD^VPRDJ("LAB","lab")
"RTN","VPRDJ06",113,0)
 Q
"RTN","VPRDJ06",114,0)
 ;
"RTN","VPRDJ06",115,0)
ITEM() ; -- find ITEM string from ^PXRMINDX [uses LRDFN,ID,DFN,CDT]
"RTN","VPRDJ06",116,0)
 N ITM,IDX,Y S Y=""
"RTN","VPRDJ06",117,0)
 S IDX=LRDFN_";"_ID,ITM="M"
"RTN","VPRDJ06",118,0)
 F  S ITM=$O(^PXRMINDX(63,"PI",DFN,ITM)) Q:$E(ITM)'="M"  I $D(^PXRMINDX(63,"PI",DFN,ITM,CDT,IDX)) S Y=ITM Q
"RTN","VPRDJ06",119,0)
 Q Y
"RTN","VPRDJ06",120,0)
 ;
"RTN","VPRDJ06",121,0)
AP ; -- pathology ID = VPRSUB;VPRIDT
"RTN","VPRDJ06",122,0)
 N LAB,LR0,X,I,NODE
"RTN","VPRDJ06",123,0)
 S LAB("localId")=ID,LAB("organizerType")="accession"
"RTN","VPRDJ06",124,0)
 S LAB("uid")=$$SETUID^VPRUTILS("lab",DFN,ID)
"RTN","VPRDJ06",125,0)
 S LAB("categoryCode")="urn:va:lab-category:"_VPRSUB
"RTN","VPRDJ06",126,0)
 S LAB("categoryName")=$S(VPRSUB="BB":"Blood Bank",VPRSUB="SP":"Surgical Pathology",1:"Pathology")
"RTN","VPRDJ06",127,0)
 S LAB("statusCode")="urn:va:lab-status:completed",LAB("statusName")="completed"
"RTN","VPRDJ06",128,0)
 S CDT=9999999-VPRIDT,LAB("observed")=$$DATE(CDT)
"RTN","VPRDJ06",129,0)
 S LR0=$G(^LR(LRDFN,VPRSUB,VPRIDT,0))
"RTN","VPRDJ06",130,0)
 S LAB("resulted")=$$DATE($P(LR0,U,11)),LAB("groupName")=$P(LR0,U,6)
"RTN","VPRDJ06",131,0)
 S X="",I=0 F  S I=$O(^LR(LRDFN,VPRSUB,VPRIDT,.1,I)) Q:I<1  S X=X_$S($L(X):", ",1:"")_$P($G(^(I,0)),U)
"RTN","VPRDJ06",132,0)
 S:$L(X) LAB("specimen")=X
"RTN","VPRDJ06",133,0)
 D FACILITY^VPRUTILS($$FAC^VPRD,"LAB")
"RTN","VPRDJ06",134,0)
 S NODE=$S(VPRSUB="AU":$NA(^LR(LRDFN,101)),1:$NA(^LR(LRDFN,VPRSUB,VPRIDT,.05)))
"RTN","VPRDJ06",135,0)
 S I=0 F  S I=$O(@NODE@(I)) Q:I<1  S X=+$P($G(@NODE@(I,0)),U,2) I X D
"RTN","VPRDJ06",136,0)
 . N LT,NT
"RTN","VPRDJ06",137,0)
 . S LT=$$GET1^DIQ(8925,+X_",",.01) Q:$P(LT," ")="Addendum"
"RTN","VPRDJ06",138,0)
 . S NT=$$GET1^DIQ(8925,+X_",",".01:1501") S:NT="" NT="LABORATORY NOTE"
"RTN","VPRDJ06",139,0)
 . S LAB("results",I,"uid")=LAB("uid")_";0"
"RTN","VPRDJ06",140,0)
 . S LAB("results",I,"resultUid")=$$SETUID^VPRUTILS("document",DFN,X)
"RTN","VPRDJ06",141,0)
 . S LAB("results",I,"localTitle")=LT
"RTN","VPRDJ06",142,0)
 . S LAB("results",I,"nationalTitle")=NT
"RTN","VPRDJ06",143,0)
 I '$O(LAB("results",0)) D  ;non-TIU reports
"RTN","VPRDJ06",144,0)
 . S LAB("results",1,"uid")=LAB("uid")_";0"
"RTN","VPRDJ06",145,0)
 . S LAB("results",1,"resultUid")=$$SETUID^VPRUTILS("document",DFN,ID)
"RTN","VPRDJ06",146,0)
 . S LAB("results",1,"localTitle")="LR "_$$NAME^VPRDLRA(VPRSUB)_" REPORT"
"RTN","VPRDJ06",147,0)
 . S LAB("results",1,"nationalTitle")="LABORATORY NOTE"
"RTN","VPRDJ06",148,0)
 D ADD^VPRDJ("LAB","lab")
"RTN","VPRDJ06",149,0)
 ;
"RTN","VPRDJ06",150,0)
DATE(X) ; -- strip off seconds, return JSON format
"RTN","VPRDJ06",151,0)
 N Y S Y=$G(X)
"RTN","VPRDJ06",152,0)
 I $L($P(Y,".",2))>4 S Y=$P(Y,".")_"."_$E($P(Y,".",2),1,4) ;strip seconds
"RTN","VPRDJ06",153,0)
 S:Y Y=$$JSONDT^VPRUTILS(Y)
"RTN","VPRDJ06",154,0)
 Q Y
"RTN","VPRDJ07")
0^10^B19635784^n/a
"RTN","VPRDJ07",1,0)
VPRDJ07 ;SLC/MKB -- Radiology,Surgery ;6/25/12  16:11
"RTN","VPRDJ07",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 317
"RTN","VPRDJ07",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ07",4,0)
 ;
"RTN","VPRDJ07",5,0)
 ; External References          DBIA#
"RTN","VPRDJ07",6,0)
 ; -------------------          -----
"RTN","VPRDJ07",7,0)
 ; ^SC                          10040
"RTN","VPRDJ07",8,0)
 ; ^VA(200                      10060
"RTN","VPRDJ07",9,0)
 ; DIC                           2051
"RTN","VPRDJ07",10,0)
 ; DIQ                           2056
"RTN","VPRDJ07",11,0)
 ; RAO7PC1                  2043,2265
"RTN","VPRDJ07",12,0)
 ; SROESTV                       3533
"RTN","VPRDJ07",13,0)
 ;
"RTN","VPRDJ07",14,0)
 ; All tags expect DFN, ID, [VPRSTART, VPRSTOP, VPRMAX, VPRTEXT]
"RTN","VPRDJ07",15,0)
 ;
"RTN","VPRDJ07",16,0)
RA1(ID) ; -- radiology exam ^TMP($J,"RAE1",DFN,ID)
"RTN","VPRDJ07",17,0)
 N EXAM,X0,SET,PROC,DATE,LOC,X,Y,IENS,ID3,N
"RTN","VPRDJ07",18,0)
 S X0=$G(^TMP($J,"RAE1",DFN,ID)),SET=$G(^(ID,"CPRS")),PROC=$P(X0,U) Q:X0=""
"RTN","VPRDJ07",19,0)
 S EXAM("localId")=ID,EXAM("uid")=$$SETUID^VPRUTILS("image",DFN,ID)
"RTN","VPRDJ07",20,0)
 S EXAM("name")=PROC,EXAM("case")=$P(X0,U,2),EXAM("category")="RA"
"RTN","VPRDJ07",21,0)
 S DATE=9999999.9999-+ID,EXAM("dateTime")=$$JSONDT^VPRUTILS(DATE)
"RTN","VPRDJ07",22,0)
 I $P(X0,U,5) D  ;report exists
"RTN","VPRDJ07",23,0)
 . N NM S NM=$S(+SET=2:$P(SET,U,2),1:PROC) ;2 = shared report
"RTN","VPRDJ07",24,0)
 . S EXAM("results",1,"uid")=$$SETUID^VPRUTILS("document",DFN,ID)
"RTN","VPRDJ07",25,0)
 . S EXAM("results",1,"localTitle")=NM
"RTN","VPRDJ07",26,0)
 . S EXAM("verified")=$S($E($P(X0,U,3))="V":"true",1:"false")
"RTN","VPRDJ07",27,0)
 S:$L($P(X0,U,6)) EXAM("statusName")=$P($P(X0,U,6),"~",2)
"RTN","VPRDJ07",28,0)
 S X=$P(X0,U,7),LOC="" I $L(X) D
"RTN","VPRDJ07",29,0)
 . S EXAM("imageLocation")=X,EXAM("locationName")=X
"RTN","VPRDJ07",30,0)
 . S LOC=+$O(^SC("B",X,0))
"RTN","VPRDJ07",31,0)
 . S EXAM("locationUid")=$$SETUID^VPRUTILS("location",,LOC)
"RTN","VPRDJ07",32,0)
 S X=$$FAC^VPRD(LOC) D FACILITY^VPRUTILS(X,"EXAM")
"RTN","VPRDJ07",33,0)
 I $L($P(X0,U,8)) S X=$P($P(X0,U,8),"~",2),EXAM("imagingTypeUid")=$$SETVURN^VPRUTILS("imaging-Type",X)
"RTN","VPRDJ07",34,0)
 S X=$P(X0,U,10) I X D
"RTN","VPRDJ07",35,0)
 . N CPT S CPT=$$CPT^VPRDRA(X)
"RTN","VPRDJ07",36,0)
 . S (EXAM("typeName"),EXAM("summary"))=$P(CPT,U,2)
"RTN","VPRDJ07",37,0)
 . ;I $D(^TMP($J,"RAE1",DFN,ID,"CMOD")) M EXAM("modifier")=^("CMOD")
"RTN","VPRDJ07",38,0)
 I $P(X0,U,11) D
"RTN","VPRDJ07",39,0)
 . S EXAM("orderUid")=$$SETUID^VPRUTILS("order",DFN,+$P(X0,U,11))
"RTN","VPRDJ07",40,0)
 . S EXAM("orderName")=$S($L(SET):$P(SET,U,2),1:PROC)
"RTN","VPRDJ07",41,0)
 S EXAM("hasImages")=$S($P(X0,U,12)="Y":"true",1:"false")
"RTN","VPRDJ07",42,0)
 I $P(X0,U,4)="Y"!($P(X0,U,9)="Y") S EXAM("interpretation")="ABNORMAL"
"RTN","VPRDJ07",43,0)
 S IENS=$P(ID,"-",2)_","_+ID_","_DFN_","
"RTN","VPRDJ07",44,0)
 S X=$$GET1^DIQ(70.03,IENS,27,"I") I X D
"RTN","VPRDJ07",45,0)
 . S EXAM("encounterUid")=$$SETUID^VPRUTILS("visit",DFN,+X)
"RTN","VPRDJ07",46,0)
 . S EXAM("encounterName")=$$NAME^VPRDJ04(+X)
"RTN","VPRDJ07",47,0)
 S ID3=DFN_U_$TR(ID,"-","^") D EN3^RAO7PC1(ID3) D  ;get additional values
"RTN","VPRDJ07",48,0)
 . S X=+$G(^TMP($J,"RAE2",DFN,+$P(ID3,U,3),PROC,"P")) Q:'X
"RTN","VPRDJ07",49,0)
 . S EXAM("providers",1,"providerUid")=$$SETUID^VPRUTILS("user",,X)
"RTN","VPRDJ07",50,0)
 . S EXAM("providers",1,"providerName")=$P($G(^VA(200,X,0)),U),N=0
"RTN","VPRDJ07",51,0)
 . F  S N=$O(^TMP($J,"RAE2",DFN,+$P(ID3,U,3),PROC,"D",N)) Q:N<1  S X=$G(^(N)) D
"RTN","VPRDJ07",52,0)
 .. S EXAM("diagnosis",N,"code")=X
"RTN","VPRDJ07",53,0)
 .. S:N=1 EXAM("diagnosis",N,"primary")="true"
"RTN","VPRDJ07",54,0)
 .. N EXP S EXP=$$LEX(X) S:EXP EXAM("diagnosis",N,"lexicon")=X
"RTN","VPRDJ07",55,0)
 . K ^TMP($J,"RAE2",DFN)
"RTN","VPRDJ07",56,0)
 S EXAM("kind")="Imaging"
"RTN","VPRDJ07",57,0)
 D ADD^VPRDJ("EXAM","image")
"RTN","VPRDJ07",58,0)
 Q
"RTN","VPRDJ07",59,0)
 ;
"RTN","VPRDJ07",60,0)
LEX(X) ; -- Return Lexicon ptr for a Dx Code
"RTN","VPRDJ07",61,0)
 N X,Y,DIC,LEX
"RTN","VPRDJ07",62,0)
 S DIC=78.3,DIC(0)="BFOXZ" D ^DIC
"RTN","VPRDJ07",63,0)
 S LEX=$P($G(Y(0)),U,6)
"RTN","VPRDJ07",64,0)
 Q LEX
"RTN","VPRDJ07",65,0)
 ;
"RTN","VPRDJ07",66,0)
SR1(ID) ; -- surgery
"RTN","VPRDJ07",67,0)
 N SURG,VPRX,VPRY,X,Y,I
"RTN","VPRDJ07",68,0)
 D ONE^SROESTV("VPRY",ID) S VPRX=$G(VPRY(ID)) Q:VPRX=""
"RTN","VPRDJ07",69,0)
 S SURG("localId")=ID,SURG("uid")=$$SETUID^VPRUTILS("surgery",DFN,ID)
"RTN","VPRDJ07",70,0)
 S X=$P(VPRX,U,2),SURG("statusName")="COMPLETED"
"RTN","VPRDJ07",71,0)
 I X?1"* Aborted * ".E S X=$E(X,13,999),SURG("statusName")="ABORTED"
"RTN","VPRDJ07",72,0)
 S (SURG("typeName"),SURG("summary"))=X
"RTN","VPRDJ07",73,0)
 S SURG("dateTime")=$$JSONDT^VPRUTILS($P(VPRX,U,3))
"RTN","VPRDJ07",74,0)
 S X=$P(VPRX,U,4) I X D
"RTN","VPRDJ07",75,0)
 . S SURG("providers",1,"providerUid")=$$SETUID^VPRUTILS("user",,+X)
"RTN","VPRDJ07",76,0)
 . S SURG("providers",1,"providerName")=$P(X,";",2)
"RTN","VPRDJ07",77,0)
 S X=$$GET1^DIQ(130,ID_",",50,"I"),X=$$FAC^VPRD(X)
"RTN","VPRDJ07",78,0)
 D FACILITY^VPRUTILS(X,"SURG")
"RTN","VPRDJ07",79,0)
 S X=$$GET1^DIQ(130,ID_",",.015,"I") I X D
"RTN","VPRDJ07",80,0)
 . S SURG("encounterUid")=$$SETUID^VPRUTILS("visit",DFN,+X)
"RTN","VPRDJ07",81,0)
 . S SURG("encounterName")=$$NAME^VPRDJ04(+X)
"RTN","VPRDJ07",82,0)
 S X=$$GET1^DIQ(136,ID_",",.02,"I") I X D
"RTN","VPRDJ07",83,0)
 . S X=$$CPT^VPRDSR(X)
"RTN","VPRDJ07",84,0)
 . S (SURG("typeName"),SURG("summary"))=$P(X,U,2)
"RTN","VPRDJ07",85,0)
 . S SURG("typeCode")=$$SETNCS^VPRUTILS("cpt",+X)
"RTN","VPRDJ07",86,0)
 S I=0 F  S I=$O(VPRY(ID,I)) Q:I<1  S X=$G(VPRY(ID,I)) I X D
"RTN","VPRDJ07",87,0)
 . N LT,NT S LT=$P(X,U,2) Q:$P(LT," ")="Addendum"
"RTN","VPRDJ07",88,0)
 . S NT=$$GET1^DIQ(8925,+X_",",".01:1501")
"RTN","VPRDJ07",89,0)
 . S SURG("results",I,"uid")=$$SETUID^VPRUTILS("document",DFN,+X)
"RTN","VPRDJ07",90,0)
 . S SURG("results",I,"localTitle")=LT
"RTN","VPRDJ07",91,0)
 . S:$L(NT) SURG("results",I,"nationalTitle")=NT
"RTN","VPRDJ07",92,0)
 S SURG("kind")="Surgery",SURG("category")="SR"
"RTN","VPRDJ07",93,0)
 K ^TMP("TIULIST",$J)
"RTN","VPRDJ07",94,0)
 D ADD^VPRDJ("SURG","surgery")
"RTN","VPRDJ07",95,0)
 Q
"RTN","VPRDJ08")
0^11^B60175705^n/a
"RTN","VPRDJ08",1,0)
VPRDJ08 ;SLC/MKB -- Documents ;6/25/12  16:11
"RTN","VPRDJ08",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 317
"RTN","VPRDJ08",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ08",4,0)
 ;
"RTN","VPRDJ08",5,0)
 ; External References          DBIA#
"RTN","VPRDJ08",6,0)
 ; -------------------          -----
"RTN","VPRDJ08",7,0)
 ; ^SC                          10040
"RTN","VPRDJ08",8,0)
 ; ^TIU(8925.1              2321,5677
"RTN","VPRDJ08",9,0)
 ; ^TIU(8926.1                   5678
"RTN","VPRDJ08",10,0)
 ; ^VA(200                      10060
"RTN","VPRDJ08",11,0)
 ; DIQ                           2056
"RTN","VPRDJ08",12,0)
 ; RAO7PC1                       2043
"RTN","VPRDJ08",13,0)
 ; TIUCNSLT                      5546
"RTN","VPRDJ08",14,0)
 ; TIUCP                         3568
"RTN","VPRDJ08",15,0)
 ; TIULQ                         2693
"RTN","VPRDJ08",16,0)
 ; TIULX                         3058
"RTN","VPRDJ08",17,0)
 ; TIUSROI                       5676
"RTN","VPRDJ08",18,0)
 ; TIUSRVLO                 2834,2865
"RTN","VPRDJ08",19,0)
 ; XLFSTR                       10104
"RTN","VPRDJ08",20,0)
 ;
"RTN","VPRDJ08",21,0)
 ; All tags expect DFN, ID, [VPRSTART, VPRSTOP, VPRMAX, VPRTEXT]
"RTN","VPRDJ08",22,0)
 ;
"RTN","VPRDJ08",23,0)
TIU1(ID) ; -- document
"RTN","VPRDJ08",24,0)
 I ID[";" D   Q
"RTN","VPRDJ08",25,0)
 . I ID D EN1($$CP1^VPRDJ08A(DFN,ID),"CP") Q  ;CP
"RTN","VPRDJ08",26,0)
 . D EN1($$LR1^VPRDJ08A(DFN,ID),"LR") Q       ;Lab
"RTN","VPRDJ08",27,0)
 I ID["-" D  Q                                ;Radiology
"RTN","VPRDJ08",28,0)
 . S (BEG,END)=9999999.9999-+ID D EN1^RAO7PC1(DFN,BEG,END,"99P")
"RTN","VPRDJ08",29,0)
 . Q:'$D(^TMP($J,"RAE1",DFN,ID))              ;deleted
"RTN","VPRDJ08",30,0)
 . D EN1($$RA1^VPRDJ08A(DFN,ID),"RA") K ^TMP($J,"RAE1")
"RTN","VPRDJ08",31,0)
 D EN1(ID,38)
"RTN","VPRDJ08",32,0)
 Q
"RTN","VPRDJ08",33,0)
 ;
"RTN","VPRDJ08",34,0)
EN1(VPRX,TIU) ; -- document
"RTN","VPRDJ08",35,0)
 ;  Expects DFN, VPRX=IEN^$$RESOLVE^TIUSRVLO(IEN) or equivalent
"RTN","VPRDJ08",36,0)
 ;          TIU = document class#, or code (CP, RA, LR) if non-TIU
"RTN","VPRDJ08",37,0)
 N DOC,IEN,X,VPRTIU,ES,I,TEXT,SUB,VPRY,ERR
"RTN","VPRDJ08",38,0)
 S IEN=$P($G(VPRX),U),TIU=$G(TIU) Q:IEN=""  ;invalid ien
"RTN","VPRDJ08",39,0)
 ;
"RTN","VPRDJ08",40,0)
 I +VPRX=VPRX,TIU D  ;get TIU data string, if needed
"RTN","VPRDJ08",41,0)
 . N SHOWADD,DA S SHOWADD=1,DA=+VPRX
"RTN","VPRDJ08",42,0)
 . S VPRX=DA_U_$$RESOLVE^TIUSRVLO(DA)
"RTN","VPRDJ08",43,0)
 Q:"UNKNOWN"[$P($G(VPRX),U,2)  ;null or invalid
"RTN","VPRDJ08",44,0)
 S DOC("localId")=IEN,DOC("uid")=$$SETUID^VPRUTILS("document",DFN,IEN)
"RTN","VPRDJ08",45,0)
 S DOC("localTitle")=$P(VPRX,U,2)
"RTN","VPRDJ08",46,0)
 S DOC("referenceDateTime")=$$JSONDT^VPRUTILS($P(VPRX,U,3))
"RTN","VPRDJ08",47,0)
 S X=$P(VPRX,U,6) D  ;S:$L(X) DOC("location")=X
"RTN","VPRDJ08",48,0)
 . N LOC,FAC S LOC=$S($L(X):+$O(^SC("B",X,0)),1:0)
"RTN","VPRDJ08",49,0)
 . S X=$$FAC^VPRD(LOC)
"RTN","VPRDJ08",50,0)
 . S DOC("facilityCode")=$P(X,U),DOC("facilityName")=$P(X,U,2)
"RTN","VPRDJ08",51,0)
 S X=$P(VPRX,U,7) S:$L(X) DOC("statusName")=X
"RTN","VPRDJ08",52,0)
 S:$P(VPRX,U,11) DOC("images")=+$P(VPRX,U,11)
"RTN","VPRDJ08",53,0)
 S:$L($P(VPRX,U,12)) DOC("subject")=$P(VPRX,U,12)
"RTN","VPRDJ08",54,0)
 I $P(VPRX,U,14)>5 S DOC("parent")=$P(VPRX,U,14) ;ID notes
"RTN","VPRDJ08",55,0)
A ; national title
"RTN","VPRDJ08",56,0)
 S X=$S(TIU:$$GET1^DIQ(8925,IEN_",",".01:1501","I"),1:$P(VPRX,U,10))
"RTN","VPRDJ08",57,0)
 I X D  ;National Title + attributes
"RTN","VPRDJ08",58,0)
 . N IENS,TIU,Y,FNUM,NAME
"RTN","VPRDJ08",59,0)
 . S IENS=X_"," D GETS^DIQ(8926.1,IENS,"*","IE","TIU")
"RTN","VPRDJ08",60,0)
 . S DOC("nationalTitle","vuid")="urn:va:vuid:"_$G(TIU(8926.1,IENS,99.99,"E"))
"RTN","VPRDJ08",61,0)
 . S DOC("nationalTitle","title")=$G(TIU(8926.1,IENS,.01,"E"))
"RTN","VPRDJ08",62,0)
 . F I=".04^Subject^2",".05^Role^3",".06^Setting^4",".07^Service^5",".08^Type^6" D
"RTN","VPRDJ08",63,0)
 .. S Y=+$G(TIU(8926.1,IENS,+I,"I")) Q:Y'>0
"RTN","VPRDJ08",64,0)
 .. S FNUM="8926."_+$P(I,U,3),NAME=$$LOW^XLFSTR($P(I,U,2))
"RTN","VPRDJ08",65,0)
 .. S DOC("nationalTitle"_$P(I,U,2),"vuid")="urn:va:vuid:"_$$VUID^VPRD(Y,FNUM)
"RTN","VPRDJ08",66,0)
 .. S DOC("nationalTitle"_$P(I,U,2),NAME)=$G(TIU(8926.1,IENS,+I,"E"))
"RTN","VPRDJ08",67,0)
B ; other TIU data
"RTN","VPRDJ08",68,0)
 D:TIU EXTRACT^TIULQ(IEN,"VPRTIU",,".01:.05;.09;1201;1202;1208;1209;1301;1501:1508",,1,,1) ;".01:.04;1501:1508")
"RTN","VPRDJ08",69,0)
 S X=$G(VPRTIU(IEN,1201,"I")) S:X DOC("entered")=$$JSONDT^VPRUTILS(X)
"RTN","VPRDJ08",70,0)
 S X=$G(VPRTIU(IEN,.09,"E")) S:$L(X) DOC("urgency")=X
"RTN","VPRDJ08",71,0)
 S X=TIU I TIU S X=+$G(VPRTIU(IEN,.01,"I")),X=$$CATG^VPRDTIU(X) ;2U type code
"RTN","VPRDJ08",72,0)
 S DOC("documentTypeCode")=X,DOC("documentTypeName")=$$TYPE(X)
"RTN","VPRDJ08",73,0)
 S DOC("documentClass")=$S(X="LR":"LR LABORATORY REPORTS",X="SR":"SURGICAL REPORTS",X="CP":"CLINICAL PROCEDURES",X="RA":"RADIOLOGY REPORTS",X="DS":"DISCHARGE SUMMARY",1:"PROGRESS NOTES")
"RTN","VPRDJ08",74,0)
 S X=$S(TIU:$G(VPRTIU(IEN,.03,"I")),1:$P(VPRX,U,8))
"RTN","VPRDJ08",75,0)
 S:X DOC("encounterUid")=$$SETUID^VPRUTILS("visit",DFN,X),DOC("encounterName")=$$NAME^VPRDJ04(X)
"RTN","VPRDJ08",76,0)
C ; text blocks, signatures
"RTN","VPRDJ08",77,0)
 N VPRT,VPRA,VPRADD
"RTN","VPRDJ08",78,0)
 S DOC("text",1,"dateTime")=DOC("referenceDateTime")
"RTN","VPRDJ08",79,0)
 S DOC("text",1,"status")=$G(DOC("statusName"))
"RTN","VPRDJ08",80,0)
 S DOC("text",1,"uid")=DOC("uid")
"RTN","VPRDJ08",81,0)
 S VPRT=1,X=$P(VPRX,U,5),I=0
"RTN","VPRDJ08",82,0)
 I X D USER(.I,+X,$P(X,";",3),"A")    ;author
"RTN","VPRDJ08",83,0)
 M ES=VPRTIU(IEN) S X=$P(VPRX,"//",2) ;non-TIU, put into ES for use:
"RTN","VPRDJ08",84,0)
 I $L(X) S ES(1502,"I")=+X,ES(1502,"E")=$P(X,";",2),ES(1501,"I")=$P(X,";",3)
"RTN","VPRDJ08",85,0)
 I $G(ES(1501,"I")) D USER(.I,ES(1502,"I"),ES(1502,"E"),"S",ES(1501,"I")) ;signer
"RTN","VPRDJ08",86,0)
 I $G(ES(1507,"I")) D USER(.I,ES(1508,"I"),ES(1508,"E"),"C",ES(1507,"I")) ;cosigner
"RTN","VPRDJ08",87,0)
 I $G(ES(1208,"I")) D USER(.I,ES(1208,"I"),ES(1208,"E"),"X")     ;expected cosigner
"RTN","VPRDJ08",88,0)
 S X=+$G(ES(1209,"I")) I X D
"RTN","VPRDJ08",89,0)
 . S DOC("attendingUid")=$$SETUID^VPRUTILS("user",,X)
"RTN","VPRDJ08",90,0)
 . S DOC("attendingName")=$P($G(^VA(200,X,0)),U)
"RTN","VPRDJ08",91,0)
 I $G(VPRTEXT) D
"RTN","VPRDJ08",92,0)
 . S X=$S(TIU:$NA(VPRTIU(IEN,"TEXT")),1:$NA(^TMP("VPRTEXT",$J,IEN)))
"RTN","VPRDJ08",93,0)
 . K ^TMP($J,"VPR TIU TEXT")
"RTN","VPRDJ08",94,0)
 . D SETTEXT^VPRUTILS(X,$NA(^TMP($J,"VPR TIU TEXT")))
"RTN","VPRDJ08",95,0)
 . M DOC("text",1,"content","\")=^TMP($J,"VPR TIU TEXT")
"RTN","VPRDJ08",96,0)
D ; addenda
"RTN","VPRDJ08",97,0)
 S VPRA=0 F  S VPRA=$O(VPRTIU(IEN,"ZADD",VPRA)) Q:VPRA<1  D
"RTN","VPRDJ08",98,0)
 . S VPRT=VPRT+1,I=0 K VPRADD M VPRADD=VPRTIU(IEN,"ZADD",VPRA)
"RTN","VPRDJ08",99,0)
 . S DOC("text",VPRT,"status")=$G(VPRADD(.05,"E"))
"RTN","VPRDJ08",100,0)
 . S DOC("text",VPRT,"uid")=$$SETUID^VPRUTILS("document",DFN,VPRA)
"RTN","VPRDJ08",101,0)
 . S DOC("text",VPRT,"dateTime")=$$JSONDT^VPRUTILS($G(VPRADD(1301,"I")))
"RTN","VPRDJ08",102,0)
 . I $G(VPRADD(1202,"I")) D USER(.I,VPRADD(1202,"I"),VPRADD(1202,"E"),"A")
"RTN","VPRDJ08",103,0)
 . I $G(VPRADD(1501,"I")) D USER(.I,VPRADD(1502,"I"),VPRADD(1502,"E"),"S",VPRADD(1501,"I"))
"RTN","VPRDJ08",104,0)
 . I $G(VPRADD(1507,"I")) D USER(.I,VPRADD(1508,"I"),VPRADD(1508,"E"),"C",VPRADD(1507,"I"))
"RTN","VPRDJ08",105,0)
 . Q:'$G(VPRTEXT)  K ^TMP($J,"VPR TIU TEXT")
"RTN","VPRDJ08",106,0)
 . S X=$NA(VPRTIU(IEN,"ZADD",VPRA,"TEXT"))
"RTN","VPRDJ08",107,0)
 . D SETTEXT^VPRUTILS(X,$NA(^TMP($J,"VPR TIU TEXT")))
"RTN","VPRDJ08",108,0)
 . M DOC("text",VPRT,"content","\")=^TMP($J,"VPR TIU TEXT")
"RTN","VPRDJ08",109,0)
ENQ ; end
"RTN","VPRDJ08",110,0)
 K ^TMP($J,"VPR TIU TEXT")
"RTN","VPRDJ08",111,0)
 D ADD^VPRDJ("DOC","document")
"RTN","VPRDJ08",112,0)
 Q
"RTN","VPRDJ08",113,0)
 ;
"RTN","VPRDJ08",114,0)
USER(N,IEN,NAME,ROLE,DATE) ; -- set author, signer(s)
"RTN","VPRDJ08",115,0)
 Q:'$G(IEN)  S N=+$G(N)+1
"RTN","VPRDJ08",116,0)
 S DOC("text",VPRT,"clinicians",N,"uid")=$$SETUID^VPRUTILS("user",,IEN)
"RTN","VPRDJ08",117,0)
 S DOC("text",VPRT,"clinicians",N,"name")=$S($L($G(NAME)):NAME,1:$P($G(^VA(200,IEN,0)),U))
"RTN","VPRDJ08",118,0)
 S DOC("text",VPRT,"clinicians",N,"role")=$G(ROLE)
"RTN","VPRDJ08",119,0)
 Q:'$G(DATE)  ;not co/signed
"RTN","VPRDJ08",120,0)
 S DOC("text",VPRT,"clinicians",N,"signedDateTime")=$$JSONDT^VPRUTILS(DATE)
"RTN","VPRDJ08",121,0)
 S DOC("text",VPRT,"clinicians",N,"signature")=$$SIG^VPRDTIU(IEN)
"RTN","VPRDJ08",122,0)
 Q
"RTN","VPRDJ08",123,0)
 ;
"RTN","VPRDJ08",124,0)
 ; ------------ Get/apply search criteria ------------
"RTN","VPRDJ08",125,0)
 ;               [from DOCUMENT^VPRDJ0]
"RTN","VPRDJ08",126,0)
 ;
"RTN","VPRDJ08",127,0)
SETUP ; -- convert FILTER("attribute") = value to TIU criteria
"RTN","VPRDJ08",128,0)
 ; Expects: FILTER("category") = code (see $$CATG)
"RTN","VPRDJ08",129,0)
 ;          FILTER("status")   = 'signed','unsigned','all'
"RTN","VPRDJ08",130,0)
 ; Returns: CLASS,[SUBCLASS,STATUS]
"RTN","VPRDJ08",131,0)
 ;
"RTN","VPRDJ08",132,0)
 N TYPE,STS,CP
"RTN","VPRDJ08",133,0)
 S TYPE=$$UP^XLFSTR($G(FILTER("category")))
"RTN","VPRDJ08",134,0)
 S CLASS=0,(SUBCLASS,STATUS)=""
"RTN","VPRDJ08",135,0)
 ;
"RTN","VPRDJ08",136,0)
 ; status [default='signed']
"RTN","VPRDJ08",137,0)
 S STS=$$LOW^XLFSTR($G(FILTER("status")))
"RTN","VPRDJ08",138,0)
 S STATUS=$S(STS?1"unsig".E:2,STS="all":"5^2",1:5)     ;TIUSRVLO statuses
"RTN","VPRDJ08",139,0)
 ;
"RTN","VPRDJ08",140,0)
 ; all documents
"RTN","VPRDJ08",141,0)
 S:TYPE="" TYPE="ALL"
"RTN","VPRDJ08",142,0)
 I TYPE="ALL" S CLASS="3^244^"_+$$CLASS^TIUSROI("SURGICAL REPORTS")_"^CP^LR^RA" Q
"RTN","VPRDJ08",143,0)
 ;
"RTN","VPRDJ08",144,0)
 I TYPE="PN"   S CLASS=3 Q                            ;Progress Notes
"RTN","VPRDJ08",145,0)
 I TYPE="CR"   S CLASS=3,SUBCLASS=$$CLASS^TIUCNSLT Q  ;Consults
"RTN","VPRDJ08",146,0)
 I TYPE="CWAD" S CLASS=3,SUBCLASS="25^27^30^31" Q     ;CWAD
"RTN","VPRDJ08",147,0)
 I TYPE="C"    S CLASS=3,SUBCLASS=30 Q                ;Crisis Note
"RTN","VPRDJ08",148,0)
 I TYPE="W"    S CLASS=3,SUBCLASS=31 Q                ;Clinical Warning
"RTN","VPRDJ08",149,0)
 I TYPE="A"    S CLASS=3,SUBCLASS=25 Q                ;Allergy Note
"RTN","VPRDJ08",150,0)
 I TYPE="D"    S CLASS=3,SUBCLASS=27 Q                ;Advance Directive
"RTN","VPRDJ08",151,0)
 ;
"RTN","VPRDJ08",152,0)
 I TYPE="DS"   S CLASS=244 Q                          ;Discharge Summary
"RTN","VPRDJ08",153,0)
 ;
"RTN","VPRDJ08",154,0)
 I TYPE="SR"   S CLASS=$$CLASS^TIUSROI("SURGICAL REPORTS") Q
"RTN","VPRDJ08",155,0)
 I TYPE="CP" D  Q                                     ;Clin Procedures
"RTN","VPRDJ08",156,0)
 . I STATUS'=2 S CLASS="CP"                           ; if unsigned,
"RTN","VPRDJ08",157,0)
 . E  D CPCLASS^TIUCP(.CP) S CLASS=CP                 ; use TIU class#
"RTN","VPRDJ08",158,0)
 ;
"RTN","VPRDJ08",159,0)
 I TYPE="LR"   S CLASS=$S(STATUS=2:$$LR,1:"LR") Q     ;Lab/Pathology
"RTN","VPRDJ08",160,0)
 ;
"RTN","VPRDJ08",161,0)
 I TYPE="RA"   S CLASS="RA" Q                         ;Radiology
"RTN","VPRDJ08",162,0)
 ;
"RTN","VPRDJ08",163,0)
 Q
"RTN","VPRDJ08",164,0)
 ;
"RTN","VPRDJ08",165,0)
LR() ; -- Return ien of Lab class
"RTN","VPRDJ08",166,0)
 N Y S Y=+$O(^TIU(8925.1,"B","LR LABORATORY REPORTS",0))
"RTN","VPRDJ08",167,0)
 I Y>0,$S($P($G(^TIU(8925.1,Y,0)),U,4)="CL":0,$P($G(^(0)),U,4)="DC":0,1:1) S Y=0
"RTN","VPRDJ08",168,0)
 Q Y
"RTN","VPRDJ08",169,0)
 ;
"RTN","VPRDJ08",170,0)
MATCH(DOC,STS) ; -- Return 1 or 0, if document DA matches search criteria
"RTN","VPRDJ08",171,0)
 N Y,DA,LOCAL,NATL,X0,OK S Y=0
"RTN","VPRDJ08",172,0)
 S DA=+$G(DOC) G:DA<1 MQ
"RTN","VPRDJ08",173,0)
 ; include addenda if pulling only unsigned items
"RTN","VPRDJ08",174,0)
 I $P(DOC,U,2)?1"Addendum ".E,STATUS'=2 G MQ
"RTN","VPRDJ08",175,0)
 ; TIU unsigned list can include completed parent notes
"RTN","VPRDJ08",176,0)
 I $G(STS)=2,$P(DOC,U,7)'="unsigned" G MQ
"RTN","VPRDJ08",177,0)
 S LOCAL=$$GET1^DIQ(8925,DA_",",.01,"I") ;local Title 8925.1 ien
"RTN","VPRDJ08",178,0)
 I $L(SUBCLASS) D  G:'OK MQ
"RTN","VPRDJ08",179,0)
 . N I,X S OK=0
"RTN","VPRDJ08",180,0)
 . F I=1:1:$L(SUBCLASS,"^") S X=$P(SUBCLASS,U,I) I $$ISA^TIULX(LOCAL,X) S OK=1 Q
"RTN","VPRDJ08",181,0)
 S Y=1
"RTN","VPRDJ08",182,0)
MQ Q Y
"RTN","VPRDJ08",183,0)
 ;
"RTN","VPRDJ08",184,0)
TYPE(X) ; -- Return name of category type X
"RTN","VPRDJ08",185,0)
 S X=$G(X)
"RTN","VPRDJ08",186,0)
 I X="PN" Q "Progress Note"
"RTN","VPRDJ08",187,0)
 I X="DS" Q "Discharge Summary"
"RTN","VPRDJ08",188,0)
 I X="CP" Q "Clinical Procedure"
"RTN","VPRDJ08",189,0)
 I X="SR" Q "Surgery Report"
"RTN","VPRDJ08",190,0)
 I X="LR" Q "Laboratory Report"
"RTN","VPRDJ08",191,0)
 I X="RA" Q "Radiology Report"
"RTN","VPRDJ08",192,0)
 I X="CR" Q "Consult Report"
"RTN","VPRDJ08",193,0)
 I X="C"  Q "Crisis Note"
"RTN","VPRDJ08",194,0)
 I X="W"  Q "Clinical Warning"
"RTN","VPRDJ08",195,0)
 I X="A"  Q "Allergy/Adverse Reaction"
"RTN","VPRDJ08",196,0)
 I X="D"  Q "Advance Directive"
"RTN","VPRDJ08",197,0)
 Q ""
"RTN","VPRDJ08A")
0^25^B39219672^n/a
"RTN","VPRDJ08A",1,0)
VPRDJ08A ;SLC/MKB -- Documents cont ;6/25/12  16:11
"RTN","VPRDJ08A",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 317
"RTN","VPRDJ08A",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ08A",4,0)
 ;
"RTN","VPRDJ08A",5,0)
 ; External References          DBIA#
"RTN","VPRDJ08A",6,0)
 ; -------------------          -----
"RTN","VPRDJ08A",7,0)
 ; ^DPT                         10035
"RTN","VPRDJ08A",8,0)
 ; ^LR                            525
"RTN","VPRDJ08A",9,0)
 ; ^RADPT                        2480
"RTN","VPRDJ08A",10,0)
 ; ^RARPT                        5605
"RTN","VPRDJ08A",11,0)
 ; ^SC                          10040
"RTN","VPRDJ08A",12,0)
 ; ^TMP("MDHSP" [MDPS1]          4230
"RTN","VPRDJ08A",13,0)
 ; ^VA(200                      10060
"RTN","VPRDJ08A",14,0)
 ; %DT                          10003
"RTN","VPRDJ08A",15,0)
 ; DIQ                           2056
"RTN","VPRDJ08A",16,0)
 ; GMRCGUIB                      2980
"RTN","VPRDJ08A",17,0)
 ; LR7OR1,^TMP("LRRR"            2503
"RTN","VPRDJ08A",18,0)
 ; MCARUTL3                      3280
"RTN","VPRDJ08A",19,0)
 ; PXAPI                         1894
"RTN","VPRDJ08A",20,0)
 ; RAO7PC1                  2043,2265
"RTN","VPRDJ08A",21,0)
 ; RAO7PC3                       2877
"RTN","VPRDJ08A",22,0)
 ;
"RTN","VPRDJ08A",23,0)
 ; All tags expect DFN, ID, [VPRSTART, VPRSTOP, VPRMAX, VPRTEXT]
"RTN","VPRDJ08A",24,0)
 ;
"RTN","VPRDJ08A",25,0)
 ; ------------------------------------------------------------------
"RTN","VPRDJ08A",26,0)
 ; documentClass = CLINICAL PROCEDURES
"RTN","VPRDJ08A",27,0)
 ; nationalTitle = 4696566^PROCEDURE REPORT
"RTN","VPRDJ08A",28,0)
 ;       Service = 4696471^PROCEDURE
"RTN","VPRDJ08A",29,0)
 ;          Type = 4696123^REPORT
"RTN","VPRDJ08A",30,0)
 ;
"RTN","VPRDJ08A",31,0)
CP(DFN,BEG,END,MAX) ; -- Medicine reports
"RTN","VPRDJ08A",32,0)
 N VPRN,VPRX,RTN,TIUN,CONS,VPRD,I,DA,X,Y,%DT,DATE,GBL
"RTN","VPRDJ08A",33,0)
 S DFN=+$G(DFN) Q:$G(DFN)<1
"RTN","VPRDJ08A",34,0)
 D MDPS1^VPRDJ03(DFN,BEG,END,MAX)             ;gets ^TMP("MDHSP",$J)
"RTN","VPRDJ08A",35,0)
 S VPRN=0 F  S VPRN=$O(^TMP("MDHSP",$J,VPRN)) Q:VPRN<1  S VPRX=$G(^(VPRN)) D
"RTN","VPRDJ08A",36,0)
 . S RTN=$P(VPRX,U,3,4) ;Q:RTN="PRPRO^MDPS4"  ;skip non-CP items
"RTN","VPRDJ08A",37,0)
 . S TIUN=+$P(VPRX,U,14)
"RTN","VPRDJ08A",38,0)
 . I TIUN D EN1^VPRDJ08(TIUN,38)              ;38=TIU Clinical Document
"RTN","VPRDJ08A",39,0)
 . S CONS=+$P(VPRX,U,13) D:CONS DOCLIST^GMRCGUIB(.VPRD,CONS)
"RTN","VPRDJ08A",40,0)
 . K DA S I=0 F  S I=$O(VPRD(50,I)) Q:I<1  D
"RTN","VPRDJ08A",41,0)
 .. S DA=+VPRD(50,I) Q:DA=TIUN
"RTN","VPRDJ08A",42,0)
 .. D EN1^VPRDJ08(DA,38)
"RTN","VPRDJ08A",43,0)
 . Q:TIUN!$G(DA)                              ;done [got TIU note(s)]
"RTN","VPRDJ08A",44,0)
 . Q:RTN="PR702^MDPS1"                        ;CP, but no TIU note yet
"RTN","VPRDJ08A",45,0)
 . Q:RTN="PRPRO^MDPS4"                        ;non-CP procedure
"RTN","VPRDJ08A",46,0)
 . ; find ID for pre-TIU report
"RTN","VPRDJ08A",47,0)
 . S X=$P(VPRX,U,6),%DT="TXS" D ^%DT Q:Y'>0  S DATE=Y
"RTN","VPRDJ08A",48,0)
 . S GBL=+$P(VPRX,U,2)_";"_$$ROOT^VPRDMC(DFN,$P(VPRX,U,11),DATE)
"RTN","VPRDJ08A",49,0)
 . I GBL S X=$$CP1(DFN,GBL) D EN1^VPRDJ08(X,"CP")
"RTN","VPRDJ08A",50,0)
 K ^TMP("MDHSP",$J),^TMP("VPRTEXT",$J)
"RTN","VPRDJ08A",51,0)
 Q
"RTN","VPRDJ08A",52,0)
 ;
"RTN","VPRDJ08A",53,0)
CP1(DFN,ID) ; -- return report data as TIU string [$$RESOLVE]
"RTN","VPRDJ08A",54,0)
 S DFN=+$G(DFN),ID=$G(ID) I DFN<1!'$L(ID) Q ""
"RTN","VPRDJ08A",55,0)
 N Y,VPRY,VPRFN,X,NAME,DATE,STS,USER,SIGN,TEXT
"RTN","VPRDJ08A",56,0)
 S VPRFN=+$P(ID,"(",2)
"RTN","VPRDJ08A",57,0)
 D MEDLKUP^MCARUTL3(.VPRY,VPRFN,+ID)
"RTN","VPRDJ08A",58,0)
 I VPRY<1 Q ""  ;error in CP
"RTN","VPRDJ08A",59,0)
 S NAME=$P(VPRY,U,9),DATE=$P(VPRY,U,6)
"RTN","VPRDJ08A",60,0)
 S X=$$GET1^DIQ(VPRFN,+ID_",",1506)
"RTN","VPRDJ08A",61,0)
 S STS=$S($L(X):X,1:"COMPLETED")
"RTN","VPRDJ08A",62,0)
 S X=+$$GET1^DIQ(VPRFN,+ID_",",701,"I"),(USER,SIGN)=""
"RTN","VPRDJ08A",63,0)
 S:X USER=X_";;"_$P($G(^VA(200,X,0)),U)
"RTN","VPRDJ08A",64,0)
 S X=+$$GET1^DIQ(VPRFN,+ID_",",1503,"I")
"RTN","VPRDJ08A",65,0)
 S:X SIGN="//"_X_";"_$P($G(^VA(200,X,0)),U)_";"_$$GET1^DIQ(VPRFN,+ID_",",1505,"I")
"RTN","VPRDJ08A",66,0)
 ; VST=$$GET1^DIQ(VPRFN,+ID_",",900,"I")
"RTN","VPRDJ08A",67,0)
 S Y=ID_U_NAME_U_DATE_U_U_USER_U_U_STS_"^^^2461^"_SIGN
"RTN","VPRDJ08A",68,0)
 S:$G(VPRTEXT) TEXT=$$TEXT^VPRDMC(DFN,ID,NAME) ;^TMP("VPRTEXT",$J,ID)
"RTN","VPRDJ08A",69,0)
 Q Y
"RTN","VPRDJ08A",70,0)
 ;
"RTN","VPRDJ08A",71,0)
 ; ------------------------------------------------------------------
"RTN","VPRDJ08A",72,0)
 ; documentClass = LR LABORATORY REPORTS
"RTN","VPRDJ08A",73,0)
 ; nationalTitle = 4697105^LABORATORY NOTE
"RTN","VPRDJ08A",74,0)
 ;       Subject = 4697104^LABORATORY
"RTN","VPRDJ08A",75,0)
 ;          Type = 4696120^NOTE
"RTN","VPRDJ08A",76,0)
 ;
"RTN","VPRDJ08A",77,0)
LR(DFN,BEG,END,MAX) ; -- Lab reports
"RTN","VPRDJ08A",78,0)
 N VPRSUB,VPRIDT,VPRITM,VPRTIU,VPRXID,LRDFN,IVDT,VPRN,DA
"RTN","VPRDJ08A",79,0)
 S DFN=+$G(DFN) Q:$G(DFN)<1
"RTN","VPRDJ08A",80,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","VPRDJ08A",81,0)
 S LRDFN=+$G(^DPT(DFN,"LR")),IVDT=9999999-+$G(^LR(LRDFN,"AU")) ;LR7OB63D error
"RTN","VPRDJ08A",82,0)
 K ^TMP("LRRR",$J,DFN) D RR^LR7OR1(DFN,,BEG,END,"AP",,,MAX)
"RTN","VPRDJ08A",83,0)
 S VPRSUB="" F  S VPRSUB=$O(^TMP("LRRR",$J,DFN,VPRSUB)) Q:VPRSUB=""  D
"RTN","VPRDJ08A",84,0)
 . S VPRIDT=0 F  S VPRIDT=$O(^TMP("LRRR",$J,DFN,VPRSUB,VPRIDT)) Q:VPRIDT<1  I $O(^(VPRIDT,0)) D
"RTN","VPRDJ08A",85,0)
 .. S VPRTIU=$S(VPRSUB="AU":$NA(^LR(LRDFN,101)),1:$NA(^LR(LRDFN,VPRSUB,VPRIDT,.05)))
"RTN","VPRDJ08A",86,0)
 .. K VPRITM S VPRXID=VPRSUB_";"_VPRIDT
"RTN","VPRDJ08A",87,0)
 .. I '$O(@VPRTIU@(0)) S VPRX=$$LR1(DFN,VPRXID) D EN1^VPRDJ08(VPRX,"LR") Q
"RTN","VPRDJ08A",88,0)
 .. S VPRN=0 F  S VPRN=$O(@VPRTIU@(VPRN)) Q:VPRN<1  D  ;38=TIU Clin Doc
"RTN","VPRDJ08A",89,0)
 ... S DA=+$P($G(@VPRTIU@(VPRN,0)),U,2)
"RTN","VPRDJ08A",90,0)
 ... D:DA EN1^VPRDJ08(DA,38)
"RTN","VPRDJ08A",91,0)
 K ^TMP("LRRR",$J,DFN),^TMP("VPRTEXT",$J)
"RTN","VPRDJ08A",92,0)
 Q
"RTN","VPRDJ08A",93,0)
 ;
"RTN","VPRDJ08A",94,0)
LR1(DFN,ID) ; -- return report data as TIU string [$$RESOLVE]
"RTN","VPRDJ08A",95,0)
 S DFN=+$G(DFN),ID=$G(ID) I DFN<1!'$L(ID) Q ""
"RTN","VPRDJ08A",96,0)
 N Y,SUB,IDT,LRDFN,LR0,NAME,LOC,USER,VST,SIGN,TEXT
"RTN","VPRDJ08A",97,0)
 K ^TMP("VPRTEXT",$J,ID)
"RTN","VPRDJ08A",98,0)
 S SUB=$P(ID,";"),IDT=+$P(ID,";",2),LRDFN=$G(^DPT(DFN,"LR"))
"RTN","VPRDJ08A",99,0)
 S LR0=$S(SUB="AU":$G(^LR(LRDFN,"AU")),1:$G(^LR(LRDFN,SUB,IDT,0)))
"RTN","VPRDJ08A",100,0)
 S NAME="LR "_$$NAME^VPRDLRA(SUB)_" REPORT"
"RTN","VPRDJ08A",101,0)
 S LOC=$P(LR0,U,$S(SUB="AU":5,1:8)) D  ;look-up visit
"RTN","VPRDJ08A",102,0)
 . N CDT,SC S CDT=9999999-IDT,SC="",X=0
"RTN","VPRDJ08A",103,0)
 . S:$L(LOC) SC=+$O(^SC("B",LOC,0))
"RTN","VPRDJ08A",104,0)
 . I CDT,LOC S X=$$GETENC^PXAPI(DFN,CDT,SC)
"RTN","VPRDJ08A",105,0)
 . S:X VST=+X
"RTN","VPRDJ08A",106,0)
 S X=+$P(LR0,U,$S(SUB="AU":10,1:2)) ;pathologist[author]
"RTN","VPRDJ08A",107,0)
 S USER=$S(X:X_";;"_$P($G(^VA(200,X,0)),U),1:""),SIGN=""
"RTN","VPRDJ08A",108,0)
 S X=$S(SUB="AU":$P(LR0,U,15,16),1:$P(LR0,U,11)_U_$P(LR0,U,13)) ;released
"RTN","VPRDJ08A",109,0)
 S:X SIGN="//"_+$P(X,U,2)_";"_$P($G(^VA(200,+$P(X,U,2),0)),U)_";"_+X
"RTN","VPRDJ08A",110,0)
 S Y=ID_U_NAME_U_(9999999-IDT)_U_U_USER_U_LOC_"^COMPLETED^"_$G(VST)_"^^2753^"_SIGN
"RTN","VPRDJ08A",111,0)
 S:$G(VPRTEXT) TEXT=$$TEXT^VPRDLRA(DFN,SUB,IDT) ;^TMP("VPRTEXT",$J,ID)
"RTN","VPRDJ08A",112,0)
 Q Y
"RTN","VPRDJ08A",113,0)
 ;
"RTN","VPRDJ08A",114,0)
 ; ------------------------------------------------------------------
"RTN","VPRDJ08A",115,0)
 ; nationalTitle = 4695068^RADIOLOGY REPORT
"RTN","VPRDJ08A",116,0)
 ;       Subject = 4693357^RADIOLOGY
"RTN","VPRDJ08A",117,0)
 ;          Type = 4696123^REPORT
"RTN","VPRDJ08A",118,0)
 ;
"RTN","VPRDJ08A",119,0)
RA(DFN,BEG,END,MAX) ; -- Radiology reports
"RTN","VPRDJ08A",120,0)
 N VPRXID,STS,PSET
"RTN","VPRDJ08A",121,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","VPRDJ08A",122,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)_"P"
"RTN","VPRDJ08A",123,0)
 K ^TMP($J,"RAE1") D EN1^RAO7PC1(DFN,BEG,END,MAX)
"RTN","VPRDJ08A",124,0)
 S VPRXID="" F  S VPRXID=$O(^TMP($J,"RAE1",DFN,VPRXID)) Q:VPRXID=""  D
"RTN","VPRDJ08A",125,0)
 . S STS=$P($G(^TMP($J,"RAE1",DFN,VPRXID)),U,3),PSET=$G(^(VPRXID,"CPRS"))
"RTN","VPRDJ08A",126,0)
 . Q:STS="No Report"!(STS="Deleted")  ;!(STS["Draft")
"RTN","VPRDJ08A",127,0)
 . I +PSET=2,$G(PSET(+VPRXID,$P(PSET,U,2))) Q  ;already have report
"RTN","VPRDJ08A",128,0)
 . S VPRX=$$RA1(DFN,VPRXID) D EN1^VPRDJ08(VPRX,"RA")
"RTN","VPRDJ08A",129,0)
 . I +PSET=2 S PSET(+VPRXID,$P(PSET,U,2))=$P(VPRXID,"-",2) ;parent
"RTN","VPRDJ08A",130,0)
 K ^TMP($J,"RAE1"),^TMP("VPRTEXT",$J)
"RTN","VPRDJ08A",131,0)
 Q
"RTN","VPRDJ08A",132,0)
 ;
"RTN","VPRDJ08A",133,0)
RA1(DFN,ID) ; -- return report data as TIU string [$$RESOLVE]
"RTN","VPRDJ08A",134,0)
 S DFN=+$G(DFN),ID=$G(ID) I DFN<1!'$L(ID) Q ""
"RTN","VPRDJ08A",135,0)
 N EXAM,CASE,PROC,RAE3,RAE1,TEXT,I,X,Y,DATE,LOC,STS,IENS,VST,USER,SIGN
"RTN","VPRDJ08A",136,0)
 K RPT,^TMP("VPRTEXT",$J,ID)
"RTN","VPRDJ08A",137,0)
 S EXAM=DFN_U_$TR(ID,"-","^") D
"RTN","VPRDJ08A",138,0)
 . N DFN D EN3^RAO7PC3(EXAM) ;report
"RTN","VPRDJ08A",139,0)
 . D EN3^RAO7PC1(EXAM)       ;add'l values
"RTN","VPRDJ08A",140,0)
 S CASE=$O(^TMP($J,"RAE3",DFN,0)),PROC=$O(^(CASE,"")),RAE3=$G(^(PROC))
"RTN","VPRDJ08A",141,0)
 S RAE1=$G(^TMP($J,"RAE1",DFN,ID))
"RTN","VPRDJ08A",142,0)
 I $G(VPRTEXT) D
"RTN","VPRDJ08A",143,0)
 . S TEXT=$NA(^TMP("VPRTEXT",$J,ID))
"RTN","VPRDJ08A",144,0)
 . S I=0 F  S I=$O(^TMP($J,"RAE3",DFN,CASE,PROC,I)) Q:I<1  S X=^(I),@TEXT@(I)=X
"RTN","VPRDJ08A",145,0)
 S DATE=9999999.9999-(+ID),LOC=$P(RAE1,U,7),STS=$P(RAE3,U)
"RTN","VPRDJ08A",146,0)
 S IENS=$P(ID,"-",2)_","_+ID_","_DFN_","
"RTN","VPRDJ08A",147,0)
 S VST=$$GET1^DIQ(70.03,IENS,27,"I")
"RTN","VPRDJ08A",148,0)
 S X=+$G(^TMP($J,"RAE2",DFN,CASE,PROC,"P")),(USER,SIGN)=""
"RTN","VPRDJ08A",149,0)
 S:X USER=X_";;"_$P($G(^VA(200,X,0)),U)
"RTN","VPRDJ08A",150,0)
 S X=$G(^TMP($J,"RAE2",DFN,CASE,PROC,"V"))
"RTN","VPRDJ08A",151,0)
 S:X SIGN="//"_+X_";"_$P($G(^VA(200,+X,0)),U)_";"_$$GET1^DIQ(74,+$P(RAE1,U,5)_",",7,"I")
"RTN","VPRDJ08A",152,0)
 I $D(^TMP($J,"RAE3",DFN,"PRINT_SET")) S PROC=$G(^("ORD")) ;use parent, if printset
"RTN","VPRDJ08A",153,0)
 S Y=ID_U_PROC_U_DATE_U_U_USER_U_LOC_U_STS_U_VST_"^^1901^"_SIGN
"RTN","VPRDJ08A",154,0)
 K ^TMP($J,"RAE3",DFN),^TMP($J,"RAE2",DFN)
"RTN","VPRDJ08A",155,0)
 Q Y
"RTN","VPRDJ09")
0^12^B37647658^n/a
"RTN","VPRDJ09",1,0)
VPRDJ09 ;SLC/MKB -- PCE ;8/2/11  15:29
"RTN","VPRDJ09",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 317
"RTN","VPRDJ09",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ09",4,0)
 ;
"RTN","VPRDJ09",5,0)
 ; External References          DBIA#
"RTN","VPRDJ09",6,0)
 ; -------------------          -----
"RTN","VPRDJ09",7,0)
 ; ^AUPNVSIT                     2028
"RTN","VPRDJ09",8,0)
 ; ^PXRMINDX                     4290
"RTN","VPRDJ09",9,0)
 ; ^SC                          10040
"RTN","VPRDJ09",10,0)
 ; ^VA(200                      10060
"RTN","VPRDJ09",11,0)
 ; DIC                           2051
"RTN","VPRDJ09",12,0)
 ; DILFD                         2055
"RTN","VPRDJ09",13,0)
 ; DIQ                           2056
"RTN","VPRDJ09",14,0)
 ; PXAPI,^TMP("PXKENC"           1894
"RTN","VPRDJ09",15,0)
 ; VALM1                        10116
"RTN","VPRDJ09",16,0)
 ; XUAF4                         2171
"RTN","VPRDJ09",17,0)
 ;
"RTN","VPRDJ09",18,0)
 ; All tags expect DFN, ID, [VPRSTART, VPRSTOP, VPRMAX, VPRTEXT]
"RTN","VPRDJ09",19,0)
 ;
"RTN","VPRDJ09",20,0)
PX(FNUM) ; -- PCE item(s)
"RTN","VPRDJ09",21,0)
 I $G(VPRID) D PXA(VPRID) Q
"RTN","VPRDJ09",22,0)
 N VPRIDT,ID D SORT ;sort ^PXRMINDX into ^TMP("VPRPX",$J,IDT)
"RTN","VPRDJ09",23,0)
 S VPRIDT=0 F  S VPRIDT=$O(^TMP("VPRPX",$J,VPRIDT)) Q:VPRIDT<1  D  Q:VPRI'<VPRMAX
"RTN","VPRDJ09",24,0)
 . S ID=0 F  S ID=$O(^TMP("VPRPX",$J,VPRIDT,ID)) Q:ID<1  D PX1 Q:VPRI'<VPRMAX
"RTN","VPRDJ09",25,0)
 K ^TMP("VPRPX",$J)
"RTN","VPRDJ09",26,0)
 Q
"RTN","VPRDJ09",27,0)
 ;
"RTN","VPRDJ09",28,0)
PXA(ID) ; -- find ID in ^PXRMINDX(FNUM), fall thru to PX1 if successful
"RTN","VPRDJ09",29,0)
 N N,ROOT,IDX,P,ITEM,DATE,VPRIDT
"RTN","VPRDJ09",30,0)
 S N=+$P(FNUM,".",2) K ^TMP("VPRPX",$J)
"RTN","VPRDJ09",31,0)
 I N=7!(N=18) S ROOT="^PXRMINDX("_FNUM_",""PPI"","_+$G(DFN)
"RTN","VPRDJ09",32,0)
 E  S ROOT="^PXRMINDX("_FNUM_",""PI"","_+$G(DFN)
"RTN","VPRDJ09",33,0)
 S IDX=ROOT_")" F  S IDX=$Q(@IDX) Q:$P(IDX,",",1,3)'=ROOT  D
"RTN","VPRDJ09",34,0)
 . S P=$L(IDX,",") Q:ID'=+$P(IDX,",",P)  ;last subscript
"RTN","VPRDJ09",35,0)
 . S DATE=+$P(IDX,",",P-1),ITEM=+$P(IDX,",",P-2)
"RTN","VPRDJ09",36,0)
 . S VPRIDT=9999999-DATE,^TMP("VPRPX",$J,VPRIDT,ID)=ITEM_U_DATE
"RTN","VPRDJ09",37,0)
 Q:'$D(^TMP("VPRPX",$J))  ;not found
"RTN","VPRDJ09",38,0)
PX1 ; -- PCE ^TMP("VPRPX",$J,VPRIDT,ID)=ITM^DATE for FNUM
"RTN","VPRDJ09",39,0)
 N N,COLL,TAG,VPRF,FLD,TMP,VISIT,X0,X12,FAC,LOC,X,Y,PCE
"RTN","VPRDJ09",40,0)
 S N=+$P(FNUM,".",2),TAG=$S(N=7:"VPOV",N=11:"VIMM",N=12:"VSKIN",N=13:"VXAM",N=16:"VPEDU",N=18:"VCPT",1:"VHF")
"RTN","VPRDJ09",41,0)
 D @(TAG_"^PXPXRM(ID,.VPRF)")
"RTN","VPRDJ09",42,0)
 ;
"RTN","VPRDJ09",43,0)
 S PCE("localId")=ID,TMP=$G(^TMP("VPRPX",$J,VPRIDT,ID))
"RTN","VPRDJ09",44,0)
 S COLL=$S(N=7:"pov",N=11:"immunization",N=12:"skin",N=13:"exam",N=16:"education",N=18:"cpt",1:"factor")
"RTN","VPRDJ09",45,0)
 S PCE("uid")=$$SETUID^VPRUTILS(COLL,DFN,ID)
"RTN","VPRDJ09",46,0)
 ; TAG=$S(N=23:"recorded",N=11:"administeredDateTime",1:"dateTimeEntered")
"RTN","VPRDJ09",47,0)
 S TAG=$S(N=11:"administeredDateTime",1:"entered")
"RTN","VPRDJ09",48,0)
 S PCE(TAG)=$$JSONDT^VPRUTILS($P(TMP,U,2))
"RTN","VPRDJ09",49,0)
 S PCE("name")=$$EXTERNAL^DILFD(FNUM,.01,,+TMP)
"RTN","VPRDJ09",50,0)
 S VISIT=+$G(VPRF("VISIT")),PCE("encounterUid")=$$SETUID^VPRUTILS("visit",DFN,VISIT)
"RTN","VPRDJ09",51,0)
 S PCE("encounterName")=$$NAME^VPRDJ04(VISIT)
"RTN","VPRDJ09",52,0)
 S X0=$G(^AUPNVSIT(+VISIT,0)),FAC=+$P(X0,U,6),LOC=+$P(X0,U,22)
"RTN","VPRDJ09",53,0)
 S:FAC X=$$STA^XUAF4(FAC)_U_$P($$NS^XUAF4(FAC),U)
"RTN","VPRDJ09",54,0)
 S:'FAC X=$$FAC^VPRD(LOC)
"RTN","VPRDJ09",55,0)
 D FACILITY^VPRUTILS(X,"PCE")
"RTN","VPRDJ09",56,0)
 S:LOC PCE("locationUid")=$$SETUID^VPRUTILS("location",,LOC),PCE("locationName")=$P($G(^SC(LOC,0)),U)
"RTN","VPRDJ09",57,0)
 S X=$G(VPRF("COMMENTS")) S:$L(X) PCE("comment")=X
"RTN","VPRDJ09",58,0)
POV I FNUM=9000010.07 D  G PXQ
"RTN","VPRDJ09",59,0)
 . S X=$G(VPRF("PRIMARY/SECONDARY")),PCE("type")=$S($L(X):X,1:"U")
"RTN","VPRDJ09",60,0)
 . S X=PCE("name"),PCE("icdCode")=$$SETNCS^VPRUTILS("icd",X)
"RTN","VPRDJ09",61,0)
 . S X=$G(VPRF("PROVIDER NARRATIVE")),PCE("name")=$$EXTERNAL^DILFD(9000010.07,.04,,X)
"RTN","VPRDJ09",62,0)
CPT I FNUM=9000010.18 D  G PXQ
"RTN","VPRDJ09",63,0)
 . S X=$G(VPRF("PRINCIPAL PROCEDURE")),PCE("type")=$S($L(X):X,1:"U")
"RTN","VPRDJ09",64,0)
 . S X=PCE("name"),PCE("cptCode")=$$SETNCS^VPRUTILS("cpt",X)
"RTN","VPRDJ09",65,0)
 . S X=$G(VPRF("PROVIDER NARRATIVE")),PCE("name")=$$EXTERNAL^DILFD(9000010.18,.04,,X)
"RTN","VPRDJ09",66,0)
 . S PCE("quantity")=VPRF("QUANTITY")
"RTN","VPRDJ09",67,0)
 S X=$G(VPRF("VALUE")),FLD=$S(FNUM=9000010.16:.06,1:.04)
"RTN","VPRDJ09",68,0)
 S Y=$$EXTERNAL^DILFD(FNUM,FLD,,X)
"RTN","VPRDJ09",69,0)
IM I FNUM=9000010.11 D  G PXQ ;immunization
"RTN","VPRDJ09",70,0)
 . S:$L(Y) PCE("seriesName")=Y,PCE("seriesCode")=$$SETUID^VPRUTILS("series",DFN,Y)
"RTN","VPRDJ09",71,0)
 . S X=$G(VPRF("REACTION")) I $L(X) D
"RTN","VPRDJ09",72,0)
 .. S PCE("reactionName")=$$EXTERNAL^DILFD(9000010.11,.06,,X)
"RTN","VPRDJ09",73,0)
 .. S PCE("reactionCode")=$$SETUID^VPRUTILS("reaction",DFN,X)
"RTN","VPRDJ09",74,0)
 . S PCE("contraindicated")=$S(+$G(VPRF("CONTRAINDICATED")):"true",1:"false")
"RTN","VPRDJ09",75,0)
 . I '$D(^TMP("PXKENC",$J,VISIT)) D ENCEVENT^PXAPI(VISIT,1)
"RTN","VPRDJ09",76,0)
 . S X12=$G(^TMP("PXKENC",$J,VISIT,"IMM",ID,12))
"RTN","VPRDJ09",77,0)
 . S X=$P(X12,U,4) S:'X X=$P(X12,U,2)
"RTN","VPRDJ09",78,0)
 . I 'X S I=0 F  S I=$O(^TMP("PXKENC",$J,VISIT,"PRV",I)) Q:I<1  I $P($G(^(I,0)),U,4)="P" S X=+^(0) Q
"RTN","VPRDJ09",79,0)
 . S:X PCE("performerUid")=$$SETUID^VPRUTILS("user",,+X),PCE("performerName")=$P($G(^VA(200,X,0)),U)
"RTN","VPRDJ09",80,0)
 . ; CPT mapping
"RTN","VPRDJ09",81,0)
 . S X=+$$FIND1^DIC(811.1,,"QX",+TMP_";AUTTIMM(","B") I X>0 D
"RTN","VPRDJ09",82,0)
 .. S Y=$$GET1^DIQ(811.1,X_",",.02,"I") Q:Y<1
"RTN","VPRDJ09",83,0)
 .. N CPT S CPT=$G(@(U_$P(Y,";",2)_+Y_",0)"))
"RTN","VPRDJ09",84,0)
 .. S PCE("cptCode")=$$SETNCS^VPRUTILS("cpt",+CPT)
"RTN","VPRDJ09",85,0)
 .. S (PCE("summary"),PCE("cptName"))=$P(CPT,U,2)
"RTN","VPRDJ09",86,0)
HF I FNUM=9000010.23 D  G PXQ ;health factor
"RTN","VPRDJ09",87,0)
 . S:$L(X) PCE("severityUid")=$$SETVURN^VPRUTILS("factor-severity",X),PCE("severityName")=$$LOWER^VALM1(Y)
"RTN","VPRDJ09",88,0)
 . S X=$$GET1^DIQ(9999999.64,+TMP_",",.03,"I") I X D
"RTN","VPRDJ09",89,0)
 .. S PCE("categoryUid")=$$SETVURN^VPRUTILS("factor-category",X)
"RTN","VPRDJ09",90,0)
 .. S PCE("categoryName")=$$EXTERNAL^DILFD(9999999.64,.03,"",X)
"RTN","VPRDJ09",91,0)
 . S X=$$GET1^DIQ(9999999.64,+TMP_",",.08)
"RTN","VPRDJ09",92,0)
 . I $E(X)="Y" S PCE("display")="true"
"RTN","VPRDJ09",93,0)
 . S PCE("kind")="Health Factor",PCE("summary")=PCE("name")
"RTN","VPRDJ09",94,0)
SK I FNUM=9000010.12 D  ;skin test [fall thru to set result]
"RTN","VPRDJ09",95,0)
 . S X=$G(VPRF("READING")) S:$L(X) PCE("reading")=X
"RTN","VPRDJ09",96,0)
 . S X=$G(VPRF("DATE READ")) S:X PCE("dateRead")=$$JSONDT^VPRUTILS(X)
"RTN","VPRDJ09",97,0)
 S:$L(Y) PCE("result")=Y
"RTN","VPRDJ09",98,0)
PXQ ;finish
"RTN","VPRDJ09",99,0)
 D ADD^VPRDJ("PCE",COLL)
"RTN","VPRDJ09",100,0)
 Q
"RTN","VPRDJ09",101,0)
 ;
"RTN","VPRDJ09",102,0)
SORT ; -- build ^TMP("VPRPX",$J,9999999-DATE,DA)=ITEM^DATE in range
"RTN","VPRDJ09",103,0)
 N TYPE,ITEM,DATE,DA,IDT K ^TMP("VPRPX",$J)
"RTN","VPRDJ09",104,0)
 I FNUM=9000010.07!(FNUM=9000010.18) G PPI
"RTN","VPRDJ09",105,0)
PI ; from ^PXRMINDX(FNUM,"PI",DFN,ITEM,DATE,DA)
"RTN","VPRDJ09",106,0)
 S ITEM=0 F  S ITEM=$O(^PXRMINDX(FNUM,"PI",+$G(DFN),ITEM)) Q:ITEM<1  D
"RTN","VPRDJ09",107,0)
 . S DATE=0 F  S DATE=$O(^PXRMINDX(FNUM,"PI",+$G(DFN),ITEM,DATE)) Q:DATE<1  D
"RTN","VPRDJ09",108,0)
 .. Q:DATE<VPRSTART  Q:DATE>VPRSTOP  S IDT=9999999-DATE
"RTN","VPRDJ09",109,0)
 .. S DA=0 F  S DA=$O(^PXRMINDX(FNUM,"PI",+$G(DFN),ITEM,DATE,DA)) Q:DA<1  S ^TMP("VPRPX",$J,IDT,DA)=ITEM_U_DATE
"RTN","VPRDJ09",110,0)
 Q
"RTN","VPRDJ09",111,0)
PPI ; from ^PXRMINDX(FNUM,"PPI",DFN,TYPE,ITEM,DATE,DA)
"RTN","VPRDJ09",112,0)
 S TYPE="" F  S TYPE=$O(^PXRMINDX(FNUM,"PPI",+$G(DFN),TYPE)) Q:TYPE=""  D
"RTN","VPRDJ09",113,0)
 . S ITEM=0 F  S ITEM=$O(^PXRMINDX(FNUM,"PPI",+$G(DFN),TYPE,ITEM)) Q:ITEM<1  D
"RTN","VPRDJ09",114,0)
 .. S DATE=0 F  S DATE=$O(^PXRMINDX(FNUM,"PPI",+$G(DFN),TYPE,ITEM,DATE)) Q:DATE<1  D
"RTN","VPRDJ09",115,0)
 ... Q:DATE<VPRSTART  Q:DATE>VPRSTOP  S IDT=9999999-DATE
"RTN","VPRDJ09",116,0)
 ... S DA=0 F  S DA=$O(^PXRMINDX(FNUM,"PPI",+$G(DFN),TYPE,ITEM,DATE,DA)) Q:DA<1  S ^TMP("VPRPX",$J,IDT,DA)=ITEM_U_DATE
"RTN","VPRDJ09",117,0)
 Q
"RTN","VPRDJ09",118,0)
PTF ; from ^PXRMINDX(45,"ICD9","PNI",DFN,TYPE,ITEM,DATE,DA)
"RTN","VPRDJ09",119,0)
 S TYPE="" F  S TYPE=$O(^PXRMINDX(45,"ICD9","PNI",+$G(DFN),TYPE)) Q:TYPE=""  D
"RTN","VPRDJ09",120,0)
 . S ITEM=0 F  S ITEM=$O(^PXRMINDX(45,"ICD9","PNI",+$G(DFN),TYPE,ITEM)) Q:ITEM<1  D
"RTN","VPRDJ09",121,0)
 .. S DATE=0 F  S DATE=$O(^PXRMINDX(45,"ICD9","PNI",+$G(DFN),TYPE,ITEM,DATE)) Q:DATE<1  D
"RTN","VPRDJ09",122,0)
 ... Q:DATE<VPRSTART  Q:DATE>VPRSTOP  S IDT=9999999-DATE
"RTN","VPRDJ09",123,0)
 ... S DA="" F  S DA=$O(^PXRMINDX(45,"ICD9","PNI",+$G(DFN),TYPE,ITEM,DATE,DA)) Q:DA=""  S ^TMP("VPRPX",$J,IDT,DA_";"_TYPE)=ITEM_U_DATE
"RTN","VPRDJ09",124,0)
 Q
"RTN","VPRDJT")
0^32^B9998610^n/a
"RTN","VPRDJT",1,0)
VPRDJT ;SLC/MKB -- Test VistA data JSON RPC ;10/18/12 6:26pm
"RTN","VPRDJT",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 317
"RTN","VPRDJT",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJT",4,0)
 ;
"RTN","VPRDJT",5,0)
 ; External References          DBIA#
"RTN","VPRDJT",6,0)
 ; -------------------          -----
"RTN","VPRDJT",7,0)
 ; DIC                           2051
"RTN","VPRDJT",8,0)
 ; DIR                          10026
"RTN","VPRDJT",9,0)
 ;
"RTN","VPRDJT",10,0)
EN ; -- test GET^VPRDJ, write results to screen
"RTN","VPRDJT",11,0)
 N DFN,TYPE,TEXT,START,STOP,MAX,ID,IN,OUT,IDX
"RTN","VPRDJT",12,0)
 F  S DFN=$$PATIENT Q:DFN<1  D 
"RTN","VPRDJT",13,0)
 . F  S TYPE=$$DOMAIN Q:"^"[TYPE  D
"RTN","VPRDJT",14,0)
 .. D RPC W !!
"RTN","VPRDJT",15,0)
 .. K IN,TEXT,START,STOP,MAX
"RTN","VPRDJT",16,0)
 Q
"RTN","VPRDJT",17,0)
 ;
"RTN","VPRDJT",18,0)
RPC ; -- get search parameters, run and display
"RTN","VPRDJT",19,0)
 I TYPE="DOCUMENT" S TEXT=$$SHOW Q:TEXT="^"
"RTN","VPRDJT",20,0)
 S START=$$START Q:START="^"
"RTN","VPRDJT",21,0)
 I START S STOP=$$STOP(START) Q:STOP="^"
"RTN","VPRDJT",22,0)
 S MAX=$$TOTAL Q:MAX="^"
"RTN","VPRDJT",23,0)
 ; ID=$$ITEM
"RTN","VPRDJT",24,0)
 ;
"RTN","VPRDJT",25,0)
 S IN("patientId")=+$G(DFN)
"RTN","VPRDJT",26,0)
 S IN("domain")=$G(TYPE)
"RTN","VPRDJT",27,0)
 S:$L($G(TEXT)) IN("text")=TEXT
"RTN","VPRDJT",28,0)
 S:$G(START) IN("start")=START
"RTN","VPRDJT",29,0)
 S:$G(STOP) IN("stop")=STOP
"RTN","VPRDJT",30,0)
 S:$G(MAX) IN("max")=MAX
"RTN","VPRDJT",31,0)
 S:$D(ID) IN("id")=ID
"RTN","VPRDJT",32,0)
 D GET^VPRDJ(.OUT,.IN)
"RTN","VPRDJT",33,0)
 ;
"RTN","VPRDJT",34,0)
 S IDX=OUT W !
"RTN","VPRDJT",35,0)
 F  S IDX=$Q(@IDX) Q:IDX'?1"^TMP(""VPR"","1.N.E  Q:+$P(IDX,",",2)'=$J  W !,@IDX
"RTN","VPRDJT",36,0)
 Q
"RTN","VPRDJT",37,0)
 ;
"RTN","VPRDJT",38,0)
PATIENT() ; -- select patient
"RTN","VPRDJT",39,0)
 N X,Y,DIC
"RTN","VPRDJT",40,0)
 S DIC=2,DIC(0)="AEQM" D ^DIC
"RTN","VPRDJT",41,0)
 Q Y
"RTN","VPRDJT",42,0)
 ;
"RTN","VPRDJT",43,0)
DOMAIN() ; -- select domain
"RTN","VPRDJT",44,0)
 N X,Y,I,DIR,VPR
"RTN","VPRDJT",45,0)
 S DIR(0)="SAO^",DIR("A")="Select DOMAIN: "
"RTN","VPRDJT",46,0)
 F I=1:1 S X=$P($T(TYPE+I),";",3) Q:X=99  S DIR(0)=DIR(0)_X_";",VPR(+X)=$P(X,":",2)
"RTN","VPRDJT",47,0)
 D ^DIR S:Y Y=VPR(Y)
"RTN","VPRDJT",48,0)
 I Y="RADIOLOGY" S Y="IMAGE"
"RTN","VPRDJT",49,0)
 Q Y
"RTN","VPRDJT",50,0)
 ;
"RTN","VPRDJT",51,0)
TYPE ;;CODE:NAME
"RTN","VPRDJT",52,0)
 ;;1:ALLERGY
"RTN","VPRDJT",53,0)
 ;;2:APPOINTMENT
"RTN","VPRDJT",54,0)
 ;;3:CONSULT
"RTN","VPRDJT",55,0)
 ;;4:CPT
"RTN","VPRDJT",56,0)
 ;;5:DOCUMENT
"RTN","VPRDJT",57,0)
 ;;6:EDUCATION
"RTN","VPRDJT",58,0)
 ;;7:EXAM
"RTN","VPRDJT",59,0)
 ;;8:FACTOR
"RTN","VPRDJT",60,0)
 ;;9:IMMUNIZATION
"RTN","VPRDJT",61,0)
 ;;10:LAB
"RTN","VPRDJT",62,0)
 ;;11:MED
"RTN","VPRDJT",63,0)
 ;;12:OBSERVATION
"RTN","VPRDJT",64,0)
 ;;13:ORDER
"RTN","VPRDJT",65,0)
 ;;14:PATIENT
"RTN","VPRDJT",66,0)
 ;;15:POV
"RTN","VPRDJT",67,0)
 ;;16:PROBLEM
"RTN","VPRDJT",68,0)
 ;;17:PROCEDURE
"RTN","VPRDJT",69,0)
 ;;18:RADIOLOGY
"RTN","VPRDJT",70,0)
 ;;19:SKIN
"RTN","VPRDJT",71,0)
 ;;20:SURGERY
"RTN","VPRDJT",72,0)
 ;;21:VISIT
"RTN","VPRDJT",73,0)
 ;;22:VITAL
"RTN","VPRDJT",74,0)
 ;;99
"RTN","VPRDJT",75,0)
 ;
"RTN","VPRDJT",76,0)
SHOW() ; -- true/false to include body of note
"RTN","VPRDJT",77,0)
 N X,Y,DIR,DUOUT,DTOUT
"RTN","VPRDJT",78,0)
 S DIR(0)="YAO",DIR("A")="Include the text of each document? "
"RTN","VPRDJT",79,0)
 D ^DIR S:$D(DTOUT) Y="^"
"RTN","VPRDJT",80,0)
 Q Y
"RTN","VPRDJT",81,0)
 ;
"RTN","VPRDJT",82,0)
START() ; -- select a start date
"RTN","VPRDJT",83,0)
 N X,Y,DIR,DUOUT,DTOUT
"RTN","VPRDJT",84,0)
 S DIR(0)="DAO^::AEPT",DIR("A")="Select START DATE: "
"RTN","VPRDJT",85,0)
 S DIR("?")="Enter an optional date[.time] to begin searching for data"
"RTN","VPRDJT",86,0)
 D ^DIR S:$D(DTOUT) Y="^"
"RTN","VPRDJT",87,0)
 Q Y
"RTN","VPRDJT",88,0)
 ;
"RTN","VPRDJT",89,0)
STOP(START) ; -- select a stop date
"RTN","VPRDJT",90,0)
 N X,Y,DIR,DUOUT,DTOUT
"RTN","VPRDJT",91,0)
 S DIR(0)="DA^"_START_"::AEPT",DIR("A")="Select STOP DATE: "
"RTN","VPRDJT",92,0)
 S DIR("?")="Enter a date[.time] after the START to end searching for data"
"RTN","VPRDJT",93,0)
 D ^DIR S:$D(DTOUT) Y="^"
"RTN","VPRDJT",94,0)
 Q Y
"RTN","VPRDJT",95,0)
 ;
"RTN","VPRDJT",96,0)
TOTAL() ; -- select the max# to return
"RTN","VPRDJT",97,0)
 N X,Y,DIR,DUOUT,DTOUT
"RTN","VPRDJT",98,0)
 S DIR(0)="NAO^1:9999",DIR("A")="Select TOTAL #items: "
"RTN","VPRDJT",99,0)
 S DIR("?")="Enter an optional maximum number of items to return, up to 9999"
"RTN","VPRDJT",100,0)
 D ^DIR S:$D(DTOUT) Y="^"
"RTN","VPRDJT",101,0)
 Q Y
"RTN","VPRDLR")
0^35^B24009801^B24712747
"RTN","VPRDLR",1,0)
VPRDLR ;SLC/MKB -- Laboratory extract ;8/2/11  15:29
"RTN","VPRDLR",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 317
"RTN","VPRDLR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDLR",4,0)
 ;
"RTN","VPRDLR",5,0)
 ; External References          DBIA#
"RTN","VPRDLR",6,0)
 ; -------------------          -----
"RTN","VPRDLR",7,0)
 ; ^DPT                         10035
"RTN","VPRDLR",8,0)
 ; ^LAB(60                      10054
"RTN","VPRDLR",9,0)
 ; ^LAB(61                        524
"RTN","VPRDLR",10,0)
 ; ^LRO(69                       2407
"RTN","VPRDLR",11,0)
 ; ^LR                            525
"RTN","VPRDLR",12,0)
 ; DIC                           2051
"RTN","VPRDLR",13,0)
 ; DIQ                           2056
"RTN","VPRDLR",14,0)
 ; LR7OR1,^TMP("LRRR",$J)        2503
"RTN","VPRDLR",15,0)
 ; LRPXAPIU                      4246
"RTN","VPRDLR",16,0)
 ; XUAF4                         2171
"RTN","VPRDLR",17,0)
 ;
"RTN","VPRDLR",18,0)
 ; ------------ Get results from VistA ------------
"RTN","VPRDLR",19,0)
 ;
"RTN","VPRDLR",20,0)
EN(DFN,BEG,END,MAX,ID) ; -- find patient's lab results
"RTN","VPRDLR",21,0)
 N VPRSUB,VPRIDT,VPRN,VPRP,VPRITM,LRDFN,SUB,X
"RTN","VPRDLR",22,0)
 S DFN=+$G(DFN) Q:$G(DFN)<1
"RTN","VPRDLR",23,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","VPRDLR",24,0)
 K ^TMP("LRRR",$J,DFN) S LRDFN=$G(^DPT(DFN,"LR")),VPRSUB="CH"
"RTN","VPRDLR",25,0)
 ;
"RTN","VPRDLR",26,0)
 ; get result(s)
"RTN","VPRDLR",27,0)
 I $L($G(ID)) D  ;reset for LR7OR1
"RTN","VPRDLR",28,0)
 . S VPRSUB=$P(ID,";"),VPRIDT=+$P(ID,";",2)
"RTN","VPRDLR",29,0)
 . S:VPRIDT (BEG,END)=9999999-VPRIDT
"RTN","VPRDLR",30,0)
 ;
"RTN","VPRDLR",31,0)
 D RR^LR7OR1(DFN,,BEG,END,VPRSUB,,,MAX)
"RTN","VPRDLR",32,0)
 S VPRSUB="" F  S VPRSUB=$O(^TMP("LRRR",$J,DFN,VPRSUB)) Q:VPRSUB=""  D
"RTN","VPRDLR",33,0)
 . S VPRIDT=0 F  S VPRIDT=$O(^TMP("LRRR",$J,DFN,VPRSUB,VPRIDT)) Q:VPRIDT<1  D
"RTN","VPRDLR",34,0)
 .. S VPRP=0 F  S VPRP=$O(^TMP("LRRR",$J,DFN,VPRSUB,VPRIDT,VPRP)) Q:VPRP<1  S X=+$G(^(VPRP)) D
"RTN","VPRDLR",35,0)
 ... S VPRN=$$LRDN^LRPXAPIU(X) I $L($G(ID),";")>2,VPRN'=$P(ID,";",3) Q
"RTN","VPRDLR",36,0)
 ... K VPRITM S SUB=$S("CH^MI"[VPRSUB:VPRSUB,1:"AP")_"(.VPRITM)"
"RTN","VPRDLR",37,0)
 ... D @SUB,XML(.VPRITM)
"RTN","VPRDLR",38,0)
 K ^TMP("LRRR",$J,DFN)
"RTN","VPRDLR",39,0)
 Q
"RTN","VPRDLR",40,0)
 ;
"RTN","VPRDLR",41,0)
CH(LAB) ; -- return a Chemistry result in LAB("attribute")=value
"RTN","VPRDLR",42,0)
 ;      Expects ^TMP("LRRR",$J,DFN,"CH",VPRIDT,VPRP),VPRN,LRDFN
"RTN","VPRDLR",43,0)
 N X0,CDT,LR0,LRI,X,LOINC,ORD,CMMT K LAB
"RTN","VPRDLR",44,0)
 S X0=$G(^TMP("LRRR",$J,DFN,"CH",VPRIDT,VPRP))
"RTN","VPRDLR",45,0)
 S LAB("id")="CH;"_VPRIDT_";"_VPRN,LAB("type")="CH"
"RTN","VPRDLR",46,0)
 S CDT=9999999-VPRIDT,LAB("collected")=CDT
"RTN","VPRDLR",47,0)
 S LR0=$G(^LR(LRDFN,"CH",VPRIDT,0)),LRI=$G(^(VPRN))
"RTN","VPRDLR",48,0)
 S LAB("status")="completed",LAB("resulted")=$P(LR0,U,3)
"RTN","VPRDLR",49,0)
 S LAB("test")=$P($G(^LAB(60,+X0,0)),U) ;$P(X0,U,10)?
"RTN","VPRDLR",50,0)
 S:$L($P(X0,U,2)) LAB("result")=$P(X0,U,2)
"RTN","VPRDLR",51,0)
 S:$L($P(X0,U,4)) LAB("units")=$P(X0,U,4)
"RTN","VPRDLR",52,0)
 S:$L($P(X0,U,3)) LAB("interpretation")=$P(X0,U,3)
"RTN","VPRDLR",53,0)
 S X=$P(X0,U,5) I $L(X),X["-" S LAB("low")=$P(X,"-"),LAB("high")=$P(X,"-",2)
"RTN","VPRDLR",54,0)
 S LAB("localName")=$S($L($P(X0,U,15)):$P(X0,U,15),1:LAB("test"))
"RTN","VPRDLR",55,0)
 S LAB("groupName")=$P(X0,U,16) ;accession#
"RTN","VPRDLR",56,0)
 S X=+$P(X0,U,19) I X D  ;specimen
"RTN","VPRDLR",57,0)
 . N IENS,VPRY S IENS=X_","
"RTN","VPRDLR",58,0)
 . D GETS^DIQ(61,IENS,".01;2",,"VPRY")
"RTN","VPRDLR",59,0)
 . S LAB("specimen")=$G(VPRY(61,IENS,2))_U_$G(VPRY(61,IENS,.01)) ;SNOMED^name
"RTN","VPRDLR",60,0)
 . S LAB("sample")=$$GET1^DIQ(61,X_",",4.1) ;name
"RTN","VPRDLR",61,0)
 S ORD=+$P(X0,U,17) S:ORD LAB("labOrderID")=ORD
"RTN","VPRDLR",62,0)
 S X=$$ORDER(ORD,+X0) S:X LAB("orderID")=X
"RTN","VPRDLR",63,0)
 S X=$P($P(LRI,U,3),"!",3) S:X LOINC=$$GET1^DIQ(95.3,X_",",.01)
"RTN","VPRDLR",64,0)
 I $G(LOINC) S LAB("loinc")=LOINC,LAB("vuid")=$$VUID^VPRD(+LOINC,95.3)
"RTN","VPRDLR",65,0)
 S X=$P(LR0,U,14)
"RTN","VPRDLR",66,0)
 S:X LAB("facility")=$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U)
"RTN","VPRDLR",67,0)
 I 'X S LAB("facility")=$$FAC^VPRD ;local stn#^name
"RTN","VPRDLR",68,0)
 I $D(^TMP("LRRR",$J,DFN,"CH",VPRIDT,"N")) M CMMT=^("N") S LAB("comment")=$$STRING^VPRD(.CMMT)
"RTN","VPRDLR",69,0)
 Q
"RTN","VPRDLR",70,0)
 ;
"RTN","VPRDLR",71,0)
ORDER(LABORD,TEST) ; -- return #100 order for Lab order# & Test
"RTN","VPRDLR",72,0)
 N Y,D,S,T S Y=""
"RTN","VPRDLR",73,0)
 S D=$O(^LRO(69,"C",LABORD,0)) I D D
"RTN","VPRDLR",74,0)
 . S S=0 F  S S=$O(^LRO(69,"C",LABORD,D,S)) Q:S<1  D
"RTN","VPRDLR",75,0)
 .. S T=0 F  S T=$O(^LRO(69,D,1,S,2,T)) Q:T<1  I +$G(^(T,0))=TEST S Y=+$P(^(0),U,7)
"RTN","VPRDLR",76,0)
 Q Y
"RTN","VPRDLR",77,0)
 ;
"RTN","VPRDLR",78,0)
MI(LAB) ; -- return a Microbiology result in LAB("attribute")=value
"RTN","VPRDLR",79,0)
 ;    Expects ^TMP("LRRR",$J,DFN,"MI",VPRIDT,VPRP),LRDFN
"RTN","VPRDLR",80,0)
 N ID,CDT,X0,X,CMMT,LR0 K LAB
"RTN","VPRDLR",81,0)
 S X0=$G(^TMP("LRRR",$J,DFN,"MI",VPRIDT,VPRP)) Q:$L($P(X0,U))'>1
"RTN","VPRDLR",82,0)
 S LAB("id")="MI;"_VPRIDT_"#"_VPRP,LAB("status")="completed"
"RTN","VPRDLR",83,0)
 S LAB("type")="MI",CDT=9999999-VPRIDT,LAB("collected")=CDT
"RTN","VPRDLR",84,0)
 S LR0=$G(^LR(LRDFN,"MI",VPRIDT,0)),LAB("resulted")=$P(LR0,U,3)
"RTN","VPRDLR",85,0)
 S:$L($P(X0,U,2)) LAB("result")=$P(X0,U,2)
"RTN","VPRDLR",86,0)
 S:$L($P(X0,U,4)) LAB("units")=$P(X0,U,4)
"RTN","VPRDLR",87,0)
 S:$L($P(X0,U,3)) LAB("interpretation")=$P(X0,U,3)
"RTN","VPRDLR",88,0)
 S (LAB("test"),LAB("localName"))=$P(X0,U,15)
"RTN","VPRDLR",89,0)
 S X=+$P(X0,U,19) I X D  ;specimen
"RTN","VPRDLR",90,0)
 . N IENS,VPRY S IENS=X_","
"RTN","VPRDLR",91,0)
 . D GETS^DIQ(61,IENS,".01;2",,"VPRY")
"RTN","VPRDLR",92,0)
 . S LAB("specimen")=$G(VPRY(61,IENS,2))_U_$G(VPRY(61,IENS,.01)) ;SNOMED^name
"RTN","VPRDLR",93,0)
 . S LAB("sample")=$$GET1^DIQ(61,X_",",4.1) ;name
"RTN","VPRDLR",94,0)
 S X=$P(LR0,U,14)
"RTN","VPRDLR",95,0)
 S:X LAB("facility")=$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U)
"RTN","VPRDLR",96,0)
 I 'X S LAB("facility")=$$FAC^VPRD ;local stn#^name
"RTN","VPRDLR",97,0)
 I $D(^TMP("LRRR",$J,DFN,"MI",VPRIDT,"N")) M CMMT=^("N") S LAB("comment")=$$STRING^VPRD(.CMMT)
"RTN","VPRDLR",98,0)
 Q
"RTN","VPRDLR",99,0)
 ;
"RTN","VPRDLR",100,0)
AP(LAB) ; -- return a Pathology result in LAB("attribute")=value
"RTN","VPRDLR",101,0)
 K LAB  ;implemented in VPRDLRA
"RTN","VPRDLR",102,0)
 Q
"RTN","VPRDLR",103,0)
 ;
"RTN","VPRDLR",104,0)
 ; ------------ Return data to middle tier ------------
"RTN","VPRDLR",105,0)
 ;
"RTN","VPRDLR",106,0)
XML(LAB) ; -- Return result as XML in @VPR@(#)
"RTN","VPRDLR",107,0)
 N ATT,X,Y,P,NAMES,TAG
"RTN","VPRDLR",108,0)
 D ADD("<lab>") S VPRTOTL=$G(VPRTOTL)+1
"RTN","VPRDLR",109,0)
 S ATT="" F  S ATT=$O(LAB(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","VPRDLR",110,0)
 . S X=$G(LAB(ATT)),Y="" Q:'$L(X)
"RTN","VPRDLR",111,0)
 . I ATT="comment" S Y="<"_ATT_" xml:space='preserve'>"_$$ESC^VPRD(X)_"</"_ATT_">" Q
"RTN","VPRDLR",112,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^VPRD(X)_"' />" Q
"RTN","VPRDLR",113,0)
 . I $L(X)>1 D  S Y=""
"RTN","VPRDLR",114,0)
 .. S Y="<"_ATT_" ",NAMES="code^name^Z"
"RTN","VPRDLR",115,0)
 .. F P=1:1 S TAG=$P(NAMES,U,P) Q:TAG="Z"  I $L($P(X,U,P)) S Y=Y_TAG_"='"_$$ESC^VPRD($P(X,U,P))_"' "
"RTN","VPRDLR",116,0)
 .. S Y=Y_"/>" D ADD(Y)
"RTN","VPRDLR",117,0)
 D ADD("</lab>")
"RTN","VPRDLR",118,0)
 Q
"RTN","VPRDLR",119,0)
 ;
"RTN","VPRDLR",120,0)
ADD(X) ; -- Add a line @VPR@(n)=X
"RTN","VPRDLR",121,0)
 S VPRI=$G(VPRI)+1
"RTN","VPRDLR",122,0)
 S @VPR@(VPRI)=X
"RTN","VPRDLR",123,0)
 Q
"RTN","VPRDLRA")
0^29^B76865545^B76300469
"RTN","VPRDLRA",1,0)
VPRDLRA ;SLC/MKB -- Laboratory extract by accession ;8/2/11  15:29
"RTN","VPRDLRA",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**1,2**;Sep 01, 2011;Build 317
"RTN","VPRDLRA",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDLRA",4,0)
 ;
"RTN","VPRDLRA",5,0)
 ; External References          DBIA#
"RTN","VPRDLRA",6,0)
 ; -------------------          -----
"RTN","VPRDLRA",7,0)
 ; ^DPT                         10035
"RTN","VPRDLRA",8,0)
 ; ^LAB(60                      10054
"RTN","VPRDLRA",9,0)
 ; ^LAB(61                        524
"RTN","VPRDLRA",10,0)
 ; ^LRO(68                       1963
"RTN","VPRDLRA",11,0)
 ; ^LRO(69                       2407
"RTN","VPRDLRA",12,0)
 ; ^LR                            525
"RTN","VPRDLRA",13,0)
 ; ^SC                          10040
"RTN","VPRDLRA",14,0)
 ; ^VA(200                      10060
"RTN","VPRDLRA",15,0)
 ; DIC                           2051
"RTN","VPRDLRA",16,0)
 ; DIQ                           2056
"RTN","VPRDLRA",17,0)
 ; LR7OR1,^TMP("LRRR",$J)        2503
"RTN","VPRDLRA",18,0)
 ; LR7OSUM,^TMP("LRC",$J),       2766
"RTN","VPRDLRA",19,0)
 ;  ^TMP("LRH",$J),^TMP("LRT",$J)
"RTN","VPRDLRA",20,0)
 ; LRPXAPIU                      4246
"RTN","VPRDLRA",21,0)
 ; PXAPI                         1894
"RTN","VPRDLRA",22,0)
 ; XUAF4                         2171
"RTN","VPRDLRA",23,0)
 ;
"RTN","VPRDLRA",24,0)
 ; ------------ Get results from VistA ------------
"RTN","VPRDLRA",25,0)
 ;
"RTN","VPRDLRA",26,0)
EN(DFN,BEG,END,MAX,ID) ; -- find patient's lab results
"RTN","VPRDLRA",27,0)
 N VPRSUB,VPRIDT,VPRP,VPRITM,LRDFN,LR0,ORD,X
"RTN","VPRDLRA",28,0)
 S DFN=+$G(DFN) Q:$G(DFN)<1
"RTN","VPRDLRA",29,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","VPRDLRA",30,0)
 S LRDFN=$G(^DPT(DFN,"LR")),VPRSUB=$G(FILTER("type"))
"RTN","VPRDLRA",31,0)
 K ^TMP("LRRR",$J,DFN)
"RTN","VPRDLRA",32,0)
 ;
"RTN","VPRDLRA",33,0)
 ; get result(s)
"RTN","VPRDLRA",34,0)
 I $L($G(ID)) D  ;reset search parameters
"RTN","VPRDLRA",35,0)
 . S VPRSUB=$P(ID,";"),VPRIDT=+$P(ID,";",2)
"RTN","VPRDLRA",36,0)
 . S:VPRIDT (BEG,END)=9999999-VPRIDT
"RTN","VPRDLRA",37,0)
 ;
"RTN","VPRDLRA",38,0)
 D RR^LR7OR1(DFN,,BEG,END,VPRSUB,,,MAX)
"RTN","VPRDLRA",39,0)
 S VPRSUB="" F  S VPRSUB=$O(^TMP("LRRR",$J,DFN,VPRSUB)) Q:VPRSUB=""  D
"RTN","VPRDLRA",40,0)
 . S VPRIDT=0 F  S VPRIDT=$O(^TMP("LRRR",$J,DFN,VPRSUB,VPRIDT)) Q:VPRIDT<1  I $O(^(VPRIDT,0)) D
"RTN","VPRDLRA",41,0)
 .. K VPRITM,ORD,CMMT,^TMP("VPRTEXT",$J)
"RTN","VPRDLRA",42,0)
 .. I "CH^MI"'[VPRSUB D AP(.VPRITM),XML(.VPRITM) Q
"RTN","VPRDLRA",43,0)
 .. S VPRITM("type")=VPRSUB,VPRITM("id")=VPRSUB_";"_VPRIDT
"RTN","VPRDLRA",44,0)
 .. S VPRITM("collected")=9999999-VPRIDT,VPRITM("status")="completed"
"RTN","VPRDLRA",45,0)
 .. S LR0=$G(^LR(LRDFN,VPRSUB,VPRIDT,0))
"RTN","VPRDLRA",46,0)
 .. S VPRITM("resulted")=$P(LR0,U,3),X=+$P(LR0,U,5) I X D
"RTN","VPRDLRA",47,0)
 ... N IENS,VPRY S IENS=X_","
"RTN","VPRDLRA",48,0)
 ... D GETS^DIQ(61,IENS,".01;2;4.1",,"VPRY")
"RTN","VPRDLRA",49,0)
 ... S VPRITM("specimen")=$G(VPRY(61,IENS,2))_U_$G(VPRY(61,IENS,.01)) ;SNOMED^name
"RTN","VPRDLRA",50,0)
 ... S VPRITM("sample")=$G(VPRY(61,IENS,4.1)) ;name
"RTN","VPRDLRA",51,0)
 .. S X=$P(LR0,U,6),VPRITM("name")=$$AREA(X),VPRITM("groupName")=X
"RTN","VPRDLRA",52,0)
 .. S X=+$P(LR0,U,14) S:X VPRITM("facility")=$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U)
"RTN","VPRDLRA",53,0)
 .. I 'X S VPRITM("facility")=$$FAC^VPRD ;local stn#^name
"RTN","VPRDLRA",54,0)
 .. I VPRSUB="MI" D  ;report
"RTN","VPRDLRA",55,0)
 ... S VPRITM("document",1)=VPRSUB_";"_VPRIDT_"^LR MICROBIOLOGY REPORT^LABORATORY NOTE"
"RTN","VPRDLRA",56,0)
 ... S:$G(VPRTEXT) VPRITM("document",1,"content")=$$TEXT(DFN,VPRSUB,VPRIDT)
"RTN","VPRDLRA",57,0)
 .. S VPRP=0 F  S VPRP=$O(^TMP("LRRR",$J,DFN,VPRSUB,VPRIDT,VPRP)) Q:VPRP<1  D
"RTN","VPRDLRA",58,0)
 ... S X=$S(VPRSUB="MI":$$MI,1:$$CH)
"RTN","VPRDLRA",59,0)
 ... S:$L(X) VPRITM("value",VPRP)=X
"RTN","VPRDLRA",60,0)
 ... S:$G(ORD) VPRITM("labOrderID")=ORD
"RTN","VPRDLRA",61,0)
 .. I $D(^TMP("LRRR",$J,DFN,VPRSUB,VPRIDT,"N")) M CMMT=^("N") S VPRITM("comment")=$$STRING^VPRD(.CMMT)
"RTN","VPRDLRA",62,0)
 .. D XML(.VPRITM)
"RTN","VPRDLRA",63,0)
 K ^TMP("LRRR",$J,DFN),^TMP("VPRTEXT",$J)
"RTN","VPRDLRA",64,0)
 Q
"RTN","VPRDLRA",65,0)
 ;
"RTN","VPRDLRA",66,0)
CH() ; -- return a Chemistry result as:
"RTN","VPRDLRA",67,0)
 ;   id^test^result^interpretation^units^low^high^localName^loinc^vuid^order
"RTN","VPRDLRA",68,0)
 ;   Expects ^TMP("LRRR",$J,DFN,"CH",VPRIDT,VPRP),LRDFN
"RTN","VPRDLRA",69,0)
 N X,Y,X0,VPRN,NODE,CMMT,LOINC
"RTN","VPRDLRA",70,0)
 S X0=$G(^TMP("LRRR",$J,DFN,"CH",VPRIDT,VPRP)),VPRN=$$LRDN^LRPXAPIU(+X0)
"RTN","VPRDLRA",71,0)
 S NODE=$G(^LR(LRDFN,"CH",VPRIDT,VPRN))
"RTN","VPRDLRA",72,0)
 S X=$P($G(^LAB(60,+X0,0)),U)
"RTN","VPRDLRA",73,0)
 S Y="CH;"_VPRIDT_";"_VPRN_U_X_U_$P(X0,U,2,4)
"RTN","VPRDLRA",74,0)
 S X=$P(X0,U,5) I $L(X),X["-" S X=$TR(X,"- ","^"),$P(Y,U,6,7)=X
"RTN","VPRDLRA",75,0)
 S $P(Y,U,8)=$P(X0,U,15) ;test short name
"RTN","VPRDLRA",76,0)
 S X=$P($P(NODE,U,3),"!",3) S:X LOINC=$$GET1^DIQ(95.3,X_",",.01)
"RTN","VPRDLRA",77,0)
 S:$G(LOINC) $P(Y,U,9,10)=LOINC_U_$$VUID^VPRD(+LOINC,95.3)
"RTN","VPRDLRA",78,0)
 S ORD=+$P(X0,U,17),X=$$ORDER(ORD,+X0) S:X $P(Y,U,11)=X
"RTN","VPRDLRA",79,0)
 Q Y
"RTN","VPRDLRA",80,0)
 ;
"RTN","VPRDLRA",81,0)
MI() ; -- return a Microbiology result as:
"RTN","VPRDLRA",82,0)
 ;   id^test^result^interpretation^units
"RTN","VPRDLRA",83,0)
 ;   Expects ^TMP("LRRR",$J,DFN,"MI",VPRIDT,VPRP)
"RTN","VPRDLRA",84,0)
 N Y,X0
"RTN","VPRDLRA",85,0)
 S X0=$G(^TMP("LRRR",$J,DFN,"MI",VPRIDT,VPRP)),Y=""
"RTN","VPRDLRA",86,0)
 S:$L($P(X0,U))>1 Y="MI;"_VPRIDT_";"_VPRP_U_$P(X0,U,1,4)
"RTN","VPRDLRA",87,0)
 S ORD=+$P(X0,U,17)
"RTN","VPRDLRA",88,0)
 Q Y
"RTN","VPRDLRA",89,0)
 ;
"RTN","VPRDLRA",90,0)
AP(LAB) ; -- return a Pathology result in LAB("attribute")=value
"RTN","VPRDLRA",91,0)
 N LR0,X,I,NODE
"RTN","VPRDLRA",92,0)
 S LR0=$G(^LR(LRDFN,VPRSUB,VPRIDT,0))
"RTN","VPRDLRA",93,0)
 S LAB("type")=VPRSUB,LAB("id")=VPRSUB_";"_VPRIDT
"RTN","VPRDLRA",94,0)
 S LAB("collected")=9999999-VPRIDT,LAB("status")="completed"
"RTN","VPRDLRA",95,0)
 S LAB("resulted")=$P(LR0,U,11),LAB("groupName")=$P(LR0,U,6)
"RTN","VPRDLRA",96,0)
 S X="",I=0 F  S I=$O(^LR(LRDFN,VPRSUB,VPRIDT,.1,I)) Q:I<1  S X=X_$S($L(X):", ",1:"")_$P($G(^(I,0)),U)
"RTN","VPRDLRA",97,0)
 S:$L(X) LAB("specimen")=U_X
"RTN","VPRDLRA",98,0)
 S LAB("facility")=$$FAC^VPRD
"RTN","VPRDLRA",99,0)
 S NODE=$S(VPRSUB="AU":$NA(^LR(LRDFN,101)),1:$NA(^LR(LRDFN,VPRSUB,VPRIDT,.05)))
"RTN","VPRDLRA",100,0)
 S I=0 F  S I=$O(@NODE@(I)) Q:I<1  S X=+$P($G(@NODE@(I,0)),U,2) I X D
"RTN","VPRDLRA",101,0)
 . N LT,NT,VPRY
"RTN","VPRDLRA",102,0)
 . S LT=$$GET1^DIQ(8925,+X_",",.01) Q:$P(LT," ")="Addendum"
"RTN","VPRDLRA",103,0)
 . S NT=$$GET1^DIQ(8925,+X_",",".01:1501") S:NT="" NT="LABORATORY NOTE"
"RTN","VPRDLRA",104,0)
 . S LAB("document",I)=+X_U_LT_U_NT
"RTN","VPRDLRA",105,0)
 . S:$G(VPRTEXT) LAB("document",I,"content")=$$TEXT^VPRDTIU(+X)
"RTN","VPRDLRA",106,0)
 I '$O(LAB("document",0)) D  ;non-TIU reports
"RTN","VPRDLRA",107,0)
 . S LAB("document",1)=VPRSUB_";"_VPRIDT_"^LR "_$$NAME(VPRSUB)_" REPORT^LABORATORY NOTE"
"RTN","VPRDLRA",108,0)
 . S:$G(VPRTEXT) LAB("document",1,"content")=$$TEXT(DFN,VPRSUB,VPRIDT)
"RTN","VPRDLRA",109,0)
 Q
"RTN","VPRDLRA",110,0)
 ;
"RTN","VPRDLRA",111,0)
ORDER(LABORD,TEST) ; -- return #100 order number for Lab order# & Test
"RTN","VPRDLRA",112,0)
 N Y,D,S,T
"RTN","VPRDLRA",113,0)
 S D=$P(9999999-VPRIDT,"."),Y=""
"RTN","VPRDLRA",114,0)
 S S=0 F  S S=$O(^LRO(69,"C",LABORD,D,S)) Q:S<1  D  Q:Y
"RTN","VPRDLRA",115,0)
 . S T=0 F  S T=$O(^LRO(69,D,1,S,2,T)) Q:T<1  I 'TEST!(+$G(^(T,0))=TEST) S Y=+$P(^(0),U,7)
"RTN","VPRDLRA",116,0)
 Q Y
"RTN","VPRDLRA",117,0)
 ;
"RTN","VPRDLRA",118,0)
NAME(X) ; -- Return name of subscript X
"RTN","VPRDLRA",119,0)
 I X="AU" Q "AUTOPSY"
"RTN","VPRDLRA",120,0)
 I X="BB" Q "BLOOD BANK"
"RTN","VPRDLRA",121,0)
 I X="CH" Q "CHEM,HEM,TOX,RIA,SER,etc."
"RTN","VPRDLRA",122,0)
 I X="CY" Q "CYTOPATHOLOGY"
"RTN","VPRDLRA",123,0)
 I X="EM" Q "ELECTRON MICROSCOPY"
"RTN","VPRDLRA",124,0)
 I X="MI" Q "MICROBIOLOGY"
"RTN","VPRDLRA",125,0)
 I X="SP" Q "SURGICAL PATHOLOGY"
"RTN","VPRDLRA",126,0)
 Q "ANATOMIC PATHOLOGY"
"RTN","VPRDLRA",127,0)
 ;
"RTN","VPRDLRA",128,0)
AREA(ACCNUM) ; -- Return name of accession area
"RTN","VPRDLRA",129,0)
 N X,Y,VPRA
"RTN","VPRDLRA",130,0)
 S X=$P($G(ACCNUM)," "),Y=""
"RTN","VPRDLRA",131,0)
 I $L(X) D FIND^DIC(68,,.01,"QX",X,,,,,"VPRA")
"RTN","VPRDLRA",132,0)
 S Y=$G(VPRA("DILIST",1,1))
"RTN","VPRDLRA",133,0)
 Q Y
"RTN","VPRDLRA",134,0)
 ;
"RTN","VPRDLRA",135,0)
 ; ------------ Get report(s) [via VPRDTIU] ------------
"RTN","VPRDLRA",136,0)
 ;
"RTN","VPRDLRA",137,0)
RPTS(DFN,BEG,END,MAX) ; -- find patient's lab reports
"RTN","VPRDLRA",138,0)
 N VPRSUB,VPRIDT,VPRITM,VPRTIU,VPRXID,LRDFN,VPRN,DA
"RTN","VPRDLRA",139,0)
 S DFN=+$G(DFN) Q:$G(DFN)<1
"RTN","VPRDLRA",140,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","VPRDLRA",141,0)
 S LRDFN=$G(^DPT(DFN,"LR"))
"RTN","VPRDLRA",142,0)
 K ^TMP("LRRR",$J,DFN) D RR^LR7OR1(DFN,,BEG,END,"AP",,,MAX)
"RTN","VPRDLRA",143,0)
 S VPRSUB="" F  S VPRSUB=$O(^TMP("LRRR",$J,DFN,VPRSUB)) Q:VPRSUB=""  D
"RTN","VPRDLRA",144,0)
 . S VPRIDT=0 F  S VPRIDT=$O(^TMP("LRRR",$J,DFN,VPRSUB,VPRIDT)) Q:VPRIDT<1  I $O(^(VPRIDT,0)) D
"RTN","VPRDLRA",145,0)
 .. S VPRTIU=$S(VPRSUB="AU":$NA(^LR(LRDFN,101)),1:$NA(^LR(LRDFN,VPRSUB,VPRIDT,.05)))
"RTN","VPRDLRA",146,0)
 .. K VPRITM S VPRXID=VPRSUB_";"_VPRIDT
"RTN","VPRDLRA",147,0)
 .. I '$O(@VPRTIU@(0)) D RPT1(DFN,VPRXID,.VPRITM),XML^VPRDTIU(.VPRITM):$D(VPRITM) Q
"RTN","VPRDLRA",148,0)
 .. S VPRN=0 F  S VPRN=$O(@VPRTIU@(VPRN)) Q:VPRN<1  D
"RTN","VPRDLRA",149,0)
 ... S DA=+$P($G(@VPRTIU@(VPRN,0)),U,2) Q:DA<1  K VPRITM
"RTN","VPRDLRA",150,0)
 ... D EN1^VPRDTIU(DA,.VPRITM),XML^VPRDTIU(.VPRITM):$D(VPRITM)
"RTN","VPRDLRA",151,0)
 K ^TMP("LRRR",$J,DFN),^TMP("VPRTEXT",$J)
"RTN","VPRDLRA",152,0)
 Q
"RTN","VPRDLRA",153,0)
 ;
"RTN","VPRDLRA",154,0)
RPT1(DFN,ID,RPT) ; -- return report as a TIU document
"RTN","VPRDLRA",155,0)
 S DFN=+$G(DFN),ID=$G(ID) Q:DFN<1  Q:'$L(ID)
"RTN","VPRDLRA",156,0)
 N SUB,IDT,LRDFN,LR0,X,LOC
"RTN","VPRDLRA",157,0)
 K RPT,^TMP("VPRTEXT",$J)
"RTN","VPRDLRA",158,0)
 S SUB=$P(ID,";"),IDT=+$P(ID,";",2),LRDFN=$G(^DPT(DFN,"LR"))
"RTN","VPRDLRA",159,0)
 S LR0=$S(SUB="AU":$G(^LR(LRDFN,"AU")),1:$G(^LR(LRDFN,SUB,IDT,0)))
"RTN","VPRDLRA",160,0)
 S RPT("id")=ID,RPT("referenceDateTime")=9999999-IDT
"RTN","VPRDLRA",161,0)
 S RPT("localTitle")="LR "_$$NAME(SUB)_" REPORT"
"RTN","VPRDLRA",162,0)
 S RPT("documentClass")="LR LABORATORY REPORTS"
"RTN","VPRDLRA",163,0)
 S RPT("nationalTitle")="4697105^LABORATORY NOTE"
"RTN","VPRDLRA",164,0)
 S RPT("nationalTitleSubject")="4697104^LABORATORY"
"RTN","VPRDLRA",165,0)
 S RPT("nationalTitleType")="4696120^NOTE"
"RTN","VPRDLRA",166,0)
 S RPT("type")="LR",RPT("status")="COMPLETED"
"RTN","VPRDLRA",167,0)
 S:$G(FILTER("loinc")) RPT("loinc")=$P(FILTER("loinc"),U)
"RTN","VPRDLRA",168,0)
 S X=$P(LR0,U,$S(SUB="AU":5,1:8)),LOC="" S:$L(X) LOC=+$O(^SC("B",X,0))
"RTN","VPRDLRA",169,0)
 S RPT("facility")=$$FAC^VPRD(LOC)
"RTN","VPRDLRA",170,0)
 I LOC D  ;look-up visit
"RTN","VPRDLRA",171,0)
 . N CDT S CDT=9999999-IDT
"RTN","VPRDLRA",172,0)
 . S X=$$GETENC^PXAPI(DFN,CDT,LOC)
"RTN","VPRDLRA",173,0)
 . S:X RPT("encounter")=+X
"RTN","VPRDLRA",174,0)
 S X=+$P(LR0,U,$S(SUB="AU":10,1:2)) ;pathologist
"RTN","VPRDLRA",175,0)
 S:X RPT("clinician",1)=X_U_$P($G(^VA(200,X,0)),U)_"^A"
"RTN","VPRDLRA",176,0)
 S X=$S(SUB="AU":$P(LR0,U,15,16),1:$P(LR0,U,11)_U_$P(LR0,U,13)) I X D
"RTN","VPRDLRA",177,0)
 . N Y S Y=$P(X,U,2)
"RTN","VPRDLRA",178,0)
 . S RPT("clinician",2)=Y_U_$P($G(^VA(200,+Y,0)),U)_"^S^"_+X_U_$P($G(^VA(200,+Y,20)),U,2)
"RTN","VPRDLRA",179,0)
 S:$G(VPRTEXT) RPT("content")=$$TEXT(DFN,SUB,IDT)
"RTN","VPRDLRA",180,0)
 Q
"RTN","VPRDLRA",181,0)
 ;
"RTN","VPRDLRA",182,0)
TEXT(DFN,SUB,IDT) ; -- Get report text, return temp array name
"RTN","VPRDLRA",183,0)
 N LRDFN,DATE,NAME,VPRS,VPRY,I,X,Y
"RTN","VPRDLRA",184,0)
 K ^TMP("LRC",$J),^TMP("LRH",$J),^TMP("LRT",$J)
"RTN","VPRDLRA",185,0)
 S DATE=9999999-+$G(IDT),NAME=$S(SUB="EM":"EM",1:$$NAME(SUB)),VPRS(NAME)=""
"RTN","VPRDLRA",186,0)
 D EN^LR7OSUM(.VPRY,DFN,DATE,DATE,,,.VPRS)
"RTN","VPRDLRA",187,0)
 S Y=$NA(^TMP("VPRTEXT",$J,SUB_";"_IDT)) K @Y
"RTN","VPRDLRA",188,0)
 S I=+$G(^TMP("LRH",$J,NAME)) ;LRH=header
"RTN","VPRDLRA",189,0)
 F  S I=$O(^TMP("LRC",$J,I)) Q:I<1  S X=$G(^(I,0)) Q:X?1."="  S @Y@(I)=X
"RTN","VPRDLRA",190,0)
 K ^TMP("LRC",$J),^TMP("LRH",$J),^TMP("LRT",$J)
"RTN","VPRDLRA",191,0)
 Q Y
"RTN","VPRDLRA",192,0)
 ;
"RTN","VPRDLRA",193,0)
 ; ------------ Return data to middle tier ------------
"RTN","VPRDLRA",194,0)
 ;
"RTN","VPRDLRA",195,0)
XML(LAB) ; -- Return result as XML in @VPR@(#)
"RTN","VPRDLRA",196,0)
 N ATT,X,Y,NAMES,I,J
"RTN","VPRDLRA",197,0)
 D ADD("<accession>") S VPRTOTL=$G(VPRTOTL)+1
"RTN","VPRDLRA",198,0)
 S ATT="" F  S ATT=$O(LAB(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","VPRDLRA",199,0)
 . I $O(LAB(ATT,0)) D  S Y="" Q
"RTN","VPRDLRA",200,0)
 .. D ADD("<"_ATT_"s>")
"RTN","VPRDLRA",201,0)
 .. S NAMES=$S(ATT="document":"id^localTitle^nationalTitle^Z",ATT="value":"id^test^result^interpretation^units^low^high^localName^loinc^vuid^order^Z",1:"code^name^Z")
"RTN","VPRDLRA",202,0)
 .. S I=0 F  S I=$O(LAB(ATT,I)) Q:I<1  D
"RTN","VPRDLRA",203,0)
 ... S X=$G(LAB(ATT,I))
"RTN","VPRDLRA",204,0)
 ... S Y="<"_ATT_" "_$$LOOP ;_"/>" D ADD(Y)
"RTN","VPRDLRA",205,0)
 ... S X=$G(LAB(ATT,I,"content")) I '$L(X) S Y=Y_"/>" D ADD(Y) Q
"RTN","VPRDLRA",206,0)
 ... S Y=Y_">" D ADD(Y)
"RTN","VPRDLRA",207,0)
 ... S Y="<content xml:space='preserve'>" D ADD(Y)
"RTN","VPRDLRA",208,0)
 ... S J=0 F  S J=$O(@X@(J)) Q:J<1  S Y=$$ESC^VPRD(@X@(J)) D ADD(Y)
"RTN","VPRDLRA",209,0)
 ... D ADD("</content>"),ADD("</"_ATT_">")
"RTN","VPRDLRA",210,0)
 .. D ADD("</"_ATT_"s>")
"RTN","VPRDLRA",211,0)
 . S X=$G(LAB(ATT)),Y="" Q:'$L(X)
"RTN","VPRDLRA",212,0)
 . I ATT="comment" S Y="<"_ATT_" xml:space='preserve'>"_$$ESC^VPRD(X)_"</"_ATT_">" Q
"RTN","VPRDLRA",213,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^VPRD(X)_"' />" Q
"RTN","VPRDLRA",214,0)
 . I $L(X)>1 D  S Y=""
"RTN","VPRDLRA",215,0)
 .. S NAMES="code^name^Z"
"RTN","VPRDLRA",216,0)
 .. S Y="<"_ATT_" "_$$LOOP_"/>" D ADD(Y)
"RTN","VPRDLRA",217,0)
 D ADD("</accession>")
"RTN","VPRDLRA",218,0)
 Q
"RTN","VPRDLRA",219,0)
 ;
"RTN","VPRDLRA",220,0)
LOOP() ; -- build sub-items string from NAMES and X
"RTN","VPRDLRA",221,0)
 N STR,P,TAG S STR=""
"RTN","VPRDLRA",222,0)
 F P=1:1 S TAG=$P(NAMES,U,P) Q:TAG="Z"  I $L($P(X,U,P)) S STR=STR_TAG_"='"_$$ESC^VPRD($P(X,U,P))_"' "
"RTN","VPRDLRA",223,0)
 Q STR
"RTN","VPRDLRA",224,0)
 ;
"RTN","VPRDLRA",225,0)
ADD(X) ; -- Add a line @VPR@(n)=X
"RTN","VPRDLRA",226,0)
 S VPRI=$G(VPRI)+1
"RTN","VPRDLRA",227,0)
 S @VPR@(VPRI)=X
"RTN","VPRDLRA",228,0)
 Q
"RTN","VPRDLRO")
0^36^B27947758^B27350157
"RTN","VPRDLRO",1,0)
VPRDLRO ;SLC/MKB -- Laboratory extract by order/panel ;8/2/11  15:29
"RTN","VPRDLRO",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 317
"RTN","VPRDLRO",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDLRO",4,0)
 ;
"RTN","VPRDLRO",5,0)
 ; External References          DBIA#
"RTN","VPRDLRO",6,0)
 ; -------------------          -----
"RTN","VPRDLRO",7,0)
 ; ^DPT                         10035
"RTN","VPRDLRO",8,0)
 ; ^LAB(60                      10054
"RTN","VPRDLRO",9,0)
 ; ^LAB(61                        524
"RTN","VPRDLRO",10,0)
 ; ^LRO(69                       2407
"RTN","VPRDLRO",11,0)
 ; ^LR                            525
"RTN","VPRDLRO",12,0)
 ; DIQ                           2056
"RTN","VPRDLRO",13,0)
 ; LR7OR1,^TMP("LRRR",$J)        2503
"RTN","VPRDLRO",14,0)
 ; LR7OU1                        2955
"RTN","VPRDLRO",15,0)
 ; LRPXAPIU                      4246
"RTN","VPRDLRO",16,0)
 ; ORX8                          3071
"RTN","VPRDLRO",17,0)
 ; XUAF4                         2171
"RTN","VPRDLRO",18,0)
 ;
"RTN","VPRDLRO",19,0)
 ; ------------ Get results from VistA ------------
"RTN","VPRDLRO",20,0)
 ;
"RTN","VPRDLRO",21,0)
EN(DFN,BEG,END,MAX,ID) ; -- find patient's lab results
"RTN","VPRDLRO",22,0)
 N VPRSUB,VPRIDT,VPRN,VPRLRO,VPRT,VPRITM,CMMT,LRDFN,LR0,X
"RTN","VPRDLRO",23,0)
 S DFN=+$G(DFN) Q:$G(DFN)<1
"RTN","VPRDLRO",24,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","VPRDLRO",25,0)
 S LRDFN=$G(^DPT(DFN,"LR")),VPRSUB="CH"
"RTN","VPRDLRO",26,0)
 K ^TMP("LRRR",$J,DFN)
"RTN","VPRDLRO",27,0)
 ;
"RTN","VPRDLRO",28,0)
 ; get result(s)
"RTN","VPRDLRO",29,0)
 I $G(ID)  D RR^LR7OR1(DFN,ID)
"RTN","VPRDLRO",30,0)
 I '$G(ID) D  ;no id, or accession format (no lab order)
"RTN","VPRDLRO",31,0)
 . S:$G(ID)'="" VPRSUB=$P(ID,";"),(BEG,END)=9999999-$P(ID,";",2)
"RTN","VPRDLRO",32,0)
 . D RR^LR7OR1(DFN,,BEG,END,VPRSUB,,,MAX)
"RTN","VPRDLRO",33,0)
 ;
"RTN","VPRDLRO",34,0)
 S VPRSUB="" F  S VPRSUB=$O(^TMP("LRRR",$J,DFN,VPRSUB)) Q:VPRSUB=""  D
"RTN","VPRDLRO",35,0)
 . S VPRIDT=0 F  S VPRIDT=$O(^TMP("LRRR",$J,DFN,VPRSUB,VPRIDT)) Q:VPRIDT<1  I $O(^(VPRIDT,0)) D
"RTN","VPRDLRO",36,0)
 .. I "CH^MI"'[VPRSUB Q
"RTN","VPRDLRO",37,0)
 .. D SORT ;group accession by lab orders > VPRLRO(panel,VPRN)=data node
"RTN","VPRDLRO",38,0)
 .. S VPRT="" F  S VPRT=$O(VPRLRO(VPRT)) Q:VPRT=""  D
"RTN","VPRDLRO",39,0)
 ... K VPRITM,CMMT S X=$G(VPRLRO(VPRT))
"RTN","VPRDLRO",40,0)
 ... I $G(ID),$P(ID,";",1,3)'=$P($P(X,U,3),";",1,3) Q  ;single order/specimen
"RTN","VPRDLRO",41,0)
 ... S VPRITM("id")=$P(X,U,3),VPRITM("order")=$P(X,U,1,2)
"RTN","VPRDLRO",42,0)
 ... S VPRITM("type")=VPRSUB,VPRITM("status")="completed"
"RTN","VPRDLRO",43,0)
 ... S VPRITM("collected")=9999999-VPRIDT
"RTN","VPRDLRO",44,0)
 ... S LR0=$G(^LR(LRDFN,VPRSUB,VPRIDT,0))
"RTN","VPRDLRO",45,0)
 ... S VPRITM("resulted")=$P(LR0,U,3),X=+$P(LR0,U,5) I X D  ;specimen
"RTN","VPRDLRO",46,0)
 .... N IENS,VPRY S IENS=X_","
"RTN","VPRDLRO",47,0)
 .... D GETS^DIQ(61,IENS,".01:2",,"VPRY")
"RTN","VPRDLRO",48,0)
 .... S VPRITM("specimen")=$G(VPRY(61,IENS,2))_U_$G(VPRY(61,IENS,.01)) ;SNOMED^name
"RTN","VPRDLRO",49,0)
 .... S VPRITM("sample")=$$GET1^DIQ(61,X_",",4.1) ;name
"RTN","VPRDLRO",50,0)
 ... S VPRITM("groupName")=$P(LR0,U,6),X=+$P(LR0,U,14)
"RTN","VPRDLRO",51,0)
 ... S:X VPRITM("facility")=$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U)
"RTN","VPRDLRO",52,0)
 ... I 'X S VPRITM("facility")=$$FAC^VPRD ;local stn#^name
"RTN","VPRDLRO",53,0)
 ... S VPRN=0 F  S VPRN=$O(VPRLRO(VPRT,VPRN)) Q:VPRN<1  D
"RTN","VPRDLRO",54,0)
 .... S X=$G(VPRLRO(VPRT,VPRN))
"RTN","VPRDLRO",55,0)
 .... S:VPRSUB="CH" VPRITM("value",VPRN)=$$CH(X)
"RTN","VPRDLRO",56,0)
 .... S:VPRSUB="MI" VPRITM("value",VPRN)=$$MI(X)
"RTN","VPRDLRO",57,0)
 ... I $D(^TMP("LRRR",$J,DFN,VPRSUB,VPRIDT,"N")) M CMMT=^("N") S VPRITM("comment")=$$STRING^VPRD(.CMMT)
"RTN","VPRDLRO",58,0)
 ... D XML(.VPRITM)
"RTN","VPRDLRO",59,0)
 K ^TMP("LRRR",$J,DFN)
"RTN","VPRDLRO",60,0)
 Q
"RTN","VPRDLRO",61,0)
 ;
"RTN","VPRDLRO",62,0)
SORT ; -- return VPRLRO(PANEL) = CPRS order# ^ panel/test name ^ Lab Order string
"RTN","VPRDLRO",63,0)
 ;               VPRLRO(PANEL,VPRN) = result node
"RTN","VPRDLRO",64,0)
 N VPRP,X0,NUM,ORD,ODT,SN,T,T0,ORIFN,I,VPRY,VPRLRT K VPRLRO
"RTN","VPRDLRO",65,0)
 S VPRP=$O(^TMP("LRRR",$J,DFN,VPRSUB,VPRIDT,0)),X0=$G(^(VPRP)) ;first
"RTN","VPRDLRO",66,0)
 S NUM=$P(X0,U,16),ORD=$P(X0,U,17),ODT=+$P(9999999-VPRIDT,".")
"RTN","VPRDLRO",67,0)
 ; - build VPRLRT list of result nodes for each test/panel
"RTN","VPRDLRO",68,0)
 I ORD S SN=0 F  S SN=$O(^LRO(69,"C",ORD,ODT,SN)) Q:SN<1  D  Q:$D(VPRLRT)
"RTN","VPRDLRO",69,0)
 . I $G(ID),$P(ID,";",3)'=SN Q
"RTN","VPRDLRO",70,0)
 . S T=0 F  S T=+$O(^LRO(69,ODT,1,SN,2,T)) Q:T<1  D
"RTN","VPRDLRO",71,0)
 .. I $G(ID),$P(ID,";",4),T'=$P(ID,";",4) Q
"RTN","VPRDLRO",72,0)
 .. S T0=$G(^LRO(69,ODT,1,SN,2,T,0))
"RTN","VPRDLRO",73,0)
 .. ; is test/panel part of same accession?
"RTN","VPRDLRO",74,0)
 .. S ORIFN=+$P(T0,U,7)
"RTN","VPRDLRO",75,0)
 .. Q:VPRIDT'=$P($$PKGID^ORX8(ORIFN),";",5)
"RTN","VPRDLRO",76,0)
 .. ; expand panel into unit tests
"RTN","VPRDLRO",77,0)
 .. K VPRY D EXPAND^LR7OU1(+T0,.VPRY)
"RTN","VPRDLRO",78,0)
 .. S I=0 F  S I=$O(VPRY(I)) Q:I<1  S VPRLRT(I,+T0)="" ;VPRLRT(test,panel)=""
"RTN","VPRDLRO",79,0)
 .. S VPRLRO(+T0)=$P(T0,U,7)_U_$P($G(^LAB(60,+T0,0)),U)_U_ORD_";"_ODT_";"_SN_";"_T
"RTN","VPRDLRO",80,0)
 S:'$D(VPRLRO) VPRLRO(0)=$S(VPRSUB="MI":"^MICROBIOLOGY^MI;",1:"^ACCESSION^CH;")_VPRIDT ;no Lab Order
"RTN","VPRDLRO",81,0)
 ; - build VPRLRO(panel#,VPRN) = ^TMP node
"RTN","VPRDLRO",82,0)
 S VPRP=0 F  S VPRP=$O(^TMP("LRRR",$J,DFN,"CH",VPRIDT,VPRP)) Q:VPRP<1  S X0=$G(^(VPRP)) D
"RTN","VPRDLRO",83,0)
 . S VPRN=$$LRDN^LRPXAPIU(+X0)
"RTN","VPRDLRO",84,0)
 . I '$D(VPRLRT(+X0)) S VPRLRO(0,VPRN)=X0 Q  ;no Lab Order
"RTN","VPRDLRO",85,0)
 . S T=0 F  S T=$O(VPRLRT(+X0,T)) Q:T<1  S VPRLRO(T,VPRN)=X0
"RTN","VPRDLRO",86,0)
 Q
"RTN","VPRDLRO",87,0)
 ;
"RTN","VPRDLRO",88,0)
CH(X0) ; -- return a Chemistry result as:
"RTN","VPRDLRO",89,0)
 ;   id^test^result^interpretation^units^low^high^loinc^vuid
"RTN","VPRDLRO",90,0)
 ;   Expects X0=^TMP("LRRR",$J,DFN,"CH",VPRIDT,VPRP),VPRN,LRDFN
"RTN","VPRDLRO",91,0)
 N X,Y,NODE,LOINC
"RTN","VPRDLRO",92,0)
 S NODE=$G(^LR(LRDFN,"CH",VPRIDT,VPRN))
"RTN","VPRDLRO",93,0)
 S X=$P($G(^LAB(60,+X0,0)),U)
"RTN","VPRDLRO",94,0)
 S Y="CH;"_VPRIDT_";"_VPRN_U_X_U_$P(X0,U,2,4)
"RTN","VPRDLRO",95,0)
 S X=$P(X0,U,5) I $L(X),X["-" S X=$TR(X,"- ","^"),$P(Y,U,6,7)=X
"RTN","VPRDLRO",96,0)
 S X=$P($P(NODE,U,3),"!",3) S:X LOINC=$$GET1^DIQ(95.3,X_",",.01)
"RTN","VPRDLRO",97,0)
 S:$G(LOINC) $P(Y,U,8,9)=LOINC_U_$$VUID^VPRD(+LOINC,95.3)
"RTN","VPRDLRO",98,0)
 Q Y
"RTN","VPRDLRO",99,0)
 ;
"RTN","VPRDLRO",100,0)
MI(X0) ; -- return a Microbiology result as:
"RTN","VPRDLRO",101,0)
 ;   id^test^result^interpretation^units
"RTN","VPRDLRO",102,0)
 ;   Expects X0=^TMP("LRRR",$J,DFN,"MI",VPRIDT,VPRP)
"RTN","VPRDLRO",103,0)
 N Y S Y=""
"RTN","VPRDLRO",104,0)
 S:$L($P(X0,U))>1 Y="MI;"_VPRIDT_";"_VPRN_U_$P(X0,U,1,4)
"RTN","VPRDLRO",105,0)
 Q Y
"RTN","VPRDLRO",106,0)
 ;
"RTN","VPRDLRO",107,0)
 ; ------------ Return data to middle tier ------------
"RTN","VPRDLRO",108,0)
 ;
"RTN","VPRDLRO",109,0)
XML(LAB) ; -- Return result as XML in @VPR@(#)
"RTN","VPRDLRO",110,0)
 N ATT,X,Y,I,J,P,NAMES,TAG
"RTN","VPRDLRO",111,0)
 D ADD("<panel>") S VPRTOTL=$G(VPRTOTL)+1
"RTN","VPRDLRO",112,0)
 S ATT="" F  S ATT=$O(LAB(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","VPRDLRO",113,0)
 . I $O(LAB(ATT,0)) D  S Y="" Q
"RTN","VPRDLRO",114,0)
 .. D ADD("<"_ATT_"s>")
"RTN","VPRDLRO",115,0)
 .. I ATT="value" S NAMES="id^test^result^interpretation^units^low^high^loinc^vuid^Z"
"RTN","VPRDLRO",116,0)
 .. E  S NAMES="code^name^Z"
"RTN","VPRDLRO",117,0)
 .. S I=0 F  S I=$O(LAB(ATT,I)) Q:I<1  D
"RTN","VPRDLRO",118,0)
 ... S X=$G(LAB(ATT,I)),Y="<"_ATT_" "_$$LOOP_"/>" D ADD(Y)
"RTN","VPRDLRO",119,0)
 .. D ADD("</"_ATT_"s>")
"RTN","VPRDLRO",120,0)
 . S X=$G(LAB(ATT)),Y="" Q:'$L(X)
"RTN","VPRDLRO",121,0)
 . I ATT="comment" S Y="<"_ATT_" xml:space='preserve'>"_$$ESC^VPRD(X)_"</"_ATT_">" Q
"RTN","VPRDLRO",122,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^VPRD(X)_"' />" Q
"RTN","VPRDLRO",123,0)
 . I $L(X)>1 S NAMES="code^name^Z",Y="<"_ATT_" "_$$LOOP_"/>"
"RTN","VPRDLRO",124,0)
 D ADD("</panel>")
"RTN","VPRDLRO",125,0)
 Q
"RTN","VPRDLRO",126,0)
 ;
"RTN","VPRDLRO",127,0)
LOOP() ; -- build sub-items string from NAMES and X
"RTN","VPRDLRO",128,0)
 N STR,P,TAG S STR=""
"RTN","VPRDLRO",129,0)
 F P=1:1 S TAG=$P(NAMES,U,P) Q:TAG="Z"  I $L($P(X,U,P)) S STR=STR_TAG_"='"_$$ESC^VPRD($P(X,U,P))_"' "
"RTN","VPRDLRO",130,0)
 Q STR
"RTN","VPRDLRO",131,0)
 ;
"RTN","VPRDLRO",132,0)
ADD(X) ; -- Add a line @VPR@(n)=X
"RTN","VPRDLRO",133,0)
 S VPRI=$G(VPRI)+1
"RTN","VPRDLRO",134,0)
 S @VPR@(VPRI)=X
"RTN","VPRDLRO",135,0)
 Q
"RTN","VPRDMC")
0^33^B58353015^B58328454
"RTN","VPRDMC",1,0)
VPRDMC ;SLC/MKB -- Clinical Procedures (Medicine) ;3/14/12  09:03
"RTN","VPRDMC",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**1,2**;Sep 01, 2011;Build 317
"RTN","VPRDMC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDMC",4,0)
 ;
"RTN","VPRDMC",5,0)
 ; External References          DBIA#
"RTN","VPRDMC",6,0)
 ; -------------------          -----
"RTN","VPRDMC",7,0)
 ; ^SC                          10040
"RTN","VPRDMC",8,0)
 ; ^TIU(8925.1                   5677
"RTN","VPRDMC",9,0)
 ; ^VA(200                      10060
"RTN","VPRDMC",10,0)
 ; %DT                          10003
"RTN","VPRDMC",11,0)
 ; DILFD                         2055
"RTN","VPRDMC",12,0)
 ; DIQ                           2056
"RTN","VPRDMC",13,0)
 ; GMRCGUIB                      2980
"RTN","VPRDMC",14,0)
 ; ICPTCOD                       1995
"RTN","VPRDMC",15,0)
 ; MCARUTL2                      3279
"RTN","VPRDMC",16,0)
 ; MCARUTL3                      3280
"RTN","VPRDMC",17,0)
 ; MDPS1,^TMP("MDHSP"/"MDPTXT"   4230
"RTN","VPRDMC",18,0)
 ; TIULQ                         2693
"RTN","VPRDMC",19,0)
 ; TIUSRVLO                      2834
"RTN","VPRDMC",20,0)
 ; XUAF4                         2171
"RTN","VPRDMC",21,0)
 ;
"RTN","VPRDMC",22,0)
 ; ------------ Get procedures from VistA ------------
"RTN","VPRDMC",23,0)
 ;
"RTN","VPRDMC",24,0)
EN(DFN,BEG,END,MAX,ID) ; -- find patient's procedures
"RTN","VPRDMC",25,0)
 N VPRITM,RES,VPRN,VPRX,RTN,DATE,CONS,TIUN,X0,DA,GBL,X,Y,%DT,VPRT,LT,NT,LOC
"RTN","VPRDMC",26,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","VPRDMC",27,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","VPRDMC",28,0)
 ;
"RTN","VPRDMC",29,0)
 ; get one procedure
"RTN","VPRDMC",30,0)
 I $G(ID) D  ;reset dates for MDPS1
"RTN","VPRDMC",31,0)
 . N VPRMC,IEN,FILE
"RTN","VPRDMC",32,0)
 . S IEN=+ID,FILE=+$P(ID,"(",2) Q:FILE=702
"RTN","VPRDMC",33,0)
 . D MEDLKUP^MCARUTL3(.VPRMC,FILE,IEN)
"RTN","VPRDMC",34,0)
 . S X=$P(VPRMC,U,6) S:X (BEG,END)=X
"RTN","VPRDMC",35,0)
 ;
"RTN","VPRDMC",36,0)
 ; get all procedures
"RTN","VPRDMC",37,0)
 K ^TMP("MDHSP",$J) S RES=""
"RTN","VPRDMC",38,0)
 D EN1^MDPS1(RES,DFN,BEG,END,MAX,"",0)
"RTN","VPRDMC",39,0)
 S VPRN=0 F  S VPRN=$O(^TMP("MDHSP",$J,VPRN)) Q:VPRN<1  S VPRX=$G(^(VPRN)) D
"RTN","VPRDMC",40,0)
 . I $G(ID),ID'=+$P(VPRX,U,2) Q              ;update one procedure
"RTN","VPRDMC",41,0)
 . S RTN=$P(VPRX,U,3,4) Q:RTN="PRPRO^MDPS4"  ;skip non-CP items
"RTN","VPRDMC",42,0)
 . S X=$P(VPRX,U,6),%DT="TX" D ^%DT S:Y>0 DATE=Y
"RTN","VPRDMC",43,0)
 . S GBL=+$P(VPRX,U,2)_";"_$S(RTN="PR702^MDPS1":"MDD(702,",1:$$ROOT(DFN,$P(VPRX,U,11),DATE))
"RTN","VPRDMC",44,0)
 . Q:'GBL  I $G(ID),ID'=GBL Q                ;unknown, or not requested
"RTN","VPRDMC",45,0)
 . ;
"RTN","VPRDMC",46,0)
 . S CONS=+$P(VPRX,U,13) D:CONS DOCLIST^GMRCGUIB(.VPRD,CONS) S X0=$G(VPRD(0)) ;=^GMR(123,ID,0)
"RTN","VPRDMC",47,0)
 . S TIUN=+$P(VPRX,U,14) S:TIUN TIUN=TIUN_U_$$RESOLVE^TIUSRVLO(TIUN)
"RTN","VPRDMC",48,0)
A . ;
"RTN","VPRDMC",49,0)
 . K VPRITM S VPRITM("id")=GBL,VPRITM("name")=$P(VPRX,U)
"RTN","VPRDMC",50,0)
 . S VPRITM("dateTime")=DATE,VPRITM("category")="CP"
"RTN","VPRDMC",51,0)
 . S X=$P(VPRX,U,7) S:$L(X) VPRITM("interpretation")=X
"RTN","VPRDMC",52,0)
 . I CONS,X0 D
"RTN","VPRDMC",53,0)
 .. N VPRJ S VPRITM("consult")=CONS
"RTN","VPRDMC",54,0)
 .. S VPRITM("requested")=+X0,VPRITM("order")=+$P(X0,U,3)
"RTN","VPRDMC",55,0)
 .. S VPRITM("status")=$$EXTERNAL^DILFD(123,8,,$P(X0,U,12))
"RTN","VPRDMC",56,0)
 .. S VPRJ=0 F  S VPRJ=$O(VPRD(50,VPRJ)) Q:VPRJ<1  S X=+$G(VPRD(50,VPRJ)) D
"RTN","VPRDMC",57,0)
 ... K VPRT D EXTRACT^TIULQ(X,"VPRT",,.01) S LT=$G(VPRT(X,.01,"E"))
"RTN","VPRDMC",58,0)
 ... S NT=$$GET1^DIQ(8925.1,+$G(VPRT(X,.01,"I"))_",",1501)
"RTN","VPRDMC",59,0)
 ... S VPRITM("document",X)=X_U_LT_U_NT  ;ien^local^national title
"RTN","VPRDMC",60,0)
 ... S:$G(VPRTEXT) VPRITM("document",X,"content")=$$TEXT^VPRDTIU(X)
"RTN","VPRDMC",61,0)
 ... S:'TIUN TIUN=X ;get supporting fields
"RTN","VPRDMC",62,0)
B . ;
"RTN","VPRDMC",63,0)
 . I TIUN D
"RTN","VPRDMC",64,0)
 .. S X=$P(TIUN,U,5) S:X VPRITM("provider")=+X_U_$P(X,";",3)
"RTN","VPRDMC",65,0)
 .. S:$P(TIUN,U,11) VPRITM("hasImages")=1
"RTN","VPRDMC",66,0)
 .. K VPRT D EXTRACT^TIULQ(+TIUN,"VPRT",,".03;.05;1211",,,"I")
"RTN","VPRDMC",67,0)
 .. S VPRITM("encounter")=+$G(VPRT(+TIUN,.03,"I"))
"RTN","VPRDMC",68,0)
 .. S LOC=+$G(VPRT(+TIUN,1211,"I")) I LOC S LOC=LOC_U_$P($G(^SC(LOC,0)),U)
"RTN","VPRDMC",69,0)
 .. E  S X=$P(TIUN,U,6) S:$L(X) LOC=+$O(^SC("B",X,0))_U_X
"RTN","VPRDMC",70,0)
 .. S:LOC VPRITM("location")=LOC,VPRITM("facility")=$$FAC^VPRD(+LOC)
"RTN","VPRDMC",71,0)
 .. I '$D(VPRITM("status")) S X=+$G(VPRT(+TIUN,.05,"I")),VPRITM("status")=$S(X<6:"PARTIAL RESULTS",1:"COMPLETE")
"RTN","VPRDMC",72,0)
 .. I '$G(VPRITM("document",+TIUN)) D
"RTN","VPRDMC",73,0)
 ... K VPRT D EXTRACT^TIULQ(+TIUN,"VPRT",,.01,,,"I")
"RTN","VPRDMC",74,0)
 ... S NT=$$GET1^DIQ(8925.1,+$G(VPRT(+TIUN,.01,"I"))_",",1501)
"RTN","VPRDMC",75,0)
 ... S VPRITM("document",+TIUN)=$P(TIUN,U,1,2)_U_NT  ;ien^local^national title
"RTN","VPRDMC",76,0)
 ... S:$G(VPRTEXT) VPRITM("document",+TIUN,"content")=$$TEXT^VPRDTIU(+TIUN)
"RTN","VPRDMC",77,0)
C . ;
"RTN","VPRDMC",78,0)
 . ; if no consult or note/visit ...
"RTN","VPRDMC",79,0)
 . I '$D(VPRITM("facility")) S X=$P(X0,U,21),VPRITM("facility")=$S(X:$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U),1:$$FAC^VPRD)
"RTN","VPRDMC",80,0)
 . I '$D(VPRITM("status")) S VPRITM("status")="COMPLETE"
"RTN","VPRDMC",81,0)
 . ;I DA D  ;get CPT code from #697.2
"RTN","VPRDMC",82,0)
 . ;. K VPRT D GETS^DIQ(697.2,DA_",","1000*",,"VPRT")
"RTN","VPRDMC",83,0)
 . ;. N IENS S IENS=$O(VPRT(697.21,"")) Q:IENS=""
"RTN","VPRDMC",84,0)
 . ;. S X=VPRT(697.21,IENS,.01),VPRITM("type")=$$CPT(X)
"RTN","VPRDMC",85,0)
 . ;
"RTN","VPRDMC",86,0)
 . D XML(.VPRITM)
"RTN","VPRDMC",87,0)
ENQ ;
"RTN","VPRDMC",88,0)
 K ^TMP("MDHSP",$J),^TMP("VPRTEXT",$J)
"RTN","VPRDMC",89,0)
 Q
"RTN","VPRDMC",90,0)
 ;
"RTN","VPRDMC",91,0)
ROOT(DFN,NAME,DATE) ; -- return vptr ID for procedure instance
"RTN","VPRDMC",92,0)
 N VPRMC,Y
"RTN","VPRDMC",93,0)
 D SUB^MCARUTL2(.VPRMC,DFN,NAME,DATE,DATE)
"RTN","VPRDMC",94,0)
 S Y=$S(+$G(VPRMC):$P($G(VPRMC(VPRMC)),U,4)_",",1:"")
"RTN","VPRDMC",95,0)
 Q Y
"RTN","VPRDMC",96,0)
 ;
"RTN","VPRDMC",97,0)
CPT(IEN) ; -- return code^description for CPT code, or "^" if error
"RTN","VPRDMC",98,0)
 N X0,VPRX,N,I,X,Y S IEN=+$G(IEN)
"RTN","VPRDMC",99,0)
 S X0=$$CPT^ICPTCOD(IEN) I X0<0 Q "^"
"RTN","VPRDMC",100,0)
 S Y=$P(X0,U,2,3)                   ;CPT Code^Short Name
"RTN","VPRDMC",101,0)
 S N=$$CPTD^ICPTCOD($P(Y,U),"VPRX") ;CPT Description
"RTN","VPRDMC",102,0)
 I N>0,$L($G(VPRX(1))) D
"RTN","VPRDMC",103,0)
 . S X=$G(VPRX(1)),I=1
"RTN","VPRDMC",104,0)
 . F  S I=$O(VPRX(I)) Q:I<1  Q:VPRX(I)=" "  S X=X_" "_VPRX(I)
"RTN","VPRDMC",105,0)
 . S $P(Y,U,2)=X
"RTN","VPRDMC",106,0)
 Q Y
"RTN","VPRDMC",107,0)
 ;
"RTN","VPRDMC",108,0)
 ; ------------ Get report(s) [via VPRDTIU] ------------
"RTN","VPRDMC",109,0)
 ;
"RTN","VPRDMC",110,0)
RPTS(DFN,BEG,END,MAX) ; -- find patient's medicine reports
"RTN","VPRDMC",111,0)
 N VPRITM,VPRN,VPRX,RTN,TIUN,CONS,VPRD,I,DA,X,Y,%DT,DATE,GBL,RES
"RTN","VPRDMC",112,0)
 S DFN=+$G(DFN) Q:$G(DFN)<1
"RTN","VPRDMC",113,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999),RES=""
"RTN","VPRDMC",114,0)
 K ^TMP("MDHSP",$J) D EN1^MDPS1(RES,DFN,BEG,END,MAX,"",0)
"RTN","VPRDMC",115,0)
 S VPRN=0 F  S VPRN=$O(^TMP("MDHSP",$J,VPRN)) Q:VPRN<1  S VPRX=$G(^(VPRN)) D
"RTN","VPRDMC",116,0)
 . S RTN=$P(VPRX,U,3,4) ;Q:RTN="PRPRO^MDPS4"  ;skip non-CP items
"RTN","VPRDMC",117,0)
 . S TIUN=+$P(VPRX,U,14) K VPRITM
"RTN","VPRDMC",118,0)
 . I TIUN D EN1^VPRDTIU(TIUN,.VPRITM),XML^VPRDTIU(.VPRITM):$D(VPRITM)
"RTN","VPRDMC",119,0)
 . S CONS=+$P(VPRX,U,13) D:CONS DOCLIST^GMRCGUIB(.VPRD,CONS)
"RTN","VPRDMC",120,0)
 . S I=0 F  S I=$O(VPRD(50,I)) Q:I<1  D
"RTN","VPRDMC",121,0)
 .. K VPRITM S DA=+VPRD(50,I) Q:DA=TIUN
"RTN","VPRDMC",122,0)
 .. D EN1^VPRDTIU(DA,.VPRITM),XML^VPRDTIU(.VPRITM):$D(VPRITM)
"RTN","VPRDMC",123,0)
 . Q:TIUN!$G(DA)                             ;done [got TIU note(s)]
"RTN","VPRDMC",124,0)
 . Q:RTN="PR702^MDPS1"                       ;CP, but no TIU note yet
"RTN","VPRDMC",125,0)
 . Q:RTN="PRPRO^MDPS4"                       ;non-CP procedure
"RTN","VPRDMC",126,0)
 . ; find ID for pre-TIU report
"RTN","VPRDMC",127,0)
 . S X=$P(VPRX,U,6),%DT="TX" D ^%DT S:Y>0 DATE=Y
"RTN","VPRDMC",128,0)
 . S GBL=+$P(VPRX,U,2)_";"_$$ROOT(DFN,$P(VPRX,U,11),DATE)
"RTN","VPRDMC",129,0)
 . I GBL D RPT1(DFN,GBL,.VPRITM),XML^VPRDTIU(.VPRITM):$D(VPRITM)
"RTN","VPRDMC",130,0)
 K ^TMP("MDHSP",$J),^TMP("VPRTEXT",$J)
"RTN","VPRDMC",131,0)
 Q
"RTN","VPRDMC",132,0)
 ;
"RTN","VPRDMC",133,0)
RPT1(DFN,ID,RPT) ; -- return report as a TIU document
"RTN","VPRDMC",134,0)
 S DFN=+$G(DFN),ID=$G(ID) Q:DFN<1  Q:'$L(ID)
"RTN","VPRDMC",135,0)
 N VPRY,VPRFN,X
"RTN","VPRDMC",136,0)
 S VPRFN=+$P(ID,"(",2)
"RTN","VPRDMC",137,0)
 D MEDLKUP^MCARUTL3(.VPRY,VPRFN,+ID)
"RTN","VPRDMC",138,0)
 S RPT("id")=ID,RPT("referenceDateTime")=$P(VPRY,U,6)
"RTN","VPRDMC",139,0)
 S RPT("localTitle")=$P(VPRY,U,9),RPT("category")="CP"
"RTN","VPRDMC",140,0)
 S RPT("documentClass")="CLINICAL PROCEDURES"
"RTN","VPRDMC",141,0)
 S RPT("nationalTitle")="4696566^PROCEDURE REPORT"
"RTN","VPRDMC",142,0)
 S RPT("nationalTitleService")="4696471^PROCEDURE"
"RTN","VPRDMC",143,0)
 S RPT("nationalTitleType")="4696123^REPORT"
"RTN","VPRDMC",144,0)
 S:$G(FILTER("loinc")) RPT("loinc")=$P(FILTER("loinc"),U)
"RTN","VPRDMC",145,0)
 S X=$$GET1^DIQ(VPRFN,+ID_",",1506)
"RTN","VPRDMC",146,0)
 S RPT("status")=$S($L(X):X,1:"COMPLETED")
"RTN","VPRDMC",147,0)
 S X=+$$GET1^DIQ(VPRFN,+ID_",",701,"I")
"RTN","VPRDMC",148,0)
 S:X RPT("clinician",1)=X_U_$P($G(^VA(200,X,0)),U)_"^A"
"RTN","VPRDMC",149,0)
 S X=+$$GET1^DIQ(VPRFN,+ID_",",1503,"I")
"RTN","VPRDMC",150,0)
 S:X RPT("clinician",2)=X_U_$P($G(^VA(200,X,0)),U)_"^S^"_$$GET1^DIQ(VPRFN,+ID_",",1505,"I")_U_$$SIG^VPRDTIU(X)
"RTN","VPRDMC",151,0)
 ; RPT("encounter")=$$GET1^DIQ(VPRFN,+ID_",",900,"I")
"RTN","VPRDMC",152,0)
 S RPT("facility")=$$FAC^VPRD
"RTN","VPRDMC",153,0)
 S:$G(VPRTEXT) RPT("content")=$$TEXT(DFN,ID,$P(VPRY,U,9))
"RTN","VPRDMC",154,0)
 Q
"RTN","VPRDMC",155,0)
 ;
"RTN","VPRDMC",156,0)
TEXT(DFN,ID,NAME) ; -- Get report text, return temp array name
"RTN","VPRDMC",157,0)
 N MCARGDA,MCPRO,MDALL,I,X,Y
"RTN","VPRDMC",158,0)
 S MCARGDA=+$G(ID),MCPRO=NAME,MDALL=1 D PR690^MDPS1
"RTN","VPRDMC",159,0)
 K ^TMP("VPRTEXT",$J,ID)
"RTN","VPRDMC",160,0)
 S I=0 F  S I=$O(^TMP("MDPTXT",$J,MCARGDA,MCPRO,I)) Q:I<1  S X=$G(^(I,0)),^TMP("VPRTEXT",$J,ID,I)=X
"RTN","VPRDMC",161,0)
 S Y=$NA(^TMP("VPRTEXT",$J,ID))
"RTN","VPRDMC",162,0)
 Q Y
"RTN","VPRDMC",163,0)
 ;
"RTN","VPRDMC",164,0)
 ; ------------ Return data to middle tier ------------
"RTN","VPRDMC",165,0)
 ;
"RTN","VPRDMC",166,0)
XML(PROC) ; -- Return patient procedure as XML
"RTN","VPRDMC",167,0)
 ;  as <element code='123' displayName='ABC' />
"RTN","VPRDMC",168,0)
 N ATT,X,Y,I,J,NAMES
"RTN","VPRDMC",169,0)
 D ADD("<procedure>") S VPRTOTL=$G(VPRTOTL)+1
"RTN","VPRDMC",170,0)
 S ATT="" F  S ATT=$O(PROC(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","VPRDMC",171,0)
 . S NAMES=$S(ATT="document":"id^localTitle^nationalTitle^Z",1:"code^name^Z")
"RTN","VPRDMC",172,0)
 . I $O(PROC(ATT,0)) D  S Y="" Q  ;multiples
"RTN","VPRDMC",173,0)
 .. D ADD("<"_ATT_"s>")
"RTN","VPRDMC",174,0)
 .. S I=0 F  S I=$O(PROC(ATT,I)) Q:I<1  D
"RTN","VPRDMC",175,0)
 ... S X=$G(PROC(ATT,I)),Y="<"_ATT_" "_$$LOOP
"RTN","VPRDMC",176,0)
 ... S X=$G(PROC(ATT,I,"content")) I '$L(X) S Y=Y_"/>" D ADD(Y) Q
"RTN","VPRDMC",177,0)
 ... S Y=Y_">" D ADD(Y)
"RTN","VPRDMC",178,0)
 ... S Y="<content xml:space='preserve'>" D ADD(Y)
"RTN","VPRDMC",179,0)
 ... S J=0 F  S J=$O(@X@(J)) Q:J<1  S Y=$$ESC^VPRD(@X@(J)) D ADD(Y)
"RTN","VPRDMC",180,0)
 ... D ADD("</content>"),ADD("</"_ATT_">")
"RTN","VPRDMC",181,0)
 .. D ADD("</"_ATT_"s>")
"RTN","VPRDMC",182,0)
 . S X=$G(PROC(ATT)),Y="" Q:'$L(X)
"RTN","VPRDMC",183,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^VPRD(X)_"' />" Q
"RTN","VPRDMC",184,0)
 . I $L(X)>1 S Y="<"_ATT_" "_$$LOOP_"/>"
"RTN","VPRDMC",185,0)
 D ADD("</procedure>")
"RTN","VPRDMC",186,0)
 Q
"RTN","VPRDMC",187,0)
 ;
"RTN","VPRDMC",188,0)
LOOP() ; -- build sub-items string from NAMES and X
"RTN","VPRDMC",189,0)
 N STR,P,TAG S STR=""
"RTN","VPRDMC",190,0)
 F P=1:1 S TAG=$P(NAMES,U,P) Q:TAG="Z"  I $L($P(X,U,P)) S STR=STR_TAG_"='"_$$ESC^VPRD($P(X,U,P))_"' "
"RTN","VPRDMC",191,0)
 Q STR
"RTN","VPRDMC",192,0)
 ;
"RTN","VPRDMC",193,0)
ADD(X) ; Add a line @VPR@(n)=X
"RTN","VPRDMC",194,0)
 S VPRI=$G(VPRI)+1
"RTN","VPRDMC",195,0)
 S @VPR@(VPRI)=X
"RTN","VPRDMC",196,0)
 Q
"RTN","VPRDMDC")
0^22^B58663659^B44678829
"RTN","VPRDMDC",1,0)
VPRDMDC ;SLC/MKB,DP -- CLiO extract ;8/2/11  15:29
"RTN","VPRDMDC",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**1,2**;Sep 01, 2011;Build 317
"RTN","VPRDMDC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDMDC",4,0)
 ;
"RTN","VPRDMDC",5,0)
 ; External References          DBIA#
"RTN","VPRDMDC",6,0)
 ; -------------------          -----
"RTN","VPRDMDC",7,0)
 ; ^MDC(704.101                 5748 (Private)
"RTN","VPRDMDC",8,0)
 ; ^MDC(704.102                 5809 (Private)
"RTN","VPRDMDC",9,0)
 ; ^MDC(704.1122                5999 (Private)
"RTN","VPRDMDC",10,0)
 ; ^MDC(704.116                 5995 (Private)
"RTN","VPRDMDC",11,0)
 ; ^MDC(704.1161                5996 (Private)
"RTN","VPRDMDC",12,0)
 ; ^MDC(704.117                 5810 (Private)
"RTN","VPRDMDC",13,0)
 ; ^MDC(704.118                 5811 (Private)
"RTN","VPRDMDC",14,0)
 ; DIC                          2051
"RTN","VPRDMDC",15,0)
 ; DIQ                          2056
"RTN","VPRDMDC",16,0)
 ; XLFDT                       10103
"RTN","VPRDMDC",17,0)
 ; XLFSTR                      10104
"RTN","VPRDMDC",18,0)
 ; XPAR                         2263
"RTN","VPRDMDC",19,0)
 ;
"RTN","VPRDMDC",20,0)
 ; ------------ Get observations from VistA ------------
"RTN","VPRDMDC",21,0)
 ;
"RTN","VPRDMDC",22,0)
EN(DFN,BEG,END,MAX,ID) ; -- find patient's observations
"RTN","VPRDMDC",23,0)
 N VPRCLIO,VPRN,VPRITM,VPRCNT,X
"RTN","VPRDMDC",24,0)
 ;
"RTN","VPRDMDC",25,0)
 ; get one observation
"RTN","VPRDMDC",26,0)
 I $L($G(ID)) D EN1(ID,.VPRITM),XML(.VPRITM) Q
"RTN","VPRDMDC",27,0)
 ;
"RTN","VPRDMDC",28,0)
 ; get all patient observations
"RTN","VPRDMDC",29,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","VPRDMDC",30,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999),VPRCNT=0
"RTN","VPRDMDC",31,0)
 ;D QRYPT^MDCLIO1("VPRCLIO",DFN,BEG,END) ;all [verified] observations
"RTN","VPRDMDC",32,0)
 D QRYPT("VPRCLIO",DFN,BEG,END) ;all [verified] observations
"RTN","VPRDMDC",33,0)
 S VPRN=0 F  S VPRN=$O(VPRCLIO(VPRN)) Q:(VPRN<1)!(VPRCNT'<MAX)  D
"RTN","VPRDMDC",34,0)
 . S ID=$G(VPRCLIO(VPRN)) K VPRITM ;GUID
"RTN","VPRDMDC",35,0)
 . D EN1(ID,.VPRITM) Q:'$D(VPRITM)
"RTN","VPRDMDC",36,0)
 . D XML(.VPRITM) S VPRCNT=VPRCNT+1
"RTN","VPRDMDC",37,0)
 Q
"RTN","VPRDMDC",38,0)
 ;
"RTN","VPRDMDC",39,0)
EN1(GUID,CLIO) ; -- return an observation in CLIO("attribute")=value
"RTN","VPRDMDC",40,0)
 N VPRT,VPRC,LOC,I,X,Y K CLIO
"RTN","VPRDMDC",41,0)
 S GUID=$G(GUID) Q:GUID=""  ;invalid GUID
"RTN","VPRDMDC",42,0)
 ;D QRYOBS^MDCLIO1("VPRC",GUID) Q:'$D(VPRC)  ;doesn't exist
"RTN","VPRDMDC",43,0)
 D QRYOBS("VPRC",GUID) Q:'$D(VPRC)  ;doesn't exist
"RTN","VPRDMDC",44,0)
 Q:$L($G(VPRC("PARENT_ID","E")))            ;PARENT also in list
"RTN","VPRDMDC",45,0)
 S CLIO("id")=GUID,CLIO("vuid")=$G(VPRC("TERM_ID","I"))
"RTN","VPRDMDC",46,0)
 S CLIO("name")=$G(VPRC("TERM_ID","E"))
"RTN","VPRDMDC",47,0)
 S CLIO("value")=$G(VPRC("SVALUE","E"))
"RTN","VPRDMDC",48,0)
 S CLIO("units")=$G(VPRC("UNIT_ID","ABBV"))
"RTN","VPRDMDC",49,0)
 S CLIO("entered")=$G(VPRC("ENTERED_DATE_TIME","I"))
"RTN","VPRDMDC",50,0)
 S CLIO("observed")=$G(VPRC("OBSERVED_DATE_TIME","I"))
"RTN","VPRDMDC",51,0)
 ;D QRYTYPES^MDCLIO1("VPRT")
"RTN","VPRDMDC",52,0)
 D QRYTYPES("VPRT")
"RTN","VPRDMDC",53,0)
 F I=3:1:7 S X=$G(VPRT(I,"XML")) Q:I<1  I $L($G(VPRC(X,"E"))) D
"RTN","VPRDMDC",54,0)
 . S Y=VPRT(I,"NAME"),Y=$S(Y="LOCATION":"bodySite",1:$$LOW^XLFSTR(Y))
"RTN","VPRDMDC",55,0)
 . S CLIO(Y)=VPRC(X,"I")_U_VPRC(X,"E")
"RTN","VPRDMDC",56,0)
 S CLIO("range")=$G(VPRC("RANGE","E"))
"RTN","VPRDMDC",57,0)
 S CLIO("status")=$G(VPRC("STATUS","E"))
"RTN","VPRDMDC",58,0)
 S LOC=$G(VPRC("HOSPITAL_LOCATION_ID","I")),CLIO("facility")=$$FAC^VPRD(LOC)
"RTN","VPRDMDC",59,0)
 S CLIO("location")=LOC_U_$G(VPRC("HOSPITAL_LOCATION_ID","E"))
"RTN","VPRDMDC",60,0)
 S CLIO("comment")=$G(VPRC("COMMENT","E"))
"RTN","VPRDMDC",61,0)
 Q
"RTN","VPRDMDC",62,0)
 ;
"RTN","VPRDMDC",63,0)
 ; ------------ Return data to middle tier ------------
"RTN","VPRDMDC",64,0)
 ;
"RTN","VPRDMDC",65,0)
XML(OBS) ; -- Return observation as XML in @VPR@(#)
"RTN","VPRDMDC",66,0)
 N ATT,X,Y,I,J,P,NAMES,TAG
"RTN","VPRDMDC",67,0)
 D ADD("<observation>") S VPRTOTL=$G(VPRTOTL)+1
"RTN","VPRDMDC",68,0)
 S ATT="" F  S ATT=$O(OBS(ATT)) Q:ATT=""  D
"RTN","VPRDMDC",69,0)
 . S X=$G(OBS(ATT)),Y="" Q:'$L(X)
"RTN","VPRDMDC",70,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^VPRD(X)_"' />" D ADD(Y) Q
"RTN","VPRDMDC",71,0)
 . I $L(X)>1 D
"RTN","VPRDMDC",72,0)
 .. S Y="<"_ATT_" "
"RTN","VPRDMDC",73,0)
 .. F P=1:1 S TAG=$P("code^name^Z",U,P) Q:TAG="Z"  I $L($P(X,U,P)) S Y=Y_TAG_"='"_$$ESC^VPRD($P(X,U,P))_"' "
"RTN","VPRDMDC",74,0)
 .. S Y=Y_"/>" D ADD(Y)
"RTN","VPRDMDC",75,0)
 D ADD("</observation>")
"RTN","VPRDMDC",76,0)
 Q
"RTN","VPRDMDC",77,0)
 ;
"RTN","VPRDMDC",78,0)
LOOP() ; -- build sub-items string from NAMES and X
"RTN","VPRDMDC",79,0)
 N STR,P,TAG S STR=""
"RTN","VPRDMDC",80,0)
 F P=1:1 S TAG=$P(NAMES,U,P) Q:TAG="Z"  I $L($P(X,U,P)) S STR=STR_TAG_"='"_$$ESC^VPRD($P(X,U,P))_"' "
"RTN","VPRDMDC",81,0)
 Q STR
"RTN","VPRDMDC",82,0)
 ;
"RTN","VPRDMDC",83,0)
ADD(X) ; Add a line @VPR@(n)=X
"RTN","VPRDMDC",84,0)
 S VPRI=$G(VPRI)+1
"RTN","VPRDMDC",85,0)
 S @VPR@(VPRI)=X
"RTN","VPRDMDC",86,0)
 Q
"RTN","VPRDMDC",87,0)
 ;
"RTN","VPRDMDC",88,0)
 ; -- CliO specific code accessing the ^MDC( global for data
"RTN","VPRDMDC",89,0)
 ; 
"RTN","VPRDMDC",90,0)
QRYPT(VPRRET,VPRDFN,VPRFR,VPRTO,VPRSTAT) ; List of observations by pt, datetime, status
"RTN","VPRDMDC",91,0)
 K @VPRRET
"RTN","VPRDMDC",92,0)
 N VPRDT,VPRIEN
"RTN","VPRDMDC",93,0)
 S VPRSTAT=$G(VPRSTAT,1) ; Default to Verified
"RTN","VPRDMDC",94,0)
 F VPRDT=VPRFR-.0000001:0 S VPRDT=$O(^MDC(704.117,"AS",VPRSTAT,VPRDFN,VPRDT)) Q:'VPRDT!(VPRDT>VPRTO)  D
"RTN","VPRDMDC",95,0)
 . F VPRIEN=0:0 S VPRIEN=$O(^MDC(704.117,"AS",VPRSTAT,VPRDFN,VPRDT,VPRIEN)) Q:'VPRIEN  D
"RTN","VPRDMDC",96,0)
 . . S:$P(^MDC(704.117,VPRIEN,0),U,9)=VPRSTAT @VPRRET@(VPRIEN)=$P(^MDC(704.117,VPRIEN,0),U)
"RTN","VPRDMDC",97,0)
 Q
"RTN","VPRDMDC",98,0)
 ;
"RTN","VPRDMDC",99,0)
QRYOBS(VPRRET,VPRID) ; Return a single observation
"RTN","VPRDMDC",100,0)
 K @VPRRET
"RTN","VPRDMDC",101,0)
 N VPRTMP,VPRIEN
"RTN","VPRDMDC",102,0)
 S VPRIEN=$$FIND1^DIC(704.117,"","PKX",VPRID,"PK")
"RTN","VPRDMDC",103,0)
 I VPRIEN<1 S @VPRRET@(0)="-1^No such observation '"_VPRID_"'" Q
"RTN","VPRDMDC",104,0)
 D GETS^DIQ(704.117,VPRIEN_",","*","EIR","VPRTMP")
"RTN","VPRDMDC",105,0)
 M @VPRRET=VPRTMP(704.117,VPRIEN_",") K VPRTMP
"RTN","VPRDMDC",106,0)
 S @VPRRET@("TERM_ID","I")=$$GET1^DIQ(704.117,VPRIEN_",",".07:99.99")
"RTN","VPRDMDC",107,0)
 S @VPRRET@("TERM_ID","E")=$$GET1^DIQ(704.117,VPRIEN_",",".07:.02")
"RTN","VPRDMDC",108,0)
 S @VPRRET@("TERM_ID","GUID")=$$GET1^DIQ(704.117,VPRIEN_",",".07")
"RTN","VPRDMDC",109,0)
 S @VPRRET@("TERM_ID","ABBV")=$$GET1^DIQ(704.117,VPRIEN_",",".07:.03")
"RTN","VPRDMDC",110,0)
 D:$$GET1^DIQ(704.117,VPRIEN_",",".07:.06","I")=3  ; Coded data values
"RTN","VPRDMDC",111,0)
 . S VPRTMP=$$FIND1^DIC(704.101,"","PKX",@VPRRET@("SVALUE","I"),"PK")
"RTN","VPRDMDC",112,0)
 . S @VPRRET@("SVALUE","E")=$$GET1^DIQ(704.101,VPRTMP_",",.02)
"RTN","VPRDMDC",113,0)
 D QRYQUAL(VPRRET,VPRIEN)
"RTN","VPRDMDC",114,0)
 D QRYCTX($NA(@VPRRET@("CONTEXT")),VPRID)
"RTN","VPRDMDC",115,0)
 D QRYSET(VPRRET,VPRIEN)
"RTN","VPRDMDC",116,0)
 Q
"RTN","VPRDMDC",117,0)
 ;
"RTN","VPRDMDC",118,0)
QRYQUAL(VPRRET,VPRIEN) ; Returns the qualifiers for obs in VPRIEN
"RTN","VPRDMDC",119,0)
 ; We do NOT want to kill VPRRET here because it points at the parent node of the return
"RTN","VPRDMDC",120,0)
 N VPRQUAL
"RTN","VPRDMDC",121,0)
 F Y=0:0 S Y=$O(^MDC(704.118,"PK",VPRIEN,Y)) Q:'Y  D
"RTN","VPRDMDC",122,0)
 . S VPRQUAL=$$GET1^DIQ(704.101,Y_",",".05:.02")
"RTN","VPRDMDC",123,0)
 . S @VPRRET@(VPRQUAL,"I")=$$GET1^DIQ(704.101,Y_",","99.99")
"RTN","VPRDMDC",124,0)
 . S @VPRRET@(VPRQUAL,"E")=$$GET1^DIQ(704.101,Y_",",".02")
"RTN","VPRDMDC",125,0)
 . S @VPRRET@(VPRQUAL,"GUID")=$$GET1^DIQ(704.101,Y_",",".01")
"RTN","VPRDMDC",126,0)
 . S @VPRRET@(VPRQUAL,"ABBV")=$$GET1^DIQ(704.101,Y_",",".03")
"RTN","VPRDMDC",127,0)
 Q
"RTN","VPRDMDC",128,0)
 ;
"RTN","VPRDMDC",129,0)
QRYCTX(VPRRET,VPRID) ; We need a terminology based context observation relationship here
"RTN","VPRDMDC",130,0)
 N VPRIEN,VPRCTX,VPRDT,VPRFR,VPRTO,VPRDFN,VPRTERM,VPRCNT,VPRXID,VPROBS
"RTN","VPRDMDC",131,0)
 S VPRIEN=+$$FIND1^DIC(704.117,"","PKX",VPRID,"PK") Q:VPRIEN<1
"RTN","VPRDMDC",132,0)
 S VPRCTX=$$GET1^DIQ(704.117,VPRIEN_",",.07) ; GET THE PRIMARY TERM (GUID)
"RTN","VPRDMDC",133,0)
 ; FILTER OUT EVERYTHING BUT SpO2 for now
"RTN","VPRDMDC",134,0)
 Q:VPRCTX'="{5F84DD55-3CCF-094C-2536-B51EB7FAD999}"
"RTN","VPRDMDC",135,0)
 S VPRDFN=+$$GET1^DIQ(704.117,VPRIEN_",",.08,"I") ; GET THE PATIENT
"RTN","VPRDMDC",136,0)
 S VPRDT=+$$GET1^DIQ(704.117,VPRIEN_",",.05,"I") ; GET THE OBS DATE
"RTN","VPRDMDC",137,0)
 S VPRFR=$$FMADD^XLFDT(VPRDT,0,0,0,-30) ; PREVIOUS 30 SECONDS
"RTN","VPRDMDC",138,0)
 S VPRTO=$$FMADD^XLFDT(VPRDT,0,0,0,30) ; NEXT 30 SECONDS
"RTN","VPRDMDC",139,0)
 ; Now we find the context observations
"RTN","VPRDMDC",140,0)
 F VPRDT=VPRFR:0 S VPRDT=$O(^MDC(704.117,"PT",VPRDFN,VPRDT)) Q:'VPRDT!(VPRDT>VPRTO)  D
"RTN","VPRDMDC",141,0)
 . F VPROBS=0:0 S VPROBS=$O(^MDC(704.117,"PT",VPRDFN,VPRDT,VPROBS)) Q:'VPROBS  D
"RTN","VPRDMDC",142,0)
 . . Q:$$GET1^DIQ(704.117,VPROBS_",",.09,"I")'=1  ; Verfied Only
"RTN","VPRDMDC",143,0)
 . . S VPRXID=$$GET1^DIQ(704.117,VPROBS_",",.01)
"RTN","VPRDMDC",144,0)
 . . Q:VPRXID=VPRID  ; You should ignore yourself in this loop
"RTN","VPRDMDC",145,0)
 . . S VPRTERM=$$GET1^DIQ(704.117,VPROBS_",",".07")
"RTN","VPRDMDC",146,0)
 . . ; INSERT FILTER CODE FOR O2 Flowrate and Concentration here - In the future we will find all context terms for an observation in terminology
"RTN","VPRDMDC",147,0)
 . . Q:(VPRTERM'="{56F82CAC-3564-46CE-A520-1025020DADE9}")&(VPRTERM'="{3BB314E8-9BBB-480E-B34E-B56EDE43BAC4}")
"RTN","VPRDMDC",148,0)
 . . S VPRCNT=$O(@VPRRET@(""),-1)+1,@VPRRET@(0)=VPRCNT
"RTN","VPRDMDC",149,0)
 . . S @VPRRET@(VPRCNT,"OBS_ID","I")=VPRXID
"RTN","VPRDMDC",150,0)
 . . S @VPRRET@(VPRCNT,"OBS_ID","E")=VPRXID
"RTN","VPRDMDC",151,0)
 . . S @VPRRET@(VPRCNT,"TERM_ID","I")=$$GET1^DIQ(704.117,VPROBS_",",".07:99.99")
"RTN","VPRDMDC",152,0)
 . . S @VPRRET@(VPRCNT,"TERM_ID","E")=$$GET1^DIQ(704.117,VPROBS_",",".07:.02")
"RTN","VPRDMDC",153,0)
 . . S @VPRRET@(VPRCNT,"SVALUE","I")=$$GET1^DIQ(704.117,VPROBS_",",".1","I")
"RTN","VPRDMDC",154,0)
 . . S @VPRRET@(VPRCNT,"SVALUE","E")=$$GET1^DIQ(704.117,VPROBS_",",".1","E")
"RTN","VPRDMDC",155,0)
 . . D QRYQUAL($NA(@VPRRET@(VPRCNT)),VPROBS)
"RTN","VPRDMDC",156,0)
 Q
"RTN","VPRDMDC",157,0)
 ;
"RTN","VPRDMDC",158,0)
QRYSET(VPRRET,VPRIEN) ; Return the Obs Set/View information
"RTN","VPRDMDC",159,0)
 N VPRDFN,VPRSET,VPRDT,VPRPG,VPRVW,X
"RTN","VPRDMDC",160,0)
 S VPRDFN=+$G(@VPRRET@("PATIENT_ID","I"))
"RTN","VPRDMDC",161,0)
 S VPRSET=+$O(^MDC(704.1161,"AS",VPRIEN,0)) Q:VPRSET<1  ;not part of set
"RTN","VPRDMDC",162,0)
 S @VPRRET@("SET_ID","GUID")=$$GET1^DIQ(704.116,VPRSET_",",".01")
"RTN","VPRDMDC",163,0)
 S VPRDT=$$GET1^DIQ(704.116,VPRSET_",",".02","I")
"RTN","VPRDMDC",164,0)
 ; loop backwards to find supplemental page for Obs_Set
"RTN","VPRDMDC",165,0)
 F  S VPRDT=$O(^MDC(704.1122,"ADT",VPRDFN,VPRDT),-1) Q:VPRDT<1  D  Q:VPRPG  ;found
"RTN","VPRDMDC",166,0)
 . S VPRPG=+$O(^MDC(704.1122,"ADT",VPRDFN,VPRDT,0))
"RTN","VPRDMDC",167,0)
 . I $P($G(^MDC(704.1122,VPRPG,0)),U,10)'=VPRSET S VPRPG="" Q
"RTN","VPRDMDC",168,0)
 . S @VPRRET@("SUPP_PAGE","GUID")=$$GET1^DIQ(704.1122,VPRPG_",",".01")
"RTN","VPRDMDC",169,0)
 . S @VPRRET@("SUPP_PAGE","DISPLAY_NAME")=$$GET1^DIQ(704.1122,VPRPG_",",".08")
"RTN","VPRDMDC",170,0)
 . S @VPRRET@("SUPP_PAGE","ACTIVATED_DATE_TIME")=$$GET1^DIQ(704.1122,VPRPG_",",".11","I")
"RTN","VPRDMDC",171,0)
 . S @VPRRET@("SUPP_PAGE","DEACTIVATED_DATE_TIME")=$$GET1^DIQ(704.1122,VPRPG_",",".21","I")
"RTN","VPRDMDC",172,0)
 . S VPRVW=$$GET1^DIQ(704.1122,VPRPG_",",".02"),X=$$GET^XPAR("ALL","VPR OBS VIEW TYPE",VPRVW,"E")
"RTN","VPRDMDC",173,0)
 . I $L(X) S @VPRRET@("SUPP_PAGE","TYPE")=X
"RTN","VPRDMDC",174,0)
 Q
"RTN","VPRDMDC",175,0)
 ;
"RTN","VPRDMDC",176,0)
QRYTYPES(VPRRET) ; Return the terminology Term Types
"RTN","VPRDMDC",177,0)
 K @VPRRET
"RTN","VPRDMDC",178,0)
 N X
"RTN","VPRDMDC",179,0)
 F X=0:0 S X=$O(^MDC(704.102,X)) Q:'X  D
"RTN","VPRDMDC",180,0)
 . S @VPRRET@(X,"NAME")=$P(^MDC(704.102,X,0),U,1)
"RTN","VPRDMDC",181,0)
 . S @VPRRET@(X,"XML")=$P(^MDC(704.102,X,0),U,2)
"RTN","VPRDMDC",182,0)
 . S @VPRRET@("B",$P(^MDC(704.102,X,0),U,1),X)=""
"RTN","VPRDMDC",183,0)
 Q
"RTN","VPRDPXIM")
0^37^B15866293^B15857859
"RTN","VPRDPXIM",1,0)
VPRDPXIM ;SLC/MKB -- Immunizations extract ;8/2/11  15:29
"RTN","VPRDPXIM",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 317
"RTN","VPRDPXIM",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDPXIM",4,0)
 ;
"RTN","VPRDPXIM",5,0)
 ; External References          DBIA#
"RTN","VPRDPXIM",6,0)
 ; -------------------          -----
"RTN","VPRDPXIM",7,0)
 ; ^PXRMINDX                     4290
"RTN","VPRDPXIM",8,0)
 ; ^SC                          10040
"RTN","VPRDPXIM",9,0)
 ; ^VA(200                      10060
"RTN","VPRDPXIM",10,0)
 ; DILFD                         2055
"RTN","VPRDPXIM",11,0)
 ; DIQ                           2056
"RTN","VPRDPXIM",12,0)
 ; PXAPI                         1894
"RTN","VPRDPXIM",13,0)
 ; PXPXRM                        4250
"RTN","VPRDPXIM",14,0)
 ; XUAF4                         2171
"RTN","VPRDPXIM",15,0)
 ; 
"RTN","VPRDPXIM",16,0)
 ; ------------ Get immunizations from VistA ------------
"RTN","VPRDPXIM",17,0)
 ;
"RTN","VPRDPXIM",18,0)
EN(DFN,BEG,END,MAX,IFN) ; -- find patient's immunizations
"RTN","VPRDPXIM",19,0)
 S DFN=+$G(DFN) Q:DFN<1  ;invalid patient
"RTN","VPRDPXIM",20,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999),VPRCNT=0
"RTN","VPRDPXIM",21,0)
 N VPRIDT,VPRN,VPRITM,VPRCNT
"RTN","VPRDPXIM",22,0)
 ;
"RTN","VPRDPXIM",23,0)
 ; get one immunization
"RTN","VPRDPXIM",24,0)
 I $G(IFN) D  Q
"RTN","VPRDPXIM",25,0)
 . N IMZ,DATE K ^TMP("VPRIMM",$J)
"RTN","VPRDPXIM",26,0)
 . S IMZ=0 F  S IMZ=$O(^PXRMINDX(9000010.11,"PI",+$G(DFN),IMZ)) Q:IMZ<1  D  Q:$D(VPRITM)
"RTN","VPRDPXIM",27,0)
 .. S DATE=0 F  S DATE=$O(^PXRMINDX(9000010.11,"PI",+$G(DFN),IMZ,DATE)) Q:DATE<1  I $D(^(DATE,IFN)) D  Q
"RTN","VPRDPXIM",28,0)
 ... S VPRIDT=9999999-DATE,VPRN=IFN
"RTN","VPRDPXIM",29,0)
 ... S ^TMP("VPRIMM",$J,VPRIDT,IFN)=IMZ_U_DATE ;SORT node
"RTN","VPRDPXIM",30,0)
 ... D EN1(IFN,.VPRITM),XML(.VPRITM)
"RTN","VPRDPXIM",31,0)
 . K ^TMP("VPRIMM",$J),^TMP("PXKENC",$J)
"RTN","VPRDPXIM",32,0)
 ;
"RTN","VPRDPXIM",33,0)
 ; get all immunizations
"RTN","VPRDPXIM",34,0)
 D SORT(DFN,BEG,END) S VPRCNT=0
"RTN","VPRDPXIM",35,0)
 S VPRIDT=0 F  S VPRIDT=$O(^TMP("VPRIMM",$J,VPRIDT)) Q:VPRIDT<1  D  Q:VPRCNT'<MAX
"RTN","VPRDPXIM",36,0)
 . S VPRN=0 F  S VPRN=$O(^TMP("VPRIMM",$J,VPRIDT,VPRN)) Q:VPRN<1  D  Q:VPRCNT'<MAX
"RTN","VPRDPXIM",37,0)
 .. K VPRITM D EN1(VPRN,.VPRITM) Q:'$D(VPRITM)
"RTN","VPRDPXIM",38,0)
 .. D XML(.VPRITM) S VPRCNT=VPRCNT+1
"RTN","VPRDPXIM",39,0)
 K ^TMP("VPRIMM",$J),^TMP("PXKENC",$J)
"RTN","VPRDPXIM",40,0)
 Q
"RTN","VPRDPXIM",41,0)
 ;
"RTN","VPRDPXIM",42,0)
SORT(DFN,START,STOP) ; -- build ^TMP("VPRIMM",$J,9999999-DATE,DA)=IMM^DATE in range
"RTN","VPRDPXIM",43,0)
 ;  from ^PXRMINDX(9000010.11,"PI",DFN,IMM,DATE,DA)
"RTN","VPRDPXIM",44,0)
 N IMZ,DATE,DA,IDT K ^TMP("VPRIMM",$J)
"RTN","VPRDPXIM",45,0)
 S IMZ=0 F  S IMZ=$O(^PXRMINDX(9000010.11,"PI",+$G(DFN),IMZ)) Q:IMZ<1  D
"RTN","VPRDPXIM",46,0)
 . S DATE=0 F  S DATE=$O(^PXRMINDX(9000010.11,"PI",+$G(DFN),IMZ,DATE)) Q:DATE<1  D
"RTN","VPRDPXIM",47,0)
 .. Q:DATE<START  Q:DATE>STOP  S IDT=9999999-DATE
"RTN","VPRDPXIM",48,0)
 .. S DA=0 F  S DA=$O(^PXRMINDX(9000010.11,"PI",+$G(DFN),IMZ,DATE,DA)) Q:DA<1  S ^TMP("VPRIMM",$J,IDT,DA)=IMZ_U_DATE
"RTN","VPRDPXIM",49,0)
 Q
"RTN","VPRDPXIM",50,0)
 ;
"RTN","VPRDPXIM",51,0)
EN1(IEN,IMM) ; -- return an immunization in IMM("attribute")=value
"RTN","VPRDPXIM",52,0)
 ; Expects ^TMP("VPRIMM",$J,VPRIDT,VPRN)=IMM^DATE from EN/SORT
"RTN","VPRDPXIM",53,0)
 N TMP,VPRM,VISIT,X0,FAC,LOC,X12,X,I K IMM
"RTN","VPRDPXIM",54,0)
 S TMP=$G(^TMP("VPRIMM",$J,VPRIDT,VPRN))
"RTN","VPRDPXIM",55,0)
 S IMM("id")=IEN,IMM("administered")=+$P(TMP,U,2)
"RTN","VPRDPXIM",56,0)
 S IMM("name")=$$EXTERNAL^DILFD(9000010.11,.01,,+TMP)
"RTN","VPRDPXIM",57,0)
 D VIMM^PXPXRM(IEN,.VPRM)
"RTN","VPRDPXIM",58,0)
 S X=$G(VPRM("SERIES")),IMM("series")=$$EXTERNAL^DILFD(9000010.11,.04,,X)
"RTN","VPRDPXIM",59,0)
 S X=$G(VPRM("REACTION")),IMM("reaction")=$$EXTERNAL^DILFD(9000010.11,.06,,X)
"RTN","VPRDPXIM",60,0)
 S IMM("contraindicated")=+$G(VPRM("CONTRAINDICATED"))
"RTN","VPRDPXIM",61,0)
 S IMM("comment")=$G(VPRM("COMMENTS"))
"RTN","VPRDPXIM",62,0)
 S VISIT=+$G(VPRM("VISIT")),IMM("encounter")=VISIT
"RTN","VPRDPXIM",63,0)
 I '$D(^TMP("PXKENC",$J,VISIT)) D ENCEVENT^PXAPI(VISIT,1)
"RTN","VPRDPXIM",64,0)
 S X0=$G(^TMP("PXKENC",$J,VISIT,"VST",VISIT,0))
"RTN","VPRDPXIM",65,0)
 S FAC=+$P(X0,U,6),LOC=+$P(X0,U,22)
"RTN","VPRDPXIM",66,0)
 S:FAC IMM("facility")=$$STA^XUAF4(FAC)_U_$P($$NS^XUAF4(FAC),U)
"RTN","VPRDPXIM",67,0)
 S:'FAC IMM("facility")=$$FAC^VPRD(LOC)
"RTN","VPRDPXIM",68,0)
 S IMM("location")=$P($G(^SC(LOC,0)),U)
"RTN","VPRDPXIM",69,0)
 S X12=$G(^TMP("PXKENC",$J,VISIT,"IMM",IEN,12))
"RTN","VPRDPXIM",70,0)
 S X=$P(X12,U,4) S:'X X=$P(X12,U,2)
"RTN","VPRDPXIM",71,0)
 I 'X S I=0 F  S I=$O(^TMP("PXKENC",$J,VISIT,"PRV",I)) Q:I<1  I $P($G(^(I,0)),U,4)="P" S X=+^(0) Q
"RTN","VPRDPXIM",72,0)
 S:X IMM("provider")=X_U_$P($G(^VA(200,X,0)),U)
"RTN","VPRDPXIM",73,0)
 ; CPT mapping
"RTN","VPRDPXIM",74,0)
 S X=+$$FIND1^DIC(811.1,,"QX",+TMP_";AUTTIMM(","B") I X>0 D
"RTN","VPRDPXIM",75,0)
 . S Y=$$GET1^DIQ(811.1,X_",",.02,"I") Q:Y<1
"RTN","VPRDPXIM",76,0)
 . N CPT S CPT=$G(@(U_$P(Y,";",2)_+Y_",0)"))
"RTN","VPRDPXIM",77,0)
 . S IMM("cpt")=$P(CPT,U,1,2)
"RTN","VPRDPXIM",78,0)
 Q
"RTN","VPRDPXIM",79,0)
 ;
"RTN","VPRDPXIM",80,0)
 ; ------------ Return data to middle tier ------------
"RTN","VPRDPXIM",81,0)
 ;
"RTN","VPRDPXIM",82,0)
XML(IMM) ; -- Return immunizations as XML
"RTN","VPRDPXIM",83,0)
 N ATT,X,Y,I,P,NAMES,TAG
"RTN","VPRDPXIM",84,0)
 D ADD("<immunization>") S VPRTOTL=$G(VPRTOTL)+1
"RTN","VPRDPXIM",85,0)
 S ATT="" F  S ATT=$O(IMM(ATT)) Q:ATT=""  D
"RTN","VPRDPXIM",86,0)
 . S X=$G(IMM(ATT)),Y="" Q:'$L(X)
"RTN","VPRDPXIM",87,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^VPRD(X)_"' />" D ADD(Y) Q
"RTN","VPRDPXIM",88,0)
 . I $L(X)>1 D
"RTN","VPRDPXIM",89,0)
 .. S Y="<"_ATT_" "
"RTN","VPRDPXIM",90,0)
 .. F P=1:1 S TAG=$P("code^name^Z",U,P) Q:TAG="Z"  I $L($P(X,U,P)) S Y=Y_TAG_"='"_$$ESC^VPRD($P(X,U,P))_"' "
"RTN","VPRDPXIM",91,0)
 .. S Y=Y_"/>" D ADD(Y)
"RTN","VPRDPXIM",92,0)
 D ADD("</immunization>")
"RTN","VPRDPXIM",93,0)
 Q
"RTN","VPRDPXIM",94,0)
 ;
"RTN","VPRDPXIM",95,0)
ADD(X) ; -- Add a line @VPR@(n)=X
"RTN","VPRDPXIM",96,0)
 S VPRI=$G(VPRI)+1
"RTN","VPRDPXIM",97,0)
 S @VPR@(VPRI)=X
"RTN","VPRDPXIM",98,0)
 Q
"RTN","VPRDTIU")
0^30^B81103735^B80235055
"RTN","VPRDTIU",1,0)
VPRDTIU ;SLC/MKB -- TIU extract ;8/2/11  15:29
"RTN","VPRDTIU",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**1,2**;Sep 01, 2011;Build 317
"RTN","VPRDTIU",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDTIU",4,0)
 ;
"RTN","VPRDTIU",5,0)
 ; External References          DBIA#
"RTN","VPRDTIU",6,0)
 ; -------------------          -----
"RTN","VPRDTIU",7,0)
 ; ^SC(                         10040
"RTN","VPRDTIU",8,0)
 ; ^TIU(8925.1              2321,5677
"RTN","VPRDTIU",9,0)
 ; ^TIU(8926.1                   5678
"RTN","VPRDTIU",10,0)
 ; ^VA(200                      10060
"RTN","VPRDTIU",11,0)
 ; DIQ                           2056
"RTN","VPRDTIU",12,0)
 ; RAO7PC1                       2043
"RTN","VPRDTIU",13,0)
 ; TIUCNSLT                      5546
"RTN","VPRDTIU",14,0)
 ; TIUCP                         3568
"RTN","VPRDTIU",15,0)
 ; TIULQ                         2693
"RTN","VPRDTIU",16,0)
 ; TIULX                         3058
"RTN","VPRDTIU",17,0)
 ; TIUSROI                       5676
"RTN","VPRDTIU",18,0)
 ; TIUSRVLO                 2834,2865
"RTN","VPRDTIU",19,0)
 ; TIUSRVR1                      2944
"RTN","VPRDTIU",20,0)
 ; XLFSTR                       10104
"RTN","VPRDTIU",21,0)
 ;
"RTN","VPRDTIU",22,0)
 ; ------------ Get documents from VistA ------------
"RTN","VPRDTIU",23,0)
 ;
"RTN","VPRDTIU",24,0)
EN(DFN,BEG,END,MAX,ID) ; -- find patient's documents
"RTN","VPRDTIU",25,0)
 N VPRITM,VPRN,VPRX,VPRY,VPRCNT
"RTN","VPRDTIU",26,0)
 S DFN=+$G(DFN) Q:$G(DFN)<1
"RTN","VPRDTIU",27,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","VPRDTIU",28,0)
 ;
"RTN","VPRDTIU",29,0)
 ; get one document
"RTN","VPRDTIU",30,0)
 I $L($G(ID)),ID[";" D  G ENQ
"RTN","VPRDTIU",31,0)
 . I ID D RPT1^VPRDMC(DFN,ID,.VPRITM),XML(.VPRITM) Q  ;CP
"RTN","VPRDTIU",32,0)
 . D RPT1^VPRDLRA(DFN,ID,.VPRITM),XML(.VPRITM) Q      ;Lab
"RTN","VPRDTIU",33,0)
 I $G(ID),ID["-" D  G ENQ                             ;Radiology
"RTN","VPRDTIU",34,0)
 . S (BEG,END)=9999999.9999-+ID D EN1^RAO7PC1(DFN,BEG,END,"99P")
"RTN","VPRDTIU",35,0)
 . D RPT1^VPRDRA(DFN,ID,.VPRITM),XML(.VPRITM)
"RTN","VPRDTIU",36,0)
 . K ^TMP($J,"RAE1")
"RTN","VPRDTIU",37,0)
 I $G(ID) D EN1(ID,.VPRITM),XML(.VPRITM):$D(VPRITM) G ENQ
"RTN","VPRDTIU",38,0)
 ;
"RTN","VPRDTIU",39,0)
 ; get all documents
"RTN","VPRDTIU",40,0)
 N CLASS,SUBCLASS,TITLE,SERVICE,SUBJECT,NOTSUBJ,STATUS,VPRC,CLS,VPRS,CTXT
"RTN","VPRDTIU",41,0)
 D SETUP S VPRCNT=0 ;define search criteria
"RTN","VPRDTIU",42,0)
 I CLASS="CP" D RPTS^VPRDMC(DFN,BEG,END,MAX) Q
"RTN","VPRDTIU",43,0)
 I CLASS="RA" D RPTS^VPRDRA(DFN,BEG,END,MAX) Q
"RTN","VPRDTIU",44,0)
 I CLASS="LR" D RPTS^VPRDLRA(DFN,BEG,END,MAX) Q
"RTN","VPRDTIU",45,0)
 F VPRC=1:1:$L(CLASS,U) S CLS=$P(CLASS,U,VPRC) D  Q:VPRCNT'<MAX
"RTN","VPRDTIU",46,0)
 . F VPRS=1:1:$L(STATUS,U) S CTXT=$P(STATUS,U,VPRS) D  Q:VPRCNT'<MAX
"RTN","VPRDTIU",47,0)
 .. D CONTEXT^TIUSRVLO(.VPRY,CLS,CTXT,DFN,BEG,END,,MAX,,1)
"RTN","VPRDTIU",48,0)
 .. S VPRN=0 F  S VPRN=$O(@VPRY@(VPRN)) Q:VPRN<1  D  Q:VPRCNT'<MAX
"RTN","VPRDTIU",49,0)
 ... S VPRX=$G(@VPRY@(VPRN)) Q:'$$MATCH(VPRX)
"RTN","VPRDTIU",50,0)
 ... Q:$D(^TMP("VPRD",$J,+VPRX))  ;already included
"RTN","VPRDTIU",51,0)
 ... K VPRITM D EN1(VPRX,.VPRITM) Q:'$D(VPRITM)
"RTN","VPRDTIU",52,0)
 ... D XML(.VPRITM) S VPRCNT=VPRCNT+1
"RTN","VPRDTIU",53,0)
 .. K @VPRY
"RTN","VPRDTIU",54,0)
ENQ ; end
"RTN","VPRDTIU",55,0)
 K ^TMP("VPRTEXT",$J)
"RTN","VPRDTIU",56,0)
 Q
"RTN","VPRDTIU",57,0)
 ;
"RTN","VPRDTIU",58,0)
EN1(VPRX,DOC) ; -- return a document in DOC("attribute")=value
"RTN","VPRDTIU",59,0)
 ;  Expects DFN, VPRX=IEN^$$RESOLVE^TIUSRVLO(IEN)
"RTN","VPRDTIU",60,0)
 N IEN,X,NAME,VPRTIU,ES,I,VPRY
"RTN","VPRDTIU",61,0)
 K DOC,^TMP("VPRTEXT",$J)
"RTN","VPRDTIU",62,0)
 S IEN=+$G(VPRX) Q:IEN<1  ;invalid ien
"RTN","VPRDTIU",63,0)
 I +VPRX=VPRX D  ;get data string, if needed
"RTN","VPRDTIU",64,0)
 . N SHOWADD,DA S SHOWADD=1,DA=+VPRX
"RTN","VPRDTIU",65,0)
 . S VPRX=DA_U_$$RESOLVE^TIUSRVLO(DA)
"RTN","VPRDTIU",66,0)
 Q:"UNKNOWN"[$P($G(VPRX),U,2)  ;null or invalid
"RTN","VPRDTIU",67,0)
 S NAME=$P(VPRX,U,2) ;I $P(VPRX,U,14),$P(NAME," ")="Addendum" Q
"RTN","VPRDTIU",68,0)
 S DOC("id")=IEN,DOC("localTitle")=NAME
"RTN","VPRDTIU",69,0)
 D EXTRACT^TIULQ(IEN,"VPRTIU",,".01:.04;1501:1508")
"RTN","VPRDTIU",70,0)
 S X=$$GET1^DIQ(8925,IEN_",",".01:1501","I") I X D
"RTN","VPRDTIU",71,0)
 . N IENS,TIU,Y,FNUM
"RTN","VPRDTIU",72,0)
 . S IENS=X_"," D GETS^DIQ(8926.1,IENS,"*","IE","TIU")
"RTN","VPRDTIU",73,0)
 . S DOC("nationalTitle")=$G(TIU(8926.1,IENS,99.99,"E"))_U_$G(TIU(8926.1,IENS,.01,"E"))
"RTN","VPRDTIU",74,0)
 . F I=".04^Subject^2",".05^Role^3",".06^Setting^4",".07^Service^5",".08^Type^6" D
"RTN","VPRDTIU",75,0)
 .. S Y=+$G(TIU(8926.1,IENS,+I,"I")) Q:Y'>0
"RTN","VPRDTIU",76,0)
 .. S FNUM="8926."_+$P(I,U,3)
"RTN","VPRDTIU",77,0)
 .. S DOC("nationalTitle"_$P(I,U,2))=$$VUID^VPRD(Y,FNUM)_U_$G(TIU(8926.1,IENS,+I,"E"))
"RTN","VPRDTIU",78,0)
 S:$G(FILTER("loinc")) DOC("loinc")=$P(FILTER("loinc"),U)
"RTN","VPRDTIU",79,0)
 S X=+$G(VPRTIU(IEN,.01,"I")),X=$$CATG(X),(DOC("type"),DOC("category"))=X
"RTN","VPRDTIU",80,0)
 S DOC("documentClass")=$S(X="LR":"LR LABORATORY REPORTS",X="SR":"SURGICAL REPORTS",X="CP":"CLINICAL PROCEDURES",X="DS":"DISCHARGE SUMMARY",1:"PROGRESS NOTES")
"RTN","VPRDTIU",81,0)
 S DOC("referenceDateTime")=$P(VPRX,U,3)
"RTN","VPRDTIU",82,0)
 S X=$P(VPRX,U,6) D  ;S:$L(X) DOC("location")=X
"RTN","VPRDTIU",83,0)
 . N LOC S LOC=$S($L(X):+$O(^SC("B",X,0)),1:0)
"RTN","VPRDTIU",84,0)
 . S DOC("facility")=$$FAC^VPRD(LOC)
"RTN","VPRDTIU",85,0)
 S X=$P(VPRX,U,7) S:$L(X) DOC("status")=X
"RTN","VPRDTIU",86,0)
 S:$P(VPRX,U,11) DOC("images")=+$P(VPRX,U,11)
"RTN","VPRDTIU",87,0)
 S:$L($P(VPRX,U,12)) DOC("subject")=$P(VPRX,U,12)
"RTN","VPRDTIU",88,0)
 ; X=$S($P(VPRX,U,13)[">":"C",$P(VPRX,U,13)["<":"I",1:"") ;componentType
"RTN","VPRDTIU",89,0)
 I $P(VPRX,U,14)>5 S DOC("parent")=$P(VPRX,U,14) ;ID notes
"RTN","VPRDTIU",90,0)
 S DOC("encounter")=$G(VPRTIU(IEN,.03,"I"))
"RTN","VPRDTIU",91,0)
 S:$G(VPRTEXT) DOC("content")=$$TEXT(IEN)
"RTN","VPRDTIU",92,0)
 ; providers &/or signatures
"RTN","VPRDTIU",93,0)
 S X=$P(VPRX,U,5),I=0 S:X I=I+1,DOC("clinician",I)=+X_U_$P(X,";",3)_"^A" ;author
"RTN","VPRDTIU",94,0)
 M ES=VPRTIU(IEN) I ES(1501,"I") D
"RTN","VPRDTIU",95,0)
 . S I=I+1
"RTN","VPRDTIU",96,0)
 . S DOC("clinician",I)=ES(1502,"I")_U_ES(1502,"E")_"^S^"_ES(1501,"I")_U_$$SIG(ES(1502,"I"))
"RTN","VPRDTIU",97,0)
 I ES(1507,"I") D  ; cosigner
"RTN","VPRDTIU",98,0)
 . S I=I+1
"RTN","VPRDTIU",99,0)
 . S DOC("clinician",I)=ES(1508,"I")_U_ES(1508,"E")_"^C^"_ES(1507,"I")_U_$$SIG(ES(1508,"I"))
"RTN","VPRDTIU",100,0)
 Q
"RTN","VPRDTIU",101,0)
 ;
"RTN","VPRDTIU",102,0)
CATG(DA) ; -- Return a code for document type #8925.1 DA
"RTN","VPRDTIU",103,0)
 N X
"RTN","VPRDTIU",104,0)
 D ISCNSLT^TIUCNSLT(.X,DA) I X Q "CR"  ;consult result
"RTN","VPRDTIU",105,0)
 I $$ISA^TIULX(DA,25) Q "A"            ;CWAD note/Allergy
"RTN","VPRDTIU",106,0)
 I $$ISA^TIULX(DA,27) Q "D"            ;CWAD note/Advance Directive
"RTN","VPRDTIU",107,0)
 I $$ISA^TIULX(DA,30) Q "C"            ;CWAD note/Crisis Note
"RTN","VPRDTIU",108,0)
 I $$ISA^TIULX(DA,31) Q "W"            ;CWAD note/Clinical Warning
"RTN","VPRDTIU",109,0)
 I $$ISA^TIULX(DA,3) Q "PN"            ;progress note
"RTN","VPRDTIU",110,0)
 ;
"RTN","VPRDTIU",111,0)
 I $$ISA^TIULX(DA,244) Q "DS"          ;discharge summary
"RTN","VPRDTIU",112,0)
 D ISCP^TIUCP(.X,DA) I X Q "CP"        ;clinical procedure
"RTN","VPRDTIU",113,0)
 D ISSURG^TIUSROI(.X,DA) I X Q "SR"    ;surgery
"RTN","VPRDTIU",114,0)
 I $$ISA^TIULX(DA,$$LR) Q "LR"         ;laboratory
"RTN","VPRDTIU",115,0)
 Q ""
"RTN","VPRDTIU",116,0)
 ;
"RTN","VPRDTIU",117,0)
LR() ; -- Return ien of Lab class
"RTN","VPRDTIU",118,0)
 N Y S Y=+$O(^TIU(8925.1,"B","LR LABORATORY REPORTS",0))
"RTN","VPRDTIU",119,0)
 I Y>0,$S($P($G(^TIU(8925.1,Y,0)),U,4)="CL":0,$P($G(^(0)),U,4)="DC":0,1:1) S Y=0
"RTN","VPRDTIU",120,0)
 Q Y
"RTN","VPRDTIU",121,0)
 ;
"RTN","VPRDTIU",122,0)
SIG(X) ; -- Return Signature Block Name_Title
"RTN","VPRDTIU",123,0)
 N X20,Y S X20=$G(^VA(200,+$G(X),20))
"RTN","VPRDTIU",124,0)
 S Y=$P(X20,U,2)_" "_$P(X20,U,3)
"RTN","VPRDTIU",125,0)
 Q Y
"RTN","VPRDTIU",126,0)
 ;
"RTN","VPRDTIU",127,0)
RPT(VPRY,IFN) ; -- Return text of document in @VPRY@(n)
"RTN","VPRDTIU",128,0)
 N I,J ;protect for calling loops
"RTN","VPRDTIU",129,0)
 D TGET^TIUSRVR1(.VPRY,IFN)
"RTN","VPRDTIU",130,0)
 Q
"RTN","VPRDTIU",131,0)
 ;
"RTN","VPRDTIU",132,0)
TEXT(IFN) ; -- Get document IFN text, return temp array name
"RTN","VPRDTIU",133,0)
 N VPRY,Y,I,J ;protect I&J for calling loops
"RTN","VPRDTIU",134,0)
 S IFN=+$G(IFN) D TGET^TIUSRVR1(.VPRY,IFN)
"RTN","VPRDTIU",135,0)
 M ^TMP("VPRTEXT",$J,IFN)=@VPRY K @VPRY
"RTN","VPRDTIU",136,0)
 S Y=$NA(^TMP("VPRTEXT",$J,IFN))
"RTN","VPRDTIU",137,0)
 Q Y
"RTN","VPRDTIU",138,0)
 ;
"RTN","VPRDTIU",139,0)
 ; ------------ Return data to middle tier ------------
"RTN","VPRDTIU",140,0)
 ;
"RTN","VPRDTIU",141,0)
XML(DOC) ; -- Return patient documents as XML
"RTN","VPRDTIU",142,0)
 N ATT,X,Y,NAMES,TYPE,I
"RTN","VPRDTIU",143,0)
 D ADD("<document>") S VPRTOTL=$G(VPRTOTL)+1
"RTN","VPRDTIU",144,0)
 S ATT="" F  S ATT=$O(DOC(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","VPRDTIU",145,0)
 . I $O(DOC(ATT,0)) D  S Y="" Q  ;multiples
"RTN","VPRDTIU",146,0)
 .. D ADD("<"_ATT_"s>")
"RTN","VPRDTIU",147,0)
 .. S I=0 F  S I=$O(DOC(ATT,I)) Q:I<1  D
"RTN","VPRDTIU",148,0)
 ... S X=$G(DOC(ATT,I)),NAMES=""
"RTN","VPRDTIU",149,0)
 ... I ATT="clinician" S NAMES="code^name^role^dateTime^signature^Z"
"RTN","VPRDTIU",150,0)
 ... S Y="<"_ATT_" "_$$LOOP_"/>" D ADD(Y)
"RTN","VPRDTIU",151,0)
 .. D ADD("</"_ATT_"s>")
"RTN","VPRDTIU",152,0)
 . S X=$G(DOC(ATT)),Y="" Q:'$L(X)
"RTN","VPRDTIU",153,0)
 . I ATT="content" D  S Y="" Q  ;text
"RTN","VPRDTIU",154,0)
 .. S Y="<content xml:space='preserve'>" D ADD(Y)
"RTN","VPRDTIU",155,0)
 .. S I=0 F  S I=$O(@X@(I)) Q:I<1  S Y=$$ESC^VPRD(@X@(I)) D ADD(Y)
"RTN","VPRDTIU",156,0)
 .. D ADD("</content>")
"RTN","VPRDTIU",157,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^VPRD(X)_"' />" Q
"RTN","VPRDTIU",158,0)
 . I $L(X)>1 S NAMES="code^name^Z",Y="<"_ATT_" "_$$LOOP_"/>"
"RTN","VPRDTIU",159,0)
 D ADD("</document>")
"RTN","VPRDTIU",160,0)
 Q
"RTN","VPRDTIU",161,0)
 ;
"RTN","VPRDTIU",162,0)
LOOP() ; -- build sub-items string from NAMES and X
"RTN","VPRDTIU",163,0)
 N STR,P,TAG S STR=""
"RTN","VPRDTIU",164,0)
 F P=1:1 S TAG=$P(NAMES,U,P) Q:TAG="Z"  I $L($P(X,U,P)) S STR=STR_TAG_"='"_$$ESC^VPRD($P(X,U,P))_"' "
"RTN","VPRDTIU",165,0)
 Q STR
"RTN","VPRDTIU",166,0)
 ;
"RTN","VPRDTIU",167,0)
ADD(X) ; Add a line @VPR@(n)=X
"RTN","VPRDTIU",168,0)
 S VPRI=$G(VPRI)+1
"RTN","VPRDTIU",169,0)
 S @VPR@(VPRI)=X
"RTN","VPRDTIU",170,0)
 Q
"RTN","VPRDTIU",171,0)
 ;
"RTN","VPRDTIU",172,0)
 ; ------------ Get/apply search criteria ------------
"RTN","VPRDTIU",173,0)
 ;
"RTN","VPRDTIU",174,0)
SETUP ; -- convert FILTER("attribute") = value to TIU criteria
"RTN","VPRDTIU",175,0)
 ; Expects: FILTER("category") = code (see $$CATG)
"RTN","VPRDTIU",176,0)
 ;          FILTER("loinc")    = LOINC
"RTN","VPRDTIU",177,0)
 ;          FILTER("status")   = 'all','completed','unsigned'
"RTN","VPRDTIU",178,0)
 ; Returns CLASS,[SUBCLASS,TITLE,SERVICE,SUBJECT,STATUS]
"RTN","VPRDTIU",179,0)
 ;
"RTN","VPRDTIU",180,0)
 N LOINC,TYPE,STS,CP
"RTN","VPRDTIU",181,0)
 S LOINC=+$G(FILTER("loinc")),TYPE=$$UP^XLFSTR($G(FILTER("category")))
"RTN","VPRDTIU",182,0)
 S CLASS="3^244",(SUBCLASS,TITLE,SERVICE,SUBJECT,NOTSUBJ,STATUS)=""
"RTN","VPRDTIU",183,0)
 ;
"RTN","VPRDTIU",184,0)
 ; status [default='complete']
"RTN","VPRDTIU",185,0)
 S STS=$$LOW^XLFSTR($G(FILTER("status")))
"RTN","VPRDTIU",186,0)
 S STATUS=$S(STS?1"unsig".E:2,STS="all":"5^2",1:5)  ;TIUSRVLO statuses
"RTN","VPRDTIU",187,0)
 ;
"RTN","VPRDTIU",188,0)
 ; progress notes
"RTN","VPRDTIU",189,0)
 I TYPE="PN" S CLASS=3 Q
"RTN","VPRDTIU",190,0)
 I TYPE="CR"!(LOINC=11488) S CLASS=3,SUBCLASS=+$$CLASS^TIUCNSLT Q
"RTN","VPRDTIU",191,0)
 ; LOINC=26442 S CLASS=3,SUBJECT="^114^" Q         ;OB/GYN
"RTN","VPRDTIU",192,0)
 I LOINC=34117 S CLASS=3,SERVICE="^88^" Q          ;H&P
"RTN","VPRDTIU",193,0)
 I TYPE="CWAD" S CLASS=3,SUBCLASS="25^27^30^31" Q  ;CWAD
"RTN","VPRDTIU",194,0)
 I TYPE="C" S CLASS=3,SUBCLASS=30 Q                ;Crisis Note
"RTN","VPRDTIU",195,0)
 I TYPE="W" S CLASS=3,SUBCLASS=31 Q                ;Clinical Warning
"RTN","VPRDTIU",196,0)
 I TYPE="A" S CLASS=3,SUBCLASS=25 Q                ;Allergy Note
"RTN","VPRDTIU",197,0)
 I TYPE="D"!(LOINC=42348) S CLASS=3,SUBCLASS=27 Q  ;Advance Directive
"RTN","VPRDTIU",198,0)
 ;
"RTN","VPRDTIU",199,0)
 ; discharge summaries
"RTN","VPRDTIU",200,0)
 I TYPE="DS"!(LOINC=18842) S CLASS=244 Q
"RTN","VPRDTIU",201,0)
 ;
"RTN","VPRDTIU",202,0)
 ; procedures
"RTN","VPRDTIU",203,0)
 I TYPE="SR"!(LOINC=29752) S CLASS=+$$CLASS^TIUSROI("SURGICAL REPORTS") Q
"RTN","VPRDTIU",204,0)
 D CPCLASS^TIUCP(.CP)
"RTN","VPRDTIU",205,0)
 I TYPE="CP" S CLASS=$S(STATUS=2:CP,1:"CP") Q       ;CLINICAL PROCEDURES
"RTN","VPRDTIU",206,0)
 I LOINC=26441 D  Q                                 ;CARDIOLOGY
"RTN","VPRDTIU",207,0)
 . S CLASS=CP_"^3"
"RTN","VPRDTIU",208,0)
 . S SUBJECT="^18^142^174^",SERVICE="^75^76^115^"
"RTN","VPRDTIU",209,0)
 I LOINC=27896 D  Q                                 ;PULMONARY
"RTN","VPRDTIU",210,0)
 . S CLASS=CP_"^3"
"RTN","VPRDTIU",211,0)
 . S SUBJECT="^23^142^",SERVICE="^75^76^115^"
"RTN","VPRDTIU",212,0)
 I LOINC=27895 D  Q                                 ;GASTROENTEROLOGY
"RTN","VPRDTIU",213,0)
 . S CLASS=CP_"^3"
"RTN","VPRDTIU",214,0)
 . S SUBJECT="^20^",SERVICE="^75^76^115^"
"RTN","VPRDTIU",215,0)
 I LOINC=27897 D  Q                                 ;NEUROLOGY
"RTN","VPRDTIU",216,0)
 . S CLASS=CP_"^3"
"RTN","VPRDTIU",217,0)
 . S SUBJECT="^44^45^52^111^112^143^146^",SERVICE="^75^76^115^"
"RTN","VPRDTIU",218,0)
 I LOINC=28619 D  Q                                 ;OPHTH/OPTOMETRY
"RTN","VPRDTIU",219,0)
 . S CLASS=CP_"^3"
"RTN","VPRDTIU",220,0)
 . S SUBJECT="^13^14^103^",SERVICE="^75^76^115^"
"RTN","VPRDTIU",221,0)
 I LOINC=28634 D  Q                                 ;MISC/ALL OTHERS
"RTN","VPRDTIU",222,0)
 . S CLASS=CP_"^3",SERVICE="^75^76^115^"
"RTN","VPRDTIU",223,0)
 . S NOTSUBJ="^18^142^174^23^142^20^44^45^52^111^112^143^146^13^14^103^"
"RTN","VPRDTIU",224,0)
 I LOINC=28570 D  Q                                 ;UNSPECIFIED/ALL
"RTN","VPRDTIU",225,0)
 . S CLASS=CP_"^3"
"RTN","VPRDTIU",226,0)
 . S SERVICE="^75^76^115^"
"RTN","VPRDTIU",227,0)
 ;
"RTN","VPRDTIU",228,0)
 ; pathology/lab
"RTN","VPRDTIU",229,0)
 I TYPE="LR"!(LOINC=27898) S CLASS=$S(STATUS=2:$$LR,1:"LR") Q
"RTN","VPRDTIU",230,0)
 ;
"RTN","VPRDTIU",231,0)
 ; radiology
"RTN","VPRDTIU",232,0)
 I TYPE="RA"!(LOINC=18726) S CLASS="RA" Q
"RTN","VPRDTIU",233,0)
 ;
"RTN","VPRDTIU",234,0)
 ; unknown
"RTN","VPRDTIU",235,0)
 I $L(TYPE)!LOINC S CLASS=0
"RTN","VPRDTIU",236,0)
 Q
"RTN","VPRDTIU",237,0)
 ;
"RTN","VPRDTIU",238,0)
MATCH(DOC) ; -- Return 1 or 0, if document DA matches search criteria
"RTN","VPRDTIU",239,0)
 N Y,DA,LOCAL,NATL,X0,OK S Y=0
"RTN","VPRDTIU",240,0)
 S DA=+$G(DOC) G:DA<1 MQ
"RTN","VPRDTIU",241,0)
 ; include addenda if pulling only unsigned items:
"RTN","VPRDTIU",242,0)
 I $P(DOC,U,2)?1"Addendum ".E,STATUS'=2 G MQ
"RTN","VPRDTIU",243,0)
 ; remove completed parent notes from TIU unsigned list:
"RTN","VPRDTIU",244,0)
 I CTXT=2,$P(DOC,U,7)'="unsigned" G MQ
"RTN","VPRDTIU",245,0)
 ; remove Uncosigned notes from 'complete' view:
"RTN","VPRDTIU",246,0)
 I STATUS=5,$P(DOC,U,7)="uncosigned" G MQ
"RTN","VPRDTIU",247,0)
 ; Check title & attributes for a match ...
"RTN","VPRDTIU",248,0)
 S LOCAL=$$GET1^DIQ(8925,DA_",",.01,"I") ;local Title 8925.1 ien
"RTN","VPRDTIU",249,0)
 I $L(SUBCLASS) D  G:'OK MQ
"RTN","VPRDTIU",250,0)
 . N I,X S OK=0
"RTN","VPRDTIU",251,0)
 . F I=1:1:$L(SUBCLASS,"^") S X=$P(SUBCLASS,U,I) I $$ISA^TIULX(LOCAL,X) S OK=1 Q
"RTN","VPRDTIU",252,0)
 S NATL=+$$GET1^DIQ(8925.1,LOCAL_",",1501,"I") ;Natl Title 8926.1 ien
"RTN","VPRDTIU",253,0)
 I $L(TITLE) G:TITLE'[(U_+NATL_U) MQ
"RTN","VPRDTIU",254,0)
 S X0=$G(^TIU(8926.1,NATL,0))
"RTN","VPRDTIU",255,0)
 I $L(SERVICE) G:SERVICE'[(U_+$P(X0,U,7)_U) MQ
"RTN","VPRDTIU",256,0)
 I $L(SUBJECT) G:SUBJECT'[(U_+$P(X0,U,4)_U) MQ
"RTN","VPRDTIU",257,0)
 I $L(NOTSUBJ) G:NOTSUBJ[(U_+$P(X0,U,4)_U) MQ
"RTN","VPRDTIU",258,0)
 S Y=1
"RTN","VPRDTIU",259,0)
MQ Q Y
"RTN","VPRDVSIT")
0^31^B89271062^B89381077
"RTN","VPRDVSIT",1,0)
VPRDVSIT ;SLC/MKB -- Visit/Encounter extract ;8/2/11  15:29
"RTN","VPRDVSIT",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**1,2**;Sep 01, 2011;Build 317
"RTN","VPRDVSIT",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDVSIT",4,0)
 ;
"RTN","VPRDVSIT",5,0)
 ; External References          DBIA#
"RTN","VPRDVSIT",6,0)
 ; -------------------          -----
"RTN","VPRDVSIT",7,0)
 ; ^AUPNVSIT                     2028
"RTN","VPRDVSIT",8,0)
 ; ^DIC(40.7                      557
"RTN","VPRDVSIT",9,0)
 ; ^DIC(42                      10039
"RTN","VPRDVSIT",10,0)
 ; ^DIC(45.7                     1154
"RTN","VPRDVSIT",11,0)
 ; ^DPT(                        10035
"RTN","VPRDVSIT",12,0)
 ; ^SC                          10040
"RTN","VPRDVSIT",13,0)
 ; ^VA(200                      10060
"RTN","VPRDVSIT",14,0)
 ; DGPTFAPI                      3157
"RTN","VPRDVSIT",15,0)
 ; DIC                           2051
"RTN","VPRDVSIT",16,0)
 ; DILFD                         2055
"RTN","VPRDVSIT",17,0)
 ; DIQ                           2056
"RTN","VPRDVSIT",18,0)
 ; ICDCODE                       3990
"RTN","VPRDVSIT",19,0)
 ; ICPTCOD                       1995
"RTN","VPRDVSIT",20,0)
 ; PXAPI,^TMP("PXKENC",$J        1894
"RTN","VPRDVSIT",21,0)
 ; SDOE                          2546
"RTN","VPRDVSIT",22,0)
 ; VADPT                        10061
"RTN","VPRDVSIT",23,0)
 ; VADPT2                         325
"RTN","VPRDVSIT",24,0)
 ; XUAF4                         2171
"RTN","VPRDVSIT",25,0)
 ;
"RTN","VPRDVSIT",26,0)
 ; ------------ Get encounter(s) from VistA ------------
"RTN","VPRDVSIT",27,0)
 ;
"RTN","VPRDVSIT",28,0)
EN(DFN,BEG,END,MAX,ID) ; -- find patient's visits and appointments
"RTN","VPRDVSIT",29,0)
 N VPRCNT,VPRITM,VPRDT,VPRLOC,VPRDA
"RTN","VPRDVSIT",30,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","VPRDVSIT",31,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","VPRDVSIT",32,0)
 ;
"RTN","VPRDVSIT",33,0)
 ; get one visit
"RTN","VPRDVSIT",34,0)
 I $G(ID) D EN1(ID,.VPRITM),XML(.VPRITM) G ENQ
"RTN","VPRDVSIT",35,0)
 ;
"RTN","VPRDVSIT",36,0)
 ; -- get all visits
"RTN","VPRDVSIT",37,0)
 I END,END'["." S END=END_".24" ;assume end of day
"RTN","VPRDVSIT",38,0)
 S VPRCNT=0
"RTN","VPRDVSIT",39,0)
 ;F  S IDX=$Q(@IDX,-1) Q:DFN'=$P(IDX,",",2)  Q:$P(IDX,",",3)<BEG  I $P(IDX,",",5)["P" D
"RTN","VPRDVSIT",40,0)
 S VPRDT=END F  S VPRDT=$O(^AUPNVSIT("AET",DFN,VPRDT),-1)  Q:VPRDT<BEG  D  Q:VPRCNT'<MAX
"RTN","VPRDVSIT",41,0)
 . S VPRLOC=0 F  S VPRLOC=$O(^AUPNVSIT("AET",DFN,VPRDT,VPRLOC)) Q:VPRLOC<1  D
"RTN","VPRDVSIT",42,0)
 .. S VPRDA=0 F  S VPRDA=$O(^AUPNVSIT("AET",DFN,VPRDT,VPRLOC,"P",VPRDA)) Q:VPRDA<1  D
"RTN","VPRDVSIT",43,0)
 ... K VPRITM D EN1(VPRDA,.VPRITM) Q:'$D(VPRITM)
"RTN","VPRDVSIT",44,0)
 ... D XML(.VPRITM) S VPRCNT=VPRCNT+1
"RTN","VPRDVSIT",45,0)
ENQ ; end
"RTN","VPRDVSIT",46,0)
 K ^TMP("VPRTEXT",$J)
"RTN","VPRDVSIT",47,0)
 Q
"RTN","VPRDVSIT",48,0)
 ;
"RTN","VPRDVSIT",49,0)
ENAA(DFN,BEG,END,MAX,ID) ; -- find patient's visits and appointments [AA]
"RTN","VPRDVSIT",50,0)
 N IDT,DA,VPRCNT,VPRITM
"RTN","VPRDVSIT",51,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","VPRDVSIT",52,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","VPRDVSIT",53,0)
 I $G(ID) D EN1(ID,.VPRITM),XML(.VPRITM) Q  ;one visit
"RTN","VPRDVSIT",54,0)
 D IDT S VPRCNT=0
"RTN","VPRDVSIT",55,0)
 S IDT=BEG F  S IDT=$O(^AUPNVSIT("AA",DFN,IDT)) Q:IDT<1!(IDT>END)  D  Q:VPRCNT'<MAX
"RTN","VPRDVSIT",56,0)
 . S DA=0 F  S DA=$O(^AUPNVSIT("AA",DFN,IDT,DA)) Q:DA<1  D
"RTN","VPRDVSIT",57,0)
 .. K VPRITM D EN1(DA,.VPRITM) Q:'$D(VPRITM)
"RTN","VPRDVSIT",58,0)
 .. D XML(.VPRITM) S VPRCNT=VPRCNT+1
"RTN","VPRDVSIT",59,0)
 Q
"RTN","VPRDVSIT",60,0)
IDT ; -- invert BEG and END dates for visit format:
"RTN","VPRDVSIT",61,0)
 ;  IDT=(9999999-$P(VDT,"."))_"."_$P(VDT,".",2)
"RTN","VPRDVSIT",62,0)
 N X S X=BEG
"RTN","VPRDVSIT",63,0)
 S BEG=(9999999-$P(END,"."))
"RTN","VPRDVSIT",64,0)
 S END=(9999999-$P(X,"."))_".2359"
"RTN","VPRDVSIT",65,0)
 Q
"RTN","VPRDVSIT",66,0)
 ;
"RTN","VPRDVSIT",67,0)
EN1(IEN,VST) ; -- return a visit in VST("attribute")=value
"RTN","VPRDVSIT",68,0)
 N X0,X15,X,FAC,LOC,CATG,INPT,DA
"RTN","VPRDVSIT",69,0)
 K VST,^TMP("VPRTEXT",$J)
"RTN","VPRDVSIT",70,0)
 S IEN=+$G(IEN) Q:IEN<1  ;invalid
"RTN","VPRDVSIT",71,0)
 D ENCEVENT^PXAPI(IEN)
"RTN","VPRDVSIT",72,0)
 S X0=$G(^TMP("PXKENC",$J,IEN,"VST",IEN,0)),X15=$G(^(150))
"RTN","VPRDVSIT",73,0)
 Q:$P(X15,U,3)'="P"  Q:$P(X0,U,7)="E"  ;want primary, not historical
"RTN","VPRDVSIT",74,0)
 I $P(X0,U,7)="H" D ADM(IEN,+X0,.VST) Q
"RTN","VPRDVSIT",75,0)
 S VST("id")=IEN,VST("dateTime")=+X0
"RTN","VPRDVSIT",76,0)
 S FAC=+$P(X0,U,6),CATG=$P(X0,U,7),LOC=+$P(X0,U,22)
"RTN","VPRDVSIT",77,0)
 S:FAC VST("facility")=$$STA^XUAF4(FAC)_U_$P($$NS^XUAF4(FAC),U)
"RTN","VPRDVSIT",78,0)
 S:'FAC VST("facility")=$$FAC^VPRD(LOC)
"RTN","VPRDVSIT",79,0)
 S VST("serviceCategory")=CATG_U_$$CATG(CATG)
"RTN","VPRDVSIT",80,0)
 S VST("visitString")=LOC_";"_+X0_";"_CATG
"RTN","VPRDVSIT",81,0)
 S INPT=$P(X15,U,2) S:INPT="" INPT=$S("H^I^R^D"[CATG:1,1:0)
"RTN","VPRDVSIT",82,0)
 S X=$$CPT(IEN) S:X VST("type")=$P($$CPT^ICPTCOD(X),U,2,3)
"RTN","VPRDVSIT",83,0)
 I 'X S VST("type")=U_$S('INPT&LOC:$P($G(^SC(LOC,0)),U)_" VISIT",1:$$CATG(CATG))
"RTN","VPRDVSIT",84,0)
 S VST("patientClass")=$S(INPT:"IMP",1:"AMB")
"RTN","VPRDVSIT",85,0)
 S X=$P(X0,U,8) S:X VST("stopCode")=$$AMIS(X) I LOC D
"RTN","VPRDVSIT",86,0)
 . N L0 S L0=$G(^SC(LOC,0))
"RTN","VPRDVSIT",87,0)
 . I 'X S VST("stopCode")=$$AMIS($P(L0,U,7))
"RTN","VPRDVSIT",88,0)
 . S VST("location")=$P(L0,U),VST("service")=$$SERV($P(L0,U,20))
"RTN","VPRDVSIT",89,0)
 . S X=$P(L0,U,18) S:X VST("creditStopCode")=$$AMIS(X)
"RTN","VPRDVSIT",90,0)
 S VST("reason")=$$POV(IEN)
"RTN","VPRDVSIT",91,0)
 ; provider(s)
"RTN","VPRDVSIT",92,0)
 S DA=0 F  S DA=$O(^TMP("PXKENC",$J,IEN,"PRV",DA)) Q:DA<1  S X0=$G(^(DA,0)) D
"RTN","VPRDVSIT",93,0)
 . S VST("provider",DA)=+X0_U_$P($G(^VA(200,+X0,0)),U)_$S($P(X0,U,4)="P":"^P^1",1:"^S^")
"RTN","VPRDVSIT",94,0)
 ; note(s)
"RTN","VPRDVSIT",95,0)
 D TIU(IEN)
"RTN","VPRDVSIT",96,0)
 K ^TMP("PXKENC",$J,IEN)
"RTN","VPRDVSIT",97,0)
 Q
"RTN","VPRDVSIT",98,0)
 ;
"RTN","VPRDVSIT",99,0)
TIU(VISIT) ; -- add notes to VST("document")
"RTN","VPRDVSIT",100,0)
 N X,Y,I,VPRX,LT,NT,DA,CNT,VPRY
"RTN","VPRDVSIT",101,0)
 D FIND^DIC(8925,,.01,"QX",+$G(VISIT),,"V",,,"VPRX")
"RTN","VPRDVSIT",102,0)
 S Y="",(I,CNT)=0
"RTN","VPRDVSIT",103,0)
 F  S I=$O(VPRX("DILIST",1,I)) Q:I<1  D
"RTN","VPRDVSIT",104,0)
 . S LT=$G(VPRX("DILIST","ID",I,.01)) Q:$P(LT," ")="Addendum"
"RTN","VPRDVSIT",105,0)
 . S DA=$G(VPRX("DILIST",2,I))
"RTN","VPRDVSIT",106,0)
 . S NT=$$GET1^DIQ(8925,+DA_",",".01:1501")
"RTN","VPRDVSIT",107,0)
 . S CNT=CNT+1,VST("document",CNT)=DA_U_LT_U_NT
"RTN","VPRDVSIT",108,0)
 . S:$G(VPRTEXT) VST("document",CNT,"content")=$$TEXT^VPRDTIU(DA)
"RTN","VPRDVSIT",109,0)
 Q
"RTN","VPRDVSIT",110,0)
 ;
"RTN","VPRDVSIT",111,0)
POV(VISIT) ; -- return the primary Purpose of Visit as ICD^ProviderNarrative
"RTN","VPRDVSIT",112,0)
 N DA,Y,X,X0,ICD S Y=""
"RTN","VPRDVSIT",113,0)
 S DA=0 F  S DA=$O(^TMP("PXKENC",$J,VISIT,"POV",DA)) Q:DA<1  S X0=$G(^(DA,0)) I $P(X0,U,12)="P" D  Q:$L(Y)
"RTN","VPRDVSIT",114,0)
 . S X=+$P(X0,U,4),ICD=$$ICD(+X0)
"RTN","VPRDVSIT",115,0)
 . S Y=ICD_U_$$EXTERNAL^DILFD(9000010.07,.04,,X)
"RTN","VPRDVSIT",116,0)
 Q Y
"RTN","VPRDVSIT",117,0)
 ;
"RTN","VPRDVSIT",118,0)
ICD(IEN) ; -- return code^description for ICD code, or "^" if error
"RTN","VPRDVSIT",119,0)
 N X0,VPRX,N,I,X,Y S IEN=+$G(IEN)
"RTN","VPRDVSIT",120,0)
 S X0=$$ICDDX^ICDCODE(IEN) I X0<0 Q "^"
"RTN","VPRDVSIT",121,0)
 S Y=$P(X0,U,2)_U_$P(X0,U,4)       ;ICD Code^Dx name
"RTN","VPRDVSIT",122,0)
 S N=$$ICDD^ICDCODE($P(Y,U),"VPRX") ;ICD Description
"RTN","VPRDVSIT",123,0)
 I N>0,$L($G(VPRX(1))) S $P(Y,U,2)=VPRX(1)
"RTN","VPRDVSIT",124,0)
 Q Y
"RTN","VPRDVSIT",125,0)
 ;
"RTN","VPRDVSIT",126,0)
CPT(VISIT) ; -- Return CPT code of encounter type
"RTN","VPRDVSIT",127,0)
 N DA,Y,X,X0 S Y=""
"RTN","VPRDVSIT",128,0)
 S DA=0 F  S DA=$O(^TMP("PXKENC",$J,VISIT,"CPT",DA)) Q:DA<1  S X0=$G(^(DA,0)) D  Q:$L(Y)
"RTN","VPRDVSIT",129,0)
 . S X=$P(X0,U) I X?1"992"2N S Y=X Q
"RTN","VPRDVSIT",130,0)
 Q Y
"RTN","VPRDVSIT",131,0)
 ;
"RTN","VPRDVSIT",132,0)
AMIS(X) ; -- return the AMIS code^name of Credit Stop X
"RTN","VPRDVSIT",133,0)
 N Y,X0 S Y=""
"RTN","VPRDVSIT",134,0)
 S X0=$G(^DIC(40.7,+$G(X),0)) S:$L(X0) Y=$P(X0,U,2)_U_$P(X0,U)
"RTN","VPRDVSIT",135,0)
 Q Y
"RTN","VPRDVSIT",136,0)
 ;
"RTN","VPRDVSIT",137,0)
CATG(X) ; -- Return name of visit Service Category code X
"RTN","VPRDVSIT",138,0)
 N Y S Y=""
"RTN","VPRDVSIT",139,0)
 I X="A" S Y="AMBULATORY"
"RTN","VPRDVSIT",140,0)
 I X="H" S Y="HOSPITALIZATION"
"RTN","VPRDVSIT",141,0)
 I X="I" S Y="IN HOSPITAL"
"RTN","VPRDVSIT",142,0)
 I X="C" S Y="CHART REVIEW"
"RTN","VPRDVSIT",143,0)
 I X="T" S Y="TELECOMMUNICATIONS"
"RTN","VPRDVSIT",144,0)
 I X="N" S Y="NOT FOUND"
"RTN","VPRDVSIT",145,0)
 I X="S" S Y="DAY SURGERY"
"RTN","VPRDVSIT",146,0)
 I X="O" S Y="OBSERVATION"
"RTN","VPRDVSIT",147,0)
 I X="E" S Y="EVENT (HISTORICAL)"
"RTN","VPRDVSIT",148,0)
 I X="R" S Y="NURSING HOME"
"RTN","VPRDVSIT",149,0)
 I X="D" S Y="DAILY HOSPITALIZATION DATA"
"RTN","VPRDVSIT",150,0)
 I X="X" S Y="ANCILLARY PACKAGE DAILY DATA"
"RTN","VPRDVSIT",151,0)
 Q Y
"RTN","VPRDVSIT",152,0)
 ;
"RTN","VPRDVSIT",153,0)
SERV(FTS) ; -- Return #42.4 Service for a Facility Treating Specialty
"RTN","VPRDVSIT",154,0)
 N Y S Y="",FTS=+$G(FTS)
"RTN","VPRDVSIT",155,0)
 S Y=$$GET1^DIQ(45.7,FTS_",","1:3","E")
"RTN","VPRDVSIT",156,0)
 Q Y
"RTN","VPRDVSIT",157,0)
 ;
"RTN","VPRDVSIT",158,0)
ADM(IEN,DATE,ADM) ; -- return an admission in ADM("attribute")=value
"RTN","VPRDVSIT",159,0)
 N VAINDT,VADMVT,VAIP,VAIN,VAERR,HLOC,ICD,I K ADM
"RTN","VPRDVSIT",160,0)
 S IEN=+$G(IEN),DATE=+$G(DATE) Q:IEN<1  Q:DATE<1
"RTN","VPRDVSIT",161,0)
 S VAINDT=DATE D ADM^VADPT2 Q:VADMVT<1
"RTN","VPRDVSIT",162,0)
 I VADMVT=$G(^DPT(DFN,.105)) D INPT Q  ;current inpatient
"RTN","VPRDVSIT",163,0)
 S VAIP("E")=VADMVT D IN5^VADPT Q:'$G(VAIP(1))  ;deleted
"RTN","VPRDVSIT",164,0)
 S ADM("id")=IEN,ADM("patientClass")="IMP"
"RTN","VPRDVSIT",165,0)
 ; ADM("admitType")=$P($G(VAIP(4)),U,2)
"RTN","VPRDVSIT",166,0)
 S DATE=+$G(VAIP(13,1)),(ADM("dateTime"),ADM("arrivalDateTime"))=DATE,I=0
"RTN","VPRDVSIT",167,0)
 S:$G(VAIP(7)) I=I+1,ADM("provider",I)=VAIP(7)_"^P^1" ;primary
"RTN","VPRDVSIT",168,0)
 S:$G(VAIP(18)) I=I+1,ADM("provider",I)=VAIP(18)_"^A" ;attending
"RTN","VPRDVSIT",169,0)
 S ADM("specialty")=$P($G(VAIP(8)),U,2)
"RTN","VPRDVSIT",170,0)
 S X=$$SERV(+$G(VAIP(8))),ADM("service")=X
"RTN","VPRDVSIT",171,0)
 S ICD=$$POV(IEN) S:'ICD ICD=$$PTF(DFN,VAIP(12)) ;PTF>ICD
"RTN","VPRDVSIT",172,0)
 S ADM("reason")=ICD_U_$G(VAIP(9)) ;ICD code^description^Dx text
"RTN","VPRDVSIT",173,0)
 S HLOC=+$G(^DIC(42,+$G(VAIP(5)),44))
"RTN","VPRDVSIT",174,0)
 S:HLOC ADM("location")=$P($G(^SC(HLOC,0)),U)
"RTN","VPRDVSIT",175,0)
 S ADM("facility")=$$FAC^VPRD(+HLOC),ADM("roomBed")=$P(VAIP(6),U,2)
"RTN","VPRDVSIT",176,0)
 S ADM("serviceCategory")="H^HOSPITALIZATION"
"RTN","VPRDVSIT",177,0)
 S X=$$CPT(IEN),ADM("type")=$S(X:$P($$CPT^ICPTCOD(X),U,2,3),1:U_$$CATG("H"))
"RTN","VPRDVSIT",178,0)
 I $G(VAIP(17)) D
"RTN","VPRDVSIT",179,0)
 . S ADM("departureDateTime")=+$G(VAIP(17,1))
"RTN","VPRDVSIT",180,0)
 . ; ADM("disposition")=$G(VAIP(17,3)) ;Discharge Mvt Type
"RTN","VPRDVSIT",181,0)
 S ADM("visitString")=HLOC_";"_DATE_";H"
"RTN","VPRDVSIT",182,0)
 D TIU(IEN) ;notes/summary
"RTN","VPRDVSIT",183,0)
 Q
"RTN","VPRDVSIT",184,0)
 ;
"RTN","VPRDVSIT",185,0)
INPT ; -- return current admission in ADM("attribute")=value [from ADM]
"RTN","VPRDVSIT",186,0)
 K VAINDT D INP^VADPT Q:VAIN(1)<1
"RTN","VPRDVSIT",187,0)
 S ADM("id")=IEN,ADM("patientClass")="IMP"
"RTN","VPRDVSIT",188,0)
 ; ADM("admitType")=$P($G(VAIN(8)),U,2)
"RTN","VPRDVSIT",189,0)
 S DATE=+$G(VAIN(7)),(ADM("dateTime"),ADM("arrivalDateTime"))=DATE,I=0
"RTN","VPRDVSIT",190,0)
 S:$G(VAIN(2)) I=I+1,ADM("provider",I)=VAIN(2)_"^P^1" ;primary
"RTN","VPRDVSIT",191,0)
 S:$G(VAIN(11)) I=I+1,ADM("provider",I)=VAIN(11)_"^A" ;attending
"RTN","VPRDVSIT",192,0)
 S ADM("specialty")=$P($G(VAIN(3)),U,2)
"RTN","VPRDVSIT",193,0)
 S X=$$SERV(+$G(VAIN(3))),ADM("service")=X
"RTN","VPRDVSIT",194,0)
 S ICD=$$POV(IEN) S:'ICD ICD=$$PTF(DFN,VAIN(10)) ;PTF>ICD
"RTN","VPRDVSIT",195,0)
 S ADM("reason")=ICD_U_$G(VAIN(9)) ;ICD code^description^Dx text
"RTN","VPRDVSIT",196,0)
 S HLOC=+$G(^DIC(42,+$G(VAIN(4)),44))
"RTN","VPRDVSIT",197,0)
 S:HLOC ADM("location")=$P($G(^SC(HLOC,0)),U)
"RTN","VPRDVSIT",198,0)
 S ADM("facility")=$$FAC^VPRD(+HLOC),ADM("roomBed")=VAIN(5)
"RTN","VPRDVSIT",199,0)
 S ADM("serviceCategory")="H^HOSPITALIZATION"
"RTN","VPRDVSIT",200,0)
 S X=$$CPT(IEN),ADM("type")=$S(X:$P($$CPT^ICPTCOD(X),U,2,3),1:U_$$CATG("H"))
"RTN","VPRDVSIT",201,0)
 ; ADM("visitString")=HLOC_";"_DATE_";H"
"RTN","VPRDVSIT",202,0)
 D TIU(IEN) ;notes/summary
"RTN","VPRDVSIT",203,0)
 Q
"RTN","VPRDVSIT",204,0)
 ;
"RTN","VPRDVSIT",205,0)
PTF(DFN,PTF) ; -- return ICD code^description for a PTF record
"RTN","VPRDVSIT",206,0)
 N VPRPTF,N,VPRX
"RTN","VPRDVSIT",207,0)
 D:$G(PTF) RPC^DGPTFAPI(.VPRPTF,+PTF) I $G(VPRPTF(0))<1 Q "^"
"RTN","VPRDVSIT",208,0)
 S Y=$P($G(VPRPTF(1)),U,3)_U
"RTN","VPRDVSIT",209,0)
 S N=$$ICDD^ICDCODE(Y,"VPRX") ;ICD Description
"RTN","VPRDVSIT",210,0)
 I N>0,$L($G(VPRX(1))) S Y=Y_VPRX(1)
"RTN","VPRDVSIT",211,0)
 Q Y
"RTN","VPRDVSIT",212,0)
 ;
"RTN","VPRDVSIT",213,0)
ENC(IEN,ENC) ; -- return an encounter in ENC("attribute")=value
"RTN","VPRDVSIT",214,0)
 N X0,DATE,HLOC,TYPE,STS,X,Y K ENC
"RTN","VPRDVSIT",215,0)
 S IEN=+$G(IEN) Q:IEN<1  ;invalid ien
"RTN","VPRDVSIT",216,0)
 S ENC("id")="E"_IEN,X0=$$GETOE^SDOE(IEN) ;^SCE(IEN,0) node
"RTN","VPRDVSIT",217,0)
 S DATE=+X0,ENC("dateTime")=DATE
"RTN","VPRDVSIT",218,0)
 S HLOC=+$P(X0,U,4) I HLOC D
"RTN","VPRDVSIT",219,0)
 . S HLOC=HLOC_U_$P($G(^SC(HLOC,0)),U)
"RTN","VPRDVSIT",220,0)
 . S ENC("location")=$P(HLOC,U,2)
"RTN","VPRDVSIT",221,0)
 . S X=$$GET1^DIQ(44,+HLOC_",",9.5,"I")
"RTN","VPRDVSIT",222,0)
 . I X S ENC("service")=$$SERV(X)
"RTN","VPRDVSIT",223,0)
 S ENC("facility")=$$FAC^VPRD(+HLOC)
"RTN","VPRDVSIT",224,0)
 S STS=$$EXTERNAL^DILFD(409.68,.12,,$P(X0,U,12))
"RTN","VPRDVSIT",225,0)
 S X=$S(STS?1"INP".E:"IMP",1:"AMB"),ENC("patientClass")=X,TYPE=$E(X)
"RTN","VPRDVSIT",226,0)
 S ENC("type")=U_$S(HLOC:$P(HLOC,U,2)_" VISIT",1:$$CATG(TYPE))
"RTN","VPRDVSIT",227,0)
 S ENC("serviceCategory")=TYPE_U_$$CATG(TYPE)
"RTN","VPRDVSIT",228,0)
 S ENC("visitString")=+HLOC_";"_DATE_";"_TYPE
"RTN","VPRDVSIT",229,0)
 Q
"RTN","VPRDVSIT",230,0)
 ;
"RTN","VPRDVSIT",231,0)
 ; ------------ Return data to middle tier ------------
"RTN","VPRDVSIT",232,0)
 ;
"RTN","VPRDVSIT",233,0)
XML(VISIT) ; -- Return patient visit as XML
"RTN","VPRDVSIT",234,0)
 N ATT,X,Y,NAMES,I,J
"RTN","VPRDVSIT",235,0)
 D ADD("<visit>") S VPRTOTL=$G(VPRTOTL)+1
"RTN","VPRDVSIT",236,0)
 S ATT="" F  S ATT=$O(VISIT(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","VPRDVSIT",237,0)
 . I $O(VISIT(ATT,0)) D  S Y="" Q  ;multiples
"RTN","VPRDVSIT",238,0)
 .. D ADD("<"_ATT_"s>")
"RTN","VPRDVSIT",239,0)
 .. S I=0 F  S I=$O(VISIT(ATT,I)) Q:I<1  D
"RTN","VPRDVSIT",240,0)
 ... S X=$G(VISIT(ATT,I)),NAMES=""
"RTN","VPRDVSIT",241,0)
 ... I ATT="document" S NAMES="id^localTitle^nationalTitle^Z"
"RTN","VPRDVSIT",242,0)
 ... I ATT="provider" S NAMES="code^name^role^primary^Z"
"RTN","VPRDVSIT",243,0)
 ... S Y="<"_ATT_" "_$$LOOP ;_"/>" D ADD(Y)
"RTN","VPRDVSIT",244,0)
 ... S X=$G(VISIT(ATT,I,"content")) I '$L(X) S Y=Y_"/>" D ADD(Y) Q
"RTN","VPRDVSIT",245,0)
 ... S Y=Y_">" D ADD(Y)
"RTN","VPRDVSIT",246,0)
 ... S Y="<content xml:space='preserve'>" D ADD(Y)
"RTN","VPRDVSIT",247,0)
 ... S J=0 F  S J=$O(@X@(J)) Q:J<1  S Y=$$ESC^VPRD(@X@(J)) D ADD(Y)
"RTN","VPRDVSIT",248,0)
 ... D ADD("</content>"),ADD("</"_ATT_">")
"RTN","VPRDVSIT",249,0)
 .. D ADD("</"_ATT_"s>")
"RTN","VPRDVSIT",250,0)
 . S X=$G(VISIT(ATT)),Y="" Q:'$L(X)
"RTN","VPRDVSIT",251,0)
 . S NAMES="code^name^"_$S(ATT="reason":"narrative^",1:"")_"Z"
"RTN","VPRDVSIT",252,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^VPRD(X)_"' />" Q
"RTN","VPRDVSIT",253,0)
 . I $L(X)>1 S Y="<"_ATT_" "_$$LOOP_"/>"
"RTN","VPRDVSIT",254,0)
 D ADD("</visit>")
"RTN","VPRDVSIT",255,0)
 Q
"RTN","VPRDVSIT",256,0)
 ;
"RTN","VPRDVSIT",257,0)
LOOP() ; -- build sub-items string from NAMES and X
"RTN","VPRDVSIT",258,0)
 N STR,P,TAG S STR=""
"RTN","VPRDVSIT",259,0)
 F P=1:1 S TAG=$P(NAMES,U,P) Q:TAG="Z"  I $L($P(X,U,P)) S STR=STR_TAG_"='"_$$ESC^VPRD($P(X,U,P))_"' "
"RTN","VPRDVSIT",260,0)
 Q STR
"RTN","VPRDVSIT",261,0)
 ;
"RTN","VPRDVSIT",262,0)
ADD(X) ; -- Add a line @VPR@(n)=X
"RTN","VPRDVSIT",263,0)
 S VPRI=$G(VPRI)+1
"RTN","VPRDVSIT",264,0)
 S @VPR@(VPRI)=X
"RTN","VPRDVSIT",265,0)
 Q
"RTN","VPRJSON")
0^14^B11235996^n/a
"RTN","VPRJSON",1,0)
VPRJSON ;SLC/KCM -- Decode/Encode JSON ;8/14/13  11:22
"RTN","VPRJSON",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 317
"RTN","VPRJSON",3,0)
 ;
"RTN","VPRJSON",4,0)
 ; Note:  Since the routines use closed array references, VVROOT and VVERR
"RTN","VPRJSON",5,0)
 ;        are used to reduce risk of naming conflicts on the closed array.
"RTN","VPRJSON",6,0)
 ;
"RTN","VPRJSON",7,0)
DECODE(VVJSON,VVROOT,VVERR)  ; Set JSON object into closed array ref VVROOT
"RTN","VPRJSON",8,0)
 ; Examples: D DECODE^VPRJSON("MYJSON","LOCALVAR","LOCALERR")
"RTN","VPRJSON",9,0)
 ;           D DECODE^VPRJSON("^MYJSON(1)","^GLO(99)","^TMP($J)")
"RTN","VPRJSON",10,0)
 ;
"RTN","VPRJSON",11,0)
 ; VVJSON: string/array containing serialized JSON object
"RTN","VPRJSON",12,0)
 ; VVROOT: closed array reference for M representation of object
"RTN","VPRJSON",13,0)
 ;  VVERR: contains error messages, defaults to ^TMP("VPRJERR",$J)
"RTN","VPRJSON",14,0)
 ;
"RTN","VPRJSON",15,0)
 ;   VVIDX: points to next character in JSON string to process
"RTN","VPRJSON",16,0)
 ; VVSTACK: manages stack of subscripts
"RTN","VPRJSON",17,0)
 ;  VVPROP: true if next string is property name, otherwise treat as value
"RTN","VPRJSON",18,0)
 ;
"RTN","VPRJSON",19,0)
 G DIRECT^VPRJSOND
"RTN","VPRJSON",20,0)
 ;
"RTN","VPRJSON",21,0)
ENCODE(VVROOT,VVJSON,VVERR) ; VVROOT (M structure) --> VVJSON (array of strings)
"RTN","VPRJSON",22,0)
 ; Examples:  D ENCODE^VPRJSON("^GLO(99,2)","^TMP($J)")
"RTN","VPRJSON",23,0)
 ;            D ENCODE^VPRJSON("LOCALVAR","MYJSON","LOCALERR")
"RTN","VPRJSON",24,0)
 ;
"RTN","VPRJSON",25,0)
 ; VVROOT: closed array reference for M representation of object
"RTN","VPRJSON",26,0)
 ; VVJSON: destination variable for the string array formatted as JSON
"RTN","VPRJSON",27,0)
 ;  VVERR: contains error messages, defaults to ^TMP("VPRJERR",$J)
"RTN","VPRJSON",28,0)
 ;
"RTN","VPRJSON",29,0)
 G DIRECT^VPRJSONE
"RTN","VPRJSON",30,0)
 ;
"RTN","VPRJSON",31,0)
 ;
"RTN","VPRJSON",32,0)
ESC(X) ; Escape string for JSON
"RTN","VPRJSON",33,0)
 Q $$ESC^VPRJSONE(X)
"RTN","VPRJSON",34,0)
 ;
"RTN","VPRJSON",35,0)
UES(X) ; Unescape JSON string
"RTN","VPRJSON",36,0)
 Q $$UES^VPRJSOND(X)
"RTN","VPRJSON",37,0)
 ;
"RTN","VPRJSON",38,0)
ERRX(ID,VAL) ; Set the appropriate error message
"RTN","VPRJSON",39,0)
 ; switch (ID) -- XERRX ends statement
"RTN","VPRJSON",40,0)
 N ERRMSG
"RTN","VPRJSON",41,0)
 ;
"RTN","VPRJSON",42,0)
 ; Decode Error Messages
"RTN","VPRJSON",43,0)
 ;
"RTN","VPRJSON",44,0)
 I ID="STL{" S ERRMSG="Stack too large for new object." G XERRX
"RTN","VPRJSON",45,0)
 I ID="SUF}" S ERRMSG="Stack Underflow - extra } found" G XERRX
"RTN","VPRJSON",46,0)
 I ID="STL[" S ERRMSG="Stack too large for new array." G XERRX
"RTN","VPRJSON",47,0)
 I ID="SUF]" S ERRMSG="Stack Underflow - extra ] found." G XERRX
"RTN","VPRJSON",48,0)
 I ID="OBM" S ERRMSG="Array mismatch - expected ] got }." G XERRX
"RTN","VPRJSON",49,0)
 I ID="ARM" S ERRMSG="Object mismatch - expected } got ]." G XERRX
"RTN","VPRJSON",50,0)
 I ID="MPN" S ERRMSG="Missing property name." G XERRX
"RTN","VPRJSON",51,0)
 I ID="EXT" S ERRMSG="Expected true, got "_VAL G XERRX
"RTN","VPRJSON",52,0)
 I ID="EXF" S ERRMSG="Expected false, got "_VAL G XERRX
"RTN","VPRJSON",53,0)
 I ID="EXN" S ERRMSG="Expected null, got "_VAL G XERRX
"RTN","VPRJSON",54,0)
 I ID="TKN" S ERRMSG="Unable to identify type of token, value was "_VAL G XERRX
"RTN","VPRJSON",55,0)
 I ID="SCT" S ERRMSG="Stack mismatch - exit stack level was  "_VAL G XERRX
"RTN","VPRJSON",56,0)
 I ID="EIQ" S ERRMSG="Close quote not found before end of input." G XERRX
"RTN","VPRJSON",57,0)
 I ID="EIU" S ERRMSG="Unexpected end of input while unescaping." G XERRX
"RTN","VPRJSON",58,0)
 I ID="RSB" S ERRMSG="Reverse search for \ past beginning of input." G XERRX
"RTN","VPRJSON",59,0)
 I ID="ORN" S ERRMSG="Overrun while scanning name." G XERRX
"RTN","VPRJSON",60,0)
 I ID="OR#" S ERRMSG="Overrun while scanning number." G XERRX
"RTN","VPRJSON",61,0)
 I ID="ORB" S ERRMSG="Overrun while scanning boolean." G XERRX
"RTN","VPRJSON",62,0)
 I ID="ESC" S ERRMSG="Escaped character not recognized"_VAL G XERRX
"RTN","VPRJSON",63,0)
 ;
"RTN","VPRJSON",64,0)
 ; Encode Error Messages
"RTN","VPRJSON",65,0)
 ;
"RTN","VPRJSON",66,0)
 I ID="SOB" S ERRMSG="Unable to serialize node as object, value was "_VAL G XERRX
"RTN","VPRJSON",67,0)
 I ID="SAR" S ERRMSG="Unable to serialize node as array, value was "_VAL G XERRX
"RTN","VPRJSON",68,0)
 S ERRMSG="Unspecified error "_ID_" "_$G(VAL)
"RTN","VPRJSON",69,0)
XERRX ; end switch
"RTN","VPRJSON",70,0)
 S @VVERR@(0)=$G(@VVERR@(0))+1
"RTN","VPRJSON",71,0)
 S @VVERR@(@VVERR@(0))=ERRMSG
"RTN","VPRJSON",72,0)
 S VVERRORS=VVERRORS+1
"RTN","VPRJSON",73,0)
 Q
"RTN","VPRJSOND")
0^15^B63619549^n/a
"RTN","VPRJSOND",1,0)
VPRJSOND ;SLC/KCM -- Decode JSON
"RTN","VPRJSOND",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 317
"RTN","VPRJSOND",3,0)
 ;
"RTN","VPRJSOND",4,0)
DECODE(VVJSON,VVROOT,VVERR) ; Set JSON object into closed array ref VVROOT
"RTN","VPRJSOND",5,0)
 ;
"RTN","VPRJSOND",6,0)
DIRECT ; TAG for use by DECODE^VPRJSON
"RTN","VPRJSOND",7,0)
 ;
"RTN","VPRJSOND",8,0)
 ; Examples: D DECODE^VPRJSON("MYJSON","LOCALVAR","LOCALERR")
"RTN","VPRJSOND",9,0)
 ;           D DECODE^VPRJSON("^MYJSON(1)","^GLO(99)","^TMP($J)")
"RTN","VPRJSOND",10,0)
 ;
"RTN","VPRJSOND",11,0)
 ; VVJSON: string/array containing serialized JSON object
"RTN","VPRJSOND",12,0)
 ; VVROOT: closed array reference for M representation of object
"RTN","VPRJSOND",13,0)
 ;  VVERR: contains error messages, defaults to ^TMP("VPRJERR",$J)
"RTN","VPRJSOND",14,0)
 ;
"RTN","VPRJSOND",15,0)
 ;   VVIDX: points to next character in JSON string to process
"RTN","VPRJSOND",16,0)
 ; VVSTACK: manages stack of subscripts
"RTN","VPRJSOND",17,0)
 ;  VVPROP: true if next string is property name, otherwise treat as value
"RTN","VPRJSOND",18,0)
 ;
"RTN","VPRJSOND",19,0)
 N VVMAX S VVMAX=4000 ; limit document lines to 4000 characters
"RTN","VPRJSOND",20,0)
 S VVERR=$G(VVERR,"^TMP(""VPRJERR"",$J)")
"RTN","VPRJSOND",21,0)
 ; If a simple string is passed in, move it to an temp array (VVINPUT)
"RTN","VPRJSOND",22,0)
 ; so that the processing is consistently on an array.
"RTN","VPRJSOND",23,0)
 I $D(@VVJSON)=1 N VVINPUT S VVINPUT(1)=@VVJSON,VVJSON="VVINPUT"
"RTN","VPRJSOND",24,0)
 S VVROOT=$NA(@VVROOT@("Z")),VVROOT=$E(VVROOT,1,$L(VVROOT)-4) ; make open array ref
"RTN","VPRJSOND",25,0)
 N VVLINE,VVIDX,VVSTACK,VVPROP,VVTYPE,VVERRORS
"RTN","VPRJSOND",26,0)
 S VVLINE=$O(@VVJSON@("")),VVIDX=1,VVSTACK=0,VVPROP=0,VVERRORS=0
"RTN","VPRJSOND",27,0)
 F  S VVTYPE=$$NXTKN() Q:VVTYPE=""  D  I VVERRORS Q
"RTN","VPRJSOND",28,0)
 . I VVTYPE="{" S VVSTACK=VVSTACK+1,VVSTACK(VVSTACK)="",VVPROP=1 D:VVSTACK>64 ERRX("STL{") Q
"RTN","VPRJSOND",29,0)
 . I VVTYPE="}" D:VVSTACK(VVSTACK) ERRX("OBM") S VVSTACK=VVSTACK-1 D:VVSTACK<0 ERRX("SUF}") Q
"RTN","VPRJSOND",30,0)
 . I VVTYPE="[" S VVSTACK=VVSTACK+1,VVSTACK(VVSTACK)=1 D:VVSTACK>64 ERRX("STL[") Q
"RTN","VPRJSOND",31,0)
 . I VVTYPE="]" D:'VVSTACK(VVSTACK) ERRX("ARM") S VVSTACK=VVSTACK-1 D:VVSTACK<0 ERRX("SUF]") Q
"RTN","VPRJSOND",32,0)
 . I VVTYPE="," D  Q
"RTN","VPRJSOND",33,0)
 . . I VVSTACK(VVSTACK) S VVSTACK(VVSTACK)=VVSTACK(VVSTACK)+1  ; next in array
"RTN","VPRJSOND",34,0)
 . . E  S VVPROP=1                                   ; or next property name
"RTN","VPRJSOND",35,0)
 . I VVTYPE=":" S VVPROP=0 D:'$L($G(VVSTACK(VVSTACK))) ERRX("MPN") Q
"RTN","VPRJSOND",36,0)
 . I VVTYPE="""" D  Q
"RTN","VPRJSOND",37,0)
 . . I VVPROP S VVSTACK(VVSTACK)=$$NAMPARS() I 1
"RTN","VPRJSOND",38,0)
 . . E  D ADDSTR
"RTN","VPRJSOND",39,0)
 . S VVTYPE=$TR(VVTYPE,"TFN","tfn")
"RTN","VPRJSOND",40,0)
 . I VVTYPE="t" D SETBOOL("t") Q
"RTN","VPRJSOND",41,0)
 . I VVTYPE="f" D SETBOOL("f") Q
"RTN","VPRJSOND",42,0)
 . I VVTYPE="n" D SETBOOL("n") Q
"RTN","VPRJSOND",43,0)
 . I "0123456789+-.eE"[VVTYPE S @$$CURNODE()=$$NUMPARS(VVTYPE) Q
"RTN","VPRJSOND",44,0)
 . D ERRX("TKN",VVTYPE)
"RTN","VPRJSOND",45,0)
 I VVSTACK'=0 D ERRX("SCT",VVSTACK)
"RTN","VPRJSOND",46,0)
 Q
"RTN","VPRJSOND",47,0)
NXTKN() ; Move the pointers to the beginning of the next token
"RTN","VPRJSOND",48,0)
 N VVDONE,VVEOF,VVTOKEN
"RTN","VPRJSOND",49,0)
 S VVDONE=0,VVEOF=0 F  D  Q:VVDONE!VVEOF  ; eat spaces & new lines until next visible char
"RTN","VPRJSOND",50,0)
 . I VVIDX>$L(@VVJSON@(VVLINE)) S VVLINE=$O(@VVJSON@(VVLINE)),VVIDX=1 I 'VVLINE S VVEOF=1 Q
"RTN","VPRJSOND",51,0)
 . I $A(@VVJSON@(VVLINE),VVIDX)>32 S VVDONE=1 Q
"RTN","VPRJSOND",52,0)
 . S VVIDX=VVIDX+1
"RTN","VPRJSOND",53,0)
 Q:VVEOF ""  ; we're at the end of input
"RTN","VPRJSOND",54,0)
 S VVTOKEN=$E(@VVJSON@(VVLINE),VVIDX),VVIDX=VVIDX+1
"RTN","VPRJSOND",55,0)
 Q VVTOKEN
"RTN","VPRJSOND",56,0)
 ;
"RTN","VPRJSOND",57,0)
ADDSTR ; Add string value to current node, escaping text along the way
"RTN","VPRJSOND",58,0)
 ; Expects VVLINE,VVIDX to reference that starting point of the index
"RTN","VPRJSOND",59,0)
 ; TODO: add a mechanism to specify names that should not be escaped
"RTN","VPRJSOND",60,0)
 ;       just store as ":")= and ":",n)=
"RTN","VPRJSOND",61,0)
 ;
"RTN","VPRJSOND",62,0)
 ; Happy path -- we find the end quote in the same line
"RTN","VPRJSOND",63,0)
 N VVEND,VVX
"RTN","VPRJSOND",64,0)
 S VVEND=$F(@VVJSON@(VVLINE),"""",VVIDX)
"RTN","VPRJSOND",65,0)
 I VVEND,($E(@VVJSON@(VVLINE),VVEND-2)'="\") D SETSTR  QUIT  ;normal
"RTN","VPRJSOND",66,0)
 I VVEND,$$ISCLOSEQ(VVLINE) D SETSTR QUIT  ;close quote preceded by escaped \
"RTN","VPRJSOND",67,0)
 ;
"RTN","VPRJSOND",68,0)
 ; Less happy path -- first quote wasn't close quote
"RTN","VPRJSOND",69,0)
 N VVDONE,VVTLINE
"RTN","VPRJSOND",70,0)
 S VVDONE=0,VVTLINE=VVLINE ; VVTLINE for temporary increment of VVLINE
"RTN","VPRJSOND",71,0)
 F  D  Q:VVDONE  Q:VVERRORS
"RTN","VPRJSOND",72,0)
 . ;if no quote on current line advance line, scan again
"RTN","VPRJSOND",73,0)
 . I 'VVEND S VVTLINE=VVTLINE+1,VVEND=1 I '$D(@VVJSON@(VVTLINE)) D ERRX("EIQ") Q
"RTN","VPRJSOND",74,0)
 . S VVEND=$F(@VVJSON@(VVTLINE),"""",VVEND)
"RTN","VPRJSOND",75,0)
 . Q:'VVEND  ; continue on to next line if no quote found on this one
"RTN","VPRJSOND",76,0)
 . I (VVEND>2),($E(@VVJSON@(VVTLINE),VVEND-2)'="\") S VVDONE=1 Q  ; found quote position
"RTN","VPRJSOND",77,0)
 . S VVDONE=$$ISCLOSEQ(VVTLINE) ; see if this is an escaped quote or closing quote
"RTN","VPRJSOND",78,0)
 Q:VVERRORS
"RTN","VPRJSOND",79,0)
 ; unescape from VVIDX to VVEND, using \-extension nodes as necessary
"RTN","VPRJSOND",80,0)
 D UESEXT
"RTN","VPRJSOND",81,0)
 ; now we need to move VVLINE and VVIDX to next parsing point
"RTN","VPRJSOND",82,0)
 S VVLINE=VVTLINE,VVIDX=VVEND
"RTN","VPRJSOND",83,0)
 Q
"RTN","VPRJSOND",84,0)
SETSTR ; Set simple string value from within same line
"RTN","VPRJSOND",85,0)
 ; expects VVJSON, VVLINE, VVINX, VVEND
"RTN","VPRJSOND",86,0)
 N VVX
"RTN","VPRJSOND",87,0)
 S VVX=$E(@VVJSON@(VVLINE),VVIDX,VVEND-2),VVIDX=VVEND
"RTN","VPRJSOND",88,0)
 S @$$CURNODE()=$$UES(VVX)
"RTN","VPRJSOND",89,0)
 I (+VVX=VVX)!($E(VVX,1,2)="0.")!($E(VVX,1,3)="-0.") S @$$CURNODE()@("\s")=""
"RTN","VPRJSOND",90,0)
 I VVIDX>$L(@VVJSON@(VVLINE)) S VVLINE=VVLINE+1,VVIDX=1
"RTN","VPRJSOND",91,0)
 Q
"RTN","VPRJSOND",92,0)
UESEXT ; unescape from VVLINE,VVIDX to VVTLINE,VVEND & extend (\) if necessary
"RTN","VPRJSOND",93,0)
 ; expects VVLINE,VVIDX,VVTLINE,VVEND
"RTN","VPRJSOND",94,0)
 N VVI,VVY,VVSTART,VVSTOP,VVDONE,VVBUF,VVNODE,VVMORE,VVTO
"RTN","VPRJSOND",95,0)
 S VVNODE=$$CURNODE(),VVBUF="",VVMORE=0,VVSTOP=VVEND-2
"RTN","VPRJSOND",96,0)
 S VVI=VVIDX,VVY=VVLINE,VVDONE=0
"RTN","VPRJSOND",97,0)
 F  D  Q:VVDONE  Q:VVERRORS
"RTN","VPRJSOND",98,0)
 . S VVSTART=VVI,VVI=$F(@VVJSON@(VVY),"\",VVI)
"RTN","VPRJSOND",99,0)
 . ; if we are on the last line, don't extract past VVSTOP
"RTN","VPRJSOND",100,0)
 . I (VVY=VVTLINE) S VVTO=$S('VVI:VVSTOP,VVI>VVSTOP:VVSTOP,1:VVI-2) I 1
"RTN","VPRJSOND",101,0)
 . E  S VVTO=$S('VVI:99999,1:VVI-2)
"RTN","VPRJSOND",102,0)
 . D ADDBUF($E(@VVJSON@(VVY),VVSTART,VVTO))
"RTN","VPRJSOND",103,0)
 . I (VVY'<VVTLINE),(('VVI)!(VVI>VVSTOP)) S VVDONE=1 QUIT  ; now past close quote
"RTN","VPRJSOND",104,0)
 . I 'VVI S VVY=VVY+1,VVI=1 QUIT  ; nothing escaped, go to next line
"RTN","VPRJSOND",105,0)
 . I VVI>$L(@VVJSON@(VVY)) S VVY=VVY+1,VVI=1 I '$D(@VVJSON@(VVY)) D ERRX("EIU")
"RTN","VPRJSOND",106,0)
 . N VVTGT S VVTGT=$E(@VVJSON@(VVY),VVI)
"RTN","VPRJSOND",107,0)
 . I VVTGT="u" D  I 1
"RTN","VPRJSOND",108,0)
 . . N VVTGTC S VVTGTC=$E(@VVJSON@(VVY),VVI+1,VVI+4),VVI=VVI+4
"RTN","VPRJSOND",109,0)
 . . I $L(VVTGTC)<4 S VVY=VVY+1,VVI=4-$L(VVTGTC),VVTGTC=VVTGTC_$E(@VVJSON@(VVY),1,VVI)
"RTN","VPRJSOND",110,0)
 . . D ADDBUF($C($$DEC^XLFUTL(VVTGTC,16)))
"RTN","VPRJSOND",111,0)
 . E  D ADDBUF($$REALCHAR(VVTGT))
"RTN","VPRJSOND",112,0)
 . S VVI=VVI+1
"RTN","VPRJSOND",113,0)
 . I (VVY'<VVTLINE),(VVI>VVSTOP) S VVDONE=1 ; VVI incremented past stop
"RTN","VPRJSOND",114,0)
 Q:VVERRORS
"RTN","VPRJSOND",115,0)
 D SAVEBUF
"RTN","VPRJSOND",116,0)
 Q
"RTN","VPRJSOND",117,0)
ADDBUF(VVX) ; add buffer of characters to destination
"RTN","VPRJSOND",118,0)
 ; expects VVBUF,VVMAX,VVNODE,VVMORE to be defined
"RTN","VPRJSOND",119,0)
 ; used directly by ADDSTR
"RTN","VPRJSOND",120,0)
 I $L(VVX)+$L(VVBUF)>VVMAX D SAVEBUF
"RTN","VPRJSOND",121,0)
 S VVBUF=VVBUF_VVX
"RTN","VPRJSOND",122,0)
 Q
"RTN","VPRJSOND",123,0)
SAVEBUF ; write out buffer to destination
"RTN","VPRJSOND",124,0)
 ; expects VVBUF,VVMAX,VVNODE,VVMORE to be defined
"RTN","VPRJSOND",125,0)
 ; used directly by ADDSTR,ADDBUF
"RTN","VPRJSOND",126,0)
 I VVMORE S @VVNODE@("\",VVMORE)=VVBUF
"RTN","VPRJSOND",127,0)
 I 'VVMORE S @VVNODE=VVBUF I $L(VVBUF)<19,+$E(VVBUF,1,18) S @VVNODE@("\s")=""
"RTN","VPRJSOND",128,0)
 S VVMORE=VVMORE+1,VVBUF=""
"RTN","VPRJSOND",129,0)
 Q
"RTN","VPRJSOND",130,0)
ISCLOSEQ(VVBLINE) ; return true if this is a closing, rather than escaped, quote
"RTN","VPRJSOND",131,0)
 ; expects
"RTN","VPRJSOND",132,0)
 ;   VVJSON: lines of the JSON encoded string
"RTN","VPRJSOND",133,0)
 ;    VVIDX: points to 1st character of the segment
"RTN","VPRJSOND",134,0)
 ;   VVLINE: points to the line in which the segment starts
"RTN","VPRJSOND",135,0)
 ;    VVEND: points to 1st character after the " (may be past the end of the line)
"RTN","VPRJSOND",136,0)
 ; used directly by ADDSTR
"RTN","VPRJSOND",137,0)
 N VVBS,VVBIDX,VVBDONE
"RTN","VPRJSOND",138,0)
 S VVBS=0,VVBIDX=VVEND-2,VVBDONE=0 ; VVBIDX starts at 1st character before quote
"RTN","VPRJSOND",139,0)
 ; count the backslashes preceding the quote (odd number means the quote was escaped)
"RTN","VPRJSOND",140,0)
 F  D  Q:VVBDONE!VVERRORS
"RTN","VPRJSOND",141,0)
 . I VVBIDX<1 D  Q  ; when VVBIDX<1 go back a line
"RTN","VPRJSOND",142,0)
 . . S VVBLINE=VVBLINE-1 I VVBLINE<VVLINE D ERRX("RSB") Q
"RTN","VPRJSOND",143,0)
 . . S VVBIDX=$L(@VVJSON@(VVBLINE))
"RTN","VPRJSOND",144,0)
 . I $E(@VVJSON@(VVBLINE),VVBIDX)'="\" S VVBDONE=1 Q
"RTN","VPRJSOND",145,0)
 . S VVBS=VVBS+1,VVBIDX=VVBIDX-1
"RTN","VPRJSOND",146,0)
 Q VVBS#2=0  ; VVBS is even if this is a close quote
"RTN","VPRJSOND",147,0)
 ;
"RTN","VPRJSOND",148,0)
NAMPARS() ; Return parsed name, advancing index past the close quote
"RTN","VPRJSOND",149,0)
 ; -- This assumes no embedded quotes are in the name itself --
"RTN","VPRJSOND",150,0)
 N VVEND,VVDONE,VVNAME
"RTN","VPRJSOND",151,0)
 S VVDONE=0,VVNAME=""
"RTN","VPRJSOND",152,0)
 F  D  Q:VVDONE  Q:VVERRORS
"RTN","VPRJSOND",153,0)
 . S VVEND=$F(@VVJSON@(VVLINE),"""",VVIDX)
"RTN","VPRJSOND",154,0)
 . I VVEND S VVNAME=VVNAME_$E(@VVJSON@(VVLINE),VVIDX,VVEND-2),VVIDX=VVEND,VVDONE=1
"RTN","VPRJSOND",155,0)
 . I 'VVEND S VVNAME=VVNAME_$E(@VVJSON@(VVLINE),VVIDX,$L(@VVJSON@(VVLINE)))
"RTN","VPRJSOND",156,0)
 . I 'VVEND!(VVEND>$L(@VVJSON@(VVLINE))) S VVLINE=VVLINE+1,VVIDX=1 I '$D(@VVJSON@(VVLINE)) D ERRX("ORN")
"RTN","VPRJSOND",157,0)
 Q VVNAME
"RTN","VPRJSOND",158,0)
 ;
"RTN","VPRJSOND",159,0)
NUMPARS(VVDIGIT) ; Return parsed number, advancing index past the end of the number
"RTN","VPRJSOND",160,0)
 ; VVIDX intially references the second digit
"RTN","VPRJSOND",161,0)
 N VVDONE,VVNUM
"RTN","VPRJSOND",162,0)
 S VVDONE=0,VVNUM=VVDIGIT
"RTN","VPRJSOND",163,0)
 F  D  Q:VVDONE  Q:VVERRORS
"RTN","VPRJSOND",164,0)
 . I '("0123456789+-.eE"[$E(@VVJSON@(VVLINE),VVIDX)) S VVDONE=1 Q
"RTN","VPRJSOND",165,0)
 . S VVNUM=VVNUM_$E(@VVJSON@(VVLINE),VVIDX)
"RTN","VPRJSOND",166,0)
 . S VVIDX=VVIDX+1 I VVIDX>$L(@VVJSON@(VVLINE)) S VVLINE=VVLINE+1,VVIDX=1 I '$D(@VVJSON@(VVLINE)) D ERRX("OR#")
"RTN","VPRJSOND",167,0)
 Q VVNUM
"RTN","VPRJSOND",168,0)
 ;
"RTN","VPRJSOND",169,0)
SETBOOL(VVLTR) ; Return parsed value, advancing index past the end of the value
"RTN","VPRJSOND",170,0)
 N VVDONE,VVBOOL,VVX
"RTN","VPRJSOND",171,0)
 S VVDONE=0,VVBOOL=VVLTR
"RTN","VPRJSOND",172,0)
 F  D  Q:VVDONE  Q:VVERRORS
"RTN","VPRJSOND",173,0)
 . S VVX=$TR($E(@VVJSON@(VVLINE),VVIDX),"TRUEFALSN","truefalsn")
"RTN","VPRJSOND",174,0)
 . I '("truefalsn"[VVX) S VVDONE=1 Q
"RTN","VPRJSOND",175,0)
 . S VVBOOL=VVBOOL_VVX
"RTN","VPRJSOND",176,0)
 . S VVIDX=VVIDX+1 I VVIDX>$L(@VVJSON@(VVLINE)) S VVLINE=VVLINE+1,VVIDX=1 I '$D(@VVJSON@(VVLINE)) D ERRX("ORB")
"RTN","VPRJSOND",177,0)
 I VVLTR="t",(VVBOOL'="true") D ERRX("EXT",VVTYPE)
"RTN","VPRJSOND",178,0)
 I VVLTR="f",(VVBOOL'="false") D ERRX("EXF",VVTYPE)
"RTN","VPRJSOND",179,0)
 I VVLTR="n",(VVBOOL'="null") D ERRX("EXN",VVTYPE)
"RTN","VPRJSOND",180,0)
 S @$$CURNODE()=VVBOOL
"RTN","VPRJSOND",181,0)
 Q
"RTN","VPRJSOND",182,0)
 ;
"RTN","VPRJSOND",183,0)
OSETBOOL(VVX) ; set a value and increment VVIDX
"RTN","VPRJSOND",184,0)
 S @$$CURNODE()=VVX
"RTN","VPRJSOND",185,0)
 S VVIDX=VVIDX+$L(VVX)-1
"RTN","VPRJSOND",186,0)
 N VVDIFF S VVDIFF=VVIDX-$L(@VVJSON@(VVLINE))  ; in case VVIDX moves to next line
"RTN","VPRJSOND",187,0)
 I VVDIFF>0 S VVLINE=VVLINE+1,VVIDX=VVDIFF I '$D(@VVJSON@(VVLINE)) D ERRX("ORB")
"RTN","VPRJSOND",188,0)
 Q
"RTN","VPRJSOND",189,0)
CURNODE() ; Return a global/local variable name based on VVSTACK
"RTN","VPRJSOND",190,0)
 ; Expects VVSTACK to be defined already
"RTN","VPRJSOND",191,0)
 N VVI,VVSUBS
"RTN","VPRJSOND",192,0)
 S VVSUBS=""
"RTN","VPRJSOND",193,0)
 F VVI=1:1:VVSTACK S:VVI>1 VVSUBS=VVSUBS_"," D
"RTN","VPRJSOND",194,0)
 . I VVSTACK(VVI) S VVSUBS=VVSUBS_VVSTACK(VVI)
"RTN","VPRJSOND",195,0)
 . E  S VVSUBS=VVSUBS_""""_VVSTACK(VVI)_""""
"RTN","VPRJSOND",196,0)
 Q VVROOT_VVSUBS_")"
"RTN","VPRJSOND",197,0)
 ;
"RTN","VPRJSOND",198,0)
UES(X) ; Unescape JSON string
"RTN","VPRJSOND",199,0)
 ; copy segments from START to POS-2 (right before \)
"RTN","VPRJSOND",200,0)
 ; translate target character (which is at $F position)
"RTN","VPRJSOND",201,0)
 N POS,Y,START
"RTN","VPRJSOND",202,0)
 S POS=0,Y=""
"RTN","VPRJSOND",203,0)
 F  S START=POS+1 D  Q:START>$L(X)
"RTN","VPRJSOND",204,0)
 . S POS=$F(X,"\",START) ; find next position
"RTN","VPRJSOND",205,0)
 . I 'POS S Y=Y_$E(X,START,$L(X)),POS=$L(X) Q
"RTN","VPRJSOND",206,0)
 . ; otherwise handle escaped char
"RTN","VPRJSOND",207,0)
 . N TGT
"RTN","VPRJSOND",208,0)
 . S TGT=$E(X,POS),Y=Y_$E(X,START,POS-2)
"RTN","VPRJSOND",209,0)
 . I TGT="u" S Y=Y_$C($$DEC^XLFUTL($E(X,POS+1,POS+4),16)),POS=POS+4 Q
"RTN","VPRJSOND",210,0)
 . S Y=Y_$$REALCHAR(TGT)
"RTN","VPRJSOND",211,0)
 Q Y
"RTN","VPRJSOND",212,0)
 ;
"RTN","VPRJSOND",213,0)
REALCHAR(C) ; Return actual character from escaped
"RTN","VPRJSOND",214,0)
 I C="""" Q """"
"RTN","VPRJSOND",215,0)
 I C="/" Q "/"
"RTN","VPRJSOND",216,0)
 I C="\" Q "\"
"RTN","VPRJSOND",217,0)
 I C="b" Q $C(8)
"RTN","VPRJSOND",218,0)
 I C="f" Q $C(12)
"RTN","VPRJSOND",219,0)
 I C="n" Q $C(10)
"RTN","VPRJSOND",220,0)
 I C="r" Q $C(13)
"RTN","VPRJSOND",221,0)
 I C="t" Q $C(9)
"RTN","VPRJSOND",222,0)
 I C="u" ;case covered above in $$DEC^XLFUTL calls
"RTN","VPRJSOND",223,0)
 ;otherwise
"RTN","VPRJSOND",224,0)
 I $L($G(VVERR)) D ERRX("ESC",C)
"RTN","VPRJSOND",225,0)
 Q C
"RTN","VPRJSOND",226,0)
 ;
"RTN","VPRJSOND",227,0)
ERRX(ID,VAL) ; Set the appropriate error message
"RTN","VPRJSOND",228,0)
 D ERRX^VPRJSON(ID,$G(VAL))
"RTN","VPRJSOND",229,0)
 Q
"RTN","VPRJSONE")
0^16^B20857447^n/a
"RTN","VPRJSONE",1,0)
VPRJSONE ;SLC/KCM -- Encode JSON
"RTN","VPRJSONE",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 317
"RTN","VPRJSONE",3,0)
 ;
"RTN","VPRJSONE",4,0)
ENCODE(VVROOT,VVJSON,VVERR) ; VVROOT (M structure) --> VVJSON (array of strings)
"RTN","VPRJSONE",5,0)
 ;
"RTN","VPRJSONE",6,0)
DIRECT ; TAG for use by ENCODE^VPRJSON
"RTN","VPRJSONE",7,0)
 ;
"RTN","VPRJSONE",8,0)
 ; Examples:  D ENCODE^VPRJSON("^GLO(99,2)","^TMP($J)")
"RTN","VPRJSONE",9,0)
 ;            D ENCODE^VPRJSON("LOCALVAR","MYJSON","LOCALERR")
"RTN","VPRJSONE",10,0)
 ;
"RTN","VPRJSONE",11,0)
 ; VVROOT: closed array reference for M representation of object
"RTN","VPRJSONE",12,0)
 ; VVJSON: destination variable for the string array formatted as JSON
"RTN","VPRJSONE",13,0)
 ;  VVERR: contains error messages, defaults to ^TMP("VPRJERR",$J)
"RTN","VPRJSONE",14,0)
 ;
"RTN","VPRJSONE",15,0)
 S VVERR=$G(VVERR,"^TMP(""VPRJERR"",$J)")
"RTN","VPRJSONE",16,0)
 I '$L($G(VVROOT)) ; set error info
"RTN","VPRJSONE",17,0)
 I '$L($G(VVJSON)) ; set error info
"RTN","VPRJSONE",18,0)
 N VVLINE,VVMAX,VVERRORS
"RTN","VPRJSONE",19,0)
 S VVLINE=1,VVMAX=4000,VVERRORS=0  ; 96 more bytes of wiggle room
"RTN","VPRJSONE",20,0)
 S @VVJSON@(VVLINE)=""
"RTN","VPRJSONE",21,0)
 D SEROBJ(VVROOT)
"RTN","VPRJSONE",22,0)
 Q
"RTN","VPRJSONE",23,0)
 ;
"RTN","VPRJSONE",24,0)
SEROBJ(VVROOT) ; Serialize into a JSON object
"RTN","VPRJSONE",25,0)
 N VVFIRST,VVSUB,VVNXT
"RTN","VPRJSONE",26,0)
 S @VVJSON@(VVLINE)=@VVJSON@(VVLINE)_"{"
"RTN","VPRJSONE",27,0)
 S VVFIRST=1
"RTN","VPRJSONE",28,0)
 S VVSUB="" F  S VVSUB=$O(@VVROOT@(VVSUB)) Q:VVSUB=""  D
"RTN","VPRJSONE",29,0)
 . S:'VVFIRST @VVJSON@(VVLINE)=@VVJSON@(VVLINE)_"," S VVFIRST=0
"RTN","VPRJSONE",30,0)
 . ; get the name part
"RTN","VPRJSONE",31,0)
 . D SERNAME(VVSUB)
"RTN","VPRJSONE",32,0)
 . ; if this is a value, serialize it
"RTN","VPRJSONE",33,0)
 . I $$ISVALUE(VVROOT,VVSUB) D SERVAL(VVROOT,VVSUB) Q
"RTN","VPRJSONE",34,0)
 . ; otherwise navigate to the next child object or array
"RTN","VPRJSONE",35,0)
 . I $D(@VVROOT@(VVSUB))=10 S VVNXT=$O(@VVROOT@(VVSUB,"")) D  Q
"RTN","VPRJSONE",36,0)
 . . I +VVNXT D SERARY($NA(@VVROOT@(VVSUB))) I 1
"RTN","VPRJSONE",37,0)
 . . E  D SEROBJ($NA(@VVROOT@(VVSUB)))
"RTN","VPRJSONE",38,0)
 . D ERRX("SOB",VVSUB)  ; should quit loop before here
"RTN","VPRJSONE",39,0)
 S @VVJSON@(VVLINE)=@VVJSON@(VVLINE)_"}"
"RTN","VPRJSONE",40,0)
 Q
"RTN","VPRJSONE",41,0)
SERARY(VVROOT) ; Serialize into a JSON array
"RTN","VPRJSONE",42,0)
 N VVFIRST,VVI,VVNXT
"RTN","VPRJSONE",43,0)
 S @VVJSON@(VVLINE)=@VVJSON@(VVLINE)_"["
"RTN","VPRJSONE",44,0)
 S VVFIRST=1
"RTN","VPRJSONE",45,0)
 S VVI=0 F  S VVI=$O(@VVROOT@(VVI)) Q:'VVI  D
"RTN","VPRJSONE",46,0)
 . S:'VVFIRST @VVJSON@(VVLINE)=@VVJSON@(VVLINE)_"," S VVFIRST=0
"RTN","VPRJSONE",47,0)
 . I $$ISVALUE(VVROOT,VVI) D SERVAL(VVROOT,VVI) Q  ; write value
"RTN","VPRJSONE",48,0)
 . I $D(@VVROOT@(VVI))=10 S VVNXT=$O(@VVROOT@(VVI,"")) D  Q
"RTN","VPRJSONE",49,0)
 . . I +VVNXT D SERARY($NA(@VVROOT@(VVI))) I 1
"RTN","VPRJSONE",50,0)
 . . E  D SEROBJ($NA(@VVROOT@(VVI)))
"RTN","VPRJSONE",51,0)
 . D ERRX("SAR",VVI)  ; should quit loop before here
"RTN","VPRJSONE",52,0)
 S @VVJSON@(VVLINE)=@VVJSON@(VVLINE)_"]"
"RTN","VPRJSONE",53,0)
 Q
"RTN","VPRJSONE",54,0)
SERNAME(VVSUB) ; Serialize the object name into JSON string
"RTN","VPRJSONE",55,0)
 I ($L(VVSUB)+$L(@VVJSON@(VVLINE)))>VVMAX S VVLINE=VVLINE+1,@VVJSON@(VVLINE)=""
"RTN","VPRJSONE",56,0)
 S @VVJSON@(VVLINE)=@VVJSON@(VVLINE)_""""_VVSUB_""""_":"
"RTN","VPRJSONE",57,0)
 Q
"RTN","VPRJSONE",58,0)
SERVAL(VVROOT,VVSUB) ; Serialize X into appropriate JSON representation
"RTN","VPRJSONE",59,0)
 N VVX,VVI
"RTN","VPRJSONE",60,0)
 ; if the node is already in JSON format, just add it
"RTN","VPRJSONE",61,0)
 I $D(@VVROOT@(VVSUB,":")) D  QUIT  ; <-- jump out here if preformatted
"RTN","VPRJSONE",62,0)
 . S VVX=$G(@VVROOT@(VVSUB,":")) D:$L(VVX) CONCAT
"RTN","VPRJSONE",63,0)
 . S VVI=0 F  S VVI=$O(@VVROOT@(VVSUB,":",VVI)) Q:'VVI  S VVX=@VVROOT@(VVSUB,":",VVI) D CONCAT
"RTN","VPRJSONE",64,0)
 ;
"RTN","VPRJSONE",65,0)
 S VVX=$G(@VVROOT@(VVSUB))
"RTN","VPRJSONE",66,0)
 ; handle the numeric, boolean, and null types
"RTN","VPRJSONE",67,0)
 I '$D(@VVROOT@(VVSUB,"\s")),$$NUMERIC(VVX) D CONCAT QUIT
"RTN","VPRJSONE",68,0)
 I (VVX="true")!(VVX="false")!(VVX="null") D CONCAT QUIT
"RTN","VPRJSONE",69,0)
 ;I $E(vX)=$C(186) S vX=$E(vX,2,$L(vX)) ; remove the "string-forcing" char
"RTN","VPRJSONE",70,0)
 ; otherwise treat it as a string type
"RTN","VPRJSONE",71,0)
 S VVX=""""_$$ESC(VVX) ; open quote
"RTN","VPRJSONE",72,0)
 D CONCAT
"RTN","VPRJSONE",73,0)
 I $D(@VVROOT@(VVSUB,"\")) D  ; handle continuation nodes
"RTN","VPRJSONE",74,0)
 . S VVI=0 F  S VVI=$O(@VVROOT@(VVSUB,"\",VVI)) Q:'VVI   D
"RTN","VPRJSONE",75,0)
 . . S VVX=$$ESC(@VVROOT@(VVSUB,"\",VVI))
"RTN","VPRJSONE",76,0)
 . . D CONCAT
"RTN","VPRJSONE",77,0)
 S VVX="""" D CONCAT    ; close quote
"RTN","VPRJSONE",78,0)
 Q
"RTN","VPRJSONE",79,0)
CONCAT ; come here to concatenate to JSON string
"RTN","VPRJSONE",80,0)
 I ($L(VVX)+$L(@VVJSON@(VVLINE)))>VVMAX S VVLINE=VVLINE+1,@VVJSON@(VVLINE)=""
"RTN","VPRJSONE",81,0)
 S @VVJSON@(VVLINE)=@VVJSON@(VVLINE)_VVX
"RTN","VPRJSONE",82,0)
 Q
"RTN","VPRJSONE",83,0)
ISVALUE(VVROOT,VVSUB) ; Return true if this is a value node
"RTN","VPRJSONE",84,0)
 I $D(@VVROOT@(VVSUB))#2 Q 1
"RTN","VPRJSONE",85,0)
 N VVX S VVX=$O(@VVROOT@(VVSUB,""))
"RTN","VPRJSONE",86,0)
 Q:VVX="\" 1
"RTN","VPRJSONE",87,0)
 Q:VVX=":" 1
"RTN","VPRJSONE",88,0)
 Q 0
"RTN","VPRJSONE",89,0)
 ;
"RTN","VPRJSONE",90,0)
NUMERIC(X) ; Return true if the numeric
"RTN","VPRJSONE",91,0)
 I $L(X)>18 Q 0        ; string (too long for numeric)
"RTN","VPRJSONE",92,0)
 I X=0 Q 1             ; numeric (value is zero)
"RTN","VPRJSONE",93,0)
 I +X=0 Q 0            ; string
"RTN","VPRJSONE",94,0)
 I $E(X,1)="." Q 0     ; not a JSON number (although numeric in M)
"RTN","VPRJSONE",95,0)
 I $E(X,1,2)="-." Q 0  ; not a JSON number
"RTN","VPRJSONE",96,0)
 I +X=X Q 1            ; numeric
"RTN","VPRJSONE",97,0)
 I X?1"0."1.n Q 1      ; positive fraction
"RTN","VPRJSONE",98,0)
 I X?1"-0."1.N Q 1     ; negative fraction
"RTN","VPRJSONE",99,0)
 S X=$TR(X,"e","E")
"RTN","VPRJSONE",100,0)
 I X?.1"-"1.N.1".".N1"E".1"+"1.N Q 1  ; {-}99{.99}E{+}99
"RTN","VPRJSONE",101,0)
 I X?.1"-"1.N.1".".N1"E-"1.N Q 1      ; {-}99{.99}E-99
"RTN","VPRJSONE",102,0)
 Q 0
"RTN","VPRJSONE",103,0)
 ;
"RTN","VPRJSONE",104,0)
ESC(X) ; Escape string for JSON
"RTN","VPRJSONE",105,0)
 N Y,I,PAIR,FROM,TO
"RTN","VPRJSONE",106,0)
 S Y=X
"RTN","VPRJSONE",107,0)
 F PAIR="\\","""""","//",$C(8,98),$C(12,102),$C(10,110),$C(13,114),$C(9,116) D
"RTN","VPRJSONE",108,0)
 . S FROM=$E(PAIR),TO=$E(PAIR,2)
"RTN","VPRJSONE",109,0)
 . S X=Y,Y=$P(X,FROM) F I=2:1:$L(X,FROM) S Y=Y_"\"_TO_$P(X,FROM,I)
"RTN","VPRJSONE",110,0)
 I Y?.E1.C.E S X=Y,Y="" F I=1:1:$L(X) S FROM=$A(X,I) D
"RTN","VPRJSONE",111,0)
 . ; skip NUL character, otherwise encode ctrl-char
"RTN","VPRJSONE",112,0)
 . I FROM<32 Q:FROM=0  S Y=Y_$$UCODE(FROM) Q
"RTN","VPRJSONE",113,0)
 . I FROM>126,(FROM<160) S Y=Y_$$UCODE(FROM) Q
"RTN","VPRJSONE",114,0)
 . S Y=Y_$E(X,I)
"RTN","VPRJSONE",115,0)
 Q Y
"RTN","VPRJSONE",116,0)
 ;
"RTN","VPRJSONE",117,0)
UCODE(C) ; Return \u00nn representation of decimal character value
"RTN","VPRJSONE",118,0)
 N H S H="0000"_$$CNV^XLFUTL(C,16)
"RTN","VPRJSONE",119,0)
 Q "\u"_$E(H,$L(H)-3,$L(H))
"RTN","VPRJSONE",120,0)
 ;
"RTN","VPRJSONE",121,0)
ERRX(ID,VAL) ; Set the appropriate error message
"RTN","VPRJSONE",122,0)
 D ERRX^VPRJSON(ID,$G(VAL))
"RTN","VPRJSONE",123,0)
 Q
"RTN","VPRP2I")
0^34^B236349^n/a
"RTN","VPRP2I",1,0)
VPRP2I ;SLC/MKB -- VPR patch 2 post install ;8/14/13  11:22
"RTN","VPRP2I",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 317
"RTN","VPRP2I",3,0)
 ;
"RTN","VPRP2I",4,0)
 ; External References          DBIA#
"RTN","VPRP2I",5,0)
 ; -------------------          -----
"RTN","VPRP2I",6,0)
 ; XPAR                          2263
"RTN","VPRP2I",7,0)
 ;
"RTN","VPRP2I",8,0)
PRE ; -- pre init
"RTN","VPRP2I",9,0)
 Q
"RTN","VPRP2I",10,0)
 ;
"RTN","VPRP2I",11,0)
POST ; -- post init
"RTN","VPRP2I",12,0)
 D PUT^XPAR("PKG","VPR VERSION",1,"1.02")
"RTN","VPRP2I",13,0)
 D PUT^XPAR("SYS","VPR SYSTEM NAME",1,$$SYS^VPRUTILS)
"RTN","VPRP2I",14,0)
 Q
"RTN","VPRUTILS")
0^17^B9723974^n/a
"RTN","VPRUTILS",1,0)
VPRUTILS ;SLC/AGP -- VPR utilities routine ;8/14/13  11:22
"RTN","VPRUTILS",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 317
"RTN","VPRUTILS",3,0)
 ;
"RTN","VPRUTILS",4,0)
 ; External References          DBIA#
"RTN","VPRUTILS",5,0)
 ; -------------------          -----
"RTN","VPRUTILS",6,0)
 ; XLFCRC                        3156
"RTN","VPRUTILS",7,0)
 ; XLFDT                        10103
"RTN","VPRUTILS",8,0)
 ; XLFUTL                        2622
"RTN","VPRUTILS",9,0)
 ; XUPARAM                       2541
"RTN","VPRUTILS",10,0)
 ;
"RTN","VPRUTILS",11,0)
 Q
"RTN","VPRUTILS",12,0)
 ;
"RTN","VPRUTILS",13,0)
SETERROR(RESULT,ERROR,EXTERROR,DATA) ; -- error text for JSON
"RTN","VPRUTILS",14,0)
 N CNT,TEMP,VPRTEMP,XCNT
"RTN","VPRUTILS",15,0)
 S VPRTEMP="VPRXTEMP ERRORS"
"RTN","VPRUTILS",16,0)
 I '$D(^XTMP(VPRTEMP,0)) S ^XTMP(VPRTEMP,0)=$$FMADD^XLFDT(DT,7)_U_DT_U_"VPR ERROR GLOBAL"
"RTN","VPRUTILS",17,0)
 S RESULT("success")="false"
"RTN","VPRUTILS",18,0)
 I $D(DATA) S XCNT=$O(^XTMP(VPRTEMP,""),-1)+1 M ^XTMP(VPRTEMP,XCNT,"ERROR")=DATA
"RTN","VPRUTILS",19,0)
 I $D(ERROR) D SETERRTX(.TEMP,.ERROR) S RESULT("error","code")=TEMP
"RTN","VPRUTILS",20,0)
 I +$G(XCNT)>0 S RESULT("error","code")=$G(RESULT("error","code"))_" See ^XTMP("_VPRTEMP_","_XCNT_",DATA) for data"
"RTN","VPRUTILS",21,0)
 I $D(EXTERROR) D SETERRTX(.TEMP,.EXTERROR) I TEMP'="" S RESULT("error","message")=TEMP
"RTN","VPRUTILS",22,0)
 ;
"RTN","VPRUTILS",23,0)
 Q
"RTN","VPRUTILS",24,0)
 ;
"RTN","VPRUTILS",25,0)
SETERRTX(TEMP,ERROR) ;
"RTN","VPRUTILS",26,0)
 S TEMP=""
"RTN","VPRUTILS",27,0)
 S CNT=0 F  S CNT=$O(ERROR(CNT)) Q:CNT'>0  D
"RTN","VPRUTILS",28,0)
 .S TEMP=$S(TEMP'="":TEMP=TEMP_$C(13,10)_ERROR(CNT),1:ERROR(CNT))
"RTN","VPRUTILS",29,0)
 Q
"RTN","VPRUTILS",30,0)
 ;
"RTN","VPRUTILS",31,0)
SETTEXT(X,VALUE) ; -- format word processing
"RTN","VPRUTILS",32,0)
 N FIRST,I,LINE
"RTN","VPRUTILS",33,0)
 S FIRST=1
"RTN","VPRUTILS",34,0)
 S I=0 F  S I=$O(@X@(I)) Q:I<1  D
"RTN","VPRUTILS",35,0)
 .S LINE=$S($D(@X@(I,0)):@X@(I,0),1:@X@(I))
"RTN","VPRUTILS",36,0)
 .; FIRST=1 S @VALUE@(I)=LINE,FIRST=0 Q
"RTN","VPRUTILS",37,0)
 .S @VALUE@(I)=LINE_$C(13)_$C(10)
"RTN","VPRUTILS",38,0)
 Q
"RTN","VPRUTILS",39,0)
 ;
"RTN","VPRUTILS",40,0)
SPLITVAL(NODE,ARRAY) ; -- split a value into a list
"RTN","VPRUTILS",41,0)
 N CNT,NAME,VALUE,FIELD
"RTN","VPRUTILS",42,0)
 S NAME="" F  S NAME=$O(ARRAY(NAME)) Q:NAME=""  D
"RTN","VPRUTILS",43,0)
 .S CNT=+ARRAY(NAME)
"RTN","VPRUTILS",44,0)
 .S VALUE=$P($G(NODE),U,CNT)
"RTN","VPRUTILS",45,0)
 .I NAME="Code" S FIELD=$P(ARRAY(NAME),U,2) S VALUE=$$SETVURN(FIELD,VALUE)
"RTN","VPRUTILS",46,0)
 .S ARRAY(NAME)=VALUE
"RTN","VPRUTILS",47,0)
 Q
"RTN","VPRUTILS",48,0)
 ;
"RTN","VPRUTILS",49,0)
SETPROV(NODE,PROV) ; -- providers
"RTN","VPRUTILS",50,0)
 S PROV("providerUid")=$$SETUID("user",,+NODE)
"RTN","VPRUTILS",51,0)
 S PROV("providerName")=$P(NODE,U,2)
"RTN","VPRUTILS",52,0)
 Q
"RTN","VPRUTILS",53,0)
 ;
"RTN","VPRUTILS",54,0)
SETUID(DOMAIN,PAT,ID,ADDDATA) ; -- create uid string
"RTN","VPRUTILS",55,0)
 N RESULT,SYS
"RTN","VPRUTILS",56,0)
 S SYS=$S($D(VPRSYS):VPRSYS,1:$$GET^XPAR("SYS","VPR SYSTEM NAME"))
"RTN","VPRUTILS",57,0)
 S RESULT="urn:va:"_DOMAIN_":"_SYS_":"_$S($G(PAT):PAT_":",1:"")_ID
"RTN","VPRUTILS",58,0)
 I $L($G(ADDDATA)) S RESULT=RESULT_":"_ADDDATA
"RTN","VPRUTILS",59,0)
 Q RESULT
"RTN","VPRUTILS",60,0)
 ;
"RTN","VPRUTILS",61,0)
SETFCURN(DOMAIN,FACILITY,VALUE) ; -- create facility urn
"RTN","VPRUTILS",62,0)
 Q "urn:va:"_DOMAIN_":"_FACILITY_":"_VALUE
"RTN","VPRUTILS",63,0)
 ;
"RTN","VPRUTILS",64,0)
SETVURN(DOMAIN,VALUE) ; -- create VA urn
"RTN","VPRUTILS",65,0)
 N RESULT S RESULT=""
"RTN","VPRUTILS",66,0)
 S RESULT="urn:va:"_DOMAIN_":"_VALUE
"RTN","VPRUTILS",67,0)
 Q RESULT
"RTN","VPRUTILS",68,0)
 ;
"RTN","VPRUTILS",69,0)
SYS() ; -- return hashed system name
"RTN","VPRUTILS",70,0)
 Q $$BASE^XLFUTL($$CRC16^XLFCRC($$KSP^XUPARAM("WHERE")),10,16)
"RTN","VPRUTILS",71,0)
 ;
"RTN","VPRUTILS",72,0)
SETNCS(CODESET,VALUE) ; -- create national codeset urn
"RTN","VPRUTILS",73,0)
 Q "urn:"_CODESET_":"_VALUE
"RTN","VPRUTILS",74,0)
 ;
"RTN","VPRUTILS",75,0)
JSONDT(X) ; -- convert FileMan DT to HL7 DT for JSON
"RTN","VPRUTILS",76,0)
 N D,DATE,M,TIME,Y
"RTN","VPRUTILS",77,0)
 S DATE=$P($$FMTHL7^XLFDT(X),"-")
"RTN","VPRUTILS",78,0)
 I $L(DATE)>8 S TIME=$E(DATE,9,$L(DATE))
"RTN","VPRUTILS",79,0)
 S Y=$E(DATE,1,4),M=$E(DATE,5,6),D=$E(DATE,7,8)
"RTN","VPRUTILS",80,0)
 K DATE
"RTN","VPRUTILS",81,0)
 S DATE=Y I M>0 S DATE=DATE_M S:D>0 DATE=DATE_D
"RTN","VPRUTILS",82,0)
 I $G(TIME)'="" S DATE=DATE_TIME
"RTN","VPRUTILS",83,0)
 Q DATE
"RTN","VPRUTILS",84,0)
 ;
"RTN","VPRUTILS",85,0)
FACILITY(X,Y) ; -- add facility info to array for JSON
"RTN","VPRUTILS",86,0)
 ;  X=STATION NUMBER^STATION NAME
"RTN","VPRUTILS",87,0)
 ;  Y=Variable array name
"RTN","VPRUTILS",88,0)
 ; >D FACILITY^VPRUTILS("500^CAMP MASTER","LAB")
"RTN","VPRUTILS",89,0)
 ;
"RTN","VPRUTILS",90,0)
 S @Y@("facilityCode")=$P(X,"^")
"RTN","VPRUTILS",91,0)
 S @Y@("facilityName")=$P(X,"^",2)
"RTN","VPRUTILS",92,0)
 Q
"VER")
8.0^22.0
"BLD",8071,6)
^2
**END**
**END**
