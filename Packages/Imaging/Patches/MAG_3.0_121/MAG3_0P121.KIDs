KIDS Distribution saved on Oct 20, 2011@07:46:45
VistA Imaging V3.0 - Patch 121 - 10/20/2011 07:46AM
**KIDS**:MAG*3.0*121^

**INSTALL NAME**
MAG*3.0*121
"BLD",3463,0)
MAG*3.0*121^IMAGING^0^3111020^y
"BLD",3463,1,0)
^^14^14^3111020^
"BLD",3463,1,1,0)
Version 3.0 Patch 121 - Watermarking
"BLD",3463,1,2,0)
 
"BLD",3463,1,3,0)
 
"BLD",3463,1,4,0)
Routines:
"BLD",3463,1,5,0)
MAGGSIA1    new value = 49156448
"BLD",3463,1,6,0)
MAGGSIU4    new value = 78099135
"BLD",3463,1,7,0)
MAGGSIU5    new value = 37701586
"BLD",3463,1,8,0)
MAGGSIUI    new value = 59096090
"BLD",3463,1,9,0)
MAGGSIV     new value = 57664823
"BLD",3463,1,10,0)
MAGIP121    new value = 7990393
"BLD",3463,1,11,0)
MAGQBUT4    new value = 92803022
"BLD",3463,1,12,0)
 
"BLD",3463,1,13,0)
Please note that routine MAGIP121 is deleted after the KIDS Build is
"BLD",3463,1,14,0)
installed.
"BLD",3463,4,0)
^9.64PA^2005.1^2
"BLD",3463,6.3)
V3.0p121Build2340_T2
"BLD",3463,4,2005,0)
2005
"BLD",3463,4,2005,2,0)
^9.641^2005^1
"BLD",3463,4,2005,2,2005,0)
IMAGE  (File-top level)
"BLD",3463,4,2005,2,2005,1,0)
^9.6411^115.3^3
"BLD",3463,4,2005,2,2005,1,115.1,0)
LINKED IMAGE
"BLD",3463,4,2005,2,2005,1,115.2,0)
LINKED TYPE
"BLD",3463,4,2005,2,2005,1,115.3,0)
LINKED DATE
"BLD",3463,4,2005,222)
y^y^p^^^^n^^n
"BLD",3463,4,2005,224)

"BLD",3463,4,2005.1,0)
2005.1
"BLD",3463,4,2005.1,2,0)
^9.641^2005.1^1
"BLD",3463,4,2005.1,2,2005.1,0)
IMAGE AUDIT  (File-top level)
"BLD",3463,4,2005.1,2,2005.1,1,0)
^9.6411^115.3^3
"BLD",3463,4,2005.1,2,2005.1,1,115.1,0)
LINKED IMAGE
"BLD",3463,4,2005.1,2,2005.1,1,115.2,0)
LINKED TYPE
"BLD",3463,4,2005.1,2,2005.1,1,115.3,0)
LINKED DATE
"BLD",3463,4,2005.1,222)
y^y^p^^^^n^^n
"BLD",3463,4,2005.1,224)

"BLD",3463,4,"APDD",2005.1,2005.1)

"BLD",3463,4,"APDD",2005,2005)

"BLD",3463,4,"APDD",2005,2005,115.1)

"BLD",3463,4,"APDD",2005,2005,115.2)

"BLD",3463,4,"APDD",2005,2005,115.3)

"BLD",3463,4,"APDD",2005.1,2005.1)

"BLD",3463,4,"APDD",2005.1,2005.1,115.1)

"BLD",3463,4,"APDD",2005.1,2005.1,115.2)

"BLD",3463,4,"APDD",2005.1,2005.1,115.3)

"BLD",3463,4,"B",2005,2005)

"BLD",3463,4,"B",2005.1,2005.1)

"BLD",3463,"ABNS",0)
^9.66A^^
"BLD",3463,"ABPKG")
n^n^G.IMAGING DEVELOPMENT TEAM@DOMAIN.EXT
"BLD",3463,"INID")
n^y^n
"BLD",3463,"INIT")
POS^MAGIP121
"BLD",3463,"KRN",0)
^9.67PA^8994^19
"BLD",3463,"KRN",.4,0)
.4
"BLD",3463,"KRN",.4,"NM",0)
^9.68A^^
"BLD",3463,"KRN",.401,0)
.401
"BLD",3463,"KRN",.401,"NM",0)
^9.68A^^
"BLD",3463,"KRN",.402,0)
.402
"BLD",3463,"KRN",.402,"NM",0)
^9.68A^^
"BLD",3463,"KRN",.403,0)
.403
"BLD",3463,"KRN",.5,0)
.5
"BLD",3463,"KRN",.84,0)
.84
"BLD",3463,"KRN",.84,"NM",0)
^9.68A^^
"BLD",3463,"KRN",3.6,0)
3.6
"BLD",3463,"KRN",3.8,0)
3.8
"BLD",3463,"KRN",9.2,0)
9.2
"BLD",3463,"KRN",9.8,0)
9.8
"BLD",3463,"KRN",9.8,"NM",0)
^9.68A^6^6
"BLD",3463,"KRN",9.8,"NM",1,0)
MAGGSIA1^^0^B49156448
"BLD",3463,"KRN",9.8,"NM",2,0)
MAGGSIU4^^0^B78099135
"BLD",3463,"KRN",9.8,"NM",3,0)
MAGGSIU5^^0^B37701586
"BLD",3463,"KRN",9.8,"NM",4,0)
MAGGSIUI^^0^B59096090
"BLD",3463,"KRN",9.8,"NM",5,0)
MAGGSIV^^0^B57664823
"BLD",3463,"KRN",9.8,"NM",6,0)
MAGQBUT4^^0^B92803022
"BLD",3463,"KRN",9.8,"NM","B","MAGGSIA1",1)

"BLD",3463,"KRN",9.8,"NM","B","MAGGSIU4",2)

"BLD",3463,"KRN",9.8,"NM","B","MAGGSIU5",3)

"BLD",3463,"KRN",9.8,"NM","B","MAGGSIUI",4)

"BLD",3463,"KRN",9.8,"NM","B","MAGGSIV",5)

"BLD",3463,"KRN",9.8,"NM","B","MAGQBUT4",6)

"BLD",3463,"KRN",19,0)
19
"BLD",3463,"KRN",19,"NM",0)
^9.68A^^
"BLD",3463,"KRN",19.1,0)
19.1
"BLD",3463,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",3463,"KRN",101,0)
101
"BLD",3463,"KRN",101,"NM",0)
^9.68A^^
"BLD",3463,"KRN",409.61,0)
409.61
"BLD",3463,"KRN",771,0)
771
"BLD",3463,"KRN",771,"NM",0)
^9.68A^^
"BLD",3463,"KRN",870,0)
870
"BLD",3463,"KRN",870,"NM",0)
^9.68A^^
"BLD",3463,"KRN",8989.51,0)
8989.51
"BLD",3463,"KRN",8989.51,"NM",0)
^9.68A^^
"BLD",3463,"KRN",8989.52,0)
8989.52
"BLD",3463,"KRN",8994,0)
8994
"BLD",3463,"KRN",8994,"NM",0)
^9.68A^^
"BLD",3463,"KRN","B",.4,.4)

"BLD",3463,"KRN","B",.401,.401)

"BLD",3463,"KRN","B",.402,.402)

"BLD",3463,"KRN","B",.403,.403)

"BLD",3463,"KRN","B",.5,.5)

"BLD",3463,"KRN","B",.84,.84)

"BLD",3463,"KRN","B",3.6,3.6)

"BLD",3463,"KRN","B",3.8,3.8)

"BLD",3463,"KRN","B",9.2,9.2)

"BLD",3463,"KRN","B",9.8,9.8)

"BLD",3463,"KRN","B",19,19)

"BLD",3463,"KRN","B",19.1,19.1)

"BLD",3463,"KRN","B",101,101)

"BLD",3463,"KRN","B",409.61,409.61)

"BLD",3463,"KRN","B",771,771)

"BLD",3463,"KRN","B",870,870)

"BLD",3463,"KRN","B",8989.51,8989.51)

"BLD",3463,"KRN","B",8989.52,8989.52)

"BLD",3463,"KRN","B",8994,8994)

"BLD",3463,"REQB",0)
^9.611^3^3
"BLD",3463,"REQB",1,0)
MAG*3.0*108^2
"BLD",3463,"REQB",2,0)
MAG*3.0*117^2
"BLD",3463,"REQB",3,0)
MAG*3.0*39^2
"BLD",3463,"REQB","B","MAG*3.0*108",1)

"BLD",3463,"REQB","B","MAG*3.0*117",2)

"BLD",3463,"REQB","B","MAG*3.0*39",3)

"FIA",2005)
IMAGE
"FIA",2005,0)
^MAG(2005,
"FIA",2005,0,0)
2005I
"FIA",2005,0,1)
y^y^p^^^^n^^n
"FIA",2005,0,10)

"FIA",2005,0,11)

"FIA",2005,0,"RLRO")

"FIA",2005,0,"VR")
3.0^MAG
"FIA",2005,2005)
1
"FIA",2005,2005,115.1)

"FIA",2005,2005,115.2)

"FIA",2005,2005,115.3)

"FIA",2005.1)
IMAGE AUDIT
"FIA",2005.1,0)
^MAG(2005.1,
"FIA",2005.1,0,0)
2005.1I
"FIA",2005.1,0,1)
y^y^p^^^^n^^n
"FIA",2005.1,0,10)

"FIA",2005.1,0,11)

"FIA",2005.1,0,"RLRO")

"FIA",2005.1,0,"VR")
3.0^MAG
"FIA",2005.1,2005.1)
1
"FIA",2005.1,2005.1,115.1)

"FIA",2005.1,2005.1,115.2)

"FIA",2005.1,2005.1,115.3)

"INIT")
POS^MAGIP121
"MBREQ")
0
"PKG",454,-1)
1^1
"PKG",454,0)
IMAGING^MAG^Imaging Release History
"PKG",454,22,0)
^9.49I^1^1
"PKG",454,22,1,0)
3.0^3020328^3020328^.5
"PKG",454,22,1,"PAH",1,0)
121^3111020^.5
"PKG",454,22,1,"PAH",1,1,0)
^9.49011^13^13^3111020
"PKG",454,22,1,"PAH",1,1,1,0)
Routines for Patch 121, Test Build 2.
"PKG",454,22,1,"PAH",1,1,2,0)
 
"PKG",454,22,1,"PAH",1,1,3,0)
Routines:
"PKG",454,22,1,"PAH",1,1,4,0)
MAGGSIA1    value = 15138596
"PKG",454,22,1,"PAH",1,1,5,0)
MAGGSIU4    value = 13298331
"PKG",454,22,1,"PAH",1,1,6,0)
MAGGSIU5    value = 8121967
"PKG",454,22,1,"PAH",1,1,7,0)
MAGGSIUI    value = 14513807
"PKG",454,22,1,"PAH",1,1,8,0)
MAGGSIV     value = 16267430
"PKG",454,22,1,"PAH",1,1,9,0)
MAGIP121    value = 3771935
"PKG",454,22,1,"PAH",1,1,10,0)
MAGQBUT4    value = 13069038
"PKG",454,22,1,"PAH",1,1,11,0)
 
"PKG",454,22,1,"PAH",1,1,12,0)
Please note that routine MAGIP121 is deleted after the KIDS Build is
"PKG",454,22,1,"PAH",1,1,13,0)
installed.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","MAGGSIA1")
0^1^B49156448
"RTN","MAGGSIA1",1,0)
MAGGSIA1 ;WOIFO/GEK/SG/NST - RPC Call to Add Image File entry ; 01 Nov 2010 2:08 PM
"RTN","MAGGSIA1",2,0)
 ;;3.0;IMAGING;**7,8,85,59,93,106,117,121**;Mar 19, 2002;Build 2340;Oct 20, 2011
"RTN","MAGGSIA1",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGSIA1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIA1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIA1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIA1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIA1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIA1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIA1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIA1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIA1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIA1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIA1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIA1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIA1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIA1",17,0)
 ;;
"RTN","MAGGSIA1",18,0)
 Q
"RTN","MAGGSIA1",19,0)
PRE(MAGERR,MAGGFDA,MAGGRP,MAGGDRV,MAGREF) ;
"RTN","MAGGSIA1",20,0)
 ;  Check on some possible problems: required fields etc.
"RTN","MAGGSIA1",21,0)
 ;  Object Type and (Patient, or Short Desc) Required.
"RTN","MAGGSIA1",22,0)
 N MAGRSLT,X,Z
"RTN","MAGGSIA1",23,0)
 ; Patch 106: PRE^MAGGSIA1 is called by Import API only so
"RTN","MAGGSIA1",24,0)
 ; if CAPTURE APPLICATION field (#8.1) is not set we set it to "I"
"RTN","MAGGSIA1",25,0)
 ; For VI Capture and DICOM Gateway the value of #8.1 is set
"RTN","MAGGSIA1",26,0)
 ; in ADD^MAGGTIA 
"RTN","MAGGSIA1",27,0)
 I '$D(MAGGFDA(2005,"+1,",8.1)) S MAGGFDA(2005,"+1,",8.1)="I"
"RTN","MAGGSIA1",28,0)
 ;
"RTN","MAGGSIA1",29,0)
 D CHKRSND ; Check if this is a Rescinded Import.
"RTN","MAGGSIA1",30,0)
 S:$G(MAGGFDA(2005,"+1,",113))="" MAGGFDA(2005,"+1,",113)=1  ; Patch 117 Set STATUS (#113) to Viewable (1)
"RTN","MAGGSIA1",31,0)
 I '$D(MAGGFDA(2005,"+1,",3)) D OBJTYPE
"RTN","MAGGSIA1",32,0)
 I '$D(MAGGFDA(2005,"+1,",3)) S MAGERR="0^Need an Object Type " Q
"RTN","MAGGSIA1",33,0)
 I '$D(MAGGFDA(2005,"+1,",5)),'$D(MAGGFDA(2005,"+1,",10)) D  Q
"RTN","MAGGSIA1",34,0)
 . S MAGERR="0^Need Patient or Short Desc.  Operation CANCELED "
"RTN","MAGGSIA1",35,0)
 ; IF no Procedure text we'll give it some so crossref will set.
"RTN","MAGGSIA1",36,0)
 D PATCHK(.MAGRSLT) I 'MAGRSLT S MAGERR=MAGRSLT Q
"RTN","MAGGSIA1",37,0)
 ; Patch 8 IAPI We Create IXCLS (#41 CLASS) and  IXPKG (#40 Package) if TYPE is in Data.
"RTN","MAGGSIA1",38,0)
 ; But we are not making TYPE required yet for backward compatibility.
"RTN","MAGGSIA1",39,0)
 I $D(MAGGFDA(2005,"+1,",42)) D
"RTN","MAGGSIA1",40,0)
 . I $$GET1^DIQ(2005.83,MAGGFDA(2005,"+1,",42),2,"E")="INACTIVE" D  S MAGRY=MAGERR Q
"RTN","MAGGSIA1",41,0)
 . . S MAGERR="0^Index Type: "_$$GET1^DIQ(2005.83,MAGGFDA(2005,"+1,",42),.01,"E")_"is INACTIVE"
"RTN","MAGGSIA1",42,0)
 . I '$D(MAGGFDA(2005,"+1,",41)) D MAKECLAS^MAGGSIU1 I $L(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGSIA1",43,0)
 . I ($D(MAGGFDA(2005,"+1,",16)))&($$ISTYPADM(MAGGFDA(2005,"+1,",42))) D  S MAGRY=MAGERR Q
"RTN","MAGGSIA1",44,0)
 . . S MAGERR="0^Can't have an ADMIN TYPE with Clinical Image."
"RTN","MAGGSIA1",45,0)
 . I '$D(MAGGFDA(2005,"+1,",40)) D MAKEPKG^MAGGSIU1 I $L(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGSIA1",46,0)
 . I '$D(MAGGFDA(2005,"+1,",6)) D MAKEPROC^MAGGSIU1 I $L(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGSIA1",47,0)
 . I '$D(MAGGFDA(2005,"+1,",45)) D MAKEORIG^MAGGSIU1 I $L(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGSIA1",48,0)
 . Q
"RTN","MAGGSIA1",49,0)
 ;
"RTN","MAGGSIA1",50,0)
 I '$D(MAGGFDA(2005,"+1,",6)) D PROCTEXT
"RTN","MAGGSIA1",51,0)
 ;
"RTN","MAGGSIA1",52,0)
 ; If no Procedure/Exam Date/Time we'll give it DocDT, or NOW
"RTN","MAGGSIA1",53,0)
 I '$D(MAGGFDA(2005,"+1,",15)) D
"RTN","MAGGSIA1",54,0)
 . I $D(MAGGFDA(2005,"+1,",110)) S MAGGFDA(2005,"+1,",15)=MAGGFDA(2005,"+1,",110) Q
"RTN","MAGGSIA1",55,0)
 . S MAGGFDA(2005,"+1,",15)=$E($$NOW^XLFDT,1,12)
"RTN","MAGGSIA1",56,0)
 ; DateTime image saved.
"RTN","MAGGSIA1",57,0)
 I '$D(MAGGFDA(2005,"+1,",7)) S MAGGFDA(2005,"+1,",7)=$E($$NOW^XLFDT,1,12)
"RTN","MAGGSIA1",58,0)
 ; Short Description
"RTN","MAGGSIA1",59,0)
 ;I '$D(MAGGFDA(2005,"+1,",10)) S MAGGFDA(2005,"+1,",10)=$$MAKENAME^MAGGSIU1(.MAGGFDA)
"RTN","MAGGSIA1",60,0)
 I '$D(MAGGFDA(2005,"+1,",10)) S MAGGFDA(2005,"+1,",10)=$G(MAGGFDA(2005,"+1,",6))
"RTN","MAGGSIA1",61,0)
 ; Name (.01)
"RTN","MAGGSIA1",62,0)
 I '$D(MAGGFDA(2005,"+1,",.01)) S MAGGFDA(2005,"+1,",.01)=$$MAKENAME^MAGGSIU1(.MAGGFDA)
"RTN","MAGGSIA1",63,0)
 I '$D(MAGGFDA(2005,"+1,",8)) S MAGGFDA(2005,"+1,",8)=$G(DUZ)
"RTN","MAGGSIA1",64,0)
 ; Acquisition Site, Use it to tell where to save the file.
"RTN","MAGGSIA1",65,0)
 I $D(MAGACT("ACQS")) D
"RTN","MAGGSIA1",66,0)
 . ; Patch 8 Have to modify: Field 105 (Acquisition Site) is NOW Field .05
"RTN","MAGGSIA1",67,0)
 . I $P(MAGACT("ACQS"),";")]"" S MAGGFDA(2005,"+1,",.05)=$P(MAGACT("ACQS"),";")
"RTN","MAGGSIA1",68,0)
 ; Only get drive:dir if not a group
"RTN","MAGGSIA1",69,0)
 I 'MAGGRP D  I $L(MAGERR) Q
"RTN","MAGGSIA1",70,0)
 . ; The value of the Action Code "WRITE^value" OVERRIDES any Write Location
"RTN","MAGGSIA1",71,0)
 . ; sent as field # 2 in the input array. (The only value we check for is "PACS" from peter's code)
"RTN","MAGGSIA1",72,0)
 . S X=$S($D(MAGACT("WRITE")):MAGACT("WRITE"),$D(MAGGFDA(2005,"+1,",2)):MAGGFDA(2005,"+1,",2),1:"")
"RTN","MAGGSIA1",73,0)
 . ;P85 Send ACQS as second Param. $$DRIVE will use ACQS If X = ""
"RTN","MAGGSIA1",74,0)
 . ;
"RTN","MAGGSIA1",75,0)
 . S Z=$$DRIVE^MAGGTU1(X,$G(MAGGFDA(2005,"+1,",.05))) ;Drv:Dir to Write
"RTN","MAGGSIA1",76,0)
 . I 'Z S MAGERR=Z Q
"RTN","MAGGSIA1",77,0)
 . S MAGGDRV=$P(Z,U,2)
"RTN","MAGGSIA1",78,0)
 . S MAGGFDA(2005,"+1,",2)=+Z               ;Disk & Vol magnetic
"RTN","MAGGSIA1",79,0)
 . ; if a big file is being made on workstation, put NetWork Location
"RTN","MAGGSIA1",80,0)
 . ; pointer in the BIG NETWORK LOCATION field.
"RTN","MAGGSIA1",81,0)
 . ; (BIG files default to same Network Location as FullRes (or PACS))
"RTN","MAGGSIA1",82,0)
 . I $G(MAGACT("BIG"))=1 S MAGGFDA(2005,"+1,",102)=+Z
"RTN","MAGGSIA1",83,0)
 . S MAGREF=+Z ; save network location ien for $$DIRHASH in ^MAGGSIA1
"RTN","MAGGSIA1",84,0)
 . I $G(MAGACT("ABS"))="STUFFONLY" S MAGGFDA(2005,"+1,",2.1)=+Z
"RTN","MAGGSIA1",85,0)
 ;
"RTN","MAGGSIA1",86,0)
 I $D(MAGACT("ACQL")) S MAGGFDA(2005,"+1,",101)=MAGACT("ACQL")
"RTN","MAGGSIA1",87,0)
 ; HERE we are putting PRE Processing for the Import API action codes.
"RTN","MAGGSIA1",88,0)
 ; "ACQD,ACQS" If Acquisition device entry doesn't exist, create it.
"RTN","MAGGSIA1",89,0)
 I $D(MAGACT("ACQD")) D
"RTN","MAGGSIA1",90,0)
 . ; IF Value is a pointer to the ACQ DEVICE File Quit.  If it's invalid then UPDATE will catch it.
"RTN","MAGGSIA1",91,0)
 . I (+MAGACT("ACQD")=MAGACT("ACQD")) S MAGGFDA(2005,"+1,",107)=MAGACT("ACQD") Q
"RTN","MAGGSIA1",92,0)
 . I $D(^MAG(2006.04,"B",MAGACT("ACQD"))) D  Q
"RTN","MAGGSIA1",93,0)
 . . ; IF Already exists, add it to the FDA
"RTN","MAGGSIA1",94,0)
 . . S MAGGFDA(2005,"+1,",107)=$O(^MAG(2006.04,"B",MAGACT("ACQD"),""))
"RTN","MAGGSIA1",95,0)
 . . ; What do we do with the Acquisition Site. IF Acq Dev already exists. ? 
"RTN","MAGGSIA1",96,0)
 . . ; ??
"RTN","MAGGSIA1",97,0)
 . ; IF it doesn't exist, create it, and add it's ien to the image entry 
"RTN","MAGGSIA1",98,0)
 . N MAGDFDA,MAGDIEN,MAGDXE
"RTN","MAGGSIA1",99,0)
 . S MAGDFDA(2006.04,"+1,",.01)=MAGACT("ACQD")
"RTN","MAGGSIA1",100,0)
 . S MAGDFDA(2006.04,"+1,",1)=$S($D(MAGACT("ACQS")):$P(MAGACT("ACQS"),";"),1:$G(MAGGFDA(2005,"+1,",.05)))
"RTN","MAGGSIA1",101,0)
 . S MAGDFDA(2006.04,"+1,",2)=$S($D(MAGACT("ACQL")):MAGACT("ACQL"),$D(MAGGFDA(2005,"+1,",101)):MAGGFDA(2005,"+1,",101),1:$P($G(MAGACT("ACQS")),";",2))
"RTN","MAGGSIA1",102,0)
 . ; ACQS was a 2 ';' piece value with Acq Location (HOSPITAL LOCATION) as 2nd piece
"RTN","MAGGSIA1",103,0)
 . ;   now it is sent as it's own value in ACQL
"RTN","MAGGSIA1",104,0)
 . D UPDATE^DIE("","MAGDFDA","MAGDIEN","MAGDXE")
"RTN","MAGGSIA1",105,0)
 . S MAGGFDA(2005,"+1,",107)=MAGDIEN(1)
"RTN","MAGGSIA1",106,0)
 ;~~~ Delete this comment and the following line of code when
"RTN","MAGGSIA1",107,0)
 ;    the IMAGE AUDIT file (#2005.1) is completely eliminated.
"RTN","MAGGSIA1",108,0)
 ;    If the last IEN in the IMAGE AUDIT file is greater than the
"RTN","MAGGSIA1",109,0)
 ;~~~ last IEN in the IMAGE file, update the IMAGE file header.
"RTN","MAGGSIA1",110,0)
 I ($O(^MAG(2005,"A"),-1)<$O(^MAG(2005.1,"A"),-1)) S $P(^MAG(2005,0),U,3)=$O(^MAG(2005.1,"A"),-1)
"RTN","MAGGSIA1",111,0)
 ;
"RTN","MAGGSIA1",112,0)
 Q
"RTN","MAGGSIA1",113,0)
PATCHK(MAGR) ; This uses the FDA Array and checks the Imaging Patient against the Procedure patient
"RTN","MAGGSIA1",114,0)
 ;
"RTN","MAGGSIA1",115,0)
 N MAGDFN,PX,PXDA,MAGY
"RTN","MAGGSIA1",116,0)
 S PX=$G(MAGGFDA(2005,"+1,",16))
"RTN","MAGGSIA1",117,0)
 S PXDA=$G(MAGGFDA(2005,"+1,",17))
"RTN","MAGGSIA1",118,0)
 I 'PX S MAGR=1 Q  ; This is a category, or an Image of a group (no parent pointer)
"RTN","MAGGSIA1",119,0)
 S MAGDFN=MAGGFDA(2005,"+1,",5)
"RTN","MAGGSIA1",120,0)
 I (PX=8925) D  Q
"RTN","MAGGSIA1",121,0)
 . I '$D(^TIU(8925,PXDA)) S MAGR="0^Invalid TIU Entry Number: "_PXDA Q
"RTN","MAGGSIA1",122,0)
 . D DATA^MAGGNTI(.MAGY,PXDA)
"RTN","MAGGSIA1",123,0)
 . I '(MAGDFN=$P(MAGY,U,4)) S MAGR="0^Procedure and Imaging patients don't match." Q
"RTN","MAGGSIA1",124,0)
 . S MAGR=1
"RTN","MAGGSIA1",125,0)
 Q
"RTN","MAGGSIA1",126,0)
OBJTYPE ; This call uses the EXT and computes an Object Type
"RTN","MAGGSIA1",127,0)
 N MTYPE
"RTN","MAGGSIA1",128,0)
 I '$L($G(MAGACT("EXT"))) Q
"RTN","MAGGSIA1",129,0)
 S MTYPE=$O(^MAG(2005.02,"AD",MAGACT("EXT"),""))
"RTN","MAGGSIA1",130,0)
 ;I 'MTYPE Q
"RTN","MAGGSIA1",131,0)
 ;TODO : Answer question, do we want to have a default Image type ?
"RTN","MAGGSIA1",132,0)
 I 'MTYPE S MTYPE=1
"RTN","MAGGSIA1",133,0)
 S MAGGFDA(2005,"+1,",3)=MTYPE
"RTN","MAGGSIA1",134,0)
 Q
"RTN","MAGGSIA1",135,0)
ISTYPADM(TYPE) ; Returns 1 if this is an Admin Type
"RTN","MAGGSIA1",136,0)
 N CL
"RTN","MAGGSIA1",137,0)
 I '$G(TYPE) Q 0
"RTN","MAGGSIA1",138,0)
 S CL=$$GET1^DIQ(2005.83,TYPE,1,"E")
"RTN","MAGGSIA1",139,0)
 Q $S($E(CL,1,5)="ADMIN":1,1:0)
"RTN","MAGGSIA1",140,0)
PROCTEXT ;This call uses flds 16 and 17 to compute fld #6 PROCEDURE TEXT [8F]
"RTN","MAGGSIA1",141,0)
 ; We are here because fld #6 PROCEDURE [8F] is null.
"RTN","MAGGSIA1",142,0)
 ; If a pointer to a package is in the data, (flds 16 and 17)
"RTN","MAGGSIA1",143,0)
 ;  get fld #6 from that , if not then treat it as an UNASSIGNED image 
"RTN","MAGGSIA1",144,0)
 ; i.e. Category UNASSIGNED.
"RTN","MAGGSIA1",145,0)
 N MAGYPX,PARENT,PARIEN,PXDESC
"RTN","MAGGSIA1",146,0)
 S PARENT=$G(MAGGFDA(2005,"+1,",16))
"RTN","MAGGSIA1",147,0)
 S PARIEN=$G(MAGGFDA(2005,"+1,",17))
"RTN","MAGGSIA1",148,0)
 ;
"RTN","MAGGSIA1",149,0)
 I (PARENT=8925),(PARIEN]"") D  Q
"RTN","MAGGSIA1",150,0)
 . D DATA^MAGGNTI(.MAGYPX,PARIEN)
"RTN","MAGGSIA1",151,0)
 . S MAGGFDA(2005,"+1,",6)=$P(MAGYPX,U,2)
"RTN","MAGGSIA1",152,0)
 ;TODO; create calls to get default procedure desc for all specialties
"RTN","MAGGSIA1",153,0)
 ; AND default to NONE if a TYPE and no PARENT data File (fld 16)
"RTN","MAGGSIA1",154,0)
 ; If a Parent pointer exists, and it isn't TIU, for now set "NO Description"
"RTN","MAGGSIA1",155,0)
 I PARENT]"" S MAGGFDA(2005,"+1,",6)="No Description" Q
"RTN","MAGGSIA1",156,0)
 ;
"RTN","MAGGSIA1",157,0)
 ; Do we have a pointer to a MAG DESCRIPTIVE CATEGORY
"RTN","MAGGSIA1",158,0)
 I ($G(MAGGFDA(2005,"+1,",100))]"") D  Q
"RTN","MAGGSIA1",159,0)
 . S MAGGFDA(2005,"+1,",6)=$P(^MAG(2005.81,MAGGFDA(2005,"+1,",100),0),U,1)
"RTN","MAGGSIA1",160,0)
 ; 
"RTN","MAGGSIA1",161,0)
 ; If a new child of a Group, use that Proc Desc
"RTN","MAGGSIA1",162,0)
 I $G(MAGGFDA(2005,"+1,",14))]"" D  Q
"RTN","MAGGSIA1",163,0)
 . S MAGGFDA(2005,"+1,",6)=$P(^MAG(2005,MAGGFDA(2005,"+1,",14),0),U,8)
"RTN","MAGGSIA1",164,0)
 ;
"RTN","MAGGSIA1",165,0)
 ; Parent="", and no Category pointer, then we Call it UNASSIGNED
"RTN","MAGGSIA1",166,0)
 S MAGGFDA(2005,"+1,",100)=$O(^MAG(2005.81,"B","UNASSIGNED",""))
"RTN","MAGGSIA1",167,0)
 S MAGGFDA(2005,"+1,",6)="UNASSIGNED"
"RTN","MAGGSIA1",168,0)
 Q
"RTN","MAGGSIA1",169,0)
 ; ----------   CHKRSND ----------
"RTN","MAGGSIA1",170,0)
 ; Import API Delphi Component/OCX only allows certain fields.  To get 
"RTN","MAGGSIA1",171,0)
 ; around that limitation, we sometimes need to get data from the 
"RTN","MAGGSIA1",172,0)
 ; IMAGING WINDOWS SESSION File. (#2006.82)
"RTN","MAGGSIA1",173,0)
 ;  
"RTN","MAGGSIA1",174,0)
 ;   Here we add data to MAGGFDA from fields in Session file 
"RTN","MAGGSIA1",175,0)
 ;   that didn't make it thought the Delphi Component/OCX
"RTN","MAGGSIA1",176,0)
CHKRSND ;
"RTN","MAGGSIA1",177,0)
 N IDATA,TRKID
"RTN","MAGGSIA1",178,0)
 S TRKID=$G(MAGGFDA(2005,"+1,",108)) Q:'$L(TRKID)
"RTN","MAGGSIA1",179,0)
 D GETIAPID^MAGGSIUI(.IDATA,TRKID)
"RTN","MAGGSIA1",180,0)
 ; 
"RTN","MAGGSIA1",181,0)
 ; PROCEDURE #6
"RTN","MAGGSIA1",182,0)
 ; CREATION DATE #110
"RTN","MAGGSIA1",183,0)
 ; LINKED IMAGE  #115.1
"RTN","MAGGSIA1",184,0)
 ; LINKED TYPE   #115.2
"RTN","MAGGSIA1",185,0)
 ; LINKED DATE   #115.3  (DATE TIME)
"RTN","MAGGSIA1",186,0)
 ; 
"RTN","MAGGSIA1",187,0)
 ;  Here we can add other fields to MAGGFDA, that aren't passed through
"RTN","MAGGSIA1",188,0)
 ;  the delphi control, but are stored in the Session file for the Import.
"RTN","MAGGSIA1",189,0)
 ; If not rescind action, then QUIT
"RTN","MAGGSIA1",190,0)
 I $G(IDATA("ACTION"))'="RESCIND" Q
"RTN","MAGGSIA1",191,0)
 ; get the LINKED IMAGE and associated fields #115*
"RTN","MAGGSIA1",192,0)
 ; All data was already validated before added to session file.
"RTN","MAGGSIA1",193,0)
 I $G(IDATA(6))'="" S MAGGFDA(2005,"+1,",6)=$G(IDATA(6))
"RTN","MAGGSIA1",194,0)
 I $G(IDATA(110))'="" S MAGGFDA(2005,"+1,",110)=$G(IDATA(110))
"RTN","MAGGSIA1",195,0)
 I $G(IDATA(115.1))'="" S MAGGFDA(2005,"+1,",115.1)=$G(IDATA(115.1))
"RTN","MAGGSIA1",196,0)
 I $G(IDATA(115.2))'="" S MAGGFDA(2005,"+1,",115.2)=$G(IDATA(115.2))
"RTN","MAGGSIA1",197,0)
 I $G(IDATA(115.3))'="" S MAGGFDA(2005,"+1,",115.3)=$G(IDATA(115.3))
"RTN","MAGGSIA1",198,0)
 Q
"RTN","MAGGSIU4")
0^2^B78099135
"RTN","MAGGSIU4",1,0)
MAGGSIU4 ;WOIFO/NST/GEK - Utilities for Image Import API ; 22 Feb 2011 12:28 PM
"RTN","MAGGSIU4",2,0)
 ;;3.0;IMAGING;**121**;Mar 19, 2002;Build 2340;Oct 20, 2011
"RTN","MAGGSIU4",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGSIU4",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIU4",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIU4",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIU4",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIU4",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIU4",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIU4",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIU4",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIU4",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIU4",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIU4",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIU4",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIU4",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIU4",17,0)
 ;;
"RTN","MAGGSIU4",18,0)
 Q
"RTN","MAGGSIU4",19,0)
 ; ----- Rescind images attached to a TIU note
"RTN","MAGGSIU4",20,0)
 ; RESCIND(MAGRY,TIUDA)
"RTN","MAGGSIU4",21,0)
 ;
"RTN","MAGGSIU4",22,0)
 ; Input Parameters
"RTN","MAGGSIU4",23,0)
 ; ================
"RTN","MAGGSIU4",24,0)
 ; TIUDA = IEN of TIU note in TIU DOCUMENT file (#8925) 
"RTN","MAGGSIU4",25,0)
 ;           
"RTN","MAGGSIU4",26,0)
 ; Return Values
"RTN","MAGGSIU4",27,0)
 ; =============
"RTN","MAGGSIU4",28,0)
 ; if error found during execution
"RTN","MAGGSIU4",29,0)
 ;   MAGRY(0) = 0^Error message"
"RTN","MAGGSIU4",30,0)
 ;   MAGRU(1..N) = messages describing the Error.
"RTN","MAGGSIU4",31,0)
 ;   
"RTN","MAGGSIU4",32,0)
 ; if success
"RTN","MAGGSIU4",33,0)
 ;   MAGRY(0) = 1^Success
"RTN","MAGGSIU4",34,0)
 ;   .. for each image queued we have 3 lines of info.
"RTN","MAGGSIU4",35,0)
 ;   MAGRY(x)   = Image(1..n): Tracking ID: TRKID  
"RTN","MAGGSIU4",36,0)
 ;   MAGRY(x+1) = Image(1..n): Queue: QUENUMBER
"RTN","MAGGSIU4",37,0)
 ;   MAGRY(x+2) = Image(1..n): Image: MAGDA
"RTN","MAGGSIU4",38,0)
 ;   
"RTN","MAGGSIU4",39,0)
 ; if First image success, and subsequent image problem we Return
"RTN","MAGGSIU4",40,0)
 ;   MAGRY(0) =  2^Warning message
"RTN","MAGGSIU4",41,0)
 ;   for each successfully Queued image queued we have 3 lines of info as above
"RTN","MAGGSIU4",42,0)
 ;   for any image that was a problem deleting (unlikely) we have MAGDA and 
"RTN","MAGGSIU4",43,0)
 ;   error messages.  The Image is changed to status of "Needs Review", 
"RTN","MAGGSIU4",44,0)
 ;     so it is blocked from view.
"RTN","MAGGSIU4",45,0)
 ;   MAGRY(x) = Image(n): Image: MAGDA
"RTN","MAGGSIU4",46,0)
 ;   MAGRY(x+1) = 
"RTN","MAGGSIU4",47,0)
 ;   
"RTN","MAGGSIU4",48,0)
 ;   
"RTN","MAGGSIU4",49,0)
 ;   Tracking ID is a field in each file: 
"RTN","MAGGSIU4",50,0)
 ;      IMAGE File (#2005) (Field #108) (index "ATRKID")
"RTN","MAGGSIU4",51,0)
 ;      IMAGING WINDOWS SESSION File (#2006.82) (Field #8) (index "E")
"RTN","MAGGSIU4",52,0)
 ;      ACQUISITION SESSION FILE File(#2006.041)(Field #.02) (index "C")
"RTN","MAGGSIU4",53,0)
 ;
"RTN","MAGGSIU4",54,0)
RESCIND(MAGRY,TIUDA) ; Main entry point to rescind images attached to a TIU note
"RTN","MAGGSIU4",55,0)
 N IMGLIST,MAGA,QUECT
"RTN","MAGGSIU4",56,0)
 N MAGIEN,REASON,REASDA,MERR
"RTN","MAGGSIU4",57,0)
 N I,I2,S,ICT,N0,N2,N40,MPOS
"RTN","MAGGSIU4",58,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGSIU4",59,0)
 K MAGRY
"RTN","MAGGSIU4",60,0)
 ; check TIUDA
"RTN","MAGGSIU4",61,0)
 I '$G(TIUDA) S MAGRY(0)="0^TIU Note is not valid: "_TIUDA Q
"RTN","MAGGSIU4",62,0)
 I '$D(^TIU(8925,TIUDA)) S MAGRY(0)="0^TIU Note does not exist: "_TIUDA Q
"RTN","MAGGSIU4",63,0)
 ;
"RTN","MAGGSIU4",64,0)
 ; Does Note have any Images.  Quit if No.
"RTN","MAGGSIU4",65,0)
 D GETILST^TIUSRVPL(.MAGA,TIUDA)
"RTN","MAGGSIU4",66,0)
 I '$D(MAGA) S MAGRY(0)="1^No images found for TIU Note: "_TIUDA  Q  ; no images found 
"RTN","MAGGSIU4",67,0)
 ;
"RTN","MAGGSIU4",68,0)
 ;  Set the Reason text and Reason DA
"RTN","MAGGSIU4",69,0)
 S REASON="Rescinded TIU Note"
"RTN","MAGGSIU4",70,0)
 S REASDA=$O(^MAG(2005.88,"B",REASON,""))
"RTN","MAGGSIU4",71,0)
 ;
"RTN","MAGGSIU4",72,0)
 S MAGRY(0)="0^Processing Rescind request..."
"RTN","MAGGSIU4",73,0)
 D IMAGES^MAGGNTI(.IMGLIST,TIUDA)  ; Get a list with images linked to TIU note
"RTN","MAGGSIU4",74,0)
 ; format of result to IMAGES:  
"RTN","MAGGSIU4",75,0)
 ; XX(1)="B2^20175^<FULL UNC PATCH to Full Res Image>^<FULL UNC PATCH to Abstract>
"RTN","MAGGSIU4",76,0)
 ;  we know there are images (from above) so a '0^' means an error in this situation.
"RTN","MAGGSIU4",77,0)
 I '$P(IMGLIST(0),"^",1) D  Q  ;
"RTN","MAGGSIU4",78,0)
 . S MAGRY(0)="0^Error building Image list for TIU Note: "_TIUDA
"RTN","MAGGSIU4",79,0)
 . S MAGRY($O(MAGRY(""),-1)+1)=IMGLIST(0)
"RTN","MAGGSIU4",80,0)
 . D MAILERR("",TIUDA,.MAGRY) Q
"RTN","MAGGSIU4",81,0)
 . Q
"RTN","MAGGSIU4",82,0)
 ;
"RTN","MAGGSIU4",83,0)
 S I=0,ICT=0,QUECT=0,MERR=""
"RTN","MAGGSIU4",84,0)
 ; we are setting an Import Queue for each image attached to the Note.
"RTN","MAGGSIU4",85,0)
 F  S I=$O(IMGLIST(I)) Q:I=""  D  I $L(MERR) S MAGRY(0)=MERR Q
"RTN","MAGGSIU4",86,0)
 . S ICT=ICT+1 ; Image Counter.
"RTN","MAGGSIU4",87,0)
 . ; example: (1)="B2^19412^c:\image\Q...\QRT00000019412.JPG^c:\image\Q...\QRT00000019412.ABS
"RTN","MAGGSIU4",88,0)
 . S MAGIEN=$P(IMGLIST(I),U,2)
"RTN","MAGGSIU4",89,0)
 . K MAGRY2
"RTN","MAGGSIU4",90,0)
 . D RSND1^MAGGSIU5(.MAGRY2,MAGIEN,TIUDA,REASON)
"RTN","MAGGSIU4",91,0)
 . ;
"RTN","MAGGSIU4",92,0)
 . ; We need to build MAGRY with MAGRY2 from each image.
"RTN","MAGGSIU4",93,0)
 . S I2="" F  S I2=$O(MAGRY2(I2)) Q:(I2="")  D
"RTN","MAGGSIU4",94,0)
 . . S MAGRY($O(MAGRY(""),-1)+1)="Image("_ICT_") "_MAGRY2(I2)
"RTN","MAGGSIU4",95,0)
 . . Q
"RTN","MAGGSIU4",96,0)
 . ;   add the Image IEN to Result Array.
"RTN","MAGGSIU4",97,0)
 . S MAGRY($O(MAGRY(""),-1)+1)="Image("_ICT_") IEN: "_MAGIEN
"RTN","MAGGSIU4",98,0)
 . ; if success MAGRY2(0)= QueNumber ^Data has been Queued.
"RTN","MAGGSIU4",99,0)
 . I MAGRY2(0)>0 S QUECT=QUECT+1
"RTN","MAGGSIU4",100,0)
 . I 'MAGRY2(0) D  ;
"RTN","MAGGSIU4",101,0)
 . . ; If Error after calling RSND1, then if Image ISN'T Deleted, we
"RTN","MAGGSIU4",102,0)
 . . ; want to change it's status to 'Needs Review' to block it from view.
"RTN","MAGGSIU4",103,0)
 . . D SETSTAT(MAGIEN,11,REASDA)
"RTN","MAGGSIU4",104,0)
 . . ;
"RTN","MAGGSIU4",105,0)
 . . ; if this is first image, we Quit the process.
"RTN","MAGGSIU4",106,0)
 . . I ICT=1 S MERR=MAGRY2(0) Q
"RTN","MAGGSIU4",107,0)
 . . ; if this is image other than first, we return Warning.
"RTN","MAGGSIU4",108,0)
 . . S MAGRY(0)="2^Warning while creating Import Queue"
"RTN","MAGGSIU4",109,0)
 . . Q
"RTN","MAGGSIU4",110,0)
 . Q
"RTN","MAGGSIU4",111,0)
 ; add TIUDA to the result Array.
"RTN","MAGGSIU4",112,0)
 S MAGRY($O(MAGRY(""),-1)+1)="TIU Note: "_TIUDA
"RTN","MAGGSIU4",113,0)
 ; Call MAILERR if needed  i.e if  MAGRY(0)=0 OR 2  .
"RTN","MAGGSIU4",114,0)
 I $L(MERR)!(+MAGRY(0)=2) D MAILERR("","",.MAGRY) Q
"RTN","MAGGSIU4",115,0)
 ;  Here.  Image has been queued.   If Group, check for QUECT not equal Image Count.
"RTN","MAGGSIU4",116,0)
 S MPOS="" I QUECT>1 S MPOS="s"
"RTN","MAGGSIU4",117,0)
 S MAGRY(0)="1^"_QUECT_" Image"_MPOS_" Queued for RESCINDED watermark"
"RTN","MAGGSIU4",118,0)
 ; if only some of images queued for watermark, change status in 
"RTN","MAGGSIU4",119,0)
 ; (0) node to warning '2' and add a line of text.
"RTN","MAGGSIU4",120,0)
 I QUECT<ICT D
"RTN","MAGGSIU4",121,0)
 . S $P(MAGRY(0),"^",1)="2"
"RTN","MAGGSIU4",122,0)
 . S MAGRY($O(MAGRY(""),-1)+1)="Warning : Only "_QUECT_" of "_ICT_" images were Queued for Watermark"
"RTN","MAGGSIU4",123,0)
 Q
"RTN","MAGGSIU4",124,0)
 ;
"RTN","MAGGSIU4",125,0)
 ; --------  TRKID()   Returns Unique Tracking ID for Import API --------
"RTN","MAGGSIU4",126,0)
 ;   Imaging is now a 'user' of the Import API.  This API call will 
"RTN","MAGGSIU4",127,0)
 ;   guarantee a unique Imaging Tracking ID number for Rescind "MAGRSND"
"RTN","MAGGSIU4",128,0)
 ;   to be used when Imaging Calls the Import API.
"RTN","MAGGSIU4",129,0)
 ;  ; e.g. MAGRSND;3110222.080459.344
"RTN","MAGGSIU4",130,0)
TRKID() ; Returns a new unique Import API tracking id
"RTN","MAGGSIU4",131,0)
 N TKI,EDT
"RTN","MAGGSIU4",132,0)
 ; Set the required 0 node of XTMP.  
"RTN","MAGGSIU4",133,0)
 S EDT=$$FMADD^XLFDT(DT,30)
"RTN","MAGGSIU4",134,0)
 I $P($G(^XTMP("MAGTRKID",0)),"^",1)<EDT S $P(^XTMP("MAGTRKID",0),"^",1,2)=EDT_"^"_DT
"RTN","MAGGSIU4",135,0)
 ;
"RTN","MAGGSIU4",136,0)
 ; Need to use LOCKs and daily counter to assure we have unique TRKID
"RTN","MAGGSIU4",137,0)
 ; Lock it, increment today's counter, use increment, update counter and UnLock it for next.  
"RTN","MAGGSIU4",138,0)
 L +^XTMP("MAGTRKID"):4 E  Q 0
"RTN","MAGGSIU4",139,0)
 S TKI=$G(^XTMP("MAGTRKID",DT))+1
"RTN","MAGGSIU4",140,0)
 S ^XTMP("MAGTRKID",DT)=TKI
"RTN","MAGGSIU4",141,0)
 L -^XTMP("MAGTRKID")
"RTN","MAGGSIU4",142,0)
 ;
"RTN","MAGGSIU4",143,0)
 Q "MAGRSND;"_$$NOW^XLFDT_"."_TKI
"RTN","MAGGSIU4",144,0)
 ;
"RTN","MAGGSIU4",145,0)
 ;
"RTN","MAGGSIU4",146,0)
 ; --------  STATCB(STATARR) -----------
"RTN","MAGGSIU4",147,0)
 ;   TAG^ROUTINE Receives the status array of the Import Process.
"RTN","MAGGSIU4",148,0)
 ;   This is the Imaging Callback function required by the Import API.
"RTN","MAGGSIU4",149,0)
 ;   This Status Callback is for the RESCIND Import function.
"RTN","MAGGSIU4",150,0)
 ;   STATARR is the status array of the Import Process
"RTN","MAGGSIU4",151,0)
 ;    ;   STATARR is the format
"RTN","MAGGSIU4",152,0)
 ;   (0)=0|1|2     0=Error, 1=Success, 2=Warning
"RTN","MAGGSIU4",153,0)
 ;   (1)=Tracking ID
"RTN","MAGGSIU4",154,0)
 ;   (2)=Queue Number
"RTN","MAGGSIU4",155,0)
 ;   (3..n)= any extra messages describing error or warning. 
"RTN","MAGGSIU4",156,0)
 ;
"RTN","MAGGSIU4",157,0)
STATCB(STATARR) ; CALLBACK function for IAPI Status array for Rescinded Import.
"RTN","MAGGSIU4",158,0)
 ;   Tracking of Rescinded Image through IMAGE ACCESS LOG (#2006.95) 
"RTN","MAGGSIU4",159,0)
 ;   For Rescinded Images : Set Delete Queue with File Name(s)
"RTN","MAGGSIU4",160,0)
 ;   i.e. the Image Entry in 2005 is already deleted, now delete the Image Files
"RTN","MAGGSIU4",161,0)
 ;   Email Status of Rescind to Mail Group.  Success, Warning or Error.
"RTN","MAGGSIU4",162,0)
 ;   
"RTN","MAGGSIU4",163,0)
 N IDATA,TRKID,I,SESS,SDATA
"RTN","MAGGSIU4",164,0)
 N MAGDUZ,MAGO,MAGDFN,MAGAD
"RTN","MAGGSIU4",165,0)
 S TRKID=$G(STATARR(1))
"RTN","MAGGSIU4",166,0)
 I $L(TRKID) D
"RTN","MAGGSIU4",167,0)
 . S SESS=$$SES4TRK^MAGGSIU3(TRKID)
"RTN","MAGGSIU4",168,0)
 . I $L(SESS) D  ; Create Entry in IMAGE ACCESS LOG file (#2006.95)
"RTN","MAGGSIU4",169,0)
 . . S SDATA=$G(^MAG(2006.82,SESS,0))
"RTN","MAGGSIU4",170,0)
 . . S MAGDUZ=$P(SDATA,"^",2),MAGO=$P(SDATA,"^",7),MAGDFN=$P(SDATA,"^",6)
"RTN","MAGGSIU4",171,0)
 . . ; set the Additional info (MAGAD) to the (0) node message or warning. 
"RTN","MAGGSIU4",172,0)
 . . ;    get out "^" for storage.
"RTN","MAGGSIU4",173,0)
 . . S MAGAD=$TR(STATARR(0),"^","~")
"RTN","MAGGSIU4",174,0)
 . . ; Parameters needed:    (MAGAD optional)
"RTN","MAGGSIU4",175,0)
 . . ; ENTRY^MAGLOG(MAGIMT     ,MAGDUZ         ,MAGO        ,MAGPACK,   MAGDFN   ,MAGCT,MAGAD)
"RTN","MAGGSIU4",176,0)
 . . D ENTRY^MAGLOG("RESCIND",MAGDUZ,MAGO,"IAPI",MAGDFN,1,MAGAD)
"RTN","MAGGSIU4",177,0)
 . . Q
"RTN","MAGGSIU4",178,0)
 . ;  If there are Rescinded image files, we get a list of the files we need 
"RTN","MAGGSIU4",179,0)
 . ;  to set Delete Queues for.  i.e. this is Abs, Full, Big and Alt (Alt is TXT File).
"RTN","MAGGSIU4",180,0)
 . ;  In the Session File we saved the Place. Place is needed for the Delete function.
"RTN","MAGGSIU4",181,0)
 . ;  So we get data from Session File (#2006.82) for the files to delete.
"RTN","MAGGSIU4",182,0)
 . D GETIAPID^MAGGSIUI(.IDATA,TRKID) ; Data from (#2006.82) Session File.
"RTN","MAGGSIU4",183,0)
 . S I=0 F  S I=$O(STATARR(I)) Q:'I  D  ;
"RTN","MAGGSIU4",184,0)
 . . I $P(STATARR(I),"^",1)="RESCINDED IMAGE FILE" D DELFILES(.IDATA)
"RTN","MAGGSIU4",185,0)
 . . Q
"RTN","MAGGSIU4",186,0)
 . Q
"RTN","MAGGSIU4",187,0)
 ; Mail Status.
"RTN","MAGGSIU4",188,0)
 D MAILSTAT(.STATARR)
"RTN","MAGGSIU4",189,0)
 Q
"RTN","MAGGSIU4",190,0)
 ; --------  Notifies user of problems of the Rescind/Watermark attempt.
"RTN","MAGGSIU4",191,0)
 ;      IEN : IMAGE File (#2005)
"RTN","MAGGSIU4",192,0)
 ;      TIUDA : TIU DOCUMENT File (#8925)
"RTN","MAGGSIU4",193,0)
 ;      STARR : Status array to send in message.
"RTN","MAGGSIU4",194,0)
MAILERR(IEN,TIUDA,STARR) ;  Notifies user of problems.
"RTN","MAGGSIU4",195,0)
 ; IEN = IEN of the image in IMAGE file (#2005)
"RTN","MAGGSIU4",196,0)
 ; TIUDA = IEN of Note in TIU DOCUMENT File (#8925)
"RTN","MAGGSIU4",197,0)
 ; Only add IEN, TIUDA if requested.
"RTN","MAGGSIU4",198,0)
 I $G(IEN) S STARR($O(STARR(""),-1)+1)="Image IEN: "_$G(IEN)
"RTN","MAGGSIU4",199,0)
 I $G(TIUDA) S STARR($O(STARR(""),-1)+1)="TIU Note: "_$G(TIUDA)
"RTN","MAGGSIU4",200,0)
 D MAILSTAT(.STARR)
"RTN","MAGGSIU4",201,0)
 Q
"RTN","MAGGSIU4",202,0)
 ;
"RTN","MAGGSIU4",203,0)
 ; ----- MAILSTAT -  Mail Msgs from RESCIND Function.--------
"RTN","MAGGSIU4",204,0)
 ;      STATARR : Status Array to send to G.MAG SERVER mail group.
"RTN","MAGGSIU4",205,0)
 ;      
"RTN","MAGGSIU4",206,0)
MAILSTAT(STATARR) ;Status Callback (called by the import API)
"RTN","MAGGSIU4",207,0)
 ;
"RTN","MAGGSIU4",208,0)
 N I,MARR,CT
"RTN","MAGGSIU4",209,0)
 N XMDUZ,XMSUB,XMTEXT,XMY
"RTN","MAGGSIU4",210,0)
 ;  0 = error, 2 = Warning, 1 = Success.
"RTN","MAGGSIU4",211,0)
 ; [  ] do we Always send email, Success or Not. ?
"RTN","MAGGSIU4",212,0)
 ; or only sending Error and Warning, because too many emails ?  
"RTN","MAGGSIU4",213,0)
 ; I $P(STATARR(0),"^",1)'=1 D  ;
"RTN","MAGGSIU4",214,0)
 D  ; For now, Always send email, Success or Not.
"RTN","MAGGSIU4",215,0)
 . ; send email to G.MAG SERVER and current user.
"RTN","MAGGSIU4",216,0)
 . ;Send to:
"RTN","MAGGSIU4",217,0)
 . S XMY("G.MAG SERVER")=""
"RTN","MAGGSIU4",218,0)
 . S XMDUZ=DUZ ; Current User could be TIU User. Send DUZ also.
"RTN","MAGGSIU4",219,0)
 . S XMSUB="Import API Report"
"RTN","MAGGSIU4",220,0)
 . S XMTEXT="MARR("
"RTN","MAGGSIU4",221,0)
 . ; XMD needs array to start with 1
"RTN","MAGGSIU4",222,0)
 . S CT=0,I=""
"RTN","MAGGSIU4",223,0)
 . F  S I=$O(STATARR(I)) Q:I=""  D
"RTN","MAGGSIU4",224,0)
 . . S CT=CT+1,MARR(CT)=I_") "_STATARR(I)
"RTN","MAGGSIU4",225,0)
 . . Q
"RTN","MAGGSIU4",226,0)
 . S CT=CT+1,MARR(CT)=" "
"RTN","MAGGSIU4",227,0)
 . S CT=CT+1,MARR(CT)="   The preceding array was generated by"
"RTN","MAGGSIU4",228,0)
 . S CT=CT+1,MARR(CT)="   the VistA Imaging Import API while "
"RTN","MAGGSIU4",229,0)
 . S CT=CT+1,MARR(CT)="   processing a 'RESCIND' Image action."
"RTN","MAGGSIU4",230,0)
 . D ^XMD
"RTN","MAGGSIU4",231,0)
 . Q
"RTN","MAGGSIU4",232,0)
 Q
"RTN","MAGGSIU4",233,0)
 ; -----    Set Status of Image and Status Reason.
"RTN","MAGGSIU4",234,0)
 ;   MAGIEN = Internal entry number IMAGE File (#2005)
"RTN","MAGGSIU4",235,0)
 ;   STAT   = Internal value for STATUS Field  (#113)
"RTN","MAGGSIU4",236,0)
 ;   REASDA = Internal value for STATUS REASON Field (#113.3)
"RTN","MAGGSIU4",237,0)
 ;   
"RTN","MAGGSIU4",238,0)
SETSTAT(MAGIEN,STAT,REASDA) ;
"RTN","MAGGSIU4",239,0)
 N MAGFDA,MAGERR,IENC,MSG
"RTN","MAGGSIU4",240,0)
 S IENC=MAGIEN_","
"RTN","MAGGSIU4",241,0)
 S MAGFDA(2005,IENC,113)=STAT
"RTN","MAGGSIU4",242,0)
 ; This is computed: 113.1)=DT   Status Date
"RTN","MAGGSIU4",243,0)
 ; This is computed:,113.2)=DUZ
"RTN","MAGGSIU4",244,0)
 I $G(REASDA) S MAGFDA(2005,IENC,113.3)=REASDA
"RTN","MAGGSIU4",245,0)
 D UPDATE^DIE("S","MAGFDA","","MAGERR")
"RTN","MAGGSIU4",246,0)
 I $D(MAGERR) D 
"RTN","MAGGSIU4",247,0)
 . D RTRNERR(.MSG)
"RTN","MAGGSIU4",248,0)
 . S MAGRY($O(MAGRY(""),-1)+1)="Failed to Set Status: "_MSG
"RTN","MAGGSIU4",249,0)
 . Q
"RTN","MAGGSIU4",250,0)
 Q
"RTN","MAGGSIU4",251,0)
 ; 
"RTN","MAGGSIU4",252,0)
 ; ----- RTRNERR Catch FM error during processing of Rescind Image.
"RTN","MAGGSIU4",253,0)
 ; Return the Error from FM Call in ETXT.
"RTN","MAGGSIU4",254,0)
RTRNERR(ETXT) ; There was error from UPDATE^DIE quit with error text
"RTN","MAGGSIU4",255,0)
 S ETXT="0^ERROR  "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGGSIU4",256,0)
 Q
"RTN","MAGGSIU4",257,0)
 ; --------  DELETE - Delete Image entry. Rescind Function.--------
"RTN","MAGGSIU4",258,0)
 ;   IEN : IMAGE FILE (#2005) Internal entry Number
"RTN","MAGGSIU4",259,0)
 ;   REASON : Free text for (#30.2) DELETED REASON [3F] ^
"RTN","MAGGSIU4",260,0)
DELETE(IEN,REASON) ; Delete Image by IEN
"RTN","MAGGSIU4",261,0)
 N RSLT,IENDF
"RTN","MAGGSIU4",262,0)
 L +^MAG(2005,IEN):4
"RTN","MAGGSIU4",263,0)
 E  Q "0^Image ID# "_IEN_" is Locked. Delete is Canceled"
"RTN","MAGGSIU4",264,0)
 ;  the call to DELETE has 3rd param =0  this means do not Set the Delete Queue to 
"RTN","MAGGSIU4",265,0)
 ;  delete the file from Share.  We will set the Delete Queue to delete the file 
"RTN","MAGGSIU4",266,0)
 ;  from share after the successful watermarking process.
"RTN","MAGGSIU4",267,0)
 ; gek 121T2 This is the IEN + the Force Delete Flag.  User won't need MAG DELETE key.
"RTN","MAGGSIU4",268,0)
 S IENDF=IEN_"^"_1
"RTN","MAGGSIU4",269,0)
 ; '0' in 3rd param : this is a flag to tell function to NOT queue images for delete by 
"RTN","MAGGSIU4",270,0)
 ;   the BP yet.
"RTN","MAGGSIU4",271,0)
 D DELETE^MAGGTID(.RSLT,IENDF,0,1,REASON)
"RTN","MAGGSIU4",272,0)
 L -^MAG(2005,IEN)
"RTN","MAGGSIU4",273,0)
 Q RSLT(0)
"RTN","MAGGSIU4",274,0)
 ;
"RTN","MAGGSIU4",275,0)
 ; --------  DELFILES(IDATA)  After a Rescind Action.
"RTN","MAGGSIU4",276,0)
 ;  IDATA : has filenames and file places, format is :
"RTN","MAGGSIU4",277,0)
 ;  "FullFile^AbsFile^BigFile|FullPlace^AbsPlace^BigPlace"
"RTN","MAGGSIU4",278,0)
 ;  
"RTN","MAGGSIU4",279,0)
 ;   from the Status Callback call, if successful import and watermark,  then we
"RTN","MAGGSIU4",280,0)
 ;  delete the Image Files associated with the Image that was Rescinded.
"RTN","MAGGSIU4",281,0)
DELFILES(IDATA) ;This will format the data for the call to set the Delete Queue.
"RTN","MAGGSIU4",282,0)
 N RSN1,RSN2,I,RSNF
"RTN","MAGGSIU4",283,0)
 N MAGPLC,MAGFILE2,X,X2,ALTEXT,ALTPATH
"RTN","MAGGSIU4",284,0)
 ; Only 1 image is in a Rescind Import.
"RTN","MAGGSIU4",285,0)
 ; example : 
"RTN","MAGGSIU4",286,0)
 ; ..IMAGE,1)=20467~c:\image\SLA0\00\00\02\04\SLA00000020467.TIF~c:\image\SLA0\00\00\02\04\SLA00000020467.ABS~|1~1~1
"RTN","MAGGSIU4",287,0)
 ; RSNF= c:\image...\SLA00000020467.TIF~c:\image...\SLA00000020467.ABS~
"RTN","MAGGSIU4",288,0)
 ; RSN2=1~1~1
"RTN","MAGGSIU4",289,0)
 S RSN1=$P($G(IDATA("IMAGE",1)),"|",1)
"RTN","MAGGSIU4",290,0)
 S RSNF=$P(RSN1,"~",2,4)
"RTN","MAGGSIU4",291,0)
 S RSN2=$P($G(IDATA("IMAGE",1)),"|",2)
"RTN","MAGGSIU4",292,0)
 F I=1,2,3 D 
"RTN","MAGGSIU4",293,0)
 . ; Send the Full Path and Place : for Full, Abs, Big.
"RTN","MAGGSIU4",294,0)
 . ; Don't set null values in the Queue
"RTN","MAGGSIU4",295,0)
 . I ($P(RSNF,"~",I)="")!($P(RSN2,"~",I)="") Q
"RTN","MAGGSIU4",296,0)
 . S X=$$DELETE^MAGBAPI($P(RSNF,"~",I),$P(RSN2,"~",I))
"RTN","MAGGSIU4",297,0)
 . Q
"RTN","MAGGSIU4",298,0)
 ;Delete any other ALTernate files. ( TXT) 
"RTN","MAGGSIU4",299,0)
 ; -- code from MAGGTID, Can't call MAGGTID, because the 2005 entry is gone.
"RTN","MAGGSIU4",300,0)
 ;    (gek 3/31/03) Since ALT files are (for now) always on same server as Full
"RTN","MAGGSIU4",301,0)
 ;    We only attempt to delete them here  (If we have a path to FullRes on Magnetic)
"RTN","MAGGSIU4",302,0)
 ;
"RTN","MAGGSIU4",303,0)
 S MAGFILE2=$P(RSNF,"~",1),MAGPLC=$P(RSN2,"~",1)
"RTN","MAGGSIU4",304,0)
 S X2=0
"RTN","MAGGSIU4",305,0)
 ; Don't set null values in the Queue 
"RTN","MAGGSIU4",306,0)
 I (MAGFILE2="")!(MAGPLC="") Q
"RTN","MAGGSIU4",307,0)
 F  S X2=$O(^MAG(2006.1,MAGPLC,2,X2)) Q:'X2  D
"RTN","MAGGSIU4",308,0)
 . S ALTEXT=^MAG(2006.1,MAGPLC,2,X2,0)
"RTN","MAGGSIU4",309,0)
 . S ALTPATH=$P(MAGFILE2,".")_"."_ALTEXT
"RTN","MAGGSIU4",310,0)
 . S X=$$DELETE^MAGBAPI(ALTPATH,MAGPLC)
"RTN","MAGGSIU4",311,0)
 . Q
"RTN","MAGGSIU4",312,0)
 Q
"RTN","MAGGSIU5")
0^3^B37701586
"RTN","MAGGSIU5",1,0)
MAGGSIU5 ;WOIFO/GEK - Utilities for Image Import API ; 22 Feb 2011 12:28 PM
"RTN","MAGGSIU5",2,0)
 ;;3.0;IMAGING;**121**;Mar 19, 2002;Build 2340;Oct 20, 2011
"RTN","MAGGSIU5",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGSIU5",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIU5",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIU5",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIU5",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIU5",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIU5",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIU5",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIU5",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIU5",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIU5",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIU5",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIU5",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIU5",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIU5",17,0)
 ;;
"RTN","MAGGSIU5",18,0)
 Q
"RTN","MAGGSIU5",19,0)
 ; ----- RSND1 ----- Rescind One Image
"RTN","MAGGSIU5",20,0)
 ;  This routine is called by other Imaging routines to Rescind One Image.
"RTN","MAGGSIU5",21,0)
 ;
"RTN","MAGGSIU5",22,0)
 ; Input Parameters
"RTN","MAGGSIU5",23,0)
 ; ================
"RTN","MAGGSIU5",24,0)
 ; MAGIEN = IEN of Image entry in IMAGE (#2005) File
"RTN","MAGGSIU5",25,0)
 ; TIUDA  = IEN of TIU note in TIU DOCUMENT file (#8925) 
"RTN","MAGGSIU5",26,0)
 ; DELREAS = Free text of Deleted Reason
"RTN","MAGGSIU5",27,0)
 ; 
"RTN","MAGGSIU5",28,0)
 ;  MAGIEN and TIUDA are required. 
"RTN","MAGGSIU5",29,0)
 ;  We verify that the Image entry MAGIEN, points to TIUDA.
"RTN","MAGGSIU5",30,0)
 ;  We also call the Integrity Check for the image, and we do not 
"RTN","MAGGSIU5",31,0)
 ;  process a Rescind Action if the IQ Check fails.
"RTN","MAGGSIU5",32,0)
 ;           
"RTN","MAGGSIU5",33,0)
 ; Return Values
"RTN","MAGGSIU5",34,0)
 ; =============
"RTN","MAGGSIU5",35,0)
 ; Results are passed back in the MAGRY Array
"RTN","MAGGSIU5",36,0)
 ; if error found during execution
"RTN","MAGGSIU5",37,0)
 ;   MAGRY(0) = 0^Error message"
"RTN","MAGGSIU5",38,0)
 ;   MAGRY(1..N) = messages describing the Error.
"RTN","MAGGSIU5",39,0)
 ;   
"RTN","MAGGSIU5",40,0)
 ; if success, the result array is same as Import API
"RTN","MAGGSIU5",41,0)
 ;   MAGRY(0) = 1^Success
"RTN","MAGGSIU5",42,0)
 ;   MAGRY(1) = TRKID   -  Tracking ID
"RTN","MAGGSIU5",43,0)
 ;   MAGRY(2) = QUE     -  Queue Number from IMPORT QUEUE File(#2006.034)
"RTN","MAGGSIU5",44,0)
 ;   
"RTN","MAGGSIU5",45,0)
 ;   Tracking ID is a field in each of the following files: 
"RTN","MAGGSIU5",46,0)
 ;      IMAGE File (#2005) (Field #108) (index "ATRKID")
"RTN","MAGGSIU5",47,0)
 ;      IMAGING WINDOWS SESSION File (#2006.82) (Field #8) (index "E")
"RTN","MAGGSIU5",48,0)
 ;      ACQUISITION SESSION FILE File(#2006.041)(Field #.02) (index "C")
"RTN","MAGGSIU5",49,0)
 ;
"RTN","MAGGSIU5",50,0)
 ; 
"RTN","MAGGSIU5",51,0)
RSND1(MAGRY,MAGIEN,TIUDA,DELREAS) ; Main entry point to rescind an Image
"RTN","MAGGSIU5",52,0)
 N QARR,TRKID,CALLBACK
"RTN","MAGGSIU5",53,0)
 N RSLT,REASON,REASDA,MAGTDAT
"RTN","MAGGSIU5",54,0)
 N I,QCT,N0,N2,N40,N100,MAGLT
"RTN","MAGGSIU5",55,0)
 N IMGSPLCS,MAGRQA
"RTN","MAGGSIU5",56,0)
 N MAGTMP
"RTN","MAGGSIU5",57,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^"_$T(+0)
"RTN","MAGGSIU5",58,0)
 ;
"RTN","MAGGSIU5",59,0)
 S MAGIEN=$G(MAGIEN),TIUDA=$G(TIUDA)
"RTN","MAGGSIU5",60,0)
 ;  Quit if MAGIEN is deleted.
"RTN","MAGGSIU5",61,0)
 I $$ISDEL^MAGGI11(MAGIEN) D  Q
"RTN","MAGGSIU5",62,0)
 . S MAGRY(0)="0^Image: "_MAGIEN_" is Deleted"
"RTN","MAGGSIU5",63,0)
 . Q
"RTN","MAGGSIU5",64,0)
 ;   Check for TIUDA, and TIUDA, is same as Image Entry.
"RTN","MAGGSIU5",65,0)
 I 'TIUDA S MAGRY(0)="0^A TIU Note is required" Q
"RTN","MAGGSIU5",66,0)
 ;   If Group Image, use Group (MAGTMP) for next check.
"RTN","MAGGSIU5",67,0)
 ;   because the group image won't point to TIU, only Group Parent.
"RTN","MAGGSIU5",68,0)
 S MAGTMP=MAGIEN
"RTN","MAGGSIU5",69,0)
 I $P(^MAG(2005,MAGIEN,0),"^",10) S MAGTMP=$P(^MAG(2005,MAGIEN,0),"^",10)
"RTN","MAGGSIU5",70,0)
 I $$GET1^DIQ(2005,MAGTMP_",",17,"I")'=TIUDA D  Q
"RTN","MAGGSIU5",71,0)
 . S MAGRY(0)="0^Mismatch between the TIU Note parameter and TIU Note linked to Image"
"RTN","MAGGSIU5",72,0)
 . S MAGRY(1)="TIU Note: "_TIUDA_"   Image: "_MAGIEN
"RTN","MAGGSIU5",73,0)
 . Q
"RTN","MAGGSIU5",74,0)
 ;   Run the Integrity Checker, quit if it finds problem
"RTN","MAGGSIU5",75,0)
 D CHK^MAGGSQI(.MAGRQA,MAGIEN) I 'MAGRQA(0) D  Q
"RTN","MAGGSIU5",76,0)
 . S MAGRY(0)=MAGRQA(0)
"RTN","MAGGSIU5",77,0)
 . Q
"RTN","MAGGSIU5",78,0)
 ;   Quit if Image is already Rescinded, 
"RTN","MAGGSIU5",79,0)
 ;   (checking Field # 115.2 LINKED TYPE) 
"RTN","MAGGSIU5",80,0)
 S MAGLT=$$GET1^DIQ(2005,MAGIEN_",",115.2,"I") I MAGLT=1 D  Q
"RTN","MAGGSIU5",81,0)
 . S MAGRY(0)="0^Image is already Rescinded."
"RTN","MAGGSIU5",82,0)
 . S MAGRY(1)="RESCIND Action is Canceled."
"RTN","MAGGSIU5",83,0)
 . Q
"RTN","MAGGSIU5",84,0)
 ;
"RTN","MAGGSIU5",85,0)
 S MAGRY(0)="0^Processing Rescind request..."
"RTN","MAGGSIU5",86,0)
 ;
"RTN","MAGGSIU5",87,0)
 S CALLBACK="STATCB^MAGGSIU4"
"RTN","MAGGSIU5",88,0)
 S REASON=$G(DELREAS,"Rescinded TIU Note")
"RTN","MAGGSIU5",89,0)
 S REASDA=$$FIND1^DIC(2005.88,"","X",REASON)
"RTN","MAGGSIU5",90,0)
 ;  Get data for TIU Note.
"RTN","MAGGSIU5",91,0)
 D DATA^MAGGNTI(.MAGTDAT,TIUDA)
"RTN","MAGGSIU5",92,0)
 ; 
"RTN","MAGGSIU5",93,0)
 ;   IMGSPLCS : Image paths and Image places.
"RTN","MAGGSIU5",94,0)
 ;   Get string of Full File Path's | File Places.  
"RTN","MAGGSIU5",95,0)
 ;   This is needed after success, to Delete the Files from Image Network.
"RTN","MAGGSIU5",96,0)
 ;   i.e.  Image Full Path^Abs full Path^Big full Path|Image Place^Abs Place^Big Place
"RTN","MAGGSIU5",97,0)
 S IMGSPLCS=$$IMGPLC(MAGIEN)
"RTN","MAGGSIU5",98,0)
 S I=0,QCT=0
"RTN","MAGGSIU5",99,0)
 ;   
"RTN","MAGGSIU5",100,0)
 S N0=$G(^MAG(2005,MAGIEN,0))
"RTN","MAGGSIU5",101,0)
 S N2=$G(^MAG(2005,MAGIEN,2))
"RTN","MAGGSIU5",102,0)
 S N40=$G(^MAG(2005,MAGIEN,40))
"RTN","MAGGSIU5",103,0)
 S N100=$G(^MAG(2005,MAGIEN,100))
"RTN","MAGGSIU5",104,0)
 ; 
"RTN","MAGGSIU5",105,0)
 ; We Delete the image entry first, then set the Import Queue.
"RTN","MAGGSIU5",106,0)
 S RSLT=$$DELETE^MAGGSIU4(MAGIEN,REASON)
"RTN","MAGGSIU5",107,0)
 ; Quit if we can't delete.
"RTN","MAGGSIU5",108,0)
 I $P(RSLT,"^",1)=0 D  Q  ;
"RTN","MAGGSIU5",109,0)
 . S MAGRY(0)=RSLT
"RTN","MAGGSIU5",110,0)
 . Q
"RTN","MAGGSIU5",111,0)
 ;
"RTN","MAGGSIU5",112,0)
 S TRKID=$$TRKID^MAGGSIU4()  ; Get unique Import API tracking ID
"RTN","MAGGSIU5",113,0)
 I TRKID=0 S MAGRY(0)="0^Error generating a Tracking ID" Q
"RTN","MAGGSIU5",114,0)
 ;
"RTN","MAGGSIU5",115,0)
 ; Set up Import queue data
"RTN","MAGGSIU5",116,0)
 ;--
"RTN","MAGGSIU5",117,0)
 ;   ACTION is the new Import Data Code.  We'll send 'RESCIND' to the
"RTN","MAGGSIU5",118,0)
 ;   Active X control for special processing.
"RTN","MAGGSIU5",119,0)
 S QCT=QCT+1,QARR(QCT)="ACTION^RESCIND"
"RTN","MAGGSIU5",120,0)
 S QCT=QCT+1,QARR(QCT)="PXIEN^"_TIUDA        ; IEN of TIU note
"RTN","MAGGSIU5",121,0)
 S QCT=QCT+1,QARR(QCT)="TRKID^"_TRKID        ; Import API Track ID
"RTN","MAGGSIU5",122,0)
 S QCT=QCT+1,QARR(QCT)="STSCB^"_CALLBACK  ; Status call back routine
"RTN","MAGGSIU5",123,0)
 ;   The format of 'IMAGE' Data for a Rescind is different than for
"RTN","MAGGSIU5",124,0)
 ;   a Normal Image Import.  This is by design so that the
"RTN","MAGGSIU5",125,0)
 ;   old version of the IAPI (called by BP Patch 39 and before)
"RTN","MAGGSIU5",126,0)
 ;   does not process this import.
"RTN","MAGGSIU5",127,0)
 S QCT=QCT+1,QARR(QCT)="IMAGE"_"^"_MAGIEN_"^"_IMGSPLCS
"RTN","MAGGSIU5",128,0)
 ;
"RTN","MAGGSIU5",129,0)
 ;  Now, set the Required data (plus new data) then call MAGGSIUI the
"RTN","MAGGSIU5",130,0)
 ;  same as always. It'll set an IMPORT QUEUE (#2006.034)
"RTN","MAGGSIU5",131,0)
 ;  and track the data in the IMAGING WINDOWS SESSION file (#2006.82)
"RTN","MAGGSIU5",132,0)
 ;  the same as all imports.
"RTN","MAGGSIU5",133,0)
 ;
"RTN","MAGGSIU5",134,0)
 S QCT=QCT+1,QARR(QCT)="PXPKG^8925"
"RTN","MAGGSIU5",135,0)
 S QCT=QCT+1,QARR(QCT)="PXDT^"_$P(MAGTDAT,"^",3)
"RTN","MAGGSIU5",136,0)
 S QCT=QCT+1,QARR(QCT)="IDFN^"_$P(N0,"^",7)
"RTN","MAGGSIU5",137,0)
 S QCT=QCT+1,QARR(QCT)="ACQS^"_DUZ(2)
"RTN","MAGGSIU5",138,0)
 S QCT=QCT+1,QARR(QCT)="ACQD^"_"IAPI" ; This is the acquisition device. Import API.
"RTN","MAGGSIU5",139,0)
 S QCT=QCT+1,QARR(QCT)="GDESC^"_$E("RESCINDED "_$p(N2,"^",4),1,60)
"RTN","MAGGSIU5",140,0)
 ;gek/p121t2  Force IXTYPE to be ADVANCE DIRECTIVE to fix IMED issue of 
"RTN","MAGGSIU5",141,0)
 ;  indexing AD's as Miscelleneous Document. 
"RTN","MAGGSIU5",142,0)
 S QCT=QCT+1,QARR(QCT)="IXTYPE^"_"ADVANCE DIRECTIVE" ;$P(N40,"^",3)  
"RTN","MAGGSIU5",143,0)
 S QCT=QCT+1,QARR(QCT)="IXPROC^"_$P(N40,"^",4)
"RTN","MAGGSIU5",144,0)
 S QCT=QCT+1,QARR(QCT)="IXSPEC^"_$P(N40,"^",5)
"RTN","MAGGSIU5",145,0)
 S QCT=QCT+1,QARR(QCT)="IXORIGIN^"_$P(N40,"^",6)
"RTN","MAGGSIU5",146,0)
 ; To this point, all data in array will be passed back from OCX.
"RTN","MAGGSIU5",147,0)
 ; The data Below : will be validated in the call to REMOTE^MAGGSIUI, and stored in the Session
"RTN","MAGGSIU5",148,0)
 ; File, but won't be returned in the call to ADD^MAGGSIA.   the old design of the IAPI prohibits
"RTN","MAGGSIU5",149,0)
 ; data except for the Import Codes known by IAPI.  So in ADD^MAGGSIA1 before the call to UPDATE^DIC,
"RTN","MAGGSIU5",150,0)
 ; the data for these fields (for Rescinded Import)  will need to be retrieved from the
"RTN","MAGGSIU5",151,0)
 ; Session file and added to the FDA array.
"RTN","MAGGSIU5",152,0)
 ; 
"RTN","MAGGSIU5",153,0)
 ; PROCEDURE  #6
"RTN","MAGGSIU5",154,0)
 ; CREATION DATE #110
"RTN","MAGGSIU5",155,0)
 ; LINKED IMAGE  #115.1
"RTN","MAGGSIU5",156,0)
 ; LINKED TYPE   #115.2
"RTN","MAGGSIU5",157,0)
 ; LINKED DATE   #115.3  (DATE TIME)
"RTN","MAGGSIU5",158,0)
 ; 
"RTN","MAGGSIU5",159,0)
 ; make sure the procedure field is not too long.
"RTN","MAGGSIU5",160,0)
 S QCT=QCT+1,QARR(QCT)="6^"_$E($P(N0,"^",8),1,10)
"RTN","MAGGSIU5",161,0)
 S QCT=QCT+1,QARR(QCT)="110^"_$P(N100,"^",6)
"RTN","MAGGSIU5",162,0)
 S QCT=QCT+1,QARR(QCT)="115.1^"_MAGIEN ;comment this out for testing.
"RTN","MAGGSIU5",163,0)
 S QCT=QCT+1,QARR(QCT)="115.2^"_"1" ; 1 = RESCIND
"RTN","MAGGSIU5",164,0)
 S QCT=QCT+1,QARR(QCT)="115.3^"_$$NOW^XLFDT
"RTN","MAGGSIU5",165,0)
 ;
"RTN","MAGGSIU5",166,0)
 K MAGRY
"RTN","MAGGSIU5",167,0)
 D REMOTE^MAGGSIUI(.MAGRY,.QARR)
"RTN","MAGGSIU5",168,0)
 I MAGRY(0) D
"RTN","MAGGSIU5",169,0)
 . S MAGRY($O(MAGRY(""),-1)+1)="TrkID: "_$G(TRKID)
"RTN","MAGGSIU5",170,0)
 . S MAGRY($O(MAGRY(""),-1)+1)="Queue: "_+MAGRY(0)
"RTN","MAGGSIU5",171,0)
 . Q
"RTN","MAGGSIU5",172,0)
 Q
"RTN","MAGGSIU5",173,0)
 ; ----- ERRA ---- Error trap 
"RTN","MAGGSIU5",174,0)
ERRA ; Error Trap for RSND1 - Array Return - MAGRY
"RTN","MAGGSIU5",175,0)
 N ERR S ERR=$$EC^%ZOSV
"RTN","MAGGSIU5",176,0)
 S MAGRY(0)="0^"_ERR
"RTN","MAGGSIU5",177,0)
 S MAGRY($O(MAGRY(""),-1)+1)=ERR
"RTN","MAGGSIU5",178,0)
 D LOGERR^MAGGTERR(ERR)
"RTN","MAGGSIU5",179,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGSIU5",180,0)
 Q
"RTN","MAGGSIU5",181,0)
 ; ----- IMGPLC ---- internal call to return Image paths and places.
"RTN","MAGGSIU5",182,0)
 ;     MAGIEN = IMAGE File (#2005) internal entry number.
"RTN","MAGGSIU5",183,0)
IMGPLC(MAGIEN) ; return a string of FullFile^AbsFile^BigFile|FullPlace^AbsPlace^BigPlace
"RTN","MAGGSIU5",184,0)
 ; 
"RTN","MAGGSIU5",185,0)
 N MAGXX,MAGPLC,FPATH
"RTN","MAGGSIU5",186,0)
 N RFILE,RPLC
"RTN","MAGGSIU5",187,0)
 ; Here we 'New' the variables returned by MAGFILEB so they are cleared after this call.
"RTN","MAGGSIU5",188,0)
 N MAGFILE,MAGFILE1,MAGFILE2,MAGJBOL,MAGOFFLN
"RTN","MAGGSIU5",189,0)
 S RFILE="",RPLC=""
"RTN","MAGGSIU5",190,0)
 ;   Get Full Path and Place
"RTN","MAGGSIU5",191,0)
 S MAGXX=MAGIEN,MAGPLC=$$DA2PLC^MAGBAPIP(MAGIEN,"F")
"RTN","MAGGSIU5",192,0)
 D VSTNOCP^MAGFILEB
"RTN","MAGGSIU5",193,0)
 S FPATH=$P(MAGFILE2,"~",1) I FPATH="-1" S FPATH=""
"RTN","MAGGSIU5",194,0)
 S RFILE=RFILE_"^"_FPATH,RPLC=RPLC_"^"_MAGPLC
"RTN","MAGGSIU5",195,0)
 ;
"RTN","MAGGSIU5",196,0)
 ;   Get Abs Path and Place
"RTN","MAGGSIU5",197,0)
 S MAGXX=MAGIEN,MAGPLC=$$DA2PLC^MAGBAPIP(MAGIEN,"A")
"RTN","MAGGSIU5",198,0)
 D ABSNOCP^MAGFILEB
"RTN","MAGGSIU5",199,0)
 S FPATH=$P(MAGFILE2,"~",1) I FPATH="-1" S FPATH=""
"RTN","MAGGSIU5",200,0)
 S RFILE=RFILE_"^"_FPATH,RPLC=RPLC_"^"_MAGPLC
"RTN","MAGGSIU5",201,0)
 ;
"RTN","MAGGSIU5",202,0)
 ;   Get Big Patch and Place
"RTN","MAGGSIU5",203,0)
 S MAGXX=MAGIEN,MAGPLC=$$DA2PLC^MAGBAPIP(MAGIEN,"B")
"RTN","MAGGSIU5",204,0)
 D BIGNOCP^MAGFILEB
"RTN","MAGGSIU5",205,0)
 S FPATH=$P(MAGFILE2,"~",1) I FPATH="-1" S FPATH=""
"RTN","MAGGSIU5",206,0)
 S RFILE=RFILE_"^"_FPATH,RPLC=RPLC_"^"_MAGPLC
"RTN","MAGGSIU5",207,0)
 ; get rid of first '^'
"RTN","MAGGSIU5",208,0)
 Q $E(RFILE,2,999)_"|"_$E(RPLC,2,999)
"RTN","MAGGSIUI")
0^4^B59096090
"RTN","MAGGSIUI",1,0)
MAGGSIUI ;WOIFO/GEK/NST - Utilities for Image Import API ; 20 Jan 2010 10:10 AM
"RTN","MAGGSIUI",2,0)
 ;;3.0;IMAGING;**7,8,48,20,85,59,108,121**;Mar 19, 2002;Build 2340;Oct 20, 2011
"RTN","MAGGSIUI",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGSIUI",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIUI",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIUI",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIUI",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIUI",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIUI",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIUI",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIUI",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIUI",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIUI",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIUI",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIUI",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIUI",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIUI",17,0)
 ;;
"RTN","MAGGSIUI",18,0)
 Q
"RTN","MAGGSIUI",19,0)
REMOTE(MAGRY,MAGDATA) ;RPC [MAG4 REMOTE IMPORT]
"RTN","MAGGSIUI",20,0)
 ; Import Images from a Windows App, by sending an array.
"RTN","MAGGSIUI",21,0)
 I ($D(MAGDATA)<10) S MAGRY(0)="0^Missing Data Array !." Q
"RTN","MAGGSIUI",22,0)
 N I,J,ICT,DCT,MAGIX,IMAGES,ERR,X,Z
"RTN","MAGGSIUI",23,0)
 S (ERR,ICT,DCT)=0
"RTN","MAGGSIUI",24,0)
 S I="" F  S I=$O(MAGDATA(I)) Q:I=""  S X=MAGDATA(I) D  Q:ERR
"RTN","MAGGSIUI",25,0)
 . S Z=$P(X,U)
"RTN","MAGGSIUI",26,0)
 . I (X="")!(Z="") S MAGRY(0)="0^INVALID Data in Input Array: Node "_I_"="""_X_"",ERR=1 Q
"RTN","MAGGSIUI",27,0)
 . I Z="IMAGE" S ICT=ICT+1,IMAGES(ICT)=$P(X,U,2,99) Q
"RTN","MAGGSIUI",28,0)
 . S DCT=DCT+1,MAGIX(Z)=$P(X,U,2,99)
"RTN","MAGGSIUI",29,0)
 I 'ERR D IMPORT(.MAGRY,.IMAGES,.MAGIX)
"RTN","MAGGSIUI",30,0)
 Q
"RTN","MAGGSIUI",31,0)
 ;
"RTN","MAGGSIUI",32,0)
IMPORT(MAGRY,IMAGES,MAGIX) ;
"RTN","MAGGSIUI",33,0)
 ; "IDFN","PXPKG","PXIEN","PXDT","TRKID","ACQD","ACQS","ACQL","STSCB","ITYPE",
"RTN","MAGGSIUI",34,0)
 ;        "CMTH","CDUZ","USERNAME","PASSWORD","GDESC","DFLG","TRTYPE","DOCCTG","DOCDT",
"RTN","MAGGSIUI",35,0)
 ;        "IXTYPE","IXSPEC","IXPROC","IXORIGIN    ;Patch 8: Added Index fields
"RTN","MAGGSIUI",36,0)
 ;        "PXSGNTYP","PXNEW","PXTIUTTL","PXTIUTXTxxxxx"  ; Patch 108
"RTN","MAGGSIUI",37,0)
 ;
"RTN","MAGGSIUI",38,0)
 ;Index fields Package, Class ("IXPKG" and "IXCLS") aren't accepted
"RTN","MAGGSIUI",39,0)
 ;    they are computed values.
"RTN","MAGGSIUI",40,0)
 ; - Convert field codes into an Input Data Array,
"RTN","MAGGSIUI",41,0)
 ;   validate, then set the Import Queue
"RTN","MAGGSIUI",42,0)
 ;
"RTN","MAGGSIUI",43,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^"_$T(+0)
"RTN","MAGGSIUI",44,0)
 K MAGRY S MAGRY(0)="0^Importing data..."
"RTN","MAGGSIUI",45,0)
 N APISESS,MWIN
"RTN","MAGGSIUI",46,0)
 S MWIN=$$BROKER^XWBLIB
"RTN","MAGGSIUI",47,0)
 N PRM,CT,MAGA,MAGY,MAGTN,TNODE
"RTN","MAGGSIUI",48,0)
 N IDFN,PXPKG,PXIEN,PXDT,TRKID,ACQD,ACQS,ACQN,ACQL,STSCB,ITYPE,CMTH,CDUZ,USERNAME,PASSWORD
"RTN","MAGGSIUI",49,0)
 N GDESC,DFLG,TRTYPE,DOCCTG,DOCDT,IXPKG,IXCLS,IXTYPE,IXSPEC,IXPROC,IXORIGIN,MAX,SITEPLC
"RTN","MAGGSIUI",50,0)
 N ERR,MAGTM,QTIME,MAGIXZ
"RTN","MAGGSIUI",51,0)
 N PXNEW,PXTIUTTL,PXSGNTYP  ; Patch 108
"RTN","MAGGSIUI",52,0)
 N ACTION
"RTN","MAGGSIUI",53,0)
 S CT=0,ERR=0
"RTN","MAGGSIUI",54,0)
 M MAGIXZ=MAGIX
"RTN","MAGGSIUI",55,0)
 ;  DON'T CONVERT ACQS(really a ACQN) to a REAL ACQS, leave it ACQS to be converted by MAGGSIV
"RTN","MAGGSIUI",56,0)
 ;  121:  'ACTION' is new
"RTN","MAGGSIUI",57,0)
 F PRM="ACTION","IDFN","PXSGNTYP","PXPKG","PXIEN","PXDT","PXNEW","PXTIUTTL","TRKID","ACQD","ACQS","ACQN","ACQL","STSCB","ITYPE","CMTH","CDUZ","USERNAME","PASSWORD","GDESC","DFLG","TRTYPE","DOCCTG","DOCDT","IXTYPE","IXSPEC","IXPROC","IXORIGIN" D
"RTN","MAGGSIUI",58,0)
 . S @PRM=$G(MAGIX(PRM)) K MAGIX(PRM) ; P8T14 added K.. and next line to account for field numbers later.
"RTN","MAGGSIUI",59,0)
 . Q
"RTN","MAGGSIUI",60,0)
 S PRM="" F  S PRM=$O(MAGIX(PRM)) Q:PRM=""  D SA(PRM,$G(MAGIX(PRM)))
"RTN","MAGGSIUI",61,0)
 ;
"RTN","MAGGSIUI",62,0)
 S MAGTM=$$NOW^XLFDT
"RTN","MAGGSIUI",63,0)
 I '$G(DUZ) S MAGRY(0)="0^DUZ is undefined." Q  ;D ERRTRK Q
"RTN","MAGGSIUI",64,0)
 ; DATATRK sets Global var. APISESS  = IEN of Session File.
"RTN","MAGGSIUI",65,0)
 D DATATRK
"RTN","MAGGSIUI",66,0)
 I '$$REQPARAM^MAGGSIU2() D ERRTRK Q
"RTN","MAGGSIUI",67,0)
 S MAX=$P(TRKID,";",1)="MAX"
"RTN","MAGGSIUI",68,0)
 ;I 'MWIN W !,"----------------" ZW  W !,"---------------------"
"RTN","MAGGSIUI",69,0)
 ; Workaround VIC (Maximus) is sending Station Number 
"RTN","MAGGSIUI",70,0)
 ; we'll convert to Institution IEN
"RTN","MAGGSIUI",71,0)
 I MAX&(ACQS]"") D  Q:ERR
"RTN","MAGGSIUI",72,0)
 . S X=$O(^DIC(4,"D",ACQS,""))
"RTN","MAGGSIUI",73,0)
 . I X="" S MAGRY(0)="0^Invalid Station Number:(Maximus ACQS): "_ACQS,ERR=1 Q
"RTN","MAGGSIUI",74,0)
 . S SITEPLC=X ; We need the Place for the Queue
"RTN","MAGGSIUI",75,0)
 . ;S ACQS=X  Out in 85. Don't change to ACQS, that's done in VAL^MAGGSIV
"RTN","MAGGSIUI",76,0)
 . Q
"RTN","MAGGSIUI",77,0)
 ; Change to Allow ACQN - STATION NUMBER from INSTITUTION File.
"RTN","MAGGSIUI",78,0)
 I $L(ACQN) D  Q:ERR
"RTN","MAGGSIUI",79,0)
 . S ACQS=$O(^DIC(4,"D",ACQN,""))
"RTN","MAGGSIUI",80,0)
 . I ACQS="" S MAGRY(0)="0^Invalid STATION NUMBER: (ACQN): "_ACQN,ERR=1 Q
"RTN","MAGGSIUI",81,0)
 . ; VAL^MAGGSIV Will fail if ACQS is real and this is Maximus 
"RTN","MAGGSIUI",82,0)
 . I MAX S ACQS=ACQN K ACQN Q
"RTN","MAGGSIUI",83,0)
 . S ACQN="" ;We converted to ACQS, lets make "" so no confusion later.
"RTN","MAGGSIUI",84,0)
 . Q
"RTN","MAGGSIUI",85,0)
 ;
"RTN","MAGGSIUI",86,0)
 ; Set the input data array
"RTN","MAGGSIUI",87,0)
 ;
"RTN","MAGGSIUI",88,0)
 ; Patch 108
"RTN","MAGGSIUI",89,0)
 D SA("PXSGNTYP",PXSGNTYP)        ; Signature Type - 0 unsigned/ 1 administrative closed/ 2 signed
"RTN","MAGGSIUI",90,0)
 D SA("PXTIUTTL",PXTIUTTL)  ; TIU Title in case a new TIU stub needs to be created
"RTN","MAGGSIUI",91,0)
 D SA("PXNEW",PXNEW)        ; Flag to create a new package ( e.g. a new TUI stub)
"RTN","MAGGSIUI",92,0)
 ; PXIEN has to be set to zero because of Delphi function TMagImport.FileSpecialtyPointers
"RTN","MAGGSIUI",93,0)
 ; In this way we don't need to recompile BP
"RTN","MAGGSIUI",94,0)
 S:PXNEW="1" PXIEN=0
"RTN","MAGGSIUI",95,0)
 D SA(5,IDFN)    ;PATIENT
"RTN","MAGGSIUI",96,0)
 D SA(16,PXPKG)   ;PARENT DATA FILE
"RTN","MAGGSIUI",97,0)
 D SA(17,PXIEN) ;PARENT GLOBAL ROOT
"RTN","MAGGSIUI",98,0)
 D SA(15,PXDT)   ; PROCEDURE/EXAM DATE/TIME
"RTN","MAGGSIUI",99,0)
 D SA(108,TRKID) ; TRACKING ID (new)
"RTN","MAGGSIUI",100,0)
 D SA("ACQD",ACQD)  ; ACQUISTION DEVICE ( new )
"RTN","MAGGSIUI",101,0)
 I 'MAX S SITEPLC=ACQS D SA(.05,ACQS) ; this used to be fld 105
"RTN","MAGGSIUI",102,0)
 D SA(101,ACQL)
"RTN","MAGGSIUI",103,0)
 D SA("STATUSCB",STSCB)  ; STATUS CALLBACK  (was referred to as ExceptionHandler)
"RTN","MAGGSIUI",104,0)
 D SA(3,ITYPE)   ; OBJECT TYPE
"RTN","MAGGSIUI",105,0)
 D SA("CALLMTH",CMTH)     ; CALL METHOD
"RTN","MAGGSIUI",106,0)
 D SA(8,CDUZ)    ; IMAGE SAVE BY
"RTN","MAGGSIUI",107,0)
 D SA("USERNAME",USERNAME)
"RTN","MAGGSIUI",108,0)
 D SA("PASSWORD",PASSWORD)
"RTN","MAGGSIUI",109,0)
 D SA(10,GDESC)  ; SHORT DESCRIPTION
"RTN","MAGGSIUI",110,0)
 D SA("DELFLAG",DFLG)    ; DELETE FLAG
"RTN","MAGGSIUI",111,0)
 D SA("TRNSTYP",TRTYPE)  ; TRANSACTION TYPE
"RTN","MAGGSIUI",112,0)
 D SA(100,DOCCTG) ;  document Main category
"RTN","MAGGSIUI",113,0)
 D SA(110,DOCDT)     ;  document date
"RTN","MAGGSIUI",114,0)
 ; Patch 8 allows Index fields to be imported.
"RTN","MAGGSIUI",115,0)
 ;"IXTYPE","IXSPEC","IXPROC","IXORIGIN"
"RTN","MAGGSIUI",116,0)
 D SA(42,IXTYPE)     ;  Index Type
"RTN","MAGGSIUI",117,0)
 D SA(43,IXPROC)     ;  Index Proc/Event
"RTN","MAGGSIUI",118,0)
 D SA(44,IXSPEC)     ;  Index Spec/SubSpec
"RTN","MAGGSIUI",119,0)
 D SA(45,IXORIGIN)         ;  Index Origin
"RTN","MAGGSIUI",120,0)
 ; Patch 121 allows ACTION of RESCIND
"RTN","MAGGSIUI",121,0)
 D SA("ACTION",ACTION)     ; P121 ACTION=RESCIND
"RTN","MAGGSIUI",122,0)
 ;
"RTN","MAGGSIUI",123,0)
 D VAL^MAGGSIV(.MAGRY,.MAGA,1) I 'MAGRY(0) D ERRTRK Q
"RTN","MAGGSIUI",124,0)
 I MAX D SA(.05,ACQS) ; this used to be fld 105
"RTN","MAGGSIUI",125,0)
 ; Also Done in MAGGSIA when image is being Saved.
"RTN","MAGGSIUI",126,0)
 I '$$VALINDEX^MAGGSIV1(.MAGRY,IXTYPE,IXSPEC,IXPROC) D ERRTRK Q
"RTN","MAGGSIUI",127,0)
 ;   Array of Images to Import
"RTN","MAGGSIUI",128,0)
 D SI("IMAGES",.IMAGES) I 'MAGRY(0) D ERRTRK Q
"RTN","MAGGSIUI",129,0)
 K MAGRY
"RTN","MAGGSIUI",130,0)
 ;
"RTN","MAGGSIUI",131,0)
 I TRTYPE="NOQUEUE" M MAGRY=MAGA S MAGRY(0)="1^" Q
"RTN","MAGGSIUI",132,0)
 ; This call is for BP
"RTN","MAGGSIUI",133,0)
 S QTIME=$$NOW^XLFDT
"RTN","MAGGSIUI",134,0)
 ; p85 use ACQS instead of DUZ(2)
"RTN","MAGGSIUI",135,0)
 S MAGY=$$IMPORT^MAGBAPI(.MAGA,STSCB,TRKID,$$PLACE^MAGBAPI(SITEPLC))
"RTN","MAGGSIUI",136,0)
 ; Return Queue Number
"RTN","MAGGSIUI",137,0)
 I 'MAGY S MAGRY(0)="0^Error Setting Queue: "_$P(MAGY,U,2),MAGY=TRKID
"RTN","MAGGSIUI",138,0)
 E  S MAGRY(0)=MAGY_"^Data has been Queued.",MAGY=+MAGY
"RTN","MAGGSIUI",139,0)
 ; for debugging we'll track input array, and results array by Queue number.
"RTN","MAGGSIUI",140,0)
 I 'MAGRY(0) D ERRTRK Q
"RTN","MAGGSIUI",141,0)
 D LOGRES^MAGGSIU3(.MAGRY,0,APISESS)
"RTN","MAGGSIUI",142,0)
 ;
"RTN","MAGGSIUI",143,0)
 Q
"RTN","MAGGSIUI",144,0)
 ;
"RTN","MAGGSIUI",145,0)
SA(FLD,VAL) ;Set the data array with Fld,Value
"RTN","MAGGSIUI",146,0)
 Q:VAL=""
"RTN","MAGGSIUI",147,0)
 S CT=CT+1,MAGA(CT)=FLD_U_VAL
"RTN","MAGGSIUI",148,0)
 Q
"RTN","MAGGSIUI",149,0)
SI(FLD,ARR) ;Set the images into the data array
"RTN","MAGGSIUI",150,0)
 ; 'CT' is a global variable.
"RTN","MAGGSIUI",151,0)
 S MAGRY(0)="1^Valid Image file Extensions."
"RTN","MAGGSIUI",152,0)
 N I,MAGEXT,MAGFN
"RTN","MAGGSIUI",153,0)
 N RES
"RTN","MAGGSIUI",154,0)
 S I="" F  S I=$O(ARR(I)) Q:I=""  D  Q:'MAGRY(0)
"RTN","MAGGSIUI",155,0)
 . S CT=CT+1
"RTN","MAGGSIUI",156,0)
 . ; special case ACTION=RESCIND
"RTN","MAGGSIUI",157,0)
 . I ACTION="RESCIND" S MAGA(CT)="IMAGE^"_ARR(I) Q
"RTN","MAGGSIUI",158,0)
 . I ($L($P(ARR(I),U),".")<2) S MAGRY(0)="0^Invalid file name: "_ARR(I) Q
"RTN","MAGGSIUI",159,0)
 . S MAGFN=$P(ARR(I),"^")
"RTN","MAGGSIUI",160,0)
 . S MAGEXT=$$UP^XLFSTR($P(MAGFN,".",$L(MAGFN,".")))
"RTN","MAGGSIUI",161,0)
 . K RES
"RTN","MAGGSIUI",162,0)
 . D INFO^MAGGSFT(.RES,MAGEXT)
"RTN","MAGGSIUI",163,0)
 . I 'RES(0) S MAGRY(0)=RES(0) Q
"RTN","MAGGSIUI",164,0)
 . S MAGA(CT)="IMAGE"_U_ARR(I)
"RTN","MAGGSIUI",165,0)
 Q
"RTN","MAGGSIUI",166,0)
GETARR(ARR,QNUM) ;RPC [MAG4 DATA FROM IMPORT QUEUE]
"RTN","MAGGSIUI",167,0)
 ; Get the Input Array from Queue Number
"RTN","MAGGSIUI",168,0)
 I '$G(QNUM) S ARR(0)="0^INVALID QUEUE Number: "_$G(QNUM) Q
"RTN","MAGGSIUI",169,0)
 D IMPAR^MAGQBUT2(.ARR,QNUM)
"RTN","MAGGSIUI",170,0)
 Q
"RTN","MAGGSIUI",171,0)
STATUSCB(MAGRY,STAT,TAGRTN,DOCB) ;RPC [MAG4 STATUS CALLBACK]
"RTN","MAGGSIUI",172,0)
 ; Report Status to calling application
"RTN","MAGGSIUI",173,0)
 ; Now the IAPI and OCX make this call.  Not BP
"RTN","MAGGSIUI",174,0)
 ; STAT(0)= "0^message" or "1^message"
"RTN","MAGGSIUI",175,0)
 ; STAT(1)=TRKID,
"RTN","MAGGSIUI",176,0)
 ;        (2)=QNUM
"RTN","MAGGSIUI",177,0)
 ;        (3..N)=warnings
"RTN","MAGGSIUI",178,0)
 ;TAGRTN                 : The TAG^RTN to call with Status Array
"RTN","MAGGSIUI",179,0)
 ;DOCB                   : (1|0) to suppress execution of Status Callback
"RTN","MAGGSIUI",180,0)
 ; 
"RTN","MAGGSIUI",181,0)
 N APISESS,TRKID,CBMSG
"RTN","MAGGSIUI",182,0)
 S DOCB=$S($G(DOCB)="":1,1:+$G(DOCB)) ;  Default to TRUE
"RTN","MAGGSIUI",183,0)
 ; Old Import API and BP that made this call, will work : DOCB defaults to 1
"RTN","MAGGSIUI",184,0)
 S CBMSG=$S(DOCB:"Status Callback was called",1:"Status Callback was NOT called")
"RTN","MAGGSIUI",185,0)
 I DOCB D @(TAGRTN_"(.STAT)")
"RTN","MAGGSIUI",186,0)
 S MAGRY="1^"_CBMSG
"RTN","MAGGSIUI",187,0)
 S STAT($O(STAT(""),-1)+1)=MAGRY
"RTN","MAGGSIUI",188,0)
 S TRKID=$G(STAT(1))
"RTN","MAGGSIUI",189,0)
 ; Log Results. Always.
"RTN","MAGGSIUI",190,0)
 I $L(TRKID) D
"RTN","MAGGSIUI",191,0)
 . S APISESS=$$SES4TRK^MAGGSIU3(TRKID) ;
"RTN","MAGGSIUI",192,0)
 . I APISESS D LOGRES^MAGGSIU3(.STAT,0,APISESS) ;gek/send Tracking ID to log status
"RTN","MAGGSIUI",193,0)
 Q
"RTN","MAGGSIUI",194,0)
TESTCB(STATARR) ;TESTING.  This is the Status Callback for testing.
"RTN","MAGGSIUI",195,0)
 ; the STATUSCB property must have a Valid "M" TAG^ROUTINE
"RTN","MAGGSIUI",196,0)
 ; TAG TESTCB exists so that STATUSCB validates successfully
"RTN","MAGGSIUI",197,0)
 Q
"RTN","MAGGSIUI",198,0)
ERRTRK ;Track bad data and Quit
"RTN","MAGGSIUI",199,0)
 N I
"RTN","MAGGSIUI",200,0)
 D LOGERR^MAGGSERR("---- New Error ----",APISESS)
"RTN","MAGGSIUI",201,0)
 S I="" F  S I=$O(MAGRY(I)) Q:I=""  D LOGERR^MAGGSERR(MAGRY(I),APISESS)
"RTN","MAGGSIUI",202,0)
 Q
"RTN","MAGGSIUI",203,0)
DATATRK ; Track the raw data being sent to the Import API.
"RTN","MAGGSIUI",204,0)
 ; Log the data being imported.  Results are logged later.
"RTN","MAGGSIUI",205,0)
 N XY
"RTN","MAGGSIUI",206,0)
 S APISESS=$$LOG^MAGGSIU3(.XY,.MAGIXZ,.IMAGES,IDFN,ACQD,TRKID)
"RTN","MAGGSIUI",207,0)
 Q
"RTN","MAGGSIUI",208,0)
ERR ; ERROR TRAP FOR Import API
"RTN","MAGGSIUI",209,0)
 N ERR S ERR=$$EC^%ZOSV
"RTN","MAGGSIUI",210,0)
 S MAGRY(0)="0^ETRAP: "_ERR
"RTN","MAGGSIUI",211,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGSIUI",212,0)
 I $G(APISESS) D ERRTRK
"RTN","MAGGSIUI",213,0)
 Q
"RTN","MAGGSIUI",214,0)
 ; Patch 108
"RTN","MAGGSIUI",215,0)
GETIAPID(OUT,TRKID) ; Returns Import API data in OUT array from file (#2006.82) by tracking ID
"RTN","MAGGSIUI",216,0)
 ; OUT(FIELD)=VALUE
"RTN","MAGGSIUI",217,0)
 N I,X,Y,SNUM,VAL1
"RTN","MAGGSIUI",218,0)
 S SNUM=$O(^MAG(2006.82,"E",TRKID,""),-1)  ; Get the last recording for this TRKID
"RTN","MAGGSIUI",219,0)
 I 'SNUM Q  ; no data found
"RTN","MAGGSIUI",220,0)
 ; Patch 121/ gek Add the Return of the 'Image:' Data
"RTN","MAGGSIUI",221,0)
 S I=1
"RTN","MAGGSIUI",222,0)
 F  S I=$O(^MAG(2006.82,SNUM,"ACT",I)) Q:I'?1N.N  D
"RTN","MAGGSIUI",223,0)
 . S VAL1=$G(^MAG(2006.82,SNUM,"ACT",I,0))
"RTN","MAGGSIUI",224,0)
 . I VAL1="Data:" D
"RTN","MAGGSIUI",225,0)
 . . S X=$G(^MAG(2006.82,SNUM,"ACT",I,1))
"RTN","MAGGSIUI",226,0)
 . . S Y=$TR($P(X,":"),"()","")
"RTN","MAGGSIUI",227,0)
 . . S:Y'="" OUT(Y)=$P(X,": ",2,999)
"RTN","MAGGSIUI",228,0)
 . . Q
"RTN","MAGGSIUI",229,0)
 . I VAL1="Image:" D
"RTN","MAGGSIUI",230,0)
 . . S X=$G(^MAG(2006.82,SNUM,"ACT",I,1))
"RTN","MAGGSIUI",231,0)
 . . S Y=$TR($P(X,":"),"()","")
"RTN","MAGGSIUI",232,0)
 . . S:Y'="" OUT("IMAGE",Y)=$P(X,": ",2,999)
"RTN","MAGGSIUI",233,0)
 . . Q
"RTN","MAGGSIUI",234,0)
 . Q
"RTN","MAGGSIUI",235,0)
 Q
"RTN","MAGGSIV")
0^5^B57664823
"RTN","MAGGSIV",1,0)
MAGGSIV ;WOIFO/GEK/NST - Imaging RPC Broker calls. Validate Image data array ; [ 12/27/2000 10:49 ]
"RTN","MAGGSIV",2,0)
 ;;3.0;IMAGING;**7,8,20,59,108,121**;Mar 19, 2002;Build 2340;Oct 20, 2011
"RTN","MAGGSIV",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGSIV",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIV",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIV",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIV",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIV",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIV",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIV",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIV",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIV",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIV",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIV",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIV",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIV",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIV",17,0)
 ;;
"RTN","MAGGSIV",18,0)
 Q
"RTN","MAGGSIV",19,0)
VAL(MAGRY,MAGARRAY,ALL) ;RPC [MAG4 VALIDATE DATA]
"RTN","MAGGSIV",20,0)
 ;Call to Validate the Image Data Array before a new image/modified entry is attempted.  
"RTN","MAGGSIV",21,0)
 ; Called from MAGGSIA, MAGGSIUI and Capture GUI.
"RTN","MAGGSIV",22,0)
 ;  Parameters : 
"RTN","MAGGSIV",23,0)
 ;    MAGARRAY - array of 'Field numbers'|'Action codes'  and their Values 
"RTN","MAGGSIV",24,0)
 ;                     MAGARRAY(1)="5^38"  Field#:  5   Value: 38
"RTN","MAGGSIV",25,0)
 ;         an example of an action code is the Code for File Extension    
"RTN","MAGGSIV",26,0)
 ;                     MAGARRAY(2)="EXT^JPG"  Action: EXT Value: JPG                        
"RTN","MAGGSIV",27,0)
 ;    ALL - "1" = Validate ALL fields, returning an array of error messages.
"RTN","MAGGSIV",28,0)
 ;          "0" = Stop validating if an error occurs, return
"RTN","MAGGSIV",29,0)
 ;                           the error message in (0) node.
"RTN","MAGGSIV",30,0)
 ;  Return Variable
"RTN","MAGGSIV",31,0)
 ;    MAGRY() - Array
"RTN","MAGGSIV",32,0)
 ;      Successful   MAGRY(0) = 1^Image Data is Valid.
"RTN","MAGGSIV",33,0)
 ;      UNsuccessful MAGRY(0) = 0^Error desc
"RTN","MAGGSIV",34,0)
 ;                   IF ALL then MAGRY(1..N) =0^Error desc of all errors
"RTN","MAGGSIV",35,0)
 N MAGGFLD,MAGGDAT,MAGFSPEC,CHKOK,MAGETXT,MAGRET,MAGRES
"RTN","MAGGSIV",36,0)
 N Y,AITEM,CT,MAGERR,DFNFLAG,DAT1,X,MAX
"RTN","MAGGSIV",37,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^"_$T(+0)
"RTN","MAGGSIV",38,0)
 S ALL=$G(ALL)
"RTN","MAGGSIV",39,0)
 S MAGRY(0)="0^Validating the Data Array..."
"RTN","MAGGSIV",40,0)
 S MAGERR="",DFNFLAG=0,CT=0
"RTN","MAGGSIV",41,0)
 ;  Do we have any data ? 
"RTN","MAGGSIV",42,0)
 I ($D(MAGARRAY)<10) S MAGRY(0)="0^No input data, Operation CANCELED" Q
"RTN","MAGGSIV",43,0)
 ;  Flag if from Maximus
"RTN","MAGGSIV",44,0)
 S MAX=0
"RTN","MAGGSIV",45,0)
 S X="" F  S X=$O(MAGARRAY(X)) Q:X=""  I $P(MAGARRAY(X),U,1)="TRKID"!($P(MAGARRAY(X),U,1)="108") I $P($P(MAGARRAY(X),U,2),";",1)="MAX" S MAX=1
"RTN","MAGGSIV",46,0)
 ;  Loop through Input Array
"RTN","MAGGSIV",47,0)
 S AITEM="" F  S AITEM=$O(MAGARRAY(AITEM)) Q:AITEM=""  D  I $L(MAGERR) Q:'ALL  S CT=CT+1,MAGRY(CT)=MAGERR,MAGERR=""
"RTN","MAGGSIV",48,0)
 . S MAGERR=""
"RTN","MAGGSIV",49,0)
 . S MAGGFLD=$P(MAGARRAY(AITEM),U,1),MAGGDAT=$P(MAGARRAY(AITEM),U,2,99)
"RTN","MAGGSIV",50,0)
 . I MAGGFLD="" S MAGERR="0^A Field Number/Action Code is required: "_" Item: "_MAGARRAY(AITEM) Q
"RTN","MAGGSIV",51,0)
 . I MAGGDAT="" S MAGERR="0^A Value is required."_" Item: "_MAGARRAY(AITEM) Q
"RTN","MAGGSIV",52,0)
 . I MAGGFLD=5 S DFNFLAG=1
"RTN","MAGGSIV",53,0)
 . ; This inadvertently disallowed Tracking ID's on Group Images.
"RTN","MAGGSIV",54,0)
 . ;I MAGGFLD=108 I $D(^MAG(2005,"ATRKID",MAGGDAT)) S MAGERR="0^Tracking ID Must be Unique !" Q
"RTN","MAGGSIV",55,0)
 . I MAGGFLD=108 I ($L(MAGGDAT,";")<2) S MAGRY(0)="0^Tracking ID Must have "";"" Delimiter" Q
"RTN","MAGGSIV",56,0)
 . ; Check for possible action codes that could be in the array.
"RTN","MAGGSIV",57,0)
 . I $$ACTCODE(MAGGFLD) D  Q
"RTN","MAGGSIV",58,0)
 . . S DAT1=MAGGDAT
"RTN","MAGGSIV",59,0)
 . . S Y=$$VALCODE(MAGGFLD,.MAGGDAT) S:'Y MAGERR=Y_" Item: "_MAGARRAY(AITEM)
"RTN","MAGGSIV",60,0)
 . . I DAT1'=MAGGDAT S MAGARRAY(AITEM)=MAGGFLD_"^"_MAGGDAT
"RTN","MAGGSIV",61,0)
 . ; If we are adding Multiple Images to a Group, they must be Validated.
"RTN","MAGGSIV",62,0)
 . ;   we could have multiple "2005.04^IENs" in this array. Which means we are 
"RTN","MAGGSIV",63,0)
 . ;   adding existing Images to a New/Existing Group.
"RTN","MAGGSIV",64,0)
 . I MAGGFLD=2005.04 D  Q  ; 2005.04 isn't the field number, #4 is the field number
"RTN","MAGGSIV",65,0)
 . . I $G(MAGGDAT,0)=0 Q  ;Creating a new Group, with no group entries is the usual way
"RTN","MAGGSIV",66,0)
 . . ; to do it.  Then make successive calls to ADD, Adding each Image to the 
"RTN","MAGGSIV",67,0)
 . . ; Object Group multiple of the Group Parent (fld#14) as it is created.
"RTN","MAGGSIV",68,0)
 . . I '$D(^MAG(2005,MAGGDAT,0)) S MAGERR="0^Group Object "_MAGGDAT_" doesn't exist"_" Item: "_MAGARRAY(AITEM)
"RTN","MAGGSIV",69,0)
 . . ;  We can't allow adding an image if it already has a group parent.
"RTN","MAGGSIV",70,0)
 . . I $P(^MAG(2005,MAGGDAT,0),U,10) S MAGERR="0^The Image to be added to the Group, already has a Group Parent"_" Item: "_MAGARRAY(AITEM)
"RTN","MAGGSIV",71,0)
 . ; if we are getting a WP line of text for Long Desc Field.  Can't validate it.
"RTN","MAGGSIV",72,0)
 . I MAGGFLD=11 Q  ; this is a line of the WP Long Desc field.
"RTN","MAGGSIV",73,0)
 . I (MAGGFLD=17),(MAGGDAT=0) Q  ; Patch 108 BP work around don't check -  a new TIU stub will be created 
"RTN","MAGGSIV",74,0)
 . I MAGGFLD="ACTION" Q  ; Patch 121  new ACTION Field, we skip.
"RTN","MAGGSIV",75,0)
 . ; NEW CALL TO VALIDATE FILE,FIELD,DATA 
"RTN","MAGGSIV",76,0)
 . S DAT1=MAGGDAT
"RTN","MAGGSIV",77,0)
 . I '$$VALID^MAGGSIV1(2005,MAGGFLD,.MAGGDAT,.MAGRES) S MAGERR="0^"_MAGRES Q
"RTN","MAGGSIV",78,0)
 . I DAT1'=MAGGDAT S MAGARRAY(AITEM)=MAGGFLD_"^"_MAGGDAT
"RTN","MAGGSIV",79,0)
 . Q
"RTN","MAGGSIV",80,0)
 ;
"RTN","MAGGSIV",81,0)
 ; if there was an Error in data we'll quit now.
"RTN","MAGGSIV",82,0)
 ; If ALL is true, then MAGRY(1...N) will exist if there were errors.
"RTN","MAGGSIV",83,0)
 I $O(MAGRY(0)) S MAGRY(0)="0^Errors were found in data." Q
"RTN","MAGGSIV",84,0)
 ; If ALL is false, then MAGERR will exist if there was an error.
"RTN","MAGGSIV",85,0)
 I $L(MAGERR) S MAGRY(0)=MAGERR Q
"RTN","MAGGSIV",86,0)
 ;
"RTN","MAGGSIV",87,0)
 ;  If all data is valid we get here.
"RTN","MAGGSIV",88,0)
 ;  Last Test, see if a Patient was in array, 
"RTN","MAGGSIV",89,0)
 ;  (Patient is the only Required field check done in this routine).
"RTN","MAGGSIV",90,0)
 I 'DFNFLAG S MAGRY(0)="0^A Patient DFN is required. " Q
"RTN","MAGGSIV",91,0)
 S MAGRY(0)="1^Data is Valid."
"RTN","MAGGSIV",92,0)
 Q
"RTN","MAGGSIV",93,0)
ACTCODE(CODE) ;Function that returns True (1) if this code is a valid Import API Action Code
"RTN","MAGGSIV",94,0)
 ; Patch 8.  We're adding 107 as an action code, so it will pass validation even if the entry
"RTN","MAGGSIV",95,0)
 ;   in the Acquisition Device File doesn't exist;
"RTN","MAGGSIV",96,0)
 ;   it will be validated in PRE^MAGGSIA1 and a new Acquisition Device entry made if needed.
"RTN","MAGGSIV",97,0)
 I $E(CODE,1,8)="PXTIUTXT" Q 1 ; P108
"RTN","MAGGSIV",98,0)
 I ",107,PXSGNTYP,PXTIUTCNT,PXNEW,PXTIUTTL,ACQD,IEN,EXT,ABS,JB,WRITE,BIG,"[(","_CODE_",") Q 1
"RTN","MAGGSIV",99,0)
 I ",DICOMSN,DICOMIN,ACQS,ACQL,STATUSCB,CALLMTH,USERNAME,PASSWORD,DELFLAG,TRNSTYP,"[(","_CODE_",") Q 1
"RTN","MAGGSIV",100,0)
 I ",ACTION,"[(","_CODE_",") Q 1
"RTN","MAGGSIV",101,0)
 Q 0
"RTN","MAGGSIV",102,0)
VALCODE(CODE,VALUE) ; We validate the values for the possible action codes
"RTN","MAGGSIV",103,0)
 N MAGY
"RTN","MAGGSIV",104,0)
 I VALUE="" Q "0^NO VALUE in Action Code string: """_X_""
"RTN","MAGGSIV",105,0)
 ; Patch 8, added 107 
"RTN","MAGGSIV",106,0)
 I ",ACQL,CALLMTH,USERNAME,PASSWORD,"[(","_CODE_",") Q 1 ; NO VALIDATION FOR THESE CODES
"RTN","MAGGSIV",107,0)
 I ($E(CODE,1,8)="PXTIUTXT")!(CODE="PXTIUTCNT") Q 1  ; NO VALIDATION FOR TIU TEXT 
"RTN","MAGGSIV",108,0)
 D @CODE
"RTN","MAGGSIV",109,0)
 Q MAGY
"RTN","MAGGSIV",110,0)
 ;  Each Tag is a valid Action code
"RTN","MAGGSIV",111,0)
IEN I $D(^MAG(2005,VALUE)) S MAGY=1
"RTN","MAGGSIV",112,0)
 E  S MAGY="0^INVALID IMAGE IEN."
"RTN","MAGGSIV",113,0)
 Q
"RTN","MAGGSIV",114,0)
ACTION ; Patch 121 ACTION = "RESCIND"
"RTN","MAGGSIV",115,0)
 I VALUE="RESCIND" S MAGY=1 Q
"RTN","MAGGSIV",116,0)
 S MAGY="0^Invalid ACTION: "_VALUE
"RTN","MAGGSIV",117,0)
 Q
"RTN","MAGGSIV",118,0)
PXNEW ; New Package (TIU note)
"RTN","MAGGSIV",119,0)
 I (PXNEW'=0),(PXNEW'=1),(PXNEW'="") D
"RTN","MAGGSIV",120,0)
 . S MAGY="0^Invalid New Package Value."
"RTN","MAGGSIV",121,0)
 . S CT=CT+1,MAGRY(CT)="Invalid PXNEW value - 0, 1, or blank only!"
"RTN","MAGGSIV",122,0)
 E  S MAGY=1
"RTN","MAGGSIV",123,0)
 Q
"RTN","MAGGSIV",124,0)
PXSGNTYP ; Signature type
"RTN","MAGGSIV",125,0)
 I (PXSGNTYP'=0),(PXSGNTYP'=1),(PXSGNTYP'="") D
"RTN","MAGGSIV",126,0)
 . S MAGY="0^Invalid Signature type Value."
"RTN","MAGGSIV",127,0)
 . S CT=CT+1,MAGRY(CT)="Invalid PXSGNTYP value - 0, 1, or blank only!"
"RTN","MAGGSIV",128,0)
 E  S MAGY=1
"RTN","MAGGSIV",129,0)
 Q
"RTN","MAGGSIV",130,0)
PXTIUTTL ; Check for valid TIU title
"RTN","MAGGSIV",131,0)
 N VALIEN
"RTN","MAGGSIV",132,0)
 I $$GETTIUDA^MAGGSIV(.MAGY,VALUE,.VALIEN) S VALUE=VALIEN
"RTN","MAGGSIV",133,0)
 Q
"RTN","MAGGSIV",134,0)
EXT ; code will go here to validate the extension type.  i.e. we won't let types .exe .bat .com .zip ... etc.
"RTN","MAGGSIV",135,0)
 ;  Maybe a modification to Object Type file, to have allowable extensions in the file, and a 
"RTN","MAGGSIV",136,0)
 ;  cross reference on a new field EXTENSION.  The capture workstation wouldn't have to ask the 
"RTN","MAGGSIV",137,0)
 ; user for the file type of each file, and we wouldn't get WORD .DOC files that the user called Color Images
"RTN","MAGGSIV",138,0)
ABS ; Meaning: Have the BP create the abstract
"RTN","MAGGSIV",139,0)
JB ; Meaning: Have the BP copy the image to the JukeBox
"RTN","MAGGSIV",140,0)
BIG ; Meaning: There is a big file also, set the Image File field ? to indicate there is a BIG File.
"RTN","MAGGSIV",141,0)
 S MAGY=1
"RTN","MAGGSIV",142,0)
 Q
"RTN","MAGGSIV",143,0)
WRITE ; Meaning: This is the Internal Entry (or "PACS") of the WRITE Directory. Images will be written
"RTN","MAGGSIV",144,0)
 ; here instead of the default WRITE Directory.
"RTN","MAGGSIV",145,0)
 S MAGY=$$DRIVE^MAGGTU1(VALUE)
"RTN","MAGGSIV",146,0)
 Q
"RTN","MAGGSIV",147,0)
DICOMSN ;Meaning: DICOM Series Number.  This will be entered in the Group Object multiple, field #1
"RTN","MAGGSIV",148,0)
 ;We were validating this as an integer, but it can be anything, no way to validate.
"RTN","MAGGSIV",149,0)
 S MAGY=1
"RTN","MAGGSIV",150,0)
 Q
"RTN","MAGGSIV",151,0)
DICOMIN ;Meaning: DICOM Image Number.  This will be entered in the Group Object multiple, field #2
"RTN","MAGGSIV",152,0)
 ; We were validating this as an integer, but it can be anything, no way to validate.
"RTN","MAGGSIV",153,0)
 S MAGY=1
"RTN","MAGGSIV",154,0)
 Q
"RTN","MAGGSIV",155,0)
DELFLAG ;Meaning: This flag tells the Delphi Import Component to Delete the Image files after successful processing
"RTN","MAGGSIV",156,0)
 I ",TRUE,FALSE,0,1,"[(","_$$UPPER(VALUE)_",") S MAGY=1
"RTN","MAGGSIV",157,0)
 E  S MAGY="0^INVALID Value "
"RTN","MAGGSIV",158,0)
 I VALUE="1" S VALUE="TRUE"
"RTN","MAGGSIV",159,0)
 I VALUE="0" S VALUE="FALSE"
"RTN","MAGGSIV",160,0)
 Q
"RTN","MAGGSIV",161,0)
TRNSTYP ;Meaning: This flag is for future use, for now it is ignored, defaults to "NEW"
"RTN","MAGGSIV",162,0)
 S MAGY=1
"RTN","MAGGSIV",163,0)
 Q
"RTN","MAGGSIV",164,0)
STATUSCB ; Meaning: This is the TAG^RTN that Imaging calls to report the 
"RTN","MAGGSIV",165,0)
 ; status of the Import.
"RTN","MAGGSIV",166,0)
 S MAGY="0^Error validating TAG^RTN: "_VALUE
"RTN","MAGGSIV",167,0)
 I '$L($T(@VALUE)) S MAGY="0^Invalid Status CallBack "_VALUE
"RTN","MAGGSIV",168,0)
 E  S MAGY=1
"RTN","MAGGSIV",169,0)
 Q
"RTN","MAGGSIV",170,0)
ACQS ; We need to make sure the ACQS (Acquisition Site) is a Valid entry in Imaging Site Params.
"RTN","MAGGSIV",171,0)
 S VALUE=$P(VALUE,";") ; Stop error, when old OCX sends data.
"RTN","MAGGSIV",172,0)
 ; Next Block is for VIC (Maximus) that sends Station Number.
"RTN","MAGGSIV",173,0)
 N ERR S ERR=0
"RTN","MAGGSIV",174,0)
 I MAX D  Q:ERR
"RTN","MAGGSIV",175,0)
 . S X=$O(^DIC(4,"D",VALUE,""))
"RTN","MAGGSIV",176,0)
 . I X="" S MAGY="0^Invalid STATION NUMBER: (ACQS): "_VALUE,ERR=1 Q
"RTN","MAGGSIV",177,0)
 . S VALUE=X
"RTN","MAGGSIV",178,0)
 . Q
"RTN","MAGGSIV",179,0)
 I '$$CONSOLID^MAGBAPI S MAGY=1 Q
"RTN","MAGGSIV",180,0)
 ;Patch 20 will have this.
"RTN","MAGGSIV",181,0)
 I '$D(^MAG(2006.1,"B",VALUE)) S MAGY="0^Acquisition Site ("_VALUE_") is Not in Site Param File." Q
"RTN","MAGGSIV",182,0)
 S MAGY=1
"RTN","MAGGSIV",183,0)
 Q
"RTN","MAGGSIV",184,0)
107 ;    107 and ACQD are the same.  Calling 107 falls into validation for ACQD.
"RTN","MAGGSIV",185,0)
ACQD ; 107 and ACQD are ACQUISITION DEVICE FILE (2006.04) pointers or Values.
"RTN","MAGGSIV",186,0)
 ; If it is an integer, We assume the value is an IEN and validate it here.
"RTN","MAGGSIV",187,0)
 I ((+VALUE)=VALUE),'$D(^MAG(2006.04,VALUE)) S MAGY="0^Invalid IEN ("_VALUE_") for ACQUISITION DEVICE File." Q
"RTN","MAGGSIV",188,0)
 ; if it is not an integer, it is either a new/existing entry for 2006.04 Result is Success,
"RTN","MAGGSIV",189,0)
 ;       and it will be validated in PRE^MAGGSIA1 and added to File 2006.04 if needed.
"RTN","MAGGSIV",190,0)
 S MAGY=1
"RTN","MAGGSIV",191,0)
 Q
"RTN","MAGGSIV",192,0)
UPPER(X) ;
"RTN","MAGGSIV",193,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","MAGGSIV",194,0)
 ;
"RTN","MAGGSIV",195,0)
ERR ; ERROR TRAP FOR Import API
"RTN","MAGGSIV",196,0)
 N ERR S ERR=$$EC^%ZOSV
"RTN","MAGGSIV",197,0)
 S MAGRY(0)="0^ETRAP: "_ERR
"RTN","MAGGSIV",198,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGSIV",199,0)
 Q
"RTN","MAGGSIV",200,0)
 ;
"RTN","MAGGSIV",201,0)
 ;***** Verify and return TIU Title IEN
"RTN","MAGGSIV",202,0)
 ;
"RTN","MAGGSIV",203,0)
 ; Input Parameters
"RTN","MAGGSIV",204,0)
 ; ================
"RTN","MAGGSIV",205,0)
 ; TITLE - an Integer (the IEN of file 8925.1)  or Text value of the entry in 8925.1 
"RTN","MAGGSIV",206,0)
 ;  
"RTN","MAGGSIV",207,0)
 ; Return Values
"RTN","MAGGSIV",208,0)
 ; =============
"RTN","MAGGSIV",209,0)
 ; Returns 0 if TITLE is valid
"RTN","MAGGSIV",210,0)
 ; Returns 1 if TITLE is not valid
"RTN","MAGGSIV",211,0)
 ;
"RTN","MAGGSIV",212,0)
 ; if TITLE is not valid then MAGY = "0^error message"
"RTN","MAGGSIV",213,0)
 ; if TITLE is valid then MAGY = 1 and TIEN = TIU Title IEN
"RTN","MAGGSIV",214,0)
 ;
"RTN","MAGGSIV",215,0)
GETTIUDA(MAGY,TITLE,TIEN) ;
"RTN","MAGGSIV",216,0)
 I TITLE="" S MAGY="0^Invalid data: Note TITLE is blank!" Q 0
"RTN","MAGGSIV",217,0)
 ; Is TITLE integer (IEN)
"RTN","MAGGSIV",218,0)
 I TITLE?1.N D  Q +MAGY
"RTN","MAGGSIV",219,0)
 . I $D(^TIU(8925.1,"AT","DOC",TITLE)) S MAGY=1 S TIEN=TITLE Q
"RTN","MAGGSIV",220,0)
 . S MAGY="0^Invalid data: Note TITLE ("_TITLE_") is invalid"
"RTN","MAGGSIV",221,0)
 . Q
"RTN","MAGGSIV",222,0)
 N DONE
"RTN","MAGGSIV",223,0)
 S (DONE,TIEN)=""
"RTN","MAGGSIV",224,0)
 S TITLE=$$UP^XLFSTR(TITLE) ; IA #10104
"RTN","MAGGSIV",225,0)
 F  Q:DONE  S TIEN=$O(^TIU(8925.1,"B",TITLE,TIEN)) Q:TIEN=""  D
"RTN","MAGGSIV",226,0)
 . I $D(^TIU(8925.1,"AT","DOC",TIEN)) S DONE=1
"RTN","MAGGSIV",227,0)
 . Q
"RTN","MAGGSIV",228,0)
 I DONE S MAGY=1 ; TIEN is already set
"RTN","MAGGSIV",229,0)
 E  S MAGY="0^Invalid data: TITLE IEN ("_TITLE_") is invalid"
"RTN","MAGGSIV",230,0)
 Q +MAGY
"RTN","MAGIP121")
0^^B7990393
"RTN","MAGIP121",1,0)
MAGIP121 ;WOIFO/NST/GEK - INSTALL CODE FOR MAG*3.0*121 ; 22 Feb 2011 12:32 PM
"RTN","MAGIP121",2,0)
 ;;3.0;IMAGING;**121**;Mar 19, 2002;Build 2340;Oct 20, 2011
"RTN","MAGIP121",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGIP121",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGIP121",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGIP121",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGIP121",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGIP121",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGIP121",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGIP121",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGIP121",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGIP121",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGIP121",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGIP121",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGIP121",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGIP121",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGIP121",17,0)
 ;;
"RTN","MAGIP121",18,0)
 ; There are no environment checks here but the MAGIP121 has to be
"RTN","MAGIP121",19,0)
 ; referenced by the "Environment Check Routine" field of the KIDS
"RTN","MAGIP121",20,0)
 ; build so that entry points of the routine are available to the
"RTN","MAGIP121",21,0)
 ; KIDS during all installation phases.
"RTN","MAGIP121",22,0)
 ;
"RTN","MAGIP121",23,0)
 Q
"RTN","MAGIP121",24,0)
 ;
"RTN","MAGIP121",25,0)
 ;+++++ INSTALLATION ERROR HANDLING
"RTN","MAGIP121",26,0)
ERROR ;
"RTN","MAGIP121",27,0)
 S:$D(XPDNM) XPDABORT=1
"RTN","MAGIP121",28,0)
 ;--- Display the messages and store them to the INSTALL file
"RTN","MAGIP121",29,0)
 D DUMP^MAGUERR1(),ABTMSG^MAGKIDS()
"RTN","MAGIP121",30,0)
 Q
"RTN","MAGIP121",31,0)
 ;
"RTN","MAGIP121",32,0)
 ;***** POST-INSTALL CODE
"RTN","MAGIP121",33,0)
POS ;
"RTN","MAGIP121",34,0)
 N CALLBACK
"RTN","MAGIP121",35,0)
 D CLEAR^MAGUERR(1)
"RTN","MAGIP121",36,0)
 ;
"RTN","MAGIP121",37,0)
 ;--- Link new remote procedures to the Broker context option
"RTN","MAGIP121",38,0)
 ;S CALLBACK="$$ADDRPCS^"_$NA(MAGKIDS1("RPCLST^"_$T(+0),"MAG WINDOWS"))
"RTN","MAGIP121",39,0)
 ;I $$CP^MAGKIDS("MAG ATTACH RPCS",CALLBACK)<0  D ERROR  Q
"RTN","MAGIP121",40,0)
 ;
"RTN","MAGIP121",41,0)
 ;--- Restart the Imaging Utilization Report task
"RTN","MAGIP121",42,0)
 I $$CP^MAGKIDS("MAG REPORT TASK","$$RPTSKCP^"_$T(+0))<0  D ERROR  Q
"RTN","MAGIP121",43,0)
 ;
"RTN","MAGIP121",44,0)
 ;--- Misc Updates
"RTN","MAGIP121",45,0)
 ;I $$CP^MAGKIDS("MAG 121 MISC UPDATES ","$$UPDATE^"_$T(+0))<0  D ERROR Q
"RTN","MAGIP121",46,0)
 ;
"RTN","MAGIP121",47,0)
 ;--- Send the notification e-mail
"RTN","MAGIP121",48,0)
 I $$CP^MAGKIDS("MAG NOTIFICATION","$$NOTIFY^MAGKIDS1")<0  D ERROR  Q
"RTN","MAGIP121",49,0)
 ;
"RTN","MAGIP121",50,0)
 ;--- Adding new Reason to the MAG REASONS file for 'Rescinded TIU Note'.
"RTN","MAGIP121",51,0)
 D BMES^MAGKIDS("Adding new Reason to the MAG REASONS file.")
"RTN","MAGIP121",52,0)
 D ADDREAS
"RTN","MAGIP121",53,0)
 Q
"RTN","MAGIP121",54,0)
 ;
"RTN","MAGIP121",55,0)
 ;***** PRE-INSTALL CODE
"RTN","MAGIP121",56,0)
PRE ;
"RTN","MAGIP121",57,0)
 Q
"RTN","MAGIP121",58,0)
 ;
"RTN","MAGIP121",59,0)
 ;+++++ LIST OF NEW REMOTE PROCEDURES
"RTN","MAGIP121",60,0)
 ; have a list in format ;;MAG4 IMAGE LIST
"RTN","MAGIP121",61,0)
RPCLST ;
"RTN","MAGIP121",62,0)
 ;
"RTN","MAGIP121",63,0)
 Q 0
"RTN","MAGIP121",64,0)
 ;
"RTN","MAGIP121",65,0)
 ;+++++ RESTARTS THE IMAGING UTILIZATION REPORT TASK
"RTN","MAGIP121",66,0)
RPTSKCP() ;
"RTN","MAGIP121",67,0)
 D REMTASK^MAGQE4,STTASK^MAGQE4
"RTN","MAGIP121",68,0)
 Q 0
"RTN","MAGIP121",69,0)
 ;
"RTN","MAGIP121",70,0)
 ;+++++ Adds an entry to the MAG REASON File (#2005.88)
"RTN","MAGIP121",71,0)
ADDREAS ; Add new entry "Rescinded TIU Note"
"RTN","MAGIP121",72,0)
 ; NAME - value for field (#.01) MAG REASON File (#2005.88)
"RTN","MAGIP121",73,0)
 N MAGFDA,MAGERR,MAGWP,REASON,MAGCODE
"RTN","MAGIP121",74,0)
 S REASON="Rescinded TIU Note"
"RTN","MAGIP121",75,0)
 ; Quit if already exist.
"RTN","MAGIP121",76,0)
 I $D(^MAG(2005.88,"B",REASON)) Q
"RTN","MAGIP121",77,0)
 S MAGWP(1)="The TIU Note has been Rescinded." ; 
"RTN","MAGIP121",78,0)
 S MAGFDA(2005.88,"+1,",.01)=REASON
"RTN","MAGIP121",79,0)
 S MAGFDA(2005.88,"+1,",.02)="SD" ; Status and Deleted 
"RTN","MAGIP121",80,0)
 S MAGFDA(2005.88,"+1,",1)="MAGWP"
"RTN","MAGIP121",81,0)
 S MAGCODE=$P(^MAG(2005.88,0),"^",3)+1
"RTN","MAGIP121",82,0)
 S MAGFDA(2005.88,"+1,",.04)=MAGCODE
"RTN","MAGIP121",83,0)
 D UPDATE^DIE("","MAGFDA","","MAGERR")
"RTN","MAGIP121",84,0)
 I $D(MAGERR) D
"RTN","MAGIP121",85,0)
 . D BMES^MAGKIDS("Error creating new MAG REASON entry")
"RTN","MAGIP121",86,0)
 . Q
"RTN","MAGIP121",87,0)
 Q
"RTN","MAGQBUT4")
0^6^B92803022
"RTN","MAGQBUT4",1,0)
MAGQBUT4 ;WOIFO/RMP - BP Utilities ; 18 Jan 2011 5:17 PM
"RTN","MAGQBUT4",2,0)
 ;;3.0;IMAGING;**7,8,48,20,81,39,121**;Mar 19, 2002;Build 2340;Oct 20, 2011
"RTN","MAGQBUT4",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGQBUT4",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBUT4",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGQBUT4",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGQBUT4",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGQBUT4",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGQBUT4",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGQBUT4",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGQBUT4",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGQBUT4",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGQBUT4",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGQBUT4",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGQBUT4",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGQBUT4",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBUT4",17,0)
 ;;
"RTN","MAGQBUT4",18,0)
 ;
"RTN","MAGQBUT4",19,0)
 Q
"RTN","MAGQBUT4",20,0)
CONV(ARR,ICT) ;Convert any single node array to FM Style multiple
"RTN","MAGQBUT4",21,0)
 ;  The node subscripts of ARR are ignored, and not retained
"RTN","MAGQBUT4",22,0)
 ; i.e.  ARR(34)=8
"RTN","MAGQBUT4",23,0)
 ;       ARR("BLUE")=9
"RTN","MAGQBUT4",24,0)
 ;       ARR("D")=10
"RTN","MAGQBUT4",25,0)
 ; converts to
"RTN","MAGQBUT4",26,0)
 ;      ARR(1,0)=8
"RTN","MAGQBUT4",27,0)
 ;      ARR(2,0)=9
"RTN","MAGQBUT4",28,0)
 ;      ARR(3,0)=10
"RTN","MAGQBUT4",29,0)
 N I,ARO
"RTN","MAGQBUT4",30,0)
 S ICT=0,I=""
"RTN","MAGQBUT4",31,0)
 F  S I=$O(ARR(I)) Q:(I="")  D
"RTN","MAGQBUT4",32,0)
 . S ICT=ICT+1
"RTN","MAGQBUT4",33,0)
 . S ARO(ICT,0)=ARR(I)
"RTN","MAGQBUT4",34,0)
 K ARR
"RTN","MAGQBUT4",35,0)
 M ARR=ARO
"RTN","MAGQBUT4",36,0)
 Q
"RTN","MAGQBUT4",37,0)
MRGMULT(ARR,RT,RTDSC,CT) ;Merge the FM formatted array into a FM File
"RTN","MAGQBUT4",38,0)
 ;   multiple field.
"RTN","MAGQBUT4",39,0)
 ;   This isn't for general consumption.
"RTN","MAGQBUT4",40,0)
 ; RT = FILE ROOT, RECORD NUMBER, NODE
"RTN","MAGQBUT4",41,0)
 ; i.e.  "^MAG(2006.034,44,1,"   -> 44 is the IEN of MAG(2006.34
"RTN","MAGQBUT4",42,0)
 ; RTDSC is the 2nd piece of the 0 node of the multiple field.
"RTN","MAGQBUT4",43,0)
 S RT=$E(RT,1,$L(RT)-1)_")"
"RTN","MAGQBUT4",44,0)
 S @RT@(0)=U_RTDSC_U_CT_U_CT ;  i.e.    ^2006.341A^13^13
"RTN","MAGQBUT4",45,0)
 M @RT=ARR
"RTN","MAGQBUT4",46,0)
 Q
"RTN","MAGQBUT4",47,0)
DDLF(RESULTS,FILE,FIELD,FLAGS,ATTR) ;[MAG FLD ATT]
"RTN","MAGQBUT4",48,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",49,0)
 K X
"RTN","MAGQBUT4",50,0)
 N I
"RTN","MAGQBUT4",51,0)
 D FIELD^DID(FILE,FIELD,FLAGS,ATTR,"RESULTS","RESULTS")
"RTN","MAGQBUT4",52,0)
 S I=0 F  S I=I+1 Q:'$D(RESULTS(ATTR,I))  M RESULTS(I)=RESULTS(ATTR,I)
"RTN","MAGQBUT4",53,0)
 Q
"RTN","MAGQBUT4",54,0)
DDFA(RESULTS) ;[MAG ATT LST]
"RTN","MAGQBUT4",55,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",56,0)
 K X
"RTN","MAGQBUT4",57,0)
 D FIELDLST^DID(RESULTS)
"RTN","MAGQBUT4",58,0)
 Q
"RTN","MAGQBUT4",59,0)
DVAL(RESULTS,FILE,IENS,FIELD,FLAGS,VALUE) ;[MAG FIELD VALIDATE]
"RTN","MAGQBUT4",60,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",61,0)
 K X
"RTN","MAGQBUT4",62,0)
 I FLAGS']"" S FLAGS="EHU"
"RTN","MAGQBUT4",63,0)
 D VAL^DIE(FILE,IENS,FIELD,FLAGS,VALUE,.RESULT,"","MSG")
"RTN","MAGQBUT4",64,0)
 I RESULT=U S RESULTS="-1^"_$G(MSG("DIERR","1","TEXT","1"))
"RTN","MAGQBUT4",65,0)
 E  S RESULTS=1_U_RESULT_U_$G(RESULT(0))
"RTN","MAGQBUT4",66,0)
 Q
"RTN","MAGQBUT4",67,0)
KVAL(RESULTS,FLAGS,FDA) ;[MAG KEY VALIDATE]
"RTN","MAGQBUT4",68,0)
 N TMP,DDRFDA
"RTN","MAGQBUT4",69,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",70,0)
 K X
"RTN","MAGQBUT4",71,0)
 D FDASET(.FDA,.DDRFDA)
"RTN","MAGQBUT4",72,0)
 S TMP=$$KEYVAL^DIE(FLAGS,"DDRFDA","MSG")
"RTN","MAGQBUT4",73,0)
 S RESULTS=$S(TMP=1:1,1:"-1^"_$G(MSG("DIERR","1","TEXT","1")))
"RTN","MAGQBUT4",74,0)
 K DDRFDA,MSG
"RTN","MAGQBUT4",75,0)
 Q
"RTN","MAGQBUT4",76,0)
FDASET(DDRROOT,DDRFDA) ;
"RTN","MAGQBUT4",77,0)
 N DDRFILE,DDRIEN,DDRFIELD,DDRVAL,DDRERR,I
"RTN","MAGQBUT4",78,0)
 S I=0
"RTN","MAGQBUT4",79,0)
 F  S I=$O(DDRROOT(I)) Q:'I  S X=DDRROOT(I) D
"RTN","MAGQBUT4",80,0)
 . S DDRFILE=$P(X,U)
"RTN","MAGQBUT4",81,0)
 . S DDRFIELD=$P(X,U,2)
"RTN","MAGQBUT4",82,0)
 . S DDRIEN=$P(X,U,3)
"RTN","MAGQBUT4",83,0)
 . S DDRVAL=$P(X,U,4,99)
"RTN","MAGQBUT4",84,0)
 . D FDA^DILF(DDRFILE,DDRIEN_$S($E(DDRIEN,$L(DDRIEN))'=",":",",1:""),DDRFIELD,"",DDRVAL,"DDRFDA","DDRERR")
"RTN","MAGQBUT4",85,0)
 Q
"RTN","MAGQBUT4",86,0)
DHRPC(RESULTS,FNAME,FLOC) ;[MAG DIRHASH]
"RTN","MAGQBUT4",87,0)
 N TMP
"RTN","MAGQBUT4",88,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",89,0)
 K X
"RTN","MAGQBUT4",90,0)
 S TMP=$$DIRHASH^MAGFILEB(FNAME,FLOC)
"RTN","MAGQBUT4",91,0)
 S RESULTS=$S(TMP="":U,1:TMP)
"RTN","MAGQBUT4",92,0)
 Q
"RTN","MAGQBUT4",93,0)
GPACHX(PV) ; Get Package File Install History of Imaging
"RTN","MAGQBUT4",94,0)
 N I,LCNT,MSG,PKG
"RTN","MAGQBUT4",95,0)
 S LCNT=0
"RTN","MAGQBUT4",96,0)
 S PV(0)="Version^Install Date"
"RTN","MAGQBUT4",97,0)
 F PKG="IMAGING" D
"RTN","MAGQBUT4",98,0)
 . N J,K,L,VERS,DATE,X,Y
"RTN","MAGQBUT4",99,0)
 . S J=$O(^DIC(9.4,"B",PKG,"")) Q:'J
"RTN","MAGQBUT4",100,0)
 . S VERS="" F  S VERS=$O(^DIC(9.4,J,22,"B",VERS)) Q:VERS=""  D
"RTN","MAGQBUT4",101,0)
 . . N MSG,TAR
"RTN","MAGQBUT4",102,0)
 . . S K=$O(^DIC(9.4,J,22,"B",VERS,""))
"RTN","MAGQBUT4",103,0)
 . . D LIST^DIC(9.4901,","_K_","_J_",","@;.01;.02;.03","","","","","","","","TAR","MSG")
"RTN","MAGQBUT4",104,0)
 . . Q:$D(MSG("DIERR"))
"RTN","MAGQBUT4",105,0)
 . . S L=0 F  S L=$O(TAR("DILIST","ID",L)) Q:'L  D
"RTN","MAGQBUT4",106,0)
 . . . S LCNT=LCNT+1
"RTN","MAGQBUT4",107,0)
 . . . S PV(LCNT)=VERS_"P"_$P(TAR("DILIST","ID",L,".01"),"^",1)
"RTN","MAGQBUT4",108,0)
 . . . S X=$P($P(TAR("DILIST","ID",L,".02"),"^",1),"@",1)
"RTN","MAGQBUT4",109,0)
 . . . S PV(LCNT)=PV(LCNT)_"^"_$S(X["-1":"",1:X)
"RTN","MAGQBUT4",110,0)
 . . . Q
"RTN","MAGQBUT4",111,0)
 . . Q
"RTN","MAGQBUT4",112,0)
 . Q
"RTN","MAGQBUT4",113,0)
 Q
"RTN","MAGQBUT4",114,0)
 ;
"RTN","MAGQBUT4",115,0)
VOKR(RESULT,VER) ; RPC for VOK [MAGQ VOK]
"RTN","MAGQBUT4",116,0)
 N CVERS,PNUM,SLINE
"RTN","MAGQBUT4",117,0)
 S VER="3.0P"_($$TRIM($P(VER,"P",2)))
"RTN","MAGQBUT4",118,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",119,0)
 S SLINE=$T(+2)
"RTN","MAGQBUT4",120,0)
 S PNUM=$$TRIM($P(SLINE,"**",2)),PNUM=$$TRIM($P(PNUM,",",$L(PNUM,",")))
"RTN","MAGQBUT4",121,0)
 S CVERS=$$TRIM($P(SLINE,";",3))_"P"_PNUM
"RTN","MAGQBUT4",122,0)
 S RESULT=$S(CVERS=VER:1,1:0)_U_CVERS
"RTN","MAGQBUT4",123,0)
 Q
"RTN","MAGQBUT4",124,0)
 ;
"RTN","MAGQBUT4",125,0)
TRIM(X) ; remove both leading and trailing blanks
"RTN","MAGQBUT4",126,0)
 N I,J
"RTN","MAGQBUT4",127,0)
 F I=1:1:$L(X) Q:$E(X,I)'=" "
"RTN","MAGQBUT4",128,0)
 F J=$L(X):-1:I Q:$E(X,J)'=" "
"RTN","MAGQBUT4",129,0)
 Q $S($E(X,I,J)=" ":"",1:$E(X,I,J))
"RTN","MAGQBUT4",130,0)
 ;
"RTN","MAGQBUT4",131,0)
QCNT(RESULT,PLC,QUE) ; [MAGQ QCNT] Called from MagQueManSet.pas and MagSiteParameters.pas
"RTN","MAGQBUT4",132,0)
 N CNT,DA,CQ,IA,X
"RTN","MAGQBUT4",133,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",134,0)
 ;CQ=Current Queue Pointer(#2006.03) 
"RTN","MAGQBUT4",135,0)
 ;QP=Queue file pointer(#2006.031)
"RTN","MAGQBUT4",136,0)
 ;CNT=Queue type total, IA=Not failed total
"RTN","MAGQBUT4",137,0)
 S IA="",RESULT=0
"RTN","MAGQBUT4",138,0)
 S (CNT,IA)=0,DA=""
"RTN","MAGQBUT4",139,0)
 S QP=$S($D(^MAGQUEUE(2006.031,"C",PLC,QUE)):$O(^MAGQUEUE(2006.031,"C",PLC,QUE,"")),1:"")
"RTN","MAGQBUT4",140,0)
 S CQ=$S('QP:0,1:$P($G(^MAGQUEUE(2006.031,QP,0)),U,2))
"RTN","MAGQBUT4",141,0)
 F  S DA=$O(^MAGQUEUE(2006.03,"C",PLC,QUE,DA)) Q:'DA  D
"RTN","MAGQBUT4",142,0)
 . I '$D(^MAGQUEUE(2006.03,DA,0)) K ^MAGQUEUE(2006.03,"C",PLC,QUE,DA) Q 
"RTN","MAGQBUT4",143,0)
 . S CNT=CNT+1
"RTN","MAGQBUT4",144,0)
 . I CQ<DA S IA=IA+1
"RTN","MAGQBUT4",145,0)
 . Q
"RTN","MAGQBUT4",146,0)
 D QPUP(PLC,QUE,CNT,CQ,IA,QP) Q
"RTN","MAGQBUT4",147,0)
 Q
"RTN","MAGQBUT4",148,0)
 ;
"RTN","MAGQBUT4",149,0)
QPUP(PLC,QUE,CNT,CQ,IA,QP) ;
"RTN","MAGQBUT4",150,0)
 N IEN,DIC,VAL
"RTN","MAGQBUT4",151,0)
 K VAL
"RTN","MAGQBUT4",152,0)
 S VAL(1)=PLC,VAL(2)=QUE
"RTN","MAGQBUT4",153,0)
 S QP=$S(QP:QP,1:$$FIND1^DIC(2006.031,"","QX",.VAL,"C","",""))
"RTN","MAGQBUT4",154,0)
 ;I IEN>0 D  Q:IEN
"RTN","MAGQBUT4",155,0)
 ;. S $P(^MAGQUEUE(2006.031,IEN,0),U,5)=CNT Q
"RTN","MAGQBUT4",156,0)
 I 'QP D  Q
"RTN","MAGQBUT4",157,0)
 . K DIE,FDA
"RTN","MAGQBUT4",158,0)
 . S FDA(2006.031,"+1,",.01)=QUE
"RTN","MAGQBUT4",159,0)
 . S FDA(2006.031,"+1,",.04)=PLC
"RTN","MAGQBUT4",160,0)
 . S FDA(2006.031,"+1,",1)=CQ
"RTN","MAGQBUT4",161,0)
 . S FDA(2006.031,"+1,",2)=IA
"RTN","MAGQBUT4",162,0)
 . S FDA(2006.031,"+1,",3)=CNT
"RTN","MAGQBUT4",163,0)
 . D UPDATE^DIE("U","FDA","","MAGQUP")
"RTN","MAGQBUT4",164,0)
 . K DIE,FDA
"RTN","MAGQBUT4",165,0)
 E  D
"RTN","MAGQBUT4",166,0)
 . K DIE,FDA
"RTN","MAGQBUT4",167,0)
 . S FDA(2006.031,QP_",",.01)=QUE
"RTN","MAGQBUT4",168,0)
 . S FDA(2006.031,QP_",",.04)=PLC
"RTN","MAGQBUT4",169,0)
 . S FDA(2006.031,QP_",",1)=CQ
"RTN","MAGQBUT4",170,0)
 . S FDA(2006.031,QP_",",2)=IA
"RTN","MAGQBUT4",171,0)
 . S FDA(2006.031,QP_",",3)=CNT
"RTN","MAGQBUT4",172,0)
 . D FILE^DIE("","FDA","MAGERR")
"RTN","MAGQBUT4",173,0)
 . K DIE,FDA
"RTN","MAGQBUT4",174,0)
 Q
"RTN","MAGQBUT4",175,0)
 ;
"RTN","MAGQBUT4",176,0)
CPUD ;
"RTN","MAGQBUT4",177,0)
 N PLC,INS,QUE
"RTN","MAGQBUT4",178,0)
 S (INS,PLC)=""
"RTN","MAGQBUT4",179,0)
 F  S INS=$O(^MAG(2006.1,"B",INS)) Q:INS=""  D
"RTN","MAGQBUT4",180,0)
 . S PLC=$O(^MAG(2006.1,"B",INS,""))
"RTN","MAGQBUT4",181,0)
 . S QUE="" F  S QUE=$O(^MAGQUEUE(2006.031,"C",PLC,QUE)) Q:QUE=""  D
"RTN","MAGQBUT4",182,0)
 . . D QCNT^MAGQBUT4("",PLC,QUE)
"RTN","MAGQBUT4",183,0)
 . . Q
"RTN","MAGQBUT4",184,0)
 . Q
"RTN","MAGQBUT4",185,0)
 Q
"RTN","MAGQBUT4",186,0)
CNL(GL,IEN,NLC) ;  Check Network Location
"RTN","MAGQBUT4",187,0)
 N MAGREF,MAG0,MAG1,PLC
"RTN","MAGQBUT4",188,0)
 S NLC=NLC+1
"RTN","MAGQBUT4",189,0)
 I '$G(IEN) Q ""
"RTN","MAGQBUT4",190,0)
 S MAG0=$G(@(GL_IEN_",0)"))
"RTN","MAGQBUT4",191,0)
 S MAGREF=+$P(MAG0,"^",3)            ; get file from raid
"RTN","MAGQBUT4",192,0)
 I MAGREF=0 S MAGREF=+$P(MAG0,"^",5) ; get file from jukebox
"RTN","MAGQBUT4",193,0)
 I 'MAGREF Q ""
"RTN","MAGQBUT4",194,0)
 I '$D(^MAG(2005.2,MAGREF,0)) Q ""
"RTN","MAGQBUT4",195,0)
 S PLC=$P($G(^MAG(2005.2,MAGREF,0)),U,10)
"RTN","MAGQBUT4",196,0)
 Q:'PLC ""
"RTN","MAGQBUT4",197,0)
 S PLC=$P($G(^MAG(2006.1,PLC,0)),U)
"RTN","MAGQBUT4",198,0)
 Q $S('PLC:"",1:PLC)
"RTN","MAGQBUT4",199,0)
CNSP(GL,IEN,NMSP,NSC) ;  Check NameSPace
"RTN","MAGQBUT4",200,0)
 N NMSPC,MAG0,FNAM,INSTIEN
"RTN","MAGQBUT4",201,0)
 S NSC=NSC+1
"RTN","MAGQBUT4",202,0)
 S MAG0=$G(@(GL_IEN_",0)"))
"RTN","MAGQBUT4",203,0)
 S FNAM=$P(MAG0,U,2)
"RTN","MAGQBUT4",204,0)
 S NMSPC=$TR($P(FNAM,"."),"0123456789","")
"RTN","MAGQBUT4",205,0)
 Q:NMSPC="" ""
"RTN","MAGQBUT4",206,0)
 S INSTIEN=$S($D(NMSP(NMSPC)):$O(NMSP(NMSPC,"")),1:"")
"RTN","MAGQBUT4",207,0)
 Q INSTIEN
"RTN","MAGQBUT4",208,0)
NMSP(TMPA) ;
"RTN","MAGQBUT4",209,0)
 N IEN,INS,TMP,I,J
"RTN","MAGQBUT4",210,0)
 S INS="" F  S INS=$O(^MAG(2006.1,"B",INS)) Q:INS=""  S IEN="" D
"RTN","MAGQBUT4",211,0)
 . S IEN=$O(^MAG(2006.1,"B",INS,IEN)) Q:IEN=""  D  Q
"RTN","MAGQBUT4",212,0)
 . . S TMP=","_$$UPPER^MAGQE4($$INIS^MAGQBPG2(IEN))_"," D  Q
"RTN","MAGQBUT4",213,0)
 . . . F I=2:1 S J=$P(TMP,",",I) Q:J=""  S TMPA(J,INS)=""
"RTN","MAGQBUT4",214,0)
 . . . Q
"RTN","MAGQBUT4",215,0)
 S J="" F  S J=$O(TMPA(J)) Q:J=""  S INS=$O(TMPA(J,"")) K:($O(TMPA(J,INS))]"") TMPA(J)
"RTN","MAGQBUT4",216,0)
 Q
"RTN","MAGQBUT4",217,0)
CLRQ ; Clears the Queue file and Queue Pointer files
"RTN","MAGQBUT4",218,0)
 N DA,DIK,FILE,IEN
"RTN","MAGQBUT4",219,0)
 F FILE=2006.03,2006.031 D
"RTN","MAGQBUT4",220,0)
 . S IEN=0 F  S IEN=$O(^MAGQUEUE(FILE,IEN)) Q:'IEN  D
"RTN","MAGQBUT4",221,0)
 . . S DIK="^MAGQUEUE("_FILE_","
"RTN","MAGQBUT4",222,0)
 . . S DA=IEN,DA(1)=FILE D ^DIK
"RTN","MAGQBUT4",223,0)
 K DIK,DA
"RTN","MAGQBUT4",224,0)
 Q
"RTN","MAGQBUT4",225,0)
 ; We add RPC to MAG WINDOWS Option this way instead of sending Option : MAG WINDOWS
"RTN","MAGQBUT4",226,0)
 ; If we send MAG WINDOWS Option, the last one installed will overwrite others.
"RTN","MAGQBUT4",227,0)
 ; ADDRPC copied from Patch 51, added the call "D MES^XPDUTL(" instead of "W !"
"RTN","MAGQBUT4",228,0)
ADDRPC(RPCNAME,OPTNAME) ;
"RTN","MAGQBUT4",229,0)
 N DA,DIC
"RTN","MAGQBUT4",230,0)
 S DIC="^DIC(19,",DIC(0)="",X=OPTNAME D ^DIC
"RTN","MAGQBUT4",231,0)
 I Y<0 D  Q
"RTN","MAGQBUT4",232,0)
 . D MES^XPDUTL("Cannot add RPC: """_RPCNAME_""" to Option: """_OPTNAME_""".")
"RTN","MAGQBUT4",233,0)
 . D MES^XPDUTL("Cannot find Option: """_OPTNAME_""".")
"RTN","MAGQBUT4",234,0)
 . Q
"RTN","MAGQBUT4",235,0)
 I '$D(^XWB(8994,"B",RPCNAME)) D  Q
"RTN","MAGQBUT4",236,0)
 . D MES^XPDUTL("Cannot add RPC: """_RPCNAME_""" to Option: """_OPTNAME_""".")
"RTN","MAGQBUT4",237,0)
 . D MES^XPDUTL("Cannot find RPC: """_RPCNAME_""".")
"RTN","MAGQBUT4",238,0)
 . Q
"RTN","MAGQBUT4",239,0)
 S DA(1)=+Y
"RTN","MAGQBUT4",240,0)
 I $D(^DIC(19,+Y,"RPC","B",$O(^XWB(8994,"B",RPCNAME,"")))) D  Q
"RTN","MAGQBUT4",241,0)
 . D MES^XPDUTL("Cannot add RPC: """_RPCNAME_""" to Option: """_OPTNAME_""".")
"RTN","MAGQBUT4",242,0)
 . D MES^XPDUTL("RPC: """_RPCNAME_""" is already a member of """_OPTNAME_""".")
"RTN","MAGQBUT4",243,0)
 . Q
"RTN","MAGQBUT4",244,0)
 S DIC=DIC_DA(1)_",""RPC"","
"RTN","MAGQBUT4",245,0)
 S DIC(0)="L",DLAYGO="19" ; LAYGO should be allowed here
"RTN","MAGQBUT4",246,0)
 S X=RPCNAME
"RTN","MAGQBUT4",247,0)
 D ^DIC
"RTN","MAGQBUT4",248,0)
 K DIC,D0,DLAYGO
"RTN","MAGQBUT4",249,0)
 I Y<0 D  Q
"RTN","MAGQBUT4",250,0)
 . D MES^XPDUTL("Cannot add RPC: """_RPCNAME_""" to Option: """_OPTNAME_""".")
"RTN","MAGQBUT4",251,0)
 . D MES^XPDUTL("Cannot find RPC: """_RPCNAME_""".")
"RTN","MAGQBUT4",252,0)
 . Q
"RTN","MAGQBUT4",253,0)
 Q
"RTN","MAGQBUT4",254,0)
INS(XP,DUZ,DATE,IDA) ;
"RTN","MAGQBUT4",255,0)
 N CT,CNT,COM,D,D0,D1,D2,DDATE,DG,DIC,DICR,DIW,MAGMSG,ST,XMID,XMY,PLACE,XMSUB,XMZ
"RTN","MAGQBUT4",256,0)
 S PLACE=$O(^MAG(2006.1,"B",$$KSP^XUPARAM("INST"),""))
"RTN","MAGQBUT4",257,0)
 D GETENV^%ZOSV
"RTN","MAGQBUT4",258,0)
 S CNT=0
"RTN","MAGQBUT4",259,0)
 S CNT=CNT+1,MAGMSG(CNT)="PACKAGE INSTALL"
"RTN","MAGQBUT4",260,0)
 S CNT=CNT+1,MAGMSG(CNT)="SITE: "_$$KSP^XUPARAM("WHERE")
"RTN","MAGQBUT4",261,0)
 S CNT=CNT+1,MAGMSG(CNT)=" Production Account: "_$$PROD^XUPROD("1")
"RTN","MAGQBUT4",262,0)
 S CNT=CNT+1,MAGMSG(CNT)="PACKAGE: "_XP
"RTN","MAGQBUT4",263,0)
 S CNT=CNT+1,MAGMSG(CNT)="Version: "_$$VER^XPDUTL(XP)
"RTN","MAGQBUT4",264,0)
 S ST=$$GET1^DIQ(9.7,IDA,11,"I")
"RTN","MAGQBUT4",265,0)
 S CNT=CNT+1,MAGMSG(CNT)="Start time: "_$$FMTE^XLFDT(ST)
"RTN","MAGQBUT4",266,0)
 S CT=$$GET1^DIQ(9.7,IDA,17,"I") S:+CT'=CT CT=$$NOW^XLFDT
"RTN","MAGQBUT4",267,0)
 S CNT=CNT+1,MAGMSG(CNT)="Completion time: "_$$FMTE^XLFDT(CT)
"RTN","MAGQBUT4",268,0)
 S CNT=CNT+1,MAGMSG(CNT)="Run time: "_$$FMDIFF^XLFDT(CT,ST,3)
"RTN","MAGQBUT4",269,0)
 S CNT=CNT+1,MAGMSG(CNT)="Environment: "_Y
"RTN","MAGQBUT4",270,0)
 S COM=$$GET1^DIQ(9.7,IDA,6,"I")
"RTN","MAGQBUT4",271,0)
 S CNT=CNT+1,MAGMSG(CNT)="FILE COMMENT: "_COM
"RTN","MAGQBUT4",272,0)
 S CNT=CNT+1,MAGMSG(CNT)="DATE: "_DATE
"RTN","MAGQBUT4",273,0)
 S CNT=CNT+1,MAGMSG(CNT)="Installed by: "_$$GET1^DIQ(9.7,IDA,9,"E")
"RTN","MAGQBUT4",274,0)
 S CNT=CNT+1,MAGMSG(CNT)="Install Name: "_$$GET1^DIQ(9.7,IDA,.01,"E")
"RTN","MAGQBUT4",275,0)
 S DDATE=$$GET1^DIQ(9.7,IDA,51,"I")
"RTN","MAGQBUT4",276,0)
 S CNT=CNT+1,MAGMSG(CNT)="Distribution Date: "_$$FMTE^XLFDT(DDATE)
"RTN","MAGQBUT4",277,0)
 S XMSUB=XP_" INSTALLATION"
"RTN","MAGQBUT4",278,0)
 S XMID=$G(DUZ) S:'XMID XMID=.5
"RTN","MAGQBUT4",279,0)
 S XMY(XMID)=""
"RTN","MAGQBUT4",280,0)
 S:$G(MAGDUZ) XMY(MAGDUZ)=""
"RTN","MAGQBUT4",281,0)
 S XMSUB=$E(XMSUB,1,63)
"RTN","MAGQBUT4",282,0)
 D:$$PROD^XUPROD("1") ADDMG^MAGQBUT5(XMSUB,.XMY,PLACE)
"RTN","MAGQBUT4",283,0)
 D SENDMSG^XMXAPI(XMID,XMSUB,"MAGMSG",.XMY,,.XMZ,)
"RTN","MAGQBUT4",284,0)
 I $G(XMERR) M XMERR=^TMP("XMERR",$J) K XMERR
"RTN","MAGQBUT4",285,0)
 K MAGMSG
"RTN","MAGQBUT4",286,0)
 Q
"RTN","MAGQBUT4",287,0)
TEST ;
"RTN","MAGQBUT4",288,0)
 N FDA
"RTN","MAGQBUT4",289,0)
 S FDA(4)="2006.8^.01^+1,^BP1"
"RTN","MAGQBUT4",290,0)
 S FDA(1)="2006.8^.04^+1,^1"
"RTN","MAGQBUT4",291,0)
 S FDA(3)="2006.8^50^+1,^ISW-PRICER"
"RTN","MAGQBUT4",292,0)
 S FDA(2)="2006.8^11^+1,^1"
"RTN","MAGQBUT4",293,0)
 D KVAL(.RESULTS,"Q",.FDA)
"RTN","MAGQBUT4",294,0)
 W !,"RESULTS: "_RESULTS
"RTN","MAGQBUT4",295,0)
 Q
"RTN","MAGQBUT4",296,0)
 ;
"VER")
8.0^22.0
"^DD",2005,2005,115.1,0)
LINKED IMAGE^P2005.1'^MAG(2005.1,^100;11^Q
"^DD",2005,2005,115.1,3)
If this object is linked, enter the original.
"^DD",2005,2005,115.1,21,0)
^.001^4^4^3110630^^^
"^DD",2005,2005,115.1,21,1,0)
This is a pointer to the rescinded image. For example, when an image is rescinded a new 
"^DD",2005,2005,115.1,21,2,0)
image entry is created and the original is deleted. A 
"^DD",2005,2005,115.1,21,3,0)
link is established between the new image and the rescinded image. The 
"^DD",2005,2005,115.1,21,4,0)
value of the field is the rescinded image.
"^DD",2005,2005,115.1,23,0)
^.001^1^1^3110630^^^^
"^DD",2005,2005,115.1,23,1,0)
Added in patch MAG*3.0*121.
"^DD",2005,2005,115.1,"DT")
3110630
"^DD",2005,2005,115.2,0)
LINKED TYPE^S^1:RESCINDED;^100;12^Q
"^DD",2005,2005,115.2,3)
Enter the type of the relationship between the linked images.
"^DD",2005,2005,115.2,21,0)
^.001^4^4^3110518^^^
"^DD",2005,2005,115.2,21,1,0)
This is the type of the image link. For example, when image is 
"^DD",2005,2005,115.2,21,2,0)
rescinded a new image entry is created and the original is deleted. A 
"^DD",2005,2005,115.2,21,3,0)
link is established between the new image and the rescinded image. The 
"^DD",2005,2005,115.2,21,4,0)
value of the LINKED TYPE will be "RESCINDED".
"^DD",2005,2005,115.2,23,0)
^.001^1^1^3110518^^
"^DD",2005,2005,115.2,23,1,0)
Added in patch MAG*3.0*121.
"^DD",2005,2005,115.2,"DT")
3110308
"^DD",2005,2005,115.3,0)
LINKED DATE^D^^100;13^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",2005,2005,115.3,3)
Enter the date and time when the image was linked.
"^DD",2005,2005,115.3,21,0)
^.001^2^2^3110519^^^^
"^DD",2005,2005,115.3,21,1,0)
This is the date that the Document/Image was associated with the LINKED 
"^DD",2005,2005,115.3,21,2,0)
IMAGE.
"^DD",2005,2005,115.3,23,0)
^.001^1^1^3110519^^^^
"^DD",2005,2005,115.3,23,1,0)
Added in patch MAG*3.0*121.
"^DD",2005,2005,115.3,"DT")
3110519
"^DD",2005.1,2005.1,115.1,0)
LINKED IMAGE^P2005.1'^MAG(2005.1,^100;11^Q
"^DD",2005.1,2005.1,115.1,3)
If this object is linked, enter the original.
"^DD",2005.1,2005.1,115.1,21,0)
^.001^4^4^3110630^^^
"^DD",2005.1,2005.1,115.1,21,1,0)
This is a pointer to the rescinded image. For example, when an image is rescinded a 
"^DD",2005.1,2005.1,115.1,21,2,0)
new image entry is created and the original is deleted. A link is 
"^DD",2005.1,2005.1,115.1,21,3,0)
established between the new image and the rescinded image. The value of 
"^DD",2005.1,2005.1,115.1,21,4,0)
the field is the rescinded image.
"^DD",2005.1,2005.1,115.1,23,0)
^.001^1^1^3110518^^^
"^DD",2005.1,2005.1,115.1,23,1,0)
Added in patch MAG*3.0*121.
"^DD",2005.1,2005.1,115.1,"DT")
3110630
"^DD",2005.1,2005.1,115.2,0)
LINKED TYPE^S^1:RESCINDED;^100;12^Q
"^DD",2005.1,2005.1,115.2,3)
Enter the type of the relationship between the linked images.
"^DD",2005.1,2005.1,115.2,21,0)
^^4^4^3110308^^
"^DD",2005.1,2005.1,115.2,21,1,0)
This is the type of the image link. For example, when image is 
"^DD",2005.1,2005.1,115.2,21,2,0)
rescinded a new image entry is created and the original image is deleted. A 
"^DD",2005.1,2005.1,115.2,21,3,0)
link is established between the original and the rescinded image. The 
"^DD",2005.1,2005.1,115.2,21,4,0)
value of the LINKED TYPE will be "RESCINDED".
"^DD",2005.1,2005.1,115.2,23,0)
^^1^1^3110308^
"^DD",2005.1,2005.1,115.2,23,1,0)
Added in patch MAG*3.0*121.
"^DD",2005.1,2005.1,115.2,"DT")
3110308
"^DD",2005.1,2005.1,115.3,0)
LINKED DATE^D^^100;13^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",2005.1,2005.1,115.3,3)
Enter the date and time when the image was linked.
"^DD",2005.1,2005.1,115.3,21,0)
^^2^2^3110308^^
"^DD",2005.1,2005.1,115.3,21,1,0)
This is the date that the Document/Image was associated with the LINKED 
"^DD",2005.1,2005.1,115.3,21,2,0)
IMAGE.
"^DD",2005.1,2005.1,115.3,23,0)
^^1^1^3110308^
"^DD",2005.1,2005.1,115.3,23,1,0)
Added in patch MAG*3.0*121.
"^DD",2005.1,2005.1,115.3,"DT")
3110308
**END**
**END**
