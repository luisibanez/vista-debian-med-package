KIDS Distribution saved on Jul 17, 2013@15:23:31
VistA Imaging V3.0 - Patch 135 - 07/17/2013 15:23PM
**KIDS**:MAG*3.0*135^

**INSTALL NAME**
MAG*3.0*135
"BLD",3463,0)
MAG*3.0*135^IMAGING^0^3130717^y
"BLD",3463,1,0)
^^20^20^3130717^
"BLD",3463,1,1,0)
Version 3.0 Patch 135 - BP Maintenance Patch
"BLD",3463,1,2,0)
 
"BLD",3463,1,3,0)
 
"BLD",3463,1,4,0)
Routines:
"BLD",3463,1,5,0)
MAGBRTE4    new value = 73500112
"BLD",3463,1,6,0)
MAGGSIU4    new value = 81149201
"BLD",3463,1,7,0)
MAGGSIU5    new value = 39649203
"BLD",3463,1,8,0)
MAGIP135    new value = 19945197
"BLD",3463,1,9,0)
MAGQBPG1    new value = 112714429
"BLD",3463,1,10,0)
MAGQBPG2    new value = 21657260
"BLD",3463,1,11,0)
MAGQBPRG    new value = 59523068
"BLD",3463,1,12,0)
MAGQBTM     new value = 85282923
"BLD",3463,1,13,0)
MAGQBUT1    new value = 117993666
"BLD",3463,1,14,0)
MAGQBUT4    new value = 92803022
"BLD",3463,1,15,0)
MAGQE3      new value = 76069024
"BLD",3463,1,16,0)
MAGSDOFF    new value = 63243612
"BLD",3463,1,17,0)
MAGSDOFL    new value = 62340218
"BLD",3463,1,18,0)
 
"BLD",3463,1,19,0)
Please note that routine MAGIP135 is deleted after the KIDS Build is
"BLD",3463,1,20,0)
installed.
"BLD",3463,4,0)
^9.64PA^2006.1^4
"BLD",3463,6.3)
V3.0p135Build5238_T10
"BLD",3463,4,2005,0)
2005
"BLD",3463,4,2005,2,0)
^9.641^2005^1
"BLD",3463,4,2005,2,2005,0)
IMAGE  (File-top level)
"BLD",3463,4,2005,2,2005,1,0)
^9.6411^113^1
"BLD",3463,4,2005,2,2005,1,113,0)
STATUS
"BLD",3463,4,2005,222)
y^y^p^^^^n^^n
"BLD",3463,4,2005,224)

"BLD",3463,4,2005.1,0)
2005.1
"BLD",3463,4,2005.1,2,0)
^9.641^2005.1^1
"BLD",3463,4,2005.1,2,2005.1,0)
IMAGE AUDIT  (File-top level)
"BLD",3463,4,2005.1,2,2005.1,1,0)
^9.6411^113^1
"BLD",3463,4,2005.1,2,2005.1,1,113,0)
STATUS
"BLD",3463,4,2005.1,222)
y^y^p^^^^n^^n
"BLD",3463,4,2005.1,224)

"BLD",3463,4,2005.2,0)
2005.2
"BLD",3463,4,2005.2,2,0)
^9.641^2005.2^1
"BLD",3463,4,2005.2,2,2005.2,0)
NETWORK LOCATION  (File-top level)
"BLD",3463,4,2005.2,2,2005.2,1,0)
^9.6411^6^1
"BLD",3463,4,2005.2,2,2005.2,1,6,0)
STORAGE TYPE
"BLD",3463,4,2005.2,222)
y^y^p^^^^n^^n
"BLD",3463,4,2005.2,224)

"BLD",3463,4,2006.1,0)
2006.1
"BLD",3463,4,2006.1,2,0)
^9.641^2006.1^1
"BLD",3463,4,2006.1,2,2006.1,0)
IMAGING SITE PARAMETERS  (File-top level)
"BLD",3463,4,2006.1,2,2006.1,1,0)
^9.6411^11.5^1
"BLD",3463,4,2006.1,2,2006.1,1,11.5,0)
TIER 2 RESERVE
"BLD",3463,4,2006.1,222)
y^y^p^^^^n^^n
"BLD",3463,4,2006.1,224)

"BLD",3463,4,"APDD",2006.1,2006.1)

"BLD",3463,4,"APDD",2005,2005)

"BLD",3463,4,"APDD",2005,2005,113)

"BLD",3463,4,"APDD",2005.1,2005.1)

"BLD",3463,4,"APDD",2005.1,2005.1,113)

"BLD",3463,4,"APDD",2005.2,2005.2)

"BLD",3463,4,"APDD",2005.2,2005.2,6)

"BLD",3463,4,"APDD",2006.1,2006.1)

"BLD",3463,4,"APDD",2006.1,2006.1,11.5)

"BLD",3463,4,"B",2005,2005)

"BLD",3463,4,"B",2005.1,2005.1)

"BLD",3463,4,"B",2005.2,2005.2)

"BLD",3463,4,"B",2006.1,2006.1)

"BLD",3463,"ABNS",0)
^9.66A^^
"BLD",3463,"ABPKG")
n^n^G.IMAGING DEVELOPMENT TEAM@DOMAIN.EXT
"BLD",3463,"INI")
PRE^MAGIP135
"BLD",3463,"INID")
n^y^y
"BLD",3463,"INIT")
POST^MAGIP135
"BLD",3463,"KRN",0)
^9.67PA^8994^19
"BLD",3463,"KRN",.4,0)
.4
"BLD",3463,"KRN",.4,"NM",0)
^9.68A^^
"BLD",3463,"KRN",.401,0)
.401
"BLD",3463,"KRN",.401,"NM",0)
^9.68A^^
"BLD",3463,"KRN",.402,0)
.402
"BLD",3463,"KRN",.402,"NM",0)
^9.68A^^
"BLD",3463,"KRN",.403,0)
.403
"BLD",3463,"KRN",.5,0)
.5
"BLD",3463,"KRN",.84,0)
.84
"BLD",3463,"KRN",.84,"NM",0)
^9.68A^^
"BLD",3463,"KRN",3.6,0)
3.6
"BLD",3463,"KRN",3.8,0)
3.8
"BLD",3463,"KRN",3.8,"NM",0)
^9.68A^^
"BLD",3463,"KRN",9.2,0)
9.2
"BLD",3463,"KRN",9.8,0)
9.8
"BLD",3463,"KRN",9.8,"NM",0)
^9.68A^12^12
"BLD",3463,"KRN",9.8,"NM",1,0)
MAGBRTE4^^0^B73500112
"BLD",3463,"KRN",9.8,"NM",2,0)
MAGGSIU4^^0^B81149201
"BLD",3463,"KRN",9.8,"NM",3,0)
MAGGSIU5^^0^B39649203
"BLD",3463,"KRN",9.8,"NM",4,0)
MAGQBPG1^^0^B112714429
"BLD",3463,"KRN",9.8,"NM",5,0)
MAGQBPG2^^0^B21657260
"BLD",3463,"KRN",9.8,"NM",6,0)
MAGQBPRG^^0^B59523068
"BLD",3463,"KRN",9.8,"NM",7,0)
MAGQBTM^^0^B85282923
"BLD",3463,"KRN",9.8,"NM",8,0)
MAGQBUT1^^0^B117993666
"BLD",3463,"KRN",9.8,"NM",9,0)
MAGQBUT4^^0^B92803022
"BLD",3463,"KRN",9.8,"NM",10,0)
MAGQE3^^0^B76069024
"BLD",3463,"KRN",9.8,"NM",11,0)
MAGSDOFF^^0^B63243612
"BLD",3463,"KRN",9.8,"NM",12,0)
MAGSDOFL^^0^B62340218
"BLD",3463,"KRN",9.8,"NM","B","MAGBRTE4",1)

"BLD",3463,"KRN",9.8,"NM","B","MAGGSIU4",2)

"BLD",3463,"KRN",9.8,"NM","B","MAGGSIU5",3)

"BLD",3463,"KRN",9.8,"NM","B","MAGQBPG1",4)

"BLD",3463,"KRN",9.8,"NM","B","MAGQBPG2",5)

"BLD",3463,"KRN",9.8,"NM","B","MAGQBPRG",6)

"BLD",3463,"KRN",9.8,"NM","B","MAGQBTM",7)

"BLD",3463,"KRN",9.8,"NM","B","MAGQBUT1",8)

"BLD",3463,"KRN",9.8,"NM","B","MAGQBUT4",9)

"BLD",3463,"KRN",9.8,"NM","B","MAGQE3",10)

"BLD",3463,"KRN",9.8,"NM","B","MAGSDOFF",11)

"BLD",3463,"KRN",9.8,"NM","B","MAGSDOFL",12)

"BLD",3463,"KRN",19,0)
19
"BLD",3463,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",3463,"KRN",19,"NM",1,0)
MAG JB OFFLINE^^0
"BLD",3463,"KRN",19,"NM","B","MAG JB OFFLINE",1)

"BLD",3463,"KRN",19.1,0)
19.1
"BLD",3463,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",3463,"KRN",101,0)
101
"BLD",3463,"KRN",101,"NM",0)
^9.68A^^
"BLD",3463,"KRN",409.61,0)
409.61
"BLD",3463,"KRN",771,0)
771
"BLD",3463,"KRN",771,"NM",0)
^9.68A^^
"BLD",3463,"KRN",870,0)
870
"BLD",3463,"KRN",870,"NM",0)
^9.68A^^
"BLD",3463,"KRN",8989.51,0)
8989.51
"BLD",3463,"KRN",8989.51,"NM",0)
^9.68A^^
"BLD",3463,"KRN",8989.52,0)
8989.52
"BLD",3463,"KRN",8994,0)
8994
"BLD",3463,"KRN",8994,"NM",0)
^9.68A^1^1
"BLD",3463,"KRN",8994,"NM",1,0)
MAGQ LOGV^^0
"BLD",3463,"KRN",8994,"NM","B","MAGQ LOGV",1)

"BLD",3463,"KRN","B",.4,.4)

"BLD",3463,"KRN","B",.401,.401)

"BLD",3463,"KRN","B",.402,.402)

"BLD",3463,"KRN","B",.403,.403)

"BLD",3463,"KRN","B",.5,.5)

"BLD",3463,"KRN","B",.84,.84)

"BLD",3463,"KRN","B",3.6,3.6)

"BLD",3463,"KRN","B",3.8,3.8)

"BLD",3463,"KRN","B",9.2,9.2)

"BLD",3463,"KRN","B",9.8,9.8)

"BLD",3463,"KRN","B",19,19)

"BLD",3463,"KRN","B",19.1,19.1)

"BLD",3463,"KRN","B",101,101)

"BLD",3463,"KRN","B",409.61,409.61)

"BLD",3463,"KRN","B",771,771)

"BLD",3463,"KRN","B",870,870)

"BLD",3463,"KRN","B",8989.51,8989.51)

"BLD",3463,"KRN","B",8989.52,8989.52)

"BLD",3463,"KRN","B",8994,8994)

"BLD",3463,"REQB",0)
^9.611^1^1
"BLD",3463,"REQB",1,0)
MAG*3.0*121^2
"BLD",3463,"REQB","B","MAG*3.0*121",1)

"FIA",2005)
IMAGE
"FIA",2005,0)
^MAG(2005,
"FIA",2005,0,0)
2005I
"FIA",2005,0,1)
y^y^p^^^^n^^n
"FIA",2005,0,10)

"FIA",2005,0,11)

"FIA",2005,0,"RLRO")

"FIA",2005,2005)
1
"FIA",2005,2005,113)

"FIA",2005.1)
IMAGE AUDIT
"FIA",2005.1,0)
^MAG(2005.1,
"FIA",2005.1,0,0)
2005.1I
"FIA",2005.1,0,1)
y^y^p^^^^n^^n
"FIA",2005.1,0,10)

"FIA",2005.1,0,11)

"FIA",2005.1,0,"RLRO")

"FIA",2005.1,2005.1)
1
"FIA",2005.1,2005.1,113)

"FIA",2005.2)
NETWORK LOCATION
"FIA",2005.2,0)
^MAG(2005.2,
"FIA",2005.2,0,0)
2005.2
"FIA",2005.2,0,1)
y^y^p^^^^n^^n
"FIA",2005.2,0,10)

"FIA",2005.2,0,11)

"FIA",2005.2,0,"RLRO")

"FIA",2005.2,2005.2)
1
"FIA",2005.2,2005.2,6)

"FIA",2006.1)
IMAGING SITE PARAMETERS
"FIA",2006.1,0)
^MAG(2006.1,
"FIA",2006.1,0,0)
2006.1P
"FIA",2006.1,0,1)
y^y^p^^^^n^^n
"FIA",2006.1,0,10)

"FIA",2006.1,0,11)

"FIA",2006.1,0,"RLRO")

"FIA",2006.1,2006.1)
1
"FIA",2006.1,2006.1,11.5)

"INI")
PRE^MAGIP135
"INIT")
POST^MAGIP135
"IX",2005,2005,"AGPD",0)
2005^AGPD^Deleted group members^R^^R^IR^I^2005^^^^^S
"IX",2005,2005,"AGPD",.1,0)
^^11^11^3081219^
"IX",2005,2005,"AGPD",.1,1,0)
This cross-reference lets the user easily get the
"IX",2005,2005,"AGPD",.1,2,0)
list of deleted members of the group. It has the
"IX",2005,2005,"AGPD",.1,3,0)
following structure:
"IX",2005,2005,"AGPD",.1,4,0)
 
"IX",2005,2005,"AGPD",.1,5,0)
  ^MAG(2005,"AGPD",GroupIEN,DeletedMemberIEN)="" 
"IX",2005,2005,"AGPD",.1,6,0)
 
"IX",2005,2005,"AGPD",.1,7,0)
This cross-reference will be used after the IMAGE
"IX",2005,2005,"AGPD",.1,8,0)
AUDIT file (#2005.1) is eliminated and deleted
"IX",2005,2005,"AGPD",.1,9,0)
image entries are merged into the file #2005.
"IX",2005,2005,"AGPD",.1,10,0)
 
"IX",2005,2005,"AGPD",.1,11,0)
Added by the patch MAG*3*93.
"IX",2005,2005,"AGPD",1)
S ^MAG(2005,"AGPD",X(1),DA)=""
"IX",2005,2005,"AGPD",1.4)
S X=($G(X2(2))=12)
"IX",2005,2005,"AGPD",2)
K ^MAG(2005,"AGPD",X(1),DA)
"IX",2005,2005,"AGPD",2.5)
K ^MAG(2005,"AGPD")
"IX",2005,2005,"AGPD",11.1,0)
^.114IA^2^2
"IX",2005,2005,"AGPD",11.1,1,0)
1^F^2005^14^^1^F
"IX",2005,2005,"AGPD",11.1,2,0)
2^F^2005^113^^^
"IX",2005,2005,"AUDIT100",0)
2005^AUDIT100^Tracks changes of image fields^MU^^R^I^I^2005^^^^^A
"IX",2005,2005,"AUDIT100",.1,0)
^^5^5^3080626^
"IX",2005,2005,"AUDIT100",.1,1,0)
When values of the referenced fields are updated,
"IX",2005,2005,"AUDIT100",.1,2,0)
this "index" saves the old values to the AUDIT
"IX",2005,2005,"AUDIT100",.1,3,0)
multiple (99).
"IX",2005,2005,"AUDIT100",.1,4,0)
 
"IX",2005,2005,"AUDIT100",.1,5,0)
Added by the patch MAG*3*93.
"IX",2005,2005,"AUDIT100",1)
D AUDIT^MAGUXRF(2005,DA_",",";110;112;113;113.3",2005.099,.X1,.X2)
"IX",2005,2005,"AUDIT100",1.4)

"IX",2005,2005,"AUDIT100",2)
Q
"IX",2005,2005,"AUDIT100",11.1,0)
^.114IA^5^5
"IX",2005,2005,"AUDIT100",11.1,1,0)
1^F^2005^.01^^^
"IX",2005,2005,"AUDIT100",11.1,1,3)

"IX",2005,2005,"AUDIT100",11.1,2,0)
2^F^2005^110^^^
"IX",2005,2005,"AUDIT100",11.1,2,3)

"IX",2005,2005,"AUDIT100",11.1,3,0)
3^F^2005^112^^^
"IX",2005,2005,"AUDIT100",11.1,3,3)

"IX",2005,2005,"AUDIT100",11.1,4,0)
4^F^2005^113^^^
"IX",2005,2005,"AUDIT100",11.1,4,3)

"IX",2005,2005,"AUDIT100",11.1,5,0)
5^F^2005^113.3^^^
"IX",2005,2005,"AUDIT100",11.1,5,3)

"IX",2005.1,2005.1,"AUDIT100",0)
2005.1^AUDIT100^Tracks changes of image fields^MU^^R^I^I^2005.1^^^^^A
"IX",2005.1,2005.1,"AUDIT100",.1,0)
^^5^5^3080626^
"IX",2005.1,2005.1,"AUDIT100",.1,1,0)
When values of the referenced fields are updated,
"IX",2005.1,2005.1,"AUDIT100",.1,2,0)
this "index" saves the old values to the AUDIT
"IX",2005.1,2005.1,"AUDIT100",.1,3,0)
multiple (99).
"IX",2005.1,2005.1,"AUDIT100",.1,4,0)
 
"IX",2005.1,2005.1,"AUDIT100",.1,5,0)
Added by the patch MAG*3*93.
"IX",2005.1,2005.1,"AUDIT100",1)
D AUDIT^MAGUXRF(2005.1,DA_",",";110;112;113;113.3",2005.199,.X1,.X2)
"IX",2005.1,2005.1,"AUDIT100",1.4)

"IX",2005.1,2005.1,"AUDIT100",2)
Q
"IX",2005.1,2005.1,"AUDIT100",11.1,0)
^.114IA^5^5
"IX",2005.1,2005.1,"AUDIT100",11.1,1,0)
1^F^2005.1^.01^^^
"IX",2005.1,2005.1,"AUDIT100",11.1,1,3)

"IX",2005.1,2005.1,"AUDIT100",11.1,2,0)
2^F^2005.1^110^^^
"IX",2005.1,2005.1,"AUDIT100",11.1,2,3)

"IX",2005.1,2005.1,"AUDIT100",11.1,3,0)
3^F^2005.1^112^^^
"IX",2005.1,2005.1,"AUDIT100",11.1,3,3)

"IX",2005.1,2005.1,"AUDIT100",11.1,4,0)
4^F^2005.1^113^^^
"IX",2005.1,2005.1,"AUDIT100",11.1,4,3)

"IX",2005.1,2005.1,"AUDIT100",11.1,5,0)
5^F^2005.1^113.3^^^
"IX",2005.1,2005.1,"AUDIT100",11.1,5,3)

"IX",2005.2,2005.2,"F",0)
2005.2^F^Place and Storage type index^R^^R^IR^I^2005.2^^^^^LS
"IX",2005.2,2005.2,"F",1)
S ^MAG(2005.2,"F",X(1),X(2),DA)=""
"IX",2005.2,2005.2,"F",2)
K ^MAG(2005.2,"F",X(1),X(2),DA)
"IX",2005.2,2005.2,"F",2.5)
K ^MAG(2005.2,"F")
"IX",2005.2,2005.2,"F",11.1,0)
^.114IA^2^2
"IX",2005.2,2005.2,"F",11.1,1,0)
1^F^2005.2^.04^^1^F
"IX",2005.2,2005.2,"F",11.1,1,3)

"IX",2005.2,2005.2,"F",11.1,2,0)
2^F^2005.2^6^^2^F
"IX",2005.2,2005.2,"F",11.1,2,3)

"KRN",19,123457,-1)
0^1
"KRN",19,123457,0)
MAG JB OFFLINE^Track Offline Jukebox Images^^R^^^^^^^^IMAGING
"KRN",19,123457,1,0)
^19.06^3^3^3130220^^^
"KRN",19,123457,1,1,0)
Menu option to keep track of images for DEX & AA jukebox platters
"KRN",19,123457,1,2,0)
that have been removed.  Use this option when removing full jukebox
"KRN",19,123457,1,3,0)
platters and when those platters are placed back on-line.
"KRN",19,123457,25)
ENTRY^MAGSDOFL
"KRN",19,123457,"U")
TRACK OFFLINE JUKEBOX IMAGES
"KRN",8994,123458,-1)
0^1
"KRN",8994,123458,0)
MAGQ LOGV^ELOGRV^MAGQBPG1^2^R
"KRN",8994,123458,1,0)
^^4^4^3130321^
"KRN",8994,123458,1,1,0)
This provides a method of capturing errors logged during the BP Verifier
"KRN",8994,123458,1,2,0)
process.  This function provides a list which can be examined at a later
"KRN",8994,123458,1,3,0)
date and will be rolled into verifier log file on the BP Server or network
"KRN",8994,123458,1,4,0)
log file share.
"KRN",8994,123458,2,0)
^8994.02A^2^2
"KRN",8994,123458,2,1,0)
NULL^^^0
"KRN",8994,123458,2,1,1,0)
^^1^1^3130321^
"KRN",8994,123458,2,1,1,1,0)
No input parameter is defined.
"KRN",8994,123458,2,2,0)
LIMIT^1^5^1^1
"KRN",8994,123458,2,2,1,0)
^8994.021^1^1^3130325^^
"KRN",8994,123458,2,2,1,1,0)
This value is used to control the array size.
"KRN",8994,123458,2,"B","LIMIT",2)

"KRN",8994,123458,2,"B","NULL",1)

"KRN",8994,123458,2,"PARAMSEQ",1,2)

"KRN",8994,123458,3,0)
^^3^3^3130321^
"KRN",8994,123458,3,1,0)
This is a list of the corrupt nodes being killed by the BP Verifier
"KRN",8994,123458,3,2,0)
application.  It may be also be used for other means of reporting
"KRN",8994,123458,3,3,0)
host side information.
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",454,-1)
1^1
"PKG",454,0)
IMAGING^MAG^Imaging Release History
"PKG",454,22,0)
^9.49I^1^1
"PKG",454,22,1,0)
3.0^3020328^3020328^.5
"PKG",454,22,1,"PAH",1,0)
135^3130717^.5
"PKG",454,22,1,"PAH",1,1,0)
^9.49011^19^19^3130717
"PKG",454,22,1,"PAH",1,1,1,0)
Routines for Patch 135, Test Build 10.
"PKG",454,22,1,"PAH",1,1,2,0)
 
"PKG",454,22,1,"PAH",1,1,3,0)
Routines:
"PKG",454,22,1,"PAH",1,1,4,0)
MAGBRTE4    value = 15105909
"PKG",454,22,1,"PAH",1,1,5,0)
MAGGSIU4    value = 13652811
"PKG",454,22,1,"PAH",1,1,6,0)
MAGGSIU5    value = 8305153
"PKG",454,22,1,"PAH",1,1,7,0)
MAGIP135    value = 7151218
"PKG",454,22,1,"PAH",1,1,8,0)
MAGQBPG1    value = 22947623
"PKG",454,22,1,"PAH",1,1,9,0)
MAGQBPG2    value = 7983035
"PKG",454,22,1,"PAH",1,1,10,0)
MAGQBPRG    value = 12188271
"PKG",454,22,1,"PAH",1,1,11,0)
MAGQBTM     value = 16822600
"PKG",454,22,1,"PAH",1,1,12,0)
MAGQBUT1    value = 23584558
"PKG",454,22,1,"PAH",1,1,13,0)
MAGQBUT4    value = 13069038
"PKG",454,22,1,"PAH",1,1,14,0)
MAGQE3      value = 15906384
"PKG",454,22,1,"PAH",1,1,15,0)
MAGSDOFF    value = 11766065
"PKG",454,22,1,"PAH",1,1,16,0)
MAGSDOFL    value = 13348358
"PKG",454,22,1,"PAH",1,1,17,0)
 
"PKG",454,22,1,"PAH",1,1,18,0)
Please note that routine MAGIP135 is deleted after the KIDS Build is
"PKG",454,22,1,"PAH",1,1,19,0)
installed.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
13
"RTN","MAGBRTE4")
0^1^B73500112
"RTN","MAGBRTE4",1,0)
MAGBRTE4 ;WOIFO/EdM - Process Routing Rule Evaluation Queue ; 27 Jun 2012 5:45 PM
"RTN","MAGBRTE4",2,0)
 ;;3.0;IMAGING;**11,30,51,85,54,39,135**;Mar 19, 2002;Build 5238;Jul 17, 2013
"RTN","MAGBRTE4",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGBRTE4",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGBRTE4",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGBRTE4",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGBRTE4",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGBRTE4",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGBRTE4",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGBRTE4",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGBRTE4",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGBRTE4",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGBRTE4",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGBRTE4",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGBRTE4",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGBRTE4",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGBRTE4",17,0)
 ;;
"RTN","MAGBRTE4",18,0)
 Q
"RTN","MAGBRTE4",19,0)
 ;
"RTN","MAGBRTE4",20,0)
EVAL ;
"RTN","MAGBRTE4",21,0)
 N ACTIVE ;--- Switch that controls start/stop queue processor
"RTN","MAGBRTE4",22,0)
 N ANY ;------ Flag: processed any rule
"RTN","MAGBRTE4",23,0)
 N CONS ;----- Switch that indicates whether or not site has "consolidated" code
"RTN","MAGBRTE4",24,0)
 N KEYWORD ;-- Array with all keywords
"RTN","MAGBRTE4",25,0)
 N MAGFILE1 ;- Name of file
"RTN","MAGBRTE4",26,0)
 N XMSG ;----- Message counter
"RTN","MAGBRTE4",27,0)
 ;
"RTN","MAGBRTE4",28,0)
 F I="MAGEVAL","MAGEVALSTUDY" K ^XTMP(I,ZTSK)
"RTN","MAGBRTE4",29,0)
 D LOG^MAGBRTE5("Started at "_$H)
"RTN","MAGBRTE4",30,0)
 S XMSG=1,CONS=$$CONSOLID^MAGBAPI()
"RTN","MAGBRTE4",31,0)
 S PLACE=$S(CONS:$O(^MAG(2006.1,"B",LOCATION,"")),1:1)
"RTN","MAGBRTE4",32,0)
 L +^MAGDICOM(2006.563,1,"EVAL",LOCATION):0 E  D  Q
"RTN","MAGBRTE4",33,0)
 . D LOG^MAGBRTE5("A rule evaluator is already running for "_$$GET1^DIQ(4,LOCATION,.01))
"RTN","MAGBRTE4",34,0)
 . Q
"RTN","MAGBRTE4",35,0)
 S ^MAGDICOM(2006.563,1,"EVAL")=1
"RTN","MAGBRTE4",36,0)
 ;
"RTN","MAGBRTE4",37,0)
 S I="" F  S I=$O(RULES(I)) Q:I=""  D
"RTN","MAGBRTE4",38,0)
 . N D0,D1,D2,L,Q1
"RTN","MAGBRTE4",39,0)
 . S X=RULES(I),D0=$P(X,"^",1),Q1=$P(X,"^",2),L=$L(X,"^")
"RTN","MAGBRTE4",40,0)
 . I L=3 S RULE(D0,Q1)=$P(X,"^",3) Q
"RTN","MAGBRTE4",41,0)
 . I Q1="ACTION" S RULE(D0,Q1,$P(X,"^",3))=$P(X,"^",4,L) Q
"RTN","MAGBRTE4",42,0)
 . I Q1'="CONDITION" D LOG^MAGBRTE5("Rule "_D0_" has a qualifier """_Q1_""".") Q
"RTN","MAGBRTE4",43,0)
 . I L=5 S RULE(D0,Q1,$P(X,"^",3),$P(X,"^",4))=$P(X,"^",5) Q
"RTN","MAGBRTE4",44,0)
 . S RULE(D0,Q1,$P(X,"^",3),$P(X,"^",4),$P(X,"^",6),$P(X,"^",5))=$P(X,"^",7)
"RTN","MAGBRTE4",45,0)
 . Q
"RTN","MAGBRTE4",46,0)
 K RULES
"RTN","MAGBRTE4",47,0)
 ;
"RTN","MAGBRTE4",48,0)
 S ACTIVE=1 F  D  Q:'ACTIVE
"RTN","MAGBRTE4",49,0)
 . S ANY=0
"RTN","MAGBRTE4",50,0)
 . S ACTIVE=+$G(^MAGDICOM(2006.563,1,"EVAL")) I 'ACTIVE D  Q
"RTN","MAGBRTE4",51,0)
 . . D LOG^MAGBRTE5("Stopped at "_$H)
"RTN","MAGBRTE4",52,0)
 . . Q
"RTN","MAGBRTE4",53,0)
 . D
"RTN","MAGBRTE4",54,0)
 . . N IMAGE,QPTR,QPTR2,STATUS,X
"RTN","MAGBRTE4",55,0)
 . . D:'CONS ADD^MAGBAPI(0,"EVAL")
"RTN","MAGBRTE4",56,0)
 . . D:CONS ADD^MAGBAPI(0,"EVAL",PLACE)
"RTN","MAGBRTE4",57,0)
 . . S QPTR2=$O(^MAGQUEUE(2006.031,"B","EVAL",""))
"RTN","MAGBRTE4",58,0)
 . . S QPTR=$S(QPTR2:$P(^MAGQUEUE(2006.031,QPTR2,0),"^",2),1:"")
"RTN","MAGBRTE4",59,0)
 . . ; Get next queue pointer value
"RTN","MAGBRTE4",60,0)
 . . S:'CONS QPTR=$O(^MAGQUEUE(2006.03,"B","EVAL",QPTR))
"RTN","MAGBRTE4",61,0)
 . . S:CONS QPTR=$O(^MAGQUEUE(2006.03,"C",PLACE,"EVAL",QPTR))
"RTN","MAGBRTE4",62,0)
 . . I QPTR="" Q  ; Nothing to do
"RTN","MAGBRTE4",63,0)
 . . ;
"RTN","MAGBRTE4",64,0)
 . . S X=$G(^MAGQUEUE(2006.03,QPTR,0))
"RTN","MAGBRTE4",65,0)
 . . ; After an error, sometimes the entry is purged,
"RTN","MAGBRTE4",66,0)
 . . ; but the cross reference is still present.
"RTN","MAGBRTE4",67,0)
 . . ; In such a case, remove the cross reference.
"RTN","MAGBRTE4",68,0)
 . . I X="" D  Q
"RTN","MAGBRTE4",69,0)
 . . . K:'CONS ^MAGQUEUE(2006.03,"B","EVAL",QPTR)
"RTN","MAGBRTE4",70,0)
 . . . K:CONS ^MAGQUEUE(2006.03,"C",PLACE,"EVAL",QPTR)
"RTN","MAGBRTE4",71,0)
 . . . Q
"RTN","MAGBRTE4",72,0)
 . . ;
"RTN","MAGBRTE4",73,0)
 . . S IMAGE=$P(X,"^",7),ANY=1
"RTN","MAGBRTE4",74,0)
 . . I IMAGE,$D(^MAG(2005,IMAGE,0)) D
"RTN","MAGBRTE4",75,0)
 . . . S STATUS=$$RULES() Q:STATUS'<0
"RTN","MAGBRTE4",76,0)
 . . . I STATUS["NO NETWORK LOCATION" D  Q
"RTN","MAGBRTE4",77,0)
 . . . . D LOG^MAGBRTE5("Image "_IMAGE_" has no files associated with it")
"RTN","MAGBRTE4",78,0)
 . . . . Q
"RTN","MAGBRTE4",79,0)
 . . . D LOG^MAGBRTE5("*** EVAL queue error: "_STATUS_" ***")
"RTN","MAGBRTE4",80,0)
 . . . Q
"RTN","MAGBRTE4",81,0)
 . . D:'CONS ADD^MAGBAPI(-1,"EVAL")
"RTN","MAGBRTE4",82,0)
 . . D:CONS ADD^MAGBAPI(-1,"EVAL",PLACE)
"RTN","MAGBRTE4",83,0)
 . . D DQUE^MAGQBUT2(QPTR)
"RTN","MAGBRTE4",84,0)
 . . Q
"RTN","MAGBRTE4",85,0)
 . H:'ANY 1
"RTN","MAGBRTE4",86,0)
 . D:'$D(^XTMP("MAGEVAL",ZTSK)) XTINIT^MAGDRPC5,LOG^MAGBRTE5("^XTMP was cleaned up.")
"RTN","MAGBRTE4",87,0)
 . Q
"RTN","MAGBRTE4",88,0)
 L -^MAGDICOM(2006.563,1,"EVAL",LOCATION)
"RTN","MAGBRTE4",89,0)
 Q
"RTN","MAGBRTE4",90,0)
 ;
"RTN","MAGBRTE4",91,0)
RULES() ; To be called from above
"RTN","MAGBRTE4",92,0)
 ; IMAGE ;---- IEN for image (2005)
"RTN","MAGBRTE4",93,0)
 ; LOCATION ;- Location from which queue entry originates
"RTN","MAGBRTE4",94,0)
 N ACTION ;--- Action to be taken (SEND)
"RTN","MAGBRTE4",95,0)
 N C ;-------- Loop-variable for looping through parameters and conditions
"RTN","MAGBRTE4",96,0)
 N D ;-------- Data type
"RTN","MAGBRTE4",97,0)
 N DS ;------- Data type enclosed in space-characters
"RTN","MAGBRTE4",98,0)
 N F ;-------- ...
"RTN","MAGBRTE4",99,0)
 N METMSG ;--- Message to be issued when rule is evaluated
"RTN","MAGBRTE4",100,0)
 N O ;-------- Operator
"RTN","MAGBRTE4",101,0)
 N OK ;------- Flag: indicates whether or not rule is met
"RTN","MAGBRTE4",102,0)
 N RDT ;------ Current date (don't use DT, process might run over midnight)
"RTN","MAGBRTE4",103,0)
 N STUDYUID ;- Study UID
"RTN","MAGBRTE4",104,0)
 N V ;-------- Value for property as specified in rule
"RTN","MAGBRTE4",105,0)
 N VAL ;------ Actual value of property
"RTN","MAGBRTE4",106,0)
 N VRS ;------ String of Queue Entry numbers when rule(s) are met
"RTN","MAGBRTE4",107,0)
 N X ;-------- Scratch variable
"RTN","MAGBRTE4",108,0)
 ;
"RTN","MAGBRTE4",109,0)
 S VRS=""
"RTN","MAGBRTE4",110,0)
 ;
"RTN","MAGBRTE4",111,0)
 D KEYWORD^MAGBRTK
"RTN","MAGBRTE4",112,0)
 ;
"RTN","MAGBRTE4",113,0)
 D FILEFIND^MAGDFB(IMAGE,"FULL",0,0,.MAGFILE1)
"RTN","MAGBRTE4",114,0)
 Q:MAGFILE1<0 MAGFILE1
"RTN","MAGBRTE4",115,0)
 ;
"RTN","MAGBRTE4",116,0)
 S STUDYUID=$P($G(^MAG(2005,IMAGE,"PACS")),"^",1)
"RTN","MAGBRTE4",117,0)
 S X=$P($G(^MAG(2005,IMAGE,0)),"^",10)
"RTN","MAGBRTE4",118,0)
 S:X STUDYUID=$P($G(^MAG(2005,X,"PACS")),"^",1)
"RTN","MAGBRTE4",119,0)
 ;
"RTN","MAGBRTE4",120,0)
 S RULE=0 F  S RULE=$O(RULE(RULE)) Q:'RULE  D
"RTN","MAGBRTE4",121,0)
 . S METMSG=$G(RULE(RULE,"ACTION"))
"RTN","MAGBRTE4",122,0)
 . S X=" (",C=0 F  S C=$O(RULE(RULE,"ACTION",C)) Q:'C  D
"RTN","MAGBRTE4",123,0)
 . . S METMSG=METMSG_X_$G(RULE(RULE,"ACTION",C)),X=", "
"RTN","MAGBRTE4",124,0)
 . . Q
"RTN","MAGBRTE4",125,0)
 . S:X'=" (" METMSG=METMSG_")"
"RTN","MAGBRTE4",126,0)
 . S:METMSG="" METMSG="Rule #"_RULE
"RTN","MAGBRTE4",127,0)
 . S OK=$G(^XTMP("MAGEVALSTUDY",ZTSK,STUDYUID,RULE))
"RTN","MAGBRTE4",128,0)
 . I OK="" S OK=1,C=0 F  S C=$O(RULE(RULE,"CONDITION",C)) Q:'C  D  Q:'OK
"RTN","MAGBRTE4",129,0)
 . . S F=$G(RULE(RULE,"CONDITION",C,"KW")) Q:F=""
"RTN","MAGBRTE4",130,0)
 . . S X=$G(KEYWORD("CONDITION",F),"^DICOM^MAGBRTE3(F,""OUT"",.VAL)")
"RTN","MAGBRTE4",131,0)
 . . K VAL D @$P(X,"^",2,9)
"RTN","MAGBRTE4",132,0)
 . . ; If the field is not defined, the test passes...
"RTN","MAGBRTE4",133,0)
 . . Q:$D(VAL)'=1  ; We won't deal with multiple values just yet...
"RTN","MAGBRTE4",134,0)
 . . ;
"RTN","MAGBRTE4",135,0)
 . . S V=$G(RULE(RULE,"CONDITION",C,"VA"))
"RTN","MAGBRTE4",136,0)
 . . S D=$G(RULE(RULE,"CONDITION",C,"DT"))
"RTN","MAGBRTE4",137,0)
 . . S O=$G(RULE(RULE,"CONDITION",C,"OP"))
"RTN","MAGBRTE4",138,0)
 . . S:D="" D="S"
"RTN","MAGBRTE4",139,0)
 . . S DS=" "_D_" "
"RTN","MAGBRTE4",140,0)
 . . D:" S CS DS IS LO LT OB OW PN SH ST "[DS
"RTN","MAGBRTE4",141,0)
 . . . N WILD ;-- Wildcard to be matched
"RTN","MAGBRTE4",142,0)
 . . . S WILD=$$WLDMATCH^MAGBRTE5(VAL,V)
"RTN","MAGBRTE4",143,0)
 . . . I O="=",'WILD S OK=0 Q
"RTN","MAGBRTE4",144,0)
 . . . I O="!=",WILD S OK=0 Q
"RTN","MAGBRTE4",145,0)
 . . . Q
"RTN","MAGBRTE4",146,0)
 . . D:" DT DA TM "[DS
"RTN","MAGBRTE4",147,0)
 . . . Q:O'="="  ; Only "within range" comparisons allowed currently
"RTN","MAGBRTE4",148,0)
 . . . ;
"RTN","MAGBRTE4",149,0)
 . . . N A ;--- Flag: indicates whether at least one time-frame matches
"RTN","MAGBRTE4",150,0)
 . . . N B ;--- Begin date/time
"RTN","MAGBRTE4",151,0)
 . . . N E ;--- End date/time
"RTN","MAGBRTE4",152,0)
 . . . N I ;--- Loopcounter
"RTN","MAGBRTE4",153,0)
 . . . N M ;--- Date/time mask
"RTN","MAGBRTE4",154,0)
 . . . N N ;--- Loopcounter (time-frames)
"RTN","MAGBRTE4",155,0)
 . . . N %T ;-- FileMan internal variable
"RTN","MAGBRTE4",156,0)
 . . . N VV ;-- Actual value
"RTN","MAGBRTE4",157,0)
 . . . N WD ;-- Weekday
"RTN","MAGBRTE4",158,0)
 . . . N X1 ;-- FileMan API parameter value -- date
"RTN","MAGBRTE4",159,0)
 . . . N X2 ;-- FileMan API parameter value -- date
"RTN","MAGBRTE4",160,0)
 . . . ;
"RTN","MAGBRTE4",161,0)
 . . . ; convert the literal date/time field into the format for comparison
"RTN","MAGBRTE4",162,0)
 . . . S VV=VAL
"RTN","MAGBRTE4",163,0)
 . . . ;
"RTN","MAGBRTE4",164,0)
 . . . S (A,N)=0 F  S N=$O(RULE(RULE,"CONDITION",C,"VA",N)) Q:'N  D
"RTN","MAGBRTE4",165,0)
 . . . . N T,VB,VC,VE
"RTN","MAGBRTE4",166,0)
 . . . . S M=$G(RULE(RULE,"CONDITION",C,"VA",N,"M"))
"RTN","MAGBRTE4",167,0)
 . . . . S B=$G(RULE(RULE,"CONDITION",C,"VA",N,"B"))
"RTN","MAGBRTE4",168,0)
 . . . . S E=$G(RULE(RULE,"CONDITION",C,"VA",N,"E"))
"RTN","MAGBRTE4",169,0)
 . . . . S T=1
"RTN","MAGBRTE4",170,0)
 . . . . I $E(M,1,3)="HOL" S:$$GET1^DIQ(40.5,+$E(VV,5,11),.01)="" T=0 ; IA 10038
"RTN","MAGBRTE4",171,0)
 . . . . I $E(M,1,3)="DDD",$E(B,1,3)'=$E(VAL,1,3) S T=0
"RTN","MAGBRTE4",172,0)
 . . . . S (VB,VC,VE)=""
"RTN","MAGBRTE4",173,0)
 . . . . F I=4:1:$L(M) S:$E(M,I)?1U VC=VC_$E(VV,I),VB=VB_$E(B,I),VE=VE_$E(E,I)
"RTN","MAGBRTE4",174,0)
 . . . . S:VB>VC T=0
"RTN","MAGBRTE4",175,0)
 . . . . S:VE<VC T=0
"RTN","MAGBRTE4",176,0)
 . . . . S:T A=1
"RTN","MAGBRTE4",177,0)
 . . . . Q
"RTN","MAGBRTE4",178,0)
 . . . S:'A OK=0
"RTN","MAGBRTE4",179,0)
 . . . Q
"RTN","MAGBRTE4",180,0)
 . . Q
"RTN","MAGBRTE4",181,0)
 . S ^XTMP("MAGEVALSTUDY",ZTSK,STUDYUID,RULE)=OK
"RTN","MAGBRTE4",182,0)
 . S METMSG(OK,METMSG)=""
"RTN","MAGBRTE4",183,0)
 . S RDT=$$NOW^XLFDT()\1
"RTN","MAGBRTE4",184,0)
 . Q:'OK
"RTN","MAGBRTE4",185,0)
 . S ACTION=$G(RULE(RULE,"ACTION"))
"RTN","MAGBRTE4",186,0)
 . Q:ACTION=""
"RTN","MAGBRTE4",187,0)
 . I ACTION="SEND" D  Q
"RTN","MAGBRTE4",188,0)
 . . N D,PRI,X
"RTN","MAGBRTE4",189,0)
 . . S X=$G(RULE(RULE,"ACTION",1))
"RTN","MAGBRTE4",190,0)
 . . I X="" S METMSG(0,"No location for rule "_RULE)="" Q
"RTN","MAGBRTE4",191,0)
 . . D VALDEST^MAGDRPC1(.D,X)
"RTN","MAGBRTE4",192,0)
 . . I D<0 S METMSG(0,"Cannot find location """_X_""".")="" Q
"RTN","MAGBRTE4",193,0)
 . . S PRI=$$PRI($G(RULE(RULE,"PRIORITY")),IMAGE)
"RTN","MAGBRTE4",194,0)
 . . S VRS=$$VRS^MAGBRTE5(VRS,$$SEND^MAGBRTE5(IMAGE,D,PRI,1,LOCATION))
"RTN","MAGBRTE4",195,0)
 . . Q
"RTN","MAGBRTE4",196,0)
 . I ACTION="DICOM" D  Q
"RTN","MAGBRTE4",197,0)
 . . N D,PRI,X
"RTN","MAGBRTE4",198,0)
 . . S X=$G(RULE(RULE,"ACTION",1))
"RTN","MAGBRTE4",199,0)
 . . I X="" S METMSG(0,"No location for rule "_RULE)="" Q
"RTN","MAGBRTE4",200,0)
 . . S D=$O(^MAG(2006.587,"B",X,""))
"RTN","MAGBRTE4",201,0)
 . . I D="" S METMSG(0,"Cannot find location """_X_""".")="" Q
"RTN","MAGBRTE4",202,0)
 . . S PRI=$$PRI($G(RULE(RULE,"PRIORITY")),IMAGE)
"RTN","MAGBRTE4",203,0)
 . . S VRS=$$VRS^MAGBRTE5(VRS,$$SEND^MAGBRTE5(IMAGE,D,PRI,2,LOCATION))
"RTN","MAGBRTE4",204,0)
 . . Q
"RTN","MAGBRTE4",205,0)
 . I ACTION="BALANCE" D BALANCE^MAGBRTE5(IMAGE,.RULE) Q
"RTN","MAGBRTE4",206,0)
 . ;
"RTN","MAGBRTE4",207,0)
 . ; Other actions to be inserted here...
"RTN","MAGBRTE4",208,0)
 . ;
"RTN","MAGBRTE4",209,0)
 . Q
"RTN","MAGBRTE4",210,0)
 ;
"RTN","MAGBRTE4",211,0)
 ; Note: we may have:
"RTN","MAGBRTE4",212,0)
 ;    Rule 1: If CR, send to XXX
"RTN","MAGBRTE4",213,0)
 ;    Rule 2: If CT, send to XXX
"RTN","MAGBRTE4",214,0)
 ; For a CR, this would cause an entry of
"RTN","MAGBRTE4",215,0)
 ;    METMSG(0,"SEND(XXX)") for rule 2
"RTN","MAGBRTE4",216,0)
 ; and an entry of
"RTN","MAGBRTE4",217,0)
 ;    METMSG(1,"SEND(XXX)") for rule 1
"RTN","MAGBRTE4",218,0)
 ; and for a CT it would be the other way around.
"RTN","MAGBRTE4",219,0)
 ; So, first remove all "failed" entries that were successful
"RTN","MAGBRTE4",220,0)
 ; for a different rule.
"RTN","MAGBRTE4",221,0)
 ;
"RTN","MAGBRTE4",222,0)
 S X="" F  S X=$O(METMSG(1,X)) Q:X=""  D
"RTN","MAGBRTE4",223,0)
 . D LOG^MAGBRTE5("Image "_IMAGE_": "_X)
"RTN","MAGBRTE4",224,0)
 . K METMSG(0,X)
"RTN","MAGBRTE4",225,0)
 . Q
"RTN","MAGBRTE4",226,0)
 S X="" F  S X=$O(METMSG(0,X)) Q:X=""  D
"RTN","MAGBRTE4",227,0)
 . D LOG^MAGBRTE5("Image "_IMAGE_": Do not "_X)
"RTN","MAGBRTE4",228,0)
 . Q
"RTN","MAGBRTE4",229,0)
 Q VRS
"RTN","MAGBRTE4",230,0)
 ;
"RTN","MAGBRTE4",231,0)
 ;
"RTN","MAGBRTE4",232,0)
PRI(PRI,IMAGE) N C,D0,D1,D2,O,P,R,X
"RTN","MAGBRTE4",233,0)
 S PRI=$S(PRI="HIGH":750,PRI="NORMAL":500,PRI="LOW":250,1:500)
"RTN","MAGBRTE4",234,0)
 S X=$G(^MAG(2005,IMAGE,2))
"RTN","MAGBRTE4",235,0)
 S P=$P(X,"^",6) Q:P'=74 PRI
"RTN","MAGBRTE4",236,0)
 S R=$P(X,"^",7) Q:'R PRI
"RTN","MAGBRTE4",237,0)
 S C=$P($G(^RARPT(R,0)),"^",1) Q:C="" PRI  ; IA 1171
"RTN","MAGBRTE4",238,0)
 S D0=$O(^RADPT("ADC",C,"")) Q:'D0 PRI  ; IA 1172
"RTN","MAGBRTE4",239,0)
 S D1=$O(^RADPT("ADC",C,D0,"")) Q:'D1 PRI  ; IA 1172
"RTN","MAGBRTE4",240,0)
 S D2=$O(^RADPT("ADC",C,D0,D1,"")) Q:'D2 PRI  ; IA 1172
"RTN","MAGBRTE4",241,0)
 S O=$P($G(^RADPT(D0,"DT",D1,"P",D2,0)),"^",11) Q:'O PRI  ; IA 1172
"RTN","MAGBRTE4",242,0)
 S X=$P($G(^RAO(75.1,O,0)),"^",6) ; IA 3074
"RTN","MAGBRTE4",243,0)
 Q PRI+$S(X=1:20,X=2:10,1:0)
"RTN","MAGBRTE4",244,0)
 ;
"RTN","MAGGSIU4")
0^2^B81149201
"RTN","MAGGSIU4",1,0)
MAGGSIU4 ;WOIFO/NST/GEK - Utilities for Image Import API ; 16 Apr 2013 8:49 AM
"RTN","MAGGSIU4",2,0)
 ;;3.0;IMAGING;**121,135**;Mar 19, 2002;Build 5238;Jul 17, 2013
"RTN","MAGGSIU4",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGSIU4",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIU4",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIU4",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIU4",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIU4",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIU4",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIU4",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIU4",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIU4",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIU4",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIU4",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIU4",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIU4",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIU4",17,0)
 ;;
"RTN","MAGGSIU4",18,0)
 Q
"RTN","MAGGSIU4",19,0)
 ; ----- Rescind images attached to a TIU note
"RTN","MAGGSIU4",20,0)
 ; RESCIND(MAGRY,TIUDA)
"RTN","MAGGSIU4",21,0)
 ;
"RTN","MAGGSIU4",22,0)
 ; Input Parameters
"RTN","MAGGSIU4",23,0)
 ; ================
"RTN","MAGGSIU4",24,0)
 ; TIUDA = IEN of TIU note in TIU DOCUMENT file (#8925) 
"RTN","MAGGSIU4",25,0)
 ;           
"RTN","MAGGSIU4",26,0)
 ; Return Values
"RTN","MAGGSIU4",27,0)
 ; =============
"RTN","MAGGSIU4",28,0)
 ; if error found during execution
"RTN","MAGGSIU4",29,0)
 ;   MAGRY(0) = 0^Error message"
"RTN","MAGGSIU4",30,0)
 ;   MAGRU(1..N) = messages describing the Error.
"RTN","MAGGSIU4",31,0)
 ;   
"RTN","MAGGSIU4",32,0)
 ; if success
"RTN","MAGGSIU4",33,0)
 ;   MAGRY(0) = 1^Success
"RTN","MAGGSIU4",34,0)
 ;   .. for each image queued we have 3 lines of info.
"RTN","MAGGSIU4",35,0)
 ;   MAGRY(x)   = Image(1..n): Tracking ID: TRKID  
"RTN","MAGGSIU4",36,0)
 ;   MAGRY(x+1) = Image(1..n): Queue: QUENUMBER
"RTN","MAGGSIU4",37,0)
 ;   MAGRY(x+2) = Image(1..n): Image: MAGDA
"RTN","MAGGSIU4",38,0)
 ;   
"RTN","MAGGSIU4",39,0)
 ; if First image success, and subsequent image problem we Return
"RTN","MAGGSIU4",40,0)
 ;   MAGRY(0) =  2^Warning message
"RTN","MAGGSIU4",41,0)
 ;   for each successfully Queued image queued we have 3 lines of info as above
"RTN","MAGGSIU4",42,0)
 ;   for any image that was a problem deleting (unlikely) we have MAGDA and 
"RTN","MAGGSIU4",43,0)
 ;   error messages.  The Image is changed to status of "Needs Review", 
"RTN","MAGGSIU4",44,0)
 ;     so it is blocked from view.
"RTN","MAGGSIU4",45,0)
 ;   MAGRY(x) = Image(n): Image: MAGDA
"RTN","MAGGSIU4",46,0)
 ;   MAGRY(x+1) = 
"RTN","MAGGSIU4",47,0)
 ;   
"RTN","MAGGSIU4",48,0)
 ;   
"RTN","MAGGSIU4",49,0)
 ;   Tracking ID is a field in each file: 
"RTN","MAGGSIU4",50,0)
 ;      IMAGE File (#2005) (Field #108) (index "ATRKID")
"RTN","MAGGSIU4",51,0)
 ;      IMAGING WINDOWS SESSION File (#2006.82) (Field #8) (index "E")
"RTN","MAGGSIU4",52,0)
 ;      ACQUISITION SESSION FILE File(#2006.041)(Field #.02) (index "C")
"RTN","MAGGSIU4",53,0)
 ;
"RTN","MAGGSIU4",54,0)
RESCIND(MAGRY,TIUDA) ; Main entry point to rescind images attached to a TIU note
"RTN","MAGGSIU4",55,0)
 N IMGLIST,MAGA,QUECT
"RTN","MAGGSIU4",56,0)
 N MAGIEN,REASON,REASDA,MERR
"RTN","MAGGSIU4",57,0)
 N I,I2,S,ICT,N0,N2,N40,MPOS
"RTN","MAGGSIU4",58,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGSIU4",59,0)
 K MAGRY
"RTN","MAGGSIU4",60,0)
 ; check TIUDA
"RTN","MAGGSIU4",61,0)
 I '$G(TIUDA) S MAGRY(0)="0^TIU Note is not valid: "_TIUDA Q
"RTN","MAGGSIU4",62,0)
 I '$D(^TIU(8925,TIUDA)) S MAGRY(0)="0^TIU Note does not exist: "_TIUDA Q
"RTN","MAGGSIU4",63,0)
 ;
"RTN","MAGGSIU4",64,0)
 ; Does Note have any Images?  Quit if No.
"RTN","MAGGSIU4",65,0)
 D GETILST^TIUSRVPL(.MAGA,TIUDA)
"RTN","MAGGSIU4",66,0)
 I '$D(MAGA) S MAGRY(0)="1^No images found for TIU Note: "_TIUDA  Q  ; no images found 
"RTN","MAGGSIU4",67,0)
 ;
"RTN","MAGGSIU4",68,0)
 ;  Set the Reason text and Reason DA
"RTN","MAGGSIU4",69,0)
 S REASON="Rescinded TIU Note"
"RTN","MAGGSIU4",70,0)
 S REASDA=$O(^MAG(2005.88,"B",REASON,""))
"RTN","MAGGSIU4",71,0)
 ;
"RTN","MAGGSIU4",72,0)
 S MAGRY(0)="0^Processing Rescind request..."
"RTN","MAGGSIU4",73,0)
 D IMAGES^MAGGNTI(.IMGLIST,TIUDA)  ; Get a list with images linked to TIU note
"RTN","MAGGSIU4",74,0)
 ; format of result to IMAGES:  
"RTN","MAGGSIU4",75,0)
 ; XX(1)="B2^20175^<FULL UNC PATCH to Full Res Image>^<FULL UNC PATCH to Abstract>
"RTN","MAGGSIU4",76,0)
 ;  we know there are images (from above) so a '0^' means an error in this situation.
"RTN","MAGGSIU4",77,0)
 I '$P(IMGLIST(0),"^",1) D  Q  ;
"RTN","MAGGSIU4",78,0)
 . S MAGRY(0)="0^Error building Image list for TIU Note: "_TIUDA
"RTN","MAGGSIU4",79,0)
 . S MAGRY($O(MAGRY(""),-1)+1)=IMGLIST(0)
"RTN","MAGGSIU4",80,0)
 . D MAILERR("",TIUDA,.MAGRY) Q
"RTN","MAGGSIU4",81,0)
 . Q
"RTN","MAGGSIU4",82,0)
 ;
"RTN","MAGGSIU4",83,0)
 S I=0,ICT=0,QUECT=0,MERR=""
"RTN","MAGGSIU4",84,0)
 ; we are setting an Import Queue for each image attached to the Note.
"RTN","MAGGSIU4",85,0)
 F  S I=$O(IMGLIST(I)) Q:I=""  D  I $L(MERR) S MAGRY(0)=MERR Q
"RTN","MAGGSIU4",86,0)
 . S ICT=ICT+1 ; Image Counter.
"RTN","MAGGSIU4",87,0)
 . ; example: (1)="B2^19412^c:\image\Q...\QRT00000019412.JPG^c:\image\Q...\QRT00000019412.ABS
"RTN","MAGGSIU4",88,0)
 . S MAGIEN=$P(IMGLIST(I),U,2)
"RTN","MAGGSIU4",89,0)
 . K MAGRY2
"RTN","MAGGSIU4",90,0)
 . D RSND1^MAGGSIU5(.MAGRY2,MAGIEN,TIUDA,REASON)
"RTN","MAGGSIU4",91,0)
 . ;
"RTN","MAGGSIU4",92,0)
 . ; We need to build MAGRY with MAGRY2 from each image.
"RTN","MAGGSIU4",93,0)
 . S I2="" F  S I2=$O(MAGRY2(I2)) Q:(I2="")  D
"RTN","MAGGSIU4",94,0)
 . . S MAGRY($O(MAGRY(""),-1)+1)="Image("_ICT_") "_MAGRY2(I2)
"RTN","MAGGSIU4",95,0)
 . . Q
"RTN","MAGGSIU4",96,0)
 . ;   add the Image IEN to Result Array.
"RTN","MAGGSIU4",97,0)
 . S MAGRY($O(MAGRY(""),-1)+1)="Image("_ICT_") IEN: "_MAGIEN
"RTN","MAGGSIU4",98,0)
 . ; if success MAGRY2(0)= QueNumber ^Data has been Queued.
"RTN","MAGGSIU4",99,0)
 . I MAGRY2(0)>0 S QUECT=QUECT+1
"RTN","MAGGSIU4",100,0)
 . I 'MAGRY2(0) D  ;
"RTN","MAGGSIU4",101,0)
 . . ; If Error after calling RSND1, then if Image ISN'T Deleted, we
"RTN","MAGGSIU4",102,0)
 . . ; want to change it's status to 'Needs Review' to block it from view.
"RTN","MAGGSIU4",103,0)
 . . D SETSTAT(MAGIEN,11,REASDA)
"RTN","MAGGSIU4",104,0)
 . . ;
"RTN","MAGGSIU4",105,0)
 . . ; if this is first image, we Quit the process.
"RTN","MAGGSIU4",106,0)
 . . I ICT=1 S MERR=MAGRY2(0) Q
"RTN","MAGGSIU4",107,0)
 . . ; if this is image other than first, we return Warning.
"RTN","MAGGSIU4",108,0)
 . . S MAGRY(0)="2^Warning while creating Import Queue"
"RTN","MAGGSIU4",109,0)
 . . Q
"RTN","MAGGSIU4",110,0)
 . Q
"RTN","MAGGSIU4",111,0)
 ; add TIUDA to the result Array.
"RTN","MAGGSIU4",112,0)
 S MAGRY($O(MAGRY(""),-1)+1)="TIU Note: "_TIUDA
"RTN","MAGGSIU4",113,0)
 ; Call MAILERR if needed  i.e if  MAGRY(0)=0 OR 2  .
"RTN","MAGGSIU4",114,0)
 I $L(MERR)!(+MAGRY(0)=2) D MAILERR("","",.MAGRY) Q
"RTN","MAGGSIU4",115,0)
 ;  Here.  Image has been queued.   If Group, check for QUECT not equal Image Count.
"RTN","MAGGSIU4",116,0)
 S MPOS="" I QUECT>1 S MPOS="s"
"RTN","MAGGSIU4",117,0)
 S MAGRY(0)="1^"_QUECT_" Image"_MPOS_" Queued for RESCINDED watermark"
"RTN","MAGGSIU4",118,0)
 ; if only some of images queued for watermark, change status in 
"RTN","MAGGSIU4",119,0)
 ; (0) node to warning '2' and add a line of text.
"RTN","MAGGSIU4",120,0)
 I QUECT<ICT D
"RTN","MAGGSIU4",121,0)
 . S $P(MAGRY(0),"^",1)="2"
"RTN","MAGGSIU4",122,0)
 . S MAGRY($O(MAGRY(""),-1)+1)="Warning : Only "_QUECT_" of "_ICT_" images were Queued for Watermark"
"RTN","MAGGSIU4",123,0)
 Q
"RTN","MAGGSIU4",124,0)
 ;
"RTN","MAGGSIU4",125,0)
 ; --------  TRKID()   Returns Unique Tracking ID for Import API --------
"RTN","MAGGSIU4",126,0)
 ;   Imaging is now a 'user' of the Import API.  This API call will 
"RTN","MAGGSIU4",127,0)
 ;   guarantee a unique Imaging Tracking ID number for Rescind "MAGRSND"
"RTN","MAGGSIU4",128,0)
 ;   to be used when Imaging Calls the Import API.
"RTN","MAGGSIU4",129,0)
 ;  ; e.g. MAGRSND;3110222.080459.344
"RTN","MAGGSIU4",130,0)
TRKID() ; Returns a new unique Import API tracking id
"RTN","MAGGSIU4",131,0)
 N TKI,EDT
"RTN","MAGGSIU4",132,0)
 ; Set the required 0 node of XTMP.  
"RTN","MAGGSIU4",133,0)
 S EDT=$$FMADD^XLFDT(DT,30)
"RTN","MAGGSIU4",134,0)
 I $P($G(^XTMP("MAGTRKID",0)),"^",1)<EDT S $P(^XTMP("MAGTRKID",0),"^",1,2)=EDT_"^"_DT
"RTN","MAGGSIU4",135,0)
 ;
"RTN","MAGGSIU4",136,0)
 ; Need to use LOCKs and daily counter to assure we have unique TRKID
"RTN","MAGGSIU4",137,0)
 ; Lock it, increment today's counter, use increment, update counter and UnLock it for next.  
"RTN","MAGGSIU4",138,0)
 L +^XTMP("MAGTRKID"):4 E  Q 0
"RTN","MAGGSIU4",139,0)
 S TKI=$G(^XTMP("MAGTRKID",DT))+1
"RTN","MAGGSIU4",140,0)
 S ^XTMP("MAGTRKID",DT)=TKI
"RTN","MAGGSIU4",141,0)
 L -^XTMP("MAGTRKID")
"RTN","MAGGSIU4",142,0)
 ;
"RTN","MAGGSIU4",143,0)
 Q "MAGRSND;"_$$NOW^XLFDT_"."_TKI
"RTN","MAGGSIU4",144,0)
 ;
"RTN","MAGGSIU4",145,0)
 ;
"RTN","MAGGSIU4",146,0)
 ; --------  STATCB(STATARR) -----------
"RTN","MAGGSIU4",147,0)
 ;   TAG^ROUTINE Receives the status array of the Import Process.
"RTN","MAGGSIU4",148,0)
 ;   This is the Imaging Callback function required by the Import API.
"RTN","MAGGSIU4",149,0)
 ;   This Status Callback is for the RESCIND Import function.
"RTN","MAGGSIU4",150,0)
 ;   STATARR is the status array of the Import Process
"RTN","MAGGSIU4",151,0)
 ;    ;   STATARR is the format
"RTN","MAGGSIU4",152,0)
 ;   (0)=0|1|2     0=Error, 1=Success, 2=Warning
"RTN","MAGGSIU4",153,0)
 ;   (1)=Tracking ID
"RTN","MAGGSIU4",154,0)
 ;   (2)=Queue Number
"RTN","MAGGSIU4",155,0)
 ;   (3..n)= any extra messages describing error or warning. 
"RTN","MAGGSIU4",156,0)
 ;
"RTN","MAGGSIU4",157,0)
STATCB(STATARR) ; CALLBACK function for IAPI Status array for Rescinded Import.
"RTN","MAGGSIU4",158,0)
 ;   Tracking of Rescinded Image through IMAGE ACCESS LOG (#2006.95) 
"RTN","MAGGSIU4",159,0)
 ;   For Rescinded Images : Set Delete Queue with File Name(s)
"RTN","MAGGSIU4",160,0)
 ;   i.e. the Image Entry in 2005 is already deleted, now delete the Image Files
"RTN","MAGGSIU4",161,0)
 ;   Email Status of Rescind to Mail Group.  Success, Warning or Error.
"RTN","MAGGSIU4",162,0)
 ;   
"RTN","MAGGSIU4",163,0)
 N IDATA,TRKID,I,SESS,SDATA
"RTN","MAGGSIU4",164,0)
 N MAGDUZ,MAGO,MAGDFN,MAGAD
"RTN","MAGGSIU4",165,0)
 N STATUS ;Status of the Rescinded Import
"RTN","MAGGSIU4",166,0)
 S STATUS=+$P($G(STATARR(0)),"^",1)
"RTN","MAGGSIU4",167,0)
 S TRKID=$G(STATARR(1))
"RTN","MAGGSIU4",168,0)
 I $L(TRKID) D
"RTN","MAGGSIU4",169,0)
 . S SESS=$$SES4TRK^MAGGSIU3(TRKID)
"RTN","MAGGSIU4",170,0)
 . I $L(SESS) D  ; Create Entry in IMAGE ACCESS LOG file (#2006.95)
"RTN","MAGGSIU4",171,0)
 . . S SDATA=$G(^MAG(2006.82,SESS,0))
"RTN","MAGGSIU4",172,0)
 . . S MAGDUZ=$P(SDATA,"^",2),MAGO=$P(SDATA,"^",7),MAGDFN=$P(SDATA,"^",6)
"RTN","MAGGSIU4",173,0)
 . . ; set the Additional info (MAGAD) to the (0) node message or warning. 
"RTN","MAGGSIU4",174,0)
 . . ;    get out "^" for storage.
"RTN","MAGGSIU4",175,0)
 . . S MAGAD=$TR(STATARR(0),"^","~")
"RTN","MAGGSIU4",176,0)
 . . ; Parameters needed:    (MAGAD optional)
"RTN","MAGGSIU4",177,0)
 . . ; ENTRY^MAGLOG(MAGIMT     ,MAGDUZ         ,MAGO        ,MAGPACK,   MAGDFN   ,MAGCT,MAGAD)
"RTN","MAGGSIU4",178,0)
 . . D ENTRY^MAGLOG("RESCIND",MAGDUZ,MAGO,"IAPI",MAGDFN,1,MAGAD)
"RTN","MAGGSIU4",179,0)
 . . Q
"RTN","MAGGSIU4",180,0)
 . ;  If there are Rescinded image files, we get a list of the files we need 
"RTN","MAGGSIU4",181,0)
 . ;  to set Delete Queues for.  i.e. this is Abs, Full, Big and Alt (Alt is TXT File).
"RTN","MAGGSIU4",182,0)
 . ;  In the Session File we saved the Place. Place is needed for the Delete function.
"RTN","MAGGSIU4",183,0)
 . ;  So we get data from Session File (#2006.82) for the files to delete.
"RTN","MAGGSIU4",184,0)
 . D GETIAPID^MAGGSIUI(.IDATA,TRKID) ; Data from (#2006.82) Session File.
"RTN","MAGGSIU4",185,0)
 . ;135T5 Topeka issue: Only Delete Images if Rescind is Successful.
"RTN","MAGGSIU4",186,0)
 . I STATUS S I=0 F  S I=$O(STATARR(I)) Q:'I  D  ;
"RTN","MAGGSIU4",187,0)
 . . I $P(STATARR(I),"^",1)="RESCINDED IMAGE FILE" D DELFILES(.IDATA)
"RTN","MAGGSIU4",188,0)
 . . Q
"RTN","MAGGSIU4",189,0)
 . Q
"RTN","MAGGSIU4",190,0)
 ; Mail Status.
"RTN","MAGGSIU4",191,0)
 D MAILSTAT(.STATARR)
"RTN","MAGGSIU4",192,0)
 Q
"RTN","MAGGSIU4",193,0)
 ; --------  Notifies user of problems of the Rescind/Watermark attempt.
"RTN","MAGGSIU4",194,0)
 ;      IEN : IMAGE File (#2005)
"RTN","MAGGSIU4",195,0)
 ;      TIUDA : TIU DOCUMENT File (#8925)
"RTN","MAGGSIU4",196,0)
 ;      STARR : Status array to send in message.
"RTN","MAGGSIU4",197,0)
MAILERR(IEN,TIUDA,STARR) ;  Notifies user of problems.
"RTN","MAGGSIU4",198,0)
 ; IEN = IEN of the image in IMAGE file (#2005)
"RTN","MAGGSIU4",199,0)
 ; TIUDA = IEN of Note in TIU DOCUMENT File (#8925)
"RTN","MAGGSIU4",200,0)
 ; Only add IEN, TIUDA if requested.
"RTN","MAGGSIU4",201,0)
 I $G(IEN) S STARR($O(STARR(""),-1)+1)="Image IEN: "_$G(IEN)
"RTN","MAGGSIU4",202,0)
 I $G(TIUDA) S STARR($O(STARR(""),-1)+1)="TIU Note: "_$G(TIUDA)
"RTN","MAGGSIU4",203,0)
 D MAILSTAT(.STARR)
"RTN","MAGGSIU4",204,0)
 Q
"RTN","MAGGSIU4",205,0)
 ;
"RTN","MAGGSIU4",206,0)
 ; ----- MAILSTAT -  Mail Msgs from RESCIND Function.--------
"RTN","MAGGSIU4",207,0)
 ;      STATARR : Status Array to send to G.MAG SERVER mail group.
"RTN","MAGGSIU4",208,0)
 ;      
"RTN","MAGGSIU4",209,0)
MAILSTAT(STATARR) ;Status Callback (called by the import API)
"RTN","MAGGSIU4",210,0)
 ;
"RTN","MAGGSIU4",211,0)
 N I,MARR,CT
"RTN","MAGGSIU4",212,0)
 N XMDUZ,XMSUB,XMTEXT,XMY
"RTN","MAGGSIU4",213,0)
 ;  0 = error, 2 = Warning, 1 = Success.
"RTN","MAGGSIU4",214,0)
 ; [  ] do we Always send email, Success or Not. ?
"RTN","MAGGSIU4",215,0)
 ; or only sending Error and Warning, because too many emails ?  
"RTN","MAGGSIU4",216,0)
 ; I $P(STATARR(0),"^",1)'=1 D  ;
"RTN","MAGGSIU4",217,0)
 D  ; For now, Always send email, Success or Not.
"RTN","MAGGSIU4",218,0)
 . ; send email to G.MAG SERVER and current user.
"RTN","MAGGSIU4",219,0)
 . ;Send to:
"RTN","MAGGSIU4",220,0)
 . S XMY("G.MAG SERVER")=""
"RTN","MAGGSIU4",221,0)
 . S XMDUZ=DUZ ; Current User could be TIU User. Send DUZ also.
"RTN","MAGGSIU4",222,0)
 . S XMSUB="Import API Report"
"RTN","MAGGSIU4",223,0)
 . S XMTEXT="MARR("
"RTN","MAGGSIU4",224,0)
 . ; XMD needs array to start with 1
"RTN","MAGGSIU4",225,0)
 . S CT=0,I=""
"RTN","MAGGSIU4",226,0)
 . F  S I=$O(STATARR(I)) Q:I=""  D
"RTN","MAGGSIU4",227,0)
 . . S CT=CT+1,MARR(CT)=I_") "_STATARR(I)
"RTN","MAGGSIU4",228,0)
 . . Q
"RTN","MAGGSIU4",229,0)
 . S CT=CT+1,MARR(CT)=" "
"RTN","MAGGSIU4",230,0)
 . S CT=CT+1,MARR(CT)="   The preceding array was generated by"
"RTN","MAGGSIU4",231,0)
 . S CT=CT+1,MARR(CT)="   the VistA Imaging Import API while "
"RTN","MAGGSIU4",232,0)
 . S CT=CT+1,MARR(CT)="   processing a 'RESCIND' Image action."
"RTN","MAGGSIU4",233,0)
 . D ^XMD
"RTN","MAGGSIU4",234,0)
 . Q
"RTN","MAGGSIU4",235,0)
 Q
"RTN","MAGGSIU4",236,0)
 ; -----    Set Status of Image and Status Reason.
"RTN","MAGGSIU4",237,0)
 ;   MAGIEN = Internal entry number IMAGE File (#2005)
"RTN","MAGGSIU4",238,0)
 ;   STAT   = Internal value for STATUS Field  (#113)
"RTN","MAGGSIU4",239,0)
 ;   REASDA = Internal value for STATUS REASON Field (#113.3)
"RTN","MAGGSIU4",240,0)
 ;   
"RTN","MAGGSIU4",241,0)
SETSTAT(MAGIEN,STAT,REASDA) ;
"RTN","MAGGSIU4",242,0)
 N MAGFDA,MAGERR,IENC,MSG
"RTN","MAGGSIU4",243,0)
 S IENC=MAGIEN_","
"RTN","MAGGSIU4",244,0)
 S MAGFDA(2005,IENC,113)=STAT
"RTN","MAGGSIU4",245,0)
 ; This is computed: 113.1)=DT   Status Date
"RTN","MAGGSIU4",246,0)
 ; This is computed:,113.2)=DUZ
"RTN","MAGGSIU4",247,0)
 I $G(REASDA) S MAGFDA(2005,IENC,113.3)=REASDA
"RTN","MAGGSIU4",248,0)
 D UPDATE^DIE("S","MAGFDA","","MAGERR")
"RTN","MAGGSIU4",249,0)
 I $D(MAGERR) D 
"RTN","MAGGSIU4",250,0)
 . D RTRNERR(.MSG)
"RTN","MAGGSIU4",251,0)
 . S MAGRY($O(MAGRY(""),-1)+1)="Failed to Set Status: "_MSG
"RTN","MAGGSIU4",252,0)
 . Q
"RTN","MAGGSIU4",253,0)
 Q
"RTN","MAGGSIU4",254,0)
 ; 
"RTN","MAGGSIU4",255,0)
 ; ----- RTRNERR Catch FM error during processing of Rescind Image.
"RTN","MAGGSIU4",256,0)
 ; Return the Error from FM Call in ETXT.
"RTN","MAGGSIU4",257,0)
RTRNERR(ETXT) ; There was error from UPDATE^DIE quit with error text
"RTN","MAGGSIU4",258,0)
 S ETXT="0^ERROR  "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGGSIU4",259,0)
 Q
"RTN","MAGGSIU4",260,0)
 ; --------  DELETE - Delete Image entry. Rescind Function.--------
"RTN","MAGGSIU4",261,0)
 ;   IEN : IMAGE FILE (#2005) Internal entry Number
"RTN","MAGGSIU4",262,0)
 ;   REASON : Free text for (#30.2) DELETED REASON [3F] ^
"RTN","MAGGSIU4",263,0)
DELETE(IEN,REASON) ; Delete Image by IEN
"RTN","MAGGSIU4",264,0)
 N RSLT,IENDF
"RTN","MAGGSIU4",265,0)
 L +^MAG(2005,IEN):4
"RTN","MAGGSIU4",266,0)
 E  Q "0^Image ID# "_IEN_" is Locked. Delete is Canceled"
"RTN","MAGGSIU4",267,0)
 ;  the call to DELETE has 3rd param =0  this means do not Set the Delete Queue to 
"RTN","MAGGSIU4",268,0)
 ;  delete the file from Share.  We will set the Delete Queue to delete the file 
"RTN","MAGGSIU4",269,0)
 ;  from share after the successful watermarking process.
"RTN","MAGGSIU4",270,0)
 ; gek 121T2 This is the IEN + the Force Delete Flag.  User won't need MAG DELETE key.
"RTN","MAGGSIU4",271,0)
 S IENDF=IEN_"^"_1
"RTN","MAGGSIU4",272,0)
 ; '0' in 3rd param : this is a flag to tell function to NOT queue images for delete by 
"RTN","MAGGSIU4",273,0)
 ;   the BP yet.
"RTN","MAGGSIU4",274,0)
 D DELETE^MAGGTID(.RSLT,IENDF,0,1,REASON)
"RTN","MAGGSIU4",275,0)
 L -^MAG(2005,IEN)
"RTN","MAGGSIU4",276,0)
 Q RSLT(0)
"RTN","MAGGSIU4",277,0)
 ;
"RTN","MAGGSIU4",278,0)
 ; --------  DELFILES(IDATA)  After a Rescind Action.
"RTN","MAGGSIU4",279,0)
 ;  IDATA : has filenames and file places, format is :
"RTN","MAGGSIU4",280,0)
 ;  "FullFile^AbsFile^BigFile|FullPlace^AbsPlace^BigPlace"
"RTN","MAGGSIU4",281,0)
 ;  
"RTN","MAGGSIU4",282,0)
 ;   from the Status Callback call, if successful import and watermark,  then we
"RTN","MAGGSIU4",283,0)
 ;  delete the Image Files associated with the Image that was Rescinded.
"RTN","MAGGSIU4",284,0)
DELFILES(IDATA) ;This will format the data for the call to set the Delete Queue.
"RTN","MAGGSIU4",285,0)
 N RSN1,RSN2,I,RSNF
"RTN","MAGGSIU4",286,0)
 N MAGPLC,MAGFILE2,X,X2,ALTEXT,ALTPATH
"RTN","MAGGSIU4",287,0)
 ; Only 1 image is in a Rescind Import.
"RTN","MAGGSIU4",288,0)
 ; example : 
"RTN","MAGGSIU4",289,0)
 ; ..IMAGE,1)=20467~c:\image\SLA0\00\00\02\04\SLA00000020467.TIF~c:\image\SLA0\00\00\02\04\SLA00000020467.ABS~|1~1~1
"RTN","MAGGSIU4",290,0)
 ; RSNF= c:\image...\SLA00000020467.TIF~c:\image...\SLA00000020467.ABS~
"RTN","MAGGSIU4",291,0)
 ; RSN2=1~1~1
"RTN","MAGGSIU4",292,0)
 S RSN1=$P($G(IDATA("IMAGE",1)),"|",1)
"RTN","MAGGSIU4",293,0)
 S RSNF=$P(RSN1,"~",2,4)
"RTN","MAGGSIU4",294,0)
 S RSN2=$P($G(IDATA("IMAGE",1)),"|",2)
"RTN","MAGGSIU4",295,0)
 F I=1,2,3 D 
"RTN","MAGGSIU4",296,0)
 . ; Send the Full Path and Place : for Full, Abs, Big.
"RTN","MAGGSIU4",297,0)
 . ; Don't set null values in the Queue
"RTN","MAGGSIU4",298,0)
 . I ($P(RSNF,"~",I)="")!($P(RSN2,"~",I)="") Q
"RTN","MAGGSIU4",299,0)
 . S X=$$DELETE^MAGBAPI($P(RSNF,"~",I),$P(RSN2,"~",I))
"RTN","MAGGSIU4",300,0)
 . Q
"RTN","MAGGSIU4",301,0)
 ;Delete any other ALTernate files. ( TXT) 
"RTN","MAGGSIU4",302,0)
 ; -- code from MAGGTID, Can't call MAGGTID, because the 2005 entry is gone.
"RTN","MAGGSIU4",303,0)
 ;    (gek 3/31/03) Since ALT files are (for now) always on same server as Full
"RTN","MAGGSIU4",304,0)
 ;    We only attempt to delete them here  (If we have a path to FullRes on Magnetic)
"RTN","MAGGSIU4",305,0)
 ;
"RTN","MAGGSIU4",306,0)
 S MAGFILE2=$P(RSNF,"~",1),MAGPLC=$P(RSN2,"~",1)
"RTN","MAGGSIU4",307,0)
 S X2=0
"RTN","MAGGSIU4",308,0)
 ; Don't set null values in the Queue 
"RTN","MAGGSIU4",309,0)
 I (MAGFILE2="")!(MAGPLC="") Q
"RTN","MAGGSIU4",310,0)
 F  S X2=$O(^MAG(2006.1,MAGPLC,2,X2)) Q:'X2  D
"RTN","MAGGSIU4",311,0)
 . S ALTEXT=^MAG(2006.1,MAGPLC,2,X2,0)
"RTN","MAGGSIU4",312,0)
 . S ALTPATH=$P(MAGFILE2,".")_"."_ALTEXT
"RTN","MAGGSIU4",313,0)
 . S X=$$DELETE^MAGBAPI(ALTPATH,MAGPLC)
"RTN","MAGGSIU4",314,0)
 . Q
"RTN","MAGGSIU4",315,0)
 Q
"RTN","MAGGSIU5")
0^3^B39649203
"RTN","MAGGSIU5",1,0)
MAGGSIU5 ;WOIFO/GEK - Utilities for Image Import API ; 11 Jun 2013 5:37 PM
"RTN","MAGGSIU5",2,0)
 ;;3.0;IMAGING;**121,135**;Mar 19, 2002;Build 5238;Jul 17, 2013
"RTN","MAGGSIU5",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGSIU5",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIU5",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIU5",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIU5",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIU5",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIU5",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIU5",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIU5",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIU5",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIU5",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIU5",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIU5",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIU5",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIU5",17,0)
 ;;
"RTN","MAGGSIU5",18,0)
 Q
"RTN","MAGGSIU5",19,0)
 ; ----- RSND1 ----- Rescind One Image
"RTN","MAGGSIU5",20,0)
 ;  This routine is called by other Imaging routines to Rescind One Image.
"RTN","MAGGSIU5",21,0)
 ;
"RTN","MAGGSIU5",22,0)
 ; Input Parameters
"RTN","MAGGSIU5",23,0)
 ; ================
"RTN","MAGGSIU5",24,0)
 ; MAGIEN = IEN of Image entry in IMAGE (#2005) File
"RTN","MAGGSIU5",25,0)
 ; TIUDA  = IEN of TIU note in TIU DOCUMENT file (#8925) 
"RTN","MAGGSIU5",26,0)
 ; DELREAS = Free text of Deleted Reason
"RTN","MAGGSIU5",27,0)
 ; 
"RTN","MAGGSIU5",28,0)
 ;  MAGIEN and TIUDA are required. 
"RTN","MAGGSIU5",29,0)
 ;  We verify that the Image entry MAGIEN, points to TIUDA.
"RTN","MAGGSIU5",30,0)
 ;  We also call the Integrity Check for the image, and we do not 
"RTN","MAGGSIU5",31,0)
 ;  process a Rescind Action if the IQ Check fails.
"RTN","MAGGSIU5",32,0)
 ;           
"RTN","MAGGSIU5",33,0)
 ; Return Values
"RTN","MAGGSIU5",34,0)
 ; =============
"RTN","MAGGSIU5",35,0)
 ; Results are passed back in the MAGRY Array
"RTN","MAGGSIU5",36,0)
 ; if error found during execution
"RTN","MAGGSIU5",37,0)
 ;   MAGRY(0) = 0^Error message"
"RTN","MAGGSIU5",38,0)
 ;   MAGRY(1..N) = messages describing the Error.
"RTN","MAGGSIU5",39,0)
 ;   
"RTN","MAGGSIU5",40,0)
 ; if success, the result array is same as Import API
"RTN","MAGGSIU5",41,0)
 ;   MAGRY(0) = 1^Success
"RTN","MAGGSIU5",42,0)
 ;   MAGRY(1) = TRKID   -  Tracking ID
"RTN","MAGGSIU5",43,0)
 ;   MAGRY(2) = QUE     -  Queue Number from IMPORT QUEUE File(#2006.034)
"RTN","MAGGSIU5",44,0)
 ;   
"RTN","MAGGSIU5",45,0)
 ;   Tracking ID is a field in each of the following files: 
"RTN","MAGGSIU5",46,0)
 ;      IMAGE File (#2005) (Field #108) (index "ATRKID")
"RTN","MAGGSIU5",47,0)
 ;      IMAGING WINDOWS SESSION File (#2006.82) (Field #8) (index "E")
"RTN","MAGGSIU5",48,0)
 ;      ACQUISITION SESSION FILE File(#2006.041)(Field #.02) (index "C")
"RTN","MAGGSIU5",49,0)
 ;
"RTN","MAGGSIU5",50,0)
 ; 
"RTN","MAGGSIU5",51,0)
RSND1(MAGRY,MAGIEN,TIUDA,DELREAS) ; Main entry point to rescind an Image
"RTN","MAGGSIU5",52,0)
 N QARR,TRKID,CALLBACK
"RTN","MAGGSIU5",53,0)
 N RSLT,REASON,REASDA,MAGTDAT
"RTN","MAGGSIU5",54,0)
 N I,QCT,N0,N2,N40,N100,MAGLT
"RTN","MAGGSIU5",55,0)
 N IMGSPLCS,MAGRQA
"RTN","MAGGSIU5",56,0)
 N MAGTMP,X
"RTN","MAGGSIU5",57,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^"_$T(+0)
"RTN","MAGGSIU5",58,0)
 ;
"RTN","MAGGSIU5",59,0)
 S MAGIEN=$G(MAGIEN),TIUDA=$G(TIUDA)
"RTN","MAGGSIU5",60,0)
 ;  Quit if MAGIEN is deleted.
"RTN","MAGGSIU5",61,0)
 I $$ISDEL^MAGGI11(MAGIEN) D  Q
"RTN","MAGGSIU5",62,0)
 . S MAGRY(0)="0^Image: "_MAGIEN_" is Deleted"
"RTN","MAGGSIU5",63,0)
 . Q
"RTN","MAGGSIU5",64,0)
 ;   Check for TIUDA, and TIUDA, is same as Image Entry.
"RTN","MAGGSIU5",65,0)
 I 'TIUDA S MAGRY(0)="0^A TIU Note is required" Q
"RTN","MAGGSIU5",66,0)
 ;   If Group Image, use Group (MAGTMP) for next check.
"RTN","MAGGSIU5",67,0)
 ;   because the group image won't point to TIU, only Group Parent.
"RTN","MAGGSIU5",68,0)
 S MAGTMP=MAGIEN
"RTN","MAGGSIU5",69,0)
 I $P(^MAG(2005,MAGIEN,0),"^",10) S MAGTMP=$P(^MAG(2005,MAGIEN,0),"^",10)
"RTN","MAGGSIU5",70,0)
 I $$GET1^DIQ(2005,MAGTMP_",",17,"I")'=TIUDA D  Q
"RTN","MAGGSIU5",71,0)
 . S MAGRY(0)="0^Mismatch between the TIU Note parameter and TIU Note linked to Image"
"RTN","MAGGSIU5",72,0)
 . S MAGRY(1)="TIU Note: "_TIUDA_"   Image: "_MAGIEN
"RTN","MAGGSIU5",73,0)
 . Q
"RTN","MAGGSIU5",74,0)
 ;   Run the Integrity Checker, quit if it finds problem
"RTN","MAGGSIU5",75,0)
 D CHK^MAGGSQI(.MAGRQA,MAGIEN) I 'MAGRQA(0) D  Q
"RTN","MAGGSIU5",76,0)
 . S MAGRY(0)=MAGRQA(0)
"RTN","MAGGSIU5",77,0)
 . Q
"RTN","MAGGSIU5",78,0)
 ;   Quit if Image is already Rescinded, 
"RTN","MAGGSIU5",79,0)
 ;   (checking Field # 115.2 LINKED TYPE) 
"RTN","MAGGSIU5",80,0)
 S MAGLT=$$GET1^DIQ(2005,MAGIEN_",",115.2,"I") I MAGLT=1 D  Q
"RTN","MAGGSIU5",81,0)
 . S MAGRY(0)="0^Image is already Rescinded."
"RTN","MAGGSIU5",82,0)
 . S MAGRY(1)="RESCIND Action is Canceled."
"RTN","MAGGSIU5",83,0)
 . Q
"RTN","MAGGSIU5",84,0)
 ;
"RTN","MAGGSIU5",85,0)
 S MAGRY(0)="0^Processing Rescind request..."
"RTN","MAGGSIU5",86,0)
 ;
"RTN","MAGGSIU5",87,0)
 S CALLBACK="STATCB^MAGGSIU4"
"RTN","MAGGSIU5",88,0)
 S REASON=$G(DELREAS,"Rescinded TIU Note")
"RTN","MAGGSIU5",89,0)
 S REASDA=$$FIND1^DIC(2005.88,"","X",REASON)
"RTN","MAGGSIU5",90,0)
 ;  Get data for TIU Note.
"RTN","MAGGSIU5",91,0)
 D DATA^MAGGNTI(.MAGTDAT,TIUDA)
"RTN","MAGGSIU5",92,0)
 ; 
"RTN","MAGGSIU5",93,0)
 ;   IMGSPLCS : Image paths and Image places.
"RTN","MAGGSIU5",94,0)
 ;   Get string of Full File Path's | File Places.  
"RTN","MAGGSIU5",95,0)
 ;   This is needed after success, to Delete the Files from Image Network.
"RTN","MAGGSIU5",96,0)
 ;   i.e.  Image Full Path^Abs full Path^Big full Path|Image Place^Abs Place^Big Place
"RTN","MAGGSIU5",97,0)
 S IMGSPLCS=$$IMGPLC(MAGIEN)
"RTN","MAGGSIU5",98,0)
 S I=0,QCT=0
"RTN","MAGGSIU5",99,0)
 ;   
"RTN","MAGGSIU5",100,0)
 S N0=$G(^MAG(2005,MAGIEN,0))
"RTN","MAGGSIU5",101,0)
 S N2=$G(^MAG(2005,MAGIEN,2))
"RTN","MAGGSIU5",102,0)
 S N40=$G(^MAG(2005,MAGIEN,40))
"RTN","MAGGSIU5",103,0)
 S N100=$G(^MAG(2005,MAGIEN,100))
"RTN","MAGGSIU5",104,0)
 ; 
"RTN","MAGGSIU5",105,0)
 ; We Delete the image entry first, then set the Import Queue.
"RTN","MAGGSIU5",106,0)
 S RSLT=$$DELETE^MAGGSIU4(MAGIEN,REASON)
"RTN","MAGGSIU5",107,0)
 ; Quit if we can't delete.
"RTN","MAGGSIU5",108,0)
 I $P(RSLT,"^",1)=0 D  Q  ;
"RTN","MAGGSIU5",109,0)
 . S MAGRY(0)=RSLT
"RTN","MAGGSIU5",110,0)
 . Q
"RTN","MAGGSIU5",111,0)
 ;
"RTN","MAGGSIU5",112,0)
 S TRKID=$$TRKID^MAGGSIU4()  ; Get unique Import API tracking ID
"RTN","MAGGSIU5",113,0)
 I TRKID=0 S MAGRY(0)="0^Error generating a Tracking ID" Q
"RTN","MAGGSIU5",114,0)
 ;
"RTN","MAGGSIU5",115,0)
 ; Set up Import queue data
"RTN","MAGGSIU5",116,0)
 ;--
"RTN","MAGGSIU5",117,0)
 ;   ACTION is the new Import Data Code.  We'll send 'RESCIND' to the
"RTN","MAGGSIU5",118,0)
 ;   Active X control for special processing.
"RTN","MAGGSIU5",119,0)
 S QCT=QCT+1,QARR(QCT)="ACTION^RESCIND"
"RTN","MAGGSIU5",120,0)
 S QCT=QCT+1,QARR(QCT)="PXIEN^"_TIUDA        ; IEN of TIU note
"RTN","MAGGSIU5",121,0)
 S QCT=QCT+1,QARR(QCT)="TRKID^"_TRKID        ; Import API Track ID
"RTN","MAGGSIU5",122,0)
 S QCT=QCT+1,QARR(QCT)="STSCB^"_CALLBACK  ; Status call back routine
"RTN","MAGGSIU5",123,0)
 ;   The format of 'IMAGE' Data for a Rescind is different than for
"RTN","MAGGSIU5",124,0)
 ;   a Normal Image Import.  This is by design so that the
"RTN","MAGGSIU5",125,0)
 ;   old version of the IAPI (called by BP Patch 39 and before)
"RTN","MAGGSIU5",126,0)
 ;   does not process this import.
"RTN","MAGGSIU5",127,0)
 S QCT=QCT+1,QARR(QCT)="IMAGE"_"^"_MAGIEN_"^"_IMGSPLCS
"RTN","MAGGSIU5",128,0)
 ;
"RTN","MAGGSIU5",129,0)
 ;  Now, set the Required data (plus new data) then call MAGGSIUI the
"RTN","MAGGSIU5",130,0)
 ;  same as always. It'll set an IMPORT QUEUE (#2006.034)
"RTN","MAGGSIU5",131,0)
 ;  and track the data in the IMAGING WINDOWS SESSION file (#2006.82)
"RTN","MAGGSIU5",132,0)
 ;  the same as all imports.
"RTN","MAGGSIU5",133,0)
 ;
"RTN","MAGGSIU5",134,0)
 S QCT=QCT+1,QARR(QCT)="PXPKG^8925"
"RTN","MAGGSIU5",135,0)
 ;;;S QCT=QCT+1,QARR(QCT)="PXDT^"_$P(MAGTDAT,"^",3) ;135 T6
"RTN","MAGGSIU5",136,0)
 S QCT=QCT+1,QARR(QCT)="PXDT^"_$P(N2,"^",5) ;135 T6 
"RTN","MAGGSIU5",137,0)
 ; 135 T6 Remedy INC000000795508   instead of MAGTDAT^3   (Entry Date) we use Procedure Date/Time
"RTN","MAGGSIU5",138,0)
 ;  from the Exiting Image Entry, which is the Reference Date of the TIU Note. 
"RTN","MAGGSIU5",139,0)
 S QCT=QCT+1,QARR(QCT)="IDFN^"_$P(N0,"^",7)
"RTN","MAGGSIU5",140,0)
 ; P135T6  Set Acquisition Site the same as existing Image
"RTN","MAGGSIU5",141,0)
 ; if existing Acq Site is null,  use DUZ(2)
"RTN","MAGGSIU5",142,0)
 S X=$P(N100,"^",3)
"RTN","MAGGSIU5",143,0)
 I X]"" S QCT=QCT+1,QARR(QCT)="ACQS^"_X
"RTN","MAGGSIU5",144,0)
 E  S QCT=QCT+1,QARR(QCT)="ACQS^"_DUZ(2)
"RTN","MAGGSIU5",145,0)
 S QCT=QCT+1,QARR(QCT)="ACQD^"_"IAPI" ; This is the acquisition device. Import API.
"RTN","MAGGSIU5",146,0)
 S QCT=QCT+1,QARR(QCT)="GDESC^"_$E("RESCINDED "_$p(N2,"^",4),1,60)
"RTN","MAGGSIU5",147,0)
 ;gek/p121t2  Force IXTYPE to be ADVANCE DIRECTIVE to fix IMED issue of 
"RTN","MAGGSIU5",148,0)
 ;  indexing AD's as Miscelleneous Document. 
"RTN","MAGGSIU5",149,0)
 S QCT=QCT+1,QARR(QCT)="IXTYPE^"_"ADVANCE DIRECTIVE" ;$P(N40,"^",3)  
"RTN","MAGGSIU5",150,0)
 S QCT=QCT+1,QARR(QCT)="IXPROC^"_$P(N40,"^",4)
"RTN","MAGGSIU5",151,0)
 S QCT=QCT+1,QARR(QCT)="IXSPEC^"_$P(N40,"^",5)
"RTN","MAGGSIU5",152,0)
 S QCT=QCT+1,QARR(QCT)="IXORIGIN^"_$P(N40,"^",6)
"RTN","MAGGSIU5",153,0)
 ; To this point, all data in array will be passed back from OCX.
"RTN","MAGGSIU5",154,0)
 ; The data Below : will be validated in the call to REMOTE^MAGGSIUI, and stored in the Session
"RTN","MAGGSIU5",155,0)
 ; File, but won't be returned in the call to ADD^MAGGSIA.   the old design of the IAPI prohibits
"RTN","MAGGSIU5",156,0)
 ; data except for the Import Codes known by IAPI.  So in ADD^MAGGSIA1 before the call to UPDATE^DIC,
"RTN","MAGGSIU5",157,0)
 ; the data for these fields (for Rescinded Import)  will need to be retrieved from the
"RTN","MAGGSIU5",158,0)
 ; Session file and added to the FDA array.
"RTN","MAGGSIU5",159,0)
 ; 
"RTN","MAGGSIU5",160,0)
 ; PROCEDURE  #6
"RTN","MAGGSIU5",161,0)
 ; CREATION DATE #110
"RTN","MAGGSIU5",162,0)
 ; LINKED IMAGE  #115.1
"RTN","MAGGSIU5",163,0)
 ; LINKED TYPE   #115.2
"RTN","MAGGSIU5",164,0)
 ; LINKED DATE   #115.3  (DATE TIME)
"RTN","MAGGSIU5",165,0)
 ; 
"RTN","MAGGSIU5",166,0)
 ; make sure the procedure field is not too long.
"RTN","MAGGSIU5",167,0)
 S QCT=QCT+1,QARR(QCT)="6^"_$E($P(N0,"^",8),1,10)
"RTN","MAGGSIU5",168,0)
 S QCT=QCT+1,QARR(QCT)="110^"_$P(N100,"^",6)
"RTN","MAGGSIU5",169,0)
 S QCT=QCT+1,QARR(QCT)="115.1^"_MAGIEN ;comment this out for testing.
"RTN","MAGGSIU5",170,0)
 S QCT=QCT+1,QARR(QCT)="115.2^"_"1" ; 1 = RESCIND
"RTN","MAGGSIU5",171,0)
 S QCT=QCT+1,QARR(QCT)="115.3^"_$$NOW^XLFDT
"RTN","MAGGSIU5",172,0)
 ;
"RTN","MAGGSIU5",173,0)
 K MAGRY
"RTN","MAGGSIU5",174,0)
 D REMOTE^MAGGSIUI(.MAGRY,.QARR)
"RTN","MAGGSIU5",175,0)
 I MAGRY(0) D
"RTN","MAGGSIU5",176,0)
 . S MAGRY($O(MAGRY(""),-1)+1)="TrkID: "_$G(TRKID)
"RTN","MAGGSIU5",177,0)
 . S MAGRY($O(MAGRY(""),-1)+1)="Queue: "_+MAGRY(0)
"RTN","MAGGSIU5",178,0)
 . Q
"RTN","MAGGSIU5",179,0)
 Q
"RTN","MAGGSIU5",180,0)
 ; ----- ERRA ---- Error trap 
"RTN","MAGGSIU5",181,0)
ERRA ; Error Trap for RSND1 - Array Return - MAGRY
"RTN","MAGGSIU5",182,0)
 N ERR S ERR=$$EC^%ZOSV
"RTN","MAGGSIU5",183,0)
 S MAGRY(0)="0^"_ERR
"RTN","MAGGSIU5",184,0)
 S MAGRY($O(MAGRY(""),-1)+1)=ERR
"RTN","MAGGSIU5",185,0)
 D LOGERR^MAGGTERR(ERR)
"RTN","MAGGSIU5",186,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGSIU5",187,0)
 Q
"RTN","MAGGSIU5",188,0)
 ; ----- IMGPLC ---- internal call to return Image paths and places.
"RTN","MAGGSIU5",189,0)
 ;     MAGIEN = IMAGE File (#2005) internal entry number.
"RTN","MAGGSIU5",190,0)
IMGPLC(MAGIEN) ; return a string of FullFile^AbsFile^BigFile|FullPlace^AbsPlace^BigPlace
"RTN","MAGGSIU5",191,0)
 ; 
"RTN","MAGGSIU5",192,0)
 N MAGXX,MAGPLC,FPATH
"RTN","MAGGSIU5",193,0)
 N RFILE,RPLC
"RTN","MAGGSIU5",194,0)
 ; Here we 'New' the variables returned by MAGFILEB so they are cleared after this call.
"RTN","MAGGSIU5",195,0)
 N MAGFILE,MAGFILE1,MAGFILE2,MAGJBOL,MAGOFFLN
"RTN","MAGGSIU5",196,0)
 S RFILE="",RPLC=""
"RTN","MAGGSIU5",197,0)
 ;   Get Full Path and Place
"RTN","MAGGSIU5",198,0)
 S MAGXX=MAGIEN,MAGPLC=$$DA2PLC^MAGBAPIP(MAGIEN,"F")
"RTN","MAGGSIU5",199,0)
 D VSTNOCP^MAGFILEB
"RTN","MAGGSIU5",200,0)
 S FPATH=$P(MAGFILE2,"~",1) I FPATH="-1" S FPATH=""
"RTN","MAGGSIU5",201,0)
 S RFILE=RFILE_"^"_FPATH,RPLC=RPLC_"^"_MAGPLC
"RTN","MAGGSIU5",202,0)
 ;
"RTN","MAGGSIU5",203,0)
 ;   Get Abs Path and Place
"RTN","MAGGSIU5",204,0)
 S MAGXX=MAGIEN,MAGPLC=$$DA2PLC^MAGBAPIP(MAGIEN,"A")
"RTN","MAGGSIU5",205,0)
 D ABSNOCP^MAGFILEB
"RTN","MAGGSIU5",206,0)
 S FPATH=$P(MAGFILE2,"~",1) I FPATH="-1" S FPATH=""
"RTN","MAGGSIU5",207,0)
 S RFILE=RFILE_"^"_FPATH,RPLC=RPLC_"^"_MAGPLC
"RTN","MAGGSIU5",208,0)
 ;
"RTN","MAGGSIU5",209,0)
 ;   Get Big Patch and Place
"RTN","MAGGSIU5",210,0)
 S MAGXX=MAGIEN,MAGPLC=$$DA2PLC^MAGBAPIP(MAGIEN,"B")
"RTN","MAGGSIU5",211,0)
 D BIGNOCP^MAGFILEB
"RTN","MAGGSIU5",212,0)
 S FPATH=$P(MAGFILE2,"~",1) I FPATH="-1" S FPATH=""
"RTN","MAGGSIU5",213,0)
 S RFILE=RFILE_"^"_FPATH,RPLC=RPLC_"^"_MAGPLC
"RTN","MAGGSIU5",214,0)
 ; get rid of first '^'
"RTN","MAGGSIU5",215,0)
 Q $E(RFILE,2,999)_"|"_$E(RPLC,2,999)
"RTN","MAGIP135")
0^^B19945197
"RTN","MAGIP135",1,0)
MAGIP135 ;PRE/Post init routine to queue site activity at install. ; 21 May 2013 11:42 AM
"RTN","MAGIP135",2,0)
 ;;3.0;IMAGING;**135**;Mar 19, 2002;Build 5238;Jul 17, 2013
"RTN","MAGIP135",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGIP135",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGIP135",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGIP135",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGIP135",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGIP135",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGIP135",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGIP135",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGIP135",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGIP135",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGIP135",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGIP135",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGIP135",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGIP135",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGIP135",17,0)
 ;;
"RTN","MAGIP135",18,0)
 Q
"RTN","MAGIP135",19,0)
PRE ;
"RTN","MAGIP135",20,0)
 N FILE,FIELD,CROSSREF
"RTN","MAGIP135",21,0)
 D BMES^XPDUTL("Removing 'AC' trigger for Field 124: "_$$FMTE^XLFDT($$NOW^XLFDT))
"RTN","MAGIP135",22,0)
 S FILE="2006.1",FIELD="124",CROSSREF="1"
"RTN","MAGIP135",23,0)
 D DELIX^DDMOD(FILE,FIELD,CROSSREF,"","","")
"RTN","MAGIP135",24,0)
 D BMES^XPDUTL("Removing 'AD' trigger for Field 125: "_$$FMTE^XLFDT($$NOW^XLFDT))
"RTN","MAGIP135",25,0)
 S FILE="2006.1",FIELD="125",CROSSREF="1"
"RTN","MAGIP135",26,0)
 D DELIX^DDMOD(FILE,FIELD,CROSSREF,"","","")
"RTN","MAGIP135",27,0)
 ; Remove data dictionary definition so that the new definition installs cleanly
"RTN","MAGIP135",28,0)
 N DIK,DA,DIU
"RTN","MAGIP135",29,0)
 ; Output Transform for MAG ->  Tier 1 , WORM -> Tier 2 ; CR 1232
"RTN","MAGIP135",30,0)
 S DIK="^DD(2005.2,",DA=6,DA(1)=2005.2 D ^DIK
"RTN","MAGIP135",31,0)
 ; Tier 2 storage reserve CR 1232
"RTN","MAGIP135",32,0)
 S DIK="^DD(2006.1,",DA=11.5,DA(1)=2006.1 D ^DIK
"RTN","MAGIP135",33,0)
 ; Image Never Existed Status added to field 113 in 2005
"RTN","MAGIP135",34,0)
 S DIK="^DD(2006.1,",DA=113,DA(1)=2005 D ^DIK
"RTN","MAGIP135",35,0)
 ; Image Never Existed Status added to field 113 in 2005.1
"RTN","MAGIP135",36,0)
 S DIK="^DD(2006.1,",DA=113,DA(1)=2005.1 D ^DIK
"RTN","MAGIP135",37,0)
 ; Remove options so new ones install cleanly
"RTN","MAGIP135",38,0)
 D RMOPT("MAG JB OFFLINE")
"RTN","MAGIP135",39,0)
 ; Remove option(s) so new one(s) install cleanly
"RTN","MAGIP135",40,0)
 D RMRPC("MAGQ LOGV")
"RTN","MAGIP135",41,0)
 Q
"RTN","MAGIP135",42,0)
RMOPT(NAME) ; Removing an OPTION from the OPTION File (#19)
"RTN","MAGIP135",43,0)
 N OPT
"RTN","MAGIP135",44,0)
 S OPT=$$FIND1^DIC(19,"","X",NAME,"","","")
"RTN","MAGIP135",45,0)
 D CLEAN^DILF
"RTN","MAGIP135",46,0)
 Q:'OPT
"RTN","MAGIP135",47,0)
 I NAME="MAG JB OFFLINE" D MAGSYS(NAME)
"RTN","MAGIP135",48,0)
 S DA=OPT,DIK="^DIC(19,"
"RTN","MAGIP135",49,0)
 D ^DIK
"RTN","MAGIP135",50,0)
 K DA,DIK
"RTN","MAGIP135",51,0)
 Q
"RTN","MAGIP135",52,0)
MAGSYS(NAME) ;
"RTN","MAGIP135",53,0)
 N MENU,ITEM,DA,DIK
"RTN","MAGIP135",54,0)
 Q:NAME=""
"RTN","MAGIP135",55,0)
 S MENU=+$$FIND1^DIC(19,"","X","MAG SYS MENU") Q:'+MENU
"RTN","MAGIP135",56,0)
 S ITEM=$$FIND1^DIC(19.01,","_MENU_",","B",NAME) Q:'+ITEM
"RTN","MAGIP135",57,0)
 S DA=ITEM,DA(1)=MENU,DIK="^DIC(19,"_DA(1)_",10," D ^DIK K DA,DIK
"RTN","MAGIP135",58,0)
 Q
"RTN","MAGIP135",59,0)
RMRPC(NAME) ; Removing an RPC in order to revise
"RTN","MAGIP135",60,0)
 N MW,RPC,MWE,DIERR,DA,DIK
"RTN","MAGIP135",61,0)
 S MW=$$FIND1^DIC(19,"","X","MAG WINDOWS","","","")
"RTN","MAGIP135",62,0)
 D CLEAN^DILF
"RTN","MAGIP135",63,0)
 S RPC=$$FIND1^DIC(8994,"","X",NAME,"","","")
"RTN","MAGIP135",64,0)
 D CLEAN^DILF
"RTN","MAGIP135",65,0)
 Q:'RPC
"RTN","MAGIP135",66,0)
 I MW D
"RTN","MAGIP135",67,0)
 . S MWE=$$FIND1^DIC(19.05,","_MW_",","X",NAME,"","","")
"RTN","MAGIP135",68,0)
 . D CLEAN^DILF
"RTN","MAGIP135",69,0)
 . Q:'MWE
"RTN","MAGIP135",70,0)
 . S DA=MWE,DA(1)=MW,DIK="^DIC(19,"_DA(1)_",""RPC"","
"RTN","MAGIP135",71,0)
 . D ^DIK
"RTN","MAGIP135",72,0)
 . K DA,DIK
"RTN","MAGIP135",73,0)
 . Q
"RTN","MAGIP135",74,0)
 S DA=RPC,DIK="^XWB(8994,"
"RTN","MAGIP135",75,0)
 D ^DIK
"RTN","MAGIP135",76,0)
 K DA,DIK
"RTN","MAGIP135",77,0)
 Q
"RTN","MAGIP135",78,0)
POST ;
"RTN","MAGIP135",79,0)
 D BMES^XPDUTL("Set default Tier 2 Reserve to 5 if not defined."_$$FMTE^XLFDT($$NOW^XLFDT))
"RTN","MAGIP135",80,0)
 N PL,OPT
"RTN","MAGIP135",81,0)
 S PL=0
"RTN","MAGIP135",82,0)
 F  S PL=$O(^MAG(2006.1,PL)) Q:'PL  D
"RTN","MAGIP135",83,0)
 . Q:$P($G(^MAG(2006.1,PL,1)),U,9)?1N.N  ; Do not re-configure if a number value is set
"RTN","MAGIP135",84,0)
 . S $P(^MAG(2006.1,PL,1),U,9)=5
"RTN","MAGIP135",85,0)
 . Q
"RTN","MAGIP135",86,0)
 D BMES^XPDUTL("Updating the MAG SYS MENU. "_$$FMTE^XLFDT($$NOW^XLFDT))
"RTN","MAGIP135",87,0)
 S OPT=$$ADD^XPDMENU("MAG SYS MENU","MAG JB OFFLINE")
"RTN","MAGIP135",88,0)
 D BMES^XPDUTL("Updating MAG WINDOWS. "_$$FMTE^XLFDT($$NOW^XLFDT))
"RTN","MAGIP135",89,0)
 D ADDRPC^MAGQBUT4("MAGQ LOGV","MAG WINDOWS")
"RTN","MAGIP135",90,0)
 S OPT=$$ADD^XPDMENU("MAG SYS MENU","MAGQ LOGV")
"RTN","MAGIP135",91,0)
 D BMES^XPDUTL("Adding 'Image Never Existed' to the MAG REASON File "_$$FMTE^XLFDT($$NOW^XLFDT))
"RTN","MAGIP135",92,0)
 D ADDREAS  ;Adds an entry to the MAG REASON File
"RTN","MAGIP135",93,0)
 D BMES^XPDUTL("Post Install Mail Message: "_$$FMTE^XLFDT($$NOW^XLFDT))
"RTN","MAGIP135",94,0)
 D INS^MAGQBUT4(XPDNM,DUZ,$$NOW^XLFDT,XPDA)
"RTN","MAGIP135",95,0)
 Q
"RTN","MAGIP135",96,0)
 ;+++++ Adds an entry to the MAG REASON File (#2005.88)
"RTN","MAGIP135",97,0)
ADDREAS ; Add new entry "Image Never Existed"
"RTN","MAGIP135",98,0)
 ; NAME - value for field (#.01) MAG REASON File (#2005.88)
"RTN","MAGIP135",99,0)
 N MAGFDA,MAGERR,MAGWP,REASON,MAGCODE
"RTN","MAGIP135",100,0)
 S REASON="Image Never Existed"
"RTN","MAGIP135",101,0)
 ; Quit if already exist.
"RTN","MAGIP135",102,0)
 I $D(^MAG(2005.88,"B",REASON)) Q
"RTN","MAGIP135",103,0)
 S MAGWP(1)="The Image File Never Existed. Copy to Server Failed." ; 
"RTN","MAGIP135",104,0)
 S MAGFDA(2005.88,"+1,",.01)=REASON
"RTN","MAGIP135",105,0)
 S MAGFDA(2005.88,"+1,",.02)="S" ; This is a Status Reason 
"RTN","MAGIP135",106,0)
 S MAGFDA(2005.88,"+1,",1)="MAGWP"
"RTN","MAGIP135",107,0)
 S MAGCODE=$P(^MAG(2005.88,0),"^",3)+1
"RTN","MAGIP135",108,0)
 S MAGFDA(2005.88,"+1,",.04)=MAGCODE
"RTN","MAGIP135",109,0)
 D UPDATE^DIE("","MAGFDA","","MAGERR")
"RTN","MAGIP135",110,0)
 I $D(MAGERR) D
"RTN","MAGIP135",111,0)
 . D BMES^MAGKIDS("Error creating new MAG REASON entry")
"RTN","MAGIP135",112,0)
 . Q
"RTN","MAGIP135",113,0)
 Q
"RTN","MAGQBPG1")
0^4^B112714429
"RTN","MAGQBPG1",1,0)
MAGQBPG1 ;WOIFO/RMP - REMOTE Task SERVER Program ; 02 Apr 2013 4:12 PM
"RTN","MAGQBPG1",2,0)
 ;;3.0;IMAGING;**7,8,20,81,39,135**;Mar 19, 2002;Build 5238;Jul 17, 2013
"RTN","MAGQBPG1",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGQBPG1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBPG1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGQBPG1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGQBPG1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGQBPG1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGQBPG1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGQBPG1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGQBPG1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGQBPG1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGQBPG1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGQBPG1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGQBPG1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGQBPG1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBPG1",17,0)
 ;;
"RTN","MAGQBPG1",18,0)
 Q
"RTN","MAGQBPG1",19,0)
ENTRY(RESULT,WSTAT,PROCESS) ;RPC[MAGQ JBS]
"RTN","MAGQBPG1",20,0)
 N X,SYSIEN,SYSNAME,ZNODE,NODE,INDX,CNT,PROC,%,QPTR,QCNT,SHARE,PLACE,SCANDATE
"RTN","MAGQBPG1",21,0)
 S SCANDATE=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","MAGQBPG1",22,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPG1",23,0)
 S (SYSIEN,CNT)=0,SYSNAME="",U="^",PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBPG1",24,0)
 S SYSIEN=$O(^MAG(2006.8,"C",PLACE,WSTAT,"")) ;TRUE WORKSTATION NAME
"RTN","MAGQBPG1",25,0)
 I 'SYSIEN S SYSIEN=$O(^MAG(2006.8,"C",PLACE,$$UPPER^MAGQE4(WSTAT),""))
"RTN","MAGQBPG1",26,0)
 I 'SYSIEN D  ;ATTEMPT TO FIND A MATCH FROM LOCAL NAME
"RTN","MAGQBPG1",27,0)
 . N TRY
"RTN","MAGQBPG1",28,0)
 . F TRY=1:1:$L(WSTAT,".") D  Q:SYSIEN?1N.N
"RTN","MAGQBPG1",29,0)
 . . S SYSIEN=$O(^MAG(2006.8,"C",PLACE,$P(WSTAT,".",TRY),""))
"RTN","MAGQBPG1",30,0)
 . . I 'SYSIEN S SYSIEN=$O(^MAG(2006.8,"C",PLACE,$$UPPER^MAGQE4($P(WSTAT,".",TRY)),""))
"RTN","MAGQBPG1",31,0)
 I SYSIEN="" D  Q
"RTN","MAGQBPG1",32,0)
 . S RESULT(0)="-1^This workstation is not currently setup as a Background Processor."
"RTN","MAGQBPG1",33,0)
 . Q
"RTN","MAGQBPG1",34,0)
 S NODE=^MAG(2006.8,SYSIEN,0)
"RTN","MAGQBPG1",35,0)
 S SYSNAME=$P(NODE,U)
"RTN","MAGQBPG1",36,0)
 I SYSNAME="" D  Q
"RTN","MAGQBPG1",37,0)
 . S RESULT(0)="-1^This workstation is not currently setup as a Background Processor."
"RTN","MAGQBPG1",38,0)
 . Q
"RTN","MAGQBPG1",39,0)
 S RESULT(0)="0^BP List^PID: "_$$BASE^XLFUTL($J,10,16)_U_SYSNAME_U_WSTAT_U_$P(^MAG(2006.1,PLACE,0),U,2)
"RTN","MAGQBPG1",40,0)
 S (X,CNT)=0
"RTN","MAGQBPG1",41,0)
 F  S X=$O(^MAG(2005.2,X)) Q:X'?1N.N  S ZNODE=$G(^(X,0)) D
"RTN","MAGQBPG1",42,0)
 . Q:'$P(ZNODE,U,6)  ;1=online
"RTN","MAGQBPG1",43,0)
 . Q:$E($P(ZNODE,U,2),1,2)'="\\"
"RTN","MAGQBPG1",44,0)
 . Q:$P(ZNODE,U,10)'=PLACE
"RTN","MAGQBPG1",45,0)
 . Q:(($P(ZNODE,U,7)'["WORM")&($P(ZNODE,U,7)'="RW"))
"RTN","MAGQBPG1",46,0)
 . S CNT=CNT+1,SHARE=$P(ZNODE,U,2)
"RTN","MAGQBPG1",47,0)
 . I $E(SHARE,$L(SHARE))="\" S SHARE=$E(SHARE,1,$L(SHARE)-1)
"RTN","MAGQBPG1",48,0)
 . S RESULT(CNT)=X_U_SHARE_U_$P(ZNODE,U,8)
"RTN","MAGQBPG1",49,0)
 Q
"RTN","MAGQBPG1",50,0)
SHR(RESULT) ; RPC[MAGQ SHARES]
"RTN","MAGQBPG1",51,0)
 N TMP,INDX,DATA,CNT,SHARE,CWL,VALUE,PLACE
"RTN","MAGQBPG1",52,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPG1",53,0)
 S (CNT,INDX)=0,U="^",PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBPG1",54,0)
 S CWL=$$CWL^MAGBAPI(PLACE)
"RTN","MAGQBPG1",55,0)
 F  S INDX=$O(^MAG(2005.2,INDX)) Q:INDX'?1N.N  D
"RTN","MAGQBPG1",56,0)
 . S DATA=$G(^MAG(2005.2,INDX,0))
"RTN","MAGQBPG1",57,0)
 . Q:$P(DATA,U,6,7)'["1^MAG"
"RTN","MAGQBPG1",58,0)
 . Q:$P(DATA,U,9)="1"  ;ROUTING SHARE
"RTN","MAGQBPG1",59,0)
 . Q:$P(DATA,U,2)[":"
"RTN","MAGQBPG1",60,0)
 . Q:$P(DATA,U,10)'=PLACE
"RTN","MAGQBPG1",61,0)
 . S SHARE=$P(DATA,U,2)
"RTN","MAGQBPG1",62,0)
 . Q:$E(SHARE,1,2)'="\\"
"RTN","MAGQBPG1",63,0)
 . I $E(SHARE,$L(SHARE))="\" S SHARE=$E(SHARE,1,$L(SHARE)-1)
"RTN","MAGQBPG1",64,0)
 . S SHARE=SHARE_U_$P(DATA,U,8)
"RTN","MAGQBPG1",65,0)
 . Q:$D(TMP(SHARE))
"RTN","MAGQBPG1",66,0)
 . S TMP(SHARE)=INDX
"RTN","MAGQBPG1",67,0)
 S INDX=""
"RTN","MAGQBPG1",68,0)
 F  S INDX=$O(TMP(INDX)) Q:INDX=""  D
"RTN","MAGQBPG1",69,0)
 . S RESULT(CNT)=TMP(INDX)_U_INDX,CNT=CNT+1
"RTN","MAGQBPG1",70,0)
 . S ^TMP("MAGQBP",$J,"SHRLST",CNT-1)=TMP(INDX)_U_INDX
"RTN","MAGQBPG1",71,0)
 K TMP
"RTN","MAGQBPG1",72,0)
 Q
"RTN","MAGQBPG1",73,0)
CNP2(RESULT,IEN,START,STOP,AUTO) ;[MAGQ JBSCN]
"RTN","MAGQBPG1",74,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPG1",75,0)
 N FNAME,PIECE,ZNODE,NODE2,BNODE,BNAME,PTR,HASH,TEMP,ORDER,RDATE,PLACE,OFFLINE,PLACEOK,GL,END,ACQSITE,MAGDA,SCANCNT,OFFCNT,ALTPLACE,CORREC
"RTN","MAGQBPG1",76,0)
 S (RESULT,GL)="",PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2))),(OFFLINE,PLACEOK,SCANCNT,ALTPLACE,OFFCNT)=0,CORREC=""
"RTN","MAGQBPG1",77,0)
 I AUTO D
"RTN","MAGQBPG1",78,0)
 . S (IEN,MAGDA)=+IEN
"RTN","MAGQBPG1",79,0)
 . S ORDER="R"
"RTN","MAGQBPG1",80,0)
 . I START="" S START=$S(IEN>0:IEN,1:$O(^MAG(2005,"A"),-1))
"RTN","MAGQBPG1",81,0)
 . S STOP=$O(^MAG(2005,0))
"RTN","MAGQBPG1",82,0)
 . Q
"RTN","MAGQBPG1",83,0)
 S:START="" START=$O(^MAG(2005,0)) S:STOP="" STOP=$O(^MAG(2005,"A"),-1)
"RTN","MAGQBPG1",84,0)
 S ORDER=$S(START>STOP:"R",1:"F")
"RTN","MAGQBPG1",85,0)
 I (IEN'?1N.N)!IEN=0 D  I IEN="" S RESULT=0 Q
"RTN","MAGQBPG1",86,0)
 . I START=0 S IEN=START Q
"RTN","MAGQBPG1",87,0)
 . I ORDER="R" D
"RTN","MAGQBPG1",88,0)
 . . S I1=+$O(^MAG(2005," "),-1),I2=+$O(^MAG(2005.1," "),-1),END=$S(I1>I2:I1,1:I2)
"RTN","MAGQBPG1",89,0)
 . . S IEN=$S(START>END:START,1:START+1) Q
"RTN","MAGQBPG1",90,0)
 . E  S (IEN,MAGDA)=START-1
"RTN","MAGQBPG1",91,0)
 . Q
"RTN","MAGQBPG1",92,0)
 S (IEN,MAGDA)=+IEN
"RTN","MAGQBPG1",93,0)
 F  D SCAN^MAGQBPG1(.IEN,ORDER,.GL) D  Q:(((ORDER="R")&(IEN<STOP))!((ORDER="F")&(IEN>STOP))!(('OFFLINE)&PLACEOK)!(CORREC]"")!('IEN)!(SCANCNT>249)!($P(RESULT,U,21)="DUPE")!'$G(ACQSITE))
"RTN","MAGQBPG1",94,0)
 . Q:'IEN
"RTN","MAGQBPG1",95,0)
 . S SCANCNT=SCANCNT+1,OFFLINE=0
"RTN","MAGQBPG1",96,0)
 . S ZNODE=$G(@(GL_IEN_",0)")),ACQSITE=$P($G(@(GL_IEN_",100)")),U,3)
"RTN","MAGQBPG1",97,0)
 . S NODE2=$G(@(GL_IEN_",2)"))
"RTN","MAGQBPG1",98,0)
 . I ((ZNODE']"")!($P(ZNODE,U,1,2)="^^"))!(NODE2']"")!(($P(NODE2,U,1,8)="^^^^^^^")&(($G(@(GL_IEN_",1)"))']""))) D KLOG(GL,IEN,.CORREC) Q 
"RTN","MAGQBPG1",99,0)
 . I AUTO,$P(ZNODE,U,11)'="" D  Q
"RTN","MAGQBPG1",100,0)
 . . S $P(RESULT,U,1)=0
"RTN","MAGQBPG1",101,0)
 . . S IEN=0
"RTN","MAGQBPG1",102,0)
 . . Q
"RTN","MAGQBPG1",103,0)
 . S PLACEOK=$S($$PLACE^MAGBAPI(+ACQSITE)=$$PLACE^MAGBAPI($G(DUZ(2))):1,1:"")
"RTN","MAGQBPG1",104,0)
 . I $P(ZNODE,U,2)'="" S OFFLINE=$$IMOFFLN^MAGFILEB($P(ZNODE,U,2))  ; Only check the offline status of image files
"RTN","MAGQBPG1",105,0)
 . I OFFLINE S OFFCNT=OFFCNT+1 Q
"RTN","MAGQBPG1",106,0)
 . I 'PLACEOK S ALTPLACE=ALTPLACE+1 Q
"RTN","MAGQBPG1",107,0)
 . I ($D(^MAG(2005.1,IEN,0))&$D(^MAG(2005,IEN,0))) D  Q  ; Image is duplicated in the Archive file
"RTN","MAGQBPG1",108,0)
 . . I $P(^MAG(2005,IEN,0),U,1,8)="^^^^^^^",+$P(^MAG(2005,IEN,0),U,9) D KLOG(GL,IEN,.CORREC) Q
"RTN","MAGQBPG1",109,0)
 . . S FDA(2005,IEN_",",13.5)="1" ; Set Dupe field in the Image File 
"RTN","MAGQBPG1",110,0)
 . . S FDA(2005,IEN_",",13)="1" ; Set IQ field in the Image File  
"RTN","MAGQBPG1",111,0)
 . . D FILE^DIE("I","FDA","MSG") K FDA,MSG
"RTN","MAGQBPG1",112,0)
 . . S FDA(2005.1,IEN_",",13.5)="1" ; Set the Dupe field in the archive file
"RTN","MAGQBPG1",113,0)
 . . S FDA(2005.1,IEN_",",13)="1" ; and set the IQ field in the archive file
"RTN","MAGQBPG1",114,0)
 . . D FILE^DIE("I","FDA","MSG") K FDA,MSG
"RTN","MAGQBPG1",115,0)
 . . S $P(RESULT,U,21)="DUPE"
"RTN","MAGQBPG1",116,0)
 . . S $P(RESULT,U)=IEN
"RTN","MAGQBPG1",117,0)
 . . I $P(ZNODE,U,2)=$P($G(^MAG(2005.1,IEN,0)),U,2) S $P(RESULT,U,2)=$P(ZNODE,U,2) D
"RTN","MAGQBPG1",118,0)
 . . . I $P(RESULT,U,2)="" S $P(RESULT,U,2)="No File Name" Q
"RTN","MAGQBPG1",119,0)
 . . E  S $P(RESULT,U,2)=$P(ZNODE,U,2)_"/"_$P($G(^MAG(2005.1,IEN,0)),U,2) D
"RTN","MAGQBPG1",120,0)
 . . . I $P($P(RESULT,U,2),"/")="" S $P(RESULT,U,2)="No File Name"_$P(RESULT,U,2)
"RTN","MAGQBPG1",121,0)
 . . . I $P($P(RESULT,U,2),"/",2)="" S $P(RESULT,U,2)=$P(RESULT,U,2)_"No File Name"
"RTN","MAGQBPG1",122,0)
 . . . Q
"RTN","MAGQBPG1",123,0)
 . . Q
"RTN","MAGQBPG1",124,0)
 . E  I $P(ZNODE,U,2)'="" S $P(@(GL_IEN_",0)"),U,12)="0"
"RTN","MAGQBPG1",125,0)
 . Q
"RTN","MAGQBPG1",126,0)
 S $P(RESULT,U,25)=OFFCNT
"RTN","MAGQBPG1",127,0)
 S $P(RESULT,U,26)=ALTPLACE
"RTN","MAGQBPG1",128,0)
 I CORREC]"" D  Q
"RTN","MAGQBPG1",129,0)
 . S $P(RESULT,U,27)=CORREC
"RTN","MAGQBPG1",130,0)
 . D SCAN^MAGQBPG1(.IEN,ORDER,.GL)
"RTN","MAGQBPG1",131,0)
 . S $P(RESULT,U,24)=IEN
"RTN","MAGQBPG1",132,0)
 . Q
"RTN","MAGQBPG1",133,0)
 I $S('IEN:1,((ORDER="F")&(IEN>STOP)):1,(SCANCNT>249):1,((ORDER="R")&(IEN<STOP)):1,1:0) D  Q
"RTN","MAGQBPG1",134,0)
 . S:SCANCNT>249 $P(RESULT,U,24)=IEN
"RTN","MAGQBPG1",135,0)
 . S $P(RESULT,U,1)=0
"RTN","MAGQBPG1",136,0)
 . Q
"RTN","MAGQBPG1",137,0)
 S FNAME=$P(ZNODE,U,2)
"RTN","MAGQBPG1",138,0)
 S $P(RESULT,U)=IEN
"RTN","MAGQBPG1",139,0)
 Q:($P(RESULT,U,21)="DUPE")
"RTN","MAGQBPG1",140,0)
 S $P(RESULT,U,19)=$P($P($G(@(GL_IEN_",2)")),U),".")
"RTN","MAGQBPG1",141,0)
 I $P(ZNODE,U,2)'="" D  ;NON-GROUP PARENT
"RTN","MAGQBPG1",142,0)
 . S BNODE=$G(@(GL_IEN_",""FBIG"")"))
"RTN","MAGQBPG1",143,0)
 . I $P(ZNODE,U,5)?1N.N S $P(RESULT,U,3)=$P(ZNODE,U,5)
"RTN","MAGQBPG1",144,0)
 . S:$P(BNODE,U,2)?1N.N $P(RESULT,U,4)=$S($P(BNODE,U,3)'="":"["_$P(BNODE,U,3)_"]",1:"")_$P(BNODE,U,2)
"RTN","MAGQBPG1",145,0)
 . S:$P(ZNODE,U,3)?1N.N $P(RESULT,U,5)=$P(ZNODE,U,3)
"RTN","MAGQBPG1",146,0)
 . S:$P(ZNODE,U,4)?1N.N $P(RESULT,U,6)=$P(ZNODE,U,4)
"RTN","MAGQBPG1",147,0)
 . S:$P(BNODE,U)?1N.N $P(RESULT,U,7)=$S($P(BNODE,U,3)'="":"["_$P(BNODE,U,3)_"]",1:"")_$P(BNODE,U)
"RTN","MAGQBPG1",148,0)
 . S $P(RESULT,U,8)=$$CWL^MAGBAPI(PLACE)
"RTN","MAGQBPG1",149,0)
 . S $P(RESULT,U,2)=FNAME
"RTN","MAGQBPG1",150,0)
 . I $D(@(GL_IEN_",""FBIG"")")),'$P(BNODE,U),'$P(BNODE,U,2) S $P(RESULT,U,22)="EMPTY_FBIG"
"RTN","MAGQBPG1",151,0)
 . Q
"RTN","MAGQBPG1",152,0)
 I '$P($G(@(GL_IEN_",100)")),U,3) S $P(RESULT,U,23)=-1 ;"NO ACQ SITE VALUE"
"RTN","MAGQBPG1",153,0)
 I GL[("^MAG(2005.1,") S $P(RESULT,U,21)=$S($P($G(^MAG(2005.1,IEN,100)),U,8)=13:"NE",1:"ARCH")
"RTN","MAGQBPG1",154,0)
 E  S $P(RESULT,U,12,17)=$$CHKIMG^MAGQBUT2(IEN)
"RTN","MAGQBPG1",155,0)
 Q
"RTN","MAGQBPG1",156,0)
JPUD(RESULT,JPTR,EXT,IEN) ; RPC[MAGQ JPUD]
"RTN","MAGQBPG1",157,0)
 N TYPE,PIECE,NODE,GL
"RTN","MAGQBPG1",158,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP"),RESULT="0"
"RTN","MAGQBPG1",159,0)
 S TYPE=$$FTYPE^MAGQBPRG(EXT,IEN)
"RTN","MAGQBPG1",160,0)
 S PIECE=$S(TYPE="BIG":2,1:5)
"RTN","MAGQBPG1",161,0)
 S NODE=$S(TYPE="BIG":"FBIG",1:0)
"RTN","MAGQBPG1",162,0)
 I JPTR="0" D  Q:(RESULT<0)
"RTN","MAGQBPG1",163,0)
 . S JPTR=""
"RTN","MAGQBPG1",164,0)
 . S GL=$S($D(^MAG(2005,IEN)):"^MAG(2005,",$D(^MAG(2005.1,IEN)):"^MAG(2005.1,",1:0)
"RTN","MAGQBPG1",165,0)
 . I GL=0 S RESULT="-1" Q
"RTN","MAGQBPG1",166,0)
 . I $D(^MAGQUEUE(2006.033,"B",$P($G(@(GL_IEN_",0)")),U,2))) D  Q
"RTN","MAGQBPG1",167,0)
 . . S RESULT=-2 Q  ;Don't clear the JB pointer if image is on an Offline Platter
"RTN","MAGQBPG1",168,0)
 . . Q
"RTN","MAGQBPG1",169,0)
 . Q
"RTN","MAGQBPG1",170,0)
 S:$D(^MAG(2005,IEN,NODE)) $P(^MAG(2005,IEN,NODE),U,PIECE)=JPTR
"RTN","MAGQBPG1",171,0)
 S:$D(^MAG(2005.1,IEN,NODE)) $P(^MAG(2005.1,IEN,NODE),U,PIECE)=JPTR
"RTN","MAGQBPG1",172,0)
 S RESULT="1"
"RTN","MAGQBPG1",173,0)
 Q
"RTN","MAGQBPG1",174,0)
VCUD(RESULT,VCPTR,EXT,IEN) ; RPC[MAGQ VCUD]
"RTN","MAGQBPG1",175,0)
 N TYPE,PIECE,NODE
"RTN","MAGQBPG1",176,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP"),RESULT="0"
"RTN","MAGQBPG1",177,0)
 S TYPE=$$FTYPE^MAGQBPRG(EXT,IEN)
"RTN","MAGQBPG1",178,0)
 S PIECE=$S(TYPE="BIG":1,TYPE="ABS":4,1:3)
"RTN","MAGQBPG1",179,0)
 S NODE=$S(TYPE="BIG":"FBIG",1:0)
"RTN","MAGQBPG1",180,0)
 S:VCPTR="0" VCPTR=""
"RTN","MAGQBPG1",181,0)
 S:$D(^MAG(2005,IEN,NODE)) $P(^MAG(2005,IEN,NODE),U,PIECE)=VCPTR
"RTN","MAGQBPG1",182,0)
 S:$D(^MAG(2005.1,IEN,NODE)) $P(^MAG(2005.1,IEN,NODE),U,PIECE)=VCPTR
"RTN","MAGQBPG1",183,0)
 S RESULT="1"
"RTN","MAGQBPG1",184,0)
 Q
"RTN","MAGQBPG1",185,0)
DFNIQ(RESULT,INPUT,SEND,PLACE,APP) ;
"RTN","MAGQBPG1",186,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPG1",187,0)
 N LOC,CNT,Y,XMSUB
"RTN","MAGQBPG1",188,0)
 S U="^",RESULT="1"
"RTN","MAGQBPG1",189,0)
 S CNT=+$O(^TMP($J,"MAGQDFN",PLACE,APP,""),-1)
"RTN","MAGQBPG1",190,0)
 I CNT<2 D
"RTN","MAGQBPG1",191,0)
 . S LOC=$$KSP^XUPARAM("WHERE")
"RTN","MAGQBPG1",192,0)
 . S ^TMP($J,"MAGQDFN",PLACE,APP,1)="            SITE: "_LOC
"RTN","MAGQBPG1",193,0)
 . S ^TMP($J,"MAGQDFN",PLACE,APP,2)="            DATE: "_$$FMTE^XLFDT($$NOW^XLFDT)_" "_$G(^XMB("TIMEZONE"))
"RTN","MAGQBPG1",194,0)
 . S CNT=2 Q
"RTN","MAGQBPG1",195,0)
 I SEND="1" D
"RTN","MAGQBPG1",196,0)
 . S RESULT=$$SUBCHK^XMGAPI0(INPUT,0)
"RTN","MAGQBPG1",197,0)
 . Q:$P(RESULT,U)
"RTN","MAGQBPG1",198,0)
 . S XMSUB=INPUT
"RTN","MAGQBPG1",199,0)
 . N XMTEXT,INTERVAL,XMDUZ,XMZ
"RTN","MAGQBPG1",200,0)
 . S INTERVAL=$$GETMI^MAGQBUT5(XMSUB,PLACE)
"RTN","MAGQBPG1",201,0)
 . I $$FMADD^XLFDT(+$P(INTERVAL,"^",2),"",+$P(INTERVAL,U,1),"","")>$$NOW^XLFDT D  Q
"RTN","MAGQBPG1",202,0)
 . . K ^TMP($J,"MAGQDFN",PLACE,APP) Q
"RTN","MAGQBPG1",203,0)
 . S XMTEXT="^TMP($J,""MAGQDFN"",PLACE,APP)"
"RTN","MAGQBPG1",204,0)
 . D:$$PROD^XUPROD("1") ADDMG^MAGQBUT5(INPUT,.XMY,PLACE)
"RTN","MAGQBPG1",205,0)
 . S XMY(DUZ)="",XMDUZ=DUZ,XMY(XMDUZ)=""
"RTN","MAGQBPG1",206,0)
 . S XMID=$G(DUZ) S:'XMID XMID=.5
"RTN","MAGQBPG1",207,0)
 . S XMINSTR("FLAGS")="I",XMINSTR("FROM")="VistA Imaging "_APP
"RTN","MAGQBPG1",208,0)
 . D SENDMSG^XMXAPI(XMID,XMSUB,XMTEXT,.XMY,.XMINSTR,.XMZ,)
"RTN","MAGQBPG1",209,0)
 . K ^TMP($J,"MAGQDFN",PLACE,APP)
"RTN","MAGQBPG1",210,0)
 . I $G(XMERR) M XMERR=^TMP("XMERR",$J) K XMERR
"RTN","MAGQBPG1",211,0)
 . K ^TMP($J,"MAGQDFN",PLACE,APP)
"RTN","MAGQBPG1",212,0)
 . D UDMI^MAGQBUT5(INPUT,PLACE) Q
"RTN","MAGQBPG1",213,0)
 E  S CNT=CNT+1,^TMP($J,"MAGQDFN",PLACE,APP,CNT)=INPUT
"RTN","MAGQBPG1",214,0)
 S $P(RESULT,U)=$S($P(RESULT,U):"1",1:0)
"RTN","MAGQBPG1",215,0)
 K XMY,XMINSTR,XMID
"RTN","MAGQBPG1",216,0)
 Q
"RTN","MAGQBPG1",217,0)
SCAN(IEN,ORDER,GB) ; Find the next image spanning the Image and the Image Archive file
"RTN","MAGQBPG1",218,0)
 I IEN,GB="^MAG(2005,",$D(^MAG(2005.1,IEN)) D  Q
"RTN","MAGQBPG1",219,0)
 . S IEN=IEN,GB="^MAG(2005.1," Q
"RTN","MAGQBPG1",220,0)
 N I1,I2
"RTN","MAGQBPG1",221,0)
 I $G(ORDER)="F" D 
"RTN","MAGQBPG1",222,0)
 . S I1=$O(^MAG(2005,IEN)),I1=$S(I1:I1,1:"")
"RTN","MAGQBPG1",223,0)
 . S I2=$O(^MAG(2005.1,IEN)),I2=$S(I2:I2,1:"")
"RTN","MAGQBPG1",224,0)
 . I I1,'I2 S IEN=I1,GB="^MAG(2005," Q
"RTN","MAGQBPG1",225,0)
 . I I2,'I1 S IEN=I2,GB="^MAG(2005.1," Q
"RTN","MAGQBPG1",226,0)
 . S GB=$S(I1>I2:"^MAG(2005.1,",1:"^MAG(2005,")
"RTN","MAGQBPG1",227,0)
 . S IEN=$S(I1>I2:I2,1:I1)
"RTN","MAGQBPG1",228,0)
 . Q
"RTN","MAGQBPG1",229,0)
 E  D  ;Reverse
"RTN","MAGQBPG1",230,0)
 . S I1=$O(^MAG(2005,IEN),-1),I1=$S(I1:I1,1:"")
"RTN","MAGQBPG1",231,0)
 . S I2=$O(^MAG(2005.1,IEN),-1),I2=$S(I2:I2,1:"")
"RTN","MAGQBPG1",232,0)
 . I I1,'I2 S IEN=I1,GB="^MAG(2005," Q
"RTN","MAGQBPG1",233,0)
 . I I2,'I1 S IEN=I2,GB="^MAG(2005.1," Q
"RTN","MAGQBPG1",234,0)
 . S GB=$S(I1<I2:"^MAG(2005.1,",1:"^MAG(2005,")
"RTN","MAGQBPG1",235,0)
 . S IEN=$S(I1<I2:I2,1:I1)
"RTN","MAGQBPG1",236,0)
 . Q
"RTN","MAGQBPG1",237,0)
 S (IEN,MAGDA)=$S('IEN:"",1:IEN)
"RTN","MAGQBPG1",238,0)
 Q
"RTN","MAGQBPG1",239,0)
KLOG(GL,IEN,CORREC) ;
"RTN","MAGQBPG1",240,0)
 S CORREC=$P($P(GL,","),"^MAG(",2)_"~"_IEN
"RTN","MAGQBPG1",241,0)
 D LOGKILL(GL_IEN_")") ;Journal the nodes and content being killed
"RTN","MAGQBPG1",242,0)
 K @(GL_IEN_")")
"RTN","MAGQBPG1",243,0)
 Q
"RTN","MAGQBPG1",244,0)
LOGKILL(REC) ; Log the content into the ^TMP global error log rpc
"RTN","MAGQBPG1",245,0)
 N NODE,NODE1,NODE2,NODE3,TMP,TMP1
"RTN","MAGQBPG1",246,0)
 S NODE=""
"RTN","MAGQBPG1",247,0)
 F  S NODE=$O(@REC@(NODE)) Q:NODE=""  D
"RTN","MAGQBPG1",248,0)
 . S TMP=$G(@REC@(NODE)) I TMP]"" S TMP1=$P(REC,")")_","_NODE_")="_TMP D ELOGV(TMP1)
"RTN","MAGQBPG1",249,0)
 . S NODE1="" F  S NODE1=$O(@REC@(NODE,NODE1)) Q:NODE1=""  D
"RTN","MAGQBPG1",250,0)
 . . S TMP=$G(@REC@(NODE,NODE1))  I TMP]"" S TMP1=$P(REC,")")_","_NODE_","_NODE1_")="_TMP D ELOGV(TMP1)
"RTN","MAGQBPG1",251,0)
 . . S NODE2="" F  S NODE2=$O(@REC@(NODE,NODE1,NODE2)) Q:NODE2=""  D
"RTN","MAGQBPG1",252,0)
 . . . S TMP=$G(@REC@(NODE,NODE1,NODE2)) I TMP]"" S TMP1=$P(REC,")")_","_NODE_","_NODE1_","_NODE2_")"_"="_TMP D ELOGV(TMP1)
"RTN","MAGQBPG1",253,0)
 . . . S NODE3="" F  S NODE3=$O(@REC@(NODE,NODE1,NODE2,NODE3)) Q:NODE3=""  D
"RTN","MAGQBPG1",254,0)
 . . . . S TMP=$G(@REC@(NODE,NODE1,NODE2,NODE3)) S TMP1=$P(REC,")")_","_NODE_","_NODE1_","_NODE2_","_NODE3_")="_TMP D ELOGV(TMP1)
"RTN","MAGQBPG1",255,0)
 . . . . Q
"RTN","MAGQBPG1",256,0)
 . . . Q
"RTN","MAGQBPG1",257,0)
 . . Q
"RTN","MAGQBPG1",258,0)
 . Q
"RTN","MAGQBPG1",259,0)
 Q
"RTN","MAGQBPG1",260,0)
ELOGV(MESG,LIMIT) ;TMP Log 
"RTN","MAGQBPG1",261,0)
 N INDX
"RTN","MAGQBPG1",262,0)
 N X S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPG1",263,0)
 S INDX=+$O(^TMP("MAGQ",$J,"BPV",""),-1)+1
"RTN","MAGQBPG1",264,0)
 S ^TMP("MAGQ",$J,"BPV",INDX)=MESG
"RTN","MAGQBPG1",265,0)
 Q
"RTN","MAGQBPG1",266,0)
ELOGRV(RESULT,LIMIT) ; [MAGQ LOGV] Error log report and purge
"RTN","MAGQBPG1",267,0)
 ; Please test this
"RTN","MAGQBPG1",268,0)
 N FN,INDX,CNT
"RTN","MAGQBPG1",269,0)
 N X S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPG1",270,0)
 S CNT=0,INDX=""
"RTN","MAGQBPG1",271,0)
 F  S INDX=$O(^TMP("MAGQ",$J,"BPV",INDX)) Q:INDX'?1N.N  Q:CNT=LIMIT  D
"RTN","MAGQBPG1",272,0)
 . S CNT=CNT+1,RESULT(CNT)=^TMP("MAGQ",$J,"BPV",INDX)
"RTN","MAGQBPG1",273,0)
 . K ^TMP("MAGQ",$J,"BPV",INDX)
"RTN","MAGQBPG1",274,0)
 . Q
"RTN","MAGQBPG1",275,0)
 S RESULT(0)=CNT
"RTN","MAGQBPG1",276,0)
 S INDX=$O(^TMP("MAGQ",$J,"BPV",""))
"RTN","MAGQBPG1",277,0)
 I INDX?1N.N S RESULT(0)=RESULT(0)_U_"MORE"
"RTN","MAGQBPG1",278,0)
 Q
"RTN","MAGQBPG2")
0^5^B21657260
"RTN","MAGQBPG2",1,0)
MAGQBPG2 ;WCIOFO/RMP - Magnetic Server Purge processes ; 07 Jun 2013 9:55 AM
"RTN","MAGQBPG2",2,0)
 ;;3.0;IMAGING;**8,20,39,135**;Mar 19, 2002;Build 5238;Jul 17, 2013
"RTN","MAGQBPG2",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGQBPG2",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBPG2",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGQBPG2",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGQBPG2",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGQBPG2",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGQBPG2",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGQBPG2",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGQBPG2",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGQBPG2",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGQBPG2",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGQBPG2",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGQBPG2",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGQBPG2",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBPG2",17,0)
 ;;
"RTN","MAGQBPG2",18,0)
 Q
"RTN","MAGQBPG2",19,0)
CNP(RESULT,IEN) ; [MAGQ PCHKN]
"RTN","MAGQBPG2",20,0)
 N FNAME,PIECE,ZNODE,BNODE,BNAME,PTR,HASH,X
"RTN","MAGQBPG2",21,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPG2",22,0)
 S IEN=+IEN,RESULT="^^^",U="^"
"RTN","MAGQBPG2",23,0)
 F  S IEN=$O(^MAG(2005,IEN)) Q:IEN'?1N.N  D  Q:RESULT'="^^^"
"RTN","MAGQBPG2",24,0)
 . S ZNODE=$G(^MAG(2005,IEN,0))
"RTN","MAGQBPG2",25,0)
 . S FNAME=$P(ZNODE,U,2)
"RTN","MAGQBPG2",26,0)
 . I (FNAME["\")!(FNAME[":") D
"RTN","MAGQBPG2",27,0)
 . . S FNAME=$$FNX(FNAME)
"RTN","MAGQBPG2",28,0)
 . . S $P(^MAG(2005,IEN,0),U,2)=FNAME
"RTN","MAGQBPG2",29,0)
 . Q:$P(ZNODE,U,2)=""  ;PROBABLE GROUP HEAD
"RTN","MAGQBPG2",30,0)
 . S BNODE=$G(^MAG(2005,IEN,"FBIG"))
"RTN","MAGQBPG2",31,0)
 . S PTR=$P(ZNODE,U,3) I PTR?1N.N D
"RTN","MAGQBPG2",32,0)
 . . S HASH=$P(^MAG(2005.2,PTR,0),U,8)
"RTN","MAGQBPG2",33,0)
 . . S $P(^MAG(2005,IEN,0),U,3)=$$SHNAM^MAGQBPRG($P(^MAG(2005.2,PTR,0),U,2),HASH)
"RTN","MAGQBPG2",34,0)
 . . S $P(RESULT,"^")=$$JBPATH^MAGQBPRG(FNAME,PTR)
"RTN","MAGQBPG2",35,0)
 . S PTR=$P(ZNODE,U,4) I PTR?1N.N D
"RTN","MAGQBPG2",36,0)
 . . S HASH=$P(^MAG(2005.2,PTR,0),U,8)
"RTN","MAGQBPG2",37,0)
 . . S $P(^MAG(2005,IEN,0),U,4)=$$SHNAM^MAGQBPRG($P(^MAG(2005.2,PTR,0),U,2),HASH)
"RTN","MAGQBPG2",38,0)
 . . S $P(RESULT,U,2)=$$JBPATH^MAGQBPRG($P(FNAME,".")_".ABS",PTR)
"RTN","MAGQBPG2",39,0)
 . S PTR=$P(BNODE,U) I PTR?1N.N D
"RTN","MAGQBPG2",40,0)
 . . S HASH=$P(^MAG(2005.2,PTR,0),U,8)
"RTN","MAGQBPG2",41,0)
 . . S $P(^MAG(2005,IEN,"FBIG"),U)=$$SHNAM^MAGQBPRG($P(^MAG(2005.2,PTR,0),U,2),HASH)
"RTN","MAGQBPG2",42,0)
 . . S BNAME=$P(FNAME,".")_".BIG"
"RTN","MAGQBPG2",43,0)
 . . S $P(RESULT,"^",3)=$$JBPATH^MAGQBPRG(BNAME,PTR)
"RTN","MAGQBPG2",44,0)
 . I RESULT'="^^^" S $P(RESULT,U,4)=IEN  ;IEN
"RTN","MAGQBPG2",45,0)
 Q
"RTN","MAGQBPG2",46,0)
FNX(NAME) ;FIX FILENAME
"RTN","MAGQBPG2",47,0)
 I NAME[":" S NAME=$P(NAME,":",$L(NAME,":"))
"RTN","MAGQBPG2",48,0)
 I NAME["\" S NAME=$P(NAME,"\",$L(NAME,"\"))
"RTN","MAGQBPG2",49,0)
 Q NAME
"RTN","MAGQBPG2",50,0)
CNPT ;
"RTN","MAGQBPG2",51,0)
 N IEN,RESULT,%
"RTN","MAGQBPG2",52,0)
 S IEN=0
"RTN","MAGQBPG2",53,0)
 D NOW^%DTC
"RTN","MAGQBPG2",54,0)
 F  D CNP(.RESULT,.IEN) W:RESULT[":" !,RESULT Q:IEN'?1N.N  D
"RTN","MAGQBPG2",55,0)
 . S IEN=$P(RESULT,"^",4)
"RTN","MAGQBPG2",56,0)
 Q
"RTN","MAGQBPG2",57,0)
PGEPAR(RESULT) ; RPC[MAGQBP PARM]
"RTN","MAGQBPG2",58,0)
 ;; RECORD PurgeParam
"RTN","MAGQBPG2",59,0)
 ;; Status^ABS^FULL^BIG^FilePrefix^EXPRESSPURGE^PurgeBy^PhotoID^Minimum
"RTN","MAGQBPG2",60,0)
 ;; FULL:8,BIG:22,ABS:23,EXPRESSP:60.2,PURGEBY:60.1
"RTN","MAGQBPG2",61,0)
 N ABS,FULL,BIG,PREFIX,NODE3,EXPRESSP,PURGEBY,PREFIX,BIG,MINIMUM
"RTN","MAGQBPG2",62,0)
 N FILE,PLACE,FIELD,FLAGS,ARR,X,PHOTOID,TEMP
"RTN","MAGQBPG2",63,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPG2",64,0)
 S PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBPG2",65,0)
 S NODE3=$G(^MAG(2006.1,PLACE,3))
"RTN","MAGQBPG2",66,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPG2",67,0)
 S U="^"
"RTN","MAGQBPG2",68,0)
 S FILE=2006.1,FIELD="8;22;23;24;60.2;60.1",FLAGS="E"
"RTN","MAGQBPG2",69,0)
 D GETS^DIQ(FILE,PLACE,FIELD,FLAGS,"ARR","ERR")
"RTN","MAGQBPG2",70,0)
 S FULL=+ARR(2006.1,PLACE_",",8,"E")
"RTN","MAGQBPG2",71,0)
 S ABS=+ARR(2006.1,PLACE_",",23,"E")
"RTN","MAGQBPG2",72,0)
 S BIG=+ARR(2006.1,PLACE_",",22,"E")
"RTN","MAGQBPG2",73,0)
 S PHOTOID=+ARR(2006.1,PLACE_",",24,"E")
"RTN","MAGQBPG2",74,0)
 S EXPRESSP=ARR(2006.1,PLACE_",",60.2,"E")
"RTN","MAGQBPG2",75,0)
 S PREFIX=$$INIS(PLACE)
"RTN","MAGQBPG2",76,0)
 S PURGEBY=ARR(2006.1,PLACE_",",60.1,"E")
"RTN","MAGQBPG2",77,0)
 S:PURGEBY="" PURGEBY="DATE ACCESSED"
"RTN","MAGQBPG2",78,0)
 S MINIMUM=FULL F TEMP=ABS,BIG,PHOTOID S:MINIMUM>TEMP MINIMUM=TEMP
"RTN","MAGQBPG2",79,0)
 S RESULT="1"_U_ABS_U_FULL_U_BIG_U_PREFIX_U_EXPRESSP_U_PURGEBY_U_PHOTOID_U_MINIMUM
"RTN","MAGQBPG2",80,0)
 K ARR
"RTN","MAGQBPG2",81,0)
 Q
"RTN","MAGQBPG2",82,0)
 ;;
"RTN","MAGQBPG2",83,0)
PGEUD(RESULT,FILENAME,EXT,IEN,DEVICE) ; RPC[MAGQBP UPDATE]
"RTN","MAGQBPG2",84,0)
 N FTYPE,NODE,PIECE,PLACE,X
"RTN","MAGQBPG2",85,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPG2",86,0)
 S PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBPG2",87,0)
 S EXT=$$UPPER^MAGQE4(EXT)
"RTN","MAGQBPG2",88,0)
 S RESULT="0",FTYPE=$$FTYPE^MAGQBPRG(EXT,IEN)
"RTN","MAGQBPG2",89,0)
 S NODE=$S(FTYPE="BIG":"FBIG",1:0)
"RTN","MAGQBPG2",90,0)
 S:DEVICE="JB" PIECE=$S(FTYPE="ABS":5,FTYPE="BIG":2,FTYPE="FULL":5,FTYPE="PHOTOID":5,FTYPE="ADIRECT":5,1:0)
"RTN","MAGQBPG2",91,0)
 S:DEVICE="NET" PIECE=$S(EXT="ABS":4,FTYPE="BIG":1,FTYPE="FULL":3,FTYPE="PHOTOID":3,FTYPE="ADIRECT":3,1:0)
"RTN","MAGQBPG2",92,0)
 I PIECE=0 D ELOG^MAGQBPRG(NODE,FTYPE,"RAID pointer indeterminate") Q
"RTN","MAGQBPG2",93,0)
 S RESULT="1"
"RTN","MAGQBPG2",94,0)
 S:$D(^MAG(2005,IEN,NODE)) $P(^MAG(2005,IEN,NODE),U,PIECE)=""
"RTN","MAGQBPG2",95,0)
 S:$D(^MAG(2005.1,IEN,NODE)) $P(^MAG(2005.1,IEN,NODE),U,PIECE)=""
"RTN","MAGQBPG2",96,0)
 Q
"RTN","MAGQBPG2",97,0)
INIS(PLACE) ;
"RTN","MAGQBPG2",98,0)
 N ARRY,CNT,SUB,RESULT
"RTN","MAGQBPG2",99,0)
 S ARRY($P($G(^MAG(2006.1,PLACE,0)),"^",2))=""
"RTN","MAGQBPG2",100,0)
 S CNT=0
"RTN","MAGQBPG2",101,0)
 F  S CNT=$O(^MAG(2006.1,PLACE,4,CNT)) Q:CNT'?1N.N  D
"RTN","MAGQBPG2",102,0)
 . S ARRY(^MAG(2006.1,PLACE,4,CNT,0))=""
"RTN","MAGQBPG2",103,0)
 S (SUB,RESULT)=""
"RTN","MAGQBPG2",104,0)
 F  S SUB=$O(ARRY(SUB)) Q:SUB=""  D
"RTN","MAGQBPG2",105,0)
 . S RESULT=$S(RESULT="":SUB,1:(RESULT_","_SUB))
"RTN","MAGQBPG2",106,0)
 K ARRY
"RTN","MAGQBPG2",107,0)
 Q RESULT
"RTN","MAGQBPRG")
0^6^B59523068
"RTN","MAGQBPRG",1,0)
MAGQBPRG ;WOIOFO/RMP - Magnetic Server Purge processes ; 07 Jun 2013 9:53 AM
"RTN","MAGQBPRG",2,0)
 ;;3.0;IMAGING;**7,3,8,20,81,39,135**;Mar 19, 2002;Build 5238;Jul 17, 2013
"RTN","MAGQBPRG",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGQBPRG",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBPRG",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGQBPRG",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGQBPRG",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGQBPRG",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGQBPRG",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGQBPRG",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGQBPRG",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGQBPRG",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGQBPRG",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGQBPRG",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGQBPRG",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGQBPRG",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBPRG",17,0)
 ;;
"RTN","MAGQBPRG",18,0)
 Q
"RTN","MAGQBPRG",19,0)
FILEREF(RESULT,FILEPATH,FNAM,EXT,NETLOC) ; RPC[MAGQBP FREF]
"RTN","MAGQBPRG",20,0)
 ;VALIDATES THAT THE FILEPATH IS CONSISTENT WITH VISTA MAGFILE REFERENCE
"RTN","MAGQBPRG",21,0)
 ;SET THE SECOND PIECE TO "PACS" IF IT REPRESENTS DICOM
"RTN","MAGQBPRG",22,0)
 ;VALIDATES THAT A JUKEBOX POINTER EXISTS
"RTN","MAGQBPRG",23,0)
 ;RESULT VALUES
"RTN","MAGQBPRG",24,0)
 ;PIECE  1:-3 = FOREIGN FILE, DO NOT PURGE
"RTN","MAGQBPRG",25,0)
 ;         -2 = QUEUED FOR JUKEBOX COPY, DO NOT PURGE
"RTN","MAGQBPRG",26,0)
 ;         -1 = DO NOT PURGE
"RTN","MAGQBPRG",27,0)
 ;        **0 = PURGE('MAG 2005 ENTRY)!('JUKEBOX PTRS )
"RTN","MAGQBPRG",28,0)
 ;          1 = PURGE GIVEN NORMAL DATE CRITERIA (NDC) + CONFIRMED ON JB
"RTN","MAGQBPRG",29,0)
 ;        **2 = PURGE GIVEN NDC IF TGA PRESENT
"RTN","MAGQBPRG",30,0)
 ;          3 = PURGE IF FILE IS AT ALTERNATE NETWORK LOCATION SITE
"RTN","MAGQBPRG",31,0)
 ;              ELSE PURGE IF AGED & UPDATE FILE REFERENCES
"RTN","MAGQBPRG",32,0)
 ;        **4 = (**NA**)AGE PURGE IF ON JUKEBOX, UPDATE FILE REFERENCES
"RTN","MAGQBPRG",33,0)
 ;              ELSE UPDATE FILEREFENCES, QUEUE JUKEBOX COPY
"RTN","MAGQBPRG",34,0)
 ;          5 = PURGE IF AT ALTERNATE SITE,QUEUE JUKEBOX IF NOT ON JB
"RTN","MAGQBPRG",35,0)
 ;        **6 = PURGE GIVEN NORMAL DATE CRITERIA
"RTN","MAGQBPRG",36,0)
 ;PIECE   ** 2:  FILETYPE
"RTN","MAGQBPRG",37,0)
 ;                   0 = foreign
"RTN","MAGQBPRG",38,0)
 ;                   1 = abstract
"RTN","MAGQBPRG",39,0)
 ;                   2 = full
"RTN","MAGQBPRG",40,0)
 ;                   3 = big
"RTN","MAGQBPRG",41,0)
 ;                   4 = photo id
"RTN","MAGQBPRG",42,0)
 ;                   5 = advance directive
"RTN","MAGQBPRG",43,0)
 ;PIECE    3: RECORD CATEGORY
"RTN","MAGQBPRG",44,0)
 ;         1 = 'NO 2005 ENTRY
"RTN","MAGQBPRG",45,0)
 ;       **2 = RADIOLOGY HOLD
"RTN","MAGQBPRG",46,0)
 ;         3 = NO JUKEBOX/JUKEBOX PTRS
"RTN","MAGQBPRG",47,0)
 ;         4 = JUKEBOX - NO JUKEBOX PTRS (P/EXCEPT)ELSE QUEUE
"RTN","MAGQBPRG",48,0)
 ;         5 = JUKEBOX/JUKEBOX PTRS, NO CACHE PTRS,PURGE IF CONFIRMED
"RTN","MAGQBPRG",49,0)
 ;         6 = JUKEBOX/JUKEBOX PTRS, WRONG CACHE PTRS PURGE IF AT ALT
"RTN","MAGQBPRG",50,0)
 ;         7 = JUKEBOX/JUKEBOX PTRS, NO CACHE PTRS, FIX PTRS
"RTN","MAGQBPRG",51,0)
 ;         8 = JUKEBOX/JUKEBOX PTRS, CACHE PTRS, AGE (IF CONFIRMED)
"RTN","MAGQBPRG",52,0)
 ;         9 = RECORD NOT IN THE IMAGE FILE
"RTN","MAGQBPRG",53,0)
 ;        10 = FOREIGN IMAGE FILE
"RTN","MAGQBPRG",54,0)
 ;        11 = NOT AN IMAGE FILE
"RTN","MAGQBPRG",55,0)
 ;        12 = FILE LOCATION NOT VALID 
"RTN","MAGQBPRG",56,0)
 ;        13 = DELETE 2005 ENTRY (LAST LOCATION REFERENCED)
"RTN","MAGQBPRG",57,0)
 ;        14 = Duplicate 2005/2005.1 entry
"RTN","MAGQBPRG",58,0)
 ;        15 = Foreign Place
"RTN","MAGQBPRG",59,0)
 ;        16 = Record in Archive file
"RTN","MAGQBPRG",60,0)
 ;        17 = Jukebox offline
"RTN","MAGQBPRG",61,0)
 N FILEXT,IEN,SITEID,MAGXX,MAGFILE,MAGFILE1,MAGFILE2,RIEN,ZNODE
"RTN","MAGQBPRG",62,0)
 N FTYPE,CPTR,JBPTR,CPOK,BNODE,ALTPATH,NMSPC,PLACE,XX,FT,MAGDA
"RTN","MAGQBPRG",63,0)
 N X S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPRG",64,0)
 S PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBPRG",65,0)
 S U="^",(MAGFILE2,RESULT)=""
"RTN","MAGQBPRG",66,0)
 S FNAM=$$UPPER^MAGQE4(FNAM)
"RTN","MAGQBPRG",67,0)
 S EXT=$$UPPER^MAGQE4(EXT)
"RTN","MAGQBPRG",68,0)
 S ^TMP("MAGQ",$J,"PRG","LAST")=FILEPATH_U_FNAM_U_EXT_U_NETLOC
"RTN","MAGQBPRG",69,0)
 I FNAM'?1.5A1.13N1"."1.3E  D  Q  ;LATER ADD EXT VERIFY USING 2005.02
"RTN","MAGQBPRG",70,0)
 . D ELOG(FNAM,FILEPATH,"Not a VistA Imaging file") S RESULT="-3^0^11" Q  ;'IMAGE FILE
"RTN","MAGQBPRG",71,0)
 S SITEID=$$UPPER^MAGQE4($$INIS^MAGQBPG2(PLACE))
"RTN","MAGQBPRG",72,0)
 S NMSPC=$TR($P(FNAM,"."),"0123456789","")
"RTN","MAGQBPRG",73,0)
 S FILEPATH=$$UPPER^MAGQE4(FILEPATH)
"RTN","MAGQBPRG",74,0)
 I SITEID'[NMSPC D ELOG(FNAM,FILEPATH,"Foreign Image file") S RESULT="-3^0^10" Q  ;FOREIGN FILE
"RTN","MAGQBPRG",75,0)
 S (IEN,MAGDA)=$O(^MAG(2005,"F",$P(FNAM,"."),""))
"RTN","MAGQBPRG",76,0)
 I 'IEN  S IEN=$O(^MAG(2005.1,"F",$P(FNAM,"."),""))
"RTN","MAGQBPRG",77,0)
 ; Patch 39 - added logging
"RTN","MAGQBPRG",78,0)
 I 'IEN D  Q
"RTN","MAGQBPRG",79,0)
 . D ELOG(FNAM,FILEPATH,"Record neither in 2005 nor 2005.1")
"RTN","MAGQBPRG",80,0)
 . S RESULT="-3^0^9^^^"_IEN
"RTN","MAGQBPRG",81,0)
 . Q
"RTN","MAGQBPRG",82,0)
 S FTYPE=$$FTYPE(EXT,IEN)
"RTN","MAGQBPRG",83,0)
 S FT=$S(FTYPE="ABS":"1",FTYPE="FULL":"2",FTYPE="BIG":"3",FTYPE="PHOTOID":"4",FTYPE="ADIRECT":"5",1:"2")
"RTN","MAGQBPRG",84,0)
 S JBPTR=$$JBPTR(IEN,FTYPE)
"RTN","MAGQBPRG",85,0)
 ;PURGE UNCONDITIONALLY IF NO 2005 or 2005.1 ENTRY
"RTN","MAGQBPRG",86,0)
 I '$D(^MAG(2005,IEN,0)) D  Q
"RTN","MAGQBPRG",87,0)
 . I $D(^MAG(2005.1,IEN,0)) D  Q
"RTN","MAGQBPRG",88,0)
 . . I ('JBPTR&($P($G(^MAG(2005.2,+$$JBPTR^MAGBAPI(PLACE),0)),U,6)="1"))  D
"RTN","MAGQBPRG",89,0)
 . . . S XX=$$JUKEBOX^MAGBAPI(IEN,PLACE)
"RTN","MAGQBPRG",90,0)
 . . . S RESULT="-2^"_FT_"^9^^^"_IEN
"RTN","MAGQBPRG",91,0)
 . . . Q
"RTN","MAGQBPRG",92,0)
 . . E  D 
"RTN","MAGQBPRG",93,0)
 . . . I JBPTR S RESULT="5^"_FT_"^16^"_$$JBPATH(FNAM,JBPTR)_U_$$JBPATH(FNAM,JBPTR)_U_IEN
"RTN","MAGQBPRG",94,0)
 . . . E  S RESULT="-1^"_FT_"^17"
"RTN","MAGQBPRG",95,0)
 . . . Q
"RTN","MAGQBPRG",96,0)
 . E  S RESULT="1^"_FT_"^9^^^"_IEN
"RTN","MAGQBPRG",97,0)
 . Q
"RTN","MAGQBPRG",98,0)
 I PLACE'=$$PLACE^MAGBAPI(+$P($G(^MAG(2005,IEN,100)),U,3)) D  Q
"RTN","MAGQBPRG",99,0)
 . S RESULT="-3^"_FT_"^15" Q  ;Foreign Place
"RTN","MAGQBPRG",100,0)
 S ZNODE=^MAG(2005,IEN,0)
"RTN","MAGQBPRG",101,0)
 I $P(ZNODE,U,12)="1" S RESULT="-1^"_FT_"^14" Q  ; Duplicate Image/Archive entry 
"RTN","MAGQBPRG",102,0)
 S BNODE=$S(FTYPE="BIG":$G(^MAG(2005,IEN,"FBIG")),1:"")
"RTN","MAGQBPRG",103,0)
 ; NEXT PROCESS MAGNETIC PTR~LESS
"RTN","MAGQBPRG",104,0)
 S CPTR=$$CHKCP($S(FTYPE="BIG":BNODE,1:ZNODE),FTYPE,EXT)
"RTN","MAGQBPRG",105,0)
 I 'CPTR D  Q
"RTN","MAGQBPRG",106,0)
 . D CPUPD(FTYPE,IEN,FILEPATH,FNAM,EXT)
"RTN","MAGQBPRG",107,0)
 . I 'JBPTR,$P($G(^MAG(2005.2,+$$JBPTR^MAGBAPI(PLACE),0)),U,6)="1" D
"RTN","MAGQBPRG",108,0)
 . . S XX=$$JUKEBOX^MAGBAPI(IEN,PLACE)
"RTN","MAGQBPRG",109,0)
 . S RESULT="-1^"_FT_"^7^^"_JBPTR_U_IEN ;$S(JBPTR:JBPTR,1:XX)_U_IEN
"RTN","MAGQBPRG",110,0)
 S CPOK=$S('CPTR:0,1:$$CPOK(FTYPE,.ALTPATH,FILEPATH,IEN,EXT))
"RTN","MAGQBPRG",111,0)
 S ALTPATH=ALTPATH_FNAM
"RTN","MAGQBPRG",112,0)
 I 'CPOK,JBPTR D  Q
"RTN","MAGQBPRG",113,0)
 . S RESULT="3^"_FT_"^6^"_ALTPATH_U_$$JBPATH(FNAM,JBPTR)_U_IEN
"RTN","MAGQBPRG",114,0)
 I 'JBPTR D  Q
"RTN","MAGQBPRG",115,0)
 . I $P($G(^MAG(2005.2,+$$JBPTR^MAGBAPI(PLACE),0)),U,6)="1" D
"RTN","MAGQBPRG",116,0)
 . . S XX=$$JUKEBOX^MAGBAPI(IEN,PLACE)
"RTN","MAGQBPRG",117,0)
 . . S RESULT="-1^"_FT_"^7^^"_JBPTR_U_IEN ;$S(JBPTR:JBPTR,1:XX)_U_IEN
"RTN","MAGQBPRG",118,0)
 . . Q
"RTN","MAGQBPRG",119,0)
 . E  S RESULT="-1^"_FT_"^17"
"RTN","MAGQBPRG",120,0)
 . Q
"RTN","MAGQBPRG",121,0)
 S RESULT="1^"_FT_"^8^^"_$$JBPATH(FNAM,JBPTR)_U_IEN
"RTN","MAGQBPRG",122,0)
 Q
"RTN","MAGQBPRG",123,0)
 ;
"RTN","MAGQBPRG",124,0)
LASTNP(TYPE) ;
"RTN","MAGQBPRG",125,0)
 I TYPE="BIG" Q $S($P(ZNODE,U,3,4)="^":1,1:0)
"RTN","MAGQBPRG",126,0)
 I TYPE="ABS" Q $S((($P(ZNODE,U,3)="")&($P(BNODE,U)="")):1,1:0)
"RTN","MAGQBPRG",127,0)
 Q $S((($P(ZNODE,U,4)="")&($P(BNODE,U)="")):1,1:0)
"RTN","MAGQBPRG",128,0)
JBPATH(FN,NL) ;
"RTN","MAGQBPRG",129,0)
 Q $P($G(^MAG(2005.2,NL,0)),U,2)_$$DIRHASH^MAGFILEB(FN,NL)_FN
"RTN","MAGQBPRG",130,0)
FTYPE(FEXT,IEN) ;
"RTN","MAGQBPRG",131,0)
 ; Patch 39 : checking for ABS in FULL
"RTN","MAGQBPRG",132,0)
 N FILE
"RTN","MAGQBPRG",133,0)
 S FILE=$S($D(^MAG(2005,IEN,0)):"2005",1:"2005.1")
"RTN","MAGQBPRG",134,0)
 S FEXT=$$UPPER^MAGQE4(FEXT)
"RTN","MAGQBPRG",135,0)
 I "^ABS^"[("^"_FEXT_"^") Q "ABS"
"RTN","MAGQBPRG",136,0)
 I $P($G(^MAG(FILE,IEN,40)),U,3)=$O(^MAG(2005.83,"B","PHOTO ID","")) Q "PHOTOID"
"RTN","MAGQBPRG",137,0)
 I $P($G(^MAG(FILE,IEN,0)),U,6)=$O(^MAG(2005.02,"B","PATIENT PHOTO","")) Q "PHOTOID"
"RTN","MAGQBPRG",138,0)
 I $P($G(^MAG(FILE,IEN,40)),U,3)=$O(^MAG(2005.83,"B","ADVANCE DIRECTIVE","")) Q "ADIRECT"
"RTN","MAGQBPRG",139,0)
 I $$UPPER^MAGQE4($P($G(^MAG(FILE,IEN,0)),U,2))[".ABS" Q "FULL"
"RTN","MAGQBPRG",140,0)
 I "^BIG^"[("^"_FEXT_"^") Q "BIG"
"RTN","MAGQBPRG",141,0)
 I "^"_$P($G(^MAG(FILE,IEN,"FBIG")),U,3)_"^"[("^"_FEXT_"^") Q "BIG"
"RTN","MAGQBPRG",142,0)
 Q "FULL"
"RTN","MAGQBPRG",143,0)
CHKCP(NODE,TYPE,EXT) ;
"RTN","MAGQBPRG",144,0)
 N PIECE,CP
"RTN","MAGQBPRG",145,0)
 S PIECE=$S(TYPE="ABS":4,TYPE="BIG":1,TYPE="FULL":3,"^PHOTOID^ADIRECT^"[("^"_TYPE_"^"):3,1:0)
"RTN","MAGQBPRG",146,0)
 Q $P(NODE,U,PIECE)
"RTN","MAGQBPRG",147,0)
JBPTR(MAGIEN,TYPE) ;
"RTN","MAGQBPRG",148,0)
 N PTR
"RTN","MAGQBPRG",149,0)
 I TYPE="BIG" D
"RTN","MAGQBPRG",150,0)
 . S PTR=+$P($G(^MAG(2005,MAGIEN,"FBIG")),"^",2)
"RTN","MAGQBPRG",151,0)
 . S:'PTR PTR=+$P($G(^MAG(2005.1,MAGIEN,"FBIG")),"^",2)
"RTN","MAGQBPRG",152,0)
 E  D
"RTN","MAGQBPRG",153,0)
 . S PTR=+$P($G(^MAG(2005,MAGIEN,0)),"^",5)
"RTN","MAGQBPRG",154,0)
 . S:'PTR PTR=+$P($G(^MAG(2005.1,MAGIEN,"FBIG")),"^",2)
"RTN","MAGQBPRG",155,0)
 Q $S($P($G(^MAG(2005.2,PTR,0)),U,6)=1:PTR,1:0)
"RTN","MAGQBPRG",156,0)
CPOK(TYPE,ALTPATH,FILEPATH,IEN,EXT) ;
"RTN","MAGQBPRG",157,0)
 ; Patch 39: initializing ALTPATH, checking nodes of either 2005 or 2005.1
"RTN","MAGQBPRG",158,0)
 N MAGXX,PIECE,NODE,LOC,FILE
"RTN","MAGQBPRG",159,0)
 S EXT=$$UPPER^MAGQE4(EXT)
"RTN","MAGQBPRG",160,0)
 S MAGXX=IEN
"RTN","MAGQBPRG",161,0)
 S ALTPATH=""
"RTN","MAGQBPRG",162,0)
 S PIECE=$S(TYPE="ABS":4,TYPE="BIG":1,TYPE="FULL":3,"^PHOTOID^ADIRECT^"[("^"_TYPE_"^"):3,1:0)
"RTN","MAGQBPRG",163,0)
 S NODE=$S(TYPE="BIG":"FBIG",1:0)
"RTN","MAGQBPRG",164,0)
 S FILE=$S($D(^MAG(2005,IEN,0)):"2005",1:"2005.1")
"RTN","MAGQBPRG",165,0)
 S LOC=$P($G(^MAG(FILE,IEN,NODE)),U,PIECE)
"RTN","MAGQBPRG",166,0)
 Q:'$D(^MAG(2005.2,+LOC,0)) 0
"RTN","MAGQBPRG",167,0)
 S ALTPATH=$$UPPER^MAGQE4($P($G(^MAG(2005.2,LOC,0)),U,2)_$$DIRHASH^MAGFILEB(FNAM,LOC))
"RTN","MAGQBPRG",168,0)
 Q $S(ALTPATH=FILEPATH:1,1:0)
"RTN","MAGQBPRG",169,0)
CPUPD(TYPE,IEN,FP,FN,EXT) ;
"RTN","MAGQBPRG",170,0)
 ; Patch 39 - Update : Error log type, and using FILE in case an Archive file
"RTN","MAGQBPRG",171,0)
 N PIECE,CP,NODE,LOC,FILE
"RTN","MAGQBPRG",172,0)
 S EXT=$S('$D(EXT):"",1:$$UPPER^MAGQE4(EXT))
"RTN","MAGQBPRG",173,0)
 S PIECE=$S(TYPE="ABS":4,TYPE="BIG":1,TYPE="FULL":3,"^PHOTOID^ADIRECT^"[("^"_TYPE_"^"):3,1:0)
"RTN","MAGQBPRG",174,0)
 S NODE=$S(TYPE="BIG":"FBIG",1:0)
"RTN","MAGQBPRG",175,0)
 S LOC=$$UNHASH(FN,FP)
"RTN","MAGQBPRG",176,0)
 I (PIECE=0)!(+LOC=0) D ELOG(FN,FP,"RAID pointer indeterminate") Q
"RTN","MAGQBPRG",177,0)
 S FILE=$S($D(^MAG(2005,IEN,0)):"2005",1:"2005.1")
"RTN","MAGQBPRG",178,0)
 S $P(^MAG(FILE,IEN,NODE),U,PIECE)=LOC
"RTN","MAGQBPRG",179,0)
 Q
"RTN","MAGQBPRG",180,0)
CUPD(RESULT,FILEPATH,FILENAME,EXT,IEN) ; RPC[MAGQ CUPDTE]
"RTN","MAGQBPRG",181,0)
 N TYPE ; called from the BP Purge
"RTN","MAGQBPRG",182,0)
 N X S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPRG",183,0)
 S TYPE=$$FTYPE(EXT,IEN)
"RTN","MAGQBPRG",184,0)
 D CPUPD(TYPE,IEN,FILEPATH,FILENAME,EXT)
"RTN","MAGQBPRG",185,0)
 Q
"RTN","MAGQBPRG",186,0)
UNHASH(FN,FP) ; RETURN NETWORK LOCATION NUMBER
"RTN","MAGQBPRG",187,0)
 N SHARE,HASH
"RTN","MAGQBPRG",188,0)
 S SHARE=$S(FP[":":$P(FP,"\",1,2)_"\",1:$P(FP,"\",1,4)_"\")
"RTN","MAGQBPRG",189,0)
 S HASH=$S($P(FP,SHARE,2)["\":"Y",1:"")
"RTN","MAGQBPRG",190,0)
 Q $$SHNAM(SHARE,HASH)
"RTN","MAGQBPRG",191,0)
ELOG(FN,FP,MESSAGE) ;
"RTN","MAGQBPRG",192,0)
 N INDX
"RTN","MAGQBPRG",193,0)
 N X S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPRG",194,0)
 S INDX=+$O(^TMP("MAGQ",$J,"PRG",99999),-1)+1
"RTN","MAGQBPRG",195,0)
 S ^TMP("MAGQ",$J,"PRG",INDX)=MESSAGE_"^"_FN_"^"_FP
"RTN","MAGQBPRG",196,0)
 Q
"RTN","MAGQBPRG",197,0)
ELOGR(RESULT,LIMIT) ;[MAGQ ELOGR] - Error log report and purge
"RTN","MAGQBPRG",198,0)
 ; Please test this
"RTN","MAGQBPRG",199,0)
 N FN,INDX,CNT
"RTN","MAGQBPRG",200,0)
 N X S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPRG",201,0)
 S CNT=0,INDX=""
"RTN","MAGQBPRG",202,0)
 F  S INDX=$O(^TMP("MAGQ",$J,"PRG",INDX)) Q:INDX'?1N.N  Q:CNT=LIMIT  D
"RTN","MAGQBPRG",203,0)
 . S CNT=CNT+1,RESULT(CNT)=^TMP("MAGQ",$J,"PRG",INDX)
"RTN","MAGQBPRG",204,0)
 . K ^TMP("MAGQ",$J,"PRG",INDX)
"RTN","MAGQBPRG",205,0)
 . Q
"RTN","MAGQBPRG",206,0)
 S RESULT(0)=CNT
"RTN","MAGQBPRG",207,0)
 S INDX=$O(^TMP("MAGQ",$J,"PRG",""))
"RTN","MAGQBPRG",208,0)
 I INDX?1N.N S RESULT(0)=RESULT(0)_U_"MORE"
"RTN","MAGQBPRG",209,0)
 Q
"RTN","MAGQBPRG",210,0)
SHNAM(SHARE,HASH) ;
"RTN","MAGQBPRG",211,0)
 N NUM,ONLINE,ZNODE
"RTN","MAGQBPRG",212,0)
 S (NUM,ONLINE)=0
"RTN","MAGQBPRG",213,0)
 F  S NUM=$O(^MAG(2005.2,"AC",SHARE,NUM)) Q:'NUM  D  Q:ONLINE
"RTN","MAGQBPRG",214,0)
 . S ZNODE=^MAG(2005.2,NUM,0)
"RTN","MAGQBPRG",215,0)
 . Q:($P(ZNODE,"^",6)'="1")
"RTN","MAGQBPRG",216,0)
 . Q:($P(ZNODE,"^",8)'=HASH)
"RTN","MAGQBPRG",217,0)
 . S ONLINE="1"
"RTN","MAGQBPRG",218,0)
 Q NUM
"RTN","MAGQBTM")
0^7^B85282923
"RTN","MAGQBTM",1,0)
MAGQBTM ;WOIFO/RMP/JL - REMOTE Task SERVER Program ; 26 Dec 2012 1:41 PM
"RTN","MAGQBTM",2,0)
 ;;3.0;IMAGING;**1,7,8,20,81,39,135**;Mar 19, 2002;Build 5238;Jul 17, 2013
"RTN","MAGQBTM",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGQBTM",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBTM",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGQBTM",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGQBTM",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGQBTM",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGQBTM",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGQBTM",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGQBTM",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGQBTM",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGQBTM",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGQBTM",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGQBTM",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGQBTM",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBTM",17,0)
 ;;
"RTN","MAGQBTM",18,0)
 Q
"RTN","MAGQBTM",19,0)
ENTRY(RESULT,WSTAT,PROCESS) ; RPC[MAGQ ABP]
"RTN","MAGQBTM",20,0)
 N X,SYSIEN,SYSNAME,NODE,INDX,CNT,PROC,%,QPTR,QCNT,VERS,EXEDATE,WSOS,PLACE,VOK,EXDATE
"RTN","MAGQBTM",21,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBTM",22,0)
 S (SYSIEN,CNT)=0,SYSNAME="",PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2))),VOK=""
"RTN","MAGQBTM",23,0)
 S $P(RESULT(0),U,6)=$D(^XUSEC("MAG SYSTEM",DUZ))
"RTN","MAGQBTM",24,0)
 Q:'$P(RESULT(0),U,6)
"RTN","MAGQBTM",25,0)
 S VERS=$P(WSTAT,U,2)
"RTN","MAGQBTM",26,0)
 S WSTAT=$P(WSTAT,U)
"RTN","MAGQBTM",27,0)
 S SYSIEN=$O(^MAG(2006.8,"C",PLACE,WSTAT,""))
"RTN","MAGQBTM",28,0)
 I 'SYSIEN S SYSIEN=$O(^MAG(2006.8,"C",PLACE,$$UPPER^MAGQE4(WSTAT),""))
"RTN","MAGQBTM",29,0)
 I 'SYSIEN D
"RTN","MAGQBTM",30,0)
 . N TRY
"RTN","MAGQBTM",31,0)
 . F TRY=1:1:$L(WSTAT,".") D  Q:SYSIEN?1.N
"RTN","MAGQBTM",32,0)
 . . S SYSIEN=$O(^MAG(2006.8,"C",PLACE,$P(WSTAT,".",TRY),""))
"RTN","MAGQBTM",33,0)
 . . I 'SYSIEN S SYSIEN=$O(^MAG(2006.8,"C",PLACE,$$UPPER^MAGQE4($P(WSTAT,".",TRY)),""))
"RTN","MAGQBTM",34,0)
 Q:SYSIEN=""
"RTN","MAGQBTM",35,0)
 S VERS=$P(VERS,".",1,2)_"P"_$P(VERS,".",3)
"RTN","MAGQBTM",36,0)
 D VOKR^MAGQBUT4(.VOK,VERS)
"RTN","MAGQBTM",37,0)
 Q:'$P(VOK,U)
"RTN","MAGQBTM",38,0)
 S NODE=^MAG(2006.8,SYSIEN,0)
"RTN","MAGQBTM",39,0)
 S SYSNAME=$P(NODE,U)
"RTN","MAGQBTM",40,0)
 I SYSNAME="" D  Q
"RTN","MAGQBTM",41,0)
 . S $P(RESULT(0),U,1,2)="-1^No Background Processor parameters on system"
"RTN","MAGQBTM",42,0)
 I $P(NODE,U,12)'=1 D  Q
"RTN","MAGQBTM",43,0)
 . S $P(RESULT(0),U,1,2)="-1^Not assigned as a Background Processor"
"RTN","MAGQBTM",44,0)
 F PROC="ABSTRACT;13","JUKEBOX;14","JBTOHD;15","DELETE;23","PREFET;16","GCC;18","IMPORT;17" D  Q:$P(RESULT(0),U,1)="-1"
"RTN","MAGQBTM",45,0)
 . N PIECE,NAME
"RTN","MAGQBTM",46,0)
 . I $$UBPW^MAGQBUT1(SYSNAME,PROC) D  Q
"RTN","MAGQBTM",47,0)
 . . S $P(RESULT(0),U,1,2)="-1^This BP: "_SYSNAME_" has a co-assigned queue: "_$P(PROC,";")
"RTN","MAGQBTM",48,0)
 . S NAME=$P(PROC,";")
"RTN","MAGQBTM",49,0)
 . S PIECE=$P(PROC,";",2)
"RTN","MAGQBTM",50,0)
 . I $P(NODE,U,PIECE)="1" D
"RTN","MAGQBTM",51,0)
 . . N QCNT,QPTR
"RTN","MAGQBTM",52,0)
 . . D ADD^MAGBAPI(0,NAME,PLACE)
"RTN","MAGQBTM",53,0)
 . . S QPTR=$O(^MAGQUEUE(2006.031,"C",PLACE,NAME,""))
"RTN","MAGQBTM",54,0)
 . . S QCNT=$P($G(^MAGQUEUE(2006.031,+QPTR,0)),U,3)
"RTN","MAGQBTM",55,0)
 . . S CNT=CNT+1
"RTN","MAGQBTM",56,0)
 . . S RESULT(CNT)=NAME_U_QCNT_U_(+$P($G(^MAGQUEUE(2006.031,+QPTR,0)),U,5)-QCNT)
"RTN","MAGQBTM",57,0)
 . . I +$P(RESULT(CNT),U,3)<0 D  ; Refresh the queue count if negative
"RTN","MAGQBTM",58,0)
 . . . D QCNT^MAGQBUT4("",PLACE,NAME)
"RTN","MAGQBTM",59,0)
 . . . S RESULT(CNT)=NAME_U_QCNT_U_(+$P($G(^MAGQUEUE(2006.031,+QPTR,0)),U,5)-QCNT)
"RTN","MAGQBTM",60,0)
 . . . Q
"RTN","MAGQBTM",61,0)
 . . Q
"RTN","MAGQBTM",62,0)
 . Q
"RTN","MAGQBTM",63,0)
 Q:$P(RESULT(0),U,1)="-1"
"RTN","MAGQBTM",64,0)
 S $P(RESULT(0),U,1,5)="0^BP List^PID: "_$$BASE^XLFUTL($J,10,16)_"^"_SYSNAME_U_WSTAT
"RTN","MAGQBTM",65,0)
 Q
"RTN","MAGQBTM",66,0)
GETQUE(RESULT,ACTION) ; RPC[MAGQ GET]
"RTN","MAGQBTM",67,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBTM",68,0)
 N PLACE
"RTN","MAGQBTM",69,0)
 D @(ACTION_"(.RESULT)")
"RTN","MAGQBTM",70,0)
 I +RESULT<0 D  ; Update queue status and increment the Queue pointer if the queue cannot be processed
"RTN","MAGQBTM",71,0)
 . N PLACE S PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBTM",72,0)
 . D QSTAT($P(RESULT,U,2),$P(RESULT,U,3),ACTION,.PLACE)
"RTN","MAGQBTM",73,0)
 . D QPTER(ACTION,$P(RESULT,U,2),.PLACE)
"RTN","MAGQBTM",74,0)
 . Q
"RTN","MAGQBTM",75,0)
 Q
"RTN","MAGQBTM",76,0)
ABSTRACT(RESULT) ;
"RTN","MAGQBTM",77,0)
 D DEQUEUE("ABSTRACT",.RESULT) Q
"RTN","MAGQBTM",78,0)
JUKEBOX(RESULT) ;
"RTN","MAGQBTM",79,0)
 D DEQUEUE("JUKEBOX",.RESULT) Q
"RTN","MAGQBTM",80,0)
JBTOHD(RESULT) ;
"RTN","MAGQBTM",81,0)
 D DEQUEUE("JBTOHD",.RESULT) Q
"RTN","MAGQBTM",82,0)
GCC(RESULT) ;
"RTN","MAGQBTM",83,0)
 D DEQUEUE("GCC",.RESULT) Q
"RTN","MAGQBTM",84,0)
DELETE(RESULT) ;
"RTN","MAGQBTM",85,0)
 D DEQUEUE("DELETE",.RESULT) Q
"RTN","MAGQBTM",86,0)
PREFET(RESULT) ;
"RTN","MAGQBTM",87,0)
 D DEQUEUE("PREFET",.RESULT) Q
"RTN","MAGQBTM",88,0)
IMPORT(RESULT) ;
"RTN","MAGQBTM",89,0)
 D DEQUEUE("IMPORT",.RESULT) Q
"RTN","MAGQBTM",90,0)
DEQUEUE(QUE,RESULT) ;
"RTN","MAGQBTM",91,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBTM",92,0)
 N QPTR,QPTR2,ROU,MAGIEN,ZNODE,MSG,IMQUE,PLACE
"RTN","MAGQBTM",93,0)
 S PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBTM",94,0)
 S QPTR2=$O(^MAGQUEUE(2006.031,"C",PLACE,QUE,""))
"RTN","MAGQBTM",95,0)
 S QPTR=$S(QPTR2:$P(^MAGQUEUE(2006.031,QPTR2,0),U,2),1:"")
"RTN","MAGQBTM",96,0)
 S QPTR=$O(^MAGQUEUE(2006.03,"C",PLACE,QUE,QPTR))
"RTN","MAGQBTM",97,0)
 I QPTR="" D  Q
"RTN","MAGQBTM",98,0)
 . S RESULT="0"_U_QPTR2_U_"No "_QUE_" "_QPTR2_" to process."
"RTN","MAGQBTM",99,0)
 D QSTAT(QPTR,QUE_" in progress.",QUE,.PLACE)
"RTN","MAGQBTM",100,0)
 S ZNODE=$G(^MAGQUEUE(2006.03,QPTR,0))
"RTN","MAGQBTM",101,0)
 I ZNODE="" S RESULT=-101_U_QPTR_U_"Queue Record does not exist" Q
"RTN","MAGQBTM",102,0)
 I QUE="IMPORT" D ENTRY^MAGQBIM(QPTR,QUE,QPTR2,ZNODE,.RESULT) Q
"RTN","MAGQBTM",103,0)
 S MAGIEN=$P(ZNODE,"^",7)
"RTN","MAGQBTM",104,0)
 I ("^DELETE^JUKEBOX^")'[(U_QUE_U),(('(+MAGIEN))!('$D(^MAG(2005,+MAGIEN,0)))!($P(ZNODE,U)'=QUE)) D  Q
"RTN","MAGQBTM",105,0)
 . I $D(^MAG(2005.1,+MAGIEN,0)) D
"RTN","MAGQBTM",106,0)
 . . S MSG="Image Record Deleted and in archive file."
"RTN","MAGQBTM",107,0)
 . E  S MSG="No valid image file number to process."
"RTN","MAGQBTM",108,0)
 . S RESULT=-101_U_QPTR_U_MSG
"RTN","MAGQBTM",109,0)
 S ROU=$$RESET(QUE)
"RTN","MAGQBTM",110,0)
 I ROU="" S RESULT="-1"_U_QPTR_U_QUE_" Is an inactive process" Q
"RTN","MAGQBTM",111,0)
 D @("ENTRY^"_ROU_"(.RESULT,QPTR)")
"RTN","MAGQBTM",112,0)
 Q
"RTN","MAGQBTM",113,0)
QSTAT(QPTR,MESSAGE,ACTION,PLACE) ;Update the Queue status
"RTN","MAGQBTM",114,0)
 N ZNODE,MAGTIME
"RTN","MAGQBTM",115,0)
 Q:QPTR=""
"RTN","MAGQBTM",116,0)
 S MESSAGE=$TR(MESSAGE,":;<>.?/\'()*^%$#@!0123456789","")
"RTN","MAGQBTM",117,0)
 Q:'$D(^MAGQUEUE(2006.03,QPTR,0))
"RTN","MAGQBTM",118,0)
 S ZNODE=$G(^MAGQUEUE(2006.03,QPTR,0))
"RTN","MAGQBTM",119,0)
 S MAGTIME=$$NOW^XLFDT
"RTN","MAGQBTM",120,0)
 S:'$G(PLACE) PLACE=$$QPLACE(ZNODE,QPTR)
"RTN","MAGQBTM",121,0)
 Q:'PLACE
"RTN","MAGQBTM",122,0)
 I $P(ZNODE,U,5)]"" D
"RTN","MAGQBTM",123,0)
 . K ^MAGQUEUE(2006.03,"D",PLACE,$P(ZNODE,U),$E($P(ZNODE,U,5),1,30),QPTR) Q
"RTN","MAGQBTM",124,0)
 S ^MAGQUEUE(2006.03,"D",PLACE,$P(ZNODE,U),$E(MESSAGE,1,30),QPTR)=""
"RTN","MAGQBTM",125,0)
 S $P(^MAGQUEUE(2006.03,QPTR,0),U,5,6)=$P(MESSAGE,U)_U_MAGTIME
"RTN","MAGQBTM",126,0)
 I ACTION["IMPORT" D STAT^MAGQBIM($S($P(ZNODE,U,11)?1N.N:$P(ZNODE,U,11),1:QPTR),MAGTIME,MESSAGE)
"RTN","MAGQBTM",127,0)
 Q
"RTN","MAGQBTM",128,0)
QPLACE(QNODE,PTR) ; Seek alternate PLACE values and update the Queue
"RTN","MAGQBTM",129,0)
 N IEN,VALUE,ACQ
"RTN","MAGQBTM",130,0)
 S VALUE=""
"RTN","MAGQBTM",131,0)
 I +$P(QNODE,U,12) D  Q VALUE
"RTN","MAGQBTM",132,0)
 . S VALUE=+$P(QNODE,U,12) Q
"RTN","MAGQBTM",133,0)
 S IEN=$P(QNODE,U,7) ; try the Image acquisition site
"RTN","MAGQBTM",134,0)
 I IEN?1N.N D
"RTN","MAGQBTM",135,0)
 . S ACQ=+$P($G(^MAG(2005,IEN,100)),U,3)
"RTN","MAGQBTM",136,0)
 . S:'ACQ ACQ=+$P($G(^MAG(2005.1,IEN,100)),U,3)
"RTN","MAGQBTM",137,0)
 . S:ACQ VALUE=$$PLACE^MAGBAPI(ACQ) Q
"RTN","MAGQBTM",138,0)
 S:'VALUE VALUE=$$PLACE^MAGBAPI(+$G(DUZ(2))) ; else the BP User
"RTN","MAGQBTM",139,0)
 S:VALUE $P(^MAGQUEUE(2006.03,PTR,0),U,12)=VALUE
"RTN","MAGQBTM",140,0)
 Q VALUE
"RTN","MAGQBTM",141,0)
QPTER(QUEUE,QPTR,PLACE) ; Conditionally advance the queue pointer & decrement the active queue count
"RTN","MAGQBTM",142,0)
 N QREC,PREV,PNODE
"RTN","MAGQBTM",143,0)
 I 'PLACE D  Q:'PLACE
"RTN","MAGQBTM",144,0)
 . S PLACE=$P($G(^MAGQUEUE(2006.03,QPTR,0)),U,12)
"RTN","MAGQBTM",145,0)
 . S PLACE=$S(PLACE:PLACE,1:$$PLACE^MAGBAPI(+$G(DUZ(2))))
"RTN","MAGQBTM",146,0)
 . Q
"RTN","MAGQBTM",147,0)
 S QREC=$O(^MAGQUEUE(2006.031,"C",PLACE,QUEUE,""))
"RTN","MAGQBTM",148,0)
 S PREV=$S(QREC:$P(^MAGQUEUE(2006.031,QREC,0),U,2),1:"")
"RTN","MAGQBTM",149,0)
 I PREV'=QPTR D  Q
"RTN","MAGQBTM",150,0)
 . D ADD^MAGBAPI(-1,QUEUE,PLACE)
"RTN","MAGQBTM",151,0)
 . L +^MAGQUEUE(2006.031,QREC,0):1E9
"RTN","MAGQBTM",152,0)
 . S $P(^MAGQUEUE(2006.031,QREC,0),U,2)=QPTR,$P(^MAGQUEUE(2006.031,QREC,0),U,6)=$$NOW^XLFDT
"RTN","MAGQBTM",153,0)
 . L -^MAGQUEUE(2006.031,QREC,0)
"RTN","MAGQBTM",154,0)
 . Q
"RTN","MAGQBTM",155,0)
 D ADD^MAGBAPI(0,QUEUE,PLACE)  ; Else reset the active queue count
"RTN","MAGQBTM",156,0)
 Q
"RTN","MAGQBTM",157,0)
RESET(QUEUE) ; Set Routine parameter
"RTN","MAGQBTM",158,0)
 Q:QUEUE="ABSTRACT" "MAGQBAB"
"RTN","MAGQBTM",159,0)
 Q:QUEUE="JUKEBOX" "MAGQBJB"
"RTN","MAGQBTM",160,0)
 Q:QUEUE="JBTOHD" "MAGQBJH"
"RTN","MAGQBTM",161,0)
 Q:QUEUE="DELETE" "MAGQBD"
"RTN","MAGQBTM",162,0)
 Q:QUEUE="PREFET" "MAGQBJH"
"RTN","MAGQBTM",163,0)
 Q:QUEUE="IMPORT" "MAGQBIM"
"RTN","MAGQBTM",164,0)
 Q:QUEUE="GCC" "MAGQBGCC"
"RTN","MAGQBTM",165,0)
 Q ""
"RTN","MAGQBTM",166,0)
QUPDTE(RESULT,QPTR,UPDATE) ;RPC[MAGQ QUD]
"RTN","MAGQBTM",167,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBTM",168,0)
 N NODE,STAT,TYPE,VPTR,MPTR,IEN,IDFN,MSG,PLACE,DA
"RTN","MAGQBTM",169,0)
 S NODE=$G(^MAGQUEUE(2006.03,QPTR,0))
"RTN","MAGQBTM",170,0)
 S PLACE=$P(NODE,U,12)
"RTN","MAGQBTM",171,0)
 S RESULT="1^QUEUE UPDATE COMPLETE"
"RTN","MAGQBTM",172,0)
 S STAT=$P(UPDATE,U)
"RTN","MAGQBTM",173,0)
 S TYPE=$P(NODE,U)
"RTN","MAGQBTM",174,0)
 S MSG=$S($P(UPDATE,U,2)="":TYPE_" Process Error",1:$P(UPDATE,U,2))
"RTN","MAGQBTM",175,0)
 D QSTAT(QPTR,MSG,TYPE,.PLACE)
"RTN","MAGQBTM",176,0)
 D QPTER(TYPE,QPTR,PLACE)
"RTN","MAGQBTM",177,0)
 I STAT<0 Q
"RTN","MAGQBTM",178,0)
 I "^DELETE^"[("^"_TYPE_"^") D DQUE^MAGQBUT2(QPTR) Q
"RTN","MAGQBTM",179,0)
 I "^IMPORT^"[("^"_TYPE_"^") D DQUE^MAGQBUT2(QPTR) Q
"RTN","MAGQBTM",180,0)
 S VPTR=$P(UPDATE,U,3)
"RTN","MAGQBTM",181,0)
 I VPTR?1.N D
"RTN","MAGQBTM",182,0)
 . S MPTR=$P(NODE,U,7)
"RTN","MAGQBTM",183,0)
 . I "^ABSTRACT^"[("^"_TYPE_"^") D  Q
"RTN","MAGQBTM",184,0)
 . . S $P(^MAG(2005,MPTR,0),U,4)=VPTR
"RTN","MAGQBTM",185,0)
 . . S X=$$JUKEBOX^MAGBAPI(MPTR,PLACE)
"RTN","MAGQBTM",186,0)
 . . D DQUE^MAGQBUT2(QPTR) Q
"RTN","MAGQBTM",187,0)
 . I ("^JBTOHD^"[("^"_TYPE_"^"))!("^PREFET^"[("^"_TYPE_"^")) D  Q
"RTN","MAGQBTM",188,0)
 . . I "^FULL^"[$P(NODE,U,8) S $P(^MAG(2005,MPTR,0),U,3)=VPTR
"RTN","MAGQBTM",189,0)
 . . I "^ABSTRACT^"[$P(NODE,U,8) S $P(^MAG(2005,MPTR,0),U,4)=VPTR
"RTN","MAGQBTM",190,0)
 . . I "^BIG^"[$P(NODE,U,8) S $P(^MAG(2005,MPTR,"FBIG"),U)=VPTR
"RTN","MAGQBTM",191,0)
 . . D DQUE^MAGQBUT2(QPTR) Q
"RTN","MAGQBTM",192,0)
 . I "^JUKEBOX^"[("^"_TYPE_"^") D  Q 
"RTN","MAGQBTM",193,0)
 . . I $P(UPDATE,U,2)["BIG" D  Q
"RTN","MAGQBTM",194,0)
 . . . S:$D(^MAG(2005,MPTR)) $P(^MAG(2005,MPTR,"FBIG"),U,2)=VPTR
"RTN","MAGQBTM",195,0)
 . . . S:$D(^MAG(2005.1,MPTR)) $P(^MAG(2005.1,MPTR,"FBIG"),U,2)=VPTR
"RTN","MAGQBTM",196,0)
 . . . D DQUE^MAGQBUT2(QPTR) Q
"RTN","MAGQBTM",197,0)
 . . E  D
"RTN","MAGQBTM",198,0)
 . . . S:$D(^MAG(2005,MPTR)) $P(^MAG(2005,MPTR,0),U,5)=VPTR
"RTN","MAGQBTM",199,0)
 . . . S:$D(^MAG(2005.1,MPTR)) $P(^MAG(2005.1,MPTR,0),U,5)=VPTR
"RTN","MAGQBTM",200,0)
 . . . D DQUE^MAGQBUT2(QPTR) Q
"RTN","MAGQBTM",201,0)
 . . Q
"RTN","MAGQBTM",202,0)
 . I "^GCC^"[("^"_TYPE_"^") D  Q
"RTN","MAGQBTM",203,0)
 . . S FDA(2005.01,"+1,"_MPTR_",",.01)=VPTR
"RTN","MAGQBTM",204,0)
 . . S FDA(2005.01,"+1,"_MPTR_",",1)=$$NOW^XLFDT
"RTN","MAGQBTM",205,0)
 . . S FDA(2005.01,"+1,"_MPTR_",",2)=$P($$TRIM^MAGQBUT4($P(UPDATE,U,2))," ")
"RTN","MAGQBTM",206,0)
 . . D UPDATE^DIE("U","FDA","","MAGIMP")
"RTN","MAGQBTM",207,0)
 . . K FDA
"RTN","MAGQBTM",208,0)
 . . S IDFN=$P(^MAG(2005,MPTR,0),U,7)
"RTN","MAGQBTM",209,0)
 . . D ENTRY^MAGLOG("EXPORT->"_$P($G(^MAG(2005.2,VPTR,0)),U,2),$P(NODE,U,2),MPTR,"Document Imaging",IDFN,0)
"RTN","MAGQBTM",210,0)
 . . D DQUE^MAGQBUT2(QPTR) Q
"RTN","MAGQBTM",211,0)
 . Q
"RTN","MAGQBTM",212,0)
 Q
"RTN","MAGQBTM",213,0)
REQUE(RESULT,QPTR) ;
"RTN","MAGQBTM",214,0)
 ; RPC[MAGQ REQ]
"RTN","MAGQBTM",215,0)
 N PROC,NODE,INDX,PARAM,OPDUZ,STATUS,TRACKID,PLACE,X
"RTN","MAGQBTM",216,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBTM",217,0)
 S INDX=$$TRIM^MAGQBUT4(QPTR),TRACKID=0
"RTN","MAGQBTM",218,0)
 S NODE=$G(^MAGQUEUE(2006.03,INDX,0))
"RTN","MAGQBTM",219,0)
 Q:NODE']""
"RTN","MAGQBTM",220,0)
 S PLACE=$P(NODE,U,12)
"RTN","MAGQBTM",221,0)
 Q:'PLACE
"RTN","MAGQBTM",222,0)
 S PROC=$P(NODE,U),STATUS=$P(NODE,U,5)
"RTN","MAGQBTM",223,0)
 I PROC'="IMPORT" D
"RTN","MAGQBTM",224,0)
 . D RQP(PROC,NODE,.PARAM)
"RTN","MAGQBTM",225,0)
 . D DQUE^MAGQBUT2(INDX)
"RTN","MAGQBTM",226,0)
 . S @("RESULT=$$"_PROC_"^MAGBAPI(PARAM,PLACE)")
"RTN","MAGQBTM",227,0)
 . Q
"RTN","MAGQBTM",228,0)
 E  D  Q  ;IMPORT - Doesn't De-queue Import and Session file
"RTN","MAGQBTM",229,0)
 . S $P(PARAM,U,3)=+$P(NODE,U,9)+1
"RTN","MAGQBTM",230,0)
 . S $P(PARAM,U,4)=$S($P(NODE,U,11)?1N.N:$P(NODE,U,11),1:QPTR)
"RTN","MAGQBTM",231,0)
 . D TIDL^MAGQBIM($S($P(NODE,U,11)?1N.N:$P(NODE,U,11),1:QPTR),PROC,.TRACKID)
"RTN","MAGQBTM",232,0)
 . Q:TRACKID=0
"RTN","MAGQBTM",233,0)
 . S @("RESULT=$$"_PROC_"^MAGBAPI(PARAM,$P(NODE,U,10),TRACKID,PLACE)")
"RTN","MAGQBTM",234,0)
 . D DQUE^MAGQBUT2(INDX,"1")
"RTN","MAGQBTM",235,0)
 . Q
"RTN","MAGQBTM",236,0)
 Q
"RTN","MAGQBTM",237,0)
RQP(P,N,PAR) ;
"RTN","MAGQBTM",238,0)
 N P1,P2,P3,P4
"RTN","MAGQBTM",239,0)
 I ("^JBTOHD^PREFET^")[P S P1=$P(N,U,7),P2=$P(N,U,8),P3=+$P(N,U,9)+1,PAR=P1_U_P2_U_P3 Q
"RTN","MAGQBTM",240,0)
 I P["DELETE" S P1=$P(N,U,10),P2=+$P(N,U,9)+1,PAR=P2_U_P1 Q
"RTN","MAGQBTM",241,0)
 I P["GCC" D  Q
"RTN","MAGQBTM",242,0)
 . S P1=$P(N,U,7),P2=$P(N,U,10),P3=$P(N,U,11),P4=$P(N,U,9)+1,PAR=P1_U_P2_U_P3_U_P4 Q
"RTN","MAGQBTM",243,0)
 S P1=$P(N,U,7)_"^^",P2=+$P(N,U,9)+1,PAR=P1_P2 ;JUKEBOX + ABSTRACT
"RTN","MAGQBTM",244,0)
 Q
"RTN","MAGQBTM",245,0)
ERR ;
"RTN","MAGQBTM",246,0)
 N ERRXX
"RTN","MAGQBTM",247,0)
 S ERRXX=$$EC^%ZOSV
"RTN","MAGQBTM",248,0)
 D ^%ZTER
"RTN","MAGQBTM",249,0)
 D ^XUSCLEAN
"RTN","MAGQBTM",250,0)
 Q
"RTN","MAGQBUT1")
0^8^B117993666
"RTN","MAGQBUT1",1,0)
MAGQBUT1 ;WOIFO/RP/PTW - Utilities for Background ; 23 May 2013 10:50 AM
"RTN","MAGQBUT1",2,0)
 ;;3.0;IMAGING;**7,8,20,81,39,135**;Mar 19, 2002;Build 5238;Jul 17, 2013
"RTN","MAGQBUT1",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGQBUT1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBUT1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGQBUT1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGQBUT1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGQBUT1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGQBUT1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGQBUT1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGQBUT1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGQBUT1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGQBUT1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGQBUT1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGQBUT1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGQBUT1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBUT1",17,0)
 ;;
"RTN","MAGQBUT1",18,0)
 Q
"RTN","MAGQBUT1",19,0)
UBPW(WS,ASSIGN) ;  screen for duplicate assignments
"RTN","MAGQBUT1",20,0)
 N IEN,PLACE,PIECE,WSIEN,VALUE,DUP
"RTN","MAGQBUT1",21,0)
 S PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBUT1",22,0)
 S VALUE(1)=PLACE,VALUE(2)=WS
"RTN","MAGQBUT1",23,0)
 S WSIEN=$$FIND1^DIC(2006.8,"","QX",.VALUE,"D","","")
"RTN","MAGQBUT1",24,0)
 S PIECE=$P(ASSIGN,";",2)
"RTN","MAGQBUT1",25,0)
 S (DUP,IEN)=0
"RTN","MAGQBUT1",26,0)
 ;IF NOT ASSIGNED THEN QUIT
"RTN","MAGQBUT1",27,0)
 I '$P($G(^MAG(2006.8,WSIEN,0)),U,PIECE) K VALUE Q DUP
"RTN","MAGQBUT1",28,0)
 F  S IEN=$O(^MAG(2006.8,IEN)) Q:'IEN  D  Q:DUP
"RTN","MAGQBUT1",29,0)
 . S ZNODE=^MAG(2006.8,IEN,0)
"RTN","MAGQBUT1",30,0)
 . Q:'$P(ZNODE,U,12)  ; not a BP
"RTN","MAGQBUT1",31,0)
 . Q:$P(ZNODE,U,2)'=PLACE
"RTN","MAGQBUT1",32,0)
 . Q:$P(ZNODE,U)=WS
"RTN","MAGQBUT1",33,0)
 . S:+$P(ZNODE,U,PIECE) DUP=1
"RTN","MAGQBUT1",34,0)
 . Q
"RTN","MAGQBUT1",35,0)
 Q DUP
"RTN","MAGQBUT1",36,0)
BPPS(INPUT,WS,PROCESS) ;INPUT TRANSFORM FOR FILE 2006.8
"RTN","MAGQBUT1",37,0)
 N IEN,FND,WSNAME,WSNAME2,ZNODE,PIECE,MAGX,MAGY,PLACE
"RTN","MAGQBUT1",38,0)
 S U="^"
"RTN","MAGQBUT1",39,0)
 S PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBUT1",40,0)
 Q:'(+$P($G(^MAG(2006.8,WS,0)),U,12)) 0  ;NOT A BACKGROUND PROCESSOR
"RTN","MAGQBUT1",41,0)
 Q:'INPUT 1  ; Always allow unassigned
"RTN","MAGQBUT1",42,0)
 S WSNAME=$P($G(^MAG(2006.8,WS,0)),U) ;Workstation Name
"RTN","MAGQBUT1",43,0)
 Q:$L(WSNAME)<3 0 ;BP WS NOT PROPERLY INSTALLED
"RTN","MAGQBUT1",44,0)
 Q:$O(^MAG(2006.8,"C",PLACE,WSNAME,""))'?1N.N 1
"RTN","MAGQBUT1",45,0)
 S PIECE=$P($$GET1^DID(2006.8,PROCESS,"","GLOBAL SUBSCRIPT LOCATION"),";",2)
"RTN","MAGQBUT1",46,0)
 S IEN=0,WSNAME2="",FND=0
"RTN","MAGQBUT1",47,0)
 F  S WSNAME2=$O(^MAG(2006.8,"C",PLACE,WSNAME2)) Q:WSNAME2=""  D  Q:FND
"RTN","MAGQBUT1",48,0)
 . Q:WSNAME2=WSNAME
"RTN","MAGQBUT1",49,0)
 . S IEN=$O(^MAG(2006.8,"C",PLACE,WSNAME2,"")) Q:IEN'?1N.N
"RTN","MAGQBUT1",50,0)
 . S ZNODE=$G(^MAG(2006.8,IEN,0))
"RTN","MAGQBUT1",51,0)
 . Q:$P(ZNODE,"^",12)'="1"
"RTN","MAGQBUT1",52,0)
 . S FND=$P(ZNODE,"^",PIECE)="1"
"RTN","MAGQBUT1",53,0)
 . Q
"RTN","MAGQBUT1",54,0)
 Q $S(FND="1":0,1:1)
"RTN","MAGQBUT1",55,0)
RSQUE(RESULT,IEN,QUEUE) ;[MAGQB RSQUE]
"RTN","MAGQBUT1",56,0)
 N PTR,PLACE
"RTN","MAGQBUT1",57,0)
 S PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBUT1",58,0)
 S PTR=$O(^MAGQUEUE(2006.031,"C",PLACE,QUEUE,""))
"RTN","MAGQBUT1",59,0)
 I $P(^MAGQUEUE(2006.031,PTR,0),"^")=QUEUE D
"RTN","MAGQBUT1",60,0)
 . S $P(^MAGQUEUE(2006.031,PTR,0),"^",2)=IEN
"RTN","MAGQBUT1",61,0)
 . Q
"RTN","MAGQBUT1",62,0)
 Q
"RTN","MAGQBUT1",63,0)
ICCL(SRVRCNT,NMESS,PLACE) ;UPDATE IMAGING DISTRIBUTION
"RTN","MAGQBUT1",64,0)
 N Y,LOC,INDEX,CNT,IEN,ARRAY,SUB1,SUB2,NAME
"RTN","MAGQBUT1",65,0)
 S Y=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","MAGQBUT1",66,0)
 S LOC=$$KSP^XUPARAM("WHERE")
"RTN","MAGQBUT1",67,0)
 S CNT=1,^TMP($J,"MAGQ",PLACE,"BP",CNT)="SITE: "_LOC
"RTN","MAGQBUT1",68,0)
 S CNT=CNT+1,^TMP($J,"MAGQ",PLACE,"BP",CNT)="DATE: "_Y_" "_$G(^XMB("TIMEZONE"))
"RTN","MAGQBUT1",69,0)
 S CNT=CNT+1,^TMP($J,"MAGQ",PLACE,"BP",CNT)="SENDER: "_$$PLNM^MAGQBUT5(PLACE)_" Imaging Background Processor"
"RTN","MAGQBUT1",70,0)
 S CNT=CNT+1,^TMP($J,"MAGQ",PLACE,"BP",CNT)="Total Cache Free: "_$P(SRVRCNT,U,2)_" megabytes"
"RTN","MAGQBUT1",71,0)
 S CNT=CNT+1,^TMP($J,"MAGQ",PLACE,"BP",CNT)="Total Cache Available: "_$P(SRVRCNT,U,3)_" megabytes"
"RTN","MAGQBUT1",72,0)
 I $P(SRVRCNT,U,4) S CNT=CNT+1,^TMP($J,"MAGQ",PLACE,"BP",CNT)="An Automatic Purge process has been Activated. "
"RTN","MAGQBUT1",73,0)
 E  S CNT=CNT+1,^TMP($J,"MAGQ",PLACE,"BP",CNT)="The Automatic Purge process is NOT configured. "
"RTN","MAGQBUT1",74,0)
 I $P(SRVRCNT,U,5)]"" S CNT=CNT+1,^TMP($J,"MAGQ",PLACE,"BP",CNT)="The Automatic Purge process is assigned to: "_$P(SRVRCNT,U,5)
"RTN","MAGQBUT1",75,0)
 E  S CNT=CNT+1,^TMP($J,"MAGQ",PLACE,"BP",CNT)="The Automatic Purge process is NOT assigned to a BP server. "
"RTN","MAGQBUT1",76,0)
 S CNT=CNT+1,^TMP($J,"MAGQ",PLACE,"BP",CNT)="The "_$P(SRVRCNT,U)_" Imaging cache servers will"
"RTN","MAGQBUT1",77,0)
 S CNT=CNT+1,^TMP($J,"MAGQ",PLACE,"BP",CNT)="require operator intervention to ensure continued"
"RTN","MAGQBUT1",78,0)
 S CNT=CNT+1,^TMP($J,"MAGQ",PLACE,"BP",CNT)="availability.  The following MAG SERVER members"
"RTN","MAGQBUT1",79,0)
 S CNT=CNT+1,^TMP($J,"MAGQ",PLACE,"BP",CNT)="are being notified: "
"RTN","MAGQBUT1",80,0)
 S INDEX=0,IEN=$$FIND1^DIC(3.8,"","MX","MAG SERVER","","","ERR")
"RTN","MAGQBUT1",81,0)
 Q:IEN'?1N.N
"RTN","MAGQBUT1",82,0)
 D GETS^DIQ(3.8,IEN_",","2*;11*;12*","","ARRAY")
"RTN","MAGQBUT1",83,0)
 S (SUB1,SUB2)=""
"RTN","MAGQBUT1",84,0)
 F  S SUB1=$O(ARRAY(SUB1)) Q:SUB1=""  D
"RTN","MAGQBUT1",85,0)
 . F  S SUB2=$O(ARRAY(SUB1,SUB2)) Q:SUB2=""  D
"RTN","MAGQBUT1",86,0)
 . . S NAME=$G(ARRAY(SUB1,SUB2,".01")) D:NAME'=""
"RTN","MAGQBUT1",87,0)
 . . . S CNT=CNT+1,^TMP($J,"MAGQ",PLACE,"BP",8+CNT)=NAME
"RTN","MAGQBUT1",88,0)
 S CNT=CNT+1,^TMP($J,"MAGQ",PLACE,"BP",CNT)="The next notifications will occur in: "
"RTN","MAGQBUT1",89,0)
 S CNT=CNT+1,^TMP($J,"MAGQ",PLACE,"BP",CNT)=NMESS
"RTN","MAGQBUT1",90,0)
 D MAILSHR(PLACE,"BP","Image Cache Critically Low at "_LOC)
"RTN","MAGQBUT1",91,0)
 S $P(^MAG(2006.1,$$PLACE^MAGBAPI($G(DUZ(2))),3),"^",11)=$$NOW^XLFDT
"RTN","MAGQBUT1",92,0)
 D UDMI^MAGQBUT5("Image Cache Critically Low at ",PLACE)
"RTN","MAGQBUT1",93,0)
 K ARRAY
"RTN","MAGQBUT1",94,0)
 Q
"RTN","MAGQBUT1",95,0)
MAILSHR(PLACE,APP,XMSUB) ;Shared Mail server code
"RTN","MAGQBUT1",96,0)
 N XMY,XMTEXT,XMID,XMZ
"RTN","MAGQBUT1",97,0)
 S XMTEXT="^TMP($J,""MAGQ"",PLACE,APP)"
"RTN","MAGQBUT1",98,0)
 S:$G(DUZ) XMY(DUZ)=""
"RTN","MAGQBUT1",99,0)
 D:$$PROD^XUPROD("1") ADDMG^MAGQBUT5(XMSUB,.XMY,PLACE)
"RTN","MAGQBUT1",100,0)
 S:$G(MAGDUZ) XMY(MAGDUZ)=""
"RTN","MAGQBUT1",101,0)
 S XMID=$G(DUZ) S:'XMID XMID=.5
"RTN","MAGQBUT1",102,0)
 S XMY(XMID)=""
"RTN","MAGQBUT1",103,0)
 N L1,L2,L3
"RTN","MAGQBUT1",104,0)
 S L2=$L($P(XMSUB,"^",2))
"RTN","MAGQBUT1",105,0)
 S L3=60-L2
"RTN","MAGQBUT1",106,0)
 S L1=$L($P(XMSUB,"^"))
"RTN","MAGQBUT1",107,0)
 I L2=0 S XMSUB=$E(XMSUB,1,60)
"RTN","MAGQBUT1",108,0)
 E  S XMSUB=$E($P(XMSUB,"^"),1,L3-1)_"^"_$P(XMSUB,"^",2)
"RTN","MAGQBUT1",109,0)
 D SENDMSG^XMXAPI(XMID,XMSUB,XMTEXT,.XMY,,.XMZ,)
"RTN","MAGQBUT1",110,0)
 K ^TMP($J,"MAGQ",PLACE,APP)
"RTN","MAGQBUT1",111,0)
 I $G(XMERR) M XMERR=^TMP("XMERR",$J) K XMERR
"RTN","MAGQBUT1",112,0)
 Q
"RTN","MAGQBUT1",113,0)
ALLSERV(RESULT,GRP) ; BP Queue Processor
"RTN","MAGQBUT1",114,0)
 ; RPC[MAGQ ALL SERVER] used for ServerSize update/display function - reports network resources
"RTN","MAGQBUT1",115,0)
 ; Returns OnLine, network addressed, non-router, place related Magnetic shares
"RTN","MAGQBUT1",116,0)
 ; it returns the share designated as the current Write location in the (0) indice
"RTN","MAGQBUT1",117,0)
 ; it does not screen on READ-ONLY, and the list is group specific
"RTN","MAGQBUT1",118,0)
 ; the function could be replaced by a fileman call from the GUI 
"RTN","MAGQBUT1",119,0)
 ; PHYSICAL REFERENCE^CWL or ien^FREE SPACE^TOTAL SPACE^NAME^GROUP^TYPE
"RTN","MAGQBUT1",120,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT1",121,0)
 N INDX,DATA,CNT,SHARE,CWL,VALUE,TMP,PLACE,CWG ;CWL=CURRENT WRITE LOCATION CWG=CURRENT WRITE GROUP
"RTN","MAGQBUT1",122,0)
 S PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBUT1",123,0)
 S CWG=$S($G(GRP)["ALL":"",1:$$CWG^MAGBAPI(PLACE))
"RTN","MAGQBUT1",124,0)
 D:CWG CWGIC(CWG)  ;Remove all members that do not reference this group
"RTN","MAGQBUT1",125,0)
 S CWL=$$CWL^MAGBAPI(PLACE)
"RTN","MAGQBUT1",126,0)
 ; I CWL D  ;First report Current Write Location data 
"RTN","MAGQBUT1",127,0)
 ; . S DATA=$G(^MAG(2005.2,CWL,0))
"RTN","MAGQBUT1",128,0)
 ; . S SHARE=$P(DATA,U,2)
"RTN","MAGQBUT1",129,0)
 ; . S RESULT(0)=SHARE_U_CWL_U_+$P(DATA,U,5)_U_+$P(DATA,U,3)_U_$P(DATA,U)
"RTN","MAGQBUT1",130,0)
 ; . S RESULT(0)=RESULT(0)_U_$S($L($$GET1^DIQ(2005.2,CWL,31,"E","","")):$$GET1^DIQ(2005.2,CWL,31,"E","",""),1:"")
"RTN","MAGQBUT1",131,0)
 ; . S RESULT(0)=RESULT(0)_U_$$GET1^DIQ(2005.2,CWL,6,"I","","")
"RTN","MAGQBUT1",132,0)
 ; . Q
"RTN","MAGQBUT1",133,0)
 ; E  S RESULT(0)="-1^The Current Write Location (CWL) is not currently set."
"RTN","MAGQBUT1",134,0)
 S INDX=0,U="^",CNT=1
"RTN","MAGQBUT1",135,0)
 K ^TMP("MAGQAS")
"RTN","MAGQBUT1",136,0)
 F  S INDX=$O(^MAG(2005.2,INDX)) Q:INDX'?1N.N  D
"RTN","MAGQBUT1",137,0)
 . S DATA=$G(^MAG(2005.2,INDX,0))
"RTN","MAGQBUT1",138,0)
 . Q:$P(DATA,U,6,7)'["1^MAG"
"RTN","MAGQBUT1",139,0)
 . Q:$P(DATA,U,2)[":"
"RTN","MAGQBUT1",140,0)
 . Q:($P(DATA,U,10)'=PLACE)
"RTN","MAGQBUT1",141,0)
 . Q:$P(DATA,U,9)="1"  ;ROUTING SHARE
"RTN","MAGQBUT1",142,0)
 . S SHARE=$P(DATA,U,2)
"RTN","MAGQBUT1",143,0)
 . Q:$E(SHARE,1,2)'="\\"
"RTN","MAGQBUT1",144,0)
 . I $E(SHARE,$L(SHARE))="\" S SHARE=$E(SHARE,1,$L(SHARE)-1)
"RTN","MAGQBUT1",145,0)
 . S TMP(SHARE)=""
"RTN","MAGQBUT1",146,0)
 . I CWG,'$$GMEM(CWG,INDX) Q  ;screen on Current Write Group also validate group member reference
"RTN","MAGQBUT1",147,0)
 . S VALUE=SHARE_U_INDX_U_+$P(DATA,U,5)_U_+$P(DATA,U,3)_U_$P(DATA,U)
"RTN","MAGQBUT1",148,0)
 . S VALUE=VALUE_U_$S($L($$GET1^DIQ(2005.2,INDX,31,"E","","")):$$GET1^DIQ(2005.2,INDX,31,"E","",""),1:"")
"RTN","MAGQBUT1",149,0)
 . S VALUE=VALUE_U_$$GET1^DIQ(2005.2,INDX,6,"E","","")
"RTN","MAGQBUT1",150,0)
 . I INDX=CWL D  Q  ;ELSE CONTINUE 
"RTN","MAGQBUT1",151,0)
 . . S RESULT(0)=VALUE_U_$G(^TMP("MAGQ","WSUD"))
"RTN","MAGQBUT1",152,0)
 . . S ^TMP("MAGQAS",0)=VALUE ;1ST SHARE=CWL
"RTN","MAGQBUT1",153,0)
 . . Q
"RTN","MAGQBUT1",154,0)
 . S RESULT(CNT)=VALUE,CNT=CNT+1
"RTN","MAGQBUT1",155,0)
 . S ^TMP("MAGQAS",CNT-1)=VALUE
"RTN","MAGQBUT1",156,0)
 . Q
"RTN","MAGQBUT1",157,0)
 Q
"RTN","MAGQBUT1",158,0)
ALLSHR(RESULT,TYPE) ; RPC[MAGQBP ALL SHARES] - Used by BP Purge
"RTN","MAGQBUT1",159,0)
 ; screens off-line,read-only,routing share,non-mag,non-place,next group,current group,specific group(s)
"RTN","MAGQBUT1",160,0)
 N TMP,INDX,DATA,CNT,SHARE,CWL,VALUE,PLACE,NG,GRP ;CWL=CURRENT WRITE LOCATION
"RTN","MAGQBUT1",161,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT1",162,0)
 S (CNT,INDX)=0,U="^" S:'$D(TYPE) TYPE="ALL" ;calling routine will define TYPE, or set as ALL by default (no screen).
"RTN","MAGQBUT1",163,0)
 S PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBUT1",164,0)
 S CWL=$$CWL^MAGBAPI(PLACE)
"RTN","MAGQBUT1",165,0)
 S GRP=$$GRP^MAGQBUT(PLACE)
"RTN","MAGQBUT1",166,0)
 S NG=$$NXTGP^MAGQBUT(PLACE,GRP,"1") ; Next Purge capable group
"RTN","MAGQBUT1",167,0)
 F  S INDX=$O(^MAG(2005.2,INDX)) Q:INDX'?1N.N  D
"RTN","MAGQBUT1",168,0)
 . S DATA=$G(^MAG(2005.2,INDX,0))
"RTN","MAGQBUT1",169,0)
 . Q:$P(DATA,U,6,7)'["1^MAG"
"RTN","MAGQBUT1",170,0)
 . Q:$P(DATA,U,9)="1"  ;ROUTING SHARE
"RTN","MAGQBUT1",171,0)
 . Q:$P(DATA,U,2)[":"
"RTN","MAGQBUT1",172,0)
 . Q:($P(DATA,U,10)'=PLACE)
"RTN","MAGQBUT1",173,0)
 . Q:($P($G(^MAG(2005.2,INDX,1)),U,6)="1")  ;Read Only
"RTN","MAGQBUT1",174,0)
 . Q:(("^AUTO^NRG^"[("^"_TYPE_"^"))&($P($G(^MAG(2005.2,INDX,1)),U,8)'=NG))  ;NOT a member of the Next RAID Group
"RTN","MAGQBUT1",175,0)
 . Q:(("^CRG^"[("^"_TYPE_"^"))&($P($G(^MAG(2005.2,INDX,1)),U,8)'=GRP))  ;NOT a member of the Current RAID Group
"RTN","MAGQBUT1",176,0)
 . Q:((TYPE?1N.N)&($P($G(^MAG(2005.2,INDX,1)),U,8)'=TYPE))  ;NOT a member of the Specified RAID Group
"RTN","MAGQBUT1",177,0)
 . S SHARE=$$UPPER^MAGQE4($P(DATA,U,2))
"RTN","MAGQBUT1",178,0)
 . Q:$E(SHARE,1,2)'="\\"
"RTN","MAGQBUT1",179,0)
 . I $E(SHARE,$L(SHARE))="\" S SHARE=$E(SHARE,1,$L(SHARE)-1)
"RTN","MAGQBUT1",180,0)
 . Q:$D(TMP(SHARE))
"RTN","MAGQBUT1",181,0)
 . S TMP(SHARE)=""
"RTN","MAGQBUT1",182,0)
 . Q
"RTN","MAGQBUT1",183,0)
 S INDX=""
"RTN","MAGQBUT1",184,0)
 F  S INDX=$O(TMP(INDX)) Q:INDX=""  D
"RTN","MAGQBUT1",185,0)
 . S RESULT(CNT)=INDX,CNT=CNT+1
"RTN","MAGQBUT1",186,0)
 . Q
"RTN","MAGQBUT1",187,0)
 K TMP
"RTN","MAGQBUT1",188,0)
 Q
"RTN","MAGQBUT1",189,0)
FSUPDT(RESULT,IEN,SPACE,SIZE) ; File Server Update
"RTN","MAGQBUT1",190,0)
 ; RPC[MAGQ FS UPDATE]
"RTN","MAGQBUT1",191,0)
 ; Space is field #2 (Total Space)and is actually share size
"RTN","MAGQBUT1",192,0)
 ; Size is field #4 (Free Space)
"RTN","MAGQBUT1",193,0)
 N NODE,X,Y,INDEX,SHNAME,PLACE
"RTN","MAGQBUT1",194,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT1",195,0)
 S PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBUT1",196,0)
 K ^TMP("MAGQ","WSUD")
"RTN","MAGQBUT1",197,0)
 S ^TMP("MAGQ","WSUD",IEN)=$$FMTE^XLFDT($$NOW^XLFDT)_U_IEN_U_SPACE_U_SIZE
"RTN","MAGQBUT1",198,0)
 I $G(^MAG(2005.2,IEN,0))="" S RESULT="-1^No Network Location Entry" Q
"RTN","MAGQBUT1",199,0)
 S SHNAME=$P($G(^MAG(2005.2,IEN,0)),U,2)
"RTN","MAGQBUT1",200,0)
 D FSW(IEN,SPACE,SIZE) ;The next is to update redundant shares and should not be necessary
"RTN","MAGQBUT1",201,0)
 S INDEX=0 F  S INDEX=$O(^MAG(2005.2,"AC",SHNAME,INDEX)) Q:'INDEX  D
"RTN","MAGQBUT1",202,0)
 . Q:INDEX=IEN
"RTN","MAGQBUT1",203,0)
 . D FSW(INDEX,SPACE,SIZE)
"RTN","MAGQBUT1",204,0)
 . Q
"RTN","MAGQBUT1",205,0)
 S RESULT="1^Update Complete"
"RTN","MAGQBUT1",206,0)
 Q
"RTN","MAGQBUT1",207,0)
FSW(IX,SP,SZ) ;
"RTN","MAGQBUT1",208,0)
 S $P(^MAG(2005.2,IX,0),U,3)=+SP,$P(^MAG(2005.2,IX,0),U,5)=+SZ
"RTN","MAGQBUT1",209,0)
 Q
"RTN","MAGQBUT1",210,0)
QUEUER(QUE,FROM,TO) ;
"RTN","MAGQBUT1",211,0)
 N TYPE,INC,CNT,AR,TMP,PLACE,INST,MAGFILE
"RTN","MAGQBUT1",212,0)
 I $$GET1^DIQ(200,+$G(DUZ),.01)="" D  Q
"RTN","MAGQBUT1",213,0)
 . W !,"You must have a valid User ID (DUZ) to use this function!"
"RTN","MAGQBUT1",214,0)
 . Q
"RTN","MAGQBUT1",215,0)
 I "^JBTOHD^PREFET^ABSTRACT^JUKEBOX^GCC^DELETE^EVAL^"'[QUE D  Q
"RTN","MAGQBUT1",216,0)
 . W !,"Only JBTOHD, PREFET, ABSTRACT, JUKEBOX, DELETE, EVAL & GCC queues are valid!"
"RTN","MAGQBUT1",217,0)
 . W !,"Input values: ""Queue type"",""From Image IEN"",""To Image IEN"""
"RTN","MAGQBUT1",218,0)
 S CNT=0,PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2))),INST=$$GET1^DIQ(2006.1,PLACE,.01,"I")
"RTN","MAGQBUT1",219,0)
 F INC=FROM:1:TO D
"RTN","MAGQBUT1",220,0)
 . I ('$D(^MAG(2005,INC,0))&('$D(^MAG(2005.1,INC,0)))) Q
"RTN","MAGQBUT1",221,0)
 . I $D(^MAG(2005,INC,0)),$$PLACE^MAGBAPI(+$P($G(^MAG(2005,INC,100)),U,3))'=PLACE Q
"RTN","MAGQBUT1",222,0)
 . I $D(^MAG(2005.1,INC,0)),$$PLACE^MAGBAPI(+$P($G(^MAG(2005.1,INC,100)),U,3))'=PLACE Q
"RTN","MAGQBUT1",223,0)
 . I ($P($G(^MAG(2005,INC,0)),"^",2)="")&($P($G(^MAG(2005.1,INC,0)),"^",2)="") Q  ;No full filename attribute
"RTN","MAGQBUT1",224,0)
 . I (+$P($G(^MAG(2005,INC,1,0)),"^",4)>0)!(+$P($G(^MAG(2005.1,INC,1,0)),"^",4)>0) Q  ;GROUP PARENT
"RTN","MAGQBUT1",225,0)
 . I "^DELETE^"[QUE D  Q
"RTN","MAGQBUT1",226,0)
 . . N MAGXX S MAGXX=INC D VSTNOCP^MAGFILEB I $E(MAGFILE,1,2)="-1" W !,"Image # "_INC Q 
"RTN","MAGQBUT1",227,0)
 . . S MAGXX=INC D ABSNOCP^MAGFILEB I $E(MAGFILE,1,2)="-1" W !,"Image # "_INC Q
"RTN","MAGQBUT1",228,0)
 . . D IMAGEDEL^MAGGTID(.MAGFILE,INC,"","TESTING")
"RTN","MAGQBUT1",229,0)
 . . Q
"RTN","MAGQBUT1",230,0)
 . I "^ABSTRACT^"[QUE D  Q
"RTN","MAGQBUT1",231,0)
 . . I $$ABSOK^MAGQBUT1(INC) D MAPI(QUE,INC,.CNT)
"RTN","MAGQBUT1",232,0)
 . . Q
"RTN","MAGQBUT1",233,0)
 . I "^JBTOHD^PREFET^"[QUE F TYPE="ABSTRACT","FULL","BIG" D
"RTN","MAGQBUT1",234,0)
 . . Q:(TYPE="BIG")&('$D(^MAG(2005,INC,"FBIG"))&'$D(^MAG(2005.1,INC,"FBIG")))
"RTN","MAGQBUT1",235,0)
 . . D MAPI(QUE,INC_"^"_TYPE,.CNT)
"RTN","MAGQBUT1",236,0)
 . . Q
"RTN","MAGQBUT1",237,0)
 . E  D MAPI(QUE,INC,.CNT) ; JUKEBOX,EVAL,GCC
"RTN","MAGQBUT1",238,0)
 . Q
"RTN","MAGQBUT1",239,0)
 Q
"RTN","MAGQBUT1",240,0)
MAPI(TYP,PARAM,CNT) ;
"RTN","MAGQBUT1",241,0)
 N PLACE
"RTN","MAGQBUT1",242,0)
 S CNT=CNT+1,PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBUT1",243,0)
 W !,CNT," TYPE: ",TYP,": ",PARAM_" QUEUE #: ",@("$$"_TYP_"^MAGBAPI(PARAM,PLACE)")
"RTN","MAGQBUT1",244,0)
 Q
"RTN","MAGQBUT1",245,0)
ABSOK(IEN) ; Verify that the Full Image Type is a supported by our ABSTRACT method
"RTN","MAGQBUT1",246,0)
 N TYPE,FILE,IFT ; Image file type
"RTN","MAGQBUT1",247,0)
 S FILE=$S($D(^MAG(2005,IEN)):$P($G(^MAG(2005,IEN,0)),U,2),$D(^MAG(2005.1,IEN)):$P($G(^MAG(2005.1,IEN,0)),U,2),1:"")
"RTN","MAGQBUT1",248,0)
 S TYPE=$P(FILE,".",2)
"RTN","MAGQBUT1",249,0)
 S IFT=$S($D(^MAG(2005.021,"B",TYPE)):$O(^MAG(2005.021,"B",TYPE,"")),1:"")
"RTN","MAGQBUT1",250,0)
 I (IFT']"")!($P($G(^MAG(2005.021,IFT,0)),U,5)'="1") D  Q 0
"RTN","MAGQBUT1",251,0)
 . W !,"Abstract not supported IEN/TYPE: "_IEN_"/"_TYPE
"RTN","MAGQBUT1",252,0)
 Q $P($G(^MAG(2005.021,IFT,0)),U,5)
"RTN","MAGQBUT1",253,0)
BPQSL(RESULT,TYPE) ; Called from MAGQUEMAN.PAS and MagSiteParameters.PAS
"RTN","MAGQBUT1",254,0)
 ; RPC[MAGQB QSL]
"RTN","MAGQBUT1",255,0)
 N STATUS,CNT,IEN,CP,PLACE
"RTN","MAGQBUT1",256,0)
 S PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBUT1",257,0)
 S STATUS="",CNT=0
"RTN","MAGQBUT1",258,0)
 F  S STATUS=$O(^MAGQUEUE(2006.03,"D",PLACE,TYPE,STATUS)) Q:STATUS=""  D
"RTN","MAGQBUT1",259,0)
 . Q:+STATUS>0
"RTN","MAGQBUT1",260,0)
 . S IEN=$O(^MAGQUEUE(2006.03,"D",PLACE,TYPE,STATUS,""))
"RTN","MAGQBUT1",261,0)
 . S CP=$P(^MAGQUEUE(2006.031,$O(^MAGQUEUE(2006.031,"C",PLACE,TYPE,"")),0),"^",2)
"RTN","MAGQBUT1",262,0)
 . Q:IEN>(CP)
"RTN","MAGQBUT1",263,0)
 . S CNT=CNT+1,RESULT(CNT)=STATUS
"RTN","MAGQBUT1",264,0)
 . Q
"RTN","MAGQBUT1",265,0)
 Q
"RTN","MAGQBUT1",266,0)
CWGIC(CWG) ;  Current RAID Group integrity check
"RTN","MAGQBUT1",267,0)
 N VALUE,IEN,MAGFDA,MSG
"RTN","MAGQBUT1",268,0)
 S VALUE=""
"RTN","MAGQBUT1",269,0)
 F  S VALUE=$O(^MAG(2005.2,CWG,7,"B",VALUE)) Q:'VALUE  D:($P($G(^MAG(2005.2,VALUE,1)),U,8)'=CWG)
"RTN","MAGQBUT1",270,0)
 . S IEN=$O(^MAG(2005.2,CWG,7,"B",VALUE,""))
"RTN","MAGQBUT1",271,0)
 . S MAGFDA(2005.22,IEN_","_CWG_",",.01)="@"
"RTN","MAGQBUT1",272,0)
 . D FILE^DIE("","MAGFDA","")
"RTN","MAGQBUT1",273,0)
 . K MAGFDA
"RTN","MAGQBUT1",274,0)
 . Q
"RTN","MAGQBUT1",275,0)
 Q
"RTN","MAGQBUT1",276,0)
GMEM(CWG,IEN) ; Update Current RAID Group
"RTN","MAGQBUT1",277,0)
 N GVAL
"RTN","MAGQBUT1",278,0)
 S GVAL=$P($G(^MAG(2005.2,IEN,1)),U,8)
"RTN","MAGQBUT1",279,0)
 I GVAL,'$D(^MAG(2005.2,GVAL,7,"B",IEN)) D
"RTN","MAGQBUT1",280,0)
 . N MAGFDA
"RTN","MAGQBUT1",281,0)
 . S MAGFDA(2005.22,"+1,"_GVAL_",",.01)=IEN
"RTN","MAGQBUT1",282,0)
 . D UPDATE^DIE("","MAGFDA","","")
"RTN","MAGQBUT1",283,0)
 . K MAGFDA
"RTN","MAGQBUT1",284,0)
 . Q
"RTN","MAGQBUT1",285,0)
 Q $S(GVAL'=CWG:0,1:1)
"RTN","MAGQBUT4")
0^9^B92803022
"RTN","MAGQBUT4",1,0)
MAGQBUT4 ;WOIFO/RMP - BP Utilities ; 27 Jun 2012 5:45 PM
"RTN","MAGQBUT4",2,0)
 ;;3.0;IMAGING;**7,8,48,20,81,39,121,135**;Mar 19, 2002;Build 5238;Jul 17, 2013
"RTN","MAGQBUT4",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGQBUT4",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBUT4",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGQBUT4",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGQBUT4",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGQBUT4",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGQBUT4",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGQBUT4",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGQBUT4",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGQBUT4",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGQBUT4",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGQBUT4",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGQBUT4",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGQBUT4",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBUT4",17,0)
 ;;
"RTN","MAGQBUT4",18,0)
 ;
"RTN","MAGQBUT4",19,0)
 Q
"RTN","MAGQBUT4",20,0)
CONV(ARR,ICT) ;Convert any single node array to FM Style multiple
"RTN","MAGQBUT4",21,0)
 ;  The node subscripts of ARR are ignored, and not retained
"RTN","MAGQBUT4",22,0)
 ; i.e.  ARR(34)=8
"RTN","MAGQBUT4",23,0)
 ;       ARR("BLUE")=9
"RTN","MAGQBUT4",24,0)
 ;       ARR("D")=10
"RTN","MAGQBUT4",25,0)
 ; converts to
"RTN","MAGQBUT4",26,0)
 ;      ARR(1,0)=8
"RTN","MAGQBUT4",27,0)
 ;      ARR(2,0)=9
"RTN","MAGQBUT4",28,0)
 ;      ARR(3,0)=10
"RTN","MAGQBUT4",29,0)
 N I,ARO
"RTN","MAGQBUT4",30,0)
 S ICT=0,I=""
"RTN","MAGQBUT4",31,0)
 F  S I=$O(ARR(I)) Q:(I="")  D
"RTN","MAGQBUT4",32,0)
 . S ICT=ICT+1
"RTN","MAGQBUT4",33,0)
 . S ARO(ICT,0)=ARR(I)
"RTN","MAGQBUT4",34,0)
 K ARR
"RTN","MAGQBUT4",35,0)
 M ARR=ARO
"RTN","MAGQBUT4",36,0)
 Q
"RTN","MAGQBUT4",37,0)
MRGMULT(ARR,RT,RTDSC,CT) ;Merge the FM formatted array into a FM File
"RTN","MAGQBUT4",38,0)
 ;   multiple field.
"RTN","MAGQBUT4",39,0)
 ;   This isn't for general consumption.
"RTN","MAGQBUT4",40,0)
 ; RT = FILE ROOT, RECORD NUMBER, NODE
"RTN","MAGQBUT4",41,0)
 ; i.e.  "^MAG(2006.034,44,1,"   -> 44 is the IEN of MAG(2006.34
"RTN","MAGQBUT4",42,0)
 ; RTDSC is the 2nd piece of the 0 node of the multiple field.
"RTN","MAGQBUT4",43,0)
 S RT=$E(RT,1,$L(RT)-1)_")"
"RTN","MAGQBUT4",44,0)
 S @RT@(0)=U_RTDSC_U_CT_U_CT ;  i.e.    ^2006.341A^13^13
"RTN","MAGQBUT4",45,0)
 M @RT=ARR
"RTN","MAGQBUT4",46,0)
 Q
"RTN","MAGQBUT4",47,0)
DDLF(RESULTS,FILE,FIELD,FLAGS,ATTR) ;[MAG FLD ATT]
"RTN","MAGQBUT4",48,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",49,0)
 K X
"RTN","MAGQBUT4",50,0)
 N I
"RTN","MAGQBUT4",51,0)
 D FIELD^DID(FILE,FIELD,FLAGS,ATTR,"RESULTS","RESULTS")
"RTN","MAGQBUT4",52,0)
 S I=0 F  S I=I+1 Q:'$D(RESULTS(ATTR,I))  M RESULTS(I)=RESULTS(ATTR,I)
"RTN","MAGQBUT4",53,0)
 Q
"RTN","MAGQBUT4",54,0)
DDFA(RESULTS) ;[MAG ATT LST]
"RTN","MAGQBUT4",55,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",56,0)
 K X
"RTN","MAGQBUT4",57,0)
 D FIELDLST^DID(RESULTS)
"RTN","MAGQBUT4",58,0)
 Q
"RTN","MAGQBUT4",59,0)
DVAL(RESULTS,FILE,IENS,FIELD,FLAGS,VALUE) ;[MAG FIELD VALIDATE]
"RTN","MAGQBUT4",60,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",61,0)
 K X
"RTN","MAGQBUT4",62,0)
 I FLAGS']"" S FLAGS="EHU"
"RTN","MAGQBUT4",63,0)
 D VAL^DIE(FILE,IENS,FIELD,FLAGS,VALUE,.RESULT,"","MSG")
"RTN","MAGQBUT4",64,0)
 I RESULT=U S RESULTS="-1^"_$G(MSG("DIERR","1","TEXT","1"))
"RTN","MAGQBUT4",65,0)
 E  S RESULTS=1_U_RESULT_U_$G(RESULT(0))
"RTN","MAGQBUT4",66,0)
 Q
"RTN","MAGQBUT4",67,0)
KVAL(RESULTS,FLAGS,FDA) ;[MAG KEY VALIDATE]
"RTN","MAGQBUT4",68,0)
 N TMP,DDRFDA
"RTN","MAGQBUT4",69,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",70,0)
 K X
"RTN","MAGQBUT4",71,0)
 D FDASET(.FDA,.DDRFDA)
"RTN","MAGQBUT4",72,0)
 S TMP=$$KEYVAL^DIE(FLAGS,"DDRFDA","MSG")
"RTN","MAGQBUT4",73,0)
 S RESULTS=$S(TMP=1:1,1:"-1^"_$G(MSG("DIERR","1","TEXT","1")))
"RTN","MAGQBUT4",74,0)
 K DDRFDA,MSG
"RTN","MAGQBUT4",75,0)
 Q
"RTN","MAGQBUT4",76,0)
FDASET(DDRROOT,DDRFDA) ;
"RTN","MAGQBUT4",77,0)
 N DDRFILE,DDRIEN,DDRFIELD,DDRVAL,DDRERR,I
"RTN","MAGQBUT4",78,0)
 S I=0
"RTN","MAGQBUT4",79,0)
 F  S I=$O(DDRROOT(I)) Q:'I  S X=DDRROOT(I) D
"RTN","MAGQBUT4",80,0)
 . S DDRFILE=$P(X,U)
"RTN","MAGQBUT4",81,0)
 . S DDRFIELD=$P(X,U,2)
"RTN","MAGQBUT4",82,0)
 . S DDRIEN=$P(X,U,3)
"RTN","MAGQBUT4",83,0)
 . S DDRVAL=$P(X,U,4,99)
"RTN","MAGQBUT4",84,0)
 . D FDA^DILF(DDRFILE,DDRIEN_$S($E(DDRIEN,$L(DDRIEN))'=",":",",1:""),DDRFIELD,"",DDRVAL,"DDRFDA","DDRERR")
"RTN","MAGQBUT4",85,0)
 Q
"RTN","MAGQBUT4",86,0)
DHRPC(RESULTS,FNAME,FLOC) ;[MAG DIRHASH]
"RTN","MAGQBUT4",87,0)
 N TMP
"RTN","MAGQBUT4",88,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",89,0)
 K X
"RTN","MAGQBUT4",90,0)
 S TMP=$$DIRHASH^MAGFILEB(FNAME,FLOC)
"RTN","MAGQBUT4",91,0)
 S RESULTS=$S(TMP="":U,1:TMP)
"RTN","MAGQBUT4",92,0)
 Q
"RTN","MAGQBUT4",93,0)
GPACHX(PV) ; Get Package File Install History of Imaging
"RTN","MAGQBUT4",94,0)
 N I,LCNT,MSG,PKG
"RTN","MAGQBUT4",95,0)
 S LCNT=0
"RTN","MAGQBUT4",96,0)
 S PV(0)="Version^Install Date"
"RTN","MAGQBUT4",97,0)
 F PKG="IMAGING" D
"RTN","MAGQBUT4",98,0)
 . N J,K,L,VERS,DATE,X,Y
"RTN","MAGQBUT4",99,0)
 . S J=$O(^DIC(9.4,"B",PKG,"")) Q:'J
"RTN","MAGQBUT4",100,0)
 . S VERS="" F  S VERS=$O(^DIC(9.4,J,22,"B",VERS)) Q:VERS=""  D
"RTN","MAGQBUT4",101,0)
 . . N MSG,TAR
"RTN","MAGQBUT4",102,0)
 . . S K=$O(^DIC(9.4,J,22,"B",VERS,""))
"RTN","MAGQBUT4",103,0)
 . . D LIST^DIC(9.4901,","_K_","_J_",","@;.01;.02;.03","","","","","","","","TAR","MSG")
"RTN","MAGQBUT4",104,0)
 . . Q:$D(MSG("DIERR"))
"RTN","MAGQBUT4",105,0)
 . . S L=0 F  S L=$O(TAR("DILIST","ID",L)) Q:'L  D
"RTN","MAGQBUT4",106,0)
 . . . S LCNT=LCNT+1
"RTN","MAGQBUT4",107,0)
 . . . S PV(LCNT)=VERS_"P"_$P(TAR("DILIST","ID",L,".01"),"^",1)
"RTN","MAGQBUT4",108,0)
 . . . S X=$P($P(TAR("DILIST","ID",L,".02"),"^",1),"@",1)
"RTN","MAGQBUT4",109,0)
 . . . S PV(LCNT)=PV(LCNT)_"^"_$S(X["-1":"",1:X)
"RTN","MAGQBUT4",110,0)
 . . . Q
"RTN","MAGQBUT4",111,0)
 . . Q
"RTN","MAGQBUT4",112,0)
 . Q
"RTN","MAGQBUT4",113,0)
 Q
"RTN","MAGQBUT4",114,0)
 ;
"RTN","MAGQBUT4",115,0)
VOKR(RESULT,VER) ; RPC for VOK [MAGQ VOK]
"RTN","MAGQBUT4",116,0)
 N CVERS,PNUM,SLINE
"RTN","MAGQBUT4",117,0)
 S VER="3.0P"_($$TRIM($P(VER,"P",2)))
"RTN","MAGQBUT4",118,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",119,0)
 S SLINE=$T(+2)
"RTN","MAGQBUT4",120,0)
 S PNUM=$$TRIM($P(SLINE,"**",2)),PNUM=$$TRIM($P(PNUM,",",$L(PNUM,",")))
"RTN","MAGQBUT4",121,0)
 S CVERS=$$TRIM($P(SLINE,";",3))_"P"_PNUM
"RTN","MAGQBUT4",122,0)
 S RESULT=$S(CVERS=VER:1,1:0)_U_CVERS
"RTN","MAGQBUT4",123,0)
 Q
"RTN","MAGQBUT4",124,0)
 ;
"RTN","MAGQBUT4",125,0)
TRIM(X) ; remove both leading and trailing blanks
"RTN","MAGQBUT4",126,0)
 N I,J
"RTN","MAGQBUT4",127,0)
 F I=1:1:$L(X) Q:$E(X,I)'=" "
"RTN","MAGQBUT4",128,0)
 F J=$L(X):-1:I Q:$E(X,J)'=" "
"RTN","MAGQBUT4",129,0)
 Q $S($E(X,I,J)=" ":"",1:$E(X,I,J))
"RTN","MAGQBUT4",130,0)
 ;
"RTN","MAGQBUT4",131,0)
QCNT(RESULT,PLC,QUE) ; [MAGQ QCNT] Called from MagQueManSet.pas and MagSiteParameters.pas
"RTN","MAGQBUT4",132,0)
 N CNT,DA,CQ,IA,X
"RTN","MAGQBUT4",133,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",134,0)
 ;CQ=Current Queue Pointer(#2006.03) 
"RTN","MAGQBUT4",135,0)
 ;QP=Queue file pointer(#2006.031)
"RTN","MAGQBUT4",136,0)
 ;CNT=Queue type total, IA=Not failed total
"RTN","MAGQBUT4",137,0)
 S IA="",RESULT=0
"RTN","MAGQBUT4",138,0)
 S (CNT,IA)=0,DA=""
"RTN","MAGQBUT4",139,0)
 S QP=$S($D(^MAGQUEUE(2006.031,"C",PLC,QUE)):$O(^MAGQUEUE(2006.031,"C",PLC,QUE,"")),1:"")
"RTN","MAGQBUT4",140,0)
 S CQ=$S('QP:0,1:$P($G(^MAGQUEUE(2006.031,QP,0)),U,2))
"RTN","MAGQBUT4",141,0)
 F  S DA=$O(^MAGQUEUE(2006.03,"C",PLC,QUE,DA)) Q:'DA  D
"RTN","MAGQBUT4",142,0)
 . I '$D(^MAGQUEUE(2006.03,DA,0)) K ^MAGQUEUE(2006.03,"C",PLC,QUE,DA) Q 
"RTN","MAGQBUT4",143,0)
 . S CNT=CNT+1
"RTN","MAGQBUT4",144,0)
 . I CQ<DA S IA=IA+1
"RTN","MAGQBUT4",145,0)
 . Q
"RTN","MAGQBUT4",146,0)
 D QPUP(PLC,QUE,CNT,CQ,IA,QP) Q
"RTN","MAGQBUT4",147,0)
 Q
"RTN","MAGQBUT4",148,0)
 ;
"RTN","MAGQBUT4",149,0)
QPUP(PLC,QUE,CNT,CQ,IA,QP) ;
"RTN","MAGQBUT4",150,0)
 N IEN,DIC,VAL
"RTN","MAGQBUT4",151,0)
 K VAL
"RTN","MAGQBUT4",152,0)
 S VAL(1)=PLC,VAL(2)=QUE
"RTN","MAGQBUT4",153,0)
 S QP=$S(QP:QP,1:$$FIND1^DIC(2006.031,"","QX",.VAL,"C","",""))
"RTN","MAGQBUT4",154,0)
 ;I IEN>0 D  Q:IEN
"RTN","MAGQBUT4",155,0)
 ;. S $P(^MAGQUEUE(2006.031,IEN,0),U,5)=CNT Q
"RTN","MAGQBUT4",156,0)
 I 'QP D  Q
"RTN","MAGQBUT4",157,0)
 . K DIE,FDA
"RTN","MAGQBUT4",158,0)
 . S FDA(2006.031,"+1,",.01)=QUE
"RTN","MAGQBUT4",159,0)
 . S FDA(2006.031,"+1,",.04)=PLC
"RTN","MAGQBUT4",160,0)
 . S FDA(2006.031,"+1,",1)=CQ
"RTN","MAGQBUT4",161,0)
 . S FDA(2006.031,"+1,",2)=IA
"RTN","MAGQBUT4",162,0)
 . S FDA(2006.031,"+1,",3)=CNT
"RTN","MAGQBUT4",163,0)
 . D UPDATE^DIE("U","FDA","","MAGQUP")
"RTN","MAGQBUT4",164,0)
 . K DIE,FDA
"RTN","MAGQBUT4",165,0)
 E  D
"RTN","MAGQBUT4",166,0)
 . K DIE,FDA
"RTN","MAGQBUT4",167,0)
 . S FDA(2006.031,QP_",",.01)=QUE
"RTN","MAGQBUT4",168,0)
 . S FDA(2006.031,QP_",",.04)=PLC
"RTN","MAGQBUT4",169,0)
 . S FDA(2006.031,QP_",",1)=CQ
"RTN","MAGQBUT4",170,0)
 . S FDA(2006.031,QP_",",2)=IA
"RTN","MAGQBUT4",171,0)
 . S FDA(2006.031,QP_",",3)=CNT
"RTN","MAGQBUT4",172,0)
 . D FILE^DIE("","FDA","MAGERR")
"RTN","MAGQBUT4",173,0)
 . K DIE,FDA
"RTN","MAGQBUT4",174,0)
 Q
"RTN","MAGQBUT4",175,0)
 ;
"RTN","MAGQBUT4",176,0)
CPUD ;
"RTN","MAGQBUT4",177,0)
 N PLC,INS,QUE
"RTN","MAGQBUT4",178,0)
 S (INS,PLC)=""
"RTN","MAGQBUT4",179,0)
 F  S INS=$O(^MAG(2006.1,"B",INS)) Q:INS=""  D
"RTN","MAGQBUT4",180,0)
 . S PLC=$O(^MAG(2006.1,"B",INS,""))
"RTN","MAGQBUT4",181,0)
 . S QUE="" F  S QUE=$O(^MAGQUEUE(2006.031,"C",PLC,QUE)) Q:QUE=""  D
"RTN","MAGQBUT4",182,0)
 . . D QCNT^MAGQBUT4("",PLC,QUE)
"RTN","MAGQBUT4",183,0)
 . . Q
"RTN","MAGQBUT4",184,0)
 . Q
"RTN","MAGQBUT4",185,0)
 Q
"RTN","MAGQBUT4",186,0)
CNL(GL,IEN,NLC) ;  Check Network Location
"RTN","MAGQBUT4",187,0)
 N MAGREF,MAG0,MAG1,PLC
"RTN","MAGQBUT4",188,0)
 S NLC=NLC+1
"RTN","MAGQBUT4",189,0)
 I '$G(IEN) Q ""
"RTN","MAGQBUT4",190,0)
 S MAG0=$G(@(GL_IEN_",0)"))
"RTN","MAGQBUT4",191,0)
 S MAGREF=+$P(MAG0,"^",3)            ; get file from raid
"RTN","MAGQBUT4",192,0)
 I MAGREF=0 S MAGREF=+$P(MAG0,"^",5) ; get file from jukebox
"RTN","MAGQBUT4",193,0)
 I 'MAGREF Q ""
"RTN","MAGQBUT4",194,0)
 I '$D(^MAG(2005.2,MAGREF,0)) Q ""
"RTN","MAGQBUT4",195,0)
 S PLC=$P($G(^MAG(2005.2,MAGREF,0)),U,10)
"RTN","MAGQBUT4",196,0)
 Q:'PLC ""
"RTN","MAGQBUT4",197,0)
 S PLC=$P($G(^MAG(2006.1,PLC,0)),U)
"RTN","MAGQBUT4",198,0)
 Q $S('PLC:"",1:PLC)
"RTN","MAGQBUT4",199,0)
CNSP(GL,IEN,NMSP,NSC) ;  Check NameSPace
"RTN","MAGQBUT4",200,0)
 N NMSPC,MAG0,FNAM,INSTIEN
"RTN","MAGQBUT4",201,0)
 S NSC=NSC+1
"RTN","MAGQBUT4",202,0)
 S MAG0=$G(@(GL_IEN_",0)"))
"RTN","MAGQBUT4",203,0)
 S FNAM=$P(MAG0,U,2)
"RTN","MAGQBUT4",204,0)
 S NMSPC=$TR($P(FNAM,"."),"0123456789","")
"RTN","MAGQBUT4",205,0)
 Q:NMSPC="" ""
"RTN","MAGQBUT4",206,0)
 S INSTIEN=$S($D(NMSP(NMSPC)):$O(NMSP(NMSPC,"")),1:"")
"RTN","MAGQBUT4",207,0)
 Q INSTIEN
"RTN","MAGQBUT4",208,0)
NMSP(TMPA) ;
"RTN","MAGQBUT4",209,0)
 N IEN,INS,TMP,I,J
"RTN","MAGQBUT4",210,0)
 S INS="" F  S INS=$O(^MAG(2006.1,"B",INS)) Q:INS=""  S IEN="" D
"RTN","MAGQBUT4",211,0)
 . S IEN=$O(^MAG(2006.1,"B",INS,IEN)) Q:IEN=""  D  Q
"RTN","MAGQBUT4",212,0)
 . . S TMP=","_$$UPPER^MAGQE4($$INIS^MAGQBPG2(IEN))_"," D  Q
"RTN","MAGQBUT4",213,0)
 . . . F I=2:1 S J=$P(TMP,",",I) Q:J=""  S TMPA(J,INS)=""
"RTN","MAGQBUT4",214,0)
 . . . Q
"RTN","MAGQBUT4",215,0)
 S J="" F  S J=$O(TMPA(J)) Q:J=""  S INS=$O(TMPA(J,"")) K:($O(TMPA(J,INS))]"") TMPA(J)
"RTN","MAGQBUT4",216,0)
 Q
"RTN","MAGQBUT4",217,0)
CLRQ ; Clears the Queue file and Queue Pointer files
"RTN","MAGQBUT4",218,0)
 N DA,DIK,FILE,IEN
"RTN","MAGQBUT4",219,0)
 F FILE=2006.03,2006.031 D
"RTN","MAGQBUT4",220,0)
 . S IEN=0 F  S IEN=$O(^MAGQUEUE(FILE,IEN)) Q:'IEN  D
"RTN","MAGQBUT4",221,0)
 . . S DIK="^MAGQUEUE("_FILE_","
"RTN","MAGQBUT4",222,0)
 . . S DA=IEN,DA(1)=FILE D ^DIK
"RTN","MAGQBUT4",223,0)
 K DIK,DA
"RTN","MAGQBUT4",224,0)
 Q
"RTN","MAGQBUT4",225,0)
 ; We add RPC to MAG WINDOWS Option this way instead of sending Option : MAG WINDOWS
"RTN","MAGQBUT4",226,0)
 ; If we send MAG WINDOWS Option, the last one installed will overwrite others.
"RTN","MAGQBUT4",227,0)
 ; ADDRPC copied from Patch 51, added the call "D MES^XPDUTL(" instead of "W !"
"RTN","MAGQBUT4",228,0)
ADDRPC(RPCNAME,OPTNAME) ;
"RTN","MAGQBUT4",229,0)
 N DA,DIC
"RTN","MAGQBUT4",230,0)
 S DIC="^DIC(19,",DIC(0)="",X=OPTNAME D ^DIC
"RTN","MAGQBUT4",231,0)
 I Y<0 D  Q
"RTN","MAGQBUT4",232,0)
 . D MES^XPDUTL("Cannot add RPC: """_RPCNAME_""" to Option: """_OPTNAME_""".")
"RTN","MAGQBUT4",233,0)
 . D MES^XPDUTL("Cannot find Option: """_OPTNAME_""".")
"RTN","MAGQBUT4",234,0)
 . Q
"RTN","MAGQBUT4",235,0)
 I '$D(^XWB(8994,"B",RPCNAME)) D  Q
"RTN","MAGQBUT4",236,0)
 . D MES^XPDUTL("Cannot add RPC: """_RPCNAME_""" to Option: """_OPTNAME_""".")
"RTN","MAGQBUT4",237,0)
 . D MES^XPDUTL("Cannot find RPC: """_RPCNAME_""".")
"RTN","MAGQBUT4",238,0)
 . Q
"RTN","MAGQBUT4",239,0)
 S DA(1)=+Y
"RTN","MAGQBUT4",240,0)
 I $D(^DIC(19,+Y,"RPC","B",$O(^XWB(8994,"B",RPCNAME,"")))) D  Q
"RTN","MAGQBUT4",241,0)
 . D MES^XPDUTL("Cannot add RPC: """_RPCNAME_""" to Option: """_OPTNAME_""".")
"RTN","MAGQBUT4",242,0)
 . D MES^XPDUTL("RPC: """_RPCNAME_""" is already a member of """_OPTNAME_""".")
"RTN","MAGQBUT4",243,0)
 . Q
"RTN","MAGQBUT4",244,0)
 S DIC=DIC_DA(1)_",""RPC"","
"RTN","MAGQBUT4",245,0)
 S DIC(0)="L",DLAYGO="19" ; LAYGO should be allowed here
"RTN","MAGQBUT4",246,0)
 S X=RPCNAME
"RTN","MAGQBUT4",247,0)
 D ^DIC
"RTN","MAGQBUT4",248,0)
 K DIC,D0,DLAYGO
"RTN","MAGQBUT4",249,0)
 I Y<0 D  Q
"RTN","MAGQBUT4",250,0)
 . D MES^XPDUTL("Cannot add RPC: """_RPCNAME_""" to Option: """_OPTNAME_""".")
"RTN","MAGQBUT4",251,0)
 . D MES^XPDUTL("Cannot find RPC: """_RPCNAME_""".")
"RTN","MAGQBUT4",252,0)
 . Q
"RTN","MAGQBUT4",253,0)
 Q
"RTN","MAGQBUT4",254,0)
INS(XP,DUZ,DATE,IDA) ;
"RTN","MAGQBUT4",255,0)
 N CT,CNT,COM,D,D0,D1,D2,DDATE,DG,DIC,DICR,DIW,MAGMSG,ST,XMID,XMY,PLACE,XMSUB,XMZ
"RTN","MAGQBUT4",256,0)
 S PLACE=$O(^MAG(2006.1,"B",$$KSP^XUPARAM("INST"),""))
"RTN","MAGQBUT4",257,0)
 D GETENV^%ZOSV
"RTN","MAGQBUT4",258,0)
 S CNT=0
"RTN","MAGQBUT4",259,0)
 S CNT=CNT+1,MAGMSG(CNT)="PACKAGE INSTALL"
"RTN","MAGQBUT4",260,0)
 S CNT=CNT+1,MAGMSG(CNT)="SITE: "_$$KSP^XUPARAM("WHERE")
"RTN","MAGQBUT4",261,0)
 S CNT=CNT+1,MAGMSG(CNT)=" Production Account: "_$$PROD^XUPROD("1")
"RTN","MAGQBUT4",262,0)
 S CNT=CNT+1,MAGMSG(CNT)="PACKAGE: "_XP
"RTN","MAGQBUT4",263,0)
 S CNT=CNT+1,MAGMSG(CNT)="Version: "_$$VER^XPDUTL(XP)
"RTN","MAGQBUT4",264,0)
 S ST=$$GET1^DIQ(9.7,IDA,11,"I")
"RTN","MAGQBUT4",265,0)
 S CNT=CNT+1,MAGMSG(CNT)="Start time: "_$$FMTE^XLFDT(ST)
"RTN","MAGQBUT4",266,0)
 S CT=$$GET1^DIQ(9.7,IDA,17,"I") S:+CT'=CT CT=$$NOW^XLFDT
"RTN","MAGQBUT4",267,0)
 S CNT=CNT+1,MAGMSG(CNT)="Completion time: "_$$FMTE^XLFDT(CT)
"RTN","MAGQBUT4",268,0)
 S CNT=CNT+1,MAGMSG(CNT)="Run time: "_$$FMDIFF^XLFDT(CT,ST,3)
"RTN","MAGQBUT4",269,0)
 S CNT=CNT+1,MAGMSG(CNT)="Environment: "_Y
"RTN","MAGQBUT4",270,0)
 S COM=$$GET1^DIQ(9.7,IDA,6,"I")
"RTN","MAGQBUT4",271,0)
 S CNT=CNT+1,MAGMSG(CNT)="FILE COMMENT: "_COM
"RTN","MAGQBUT4",272,0)
 S CNT=CNT+1,MAGMSG(CNT)="DATE: "_DATE
"RTN","MAGQBUT4",273,0)
 S CNT=CNT+1,MAGMSG(CNT)="Installed by: "_$$GET1^DIQ(9.7,IDA,9,"E")
"RTN","MAGQBUT4",274,0)
 S CNT=CNT+1,MAGMSG(CNT)="Install Name: "_$$GET1^DIQ(9.7,IDA,.01,"E")
"RTN","MAGQBUT4",275,0)
 S DDATE=$$GET1^DIQ(9.7,IDA,51,"I")
"RTN","MAGQBUT4",276,0)
 S CNT=CNT+1,MAGMSG(CNT)="Distribution Date: "_$$FMTE^XLFDT(DDATE)
"RTN","MAGQBUT4",277,0)
 S XMSUB=XP_" INSTALLATION"
"RTN","MAGQBUT4",278,0)
 S XMID=$G(DUZ) S:'XMID XMID=.5
"RTN","MAGQBUT4",279,0)
 S XMY(XMID)=""
"RTN","MAGQBUT4",280,0)
 S:$G(MAGDUZ) XMY(MAGDUZ)=""
"RTN","MAGQBUT4",281,0)
 S XMSUB=$E(XMSUB,1,63)
"RTN","MAGQBUT4",282,0)
 D:$$PROD^XUPROD("1") ADDMG^MAGQBUT5(XMSUB,.XMY,PLACE)
"RTN","MAGQBUT4",283,0)
 D SENDMSG^XMXAPI(XMID,XMSUB,"MAGMSG",.XMY,,.XMZ,)
"RTN","MAGQBUT4",284,0)
 I $G(XMERR) M XMERR=^TMP("XMERR",$J) K XMERR
"RTN","MAGQBUT4",285,0)
 K MAGMSG
"RTN","MAGQBUT4",286,0)
 Q
"RTN","MAGQBUT4",287,0)
TEST ;
"RTN","MAGQBUT4",288,0)
 N FDA
"RTN","MAGQBUT4",289,0)
 S FDA(4)="2006.8^.01^+1,^BP1"
"RTN","MAGQBUT4",290,0)
 S FDA(1)="2006.8^.04^+1,^1"
"RTN","MAGQBUT4",291,0)
 S FDA(3)="2006.8^50^+1,^ISW-PRICER"
"RTN","MAGQBUT4",292,0)
 S FDA(2)="2006.8^11^+1,^1"
"RTN","MAGQBUT4",293,0)
 D KVAL(.RESULTS,"Q",.FDA)
"RTN","MAGQBUT4",294,0)
 W !,"RESULTS: "_RESULTS
"RTN","MAGQBUT4",295,0)
 Q
"RTN","MAGQBUT4",296,0)
 ;
"RTN","MAGQE3")
0^10^B76069024
"RTN","MAGQE3",1,0)
MAGQE3 ;WOIFO/RMP - Support for MAG Enterprise ; 25 Jun 2012 4:20 PM
"RTN","MAGQE3",2,0)
 ;;3.0;IMAGING;**27,29,30,20,46,135**;Mar 19, 2002;Build 5238;Jul 17, 2013
"RTN","MAGQE3",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGQE3",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQE3",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGQE3",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGQE3",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGQE3",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGQE3",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGQE3",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGQE3",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGQE3",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGQE3",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGQE3",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGQE3",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGQE3",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQE3",17,0)
 ;;
"RTN","MAGQE3",18,0)
 Q
"RTN","MAGQE3",19,0)
 ;
"RTN","MAGQE3",20,0)
COUNT(SDATE,EDATE,INST,AI,IQ,DUP,TIOP,TGPP,TIEDP,GRPPRNT,IMAGE,DELETED) ;
"RTN","MAGQE3",21,0)
 N CLIN,CONSENTS,CPTR,D0,DAT,DICOM,DOC,DOCGRP,DOCUMENT,ED0,I,IMPORT
"RTN","MAGQE3",22,0)
 N NAME,OTHER,PCE,PROC,SD0,TRK,ZNODE,CNODE
"RTN","MAGQE3",23,0)
 S SD0=$$SDATE^MAGQE1(SDATE,"F")
"RTN","MAGQE3",24,0)
 S ED0=$$SDATE^MAGQE1(EDATE,"R")
"RTN","MAGQE3",25,0)
 S D0="" F  S D0=$O(^MAG(2005.02,"B","DOCUMENT",D0)) Q:D0=""  D
"RTN","MAGQE3",26,0)
 . S:$G(^MAG(2005.02,D0,4))["TIF" DOC(D0)=""
"RTN","MAGQE3",27,0)
 . Q
"RTN","MAGQE3",28,0)
 S (CONSENTS,GRPPRNT,IMAGE,DELETED,DOCGRP,DOCUMENT,DUP,TIOP,TGPP,TIEDP)=0
"RTN","MAGQE3",29,0)
 S IQ="0^0^0"
"RTN","MAGQE3",30,0)
 S CPTR=$O(^MAG(2005.83,"B","CONSENT",""))
"RTN","MAGQE3",31,0)
 S D0=SD0 F  S D0=$O(^MAG(2005,D0)) Q:'D0  Q:D0'<ED0  D
"RTN","MAGQE3",32,0)
 . S CNODE=$G(^MAG(2005,D0,100))
"RTN","MAGQE3",33,0)
 . S PCE=$P(CNODE,"^",3) Q:((PCE'=INST)&(AI'[("^"_PCE_"^")))
"RTN","MAGQE3",34,0)
 . S ZNODE=$G(^MAG(2005,D0,0))
"RTN","MAGQE3",35,0)
 . I $P(ZNODE,"^",2)="" S TGPP=TGPP+1 ;TOTAL FILE WIDE by Place 
"RTN","MAGQE3",36,0)
 . E  D
"RTN","MAGQE3",37,0)
 . . S TIOP=TIOP+1
"RTN","MAGQE3",38,0)
 . . S:($P(ZNODE,U,11)="") $P(IQ,U,1)=$P(IQ,U,1)+1
"RTN","MAGQE3",39,0)
 . . S:($P(ZNODE,U,11)="0") $P(IQ,U,2)=$P(IQ,U,2)+1
"RTN","MAGQE3",40,0)
 . . S:($P(ZNODE,U,11)="1") $P(IQ,U,3)=$P(IQ,U,3)+1
"RTN","MAGQE3",41,0)
 . . Q
"RTN","MAGQE3",42,0)
 . S X=$P($G(^MAG(2005,D0,2)),"^",1)\1 Q:'X  Q:X<SDATE  Q:X>EDATE
"RTN","MAGQE3",43,0)
 . S:$P(ZNODE,U,12) DUP=DUP+1
"RTN","MAGQE3",44,0)
 . S PCE=$P(CNODE,"^",5),TRK="" I PCE'="" D
"RTN","MAGQE3",45,0)
 . . S TRK=$P($G(^MAG(2006.04,$P(CNODE,U,4),0)),U)
"RTN","MAGQE3",46,0)
 . . S TRK=$S(TRK'="":TRK,1:"?") Q
"RTN","MAGQE3",47,0)
 . I $P(ZNODE,"^",2)="" D  Q
"RTN","MAGQE3",48,0)
 . . S GRPPRNT=GRPPRNT+1
"RTN","MAGQE3",49,0)
 . . S PCE=$P(ZNODE,"^",8) S:PCE="" PCE="NIL"
"RTN","MAGQE3",50,0)
 . . S:$D(^MAG(2005,D0,"PACS")) DICOM(PCE,0)=$G(DICOM(PCE,0))+1
"RTN","MAGQE3",51,0)
 . . S PCE=$P(ZNODE,"^",6) I PCE,$D(DOC(PCE)) S DOCGRP=DOCGRP+1
"RTN","MAGQE3",52,0)
 . . S:TRK'="" IMPORT(TRK,0)=$G(IMPORT(TRK,0))+1
"RTN","MAGQE3",53,0)
 . . Q
"RTN","MAGQE3",54,0)
 . S:TRK'="" IMPORT(TRK)=$G(IMPORT(TRK))+1
"RTN","MAGQE3",55,0)
 . I CPTR,$P($G(^MAG(2005,D0,40)),"^",3)=CPTR S CONSENTS=CONSENTS+1
"RTN","MAGQE3",56,0)
 . E  S PCE=$$UPPER^MAGQE4($P($G(^MAG(2005,D0,2)),"^",4)) S:PCE["CONSENT" OTHER(PCE)=$G(OTHER(PCE))+1
"RTN","MAGQE3",57,0)
 . S IMAGE=IMAGE+1
"RTN","MAGQE3",58,0)
 . S PCE=$P(ZNODE,"^",6) I PCE,$D(DOC(PCE)) S DOCUMENT=DOCUMENT+1
"RTN","MAGQE3",59,0)
 . S PCE=$P(ZNODE,"^",7) S:PCE="" PCE="NIL"
"RTN","MAGQE3",60,0)
 . S ^TMP($J,"MAGQ","ACQPAT",PCE)=""
"RTN","MAGQE3",61,0)
 . S ^TMP($J,"MAGQ","ALLPAT",PCE)=""
"RTN","MAGQE3",62,0)
 . S PCE=$P(ZNODE,"^",8) S:PCE="" PCE="NIL"
"RTN","MAGQE3",63,0)
 . I $D(^MAG(2005,D0,"PACS")) S DICOM(PCE)=$G(DICOM(PCE))+1
"RTN","MAGQE3",64,0)
 . E  S CLIN(PCE)=$G(CLIN(PCE))+1
"RTN","MAGQE3",65,0)
 . Q
"RTN","MAGQE3",66,0)
 S NAME="" F  S NAME=$O(DICOM(NAME)) Q:NAME=""  D
"RTN","MAGQE3",67,0)
 . D:$E(NAME,1,4)="RAD "
"RTN","MAGQE3",68,0)
 . . Q:'$D(DICOM(NAME,0))
"RTN","MAGQE3",69,0)
 . . S I=$E(NAME,5,$L(NAME)) Q:I=""
"RTN","MAGQE3",70,0)
 . . Q:$D(DICOM(I,0))
"RTN","MAGQE3",71,0)
 . . S DICOM(I,0)=DICOM(NAME,0) K DICOM(NAME,0) Q
"RTN","MAGQE3",72,0)
 . S PROC=$O(^RAMIS(73.1,"B",NAME,"")) Q:'PROC
"RTN","MAGQE3",73,0)
 . S $P(DICOM(NAME),"^",2)=$P($G(^RAMIS(73.1,PROC,0)),"^",2) Q
"RTN","MAGQE3",74,0)
 S D0=SD0 F  S D0=$O(^MAG(2005.1,D0)) Q:'D0  Q:D0'<ED0  D
"RTN","MAGQE3",75,0)
 . S PCE=$P($G(^MAG(2005.1,D0,100)),"^",3) Q:((PCE'=INST)&(AI'[("^"_PCE_"^")))
"RTN","MAGQE3",76,0)
 . S TIEDP=TIEDP+1
"RTN","MAGQE3",77,0)
 . S X=$P($G(^MAG(2005.1,D0,2)),"^",1)\1 Q:'X  Q:X<SDATE  Q:X>EDATE
"RTN","MAGQE3",78,0)
 . S DELETED=DELETED+1 Q
"RTN","MAGQE3",79,0)
 S I="" F  S I=$O(DICOM(I)) Q:I=""  D
"RTN","MAGQE3",80,0)
 . S X=" DICOM CAPTURE: "_I_"^"_$G(DICOM(I))
"RTN","MAGQE3",81,0)
 . S:$G(DICOM(I,0)) $P(X,"^",4)=DICOM(I,0)
"RTN","MAGQE3",82,0)
 . D MSG^MAGQE2(X) Q
"RTN","MAGQE3",83,0)
 S I="" F  S I=$O(IMPORT(I)) Q:I=""  D
"RTN","MAGQE3",84,0)
 . S X=" IMPORT API: "_I_"^"_IMPORT(I)
"RTN","MAGQE3",85,0)
 . S:$G(IMPORT(I,0)) X=X_"^"_IMPORT(I,0)
"RTN","MAGQE3",86,0)
 . D MSG^MAGQE2(X) Q
"RTN","MAGQE3",87,0)
 D LLOAD^MAGQE5(.CLIN,"CLIN CAPTURE:")
"RTN","MAGQE3",88,0)
 D MSG^MAGQE2("CONSENT FORMS: "_CONSENTS)
"RTN","MAGQE3",89,0)
 D LLOAD^MAGQE5(.OTHER,"OTHER CONSENTS:")
"RTN","MAGQE3",90,0)
 D MSG^MAGQE2("Document Images (TIF): "_DOCUMENT)
"RTN","MAGQE3",91,0)
 D MSG^MAGQE2("Document Groups (TIF): "_DOCGRP)
"RTN","MAGQE3",92,0)
 Q
"RTN","MAGQE3",93,0)
 ;
"RTN","MAGQE3",94,0)
ACT(D0,DIS,CAP,VD,VI,RES) ;
"RTN","MAGQE3",95,0)
 N ACT,AN,AN2,D1,IMG
"RTN","MAGQE3",96,0)
 S D1=0 F  S D1=$O(^MAG(2006.82,D0,"ACT",D1)) Q:'D1  D
"RTN","MAGQE3",97,0)
 . S AN=^MAG(2006.82,D0,"ACT",D1,0)
"RTN","MAGQE3",98,0)
 . S ACT="^"_$P(AN,"^",1)_"^",AN2=+$P(AN,"^",2)
"RTN","MAGQE3",99,0)
 . Q:"^LOGON^LOGOFF^PAT^"[ACT
"RTN","MAGQE3",100,0)
 . I "^SC_BAD^SCR_OK^"[ACT D  Q
"RTN","MAGQE3",101,0)
 . . S AN=$P(AN,"^",10,14) Q:AN=""
"RTN","MAGQE3",102,0)
 . . S RES(ACT,AN)=$G(RES(ACT,AN))+1 Q
"RTN","MAGQE3",103,0)
 . I "^CAP^IMG^"[ACT D  Q
"RTN","MAGQE3",104,0)
 . . S IMG=+$P(AN,"^",3) Q:'IMG  Q:$P($G(^MAG(2005,IMG,0)),"^",2)=""
"RTN","MAGQE3",105,0)
 . . I ACT="^CAP^" S CAP=CAP+1 Q
"RTN","MAGQE3",106,0)
 . . S DIS=DIS+1,^TMP($J,"MAGQ","DISPAT",AN2)="",^TMP($J,"MAGQ","ALLPAT",AN2)=""
"RTN","MAGQE3",107,0)
 . . Q
"RTN","MAGQE3",108,0)
 . I "^VR-VW^"[ACT D VRAD(.VD,AN) S ^TMP($J,"MAGQ","DISPAT",AN2)="",^TMP($J,"MAGQ","ALLPAT",AN2)="" Q
"RTN","MAGQE3",109,0)
 . I "^VR-INT^"[ACT D VRAD(.VI,AN) S ^TMP($J,"MAGQ","DISPAT",AN2)="",^TMP($J,"MAGQ","ALLPAT",AN2)="" Q
"RTN","MAGQE3",110,0)
 . Q
"RTN","MAGQE3",111,0)
 Q
"RTN","MAGQE3",112,0)
 ;
"RTN","MAGQE3",113,0)
VRAD(ARR,AN) ;
"RTN","MAGQE3",114,0)
 ;ARR=STUDIES^IMAGES^PATIENTS^User Type(Rad/Non-Rad)^Remotes(Remote/Local)^Modalities
"RTN","MAGQE3",115,0)
 N P,X
"RTN","MAGQE3",116,0)
 S $P(ARR,"^",1)=$P($G(ARR),"^",1)+1 ; Studies
"RTN","MAGQE3",117,0)
 S $P(ARR,"^",2)=$P($G(ARR),"^",2)+$P(AN,"^",6) ; Images
"RTN","MAGQE3",118,0)
 S $P(ARR,"^",3)=$P($G(ARR),"^",3)+$P(AN,"^",7) ; Patients
"RTN","MAGQE3",119,0)
 S P=$P(ARR,"^",4)
"RTN","MAGQE3",120,0)
 I +$P(AN,"^",8)=1 S $P(P,"/",1)=$P(P,"/",1)+1
"RTN","MAGQE3",121,0)
 E  S $P(P,"/",2)=$P(P,"/",2)+1
"RTN","MAGQE3",122,0)
 S $P(ARR,"^",4)=P ; User Type
"RTN","MAGQE3",123,0)
 S P=$P(ARR,"^",5)
"RTN","MAGQE3",124,0)
 I +$P(AN,"^",9)=1 S $P(P,"/",1)=$P(P,"/",1)+1
"RTN","MAGQE3",125,0)
 E  S $P(P,"/",2)=$P(P,"/",2)+1
"RTN","MAGQE3",126,0)
 S $P(ARR,"^",5)=P ; Remotes
"RTN","MAGQE3",127,0)
 S P=$P(AN,"^",4) S:P="" P="unknown"
"RTN","MAGQE3",128,0)
 S ARR(P)=$G(ARR(P))+1
"RTN","MAGQE3",129,0)
 S (P,X)="" F  S P=$O(ARR(P)) Q:P=""  S X=X_"/"_P_"="_ARR(P)
"RTN","MAGQE3",130,0)
 S $P(ARR,"^",6)=X ; Modalities
"RTN","MAGQE3",131,0)
 Q
"RTN","MAGQE3",132,0)
 ;
"RTN","MAGQE3",133,0)
GPACHX() ; Get Package File Install History of Imaging
"RTN","MAGQE3",134,0)
 N I,LCNT,MSG,PKG,PKT,PV
"RTN","MAGQE3",135,0)
 S LCNT=0
"RTN","MAGQE3",136,0)
 F PKG="IMAGING","MAGJ RADIOLOGY" D
"RTN","MAGQE3",137,0)
 . N J,K,L,PKNAM,VERS
"RTN","MAGQE3",138,0)
 . S J=$$FIND1^DIC(9.4,",","MX",PKG) Q:'J
"RTN","MAGQE3",139,0)
 . I PKG="MAGJ RADIOLOGY" D  Q
"RTN","MAGQE3",140,0)
 . . N TAR
"RTN","MAGQE3",141,0)
 . . D LIST^DIC(9.49,","_J_",","@;.01;2;3","","","","","","","","TAR","MSG")
"RTN","MAGQE3",142,0)
 . . Q:$D(MSG("DIERR"))
"RTN","MAGQE3",143,0)
 . . S L=0 F  S L=$O(TAR("DILIST","ID",L)) Q:'L  D
"RTN","MAGQE3",144,0)
 . . . S LCNT=LCNT+1
"RTN","MAGQE3",145,0)
 . . . S PV(LCNT)=PKG_"^P"_$P(TAR("DILIST","ID",L,".01"),"^",1)
"RTN","MAGQE3",146,0)
 . . . S PV(LCNT)=PV(LCNT)_"^"_$P(TAR("DILIST","ID",L,"2"),"^",1)
"RTN","MAGQE3",147,0)
 . . . S PV(LCNT)=PV(LCNT)_"^"_$P(TAR("DILIST","ID",L,"3"),"^",1) Q
"RTN","MAGQE3",148,0)
 . . Q
"RTN","MAGQE3",149,0)
 . K PKT D LIST^DIC(9.49,","_J_",",.01,"","*","","","B","","","PKT","MSG")
"RTN","MAGQE3",150,0)
 . S VERS="" F  S VERS=$O(PKT("DILIST",2,VERS)) Q:VERS=""  S K=PKT("DILIST",2,VERS) D
"RTN","MAGQE3",151,0)
 . . K MSG
"RTN","MAGQE3",152,0)
 . . D LIST^DIC(9.4901,","_K_","_J_",","@;.01;.02;.03","","","","","","","","TAR","MSG")
"RTN","MAGQE3",153,0)
 . . Q:$D(MSG("DIERR"))
"RTN","MAGQE3",154,0)
 . . S L=0 F  S L=$O(TAR("DILIST","ID",L)) Q:'L  D
"RTN","MAGQE3",155,0)
 . . . S LCNT=LCNT+1
"RTN","MAGQE3",156,0)
 . . . S PV(LCNT)=PKG_"^"_VERS_"P"_$P(TAR("DILIST","ID",L,".01"),"^",1)
"RTN","MAGQE3",157,0)
 . . . S PV(LCNT)=PV(LCNT)_"^"_$P(TAR("DILIST","ID",L,".02"),"^",1)
"RTN","MAGQE3",158,0)
 . . . S PV(LCNT)=PV(LCNT)_"^"_$P(TAR("DILIST","ID",L,".03"),"^",1) Q
"RTN","MAGQE3",159,0)
 . . Q
"RTN","MAGQE3",160,0)
 . Q
"RTN","MAGQE3",161,0)
 S I="" F  S I=$O(PV(I)) Q:I=""  D
"RTN","MAGQE3",162,0)
 . D MSG^MAGQE2("IMAGING PACKAGE INSTALLATION HX: "_I_"^"_PV(I)) Q
"RTN","MAGQE3",163,0)
 Q
"RTN","MAGQE3",164,0)
 ;
"RTN","MAGQE3",165,0)
ADCNT(SDATE,EDATE,INST,AI) ;
"RTN","MAGQE3",166,0)
 ; SAC = Scanned, Administrative Closure SMC = Scanned, Manual Closure UMC = Unscanned, Manual Closure
"RTN","MAGQE3",167,0)
 N ARRY,D0,D1,DATE,DATES,DOC,HLOC,SAC,SCR,SMC,STAT,STATA,STATC,TITLE,TIUDA,UMC
"RTN","MAGQE3",168,0)
 S STATA="^",D0=0 F  S D0=$O(^TIU(8925.6,"B","AMENDED",D0)) Q:'D0  D
"RTN","MAGQE3",169,0)
 . S STATA=STATA_D0_"^" Q
"RTN","MAGQE3",170,0)
 S STATC="^",D0=0 F  S D0=$O(^TIU(8925.6,"B","COMPLETED",D0)) Q:'D0  D
"RTN","MAGQE3",171,0)
 . S STATC=STATC_D0_"^" Q
"RTN","MAGQE3",172,0)
 S DOC="ADVANCE DIRECTIVE"
"RTN","MAGQE3",173,0)
 S D0=0 F  S D0=$O(^TIU(8925.1,"B",DOC,D0)) Q:'D0  D
"RTN","MAGQE3",174,0)
 . Q:$P($G(^TIU(8925.1,D0,0)),"^",4)'="DC"
"RTN","MAGQE3",175,0)
 . S D1=0 F  S D1=$O(^TIU(8925.1,D0,10,"B",D1)) Q:'D1  D
"RTN","MAGQE3",176,0)
 . . S TITLE=$P($G(^TIU(8925.1,+D1,0)),"^",1) S:TITLE="" TITLE=" "
"RTN","MAGQE3",177,0)
 . . S ARRY(TITLE,D1)="" Q
"RTN","MAGQE3",178,0)
 . Q
"RTN","MAGQE3",179,0)
 S SCR="",(SAC,SMC,UMC)=0
"RTN","MAGQE3",180,0)
 S TITLE="" F  S TITLE=$O(ARRY(TITLE)) Q:TITLE=""  D
"RTN","MAGQE3",181,0)
 . S D1="" F  S D1=$O(ARRY(TITLE,D1)) Q:D1=""  D
"RTN","MAGQE3",182,0)
 . . S TIUDA=0 F  S TIUDA=$O(^TIU(8925,"B",D1,TIUDA)) Q:'TIUDA  D
"RTN","MAGQE3",183,0)
 . . . N MSG,TARGET
"RTN","MAGQE3",184,0)
 . . . S SCR="" ; INSTITUTION screen for consolidation sites only.
"RTN","MAGQE3",185,0)
 . . . D GETS^DIQ(8925,TIUDA,".05;1205;1501;1507;1603;1606;1613","IE","TARGET","MSG")
"RTN","MAGQE3",186,0)
 . . . Q:$D(MSG("DIERR"))
"RTN","MAGQE3",187,0)
 . . . I $$CONSOLID^MAGQE5() D  Q:SCR
"RTN","MAGQE3",188,0)
 . . . . S HLOC=TARGET(8925,TIUDA_",",1205,"I") ; INSTITUTION screen - dependent upon TIU*1*113
"RTN","MAGQE3",189,0)
 . . . . I HLOC="" S SCR=1
"RTN","MAGQE3",190,0)
 . . . . E  I (($P($G(^SC(HLOC,0)),"^",4)'=INST)&(AI'[("^"_$P($G(^SC(HLOC,0)),"^",4)_"^")))  S SCR=1
"RTN","MAGQE3",191,0)
 . . . . Q
"RTN","MAGQE3",192,0)
 . . . S STAT="^"_TARGET(8925,TIUDA_",",.05,"I")_"^"
"RTN","MAGQE3",193,0)
 . . . Q:STATA_STATC'[STAT
"RTN","MAGQE3",194,0)
 . . . I TARGET(8925,TIUDA_",",1613,"I")="S" D  Q
"RTN","MAGQE3",195,0)
 . . . . Q:TARGET(8925,TIUDA_",",1606,"I")<SDATE
"RTN","MAGQE3",196,0)
 . . . . Q:$P(TARGET(8925,TIUDA_",",1606,"I"),".")>EDATE
"RTN","MAGQE3",197,0)
 . . . . S SAC=SAC+1,SAC(TITLE)=$G(SAC(TITLE))+1 Q
"RTN","MAGQE3",198,0)
 . . . I STATC[STAT D  Q
"RTN","MAGQE3",199,0)
 . . . . S DATE=TARGET(8925,TIUDA_",",1507,"I")
"RTN","MAGQE3",200,0)
 . . . . S DATE=$S(DATE?1.N:DATE,1:+TARGET(8925,TIUDA_",",1501,"I"))
"RTN","MAGQE3",201,0)
 . . . . Q:DATE<SDATE
"RTN","MAGQE3",202,0)
 . . . . Q:$P(DATE,".")>EDATE
"RTN","MAGQE3",203,0)
 . . . . I $$SCAN(TIUDA) S SMC=SMC+1,SMC(TITLE)=$G(SMC(TITLE))+1 Q
"RTN","MAGQE3",204,0)
 . . . . S UMC=UMC+1,UMC(TITLE)=$G(UMC(TITLE))+1 Q
"RTN","MAGQE3",205,0)
 . . . I STATA[STAT D  Q
"RTN","MAGQE3",206,0)
 . . . . Q:TARGET(8925,TIUDA_",",1603,"I")<SDATE
"RTN","MAGQE3",207,0)
 . . . . Q:$P(TARGET(8925,TIUDA_",",1603,"I"),".")>EDATE
"RTN","MAGQE3",208,0)
 . . . . I $$SCAN(TIUDA) S SMC=SMC+1,SMC(TITLE)=$G(SMC(TITLE))+1 Q
"RTN","MAGQE3",209,0)
 . . . . S UMC=UMC+1,UMC(TITLE)=$G(UMC(TITLE))+1 Q
"RTN","MAGQE3",210,0)
 . . . Q
"RTN","MAGQE3",211,0)
 . . Q
"RTN","MAGQE3",212,0)
 . Q
"RTN","MAGQE3",213,0)
 D MSG^MAGQE2(DOC_" SCANNED ADMINISTRATIVE CLOSURE: "_SAC)
"RTN","MAGQE3",214,0)
 S TITLE="" F  S TITLE=$O(SAC(TITLE)) Q:TITLE=""  D
"RTN","MAGQE3",215,0)
 . D MSG^MAGQE2(DOC_" - SAC - "_TITLE_": "_SAC(TITLE)) Q
"RTN","MAGQE3",216,0)
 D MSG^MAGQE2(DOC_" UNSCANNED MANUAL CLOSURE: "_UMC)
"RTN","MAGQE3",217,0)
 S TITLE="" F  S TITLE=$O(UMC(TITLE)) Q:TITLE=""  D
"RTN","MAGQE3",218,0)
 . D MSG^MAGQE2(DOC_" - UMC - "_TITLE_": "_UMC(TITLE)) Q
"RTN","MAGQE3",219,0)
 D MSG^MAGQE2(DOC_" SCANNED MANUAL CLOSURE: "_SMC)
"RTN","MAGQE3",220,0)
 S TITLE="" F  S TITLE=$O(SMC(TITLE)) Q:TITLE=""  D
"RTN","MAGQE3",221,0)
 . D MSG^MAGQE2(DOC_" - SMC - "_TITLE_": "_SMC(TITLE)) Q
"RTN","MAGQE3",222,0)
 Q
"RTN","MAGQE3",223,0)
 ;
"RTN","MAGQE3",224,0)
SCAN(IEN) ;
"RTN","MAGQE3",225,0)
 N LINK
"RTN","MAGQE3",226,0)
 S LINK=$O(^TIU(8925.91,"B",IEN,"")) Q:'LINK 0
"RTN","MAGQE3",227,0)
 Q $S($P($G(^TIU(8925.1,LINK,0)),"^",2)?1.N:0,1:1)
"RTN","MAGQE3",228,0)
 ;
"RTN","MAGSDOFF")
0^11^B63243612
"RTN","MAGSDOFF",1,0)
MAGSDOFF ; OI&T-Clin3/DWM - DEX & AA Track Offline Images ; 01/31/13
"RTN","MAGSDOFF",2,0)
 ;;3.0;IMAGING;**135**;Mar 19, 2002;Build 5238;Jul 17, 2013
"RTN","MAGSDOFF",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGSDOFF",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSDOFF",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGSDOFF",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGSDOFF",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGSDOFF",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGSDOFF",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGSDOFF",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGSDOFF",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGSDOFF",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGSDOFF",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGSDOFF",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGSDOFF",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGSDOFF",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSDOFF",17,0)
 ;;
"RTN","MAGSDOFF",18,0)
 ;  Process:
"RTN","MAGSDOFF",19,0)
 ;     - validate mail group 'OFFLINE IMAGE TRACKERS'
"RTN","MAGSDOFF",20,0)
 ;     - read and store platter report in ^TMP($J, global
"RTN","MAGSDOFF",21,0)
 ;     - extract image file names into ^TMP($J,"PLATTER",
"RTN","MAGSDOFF",22,0)
 ;     - import image file names into #2006.033 'OFFLINE IMAGES FILE'
"RTN","MAGSDOFF",23,0)
 ;     - update original AA platter report to DEX format
"RTN","MAGSDOFF",24,0)
 ; Original AA platter report format:
"RTN","MAGSDOFF",25,0)
 ;   "File Path","File ID","File Size","Migration ID",
"RTN","MAGSDOFF",26,0)
 ;   "Migration Time",Status "
"RTN","MAGSDOFF",27,0)
 ; 'Split' files are added as duplicates but with their corresponding
"RTN","MAGSDOFF",28,0)
 ;    platter name - this allows online/offline to work as needed.
"RTN","MAGSDOFF",29,0)
 Q
"RTN","MAGSDOFF",30,0)
EN ; entry point; called by ^MAGSDOFL; from option [MAG JB OFFLINE]
"RTN","MAGSDOFF",31,0)
 N FILE,PATH,Y,L,LN,N,XX,DIR,X,GRP,MAILCHK,I,MAGPLAT
"RTN","MAGSDOFF",32,0)
 K ^TMP($J),DIR
"RTN","MAGSDOFF",33,0)
 W !!,"AA Offline Platter Utility",! F I=1:1:26 W "-"
"RTN","MAGSDOFF",34,0)
 ;
"RTN","MAGSDOFF",35,0)
 ; validate mail group 'OFFLINE IMAGE TRACKERS'
"RTN","MAGSDOFF",36,0)
 S GRP="OFFLINE IMAGE TRACKERS"
"RTN","MAGSDOFF",37,0)
 W !!,"Validating mail group '"_GRP_"'..." H 2
"RTN","MAGSDOFF",38,0)
 S MAILCHK=$$MAIL(GRP) F I=1:1:$L(MAILCHK,U) W !,?7,$P(MAILCHK,U,I)
"RTN","MAGSDOFF",39,0)
 ;
"RTN","MAGSDOFF",40,0)
 ; ask directory & file name
"RTN","MAGSDOFF",41,0)
 D DIR
"RTN","MAGSDOFF",42,0)
 I '$D(PATH)!('$D(FILE)) Q
"RTN","MAGSDOFF",43,0)
 ;
"RTN","MAGSDOFF",44,0)
 ; $$FTG^%ZISH(): Load Host File into Global
"RTN","MAGSDOFF",45,0)
 W !!,"Extracting data from "_FILE_"..."
"RTN","MAGSDOFF",46,0)
 S Y=$$FTG^%ZISH(PATH,FILE,$NA(^TMP($J,0)),2)
"RTN","MAGSDOFF",47,0)
 I Y=0 D ERR(1,FILE,PATH) G EXIT
"RTN","MAGSDOFF",48,0)
 I '$D(^TMP($J)) D ERR(2,FILE) G EXIT
"RTN","MAGSDOFF",49,0)
 W "completed.",!
"RTN","MAGSDOFF",50,0)
 ;
"RTN","MAGSDOFF",51,0)
 ; extract image file name from data saved in ^TMP($J,
"RTN","MAGSDOFF",52,0)
 D PULL
"RTN","MAGSDOFF",53,0)
 I '$D(^TMP($J,"PLATTER")) D  Q
"RTN","MAGSDOFF",54,0)
 . W !!,"No files to take offline - "
"RTN","MAGSDOFF",55,0)
 . W "platter report will not be modified",!! Q
"RTN","MAGSDOFF",56,0)
 ;
"RTN","MAGSDOFF",57,0)
 ; import image file names into #2006.033 'OFFLINE IMAGES FILE'
"RTN","MAGSDOFF",58,0)
 D OFF
"RTN","MAGSDOFF",59,0)
 I MAGPLAT="ERROR" D  G EXIT
"RTN","MAGSDOFF",60,0)
 . W !!,"Unable to create unique report platter name 30 characters or less"
"RTN","MAGSDOFF",61,0)
 . Q
"RTN","MAGSDOFF",62,0)
 ; update platter report file in directory
"RTN","MAGSDOFF",63,0)
 D UPD
"RTN","MAGSDOFF",64,0)
 ;
"RTN","MAGSDOFF",65,0)
EXIT ;
"RTN","MAGSDOFF",66,0)
 ;
"RTN","MAGSDOFF",67,0)
 K ^TMP($J),FILE,PATH,MAGPLAT
"RTN","MAGSDOFF",68,0)
 Q
"RTN","MAGSDOFF",69,0)
 ;
"RTN","MAGSDOFF",70,0)
DIR ; ask path & file name
"RTN","MAGSDOFF",71,0)
 N DIR,Y,I
"RTN","MAGSDOFF",72,0)
 W ! S DIR(0)="F"
"RTN","MAGSDOFF",73,0)
 S DIR("A")="Enter File Directory ( example user$:[dir] ) "
"RTN","MAGSDOFF",74,0)
 D ^DIR Q:Y["^"!(Y=-1)  S PATH=Y K DIR
"RTN","MAGSDOFF",75,0)
 S DIR(0)="F"
"RTN","MAGSDOFF",76,0)
 S DIR("A")="Enter File Name ( example aab42_134175.txt ) "
"RTN","MAGSDOFF",77,0)
 D ^DIR Q:Y["^"!(Y=-1)  S FILE=Y K DIR
"RTN","MAGSDOFF",78,0)
 Q
"RTN","MAGSDOFF",79,0)
 ;
"RTN","MAGSDOFF",80,0)
PULL ; extract image file name from data saved in ^TMP($J,
"RTN","MAGSDOFF",81,0)
 ; build ^TMP($J,"PLATTER",L)=file_name
"RTN","MAGSDOFF",82,0)
 N L,LN,N,XX,CNT
"RTN","MAGSDOFF",83,0)
 W !,"Pulling image file names from report data",!
"RTN","MAGSDOFF",84,0)
 S (L,CNT)=0 F  S L=$O(^TMP($J,L)) Q:'L  D
"RTN","MAGSDOFF",85,0)
 . S LN=^TMP($J,L)
"RTN","MAGSDOFF",86,0)
 . ; pattern match example "bil0001.txt ..."
"RTN","MAGSDOFF",87,0)
 . I $P(LN," ",1)?.E1"."2.5AN D  Q
"RTN","MAGSDOFF",88,0)
 .. S LN=$P(LN," ") D SET
"RTN","MAGSDOFF",89,0)
 .. Q
"RTN","MAGSDOFF",90,0)
 . ; pull name "default/xxx0/00/23/46/97/xxx00023469737.TIF",2028..."
"RTN","MAGSDOFF",91,0)
 . I LN["/" D
"RTN","MAGSDOFF",92,0)
 .. ; a few bogus lines may exist in report
"RTN","MAGSDOFF",93,0)
 .. Q:LN[".config_backup"!(LN["self_test")
"RTN","MAGSDOFF",94,0)
 .. S LN=$P(LN,"""",2)
"RTN","MAGSDOFF",95,0)
 .. F N=1:1 S XX=$P(LN,"/",N) Q:XX=""  I XX?.E1"."2.5AN S LN=XX
"RTN","MAGSDOFF",96,0)
 .. D SET
"RTN","MAGSDOFF",97,0)
 .. Q
"RTN","MAGSDOFF",98,0)
 . Q
"RTN","MAGSDOFF",99,0)
 W !,"completed -  "_CNT_" file names found.",!
"RTN","MAGSDOFF",100,0)
 Q
"RTN","MAGSDOFF",101,0)
 ;
"RTN","MAGSDOFF",102,0)
SET ; LN = image file name
"RTN","MAGSDOFF",103,0)
 S CNT=CNT+1 I CNT#500=0 W "."
"RTN","MAGSDOFF",104,0)
 S ^TMP($J,"PLATTER",CNT)=LN
"RTN","MAGSDOFF",105,0)
 Q
"RTN","MAGSDOFF",106,0)
 ;
"RTN","MAGSDOFF",107,0)
OFF ; import image file names into #2006.033 'OFFLINE IMAGES FILE'
"RTN","MAGSDOFF",108,0)
 N L,CNT,CNT1,MAGFL,MAGFDA,MAGIEN,LN
"RTN","MAGSDOFF",109,0)
 N DIERR,MRK,OIEN,RPT,DUP,MAGPLAT1,I
"RTN","MAGSDOFF",110,0)
 S (L,CNT,CNT1,DUP)=0,MAGFL=2006.033
"RTN","MAGSDOFF",111,0)
 ; platter name limited to 30 characters, and must be unique
"RTN","MAGSDOFF",112,0)
 S MAGPLAT=$P(FILE,".") S:$L(MAGPLAT)>30 MAGPLAT=$$PLAT(MAGPLAT)
"RTN","MAGSDOFF",113,0)
 Q:MAGPLAT="ERROR" 
"RTN","MAGSDOFF",114,0)
 W !,"Updating the individual image files as 'offline'"
"RTN","MAGSDOFF",115,0)
 F  S L=$O(^TMP($J,"PLATTER",L)) Q:'L  D
"RTN","MAGSDOFF",116,0)
 . S LN=^TMP($J,"PLATTER",L)
"RTN","MAGSDOFF",117,0)
 . ;
"RTN","MAGSDOFF",118,0)
 . ; check for existing image file from same platter report
"RTN","MAGSDOFF",119,0)
 . I $D(^MAGQUEUE(2006.033,"B",LN)) S MRK=0 D  Q:MRK
"RTN","MAGSDOFF",120,0)
 .. S OIEN="" F  S OIEN=$O(^MAGQUEUE(2006.033,"B",LN,OIEN)) Q:'OIEN  D
"RTN","MAGSDOFF",121,0)
 ... S RPT=$P(^MAGQUEUE(2006.033,OIEN,0),U,2)
"RTN","MAGSDOFF",122,0)
 ... ; file/platter entry already in #2006.033:
"RTN","MAGSDOFF",123,0)
 ... I RPT=MAGPLAT S MRK=1,DUP=DUP+1
"RTN","MAGSDOFF",124,0)
 ... Q
"RTN","MAGSDOFF",125,0)
 .. Q
"RTN","MAGSDOFF",126,0)
 . ;
"RTN","MAGSDOFF",127,0)
 . S CNT=CNT+1 I CNT#500=0 W "."
"RTN","MAGSDOFF",128,0)
 . ; using "+1," instead of "?+1," to allow duplicate "split" entries
"RTN","MAGSDOFF",129,0)
 . K MAGIEN S MAGIEN="+1,"
"RTN","MAGSDOFF",130,0)
 . S MAGFDA(MAGFL,MAGIEN,.01)=LN ;   .01 FILENAME
"RTN","MAGSDOFF",131,0)
 . S MAGFDA(MAGFL,MAGIEN,1)=MAGPLAT ;  1 JUKEBOX PLATTER
"RTN","MAGSDOFF",132,0)
 . D UPDATE^DIE("E","MAGFDA","MAGIEN","MAGERR")
"RTN","MAGSDOFF",133,0)
 . ;
"RTN","MAGSDOFF",134,0)
 . ; check and process error msg if needed
"RTN","MAGSDOFF",135,0)
 . I '$D(DIERR) S CNT1=CNT1+1
"RTN","MAGSDOFF",136,0)
 . E  D ERR(3,LN,"",.MAGERR) K MAGERR
"RTN","MAGSDOFF",137,0)
 . Q
"RTN","MAGSDOFF",138,0)
 W !,"Done - "_CNT1_" entries added to #2006.033"
"RTN","MAGSDOFF",139,0)
 ; "duplicates" could be 1. already in #2006.033 or an actual
"RTN","MAGSDOFF",140,0)
 ;  file duplication on the platter report
"RTN","MAGSDOFF",141,0)
 I DUP W !,DUP_" duplicate(s) not added"
"RTN","MAGSDOFF",142,0)
 Q
"RTN","MAGSDOFF",143,0)
 ;
"RTN","MAGSDOFF",144,0)
UPD ; update platter report file in directory
"RTN","MAGSDOFF",145,0)
 N Y,LAST,LAST1
"RTN","MAGSDOFF",146,0)
 I MAGPLAT'=$P(FILE,".") W !!,"Creating new platter report "_MAGPLAT
"RTN","MAGSDOFF",147,0)
 E  W !!,"Reformatting platter report "_MAGPLAT
"RTN","MAGSDOFF",148,0)
 I '$D(^TMP($J,"PLATTER")) D  Q
"RTN","MAGSDOFF",149,0)
 . W !!,"No platter data available for updating of report!"
"RTN","MAGSDOFF",150,0)
 . Q
"RTN","MAGSDOFF",151,0)
 ; add platter name at top; add end statement
"RTN","MAGSDOFF",152,0)
 S ^TMP($J,"PLATTER",0)="Media """_MAGPLAT_""""  ;platter name
"RTN","MAGSDOFF",153,0)
 S LAST="",LAST=$O(^TMP($J,"PLATTER",LAST),-1),LAST1=LAST+1
"RTN","MAGSDOFF",154,0)
 S ^TMP($J,"PLATTER",LAST1)=LAST_" Files Listed"
"RTN","MAGSDOFF",155,0)
 ;
"RTN","MAGSDOFF",156,0)
 S FILE=MAGPLAT_".TXT",Y=$$GTF^%ZISH($NA(^TMP($J,"PLATTER",0)),3,PATH,FILE)
"RTN","MAGSDOFF",157,0)
 I 'Y W !!,"Unable to create/update platter report",! W PATH_FILE Q
"RTN","MAGSDOFF",158,0)
 W !,"Finished"
"RTN","MAGSDOFF",159,0)
 Q
"RTN","MAGSDOFF",160,0)
 ;
"RTN","MAGSDOFF",161,0)
PLAT(MAGPLAT) ; starting at 30 char length, whittle down until unique
"RTN","MAGSDOFF",162,0)
 N MAGPLAT30,I
"RTN","MAGSDOFF",163,0)
 W !,"Original report name is greater than the allowed 30 characters,"
"RTN","MAGSDOFF",164,0)
 W !,?5,"a new name for the report will be generated for #2006.033."
"RTN","MAGSDOFF",165,0)
 S MAGPLAT30=""
"RTN","MAGSDOFF",166,0)
 F I=30:-1:2 D:MAGPLAT30'=MAGPLAT
"RTN","MAGSDOFF",167,0)
 . S MAGPLAT30=$E(MAGPLAT,1,I) D
"RTN","MAGSDOFF",168,0)
 . ; check to see if platter name already exist
"RTN","MAGSDOFF",169,0)
 . Q:$D(^MAGQUEUE(2006.033,"C",MAGPLAT30))
"RTN","MAGSDOFF",170,0)
 . S MAGPLAT=MAGPLAT30
"RTN","MAGSDOFF",171,0)
 . Q
"RTN","MAGSDOFF",172,0)
 ; unable to create unique platter name
"RTN","MAGSDOFF",173,0)
 I MAGPLAT30'=MAGPLAT Q "ERROR"
"RTN","MAGSDOFF",174,0)
 ;
"RTN","MAGSDOFF",175,0)
 Q MAGPLAT
"RTN","MAGSDOFF",176,0)
 ;
"RTN","MAGSDOFF",177,0)
ERR(TY,T1,T2,T3) ; error messaging
"RTN","MAGSDOFF",178,0)
 Q:'TY
"RTN","MAGSDOFF",179,0)
 I TY=2 W !!,"Unable to pull data from "_T1 Q
"RTN","MAGSDOFF",180,0)
 I TY=3 D  Q
"RTN","MAGSDOFF",181,0)
 . W !!,"Unable to add "_LN_" as an offline image",!
"RTN","MAGSDOFF",182,0)
 . D MSG^DIALOG("WE","",50,5,"T3") K T3
"RTN","MAGSDOFF",183,0)
 . Q
"RTN","MAGSDOFF",184,0)
 W !!,"Unable to access "_T2_T1
"RTN","MAGSDOFF",185,0)
 K TY,T1,T2
"RTN","MAGSDOFF",186,0)
 Q
"RTN","MAGSDOFF",187,0)
 ;
"RTN","MAGSDOFF",188,0)
MAIL(GRP) ; add "OFFLINE IMAGE TRACKERS" and/or active member
"RTN","MAGSDOFF",189,0)
 ;  No update if group exist w/active local member
"RTN","MAGSDOFF",190,0)
 ;  If no group add it, add DUZ as member and mag server
"RTN","MAGSDOFF",191,0)
 ;  If group w/o active local member, add DUZ as member and mag server
"RTN","MAGSDOFF",192,0)
 ;
"RTN","MAGSDOFF",193,0)
 N CHKG,CHKM,Y,TYPE,INT,ENR,XMY,ORG,DESC,MAGMAIL,MAGSVR,GRPIEN,RES
"RTN","MAGSDOFF",194,0)
 I GRP="" Q "No action taken, mail group name required"
"RTN","MAGSDOFF",195,0)
 S CHKG=$D(^XMB(3.8,"B",GRP)),CHKM=$$GOTLOCAL^XMXAPIG(GRP)
"RTN","MAGSDOFF",196,0)
 S MAGMAIL="G.MAG SERVER" I $D(^XMB(3.8,"B",$P(MAGMAIL,".",2))) D
"RTN","MAGSDOFF",197,0)
 . S MAGSVR="",MAGSVR=$O(^XMB(3.8,"B",$P(MAGMAIL,".",2),MAGSVR))
"RTN","MAGSDOFF",198,0)
 ;
"RTN","MAGSDOFF",199,0)
 ;  mail group exist w/active member
"RTN","MAGSDOFF",200,0)
 Q:CHKG&(CHKM) "Mail group '"_GRP_"' present with active member."
"RTN","MAGSDOFF",201,0)
 I '$D(DUZ) Q "No DUZ defined, unable to add/edit mail group."
"RTN","MAGSDOFF",202,0)
 ;
"RTN","MAGSDOFF",203,0)
 S (TYPE,ENR)=0,INT=1,ORG=DUZ,XMY(DUZ)=""
"RTN","MAGSDOFF",204,0)
 S DESC(1)="Mail group to send messages regarding accessing "
"RTN","MAGSDOFF",205,0)
 S DESC(1)=DESC(1)_"images on offline jukebox platters."
"RTN","MAGSDOFF",206,0)
 S Y=$$MG^XMBGRP(GRP,TYPE,ORG,ENR,.XMY,.DESC,INT)
"RTN","MAGSDOFF",207,0)
 I 'Y D  Q RES(1)_U_RES(2)
"RTN","MAGSDOFF",208,0)
 . S RES(1)="Unable to add mail group '"_GRP_"', contact "
"RTN","MAGSDOFF",209,0)
 . S RES(2)="Support if further assistance is needed."
"RTN","MAGSDOFF",210,0)
 S GRPIEN=Y
"RTN","MAGSDOFF",211,0)
 ;
"RTN","MAGSDOFF",212,0)
 ; add 'MAG SERVER' as member group if not already there
"RTN","MAGSDOFF",213,0)
 S (RES(3),RES(4))=""
"RTN","MAGSDOFF",214,0)
 I $D(MAGSVR)&('$D(^XMB(3.8,GRPIEN,5,"B",MAGSVR))) D
"RTN","MAGSDOFF",215,0)
 . D ADDMBRS^XMXAPIG(DUZ,GRP,MAGMAIL)
"RTN","MAGSDOFF",216,0)
 . Q:'$D(^XMB(3.8,GRPIEN,5,"B",MAGSVR))
"RTN","MAGSDOFF",217,0)
 . S RES(3)="Added member group: '"_MAGMAIL_"' to mail group"
"RTN","MAGSDOFF",218,0)
 . S RES(4)=" '"_GRP_"'"
"RTN","MAGSDOFF",219,0)
 ;
"RTN","MAGSDOFF",220,0)
 ; "offline" group and members added
"RTN","MAGSDOFF",221,0)
 I 'CHKG D  Q RES(1)_U_RES(2)_U_RES(3)
"RTN","MAGSDOFF",222,0)
 . S RES(1)="Mail group '"_GRP_"' created."
"RTN","MAGSDOFF",223,0)
 . S RES(2)="Added local user: '"_$P(^VA(200,DUZ,0),U)
"RTN","MAGSDOFF",224,0)
 . S RES(2)=RES(2)_"' to mail group"
"RTN","MAGSDOFF",225,0)
 ;
"RTN","MAGSDOFF",226,0)
 ; "offline" was present but w/o an active local user
"RTN","MAGSDOFF",227,0)
 S RES(1)="Added local user '"_$P(^VA(200,DUZ,0),U)
"RTN","MAGSDOFF",228,0)
 S RES(1)=RES(1)_"' to mail group '"_GRP_"'"
"RTN","MAGSDOFF",229,0)
 Q RES(1)_U_RES(3)_RES(4)
"RTN","MAGSDOFF",230,0)
 ;
"RTN","MAGSDOFF",231,0)
KILL ; remove before release
"RTN","MAGSDOFF",232,0)
 K ^MAGQUEUE(2006.033)
"RTN","MAGSDOFF",233,0)
 S ^MAGQUEUE(2006.033,0)="OFFLINE IMAGES^2006.033AO^"
"RTN","MAGSDOFF",234,0)
 Q
"RTN","MAGSDOFL")
0^12^B62340218
"RTN","MAGSDOFL",1,0)
MAGSDOFL ;WOIFO/SF - DEX & AA Track Offline Images ; 01/31/13
"RTN","MAGSDOFL",2,0)
 ;;3.0;IMAGING;**18,98,135**;Mar 19, 2002;Build 5238;Jul 17, 2013
"RTN","MAGSDOFL",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGSDOFL",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSDOFL",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGSDOFL",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGSDOFL",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGSDOFL",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGSDOFL",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGSDOFL",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGSDOFL",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGSDOFL",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGSDOFL",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGSDOFL",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGSDOFL",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGSDOFL",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSDOFL",17,0)
 ;;
"RTN","MAGSDOFL",18,0)
 Q
"RTN","MAGSDOFL",19,0)
ENTRY ;Interactive entry here
"RTN","MAGSDOFL",20,0)
 I '$D(DUZ) W !,"Use the MAG JB OFFLINE menu option to run this application" Q
"RTN","MAGSDOFL",21,0)
 N BOLD,NORMAL,N,R
"RTN","MAGSDOFL",22,0)
 D SETUP W @IOF
"RTN","MAGSDOFL",23,0)
LOOP ; main menu loop
"RTN","MAGSDOFL",24,0)
 D SETUP
"RTN","MAGSDOFL",25,0)
 W !!,$P($T(OPTIONS),";",3),!
"RTN","MAGSDOFL",26,0)
 S N=0 F I=1:1 S X=$P($T(OPTIONS+I),";",3,999) Q:X=""  D  ; list options
"RTN","MAGSDOFL",27,0)
 . I $P(X,";")="" Q
"RTN","MAGSDOFL",28,0)
 . S N=N+1 W !,?2,$J(N,2),?6,$P(X,";")
"RTN","MAGSDOFL",29,0)
 . Q
"RTN","MAGSDOFL",30,0)
 ;
"RTN","MAGSDOFL",31,0)
AGAIN ;
"RTN","MAGSDOFL",32,0)
 W !!,?2,"OPTION: " R " ",R:DTIME Q:R=""!(R="^")
"RTN","MAGSDOFL",33,0)
 I R["?" D HELP2 G AGAIN
"RTN","MAGSDOFL",34,0)
 I R?1N.N,R>0,R'>N D  G LOOP
"RTN","MAGSDOFL",35,0)
 . S N=0 F I=1:1 D  Q:X=""  I R=N D @($P(X,";",2)),RETURN Q
"RTN","MAGSDOFL",36,0)
 . . S X=$P($T(OPTIONS+I),";",3,999) Q:X=""
"RTN","MAGSDOFL",37,0)
 . . S N=N+1
"RTN","MAGSDOFL",38,0)
 . Q
"RTN","MAGSDOFL",39,0)
 W " ??? -- Invalid option.  Try again." G AGAIN
"RTN","MAGSDOFL",40,0)
 ;
"RTN","MAGSDOFL",41,0)
SETUP ;
"RTN","MAGSDOFL",42,0)
 I ^%ZOSF("OS")?1"MSM".E S IOF="#"
"RTN","MAGSDOFL",43,0)
 E  D HOME^%ZIS
"RTN","MAGSDOFL",44,0)
 S U="^"
"RTN","MAGSDOFL",45,0)
 S NORMAL=$C(27)_"[0;"_"44m" ; normal blue
"RTN","MAGSDOFL",46,0)
 S BOLD=$C(27)_"[1;"_"44m" ; bold blue
"RTN","MAGSDOFL",47,0)
 Q
"RTN","MAGSDOFL",48,0)
 ;
"RTN","MAGSDOFL",49,0)
RETURN ;
"RTN","MAGSDOFL",50,0)
 D SETUP
"RTN","MAGSDOFL",51,0)
 R !!,"Push <Enter> to continue...",X:DTIME
"RTN","MAGSDOFL",52,0)
 Q
"RTN","MAGSDOFL",53,0)
OFFLINE(MAGIN) ;Set images offline
"RTN","MAGSDOFL",54,0)
 N COUNT
"RTN","MAGSDOFL",55,0)
ASK1 I MAGIN="" R !!,"Enter file to read offline images from: ",X:DTIME
"RTN","MAGSDOFL",56,0)
 I X="" Q
"RTN","MAGSDOFL",57,0)
 I X="^" Q
"RTN","MAGSDOFL",58,0)
 I X["?" D HELP1 G ASK1
"RTN","MAGSDOFL",59,0)
 N IOP,MAGFDA,MAGFL
"RTN","MAGSDOFL",60,0)
 I MAGIN="" S MAGIN=X
"RTN","MAGSDOFL",61,0)
 S %ZIS="",%ZIS("HFSNAME")=MAGIN,%ZIS("HFSMODE")="R",IOP="HFS"
"RTN","MAGSDOFL",62,0)
 S X="ERROR^MAGSDOFL",@^%ZOSF("TRAP")
"RTN","MAGSDOFL",63,0)
 S MAGFL=2006.033
"RTN","MAGSDOFL",64,0)
 S COUNT=0
"RTN","MAGSDOFL",65,0)
 U IO(0) W !!,"Here goes nothing...",!
"RTN","MAGSDOFL",66,0)
 D ^%ZIS
"RTN","MAGSDOFL",67,0)
 F  U IO R LN:5 Q:LN["Files Listed"  D
"RTN","MAGSDOFL",68,0)
 . S COUNT=COUNT+1
"RTN","MAGSDOFL",69,0)
 . S LN=$$TRIM(LN)
"RTN","MAGSDOFL",70,0)
 . I LN["Media """ S MAGPLAT=$P(LN,"""",2) U IO(0) W !,MAGPLAT
"RTN","MAGSDOFL",71,0)
 . I COUNT#50=0 U IO(0) W "."
"RTN","MAGSDOFL",72,0)
 . S LN=$$FNAME(LN) Q:LN=""
"RTN","MAGSDOFL",73,0)
 . K MAGIEN S MAGIEN="?+1,"
"RTN","MAGSDOFL",74,0)
 . S MAGFDA(MAGFL,MAGIEN,.01)=LN
"RTN","MAGSDOFL",75,0)
 . S MAGFDA(MAGFL,MAGIEN,1)=MAGPLAT
"RTN","MAGSDOFL",76,0)
 . D UPDATE^DIE("","MAGFDA","MAGIEN","MAGERR")
"RTN","MAGSDOFL",77,0)
 . Q
"RTN","MAGSDOFL",78,0)
 W !,"Done."
"RTN","MAGSDOFL",79,0)
 Q
"RTN","MAGSDOFL",80,0)
LINE(OUT,LN,MAGPLAT) ;RPC - MAG UTIL JBOFFLN
"RTN","MAGSDOFL",81,0)
 ; LN := Process the line from JB platter/media report
"RTN","MAGSDOFL",82,0)
 ; MAGPLAT := platter name
"RTN","MAGSDOFL",83,0)
 ; OUT := return the result
"RTN","MAGSDOFL",84,0)
 ;        e.g.: '0, Done'
"RTN","MAGSDOFL",85,0)
 ;              '-1, Error message'
"RTN","MAGSDOFL",86,0)
 ;
"RTN","MAGSDOFL",87,0)
 N MAGFL,MAGIEN
"RTN","MAGSDOFL",88,0)
 S OUT(0)=0,MAGFL=2006.033 ;;JB offline file
"RTN","MAGSDOFL",89,0)
 I ($G(LN)="")!($G(MAGPLAT)="") S OUT(0)="-1,No text line value or specified platter" Q
"RTN","MAGSDOFL",90,0)
 S LN=$$TRIM(LN)
"RTN","MAGSDOFL",91,0)
 S LN=$$FNAME(LN) Q:LN=""
"RTN","MAGSDOFL",92,0)
 K MAGIEN S MAGIEN="?+1,"
"RTN","MAGSDOFL",93,0)
 S MAGFDA(MAGFL,MAGIEN,.01)=LN
"RTN","MAGSDOFL",94,0)
 S MAGFDA(MAGFL,MAGIEN,1)=MAGPLAT
"RTN","MAGSDOFL",95,0)
 D UPDATE^DIE("","MAGFDA","MAGIEN","MAGERR")
"RTN","MAGSDOFL",96,0)
 S OUT(0)="0,Done"
"RTN","MAGSDOFL",97,0)
 Q
"RTN","MAGSDOFL",98,0)
FNAME(LN) ;Find img file name
"RTN","MAGSDOFL",99,0)
 N XX  ;OTG 4x or 5x
"RTN","MAGSDOFL",100,0)
 I LN["\" D  Q XX
"RTN","MAGSDOFL",101,0)
 . F N=1:1 S XX=$P(LN,"\",N) Q:XX=""  I XX?.E1"."2.5AN S LN=XX Q
"RTN","MAGSDOFL",102,0)
 ;OTG 3x
"RTN","MAGSDOFL",103,0)
 I $P(LN," ",1)'?.E1"."2.5AN Q ""
"RTN","MAGSDOFL",104,0)
 S LN=$P(LN," ")
"RTN","MAGSDOFL",105,0)
 Q LN
"RTN","MAGSDOFL",106,0)
ONLINE(MAGPLAT) ;Set images back online
"RTN","MAGSDOFL",107,0)
 ;
"RTN","MAGSDOFL",108,0)
ASK I MAGPLAT="" U IO(0) R !!,"Enter the name of the platter being inserted: ",X:DTIME
"RTN","MAGSDOFL",109,0)
 I X="" Q
"RTN","MAGSDOFL",110,0)
 I X="^" Q
"RTN","MAGSDOFL",111,0)
 I X["?" D HELP G ASK
"RTN","MAGSDOFL",112,0)
 N MAGENT
"RTN","MAGSDOFL",113,0)
 S MAGPLAT=X
"RTN","MAGSDOFL",114,0)
 I '$D(^MAGQUEUE(2006.033,"C",MAGPLAT)) W "  Platter not on file..." Q
"RTN","MAGSDOFL",115,0)
 S DIK="^MAGQUEUE(2006.033,"
"RTN","MAGSDOFL",116,0)
 S MAGENT=""
"RTN","MAGSDOFL",117,0)
 F  S MAGENT=$O(^MAGQUEUE(2006.033,"C",MAGPLAT,MAGENT)) Q:'MAGENT  D
"RTN","MAGSDOFL",118,0)
 . S DA=MAGENT
"RTN","MAGSDOFL",119,0)
 . D ^DIK
"RTN","MAGSDOFL",120,0)
 . I $D(Y) U IO(0) W "."
"RTN","MAGSDOFL",121,0)
 . E  U IO(0) W !,"Problem deleting entry# "_MAGENT
"RTN","MAGSDOFL",122,0)
 U IO(0) W !,"Done."
"RTN","MAGSDOFL",123,0)
 Q
"RTN","MAGSDOFL",124,0)
HELP ;List offline platters
"RTN","MAGSDOFL",125,0)
 U IO(0) W !,"Do you want to see a list of all offline platters? " R X:60
"RTN","MAGSDOFL",126,0)
 I "?"[$E(X) W !!,"Answer ""yes"" to see a list of platters currently marked offline"
"RTN","MAGSDOFL",127,0)
 I "?"[$E(X) W !,"Answer ""no"" to return",! G HELP
"RTN","MAGSDOFL",128,0)
 I "Yy"'[$E(X) Q
"RTN","MAGSDOFL",129,0)
LISTP S MAGPLAT=""
"RTN","MAGSDOFL",130,0)
 F  S MAGPLAT=$O(^MAGQUEUE(2006.033,"C",MAGPLAT)) D  Q:MAGPLAT=""
"RTN","MAGSDOFL",131,0)
 . U IO(0) W !,MAGPLAT
"RTN","MAGSDOFL",132,0)
 Q
"RTN","MAGSDOFL",133,0)
LISTOFL(OUT) ;RPC - MAG UTIL LSTOFLJB ;LIST OFFLINE JB PLATTER(S) ;;*98
"RTN","MAGSDOFL",134,0)
 N MAGPLAT,CNT  S MAGPLAT="",OUT(1)="0"
"RTN","MAGSDOFL",135,0)
 F CNT=1:1 S MAGPLAT=$O(^MAGQUEUE(2006.033,"C",MAGPLAT)) Q:MAGPLAT=""  S OUT(CNT)=MAGPLAT
"RTN","MAGSDOFL",136,0)
 Q
"RTN","MAGSDOFL",137,0)
BKONL(OUT,MAGPLAT) ;RPC - MAG UTIL BKONLJB ;Put images back online (Insert Jukebox Platter)
"RTN","MAGSDOFL",138,0)
 N DIK,CNT,DA,Y
"RTN","MAGSDOFL",139,0)
 S OUT(1)="0"
"RTN","MAGSDOFL",140,0)
 I $G(MAGPLAT)="" S OUT(1)="-1,No JB Platter specified" Q
"RTN","MAGSDOFL",141,0)
 I $O(^MAGQUEUE(2006.033,"C",MAGPLAT,0))="" S OUT(1)="-1,Platter not on file 2006.033 -"_MAGPLAT Q
"RTN","MAGSDOFL",142,0)
 S DIK="^MAGQUEUE(2006.033,",MAGENT=""
"RTN","MAGSDOFL",143,0)
 F CNT=0:1 S MAGENT=$O(^MAGQUEUE(2006.033,"C",MAGPLAT,MAGENT)) Q:'MAGENT  D
"RTN","MAGSDOFL",144,0)
 . S DA=MAGENT D ^DIK
"RTN","MAGSDOFL",145,0)
 I $D(Y) S OUT(1)="0,Done "_CNT
"RTN","MAGSDOFL",146,0)
 Q
"RTN","MAGSDOFL",147,0)
GROUP ;Remove platters in group
"RTN","MAGSDOFL",148,0)
 N COUNT,MAGPLAT,PLAT,X,TOTAL,MAGIEN,CNT,IOP,MAGFDA,MAGFL,POP
"RTN","MAGSDOFL",149,0)
ASK3 R !!,"Enter 'DIR' file to read offline platter TXT from: ",X:$G(DTIME)
"RTN","MAGSDOFL",150,0)
 I X=""!(X="^") Q
"RTN","MAGSDOFL",151,0)
 I X["?" D HELP3 G ASK3
"RTN","MAGSDOFL",152,0)
 S MAGIN=X ;DIR filename
"RTN","MAGSDOFL",153,0)
 S %ZIS="",%ZIS("HFSNAME")=MAGIN,%ZIS("HFSMODE")="R",IOP="HFS"
"RTN","MAGSDOFL",154,0)
 S X="ERROR^MAGSDOFL",@^%ZOSF("TRAP")
"RTN","MAGSDOFL",155,0)
 D ^%ZIS
"RTN","MAGSDOFL",156,0)
 F  U IO R MAGPLAT:30 Q:($G(MAGPLAT)="")!($G(MAGPLAT)["~end")  I $L(MAGPLAT) S MAGPLAT(MAGPLAT)=0 U IO(0) W "|"
"RTN","MAGSDOFL",157,0)
 D ^%ZISC
"RTN","MAGSDOFL",158,0)
 S MAGFL=2006.033
"RTN","MAGSDOFL",159,0)
 U IO(0) W !!,"Here goes nothing...",!,"50 per '.'",!
"RTN","MAGSDOFL",160,0)
 S PLAT="" F CNT=0:1 S PLAT=$O(MAGPLAT(PLAT)) Q:PLAT=""  U IO(0) W !,PLAT D
"RTN","MAGSDOFL",161,0)
 . S COUNT=0,%ZIS="",%ZIS("HFSNAME")=PLAT,%ZIS("HFSMODE")="R",IOP="HFS"
"RTN","MAGSDOFL",162,0)
 . S X="ERROR^MAGSDOFL",@^%ZOSF("TRAP")
"RTN","MAGSDOFL",163,0)
 . D ^%ZIS I POP W !,"Sorry, ",PLAT," not found, try later.",! Q
"RTN","MAGSDOFL",164,0)
 . F  U IO R LN:5 D
"RTN","MAGSDOFL",165,0)
 . . S COUNT=COUNT+1,TOTAL=$G(TOTAL)+1
"RTN","MAGSDOFL",166,0)
 . . S LN=$$TRIM(LN)
"RTN","MAGSDOFL",167,0)
 . . I LN["Media """ S MAGPLAT=$P(LN,"""",2) U IO(0) W !,MAGPLAT
"RTN","MAGSDOFL",168,0)
 . . I COUNT#50=0 U IO(0) W "."
"RTN","MAGSDOFL",169,0)
 . . S LN=$$FNAME(LN) Q:LN=""
"RTN","MAGSDOFL",170,0)
 . . K MAGIEN S MAGIEN="?+1,"
"RTN","MAGSDOFL",171,0)
 . . S MAGFDA(MAGFL,MAGIEN,.01)=LN
"RTN","MAGSDOFL",172,0)
 . . S MAGFDA(MAGFL,MAGIEN,1)=MAGPLAT
"RTN","MAGSDOFL",173,0)
 . . D UPDATE^DIE("","MAGFDA","MAGIEN","MAGERR")
"RTN","MAGSDOFL",174,0)
 . . Q
"RTN","MAGSDOFL",175,0)
 . D ^%ZISC ;cls media report
"RTN","MAGSDOFL",176,0)
 . Q
"RTN","MAGSDOFL",177,0)
 U IO(0) W !,"Done (",CNT," platter(s), total files ",TOTAL," were marked offline.)",!
"RTN","MAGSDOFL",178,0)
 Q
"RTN","MAGSDOFL",179,0)
HELP1 ;Help for offline
"RTN","MAGSDOFL",180,0)
 W !,"Enter the name of the file created by the jukebox media file report"
"RTN","MAGSDOFL",181,0)
 Q
"RTN","MAGSDOFL",182,0)
HELP2 ;Help for OPTION prompt
"RTN","MAGSDOFL",183,0)
 W !,"Select option 1 if you are marking DEX images offline"
"RTN","MAGSDOFL",184,0)
 W !,"Select option 2 if you are marking images online"
"RTN","MAGSDOFL",185,0)
 W !,"Select option 3 if you want the listing of off-line platter(s)"
"RTN","MAGSDOFL",186,0)
 W !,"Select option 4 if you are taking the group of platters off-line"
"RTN","MAGSDOFL",187,0)
 W !,"Select option 5 if you are marking Archive Appliance (AA) images offline"
"RTN","MAGSDOFL",188,0)
 W !,"Type ""^"" to quit"
"RTN","MAGSDOFL",189,0)
 Q
"RTN","MAGSDOFL",190,0)
HELP3 ;Help for GROUP platters TXT
"RTN","MAGSDOFL",191,0)
 W !,"Enter the full file name that is grouped by the jukebox media TXT file report",!
"RTN","MAGSDOFL",192,0)
 W !,"For example: you do 'DIR JB*.TXT /B /S > [USER]DIR.TXT' ,append '~end' at end of file",!
"RTN","MAGSDOFL",193,0)
 W !,"Then use [USER]DIR.TXT as source file",!
"RTN","MAGSDOFL",194,0)
 Q
"RTN","MAGSDOFL",195,0)
 ;
"RTN","MAGSDOFL",196,0)
TRIM(X) ;
"RTN","MAGSDOFL",197,0)
 N I,J
"RTN","MAGSDOFL",198,0)
 F I=1:1:$L(X) Q:$E(X,I)'=" "
"RTN","MAGSDOFL",199,0)
 F J=$L(X):-1:I Q:$E(X,J)'=" "
"RTN","MAGSDOFL",200,0)
 Q $E(X,I,J)
"RTN","MAGSDOFL",201,0)
ERROR ;Trap Errors Here
"RTN","MAGSDOFL",202,0)
 D ^%ZISC
"RTN","MAGSDOFL",203,0)
 Q
"RTN","MAGSDOFL",204,0)
OPTIONS ; Offline Image Menu
"RTN","MAGSDOFL",205,0)
 ;;Take DEX images offline (Remove Jukebox Platter);OFFLINE("")
"RTN","MAGSDOFL",206,0)
 ;;Put images back online (Insert Jukebox Platter);ONLINE("")
"RTN","MAGSDOFL",207,0)
 ;;Take images offline (Group platters);GROUP
"RTN","MAGSDOFL",208,0)
 ;;List current offline Jukebox Platter;LISTP
"RTN","MAGSDOFL",209,0)
 ;;Take 'AA' Archive Appliance images offline (Remove Jukebox Platter);EN^MAGSDOFF
"VER")
8.0^22.0
"^DD",2005,2005,113,0)
STATUS^RS^1:Viewable;2:QA Reviewed;10:In Progress;11:Needs Review;12:Deleted;13:Image Never Existed;^100;8^Q
"^DD",2005,2005,113,3)
Select the current status of the image.
"^DD",2005,2005,113,20,0)
^.3LA^1^1
"^DD",2005,2005,113,20,1,0)
MAG*3*93
"^DD",2005,2005,113,21,0)
^.001^37^37^3130404^^^^
"^DD",2005,2005,113,21,1,0)
Viewable  
"^DD",2005,2005,113,21,2,0)
 
"^DD",2005,2005,113,21,3,0)
  By default, all images are viewable, and images
"^DD",2005,2005,113,21,4,0)
  with no status are considered viewable.
"^DD",2005,2005,113,21,5,0)
 
"^DD",2005,2005,113,21,6,0)
QA Reviewed
"^DD",2005,2005,113,21,7,0)
 
"^DD",2005,2005,113,21,8,0)
  A user has viewed the image and verified that
"^DD",2005,2005,113,21,9,0)
  the patient identifier and values of index 
"^DD",2005,2005,113,21,10,0)
  fields are correct for this image.
"^DD",2005,2005,113,21,11,0)
 
"^DD",2005,2005,113,21,12,0)
 
"^DD",2005,2005,113,21,13,0)
In Progress
"^DD",2005,2005,113,21,14,0)
 
"^DD",2005,2005,113,21,15,0)
  When capturing image groups, this status will
"^DD",2005,2005,113,21,16,0)
  indicate that the images are being added to the
"^DD",2005,2005,113,21,17,0)
  group of images. When the process is complete,
"^DD",2005,2005,113,21,18,0)
  the status will change to Viewable. 
"^DD",2005,2005,113,21,19,0)
 
"^DD",2005,2005,113,21,20,0)
Needs Review
"^DD",2005,2005,113,21,21,0)
  
"^DD",2005,2005,113,21,22,0)
  Indicates that value(s) of the index fields or 
"^DD",2005,2005,113,21,23,0)
  patient identifier have been found to be
"^DD",2005,2005,113,21,24,0)
  incorrect. VistA Imaging Display application
"^DD",2005,2005,113,21,25,0)
  will block images with this status from being
"^DD",2005,2005,113,21,26,0)
  viewed. The Image Edit utility can be used to
"^DD",2005,2005,113,21,27,0)
  modify the incorrect values of the index fields.
"^DD",2005,2005,113,21,28,0)
 
"^DD",2005,2005,113,21,29,0)
Deleted
"^DD",2005,2005,113,21,30,0)
 
"^DD",2005,2005,113,21,31,0)
  Marks the image as deleted.
"^DD",2005,2005,113,21,32,0)
  
"^DD",2005,2005,113,21,33,0)
Image Never Existed
"^DD",2005,2005,113,21,34,0)
 
"^DD",2005,2005,113,21,35,0)
  There was an Error while copying the Image to
"^DD",2005,2005,113,21,36,0)
  the Image Share.  The Image entry is deleted
"^DD",2005,2005,113,21,37,0)
  and the status is set as Image Never Existed.
"^DD",2005,2005,113,23,0)
^.001^4^4^3130404^^^^
"^DD",2005,2005,113,23,1,0)
Use only positive canonic numbers for internal values.
"^DD",2005,2005,113,23,2,0)
 
"^DD",2005,2005,113,23,3,0)
Added by the patch MAG*3*93.
"^DD",2005,2005,113,23,4,0)
Updated by the patch MAG*3*135
"^DD",2005,2005,113,"DT")
3130222
"^DD",2005.1,2005.1,113,0)
STATUS^S^1:Viewable;2:QA Reviewed;10:In Progress;11:Needs Review;12:Deleted;13:Image Never Existed;^100;8^Q
"^DD",2005.1,2005.1,113,3)
Select the current status of the image.
"^DD",2005.1,2005.1,113,5,1,0)
2005.1^.01^2
"^DD",2005.1,2005.1,113,9)
^
"^DD",2005.1,2005.1,113,20,0)
^.3LA^1^1
"^DD",2005.1,2005.1,113,20,1,0)
MAG*3*93
"^DD",2005.1,2005.1,113,21,0)
^.001^35^35^3130701^^^^
"^DD",2005.1,2005.1,113,21,1,0)
Viewable 
"^DD",2005.1,2005.1,113,21,2,0)
   
"^DD",2005.1,2005.1,113,21,3,0)
  By default, all images are viewable, and images
"^DD",2005.1,2005.1,113,21,4,0)
  with no status are considered viewable.
"^DD",2005.1,2005.1,113,21,5,0)
  
"^DD",2005.1,2005.1,113,21,6,0)
QA Reviewed
"^DD",2005.1,2005.1,113,21,7,0)
   
"^DD",2005.1,2005.1,113,21,8,0)
  A user has viewed the image and verified that
"^DD",2005.1,2005.1,113,21,9,0)
  the patient identifier and values of index
"^DD",2005.1,2005.1,113,21,10,0)
  index fields are correct for this image.
"^DD",2005.1,2005.1,113,21,11,0)
   
"^DD",2005.1,2005.1,113,21,12,0)
In Progress
"^DD",2005.1,2005.1,113,21,13,0)
   
"^DD",2005.1,2005.1,113,21,14,0)
  When capturing image groups, this status will
"^DD",2005.1,2005.1,113,21,15,0)
  indicate that the images are being added to the
"^DD",2005.1,2005.1,113,21,16,0)
  group of images.  When the process is complete,
"^DD",2005.1,2005.1,113,21,17,0)
  the status will change to viewable.
"^DD",2005.1,2005.1,113,21,18,0)
   
"^DD",2005.1,2005.1,113,21,19,0)
Needs Review
"^DD",2005.1,2005.1,113,21,20,0)
   
"^DD",2005.1,2005.1,113,21,21,0)
  Indicates that the values(s) of the index fields or
"^DD",2005.1,2005.1,113,21,22,0)
  patient identifier have been found to be
"^DD",2005.1,2005.1,113,21,23,0)
  incorrect.  The VistA Imaging Display application
"^DD",2005.1,2005.1,113,21,24,0)
  will block images with this status from being
"^DD",2005.1,2005.1,113,21,25,0)
  viewed.  The Image Edit utility can be used to
"^DD",2005.1,2005.1,113,21,26,0)
  modify the incorrect value(s) of the index fields.
"^DD",2005.1,2005.1,113,21,27,0)
  
"^DD",2005.1,2005.1,113,21,28,0)
Deleted
"^DD",2005.1,2005.1,113,21,29,0)
  Marks the image as deleted.
"^DD",2005.1,2005.1,113,21,30,0)
 
"^DD",2005.1,2005.1,113,21,31,0)
Image Never Existed
"^DD",2005.1,2005.1,113,21,32,0)
  There was an Error while copying the Image to
"^DD",2005.1,2005.1,113,21,33,0)
  the Image Share.  The Image entry is deleted
"^DD",2005.1,2005.1,113,21,34,0)
  and the status is set as Image Never Existed.
"^DD",2005.1,2005.1,113,21,35,0)
 
"^DD",2005.1,2005.1,113,23,0)
^.001^1^1^3130701^^^^
"^DD",2005.1,2005.1,113,23,1,0)
Use only positive canonic numbers for internal values.
"^DD",2005.1,2005.1,113,"DT")
3130701
"^DD",2005.2,2005.2,6,0)
STORAGE TYPE^RSO^MAG:MAGNETIC;WORM-DG:WORM-DG;WORM-PDT:WORM-PDT;RW:READ/WRITE;WORM-OTG:WORM-OTG;EKG:MUSE-EKG;GCC:EXPORT;DGM:DIAGRAM;URL:URL;RTR:ROUTER;GRP:RAID-GROUP;^0;7^Q
"^DD",2005.2,2005.2,6,1,0)
^.1
"^DD",2005.2,2005.2,6,1,1,0)
2005.2^E
"^DD",2005.2,2005.2,6,1,1,1)
S ^MAG(2005.2,"E",$E(X,1,30),DA)=""
"^DD",2005.2,2005.2,6,1,1,2)
K ^MAG(2005.2,"E",$E(X,1,30),DA)
"^DD",2005.2,2005.2,6,1,1,"%D",0)
^.101^1^1^3030813^^
"^DD",2005.2,2005.2,6,1,1,"%D",1,0)
Storage Type cross reference
"^DD",2005.2,2005.2,6,1,1,"DT")
3000131
"^DD",2005.2,2005.2,6,2)
S Y(0)=Y S Y=$S(Y["MAG":"TIER 1",Y["WORM":"TIER 2",1:Y)
"^DD",2005.2,2005.2,6,2.1)
S Y=$S(Y["MAG":"TIER 1",Y["WORM":"TIER 2",1:Y)
"^DD",2005.2,2005.2,6,3)
Enter the type of storage for this network location.
"^DD",2005.2,2005.2,6,21,0)
^.001^18^18^3130110^^^^
"^DD",2005.2,2005.2,6,21,1,0)
This field describes the media type of this network location. 
"^DD",2005.2,2005.2,6,21,2,0)
It should be MAGNETIC for a magnetic disk server.
"^DD",2005.2,2005.2,6,21,3,0)
 
"^DD",2005.2,2005.2,6,21,4,0)
Jukeboxes should be WORM-DG for Data General Jukeboxes under 
"^DD",2005.2,2005.2,6,21,5,0)
OpenNetware or WORM-PDT for Pegasus Jukeboxes or WORM-OTG for 
"^DD",2005.2,2005.2,6,21,6,0)
OTG Disk Extender. WORM-DG and WORM-PDT are for backward 
"^DD",2005.2,2005.2,6,21,7,0)
compatibility only. Note: WORM stands for Write Once, Read Many.
"^DD",2005.2,2005.2,6,21,8,0)
 
"^DD",2005.2,2005.2,6,21,9,0)
The GCC type refers to the Generic Carbon Copy (GCC) utility. 
"^DD",2005.2,2005.2,6,21,10,0)
 
"^DD",2005.2,2005.2,6,21,11,0)
URL is used for Web based file access. 
"^DD",2005.2,2005.2,6,21,12,0)
 
"^DD",2005.2,2005.2,6,21,13,0)
Type 'RTR' should be used to identify network entries that are 
"^DD",2005.2,2005.2,6,21,14,0)
used for Routing images.
"^DD",2005.2,2005.2,6,21,15,0)
 
"^DD",2005.2,2005.2,6,21,16,0)
Type 'GRP' will identify a group entry and will allow sites to group 
"^DD",2005.2,2005.2,6,21,17,0)
network locations. This functionality is useful for the Background 
"^DD",2005.2,2005.2,6,21,18,0)
Processor and Verifier applications.
"^DD",2005.2,2005.2,6,23,0)
^^1^1^3130110^
"^DD",2005.2,2005.2,6,23,1,0)
The purpose of the Output Transform is to provide the user terminology consistent with modern network storage vernacular.
"^DD",2005.2,2005.2,6,"DT")
3121226
"^DD",2006.1,2006.1,11.5,0)
TIER 2 RESERVE^NJ2,0^^1;9^K:+X'=X!(X>50)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.1,2006.1,11.5,3)
Type a number between 0 and 50, 0 decimal digits.
"^DD",2006.1,2006.1,11.5,21,0)
^.001^6^6^3130124^^^^
"^DD",2006.1,2006.1,11.5,21,1,0)
This field allows sites to define a minimum percentage of free space
"^DD",2006.1,2006.1,11.5,21,2,0)
in the tier 2 storage device in order to prevent loss of cache space
"^DD",2006.1,2006.1,11.5,21,3,0)
for temporary storage. The default value is 5.
"^DD",2006.1,2006.1,11.5,21,4,0)
The Background Processor JUKEBOX queue will not write to the currently
"^DD",2006.1,2006.1,11.5,21,5,0)
designated tier 2 storage share if this percent storage capacity is not
"^DD",2006.1,2006.1,11.5,21,6,0)
available or accessible from the Background Processor application.
"^DD",2006.1,2006.1,11.5,"DT")
3130123
**END**
**END**


****
****
