KIDS Distribution saved on Apr 19, 2013@07:38:43
VistA Imaging V3.0 Patch 119 - VIX Maintenance 04/19/2013 07:38AM
**KIDS**:MAG*3.0*119^

**INSTALL NAME**
MAG*3.0*119
"BLD",3463,0)
MAG*3.0*119^IMAGING^0^3130419^y
"BLD",3463,1,0)
^^12^12^3130419
"BLD",3463,1,1,0)
VistA Imaging V3.0 Patch 119 - VIX Maintenance
"BLD",3463,1,2,0)
 
"BLD",3463,1,3,0)
 
"BLD",3463,1,4,0)
Routines:
"BLD",3463,1,5,0)
MAGDQR20    new value = 81382507
"BLD",3463,1,6,0)
MAGDQR21    new value = 172485019
"BLD",3463,1,7,0)
MAGGDEV    new value = 10283027
"BLD",3463,1,8,0)
MAGGTUX5    new value = 5574202
"BLD",3463,1,9,0)
MAGIP119    new value = 4769868
"BLD",3463,1,10,0)
 
"BLD",3463,1,11,0)
Please note that routine MAGIP119 is deleted after the KIDS Build is
"BLD",3463,1,12,0)
installed.
"BLD",3463,4,0)
^9.64PA^2005.1^1
"BLD",3463,4,2005.1,0)
2005.1
"BLD",3463,4,2005.1,2,0)
^9.641^2005.1^1
"BLD",3463,4,2005.1,2,2005.1,0)
IMAGE AUDIT  (File-top level)
"BLD",3463,4,2005.1,2,2005.1,1,0)
^9.6411^60^1
"BLD",3463,4,2005.1,2,2005.1,1,60,0)
PACS UID
"BLD",3463,4,2005.1,222)
y^y^p^^^^n^^n
"BLD",3463,4,2005.1,224)

"BLD",3463,4,"APDD",2005.1,2005.1)

"BLD",3463,4,"APDD",2005.1,2005.1,60)

"BLD",3463,4,"B",2005.1,2005.1)

"BLD",3463,6.3)
V3.0p119Build4396_T4
"BLD",3463,"ABNS",0)
^9.66A^^
"BLD",3463,"ABPKG")
n^n^G.IMAGING DEVELOPMENT TEAM@DOMAIN.EXT
"BLD",3463,"INI")
PRE^MAGIP119
"BLD",3463,"INID")
n^y^y
"BLD",3463,"INIT")
POS^MAGIP119
"BLD",3463,"KRN",0)
^9.67PA^8994^19
"BLD",3463,"KRN",.4,0)
.4
"BLD",3463,"KRN",.401,0)
.401
"BLD",3463,"KRN",.402,0)
.402
"BLD",3463,"KRN",.403,0)
.403
"BLD",3463,"KRN",.5,0)
.5
"BLD",3463,"KRN",.84,0)
.84
"BLD",3463,"KRN",3.6,0)
3.6
"BLD",3463,"KRN",3.8,0)
3.8
"BLD",3463,"KRN",9.2,0)
9.2
"BLD",3463,"KRN",9.8,0)
9.8
"BLD",3463,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",3463,"KRN",9.8,"NM",1,0)
MAGDQR20^^0^B81382507
"BLD",3463,"KRN",9.8,"NM",2,0)
MAGDQR21^^0^B172485019
"BLD",3463,"KRN",9.8,"NM",3,0)
MAGGDEV^^0^B10283027
"BLD",3463,"KRN",9.8,"NM",4,0)
MAGGTUX5^^0^B5574202
"BLD",3463,"KRN",9.8,"NM",5,0)
MAGIP119^^0^B4769868
"BLD",3463,"KRN",9.8,"NM","B","MAGDQR20",1)

"BLD",3463,"KRN",9.8,"NM","B","MAGDQR21",2)

"BLD",3463,"KRN",9.8,"NM","B","MAGGDEV",3)

"BLD",3463,"KRN",9.8,"NM","B","MAGGTUX5",4)

"BLD",3463,"KRN",9.8,"NM","B","MAGIP119",5)

"BLD",3463,"KRN",19,0)
19
"BLD",3463,"KRN",19.1,0)
19.1
"BLD",3463,"KRN",101,0)
101
"BLD",3463,"KRN",409.61,0)
409.61
"BLD",3463,"KRN",771,0)
771
"BLD",3463,"KRN",870,0)
870
"BLD",3463,"KRN",8989.51,0)
8989.51
"BLD",3463,"KRN",8989.52,0)
8989.52
"BLD",3463,"KRN",8994,0)
8994
"BLD",3463,"KRN",8994,"NM",0)
^9.68A^1^1
"BLD",3463,"KRN",8994,"NM",1,0)
MAG DOD GET STUDIES IEN^^0
"BLD",3463,"KRN",8994,"NM","B","MAG DOD GET STUDIES IEN",1)

"BLD",3463,"KRN","B",.4,.4)

"BLD",3463,"KRN","B",.401,.401)

"BLD",3463,"KRN","B",.402,.402)

"BLD",3463,"KRN","B",.403,.403)

"BLD",3463,"KRN","B",.5,.5)

"BLD",3463,"KRN","B",.84,.84)

"BLD",3463,"KRN","B",3.6,3.6)

"BLD",3463,"KRN","B",3.8,3.8)

"BLD",3463,"KRN","B",9.2,9.2)

"BLD",3463,"KRN","B",9.8,9.8)

"BLD",3463,"KRN","B",19,19)

"BLD",3463,"KRN","B",19.1,19.1)

"BLD",3463,"KRN","B",101,101)

"BLD",3463,"KRN","B",409.61,409.61)

"BLD",3463,"KRN","B",771,771)

"BLD",3463,"KRN","B",870,870)

"BLD",3463,"KRN","B",8989.51,8989.51)

"BLD",3463,"KRN","B",8989.52,8989.52)

"BLD",3463,"KRN","B",8994,8994)

"BLD",3463,"REQB",0)
^9.611^1^1
"BLD",3463,"REQB",1,0)
MAG*3.0*104^2
"BLD",3463,"REQB","B","MAG*3.0*104",1)

"FIA",2005.1)
IMAGE AUDIT
"FIA",2005.1,0)
^MAG(2005.1,
"FIA",2005.1,0,0)
2005.1I
"FIA",2005.1,0,1)
y^y^p^^^^n^^n
"FIA",2005.1,0,10)

"FIA",2005.1,0,11)

"FIA",2005.1,0,"RLRO")

"FIA",2005.1,0,"VR")
3.0^MAG
"FIA",2005.1,2005.1)
1
"FIA",2005.1,2005.1,60)

"INI")
PRE^MAGIP119
"INIT")
POS^MAGIP119
"KRN",8994,123457,-1)
0^1
"KRN",8994,123457,0)
MAG DOD GET STUDIES IEN^STUDY2^MAGDQR21^2^R^0^^0^3
"KRN",8994,123457,1,0)
^8994.01^3^3^3120510^^^^
"KRN",8994,123457,1,1,0)
This Remote Procedure returns information about studies,
"KRN",8994,123457,1,2,0)
based upon the IEN (File #2005 or #2005.1) of the image group, Patient Number,
"KRN",8994,123457,1,3,0)
Study-Level Only Flag, and Include Deleted Images Flag that are provided as parameters.
"KRN",8994,123457,2,0)
^8994.02A^4^4
"KRN",8994,123457,2,1,0)
GROUPS^2^1000^1^1
"KRN",8994,123457,2,1,1,0)
^8994.021^6^6^3120117^^
"KRN",8994,123457,2,1,1,1,0)
This parameter can either be provided as a single value or as an array.
"KRN",8994,123457,2,1,1,2,0)
Each value found (either GROUPS or GROUPS(i)) will be evaluated by the Remote Procedure.
"KRN",8994,123457,2,1,1,3,0)
Each value found must be the IEN in file #2005 or #2005.1 of a group of images.
"KRN",8994,123457,2,1,1,4,0)
For each group specified, the Remote Procedure will find the study to which
"KRN",8994,123457,2,1,1,5,0)
that group belongs, and then return
"KRN",8994,123457,2,1,1,6,0)
a hierarchical list of all series and images in that study.
"KRN",8994,123457,2,2,0)
REQDFN^1^50^1^2
"KRN",8994,123457,2,2,1,0)
^^1^1^3120117^
"KRN",8994,123457,2,2,1,1,0)
This parameter is Patient Number who owns the images.
"KRN",8994,123457,2,3,0)
IMGLESS^1^1^0^3
"KRN",8994,123457,2,3,1,0)
^8994.021^3^3^3120117^^
"KRN",8994,123457,2,3,1,1,0)
This parameter is an indicator whether to get only Study-Level or include all images.
"KRN",8994,123457,2,3,1,2,0)
Pass "1" to get only Study-Level data.
"KRN",8994,123457,2,3,1,3,0)
Pass null or empty string to include all images.
"KRN",8994,123457,2,4,0)
FLAGS^1^1^1^4
"KRN",8994,123457,2,4,1,0)
^8994.021^3^3^3120510^^
"KRN",8994,123457,2,4,1,1,0)
This parameter is an indicator whether to include or exclude "Deleted" Images.
"KRN",8994,123457,2,4,1,2,0)
Pass "D" to include Deleted Images.
"KRN",8994,123457,2,4,1,3,0)
Pass null or empty string to exclude Deleted Images
"KRN",8994,123457,2,"B","FLAGS",4)

"KRN",8994,123457,2,"B","GROUPS",1)

"KRN",8994,123457,2,"B","IMGLESS",3)

"KRN",8994,123457,2,"B","REQDFN",2)

"KRN",8994,123457,2,"PARAMSEQ",1,1)

"KRN",8994,123457,2,"PARAMSEQ",2,2)

"KRN",8994,123457,2,"PARAMSEQ",3,3)

"KRN",8994,123457,2,"PARAMSEQ",4,4)

"KRN",8994,123457,3,0)
^8994.03^28^28^3120510^^^^
"KRN",8994,123457,3,1,0)
This Remote Procedure returns an array with information.
"KRN",8994,123457,3,2,0)
If there is an error in the execution of the Remote Procedure,
"KRN",8994,123457,3,3,0)
the first element of this array with start with a negative number,
"KRN",8994,123457,3,4,0)
and the rest of the value in that array element will describe the error.
"KRN",8994,123457,3,5,0)
 
"KRN",8994,123457,3,6,0)
Otherwise, the value of the first element is the number of valid further elements
"KRN",8994,123457,3,7,0)
and each further element of the output array will follow the
"KRN",8994,123457,3,8,0)
general format of a keyword, then a vertical bar, and then one or more
"KRN",8994,123457,3,9,0)
values associated with that keyword.
"KRN",8994,123457,3,10,0)
For example:
"KRN",8994,123457,3,11,0)
    OUT(1)=17
"KRN",8994,123457,3,12,0)
    OUT(2)="STUDY_UID|1.2.840.113754.1.4.660.1.108"
"KRN",8994,123457,3,13,0)
    OUT(3)="STUDY_PAT|35|9865827312V582731|IMAGPATIENT35,35"
"KRN",8994,123457,3,14,0)
    OUT(4)="SERIES_UID|"
"KRN",8994,123457,3,15,0)
    OUT(5)="SERIES_IEN|6196"
"KRN",8994,123457,3,16,0)
    OUT(6)="SERIES_NUMBER|1"
"KRN",8994,123457,3,17,0)
    OUT(7)="IMAGE_UID|1.2.840.113754.1.4.660.1.108.59498.43402.0"
"KRN",8994,123457,3,18,0)
    OUT(8)="IMAGE_IEN|6197"
"KRN",8994,123457,3,19,0)
    OUT(9)="IMAGE_NUMBER|1"
"KRN",8994,123457,3,20,0)
   OUT(10)="IMAGE_ABSTRACT|\\vhaiswclu4\User1$\EdD\Image_Gold\DM\00\61\DM006197.ABS"
"KRN",8994,123457,3,21,0)
   OUT(11)="IMAGE_FULL|\\vhaiswclu4\User1$\EdD\Image_Gold\DM\00\61\DM006197.DCM"
"KRN",8994,123457,3,22,0)
   OUT(12)="IMAGE_TEXT|\\vhaiswclu4\User1$\EdD\Image_Gold\DM\00\61\DM006197.TXT"
"KRN",8994,123457,3,23,0)
   OUT(13)="IMAGE_UID|1.2.840.113754.1.4.660.1.108.59498.43402.1"
"KRN",8994,123457,3,24,0)
   OUT(14)="IMAGE_IEN|6198"
"KRN",8994,123457,3,25,0)
   OUT(15)="IMAGE_NUMBER|1"
"KRN",8994,123457,3,26,0)
   OUT(16)="IMAGE_ABSTRACT|\\vhaiswclu4\User1$\EdD\Image_Gold\DM\00\61\DM006198.ABS"
"KRN",8994,123457,3,27,0)
   OUT(17)="IMAGE_FULL|\\vhaiswclu4\User1$\EdD\Image_Gold\DM\00\61\DM006198.DCM"
"KRN",8994,123457,3,28,0)
   OUT(18)="IMAGE_TEXT|\\vhaiswclu4\User1$\EdD\Image_Gold\DM\00\61\DM006198.TXT"
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"PKG",454,-1)
1^1
"PKG",454,0)
IMAGING^MAG^Imaging Release History
"PKG",454,22,0)
^9.49I^1^1
"PKG",454,22,1,0)
3.0^3020328^3020328^.5
"PKG",454,22,1,"PAH",1,0)
119^3130419^.5
"PKG",454,22,1,"PAH",1,1,0)
^9.49011^11^11^3130419
"PKG",454,22,1,"PAH",1,1,1,0)
Routines for Patch 119, Test Build 4.
"PKG",454,22,1,"PAH",1,1,2,0)
 
"PKG",454,22,1,"PAH",1,1,3,0)
Routines:
"PKG",454,22,1,"PAH",1,1,4,0)
MAGDQR20    value = 15221835
"PKG",454,22,1,"PAH",1,1,5,0)
MAGDQR21    value = 23569984
"PKG",454,22,1,"PAH",1,1,6,0)
MAGGDEV    value = 5937314
"PKG",454,22,1,"PAH",1,1,7,0)
MAGGTUX5    value = 3577043
"PKG",454,22,1,"PAH",1,1,8,0)
MAGIP119    value = 3152330
"PKG",454,22,1,"PAH",1,1,9,0)
 
"PKG",454,22,1,"PAH",1,1,10,0)
Please note that routine MAGIP119 is deleted after the KIDS Build is
"PKG",454,22,1,"PAH",1,1,11,0)
installed.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","MAGDQR20")
0^1^B81382507
"RTN","MAGDQR20",1,0)
MAGDQR20 ;WOIFO/EdM,NST,MLH,BT - RPCs for Query/Retrieve SetUp ; 25 Jan 2012 4:27 PM
"RTN","MAGDQR20",2,0)
 ;;3.0;IMAGING;**119**;Mar 19, 2002;Build 4396;Apr 19, 2013
"RTN","MAGDQR20",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQR20",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR20",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQR20",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQR20",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQR20",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQR20",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQR20",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQR20",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQR20",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQR20",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQR20",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQR20",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQR20",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR20",17,0)
 ;;
"RTN","MAGDQR20",18,0)
 Q
"RTN","MAGDQR20",19,0)
 ;
"RTN","MAGDQR20",20,0)
 ;This procedure called by STUDY^MAGDQR21 to generate IMAGE INFO lines
"RTN","MAGDQR20",21,0)
WRTIMG(SERIESARRAY,D0,REQDFN,STUMO,INCDEL) ; Retrieve Image info and output to IMAGE INFO line
"RTN","MAGDQR20",22,0)
 N I
"RTN","MAGDQR20",23,0)
 N SERID  ;SERID(UID _ DCOM SERIES NUM, UID)
"RTN","MAGDQR20",24,0)
 N SERIES ;SERIES(UID _ DCOM SERIES NUM, DCOM IMAGE NUM, OBJECT GROUP)=""
"RTN","MAGDQR20",25,0)
 N SNUM,TMP
"RTN","MAGDQR20",26,0)
 K ^TMP("MAG",$J,"S") ;Images info by IEN
"RTN","MAGDQR20",27,0)
 K ^TMP("MAG",$J,"M") ;RAD Procedure by IEN (1,IEN) and by SERIESUID (2,SERIESUID,Procedure)
"RTN","MAGDQR20",28,0)
 ;
"RTN","MAGDQR20",29,0)
 D RTRVIMG^MAGDQR20(.TMP,D0,REQDFN,INCDEL) ;retrieve images info for D0 and saved to TMP
"RTN","MAGDQR20",30,0)
 D:$E($G(TMP),1,5)="^TMP(" WRTMAGM^MAGDQR20(.TMP,.STUMO) ;Save images and procedures, return STUMO (procedures)
"RTN","MAGDQR20",31,0)
 ;
"RTN","MAGDQR20",32,0)
 D GETSER^MAGDQR20(D0,.SERIES,.SERID,INCDEL) ;Get SERIESUID info, store in SERIES and SERID
"RTN","MAGDQR20",33,0)
 S SNUM="" F  S SNUM=$O(SERIES(SNUM)) Q:SNUM=""  D WRTSER^MAGDQR20(D0,.SERIESARRAY,.SERIES,SNUM,.SERID,REQDFN)
"RTN","MAGDQR20",34,0)
 ;
"RTN","MAGDQR20",35,0)
 S I="" F  S I=$O(^TMP("MAG",$J,"S",I)) Q:I=""  D WRTOUT^MAGDQR21("UNUSED_GROUP_INFO|"_^TMP("MAG",$J,"S",I))
"RTN","MAGDQR20",36,0)
 ;
"RTN","MAGDQR20",37,0)
 K ^TMP("MAG",$J,"S")
"RTN","MAGDQR20",38,0)
 K ^TMP("MAG",$J,"M")
"RTN","MAGDQR20",39,0)
 Q
"RTN","MAGDQR20",40,0)
 ;
"RTN","MAGDQR20",41,0)
RTRVIMG(TMP,D0,REQDFN,INCDEL) ; Retrieve info for either single or group image
"RTN","MAGDQR20",42,0)
 N MAGFIL,X
"RTN","MAGDQR20",43,0)
 S MAGFIL=$$FILE^MAGGI11(D0)
"RTN","MAGDQR20",44,0)
 ;
"RTN","MAGDQR20",45,0)
 I MAGFIL,$D(^MAG(MAGFIL,D0,1)) D  Q  ; images and/or deleted images group
"RTN","MAGDQR20",46,0)
 . ; allow return of info if DFN defined
"RTN","MAGDQR20",47,0)
 . D GROUP^MAGGTIG(.TMP,D0,REQDFN)
"RTN","MAGDQR20",48,0)
 . D:INCDEL RTRVDIMG^MAGDQR20(.TMP,D0) ;include deleted images of the active group
"RTN","MAGDQR20",49,0)
 . Q
"RTN","MAGDQR20",50,0)
 ;
"RTN","MAGDQR20",51,0)
 ; DEFAULT - image is a single
"RTN","MAGDQR20",52,0)
 D IMAGEINF^MAGGTU3(.X,D0,REQDFN)
"RTN","MAGDQR20",53,0)
 I INCDEL,$$ISDEL^MAGGI11(D0) D DIMGINF^MAGDQR20(.X,D0)
"RTN","MAGDQR20",54,0)
 S TMP=$NA(^TMP("MAGGTIG",$J))
"RTN","MAGDQR20",55,0)
 K @TMP S @TMP@(0)="1^1",@TMP@(1)=X(0)
"RTN","MAGDQR20",56,0)
 Q
"RTN","MAGDQR20",57,0)
 ;
"RTN","MAGDQR20",58,0)
RTRVDIMG(MAGRY,MAGIEN) ; Get Deleted images and output the info
"RTN","MAGDQR20",59,0)
 N MAGCHILD,MAGCT,MAGFILE,X
"RTN","MAGDQR20",60,0)
 ;
"RTN","MAGDQR20",61,0)
 I $G(MAGRY)="" D
"RTN","MAGDQR20",62,0)
 . ;  we'll use @ notation, this'll work if an Array or a Global Array is being returned
"RTN","MAGDQR20",63,0)
 . S X=$$RTRNFMT^XWBLIB("GLOBAL ARRAY",1) ;must call this, setting up Internal Variables
"RTN","MAGDQR20",64,0)
 . S MAGRY=$NA(^TMP("MAGGTIG",$J))
"RTN","MAGDQR20",65,0)
 . K @MAGRY
"RTN","MAGDQR20",66,0)
 . Q
"RTN","MAGDQR20",67,0)
 ;
"RTN","MAGDQR20",68,0)
 S MAGCT=$O(@MAGRY@(""),-1)
"RTN","MAGDQR20",69,0)
 S MAGCHILD=""
"RTN","MAGDQR20",70,0)
 ;
"RTN","MAGDQR20",71,0)
 F  S MAGCHILD=$O(^MAG(2005.1,"AGP",MAGIEN,MAGCHILD)) Q:'MAGCHILD  D
"RTN","MAGDQR20",72,0)
 . S MAGCT=MAGCT+1
"RTN","MAGDQR20",73,0)
 . S MAGFILE=$$INFO^MAGGAII(MAGCHILD,"D")
"RTN","MAGDQR20",74,0)
 . S @MAGRY@(MAGCT)="B2^"_MAGFILE
"RTN","MAGDQR20",75,0)
 . Q
"RTN","MAGDQR20",76,0)
 S @MAGRY@(0)="1^"_MAGCT
"RTN","MAGDQR20",77,0)
 Q
"RTN","MAGDQR20",78,0)
 ;
"RTN","MAGDQR20",79,0)
DIMGINF(MAGRY,IEN) ; Retrieve Deleted images
"RTN","MAGDQR20",80,0)
 N MAGINFO,Z,EXIST
"RTN","MAGDQR20",81,0)
 ;
"RTN","MAGDQR20",82,0)
 S MAGINFO=$$INFO^MAGGAII(IEN,"E")
"RTN","MAGDQR20",83,0)
 S EXIST=$D(^MAG(2005.1,IEN,0))
"RTN","MAGDQR20",84,0)
 I 'EXIST S Z="1^Missing Record"
"RTN","MAGDQR20",85,0)
 I EXIST D
"RTN","MAGDQR20",86,0)
 . S Z=$P(^MAG(2005.1,IEN,0),U,7)
"RTN","MAGDQR20",87,0)
 . I '$D(^DPT(Z)) S Z="1^Invalid patient pointer"
"RTN","MAGDQR20",88,0)
 . E  S Z=Z_U_$P(^DPT(Z,0),U)
"RTN","MAGDQR20",89,0)
 S MAGRY(0)="1^"_MAGINFO
"RTN","MAGDQR20",90,0)
 S MAGRY(1)=Z ; dfn^name
"RTN","MAGDQR20",91,0)
 Q
"RTN","MAGDQR20",92,0)
 ;
"RTN","MAGDQR20",93,0)
WRTMAGM(TMP,STUMO) ; Save series to TMP
"RTN","MAGDQR20",94,0)
 N D,G,M,P,X,I
"RTN","MAGDQR20",95,0)
 N MAGFILD,MAGFILG
"RTN","MAGDQR20",96,0)
 K @TMP@(0)
"RTN","MAGDQR20",97,0)
 S I=""
"RTN","MAGDQR20",98,0)
 ;
"RTN","MAGDQR20",99,0)
 F  S I=$O(@TMP@(I)) Q:I=""  D
"RTN","MAGDQR20",100,0)
 . S X=$G(@TMP@(I))
"RTN","MAGDQR20",101,0)
 . S D=$P(X,"^",2) ;IEN containing the images' info
"RTN","MAGDQR20",102,0)
 . Q:'D
"RTN","MAGDQR20",103,0)
 . S ^TMP("MAG",$J,"S",D)=X
"RTN","MAGDQR20",104,0)
 . S MAGFILD=$$FILE^MAGGI11(D)
"RTN","MAGDQR20",105,0)
 . S X=$S(MAGFILD:$G(^MAG(MAGFILD,D,0)),1:"")
"RTN","MAGDQR20",106,0)
 . S G=+$P(X,"^",10) ;Group IEN
"RTN","MAGDQR20",107,0)
 . S M=$P(X,"^",8)   ;Procedure
"RTN","MAGDQR20",108,0)
 . S:$E(M,1,4)="RAD " M=$E(M,5,$L(M))
"RTN","MAGDQR20",109,0)
 . Q:M=""
"RTN","MAGDQR20",110,0)
 . S MAGFILG=$$FILE^MAGGI11(G)
"RTN","MAGDQR20",111,0)
 . S G=$S(MAGFILG:$P($G(^MAG(MAGFILG,G,2)),"^",6),1:"") ;Parent Data File# for Group IEN
"RTN","MAGDQR20",112,0)
 . S P=$S(MAGFILD:$P($G(^MAG(MAGFILD,D,2)),"^",6),1:"") ;Parent Data File# for IEN
"RTN","MAGDQR20",113,0)
 . I P'=74,G'=74 Q  ;quit if not RAD/NUC MED REPORTS file (#74)
"RTN","MAGDQR20",114,0)
 . S ^TMP("MAG",$J,"M",1,D)=M
"RTN","MAGDQR20",115,0)
 . S STUMO(M)=""
"RTN","MAGDQR20",116,0)
 . S G=$S(MAGFILD:$G(^MAG(MAGFILD,D,"SERIESUID")),1:"")
"RTN","MAGDQR20",117,0)
 . S:G'="" ^TMP("MAG",$J,"M",2,G,M)=""
"RTN","MAGDQR20",118,0)
 . Q
"RTN","MAGDQR20",119,0)
 Q
"RTN","MAGDQR20",120,0)
 ;
"RTN","MAGDQR20",121,0)
GETSER(D0,SERIES,SERID,INCDEL) ; Populate SERIES array for File 2005 and 2005.1
"RTN","MAGDQR20",122,0)
 N MAGFIL,U1
"RTN","MAGDQR20",123,0)
 ; 
"RTN","MAGDQR20",124,0)
 ; group IEN 
"RTN","MAGDQR20",125,0)
 I $D(^MAG(2005,D0,1)) D GETRSER^MAGDQR20(D0,.SERIES,.SERID)
"RTN","MAGDQR20",126,0)
 ; include deleted images 
"RTN","MAGDQR20",127,0)
 I INCDEL D GETDSER^MAGDQR20(D0,.SERIES,.SERID)
"RTN","MAGDQR20",128,0)
 ;
"RTN","MAGDQR20",129,0)
 D:'$D(SERIES)
"RTN","MAGDQR20",130,0)
 . S U1=""
"RTN","MAGDQR20",131,0)
 . S MAGFIL=$$FILE^MAGGI11(D0)
"RTN","MAGDQR20",132,0)
 . S:MAGFIL U1=$G(^MAG(MAGFIL,D0,"SERIESUID"))
"RTN","MAGDQR20",133,0)
 . S:U1="" U1="?"
"RTN","MAGDQR20",134,0)
 . S SERIES(U1_"_1",1,D0)="",SERID(U1_"_1",U1)=""
"RTN","MAGDQR20",135,0)
 . Q
"RTN","MAGDQR20",136,0)
 Q
"RTN","MAGDQR20",137,0)
 ;
"RTN","MAGDQR20",138,0)
GETRSER(D0,SERIES,SERID) ; Populate SERIES array for File 2005
"RTN","MAGDQR20",139,0)
 N ANY,D1,X
"RTN","MAGDQR20",140,0)
 N SNUM ;DCOM SERIES NUM
"RTN","MAGDQR20",141,0)
 N INUM ;DCOM IMAGE NUM
"RTN","MAGDQR20",142,0)
 N U1   ;UID
"RTN","MAGDQR20",143,0)
 N I0   ;object for a GROUP
"RTN","MAGDQR20",144,0)
 S (ANY,D1)=0
"RTN","MAGDQR20",145,0)
 ;
"RTN","MAGDQR20",146,0)
 F  S D1=$O(^MAG(2005,D0,1,D1)) Q:'D1  D
"RTN","MAGDQR20",147,0)
 . S X=$G(^MAG(2005,D0,1,D1,0)),I0=+X Q:'I0
"RTN","MAGDQR20",148,0)
 . S ANY=1,I0=+X,SNUM=$P(X,"^",2),INUM=$P(X,"^",3)
"RTN","MAGDQR20",149,0)
 . S U1=$G(^MAG(2005,I0,"SERIESUID"))
"RTN","MAGDQR20",150,0)
 . S:SNUM="" SNUM="?" S:INUM="" INUM="?" S:U1="" U1="?"
"RTN","MAGDQR20",151,0)
 . S SERIES(U1_"_"_SNUM,INUM,I0)="",SERID(U1_"_"_SNUM,U1)=""
"RTN","MAGDQR20",152,0)
 . Q
"RTN","MAGDQR20",153,0)
 Q
"RTN","MAGDQR20",154,0)
 ;
"RTN","MAGDQR20",155,0)
GETDSER(D0,SERIES,SERID) ; Populate SERIES array for File 2005.1
"RTN","MAGDQR20",156,0)
 N SNUM ;DCOM SERIES NUM
"RTN","MAGDQR20",157,0)
 N INUM ;DCOM IMAGE NUM
"RTN","MAGDQR20",158,0)
 N U1   ;UID
"RTN","MAGDQR20",159,0)
 N I0   ;object for a GROUP (Child IEN)
"RTN","MAGDQR20",160,0)
 S I0=""
"RTN","MAGDQR20",161,0)
 ;
"RTN","MAGDQR20",162,0)
 F  S I0=$O(^MAG(2005.1,"AGP",D0,I0)) Q:I0=""  D
"RTN","MAGDQR20",163,0)
 . D GETDINUM^MAGDQR20(D0,I0,.SNUM,.INUM)
"RTN","MAGDQR20",164,0)
 . S U1=$G(^MAG(2005.1,I0,"SERIESUID"))
"RTN","MAGDQR20",165,0)
 . S:U1="" U1="?"
"RTN","MAGDQR20",166,0)
 . S SERIES(U1_"_"_SNUM,INUM,I0)="",SERID(U1_"_"_SNUM,U1)=""
"RTN","MAGDQR20",167,0)
 . Q
"RTN","MAGDQR20",168,0)
 Q
"RTN","MAGDQR20",169,0)
 ;
"RTN","MAGDQR20",170,0)
GETDINUM(GRPIEN,CHLDIEN,SNUM,INUM) ; Get DICOM Serial Number and Image Number for Child IEN from Audit Image 
"RTN","MAGDQR20",171,0)
 N X,D1,I0
"RTN","MAGDQR20",172,0)
 S SNUM="",INUM=""
"RTN","MAGDQR20",173,0)
 S D1=0
"RTN","MAGDQR20",174,0)
 ;
"RTN","MAGDQR20",175,0)
 F  S D1=$O(^MAG(2005.1,GRPIEN,1,D1)) Q:'D1  D  Q:SNUM'=""!(INUM'="")
"RTN","MAGDQR20",176,0)
 . S X=$G(^MAG(2005.1,GRPIEN,1,D1,0)),I0=+X Q:'I0
"RTN","MAGDQR20",177,0)
 . S:I0=CHLDIEN SNUM=$P(X,"^",2),INUM=$P(X,"^",3)
"RTN","MAGDQR20",178,0)
 . Q
"RTN","MAGDQR20",179,0)
 ;
"RTN","MAGDQR20",180,0)
 S:SNUM="" SNUM="?"
"RTN","MAGDQR20",181,0)
 S:INUM="" INUM="?"
"RTN","MAGDQR20",182,0)
 Q
"RTN","MAGDQR20",183,0)
 ;
"RTN","MAGDQR20",184,0)
WRTSER(D0,SERIESARRAY,SERIES,SNUM,SERID,REQDFN) ; Output to TMP based on SERIES array
"RTN","MAGDQR20",185,0)
 ; refresh temp image index
"RTN","MAGDQR20",186,0)
 ; SERIES(UID _ DCOM SERIES NUM, DCOM IMAGE NUM, OBJECT GROUP)=""
"RTN","MAGDQR20",187,0)
 N MAGTI
"RTN","MAGDQR20",188,0)
 N INUM ;IMAGE NUMBER
"RTN","MAGDQR20",189,0)
 N I0   ;OBJECT GROUP
"RTN","MAGDQR20",190,0)
 N UID  ;SERIES UID
"RTN","MAGDQR20",191,0)
 S MAGTI=0 ; temp image index
"RTN","MAGDQR20",192,0)
 K ^TMP("MAG",$J,"TI") ;temp for sorting
"RTN","MAGDQR20",193,0)
 ;
"RTN","MAGDQR20",194,0)
 ; seek qualifying images (no QI or matching known DFN)
"RTN","MAGDQR20",195,0)
 S INUM=""
"RTN","MAGDQR20",196,0)
 F  S INUM=$O(SERIES(SNUM,INUM)) Q:INUM=""  D
"RTN","MAGDQR20",197,0)
 . S I0=""
"RTN","MAGDQR20",198,0)
 . ;sort into ^TMP(,,"TI",)
"RTN","MAGDQR20",199,0)
 . F  S I0=$O(SERIES(SNUM,INUM,I0)) Q:I0=""  D SRTMAGTI^MAGDQR20(INUM,I0,REQDFN)
"RTN","MAGDQR20",200,0)
 . Q
"RTN","MAGDQR20",201,0)
 ;
"RTN","MAGDQR20",202,0)
 ;quit if qualifying images were not found
"RTN","MAGDQR20",203,0)
 Q:'$D(^TMP("MAG",$J,"TI"))
"RTN","MAGDQR20",204,0)
 ;
"RTN","MAGDQR20",205,0)
 S UID="" F  S UID=$O(SERID(SNUM,UID)) Q:UID=""  D WRSERUID^MAGDQR20(UID,D0)
"RTN","MAGDQR20",206,0)
 ;
"RTN","MAGDQR20",207,0)
 D:SNUM'="?" WASGNSER^MAGDQR20(SNUM,.SERIESARRAY)  ; assign the series number
"RTN","MAGDQR20",208,0)
 S MAGTI="" F  S MAGTI=$O(^TMP("MAG",$J,"TI",MAGTI)) Q:'MAGTI  D WRTOUT^MAGDQR21(^TMP("MAG",$J,"TI",MAGTI))
"RTN","MAGDQR20",209,0)
 ;
"RTN","MAGDQR20",210,0)
 K ^TMP("MAG",$J,"TI")
"RTN","MAGDQR20",211,0)
 Q
"RTN","MAGDQR20",212,0)
 ;
"RTN","MAGDQR20",213,0)
SRTMAGTI(INUM,I0,REQDFN) ; Save IMAGE_IEN and GROUP_IEN lines
"RTN","MAGDQR20",214,0)
 ; if dup study instance UID, purge image info and bail out
"RTN","MAGDQR20",215,0)
 ; unless pt is specified and this image is for that pt
"RTN","MAGDQR20",216,0)
 N MAGFIL,MAGR0,X
"RTN","MAGDQR20",217,0)
 N UID ;PACS UID
"RTN","MAGDQR20",218,0)
 N MAGTI ;Line counter
"RTN","MAGDQR20",219,0)
 N GRPIEN ;Group IEN
"RTN","MAGDQR20",220,0)
 N IMGINFO
"RTN","MAGDQR20",221,0)
 ;
"RTN","MAGDQR20",222,0)
 S MAGR0=""
"RTN","MAGDQR20",223,0)
 S MAGFIL=$$FILE^MAGGI11(I0)
"RTN","MAGDQR20",224,0)
 S:MAGFIL MAGR0=$G(^MAG(MAGFIL,I0,0))
"RTN","MAGDQR20",225,0)
 I REQDFN,$P(MAGR0,"^",7)'=REQDFN K ^TMP("MAG",$J,"S",I0) Q  ;patient must be the REQDFN
"RTN","MAGDQR20",226,0)
 ;
"RTN","MAGDQR20",227,0)
 S UID=$P($G(^MAG(MAGFIL,I0,"PACS")),"^",1)
"RTN","MAGDQR20",228,0)
 S MAGTI=$O(^TMP("MAG",$J,"TI",""),-1)+1
"RTN","MAGDQR20",229,0)
 S MAGTI=MAGTI+1,^TMP("MAG",$J,"TI",MAGTI)="NEXT_IMAGE"
"RTN","MAGDQR20",230,0)
 S:UID'="" MAGTI=MAGTI+1,^TMP("MAG",$J,"TI",MAGTI)="IMAGE_UID|"_UID
"RTN","MAGDQR20",231,0)
 S MAGTI=MAGTI+1,^TMP("MAG",$J,"TI",MAGTI)="IMAGE_IEN|"_I0
"RTN","MAGDQR20",232,0)
 S GRPIEN=$P(MAGR0,"^",10)
"RTN","MAGDQR20",233,0)
 S:GRPIEN MAGTI=MAGTI+1,^TMP("MAG",$J,"TI",MAGTI)="GROUP_IEN|"_GRPIEN
"RTN","MAGDQR20",234,0)
 ;
"RTN","MAGDQR20",235,0)
 ; QI check - override only if DFN specified in call
"RTN","MAGDQR20",236,0)
 ; (VA internal only!)
"RTN","MAGDQR20",237,0)
 D CHK^MAGGSQI(.X,I0) ;Check the integrity of I0
"RTN","MAGDQR20",238,0)
 I '$G(X(0)) D  Q:'REQDFN
"RTN","MAGDQR20",239,0)
 . S MAGTI=MAGTI+1,^TMP("MAG",$J,"TI",MAGTI)="IMAGE_ERR|"_$P($G(X(0)),"^",2)
"RTN","MAGDQR20",240,0)
 . Q
"RTN","MAGDQR20",241,0)
 ;
"RTN","MAGDQR20",242,0)
 S:INUM'="?" MAGTI=MAGTI+1,^TMP("MAG",$J,"TI",MAGTI)="IMAGE_NUMBER|"_INUM
"RTN","MAGDQR20",243,0)
 S IMGINFO=$G(^TMP("MAG",$J,"S",I0)) K ^TMP("MAG",$J,"S",I0)
"RTN","MAGDQR20",244,0)
 ; Get Site image parameters IEN from 16^ piece of IMGINFO
"RTN","MAGDQR20",245,0)
 S:IMGINFO'="" MAGTI=MAGTI+1,^TMP("MAG",$J,"TI",MAGTI)="IMAGE_INFO|"_IMGINFO_"|"_$$GETSNUM^MAGDQR21($P(IMGINFO,"^",16))
"RTN","MAGDQR20",246,0)
 Q
"RTN","MAGDQR20",247,0)
 ;
"RTN","MAGDQR20",248,0)
WRSERUID(UID,D0) ; Output SERIES_IEN line
"RTN","MAGDQR20",249,0)
 N M,X
"RTN","MAGDQR20",250,0)
 ;
"RTN","MAGDQR20",251,0)
 D WRTOUT^MAGDQR21("NEXT_SERIES")
"RTN","MAGDQR20",252,0)
 D:UID'="?" WRTOUT^MAGDQR21("SERIES_UID|"_UID)
"RTN","MAGDQR20",253,0)
 D WRTOUT^MAGDQR21("SERIES_IEN|"_D0)
"RTN","MAGDQR20",254,0)
 ; Officially, there can be only one modality per series,
"RTN","MAGDQR20",255,0)
 ; so stop when the first modality is found...
"RTN","MAGDQR20",256,0)
 S X="",M=""
"RTN","MAGDQR20",257,0)
 F  S M=$O(^TMP("MAG",$J,"M",2,UID,M)) Q:M=""  D  Q:X'=""
"RTN","MAGDQR20",258,0)
 . S X=$S(X'="":"\",1:"")_M
"RTN","MAGDQR20",259,0)
 . Q
"RTN","MAGDQR20",260,0)
 D:X'="" WRTOUT^MAGDQR21("SERIES_MODALITY|"_X)
"RTN","MAGDQR20",261,0)
 Q
"RTN","MAGDQR20",262,0)
 ;
"RTN","MAGDQR20",263,0)
WASGNSER(SNUM,SERIESARRAY) ; Output SERIES_NUMBER line
"RTN","MAGDQR20",264,0)
 N SERIESNUM
"RTN","MAGDQR20",265,0)
 ; - get series no from study itself if possible, else generate
"RTN","MAGDQR20",266,0)
 D TSTSER^MAGDQR20(SNUM,.SERIESARRAY,.SERIESNUM)
"RTN","MAGDQR20",267,0)
 D:'$D(SERIESNUM)  ; still need to generate
"RTN","MAGDQR20",268,0)
 . F SERIESNUM=1:1 Q:'$D(SERIESARRAY(SERIESNUM))
"RTN","MAGDQR20",269,0)
 . Q
"RTN","MAGDQR20",270,0)
 ;
"RTN","MAGDQR20",271,0)
 D WRTOUT^MAGDQR21("SERIES_NUMBER|"_SERIESNUM)
"RTN","MAGDQR20",272,0)
 S SERIESARRAY(SERIESNUM)=""
"RTN","MAGDQR20",273,0)
 Q
"RTN","MAGDQR20",274,0)
 ;
"RTN","MAGDQR20",275,0)
TSTSER(SNUM,SERIESARRAY,SERIESNUM) ; Validate SERIES NUMBER
"RTN","MAGDQR20",276,0)
 N SERIESTEST,SGN
"RTN","MAGDQR20",277,0)
 S SERIESTEST=$P(SNUM,"_",2)
"RTN","MAGDQR20",278,0)
 Q:"+-1234567890"'[$E(SERIESTEST,1)  ; invalid number
"RTN","MAGDQR20",279,0)
 S:"+-"[$E(SERIESTEST,1) SGN=$E(SERIESTEST,1)
"RTN","MAGDQR20",280,0)
 S:$D(SGN) SERIESTEST=$E(SERIESTEST,2,$L(SERIESTEST))
"RTN","MAGDQR20",281,0)
 Q:SERIESTEST'?1.12N
"RTN","MAGDQR20",282,0)
 S SERIESTEST=$G(SGN)_SERIESTEST
"RTN","MAGDQR20",283,0)
 Q:$D(SERIESARRAY(SERIESTEST))
"RTN","MAGDQR20",284,0)
 S SERIESNUM=SERIESTEST
"RTN","MAGDQR20",285,0)
 Q
"RTN","MAGDQR21")
0^2^B172485019
"RTN","MAGDQR21",1,0)
MAGDQR21 ;WOIFO/EdM,NST,MLH,JSL,SAF,BT - RPCs for Query/Retrieve SetUp ; 09 May 2011 4:27 PM
"RTN","MAGDQR21",2,0)
 ;;3.0;IMAGING;**83,104,123,119**;Mar 19, 2002;Build 4396;Apr 19, 2013
"RTN","MAGDQR21",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQR21",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR21",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQR21",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQR21",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQR21",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQR21",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQR21",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQR21",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQR21",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQR21",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQR21",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQR21",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQR21",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR21",17,0)
 ;;
"RTN","MAGDQR21",18,0)
 Q
"RTN","MAGDQR21",19,0)
 ;
"RTN","MAGDQR21",20,0)
GET(OUT,DEST,GATEWAY) ; RPC = MAG GET DICOM DEST
"RTN","MAGDQR21",21,0)
 N D0,D1,N,OK,X
"RTN","MAGDQR21",22,0)
 I $G(DEST)="" D  Q
"RTN","MAGDQR21",23,0)
 . S N=1
"RTN","MAGDQR21",24,0)
 . S X="" F  S X=$O(^MAG(2006.587,"B",X)) Q:X=""  S N=N+1,OUT(N)="B^"_X
"RTN","MAGDQR21",25,0)
 . S X="" F  S X=$O(^MAG(2006.587,"D",X)) Q:X=""  S N=N+1,OUT(N)="D^"_X
"RTN","MAGDQR21",26,0)
 . S OUT(1)=N
"RTN","MAGDQR21",27,0)
 . Q
"RTN","MAGDQR21",28,0)
 ;
"RTN","MAGDQR21",29,0)
 S GATEWAY=$G(GATEWAY) S:GATEWAY="--All DICOM Gateways--" GATEWAY=""
"RTN","MAGDQR21",30,0)
 S D0=0,OK=0 F  S D0=$O(^MAG(2006.587,D0)) Q:'D0  D  Q:OK
"RTN","MAGDQR21",31,0)
 . S X=$G(^MAG(2006.587,D0,0))
"RTN","MAGDQR21",32,0)
 . Q:$P(X,"^",1)'=DEST
"RTN","MAGDQR21",33,0)
 . I GATEWAY'="",$P(X,"^",5)'=GATEWAY Q
"RTN","MAGDQR21",34,0)
 . S OK=1,N=6
"RTN","MAGDQR21",35,0)
 . S OUT(2)="2^"_$P(X,"^",2)
"RTN","MAGDQR21",36,0)
 . S OUT(3)="3^"_$P(X,"^",3)
"RTN","MAGDQR21",37,0)
 . S OUT(4)="4^"_$P(X,"^",4)
"RTN","MAGDQR21",38,0)
 . S OUT(5)="5^"_$P(X,"^",6)
"RTN","MAGDQR21",39,0)
 . S OUT(6)="6^"_$P(X,"^",7)
"RTN","MAGDQR21",40,0)
 . S D1=0 F  S D1=$O(^MAG(2006.587,D0,1,D1)) Q:'D1  D
"RTN","MAGDQR21",41,0)
 . . S X=$G(^MAG(2006.587,D0,1,D1,0)) Q:$P(X,"^",1)=""
"RTN","MAGDQR21",42,0)
 . . S N=N+1,OUT(N)=X
"RTN","MAGDQR21",43,0)
 . . Q
"RTN","MAGDQR21",44,0)
 . Q
"RTN","MAGDQR21",45,0)
 S OUT(1)=N
"RTN","MAGDQR21",46,0)
 Q
"RTN","MAGDQR21",47,0)
 ;
"RTN","MAGDQR21",48,0)
SET(OUT,DATA,DEST,GATEWAY) ; RPC = MAG SET DICOM DEST
"RTN","MAGDQR21",49,0)
 N D0,D1,I,N,P,Q,O1,O5,O7,OK,T,X
"RTN","MAGDQR21",50,0)
 I $G(DEST)="" S OUT="-1,No Destination Specified." Q
"RTN","MAGDQR21",51,0)
 ;
"RTN","MAGDQR21",52,0)
 S I="" F  S I=$O(DATA(I)) Q:I=""  D
"RTN","MAGDQR21",53,0)
 . S T=DATA(I) Q:T'["^"
"RTN","MAGDQR21",54,0)
 . I +T=2 S P(2)=$P(T,"^",2) Q
"RTN","MAGDQR21",55,0)
 . I +T=3 S P(3)=$P(T,"^",2) Q
"RTN","MAGDQR21",56,0)
 . I +T=4 S P(4)=$P(T,"^",2) Q
"RTN","MAGDQR21",57,0)
 . I +T=5 S P(6)=$P(T,"^",2) Q
"RTN","MAGDQR21",58,0)
 . I +T=6 S P(7)=$P(T,"^",2) Q
"RTN","MAGDQR21",59,0)
 . S Q($P(T,"^",1))=(+$P(T,"^",2))_"^"_(+$P(T,"^",3))
"RTN","MAGDQR21",60,0)
 . Q
"RTN","MAGDQR21",61,0)
 ;
"RTN","MAGDQR21",62,0)
 S OUT=0
"RTN","MAGDQR21",63,0)
 S GATEWAY=$G(GATEWAY) S:GATEWAY="--All DICOM Gateways--" GATEWAY=""
"RTN","MAGDQR21",64,0)
 S D0=0,OK=0 F  S D0=$O(^MAG(2006.587,D0)) Q:'D0  D  Q:OK
"RTN","MAGDQR21",65,0)
 . S X=$G(^MAG(2006.587,D0,0)),O1=$P(X,"^",1),O5=$P(X,"^",5),O7=$P(X,"^",7)
"RTN","MAGDQR21",66,0)
 . Q:O1'=DEST
"RTN","MAGDQR21",67,0)
 . I GATEWAY'="",O5'=GATEWAY Q
"RTN","MAGDQR21",68,0)
 . S:GATEWAY'="" OK=1 S OUT=OUT+1
"RTN","MAGDQR21",69,0)
 . I O1'="",O5'="",O7'="" K ^MAG(2006.587,"C",O1,O7,O5,D0)
"RTN","MAGDQR21",70,0)
 . I O5'="",O7'="" K ^MAG(2006.587,"D",O5,O7,D0)
"RTN","MAGDQR21",71,0)
 . S I="" F  S I=$O(P(I)) Q:I=""  S:P(I)'="" $P(X,"^",I)=P(I)
"RTN","MAGDQR21",72,0)
 . S:$G(P(7))'="" O7=P(7)
"RTN","MAGDQR21",73,0)
 . S ^MAG(2006.587,D0,0)=X
"RTN","MAGDQR21",74,0)
 . I O1'="",O5'="",O7'="" S ^MAG(2006.587,"C",O1,O7,O5,D0)=""
"RTN","MAGDQR21",75,0)
 . I O5'="",O7'="" S ^MAG(2006.587,"D",O5,O7,D0)=""
"RTN","MAGDQR21",76,0)
 . K ^MAG(2006.587,D0,1)
"RTN","MAGDQR21",77,0)
 . S D1=0,I="" F  S I=$O(Q(I)) Q:I=""  D
"RTN","MAGDQR21",78,0)
 . . S D1=D1+1,^MAG(2006.587,D0,1,D1,0)=I_"^"_Q(I)
"RTN","MAGDQR21",79,0)
 . . S ^MAG(2006.587,D0,1,"B",I,D1)=""
"RTN","MAGDQR21",80,0)
 . . Q
"RTN","MAGDQR21",81,0)
 . S:D1 ^MAG(2006.587,D0,1,0)="^2006.5871SA^"_D1_"^"_D1
"RTN","MAGDQR21",82,0)
 . Q
"RTN","MAGDQR21",83,0)
 Q
"RTN","MAGDQR21",84,0)
 ;
"RTN","MAGDQR21",85,0)
TMPOUT(NAME) ; Return name of the temp
"RTN","MAGDQR21",86,0)
 N X
"RTN","MAGDQR21",87,0)
 S X=$$RTRNFMT^XWBLIB("GLOBAL ARRAY",1)
"RTN","MAGDQR21",88,0)
 S X=$NA(^TMP("MAG",$J,NAME))
"RTN","MAGDQR21",89,0)
 K @X
"RTN","MAGDQR21",90,0)
 Q X
"RTN","MAGDQR21",91,0)
 ;
"RTN","MAGDQR21",92,0)
STUDY2(OUT,GROUPS,REQDFN,IMGLESS,FLAGS) ; RPC = MAG DOD GET STUDIES IEN
"RTN","MAGDQR21",93,0)
 ; CR, 5-28-09
"RTN","MAGDQR21",94,0)
 ; IMGLESS is a new flag to speed up queries: if=1 (true), just get study-level 
"RTN","MAGDQR21",95,0)
 ;            data, if null or zero get everything. This new flag is optional.
"RTN","MAGDQR21",96,0)
 ; BT, 01-06-12
"RTN","MAGDQR21",97,0)
 ; FLAGS is ""  - Exclude Deleted records (default)
"RTN","MAGDQR21",98,0)
 ;          "D" - Include Deleted records
"RTN","MAGDQR21",99,0)
 ;       
"RTN","MAGDQR21",100,0)
 ;
"RTN","MAGDQR21",101,0)
 N STUDY,INCDEL
"RTN","MAGDQR21",102,0)
 ;
"RTN","MAGDQR21",103,0)
 S REQDFN=$G(REQDFN)
"RTN","MAGDQR21",104,0)
 S INCDEL=$G(FLAGS)["D"
"RTN","MAGDQR21",105,0)
 S IMGLESS=$G(IMGLESS)
"RTN","MAGDQR21",106,0)
 S OUT=$$TMPOUT^MAGDQR21("STUDY")
"RTN","MAGDQR21",107,0)
 S @OUT@(1)=1
"RTN","MAGDQR21",108,0)
 ;
"RTN","MAGDQR21",109,0)
 I $G(GROUPS) D CNVGRP^MAGDQR21(.GROUPS)
"RTN","MAGDQR21",110,0)
 ;
"RTN","MAGDQR21",111,0)
 D GETSTUDY^MAGDQR21(.GROUPS,.STUDY,INCDEL) ; read IENS in GROUPS and sort into STUDY by UID,IEN
"RTN","MAGDQR21",112,0)
 ;
"RTN","MAGDQR21",113,0)
 D GENOUT^MAGDQR21(.STUDY,REQDFN,IMGLESS,INCDEL) ; generate OUT based on STUDY
"RTN","MAGDQR21",114,0)
 ;
"RTN","MAGDQR21",115,0)
 ;update last counter
"RTN","MAGDQR21",116,0)
 S @OUT@(1)=@OUT@(1)-1
"RTN","MAGDQR21",117,0)
 Q
"RTN","MAGDQR21",118,0)
 ;
"RTN","MAGDQR21",119,0)
CNVGRP(GROUPS) ; Add top level GROUPS value to GROUPS array 
"RTN","MAGDQR21",120,0)
 ; GROUPS=10, GROUPS(1)=11, GROUPS(2)=12 becomes GROUPS(1)=11, GROUPS(2)=12, GROUPS(3)=10
"RTN","MAGDQR21",121,0)
 N LAST
"RTN","MAGDQR21",122,0)
 S LAST=$O(GROUPS(""),-1)+1
"RTN","MAGDQR21",123,0)
 S GROUPS(LAST)=GROUPS
"RTN","MAGDQR21",124,0)
 Q
"RTN","MAGDQR21",125,0)
 ;
"RTN","MAGDQR21",126,0)
GETSTUDY(GROUPS,STUDY,INCDEL) ; Read IENS in GROUPS and sort into STUDY by UID,IEN
"RTN","MAGDQR21",127,0)
 N I,IEN
"RTN","MAGDQR21",128,0)
 S I=""
"RTN","MAGDQR21",129,0)
 F  S I=$O(GROUPS(I)) Q:I=""  D
"RTN","MAGDQR21",130,0)
 . S IEN=$G(GROUPS(I))
"RTN","MAGDQR21",131,0)
 . Q:'IEN
"RTN","MAGDQR21",132,0)
 . I 'INCDEL D SRTUID^MAGDQR21(IEN,.STUDY)
"RTN","MAGDQR21",133,0)
 . I INCDEL D SRTUID2^MAGDQR21(IEN,.STUDY)
"RTN","MAGDQR21",134,0)
 . Q
"RTN","MAGDQR21",135,0)
 Q
"RTN","MAGDQR21",136,0)
 ;
"RTN","MAGDQR21",137,0)
SRTUID(IEN,STUDY) ; Sort group by UID, IEN
"RTN","MAGDQR21",138,0)
 N PARENT,UID
"RTN","MAGDQR21",139,0)
 ;get parent IEN
"RTN","MAGDQR21",140,0)
 S PARENT=$P($G(^MAG(2005,IEN,0)),"^",10)
"RTN","MAGDQR21",141,0)
 S:PARENT IEN=PARENT
"RTN","MAGDQR21",142,0)
 ;IEN now is parent IEN or Individual Image
"RTN","MAGDQR21",143,0)
 S UID=$P($G(^MAG(2005,IEN,"PACS")),"^",1) S:UID="" UID="?" ;no pacs
"RTN","MAGDQR21",144,0)
 S STUDY(UID,IEN)=""
"RTN","MAGDQR21",145,0)
 Q
"RTN","MAGDQR21",146,0)
 ; 
"RTN","MAGDQR21",147,0)
SRTUID2(IEN,STUDY) ; Sort group by UID, IEN (include Deleted Images)
"RTN","MAGDQR21",148,0)
 N PARENT,UID,MAGFIL
"RTN","MAGDQR21",149,0)
 ;get parent IEN
"RTN","MAGDQR21",150,0)
 S PARENT=$P($G(^MAG(2005,IEN,0)),"^",10)
"RTN","MAGDQR21",151,0)
 S:'PARENT PARENT=$P($G(^MAG(2005.1,IEN,0)),"^",10)
"RTN","MAGDQR21",152,0)
 S:PARENT IEN=PARENT
"RTN","MAGDQR21",153,0)
 ;IEN now is parent IEN or Individual Image
"RTN","MAGDQR21",154,0)
 S MAGFIL=$$FILE^MAGGI11(IEN)
"RTN","MAGDQR21",155,0)
 S UID=$S(MAGFIL:$P($G(^MAG(MAGFIL,IEN,"PACS")),"^",1),1:"")
"RTN","MAGDQR21",156,0)
 S:UID="" UID="?" ;no pacs
"RTN","MAGDQR21",157,0)
 S STUDY(UID,IEN)=""
"RTN","MAGDQR21",158,0)
 Q
"RTN","MAGDQR21",159,0)
 ;
"RTN","MAGDQR21",160,0)
GENOUT(STUDY,REQDFN,IMGLESS,INCDEL) ; Generate output in ^TMP based on STUDY array
"RTN","MAGDQR21",161,0)
 N UID,IEN
"RTN","MAGDQR21",162,0)
 ;
"RTN","MAGDQR21",163,0)
 S UID=""
"RTN","MAGDQR21",164,0)
 F  S UID=$O(STUDY(UID)) Q:UID=""  D
"RTN","MAGDQR21",165,0)
 . I UID="?" D  Q
"RTN","MAGDQR21",166,0)
 . . S IEN=""
"RTN","MAGDQR21",167,0)
 . . F  S IEN=$O(STUDY(UID,IEN)) Q:IEN=""  D STUDY^MAGDQR21("",IEN,REQDFN,IMGLESS,INCDEL)
"RTN","MAGDQR21",168,0)
 . . Q
"RTN","MAGDQR21",169,0)
 . ;ELSE
"RTN","MAGDQR21",170,0)
 . D STUDY^MAGDQR21(UID,"",REQDFN,IMGLESS,INCDEL)
"RTN","MAGDQR21",171,0)
 . Q
"RTN","MAGDQR21",172,0)
 Q
"RTN","MAGDQR21",173,0)
 ; 
"RTN","MAGDQR21",174,0)
STUDY(UID,IEN,REQDFN,IMGLESS,INCDEL) ; Generate output in ^TMP based on parameters
"RTN","MAGDQR21",175,0)
 N STUDY
"RTN","MAGDQR21",176,0)
 N SERIESARRAY ; array of series numbers for this study
"RTN","MAGDQR21",177,0)
 N TOTIMAGES ; total number of images for all series in this study
"RTN","MAGDQR21",178,0)
 N PAT ; array of IENs by patient
"RTN","MAGDQR21",179,0)
 N PATCOUNT ; array of patients, use for validation purposes, should contain only one patient
"RTN","MAGDQR21",180,0)
 N I0 ;IEN where the patient found
"RTN","MAGDQR21",181,0)
 N D0
"RTN","MAGDQR21",182,0)
 N STUMO ;Procedure array
"RTN","MAGDQR21",183,0)
 ;
"RTN","MAGDQR21",184,0)
 D WRTOUT^MAGDQR21("NEXT_STUDY|"_UID_"|"_IEN)
"RTN","MAGDQR21",185,0)
 ;
"RTN","MAGDQR21",186,0)
 D:UID'="" GETGPUID^MAGDQR21(UID,.STUDY,INCDEL) ;fill STUDY based on UID
"RTN","MAGDQR21",187,0)
 D:IEN GETGPIEN^MAGDQR21(IEN,.STUDY,INCDEL) ;add IEN into STUDY
"RTN","MAGDQR21",188,0)
 Q:'$O(STUDY(""))
"RTN","MAGDQR21",189,0)
 ; 
"RTN","MAGDQR21",190,0)
 D GETPAT^MAGDQR21(.STUDY,.PAT,.PATCOUNT,.TOTIMAGES,REQDFN,INCDEL) ;get images for patient
"RTN","MAGDQR21",191,0)
 Q:'$$VALPAT^MAGDQR21(UID,.PAT,.PATCOUNT,REQDFN)  ;validate to make sure all images belonged to one patient
"RTN","MAGDQR21",192,0)
 ;
"RTN","MAGDQR21",193,0)
 S I0=$O(PAT(REQDFN,"")) ;include the first Image when writing out the STUDY section
"RTN","MAGDQR21",194,0)
 Q:'$$WRTIEN^MAGDQR21(UID,I0,TOTIMAGES,REQDFN)
"RTN","MAGDQR21",195,0)
 ;
"RTN","MAGDQR21",196,0)
 Q:'$$INTEGDFN^MAGDQR21(I0,REQDFN,INCDEL)
"RTN","MAGDQR21",197,0)
 ;
"RTN","MAGDQR21",198,0)
 D WRTOUT^MAGDQR21("STUDY_PAT|"_REQDFN_"|"_$S($T(GETICN^MPIF001)'="":$$GETICN^MPIF001(REQDFN),1:"-1^NO MPI")_"|"_$P($G(^DPT(REQDFN,0)),"^",1))
"RTN","MAGDQR21",199,0)
 ;
"RTN","MAGDQR21",200,0)
 ; CR, 5-28-09
"RTN","MAGDQR21",201,0)
 ; For study-level data stop here without additional checks 
"RTN","MAGDQR21",202,0)
 Q:IMGLESS=1
"RTN","MAGDQR21",203,0)
 ;end of check above
"RTN","MAGDQR21",204,0)
 ;
"RTN","MAGDQR21",205,0)
 S D0=""
"RTN","MAGDQR21",206,0)
 F  S D0=$O(PAT(REQDFN,D0)) Q:D0=""  D WRTIMG^MAGDQR20(.SERIESARRAY,D0,REQDFN,.STUMO,INCDEL)
"RTN","MAGDQR21",207,0)
 D WRTMOD^MAGDQR21(.STUMO) ; list all modalities
"RTN","MAGDQR21",208,0)
 Q
"RTN","MAGDQR21",209,0)
 ;
"RTN","MAGDQR21",210,0)
GETGPUID(UID,STUDY,INCDEL) ; Given UID, populate STUDY array with Image IEN 
"RTN","MAGDQR21",211,0)
 N D0
"RTN","MAGDQR21",212,0)
 S D0=""
"RTN","MAGDQR21",213,0)
 F  S D0=$O(^MAG(2005,"P",UID,D0)) Q:D0=""  D
"RTN","MAGDQR21",214,0)
 . S:'$P($G(^MAG(2005,D0,0)),"^",10) STUDY(D0)=2005 ; add either Group IEN or individual IEN (not child IEN)
"RTN","MAGDQR21",215,0)
 . Q
"RTN","MAGDQR21",216,0)
 ;
"RTN","MAGDQR21",217,0)
 I INCDEL D
"RTN","MAGDQR21",218,0)
 . S D0=""
"RTN","MAGDQR21",219,0)
 . F  S D0=$O(^MAG(2005.1,"P",UID,D0)) Q:D0=""  D
"RTN","MAGDQR21",220,0)
 . . Q:'$$ISDEL^MAGGI11(D0)
"RTN","MAGDQR21",221,0)
 . . S:'$P($G(^MAG(2005.1,D0,0)),"^",10) STUDY(D0)=2005.1 ; add either deleted Group IEN or deleted individual IEN (not child IEN)
"RTN","MAGDQR21",222,0)
 . . Q
"RTN","MAGDQR21",223,0)
 . Q
"RTN","MAGDQR21",224,0)
 Q
"RTN","MAGDQR21",225,0)
 ;
"RTN","MAGDQR21",226,0)
GETGPIEN(IEN,STUDY,INCDEL) ; Add IEN into STUDY (include deleted images)
"RTN","MAGDQR21",227,0)
 S:'$P($G(^MAG(2005,IEN,0)),"^",10) STUDY(IEN)=2005 ; add image IEN
"RTN","MAGDQR21",228,0)
 ;
"RTN","MAGDQR21",229,0)
 I INCDEL,$$ISDEL^MAGGI11(IEN) D
"RTN","MAGDQR21",230,0)
 . S:'$P($G(^MAG(2005.1,IEN,0)),"^",10) STUDY(IEN)=2005.1 ;add deleted image IEN
"RTN","MAGDQR21",231,0)
 . Q
"RTN","MAGDQR21",232,0)
 Q
"RTN","MAGDQR21",233,0)
 ;
"RTN","MAGDQR21",234,0)
GETPAT(STUDY,PAT,PATCOUNT,TOTIMAGES,REQDFN,INCDEL) ; Get Total Images count and fill Patient array based on STUDY
"RTN","MAGDQR21",235,0)
 ;Input:
"RTN","MAGDQR21",236,0)
 ;   STUDY     - array of all images
"RTN","MAGDQR21",237,0)
 ;   REQDFN    - patient
"RTN","MAGDQR21",238,0)
 ;   INCDEL    - include Deleted Images
"RTN","MAGDQR21",239,0)
 ;Output:
"RTN","MAGDQR21",240,0)
 ;   PAT       - array of all images for the patient
"RTN","MAGDQR21",241,0)
 ;   PATCOUNT  - array to validate all images should belonged only to one patient
"RTN","MAGDQR21",242,0)
 ;   TOTIMAGES - total images for the patient
"RTN","MAGDQR21",243,0)
 ;
"RTN","MAGDQR21",244,0)
 N D0,MAGFIL,DFN,ISGRP
"RTN","MAGDQR21",245,0)
 S TOTIMAGES=0
"RTN","MAGDQR21",246,0)
 S D0=""
"RTN","MAGDQR21",247,0)
 ;
"RTN","MAGDQR21",248,0)
 F  S D0=$O(STUDY(D0)) Q:D0=""  D
"RTN","MAGDQR21",249,0)
 . S MAGFIL=STUDY(D0)
"RTN","MAGDQR21",250,0)
 . S DFN=+$P($G(^MAG(MAGFIL,D0,0)),"^",7)
"RTN","MAGDQR21",251,0)
 . S PATCOUNT(DFN)=""
"RTN","MAGDQR21",252,0)
 . S:REQDFN=DFN PAT(DFN,D0)=""
"RTN","MAGDQR21",253,0)
 . ;
"RTN","MAGDQR21",254,0)
 . ;Add image count to Total Images for the study
"RTN","MAGDQR21",255,0)
 . S ISGRP=$$ISGRP^MAGDQR21(D0,INCDEL)
"RTN","MAGDQR21",256,0)
 . I 'ISGRP,REQDFN=DFN S TOTIMAGES=TOTIMAGES+1 Q
"RTN","MAGDQR21",257,0)
 . I MAGFIL=2005 S TOTIMAGES=TOTIMAGES+$$GETGPIM^MAGDQR21(D0,REQDFN,.PATCOUNT) ; count group images
"RTN","MAGDQR21",258,0)
 . I INCDEL S TOTIMAGES=TOTIMAGES+$$GETGPDIM^MAGDQR21(D0,REQDFN,.PATCOUNT) ; count deleted group images
"RTN","MAGDQR21",259,0)
 . Q
"RTN","MAGDQR21",260,0)
 Q
"RTN","MAGDQR21",261,0)
 ;
"RTN","MAGDQR21",262,0)
ISGRP(D0,INCDEL) ; return 1 if D0 is a group IEN, 0 otherwise
"RTN","MAGDQR21",263,0)
 N ISGRP
"RTN","MAGDQR21",264,0)
 S ISGRP=1
"RTN","MAGDQR21",265,0)
 I 'INCDEL,'$D(^MAG(2005,D0,1)) S ISGRP=0 ; a single image (e.g., photo ID), not a group
"RTN","MAGDQR21",266,0)
 I INCDEL,'$D(^MAG(2005,D0,1)),'$D(^MAG(2005.1,D0,1)) S ISGRP=0 ; a single deleted image (e.g., photo ID), not a group
"RTN","MAGDQR21",267,0)
 Q ISGRP
"RTN","MAGDQR21",268,0)
 ;
"RTN","MAGDQR21",269,0)
GETGPIM(D0,REQDFN,PATCOUNT) ; return total images in the group and PATCOUNT array for patient validation
"RTN","MAGDQR21",270,0)
 N D1,I0,DFN,IMGCNT
"RTN","MAGDQR21",271,0)
 S IMGCNT=0
"RTN","MAGDQR21",272,0)
 S D1=0 ;go through all images. They should belong to one pt
"RTN","MAGDQR21",273,0)
 F  S D1=$O(^MAG(2005,D0,1,D1)) Q:'D1  D
"RTN","MAGDQR21",274,0)
 . S I0=+$G(^MAG(2005,D0,1,D1,0)) Q:'I0
"RTN","MAGDQR21",275,0)
 . S DFN=+$P($G(^MAG(2005,I0,0)),"^",7)
"RTN","MAGDQR21",276,0)
 . S PATCOUNT(DFN)="" ;populate PATCOUNT with DFN for validation (DFN might be different in this case it's a corrupted record)
"RTN","MAGDQR21",277,0)
 . ; increment image count unless single pt was requested and this isn't that pt
"RTN","MAGDQR21",278,0)
 . I REQDFN'=DFN Q
"RTN","MAGDQR21",279,0)
 . S IMGCNT=IMGCNT+1
"RTN","MAGDQR21",280,0)
 . Q
"RTN","MAGDQR21",281,0)
 Q IMGCNT
"RTN","MAGDQR21",282,0)
 ;
"RTN","MAGDQR21",283,0)
GETGPDIM(D0,REQDFN,PATCOUNT) ; return total images in the group and PATCOUNT array for patient validation
"RTN","MAGDQR21",284,0)
 N I0,DFN,IMGCNT
"RTN","MAGDQR21",285,0)
 S IMGCNT=0
"RTN","MAGDQR21",286,0)
 S I0="" ;go through all AUDIT images.
"RTN","MAGDQR21",287,0)
 F  S I0=$O(^MAG(2005.1,"AGP",D0,I0)) Q:I0=""  D
"RTN","MAGDQR21",288,0)
 . S DFN=+$P($G(^MAG(2005.1,I0,0)),"^",7)
"RTN","MAGDQR21",289,0)
 . S PATCOUNT(DFN)="" ;populate PATCOUNT with DFN for validation (DFN might be different in this case it's a corrupted record)
"RTN","MAGDQR21",290,0)
 . ; increment image count unless single pt was requested and this isn't that pt
"RTN","MAGDQR21",291,0)
 . I REQDFN'=DFN Q
"RTN","MAGDQR21",292,0)
 . S IMGCNT=IMGCNT+1
"RTN","MAGDQR21",293,0)
 . Q
"RTN","MAGDQR21",294,0)
 Q IMGCNT
"RTN","MAGDQR21",295,0)
 ;
"RTN","MAGDQR21",296,0)
VALPAT(UID,PAT,PATCOUNT,REQDFN) ; Validate - should only have one patient
"RTN","MAGDQR21",297,0)
 N CONT,DFN
"RTN","MAGDQR21",298,0)
 ;
"RTN","MAGDQR21",299,0)
 S CONT=1,PATCOUNT=0
"RTN","MAGDQR21",300,0)
 S DFN="" F  S DFN=$O(PATCOUNT(DFN)) Q:DFN=""  S PATCOUNT=PATCOUNT+1
"RTN","MAGDQR21",301,0)
 ;
"RTN","MAGDQR21",302,0)
 I PATCOUNT>1 D
"RTN","MAGDQR21",303,0)
 . ; duplicate study instance UID?
"RTN","MAGDQR21",304,0)
 . D WRTOUT^MAGDQR21("STUDY_ERR|"_UID_"|"_PATCOUNT_" different patients")
"RTN","MAGDQR21",305,0)
 . S CONT=$S('REQDFN:0,'$D(PAT(REQDFN)):0,1:1) ;continue processing with error if patient requested found 
"RTN","MAGDQR21",306,0)
 . Q
"RTN","MAGDQR21",307,0)
 ;
"RTN","MAGDQR21",308,0)
 Q CONT
"RTN","MAGDQR21",309,0)
 ;
"RTN","MAGDQR21",310,0)
WRTIEN(UID,I0,TOTIMAGES,REQDFN) ; Output STUDY UID and IEN line
"RTN","MAGDQR21",311,0)
 N OBJGRP
"RTN","MAGDQR21",312,0)
 ; 
"RTN","MAGDQR21",313,0)
 D:UID'="" WRTOUT^MAGDQR21("STUDY_UID|"_UID)
"RTN","MAGDQR21",314,0)
 I 'I0 D WRTOUT^MAGDQR21("STUDY_ERR|"_UID_"|Matching study not found for patient "_REQDFN) Q 0
"RTN","MAGDQR21",315,0)
 S OBJGRP=$$ONEGROUP^MAGDQR21(I0) ; get the first image IEN for group/image I0
"RTN","MAGDQR21",316,0)
 D WRTOUT^MAGDQR21("STUDY_IEN|"_I0_"|"_TOTIMAGES_"|"_OBJGRP_"|"_$$CPTCODE^MAGDQR21(I0)_"|"_$$GETSITE1^MAGDQR21(OBJGRP))
"RTN","MAGDQR21",317,0)
 Q 1
"RTN","MAGDQR21",318,0)
 ; 
"RTN","MAGDQR21",319,0)
INTEGDFN(I0,REQDFN,INCDEL) ; check integrity of study record
"RTN","MAGDQR21",320,0)
 ;Return 1 if Specified DFN (REQDFN) matches study DFN (VA internal use only!)
"RTN","MAGDQR21",321,0)
 ;       0 otherwise
"RTN","MAGDQR21",322,0)
 N X,CONT,MAGFIL,QINTEG
"RTN","MAGDQR21",323,0)
 ;
"RTN","MAGDQR21",324,0)
 D CHK^MAGGSQI(.X,I0)
"RTN","MAGDQR21",325,0)
 S QINTEG='$G(X(0))
"RTN","MAGDQR21",326,0)
 D:QINTEG APDOUT^MAGDQR21("|"_$P($G(X(0)),"^",2))
"RTN","MAGDQR21",327,0)
 S CONT=1
"RTN","MAGDQR21",328,0)
 ; override QI check only if image DFN = DFN specified in call
"RTN","MAGDQR21",329,0)
 ; (VA internal only!)
"RTN","MAGDQR21",330,0)
 I QINTEG D
"RTN","MAGDQR21",331,0)
 . I 'REQDFN S CONT=0 Q
"RTN","MAGDQR21",332,0)
 . S MAGFIL=$$FILE^MAGGI11(I0)
"RTN","MAGDQR21",333,0)
 . I MAGFIL="" S CONT=0 Q
"RTN","MAGDQR21",334,0)
 . S:$P($G(^MAG(MAGFIL,I0,0)),"^",7)'=REQDFN CONT=0
"RTN","MAGDQR21",335,0)
 . Q
"RTN","MAGDQR21",336,0)
 ;
"RTN","MAGDQR21",337,0)
 Q CONT
"RTN","MAGDQR21",338,0)
 ;
"RTN","MAGDQR21",339,0)
WRTMOD(STUMO) ; Output STUDY_MODALITY line
"RTN","MAGDQR21",340,0)
 N M,X
"RTN","MAGDQR21",341,0)
 S X="",M=""
"RTN","MAGDQR21",342,0)
 F  S M=$O(STUMO(M)) Q:M=""  S X=X_$S(X'="":",",1:"")_M
"RTN","MAGDQR21",343,0)
 D:X'="" WRTOUT^MAGDQR21("STUDY_MODALITY|"_X)
"RTN","MAGDQR21",344,0)
 Q
"RTN","MAGDQR21",345,0)
 ;
"RTN","MAGDQR21",346,0)
ONEGROUP(GROUP) ; Get the first IMAGE_IEN for this group in IMAGE file (#2005)
"RTN","MAGDQR21",347,0)
 ;                or IMAGE AUDIT file (#2005.1)  
"RTN","MAGDQR21",348,0)
 N D1,IMGIEN,MAGNODE
"RTN","MAGDQR21",349,0)
 S MAGNODE=$$NODE^MAGGI11(GROUP)
"RTN","MAGDQR21",350,0)
 I MAGNODE="" Q "0^Error 2 - First Image not available; No Data"
"RTN","MAGDQR21",351,0)
 I '$D(@MAGNODE@(1)) Q GROUP ; a single image (e.g., photo ID), not a group
"RTN","MAGDQR21",352,0)
 S IMGIEN=""
"RTN","MAGDQR21",353,0)
 S D1=$O(@MAGNODE@(1,0))
"RTN","MAGDQR21",354,0)
 I D1>0 S IMGIEN=+$G(@MAGNODE@(1,D1,0))
"RTN","MAGDQR21",355,0)
 I IMGIEN'>0 S IMGIEN=$O(^MAG(2005.1,"AGP",GROUP,""))
"RTN","MAGDQR21",356,0)
 I IMGIEN'>0 S IMGIEN="0^Error 1 - First Image not available"
"RTN","MAGDQR21",357,0)
 Q IMGIEN
"RTN","MAGDQR21",358,0)
 ;
"RTN","MAGDQR21",359,0)
WRTOUT(S) ; Write a new line
"RTN","MAGDQR21",360,0)
 N CNT
"RTN","MAGDQR21",361,0)
 S CNT=^TMP("MAG",$J,"STUDY",1)+1
"RTN","MAGDQR21",362,0)
 S ^TMP("MAG",$J,"STUDY",1)=CNT
"RTN","MAGDQR21",363,0)
 S ^TMP("MAG",$J,"STUDY",CNT)=S
"RTN","MAGDQR21",364,0)
 Q
"RTN","MAGDQR21",365,0)
 ;
"RTN","MAGDQR21",366,0)
APDOUT(S) ; Append to last line
"RTN","MAGDQR21",367,0)
 N CNT
"RTN","MAGDQR21",368,0)
 S CNT=^TMP("MAG",$J,"STUDY",1)
"RTN","MAGDQR21",369,0)
 S ^TMP("MAG",$J,"STUDY",CNT)=$G(^TMP("MAG",$J,"STUDY",CNT))_S
"RTN","MAGDQR21",370,0)
 Q
"RTN","MAGDQR21",371,0)
 ;
"RTN","MAGDQR21",372,0)
CPTCODE(MAGIEN) ; Returns CPT code by IEN (image pointer) in IMAGE file (#2005)
"RTN","MAGDQR21",373,0)
 ;                or IMAGE AUDIT file (#2005.1)  
"RTN","MAGDQR21",374,0)
 ; MAGIEN = IEN in IMAGE file (#2005) or IMAGE AUDIT file (#2005.1)
"RTN","MAGDQR21",375,0)
 N RAIEN,CPTCODE,MAGFILE
"RTN","MAGDQR21",376,0)
 S MAGFILE=$$FILE^MAGGI11(MAGIEN)
"RTN","MAGDQR21",377,0)
 S RAIEN=+$$GET1^DIQ(MAGFILE,MAGIEN,62,"I")  ; Get PACS PROCEDURE field #62
"RTN","MAGDQR21",378,0)
 S CPTCODE=$P($G(^RAMIS(71,RAIEN,0)),"^",9) ; IA # 1174  get CPT Code
"RTN","MAGDQR21",379,0)
 Q:CPTCODE="" ""  ; quit with empty code
"RTN","MAGDQR21",380,0)
 S CPTCODE=$$CPT^ICPTCOD(CPTCODE) ; IA # 1995, supported reference
"RTN","MAGDQR21",381,0)
 Q $P(CPTCODE,"^",2) ; Return the code
"RTN","MAGDQR21",382,0)
 ;
"RTN","MAGDQR21",383,0)
GETSITE1(MAGIEN) ; Returns STATION NUMBER where the image is stored
"RTN","MAGDQR21",384,0)
 ; MAGIEN = IEN in IMAGE file (#2005)
"RTN","MAGDQR21",385,0)
 N MAGNODE,TMP,NLOCIEN,PLC
"RTN","MAGDQR21",386,0)
 N SITEIEN,SITENUM
"RTN","MAGDQR21",387,0)
 I MAGIEN'>0 Q ""
"RTN","MAGDQR21",388,0)
 D:'$D(MAGJOB("NETPLC")) NETPLCS^MAGGTU6 ; Initialize MAGJOB("NETPLC")
"RTN","MAGDQR21",389,0)
 S MAGNODE=$$NODE^MAGGI11(MAGIEN)
"RTN","MAGDQR21",390,0)
 I MAGNODE="" Q ""
"RTN","MAGDQR21",391,0)
 S TMP=$G(@MAGNODE@(0))
"RTN","MAGDQR21",392,0)
 S NLOCIEN=+$S($P(TMP,U,3):$P(TMP,U,3),1:$P(TMP,U,5)) ; Get IEN in NETWORK LOCATION file (#2005.2)
"RTN","MAGDQR21",393,0)
 S PLC=$P($G(MAGJOB("NETPLC",NLOCIEN)),U,1)     ; Imaging Site Parameters IEN
"RTN","MAGDQR21",394,0)
 Q $$GETSNUM^MAGDQR21(PLC)  ; Return STATION NUMBER
"RTN","MAGDQR21",395,0)
 ;
"RTN","MAGDQR21",396,0)
GETSNUM(MAGPLC) ; Returns STATION NUMBER by Image Site Parameters IEN
"RTN","MAGDQR21",397,0)
 ; MAGPLC - IEN in IMAGING SITE PARAMETERS file (#2006.1)
"RTN","MAGDQR21",398,0)
 I MAGPLC'>0 Q ""
"RTN","MAGDQR21",399,0)
 N SITEIEN,SITENUM
"RTN","MAGDQR21",400,0)
 S SITEIEN=$P($G(^MAG(2006.1,MAGPLC,0)),U,1)    ; Get Station IEN in INSTITUTION file (#4)
"RTN","MAGDQR21",401,0)
 Q:SITEIEN="" ""  ; if SITE IEN is not defined return blank
"RTN","MAGDQR21",402,0)
 S SITENUM=$P($$NS^XUAF4(SITEIEN),U,2)      ; IA #2171  Get Station Number
"RTN","MAGDQR21",403,0)
 Q SITENUM
"RTN","MAGGDEV")
0^3^B10283027
"RTN","MAGGDEV",1,0)
MAGGDEV ;WOIFO/LB,NST - Routine to enter Imaging device entries ; 18 Mar 2013 1:40 PM
"RTN","MAGGDEV",2,0)
 ;;3.0;IMAGING;**98,119**;Mar 19, 2002;Build 4396;Apr 19, 2013
"RTN","MAGGDEV",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGDEV",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGDEV",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGDEV",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGDEV",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGDEV",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGDEV",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGDEV",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGDEV",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGDEV",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGDEV",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGDEV",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGDEV",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGDEV",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGDEV",17,0)
 ;;
"RTN","MAGGDEV",18,0)
 Q
"RTN","MAGGDEV",19,0)
EN ;Create/Update an entry in the Device file for an Imaging workstation.
"RTN","MAGGDEV",20,0)
 ;
"RTN","MAGGDEV",21,0)
TERM N A,DA,DD,DO,DIC,DIE,DR,ENTRY,X,Y
"RTN","MAGGDEV",22,0)
 W !,"I will check the 'P-IMAGING' entry in the Terminal Type file."
"RTN","MAGGDEV",23,0)
 S DA=$$FIND1^DIC(3.2,,,"P-IMAGING","B")
"RTN","MAGGDEV",24,0)
 I DA D  G DEV  ;update
"RTN","MAGGDEV",25,0)
 . S DIE="^%ZIS(2,",DR="7///D CLOSE^MAGGTU5 X "_$C(34)_"C IO:"_$C(34,34)_"D"_$C(34,34,34)_" K IO(1,IO)" D ^DIE
"RTN","MAGGDEV",26,0)
 . Q
"RTN","MAGGDEV",27,0)
 ;Set the entry
"RTN","MAGGDEV",28,0)
 S DIC="^%ZIS(2,"
"RTN","MAGGDEV",29,0)
 S X="P-IMAGING",DIC(0)="O" K DD,D0 D FILE^DICN
"RTN","MAGGDEV",30,0)
 S ENTRY=+Y G:'ENTRY ERRDEV
"RTN","MAGGDEV",31,0)
 S DR=".02///0;1///80;2///"_"#"_";4///"_"$C(8)"_";7///D CLOSE^MAGGTU5 X "_$C(34)_"C IO:"_$C(34,34)_"D"_$C(34,34,34)_" K IO(1,IO);3///64"
"RTN","MAGGDEV",32,0)
 S DA=ENTRY,DIE="^%ZIS(2," D ^DIE
"RTN","MAGGDEV",33,0)
 ;.02/SELECTABLE AT SIGNON;1/RIGHT MARGIN;2/FORM FEED;4/BACK SPACE
"RTN","MAGGDEV",34,0)
 ;7/CLOSE EXECUTE*P98 - added X "...";3/PAGE LENGTH
"RTN","MAGGDEV",35,0)
DEV N A,DA,DD,DO,DIC,DIE,ENTRY,X,Y,MAGOS
"RTN","MAGGDEV",36,0)
 W !,"I will check an 'Imaging Workstation' entry in the Device file."
"RTN","MAGGDEV",37,0)
 S DA=$$FIND1^DIC(3.5,,,"IMAGING WORKSTATION","B")
"RTN","MAGGDEV",38,0)
 I DA D  Q  ;update
"RTN","MAGGDEV",39,0)
 . S DIE="^%ZIS(1,",DR="19.7///S IO=$P(IO,""."")_$J_"".""_$P(IO,""."",2)" D ^DIE
"RTN","MAGGDEV",40,0)
 . Q
"RTN","MAGGDEV",41,0)
 S DIC="^%ZIS(1,"
"RTN","MAGGDEV",42,0)
 S X="IMAGING WORKSTATION",DIC(0)="O" K DD,D0 D FILE^DICN
"RTN","MAGGDEV",43,0)
 S ENTRY=+Y G:'ENTRY ERRDEV
"RTN","MAGGDEV",44,0)
 I ^%ZOSF("OS")["OpenM" D
"RTN","MAGGDEV",45,0)
 . S MAGOS="OPENM"
"RTN","MAGGDEV",46,0)
 . S DA=ENTRY,DR=".02///"_"BROKER"_";3///"_"P-IMAGING"_";1///"_"WS.DAT"
"RTN","MAGGDEV",47,0)
 . S DR=DR_";4///0;5///0;19///"_"""NWS"""_";2///"_"HFS;19.7///S IO=$P(IO,""."")_$J_"".""_$P(IO,""."",2)"
"RTN","MAGGDEV",48,0)
 . S DIE="^%ZIS(1,"
"RTN","MAGGDEV",49,0)
 I $D(MAGOS) D ^DIE
"RTN","MAGGDEV",50,0)
 ; The following lines describe the field number/name for the DR string.
"RTN","MAGGDEV",51,0)
 ;.02/LOCATION OF TERMINAL;3/SUBTYPE;1/$I;4=ASK DEVICE;5/ASK PARAMETERS
"RTN","MAGGDEV",52,0)
 ;19/OPEN PARAMETERS;2/TYPE
"RTN","MAGGDEV",53,0)
 Q
"RTN","MAGGDEV",54,0)
ERRDEV ;
"RTN","MAGGDEV",55,0)
 W:$G(DIC)="^%ZIS(2," !,"Could not setup the IMAGING WORKSTATION entry in the Device file."
"RTN","MAGGDEV",56,0)
 W:$G(DIC)="^%ZIS(1," !,"Could not setup the P-IMAGING entry in the Terminal Type file."
"RTN","MAGGDEV",57,0)
MSG W !,"Please review the Installation Manual to create this entry."
"RTN","MAGGDEV",58,0)
 Q
"RTN","MAGGTUX5")
0^4^B5574202
"RTN","MAGGTUX5",1,0)
MAGGTUX5 ;WIOFO/BT - Imaging utility to run in post install ; 01 Mar 2012 4:05 pM
"RTN","MAGGTUX5",2,0)
 ;;3.0;IMAGING;**119**;Mar 19, 2002;Build 4396;Apr 19, 2013
"RTN","MAGGTUX5",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTUX5",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTUX5",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTUX5",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTUX5",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTUX5",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTUX5",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTUX5",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTUX5",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTUX5",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTUX5",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTUX5",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTUX5",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTUX5",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTUX5",17,0)
 ;;
"RTN","MAGGTUX5",18,0)
 Q
"RTN","MAGGTUX5",19,0)
 ;
"RTN","MAGGTUX5",20,0)
UPD20051() ; Updates IMAGE AUDIT file (#2005.1)
"RTN","MAGGTUX5",21,0)
 ; Returns 0 for success 
"RTN","MAGGTUX5",22,0)
 ; and -39^Taskman has not scheduled the task for failure 
"RTN","MAGGTUX5",23,0)
 N MAGDESC,MOTH,MAGRES,MSG,MAGRC
"RTN","MAGGTUX5",24,0)
 S MAGDESC="Patch 119: Build ""P"" Index in IMAGE AUDIT file (#2005.1)"
"RTN","MAGGTUX5",25,0)
 S MOTH("ZTDTH")=$H
"RTN","MAGGTUX5",26,0)
 S MAGRES=$$NODEV^XUTMDEVQ("NDXCP^MAGGTUX5",MAGDESC,"MAGDESC",.MOTH)
"RTN","MAGGTUX5",27,0)
 I MAGRES<0 S MAGRC=$$ERROR^MAGUERR(-39) Q MAGRC  ; return
"RTN","MAGGTUX5",28,0)
 ;--- Display the confirmation message
"RTN","MAGGTUX5",29,0)
 K MSG
"RTN","MAGGTUX5",30,0)
 S MSG(1)="It will build ""P"" Index in IMAGE AUDIT file (#2005.1)"
"RTN","MAGGTUX5",31,0)
 D BMES^MAGKIDS("Task #"_MAGRES_" has been executed.",.MSG)
"RTN","MAGGTUX5",32,0)
 Q 0
"RTN","MAGGTUX5",33,0)
 ;
"RTN","MAGGTUX5",34,0)
NDXCP ;BUILDS NEW INDEX IN FILE #2005.1  - ^MAG(2005.1,"P",PACSUID,D0)
"RTN","MAGGTUX5",35,0)
 N MAGFILE
"RTN","MAGGTUX5",36,0)
 N PACSUID
"RTN","MAGGTUX5",37,0)
 N MAGIEN
"RTN","MAGGTUX5",38,0)
 ;
"RTN","MAGGTUX5",39,0)
 S MAGFILE=2005.1
"RTN","MAGGTUX5",40,0)
 ;--- Process the file
"RTN","MAGGTUX5",41,0)
 S MAGIEN=0
"RTN","MAGGTUX5",42,0)
 F  S MAGIEN=$O(^MAG(MAGFILE,MAGIEN)) Q:'MAGIEN  D
"RTN","MAGGTUX5",43,0)
 . S PACSUID=$P($G(^MAG(MAGFILE,MAGIEN,"PACS")),U)
"RTN","MAGGTUX5",44,0)
 . Q:PACSUID=""
"RTN","MAGGTUX5",45,0)
 . S ^MAG(MAGFILE,"P",PACSUID,MAGIEN)=""
"RTN","MAGGTUX5",46,0)
 . Q
"RTN","MAGGTUX5",47,0)
 Q
"RTN","MAGIP119")
0^5^B4769868
"RTN","MAGIP119",1,0)
MAGIP119 ;WOIFO/BT,NST - INSTALL CODE FOR MAG*3.0*119 ; 3/18/13 1:15pm
"RTN","MAGIP119",2,0)
 ;;3.0;IMAGING;**119**;Mar 19, 2002;Build 4396;Apr 19, 2013
"RTN","MAGIP119",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGIP119",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGIP119",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGIP119",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGIP119",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGIP119",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGIP119",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGIP119",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGIP119",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGIP119",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGIP119",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGIP119",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGIP119",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGIP119",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGIP119",17,0)
 ;;
"RTN","MAGIP119",18,0)
 ; There are no environment checks here but the MAGIP119 has to be
"RTN","MAGIP119",19,0)
 ; referenced by the "Environment Check Routine" field of the KIDS
"RTN","MAGIP119",20,0)
 ; build so that entry points of the routine are available to the
"RTN","MAGIP119",21,0)
 ; KIDS during all installation phases.
"RTN","MAGIP119",22,0)
 Q
"RTN","MAGIP119",23,0)
 ;
"RTN","MAGIP119",24,0)
 ;+++++ INSTALLATION ERROR HANDLING
"RTN","MAGIP119",25,0)
ERROR ;
"RTN","MAGIP119",26,0)
 S:$D(XPDNM) XPDABORT=1
"RTN","MAGIP119",27,0)
 ;--- Display the messages and store them to the INSTALL file
"RTN","MAGIP119",28,0)
 D DUMP^MAGUERR1(),ABTMSG^MAGKIDS()
"RTN","MAGIP119",29,0)
 Q
"RTN","MAGIP119",30,0)
 ;
"RTN","MAGIP119",31,0)
 ;***** POST-INSTALL CODE
"RTN","MAGIP119",32,0)
POS ;
"RTN","MAGIP119",33,0)
 N CALLBACK
"RTN","MAGIP119",34,0)
 D CLEAR^MAGUERR(1)
"RTN","MAGIP119",35,0)
 ;
"RTN","MAGIP119",36,0)
 ;--- Various Updates
"RTN","MAGIP119",37,0)
 I $$CP^MAGKIDS("MAG P119 UPDATE","$$UPDATE^"_$T(+0))<0  D ERROR  Q
"RTN","MAGIP119",38,0)
 ;
"RTN","MAGIP119",39,0)
 ;--- Build new index in file #2005.1
"RTN","MAGIP119",40,0)
 I $$CP^MAGKIDS("MAG IMAGE INDEX","$$UPD20051^MAGGTUX5")<0 D ERROR  Q
"RTN","MAGIP119",41,0)
 ;
"RTN","MAGIP119",42,0)
 ;--- Send the notification e-mail
"RTN","MAGIP119",43,0)
 I $$CP^MAGKIDS("MAG NOTIFICATION","$$NOTIFY^MAGKIDS1")<0  D ERROR  Q
"RTN","MAGIP119",44,0)
 Q
"RTN","MAGIP119",45,0)
 ;
"RTN","MAGIP119",46,0)
 ;+++++ Various updates
"RTN","MAGIP119",47,0)
UPDATE() ;
"RTN","MAGIP119",48,0)
 D EN^MAGGDEV  ; Update TERMINAL TYPE file (#3.2)
"RTN","MAGIP119",49,0)
 Q 0
"RTN","MAGIP119",50,0)
 ;
"RTN","MAGIP119",51,0)
 ;***** PRE-INSTALL CODE
"RTN","MAGIP119",52,0)
PRE ;
"RTN","MAGIP119",53,0)
 Q
"VER")
8.0^22.0
"^DD",2005.1,2005.1,60,0)
PACS UID^F^^PACS;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>64!($L(X)<1) X
"^DD",2005.1,2005.1,60,1,0)
^.1
"^DD",2005.1,2005.1,60,1,1,0)
2005.1^P
"^DD",2005.1,2005.1,60,1,1,1)
S ^MAG(2005.1,"P",$E(X,1,64),DA)=""
"^DD",2005.1,2005.1,60,1,1,2)
K ^MAG(2005.1,"P",$E(X,1,64),DA)
"^DD",2005.1,2005.1,60,1,1,3)
PACS UNIVERSAL IDENTIFIER
"^DD",2005.1,2005.1,60,1,1,"%D",0)
^.101^1^1^3120116^^^
"^DD",2005.1,2005.1,60,1,1,"%D",1,0)
This cross reference is set by images captured from VistA Imaging DICOM
"^DD",2005.1,2005.1,60,1,1,"DT")
3120110
"^DD",2005.1,2005.1,60,3)
A UID has up to 64 characters and must be unique.
"^DD",2005.1,2005.1,60,21,0)
^.001^2^2^3001107^^^
"^DD",2005.1,2005.1,60,21,1,0)
This field is used by the VISTA-PACS interface and is the unique (up to) 64
"^DD",2005.1,2005.1,60,21,2,0)
character image identifier of the PACS image.
"^DD",2005.1,2005.1,60,"DT")
3120110
**END**
**END**
L file
"RTN","MAGIP119",28,0)
 D DUMP^MAGUERR1(),ABTMSG^MAGKIDS()
"RTN","MAGIP119",29,0)
 Q
"RTN","MAGIP119",30,0)
 ;
"RTN","MAGIP119",31,0)
 ;***** POST-INSTALL CODE
"RTN","MAGIP119",32,0)
POS ;
"RTN","MAGIP119",33,0)
 N CALLBACK
"RTN","MAGIP119",34,0)
 D CLEAR^MAGUERR(1)
"RTN","MAGIP119",35,0)
 ;
"RTN","MAGIP119",36,0)
 ;--- Various Updates
"RTN","MAGIP119",37,0)
 I $$CP^MAGKIDS("MAG P119 UPDATE","$$UPDATE^"_$T(+0))<0  D ERROR  Q
"RTN","MAGIP119",38,0)
 ;
"RTN","MAGIP119",39,0)
 ;--- Build new index in file #2005.1
"RTN","MAGIP119",40,0)
 I $$CP^MAGKIDS("MAG IMAGE INDEX","$$UPD20051^MAGGTUX5")<0 D ERROR  Q
"RTN","MAGIP119",41,0)
 ;
"RTN","MAGIP119",42,0)
 ;--- Send the notification e-mail
"RTN","MAGIP119",43,0)
 I $$CP^MAGKIDS("MAG NOTIFICATION","$$NOTIFY^MAGKIDS1")<0  D ERROR  Q
"RTN","MAGIP119",44,0)
 Q
"RTN","MAGIP119",45,0)
 ;
"RTN","MAGIP119",46,0)
 ;+++++ Various updates
"RTN","MAGIP119",47,0)
UPDATE() ;
"RTN","MAGIP119",48,0)
 D EN^MAGGDEV  ; Update TERMINAL TYPE file (#3.2)
"RTN","MAGIP119",49,0)
 Q 0
"RTN","MAGIP119",50,0)
 ;
"RTN","MAGIP119",51,0)
 ;***** PRE-INSTALL CODE
"RTN","MAGIP119",52,0)
PRE ;
"RTN","MAGIP119",53,0)
 Q
"VER")
8.0^22.0
"^DD",2005.1,2005.1,60,0)
PACS UID^F^^PACS;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>64!($L(X)<1) X
"^DD",2005.1,2005.1,60,1,0)
^.1
"^DD",2005.1,2005.1,60,1,1,0)
2005.1^P
"^DD",2005.1,2005.1,60,1,1,1)
S ^MAG(2005.1,"P",$E(X,1,64),DA)=""
"^DD",2005.1,2005.1,60,1,1,2)
K ^MAG(2005.1,"P",$E(X,1,64),DA)
"^DD",2005.1,2005.1,60,1,1,3)
PACS UNIVERSAL IDENTIFIER
"^DD",2005.1,2005.1,60,1,1,"%D",0)
^.101^1^1^3120116^^^
"^DD",2005.1,2005.1,60,1,1,"%D",1,0)
This cross reference is set by images captured from VistA Imaging DICOM
"^DD",2005.1,2005.1,60,1,1,"DT")
3120110
"^DD",2005.1,2005.1,60,3)
A UID has up to 64 characters and must be unique.
"^DD",2005.1,2005.1,60,21,0)
^.001^2^2^3001107^^^
"^DD",2005.1,2005.1,60,21,1,0)
This field is used by the VISTA-PACS interface and is the unique (up to) 64
"^DD",2005.1,2005.1,60,21,2,0)
character image identifier of the PACS image.
"^DD",2005.1,2005.1,60,"DT")
3120110
**END**
**END**
