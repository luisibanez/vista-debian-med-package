Released OOPS*2*23 SEQ #22
Extracted from mail message
**KIDS**:OOPS*2.0*23^

**INSTALL NAME**
OOPS*2.0*23
"BLD",8629,0)
OOPS*2.0*23^ASISTS^0^3110523^y
"BLD",8629,1,0)
^^8^8^3110523^
"BLD",8629,1,1,0)
This patch fixes the following issues:
"BLD",8629,1,2,0)
 
"BLD",8629,1,3,0)
1)  Allow the OWCP CHARGEBACK SUFFIX field (#.8) field to
"BLD",8629,1,4,0)
    except numeric values
"BLD",8629,1,5,0)
2)  Issue's with classifying Incident outcome
"BLD",8629,1,6,0)
3)  Death is not checked on OSHA300 Report
"BLD",8629,1,7,0)
4)  Fix misleading description on the "Reason for Controvert 
"BLD",8629,1,8,0)
    Report" and the "Reason for Dispute Report"
"BLD",8629,4,0)
^9.64PA^2262^1
"BLD",8629,4,2262,0)
2262
"BLD",8629,4,2262,2,0)
^9.641^2262.03^1
"BLD",8629,4,2262,2,2262.03,0)
STATION  (sub-file)
"BLD",8629,4,2262,2,2262.03,1,0)
^9.6411^.8^1
"BLD",8629,4,2262,2,2262.03,1,.8,0)
OWCP CHARGEBACK SUFFIX
"BLD",8629,4,2262,222)
y^y^p^^^^n^^n
"BLD",8629,4,2262,224)

"BLD",8629,4,"APDD",2262,2262.03)

"BLD",8629,4,"APDD",2262,2262.03,.8)

"BLD",8629,4,"B",2262,2262)

"BLD",8629,6.3)
6
"BLD",8629,"KRN",0)
^9.67PA^779.2^20
"BLD",8629,"KRN",.4,0)
.4
"BLD",8629,"KRN",.401,0)
.401
"BLD",8629,"KRN",.402,0)
.402
"BLD",8629,"KRN",.403,0)
.403
"BLD",8629,"KRN",.5,0)
.5
"BLD",8629,"KRN",.84,0)
.84
"BLD",8629,"KRN",3.6,0)
3.6
"BLD",8629,"KRN",3.8,0)
3.8
"BLD",8629,"KRN",9.2,0)
9.2
"BLD",8629,"KRN",9.8,0)
9.8
"BLD",8629,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",8629,"KRN",9.8,"NM",1,0)
OOPSGUI1^^0^B34497365
"BLD",8629,"KRN",9.8,"NM",2,0)
OOPSGUIC^^0^B65085017
"BLD",8629,"KRN",9.8,"NM","B","OOPSGUI1",1)

"BLD",8629,"KRN",9.8,"NM","B","OOPSGUIC",2)

"BLD",8629,"KRN",19,0)
19
"BLD",8629,"KRN",19.1,0)
19.1
"BLD",8629,"KRN",101,0)
101
"BLD",8629,"KRN",409.61,0)
409.61
"BLD",8629,"KRN",771,0)
771
"BLD",8629,"KRN",779.2,0)
779.2
"BLD",8629,"KRN",870,0)
870
"BLD",8629,"KRN",8989.51,0)
8989.51
"BLD",8629,"KRN",8989.52,0)
8989.52
"BLD",8629,"KRN",8994,0)
8994
"BLD",8629,"KRN","B",.4,.4)

"BLD",8629,"KRN","B",.401,.401)

"BLD",8629,"KRN","B",.402,.402)

"BLD",8629,"KRN","B",.403,.403)

"BLD",8629,"KRN","B",.5,.5)

"BLD",8629,"KRN","B",.84,.84)

"BLD",8629,"KRN","B",3.6,3.6)

"BLD",8629,"KRN","B",3.8,3.8)

"BLD",8629,"KRN","B",9.2,9.2)

"BLD",8629,"KRN","B",9.8,9.8)

"BLD",8629,"KRN","B",19,19)

"BLD",8629,"KRN","B",19.1,19.1)

"BLD",8629,"KRN","B",101,101)

"BLD",8629,"KRN","B",409.61,409.61)

"BLD",8629,"KRN","B",771,771)

"BLD",8629,"KRN","B",779.2,779.2)

"BLD",8629,"KRN","B",870,870)

"BLD",8629,"KRN","B",8989.51,8989.51)

"BLD",8629,"KRN","B",8989.52,8989.52)

"BLD",8629,"KRN","B",8994,8994)

"BLD",8629,"QUES",0)
^9.62^^
"BLD",8629,"REQB",0)
^9.611^2^2
"BLD",8629,"REQB",1,0)
OOPS*2.0*21^1
"BLD",8629,"REQB",2,0)
OOPS*2.0*7^1
"BLD",8629,"REQB","B","OOPS*2.0*21",1)

"BLD",8629,"REQB","B","OOPS*2.0*7",2)

"FIA",2262)
ASISTS SITE PARAMETER
"FIA",2262,0)
^OOPS(2262,
"FIA",2262,0,0)
2262
"FIA",2262,0,1)
y^y^p^^^^n^^n
"FIA",2262,0,10)

"FIA",2262,0,11)

"FIA",2262,0,"RLRO")

"FIA",2262,0,"VR")
2.0^OOPS
"FIA",2262,2262)
1
"FIA",2262,2262.03)
1
"FIA",2262,2262.03,.8)

"MBREQ")
0
"PKG",472,-1)
1^1
"PKG",472,0)
ASISTS^OOPS^Automated Safety Incident Surveillance Tracking System
"PKG",472,20,0)
^9.402P^^
"PKG",472,22,0)
^9.49I^1^1
"PKG",472,22,1,0)
2.0^3020709^3030401^66481
"PKG",472,22,1,"PAH",1,0)
23^3110523
"PKG",472,22,1,"PAH",1,1,0)
^^8^8^3110523
"PKG",472,22,1,"PAH",1,1,1,0)
This patch fixes the following issues:
"PKG",472,22,1,"PAH",1,1,2,0)
 
"PKG",472,22,1,"PAH",1,1,3,0)
1)  Allow the OWCP CHARGEBACK SUFFIX field (#.8) field to
"PKG",472,22,1,"PAH",1,1,4,0)
    except numeric values
"PKG",472,22,1,"PAH",1,1,5,0)
2)  Issue's with classifying Incident outcome
"PKG",472,22,1,"PAH",1,1,6,0)
3)  Death is not checked on OSHA300 Report
"PKG",472,22,1,"PAH",1,1,7,0)
4)  Fix misleading description on the "Reason for Controvert 
"PKG",472,22,1,"PAH",1,1,8,0)
    Report" and the "Reason for Dispute Report"
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","OOPSGUI1")
0^1^B34497365^B34501859
"RTN","OOPSGUI1",1,0)
OOPSGUI1 ;WIOFO/LLH-RPC routines ;9/3/01
"RTN","OOPSGUI1",2,0)
 ;;2.0;ASISTS;**4,8,7,11,15,18,20,21,23**;Jun 03, 2002;Build 6
"RTN","OOPSGUI1",3,0)
 ;
"RTN","OOPSGUI1",4,0)
OPT(RESULTS,INP) ; Returns the ASISTS GUI Menus user has access to
"RTN","OOPSGUI1",5,0)
 ;      INP      - Input String containing the version of GUI making call
"RTN","OOPSGUI1",6,0)
 ;  RESUTLS      - return value for broker call
"RTN","OOPSGUI1",7,0)
 ;                 P1 = 1 DUZ defined
"RTN","OOPSGUI1",8,0)
 ;                 P2 = 1 Emp Health menu accessible
"RTN","OOPSGUI1",9,0)
 ;                 P3 = 1 Employee menu accessible
"RTN","OOPSGUI1",10,0)
 ;                 P4 = 1 Supervisor menu accessible
"RTN","OOPSGUI1",11,0)
 ;                 P5 = 1 Safety Officer menu accessible
"RTN","OOPSGUI1",12,0)
 ;                 P6 = 1 Union menu accessible
"RTN","OOPSGUI1",13,0)
 ;                 P7 = 1 Workers' Comp menu accessible
"RTN","OOPSGUI1",14,0)
 ;                 P8 = SSN from New Person file for user
"RTN","OOPSGUI1",15,0)
 ;                 P9 = server version #
"RTN","OOPSGUI1",16,0)
 ;
"RTN","OOPSGUI1",17,0)
 N CNT,MENU,OPT,PRIM,SM,VER
"RTN","OOPSGUI1",18,0)
 S CNT=1
"RTN","OOPSGUI1",19,0)
 I 'DUZ S RESULTS="0^^^^^^^" Q
"RTN","OOPSGUI1",20,0)
 S RESULTS=DUZ_"^0^0^0^0^0^0^"
"RTN","OOPSGUI1",21,0)
 ;V1_P23 - changed version to 23
"RTN","OOPSGUI1",22,0)
 S VER="2.23.1.0"        ;Define version check patch #4
"RTN","OOPSGUI1",23,0)
 I $G(INP)=""!($G(INP)'=VER) Q
"RTN","OOPSGUI1",24,0)
 S PRIM=$$GET1^DIQ(200,DUZ,201)     ; get primary menu
"RTN","OOPSGUI1",25,0)
 I $G(PRIM)'="" S MENU(PRIM)=""
"RTN","OOPSGUI1",26,0)
 S SM=0
"RTN","OOPSGUI1",27,0)
 F  S SM=$O(^VA(200,DUZ,203,SM))  Q:SM'>0  D
"RTN","OOPSGUI1",28,0)
 . S OPT=$$GET1^DIQ(19,$P($G(^VA(200,DUZ,203,SM,0)),U),.01)
"RTN","OOPSGUI1",29,0)
 . I $G(OPT)'="" S MENU(OPT)=""
"RTN","OOPSGUI1",30,0)
 I $D(MENU("OOPS GUI EMPLOYEE HEALTH MENU")) S $P(RESULTS,U,2)=1
"RTN","OOPSGUI1",31,0)
 I $D(MENU("OOPS GUI EMPLOYEE")) S $P(RESULTS,U,3)=1
"RTN","OOPSGUI1",32,0)
 I $D(MENU("OOPS GUI SUPERVISOR MENU")) S $P(RESULTS,U,4)=1
"RTN","OOPSGUI1",33,0)
 I $D(MENU("OOPS GUI SAFETY OFFICER MENU")) S $P(RESULTS,U,5)=1
"RTN","OOPSGUI1",34,0)
 I $D(MENU("OOPS GUI UNION MENU")) S $P(RESULTS,U,6)=1
"RTN","OOPSGUI1",35,0)
 I $D(MENU("OOPS GUI WORKERS' COMP MENU")) S $P(RESULTS,U,7)=1
"RTN","OOPSGUI1",36,0)
 I +$$ACCESS^XQCHK(DUZ,"OOPS GUI EMPLOYEE") S $P(RESULTS,U,3)=1
"RTN","OOPSGUI1",37,0)
 S $P(RESULTS,U,8)=$$GET1^DIQ(200,DUZ,9)
"RTN","OOPSGUI1",38,0)
 S $P(RESULTS,U,9)=VER              ;return the version defined above.
"RTN","OOPSGUI1",39,0)
 Q
"RTN","OOPSGUI1",40,0)
SETSIGN(RESULTS,INPUT,SIGN) ; This subroutine validates that the signature
"RTN","OOPSGUI1",41,0)
 ;                         can be entered and is valid
"RTN","OOPSGUI1",42,0)
 ;  Input:   INPUT - Contains the IEN of the ASISTS case, the form type,
"RTN","OOPSGUI1",43,0)
 ;                   and the field number.  The field number is used
"RTN","OOPSGUI1",44,0)
 ;                   to trigger what validation should be preformed on
"RTN","OOPSGUI1",45,0)
 ;                   the fields in the form so that the signature can
"RTN","OOPSGUI1",46,0)
 ;                   be applied. The fourth parameter is a special flag
"RTN","OOPSGUI1",47,0)
 ;                   indicating the Workers Comp is signing for employee
"RTN","OOPSGUI1",48,0)
 ;                   Format is IEN^FORM^FIELD^WCFLAG
"RTN","OOPSGUI1",49,0)
 ;            SIGN - contains the signature test to be encrypted.
"RTN","OOPSGUI1",50,0)
 ; Output: RESULTS - is an array containing a list of fields that did
"RTN","OOPSGUI1",51,0)
 ;                   not pass the data validation and must be corrected
"RTN","OOPSGUI1",52,0)
 ;                   prior to applying a signature.
"RTN","OOPSGUI1",53,0)
 N CALL,DTIME,FDUZ,FDT,FLD,IEN,INC,FORM,ESIG,VALID,CALLER,WOK
"RTN","OOPSGUI1",54,0)
 N DR,DA,DIE,WCFLG
"RTN","OOPSGUI1",55,0)
 S IEN=$P($G(INPUT),U),FORM=$P($G(INPUT),U,2),FLD=$P($G(INPUT),U,3)
"RTN","OOPSGUI1",56,0)
 I '$G(IEN)!('$G(FLD)) S RESULTS(1)="User not Authorized to sign form" Q
"RTN","OOPSGUI1",57,0)
 I FLD=45!(FLD=170)!(FLD=266) S CALL="S"
"RTN","OOPSGUI1",58,0)
 I FLD=49!(FLD=77) S CALL="O"
"RTN","OOPSGUI1",59,0)
 ; Patch 5 ll - added !(FLD=313)!(FLD=320)
"RTN","OOPSGUI1",60,0)
 I FLD=68!(FLD=313)!(FLD=320) S CALL="W"
"RTN","OOPSGUI1",61,0)
 I FLD=80 S CALL="H"
"RTN","OOPSGUI1",62,0)
 ; Patch 5 llh - added !(FLD=310)
"RTN","OOPSGUI1",63,0)
 I FLD=120!(FLD=222)!(FLD=310) S CALL="E"
"RTN","OOPSGUI1",64,0)
 S WCFLG=$P($G(INPUT),U,4)
"RTN","OOPSGUI1",65,0)
 I WCFLG'="W" D
"RTN","OOPSGUI1",66,0)
 .; Patch 5 llh - moved non fld check logic to separate line
"RTN","OOPSGUI1",67,0)
 .; added stuff to check if dual benefits have been signed
"RTN","OOPSGUI1",68,0)
 .I (FLD=120!(FLD=222)) D
"RTN","OOPSGUI1",69,0)
 ..I ($$GET1^DIQ(2260,IEN,71,"I")'="Y") D  Q
"RTN","OOPSGUI1",70,0)
 ...S RESULTS(1)="Claim cannot be signed until the Bill of Rights Statement is understood."
"RTN","OOPSGUI1",71,0)
 ...D WCPBOR^OOPSMBUL(IEN)
"RTN","OOPSGUI1",72,0)
 ;..Commented out Patch 11 cvw
"RTN","OOPSGUI1",73,0)
 ;..I $$GET1^DIQ(2260,IEN,310)="" D  Q
"RTN","OOPSGUI1",74,0)
 ;...S RESULTS(1)="Claim cannot be signed until the Dual Benefits form has been signed."
"RTN","OOPSGUI1",75,0)
 ; check to make sure PAID fields (also Service) not "", if "" get data
"RTN","OOPSGUI1",76,0)
 D CHKPAID
"RTN","OOPSGUI1",77,0)
 S VALID=0
"RTN","OOPSGUI1",78,0)
 S INC=$$GET1^DIQ(2260,IEN,52,"I")
"RTN","OOPSGUI1",79,0)
 ; Patch 5 llh - added ,(FLD'>300)
"RTN","OOPSGUI1",80,0)
 I (FLD'=77),(FLD'=80),(FLD'>300) D  I 'VALID Q
"RTN","OOPSGUI1",81,0)
 .D VALIDATE^OOPSGUI9(IEN,FORM,CALL,.VALID)
"RTN","OOPSGUI1",82,0)
 I $G(SIGN)="" S RESULTS(1)="No Signature Entered" Q
"RTN","OOPSGUI1",83,0)
 S VALID=$$VALIDATE($$DECRYP^XUSRB1(SIGN))
"RTN","OOPSGUI1",84,0)
 I 'VALID D  Q
"RTN","OOPSGUI1",85,0)
 .I $P($G(^VA(200,DUZ,20)),"^",4)="" S RESULTS(1)="No Electronic Signature on File" Q
"RTN","OOPSGUI1",86,0)
 .S RESULTS(1)="Invalid Signature Entered."
"RTN","OOPSGUI1",87,0)
SIGN ; All field validated, file signature
"RTN","OOPSGUI1",88,0)
 I FLD=77 S FDUZ=76,FDT=78             ; Safety approve WC sign
"RTN","OOPSGUI1",89,0)
 I FLD=80 S FDUZ=79,FDT=81             ; EH approve WC sign
"RTN","OOPSGUI1",90,0)
 I FLD=120 S FDUZ=119,FDT=121          ; Employee sign CA1
"RTN","OOPSGUI1",91,0)
 I FLD=222 S FDUZ=221,FDT=223          ; Employee sign CA2
"RTN","OOPSGUI1",92,0)
 I FLD=170 S FDUZ=169,FDT=171          ; Super sign CA1
"RTN","OOPSGUI1",93,0)
 I FLD=266 S FDUZ=265,FDT=267          ; Super sign CA2
"RTN","OOPSGUI1",94,0)
 I FLD=45 S FDUZ=44,FDT=46             ; Super sign 2162
"RTN","OOPSGUI1",95,0)
 I FLD=49 S FDUZ=48,FDT=50             ; Safety sign 2162
"RTN","OOPSGUI1",96,0)
 I FLD=68 S FDUZ=67,FDT=69,WOK=1       ; WC approve to DOL
"RTN","OOPSGUI1",97,0)
 ; patch 5 llh - added next 2 lines (may need more)
"RTN","OOPSGUI1",98,0)
 I FLD=310 S FDUZ=309,FDT=311          ; Emp sign Dual Benefits
"RTN","OOPSGUI1",99,0)
 I FLD=313 S FDUZ=312,FDT=314          ; WC sign Dual Benefits
"RTN","OOPSGUI1",100,0)
 D NOW^%DTC S DTIME=%
"RTN","OOPSGUI1",101,0)
 K DR S DIE="^OOPS(2260,",DA=IEN
"RTN","OOPSGUI1",102,0)
 S DR=FDUZ_"////^S X=+DUZ;"_FLD_"////^S X=ESIG;"_FDT_"////^S X=DTIME"
"RTN","OOPSGUI1",103,0)
 D ^DIE
"RTN","OOPSGUI1",104,0)
 I $G(Y)'="" Q
"RTN","OOPSGUI1",105,0)
 I FLD=68 D WCP^OOPSMBUL(IEN,"S")
"RTN","OOPSGUI1",106,0)
 I FLD=120!(FLD=222) S CALLER=CALL D EMP^OOPSVAL1
"RTN","OOPSGUI1",107,0)
 I FLD=45 D SAFETY^OOPSMBUL(IEN)
"RTN","OOPSGUI1",108,0)
 I (FLD=170)!(FLD=266) D SUPS^OOPSMBUL(IEN),UNION^OOPSMBUL(IEN)
"RTN","OOPSGUI1",109,0)
 Q
"RTN","OOPSGUI1",110,0)
VALIDATE(X) ; Validate Electronic Sign code
"RTN","OOPSGUI1",111,0)
 ;  Input:  X - contains the signature to be validated
"RTN","OOPSGUI1",112,0)
 ; Output: VSIGN - contains a 1 if a valid e-signature, a 0 if not valid
"RTN","OOPSGUI1",113,0)
 N VSIGN
"RTN","OOPSGUI1",114,0)
 S VSIGN=0
"RTN","OOPSGUI1",115,0)
 D HASH^XUSHSHP
"RTN","OOPSGUI1",116,0)
 I X'="",(X=$P($G(^VA(200,DUZ,20)),"^",4)) S VSIGN=1,ESIG=X
"RTN","OOPSGUI1",117,0)
 Q VSIGN
"RTN","OOPSGUI1",118,0)
CHKPAID ; check to make sure PAID fields have data, if not populate
"RTN","OOPSGUI1",119,0)
 ; this subroutine can be removed when go completely to GUI
"RTN","OOPSGUI1",120,0)
 N DA,DIE,DR,CAT,FLD,IEN200,OCCD,PAY,PAYP,RET,SAL,SERV,SSN
"RTN","OOPSGUI1",121,0)
 I $$GET1^DIQ(2260,IEN,60)="" D
"RTN","OOPSGUI1",122,0)
 .S FLD=26,RET="",RET=$$PAID^OOPSUTL1(IEN,FLD)
"RTN","OOPSGUI1",123,0)
 .S RET=$S(RET="FULL CSRS":"CSRS",RET="FERS":"FERS",1:"OTHER")
"RTN","OOPSGUI1",124,0)
 .S DIE="^OOPS(2260,",DA=IEN,DR="60///^S X=RET" D ^DIE
"RTN","OOPSGUI1",125,0)
 I $$GET1^DIQ(2260,IEN,86)="" D
"RTN","OOPSGUI1",126,0)
 .S SERV="",SSN=$$GET1^DIQ(2260,IEN,5,"I")
"RTN","OOPSGUI1",127,0)
 .I $G(SSN) S IEN200=$O(^VA(200,"SSN",SSN,""))
"RTN","OOPSGUI1",128,0)
 .I $G(IEN200) S SERV=$$GET1^DIQ(200,IEN200,29)
"RTN","OOPSGUI1",129,0)
 .S DIE="^OOPS(2260,",DA=IEN,DR="86///^S X=SERV" D ^DIE
"RTN","OOPSGUI1",130,0)
 I $$GET1^DIQ(2260,IEN,166)="" D
"RTN","OOPSGUI1",131,0)
 .S FLD=28,SAL="",SAL=$$PAID^OOPSUTL1(IEN,FLD)
"RTN","OOPSGUI1",132,0)
 .S DIE="^OOPS(2260,",DA=IEN,DR="166///^S X=SAL" D ^DIE
"RTN","OOPSGUI1",133,0)
 I $$GET1^DIQ(2260,IEN,167)="" D
"RTN","OOPSGUI1",134,0)
 .S FLD=19,PAY="",PAY=$$PAID^OOPSUTL1(IEN,FLD)
"RTN","OOPSGUI1",135,0)
 .S PAY=$S(PAY="PER ANNUM":"ANNUAL",PAY="PER HOUR":"HOURLY","PER DIEM":"DAILY","BIWEEKLY":"BI-WEEKLY",1:"")
"RTN","OOPSGUI1",136,0)
 .S DIE="^OOPS(2260,",DA=IEN,DR="167///^S X=PAY" D ^DIE
"RTN","OOPSGUI1",137,0)
 I $$GET1^DIQ(2260,IEN,63)="",($$GET1^DIQ(2260,IEN,2,"I")<3) D
"RTN","OOPSGUI1",138,0)
 .S CAT=$$GET1^DIQ(2260,IEN,2,"I")
"RTN","OOPSGUI1",139,0)
 .I CAT=1 S PAYP=$$PAID^OOPSUTL1(IEN,20) I $G(PAYP)'="" S PAYP=$$PAYP^OOPSUTL1(PAYP)
"RTN","OOPSGUI1",140,0)
 .I CAT=2 S PAYP="VO"
"RTN","OOPSGUI1",141,0)
 .S DIE="^OOPS(2260,",DA=IEN,DR="63///^S X=PAYP" D ^DIE
"RTN","OOPSGUI1",142,0)
 I $$GET1^DIQ(2260,IEN,111)="" D
"RTN","OOPSGUI1",143,0)
 .S FLD=16,OCCD="",OCCD=$$PAID^OOPSUTL1(IEN,FLD)
"RTN","OOPSGUI1",144,0)
 .S DIE="^OOPS(2260,",DA=IEN,DR="111///^S X=OCCD" D ^DIE
"RTN","OOPSGUI1",145,0)
 Q
"RTN","OOPSGUI1",146,0)
VALEMP(RESULTS,INPUT) ; This broker call should be used if the Pay
"RTN","OOPSGUI1",147,0)
 ;                 Plan = "OT" (other) to determine if the claim
"RTN","OOPSGUI1",148,0)
 ;                 can be successfully submitted to DOL.  The PERSONNEL
"RTN","OOPSGUI1",149,0)
 ;                 STATUS is assumed to equal 1 (employee)
"RTN","OOPSGUI1",150,0)
 S IEN=$P($G(INPUT),U,2),FORM=$P($G(INPUT),U)
"RTN","OOPSGUI1",151,0)
 I '$G(IEN)!($G(FORM)="") S RESULTS="Invalid Input, cannot continue." Q
"RTN","OOPSGUI1",152,0)
 I $$VALEMP^OOPSUTL6 S RESULTS="Valid" Q
"RTN","OOPSGUI1",153,0)
 S RESULTS="Invalid data on claim"
"RTN","OOPSGUI1",154,0)
 Q
"RTN","OOPSGUIC")
0^2^B65085017^B58713036
"RTN","OOPSGUIC",1,0)
OOPSGUIC ;WIOFO/LLH-RPC routine for GET/SET CA7 ;04/22/04
"RTN","OOPSGUIC",2,0)
 ;;2.0;ASISTS;**8,7,23**;Jun 03, 2002;Build 6
"RTN","OOPSGUIC",3,0)
 ;
"RTN","OOPSGUIC",4,0)
CA7LIST(RESULTS,PERSON,CALL) ; builds CA-7 selection list from existing
"RTN","OOPSGUIC",5,0)
 ;                         cases - not an add
"RTN","OOPSGUIC",6,0)
 ;
"RTN","OOPSGUIC",7,0)
 ;   Input:  PERSON  - person's SSN whether CALL="E" or "W"
"RTN","OOPSGUIC",8,0)
 ;              CALL - contains the calling menu and file number in the
"RTN","OOPSGUIC",9,0)
 ;                     format FILENUM^CALL.
"RTN","OOPSGUIC",10,0)
 ;  Output:  RESULTS - returns an array containing
"RTN","OOPSGUIC",11,0)
 ;                     CA7 case #^IEN^DATE OF INCIDENT
"RTN","OOPSGUIC",12,0)
 K ^TMP("CA7LIST",DUZ)
"RTN","OOPSGUIC",13,0)
 N ARR,CA7,CAIEN,CALLER,ESSN,FILE
"RTN","OOPSGUIC",14,0)
 S FILE=$P($G(CALL),U),CALLER=$P($G(CALL),U,2)
"RTN","OOPSGUIC",15,0)
 I $G(PERSON)=""!($G(CALL)="")!($G(FILE)="") D  Q
"RTN","OOPSGUIC",16,0)
 . S ^TMP("CA7LIST",DUZ,1)="Not enough info - can't process request"
"RTN","OOPSGUIC",17,0)
 S CAIEN=0,^TMP("CA7LIST",DUZ,1)="No CA-7's Selectable"
"RTN","OOPSGUIC",18,0)
 S ESSN=$$GET1^DIQ(200,DUZ,9)
"RTN","OOPSGUIC",19,0)
 I CALLER="E",ESSN'=PERSON D  Q
"RTN","OOPSGUIC",20,0)
 .S ^TMP("CA7LIST",DUZ,1)="User SSN, file SSN do not match-form aborted"
"RTN","OOPSGUIC",21,0)
 F  S CAIEN=$O(^OOPS(FILE,"SSN",PERSON,CAIEN)) Q:CAIEN=""  D
"RTN","OOPSGUIC",22,0)
 .;if from emp menu & signed by both, don't give access
"RTN","OOPSGUIC",23,0)
 .I CALLER="E",$P($G(^OOPS(FILE,CAIEN,"CA7S7")),U,2)'="",($P($G(^OOPS(FILE,CAIEN,"CA7S15")),U,2)'="") Q
"RTN","OOPSGUIC",24,0)
 .I CALLER="W",(ESSN=PERSON) Q
"RTN","OOPSGUIC",25,0)
 .S CA7=$$GET1^DIQ(FILE,CAIEN,.01),ARR(CA7)=CAIEN
"RTN","OOPSGUIC",26,0)
 ; drop thru here and
"RTN","OOPSGUIC",27,0)
SORT ; reverse the order
"RTN","OOPSGUIC",28,0)
 N CN,CA7,CAIEN,DOI,NM,SSN
"RTN","OOPSGUIC",29,0)
 S ^TMP("CA7LIST",DUZ,0)="",CN=1,CA7=""
"RTN","OOPSGUIC",30,0)
 I '$D(ARR) S ^TMP("CA7LIST",DUZ,1)="No CA7's Selectable"
"RTN","OOPSGUIC",31,0)
 F  S CA7=$O(ARR(CA7),-1) Q:CA7=""  D
"RTN","OOPSGUIC",32,0)
 .S CAIEN=ARR(CA7)
"RTN","OOPSGUIC",33,0)
 .S ASISTS=$$GET1^DIQ(2260,$$GET1^DIQ(FILE,CAIEN,.7,"I"),52,"I")
"RTN","OOPSGUIC",34,0)
 .S ASISTS="CA-"_$G(ASISTS)
"RTN","OOPSGUIC",35,0)
 .S NM=$E($$GET1^DIQ(FILE,CAIEN,.9),1,27)
"RTN","OOPSGUIC",36,0)
 .S DOI=$$GET1^DIQ(FILE,CAIEN,7)
"RTN","OOPSGUIC",37,0)
 .S SSN=$$GET1^DIQ(FILE,CAIEN,.8)
"RTN","OOPSGUIC",38,0)
 .S ^TMP("CA7LIST",DUZ,CN)=CA7_U_DOI_U_NM_U_ASISTS_U_CAIEN_U_SSN_$C(10)
"RTN","OOPSGUIC",39,0)
 .S CN=CN+1
"RTN","OOPSGUIC",40,0)
 ; then quit
"RTN","OOPSGUIC",41,0)
 S RESULTS=$NA(^TMP("CA7LIST",DUZ))
"RTN","OOPSGUIC",42,0)
 Q
"RTN","OOPSGUIC",43,0)
LISTCA(RESULTS,INPUT) ; returns a list of valid CA (1 or 2) claims that
"RTN","OOPSGUIC",44,0)
 ;                 can be selected to create a new CA-7
"RTN","OOPSGUIC",45,0)
 ;  Input:   INPUT - 3 pieces to input parameter
"RTN","OOPSGUIC",46,0)
 ;                   SSN^FILE^CALLER - CALLER contains either E
"RTN","OOPSGUIC",47,0)
 ;                   or W (menu called from).
"RTN","OOPSGUIC",48,0)
 ;                   FILE now only contains 2260 (for CA-1 or 2)
"RTN","OOPSGUIC",49,0)
 ; Output: RESULTS - contains a array of ASISTS Claims with the
"RTN","OOPSGUIC",50,0)
 ;                   claim number, name, and date of injury.  Other
"RTN","OOPSGUIC",51,0)
 ;                   default fields returned are, grade, step, pay amt,
"RTN","OOPSGUIC",52,0)
 ;                   pay period, FEGLI Code, and Health Ins.
"RTN","OOPSGUIC",53,0)
 ;
"RTN","OOPSGUIC",54,0)
 K ^TMP("LISTCA",DUZ)
"RTN","OOPSGUIC",55,0)
 N ARR,CAIEN,CALLER,CAIEN,CN,CNUM,DOI,FILE,INJ,NM,PAR,PDFLD,SSN
"RTN","OOPSGUIC",56,0)
 S PAR=$P($G(INPUT),U),FILE=$P($G(INPUT),U,2),CALLER=$P($G(INPUT),U,3)
"RTN","OOPSGUIC",57,0)
 I $G(PAR)=""!($G(FILE)="")!($G(CALLER)="") D  Q
"RTN","OOPSGUIC",58,0)
 .S ^TMP("LISTCA",DUZ,0)="Missing parameters - cannot continue"
"RTN","OOPSGUIC",59,0)
 S CAIEN=0
"RTN","OOPSGUIC",60,0)
 F  S CAIEN=$O(^OOPS(FILE,"SSN",PAR,CAIEN)) Q:CAIEN=""  D
"RTN","OOPSGUIC",61,0)
 .I '$$INCLUDE() Q
"RTN","OOPSGUIC",62,0)
 .I CALLER="E",($$GET1^DIQ(200,DUZ,9)'=PAR) Q
"RTN","OOPSGUIC",63,0)
 .I CALLER="W",($$GET1^DIQ(200,DUZ,9)=PAR) Q
"RTN","OOPSGUIC",64,0)
 .S CNUM=$$GET1^DIQ(FILE,CAIEN,.01),ARR(CNUM)=CAIEN
"RTN","OOPSGUIC",65,0)
 ; No cases to send back
"RTN","OOPSGUIC",66,0)
 I '$D(ARR) D  Q
"RTN","OOPSGUIC",67,0)
 .S ^TMP("LISTCA",DUZ,1)="No Cases Selectable"
"RTN","OOPSGUIC",68,0)
 .S RESULTS=$NA(^TMP("LISTCA",DUZ))
"RTN","OOPSGUIC",69,0)
 ; get reverse order
"RTN","OOPSGUIC",70,0)
 S CNUM="",CN=1
"RTN","OOPSGUIC",71,0)
 F  S CNUM=$O(ARR(CNUM),-1) Q:CNUM=""  D
"RTN","OOPSGUIC",72,0)
 .S CAIEN=ARR(CNUM)
"RTN","OOPSGUIC",73,0)
 .S NM=$$GET1^DIQ(FILE,CAIEN,1)
"RTN","OOPSGUIC",74,0)
 .S DOI=$$GET1^DIQ(FILE,CAIEN,4)
"RTN","OOPSGUIC",75,0)
 .S SSN=$TR($$GET1^DIQ(FILE,CAIEN,5),"-","")
"RTN","OOPSGUIC",76,0)
 .S GRD=$$GET1^DIQ(FILE,CAIEN,16)
"RTN","OOPSGUIC",77,0)
 .S STP=$$GET1^DIQ(FILE,CAIEN,17)
"RTN","OOPSGUIC",78,0)
 .S INJ=$$GET1^DIQ(FILE,CAIEN,52)
"RTN","OOPSGUIC",79,0)
 .S RET=$$GET1^DIQ(FILE,CAIEN,60)
"RTN","OOPSGUIC",80,0)
 .S PAY=$$GET1^DIQ(FILE,CAIEN,166)
"RTN","OOPSGUIC",81,0)
 .S PER=$$GET1^DIQ(FILE,CAIEN,167)
"RTN","OOPSGUIC",82,0)
 .; only need to do this 1 time, should never have but 1 different
"RTN","OOPSGUIC",83,0)
 .; person in this list, many claims but all for the same person
"RTN","OOPSGUIC",84,0)
 .I CN=1 S PDFLD=$$PDDEF()
"RTN","OOPSGUIC",85,0)
 .S STR=CNUM_U_DOI_U_NM_U_CAIEN_U_SSN_U_INJ_U_GRD_U_STP_U_PAY_U_PER
"RTN","OOPSGUIC",86,0)
 .S ^TMP("LISTCA",DUZ,CN)=STR_U_RET_U_PDFLD_U_DUZ_$C(10)
"RTN","OOPSGUIC",87,0)
 .S CN=CN+1
"RTN","OOPSGUIC",88,0)
 S RESULTS=$NA(^TMP("LISTCA",DUZ))
"RTN","OOPSGUIC",89,0)
 Q
"RTN","OOPSGUIC",90,0)
INCLUDE() ; checks to make sure ok to include claim in list
"RTN","OOPSGUIC",91,0)
 N CA7OK
"RTN","OOPSGUIC",92,0)
 S CA7OK=1
"RTN","OOPSGUIC",93,0)
 ; if claim not sent to DOL, can't pick
"RTN","OOPSGUIC",94,0)
 I $$GET1^DIQ(FILE,CAIEN,67)="" S CA7OK=0
"RTN","OOPSGUIC",95,0)
 ; if deleted, replaced by amendment - can't pick
"RTN","OOPSGUIC",96,0)
 I $$GET1^DIQ(FILE,CAIEN,51,"I")>1 S CA7OK=0
"RTN","OOPSGUIC",97,0)
 Q (CA7OK)
"RTN","OOPSGUIC",98,0)
PDDEF() ; get Fegli Code and Health insurance fields from paid
"RTN","OOPSGUIC",99,0)
 N CNT,FEG,FEG1,INS,INS1,PAID
"RTN","OOPSGUIC",100,0)
 S (FEG,FEG1,INS,INS1)=""
"RTN","OOPSGUIC",101,0)
 D FIND^DIC(450,,"@;226EI;231I","MPSC",SSN,10,"SSN")
"RTN","OOPSGUIC",102,0)
 I $G(DIERR) D CLEAN^DILF Q FEG_U_INS
"RTN","OOPSGUIC",103,0)
 I $P(^TMP("DILIST",$J,0),U)=0 Q FEG_U_INS
"RTN","OOPSGUIC",104,0)
 S PAID=$G(^TMP("DILIST",$J,1,0)),FEG=$P(PAID,U,3)
"RTN","OOPSGUIC",105,0)
 ; if A0 - ineligible, B0 - waived therefore No 
"RTN","OOPSGUIC",106,0)
 I FEG="A0"!(FEG="B0") S FEG1="N;"
"RTN","OOPSGUIC",107,0)
 ; if C0 - only Basic
"RTN","OOPSGUIC",108,0)
 I FEG="C0" S FEG1="Y;"
"RTN","OOPSGUIC",109,0)
 ; has Fegli, but not basic, additional, get additional code
"RTN","OOPSGUIC",110,0)
 I $G(FEG1)="",($L($P(PAID,U,2),"Basic +")>1) S FEG1="Y;"_FEG
"RTN","OOPSGUIC",111,0)
 ; now deal with insurance
"RTN","OOPSGUIC",112,0)
 S INS=$P(PAID,U,4)
"RTN","OOPSGUIC",113,0)
 ; if INS = 000, 001, 002, 003 they don't have insurance
"RTN","OOPSGUIC",114,0)
 I (INS?.N)&(+INS<4) S INS1="N;"
"RTN","OOPSGUIC",115,0)
 ; otherwise they do, get the code
"RTN","OOPSGUIC",116,0)
 I $G(INS1)="" S INS1="Y;"_INS
"RTN","OOPSGUIC",117,0)
 Q INS1_U_FEG1
"RTN","OOPSGUIC",118,0)
MULTIPLE(RESULTS,INPUT,DATA) ; retrieve data from multiple
"RTN","OOPSGUIC",119,0)
 ; NOTE:  When filing into subrecord, the entire subrecord is deleted
"RTN","OOPSGUIC",120,0)
 ;        then rebuilt.  Also, the field number for the subrecord
"RTN","OOPSGUIC",121,0)
 ;        must be passed with the data.
"RTN","OOPSGUIC",122,0)
 ;        WORD PROCESSING fields CANNOT file using this code
"RTN","OOPSGUIC",123,0)
 ;   Input:   INPUT - in the format FILE^FIELD^IEN
"RTN","OOPSGUIC",124,0)
 ;             DATA - array of data in the format
"RTN","OOPSGUIC",125,0)
 ;                    DATA(SIEN)=data where data = P1^P2^P3 etc, where
"RTN","OOPSGUIC",126,0)
 ;                    P1 = subfield #;data
"RTN","OOPSGUIC",127,0)
 ;                    DATA="" must be true for a GET.
"RTN","OOPSGUIC",128,0)
 ;  Output: RESULTS - data from all records in the multiple will
"RTN","OOPSGUIC",129,0)
 ;                     be returned.  it will be saved in a pieced
"RTN","OOPSGUIC",130,0)
 ;                     string.
"RTN","OOPSGUIC",131,0)
 N ACTION,ARR,IEN,FIELD,FILE,ROOT,SAVEDIK,SPEC,SUB,OOPSCNT,OOPSSV,OOPSSV1
"RTN","OOPSGUIC",132,0)
 S FILE=$P($G(INPUT),U),FIELD=$P($G(INPUT),U,2),IEN=$P($G(INPUT),U,3)
"RTN","OOPSGUIC",133,0)
 S ACTION="" I $D(DATA)>1 S ACTION=1
"RTN","OOPSGUIC",134,0)
 S RESULTS(0)="Record Accessed, no data"
"RTN","OOPSGUIC",135,0)
 I $G(IEN)=""!($G(FILE)="")!($G(FIELD)="") D  Q
"RTN","OOPSGUIC",136,0)
 . S RESULTS(0)="Invalid parameters cannot continue"
"RTN","OOPSGUIC",137,0)
 S ROOT=$$ROOT^DILFD(FILE,0,"GL")
"RTN","OOPSGUIC",138,0)
 S SPEC=+$$GET1^DID(FILE,FIELD,"","SPECIFIER")
"RTN","OOPSGUIC",139,0)
 S SUB=$$GET1^DID(FILE,FIELD,"","GLOBAL SUBSCRIPT LOCATION")
"RTN","OOPSGUIC",140,0)
 I '$$GET1^DID(FILE,FIELD,"","MULTIPLE-VALUED"),'$G(SPEC) D  Q
"RTN","OOPSGUIC",141,0)
 . S RESULTS(1)="Field in not a multiple, cannot continue"
"RTN","OOPSGUIC",142,0)
 ; now go get data from subfile
"RTN","OOPSGUIC",143,0)
 S SAVEDIK=ROOT_IEN_","_$C(34)_$P(SUB,";")_$C(34)_","
"RTN","OOPSGUIC",144,0)
 ;RRA OOPS*2*23 - ticket 396917 
"RTN","OOPSGUIC",145,0)
 ;GUI may pass in name as a string - so if there are duplicate names in #200
"RTN","OOPSGUIC",146,0)
 ;it doesn't know how to resolve the name to an ien
"RTN","OOPSGUIC",147,0)
 I ACTION,FILE=2260,FIELD=95 D
"RTN","OOPSGUIC",148,0)
 . S OOPSCNT=0
"RTN","OOPSGUIC",149,0)
 . F  S OOPSCNT=$O(DATA(OOPSCNT)) Q:OOPSCNT'>0  D
"RTN","OOPSGUIC",150,0)
 .. S OOPSSV=$P($P($G(DATA(OOPSCNT)),"^",8),";",2)
"RTN","OOPSGUIC",151,0)
 .. S OOPSSV1=$P($P($G(DATA(OOPSCNT)),"^",10),";",2)
"RTN","OOPSGUIC",152,0)
 .. I '+OOPSSV S $P(DATA(OOPSCNT),"^",8)="7;"_$P($G(^OOPS(2260,IEN,"OUTC",OOPSCNT,0)),"^",8)
"RTN","OOPSGUIC",153,0)
 .. I '+OOPSSV1 S $P(DATA(OOPSCNT),"^",10)="9;"_$P($G(^OOPS(2260,IEN,"OUTC",OOPSCNT,0)),"^",10)
"RTN","OOPSGUIC",154,0)
 ;END RRA OOPS*2*23
"RTN","OOPSGUIC",155,0)
 I 'ACTION D GETD
"RTN","OOPSGUIC",156,0)
 I ACTION D KILLD,SETD
"RTN","OOPSGUIC",157,0)
 Q
"RTN","OOPSGUIC",158,0)
GETD ; get the data
"RTN","OOPSGUIC",159,0)
 N CNT,DATA,FLDA,FLDS,IENS,SIEN,SFLD,SREC,TYPE
"RTN","OOPSGUIC",160,0)
 S CNT=0,IENS=IEN_","
"RTN","OOPSGUIC",161,0)
 S FLDA=FIELD_"*"
"RTN","OOPSGUIC",162,0)
 ; hate to hardwire, but need data back as entered, not canonical
"RTN","OOPSGUIC",163,0)
 I FILE=2262.03,FIELD=15 D FLD15 Q
"RTN","OOPSGUIC",164,0)
 D GETS^DIQ(FILE,IENS,FLDA,,"ARR")
"RTN","OOPSGUIC",165,0)
 I $D(ARR) S SIEN="",RESULTS(0)="" D
"RTN","OOPSGUIC",166,0)
 .F  S SIEN=$O(ARR(SPEC,SIEN)) Q:SIEN=""  D
"RTN","OOPSGUIC",167,0)
 ..S SFLD="",SREC=$P(SIEN,",")
"RTN","OOPSGUIC",168,0)
 ..F  S SFLD=$O(ARR(SPEC,SIEN,SFLD)) Q:SFLD=""  D
"RTN","OOPSGUIC",169,0)
 ...S DATA=ARR(SPEC,SIEN,SFLD)_U
"RTN","OOPSGUIC",170,0)
 ...S:$D(RESULTS(CNT))=0 RESULTS(CNT)=""
"RTN","OOPSGUIC",171,0)
 ...S RESULTS(CNT)=RESULTS(CNT)_DATA
"RTN","OOPSGUIC",172,0)
 ..S CNT=CNT+1
"RTN","OOPSGUIC",173,0)
 Q
"RTN","OOPSGUIC",174,0)
KILLD ; first kill all records in subfile, then rebuild
"RTN","OOPSGUIC",175,0)
 N DA,DIK,NODE
"RTN","OOPSGUIC",176,0)
 S NODE=$P(SUB,";"),DA=0,DA(1)=IEN,DIK=SAVEDIK
"RTN","OOPSGUIC",177,0)
 F  S DA=$O(@(ROOT_"DA(1),NODE,DA)")) Q:(+DA'>0)  D ^DIK
"RTN","OOPSGUIC",178,0)
 Q
"RTN","OOPSGUIC",179,0)
SETD ; subrecord cleaned out, now rebuild
"RTN","OOPSGUIC",180,0)
 N BAD,CN,DR,DIE,DA,DLAYGO,I,NUM,STR,DIC,TYPE
"RTN","OOPSGUIC",181,0)
 K DR
"RTN","OOPSGUIC",182,0)
 S RESULTS(0)="Filing successful"
"RTN","OOPSGUIC",183,0)
 S CN=0,DLAYGO=FILE,DA(1)=IEN,DIC=SAVEDIK,DIC(0)="L"
"RTN","OOPSGUIC",184,0)
 F  S CN=$O(DATA(CN)) Q:CN'>0  S X="",BAD=0 D
"RTN","OOPSGUIC",185,0)
 .S STR=DATA(CN),NUM=$L(DATA(CN),U),DIC("DR")=""
"RTN","OOPSGUIC",186,0)
 .F I=1:1:NUM S STR1=$P($G(STR),U,I) D:('BAD)
"RTN","OOPSGUIC",187,0)
 ..I $P(STR1,";")=.01,$P(STR1,";")="",$P(STR1,";",2)="" S BAD=1 Q
"RTN","OOPSGUIC",188,0)
 ..I $P(STR1,";")=.01 D
"RTN","OOPSGUIC",189,0)
 ...S TYPE=$$GET1^DID(SPEC,.01,"","TYPE")
"RTN","OOPSGUIC",190,0)
 ...I TYPE="DATE/TIME" S X=$$FMTE^XLFDT($P(STR1,";",2),2)
"RTN","OOPSGUIC",191,0)
 ...E  S X=$P(STR1,";",2)
"RTN","OOPSGUIC",192,0)
 ..S DIC("DR")=DIC("DR")_$P(STR1,";")_"///"_$P(STR1,";",2)_";"
"RTN","OOPSGUIC",193,0)
 .D MFILE
"RTN","OOPSGUIC",194,0)
 Q
"RTN","OOPSGUIC",195,0)
MFILE ; file the multiple
"RTN","OOPSGUIC",196,0)
 N PCE,PCE1,TMP
"RTN","OOPSGUIC",197,0)
 I X="" S RESULTS(0)=".01 field missing - could not file" Q
"RTN","OOPSGUIC",198,0)
 I $G(BAD) S RESULTS(0)="Problems Filing subrecord" Q
"RTN","OOPSGUIC",199,0)
 I $L(DIC("DR"))>240 D
"RTN","OOPSGUIC",200,0)
 .S PCE=$L(DIC("DR"),";"),TMP=DIC("DR"),PCE1=$P(PCE/2,".")
"RTN","OOPSGUIC",201,0)
 .S DIC("DR")=$P(TMP,";",1,PCE1)
"RTN","OOPSGUIC",202,0)
 .K DD,DO D FILE^DICN I Y'>0 S BAD=1
"RTN","OOPSGUIC",203,0)
 .S DIC("DR")=$P(TMP,";",(PCE1+1),PCE)
"RTN","OOPSGUIC",204,0)
 K DD,DO D FILE^DICN I Y'>0 S BAD=1
"RTN","OOPSGUIC",205,0)
 I BAD S RESULTS(0)="Problems filing subrecord"
"RTN","OOPSGUIC",206,0)
 Q
"RTN","OOPSGUIC",207,0)
OSHA300(RESULTS,STA,DATA) ; Files data into subrecord 2262.315
"RTN","OOPSGUIC",208,0)
 ;  Input - STA is the station number subrecord IEN
"RTN","OOPSGUIC",209,0)
 ;         DATA is an number subscripted array containing the records
"RTN","OOPSGUIC",210,0)
 ;              that contain the Emp Numbers and hours worked in the
"RTN","OOPSGUIC",211,0)
 ;              OSHA MONTH/YEAR subrecord.
"RTN","OOPSGUIC",212,0)
 ; Output - RESULTS indicating the success of the filing.
"RTN","OOPSGUIC",213,0)
 ;
"RTN","OOPSGUIC",214,0)
 N CNT,IENS,FILE,OSHAFDA,LV1,LV2,PAR,REC,STR
"RTN","OOPSGUIC",215,0)
 S CNT=1,FILE=2262.315
"RTN","OOPSGUIC",216,0)
 S PAR="^OOPS(2262,0)",PAR=$Q(@PAR),PAR=$Q(@PAR)
"RTN","OOPSGUIC",217,0)
 S LV1=$P(PAR,",",2),LV2=$P(PAR,",",3)
"RTN","OOPSGUIC",218,0)
 S RESULTS=""
"RTN","OOPSGUIC",219,0)
 I $D(DATA)<10 S RESULTS="NO DATA TO FILE, CANNOT CONTINUE" Q
"RTN","OOPSGUIC",220,0)
 I '$G(STA) S RESULTS="NOT ENOUGH PARAMETERS, COULDN'T FILE" Q
"RTN","OOPSGUIC",221,0)
 I '$D(^OOPS(2262,LV1,LV2,STA)) D  Q
"RTN","OOPSGUIC",222,0)
 .S RESULTS="NO STATION RECORD, COULDN'T FILE"
"RTN","OOPSGUIC",223,0)
 K ^OOPS(2262,LV1,LV2,STA,2)
"RTN","OOPSGUIC",224,0)
 S REC=0 F  S REC=$O(DATA(REC)) Q:REC=""  D
"RTN","OOPSGUIC",225,0)
 .S IENS="?+"_CNT_","_STA_","_LV1_","
"RTN","OOPSGUIC",226,0)
 .S STR=DATA(REC)
"RTN","OOPSGUIC",227,0)
 .S OSHAFDA(FILE,IENS,.01)=$P($P(STR,U,1),";",2)
"RTN","OOPSGUIC",228,0)
 .S OSHAFDA(FILE,IENS,1)=$P($P(STR,U,2),";",2)
"RTN","OOPSGUIC",229,0)
 .S OSHAFDA(FILE,IENS,2)=$P($P(STR,U,3),";",2)
"RTN","OOPSGUIC",230,0)
 .S CNT=CNT+1
"RTN","OOPSGUIC",231,0)
 D UPDATE^DIE("E","OSHAFDA","IENS","MSG")
"RTN","OOPSGUIC",232,0)
 I '$D(MSG) S RESULTS="Filing Successful"
"RTN","OOPSGUIC",233,0)
 K MSG,STR,Y,X,%DT
"RTN","OOPSGUIC",234,0)
 Q
"RTN","OOPSGUIC",235,0)
FLD15 ; retrieves OSHA 300A Summary data from file 2262
"RTN","OOPSGUIC",236,0)
 N CNT,DATE,LV1,LV2,PAR,REC
"RTN","OOPSGUIC",237,0)
 S CNT=0,PAR="^OOPS(2262,0)",PAR=$Q(@PAR),PAR=$Q(@PAR)
"RTN","OOPSGUIC",238,0)
 S LV1=$P(PAR,",",2),LV2=$P(PAR,",",3),IENS=$P(IEN,",",1),REC=0
"RTN","OOPSGUIC",239,0)
 F  S REC=$O(^OOPS(2262,LV1,LV2,IENS,2,REC)) Q:REC'>0  D
"RTN","OOPSGUIC",240,0)
 .S STR=$G(^OOPS(2262,LV1,LV2,IENS,2,REC,0))
"RTN","OOPSGUIC",241,0)
 .S Y=$P(STR,U,1) D DD^%DT
"RTN","OOPSGUIC",242,0)
 .S RESULTS(CNT)=Y_U_$P(STR,U,2,3)
"RTN","OOPSGUIC",243,0)
 .S CNT=CNT+1
"RTN","OOPSGUIC",244,0)
 Q
"UP",2262,2262.03,-1)
2262^1
"UP",2262,2262.03,0)
2262.03
"VER")
8.0^22.0
"^DD",2262,2262.03,.8,0)
OWCP CHARGEBACK SUFFIX^FX^^0;9^K:'(X?2AN) X
"^DD",2262,2262.03,.8,3)
Answer must be 2 characters in length.
"^DD",2262,2262.03,.8,21,0)
^^3^3^3110516^
"^DD",2262,2262.03,.8,21,1,0)
The OWCP Chargeback suffix is used to further define the Chargeback code for
"^DD",2262,2262.03,.8,21,2,0)
the facility.  It is optional, but if entered, must be 2 alphanumeric
"^DD",2262,2262.03,.8,21,3,0)
characters.
"^DD",2262,2262.03,.8,"DT")
3110516
"BLD",8629,6)
^22
**END**
**END**
