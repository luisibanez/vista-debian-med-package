Released OOPS*2*24 SEQ #23
Extracted from mail message
**KIDS**:OOPS*2.0*24^

**INSTALL NAME**
OOPS*2.0*24
"BLD",9084,0)
OOPS*2.0*24^ASISTS^0^3120501^y
"BLD",9084,1,0)
^^2^2^3120501^
"BLD",9084,1,1,0)
This patch addresses an issue where a user with a 4 digit DUZ cannot
"BLD",9084,1,2,0)
Classify Incident Outcome.
"BLD",9084,4,0)
^9.64PA^^
"BLD",9084,6.3)
1
"BLD",9084,"KRN",0)
^9.67PA^779.2^20
"BLD",9084,"KRN",.4,0)
.4
"BLD",9084,"KRN",.401,0)
.401
"BLD",9084,"KRN",.402,0)
.402
"BLD",9084,"KRN",.403,0)
.403
"BLD",9084,"KRN",.5,0)
.5
"BLD",9084,"KRN",.84,0)
.84
"BLD",9084,"KRN",3.6,0)
3.6
"BLD",9084,"KRN",3.8,0)
3.8
"BLD",9084,"KRN",9.2,0)
9.2
"BLD",9084,"KRN",9.8,0)
9.8
"BLD",9084,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",9084,"KRN",9.8,"NM",1,0)
OOPSGUIC^^0^B66128626
"BLD",9084,"KRN",9.8,"NM","B","OOPSGUIC",1)

"BLD",9084,"KRN",19,0)
19
"BLD",9084,"KRN",19.1,0)
19.1
"BLD",9084,"KRN",101,0)
101
"BLD",9084,"KRN",409.61,0)
409.61
"BLD",9084,"KRN",771,0)
771
"BLD",9084,"KRN",779.2,0)
779.2
"BLD",9084,"KRN",870,0)
870
"BLD",9084,"KRN",8989.51,0)
8989.51
"BLD",9084,"KRN",8989.52,0)
8989.52
"BLD",9084,"KRN",8994,0)
8994
"BLD",9084,"KRN","B",.4,.4)

"BLD",9084,"KRN","B",.401,.401)

"BLD",9084,"KRN","B",.402,.402)

"BLD",9084,"KRN","B",.403,.403)

"BLD",9084,"KRN","B",.5,.5)

"BLD",9084,"KRN","B",.84,.84)

"BLD",9084,"KRN","B",3.6,3.6)

"BLD",9084,"KRN","B",3.8,3.8)

"BLD",9084,"KRN","B",9.2,9.2)

"BLD",9084,"KRN","B",9.8,9.8)

"BLD",9084,"KRN","B",19,19)

"BLD",9084,"KRN","B",19.1,19.1)

"BLD",9084,"KRN","B",101,101)

"BLD",9084,"KRN","B",409.61,409.61)

"BLD",9084,"KRN","B",771,771)

"BLD",9084,"KRN","B",779.2,779.2)

"BLD",9084,"KRN","B",870,870)

"BLD",9084,"KRN","B",8989.51,8989.51)

"BLD",9084,"KRN","B",8989.52,8989.52)

"BLD",9084,"KRN","B",8994,8994)

"BLD",9084,"QUES",0)
^9.62^^
"BLD",9084,"REQB",0)
^9.611^1^1
"BLD",9084,"REQB",1,0)
OOPS*2.0*23^1
"BLD",9084,"REQB","B","OOPS*2.0*23",1)

"MBREQ")
0
"PKG",472,-1)
1^1
"PKG",472,0)
ASISTS^OOPS^Automated Safety Incident Surveillance Tracking System
"PKG",472,20,0)
^9.402P^^
"PKG",472,22,0)
^9.49I^1^1
"PKG",472,22,1,0)
2.0^3020709^3030401^66481
"PKG",472,22,1,"PAH",1,0)
24^3120501
"PKG",472,22,1,"PAH",1,1,0)
^^2^2^3120501
"PKG",472,22,1,"PAH",1,1,1,0)
This patch addresses an issue where a user with a 4 digit DUZ cannot
"PKG",472,22,1,"PAH",1,1,2,0)
Classify Incident Outcome.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","OOPSGUIC")
0^1^B66128626^B65085017
"RTN","OOPSGUIC",1,0)
OOPSGUIC ;WIOFO/LLH-RPC routine for GET/SET CA7 ;04/22/04
"RTN","OOPSGUIC",2,0)
 ;;2.0;ASISTS;**8,7,23,24**;Jun 03, 2002;Build 1
"RTN","OOPSGUIC",3,0)
 ;
"RTN","OOPSGUIC",4,0)
CA7LIST(RESULTS,PERSON,CALL) ; builds CA-7 selection list from existing
"RTN","OOPSGUIC",5,0)
 ;                         cases - not an add
"RTN","OOPSGUIC",6,0)
 ;
"RTN","OOPSGUIC",7,0)
 ;   Input:  PERSON  - person's SSN whether CALL="E" or "W"
"RTN","OOPSGUIC",8,0)
 ;              CALL - contains the calling menu and file number in the
"RTN","OOPSGUIC",9,0)
 ;                     format FILENUM^CALL.
"RTN","OOPSGUIC",10,0)
 ;  Output:  RESULTS - returns an array containing
"RTN","OOPSGUIC",11,0)
 ;                     CA7 case #^IEN^DATE OF INCIDENT
"RTN","OOPSGUIC",12,0)
 K ^TMP("CA7LIST",DUZ)
"RTN","OOPSGUIC",13,0)
 N ARR,CA7,CAIEN,CALLER,ESSN,FILE
"RTN","OOPSGUIC",14,0)
 S FILE=$P($G(CALL),U),CALLER=$P($G(CALL),U,2)
"RTN","OOPSGUIC",15,0)
 I $G(PERSON)=""!($G(CALL)="")!($G(FILE)="") D  Q
"RTN","OOPSGUIC",16,0)
 . S ^TMP("CA7LIST",DUZ,1)="Not enough info - can't process request"
"RTN","OOPSGUIC",17,0)
 S CAIEN=0,^TMP("CA7LIST",DUZ,1)="No CA-7's Selectable"
"RTN","OOPSGUIC",18,0)
 S ESSN=$$GET1^DIQ(200,DUZ,9)
"RTN","OOPSGUIC",19,0)
 I CALLER="E",ESSN'=PERSON D  Q
"RTN","OOPSGUIC",20,0)
 .S ^TMP("CA7LIST",DUZ,1)="User SSN, file SSN do not match-form aborted"
"RTN","OOPSGUIC",21,0)
 F  S CAIEN=$O(^OOPS(FILE,"SSN",PERSON,CAIEN)) Q:CAIEN=""  D
"RTN","OOPSGUIC",22,0)
 .;if from emp menu & signed by both, don't give access
"RTN","OOPSGUIC",23,0)
 .I CALLER="E",$P($G(^OOPS(FILE,CAIEN,"CA7S7")),U,2)'="",($P($G(^OOPS(FILE,CAIEN,"CA7S15")),U,2)'="") Q
"RTN","OOPSGUIC",24,0)
 .I CALLER="W",(ESSN=PERSON) Q
"RTN","OOPSGUIC",25,0)
 .S CA7=$$GET1^DIQ(FILE,CAIEN,.01),ARR(CA7)=CAIEN
"RTN","OOPSGUIC",26,0)
 ; drop thru here and
"RTN","OOPSGUIC",27,0)
SORT ; reverse the order
"RTN","OOPSGUIC",28,0)
 N CN,CA7,CAIEN,DOI,NM,SSN
"RTN","OOPSGUIC",29,0)
 S ^TMP("CA7LIST",DUZ,0)="",CN=1,CA7=""
"RTN","OOPSGUIC",30,0)
 I '$D(ARR) S ^TMP("CA7LIST",DUZ,1)="No CA7's Selectable"
"RTN","OOPSGUIC",31,0)
 F  S CA7=$O(ARR(CA7),-1) Q:CA7=""  D
"RTN","OOPSGUIC",32,0)
 .S CAIEN=ARR(CA7)
"RTN","OOPSGUIC",33,0)
 .S ASISTS=$$GET1^DIQ(2260,$$GET1^DIQ(FILE,CAIEN,.7,"I"),52,"I")
"RTN","OOPSGUIC",34,0)
 .S ASISTS="CA-"_$G(ASISTS)
"RTN","OOPSGUIC",35,0)
 .S NM=$E($$GET1^DIQ(FILE,CAIEN,.9),1,27)
"RTN","OOPSGUIC",36,0)
 .S DOI=$$GET1^DIQ(FILE,CAIEN,7)
"RTN","OOPSGUIC",37,0)
 .S SSN=$$GET1^DIQ(FILE,CAIEN,.8)
"RTN","OOPSGUIC",38,0)
 .S ^TMP("CA7LIST",DUZ,CN)=CA7_U_DOI_U_NM_U_ASISTS_U_CAIEN_U_SSN_$C(10)
"RTN","OOPSGUIC",39,0)
 .S CN=CN+1
"RTN","OOPSGUIC",40,0)
 ; then quit
"RTN","OOPSGUIC",41,0)
 S RESULTS=$NA(^TMP("CA7LIST",DUZ))
"RTN","OOPSGUIC",42,0)
 Q
"RTN","OOPSGUIC",43,0)
LISTCA(RESULTS,INPUT) ; returns a list of valid CA (1 or 2) claims that
"RTN","OOPSGUIC",44,0)
 ;                 can be selected to create a new CA-7
"RTN","OOPSGUIC",45,0)
 ;  Input:   INPUT - 3 pieces to input parameter
"RTN","OOPSGUIC",46,0)
 ;                   SSN^FILE^CALLER - CALLER contains either E
"RTN","OOPSGUIC",47,0)
 ;                   or W (menu called from).
"RTN","OOPSGUIC",48,0)
 ;                   FILE now only contains 2260 (for CA-1 or 2)
"RTN","OOPSGUIC",49,0)
 ; Output: RESULTS - contains a array of ASISTS Claims with the
"RTN","OOPSGUIC",50,0)
 ;                   claim number, name, and date of injury.  Other
"RTN","OOPSGUIC",51,0)
 ;                   default fields returned are, grade, step, pay amt,
"RTN","OOPSGUIC",52,0)
 ;                   pay period, FEGLI Code, and Health Ins.
"RTN","OOPSGUIC",53,0)
 ;
"RTN","OOPSGUIC",54,0)
 K ^TMP("LISTCA",DUZ)
"RTN","OOPSGUIC",55,0)
 N ARR,CAIEN,CALLER,CAIEN,CN,CNUM,DOI,FILE,INJ,NM,PAR,PDFLD,SSN
"RTN","OOPSGUIC",56,0)
 S PAR=$P($G(INPUT),U),FILE=$P($G(INPUT),U,2),CALLER=$P($G(INPUT),U,3)
"RTN","OOPSGUIC",57,0)
 I $G(PAR)=""!($G(FILE)="")!($G(CALLER)="") D  Q
"RTN","OOPSGUIC",58,0)
 .S ^TMP("LISTCA",DUZ,0)="Missing parameters - cannot continue"
"RTN","OOPSGUIC",59,0)
 S CAIEN=0
"RTN","OOPSGUIC",60,0)
 F  S CAIEN=$O(^OOPS(FILE,"SSN",PAR,CAIEN)) Q:CAIEN=""  D
"RTN","OOPSGUIC",61,0)
 .I '$$INCLUDE() Q
"RTN","OOPSGUIC",62,0)
 .I CALLER="E",($$GET1^DIQ(200,DUZ,9)'=PAR) Q
"RTN","OOPSGUIC",63,0)
 .I CALLER="W",($$GET1^DIQ(200,DUZ,9)=PAR) Q
"RTN","OOPSGUIC",64,0)
 .S CNUM=$$GET1^DIQ(FILE,CAIEN,.01),ARR(CNUM)=CAIEN
"RTN","OOPSGUIC",65,0)
 ; No cases to send back
"RTN","OOPSGUIC",66,0)
 I '$D(ARR) D  Q
"RTN","OOPSGUIC",67,0)
 .S ^TMP("LISTCA",DUZ,1)="No Cases Selectable"
"RTN","OOPSGUIC",68,0)
 .S RESULTS=$NA(^TMP("LISTCA",DUZ))
"RTN","OOPSGUIC",69,0)
 ; get reverse order
"RTN","OOPSGUIC",70,0)
 S CNUM="",CN=1
"RTN","OOPSGUIC",71,0)
 F  S CNUM=$O(ARR(CNUM),-1) Q:CNUM=""  D
"RTN","OOPSGUIC",72,0)
 .S CAIEN=ARR(CNUM)
"RTN","OOPSGUIC",73,0)
 .S NM=$$GET1^DIQ(FILE,CAIEN,1)
"RTN","OOPSGUIC",74,0)
 .S DOI=$$GET1^DIQ(FILE,CAIEN,4)
"RTN","OOPSGUIC",75,0)
 .S SSN=$TR($$GET1^DIQ(FILE,CAIEN,5),"-","")
"RTN","OOPSGUIC",76,0)
 .S GRD=$$GET1^DIQ(FILE,CAIEN,16)
"RTN","OOPSGUIC",77,0)
 .S STP=$$GET1^DIQ(FILE,CAIEN,17)
"RTN","OOPSGUIC",78,0)
 .S INJ=$$GET1^DIQ(FILE,CAIEN,52)
"RTN","OOPSGUIC",79,0)
 .S RET=$$GET1^DIQ(FILE,CAIEN,60)
"RTN","OOPSGUIC",80,0)
 .S PAY=$$GET1^DIQ(FILE,CAIEN,166)
"RTN","OOPSGUIC",81,0)
 .S PER=$$GET1^DIQ(FILE,CAIEN,167)
"RTN","OOPSGUIC",82,0)
 .; only need to do this 1 time, should never have but 1 different
"RTN","OOPSGUIC",83,0)
 .; person in this list, many claims but all for the same person
"RTN","OOPSGUIC",84,0)
 .I CN=1 S PDFLD=$$PDDEF()
"RTN","OOPSGUIC",85,0)
 .S STR=CNUM_U_DOI_U_NM_U_CAIEN_U_SSN_U_INJ_U_GRD_U_STP_U_PAY_U_PER
"RTN","OOPSGUIC",86,0)
 .S ^TMP("LISTCA",DUZ,CN)=STR_U_RET_U_PDFLD_U_DUZ_$C(10)
"RTN","OOPSGUIC",87,0)
 .S CN=CN+1
"RTN","OOPSGUIC",88,0)
 S RESULTS=$NA(^TMP("LISTCA",DUZ))
"RTN","OOPSGUIC",89,0)
 Q
"RTN","OOPSGUIC",90,0)
INCLUDE() ; checks to make sure ok to include claim in list
"RTN","OOPSGUIC",91,0)
 N CA7OK
"RTN","OOPSGUIC",92,0)
 S CA7OK=1
"RTN","OOPSGUIC",93,0)
 ; if claim not sent to DOL, can't pick
"RTN","OOPSGUIC",94,0)
 I $$GET1^DIQ(FILE,CAIEN,67)="" S CA7OK=0
"RTN","OOPSGUIC",95,0)
 ; if deleted, replaced by amendment - can't pick
"RTN","OOPSGUIC",96,0)
 I $$GET1^DIQ(FILE,CAIEN,51,"I")>1 S CA7OK=0
"RTN","OOPSGUIC",97,0)
 Q (CA7OK)
"RTN","OOPSGUIC",98,0)
PDDEF() ; get Fegli Code and Health insurance fields from paid
"RTN","OOPSGUIC",99,0)
 N CNT,FEG,FEG1,INS,INS1,PAID
"RTN","OOPSGUIC",100,0)
 S (FEG,FEG1,INS,INS1)=""
"RTN","OOPSGUIC",101,0)
 D FIND^DIC(450,,"@;226EI;231I","MPSC",SSN,10,"SSN")
"RTN","OOPSGUIC",102,0)
 I $G(DIERR) D CLEAN^DILF Q FEG_U_INS
"RTN","OOPSGUIC",103,0)
 I $P(^TMP("DILIST",$J,0),U)=0 Q FEG_U_INS
"RTN","OOPSGUIC",104,0)
 S PAID=$G(^TMP("DILIST",$J,1,0)),FEG=$P(PAID,U,3)
"RTN","OOPSGUIC",105,0)
 ; if A0 - ineligible, B0 - waived therefore No 
"RTN","OOPSGUIC",106,0)
 I FEG="A0"!(FEG="B0") S FEG1="N;"
"RTN","OOPSGUIC",107,0)
 ; if C0 - only Basic
"RTN","OOPSGUIC",108,0)
 I FEG="C0" S FEG1="Y;"
"RTN","OOPSGUIC",109,0)
 ; has Fegli, but not basic, additional, get additional code
"RTN","OOPSGUIC",110,0)
 I $G(FEG1)="",($L($P(PAID,U,2),"Basic +")>1) S FEG1="Y;"_FEG
"RTN","OOPSGUIC",111,0)
 ; now deal with insurance
"RTN","OOPSGUIC",112,0)
 S INS=$P(PAID,U,4)
"RTN","OOPSGUIC",113,0)
 ; if INS = 000, 001, 002, 003 they don't have insurance
"RTN","OOPSGUIC",114,0)
 I (INS?.N)&(+INS<4) S INS1="N;"
"RTN","OOPSGUIC",115,0)
 ; otherwise they do, get the code
"RTN","OOPSGUIC",116,0)
 I $G(INS1)="" S INS1="Y;"_INS
"RTN","OOPSGUIC",117,0)
 Q INS1_U_FEG1
"RTN","OOPSGUIC",118,0)
MULTIPLE(RESULTS,INPUT,DATA) ; retrieve data from multiple
"RTN","OOPSGUIC",119,0)
 ; NOTE:  When filing into subrecord, the entire subrecord is deleted
"RTN","OOPSGUIC",120,0)
 ;        then rebuilt.  Also, the field number for the subrecord
"RTN","OOPSGUIC",121,0)
 ;        must be passed with the data.
"RTN","OOPSGUIC",122,0)
 ;        WORD PROCESSING fields CANNOT file using this code
"RTN","OOPSGUIC",123,0)
 ;   Input:   INPUT - in the format FILE^FIELD^IEN
"RTN","OOPSGUIC",124,0)
 ;             DATA - array of data in the format
"RTN","OOPSGUIC",125,0)
 ;                    DATA(SIEN)=data where data = P1^P2^P3 etc, where
"RTN","OOPSGUIC",126,0)
 ;                    P1 = subfield #;data
"RTN","OOPSGUIC",127,0)
 ;                    DATA="" must be true for a GET.
"RTN","OOPSGUIC",128,0)
 ;  Output: RESULTS - data from all records in the multiple will
"RTN","OOPSGUIC",129,0)
 ;                     be returned.  it will be saved in a pieced
"RTN","OOPSGUIC",130,0)
 ;                     string.
"RTN","OOPSGUIC",131,0)
 N ACTION,ARR,IEN,FIELD,FILE,ROOT,SAVEDIK,SPEC,SUB,OOPSCNT,OOPSSV,OOPSSV1
"RTN","OOPSGUIC",132,0)
 S FILE=$P($G(INPUT),U),FIELD=$P($G(INPUT),U,2),IEN=$P($G(INPUT),U,3)
"RTN","OOPSGUIC",133,0)
 S ACTION="" I $D(DATA)>1 S ACTION=1
"RTN","OOPSGUIC",134,0)
 S RESULTS(0)="Record Accessed, no data"
"RTN","OOPSGUIC",135,0)
 I $G(IEN)=""!($G(FILE)="")!($G(FIELD)="") D  Q
"RTN","OOPSGUIC",136,0)
 . S RESULTS(0)="Invalid parameters cannot continue"
"RTN","OOPSGUIC",137,0)
 S ROOT=$$ROOT^DILFD(FILE,0,"GL")
"RTN","OOPSGUIC",138,0)
 S SPEC=+$$GET1^DID(FILE,FIELD,"","SPECIFIER")
"RTN","OOPSGUIC",139,0)
 S SUB=$$GET1^DID(FILE,FIELD,"","GLOBAL SUBSCRIPT LOCATION")
"RTN","OOPSGUIC",140,0)
 I '$$GET1^DID(FILE,FIELD,"","MULTIPLE-VALUED"),'$G(SPEC) D  Q
"RTN","OOPSGUIC",141,0)
 . S RESULTS(1)="Field in not a multiple, cannot continue"
"RTN","OOPSGUIC",142,0)
 ; now go get data from subfile
"RTN","OOPSGUIC",143,0)
 S SAVEDIK=ROOT_IEN_","_$C(34)_$P(SUB,";")_$C(34)_","
"RTN","OOPSGUIC",144,0)
 ;RRA OOPS*2*23 - ticket 396917 
"RTN","OOPSGUIC",145,0)
 ;GUI may pass in name as a string - so if there are duplicate names in #200
"RTN","OOPSGUIC",146,0)
 ;it doesn't know how to resolve the name to an ien
"RTN","OOPSGUIC",147,0)
 ;also adding a "/" (to create a "////") to the fields so they bypass fileman  
"RTN","OOPSGUIC",148,0)
 ;validation in case the DUZ is 4 digits (could confuse as SSN) 
"RTN","OOPSGUIC",149,0)
 I ACTION,FILE=2260,FIELD=95 D
"RTN","OOPSGUIC",150,0)
 . S OOPSCNT=0
"RTN","OOPSGUIC",151,0)
 . F  S OOPSCNT=$O(DATA(OOPSCNT)) Q:OOPSCNT'>0  D
"RTN","OOPSGUIC",152,0)
 .. S OOPSSV=$P($P($G(DATA(OOPSCNT)),"^",8),";",2)
"RTN","OOPSGUIC",153,0)
 .. S OOPSSV1=$P($P($G(DATA(OOPSCNT)),"^",10),";",2)
"RTN","OOPSGUIC",154,0)
 .. I '+OOPSSV S OOPSSV=$P($G(^OOPS(2260,IEN,"OUTC",OOPSCNT,0)),"^",8)
"RTN","OOPSGUIC",155,0)
 .. I '+OOPSSV1 S OOPSSV1=$P($G(^OOPS(2260,IEN,"OUTC",OOPSCNT,0)),"^",10)
"RTN","OOPSGUIC",156,0)
 ..S $P(DATA(OOPSCNT),"^",8)="7;/"_OOPSSV
"RTN","OOPSGUIC",157,0)
 ..S $P(DATA(OOPSCNT),"^",10)="9;/"_OOPSSV1
"RTN","OOPSGUIC",158,0)
 ;END RRA OOPS*2*23
"RTN","OOPSGUIC",159,0)
 I 'ACTION D GETD
"RTN","OOPSGUIC",160,0)
 I ACTION D KILLD,SETD
"RTN","OOPSGUIC",161,0)
 Q
"RTN","OOPSGUIC",162,0)
GETD ; get the data
"RTN","OOPSGUIC",163,0)
 N CNT,DATA,FLDA,FLDS,IENS,SIEN,SFLD,SREC,TYPE
"RTN","OOPSGUIC",164,0)
 S CNT=0,IENS=IEN_","
"RTN","OOPSGUIC",165,0)
 S FLDA=FIELD_"*"
"RTN","OOPSGUIC",166,0)
 ; hate to hardwire, but need data back as entered, not canonical
"RTN","OOPSGUIC",167,0)
 I FILE=2262.03,FIELD=15 D FLD15 Q
"RTN","OOPSGUIC",168,0)
 D GETS^DIQ(FILE,IENS,FLDA,,"ARR")
"RTN","OOPSGUIC",169,0)
 I $D(ARR) S SIEN="",RESULTS(0)="" D
"RTN","OOPSGUIC",170,0)
 .F  S SIEN=$O(ARR(SPEC,SIEN)) Q:SIEN=""  D
"RTN","OOPSGUIC",171,0)
 ..S SFLD="",SREC=$P(SIEN,",")
"RTN","OOPSGUIC",172,0)
 ..F  S SFLD=$O(ARR(SPEC,SIEN,SFLD)) Q:SFLD=""  D
"RTN","OOPSGUIC",173,0)
 ...S DATA=ARR(SPEC,SIEN,SFLD)_U
"RTN","OOPSGUIC",174,0)
 ...S:$D(RESULTS(CNT))=0 RESULTS(CNT)=""
"RTN","OOPSGUIC",175,0)
 ...S RESULTS(CNT)=RESULTS(CNT)_DATA
"RTN","OOPSGUIC",176,0)
 ..S CNT=CNT+1
"RTN","OOPSGUIC",177,0)
 Q
"RTN","OOPSGUIC",178,0)
KILLD ; first kill all records in subfile, then rebuild
"RTN","OOPSGUIC",179,0)
 N DA,DIK,NODE
"RTN","OOPSGUIC",180,0)
 S NODE=$P(SUB,";"),DA=0,DA(1)=IEN,DIK=SAVEDIK
"RTN","OOPSGUIC",181,0)
 F  S DA=$O(@(ROOT_"DA(1),NODE,DA)")) Q:(+DA'>0)  D ^DIK
"RTN","OOPSGUIC",182,0)
 Q
"RTN","OOPSGUIC",183,0)
SETD ; subrecord cleaned out, now rebuild
"RTN","OOPSGUIC",184,0)
 N BAD,CN,DR,DIE,DA,DLAYGO,I,NUM,STR,DIC,TYPE
"RTN","OOPSGUIC",185,0)
 K DR
"RTN","OOPSGUIC",186,0)
 S RESULTS(0)="Filing successful"
"RTN","OOPSGUIC",187,0)
 S CN=0,DLAYGO=FILE,DA(1)=IEN,DIC=SAVEDIK,DIC(0)="L"
"RTN","OOPSGUIC",188,0)
 F  S CN=$O(DATA(CN)) Q:CN'>0  S X="",BAD=0 D
"RTN","OOPSGUIC",189,0)
 .S STR=DATA(CN),NUM=$L(DATA(CN),U),DIC("DR")=""
"RTN","OOPSGUIC",190,0)
 .F I=1:1:NUM S STR1=$P($G(STR),U,I) D:('BAD)
"RTN","OOPSGUIC",191,0)
 ..I $P(STR1,";")=.01,$P(STR1,";")="",$P(STR1,";",2)="" S BAD=1 Q
"RTN","OOPSGUIC",192,0)
 ..I $P(STR1,";")=.01 D
"RTN","OOPSGUIC",193,0)
 ...S TYPE=$$GET1^DID(SPEC,.01,"","TYPE")
"RTN","OOPSGUIC",194,0)
 ...I TYPE="DATE/TIME" S X=$$FMTE^XLFDT($P(STR1,";",2),2)
"RTN","OOPSGUIC",195,0)
 ...E  S X=$P(STR1,";",2)
"RTN","OOPSGUIC",196,0)
 ..S DIC("DR")=DIC("DR")_$P(STR1,";")_"///"_$P(STR1,";",2)_";"
"RTN","OOPSGUIC",197,0)
 .D MFILE
"RTN","OOPSGUIC",198,0)
 Q
"RTN","OOPSGUIC",199,0)
MFILE ; file the multiple
"RTN","OOPSGUIC",200,0)
 N PCE,PCE1,TMP
"RTN","OOPSGUIC",201,0)
 I X="" S RESULTS(0)=".01 field missing - could not file" Q
"RTN","OOPSGUIC",202,0)
 I $G(BAD) S RESULTS(0)="Problems Filing subrecord" Q
"RTN","OOPSGUIC",203,0)
 I $L(DIC("DR"))>240 D
"RTN","OOPSGUIC",204,0)
 .S PCE=$L(DIC("DR"),";"),TMP=DIC("DR"),PCE1=$P(PCE/2,".")
"RTN","OOPSGUIC",205,0)
 .S DIC("DR")=$P(TMP,";",1,PCE1)
"RTN","OOPSGUIC",206,0)
 .K DD,DO D FILE^DICN I Y'>0 S BAD=1
"RTN","OOPSGUIC",207,0)
 .S DIC("DR")=$P(TMP,";",(PCE1+1),PCE)
"RTN","OOPSGUIC",208,0)
 K DD,DO D FILE^DICN I Y'>0 S BAD=1
"RTN","OOPSGUIC",209,0)
 I BAD S RESULTS(0)="Problems filing subrecord"
"RTN","OOPSGUIC",210,0)
 Q
"RTN","OOPSGUIC",211,0)
OSHA300(RESULTS,STA,DATA) ; Files data into subrecord 2262.315
"RTN","OOPSGUIC",212,0)
 ;  Input - STA is the station number subrecord IEN
"RTN","OOPSGUIC",213,0)
 ;         DATA is an number subscripted array containing the records
"RTN","OOPSGUIC",214,0)
 ;              that contain the Emp Numbers and hours worked in the
"RTN","OOPSGUIC",215,0)
 ;              OSHA MONTH/YEAR subrecord.
"RTN","OOPSGUIC",216,0)
 ; Output - RESULTS indicating the success of the filing.
"RTN","OOPSGUIC",217,0)
 ;
"RTN","OOPSGUIC",218,0)
 N CNT,IENS,FILE,OSHAFDA,LV1,LV2,PAR,REC,STR
"RTN","OOPSGUIC",219,0)
 S CNT=1,FILE=2262.315
"RTN","OOPSGUIC",220,0)
 S PAR="^OOPS(2262,0)",PAR=$Q(@PAR),PAR=$Q(@PAR)
"RTN","OOPSGUIC",221,0)
 S LV1=$P(PAR,",",2),LV2=$P(PAR,",",3)
"RTN","OOPSGUIC",222,0)
 S RESULTS=""
"RTN","OOPSGUIC",223,0)
 I $D(DATA)<10 S RESULTS="NO DATA TO FILE, CANNOT CONTINUE" Q
"RTN","OOPSGUIC",224,0)
 I '$G(STA) S RESULTS="NOT ENOUGH PARAMETERS, COULDN'T FILE" Q
"RTN","OOPSGUIC",225,0)
 I '$D(^OOPS(2262,LV1,LV2,STA)) D  Q
"RTN","OOPSGUIC",226,0)
 .S RESULTS="NO STATION RECORD, COULDN'T FILE"
"RTN","OOPSGUIC",227,0)
 K ^OOPS(2262,LV1,LV2,STA,2)
"RTN","OOPSGUIC",228,0)
 S REC=0 F  S REC=$O(DATA(REC)) Q:REC=""  D
"RTN","OOPSGUIC",229,0)
 .S IENS="?+"_CNT_","_STA_","_LV1_","
"RTN","OOPSGUIC",230,0)
 .S STR=DATA(REC)
"RTN","OOPSGUIC",231,0)
 .S OSHAFDA(FILE,IENS,.01)=$P($P(STR,U,1),";",2)
"RTN","OOPSGUIC",232,0)
 .S OSHAFDA(FILE,IENS,1)=$P($P(STR,U,2),";",2)
"RTN","OOPSGUIC",233,0)
 .S OSHAFDA(FILE,IENS,2)=$P($P(STR,U,3),";",2)
"RTN","OOPSGUIC",234,0)
 .S CNT=CNT+1
"RTN","OOPSGUIC",235,0)
 D UPDATE^DIE("E","OSHAFDA","IENS","MSG")
"RTN","OOPSGUIC",236,0)
 I '$D(MSG) S RESULTS="Filing Successful"
"RTN","OOPSGUIC",237,0)
 K MSG,STR,Y,X,%DT
"RTN","OOPSGUIC",238,0)
 Q
"RTN","OOPSGUIC",239,0)
FLD15 ; retrieves OSHA 300A Summary data from file 2262
"RTN","OOPSGUIC",240,0)
 N CNT,DATE,LV1,LV2,PAR,REC
"RTN","OOPSGUIC",241,0)
 S CNT=0,PAR="^OOPS(2262,0)",PAR=$Q(@PAR),PAR=$Q(@PAR)
"RTN","OOPSGUIC",242,0)
 S LV1=$P(PAR,",",2),LV2=$P(PAR,",",3),IENS=$P(IEN,",",1),REC=0
"RTN","OOPSGUIC",243,0)
 F  S REC=$O(^OOPS(2262,LV1,LV2,IENS,2,REC)) Q:REC'>0  D
"RTN","OOPSGUIC",244,0)
 .S STR=$G(^OOPS(2262,LV1,LV2,IENS,2,REC,0))
"RTN","OOPSGUIC",245,0)
 .S Y=$P(STR,U,1) D DD^%DT
"RTN","OOPSGUIC",246,0)
 .S RESULTS(CNT)=Y_U_$P(STR,U,2,3)
"RTN","OOPSGUIC",247,0)
 .S CNT=CNT+1
"RTN","OOPSGUIC",248,0)
 Q
"VER")
8.0^22.0
"BLD",9084,6)
^23
**END**
**END**
