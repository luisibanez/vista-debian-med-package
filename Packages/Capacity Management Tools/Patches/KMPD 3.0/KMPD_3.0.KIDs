Released KMPD 3.0
Extracted from mail message
**KIDS**:KMPD 3.0^

**INSTALL NAME**
KMPD 3.0
"BLD",1010,0)
KMPD 3.0^CAPACITY MANAGEMENT TOOLS^0^3121026^y
"BLD",1010,4,0)
^9.64PA^8973.3^6
"BLD",1010,4,8972.1,0)
8972.1
"BLD",1010,4,8972.1,222)
y^y^f^^^^n
"BLD",1010,4,8972.3,0)
8972.3
"BLD",1010,4,8972.3,222)
y^y^f^^n^^y^o^n
"BLD",1010,4,8973,0)
8973
"BLD",1010,4,8973,222)
y^y^f^^^^n
"BLD",1010,4,8973.1,0)
8973.1
"BLD",1010,4,8973.1,222)
y^y^f^^^^n
"BLD",1010,4,8973.2,0)
8973.2
"BLD",1010,4,8973.2,222)
y^y^f^^^^n
"BLD",1010,4,8973.3,0)
8973.3
"BLD",1010,4,8973.3,222)
y^y^f^^n^^y^o^n
"BLD",1010,4,"B",8972.1,8972.1)

"BLD",1010,4,"B",8972.3,8972.3)

"BLD",1010,4,"B",8973,8973)

"BLD",1010,4,"B",8973.1,8973.1)

"BLD",1010,4,"B",8973.2,8973.2)

"BLD",1010,4,"B",8973.3,8973.3)

"BLD",1010,6)
26^
"BLD",1010,6.3)
42
"BLD",1010,"INIT")
EN^KMPDPOST
"BLD",1010,"KRN",0)
^9.67PA^8989.52^19
"BLD",1010,"KRN",.4,0)
.4
"BLD",1010,"KRN",.401,0)
.401
"BLD",1010,"KRN",.402,0)
.402
"BLD",1010,"KRN",.403,0)
.403
"BLD",1010,"KRN",.403,"NM",0)
^9.68A^1^1
"BLD",1010,"KRN",.403,"NM",1,0)
KMPD PARAMETERS EDIT    FILE #8973^8973^0
"BLD",1010,"KRN",.403,"NM","B","KMPD PARAMETERS EDIT    FILE #8973",1)

"BLD",1010,"KRN",.5,0)
.5
"BLD",1010,"KRN",.84,0)
.84
"BLD",1010,"KRN",3.6,0)
3.6
"BLD",1010,"KRN",3.6,"NM",0)
^9.68A^1^1
"BLD",1010,"KRN",3.6,"NM",1,0)
KMPD ECHO^^0
"BLD",1010,"KRN",3.6,"NM","B","KMPD ECHO",1)

"BLD",1010,"KRN",3.8,0)
3.8
"BLD",1010,"KRN",9.2,0)
9.2
"BLD",1010,"KRN",9.8,0)
9.8
"BLD",1010,"KRN",9.8,"NM",0)
^9.68A^57^57
"BLD",1010,"KRN",9.8,"NM",1,0)
KMPDBD01^^0^B1585127
"BLD",1010,"KRN",9.8,"NM",2,0)
KMPDECH^^0^B1037928
"BLD",1010,"KRN",9.8,"NM",3,0)
KMPDENV^^0^B706424
"BLD",1010,"KRN",9.8,"NM",4,0)
KMPDHU01^^0^B37420269
"BLD",1010,"KRN",9.8,"NM",5,0)
KMPDHU02^^0^B55231717
"BLD",1010,"KRN",9.8,"NM",6,0)
KMPDHU03^^0^B28509534
"BLD",1010,"KRN",9.8,"NM",7,0)
KMPDHUA^^0^B41047112
"BLD",1010,"KRN",9.8,"NM",8,0)
KMPDPOST^^0^B3093931
"BLD",1010,"KRN",9.8,"NM",9,0)
KMPDSS^^0^B5601421
"BLD",1010,"KRN",9.8,"NM",10,0)
KMPDSS1^^0^B4453794
"BLD",1010,"KRN",9.8,"NM",11,0)
KMPDSSD^^0^B70757970
"BLD",1010,"KRN",9.8,"NM",12,0)
KMPDSSD1^^0^B11459921
"BLD",1010,"KRN",9.8,"NM",13,0)
KMPDSSR^^0^B16217057
"BLD",1010,"KRN",9.8,"NM",14,0)
KMPDSSS^^0^B33896326
"BLD",1010,"KRN",9.8,"NM",15,0)
KMPDTM^^0^B22150434
"BLD",1010,"KRN",9.8,"NM",16,0)
KMPDTP1^^0^B21923015
"BLD",1010,"KRN",9.8,"NM",17,0)
KMPDTP2^^0^B21316448
"BLD",1010,"KRN",9.8,"NM",18,0)
KMPDTP3^^0^B20017179
"BLD",1010,"KRN",9.8,"NM",19,0)
KMPDTP4^^0^B27036478
"BLD",1010,"KRN",9.8,"NM",20,0)
KMPDTP5^^0^B28201133
"BLD",1010,"KRN",9.8,"NM",21,0)
KMPDTP6^^0^B26949846
"BLD",1010,"KRN",9.8,"NM",22,0)
KMPDTP7^^0^B23266885
"BLD",1010,"KRN",9.8,"NM",23,0)
KMPDTU01^^0^B21700186
"BLD",1010,"KRN",9.8,"NM",24,0)
KMPDTU02^^0^B7805759
"BLD",1010,"KRN",9.8,"NM",25,0)
KMPDTU10^^0^B33247279
"BLD",1010,"KRN",9.8,"NM",26,0)
KMPDTU11^^0^B4686971
"BLD",1010,"KRN",9.8,"NM",27,0)
KMPDU^^0^B5625168
"BLD",1010,"KRN",9.8,"NM",28,0)
KMPDU1^^0^B9907864
"BLD",1010,"KRN",9.8,"NM",29,0)
KMPDU11^^0^B16579136
"BLD",1010,"KRN",9.8,"NM",30,0)
KMPDU2^^0^B53972904
"BLD",1010,"KRN",9.8,"NM",31,0)
KMPDU3^^0^B33101038
"BLD",1010,"KRN",9.8,"NM",32,0)
KMPDU4^^0^B3246525
"BLD",1010,"KRN",9.8,"NM",33,0)
KMPDU5^^0^B24680982
"BLD",1010,"KRN",9.8,"NM",34,0)
KMPDU6^^0^B47907009
"BLD",1010,"KRN",9.8,"NM",35,0)
KMPDU7^^0^B19662686
"BLD",1010,"KRN",9.8,"NM",36,0)
KMPDUG^^0^B12065844
"BLD",1010,"KRN",9.8,"NM",37,0)
KMPDUG1^^0^B12183145
"BLD",1010,"KRN",9.8,"NM",38,0)
KMPDUG2^^0^B22783994
"BLD",1010,"KRN",9.8,"NM",39,0)
KMPDUGV^^0^B6896463
"BLD",1010,"KRN",9.8,"NM",40,0)
KMPDUT^^0^B82480
"BLD",1010,"KRN",9.8,"NM",41,0)
KMPDUT1^^0^B4718329
"BLD",1010,"KRN",9.8,"NM",42,0)
KMPDUT2^^0^B29831433
"BLD",1010,"KRN",9.8,"NM",43,0)
KMPDUT4^^0^B6870660
"BLD",1010,"KRN",9.8,"NM",44,0)
KMPDUT4A^^0^B2846593
"BLD",1010,"KRN",9.8,"NM",45,0)
KMPDUT4B^^0^B6574044
"BLD",1010,"KRN",9.8,"NM",46,0)
KMPDUT4C^^0^B8778533
"BLD",1010,"KRN",9.8,"NM",47,0)
KMPDUT5^^0^B34870565
"BLD",1010,"KRN",9.8,"NM",48,0)
KMPDUTL^^0^B11442645
"BLD",1010,"KRN",9.8,"NM",49,0)
KMPDUTL1^^0^B28878792
"BLD",1010,"KRN",9.8,"NM",50,0)
KMPDUTL2^^0^B10409339
"BLD",1010,"KRN",9.8,"NM",51,0)
KMPDUTL3^^0^B2642844
"BLD",1010,"KRN",9.8,"NM",52,0)
KMPDUTL4^^0^B7857389
"BLD",1010,"KRN",9.8,"NM",53,0)
KMPDUTL5^^0^B56596424
"BLD",1010,"KRN",9.8,"NM",54,0)
KMPDUTL6^^0^B2454565
"BLD",1010,"KRN",9.8,"NM",55,0)
KMPDUTL7^^0^B10006436
"BLD",1010,"KRN",9.8,"NM",56,0)
KMPDUTL8^^0^B12208078
"BLD",1010,"KRN",9.8,"NM",57,0)
KMPDU7A^^0^B23825216
"BLD",1010,"KRN",9.8,"NM","B","KMPDBD01",1)

"BLD",1010,"KRN",9.8,"NM","B","KMPDECH",2)

"BLD",1010,"KRN",9.8,"NM","B","KMPDENV",3)

"BLD",1010,"KRN",9.8,"NM","B","KMPDHU01",4)

"BLD",1010,"KRN",9.8,"NM","B","KMPDHU02",5)

"BLD",1010,"KRN",9.8,"NM","B","KMPDHU03",6)

"BLD",1010,"KRN",9.8,"NM","B","KMPDHUA",7)

"BLD",1010,"KRN",9.8,"NM","B","KMPDPOST",8)

"BLD",1010,"KRN",9.8,"NM","B","KMPDSS",9)

"BLD",1010,"KRN",9.8,"NM","B","KMPDSS1",10)

"BLD",1010,"KRN",9.8,"NM","B","KMPDSSD",11)

"BLD",1010,"KRN",9.8,"NM","B","KMPDSSD1",12)

"BLD",1010,"KRN",9.8,"NM","B","KMPDSSR",13)

"BLD",1010,"KRN",9.8,"NM","B","KMPDSSS",14)

"BLD",1010,"KRN",9.8,"NM","B","KMPDTM",15)

"BLD",1010,"KRN",9.8,"NM","B","KMPDTP1",16)

"BLD",1010,"KRN",9.8,"NM","B","KMPDTP2",17)

"BLD",1010,"KRN",9.8,"NM","B","KMPDTP3",18)

"BLD",1010,"KRN",9.8,"NM","B","KMPDTP4",19)

"BLD",1010,"KRN",9.8,"NM","B","KMPDTP5",20)

"BLD",1010,"KRN",9.8,"NM","B","KMPDTP6",21)

"BLD",1010,"KRN",9.8,"NM","B","KMPDTP7",22)

"BLD",1010,"KRN",9.8,"NM","B","KMPDTU01",23)

"BLD",1010,"KRN",9.8,"NM","B","KMPDTU02",24)

"BLD",1010,"KRN",9.8,"NM","B","KMPDTU10",25)

"BLD",1010,"KRN",9.8,"NM","B","KMPDTU11",26)

"BLD",1010,"KRN",9.8,"NM","B","KMPDU",27)

"BLD",1010,"KRN",9.8,"NM","B","KMPDU1",28)

"BLD",1010,"KRN",9.8,"NM","B","KMPDU11",29)

"BLD",1010,"KRN",9.8,"NM","B","KMPDU2",30)

"BLD",1010,"KRN",9.8,"NM","B","KMPDU3",31)

"BLD",1010,"KRN",9.8,"NM","B","KMPDU4",32)

"BLD",1010,"KRN",9.8,"NM","B","KMPDU5",33)

"BLD",1010,"KRN",9.8,"NM","B","KMPDU6",34)

"BLD",1010,"KRN",9.8,"NM","B","KMPDU7",35)

"BLD",1010,"KRN",9.8,"NM","B","KMPDU7A",57)

"BLD",1010,"KRN",9.8,"NM","B","KMPDUG",36)

"BLD",1010,"KRN",9.8,"NM","B","KMPDUG1",37)

"BLD",1010,"KRN",9.8,"NM","B","KMPDUG2",38)

"BLD",1010,"KRN",9.8,"NM","B","KMPDUGV",39)

"BLD",1010,"KRN",9.8,"NM","B","KMPDUT",40)

"BLD",1010,"KRN",9.8,"NM","B","KMPDUT1",41)

"BLD",1010,"KRN",9.8,"NM","B","KMPDUT2",42)

"BLD",1010,"KRN",9.8,"NM","B","KMPDUT4",43)

"BLD",1010,"KRN",9.8,"NM","B","KMPDUT4A",44)

"BLD",1010,"KRN",9.8,"NM","B","KMPDUT4B",45)

"BLD",1010,"KRN",9.8,"NM","B","KMPDUT4C",46)

"BLD",1010,"KRN",9.8,"NM","B","KMPDUT5",47)

"BLD",1010,"KRN",9.8,"NM","B","KMPDUTL",48)

"BLD",1010,"KRN",9.8,"NM","B","KMPDUTL1",49)

"BLD",1010,"KRN",9.8,"NM","B","KMPDUTL2",50)

"BLD",1010,"KRN",9.8,"NM","B","KMPDUTL3",51)

"BLD",1010,"KRN",9.8,"NM","B","KMPDUTL4",52)

"BLD",1010,"KRN",9.8,"NM","B","KMPDUTL5",53)

"BLD",1010,"KRN",9.8,"NM","B","KMPDUTL6",54)

"BLD",1010,"KRN",9.8,"NM","B","KMPDUTL7",55)

"BLD",1010,"KRN",9.8,"NM","B","KMPDUTL8",56)

"BLD",1010,"KRN",19,0)
19
"BLD",1010,"KRN",19,"NM",0)
^9.68A^19^19
"BLD",1010,"KRN",19,"NM",1,0)
KMPD BACKGROUND DRIVER^^0
"BLD",1010,"KRN",19,"NM",2,0)
KMPD CM DEVELOPER TOOLS^^0
"BLD",1010,"KRN",19,"NM",3,0)
KMPD CM TOOLS MANAGER MENU^^0
"BLD",1010,"KRN",19,"NM",4,0)
KMPD CM TOOLS REPORTS^^0
"BLD",1010,"KRN",19,"NM",5,0)
KMPD ECHO^^0
"BLD",1010,"KRN",19,"NM",6,0)
KMPD PARAM EDIT^^0
"BLD",1010,"KRN",19,"NM",7,0)
KMPD STATUS^^0
"BLD",1010,"KRN",19,"NM",8,0)
KMPD TMG AVG HR TTL^^0
"BLD",1010,"KRN",19,"NM",9,0)
KMPD TMG AVG TTL^^0
"BLD",1010,"KRN",19,"NM",10,0)
KMPD TMG DLY TTL DETAIL^^0
"BLD",1010,"KRN",19,"NM",11,0)
KMPD TMG HRLY TTL DETAIL^^0
"BLD",1010,"KRN",19,"NM",12,0)
KMPD TMG HRLY TTL RT^^0
"BLD",1010,"KRN",19,"NM",13,0)
KMPD TMG MONITOR^^0
"BLD",1010,"KRN",19,"NM",14,0)
KMPD TMG REPORTS^^0
"BLD",1010,"KRN",19,"NM",15,0)
KMPD TMG START/STOP^^0
"BLD",1010,"KRN",19,"NM",16,0)
KMPD TMG TTL ALERT^^0
"BLD",1010,"KRN",19,"NM",17,0)
KMPD TMG TTL ALERT RT^^0
"BLD",1010,"KRN",19,"NM",18,0)
XTCM MAIN^^0
"BLD",1010,"KRN",19,"NM",19,0)
KMP MAIL GROUP EDIT^^0
"BLD",1010,"KRN",19,"NM","B","KMP MAIL GROUP EDIT",19)

"BLD",1010,"KRN",19,"NM","B","KMPD BACKGROUND DRIVER",1)

"BLD",1010,"KRN",19,"NM","B","KMPD CM DEVELOPER TOOLS",2)

"BLD",1010,"KRN",19,"NM","B","KMPD CM TOOLS MANAGER MENU",3)

"BLD",1010,"KRN",19,"NM","B","KMPD CM TOOLS REPORTS",4)

"BLD",1010,"KRN",19,"NM","B","KMPD ECHO",5)

"BLD",1010,"KRN",19,"NM","B","KMPD PARAM EDIT",6)

"BLD",1010,"KRN",19,"NM","B","KMPD STATUS",7)

"BLD",1010,"KRN",19,"NM","B","KMPD TMG AVG HR TTL",8)

"BLD",1010,"KRN",19,"NM","B","KMPD TMG AVG TTL",9)

"BLD",1010,"KRN",19,"NM","B","KMPD TMG DLY TTL DETAIL",10)

"BLD",1010,"KRN",19,"NM","B","KMPD TMG HRLY TTL DETAIL",11)

"BLD",1010,"KRN",19,"NM","B","KMPD TMG HRLY TTL RT",12)

"BLD",1010,"KRN",19,"NM","B","KMPD TMG MONITOR",13)

"BLD",1010,"KRN",19,"NM","B","KMPD TMG REPORTS",14)

"BLD",1010,"KRN",19,"NM","B","KMPD TMG START/STOP",15)

"BLD",1010,"KRN",19,"NM","B","KMPD TMG TTL ALERT",16)

"BLD",1010,"KRN",19,"NM","B","KMPD TMG TTL ALERT RT",17)

"BLD",1010,"KRN",19,"NM","B","XTCM MAIN",18)

"BLD",1010,"KRN",19.1,0)
19.1
"BLD",1010,"KRN",101,0)
101
"BLD",1010,"KRN",409.61,0)
409.61
"BLD",1010,"KRN",409.61,"NM",0)
^9.68A^1^1
"BLD",1010,"KRN",409.61,"NM",1,0)
KMPD STATUS^^0
"BLD",1010,"KRN",409.61,"NM","B","KMPD STATUS",1)

"BLD",1010,"KRN",771,0)
771
"BLD",1010,"KRN",870,0)
870
"BLD",1010,"KRN",8989.51,0)
8989.51
"BLD",1010,"KRN",8989.51,"NM",0)
^9.68A^11^11
"BLD",1010,"KRN",8989.51,"NM",1,0)
KMPD GUI OPTION ERROR LIST^^0
"BLD",1010,"KRN",8989.51,"NM",2,0)
KMPD GUI OPTION GLOBAL LIST^^0
"BLD",1010,"KRN",8989.51,"NM",3,0)
KMPD GUI OPTION CODE EVALUATOR^^0
"BLD",1010,"KRN",8989.51,"NM",4,0)
KMPD GUI OPTION CODE STATS^^0
"BLD",1010,"KRN",8989.51,"NM",5,0)
KMPD GUI OPTION ENVIRON CHECK^^0
"BLD",1010,"KRN",8989.51,"NM",6,0)
KMPD GUI OPTION ENVIRON SELECT^^0
"BLD",1010,"KRN",8989.51,"NM",7,0)
KMPD GUI OPTION LOOKUPS^^0
"BLD",1010,"KRN",8989.51,"NM",8,0)
KMPD GUI OPTION ROUTINE SEARCH^^0
"BLD",1010,"KRN",8989.51,"NM",9,0)
KMPD GUI OPTION TIMING MONITOR^^0
"BLD",1010,"KRN",8989.51,"NM",10,0)
KMPD GUI OPTION TOOLS PARAMS^^0
"BLD",1010,"KRN",8989.51,"NM",11,0)
KMPD GUI OPTION RPT^^0
"BLD",1010,"KRN",8989.51,"NM","B","KMPD GUI OPTION CODE EVALUATOR",3)

"BLD",1010,"KRN",8989.51,"NM","B","KMPD GUI OPTION CODE STATS",4)

"BLD",1010,"KRN",8989.51,"NM","B","KMPD GUI OPTION ENVIRON CHECK",5)

"BLD",1010,"KRN",8989.51,"NM","B","KMPD GUI OPTION ENVIRON SELECT",6)

"BLD",1010,"KRN",8989.51,"NM","B","KMPD GUI OPTION ERROR LIST",1)

"BLD",1010,"KRN",8989.51,"NM","B","KMPD GUI OPTION GLOBAL LIST",2)

"BLD",1010,"KRN",8989.51,"NM","B","KMPD GUI OPTION LOOKUPS",7)

"BLD",1010,"KRN",8989.51,"NM","B","KMPD GUI OPTION ROUTINE SEARCH",8)

"BLD",1010,"KRN",8989.51,"NM","B","KMPD GUI OPTION RPT",11)

"BLD",1010,"KRN",8989.51,"NM","B","KMPD GUI OPTION TIMING MONITOR",9)

"BLD",1010,"KRN",8989.51,"NM","B","KMPD GUI OPTION TOOLS PARAMS",10)

"BLD",1010,"KRN",8989.52,0)
8989.52
"BLD",1010,"KRN",8994,0)
8994
"BLD",1010,"KRN",8994,"NM",0)
^9.68A^30^29
"BLD",1010,"KRN",8994,"NM",1,0)
KMPD APPL STATUS^^0
"BLD",1010,"KRN",8994,"NM",2,0)
KMPD ASSOC ROUTINE ADD/DEL^^0
"BLD",1010,"KRN",8994,"NM",3,0)
KMPD DATA ELEMENTS^^0
"BLD",1010,"KRN",8994,"NM",4,0)
KMPD ENVIRONMENT^^0
"BLD",1010,"KRN",8994,"NM",5,0)
KMPD ERROR LOG DATA^^0
"BLD",1010,"KRN",8994,"NM",6,0)
KMPD ERROR LOG DATE^^0
"BLD",1010,"KRN",8994,"NM",7,0)
KMPD FILE INQUIRY^^0
"BLD",1010,"KRN",8994,"NM",8,0)
KMPD FILE SEARCH^^0
"BLD",1010,"KRN",8994,"NM",9,0)
KMPD FM DATE^^0
"BLD",1010,"KRN",8994,"NM",10,0)
KMPD GLOBAL LIST^^0
"BLD",1010,"KRN",8994,"NM",12,0)
KMPD NODES^^0
"BLD",1010,"KRN",8994,"NM",13,0)
KMPD ROUTINE FIND^^0
"BLD",1010,"KRN",8994,"NM",14,0)
KMPD ROUTINE INQ^^0
"BLD",1010,"KRN",8994,"NM",15,0)
KMPD ROUTINE LINE SRCH^^0
"BLD",1010,"KRN",8994,"NM",16,0)
KMPD ROUTINE SAVE^^0
"BLD",1010,"KRN",8994,"NM",17,0)
KMPD ROUTINE STATS^^0
"BLD",1010,"KRN",8994,"NM",18,0)
KMPD TMG MON DATA^^0
"BLD",1010,"KRN",8994,"NM",19,0)
KMPD VERSION^^0
"BLD",1010,"KRN",8994,"NM",20,0)
KMPD ERROR LOG LIST^^0
"BLD",1010,"KRN",8994,"NM",21,0)
KMPD USER PARAMETERS^^0
"BLD",1010,"KRN",8994,"NM",22,0)
KMPD TMG DATES^^0
"BLD",1010,"KRN",8994,"NM",23,0)
KMPD TMG REPORTS^^0
"BLD",1010,"KRN",8994,"NM",24,0)
KMPD REPORT LIST^^1^
"BLD",1010,"KRN",8994,"NM",25,0)
KMPD REPORT DEFINITION^^0
"BLD",1010,"KRN",8994,"NM",26,0)
KMPD TMG STATUS^^0
"BLD",1010,"KRN",8994,"NM",27,0)
KMPD RUM START/STOP^^0
"BLD",1010,"KRN",8994,"NM",28,0)
KMPD TMG START/STOP^^0
"BLD",1010,"KRN",8994,"NM",29,0)
KMPD RUM ENV^^0
"BLD",1010,"KRN",8994,"NM",30,0)
KMPD SEARCH BY LIST^^0
"BLD",1010,"KRN",8994,"NM","B","KMPD APPL STATUS",1)

"BLD",1010,"KRN",8994,"NM","B","KMPD ASSOC ROUTINE ADD/DEL",2)

"BLD",1010,"KRN",8994,"NM","B","KMPD DATA ELEMENTS",3)

"BLD",1010,"KRN",8994,"NM","B","KMPD ENVIRONMENT",4)

"BLD",1010,"KRN",8994,"NM","B","KMPD ERROR LOG DATA",5)

"BLD",1010,"KRN",8994,"NM","B","KMPD ERROR LOG DATE",6)

"BLD",1010,"KRN",8994,"NM","B","KMPD ERROR LOG LIST",20)

"BLD",1010,"KRN",8994,"NM","B","KMPD FILE INQUIRY",7)

"BLD",1010,"KRN",8994,"NM","B","KMPD FILE SEARCH",8)

"BLD",1010,"KRN",8994,"NM","B","KMPD FM DATE",9)

"BLD",1010,"KRN",8994,"NM","B","KMPD GLOBAL LIST",10)

"BLD",1010,"KRN",8994,"NM","B","KMPD NODES",12)

"BLD",1010,"KRN",8994,"NM","B","KMPD REPORT DEFINITION",25)

"BLD",1010,"KRN",8994,"NM","B","KMPD REPORT LIST",24)

"BLD",1010,"KRN",8994,"NM","B","KMPD ROUTINE FIND",13)

"BLD",1010,"KRN",8994,"NM","B","KMPD ROUTINE INQ",14)

"BLD",1010,"KRN",8994,"NM","B","KMPD ROUTINE LINE SRCH",15)

"BLD",1010,"KRN",8994,"NM","B","KMPD ROUTINE SAVE",16)

"BLD",1010,"KRN",8994,"NM","B","KMPD ROUTINE STATS",17)

"BLD",1010,"KRN",8994,"NM","B","KMPD RUM ENV",29)

"BLD",1010,"KRN",8994,"NM","B","KMPD RUM START/STOP",27)

"BLD",1010,"KRN",8994,"NM","B","KMPD SEARCH BY LIST",30)

"BLD",1010,"KRN",8994,"NM","B","KMPD TMG DATES",22)

"BLD",1010,"KRN",8994,"NM","B","KMPD TMG MON DATA",18)

"BLD",1010,"KRN",8994,"NM","B","KMPD TMG REPORTS",23)

"BLD",1010,"KRN",8994,"NM","B","KMPD TMG START/STOP",28)

"BLD",1010,"KRN",8994,"NM","B","KMPD TMG STATUS",26)

"BLD",1010,"KRN",8994,"NM","B","KMPD USER PARAMETERS",21)

"BLD",1010,"KRN",8994,"NM","B","KMPD VERSION",19)

"BLD",1010,"KRN","B",.4,.4)

"BLD",1010,"KRN","B",.401,.401)

"BLD",1010,"KRN","B",.402,.402)

"BLD",1010,"KRN","B",.403,.403)

"BLD",1010,"KRN","B",.5,.5)

"BLD",1010,"KRN","B",.84,.84)

"BLD",1010,"KRN","B",3.6,3.6)

"BLD",1010,"KRN","B",3.8,3.8)

"BLD",1010,"KRN","B",9.2,9.2)

"BLD",1010,"KRN","B",9.8,9.8)

"BLD",1010,"KRN","B",19,19)

"BLD",1010,"KRN","B",19.1,19.1)

"BLD",1010,"KRN","B",101,101)

"BLD",1010,"KRN","B",409.61,409.61)

"BLD",1010,"KRN","B",771,771)

"BLD",1010,"KRN","B",870,870)

"BLD",1010,"KRN","B",8989.51,8989.51)

"BLD",1010,"KRN","B",8989.52,8989.52)

"BLD",1010,"KRN","B",8994,8994)

"BLD",1010,"QUES",0)
^9.62^^
"BLD",1010,"REQB",0)
^9.611^3^2
"BLD",1010,"REQB",2,0)
KMPS*1.8*3^1
"BLD",1010,"REQB",3,0)
KMPR*2.0*1^1
"BLD",1010,"REQB","B","KMPR*2.0*1",3)

"BLD",1010,"REQB","B","KMPS*1.8*3",2)

"DATA",8972.3,1,0)
CPU TIME^1^4^CPU Time^1
"DATA",8972.3,2,0)
ELAPSED TIME^1^2^Elapsed Time^0
"DATA",8972.3,3,0)
M COMMANDS^1^8^M Commands^1
"DATA",8972.3,4,0)
GLO REFERENCES^1^9^Global References^1
"DATA",8972.3,5,0)
DIO REFERENCES^1^5^DIO References^1
"DATA",8972.3,6,0)
BIO REFERENCES^1^6^BIO References^1
"DATA",8972.3,7,0)
PAGE FAULTS^1^^Page Faults^0
"DATA",8972.3,8,0)
OCCURRENCES^1^^Occurrences^0
"DATA",8973.3,1,0)
TMG AVG DLY COVERSHEET LOAD^0^0
"DATA",8973.3,1,2)
TMG - Average Daily Coversheet Load
"DATA",8973.3,1,10,0)
^8973.31^3^3^3080701^^^
"DATA",8973.3,1,10,1,0)
 This report displays the daily average time-to-load value for
"DATA",8973.3,1,10,2,0)
 the coversheet at this site.  Average time-to-load values are
"DATA",8973.3,1,10,3,0)
 given for either daily prime time or non-prime time periods.
"DATA",8973.3,2,0)
TMG AVG HR COVERSHEET LOAD^0^0
"DATA",8973.3,2,2)
TMG - Average Hourly Coversheet Load
"DATA",8973.3,2,10,0)
^8973.31^2^2^3080701^^
"DATA",8973.3,2,10,1,0)
This report displays the hourly average time-to-load value
"DATA",8973.3,2,10,2,0)
for the coversheet at this site over 24 hours.
"DATA",8973.3,3,0)
TMG DLY TTL DETAIL^0^0
"DATA",8973.3,3,2)
TMG - Daily Coversheet TTL Detailed Report
"DATA",8973.3,3,10,0)
^^3^3^3080701^
"DATA",8973.3,3,10,1,0)
This detailed report displays daily time-to-load values for the coversheet
"DATA",8973.3,3,10,2,0)
at this site.  The report breaks the time-to-load metrics into ten second
"DATA",8973.3,3,10,3,0)
groupings.
"DATA",8973.3,4,0)
TMG HR TTL DETAIL^0^0
"DATA",8973.3,4,2)
TMG - Hourly Coversheet TTL Detailed Report
"DATA",8973.3,4,10,0)
^^3^3^3080702^
"DATA",8973.3,4,10,1,0)
This detail report displays the hourly time-to-load values for the
"DATA",8973.3,4,10,2,0)
coversheet at this site. The report breaks the time-to-load metrics into
"DATA",8973.3,4,10,3,0)
ten second groupings.
"DATA",8973.3,5,0)
TMG TTL ALERT^0^0
"DATA",8973.3,5,2)
TMG - Coversheet TTL Alert Report
"DATA",8973.3,5,10,0)
^8973.31^3^3^3080702^^
"DATA",8973.3,5,10,1,0)
This alerting report shows the particular coversheet loads that had
"DATA",8973.3,5,10,2,0)
excessive time-to-load values. This report will search for a particular
"DATA",8973.3,5,10,3,0)
person, a particular client name or IP address.
"DATA",8973.3,6,0)
TMG HRLY TTL RT^0^0
"DATA",8973.3,6,2)
TMG - Real-Time Average Hourly Coversheet Load
"DATA",8973.3,6,10,0)
^^2^2^3090602^
"DATA",8973.3,6,10,1,0)
This report displays the hourly average time-to-load value for coversheets
"DATA",8973.3,6,10,2,0)
at this site for the current day.
"DATA",8973.3,7,0)
TMG RT THRESHOLD ALERT^0^0
"DATA",8973.3,7,2)
TMG - Real-Time Threshold Alert
"DATA",8973.3,7,10,0)
^8973.31^3^3^3090605^^
"DATA",8973.3,7,10,1,0)
This alerting report show the particular coversheet loads that have 
"DATA",8973.3,7,10,2,0)
excessive time-to-load values for TODAY (Real-Time). This report will 
"DATA",8973.3,7,10,3,0)
search for a particular person, a particular client name or an IP address.
"FIA",8972.1)
CP CODE EVALUATOR
"FIA",8972.1,0)
^KMPD(8972.1,
"FIA",8972.1,0,0)
8972.1AO
"FIA",8972.1,0,1)
y^y^f^^^^n
"FIA",8972.1,0,10)

"FIA",8972.1,0,11)

"FIA",8972.1,0,"RLRO")

"FIA",8972.1,0,"VR")
3.0^KMPD
"FIA",8972.1,8972.1)
0
"FIA",8972.1,8972.11)
0
"FIA",8972.1,8972.111)
0
"FIA",8972.3)
CP DATA ELEMENTS
"FIA",8972.3,0)
^KMPD(8972.3,
"FIA",8972.3,0,0)
8972.3
"FIA",8972.3,0,1)
y^y^f^^n^^y^o^n
"FIA",8972.3,0,10)

"FIA",8972.3,0,11)

"FIA",8972.3,0,"RLRO")

"FIA",8972.3,0,"VR")
3.0^KMPD
"FIA",8972.3,8972.3)
0
"FIA",8973)
CP PARAMETERS
"FIA",8973,0)
^KMPD(8973,
"FIA",8973,0,0)
8973P
"FIA",8973,0,1)
y^y^f^^^^n
"FIA",8973,0,10)

"FIA",8973,0,11)

"FIA",8973,0,"RLRO")

"FIA",8973,0,"VR")
3.0^KMPD
"FIA",8973,8973)
0
"FIA",8973,8973.01)
0
"FIA",8973,8973.02)
0
"FIA",8973,8973.03)
0
"FIA",8973,8973.04)
0
"FIA",8973,8973.05)
0
"FIA",8973,8973.201)
0
"FIA",8973.1)
CM HL7 DATA
"FIA",8973.1,0)
^KMPD(8973.1,
"FIA",8973.1,0,0)
8973.1DI
"FIA",8973.1,0,1)
y^y^f^^^^n
"FIA",8973.1,0,10)

"FIA",8973.1,0,11)

"FIA",8973.1,0,"RLRO")

"FIA",8973.1,0,"VR")
3.0^KMPD
"FIA",8973.1,8973.1)
0
"FIA",8973.2)
CP TIMING
"FIA",8973.2,0)
^KMPD(8973.2,
"FIA",8973.2,0,0)
8973.2I
"FIA",8973.2,0,1)
y^y^f^^^^n
"FIA",8973.2,0,10)

"FIA",8973.2,0,11)

"FIA",8973.2,0,"RLRO")

"FIA",8973.2,0,"VR")
3.0^KMPD
"FIA",8973.2,8973.2)
0
"FIA",8973.3)
CP REPORTS
"FIA",8973.3,0)
^KMPD(8973.3,
"FIA",8973.3,0,0)
8973.3
"FIA",8973.3,0,1)
y^y^f^^n^^y^o^n
"FIA",8973.3,0,10)

"FIA",8973.3,0,11)

"FIA",8973.3,0,"RLRO")

"FIA",8973.3,0,"VR")
3.0^KMPD
"FIA",8973.3,8973.3)
0
"FIA",8973.3,8973.31)
0
"INIT")
EN^KMPDPOST
"KRN",.403,40,-1)
0^1
"KRN",.403,40,0)
KMPD PARAMETERS EDIT^@^@^^3031203.0915^^^8973^0^0^1
"KRN",.403,40,40,0)
^.4031I^1^1
"KRN",.403,40,40,1,0)
1^^1,1
"KRN",.403,40,40,1,1)
Page 1
"KRN",.403,40,40,1,40,0)
^.4032IP^165^2
"KRN",.403,40,40,1,40,164,0)
KMPD PARAMETERS HDR^1^1,1^e
"KRN",.403,40,40,1,40,165,0)
KMPD PARAMETERS PAGE 1^2^4,1^e
"KRN",.404,164,0)
KMPD PARAMETERS HDR^8973^
"KRN",.404,164,40,0)
^.4044I^3^3
"KRN",.404,164,40,1,0)
1^CM Tools Parameters Edit^1
"KRN",.404,164,40,1,2)
^^1,26
"KRN",.404,164,40,2,0)
2^Page 1^1
"KRN",.404,164,40,2,2)
^^1,72
"KRN",.404,164,40,3,0)
3^!M^1
"KRN",.404,164,40,3,.1)
S Y=$P($G(^DIC(4,+$P($G(^KMPD(8973,1,0)),U),0)),U),Y=$P($G(DDGLVID),$G(DDGLDEL))_$J(" ",(30-$L(Y))\2)_Y_$P($G(DDGLVID),$G(DDGLDEL),3)
"KRN",.404,164,40,3,2)
^^2,24
"KRN",.404,165,0)
KMPD PARAMETERS PAGE 1^8973
"KRN",.404,165,40,0)
^.4044I^15^15
"KRN",.404,165,40,1,0)
1^Current Version^3
"KRN",.404,165,40,1,1)
.02
"KRN",.404,165,40,1,2)
1,18^13^1,1
"KRN",.404,165,40,1,4)
^^^1
"KRN",.404,165,40,2,0)
2^Version Installed^3
"KRN",.404,165,40,2,1)
.03
"KRN",.404,165,40,2,2)
1,53^17^1,34
"KRN",.404,165,40,2,4)
^^^1
"KRN",.404,165,40,3,0)
3^Current Patch^3
"KRN",.404,165,40,3,1)
.04
"KRN",.404,165,40,3,2)
2,18^13^2,3
"KRN",.404,165,40,3,4)
^^^1
"KRN",.404,165,40,4,0)
4^Patch Installed^3
"KRN",.404,165,40,4,1)
.05
"KRN",.404,165,40,4,2)
2,53^17^2,36
"KRN",.404,165,40,4,4)
^^^1
"KRN",.404,165,40,5,0)
5^Purge HL7 Data After^3
"KRN",.404,165,40,5,1)
3.11
"KRN",.404,165,40,5,2)
5,26^3^5,4
"KRN",.404,165,40,5,11)
D HLP^DDSUTL($G(^DD(8973,3.11,3)))
"KRN",.404,165,40,6,0)
6^Weeks^1
"KRN",.404,165,40,6,2)
^^5,30
"KRN",.404,165,40,7,0)
7^Purge Timing Data after^3
"KRN",.404,165,40,7,1)
4.11
"KRN",.404,165,40,7,2)
6,26^3^6,1
"KRN",.404,165,40,7,11)
D HLP^DDSUTL($G(^DD(8973,4.11,3)))
"KRN",.404,165,40,8,0)
8^Weeks^1
"KRN",.404,165,40,8,2)
^^6,30
"KRN",.404,165,40,9,0)
9^Purge RUM Data After^3
"KRN",.404,165,40,9,1)
2.11
"KRN",.404,165,40,9,2)
7,26^3^7,4
"KRN",.404,165,40,9,11)
D HLP^DDSUTL($G(^DD(8973,2.11,3)))
"KRN",.404,165,40,10,0)
10^Weeks^1
"KRN",.404,165,40,10,2)
^^7,30
"KRN",.404,165,40,11,0)
11^Timing Monitor Update Rate - Min^3
"KRN",.404,165,40,11,1)
19.01
"KRN",.404,165,40,11,2)
5,72^2^5,38
"KRN",.404,165,40,11,11)
D HLP^DDSUTL($G(^DD(8973,19.01,3)))
"KRN",.404,165,40,12,0)
12^Timing Monitor Alert - Seconds^3
"KRN",.404,165,40,12,1)
19.02
"KRN",.404,165,40,12,2)
6,72^3^6,40
"KRN",.404,165,40,12,11)
D HLP^DDSUTL($G(^DD(8973,19.02,3)))
"KRN",.404,165,40,13,0)
13^Scheduled Down Time Start^3
"KRN",.404,165,40,13,1)
5.01
"KRN",.404,165,40,13,2)
10,29^20^10,2
"KRN",.404,165,40,13,11)
D HLP^DDSUTL($G(^DD(8973,5.01,3)))
"KRN",.404,165,40,13,12)
D:X="" UNED^DDSUTL(14,,,1),UNED^DDSUTL(15,,,1) D:X'="" UNED^DDSUTL(14,,,0),UNED^DDSUTL(15,,,0)
"KRN",.404,165,40,13,13)
D PUT^DDSVAL(8973,.DA,5.02,""),PUT^DDSVAL(8973,.DA,5.03,"")
"KRN",.404,165,40,14,0)
14^Scheduled Down Time Stop^3
"KRN",.404,165,40,14,1)
5.02
"KRN",.404,165,40,14,2)
11,29^20^11,3
"KRN",.404,165,40,14,11)
D:$$GET^DDSVAL(8973,.DA,5.01)'="" HLP^DDSUTL($G(^DD(8973,5.02,3)))
"KRN",.404,165,40,14,12)
I X'="" I X'>$$GET^DDSVAL(8973,.DA,5.01,,"I") W $C(7) D HLP^DDSUTL("This must be greater than the 'Scheduled Down Time Start' entry.") S X="",DDSBR="14" D PUT^DDSVAL(8973,.DA,5.02,X)
"KRN",.404,165,40,15,0)
15^Reason for Down Time^3
"KRN",.404,165,40,15,1)
5.03
"KRN",.404,165,40,15,2)
12,29^50^12,7
"KRN",.404,165,40,15,11)
D HLP^DDSUTL($G(^DD(8973,5.03,3)))
"KRN",3.6,197,-1)
0^1
"KRN",3.6,197,0)
KMPD ECHO^CP Echo Server Error^1
"KRN",3.6,197,1,0)
^3.61A^9^9^3060412^^
"KRN",3.6,197,1,1,0)
The 'CP Echo Server' [KMPD ECHO] encountered an error.
"KRN",3.6,197,1,2,0)
 
"KRN",3.6,197,1,3,0)
   Date/Time: |1|
"KRN",3.6,197,1,4,0)
      Sender: |2|
"KRN",3.6,197,1,5,0)
 Option name: |3|
"KRN",3.6,197,1,6,0)
     Subject: |4|
"KRN",3.6,197,1,7,0)
   Message #: |5|
"KRN",3.6,197,1,8,0)
 
"KRN",3.6,197,1,9,0)
    Comments: |6|
"KRN",3.6,197,3,0)
^3.63^2^2^3060412^^
"KRN",3.6,197,3,1,0)
This bulletin is sent to the KMP-CAPMAN mail group when the 'CP Echo 
"KRN",3.6,197,3,2,0)
Server' [KMPD ECHO] encounters an error.
"KRN",3.6,197,4,0)
^3.64A^6^6
"KRN",3.6,197,4,1,0)
1
"KRN",3.6,197,4,1,1,0)
^^2^2^3060315^
"KRN",3.6,197,4,1,1,1,0)
The date and time in human-readable form when the server request was 
"KRN",3.6,197,4,1,1,2,0)
received.
"KRN",3.6,197,4,2,0)
2
"KRN",3.6,197,4,2,1,0)
^^1^1^3060315^
"KRN",3.6,197,4,2,1,1,0)
The name of the sender of the server request.
"KRN",3.6,197,4,3,0)
3
"KRN",3.6,197,4,3,1,0)
^^1^1^3060315^
"KRN",3.6,197,4,3,1,1,0)
The name of the option which was requested by Mailman.
"KRN",3.6,197,4,4,0)
4
"KRN",3.6,197,4,4,1,0)
^^1^1^3060315^
"KRN",3.6,197,4,4,1,1,0)
The subject of the message which requested a server.
"KRN",3.6,197,4,5,0)
5
"KRN",3.6,197,4,5,1,0)
^^1^1^3060315^
"KRN",3.6,197,4,5,1,1,0)
The internal number of the message requesting a server.
"KRN",3.6,197,4,6,0)
6
"KRN",3.6,197,4,6,1,0)
^3.65^3^3^3060315^
"KRN",3.6,197,4,6,1,1,0)
Comments appended to the bulletin. These may include errors trapped by 
"KRN",3.6,197,4,6,1,2,0)
the server software and/or the operating system, as well as general 
"KRN",3.6,197,4,6,1,3,0)
purpose messages.
"KRN",19,6819,-1)
0^18
"KRN",19,6819,0)
XTCM MAIN^Capacity Planning^^M^^^^^^^^TOOLKIT
"KRN",19,6819,1,0)
^19.06^2^2^3100331^^^^
"KRN",19,6819,1,1,0)
This menu holds all the currently available capacity management
"KRN",19,6819,1,2,0)
functions.
"KRN",19,6819,10,0)
^19.01IP^13^13
"KRN",19,6819,10,12,0)
7436^TLS
"KRN",19,6819,10,12,"^")
KMPD CM TOOLS MANAGER MENU
"KRN",19,6819,10,13,0)
7413^CPG
"KRN",19,6819,10,13,"^")
KMP MAIL GROUP EDIT
"KRN",19,6819,99)
62356,45184
"KRN",19,6819,99.1)
55707,82829
"KRN",19,6819,"U")
CAPACITY PLANNING
"KRN",19,7413,-1)
0^19
"KRN",19,7413,0)
KMP MAIL GROUP EDIT^Capacity Planning Mail Group Edit^^A^^^^^^^^^^1^^^
"KRN",19,7413,1,0)
^19.06^1^1^3030829^^^^
"KRN",19,7413,1,1,0)
This option is used to edit mail group KMP-CAPMAN.
"KRN",19,7413,20)
W !!?21," Edit Capacity Planning Mail Group " N DA,DIE,DR,X,Y S DIE=3.8,DR="1:7.9;10.1:99",DA=$O(^XMB(3.8,"B","KMP-CAPMAN",0)) W:'DA *7,!?3,"Mail group 'KMP-CAPMAN' is not defined!" Q:'DA  W !!,"NAME: ",$P($G(^XMB(3.8,DA,0)),U) D ^DIE
"KRN",19,7413,26)

"KRN",19,7413,30)

"KRN",19,7413,31)

"KRN",19,7413,33)

"KRN",19,7413,34)

"KRN",19,7413,50)

"KRN",19,7413,51)

"KRN",19,7413,99)
55595,47667
"KRN",19,7413,99.1)
57661,35273
"KRN",19,7413,"U")
CAPACITY PLANNING MAIL GROUP E
"KRN",19,7434,-1)
0^7
"KRN",19,7434,0)
KMPD STATUS^CP Environment Check^^R^^^^^^^^CAPACITY MANAGEMENT TOOLS
"KRN",19,7434,1,0)
^^2^2^3020220^
"KRN",19,7434,1,1,0)
This option displays the status of the [KMPD BACKGROUND DRIVER] option, 
"KRN",19,7434,1,2,0)
and information on the CM HL7 DATA file (#8973.1).
"KRN",19,7434,25)
EN^KMPDSS
"KRN",19,7434,"U")
CP ENVIRONMENT CHECK
"KRN",19,7435,-1)
0^1
"KRN",19,7435,0)
KMPD BACKGROUND DRIVER^CM Tools Background Driver^^R^^^^^^^^CAPACITY MANAGEMENT TOOLS
"KRN",19,7435,1,0)
^19.06^6^6^3020220^^^^
"KRN",19,7435,1,1,0)
This option should be queued to run each night (1:30am recommended).  Each
"KRN",19,7435,1,2,0)
night it will compress HL7 data into daily statistics and store this data
"KRN",19,7435,1,3,0)
in file #8973.1 (CM HL7 DATA).  Each Sunday this daily data will be
"KRN",19,7435,1,4,0)
compiled into weekly stats and shipped (via MailMan) to the CM National
"KRN",19,7435,1,5,0)
Database.  After the weekly transmission, file #8973.1 will be purged,
"KRN",19,7435,1,6,0)
leaving only two weeks of data.
"KRN",19,7435,25)
KMPDBD01
"KRN",19,7435,200.9)
y^y
"KRN",19,7435,"U")
CM TOOLS BACKGROUND DRIVER
"KRN",19,7436,-1)
0^3
"KRN",19,7436,0)
KMPD CM TOOLS MANAGER MENU^CP Tools Manager Menu^^M^^^^^^^^CAPACITY MANAGEMENT TOOLS
"KRN",19,7436,10,0)
^19.01IP^5^5
"KRN",19,7436,10,1,0)
7434^STA^1
"KRN",19,7436,10,1,"^")
KMPD STATUS
"KRN",19,7436,10,2,0)
7454^RPT^5
"KRN",19,7436,10,2,"^")
KMPD CM TOOLS REPORTS
"KRN",19,7436,10,3,0)
7461^SST^2
"KRN",19,7436,10,3,"^")
KMPD TMG START/STOP
"KRN",19,7436,10,4,0)
7478^PRM^3
"KRN",19,7436,10,4,"^")
KMPD PARAM EDIT
"KRN",19,7436,10,5,0)
7480^TMT^4
"KRN",19,7436,10,5,"^")
KMPD TMG MONITOR
"KRN",19,7436,99)
62356,45184
"KRN",19,7436,"U")
CP TOOLS MANAGER MENU
"KRN",19,7454,-1)
0^4
"KRN",19,7454,0)
KMPD CM TOOLS REPORTS^CP Tools Reports^^M^^^^^^^^CAPACITY MANAGEMENT TOOLS
"KRN",19,7454,10,0)
^19.01IP^1^1
"KRN",19,7454,10,1,0)
7465^TMG^1
"KRN",19,7454,10,1,"^")
KMPD TMG REPORTS
"KRN",19,7454,99)
62356,45184
"KRN",19,7454,"U")
CP TOOLS REPORTS
"KRN",19,7455,-1)
0^9
"KRN",19,7455,0)
KMPD TMG AVG TTL^Average Daily Coversheet Load^^R^^^^^^^^CAPACITY MANAGEMENT TOOLS
"KRN",19,7455,1,0)
^^3^3^3030903^
"KRN",19,7455,1,1,0)
This report displays the daily average time-to-load value for the
"KRN",19,7455,1,2,0)
coversheet at this site.  Average time-to-load values are given for either
"KRN",19,7455,1,3,0)
daily prime time or non-prime time periods.
"KRN",19,7455,25)
EN^KMPDTP1
"KRN",19,7455,"U")
AVERAGE DAILY COVERSHEET LOAD
"KRN",19,7456,-1)
0^10
"KRN",19,7456,0)
KMPD TMG DLY TTL DETAIL^Detailed Daily Coversheet Load^^R^^^^^^^^CAPACITY MANAGEMENT TOOLS
"KRN",19,7456,1,0)
^^3^3^3030903^
"KRN",19,7456,1,1,0)
This detailed report displays daily time-to-load values for the coversheet
"KRN",19,7456,1,2,0)
at this site.  The report breaks the time-to-load metrics into ten second
"KRN",19,7456,1,3,0)
groupings.
"KRN",19,7456,25)
EN^KMPDTP2
"KRN",19,7456,"U")
DETAILED DAILY COVERSHEET LOAD
"KRN",19,7458,-1)
0^11
"KRN",19,7458,0)
KMPD TMG HRLY TTL DETAIL^Detailed Hourly Coversheet Load^^R^^^^^^^^CAPACITY MANAGEMENT TOOLS
"KRN",19,7458,1,0)
^^3^3^3030903^
"KRN",19,7458,1,1,0)
This detail report displays the hourly time-to-load values for the
"KRN",19,7458,1,2,0)
coversheet at this site.  The report breaks the time-to-load metrics into
"KRN",19,7458,1,3,0)
ten second groupings.
"KRN",19,7458,25)
EN^KMPDTP4
"KRN",19,7458,"U")
DETAILED HOURLY COVERSHEET LOA
"KRN",19,7459,-1)
0^16
"KRN",19,7459,0)
KMPD TMG TTL ALERT^Threshold Alert^^R^^^^^^^^CAPACITY MANAGEMENT TOOLS
"KRN",19,7459,1,0)
^^3^3^3031105^
"KRN",19,7459,1,1,0)
This alerting report shows the particular coversheet loads that had
"KRN",19,7459,1,2,0)
excessive time-to-load values. This report will search for a particular
"KRN",19,7459,1,3,0)
person, a particular client name or IP address.
"KRN",19,7459,25)
EN^KMPDTP5
"KRN",19,7459,"U")
THRESHOLD ALERT
"KRN",19,7461,-1)
0^15
"KRN",19,7461,0)
KMPD TMG START/STOP^Start/Stop Timing Collection^^R^^^^^^^^CAPACITY MANAGEMENT TOOLS
"KRN",19,7461,25)
SST^KMPDSS
"KRN",19,7461,"U")
START/STOP TIMING COLLECTION
"KRN",19,7463,-1)
0^17
"KRN",19,7463,0)
KMPD TMG TTL ALERT RT^Real-Time Threshold Alert^^R^^^^^^^^CAPACITY MANAGEMENT TOOLS
"KRN",19,7463,1,0)
^19.06^3^3^3040127^^
"KRN",19,7463,1,1,0)
This alerting report shows the particular coversheet loads that have
"KRN",19,7463,1,2,0)
excessive time-to-load values for TODAY (Real-Time). This report will
"KRN",19,7463,1,3,0)
search for a particular person, a particular client name or IP address.
"KRN",19,7463,25)
EN^KMPDTP6
"KRN",19,7463,"U")
REAL-TIME THRESHOLD ALERT
"KRN",19,7464,-1)
0^12
"KRN",19,7464,0)
KMPD TMG HRLY TTL RT^Real-Time Average Hourly Coversheet Load^^R^^^^^^^^CAPACITY MANAGEMENT TOOLS
"KRN",19,7464,1,0)
^^2^2^3031105^
"KRN",19,7464,1,1,0)
This report displays the hourly average time-to-load value for the
"KRN",19,7464,1,2,0)
coversheet at this site over 24 hours.
"KRN",19,7464,25)
EN^KMPDTP7
"KRN",19,7464,"U")
REAL-TIME AVERAGE HOURLY COVER
"KRN",19,7465,-1)
0^14
"KRN",19,7465,0)
KMPD TMG REPORTS^Timing Reports^^M^^^^^^^^CAPACITY MANAGEMENT TOOLS
"KRN",19,7465,10,0)
^19.01IP^7^7
"KRN",19,7465,10,1,0)
7455^AVD^1
"KRN",19,7465,10,1,"^")
KMPD TMG AVG TTL
"KRN",19,7465,10,2,0)
7477^AVH^2
"KRN",19,7465,10,2,"^")
KMPD TMG AVG HR TTL
"KRN",19,7465,10,3,0)
7456^DTD^3
"KRN",19,7465,10,3,"^")
KMPD TMG DLY TTL DETAIL
"KRN",19,7465,10,4,0)
7458^DTH^4
"KRN",19,7465,10,4,"^")
KMPD TMG HRLY TTL DETAIL
"KRN",19,7465,10,5,0)
7459^TAL^5
"KRN",19,7465,10,5,"^")
KMPD TMG TTL ALERT
"KRN",19,7465,10,6,0)
7463^RTA^6
"KRN",19,7465,10,6,"^")
KMPD TMG TTL ALERT RT
"KRN",19,7465,10,7,0)
7464^RAV^7
"KRN",19,7465,10,7,"^")
KMPD TMG HRLY TTL RT
"KRN",19,7465,99)
62356,45184
"KRN",19,7465,"U")
TIMING REPORTS
"KRN",19,7477,-1)
0^8
"KRN",19,7477,0)
KMPD TMG AVG HR TTL^Average Hourly Coversheet Load^^R^^^^^^^^CAPACITY MANAGEMENT TOOLS
"KRN",19,7477,1,0)
^19.06^2^2^3031105^^^^
"KRN",19,7477,1,1,0)
This report displays the hourly average time-to-load value for the
"KRN",19,7477,1,2,0)
coversheet at this site over 24 hours.
"KRN",19,7477,25)
EN^KMPDTP3
"KRN",19,7477,"U")
AVERAGE HOURLY COVERSHEET LOAD
"KRN",19,7478,-1)
0^6
"KRN",19,7478,0)
KMPD PARAM EDIT^Edit CP Parameters File^^R^^^^^^^^CAPACITY MANAGEMENT TOOLS
"KRN",19,7478,25)
PRM^KMPDSS
"KRN",19,7478,"U")
EDIT CP PARAMETERS FILE
"KRN",19,7480,-1)
0^13
"KRN",19,7480,0)
KMPD TMG MONITOR^Timing Monitor^^R^^^^^^^^CAPACITY MANAGEMENT TOOLS
"KRN",19,7480,1,0)
^19.06^8^8^3040217^^
"KRN",19,7480,1,1,0)
This option displays CPRS Coversheet time-to-load data, as a bar graph, 
"KRN",19,7480,1,2,0)
for the current day.  This option can be left running on a terminal (if 
"KRN",19,7480,1,3,0)
desired).  The monitor is updated every 10 minutes (site configurable 
"KRN",19,7480,1,4,0)
through the [KMPD PARAM EDIT] Edit CP Parameters File option), and 
"KRN",19,7480,1,5,0)
displays current average time-to-load data starting at midnight.  An alarm
"KRN",19,7480,1,6,0)
message is displayed if the average time-to-load exceeds 30 seconds (site
"KRN",19,7480,1,7,0)
configurable through the [KMPD PARAM EDIT] Edit CP Parameters File
"KRN",19,7480,1,8,0)
option).
"KRN",19,7480,25)
EN^KMPDTM
"KRN",19,7480,"U")
TIMING MONITOR
"KRN",19,7490,-1)
0^2
"KRN",19,7490,0)
KMPD CM DEVELOPER TOOLS^CM Developer Tools^^B^^^^^^^^CAPACITY MANAGEMENT TOOLS
"KRN",19,7490,99.1)
59193,50668
"KRN",19,7490,"RPC",0)
^19.05P^36^36
"KRN",19,7490,"RPC",1,0)
KMPD FILE SEARCH
"KRN",19,7490,"RPC",2,0)
KMPD ENVIRONMENT
"KRN",19,7490,"RPC",3,0)
KMPD VERSION
"KRN",19,7490,"RPC",4,0)
DDR LISTER
"KRN",19,7490,"RPC",5,0)
KMPD ROUTINE FIND
"KRN",19,7490,"RPC",6,0)
KMPD ROUTINE INQ
"KRN",19,7490,"RPC",7,0)
KMPD ROUTINE LINE SRCH
"KRN",19,7490,"RPC",8,0)
KMPD ROUTINE SAVE
"KRN",19,7490,"RPC",9,0)
KMPD ROUTINE STATS
"KRN",19,7490,"RPC",10,0)
KMPD GLOBAL LIST
"KRN",19,7490,"RPC",11,0)
KMPD FM DATE
"KRN",19,7490,"RPC",12,0)
KMPD ERROR LOG DATA
"KRN",19,7490,"RPC",13,0)
KMPD ERROR LOG DATE
"KRN",19,7490,"RPC",14,0)
DDR GETS ENTRY DATA
"KRN",19,7490,"RPC",15,0)
DDR VALIDATOR
"KRN",19,7490,"RPC",16,0)
DDR FIND1
"KRN",19,7490,"RPC",17,0)
DDR FILER
"KRN",19,7490,"RPC",18,0)
KMPD ASSOC ROUTINE ADD/DEL
"KRN",19,7490,"RPC",19,0)
KMPD APPL STATUS
"KRN",19,7490,"RPC",22,0)
KMPD DATA ELEMENTS
"KRN",19,7490,"RPC",23,0)
KMPD NODES
"KRN",19,7490,"RPC",25,0)
KMPD TMG MON DATA
"KRN",19,7490,"RPC",26,0)
KMPD USER PARAMETERS
"KRN",19,7490,"RPC",27,0)
KMPD TMG DATES
"KRN",19,7490,"RPC",28,0)
KMPD TMG REPORTS
"KRN",19,7490,"RPC",30,0)
KMPD REPORT DEFINITION
"KRN",19,7490,"RPC",31,0)
KMPD TMG STATUS
"KRN",19,7490,"RPC",32,0)
KMPD TMG START/STOP
"KRN",19,7490,"RPC",33,0)
KMPD RUM START/STOP
"KRN",19,7490,"RPC",34,0)
KMPD RUM ENV
"KRN",19,7490,"RPC",35,0)
KMPD SEARCH BY LIST
"KRN",19,7490,"RPC",36,0)
KMPD ERROR LOG LIST
"KRN",19,7490,"U")
CM DEVELOPER TOOLS
"KRN",19,7531,-1)
0^5
"KRN",19,7531,0)
KMPD ECHO^CP Echo Server^^S^^^^^^^^
"KRN",19,7531,25)
ECHO^KMPDECH
"KRN",19,7531,220)
KMPD ECHO^R^^N^Y^N^0^^7
"KRN",19,7531,"U")
CP ECHO SERVER
"KRN",409.61,35,-1)
0^1
"KRN",409.61,35,0)
KMPD STATUS^2^^80^5^21^0^1^^^KMPD STATUS^1^^1
"KRN",409.61,35,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,35,"FNL")
D EXIT^KMPDSS1
"KRN",409.61,35,"HDR")
D HDR^KMPDSS1
"KRN",409.61,35,"HLP")
D HELP^KMPDSS1
"KRN",409.61,35,"INIT")
D INIT^KMPDSS1
"KRN",8989.51,29,-1)
0^1
"KRN",8989.51,29,0)
KMPD GUI OPTION ERROR LIST
"KRN",8989.51,29,1)
F^
"KRN",8989.51,29,6)

"KRN",8989.51,29,20,0)
^8989.512^1^1^3070926^^
"KRN",8989.51,29,20,1,0)
Display GUI option Error Lister.
"KRN",8989.51,29,30,0)
^8989.513I^1^1
"KRN",8989.51,29,30,1,0)
1^200
"KRN",8989.51,30,-1)
0^2
"KRN",8989.51,30,0)
KMPD GUI OPTION GLOBAL LIST^^0
"KRN",8989.51,30,1)
F^
"KRN",8989.51,30,20,0)
^8989.512^1^1^3070926^^^
"KRN",8989.51,30,20,1,0)
GUI option Global Lister.
"KRN",8989.51,30,30,0)
^8989.513I^1^1
"KRN",8989.51,30,30,1,0)
1^200
"KRN",8989.51,31,-1)
0^8
"KRN",8989.51,31,0)
KMPD GUI OPTION ROUTINE SEARCH^^0
"KRN",8989.51,31,1)
F^
"KRN",8989.51,31,20,0)
^^1^1^3070927^
"KRN",8989.51,31,20,1,0)
GUI option Routine Search.
"KRN",8989.51,31,30,0)
^8989.513I^1^1
"KRN",8989.51,31,30,1,0)
1^200
"KRN",8989.51,32,-1)
0^7
"KRN",8989.51,32,0)
KMPD GUI OPTION LOOKUPS^^0
"KRN",8989.51,32,1)
F^
"KRN",8989.51,32,20,0)
^^1^1^3070927^
"KRN",8989.51,32,20,1,0)
GUI option Lookups.
"KRN",8989.51,32,30,0)
^8989.513I^1^1
"KRN",8989.51,32,30,1,0)
1^200
"KRN",8989.51,33,-1)
0^4
"KRN",8989.51,33,0)
KMPD GUI OPTION CODE STATS^^0
"KRN",8989.51,33,1)
F^
"KRN",8989.51,33,20,0)
^^1^1^3070927^
"KRN",8989.51,33,20,1,0)
GUI option Code Stats.
"KRN",8989.51,33,30,0)
^8989.513I^1^1
"KRN",8989.51,33,30,1,0)
1^200
"KRN",8989.51,34,-1)
0^3
"KRN",8989.51,34,0)
KMPD GUI OPTION CODE EVALUATOR^^0
"KRN",8989.51,34,1)
F^
"KRN",8989.51,34,20,0)
^^1^1^3070927^
"KRN",8989.51,34,20,1,0)
GUI option Code Evaluator.
"KRN",8989.51,34,30,0)
^8989.513I^1^1
"KRN",8989.51,34,30,1,0)
1^200
"KRN",8989.51,35,-1)
0^9
"KRN",8989.51,35,0)
KMPD GUI OPTION TIMING MONITOR^^0
"KRN",8989.51,35,1)
F^
"KRN",8989.51,35,20,0)
^8989.512^1^1^3090506^^^^
"KRN",8989.51,35,20,1,0)
GUI option Timing Monitor.
"KRN",8989.51,35,30,0)
^8989.513I^1^1
"KRN",8989.51,35,30,1,0)
1^200
"KRN",8989.51,36,-1)
0^5
"KRN",8989.51,36,0)
KMPD GUI OPTION ENVIRON CHECK^^0
"KRN",8989.51,36,1)
F^
"KRN",8989.51,36,20,0)
^^1^1^3070927^
"KRN",8989.51,36,20,1,0)
GUI option Timing Monitor.
"KRN",8989.51,36,30,0)
^8989.513I^1^1
"KRN",8989.51,36,30,1,0)
1^200
"KRN",8989.51,37,-1)
0^10
"KRN",8989.51,37,0)
KMPD GUI OPTION TOOLS PARAMS^^0
"KRN",8989.51,37,1)
F^
"KRN",8989.51,37,20,0)
^^1^1^3070927^
"KRN",8989.51,37,20,1,0)
GUI option CM Tools Parameters.
"KRN",8989.51,37,30,0)
^8989.513I^1^1
"KRN",8989.51,37,30,1,0)
1^200
"KRN",8989.51,38,-1)
0^6
"KRN",8989.51,38,0)
KMPD GUI OPTION ENVIRON SELECT^^0^^
"KRN",8989.51,38,1)
S^0:Select;1:HL7;2:RUM;3:SAGG;4:Timing
"KRN",8989.51,38,20,0)
^^7^7^3070927^
"KRN",8989.51,38,20,1,0)
Determine which Environment Check is listed when user signs on:
"KRN",8989.51,38,20,2,0)
 
"KRN",8989.51,38,20,3,0)
        0: select (no display)
"KRN",8989.51,38,20,4,0)
        1: HL7
"KRN",8989.51,38,20,5,0)
        2: RUM
"KRN",8989.51,38,20,6,0)
        3: SAGG
"KRN",8989.51,38,20,7,0)
        4: Timing
"KRN",8989.51,38,30,0)
^8989.513I^1^1
"KRN",8989.51,38,30,1,0)
1^200
"KRN",8989.51,39,-1)
0^11
"KRN",8989.51,39,0)
KMPD GUI OPTION RPT
"KRN",8989.51,39,1)
F^
"KRN",8989.51,39,20,0)
^^1^1^3071004^
"KRN",8989.51,39,20,1,0)
Display GUI option Timing Reports.
"KRN",8989.51,39,30,0)
^8989.513I^1^1
"KRN",8989.51,39,30,1,0)
1^200
"KRN",8994,50,-1)
0^8
"KRN",8994,50,0)
KMPD FILE SEARCH^FILESRC^KMPDU5^4^R^^^1
"KRN",8994,50,1,0)
^^1^1^2990818^
"KRN",8994,50,1,1,0)
Search for entries in file.
"KRN",8994,50,2,0)
^8994.02A^4^4
"KRN",8994,50,2,1,0)
PARAM1^1^60^1^1
"KRN",8994,50,2,1,1,0)
^^1^1^2990818^
"KRN",8994,50,2,1,1,1,0)
File Number.
"KRN",8994,50,2,2,0)
PARAM2^1^245^1^2
"KRN",8994,50,2,2,1,0)
^^3^3^2990818^
"KRN",8994,50,2,2,1,1,0)
Fields to return.  This will be comma delimited.
"KRN",8994,50,2,2,1,2,0)
 
"KRN",8994,50,2,2,1,3,0)
Example:  ".01,.04,1,12"  - would return fields .01, .01, 1 and 12
"KRN",8994,50,2,3,0)
PARAM3^1^245^1^3
"KRN",8994,50,2,3,1,0)
^^6^6^2990818^
"KRN",8994,50,2,3,1,1,0)
Text to search for.
"KRN",8994,50,2,3,1,2,0)
 
"KRN",8994,50,2,3,1,3,0)
Example:  "DG" - would retrieve all entries beginning with DG.
"KRN",8994,50,2,3,1,4,0)
 
"KRN",8994,50,2,3,1,5,0)
               - if text equals "*" or "" (null) then all entries will be 
"KRN",8994,50,2,3,1,6,0)
                 retrieved
"KRN",8994,50,2,4,0)
PARAM4^1^245^1^4
"KRN",8994,50,2,4,1,0)
^^2^2^2990818^
"KRN",8994,50,2,4,1,1,0)
Name of array for temporary storage.  This should be a global array, and
"KRN",8994,50,2,4,1,2,0)
must be either ^TMP or ^UTILITY.
"KRN",8994,50,2,"B","PARAM1",1)

"KRN",8994,50,2,"B","PARAM2",2)

"KRN",8994,50,2,"B","PARAM3",3)

"KRN",8994,50,2,"B","PARAM4",4)

"KRN",8994,50,2,"PARAMSEQ",1,1)

"KRN",8994,50,2,"PARAMSEQ",2,2)

"KRN",8994,50,2,"PARAMSEQ",3,3)

"KRN",8994,50,2,"PARAMSEQ",4,4)

"KRN",8994,50,3,0)
^^8^8^2990818^
"KRN",8994,50,3,1,0)
Array with data from file in format:
"KRN",8994,50,3,2,0)
 
"KRN",8994,50,3,3,0)
       ARRAY(0)=IEN^FieldName^FieldName^FieldName^...
"KRN",8994,50,3,4,0)
       ARRAY(...)=IEN^FieldData^FieldData^FieldData^...
"KRN",8994,50,3,5,0)
 
"KRN",8994,50,3,6,0)
Please Note:  - the first piece is always the IEN (internal entry number).
"KRN",8994,50,3,7,0)
              - the zero node is always the names of the fields, once
"KRN",8994,50,3,8,0)
                again with the IEN's being first.
"KRN",8994,51,-1)
0^19
"KRN",8994,51,0)
KMPD VERSION^VERSION^KMPDU5^2^R
"KRN",8994,51,1,0)
^^1^1^2990818^
"KRN",8994,51,1,1,0)
Get version number for CM Developer Tools application.
"KRN",8994,51,3,0)
^^1^1^2990818^
"KRN",8994,51,3,1,0)
ARRAY(0)=VersionNumber
"KRN",8994,52,-1)
0^4
"KRN",8994,52,0)
KMPD ENVIRONMENT^ENV^KMPDU5^2^R
"KRN",8994,53,-1)
0^7
"KRN",8994,53,0)
KMPD FILE INQUIRY^FILEINQ^KMPDU5^4^R^^^1
"KRN",8994,53,1,0)
^^1^1^2990818^
"KRN",8994,53,1,1,0)
Return all data in file for specific entry.
"KRN",8994,53,2,0)
^8994.02A^3^3
"KRN",8994,53,2,1,0)
PARAM1^1^60^1^1
"KRN",8994,53,2,1,1,0)
^^1^1^2990818^
"KRN",8994,53,2,1,1,1,0)
File number.
"KRN",8994,53,2,2,0)
PARAM2^1^60^1^2
"KRN",8994,53,2,2,1,0)
^^1^1^2990818^
"KRN",8994,53,2,2,1,1,0)
IEN for file in PARAM1.
"KRN",8994,53,2,3,0)
PARAM3^1^245^1^3
"KRN",8994,53,2,3,1,0)
^^2^2^2990818^
"KRN",8994,53,2,3,1,1,0)
Array for temporary data storage.  This should be a global array, and must
"KRN",8994,53,2,3,1,2,0)
be either ^TMP or ^UTILITY.
"KRN",8994,53,2,"B","PARAM1",1)

"KRN",8994,53,2,"B","PARAM2",2)

"KRN",8994,53,2,"B","PARAM3",3)

"KRN",8994,53,2,"PARAMSEQ",1,1)

"KRN",8994,53,2,"PARAMSEQ",2,2)

"KRN",8994,53,2,"PARAMSEQ",3,3)

"KRN",8994,53,3,0)
^^3^3^2990818^
"KRN",8994,53,3,1,0)
Array containing data in format:
"KRN",8994,53,3,2,0)
 
"KRN",8994,53,3,3,0)
       ARRAY(...)=FieldName^FieldData
"KRN",8994,54,-1)
0^10
"KRN",8994,54,0)
KMPD GLOBAL LIST^GBLLIST^KMPDU1^2^R
"KRN",8994,54,1,0)
^8994.01^1^1^3090716^^
"KRN",8994,54,1,1,0)
Global list.
"KRN",8994,54,2,0)
^8994.02A^4^4
"KRN",8994,54,2,1,0)
PARAM1^1^245^1^1
"KRN",8994,54,2,1,1,0)
^^2^2^2990819^
"KRN",8994,54,2,1,1,1,0)
Global to list.  This can be an entire global (^DPT) or subscript
"KRN",8994,54,2,1,1,2,0)
(^DPT(25,).
"KRN",8994,54,2,2,0)
PARAM2^1^245^0^2
"KRN",8994,54,2,2,1,0)
^^3^3^2990819^
"KRN",8994,54,2,2,1,1,0)
Starting global node.  If this is a continuation of a global list, then
"KRN",8994,54,2,2,1,2,0)
this will be the starting point.  If the call is for the first time, then
"KRN",8994,54,2,2,1,3,0)
this should be set to null ("").
"KRN",8994,54,2,3,0)
PARAM3^1^245^1^3
"KRN",8994,54,2,3,1,0)
^^1^1^2990819^
"KRN",8994,54,2,3,1,1,0)
Number of lines to fill before quiting.
"KRN",8994,54,2,4,0)
LINE LENGTH^1^10^1^4
"KRN",8994,54,2,4,1,0)
^^1^1^3090716^
"KRN",8994,54,2,4,1,1,0)
Lenght of line before line-break.
"KRN",8994,54,2,"B","LINE LENGTH",4)

"KRN",8994,54,2,"B","PARAM1",1)

"KRN",8994,54,2,"B","PARAM2",2)

"KRN",8994,54,2,"B","PARAM3",3)

"KRN",8994,54,2,"PARAMSEQ",1,1)

"KRN",8994,54,2,"PARAMSEQ",2,2)

"KRN",8994,54,2,"PARAMSEQ",3,3)

"KRN",8994,54,2,"PARAMSEQ",4,4)

"KRN",8994,54,3,0)
^8994.03^12^12^3090716^^
"KRN",8994,54,3,1,0)
Array containing global data.  However, the zero node will contain the
"KRN",8994,54,3,2,0)
last global reference accessed.  This can then be used as the starting
"KRN",8994,54,3,3,0)
point for the next iteration (see PARAM2).  If the end of the global has
"KRN",8994,54,3,4,0)
been reached, then the zero node will equal '***end of global***'.
"KRN",8994,54,3,5,0)
 
"KRN",8994,54,3,6,0)
In the follwing example: PARAM1 = ^DPT(25
"KRN",8994,54,3,7,0)
                         PARAM2 = ""
"KRN",8994,54,3,8,0)
                         PARAM3 = 2
"KRN",8994,54,3,9,0)
 
"KRN",8994,54,3,10,0)
       ARRAY(0)="^DPT(25,.35)"
"KRN",8994,54,3,11,0)
       ARRAY(1)="^DPT(25,0)=GlobalData..."
"KRN",8994,54,3,12,0)
       ARRAY(2)="^DPT(25,.35)=GlobalData..."
"KRN",8994,55,-1)
0^5
"KRN",8994,55,0)
KMPD ERROR LOG DATA^ERRDATA^KMPDU3^4^R^^^1
"KRN",8994,55,1,0)
^^1^1^2990819^
"KRN",8994,55,1,1,0)
Get data from file #3.075 (ERROR LOG).
"KRN",8994,55,2,0)
^8994.02A^2^2
"KRN",8994,55,2,1,0)
PARAM1^1^60^1^1
"KRN",8994,55,2,1,1,0)
^^1^1^2990819^
"KRN",8994,55,2,1,1,1,0)
Ien in format "MultipleIen,Ien" for file #3.075 (ERROR LOG).
"KRN",8994,55,2,2,0)
PARAM2^1^60^1^2
"KRN",8994,55,2,2,1,0)
^^1^1^2990819^
"KRN",8994,55,2,2,1,1,0)
Temporary global storage.  This must be either ^TMP or ^UTILITY.
"KRN",8994,55,2,"B","PARAM1",1)

"KRN",8994,55,2,"B","PARAM2",2)

"KRN",8994,55,2,"PARAMSEQ",1,1)

"KRN",8994,55,2,"PARAMSEQ",2,2)

"KRN",8994,55,3,0)
^^1^1^2990819^
"KRN",8994,55,3,1,0)
Return data in array.
"KRN",8994,56,-1)
0^13
"KRN",8994,56,0)
KMPD ROUTINE FIND^ROUFIND^KMPDU2^4^R^^^1
"KRN",8994,56,1,0)
^^1^1^2991214^^
"KRN",8994,56,1,1,0)
Return list of routine names.
"KRN",8994,56,2,0)
^8994.02A^3^2
"KRN",8994,56,2,1,0)
PARAM1^1^30^1^1
"KRN",8994,56,2,1,1,0)
^^1^1^2990819^
"KRN",8994,56,2,1,1,1,0)
Routine name to search for (may contain an asterisk (*) for a list).
"KRN",8994,56,2,3,0)
PARAM2^1^60^1^3
"KRN",8994,56,2,3,1,0)
^^1^1^2991214^^
"KRN",8994,56,2,3,1,1,0)
Temporary global storage name.  Must be either ^TMP or ^UTILITY.
"KRN",8994,56,2,"B","PARAM1",1)

"KRN",8994,56,2,"B","PARAM2",3)

"KRN",8994,56,2,"PARAMSEQ",1,1)

"KRN",8994,56,2,"PARAMSEQ",3,3)

"KRN",8994,56,3,0)
^^4^4^2991214^^
"KRN",8994,56,3,1,0)
Array of routine names in format:
"KRN",8994,56,3,2,0)
 
"KRN",8994,56,3,3,0)
       ARRAY(0)=RoutineName
"KRN",8994,56,3,4,0)
       ARRAY(1)=Checksum (if requested) else will be next RoutineName.
"KRN",8994,57,-1)
0^14
"KRN",8994,57,0)
KMPD ROUTINE INQ^ROUINQ^KMPDU2^2^R
"KRN",8994,57,1,0)
^^1^1^2990819^
"KRN",8994,57,1,1,0)
Routine inquiry.
"KRN",8994,57,2,0)
^8994.02A^1^1
"KRN",8994,57,2,1,0)
PARAM1^1^30^1^1
"KRN",8994,57,2,1,1,0)
^^1^1^2990819^
"KRN",8994,57,2,1,1,1,0)
Routine name.
"KRN",8994,57,2,"B","PARAM1",1)

"KRN",8994,57,2,"PARAMSEQ",1,1)

"KRN",8994,57,3,0)
^^1^1^2990819^
"KRN",8994,57,3,1,0)
Routine returned in array.
"KRN",8994,58,-1)
0^15
"KRN",8994,58,0)
KMPD ROUTINE LINE SRCH^ROUSRC2^KMPDU2^4^R^^^1
"KRN",8994,58,1,0)
^8994.01^1^1^3091216^^
"KRN",8994,58,1,1,0)
Search routine(s) for text.
"KRN",8994,58,2,0)
^8994.02A^3^3
"KRN",8994,58,2,1,0)
ROUTINES^2^60^1^3
"KRN",8994,58,2,1,1,0)
^8994.021^2^2^3091216^^
"KRN",8994,58,2,1,1,1,0)
Array containg routine names to be searched.
"KRN",8994,58,2,1,1,2,0)
        array("RoutineName")=""
"KRN",8994,58,2,2,0)
SEARCH TEXT^1^245^1^1
"KRN",8994,58,2,2,1,0)
^8994.021^1^1^3091216^^
"KRN",8994,58,2,2,1,1,0)
Text to search for.
"KRN",8994,58,2,3,0)
GLOBAL^1^60^1^2
"KRN",8994,58,2,3,1,0)
^8994.021^1^1^3091216^^
"KRN",8994,58,2,3,1,1,0)
Temporary global storage for data.  Must be ^TMP or ^UTILITY.
"KRN",8994,58,2,"B","GLOBAL",3)

"KRN",8994,58,2,"B","PARAM1",1)

"KRN",8994,58,2,"B","PARAM2",2)

"KRN",8994,58,2,"B","PARAM3",3)

"KRN",8994,58,2,"B","ROUTINES",1)

"KRN",8994,58,2,"B","SEARCH TEXT",2)

"KRN",8994,58,2,"PARAMSEQ",1,1)

"KRN",8994,58,2,"PARAMSEQ",1,2)

"KRN",8994,58,2,"PARAMSEQ",2,2)

"KRN",8994,58,2,"PARAMSEQ",2,3)

"KRN",8994,58,2,"PARAMSEQ",3,1)

"KRN",8994,58,2,"PARAMSEQ",3,3)

"KRN",8994,58,3,0)
^^3^3^2990824^
"KRN",8994,58,3,1,0)
Array containing matches.
"KRN",8994,58,3,2,0)
 
"KRN",8994,58,3,3,0)
       ARRAY(...)=RoutineName^Label+Offset  M code
"KRN",8994,64,-1)
0^17
"KRN",8994,64,0)
KMPD ROUTINE STATS^ROUSTATS^KMPDU3^2^R
"KRN",8994,64,1,0)
^^1^1^2991214^
"KRN",8994,64,1,1,0)
Routine stats from file #8972.1 (CAPMAN ROUTINE STATS).
"KRN",8994,64,2,0)
^8994.02A^1^1
"KRN",8994,64,2,1,0)
PARAM1^1^240^1^1
"KRN",8994,64,2,1,1,0)
^^4^4^2991214^
"KRN",8994,64,2,1,1,1,0)
Ien(s) for file #8972.1 (CAPMAN ROUTINE STATS).  If more than one Ien then
"KRN",8994,64,2,1,1,2,0)
each will be seperated by a comma.
"KRN",8994,64,2,1,1,3,0)
 
"KRN",8994,64,2,1,1,4,0)
Example: "12,98,38,123"
"KRN",8994,64,2,"B","PARAM1",1)

"KRN",8994,64,2,"PARAMSEQ",1,1)

"KRN",8994,64,3,0)
^^11^11^2991214^
"KRN",8994,64,3,1,0)
Array containing data from zero node of file #8972.1 (CAPMAN ROUTINE
"KRN",8994,64,3,2,0)
STATS).
"KRN",8994,64,3,3,0)
 
"KRN",8994,64,3,4,0)
        ARRAY(0)=TEST 1 AUG 27^Aug 27, 1999@09:53:17^577^0^0^1^0^3^0
"KRN",8994,64,3,5,0)
        ARRAY(1)=TEST 1 OCT 13^Oct 13, 1999@10:36:49^577^0^0^1^0^4^0
"KRN",8994,64,3,6,0)
        ARRAY(2)=EN~ZZRK OCT 29^Oct 29, 1999@04:33:27^577^0^0^1^0^4^0
"KRN",8994,64,3,7,0)
 
"KRN",8994,64,3,8,0)
See data dictionary for details.
"KRN",8994,64,3,9,0)
 
"KRN",8994,64,3,10,0)
Note: The second piece (Date/Time Entered) has been changed to external
"KRN",8994,64,3,11,0)
      format.
"KRN",8994,65,-1)
0^16
"KRN",8994,65,0)
KMPD ROUTINE SAVE^ROUSAVE^KMPDU3^2^R
"KRN",8994,65,1,0)
^^1^1^2991216^
"KRN",8994,65,1,1,0)
Save Routine.
"KRN",8994,65,2,0)
^8994.02A^2^2
"KRN",8994,65,2,1,0)
PARAM1^1^8^1^1
"KRN",8994,65,2,1,1,0)
^^1^1^2991216^
"KRN",8994,65,2,1,1,1,0)
Routine name (limited to 8 characters).
"KRN",8994,65,2,2,0)
PARAM2^2^240^1^2
"KRN",8994,65,2,2,1,0)
^^1^1^2991216^
"KRN",8994,65,2,2,1,1,0)
Array containing routine code.
"KRN",8994,65,2,"B","PARAM1",1)

"KRN",8994,65,2,"B","PARAM2",2)

"KRN",8994,65,2,"PARAMSEQ",1,1)

"KRN",8994,65,2,"PARAMSEQ",2,2)

"KRN",8994,65,3,0)
^^1^1^2991216^
"KRN",8994,65,3,1,0)
Save routine to server.
"KRN",8994,67,-1)
0^9
"KRN",8994,67,0)
KMPD FM DATE^FMDTI^KMPDU^2^R
"KRN",8994,67,1,0)
^8994.01^1^1^3000202^
"KRN",8994,67,1,1,0)
Return user response as fm date.
"KRN",8994,67,2,0)
^8994.02A^1^1
"KRN",8994,67,2,1,0)
PARAM1^1^30^1^1
"KRN",8994,67,2,1,1,0)
^^3^3^3000202^
"KRN",8994,67,2,1,1,1,0)
User response to request for date: 'T'
"KRN",8994,67,2,1,1,2,0)
                                   'T-1'
"KRN",8994,67,2,1,1,3,0)
                                   01/02/00
"KRN",8994,67,2,"B","PARAM1",1)

"KRN",8994,67,2,"PARAMSEQ",1,1)

"KRN",8994,67,3,0)
^^2^2^3000202^
"KRN",8994,67,3,1,0)
Return: "^" - invalid response
"KRN",8994,67,3,2,0)
        FMInternalDate^ExternalDate
"KRN",8994,68,-1)
0^6
"KRN",8994,68,0)
KMPD ERROR LOG DATE^ERRDATE^KMPDU3^2^R
"KRN",8994,68,1,0)
^^1^1^3000202^
"KRN",8994,68,1,1,0)
Get matching date or list of dates from file #3.075 (ERROR LOG).
"KRN",8994,68,2,0)
^8994.02A^1^1
"KRN",8994,68,2,1,0)
PARAM1^1^30^1^1
"KRN",8994,68,2,1,1,0)
^^2^2^3000202^
"KRN",8994,68,2,1,1,1,0)
Date in internal fileman format or "*" for all dates in file #3.075 (ERROR
"KRN",8994,68,2,1,1,2,0)
LOG).
"KRN",8994,68,2,"B","PARAM1",1)

"KRN",8994,68,2,"PARAMSEQ",1,1)

"KRN",8994,68,3,0)
^^8^8^3000202^
"KRN",8994,68,3,1,0)
        ARRAY(0)=ExternalDate^Ien - for one match 
"KRN",8994,68,3,2,0)
 
"KRN",8994,68,3,3,0)
        or
"KRN",8994,68,3,4,0)
 
"KRN",8994,68,3,5,0)
        ARRAY(0)=ExternalDate^Ien  - for list of all dates
"KRN",8994,68,3,6,0)
        ARRAY(1)=ExternalDate^Ien
"KRN",8994,68,3,7,0)
        ARRAY(2)=ExternalDate^Ien
"KRN",8994,68,3,8,0)
        ARRAY(...)=ExternalDate^Ien
"KRN",8994,69,-1)
0^2
"KRN",8994,69,0)
KMPD ASSOC ROUTINE ADD/DEL^ASSCROU^KMPDU4^2^R
"KRN",8994,69,1,0)
^^2^2^3000405^
"KRN",8994,69,1,1,0)
Delete all entries in multiple field #11 (ASSOCIATED ROUTINE) in file
"KRN",8994,69,1,2,0)
#8972.1 (CM CODE EVALUATOR) and then add entries to multiple.
"KRN",8994,69,2,0)
^8994.02A^2^2
"KRN",8994,69,2,1,0)
PARAM1^1^60^1^1
"KRN",8994,69,2,1,1,0)
^^1^1^3000405^
"KRN",8994,69,2,1,1,1,0)
Ien for file #8972.1 (CM CODE EVALUATOR).
"KRN",8994,69,2,2,0)
PARAM2^2^60^1^2
"KRN",8994,69,2,2,1,0)
^^6^6^3000405^
"KRN",8994,69,2,2,1,1,0)
Array containing routine names to be entered into field #11 (ASSOCIATED
"KRN",8994,69,2,2,1,2,0)
ROUTINE).
"KRN",8994,69,2,2,1,3,0)
 
"KRN",8994,69,2,2,1,4,0)
        ARRAY(1)="ROUTINE1"
"KRN",8994,69,2,2,1,5,0)
        ARRAY(2)="ROUTINE2"
"KRN",8994,69,2,2,1,6,0)
        ARRAY(...)="..."
"KRN",8994,69,2,"B","PARAM1",1)

"KRN",8994,69,2,"B","PARAM2",2)

"KRN",8994,69,2,"PARAMSEQ",1,1)

"KRN",8994,69,2,"PARAMSEQ",2,2)

"KRN",8994,90,-1)
0^1
"KRN",8994,90,0)
KMPD APPL STATUS^STATUS^KMPDU6^4^R^0^^1^3
"KRN",8994,90,1,0)
^8994.01^4^4^3060315^^^
"KRN",8994,90,1,1,0)
Returns the status for cm applications: HL7
"KRN",8994,90,1,2,0)
                                        RUM
"KRN",8994,90,1,3,0)
                                        SAGG
"KRN",8994,90,1,4,0)
                                        TIMING
"KRN",8994,90,2,0)
^8994.02A^2^2
"KRN",8994,90,2,1,0)
APPLICATION^1^5^1^1
"KRN",8994,90,2,1,1,0)
^^4^4^3060228^
"KRN",8994,90,2,1,1,1,0)
"H" - hl7
"KRN",8994,90,2,1,1,2,0)
"R" - rum
"KRN",8994,90,2,1,1,3,0)
"S" - sagg
"KRN",8994,90,2,1,1,4,0)
"T" - timing
"KRN",8994,90,2,2,0)
GLOBAL^1^30^1^2
"KRN",8994,90,2,2,1,0)
^8994.021^1^1^3060228^^
"KRN",8994,90,2,2,1,1,0)
Global in which to store data.  Ex: ^TMP($J)
"KRN",8994,90,2,"B","APPLICATION",1)

"KRN",8994,90,2,"B","GLOBAL",2)

"KRN",8994,90,2,"PARAMSEQ",1,1)

"KRN",8994,90,2,"PARAMSEQ",2,2)

"KRN",8994,90,3,0)
^8994.03^1^1^3060228^^
"KRN",8994,90,3,1,0)
Global array containing application status text.
"KRN",8994,127,-1)
0^3
"KRN",8994,127,0)
KMPD DATA ELEMENTS^ELEMENTS^KMPDU6^2^R^0^^^3
"KRN",8994,127,1,0)
^^3^3^3060317^
"KRN",8994,127,1,1,0)
Return list of Data Elements in format: piece^name
"KRN",8994,127,1,2,0)
 
"KRN",8994,127,1,3,0)
example 5^M Commands
"KRN",8994,128,-1)
0^12
"KRN",8994,128,0)
KMPD NODES^NODES^KMPDU6^2^R^0^^^3
"KRN",8994,128,1,0)
^^1^1^3060424^
"KRN",8994,128,1,1,0)
Return the names of active nodes.
"KRN",8994,128,3,0)
^^3^3^3060424^
"KRN",8994,128,3,1,0)
KMPDRES(1)=NODE1
"KRN",8994,128,3,2,0)
KMPDRES(2)=NODE2
"KRN",8994,128,3,3,0)
...
"KRN",8994,129,-1)
0^18
"KRN",8994,129,0)
KMPD TMG MON DATA^TMGMON^KMPDU7^2^R^^^1
"KRN",8994,129,1,0)
^8994.01^1^1^3070817^^^
"KRN",8994,129,1,1,0)
Return Timing Monitor data.
"KRN",8994,129,2,0)
^8994.02A^1^1
"KRN",8994,129,2,1,0)
MONITOR START TIME^1^25^0^1
"KRN",8994,129,2,1,1,0)
^^3^3^3070817^
"KRN",8994,129,2,1,1,1,0)
Time the Timing Monitor started, in internal fileman format. This will be 
"KRN",8994,129,2,1,1,2,0)
used to determine the Running Time (how long the system monitor has been 
"KRN",8994,129,2,1,1,3,0)
running for this user. If not defined then $$NOW^XLFDT will be used.
"KRN",8994,129,2,"B","MONITOR START TIME",1)

"KRN",8994,129,2,"PARAMSEQ",1,1)

"KRN",8994,129,3,0)
^^2^2^3070817^
"KRN",8994,129,3,1,0)
KMPDY(0)=LastUpdated^RunningTime^UpdateMinutes^AlertSeconds^StartTime
"KRN",8994,129,3,2,0)
KMPDY(1...)=Hour^AverageDelta^TotalCount
"KRN",8994,130,-1)
0^21
"KRN",8994,130,0)
KMPD USER PARAMETERS^USRPARAM^KMPDU6^2^R^^^1
"KRN",8994,130,1,0)
^8994.01^1^1^3070926^^
"KRN",8994,130,1,1,0)
Set/Get gui option info.
"KRN",8994,130,2,0)
^8994.02A^3^3
"KRN",8994,130,2,1,0)
DUZ^1^35^1^1
"KRN",8994,130,2,1,1,0)
^^1^1^3070926^
"KRN",8994,130,2,1,1,1,0)
User's DUZ.
"KRN",8994,130,2,2,0)
TYPE^1^5^1^2
"KRN",8994,130,2,2,1,0)
^^2^2^3070926^
"KRN",8994,130,2,2,1,1,0)
Type of call: 1 - get option info
"KRN",8994,130,2,2,1,2,0)
              2 - set option info
"KRN",8994,130,2,3,0)
OPTION^2^256^1^3
"KRN",8994,130,2,"B","DUZ",1)

"KRN",8994,130,2,"B","OPTION",3)

"KRN",8994,130,2,"B","TYPE",2)

"KRN",8994,130,2,"PARAMSEQ",1,1)

"KRN",8994,130,2,"PARAMSEQ",2,2)

"KRN",8994,130,2,"PARAMSEQ",3,3)

"KRN",8994,130,3,0)
^8994.03^11^11^3070926^^
"KRN",8994,130,3,1,0)
If TYPE=1 - array containing the user's option settings in format:
"KRN",8994,130,3,2,0)
                Piece 1: option name
"KRN",8994,130,3,3,0)
                Piece 2: "" - no option setting - default to display
"KRN",8994,130,3,4,0)
                          0 - do not display option
"KRN",8994,130,3,5,0)
                          1 - display option
"KRN",8994,130,3,6,0)
 
"KRN",8994,130,3,7,0)
        ex: array(0)="Error List^1"
"KRN",8994,130,3,8,0)
            array(1)="Global List^0"
"KRN",8994,130,3,9,0)
 
"KRN",8994,130,3,10,0)
 
"KRN",8994,130,3,11,0)
   TYPE=2 - return <update complete>
"KRN",8994,131,-1)
0^22
"KRN",8994,131,0)
KMPD TMG DATES^TMGDATES^KMPDU7^2^R^^^1
"KRN",8994,131,1,0)
^8994.01^6^6^3070928^
"KRN",8994,131,1,1,0)
Return Timing dates in format:
"KRN",8994,131,1,2,0)
 
"KRN",8994,131,1,3,0)
        array(0)=FMStartDate^ExtStartDate^FMEndDate^ExtEndDate
"KRN",8994,131,1,4,0)
        array(1)=FMDate^ExtDate
"KRN",8994,131,1,5,0)
        array(2)=FMDate^ExtDate
"KRN",8994,131,1,6,0)
        array(...)=...
"KRN",8994,131,2,0)
^8994.02A^1^1
"KRN",8994,131,2,1,0)
SUBSCRIPT^1^60^1^1
"KRN",8994,131,2,1,1,0)
^^3^3^3070928^
"KRN",8994,131,2,1,1,1,0)
Timing subscript - free text
"KRN",8994,131,2,1,1,2,0)
 
"KRN",8994,131,2,1,1,3,0)
        example: "ORWCV"
"KRN",8994,131,2,"B","SUBSCRIPT",1)

"KRN",8994,131,2,"PARAMSEQ",1,1)

"KRN",8994,131,3,0)
^^6^6^3070928^
"KRN",8994,131,3,1,0)
Return Timing dates in format:
"KRN",8994,131,3,2,0)
 
"KRN",8994,131,3,3,0)
        array(0)=FMStartDate^ExtStartDate^FMEndDate^ExtEndDate
"KRN",8994,131,3,4,0)
        array(1)=FMDate^ExtDate
"KRN",8994,131,3,5,0)
        array(2)=FMDate^ExtDate
"KRN",8994,131,3,6,0)
        array(...)=...
"KRN",8994,132,-1)
0^23
"KRN",8994,132,0)
KMPD TMG REPORTS^TMGRPT^KMPDU7^2^R^^^1
"KRN",8994,132,1,0)
^8994.01^1^1^3090609^^^^
"KRN",8994,132,1,1,0)
Get Timing Reports data.
"KRN",8994,132,2,0)
^8994.02A^6^6
"KRN",8994,132,2,1,0)
DATES^2^245^1^3
"KRN",8994,132,2,1,1,0)
^8994.021^6^6^3071002^^^
"KRN",8994,132,2,1,1,1,0)
Array containing report dates in format:
"KRN",8994,132,2,1,1,2,0)
        array(0)=FMStartDate^FMEndDate^ExtStartDate^ExtEndDate
"KRN",8994,132,2,1,1,3,0)
        array(1)=NumberOfSessions
"KRN",8994,132,2,1,1,4,0)
 
"KRN",8994,132,2,1,1,5,0)
ex:     KMPDATE(0)="3070925^3071001^Sep 25, 2007^Oct 01, 2007"
"KRN",8994,132,2,1,1,6,0)
        KMPDATE(1)=7
"KRN",8994,132,2,2,0)
TIME FRAME^1^30^1^2
"KRN",8994,132,2,2,1,0)
^8994.021^2^2^3071002^^^
"KRN",8994,132,2,2,1,1,0)
Time Frame: Prime Time
"KRN",8994,132,2,2,1,2,0)
            Non-Prime Time
"KRN",8994,132,2,3,0)
REPORT NAME^1^120^1^1
"KRN",8994,132,2,3,1,0)
^8994.021^1^1^3071002^^
"KRN",8994,132,2,3,1,1,0)
Name of report (free text).
"KRN",8994,132,2,4,0)
TTL SEARCH^1^30^0^4
"KRN",8994,132,2,4,1,0)
^^5^5^3080702^
"KRN",8994,132,2,4,1,1,0)
Time-To-Load Search criteria:
"KRN",8994,132,2,4,1,2,0)
        1: User Name
"KRN",8994,132,2,4,1,3,0)
        2: Client Name
"KRN",8994,132,2,4,1,4,0)
        3: IP Address
"KRN",8994,132,2,4,1,5,0)
        4: All Items
"KRN",8994,132,2,5,0)
SECONDS^1^10^0^5
"KRN",8994,132,2,5,1,0)
^^1^1^3080702^
"KRN",8994,132,2,5,1,1,0)
Threshold seconds.
"KRN",8994,132,2,6,0)
HOUR^1^30^1^6
"KRN",8994,132,2,6,1,0)
^^1^1^3090609^
"KRN",8994,132,2,6,1,1,0)
Hour
"KRN",8994,132,2,"B","DATES",1)

"KRN",8994,132,2,"B","HOUR",6)

"KRN",8994,132,2,"B","REPORT NAME",3)

"KRN",8994,132,2,"B","SECONDS",5)

"KRN",8994,132,2,"B","TIME FRAME",2)

"KRN",8994,132,2,"B","TTL SEARCH",4)

"KRN",8994,132,2,"PARAMSEQ",1,3)

"KRN",8994,132,2,"PARAMSEQ",2,2)

"KRN",8994,132,2,"PARAMSEQ",3,1)

"KRN",8994,132,2,"PARAMSEQ",4,4)

"KRN",8994,132,2,"PARAMSEQ",5,5)

"KRN",8994,132,2,"PARAMSEQ",6,6)

"KRN",8994,132,3,0)
^8994.03^1^1^3090609^^
"KRN",8994,132,3,1,0)
Arraying containing report data in format:
"KRN",8994,134,-1)
0^25
"KRN",8994,134,0)
KMPD REPORT DEFINITION^REPDEF^KMPDU4^3^P^^^1
"KRN",8994,134,1,0)
^8994.01^1^1^3090618^^
"KRN",8994,134,1,1,0)
Get Report Definition from file #8973.3 (CP REPORT).
"KRN",8994,134,2,0)
^8994.02A^1^1
"KRN",8994,134,2,1,0)
REPORT^1^60^1^1
"KRN",8994,134,2,1,1,0)
^^2^2^3080701^
"KRN",8994,134,2,1,1,1,0)
Report Name for file #8973.3 (CP REPORT). Either field #.01 (NAME) or
"KRN",8994,134,2,1,1,2,0)
field #2.01 (DISPLAY NAME) can be used.
"KRN",8994,134,2,"B","REPORT",1)

"KRN",8994,134,2,"PARAMSEQ",1,1)

"KRN",8994,134,3,0)
^^1^1^3080701^
"KRN",8994,134,3,1,0)
Array containing free text Report DEFINITION.
"KRN",8994,135,-1)
0^26
"KRN",8994,135,0)
KMPD TMG STATUS^TMGSTAT^KMPDU7^2^R
"KRN",8994,135,1,0)
^8994.01^1^1^3090505^
"KRN",8994,135,1,1,0)
Timing Monitor status.
"KRN",8994,135,3,0)
^^2^2^3090505^
"KRN",8994,135,3,1,0)
KMPDY(0)= 0 - timing monitor is off
"KRN",8994,135,3,2,0)
          1 - timing monitor is on
"KRN",8994,136,-1)
0^27
"KRN",8994,136,0)
KMPD RUM START/STOP^RUMSS^KMPDU6^2^R
"KRN",8994,136,1,0)
^^1^1^3090527^
"KRN",8994,136,1,1,0)
Start/Stop RUM.
"KRN",8994,136,2,0)
^8994.02A^1^1
"KRN",8994,136,2,1,0)
START/STOP^1^12^1^1
"KRN",8994,136,2,1,1,0)
^^2^2^3090527^
"KRN",8994,136,2,1,1,1,0)
0 - stop
"KRN",8994,136,2,1,1,2,0)
1 - start
"KRN",8994,136,2,"B","START/STOP",1)

"KRN",8994,136,2,"PARAMSEQ",1,1)

"KRN",8994,136,3,0)
^^1^1^3090527^
"KRN",8994,136,3,1,0)
Message stating rum has started or stopped.
"KRN",8994,137,-1)
0^28
"KRN",8994,137,0)
KMPD TMG START/STOP^TMGSST^KMPDU7^2^R
"KRN",8994,137,1,0)
^8994.01^1^1^3090505^
"KRN",8994,137,1,1,0)
Start/Stop Timing Monitor.
"KRN",8994,137,2,0)
^8994.02A^1^1
"KRN",8994,137,2,1,0)
START/STOP^1^8^1^1
"KRN",8994,137,2,1,1,0)
^^2^2^3090505^
"KRN",8994,137,2,1,1,1,0)
0 - stop
"KRN",8994,137,2,1,1,2,0)
1 - start
"KRN",8994,137,2,"B","START/STOP",1)

"KRN",8994,137,2,"PARAMSEQ",1,1)

"KRN",8994,137,3,0)
^^2^2^3090505^
"KRN",8994,137,3,1,0)
KMPDY(0) = 0 - stop
"KRN",8994,137,3,2,0)
           1 - start
"KRN",8994,138,-1)
0^29
"KRN",8994,138,0)
KMPD RUM ENV^RUMENV^KMPDU6^2^R
"KRN",8994,138,1,0)
^^1^1^3090602^
"KRN",8994,138,1,1,0)
RUM environment.
"KRN",8994,138,3,0)
^^2^2^3090602^
"KRN",8994,138,3,1,0)
RUM error message in format: 
"KRN",8994,138,3,2,0)
        KMPDRES(0)=ErrorNumber^ErrorText
"KRN",8994,139,-1)
0^30
"KRN",8994,139,0)
KMPD SEARCH BY LIST^SBLIST^KMPDU7^4^R^^^1
"KRN",8994,139,1,0)
^8994.01^1^1^3090609^
"KRN",8994,139,1,1,0)
Search By list.
"KRN",8994,139,2,0)
^8994.02A^3^3
"KRN",8994,139,2,1,0)
LISTTYPE^1^5^1^1
"KRN",8994,139,2,1,1,0)
^^2^2^3090609^
"KRN",8994,139,2,1,1,1,0)
2 - client name
"KRN",8994,139,2,1,1,2,0)
3 - ip address
"KRN",8994,139,2,2,0)
SUBSCRIPT^1^30^1^2
"KRN",8994,139,2,2,1,0)
^^2^2^3090609^
"KRN",8994,139,2,2,1,1,0)
Subscript (free text)
"KRN",8994,139,2,2,1,2,0)
Ex: "ORWCV"
"KRN",8994,139,2,3,0)
DATAGLOBAL^1^30^1^3
"KRN",8994,139,2,3,1,0)
^^2^2^3090609^
"KRN",8994,139,2,3,1,1,0)
Global containing data.
"KRN",8994,139,2,3,1,2,0)
Ex: ^TMP($J)
"KRN",8994,139,2,"B","DATAGLOBAL",3)

"KRN",8994,139,2,"B","LISTTYPE",1)

"KRN",8994,139,2,"B","SUBSCRIPT",2)

"KRN",8994,139,2,"PARAMSEQ",1,1)

"KRN",8994,139,2,"PARAMSEQ",2,2)

"KRN",8994,139,2,"PARAMSEQ",3,3)

"KRN",8994,139,3,0)
^^4^4^3090609^
"KRN",8994,139,3,1,0)
Search by list in format:
"KRN",8994,139,3,2,0)
        KMPDY(0)=ClientName
"KRN",8994,139,3,3,0)
        KMPDY(1)=ClientName
"KRN",8994,139,3,4,0)
        ...
"KRN",8994,140,-1)
0^20
"KRN",8994,140,0)
KMPD ERROR LOG LIST^ERRLIST^KMPDU3^4^R^^^1
"KRN",8994,140,1,0)
^8994.01^1^1^3091104^^^^
"KRN",8994,140,1,1,0)
Return a list of errors for a certain date from file #3.075 (ERROR LOG).
"KRN",8994,140,2,0)
^8994.02A^3^3
"KRN",8994,140,2,1,0)
PARAM1^1^60^1^1
"KRN",8994,140,2,1,1,0)
^8994.021^2^2^3091104^^
"KRN",8994,140,2,1,1,1,0)
Internal entry for file #3.075 (ERROR LOG).  This value will be 
"KRN",8994,140,2,1,1,2,0)
$P($H,",").
"KRN",8994,140,2,2,0)
SCREEN^1^254^1^2
"KRN",8994,140,2,2,1,0)
^^1^1^3091104^
"KRN",8994,140,2,2,1,1,0)
Screen for ERROR TYPE.
"KRN",8994,140,2,3,0)
DATAGLOBAL^1^60^1^3
"KRN",8994,140,2,3,1,0)
^8994.021^1^1^3091104^^
"KRN",8994,140,2,3,1,1,0)
Return global for data (^TMP($J).
"KRN",8994,140,2,"B","DATAGLOBAL",2)

"KRN",8994,140,2,"B","DATAGLOBAL",3)

"KRN",8994,140,2,"B","IEN",1)

"KRN",8994,140,2,"B","PARAM1",1)

"KRN",8994,140,2,"B","SCREEN",2)

"KRN",8994,140,2,"PARAMSEQ",1,1)

"KRN",8994,140,2,"PARAMSEQ",2,2)

"KRN",8994,140,2,"PARAMSEQ",3,3)

"KRN",8994,140,3,0)
^8994.03^1^1^3091104^^
"KRN",8994,140,3,1,0)
Array in format: Array(0)=ErrorNumber^ErrorText^TimeOfError
"KRN",8994,145,-1)
1^24
"KRN",8994,145,0)
KMPD REPORT LIST
"MBREQ")
0
"ORD",2,3.6)
3.6;2;1;;BUL^XPDTA1;;BULE1^XPDIA1;;;BULDEL^XPDIA1
"ORD",2,3.6,0)
BULLETIN
"ORD",8,.403)
.403;8;;;EDEOUT^DIFROMSO(.403,DA,"",XPDA);FPRE^DIFROMSI(.403,"",XPDA);EPRE^DIFROMSI(.403,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.403,DA,"",XPDA);DEL^DIFROMSK(.403,"",%)
"ORD",8,.403,0)
FORM
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",17,409.61)
409.61;17;1;;;;LME1^XPDIA1;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",481,-1)
1^1
"PKG",481,0)
CAPACITY MANAGEMENT TOOLS^KMPD^Capacity Management Tools
"PKG",481,20,0)
^9.402P^^
"PKG",481,22,0)
^9.49I^1^1
"PKG",481,22,1,0)
3.0^3121026^3110922^577
"PKG",481,"VERSION")
3.0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
57
"RTN","KMPDBD01")
0^1^B1585127^B1585127
"RTN","KMPDBD01",1,0)
KMPDBD01 ;OAK/RAK - CM Tools Background Driver ;2/17/04  08:55
"RTN","KMPDBD01",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDBD01",3,0)
 ;
"RTN","KMPDBD01",4,0)
EN ;-entry point for background driver
"RTN","KMPDBD01",5,0)
 ;
"RTN","KMPDBD01",6,0)
 S:'$G(DT) DT=$$DT^XLFDT
"RTN","KMPDBD01",7,0)
 ;
"RTN","KMPDBD01",8,0)
 N DAILY,STR
"RTN","KMPDBD01",9,0)
 ;
"RTN","KMPDBD01",10,0)
 ; update cpu data in file #8973 (CP PARAMETERS)
"RTN","KMPDBD01",11,0)
 D CPUSET^KMPDUTL6(1)
"RTN","KMPDBD01",12,0)
 ;
"RTN","KMPDBD01",13,0)
 ; hl7
"RTN","KMPDBD01",14,0)
 ;compile and store daily stats in file 8973.1 (CM HL7 DATA)
"RTN","KMPDBD01",15,0)
 S STR=$$NOW^XLFDT,DAILY=$$FMADD^XLFDT(DT,-1)
"RTN","KMPDBD01",16,0)
 D DAILY^KMPDHU02(DAILY,DAILY)
"RTN","KMPDBD01",17,0)
 ; store start, stop and delta times for daily background job
"RTN","KMPDBD01",18,0)
 D STRSTP^KMPDUTL2(3,1,1,STR)
"RTN","KMPDBD01",19,0)
 ;
"RTN","KMPDBD01",20,0)
 ; timing
"RTN","KMPDBD01",21,0)
 ; compile and store timing stats in file 8973.2 (CP TIMING)
"RTN","KMPDBD01",22,0)
 S STR=$$NOW^XLFDT
"RTN","KMPDBD01",23,0)
 D DAILY^KMPDTU02
"RTN","KMPDBD01",24,0)
 ; store start, stop and delta times for daily background job
"RTN","KMPDBD01",25,0)
 D STRSTP^KMPDUTL2(4,1,1,STR)
"RTN","KMPDBD01",26,0)
 ;
"RTN","KMPDBD01",27,0)
 ; transmit 'yesterdays' daily stats to national database
"RTN","KMPDBD01",28,0)
 S STR=$$NOW^XLFDT,DAILY=$$FMADD^XLFDT(DT,-1)
"RTN","KMPDBD01",29,0)
 D DAILY^KMPDTU01(DAILY)
"RTN","KMPDBD01",30,0)
 ; store start, stop and delta times for daily background job
"RTN","KMPDBD01",31,0)
 D STRSTP^KMPDUTL2(4,2,1,STR)
"RTN","KMPDBD01",32,0)
 ;
"RTN","KMPDBD01",33,0)
 ;
"RTN","KMPDBD01",34,0)
 ; if sunday
"RTN","KMPDBD01",35,0)
 D:'$$DOW^XLFDT(DT,1) SUNDAY
"RTN","KMPDBD01",36,0)
 ;
"RTN","KMPDBD01",37,0)
 Q
"RTN","KMPDBD01",38,0)
 ;
"RTN","KMPDBD01",39,0)
SUNDAY ;-- weekly
"RTN","KMPDBD01",40,0)
 ;
"RTN","KMPDBD01",41,0)
 N STR
"RTN","KMPDBD01",42,0)
 ;
"RTN","KMPDBD01",43,0)
 S:'$G(DT) DT=$$DT^XLFDT
"RTN","KMPDBD01",44,0)
 ;
"RTN","KMPDBD01",45,0)
 ; hl7 - compress & transmit hl7 data to cm national
"RTN","KMPDBD01",46,0)
 ; database, and purge file #8973.1 (CM HL7 DATA) of old data
"RTN","KMPDBD01",47,0)
 S STR=$$NOW^XLFDT
"RTN","KMPDBD01",48,0)
 D WEEKLY^KMPDHU01(DT,1)
"RTN","KMPDBD01",49,0)
 ; store start, stop and delta times for weekly background job
"RTN","KMPDBD01",50,0)
 D STRSTP^KMPDUTL2(3,2,1,STR)
"RTN","KMPDBD01",51,0)
 ;
"RTN","KMPDBD01",52,0)
 ; purge entries from file 8973.2 (CP TIMING)
"RTN","KMPDBD01",53,0)
 S STR=$$NOW^XLFDT
"RTN","KMPDBD01",54,0)
 D PURGE1^KMPDUTL3
"RTN","KMPDBD01",55,0)
 D STRSTP^KMPDUTL2(4,2,2,STR)
"RTN","KMPDBD01",56,0)
 ;
"RTN","KMPDBD01",57,0)
 Q
"RTN","KMPDECH")
0^2^B1037928^B1037928
"RTN","KMPDECH",1,0)
KMPDECH ; OAK/RAK - CM Tools Echo ;4/6/06  08:40
"RTN","KMPDECH",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDECH",3,0)
 ;
"RTN","KMPDECH",4,0)
ECHO ;-entry point
"RTN","KMPDECH",5,0)
 ;
"RTN","KMPDECH",6,0)
 N DATA,I,ID,SITE,SITENM,TEXT,TRANSTO,XMDUZ,XMSUB,XMTEXT,XMY
"RTN","KMPDECH",7,0)
 ;
"RTN","KMPDECH",8,0)
 ; get id from subject
"RTN","KMPDECH",9,0)
 S ID=$P($G(XQSUB),"~",2)
"RTN","KMPDECH",10,0)
 ; scheduled downtime start and stop times
"RTN","KMPDECH",11,0)
 S DATA=$P($G(^KMPD(8973,1,5)),U,1,2)
"RTN","KMPDECH",12,0)
 ; site info
"RTN","KMPDECH",13,0)
 S SITE=$$SITE^VASITE Q:SITE=""
"RTN","KMPDECH",14,0)
 S SITENM=$P(SITE,U,2)
"RTN","KMPDECH",15,0)
 S XMDUZ="ECHO BACK FROM "_SITENM
"RTN","KMPDECH",16,0)
 S XMSUB="CP ECHO~"_ID_"~"_$P(SITE,U,2)_" ("_$P(SITE,U,3)_")~"
"RTN","KMPDECH",17,0)
 D TRANSTO^KMPDUTL7(1,5,.TRANSTO) Q:'$D(TRANSTO)
"RTN","KMPDECH",18,0)
 S I=""
"RTN","KMPDECH",19,0)
 F  S I=$O(TRANSTO(I)) Q:I=""  S XMY(I)=""
"RTN","KMPDECH",20,0)
 S TEXT(1)="START="_$P(DATA,U)
"RTN","KMPDECH",21,0)
 S TEXT(2)="STOP="_$P(DATA,U,2)
"RTN","KMPDECH",22,0)
 S XMTEXT="TEXT("
"RTN","KMPDECH",23,0)
 D ^XMD
"RTN","KMPDECH",24,0)
 Q
"RTN","KMPDENV")
0^3^B706424^B706424
"RTN","KMPDENV",1,0)
KMPDENV ;OAK/RAK - CM Tools Environmnet Check ;4/21/04
"RTN","KMPDENV",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDENV",3,0)
 ;
"RTN","KMPDENV",4,0)
EN ;-entry point
"RTN","KMPDENV",5,0)
 ; if version 2.0
"RTN","KMPDENV",6,0)
 I $P($$VERSION^KMPDUTL,U)="2.0" D  Q
"RTN","KMPDENV",7,0)
 .D MES^XPDUTL("     Version 2.0 detected. Environment check successful!")
"RTN","KMPDENV",8,0)
 ; if not version 2.0
"RTN","KMPDENV",9,0)
 S XPDQUIT=1
"RTN","KMPDENV",10,0)
 D MES^XPDUTL("     Must have Version 2.0 installed.  Install can not continue!")
"RTN","KMPDENV",11,0)
 Q
"RTN","KMPDHU01")
0^4^B37420269^B37420269
"RTN","KMPDHU01",1,0)
KMPDHU01 ;OAK/RAK - CM Tools HL7 Utility ;6/21/05  10:12
"RTN","KMPDHU01",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDHU01",3,0)
 ;
"RTN","KMPDHU01",4,0)
WEEKLY(KMPDT,KMPDPRGE) ;-- compress daily stats to weekly
"RTN","KMPDHU01",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU01",6,0)
 ; KMPDT.... Compression date in internal fileman formt.  This date
"RTN","KMPDHU01",7,0)
 ;           must be a Sunday.  It represents the date from which the
"RTN","KMPDHU01",8,0)
 ;           previous weeks data should be compressed. 
"RTN","KMPDHU01",9,0)
 ;           Example: if KMPDT = 2981011  then compression will begin
"RTN","KMPDHU01",10,0)
 ;                    on 2981010 (KMPDT-1)
"RTN","KMPDHU01",11,0)
 ; KMPDPRGE. 0 - do not purge data from file #8973.1
"RTN","KMPDHU01",12,0)
 ;           1 - purge data from file #8973.1
"RTN","KMPDHU01",13,0)
 ;
"RTN","KMPDHU01",14,0)
 ; Every Sunday compress the daily stats in file #8973.1 into weekly
"RTN","KMPDHU01",15,0)
 ; and upload the data to the CM RUM National Database
"RTN","KMPDHU01",16,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU01",17,0)
 ;
"RTN","KMPDHU01",18,0)
 Q:'$G(KMPDT)
"RTN","KMPDHU01",19,0)
 S KMPDPRGE=+$G(KMPDPRGE)
"RTN","KMPDHU01",20,0)
 ;
"RTN","KMPDHU01",21,0)
 N DATA,DATE,DDLDT,DELDATE,EN,END,HOURS,I,IEN,J,NM,PT,SITE,STR,START,SYNC
"RTN","KMPDHU01",22,0)
 ;
"RTN","KMPDHU01",23,0)
 ; quit if not sunday.
"RTN","KMPDHU01",24,0)
 Q:$$DOW^XLFDT(KMPDT,1)
"RTN","KMPDHU01",25,0)
 ; storage  processed
"RTN","KMPDHU01",26,0)
 K ^TMP($J),^TMP("KMPDHU01",$J)
"RTN","KMPDHU01",27,0)
 ; site info.
"RTN","KMPDHU01",28,0)
 S SITE=$$SITE^VASITE Q:SITE=""
"RTN","KMPDHU01",29,0)
 S DATE=KMPDT
"RTN","KMPDHU01",30,0)
 S (START,END)="",STR=$$NOW^XLFDT
"RTN","KMPDHU01",31,0)
 ; days to keep - this is represented by 'weeks to keep' in file #8973 
"RTN","KMPDHU01",32,0)
 ; so must be converted to days
"RTN","KMPDHU01",33,0)
 S DDLDT=$P($G(^KMPD(8973,1,3)),U,11)*7
"RTN","KMPDHU01",34,0)
 S:'DDLDT DDLDT=14
"RTN","KMPDHU01",35,0)
 ; Date to begin deletion.
"RTN","KMPDHU01",36,0)
 S DELDATE=$$FMADD^XLFDT(KMPDT,-DDLDT)
"RTN","KMPDHU01",37,0)
 ;
"RTN","KMPDHU01",38,0)
 W:'$D(ZTQUEUED) !,"Compressing data into weekly format..."
"RTN","KMPDHU01",39,0)
 ; Reverse $order to get previous dates.
"RTN","KMPDHU01",40,0)
 F  S DATE=$O(^KMPD(8973.1,"B",DATE),-1) Q:'DATE  D 
"RTN","KMPDHU01",41,0)
 .; If DATE is saturday set START and END dates and kill TMPARRY.
"RTN","KMPDHU01",42,0)
 .I $$DOW^XLFDT(DATE,1)=6 D 
"RTN","KMPDHU01",43,0)
 ..S END=DATE,START=$$FMADD^XLFDT(DATE,-6)
"RTN","KMPDHU01",44,0)
 ..K ^TMP($J)
"RTN","KMPDHU01",45,0)
 .Q:'START
"RTN","KMPDHU01",46,0)
 .S SYNC=0
"RTN","KMPDHU01",47,0)
 .F  S SYNC=$O(^KMPD(8973.1,"ASYNC",DATE,SYNC)) Q:'SYNC  S IEN=0 D 
"RTN","KMPDHU01",48,0)
 ..F  S IEN=$O(^KMPD(8973.1,"ASYNC",DATE,SYNC,IEN)) Q:'IEN  D 
"RTN","KMPDHU01",49,0)
 ...Q:'$D(^KMPD(8973.1,IEN,0))
"RTN","KMPDHU01",50,0)
 ...; data nodes into DATA() array.
"RTN","KMPDHU01",51,0)
 ...S DATA(0)=^KMPD(8973.1,IEN,0) F I=1,1.1,1.2,2,2.1,2.2,5.1:.1:5.5,5.7,5.8,5.9,99,99.2,99.3,99.5 S DATA(I)=$G(^(I))
"RTN","KMPDHU01",52,0)
 ...; quit if data has already been sent to national database
"RTN","KMPDHU01",53,0)
 ...Q:$P(DATA(0),U,2)
"RTN","KMPDHU01",54,0)
 ...; quit if no namespace or protocol
"RTN","KMPDHU01",55,0)
 ...S NM=$P(DATA(0),U,3),PT=$P(DATA(0),U,5) Q:NM=""!(PT="")
"RTN","KMPDHU01",56,0)
 ...; change first piece to start date (this is for national database)
"RTN","KMPDHU01",57,0)
 ...S $P(DATA(0),U)=START
"RTN","KMPDHU01",58,0)
 ...; second piece not applicable to national database
"RTN","KMPDHU01",59,0)
 ...S $P(DATA(0),U,2)=""
"RTN","KMPDHU01",60,0)
 ...D @$S(SYNC=2:"ASYNC(IEN,NM,PT,.DATA)",1:"SYNC(IEN,NM,PT,.DATA)")
"RTN","KMPDHU01",61,0)
 ...; add to processed array.
"RTN","KMPDHU01",62,0)
 ...S ^TMP("KMPDHU01",$J,IEN)=""
"RTN","KMPDHU01",63,0)
 .;
"RTN","KMPDHU01",64,0)
 .; Back to DATE level.
"RTN","KMPDHU01",65,0)
 .; If START then transmit data.
"RTN","KMPDHU01",66,0)
 .I DATE=START I $D(^TMP($J)) D TRANSMIT K ^TMP($J)
"RTN","KMPDHU01",67,0)
 ;
"RTN","KMPDHU01",68,0)
 D:$D(^TMP($J)) TRANSMIT
"RTN","KMPDHU01",69,0)
 K ^TMP($J)
"RTN","KMPDHU01",70,0)
 ;
"RTN","KMPDHU01",71,0)
 ; update field .02 (SENT TO CM NATIONAL DATABASE) to 'YES' for all
"RTN","KMPDHU01",72,0)
 ; processed entries.
"RTN","KMPDHU01",73,0)
 W:'$D(ZTQUEUED) !!,"Updating records to reflect transmission..."
"RTN","KMPDHU01",74,0)
 S IEN=0
"RTN","KMPDHU01",75,0)
 F  S IEN=$O(^TMP("KMPDHU01",$J,IEN)) Q:'IEN  D 
"RTN","KMPDHU01",76,0)
 .K FDA,ERROR W:'$D(ZTQUEUED) "."
"RTN","KMPDHU01",77,0)
 .S FDA($J,8973.1,IEN_",",.02)=1
"RTN","KMPDHU01",78,0)
 .D FILE^DIE("","FDA($J)","ERROR")
"RTN","KMPDHU01",79,0)
 ;
"RTN","KMPDHU01",80,0)
 K ^TMP("KMPDHU01",$J)
"RTN","KMPDHU01",81,0)
 ;
"RTN","KMPDHU01",82,0)
 S STR=$$NOW^XLFDT
"RTN","KMPDHU01",83,0)
 ; leave two complete weeks of data in file #8973.1
"RTN","KMPDHU01",84,0)
 D:KMPDPRGE PURGE^KMPDUTL3(DELDATE)
"RTN","KMPDHU01",85,0)
 D STRSTP^KMPDUTL2(3,2,2,STR)
"RTN","KMPDHU01",86,0)
 ;
"RTN","KMPDHU01",87,0)
 W:'$D(ZTQUEUED) !!,"Finished!"
"RTN","KMPDHU01",88,0)
 ;
"RTN","KMPDHU01",89,0)
 Q
"RTN","KMPDHU01",90,0)
 ;
"RTN","KMPDHU01",91,0)
ASYNC(IEN,NM,PR,DATA) ; compile asynchronous stats
"RTN","KMPDHU01",92,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU01",93,0)
 ; IEN..... Ien for file #8973.1 (CM HL7 DATA)
"RTN","KMPDHU01",94,0)
 ; NM...... Namespace (free text)
"RTN","KMPDHU01",95,0)
 ; PR...... Protocol (free text)
"RTN","KMPDHU01",96,0)
 ; DATA().. Array containing node data for file #8973.1 (CM HL7 DATA)
"RTN","KMPDHU01",97,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU01",98,0)
 Q:'$G(IEN)
"RTN","KMPDHU01",99,0)
 Q:$G(NM)=""
"RTN","KMPDHU01",100,0)
 Q:$G(PR)=""
"RTN","KMPDHU01",101,0)
 Q:'$D(DATA)
"RTN","KMPDHU01",102,0)
 N CS,I,J
"RTN","KMPDHU01",103,0)
 ; quit if no contact site
"RTN","KMPDHU01",104,0)
 S CS=$P(DATA(99.2),U,12) Q:CS=""
"RTN","KMPDHU01",105,0)
 S ^TMP($J,START,NM,PR,CS,0)=DATA(0)
"RTN","KMPDHU01",106,0)
 ; node 99.1 is for national database (end date^facility name)
"RTN","KMPDHU01",107,0)
 S DATA(99.1)=END_"^"_$P(SITE,U,2)_"^"_$P(SITE,U,3)
"RTN","KMPDHU01",108,0)
 ; pieces 6 through 13 of node 99.2 contain text
"RTN","KMPDHU01",109,0)
 F I=6:1:13 S $P(^TMP($J,START,NM,PR,CS,99.2),U,I)=$P(DATA(99.2),U,I)
"RTN","KMPDHU01",110,0)
 W:'$D(ZTQUEUED) "."
"RTN","KMPDHU01",111,0)
 F I=0:0 S I=$O(DATA(I)) Q:'I  D 
"RTN","KMPDHU01",112,0)
 .; 99.1 data not to be totalled
"RTN","KMPDHU01",113,0)
 .I I=99.1 F J=1:1:3 S $P(^TMP($J,START,NM,PR,CS,I),U,J)=$P(DATA(I),U,J)
"RTN","KMPDHU01",114,0)
 .; Add data to get weekly totals.
"RTN","KMPDHU01",115,0)
 .E  F J=1:1:$S($E(I)=5:24,I=99:6,I=99.2:3,I=99.3:9,99.5:3,1:9) D 
"RTN","KMPDHU01",116,0)
 ..S $P(^TMP($J,START,NM,PR,CS,I),U,J)=$P($G(^TMP($J,START,NM,PR,CS,I)),U,J)+$P(DATA(I),U,J)
"RTN","KMPDHU01",117,0)
 ;
"RTN","KMPDHU01",118,0)
 Q
"RTN","KMPDHU01",119,0)
 ;
"RTN","KMPDHU01",120,0)
SYNC(IEN,NM,PR,DATA) ; compile asynchronous stats
"RTN","KMPDHU01",121,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU01",122,0)
 ; IEN..... Ien for file #8973.1 (CM HL7 DATA)
"RTN","KMPDHU01",123,0)
 ; NM...... Namespace (free text)
"RTN","KMPDHU01",124,0)
 ; PR...... Protocol (free text)
"RTN","KMPDHU01",125,0)
 ; DATA().. Array containing node data for file #8973.1 (CM HL7 DATA)
"RTN","KMPDHU01",126,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU01",127,0)
 Q:'$G(IEN)
"RTN","KMPDHU01",128,0)
 Q:$G(NM)=""
"RTN","KMPDHU01",129,0)
 Q:$G(PR)=""
"RTN","KMPDHU01",130,0)
 Q:'$D(DATA)
"RTN","KMPDHU01",131,0)
 N I,J
"RTN","KMPDHU01",132,0)
 S ^TMP($J,START,NM,PR,0)=DATA(0)
"RTN","KMPDHU01",133,0)
 ; node 99.1 is for national database (end date^facility name)
"RTN","KMPDHU01",134,0)
 S DATA(99.1)=END_"^"_$P(SITE,U,2)_"^"_$P(SITE,U,3)
"RTN","KMPDHU01",135,0)
 ; pieces 6 through 13 of node 99.2 contain text
"RTN","KMPDHU01",136,0)
 F I=6:1:13 S $P(^TMP($J,START,NM,PR,99.2),U,I)=$P(DATA(99.2),U,I)
"RTN","KMPDHU01",137,0)
 W:'$D(ZTQUEUED) "."
"RTN","KMPDHU01",138,0)
 F I=0:0 S I=$O(DATA(I)) Q:'I  D 
"RTN","KMPDHU01",139,0)
 .; 99.1 data not to be totalled
"RTN","KMPDHU01",140,0)
 .I I=99.1 F J=1:1:3 S $P(^TMP($J,START,NM,PR,I),U,J)=$P(DATA(I),U,J)
"RTN","KMPDHU01",141,0)
 .; Add data to get weekly totals.
"RTN","KMPDHU01",142,0)
 .E  F J=1:1:$S(I=99:6,1:9) D 
"RTN","KMPDHU01",143,0)
 ..S $P(^TMP($J,START,NM,PR,I),U,J)=$P($G(^TMP($J,START,NM,PR,I)),U,J)+$P(DATA(I),U,J)
"RTN","KMPDHU01",144,0)
 Q
"RTN","KMPDHU01",145,0)
 ;
"RTN","KMPDHU01",146,0)
TRANSMIT ;-- format TMPARRY data, put into e-mail and send to cm.
"RTN","KMPDHU01",147,0)
 ;
"RTN","KMPDHU01",148,0)
 Q:'$D(^TMP($J))
"RTN","KMPDHU01",149,0)
 ;
"RTN","KMPDHU01",150,0)
 N C,CPU,HRSDAYS,I,IEN,LN,N,P,S,TL,TRANSTO,XMSUB,X,XMTEXT,XMY,XMZ,Y,Z
"RTN","KMPDHU01",151,0)
 ;
"RTN","KMPDHU01",152,0)
 K ^TMP("KMPDHU01-2",$J)
"RTN","KMPDHU01",153,0)
 ;
"RTN","KMPDHU01",154,0)
 S LN=0
"RTN","KMPDHU01",155,0)
 ; version and patch info
"RTN","KMPDHU01",156,0)
 S LN=LN+1,^TMP("KMPDHU01-2",$J,LN)="VERSION="_$$VERSION^KMPDUTL
"RTN","KMPDHU01",157,0)
 ; system information
"RTN","KMPDHU01",158,0)
 S LN=LN+1,^TMP("KMPDHU01-2",$J,LN)="SYSINFO="_$$SYSINFO^KMPDUTL1()
"RTN","KMPDHU01",159,0)
 ; send cpu data to national database
"RTN","KMPDHU01",160,0)
 D CPU^KMPDUTL5(.CPU) I $D(CPU) S I="" F  S I=$O(CPU(I)) Q:I=""  D 
"RTN","KMPDHU01",161,0)
 .S LN=LN+1,^TMP("KMPDHU01-2",$J,LN)="CPU="_I_U_CPU(I)
"RTN","KMPDHU01",162,0)
 ;
"RTN","KMPDHU01",163,0)
 W:'$D(ZTQUEUED) !!,"Formatting ",$$FMTE^XLFDT($G(START))," data for mail delivery..."
"RTN","KMPDHU01",164,0)
 ; reformat so that data is in ^TMP("KMPR UPLOAD",$J,LN)= format.
"RTN","KMPDHU01",165,0)
 S IEN=0,S=""
"RTN","KMPDHU01",166,0)
 F  S S=$O(^TMP($J,S)) Q:S=""  S N="" W "." D 
"RTN","KMPDHU01",167,0)
 .F  S N=$O(^TMP($J,S,N)) Q:N=""  S P="" D 
"RTN","KMPDHU01",168,0)
 ..F  S P=$O(^TMP($J,S,N,P)) Q:P=""  S I="",IEN=IEN+1 D 
"RTN","KMPDHU01",169,0)
 ...; synchronous data
"RTN","KMPDHU01",170,0)
 ...F  S I=$O(^TMP($J,S,N,P,I)) Q:(+I)'=I  S LN=LN+1 D 
"RTN","KMPDHU01",171,0)
 ....S ^TMP("KMPDHU01-2",$J,LN)=IEN_","_I_")="_^TMP($J,S,N,P,I)
"RTN","KMPDHU01",172,0)
 ...; asynchronous data
"RTN","KMPDHU01",173,0)
 ...S C="-"
"RTN","KMPDHU01",174,0)
 ...F  S C=$O(^TMP($J,S,N,P,C)) Q:C=""  S I="",IEN=IEN+1 D 
"RTN","KMPDHU01",175,0)
 ....F  S I=$O(^TMP($J,S,N,P,C,I)) Q:(+I)'=I  S LN=LN+1 D
"RTN","KMPDHU01",176,0)
 .....S ^TMP("KMPDHU01-2",$J,LN)=IEN_","_I_")="_^TMP($J,S,N,P,C,I)
"RTN","KMPDHU01",177,0)
 ;
"RTN","KMPDHU01",178,0)
 ; quit if no data to transmit.
"RTN","KMPDHU01",179,0)
 Q:'$D(^TMP("KMPDHU01-2",$J))
"RTN","KMPDHU01",180,0)
 S TL=$G(^KMPD(8973,"TEST LAB"))
"RTN","KMPDHU01",181,0)
 S TL=$S(TL:"TESTLAB-",1:"")
"RTN","KMPDHU01",182,0)
 ; send packman message.
"RTN","KMPDHU01",183,0)
 S XMTEXT="^TMP(""KMPDHU01-2"","_$J_","
"RTN","KMPDHU01",184,0)
 S XMSUB="CM HL7 DATA~"_TL_$P(SITE,U,2)_" ("_$P(SITE,U,3)_")~"_$$FMTE^XLFDT(START)
"RTN","KMPDHU01",185,0)
 D TRANSTO^KMPDUTL7(1,3,.TRANSTO)
"RTN","KMPDHU01",186,0)
 Q:'$D(TRANSTO)  S I=""
"RTN","KMPDHU01",187,0)
 F  S I=$O(TRANSTO(I)) Q:I=""  S XMY(I)=""
"RTN","KMPDHU01",188,0)
 D ^XMD
"RTN","KMPDHU01",189,0)
 W:'$D(ZTQUEUED) !,"Message #",$G(XMZ)," sent..."
"RTN","KMPDHU01",190,0)
 K ^TMP("KMPDHU01-2",$J)
"RTN","KMPDHU01",191,0)
 ;
"RTN","KMPDHU01",192,0)
 Q
"RTN","KMPDHU02")
0^5^B55231717^B55231717
"RTN","KMPDHU02",1,0)
KMPDHU02 ;OAK/RAK - CM Tools Compile & File HL7 Daily Stats ;2/17/04  08:58
"RTN","KMPDHU02",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDHU02",3,0)
 ;
"RTN","KMPDHU02",4,0)
DAILY(KMPDST,KMPDEN) ;-entry point
"RTN","KMPDHU02",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU02",6,0)
 ; KMPDST... Start date in internal fileman format.
"RTN","KMPDHU02",7,0)
 ; KMPDEN... End date in internal fileman format.
"RTN","KMPDHU02",8,0)
 ;
"RTN","KMPDHU02",9,0)
 ; This API gathers HL7 data and stores it in file 8973.1 (CM HL7 DATA)
"RTN","KMPDHU02",10,0)
 ;
"RTN","KMPDHU02",11,0)
 ; Variables used:
"RTN","KMPDHU02",12,0)
 ; GBL...... Global where data is stored - for use with indirection
"RTN","KMPDHU02",13,0)
 ; GBL1..... globas where compiled data is stored before filing - 
"RTN","KMPDHU02",14,0)
 ;           used with indirection
"RTN","KMPDHU02",15,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU02",16,0)
 ;
"RTN","KMPDHU02",17,0)
 Q:'$G(KMPDST)
"RTN","KMPDHU02",18,0)
 Q:'$G(KMPDEN)
"RTN","KMPDHU02",19,0)
 ; make sure end date has hours
"RTN","KMPDHU02",20,0)
 S:'$P(KMPDEN,".",2) $P(KMPDEN,".",2)="99"
"RTN","KMPDHU02",21,0)
 S:'$G(DT) DT=$$DT^XLFDT
"RTN","KMPDHU02",22,0)
 ;
"RTN","KMPDHU02",23,0)
 N ERROR,GBL,GBL1,STR,X
"RTN","KMPDHU02",24,0)
 ;
"RTN","KMPDHU02",25,0)
 ; get data from hl7 api
"RTN","KMPDHU02",26,0)
 W:'$D(ZTQUEUED) !,"Gathering HL7 data..."
"RTN","KMPDHU02",27,0)
 ; global with 'raw' hl7 api data
"RTN","KMPDHU02",28,0)
 S GBL=$NA(^TMP("KMPDH",$J)) K @GBL
"RTN","KMPDHU02",29,0)
 ; set up global to get asynchronous data
"RTN","KMPDHU02",30,0)
 K ^TMP($J)
"RTN","KMPDHU02",31,0)
 S ^TMP($J,"HLUCM")="DEBUG GLOBAL"
"RTN","KMPDHU02",32,0)
 S X=$$CM2^HLUCM(KMPDST,KMPDEN,1,1,"KMPDH","EITHER",.ERROR)
"RTN","KMPDHU02",33,0)
 I 'X!($D(ERROR))!('$D(^TMP("KMPDH",$J))) D  Q
"RTN","KMPDHU02",34,0)
 .W:'$D(ZTQUEUED) " no data to report"
"RTN","KMPDHU02",35,0)
 ;
"RTN","KMPDHU02",36,0)
 ; global for storing compiled data before filing
"RTN","KMPDHU02",37,0)
 S GBL1=$NA(^TMP("KMPDH-1",$J)) K @GBL1
"RTN","KMPDHU02",38,0)
 ;
"RTN","KMPDHU02",39,0)
 W:'$D(ZTQUEUED) !,"Compiling synchronous HL7 data..."
"RTN","KMPDHU02",40,0)
 D SYNC
"RTN","KMPDHU02",41,0)
 ;
"RTN","KMPDHU02",42,0)
 W:'$D(ZTQUEUED) !,"Compiling asynchronous HL7 data..."
"RTN","KMPDHU02",43,0)
 D ASYNC
"RTN","KMPDHU02",44,0)
 ;
"RTN","KMPDHU02",45,0)
 K @GBL,@GBL1,^TMP($J),^TMP("KMPDHERRTIME",$J)
"RTN","KMPDHU02",46,0)
 W:'$D(ZTQUEUED) !,"Finished!"
"RTN","KMPDHU02",47,0)
 ;
"RTN","KMPDHU02",48,0)
 Q
"RTN","KMPDHU02",49,0)
 ;
"RTN","KMPDHU02",50,0)
 ;
"RTN","KMPDHU02",51,0)
ASYNC ;- asynchronous data
"RTN","KMPDHU02",52,0)
 Q:$G(GBL)=""
"RTN","KMPDHU02",53,0)
 Q:$G(GBL1)=""
"RTN","KMPDHU02",54,0)
 ;
"RTN","KMPDHU02",55,0)
 N COUNT,DATA,DATA1,DATA2,HOUR,I,IEN,IEN1,IEN2,J,LOCAL,MSG,NM,NODE
"RTN","KMPDHU02",56,0)
 N OF,PIECE,PR,PTNP,SD,STDT,TIME1,TIME2,UNIT
"RTN","KMPDHU02",57,0)
 ;
"RTN","KMPDHU02",58,0)
 ; local site name
"RTN","KMPDHU02",59,0)
 S LOCAL=$P($$SITE^VASITE,U,2) Q:LOCAL=""
"RTN","KMPDHU02",60,0)
 S IEN=0
"RTN","KMPDHU02",61,0)
 F  S IEN=$O(^TMP($J,"HLUCMSTORE","U",IEN)) Q:'IEN  S DATA=^(IEN) D 
"RTN","KMPDHU02",62,0)
 .; data = Protocol~Ien^Namespace
"RTN","KMPDHU02",63,0)
 .; message type
"RTN","KMPDHU02",64,0)
 .S MSG=$P(DATA,U,6)
"RTN","KMPDHU02",65,0)
 .; quit if not 'complete' message
"RTN","KMPDHU02",66,0)
 .Q:'$$ASYNCHK(MSG)
"RTN","KMPDHU02",67,0)
 .; protocol - check protocol fist, then inferred protocol
"RTN","KMPDHU02",68,0)
 .S PR=$S($P(DATA,U,7)]"":$P(DATA,U,7),$P(DATA,U,8)]"":$P(DATA,U,8),1:"") Q:PR=""
"RTN","KMPDHU02",69,0)
 .; namespace - check namespace first, then inferred namespace
"RTN","KMPDHU02",70,0)
 .S NM=$S($P(DATA,U,9)]"":$P(DATA,U,9),$P(DATA,U,10)]"":$P(DATA,U,10),1:"") Q:NM=""
"RTN","KMPDHU02",71,0)
 .; other facility
"RTN","KMPDHU02",72,0)
 .S OF=$P(DATA,U,11) S:OF["~" OF=$P(OF,"~",2) Q:OF=""
"RTN","KMPDHU02",73,0)
 .; quit if other facility is LOCAL
"RTN","KMPDHU02",74,0)
 .Q:OF[LOCAL
"RTN","KMPDHU02",75,0)
 .; start date/time
"RTN","KMPDHU02",76,0)
 .S STDT=$P(DATA,U,4) Q:'STDT
"RTN","KMPDHU02",77,0)
 .; date without time
"RTN","KMPDHU02",78,0)
 .S SD=$P(STDT,".") Q:'SD
"RTN","KMPDHU02",79,0)
 .S $P(@GBL1@(SD,PR,NM,OF,99.2),U,11)=$P($P(DATA,U,11),"~")
"RTN","KMPDHU02",80,0)
 .S $P(@GBL1@(SD,PR,NM,OF,99.2),U,12)=$P($P(DATA,U,11),"~",2)
"RTN","KMPDHU02",81,0)
 .S $P(@GBL1@(SD,PR,NM,OF,99.2),U,13)=$P($P(DATA,U,11),"~",3)
"RTN","KMPDHU02",82,0)
 .;
"RTN","KMPDHU02",83,0)
 .S (COUNT,HOUR,IEN1)=0 K UNIT
"RTN","KMPDHU02",84,0)
 .F  S IEN1=$O(^TMP($J,"HLUCMSTORE","U",IEN,IEN1)) Q:'IEN1  D 
"RTN","KMPDHU02",85,0)
 ..; data1 = piece 1 - Characters
"RTN","KMPDHU02",86,0)
 ..;         piece 2 - Messages
"RTN","KMPDHU02",87,0)
 ..;         piece 3 - Seconds
"RTN","KMPDHU02",88,0)
 ..;         piece 4 - Begining Time
"RTN","KMPDHU02",89,0)
 ..;         piece 5 - End Time
"RTN","KMPDHU02",90,0)
 ..;         piece 6 - Type: msg, ca, aa or ca
"RTN","KMPDHU02",91,0)
 ..;         piece 7 - Protocol~Ien
"RTN","KMPDHU02",92,0)
 ..;         piece 8 - Namespace
"RTN","KMPDHU02",93,0)
 ..S DATA1=$G(^TMP($J,"HLUCMSTORE","U",IEN,IEN1,"CCC")) Q:DATA1=""
"RTN","KMPDHU02",94,0)
 ..S COUNT=COUNT+1,UNIT(COUNT)=DATA1
"RTN","KMPDHU02",95,0)
 .;
"RTN","KMPDHU02",96,0)
 .; back to IEN level
"RTN","KMPDHU02",97,0)
 .; quit if unit() array is not complete
"RTN","KMPDHU02",98,0)
 .Q:'$$UNITS(MSG)
"RTN","KMPDHU02",99,0)
 .; hour of transaction
"RTN","KMPDHU02",100,0)
 .S HOUR=+$E($P(STDT,".",2),1,2),HOUR=HOUR+1
"RTN","KMPDHU02",101,0)
 .; prime time or non-prime time
"RTN","KMPDHU02",102,0)
 .S PTNP=$$PTNP^KMPDHU03(STDT) Q:'PTNP
"RTN","KMPDHU02",103,0)
 .; node: 5 - prime time
"RTN","KMPDHU02",104,0)
 .;       6 - non-prime time
"RTN","KMPDHU02",105,0)
 .S NODE=$S(PTNP=2:6,1:5)
"RTN","KMPDHU02",106,0)
 .;
"RTN","KMPDHU02",107,0)
 .; update msg unit count - prime time or non-prime time
"RTN","KMPDHU02",108,0)
 .S $P(@GBL1@(SD,PR,NM,OF,99.5),U,PTNP)=$P($G(@GBL1@(SD,PR,NM,OF,99.5)),U,PTNP)+1
"RTN","KMPDHU02",109,0)
 .;update msg unit count - both prime time & non-prime time
"RTN","KMPDHU02",110,0)
 .S $P(@GBL1@(SD,PR,NM,OF,99.5),U,3)=$P($G(@GBL1@(SD,PR,NM,OF,99.5)),U,3)+1
"RTN","KMPDHU02",111,0)
 .; totals
"RTN","KMPDHU02",112,0)
 .F J=0:0 S J=$O(UNIT(J)) Q:'J  F I=1:1:3 D 
"RTN","KMPDHU02",113,0)
 ..; total
"RTN","KMPDHU02",114,0)
 ..S $P(@GBL1@(SD,PR,NM,OF,99.2),U,I)=$P($G(@GBL1@(SD,PR,NM,OF,99.2)),U,I)+$P(UNIT(J),U,I)
"RTN","KMPDHU02",115,0)
 ..S $P(@GBL1@(SD,PR,NM,OF,99.3),U,(I+6))=$P($G(@GBL1@(SD,PR,NM,OF,99.3)),U,(I+6))+$P(UNIT(J),U,I)
"RTN","KMPDHU02",116,0)
 ..; prime time or non-prime time
"RTN","KMPDHU02",117,0)
 ..; ^ piece to set
"RTN","KMPDHU02",118,0)
 ..S PIECE=I+$S(PTNP=2:3,1:0)
"RTN","KMPDHU02",119,0)
 ..S $P(@GBL1@(SD,PR,NM,OF,99.3),U,PIECE)=$P($G(@GBL1@(SD,PR,NM,OF,99.3)),U,PIECE)+$P(UNIT(J),U,I)
"RTN","KMPDHU02",120,0)
 .;
"RTN","KMPDHU02",121,0)
 .; msg to ca - originating message to commit ack
"RTN","KMPDHU02",122,0)
 .; ^ piece: 1 - characters
"RTN","KMPDHU02",123,0)
 .;          2 - count
"RTN","KMPDHU02",124,0)
 .;          3 - seconds
"RTN","KMPDHU02",125,0)
 .F I=1:1:3 S $P(@GBL1@(SD,PR,NM,OF,NODE+(I*.1)),U,HOUR)=$P($G(@GBL1@(SD,PR,NM,OF,NODE+(I*.1))),U,HOUR)+($P(UNIT(1),U,I)+$P(UNIT(2),U,I))
"RTN","KMPDHU02",126,0)
 .;
"RTN","KMPDHU02",127,0)
 .; processing time (ca to aa) - commit ack ending time to application
"RTN","KMPDHU02",128,0)
 .;                              ack starting time
"RTN","KMPDHU02",129,0)
 .S TIME1=+$P(UNIT(3),U,4),TIME2=+$P(UNIT(2),U,5)
"RTN","KMPDHU02",130,0)
 .S $P(@GBL1@(SD,PR,NM,OF,(NODE+(.4))),U,HOUR)=$$TIMEADD^KMPDU($P($G(@GBL1@(SD,PR,NM,OF,(NODE+(.4)))),U,HOUR)+$$FMDIFF^XLFDT(TIME2,(+TIME1),3))
"RTN","KMPDHU02",131,0)
 .; processing time (ca to aa) - count
"RTN","KMPDHU02",132,0)
 .S $P(@GBL1@(SD,PR,NM,OF,(NODE+(.5))),U,HOUR)=$P($G(@GBL1@(SD,PR,NM,OF,(NODE+(.5)))),U,HOUR)+1
"RTN","KMPDHU02",133,0)
 .;
"RTN","KMPDHU02",134,0)
 .; aa to ca - application ack to commit ack
"RTN","KMPDHU02",135,0)
 .; ^ piece: 1 - characters
"RTN","KMPDHU02",136,0)
 .;          2 - count
"RTN","KMPDHU02",137,0)
 .;          3 - seconds
"RTN","KMPDHU02",138,0)
 .F I=1:1:3 S $P(@GBL1@(SD,PR,NM,OF,NODE+(I+6*.1)),U,HOUR)=$P($G(@GBL1@(SD,PR,NM,OF,NODE+(I+6*.1))),U,HOUR)+($P(UNIT(3),U,I)+$P(UNIT(4),U,I))
"RTN","KMPDHU02",139,0)
 ;
"RTN","KMPDHU02",140,0)
 D:$D(@GBL1) FILE^KMPDHU03(2)
"RTN","KMPDHU02",141,0)
 ;
"RTN","KMPDHU02",142,0)
 Q
"RTN","KMPDHU02",143,0)
 ;
"RTN","KMPDHU02",144,0)
ASYNCHK(KMPDMSG) ;-- extrinsic function - check for 'complete' message
"RTN","KMPDHU02",145,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU02",146,0)
 ; KMPDMGS... message ack designations
"RTN","KMPDHU02",147,0)
 ;
"RTN","KMPDHU02",148,0)
 ; Return: 0 - not a complete message
"RTN","KMPDHU02",149,0)
 ;         1 - complete message
"RTN","KMPDHU02",150,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU02",151,0)
 Q:$G(KMPDMSG)="" 0
"RTN","KMPDHU02",152,0)
 Q:MSG="MSG~CA~AA~CA" 1
"RTN","KMPDHU02",153,0)
 Q:MSG="MSG~CA~AR~CA" 1
"RTN","KMPDHU02",154,0)
 Q:MSG="MSG~AA" 1
"RTN","KMPDHU02",155,0)
 Q 0
"RTN","KMPDHU02",156,0)
 ;
"RTN","KMPDHU02",157,0)
UNITS(MSG) ;-- extrinsic function
"RTN","KMPDHU02",158,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU02",159,0)
 ; MSG.... type of message: 'msg~aa', 'msg~ca~aa~ca', etc.
"RTN","KMPDHU02",160,0)
 ;
"RTN","KMPDHU02",161,0)
 ; Return: 0 - unit() array not complete
"RTN","KMPDHU02",162,0)
 ;         1 - unit() array is complete
"RTN","KMPDHU02",163,0)
 ;
"RTN","KMPDHU02",164,0)
 ; unit() array must be segmented into the following format:
"RTN","KMPDHU02",165,0)
 ;   unit(1) = msg
"RTN","KMPDHU02",166,0)
 ;   unit(2) = ca
"RTN","KMPDHU02",167,0)
 ;   unit(3) = aa
"RTN","KMPDHU02",168,0)
 ;   unit(4) = ca
"RTN","KMPDHU02",169,0)
 ; this data is then used to calculate characters, messages and seconds
"RTN","KMPDHU02",170,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU02",171,0)
 Q:$G(MSG)="" 0
"RTN","KMPDHU02",172,0)
 ; all messages must have unit(2)
"RTN","KMPDHU02",173,0)
 Q:'$D(UNIT(2)) 0
"RTN","KMPDHU02",174,0)
 ; "msg~ca~aa~ca" & "msg~ca~ar~ca" messages must have unit(3) & unit(4)
"RTN","KMPDHU02",175,0)
 I MSG="MSG~CA~AA~CA"!(MSG="MSG~CA~AR~CA") Q:'$D(UNIT(3)) 0
"RTN","KMPDHU02",176,0)
 I MSG="MSG~CA~AA~CA"!(MSG="MSG~CA~AR~CA") Q:'$D(UNIT(4)) 0
"RTN","KMPDHU02",177,0)
 ; 'msg~aaa' messages contain only 2 unit() entries
"RTN","KMPDHU02",178,0)
 ; create 4 unit() entries for processing
"RTN","KMPDHU02",179,0)
 I MSG="MSG~AA" D 
"RTN","KMPDHU02",180,0)
 .S (UNIT(3),UNIT(4))=UNIT(2),UNIT(2)=UNIT(1)
"RTN","KMPDHU02",181,0)
 .S $P(UNIT(1),U,1,3)="0^0^0"
"RTN","KMPDHU02",182,0)
 .S $P(UNIT(4),U,1,3)="0^0^0"
"RTN","KMPDHU02",183,0)
 ; calculate seconds
"RTN","KMPDHU02",184,0)
 ; msg to ca
"RTN","KMPDHU02",185,0)
 S $P(UNIT(2),U,3)=$$FMDIFF^XLFDT($P(UNIT(2),U,5),$P(UNIT(1),U,4),2)
"RTN","KMPDHU02",186,0)
 S:$P(UNIT(2),U,3)<0 $P(UNIT(2),U,3)=0
"RTN","KMPDHU02",187,0)
 ; ca to aa
"RTN","KMPDHU02",188,0)
 S $P(UNIT(3),U,3)=$$FMDIFF^XLFDT($P(UNIT(3),U,5),$P(UNIT(2),U,5),2)
"RTN","KMPDHU02",189,0)
 S:$P(UNIT(3),U,3)<0 $P(UNIT(3),U,3)=0
"RTN","KMPDHU02",190,0)
 ; aa to ca
"RTN","KMPDHU02",191,0)
 S $P(UNIT(4),U,3)=$$FMDIFF^XLFDT($P(UNIT(4),U,5),$P(UNIT(3),U,5),2)
"RTN","KMPDHU02",192,0)
 S:$P(UNIT(4),U,3)<0 $P(UNIT(4),U,3)=0
"RTN","KMPDHU02",193,0)
 ;
"RTN","KMPDHU02",194,0)
 Q 1
"RTN","KMPDHU02",195,0)
 ;
"RTN","KMPDHU02",196,0)
SYNC ;- synchronous data
"RTN","KMPDHU02",197,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU02",198,0)
 ; SS1...... subscript 1 - identifies data
"RTN","KMPDHU02",199,0)
 ;            HR   - hourly
"RTN","KMPDHU02",200,0)
 ;            NMSP - namespace
"RTN","KMPDHU02",201,0)
 ;            PROT - protocol
"RTN","KMPDHU02",202,0)
 ; SS2...... subscript 2 - identifies data sorted within SS1
"RTN","KMPDHU02",203,0)
 ;            IO   - incoming/outgoing messages
"RTN","KMPDHU02",204,0)
 ;            LR   - local/remote messages
"RTN","KMPDHU02",205,0)
 ;            PR   - protocol
"RTN","KMPDHU02",206,0)
 ;            TM   - type of transmission
"RTN","KMPDHU02",207,0)
 ;            
"RTN","KMPDHU02",208,0)
 ; SS3...... subcript 3 - which identifier for SS2 is being sorted
"RTN","KMPDHU02",209,0)
 ;            IO   - I - incoming
"RTN","KMPDHU02",210,0)
 ;                   O - outgoing
"RTN","KMPDHU02",211,0)
 ;                   U - unknown
"RTN","KMPDHU02",212,0)
 ;            LR   - L - local
"RTN","KMPDHU02",213,0)
 ;                   R - remote
"RTN","KMPDHU02",214,0)
 ;                   U - unknown
"RTN","KMPDHU02",215,0)
 ;            PR   - P - placeholder for consistent subscripting
"RTN","KMPDHU02",216,0)
 ;            TM   - M - mailman
"RTN","KMPDHU02",217,0)
 ;                   T - tcp
"RTN","KMPDHU02",218,0)
 ;                   U -unknown
"RTN","KMPDHU02",219,0)
 ; SS4...... subscript 4 - according to SS1
"RTN","KMPDHU02",220,0)
 ;            HR   - date.time
"RTN","KMPDHU02",221,0)
 ;            NMSP - namespace
"RTN","KMPDHU02",222,0)
 ;            PROT - protocal
"RTN","KMPDHU02",223,0)
 ; SS5...... subcript 5 - according to SS1
"RTN","KMPDHU02",224,0)
 ;            HR   - namespace
"RTN","KMPDHU02",225,0)
 ;            NMSP - date.tim
"RTN","KMPDHU02",226,0)
 ;            PROT - namespace
"RTN","KMPDHU02",227,0)
 ; SS6...... subscript 6 - according to SS1
"RTN","KMPDHU02",228,0)
 ;            HR   - protocol
"RTN","KMPDHU02",229,0)
 ;            NMSP - protocol
"RTN","KMPDHU02",230,0)
 ;            PROT - date.time
"RTN","KMPDHU02",231,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU02",232,0)
 Q:$G(GBL)=""
"RTN","KMPDHU02",233,0)
 Q:$G(GBL1)=""
"RTN","KMPDHU02",234,0)
 N SS1,SS2,SS3,SS4,SS5,SS6
"RTN","KMPDHU02",235,0)
 S SS1=""
"RTN","KMPDHU02",236,0)
 F  S SS1=$O(@GBL@(SS1)) Q:SS1=""  I SS1'="RFAC" S SS2="" D 
"RTN","KMPDHU02",237,0)
 .F  S SS2=$O(@GBL@(SS1,SS2)) Q:SS2=""  S SS3="" D 
"RTN","KMPDHU02",238,0)
 ..F  S SS3=$O(@GBL@(SS1,SS2,SS3)) Q:SS3=""  S SS4="" D 
"RTN","KMPDHU02",239,0)
 ...F  S SS4=$O(@GBL@(SS1,SS2,SS3,SS4)) Q:SS4=""  S SS5="" D 
"RTN","KMPDHU02",240,0)
 ....Q:SS1="PROT"&(SS4="ZZZ")
"RTN","KMPDHU02",241,0)
 ....F  S SS5=$O(@GBL@(SS1,SS2,SS3,SS4,SS5)) Q:SS5=""  S SS6="" D 
"RTN","KMPDHU02",242,0)
 .....; if SS1="NMSP" or SS1="PROT" quit if SS4 and SS5 (protocol/
"RTN","KMPDHU02",243,0)
 .....;                             namespace pair) = ZZZ
"RTN","KMPDHU02",244,0)
 .....I SS1="NMSP"!(SS1="PROT") Q:SS4="ZZZ"&(SS5="ZZZ")
"RTN","KMPDHU02",245,0)
 .....F  S SS6=$O(@GBL@(SS1,SS2,SS3,SS4,SS5,SS6)) Q:SS6=""  D 
"RTN","KMPDHU02",246,0)
 ......Q:SS1="HR"&(SS6="ZZZ")
"RTN","KMPDHU02",247,0)
 ......Q:SS1="NMSP"&(SS6="ZZZ")
"RTN","KMPDHU02",248,0)
 ......; compile data into daily stats for file #8973.1 (CM HL7 DATA)
"RTN","KMPDHU02",249,0)
 ......D COMPILE^KMPDHU03
"RTN","KMPDHU02",250,0)
 ;
"RTN","KMPDHU02",251,0)
 D:$D(@GBL1) FILE^KMPDHU03(1)
"RTN","KMPDHU02",252,0)
 ;
"RTN","KMPDHU02",253,0)
 K @GBL1
"RTN","KMPDHU02",254,0)
 ;
"RTN","KMPDHU02",255,0)
 Q
"RTN","KMPDHU03")
0^6^B28509534^B28509534
"RTN","KMPDHU03",1,0)
KMPDHU03 ;OAK/RAK - CM Tools Compile & File HL7 Daily Stats ;2/17/04  08:59
"RTN","KMPDHU03",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDHU03",3,0)
 ;
"RTN","KMPDHU03",4,0)
COMPILE ;-compile synchronous data into GLB1
"RTN","KMPDHU03",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU03",6,0)
 ; DATA.... data from GBL array
"RTN","KMPDHU03",7,0)
 ; DATE.... date.hr
"RTN","KMPDHU03",8,0)
 ; ND...... node where data will be filed in file #8973.1
"RTN","KMPDHU03",9,0)
 ; LC...... up-arrow (^) piece location of data to be filed
"RTN","KMPDHU03",10,0)
 ; NM....... namespace
"RTN","KMPDHU03",11,0)
 ; PT...... protocol name~ien
"RTN","KMPDHU03",12,0)
 ; PTNP.... prime time - 1
"RTN","KMPDHU03",13,0)
 ;          non-prime time 2
"RTN","KMPDHU03",14,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU03",15,0)
 ;
"RTN","KMPDHU03",16,0)
 N DATA,DATE,I,ND,LC,NM,PT,PTNP
"RTN","KMPDHU03",17,0)
 ;
"RTN","KMPDHU03",18,0)
 Q:'$D(@GBL@(SS1,SS2,SS3,SS4,SS5,SS6))  S DATA=$G(^(SS6)) Q:DATA=""
"RTN","KMPDHU03",19,0)
 ; namespace
"RTN","KMPDHU03",20,0)
 S NM=$S(SS1="HR"!(SS1="PROT"):SS5,SS1="NMSP":SS4,1:"") Q:NM=""
"RTN","KMPDHU03",21,0)
 ; protocol
"RTN","KMPDHU03",22,0)
 S PT=$S(SS1="HR"!(SS1="NMSP"):SS6,SS1="PROT":SS4,1:"") Q:PT=""
"RTN","KMPDHU03",23,0)
 ; prime time - 1, non-prime time - 2
"RTN","KMPDHU03",24,0)
 S DATE=$S(SS1="HR":SS4,SS1="NMSP":SS5,SS1="PROT":SS6,1:"") Q:'DATE
"RTN","KMPDHU03",25,0)
 ; DATE is set by using the 'next highest' hour
"RTN","KMPDHU03",26,0)
 ; 3030509.0811 is returned as 3030509.09
"RTN","KMPDHU03",27,0)
 ; use $$fmadd to go back to previous hour
"RTN","KMPDHU03",28,0)
 S PTNP=$$PTNP^KMPDHU03($$FMADD^XLFDT(DATE,,-1)) Q:'PTNP
"RTN","KMPDHU03",29,0)
 ;
"RTN","KMPDHU03",30,0)
 I SS1="HR" D 
"RTN","KMPDHU03",31,0)
 .S ND=$S(SS2="TM":1,1:""),ND=ND+(PTNP-1)
"RTN","KMPDHU03",32,0)
 .S LC=$S(SS3="T":0,SS3="M":3,SS3="U":6,1:"")
"RTN","KMPDHU03",33,0)
 I SS1="NMSP" D 
"RTN","KMPDHU03",34,0)
 .S ND=$S(SS2="IO":1.1,SS2="LR":1.2,1:""),ND=ND+(PTNP-1)
"RTN","KMPDHU03",35,0)
 .S LC=$S(SS3="I"!(SS3="L"):0,SS3="O"!(SS3="R"):3,SS3="U":6,1:"") Q:LC=""
"RTN","KMPDHU03",36,0)
 I SS1="PROT" D 
"RTN","KMPDHU03",37,0)
 .S ND=99,LC=$S(PTNP=1:0,PTNP=2:3,1:"")
"RTN","KMPDHU03",38,0)
 ;
"RTN","KMPDHU03",39,0)
 ; quit if not node (ND) or location (LC)
"RTN","KMPDHU03",40,0)
 Q:'$P(DATE,".")!('ND)!(LC="")
"RTN","KMPDHU03",41,0)
 ;
"RTN","KMPDHU03",42,0)
 F I=1,3 D 
"RTN","KMPDHU03",43,0)
 .S $P(@GBL1@($P(DATE,"."),PT,NM,ND),U,(I+LC))=$P($G(@GBL1@($P(DATE,"."),PT,NM,ND)),U,(I+LC))+$P(DATA,U,I)
"RTN","KMPDHU03",44,0)
 S $P(@GBL1@($P(DATE,"."),PT,NM,ND),U,(2+LC))=$P($G(@GBL1@($P(DATE,"."),PT,NM,ND)),U,(2+LC))+$P(DATA,U,4)
"RTN","KMPDHU03",45,0)
 ;
"RTN","KMPDHU03",46,0)
 Q
"RTN","KMPDHU03",47,0)
 ;
"RTN","KMPDHU03",48,0)
FILE(KMPDSYNC) ;-file data into file 8973.1 (CM HL7 DATA)
"RTN","KMPDHU03",49,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU03",50,0)
 ; KMPDSYNC... 1 - synchronous
"RTN","KMPDHU03",51,0)
 ;             2 - asynchronous
"RTN","KMPDHU03",52,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU03",53,0)
 Q:'$G(KMPDSYNC)
"RTN","KMPDHU03",54,0)
 Q:KMPDSYNC<1!(KMPDSYNC>2)
"RTN","KMPDHU03",55,0)
 Q:'$D(@GBL1)
"RTN","KMPDHU03",56,0)
 ;
"RTN","KMPDHU03",57,0)
 W:'$D(ZTQUEUED) !,"Filing ",$S(KMPDSYNC=2:"asynchronous",1:"synchronous")," HL7 stats into file 8973.1 (CM HL7 DATA)..."
"RTN","KMPDHU03",58,0)
 ;
"RTN","KMPDHU03",59,0)
 ; file data
"RTN","KMPDHU03",60,0)
 D @("FILE"_KMPDSYNC) Q:'$D(FDA)
"RTN","KMPDHU03",61,0)
 ;
"RTN","KMPDHU03",62,0)
 Q
"RTN","KMPDHU03",63,0)
 ;
"RTN","KMPDHU03",64,0)
FILE1 ;-- file synchronous data
"RTN","KMPDHU03",65,0)
 ;
"RTN","KMPDHU03",66,0)
 Q:'$D(@GBL1)
"RTN","KMPDHU03",67,0)
 ;
"RTN","KMPDHU03",68,0)
 N DATE,ERROR,FDA,I,IEN,INDEX,NM,PT,PT1,ZIEN
"RTN","KMPDHU03",69,0)
 ;
"RTN","KMPDHU03",70,0)
 S DATE=0
"RTN","KMPDHU03",71,0)
 F  S DATE=$O(@GBL1@(DATE)) Q:'DATE  S PT="" D 
"RTN","KMPDHU03",72,0)
 .F  S PT=$O(@GBL1@(DATE,PT)) Q:PT=""  S NM="" D 
"RTN","KMPDHU03",73,0)
 ..; remove ien (name~123) from protocol
"RTN","KMPDHU03",74,0)
 ..S PT1=$P(PT,"~") Q:PT1=""
"RTN","KMPDHU03",75,0)
 ..F  S NM=$O(@GBL1@(DATE,PT,NM)) Q:NM=""  S ND=0 D 
"RTN","KMPDHU03",76,0)
 ...K ERROR,FDA,IEN,ZIEN
"RTN","KMPDHU03",77,0)
 ...; determine if data has already been filed (if ien)
"RTN","KMPDHU03",78,0)
 ...S IEN=$O(^KMPD(8973.1,"APTDTNM",PT1,DATE,NM,0))
"RTN","KMPDHU03",79,0)
 ...;     if filed set IEN="ien," - edit entry
"RTN","KMPDHU03",80,0)
 ...; if not filed set IEN="+1," - add entry
"RTN","KMPDHU03",81,0)
 ...S IEN=$S(IEN:IEN_",",1:"+1,")
"RTN","KMPDHU03",82,0)
 ...S FDA($J,8973.1,IEN,.01)=DATE
"RTN","KMPDHU03",83,0)
 ...S FDA($J,8973.1,IEN,.03)=NM
"RTN","KMPDHU03",84,0)
 ...S FDA($J,8973.1,IEN,.05)=PT1
"RTN","KMPDHU03",85,0)
 ...S FDA($J,8973.1,IEN,.06)=1
"RTN","KMPDHU03",86,0)
 ...F  S ND=$O(@GBL1@(DATE,PT,NM,ND)) Q:'ND  D 
"RTN","KMPDHU03",87,0)
 ....S DATA=@GBL1@(DATE,PT,NM,ND) Q:DATA=""
"RTN","KMPDHU03",88,0)
 ....S INDEX=$S(ND=99:6,ND=99.2:13,ND=99.5:3,$E(ND)=5:24,1:9)
"RTN","KMPDHU03",89,0)
 ....F I=1:1:INDEX S:$P(DATA,U,I)'="" FDA($J,8973.1,IEN,ND+(I*.001))=$P(DATA,U,I)
"RTN","KMPDHU03",90,0)
 ...; file data
"RTN","KMPDHU03",91,0)
 ...D UPDATE^DIE("","FDA($J)","ZIEN","ERROR")
"RTN","KMPDHU03",92,0)
 ...; if error
"RTN","KMPDHU03",93,0)
 ...I $D(ERROR) D 
"RTN","KMPDHU03",94,0)
 ....D MSG^DIALOG("HA",.KMPDERR,60,5,"ERROR")
"RTN","KMPDHU03",95,0)
 ....D EMAIL^KMPDUTL2("CM TOOLS - HL7 DAILY Error","KMPDERR(")
"RTN","KMPDHU03",96,0)
 ;
"RTN","KMPDHU03",97,0)
 Q
"RTN","KMPDHU03",98,0)
 ;
"RTN","KMPDHU03",99,0)
FILE2 ;-- file asynchronous data
"RTN","KMPDHU03",100,0)
 ;
"RTN","KMPDHU03",101,0)
 Q:'$D(@GBL1)
"RTN","KMPDHU03",102,0)
 ;
"RTN","KMPDHU03",103,0)
 N CF,DATE,ERROR,I,IEN,INDEX1,INDEX2,KMPDERR,NM,PT,PT1,ZIEN
"RTN","KMPDHU03",104,0)
 ;
"RTN","KMPDHU03",105,0)
 K ^TMP($J,"KMPDHU03-F2")
"RTN","KMPDHU03",106,0)
 S DATE=0
"RTN","KMPDHU03",107,0)
 F  S DATE=$O(@GBL1@(DATE)) Q:'DATE  S PT="" D 
"RTN","KMPDHU03",108,0)
 .F  S PT=$O(@GBL1@(DATE,PT)) Q:PT=""  S NM="" D 
"RTN","KMPDHU03",109,0)
 ..; remove ien (name~123) from protocol
"RTN","KMPDHU03",110,0)
 ..S PT1=$P(PT,"~") Q:PT1=""
"RTN","KMPDHU03",111,0)
 ..F  S NM=$O(@GBL1@(DATE,PT,NM)) Q:NM=""  S CF="" D 
"RTN","KMPDHU03",112,0)
 ...F  S CF=$O(@GBL1@(DATE,PT,NM,CF)) Q:CF=""  S ND=0 D 
"RTN","KMPDHU03",113,0)
 ....K ERROR,IEN,ZIEN,^TMP($J,"KMPDHU03-F2"),^TMP($J,"KMPDHU03-ERROR")
"RTN","KMPDHU03",114,0)
 ....; determine if data has already been filed (if ien)
"RTN","KMPDHU03",115,0)
 ....S IEN=$O(^KMPD(8973.1,"ACSDTPRNM",CF,DATE,PT1,NM,0))
"RTN","KMPDHU03",116,0)
 ....;     if filed set IEN="ien," - edit entry
"RTN","KMPDHU03",117,0)
 ....; if not filed set IEN="+1," - add entry
"RTN","KMPDHU03",118,0)
 ....S IEN=$S(IEN:IEN_",",1:"+1,")
"RTN","KMPDHU03",119,0)
 ....; date
"RTN","KMPDHU03",120,0)
 ....S ^TMP($J,"KMPDHU03-F2",8973.1,IEN,.01)=DATE
"RTN","KMPDHU03",121,0)
 ....; namespace
"RTN","KMPDHU03",122,0)
 ....S ^TMP($J,"KMPDHU03-F2",8973.1,IEN,.03)=NM
"RTN","KMPDHU03",123,0)
 ....; protocol
"RTN","KMPDHU03",124,0)
 ....S ^TMP($J,"KMPDHU03-F2",8973.1,IEN,.05)=PT1
"RTN","KMPDHU03",125,0)
 ....; 2 = asynchronous
"RTN","KMPDHU03",126,0)
 ....S ^TMP($J,"KMPDHU03-F2",8973.1,IEN,.06)=2
"RTN","KMPDHU03",127,0)
 ....F  S ND=$O(@GBL1@(DATE,PT,NM,CF,ND)) Q:'ND  D 
"RTN","KMPDHU03",128,0)
 .....S DATA=@GBL1@(DATE,PT,NM,CF,ND) Q:DATA=""
"RTN","KMPDHU03",129,0)
 .....; starting index
"RTN","KMPDHU03",130,0)
 .....S INDEX1=1 ;$S($E(ND)=5:9,1:1)
"RTN","KMPDHU03",131,0)
 .....; ending index
"RTN","KMPDHU03",132,0)
 .....S INDEX2=$S(ND=99:6,ND=99.2:13,ND=99.3:9,ND=99.5:3,$E(ND)=5:24,$E(ND)=6:24,1:0)
"RTN","KMPDHU03",133,0)
 .....Q:'INDEX2
"RTN","KMPDHU03",134,0)
 .....F I=INDEX1:1:INDEX2 S:$P(DATA,U,I)'="" ^TMP($J,"KMPDHU03-F2",8973.1,IEN,ND+(I*.001))=$P(DATA,U,I)
"RTN","KMPDHU03",135,0)
 ....;file data
"RTN","KMPDHU03",136,0)
 ....D UPDATE^DIE("",$NA(^TMP($J,"KMPDHU03-F2")),"ZIEN","ERROR")
"RTN","KMPDHU03",137,0)
 ....; if error
"RTN","KMPDHU03",138,0)
 ....I $D(ERROR) D 
"RTN","KMPDHU03",139,0)
 .....D MSG^DIALOG("HA",.KMPDERR,60,5,"ERROR")
"RTN","KMPDHU03",140,0)
 .....D EMAIL^KMPDUTL2("CM TOOLS - HL7 DAILY Error","KMPDERR(")
"RTN","KMPDHU03",141,0)
 ;
"RTN","KMPDHU03",142,0)
 K ^TMP($J,"KMPDHU03-F2")
"RTN","KMPDHU03",143,0)
 ;
"RTN","KMPDHU03",144,0)
 Q
"RTN","KMPDHU03",145,0)
 ;
"RTN","KMPDHU03",146,0)
PTNP(DATE) ;-extrinsic function - determine if date.hr is prime time or non-prime time
"RTN","KMPDHU03",147,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU03",148,0)
 ; DATE.... Date.Time in internal FileMan format
"RTN","KMPDHU03",149,0)
 ;
"RTN","KMPDHU03",150,0)
 ; Return: 1 - prime time
"RTN","KMPDHU03",151,0)
 ;         2 - non-prime time
"RTN","KMPDHU03",152,0)
 ;        "" - unable to identify
"RTN","KMPDHU03",153,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDHU03",154,0)
 Q:'$G(DATE) ""
"RTN","KMPDHU03",155,0)
 N DOW,HOUR
"RTN","KMPDHU03",156,0)
 ; day of week in numeric format
"RTN","KMPDHU03",157,0)
 S DOW=$$DOW^XLFDT(DATE,1)
"RTN","KMPDHU03",158,0)
 ; hours
"RTN","KMPDHU03",159,0)
 S HOUR=$E($P(DATE,".",2),1,2)
"RTN","KMPDHU03",160,0)
 ; prime time - not saturday or sunday or holiday and between the hours
"RTN","KMPDHU03",161,0)
 ;              of 8am (0800) to 5 pm (1700)
"RTN","KMPDHU03",162,0)
 Q:DOW'=0&(DOW'=6)&('$G(^HOLIDAY($P(DATE,"."),0)))&(HOUR>7)&(HOUR<17) 1
"RTN","KMPDHU03",163,0)
 ; non-prime time
"RTN","KMPDHU03",164,0)
 Q 2
"RTN","KMPDHUA")
0^7^B41047112^B41047112
"RTN","KMPDHUA",1,0)
KMPDHUA ;OAK/RAK - Remote Synchronous HL7 Protocol ;3/15/04  07:48
"RTN","KMPDHUA",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDHUA",3,0)
 ;
"RTN","KMPDHUA",4,0)
EN ;-entry point
"RTN","KMPDHUA",5,0)
 ;
"RTN","KMPDHUA",6,0)
 N DIC,I,KMPDATE,KMPDNMSP,KMPDPROT,KMPDSRCH,POP,X,Y
"RTN","KMPDHUA",7,0)
 N ZTDESC,ZTRTN,ZTSAVE,ZTSK,%ZIS
"RTN","KMPDHUA",8,0)
 ;
"RTN","KMPDHUA",9,0)
 ; option header
"RTN","KMPDHUA",10,0)
 D HDR^KMPDUTL4(" Synchronous Remote Protocol Distribution ") W !!
"RTN","KMPDHUA",11,0)
 ; select protocol
"RTN","KMPDHUA",12,0)
 S DIC=101,DIC(0)="AELMQZ",DIC("A")="Select Protocol: "
"RTN","KMPDHUA",13,0)
 D ^DIC Q:(+Y)<0  S KMPDPROT=Y
"RTN","KMPDHUA",14,0)
 ;
"RTN","KMPDHUA",15,0)
 ; select namespace (package file)
"RTN","KMPDHUA",16,0)
 D NMSPARRY(.KMPDNMSP) Q:'$D(KMPDNMSP)
"RTN","KMPDHUA",17,0)
 ;
"RTN","KMPDHUA",18,0)
 ; select date range
"RTN","KMPDHUA",19,0)
 D DATERNG^KMPDUTL2(.KMPDATE) Q:'KMPDATE
"RTN","KMPDHUA",20,0)
 ;
"RTN","KMPDHUA",21,0)
 ; element to rate protocols
"RTN","KMPDHUA",22,0)
 K DIR
"RTN","KMPDHUA",23,0)
 S DIR(0)="SO^1:Message Size;2:Character Transmission Rate;3:Message Transmission Rate"
"RTN","KMPDHUA",24,0)
 S DIR("B")=1
"RTN","KMPDHUA",25,0)
 D ^DIR Q:$G(Y)=""!($G(Y)="^")
"RTN","KMPDHUA",26,0)
 S KMPDSRCH=$S(Y:Y_"^"_$G(Y(0)),1:Y)
"RTN","KMPDHUA",27,0)
 ;
"RTN","KMPDHUA",28,0)
 ; select output device.
"RTN","KMPDHUA",29,0)
 S %ZIS="Q",%ZIS("A")="Device: ",%ZIS("B")="HOME"
"RTN","KMPDHUA",30,0)
 W ! D ^%ZIS I POP W !,"No action taken." Q
"RTN","KMPDHUA",31,0)
 ; if queued.
"RTN","KMPDHUA",32,0)
 I $D(IO("Q")) K IO("Q") D  Q
"RTN","KMPDHUA",33,0)
 .S ZTDESC="Synchronous Distribution Report"
"RTN","KMPDHUA",34,0)
 .S ZTRTN="EN1^KMPDHUA"
"RTN","KMPDHUA",35,0)
 .F I="KMPDATE","KMPDNMSP","KMPDPROT","KMPDSRCH" S ZTSAVE(I)=""
"RTN","KMPDHUA",36,0)
 .D ^%ZTLOAD W:$G(ZTSK) !,"Task #",ZTSK
"RTN","KMPDHUA",37,0)
 .D EXIT
"RTN","KMPDHUA",38,0)
 ;
"RTN","KMPDHUA",39,0)
 D EN1
"RTN","KMPDHUA",40,0)
 ;
"RTN","KMPDHUA",41,0)
 Q
"RTN","KMPDHUA",42,0)
 ;
"RTN","KMPDHUA",43,0)
EN1 ;-- entry point from taskman
"RTN","KMPDHUA",44,0)
 ;
"RTN","KMPDHUA",45,0)
 Q:'$G(KMPDATE)
"RTN","KMPDHUA",46,0)
 Q:'$D(KMPDNMSP)
"RTN","KMPDHUA",47,0)
 Q:'$G(KMPDSRCH)
"RTN","KMPDHUA",48,0)
 ;
"RTN","KMPDHUA",49,0)
 N END,ERROR,STR,X
"RTN","KMPDHUA",50,0)
 ;
"RTN","KMPDHUA",51,0)
 S STR=$P(KMPDATE,U),END=$P(KMPDATE,U,2)
"RTN","KMPDHUA",52,0)
 Q:'STR!('END)
"RTN","KMPDHUA",53,0)
 ;
"RTN","KMPDHUA",54,0)
 ; get data from hl7 api
"RTN","KMPDHUA",55,0)
 W:'$D(ZTQUEUED) !,"Gathering HL7 data..."
"RTN","KMPDHUA",56,0)
 K ^TMP("KMPDH",$J),^TMP("KMPDH-1",$J)
"RTN","KMPDHUA",57,0)
 ;
"RTN","KMPDHUA",58,0)
 D DATA,PRINT,EXIT
"RTN","KMPDHUA",59,0)
 ;
"RTN","KMPDHUA",60,0)
 Q
"RTN","KMPDHUA",61,0)
 ;
"RTN","KMPDHUA",62,0)
DATA ;
"RTN","KMPDHUA",63,0)
 ; if 'all' namespaces
"RTN","KMPDHUA",64,0)
 I $G(KMPDNMSP(0))="*" D 
"RTN","KMPDHUA",65,0)
 .S X=$$CMF^HLUCM(STR,END,1,KMPDPROT,"KMPDH","EITHER",.ERROR)
"RTN","KMPDHUA",66,0)
 ; if 'specific' namespaces
"RTN","KMPDHUA",67,0)
 E  D 
"RTN","KMPDHUA",68,0)
 .S X=$$CMF^HLUCM(STR,END,.KMPDNMSP,KMPDPROT,"KMPDH","BOTH",.ERROR)
"RTN","KMPDHUA",69,0)
 ;
"RTN","KMPDHUA",70,0)
 ; determine search list
"RTN","KMPDHUA",71,0)
 S FAC=""
"RTN","KMPDHUA",72,0)
 F  S FAC=$O(^TMP("KMPDH",$J,"RFAC","LR","R",FAC)) Q:FAC=""  D 
"RTN","KMPDHUA",73,0)
 .S NMSP=""
"RTN","KMPDHUA",74,0)
 .F  S NMSP=$O(^TMP("KMPDH",$J,"RFAC","LR","R",FAC,NMSP)) Q:NMSP=""  S TOT=^(NMSP) D 
"RTN","KMPDHUA",75,0)
 ..; 1 - message size = chr/message
"RTN","KMPDHUA",76,0)
 ..; 2 - charater transmission rate - chr/sec/msg
"RTN","KMPDHUA",77,0)
 ..; 3 - message transmission rate - sec/msg
"RTN","KMPDHUA",78,0)
 ..S SRCH=""
"RTN","KMPDHUA",79,0)
 ..I (+KMPDSRCH)=1 S SRCH=$P(TOT,U)/$P(TOT,U,2)
"RTN","KMPDHUA",80,0)
 ..I (+KMPDSRCH)=2 S SRCH=($P(TOT,U)/$P(TOT,U,3))/$P(TOT,U,2)
"RTN","KMPDHUA",81,0)
 ..I (+KMPDSRCH)=3 S SRCH=$P(TOT,U,3)/$P(TOT,U,2)
"RTN","KMPDHUA",82,0)
 ..Q:SRCH=""
"RTN","KMPDHUA",83,0)
 ..S ^TMP("KMPDH-1",$J,SRCH,FAC,NMSP)=""
"RTN","KMPDHUA",84,0)
 ;
"RTN","KMPDHUA",85,0)
 Q
"RTN","KMPDHUA",86,0)
 ;
"RTN","KMPDHUA",87,0)
EXIT ;
"RTN","KMPDHUA",88,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","KMPDHUA",89,0)
 K KMPDATE,KMPDNMSP,KMPDPROT,KMPDSRCH
"RTN","KMPDHUA",90,0)
 K ^TMP("KMPDH",$J),^TMP("KMPDH-1",$J)
"RTN","KMPDHUA",91,0)
 D ^%ZISC
"RTN","KMPDHUA",92,0)
 Q
"RTN","KMPDHUA",93,0)
 ;
"RTN","KMPDHUA",94,0)
PRINT ;-- print sync/facility data
"RTN","KMPDHUA",95,0)
 N DATA,DATE,FAC,I,J,NMSP,PROT,RANK,SRCH
"RTN","KMPDHUA",96,0)
 D HDR
"RTN","KMPDHUA",97,0)
 I '$D(^TMP("KMPDH-1",$J)) W !?5," No Data to Report" Q
"RTN","KMPDHUA",98,0)
 S SRCH="A",RANK=1
"RTN","KMPDHUA",99,0)
 F  S SRCH=$O(^TMP("KMPDH-1",$J,SRCH),-1) Q:'SRCH  D 
"RTN","KMPDHUA",100,0)
 .W !,RANK,".",?5,$J($FN(SRCH,",",$S((+KMPDSRCH)=3:2,1:0)),10)
"RTN","KMPDHUA",101,0)
 .S FAC="",RANK=RANK+1
"RTN","KMPDHUA",102,0)
 .F  S FAC=$O(^TMP("KMPDH-1",$J,SRCH,FAC)) Q:FAC=""  D 
"RTN","KMPDHUA",103,0)
 ..W ?17,$E($P(FAC,"~",2),1,18) S NMSP=""
"RTN","KMPDHUA",104,0)
 ..F  S NMSP=$O(^TMP("KMPDH-1",$J,SRCH,FAC,NMSP)) Q:NMSP=""  D 
"RTN","KMPDHUA",105,0)
 ...W ?37,NMSP S DATE=0 K TOT
"RTN","KMPDHUA",106,0)
 ...F  S DATE=$O(^TMP("KMPDH",$J,"RFAC","LR","R",FAC,NMSP,DATE)) Q:'DATE  D 
"RTN","KMPDHUA",107,0)
 ....S PROT=""
"RTN","KMPDHUA",108,0)
 ....F  S PROT=$O(^TMP("KMPDH",$J,"RFAC","LR","R",FAC,NMSP,DATE,PROT)) Q:PROT=""  S DATA=^(PROT) D 
"RTN","KMPDHUA",109,0)
 .....; tcp/mail/unknown
"RTN","KMPDHUA",110,0)
 .....S DATA("T")=$G(^TMP("KMPDH",$J,"HR","TM","T",FAC,DATE,NMSP,PROT))
"RTN","KMPDHUA",111,0)
 .....S DATA("M")=$G(^TMP("KMPDH",$J,"HR","TM","M",FAC,DATE,NMSP,PROT))
"RTN","KMPDHUA",112,0)
 .....S DATA("TMU")=$G(^TMP("KMPDH",$J,"HR","TM","U",FAC,DATE,NMSP,PROT))
"RTN","KMPDHUA",113,0)
 .....; incoming/outgoing/unknown
"RTN","KMPDHUA",114,0)
 .....S DATA("I")=$G(^TMP("KMPDH",$J,"NMSP","IO","I",FAC,NMSP,DATE,PROT))
"RTN","KMPDHUA",115,0)
 .....S DATA("O")=$G(^TMP("KMPDH",$J,"NMSP","IO","O",FAC,NMSP,DATE,PROT))
"RTN","KMPDHUA",116,0)
 .....S DATA("IOU")=$G(^TMP("KMPDH",$J,"NMSP","IO","U",FAC,NMSP,DATE,PROT))
"RTN","KMPDHUA",117,0)
 .....; calculate sub-totals
"RTN","KMPDHUA",118,0)
 .....F I=1:1:3 D 
"RTN","KMPDHUA",119,0)
 ......S $P(TOT,U,I)=$P($G(TOT),U,I)+$P(DATA,U,I)
"RTN","KMPDHUA",120,0)
 ......S $P(TOT("T"),U,I)=$P($G(TOT("T")),U,I)+$P(DATA("T"),U,I)
"RTN","KMPDHUA",121,0)
 ......S $P(TOT("M"),U,I)=$P($G(TOT("M")),U,I)+$P(DATA("M"),U,I)
"RTN","KMPDHUA",122,0)
 ......S $P(TOT("TMU"),U,I)=$P($G(TOT("TMU")),U,I)+$P(DATA("TMU"),U,I)
"RTN","KMPDHUA",123,0)
 ......S $P(TOT("I"),U,I)=$P($G(TOT("I")),U,I)+$P(DATA("I"),U,I)
"RTN","KMPDHUA",124,0)
 ......S $P(TOT("O"),U,I)=$P($G(TOT("O")),U,I)+$P(DATA("O"),U,I)
"RTN","KMPDHUA",125,0)
 ......S $P(TOT("IOU"),U,I)=$P($G(TOT("IOU")),U,I)+$P(DATA("IOU"),U,I)
"RTN","KMPDHUA",126,0)
 ...;
"RTN","KMPDHUA",127,0)
 ...; back to NMSP level
"RTN","KMPDHUA",128,0)
 ...;
"RTN","KMPDHUA",129,0)
 ...W ?45,$J($FN($P(TOT,U),",",0),9)
"RTN","KMPDHUA",130,0)
 ...W ?56,$J($FN($P(TOT,U,2),",",0),9)
"RTN","KMPDHUA",131,0)
 ...W ?67,$J($FN($P(TOT,U,3),",",0),9)
"RTN","KMPDHUA",132,0)
 ...W !
"RTN","KMPDHUA",133,0)
 ...F I="T","M","TMU","I","O","IOU" D 
"RTN","KMPDHUA",134,0)
 ....W ! W:I="I"!(I="L") !
"RTN","KMPDHUA",135,0)
 ....W ?21,$S(I="T":"TCP",I="M":"Mail",I="TMU":"T/M Unknown",1:"")
"RTN","KMPDHUA",136,0)
 ....W ?21,$S(I="I":"Incoming",I="O":"Outgoing",I="IOU":"I/O Unknown",1:"")
"RTN","KMPDHUA",137,0)
 ....F J=1:1:3 W ?$S(J=1:45,J=2:56,1:67),$J($FN($P($G(TOT(I)),U,J),",",0),9)
"RTN","KMPDHUA",138,0)
 ..W !
"RTN","KMPDHUA",139,0)
 ;
"RTN","KMPDHUA",140,0)
 Q
"RTN","KMPDHUA",141,0)
 ;
"RTN","KMPDHUA",142,0)
HDR ;
"RTN","KMPDHUA",143,0)
 S KMPDATE=$G(KMPDATE)
"RTN","KMPDHUA",144,0)
 S KMPDPROT=$G(KMPDPROT)
"RTN","KMPDHUA",145,0)
 S KMPDSRCH=$G(KMPDSRCH)
"RTN","KMPDHUA",146,0)
 W @IOF
"RTN","KMPDHUA",147,0)
 N X
"RTN","KMPDHUA",148,0)
 S X=$$SITE^VASITE,X=$P(X,U,2)_" ("_$P(X,U)_")"
"RTN","KMPDHUA",149,0)
 W !?(80-$L(X)\2),X,?62,"Printed: ",$$FMTE^XLFDT(DT,2)
"RTN","KMPDHUA",150,0)
 W !?21,"Synchronous Remote Protocol Distribution"
"RTN","KMPDHUA",151,0)
 S X="'"_$P(KMPDPROT,"^",2)_"'"
"RTN","KMPDHUA",152,0)
 W !?((80-$L(X))\2),X
"RTN","KMPDHUA",153,0)
 S X=$P($P(KMPDATE,U,3),"@")_": "_$P($P(KMPDATE,U,3),"@",2)
"RTN","KMPDHUA",154,0)
 S X=X_" - "_$P($P(KMPDATE,U,4),"@")_": "_$P($P(KMPDATE,U,4),"@",2)
"RTN","KMPDHUA",155,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDHUA",156,0)
 S X=$P(KMPDSRCH,U)_" - "_$P(KMPDSRCH,U,2)
"RTN","KMPDHUA",157,0)
 W !?((80-$L(X))\2),X
"RTN","KMPDHUA",158,0)
 S X=$S((+KMPDSRCH)=1:"  Chr/Msg",(+KMPDSRCH)=2:"Ch/Sc/Mg",(+KMPDSRCH)=3:"  Sec/Msg",1:"OTHER")
"RTN","KMPDHUA",159,0)
 W !
"RTN","KMPDHUA",160,0)
 W !,"Rank",?6,X,?17,"Remote Facility",?37,"Nmsp",?45,$J("Chrs",9),?56,$J("Messages",9),?67,$J("Seconds",9)
"RTN","KMPDHUA",161,0)
 W !,"----",?6,"---------",?17,"------------------",?37,"----",?45,"---------",?56,"---------",?67,"---------"
"RTN","KMPDHUA",162,0)
 ;
"RTN","KMPDHUA",163,0)
 Q
"RTN","KMPDHUA",164,0)
 ;
"RTN","KMPDHUA",165,0)
NMSPARRY(KMPDNMSP) ;-- namespace arry
"RTN","KMPDHUA",166,0)
 K KMPDNMSP
"RTN","KMPDHUA",167,0)
 N DIC,NM1,NMSP,PKG,X,Y
"RTN","KMPDHUA",168,0)
 S DIC=9.4,DIC(0)="AEMQZ",DIC("A")="Select Namespace: "
"RTN","KMPDHUA",169,0)
 W ! D SELECT^KMPDUT4("KMPDNMSP",1,5)
"RTN","KMPDHUA",170,0)
 Q:$G(KMPDNMSP(0))=""
"RTN","KMPDHUA",171,0)
 Q:KMPDNMSP(0)'="*"&($O(KMPDNMSP(0))="")
"RTN","KMPDHUA",172,0)
 I KMPDNMSP(0)'="*" K KMPDNMSP(0),NM1 D 
"RTN","KMPDHUA",173,0)
 .S I="" F  S I=$O(KMPDNMSP(I)) Q:I=""  S PKG=KMPDNMSP(I) D:PKG 
"RTN","KMPDHUA",174,0)
 ..S NMSP=$P($G(^DIC(9.4,PKG,0)),U,2)
"RTN","KMPDHUA",175,0)
 ..S:NMSP'="" NM1(NMSP)=PKG
"RTN","KMPDHUA",176,0)
 ..K KMPDNMSP(I)
"RTN","KMPDHUA",177,0)
 .M KMPDNMSP=NM1
"RTN","KMPDHUA",178,0)
 ;
"RTN","KMPDHUA",179,0)
 Q
"RTN","KMPDPOST")
0^8^B3093931^B2606774
"RTN","KMPDPOST",1,0)
KMPDPOST ;OAK/RAK - CM Tools Post Install ;4/2/04  08:55
"RTN","KMPDPOST",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDPOST",3,0)
 ;
"RTN","KMPDPOST",4,0)
EN ;-entry point
"RTN","KMPDPOST",5,0)
 N IEN,IEN1,ERROR,FDA,ZIEN
"RTN","KMPDPOST",6,0)
 ; update cp parameters file
"RTN","KMPDPOST",7,0)
 S FDA($J,8973,"?+1,",.01)=+$P($$SITE^VASITE,"^")
"RTN","KMPDPOST",8,0)
 S FDA($J,8973,"?+1,",.02)=$P($$VERSION^KMPDUTL,"^")
"RTN","KMPDPOST",9,0)
 S FDA($J,8973,"?+1,",.03)=$$NOW^XLFDT
"RTN","KMPDPOST",10,0)
 S FDA($J,8973,"?+1,",.04)=""
"RTN","KMPDPOST",11,0)
 S FDA($J,8973,"?+1,",.05)=""
"RTN","KMPDPOST",12,0)
 D UPDATE^DIE("","FDA($J)","ERROR")
"RTN","KMPDPOST",13,0)
 ; if error
"RTN","KMPDPOST",14,0)
 I $D(ERROR) D MSG^DIALOG("W","",60,10,"ERROR") Q
"RTN","KMPDPOST",15,0)
 D MES^XPDUTL("     CM TOOLS CURRENT VERSION field in CP PARAMETERS file has been updated!")
"RTN","KMPDPOST",16,0)
 ; check for background job
"RTN","KMPDPOST",17,0)
 S IEN=$O(^DIC(19,"B","KMPD BACKGROUND DRIVER",0))
"RTN","KMPDPOST",18,0)
 D:'IEN MES^XPDUTL("     KMPD BACKGROUND DRIVER is NOT in the OPTION file!")
"RTN","KMPDPOST",19,0)
 ; check for option scheduling entry
"RTN","KMPDPOST",20,0)
 S IEN1=$O(^DIC(19.2,"B",IEN,0))
"RTN","KMPDPOST",21,0)
 I IEN1 D MES^XPDUTL("     [KMPD BACKGROUND DRIVER] is scheduled in the OPTION SCHEDULING file!")
"RTN","KMPDPOST",22,0)
 E  D 
"RTN","KMPDPOST",23,0)
 .K ERROR,FDA,ZIEN
"RTN","KMPDPOST",24,0)
 .S FDA($J,19.2,"+1,",.01)=IEN
"RTN","KMPDPOST",25,0)
 .S FDA($J,19.2,"+1,",2)="T+1@01:30"
"RTN","KMPDPOST",26,0)
 .S FDA($J,19.2,"+1,",6)="1D"
"RTN","KMPDPOST",27,0)
 .D UPDATE^DIE("","FDA($J)",.ZIEN,"ERROR")
"RTN","KMPDPOST",28,0)
 .; if error
"RTN","KMPDPOST",29,0)
 .I $D(ERROR) D MSG^DIALOG("W","",60,10,"ERROR") Q
"RTN","KMPDPOST",30,0)
 .D MES^XPDUTL("     [KMPD BACKGROUND DRIVER] has been scheduled to run each day at 1:30am!")
"RTN","KMPDPOST",31,0)
 ;
"RTN","KMPDPOST",32,0)
 Q
"RTN","KMPDSS")
0^9^B5601421^B5601421
"RTN","KMPDSS",1,0)
KMPDSS ;OAK/RAK - CM Tools Status ;2/14/05  10:43
"RTN","KMPDSS",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDSS",3,0)
 ;
"RTN","KMPDSS",4,0)
EN ;-entry point
"RTN","KMPDSS",5,0)
 ;
"RTN","KMPDSS",6,0)
 N DIR,OUT,X,Y
"RTN","KMPDSS",7,0)
 ;
"RTN","KMPDSS",8,0)
 S OUT=0
"RTN","KMPDSS",9,0)
 F  D  Q:OUT
"RTN","KMPDSS",10,0)
 .D HDR^KMPDUTL4(" Check Capacity Planning Environment ")
"RTN","KMPDSS",11,0)
 .S DIR(0)="SO^H:HL7;R:RUM;S:SAGG;T:Timing"
"RTN","KMPDSS",12,0)
 .W !! D ^DIR I Y=""!(Y="^") SET OUT=1 Q
"RTN","KMPDSS",13,0)
 .D DISPLAY^KMPDSS1(Y_"^"_Y(0))
"RTN","KMPDSS",14,0)
 ;
"RTN","KMPDSS",15,0)
 Q
"RTN","KMPDSS",16,0)
 ;
"RTN","KMPDSS",17,0)
VERDSPL(KMPDPKG) ;--display routine version info
"RTN","KMPDSS",18,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDSS",19,0)
 ; KMPDPKG... CM Package:
"RTN","KMPDSS",20,0)
 ;            "D" - CM Tools
"RTN","KMPDSS",21,0)
 ;            "R" - RUM
"RTN","KMPDSS",22,0)
 ;            "S" - SAGG
"RTN","KMPDSS",23,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDSS",24,0)
 Q:$G(KMPDPKG)=""
"RTN","KMPDSS",25,0)
 Q:KMPDPKG'="D"&(KMPDPKG'="R")&(KMPDPKG'="S")
"RTN","KMPDSS",26,0)
 N I,X
"RTN","KMPDSS",27,0)
 ; routine check
"RTN","KMPDSS",28,0)
 D VERPTCH^KMPDUTL1(KMPDPKG,.X)
"RTN","KMPDSS",29,0)
 W !?5,$S(KMPDPKG="D":"CM TOOLS",KMPDPKG="R":"RUM",1:"SAGG")
"RTN","KMPDSS",30,0)
 W " routines",$$REPEAT^XLFSTR(".",28-$X),": "
"RTN","KMPDSS",31,0)
 I '$P($G(X(0)),U,3) W "No Problems"
"RTN","KMPDSS",32,0)
 E  D 
"RTN","KMPDSS",33,0)
 .W !?20,"Current Version",?55,"Should be"
"RTN","KMPDSS",34,0)
 .S I=0 F  S I=$O(X(I)) Q:I=""  I $P(X(I),U) D 
"RTN","KMPDSS",35,0)
 ..W !?3,I,?20,$P(X(I),U,4)
"RTN","KMPDSS",36,0)
 ..W:$P(X(I),U,5)]"" " - ",$P(X(I),U,5)
"RTN","KMPDSS",37,0)
 ..W ?55,$P(X(I),U,2)
"RTN","KMPDSS",38,0)
 ..W:$P(X(I),U,3)]"" " - ",$P(X(I),U,3)
"RTN","KMPDSS",39,0)
 Q
"RTN","KMPDSS",40,0)
 ;
"RTN","KMPDSS",41,0)
PRM ;-- edit parameters file
"RTN","KMPDSS",42,0)
 ;
"RTN","KMPDSS",43,0)
 N DDSFILE,DR,DA
"RTN","KMPDSS",44,0)
 ;
"RTN","KMPDSS",45,0)
 S DA=$O(^KMPD(8973,0)) Q:'DA
"RTN","KMPDSS",46,0)
 S DDSFILE=8973,DR="[KMPD PARAMETERS EDIT]" D ^DDS
"RTN","KMPDSS",47,0)
 ;
"RTN","KMPDSS",48,0)
 Q
"RTN","KMPDSS",49,0)
 ;
"RTN","KMPDSS",50,0)
SST ;-- start/stop coversheet collection
"RTN","KMPDSS",51,0)
 ; check for cprs patch
"RTN","KMPDSS",52,0)
 I '$$PATCH^XPDUTL("OR*3.0*209") D  Q
"RTN","KMPDSS",53,0)
 .W !! D EN^DDIOL($C(7)_"*** Patch OR*3.0*209 must be installed for CPRS Timing data to be collected ***")
"RTN","KMPDSS",54,0)
 ;
"RTN","KMPDSS",55,0)
 N DIR,STAT,X,Y
"RTN","KMPDSS",56,0)
 S STAT=$G(^KMPTMP("KMPD-CPRS"))
"RTN","KMPDSS",57,0)
 W !!!,"Timing Collection is currently [ ",$S(STAT:"Running",1:"STOPPED")," ]",!
"RTN","KMPDSS",58,0)
 S DIR(0)="YO",DIR("B")="N"
"RTN","KMPDSS",59,0)
 S DIR("A")="Do you want to '"_$S(STAT:"Stop",1:"Start")_"' the collection"
"RTN","KMPDSS",60,0)
 D ^DIR Q:'Y
"RTN","KMPDSS",61,0)
 S ^KMPTMP("KMPD-CPRS")=$S(STAT:"",1:1)
"RTN","KMPDSS",62,0)
 W !!,"Timing Collection has been [ ",$S(STAT:"STOPPED",1:"Started")," ]"
"RTN","KMPDSS",63,0)
 Q
"RTN","KMPDSS1")
0^10^B4453794^B4453794
"RTN","KMPDSS1",1,0)
KMPDSS1 ;OAK/RAK - CP Status ;2/14/05  10:49
"RTN","KMPDSS1",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDSS1",3,0)
 ;
"RTN","KMPDSS1",4,0)
DISPLAY(KMPDAPP) ;-display environment data
"RTN","KMPDSS1",5,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSS1",6,0)
 ; KMPDAPP... CP application
"RTN","KMPDSS1",7,0)
 ;             H^HL7
"RTN","KMPDSS1",8,0)
 ;             R^RUM
"RTN","KMPDSS1",9,0)
 ;             S^SAGG
"RTN","KMPDSS1",10,0)
 ;             T^TIMING
"RTN","KMPDSS1",11,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSS1",12,0)
 ;
"RTN","KMPDSS1",13,0)
 Q:$G(KMPDAPP)=""
"RTN","KMPDSS1",14,0)
 Q:"HRST"'[$P(KMPDAPP,U)
"RTN","KMPDSS1",15,0)
 ;
"RTN","KMPDSS1",16,0)
 S KMPDNMSP=$P(KMPDAPP,U) Q:KMPDNMSP=""
"RTN","KMPDSS1",17,0)
 S KMPDTITL=$P(KMPDAPP,U,2)
"RTN","KMPDSS1",18,0)
 ;
"RTN","KMPDSS1",19,0)
 D EN^VALM("KMPD STATUS")
"RTN","KMPDSS1",20,0)
 ;
"RTN","KMPDSS1",21,0)
 Q
"RTN","KMPDSS1",22,0)
 ;
"RTN","KMPDSS1",23,0)
HDR ; -- header code
"RTN","KMPDSS1",24,0)
 ;
"RTN","KMPDSS1",25,0)
 Q:$G(KMPDNMSP)=""
"RTN","KMPDSS1",26,0)
 ;
"RTN","KMPDSS1",27,0)
 N ROUTINE,TEXT,VERSION
"RTN","KMPDSS1",28,0)
 ;
"RTN","KMPDSS1",29,0)
 S ROUTINE="KMP"_$S(KMPDNMSP="H"!(KMPDNMSP="T"):"D",1:KMPDNMSP)_"UTL"
"RTN","KMPDSS1",30,0)
 ;
"RTN","KMPDSS1",31,0)
 ; version data
"RTN","KMPDSS1",32,0)
 ; if sagg
"RTN","KMPDSS1",33,0)
 I $P(KMPDNMSP,U)="S" D 
"RTN","KMPDSS1",34,0)
 .S VERSION="" S X="KMPSUTL" X ^%ZOSF("TEST") Q:'$T
"RTN","KMPDSS1",35,0)
 .S VERSION=$P($T(+2^KMPSUTL),";",3)_"^"_$P($T(+2^KMPSUTL),";",5)
"RTN","KMPDSS1",36,0)
 ; all others
"RTN","KMPDSS1",37,0)
 E  S @("VERSION=$$VERSION^"_ROUTINE)
"RTN","KMPDSS1",38,0)
 ;
"RTN","KMPDSS1",39,0)
 ; header text
"RTN","KMPDSS1",40,0)
 S TEXT="Environment Check for "_$G(KMPDTITL)
"RTN","KMPDSS1",41,0)
 S TEXT=$J(" ",IOM-$L(TEXT)\2)_TEXT
"RTN","KMPDSS1",42,0)
 S VALMHDR(1)=TEXT
"RTN","KMPDSS1",43,0)
 S TEXT=$$PKG($P(KMPDNMSP,U))_" v"_$P(VERSION,U)_" "_$P(VERSION,U,2)
"RTN","KMPDSS1",44,0)
 S TEXT=$J(" ",IOM-$L(TEXT)\2)_TEXT
"RTN","KMPDSS1",45,0)
 S VALMHDR(2)=TEXT
"RTN","KMPDSS1",46,0)
 ;
"RTN","KMPDSS1",47,0)
 Q
"RTN","KMPDSS1",48,0)
 ;
"RTN","KMPDSS1",49,0)
INIT ; -- init variables and list array
"RTN","KMPDSS1",50,0)
 ;
"RTN","KMPDSS1",51,0)
 Q:$G(KMPDNMSP)=""
"RTN","KMPDSS1",52,0)
 ;
"RTN","KMPDSS1",53,0)
 N ROUTINE
"RTN","KMPDSS1",54,0)
 ;
"RTN","KMPDSS1",55,0)
 S ROUTINE="FORMAT^KMPDSS"_$S(KMPDNMSP="H"!(KMPDNMSP="T"):"D",1:KMPDNMSP)_"(.VALMCNT)"
"RTN","KMPDSS1",56,0)
 ;
"RTN","KMPDSS1",57,0)
 D @(ROUTINE)
"RTN","KMPDSS1",58,0)
 ;
"RTN","KMPDSS1",59,0)
 ;D FORMAT^KMPRSSA(.VALMCNT)
"RTN","KMPDSS1",60,0)
 ;
"RTN","KMPDSS1",61,0)
 Q
"RTN","KMPDSS1",62,0)
 ;
"RTN","KMPDSS1",63,0)
HELP ; -- help code
"RTN","KMPDSS1",64,0)
 ;
"RTN","KMPDSS1",65,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","KMPDSS1",66,0)
 ;
"RTN","KMPDSS1",67,0)
 Q
"RTN","KMPDSS1",68,0)
 ;
"RTN","KMPDSS1",69,0)
EXIT ; -- exit code
"RTN","KMPDSS1",70,0)
 ;
"RTN","KMPDSS1",71,0)
 K @VALMAR
"RTN","KMPDSS1",72,0)
 ;
"RTN","KMPDSS1",73,0)
 Q
"RTN","KMPDSS1",74,0)
 ;
"RTN","KMPDSS1",75,0)
EXPND ; -- expand code
"RTN","KMPDSS1",76,0)
 ;
"RTN","KMPDSS1",77,0)
 Q
"RTN","KMPDSS1",78,0)
 ;
"RTN","KMPDSS1",79,0)
PKG(KMPDNM) ;-- extrinsic function - return package name
"RTN","KMPDSS1",80,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSS1",81,0)
 ; KMPDNM... H - HL7
"RTN","KMPDSS1",82,0)
 ;           R - RUM
"RTN","KMPDSS1",83,0)
 ;           S - SAGG
"RTN","KMPDSS1",84,0)
 ;           T - Timing
"RTN","KMPDSS1",85,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSS1",86,0)
 ;
"RTN","KMPDSS1",87,0)
 Q:$G(KMPDNM)="" ""
"RTN","KMPDSS1",88,0)
 Q:"HRST"'[KMPDNM ""
"RTN","KMPDSS1",89,0)
 ;
"RTN","KMPDSS1",90,0)
 N IEN,NMSP
"RTN","KMPDSS1",91,0)
 ;
"RTN","KMPDSS1",92,0)
 S NMSP="KMP"_$S(KMPDNM="H"!(KMPDNM="T"):"D",1:KMPDNM)
"RTN","KMPDSS1",93,0)
 S IEN=$O(^DIC(9.4,"C",NMSP,0))
"RTN","KMPDSS1",94,0)
 Q $P($G(^DIC(9.4,+IEN,0)),U)
"RTN","KMPDSSD")
0^11^B70757970^B78192650
"RTN","KMPDSSD",1,0)
KMPDSSD ;OAK/RAK - CM Tools Status ;2/14/05  11:42
"RTN","KMPDSSD",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDSSD",3,0)
 ;
"RTN","KMPDSSD",4,0)
FORMAT(KMPDLN) ;-format text for display
"RTN","KMPDSSD",5,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSSD",6,0)
 ; KMPDLN.... return number of lines - called by reference
"RTN","KMPDSSD",7,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSSD",8,0)
 ;
"RTN","KMPDSSD",9,0)
 Q:$G(KMPDNMSP)=""
"RTN","KMPDSSD",10,0)
 ;
"RTN","KMPDSSD",11,0)
 N LN,VERSION,X S LN=0 K TMP
"RTN","KMPDSSD",12,0)
 ;
"RTN","KMPDSSD",13,0)
 ; if no kmpdutl routine
"RTN","KMPDSSD",14,0)
 S X="KMPDUTL" X ^%ZOSF("TEST") I '$T D  Q
"RTN","KMPDSSD",15,0)
 .S LN=LN+1
"RTN","KMPDSSD",16,0)
 .D SET^VALM10(LN,"The CM Tools Package is not installed!")
"RTN","KMPDSSD",17,0)
 ;
"RTN","KMPDSSD",18,0)
 ; version data
"RTN","KMPDSSD",19,0)
 S VERSION=$$VERSION^KMPDUTL
"RTN","KMPDSSD",20,0)
 ;
"RTN","KMPDSSD",21,0)
 ; option data
"RTN","KMPDSSD",22,0)
 D OPT("KMPD BACKGROUND DRIVER")
"RTN","KMPDSSD",23,0)
 ;
"RTN","KMPDSSD",24,0)
 ; bacground data
"RTN","KMPDSSD",25,0)
 D BKGRND
"RTN","KMPDSSD",26,0)
 ;
"RTN","KMPDSSD",27,0)
 ; file data
"RTN","KMPDSSD",28,0)
 D FILES
"RTN","KMPDSSD",29,0)
 ;
"RTN","KMPDSSD",30,0)
 ; routine version check
"RTN","KMPDSSD",31,0)
 D ROUCHK^KMPDSSD1("D")
"RTN","KMPDSSD",32,0)
 ;
"RTN","KMPDSSD",33,0)
 ; node/cpu data
"RTN","KMPDSSD",34,0)
 D CPU^KMPDSSD1
"RTN","KMPDSSD",35,0)
 ;
"RTN","KMPDSSD",36,0)
 ; mailgroup members
"RTN","KMPDSSD",37,0)
 D MGRP^KMPDSSD1
"RTN","KMPDSSD",38,0)
 ;
"RTN","KMPDSSD",39,0)
 ; legend
"RTN","KMPDSSD",40,0)
 D LEGEND
"RTN","KMPDSSD",41,0)
 ;
"RTN","KMPDSSD",42,0)
 S KMPDLN=LN
"RTN","KMPDSSD",43,0)
 ;
"RTN","KMPDSSD",44,0)
 Q
"RTN","KMPDSSD",45,0)
 ;
"RTN","KMPDSSD",46,0)
BKGRND ; hl7 background info
"RTN","KMPDSSD",47,0)
 ;
"RTN","KMPDSSD",48,0)
 N DATA,DELTA,ENDT,I,STAT,STDT,Z
"RTN","KMPDSSD",49,0)
 ;
"RTN","KMPDSSD",50,0)
 D PARAMS^KMPDUT("DATA") Q:'$D(DATA)
"RTN","KMPDSSD",51,0)
 S DATA(3)=$G(DATA(3)),DATA(4)=$G(DATA(4))
"RTN","KMPDSSD",52,0)
 S STDT=$P(DATA(3),U,5),ENDT=$P(DATA(3),U,6),DELTA=$P(DATA(3),U,7)
"RTN","KMPDSSD",53,0)
 S:$E(DELTA)=" " $E(DELTA)="0"
"RTN","KMPDSSD",54,0)
 ; if hl7
"RTN","KMPDSSD",55,0)
 I KMPDNMSP="H" D 
"RTN","KMPDSSD",56,0)
 .S LN=LN+1
"RTN","KMPDSSD",57,0)
 .D SET^VALM10(LN,"")
"RTN","KMPDSSD",58,0)
 .S LN=LN+1
"RTN","KMPDSSD",59,0)
 .D SET^VALM10(LN,"   Hl7 Dly Bckgrnd Last Start.. "_$$FMTE^XLFDT(STDT))
"RTN","KMPDSSD",60,0)
 .S LN=LN+1
"RTN","KMPDSSD",61,0)
 .D SET^VALM10(LN,"   HL7 Dly Bckgrnd Last Stop... "_$$FMTE^XLFDT(ENDT))
"RTN","KMPDSSD",62,0)
 .S LN=LN+1
"RTN","KMPDSSD",63,0)
 .D SET^VALM10(LN,"   HL7 Dly Bkgrnd Total Time... "_DELTA)
"RTN","KMPDSSD",64,0)
 .S STDT=$P(DATA(3),U,8),ENDT=$P(DATA(3),U,9),DELTA=$P(DATA(3),U,10)
"RTN","KMPDSSD",65,0)
 .S:$E(DELTA)=" " $E(DELTA)="0"
"RTN","KMPDSSD",66,0)
 .S LN=LN+1
"RTN","KMPDSSD",67,0)
 .D SET^VALM10(LN,"")
"RTN","KMPDSSD",68,0)
 .S LN=LN+1
"RTN","KMPDSSD",69,0)
 .D SET^VALM10(LN,"   HL7 Wkly Backgrnd Last Start "_$$FMTE^XLFDT(STDT))
"RTN","KMPDSSD",70,0)
 .S LN=LN+1
"RTN","KMPDSSD",71,0)
 .D SET^VALM10(LN,"   HL7 Wkly Bckgrnd Last Stop.. "_$$FMTE^XLFDT(ENDT))
"RTN","KMPDSSD",72,0)
 .S LN=LN+1
"RTN","KMPDSSD",73,0)
 .D SET^VALM10(LN,"   HL7 Wkly Bckgrnd Total Time. "_DELTA)
"RTN","KMPDSSD",74,0)
 .S LN=LN+1
"RTN","KMPDSSD",75,0)
 .D SET^VALM10(LN,"   HL7 Purge Data After........ "_$P(DATA(3),U,11)_" weeks")
"RTN","KMPDSSD",76,0)
 .D TRANSTO^KMPDUTL7(1,3,.Z)
"RTN","KMPDSSD",77,0)
 .I '$D(Z) S LN=LN+1 D SET^VALM10(LN,"   HL7 Transmit Data to........ <>")
"RTN","KMPDSSD",78,0)
 .E  D 
"RTN","KMPDSSD",79,0)
 ..S I=$O(Z("")) I I'="" S LN=LN+1 D SET^VALM10(LN,"   HL7 Transmit Data to........ "_I)
"RTN","KMPDSSD",80,0)
 ..F  S I=$O(Z(I)) Q:I=""  S LN=LN+1 D SET^VALM10(LN,$J(" ",32)_I)
"RTN","KMPDSSD",81,0)
 .S LN=LN+1
"RTN","KMPDSSD",82,0)
 .D SET^VALM10(LN,"")
"RTN","KMPDSSD",83,0)
 ;
"RTN","KMPDSSD",84,0)
 ; timing background info - if available
"RTN","KMPDSSD",85,0)
 I KMPDNMSP="T" D 
"RTN","KMPDSSD",86,0)
 .S LN=LN+1
"RTN","KMPDSSD",87,0)
 .D SET^VALM10(LN,"")
"RTN","KMPDSSD",88,0)
 .I '$D(DATA(4)) S LN=LN+1 D SET^VALM10(LN,"   There is no Timing data to report") Q
"RTN","KMPDSSD",89,0)
 .S STAT=$G(^KMPTMP("KMPD-CPRS"))
"RTN","KMPDSSD",90,0)
 .S LN=LN+1
"RTN","KMPDSSD",91,0)
 .D SET^VALM10(LN,"   TMG Collection Status....... "_$S(STAT:"Running",1:"STOPPED!"))
"RTN","KMPDSSD",92,0)
 .S STDT=$P(DATA(4),U,5),ENDT=$P(DATA(4),U,6),DELTA=$P(DATA(4),U,7)
"RTN","KMPDSSD",93,0)
 .S:$E(DELTA)=" " $E(DELTA)="0"
"RTN","KMPDSSD",94,0)
 .S LN=LN+1
"RTN","KMPDSSD",95,0)
 .D SET^VALM10(LN,"   TMG Dly Bckgrnd Last Start.. "_$$FMTE^XLFDT(STDT))
"RTN","KMPDSSD",96,0)
 .S LN=LN+1
"RTN","KMPDSSD",97,0)
 .D SET^VALM10(LN,"   TMG Dly Bckgrnd Last Stop... "_$$FMTE^XLFDT(ENDT))
"RTN","KMPDSSD",98,0)
 .S LN=LN+1
"RTN","KMPDSSD",99,0)
 .D SET^VALM10(LN,"   TMG Dly Bkgrnd Total Time... "_DELTA)
"RTN","KMPDSSD",100,0)
 .S STDT=$P(DATA(4),U,8),ENDT=$P(DATA(4),U,9),DELTA=$P(DATA(4),U,10)
"RTN","KMPDSSD",101,0)
 .S:$E(DELTA)=" " $E(DELTA)="0"
"RTN","KMPDSSD",102,0)
 .S LN=LN+1
"RTN","KMPDSSD",103,0)
 .D SET^VALM10(LN,"   TMG Purge Data After........ "_$P(DATA(4),U,11)_" weeks")
"RTN","KMPDSSD",104,0)
 .D TRANSTO^KMPDUTL7(1,4,.Z)
"RTN","KMPDSSD",105,0)
 .I '$D(Z) S LN=LN+1 D SET^VALM10(LN,"   TMG Transmit Data to........ <>")
"RTN","KMPDSSD",106,0)
 .E  D 
"RTN","KMPDSSD",107,0)
 ..S I=$O(Z("")) I I'="" S LN=LN+1 D SET^VALM10(LN,"   TMG Transmit Data to........ "_I)
"RTN","KMPDSSD",108,0)
 ..F  S I=$O(Z(I)) Q:I=""  S LN=LN+1 D SET^VALM10(LN,$J(" ",32)_I)
"RTN","KMPDSSD",109,0)
 .S LN=LN+1
"RTN","KMPDSSD",110,0)
 .D SET^VALM10(LN,"")
"RTN","KMPDSSD",111,0)
 ;
"RTN","KMPDSSD",112,0)
 Q
"RTN","KMPDSSD",113,0)
 ;
"RTN","KMPDSSD",114,0)
FILES ;-- file data
"RTN","KMPDSSD",115,0)
 ;
"RTN","KMPDSSD",116,0)
 N TEXT,X
"RTN","KMPDSSD",117,0)
 ;
"RTN","KMPDSSD",118,0)
 S LN=LN+1
"RTN","KMPDSSD",119,0)
 D SET^VALM10(LN,$J(" ",35)_" # of     Oldest     Recent")
"RTN","KMPDSSD",120,0)
 S LN=LN+1
"RTN","KMPDSSD",121,0)
 D SET^VALM10(LN,"   File"_$J(" ",28)_"Entries    Date       Date")
"RTN","KMPDSSD",122,0)
 S LN=LN+1
"RTN","KMPDSSD",123,0)
 D SET^VALM10(LN,"   -------------------------       -------   -------   -------")
"RTN","KMPDSSD",124,0)
 ;
"RTN","KMPDSSD",125,0)
 ; if hl7
"RTN","KMPDSSD",126,0)
 I KMPDNMSP="H" D 
"RTN","KMPDSSD",127,0)
 .; file name
"RTN","KMPDSSD",128,0)
 .S TEXT="   8973.1 - "_$P($G(^DIC(8973.1,0)),U)
"RTN","KMPDSSD",129,0)
 .; number of entries
"RTN","KMPDSSD",130,0)
 .S TEXT=TEXT_$J(" ",35-$L(TEXT))_$J($FN($P($G(^KMPD(8973.1,0)),U,4),",",0),7)
"RTN","KMPDSSD",131,0)
 .; oldest date
"RTN","KMPDSSD",132,0)
 .S X=$$FMTE^XLFDT(+$O(^KMPD(8973.1,"B",0)),2)
"RTN","KMPDSSD",133,0)
 .S X=$S(X=0:"---",1:X)
"RTN","KMPDSSD",134,0)
 .S TEXT=TEXT_$J(" ",45-$L(TEXT))_X
"RTN","KMPDSSD",135,0)
 .; current date
"RTN","KMPDSSD",136,0)
 .S X=$$FMTE^XLFDT(+$O(^KMPD(8973.1,"B","A"),-1),2)
"RTN","KMPDSSD",137,0)
 .S X=$S(X=0:"---",1:X)
"RTN","KMPDSSD",138,0)
 .S TEXT=TEXT_$J(" ",55-$L(TEXT))_X
"RTN","KMPDSSD",139,0)
 .S LN=LN+1
"RTN","KMPDSSD",140,0)
 .D SET^VALM10(LN,TEXT)
"RTN","KMPDSSD",141,0)
 ;
"RTN","KMPDSSD",142,0)
 ; if timing data
"RTN","KMPDSSD",143,0)
 I KMPDNMSP="T" D 
"RTN","KMPDSSD",144,0)
 .; file name
"RTN","KMPDSSD",145,0)
 .S TEXT="   8973.2 - "_$P($G(^DIC(8973.2,0)),U)
"RTN","KMPDSSD",146,0)
 .; number of entries
"RTN","KMPDSSD",147,0)
 .S TEXT=TEXT_$J(" ",35-$L(TEXT))_$J($FN($P($G(^KMPD(8973.2,0)),U,4),",",0),7)
"RTN","KMPDSSD",148,0)
 .; oldest date
"RTN","KMPDSSD",149,0)
 .S X=$$FMTE^XLFDT($P(+$O(^KMPD(8973.2,"C",0)),"."),2)
"RTN","KMPDSSD",150,0)
 .S X=$S(X=0:"---",1:X)
"RTN","KMPDSSD",151,0)
 .S TEXT=TEXT_$J(" ",45-$L(TEXT))_X
"RTN","KMPDSSD",152,0)
 .; most recent date
"RTN","KMPDSSD",153,0)
 .S X=$$FMTE^XLFDT($P(+$O(^KMPD(8973.2,"ASTDTTM","A"),-1),"."),2)
"RTN","KMPDSSD",154,0)
 .S X=$S(X=0:"---",1:X)
"RTN","KMPDSSD",155,0)
 .S TEXT=TEXT_$J(" ",55-$L(TEXT))_X
"RTN","KMPDSSD",156,0)
 .S LN=LN+1
"RTN","KMPDSSD",157,0)
 .D SET^VALM10(LN,TEXT)
"RTN","KMPDSSD",158,0)
 ;
"RTN","KMPDSSD",159,0)
 Q
"RTN","KMPDSSD",160,0)
 ;
"RTN","KMPDSSD",161,0)
LEGEND ;-- display legend
"RTN","KMPDSSD",162,0)
 ;
"RTN","KMPDSSD",163,0)
 S LN=LN+1
"RTN","KMPDSSD",164,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSD",165,0)
 S LN=LN+1
"RTN","KMPDSSD",166,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSD",167,0)
 I KMPDNMSP="H" D 
"RTN","KMPDSSD",168,0)
 .S LN=LN+1
"RTN","KMPDSSD",169,0)
 .D SET^VALM10(LN,"     HL7 = Health Level Seven")
"RTN","KMPDSSD",170,0)
 I KMPDNMSP="T" D 
"RTN","KMPDSSD",171,0)
 .S LN=LN+1
"RTN","KMPDSSD",172,0)
 .D SET^VALM10(LN,"     TMG = Timing Data")
"RTN","KMPDSSD",173,0)
 ;
"RTN","KMPDSSD",174,0)
 Q
"RTN","KMPDSSD",175,0)
 ;
"RTN","KMPDSSD",176,0)
OPT(KMPDOPT) ;-- option data
"RTN","KMPDSSD",177,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSSD",178,0)
 ; KMPDOPT... Option name - free text
"RTN","KMPDSSD",179,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSSD",180,0)
 ;
"RTN","KMPDSSD",181,0)
 Q:$G(KMPDOPT)=""
"RTN","KMPDSSD",182,0)
 ;
"RTN","KMPDSSD",183,0)
 N DIR,DOW,FREQ,KMPDX,KMPDX1,OPTEXT,STATUS,TEXT,X,Y
"RTN","KMPDSSD",184,0)
 ;
"RTN","KMPDSSD",185,0)
 S STATUS=$$TSKSTAT^KMPDUTL1(KMPDOPT)
"RTN","KMPDSSD",186,0)
 ;
"RTN","KMPDSSD",187,0)
 ; option not in system
"RTN","KMPDSSD",188,0)
 ;Q:(+STATUS)=3
"RTN","KMPDSSD",189,0)
 ;
"RTN","KMPDSSD",190,0)
 S OPTEXT=""
"RTN","KMPDSSD",191,0)
 S:KMPDOPT="KMPD BACKGROUND DRIVER" OPTEXT="CM Tools Background Driver"
"RTN","KMPDSSD",192,0)
 S:KMPDOPT="KMPR BACKGROUND DRIVER" OPTEXT="RUM Background Driver"
"RTN","KMPDSSD",193,0)
 S:KMPDOPT="KMPS SAGG REPORT" OPTEXT="SAGG Master Background Task"
"RTN","KMPDSSD",194,0)
 ;
"RTN","KMPDSSD",195,0)
 ; if background option is missing
"RTN","KMPDSSD",196,0)
 I (+STATUS)=3 D  Q
"RTN","KMPDSSD",197,0)
 .S LN=LN+1
"RTN","KMPDSSD",198,0)
 .D SET^VALM10(LN,"   The "_OPTEXT_" option ["_KMPDOPT_" is missing!")
"RTN","KMPDSSD",199,0)
 ;
"RTN","KMPDSSD",200,0)
 ; background option is present
"RTN","KMPDSSD",201,0)
 ;
"RTN","KMPDSSD",202,0)
 ; if cm tools and not scheduled or no task id
"RTN","KMPDSSD",203,0)
 I KMPDOPT="KMPD BACKGROUND DRIVER"&(+(STATUS)=3) D 
"RTN","KMPDSSD",204,0)
 .D SET^VALM10(LN,"   The "_OPTEXT_" ["_KMPDOPT_"] is not scheduled")
"RTN","KMPDSSD",205,0)
 .S LN=LN+1
"RTN","KMPDSSD",206,0)
 .D SET^VALM10(LN,"   to run!"),SET^VALM10(LN,"")
"RTN","KMPDSSD",207,0)
 ;
"RTN","KMPDSSD",208,0)
 ; if not scheduled or no task id
"RTN","KMPDSSD",209,0)
 I KMPDOPT="KMPR BACKGROUND DRIVER"&(+(STATUS)=3) D 
"RTN","KMPDSSD",210,0)
 .D SET^VALM10(LN,"   The "_OPTEXT_" ["_KMPDOPT_"] is not scheduled")
"RTN","KMPDSSD",211,0)
 .S LN=LN+1
"RTN","KMPDSSD",212,0)
 .D SET^VALM10(LN,"   to run!"),SET^VALM10(LN,"")
"RTN","KMPDSSD",213,0)
 ;
"RTN","KMPDSSD",214,0)
 ; check status again in case it has been requeued
"RTN","KMPDSSD",215,0)
 S STATUS=$$TSKSTAT^KMPDUTL1(KMPDOPT)
"RTN","KMPDSSD",216,0)
 ;
"RTN","KMPDSSD",217,0)
 ; not scheduled
"RTN","KMPDSSD",218,0)
 I (+STATUS)=1 S LN=LN+1 D SET^VALM10(LN,"   The "_OPTEXT_" ["_KMPDOPT_"] is not scheduled") Q
"RTN","KMPDSSD",219,0)
 ;
"RTN","KMPDSSD",220,0)
 S TEXT="   "_OPTEXT
"RTN","KMPDSSD",221,0)
 S TEXT=TEXT_$$REPEAT^XLFSTR(".",31-$L(TEXT))
"RTN","KMPDSSD",222,0)
 S TEXT=TEXT_" "_KMPDOPT
"RTN","KMPDSSD",223,0)
 S LN=LN+1
"RTN","KMPDSSD",224,0)
 D SET^VALM10(LN,TEXT)
"RTN","KMPDSSD",225,0)
 S LN=LN+1
"RTN","KMPDSSD",226,0)
 D SET^VALM10(LN,"   QUEUED TO RUN AT............ "_$P(STATUS,U,3))
"RTN","KMPDSSD",227,0)
 S LN=LN+1
"RTN","KMPDSSD",228,0)
 D SET^VALM10(LN,"   RESCHEDULING FREQUENCY...... "_$P(STATUS,U,5))
"RTN","KMPDSSD",229,0)
 ;
"RTN","KMPDSSD",230,0)
 ; check to see if SAGG is not running on the weekend (Fri-Sun)
"RTN","KMPDSSD",231,0)
 S DOW=$P(STATUS,U,4),FREQ=$P(STATUS,U,6)
"RTN","KMPDSSD",232,0)
 I KMPDOPT="KMPS SAGG REPORT" I (DOW<0)!((DOW>0)&(DOW<5))!(FREQ<0)!(FREQ'="28D") D 
"RTN","KMPDSSD",233,0)
 .S LN=LN+1
"RTN","KMPDSSD",234,0)
 .D SET^VALM10(LN,"                                ***It is STRONGLY recommended that this job be")
"RTN","KMPDSSD",235,0)
 .S LN=LN+1
"RTN","KMPDSSD",236,0)
 .D SET^VALM10(LN,"                                   rescheduled to run over the weekend every 28 days.***")
"RTN","KMPDSSD",237,0)
 ;
"RTN","KMPDSSD",238,0)
 S LN=LN+1
"RTN","KMPDSSD",239,0)
 D SET^VALM10(LN,"   TASK ID..................... "_$P(STATUS,U,7))
"RTN","KMPDSSD",240,0)
 ; user info.
"RTN","KMPDSSD",241,0)
 S TEXT="   QUEUED BY................... "_$P(STATUS,U,8)
"RTN","KMPDSSD",242,0)
 ; user
"RTN","KMPDSSD",243,0)
 S TEXT=TEXT_"  ("_$S($P(STATUS,U,9)["NOT ACTIVE":"Not Active - ",1:"Active")_")"
"RTN","KMPDSSD",244,0)
 S LN=LN+1
"RTN","KMPDSSD",245,0)
 D SET^VALM10(LN,TEXT)
"RTN","KMPDSSD",246,0)
 ; if user is not active
"RTN","KMPDSSD",247,0)
 I KMPDOPT="KMPS SAGG REPORT" I $P(STATUS,U,9)="NOT ACTIVE" D 
"RTN","KMPDSSD",248,0)
 .S LN=LN+1
"RTN","KMPDSSD",249,0)
 .D SET^VALM10(LN,"                                ***The user that originally queued this task is no ")
"RTN","KMPDSSD",250,0)
 .S LN=LN+1
"RTN","KMPDSSD",251,0)
 .D SET^VALM10(LN,"                                   longer active. Therefore the 'SAGG Master Background")
"RTN","KMPDSSD",252,0)
 .S LN=LN+1
"RTN","KMPDSSD",253,0)
 .D SET^VALM10(LN,"                                   Task' [KMPS SAGG REPORT] must be scheduled again by")
"RTN","KMPDSSD",254,0)
 .S LN=LN=1
"RTN","KMPDSSD",255,0)
 .D SET^VALM10(LN,"                                   an active user.***")
"RTN","KMPDSSD",256,0)
 ;
"RTN","KMPDSSD",257,0)
 Q
"RTN","KMPDSSD1")
0^12^B11459921^B11459921
"RTN","KMPDSSD1",1,0)
KMPDSSD1 ;OAK/RAK - CM Tools Status ;5/1/07  15:07
"RTN","KMPDSSD1",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDSSD1",3,0)
 ;
"RTN","KMPDSSD1",4,0)
CPU ;-- cpu/node data
"RTN","KMPDSSD1",5,0)
 ;
"RTN","KMPDSSD1",6,0)
 N COUNT,DATA,I,LEN,TEXT
"RTN","KMPDSSD1",7,0)
 ;
"RTN","KMPDSSD1",8,0)
 D CPUGET^KMPDUTL6(.DATA)
"RTN","KMPDSSD1",9,0)
 Q:'$D(DATA)
"RTN","KMPDSSD1",10,0)
 S LN=LN+1
"RTN","KMPDSSD1",11,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSD1",12,0)
 S TEXT="   Node/CPU Data............... "
"RTN","KMPDSSD1",13,0)
 S (COUNT,I,LEN)=0
"RTN","KMPDSSD1",14,0)
 F  S I=$O(DATA(I)) Q:'I  D 
"RTN","KMPDSSD1",15,0)
 .S COUNT=COUNT+1,DATA=$G(DATA(I,0)) Q:DATA=""
"RTN","KMPDSSD1",16,0)
 .; length of node name
"RTN","KMPDSSD1",17,0)
 .S:'LEN LEN=$L($P(DATA,U))+2
"RTN","KMPDSSD1",18,0)
 .S TEXT=$S(COUNT=1:TEXT,1:$J(" ",32))_$P(DATA,U)
"RTN","KMPDSSD1",19,0)
 .S TEXT=TEXT_$J(" ",32-$L(TEXT)+LEN)_$P(DATA,U,2)_" ("_$P(DATA,U,3)_")"
"RTN","KMPDSSD1",20,0)
 .S LN=LN+1
"RTN","KMPDSSD1",21,0)
 .D SET^VALM10(LN,TEXT)
"RTN","KMPDSSD1",22,0)
 ;
"RTN","KMPDSSD1",23,0)
 Q
"RTN","KMPDSSD1",24,0)
 ;
"RTN","KMPDSSD1",25,0)
MGRP ;-- mail group members
"RTN","KMPDSSD1",26,0)
 ;
"RTN","KMPDSSD1",27,0)
 N MEMBER,MEMBER1,NAME,NMARRY
"RTN","KMPDSSD1",28,0)
 ;
"RTN","KMPDSSD1",29,0)
 S IEN=$O(^XMB(3.8,"B","KMP-CAPMAN",0)) Q:'IEN
"RTN","KMPDSSD1",30,0)
 ;
"RTN","KMPDSSD1",31,0)
 S LN=LN+1
"RTN","KMPDSSD1",32,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSD1",33,0)
 ;
"RTN","KMPDSSD1",34,0)
 S TEXT="   KMP-CAPMAN Mail Group......."
"RTN","KMPDSSD1",35,0)
 ; check MEMBER field #2
"RTN","KMPDSSD1",36,0)
 S MEMBER=0
"RTN","KMPDSSD1",37,0)
 F  S MEMBER=$O(^XMB(3.8,IEN,1,"B",MEMBER)) Q:'MEMBER  D
"RTN","KMPDSSD1",38,0)
 .S NAME=$P($G(^VA(200,MEMBER,0)),U)
"RTN","KMPDSSD1",39,0)
 .I NAME'="" S NMARRY(NAME)=MEMBER
"RTN","KMPDSSD1",40,0)
 ; remote members
"RTN","KMPDSSD1",41,0)
 S MEMBER="",MEMBER1=0
"RTN","KMPDSSD1",42,0)
 F  S MEMBER=$O(^XMB(3.8,IEN,6,"B",MEMBER)) Q:MEMBER=""  D 
"RTN","KMPDSSD1",43,0)
 .S MEMBER1=0
"RTN","KMPDSSD1",44,0)
 .F  S MEMBER1=$O(^XMB(3.8,IEN,6,"B",MEMBER,MEMBER1)) Q:'MEMBER1  D 
"RTN","KMPDSSD1",45,0)
 ..S NAME=$P($G(^XMB(3.8,IEN,6,MEMBER1,0)),U)
"RTN","KMPDSSD1",46,0)
 ..I NAME'="" S NMARRY(NAME)=MEMBER
"RTN","KMPDSSD1",47,0)
 ;
"RTN","KMPDSSD1",48,0)
 I '$D(NMARRY) S LN=LN+1 D SET^VALM10(LN,TEXT_" No Users") Q
"RTN","KMPDSSD1",49,0)
 ;
"RTN","KMPDSSD1",50,0)
 S NAME=""
"RTN","KMPDSSD1",51,0)
 F  S NAME=$O(NMARRY(NAME)) Q:NAME=""  D
"RTN","KMPDSSD1",52,0)
 .S MEMBER=NMARRY(NAME)
"RTN","KMPDSSD1",53,0)
 .S TEXT=TEXT_$J(" ",32-$L(TEXT))_NAME
"RTN","KMPDSSD1",54,0)
 .; if not a remote user
"RTN","KMPDSSD1",55,0)
 .I NAME'["@" D 
"RTN","KMPDSSD1",56,0)
 ..S MEMBER=$$ACTIVE^XUSER(MEMBER) I '+MEMBER S TEXT=TEXT_" ("_$P(MEMBER,U,2)_")"
"RTN","KMPDSSD1",57,0)
 .S LN=LN+1
"RTN","KMPDSSD1",58,0)
 .D SET^VALM10(LN,TEXT)
"RTN","KMPDSSD1",59,0)
 .S TEXT=""
"RTN","KMPDSSD1",60,0)
 ;
"RTN","KMPDSSD1",61,0)
 Q
"RTN","KMPDSSD1",62,0)
 ;
"RTN","KMPDSSD1",63,0)
ROUCHK(KMPDPKG) ;--display routine version info
"RTN","KMPDSSD1",64,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDSSD1",65,0)
 ; KMPDPKG... CM Package:
"RTN","KMPDSSD1",66,0)
 ;            "D" - CM Tools
"RTN","KMPDSSD1",67,0)
 ;            "R" - RUM
"RTN","KMPDSSD1",68,0)
 ;            "S" - SAGG
"RTN","KMPDSSD1",69,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDSSD1",70,0)
 ;
"RTN","KMPDSSD1",71,0)
 Q:$G(KMPDPKG)=""
"RTN","KMPDSSD1",72,0)
 Q:KMPDPKG'="D"&(KMPDPKG'="R")&(KMPDPKG'="S")
"RTN","KMPDSSD1",73,0)
 ;
"RTN","KMPDSSD1",74,0)
 N I,TEXT,X
"RTN","KMPDSSD1",75,0)
 ;
"RTN","KMPDSSD1",76,0)
 ; routine check
"RTN","KMPDSSD1",77,0)
 D VERPTCH^KMPDUTL1(KMPDPKG,.X)
"RTN","KMPDSSD1",78,0)
 S LN=LN+1
"RTN","KMPDSSD1",79,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSD1",80,0)
 S LN=LN+1
"RTN","KMPDSSD1",81,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSD1",82,0)
 S TEXT="   "_$S(KMPDPKG="D":"CM TOOLS",KMPDPKG="R":"RUM",1:"SAGG")_" routines"
"RTN","KMPDSSD1",83,0)
 S TEXT=TEXT_$$REPEAT^XLFSTR(".",31-$L(TEXT))
"RTN","KMPDSSD1",84,0)
 I '$P($G(X(0)),U,3) S LN=LN+1 D SET^VALM10(LN,TEXT_" "_+X(0)_" Routines - No Problems") Q
"RTN","KMPDSSD1",85,0)
 S LN=LN+1
"RTN","KMPDSSD1",86,0)
 D SET^VALM10(LN,TEXT)
"RTN","KMPDSSD1",87,0)
 S LN=LN+1
"RTN","KMPDSSD1",88,0)
 D SET^VALM10(LN,$J(" ",20)_"Current Version"_$J(" ",20)_"Should be")
"RTN","KMPDSSD1",89,0)
 S I=0 F  S I=$O(X(I)) Q:I=""  I $P(X(I),U) D 
"RTN","KMPDSSD1",90,0)
 .S TEXT="   "_I
"RTN","KMPDSSD1",91,0)
 .S TEXT=TEXT_$J(" ",20-$L(TEXT))_$P(X(I),U,4)
"RTN","KMPDSSD1",92,0)
 .S:$P(X(I),U,5)]"" TEXT=TEXT_" - "_$P(X(I),U,5)
"RTN","KMPDSSD1",93,0)
 .S TEXT=TEXT_$J(" ",55-$L(TEXT))_$P(X(I),U,2)
"RTN","KMPDSSD1",94,0)
 .S:$P(X(I),U,3)]"" TEXT=TEXT_" - "_$P(X(I),U,3)
"RTN","KMPDSSD1",95,0)
 .S LN=LN+1
"RTN","KMPDSSD1",96,0)
 .D SET^VALM10(LN,TEXT)
"RTN","KMPDSSD1",97,0)
 ;
"RTN","KMPDSSD1",98,0)
 Q
"RTN","KMPDSSD1",99,0)
 ;
"RTN","KMPDSSD1",100,0)
PKG(KMPDNMSP) ;-- extrinsic function - return package name
"RTN","KMPDSSD1",101,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSSD1",102,0)
 ; KMPDNMSP... H - HL7
"RTN","KMPDSSD1",103,0)
 ;             R - RUM
"RTN","KMPDSSD1",104,0)
 ;             S - SAGG
"RTN","KMPDSSD1",105,0)
 ;             T - Timing
"RTN","KMPDSSD1",106,0)
 ;
"RTN","KMPDSSD1",107,0)
 ; Return: Package name
"RTN","KMPDSSD1",108,0)
 ;         "" if not found
"RTN","KMPDSSD1",109,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSSD1",110,0)
 ;
"RTN","KMPDSSD1",111,0)
 Q:$G(KMPDNMSP)="" ""
"RTN","KMPDSSD1",112,0)
 ;
"RTN","KMPDSSD1",113,0)
 N IEN,NMSP
"RTN","KMPDSSD1",114,0)
 S NMSP="KMP"_$S(KMPDNMSP="H"!(KMPDNMSP="T"):"D",1:KMPDNMSP)
"RTN","KMPDSSD1",115,0)
 S IEN=$O(^DIC(9.4,"C",NMSP,0))
"RTN","KMPDSSD1",116,0)
 Q $S(IEN:$P($G(^DIC(9.4,+IEN,0)),U),1:"")
"RTN","KMPDSSR")
0^13^B16217057^B16217057
"RTN","KMPDSSR",1,0)
KMPDSSR ;OAK/RAK - Resource Usage Monitor Status ;2/14/05  13:50
"RTN","KMPDSSR",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDSSR",3,0)
 ;
"RTN","KMPDSSR",4,0)
FORMAT(KMPRLN) ;-format text for display
"RTN","KMPDSSR",5,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSSR",6,0)
 ; KMPRLN.... return number of lines - called by referrence
"RTN","KMPDSSR",7,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSSR",8,0)
 ;
"RTN","KMPDSSR",9,0)
 N CHECK,LN,VERSION S LN=0 K TMP
"RTN","KMPDSSR",10,0)
 ;
"RTN","KMPDSSR",11,0)
 ; check environment
"RTN","KMPDSSR",12,0)
 ;D ENVCHECK^KMPRUTL1(.CHECK,1)
"RTN","KMPDSSR",13,0)
 ; if RUM turned on but background job not queued ask user if they want
"RTN","KMPDSSR",14,0)
 ; to queue it at this time.
"RTN","KMPDSSR",15,0)
 ;D:(+CHECK)=200 ENVCHECK^KMPRUTL1(.CHECK)
"RTN","KMPDSSR",16,0)
 ;
"RTN","KMPDSSR",17,0)
 ; if no kmprutl routine
"RTN","KMPDSSR",18,0)
 S X="KMPRUTL" X ^%ZOSF("TEST") I '$T D  Q
"RTN","KMPDSSR",19,0)
 .S LN=LN+1
"RTN","KMPDSSR",20,0)
 .D SET^VALM10(LN,"The CAPACITY MANAGEMENT - RUM package is not installed!")
"RTN","KMPDSSR",21,0)
 ;
"RTN","KMPDSSR",22,0)
 ; option data
"RTN","KMPDSSR",23,0)
 D OPT^KMPDSSD("KMPR BACKGROUND DRIVER")
"RTN","KMPDSSR",24,0)
 ;
"RTN","KMPDSSR",25,0)
 ; background data
"RTN","KMPDSSR",26,0)
 D BKGRND
"RTN","KMPDSSR",27,0)
 ;
"RTN","KMPDSSR",28,0)
 ; file data
"RTN","KMPDSSR",29,0)
 D FILES
"RTN","KMPDSSR",30,0)
 ;
"RTN","KMPDSSR",31,0)
 ; routine version check
"RTN","KMPDSSR",32,0)
 D ROUCHK^KMPDSSD1("R")
"RTN","KMPDSSR",33,0)
 ;
"RTN","KMPDSSR",34,0)
 ; node/cpu data
"RTN","KMPDSSR",35,0)
 D CPU^KMPDSSD1
"RTN","KMPDSSR",36,0)
 ;
"RTN","KMPDSSR",37,0)
 ; mail group members
"RTN","KMPDSSR",38,0)
 D MGRP^KMPDSSD1
"RTN","KMPDSSR",39,0)
 ;
"RTN","KMPDSSR",40,0)
 ; legend
"RTN","KMPDSSR",41,0)
 D LEGEND
"RTN","KMPDSSR",42,0)
 ;
"RTN","KMPDSSR",43,0)
 S KMPRLN=LN
"RTN","KMPDSSR",44,0)
 ;
"RTN","KMPDSSR",45,0)
 Q
"RTN","KMPDSSR",46,0)
 ;
"RTN","KMPDSSR",47,0)
BKGRND ; rum background info
"RTN","KMPDSSR",48,0)
 ;
"RTN","KMPDSSR",49,0)
 N DATA,DELTA,ENDT,I,STAT,STDT,Z
"RTN","KMPDSSR",50,0)
 ;
"RTN","KMPDSSR",51,0)
 S LN=LN+1
"RTN","KMPDSSR",52,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSR",53,0)
 S LN=LN+1
"RTN","KMPDSSR",54,0)
 D SET^VALM10(LN,"   Temporary collection global..")
"RTN","KMPDSSR",55,0)
 S LN=LN+1
"RTN","KMPDSSR",56,0)
 D SET^VALM10(LN,"   ^KMPTMP(""KMPR"").............. "_$S('$D(^KMPTMP("KMPR")):"NOT ",1:"")_"Present")
"RTN","KMPDSSR",57,0)
 S LN=LN+1
"RTN","KMPDSSR",58,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSR",59,0)
 ;
"RTN","KMPDSSR",60,0)
 D PARAMS^KMPDUT("DATA") Q:'$D(DATA)
"RTN","KMPDSSR",61,0)
 S DATA(2)=$G(DATA(2))
"RTN","KMPDSSR",62,0)
 S STDT=$P(DATA(2),U,5),ENDT=$P(DATA(2),U,6),DELTA=$P(DATA(2),U,7)
"RTN","KMPDSSR",63,0)
 S:$E(DELTA)=" " $E(DELTA)="0"
"RTN","KMPDSSR",64,0)
 S LN=LN+1
"RTN","KMPDSSR",65,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSR",66,0)
 S LN=LN+1
"RTN","KMPDSSR",67,0)
 D SET^VALM10(LN,"   RUM Dly Bckgrnd Last Start... "_$$FMTE^XLFDT(STDT))
"RTN","KMPDSSR",68,0)
 S LN=LN+1
"RTN","KMPDSSR",69,0)
 D SET^VALM10(LN,"   RUM Dly Bckgrnd Last Stop.... "_$$FMTE^XLFDT(ENDT))
"RTN","KMPDSSR",70,0)
 S LN=LN+1
"RTN","KMPDSSR",71,0)
 D SET^VALM10(LN,"   RUM Dly Bkgrnd Total Time.... "_DELTA)
"RTN","KMPDSSR",72,0)
 S LN=LN+1
"RTN","KMPDSSR",73,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSR",74,0)
 S LN=LN+1
"RTN","KMPDSSR",75,0)
 S STDT=$P(DATA(2),U,8),ENDT=$P(DATA(2),U,9),DELTA=$P(DATA(2),U,10)
"RTN","KMPDSSR",76,0)
 S:$E(DELTA)=" " $E(DELTA)="0"
"RTN","KMPDSSR",77,0)
 D SET^VALM10(LN,"   RUM Wkly Backgrnd Last Start. "_$$FMTE^XLFDT(STDT))
"RTN","KMPDSSR",78,0)
 S LN=LN+1
"RTN","KMPDSSR",79,0)
 D SET^VALM10(LN,"   RUM Wkly Bckgrnd Last Stop... "_$$FMTE^XLFDT(ENDT))
"RTN","KMPDSSR",80,0)
 S LN=LN+1
"RTN","KMPDSSR",81,0)
 D SET^VALM10(LN,"   RUM Wkly Bckgrnd Total Time.. "_DELTA)
"RTN","KMPDSSR",82,0)
 S LN=LN+1
"RTN","KMPDSSR",83,0)
 D SET^VALM10(LN,"   RUM Purge Data After......... "_$P(DATA(2),U,11)_" weeks")
"RTN","KMPDSSR",84,0)
 D TRANSTO^KMPDUTL7(1,2,.Z)
"RTN","KMPDSSR",85,0)
 I '$D(Z) D SET^VALM10(LN,"   RUM Transmit Data to......... <>") S LN=LN+1
"RTN","KMPDSSR",86,0)
 E  D 
"RTN","KMPDSSR",87,0)
 .S I=$O(Z("")) I I'="" S LN=LN+1 D SET^VALM10(LN,"   RUM Transmit Data to......... "_I)
"RTN","KMPDSSR",88,0)
 .F  S I=$O(Z(I)) Q:I=""  S LN=LN+1 D SET^VALM10(LN,$J(" ",33)_I)
"RTN","KMPDSSR",89,0)
 S LN=LN+1
"RTN","KMPDSSR",90,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSR",91,0)
 ;
"RTN","KMPDSSR",92,0)
 Q
"RTN","KMPDSSR",93,0)
 ;
"RTN","KMPDSSR",94,0)
FILES ;-- file data
"RTN","KMPDSSR",95,0)
 ;
"RTN","KMPDSSR",96,0)
 N TEXT,X
"RTN","KMPDSSR",97,0)
 ;
"RTN","KMPDSSR",98,0)
 S LN=LN+1
"RTN","KMPDSSR",99,0)
 D SET^VALM10(LN,$J(" ",35)_" # of     Oldest     Recent")
"RTN","KMPDSSR",100,0)
 S LN=LN+1
"RTN","KMPDSSR",101,0)
 D SET^VALM10(LN,"   File"_$J(" ",28)_"Entries    Date       Date")
"RTN","KMPDSSR",102,0)
 S LN=LN+1
"RTN","KMPDSSR",103,0)
 D SET^VALM10(LN,"   -------------------------       -------   -------   -------")
"RTN","KMPDSSR",104,0)
 ; file name
"RTN","KMPDSSR",105,0)
 S TEXT="   8971.1-"_$P($G(^DIC(8971.1,0)),U)
"RTN","KMPDSSR",106,0)
 ; number of entries
"RTN","KMPDSSR",107,0)
 S TEXT=TEXT_$J(" ",35-$L(TEXT))_$J($FN($P($G(^KMPR(8971.1,0)),U,4),",",0),7)
"RTN","KMPDSSR",108,0)
 ; oldest date
"RTN","KMPDSSR",109,0)
 S X=$$FMTE^XLFDT(+$O(^KMPR(8971.1,"B",0)),2)
"RTN","KMPDSSR",110,0)
 S X=$S(X=0:"---",1:X)
"RTN","KMPDSSR",111,0)
 S TEXT=TEXT_$J(" ",45-$L(TEXT))_X
"RTN","KMPDSSR",112,0)
 ; current date
"RTN","KMPDSSR",113,0)
 S X=$$FMTE^XLFDT(+$O(^KMPR(8971.1,"B","A"),-1),2)
"RTN","KMPDSSR",114,0)
 S X=$S(X=0:"---",1:X)
"RTN","KMPDSSR",115,0)
 S TEXT=TEXT_$J(" ",55-$L(TEXT))_X
"RTN","KMPDSSR",116,0)
 S LN=LN+1
"RTN","KMPDSSR",117,0)
 D SET^VALM10(LN,TEXT)
"RTN","KMPDSSR",118,0)
 ;
"RTN","KMPDSSR",119,0)
 Q
"RTN","KMPDSSR",120,0)
 ;
"RTN","KMPDSSR",121,0)
LEGEND ;-- display legend
"RTN","KMPDSSR",122,0)
 ;
"RTN","KMPDSSR",123,0)
 S LN=LN+1 D SET^VALM10(LN,"")
"RTN","KMPDSSR",124,0)
 S LN=LN+1 D SET^VALM10(LN,"")
"RTN","KMPDSSR",125,0)
 S LN=LN+1
"RTN","KMPDSSR",126,0)
 D SET^VALM10(LN,"     RUM = Resource Usage Monitor")
"RTN","KMPDSSR",127,0)
 ;
"RTN","KMPDSSR",128,0)
 Q
"RTN","KMPDSSS")
0^14^B33896326^B33896326
"RTN","KMPDSSS",1,0)
KMPDSSS ;OAK/RAK - CP Status - SAGG ;5/1/07  15:07
"RTN","KMPDSSS",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDSSS",3,0)
 ;
"RTN","KMPDSSS",4,0)
 ;
"RTN","KMPDSSS",5,0)
FORMAT(KMPDLN) ;-format text for dislay
"RTN","KMPDSSS",6,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSSS",7,0)
 ; KMPDLN.... return number of lines - called by reference
"RTN","KMPDSSS",8,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDSSS",9,0)
 ;
"RTN","KMPDSSS",10,0)
 Q:$G(KMPDNMSP)=""
"RTN","KMPDSSS",11,0)
 ;
"RTN","KMPDSSS",12,0)
 N LN,X S LN=0 K TMP
"RTN","KMPDSSS",13,0)
 ;
"RTN","KMPDSSS",14,0)
 ; if no kmpsutl routine
"RTN","KMPDSSS",15,0)
 S X="KMPSUTL" X ^%ZOSF("TEST") I '$T D  Q
"RTN","KMPDSSS",16,0)
 .S LN=LN+1
"RTN","KMPDSSS",17,0)
 .D SET^VALM10(LN,"The SAGG Package is not installed!")
"RTN","KMPDSSS",18,0)
 ;
"RTN","KMPDSSS",19,0)
 ; status
"RTN","KMPDSSS",20,0)
 D STATUS
"RTN","KMPDSSS",21,0)
 ;
"RTN","KMPDSSS",22,0)
 ; option data
"RTN","KMPDSSS",23,0)
 D OPT^KMPDSSD("KMPS SAGG REPORT")
"RTN","KMPDSSS",24,0)
 ;
"RTN","KMPDSSS",25,0)
 ; bacground data
"RTN","KMPDSSS",26,0)
 D BKGRND
"RTN","KMPDSSS",27,0)
 ;
"RTN","KMPDSSS",28,0)
 ; file data
"RTN","KMPDSSS",29,0)
 D FILES
"RTN","KMPDSSS",30,0)
 ;
"RTN","KMPDSSS",31,0)
 ; routine version check
"RTN","KMPDSSS",32,0)
 D ROUCHK^KMPDSSD1("S")
"RTN","KMPDSSS",33,0)
 ;
"RTN","KMPDSSS",34,0)
 ; node/cpu data
"RTN","KMPDSSS",35,0)
 D CPU^KMPDSSD1
"RTN","KMPDSSS",36,0)
 ;
"RTN","KMPDSSS",37,0)
 ; mail group member
"RTN","KMPDSSS",38,0)
 D MGRP^KMPDSSD1
"RTN","KMPDSSS",39,0)
 ;
"RTN","KMPDSSS",40,0)
 ; legend
"RTN","KMPDSSS",41,0)
 D LEGEND
"RTN","KMPDSSS",42,0)
 ;
"RTN","KMPDSSS",43,0)
 S KMPDLN=LN
"RTN","KMPDSSS",44,0)
 ;
"RTN","KMPDSSS",45,0)
 Q
"RTN","KMPDSSS",46,0)
 ;
"RTN","KMPDSSS",47,0)
BKGRND ;- background
"RTN","KMPDSSS",48,0)
 ;
"RTN","KMPDSSS",49,0)
 N CURSTAT,LOC,OPT,PLTFRM,PROD,SITENUM,STAT,TEXT,VOL,VOLDA
"RTN","KMPDSSS",50,0)
 ;
"RTN","KMPDSSS",51,0)
 S SITENUM=$P($$SITE^VASITE(),U,3) Q:'SITENUM
"RTN","KMPDSSS",52,0)
 S OPT="KMPS SAGG REPORT",STAT=$$TSKSTAT^KMPSUTL1(OPT),CURSTAT=$$CURSTAT^KMPDUTL1(STAT)
"RTN","KMPDSSS",53,0)
 ;
"RTN","KMPDSSS",54,0)
 S LN=LN+1
"RTN","KMPDSSS",55,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSS",56,0)
 S LN=LN+1
"RTN","KMPDSSS",57,0)
 D SET^VALM10(LN,"   Temporary collection global.")
"RTN","KMPDSSS",58,0)
 S LN=LN+1
"RTN","KMPDSSS",59,0)
 D SET^VALM10(LN,"   ^XTMP(""KMPS"")............... "_$S('$D(^XTMP("KMPS",SITENUM,0)):"NOT ",1:"")_"Present")
"RTN","KMPDSSS",60,0)
 ;
"RTN","KMPDSSS",61,0)
 S PLTFRM=$$MPLTF^KMPDUTL1,PROD=$P(^%ZOSF("PROD"),",")
"RTN","KMPDSSS",62,0)
 I PLTFRM="DSM" D
"RTN","KMPDSSS",63,0)
 .S LOC=$G(^KMPS(8970.1,1,0))
"RTN","KMPDSSS",64,0)
 .S TEXT="   Global Location............ "
"RTN","KMPDSSS",65,0)
 .S TEXT=TEXT_$S($P(LOC,U,3)="":PROD,1:$P(LOC,U,3))_","_$S($P(LOC,U,2)="":"UNKNOWN",1:$P(LOC,U,2))
"RTN","KMPDSSS",66,0)
 .S LN=LN+1
"RTN","KMPDSSS",67,0)
 .D SET^VALM10(LN,TEXT)
"RTN","KMPDSSS",68,0)
 ;
"RTN","KMPDSSS",69,0)
 S LN=LN+1
"RTN","KMPDSSS",70,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSS",71,0)
 S LN=LN+1
"RTN","KMPDSSS",72,0)
 D SET^VALM10(LN,"   SAGG Project collection routines will monitor the following:")
"RTN","KMPDSSS",73,0)
 S LN=LN+1
"RTN","KMPDSSS",74,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSS",75,0)
 S (TEXT,VOL)=""
"RTN","KMPDSSS",76,0)
 F  S VOL=$O(^KMPS(8970.1,1,1,"B",VOL)) Q:VOL=""  D
"RTN","KMPDSSS",77,0)
 .S VOLDA=$O(^KMPS(8970.1,1,1,"B",VOL,0))
"RTN","KMPDSSS",78,0)
 .S LOC=$P(^KMPS(8970.1,1,1,VOLDA,0),U,2)
"RTN","KMPDSSS",79,0)
 .S:LOC="" LOC=PROD
"RTN","KMPDSSS",80,0)
 .S TEXT=$J(" ",10)_VOL,LN=LN+1
"RTN","KMPDSSS",81,0)
 .D SET^VALM10(LN,TEXT)
"RTN","KMPDSSS",82,0)
 ;
"RTN","KMPDSSS",83,0)
 I '+CURSTAT&$D(^XTMP("KMPS","START")) D 
"RTN","KMPDSSS",84,0)
 .S LN=LN+1 D SET^VALM10(LN,"") S LN=LN+1 D SET^VALM10(LN,"")
"RTN","KMPDSSS",85,0)
 .S LN=LN+1
"RTN","KMPDSSS",86,0)
 .D SET^VALM10(LN,"   SAGG Project collection routines are still running on:")
"RTN","KMPDSSS",87,0)
 .S (TEXT,VOL)=""
"RTN","KMPDSSS",88,0)
 .F  S VOL=$O(^XTMP("KMPS","START",VOL)) Q:VOL=""  D
"RTN","KMPDSSS",89,0)
 ..S TEXT=$J(" ",10)_VOL,LN=LN+1
"RTN","KMPDSSS",90,0)
 ..D SET^VALM10(LN,TEXT)
"RTN","KMPDSSS",91,0)
 ;
"RTN","KMPDSSS",92,0)
 ; check for any reported errors
"RTN","KMPDSSS",93,0)
 I $D(^XTMP("KMPS","ERROR")) D 
"RTN","KMPDSSS",94,0)
 .S LN=LN+1 D SET^VALM10(LN,"") S LN=LN+1 D SET^VALM10(LN,"")
"RTN","KMPDSSS",95,0)
 .S LN=LN+1
"RTN","KMPDSSS",96,0)
 .D SET^VALM10(LN,"   SAGG Project collection routines have recorded an error on")
"RTN","KMPDSSS",97,0)
 .S LN=LN+1
"RTN","KMPDSSS",98,0)
 .D SET^VALM10(LN,"   the following Volume Set(s):")
"RTN","KMPDSSS",99,0)
 .S LN=LN+1 D SET^VALM10(LN,"")
"RTN","KMPDSSS",100,0)
 .S (TEXT,VOL)=""
"RTN","KMPDSSS",101,0)
 .F  S VOL=$O(^XTMP("KMPS","ERROR",VOL)) Q:VOL=""  D
"RTN","KMPDSSS",102,0)
 ..S TEXT=$J(" ",10)_VOL,LN=LN+1
"RTN","KMPDSSS",103,0)
 ..D SET^VALM10(LN,TEXT) S TEXT=""
"RTN","KMPDSSS",104,0)
 ;
"RTN","KMPDSSS",105,0)
 ; check to see if SAGG was told to stop or has reported errors
"RTN","KMPDSSS",106,0)
 I (+CURSTAT)>3 D 
"RTN","KMPDSSS",107,0)
 .I +CURSTAT=4 D
"RTN","KMPDSSS",108,0)
 ..S LN=LN+1
"RTN","KMPDSSS",109,0)
 ..D SET^VALM10(LN,"   SAGG has been running over a day. Use ^%S"_$S(PLTFRM="DSM":"Y",1:"S")_" and check to see if")
"RTN","KMPDSSS",110,0)
 ..S LN=LN+1
"RTN","KMPDSSS",111,0)
 ..D SET^VALM10(LN,"   the KMPSGE routine is still running.")
"RTN","KMPDSSS",112,0)
 .S LN=LN+1
"RTN","KMPDSSS",113,0)
 .D SET^VALM10(LN,"   NOTE:  Any incomplete data that has been collected will be")
"RTN","KMPDSSS",114,0)
 .S LN=LN+1
"RTN","KMPDSSS",115,0)
 .D SET^VALM10(LN,"   deleted automatically the next time that SAGG runs.")
"RTN","KMPDSSS",116,0)
 .I $D(^XTMP("KMPS","ERROR")) S LN=LN+1 D SET^VALM10(LN,"            First determine the cause of any volume set errors.")
"RTN","KMPDSSS",117,0)
 .S LN=LN+1
"RTN","KMPDSSS",118,0)
 .D SET^VALM10(LN,"            Reschedule SAGG to collect global data if necessary.")
"RTN","KMPDSSS",119,0)
 ;
"RTN","KMPDSSS",120,0)
 Q
"RTN","KMPDSSS",121,0)
 ;
"RTN","KMPDSSS",122,0)
FILES ;-- file data
"RTN","KMPDSSS",123,0)
 ;
"RTN","KMPDSSS",124,0)
 N TEXT,X
"RTN","KMPDSSS",125,0)
 ;
"RTN","KMPDSSS",126,0)
 S LN=LN+1
"RTN","KMPDSSS",127,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSS",128,0)
 S LN=LN+1
"RTN","KMPDSSS",129,0)
 D SET^VALM10(LN,$J(" ",35)_" # of") ;     Oldest     Recent")
"RTN","KMPDSSS",130,0)
 S LN=LN+1
"RTN","KMPDSSS",131,0)
 D SET^VALM10(LN,"   File"_$J(" ",28)_"Entries") ;    Date       Date")
"RTN","KMPDSSS",132,0)
 S LN=LN+1
"RTN","KMPDSSS",133,0)
 D SET^VALM10(LN,"   -------------------------       -------") ;   -------   -------")
"RTN","KMPDSSS",134,0)
 ; file name
"RTN","KMPDSSS",135,0)
 S TEXT="   8970.1-"_$P($G(^DIC(8970.1,0)),U)
"RTN","KMPDSSS",136,0)
 ; number of entries
"RTN","KMPDSSS",137,0)
 S TEXT=TEXT_$J(" ",35-$L(TEXT))_$J($FN($P($G(^KMPS(8970.1,0)),U,4),",",0),7)
"RTN","KMPDSSS",138,0)
 S LN=LN+1
"RTN","KMPDSSS",139,0)
 D SET^VALM10(LN,TEXT)
"RTN","KMPDSSS",140,0)
 ;
"RTN","KMPDSSS",141,0)
 Q
"RTN","KMPDSSS",142,0)
 ;
"RTN","KMPDSSS",143,0)
LEGEND ;-- display full package name
"RTN","KMPDSSS",144,0)
 ;
"RTN","KMPDSSS",145,0)
 S LN=LN+1 D SET^VALM10(LN,"")
"RTN","KMPDSSS",146,0)
 S LN=LN+1 D SET^VALM10(LN,"")
"RTN","KMPDSSS",147,0)
 S LN=LN+1
"RTN","KMPDSSS",148,0)
 D SET^VALM10(LN,"   SAGG = Statistical Analysis of Global Growth")
"RTN","KMPDSSS",149,0)
 ;
"RTN","KMPDSSS",150,0)
 Q
"RTN","KMPDSSS",151,0)
 ;
"RTN","KMPDSSS",152,0)
STATUS ;-- current status
"RTN","KMPDSSS",153,0)
 ;
"RTN","KMPDSSS",154,0)
 N CURSTAT,DOW,OPT,SESSNUM,SITNUM,STAT,STRTDT
"RTN","KMPDSSS",155,0)
 ;
"RTN","KMPDSSS",156,0)
 S SITNUM=$P($$SITE^VASITE(),U,3) Q:'SITNUM
"RTN","KMPDSSS",157,0)
 S OPT="KMPS SAGG REPORT",STAT=$$TSKSTAT^KMPSUTL1(OPT),CURSTAT=$$CURSTAT^KMPDUTL1(STAT)
"RTN","KMPDSSS",158,0)
 S LN=LN+1
"RTN","KMPDSSS",159,0)
 D SET^VALM10(LN,"   Current Status.............. "_$P(CURSTAT,U,2))
"RTN","KMPDSSS",160,0)
 I $D(^XTMP("KMPS",SITNUM,0)) D
"RTN","KMPDSSS",161,0)
 .S SESSNUM=^XTMP("KMPS",SITNUM,0),STRTDT=$P(SESSNUM,U,4),SESSNUM=+SESSNUM
"RTN","KMPDSSS",162,0)
 .S LN=LN+1
"RTN","KMPDSSS",163,0)
 .D SET^VALM10(LN,"   Session Number.............. "_SESSNUM)
"RTN","KMPDSSS",164,0)
 .S DOW=$$DOW^XLFDT(STRTDT)
"RTN","KMPDSSS",165,0)
 .S LN=LN+1
"RTN","KMPDSSS",166,0)
 .D SET^VALM10(LN,"   Start Date.................. "_$$FMTE^XLFDT(STRTDT,"P")_" ("_DOW_")")
"RTN","KMPDSSS",167,0)
 ;
"RTN","KMPDSSS",168,0)
 S LN=LN+1
"RTN","KMPDSSS",169,0)
 D SET^VALM10(LN,"")
"RTN","KMPDSSS",170,0)
 ;
"RTN","KMPDSSS",171,0)
 Q
"RTN","KMPDTM")
0^15^B22150434^B22150434
"RTN","KMPDTM",1,0)
KMPDTM ;OAK/RAK - CM Tools Timing Monitor ;6/21/05  10:14
"RTN","KMPDTM",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDTM",3,0)
 ;
"RTN","KMPDTM",4,0)
EN ;-- entry point
"RTN","KMPDTM",5,0)
 ;
"RTN","KMPDTM",6,0)
 N DIR,X,Y
"RTN","KMPDTM",7,0)
 ;
"RTN","KMPDTM",8,0)
 D HDR^KMPDUTL4(" Timing Data Monitor ")
"RTN","KMPDTM",9,0)
 ;
"RTN","KMPDTM",10,0)
 ; if no data
"RTN","KMPDTM",11,0)
 I $O(^KMPTMP("KMPDT","ORWCV",""))="" D  Q
"RTN","KMPDTM",12,0)
 .W !!?7,"*** There is currently no data in global ^KMPTMP(""KMPDT"",""ORWCV"") ***"
"RTN","KMPDTM",13,0)
 ;
"RTN","KMPDTM",14,0)
 W !
"RTN","KMPDTM",15,0)
 W !?7,"This option displays CPRS Coversheet time-to-load data, as a"
"RTN","KMPDTM",16,0)
 W !?7,"bar graph, for the current day.  This option can be left"
"RTN","KMPDTM",17,0)
 W !?7,"running on a terminal (if desired).  The monitor is updated"
"RTN","KMPDTM",18,0)
 W !?7,"every 10 minutes (site configurable through the [KMPD PARAM"
"RTN","KMPDTM",19,0)
 W !?7,"EDIT] Edit CP Parameters File option), and displays current"
"RTN","KMPDTM",20,0)
 W !?7,"average time-to-load data starting at midnight.  An alarm"
"RTN","KMPDTM",21,0)
 W !?7,"message is displayed if the average time-to-load exceeds 30"
"RTN","KMPDTM",22,0)
 W !?7,"seconds (site configurable through the [KMPD PARAM EDIT] Edit"
"RTN","KMPDTM",23,0)
 W !?7,"CP Parameters File option)."
"RTN","KMPDTM",24,0)
 W !
"RTN","KMPDTM",25,0)
 S DIR(0)="YO",DIR("A")="Continue",DIR("B")="YES"
"RTN","KMPDTM",26,0)
 W ! D ^DIR Q:Y'=1
"RTN","KMPDTM",27,0)
 ;
"RTN","KMPDTM",28,0)
 ;
"RTN","KMPDTM",29,0)
 W !!,"Compiling timing stats..."
"RTN","KMPDTM",30,0)
 D EN1
"RTN","KMPDTM",31,0)
 ;
"RTN","KMPDTM",32,0)
 Q
"RTN","KMPDTM",33,0)
 ;
"RTN","KMPDTM",34,0)
EN1 ;-- main loop
"RTN","KMPDTM",35,0)
 ;
"RTN","KMPDTM",36,0)
 N KMPUALRT,KMPUTIME,KMPUTMP,OUT
"RTN","KMPDTM",37,0)
 ;
"RTN","KMPDTM",38,0)
 S KMPUALRT=0,KMPUTIME=$$NOW^XLFDT
"RTN","KMPDTM",39,0)
 S OUT=0
"RTN","KMPDTM",40,0)
 F  D  Q:OUT
"RTN","KMPDTM",41,0)
 .D DATA
"RTN","KMPDTM",42,0)
 .D GRAPH
"RTN","KMPDTM",43,0)
 .S OUT=$$FTR Q:OUT
"RTN","KMPDTM",44,0)
 .D EXIT
"RTN","KMPDTM",45,0)
 Q
"RTN","KMPDTM",46,0)
 ;
"RTN","KMPDTM",47,0)
DATA ;-- compile data
"RTN","KMPDTM",48,0)
 ;
"RTN","KMPDTM",49,0)
 N DATA,DATA1,DATE,DELTA,DOT,HOURS,HR,I
"RTN","KMPDTM",50,0)
 ;
"RTN","KMPDTM",51,0)
 K KMPUTMP
"RTN","KMPDTM",52,0)
 S DOT=1,DATE=$$DT^XLFDT
"RTN","KMPDTM",53,0)
 ; array with hours
"RTN","KMPDTM",54,0)
 S HOURS=$$RLTMHR^KMPDTU11(1,0) Q:HOURS=""
"RTN","KMPDTM",55,0)
 F HR=1:1 Q:$P(HOURS,",",HR)=""  S KMPUTMP(HR,0)=""
"RTN","KMPDTM",56,0)
 S I=""
"RTN","KMPDTM",57,0)
 F  S I=$O(^KMPTMP("KMPDT","ORWCV",I)) Q:I=""  S DATA=^(I) I DATA]"" D 
"RTN","KMPDTM",58,0)
 .S DOT=DOT+1 W:('(DOT#1000)) "."
"RTN","KMPDTM",59,0)
 .; start/end date/time in fileman format
"RTN","KMPDTM",60,0)
 .S DATE(1)=$$HTFM^XLFDT($P(DATA,U)),DATE(2)=$$HTFM^XLFDT($P(DATA,U,2))
"RTN","KMPDTM",61,0)
 .Q:'DATE(1)!('DATE(2))
"RTN","KMPDTM",62,0)
 .; quit if not today (DATE)
"RTN","KMPDTM",63,0)
 .Q:$P(DATE(1),".")'=DATE
"RTN","KMPDTM",64,0)
 .S DELTA=$$FMDIFF^XLFDT(DATE(2),DATE(1),2)
"RTN","KMPDTM",65,0)
 .S:DELTA<0 DELTA=""
"RTN","KMPDTM",66,0)
 .; determine hour
"RTN","KMPDTM",67,0)
 .S HR=+$E($P(DATE(1),".",2),1,2) Q:HR=""  ;HR="0"
"RTN","KMPDTM",68,0)
 .;Q:'HR
"RTN","KMPDTM",69,0)
 .; quit if not in HOUR() array
"RTN","KMPDTM",70,0)
 .;Q:'$D(HOUR(HR))
"RTN","KMPDTM",71,0)
 .S DATA1="^^^"_DELTA_"^"_$P(DATA,U,3)_"^"_$P(DATA,U,4)_"^^^"_$P($P(I," ",2),"-")
"RTN","KMPDTM",72,0)
 .;
"RTN","KMPDTM",73,0)
 .; quit if no delta
"RTN","KMPDTM",74,0)
 .Q:$P(DATA1,U,4)=""
"RTN","KMPDTM",75,0)
 .; hour
"RTN","KMPDTM",76,0)
 .S $P(KMPUTMP(HR,0),U)=HR
"RTN","KMPDTM",77,0)
 .; total delta
"RTN","KMPDTM",78,0)
 .S $P(KMPUTMP(HR,0),U,2)=$P(KMPUTMP(HR,0),U,2)+$P(DATA1,U,4)
"RTN","KMPDTM",79,0)
 .; count
"RTN","KMPDTM",80,0)
 .S $P(KMPUTMP(HR,0),U,3)=$P(KMPUTMP(HR,0),U,3)+1
"RTN","KMPDTM",81,0)
 ;
"RTN","KMPDTM",82,0)
 ; average
"RTN","KMPDTM",83,0)
 F HR=1:1 S I=$P(HOURS,",",HR) Q:I=""  I $P($G(KMPUTMP(I,0)),U,2) D 
"RTN","KMPDTM",84,0)
 .S $P(KMPUTMP(I,0),U,2)=$FN($P(KMPUTMP(I,0),U,2)/$P(KMPUTMP(I,0),U,3),"",1)
"RTN","KMPDTM",85,0)
 ;
"RTN","KMPDTM",86,0)
 Q
"RTN","KMPDTM",87,0)
 ;
"RTN","KMPDTM",88,0)
FTR() ;-- extrinsic function - footer
"RTN","KMPDTM",89,0)
 N OUT,PROMPT,UTIME,X
"RTN","KMPDTM",90,0)
 ; update time - how often graph will refress itself
"RTN","KMPDTM",91,0)
 S UTIME=$P($G(^KMPD(8973,1,19)),U)
"RTN","KMPDTM",92,0)
 ; value is in minutes and is converted to seconds for timed read
"RTN","KMPDTM",93,0)
 S UTIME=$S(UTIME:UTIME,1:10)*60
"RTN","KMPDTM",94,0)
 S PROMPT="[Q]uit, [U]pdate: "
"RTN","KMPDTM",95,0)
 S OUT=0
"RTN","KMPDTM",96,0)
 F  D  Q:OUT
"RTN","KMPDTM",97,0)
 .S DX=(IOM-$L(PROMPT)\2),DY=(IOSL-1) X IOXY
"RTN","KMPDTM",98,0)
 .W PROMPT R X:UTIME
"RTN","KMPDTM",99,0)
 .S X=$$UP^XLFSTR(X)
"RTN","KMPDTM",100,0)
 .I X="Q"!(X="^")!(X="U")!('$T) S OUT=1
"RTN","KMPDTM",101,0)
 .E  W $C(7) S DY=(IOSL-1) F DX=1:1:IOM W " " X IOXY
"RTN","KMPDTM",102,0)
 W $S(X="Q":"uit",X="^":"Quit",X="U":"pdate",1:"Update")
"RTN","KMPDTM",103,0)
 Q $S(X="Q"!(X="^"):1,1:0)
"RTN","KMPDTM",104,0)
 ;
"RTN","KMPDTM",105,0)
GRAPH ;-- display graph
"RTN","KMPDTM",106,0)
 Q:'$D(KMPUTMP)
"RTN","KMPDTM",107,0)
 N ALERT,DATA,LOADTM,NOW,TITLE,TXT,UPDATE
"RTN","KMPDTM",108,0)
 ; alert time in seconds - if average time-to-load is not less than this
"RTN","KMPDTM",109,0)
 ;                         value an alert will appear on screen
"RTN","KMPDTM",110,0)
 S NOW=$$NOW^XLFDT
"RTN","KMPDTM",111,0)
 S DATA=$G(^KMPD(8973,1,19))
"RTN","KMPDTM",112,0)
 ; if no ALERT set default to 30 seconds
"RTN","KMPDTM",113,0)
 S ALERT=$S($P(DATA,U,2):$P(DATA,U,2),1:30)
"RTN","KMPDTM",114,0)
 ; if not UPDATE default to 10 minutes
"RTN","KMPDTM",115,0)
 S UPDATE=$S($P(DATA,U):$P(DATA,U),1:10)
"RTN","KMPDTM",116,0)
 ; current hour
"RTN","KMPDTM",117,0)
 S HR=+$E($P(NOW,".",2),1,2)
"RTN","KMPDTM",118,0)
 ; current time-to-load value
"RTN","KMPDTM",119,0)
 S:HR&($D(KMPUTMP(HR))) LOADTM=$P(KMPUTMP(HR,0),U,2)
"RTN","KMPDTM",120,0)
 ; determine if is now an alert condition
"RTN","KMPDTM",121,0)
 S KMPUALRT=$S(LOADTM>ALERT:1,1:0)
"RTN","KMPDTM",122,0)
 ;
"RTN","KMPDTM",123,0)
 ; if load time is greater than alert time
"RTN","KMPDTM",124,0)
 I KMPUALRT S TXT(1,0)=$C(7)_"ALERT!!! - Current Average Time-To-Load exceeds '"_ALERT_" seconds'"
"RTN","KMPDTM",125,0)
 ; else
"RTN","KMPDTM",126,0)
 E  S TXT(1,0)=""
"RTN","KMPDTM",127,0)
 ;
"RTN","KMPDTM",128,0)
 S TXT(2,0)=""
"RTN","KMPDTM",129,0)
 S TXT(3,0)="Last Updated: "_$P($$FMTE^XLFDT(NOW),"@",2)_"  > "
"RTN","KMPDTM",130,0)
 S TXT(3,0)=TXT(3,0)_"Monitor will be updated every "_UPDATE_" min."
"RTN","KMPDTM",131,0)
 I $G(KMPUTIME) D 
"RTN","KMPDTM",132,0)
 .S TXT(4,0)="Running Time: "_$$FMDIFF^XLFDT(NOW,KMPUTIME,3)_"  > "
"RTN","KMPDTM",133,0)
 .S TXT(4,0)=TXT(4,0)_"ALERT will display if Load Time exceeds "_ALERT_" sec."
"RTN","KMPDTM",134,0)
 S TITLE="Timing Data Monitor^CPRS Coversheet^Load Time (Sec)^Hour"
"RTN","KMPDTM",135,0)
 ;
"RTN","KMPDTM",136,0)
 D EN^KMPDUG("KMPUTMP",TITLE,"DV","","TXT",1,40)
"RTN","KMPDTM",137,0)
 ;
"RTN","KMPDTM",138,0)
 Q
"RTN","KMPDTM",139,0)
 ;
"RTN","KMPDTM",140,0)
EXIT ;-- cleanup on exit
"RTN","KMPDTM",141,0)
 D ^%ZISC
"RTN","KMPDTM",142,0)
 Q
"RTN","KMPDTP1")
0^16^B21923015^B15743524
"RTN","KMPDTP1",1,0)
KMPDTP1 ;OAK/RAK - CP Timing Time to Load Summary ;2/17/04  09:22
"RTN","KMPDTP1",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDTP1",3,0)
 ;
"RTN","KMPDTP1",4,0)
EN ;-- entry point
"RTN","KMPDTP1",5,0)
 N KMPDATE,KMPDPTNP,KMPDTTL,POP,X,Y,ZTDESC,ZTRTN,ZTRSAVE,%ZIS
"RTN","KMPDTP1",6,0)
 S KMPDTTL=" Average Coversheet Time-to-Load (TTL) Report "
"RTN","KMPDTP1",7,0)
 D HDR^KMPDUTL4(KMPDTTL)
"RTN","KMPDTP1",8,0)
 W !
"RTN","KMPDTP1",9,0)
 W !?7,"This report displays the daily average time-to-load value for"
"RTN","KMPDTP1",10,0)
 W !?7,"the coversheet at this site.  Average time-to-load values are"
"RTN","KMPDTP1",11,0)
 W !?7,"given for either daily prime time or non-prime time periods."
"RTN","KMPDTP1",12,0)
 W !
"RTN","KMPDTP1",13,0)
 ;
"RTN","KMPDTP1",14,0)
 I '$O(^KMPD(8973.2,0)) D  Q
"RTN","KMPDTP1",15,0)
 .W !!?7,"*** There is currently no data in file #8973.2 (CP TIMING) ***"
"RTN","KMPDTP1",16,0)
 ;
"RTN","KMPDTP1",17,0)
 D DATERNG^KMPDTU10("ORWCV",7,.KMPDATE)
"RTN","KMPDTP1",18,0)
 Q:$G(KMPDATE(0))=""
"RTN","KMPDTP1",19,0)
 S KMPDPTNP=$$PTNPSEL^KMPDUTL4
"RTN","KMPDTP1",20,0)
 Q:'KMPDPTNP
"RTN","KMPDTP1",21,0)
 ; select output device.
"RTN","KMPDTP1",22,0)
 S %ZIS="Q",%ZIS("A")="Device: ",%ZIS("B")="HOME"
"RTN","KMPDTP1",23,0)
 W ! D ^%ZIS I POP W !,"No action taken." Q
"RTN","KMPDTP1",24,0)
 ; if queued.
"RTN","KMPDTP1",25,0)
 I $D(IO("Q")) K IO("Q") D  Q
"RTN","KMPDTP1",26,0)
 .S ZTDESC=KMPDTTL
"RTN","KMPDTP1",27,0)
 .S ZTRTN="EN1^KMPDTP1"
"RTN","KMPDTP1",28,0)
 .S ZTSAVE("KMPDATE(")="",ZTSAVE("KMPDPTNP")="",ZTSAVE("KMPDTTL")=""
"RTN","KMPDTP1",29,0)
 .D ^%ZTLOAD W:$G(ZTSK) !,"Task #",ZTSK
"RTN","KMPDTP1",30,0)
 .D EXIT
"RTN","KMPDTP1",31,0)
 ;
"RTN","KMPDTP1",32,0)
 ; if output to terminal display message.
"RTN","KMPDTP1",33,0)
 W:$E(IOST,1,2)="C-" !,"Compiling timing stats..."
"RTN","KMPDTP1",34,0)
 D EN1
"RTN","KMPDTP1",35,0)
 ;
"RTN","KMPDTP1",36,0)
 Q
"RTN","KMPDTP1",37,0)
 ;
"RTN","KMPDTP1",38,0)
EN1 ;-- entry point from taskman
"RTN","KMPDTP1",39,0)
 Q:'$D(KMPDATE)
"RTN","KMPDTP1",40,0)
 Q:'$G(KMPDPTNP)
"RTN","KMPDTP1",41,0)
 K ^TMP($J)
"RTN","KMPDTP1",42,0)
 D DATA(.KMPDATE,KMPDPTNP,$G(KMPDTTL)),PRINT,EXIT
"RTN","KMPDTP1",43,0)
 K ^TMP($J)
"RTN","KMPDTP1",44,0)
 Q
"RTN","KMPDTP1",45,0)
 ;
"RTN","KMPDTP1",46,0)
DATA(KMPDATE,KMPDPTNP,KMPDTTL) ;-- compile data
"RTN","KMPDTP1",47,0)
 Q:'$D(KMPDATE)
"RTN","KMPDTP1",48,0)
 Q:'$G(KMPDPTNP)
"RTN","KMPDTP1",49,0)
 N DATA,DATE,DOT,END,IEN,PTNP,QUEUED
"RTN","KMPDTP1",50,0)
 S DATE=$P(KMPDATE(0),U)-.1,END=$P(KMPDATE(0),U,2),PTNP=(+KMPDPTNP)
"RTN","KMPDTP1",51,0)
 Q:'DATE!('END)!('PTNP)
"RTN","KMPDTP1",52,0)
 S DOT=1,QUEUED=$D(ZTQUEUED)
"RTN","KMPDTP1",53,0)
 F  S DATE=$O(^KMPD(8973.2,"ASSDTPT","ORWCV",DATE)) Q:'DATE!(DATE>END)  D 
"RTN","KMPDTP1",54,0)
 .S IEN=0,^TMP($J,DATE)=""
"RTN","KMPDTP1",55,0)
 .F  S IEN=$O(^KMPD(8973.2,"ASSDTPT","ORWCV",DATE,PTNP,IEN)) Q:'IEN  D 
"RTN","KMPDTP1",56,0)
 ..Q:'$D(^KMPD(8973.2,IEN,0))  S DATA=^(0) Q:DATA=""
"RTN","KMPDTP1",57,0)
 ..I 'QUEUED S DOT=DOT+1 W:'(DOT#1000) "."
"RTN","KMPDTP1",58,0)
 ..; if delta
"RTN","KMPDTP1",59,0)
 ..I $P(DATA,U,4)'="" D 
"RTN","KMPDTP1",60,0)
 ...; minimum delta
"RTN","KMPDTP1",61,0)
 ...I $P(^TMP($J,DATE),U,2)=""!($P(DATA,U,4)<$P(^TMP($J,DATE),U,2)) D 
"RTN","KMPDTP1",62,0)
 ....S $P(^TMP($J,DATE),U,2)=$P(DATA,U,4)
"RTN","KMPDTP1",63,0)
 ...; maximum delta
"RTN","KMPDTP1",64,0)
 ...I $P(DATA,U,4)>$P(^TMP($J,DATE),U,3) S $P(^TMP($J,DATE),U,3)=$P(DATA,U,4)
"RTN","KMPDTP1",65,0)
 ...; total delta
"RTN","KMPDTP1",66,0)
 ...S $P(^TMP($J,DATE),U,4)=$P(^TMP($J,DATE),U,4)+$P(DATA,U,4)
"RTN","KMPDTP1",67,0)
 ...; count
"RTN","KMPDTP1",68,0)
 ...S $P(^TMP($J,DATE),U,5)=$P(^TMP($J,DATE),U,5)+1
"RTN","KMPDTP1",69,0)
 ..; if no delta
"RTN","KMPDTP1",70,0)
 ..E  S $P(^TMP($J,DATE),U,6)=$P(^TMP($J,DATE),U,6)+1
"RTN","KMPDTP1",71,0)
 .;
"RTN","KMPDTP1",72,0)
 .; back to DATE level
"RTN","KMPDTP1",73,0)
 .; average
"RTN","KMPDTP1",74,0)
 .S:$P(^TMP($J,DATE),U,5) $P(^TMP($J,DATE),U)=$P(^TMP($J,DATE),U,4)/$P(^TMP($J,DATE),U,5)
"RTN","KMPDTP1",75,0)
 ;
"RTN","KMPDTP1",76,0)
 Q
"RTN","KMPDTP1",77,0)
 ;
"RTN","KMPDTP1",78,0)
PRINT ;-- print data
"RTN","KMPDTP1",79,0)
 U IO
"RTN","KMPDTP1",80,0)
 D HDR
"RTN","KMPDTP1",81,0)
 Q:'$D(^TMP($J))
"RTN","KMPDTP1",82,0)
 N DATE,TOTAL S (DATE,TOTAL)=""
"RTN","KMPDTP1",83,0)
 F  S DATE=$O(^TMP($J,DATE)) Q:'DATE  S DATA=^TMP($J,DATE) D 
"RTN","KMPDTP1",84,0)
 .W !,$$FMTE^XLFDT(DATE,2)
"RTN","KMPDTP1",85,0)
 .W ?12,$J($FN($P(DATA,U),",",0),10)
"RTN","KMPDTP1",86,0)
 .W ?26,$J($FN($P(DATA,U,2),",",0),10)
"RTN","KMPDTP1",87,0)
 .W ?40,$J($FN($P(DATA,U,3),",",0),10)
"RTN","KMPDTP1",88,0)
 .W ?54,$J($FN($P(DATA,U,5),",",0),10)
"RTN","KMPDTP1",89,0)
 .; total incompletes
"RTN","KMPDTP1",90,0)
 .S TOTAL=TOTAL+$P(DATA,U,6)
"RTN","KMPDTP1",91,0)
 ;
"RTN","KMPDTP1",92,0)
 W !!?12,"Incomplete: ",$J($FN(TOTAL,",",0),$L(TOTAL)+2)
"RTN","KMPDTP1",93,0)
 ; legend
"RTN","KMPDTP1",94,0)
 W !!?2,"CV  = Coversheet",!?2,"TTL = Time-to-Load"
"RTN","KMPDTP1",95,0)
 ; pause if output to terminal
"RTN","KMPDTP1",96,0)
 D CONTINUE^KMPDUTL4("Press RETURN to continue",4)
"RTN","KMPDTP1",97,0)
 Q
"RTN","KMPDTP1",98,0)
 ;
"RTN","KMPDTP1",99,0)
HDR ;-- print header
"RTN","KMPDTP1",100,0)
 W @IOF
"RTN","KMPDTP1",101,0)
 N HDR,I
"RTN","KMPDTP1",102,0)
 D HDR1(.HDR)
"RTN","KMPDTP1",103,0)
 F I=0:0 S I=$O(HDR(I)) Q:'I  W !,HDR(I)
"RTN","KMPDTP1",104,0)
 Q
"RTN","KMPDTP1",105,0)
 S X=$G(KMPDTTL)
"RTN","KMPDTP1",106,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP1",107,0)
 S X=$P($G(KMPDPTNP),U,2)
"RTN","KMPDTP1",108,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP1",109,0)
 S X=$G(KMPDATE(0)),X=$P(X,U,3)_" - "_$P(X,U,4)
"RTN","KMPDTP1",110,0)
 W !?(80-$L(X)\2),X,?61,"Printed: ",$$FMTE^XLFDT(DT,2)
"RTN","KMPDTP1",111,0)
 W !
"RTN","KMPDTP1",112,0)
 W !?12,"|---------------Seconds---------------|"
"RTN","KMPDTP1",113,0)
 W !,"Date",?12,"Average TTL",?26,"Minimum TTL",?40,"Maximum TTL",?54,"# of CV Loads"
"RTN","KMPDTP1",114,0)
 W !,$$REPEAT^XLFSTR("-",IOM)
"RTN","KMPDTP1",115,0)
 ;
"RTN","KMPDTP1",116,0)
 Q
"RTN","KMPDTP1",117,0)
 ;
"RTN","KMPDTP1",118,0)
HDR1(KMPDHDR) ;- set up header array
"RTN","KMPDTP1",119,0)
 K KMPDHDR
"RTN","KMPDTP1",120,0)
 N X
"RTN","KMPDTP1",121,0)
 S X=$G(KMPDTTL)
"RTN","KMPDTP1",122,0)
 S KMPDHDR(1)=$J(" ",(80-$L(X)\2))_X
"RTN","KMPDTP1",123,0)
 S X=$P($G(KMPDPTNP),U,2)
"RTN","KMPDTP1",124,0)
 S KMPDHDR(2)=$J(" ",(80-$L(X)\2))_X
"RTN","KMPDTP1",125,0)
 S X=$G(KMPDATE(0)),X=$P(X,U,3)_" - "_$P(X,U,4)
"RTN","KMPDTP1",126,0)
 S KMPDHDR(3)=$J(" ",(80-$L(X)\2))_X
"RTN","KMPDTP1",127,0)
 S KMPDHDR(3)=KMPDHDR(3)_$J(" ",61-$L(KMPDHDR(3)))_"Printed: "_$$FMTE^XLFDT(DT,2)
"RTN","KMPDTP1",128,0)
 S KMPDHDR(4)=""
"RTN","KMPDTP1",129,0)
 S KMPDHDR(5)=$J("",12)_"|---------------Seconds---------------|"
"RTN","KMPDTP1",130,0)
 S KMPDHDR(6)="Date"_$J(" ",8)_"Average TTL"_$J(" ",3)_"Minimum TTL"_$J(" ",3)_"Maximum TTL"_$J(" ",3)_"# of CV Loads"
"RTN","KMPDTP1",131,0)
 S KMPDHDR(7)=$$REPEAT^XLFSTR("-",80)
"RTN","KMPDTP1",132,0)
 ;
"RTN","KMPDTP1",133,0)
 Q
"RTN","KMPDTP1",134,0)
 ;
"RTN","KMPDTP1",135,0)
EXIT ;-- cleanup on exit
"RTN","KMPDTP1",136,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","KMPDTP1",137,0)
 D ^%ZISC
"RTN","KMPDTP1",138,0)
 K KMPDATE,KMPDPTNP,KMPDTTL
"RTN","KMPDTP1",139,0)
 Q
"RTN","KMPDTP2")
0^17^B21316448^B21316448
"RTN","KMPDTP2",1,0)
KMPDTP2 ;OAK/RAK - CP Timing Daily Time-to-Load Detail ;2/17/04  09:23
"RTN","KMPDTP2",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDTP2",3,0)
 ;
"RTN","KMPDTP2",4,0)
EN ;-- entry point
"RTN","KMPDTP2",5,0)
 N KMPDATE,KMPDPTNP,KMPDTTL,POP,X,Y,ZTDESC,ZTRTN,ZTSAVE,ZTSK,%ZIS
"RTN","KMPDTP2",6,0)
 S KMPDTTL=" Daily Coversheet Time-to-Load (TTL) Detailed Report "
"RTN","KMPDTP2",7,0)
 D HDR^KMPDUTL4(KMPDTTL)
"RTN","KMPDTP2",8,0)
 W !
"RTN","KMPDTP2",9,0)
 W !?7,"This detailed report displays daily time-to-load values for the"
"RTN","KMPDTP2",10,0)
 W !?7,"coversheet at this site.  The report breaks the time-to-load"
"RTN","KMPDTP2",11,0)
 W !?7,"metrics into ten second groupings."
"RTN","KMPDTP2",12,0)
 W !
"RTN","KMPDTP2",13,0)
 ;
"RTN","KMPDTP2",14,0)
 ; if no data
"RTN","KMPDTP2",15,0)
 I '$O(^KMPD(8973.2,0)) D  Q
"RTN","KMPDTP2",16,0)
 .W !!?7,"*** There is currently no data in file #8973.2 (CP TIMING) ***"
"RTN","KMPDTP2",17,0)
 ;
"RTN","KMPDTP2",18,0)
 ; select date range
"RTN","KMPDTP2",19,0)
 D DATERNG^KMPDTU10("ORWCV",1,.KMPDATE)
"RTN","KMPDTP2",20,0)
 Q:$G(KMPDATE(0))=""
"RTN","KMPDTP2",21,0)
 ;
"RTN","KMPDTP2",22,0)
 ; select time frame
"RTN","KMPDTP2",23,0)
 S KMPDPTNP=$$PTNPSEL^KMPDUTL4
"RTN","KMPDTP2",24,0)
 Q:'KMPDPTNP
"RTN","KMPDTP2",25,0)
 ;
"RTN","KMPDTP2",26,0)
 ; select output device.
"RTN","KMPDTP2",27,0)
 S %ZIS="Q",%ZIS("A")="Device: ",%ZIS("B")="HOME"
"RTN","KMPDTP2",28,0)
 W ! D ^%ZIS I POP W !,"No action taken." Q
"RTN","KMPDTP2",29,0)
 ; if queued.
"RTN","KMPDTP2",30,0)
 I $D(IO("Q")) K IO("Q") D  Q
"RTN","KMPDTP2",31,0)
 .S ZTDESC=KMPDTTL
"RTN","KMPDTP2",32,0)
 .S ZTRTN="EN1^KMPDTP2"
"RTN","KMPDTP2",33,0)
 .S ZTSAVE("KMPDATE(")="",ZTSAVE("KMPDPTNP")="",ZTSAVE("KMPDTTL")=""
"RTN","KMPDTP2",34,0)
 .D ^%ZTLOAD W:$G(ZTSK) !,"Task #",ZTSK
"RTN","KMPDTP2",35,0)
 .D EXIT
"RTN","KMPDTP2",36,0)
 ;
"RTN","KMPDTP2",37,0)
 ; if output to terminal display message.
"RTN","KMPDTP2",38,0)
 W:$E(IOST,1,2)="C-" !,"Compiling timing stats..."
"RTN","KMPDTP2",39,0)
 D EN1
"RTN","KMPDTP2",40,0)
 ;
"RTN","KMPDTP2",41,0)
 Q
"RTN","KMPDTP2",42,0)
 ;
"RTN","KMPDTP2",43,0)
EN1 ;-- entry point from taskman
"RTN","KMPDTP2",44,0)
 Q:'$D(KMPDATE)
"RTN","KMPDTP2",45,0)
 Q:'$G(KMPDPTNP)
"RTN","KMPDTP2",46,0)
 ;
"RTN","KMPDTP2",47,0)
 K ^TMP($J)
"RTN","KMPDTP2",48,0)
 D DATA,PRINT,EXIT
"RTN","KMPDTP2",49,0)
 K ^TMP($J)
"RTN","KMPDTP2",50,0)
 ;
"RTN","KMPDTP2",51,0)
 Q
"RTN","KMPDTP2",52,0)
 ;
"RTN","KMPDTP2",53,0)
DATA ;-- compile data
"RTN","KMPDTP2",54,0)
 Q:'$D(KMPDATE)
"RTN","KMPDTP2",55,0)
 Q:'$G(KMPDPTNP)
"RTN","KMPDTP2",56,0)
 ;
"RTN","KMPDTP2",57,0)
 N DATA,DATE,DELTA,DOT,END,I,IEN,PTNP,QUEUED,TOTAL
"RTN","KMPDTP2",58,0)
 ;
"RTN","KMPDTP2",59,0)
 S QUEUED=$D(ZTQUEUED),DOT=1
"RTN","KMPDTP2",60,0)
 S DATE=$P(KMPDATE(0),U)-.1,END=$P(KMPDATE(0),U,2),PTNP=(+KMPDPTNP)
"RTN","KMPDTP2",61,0)
 Q:'DATE!('END)!('PTNP)
"RTN","KMPDTP2",62,0)
 ;
"RTN","KMPDTP2",63,0)
 F  S DATE=$O(^KMPD(8973.2,"ASSDTPT","ORWCV",DATE)) Q:'DATE!(DATE>END)  D
"RTN","KMPDTP2",64,0)
 .S (IEN,TOTAL)=0,^TMP($J,DATE)=""
"RTN","KMPDTP2",65,0)
 .F  S IEN=$O(^KMPD(8973.2,"ASSDTPT","ORWCV",DATE,PTNP,IEN)) Q:'IEN  D
"RTN","KMPDTP2",66,0)
 ..Q:'$D(^KMPD(8973.2,IEN,0))  S DATA=^(0) Q:DATA=""
"RTN","KMPDTP2",67,0)
 ..S DOT=DOT+1 W:'QUEUED&('(DOT#1000)) "."
"RTN","KMPDTP2",68,0)
 ..S DELTA=$P(DATA,U,4)
"RTN","KMPDTP2",69,0)
 ..;
"RTN","KMPDTP2",70,0)
 ..; if delta is null increment by 1 and quit
"RTN","KMPDTP2",71,0)
 ..I DELTA="" S $P(^TMP($J,DATE),U,50)=$P(^TMP($J,DATE),U,50)+1 Q
"RTN","KMPDTP2",72,0)
 ..; total
"RTN","KMPDTP2",73,0)
 ..S TOTAL=TOTAL+1
"RTN","KMPDTP2",74,0)
 ..;
"RTN","KMPDTP2",75,0)
 ..; loop - less than I*10 seconds
"RTN","KMPDTP2",76,0)
 ..F I=1:1:9 I DELTA<(I*10) S $P(^TMP($J,DATE),U,I)=$P(^TMP($J,DATE),U,I)+1 Q
"RTN","KMPDTP2",77,0)
 ..; 90 or greater seconds
"RTN","KMPDTP2",78,0)
 ..I DELTA>89 S $P(^TMP($J,DATE),U,10)=$P(^TMP($J,DATE),U,10)+1
"RTN","KMPDTP2",79,0)
 .;
"RTN","KMPDTP2",80,0)
 .; back to DATE level
"RTN","KMPDTP2",81,0)
 .; determine percentage
"RTN","KMPDTP2",82,0)
 .I TOTAL F I=1:1:10 D 
"RTN","KMPDTP2",83,0)
 ..S $P(^TMP($J,DATE,1),U,I)=$FN($P(^TMP($J,DATE),U,I)/TOTAL*100,"",1)
"RTN","KMPDTP2",84,0)
 ;
"RTN","KMPDTP2",85,0)
 Q
"RTN","KMPDTP2",86,0)
 ;
"RTN","KMPDTP2",87,0)
PRINT ;-- print data
"RTN","KMPDTP2",88,0)
 U IO
"RTN","KMPDTP2",89,0)
 D HDR
"RTN","KMPDTP2",90,0)
 Q:'$D(^TMP($J))
"RTN","KMPDTP2",91,0)
 ;
"RTN","KMPDTP2",92,0)
 N CONT,DATE,I,TOTAL
"RTN","KMPDTP2",93,0)
 ;
"RTN","KMPDTP2",94,0)
 S DATE="",CONT=1
"RTN","KMPDTP2",95,0)
 F  S DATE=$O(^TMP($J,DATE)) Q:'DATE  D  Q:'CONT
"RTN","KMPDTP2",96,0)
 .S TOTAL=""
"RTN","KMPDTP2",97,0)
 .S DATA=^TMP($J,DATE),DATA(1)=$G(^TMP($J,DATE,1))
"RTN","KMPDTP2",98,0)
 .W !,$$FMTE^XLFDT(DATE,2)
"RTN","KMPDTP2",99,0)
 .; if no data
"RTN","KMPDTP2",100,0)
 .I DATA="" W ?12,"<No Data for ",$P(KMPDPTNP,U,2),">",! Q
"RTN","KMPDTP2",101,0)
 .; display data
"RTN","KMPDTP2",102,0)
 .F I=1:1:10 D
"RTN","KMPDTP2",103,0)
 ..W ?12
"RTN","KMPDTP2",104,0)
 ..I I<10 W $J(I-1*10,2)," to <",I*10
"RTN","KMPDTP2",105,0)
 ..E  W "90 or greater"
"RTN","KMPDTP2",106,0)
 ..W ?28,$J($FN($P(DATA,U,I),",",0),10)
"RTN","KMPDTP2",107,0)
 ..; percentages
"RTN","KMPDTP2",108,0)
 ..W ?44,$J($FN($P(DATA(1),U,I),"",1),10),"%",!
"RTN","KMPDTP2",109,0)
 ..; totals
"RTN","KMPDTP2",110,0)
 ..S $P(TOTAL,U)=$P(TOTAL,U)+$P(DATA,U,I)
"RTN","KMPDTP2",111,0)
 ..S $P(TOTAL,U,2)=$P(TOTAL,U,2)+$P(DATA(1),U,I)
"RTN","KMPDTP2",112,0)
 .;
"RTN","KMPDTP2",113,0)
 .; back to DATE level
"RTN","KMPDTP2",114,0)
 .; totals
"RTN","KMPDTP2",115,0)
 .W ?28,"----------",?44,"----------"
"RTN","KMPDTP2",116,0)
 .W !?28,$J($FN($P(TOTAL,U),",",0),10)
"RTN","KMPDTP2",117,0)
 .W ?44,$J($FN($P(TOTAL,U,2),"",0),10),"%"
"RTN","KMPDTP2",118,0)
 .W !!?12,"Incomplete",?28,$J($FN($P(DATA,U,50),",",0),10)
"RTN","KMPDTP2",119,0)
 .; page feed if another date
"RTN","KMPDTP2",120,0)
 .I $O(^TMP($J,DATE)) D 
"RTN","KMPDTP2",121,0)
 ..D CONTINUE^KMPDUTL4("",1,.CONT) Q:'CONT
"RTN","KMPDTP2",122,0)
 ..D HDR
"RTN","KMPDTP2",123,0)
 ;
"RTN","KMPDTP2",124,0)
 I CONT D 
"RTN","KMPDTP2",125,0)
 .; legend
"RTN","KMPDTP2",126,0)
 .W !!?2,"CV  = Coversheet",!?2,"TTL = Time-to-Load"
"RTN","KMPDTP2",127,0)
 .; pause if output to terminal
"RTN","KMPDTP2",128,0)
 .D CONTINUE^KMPDUTL4("Press RETURN to continue",1)
"RTN","KMPDTP2",129,0)
 ;
"RTN","KMPDTP2",130,0)
 Q
"RTN","KMPDTP2",131,0)
 ;
"RTN","KMPDTP2",132,0)
HDR ;-- print header
"RTN","KMPDTP2",133,0)
 W @IOF
"RTN","KMPDTP2",134,0)
 S X=$G(KMPDTTL)
"RTN","KMPDTP2",135,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP2",136,0)
 S X=$P($G(KMPDPTNP),U,2)
"RTN","KMPDTP2",137,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP2",138,0)
 S X=$G(KMPDATE(0)),X=$P(X,U,3)_" - "_$P(X,U,4)
"RTN","KMPDTP2",139,0)
 W !?(80-$L(X)\2),X,?61,"Printed: ",$$FMTE^XLFDT(DT,2)
"RTN","KMPDTP2",140,0)
 W !
"RTN","KMPDTP2",141,0)
 W !,"Date",?12,"TTL Seconds",?28,"# of CV Loads",?44,"CV Percent"
"RTN","KMPDTP2",142,0)
 W !,$$REPEAT^XLFSTR("-",IOM)
"RTN","KMPDTP2",143,0)
 ;
"RTN","KMPDTP2",144,0)
 Q
"RTN","KMPDTP2",145,0)
 ;
"RTN","KMPDTP2",146,0)
EXIT ;-- cleanup on exit
"RTN","KMPDTP2",147,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","KMPDTP2",148,0)
 D ^%ZISC
"RTN","KMPDTP2",149,0)
 K KMPDATE,KMPDPTNP,KMPDTTL
"RTN","KMPDTP2",150,0)
 Q
"RTN","KMPDTP3")
0^18^B20017179^B20017179
"RTN","KMPDTP3",1,0)
KMPDTP3 ;OAK/RAK - CP Timing Hourly Time-to-Load ;6/21/05  10:14
"RTN","KMPDTP3",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDTP3",3,0)
 ;
"RTN","KMPDTP3",4,0)
EN ;-- entry point
"RTN","KMPDTP3",5,0)
 N KMPDATE,KMPDTTL,POP,X,Y,ZTDESC,ZTRTN,ZTRSAVE,%ZIS
"RTN","KMPDTP3",6,0)
 S KMPDTTL=" Hourly Coversheet Time-to-Load (TTL) Report "
"RTN","KMPDTP3",7,0)
 D HDR^KMPDUTL4(KMPDTTL)
"RTN","KMPDTP3",8,0)
 W !
"RTN","KMPDTP3",9,0)
 W !?7,"This report displays the hourly average time-to-load value"
"RTN","KMPDTP3",10,0)
 W !?7,"for the coversheet at this site over 24 hours."
"RTN","KMPDTP3",11,0)
 W !
"RTN","KMPDTP3",12,0)
 ;
"RTN","KMPDTP3",13,0)
 ; if no data
"RTN","KMPDTP3",14,0)
 I '$O(^KMPD(8973.2,0)) D  Q
"RTN","KMPDTP3",15,0)
 .W !!?7,"*** There is currently no data in file #8973.2 (CP TIMING) ***"
"RTN","KMPDTP3",16,0)
 ;
"RTN","KMPDTP3",17,0)
 D DATERNG^KMPDTU10("ORWCV",1,.KMPDATE)
"RTN","KMPDTP3",18,0)
 Q:$G(KMPDATE(0))=""
"RTN","KMPDTP3",19,0)
 ; select output device.
"RTN","KMPDTP3",20,0)
 S %ZIS="Q",%ZIS("A")="Device: ",%ZIS("B")="HOME"
"RTN","KMPDTP3",21,0)
 W ! D ^%ZIS I POP W !,"No action taken." Q
"RTN","KMPDTP3",22,0)
 ; if queued.
"RTN","KMPDTP3",23,0)
 I $D(IO("Q")) K IO("Q") D  Q
"RTN","KMPDTP3",24,0)
 .S ZTDESC=KMPDTTL
"RTN","KMPDTP3",25,0)
 .S ZTRTN="EN1^KMPDTP3"
"RTN","KMPDTP3",26,0)
 .S ZTSAVE("KMPDATE(")="",ZTSAVE("KMPDTTL")=""
"RTN","KMPDTP3",27,0)
 .D ^%ZTLOAD W:$G(ZTSK) !,"Task #",ZTSK
"RTN","KMPDTP3",28,0)
 .D EXIT
"RTN","KMPDTP3",29,0)
 ;
"RTN","KMPDTP3",30,0)
 ; if output to terminal display message.
"RTN","KMPDTP3",31,0)
 W:$E(IOST,1,2)="C-" !,"Compiling timing stats..."
"RTN","KMPDTP3",32,0)
 D EN1
"RTN","KMPDTP3",33,0)
 ;
"RTN","KMPDTP3",34,0)
 Q
"RTN","KMPDTP3",35,0)
 ;
"RTN","KMPDTP3",36,0)
EN1 ;-- entry point from taskman
"RTN","KMPDTP3",37,0)
 Q:'$D(KMPDATE)
"RTN","KMPDTP3",38,0)
 K ^TMP($J)
"RTN","KMPDTP3",39,0)
 D DATA,PRINT,EXIT
"RTN","KMPDTP3",40,0)
 K ^TMP($J)
"RTN","KMPDTP3",41,0)
 Q
"RTN","KMPDTP3",42,0)
 ;
"RTN","KMPDTP3",43,0)
DATA ;-- compile data
"RTN","KMPDTP3",44,0)
 Q:'$D(KMPDATE)
"RTN","KMPDTP3",45,0)
 N DATA,DATE,DELTA,DOT,END,HR,I,IEN,PTNP,QUEUED,TOTAL
"RTN","KMPDTP3",46,0)
 S DATE=$P(KMPDATE(0),U)-.1,END=$P(KMPDATE(0),U,2)
"RTN","KMPDTP3",47,0)
 Q:'DATE!('END)
"RTN","KMPDTP3",48,0)
 S DOT=1,QUEUED=$D(ZTQUEUED)
"RTN","KMPDTP3",49,0)
 F  S DATE=$O(^KMPD(8973.2,"ASVDTSS","ORWCV",DATE)) Q:'DATE!(DATE>END)  D 
"RTN","KMPDTP3",50,0)
 .S (IEN,TOTAL)=0
"RTN","KMPDTP3",51,0)
 .; array with hours
"RTN","KMPDTP3",52,0)
 .F I=0:1:23 S ^TMP($J,DATE,I)=""
"RTN","KMPDTP3",53,0)
 .F  S IEN=$O(^KMPD(8973.2,"ASVDTSS","ORWCV",DATE,IEN)) Q:'IEN  D 
"RTN","KMPDTP3",54,0)
 ..Q:'$D(^KMPD(8973.2,IEN,0))  S DATA=^(0) Q:DATA=""
"RTN","KMPDTP3",55,0)
 ..S DOT=DOT+1 W:'QUEUED&('(DOT#1000)) "."
"RTN","KMPDTP3",56,0)
 ..; get delta and hour
"RTN","KMPDTP3",57,0)
 ..S DELTA=$P(DATA,U,4),HR=+$E($P($P(DATA,U,3),".",2),1,2)
"RTN","KMPDTP3",58,0)
 ..S HR=$S(HR="":0,HR=24:0,1:HR)
"RTN","KMPDTP3",59,0)
 ..; if delta
"RTN","KMPDTP3",60,0)
 ..I $P(DATA,U,4)'="" D 
"RTN","KMPDTP3",61,0)
 ...; minimum delta
"RTN","KMPDTP3",62,0)
 ...I $P(^TMP($J,DATE,HR),U,2)=""!($P(DATA,U,4)<$P(^TMP($J,DATE,HR),U,2)) D 
"RTN","KMPDTP3",63,0)
 ....S $P(^TMP($J,DATE,HR),U,2)=$P(DATA,U,4)
"RTN","KMPDTP3",64,0)
 ...; maximum delta
"RTN","KMPDTP3",65,0)
 ...I $P(DATA,U,4)>$P(^TMP($J,DATE,HR),U,3) S $P(^TMP($J,DATE,HR),U,3)=$P(DATA,U,4)
"RTN","KMPDTP3",66,0)
 ...; total delta
"RTN","KMPDTP3",67,0)
 ...S $P(^TMP($J,DATE,HR),U,4)=$P(^TMP($J,DATE,HR),U,4)+$P(DATA,U,4)
"RTN","KMPDTP3",68,0)
 ...; count
"RTN","KMPDTP3",69,0)
 ...S $P(^TMP($J,DATE,HR),U,5)=$P(^TMP($J,DATE,HR),U,5)+1
"RTN","KMPDTP3",70,0)
 ..; if no delta
"RTN","KMPDTP3",71,0)
 ..E  S $P(^TMP($J,DATE,HR),U,6)=$P(^TMP($J,DATE,HR),U,6)+1
"RTN","KMPDTP3",72,0)
 .;
"RTN","KMPDTP3",73,0)
 .; back to DATE level
"RTN","KMPDTP3",74,0)
 .; average
"RTN","KMPDTP3",75,0)
 .F I=0:1:23 I $P(^TMP($J,DATE,I),U,5) D 
"RTN","KMPDTP3",76,0)
 ..S $P(^TMP($J,DATE,I),U)=$P(^TMP($J,DATE,I),U,4)/$P(^TMP($J,DATE,I),U,5)
"RTN","KMPDTP3",77,0)
 ;
"RTN","KMPDTP3",78,0)
 Q
"RTN","KMPDTP3",79,0)
 ;
"RTN","KMPDTP3",80,0)
PRINT ;-- print data
"RTN","KMPDTP3",81,0)
 D HDR
"RTN","KMPDTP3",82,0)
 Q:'$D(^TMP($J))
"RTN","KMPDTP3",83,0)
 N CONT,DATE,HR,I,TOTAL
"RTN","KMPDTP3",84,0)
 S DATE="",CONT=1
"RTN","KMPDTP3",85,0)
 F  S DATE=$O(^TMP($J,DATE)) Q:'DATE  S HR="" D  Q:'CONT
"RTN","KMPDTP3",86,0)
 .S TOTAL=""
"RTN","KMPDTP3",87,0)
 .W !,$$FMTE^XLFDT(DATE,2)
"RTN","KMPDTP3",88,0)
 .F  S HR=$O(^TMP($J,DATE,HR)) Q:HR=""  D  Q:'CONT
"RTN","KMPDTP3",89,0)
 ..; page feed
"RTN","KMPDTP3",90,0)
 ..I $Y>(IOSL-3) D CONTINUE^KMPDUTL4("",1,.CONT) Q:'CONT  D HDR W !
"RTN","KMPDTP3",91,0)
 ..W ?12," ",$S($L(HR)=1:"0",1:""),HR
"RTN","KMPDTP3",92,0)
 ..S DATA=^TMP($J,DATE,HR)
"RTN","KMPDTP3",93,0)
 ..W ?20,$J($FN($P(DATA,U),",",0),10)
"RTN","KMPDTP3",94,0)
 ..W ?34,$J($FN($P(DATA,U,2),",",0),10)
"RTN","KMPDTP3",95,0)
 ..W ?48,$J($FN($P(DATA,U,3),",",0),10)
"RTN","KMPDTP3",96,0)
 ..W ?62,$J($FN($P(DATA,U,5),",",0),10)
"RTN","KMPDTP3",97,0)
 ..W !
"RTN","KMPDTP3",98,0)
 ..S $P(TOTAL,U)=$P(TOTAL,U)+$P(DATA,U,5)
"RTN","KMPDTP3",99,0)
 ..S $P(TOTAL,U,2)=$P(TOTAL,U,2)+$P(DATA,U,6)
"RTN","KMPDTP3",100,0)
 .;
"RTN","KMPDTP3",101,0)
 .; back to DATE level
"RTN","KMPDTP3",102,0)
 .; totals
"RTN","KMPDTP3",103,0)
 .W ?62,"----------",!?62,$J($FN(TOTAL,",",0),10),!
"RTN","KMPDTP3",104,0)
 .W !?12,"Incomplete: ",$J($FN($P(TOTAL,U,2),",",0),$L($P(TOTAL,U,2))+2),!
"RTN","KMPDTP3",105,0)
 .; if another date
"RTN","KMPDTP3",106,0)
 .I $O(^TMP($J,DATE)) D CONTINUE^KMPDUTL4("",1,.CONT) Q:'CONT  D HDR W !
"RTN","KMPDTP3",107,0)
 ;
"RTN","KMPDTP3",108,0)
 I CONT D 
"RTN","KMPDTP3",109,0)
 .; legend
"RTN","KMPDTP3",110,0)
 .W !!?2,"CV  = Coversheet",!?2,"TTL = Time-to-Load"
"RTN","KMPDTP3",111,0)
 .; pause if output to terminal
"RTN","KMPDTP3",112,0)
 .D CONTINUE^KMPDUTL4("Press RETURN to continue",1)
"RTN","KMPDTP3",113,0)
 ;
"RTN","KMPDTP3",114,0)
 Q
"RTN","KMPDTP3",115,0)
 ;
"RTN","KMPDTP3",116,0)
HDR ;-- print header
"RTN","KMPDTP3",117,0)
 W @IOF
"RTN","KMPDTP3",118,0)
 S X=$G(KMPDTTL)
"RTN","KMPDTP3",119,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP3",120,0)
 S X=$G(KMPDATE(0)),X=$P(X,U,3)_" - "_$P(X,U,4)
"RTN","KMPDTP3",121,0)
 W !?(80-$L(X)\2),X,?61,"Printed: ",$$FMTE^XLFDT(DT,2)
"RTN","KMPDTP3",122,0)
 W !
"RTN","KMPDTP3",123,0)
 W !?20,"|---------------Seconds---------------|"
"RTN","KMPDTP3",124,0)
 W !,"Date",?12,"Hour",?20,"TTL Average",?34,"TTL Minimum",?48,"TTL Maximum",?62,"# of CV Loads"
"RTN","KMPDTP3",125,0)
 W !,$$REPEAT^XLFSTR("-",IOM)
"RTN","KMPDTP3",126,0)
 ;
"RTN","KMPDTP3",127,0)
 Q
"RTN","KMPDTP3",128,0)
 ;
"RTN","KMPDTP3",129,0)
EXIT ;-- cleanup on exit
"RTN","KMPDTP3",130,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","KMPDTP3",131,0)
 D ^%ZISC
"RTN","KMPDTP3",132,0)
 K KMPDATE,KMPDTTL
"RTN","KMPDTP3",133,0)
 Q
"RTN","KMPDTP4")
0^19^B27036478^B27036478
"RTN","KMPDTP4",1,0)
KMPDTP4 ;OAK/RAK - CP Timing Hourly Time-to-Load ;2/17/04  09:38
"RTN","KMPDTP4",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDTP4",3,0)
 ;
"RTN","KMPDTP4",4,0)
EN ;-- entry point
"RTN","KMPDTP4",5,0)
 ;
"RTN","KMPDTP4",6,0)
 N KMPDATE,KMPDTTL,POP,X,Y,ZTDESC,ZTRTN,ZTRSAVE,ZTSK,%ZIS
"RTN","KMPDTP4",7,0)
 ;
"RTN","KMPDTP4",8,0)
 S KMPDTTL=" Hourly Coversheet Time-to-Load (TTL) Detail Report "
"RTN","KMPDTP4",9,0)
 D HDR^KMPDUTL4(KMPDTTL)
"RTN","KMPDTP4",10,0)
 W !
"RTN","KMPDTP4",11,0)
 W !?7,"This detail report displays the hourly time-to-load values"
"RTN","KMPDTP4",12,0)
 W !?7,"for the coversheet at this site.  The report breaks the"
"RTN","KMPDTP4",13,0)
 W !?7,"time-to-load metrics into ten second groupings."
"RTN","KMPDTP4",14,0)
 W !
"RTN","KMPDTP4",15,0)
 ;
"RTN","KMPDTP4",16,0)
 ; if no data
"RTN","KMPDTP4",17,0)
 I '$O(^KMPD(8973.2,0)) D  Q
"RTN","KMPDTP4",18,0)
 .W !!?7,"*** There is currently no data in file #8973.2 (CP TIMING) ***"
"RTN","KMPDTP4",19,0)
 ;
"RTN","KMPDTP4",20,0)
 ; date & hour(s)
"RTN","KMPDTP4",21,0)
 D DTTMRNG^KMPDTU10("ORWCV",1,.KMPDATE,8)
"RTN","KMPDTP4",22,0)
 Q:$G(KMPDATE(0))=""
"RTN","KMPDTP4",23,0)
 Q:$G(KMPDATE(1))=""
"RTN","KMPDTP4",24,0)
 ;
"RTN","KMPDTP4",25,0)
 ; select output device.
"RTN","KMPDTP4",26,0)
 S %ZIS="Q",%ZIS("A")="Device: ",%ZIS("B")="HOME"
"RTN","KMPDTP4",27,0)
 W ! D ^%ZIS I POP W !,"No action taken." Q
"RTN","KMPDTP4",28,0)
 ; if queued.
"RTN","KMPDTP4",29,0)
 I $D(IO("Q")) K IO("Q") D  Q
"RTN","KMPDTP4",30,0)
 .S ZTDESC=KMPDTTL
"RTN","KMPDTP4",31,0)
 .S ZTRTN="EN1^KMPDTP4"
"RTN","KMPDTP4",32,0)
 .S ZTSAVE("KMPDATE(")="",ZTSAVE("KMPDTTL")=""
"RTN","KMPDTP4",33,0)
 .D ^%ZTLOAD W:$G(ZTSK) !,"Task #",ZTSK
"RTN","KMPDTP4",34,0)
 .D EXIT
"RTN","KMPDTP4",35,0)
 ;
"RTN","KMPDTP4",36,0)
 ; if output to terminal display message.
"RTN","KMPDTP4",37,0)
 W:$E(IOST,1,2)="C-" !,"Compiling timing stats..."
"RTN","KMPDTP4",38,0)
 D EN1
"RTN","KMPDTP4",39,0)
 ;
"RTN","KMPDTP4",40,0)
 Q
"RTN","KMPDTP4",41,0)
 ;
"RTN","KMPDTP4",42,0)
EN1 ;-- entry point from taskman
"RTN","KMPDTP4",43,0)
 Q:'$D(KMPDATE)
"RTN","KMPDTP4",44,0)
 K ^TMP($J)
"RTN","KMPDTP4",45,0)
 D DATA,PRINT,EXIT
"RTN","KMPDTP4",46,0)
 K ^TMP($J)
"RTN","KMPDTP4",47,0)
 Q
"RTN","KMPDTP4",48,0)
 ;
"RTN","KMPDTP4",49,0)
DATA ;-- compile data
"RTN","KMPDTP4",50,0)
 ;
"RTN","KMPDTP4",51,0)
 Q:'$D(KMPDATE)
"RTN","KMPDTP4",52,0)
 ;
"RTN","KMPDTP4",53,0)
 N DATA,DATE,DATE1,DELTA,DOT,END,HOUR,HR,I,IEN,PTNP,QUEUED,TOTAL
"RTN","KMPDTP4",54,0)
 ;
"RTN","KMPDTP4",55,0)
 S DOT=1,QUEUED=$D(ZTQUEUED)
"RTN","KMPDTP4",56,0)
 ; set up HOUR() array
"RTN","KMPDTP4",57,0)
 F I=1:1:24 S:$P(KMPDATE(1),",",I)'="" HOUR(+$P(KMPDATE(1),",",I))=""
"RTN","KMPDTP4",58,0)
 Q:'$D(HOUR)
"RTN","KMPDTP4",59,0)
 S DATE=$P(KMPDATE(0),U)-.1,END=$P(KMPDATE(0),U,2)+.9
"RTN","KMPDTP4",60,0)
 Q:'DATE!('END)
"RTN","KMPDTP4",61,0)
 F  S DATE=$O(^KMPD(8973.2,"ASSDTTM","ORWCV",DATE)) Q:'DATE!(DATE>END)  D 
"RTN","KMPDTP4",62,0)
 .; date without time
"RTN","KMPDTP4",63,0)
 .S DATE1=$P(DATE,".")
"RTN","KMPDTP4",64,0)
 .; set up HOUR() array
"RTN","KMPDTP4",65,0)
 .M:'$D(^TMP($J,DATE1)) ^TMP($J,DATE1)=HOUR
"RTN","KMPDTP4",66,0)
 .; set up TOTAL() array
"RTN","KMPDTP4",67,0)
 .M:'$D(TOTAL(DATE1)) TOTAL(DATE1)=HOUR
"RTN","KMPDTP4",68,0)
 .S IEN=0
"RTN","KMPDTP4",69,0)
 .F  S IEN=$O(^KMPD(8973.2,"ASSDTTM","ORWCV",DATE,IEN)) Q:'IEN  D 
"RTN","KMPDTP4",70,0)
 ..S HR=+$E($P(DATE,".",2),1,2) S:HR="" HR="0"
"RTN","KMPDTP4",71,0)
 ..Q:'$D(HOUR(HR))
"RTN","KMPDTP4",72,0)
 ..Q:'$D(^KMPD(8973.2,IEN,0))  S DATA=^(0) Q:DATA=""
"RTN","KMPDTP4",73,0)
 ..S DOT=DOT+1 W:'QUEUED&('(DOT#1000)) "."
"RTN","KMPDTP4",74,0)
 ..S DELTA=$P(DATA,U,4)
"RTN","KMPDTP4",75,0)
 ..; if delta is null increment by 1 and quit
"RTN","KMPDTP4",76,0)
 ..I DELTA="" S $P(^TMP($J,DATE1,HR),U,50)=$P(^TMP($J,DATE1,HR),U,50)+1 Q
"RTN","KMPDTP4",77,0)
 ..; total
"RTN","KMPDTP4",78,0)
 ..S TOTAL(DATE1,HR)=TOTAL(DATE1,HR)+1
"RTN","KMPDTP4",79,0)
 ..;
"RTN","KMPDTP4",80,0)
 ..;
"RTN","KMPDTP4",81,0)
 ..; loop - less than I*10 seconds
"RTN","KMPDTP4",82,0)
 ..F I=1:1:9 I DELTA<(I*10) S $P(^TMP($J,DATE1,HR),U,I)=$P(^TMP($J,DATE1,HR),U,I)+1 Q
"RTN","KMPDTP4",83,0)
 ..; 90 or greater seconds
"RTN","KMPDTP4",84,0)
 ..I DELTA>89 S $P(^TMP($J,DATE1,HR),U,10)=$P(^TMP($J,DATE1,HR),U,10)+1
"RTN","KMPDTP4",85,0)
 ;
"RTN","KMPDTP4",86,0)
 ; determine percentage
"RTN","KMPDTP4",87,0)
 S DATE1=0
"RTN","KMPDTP4",88,0)
 F  S DATE1=$O(TOTAL(DATE1)) Q:'DATE1  S HR="" D 
"RTN","KMPDTP4",89,0)
 .F  S HR=$O(TOTAL(DATE1,HR)) Q:HR=""  I TOTAL(DATE1,HR) F I=1:1:10 D 
"RTN","KMPDTP4",90,0)
 ..S $P(^TMP($J,DATE1,HR,1),U,I)=$FN($P(^TMP($J,DATE1,HR),U,I)/TOTAL(DATE1,HR)*100,"",1)
"RTN","KMPDTP4",91,0)
 ;
"RTN","KMPDTP4",92,0)
 Q
"RTN","KMPDTP4",93,0)
 ;
"RTN","KMPDTP4",94,0)
PRINT ;-- print data
"RTN","KMPDTP4",95,0)
 ;
"RTN","KMPDTP4",96,0)
 U IO
"RTN","KMPDTP4",97,0)
 D HDR
"RTN","KMPDTP4",98,0)
 Q:'$D(^TMP($J))
"RTN","KMPDTP4",99,0)
 N CONT,DATE,I,TOTAL
"RTN","KMPDTP4",100,0)
 S DATE="",CONT=1
"RTN","KMPDTP4",101,0)
 F  S DATE=$O(^TMP($J,DATE)) Q:'DATE  D  Q:'CONT
"RTN","KMPDTP4",102,0)
 .W !,$$FMTE^XLFDT(DATE,2) S HR=""
"RTN","KMPDTP4",103,0)
 .F  S HR=$O(^TMP($J,DATE,HR)) Q:HR=""  D  Q:'CONT
"RTN","KMPDTP4",104,0)
 ..I $Y>(IOSL-9) D  Q:'CONT
"RTN","KMPDTP4",105,0)
 ...D CONTINUE^KMPDUTL4("",1,.CONT) Q:'CONT
"RTN","KMPDTP4",106,0)
 ...D HDR W !,$$FMTE^XLFDT(DATE,2)
"RTN","KMPDTP4",107,0)
 ..W ?12,HR
"RTN","KMPDTP4",108,0)
 ..S TOTAL="",DATA=^TMP($J,DATE,HR),DATA(1)=$G(^TMP($J,DATE,HR,1))
"RTN","KMPDTP4",109,0)
 ..; if no data
"RTN","KMPDTP4",110,0)
 ..I DATA="" W ?12,"<No Data>",! Q
"RTN","KMPDTP4",111,0)
 ..; display data
"RTN","KMPDTP4",112,0)
 ..F I=1:1:9 D 
"RTN","KMPDTP4",113,0)
 ...W ?16,I-1*10," to <",I*10
"RTN","KMPDTP4",114,0)
 ...W ?32,$J($FN($P(DATA,U,I),",",0),10)
"RTN","KMPDTP4",115,0)
 ...; percentages
"RTN","KMPDTP4",116,0)
 ...W ?48,$J($FN($P(DATA(1),U,I),"",1),10),"%"
"RTN","KMPDTP4",117,0)
 ...W !
"RTN","KMPDTP4",118,0)
 ...; totals
"RTN","KMPDTP4",119,0)
 ...S $P(TOTAL,U)=$P(TOTAL,U)+$P(DATA,U,I)
"RTN","KMPDTP4",120,0)
 ...S $P(TOTAL,U,2)=$P(TOTAL,U,2)+$P(DATA(1),U,I)
"RTN","KMPDTP4",121,0)
 ..;
"RTN","KMPDTP4",122,0)
 ..; back to DATE level
"RTN","KMPDTP4",123,0)
 ..; greater than 90
"RTN","KMPDTP4",124,0)
 ..W ?16,"90 or greater",?32,$J($FN($P(DATA,U,10),",",0),10)
"RTN","KMPDTP4",125,0)
 ..W ?48,$J($FN($P(DATA(1),U,10),"",1),10),"%"
"RTN","KMPDTP4",126,0)
 ..S $P(TOTAL,U)=$P(TOTAL,U)+$P(DATA,U,10)
"RTN","KMPDTP4",127,0)
 ..S $P(TOTAL,U,2)=$P(TOTAL,U,2)+$P(DATA(1),U,10)
"RTN","KMPDTP4",128,0)
 ..; totals
"RTN","KMPDTP4",129,0)
 ..W !?32,"----------",?48,"----------"
"RTN","KMPDTP4",130,0)
 ..W !?32,$J($FN($P(TOTAL,U),",",0),10)
"RTN","KMPDTP4",131,0)
 ..W ?48,$J($FN($P(TOTAL,U,2),"",0),10),"%"
"RTN","KMPDTP4",132,0)
 ..W !?16,"Incomplete",?32,$J($FN($P(DATA,U,50),",",0),10),!
"RTN","KMPDTP4",133,0)
 ..; page feed if another date
"RTN","KMPDTP4",134,0)
 ..I $O(^TMP($J,DATE)) D 
"RTN","KMPDTP4",135,0)
 ...D CONTINUE^KMPDUTL4("",1,.CONT) Q:'CONT
"RTN","KMPDTP4",136,0)
 ...D HDR
"RTN","KMPDTP4",137,0)
 ..W !
"RTN","KMPDTP4",138,0)
 ;
"RTN","KMPDTP4",139,0)
 I CONT D 
"RTN","KMPDTP4",140,0)
 .; legend
"RTN","KMPDTP4",141,0)
 .W !!?2,"CV  = Coversheet",!?2,"TTL = Time-to-Load"
"RTN","KMPDTP4",142,0)
 .; pause if output to terminal
"RTN","KMPDTP4",143,0)
 .D CONTINUE^KMPDUTL4("Press RETURN to continue",1)
"RTN","KMPDTP4",144,0)
 ;
"RTN","KMPDTP4",145,0)
 Q
"RTN","KMPDTP4",146,0)
 ;
"RTN","KMPDTP4",147,0)
HDR ;-- print header
"RTN","KMPDTP4",148,0)
 W @IOF
"RTN","KMPDTP4",149,0)
 S X=$G(KMPDTTL)
"RTN","KMPDTP4",150,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP4",151,0)
 S X=$G(KMPDATE(0)),X=$P(X,U,3)_" - "_$P(X,U,4)
"RTN","KMPDTP4",152,0)
 W !?(80-$L(X)\2),X,?61,"Printed: ",$$FMTE^XLFDT(DT,2)
"RTN","KMPDTP4",153,0)
 W !
"RTN","KMPDTP4",154,0)
 W !,"Date",?12,"Hr",?16,"TTL Seconds",?32,"# CV Loads",?48,"CV Percent"
"RTN","KMPDTP4",155,0)
 W !,$$REPEAT^XLFSTR("-",IOM)
"RTN","KMPDTP4",156,0)
 ;
"RTN","KMPDTP4",157,0)
 Q
"RTN","KMPDTP4",158,0)
 ;
"RTN","KMPDTP4",159,0)
EXIT ;-- cleanup on exit
"RTN","KMPDTP4",160,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","KMPDTP4",161,0)
 D ^%ZISC
"RTN","KMPDTP4",162,0)
 K KMPDATE,KMPDTTL
"RTN","KMPDTP4",163,0)
 Q
"RTN","KMPDTP5")
0^20^B28201133^B27612696
"RTN","KMPDTP5",1,0)
KMPDTP5 ;OAK/RAK - CP Timing Threshold Alert ;6/21/05  10:15
"RTN","KMPDTP5",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDTP5",3,0)
 ;
"RTN","KMPDTP5",4,0)
EN ;-- entry point
"RTN","KMPDTP5",5,0)
 ;
"RTN","KMPDTP5",6,0)
 N I,KMPDATE,KMPDSRCH,KMPDTSEC,KMPDTTL,POP,X,Y
"RTN","KMPDTP5",7,0)
 N ZTDESC,ZTRTN,ZTRSAVE,ZTSK,%ZIS
"RTN","KMPDTP5",8,0)
 ;
"RTN","KMPDTP5",9,0)
 S KMPDTTL=" Coversheet Time-to-Load (TTL) Alert Report "
"RTN","KMPDTP5",10,0)
 D HDR^KMPDUTL4(KMPDTTL)
"RTN","KMPDTP5",11,0)
 W !
"RTN","KMPDTP5",12,0)
 W !?7,"This alerting report shows the particular coversheet loads"
"RTN","KMPDTP5",13,0)
 W !?7,"that had excessive time-to-load values. This report will"
"RTN","KMPDTP5",14,0)
 W !?7,"search for a particular person, a particular client name or"
"RTN","KMPDTP5",15,0)
 W !?7,"IP address."
"RTN","KMPDTP5",16,0)
 W !
"RTN","KMPDTP5",17,0)
 ;
"RTN","KMPDTP5",18,0)
 ; if no data
"RTN","KMPDTP5",19,0)
 I '$O(^KMPD(8973.2,0)) D  Q
"RTN","KMPDTP5",20,0)
 .W !!?7,"*** There is currently no data in file #8973.2 (CP TIMING) ***"
"RTN","KMPDTP5",21,0)
 ;
"RTN","KMPDTP5",22,0)
 ; date & hour(s)
"RTN","KMPDTP5",23,0)
 D DTTMRNG^KMPDTU10("ORWCV",1,.KMPDATE,8)
"RTN","KMPDTP5",24,0)
 Q:$G(KMPDATE(0))=""
"RTN","KMPDTP5",25,0)
 Q:$G(KMPDATE(1))=""
"RTN","KMPDTP5",26,0)
 ;
"RTN","KMPDTP5",27,0)
 ; time-to-load threshold seconds
"RTN","KMPDTP5",28,0)
 S KMPDTSEC=$$TTLSEC^KMPDTU10
"RTN","KMPDTP5",29,0)
 Q:'KMPDTSEC
"RTN","KMPDTP5",30,0)
 ;
"RTN","KMPDTP5",31,0)
 ; search by
"RTN","KMPDTP5",32,0)
 D SRCHBY^KMPDTU10(.KMPDSRCH,"ORWCV")
"RTN","KMPDTP5",33,0)
 Q:'KMPDSRCH
"RTN","KMPDTP5",34,0)
 ;
"RTN","KMPDTP5",35,0)
 ; select output device.
"RTN","KMPDTP5",36,0)
 S %ZIS="Q",%ZIS("A")="Device: ",%ZIS("B")="HOME"
"RTN","KMPDTP5",37,0)
 W ! D ^%ZIS I POP W !,"No action taken." Q
"RTN","KMPDTP5",38,0)
 ; if queued.
"RTN","KMPDTP5",39,0)
 I $D(IO("Q")) K IO("Q") D  Q
"RTN","KMPDTP5",40,0)
 .S ZTDESC=KMPDTTL
"RTN","KMPDTP5",41,0)
 .S ZTRTN="EN1^KMPDTP5"
"RTN","KMPDTP5",42,0)
 .F I="KMPDATE(","KMPDSRCH(","KMPDTSEC","KMPDTTL" S ZTSAVE(I)=""
"RTN","KMPDTP5",43,0)
 .D ^%ZTLOAD W:$G(ZTSK) !,"Task #",ZTSK
"RTN","KMPDTP5",44,0)
 .D EXIT
"RTN","KMPDTP5",45,0)
 ;
"RTN","KMPDTP5",46,0)
 ; if output to terminal display message.
"RTN","KMPDTP5",47,0)
 W:$E(IOST,1,2)="C-" !,"Compiling timing stats..."
"RTN","KMPDTP5",48,0)
 D EN1
"RTN","KMPDTP5",49,0)
 ;
"RTN","KMPDTP5",50,0)
 Q
"RTN","KMPDTP5",51,0)
 ;
"RTN","KMPDTP5",52,0)
EN1 ;-- entry point from taskman
"RTN","KMPDTP5",53,0)
 I '$D(KMPDATE) D EXIT Q
"RTN","KMPDTP5",54,0)
 I '$D(KMPDSRCH) D EXIT Q
"RTN","KMPDTP5",55,0)
 I '$G(KMPDTSEC) D EXIT Q
"RTN","KMPDTP5",56,0)
 I $G(KMPDTTL)="" D EXIT Q
"RTN","KMPDTP5",57,0)
 ;
"RTN","KMPDTP5",58,0)
 K ^TMP($J)
"RTN","KMPDTP5",59,0)
 U IO
"RTN","KMPDTP5",60,0)
 D DATA,PRINT,EXIT
"RTN","KMPDTP5",61,0)
 K ^TMP($J)
"RTN","KMPDTP5",62,0)
 Q
"RTN","KMPDTP5",63,0)
 ;
"RTN","KMPDTP5",64,0)
DATA ;-- compile data
"RTN","KMPDTP5",65,0)
 ;
"RTN","KMPDTP5",66,0)
 Q:'$D(KMPDATE)
"RTN","KMPDTP5",67,0)
 Q:'$G(KMPDSRCH)
"RTN","KMPDTP5",68,0)
 Q:'$G(KMPDTSEC)
"RTN","KMPDTP5",69,0)
 ;
"RTN","KMPDTP5",70,0)
 N DATA,DATE,DATE1,DELTA,DOT,END,GBL,HOUR,HR,I,IEN,QUEUED,TIME,XREF
"RTN","KMPDTP5",71,0)
 ;
"RTN","KMPDTP5",72,0)
 S DOT=1,QUEUED=$D(ZTQUEUED)
"RTN","KMPDTP5",73,0)
 ; set up HOUR() array
"RTN","KMPDTP5",74,0)
 F I=1:1:24 S:$P(KMPDATE(1),",",I)'="" HOUR(+$P(KMPDATE(1),",",I))=""
"RTN","KMPDTP5",75,0)
 Q:'$D(HOUR)
"RTN","KMPDTP5",76,0)
 S DATE=$P(KMPDATE(0),U)-.1,END=$P(KMPDATE(0),U,2)+.9
"RTN","KMPDTP5",77,0)
 Q:'DATE!('END)
"RTN","KMPDTP5",78,0)
 S GBL=$$GLOBAL(.KMPDSRCH) Q:GBL=""
"RTN","KMPDTP5",79,0)
 F  S DATE=$O(@GBL@(DATE)) Q:'DATE!(DATE>END)  D 
"RTN","KMPDTP5",80,0)
 .; determine hour
"RTN","KMPDTP5",81,0)
 .S HR=+$E($P(DATE,".",2),1,2)
"RTN","KMPDTP5",82,0)
 .S HR=$S(HR="":0,HR=24:0,1:HR)
"RTN","KMPDTP5",83,0)
 .; quit if not in HOUR() array
"RTN","KMPDTP5",84,0)
 .Q:'$D(HOUR(HR))
"RTN","KMPDTP5",85,0)
 .; hour & second
"RTN","KMPDTP5",86,0)
 .S TIME=$E($P(DATE,".",2),1,4) Q:'TIME
"RTN","KMPDTP5",87,0)
 .; insert colon (:) between hour & second
"RTN","KMPDTP5",88,0)
 .S TIME=$E(TIME,1,2)_":"_$E(TIME,3,4)
"RTN","KMPDTP5",89,0)
 .; date without time
"RTN","KMPDTP5",90,0)
 .S DATE1=$P(DATE,".")
"RTN","KMPDTP5",91,0)
 .S IEN=0
"RTN","KMPDTP5",92,0)
 .F  S IEN=$O(@GBL@(DATE,IEN)) Q:'IEN  D 
"RTN","KMPDTP5",93,0)
 ..Q:'$D(^KMPD(8973.2,IEN,0))  S DATA=^(0) Q:DATA=""
"RTN","KMPDTP5",94,0)
 ..S DOT=DOT+1 W:'QUEUED&('(DOT#1000)) "."
"RTN","KMPDTP5",95,0)
 ..S DELTA=$P(DATA,U,4)
"RTN","KMPDTP5",96,0)
 ..; quit if delta is less than threshold
"RTN","KMPDTP5",97,0)
 ..Q:DELTA<KMPDTSEC
"RTN","KMPDTP5",98,0)
 ..S ^TMP($J,DATE1,TIME)=DATA
"RTN","KMPDTP5",99,0)
 ..; new person - external format
"RTN","KMPDTP5",100,0)
 ..S $P(^TMP($J,DATE1,TIME),U,5)=$P($G(^VA(200,+$P(DATA,U,5),0)),U)
"RTN","KMPDTP5",101,0)
 ;
"RTN","KMPDTP5",102,0)
 Q
"RTN","KMPDTP5",103,0)
 ;
"RTN","KMPDTP5",104,0)
PRINT ;-- print data
"RTN","KMPDTP5",105,0)
 ;
"RTN","KMPDTP5",106,0)
 U IO
"RTN","KMPDTP5",107,0)
 D HDR
"RTN","KMPDTP5",108,0)
 Q:'$D(^TMP($J))
"RTN","KMPDTP5",109,0)
 N CONT,DATE,I,TOTAL
"RTN","KMPDTP5",110,0)
 S DATE="",CONT=1,TOTAL=0
"RTN","KMPDTP5",111,0)
 F  S DATE=$O(^TMP($J,DATE)) Q:'DATE  D  Q:'CONT
"RTN","KMPDTP5",112,0)
 .W !,$$FMTE^XLFDT(DATE,2) S HR=""
"RTN","KMPDTP5",113,0)
 .F  S HR=$O(^TMP($J,DATE,HR)) Q:HR=""  D  Q:'CONT
"RTN","KMPDTP5",114,0)
 ..I $Y>(IOSL-4) D  Q:'CONT
"RTN","KMPDTP5",115,0)
 ...D CONTINUE^KMPDUTL4("",1,.CONT) Q:'CONT
"RTN","KMPDTP5",116,0)
 ...D HDR W !,$$FMTE^XLFDT(DATE,2)
"RTN","KMPDTP5",117,0)
 ..W ?10,HR
"RTN","KMPDTP5",118,0)
 ..S DATA=^TMP($J,DATE,HR),TOTAL=TOTAL+1
"RTN","KMPDTP5",119,0)
 ..; user name
"RTN","KMPDTP5",120,0)
 ..W ?16,$S($P(DATA,U,5)]"":$E($P(DATA,U,5),1,15),1:"N/A")
"RTN","KMPDTP5",121,0)
 ..; client name
"RTN","KMPDTP5",122,0)
 ..W ?33,$S($P(DATA,U,6)]"":$E($P(DATA,U,6),1,15),1:"N/A")
"RTN","KMPDTP5",123,0)
 ..; ip address
"RTN","KMPDTP5",124,0)
 ..W ?50,$S($P(DATA,U,9)]"":$P(DATA,U,9),1:"N/A")
"RTN","KMPDTP5",125,0)
 ..; server delta
"RTN","KMPDTP5",126,0)
 ..W ?67,$J($P(DATA,U,4),8)
"RTN","KMPDTP5",127,0)
 ..W ! W:$E($O(^TMP($J,DATE,HR)),1,2)'=$E(HR,1,2) !
"RTN","KMPDTP5",128,0)
 ;
"RTN","KMPDTP5",129,0)
 ;I TOTAL W !!?3,"Total Count: ",$J($FN(TOTAL,",",0),$L(TOTAL)+1)
"RTN","KMPDTP5",130,0)
 ;
"RTN","KMPDTP5",131,0)
 ; pause if output to terminal
"RTN","KMPDTP5",132,0)
 I CONT D CONTINUE^KMPDUTL4("Press RETURN to continue",1)
"RTN","KMPDTP5",133,0)
 ;
"RTN","KMPDTP5",134,0)
 Q
"RTN","KMPDTP5",135,0)
 ;
"RTN","KMPDTP5",136,0)
HDR ;-- print header
"RTN","KMPDTP5",137,0)
 W @IOF
"RTN","KMPDTP5",138,0)
 S X=$G(KMPDTTL)
"RTN","KMPDTP5",139,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP5",140,0)
 S X=$G(KMPDATE(0)),X=$P(X,U,3)_" - "_$P(X,U,4)
"RTN","KMPDTP5",141,0)
 W !?(80-$L(X)\2),X,?61,"Printed: ",$$FMTE^XLFDT(DT,2)
"RTN","KMPDTP5",142,0)
 S X=$P($G(KMPDSRCH),U,2)_": "
"RTN","KMPDTP5",143,0)
 S X=X_$P($G(KMPDSRCH(1)),U,$S((+$G(KMPDSRCH))=1:2,1:1))
"RTN","KMPDTP5",144,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP5",145,0)
 S X="Threshold: "_$G(KMPDTSEC)_" seconds"
"RTN","KMPDTP5",146,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP5",147,0)
 W !
"RTN","KMPDTP5",148,0)
 W !,"Date",?10,"Time",?16,"User Name",?33,"Client Name",?50,"IP Address",?67,"Time-to-Load"
"RTN","KMPDTP5",149,0)
 W !,$$REPEAT^XLFSTR("-",IOM)
"RTN","KMPDTP5",150,0)
 ;
"RTN","KMPDTP5",151,0)
 Q
"RTN","KMPDTP5",152,0)
 ;
"RTN","KMPDTP5",153,0)
EXIT ;-- cleanup on exit
"RTN","KMPDTP5",154,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","KMPDTP5",155,0)
 D ^%ZISC
"RTN","KMPDTP5",156,0)
 K KMPDATE,KMPDSRCH,KMPDTSEC,KMPDTTL
"RTN","KMPDTP5",157,0)
 Q
"RTN","KMPDTP5",158,0)
 ;
"RTN","KMPDTP5",159,0)
GLOBAL(KMPDSRCH) ;-- extrinsic function
"RTN","KMPDTP5",160,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTP5",161,0)
 ; KMPDSRCH... see above
"RTN","KMPDTP5",162,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTP5",163,0)
 Q:'$G(KMPDSRCH) ""
"RTN","KMPDTP5",164,0)
 N GLOBAL,TYPE
"RTN","KMPDTP5",165,0)
 S GLOBAL=""
"RTN","KMPDTP5",166,0)
 S TYPE=+$G(KMPDSRCH),KMPDSRCH(1)=$G(KMPDSRCH(1))
"RTN","KMPDTP5",167,0)
 Q:'TYPE ""
"RTN","KMPDTP5",168,0)
 ; any occurrence
"RTN","KMPDTP5",169,0)
 I TYPE=4 S GLOBAL=$NA(^KMPD(8973.2,"ASSDTTM","ORWCV"))
"RTN","KMPDTP5",170,0)
 Q:KMPDSRCH(1)="" ""
"RTN","KMPDTP5",171,0)
 ; username
"RTN","KMPDTP5",172,0)
 I TYPE=1 S GLOBAL=$NA(^KMPD(8973.2,"ASSNPDTTM","ORWCV",+$P(KMPDSRCH(1),U)))
"RTN","KMPDTP5",173,0)
 ; client name
"RTN","KMPDTP5",174,0)
 I TYPE=2 S GLOBAL=$NA(^KMPD(8973.2,"ASSCLDTTM","ORWCV",KMPDSRCH(1)))
"RTN","KMPDTP5",175,0)
 ; ip address
"RTN","KMPDTP5",176,0)
 I TYPE=3 S GLOBAL=$NA(^KMPD(8973.2,"ASSIPDTTM","ORWCV",KMPDSRCH(1)))
"RTN","KMPDTP5",177,0)
 Q GLOBAL
"RTN","KMPDTP6")
0^21^B26949846^B26949846
"RTN","KMPDTP6",1,0)
KMPDTP6 ;OAK/RAK - CP Timing Real-Time Threshold Alert ;6/21/05  10:15
"RTN","KMPDTP6",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDTP6",3,0)
 ;
"RTN","KMPDTP6",4,0)
EN ;-- entry point
"RTN","KMPDTP6",5,0)
 ;
"RTN","KMPDTP6",6,0)
 N I,KMPDHOUR,KMPDSRCH,KMPDTSEC,KMPDTTL,POP,X,Y
"RTN","KMPDTP6",7,0)
 N ZTDESC,ZTRTN,ZTRSAVE,ZTSK,%ZIS
"RTN","KMPDTP6",8,0)
 ;
"RTN","KMPDTP6",9,0)
 S KMPDTTL=" Coversheet Time-to-Load Alert Report > Real-Time "
"RTN","KMPDTP6",10,0)
 D HDR^KMPDUTL4(KMPDTTL)
"RTN","KMPDTP6",11,0)
 W !
"RTN","KMPDTP6",12,0)
 W !?7,"This alerting report shows the particular coversheet loads"
"RTN","KMPDTP6",13,0)
 W !?7,"that have excessive time-to-load values for TODAY (Real-Time)."
"RTN","KMPDTP6",14,0)
 W !?7,"This report will search for a particular person, a particular"
"RTN","KMPDTP6",15,0)
 W !?7,"client name or IP address."
"RTN","KMPDTP6",16,0)
 W !
"RTN","KMPDTP6",17,0)
 ;
"RTN","KMPDTP6",18,0)
 ; if no data
"RTN","KMPDTP6",19,0)
 I $O(^KMPTMP("KMPDT","ORWCV",""))="" D  Q
"RTN","KMPDTP6",20,0)
 .W !!?7,"*** There is currently no data in global ^KMPTMP(""KMPDT"",""ORWCV"") ***"
"RTN","KMPDTP6",21,0)
 ;
"RTN","KMPDTP6",22,0)
 ; hours
"RTN","KMPDTP6",23,0)
 S KMPDHOUR=$$RLTMHR^KMPDTU11(0,1,1)
"RTN","KMPDTP6",24,0)
 Q:KMPDHOUR=""
"RTN","KMPDTP6",25,0)
 ;
"RTN","KMPDTP6",26,0)
 ; time-to-load threshold seconds
"RTN","KMPDTP6",27,0)
 S KMPDTSEC=$$TTLSEC^KMPDTU10
"RTN","KMPDTP6",28,0)
 Q:'KMPDTSEC
"RTN","KMPDTP6",29,0)
 ;
"RTN","KMPDTP6",30,0)
 ; search by
"RTN","KMPDTP6",31,0)
 D SRCHBY^KMPDTU10(.KMPDSRCH,"ORWCV",1)
"RTN","KMPDTP6",32,0)
 Q:'KMPDSRCH
"RTN","KMPDTP6",33,0)
 ;
"RTN","KMPDTP6",34,0)
 ; select output device.
"RTN","KMPDTP6",35,0)
 S %ZIS="Q",%ZIS("A")="Device: ",%ZIS("B")="HOME"
"RTN","KMPDTP6",36,0)
 W ! D ^%ZIS I POP W !,"No action taken." Q
"RTN","KMPDTP6",37,0)
 ; if queued.
"RTN","KMPDTP6",38,0)
 I $D(IO("Q")) K IO("Q") D  Q
"RTN","KMPDTP6",39,0)
 .S ZTDESC=KMPDTTL
"RTN","KMPDTP6",40,0)
 .S ZTRTN="EN1^KMPDTP6"
"RTN","KMPDTP6",41,0)
 .F I="KMPDHOUR","KMPDSRCH","KMPDTSEC","KMPDTTL" S ZTSAVE(I)=""
"RTN","KMPDTP6",42,0)
 .D ^%ZTLOAD W:$G(ZTSK) !,"Task #",ZTSK
"RTN","KMPDTP6",43,0)
 .D EXIT
"RTN","KMPDTP6",44,0)
 ;
"RTN","KMPDTP6",45,0)
 ; if output to terminal display message.
"RTN","KMPDTP6",46,0)
 W:$E(IOST,1,2)="C-" !,"Compiling timing stats..."
"RTN","KMPDTP6",47,0)
 D EN1
"RTN","KMPDTP6",48,0)
 ;
"RTN","KMPDTP6",49,0)
 Q
"RTN","KMPDTP6",50,0)
 ;
"RTN","KMPDTP6",51,0)
EN1 ;-- entry point from taskman
"RTN","KMPDTP6",52,0)
 Q:'$D(KMPDHOUR)
"RTN","KMPDTP6",53,0)
 Q:'$D(KMPDSRCH)
"RTN","KMPDTP6",54,0)
 Q:'$G(KMPDTSEC)
"RTN","KMPDTP6",55,0)
 Q:$G(KMPDTTL)=""
"RTN","KMPDTP6",56,0)
 ;
"RTN","KMPDTP6",57,0)
 K ^TMP($J)
"RTN","KMPDTP6",58,0)
 D DATA,PRINT,EXIT
"RTN","KMPDTP6",59,0)
 K ^TMP($J)
"RTN","KMPDTP6",60,0)
 Q
"RTN","KMPDTP6",61,0)
 ;
"RTN","KMPDTP6",62,0)
DATA ;-- compile data
"RTN","KMPDTP6",63,0)
 ;
"RTN","KMPDTP6",64,0)
 Q:'$D(KMPDHOUR)
"RTN","KMPDTP6",65,0)
 Q:'$G(KMPDSRCH)
"RTN","KMPDTP6",66,0)
 Q:'$G(KMPDTSEC)
"RTN","KMPDTP6",67,0)
 ;
"RTN","KMPDTP6",68,0)
 N DATA,DATA1,DATE,DATE1,DELTA,DOT,HOUR,HR,I,QUEUED,TIME
"RTN","KMPDTP6",69,0)
 ;
"RTN","KMPDTP6",70,0)
 S DOT=1,QUEUED=$D(ZTQUEUED)
"RTN","KMPDTP6",71,0)
 ; set up HOUR() array
"RTN","KMPDTP6",72,0)
 F I=1:1:24 S:$P(KMPDHOUR,",",I)'="" HOUR(+$P(KMPDHOUR,",",I))=""
"RTN","KMPDTP6",73,0)
 Q:'$D(HOUR)
"RTN","KMPDTP6",74,0)
 S I=""
"RTN","KMPDTP6",75,0)
 F  S I=$O(^KMPTMP("KMPDT","ORWCV",I)) Q:I=""  S DATA=^(I) I DATA]"" D 
"RTN","KMPDTP6",76,0)
 .S DOT=DOT+1 W:'QUEUED&('(DOT#1000)) "."
"RTN","KMPDTP6",77,0)
 .; start/end date/time in fileman format
"RTN","KMPDTP6",78,0)
 .S DATE(1)=$$HTFM^XLFDT($P(DATA,U)),DATE(2)=$$HTFM^XLFDT($P(DATA,U,2))
"RTN","KMPDTP6",79,0)
 .S DELTA=$$HDIFF^XLFDT($P(DATA,U,2),$P(DATA,U),2)
"RTN","KMPDTP6",80,0)
 .Q:DELTA<KMPDTSEC
"RTN","KMPDTP6",81,0)
 .Q:'DATE(1)!('DATE(2))
"RTN","KMPDTP6",82,0)
 .; determine hour
"RTN","KMPDTP6",83,0)
 .S HR=+$E($P(DATE(1),".",2),1,2)
"RTN","KMPDTP6",84,0)
 .S HR=$S(HR="":0,HR=24:0,1:HR)
"RTN","KMPDTP6",85,0)
 .; quit if not in HOUR() array
"RTN","KMPDTP6",86,0)
 .Q:'$D(HOUR(HR))
"RTN","KMPDTP6",87,0)
 .; hour & second
"RTN","KMPDTP6",88,0)
 .S TIME=$E($P(DATE(1),".",2),1,4) Q:'TIME
"RTN","KMPDTP6",89,0)
 .; insert colon (:) between hour & second
"RTN","KMPDTP6",90,0)
 .S TIME=$E(TIME,1,2)_":"_$E(TIME,3,4)
"RTN","KMPDTP6",91,0)
 .S:$P(TIME,":",2)="" $P(TIME,":",2)="00"
"RTN","KMPDTP6",92,0)
 .; date without time
"RTN","KMPDTP6",93,0)
 .S DATE1=$P(DATE(1),".") Q:'DATE1
"RTN","KMPDTP6",94,0)
 .S DATA1="^^^"_DELTA_"^"_$P(DATA,U,3)_"^"_$P(DATA,U,4)_"^^^"_$P($P(I," ",2),"-")
"RTN","KMPDTP6",95,0)
 .; quit if no match
"RTN","KMPDTP6",96,0)
 .Q:'$$MATCH
"RTN","KMPDTP6",97,0)
 .S ^TMP($J,DATE1,TIME)=DATA1
"RTN","KMPDTP6",98,0)
 .; new person - external format
"RTN","KMPDTP6",99,0)
 .S $P(^TMP($J,DATE1,TIME),U,5)=$P($G(^VA(200,+$P(DATA,U,3),0)),U)
"RTN","KMPDTP6",100,0)
 ;
"RTN","KMPDTP6",101,0)
 Q
"RTN","KMPDTP6",102,0)
 ;
"RTN","KMPDTP6",103,0)
PRINT ;-- print data
"RTN","KMPDTP6",104,0)
 ;
"RTN","KMPDTP6",105,0)
 U IO
"RTN","KMPDTP6",106,0)
 D HDR
"RTN","KMPDTP6",107,0)
 Q:'$D(^TMP($J))
"RTN","KMPDTP6",108,0)
 N CONT,DATE,I,TOTAL
"RTN","KMPDTP6",109,0)
 S DATE="",CONT=1,TOTAL=0
"RTN","KMPDTP6",110,0)
 F  S DATE=$O(^TMP($J,DATE)) Q:'DATE  D  Q:'CONT
"RTN","KMPDTP6",111,0)
 .W !,$$FMTE^XLFDT(DATE,2) S HR=""
"RTN","KMPDTP6",112,0)
 .F  S HR=$O(^TMP($J,DATE,HR)) Q:HR=""  D  Q:'CONT
"RTN","KMPDTP6",113,0)
 ..I $Y>(IOSL-4) D  Q:'CONT
"RTN","KMPDTP6",114,0)
 ...D CONTINUE^KMPDUTL4("",1,.CONT) Q:'CONT
"RTN","KMPDTP6",115,0)
 ...D HDR W !,$$FMTE^XLFDT(DATE,2)
"RTN","KMPDTP6",116,0)
 ..W ?10,HR
"RTN","KMPDTP6",117,0)
 ..S DATA=^TMP($J,DATE,HR),TOTAL=TOTAL+1
"RTN","KMPDTP6",118,0)
 ..; user name
"RTN","KMPDTP6",119,0)
 ..W ?16,$S($P(DATA,U,5)]"":$E($P(DATA,U,5),1,15),1:"N/A")
"RTN","KMPDTP6",120,0)
 ..; client name
"RTN","KMPDTP6",121,0)
 ..W ?33,$S($P(DATA,U,6)]"":$E($P(DATA,U,6),1,15),1:"N/A")
"RTN","KMPDTP6",122,0)
 ..; ip address
"RTN","KMPDTP6",123,0)
 ..W ?50,$S($P(DATA,U,9)]"":$P(DATA,U,9),1:"N/A")
"RTN","KMPDTP6",124,0)
 ..; server delta
"RTN","KMPDTP6",125,0)
 ..W ?67,$J($P(DATA,U,4),8)
"RTN","KMPDTP6",126,0)
 ..W ! W:$E($O(^TMP($J,DATE,HR)),1,2)'=$E(HR,1,2) !
"RTN","KMPDTP6",127,0)
 ;
"RTN","KMPDTP6",128,0)
 I CONT&(TOTAL) W !!?3,"Total Count: ",$J($FN(TOTAL,",",0),$L(TOTAL)+1)
"RTN","KMPDTP6",129,0)
 ;
"RTN","KMPDTP6",130,0)
 ; pause if output to terminal
"RTN","KMPDTP6",131,0)
 I CONT D CONTINUE^KMPDUTL4("Press RETURN to continue",1)
"RTN","KMPDTP6",132,0)
 ;
"RTN","KMPDTP6",133,0)
 Q
"RTN","KMPDTP6",134,0)
 ;
"RTN","KMPDTP6",135,0)
HDR ;-- print header
"RTN","KMPDTP6",136,0)
 W @IOF
"RTN","KMPDTP6",137,0)
 S X=$G(KMPDTTL)
"RTN","KMPDTP6",138,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP6",139,0)
 S X="Hour(s): "_$G(KMPDHOUR)
"RTN","KMPDTP6",140,0)
 W !?(80-$L(X)\2),X,?61,"Printed: ",$$FMTE^XLFDT(DT,2)
"RTN","KMPDTP6",141,0)
 S X=$P($G(KMPDSRCH),U,2)_": "
"RTN","KMPDTP6",142,0)
 S X=X_$P($G(KMPDSRCH(1)),U,$S((+$G(KMPDSRCH))=1:2,1:1))
"RTN","KMPDTP6",143,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP6",144,0)
 S X="Threshold: "_$G(KMPDTSEC)_" seconds"
"RTN","KMPDTP6",145,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP6",146,0)
 W !
"RTN","KMPDTP6",147,0)
 W !,"Date",?10,"Time",?16,"User Name",?33,"Client Name",?50,"IP Address",?67,"Time-to-Load"
"RTN","KMPDTP6",148,0)
 W !,$$REPEAT^XLFSTR("-",IOM)
"RTN","KMPDTP6",149,0)
 ;
"RTN","KMPDTP6",150,0)
 Q
"RTN","KMPDTP6",151,0)
 ;
"RTN","KMPDTP6",152,0)
EXIT ;-- cleanup on exit
"RTN","KMPDTP6",153,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","KMPDTP6",154,0)
 D ^%ZISC
"RTN","KMPDTP6",155,0)
 K KMPDHOUR,KMPDSRCH,KMPDTSEC,KMPDTTL
"RTN","KMPDTP6",156,0)
 Q
"RTN","KMPDTP6",157,0)
 ;
"RTN","KMPDTP6",158,0)
MATCH() ;-- extrinsic function - check for matches
"RTN","KMPDTP6",159,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTP6",160,0)
 ; Return: 1 - match found
"RTN","KMPDTP6",161,0)
 ;         0 - no match found
"RTN","KMPDTP6",162,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTP6",163,0)
 Q:'$G(KMPDSRCH) 0
"RTN","KMPDTP6",164,0)
 ; any occurrence
"RTN","KMPDTP6",165,0)
 Q:(+KMPDSRCH)=4 1
"RTN","KMPDTP6",166,0)
 ; if not 'any occurrence' then must have kmpdsrch(1) node
"RTN","KMPDTP6",167,0)
 Q:'$D(KMPDSRCH(1)) 0
"RTN","KMPDTP6",168,0)
 ; if not 'any occurrence' must have DATA1 to determine match
"RTN","KMPDTP6",169,0)
 Q:$G(DATA1)=""
"RTN","KMPDTP6",170,0)
 ; user name
"RTN","KMPDTP6",171,0)
 Q:(+KMPDSRCH)=1&($P(DATA1,U,5)'=$P(KMPDSRCH(1),U)) 0
"RTN","KMPDTP6",172,0)
 ; client name
"RTN","KMPDTP6",173,0)
 Q:(+KMPDSRCH)=2&($P(DATA1,U,6)'=$P(KMPDSRCH(1),U)) 0
"RTN","KMPDTP6",174,0)
 ; ip address
"RTN","KMPDTP6",175,0)
 Q:(+KMPDSRCH)=3&($P(DATA1,U,9)'=$P(KMPDSRCH(1),U)) 0
"RTN","KMPDTP6",176,0)
 Q 1
"RTN","KMPDTP7")
0^22^B23266885^B23266885
"RTN","KMPDTP7",1,0)
KMPDTP7 ;OAK/RAK - Real-Time CP Timing Hourly Time-to-Load ;6/21/05  10:15
"RTN","KMPDTP7",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDTP7",3,0)
 ;
"RTN","KMPDTP7",4,0)
EN ;-- entry point
"RTN","KMPDTP7",5,0)
 N KMPDTTL,POP,X,Y,ZTDESC,ZTRTN,ZTRSAVE,ZTSK,%ZIS
"RTN","KMPDTP7",6,0)
 S KMPDTTL=" Real-Time Hourly Coversheet Time-to-Load (TTL) Report "
"RTN","KMPDTP7",7,0)
 D HDR^KMPDUTL4(KMPDTTL)
"RTN","KMPDTP7",8,0)
 W !
"RTN","KMPDTP7",9,0)
 W !?7,"This report displays the hourly average time-to-load value"
"RTN","KMPDTP7",10,0)
 W !?7,"for the coversheet at this site over 24 hours."
"RTN","KMPDTP7",11,0)
 W !
"RTN","KMPDTP7",12,0)
 ;
"RTN","KMPDTP7",13,0)
 ; if no data
"RTN","KMPDTP7",14,0)
 I $O(^KMPTMP("KMPDT","ORWCV",""))="" D  Q
"RTN","KMPDTP7",15,0)
 .W !!?7,"*** There is currently no data in global ^KMPTMP(""KMPDT"",""ORWCV"") ***"
"RTN","KMPDTP7",16,0)
 ;
"RTN","KMPDTP7",17,0)
 ; select output device.
"RTN","KMPDTP7",18,0)
 S %ZIS="Q",%ZIS("A")="Device: ",%ZIS("B")="HOME"
"RTN","KMPDTP7",19,0)
 W ! D ^%ZIS I POP W !,"No action taken." Q
"RTN","KMPDTP7",20,0)
 ; if queued.
"RTN","KMPDTP7",21,0)
 I $D(IO("Q")) K IO("Q") D  Q
"RTN","KMPDTP7",22,0)
 .S ZTDESC=KMPDTTL
"RTN","KMPDTP7",23,0)
 .S ZTRTN="EN1^KMPDTP7"
"RTN","KMPDTP7",24,0)
 .S ZTSAVE("KMPDTTL")=""
"RTN","KMPDTP7",25,0)
 .D ^%ZTLOAD W:$G(ZTSK) !,"Task #",ZTSK
"RTN","KMPDTP7",26,0)
 .D EXIT
"RTN","KMPDTP7",27,0)
 ;
"RTN","KMPDTP7",28,0)
 ; if output to terminal display message.
"RTN","KMPDTP7",29,0)
 W:$E(IOST,1,2)="C-" !,"Compiling timing stats..."
"RTN","KMPDTP7",30,0)
 D EN1
"RTN","KMPDTP7",31,0)
 ;
"RTN","KMPDTP7",32,0)
 Q
"RTN","KMPDTP7",33,0)
 ;
"RTN","KMPDTP7",34,0)
EN1 ;-- entry point from taskman
"RTN","KMPDTP7",35,0)
 K ^TMP($J)
"RTN","KMPDTP7",36,0)
 D DATA,PRINT,EXIT
"RTN","KMPDTP7",37,0)
 K ^TMP($J)
"RTN","KMPDTP7",38,0)
 Q
"RTN","KMPDTP7",39,0)
 ;
"RTN","KMPDTP7",40,0)
DATA ;-- compile data
"RTN","KMPDTP7",41,0)
 ;
"RTN","KMPDTP7",42,0)
 N DATA,DATA1,DATE,DATE1,DELTA,DOT,HOURS,HR,I,QUEUED,TIME
"RTN","KMPDTP7",43,0)
 ;
"RTN","KMPDTP7",44,0)
 S DOT=1,QUEUED=$D(ZTQUEUED),DATE=$$DT^XLFDT
"RTN","KMPDTP7",45,0)
 ; array with hours
"RTN","KMPDTP7",46,0)
 S HOURS=$$RLTMHR^KMPDTU11(1,0) Q:HOURS=""
"RTN","KMPDTP7",47,0)
 F I=1:1 Q:$P(HOURS,",",I)=""  S ^TMP($J,DATE,$P(HOURS,",",I))=""
"RTN","KMPDTP7",48,0)
 S I="",TOTAL=0
"RTN","KMPDTP7",49,0)
 F  S I=$O(^KMPTMP("KMPDT","ORWCV",I)) Q:I=""  S DATA=^(I) I DATA]"" D 
"RTN","KMPDTP7",50,0)
 .S DOT=DOT+1 W:'QUEUED&('(DOT#1000)) "."
"RTN","KMPDTP7",51,0)
 .; start/end date/time in fileman format
"RTN","KMPDTP7",52,0)
 .S DATE(1)=$$HTFM^XLFDT($P(DATA,U)),DATE(2)=$$HTFM^XLFDT($P(DATA,U,2))
"RTN","KMPDTP7",53,0)
 .Q:'DATE(1)!('DATE(2))
"RTN","KMPDTP7",54,0)
 .S DELTA=$$FMDIFF^XLFDT(DATE(2),DATE(1),2)
"RTN","KMPDTP7",55,0)
 .S:DELTA<0 DELTA=""
"RTN","KMPDTP7",56,0)
 .; determine hour
"RTN","KMPDTP7",57,0)
 .S HR=+$E($P(DATE(1),".",2),1,2)
"RTN","KMPDTP7",58,0)
 .S HR=$S(HR="":0,HR=24:0,1:HR)
"RTN","KMPDTP7",59,0)
 .; quit if not in HOUR() array
"RTN","KMPDTP7",60,0)
 .;Q:'$D(HOUR(HR))
"RTN","KMPDTP7",61,0)
 .; hour & second
"RTN","KMPDTP7",62,0)
 .S TIME=$E($P(DATE(1),".",2),1,4) Q:'TIME
"RTN","KMPDTP7",63,0)
 .; insert colon (:) between hour & second
"RTN","KMPDTP7",64,0)
 .S TIME=$E(TIME,1,2)_":"_$E(TIME,3,4)
"RTN","KMPDTP7",65,0)
 .S:$P(TIME,":",2)="" $P(TIME,":",2)="00"
"RTN","KMPDTP7",66,0)
 .; date without time
"RTN","KMPDTP7",67,0)
 .S DATE1=$P(DATE(1),".") Q:'DATE1
"RTN","KMPDTP7",68,0)
 .S DATA1="^^^"_DELTA_"^"_$P(DATA,U,3)_"^"_$P(DATA,U,4)_"^^^"_$P($P(I," ",2),"-")
"RTN","KMPDTP7",69,0)
 .;
"RTN","KMPDTP7",70,0)
 .; if delta
"RTN","KMPDTP7",71,0)
 .I $P(DATA1,U,4)'="" D 
"RTN","KMPDTP7",72,0)
 ..; minimum delta
"RTN","KMPDTP7",73,0)
 ..I $P(^TMP($J,DATE,HR),U,2)=""!($P(DATA1,U,4)<$P(^TMP($J,DATE,HR),U,2)) D 
"RTN","KMPDTP7",74,0)
 ...S $P(^TMP($J,DATE,HR),U,2)=$P(DATA1,U,4)
"RTN","KMPDTP7",75,0)
 ..; maximum delta
"RTN","KMPDTP7",76,0)
 ..I $P(DATA1,U,4)>$P(^TMP($J,DATE,HR),U,3) S $P(^TMP($J,DATE,HR),U,3)=$P(DATA1,U,4)
"RTN","KMPDTP7",77,0)
 ..; total delta
"RTN","KMPDTP7",78,0)
 ..S $P(^TMP($J,DATE,HR),U,4)=$P(^TMP($J,DATE,HR),U,4)+$P(DATA1,U,4)
"RTN","KMPDTP7",79,0)
 ..; count
"RTN","KMPDTP7",80,0)
 ..S $P(^TMP($J,DATE,HR),U,5)=$P(^TMP($J,DATE,HR),U,5)+1
"RTN","KMPDTP7",81,0)
 .; if no delta
"RTN","KMPDTP7",82,0)
 .E  S $P(^TMP($J,DATE,HR),U,6)=$P(^TMP($J,DATE,HR),U,6)+1
"RTN","KMPDTP7",83,0)
 ;
"RTN","KMPDTP7",84,0)
 ; average
"RTN","KMPDTP7",85,0)
 F HR=1:1 S I=$P(HOURS,",",HR) Q:I=""  I $P(^TMP($J,DATE,I),U,5) D 
"RTN","KMPDTP7",86,0)
 .S $P(^TMP($J,DATE,I),U)=$P(^TMP($J,DATE,I),U,4)/$P(^TMP($J,DATE,I),U,5)
"RTN","KMPDTP7",87,0)
 ;
"RTN","KMPDTP7",88,0)
 Q
"RTN","KMPDTP7",89,0)
 ;
"RTN","KMPDTP7",90,0)
PRINT ;-- print data
"RTN","KMPDTP7",91,0)
 U IO
"RTN","KMPDTP7",92,0)
 D HDR
"RTN","KMPDTP7",93,0)
 Q:'$D(^TMP($J))
"RTN","KMPDTP7",94,0)
 N CONT,DATE,HR,I,TOTAL
"RTN","KMPDTP7",95,0)
 S DATE="",CONT=1
"RTN","KMPDTP7",96,0)
 F  S DATE=$O(^TMP($J,DATE)) Q:'DATE  S HR="" D  Q:'CONT
"RTN","KMPDTP7",97,0)
 .S TOTAL=""
"RTN","KMPDTP7",98,0)
 .W !,$$FMTE^XLFDT(DATE,2)
"RTN","KMPDTP7",99,0)
 .F  S HR=$O(^TMP($J,DATE,HR)) Q:HR=""  D  Q:'CONT
"RTN","KMPDTP7",100,0)
 ..; page feed
"RTN","KMPDTP7",101,0)
 ..I $Y>(IOSL-3) D CONTINUE^KMPDUTL4("",1,.CONT) Q:'CONT  D HDR W !
"RTN","KMPDTP7",102,0)
 ..W ?12," ",$S($L(HR)=1:"0",1:""),HR
"RTN","KMPDTP7",103,0)
 ..S DATA=^TMP($J,DATE,HR)
"RTN","KMPDTP7",104,0)
 ..W ?20,$J($FN($P(DATA,U),",",0),10)
"RTN","KMPDTP7",105,0)
 ..W ?34,$J($FN($P(DATA,U,2),",",0),10)
"RTN","KMPDTP7",106,0)
 ..W ?48,$J($FN($P(DATA,U,3),",",0),10)
"RTN","KMPDTP7",107,0)
 ..W ?62,$J($FN($P(DATA,U,5),",",0),10)
"RTN","KMPDTP7",108,0)
 ..W !
"RTN","KMPDTP7",109,0)
 ..S $P(TOTAL,U)=$P(TOTAL,U)+$P(DATA,U,5)
"RTN","KMPDTP7",110,0)
 ..S $P(TOTAL,U,2)=$P(TOTAL,U,2)+$P(DATA,U,6)
"RTN","KMPDTP7",111,0)
 .;
"RTN","KMPDTP7",112,0)
 .; back to DATE level
"RTN","KMPDTP7",113,0)
 .; totals
"RTN","KMPDTP7",114,0)
 .W ?62,"----------",!?62,$J($FN(TOTAL,",",0),10),!
"RTN","KMPDTP7",115,0)
 .W !?12,"Incomplete: ",$J($FN($P(TOTAL,U,2),",",0),$L($P(TOTAL,U,2))+2),!
"RTN","KMPDTP7",116,0)
 .; if another date
"RTN","KMPDTP7",117,0)
 .I $O(^TMP($J,DATE)) D CONTINUE^KMPDUTL4("",1,.CONT) Q:'CONT  D HDR W !
"RTN","KMPDTP7",118,0)
 ;
"RTN","KMPDTP7",119,0)
 I CONT D 
"RTN","KMPDTP7",120,0)
 .; legend
"RTN","KMPDTP7",121,0)
 .W !!?2,"CV  = Coversheet",!?2,"TTL = Time-to-Load"
"RTN","KMPDTP7",122,0)
 .; pause if output to terminal
"RTN","KMPDTP7",123,0)
 .D CONTINUE^KMPDUTL4("Press RETURN to continue",1)
"RTN","KMPDTP7",124,0)
 ;
"RTN","KMPDTP7",125,0)
 Q
"RTN","KMPDTP7",126,0)
 ;
"RTN","KMPDTP7",127,0)
HDR ;-- print header
"RTN","KMPDTP7",128,0)
 W @IOF
"RTN","KMPDTP7",129,0)
 S X=$G(KMPDTTL)
"RTN","KMPDTP7",130,0)
 W !?(80-$L(X)\2),X
"RTN","KMPDTP7",131,0)
 S X=$$FMTE^XLFDT($$DT^XLFDT)
"RTN","KMPDTP7",132,0)
 W !?(80-$L(X)\2),X,?61,"Printed: ",$$FMTE^XLFDT(DT,2)
"RTN","KMPDTP7",133,0)
 W !
"RTN","KMPDTP7",134,0)
 W !?20,"|---------------Seconds---------------|"
"RTN","KMPDTP7",135,0)
 W !,"Date",?12,"Hour",?20,"TTL Average",?34,"TTL Minimum",?48,"TTL Maximum",?62,"# of CV Loads"
"RTN","KMPDTP7",136,0)
 W !,$$REPEAT^XLFSTR("-",IOM)
"RTN","KMPDTP7",137,0)
 ;
"RTN","KMPDTP7",138,0)
 Q
"RTN","KMPDTP7",139,0)
 ;
"RTN","KMPDTP7",140,0)
EXIT ;-- cleanup on exit
"RTN","KMPDTP7",141,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","KMPDTP7",142,0)
 D ^%ZISC
"RTN","KMPDTP7",143,0)
 K KMPDTTL
"RTN","KMPDTP7",144,0)
 Q
"RTN","KMPDTU01")
0^23^B21700186^B21700186
"RTN","KMPDTU01",1,0)
KMPDTU01 ;OAK/RAK - CM Tools Timing Utility ;4/6/06  08:40
"RTN","KMPDTU01",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDTU01",3,0)
 ;
"RTN","KMPDTU01",4,0)
DAILY(KMPDT) ;-- transmit daily stats to national database
"RTN","KMPDTU01",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU01",6,0)
 ; KMPDT.... Compression date in internal fileman formt. It represents 
"RTN","KMPDTU01",7,0)
 ;           the date from which the previous days data should be
"RTN","KMPDTU01",8,0)
 ;           transmitted. 
"RTN","KMPDTU01",9,0)
 ;           Example: if KMPDT = 2981011  then tranmission will be
"RTN","KMPDTU01",10,0)
 ;                    on 2981010 (KMPDT-1)
"RTN","KMPDTU01",11,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU01",12,0)
 ;
"RTN","KMPDTU01",13,0)
 Q:'$G(KMPDT)
"RTN","KMPDTU01",14,0)
 ;
"RTN","KMPDTU01",15,0)
 N DATE,DATA,DELTA,ERROR,FDA,HOUR,I,IEN,PIECE,PTNP,SDTM,SITE,SS
"RTN","KMPDTU01",16,0)
 N STR
"RTN","KMPDTU01",17,0)
 ;
"RTN","KMPDTU01",18,0)
 ; storage  processed
"RTN","KMPDTU01",19,0)
 K ^TMP($J),^TMP("KMPDTU01",$J)
"RTN","KMPDTU01",20,0)
 ; site info.
"RTN","KMPDTU01",21,0)
 S SITE=$$SITE^VASITE Q:SITE=""
"RTN","KMPDTU01",22,0)
 S IEN=0
"RTN","KMPDTU01",23,0)
 W:'$D(ZTQUEUED) !,"Compressing data into daily format..."
"RTN","KMPDTU01",24,0)
 F  S IEN=$O(^KMPD(8973.2,"ADT",KMPDT,IEN)) Q:'IEN  D 
"RTN","KMPDTU01",25,0)
 .Q:'$D(^KMPD(8973.2,IEN,0))  S DATA(0)=^(0)
"RTN","KMPDTU01",26,0)
 .; quit if daily data has already been sent to national database
"RTN","KMPDTU01",27,0)
 .;Q:$P(DATA(0),U,10)
"RTN","KMPDTU01",28,0)
 .W:'$D(ZTQUEUED)&('(IEN#1000)) "."
"RTN","KMPDTU01",29,0)
 .; start date/time      date w/no time    delta
"RTN","KMPDTU01",30,0)
 .S SDTM=$P(DATA(0),U,3),DATE=$P(SDTM,"."),DELTA=$P(DATA(0),U,4)
"RTN","KMPDTU01",31,0)
 .; hour
"RTN","KMPDTU01",32,0)
 .S HOUR=+$E($P(SDTM,".",2),1,2)
"RTN","KMPDTU01",33,0)
 .; quit if no kmptmp subscript
"RTN","KMPDTU01",34,0)
 .S SS=$P(DATA(0),U,7)  Q:SS=""
"RTN","KMPDTU01",35,0)
 .;
"RTN","KMPDTU01",36,0)
 .S PTNP=$$PTNP^KMPDHU03(SDTM) Q:'PTNP
"RTN","KMPDTU01",37,0)
 .; piece 4 - prime time
"RTN","KMPDTU01",38,0)
 .; piece 5 - non-prime time
"RTN","KMPDTU01",39,0)
 .S PIECE=$S(PTNP=1:4,1:5)
"RTN","KMPDTU01",40,0)
 .;
"RTN","KMPDTU01",41,0)
 .S $P(^TMP($J,KMPDT,SS),U)=KMPDT
"RTN","KMPDTU01",42,0)
 .S $P(^TMP($J,KMPDT,SS),U,3)=SS
"RTN","KMPDTU01",43,0)
 .S $P(^TMP($J,KMPDT,SS),U,PIECE)=$P(^TMP($J,KMPDT,SS),U,PIECE)+DELTA
"RTN","KMPDTU01",44,0)
 .S $P(^TMP($J,KMPDT,SS),U,(PIECE+2))=$P(^TMP($J,KMPDT,SS),U,(PIECE+2))+1
"RTN","KMPDTU01",45,0)
 .; hourly delta
"RTN","KMPDTU01",46,0)
 .S $P(^TMP($J,KMPDT,SS,PTNP),U,(HOUR+1))=$P($G(^TMP($J,KMPDT,SS,PTNP)),U,(HOUR+1))+DELTA
"RTN","KMPDTU01",47,0)
 .; hourly occurrences
"RTN","KMPDTU01",48,0)
 .S $P(^TMP($J,KMPDT,SS,PTNP+.1),U,(HOUR+1))=$P($G(^TMP($J,KMPDT,SS,PTNP+.1)),U,(HOUR+1))+1
"RTN","KMPDTU01",49,0)
 .; node 99.1 is for national database (end date^facility name)
"RTN","KMPDTU01",50,0)
 .S ^TMP($J,KMPDT,SS,99.1)=KMPDT_"^"_$P(SITE,U,2)_"^"_$P(SITE,U,3)_"^"_$$WORKDAY^XUWORKDY(DATE)
"RTN","KMPDTU01",51,0)
 .; add to processed array.
"RTN","KMPDTU01",52,0)
 .S ^TMP("KMPDTU01",$J,IEN)=""
"RTN","KMPDTU01",53,0)
 ;
"RTN","KMPDTU01",54,0)
 D:$D(^TMP($J)) TRANSMIT(2)
"RTN","KMPDTU01",55,0)
 K ^TMP($J)
"RTN","KMPDTU01",56,0)
 ;
"RTN","KMPDTU01",57,0)
 ; update field .1 (DAILY - SENT TO CM NATIONAL DB) to 'YES' for all
"RTN","KMPDTU01",58,0)
 ; processed entries.
"RTN","KMPDTU01",59,0)
 W:'$D(ZTQUEUED) !!,"Updating records to reflect transmission..."
"RTN","KMPDTU01",60,0)
 S IEN=0
"RTN","KMPDTU01",61,0)
 F  S IEN=$O(^TMP("KMPDTU01",$J,IEN)) Q:'IEN  D 
"RTN","KMPDTU01",62,0)
 .K FDA,ERROR W:'$D(ZTQUEUED)&('(IEN#1000)) "."
"RTN","KMPDTU01",63,0)
 .S FDA($J,8973.2,IEN_",",.1)=1
"RTN","KMPDTU01",64,0)
 .D FILE^DIE("","FDA($J)","ERROR")
"RTN","KMPDTU01",65,0)
 ;
"RTN","KMPDTU01",66,0)
 K ^TMP("KMPDTU01",$J)
"RTN","KMPDTU01",67,0)
 ;
"RTN","KMPDTU01",68,0)
 W:'$D(ZTQUEUED) !!,"Finished!"
"RTN","KMPDTU01",69,0)
 ;
"RTN","KMPDTU01",70,0)
 Q
"RTN","KMPDTU01",71,0)
 ;
"RTN","KMPDTU01",72,0)
TRANSMIT(KMPDTWD) ;-- format data into e-mail and send to cm national database
"RTN","KMPDTU01",73,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU01",74,0)
 ; KMPDTWD... Weekly/Daily
"RTN","KMPDTU01",75,0)
 ;             1 - weekly
"RTN","KMPDTU01",76,0)
 ;             2 - daily
"RTN","KMPDTU01",77,0)
 ;
"RTN","KMPDTU01",78,0)
 ; D = date
"RTN","KMPDTU01",79,0)
 ; S = subscript
"RTN","KMPDTU01",80,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU01",81,0)
 ;
"RTN","KMPDTU01",82,0)
 Q:'$G(KMPDTWD)
"RTN","KMPDTU01",83,0)
 Q:'$D(^TMP($J))
"RTN","KMPDTU01",84,0)
 ;
"RTN","KMPDTU01",85,0)
 N CPU,D,DATE,I,IEN,LN,S,TL,TRANSTO,XMSUB,X,XMTEXT,XMY,XMZ,Y,Z
"RTN","KMPDTU01",86,0)
 ;
"RTN","KMPDTU01",87,0)
 K ^TMP("KMPDTU01-2",$J)
"RTN","KMPDTU01",88,0)
 ;
"RTN","KMPDTU01",89,0)
 S DATE=$S(KMPDTWD=1:$G(START),1:$G(KMPDT))
"RTN","KMPDTU01",90,0)
 S LN=0
"RTN","KMPDTU01",91,0)
 ; version and patch info
"RTN","KMPDTU01",92,0)
 S LN=LN+1,^TMP("KMPDTU01-2",$J,LN)="VERSION="_$$VERSION^KMPDUTL
"RTN","KMPDTU01",93,0)
 ; system information
"RTN","KMPDTU01",94,0)
 S LN=LN+1,^TMP("KMPDTU01-2",$J,LN)="SYSINFO="_$$SYSINFO^KMPDUTL1()
"RTN","KMPDTU01",95,0)
 ; send cpu data to national database
"RTN","KMPDTU01",96,0)
 D CPU^KMPDUTL5(.CPU) I $D(CPU) S I="" F  S I=$O(CPU(I)) Q:I=""  D 
"RTN","KMPDTU01",97,0)
 .S LN=LN+1,^TMP("KMPDTU01-2",$J,LN)="CPU="_I_U_CPU(I)
"RTN","KMPDTU01",98,0)
 ;
"RTN","KMPDTU01",99,0)
 W:'$D(ZTQUEUED) !!,"Formatting ",$$FMTE^XLFDT($G(START))," data for mail delivery..."
"RTN","KMPDTU01",100,0)
 ; reformat so that data is in ^TMP("KMPR UPLOAD",$J,LN)= format.
"RTN","KMPDTU01",101,0)
 S IEN=0,D=""
"RTN","KMPDTU01",102,0)
 F  S D=$O(^TMP($J,D)) Q:D=""  S S="" W "." D 
"RTN","KMPDTU01",103,0)
 .W !,D
"RTN","KMPDTU01",104,0)
 .F  S S=$O(^TMP($J,D,S)) Q:S=""  D 
"RTN","KMPDTU01",105,0)
 ..S IEN=IEN+1,LN=LN+1
"RTN","KMPDTU01",106,0)
 ..S ^TMP("KMPDTU01-2",$J,LN)=IEN_",0)="_^TMP($J,D,S)
"RTN","KMPDTU01",107,0)
 ..; if prime time
"RTN","KMPDTU01",108,0)
 ..I $D(^TMP($J,D,S,1)) D 
"RTN","KMPDTU01",109,0)
 ...S LN=LN+1
"RTN","KMPDTU01",110,0)
 ...S ^TMP("KMPDTU01-2",$J,LN)=IEN_",1)="_^TMP($J,D,S,1)
"RTN","KMPDTU01",111,0)
 ...S LN=LN+1
"RTN","KMPDTU01",112,0)
 ...S ^TMP("KMPDTU01-2",$J,LN)=IEN_",1.1)="_^TMP($J,D,S,1.1)
"RTN","KMPDTU01",113,0)
 ..; if non-prime time
"RTN","KMPDTU01",114,0)
 ..I $D(^TMP($J,D,S,2)) D 
"RTN","KMPDTU01",115,0)
 ...S LN=LN+1
"RTN","KMPDTU01",116,0)
 ...S ^TMP("KMPDTU01-2",$J,LN)=IEN_",2)="_^TMP($J,D,S,2)
"RTN","KMPDTU01",117,0)
 ...S LN=LN+1
"RTN","KMPDTU01",118,0)
 ...S ^TMP("KMPDTU01-2",$J,LN)=IEN_",2.1)="_^TMP($J,D,S,2.1)
"RTN","KMPDTU01",119,0)
 ..; node 99.1 for national database
"RTN","KMPDTU01",120,0)
 ..S LN=LN+1,^TMP("KMPDTU01-2",$J,LN)=IEN_",99.1)="_$G(^TMP($J,D,S,99.1))
"RTN","KMPDTU01",121,0)
 ;
"RTN","KMPDTU01",122,0)
 ; quit if no data to transmit.
"RTN","KMPDTU01",123,0)
 Q:'$D(^TMP("KMPDTU01-2",$J))
"RTN","KMPDTU01",124,0)
 S TL=$$TESTLAB^KMPDUT1
"RTN","KMPDTU01",125,0)
 ; send packman message.
"RTN","KMPDTU01",126,0)
 S XMTEXT="^TMP(""KMPDTU01-2"","_$J_","
"RTN","KMPDTU01",127,0)
 S XMSUB=$S(KMPDTWD=1:"CM TIMING DATA~",1:"CM TIMING DATA-DAILY~")_$P(TL,U,2)_$P(SITE,U,2)_" ("_$P(SITE,U,3)_")~"_$$FMTE^XLFDT(DATE,2)
"RTN","KMPDTU01",128,0)
 D TRANSTO^KMPDUTL7(1,4,.TRANSTO) Q:'$D(TRANSTO)
"RTN","KMPDTU01",129,0)
 S I=""
"RTN","KMPDTU01",130,0)
 F  S I=$O(TRANSTO(I)) Q:I=""  S XMY(I)=""
"RTN","KMPDTU01",131,0)
 D ^XMD
"RTN","KMPDTU01",132,0)
 W:'$D(ZTQUEUED) !,"Message #",$G(XMZ)," sent..."
"RTN","KMPDTU01",133,0)
 K ^TMP("KMPDTU01-2",$J)
"RTN","KMPDTU01",134,0)
 ;
"RTN","KMPDTU01",135,0)
 Q
"RTN","KMPDTU02")
0^24^B7805759^B7805759
"RTN","KMPDTU02",1,0)
KMPDTU02 ;OAK/RAK - CP Tools Compile & File Daily Timing Stats ;2/17/04  09:43
"RTN","KMPDTU02",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDTU02",3,0)
 ;
"RTN","KMPDTU02",4,0)
DAILY ;(KMPDST,KMPDEN);-entry point
"RTN","KMPDTU02",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU02",6,0)
 ; KMPDST... Start date in internal fileman format.
"RTN","KMPDTU02",7,0)
 ; KMPDEN... End date in internal fileman format.
"RTN","KMPDTU02",8,0)
 ;
"RTN","KMPDTU02",9,0)
 ; This API gathers Timing data from ^KMPTMP("KMPDT") and stores it in
"RTN","KMPDTU02",10,0)
 ; file 8973.2 (CP TIMING)
"RTN","KMPDTU02",11,0)
 ;
"RTN","KMPDTU02",12,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU02",13,0)
 ;
"RTN","KMPDTU02",14,0)
 ;Q:'$G(KMPDST)
"RTN","KMPDTU02",15,0)
 ;Q:'$G(KMPDEN)
"RTN","KMPDTU02",16,0)
 ; make sure end date has hours
"RTN","KMPDTU02",17,0)
 ;S:'$P(KMPDEN,".",2) $P(KMPDEN,".",2)="99"
"RTN","KMPDTU02",18,0)
 ;S:'$G(DT) DT=$$DT^XLFDT
"RTN","KMPDTU02",19,0)
 ;
"RTN","KMPDTU02",20,0)
 W:'$D(ZTQUEUED) !,"Compiling Timing data..."
"RTN","KMPDTU02",21,0)
 D COMPILE
"RTN","KMPDTU02",22,0)
 ;
"RTN","KMPDTU02",23,0)
 Q
"RTN","KMPDTU02",24,0)
 ;
"RTN","KMPDTU02",25,0)
COMPILE ;-- compile & file timing data
"RTN","KMPDTU02",26,0)
 ;
"RTN","KMPDTU02",27,0)
 Q:$O(^KMPTMP("KMPDT",""))=""
"RTN","KMPDTU02",28,0)
 N COUNT,DATA,DATA1,ID,OK,SBSCR,TODAY
"RTN","KMPDTU02",29,0)
 S TODAY=$P($H,",") Q:'TODAY
"RTN","KMPDTU02",30,0)
 S SBSCR="",COUNT=0
"RTN","KMPDTU02",31,0)
 F  S SBSCR=$O(^KMPTMP("KMPDT",SBSCR)) Q:SBSCR=""  S ID="" D 
"RTN","KMPDTU02",32,0)
 .F  S ID=$O(^KMPTMP("KMPDT",SBSCR,ID)) Q:ID=""  S DATA=^(ID) D 
"RTN","KMPDTU02",33,0)
 ..; quit if not 'previous' to DT
"RTN","KMPDTU02",34,0)
 ..Q:$P($P(DATA,U),".")'<TODAY
"RTN","KMPDTU02",35,0)
 ..; set up DATA1 for filing
"RTN","KMPDTU02",36,0)
 ..; identifier
"RTN","KMPDTU02",37,0)
 ..S $P(DATA1,U)=ID
"RTN","KMPDTU02",38,0)
 ..; server start date/time in internal fileman format
"RTN","KMPDTU02",39,0)
 ..S $P(DATA1,U,3)=$$HTFM^XLFDT($P(DATA,U))
"RTN","KMPDTU02",40,0)
 ..; server delta
"RTN","KMPDTU02",41,0)
 ..S:$P(DATA,U,2) $P(DATA1,U,4)=$$HDIFF^XLFDT($P(DATA,U,2),$P(DATA,U),2)
"RTN","KMPDTU02",42,0)
 ..; person
"RTN","KMPDTU02",43,0)
 ..S $P(DATA1,U,5)=$P(DATA,U,3)
"RTN","KMPDTU02",44,0)
 ..; client name
"RTN","KMPDTU02",45,0)
 ..S $P(DATA1,U,6)=$P(DATA,U,4)
"RTN","KMPDTU02",46,0)
 ..; kmptmp subscript
"RTN","KMPDTU02",47,0)
 ..S $P(DATA1,U,7)=SBSCR
"RTN","KMPDTU02",48,0)
 ..; title
"RTN","KMPDTU02",49,0)
 ..S $P(DATA1,U,8)=$$TITLEG(SBSCR)
"RTN","KMPDTU02",50,0)
 ..; ip address
"RTN","KMPDTU02",51,0)
 ..S $P(DATA1,U,9)=$P($P(ID,"-")," ",2)
"RTN","KMPDTU02",52,0)
 ..; file data
"RTN","KMPDTU02",53,0)
 ..D FILE(DATA1,.OK)
"RTN","KMPDTU02",54,0)
 ..; update counter if successfully filed
"RTN","KMPDTU02",55,0)
 ..S:OK COUNT=COUNT+1
"RTN","KMPDTU02",56,0)
 ..; kill of old node if successfully filed
"RTN","KMPDTU02",57,0)
 ..K:OK ^KMPTMP("KMPDT",SBSCR,ID)
"RTN","KMPDTU02",58,0)
 ..I '$D(ZTQUEUED) W:'(COUNT#100) "."
"RTN","KMPDTU02",59,0)
 ;
"RTN","KMPDTU02",60,0)
 W:'$D(ZTQUEUED) !,COUNT," records filed!"
"RTN","KMPDTU02",61,0)
 ;
"RTN","KMPDTU02",62,0)
 Q
"RTN","KMPDTU02",63,0)
 ;
"RTN","KMPDTU02",64,0)
FILE(DATA,KMPDOK) ;-- file timing data into file #8973.2
"RTN","KMPDTU02",65,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU02",66,0)
 ; DATA.... Data to file in format:
"RTN","KMPDTU02",67,0)
 ;          piece "^" 1 - id
"RTN","KMPDTU02",68,0)
 ;                    3 - start date/time in internal fileman format
"RTN","KMPDTU02",69,0)
 ;                    4 - delta
"RTN","KMPDTU02",70,0)
 ;                    5 - new person
"RTN","KMPDTU02",71,0)
 ;                    6 - client name
"RTN","KMPDTU02",72,0)
 ;                    7 - kmptmp subscript
"RTN","KMPDTU02",73,0)
 ;                    8 - title
"RTN","KMPDTU02",74,0)
 ;                    9 - ip address
"RTN","KMPDTU02",75,0)
 ;
"RTN","KMPDTU02",76,0)
 ; KMPDOK.. Returned
"RTN","KMPDTU02",77,0)
 ;            0 - not filed successfully
"RTN","KMPDTU02",78,0)
 ;            1 - filed successfully
"RTN","KMPDTU02",79,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU02",80,0)
 ;
"RTN","KMPDTU02",81,0)
 S KMPDOK=0
"RTN","KMPDTU02",82,0)
 Q:$G(DATA)=""
"RTN","KMPDTU02",83,0)
 ; id
"RTN","KMPDTU02",84,0)
 Q:$P(DATA,U)=""
"RTN","KMPDTU02",85,0)
 ; start date/time
"RTN","KMPDTU02",86,0)
 Q:$P(DATA,U,3)=""
"RTN","KMPDTU02",87,0)
 ;
"RTN","KMPDTU02",88,0)
 N ERROR,FDA,I,IEN,ZIEN
"RTN","KMPDTU02",89,0)
 ; build fda() array for filing
"RTN","KMPDTU02",90,0)
 F I=1:1:9 I $P(DATA,U,I)'="" D 
"RTN","KMPDTU02",91,0)
 .S FDA($J,8973.2,"+1,",(I*.01))=$P(DATA,U,I)
"RTN","KMPDTU02",92,0)
 ; quit if no fda() array
"RTN","KMPDTU02",93,0)
 Q:'$D(FDA($J))
"RTN","KMPDTU02",94,0)
 ; file data
"RTN","KMPDTU02",95,0)
 D UPDATE^DIE("","FDA($J)","ZIEN","ERROR")
"RTN","KMPDTU02",96,0)
 ; if error
"RTN","KMPDTU02",97,0)
 I $D(ERROR) D MSG^DIALOG("HA",.ERROR,60,5,"ERROR") Q
"RTN","KMPDTU02",98,0)
 S KMPDOK=1
"RTN","KMPDTU02",99,0)
 ;
"RTN","KMPDTU02",100,0)
 Q
"RTN","KMPDTU02",101,0)
 ;
"RTN","KMPDTU02",102,0)
TITLEG(SBSCR) ;-- extrinsic function - return title name
"RTN","KMPDTU02",103,0)
 Q:$G(SBSCR)="" ""
"RTN","KMPDTU02",104,0)
 N I,TITLE,X S TITLE=""
"RTN","KMPDTU02",105,0)
 F I=1:1 S X=$T(TITLE+I) Q:X=""  I $P(X,";",3)=SBSCR S TITLE=$P(X,";",4) Q
"RTN","KMPDTU02",106,0)
 Q TITLE
"RTN","KMPDTU02",107,0)
 ;
"RTN","KMPDTU02",108,0)
TITLE ;-- convert subscript to title
"RTN","KMPDTU02",109,0)
 ;;ORWCV;CPRS Cover Sheet
"RTN","KMPDTU10")
0^25^B33247279^B33222642
"RTN","KMPDTU10",1,0)
KMPDTU10 ;OAK/RAK - CP Tools Timing Utility ;6/21/05  10:17
"RTN","KMPDTU10",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDTU10",3,0)
 ;
"RTN","KMPDTU10",4,0)
DATERNG(KMPDSS,KMPDEF,KMPDRES,KMPDDT) ; timing date range for a subscript
"RTN","KMPDTU10",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU10",6,0)
 ; KMPDSS.... KMPTMP SUBSCRIPT
"RTN","KMPDTU10",7,0)
 ; KMPDEF.... (optional) default number of days to track - if not defined
"RTN","KMPDTU10",8,0)
 ;            will default to seven (7)
"RTN","KMPDTU10",9,0)
 ; KMPDRES(). Results of api in format:
"RTN","KMPDTU10",10,0)
 ;             KMPDRES(0)=piece 1 - Start Date Internal
"RTN","KMPDTU10",11,0)
 ;                        piece 2 - End Date Internal
"RTN","KMPDTU10",12,0)
 ;                        piece 3 - Start Date External
"RTN","KMPDTU10",13,0)
 ;                        piece 4 - End Date External
"RTN","KMPDTU10",14,0)
 ;                 Null ("") is returned if no results are found
"RTN","KMPDTU10",15,0)
 ;             KMPDRES(1)=NumberOfDays
"RTN","KMPDTU10",16,0)
 ; KMPDDT.... Date only (do not ask for days)
"RTN","KMPDTU10",17,0)
 ;             0 - both date & days
"RTN","KMPDTU10",18,0)
 ;             1 - date only - do not ask for days
"RTN","KMPDTU10",19,0)
 ;
"RTN","KMPDTU10",20,0)
 ; This api determines the date range for KMPDSS (ex: ORWCV for CPRS 
"RTN","KMPDTU10",21,0)
 ; cover sheets).  It asks the user the ending date.  After the ending
"RTN","KMPDTU10",22,0)
 ; date is entered, the user is prompted for the number of days to track.
"RTN","KMPDTU10",23,0)
 ; Results are returned in the KMPDRES() array as described above.
"RTN","KMPDTU10",24,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU10",25,0)
 K KMPDRES S KMPDRES(0)="",KMPDRES(1)=""
"RTN","KMPDTU10",26,0)
 Q:$G(KMPDSS)=""
"RTN","KMPDTU10",27,0)
 S:'$G(KMPDEF) KMPDEF=7
"RTN","KMPDTU10",28,0)
 S KMPDDT=+$G(KMPDDT)
"RTN","KMPDTU10",29,0)
 N COUNT,DATE,DAYS,END,SESS,START
"RTN","KMPDTU10",30,0)
 ; start & end dates
"RTN","KMPDTU10",31,0)
 S DATE=$$DATERNG1(KMPDSS,.SESS)
"RTN","KMPDTU10",32,0)
 Q:'$D(SESS)
"RTN","KMPDTU10",33,0)
 S START=$P(DATE,U),END=$P(DATE,U,2)
"RTN","KMPDTU10",34,0)
 Q:'START!('END)
"RTN","KMPDTU10",35,0)
 ; get end date
"RTN","KMPDTU10",36,0)
 K DIR S DIR(0)="DO^"_START_":"_END_":E"
"RTN","KMPDTU10",37,0)
 S DIR("A")="Select End Date",DIR("B")=$$FMTE^XLFDT(END)
"RTN","KMPDTU10",38,0)
 W ! D ^DIR Q:'Y  S END=Y
"RTN","KMPDTU10",39,0)
 ; if date only
"RTN","KMPDTU10",40,0)
 I KMPDDT D  Q
"RTN","KMPDTU10",41,0)
 .S KMPDRES(0)=END_U_END_U_$$FMTE^XLFDT(END)_U_$$FMTE^XLFDT(END)
"RTN","KMPDTU10",42,0)
 ; determine number of days
"RTN","KMPDTU10",43,0)
 S DATE=END+.1,START=END,DAYS=0
"RTN","KMPDTU10",44,0)
 F  S DATE=$O(SESS(DATE),-1) Q:'DATE   S START=DATE,DAYS=DAYS+1
"RTN","KMPDTU10",45,0)
 Q:'DAYS
"RTN","KMPDTU10",46,0)
 ; days to go back
"RTN","KMPDTU10",47,0)
 K DIR S DIR(0)="NO^1:"_DAYS_":O"
"RTN","KMPDTU10",48,0)
 S DIR("A")="Select # of Days Review"
"RTN","KMPDTU10",49,0)
 S DIR("B")=$S(DAYS'<KMPDEF:KMPDEF,1:DAYS)
"RTN","KMPDTU10",50,0)
 D ^DIR Q:Y=""!(Y="^")
"RTN","KMPDTU10",51,0)
 ; determine start date
"RTN","KMPDTU10",52,0)
 S START=END
"RTN","KMPDTU10",53,0)
 I Y'=1 S COUNT=1 D 
"RTN","KMPDTU10",54,0)
 .F  S START=$O(DATERNG(START),-1) Q:'START  S COUNT=COUNT+1 Q:COUNT'<Y
"RTN","KMPDTU10",55,0)
 S KMPDRES(0)=START_U_END_U_$$FMTE^XLFDT(START)_U_$$FMTE^XLFDT(END)
"RTN","KMPDTU10",56,0)
 S KMPDRES(1)=Y
"RTN","KMPDTU10",57,0)
 ;
"RTN","KMPDTU10",58,0)
 Q
"RTN","KMPDTU10",59,0)
 ;
"RTN","KMPDTU10",60,0)
DATERNG1(KMPDSS,KMPDSESS) ;-- extrinsic function
"RTN","KMPDTU10",61,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU10",62,0)
 ; KMPDSS.... KMPTMP SUBSCRIPT
"RTN","KMPDTU10",63,0)
 ; KMPDSESS() Array of dates: 
"RTN","KMPDTU10",64,0)
 ;             KMPDSESS(3030801)=""
"RTN","KMPDTU10",65,0)
 ;             KMPDSESS(3030802)=""
"RTN","KMPDTU10",66,0)
 ;             ...
"RTN","KMPDTU10",67,0)
 ;
"RTN","KMPDTU10",68,0)
 ; Return: StartDate^EndDate - in internal fileman format
"RTN","KMPDTU10",69,0)
 ;         "" - no results
"RTN","KMPDTU10",70,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU10",71,0)
 Q:$G(KMPDSS)="" ""
"RTN","KMPDTU10",72,0)
 N DATE,END,START
"RTN","KMPDTU10",73,0)
 ; determine most recent date
"RTN","KMPDTU10",74,0)
 F DATE=0:0 S DATE=$O(^KMPD(8973.2,"ASVDTSS",KMPDSS,DATE)) Q:'DATE  D 
"RTN","KMPDTU10",75,0)
 .; set array of session dates
"RTN","KMPDTU10",76,0)
 .S KMPDSESS(DATE)=""
"RTN","KMPDTU10",77,0)
 Q:'$D(KMPDSESS) ""
"RTN","KMPDTU10",78,0)
 ; set start and end dates according to SESS() array
"RTN","KMPDTU10",79,0)
 S END=$O(KMPDSESS("A"),-1),START=$O(KMPDSESS(""))
"RTN","KMPDTU10",80,0)
 Q START_"^"_END
"RTN","KMPDTU10",81,0)
 ;
"RTN","KMPDTU10",82,0)
DTTMRNG(KMPDSS,KMPDEF,KMPDRES,KMPDEFH) ; timing date/time range for a subscript
"RTN","KMPDTU10",83,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU10",84,0)
 ; KMPDSS.... KMPTMP SUBSCRIPT
"RTN","KMPDTU10",85,0)
 ; KMPDEF.... (optional) default number of days to track - if not defined
"RTN","KMPDTU10",86,0)
 ;            will default to seven (7)
"RTN","KMPDTU10",87,0)
 ; KMPDRES(). Results of api in format:
"RTN","KMPDTU10",88,0)
 ;             KMPDRES(0)=piece 1 - Start Date Internal
"RTN","KMPDTU10",89,0)
 ;                        piece 2 - End Date Internal
"RTN","KMPDTU10",90,0)
 ;                        piece 3 - Start Date External
"RTN","KMPDTU10",91,0)
 ;                        piece 4 - End Date External
"RTN","KMPDTU10",92,0)
 ;                 Null ("") is returned if no results are found
"RTN","KMPDTU10",93,0)
 ;             KMPDRES(1)=NumberOfDays
"RTN","KMPDTU10",94,0)
 ; KMPDEFH.. (optional) Default hour.
"RTN","KMPDTU10",95,0)
 ;
"RTN","KMPDTU10",96,0)
 ; This api determines the date range for KMPDSS (ex: ORWCV for CPRS 
"RTN","KMPDTU10",97,0)
 ; cover sheets).  It asks the user the ending date.  After the ending
"RTN","KMPDTU10",98,0)
 ; date is entered, the user is prompted for the number of hours to
"RTN","KMPDTU10",99,0)
 ; review. Results are returned in the KMPDRES() array as described 
"RTN","KMPDTU10",100,0)
 ; above.
"RTN","KMPDTU10",101,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU10",102,0)
 K KMPDRES S KMPDRES(0)="",KMPDRES(1)=""
"RTN","KMPDTU10",103,0)
 Q:$G(KMPDSS)=""
"RTN","KMPDTU10",104,0)
 S:'$G(KMPDEF) KMPDEF=7
"RTN","KMPDTU10",105,0)
 S KMPDEFH=$G(KMPDEFH)
"RTN","KMPDTU10",106,0)
 N COUNT,DATE,DAYS,END,SESS,START
"RTN","KMPDTU10",107,0)
 ; get date
"RTN","KMPDTU10",108,0)
 D DATERNG(KMPDSS,1,.KMPDRES,1)
"RTN","KMPDTU10",109,0)
 Q:'$D(KMPDRES)
"RTN","KMPDTU10",110,0)
 Q:$G(KMPDRES(0))=""
"RTN","KMPDTU10",111,0)
 S KMPDRES(1)=""
"RTN","KMPDTU10",112,0)
 ; determine number of hours
"RTN","KMPDTU10",113,0)
 K DIR S DIR(0)="LO^0:23:O"
"RTN","KMPDTU10",114,0)
 S DIR("A")="Select Hour(s) to Review"
"RTN","KMPDTU10",115,0)
 S:KMPDEFH'="" DIR("B")=KMPDEFH
"RTN","KMPDTU10",116,0)
 D ^DIR Q:Y=""!(Y="^")
"RTN","KMPDTU10",117,0)
 S KMPDRES(1)=Y
"RTN","KMPDTU10",118,0)
 Q
"RTN","KMPDTU10",119,0)
 ;
"RTN","KMPDTU10",120,0)
LISTSEL(KMPDLIST,KMPDSS,KMPDRLTM) ;-- extrinsic function - build list and select entry
"RTN","KMPDTU10",121,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU10",122,0)
 ; KMPDLIST... 2 - Client Name
"RTN","KMPDTU10",123,0)
 ;             3 - IP Address
"RTN","KMPDTU10",124,0)
 ; KMPDSS..... Field #.07 (KMPTMP SUBSCRIPT)
"RTN","KMPDTU10",125,0)
 ; KMPDRLTM... Real-Time data
"RTN","KMPDTU10",126,0)
 ;              0 - not real-time
"RTN","KMPDTU10",127,0)
 ;              1 - real-time
"RTN","KMPDTU10",128,0)
 ;
"RTN","KMPDTU10",129,0)
 ; Return: "" - no selection 
"RTN","KMPDTU10",130,0)
 ;         Name - free text
"RTN","KMPDTU10",131,0)
 ;
"RTN","KMPDTU10",132,0)
 ; This function will build a list of entries from file #8973.2 
"RTN","KMPDTU10",133,0)
 ;(CP TIMING) and ask the user to select an entry.
"RTN","KMPDTU10",134,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU10",135,0)
 S KMPDLIST=+$G(KMPDLIST)
"RTN","KMPDTU10",136,0)
 Q:KMPDLIST<2!(KMPDLIST>3) ""
"RTN","KMPDTU10",137,0)
 Q:$G(KMPDSS)="" ""
"RTN","KMPDTU10",138,0)
 S KMPDRLTM=+$G(KMPDRLTM)
"RTN","KMPDTU10",139,0)
 ;
"RTN","KMPDTU10",140,0)
 N DIC,I,X,XREF,Y
"RTN","KMPDTU10",141,0)
 ;
"RTN","KMPDTU10",142,0)
 W " ==> building list..."
"RTN","KMPDTU10",143,0)
 K ^TMP("KMPDTU10-LIST",$J)
"RTN","KMPDTU10",144,0)
 D @$S('KMPDRLTM:"LISTSELH",1:"LISTSELR")
"RTN","KMPDTU10",145,0)
 ; quit if no data
"RTN","KMPDTU10",146,0)
 Q:'$D(^TMP("KMPDTU10-LIST",$J))
"RTN","KMPDTU10",147,0)
 S DIC="^TMP(""KMPDTU10-LIST"",$J,"
"RTN","KMPDTU10",148,0)
 S DIC(0)="AEQZ"
"RTN","KMPDTU10",149,0)
 S DIC("A")=$S(KMPDLIST=2:"Select Client",1:"IP Address")_": "
"RTN","KMPDTU10",150,0)
 D ^DIC
"RTN","KMPDTU10",151,0)
 K ^TMP("KMPDTU10-LIST",$J)
"RTN","KMPDTU10",152,0)
 Q $S(Y<1:"",1:$P(Y,"^",2))
"RTN","KMPDTU10",153,0)
 ;
"RTN","KMPDTU10",154,0)
LISTSELH ;-- historical data list
"RTN","KMPDTU10",155,0)
 N I,CNT,DOT,XREF
"RTN","KMPDTU10",156,0)
 ; determine xref to build list
"RTN","KMPDTU10",157,0)
 S XREF=$S(KMPDLIST=2:"ASSCLDTTM",KMPDLIST=3:"ASSIPDTTM",1:"")
"RTN","KMPDTU10",158,0)
 S I="",(CNT,DOT)=0
"RTN","KMPDTU10",159,0)
 F  S I=$O(^KMPD(8973.2,XREF,KMPDSS,I)) Q:I=""  D 
"RTN","KMPDTU10",160,0)
 .S CNT=CNT+1,DOT=DOT+1 W:'(DOT#100) "."
"RTN","KMPDTU10",161,0)
 .S ^TMP("KMPDTU10-LIST",$J,CNT,0)=I
"RTN","KMPDTU10",162,0)
 .S ^TMP("KMPDTU10-LIST",$J,"B",I,CNT)=""
"RTN","KMPDTU10",163,0)
 S ^TMP("KMPDTU10-LIST",$J,0)=$S(KMPDLIST=2:"Client Name",1:"IP Address")_"^1.01^"_CNT_"^"_CNT
"RTN","KMPDTU10",164,0)
 Q
"RTN","KMPDTU10",165,0)
 ;
"RTN","KMPDTU10",166,0)
LISTSELR ;-- real-time data list
"RTN","KMPDTU10",167,0)
 N I,CNT,DATA,DOT,X
"RTN","KMPDTU10",168,0)
 S I="",(CNT,DOT)=0
"RTN","KMPDTU10",169,0)
 F  S I=$O(^KMPTMP("KMPDT",KMPDSS,I)) Q:I=""  S DATA=^(I) I DATA]"" D 
"RTN","KMPDTU10",170,0)
 .S X=$S(KMPDLIST=2:$P(DATA,U,4),1:$P($P(I," ",2),"-"))
"RTN","KMPDTU10",171,0)
 .Q:$O(^TMP("KMPDTU10-LIST",$J,"B",X,0))
"RTN","KMPDTU10",172,0)
 .S CNT=CNT+1,DOT=DOT+1 W:'(DOT#100) "."
"RTN","KMPDTU10",173,0)
 .S ^TMP("KMPDTU10-LIST",$J,CNT,0)=X
"RTN","KMPDTU10",174,0)
 .S ^TMP("KMPDTU10-LIST",$J,"B",X,CNT)=""
"RTN","KMPDTU10",175,0)
 S ^TMP("KMPDTU10-LIST",$J,0)=$S(KMPDLIST=2:"Client Name",1:"IP Address")_"^1.01^"_CNT_"^"_CNT
"RTN","KMPDTU10",176,0)
 Q
"RTN","KMPDTU10",177,0)
 ;
"RTN","KMPDTU10",178,0)
SRCHBY(KMPDRES,KMPDSS,KMPDRLTM) ;-- api - search by criteria
"RTN","KMPDTU10",179,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU10",180,0)
 ; KMPDRES().. Array (passed by reference) containing results in format:
"RTN","KMPDTU10",181,0)
 ;             KMPDRES    = "" - no valid selection
"RTN","KMPDTU10",182,0)
 ;             KMPDRES    = 1^User Name
"RTN","KMPDTU10",183,0)
 ;             KMPDRES(1) = DUZ^NewPersonName
"RTN","KMPDTU10",184,0)
 ;             KMPDRES    = 2^Client Name
"RTN","KMPDTU10",185,0)
 ;             KMPDRES(1) = ClientName (free text)
"RTN","KMPDTU10",186,0)
 ;             KMPDRES    = 3^IP Address
"RTN","KMPDTU10",187,0)
 ;             KMPDRES(1) = IPAddress
"RTN","KMPDTU10",188,0)
 ;             KMPDRES    = 4^Any Occurrence
"RTN","KMPDTU10",189,0)
 ; KMPDSS..... KMPTMP SUBSCIPT - field #.07 from file #8973.2 (CP TIMING)
"RTN","KMPDTU10",190,0)
 ; KMPDRLTM... Real-Time data
"RTN","KMPDTU10",191,0)
 ;              0 - not real-time
"RTN","KMPDTU10",192,0)
 ;              1 - real-time
"RTN","KMPDTU10",193,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU10",194,0)
 K KMPDRES S KMPDRES=""
"RTN","KMPDTU10",195,0)
 Q:$G(KMPDSS)=""
"RTN","KMPDTU10",196,0)
 S KMPDRLTM=+$G(KMPDRLTM)
"RTN","KMPDTU10",197,0)
 N DIC,DIR,X,Y
"RTN","KMPDTU10",198,0)
 S DIR(0)="SO^1:User Name;2:Client Name;3:IP Address;4:All of the Above"
"RTN","KMPDTU10",199,0)
 S DIR("A")="Search By"
"RTN","KMPDTU10",200,0)
 S DIR("B")=4
"RTN","KMPDTU10",201,0)
 D ^DIR
"RTN","KMPDTU10",202,0)
 Q:'Y
"RTN","KMPDTU10",203,0)
 S KMPDRES=Y_"^"_Y(0)
"RTN","KMPDTU10",204,0)
 ; quit if 'all of the above'
"RTN","KMPDTU10",205,0)
 Q:(+KMPDRES)=4
"RTN","KMPDTU10",206,0)
 ;
"RTN","KMPDTU10",207,0)
 ; user name
"RTN","KMPDTU10",208,0)
 I (+KMPDRES)=1 D  Q
"RTN","KMPDTU10",209,0)
 .S DIC=200,DIC(0)="AEMQZ",DIC("A")="Select User: "
"RTN","KMPDTU10",210,0)
 .D ^DIC
"RTN","KMPDTU10",211,0)
 .I Y<1 S KMPDRES="" Q
"RTN","KMPDTU10",212,0)
 .S KMPDRES(1)=Y
"RTN","KMPDTU10",213,0)
 ;
"RTN","KMPDTU10",214,0)
 ; client name
"RTN","KMPDTU10",215,0)
 I (+KMPDRES)=2 D  Q
"RTN","KMPDTU10",216,0)
 .S KMPDRES(1)=$$LISTSEL(+KMPDRES,KMPDSS,KMPDRLTM)
"RTN","KMPDTU10",217,0)
 .S:KMPDRES(1)="" KMPDRES=""
"RTN","KMPDTU10",218,0)
 ;
"RTN","KMPDTU10",219,0)
 ; ip address
"RTN","KMPDTU10",220,0)
 I (+KMPDRES)=3 D  Q
"RTN","KMPDTU10",221,0)
 .S KMPDRES(1)=$$LISTSEL(+KMPDRES,KMPDSS,KMPDRLTM)
"RTN","KMPDTU10",222,0)
 .S:KMPDRES(1)="" KMPDRES=""
"RTN","KMPDTU10",223,0)
 ;
"RTN","KMPDTU10",224,0)
 Q
"RTN","KMPDTU10",225,0)
 ;
"RTN","KMPDTU10",226,0)
TTLSEC() ;-- extrinsic function - time-to-load threshold seconds
"RTN","KMPDTU10",227,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU10",228,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU10",229,0)
 N DIR,X,Y
"RTN","KMPDTU10",230,0)
 S DIR(0)="NAO^1"
"RTN","KMPDTU10",231,0)
 S DIR("A")="Select Time-To-Load Threshold (Seconds): "
"RTN","KMPDTU10",232,0)
 S DIR("B")=60
"RTN","KMPDTU10",233,0)
 D ^DIR
"RTN","KMPDTU10",234,0)
 Q $S(Y:Y,1:"")
"RTN","KMPDTU11")
0^26^B4686971^B4686971
"RTN","KMPDTU11",1,0)
KMPDTU11 ;OAK/RAK - CP Tools Timing Utility ;5/1/07  15:07
"RTN","KMPDTU11",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDTU11",3,0)
 ;
"RTN","KMPDTU11",4,0)
RLTMHR(KMPDQIET,KMPDASK,KMPDEF) ;-- extrinsic function - real time hours
"RTN","KMPDTU11",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU11",6,0)
 ; KMPDQIET... Display output
"RTN","KMPDTU11",7,0)
 ;              0 - display output (not quiet)
"RTN","KMPDTU11",8,0)
 ;              1 - do not display output (quiet)
"RTN","KMPDTU11",9,0)
 ; KMPDASK.... Ask user to select hours
"RTN","KMPDTU11",10,0)
 ;              0 - do not ask user to select
"RTN","KMPDTU11",11,0)
 ;              1 - ask user to select
"RTN","KMPDTU11",12,0)
 ; KMPDEF..... Default
"RTN","KMPDTU11",13,0)
 ;              0 - do not use default
"RTN","KMPDTU11",14,0)
 ;              1 - use time range as default
"RTN","KMPDTU11",15,0)
 ;
"RTN","KMPDTU11",16,0)
 ; Return: List of hours (ie, 1,2,5,6,7...)
"RTN","KMPDTU11",17,0)
 ;         "" - no selection made
"RTN","KMPDTU11",18,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU11",19,0)
 ;
"RTN","KMPDTU11",20,0)
 S KMPDQIET=+$G(KMPDQIET),KMPDASK=+$G(KMPDASK),KMPDEF=+$G(KMPDEF)
"RTN","KMPDTU11",21,0)
 N DATA,DIR,DOT,HOURS,HR,I,QUEUED,X,Y
"RTN","KMPDTU11",22,0)
 W:'KMPDQIET !," ==> building Hours list..."
"RTN","KMPDTU11",23,0)
 S I="",DOT=0
"RTN","KMPDTU11",24,0)
 F  S I=$O(^KMPTMP("KMPDT","ORWCV",I)) Q:I=""  S DATA=^(I) I DATA]"" D 
"RTN","KMPDTU11",25,0)
 .S DOT=DOT+1 W:'(DOT#1000)&('KMPDQIET) "."
"RTN","KMPDTU11",26,0)
 .; change $h to fileman format and get hour
"RTN","KMPDTU11",27,0)
 .S HR=$E($P($$HTFM^XLFDT($P(DATA,U)),".",2),1,2) S:HR>23 HR="0"
"RTN","KMPDTU11",28,0)
 .; create HOURS() array
"RTN","KMPDTU11",29,0)
 .S:HR'="" HOURS(+HR)=""
"RTN","KMPDTU11",30,0)
 ;
"RTN","KMPDTU11",31,0)
 ; if no HOURS() array
"RTN","KMPDTU11",32,0)
 Q:'$D(HOURS) ""
"RTN","KMPDTU11",33,0)
 ;
"RTN","KMPDTU11",34,0)
 ; do not ask user to select hours
"RTN","KMPDTU11",35,0)
 I 'KMPDASK D  Q X
"RTN","KMPDTU11",36,0)
 .S (I,X)="" F  S I=$O(HOURS(I)) Q:I=""  S X=X_I_","
"RTN","KMPDTU11",37,0)
 ;
"RTN","KMPDTU11",38,0)
 ; ask user to select hour(s)
"RTN","KMPDTU11",39,0)
 S DIR(0)="LO^"_$O(HOURS(""))_":"_$O(HOURS("A"),-1)
"RTN","KMPDTU11",40,0)
 S DIR("A")="Select Hour(s)"
"RTN","KMPDTU11",41,0)
 S:KMPDEF DIR("B")=$O(HOURS(""))_"-"_$O(HOURS("A"),-1)
"RTN","KMPDTU11",42,0)
 W ! D ^DIR
"RTN","KMPDTU11",43,0)
 Q $S(Y=""!(Y="^"):"",1:$G(Y(0)))
"RTN","KMPDTU11",44,0)
 ;
"RTN","KMPDTU11",45,0)
TIMING(KMPDSS,KMPDNODE,KMPDST,KMPDHTM,KMPDUZ,KMPDCL) ;-- start/stop timing stats
"RTN","KMPDTU11",46,0)
 ;--------------------------------------------------------------------
"RTN","KMPDTU11",47,0)
 ; KMPDSS... subscript (free text)
"RTN","KMPDTU11",48,0)
 ; KMPDNODE. node name (free text)
"RTN","KMPDTU11",49,0)
 ; KMPDST... start/stop
"RTN","KMPDTU11",50,0)
 ;            1 - start
"RTN","KMPDTU11",51,0)
 ;            2 - stop
"RTN","KMPDTU11",52,0)
 ; KMPDHTM.. (optional - if not defined the current $h will be used)
"RTN","KMPDTU11",53,0)
 ;           time in $h format
"RTN","KMPDTU11",54,0)
 ; KMPDUZ... (optional -if not defined the current duz will be used)
"RTN","KMPDTU11",55,0)
 ;           user duz
"RTN","KMPDTU11",56,0)
 ; KMPDCL... (optional - if not defined the current IO("CLNM")) will be used)
"RTN","KMPDTU11",57,0)
 ;           client name (free text)
"RTN","KMPDTU11",58,0)
 ; 
"RTN","KMPDTU11",59,0)
 ;--------------------------------------------------------------------
"RTN","KMPDTU11",60,0)
 ; quit if timing stats not turned on
"RTN","KMPDTU11",61,0)
 Q:'$G(^KMPTMP("KMPD-CPRS"))
"RTN","KMPDTU11",62,0)
 ; quit if no subscript
"RTN","KMPDTU11",63,0)
 Q:$G(KMPDSS)=""
"RTN","KMPDTU11",64,0)
 ; quit if no node
"RTN","KMPDTU11",65,0)
 Q:$G(KMPDNODE)=""
"RTN","KMPDTU11",66,0)
 ; start/stop
"RTN","KMPDTU11",67,0)
 S KMPDST=+$G(KMPDST)
"RTN","KMPDTU11",68,0)
 Q:KMPDST<1!(KMPDST>2)
"RTN","KMPDTU11",69,0)
 S:'$G(KMPDHTM) KMPDHTM=$H
"RTN","KMPDTU11",70,0)
 S:'$G(KMPDUZ) KMPDUZ=$G(DUZ)
"RTN","KMPDTU11",71,0)
 S:$G(KMPDCL)="" KMPDCL=$G(IO("CLNM"))
"RTN","KMPDTU11",72,0)
 ;
"RTN","KMPDTU11",73,0)
 ; start timing
"RTN","KMPDTU11",74,0)
 S:KMPDST=1 ^KMPTMP("KMPDT",KMPDSS,KMPDNODE)=KMPDHTM_"^^"_KMPDUZ_"^"_KMPDCL
"RTN","KMPDTU11",75,0)
 ; stop timing
"RTN","KMPDTU11",76,0)
 S:KMPDST=2 $P(^KMPTMP("KMPDT",KMPDSS,KMPDNODE),"^",2)=KMPDHTM
"RTN","KMPDTU11",77,0)
 ;
"RTN","KMPDTU11",78,0)
 Q
"RTN","KMPDU")
0^27^B5625168^B5625168
"RTN","KMPDU",1,0)
KMPDU ;OAK/RAK - CM Tools Utility ;2/17/04  09:47
"RTN","KMPDU",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDU",3,0)
 ;
"RTN","KMPDU",4,0)
GBLCHECK(GLOBAL) ;-- extrinsic function
"RTN","KMPDU",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDU",6,0)
 ; GLOBAL.. Global name to be checked.  Must be either:
"RTN","KMPDU",7,0)
 ;              ^XTMP
"RTN","KMPDU",8,0)
 ;              ^TMP
"RTN","KMPDU",9,0)
 ;              ^UTILITY
"RTN","KMPDU",10,0)
 ;
"RTN","KMPDU",11,0)
 ; RESUTL: 0 - Does not pass.
"RTN","KMPDU",12,0)
 ;         1 - Passes.
"RTN","KMPDU",13,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDU",14,0)
 Q:$G(GLOBAL)="" 0
"RTN","KMPDU",15,0)
 N GBL,I,RESULT
"RTN","KMPDU",16,0)
 S RESULT=0
"RTN","KMPDU",17,0)
 S GBL=GLOBAL
"RTN","KMPDU",18,0)
 ;-- remove '^'.
"RTN","KMPDU",19,0)
 S GBL=$E(GBL,2,$L(GBL))
"RTN","KMPDU",20,0)
 ;-- remove '('.
"RTN","KMPDU",21,0)
 S GBL=$P(GBL,"(")
"RTN","KMPDU",22,0)
 F I="XTMP","TMP","UTILITY" I GBL=I S RESULT=1 Q
"RTN","KMPDU",23,0)
 Q RESULT
"RTN","KMPDU",24,0)
 ;
"RTN","KMPDU",25,0)
FMDTI(Y,X) ;-- date/time in internal fileMan format.
"RTN","KMPDU",26,0)
 ;----------------------------------------------------------------------
"RTN","KMPDU",27,0)
 ;     X - User response ('T', '12/12/94', etc.)
"RTN","KMPDU",28,0)
 ;
"RTN","KMPDU",29,0)
 ; Return: Y(0)=InternalFilemanDate
"RTN","KMPDU",30,0)
 ;         Y(1)=ExternalFilemanDate
"RTN","KMPDU",31,0)
 ;----------------------------------------------------------------------
"RTN","KMPDU",32,0)
 K Y
"RTN","KMPDU",33,0)
 I $G(X)']"" S Y(0)="^" Q
"RTN","KMPDU",34,0)
 N %DT,DATETIME
"RTN","KMPDU",35,0)
 S %DT="ST" D ^%DT
"RTN","KMPDU",36,0)
 S DATETIME=$S(Y>0:Y,1:"^")
"RTN","KMPDU",37,0)
 K Y
"RTN","KMPDU",38,0)
 ;-- fm internal format.
"RTN","KMPDU",39,0)
 S Y(0)=DATETIME
"RTN","KMPDU",40,0)
 ;-- external format.
"RTN","KMPDU",41,0)
 S Y(1)=$$FMTE^XLFDT(DATETIME)
"RTN","KMPDU",42,0)
 Q
"RTN","KMPDU",43,0)
 ;
"RTN","KMPDU",44,0)
KILL(RESULT,VARIABLE) ;-- kill variables.
"RTN","KMPDU",45,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDU",46,0)
 ;  VARIABLE... local or global variable to be killed.
"RTN","KMPDU",47,0)
 ;
"RTN","KMPDU",48,0)
 ; This subroutine kills variables (local or global).  It should be used
"RTN","KMPDU",49,0)
 ; mostly to kill global variables that have been set when components
"RTN","KMPDU",50,0)
 ; have been populated with long lists that were set into temporary
"RTN","KMPDU",51,0)
 ; globals.  If VARIABLE is a global variable, it must be either ^TMP or
"RTN","KMPDU",52,0)
 ; ^UTILITY to be killed.
"RTN","KMPDU",53,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDU",54,0)
 K RESULT S RESULT=""
"RTN","KMPDU",55,0)
 I $G(VARIABLE)="" S RESULT="[No variable to kill]" Q
"RTN","KMPDU",56,0)
 I $E(VARIABLE)="^" D  Q:RESULT]""
"RTN","KMPDU",57,0)
 .I '$$GBLCHECK(VARIABLE) D 
"RTN","KMPDU",58,0)
 ..S RESULT="[Can only kill globals ^XTMP, ^TMP or ^UTILITY]"
"RTN","KMPDU",59,0)
 K @VARIABLE
"RTN","KMPDU",60,0)
 S RESULT="<"_VARIABLE_" killed>"
"RTN","KMPDU",61,0)
 Q
"RTN","KMPDU",62,0)
 ;
"RTN","KMPDU",63,0)
TIMEADD(KMPDTM,KMPDADD) ;-- extrinsic function - add time
"RTN","KMPDU",64,0)
 ;----------------------------------------------------------------------
"RTN","KMPDU",65,0)
 ; KMPDTM... Current time in dy hr:mn:sc format
"RTN","KMPDU",66,0)
 ; KMPDTM... Time to add to current time in dy hr:mn:sc format
"RTN","KMPDU",67,0)
 ;
"RTN","KMPDU",68,0)
 ; RETURN: total in dy hr:mn:sc format
"RTN","KMPDU",69,0)
 ;----------------------------------------------------------------------
"RTN","KMPDU",70,0)
 Q:$G(KMPDTM)="" ""
"RTN","KMPDU",71,0)
 Q:$G(KMPDADD)="" KMPDTM
"RTN","KMPDU",72,0)
 N DY,HR,MN,SC
"RTN","KMPDU",73,0)
 ; current time
"RTN","KMPDU",74,0)
 S DY(1)=+$P(KMPDTM," ")
"RTN","KMPDU",75,0)
 S HR(1)=+$P($P(KMPDTM," ",2),":")
"RTN","KMPDU",76,0)
 S MN(1)=+$P($P(KMPDTM," ",2),":",2)
"RTN","KMPDU",77,0)
 S SC(1)=+$P($P(KMPDTM," ",2),":",3)
"RTN","KMPDU",78,0)
 ; time to be added
"RTN","KMPDU",79,0)
 S DY(2)=+$P(KMPDADD," ")
"RTN","KMPDU",80,0)
 S HR(2)=+$P($P(KMPDADD," ",2),":")
"RTN","KMPDU",81,0)
 S MN(2)=+$P($P(KMPDADD," ",2),":",2)
"RTN","KMPDU",82,0)
 S SC(2)=+$P($P(KMPDADD," ",2),":",3)
"RTN","KMPDU",83,0)
 ; add seconds
"RTN","KMPDU",84,0)
 S SC(3)=SC(1)+SC(2)
"RTN","KMPDU",85,0)
 ; if greater than 59 seconds
"RTN","KMPDU",86,0)
 I SC(3)>59 S MN(3)=SC(3)\60,SC(3)=SC(3)-60
"RTN","KMPDU",87,0)
 ; add minutes
"RTN","KMPDU",88,0)
 S MN(3)=$G(MN(3))+MN(1)+MN(2)
"RTN","KMPDU",89,0)
 ; if greater than 59 minutes
"RTN","KMPDU",90,0)
 I MN(3)>59 S HR(3)=MN(3)\60,MN(3)=MN(3)-60
"RTN","KMPDU",91,0)
 ; add hours
"RTN","KMPDU",92,0)
 S HR(3)=$G(HR(3))+HR(1)+HR(2)
"RTN","KMPDU",93,0)
 ; if greater than 23 hours
"RTN","KMPDU",94,0)
 I HR(3)>23 S DY(3)=HR(3)\24,HR(3)=HR(3)-24
"RTN","KMPDU",95,0)
 ; days
"RTN","KMPDU",96,0)
 S DY(3)=$G(DY(3))+DY(1)+DY(2)
"RTN","KMPDU",97,0)
 ;
"RTN","KMPDU",98,0)
 Q DY(3)_" "_HR(3)_":"_MN(3)_":"_SC(3)
"RTN","KMPDU1")
0^28^B9907864^B8912878
"RTN","KMPDU1",1,0)
KMPDU1 ;SF/RAK - CM Developer Tools Utilities ;2/17/04  09:49
"RTN","KMPDU1",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDU1",3,0)
GBLCHK(KMPDY,KMPDGBL) ;-- check global name.
"RTN","KMPDU1",4,0)
 ;----------------------------------------------------------------------
"RTN","KMPDU1",5,0)
 ; KMPDGBL... Global name.
"RTN","KMPDU1",6,0)
 ;
"RTN","KMPDU1",7,0)
 ; Check to make sure global name is in format for subscript indirection.
"RTN","KMPDU1",8,0)
 ;----------------------------------------------------------------------
"RTN","KMPDU1",9,0)
 ;
"RTN","KMPDU1",10,0)
 K KMPDY
"RTN","KMPDU1",11,0)
 ;
"RTN","KMPDU1",12,0)
 I $G(KMPDGBL)="" S KMPDY(0)="[Global name not defined]" Q
"RTN","KMPDU1",13,0)
 ;
"RTN","KMPDU1",14,0)
 I $E(KMPDGBL)["?" D  Q
"RTN","KMPDU1",15,0)
 .S KMPDY(0)="['"_KMPDGBL_" is an incorrect global name]"
"RTN","KMPDU1",16,0)
 ;
"RTN","KMPDU1",17,0)
 I KMPDGBL["*" S KMPDY(0)="['"_KMPDGBL_" is an incorrect global name]" Q
"RTN","KMPDU1",18,0)
 ;
"RTN","KMPDU1",19,0)
 N GLOBAL
"RTN","KMPDU1",20,0)
 ;
"RTN","KMPDU1",21,0)
 S GLOBAL=KMPDGBL
"RTN","KMPDU1",22,0)
 ; make sure begins with up-arrow (^).
"RTN","KMPDU1",23,0)
 I $E(GLOBAL)'="^" S GLOBAL="^"_GLOBAL
"RTN","KMPDU1",24,0)
 ; make sure contains a '('.
"RTN","KMPDU1",25,0)
 I GLOBAL'["(" S GLOBAL=GLOBAL_"("
"RTN","KMPDU1",26,0)
 ; if ends with comma (,) then remove comma.
"RTN","KMPDU1",27,0)
 I $E(GLOBAL,($L(GLOBAL)))="," S $E(GLOBAL,($L(GLOBAL)))=""
"RTN","KMPDU1",28,0)
 ; make sure ends with a ')'.
"RTN","KMPDU1",29,0)
 I $E(GLOBAL,$L(GLOBAL))'=")" S GLOBAL=GLOBAL_")"
"RTN","KMPDU1",30,0)
 ; if ends with comma (,) then remove comma.
"RTN","KMPDU1",31,0)
 I $E(GLOBAL,($L(GLOBAL)-1))="," S $E(GLOBAL,($L(GLOBAL)-1))=""
"RTN","KMPDU1",32,0)
 ; if global contains () then change to ("").
"RTN","KMPDU1",33,0)
 I $E(GLOBAL,($L(GLOBAL)-1),$L(GLOBAL))="()" D 
"RTN","KMPDU1",34,0)
 .S $E(GLOBAL,$L(GLOBAL))=""""")"
"RTN","KMPDU1",35,0)
 ;
"RTN","KMPDU1",36,0)
 S KMPDY(0)=GLOBAL
"RTN","KMPDU1",37,0)
 ;
"RTN","KMPDU1",38,0)
 Q
"RTN","KMPDU1",39,0)
 ;
"RTN","KMPDU1",40,0)
GBLLIST(KMPDY,KMPDGBL,KMPDST,KMPDLN,KMPDLEN) ;-- get global data
"RTN","KMPDU1",41,0)
 ;----------------------------------------------------------------------
"RTN","KMPDU1",42,0)
 ; KMPDGBL... Global name.
"RTN","KMPDU1",43,0)
 ; KMPDST... Starting global node.  If this is a continuation then use
"RTN","KMPDU1",44,0)
 ;           this entry as starting point.  If original time through
"RTN","KMPDU1",45,0)
 ;           this should be set to null ("").
"RTN","KMPDU1",46,0)
 ; KMPDLN... Number of lines to fill before quitting.
"RTN","KMPDU1",47,0)
 ; KMPDLEN.. Length of line before continuing on next line
"RTN","KMPDU1",48,0)
 ;----------------------------------------------------------------------
"RTN","KMPDU1",49,0)
 ;
"RTN","KMPDU1",50,0)
 K KMPDY
"RTN","KMPDU1",51,0)
 ;
"RTN","KMPDU1",52,0)
 S KMPDGBL=$G(KMPDGBL),KMPDST=$G(KMPDST),KMPDLN=+$G(KMPDLN),KMPDLEN=+$G(KMPDLEN)
"RTN","KMPDU1",53,0)
 S:'KMPDLEN KMPDLEN=80
"RTN","KMPDU1",54,0)
 ;
"RTN","KMPDU1",55,0)
 I 'KMPDLN S KMPDY(0)="[Number of lines not defined]" Q
"RTN","KMPDU1",56,0)
 ;
"RTN","KMPDU1",57,0)
 N GBL,GLOBAL,LAST,LEN,LN
"RTN","KMPDU1",58,0)
 ;
"RTN","KMPDU1",59,0)
 D GBLCHK(.KMPDY,KMPDGBL)
"RTN","KMPDU1",60,0)
 ; if error.
"RTN","KMPDU1",61,0)
 I $E($G(KMPDY(0)))="[" Q
"RTN","KMPDU1",62,0)
 ;
"RTN","KMPDU1",63,0)
 S GLOBAL=$G(KMPDY(0))
"RTN","KMPDU1",64,0)
 I GLOBAL="" S KMPDY(0)="[Unable to process]" Q
"RTN","KMPDU1",65,0)
 I GLOBAL[",," S KMPDY(0)="[Cannot have a blank subscript]" Q
"RTN","KMPDU1",66,0)
 I $Q(@GLOBAL)="" S KMPDY(0)="<No Data to Report>" Q
"RTN","KMPDU1",67,0)
 ;
"RTN","KMPDU1",68,0)
 S GBL=$E(GLOBAL,1,$L(GLOBAL)-1)
"RTN","KMPDU1",69,0)
 ; if GLOBAL("") then just use GLOBAL.
"RTN","KMPDU1",70,0)
 S:$E(GBL,$L(GBL))="""" GBL=$P(GBL,"(")
"RTN","KMPDU1",71,0)
 S LEN=KMPDLEN,LN=1
"RTN","KMPDU1",72,0)
 ;
"RTN","KMPDU1",73,0)
 ; if data in GLOBAL.
"RTN","KMPDU1",74,0)
 I KMPDST=""&(GLOBAL'["("""")") I $D(@GLOBAL)#2 D 
"RTN","KMPDU1",75,0)
 .S KMPDY(LN)=GLOBAL_" = "_@GLOBAL,LN=LN+1
"RTN","KMPDU1",76,0)
 ;
"RTN","KMPDU1",77,0)
 S:KMPDST]"" GLOBAL=KMPDST
"RTN","KMPDU1",78,0)
 ;
"RTN","KMPDU1",79,0)
 F  S GLOBAL=$Q(@GLOBAL) Q:GLOBAL=""!($E(GLOBAL,1,$L(GBL))'=GBL)  D  Q:LN>KMPDLN
"RTN","KMPDU1",80,0)
 .S LAST=GLOBAL
"RTN","KMPDU1",81,0)
 .S KMPDY(LN)=GLOBAL_" = "
"RTN","KMPDU1",82,0)
 .; if fits within LEN.
"RTN","KMPDU1",83,0)
 .I $L(@GLOBAL)'>LEN S KMPDY(LN)=KMPDY(LN)_@GLOBAL,LN=LN+1 Q
"RTN","KMPDU1",84,0)
 .; parse data to fit on line.
"RTN","KMPDU1",85,0)
 .D PARSE(LEN)
"RTN","KMPDU1",86,0)
 ;
"RTN","KMPDU1",87,0)
 S KMPDY(0)=GLOBAL
"RTN","KMPDU1",88,0)
 ; if no more subscripts.
"RTN","KMPDU1",89,0)
 ;($E(GLOBAL,1,$L(GBL))'=GBL)
"RTN","KMPDU1",90,0)
 I GLOBAL="" S KMPDY(0)="***end of list***"
"RTN","KMPDU1",91,0)
 E  I $E($Q(@GLOBAL),1,$L(GBL))'=GBL S KMPDY(0)="***end of list***"
"RTN","KMPDU1",92,0)
 ;
"RTN","KMPDU1",93,0)
 Q
"RTN","KMPDU1",94,0)
 ;
"RTN","KMPDU1",95,0)
PARSE(LEN) ;
"RTN","KMPDU1",96,0)
 ;  if length of data is greater than current position to the end
"RTN","KMPDU1",97,0)
 ;  of the screen the data must be broken down and printed on
"RTN","KMPDU1",98,0)
 ;  separate lines so that $Y will continue to be updated
"RTN","KMPDU1",99,0)
 ;
"RTN","KMPDU1",100,0)
 S LEN=+$G(LEN) Q:'LEN  N C
"RTN","KMPDU1",101,0)
 F C=0:1 Q:$E(@GLOBAL,(LEN*C),(LEN*(C+1)-1))']""  D 
"RTN","KMPDU1",102,0)
 .S:$G(KMPDY(LN))="" KMPDY(LN)="               "
"RTN","KMPDU1",103,0)
 .S KMPDY(LN)=$G(KMPDY(LN))_$E(@GLOBAL,(LEN*C),(LEN*(C+1)-1))
"RTN","KMPDU1",104,0)
 .S LN=LN+1
"RTN","KMPDU1",105,0)
 ;
"RTN","KMPDU1",106,0)
 Q
"RTN","KMPDU11")
0^29^B16579136^B16579136
"RTN","KMPDU11",1,0)
KMPDU11 ;OAK/RAK - CM Tools Text Display Utility ;2/17/04  09:50
"RTN","KMPDU11",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDU11",3,0)
 ;
"RTN","KMPDU11",4,0)
WP(KMPUAR,KMPUTM,KMPUBM,KMPULM,KMPURM,KMPUNW,KMPUXIT) ;-- word processing display.
"RTN","KMPDU11",5,0)
 ;--------------------------------------------------------------------
"RTN","KMPDU11",6,0)
 ; KMPUAR...  Array containing word processing text.
"RTN","KMPDU11",7,0)
 ;            Example: ^KMPUTMP(1001,1,0)="This is the"
"RTN","KMPDU11",8,0)
 ;                     ^KMPUTMP(1001,2,0)="text to display."
"RTN","KMPDU11",9,0)
 ;
"RTN","KMPDU11",10,0)
 ;  Optional parameters:
"RTN","KMPDU11",11,0)
 ;
"RTN","KMPDU11",12,0)
 ; KMPUTM.. Top margin of screen area.
"RTN","KMPDU11",13,0)
 ; KMPUBM.. Bottom margin of screen area.
"RTN","KMPDU11",14,0)
 ; KMPULM.. Left margin.
"RTN","KMPDU11",15,0)
 ; KMPURM.. Right margin.
"RTN","KMPDU11",16,0)
 ; KMPUNW.. Nowrap:
"RTN","KMPDU11",17,0)
 ;           0 - nowrap (print as entered)
"RTN","KMPDU11",18,0)
 ;           1 - wrap
"RTN","KMPDU11",19,0)
 ; KMPUXIT. Exit without 'continue' text.  This allows the programmer
"RTN","KMPDU11",20,0)
 ;          to use their own display for continuing
"RTN","KMPDU11",21,0)
 ;           0 - do not exit - display 'continue' text
"RTN","KMPDU11",22,0)
 ;           1 - exit
"RTN","KMPDU11",23,0)
 ;
"RTN","KMPDU11",24,0)
 ; If more than one page this routine allows the user to scroll back
"RTN","KMPDU11",25,0)
 ; and forth between pages. If KMPUTM and KMPUBM are not passed will
"RTN","KMPDU11",26,0)
 ; default to full screen (0 to 22).
"RTN","KMPDU11",27,0)
 ;--------------------------------------------------------------------
"RTN","KMPDU11",28,0)
 ;
"RTN","KMPDU11",29,0)
 Q:'$D(KMPUAR)
"RTN","KMPDU11",30,0)
 ;
"RTN","KMPDU11",31,0)
 N CLRSCR,I,KMPUI,KMPUOUT,LEN,LINES,PAGE,PAGES
"RTN","KMPDU11",32,0)
 N DIR,DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,X,Y,Z
"RTN","KMPDU11",33,0)
 N IOBM,IOECH,IOELALL,IOELEOL,IORVON,IORVOFF,IOTM,IOSTBM
"RTN","KMPDU11",34,0)
 ;
"RTN","KMPDU11",35,0)
 S KMPUXIT=+$G(KMPUXIT)
"RTN","KMPDU11",36,0)
 S KMPUTM=+$G(KMPUTM),KMPUBM=$S(+$G(KMPUBM):KMPUBM,1:22)
"RTN","KMPDU11",37,0)
 S KMPULM=+$G(KMPULM),KMPURM=+$G(KMPURM),KMPUNW=+$G(KMPUNW)
"RTN","KMPDU11",38,0)
 S:KMPUBM>22 KMPUBM=22 S DIWL=KMPULM,DIWR=$S(KMPURM:KMPURM,1:IOM)
"RTN","KMPDU11",39,0)
 S KMPUNW=$S(KMPUNW=1:"",1:"N")
"RTN","KMPDU11",40,0)
 S X="IOECH;IOELALL;IOELEOL;IORVON;IORVOFF;IOSTKMPUBM" D ENDR^%ZISS
"RTN","KMPDU11",41,0)
 ; set CLRSCR (clear screen) 
"RTN","KMPDU11",42,0)
 ; clear full screen
"RTN","KMPDU11",43,0)
 I DIWL=0,(DIWR=IOM) D 
"RTN","KMPDU11",44,0)
 .S CLRSCR="F DY=(KMPUBM-1):-1:KMPUTM X IOXY W IOELALL,!"
"RTN","KMPDU11",45,0)
 ; clear left margin to end of screen
"RTN","KMPDU11",46,0)
 E  I DIWR=IOM D 
"RTN","KMPDU11",47,0)
 .S CLRSCR="S DX=DIWL F DY=(KMPUBM-1):-1:KMPUTM X IOXY W IOELEOL,!"
"RTN","KMPDU11",48,0)
 ; clear left margin to right margin
"RTN","KMPDU11",49,0)
 E  S CLRSCR="F DY=(KMPUBM-1):-1:KMPUTM F DX=DIWL:1:DIWR X IOXY W IOECH"
"RTN","KMPDU11",50,0)
 K ^UTILITY($J,"W") S DIWF=KMPUNW,X=""
"RTN","KMPDU11",51,0)
 ; use fileman to format text
"RTN","KMPDU11",52,0)
 F KMPUI=0:0 S KMPUI=$O(@KMPUAR@(KMPUI)) Q:'KMPUI  D 
"RTN","KMPDU11",53,0)
 .Q:'$D(@KMPUAR@(KMPUI,0))  S X=@KMPUAR@(KMPUI,0) D ^DIWP
"RTN","KMPDU11",54,0)
 Q:'$D(^UTILITY($J,"W",DIWL))  S LINES=$G(^(DIWL))
"RTN","KMPDU11",55,0)
 ; check for last line equal to null
"RTN","KMPDU11",56,0)
 I $G(^UTILITY($J,"W",DIWL,LINES,0))="" S LINES=LINES-1
"RTN","KMPDU11",57,0)
 S LEN=KMPUBM-KMPUTM,PAGES=LINES\LEN I LINES#LEN S PAGES=PAGES+1
"RTN","KMPDU11",58,0)
 ;
"RTN","KMPDU11",59,0)
 ; set up the pages() array -  first piece = starting line
"RTN","KMPDU11",60,0)
 ;                            second piece = ending line
"RTN","KMPDU11",61,0)
 F I=1:1:PAGES D 
"RTN","KMPDU11",62,0)
 .S PAGES(I)=$S(I=1:1,1:(I*LEN-LEN+1))
"RTN","KMPDU11",63,0)
 .I I=1 S $P(PAGES(I),U,2)=$S(LINES<LEN:LINES,1:LEN) Q
"RTN","KMPDU11",64,0)
 .S $P(PAGES(I),U,2)=(I*LEN)
"RTN","KMPDU11",65,0)
 S DY=(KMPUTM-1),PAGE=1,KMPUOUT=0
"RTN","KMPDU11",66,0)
 ; main loop
"RTN","KMPDU11",67,0)
 F  D  Q:KMPUOUT
"RTN","KMPDU11",68,0)
 .F KMPUI=$P(PAGES(PAGE),U):1:$P(PAGES(PAGE),U,2) D 
"RTN","KMPDU11",69,0)
 ..Q:'$D(^UTILITY($J,"W",DIWL,KMPUI,0))
"RTN","KMPDU11",70,0)
 ..S DX=DIWL,DY=DY+1 X IOXY W ^UTILITY($J,"W",DIWL,KMPUI,0),!
"RTN","KMPDU11",71,0)
 .I 'KMPUXIT D FTR X CLRSCR Q:KMPUOUT  S DY=DY-1
"RTN","KMPDU11",72,0)
 .E  S KMPUOUT=1
"RTN","KMPDU11",73,0)
 F DY=22,23 X IOXY W IOELALL
"RTN","KMPDU11",74,0)
 K ^UTILITY($J,"W")
"RTN","KMPDU11",75,0)
 Q
"RTN","KMPDU11",76,0)
 ;
"RTN","KMPDU11",77,0)
FTR ;-- footer designed for wp subroutine above.
"RTN","KMPDU11",78,0)
 N READ,READX S READ=""
"RTN","KMPDU11",79,0)
 S DX=0,DY=22 X IOXY W $$REPEAT^XLFSTR("_",IOM)
"RTN","KMPDU11",80,0)
 I PAGES=1 S READ="X",READ("A")=$J(" ",28)_"Press <RET> to continue"
"RTN","KMPDU11",81,0)
 I PAGES>1 S READ="X",READ("A")="E[x]it" D 
"RTN","KMPDU11",82,0)
 .I PAGE<PAGES S READ=READ_"N",READ("A")=READ("A")_", [N]ext Screen"
"RTN","KMPDU11",83,0)
 .I PAGE>1 S READ=READ_"P",READ("A")=READ("A")_", [P]revious Screen"
"RTN","KMPDU11",84,0)
 S READ("A")=READ("A")_": "
"RTN","KMPDU11",85,0)
FTR1 ;-- read
"RTN","KMPDU11",86,0)
 S DX=0,DY=23 X IOXY W IOELALL
"RTN","KMPDU11",87,0)
 S DX=62 X IOXY W " Page ",PAGE," of ",PAGES," "
"RTN","KMPDU11",88,0)
 S DX=0 X IOXY W READ("A")
"RTN","KMPDU11",89,0)
 R READX:DTIME S READX=$$UP^XLFSTR(READX)
"RTN","KMPDU11",90,0)
 I READX="X"!(READX="^")!(READ="X") S KMPUOUT=1 Q
"RTN","KMPDU11",91,0)
 I READX="N",(READ["N") S PAGE=PAGE+1 Q
"RTN","KMPDU11",92,0)
 I READX="P",(READ["P") S PAGE=PAGE-1 Q
"RTN","KMPDU11",93,0)
 I READX["?" D HELP G FTR1
"RTN","KMPDU11",94,0)
 W *7
"RTN","KMPDU11",95,0)
 G FTR1
"RTN","KMPDU11",96,0)
 ;
"RTN","KMPDU11",97,0)
HELP ;-- clear screen, print help text, repaint screen.
"RTN","KMPDU11",98,0)
 N I,READX X CLRSCR S DY=KMPUTM,DX=$S(DIWL>7:DIWL,1:7) X IOXY
"RTN","KMPDU11",99,0)
 F I=1:1:$L(READ) S DY=DY+1 X IOXY D 
"RTN","KMPDU11",100,0)
 .I $E(READ,I)="X" W "Enter 'X' (or '^') to exit.",!
"RTN","KMPDU11",101,0)
 .I $E(READ,I)="N" W "Enter 'N' to advance to the next screen.",!
"RTN","KMPDU11",102,0)
 .I $E(READ,I)="P" W "Enter 'P' to backup to the previous screen.",!
"RTN","KMPDU11",103,0)
 S DY=(KMPUBM-1) X IOXY R "Press <RET> to continue: ",READX:DTIME
"RTN","KMPDU11",104,0)
 ; repaint screen.
"RTN","KMPDU11",105,0)
 X CLRSCR S DY=(KMPUTM-1)
"RTN","KMPDU11",106,0)
 F I=$P(PAGES(PAGE),U):1:$P(PAGES(PAGE),U,2) D 
"RTN","KMPDU11",107,0)
 .Q:'$D(^UTILITY($J,"W",DIWL,I,0))
"RTN","KMPDU11",108,0)
 .S DX=DIWL,DY=DY+1 X IOXY W ^UTILITY($J,"W",DIWL,I,0),!
"RTN","KMPDU11",109,0)
 Q
"RTN","KMPDU2")
0^30^B53972904^B37794798
"RTN","KMPDU2",1,0)
KMPDU2 ;OAK/RAK - CM Tools Routine Utilities ;08/31/11  09:21
"RTN","KMPDU2",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDU2",3,0)
 ;
"RTN","KMPDU2",4,0)
IRSRC(KMPDDA) ;-- extrinsic function - check for local mods in INSTALL file
"RTN","KMPDU2",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDU2",6,0)
 ; KMPDDA... DA as defined in fileman programmers manual.
"RTN","KMPDU2",7,0)
 ;
"RTN","KMPDU2",8,0)
 ; Return: "NO"  - no local mods.
"RTN","KMPDU2",9,0)
 ;         "YES" - local mods.
"RTN","KMPDU2",10,0)
 ;
"RTN","KMPDU2",11,0)
 ; This extrinsic function is called from computed field #573099 (LOCAL
"RTN","KMPDU2",12,0)
 ; MODIFICATIONS) in file #9.7 (INSTALL).
"RTN","KMPDU2",13,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDU2",14,0)
 ;
"RTN","KMPDU2",15,0)
 Q:'$G(KMPDDA) "NO"
"RTN","KMPDU2",16,0)
 ;
"RTN","KMPDU2",17,0)
 N I,RTN,RETURN
"RTN","KMPDU2",18,0)
 S I=0,RETURN="NO"
"RTN","KMPDU2",19,0)
 F  S I=$O(^XPD(9.7,KMPDDA,"RTN",I)) Q:'I  D  Q:RETURN="YES"
"RTN","KMPDU2",20,0)
 .Q:'$D(^XPD(9.7,KMPDDA,"RTN",I,0))  S RTN=$P(^(0),U)
"RTN","KMPDU2",21,0)
 .S:$$ROUSRC1(RTN,"LOCAL MOD/") RETURN="YES"
"RTN","KMPDU2",22,0)
 .;S:$$ROUSRC1(RTN,"/LOCAL MOD/") RETURN="YES"
"RTN","KMPDU2",23,0)
 ;
"RTN","KMPDU2",24,0)
 Q RETURN
"RTN","KMPDU2",25,0)
 ;
"RTN","KMPDU2",26,0)
ROUFIND(KMPDY,KMPDRNM,KMPDGBL) ;-- find routines.
"RTN","KMPDU2",27,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDU2",28,0)
 ; KMPDRNM.. Routine name to search for.
"RTN","KMPDU2",29,0)
 ; KMPDGBL... Global to store data.  Stored in format:
"RTN","KMPDU2",30,0)
 ;              RoutineName^RoutineSize^Checksum
"RTN","KMPDU2",31,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDU2",32,0)
 ;
"RTN","KMPDU2",33,0)
 K KMPDY
"RTN","KMPDU2",34,0)
 ;
"RTN","KMPDU2",35,0)
 S KMPDRNM=$G(KMPDRNM),KMPDGBL=$G(KMPDGBL)
"RTN","KMPDU2",36,0)
 ;
"RTN","KMPDU2",37,0)
 I KMPDRNM="" S KMPDY="[Routine not defined]" Q
"RTN","KMPDU2",38,0)
 I KMPDGBL="" S KMPDY="[Global for storage is not defined]" Q
"RTN","KMPDU2",39,0)
 ;
"RTN","KMPDU2",40,0)
 N DATA,LN,ROU,RTN,X,Y
"RTN","KMPDU2",41,0)
 ;
"RTN","KMPDU2",42,0)
 ; kill global with check for ^tmp or ^utility.
"RTN","KMPDU2",43,0)
 D KILL^KMPDU(.DATA,KMPDGBL)
"RTN","KMPDU2",44,0)
 ; if error.
"RTN","KMPDU2",45,0)
 I $E(DATA)="[" S KMPDY=DATA Q
"RTN","KMPDU2",46,0)
 ;
"RTN","KMPDU2",47,0)
 S KMPDY=$NA(@KMPDGBL)
"RTN","KMPDU2",48,0)
 ;
"RTN","KMPDU2",49,0)
 ; remove all spaces
"RTN","KMPDU2",50,0)
 S KMPDRNM=$TR(KMPDRNM," ","")
"RTN","KMPDU2",51,0)
 ; if just one routine
"RTN","KMPDU2",52,0)
 I $E(KMPDRNM,$L(KMPDRNM))'["*" D  Q
"RTN","KMPDU2",53,0)
 .; if invalid routine name
"RTN","KMPDU2",54,0)
 .I '$$ROUNAME(KMPDRNM) S @KMPDGBL@(0)="<"_KMPDRNM_" contains invalid characters or is greater than 8 characters length>" Q
"RTN","KMPDU2",55,0)
 .; if routine not defined.
"RTN","KMPDU2",56,0)
 .I '$D(^$ROUTINE(KMPDRNM)) S @KMPDGBL@(0)="<Routine "_KMPDRNM_" not defined>" Q
"RTN","KMPDU2",57,0)
 .I $G(^%ZOSF("OS"))["OpenM",'$D(^ROUTINE(KMPDRNM)) S @KMPDGBL@(0)="<Routine "_KMPDRNM_" missing source code>" Q
"RTN","KMPDU2",58,0)
 .; if defined.
"RTN","KMPDU2",59,0)
 .S $P(@KMPDGBL@(0),U)=KMPDRNM
"RTN","KMPDU2",60,0)
 .; checksum
"RTN","KMPDU2",61,0)
 .S X=KMPDRNM X ^%ZOSF("RSUM1") S $P(@KMPDGBL@(0),U,2)=Y
"RTN","KMPDU2",62,0)
 ;
"RTN","KMPDU2",63,0)
 ; remove "*" if any.
"RTN","KMPDU2",64,0)
 S:$E(KMPDRNM,$L(KMPDRNM))="*" KMPDRNM=$E(KMPDRNM,1,$L(KMPDRNM)-1)
"RTN","KMPDU2",65,0)
 I '$$ROUNAME(KMPDRNM) S @KMPDGBL@(0)="<"_KMPDRNM_" contains invalid characters or is greater than 8 characters in length>" Q
"RTN","KMPDU2",66,0)
 S ROU=$$ENDCHAR(KMPDRNM),RTN=KMPDRNM,LN=0
"RTN","KMPDU2",67,0)
 F  S ROU=$O(^$ROUTINE(ROU)) Q:ROU=""!($E(ROU,1,$L(RTN))'=RTN)!(LN>1000)  D
"RTN","KMPDU2",68,0)
 .I $G(^%ZOSF("OS"))["OpenM",'$D(^ROUTINE(ROU)) S @KMPDGBL@(LN)=ROU_"^no source",LN=LN+1 Q
"RTN","KMPDU2",69,0)
 .S $P(@KMPDGBL@(LN),U)=ROU
"RTN","KMPDU2",70,0)
 .; checksum
"RTN","KMPDU2",71,0)
 .S X=ROU X ^%ZOSF("RSUM1") S $P(@KMPDGBL@(LN),U,2)=Y
"RTN","KMPDU2",72,0)
 .S LN=LN+1
"RTN","KMPDU2",73,0)
 ;
"RTN","KMPDU2",74,0)
 S:'$D(@KMPDGBL) KMPDY(0)="<No Data To Report>"
"RTN","KMPDU2",75,0)
 ;
"RTN","KMPDU2",76,0)
 Q
"RTN","KMPDU2",77,0)
 ;
"RTN","KMPDU2",78,0)
ROUINQ(KMPDY,KMPDROU) ;-- routine inquiry.
"RTN","KMPDU2",79,0)
 ;----------------------------------------------------------------------
"RTN","KMPDU2",80,0)
 ; KMPDROU.. Routine(s) to search (this may be a partial name.
"RTN","KMPDU2",81,0)
 ;----------------------------------------------------------------------
"RTN","KMPDU2",82,0)
 ;
"RTN","KMPDU2",83,0)
 K KMPDY
"RTN","KMPDU2",84,0)
 ;
"RTN","KMPDU2",85,0)
 S KMPDROU=$G(KMPDROU)
"RTN","KMPDU2",86,0)
 I KMPDROU="" S KMPDY(0)="[Routine name not defined]" Q
"RTN","KMPDU2",87,0)
 I '$$ROUNAME(KMPDROU) S @KMPDGBL@(0)="<"_KMPDROU_" contains invalid characters or is greater than 8 characters in length>" Q
"RTN","KMPDU2",88,0)
 I '$D(^$ROUTINE(KMPDROU)) S KMPDY(0)="[Routine '"_KMPDROU_"' not defined]" Q
"RTN","KMPDU2",89,0)
 ;
"RTN","KMPDU2",90,0)
 N DIF,I,LN,ROU,X,XCNP
"RTN","KMPDU2",91,0)
 ;
"RTN","KMPDU2",92,0)
 S DIF="ROU(",XCNP=0
"RTN","KMPDU2",93,0)
 S X=KMPDROU X ^%ZOSF("TEST")
"RTN","KMPDU2",94,0)
 I '$T S KMPDY(0)="[Routine '"_KMPDROU_"' not defined]" Q
"RTN","KMPDU2",95,0)
 I $G(^%ZOSF("OS"))["OpenM",'$D(^ROUTINE(KMPDROU)) S KMPDY(0)="[Unable to load routine - no source code]" Q
"RTN","KMPDU2",96,0)
 X ^%ZOSF("LOAD")
"RTN","KMPDU2",97,0)
 S (I,LN,LN(0))=0
"RTN","KMPDU2",98,0)
 F  S I=$O(ROU(I)) Q:'I  I $D(ROU(I,0)) D
"RTN","KMPDU2",99,0)
 .S X=$P(ROU(I,0)," ",1),ROU(I,0)=$P(ROU(I,0)," ",2,999)
"RTN","KMPDU2",100,0)
 .I $A($E(X))>32 S LN(0)=0
"RTN","KMPDU2",101,0)
 .I LN(0)>0,(LN(0)#10)=0 S X="[+"_LN(0)_"]"
"RTN","KMPDU2",102,0)
 .S KMPDY(LN)=$$LJ^XLFSTR(X,8," ")_ROU(I,0),LN=LN+1,LN(0)=LN(0)+1
"RTN","KMPDU2",103,0)
 ;
"RTN","KMPDU2",104,0)
 S:'$D(KMPDY) KMPDY(0)="[Unable to load routine]"
"RTN","KMPDU2",105,0)
 ;
"RTN","KMPDU2",106,0)
 Q
"RTN","KMPDU2",107,0)
 ;
"RTN","KMPDU2",108,0)
ROUSRC(KMPDY,KMPDROU,KMPDTXT) ;-- routine search
"RTN","KMPDU2",109,0)
 ;----------------------------------------------------------------------
"RTN","KMPDU2",110,0)
 ; KMPDROU.. Routine(s) to search (this may be a partial name.
"RTN","KMPDU2",111,0)
 ; KMPDTXT.. Text to search for in routine.
"RTN","KMPDU2",112,0)
 ;----------------------------------------------------------------------
"RTN","KMPDU2",113,0)
 ;
"RTN","KMPDU2",114,0)
 K KMPDY
"RTN","KMPDU2",115,0)
 ;
"RTN","KMPDU2",116,0)
 S KMPDROU=$G(KMPDROU),KMPDTXT=$$UP^XLFSTR($G(KMPDTXT))
"RTN","KMPDU2",117,0)
 ;
"RTN","KMPDU2",118,0)
 I KMPDROU="" S KMPDY(0)="[Routine(s) not defined]" Q
"RTN","KMPDU2",119,0)
 I KMPDTXT="" S KMPDY(0)="[Search Text not defined]" Q
"RTN","KMPDU2",120,0)
 ;
"RTN","KMPDU2",121,0)
 N LN,RN,RTN,STAR
"RTN","KMPDU2",122,0)
 ;
"RTN","KMPDU2",123,0)
 S RTN=KMPDROU,STAR=$E(RTN,$L(RTN))
"RTN","KMPDU2",124,0)
 S:STAR="*" RTN=$E(RTN,1,$L(RTN)-1)
"RTN","KMPDU2",125,0)
 ;
"RTN","KMPDU2",126,0)
 ; if just one routine.
"RTN","KMPDU2",127,0)
 I STAR'="*" D  Q
"RTN","KMPDU2",128,0)
 .I '$$ROUNAME(RTN) S @KMPDGBL@(0)="<"_RTN_" contains invalid characters or is greater than 8 characters in length>" Q
"RTN","KMPDU2",129,0)
 .; if match.
"RTN","KMPDU2",130,0)
 .I $$ROUSRC1(RTN,KMPDTXT) S KMPDY(0)=RTN Q
"RTN","KMPDU2",131,0)
 .; else no match.
"RTN","KMPDU2",132,0)
 .S KMPDY(0)="<No Matches Found>"
"RTN","KMPDU2",133,0)
 ;
"RTN","KMPDU2",134,0)
 S RN=RTN,LN=0
"RTN","KMPDU2",135,0)
 F  S RN=$O(^$ROUTINE(RN)) Q:RN=""!($E(RN,1,$L(RTN))'=RTN)  D
"RTN","KMPDU2",136,0)
 .; if match.
"RTN","KMPDU2",137,0)
 .I $$ROUSRC1(RN,KMPDTXT) S KMPDY(LN)=RN,LN=LN+1 Q
"RTN","KMPDU2",138,0)
 ;
"RTN","KMPDU2",139,0)
 S:'$D(KMPDY) KMPDY(0)="<No Matches Found>"
"RTN","KMPDU2",140,0)
 ;
"RTN","KMPDU2",141,0)
 Q
"RTN","KMPDU2",142,0)
 ;
"RTN","KMPDU2",143,0)
ROUSRC1(KMPDROU,KMPDTXT) ;-- extrinsic function - check for text.
"RTN","KMPDU2",144,0)
 ;----------------------------------------------------------------------
"RTN","KMPDU2",145,0)
 ; KMPDROU.. Routine(s) to search (this may be a partial name.
"RTN","KMPDU2",146,0)
 ; KMPDTXT.. Text to search for in routine.
"RTN","KMPDU2",147,0)
 ;
"RTN","KMPDU2",148,0)
 ; Return: 0 - no match.
"RTN","KMPDU2",149,0)
 ;         1 - match.
"RTN","KMPDU2",150,0)
 ;----------------------------------------------------------------------
"RTN","KMPDU2",151,0)
 ;
"RTN","KMPDU2",152,0)
 S KMPDROU=$G(KMPDROU),KMPDTXT=$$UP^XLFSTR($G(KMPDTXT))
"RTN","KMPDU2",153,0)
 ;
"RTN","KMPDU2",154,0)
 Q:KMPDROU="" 0
"RTN","KMPDU2",155,0)
 Q:KMPDTXT="" 0
"RTN","KMPDU2",156,0)
 ;
"RTN","KMPDU2",157,0)
 N DIF,I,RETURN,ROU,X,XCNP
"RTN","KMPDU2",158,0)
 ;
"RTN","KMPDU2",159,0)
 S DIF="ROU(",(I,RETURN,XCNP)=0,RETURN=0
"RTN","KMPDU2",160,0)
 S X=KMPDROU X ^%ZOSF("TEST")
"RTN","KMPDU2",161,0)
 Q:'$T 0
"RTN","KMPDU2",162,0)
 I $G(^%ZOSF("OS"))["OpenM",'$D(^ROUTINE(KMPDROU)) Q
"RTN","KMPDU2",163,0)
 X ^%ZOSF("LOAD")
"RTN","KMPDU2",164,0)
 F  S I=$O(ROU(I)) Q:'I  I $D(ROU(I,0)) D  Q:RETURN
"RTN","KMPDU2",165,0)
 .I $$UP^XLFSTR(ROU(I,0))[KMPDTXT S RETURN=1
"RTN","KMPDU2",166,0)
 ;
"RTN","KMPDU2",167,0)
 Q RETURN
"RTN","KMPDU2",168,0)
 ;
"RTN","KMPDU2",169,0)
ROUSRC2(KMPDY,KMPDTXT,KMPDGBL,KMPDROU) ;-- search for text in routine.
"RTN","KMPDU2",170,0)
 ;----------------------------------------------------------------------
"RTN","KMPDU2",171,0)
 ; KMPDTXT..  Text to search for in routine.
"RTN","KMPDU2",172,0)
 ; KMPDGBL... Global to store data.
"RTN","KMPDU2",173,0)
 ; KMPDROU..  array containing routine names to be searches.
"RTN","KMPDU2",174,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDU2",175,0)
 ;
"RTN","KMPDU2",176,0)
 K KMPDY
"RTN","KMPDU2",177,0)
 ;
"RTN","KMPDU2",178,0)
 S KMPDTXT=$G(KMPDTXT),KMPDGBL=$G(KMPDGBL)
"RTN","KMPDU2",179,0)
 ;
"RTN","KMPDU2",180,0)
 I '$D(KMPDROU) S @KMPDGBL@(0)="[Routine(s) name not defined]" Q
"RTN","KMPDU2",181,0)
 I KMPDTXT="" S @KMPDGBL@(0)="[Search text not defined]" Q
"RTN","KMPDU2",182,0)
 I KMPDGBL="" S KMPDY="[Global for storage is not defined]" Q
"RTN","KMPDU2",183,0)
 ;
"RTN","KMPDU2",184,0)
 N DATA,DIF,I,LABEL,LN,OFFSET,ROU,RTN,X,XCNP
"RTN","KMPDU2",185,0)
 ;
"RTN","KMPDU2",186,0)
 ; kill global with check for ^tmp or ^utility.
"RTN","KMPDU2",187,0)
 D KILL^KMPDU(.DATA,KMPDGBL)
"RTN","KMPDU2",188,0)
 ; if error.
"RTN","KMPDU2",189,0)
 I $E(DATA)="[" S KMPDY=DATA Q
"RTN","KMPDU2",190,0)
 ;
"RTN","KMPDU2",191,0)
 S KMPDY=$NA(@KMPDGBL)
"RTN","KMPDU2",192,0)
 ;
"RTN","KMPDU2",193,0)
 S KMPDTXT=$$UP^XLFSTR(KMPDTXT)
"RTN","KMPDU2",194,0)
 ;
"RTN","KMPDU2",195,0)
 S ROU="",LN=0
"RTN","KMPDU2",196,0)
 F  S ROU=$O(KMPDROU(ROU)) Q:ROU=""  D
"RTN","KMPDU2",197,0)
 .K ROUT
"RTN","KMPDU2",198,0)
 .S DIF="ROUT(",(I,OFFSET,XCNP)=0,LABEL=ROU
"RTN","KMPDU2",199,0)
 .S X=ROU X ^%ZOSF("TEST") Q:'$T
"RTN","KMPDU2",200,0)
 .I $G(^%ZOSF("OS"))["OpenM",'$D(^ROUTINE(ROU)) Q
"RTN","KMPDU2",201,0)
 .X ^%ZOSF("LOAD")
"RTN","KMPDU2",202,0)
 .F  S I=$O(ROUT(I)) Q:'I  I $D(ROUT(I,0)) D
"RTN","KMPDU2",203,0)
 ..S OFFSET=OFFSET+1
"RTN","KMPDU2",204,0)
 ..; if new label.
"RTN","KMPDU2",205,0)
 ..I $E(ROUT(I,0))'=" " S LABEL=$$ROULABEL^KMPDU2(ROUT(I,0)),OFFSET=0
"RTN","KMPDU2",206,0)
 ..; quit if no match.
"RTN","KMPDU2",207,0)
 ..Q:$$UP^XLFSTR(ROUT(I,0))'[KMPDTXT
"RTN","KMPDU2",208,0)
 ..S @KMPDGBL@(LN)=ROU_"^"_LABEL_$S(OFFSET:"+"_OFFSET,1:"")_"  "_ROUT(I,0)
"RTN","KMPDU2",209,0)
 ..S LN=LN+1
"RTN","KMPDU2",210,0)
 ;
"RTN","KMPDU2",211,0)
 S:'$D(@KMPDGBL) @KMPDGBL@(0)="<No Match Found>"
"RTN","KMPDU2",212,0)
 ;
"RTN","KMPDU2",213,0)
 Q
"RTN","KMPDU2",214,0)
 ;
"RTN","KMPDU2",215,0)
ROULABEL(TEXT) ;-- routine label.
"RTN","KMPDU2",216,0)
 Q:$G(TEXT)="" ""
"RTN","KMPDU2",217,0)
 N I,LABEL
"RTN","KMPDU2",218,0)
 S LABEL=""
"RTN","KMPDU2",219,0)
 F I=1:1 Q:$E(TEXT,I)=" "!($E(TEXT,I)="(")  S LABEL=$E(TEXT,0,I)
"RTN","KMPDU2",220,0)
 Q LABEL
"RTN","KMPDU2",221,0)
 ;
"RTN","KMPDU2",222,0)
ROUNAME(KMPDRNM) ;-- extrinsic function - determine if routine name is valid
"RTN","KMPDU2",223,0)
 ;--------------------------------------------------------------------
"RTN","KMPDU2",224,0)
 ; KMPDRNM... free text - routine name
"RTN","KMPDU2",225,0)
 ;--------------------------------------------------------------------
"RTN","KMPDU2",226,0)
 ; routine name must begin with alpha and then be 1 to 7 additional
"RTN","KMPDU2",227,0)
 ; alpha or numeric characters.
"RTN","KMPDU2",228,0)
 S KMPDRNM=$G(KMPDRNM)
"RTN","KMPDU2",229,0)
 Q KMPDRNM?1A!(KMPDRNM?1A1.7AN)!(KMPDRNM?1"%"1.7AN)
"RTN","KMPDU2",230,0)
 ;
"RTN","KMPDU2",231,0)
ENDCHAR(RTN) ;-- extrinsic function - determine last character for $ordering
"RTN","KMPDU2",232,0)
 ;--------------------------------------------------------------------
"RTN","KMPDU2",233,0)
 ; RTN - routine name
"RTN","KMPDU2",234,0)
 ;--------------------------------------------------------------------
"RTN","KMPDU2",235,0)
 Q:$G(RTN)="" ""
"RTN","KMPDU2",236,0)
 ; less than one
"RTN","KMPDU2",237,0)
 Q:($A($E(RTN,$L(RTN)))<49) $E(RTN,1,$L(RTN)-1)
"RTN","KMPDU2",238,0)
 ; numbers
"RTN","KMPDU2",239,0)
 Q:($A($E(RTN,$L(RTN)))<58) $E(RTN,1,$L(RTN)-1)_$C(($A($E(RTN,$L(RTN)))-1))_"z"
"RTN","KMPDU2",240,0)
 ; if RTN = 'A'
"RTN","KMPDU2",241,0)
 Q:RTN="A" "%z"
"RTN","KMPDU2",242,0)
 ; if 'A' then use '%'
"RTN","KMPDU2",243,0)
 Q:($E(RTN,$L(RTN))="A") $E(RTN,1,$L(RTN)-1)_"9z"
"RTN","KMPDU2",244,0)
 ; if 91 through 97
"RTN","KMPDU2",245,0)
 Q:($A($E(RTN,$L(RTN)))>90)&($A($E(RTN,$L(RTN)))<98) $E(RTN,1,$L(RTN)-1)_"Z"
"RTN","KMPDU2",246,0)
 ; if lowercase
"RTN","KMPDU2",247,0)
 Q:($A($E(RTN,$L(RTN)))<123) $E(RTN,1,$L(RTN)-1)_$C(($A($E(RTN,$L(RTN)))-1))_"z"
"RTN","KMPDU2",248,0)
 ; if greater than 122
"RTN","KMPDU2",249,0)
 Q:($A($E(RTN,$L(RTN)))>122) $E(RTN,1,$L(RTN)-1)_"y"
"RTN","KMPDU2",250,0)
 ; default
"RTN","KMPDU2",251,0)
 Q RTN
"RTN","KMPDU3")
0^31^B33101038^B21362306
"RTN","KMPDU3",1,0)
KMPDU3 ;OAK/RAK - CM Tools Utilities ;7/22/04  09:10
"RTN","KMPDU3",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDU3",3,0)
 ;
"RTN","KMPDU3",4,0)
ERRDATA(KMPDY,KMPDIEN,KMPDGBL) ;-- error log data.
"RTN","KMPDU3",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDU3",6,0)
 ; KMPDIEN. Ien in format 'multiple,ien'.
"RTN","KMPDU3",7,0)
 ; KMPDGBL... Global where data is stored.
"RTN","KMPDU3",8,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDU3",9,0)
 ;
"RTN","KMPDU3",10,0)
 K KMPDY
"RTN","KMPDU3",11,0)
 ;
"RTN","KMPDU3",12,0)
 I $G(KMPDIEN)="" S @KMPDGBL@(0)="[IEN not defined]" Q
"RTN","KMPDU3",13,0)
 ;
"RTN","KMPDU3",14,0)
 I KMPDGBL="" S @KMPDGBL@(0)="[Global for storage is not defined]" Q
"RTN","KMPDU3",15,0)
 ;
"RTN","KMPDU3",16,0)
 N DATA,DATA1,I,IEN,IEN1,LN
"RTN","KMPDU3",17,0)
 ;
"RTN","KMPDU3",18,0)
 ; kill global with check for ^tmp or ^utility.
"RTN","KMPDU3",19,0)
 D KILL^KMPDU(.DATA,KMPDGBL)
"RTN","KMPDU3",20,0)
 ; if error.
"RTN","KMPDU3",21,0)
 I $E(DATA)="[" S @KMPDGBL@(0)=DATA Q
"RTN","KMPDU3",22,0)
 ;
"RTN","KMPDU3",23,0)
 S IEN1=$P(KMPDIEN,",")
"RTN","KMPDU3",24,0)
 I 'IEN1 S @KMPDGBL@(0)="[IEN1 not defined]" Q
"RTN","KMPDU3",25,0)
 S IEN=$P(KMPDIEN,",",2)
"RTN","KMPDU3",26,0)
 I 'IEN S @KMPDGBL@(0)="[IEN not defined]" Q
"RTN","KMPDU3",27,0)
 ;
"RTN","KMPDU3",28,0)
 S DATA=$G(^%ZTER(1,IEN,0))
"RTN","KMPDU3",29,0)
 I DATA="" S @KMPDGBL@(0)="[No data for "_KMPDIEN_"]" Q
"RTN","KMPDU3",30,0)
 ;
"RTN","KMPDU3",31,0)
 ; $h date in external format.
"RTN","KMPDU3",32,0)
 S @KMPDGBL@(0)=$$HTE^XLFDT($G(^%ZTER(1,IEN,1,IEN1,"H")))
"RTN","KMPDU3",33,0)
 ; error text.
"RTN","KMPDU3",34,0)
 S @KMPDGBL@(1)=$G(^%ZTER(1,IEN,1,IEN1,"ZE"))
"RTN","KMPDU3",35,0)
 S @KMPDGBL@(2)="",LN=3
"RTN","KMPDU3",36,0)
 ; last global reference.
"RTN","KMPDU3",37,0)
 I $G(^%ZTER(1,IEN,1,IEN1,"GR"))'="" D 
"RTN","KMPDU3",38,0)
 .S @KMPDGBL@(LN)="Last Global Reference: "_^("GR"),LN=LN+1
"RTN","KMPDU3",39,0)
 ; $h.
"RTN","KMPDU3",40,0)
 I $G(^%ZTER(1,IEN,1,IEN1,"H"))'="" D 
"RTN","KMPDU3",41,0)
 .S @KMPDGBL@(LN)="$H: "_^("H"),LN=LN+1
"RTN","KMPDU3",42,0)
 S DATA=$G(^%ZTER(1,IEN,1,IEN1,"ECODE"))
"RTN","KMPDU3",43,0)
 ; $ecode
"RTN","KMPDU3",44,0)
 S @KMPDGBL@(LN)="$ECODE = "_$P(DATA,U),LN=LN+1
"RTN","KMPDU3",45,0)
 ; $stack
"RTN","KMPDU3",46,0)
 S @KMPDGBL@(LN)="$STACK = "_$P(DATA,U,2),LN=LN+1
"RTN","KMPDU3",47,0)
 ; $estack
"RTN","KMPDU3",48,0)
 S @KMPDGBL@(LN)="$ESTACK = "_$P(DATA,U,3),LN=LN+1
"RTN","KMPDU3",49,0)
 ; $quit
"RTN","KMPDU3",50,0)
 S @KMPDGBL@(LN)="$QUIT = "_$P(DATA,U,4),LN=LN+1
"RTN","KMPDU3",51,0)
 ; $stack multiple.
"RTN","KMPDU3",52,0)
 F I=0:0 S I=$O(^%ZTER(1,IEN,1,IEN1,"STACK",I)) Q:'I  D 
"RTN","KMPDU3",53,0)
 .Q:'$D(^%ZTER(1,IEN,1,IEN1,"STACK",I,0))  S DATA=^(0)
"RTN","KMPDU3",54,0)
 .S @KMPDGBL@(LN)=$P(DATA,U)_" = "_$P(DATA,U,2)
"RTN","KMPDU3",55,0)
 .S LN=LN+1
"RTN","KMPDU3",56,0)
 ; variables and data multiple #10.
"RTN","KMPDU3",57,0)
 F I=0:0 S I=$O(^%ZTER(1,IEN,1,IEN1,"ZV",I)) Q:'I  D 
"RTN","KMPDU3",58,0)
 .Q:'$D(^%ZTER(1,IEN,1,IEN1,"ZV",I,0))  S DATA=^(0),DATA1=$G(^("D"))
"RTN","KMPDU3",59,0)
 .Q:DATA=""
"RTN","KMPDU3",60,0)
 .S @KMPDGBL@(LN)=DATA_" = "_$E(DATA1,1,225)
"RTN","KMPDU3",61,0)
 .S LN=LN+1
"RTN","KMPDU3",62,0)
 ;
"RTN","KMPDU3",63,0)
 S KMPDY=$NA(@KMPDGBL)
"RTN","KMPDU3",64,0)
 S:'$D(@KMPDGBL) KMPDY="<No Data To Report>"
"RTN","KMPDU3",65,0)
 ;
"RTN","KMPDU3",66,0)
 Q
"RTN","KMPDU3",67,0)
 ;
"RTN","KMPDU3",68,0)
ERRDATE(KMPDY,KMPDATE) ;-- get error log date or list all dates
"RTN","KMPDU3",69,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDU3",70,0)
 ; KMPDATE... Date in internal fileman format, or "*" for a list of all
"RTN","KMPDU3",71,0)
 ;            available dates.
"RTN","KMPDU3",72,0)
 ;
"RTN","KMPDU3",73,0)
 ;          if one date
"RTN","KMPDU3",74,0)
 ; KMPDY(0)=ExternalDate^Ien^NumberOfErrors
"RTN","KMPDU3",75,0)
 ;
"RTN","KMPDU3",76,0)
 ;          or a list of all available dates
"RTN","KMPDU3",77,0)
 ; KMPDY(0)=ExternalDate^Ien^NumberOfErrors
"RTN","KMPDU3",78,0)
 ; KMPDY(1)=ExternalDate^Ien^NumberOfErrors
"RTN","KMPDU3",79,0)
 ; KMPDY(2)=ExternalDate^Ien^NumberOfErrors
"RTN","KMPDU3",80,0)
 ; KMPDY(...)=...
"RTN","KMPDU3",81,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDU3",82,0)
 ;
"RTN","KMPDU3",83,0)
 I $G(KMPDATE)="" S KMPDY(0)="[Date entry not defined]" Q
"RTN","KMPDU3",84,0)
 ;
"RTN","KMPDU3",85,0)
 I KMPDATE'="*" D  Q
"RTN","KMPDU3",86,0)
 .; external date
"RTN","KMPDU3",87,0)
 .S $P(KMPDY(0),U)=$$FMTE^XLFDT(KMPDATE)
"RTN","KMPDU3",88,0)
 .; set to date portion of $h format
"RTN","KMPDU3",89,0)
 .S KMPDATE=+$$FMTH^XLFDT(KMPDATE)
"RTN","KMPDU3",90,0)
 .; ien
"RTN","KMPDU3",91,0)
 .S $P(KMPDY(0),U,2)=$O(^%ZTER(1,"B",KMPDATE,0))
"RTN","KMPDU3",92,0)
 .; number of errors
"RTN","KMPDU3",93,0)
 .S $P(KMPDY(0),U,3)=$P($G(^%ZTER(1,+$P(KMPDY(0),U,2),1,0)),U,3)
"RTN","KMPDU3",94,0)
 ;
"RTN","KMPDU3",95,0)
 ; if all entries requested
"RTN","KMPDU3",96,0)
 I KMPDATE="*" D  Q
"RTN","KMPDU3",97,0)
 .N DATE,I,LN S (I,LN)=0
"RTN","KMPDU3",98,0)
 .F  S I=$O(^%ZTER(1,"B",I)) Q:'I  I $D(^%ZTER(1,I,0)) D 
"RTN","KMPDU3",99,0)
 ..; external date
"RTN","KMPDU3",100,0)
 ..S $P(KMPDY(LN),U)=$$HTE^XLFDT(I)
"RTN","KMPDU3",101,0)
 ..; ien
"RTN","KMPDU3",102,0)
 ..S $P(KMPDY(LN),U,2)=I
"RTN","KMPDU3",103,0)
 ..; number of errors
"RTN","KMPDU3",104,0)
 ..S $P(KMPDY(LN),U,3)=$P($G(^%ZTER(1,I,1,0)),U,3)
"RTN","KMPDU3",105,0)
 ..S LN=LN+1
"RTN","KMPDU3",106,0)
 ;
"RTN","KMPDU3",107,0)
 Q
"RTN","KMPDU3",108,0)
 ;
"RTN","KMPDU3",109,0)
ERRLIST(KMPDRES,KMPDTH,KMPDSCRN,KMPDGBL) ;
"RTN","KMPDU3",110,0)
 ;----------------------------------------------------------------------
"RTN","KMPDU3",111,0)
 ; KMPDT.... $H date.
"RTN","KMPDU3",112,0)
 ; KMPDSCRN. (optional) free text screen for certain error
"RTN","KMPDU3",113,0)
 ;----------------------------------------------------------------------
"RTN","KMPDU3",114,0)
 K KMPDRES
"RTN","KMPDU3",115,0)
 S KMPDTH=+$G(KMPDTH),KMPDSCRN=$G(KMPDSCRN),KMPDGBL=$G(KMPDGBL)
"RTN","KMPDU3",116,0)
 ;
"RTN","KMPDU3",117,0)
 N DATA,I,LN
"RTN","KMPDU3",118,0)
 ;
"RTN","KMPDU3",119,0)
 ; kill global with check for ^tmp or ^utility.
"RTN","KMPDU3",120,0)
 D KILL^KMPDU(.DATA,KMPDGBL)
"RTN","KMPDU3",121,0)
 ; if error.
"RTN","KMPDU3",122,0)
 I $E(DATA)="[" S @KMPDGBL@(0)=DATA Q
"RTN","KMPDU3",123,0)
 ;
"RTN","KMPDU3",124,0)
 I 'KMPDTH S @KMPDGBL@(0)="[The Error Date is not defined]" Q
"RTN","KMPDU3",125,0)
 I '$D(^%ZTER(1,KMPDTH,0)) S @KMPDGBL@(0)="[There is no data to report]" Q
"RTN","KMPDU3",126,0)
 I KMPDGBL="" S @KMPDGBL@(0)="[Global for storage is not defined]" Q
"RTN","KMPDU3",127,0)
 ;
"RTN","KMPDU3",128,0)
 S (I,LN)=0,KMPDRES(0)=KMPDGBL
"RTN","KMPDU3",129,0)
 F  S I=$O(^%ZTER(1,KMPDTH,1,I)) Q:'I  I $D(^(I,0)) D 
"RTN","KMPDU3",130,0)
 .I KMPDSCRN'="" X KMPDSCRN Q:'$T
"RTN","KMPDU3",131,0)
 .S @KMPDGBL@(LN)=I
"RTN","KMPDU3",132,0)
 .S $P(@KMPDGBL@(LN),U,2)=$P($G(^%ZTER(1,KMPDTH,1,I,"ZE")),U)
"RTN","KMPDU3",133,0)
 .S $P(@KMPDGBL@(LN),U,3)=$P($$HTE^XLFDT($P($G(^%ZTER(1,KMPDTH,1,I,"H")),U)),"@",2)
"RTN","KMPDU3",134,0)
 .S LN=LN+1
"RTN","KMPDU3",135,0)
 ;
"RTN","KMPDU3",136,0)
 S KMPDRES=$NA(@KMPDGBL)
"RTN","KMPDU3",137,0)
 I '$D(@KMPDGBL) S @KMPDGBL@(0)="[There are no Errors for this date]" Q
"RTN","KMPDU3",138,0)
 ;
"RTN","KMPDU3",139,0)
 Q
"RTN","KMPDU3",140,0)
 ;
"RTN","KMPDU3",141,0)
ROUSAVE(KMPDRES,KMPDRNM,KMPDRCD) ;-- routine save
"RTN","KMPDU3",142,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDU3",143,0)
 ; KMPDRNM... Routine name.
"RTN","KMPDU3",144,0)
 ; KMPDRCD... Array contianing routine code (or text).
"RTN","KMPDU3",145,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDU3",146,0)
 ;
"RTN","KMPDU3",147,0)
 K KMPDRES
"RTN","KMPDU3",148,0)
 I $G(KMPDRNM)="" S KMPDRES(0)="[Routine Name not defined]" Q
"RTN","KMPDU3",149,0)
 I $L(KMPDRNM)>8 D  Q
"RTN","KMPDU3",150,0)
 .S KMPDRES(0)="[Routine Name must not be greater than 8 characters]"
"RTN","KMPDU3",151,0)
 I '$D(KMPDRCD) D  Q
"RTN","KMPDU3",152,0)
 .S KMPDRES(0)="[There is no Routine code (text) to save]"
"RTN","KMPDU3",153,0)
 ;
"RTN","KMPDU3",154,0)
 N DIE,GLOBAL,I,X,XCN
"RTN","KMPDU3",155,0)
 S GLOBAL=$NA(^TMP("KMPDU3-1",$J))
"RTN","KMPDU3",156,0)
 K @GLOBAL
"RTN","KMPDU3",157,0)
 S I=0
"RTN","KMPDU3",158,0)
 F  S I=$O(KMPDRCD(I)) Q:'I  S @GLOBAL@(I,0)=KMPDRCD(I)
"RTN","KMPDU3",159,0)
 S X=KMPDRNM,DIE="^TMP("_"""KMPDU3-1"""_","_$J_",",XCN=0
"RTN","KMPDU3",160,0)
 X ^%ZOSF("SAVE")
"RTN","KMPDU3",161,0)
 ;
"RTN","KMPDU3",162,0)
 S KMPDRES(0)="<Routine Saved>"
"RTN","KMPDU3",163,0)
 ;
"RTN","KMPDU3",164,0)
 Q
"RTN","KMPDU3",165,0)
 ;
"RTN","KMPDU3",166,0)
ROUSTATS(KMPDRES,KMPDIENS) ;-- routine stats
"RTN","KMPDU3",167,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDU3",168,0)
 ; KMPDIENS... Ien(s) for file #8972.1 (CAPMAN ROUTINE STATS).  If more
"RTN","KMPDU3",169,0)
 ;             than one Ien then each will be seperated by a comma.
"RTN","KMPDU3",170,0)
 ;             Example: KMPDIENS="12,98,38,123"
"RTN","KMPDU3",171,0)
 ;
"RTN","KMPDU3",172,0)
 ; KMPDRES()   Results up-arrow (^) delimited in format:
"RTN","KMPDU3",173,0)
 ;             Piece 1  - Name..................(field .01)
"RTN","KMPDU3",174,0)
 ;             Piece 4  - CPU Time..............(field #.04)
"RTN","KMPDU3",175,0)
 ;             Piece 5  - DIO References........(field #.05)
"RTN","KMPDU3",176,0)
 ;             Piece 6  - BIO References........(field #.06)
"RTN","KMPDU3",177,0)
 ;             Piece 7  - Page Faults...........(field #.07)
"RTN","KMPDU3",178,0)
 ;             Piece 8  - M commands/Lines......(field #.08)
"RTN","KMPDU3",179,0)
 ;             Piece 9  - Global References.....(field #.09)
"RTN","KMPDU3",180,0)
 ;             Piece 10 - Count.................(field #.1)
"RTN","KMPDU3",181,0)
 ;             Piece 14 - Ave CPU Time..........(field #99.04 - computed)
"RTN","KMPDU3",182,0)
 ;             Piece 15 - Ave DIO References....(field #99.05 - computed)
"RTN","KMPDU3",183,0)
 ;             Piece 16 - Ave BIO References....(field #99.06 - computed)
"RTN","KMPDU3",184,0)
 ;             Piece 17 - Ave Page Faults.......(field #99.07 - computed)
"RTN","KMPDU3",185,0)
 ;             Piece 18 - Ave M Commands/Lines..(field #99.08 - computed)
"RTN","KMPDU3",186,0)
 ;             Piece 19 - Ave Global References.(field #99.09 - computed)
"RTN","KMPDU3",187,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDU3",188,0)
 ;
"RTN","KMPDU3",189,0)
 K KMPDRES
"RTN","KMPDU3",190,0)
 I $G(KMPDIENS)="" S KMPDRES(0)="[IEN data not defined]" Q
"RTN","KMPDU3",191,0)
 ;
"RTN","KMPDU3",192,0)
 N DATA,I,IEN,J,LN
"RTN","KMPDU3",193,0)
 ;
"RTN","KMPDU3",194,0)
 S IEN="",(I,LN)=0
"RTN","KMPDU3",195,0)
 F I=1:1 S IEN=$P(KMPDIENS,",",I) Q:'IEN  D 
"RTN","KMPDU3",196,0)
 .Q:'$D(^KMPD(8972.1,IEN,0))  S DATA=^(0)
"RTN","KMPDU3",197,0)
 .; put second piece (date/time entered) in external format
"RTN","KMPDU3",198,0)
 .S $P(DATA,U,2)=$$FMTE^XLFDT($P(DATA,U,2))
"RTN","KMPDU3",199,0)
 .; make sure there are no null values
"RTN","KMPDU3",200,0)
 .F J=4:1:10,12 S $P(DATA,U,J)=+($P(DATA,U,J))
"RTN","KMPDU3",201,0)
 .S KMPDRES(LN)=DATA
"RTN","KMPDU3",202,0)
 .; computed fields
"RTN","KMPDU3",203,0)
 .F J=4:1:9 S $P(KMPDRES(LN),U,(J+10))=+$$GET1^DIQ(8972.1,IEN,(99+(.01*J)))
"RTN","KMPDU3",204,0)
 .S LN=LN+1
"RTN","KMPDU3",205,0)
 ;
"RTN","KMPDU3",206,0)
 S:'$D(KMPDRES) KMPDRES(0)="<No Data to Report>"
"RTN","KMPDU3",207,0)
 ;
"RTN","KMPDU3",208,0)
 Q
"RTN","KMPDU4")
0^32^B3246525^B1414998
"RTN","KMPDU4",1,0)
KMPDU4 ;OAK/RAK - CM Tools Utilities ;2/17/04  09:54
"RTN","KMPDU4",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDU4",3,0)
 ;
"RTN","KMPDU4",4,0)
ASSCROU(KMPDRES,KMPDIEN,KMPDROU) ;-- add/remove Associate Routines to file 8972.1
"RTN","KMPDU4",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDU4",6,0)
 ; KMPDIEN... Ien for file #8972.1 (CM CODE EVALUATOR).
"RTN","KMPDU4",7,0)
 ; KMPDROU(). Array containing list of routines for this Ien.
"RTN","KMPDU4",8,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDU4",9,0)
 ;
"RTN","KMPDU4",10,0)
 K KMPDRES
"RTN","KMPDU4",11,0)
 I '$G(KMPDIEN) S KMPDRES(0)="[IEN not defined]" Q
"RTN","KMPDU4",12,0)
 I '$D(^KMPD(8972.1,+KMPDIEN,0)) D  Q
"RTN","KMPDU4",13,0)
 .S KMPDRES(0)="[IEN #"_KMPDIEN_" not defined for this file]"
"RTN","KMPDU4",14,0)
 ;
"RTN","KMPDU4",15,0)
 N DA,DIK,FDA,I,MESSAGE,ZIEN
"RTN","KMPDU4",16,0)
 ;
"RTN","KMPDU4",17,0)
 ; delete all entries in ASSOCIATED ROUTINE multiple (#11)
"RTN","KMPDU4",18,0)
 S DA=0,DA(1)=+KMPDIEN,DIK="^KMPD(8972.1,"_+KMPDIEN_",11,"
"RTN","KMPDU4",19,0)
 F  S DA=$O(^KMPD(8972.1,+KMPDIEN,11,DA)) Q:'DA  D ^DIK
"RTN","KMPDU4",20,0)
 ;
"RTN","KMPDU4",21,0)
 ; add routines to list
"RTN","KMPDU4",22,0)
 S I=""
"RTN","KMPDU4",23,0)
 F  S I=$O(KMPDROU(I)) Q:I=""  I KMPDROU(I)]"" D 
"RTN","KMPDU4",24,0)
 .K FDA
"RTN","KMPDU4",25,0)
 .S FDA($J,8972.111,"+2,"_KMPDIEN_",",.01)=KMPDROU(I)
"RTN","KMPDU4",26,0)
 .D UPDATE^DIE("","FDA($J)",.ZIEN,"MESSAGE")
"RTN","KMPDU4",27,0)
 ;
"RTN","KMPDU4",28,0)
 S KMPDRES(0)="<Update Complete>"
"RTN","KMPDU4",29,0)
 ;
"RTN","KMPDU4",30,0)
 Q
"RTN","KMPDU4",31,0)
 ;
"RTN","KMPDU4",32,0)
REPDEF(KMPDY,KMPDREP) ; - rpc - get report definition
"RTN","KMPDU4",33,0)
 ;---------------------------------------------------------------------------
"RTN","KMPDU4",34,0)
 ; KMPDREP - Report Name for file #8973.3 (CP REPORT)
"RTN","KMPDU4",35,0)
 ;           either field #.01 (NAME) or field #2.01 (DISPLAY NAME) can be
"RTN","KMPDU4",36,0)
 ;           used.
"RTN","KMPDU4",37,0)
 ;           
"RTN","KMPDU4",38,0)
 ; KMPDY   - return array containing free text report definition
"RTN","KMPDU4",39,0)
 ;---------------------------------------------------------------------------
"RTN","KMPDU4",40,0)
 K KMPDY
"RTN","KMPDU4",41,0)
 I $G(KMPDREP)="" S KMPDY(0)="[Missing Report Name]" Q
"RTN","KMPDU4",42,0)
 ;
"RTN","KMPDU4",43,0)
 N I,IEN,LN
"RTN","KMPDU4",44,0)
 S IEN=$O(^KMPD(8973.3,"B",KMPDREP,0))
"RTN","KMPDU4",45,0)
 S:'IEN IEN=$O(^KMPD(8973.3,"C",KMPDREP,0))
"RTN","KMPDU4",46,0)
 I 'IEN S KMPDY(0)="["_KMPDREP_" is not a valid report name]" Q
"RTN","KMPDU4",47,0)
 S I=0,LN=1
"RTN","KMPDU4",48,0)
 F  S I=$O(^KMPD(8973.3,IEN,10,I)) Q:'I  D 
"RTN","KMPDU4",49,0)
 .S KMPDY(LN)=$G(^KMPD(8973.3,IEN,10,I,0))
"RTN","KMPDU4",50,0)
 .S LN=LN+1
"RTN","KMPDU4",51,0)
 ;
"RTN","KMPDU4",52,0)
 I '$D(KMPDY) S KMPDY(0)="<No Definition for Report>"
"RTN","KMPDU4",53,0)
 ;
"RTN","KMPDU4",54,0)
 Q
"RTN","KMPDU5")
0^33^B24680982^B24376205
"RTN","KMPDU5",1,0)
KMPDU5 ;OAK/RAK - CM Tools Utilities ;8/25/04  08:56
"RTN","KMPDU5",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDU5",3,0)
 ;
"RTN","KMPDU5",4,0)
FILEINQ(KMPDY,KMPDFN,KMPDIEN,KMPDGBL) ;-- file inquiry.
"RTN","KMPDU5",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDU5",6,0)
 ; KMPDFN.... File number.
"RTN","KMPDU5",7,0)
 ; KMPDIEN... Ien for above file.
"RTN","KMPDU5",8,0)
 ; KMPDGBL... Global where data is stored.
"RTN","KMPDU5",9,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDU5",10,0)
 ;
"RTN","KMPDU5",11,0)
 K KMPDY
"RTN","KMPDU5",12,0)
 ;
"RTN","KMPDU5",13,0)
 I '$G(KMPDFN) S KMPDY="[File Number not defined]" Q
"RTN","KMPDU5",14,0)
 I '$D(^DD(KMPDFN)) S KMPDY="[File #"_KMPDFN_" is not defined]" Q
"RTN","KMPDU5",15,0)
 ;
"RTN","KMPDU5",16,0)
 I '$G(KMPDIEN) S KMPDY="[IEN not defined]" Q
"RTN","KMPDU5",17,0)
 ;
"RTN","KMPDU5",18,0)
 I KMPDGBL="" S KMPDY="[Global for storage is not defined]" Q
"RTN","KMPDU5",19,0)
 ;
"RTN","KMPDU5",20,0)
 N ARRAY,CNT,DATA,ERROR,FIELD,FILE,I,IEN,LN,TITLE
"RTN","KMPDU5",21,0)
 ;
"RTN","KMPDU5",22,0)
 ; kill global with check for ^tmp or ^utility.
"RTN","KMPDU5",23,0)
 D KILL^KMPDU(.DATA,KMPDGBL)
"RTN","KMPDU5",24,0)
 ; if error.
"RTN","KMPDU5",25,0)
 I $E(DATA)="[" S KMPDY=DATA Q
"RTN","KMPDU5",26,0)
 ;
"RTN","KMPDU5",27,0)
 S ARRAY=$NA(^TMP("KMPD FILE INQ",$J))
"RTN","KMPDU5",28,0)
 K @ARRAY
"RTN","KMPDU5",29,0)
 ;
"RTN","KMPDU5",30,0)
 S FIELD="**"
"RTN","KMPDU5",31,0)
 I KMPDFN=9.4 S FIELD="" D 
"RTN","KMPDU5",32,0)
 .F I=0:0 S I=$O(^DD(KMPDFN,I)) Q:'I  D 
"RTN","KMPDU5",33,0)
 ..I $P($G(^DD(KMPDFN,I,0)),U,2)'["C"&($P($G(^(0)),U,2)'["M")&($E($G(^(0)))'="*")&($P($G(^(0)),U,3)'="") S FIELD=FIELD_I_";"
"RTN","KMPDU5",34,0)
 .S FIELD=FIELD_"3;" ;4;5;"
"RTN","KMPDU5",35,0)
 ;
"RTN","KMPDU5",36,0)
 D GETS^DIQ(KMPDFN,KMPDIEN,FIELD,"R",ARRAY,"ERROR")
"RTN","KMPDU5",37,0)
 ;
"RTN","KMPDU5",38,0)
 I $D(ERROR) S KMPDY="[Error occurred while getting info.]" Q
"RTN","KMPDU5",39,0)
 ;
"RTN","KMPDU5",40,0)
 I '$D(@ARRAY) S KMPDY="<No Data to Report>" Q
"RTN","KMPDU5",41,0)
 ;
"RTN","KMPDU5",42,0)
 S FILE="",LN=0
"RTN","KMPDU5",43,0)
 F  S FILE=$O(@ARRAY@(FILE)) Q:FILE=""  D 
"RTN","KMPDU5",44,0)
 .S IEN=""
"RTN","KMPDU5",45,0)
 .F  S IEN=$O(@ARRAY@(FILE,IEN)) Q:IEN=""  D 
"RTN","KMPDU5",46,0)
 ..S FIELD=""
"RTN","KMPDU5",47,0)
 ..F  S FIELD=$O(@ARRAY@(FILE,IEN,FIELD)) Q:FIELD=""  D 
"RTN","KMPDU5",48,0)
 ...; if not a multiple.
"RTN","KMPDU5",49,0)
 ...I '$O(@ARRAY@(FILE,IEN,FIELD,0)) D  Q
"RTN","KMPDU5",50,0)
 ....S @KMPDGBL@(LN)=FIELD,@KMPDGBL@(LN)=@KMPDGBL@(LN)_$$REPEAT^XLFSTR(".",30-$L(@KMPDGBL@(LN)))
"RTN","KMPDU5",51,0)
 ....S @KMPDGBL@(LN)=@KMPDGBL@(LN)_": "_@ARRAY@(FILE,IEN,FIELD)
"RTN","KMPDU5",52,0)
 ....S LN=LN+1
"RTN","KMPDU5",53,0)
 ...;
"RTN","KMPDU5",54,0)
 ...; if multiple
"RTN","KMPDU5",55,0)
 ...S @KMPDGBL@(LN)=FIELD
"RTN","KMPDU5",56,0)
 ...S @KMPDGBL@(LN)=@KMPDGBL@(LN)_$$REPEAT^XLFSTR(".",30-$L(@KMPDGBL@(LN)))
"RTN","KMPDU5",57,0)
 ...S @KMPDGBL@(LN)=@KMPDGBL@(LN)_": "
"RTN","KMPDU5",58,0)
 ...;S LN=LN+1
"RTN","KMPDU5",59,0)
 ...S CNT=1
"RTN","KMPDU5",60,0)
 ...F I=0:0 S I=$O(@ARRAY@(FILE,IEN,FIELD,I)) Q:'I  D 
"RTN","KMPDU5",61,0)
 ....;S @KMPDGBL@(LN)=FIELD,@KMPDGBL@(LN)=@KMPDGBL@(LN)_$$REPEAT^XLFSTR(" ",30-$L(@KMPDGBL@(LN)))
"RTN","KMPDU5",62,0)
 ....I CNT=1 S @KMPDGBL@(LN)=$G(@KMPDGBL@(LN))_@ARRAY@(FILE,IEN,FIELD,I)
"RTN","KMPDU5",63,0)
 ....E  D 
"RTN","KMPDU5",64,0)
 .....S @KMPDGBL@(LN)=$G(@KMPDGBL@(LN))_$$REPEAT^XLFSTR(" ",30-$L($G(@KMPDGBL@(LN))))
"RTN","KMPDU5",65,0)
 .....S @KMPDGBL@(LN)=@KMPDGBL@(LN)_"  "_@ARRAY@(FILE,IEN,FIELD,I)
"RTN","KMPDU5",66,0)
 ....S LN=LN+1,CNT=CNT+1
"RTN","KMPDU5",67,0)
 ;
"RTN","KMPDU5",68,0)
 S KMPDY=$NA(@KMPDGBL)
"RTN","KMPDU5",69,0)
 S:'$D(@KMPDGBL) KMPDY="<No Data To Report>"
"RTN","KMPDU5",70,0)
 ;
"RTN","KMPDU5",71,0)
 Q
"RTN","KMPDU5",72,0)
 ;
"RTN","KMPDU5",73,0)
FILESRC(KMPDY,KMPDFN,KMPDFLD,KMPDSRC,KMPDGBL) ;-- file search.
"RTN","KMPDU5",74,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDU5",75,0)
 ; KMPDFN... File Number.
"RTN","KMPDU5",76,0)
 ; KMPDFLD.. Fields to be returned, seperated by commas.
"RTN","KMPDU5",77,0)
 ;           Example: ".01,.04,1" would return fields .01, .04 and 1.
"RTN","KMPDU5",78,0)
 ; KMPDSRC.. (optional). Search text.  This will search the .01 field for
"RTN","KMPDU5",79,0)
 ;           a match.  If KMPDSRC="*" or is null then all entries will be
"RTN","KMPDU5",80,0)
 ;           returned.
"RTN","KMPDU5",81,0)
 ; KMPDGBL... Global where data is stored.
"RTN","KMPDU5",82,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDU5",83,0)
 ;
"RTN","KMPDU5",84,0)
 K KMPDY
"RTN","KMPDU5",85,0)
 ;
"RTN","KMPDU5",86,0)
 S KMPDFN=+$G(KMPDFN),KMPDFLD=$G(KMPDFLD)
"RTN","KMPDU5",87,0)
 S KMPDSRC=$$UP^XLFSTR($G(KMPDSRC)),KMPDGBL=$G(KMPDGBL)
"RTN","KMPDU5",88,0)
 ;
"RTN","KMPDU5",89,0)
 I 'KMPDFN S KMPDY="[File Number not defined]" Q
"RTN","KMPDU5",90,0)
 ;
"RTN","KMPDU5",91,0)
 I KMPDFLD="" S KMPDY="[No fields have been requested]" Q
"RTN","KMPDU5",92,0)
 ;
"RTN","KMPDU5",93,0)
 I KMPDGBL="" S KMPDY="[Global for storage is not defined]" Q
"RTN","KMPDU5",94,0)
 ;
"RTN","KMPDU5",95,0)
 N DATA,GLOBAL,I,IEN,LN,NAME,NODE,PIECE
"RTN","KMPDU5",96,0)
 ;
"RTN","KMPDU5",97,0)
 ; kill global with check for ^tmp or ^utility.
"RTN","KMPDU5",98,0)
 D KILL^KMPDU(.DATA,KMPDGBL)
"RTN","KMPDU5",99,0)
 ; if error.
"RTN","KMPDU5",100,0)
 I $E(DATA)="[" S KMPDY=DATA Q
"RTN","KMPDU5",101,0)
 ;
"RTN","KMPDU5",102,0)
 S GLOBAL=$G(^DIC(KMPDFN,0,"GL"))
"RTN","KMPDU5",103,0)
 I GLOBAL="" S KMPDY="[File #"_KMPDFN_" is not defined]" Q
"RTN","KMPDU5",104,0)
 ; make sure global name is closed () for use with subscript indirection.
"RTN","KMPDU5",105,0)
 S:$E(GLOBAL,$L(GLOBAL))="," $E(GLOBAL,$L(GLOBAL))=")"
"RTN","KMPDU5",106,0)
 ;
"RTN","KMPDU5",107,0)
 ; set zero node to field titles.
"RTN","KMPDU5",108,0)
 S $P(@KMPDGBL@(0),U)="IEN"
"RTN","KMPDU5",109,0)
 F I=1:1 S DATA=$P(KMPDFLD,",",I) Q:DATA=""  D 
"RTN","KMPDU5",110,0)
 .; try title first.
"RTN","KMPDU5",111,0)
 .S TITLE=$G(^DD(KMPDFN,DATA,.1))
"RTN","KMPDU5",112,0)
 .; if no title use name.
"RTN","KMPDU5",113,0)
 .S:TITLE="" TITLE=$P($G(^DD(KMPDFN,DATA,0)),U)
"RTN","KMPDU5",114,0)
 .S $P(@KMPDGBL@(0),U,(I+1))=TITLE
"RTN","KMPDU5",115,0)
 ;
"RTN","KMPDU5",116,0)
 S:KMPDSRC="*" KMPDSRC=""
"RTN","KMPDU5",117,0)
 ; remove '*' if last character
"RTN","KMPDU5",118,0)
 S:$E($RE(KMPDSRC))="*" $E(KMPDSRC,$L(KMPDSRC))=""
"RTN","KMPDU5",119,0)
 S LN=1,NAME=KMPDSRC
"RTN","KMPDU5",120,0)
 ; if exact match.
"RTN","KMPDU5",121,0)
 I NAME]"" S IEN=$O(@GLOBAL@("B",NAME,0)) I IEN D 
"RTN","KMPDU5",122,0)
 .Q:'$D(@GLOBAL@(IEN,0))  S DATA=^(0)
"RTN","KMPDU5",123,0)
 .; ien.
"RTN","KMPDU5",124,0)
 .S $P(@KMPDGBL@(LN),U)=IEN
"RTN","KMPDU5",125,0)
 .; user defined data.
"RTN","KMPDU5",126,0)
 .F I=1:1 S DATA=$P(KMPDFLD,",",I) Q:DATA=""  D 
"RTN","KMPDU5",127,0)
 ..S $P(@KMPDGBL@(LN),U,(I+1))=$$GET1^DIQ(KMPDFN,IEN,DATA)
"RTN","KMPDU5",128,0)
 .S LN=LN+1
"RTN","KMPDU5",129,0)
 ;
"RTN","KMPDU5",130,0)
 F  S NAME=$O(@GLOBAL@("B",NAME)) Q:NAME=""!($E(NAME,1,$L(KMPDSRC))'=KMPDSRC)  D 
"RTN","KMPDU5",131,0)
 .F IEN=0:0 S IEN=$O(@GLOBAL@("B",NAME,IEN)) Q:'IEN  D 
"RTN","KMPDU5",132,0)
 ..Q:'$D(@GLOBAL@(IEN,0))  S DATA=^(0)
"RTN","KMPDU5",133,0)
 ..; ien.
"RTN","KMPDU5",134,0)
 ..S $P(@KMPDGBL@(LN),U)=IEN
"RTN","KMPDU5",135,0)
 ..; user defined data.
"RTN","KMPDU5",136,0)
 ..F I=1:1 S DATA=$P(KMPDFLD,",",I) Q:DATA=""  D 
"RTN","KMPDU5",137,0)
 ...S $P(@KMPDGBL@(LN),U,(I+1))=$$GET1^DIQ(KMPDFN,IEN,DATA)
"RTN","KMPDU5",138,0)
 ..S LN=LN+1
"RTN","KMPDU5",139,0)
 ;
"RTN","KMPDU5",140,0)
 S KMPDY=$NA(@KMPDGBL)
"RTN","KMPDU5",141,0)
 S:'$O(@KMPDGBL@(0)) @KMPDGBL@(1)="<No Data To Report>"
"RTN","KMPDU5",142,0)
 ;
"RTN","KMPDU5",143,0)
 Q
"RTN","KMPDU5",144,0)
 ;
"RTN","KMPDU5",145,0)
ENV(KMPDRES) ;-- get uci/volume set
"RTN","KMPDU5",146,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDU5",147,0)
 ; KMPDRES(0)="uci,volumeset"
"RTN","KMPDU5",148,0)
 ; KMPDRES(1)="facilityinfo" as returned by $$SITE^VASITE
"RTN","KMPDU5",149,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDU5",150,0)
 ;
"RTN","KMPDU5",151,0)
 K KMPDRES
"RTN","KMPDU5",152,0)
 N Y X ^%ZOSF("UCI")
"RTN","KMPDU5",153,0)
 S KMPDRES(0)=Y
"RTN","KMPDU5",154,0)
 S KMPDRES(1)=$$SITE^VASITE
"RTN","KMPDU5",155,0)
 ;
"RTN","KMPDU5",156,0)
 Q
"RTN","KMPDU5",157,0)
 ;
"RTN","KMPDU5",158,0)
VERSION(KMPDY) ;-- version^patch info
"RTN","KMPDU5",159,0)
 ; cm tools version^patch
"RTN","KMPDU5",160,0)
 S KMPDY(0)=$P($G(^KMPD(8973,1,0)),U,2)
"RTN","KMPDU5",161,0)
 ; operating system version
"RTN","KMPDU5",162,0)
 S KMPDY(1)=$P($G(^%ZOSF("OS")),U)  ;$ZV
"RTN","KMPDU5",163,0)
 ;
"RTN","KMPDU5",164,0)
 Q
"RTN","KMPDU6")
0^34^B47907009^n/a
"RTN","KMPDU6",1,0)
KMPDU6 ;OAK/RAK - CM Tools Utilities ;10/12/12  15:15
"RTN","KMPDU6",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDU6",3,0)
 ;
"RTN","KMPDU6",4,0)
RUMENV(KMPDRES) ;-rpc run environment
"RTN","KMPDU6",5,0)
 ;--------------------------------------------------------
"RTN","KMPDU6",6,0)
 ; KMPDRES... result return data in format:
"RTN","KMPDU6",7,0)
 ;              KMPDRES(0)=ErrorNumber^ErrorText
"RTN","KMPDU6",8,0)
 ;              (see ENV^KMPRUTL1 for specifics)
"RTN","KMPDU6",9,0)
 ;--------------------------------------------------------
"RTN","KMPDU6",10,0)
 K KMPDRES
"RTN","KMPDU6",11,0)
 N ERROR
"RTN","KMPDU6",12,0)
 D ENVCHECK^KMPRUTL1(.ERROR,1)
"RTN","KMPDU6",13,0)
 S KMPDRES(0)=ERROR
"RTN","KMPDU6",14,0)
 ;
"RTN","KMPDU6",15,0)
 Q
"RTN","KMPDU6",16,0)
 ;
"RTN","KMPDU6",17,0)
RUMSS(KMPDRES,KMPDSS) ;-rpc rum start/stop
"RTN","KMPDU6",18,0)
 ;--------------------------------------------------------
"RTN","KMPDU6",19,0)
 ; KMPDRES... result return data
"RTN","KMPDU6",20,0)
 ; KMPDSS.... 0 - stop
"RTN","KMPDU6",21,0)
 ;            1 - start
"RTN","KMPDU6",22,0)
 ;--------------------------------------------------------
"RTN","KMPDU6",23,0)
 K KMPDRES
"RTN","KMPDU6",24,0)
 S KMPDSS=+$G(KMPDSS)
"RTN","KMPDU6",25,0)
 N DA,DIE,ERR,ERROR,DR,FDA,I,LINE,X,Y
"RTN","KMPDU6",26,0)
 ; if start
"RTN","KMPDU6",27,0)
 I KMPDSS=1 D 
"RTN","KMPDU6",28,0)
 .S FDA($J,8989.3,"1,",300)="Y"
"RTN","KMPDU6",29,0)
 .D FILE^DIE("","FDA($J)","ERROR")
"RTN","KMPDU6",30,0)
 .; if error process and quit
"RTN","KMPDU6",31,0)
 .I $D(ERROR) D  Q
"RTN","KMPDU6",32,0)
 ..; put error message into local array
"RTN","KMPDU6",33,0)
 ..D MSG^DIALOG("AEHW",.ERR,60,10,"ERROR")
"RTN","KMPDU6",34,0)
 ..; put error message into kmpdres array
"RTN","KMPDU6",35,0)
 ..S (LINE,I)=0
"RTN","KMPDU6",36,0)
 ..F  S I=$O(ERR(I)) Q:'I  D 
"RTN","KMPDU6",37,0)
 ...I LINE=0 S KMPDRES(LINE)="["_ERR(I) S LINE=LINE+1 Q
"RTN","KMPDU6",38,0)
 ...S KMPDRES(LINE)=ERR(I),LINE=LINE+1
"RTN","KMPDU6",39,0)
 ..; put close bracket at end of text
"RTN","KMPDU6",40,0)
 ..S KMPDRES(LINE-1)=KMPDRES(LINE-1)_"]"
"RTN","KMPDU6",41,0)
 .;
"RTN","KMPDU6",42,0)
 .S KMPDRES(0)="Resource Usage Monitor (RUM) has been started."
"RTN","KMPDU6",43,0)
 ;
"RTN","KMPDU6",44,0)
 ; if stop
"RTN","KMPDU6",45,0)
 I 'KMPDSS D 
"RTN","KMPDU6",46,0)
 .S FDA($J,8989.3,"1,",300)="N"
"RTN","KMPDU6",47,0)
 .D FILE^DIE("","FDA($J)","ERROR")
"RTN","KMPDU6",48,0)
 .; if error process and quit
"RTN","KMPDU6",49,0)
 .I $D(ERROR) D  Q
"RTN","KMPDU6",50,0)
 ..; put error message into local array
"RTN","KMPDU6",51,0)
 ..D MSG^DIALOG("AEHW",.ERR,60,10,"ERROR")
"RTN","KMPDU6",52,0)
 ..; put error message into kmpdres array
"RTN","KMPDU6",53,0)
 ..S (LINE,I)=0
"RTN","KMPDU6",54,0)
 ..F  S I=$O(ERR(I)) Q:'I  D 
"RTN","KMPDU6",55,0)
 ...I LINE=0 S KMPDRES(LINE)="["_ERR(I) S LINE=LINE+1 Q
"RTN","KMPDU6",56,0)
 ...S KMPDRES(LINE)=ERR(I),LINE=LINE+1
"RTN","KMPDU6",57,0)
 ..; put close bracket at end of text
"RTN","KMPDU6",58,0)
 ..S KMPDRES(LINE-1)=KMPDRES(LINE-1)_"]"
"RTN","KMPDU6",59,0)
 .;
"RTN","KMPDU6",60,0)
 .S KMPDRES(0)="Resource Usage Monitor (RUM) has been stopped."
"RTN","KMPDU6",61,0)
 ;
"RTN","KMPDU6",62,0)
 I '$D(KMPDRES(0)) S KMPDRES(0)="[Unable to "_$S(KMPDSS:"start",1:"stop")_" RUM]"
"RTN","KMPDU6",63,0)
 ;
"RTN","KMPDU6",64,0)
 Q
"RTN","KMPDU6",65,0)
 ;
"RTN","KMPDU6",66,0)
STATUS(KMPDRES,KMPDAPP,KMPDGBL) ;-rpc cp package status
"RTN","KMPDU6",67,0)
 ;--------------------------------------------------------
"RTN","KMPDU6",68,0)
 ; KMPDRES... result return data
"RTN","KMPDU6",69,0)
 ; KMPDAPP... cm application
"RTN","KMPDU6",70,0)
 ;            H - hl7
"RTN","KMPDU6",71,0)
 ;            R - rum
"RTN","KMPDU6",72,0)
 ;            S - sagg
"RTN","KMPDU6",73,0)
 ;            T - timing
"RTN","KMPDU6",74,0)
 ; KMPDGLO... global reference containing data
"RTN","KMPDU6",75,0)
 ;--------------------------------------------------------
"RTN","KMPDU6",76,0)
 ;
"RTN","KMPDU6",77,0)
 ;
"RTN","KMPDU6",78,0)
 K KMPDRES
"RTN","KMPDU6",79,0)
 I $G(KMPDAPP)="" S @KMPDGBL@(0)="[Type of Application not defined]" Q
"RTN","KMPDU6",80,0)
 I $L(KMPDAPP)>1 S @KMPDGBL@(0)="[Incorrect Application identifier format]" Q
"RTN","KMPDU6",81,0)
 I "HRST"'[KMPDAPP S @KMPDGBL@(0)="[Incorrect Application identifier]" Q
"RTN","KMPDU6",82,0)
 ;I KMPDGBL="" S @KMPDGBL@(0)="[Global for storage is not defined]" Q
"RTN","KMPDU6",83,0)
 I $G(KMPDGBL)="" S @KMPDGBL@(0)="[Global for storage is not defined]" Q
"RTN","KMPDU6",84,0)
 ;
"RTN","KMPDU6",85,0)
 N DATA,I,KMPDNMSP,ROUTINE,VALMAR,X,Z
"RTN","KMPDU6",86,0)
 ;
"RTN","KMPDU6",87,0)
 ; kill global with check for ^tmp or ^utility.
"RTN","KMPDU6",88,0)
 D KILL^KMPDU(.DATA,KMPDGBL)
"RTN","KMPDU6",89,0)
 ; if error.
"RTN","KMPDU6",90,0)
 I $E(DATA)="[" S @KMPDGBL@(0)=DATA Q
"RTN","KMPDU6",91,0)
 ;
"RTN","KMPDU6",92,0)
 S KMPDNMSP=KMPDAPP
"RTN","KMPDU6",93,0)
 S ROUTINE="KMPDSS"_$S(KMPDAPP="H"!(KMPDAPP="T"):"D",1:KMPDAPP)
"RTN","KMPDU6",94,0)
 S X=ROUTINE X ^%ZOSF("TEST") I '$T D  Q
"RTN","KMPDU6",95,0)
 .S @KMPDGBL@(0)="[Routine "_X_" could not be found]"
"RTN","KMPDU6",96,0)
 ;
"RTN","KMPDU6",97,0)
 S ROUTINE="FORMAT^"_X_"(.Z)"
"RTN","KMPDU6",98,0)
 S VALMAR=$NA(^TMP("KMPDU6",$J))
"RTN","KMPDU6",99,0)
 ;
"RTN","KMPDU6",100,0)
 D @ROUTINE
"RTN","KMPDU6",101,0)
 ;
"RTN","KMPDU6",102,0)
 I '$D(@VALMAR) S KMPDRES(0)="[No data to report]" K @VALMAR Q
"RTN","KMPDU6",103,0)
 ;
"RTN","KMPDU6",104,0)
 ; zero node is application status: started/stopped
"RTN","KMPDU6",105,0)
 I KMPDAPP="H" S @KMPDGBL@(0)="0"
"RTN","KMPDU6",106,0)
 I KMPDAPP="R" S @KMPDGBL@(0)=$G(^%ZTSCH("LOGRSRC"))
"RTN","KMPDU6",107,0)
 I KMPDAPP="S" S @KMPDGBL@(0)=$S($D(^XTMP("KMPS","START")):1,1:0)
"RTN","KMPDU6",108,0)
 I KMPDAPP="T" S @KMPDGBL@(0)=$G(^KMPTMP("KMPD-CPRS"))
"RTN","KMPDU6",109,0)
 F I=0:0 S I=$O(@VALMAR@(I)) Q:'I  S @KMPDGBL@(I)=@VALMAR@(I,0)
"RTN","KMPDU6",110,0)
 ;
"RTN","KMPDU6",111,0)
 K @VALMAR
"RTN","KMPDU6",112,0)
 ;
"RTN","KMPDU6",113,0)
 S KMPDRES=$NA(@KMPDGBL)
"RTN","KMPDU6",114,0)
 S:'$D(@KMPDGBL) KMPDRES="<No Data To Report>"
"RTN","KMPDU6",115,0)
 ;
"RTN","KMPDU6",116,0)
 Q
"RTN","KMPDU6",117,0)
 ;
"RTN","KMPDU6",118,0)
USRPARAM(KMPDY,KMPDUZ,KMPDTY,KMPDOP) ;-- rpc - user parameters
"RTN","KMPDU6",119,0)
 ;-------------------------------------------------------------------
"RTN","KMPDU6",120,0)
 ; KMPDY... return results
"RTN","KMPDU6",121,0)
 ; KMPDUZ.. user duz
"RTN","KMPDU6",122,0)
 ; KMPDTY.. type: 1 - get user parameter info
"RTN","KMPDU6",123,0)
 ;                2 - set user parameter info
"RTN","KMPDU6",124,0)
 ; KMPDOP.. option array in format:
"RTN","KMPDU6",125,0)
 ;           Piece 1: option name
"RTN","KMPDU6",126,0)
 ;           Piece 2: 1 - do not display option
"RTN","KMPDU6",127,0)
 ;                    2 - display option
"RTN","KMPDU6",128,0)
 ;           example: KMPDOP(1)="ErrorLog1^1"
"RTN","KMPDU6",129,0)
 ;-------------------------------------------------------------------
"RTN","KMPDU6",130,0)
 ;
"RTN","KMPDU6",131,0)
 K KMPDY
"RTN","KMPDU6",132,0)
 ;
"RTN","KMPDU6",133,0)
 I '$G(KMPDUZ) S KMPDY(0)="[User 'DUZ' not defined]" Q
"RTN","KMPDU6",134,0)
 S KMPDTY=+$G(KMPDTY)
"RTN","KMPDU6",135,0)
 I KMPDTY<1!(KMPDTY>2) S KMPDY(0)="[Type parameter out of bounds]" Q
"RTN","KMPDU6",136,0)
 ;
"RTN","KMPDU6",137,0)
 ; get parameter data
"RTN","KMPDU6",138,0)
 I KMPDTY=1 D 
"RTN","KMPDU6",139,0)
 .S KMPDY(0)="ErrorLog1^"_$$GET^XPAR("USR.`"_KMPDUZ,"KMPD GUI OPTION ERROR LIST",,"Q")
"RTN","KMPDU6",140,0)
 .S KMPDY(1)="GlobalList1^"_$$GET^XPAR("USR.`"_KMPDUZ,"KMPD GUI OPTION GLOBAL LIST",,"Q")
"RTN","KMPDU6",141,0)
 .S KMPDY(2)="RoutineSearch1^"_$$GET^XPAR("USR.`"_KMPDUZ,"KMPD GUI OPTION ROUTINE SEARCH",,"Q")
"RTN","KMPDU6",142,0)
 .S KMPDY(3)="Lookups1^"_$$GET^XPAR("USR.`"_KMPDUZ,"KMPD GUI OPTION LOOKUPS",,"Q")
"RTN","KMPDU6",143,0)
 .S KMPDY(4)="CodeStats1^"_$$GET^XPAR("USR.`"_KMPDUZ,"KMPD GUI OPTION CODE STATS",,"Q")
"RTN","KMPDU6",144,0)
 .S KMPDY(5)="CodeEvaluator2^"_$$GET^XPAR("USR.`"_KMPDUZ,"KMPD GUI OPTION CODE EVALUATOR",,"Q")
"RTN","KMPDU6",145,0)
 .S KMPDY(6)="TimingMonitor1^"_$$GET^XPAR("USR.`"_KMPDUZ,"KMPD GUI OPTION TIMING MONITOR",,"E")
"RTN","KMPDU6",146,0)
 .S KMPDY(7)="EnvironmentCheck1^"_$$GET^XPAR("USR.`"_KMPDUZ,"KMPD GUI OPTION ENVIRON CHECK",,"Q")
"RTN","KMPDU6",147,0)
 .S KMPDY(8)="CMToolsParameters1^"_$$GET^XPAR("USR.`"_KMPDUZ,"KMPD GUI OPTION TOOLS PARAMS",,"Q")
"RTN","KMPDU6",148,0)
 .S KMPDY(9)="EnvironmentSelect^"_$$GET^XPAR("USR.`"_KMPDUZ,"KMPD GUI OPTION ENVIRON SELECT",,"Q")
"RTN","KMPDU6",149,0)
 .S KMPDY(10)="TimingReports1^"_$$GET^XPAR("USR.`"_KMPDUZ,"KMPD GUI OPTION RPT",,"Q")
"RTN","KMPDU6",150,0)
 ;
"RTN","KMPDU6",151,0)
 ; set parameter data
"RTN","KMPDU6",152,0)
 I KMPDTY=2 D 
"RTN","KMPDU6",153,0)
 .Q:'$D(KMPDOP)
"RTN","KMPDU6",154,0)
 .N I,OPT S I="",KMPDY(0)="complete"
"RTN","KMPDU6",155,0)
 .F  S I=$O(KMPDOP(I)) Q:I=""  S OPT=KMPDOP(I) I OPT]"" D 
"RTN","KMPDU6",156,0)
 ..I $P(OPT,U)="ErrorLog1" D EN^XPAR("USR.`"_KMPDUZ,"KMPD GUI OPTION ERROR LIST",1,$P(OPT,U,2))
"RTN","KMPDU6",157,0)
 ..I $P(OPT,U)="GlobalList1" D EN^XPAR("USR.`"_KMPDUZ,"KMPD GUI OPTION GLOBAL LIST",1,$P(OPT,U,2))
"RTN","KMPDU6",158,0)
 ..I $P(OPT,U)="RoutineSearch1" D EN^XPAR("USR.`"_KMPDUZ,"KMPD GUI OPTION ROUTINE SEARCH",1,$P(OPT,U,2))
"RTN","KMPDU6",159,0)
 ..I $P(OPT,U)="Lookups1" D EN^XPAR("USR.`"_KMPDUZ,"KMPD GUI OPTION LOOKUPS",1,$P(OPT,U,2))
"RTN","KMPDU6",160,0)
 ..I $P(OPT,U)="CodeStats1" D EN^XPAR("USR.`"_KMPDUZ,"KMPD GUI OPTION CODE STATS",1,$P(OPT,U,2))
"RTN","KMPDU6",161,0)
 ..I $P(OPT,U)="CodeEvaluator2" D EN^XPAR("USR.`"_KMPDUZ,"KMPD GUI OPTION CODE EVALUATOR",1,$P(OPT,U,2))
"RTN","KMPDU6",162,0)
 ..I $P(OPT,U)="TimingMonitor1" D EN^XPAR("USR.`"_KMPDUZ,"KMPD GUI OPTION TIMING MONITOR",1,$P(OPT,U,2))
"RTN","KMPDU6",163,0)
 ..I $P(OPT,U)="EnvironmentCheck1" D EN^XPAR("USR.`"_KMPDUZ,"KMPD GUI OPTION ENVIRON CHECK",1,$P(OPT,U,2))
"RTN","KMPDU6",164,0)
 ..I $P(OPT,U)="CMToolsParameters1" D EN^XPAR("USR.`"_KMPDUZ,"KMPD GUI OPTION TOOLS PARAMS",1,$P(OPT,U,2))
"RTN","KMPDU6",165,0)
 ..I $P(OPT,U)="EnvironmentSelect" D EN^XPAR("USR.`"_KMPDUZ,"KMPD GUI OPTION ENVIRON SELECT",1,$P(OPT,U,2))
"RTN","KMPDU6",166,0)
 ..I $P(OPT,U)="TimingReports1" D EN^XPAR("USR.`"_KMPDUZ,"KMPD GUI OPTION RPT",1,$P(OPT,U,2))
"RTN","KMPDU6",167,0)
 ;
"RTN","KMPDU6",168,0)
 Q
"RTN","KMPDU7")
0^35^B19662686^n/a
"RTN","KMPDU7",1,0)
KMPDU7 ;OAK/RAK - CM Tools Routine Utilities ;7/22/04  09:06
"RTN","KMPDU7",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDU7",3,0)
 ;
"RTN","KMPDU7",4,0)
 ;
"RTN","KMPDU7",5,0)
SBLIST(KMPDY,KMPDLIST,KMPDSS,KMPDGBL) ;-- rpc search by list
"RTN","KMPDU7",6,0)
 ;-------------------------------------------------------------------
"RTN","KMPDU7",7,0)
 ; KMPDY()... return array (see LISTSEL^KMPDTU10 for details)
"RTN","KMPDU7",8,0)
 ; KMPDLIST.. search by list
"RTN","KMPDU7",9,0)
 ;             2 - client name
"RTN","KMPDU7",10,0)
 ;             3 - ip address
"RTN","KMPDU7",11,0)
 ; KMPDSS.... free text - timing monitor subscript
"RTN","KMPDU7",12,0)
 ; KMPDGBL... global name to store results
"RTN","KMPDU7",13,0)
 ;-------------------------------------------------------------------
"RTN","KMPDU7",14,0)
 ;
"RTN","KMPDU7",15,0)
 K KMPDY
"RTN","KMPDU7",16,0)
 S KMPDLIST=+$G(KMPDLIST),KMPDSS=$G(KMPDSS)
"RTN","KMPDU7",17,0)
 I (KMPDLIST<2)!(KMPDLIST>3) S KMPDY(0)="[Search By entry is invalid]" Q
"RTN","KMPDU7",18,0)
 I KMPDSS="" S KMPDY(0)="[Subscript is null]" Q
"RTN","KMPDU7",19,0)
 ;
"RTN","KMPDU7",20,0)
 N I
"RTN","KMPDU7",21,0)
 ;
"RTN","KMPDU7",22,0)
 K ^TMP("KMPDTU10-LIST",$J)
"RTN","KMPDU7",23,0)
 D:KMPDLIST=2 LISTSELR^KMPDTU10
"RTN","KMPDU7",24,0)
 D:KMPDLIST=3 LISTSELH^KMPDTU10
"RTN","KMPDU7",25,0)
 I '$O(^TMP("KMPDTU10-LIST",$J,0)) S KMPDY(0)="<No Data to Report>" Q
"RTN","KMPDU7",26,0)
 ;
"RTN","KMPDU7",27,0)
 F I=0:0 S I=$O(^TMP("KMPDTU10-LIST",$J,I)) Q:'I  D 
"RTN","KMPDU7",28,0)
 .S @KMPDGBL@(I)=$G(^TMP("KMPDTU10-LIST",$J,I,0))
"RTN","KMPDU7",29,0)
 ;
"RTN","KMPDU7",30,0)
 S KMPDY=$NA(@KMPDGBL)
"RTN","KMPDU7",31,0)
 ;
"RTN","KMPDU7",32,0)
 Q
"RTN","KMPDU7",33,0)
 ;
"RTN","KMPDU7",34,0)
TMGDATES(KMPDY,KMPDSS) ;-- rpc timing date ranges
"RTN","KMPDU7",35,0)
 ;-------------------------------------------------------------------
"RTN","KMPDU7",36,0)
 ; KMPDY()... return value
"RTN","KMPDU7",37,0)
 ;             KMPDY(0)=FMStartDate^FMEndDate^ExtStartDate^ExtEndDate
"RTN","KMPDU7",38,0)
 ;             KMPDY(1)=FMDate^ExtDate
"RTN","KMPDU7",39,0)
 ;             KMPDY(2)=FMDate^ExtDate
"RTN","KMPDU7",40,0)
 ;             KMPDY(...)=...
"RTN","KMPDU7",41,0)
 ; KMPDSS.... timing subscript
"RTN","KMPDU7",42,0)
 ;-------------------------------------------------------------------
"RTN","KMPDU7",43,0)
 ;
"RTN","KMPDU7",44,0)
 K KMPDY
"RTN","KMPDU7",45,0)
 ;
"RTN","KMPDU7",46,0)
 I $G(KMPDSS)="" S KMPDY(0)="[Timing Subscript is not defined]" Q
"RTN","KMPDU7",47,0)
 ;
"RTN","KMPDU7",48,0)
 N DATE,I,LN,SESSION
"RTN","KMPDU7",49,0)
 ;
"RTN","KMPDU7",50,0)
 S DATE=$$DATERNG1^KMPDTU10(KMPDSS,.SESSION)
"RTN","KMPDU7",51,0)
 I 'DATE S KMPDY(0)="<There are no Timing Monitor Dates available>" Q
"RTN","KMPDU7",52,0)
 S $P(KMPDY(0),U)=$P(DATE,U)
"RTN","KMPDU7",53,0)
 S $P(KMPDY(0),U,2)=$$FMTE^XLFDT($P(DATE,U))
"RTN","KMPDU7",54,0)
 S $P(KMPDY(0),U,3)=$P(DATE,U,2)
"RTN","KMPDU7",55,0)
 S $P(KMPDY(0),U,4)=$$FMTE^XLFDT($P(DATE,U,2))
"RTN","KMPDU7",56,0)
 S (I,LN)=0
"RTN","KMPDU7",57,0)
 F  S I=$O(SESSION(I)) Q:'I  D 
"RTN","KMPDU7",58,0)
 .S LN=LN+1
"RTN","KMPDU7",59,0)
 .S KMPDY(LN)=I_"^"_$$FMTE^XLFDT(I)
"RTN","KMPDU7",60,0)
 ;
"RTN","KMPDU7",61,0)
 ;
"RTN","KMPDU7",62,0)
 Q
"RTN","KMPDU7",63,0)
 ;
"RTN","KMPDU7",64,0)
TMGMON(KMPDY,KMPDSTM) ;-- timing monitor data
"RTN","KMPDU7",65,0)
 ;-------------------------------------------------------------------
"RTN","KMPDU7",66,0)
 ; remote procedure: KMPD TMG MON DATA
"RTN","KMPDU7",67,0)
 ; 
"RTN","KMPDU7",68,0)
 ; KMPDY()... return value: 
"RTN","KMPDU7",69,0)
 ;            KMPDY(0)= ^piece 1: Last Updated
"RTN","KMPDU7",70,0)
 ;                       piece 2: Running Time
"RTN","KMPDU7",71,0)
 ;                       piece 3: Update Minutes
"RTN","KMPDU7",72,0)
 ;                       piece 4: alert seconds
"RTN","KMPDU7",73,0)
 ;                       piece 5: start time
"RTN","KMPDU7",74,0)
 ;            KMPDY(...) Hour^AverageDeltaSeconds^AverageCount
"RTN","KMPDU7",75,0)
 ;            
"RTN","KMPDU7",76,0)
 ; KMPDSTM... monitor start time in internal fileman format. if not
"RTN","KMPDU7",77,0)
 ;            defined this will be set as NOW.               
"RTN","KMPDU7",78,0)
 ;-------------------------------------------------------------------
"RTN","KMPDU7",79,0)
 ;
"RTN","KMPDU7",80,0)
 K KMPDY
"RTN","KMPDU7",81,0)
 ;
"RTN","KMPDU7",82,0)
 S:'$G(KMPDSTM) KMPDSTM=$$NOW^XLFDT
"RTN","KMPDU7",83,0)
 ;
"RTN","KMPDU7",84,0)
 N DATA,I,KMPUTIME,KMPUTMP,LN,NOW
"RTN","KMPDU7",85,0)
 ;
"RTN","KMPDU7",86,0)
 D DATA^KMPDTM
"RTN","KMPDU7",87,0)
 I '$D(KMPUTMP) S KMPDY(0)="<No Timing Monitor Data to Report>" Q
"RTN","KMPDU7",88,0)
 ;
"RTN","KMPDU7",89,0)
 S NOW=$$NOW^XLFDT
"RTN","KMPDU7",90,0)
 S DATA=$G(^KMPD(8973,1,19))
"RTN","KMPDU7",91,0)
 ; zero node: LastUpdated^RunningTime^UpdateMinutes^AlertSeconds
"RTN","KMPDU7",92,0)
 S $P(KMPDY(0),U)=$P($$FMTE^XLFDT(NOW),"@",2)
"RTN","KMPDU7",93,0)
 S $P(KMPDY(0),U,2)=$$FMDIFF^XLFDT(NOW,KMPDSTM,3)
"RTN","KMPDU7",94,0)
 S $P(KMPDY(0),U,3)=$S($P(DATA,U):$P(DATA,U),1:10)
"RTN","KMPDU7",95,0)
 S $P(KMPDY(0),U,4)=$S($P(DATA,U,2):$P(DATA,U,2),1:30)
"RTN","KMPDU7",96,0)
 S $P(KMPDY(0),U,5)=KMPDSTM
"RTN","KMPDU7",97,0)
 ; 
"RTN","KMPDU7",98,0)
 S LN=0
"RTN","KMPDU7",99,0)
 F I=0:0 S I=$O(KMPUTMP(I)) Q:'I  D 
"RTN","KMPDU7",100,0)
 .S LN=LN+1,KMPDY(LN)=$G(KMPUTMP(I,0))
"RTN","KMPDU7",101,0)
 ;
"RTN","KMPDU7",102,0)
 Q
"RTN","KMPDU7",103,0)
 ;
"RTN","KMPDU7",104,0)
TMGRPT(KMPDY,KMPDRPT,KMPDTM,KMPDATE,KMPDSRCH,KMPDTSEC,KMPDHOUR) ;-- rpc - timing reports
"RTN","KMPDU7",105,0)
 ;-------------------------------------------------------------------
"RTN","KMPDU7",106,0)
 ; KMPDY()... array containing report
"RTN","KMPDU7",107,0)
 ; KMPDRPT... report name (free text)
"RTN","KMPDU7",108,0)
 ; KMPDTM.... time frame - prime time or non-prime time
"RTN","KMPDU7",109,0)
 ; KMPDATE... date (fileman format)
"RTN","KMPDU7",110,0)
 ; KMPDSRCH.. ttl search text
"RTN","KMPDU7",111,0)
 ;              1: User Name
"RTN","KMPDU7",112,0)
 ;              2: Client Name
"RTN","KMPDU7",113,0)
 ;              3: IP Address
"RTN","KMPDU7",114,0)
 ;              4: All Items
"RTN","KMPDU7",115,0)
 ; KMPDTSEC.. seconds
"RTN","KMPDU7",116,0)
 ; KMPDTHR... hour
"RTN","KMPDU7",117,0)
 ;-------------------------------------------------------------------
"RTN","KMPDU7",118,0)
 ;
"RTN","KMPDU7",119,0)
 K KMPDY
"RTN","KMPDU7",120,0)
 ;
"RTN","KMPDU7",121,0)
 S KMPDRPT=$G(KMPDRPT)
"RTN","KMPDU7",122,0)
 I KMPDRPT="" S KMPDY(0)="[There is no Report Name]" Q
"RTN","KMPDU7",123,0)
 S KMPDTM=$G(KMPDTM)
"RTN","KMPDU7",124,0)
 I KMPDTM="" S KMPDY(0)="[There is no Time Frame]" Q
"RTN","KMPDU7",125,0)
 I '$D(KMPDATE) S KMPDY(0)="[There is no Ending Date]" Q
"RTN","KMPDU7",126,0)
 ;
"RTN","KMPDU7",127,0)
 N DATA,DATE,HR,I,KMPDPTNP,LN
"RTN","KMPDU7",128,0)
 ;
"RTN","KMPDU7",129,0)
 K ^TMP($J)
"RTN","KMPDU7",130,0)
 ;
"RTN","KMPDU7",131,0)
 I KMPDRPT="TMG - Average Daily Coversheet Load" D ADCL^KMPDU7A
"RTN","KMPDU7",132,0)
 I KMPDRPT="TMG - Average Hourly Coversheet Load" D AHCR^KMPDU7A
"RTN","KMPDU7",133,0)
 I KMPDRPT="TMG - Coversheet TTL Alert Report" D CTTLAR^KMPDU7A
"RTN","KMPDU7",134,0)
 I KMPDRPT="TMG - Daily Coversheet TTL Detailed Report" D DCTTLDR^KMPDU7A
"RTN","KMPDU7",135,0)
 I KMPDRPT="TMG - Hourly Coversheet TTL Detailed Report" D HCTTLDR^KMPDU7A
"RTN","KMPDU7",136,0)
 I KMPDRPT="TMG - Real-Time Average Hourly Coversheet Load" D RTAHCL^KMPDU7A
"RTN","KMPDU7",137,0)
 I KMPDRPT="TMG - Real-Time Threshold Alert" D RTTA^KMPDU7A
"RTN","KMPDU7",138,0)
 ;
"RTN","KMPDU7",139,0)
 S:'$D(KMPDY) KMPDY(0)="<No Data to Report>"
"RTN","KMPDU7",140,0)
 ;
"RTN","KMPDU7",141,0)
 Q
"RTN","KMPDU7",142,0)
 ;
"RTN","KMPDU7",143,0)
TMGSST(KMPDY,KMPDSST) ;-- rpc - start/stop timing monitor
"RTN","KMPDU7",144,0)
 ;-------------------------------------------------------------------
"RTN","KMPDU7",145,0)
 ; KMPDY()... array containing timing monitor status
"RTN","KMPDU7",146,0)
 ;            0 - timing monitor is off
"RTN","KMPDU7",147,0)
 ;            1 - timing monitor is on
"RTN","KMPDU7",148,0)
 ; KMPSST.... start/stop
"RTN","KMPDU7",149,0)
 ;            0 - stop timing monitor
"RTN","KMPDU7",150,0)
 ;            1 - start timing monitor
"RTN","KMPDU7",151,0)
 ;-------------------------------------------------------------------
"RTN","KMPDU7",152,0)
 ;
"RTN","KMPDU7",153,0)
 S KMPDSST=+$G(KMPDSST)
"RTN","KMPDU7",154,0)
 S:KMPDSST>1 KMPDSST=1
"RTN","KMPDU7",155,0)
 S ^KMPTMP("KMPD-CPRS")=KMPDSST
"RTN","KMPDU7",156,0)
 S KMPDY(0)=KMPDSST
"RTN","KMPDU7",157,0)
 Q
"RTN","KMPDU7",158,0)
 ;
"RTN","KMPDU7",159,0)
TMGSTAT(KMPDY) ;-- rpc - timing monitor status
"RTN","KMPDU7",160,0)
 ;-------------------------------------------------------------------
"RTN","KMPDU7",161,0)
 ; KMPDY()... array containing timing monitor status
"RTN","KMPDU7",162,0)
 ;            0 - timing monitor is off
"RTN","KMPDU7",163,0)
 ;            1 - timing monitor is on
"RTN","KMPDU7",164,0)
 ;-------------------------------------------------------------------
"RTN","KMPDU7",165,0)
 ;
"RTN","KMPDU7",166,0)
 S KMPDY(0)=$G(^KMPTMP("KMPD-CPRS"))
"RTN","KMPDU7",167,0)
 ;
"RTN","KMPDU7",168,0)
 Q
"RTN","KMPDU7A")
0^57^B23825216^n/a
"RTN","KMPDU7A",1,0)
KMPDU7A ;OAK/RAK - CM Tools Routine Utilities ;7/22/04  09:06
"RTN","KMPDU7A",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDU7A",3,0)
 ;
"RTN","KMPDU7A",4,0)
 N DATA,DATE,HR,I,LN
"RTN","KMPDU7A",5,0)
 ;
"RTN","KMPDU7A",6,0)
ADCL ;- TMG - Average Daily Coversheet Load
"RTN","KMPDU7A",7,0)
 ; report data
"RTN","KMPDU7A",8,0)
 N KMPDPTNP
"RTN","KMPDU7A",9,0)
 S KMPDPTNP=$G(KMPDTM)
"RTN","KMPDU7A",10,0)
 S KMPDATE(0)=KMPDATE
"RTN","KMPDU7A",11,0)
 D DATA^KMPDTP1(.KMPDATE,KMPDPTNP,"")
"RTN","KMPDU7A",12,0)
 I '$D(^TMP($J)) S KMPDY(0)="<No Data To Report>" Q
"RTN","KMPDU7A",13,0)
 ;S KMPDY(0)=$$NOW^XLFDT_"^"_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","KMPDU7A",14,0)
 S (DATE,LN)=0
"RTN","KMPDU7A",15,0)
 F  S DATE=$O(^TMP($J,DATE)) Q:'DATE  D 
"RTN","KMPDU7A",16,0)
 .S DATA=^TMP($J,DATE),LN=LN+1
"RTN","KMPDU7A",17,0)
 .S $P(KMPDY(LN),U)=$$FMTE^XLFDT(DATE)
"RTN","KMPDU7A",18,0)
 .S $P(KMPDY(LN),U,2)=$FN($P(DATA,U),",",0)
"RTN","KMPDU7A",19,0)
 .S $P(KMPDY(LN),U,3)=$FN($P(DATA,U,2),",",0)
"RTN","KMPDU7A",20,0)
 .S $P(KMPDY(LN),U,4)=$FN($P(DATA,U,3),",",0)
"RTN","KMPDU7A",21,0)
 .S $P(KMPDY(LN),U,5)=$FN($P(DATA,U,4),",",0)
"RTN","KMPDU7A",22,0)
 Q
"RTN","KMPDU7A",23,0)
 ;
"RTN","KMPDU7A",24,0)
AHCR ;- TMG - Average Hourly Coversheet Load
"RTN","KMPDU7A",25,0)
 ; report data
"RTN","KMPDU7A",26,0)
 D DATA^KMPDTP3
"RTN","KMPDU7A",27,0)
 I '$D(^TMP($J)) S KMPDY(0)="<No Data to Report>" Q
"RTN","KMPDU7A",28,0)
 S (DATE,LN)=0
"RTN","KMPDU7A",29,0)
 F  S DATE=$O(^TMP($J,DATE)) Q:'DATE  S HR=0 D 
"RTN","KMPDU7A",30,0)
 .F  S HR=$O(^TMP($J,DATE,HR)) Q:'HR  D 
"RTN","KMPDU7A",31,0)
 ..S DATA=^TMP($J,DATE,HR),LN=LN+1
"RTN","KMPDU7A",32,0)
 ..S $P(KMPDY(LN),U)=$$FMTE^XLFDT(DATE)
"RTN","KMPDU7A",33,0)
 ..S $P(KMPDY(LN),U,2)=$S($L(HR)=1:"0",1:"")_HR
"RTN","KMPDU7A",34,0)
 ..S $P(KMPDY(LN),U,3)=$FN($P(DATA,U),",",0)
"RTN","KMPDU7A",35,0)
 ..S $P(KMPDY(LN),U,4)=$FN($P(DATA,U,2),",",0)
"RTN","KMPDU7A",36,0)
 ..S $P(KMPDY(LN),U,5)=$FN($P(DATA,U,3),",",0)
"RTN","KMPDU7A",37,0)
 ..S $P(KMPDY(LN),U,6)=$FN($P(DATA,U,4),",",0)
"RTN","KMPDU7A",38,0)
 ..S $P(KMPDY(LN),U,7)=$FN($P(DATA,U,5),",",0)
"RTN","KMPDU7A",39,0)
 Q
"RTN","KMPDU7A",40,0)
 ;
"RTN","KMPDU7A",41,0)
CTTLAR ;- TMG - Coversheet TTL Alert Report
"RTN","KMPDU7A",42,0)
 I $G(KMPDSRCH)="" S KMPDY(0)="[TTL Search data is missing]" Q
"RTN","KMPDU7A",43,0)
 I '$G(KMPDTSEC) S KMPDY(0)="[Threshold Seconds data is missing]" Q
"RTN","KMPDU7A",44,0)
 ; report data
"RTN","KMPDU7A",45,0)
 D DATA^KMPDTP5
"RTN","KMPDU7A",46,0)
 I '$D(^TMP($J)) S KMPDY(0)="<No Data to Report>" Q
"RTN","KMPDU7A",47,0)
 S (DATE,LN)=0
"RTN","KMPDU7A",48,0)
 F  S DATE=$O(^TMP($J,DATE)) Q:'DATE  S HR="" D 
"RTN","KMPDU7A",49,0)
 .F  S HR=$O(^TMP($J,DATE,HR)) Q:HR=""  D 
"RTN","KMPDU7A",50,0)
 ..S DATA=^TMP($J,DATE,HR)
"RTN","KMPDU7A",51,0)
 ..S $P(KMPDY(LN),U)=$$FMTE^XLFDT(DATE)
"RTN","KMPDU7A",52,0)
 ..S $P(KMPDY(LN),U,2)=HR
"RTN","KMPDU7A",53,0)
 ..; user name
"RTN","KMPDU7A",54,0)
 ..S $P(KMPDY(LN),U,3)=$P(DATA,U,5)
"RTN","KMPDU7A",55,0)
 ..; client name
"RTN","KMPDU7A",56,0)
 ..S $P(KMPDY(LN),U,4)=$P(DATA,U,6)
"RTN","KMPDU7A",57,0)
 ..; ip address
"RTN","KMPDU7A",58,0)
 ..S $P(KMPDY(LN),U,5)=$P(DATA,U,9)
"RTN","KMPDU7A",59,0)
 ..; time to load
"RTN","KMPDU7A",60,0)
 ..S $P(KMPDY(LN),U,6)=$FN($P(DATA,U,4),",",0)
"RTN","KMPDU7A",61,0)
 ..S LN=LN+1
"RTN","KMPDU7A",62,0)
 Q
"RTN","KMPDU7A",63,0)
 ;
"RTN","KMPDU7A",64,0)
DCTTLDR ;- TMG - Daily Coversheet TTL Detailed Report
"RTN","KMPDU7A",65,0)
 S KMPDPTNP=KMPDTM
"RTN","KMPDU7A",66,0)
 ; report data
"RTN","KMPDU7A",67,0)
 D DATA^KMPDTP2
"RTN","KMPDU7A",68,0)
 I '$D(^TMP($J)) S KMPDY(0)="<No Data to Report>" Q
"RTN","KMPDU7A",69,0)
 S (DATE,LN)=0
"RTN","KMPDU7A",70,0)
 F  S DATE=$O(^TMP($J,DATE)) Q:'DATE  D 
"RTN","KMPDU7A",71,0)
 .S DATA=^TMP($J,DATE),DATA(1)=$G(^TMP($J,DATE,1))
"RTN","KMPDU7A",72,0)
 .F I=1:1:10 D 
"RTN","KMPDU7A",73,0)
 ..S $P(KMPDY(LN),U)=$$FMTE^XLFDT(DATE)
"RTN","KMPDU7A",74,0)
 ..I I<10 S $P(KMPDY(LN),U,2)=$J(I-1*10,2)_" to "_(I*10)
"RTN","KMPDU7A",75,0)
 ..E  S $P(KMPDY(LN),U,2)="90 or greater"
"RTN","KMPDU7A",76,0)
 ..S $P(KMPDY(LN),U,3)=$FN($P(DATA,U,I),",",0)
"RTN","KMPDU7A",77,0)
 ..S $P(KMPDY(LN),U,4)=$FN($P(DATA(1),U,I),",",1)_"%"
"RTN","KMPDU7A",78,0)
 ..S LN=LN+1
"RTN","KMPDU7A",79,0)
 Q
"RTN","KMPDU7A",80,0)
 ;
"RTN","KMPDU7A",81,0)
HCTTLDR ;-TMG - Hourly Coversheet TTL Detailed Report
"RTN","KMPDU7A",82,0)
 ; report data
"RTN","KMPDU7A",83,0)
 D DATA^KMPDTP4
"RTN","KMPDU7A",84,0)
 I '$D(^TMP($J)) S KMPDY(0)="<No Data to Report>" Q
"RTN","KMPDU7A",85,0)
 S (DATE,LN)=0
"RTN","KMPDU7A",86,0)
 F  S DATE=$O(^TMP($J,DATE)) Q:'DATE  S HR=0 D 
"RTN","KMPDU7A",87,0)
 .F  S HR=$O(^TMP($J,DATE,HR)) Q:'HR  D 
"RTN","KMPDU7A",88,0)
 ..S DATA=^TMP($J,DATE,HR),DATA(1)=$G(^(HR,1))
"RTN","KMPDU7A",89,0)
 ..F I=1:1:9 D 
"RTN","KMPDU7A",90,0)
 ...S $P(KMPDY(LN),U)=$$FMTE^XLFDT(DATE)
"RTN","KMPDU7A",91,0)
 ...S $P(KMPDY(LN),U,2)=HR
"RTN","KMPDU7A",92,0)
 ...S $P(KMPDY(LN),U,3)=$J(I-1*10,2)_" to "_(I*10)
"RTN","KMPDU7A",93,0)
 ...S $P(KMPDY(LN),U,4)=$FN($P(DATA,U,I),",",0)
"RTN","KMPDU7A",94,0)
 ...S $P(KMPDY(LN),U,5)=$FN($P(DATA(1),U,I),",",1)
"RTN","KMPDU7A",95,0)
 ...S LN=LN+1
"RTN","KMPDU7A",96,0)
 Q
"RTN","KMPDU7A",97,0)
 ;
"RTN","KMPDU7A",98,0)
RTAHCL ;- TMG - Real-Time Average Hourly Coversheet Load
"RTN","KMPDU7A",99,0)
 ; report data
"RTN","KMPDU7A",100,0)
 D DATA^KMPDTP7
"RTN","KMPDU7A",101,0)
 I '$D(^TMP($J)) S KMPDY(0)="<No Data to Report>" Q
"RTN","KMPDU7A",102,0)
 S DATE=$O(^TMP($J,0)) Q:'DATE
"RTN","KMPDU7A",103,0)
 S HR="",LN=0
"RTN","KMPDU7A",104,0)
 F  S HR=$O(^TMP($J,DATE,HR)) Q:HR=""  D 
"RTN","KMPDU7A",105,0)
 .S DATA=^TMP($J,DATE,HR)
"RTN","KMPDU7A",106,0)
 .S $P(KMPDY(LN),U)=$$FMTE^XLFDT(DATE)
"RTN","KMPDU7A",107,0)
 .S $P(KMPDY(LN),U,2)=HR
"RTN","KMPDU7A",108,0)
 .; ttl average
"RTN","KMPDU7A",109,0)
 .S $P(KMPDY(LN),U,3)=$FN($P(DATA,U),",",0)
"RTN","KMPDU7A",110,0)
 .; ttl minimum
"RTN","KMPDU7A",111,0)
 .S $P(KMPDY(LN),U,4)=$FN($P(DATA,U,2),",",0)
"RTN","KMPDU7A",112,0)
 .; ttl maximum
"RTN","KMPDU7A",113,0)
 .S $P(KMPDY(LN),U,5)=$FN($P(DATA,U,3),",",0)
"RTN","KMPDU7A",114,0)
 .; # of cv loads
"RTN","KMPDU7A",115,0)
 .S $P(KMPDY(LN),U,6)=$FN($P(DATA,U,5),",",0)
"RTN","KMPDU7A",116,0)
 .S LN=LN+1 Q
"RTN","KMPDU7A",117,0)
 Q
"RTN","KMPDU7A",118,0)
 ;
"RTN","KMPDU7A",119,0)
RTTA ;- TMG - Real-Time Threshold Alert
"RTN","KMPDU7A",120,0)
 S KMPDHOUR=$G(KMPDHOUR)
"RTN","KMPDU7A",121,0)
 S KMPDTSEC=$G(KMPDTSEC)
"RTN","KMPDU7A",122,0)
 I 'KMPDTSEC S KMPDY(0)="[Seconds data is missing]" Q
"RTN","KMPDU7A",123,0)
 I $G(KMPDSRCH)="" S KMPDY(0)="[TTL Search data is missing]" Q
"RTN","KMPDU7A",124,0)
 S KMPDSRCH(1)=$P(KMPDSRCH,U),KMPDSRCH(2)=$P(KMPDSRCH,U,2,3)
"RTN","KMPDU7A",125,0)
 I 'KMPDSRCH(1) S KMPDY(0)="[TTL Search data invalid]" Q
"RTN","KMPDU7A",126,0)
 I (KMPDSRCH(1)<4)&('KMPDSRCH(2)) S KMPDY(0)="[TTL Search data missing]" Q
"RTN","KMPDU7A",127,0)
 ; report data
"RTN","KMPDU7A",128,0)
 D DATA^KMPDTP6
"RTN","KMPDU7A",129,0)
 I '$D(^TMP($J)) S KMPDY(0)="<No Data to Report>" Q
"RTN","KMPDU7A",130,0)
 S (DATE,LN)=0
"RTN","KMPDU7A",131,0)
 F  S DATE=$O(^TMP($J,DATE)) Q:'DATE  S HR="" D 
"RTN","KMPDU7A",132,0)
 .F  S HR=$O(^TMP($J,DATE,HR)) Q:HR=""  D 
"RTN","KMPDU7A",133,0)
 ..S DATA=^TMP($J,DATE,HR)
"RTN","KMPDU7A",134,0)
 ..; date
"RTN","KMPDU7A",135,0)
 ..S $P(KMPDY(LN),U)=$$FMTE^XLFDT(DATE)
"RTN","KMPDU7A",136,0)
 ..; hour
"RTN","KMPDU7A",137,0)
 ..S $P(KMPDY(LN),U,2)=HR
"RTN","KMPDU7A",138,0)
 ..; user name
"RTN","KMPDU7A",139,0)
 ..S $P(KMPDY(LN),U,3)=$P(DATA,U,5)
"RTN","KMPDU7A",140,0)
 ..; client name
"RTN","KMPDU7A",141,0)
 ..S $P(KMPDY(LN),U,4)=$P(DATA,U,6)
"RTN","KMPDU7A",142,0)
 ..; ip address
"RTN","KMPDU7A",143,0)
 ..S $P(KMPDY(LN),U,5)=$P(DATA,U,9)
"RTN","KMPDU7A",144,0)
 ..; time to load
"RTN","KMPDU7A",145,0)
 ..S $P(KMPDY(LN),U,6)=$P(DATA,U,4)
"RTN","KMPDU7A",146,0)
 ..S LN=LN+1
"RTN","KMPDU7A",147,0)
 ;
"RTN","KMPDU7A",148,0)
 Q
"RTN","KMPDUG")
0^36^B12065844^B12065844
"RTN","KMPDUG",1,0)
KMPDUG ;OAK/RAK - CM Tools Graph Utility ;2/17/04  09:57
"RTN","KMPDUG",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDUG",3,0)
 ;
"RTN","KMPDUG",4,0)
EN(KMPUAR,KMPUTI,KMPUOPT,KMPUSTRT,KMPUTAR,KMPUXIT,KMPUMAX) ;entry point
"RTN","KMPDUG",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUG",6,0)
 ; KMPUAR.. Local or global array (passed by value) that contains graph
"RTN","KMPDUG",7,0)
 ;          information in the format:
"RTN","KMPDUG",8,0)
 ;
"RTN","KMPDUG",9,0)
 ;          KMPUAR(...,0)=DataTitle^DataValue
"RTN","KMPDUG",10,0)
 ;                        piece 1 - the title of the data
"RTN","KMPDUG",11,0)
 ;                        piece 2 - the actual value of the data
"RTN","KMPDUG",12,0)
 ;
"RTN","KMPDUG",13,0)
 ; KMPUTI.. graph titles in 4 up-arrow pieces
"RTN","KMPDUG",14,0)
 ;          piece 1 - title of the graph 
"RTN","KMPDUG",15,0)
 ;          piece 2 - second title of graph (if any)
"RTN","KMPDUG",16,0)
 ;          piece 3 - x axis title
"RTN","KMPDUG",17,0)
 ;          piece 4 - y axis title
"RTN","KMPDUG",18,0)
 ;   
"RTN","KMPDUG",19,0)
 ; KMPUOPT. (optional) A string of one or more letters representing
"RTN","KMPDUG",20,0)
 ;          desired options.
"RTN","KMPDUG",21,0)
 ;          "A" - angle titles (only for vertical graph)
"RTN","KMPDUG",22,0)
 ;          "D" - double space
"RTN","KMPDUG",23,0)
 ;          "G" - print grid across graph
"RTN","KMPDUG",24,0)
 ;          "S" - display entries with MAX>9999 in scientific notation
"RTN","KMPDUG",25,0)
 ;          "V" - display 'vertical' graph
"RTN","KMPDUG",26,0)
 ;
"RTN","KMPDUG",27,0)
 ; KMPUSTRT (optional). Number to start graph.
"RTN","KMPDUG",28,0)
 ;          if KMPUSTRT=0 first hash mark of graph will equal 0
"RTN","KMPDUG",29,0)
 ;
"RTN","KMPDUG",30,0)
 ; KMPUTAR. (optional) Text array. Local or global array that 
"RTN","KMPDUG",31,0)
 ;          contains text to be displayed with the graph.
"RTN","KMPDUG",32,0)
 ;
"RTN","KMPDUG",33,0)
 ;          Example:  KMPUTAR="UTIL($J,"
"RTN","KMPDUG",34,0)
 ;                    KMPUTAR="^ASK(999999,23,10,"
"RTN","KMPDUG",35,0)
 ;                    KMPUTAR="^TMP($J,""TEXT"","
"RTN","KMPDUG",36,0)
 ;
"RTN","KMPDUG",37,0)
 ; KMPUXIT. (optional) Exit without 'continue' text.  This allows the 
"RTN","KMPDUG",38,0)
 ;          programmer to use their own display for continuing
"RTN","KMPDUG",39,0)
 ;           0 - do not exit - display 'continue' text
"RTN","KMPDUG",40,0)
 ;           1 - exit
"RTN","KMPDUG",41,0)
 ;
"RTN","KMPDUG",42,0)
 ; KMPUMAX. (optional) Maximum scale - if not defined, the maximum value
"RTN","KMPDUG",43,0)
 ;          is determined from the data passed.  If KMPUMAX is defined,
"RTN","KMPDUG",44,0)
 ;          scale will be adjusted accordingly.
"RTN","KMPDUG",45,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUG",46,0)
 ;
"RTN","KMPDUG",47,0)
 I '$D(KMPUAR) W !!?7,"...no array data...",!! D CONT Q
"RTN","KMPDUG",48,0)
 S KMPUSTRT=+$G(KMPUSTRT),KMPUOPT=$$UP^XLFSTR($G(KMPUOPT))
"RTN","KMPDUG",49,0)
 S KMPUXIT=+$G(KMPUXIT),KMPUMAX=+$G(KMPUMAX)
"RTN","KMPDUG",50,0)
 K:$G(KMPUTAR)="" KMPUTAR
"RTN","KMPDUG",51,0)
 I '$D(@KMPUAR) D  Q
"RTN","KMPDUG",52,0)
 .W *7,!!?7,"...no information to graph...",!!
"RTN","KMPDUG",53,0)
 .D CONT
"RTN","KMPDUG",54,0)
 S DTIME=$S($D(DTIME):DTIME,1:600)
"RTN","KMPDUG",55,0)
 ;
"RTN","KMPDUG",56,0)
 N BAR,BOTTOM,DATA,DEC,DEC1,DIV,DIVT,DNUM,DX,DY,END,GWIDTH,I,I1,LABEL,MAX
"RTN","KMPDUG",57,0)
 N MIN,NUM,OFFSET,SCALE,STEP,TEXT,TITLE,X,XCOORD,XTITLE,YNUM,YTITLE,Z
"RTN","KMPDUG",58,0)
 N IOBLC,IOBRC,IOBT,IOG1,IOG0,IOHL,IOLT,IOMT,IORT,IOTLC,IOTRC,IOTT,IOVL
"RTN","KMPDUG",59,0)
 N IOINHI,IOINLOW,IORVOFF,IORVON,IOUOFF,IOUON
"RTN","KMPDUG",60,0)
 ;
"RTN","KMPDUG",61,0)
 D INIT^KMPDUG1 I KMPUOPT["D",(KMPUOPT'["V"),(YNUM>8) D  Q
"RTN","KMPDUG",62,0)
 .W *7,!!?7,"...too many data elements to double space on a terminal"
"RTN","KMPDUG",63,0)
 .W !?7,"   for a Horizontal Graph..."
"RTN","KMPDUG",64,0)
 .W !!! D CONT
"RTN","KMPDUG",65,0)
 I KMPUOPT["D",(KMPUOPT["V"),(YNUM>34) D  Q
"RTN","KMPDUG",66,0)
 .W *7,!!?7,"...too many data elements to double space on a terminal"
"RTN","KMPDUG",67,0)
 .W !?7,"   for a Vertical Graph..."
"RTN","KMPDUG",68,0)
 .W !!! D CONT
"RTN","KMPDUG",69,0)
 ; if not a terminal do printer routine
"RTN","KMPDUG",70,0)
 I $E(IOST)'="C" Q  ;D EN^KMPUGP Q
"RTN","KMPDUG",71,0)
 I $G(IOG1)']""!($G(IOG0)']"") D  Q
"RTN","KMPDUG",72,0)
 .W *7,!!?7,"...unable to place terminal in graphics mode...",!!
"RTN","KMPDUG",73,0)
 .D CONT
"RTN","KMPDUG",74,0)
 I 'MAX D  Q
"RTN","KMPDUG",75,0)
 .W *7,!!?7,"...unable to determine any data to graph or data all zeros...",!!
"RTN","KMPDUG",76,0)
 .D CONT
"RTN","KMPDUG",77,0)
 ; if 'vertical' graph
"RTN","KMPDUG",78,0)
 I KMPUOPT["V" D EN^KMPDUGV Q
"RTN","KMPDUG",79,0)
 ; draw graph - display titles - display data
"RTN","KMPDUG",80,0)
 D DRAW^KMPDUG1,TITLES^KMPDUG1,DATA
"RTN","KMPDUG",81,0)
 ; if text to display.
"RTN","KMPDUG",82,0)
 I $D(KMPUTAR) D WP^KMPDU11(KMPUTAR,(BOTTOM+5),24) Q
"RTN","KMPDUG",83,0)
 D:'KMPUXIT CONT
"RTN","KMPDUG",84,0)
 Q
"RTN","KMPDUG",85,0)
 ;
"RTN","KMPDUG",86,0)
CONT ;-- hold screen
"RTN","KMPDUG",87,0)
 S DX=(IOM-23\2),DY=(IOSL-1) X IOXY
"RTN","KMPDUG",88,0)
 R "Press <RET> to continue",X:DTIME
"RTN","KMPDUG",89,0)
 Q
"RTN","KMPDUG",90,0)
 ;
"RTN","KMPDUG",91,0)
DATA ;-- display data in graph.
"RTN","KMPDUG",92,0)
 W IOG0 S DY=$S(KMPUOPT["D":1,1:2),BAR=0,I=""
"RTN","KMPDUG",93,0)
 F  S I=$O(@KMPUAR@(I)) Q:I=""  I $D(@KMPUAR@(I,0)) S DATA=@KMPUAR@(I,0) D 
"RTN","KMPDUG",94,0)
 .S XCOORD=$P(DATA,U,2),END=(XCOORD-KMPUSTRT-STEP)
"RTN","KMPDUG",95,0)
 .S DX=16,DY=DY+$S(KMPUOPT["D":2,1:1)
"RTN","KMPDUG",96,0)
 .;  if no data quit
"RTN","KMPDUG",97,0)
 .Q:$P(@KMPUAR@(I,0),U,2)']""
"RTN","KMPDUG",98,0)
 .F I1=0:STEP:END X IOXY W @BAR(BAR),! S DX=DX+1 Q:DX=68
"RTN","KMPDUG",99,0)
 .;  print value in parenthesis
"RTN","KMPDUG",100,0)
 .S DX=69 X IOXY W "<",$J((XCOORD/DIV),$L($FN((MAX/DIV),"",DEC)),DEC),">"
"RTN","KMPDUG",101,0)
 .S BAR=$S(BAR=1:0,1:1)
"RTN","KMPDUG",102,0)
 Q
"RTN","KMPDUG1")
0^37^B12183145^B12183145
"RTN","KMPDUG1",1,0)
KMPDUG1 ;OAK/RAK - CM Tools Graph Utility ;2/17/04  09:58
"RTN","KMPDUG1",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDUG1",3,0)
 ;
"RTN","KMPDUG1",4,0)
DRAW ;-- draw graph
"RTN","KMPDUG1",5,0)
 W @IOF,!,IOG1 S DY=2
"RTN","KMPDUG1",6,0)
 ;  draw top line
"RTN","KMPDUG1",7,0)
 F I=1:1:27 S DX=41+I X IOXY W IOHL S DX=43-I X IOXY W IOHL
"RTN","KMPDUG1",8,0)
 ;  draw top left and right corners
"RTN","KMPDUG1",9,0)
 S DX=15 X IOXY W IOTLC S DX=68 X IOXY W IOTRC,!
"RTN","KMPDUG1",10,0)
 ;  draw sides
"RTN","KMPDUG1",11,0)
 F DY=(DY+1):1:BOTTOM F DX=15,68 X IOXY W IOVL,!
"RTN","KMPDUG1",12,0)
 ;  draw bottom left and right corners
"RTN","KMPDUG1",13,0)
 S DY=BOTTOM,DX=15 X IOXY W IOBLC S DX=68 X IOXY W IOBRC,!
"RTN","KMPDUG1",14,0)
 ;  draw bottom line
"RTN","KMPDUG1",15,0)
 F I=1:1:27 S DX=15+I X IOXY W IOHL S DX=68-I X IOXY W IOHL
"RTN","KMPDUG1",16,0)
 ;  draw 'hash marks' on bottom line for relative values
"RTN","KMPDUG1",17,0)
 S DX=15 X IOXY W IOLT,!
"RTN","KMPDUG1",18,0)
 F DX=20:5:65 X IOXY W IOMT,!
"RTN","KMPDUG1",19,0)
 ;  print grid
"RTN","KMPDUG1",20,0)
 I KMPUOPT["G" D 
"RTN","KMPDUG1",21,0)
 .S DY=2 F DX=20:5:65 X IOXY W IOTT,!
"RTN","KMPDUG1",22,0)
 . F DX=20:5:65 F DY=3:1:(BOTTOM-1) X IOXY W IOVL,!
"RTN","KMPDUG1",23,0)
 W IOG0
"RTN","KMPDUG1",24,0)
 Q
"RTN","KMPDUG1",25,0)
INIT ;-- initialize required variables.
"RTN","KMPDUG1",26,0)
 D GSET^%ZISS S X="IOECH;IORVOFF;IORVON;IOUOFF;IOUON" D ENDR^%ZISS
"RTN","KMPDUG1",27,0)
 ; actual bars representing data
"RTN","KMPDUG1",28,0)
 S BAR(0)="IORVON,"" "",IORVOFF"
"RTN","KMPDUG1",29,0)
 S BAR(1)="IOG1,""a"",IOG0"
"RTN","KMPDUG1",30,0)
 S (DEC,DNUM,MAX,MIN,SCALE,YNUM)=0,GWIDTH=$S(KMPUOPT["V":10,1:50)
"RTN","KMPDUG1",31,0)
 S TITLE=$P($G(KMPUTI),U,1,2)
"RTN","KMPDUG1",32,0)
 S XTITLE=$P($G(KMPUTI),U,3)
"RTN","KMPDUG1",33,0)
 S YTITLE=$P($G(KMPUTI),U,4)
"RTN","KMPDUG1",34,0)
 ; determine maximum and minimum number and decimals (if any).
"RTN","KMPDUG1",35,0)
 S (I,MAX,MIN)=""
"RTN","KMPDUG1",36,0)
 F  S I=$O(@KMPUAR@(I)) Q:I=""  I $D(@KMPUAR@(I,0)) S YNUM=YNUM+1 D 
"RTN","KMPDUG1",37,0)
 .I $P(@KMPUAR@(I,0),U,2)>MAX S MAX=$P(@KMPUAR@(I,0),U,2)
"RTN","KMPDUG1",38,0)
 .I $P(@KMPUAR@(I,0),U,2)<MIN S MIN=$P(@KMPUAR@(I,0),U,2)
"RTN","KMPDUG1",39,0)
 .; determine number of decimal places (if any).
"RTN","KMPDUG1",40,0)
 .S DNUM=$P($P(@KMPUAR@(I,0),U,2),".",2) Q:'DNUM
"RTN","KMPDUG1",41,0)
 .I $L(DNUM)>DEC S DEC=$L(DNUM)
"RTN","KMPDUG1",42,0)
 Q:MAX'>0
"RTN","KMPDUG1",43,0)
 ; get maximum number for graph.
"RTN","KMPDUG1",44,0)
 D MAX
"RTN","KMPDUG1",45,0)
 ; determine if there are decimal places when printed at end of graph
"RTN","KMPDUG1",46,0)
 S I="" F  S I=$O(@KMPUAR@(I)) Q:I=""  I $D(@KMPUAR@(I,0)) D 
"RTN","KMPDUG1",47,0)
 .S Z=$L($P($P(@KMPUAR@(I,0),U,2)/DIV,".",2)) Q:'Z
"RTN","KMPDUG1",48,0)
 .I Z>DEC S DEC=$S(Z>2:2,1:1)
"RTN","KMPDUG1",49,0)
 S BOTTOM=$S(KMPUOPT["D":(YNUM*2+2),1:(YNUM+3))
"RTN","KMPDUG1",50,0)
 S SCALE=((MAX-KMPUSTRT)/10),STEP=((MAX-KMPUSTRT)/GWIDTH)
"RTN","KMPDUG1",51,0)
 S NUM=(SCALE+KMPUSTRT)
"RTN","KMPDUG1",52,0)
 ; determine if relative values have decimal
"RTN","KMPDUG1",53,0)
 S DEC1=0 F I=20:5:65 I $L($P((NUM/DIV),".",2)) D 
"RTN","KMPDUG1",54,0)
 .S DEC1=$S($L($P((NUM/DIV),".",2))>2:2,1:1)
"RTN","KMPDUG1",55,0)
 Q
"RTN","KMPDUG1",56,0)
 ;
"RTN","KMPDUG1",57,0)
MAX ;-- determine 'max' or largest number for graph.
"RTN","KMPDUG1",58,0)
 ;
"RTN","KMPDUG1",59,0)
 S:$G(KMPUMAX) MAX=KMPUMAX
"RTN","KMPDUG1",60,0)
 S DIV=1,MAX=$FN(MAX,"",0)
"RTN","KMPDUG1",61,0)
 I MAX<2 S MAX=1 Q
"RTN","KMPDUG1",62,0)
 S X=1 F I=1:1:$L(MAX)-1 S X=X*10 I MAX=X S X=X/10
"RTN","KMPDUG1",63,0)
 S MAX=$E(MAX-1)+1*X
"RTN","KMPDUG1",64,0)
 I $L(MAX)>4 D 
"RTN","KMPDUG1",65,0)
 .F I=1:1:($L(MAX)-1) S DIV=DIV_"0"
"RTN","KMPDUG1",66,0)
 .I $L(DIV)<7 S DIVT=$S(KMPUOPT["S":"10^"_I,1:(DIV/1000)_"k") Q
"RTN","KMPDUG1",67,0)
 .S DIVT=$S(KMPUOPT["S":"10^"_I,1:(DIV/1000000)_"m")
"RTN","KMPDUG1",68,0)
 Q
"RTN","KMPDUG1",69,0)
 ;
"RTN","KMPDUG1",70,0)
TITLES ;-- print graph titles.
"RTN","KMPDUG1",71,0)
 W IOG0
"RTN","KMPDUG1",72,0)
 ; print first and second line of title
"RTN","KMPDUG1",73,0)
 S DX=(IOM-$L($P(TITLE,U))\2+1),DY=0 X IOXY W $P(TITLE,U),!
"RTN","KMPDUG1",74,0)
 S DX=(IOM-$L($P(TITLE,U,2))\2+1),DY=1 X IOXY W $P(TITLE,U,2),!
"RTN","KMPDUG1",75,0)
 ; print y title
"RTN","KMPDUG1",76,0)
 S DX=(14-$L(YTITLE)) X IOXY W IOUON,YTITLE,IOUOFF,!
"RTN","KMPDUG1",77,0)
 ; print relative values under hash marks
"RTN","KMPDUG1",78,0)
 S NUM=(SCALE+KMPUSTRT)
"RTN","KMPDUG1",79,0)
 S DY=BOTTOM+1,DX=15-$S($L($FN((KMPUSTRT/DIV),"",DEC1))=1:0,1:$L($FN((KMPUSTRT/DIV),"",DEC1))-2) X IOXY W $FN((KMPUSTRT/DIV),"",DEC1),!
"RTN","KMPDUG1",80,0)
 F I=20:5:65 D 
"RTN","KMPDUG1",81,0)
 .I $L($FN((NUM/DIV),"",DEC1))=1 S DX=(I-$L($FN((NUM/DIV),"",DEC1))+1)
"RTN","KMPDUG1",82,0)
 .E  S DX=(I-($L($FN((NUM/DIV),"",DEC1))-2))
"RTN","KMPDUG1",83,0)
 .X IOXY W $FN((NUM/DIV),"",DEC1),! S NUM=NUM+SCALE
"RTN","KMPDUG1",84,0)
 ; if div>1 write (x div)
"RTN","KMPDUG1",85,0)
 I DIV>1 S DX=69 X IOXY W "<x",DIVT,">",!
"RTN","KMPDUG1",86,0)
 ; print x title at bottom
"RTN","KMPDUG1",87,0)
 S DX=(IOM-$L(XTITLE)\2+1),DY=BOTTOM+2 X IOXY W IOUON,XTITLE,IOUOFF,!
"RTN","KMPDUG1",88,0)
 ; print data titles
"RTN","KMPDUG1",89,0)
 S DY=3,I=0 F  S I=$O(@KMPUAR@(I)) Q:'I  I $D(@KMPUAR@(I,0)) D 
"RTN","KMPDUG1",90,0)
 .S YTITLE=$E($P(@KMPUAR@(I,0),U),1,14)
"RTN","KMPDUG1",91,0)
 .S DX=(14-$L(YTITLE)) X IOXY W YTITLE,!
"RTN","KMPDUG1",92,0)
 .S DY=DY+$S(KMPUOPT["D":2,1:1)
"RTN","KMPDUG1",93,0)
 Q
"RTN","KMPDUG2")
0^38^B22783994^B22783994
"RTN","KMPDUG2",1,0)
KMPDUG2 ;OAK/RAK - CM Tools Graph Utility ;2/17/04  09:59
"RTN","KMPDUG2",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDUG2",3,0)
 ;
"RTN","KMPDUG2",4,0)
OPTIONS(KMPUOPTS) ;-- select options.
"RTN","KMPDUG2",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUG2",6,0)
 ; KMPUOPTS.. Result of selection.
"RTN","KMPDUG2",7,0)
 ;            Exceptions: "" - No options selected.
"RTN","KMPDUG2",8,0)
 ;                        ^  - User up-arrowed out.
"RTN","KMPDUG2",9,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUG2",10,0)
 N I,X,OUT
"RTN","KMPDUG2",11,0)
 S KMPUOPTS="",OUT=0
"RTN","KMPDUG2",12,0)
 S DTIME=$S($G(DTIME):DTIME,1:300)
"RTN","KMPDUG2",13,0)
 F  D  Q:OUT
"RTN","KMPDUG2",14,0)
 .W !?5,"The following graph selections are 'optional':"
"RTN","KMPDUG2",15,0)
 .D DISPLAY(.KMPUOPTS) I KMPUOPTS="" S OUT=1 Q
"RTN","KMPDUG2",16,0)
 .R !!,"Enter one or more option letter(s): ",X:DTIME
"RTN","KMPDUG2",17,0)
 .I X="" S OUT=1,KMPUOPTS="" Q
"RTN","KMPDUG2",18,0)
 .I X="^" S OUT=1,KMPUOPTS="^" Q
"RTN","KMPDUG2",19,0)
 .I X["?" D HELP W @IOF Q
"RTN","KMPDUG2",20,0)
 .;
"RTN","KMPDUG2",21,0)
 .; remove any commas, dashes or spaces.
"RTN","KMPDUG2",22,0)
 .S X=$TR(X,",- ",""),X=$$UP^XLFSTR(X)
"RTN","KMPDUG2",23,0)
 .;
"RTN","KMPDUG2",24,0)
 .; check for invalid answer.
"RTN","KMPDUG2",25,0)
 .D CHECK Q:KMPUOPTS=""
"RTN","KMPDUG2",26,0)
 .;
"RTN","KMPDUG2",27,0)
 .I X["A",(X'["V") D  Q
"RTN","KMPDUG2",28,0)
 ..W *7,!!?10,"Angle Data Titles only available with a Vertical Graph..."
"RTN","KMPDUG2",29,0)
 .;
"RTN","KMPDUG2",30,0)
 .; if vertical display warning message.
"RTN","KMPDUG2",31,0)
 .I X["V" D 
"RTN","KMPDUG2",32,0)
 ..W !!?7,"...please be aware that because of screen limitations Vertical"
"RTN","KMPDUG2",33,0)
 ..W !?7,"   Graphs are not as accurate as Horizontal Graphs and should be"
"RTN","KMPDUG2",34,0)
 ..W !?7,"   used for visual comparison rather than detailed analysis..."
"RTN","KMPDUG2",35,0)
 .;
"RTN","KMPDUG2",36,0)
 .S KMPUOPTS=X,OUT=1
"RTN","KMPDUG2",37,0)
 ;
"RTN","KMPDUG2",38,0)
 Q
"RTN","KMPDUG2",39,0)
 ;
"RTN","KMPDUG2",40,0)
CHECK ;-- check for valid answer.
"RTN","KMPDUG2",41,0)
 N I
"RTN","KMPDUG2",42,0)
 F I=1:1:$L(X) I KMPUOPTS'[$E(X,I) D  Q
"RTN","KMPDUG2",43,0)
 .W *7,!!?10,"'",$E(X,I),"' is not an available option."
"RTN","KMPDUG2",44,0)
 .S KMPUOPTS=""
"RTN","KMPDUG2",45,0)
 Q
"RTN","KMPDUG2",46,0)
 ;
"RTN","KMPDUG2",47,0)
DISPLAY(KMPUOPT) ;-- display available options.
"RTN","KMPDUG2",48,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUG2",49,0)
 ; KMPUOPT... Will be set to available options.
"RTN","KMPDUG2",50,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUG2",51,0)
 N I S KMPUOPT="" W !
"RTN","KMPDUG2",52,0)
 F I=1:1 Q:$T(OPT+I)']""  D 
"RTN","KMPDUG2",53,0)
 .W !?7,$P($T(OPT+I),";",3)," - ",$P($T(OPT+I),";",4)
"RTN","KMPDUG2",54,0)
 .S KMPUOPT=KMPUOPT_$P($T(OPT+I),";",3)
"RTN","KMPDUG2",55,0)
 Q
"RTN","KMPDUG2",56,0)
 ;
"RTN","KMPDUG2",57,0)
FTR(FOOTER,VALUE) ;print footer
"RTN","KMPDUG2",58,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUG2",59,0)
 ;  line feed to IOSL-3 and place message on screen
"RTN","KMPDUG2",60,0)
 ;  if IOSL or IOM are not defined routine will quit
"RTN","KMPDUG2",61,0)
 ;
"RTN","KMPDUG2",62,0)
 ;  FOOTER - text to appear at the bottom of the screen
"RTN","KMPDUG2",63,0)
 ;           if footer is not defined then the message
"RTN","KMPDUG2",64,0)
 ;           'Press RETURN to continue, '^' to exit'   will appear
"RTN","KMPDUG2",65,0)
 ;
"RTN","KMPDUG2",66,0)
 ;  footer appears in the middle of the screen
"RTN","KMPDUG2",67,0)
 ;
"RTN","KMPDUG2",68,0)
 ;  VALUE - value returned:
"RTN","KMPDUG2",69,0)
 ;          "" - if IOSL or IOM are not defined
"RTN","KMPDUG2",70,0)
 ;           0 - if an uparrow '^' is entered
"RTN","KMPDUG2",71,0)
 ;           1 - if return is entered
"RTN","KMPDUG2",72,0)
 ;
"RTN","KMPDUG2",73,0)
 S VALUE=""
"RTN","KMPDUG2",74,0)
 I '$G(IOSL)!('$G(IOM)) Q
"RTN","KMPDUG2",75,0)
 N DIR,I,X,Y
"RTN","KMPDUG2",76,0)
 I $G(FOOTER)']""  S FOOTER="Press RETURN to continue, '^' to exit"
"RTN","KMPDUG2",77,0)
 I $G(IORVON)']""!($G(IORVOFF)']"") N IORVON,IORVOFF,X D 
"RTN","KMPDUG2",78,0)
 .S X="IORVON;IORVOFF" D ENDR^%ZISS
"RTN","KMPDUG2",79,0)
 S FOOTER=IORVON_" "_FOOTER_" "_IORVOFF
"RTN","KMPDUG2",80,0)
 S DIR(0)="EA",DIR("A")=$J(" ",(IOM-$L(FOOTER)/2))_FOOTER
"RTN","KMPDUG2",81,0)
 F I=$Y:1:(IOSL-3) W !
"RTN","KMPDUG2",82,0)
 D ^DIR S VALUE=Y
"RTN","KMPDUG2",83,0)
 Q
"RTN","KMPDUG2",84,0)
 ;
"RTN","KMPDUG2",85,0)
HELP ;--help display for options.
"RTN","KMPDUG2",86,0)
 N KMPUOUT
"RTN","KMPDUG2",87,0)
 W @IOF
"RTN","KMPDUG2",88,0)
 W !,"A: Angle data titles..:  Angle the titles (for Vertical Graphs only)."
"RTN","KMPDUG2",89,0)
 W !,"               Example:    __________"
"RTN","KMPDUG2",90,0)
 W !,"                           |        |"
"RTN","KMPDUG2",91,0)
 W !,"                           |        |"
"RTN","KMPDUG2",92,0)
 W !,"                           |        |"
"RTN","KMPDUG2",93,0)
 W !,"                           __________"
"RTN","KMPDUG2",94,0)
 W !,"                           J  F  M  A"
"RTN","KMPDUG2",95,0)
 W !,"                            a  e  a  p"
"RTN","KMPDUG2",96,0)
 W !,"                             n  b  r  r"
"RTN","KMPDUG2",97,0)
 W !
"RTN","KMPDUG2",98,0)
 W !,"D: Double space data..: Will place an empty column/row between graph bars"
"RTN","KMPDUG2",99,0)
 W !,"                        (it is highly recommended that double spacing be used"
"RTN","KMPDUG2",100,0)
 W !,"                        with Vertical graphs)."
"RTN","KMPDUG2",101,0)
 W !
"RTN","KMPDUG2",102,0)
 W !,"G: Grid...............: Print grid lines on graph."
"RTN","KMPDUG2",103,0)
 W !,"               example:   ______________________________"
"RTN","KMPDUG2",104,0)
 W !,"                     Jan  |    |    |    |    |    |    |"
"RTN","KMPDUG2",105,0)
 W !,"                     Feb  |    |    |    |    |    |    |"
"RTN","KMPDUG2",106,0)
 W !,"                     Mar  |    |    |    |    |    |    |"
"RTN","KMPDUG2",107,0)
 W !,"                     Apr  |    |    |    |    |    |    |"
"RTN","KMPDUG2",108,0)
 W !,"                          ______________________________"
"RTN","KMPDUG2",109,0)
 D FTR("",.KMPUOUT) Q:'KMPUOUT  W @IOF
"RTN","KMPDUG2",110,0)
 W !,"S: Scientific Notation: If values are 1000 or greater the graph will normally"
"RTN","KMPDUG2",111,0)
 W !,"                        display a description as...: (x10k),  (x100k), etc."
"RTN","KMPDUG2",112,0)
 W !,"                      - Scientific notation will be: (x10^2), (x10^3), etc."
"RTN","KMPDUG2",113,0)
 W !
"RTN","KMPDUG2",114,0)
 W !,"V: Vertical graph.....: The default is horizontal display."
"RTN","KMPDUG2",115,0)
 W !,"                      - Selecting this option will display data vertically"
"RTN","KMPDUG2",116,0)
 W !,"                        (graph bars running top to bottom)."
"RTN","KMPDUG2",117,0)
 D FTR("Press <RET> to continue: ") W @IOF,!!!
"RTN","KMPDUG2",118,0)
 Q
"RTN","KMPDUG2",119,0)
 ;
"RTN","KMPDUG2",120,0)
OPT ;list of options
"RTN","KMPDUG2",121,0)
 ;;A;Angle data titles (vertical graph only).
"RTN","KMPDUG2",122,0)
 ;;D;Double space data.
"RTN","KMPDUG2",123,0)
 ;;G;Grid.
"RTN","KMPDUG2",124,0)
 ;;S;Scientific Notation.
"RTN","KMPDUG2",125,0)
 ;;V;Vertical graph.
"RTN","KMPDUGV")
0^39^B6896463^B6896463
"RTN","KMPDUGV",1,0)
KMPDUGV ;OAK/RAK - CM Tools Vertical Graph Utility ;2/17/04  10:00
"RTN","KMPDUGV",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDUGV",3,0)
 ;
"RTN","KMPDUGV",4,0)
EN ;-- entry point.
"RTN","KMPDUGV",5,0)
 D DRAW,TITLES,DATA W IOG0
"RTN","KMPDUGV",6,0)
 I $D(KMPUTAR) D  Q
"RTN","KMPDUGV",7,0)
 .;D WP^KMPDU11(KMPUTAR,5,24,(RIGHT+5),IOM,0,$G(KMPUXIT))
"RTN","KMPDUGV",8,0)
 .D WP^KMPDU11(KMPUTAR,18,22,5,IOM,0,$G(KMPUXIT))
"RTN","KMPDUGV",9,0)
 D:'KMPUXIT CONT^KMPDUG
"RTN","KMPDUGV",10,0)
 Q
"RTN","KMPDUGV",11,0)
 ;
"RTN","KMPDUGV",12,0)
DATA ;-- display data in graph.
"RTN","KMPDUGV",13,0)
 W IOG0 S DX=$S(KMPUOPT["D":9,1:10),BAR=0,I=""
"RTN","KMPDUGV",14,0)
 F  S I=$O(@KMPUAR@(I)) Q:I=""  I $D(@KMPUAR@(I,0)) S DATA=@KMPUAR@(I,0) D 
"RTN","KMPDUGV",15,0)
 .S XCOORD=$P(DATA,U,2),END=(XCOORD-KMPUSTRT) ;-STEP)
"RTN","KMPDUGV",16,0)
 .S DY=14,DX=DX+$S(KMPUOPT["D":2,1:1)
"RTN","KMPDUGV",17,0)
 .; if no data quit
"RTN","KMPDUGV",18,0)
 .Q:$P(@KMPUAR@(I,0),U,2)']""
"RTN","KMPDUGV",19,0)
 .F I1=0:STEP:END X IOXY W @BAR(BAR),! S DY=DY-1 Q:DY=5
"RTN","KMPDUGV",20,0)
 .S BAR=$S(BAR=1:0,1:1)
"RTN","KMPDUGV",21,0)
 Q
"RTN","KMPDUGV",22,0)
 ;
"RTN","KMPDUGV",23,0)
DRAW ;-- draw graph.
"RTN","KMPDUGV",24,0)
 S RIGHT=$S(KMPUOPT["D":(YNUM*2),1:(YNUM+1))+10
"RTN","KMPDUGV",25,0)
 W @IOF,!,IOG1 S DX=10
"RTN","KMPDUGV",26,0)
 ; draw left line
"RTN","KMPDUGV",27,0)
 F I=1:1:6 S DY=4+I X IOXY W IOVL S DY=15-I X IOXY W IOVL
"RTN","KMPDUGV",28,0)
 ; draw left top corner ;and bottom corners
"RTN","KMPDUGV",29,0)
 ;S DY=4 X IOXY W IOTLC ;S DY=15 X IOXY W IOBLC,!
"RTN","KMPDUGV",30,0)
 ; draw top and bottom lines
"RTN","KMPDUGV",31,0)
 ;F DX=(DX+1):1:(RIGHT-1) S DY=5 X IOXY W IOHL,! S DY=15 X IOXY W "s",!
"RTN","KMPDUGV",32,0)
 F DX=(DX+1):1:(RIGHT-1) S DY=14 X IOXY W "s",!
"RTN","KMPDUGV",33,0)
 ; draw right top corner ;and bottom corners
"RTN","KMPDUGV",34,0)
 ;S DX=RIGHT,DY=5 X IOXY W IOTRC ;S DY=15 X IOXY W IOBRC,!
"RTN","KMPDUGV",35,0)
 ; draw right line
"RTN","KMPDUGV",36,0)
 S DX=RIGHT F I=1:1:6 S DY=4+I X IOXY W IOVL S DY=16-I X IOXY W IOVL
"RTN","KMPDUGV",37,0)
 ; draw 'hash marks' on left line for relative values
"RTN","KMPDUGV",38,0)
 S DX=9,DY=14 X IOXY W "s",! ;W IOLT,!
"RTN","KMPDUGV",39,0)
 F DY=13:-1:4 X IOXY W "s",! ;W IOMT,!
"RTN","KMPDUGV",40,0)
 ; print grid
"RTN","KMPDUGV",41,0)
 I KMPUOPT["G" F DY=14:-1:4 F DX=11:1:(RIGHT-1) X IOXY W "s",!
"RTN","KMPDUGV",42,0)
 W IOG0
"RTN","KMPDUGV",43,0)
 Q
"RTN","KMPDUGV",44,0)
 ;
"RTN","KMPDUGV",45,0)
TITLES ;-- print graph titles.
"RTN","KMPDUGV",46,0)
 W IOG0
"RTN","KMPDUGV",47,0)
 ; print first and second line of title
"RTN","KMPDUGV",48,0)
 S DX=(IOM-$L($P(TITLE,U))\2+1),DY=0 X IOXY W $P(TITLE,U),!
"RTN","KMPDUGV",49,0)
 S DX=(IOM-$L($P(TITLE,U,2))\2+1),DY=1 X IOXY W $P(TITLE,U,2),!
"RTN","KMPDUGV",50,0)
 ; print x title at bottom
"RTN","KMPDUGV",51,0)
 S DX=(10-$L(XTITLE)),DY=3 X IOXY W IOUON,XTITLE,IOUOFF
"RTN","KMPDUGV",52,0)
 ; if div>1 write (x div)
"RTN","KMPDUGV",53,0)
 W:DIV>1 " <x",DIVT,">"
"RTN","KMPDUGV",54,0)
 W !
"RTN","KMPDUGV",55,0)
 ; print y title
"RTN","KMPDUGV",56,0)
 S DY=15,DX=$S(KMPUOPT["A":1,1:2)
"RTN","KMPDUGV",57,0)
 F I=1:1:8 D 
"RTN","KMPDUGV",58,0)
 .X IOXY W IOUON,$E(YTITLE,I),IOUOFF,! S DY=DY+1
"RTN","KMPDUGV",59,0)
 .I KMPUOPT["A" S DX=DX+1
"RTN","KMPDUGV",60,0)
 ; print relative values next to hash marks
"RTN","KMPDUGV",61,0)
 S NUM=(SCALE+KMPUSTRT)
"RTN","KMPDUGV",62,0)
 S DY=14,DX=9-$L($FN((KMPUSTRT/DIV),"",DEC1))
"RTN","KMPDUGV",63,0)
 X IOXY W $FN((KMPUSTRT/DIV),"",DEC1),!
"RTN","KMPDUGV",64,0)
 F DY=13:-1:4 D 
"RTN","KMPDUGV",65,0)
 .S DX=(9-$L($FN((NUM/DIV),"",DEC1)))
"RTN","KMPDUGV",66,0)
 .X IOXY W $FN((NUM/DIV),"",DEC1),! S NUM=NUM+SCALE
"RTN","KMPDUGV",67,0)
 ; print data titles
"RTN","KMPDUGV",68,0)
 S ZDX=11,I=""
"RTN","KMPDUGV",69,0)
 F  S I=$O(@KMPUAR@(I)) Q:I=""  I $D(@KMPUAR@(I,0)) D 
"RTN","KMPDUGV",70,0)
 .S YTITLE=$E($P(@KMPUAR@(I,0),U),1,14),DX=ZDX
"RTN","KMPDUGV",71,0)
 .I KMPUOPT["A" F I1=1:1:8 S DY=14+I1 X IOXY W $E(YTITLE,I1),! S DX=DX+1
"RTN","KMPDUGV",72,0)
 .I KMPUOPT'["A" F I1=1:1:8 S DY=14+I1 X IOXY W $E(YTITLE,I1),!
"RTN","KMPDUGV",73,0)
 .S ZDX=ZDX+$S(KMPUOPT["D":2,1:1)
"RTN","KMPDUGV",74,0)
 Q
"RTN","KMPDUT")
0^40^B82480^B82480
"RTN","KMPDUT",1,0)
KMPDUT ;OAK/RAK - CM Tools Utility ;2/17/04  10:45
"RTN","KMPDUT",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDUT",3,0)
 ;
"RTN","KMPDUT",4,0)
PARAMS(KMPDARRY) ;-- cp parameters file data
"RTN","KMPDUT",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUT",6,0)
 ; KMPDARRY... Array (called by name) that will contain data from file
"RTN","KMPDUT",7,0)
 ;             #8973 (CP PARAMETERS).  This will be returned in internal 
"RTN","KMPDUT",8,0)
 ;             format
"RTN","KMPDUT",9,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUT",10,0)
 ;
"RTN","KMPDUT",11,0)
 Q:$G(KMPDARRY)=""
"RTN","KMPDUT",12,0)
 M @KMPDARRY=^KMPD(8973,1)
"RTN","KMPDUT",13,0)
 Q
"RTN","KMPDUT1")
0^41^B4718329^B4718329
"RTN","KMPDUT1",1,0)
KMPDUT1 ;OAK/RAK - Test Lab Utility ;6/21/05  10:17
"RTN","KMPDUT1",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDUT1",3,0)
 ;
"RTN","KMPDUT1",4,0)
TL ;-entry point for setting up database as a test lab
"RTN","KMPDUT1",5,0)
 ;
"RTN","KMPDUT1",6,0)
 ; patch "KMPR*2.0*2" must be installed
"RTN","KMPDUT1",7,0)
 I '$$PATCH^XPDUTL("KMPR*2.0*2") D  Q
"RTN","KMPDUT1",8,0)
 .W !?3,"Patch 'KMPR*2.0*2' must be installed to run this routine!",!!
"RTN","KMPDUT1",9,0)
 ;
"RTN","KMPDUT1",10,0)
 N DIR,ERROR,IEN,FDA,ROUTINE,X,Y,Z
"RTN","KMPDUT1",11,0)
 S DIR(0)="YO",DIR("B")="N"
"RTN","KMPDUT1",12,0)
 S DIR("A")="Do you want to set this up as a Test Lab database for Capacity Planning"
"RTN","KMPDUT1",13,0)
 W ! D ^DIR
"RTN","KMPDUT1",14,0)
 I 'Y W !!?3,$C(7),"No action taken!" Q
"RTN","KMPDUT1",15,0)
 ;
"RTN","KMPDUT1",16,0)
 W !!?3,"Setting up database..."
"RTN","KMPDUT1",17,0)
 S ^KMPD(8973,"TEST LAB")=1
"RTN","KMPDUT1",18,0)
 W "done"
"RTN","KMPDUT1",19,0)
 S IEN=$O(^KMPD(8973,0)) Q:'IEN
"RTN","KMPDUT1",20,0)
 W !
"RTN","KMPDUT1",21,0)
 W !?3,"Updating RUM Weeks to Keep Data = 99 ..."
"RTN","KMPDUT1",22,0)
 W !?3,"         HL7 Weeks to Keep Data = 99 ..."
"RTN","KMPDUT1",23,0)
 W !?3,"         Timing Weeks to Keep Data = 99 ..."
"RTN","KMPDUT1",24,0)
 S FDA($J,8973,IEN_",",2.11)=99
"RTN","KMPDUT1",25,0)
 S FDA($J,8973,IEN_",",3.11)=99
"RTN","KMPDUT1",26,0)
 S FDA($J,8973,IEN_",",4.11)=99
"RTN","KMPDUT1",27,0)
 D FILE^DIE("","FDA($J)","ERROR")
"RTN","KMPDUT1",28,0)
 I $D(ERROR) D MSG^DIALOG("W","",60,10,"ERROR")
"RTN","KMPDUT1",29,0)
 W "done"
"RTN","KMPDUT1",30,0)
 W !
"RTN","KMPDUT1",31,0)
 W !?3,"Saving ZOSVKRT as %ZOSVKR ..."
"RTN","KMPDUT1",32,0)
 D ROUINQ^KMPDU2(.ROUTINE,"ZOSVKRT")
"RTN","KMPDUT1",33,0)
 D:$D(ROUTINE) ROUSAVE^KMPDU3(.Z,"%ZOSVKR",.ROUTINE)
"RTN","KMPDUT1",34,0)
 W "done"
"RTN","KMPDUT1",35,0)
 W !
"RTN","KMPDUT1",36,0)
 W !?3,"Deleting old ^KMPTMP(""KMPR"" data..."
"RTN","KMPDUT1",37,0)
 K ^KMPTMP("KMPR")
"RTN","KMPDUT1",38,0)
 W "done"
"RTN","KMPDUT1",39,0)
 S IEN=$O(^DIC(4.2,"B","FO-ALBANY.domain.ext",0))
"RTN","KMPDUT1",40,0)
 I IEN D 
"RTN","KMPDUT1",41,0)
 .K FDA,ERROR
"RTN","KMPDUT1",42,0)
 .W !!?3,"Setting FLAGS to SEND for domain FO-ALBANY.domain.ext..."
"RTN","KMPDUT1",43,0)
 .S FDA($J,4.2,IEN_",",1)="S"
"RTN","KMPDUT1",44,0)
 .D FILE^DIE("","FDA($J)","ERROR")
"RTN","KMPDUT1",45,0)
 .D:$D(ROUTINE) ROUSAVE^KMPDU3(.Z,"%ZOSVKR",.ROUTINE)
"RTN","KMPDUT1",46,0)
 .W "done"
"RTN","KMPDUT1",47,0)
 ;
"RTN","KMPDUT1",48,0)
 W !!?3,"*** This is now a Capacity Planning Test Lab database ***"
"RTN","KMPDUT1",49,0)
 ;
"RTN","KMPDUT1",50,0)
 Q
"RTN","KMPDUT1",51,0)
 ;
"RTN","KMPDUT1",52,0)
TESTLAB() ;-extrinsic - test for test lab database
"RTN","KMPDUT1",53,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDUT1",54,0)
 ; return: "0" - not a test lab database
"RTN","KMPDUT1",55,0)
 ;         "1^TESTLAB-" - it is a test lab database 
"RTN","KMPDUT1",56,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPDUT1",57,0)
 N TL
"RTN","KMPDUT1",58,0)
 S TL=+$G(^KMPD(8973,"TEST LAB"))
"RTN","KMPDUT1",59,0)
 Q $S('TL:0,1:"1^TESTLAB-")
"RTN","KMPDUT2")
0^42^B29831433^B30234427
"RTN","KMPDUT2",1,0)
KMPDUT2 ;OAK/RAK - CM Tools Utility ;2/17/04  10:45
"RTN","KMPDUT2",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDUT2",3,0)
 ;
"RTN","KMPDUT2",4,0)
ID(KMPDIEN) ;--called from ^DD(8973.1,0,"ID","W")
"RTN","KMPDUT2",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUT2",6,0)
 ; KMPDIEN... Ien for file #8973.1 (CM HL7 DATA)
"RTN","KMPDUT2",7,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUT2",8,0)
 Q:'$G(KMPDIEN)
"RTN","KMPDUT2",9,0)
 Q:'$D(^KMPD(8973.1,+KMPDIEN,0))
"RTN","KMPDUT2",10,0)
 N DATA,TXT
"RTN","KMPDUT2",11,0)
 S DATA=$G(^KMPD(8973.1,+KMPDIEN,0)),DATA(99.2)=$G(^(99.2)) Q:DATA=""
"RTN","KMPDUT2",12,0)
 ; sent to national database
"RTN","KMPDUT2",13,0)
 S TXT(1)=$S($P(DATA,U,2):"sent",1:"not sent")
"RTN","KMPDUT2",14,0)
 S TXT(1)=TXT(1)_$J(" ",11-$L(TXT(1)))
"RTN","KMPDUT2",15,0)
 ; namespace
"RTN","KMPDUT2",16,0)
 S TXT(1)=TXT(1)_$P(DATA,U,3)
"RTN","KMPDUT2",17,0)
 S TXT(1)=TXT(1)_$J(" ",18-$L(TXT(1)))
"RTN","KMPDUT2",18,0)
 ; protocol
"RTN","KMPDUT2",19,0)
 S TXT(1)=TXT(1)_$P(DATA,U,5)
"RTN","KMPDUT2",20,0)
 S TXT(1)=TXT(1)_$J(" ",52-$L(TXT(1)))
"RTN","KMPDUT2",21,0)
 ; synch/asynch
"RTN","KMPDUT2",22,0)
 S TXT(1)=TXT(1)_$S($P(DATA,U,6)=1:"sync",1:"async")
"RTN","KMPDUT2",23,0)
 ; other site number
"RTN","KMPDUT2",24,0)
 I $P(DATA(99.2),U,12)'="" D 
"RTN","KMPDUT2",25,0)
 .S TXT(2)=$P(DATA(99.2),U,12)
"RTN","KMPDUT2",26,0)
 .S TXT(2,"F")="!?41"
"RTN","KMPDUT2",27,0)
 S TXT(1,"F")="?15"
"RTN","KMPDUT2",28,0)
 D EN^DDIOL(.TXT)
"RTN","KMPDUT2",29,0)
 Q
"RTN","KMPDUT2",30,0)
 ;
"RTN","KMPDUT2",31,0)
ID1(KMPDIEN) ;--called from ^DD(8973.2,0,"ID","W")
"RTN","KMPDUT2",32,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUT2",33,0)
 ; KMPDIEN... Ien for file #8973.2 (CM TIMING)
"RTN","KMPDUT2",34,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUT2",35,0)
 Q:'$G(KMPDIEN)
"RTN","KMPDUT2",36,0)
 Q:'$D(^KMPD(8973.2,+KMPDIEN,0))
"RTN","KMPDUT2",37,0)
 N DATA,TXT
"RTN","KMPDUT2",38,0)
 S DATA=$G(^KMPD(8973.2,+KMPDIEN,0)) Q:DATA=""
"RTN","KMPDUT2",39,0)
 S TXT(1)=""
"RTN","KMPDUT2",40,0)
 ; date/time
"RTN","KMPDUT2",41,0)
 S TXT(1)=TXT(1)_$$FMTE^XLFDT($P(DATA,U,3),2)
"RTN","KMPDUT2",42,0)
 S TXT(1)=TXT(1)_$J(" ",18-$L(TXT(1)))
"RTN","KMPDUT2",43,0)
 ; title
"RTN","KMPDUT2",44,0)
 S TXT(1.1)=$P(DATA,U,8)
"RTN","KMPDUT2",45,0)
 ; client name
"RTN","KMPDUT2",46,0)
 S TXT(2)="client: "_$E($P(DATA,U,6),1,30)
"RTN","KMPDUT2",47,0)
 ; person
"RTN","KMPDUT2",48,0)
 S TXT(3)="pers  : "_$P($G(^VA(200,+$P(DATA,U,5),0)),U)
"RTN","KMPDUT2",49,0)
 ; sent to national database
"RTN","KMPDUT2",50,0)
 S TXT(4)="daily : "_$S($P(DATA,U,10):"sent",1:"not sent")
"RTN","KMPDUT2",51,0)
 ;S TXT(1)=TXT(1)_$J(" ",11-$L(TXT(1)))
"RTN","KMPDUT2",52,0)
 S TXT(1,"F")="?45"
"RTN","KMPDUT2",53,0)
 S TXT(1.1,"F")="!?38"
"RTN","KMPDUT2",54,0)
 S TXT(2,"F")="!?38"
"RTN","KMPDUT2",55,0)
 S TXT(3,"F")="!?38"
"RTN","KMPDUT2",56,0)
 S TXT(4,"F")="!?38"
"RTN","KMPDUT2",57,0)
 D EN^DDIOL(.TXT)
"RTN","KMPDUT2",58,0)
 Q
"RTN","KMPDUT2",59,0)
 ;
"RTN","KMPDUT2",60,0)
XREF(DA,X,KMPDTYPE) ;-set/kill 'APTDTNM' xref in file #8973.1
"RTN","KMPDUT2",61,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUT2",62,0)
 ; DA....... Ien for file #8973.1 (CM HL7 DATA)
"RTN","KMPDUT2",63,0)
 ; X........ Value of field #.05 (PROTOCOL)
"RTN","KMPDUT2",64,0)
 ; KMPDTYPE. 1 - set xref
"RTN","KMPDUT2",65,0)
 ;           2 - kill xref
"RTN","KMPDUT2",66,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUT2",67,0)
 Q:'$G(DA)
"RTN","KMPDUT2",68,0)
 Q:$G(X)=""
"RTN","KMPDUT2",69,0)
 Q:'$G(KMPDTYPE)
"RTN","KMPDUT2",70,0)
 N DATA,DATE,NM
"RTN","KMPDUT2",71,0)
 S DATA=$G(^KMPD(8973.1,DA,0)) Q:DATA=""
"RTN","KMPDUT2",72,0)
 S DATE=$P(DATA,U) Q:'DATE
"RTN","KMPDUT2",73,0)
 S NM=$P(DATA,U,3) Q:NM=""
"RTN","KMPDUT2",74,0)
 I KMPDTYPE=1 S ^KMPD(8973.1,"APTDTNM",X,DATE,NM,DA)=""
"RTN","KMPDUT2",75,0)
 I KMPDTYPE=2 K ^KMPD(8973.1,"APTDTNM",X,DATE,NM,DA)
"RTN","KMPDUT2",76,0)
 Q
"RTN","KMPDUT2",77,0)
 ;
"RTN","KMPDUT2",78,0)
XREF1(DA,X,KMPDTYPE) ;-set/kill 'ACSDTPRNM' xref in file #8973.1
"RTN","KMPDUT2",79,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUT2",80,0)
 ; DA....... Ien for file #8973.1 (CM HL7 DATA)
"RTN","KMPDUT2",81,0)
 ; X........ Value of field #99.212 (CONTACTED SITE NAME)
"RTN","KMPDUT2",82,0)
 ; KMPDTYPE. 1 - set xref
"RTN","KMPDUT2",83,0)
 ;           2 - kill xref
"RTN","KMPDUT2",84,0)
 ;
"RTN","KMPDUT2",85,0)
 ; variables used:
"RTN","KMPDUT2",86,0)
 ; DATE.. Internal value of field #.01 (DATE)
"RTN","KMPDUT2",87,0)
 ; NM.... Internal value of field #.03 (NAMESPACE)
"RTN","KMPDUT2",88,0)
 ; PR.... Internal value of field #.05 (PROTOCOL)
"RTN","KMPDUT2",89,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUT2",90,0)
 Q:'$G(DA)
"RTN","KMPDUT2",91,0)
 Q:$G(X)=""
"RTN","KMPDUT2",92,0)
 Q:'$G(KMPDTYPE)
"RTN","KMPDUT2",93,0)
 N DATA,DATE,NM,PR
"RTN","KMPDUT2",94,0)
 S DATA=$G(^KMPD(8973.1,DA,0)) Q:DATA=""
"RTN","KMPDUT2",95,0)
 S DATE=$P(DATA,U) Q:'DATE
"RTN","KMPDUT2",96,0)
 S NM=$P(DATA,U,3) Q:NM=""
"RTN","KMPDUT2",97,0)
 S PR=$P(DATA,U,5) Q:PR=""
"RTN","KMPDUT2",98,0)
 I KMPDTYPE=1 S ^KMPD(8973.1,"ACSDTPRNM",X,DATE,PR,NM,DA)=""
"RTN","KMPDUT2",99,0)
 I KMPDTYPE=2 K ^KMPD(8973.1,"ACSDTPRNM",X,DATE,PR,NM,DA)
"RTN","KMPDUT2",100,0)
 Q
"RTN","KMPDUT2",101,0)
 ;
"RTN","KMPDUT2",102,0)
XREF2(DA,X,KMPDTYPE) ;-set/kill 'ASYNC' xref in file #8973.1
"RTN","KMPDUT2",103,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUT2",104,0)
 ; DA....... Ien for file #8973.1 (CM HL7 DATA)
"RTN","KMPDUT2",105,0)
 ; X........ Value of field #.06 (SYNC/ASYNC)
"RTN","KMPDUT2",106,0)
 ; KMPDTYPE. 1 - set xref
"RTN","KMPDUT2",107,0)
 ;           2 - kill xref
"RTN","KMPDUT2",108,0)
 ;
"RTN","KMPDUT2",109,0)
 ; variables used:
"RTN","KMPDUT2",110,0)
 ; DATE.. Internal value of field #.01 (DATE)
"RTN","KMPDUT2",111,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUT2",112,0)
 Q:'$G(DA)
"RTN","KMPDUT2",113,0)
 Q:$G(X)=""
"RTN","KMPDUT2",114,0)
 Q:'$G(KMPDTYPE)
"RTN","KMPDUT2",115,0)
 N DATA,DATE
"RTN","KMPDUT2",116,0)
 S DATA=$G(^KMPD(8973.1,DA,0)) Q:DATA=""
"RTN","KMPDUT2",117,0)
 S DATE=$P(DATA,U) Q:'DATE
"RTN","KMPDUT2",118,0)
 I KMPDTYPE=1 S ^KMPD(8973.1,"ASYNC",DATE,X,DA)=""
"RTN","KMPDUT2",119,0)
 I KMPDTYPE=2 K ^KMPD(8973.1,"ASYNC",DATE,X,DA)
"RTN","KMPDUT2",120,0)
 Q
"RTN","KMPDUT2",121,0)
 ;
"RTN","KMPDUT2",122,0)
XREFT1(DA,X,KMPDTYPE) ;-set/kill 'ASVDTSS' xref in file #8973.2
"RTN","KMPDUT2",123,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUT2",124,0)
 ; DA....... Ien for file #8973.2 (CM TIMING)
"RTN","KMPDUT2",125,0)
 ; X........ Value of field #.07 (SERVER SUBSCRIPT)
"RTN","KMPDUT2",126,0)
 ; KMPDTYPE. 1 - set xref
"RTN","KMPDUT2",127,0)
 ;           2 - kill xref
"RTN","KMPDUT2",128,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUT2",129,0)
 Q:'$G(DA)
"RTN","KMPDUT2",130,0)
 Q:$G(X)=""
"RTN","KMPDUT2",131,0)
 Q:'$G(KMPDTYPE)
"RTN","KMPDUT2",132,0)
 N DATA,DATE
"RTN","KMPDUT2",133,0)
 S DATA=$G(^KMPD(8973.2,DA,0)) Q:DATA=""
"RTN","KMPDUT2",134,0)
 ; strip off time
"RTN","KMPDUT2",135,0)
 S DATE=$P($P(DATA,U,3),".") Q:'DATE
"RTN","KMPDUT2",136,0)
 I KMPDTYPE=1 S ^KMPD(8973.2,"ASVDTSS",X,DATE,DA)=""
"RTN","KMPDUT2",137,0)
 I KMPDTYPE=2 K ^KMPD(8973.2,"ASVDTSS",X,DATE,DA)
"RTN","KMPDUT2",138,0)
 Q
"RTN","KMPDUT2",139,0)
 ;
"RTN","KMPDUT2",140,0)
XREFT2(DA,X,KMPDTYPE) ;-set/kill 'ASSDTPT' xref in file #8973.2
"RTN","KMPDUT2",141,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUT2",142,0)
 ; DA....... Ien for file #8973.2 (CM TIMING)
"RTN","KMPDUT2",143,0)
 ; X........ Value of field #.07 (SERVER SUBSCRIPT)
"RTN","KMPDUT2",144,0)
 ; KMPDTYPE. 1 - set xref
"RTN","KMPDUT2",145,0)
 ;           2 - kill xref
"RTN","KMPDUT2",146,0)
 ;
"RTN","KMPDUT2",147,0)
 ; ^KMPD(8973.2,"ASSDTPT",ServerSubscript,ServerStartDate,PrimeTime,DA)
"RTN","KMPDUT2",148,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUT2",149,0)
 Q:'$G(DA)
"RTN","KMPDUT2",150,0)
 Q:$G(X)=""
"RTN","KMPDUT2",151,0)
 Q:'$G(KMPDTYPE)
"RTN","KMPDUT2",152,0)
 N DATA,DATE,PTNP
"RTN","KMPDUT2",153,0)
 S DATA=$G(^KMPD(8973.2,DA,0)) Q:DATA=""
"RTN","KMPDUT2",154,0)
 ; server start date/time
"RTN","KMPDUT2",155,0)
 S DATE=$P(DATA,U,3) Q:'DATE
"RTN","KMPDUT2",156,0)
 ; prime time / non-prime time
"RTN","KMPDUT2",157,0)
 S PTNP=$$PTNP^KMPDHU03(DATE) Q:'PTNP
"RTN","KMPDUT2",158,0)
 ; strip off time
"RTN","KMPDUT2",159,0)
 S DATE=$P(DATE,".") Q:'DATE
"RTN","KMPDUT2",160,0)
 I KMPDTYPE=1 S ^KMPD(8973.2,"ASSDTPT",X,DATE,PTNP,DA)=""
"RTN","KMPDUT2",161,0)
 I KMPDTYPE=2 K ^KMPD(8973.2,"ASSDTPT",X,DATE,PTNP,DA)
"RTN","KMPDUT2",162,0)
 Q
"RTN","KMPDUT2",163,0)
 ;
"RTN","KMPDUT2",164,0)
XREFT3(DA,X,KMPDTYPE) ;-set/kill 'ASSDTTM' xref in file #8973.2
"RTN","KMPDUT2",165,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUT2",166,0)
 ; DA....... Ien for file #8973.2 (CM TIMING)
"RTN","KMPDUT2",167,0)
 ; X........ Value of field #.07 (SERVER SUBSCRIPT)
"RTN","KMPDUT2",168,0)
 ; KMPDTYPE. 1 - set xref
"RTN","KMPDUT2",169,0)
 ;           2 - kill xref
"RTN","KMPDUT2",170,0)
 ;
"RTN","KMPDUT2",171,0)
 ; ^KMPD(8973.2,"ASSDTTM",ServerSubscript,ServerStartDate,PrimeTime,DA)
"RTN","KMPDUT2",172,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUT2",173,0)
 Q:'$G(DA)
"RTN","KMPDUT2",174,0)
 Q:$G(X)=""
"RTN","KMPDUT2",175,0)
 Q:'$G(KMPDTYPE)
"RTN","KMPDUT2",176,0)
 N DATA,DATE
"RTN","KMPDUT2",177,0)
 S DATA=$G(^KMPD(8973.2,DA,0)) Q:DATA=""
"RTN","KMPDUT2",178,0)
 ; server start date/time
"RTN","KMPDUT2",179,0)
 S DATE=$P(DATA,U,3) Q:'DATE
"RTN","KMPDUT2",180,0)
 I KMPDTYPE=1 S ^KMPD(8973.2,"ASSDTTM",X,DATE,DA)=""
"RTN","KMPDUT2",181,0)
 I KMPDTYPE=2 K ^KMPD(8973.2,"ASSDTTM",X,DATE,DA)
"RTN","KMPDUT2",182,0)
 Q
"RTN","KMPDUT2",183,0)
 ;
"RTN","KMPDUT2",184,0)
XREFT4(DA,X,KMPDTYPE) ;-set/kill 'ASSCLDTTM' xref in file #8973.2
"RTN","KMPDUT2",185,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUT2",186,0)
 ; DA....... Ien for file #8973.2 (CM TIMING)
"RTN","KMPDUT2",187,0)
 ; X........ Value of field #.07 (KMPTMP SUBSCRIPT)
"RTN","KMPDUT2",188,0)
 ; KMPDTYPE. 1 - set xref
"RTN","KMPDUT2",189,0)
 ;           2 - kill xref
"RTN","KMPDUT2",190,0)
 ;
"RTN","KMPDUT2",191,0)
 ; ^KMPD(8973.2,"ASSCLDTTM",KmptmpSubscript,ClientName,ServerDateTime,DA)
"RTN","KMPDUT2",192,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUT2",193,0)
 Q:'$G(DA)
"RTN","KMPDUT2",194,0)
 Q:$G(X)=""
"RTN","KMPDUT2",195,0)
 Q:'$G(KMPDTYPE)
"RTN","KMPDUT2",196,0)
 N CLNM,DATA,DATE
"RTN","KMPDUT2",197,0)
 S DATA=$G(^KMPD(8973.2,DA,0)) Q:DATA=""
"RTN","KMPDUT2",198,0)
 ; server start date/time
"RTN","KMPDUT2",199,0)
 S DATE=$P(DATA,U,3) Q:'DATE
"RTN","KMPDUT2",200,0)
 ; client name
"RTN","KMPDUT2",201,0)
 S CLNM=$P(DATA,U,6) Q:CLNM=""
"RTN","KMPDUT2",202,0)
 I KMPDTYPE=1 S ^KMPD(8973.2,"ASSCLDTTM",X,CLNM,DATE,DA)=""
"RTN","KMPDUT2",203,0)
 I KMPDTYPE=2 K ^KMPD(8973.2,"ASSCLDTTM",X,CLNM,DATE,DA)
"RTN","KMPDUT2",204,0)
 Q
"RTN","KMPDUT2",205,0)
XREFT5(DA,X,KMPDTYPE) ;-set/kill 'ASSNPDTTM' xref in file #8973.2
"RTN","KMPDUT2",206,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUT2",207,0)
 ; DA....... Ien for file #8973.2 (CM TIMING)
"RTN","KMPDUT2",208,0)
 ; X........ Value of field #.07 (KMPTMP SUBSCRIPT)
"RTN","KMPDUT2",209,0)
 ; KMPDTYPE. 1 - set xref
"RTN","KMPDUT2",210,0)
 ;           2 - kill xref
"RTN","KMPDUT2",211,0)
 ;
"RTN","KMPDUT2",212,0)
 ; ^KMPD(8973.2,"ASSNPDTTM",KmptmpSubscript,NewPerson,ServerDateTime,DA)
"RTN","KMPDUT2",213,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUT2",214,0)
 Q:'$G(DA)
"RTN","KMPDUT2",215,0)
 Q:$G(X)=""
"RTN","KMPDUT2",216,0)
 Q:'$G(KMPDTYPE)
"RTN","KMPDUT2",217,0)
 N NP,DATA,DATE
"RTN","KMPDUT2",218,0)
 S DATA=$G(^KMPD(8973.2,DA,0)) Q:DATA=""
"RTN","KMPDUT2",219,0)
 ; server start date/time
"RTN","KMPDUT2",220,0)
 S DATE=$P(DATA,U,3) Q:'DATE
"RTN","KMPDUT2",221,0)
 ; new person
"RTN","KMPDUT2",222,0)
 S NP=$P(DATA,U,5) Q:NP=""
"RTN","KMPDUT2",223,0)
 I KMPDTYPE=1 S ^KMPD(8973.2,"ASSNPDTTM",X,NP,DATE,DA)=""
"RTN","KMPDUT2",224,0)
 I KMPDTYPE=2 K ^KMPD(8973.2,"ASSNPDTTM",X,NP,DATE,DA)
"RTN","KMPDUT2",225,0)
 Q
"RTN","KMPDUT2",226,0)
 ;
"RTN","KMPDUT2",227,0)
XREFT6(DA,X,KMPDTYPE) ;-set/kill 'ASSIPDTTM' xref in file #8973.2
"RTN","KMPDUT2",228,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUT2",229,0)
 ; DA....... Ien for file #8973.2 (CM TIMING)
"RTN","KMPDUT2",230,0)
 ; X........ Value of field #.07 (KMPTMP SUBSCRIPT)
"RTN","KMPDUT2",231,0)
 ; KMPDTYPE. 1 - set xref
"RTN","KMPDUT2",232,0)
 ;           2 - kill xref
"RTN","KMPDUT2",233,0)
 ;
"RTN","KMPDUT2",234,0)
 ; ^KMPD(8973.2,"ASSIPDTTM",KmptmpSubscript,IpAddress,ServerDateTime,DA)
"RTN","KMPDUT2",235,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUT2",236,0)
 Q:'$G(DA)
"RTN","KMPDUT2",237,0)
 Q:$G(X)=""
"RTN","KMPDUT2",238,0)
 Q:'$G(KMPDTYPE)
"RTN","KMPDUT2",239,0)
 N IP,DATA,DATE
"RTN","KMPDUT2",240,0)
 S DATA=$G(^KMPD(8973.2,DA,0)) Q:DATA=""
"RTN","KMPDUT2",241,0)
 ; server start date/time
"RTN","KMPDUT2",242,0)
 S DATE=$P(DATA,U,3) Q:'DATE
"RTN","KMPDUT2",243,0)
 ; ip address
"RTN","KMPDUT2",244,0)
 S IP=$P(DATA,U,9) Q:IP=""
"RTN","KMPDUT2",245,0)
 I KMPDTYPE=1 S ^KMPD(8973.2,"ASSIPDTTM",X,IP,DATE,DA)=""
"RTN","KMPDUT2",246,0)
 I KMPDTYPE=2 K ^KMPD(8973.2,"ASSIPDTTM",X,IP,DATE,DA)
"RTN","KMPDUT2",247,0)
 Q
"RTN","KMPDUT4")
0^43^B6870660^B6870660
"RTN","KMPDUT4",1,0)
KMPDUT4 ;OAK/RAK; Multi-Lookup ;2/17/04  10:46
"RTN","KMPDUT4",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDUT4",3,0)
 ;
"RTN","KMPDUT4",4,0)
SELECT(ARRAY,SORT,MAX,OPTION) ;select one or more entries
"RTN","KMPDUT4",5,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUT4",6,0)
 ;  this routine lets user select one or more entries from a file
"RTN","KMPDUT4",7,0)
 ;
"RTN","KMPDUT4",8,0)
 ;    ARRAY - the array the data is to be stored in
"RTN","KMPDUT4",9,0)
 ;            this may be a local or global array
"RTN","KMPDUT4",10,0)
 ;            ARRAY(0) - will contain the number of entries selected
"RTN","KMPDUT4",11,0)
 ;
"RTN","KMPDUT4",12,0)
 ;     SORT - determines how the array is set
"RTN","KMPDUT4",13,0)
 ;            0 - internal file number
"RTN","KMPDUT4",14,0)
 ;            1 - first piece of zero node
"RTN","KMPDUT4",15,0)
 ;
"RTN","KMPDUT4",16,0)
 ;            if zero then ARRAY(internal_number)=external_format
"RTN","KMPDUT4",17,0)
 ;            if one then  ARRAY(external_format)=internal_number
"RTN","KMPDUT4",18,0)
 ;
"RTN","KMPDUT4",19,0)
 ;            internal_number - the internal file number selected
"RTN","KMPDUT4",20,0)
 ;            external_format - the first piece of the zero node or
"RTN","KMPDUT4",21,0)
 ;                              Y(0,0)
"RTN","KMPDUT4",22,0)
 ;
"RTN","KMPDUT4",23,0)
 ;      MAX - if defined this represents the maximum number of entries
"RTN","KMPDUT4",24,0)
 ;            to stuff into array
"RTN","KMPDUT4",25,0)
 ;            - if '*' is selected and the number of file entries
"RTN","KMPDUT4",26,0)
 ;              exceeds this number the array will be killed and
"RTN","KMPDUT4",27,0)
 ;              ARRAY(0) will be equal to "*"
"RTN","KMPDUT4",28,0)
 ;            - if while selecting one entry at a time the number
"RTN","KMPDUT4",29,0)
 ;              of entries is equal to MAX the routine will quit with
"RTN","KMPDUT4",30,0)
 ;              the entries stored as usual and ARRAY(0)=MAX
"RTN","KMPDUT4",31,0)
 ;            this is to prevent partition store errors with local
"RTN","KMPDUT4",32,0)
 ;            arrays or setting a global equal all the patients in
"RTN","KMPDUT4",33,0)
 ;            the patient file
"RTN","KMPDUT4",34,0)
 ;
"RTN","KMPDUT4",35,0)
 ;   OPTION - selected options
"RTN","KMPDUT4",36,0)
 ;            S - suppress asterisk (*)   ;'(* for All)' prompt
"RTN","KMPDUT4",37,0)
 ;            W - allow selected wildcards
"RTN","KMPDUT4",38,0)
 ;                example:  A*     - will select all entries beginning
"RTN","KMPDUT4",39,0)
 ;                                   with the letter 'A'
"RTN","KMPDUT4",40,0)
 ;                          SMITH* - will select all entries beginning
"RTN","KMPDUT4",41,0)
 ;                                   with 'SMITH'
"RTN","KMPDUT4",42,0)
 ;
"RTN","KMPDUT4",43,0)
 ;      DIC - this variable must be defined in the normal fileman
"RTN","KMPDUT4",44,0)
 ;            format
"RTN","KMPDUT4",45,0)
 ; DIC("A") - this variable should be defined
"RTN","KMPDUT4",46,0)
 ;            the string " (* for All)" will be concatenated to the end
"RTN","KMPDUT4",47,0)
 ; DIC("S") - may be defined if necessary and will be honored
"RTN","KMPDUT4",48,0)
 ;   DIC(0) - *** IMPORTANT ***
"RTN","KMPDUT4",49,0)
 ;            this will be set to DIC(0)="EQZ" for the purposes of
"RTN","KMPDUT4",50,0)
 ;            this routine
"RTN","KMPDUT4",51,0)
 ;
"RTN","KMPDUT4",52,0)
 ;  example:  S DIC=4,DIC("A")="Select Institution: "
"RTN","KMPDUT4",53,0)
 ;            D SELECT^KMPDUT4("^TMP($J,")
"RTN","KMPDUT4",54,0)
 ;            D SELECT^KMPDUT4("LOCAL",1,20)
"RTN","KMPDUT4",55,0)
 ;            D SELECT^KMPDUT4("LOCAL($J)",1,0,"W")
"RTN","KMPDUT4",56,0)
 ;
"RTN","KMPDUT4",57,0)
 ;            *** It is the programmers responsibility kill ***
"RTN","KMPDUT4",58,0)
 ;            ***    'ARRAY' when finished with the data    ***
"RTN","KMPDUT4",59,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUT4",60,0)
 I $$CHECK^KMPDUT4A D FTR^KMPDUTL4("Press <RET> to continue") Q
"RTN","KMPDUT4",61,0)
 S OPTION=$$UP^XLFSTR($G(OPTION))
"RTN","KMPDUT4",62,0)
 S SORT=+$G(SORT),MAX=+$G(MAX) S:SORT'=1 SORT=0
"RTN","KMPDUT4",63,0)
 I MAX=1,(OPTION'["S") S OPTION=OPTION_"S"
"RTN","KMPDUT4",64,0)
 S DIC(0)="EMQZ",DTIME=$S($G(DTIME):DTIME,1:600)
"RTN","KMPDUT4",65,0)
 I $G(DIC("A"))'["(* for All): ",(OPTION'["S") D 
"RTN","KMPDUT4",66,0)
 .S DIC("A")=$G(DIC("A"))_" (* for All): "
"RTN","KMPDUT4",67,0)
 K @ARRAY F  D  Q:X=""!(X="^")
"RTN","KMPDUT4",68,0)
 .I MAX,(+$G(@ARRAY@(0))=MAX) S X="" Q
"RTN","KMPDUT4",69,0)
 .W !
"RTN","KMPDUT4",70,0)
 .I '$D(@ARRAY) W DIC("A")
"RTN","KMPDUT4",71,0)
 .E  W $J(" ",$L(DIC("A"))-12),"...another: "
"RTN","KMPDUT4",72,0)
 .R X:DTIME Q:X=""!(X="^")
"RTN","KMPDUT4",73,0)
 .I X="*",(MAX=1) D  Q
"RTN","KMPDUT4",74,0)
 ..W *7,!!?7,"...you are allowed only one selection...",!
"RTN","KMPDUT4",75,0)
 .I X="*",(OPTION["S") D  Q
"RTN","KMPDUT4",76,0)
 ..W *7,!!?7,"...'*' not allowed...",!
"RTN","KMPDUT4",77,0)
 .I X="*" D ALL^KMPDUT4B S X="" Q
"RTN","KMPDUT4",78,0)
 .I $E(X)="-" D MINUS^KMPDUT4C(X) Q
"RTN","KMPDUT4",79,0)
 .;-------------------------------------------------------------------
"RTN","KMPDUT4",80,0)
 .;  wildcard selection
"RTN","KMPDUT4",81,0)
 .;-------------------------------------------------------------------
"RTN","KMPDUT4",82,0)
 .I $E(X,2,999)["*",(OPTION["W") D WILDCARD^KMPDUT4B(X) Q
"RTN","KMPDUT4",83,0)
 .I $E(X,1,2)="?D"!($E(X,1,2)="?d") D DISPLAY^KMPDUT4B Q
"RTN","KMPDUT4",84,0)
 .I X="?",(MAX'=1) D HELP^KMPDUT4C
"RTN","KMPDUT4",85,0)
 .D ^DIC I Y>0,('$D(@ARRAY@($S(SORT=1:Y(0,0),1:+Y)))) D 
"RTN","KMPDUT4",86,0)
 ..I SORT=1 S @ARRAY@(Y(0,0))=+Y
"RTN","KMPDUT4",87,0)
 ..E  S @ARRAY@(+Y)=Y(0,0)
"RTN","KMPDUT4",88,0)
 ..S @ARRAY@(0)=$G(@ARRAY@(0))+1
"RTN","KMPDUT4",89,0)
EXIT ;
"RTN","KMPDUT4",90,0)
 K X,Y
"RTN","KMPDUT4",91,0)
 Q
"RTN","KMPDUT4A")
0^44^B2846593^B2846593
"RTN","KMPDUT4A",1,0)
KMPDUT4A ;OAK/RAK; Multi-Lookup Global/Array Check ;2/17/04  10:47
"RTN","KMPDUT4A",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDUT4A",3,0)
 ;
"RTN","KMPDUT4A",4,0)
CHECK() ;extrinsic function
"RTN","KMPDUT4A",5,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUT4A",6,0)
 ;  return:  0 - if successful
"RTN","KMPDUT4A",7,0)
 ;           1 - if error found
"RTN","KMPDUT4A",8,0)
 ;
"RTN","KMPDUT4A",9,0)
 ;  check variable 'ARRAY' for correct global or local array format
"RTN","KMPDUT4A",10,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUT4A",11,0)
 I '$D(ARRAY) D  Q 1
"RTN","KMPDUT4A",12,0)
 .W !?7,"...variable 'ARRAY' is undefined..."
"RTN","KMPDUT4A",13,0)
 I $G(DIC)']"" D  Q 1
"RTN","KMPDUT4A",14,0)
 .W !?7,"...variable 'DIC' is undefined..."
"RTN","KMPDUT4A",15,0)
 .D FTR^KMPDUTL4("Press <RET> to continue")
"RTN","KMPDUT4A",16,0)
 I $E(ARRAY)="^",(ARRAY'["(")!(ARRAY["()")!($E(ARRAY,$F(ARRAY,"("))']"")!($E(ARRAY,$F(ARRAY,"("))=",") D  Q 1
"RTN","KMPDUT4A",17,0)
 .W !?7,"...global must have a subscript (ex: '^TMP($J' )..."
"RTN","KMPDUT4A",18,0)
 ;
"RTN","KMPDUT4A",19,0)
 ;global array must be either ^TMP or ^UTILITY - just to be safe
"RTN","KMPDUT4A",20,0)
 I $E(ARRAY)="^" I $E(ARRAY,2,($F(ARRAY,"(")-2))'="TMP",($E(ARRAY,2,($F(ARRAY,"(")-2))'="UTILITY") D  Q 1
"RTN","KMPDUT4A",21,0)
 .W !!?7,"...global names must be either '^TMP' or '^UTILITY'..."
"RTN","KMPDUT4A",22,0)
 ;
"RTN","KMPDUT4A",23,0)
 ;if local array
"RTN","KMPDUT4A",24,0)
 I $E(ARRAY)'="^" D 
"RTN","KMPDUT4A",25,0)
 .;remove '()' from local array if no subscript
"RTN","KMPDUT4A",26,0)
 .I $E(ARRAY,$F(ARRAY,"("))=")"!($E(ARRAY,$F(ARRAY,"("))']"") D 
"RTN","KMPDUT4A",27,0)
 ..S ARRAY=$TR(ARRAY,"(",""),ARRAY=$TR(ARRAY,")","")
"RTN","KMPDUT4A",28,0)
 ;
"RTN","KMPDUT4A",29,0)
 ;if subcript array add closing parenthesis and remove trailing comma
"RTN","KMPDUT4A",30,0)
 I ARRAY["("!($E(ARRAY)="^") D 
"RTN","KMPDUT4A",31,0)
 .I $E(ARRAY,$L(ARRAY))'=")" S ARRAY=ARRAY_")"
"RTN","KMPDUT4A",32,0)
 .I $E(ARRAY,($L(ARRAY)-1))="," S ARRAY=$E(ARRAY,1,($L(ARRAY)-2))_")"
"RTN","KMPDUT4A",33,0)
 Q 0
"RTN","KMPDUT4B")
0^45^B6574044^B6574044
"RTN","KMPDUT4B",1,0)
KMPDUT4B ;OAK/RAK; Multi-Lookup Array Selection cont. ;2/17/04  10:48
"RTN","KMPDUT4B",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDUT4B",3,0)
 ;
"RTN","KMPDUT4B",4,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUT4B",5,0)
 ;  sub-routines to select entries - called from ^KMPDUT4
"RTN","KMPDUT4B",6,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUT4B",7,0)
ALL ;all entries selected
"RTN","KMPDUT4B",8,0)
 Q:'$D(ARRAY)!('$D(DIC))  S MAX=+$G(MAX),SORT=+$G(SORT)
"RTN","KMPDUT4B",9,0)
 K @ARRAY I DIC S DIC=$G(^DIC(DIC,0,"GL"))
"RTN","KMPDUT4B",10,0)
 I MAX,($P($G(@(DIC_"0)")),U,4)>MAX) S @ARRAY@(0)="*" Q
"RTN","KMPDUT4B",11,0)
 N ASKI W "  selecting 'All' entries"
"RTN","KMPDUT4B",12,0)
 F ASKI=0:0 S ASKI=$O(@(DIC_ASKI_")")) Q:'ASKI  D SET(ASKI)
"RTN","KMPDUT4B",13,0)
 Q
"RTN","KMPDUT4B",14,0)
DISPLAY ;display entries that have been selected
"RTN","KMPDUT4B",15,0)
 Q:'$D(DIC)  S SORT=+$G(SORT)
"RTN","KMPDUT4B",16,0)
 I '$D(@ARRAY) W !!,"...no entries have been selected...",! Q
"RTN","KMPDUT4B",17,0)
 I @ARRAY@(0)="*" W !!,"...'All' entries have been selected...",! Q
"RTN","KMPDUT4B",18,0)
 D HDR^KMPDUTL4("Selected Entries from "_$P($G(@(DIC_"0)")),U)_" file")
"RTN","KMPDUT4B",19,0)
 N ASKI,ASKOUT S ASKI="",ASKOUT=1 W !!
"RTN","KMPDUT4B",20,0)
 F  S ASKI=$O(@ARRAY@(ASKI)) Q:ASKI=""!(ASKOUT'=1)  I ASKI'=0 D 
"RTN","KMPDUT4B",21,0)
 .I $Y>(IOSL-4) D  Q:ASKOUT'=1
"RTN","KMPDUT4B",22,0)
 ..D FTR^KMPDUTL4("",.ASKOUT) Q:ASKOUT'=1
"RTN","KMPDUT4B",23,0)
 ..D HDR^KMPDUTL4("Selected Entries from "_$P($G(@(DIC_"0)")),U)_" file")
"RTN","KMPDUT4B",24,0)
 ..W !!
"RTN","KMPDUT4B",25,0)
 .W !?7,$S(SORT=1:ASKI,1:@ARRAY@(ASKI))
"RTN","KMPDUT4B",26,0)
 W !
"RTN","KMPDUT4B",27,0)
 Q
"RTN","KMPDUT4B",28,0)
WILDCARD(X) ;entries with wildcard selected
"RTN","KMPDUT4B",29,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUT4B",30,0)
 ;  allow wildcard selections
"RTN","KMPDUT4B",31,0)
 ;       examples: A*
"RTN","KMPDUT4B",32,0)
 ;                 ABC*
"RTN","KMPDUT4B",33,0)
 ;                 SMITH*
"RTN","KMPDUT4B",34,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUT4B",35,0)
 Q:$G(X)']""
"RTN","KMPDUT4B",36,0)
 N ASKI,COUNT,NARRAY,OUT,STR,STR1 S (COUNT,OUT)=0
"RTN","KMPDUT4B",37,0)
 S MAX=+$G(MAX),SORT=+$G(SORT) S:$G(D)']"" D="B"
"RTN","KMPDUT4B",38,0)
 S STR=$E(X,1,($F(X,"*")-2)) Q:STR']""
"RTN","KMPDUT4B",39,0)
 S STR1=STR,NARRAY=DIC_""""_D_""""_")"
"RTN","KMPDUT4B",40,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUT4B",41,0)
 ;  if exact match on STR1
"RTN","KMPDUT4B",42,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUT4B",43,0)
 I $D(@NARRAY@(STR1)) S ASKI=0 D  Q
"RTN","KMPDUT4B",44,0)
 .I STR?.N S NARRAY=DIC_""""_D_""""_","_STR_")"
"RTN","KMPDUT4B",45,0)
 .E  S NARRAY=DIC_""""_D_""""_","_""""_STR_""""_")"
"RTN","KMPDUT4B",46,0)
 .F  S ASKI=$O(@NARRAY@(ASKI)) Q:'ASKI  D  Q:OUT
"RTN","KMPDUT4B",47,0)
 ..D SET(ASKI) I MAX,(+$G(@ARRAY@(0))=MAX) S OUT=1
"RTN","KMPDUT4B",48,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUT4B",49,0)
 ;  if not an exact match
"RTN","KMPDUT4B",50,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUT4B",51,0)
 F  S STR1=$O(@NARRAY@(STR1)) Q:$E(STR1,1,$L(STR))'=STR  D  Q:OUT
"RTN","KMPDUT4B",52,0)
 .F ASKI=0:0  S ASKI=$O(@NARRAY@(STR1,ASKI)) Q:'ASKI  D  Q:OUT
"RTN","KMPDUT4B",53,0)
 ..D SET(ASKI) I MAX,(+$G(@ARRAY@(0))=MAX) S OUT=1
"RTN","KMPDUT4B",54,0)
 Q
"RTN","KMPDUT4B",55,0)
SET(IFN) ;set selected data into array
"RTN","KMPDUT4B",56,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUT4B",57,0)
 ;    IFN - internal file number of entry
"RTN","KMPDUT4B",58,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUT4B",59,0)
 N X,Y S IFN=+$G(IFN),SORT=+$G(SORT) Q:'IFN
"RTN","KMPDUT4B",60,0)
 Q:'$D(DIC)!('$D(ARRAY))
"RTN","KMPDUT4B",61,0)
 Q:'$D(@(DIC_IFN_",0)"))!($P($G(^(0)),U)']"")
"RTN","KMPDUT4B",62,0)
 S X="`"_ASKI,DIC(0)="Z" D ^DIC Q:Y'>0
"RTN","KMPDUT4B",63,0)
 I SORT=1 S @ARRAY@(Y(0,0))=+Y
"RTN","KMPDUT4B",64,0)
 E  S @ARRAY@(+Y)=Y(0,0)
"RTN","KMPDUT4B",65,0)
 S @ARRAY@(0)=$G(@ARRAY@(0))+1 W:$X>73 !?7 W "."
"RTN","KMPDUT4B",66,0)
 Q
"RTN","KMPDUT4B",67,0)
 ;  for future use - if unable to use `IFN in call to ^DIC
"RTN","KMPDUT4B",68,0)
 I SORT=1 S @ARRAY@($P($G(@(DIC_ASKI_",0)")),U))=ASKI
"RTN","KMPDUT4B",69,0)
 E  S @ARRAY@(ASKI)=$P($G(@(DIC_ASKI_",0)")),U)
"RTN","KMPDUT4C")
0^46^B8778533^B8778533
"RTN","KMPDUT4C",1,0)
KMPDUT4C ;OAK/RAK; Multi-Lookup cont. ;2/17/04  10:48
"RTN","KMPDUT4C",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDUT4C",3,0)
 ;
"RTN","KMPDUT4C",4,0)
HELP ;--help text
"RTN","KMPDUT4C",5,0)
 N OUT
"RTN","KMPDUT4C",6,0)
 W !!?7,"Enter '?D' to display entries selected so far."
"RTN","KMPDUT4C",7,0)
 I $G(OPTION)'["S" W !!?7,"Select '*' for all entries or"
"RTN","KMPDUT4C",8,0)
 W !
"RTN","KMPDUT4C",9,0)
 G:$G(OPTION)'["W" HELPM
"RTN","KMPDUT4C",10,0)
 W !?7,"Select entries by typing one or more characters and then the '*'"
"RTN","KMPDUT4C",11,0)
 W !
"RTN","KMPDUT4C",12,0)
 W !?7,"    Example:  'A*'     - will select all entries begging with"
"RTN","KMPDUT4C",13,0)
 W !?7,"                         the letter 'A'"
"RTN","KMPDUT4C",14,0)
 W !?7,"              'SMITH*' - will select all entries begging with"
"RTN","KMPDUT4C",15,0)
 W !?7,"                         'SMITH'"
"RTN","KMPDUT4C",16,0)
 W !!!
"RTN","KMPDUT4C",17,0)
 D FTR^KMPDUTL4("Press <RET> to continue, '^' to exit Help",.OUT)
"RTN","KMPDUT4C",18,0)
 I 'OUT W !!! Q
"RTN","KMPDUT4C",19,0)
 W !!!
"RTN","KMPDUT4C",20,0)
HELPM ;help text for minus sign
"RTN","KMPDUT4C",21,0)
 W !?7,"You may remove entries that have been selected so far by"
"RTN","KMPDUT4C",22,0)
 W !?7,"entering a minus sign (-) before the entry to be removed"
"RTN","KMPDUT4C",23,0)
 W !
"RTN","KMPDUT4C",24,0)
 W !?7,"    Example:  '-JONES,JANE' - will remove the entry 'JONES,JANE'"
"RTN","KMPDUT4C",25,0)
 W !?7,"                              from the array"
"RTN","KMPDUT4C",26,0)
 W !?7,"              '-SMITH*' - will remove all entries beginning with"
"RTN","KMPDUT4C",27,0)
 W !?7,"                          'SMITH' from the array"
"RTN","KMPDUT4C",28,0)
 W !
"RTN","KMPDUT4C",29,0)
 W !?7,"     ************************************************"
"RTN","KMPDUT4C",30,0)
 W !?7,"     *** It is important to note that using the   ***"
"RTN","KMPDUT4C",31,0)
 W !?7,"     *** minus sign (-) only removes entries from ***"
"RTN","KMPDUT4C",32,0)
 W !?7,"     *** the array storing the selected entries,  ***"
"RTN","KMPDUT4C",33,0)
 W !?7,"     *** it DOES NOT remove any entries from the  ***"
"RTN","KMPDUT4C",34,0)
 W !?7,"     *** look-up file                             ***"
"RTN","KMPDUT4C",35,0)
 W !?7,"     ************************************************"
"RTN","KMPDUT4C",36,0)
 W !!!
"RTN","KMPDUT4C",37,0)
 D FTR^KMPDUTL4("Press <RET> to continue: ")
"RTN","KMPDUT4C",38,0)
 W !!!
"RTN","KMPDUT4C",39,0)
 Q
"RTN","KMPDUT4C",40,0)
MINUS(X) ;de-select entries
"RTN","KMPDUT4C",41,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUT4C",42,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUT4C",43,0)
 Q:'$D(@ARRAY)  S X=$G(X) Q:$E(X)'="-"  S X=$E(X,2,$L(X))
"RTN","KMPDUT4C",44,0)
 I X="*" K @ARRAY Q
"RTN","KMPDUT4C",45,0)
 I X["*" S STR=$E(X,1,($F(X,"*")-2))
"RTN","KMPDUT4C",46,0)
 E  S STR=X
"RTN","KMPDUT4C",47,0)
 Q:STR']""  S STR1=STR
"RTN","KMPDUT4C",48,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUT4C",49,0)
 ;  if exact match on STR1
"RTN","KMPDUT4C",50,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUT4C",51,0)
 I SORT=1,($D(@ARRAY@(STR1))) D  Q
"RTN","KMPDUT4C",52,0)
 .K @ARRAY@(STR1) S @ARRAY@(0)=$G(@ARRAY@(0))-1 W:$X>73 !?7 W "."
"RTN","KMPDUT4C",53,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUT4C",54,0)
 ;  if wildcard
"RTN","KMPDUT4C",55,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUT4C",56,0)
 I SORT=1,(X["*") D  Q
"RTN","KMPDUT4C",57,0)
 .F  S STR1=$O(@ARRAY@(STR1)) Q:$E(STR1,1,$L(STR))'=STR  D 
"RTN","KMPDUT4C",58,0)
 ..K @ARRAY@(STR1) S @ARRAY@(0)=$G(@ARRAY@(0))-1 W:$X>73 !?7 W "."
"RTN","KMPDUT4C",59,0)
 Q:SORT
"RTN","KMPDUT4C",60,0)
 I X'["*" S ASKI=0 D  Q
"RTN","KMPDUT4C",61,0)
 .F  S ASKI=$O(@ARRAY@(ASKI)) Q:'ASKI  I @ARRAY@(ASKI)=STR1 D 
"RTN","KMPDUT4C",62,0)
 ..K @ARRAY@(ASKI) S @ARRAY@(0)=$G(@ARRAY@(0))-1 W:$X>73 !?7 W "."
"RTN","KMPDUT4C",63,0)
 I X["*" S ASKI=0 D  Q
"RTN","KMPDUT4C",64,0)
 .F  S ASKI=$O(@ARRAY@(ASKI)) Q:'ASKI  I $E(@ARRAY@(ASKI),1,$L(STR))=STR D 
"RTN","KMPDUT4C",65,0)
 ..K @ARRAY@(ASKI) S @ARRAY@(0)=$G(@ARRAY@(0))-1 W:$X>73 !?7 W "."
"RTN","KMPDUT4C",66,0)
 Q
"RTN","KMPDUT5")
0^47^B34870565^B34870565
"RTN","KMPDUT5",1,0)
KMPDUT5 ;OAK/RAK - CM Tools Utility Text Display ;2/17/04  10:49
"RTN","KMPDUT5",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDUT5",3,0)
 ;
"RTN","KMPDUT5",4,0)
DISPLAY(KMPDARRY,KMPDMRGN,KMPDNW,KMPDCLR,KMPDBX) ;display text
"RTN","KMPDUT5",5,0)
 ;-------------------------------------------------------------------
"RTN","KMPDUT5",6,0)
 ;  If there is more than one page (screen) of text this api
"RTN","KMPDUT5",7,0)
 ;  allows the user to scroll back and forth between pages
"RTN","KMPDUT5",8,0)
 ;
"RTN","KMPDUT5",9,0)
 ;   KMPDARRY - global or local array that contains word processing text
"RTN","KMPDUT5",10,0)
 ;           example: "^ASKV(673700,12,11,"
"RTN","KMPDUT5",11,0)
 ;                    "TMP($J)"
"RTN","KMPDUT5",12,0)
 ;
"RTN","KMPDUT5",13,0)
 ;           the following is an example of how the array might be set
"RTN","KMPDUT5",14,0)
 ;           up:
"RTN","KMPDUT5",15,0)
 ;               KMPDARRY($J,0)=number of lines
"RTN","KMPDUT5",16,0)
 ;               KMPDARRY($J,1,0)=text to display
"RTN","KMPDUT5",17,0)
 ;               KMPDARRY($J,2,0)=text to display
"RTN","KMPDUT5",18,0)
 ;               KMPDARRY($J,3,0)=text to display
"RTN","KMPDUT5",19,0)
 ;               KMPDARRY($J...
"RTN","KMPDUT5",20,0)
 ;
"RTN","KMPDUT5",21,0)
 ;
"RTN","KMPDUT5",22,0)
 ;            KMPDARRY must not be ^UTILITY($J,"W") - this routine uses
"RTN","KMPDUT5",23,0)
 ;            fileman to format text, therefore ^UTILITY($J,"W") is
"RTN","KMPDUT5",24,0)
 ;            used and then killed when routine complete
"RTN","KMPDUT5",25,0)
 ;
"RTN","KMPDUT5",26,0)
 ;  optional parameters
"RTN","KMPDUT5",27,0)
 ;
"RTN","KMPDUT5",28,0)
 ; KMPDMRGN - margins for display of text in 4 up-arrow pieces
"RTN","KMPDUT5",29,0)
 ;           TM - top margin of screen area...... piece 1
"RTN","KMPDUT5",30,0)
 ;           BM - bottom margin of screen area... piece 2
"RTN","KMPDUT5",31,0)
 ;           LM - left margin.................... piece 3
"RTN","KMPDUT5",32,0)
 ;           RM - right margin................... piece 4
"RTN","KMPDUT5",33,0)
 ;                        *** NOTE ***
"RTN","KMPDUT5",34,0)
 ;           if TM and BM are not passed the display will default to
"RTN","KMPDUT5",35,0)
 ;           full screen (0 to 22)
"RTN","KMPDUT5",36,0)
 ;
"RTN","KMPDUT5",37,0)
 ;    KMPDNW - nowrap    0 - nowrap (display as entered)
"RTN","KMPDUT5",38,0)
 ;                     1 - wrap
"RTN","KMPDUT5",39,0)
 ;
"RTN","KMPDUT5",40,0)
 ;   KMPDCLR - clear screen when exiting
"RTN","KMPDUT5",41,0)
 ;           0 - clear screen
"RTN","KMPDUT5",42,0)
 ;           1 - do not clear screen
"RTN","KMPDUT5",43,0)
 ;
"RTN","KMPDUT5",44,0)
 ;    KMPDBX - this variable is in 2 up-arrow pieces
"RTN","KMPDUT5",45,0)
 ;           piece 1: 0 - do not draw a box (or window) around text
"RTN","KMPDUT5",46,0)
 ;                    1 - draw box
"RTN","KMPDUT5",47,0)
 ;           piece 2: header (if any) for box
"RTN","KMPDUT5",48,0)
 ;
"RTN","KMPDUT5",49,0)
 ;  other variables
"RTN","KMPDUT5",50,0)
 ;
"RTN","KMPDUT5",51,0)
 ;      FT - top margin for footer
"RTN","KMPDUT5",52,0)
 ;      FB - bottom margin for footer
"RTN","KMPDUT5",53,0)
 ;  LENGTH - length of text to display (RM-LM)
"RTN","KMPDUT5",54,0)
 ;      OS - operating system
"RTN","KMPDUT5",55,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUT5",56,0)
 ;
"RTN","KMPDUT5",57,0)
 Q:'$D(KMPDARRY)
"RTN","KMPDUT5",58,0)
 ;
"RTN","KMPDUT5",59,0)
 S KMPDMRGN=$G(KMPDMRGN),KMPDNW=+$G(KMPDNW)
"RTN","KMPDUT5",60,0)
 S KMPDCLR=+$G(KMPDCLR),KMPDBX=$G(KMPDBX)
"RTN","KMPDUT5",61,0)
 ; place array in correct format
"RTN","KMPDUT5",62,0)
 I $E(KMPDARRY,$L(KMPDARRY))="," S $E(KMPDARRY,$L(KMPDARRY))=")"
"RTN","KMPDUT5",63,0)
 I $E(KMPDARRY,$L(KMPDARRY))'=")" S KMPDARRY=KMPDARRY_")"
"RTN","KMPDUT5",64,0)
 I $E(KMPDARRY)'="^" I $E(KMPDARRY,$L(KMPDARRY)-1,$L(KMPDARRY))="()" D
"RTN","KMPDUT5",65,0)
 .S KMPDARRY=$E(KMPDARRY,1,$L(KMPDARRY)-2)
"RTN","KMPDUT5",66,0)
 ;
"RTN","KMPDUT5",67,0)
 N ASKI,KMPDOUT,BM,CLRSCR,FB,FT,I,LEN,LENGTH,LINES,LM,OS,PAGE,PAGES,RM,TM
"RTN","KMPDUT5",68,0)
 N DIR,DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DX,DY,X,Y,Z
"RTN","KMPDUT5",69,0)
 N IOBM,IOECH,IOELALL,IOELEOL,IORVON,IORVOFF,IOTM,IOSTBM
"RTN","KMPDUT5",70,0)
 ;
"RTN","KMPDUT5",71,0)
 ; set up special terminal variables
"RTN","KMPDUT5",72,0)
 S X="IOECH;IOELALL;IOELEOL;IORVON;IORVOFF;IOSTBM" D ENDR^%ZISS
"RTN","KMPDUT5",73,0)
 S OS=$G(^%ZOSF("OS"))
"RTN","KMPDUT5",74,0)
 S TM=+$P(KMPDMRGN,U),LM=+$P(KMPDMRGN,U,3),RM=+$P(KMPDMRGN,U,4)
"RTN","KMPDUT5",75,0)
 S BM=+$P(KMPDMRGN,U,2) S:'BM!(BM>22) BM=$S(OS["MSM":22,1:23)
"RTN","KMPDUT5",76,0)
 S:'RM RM=IOM S FB=BM,FT=(FB-1),BM=(FB-2),LENGTH=(RM-LM)
"RTN","KMPDUT5",77,0)
 S DIWL=LM,DIWR=$S(RM:RM,1:IOM),KMPDNW=$S(KMPDNW=1:"",1:"N")
"RTN","KMPDUT5",78,0)
 ; if full screen
"RTN","KMPDUT5",79,0)
 I LM=0,(RM=IOM) S CLRSCR="F DY=BM:-1:TM X IOXY W IOELALL,!"
"RTN","KMPDUT5",80,0)
 ; else partial screen
"RTN","KMPDUT5",81,0)
 E  S CLRSCR="S DX=LM F DY=BM:-1:TM X IOXY W $J("" "",LENGTH)"
"RTN","KMPDUT5",82,0)
 ;
"RTN","KMPDUT5",83,0)
 D LOOP
"RTN","KMPDUT5",84,0)
 ;
"RTN","KMPDUT5",85,0)
 K ^UTILITY($J,"W")
"RTN","KMPDUT5",86,0)
 ;
"RTN","KMPDUT5",87,0)
 Q
"RTN","KMPDUT5",88,0)
 ;
"RTN","KMPDUT5",89,0)
LOOP ;-- main loop
"RTN","KMPDUT5",90,0)
 ;
"RTN","KMPDUT5",91,0)
 ; use fileman to format text
"RTN","KMPDUT5",92,0)
 K ^UTILITY($J,"W") S DIWF=KMPDNW,X=""
"RTN","KMPDUT5",93,0)
 F I=0:0 S I=$O(@KMPDARRY@(I)) Q:'I  D
"RTN","KMPDUT5",94,0)
 .Q:'$D(@KMPDARRY@(I,0))  S X=@KMPDARRY@(I,0)
"RTN","KMPDUT5",95,0)
 .I KMPDNW="N" S X=$E(X,1,LENGTH)
"RTN","KMPDUT5",96,0)
 .D ^DIWP
"RTN","KMPDUT5",97,0)
 ; quit if no data to display
"RTN","KMPDUT5",98,0)
 Q:'$D(^UTILITY($J,"W",DIWL))  S LINES=$G(^(DIWL))
"RTN","KMPDUT5",99,0)
 ; check for last line equal to null
"RTN","KMPDUT5",100,0)
 I $G(^UTILITY($J,"W",DIWL,LINES,0))="" S LINES=LINES-1
"RTN","KMPDUT5",101,0)
 S LEN=BM-TM+1,PAGES=LINES\LEN I LINES#LEN S PAGES=PAGES+1
"RTN","KMPDUT5",102,0)
 ;
"RTN","KMPDUT5",103,0)
 ; set up the PAGES() array -  first piece = starting line
"RTN","KMPDUT5",104,0)
 ;                            second piece = ending line
"RTN","KMPDUT5",105,0)
 F I=1:1:PAGES D
"RTN","KMPDUT5",106,0)
 .S PAGES(I)=$S(I=1:1,1:(I*LEN-LEN+1))
"RTN","KMPDUT5",107,0)
 .I I=1 S $P(PAGES(I),U,2)=$S(LINES<LEN:LINES,1:LEN) Q
"RTN","KMPDUT5",108,0)
 .S $P(PAGES(I),U,2)=(I*LEN)
"RTN","KMPDUT5",109,0)
 ;
"RTN","KMPDUT5",110,0)
 ; if KMPDBX draw box around text
"RTN","KMPDUT5",111,0)
 ;I KMPDBX D KMPDBX^KMPDUTxxx((TM-1),(LM-1),(RM+1),FB,$P(KMPDBX,U,2))
"RTN","KMPDUT5",112,0)
 S DX=LM,DY=TM,PAGE=1,KMPDOUT=0
"RTN","KMPDUT5",113,0)
 ;
"RTN","KMPDUT5",114,0)
 ; main loop that displays text to the screen and prompts
"RTN","KMPDUT5",115,0)
 ; for the next page or previous page (if appropriate)
"RTN","KMPDUT5",116,0)
 F  D  Q:KMPDOUT
"RTN","KMPDUT5",117,0)
 .F I=$P(PAGES(PAGE),U):1:$P(PAGES(PAGE),U,2) D
"RTN","KMPDUT5",118,0)
 ..Q:'$D(^UTILITY($J,"W",DIWL,I,0))
"RTN","KMPDUT5",119,0)
 ..X IOXY W ^UTILITY($J,"W",DIWL,I,0),! S DY=DY+1
"RTN","KMPDUT5",120,0)
 .D FTR S DY=DY+1 Q:KMPDOUT  X CLRSCR
"RTN","KMPDUT5",121,0)
 ; clear screen if no KMPDCLR
"RTN","KMPDUT5",122,0)
 I 'KMPDCLR X CLRSCR F DY=22,23 X IOXY W IOELALL
"RTN","KMPDUT5",123,0)
 ;
"RTN","KMPDUT5",124,0)
 Q
"RTN","KMPDUT5",125,0)
 ;
"RTN","KMPDUT5",126,0)
FTR ;--footer
"RTN","KMPDUT5",127,0)
 ;
"RTN","KMPDUT5",128,0)
 N READ,READX S READ=""
"RTN","KMPDUT5",129,0)
 F DY=(FB-1):-1:(FB-3) X IOXY W !
"RTN","KMPDUT5",130,0)
 S DX=LM,DY=FT X IOXY W $$REPEAT^XLFSTR("_",LENGTH) ; I OS["MSM" W !
"RTN","KMPDUT5",131,0)
 S DX=LM,DY=FB X IOXY
"RTN","KMPDUT5",132,0)
 I PAGES=1 S READ="Q",READ("A")="Press <RET> to continue"
"RTN","KMPDUT5",133,0)
 I PAGES>1 S READ="Q" D 
"RTN","KMPDUT5",134,0)
 .I PAGE<PAGES S READ=READ_"N"
"RTN","KMPDUT5",135,0)
 .I PAGE>1 S READ=READ_"P"
"RTN","KMPDUT5",136,0)
 ;
"RTN","KMPDUT5",137,0)
 ; READ("A") - the prompt that appears in footer
"RTN","KMPDUT5",138,0)
 ; if LENGTH>44 characters: [Q]uit, [N]ext screen, [P]revious Screen:
"RTN","KMPDUT5",139,0)
 ; if LENGTH>28 characters: [Q]uit, [N]ext, [P]revious:
"RTN","KMPDUT5",140,0)
 ; else....................: [Q], [N], [P]
"RTN","KMPDUT5",141,0)
 I $G(READ("A"))']"" D 
"RTN","KMPDUT5",142,0)
 .I READ["Q" S READ("A")="[Q]" D 
"RTN","KMPDUT5",143,0)
 ..I LENGTH>28 S READ("A")=READ("A")_"uit"
"RTN","KMPDUT5",144,0)
 .I READ["N" S READ("A")=READ("A")_", [N]" D 
"RTN","KMPDUT5",145,0)
 ..I LENGTH>44 S READ("A")=READ("A")_"ext Screen" Q
"RTN","KMPDUT5",146,0)
 ..I LENGTH>28 S READ("A")=READ("A")_"ext"
"RTN","KMPDUT5",147,0)
 .I READ["P" S READ("A")=READ("A")_", [P]" D 
"RTN","KMPDUT5",148,0)
 ..I LENGTH>44 S READ("A")=READ("A")_"revious Screen" Q
"RTN","KMPDUT5",149,0)
 ..I LENGTH>28 S READ("A")=READ("A")_"revious"
"RTN","KMPDUT5",150,0)
 S READ("A")=READ("A")_": "
"RTN","KMPDUT5",151,0)
 ;
"RTN","KMPDUT5",152,0)
 ;-footer loop
"RTN","KMPDUT5",153,0)
 D  Q:KMPDOUT
"RTN","KMPDUT5",154,0)
 .S DX=LM,DY=FB X IOXY W $J(" ",$S(LENGTH<80:LENGTH,1:(LENGTH-1)))
"RTN","KMPDUT5",155,0)
 .I OS["MSM" W !
"RTN","KMPDUT5",156,0)
 .I OS["MSM" W ! F DY=(FB-1):-1:(FB-3) X IOXY W !
"RTN","KMPDUT5",157,0)
 .;
"RTN","KMPDUT5",158,0)
 .; if LENGTH>55 characters print pages
"RTN","KMPDUT5",159,0)
 .I LENGTH>55 D 
"RTN","KMPDUT5",160,0)
 ..S DX=(RM-15),DY=FB X IOXY W " Page ",PAGE," of ",PAGES," "
"RTN","KMPDUT5",161,0)
 ..I OS["MSM" W !
"RTN","KMPDUT5",162,0)
 .S DX=LM,DY=FB X IOXY W READ("A")
"RTN","KMPDUT5",163,0)
 .R READX:DTIME S:'$T READX="Q" S READX=$$UP^XLFSTR(READX)
"RTN","KMPDUT5",164,0)
 .I READX="Q"!(READX="^")!(READ="E") S KMPDOUT=1 Q
"RTN","KMPDUT5",165,0)
 .I READX="N",(READ["N") S PAGE=PAGE+1 Q
"RTN","KMPDUT5",166,0)
 .I READX="P",(READ["P") S PAGE=PAGE-1 Q
"RTN","KMPDUT5",167,0)
 .I READX["?" D HELP Q
"RTN","KMPDUT5",168,0)
 .;
"RTN","KMPDUT5",169,0)
 .; end of the screen - this just scrolls up a couple of lines and
"RTN","KMPDUT5",170,0)
 .; seems to reset the screen coordinates for MSM
"RTN","KMPDUT5",171,0)
 .I OS["MSM" F DY=(BM-1):-1:(BM-3) X IOXY W !
"RTN","KMPDUT5",172,0)
 .W $C(7)
"RTN","KMPDUT5",173,0)
 ;
"RTN","KMPDUT5",174,0)
 Q
"RTN","KMPDUT5",175,0)
 ;
"RTN","KMPDUT5",176,0)
HELP ;-- clear screen, print help text, repaint screen
"RTN","KMPDUT5",177,0)
 ;
"RTN","KMPDUT5",178,0)
 N I,READX X CLRSCR S DY=TM,DX=$S(DIWL>7:DIWL,1:7) X IOXY
"RTN","KMPDUT5",179,0)
 F I=1:1:$L(READ) S DY=DY+1 X IOXY D
"RTN","KMPDUT5",180,0)
 .I $E(READ,I)="E" W "Enter 'E' (or '^') to exit.",!
"RTN","KMPDUT5",181,0)
 .I $E(READ,I)="N" W "Enter 'N' to advance to the next screen.",!
"RTN","KMPDUT5",182,0)
 .I $E(READ,I)="P" W "Enter 'P' to backup to the previous screen.",!
"RTN","KMPDUT5",183,0)
 S DY=BM X IOXY R "Press <RET> to continue: ",READX:DTIME
"RTN","KMPDUT5",184,0)
 ; repaint screen
"RTN","KMPDUT5",185,0)
 X CLRSCR S DY=(TM-1)
"RTN","KMPDUT5",186,0)
 F I=$P(PAGES(PAGE),U):1:$P(PAGES(PAGE),U,2) D
"RTN","KMPDUT5",187,0)
 .Q:'$D(^UTILITY($J,"W",DIWL,I,0))
"RTN","KMPDUT5",188,0)
 .S DX=DIWL,DY=DY+1 X IOXY W ^UTILITY($J,"W",DIWL,I,0),!
"RTN","KMPDUT5",189,0)
 ;
"RTN","KMPDUT5",190,0)
 Q
"RTN","KMPDUTL")
0^48^B11442645^B12190816
"RTN","KMPDUTL",1,0)
KMPDUTL ;OAK/RAK - CM Tools Utility ;5/1/07  15:08
"RTN","KMPDUTL",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDUTL",3,0)
 ;
"RTN","KMPDUTL",4,0)
QUEBKG(KMPDOPT,KMPDTIME,KMPDFREQ,KMPDDEL) ;-- queue background job
"RTN","KMPDUTL",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL",6,0)
 ; KMPDOPT.... Option name to queue (free text name in .01 field of 
"RTN","KMPDUTL",7,0)
 ;                                   OPTION file)
"RTN","KMPDUTL",8,0)
 ; KMPDTIME... Date/time to queue option (T@1400, etc)
"RTN","KMPDUTL",9,0)
 ; KMPDFREQ... Scheduling frequency (1D, etc)
"RTN","KMPDUTL",10,0)
 ; KMPDDEL.... Delete option if it already exists in file 19.2
"RTN","KMPDUTL",11,0)
 ;              0 - do not delete (quit if already scheduled)
"RTN","KMPDUTL",12,0)
 ;              1 - delete if already in file 19.2
"RTN","KMPDUTL",13,0)
 ;
"RTN","KMPDUTL",14,0)
 ; This API will queue an option from file #19 (OPTION) to run in file
"RTN","KMPDUTL",15,0)
 ; 19.2 (OPTION SCHEDULE).
"RTN","KMPDUTL",16,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL",17,0)
 Q:$G(KMPDOPT)=""
"RTN","KMPDUTL",18,0)
 Q:$G(KMPDTIME)=""
"RTN","KMPDUTL",19,0)
 Q:$G(KMPDFREQ)=""
"RTN","KMPDUTL",20,0)
 S KMPDDEL=+$G(KMPDDEL)
"RTN","KMPDUTL",21,0)
 N DA,DIFROM,DIK,FDA,ERROR,IEN,IEN1,IENZ,TEXT,X,Y,Z
"RTN","KMPDUTL",22,0)
 ; Newing DIFROM will force reschedule when installing from KIDS
"RTN","KMPDUTL",23,0)
 S:'$G(DT) DT=$$DT^XLFDT
"RTN","KMPDUTL",24,0)
 ; change to internal format
"RTN","KMPDUTL",25,0)
 D FMDTI^KMPDU(.Z,KMPDTIME)
"RTN","KMPDUTL",26,0)
 Q:Z(0)="^"!(Z(0)="")
"RTN","KMPDUTL",27,0)
 S KMPDTIME=Z(0) K Z
"RTN","KMPDUTL",28,0)
 S TEXT=KMPDOPT
"RTN","KMPDUTL",29,0)
 ; quit if not in file 19
"RTN","KMPDUTL",30,0)
 S IEN=$O(^DIC(19,"B",TEXT,0)) Q:'IEN
"RTN","KMPDUTL",31,0)
 S IEN1=$O(^DIC(19.2,"B",IEN,0))
"RTN","KMPDUTL",32,0)
 ; quit if already in file 19.2 and not KMPDDEL
"RTN","KMPDUTL",33,0)
 Q:IEN1&('KMPDDEL)
"RTN","KMPDUTL",34,0)
 ; delete if in file 19.2
"RTN","KMPDUTL",35,0)
 I IEN1 S DIK="^DIC(19.2,",DA=IEN1 D ^DIK
"RTN","KMPDUTL",36,0)
 ; add entry
"RTN","KMPDUTL",37,0)
 S FDA($J,19.2,"+1,",.01)=IEN
"RTN","KMPDUTL",38,0)
 ; queued to run at what time
"RTN","KMPDUTL",39,0)
 S FDA($J,19.2,"+1,",2)=KMPDTIME
"RTN","KMPDUTL",40,0)
 ; rescheduling frequency.
"RTN","KMPDUTL",41,0)
 S FDA($J,19.2,"+1,",6)=KMPDFREQ
"RTN","KMPDUTL",42,0)
 D UPDATE^DIE("","FDA($J)",.IENZ,"ERROR")
"RTN","KMPDUTL",43,0)
 I $D(ERROR) D MSG^DIALOG("W","",60,10,"ERROR")
"RTN","KMPDUTL",44,0)
 S IEN1=$O(^DIC(19.2,"B",IEN,0))
"RTN","KMPDUTL",45,0)
 I '$G(^DIC(19.2,+IEN1,1)) D 
"RTN","KMPDUTL",46,0)
 .D MES^XPDUTL("     ERROR - Not able to reschedule "_KMPDOPT)
"RTN","KMPDUTL",47,0)
 .D MES^XPDUTL("     Use 'Schedule/Unschedule Options' [XUTM SCHEDULE] to reschedule.")
"RTN","KMPDUTL",48,0)
 ;
"RTN","KMPDUTL",49,0)
 Q
"RTN","KMPDUTL",50,0)
 ;
"RTN","KMPDUTL",51,0)
VERSION() ;-- extrinsic - return current version.
"RTN","KMPDUTL",52,0)
 Q $P($T(+2^KMPDUTL),";",3)_"^"_$P($T(+2^KMPDUTL),";",5)
"RTN","KMPDUTL",53,0)
 ;
"RTN","KMPDUTL",54,0)
VRSNGET(KMPDAPPL) ;-- extrinsic function - get version^patches
"RTN","KMPDUTL",55,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL",56,0)
 ; KMPDAPPL... application:
"RTN","KMPDUTL",57,0)
 ;              0 - CM Tools
"RTN","KMPDUTL",58,0)
 ;              1 - SAGG
"RTN","KMPDUTL",59,0)
 ;              2 - RUM
"RTN","KMPDUTL",60,0)
 ;
"RTN","KMPDUTL",61,0)
 ; Return: Version^Patch^VersionInstallDate^PatchInstallDate
"RTN","KMPDUTL",62,0)
 ;         null = no application
"RTN","KMPDUTL",63,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL",64,0)
 ;
"RTN","KMPDUTL",65,0)
 Q:$G(KMPDAPPL)="" ""
"RTN","KMPDUTL",66,0)
 Q:KMPDAPPL<0!(KMPDAPPL>2) ""
"RTN","KMPDUTL",67,0)
 ;
"RTN","KMPDUTL",68,0)
 N DATA,VERSION S VERSION=""
"RTN","KMPDUTL",69,0)
 ;
"RTN","KMPDUTL",70,0)
 ; cm tools
"RTN","KMPDUTL",71,0)
 I KMPDAPPL=0 D 
"RTN","KMPDUTL",72,0)
 .S DATA=$G(^KMPD(8973,1,KMPDAPPL))
"RTN","KMPDUTL",73,0)
 .S VERSION=$P(DATA,U,2)_U_$P(DATA,U,4)_U_$P(DATA,U,3)_U_$P(DATA,U,5)
"RTN","KMPDUTL",74,0)
 ;
"RTN","KMPDUTL",75,0)
 ; all other applications
"RTN","KMPDUTL",76,0)
 E  D 
"RTN","KMPDUTL",77,0)
 .S DATA=$G(^KMPD(8973,1,KMPDAPPL))
"RTN","KMPDUTL",78,0)
 .S VERSION=$P(DATA,U)_U_$P(DATA,U,3)_U_$P(DATA,U,2)_U_$P(DATA,U,4)
"RTN","KMPDUTL",79,0)
 ;
"RTN","KMPDUTL",80,0)
 Q VERSION
"RTN","KMPDUTL",81,0)
 ;
"RTN","KMPDUTL",82,0)
PTCHINFO ; -- patch information: routine name ^ current version ^ current patch(es)
"RTN","KMPDUTL",83,0)
 ;;KMPDBD01^3.0^
"RTN","KMPDUTL",84,0)
 ;;KMPDECH^3.0^
"RTN","KMPDUTL",85,0)
 ;;KMPDHU01^3.0^
"RTN","KMPDUTL",86,0)
 ;;KMPDHU02^3.0
"RTN","KMPDUTL",87,0)
 ;;KMPDHU03^3.0
"RTN","KMPDUTL",88,0)
 ;;KMPDHUA^3.0
"RTN","KMPDUTL",89,0)
 ;;KMPDPOST^3.0^
"RTN","KMPDUTL",90,0)
 ;;KMPDSS^3.0^
"RTN","KMPDUTL",91,0)
 ;;KMPDSS1^3.0^
"RTN","KMPDUTL",92,0)
 ;;KMPDSSD^3.0^
"RTN","KMPDUTL",93,0)
 ;;KMPDSSD1^3.0^
"RTN","KMPDUTL",94,0)
 ;;KMPDSSR^3.0^
"RTN","KMPDUTL",95,0)
 ;;KMPDSSS^3.0^
"RTN","KMPDUTL",96,0)
 ;;KMPDTM^3.0^
"RTN","KMPDUTL",97,0)
 ;;KMPDTP1^3.0^
"RTN","KMPDUTL",98,0)
 ;;KMPDTP2^3.0^
"RTN","KMPDUTL",99,0)
 ;;KMPDTP3^3.0^
"RTN","KMPDUTL",100,0)
 ;;KMPDTP4^3.0^
"RTN","KMPDUTL",101,0)
 ;;KMPDTP5^3.0^
"RTN","KMPDUTL",102,0)
 ;;KMPDTP6^3.0^
"RTN","KMPDUTL",103,0)
 ;;KMPDTP7^3.0^
"RTN","KMPDUTL",104,0)
 ;;KMPDTU01^3.0^
"RTN","KMPDUTL",105,0)
 ;;KMPDTU02^3.0^
"RTN","KMPDUTL",106,0)
 ;;KMPDTU10^3.0^
"RTN","KMPDUTL",107,0)
 ;;KMPDTU11^3.0^
"RTN","KMPDUTL",108,0)
 ;;KMPDU^3.0^
"RTN","KMPDUTL",109,0)
 ;;KMPDU1^3.0^
"RTN","KMPDUTL",110,0)
 ;;KMPDU2^3.0^
"RTN","KMPDUTL",111,0)
 ;;KMPDU3^3.0^
"RTN","KMPDUTL",112,0)
 ;;KMPDU4^3.0
"RTN","KMPDUTL",113,0)
 ;;KMPDU5^3.0^
"RTN","KMPDUTL",114,0)
 ;;KMPDU11^3.0^
"RTN","KMPDUTL",115,0)
 ;;KMPDUG^3.0^
"RTN","KMPDUTL",116,0)
 ;;KMPDUG1^3.0^
"RTN","KMPDUTL",117,0)
 ;;KMPDUG2^3.0^
"RTN","KMPDUTL",118,0)
 ;;KMPDUGV^3.0^
"RTN","KMPDUTL",119,0)
 ;;KMPDUT^3.0^
"RTN","KMPDUTL",120,0)
 ;;KMPDUT1^3.0^
"RTN","KMPDUTL",121,0)
 ;;KMPDUT2^3.0^
"RTN","KMPDUTL",122,0)
 ;;KMPDUT4^3.0^
"RTN","KMPDUTL",123,0)
 ;;KMPDUT4A^3.0^
"RTN","KMPDUTL",124,0)
 ;;KMPDUT4B^3.0^
"RTN","KMPDUTL",125,0)
 ;;KMPDUT4C^3.0^
"RTN","KMPDUTL",126,0)
 ;;KMPDUT5^3.0^
"RTN","KMPDUTL",127,0)
 ;;KMPDUTL^3.0^
"RTN","KMPDUTL",128,0)
 ;;KMPDUTL1^3.0^
"RTN","KMPDUTL",129,0)
 ;;KMPDUTL2^3.0^
"RTN","KMPDUTL",130,0)
 ;;KMPDUTL3^3.0^
"RTN","KMPDUTL",131,0)
 ;;KMPDUTL4^3.0^
"RTN","KMPDUTL",132,0)
 ;;KMPDUTL5^3.0^
"RTN","KMPDUTL",133,0)
 ;;KMPDUTL6^3.0^
"RTN","KMPDUTL",134,0)
 ;;KMPDUTL7^3.0^
"RTN","KMPDUTL",135,0)
 ;;KMPDUTL8^3.0^
"RTN","KMPDUTL1")
0^49^B28878792^B28456598
"RTN","KMPDUTL1",1,0)
KMPDUTL1 ;OAK/RAK,KAK - CM TOOLS Utilities ;2/17/04  10:51
"RTN","KMPDUTL1",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDUTL1",3,0)
 ;
"RTN","KMPDUTL1",4,0)
CONT(KMPDEXT)  ;-- function displays 'return to continue' message at bottom of page
"RTN","KMPDUTL1",5,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUTL1",6,0)
 ; KMPDEXT 0 = do not show 'to exit' text
"RTN","KMPDUTL1",7,0)
 ;         1 = show 'to exit' text
"RTN","KMPDUTL1",8,0)
 ;
"RTN","KMPDUTL1",9,0)
 ; Return: 0 = continue
"RTN","KMPDUTL1",10,0)
 ;         1 = quit
"RTN","KMPDUTL1",11,0)
 ;--------------------------------------------------------------------
"RTN","KMPDUTL1",12,0)
 ;
"RTN","KMPDUTL1",13,0)
 N DIR,X,Y
"RTN","KMPDUTL1",14,0)
 ;
"RTN","KMPDUTL1",15,0)
 S KMPDEXT=+$G(KMPDEXT)
"RTN","KMPDUTL1",16,0)
 F  Q:$Y>(IOSL-3)  W !
"RTN","KMPDUTL1",17,0)
 S DIR(0)="EA"
"RTN","KMPDUTL1",18,0)
 S DIR("A")="Press RETURN to continue"_$S(KMPDEXT:" or '^' to exit: ",1:": ")
"RTN","KMPDUTL1",19,0)
 D ^DIR
"RTN","KMPDUTL1",20,0)
 Q +$G(Y)
"RTN","KMPDUTL1",21,0)
 ;
"RTN","KMPDUTL1",22,0)
CURSTAT(STAT)   ;-- current status
"RTN","KMPDUTL1",23,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL1",24,0)
 ; input:  STAT (optional) = data from $$TSKSTAT^KMPSUTL1
"RTN","KMPDUTL1",25,0)
 ; output: See codes below
"RTN","KMPDUTL1",26,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL1",27,0)
 ;
"RTN","KMPDUTL1",28,0)
 N RESULT,SITNUM,STRTDT
"RTN","KMPDUTL1",29,0)
 ;
"RTN","KMPDUTL1",30,0)
 S RESULT="",SITNUM=^DD("SITE",1),STRTDT=$G(^XTMP("KMPS",SITNUM,0))
"RTN","KMPDUTL1",31,0)
 ;
"RTN","KMPDUTL1",32,0)
 I $D(^XTMP("KMPS","ERROR")) Q "6^ERRORS RECORDED"
"RTN","KMPDUTL1",33,0)
 I $D(^XTMP("KMPS","STOP")) Q "7^STOPPING"
"RTN","KMPDUTL1",34,0)
 I $D(^XTMP("KMPS","START")) L +^XTMP("KMPS"):0 I $T L -^XTMP("KMPS") Q "5^DID NOT COMPLETE"
"RTN","KMPDUTL1",35,0)
 I +STRTDT I +$H-STRTDT>2 Q "5^DID NOT COMPLETE"
"RTN","KMPDUTL1",36,0)
 I +STRTDT I +$H-STRTDT>1 Q "4^RUNNING TOO LONG"
"RTN","KMPDUTL1",37,0)
 I $D(^XTMP("KMPS","START")) Q "0^RUNNING"
"RTN","KMPDUTL1",38,0)
 I $D(STAT) Q $P(STAT,U,1,2)
"RTN","KMPDUTL1",39,0)
 E  Q "3^NOT RUNNING"
"RTN","KMPDUTL1",40,0)
 Q "9^UNKNOWN"
"RTN","KMPDUTL1",41,0)
 ;
"RTN","KMPDUTL1",42,0)
SYSINFO() ;-- returns system information
"RTN","KMPDUTL1",43,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL1",44,0)
 ; Returns:
"RTN","KMPDUTL1",45,0)
 ;         "^" piece 1 - type of M platform
"RTN","KMPDUTL1",46,0)
 ;         "^" piece 2 - $ZV => name and version of M system
"RTN","KMPDUTL1",47,0)
 ;         "^" piece 3 - operating system version
"RTN","KMPDUTL1",48,0)
 ;
"RTN","KMPDUTL1",49,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL1",50,0)
 ;
"RTN","KMPDUTL1",51,0)
 N MPLTF,OSVER,SYSINFO
"RTN","KMPDUTL1",52,0)
 ;
"RTN","KMPDUTL1",53,0)
 S MPLTF=$$MPLTF(),OSVER=$$OSVER(MPLTF)
"RTN","KMPDUTL1",54,0)
 S SYSINFO=MPLTF_U_$ZV_U_OSVER
"RTN","KMPDUTL1",55,0)
 Q SYSINFO
"RTN","KMPDUTL1",56,0)
 ;
"RTN","KMPDUTL1",57,0)
MPLTF() ;-- returns the type of M platform
"RTN","KMPDUTL1",58,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL1",59,0)
 ; Returns:  DSM    for DSM platform
"RTN","KMPDUTL1",60,0)
 ;           CVMS   for Cache for OpenVMS platform
"RTN","KMPDUTL1",61,0)
 ;           CWINNT for Cache for Windows NT platform
"RTN","KMPDUTL1",62,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL1",63,0)
 ;
"RTN","KMPDUTL1",64,0)
 N MPLTF,ZV
"RTN","KMPDUTL1",65,0)
 ;
"RTN","KMPDUTL1",66,0)
 S ZV=$ZV
"RTN","KMPDUTL1",67,0)
 S MPLTF=$S(ZV["DSM":"DSM",ZV["VMS":"CVMS",ZV["Windows":"CWINNT",1:"UNK")
"RTN","KMPDUTL1",68,0)
 Q MPLTF
"RTN","KMPDUTL1",69,0)
 ;
"RTN","KMPDUTL1",70,0)
OSVER(MPLTF) ;-- returns the operating system version
"RTN","KMPDUTL1",71,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL1",72,0)
 ; input: MPLTF = type of M platform
"RTN","KMPDUTL1",73,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL1",74,0)
 ;
"RTN","KMPDUTL1",75,0)
 I $G(MPLTF)="" Q ""
"RTN","KMPDUTL1",76,0)
 ;
"RTN","KMPDUTL1",77,0)
 I MPLTF["DSM" Q $ZC(%GETSYI,"VERSION")
"RTN","KMPDUTL1",78,0)
 I MPLTF["CVMS" Q $$CVMSVER^KMPDUTL5()
"RTN","KMPDUTL1",79,0)
 I MPLTF["CWINNT" Q $$CWNTVER^KMPDUTL5()
"RTN","KMPDUTL1",80,0)
 Q ""
"RTN","KMPDUTL1",81,0)
 ;
"RTN","KMPDUTL1",82,0)
TSKSTAT(OPT) ;-- status of scheduled task option
"RTN","KMPDUTL1",83,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL1",84,0)
 ; input  OPT = option name
"RTN","KMPDUTL1",85,0)
 ; 
"RTN","KMPDUTL1",86,0)
 ; output RTN = by "^" piece
"RTN","KMPDUTL1",87,0)
 ;               1 - status code
"RTN","KMPDUTL1",88,0)
 ;               2 - literal condition
"RTN","KMPDUTL1",89,0)
 ;               3 - scheduled date@time (day)
"RTN","KMPDUTL1",90,0)
 ;               4 - numeric day-of-week
"RTN","KMPDUTL1",91,0)
 ;               5 - expanded scheduled frequency
"RTN","KMPDUTL1",92,0)
 ;               6 - short form frequency
"RTN","KMPDUTL1",93,0)
 ;               7 - task id
"RTN","KMPDUTL1",94,0)
 ;               8 - queued by
"RTN","KMPDUTL1",95,0)
 ;               9 - user status
"RTN","KMPDUTL1",96,0)
 ;
"RTN","KMPDUTL1",97,0)
 ; where status code^condition:
"RTN","KMPDUTL1",98,0)
 ;            = 0^SCHEDULED
"RTN","KMPDUTL1",99,0)
 ;            = 1^NOT SCHEDULED and 'scheduled date@time' will
"RTN","KMPDUTL1",100,0)
 ;                   be UNKNOWN and 'numeric day of week' will be -1
"RTN","KMPDUTL1",101,0)
 ;            = 2^NOT RESCHEDULED
"RTN","KMPDUTL1",102,0)
 ;            = 3^MISSING when OPT does not exist
"RTN","KMPDUTL1",103,0)
 ;            = 9^UNKNOWN
"RTN","KMPDUTL1",104,0)
 ;            = ""^UNDEFINED
"RTN","KMPDUTL1",105,0)
 ;
"RTN","KMPDUTL1",106,0)
 ; where user status = ACTIVE or NOT ACTIVE
"RTN","KMPDUTL1",107,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL1",108,0)
 ;
"RTN","KMPDUTL1",109,0)
 Q:$G(OPT)="" "^UNDEFINED"
"RTN","KMPDUTL1",110,0)
 ;
"RTN","KMPDUTL1",111,0)
 N ACTV,DA,DAY,DOW,FREQ,RTN,TSK,TSKINFO,USER
"RTN","KMPDUTL1",112,0)
 ;
"RTN","KMPDUTL1",113,0)
 S (DOW,FREQ)=-1
"RTN","KMPDUTL1",114,0)
 S RTN="9^UNKNOWN^NO DATE^-1^UNKNOWN^^^UNKNOWN^NOT ACTIVE"
"RTN","KMPDUTL1",115,0)
 ;
"RTN","KMPDUTL1",116,0)
 I '$D(^DIC(19,"B",OPT)) S $P(RTN,U,1,2)="3^MISSING" Q RTN
"RTN","KMPDUTL1",117,0)
 S DA=$O(^DIC(19,"B",OPT,0)),DA=+$O(^DIC(19.2,"B",DA,0))
"RTN","KMPDUTL1",118,0)
 S TSKINFO=$G(^DIC(19.2,DA,0)),(DOW,Y)=$P(TSKINFO,U,2),FREQ=$P(TSKINFO,U,6)
"RTN","KMPDUTL1",119,0)
 S $P(TSKINFO,U,2)=$$FMTE^XLFDT($P(TSKINFO,U,2))
"RTN","KMPDUTL1",120,0)
 I DOW'="" S DAY=$$DOW^XLFDT(DOW),DOW=$$DOW^XLFDT(DOW,1)
"RTN","KMPDUTL1",121,0)
 K:$G(DAY)="day" DAY
"RTN","KMPDUTL1",122,0)
 S TSK=+$G(^DIC(19.2,+DA,1))
"RTN","KMPDUTL1",123,0)
 I (DOW="")!(TSK="") S $P(RTN,U,1,2)="1^NOT SCHEDULED"
"RTN","KMPDUTL1",124,0)
 E  D
"RTN","KMPDUTL1",125,0)
 .S $P(RTN,U,1,2)="0^SCHEDULED"
"RTN","KMPDUTL1",126,0)
 .I FREQ="" S $P(RTN,U,1,2)="2^NOT RESCHEDULED"
"RTN","KMPDUTL1",127,0)
 .; queued to run at
"RTN","KMPDUTL1",128,0)
 .S $P(RTN,U,3,4)=$S($P(TSKINFO,U,2)="":"NO DATE",1:$P(TSKINFO,U,2))_$S($D(DAY):" ("_DAY_")",1:"")_U_DOW
"RTN","KMPDUTL1",129,0)
 ; rescheduling frequency
"RTN","KMPDUTL1",130,0)
 I FREQ?1.3N1A D
"RTN","KMPDUTL1",131,0)
 .S $P(RTN,U,5,6)=+FREQ_" "_$S(FREQ["D":"day",FREQ["M":"month",1:FREQ)_$S(+FREQ>1:"s",1:"")_U_FREQ
"RTN","KMPDUTL1",132,0)
 E  S $P(RTN,U,5,6)=$S(FREQ="":"UNKNOWN",1:FREQ)_U_FREQ
"RTN","KMPDUTL1",133,0)
 ; task id
"RTN","KMPDUTL1",134,0)
 S $P(RTN,U,7)=TSK
"RTN","KMPDUTL1",135,0)
 ; find if the user is active
"RTN","KMPDUTL1",136,0)
 I TSK D
"RTN","KMPDUTL1",137,0)
 .S TSKINFO=$G(^%ZTSK(TSK,0))
"RTN","KMPDUTL1",138,0)
 .S USER=+$P(TSKINFO,U,3)
"RTN","KMPDUTL1",139,0)
 .S ACTV=+$$ACTIVE^XUSER(USER)
"RTN","KMPDUTL1",140,0)
 .; queued by
"RTN","KMPDUTL1",141,0)
 .S $P(RTN,U,8)=$P($G(^VA(200,USER,0)),U)
"RTN","KMPDUTL1",142,0)
 I $G(ACTV) S $P(RTN,U,9)="ACTIVE"
"RTN","KMPDUTL1",143,0)
 Q RTN
"RTN","KMPDUTL1",144,0)
 ;
"RTN","KMPDUTL1",145,0)
VERPTCH(PKG,RTNARRY)    ;-- returns current version and patch status of specified CM package
"RTN","KMPDUTL1",146,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL1",147,0)
 ; input PKG = 'D' for CM TOOLS
"RTN","KMPDUTL1",148,0)
 ;             'R' for RUM
"RTN","KMPDUTL1",149,0)
 ;             'S' for SAGG
"RTN","KMPDUTL1",150,0)
 ; Return array (passed by reference) in format:
"RTN","KMPDUTL1",151,0)
 ; output RTNARRY = -1 for error
"RTN","KMPDUTL1",152,0)
 ;        RTNARRY(0) = number of routines^total rtns ok^total rtns bad^total rtns missing
"RTN","KMPDUTL1",153,0)
 ;        RTNARRY(rtn name) = {0=good 1=bad 2=missing routine}^released version^released patch(es)^site version^site patch(es)
"RTN","KMPDUTL1",154,0)
 ;
"RTN","KMPDUTL1",155,0)
 ; This code will reference line tag PTCHINFO^KMP_pkg_UTL for the
"RTN","KMPDUTL1",156,0)
 ; following patch information text starting at PTCHINFO+1:
"RTN","KMPDUTL1",157,0)
 ;
"RTN","KMPDUTL1",158,0)
 ;        ;;routine name ^ current version ^ current patch(es)
"RTN","KMPDUTL1",159,0)
 ;
"RTN","KMPDUTL1",160,0)
 ; Example:    
"RTN","KMPDUTL1",161,0)
 ;           PATCHINFO  ;-- patch information
"RTN","KMPDUTL1",162,0)
 ;                      ;;KMPSGE^1.8^**1,2**
"RTN","KMPDUTL1",163,0)
 ;                      ;;KMPSUTL^1.8^**1,2**
"RTN","KMPDUTL1",164,0)
 ;  last line >         ;;
"RTN","KMPDUTL1",165,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL1",166,0)
 ;
"RTN","KMPDUTL1",167,0)
 K RTNARRY
"RTN","KMPDUTL1",168,0)
 ;
"RTN","KMPDUTL1",169,0)
 N BAD,I,INFO,INFOSITE,OK,OUT,PTCH,PTCHSITE,RTN
"RTN","KMPDUTL1",170,0)
 N TAG,TOTBAD,TOTMISS,TOTOK,TOTRTN,X,VER,VERSITE
"RTN","KMPDUTL1",171,0)
 ;
"RTN","KMPDUTL1",172,0)
 I $G(PKG)=""!("DRS"'[$G(PKG))!($L(PKG)'=1) S RTNARRY=-1 Q
"RTN","KMPDUTL1",173,0)
 S X="KMP"_PKG_"UTL"
"RTN","KMPDUTL1",174,0)
 X ^%ZOSF("TEST") I '$T S RTNARRY=-1 Q
"RTN","KMPDUTL1",175,0)
 ;
"RTN","KMPDUTL1",176,0)
 S (OUT,TOTBAD,TOTMISS,TOTOK,TOTRTN)=0
"RTN","KMPDUTL1",177,0)
 F I=1:1 D  Q:OUT
"RTN","KMPDUTL1",178,0)
 .S TAG="PTCHINFO+"_I_"^KMP"_PKG_"UTL"
"RTN","KMPDUTL1",179,0)
 .S INFO=$P($T(@TAG),";;",2)
"RTN","KMPDUTL1",180,0)
 .I INFO="" S OUT=1 Q
"RTN","KMPDUTL1",181,0)
 .S RTN=$P(INFO,U),VER=$P(INFO,U,2),PTCH=$P(INFO,U,3)
"RTN","KMPDUTL1",182,0)
 .; if routine is missing
"RTN","KMPDUTL1",183,0)
 .I $T(@(RTN_"^"_RTN))="" D  Q
"RTN","KMPDUTL1",184,0)
 ..S TOTMISS=TOTMISS+1,TOTRTN=TOTRTN+1
"RTN","KMPDUTL1",185,0)
 ..S RTNARRY(RTN)="2^"_VER_U_PTCH_"^^"
"RTN","KMPDUTL1",186,0)
 .X "ZL @RTN S INFOSITE=$T(+2)"
"RTN","KMPDUTL1",187,0)
 .S VERSITE=$P(INFOSITE,";",3),PTCHSITE=$P(INFOSITE,";",5)
"RTN","KMPDUTL1",188,0)
 .I VERSITE'=VER!(PTCHSITE'=PTCH) S BAD=1,OK=0
"RTN","KMPDUTL1",189,0)
 .E  S BAD=0,OK=1
"RTN","KMPDUTL1",190,0)
 .S TOTBAD=TOTBAD+BAD,TOTOK=TOTOK+OK,TOTRTN=TOTRTN+1
"RTN","KMPDUTL1",191,0)
 .S RTNARRY(RTN)=BAD_U_VER_U_PTCH_U_VERSITE_U_PTCHSITE
"RTN","KMPDUTL1",192,0)
 S RTNARRY(0)=TOTRTN_U_TOTOK_U_TOTBAD_U_TOTMISS
"RTN","KMPDUTL1",193,0)
 Q
"RTN","KMPDUTL2")
0^50^B10409339^B10409339
"RTN","KMPDUTL2",1,0)
KMPDUTL2 ;OAK/RAK - CM Tools Utility ;6/21/05  10:18
"RTN","KMPDUTL2",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDUTL2",3,0)
 ;
"RTN","KMPDUTL2",4,0)
DATERNG(KMPUY,KMPUSTR,KMPUEND) ;-- date range
"RTN","KMPDUTL2",5,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL2",6,0)
 ; KMPUY..... Value returned in four pieces:
"RTN","KMPDUTL2",7,0)
 ;            fmstartdate^fmenddate^ouputstartdate^outputenddate
"RTN","KMPDUTL2",8,0)
 ;
"RTN","KMPDUTL2",9,0)
 ;            Piece one and two are the date ranges in fileman format.
"RTN","KMPDUTL2",10,0)
 ;            Piece three and four are the same dates in output format:
"RTN","KMPDUTL2",11,0)
 ;                             dy-Mon-yr
"RTN","KMPDUTL2",12,0)
 ;
"RTN","KMPDUTL2",13,0)
 ;                               ********
"RTN","KMPDUTL2",14,0)
 ;                               * NOTE *
"RTN","KMPDUTL2",15,0)
 ;                               ********
"RTN","KMPDUTL2",16,0)
 ;          - The first piece will always be the earliest date entered.
"RTN","KMPDUTL2",17,0)
 ;
"RTN","KMPDUTL2",18,0)
 ;  Optional Parameters:
"RTN","KMPDUTL2",19,0)
 ;
"RTN","KMPDUTL2",20,0)
 ; KMPUSTR... If defined, the earliest date that may be selected.
"RTN","KMPDUTL2",21,0)
 ;            (must be in fileman format)
"RTN","KMPDUTL2",22,0)
 ;
"RTN","KMPDUTL2",23,0)
 ; KMPUEND... If defined, the latest date that may be selected.
"RTN","KMPDUTL2",24,0)
 ;            (must be in fileman format)
"RTN","KMPDUTL2",25,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL2",26,0)
 ;
"RTN","KMPDUTL2",27,0)
 N DATE1,DATE2,DIR,DIRUT,LINE,X,Y
"RTN","KMPDUTL2",28,0)
 ;
"RTN","KMPDUTL2",29,0)
 S KMPUY="",KMPUSTR=$G(KMPUSTR),KMPUEND=$G(KMPUEND)
"RTN","KMPDUTL2",30,0)
 ;
"RTN","KMPDUTL2",31,0)
RANGE ;-- Ask date ranges
"RTN","KMPDUTL2",32,0)
 S DIR(0)="DOA^"_$S(KMPUSTR:KMPUSTR,1:"")_":"_$S(KMPUEND:KMPUEND,1:"")_":ET)"
"RTN","KMPDUTL2",33,0)
 S DIR("A")="Start with Date: "
"RTN","KMPDUTL2",34,0)
 S:KMPUSTR DIR("B")=$$FMTE^XLFDT(KMPUSTR,2)
"RTN","KMPDUTL2",35,0)
 S DIR("?")=" "
"RTN","KMPDUTL2",36,0)
 S DIR("?",1)="Enter the starting date.",LINE=2
"RTN","KMPDUTL2",37,0)
 ; if starting date.
"RTN","KMPDUTL2",38,0)
 I KMPUSTR D 
"RTN","KMPDUTL2",39,0)
 .S DIR("?",LINE)="Date must not precede "_$$FMTE^XLFDT(KMPUSTR)
"RTN","KMPDUTL2",40,0)
 .S LINE=LINE+1
"RTN","KMPDUTL2",41,0)
 ; if ending date.
"RTN","KMPDUTL2",42,0)
 I KMPUEND S DIR("?",LINE)="Date must not follow "_$$FMTE^XLFDT(KMPUEND)
"RTN","KMPDUTL2",43,0)
 W ! D ^DIR I $D(DIRUT) S KMPUY="" Q
"RTN","KMPDUTL2",44,0)
 S DATE1=Y
"RTN","KMPDUTL2",45,0)
 S DIR("A")="  End with Date: "
"RTN","KMPDUTL2",46,0)
 S:KMPUEND DIR("B")=$$FMTE^XLFDT(KMPUEND,2)
"RTN","KMPDUTL2",47,0)
 S DIR("?",1)="Enter the ending date."
"RTN","KMPDUTL2",48,0)
 D ^DIR G:Y="" RANGE I Y="^" S KMPUY="" Q
"RTN","KMPDUTL2",49,0)
 S DATE2=Y
"RTN","KMPDUTL2",50,0)
 ; Set earliest date into first piece.
"RTN","KMPDUTL2",51,0)
 S KMPUY=$S(DATE2<DATE1:DATE2,1:DATE1)_U_$S(DATE2>DATE1:DATE2,1:DATE1)
"RTN","KMPDUTL2",52,0)
 S $P(KMPUY,U,3)=$$FMTE^XLFDT($P(KMPUY,U))
"RTN","KMPDUTL2",53,0)
 S $P(KMPUY,U,4)=$$FMTE^XLFDT($P(KMPUY,U,2))
"RTN","KMPDUTL2",54,0)
 Q
"RTN","KMPDUTL2",55,0)
 ;
"RTN","KMPDUTL2",56,0)
EMAIL(KMPDSUBJ,KMPDTEXT,KMPDTO) ; check and process errors.
"RTN","KMPDUTL2",57,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL2",58,0)
 ; KMPDSUBJ... Free text - to be included in subject
"RTN","KMPDUTL2",59,0)
 ; KMPDTEXT(). Array containing message text.  This must be in a format
"RTN","KMPDUTL2",60,0)
 ;             accepted by XMTEXT - TEXT(
"RTN","KMPDUTL2",61,0)
 ;                                  ^TMP($J,"TEXT",
"RTN","KMPDUTL2",62,0)
 ; KMPDTO..... Address for email recipient:
"RTN","KMPDUTL2",63,0)
 ;              G.KMP2-RUM@FO-ALBANY.domain.ext
"RTN","KMPDUTL2",64,0)
 ;              G.KMP4-CMTOOLS@FO-ALBANY.domain.ext
"RTN","KMPDUTL2",65,0)
 ;              G.CAPACITY,MANAGEMENT@FO-ALBANY.domain.ext
"RTN","KMPDUTL2",66,0)
 ;             If no value is passed the default will be 
"RTN","KMPDUTL2",67,0)
 ;              G.KMP4-CMTOOLS@FO-ALBANY.domain.ext
"RTN","KMPDUTL2",68,0)
 ;              
"RTN","KMPDUTL2",69,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL2",70,0)
 ;
"RTN","KMPDUTL2",71,0)
 Q:$G(KMPDTEXT)=""
"RTN","KMPDUTL2",72,0)
 S KMPDSUBJ=$S($G(KMPDSUBJ)="":"CM Error",1:KMPDSUBJ)
"RTN","KMPDUTL2",73,0)
 S KMPDTO=$S($G(KMPDTO)="":"G.KMP4-CMTOOLS@FO-ALBANY.domain.ext",1:KMPDTO)
"RTN","KMPDUTL2",74,0)
 ;
"RTN","KMPDUTL2",75,0)
 N H,I,LN,N,O,SITE,TEXT,TL,XMSUB,X,XMTEXT,XMY,XMZ,Y,Z
"RTN","KMPDUTL2",76,0)
 ;
"RTN","KMPDUTL2",77,0)
 S TL=$$TESTLAB^KMPDUT1
"RTN","KMPDUTL2",78,0)
 S SITE=$$SITE^VASITE
"RTN","KMPDUTL2",79,0)
 S XMSUB=KMPDSUBJ_" at site "_$P(TL,U,2)_$P(SITE,U,3)_" on "_$$FMTE^XLFDT($$DT^XLFDT)
"RTN","KMPDUTL2",80,0)
 S XMTEXT=KMPDTEXT
"RTN","KMPDUTL2",81,0)
 S XMY(KMPDTO)=""
"RTN","KMPDUTL2",82,0)
 D ^XMD
"RTN","KMPDUTL2",83,0)
 W:'$D(ZTQUEUED) !,"Message #"_$G(XMZ)_" sent..."
"RTN","KMPDUTL2",84,0)
 ;
"RTN","KMPDUTL2",85,0)
 Q
"RTN","KMPDUTL2",86,0)
 ;
"RTN","KMPDUTL2",87,0)
STRSTP(KMPDAPP,KMPDDW,KMPDBP,KMPDSTM) ;-- record start/stop times
"RTN","KMPDUTL2",88,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL2",89,0)
 ; KMPDAPP.... CP application:
"RTN","KMPDUTL2",90,0)
 ;              1 - sagg
"RTN","KMPDUTL2",91,0)
 ;              2 - rum
"RTN","KMPDUTL2",92,0)
 ;              3 - hl7
"RTN","KMPDUTL2",93,0)
 ;              4 - timing
"RTN","KMPDUTL2",94,0)
 ; KMPDDW..... Daily or Weekly
"RTN","KMPDUTL2",95,0)
 ;              1 - daily
"RTN","KMPDUTL2",96,0)
 ;              2 - weekly
"RTN","KMPDUTL2",97,0)
 ; KMPDBP.... Background or Purge
"RTN","KMPDUTL2",98,0)
 ;              1 - background
"RTN","KMPDUTL2",99,0)
 ;              2 - purge
"RTN","KMPDUTL2",100,0)
 ; KMPDSTM.... Start Time in internal fileman format
"RTN","KMPDUTL2",101,0)
 ;
"RTN","KMPDUTL2",102,0)
 ; This api will calculate END time and DELTA time (END-KMPDSTM) and
"RTN","KMPDUTL2",103,0)
 ; store the results in:
"RTN","KMPDUTL2",104,0)
 ;    ^XTMP("KMPD","BACKGROUND",KMPDAPP,KMPDDW,KMPDBP,...)
"RTN","KMPDUTL2",105,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL2",106,0)
 Q:'$G(KMPDAPP)
"RTN","KMPDUTL2",107,0)
 Q:KMPDAPP<1!(KMPDAPP>4)
"RTN","KMPDUTL2",108,0)
 Q:'$G(KMPDDW)
"RTN","KMPDUTL2",109,0)
 Q:KMPDDW<1!(KMPDDW>2)
"RTN","KMPDUTL2",110,0)
 Q:'$G(KMPDBP)
"RTN","KMPDUTL2",111,0)
 Q:KMPDBP<1!(KMPDBP>2)
"RTN","KMPDUTL2",112,0)
 Q:'$G(KMPDSTM)
"RTN","KMPDUTL2",113,0)
 ;
"RTN","KMPDUTL2",114,0)
 N END,ERROR,FDA,FIELD S END=$$NOW^XLFDT
"RTN","KMPDUTL2",115,0)
 ;
"RTN","KMPDUTL2",116,0)
 ; starting field for daily or background
"RTN","KMPDUTL2",117,0)
 S FIELD=KMPDAPP+($S(KMPDDW=1:5,1:8)*.01)
"RTN","KMPDUTL2",118,0)
 ; if purge
"RTN","KMPDUTL2",119,0)
 S:KMPDBP=2 FIELD=FIELD+.07
"RTN","KMPDUTL2",120,0)
 ;
"RTN","KMPDUTL2",121,0)
 ; store start time, end time, and delta
"RTN","KMPDUTL2",122,0)
 S FDA($J,8973,"1,",FIELD)=KMPDSTM
"RTN","KMPDUTL2",123,0)
 S FDA($J,8973,"1,",FIELD+.01)=END
"RTN","KMPDUTL2",124,0)
 S FDA($J,8973,"1,",FIELD+.02)=$$FMDIFF^XLFDT(END,KMPDSTM,3)
"RTN","KMPDUTL2",125,0)
 ;
"RTN","KMPDUTL2",126,0)
 D FILE^DIE("","FDA($J)","ERROR")
"RTN","KMPDUTL2",127,0)
 ;
"RTN","KMPDUTL2",128,0)
 Q
"RTN","KMPDUTL3")
0^51^B2642844^B2493669
"RTN","KMPDUTL3",1,0)
KMPDUTL3 ;OAK/RAK - CM Tools Utility ;2/17/04  10:53
"RTN","KMPDUTL3",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDUTL3",3,0)
 ;
"RTN","KMPDUTL3",4,0)
PURGE(KMPDT) ;-- purge data in file #8973.1
"RTN","KMPDUTL3",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL3",6,0)
 ; KMPDT.. Date to begin purge in internal fileman format. Purge will
"RTN","KMPDUTL3",7,0)
 ;           reverse $order and delete entries 'EARLIER' than KMPDT.
"RTN","KMPDUTL3",8,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL3",9,0)
 ;
"RTN","KMPDUTL3",10,0)
 Q:'$G(KMPDT)
"RTN","KMPDUTL3",11,0)
 ;
"RTN","KMPDUTL3",12,0)
 N DA,DATE,DIK,IEN
"RTN","KMPDUTL3",13,0)
 W:'$D(ZTQUEUED) !!,"Purging old records..."
"RTN","KMPDUTL3",14,0)
 S DATE=KMPDT
"RTN","KMPDUTL3",15,0)
 F  S DATE=$O(^KMPD(8973.1,"B",DATE),-1) Q:'DATE!(DATE>KMPDT)  D 
"RTN","KMPDUTL3",16,0)
 .F IEN=0:0 S IEN=$O(^KMPD(8973.1,"B",DATE,IEN)) Q:'IEN  D 
"RTN","KMPDUTL3",17,0)
 ..; quit if not 'sent to cm database'.
"RTN","KMPDUTL3",18,0)
 ..Q:'$P($G(^KMPD(8973.1,IEN,0)),U,2)
"RTN","KMPDUTL3",19,0)
 ..I '$D(ZTQUEUED) W:$X>78 !?16 W "."
"RTN","KMPDUTL3",20,0)
 ..; Delete entry.
"RTN","KMPDUTL3",21,0)
 ..S DA=IEN,DIK="^KMPD(8973.1," D ^DIK
"RTN","KMPDUTL3",22,0)
 ;
"RTN","KMPDUTL3",23,0)
 Q
"RTN","KMPDUTL3",24,0)
 ;
"RTN","KMPDUTL3",25,0)
PURGE1 ;-- purge data in file #8973.2
"RTN","KMPDUTL3",26,0)
 ;
"RTN","KMPDUTL3",27,0)
 N DA,DATE,DAYS,DIK,IEN,PURGE
"RTN","KMPDUTL3",28,0)
 ;
"RTN","KMPDUTL3",29,0)
 ; days to keep data (weeks * 7)
"RTN","KMPDUTL3",30,0)
 S DAYS=$P($G(^KMPD(8973,1,4)),U,11)
"RTN","KMPDUTL3",31,0)
 S:'DAYS DAYS=4 S DAYS=DAYS*7
"RTN","KMPDUTL3",32,0)
 ; determine date to start purge
"RTN","KMPDUTL3",33,0)
 S PURGE=$$FMADD^XLFDT(DT,-DAYS) Q:'PURGE
"RTN","KMPDUTL3",34,0)
 W:'$D(ZTQUEUED) !!,"Purging old records..."
"RTN","KMPDUTL3",35,0)
 S DATE=PURGE-.1
"RTN","KMPDUTL3",36,0)
 F  S DATE=$O(^KMPD(8973.2,"C",DATE),-1) Q:'DATE!(DATE>PURGE)  D 
"RTN","KMPDUTL3",37,0)
 .F IEN=0:0 S IEN=$O(^KMPD(8973.2,"C",DATE,IEN)) Q:'IEN  D 
"RTN","KMPDUTL3",38,0)
 ..I '$D(^KMPD(8973.2,IEN,0)) K ^KMPD(8973.2,"C",DATE,IEN) Q
"RTN","KMPDUTL3",39,0)
 ..W:'$D(ZTQUEUED)&('(IEN#10)) "."
"RTN","KMPDUTL3",40,0)
 ..; delete entry.
"RTN","KMPDUTL3",41,0)
 ..S DA=IEN,DIK="^KMPD(8973.2," D ^DIK
"RTN","KMPDUTL3",42,0)
 ;
"RTN","KMPDUTL3",43,0)
 Q
"RTN","KMPDUTL4")
0^52^B7857389^B7857389
"RTN","KMPDUTL4",1,0)
KMPDUTL4 ;OAK/RAK; Reverse Video Header/Footer ;2/17/04  10:54
"RTN","KMPDUTL4",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDUTL4",3,0)
 ;
"RTN","KMPDUTL4",4,0)
CONTINUE(KMPDMSSG,KMPDLN,KMPDY) ;-- press return to continue
"RTN","KMPDUTL4",5,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL4",6,0)
 ; KMPDMSSG. (optional) Message to display to user (if not defined then
"RTN","KMPDUTL4",7,0)
 ;           default message by ^DIR is used).
"RTN","KMPDUTL4",8,0)
 ; KMPDLN... Lines to go down before printing
"RTN","KMPDUTL4",9,0)
 ; KMPDY.... Return value: 0 - do not continue.
"RTN","KMPDUTL4",10,0)
 ;                         1 - continue.
"RTN","KMPDUTL4",11,0)
 ;           Access by reference.
"RTN","KMPDUTL4",12,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL4",13,0)
 ;
"RTN","KMPDUTL4",14,0)
 S KMPDMSSG=$G(KMPDMSSG),KMPDLN=+$G(KMPDLN),KMPDY=0
"RTN","KMPDUTL4",15,0)
 ;
"RTN","KMPDUTL4",16,0)
 ; if not terminal continue without displaying message.
"RTN","KMPDUTL4",17,0)
 I $E(IOST,1,2)'="C-" S KMPDY=1 Q
"RTN","KMPDUTL4",18,0)
 ;
"RTN","KMPDUTL4",19,0)
 N DIR,I,X,Y
"RTN","KMPDUTL4",20,0)
 S DIR(0)="EO"
"RTN","KMPDUTL4",21,0)
 S:KMPDMSSG]"" DIR("A")=KMPDMSSG
"RTN","KMPDUTL4",22,0)
 I KMPDLN F I=1:1:KMPDLN W !
"RTN","KMPDUTL4",23,0)
 D ^DIR
"RTN","KMPDUTL4",24,0)
 S KMPDY=+$G(Y)
"RTN","KMPDUTL4",25,0)
 ;
"RTN","KMPDUTL4",26,0)
 Q
"RTN","KMPDUTL4",27,0)
 ;
"RTN","KMPDUTL4",28,0)
HDR(TITLE1,TITLE2) ;header
"RTN","KMPDUTL4",29,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL4",30,0)
 ;  clear screen and print header in reverse video
"RTN","KMPDUTL4",31,0)
 ;
"RTN","KMPDUTL4",32,0)
 ;  if TITLE1 is not defined routine will quit
"RTN","KMPDUTL4",33,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL4",34,0)
 S TITLE1=$G(TITLE1),TITLE2=$G(TITLE2) Q:TITLE1']""
"RTN","KMPDUTL4",35,0)
 I $G(IORVON)']""!($G(IORVOFF)']"") N IORVON,IORVOFF,X D 
"RTN","KMPDUTL4",36,0)
 .S X="IORVON;IORVOFF" D ENDR^%ZISS
"RTN","KMPDUTL4",37,0)
 S TITLE1=IORVON_" "_TITLE1_" "_IORVOFF
"RTN","KMPDUTL4",38,0)
 I TITLE2]"" S TITLE2=IORVON_" "_TITLE2_" "_IORVOFF
"RTN","KMPDUTL4",39,0)
 W @IOF
"RTN","KMPDUTL4",40,0)
 W !?(IOM-$L(TITLE1)/2),TITLE1
"RTN","KMPDUTL4",41,0)
 I TITLE2]"" W !?(IOM-$L(TITLE2)/2),TITLE2
"RTN","KMPDUTL4",42,0)
 Q
"RTN","KMPDUTL4",43,0)
 ;
"RTN","KMPDUTL4",44,0)
FTR(FOOTER,VALUE) ;print footer
"RTN","KMPDUTL4",45,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL4",46,0)
 ;  line feed to IOSL-3 and place message on screen
"RTN","KMPDUTL4",47,0)
 ;  if IOSL or IOM are not defined routine will quit
"RTN","KMPDUTL4",48,0)
 ;
"RTN","KMPDUTL4",49,0)
 ;  FOOTER - text to appear at the bottom of the screen
"RTN","KMPDUTL4",50,0)
 ;           if footer is not defined then the message
"RTN","KMPDUTL4",51,0)
 ;           'Press RETURN to continue, '^' to exit'   will appear
"RTN","KMPDUTL4",52,0)
 ;
"RTN","KMPDUTL4",53,0)
 ;  footer appears in the middle of the screen
"RTN","KMPDUTL4",54,0)
 ;
"RTN","KMPDUTL4",55,0)
 ;  VALUE - value returned:
"RTN","KMPDUTL4",56,0)
 ;          "" - if IOSL or IOM are not defined
"RTN","KMPDUTL4",57,0)
 ;           0 - if an uparrow '^' is entered
"RTN","KMPDUTL4",58,0)
 ;           1 - if return is entered
"RTN","KMPDUTL4",59,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL4",60,0)
 ;
"RTN","KMPDUTL4",61,0)
 S VALUE="" I '$G(IOSL)!('$G(IOM)) Q
"RTN","KMPDUTL4",62,0)
 N DIR,I,X,Y
"RTN","KMPDUTL4",63,0)
 I $G(FOOTER)']""  S FOOTER="Press RETURN to continue, '^' to exit"
"RTN","KMPDUTL4",64,0)
 I $G(IORVON)']""!($G(IORVOFF)']"") N IORVON,IORVOFF,X D 
"RTN","KMPDUTL4",65,0)
 .S X="IORVON;IORVOFF" D ENDR^%ZISS
"RTN","KMPDUTL4",66,0)
 S FOOTER=IORVON_" "_FOOTER_" "_IORVOFF
"RTN","KMPDUTL4",67,0)
 S DIR(0)="EA",DIR("A")=$J(" ",(IOM-$L(FOOTER)/2))_FOOTER
"RTN","KMPDUTL4",68,0)
 F I=$Y:1:(IOSL-3) W !
"RTN","KMPDUTL4",69,0)
 D ^DIR S VALUE=Y
"RTN","KMPDUTL4",70,0)
 Q
"RTN","KMPDUTL4",71,0)
 ;
"RTN","KMPDUTL4",72,0)
PTNPSEL() ;-- extrinsic function - select prime time, non-prime time or both
"RTN","KMPDUTL4",73,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL4",74,0)
 ; Return: 1^Prime Time
"RTN","KMPDUTL4",75,0)
 ;         2^Non-Prime Time
"RTN","KMPDUTL4",76,0)
 ;         3^Both Prime Time & Non-Prime Time
"RTN","KMPDUTL4",77,0)
 ;         "" - no selection made
"RTN","KMPDUTL4",78,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL4",79,0)
 N DIR,X,Y
"RTN","KMPDUTL4",80,0)
 S DIR(0)="SO^1:Prime Time;2:Non-Prime Time"
"RTN","KMPDUTL4",81,0)
 S DIR("A")="Select Time Frame",DIR("B")=1
"RTN","KMPDUTL4",82,0)
 S DIR("?",1)="Select one of the following:"
"RTN","KMPDUTL4",83,0)
 S DIR("?",2)=""
"RTN","KMPDUTL4",84,0)
 S DIR("?",3)="      PRIME TIME => Weekdays 8 am till 5 pm"
"RTN","KMPDUTL4",85,0)
 S DIR("?",4)="        - or -"
"RTN","KMPDUTL4",86,0)
 S DIR("?",5)="  NON-PRIME TIME => Weekdays after 5 pm and before 8 am"
"RTN","KMPDUTL4",87,0)
 S DIR("?")="                    and Weekends all day"
"RTN","KMPDUTL4",88,0)
 D ^DIR
"RTN","KMPDUTL4",89,0)
 Q:$G(Y)=""!($G(Y)="^") ""
"RTN","KMPDUTL4",90,0)
 Q $S(Y:Y_"^"_$G(Y(0)),1:Y)
"RTN","KMPDUTL4",91,0)
 ;
"RTN","KMPDUTL4",92,0)
STRIP(TEXT) ;-- function to strip leading spaces from text string
"RTN","KMPDUTL4",93,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL4",94,0)
 ; input TEXT = text string
"RTN","KMPDUTL4",95,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL4",96,0)
 ;
"RTN","KMPDUTL4",97,0)
 N I,LEN
"RTN","KMPDUTL4",98,0)
 ;
"RTN","KMPDUTL4",99,0)
 S LEN=$L(TEXT)
"RTN","KMPDUTL4",100,0)
 F I=1:1:LEN Q:$E(TEXT)'=" "  D
"RTN","KMPDUTL4",101,0)
 .S TEXT=$E(TEXT,2,LEN)
"RTN","KMPDUTL4",102,0)
 ;
"RTN","KMPDUTL4",103,0)
 Q TEXT
"RTN","KMPDUTL4",104,0)
 ;
"RTN","KMPDUTL4",105,0)
COMMA(TEXT) ;-- function to remove commas from text string
"RTN","KMPDUTL4",106,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL4",107,0)
 ; input TEXT = text string
"RTN","KMPDUTL4",108,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL4",109,0)
 ;
"RTN","KMPDUTL4",110,0)
 S TEXT=$TR(TEXT,",")
"RTN","KMPDUTL4",111,0)
 ;
"RTN","KMPDUTL4",112,0)
 Q TEXT
"RTN","KMPDUTL4",113,0)
 ;
"RTN","KMPDUTL5")
0^53^B56596424^B53756551
"RTN","KMPDUTL5",1,0)
KMPDUTL5 ;OIFO/KAK - Obtain CPU Configuration;28 Feb 2002 ;2/17/04  10:56
"RTN","KMPDUTL5",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDUTL5",3,0)
 ;;
"RTN","KMPDUTL5",4,0)
CPU(ARRAY) ;-- get cpu configuration information
"RTN","KMPDUTL5",5,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL5",6,0)
 ; ARRAY = passed back by reference
"RTN","KMPDUTL5",7,0)
 ; returns array with CPU information:
"RTN","KMPDUTL5",8,0)
 ;                          piece : information
"RTN","KMPDUTL5",9,0)
 ;       ARRAY(nodename) =    1   : type of cpu
"RTN","KMPDUTL5",10,0)
 ;                            2   : number of processors
"RTN","KMPDUTL5",11,0)
 ;                            3   : processor speed
"RTN","KMPDUTL5",12,0)
 ;                            4   : amount of memory
"RTN","KMPDUTL5",13,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL5",14,0)
 ;
"RTN","KMPDUTL5",15,0)
 N ZV
"RTN","KMPDUTL5",16,0)
 ;
"RTN","KMPDUTL5",17,0)
 S ZV=$$MPLTF^KMPDUTL1
"RTN","KMPDUTL5",18,0)
 ;
"RTN","KMPDUTL5",19,0)
 S U="^"
"RTN","KMPDUTL5",20,0)
 I (ZV["DSM") D DSM(.ARRAY)
"RTN","KMPDUTL5",21,0)
 I (ZV["CVMS") D CVMS(.ARRAY,1)
"RTN","KMPDUTL5",22,0)
 I (ZV["CWINNT") D CWINNT(.ARRAY,1)
"RTN","KMPDUTL5",23,0)
 Q
"RTN","KMPDUTL5",24,0)
 ;
"RTN","KMPDUTL5",25,0)
DSM(CPUINFO) ;-- for DSM Platform
"RTN","KMPDUTL5",26,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL5",27,0)
 ; CPUINFO = array passed back by reference - see CPU(ARRAY) above
"RTN","KMPDUTL5",28,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL5",29,0)
 ;
"RTN","KMPDUTL5",30,0)
 N CLSTRMEM,CSID,CSIDARRY,NODE,NODEARRY,X
"RTN","KMPDUTL5",31,0)
 ;
"RTN","KMPDUTL5",32,0)
 S CLSTRMEM=$ZC(%GETSYI,"CLUSTER_MEMBER")
"RTN","KMPDUTL5",33,0)
 ;
"RTN","KMPDUTL5",34,0)
 ; not in cluster environment
"RTN","KMPDUTL5",35,0)
 I 'CLSTRMEM D  Q
"RTN","KMPDUTL5",36,0)
 .S NODE=$ZC(%GETSYI,"NODENAME")
"RTN","KMPDUTL5",37,0)
 .S CPUINFO(NODE)=$ZC(%GETSYI,"HW_NAME")_U_$ZC(%GETSYI,"ACTIVECPU_CNT")
"RTN","KMPDUTL5",38,0)
 ;
"RTN","KMPDUTL5",39,0)
 ; in cluster environment
"RTN","KMPDUTL5",40,0)
 D CLSTR
"RTN","KMPDUTL5",41,0)
 S X="ERR^ZU",@^%ZOSF("TRAP")
"RTN","KMPDUTL5",42,0)
 S NODE=""
"RTN","KMPDUTL5",43,0)
 F  S NODE=$O(NODEARRY(NODE)) Q:NODE=""  D
"RTN","KMPDUTL5",44,0)
 .S CSID=NODEARRY(NODE)
"RTN","KMPDUTL5",45,0)
 .S CPUINFO(NODE)=$ZC(%GETSYI,"HW_NAME",CSID)_U_$ZC(%GETSYI,"ACTIVECPU_CNT",CSID)
"RTN","KMPDUTL5",46,0)
 Q
"RTN","KMPDUTL5",47,0)
CLSTR ; get %GETSYI using wild card to get CSID and NODENAME for all nodes
"RTN","KMPDUTL5",48,0)
 ;
"RTN","KMPDUTL5",49,0)
 N X
"RTN","KMPDUTL5",50,0)
 S X="ERRCLU^KMPDUTL5",@^%ZOSF("TRAP"),$ZE=""
"RTN","KMPDUTL5",51,0)
 S CSIDARRY($ZC(%GETSYI,"NODE_CSID",-1))=""
"RTN","KMPDUTL5",52,0)
 F  S CSIDARRY($ZC(%GETSYI,"NODE_CSID",""))=""
"RTN","KMPDUTL5",53,0)
ERRCLU I $ZE'["NOMORENODE" ZQ
"RTN","KMPDUTL5",54,0)
 N CSID
"RTN","KMPDUTL5",55,0)
 S CSID=""
"RTN","KMPDUTL5",56,0)
 F  S CSID=$O(CSIDARRY(CSID)) Q:CSID=""  S NODEARRY($ZC(%GETSYI,"NODENAME",CSID))=CSID
"RTN","KMPDUTL5",57,0)
 Q
"RTN","KMPDUTL5",58,0)
 ;
"RTN","KMPDUTL5",59,0)
CVMS(CPUINFO,TYP) ;-- for Cache for OpenVMS Platform
"RTN","KMPDUTL5",60,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL5",61,0)
 ; input: TYP = type of system information requested
"RTN","KMPDUTL5",62,0)
 ;                1 : cpu system information
"RTN","KMPDUTL5",63,0)
 ;                2 : operating system version information
"RTN","KMPDUTL5",64,0)
 ;
"RTN","KMPDUTL5",65,0)
 ; CPUINFO = array passed back by reference
"RTN","KMPDUTL5",66,0)
 ;           : for TYP=1 see CPU(ARRAY) line tag above
"RTN","KMPDUTL5",67,0)
 ;           : for TYP=2 CPUINFO(1)=os version
"RTN","KMPDUTL5",68,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL5",69,0)
 ;
"RTN","KMPDUTL5",70,0)
 N DFILE,DIR,DLOG,FILE,FILESPEC,LOG,TYPNM,Y
"RTN","KMPDUTL5",71,0)
 ;
"RTN","KMPDUTL5",72,0)
 S TYPNM=$S(TYP=1:"CPU",TYP=2:"VER",1:"")
"RTN","KMPDUTL5",73,0)
 ;
"RTN","KMPDUTL5",74,0)
 S DIR=$ZU(12)
"RTN","KMPDUTL5",75,0)
 ;
"RTN","KMPDUTL5",76,0)
 ; cleanup com file and log file
"RTN","KMPDUTL5",77,0)
 S FILE=DIR_"KMPDU"_TYPNM_".COM"
"RTN","KMPDUTL5",78,0)
 S DFILE="KMPDU"_TYPNM_".COM"
"RTN","KMPDUTL5",79,0)
 S LOG=DIR_"KMPDU"_TYPNM_".LOG"
"RTN","KMPDUTL5",80,0)
 S DLOG="KMPDU"_TYPNM_".LOG"
"RTN","KMPDUTL5",81,0)
 S FILESPEC(DFILE)=""
"RTN","KMPDUTL5",82,0)
 S FILESPEC(DLOG)=""
"RTN","KMPDUTL5",83,0)
 S Y=$$DEL^%ZISH(DIR,.FILESPEC)
"RTN","KMPDUTL5",84,0)
 ;
"RTN","KMPDUTL5",85,0)
 ; create com file   quit on file creation error
"RTN","KMPDUTL5",86,0)
 Q:$$CREATE(FILE,TYP)<0
"RTN","KMPDUTL5",87,0)
 ;
"RTN","KMPDUTL5",88,0)
 ; run com file and create log file
"RTN","KMPDUTL5",89,0)
 I $ZF(-1,"",LOG,FILE)
"RTN","KMPDUTL5",90,0)
 C LOG
"RTN","KMPDUTL5",91,0)
 ;
"RTN","KMPDUTL5",92,0)
 ; parse log file
"RTN","KMPDUTL5",93,0)
 D PARSE(LOG,.CPUINFO,TYP)
"RTN","KMPDUTL5",94,0)
 ;
"RTN","KMPDUTL5",95,0)
 ; cleanup com file and log file
"RTN","KMPDUTL5",96,0)
 K FILESPEC
"RTN","KMPDUTL5",97,0)
 S FILESPEC(DFILE)=""
"RTN","KMPDUTL5",98,0)
 S FILESPEC(DLOG)=""
"RTN","KMPDUTL5",99,0)
 S Y=$$DEL^%ZISH(DIR,.FILESPEC)
"RTN","KMPDUTL5",100,0)
 ;
"RTN","KMPDUTL5",101,0)
 Q
"RTN","KMPDUTL5",102,0)
 ;
"RTN","KMPDUTL5",103,0)
CWINNT(CPUINFO,TYP) ;-- for Cache for Windows NT Platform
"RTN","KMPDUTL5",104,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL5",105,0)
 ; input: TYP = type of system information requested
"RTN","KMPDUTL5",106,0)
 ;                1 : cpu system information
"RTN","KMPDUTL5",107,0)
 ;                2 : operating system version information
"RTN","KMPDUTL5",108,0)
 ;
"RTN","KMPDUTL5",109,0)
 ; CPUINFO = array passed back by reference
"RTN","KMPDUTL5",110,0)
 ;           : for TYP = 1 see CPU(ARRAY) line tag above
"RTN","KMPDUTL5",111,0)
 ;           : for TYP = 2 CPUINFO(1)=os version
"RTN","KMPDUTL5",112,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL5",113,0)
 ;
"RTN","KMPDUTL5",114,0)
 N DATA,FILE,I,NODE,OUT,POP,X
"RTN","KMPDUTL5",115,0)
 S:'$G(DTIME) DTIME=30
"RTN","KMPDUTL5",116,0)
 ;
"RTN","KMPDUTL5",117,0)
 S DATA="",OUT=0
"RTN","KMPDUTL5",118,0)
 ;
"RTN","KMPDUTL5",119,0)
 ; $zu(110) = computername
"RTN","KMPDUTL5",120,0)
 S (FILE,NODE)=$ZU(110)
"RTN","KMPDUTL5",121,0)
 S CPUINFO(NODE)=""
"RTN","KMPDUTL5",122,0)
 ;
"RTN","KMPDUTL5",123,0)
 ; cleanup all report files
"RTN","KMPDUTL5",124,0)
 I $ZF(-1,"DEL "_FILE_"*.TXT")
"RTN","KMPDUTL5",125,0)
 ;
"RTN","KMPDUTL5",126,0)
 S FILE=FILE_".TXT"
"RTN","KMPDUTL5",127,0)
 ;
"RTN","KMPDUTL5",128,0)
 ; send system reort to file
"RTN","KMPDUTL5",129,0)
 ; switches: /s => summary report
"RTN","KMPDUTL5",130,0)
 ;           /a => all report
"RTN","KMPDUTL5",131,0)
 ;           /f => send to file named 'computername.TXT'
"RTN","KMPDUTL5",132,0)
 I $ZF(-1,"WINMSD /s /f")
"RTN","KMPDUTL5",133,0)
 ;
"RTN","KMPDUTL5",134,0)
 S X="EOF1",@^%ZOSF("TRAP")
"RTN","KMPDUTL5",135,0)
 ;
"RTN","KMPDUTL5",136,0)
 ; read from report file
"RTN","KMPDUTL5",137,0)
 D OPEN^%ZISH("CWINNT","",FILE,"R")
"RTN","KMPDUTL5",138,0)
 Q:POP
"RTN","KMPDUTL5",139,0)
 U IO
"RTN","KMPDUTL5",140,0)
 ;
"RTN","KMPDUTL5",141,0)
 ; TYP=1 => cpu information
"RTN","KMPDUTL5",142,0)
 I TYP=1 D
"RTN","KMPDUTL5",143,0)
 .F  R X:DTIME Q:$$STATUS^%ZISH  D  Q:OUT
"RTN","KMPDUTL5",144,0)
 ..; type of cpu
"RTN","KMPDUTL5",145,0)
 ..I X["Hardware Abstraction Layer:" S $P(DATA,U)=$$STRIP^KMPDUTL4($P(X,"Hardware Abstraction Layer:",2)) Q
"RTN","KMPDUTL5",146,0)
 ..; number of processors
"RTN","KMPDUTL5",147,0)
 ..I X["NUMBER_OF_PROCESSORS=" S $P(DATA,U,2)=$P(X,"NUMBER_OF_PROCESSORS=",2) Q
"RTN","KMPDUTL5",148,0)
 ..; processor speed - no information available
"RTN","KMPDUTL5",149,0)
 ..; amount of memory
"RTN","KMPDUTL5",150,0)
 ..I X["Physical Memory (K)" D  Q
"RTN","KMPDUTL5",151,0)
 ...R X:DTIME I $$STATUS^%ZISH S OUT=1 Q
"RTN","KMPDUTL5",152,0)
 ...I X["Total:" S $P(DATA,U,4)=$$STRIP^KMPDUTL4($$COMMA^KMPDUTL4($P(X,"Total:",2)))\1024 Q
"RTN","KMPDUTL5",153,0)
 ..S CPUINFO(NODE)=DATA
"RTN","KMPDUTL5",154,0)
 ;
"RTN","KMPDUTL5",155,0)
 ; TYP=2 => os version
"RTN","KMPDUTL5",156,0)
 I TYP=2 D
"RTN","KMPDUTL5",157,0)
 .F  R X:DTIME Q:$$STATUS^%ZISH  D  Q:OUT
"RTN","KMPDUTL5",158,0)
 ..; version of operating system
"RTN","KMPDUTL5",159,0)
 ..I X["OS Version Report" D
"RTN","KMPDUTL5",160,0)
 ...F I=1:1:2 R X:DTIME I $$STATUS^%ZISH S OUT=1 Q
"RTN","KMPDUTL5",161,0)
 ...S DATA=X
"RTN","KMPDUTL5",162,0)
 ...S DATA=DATA_" "_X
"RTN","KMPDUTL5",163,0)
 ...S CPUINFO(1)=DATA
"RTN","KMPDUTL5",164,0)
 ;
"RTN","KMPDUTL5",165,0)
 D CLOSE^%ZISH("CWINNT")
"RTN","KMPDUTL5",166,0)
 ;
"RTN","KMPDUTL5",167,0)
 Q
"RTN","KMPDUTL5",168,0)
 ;
"RTN","KMPDUTL5",169,0)
CREATE(FILE,TYP) ;-- function to create new com file
"RTN","KMPDUTL5",170,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL5",171,0)
 ; input: FILE = name of file to create
"RTN","KMPDUTL5",172,0)
 ;        TYP  = type of system information requested
"RTN","KMPDUTL5",173,0)
 ;                 1 : cpu system information
"RTN","KMPDUTL5",174,0)
 ;                 2 : operating system version information
"RTN","KMPDUTL5",175,0)
 ;
"RTN","KMPDUTL5",176,0)
 ; returns:  1 successful file creation
"RTN","KMPDUTL5",177,0)
 ;          -1 failure of file creation
"RTN","KMPDUTL5",178,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL5",179,0)
 ;
"RTN","KMPDUTL5",180,0)
 N DIR,TYPNM
"RTN","KMPDUTL5",181,0)
 ;
"RTN","KMPDUTL5",182,0)
 S TYPNM=$S(TYP=1:"CPU",TYP=2:"VER",1:"")
"RTN","KMPDUTL5",183,0)
 ;
"RTN","KMPDUTL5",184,0)
 O FILE:("NWC"):0 Q:'$T -1
"RTN","KMPDUTL5",185,0)
 ;
"RTN","KMPDUTL5",186,0)
 U FILE
"RTN","KMPDUTL5",187,0)
 W "$! KMPDU"_TYPNM_".COM - Obtain System Configuration Information"
"RTN","KMPDUTL5",188,0)
 W "$!--------------------------------------------------------"
"RTN","KMPDUTL5",189,0)
 W "$! OIFO - CAPACITY PLANNING/KAK"
"RTN","KMPDUTL5",190,0)
 W "$! "_$P($T(+2)_";;",2,999)
"RTN","KMPDUTL5",191,0)
 W "$!--------------------------------------------------------"
"RTN","KMPDUTL5",192,0)
 W "$!"
"RTN","KMPDUTL5",193,0)
 ;
"RTN","KMPDUTL5",194,0)
 I TYP=2 D  G TAGXIT
"RTN","KMPDUTL5",195,0)
 .W "$   write sys$output ""VERSION=""   , f$getsyi(""VERSION"")"
"RTN","KMPDUTL5",196,0)
 ;
"RTN","KMPDUTL5",197,0)
 W "$ if f$getsyi(""CLUSTER_MEMBER"") .eqs. ""FALSE"" then goto NOT_CLUSTER"
"RTN","KMPDUTL5",198,0)
 W "$ CONTEXT = """""
"RTN","KMPDUTL5",199,0)
 W "$START:"
"RTN","KMPDUTL5",200,0)
 W "$   ID = f$csid(CONTEXT)"
"RTN","KMPDUTL5",201,0)
 W "$   if ID .eqs. """" then goto EXIT"
"RTN","KMPDUTL5",202,0)
 W "$   write sys$output ""NODE=""    , f$getsyi(""NODENAME"",,ID)"
"RTN","KMPDUTL5",203,0)
 W "$   write sys$output ""TYPE=""    , f$getsyi(""HW_NAME"",,ID)"
"RTN","KMPDUTL5",204,0)
 W "$   write sys$output ""CPU_CNT="" , f$getsyi(""ACTIVECPU_CNT"",,ID)"
"RTN","KMPDUTL5",205,0)
 W "$   write sys$output ""SPEED=n/a"""
"RTN","KMPDUTL5",206,0)
 W "$   write sys$output ""MEMSIZE="" , f$getsyi(""MEMSIZE"",,ID)"
"RTN","KMPDUTL5",207,0)
 W "$   goto START"
"RTN","KMPDUTL5",208,0)
 W "$NOT_CLUSTER:"
"RTN","KMPDUTL5",209,0)
 W "$   write sys$output ""NODE=""    , f$getsyi(""NODENAME"")"
"RTN","KMPDUTL5",210,0)
 W "$   write sys$output ""TYPE=""    , f$getsyi(""HW_NAME"")"
"RTN","KMPDUTL5",211,0)
 W "$   write sys$output ""CPU_CNT="" , f$getsyi(""ACTIVECPU_CNT"")"
"RTN","KMPDUTL5",212,0)
 W "$   write sys$output ""SPEED=n/a"""
"RTN","KMPDUTL5",213,0)
 W "$   write sys$output ""MEMSIZE="" , f$getsyi(""MEMSIZE"")"
"RTN","KMPDUTL5",214,0)
TAGXIT ;
"RTN","KMPDUTL5",215,0)
 W "$EXIT:"
"RTN","KMPDUTL5",216,0)
 W "$   write sys$output ""*EOF*"""
"RTN","KMPDUTL5",217,0)
 W "$ exit"
"RTN","KMPDUTL5",218,0)
 W "$!"
"RTN","KMPDUTL5",219,0)
 ;
"RTN","KMPDUTL5",220,0)
 C FILE
"RTN","KMPDUTL5",221,0)
 Q 1
"RTN","KMPDUTL5",222,0)
 ;
"RTN","KMPDUTL5",223,0)
PARSE(LOG,CPUARRY,TYP) ;-- parse log file data
"RTN","KMPDUTL5",224,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL5",225,0)
 ; input: LOG = name of log file to parse
"RTN","KMPDUTL5",226,0)
 ;        TYP = type of system information requested
"RTN","KMPDUTL5",227,0)
 ;                1 : cpu system information
"RTN","KMPDUTL5",228,0)
 ;                2 : operating system version information
"RTN","KMPDUTL5",229,0)
 ;
"RTN","KMPDUTL5",230,0)
 ; CPUARRY = passed back by reference
"RTN","KMPDUTL5",231,0)
 ;           : for TYP=1 see CPU(ARRAY) line tag above
"RTN","KMPDUTL5",232,0)
 ;           : for TYP=2 CPUINFO(1)=os version
"RTN","KMPDUTL5",233,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL5",234,0)
 ;
"RTN","KMPDUTL5",235,0)
 N NODE,X
"RTN","KMPDUTL5",236,0)
 ;
"RTN","KMPDUTL5",237,0)
 S X="EOF",@^%ZOSF("TRAP"),NODE=""
"RTN","KMPDUTL5",238,0)
 K X S U="^"
"RTN","KMPDUTL5",239,0)
 ;
"RTN","KMPDUTL5",240,0)
 D OPEN^%ZISH("LOG",DIR,DLOG,"R")
"RTN","KMPDUTL5",241,0)
 Q:POP
"RTN","KMPDUTL5",242,0)
 U IO
"RTN","KMPDUTL5",243,0)
 ;
"RTN","KMPDUTL5",244,0)
 I TYP=1 D
"RTN","KMPDUTL5",245,0)
 .F  R X:DTIME Q:$$STATUS^%ZISH  I $E(X)'="$" I X["NODE=" D
"RTN","KMPDUTL5",246,0)
 ..I X["NODE=" S NODE=$P(X,"=",2)
"RTN","KMPDUTL5",247,0)
 ..F  R X:DTIME  I $E(X)'="$" D  Q:X["MEMSIZE="
"RTN","KMPDUTL5",248,0)
 ...; type of cpu
"RTN","KMPDUTL5",249,0)
 ...I X["TYPE=" S $P(CPUARRY(NODE),U)=$P(X,"=",2) Q
"RTN","KMPDUTL5",250,0)
 ...; number of processors
"RTN","KMPDUTL5",251,0)
 ...I X["CPU_CNT=" S $P(CPUARRY(NODE),U,2)=$P(X,"=",2) Q
"RTN","KMPDUTL5",252,0)
 ...; processor speed - no information available
"RTN","KMPDUTL5",253,0)
 ...I X["SPEED=" Q
"RTN","KMPDUTL5",254,0)
 ...; amount of memory in MB
"RTN","KMPDUTL5",255,0)
 ...I X["MEMSIZE=" S $P(CPUARRY(NODE),U,4)=$P(X,"=",2)/128 Q
"RTN","KMPDUTL5",256,0)
 ;
"RTN","KMPDUTL5",257,0)
 I TYP=2 D
"RTN","KMPDUTL5",258,0)
 .F  R X:DTIME Q:$$STATUS^%ZISH  I $E(X)'="$" D
"RTN","KMPDUTL5",259,0)
 ..; version of operating system
"RTN","KMPDUTL5",260,0)
 ..I X["VERSION=" S CPUARRY(1)=$P(X,"=",2) Q
"RTN","KMPDUTL5",261,0)
 ;
"RTN","KMPDUTL5",262,0)
 D CLOSE^%ZISH("LOG")
"RTN","KMPDUTL5",263,0)
 ;
"RTN","KMPDUTL5",264,0)
 S X="ERR^ZU",@^%ZOSF("TRAP")
"RTN","KMPDUTL5",265,0)
 Q
"RTN","KMPDUTL5",266,0)
 ;
"RTN","KMPDUTL5",267,0)
EOF ;-- end of file condition for CVMS
"RTN","KMPDUTL5",268,0)
 S X="ERR^ZU",@^%ZOSF("TRAP")
"RTN","KMPDUTL5",269,0)
 D CLOSE^%ZISH("LOG")
"RTN","KMPDUTL5",270,0)
 Q
"RTN","KMPDUTL5",271,0)
 ;
"RTN","KMPDUTL5",272,0)
EOF1 ;-- end of file condition for CWINNT
"RTN","KMPDUTL5",273,0)
 S X="ERR^ZU",@^%ZOSF("TRAP")
"RTN","KMPDUTL5",274,0)
 D CLOSE^%ZISH("CWINNT")
"RTN","KMPDUTL5",275,0)
 Q
"RTN","KMPDUTL5",276,0)
 ;
"RTN","KMPDUTL5",277,0)
CVMSVER() ;-- returns version of Cache for OpenVMS operating system
"RTN","KMPDUTL5",278,0)
 ;
"RTN","KMPDUTL5",279,0)
 N VER
"RTN","KMPDUTL5",280,0)
 ;
"RTN","KMPDUTL5",281,0)
 D CVMS(.VER,2)
"RTN","KMPDUTL5",282,0)
 Q $S($D(VER(1)):VER(1),1:"")
"RTN","KMPDUTL5",283,0)
 ;
"RTN","KMPDUTL5",284,0)
CWNTVER() ;-- returns version of Cache for Windows NT operating system
"RTN","KMPDUTL5",285,0)
 ;
"RTN","KMPDUTL5",286,0)
 N VER
"RTN","KMPDUTL5",287,0)
 ;
"RTN","KMPDUTL5",288,0)
 D CWINNT(.VER,2)
"RTN","KMPDUTL5",289,0)
 Q $S($D(VER(1)):VER(1),1:"")
"RTN","KMPDUTL6")
0^54^B2454565^B2454565
"RTN","KMPDUTL6",1,0)
KMPDUTL6 ;OIFO/RAK - CPU Utilities ;2/17/04  10:58
"RTN","KMPDUTL6",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDUTL6",3,0)
 ;;
"RTN","KMPDUTL6",4,0)
CPUDEL ;-- delete cpu data from file #8973 - cp parameters
"RTN","KMPDUTL6",5,0)
 ;
"RTN","KMPDUTL6",6,0)
 N DA,DIK,X,Y
"RTN","KMPDUTL6",7,0)
 ;
"RTN","KMPDUTL6",8,0)
 S DA(1)=$O(^KMPD(8973,0)) Q:'DA(1)
"RTN","KMPDUTL6",9,0)
 S DIK="^KMPD(8973,"_DA(1)_",20,"
"RTN","KMPDUTL6",10,0)
 F DA=0:0 S DA=$O(^KMPD(8973,DA(1),20,DA)) Q:'DA  D ^DIK
"RTN","KMPDUTL6",11,0)
 ;
"RTN","KMPDUTL6",12,0)
 Q
"RTN","KMPDUTL6",13,0)
 ;
"RTN","KMPDUTL6",14,0)
CPUGET(KMPDARRY) ;--get cpu data
"RTN","KMPDUTL6",15,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL6",16,0)
 ; KMPDARRY... Return array (passed by reference) in format:
"RTN","KMPDUTL6",17,0)
 ;              KMPDARRY(1)=Node
"RTN","KMPDUTL6",18,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL6",19,0)
 ;
"RTN","KMPDUTL6",20,0)
 K KMPDARRY
"RTN","KMPDUTL6",21,0)
 Q:$G(^KMPD(8973,1,20,0))=""
"RTN","KMPDUTL6",22,0)
 M KMPDARRY=^KMPD(8973,1,20)
"RTN","KMPDUTL6",23,0)
 ;
"RTN","KMPDUTL6",24,0)
 Q
"RTN","KMPDUTL6",25,0)
 ;
"RTN","KMPDUTL6",26,0)
CPUSET(KMPDLT) ;-- set cpu info into file #8973 cp parameters
"RTN","KMPDUTL6",27,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL6",28,0)
 ; KMPDLT... Delete previous entries
"RTN","KMPDUTL6",29,0)
 ;            0 - do not delete
"RTN","KMPDUTL6",30,0)
 ;            1 - delete
"RTN","KMPDUTL6",31,0)
 ;---------------------------------------------------------------------
"RTN","KMPDUTL6",32,0)
 ;
"RTN","KMPDUTL6",33,0)
 S KMPDLT=+$G(KMPDLT)
"RTN","KMPDUTL6",34,0)
 ;
"RTN","KMPDUTL6",35,0)
 N CPU,IEN,ERROR,FDA,NODE,ZIEN
"RTN","KMPDUTL6",36,0)
 ;
"RTN","KMPDUTL6",37,0)
 ; delete current CPU entries
"RTN","KMPDUTL6",38,0)
 D:KMPDLT CPUDEL
"RTN","KMPDUTL6",39,0)
 ;
"RTN","KMPDUTL6",40,0)
 S IEN=$O(^KMPD(8973,0)) Q:'IEN
"RTN","KMPDUTL6",41,0)
 ; get cpu data
"RTN","KMPDUTL6",42,0)
 D CPU^KMPDUTL5(.CPU) Q:'$D(CPU)
"RTN","KMPDUTL6",43,0)
 ; file cpu data
"RTN","KMPDUTL6",44,0)
 S NODE=""
"RTN","KMPDUTL6",45,0)
 F  S NODE=$O(CPU(NODE)) Q:NODE=""  D 
"RTN","KMPDUTL6",46,0)
 .K FDA,ERROR,ZIEN
"RTN","KMPDUTL6",47,0)
 .S FDA($J,8973.201,"?+1,"_IEN_",",.01)=NODE
"RTN","KMPDUTL6",48,0)
 .S FDA($J,8973.201,"?+1,"_IEN_",",.02)=$P(CPU(NODE),U)
"RTN","KMPDUTL6",49,0)
 .S FDA($J,8973.201,"?+1,"_IEN_",",.03)=$P(CPU(NODE),U,2)
"RTN","KMPDUTL6",50,0)
 .S FDA($J,8973.201,"?+1,"_IEN_",",.04)=$P(CPU(NODE),U,3)
"RTN","KMPDUTL6",51,0)
 .S FDA($J,8973.201,"?+1,"_IEN_",",.05)=$P(CPU(NODE),U,4)
"RTN","KMPDUTL6",52,0)
 .D UPDATE^DIE("","FDA($J)",.ZIEN,"ERROR")
"RTN","KMPDUTL6",53,0)
 ;
"RTN","KMPDUTL6",54,0)
 Q
"RTN","KMPDUTL7")
0^55^B10006436^B10006436
"RTN","KMPDUTL7",1,0)
KMPDUTL7 ;OAK/RAK - CM Tools Utility ;2/17/04  10:52
"RTN","KMPDUTL7",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDUTL7",3,0)
 ;
"RTN","KMPDUTL7",4,0)
RSTART(KMPDIEN) ;-- start routine statistics
"RTN","KMPDUTL7",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL7",6,0)
 ; KMPDIEN.... Ien for file #8972.1 (CM CODE EVALUATOR).
"RTN","KMPDUTL7",7,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL7",8,0)
 Q:'$G(KMPDIEN)
"RTN","KMPDUTL7",9,0)
 Q:'$D(^KMPD(8972.1,+KMPDIEN,0))#5
"RTN","KMPDUTL7",10,0)
 ; quit if not 'active'
"RTN","KMPDUTL7",11,0)
 Q:'$P($G(^KMPD(8972.1,+KMPDIEN,0)),U,11)
"RTN","KMPDUTL7",12,0)
 K KMPDU(KMPDIEN)
"RTN","KMPDUTL7",13,0)
 S KMPDU(KMPDIEN,"START")=$$STATS^%ZOSVKR
"RTN","KMPDUTL7",14,0)
 Q
"RTN","KMPDUTL7",15,0)
 ;
"RTN","KMPDUTL7",16,0)
RSTOP(KMPDIEN) ;-- stop routine statistics
"RTN","KMPDUTL7",17,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL7",18,0)
 ; KMPDIEN.... Ien for file #8972.1 (CM CODE EVALUATOR).
"RTN","KMPDUTL7",19,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL7",20,0)
 Q:'$G(KMPDIEN)
"RTN","KMPDUTL7",21,0)
 Q:'$D(^KMPD(8972.1,+KMPDIEN,0))#5
"RTN","KMPDUTL7",22,0)
 ; quit if no 'start' subscript
"RTN","KMPDUTL7",23,0)
 Q:'$D(KMPDU(KMPDIEN,"START"))
"RTN","KMPDUTL7",24,0)
 ; quit if not 'active'
"RTN","KMPDUTL7",25,0)
 Q:'$P($G(^KMPD(8972.1,+KMPDIEN,0)),U,11)
"RTN","KMPDUTL7",26,0)
 ;
"RTN","KMPDUTL7",27,0)
 N ARRAY,I,OVERHEAD,ZIEN
"RTN","KMPDUTL7",28,0)
 ;
"RTN","KMPDUTL7",29,0)
 S KMPDU(KMPDIEN,"STOP")=$$STATS^%ZOSVKR
"RTN","KMPDUTL7",30,0)
 F I=1:1:6 D 
"RTN","KMPDUTL7",31,0)
 .; check for negative numbers
"RTN","KMPDUTL7",32,0)
 .S $P(KMPDU(KMPDIEN,"START"),U,I)=$$NUMBER($P(KMPDU(KMPDIEN,"START"),U,I))
"RTN","KMPDUTL7",33,0)
 .S $P(KMPDU(KMPDIEN,"STOP"),U,I)=$$NUMBER($P(KMPDU(KMPDIEN,"STOP"),U,I))
"RTN","KMPDUTL7",34,0)
 .; calculate difference
"RTN","KMPDUTL7",35,0)
 .S $P(KMPDU(KMPDIEN,"DIFF"),U,I)=$P(KMPDU(KMPDIEN,"STOP"),U,I)-$P(KMPDU(KMPDIEN,"START"),U,I)
"RTN","KMPDUTL7",36,0)
 .; check 'difference' for negative number
"RTN","KMPDUTL7",37,0)
 .S $P(KMPDU(KMPDIEN,"DIFF"),U,I)=$$NUMBER($P(KMPDU(KMPDIEN,"DIFF"),U,I))
"RTN","KMPDUTL7",38,0)
 ;
"RTN","KMPDUTL7",39,0)
 ; get overhead data.
"RTN","KMPDUTL7",40,0)
 S OVERHEAD=$$GETROVHD
"RTN","KMPDUTL7",41,0)
 ; subtract overhead data from "DIFF".
"RTN","KMPDUTL7",42,0)
 F I=1:1:6 D 
"RTN","KMPDUTL7",43,0)
 .S $P(KMPDU(KMPDIEN,"DIFF"),U,I)=$P(KMPDU(KMPDIEN,"DIFF"),U,I)-$P(OVERHEAD,U,I)
"RTN","KMPDUTL7",44,0)
 ;
"RTN","KMPDUTL7",45,0)
 ; file results
"RTN","KMPDUTL7",46,0)
 ; elements.
"RTN","KMPDUTL7",47,0)
 F I=1:1:6 S ARRAY((I+3)*.01)=$P(KMPDU(KMPDIEN,"DIFF"),U,I)
"RTN","KMPDUTL7",48,0)
 ; file data
"RTN","KMPDUTL7",49,0)
 D EDIT^KMPDUTL8(KMPDIEN,"ARRAY")
"RTN","KMPDUTL7",50,0)
 ;
"RTN","KMPDUTL7",51,0)
 K KMPDU(KMPDIEN)
"RTN","KMPDUTL7",52,0)
 ;
"RTN","KMPDUTL7",53,0)
 Q
"RTN","KMPDUTL7",54,0)
 ;
"RTN","KMPDUTL7",55,0)
CONVERT(KMPDTEXT) ;-- extrinsic function - convert disallowed character(s)
"RTN","KMPDUTL7",56,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL7",57,0)
 ; KMPDTEXT.. Text to convert.
"RTN","KMPDUTL7",58,0)
 ;             '^' will be converted to '~'
"RTN","KMPDUTL7",59,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL7",60,0)
 ;
"RTN","KMPDUTL7",61,0)
 S KMPDTEXT=$TR(KMPDTEXT,"^","~")
"RTN","KMPDUTL7",62,0)
 Q $E(KMPDTEXT,1,30)
"RTN","KMPDUTL7",63,0)
 ;
"RTN","KMPDUTL7",64,0)
GETROVHD() ;-- extrinsic - get routine overhead stats.
"RTN","KMPDUTL7",65,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL7",66,0)
 ; Return: overhead data in 9 up-arrow (^) pieces:
"RTN","KMPDUTL7",67,0)
 ;         piece 1 - CPU Time
"RTN","KMPDUTL7",68,0)
 ;         piece 2 - DIO References
"RTN","KMPDUTL7",69,0)
 ;         piece 3 - BIO References
"RTN","KMPDUTL7",70,0)
 ;         piece 4 - Page Faults
"RTN","KMPDUTL7",71,0)
 ;         piece 5 - M Commands
"RTN","KMPDUTL7",72,0)
 ;         piece 6 - GLO References
"RTN","KMPDUTL7",73,0)
 ;         piece 7 - $H Day
"RTN","KMPDUTL7",74,0)
 ;         piece 8 - $H Seconds
"RTN","KMPDUTL7",75,0)
 ;         piece 9 - ASCII Date/Time
"RTN","KMPDUTL7",76,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL7",77,0)
 ;
"RTN","KMPDUTL7",78,0)
 D:$G(^XTMP("KMPD","ROVHD"))="" ROVHD
"RTN","KMPDUTL7",79,0)
 Q $G(^XTMP("KMPD","ROVHD"))
"RTN","KMPDUTL7",80,0)
 ;
"RTN","KMPDUTL7",81,0)
ROVHD ;-- calculate overhead for routine stats.
"RTN","KMPDUTL7",82,0)
 ;
"RTN","KMPDUTL7",83,0)
 ; This sub-routine determines the overhead for elements when running
"RTN","KMPDUTL7",84,0)
 ; RSTART^KMPDUTL1 and RSTOP^KMPDUTL1.  The overhead numbers are stored
"RTN","KMPDUTL7",85,0)
 ; in ^XTMP("KMPD","ROHD"), and are subtracted from the final numbers
"RTN","KMPDUTL7",86,0)
 ; to get as true a picture as possible of the actual elements for the
"RTN","KMPDUTL7",87,0)
 ; calling routine.
"RTN","KMPDUTL7",88,0)
 ;
"RTN","KMPDUTL7",89,0)
 N DIFF,I,START,STOP
"RTN","KMPDUTL7",90,0)
 S DIFF=""
"RTN","KMPDUTL7",91,0)
 S START=$$STATS^%ZOSVKR
"RTN","KMPDUTL7",92,0)
 S STOP=$$STATS^%ZOSVKR
"RTN","KMPDUTL7",93,0)
 F I=1:1:6 D 
"RTN","KMPDUTL7",94,0)
 .S $P(DIFF,U,I)=$P(STOP,U,I)-$P(START,U,I)
"RTN","KMPDUTL7",95,0)
 ; m commands.
"RTN","KMPDUTL7",96,0)
 S $P(DIFF,U,5)=$P(DIFF,U,5)+8
"RTN","KMPDUTL7",97,0)
 ; glo references.
"RTN","KMPDUTL7",98,0)
 S $P(DIFF,U,6)=$P(DIFF,U,6)+2
"RTN","KMPDUTL7",99,0)
 S ^XTMP("KMPD",0)=$$FMADD^XLFDT($$DT^XLFDT,300)
"RTN","KMPDUTL7",100,0)
 S ^XTMP("KMPD","ROVHD")=DIFF
"RTN","KMPDUTL7",101,0)
 ;
"RTN","KMPDUTL7",102,0)
 Q
"RTN","KMPDUTL7",103,0)
 ;
"RTN","KMPDUTL7",104,0)
NUMBER(KMPDNUM) ;-- extrinsic function - check for negative numbers
"RTN","KMPDUTL7",105,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL7",106,0)
 ; KMPDNUM... Number to be checked
"RTN","KMPDUTL7",107,0)
 ;
"RTN","KMPDUTL7",108,0)
 ; Return: non-negative number
"RTN","KMPDUTL7",109,0)
 ;
"RTN","KMPDUTL7",110,0)
 ; Because certain data elements (such as m commands and global 
"RTN","KMPDUTL7",111,0)
 ; references) can grow to such large numbers, these numbers must be
"RTN","KMPDUTL7",112,0)
 ; checked.  If they have become negative (the register flips) they
"RTN","KMPDUTL7",113,0)
 ; can be turned into positive numbers with
"RTN","KMPDUTL7",114,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL7",115,0)
 ;
"RTN","KMPDUTL7",116,0)
 S KMPDNUM=$G(KMPDNUM)
"RTN","KMPDUTL7",117,0)
 Q:KMPDNUM="" KMPDNUM
"RTN","KMPDUTL7",118,0)
 Q:KMPDNUM'<0 KMPDNUM
"RTN","KMPDUTL7",119,0)
 Q KMPDNUM+(2**32)
"RTN","KMPDUTL7",120,0)
 ;
"RTN","KMPDUTL7",121,0)
TRANSTO(KMPDIEN,KMPDAPP,KMPDRES) ;-- return 'transmit to' for data transmission
"RTN","KMPDUTL7",122,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL7",123,0)
 ; KMPDIEN.... Ien for file #8973 (CP PARAMETERS)
"RTN","KMPDUTL7",124,0)
 ; KMPDAPP.... Application:
"RTN","KMPDUTL7",125,0)
 ;              1 = sagg
"RTN","KMPDUTL7",126,0)
 ;              2 = rum
"RTN","KMPDUTL7",127,0)
 ;              3 = hl7
"RTN","KMPDUTL7",128,0)
 ;              4 = timing
"RTN","KMPDUTL7",129,0)
 ;              5 = vista monitor
"RTN","KMPDUTL7",130,0)
 ; KMPDRES().. Results array in format:
"RTN","KMPDUTL7",131,0)
 ;              KMPDRES(ExternalFormat)=IEN
"RTN","KMPDUTL7",132,0)
 ;              KMPDRES(...           )=IEN
"RTN","KMPDUTL7",133,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL7",134,0)
 ;
"RTN","KMPDUTL7",135,0)
 K KMPDRES
"RTN","KMPDUTL7",136,0)
 Q:'$G(KMPDIEN)
"RTN","KMPDUTL7",137,0)
 Q:'$D(^KMPD(8973,KMPDIEN,0))
"RTN","KMPDUTL7",138,0)
 Q:'$G(KMPDAPP)
"RTN","KMPDUTL7",139,0)
 Q:KMPDAPP<1!(KMPDAPP>5)
"RTN","KMPDUTL7",140,0)
 ;
"RTN","KMPDUTL7",141,0)
 N DATA,I,NODE
"RTN","KMPDUTL7",142,0)
 ;
"RTN","KMPDUTL7",143,0)
 S NODE=21+(KMPDAPP*.1),I=0
"RTN","KMPDUTL7",144,0)
 F  S I=$O(^KMPD(8973,KMPDIEN,NODE,I)) Q:'I  D 
"RTN","KMPDUTL7",145,0)
 .Q:'$D(^KMPD(8973,KMPDIEN,NODE,I,0))  S DATA=^(0)
"RTN","KMPDUTL7",146,0)
 .S KMPDRES(DATA)=I
"RTN","KMPDUTL7",147,0)
 ;
"RTN","KMPDUTL7",148,0)
 Q
"RTN","KMPDUTL8")
0^56^B12208078^B12208078
"RTN","KMPDUTL8",1,0)
KMPDUTL8 ;OAK/RAK - CM Tools Utility ;2/17/04  10:52
"RTN","KMPDUTL8",2,0)
 ;;3.0;KMPD;;Jan 22, 2009;Build 42
"RTN","KMPDUTL8",3,0)
 ;
"RTN","KMPDUTL8",4,0)
ADD(KMPDNAME,KMPDARRY,KMPDIEN) ;-- add new entry to file #8972.1
"RTN","KMPDUTL8",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL8",6,0)
 ; KMPDNAME... Field #.01 (free text).
"RTN","KMPDUTL8",7,0)
 ; KMPDARRY(). Array containing data to file in format (passed by value):
"RTN","KMPDUTL8",8,0)
 ;               KMPDARRY(FieldNumber)=InternalEntryValue.
"RTN","KMPDUTL8",9,0)
 ;               Example: KMPDARRY(.02)=2990719.1001
"RTN","KMPDUTL8",10,0)
 ;                        KMPDARRY(.03)=12345
"RTN","KMPDUTL8",11,0)
 ;                        KMPDARRY(.04)="1290"
"RTN","KMPDUTL8",12,0)
 ;                        KMPDARRY(...)="..."
"RTN","KMPDUTL8",13,0)
 ;                        KMPDARRY(10,1,0)="This contains word"
"RTN","KMPDUTL8",14,0)
 ;                        KMPDARRY(10,2,0)="processing text for the"
"RTN","KMPDUTL8",15,0)
 ;                        KMPDARRY(10,3,0)="COMMENTS field."
"RTN","KMPDUTL8",16,0)
 ; KMPDIEN... New ien for entry (if not successful KMPDIEN will be null).
"RTN","KMPDUTL8",17,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL8",18,0)
 ;
"RTN","KMPDUTL8",19,0)
 Q:$G(KMPDNAME)=""
"RTN","KMPDUTL8",20,0)
 ; convert disallowed characters.
"RTN","KMPDUTL8",21,0)
 S KMPDNAME=$$CONVERT^KMPDUTL7(KMPDNAME)
"RTN","KMPDUTL8",22,0)
 Q:KMPDNAME=""
"RTN","KMPDUTL8",23,0)
 ;
"RTN","KMPDUTL8",24,0)
 N FDA,I,MESSAGE,ZIEN
"RTN","KMPDUTL8",25,0)
 ; name.
"RTN","KMPDUTL8",26,0)
 S FDA($J,8972.1,"+1,",.01)=KMPDNAME
"RTN","KMPDUTL8",27,0)
 ; additional fields.
"RTN","KMPDUTL8",28,0)
 F I=.02:.01:.09 I $G(@KMPDARRY@(I))'="" D 
"RTN","KMPDUTL8",29,0)
 .S FDA($J,8972.1,"+1,",I)=@KMPDARRY@(I)
"RTN","KMPDUTL8",30,0)
 ; 'comments' word-processing field.
"RTN","KMPDUTL8",31,0)
 S:$O(@KMPDARRY@(10,0)) FDA($J,8972.1,"+1,",10)=KMPDARRY_"(10)"
"RTN","KMPDUTL8",32,0)
 ;
"RTN","KMPDUTL8",33,0)
 ; update file 8971.1.
"RTN","KMPDUTL8",34,0)
 D UPDATE^DIE("","FDA($J)","ZIEN","MESSAGE")
"RTN","KMPDUTL8",35,0)
 S KMPDIEN=$G(ZIEN(1)) Q:'KMPDIEN
"RTN","KMPDUTL8",36,0)
 ; if error message.
"RTN","KMPDUTL8",37,0)
 I $D(MESSAGE) D MSG^DIALOG("W","",60,10,"MESSAGE")
"RTN","KMPDUTL8",38,0)
 ;
"RTN","KMPDUTL8",39,0)
 Q
"RTN","KMPDUTL8",40,0)
 ;
"RTN","KMPDUTL8",41,0)
EDIT(KMPDIEN,KMPDARRY) ;-- edit entry in file #8972.1
"RTN","KMPDUTL8",42,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL8",43,0)
 ; KMPDIEN... Ien for file #8972.1 (CM CODE EVALUATOR)
"RTN","KMPDUTL8",44,0)
 ; KMPDARRY(). Array containing data to file in format (passed by value):
"RTN","KMPDUTL8",45,0)
 ;               KMPDARRY(FieldNumber)=InternalEntryValue.
"RTN","KMPDUTL8",46,0)
 ;               Example: KMPDARRY(.02)=2990719.1001
"RTN","KMPDUTL8",47,0)
 ;                        KMPDARRY(.03)=12345
"RTN","KMPDUTL8",48,0)
 ;                        KMPDARRY(.04)="1290"
"RTN","KMPDUTL8",49,0)
 ;                        KMPDARRY(...)="..."
"RTN","KMPDUTL8",50,0)
 ;                        KMPDARRY(10,1,0)="This contains word"
"RTN","KMPDUTL8",51,0)
 ;                        KMPDARRY(10,2,0)="processing text for the"
"RTN","KMPDUTL8",52,0)
 ;                        KMPDARRY(10,3,0)="COMMENTS field."
"RTN","KMPDUTL8",53,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL8",54,0)
 ;
"RTN","KMPDUTL8",55,0)
 Q:'$G(KMPDIEN)
"RTN","KMPDUTL8",56,0)
 Q:'$D(^KMPD(8972.1,+KMPDIEN,0))#5
"RTN","KMPDUTL8",57,0)
 Q:$G(KMPDARRY)=""
"RTN","KMPDUTL8",58,0)
 ;
"RTN","KMPDUTL8",59,0)
 N DATA,FDA,I,MESSAGE,ZIEN
"RTN","KMPDUTL8",60,0)
 ;
"RTN","KMPDUTL8",61,0)
 ; data already stored for this entry
"RTN","KMPDUTL8",62,0)
 S DATA(0)=$G(^KMPD(8972.1,+KMPDIEN,0))
"RTN","KMPDUTL8",63,0)
 ;
"RTN","KMPDUTL8",64,0)
 ; date/time last edited
"RTN","KMPDUTL8",65,0)
 S FDA($J,8972.1,KMPDIEN_",",2.01)=$$NOW^XLFDT
"RTN","KMPDUTL8",66,0)
 ;
"RTN","KMPDUTL8",67,0)
 ; last edited by
"RTN","KMPDUTL8",68,0)
 S:$G(DUZ) FDA($J,8972.1,KMPDIEN_",",2.02)=DUZ
"RTN","KMPDUTL8",69,0)
 ;
"RTN","KMPDUTL8",70,0)
 ; add data elements to current data
"RTN","KMPDUTL8",71,0)
 F I=.04:.01:.09 D 
"RTN","KMPDUTL8",72,0)
 .S FDA($J,8972.1,KMPDIEN_",",I)=@KMPDARRY@(I)+$P(DATA(0),U,(I*100))
"RTN","KMPDUTL8",73,0)
 .; make sure not negative number
"RTN","KMPDUTL8",74,0)
 .S FDA($J,8972.1,KMPDIEN_",",I)=$$NUMBER^KMPDUTL7(FDA($J,8972.1,KMPDIEN_",",I))
"RTN","KMPDUTL8",75,0)
 .; if number has grown to 15 characters or more then make this code
"RTN","KMPDUTL8",76,0)
 .; evaluator inactive
"RTN","KMPDUTL8",77,0)
 .S:$L(FDA($J,8972.1,KMPDIEN_",",I))>14 FDA($J,8971.1,KMPDIEN_",",.11)=0
"RTN","KMPDUTL8",78,0)
 ;
"RTN","KMPDUTL8",79,0)
 ; increment count
"RTN","KMPDUTL8",80,0)
 S FDA($J,8972.1,KMPDIEN_",",.1)=$P(DATA(0),U,10)+1
"RTN","KMPDUTL8",81,0)
 ;
"RTN","KMPDUTL8",82,0)
 ; 'comments' word-processing field.
"RTN","KMPDUTL8",83,0)
 S:$O(@KMPDARRY@(10,0)) FDA($J,8972.1,KMPDIEN_",",10)=KMPDARRY_"(10)"
"RTN","KMPDUTL8",84,0)
 ;
"RTN","KMPDUTL8",85,0)
 ; update file 8971.1.
"RTN","KMPDUTL8",86,0)
 D UPDATE^DIE("","FDA($J)","ZIEN","MESSAGE")
"RTN","KMPDUTL8",87,0)
 ;
"RTN","KMPDUTL8",88,0)
 S KMPDIEN=$G(ZIEN(1)) Q:'KMPDIEN
"RTN","KMPDUTL8",89,0)
 ;
"RTN","KMPDUTL8",90,0)
 ; if error message.
"RTN","KMPDUTL8",91,0)
 I $D(MESSAGE) D MSG^DIALOG("W","",60,10,"MESSAGE")
"RTN","KMPDUTL8",92,0)
 ;
"RTN","KMPDUTL8",93,0)
 Q
"RTN","KMPDUTL8",94,0)
 ;
"RTN","KMPDUTL8",95,0)
ID(KMPDIEN) ;-- display fields during lookup
"RTN","KMPDUTL8",96,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL8",97,0)
 ; KMPDIEN.... Ien for file #8972.1.
"RTN","KMPDUTL8",98,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL8",99,0)
 ;
"RTN","KMPDUTL8",100,0)
 Q:'$D(^KMPD(8972.1,+$G(KMPDIEN),0))
"RTN","KMPDUTL8",101,0)
 ;
"RTN","KMPDUTL8",102,0)
 N DATA,TXT
"RTN","KMPDUTL8",103,0)
 S DATA=$G(^KMPD(8972.1,+KMPDIEN,0))
"RTN","KMPDUTL8",104,0)
 S TXT(1)=$$FMTE^DILIBF($P(DATA,U,2),6)
"RTN","KMPDUTL8",105,0)
 S TXT(1)=TXT(1)_"   "_$$GET1^DIQ(8972.1,KMPDIEN,.03)
"RTN","KMPDUTL8",106,0)
 S TXT(1,"F")="?35"
"RTN","KMPDUTL8",107,0)
 S TXT(2)="cpu tm="_$P(DATA,U,4)_"  dio ref="_$P(DATA,U,5)_"  "
"RTN","KMPDUTL8",108,0)
 S TXT(2)=TXT(2)_"bio ref="_$P(DATA,U,6)_"  page flts="_$P(DATA,U,7)_"  "
"RTN","KMPDUTL8",109,0)
 S TXT(2)=TXT(2)_"m com="_$P(DATA,U,8)_"  global ref="_$P(DATA,U,9)
"RTN","KMPDUTL8",110,0)
 S TXT(2,"F")="!?5",TXT(3)="",TXT(3,"F")="!"
"RTN","KMPDUTL8",111,0)
 D EN^DDIOL(.TXT)
"RTN","KMPDUTL8",112,0)
 ;
"RTN","KMPDUTL8",113,0)
 Q
"RTN","KMPDUTL8",114,0)
 ;
"RTN","KMPDUTL8",115,0)
ELEDATA(KMPDIEN) ;-- extrinsic function - if element data
"RTN","KMPDUTL8",116,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL8",117,0)
 ; KMPDIEN... Ien for file #8972.1 (CM CODE EVALUATOR)
"RTN","KMPDUTL8",118,0)
 ;
"RTN","KMPDUTL8",119,0)
 ; Return: 0 - element data is NOT present
"RTN","KMPDUTL8",120,0)
 ;         1 - element data is present
"RTN","KMPDUTL8",121,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL8",122,0)
 ;
"RTN","KMPDUTL8",123,0)
 Q:'$G(KMPDIEN) 0
"RTN","KMPDUTL8",124,0)
 Q:'$D(^KMPD(8972.1,+KMPDIEN,0))#5 0
"RTN","KMPDUTL8",125,0)
 ;
"RTN","KMPDUTL8",126,0)
 N DATA,I,RETURN
"RTN","KMPDUTL8",127,0)
 S DATA(0)=$G(^KMPD(8972.1,+KMPDIEN,0))
"RTN","KMPDUTL8",128,0)
 S RETURN=1
"RTN","KMPDUTL8",129,0)
 F I=4,5,6,8,9 I $P(DATA(0),U,I)']"" S RETURN=0 Q
"RTN","KMPDUTL8",130,0)
 Q RETURN
"SEC","^DD",8972.1,8972.1,99.04,9)

"SEC","^DD",8972.1,8972.1,99.05,9)

"SEC","^DD",8972.1,8972.1,99.06,9)

"SEC","^DD",8972.1,8972.1,99.07,9)

"SEC","^DD",8972.1,8972.1,99.08,9)

"SEC","^DD",8972.1,8972.1,99.09,9)

"SEC","^DIC",8972.1,8972.1,0,"AUDIT")
@
"SEC","^DIC",8972.1,8972.1,0,"DD")
@
"SEC","^DIC",8972.1,8972.1,0,"DEL")
@
"SEC","^DIC",8972.1,8972.1,0,"LAYGO")
@
"SEC","^DIC",8972.1,8972.1,0,"RD")
@
"SEC","^DIC",8972.1,8972.1,0,"WR")
@
"SEC","^DIC",8972.3,8972.3,0,"AUDIT")
@
"SEC","^DIC",8972.3,8972.3,0,"DD")
@
"SEC","^DIC",8972.3,8972.3,0,"DEL")
@
"SEC","^DIC",8972.3,8972.3,0,"LAYGO")
@
"SEC","^DIC",8972.3,8972.3,0,"RD")
@
"SEC","^DIC",8972.3,8972.3,0,"WR")
@
"SEC","^DIC",8973,8973,0,"AUDIT")
@
"SEC","^DIC",8973,8973,0,"DD")
@
"SEC","^DIC",8973,8973,0,"DEL")
@
"SEC","^DIC",8973,8973,0,"LAYGO")
@
"SEC","^DIC",8973,8973,0,"RD")
@
"SEC","^DIC",8973,8973,0,"WR")
@
"SEC","^DIC",8973.1,8973.1,0,"AUDIT")
@
"SEC","^DIC",8973.1,8973.1,0,"DD")
@
"SEC","^DIC",8973.1,8973.1,0,"DEL")
@
"SEC","^DIC",8973.1,8973.1,0,"LAYGO")
@
"SEC","^DIC",8973.1,8973.1,0,"RD")
@
"SEC","^DIC",8973.1,8973.1,0,"WR")
@
"SEC","^DIC",8973.2,8973.2,0,"AUDIT")
@
"SEC","^DIC",8973.2,8973.2,0,"DD")
@
"SEC","^DIC",8973.2,8973.2,0,"DEL")
@
"SEC","^DIC",8973.2,8973.2,0,"LAYGO")
@
"SEC","^DIC",8973.2,8973.2,0,"RD")
@
"SEC","^DIC",8973.2,8973.2,0,"WR")
@
"SEC","^DIC",8973.3,8973.3,0,"AUDIT")
@
"SEC","^DIC",8973.3,8973.3,0,"DD")
@
"SEC","^DIC",8973.3,8973.3,0,"DEL")
@
"SEC","^DIC",8973.3,8973.3,0,"LAYGO")
@
"SEC","^DIC",8973.3,8973.3,0,"RD")
@
"SEC","^DIC",8973.3,8973.3,0,"WR")
@
"VER")
8.0^22.0
"^DD",8972.1,8972.1,0)
FIELD^^99.09^23
"^DD",8972.1,8972.1,0,"DDA")
N
"^DD",8972.1,8972.1,0,"DT")
3090706
"^DD",8972.1,8972.1,0,"IX","B",8972.1,.01)

"^DD",8972.1,8972.1,0,"NM","CP CODE EVALUATOR")

"^DD",8972.1,8972.1,0,"VRPK")
KMPD
"^DD",8972.1,8972.1,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",8972.1,8972.1,.01,1,0)
^.1
"^DD",8972.1,8972.1,.01,1,1,0)
8972.1^B
"^DD",8972.1,8972.1,.01,1,1,1)
S ^KMPD(8972.1,"B",$E(X,1,30),DA)=""
"^DD",8972.1,8972.1,.01,1,1,2)
K ^KMPD(8972.1,"B",$E(X,1,30),DA)
"^DD",8972.1,8972.1,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",8972.1,8972.1,.02,0)
DATE/TIME ENTERED^D^^0;2^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",8972.1,8972.1,.02,"DT")
2990820
"^DD",8972.1,8972.1,.03,0)
ENTERED BY^P200'^VA(200,^0;3^Q
"^DD",8972.1,8972.1,.03,"DT")
2990820
"^DD",8972.1,8972.1,.04,0)
CPU TIME^F^^0;4^K:$L(X)>15!($L(X)<1) X
"^DD",8972.1,8972.1,.04,3)
Answer must be 1-15 characters in length.
"^DD",8972.1,8972.1,.04,"DT")
2990820
"^DD",8972.1,8972.1,.05,0)
DIO REFERENCES^F^^0;5^K:$L(X)>15!($L(X)<1) X
"^DD",8972.1,8972.1,.05,3)
Answer must be 1-15 characters in length.
"^DD",8972.1,8972.1,.05,"DT")
2990820
"^DD",8972.1,8972.1,.06,0)
BIO REFERENCES^F^^0;6^K:$L(X)>15!($L(X)<1) X
"^DD",8972.1,8972.1,.06,3)
Answer must be 1-15 characters in length.
"^DD",8972.1,8972.1,.06,"DT")
2990820
"^DD",8972.1,8972.1,.07,0)
PAGE FAULTS^F^^0;7^K:$L(X)>15!($L(X)<1) X
"^DD",8972.1,8972.1,.07,3)
Answer must be 1-15 characters in length.
"^DD",8972.1,8972.1,.07,"DT")
2990820
"^DD",8972.1,8972.1,.08,0)
M COMMANDS^F^^0;8^K:$L(X)>15!($L(X)<1) X
"^DD",8972.1,8972.1,.08,3)
Answer must be 1-15 characters in length.
"^DD",8972.1,8972.1,.08,"DT")
2990820
"^DD",8972.1,8972.1,.09,0)
GLOBAL REFERENCES^F^^0;9^K:$L(X)>15!($L(X)<1) X
"^DD",8972.1,8972.1,.09,3)
Answer must be 1-15 characters in length.
"^DD",8972.1,8972.1,.09,"DT")
2990820
"^DD",8972.1,8972.1,.1,0)
COUNT^F^^0;10^K:$L(X)>15!($L(X)<1) X
"^DD",8972.1,8972.1,.1,3)
Answer must be 1-15 characters in length
"^DD",8972.1,8972.1,.1,"DT")
3000315
"^DD",8972.1,8972.1,.11,0)
ACTIVE^S^0:not active;1:active;^0;11^Q
"^DD",8972.1,8972.1,.11,"DT")
3090706
"^DD",8972.1,8972.1,.12,0)
ELAPSED TIME (SECONDS)^F^^0;12^K:$L(X)>12!($L(X)<1) X
"^DD",8972.1,8972.1,.12,3)
Answer must be 1-12 characters in length
"^DD",8972.1,8972.1,.12,"DT")
3051115
"^DD",8972.1,8972.1,1.01,0)
BRIEF DESCRIPTION^F^^1;1^K:$L(X)>60!($L(X)<1) X
"^DD",8972.1,8972.1,1.01,3)
Answer must be 1-60 characters in length
"^DD",8972.1,8972.1,1.01,"DT")
3000316
"^DD",8972.1,8972.1,2.01,0)
DATE/TIME LAST EDITED^D^^2;1^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8972.1,8972.1,2.01,3)
(No range limit on date)
"^DD",8972.1,8972.1,2.01,"DT")
3000329
"^DD",8972.1,8972.1,2.02,0)
LAST EDITED BY^P200'^VA(200,^2;2^Q
"^DD",8972.1,8972.1,2.02,"DT")
3000329
"^DD",8972.1,8972.1,10,0)
COMMENTS^8972.11^^10;0
"^DD",8972.1,8972.1,11,0)
ASSOCIATED ROUTINE^8972.111^^11;0
"^DD",8972.1,8972.1,99.04,0)
AVE CPU TIME^CJ15^^ ; ^X ^DD(8972.1,99.04,9.4) S X=$E(Y(8972.1,99.04,5),Y(8972.1,99.04,6),X)
"^DD",8972.1,8972.1,99.04,9.01)
8972.1^.04;8972.1^.1
"^DD",8972.1,8972.1,99.04,9.1)
$E($S(COUNT:CPU TIME/COUNT,1:CPU TIME),1,15)
"^DD",8972.1,8972.1,99.04,9.2)
S Y(8972.1,99.04,1)=$S($D(^KMPD(8972.1,D0,0)):^(0),1:"") S X=$P(Y(8972.1,99.04,1),U,10),Y(8972.1,99.04,2)=X S X=$P(Y(8972.1,99.04,1),U,4),X=$S($P(Y(8972.1,99.04,1),U,10):X/$P(Y(8972.1,99.04,1),U,10),1:"*******")
"^DD",8972.1,8972.1,99.04,9.3)
X ^DD(8972.1,99.04,9.2) S Y(8972.1,99.04,3)=X S X=1,Y(8972.1,99.04,4)=X S X=$P(Y(8972.1,99.04,1),U,4)
"^DD",8972.1,8972.1,99.04,9.4)
X ^DD(8972.1,99.04,9.3) S X=$S(Y(8972.1,99.04,2):Y(8972.1,99.04,3),Y(8972.1,99.04,4):X),Y(8972.1,99.04,5)=X S X=1,Y(8972.1,99.04,6)=X S X=15
"^DD",8972.1,8972.1,99.04,"DT")
3000404
"^DD",8972.1,8972.1,99.05,0)
AVE DIO REFERENCES^CJ15^^ ; ^X ^DD(8972.1,99.05,9.4) S X=$E(Y(8972.1,99.05,5),Y(8972.1,99.05,6),X)
"^DD",8972.1,8972.1,99.05,9.01)
8972.1^.05;8972.1^.1
"^DD",8972.1,8972.1,99.05,9.1)
$E($S(COUNT:DIO REFERENCES/COUNT,1:DIO REFERENCES),1,15)
"^DD",8972.1,8972.1,99.05,9.2)
S Y(8972.1,99.05,1)=$S($D(^KMPD(8972.1,D0,0)):^(0),1:"") S X=$P(Y(8972.1,99.05,1),U,10),Y(8972.1,99.05,2)=X S X=$P(Y(8972.1,99.05,1),U,5),X=$S($P(Y(8972.1,99.05,1),U,10):X/$P(Y(8972.1,99.05,1),U,10),1:"*******")
"^DD",8972.1,8972.1,99.05,9.3)
X ^DD(8972.1,99.05,9.2) S Y(8972.1,99.05,3)=X S X=1,Y(8972.1,99.05,4)=X S X=$P(Y(8972.1,99.05,1),U,5)
"^DD",8972.1,8972.1,99.05,9.4)
X ^DD(8972.1,99.05,9.3) S X=$S(Y(8972.1,99.05,2):Y(8972.1,99.05,3),Y(8972.1,99.05,4):X),Y(8972.1,99.05,5)=X S X=1,Y(8972.1,99.05,6)=X S X=15
"^DD",8972.1,8972.1,99.05,"DT")
3000404
"^DD",8972.1,8972.1,99.06,0)
AVE BIO REFERENCES^CJ15^^ ; ^X ^DD(8972.1,99.06,9.4) S X=$E(Y(8972.1,99.06,5),Y(8972.1,99.06,6),X)
"^DD",8972.1,8972.1,99.06,9.01)
8972.1^.06;8972.1^.1
"^DD",8972.1,8972.1,99.06,9.1)
$E($S(COUNT:BIO REFERENCES/COUNT,1:BIO REFERENCES),1,15)
"^DD",8972.1,8972.1,99.06,9.2)
S Y(8972.1,99.06,1)=$S($D(^KMPD(8972.1,D0,0)):^(0),1:"") S X=$P(Y(8972.1,99.06,1),U,10),Y(8972.1,99.06,2)=X S X=$P(Y(8972.1,99.06,1),U,6),X=$S($P(Y(8972.1,99.06,1),U,10):X/$P(Y(8972.1,99.06,1),U,10),1:"*******")
"^DD",8972.1,8972.1,99.06,9.3)
X ^DD(8972.1,99.06,9.2) S Y(8972.1,99.06,3)=X S X=1,Y(8972.1,99.06,4)=X S X=$P(Y(8972.1,99.06,1),U,6)
"^DD",8972.1,8972.1,99.06,9.4)
X ^DD(8972.1,99.06,9.3) S X=$S(Y(8972.1,99.06,2):Y(8972.1,99.06,3),Y(8972.1,99.06,4):X),Y(8972.1,99.06,5)=X S X=1,Y(8972.1,99.06,6)=X S X=15
"^DD",8972.1,8972.1,99.06,"DT")
3000404
"^DD",8972.1,8972.1,99.07,0)
AVE PAGE FAULTS^CJ15^^ ; ^X ^DD(8972.1,99.07,9.4) S X=$E(Y(8972.1,99.07,5),Y(8972.1,99.07,6),X)
"^DD",8972.1,8972.1,99.07,9.01)
8972.1^.07;8972.1^.1
"^DD",8972.1,8972.1,99.07,9.1)
$E($S(COUNT:PAGE FAULTS/COUNT,1:PAGE FAULTS),1,15)
"^DD",8972.1,8972.1,99.07,9.2)
S Y(8972.1,99.07,1)=$S($D(^KMPD(8972.1,D0,0)):^(0),1:"") S X=$P(Y(8972.1,99.07,1),U,10),Y(8972.1,99.07,2)=X S X=$P(Y(8972.1,99.07,1),U,7),X=$S($P(Y(8972.1,99.07,1),U,10):X/$P(Y(8972.1,99.07,1),U,10),1:"*******")
"^DD",8972.1,8972.1,99.07,9.3)
X ^DD(8972.1,99.07,9.2) S Y(8972.1,99.07,3)=X S X=1,Y(8972.1,99.07,4)=X S X=$P(Y(8972.1,99.07,1),U,7)
"^DD",8972.1,8972.1,99.07,9.4)
X ^DD(8972.1,99.07,9.3) S X=$S(Y(8972.1,99.07,2):Y(8972.1,99.07,3),Y(8972.1,99.07,4):X),Y(8972.1,99.07,5)=X S X=1,Y(8972.1,99.07,6)=X S X=15
"^DD",8972.1,8972.1,99.07,"DT")
3000404
"^DD",8972.1,8972.1,99.08,0)
AVE M COMMANDS^CJ15^^ ; ^X ^DD(8972.1,99.08,9.4) S X=$E(Y(8972.1,99.08,5),Y(8972.1,99.08,6),X)
"^DD",8972.1,8972.1,99.08,9.01)
8972.1^.08;8972.1^.1
"^DD",8972.1,8972.1,99.08,9.1)
$E($S(COUNT:M COMMANDS/COUNT,1:M COMMANDS),1,15)
"^DD",8972.1,8972.1,99.08,9.2)
S Y(8972.1,99.08,1)=$S($D(^KMPD(8972.1,D0,0)):^(0),1:"") S X=$P(Y(8972.1,99.08,1),U,10),Y(8972.1,99.08,2)=X S X=$P(Y(8972.1,99.08,1),U,8),X=$S($P(Y(8972.1,99.08,1),U,10):X/$P(Y(8972.1,99.08,1),U,10),1:"*******")
"^DD",8972.1,8972.1,99.08,9.3)
X ^DD(8972.1,99.08,9.2) S Y(8972.1,99.08,3)=X S X=1,Y(8972.1,99.08,4)=X S X=$P(Y(8972.1,99.08,1),U,8)
"^DD",8972.1,8972.1,99.08,9.4)
X ^DD(8972.1,99.08,9.3) S X=$S(Y(8972.1,99.08,2):Y(8972.1,99.08,3),Y(8972.1,99.08,4):X),Y(8972.1,99.08,5)=X S X=1,Y(8972.1,99.08,6)=X S X=15
"^DD",8972.1,8972.1,99.08,"DT")
3000404
"^DD",8972.1,8972.1,99.09,0)
AVE GLOBAL REFERENCES^CJ15^^ ; ^X ^DD(8972.1,99.09,9.4) S X=$E(Y(8972.1,99.09,5),Y(8972.1,99.09,6),X)
"^DD",8972.1,8972.1,99.09,9.01)
8972.1^.09;8972.1^.1
"^DD",8972.1,8972.1,99.09,9.1)
$E($S(COUNT:GLOBAL REFERENCES/COUNT,1:GLOBAL REFERENCES),1,15)
"^DD",8972.1,8972.1,99.09,9.2)
S Y(8972.1,99.09,1)=$S($D(^KMPD(8972.1,D0,0)):^(0),1:"") S X=$P(Y(8972.1,99.09,1),U,10),Y(8972.1,99.09,2)=X S X=$P(Y(8972.1,99.09,1),U,9),X=$S($P(Y(8972.1,99.09,1),U,10):X/$P(Y(8972.1,99.09,1),U,10),1:"*******")
"^DD",8972.1,8972.1,99.09,9.3)
X ^DD(8972.1,99.09,9.2) S Y(8972.1,99.09,3)=X S X=1,Y(8972.1,99.09,4)=X S X=$P(Y(8972.1,99.09,1),U,9)
"^DD",8972.1,8972.1,99.09,9.4)
X ^DD(8972.1,99.09,9.3) S X=$S(Y(8972.1,99.09,2):Y(8972.1,99.09,3),Y(8972.1,99.09,4):X),Y(8972.1,99.09,5)=X S X=1,Y(8972.1,99.09,6)=X S X=15
"^DD",8972.1,8972.1,99.09,"DT")
3000404
"^DD",8972.1,8972.11,0)
COMMENTS SUB-FIELD^^.01^1
"^DD",8972.1,8972.11,0,"DT")
2990820
"^DD",8972.1,8972.11,0,"NM","COMMENTS")

"^DD",8972.1,8972.11,0,"UP")
8972.1
"^DD",8972.1,8972.11,.01,0)
COMMENTS^W^^0;1^Q
"^DD",8972.1,8972.11,.01,"DT")
2990820
"^DD",8972.1,8972.111,0)
ASSOCIATED ROUTINE SUB-FIELD^^.01^1
"^DD",8972.1,8972.111,0,"DT")
3000405
"^DD",8972.1,8972.111,0,"IX","B",8972.111,.01)

"^DD",8972.1,8972.111,0,"NM","ASSOCIATED ROUTINE")

"^DD",8972.1,8972.111,0,"UP")
8972.1
"^DD",8972.1,8972.111,.01,0)
ASSOCIATED ROUTINE^MF^^0;1^K:$L(X)>8!($L(X)<1) X
"^DD",8972.1,8972.111,.01,1,0)
^.1
"^DD",8972.1,8972.111,.01,1,1,0)
8972.111^B
"^DD",8972.1,8972.111,.01,1,1,1)
S ^KMPD(8972.1,DA(1),11,"B",$E(X,1,30),DA)=""
"^DD",8972.1,8972.111,.01,1,1,2)
K ^KMPD(8972.1,DA(1),11,"B",$E(X,1,30),DA)
"^DD",8972.1,8972.111,.01,3)
Answer must be 1-8 characters in length
"^DD",8972.1,8972.111,.01,"DT")
3000405
"^DD",8972.3,8972.3,0)
FIELD^^.05^5
"^DD",8972.3,8972.3,0,"DDA")
N
"^DD",8972.3,8972.3,0,"DT")
3040729
"^DD",8972.3,8972.3,0,"IX","B",8972.3,.01)

"^DD",8972.3,8972.3,0,"NM","CP DATA ELEMENTS")

"^DD",8972.3,8972.3,0,"VRPK")
KMPD
"^DD",8972.3,8972.3,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",8972.3,8972.3,.01,1,0)
^.1
"^DD",8972.3,8972.3,.01,1,1,0)
8972.3^B
"^DD",8972.3,8972.3,.01,1,1,1)
S ^KMPD(8972.3,"B",$E(X,1,30),DA)=""
"^DD",8972.3,8972.3,.01,1,1,2)
K ^KMPD(8972.3,"B",$E(X,1,30),DA)
"^DD",8972.3,8972.3,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",8972.3,8972.3,.01,"DT")
3040415
"^DD",8972.3,8972.3,.02,0)
ACTIVE^S^0:NO;1:YES;^0;2^Q
"^DD",8972.3,8972.3,.02,3)
Enter 0 if this DATA ELEMENT is NOT active, or 1 if this DATA ELEMENT is active.
"^DD",8972.3,8972.3,.02,21,0)
^^3^3^3040729^
"^DD",8972.3,8972.3,.02,21,1,0)
This field determines if the DATA ELEMENT is selectable.  DATA ELEMENTS 
"^DD",8972.3,8972.3,.02,21,2,0)
should not be deleted, but will be made INACTIVE if they are no longer in 
"^DD",8972.3,8972.3,.02,21,3,0)
use.
"^DD",8972.3,8972.3,.02,"DT")
3040729
"^DD",8972.3,8972.3,.03,0)
DATA LOCATION (PIECE)^NJ2,0^^0;3^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1.N) X
"^DD",8972.3,8972.3,.03,3)
*** DO NOT ALTER *** This entry determines which piece represents this data.
"^DD",8972.3,8972.3,.03,21,0)
^^2^2^3040729^
"^DD",8972.3,8972.3,.03,21,1,0)
The DATA ELEMENTS are seperated by an up-arrow (^) in a data string.  This
"^DD",8972.3,8972.3,.03,21,2,0)
entry determines which piece represents this data.  DO NOT ALTER!!!
"^DD",8972.3,8972.3,.03,"DT")
3040729
"^DD",8972.3,8972.3,.04,0)
DISPLAY TEXT^F^^0;4^K:$L(X)>30!($L(X)<1) X
"^DD",8972.3,8972.3,.04,3)
The text to display for prompts or printouts. Answer must be 1-30 characters in length
"^DD",8972.3,8972.3,.04,21,0)
^^2^2^3040729^
"^DD",8972.3,8972.3,.04,21,1,0)
A more 'readable' form of the DATA ELEMENT name used for prompts and 
"^DD",8972.3,8972.3,.04,21,2,0)
printouts.
"^DD",8972.3,8972.3,.04,"DT")
3040729
"^DD",8972.3,8972.3,.05,0)
DISPLAY ON CODE EVALUATOR^S^0:NO;1:YES;^0;5^Q
"^DD",8972.3,8972.3,.05,3)
IF 0 this DATA ELEMENT can NOT be displayed, if 1 this DATA ELEMENT can be displayed.
"^DD",8972.3,8972.3,.05,21,0)
^^2^2^3040729^
"^DD",8972.3,8972.3,.05,21,1,0)
Not all DATA ELEMENTS are appropriate for the CODE EVALUATOR.  This field 
"^DD",8972.3,8972.3,.05,21,2,0)
restricts which DATA ELEMENTS are displayed.
"^DD",8972.3,8972.3,.05,"DT")
3040729
"^DD",8973,8973,0)
FIELD^^5.03^76
"^DD",8973,8973,0,"DDA")
N
"^DD",8973,8973,0,"DT")
3060412
"^DD",8973,8973,0,"IX","B",8973,.01)

"^DD",8973,8973,0,"NM","CP PARAMETERS")

"^DD",8973,8973,0,"VRPK")
KMPD
"^DD",8973,8973,.01,0)
NAME^R*P4'^DIC(4,^0;1^S DIC("S")="I '$O(^KMPD(8973,0))" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",8973,8973,.01,1,0)
^.1
"^DD",8973,8973,.01,1,1,0)
8973^B
"^DD",8973,8973,.01,1,1,1)
S ^KMPD(8973,"B",$E(X,1,30),DA)=""
"^DD",8973,8973,.01,1,1,2)
K ^KMPD(8973,"B",$E(X,1,30),DA)
"^DD",8973,8973,.01,3)
Pointer to the Institution file (#4)
"^DD",8973,8973,.01,12)
Allow only one entry in file.
"^DD",8973,8973,.01,12.1)
S DIC("S")="I '$O(^KMPD(8973,0))"
"^DD",8973,8973,.01,"DEL",.01,0)
I 1
"^DD",8973,8973,.01,"DT")
3040401
"^DD",8973,8973,.02,0)
CM TOOLS CURRENT VERSION^F^^0;2^K:$L(X)>10!($L(X)<1) X
"^DD",8973,8973,.02,3)
Current version of CAPACITY MANGEMENT TOOLS. Answer must be 1-10 characters in length
"^DD",8973,8973,.02,"DT")
3040401
"^DD",8973,8973,.03,0)
CM TOOLS CURRENT VERSION INST^D^^0;3^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,.03,3)
Installation date of the current version of CAPACITY MANAGEMENT TOOLS.
"^DD",8973,8973,.03,"DT")
3040401
"^DD",8973,8973,.04,0)
CM TOOLS CURRENT PATCH^F^^0;4^K:$L(X)>10!($L(X)<1) X
"^DD",8973,8973,.04,3)
Current patch number for the CAPACITY MANAGEMNT TOOLS package. Answer must be 1-10 characters in length
"^DD",8973,8973,.04,"DT")
3040401
"^DD",8973,8973,.05,0)
CM TOOLS CURRENT PATCH INST^D^^0;5^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,.05,3)
Installation Date of the current CAPACITY MANAGEMENT TOOLS patch.
"^DD",8973,8973,.05,"DT")
3040401
"^DD",8973,8973,1.01,0)
SAGG CURRENT VERSION^F^^1;1^K:$L(X)>10!($L(X)<1) X
"^DD",8973,8973,1.01,3)
Current version of the SAGG package. Answer must be 1-10 characters in length
"^DD",8973,8973,1.01,"DT")
3040401
"^DD",8973,8973,1.02,0)
SAGG CURRENT VERSION INSTALL^D^^1;2^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,1.02,3)
Installation Date for the current SAGG package.
"^DD",8973,8973,1.02,"DT")
3040401
"^DD",8973,8973,1.03,0)
SAGG CURRENT PATCH^F^^1;3^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973,1.03,3)
Current SAGG patch number(s). Answer must be 1-20 characters in length
"^DD",8973,8973,1.03,"DT")
3040401
"^DD",8973,8973,1.04,0)
SAGG CURRENT PATCH INSTALL^D^^1;4^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,1.04,3)
Installation Date for current SAGG patch.
"^DD",8973,8973,1.04,"DT")
3040401
"^DD",8973,8973,1.05,0)
SAGG DLY BKG START^D^^1;5^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,1.05,3)
Most recent Start Time for the SAGG daily background job.
"^DD",8973,8973,1.05,"DT")
3040401
"^DD",8973,8973,1.06,0)
SAGG DLY BKG STOP^D^^1;6^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,1.06,3)
Most recent Stop Time for the SAGG daily background job.
"^DD",8973,8973,1.06,"DT")
3040401
"^DD",8973,8973,1.07,0)
SAGG DLY BKG DELTA^F^^1;7^K:$L(X)>10!($L(X)<1) X
"^DD",8973,8973,1.07,3)
Most recent Delta for the SAGG daily background job.
"^DD",8973,8973,1.07,"DT")
3040401
"^DD",8973,8973,1.08,0)
SAGG WKY BKG START^D^^1;8^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,1.08,3)
Most recent Start Time for the SAGG weekly background job.
"^DD",8973,8973,1.08,"DT")
3040401
"^DD",8973,8973,1.09,0)
SAGG WKY BKG STOP^D^^1;9^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,1.09,3)
Most recent Stop Time for the SAGG weekly background job. 
"^DD",8973,8973,1.09,"DT")
3040401
"^DD",8973,8973,1.1,0)
SAGG WKY BKG DELTA^F^^1;10^K:$L(X)>15!($L(X)<1) X
"^DD",8973,8973,1.1,3)
Most recent Delta for the SAGG weekly background job.
"^DD",8973,8973,1.1,"DT")
3040720
"^DD",8973,8973,1.11,0)
SAGG WEEKS TO KEEP DATA^NJ3,0^^1;11^K:+X'=X!(X>100)!(X<0)!(X?.E1"."1.N) X
"^DD",8973,8973,1.11,3)
Type a number between 0 and 100, 0 Decimal Digits
"^DD",8973,8973,1.11,"DT")
3040401
"^DD",8973,8973,1.12,0)
SAGG DLY PURGE START^D^^1;12^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,1.12,3)
(No range limit on date)
"^DD",8973,8973,1.12,"DT")
3031121
"^DD",8973,8973,1.13,0)
SAGG DLY PURGE STOP^D^^1;13^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,1.13,3)
(No range limit on date)
"^DD",8973,8973,1.13,"DT")
3031121
"^DD",8973,8973,1.14,0)
SAGG DLY PURGE DELTA^F^^1;14^K:$L(X)>10!($L(X)<1) X
"^DD",8973,8973,1.14,3)
Answer must be 1-10 characters in length
"^DD",8973,8973,1.14,"DT")
3031121
"^DD",8973,8973,1.15,0)
SAGG WKY PURGE START^D^^1;15^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,1.15,3)
(No range limit on date)
"^DD",8973,8973,1.15,"DT")
3031121
"^DD",8973,8973,1.16,0)
SAGG WKY PURGE STOP^D^^1;16^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,1.16,3)
(No range limit on date)
"^DD",8973,8973,1.16,"DT")
3031121
"^DD",8973,8973,1.17,0)
SAGG WKY PURGE DELTA^F^^1;17^K:$L(X)>10!($L(X)<1) X
"^DD",8973,8973,1.17,3)
Answer must be 1-10 characters in length
"^DD",8973,8973,1.17,"DT")
3031121
"^DD",8973,8973,2.01,0)
RUM CURRENT VERSION^F^^2;1^K:$L(X)>10!($L(X)<1) X
"^DD",8973,8973,2.01,3)
Current version of the RESOURCE USAGE MONITOR package. Answer must be 1-10 characters in length
"^DD",8973,8973,2.01,"DT")
3040401
"^DD",8973,8973,2.02,0)
RUM CURRENT VERSION INSTALL^D^^2;2^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,2.02,3)
Installation Date of the current RESOURCE USAGE MONITOR package.
"^DD",8973,8973,2.02,"DT")
3040401
"^DD",8973,8973,2.03,0)
RUM CURRENT PATCH^F^^2;3^K:$L(X)>10!($L(X)<1) X
"^DD",8973,8973,2.03,3)
Current patch number(s) for the RESOURCE USAGE MONITOR package. Answer must be 1-10 characters in length
"^DD",8973,8973,2.03,"DT")
3040401
"^DD",8973,8973,2.04,0)
RUM CURRENT PATCH INSTALL^D^^2;4^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,2.04,3)
Installation Date of the current patch for the RESOURCE USAGE MONITOR package.
"^DD",8973,8973,2.04,"DT")
3040401
"^DD",8973,8973,2.05,0)
RUM DLY BKG START^D^^2;5^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,2.05,3)
Most recent Start Time for the RUM daily background job. 
"^DD",8973,8973,2.05,"DT")
3040401
"^DD",8973,8973,2.06,0)
RUM DLY BKG STOP^D^^2;6^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,2.06,3)
Most recent Stop Time for the RUM daily background job.
"^DD",8973,8973,2.06,"DT")
3040401
"^DD",8973,8973,2.07,0)
RUM DLY BKG DELTA^F^^2;7^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973,2.07,3)
Most recent Delta for the RUM daily background job.
"^DD",8973,8973,2.07,"DT")
3040401
"^DD",8973,8973,2.08,0)
RUM WKY BKG START^D^^2;8^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,2.08,3)
Most recent Start Time for the RUM weekly background job.
"^DD",8973,8973,2.08,"DT")
3040401
"^DD",8973,8973,2.09,0)
RUM WKY BKG STOP^D^^2;9^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,2.09,3)
Most recent Stop Time for the RUM weekly background job.  
"^DD",8973,8973,2.09,"DT")
3040401
"^DD",8973,8973,2.1,0)
RUM WKY BKG DELTA^F^^2;10^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973,2.1,3)
Most recent Delta for the RUM weekly background job.
"^DD",8973,8973,2.1,"DT")
3040401
"^DD",8973,8973,2.11,0)
RUM WEEKS TO KEEP DATA^NJ2,0^^2;11^K:+X'=X!(X>20)!(X<2)!(X?.E1"."1.N) X
"^DD",8973,8973,2.11,3)
This is the number of weeks that RUM data will be retained in file #8971.1 before purging.  It is recommended that 2 weeks of data be retained.
"^DD",8973,8973,2.11,"DT")
3040401
"^DD",8973,8973,2.12,0)
RUM DLY PURGE START^D^^2;12^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,2.12,3)
(No range limit on date)
"^DD",8973,8973,2.12,"DT")
3031121
"^DD",8973,8973,2.13,0)
RUM DLY PURGE STOP^D^^2;13^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,2.13,3)
(No range limit on date)
"^DD",8973,8973,2.13,"DT")
3031121
"^DD",8973,8973,2.14,0)
RUM DLY PURGE DELTA^F^^2;14^K:$L(X)>10!($L(X)<1) X
"^DD",8973,8973,2.14,3)
Answer must be 1-10 characters in length
"^DD",8973,8973,2.14,"DT")
3031121
"^DD",8973,8973,2.15,0)
RUM WKY PURGE START^D^^2;15^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,2.15,3)
(No range limit on date)
"^DD",8973,8973,2.15,"DT")
3031121
"^DD",8973,8973,2.16,0)
RUM WKY PURGE STOP^D^^2;16^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,2.16,3)
(No range limit on date)
"^DD",8973,8973,2.16,"DT")
3031121
"^DD",8973,8973,2.17,0)
RUM WKY PURGE DELTA^F^^2;17^K:$L(X)>10!($L(X)<1) X
"^DD",8973,8973,2.17,3)
Answer must be 1-10 characters in length
"^DD",8973,8973,2.17,"DT")
3031121
"^DD",8973,8973,3.05,0)
HL7 DLY BKG START^D^^3;5^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,3.05,3)
Most recent Start Time for the HL7 daily background job.  
"^DD",8973,8973,3.05,"DT")
3040401
"^DD",8973,8973,3.06,0)
HL7 DLY BKG STOP^D^^3;6^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,3.06,3)
Most recent Stop Time for the HL7 daily background job.  
"^DD",8973,8973,3.06,"DT")
3040401
"^DD",8973,8973,3.07,0)
HL7 DLY BKG DELTA^F^^3;7^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973,3.07,3)
Most recent Delta for the Timing daily background job.
"^DD",8973,8973,3.07,"DT")
3040401
"^DD",8973,8973,3.08,0)
HL7 WKY BKG START^D^^3;8^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,3.08,3)
Most recent Start Time for the HL7 weekly background job.
"^DD",8973,8973,3.08,"DT")
3040401
"^DD",8973,8973,3.09,0)
HL7 WKY BKG STOP^D^^3;9^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,3.09,3)
Most recent Stop Time for the HL7 weekly background job.
"^DD",8973,8973,3.09,"DT")
3040401
"^DD",8973,8973,3.1,0)
HL7 WKY BKG DELTA^F^^3;10^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973,3.1,3)
Most recent Delta for the HL7 weekly background job.
"^DD",8973,8973,3.1,"DT")
3040401
"^DD",8973,8973,3.11,0)
HL7 WEEKS TO KEEP DATA^NJ2,0^^3;11^K:+X'=X!(X>20)!(X<2)!(X?.E1"."1.N) X
"^DD",8973,8973,3.11,3)
This is the number of weeks that HL7 data will be retained in file #8973.1 before purging.  It is recommended that 2 weeks of data be retained.
"^DD",8973,8973,3.11,"DT")
3040401
"^DD",8973,8973,3.12,0)
HL7 DLY PURGE START^D^^3;12^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,3.12,3)
(No range limit on date)
"^DD",8973,8973,3.12,"DT")
3031121
"^DD",8973,8973,3.13,0)
HL7 DLY PURGE END^D^^3;13^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,3.13,3)
(No range limit on date)
"^DD",8973,8973,3.13,"DT")
3031121
"^DD",8973,8973,3.14,0)
HL7 DLY PURGE DELTA^F^^3;14^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973,3.14,3)
Answer must be 1-20 characters in length
"^DD",8973,8973,3.14,"DT")
3031121
"^DD",8973,8973,3.15,0)
HL7 WKY PURGE START^D^^3;15^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,3.15,3)
(No range limit on date)
"^DD",8973,8973,3.15,"DT")
3031121
"^DD",8973,8973,3.16,0)
HL7 WKY PURGE END^D^^3;16^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,3.16,3)
(No range limit on date)
"^DD",8973,8973,3.16,"DT")
3031121
"^DD",8973,8973,3.17,0)
HL7 WKY PURGE DELTA^F^^3;17^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973,3.17,3)
Answer must be 1-20 characters in length
"^DD",8973,8973,3.17,"DT")
3031121
"^DD",8973,8973,4.05,0)
TIMING DLY BKG START^D^^4;5^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,4.05,3)
Most recent Start Time for the Timing daily background job.
"^DD",8973,8973,4.05,"DT")
3040401
"^DD",8973,8973,4.06,0)
TIMING DLY BKG STOP^D^^4;6^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,4.06,3)
Most recent Stop Time for the Timing daily background job.
"^DD",8973,8973,4.06,"DT")
3040401
"^DD",8973,8973,4.07,0)
TIMING DLY BKG DELTA^F^^4;7^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973,4.07,3)
Most recent Delat for the Timing daily background job.
"^DD",8973,8973,4.07,"DT")
3040401
"^DD",8973,8973,4.08,0)
TIMING WKY BKG START^D^^4;8^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,4.08,3)
Most recent Start Time for the Timing weekly background job.
"^DD",8973,8973,4.08,"DT")
3040401
"^DD",8973,8973,4.09,0)
TIMING WKY BKG STOP^D^^4;9^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,4.09,3)
Most recent Stop Time for the Timing weekly background job.
"^DD",8973,8973,4.09,"DT")
3040401
"^DD",8973,8973,4.1,0)
TIMING WKY BKG DELTA^F^^4;10^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973,4.1,3)
Most recent Delta for the Timing weekly background job.
"^DD",8973,8973,4.1,"DT")
3040401
"^DD",8973,8973,4.11,0)
TIMING WEEKS TO KEEP DATA^NJ2,0^^4;11^K:+X'=X!(X>40)!(X<2)!(X?.E1"."1.N) X
"^DD",8973,8973,4.11,3)
This is the number of weeks that Timing data will be retained in file #8973.2 before purging.  It is recommended that 4 weeks of data be retained.             
"^DD",8973,8973,4.11,"DT")
3031211
"^DD",8973,8973,4.12,0)
TIMING DLY PURGE START^D^^4;12^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,4.12,3)
(No range limit on date)
"^DD",8973,8973,4.12,"DT")
3031121
"^DD",8973,8973,4.13,0)
TIMING DLY PURGE END^D^^4;13^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,4.13,3)
(No range limit on date)
"^DD",8973,8973,4.13,"DT")
3031121
"^DD",8973,8973,4.14,0)
TIMING DLY PURGE DELTA^F^^4;14^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973,4.14,3)
Answer must be 1-20 characters in length
"^DD",8973,8973,4.14,"DT")
3031121
"^DD",8973,8973,4.15,0)
TIMING WKY PURGE START^D^^4;15^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,4.15,3)
(No range limit on date)
"^DD",8973,8973,4.15,"DT")
3031121
"^DD",8973,8973,4.16,0)
TIMING WKY PURGE END^D^^4;16^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,4.16,3)
(No range limit on date)
"^DD",8973,8973,4.16,"DT")
3031121
"^DD",8973,8973,4.17,0)
TIMING WKY PURGE DELTA^F^^4;17^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973,4.17,3)
Answer must be 1-20 characters in length
"^DD",8973,8973,4.17,"DT")
3031121
"^DD",8973,8973,5.01,0)
SCHEDULED DOWN TIME START^D^^5;1^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,5.01,3)
Enter the Date/Time that Scheduled Down Time is to begin.  You cannot enter a 'Scheduled Down Time Stop' unless this field has an entry.
"^DD",8973,8973,5.01,"DT")
3060412
"^DD",8973,8973,5.02,0)
SCHEDULED DOWN TIME STOP^D^^5;2^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,5.02,3)
Enter the Date/Time that the Scheduled Down Time will end.
"^DD",8973,8973,5.02,"DT")
3060412
"^DD",8973,8973,5.03,0)
REASON FOR DOWN TIME^F^^5;3^K:$L(X)>65!($L(X)<1) X
"^DD",8973,8973,5.03,3)
Answer must be 1-65 characters in length
"^DD",8973,8973,5.03,"DT")
3060412
"^DD",8973,8973,19.01,0)
MONITOR UPDATE RATE - MINUTES^NJ2,0^^19;1^K:+X'=X!(X>60)!(X<5)!(X?.E1"."1.N) X
"^DD",8973,8973,19.01,3)
When the Timing Monitor is running, this is the number of minutes between automatic updates. (Type a number between 5 and 60)
"^DD",8973,8973,19.01,"DT")
3040213
"^DD",8973,8973,19.02,0)
MONITOR ALERT - SECONDS^NJ3,0^^19;2^K:+X'=X!(X>999)!(X<10)!(X?.E1"."1.N) X
"^DD",8973,8973,19.02,3)
When the Timing Monitor is running, if the average time-to-load a CPRS Coversheet exceeds this value, an alert will appear on the Timing Monitor screen. (Type a number between 10 and 999)
"^DD",8973,8973,19.02,"DT")
3040213
"^DD",8973,8973,20,0)
CPU^8973.201^^20;0
"^DD",8973,8973,20,21,0)
^^1^1^3040401^
"^DD",8973,8973,20,21,1,0)
Current CPU/Node data.
"^DD",8973,8973,21.1,0)
SAGG TRANSMIT TO^8973.01^^21.1;0
"^DD",8973,8973,21.1,21,0)
^^3^3^3040901^^^
"^DD",8973,8973,21.1,21,1,0)
This represents the location(s) where the SAGG data is transmitted after 
"^DD",8973,8973,21.1,21,2,0)
being compiled at the sites.  *** THESE ENTRIES SHOULD NOT BE CHANGED BY 
"^DD",8973,8973,21.1,21,3,0)
THE LOCAL FACILITY ***
"^DD",8973,8973,21.2,0)
RUM TRANSMIT TO^8973.02^^21.2;0
"^DD",8973,8973,21.2,21,0)
^^3^3^3040901^^
"^DD",8973,8973,21.2,21,1,0)
This represents the location(s) where the RUM data is transmitted after 
"^DD",8973,8973,21.2,21,2,0)
being compiled at the sites.  *** THESE ENTRIES SHOULD NOT BE CHANGED BY 
"^DD",8973,8973,21.2,21,3,0)
THE LOCAL FACILITY ***
"^DD",8973,8973,21.3,0)
HL7 TRANSMIT TO^8973.03^^21.3;0
"^DD",8973,8973,21.3,21,0)
^^3^3^3040901^^
"^DD",8973,8973,21.3,21,1,0)
This represents the location(s) where the HL7 data is transmitted after 
"^DD",8973,8973,21.3,21,2,0)
being compiled at the sites.  *** THESE ENTRIES SHOULD NOT BE CHANGED BY 
"^DD",8973,8973,21.3,21,3,0)
THE LOCAL FACILITY ***
"^DD",8973,8973,21.4,0)
TIMING TRANSMIT TO^8973.04^^21.4;0
"^DD",8973,8973,21.4,21,0)
^^3^3^3040901^^
"^DD",8973,8973,21.4,21,1,0)
This represents the location(s) where the TIMING data is transmitted after
"^DD",8973,8973,21.4,21,2,0)
being compiled at the sites.  *** THESE ENTRIES SHOULD NOT BE CHANGED BY 
"^DD",8973,8973,21.4,21,3,0)
THE LOCAL FACILITY ***
"^DD",8973,8973,21.5,0)
VISTA MONITOR TRANSMIT TO^8973.05^^21.5;0
"^DD",8973,8973.01,0)
SAGG TRANSMIT TO SUB-FIELD^^.01^1
"^DD",8973,8973.01,0,"DT")
3040720
"^DD",8973,8973.01,0,"IX","B",8973.01,.01)

"^DD",8973,8973.01,0,"NM","SAGG TRANSMIT TO")

"^DD",8973,8973.01,0,"UP")
8973
"^DD",8973,8973.01,.01,0)
SAGG TRANSMIT TO^F^^0;1^K:$L(X)>45!($L(X)<1) X
"^DD",8973,8973.01,.01,1,0)
^.1
"^DD",8973,8973.01,.01,1,1,0)
8973.01^B
"^DD",8973,8973.01,.01,1,1,1)
S ^KMPD(8973,DA(1),21.1,"B",$E(X,1,30),DA)=""
"^DD",8973,8973.01,.01,1,1,2)
K ^KMPD(8973,DA(1),21.1,"B",$E(X,1,30),DA)
"^DD",8973,8973.01,.01,3)
This represents the location(s) where the SAGG data is transmitted after being compiled at the sites.  *** THESE ENTRIES SHOULD NOT BE CHANGED BY THE LOCAL FACILITY ***
"^DD",8973,8973.01,.01,"DT")
3040901
"^DD",8973,8973.02,0)
RUM TRANSMIT TO SUB-FIELD^^.01^1
"^DD",8973,8973.02,0,"DT")
3040720
"^DD",8973,8973.02,0,"IX","B",8973.02,.01)

"^DD",8973,8973.02,0,"NM","RUM TRANSMIT TO")

"^DD",8973,8973.02,0,"UP")
8973
"^DD",8973,8973.02,.01,0)
RUM TRANSMIT TO^F^^0;1^K:$L(X)>45!($L(X)<1) X
"^DD",8973,8973.02,.01,1,0)
^.1
"^DD",8973,8973.02,.01,1,1,0)
8973.02^B
"^DD",8973,8973.02,.01,1,1,1)
S ^KMPD(8973,DA(1),21.2,"B",$E(X,1,30),DA)=""
"^DD",8973,8973.02,.01,1,1,2)
K ^KMPD(8973,DA(1),21.2,"B",$E(X,1,30),DA)
"^DD",8973,8973.02,.01,3)
This represents the location(s) where the RUM data is transmitted after being compiled at the sites.  *** THESE ENTRIES SHOULD NOT BE CHANGED BY THE LOCAL FACILITY ***
"^DD",8973,8973.02,.01,"DT")
3040901
"^DD",8973,8973.03,0)
HL7 TRANSMIT TO SUB-FIELD^^.01^1
"^DD",8973,8973.03,0,"DT")
3040720
"^DD",8973,8973.03,0,"IX","B",8973.03,.01)

"^DD",8973,8973.03,0,"NM","HL7 TRANSMIT TO")

"^DD",8973,8973.03,0,"UP")
8973
"^DD",8973,8973.03,.01,0)
HL7 TRANSMIT TO^F^^0;1^K:$L(X)>45!($L(X)<1) X
"^DD",8973,8973.03,.01,1,0)
^.1
"^DD",8973,8973.03,.01,1,1,0)
8973.03^B
"^DD",8973,8973.03,.01,1,1,1)
S ^KMPD(8973,DA(1),21.3,"B",$E(X,1,30),DA)=""
"^DD",8973,8973.03,.01,1,1,2)
K ^KMPD(8973,DA(1),21.3,"B",$E(X,1,30),DA)
"^DD",8973,8973.03,.01,3)
This represents the location(s) where the HL7 data is transmitted after being compiled at the sites.  *** THESE ENTRIES SHOULD NOT BE CHANGED BY THE LOCAL FACILITY ***
"^DD",8973,8973.03,.01,"DT")
3040901
"^DD",8973,8973.04,0)
TIMING TRANSMIT TO SUB-FIELD^^.01^1
"^DD",8973,8973.04,0,"DT")
3040720
"^DD",8973,8973.04,0,"IX","B",8973.04,.01)

"^DD",8973,8973.04,0,"NM","TIMING TRANSMIT TO")

"^DD",8973,8973.04,0,"UP")
8973
"^DD",8973,8973.04,.01,0)
TIMING TRANSMIT TO^F^^0;1^K:$L(X)>45!($L(X)<1) X
"^DD",8973,8973.04,.01,1,0)
^.1
"^DD",8973,8973.04,.01,1,1,0)
8973.04^B
"^DD",8973,8973.04,.01,1,1,1)
S ^KMPD(8973,DA(1),21.4,"B",$E(X,1,30),DA)=""
"^DD",8973,8973.04,.01,1,1,2)
K ^KMPD(8973,DA(1),21.4,"B",$E(X,1,30),DA)
"^DD",8973,8973.04,.01,3)
This represents the location(s) where the TIMING data is transmitted afterbeing compiled at the sites.  *** THESE ENTRIES SHOULD NOT BE CHANGED BY THE LOCAL FACILITY ***
"^DD",8973,8973.04,.01,"DT")
3040901
"^DD",8973,8973.05,0)
VISTA MONITOR TRANSMIT TO SUB-FIELD^^.01^1
"^DD",8973,8973.05,0,"DT")
3060412
"^DD",8973,8973.05,0,"IX","B",8973.05,.01)

"^DD",8973,8973.05,0,"NM","VISTA MONITOR TRANSMIT TO")

"^DD",8973,8973.05,0,"UP")
8973
"^DD",8973,8973.05,.01,0)
VISTA MONITOR TRANSMIT TO^F^^0;1^K:$L(X)>45!($L(X)<1) X
"^DD",8973,8973.05,.01,1,0)
^.1
"^DD",8973,8973.05,.01,1,1,0)
8973.05^B
"^DD",8973,8973.05,.01,1,1,1)
S ^KMPD(8973,DA(1),21.5,"B",$E(X,1,30),DA)=""
"^DD",8973,8973.05,.01,1,1,2)
K ^KMPD(8973,DA(1),21.5,"B",$E(X,1,30),DA)
"^DD",8973,8973.05,.01,3)
Answer must be 1-45 characters in length
"^DD",8973,8973.05,.01,"DT")
3060412
"^DD",8973,8973.201,0)
CPU SUB-FIELD^^.05^5
"^DD",8973,8973.201,0,"DT")
3031125
"^DD",8973,8973.201,0,"IX","B",8973.201,.01)

"^DD",8973,8973.201,0,"NM","CPU")

"^DD",8973,8973.201,0,"UP")
8973
"^DD",8973,8973.201,.01,0)
NODE^F^^0;1^K:$L(X)>30!($L(X)<1) X
"^DD",8973,8973.201,.01,1,0)
^.1
"^DD",8973,8973.201,.01,1,1,0)
8973.201^B
"^DD",8973,8973.201,.01,1,1,1)
S ^KMPD(8973,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",8973,8973.201,.01,1,1,2)
K ^KMPD(8973,DA(1),20,"B",$E(X,1,30),DA)
"^DD",8973,8973.201,.01,3)
Node name. Answer must be 1-30 characters in length
"^DD",8973,8973.201,.01,"DT")
3040401
"^DD",8973,8973.201,.02,0)
TYPE OF CPU^F^^0;2^K:$L(X)>60!($L(X)<1) X
"^DD",8973,8973.201,.02,3)
Type of CPU for this node. Answer must be 1-60 characters in length
"^DD",8973,8973.201,.02,"DT")
3040401
"^DD",8973,8973.201,.03,0)
NUMBER OF PROCESSORS^NJ3,0^^0;3^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1.N) X
"^DD",8973,8973.201,.03,3)
Number of processors for this node. Type a number between 0 and 999, 0 Decimal Digits
"^DD",8973,8973.201,.03,"DT")
3040401
"^DD",8973,8973.201,.04,0)
PROCESSOR SPEED^F^^0;4^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973.201,.04,3)
Processor speed for this node. Answer must be 1-20 characters in length
"^DD",8973,8973.201,.04,"DT")
3040401
"^DD",8973,8973.201,.05,0)
AMOUNT OF MEMORY^F^^0;5^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973.201,.05,3)
Amount of memory for this node. Answer must be 1-20 characters in length
"^DD",8973,8973.201,.05,"DT")
3040401
"^DD",8973.1,8973.1,0)
FIELD^^99.503^368
"^DD",8973.1,8973.1,0,"DDA")
N
"^DD",8973.1,8973.1,0,"DT")
3030410
"^DD",8973.1,8973.1,0,"ID","W")
D:$G(Y) ID^KMPDUT2(Y)
"^DD",8973.1,8973.1,0,"IX","ACSDTPRNM",8973.1,99.212)

"^DD",8973.1,8973.1,0,"IX","APTDTNM",8973.1,.05)

"^DD",8973.1,8973.1,0,"IX","ASYNC",8973.1,.06)

"^DD",8973.1,8973.1,0,"IX","B",8973.1,.01)

"^DD",8973.1,8973.1,0,"NM","CM HL7 DATA")

"^DD",8973.1,8973.1,0,"VRPK")
KMPD
"^DD",8973.1,8973.1,.01,0)
DATE^RD^^0;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",8973.1,8973.1,.01,1,0)
^.1
"^DD",8973.1,8973.1,.01,1,1,0)
8973.1^B
"^DD",8973.1,8973.1,.01,1,1,1)
S ^KMPD(8973.1,"B",$E(X,1,30),DA)=""
"^DD",8973.1,8973.1,.01,1,1,2)
K ^KMPD(8973.1,"B",$E(X,1,30),DA)
"^DD",8973.1,8973.1,.01,3)
(No range limit on date)
"^DD",8973.1,8973.1,.01,"DT")
3010820
"^DD",8973.1,8973.1,.02,0)
SENT TO NATIONAL DATABASE^S^0:NO;1:YES;^0;2^Q
"^DD",8973.1,8973.1,.02,3)

"^DD",8973.1,8973.1,.02,"DT")
3010720
"^DD",8973.1,8973.1,.03,0)
NAMESPACE^F^^0;3^K:$L(X)>4!($L(X)<1) X
"^DD",8973.1,8973.1,.03,3)
Answer must be 1-4 characters in length.
"^DD",8973.1,8973.1,.03,"DT")
3010820
"^DD",8973.1,8973.1,.05,0)
PROTOCOL^F^^0;5^K:$L(X)>63!($L(X)<3) X
"^DD",8973.1,8973.1,.05,1,0)
^.1
"^DD",8973.1,8973.1,.05,1,1,0)
8973.1^APTDTNM^MUMPS
"^DD",8973.1,8973.1,.05,1,1,1)
D XREF^KMPDUT2($G(DA),$G(X),1)
"^DD",8973.1,8973.1,.05,1,1,2)
D XREF^KMPDUT2($G(DA),$G(X),2)
"^DD",8973.1,8973.1,.05,1,1,"%D",0)
^^1^1^3010820^
"^DD",8973.1,8973.1,.05,1,1,"%D",1,0)
^KMPD(8973.1,"APTDTNM",Protocol,Date,Namespace)=""
"^DD",8973.1,8973.1,.05,1,1,"DT")
3010820
"^DD",8973.1,8973.1,.05,3)
Answer must be 3-63 characters in length
"^DD",8973.1,8973.1,.05,"DT")
3010820
"^DD",8973.1,8973.1,.06,0)
SYNC/ASYNC^S^1:SYNCHRONOUS;2:ASYNCHRONOUS;^0;6^Q
"^DD",8973.1,8973.1,.06,1,0)
^.1
"^DD",8973.1,8973.1,.06,1,1,0)
8973.1^ASYNC^MUMPS
"^DD",8973.1,8973.1,.06,1,1,1)
D XREF2^KMPDUT2($G(DA),$G(X),1)
"^DD",8973.1,8973.1,.06,1,1,2)
D XREF2^KMPDUT2($G(DA),$G(X),2)
"^DD",8973.1,8973.1,.06,1,1,"%D",0)
^^4^4^3020712^
"^DD",8973.1,8973.1,.06,1,1,"%D",1,0)
^KMPD(8973.1,"ASYNC",Date,Sync/Async,Ien)=""
"^DD",8973.1,8973.1,.06,1,1,"%D",2,0)
 
"^DD",8973.1,8973.1,.06,1,1,"%D",3,0)
        1 - synchronous
"^DD",8973.1,8973.1,.06,1,1,"%D",4,0)
        2 - asynchronous
"^DD",8973.1,8973.1,.06,1,1,"DT")
3020712
"^DD",8973.1,8973.1,.06,"DT")
3020712
"^DD",8973.1,8973.1,1.001,0)
TRANS TCP TOT CHR (PT)^F^^1;1^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.001,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.001,"DT")
3010720
"^DD",8973.1,8973.1,1.002,0)
TRANS TCP TOT MESSAGES (PT)^F^^1;2^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.002,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.002,"DT")
3010720
"^DD",8973.1,8973.1,1.003,0)
TRANS TCP TOT SECONDS (PT)^F^^1;3^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.003,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.003,"DT")
3010720
"^DD",8973.1,8973.1,1.004,0)
TRANS MAIL TOT CHR (PT)^F^^1;4^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.004,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.004,"DT")
3010720
"^DD",8973.1,8973.1,1.005,0)
TRANS MAIL TOT MESSAGES (PT)^F^^1;5^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.005,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.005,"DT")
3010720
"^DD",8973.1,8973.1,1.006,0)
TRANS MAIL TOT SECONDS (PT)^F^^1;6^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.006,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.006,"DT")
3010720
"^DD",8973.1,8973.1,1.007,0)
TRANS UNK TOT CHR (PT)^F^^1;7^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.007,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.007,"DT")
3010720
"^DD",8973.1,8973.1,1.008,0)
TRANS UNK TOT MESSAGES (PT)^F^^1;8^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.008,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.008,"DT")
3010720
"^DD",8973.1,8973.1,1.009,0)
TRANS UNK TOT SECONDS (PT)^F^^1;9^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.009,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.009,"DT")
3010720
"^DD",8973.1,8973.1,1.101,0)
I/O INCOMING TOT CHR (PT)^F^^1.1;1^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.101,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.101,"DT")
3010720
"^DD",8973.1,8973.1,1.102,0)
I/O INCOMING TOT MESSAGES (PT)^F^^1.1;2^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.102,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.102,"DT")
3010720
"^DD",8973.1,8973.1,1.103,0)
I/O INCOMING TOT SECONDS (PT)^F^^1.1;3^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.103,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.103,"DT")
3010720
"^DD",8973.1,8973.1,1.104,0)
I/O OUTGOING TOT CHR (PT)^F^^1.1;4^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.104,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.104,"DT")
3010720
"^DD",8973.1,8973.1,1.105,0)
I/O OUTGOING TOT MESSAGES (PT)^F^^1.1;5^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.105,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.105,"DT")
3010720
"^DD",8973.1,8973.1,1.106,0)
I/O OUTGOING TOT SECONDS (PT)^F^^1.1;6^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.106,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.106,"DT")
3010720
"^DD",8973.1,8973.1,1.107,0)
I/O UNK TOT CHR (PT)^F^^1.1;7^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.107,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.107,"DT")
3010720
"^DD",8973.1,8973.1,1.108,0)
I/O UNK TOT MESSAGES (PT)^F^^1.1;8^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.108,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.108,"DT")
3010720
"^DD",8973.1,8973.1,1.109,0)
I/O UNK TOT SECONDS (PT)^F^^1.1;9^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.109,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.109,"DT")
3010720
"^DD",8973.1,8973.1,1.201,0)
L/R LOCAL TOT CHR (PT)^F^^1.2;1^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.201,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.201,"DT")
3010720
"^DD",8973.1,8973.1,1.202,0)
L/R LOCAL TOT MESSAGES (PT)^F^^1.2;2^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.202,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.202,"DT")
3010720
"^DD",8973.1,8973.1,1.203,0)
L/R LOCAL TOT SECONDS (PT)^F^^1.2;3^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.203,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.203,"DT")
3010720
"^DD",8973.1,8973.1,1.204,0)
L/R REMOTE TOT CHR (PT)^F^^1.2;4^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.204,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.204,"DT")
3010720
"^DD",8973.1,8973.1,1.205,0)
L/R REMOTE TOT MESSAGES (PT)^F^^1.2;5^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.205,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.205,"DT")
3010720
"^DD",8973.1,8973.1,1.206,0)
L/R REMOTE TOT SECONDS (PT)^F^^1.2;6^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.206,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.206,"DT")
3010720
"^DD",8973.1,8973.1,1.207,0)
L/R UNK TOT CHR (PT)^F^^1.2;7^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.207,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.207,"DT")
3010720
"^DD",8973.1,8973.1,1.208,0)
L/R UNK TOT MESSAGES (PT)^F^^1.2;8^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.208,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.208,"DT")
3010720
"^DD",8973.1,8973.1,1.209,0)
L/R UNK TOT SECONDS (PT)^F^^1.2;9^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,1.209,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,1.209,"DT")
3010720
"^DD",8973.1,8973.1,2.001,0)
TRANS TCP TOT CHR (NP)^F^^2;1^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.001,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.001,"DT")
3010720
"^DD",8973.1,8973.1,2.002,0)
TRANS TCP TOT MESSAGES (NP)^F^^2;2^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.002,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.002,"DT")
3010720
"^DD",8973.1,8973.1,2.003,0)
TRANS TCP TOT SECONDS (NP)^F^^2;3^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.003,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.003,"DT")
3010720
"^DD",8973.1,8973.1,2.004,0)
TRANS MAIL TOT CHR (NP)^F^^2;4^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.004,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.004,"DT")
3010720
"^DD",8973.1,8973.1,2.005,0)
TRANS MAIL TOT MESSAGES (NP)^F^^2;5^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.005,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.005,"DT")
3010720
"^DD",8973.1,8973.1,2.006,0)
TRANS MAIL TOT SECONDS (NP)^F^^2;6^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.006,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.006,"DT")
3010720
"^DD",8973.1,8973.1,2.007,0)
TRANS UNK TOT CHR (NP)^F^^2;7^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.007,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.007,"DT")
3010720
"^DD",8973.1,8973.1,2.008,0)
TRANS UNK TOT MESSAGES (NP)^F^^2;8^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.008,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.008,"DT")
3010720
"^DD",8973.1,8973.1,2.009,0)
TRANS UNK TOT SECONDS (NP)^F^^2;9^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.009,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.009,"DT")
3010720
"^DD",8973.1,8973.1,2.101,0)
I/O INCOMING TOT CHR (PT)^F^^2.1;1^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.101,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.101,"DT")
3010720
"^DD",8973.1,8973.1,2.102,0)
I/O INCOMING TOT MESSAGES (NP)^F^^2.1;2^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.102,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.102,"DT")
3010720
"^DD",8973.1,8973.1,2.103,0)
I/O INCOMING TOT SECONDS (NP)^F^^2.1;3^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.103,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.103,"DT")
3010720
"^DD",8973.1,8973.1,2.104,0)
I/O OUTGOING TOT CHR (NP)^F^^2.1;4^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.104,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.104,"DT")
3010720
"^DD",8973.1,8973.1,2.105,0)
I/O OUTGOING TOT MESSAGES (NP)^F^^2.1;5^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.105,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.105,"DT")
3010720
"^DD",8973.1,8973.1,2.106,0)
I/O OUTGOING TOT SECONDS (NP)^F^^2.1;6^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.106,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.106,"DT")
3010720
"^DD",8973.1,8973.1,2.107,0)
I/O UNK TOT CHR (NP)^F^^2.1;7^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.107,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.107,"DT")
3010720
"^DD",8973.1,8973.1,2.108,0)
I/O UNK TOT MESSAGES (NP)^F^^2.1;8^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.108,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.108,"DT")
3010720
"^DD",8973.1,8973.1,2.109,0)
I/O UNK TOT SECONDS (NP)^F^^2.1;9^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.109,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.109,"DT")
3010720
"^DD",8973.1,8973.1,2.201,0)
L/R LOCAL TOT CHR (NP)^F^^2.2;1^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.201,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.201,"DT")
3010720
"^DD",8973.1,8973.1,2.202,0)
L/R LOCAL TOT MESSAGES (NP)^F^^2.2;2^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.202,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.202,"DT")
3010720
"^DD",8973.1,8973.1,2.203,0)
L/R LOCAL TOT SECONDS (NP)^F^^2.2;3^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.203,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.203,"DT")
3010720
"^DD",8973.1,8973.1,2.204,0)
L/R REMOTE TOT CHR (PT)^F^^2.2;4^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.204,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.204,"DT")
3010720
"^DD",8973.1,8973.1,2.205,0)
L/R REMOTE TOT MESSAGES (NP)^F^^2.2;5^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.205,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.205,"DT")
3010720
"^DD",8973.1,8973.1,2.206,0)
L/R REMOTE TOT SECONDS (NP)^F^^2.2;6^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.206,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.206,"DT")
3010720
"^DD",8973.1,8973.1,2.207,0)
L/R UNK TOT CHR (NP)^F^^2.2;7^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.207,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.207,"DT")
3010720
"^DD",8973.1,8973.1,2.208,0)
L/R UNK TOT MESSAGES (NP)^F^^2.2;8^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.208,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.208,"DT")
3010720
"^DD",8973.1,8973.1,2.209,0)
L/R UNK TOT SECONDS (NP)^F^^2.2;9^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,2.209,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,2.209,"DT")
3010720
"^DD",8973.1,8973.1,5.109,0)
HOUR 8 MSG TO CA CHR (PT)^F^^5.1;9^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.109,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.109,"DT")
3021205
"^DD",8973.1,8973.1,5.11,0)
HOUR 9 MSG TO CA CHR (PT)^F^^5.1;10^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.11,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.11,"DT")
3021205
"^DD",8973.1,8973.1,5.111,0)
HOUR 10 MSG TO CA CHR (PT)^F^^5.1;11^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.111,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.111,"DT")
3021205
"^DD",8973.1,8973.1,5.112,0)
HOUR 11 MSG TO CA CHR (PT)^F^^5.1;12^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.112,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.112,"DT")
3021205
"^DD",8973.1,8973.1,5.113,0)
HOUR 12 MSG TO CA CHR (PT)^F^^5.1;13^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.113,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.113,"DT")
3021205
"^DD",8973.1,8973.1,5.114,0)
HOUR 13 MSG TO CA CHR (PT)^F^^5.1;14^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.114,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.114,"DT")
3021205
"^DD",8973.1,8973.1,5.115,0)
HOUR 14 MSG TO CA CHR (PT)^F^^5.1;15^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.115,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.115,"DT")
3021205
"^DD",8973.1,8973.1,5.116,0)
HOUR 15 MSG TO CA CHR (PT)^F^^5.1;16^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.116,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.116,"DT")
3021205
"^DD",8973.1,8973.1,5.117,0)
HOUR 16 MSG TO CA CHR (PT)^F^^5.1;17^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.117,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.117,"DT")
3021205
"^DD",8973.1,8973.1,5.209,0)
HOUR 8 MSG TO CA MSGS (PT)^F^^5.2;9^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.209,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.209,"DT")
3021204
"^DD",8973.1,8973.1,5.21,0)
HOUR 9 MSG TO CA MSGS (PT)^F^^5.2;10^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.21,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.21,"DT")
3021204
"^DD",8973.1,8973.1,5.211,0)
HOUR 10 MSG TO CA MSGS (PT)^F^^5.2;11^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.211,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.211,"DT")
3021204
"^DD",8973.1,8973.1,5.212,0)
HOUR 11 MSG TO CA MSGS (PT)^F^^5.2;12^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.212,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.212,"DT")
3021204
"^DD",8973.1,8973.1,5.213,0)
HOUR 12 MSG TO CA MSGS (PT)^F^^5.2;13^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.213,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.213,"DT")
3021204
"^DD",8973.1,8973.1,5.214,0)
HOUR 13 MSG TO CA MSGS (PT)^F^^5.2;14^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.214,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.214,"DT")
3021204
"^DD",8973.1,8973.1,5.215,0)
HOUR 14 MSG TO CA MSGS (PT)^F^^5.2;15^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.215,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.215,"DT")
3021204
"^DD",8973.1,8973.1,5.216,0)
HOUR 15 MSG TO CA MSGS (PT)^F^^5.2;16^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.216,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.216,"DT")
3021204
"^DD",8973.1,8973.1,5.217,0)
HOUR 16 MSG TO CA MSGS (PT)^F^^5.2;17^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.217,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.217,"DT")
3021204
"^DD",8973.1,8973.1,5.309,0)
HOUR 8 MSG TO CA SEC (PT)^F^^5.3;9^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.309,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.309,"DT")
3021205
"^DD",8973.1,8973.1,5.31,0)
HOUR 9 MSG TO CA SEC (PT)^F^^5.3;10^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.31,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.31,"DT")
3021205
"^DD",8973.1,8973.1,5.311,0)
HOUR 10 MSG TO CA SEC (PT)^F^^5.3;11^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.311,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.311,"DT")
3021205
"^DD",8973.1,8973.1,5.312,0)
HOUR 11 MSG TO CA SEC (PT)^F^^5.3;12^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.312,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.312,"DT")
3021205
"^DD",8973.1,8973.1,5.313,0)
HOUR 12 MSG TO CA SEC (PT)^F^^5.3;13^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.313,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.313,"DT")
3021205
"^DD",8973.1,8973.1,5.314,0)
HOUR 13 MSG TO CA SEC (PT)^F^^5.3;14^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.314,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.314,"DT")
3021205
"^DD",8973.1,8973.1,5.315,0)
HOUR 14 MSG TO CA SEC (PT)^F^^5.3;15^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.315,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.315,"DT")
3021205
"^DD",8973.1,8973.1,5.316,0)
HOUR 15 MSG TO CA SEC (PT)^F^^5.3;16^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.316,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.316,"DT")
3021205
"^DD",8973.1,8973.1,5.317,0)
HOUR 16 MSG TO CA SEC (PT)^F^^5.3;17^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.317,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.317,"DT")
3021205
"^DD",8973.1,8973.1,5.409,0)
HOUR 8 PROC TM (CA-AA) (PT)^F^^5.4;9^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.409,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.409,"DT")
3021206
"^DD",8973.1,8973.1,5.41,0)
HOUR 9 PROC TM (CA-AA) (PT)^F^^5.4;10^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.41,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.41,"DT")
3021206
"^DD",8973.1,8973.1,5.411,0)
HOUR 10 PROC TM (CA-AA) (PT)^F^^5.4;11^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.411,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.411,"DT")
3021206
"^DD",8973.1,8973.1,5.412,0)
HOUR 11 PROC TM (CA-AA) (PT)^F^^5.4;12^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.412,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.412,"DT")
3021206
"^DD",8973.1,8973.1,5.413,0)
HOUR 12 PROC TM (CA-AA) (PT)^F^^5.4;13^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.413,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.413,"DT")
3021206
"^DD",8973.1,8973.1,5.414,0)
HOUR 13 PROC TM (CA-AA) (PT)^F^^5.4;14^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.414,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.414,"DT")
3021206
"^DD",8973.1,8973.1,5.415,0)
HOUR 14 PROC TM (CA-AA) (PT)^F^^5.4;15^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.415,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.415,"DT")
3021206
"^DD",8973.1,8973.1,5.416,0)
HOUR 15 PROC TM (CA-AA) (PT)^F^^5.4;16^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.416,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.416,"DT")
3021206
"^DD",8973.1,8973.1,5.417,0)
HOUR 16 PROC TM (CA-AA) (PT)^F^^5.4;17^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.417,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.417,"DT")
3021206
"^DD",8973.1,8973.1,5.509,0)
HOUR 8 PROC CNT (CA-AA) (PT)^F^^5.5;9^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.509,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.509,"DT")
3021210
"^DD",8973.1,8973.1,5.51,0)
HOUR 9 PROC CNT (CA-AA) (PT)^F^^5.5;10^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.51,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.51,"DT")
3021210
"^DD",8973.1,8973.1,5.511,0)
HOUR 10 PROC CNT (CA-AA) (PT)^F^^5.5;11^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.511,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.511,"DT")
3021210
"^DD",8973.1,8973.1,5.512,0)
HOUR 11 PROC CNT (CA-AA) (PT)^F^^5.5;12^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.512,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.512,"DT")
3021210
"^DD",8973.1,8973.1,5.513,0)
HOUR 12 PROC CNT (CA-AA) (PT)^F^^5.5;13^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.513,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.513,"DT")
3021210
"^DD",8973.1,8973.1,5.514,0)
HOUR 13 PROC CNT (CA-AA) (PT)^F^^5.5;14^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.514,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.514,"DT")
3021210
"^DD",8973.1,8973.1,5.515,0)
HOUR 14 PROC CNT (CA-AA) (PT)^F^^5.5;15^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.515,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.515,"DT")
3021210
"^DD",8973.1,8973.1,5.516,0)
HOUR 15 PROC CNT (CA-AA) (PT)^F^^5.5;16^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.516,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.516,"DT")
3021210
"^DD",8973.1,8973.1,5.517,0)
HOUR 16 PROC CNT (CA-AA) (PT)^F^^5.5;17^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.517,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.517,"DT")
3021210
"^DD",8973.1,8973.1,5.709,0)
HOUR 8 AA TO CA CHR (PT)^F^^5.7;9^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.709,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.709,"DT")
3021206
"^DD",8973.1,8973.1,5.71,0)
HOUR 9 AA TO CA CHR (PT)^F^^5.7;10^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.71,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.71,"DT")
3021206
"^DD",8973.1,8973.1,5.711,0)
HOUR 10 AA TO CA CHR (PT)^F^^5.7;11^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.711,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.711,"DT")
3021206
"^DD",8973.1,8973.1,5.712,0)
HOUR 11 AA TO CA CHR (PT)^F^^5.7;12^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.712,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.712,"DT")
3021206
"^DD",8973.1,8973.1,5.713,0)
HOUR 12 AA TO CA CHR (PT)^F^^5.7;13^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.713,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.713,"DT")
3021206
"^DD",8973.1,8973.1,5.714,0)
HOUR 13 AA TO CA CHR (PT)^F^^5.7;14^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.714,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.714,"DT")
3021206
"^DD",8973.1,8973.1,5.715,0)
HOUR 14 AA TO CA CHR (PT)^F^^5.7;15^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.715,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.715,"DT")
3021206
"^DD",8973.1,8973.1,5.716,0)
HOUR 15 AA TO CA CHR (PT)^F^^5.7;16^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.716,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.716,"DT")
3021206
"^DD",8973.1,8973.1,5.717,0)
HOUR 16 AA TO CA CHR (PT)^F^^5.7;17^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.717,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.717,"DT")
3021206
"^DD",8973.1,8973.1,5.809,0)
HOUR 8 AA TO CA MSGS (PT)^F^^5.8;9^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.809,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.809,"DT")
3021204
"^DD",8973.1,8973.1,5.81,0)
HOUR 9 AA TO CA MSGS (PT)^F^^5.8;10^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.81,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.81,"DT")
3021204
"^DD",8973.1,8973.1,5.811,0)
HOUR 10 AA TO CA MSGS (PT)^F^^5.8;11^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.811,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.811,"DT")
3021204
"^DD",8973.1,8973.1,5.812,0)
HOUR 11 AA TO CA MSGS (PT)^F^^5.8;12^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.812,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.812,"DT")
3021204
"^DD",8973.1,8973.1,5.813,0)
HOUR 12 AA TO CA MSGS (PT)^F^^5.8;13^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.813,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.813,"DT")
3021204
"^DD",8973.1,8973.1,5.814,0)
HOUR 13 AA TO CA MSGS (PT)^F^^5.8;14^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.814,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.814,"DT")
3021204
"^DD",8973.1,8973.1,5.815,0)
HOUR 14 AA TO CA MSGS (PT)^F^^5.8;15^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.815,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.815,"DT")
3021204
"^DD",8973.1,8973.1,5.816,0)
HOUR 15 AA TO CA MSGS (PT)^F^^5.8;16^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.816,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.816,"DT")
3021204
"^DD",8973.1,8973.1,5.817,0)
HOUR 16 AA TO CA MSGS (PT)^F^^5.8;17^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.817,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.817,"DT")
3021204
"^DD",8973.1,8973.1,5.909,0)
HOUR 8 AA TO CA SEC (PT)^F^^5.9;9^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.909,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.909,"DT")
3021210
"^DD",8973.1,8973.1,5.91,0)
HOUR 9 AA TO CA SEC (PT)^F^^5.9;10^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.91,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.91,"DT")
3021210
"^DD",8973.1,8973.1,5.911,0)
HOUR 10 AA TO CA SEC (PT)^F^^5.9;11^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.911,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.911,"DT")
3021210
"^DD",8973.1,8973.1,5.912,0)
HOUR 11 AA TO CA SEC (PT)^F^^5.9;12^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.912,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.912,"DT")
3021210
"^DD",8973.1,8973.1,5.913,0)
HOUR 12 AA TO CA SEC (PT)^F^^5.9;13^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.913,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.913,"DT")
3021210
"^DD",8973.1,8973.1,5.914,0)
HOUR 13 AA TO CA SEC (PT)^F^^5.9;14^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.914,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.914,"DT")
3021210
"^DD",8973.1,8973.1,5.915,0)
HOUR 14 AA TO CA SEC (PT)^F^^5.9;15^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.915,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.915,"DT")
3021210
"^DD",8973.1,8973.1,5.916,0)
HOUR 15 AA TO CA SEC (PT)^F^^5.9;16^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.916,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.916,"DT")
3021210
"^DD",8973.1,8973.1,5.917,0)
HOUR 16 AA TO CA SEC (PT)^F^^5.9;17^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,5.917,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,5.917,"DT")
3021210
"^DD",8973.1,8973.1,6.101,0)
HOUR 0 MSG TO CA CHR (NP)^F^^6.1;1^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.101,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.101,"DT")
3021120
"^DD",8973.1,8973.1,6.102,0)
HOUR 1 MSG TO CA CHR (NP)^F^^6.1;2^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.102,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.102,"DT")
3021120
"^DD",8973.1,8973.1,6.103,0)
HOUR 2 MSG TO CA CHR (NP)^F^^6.1;3^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.103,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.103,"DT")
3021120
"^DD",8973.1,8973.1,6.104,0)
HOUR 3 MSG TO CA CHR (NP)^F^^6.1;4^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.104,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.104,"DT")
3021120
"^DD",8973.1,8973.1,6.105,0)
HOUR 4 MSG TO CA CHR (NP)^F^^6.1;5^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.105,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.105,"DT")
3021120
"^DD",8973.1,8973.1,6.106,0)
HOUR 5 MSG TO CA CHR (NP)^F^^6.1;6^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.106,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.106,"DT")
3021120
"^DD",8973.1,8973.1,6.107,0)
HOUR 6 MSG TO CA CHR (NP)^F^^6.1;7^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.107,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.107,"DT")
3021120
"^DD",8973.1,8973.1,6.108,0)
HOUR 7 MSG TO CA CHR (NP)^F^^6.1;8^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.108,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.108,"DT")
3021203
"^DD",8973.1,8973.1,6.109,0)
HOUR 8 MSG TO CA CHR (NP)^F^^6.1;9^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.109,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.109,"DT")
3021120
"^DD",8973.1,8973.1,6.11,0)
HOUR 9 MSG TO CA CHR (NP)^F^^6.1;10^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.11,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.11,"DT")
3021120
"^DD",8973.1,8973.1,6.111,0)
HOUR 10 MSG TO CA CHR (NP)^F^^6.1;11^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.111,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.111,"DT")
3021120
"^DD",8973.1,8973.1,6.112,0)
HOUR 11 MSG TO CA CHR (NP)^F^^6.1;12^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.112,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.112,"DT")
3021120
"^DD",8973.1,8973.1,6.113,0)
HOUR 12 MSG TO CA CHR (NP)^F^^6.1;13^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.113,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.113,"DT")
3021120
"^DD",8973.1,8973.1,6.114,0)
HOUR 13 MSG TO CA CHR (NP)^F^^6.1;14^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.114,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.114,"DT")
3021120
"^DD",8973.1,8973.1,6.115,0)
HOUR 14 MSG TO CA CHR (NP)^F^^6.1;15^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.115,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.115,"DT")
3021120
"^DD",8973.1,8973.1,6.116,0)
HOUR 15 MSG TO CA CHR (NP)^F^^6.1;16^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.116,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.116,"DT")
3021210
"^DD",8973.1,8973.1,6.117,0)
HOUR 16 MSG TO CA CHR (NP)^F^^6.1;17^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.117,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.117,"DT")
3021120
"^DD",8973.1,8973.1,6.118,0)
HOUR 17 MSG TO CA CHR (NP)^F^^6.1;18^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.118,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.118,"DT")
3021120
"^DD",8973.1,8973.1,6.119,0)
HOUR 18 MSG TO CA CHR (NP)^F^^6.1;19^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.119,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.119,"DT")
3021120
"^DD",8973.1,8973.1,6.12,0)
HOUR 19 MSG TO CA CHR (NP)^F^^6.1;20^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.12,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.12,"DT")
3021120
"^DD",8973.1,8973.1,6.121,0)
HOUR 20 MSG TO CA CHR (NP)^F^^6.1;21^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.121,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.121,"DT")
3021120
"^DD",8973.1,8973.1,6.122,0)
HOUR 21 MSG TO CA CHR (NP)^F^^6.1;22^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.122,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.122,"DT")
3021120
"^DD",8973.1,8973.1,6.123,0)
HOUR 22 MSG TO CA CHR (NP)^F^^6.1;23^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.123,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.123,"DT")
3021120
"^DD",8973.1,8973.1,6.124,0)
HOUR 23 MSG TO CA CHR (NP)^F^^6.1;24^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.124,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.124,"DT")
3021120
"^DD",8973.1,8973.1,6.201,0)
HOUR 0 MSG TO CA MSGS (NP)^F^^6.2;1^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.201,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.201,"DT")
3021203
"^DD",8973.1,8973.1,6.202,0)
HOUR 1 MSG TO CA MSGS (NP)^F^^6.2;2^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.202,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.202,"DT")
3021203
"^DD",8973.1,8973.1,6.203,0)
HOUR 2 MSG TO CA MSGS (NP)^F^^6.2;3^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.203,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.203,"DT")
3021203
"^DD",8973.1,8973.1,6.204,0)
HOUR 3 MSG TO CA MSGS (NP)^F^^6.2;4^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.204,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.204,"DT")
3021203
"^DD",8973.1,8973.1,6.205,0)
HOUR 4 MSG TO CA MSGS (NP)^F^^6.2;5^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.205,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.205,"DT")
3021203
"^DD",8973.1,8973.1,6.206,0)
HOUR 5 MSG TO CA MSGS (NP)^F^^6.2;6^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.206,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.206,"DT")
3021203
"^DD",8973.1,8973.1,6.207,0)
HOUR 6 MSG TO CA MSGS (NP)^F^^6.2;7^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.207,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.207,"DT")
3021203
"^DD",8973.1,8973.1,6.208,0)
HOUR 7 MSG TO CA MSGS (NP)^F^^6.2;8^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.208,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.208,"DT")
3021203
"^DD",8973.1,8973.1,6.209,0)
HOUR 8 MSG TO CA MSGS (NP)^F^^6.2;9^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.209,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.209,"DT")
3021203
"^DD",8973.1,8973.1,6.21,0)
HOUR 9 MSG TO CA MSGS (NP)^F^^6.2;10^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.21,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.21,"DT")
3021203
"^DD",8973.1,8973.1,6.211,0)
HOUR 10 MSG TO CA MSGS (NP)^F^^6.2;11^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.211,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.211,"DT")
3021203
"^DD",8973.1,8973.1,6.212,0)
HOUR 11 MSG TO CA MSGS (NP)^F^^6.2;12^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.212,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.212,"DT")
3021203
"^DD",8973.1,8973.1,6.213,0)
HOUR 12 MSG TO CA MSGS (NP)^F^^6.2;13^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.213,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.213,"DT")
3021203
"^DD",8973.1,8973.1,6.214,0)
HOUR 13 MSG TO CA MSGS (NP)^F^^6.2;14^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.214,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.214,"DT")
3021203
"^DD",8973.1,8973.1,6.215,0)
HOUR 14 MSG TO CA MSGS (NP)^F^^6.2;15^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.215,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.215,"DT")
3021203
"^DD",8973.1,8973.1,6.216,0)
HOUR 15 MSG TO CA MSGS (NP)^F^^6.2;16^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.216,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.216,"DT")
3021203
"^DD",8973.1,8973.1,6.217,0)
HOUR 16 MSG TO CA MSGS (NP)^F^^6.2;17^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.217,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.217,"DT")
3021203
"^DD",8973.1,8973.1,6.218,0)
HOUR 17 MSG TO CA MSGS (NP)^F^^6.2;18^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.218,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.218,"DT")
3021203
"^DD",8973.1,8973.1,6.219,0)
HOUR 18 MSG TO CA MSGS (NP)^F^^6.2;19^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.219,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.219,"DT")
3021203
"^DD",8973.1,8973.1,6.22,0)
HOUR 19 MSG TO CA MSGS (NP)^F^^6.2;20^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.22,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.22,"DT")
3021203
"^DD",8973.1,8973.1,6.221,0)
HOUR 20 MSG TO CA MSGS (NP)^F^^6.2;21^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.221,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.221,"DT")
3021203
"^DD",8973.1,8973.1,6.222,0)
HOUR 21 MSG TO CA MSGS (NP)^F^^6.2;22^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.222,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.222,"DT")
3021203
"^DD",8973.1,8973.1,6.223,0)
HOUR 22 MSG TO CA MSGS (NP)^F^^6.2;23^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.223,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.223,"DT")
3021203
"^DD",8973.1,8973.1,6.224,0)
HOUR 23 MSG TO CA MSGS (NP)^F^^6.2;24^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.224,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.224,"DT")
3021203
"^DD",8973.1,8973.1,6.301,0)
HOUR 0 MSG TO CA SEC (NP)^F^^6.3;1^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.301,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.301,"DT")
3021120
"^DD",8973.1,8973.1,6.302,0)
HOUR 1 MSG TO CA SEC (NP)^F^^6.3;2^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.302,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.302,"DT")
3021120
"^DD",8973.1,8973.1,6.303,0)
HOUR 2 MSG TO CA SEC (NP)^F^^6.3;3^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.303,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.303,"DT")
3021120
"^DD",8973.1,8973.1,6.304,0)
HOUR 3 MSG TO CA SEC (NP)^F^^6.3;4^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.304,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.304,"DT")
3021120
"^DD",8973.1,8973.1,6.305,0)
HOUR 4 MSG TO CA SEC (NP)^F^^6.3;5^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.305,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.305,"DT")
3021120
"^DD",8973.1,8973.1,6.306,0)
HOUR 5 MSG TO CA SEC (NP)^F^^6.3;6^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.306,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.306,"DT")
3021120
"^DD",8973.1,8973.1,6.307,0)
HOUR 6 MSG TO CA SEC (NP)^F^^6.3;7^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.307,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.307,"DT")
3021120
"^DD",8973.1,8973.1,6.308,0)
HOUR 7 MSG TO CA SEC (NP)^F^^6.3;8^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.308,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.308,"DT")
3021120
"^DD",8973.1,8973.1,6.309,0)
HOUR 8 MSG TO CA SEC (NP)^F^^6.3;9^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.309,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.309,"DT")
3021120
"^DD",8973.1,8973.1,6.31,0)
HOUR 9 MSG TO CA SEC (NP)^F^^6.3;10^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.31,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.31,"DT")
3021120
"^DD",8973.1,8973.1,6.311,0)
HOUR 10 MSG TO CA SEC (NP)^F^^6.3;11^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.311,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.311,"DT")
3021120
"^DD",8973.1,8973.1,6.312,0)
HOUR 11 MSG TO CA SEC (NP)^F^^6.3;12^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.312,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.312,"DT")
3021120
"^DD",8973.1,8973.1,6.313,0)
HOUR 12 MSG TO CA SEC (NP)^F^^6.3;13^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.313,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.313,"DT")
3021120
"^DD",8973.1,8973.1,6.314,0)
HOUR 13 MSG TO CA SEC (NP)^F^^6.3;14^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.314,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.314,"DT")
3021121
"^DD",8973.1,8973.1,6.315,0)
HOUR 14 MSG TO CA SEC (NP)^F^^6.3;15^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.315,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.315,"DT")
3021121
"^DD",8973.1,8973.1,6.316,0)
HOUR 15 MSG TO CA SEC (NP)^F^^6.3;16^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.316,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.316,"DT")
3021121
"^DD",8973.1,8973.1,6.317,0)
HOUR 16 MSG TO CA SEC (NP)^F^^6.3;17^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.317,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.317,"DT")
3021121
"^DD",8973.1,8973.1,6.318,0)
HOUR 17 MSG TO CA SEC (NP)^F^^6.3;18^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.318,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.318,"DT")
3021121
"^DD",8973.1,8973.1,6.319,0)
HOUR 18 MSG TO CA SEC (NP)^F^^6.3;19^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.319,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.319,"DT")
3021121
"^DD",8973.1,8973.1,6.32,0)
HOUR 19 MSG TO CA SEC (NP)^F^^6.3;20^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.32,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.32,"DT")
3021121
"^DD",8973.1,8973.1,6.321,0)
HOUR 20 MSG TO CA SEC (NP)^F^^6.3;21^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.321,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.321,"DT")
3021121
"^DD",8973.1,8973.1,6.322,0)
HOUR 21 MSG TO CA SEC (NP)^F^^6.3;22^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.322,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.322,"DT")
3021121
"^DD",8973.1,8973.1,6.323,0)
HOUR 22 MSG TO CA SEC (NP)^F^^6.3;23^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.323,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.323,"DT")
3021121
"^DD",8973.1,8973.1,6.324,0)
HOUR 23 MSG TO CA SEC (NP)^F^^6.3;24^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.324,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.324,"DT")
3021121
"^DD",8973.1,8973.1,6.401,0)
HOUR 0 PROC TM (CA-AA) (NP)^F^^6.4;1^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.401,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.401,"DT")
3021121
"^DD",8973.1,8973.1,6.402,0)
HOUR 1 PROC TM (CA-AA) (NP)^F^^6.4;2^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.402,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.402,"DT")
3021121
"^DD",8973.1,8973.1,6.403,0)
HOUR 2 PROC TM (CA-AA) (NP)^F^^6.4;3^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.403,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.403,"DT")
3021121
"^DD",8973.1,8973.1,6.404,0)
HOUR 3 PROC TM (CA-AA) (NP)^F^^6.4;4^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.404,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.404,"DT")
3021121
"^DD",8973.1,8973.1,6.405,0)
HOUR 4 PROC TM (CA-AA) (NP)^F^^6.4;5^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.405,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.405,"DT")
3021121
"^DD",8973.1,8973.1,6.406,0)
HOUR 5 PROC TM (CA-AA) (NP)^F^^6.4;6^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.406,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.406,"DT")
3021121
"^DD",8973.1,8973.1,6.407,0)
HOUR 6 PROC TM (CA-AA) (NP)^F^^6.4;7^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.407,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.407,"DT")
3021121
"^DD",8973.1,8973.1,6.408,0)
HOUR 7 PROC TM (CA-AA) (NP)^F^^6.4;8^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.408,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.408,"DT")
3021121
"^DD",8973.1,8973.1,6.409,0)
HOUR 8 PROC TM (CA-AA) (NP)^F^^6.4;9^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.409,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.409,"DT")
3021121
"^DD",8973.1,8973.1,6.41,0)
HOUR 9 PROC TM (CA-AA) (NP)^F^^6.4;10^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.41,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.41,"DT")
3021121
"^DD",8973.1,8973.1,6.411,0)
HOUR 10 PROC TM (CA-AA) (NP)^F^^6.4;11^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.411,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.411,"DT")
3021121
"^DD",8973.1,8973.1,6.412,0)
HOUR 11 PROC TM (CA-AA) (NP)^F^^6.4;12^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.412,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.412,"DT")
3021121
"^DD",8973.1,8973.1,6.413,0)
HOUR 12 PROC TM (CA-AA) (NP)^F^^6.4;13^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.413,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.413,"DT")
3021121
"^DD",8973.1,8973.1,6.414,0)
HOUR 13 PROC TM (CA-AA) (NP)^F^^6.4;14^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.414,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.414,"DT")
3021121
"^DD",8973.1,8973.1,6.415,0)
HOUR 14 PROC TM (CA-AA) (NP)^F^^6.4;15^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.415,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.415,"DT")
3021121
"^DD",8973.1,8973.1,6.416,0)
HOUR 15 PROC TM (CA-AA) (NP)^F^^6.4;16^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.416,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.416,"DT")
3021121
"^DD",8973.1,8973.1,6.417,0)
HOUR 16 PROC TM (CA-AA) (NP)^F^^6.4;17^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.417,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.417,"DT")
3021121
"^DD",8973.1,8973.1,6.418,0)
HOUR 17 PROC TM (CA-AA) (NP)^F^^6.4;18^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.418,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.418,"DT")
3021121
"^DD",8973.1,8973.1,6.419,0)
HOUR 18 PROC TM (CA-AA) (NP)^F^^6.4;19^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.419,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.419,"DT")
3021121
"^DD",8973.1,8973.1,6.42,0)
HOUR 19 PROC TM (CA-AA) (NP)^F^^6.4;20^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.42,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.42,"DT")
3021121
"^DD",8973.1,8973.1,6.421,0)
HOUR 20 PROC TM (CA-AA) (NP)^F^^6.4;21^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.421,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.421,"DT")
3021121
"^DD",8973.1,8973.1,6.422,0)
HOUR 21 PROC TM (CA-AA) (NP)^F^^6.4;22^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.422,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.422,"DT")
3021121
"^DD",8973.1,8973.1,6.423,0)
HOUR 22 PROC TM (CA-AA) (NP)^F^^6.4;23^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.423,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.423,"DT")
3021121
"^DD",8973.1,8973.1,6.424,0)
HOUR 23 PROC TM (CA-AA) (NP)^F^^6.4;24^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.424,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.424,"DT")
3021121
"^DD",8973.1,8973.1,6.501,0)
HOUR 0 PROC CNT (CA-AA) (NP)^F^^6.5;1^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.501,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.501,"DT")
3021121
"^DD",8973.1,8973.1,6.502,0)
HOUR 1 PROC CNT (CA-AA) (NP)^F^^6.5;2^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.502,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.502,"DT")
3021121
"^DD",8973.1,8973.1,6.503,0)
HOUR 2 PROC CNT (CA-AA) (NP)^F^^6.5;3^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.503,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.503,"DT")
3021121
"^DD",8973.1,8973.1,6.504,0)
HOUR 3 PROC CNT (CA-AA) (NP)^F^^6.5;4^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.504,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.504,"DT")
3021121
"^DD",8973.1,8973.1,6.505,0)
HOUR 4 PROC CNT (CA-AA) (NP)^F^^6.5;5^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.505,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.505,"DT")
3021121
"^DD",8973.1,8973.1,6.506,0)
HOUR 5 PROC CNT (CA-AA) (NP)^F^^6.5;6^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.506,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.506,"DT")
3021121
"^DD",8973.1,8973.1,6.507,0)
HOUR 6 PROC CNT (CA-AA) (NP)^F^^6.5;7^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.507,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.507,"DT")
3021121
"^DD",8973.1,8973.1,6.508,0)
HOUR 7 PROC CNT (CA-AA) (NP)^F^^6.5;8^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.508,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.508,"DT")
3021121
"^DD",8973.1,8973.1,6.509,0)
HOUR 8 PROC CNT (CA-AA) (NP)^F^^6.5;9^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.509,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.509,"DT")
3021121
"^DD",8973.1,8973.1,6.51,0)
HOUR 9 PROC CNT (CA-AA) (NP)^F^^6.5;10^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.51,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.51,"DT")
3021121
"^DD",8973.1,8973.1,6.511,0)
HOUR 10 PROC CNT (CA-AA) (NP)^F^^6.5;11^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.511,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.511,"DT")
3021121
"^DD",8973.1,8973.1,6.512,0)
HOUR 11 PROC CNT (CA-AA) (NP)^F^^6.5;12^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.512,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.512,"DT")
3021121
"^DD",8973.1,8973.1,6.513,0)
HOUR 12 PROC CNT (CA-AA) (NP)^F^^6.5;13^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.513,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.513,"DT")
3021121
"^DD",8973.1,8973.1,6.514,0)
HOUR 13 PROC CNT (CA-AA) (NP)^F^^6.5;14^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.514,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.514,"DT")
3021121
"^DD",8973.1,8973.1,6.515,0)
HOUR 14 PROC CNT (CA-AA) (NP)^F^^6.5;15^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.515,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.515,"DT")
3021121
"^DD",8973.1,8973.1,6.516,0)
HOUR 15 PROC CNT (CA-AA) (NP)^F^^6.5;16^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.516,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.516,"DT")
3021121
"^DD",8973.1,8973.1,6.517,0)
HOUR 16 PROC CNT (CA-AA) (NP)^F^^6.5;17^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.517,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.517,"DT")
3021121
"^DD",8973.1,8973.1,6.518,0)
HOUR 17 PROC CNT (CA-AA) (NP)^F^^6.5;18^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.518,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.518,"DT")
3021121
"^DD",8973.1,8973.1,6.519,0)
HOUR 18 PROC CNT (CA-AA) (NP)^F^^6.5;19^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.519,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.519,"DT")
3021121
"^DD",8973.1,8973.1,6.52,0)
HOUR 19 PROC CNT (CA-AA) (NP)^F^^6.5;20^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.52,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.52,"DT")
3021121
"^DD",8973.1,8973.1,6.521,0)
HOUR 20 PROC CNT (CA-AA) (NP)^F^^6.5;21^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.521,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.521,"DT")
3021121
"^DD",8973.1,8973.1,6.522,0)
HOUR 21 PROC CNT (CA-AA) (NP)^F^^6.5;22^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.522,"DT")
3021121
"^DD",8973.1,8973.1,6.523,0)
HOUR 22 PROC CNT (CA-AA) (NP)^F^^6.5;23^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.523,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.523,"DT")
3021121
"^DD",8973.1,8973.1,6.524,0)
HOUR 23 PROC CNT (CA-AA) (NP)^F^^6.5;24^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.524,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.524,"DT")
3021121
"^DD",8973.1,8973.1,6.701,0)
HOUR 0 AA TO CA CHR (NP)^F^^6.7;1^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.701,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.701,"DT")
3021121
"^DD",8973.1,8973.1,6.702,0)
HOUR 1 AA TO CA CHR (NP)^F^^6.7;2^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.702,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.702,"DT")
3021121
"^DD",8973.1,8973.1,6.703,0)
HOUR 2 AA TO CA CHR (NP)^F^^6.7;3^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.703,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.703,"DT")
3021121
"^DD",8973.1,8973.1,6.704,0)
HOUR 3 AA TO CA CHR (NP)^F^^6.7;4^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.704,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.704,"DT")
3021121
"^DD",8973.1,8973.1,6.705,0)
HOUR 4 AA TO CA CHR (NP)^F^^6.7;5^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.705,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.705,"DT")
3021121
"^DD",8973.1,8973.1,6.706,0)
HOUR 5 AA TO CA CHR (NP)^F^^6.7;6^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.706,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.706,"DT")
3021121
"^DD",8973.1,8973.1,6.707,0)
HOUR 6 AA TO CA CHR (NP)^F^^6.7;7^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.707,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.707,"DT")
3021121
"^DD",8973.1,8973.1,6.708,0)
HOUR 7 AA TO CA CHR (NP)^F^^6.7;8^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.708,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.708,"DT")
3021121
"^DD",8973.1,8973.1,6.709,0)
HOUR 8 AA TO CA CHR (NP)^F^^6.7;9^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.709,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.709,"DT")
3021121
"^DD",8973.1,8973.1,6.71,0)
HOUR 9 AA TO CA CHR (NP)^F^^6.7;10^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.71,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.71,"DT")
3021121
"^DD",8973.1,8973.1,6.711,0)
HOUR 10 AA TO CA CHR (NP)^F^^6.7;11^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.711,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.711,"DT")
3021121
"^DD",8973.1,8973.1,6.712,0)
HOUR 11 AA TO CA CHR (NP)^F^^6.7;12^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.712,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.712,"DT")
3021121
"^DD",8973.1,8973.1,6.713,0)
HOUR 12 AA TO CA CHR (NP)^F^^6.7;13^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.713,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.713,"DT")
3021121
"^DD",8973.1,8973.1,6.714,0)
HOUR 13 AA TO CA CHR (NP)^F^^6.7;14^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.714,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.714,"DT")
3021121
"^DD",8973.1,8973.1,6.715,0)
HOUR 14 AA TO CA CHR (NP)^F^^6.7;15^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.715,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.715,"DT")
3021121
"^DD",8973.1,8973.1,6.716,0)
HOUR 15 AA TO CA CHR (NP)^F^^6.7;16^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.716,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.716,"DT")
3021121
"^DD",8973.1,8973.1,6.717,0)
HOUR 16 AA TO CA CHR (NP)^F^^6.7;17^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.717,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.717,"DT")
3021121
"^DD",8973.1,8973.1,6.718,0)
HOUR 17 AA TO CA CHR (NP)^F^^6.7;18^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.718,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.718,"DT")
3021121
"^DD",8973.1,8973.1,6.719,0)
HOUR 18 AA TO CA CHR (NP)^F^^6.7;19^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.719,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.719,"DT")
3021121
"^DD",8973.1,8973.1,6.72,0)
HOUR 19 AA TO CA CHR (NP)^F^^6.7;20^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.72,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.72,"DT")
3021121
"^DD",8973.1,8973.1,6.721,0)
HOUR 20 AA TO CA CHR (NP)^F^^6.7;21^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.721,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.721,"DT")
3021121
"^DD",8973.1,8973.1,6.722,0)
HOUR 21 AA TO CA CHR (NP)^F^^6.7;22^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.722,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.722,"DT")
3021121
"^DD",8973.1,8973.1,6.723,0)
HOUR 22 AA TO CA CHR (NP)^F^^6.7;23^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.723,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.723,"DT")
3021121
"^DD",8973.1,8973.1,6.724,0)
HOUR 23 AA TO CA CHR (NP)^F^^6.7;24^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.724,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.724,"DT")
3021121
"^DD",8973.1,8973.1,6.801,0)
HOUR 0 AA TO CA MSGS (NP)^F^^6.8;1^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.801,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.801,"DT")
3021203
"^DD",8973.1,8973.1,6.802,0)
HOUR 1 AA TO CA MSGS (NP)^F^^6.8;2^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.802,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.802,"DT")
3021203
"^DD",8973.1,8973.1,6.803,0)
HOUR 2 AA TO CA MSGS (NP)^F^^6.8;3^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.803,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.803,"DT")
3021203
"^DD",8973.1,8973.1,6.804,0)
HOUR 3 AA TO CA MSGS (NP)^F^^6.8;4^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.804,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.804,"DT")
3021203
"^DD",8973.1,8973.1,6.805,0)
HOUR 4 AA TO CA MSGS (NP)^F^^6.8;5^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.805,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.805,"DT")
3021203
"^DD",8973.1,8973.1,6.806,0)
HOUR 5 AA TO CA MSGS (NP)^F^^6.8;6^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.806,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.806,"DT")
3021203
"^DD",8973.1,8973.1,6.807,0)
HOUR 6 AA TO CA MSGS (NP)^F^^6.8;7^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.807,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.807,"DT")
3021203
"^DD",8973.1,8973.1,6.808,0)
HOUR 7 AA TO CA MSGS (NP)^F^^6.8;8^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.808,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.808,"DT")
3021203
"^DD",8973.1,8973.1,6.809,0)
HOUR 8 AA TO CA MSGS (NP)^F^^6.8;9^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.809,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.809,"DT")
3021203
"^DD",8973.1,8973.1,6.81,0)
HOUR 9 AA TO CA MSGS (NP)^F^^6.8;10^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.81,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.81,"DT")
3021203
"^DD",8973.1,8973.1,6.811,0)
HOUR 10 AA TO CA MSGS (NP)^F^^6.8;11^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.811,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.811,"DT")
3021203
"^DD",8973.1,8973.1,6.812,0)
HOUR 11 AA TO CA MSGS (NP)^F^^6.8;12^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.812,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.812,"DT")
3021203
"^DD",8973.1,8973.1,6.813,0)
HOUR 12 AA TO CA MSGS (NP)^F^^6.8;13^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.813,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.813,"DT")
3021203
"^DD",8973.1,8973.1,6.814,0)
HOUR 13 AA TO CA MSGS (NP)^F^^6.8;14^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.814,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.814,"DT")
3021203
"^DD",8973.1,8973.1,6.815,0)
HOUR 14 AA TO CA MSGS (NP)^F^^6.8;15^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.815,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.815,"DT")
3021203
"^DD",8973.1,8973.1,6.816,0)
HOUR 15 AA TO CA MSGS (NP)^F^^6.8;16^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.816,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.816,"DT")
3021203
"^DD",8973.1,8973.1,6.817,0)
HOUR 16 AA TO CA MSGS (NP)^F^^6.8;17^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.817,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.817,"DT")
3021203
"^DD",8973.1,8973.1,6.818,0)
HOUR 17 AA TO CA MSGS (NP)^F^^6.8;18^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.818,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.818,"DT")
3021203
"^DD",8973.1,8973.1,6.819,0)
HOUR 18 AA TO CA MSGS (NP)^F^^6.8;19^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.819,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.819,"DT")
3021203
"^DD",8973.1,8973.1,6.82,0)
HOUR 19 AA TO CA MSGS (NP)^F^^6.8;20^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.82,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.82,"DT")
3021203
"^DD",8973.1,8973.1,6.821,0)
HOUR 20 AA TO CA MSGS (NP)^F^^6.8;21^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.821,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.821,"DT")
3021203
"^DD",8973.1,8973.1,6.822,0)
HOUR 21 AA TO CA MSGS (NP)^F^^6.8;22^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.822,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.822,"DT")
3021203
"^DD",8973.1,8973.1,6.823,0)
HOUR 22 AA TO CA MSGS (NP)^F^^6.8;23^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.823,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.823,"DT")
3021203
"^DD",8973.1,8973.1,6.824,0)
HOUR 23 AA TO CA MSGS (NP)^F^^6.8;24^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.824,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.824,"DT")
3021203
"^DD",8973.1,8973.1,6.901,0)
HOUR 0 AA TO CA SEC (NP)^F^^6.9;1^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.901,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.901,"DT")
3021122
"^DD",8973.1,8973.1,6.902,0)
HOUR 1 AA TO CA SEC (NP)^F^^6.9;2^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.902,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.902,"DT")
3021122
"^DD",8973.1,8973.1,6.903,0)
HOUR 2 AA TO CA SEC (NP)^F^^6.9;3^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.903,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.903,"DT")
3021122
"^DD",8973.1,8973.1,6.904,0)
HOUR 3 AA TO CA SEC (NP)^F^^6.9;4^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.904,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.904,"DT")
3021122
"^DD",8973.1,8973.1,6.905,0)
HOUR 4 AA TO CA SEC (NP)^F^^6.9;5^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.905,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.905,"DT")
3021122
"^DD",8973.1,8973.1,6.906,0)
HOUR 5 AA TO CA SEC (NP)^F^^6.9;6^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.906,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.906,"DT")
3021122
"^DD",8973.1,8973.1,6.907,0)
HOUR 6 AA TO CA SEC (NP)^F^^6.9;7^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.907,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.907,"DT")
3021122
"^DD",8973.1,8973.1,6.908,0)
HOUR 7 AA TO CA SEC (NP)^F^^6.9;8^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.908,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.908,"DT")
3021122
"^DD",8973.1,8973.1,6.909,0)
HOUR 8 AA TO CA SEC (NP)^F^^6.9;9^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.909,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.909,"DT")
3021122
"^DD",8973.1,8973.1,6.91,0)
HOUR 9 AA TO CA SEC (NP)^F^^6.9;10^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.91,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.91,"DT")
3021122
"^DD",8973.1,8973.1,6.911,0)
HOUR 10 AA TO CA SEC (NP)^F^^6.9;11^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.911,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.911,"DT")
3021122
"^DD",8973.1,8973.1,6.912,0)
HOUR 11 AA TO CA SEC (NP)^F^^6.9;12^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.912,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.912,"DT")
3021122
"^DD",8973.1,8973.1,6.913,0)
HOUR 12 AA TO CA SEC (NP)^F^^6.9;13^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.913,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.913,"DT")
3021122
"^DD",8973.1,8973.1,6.914,0)
HOUR 13 AA TO CA SEC (NP)^F^^6.9;14^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.914,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.914,"DT")
3021122
"^DD",8973.1,8973.1,6.915,0)
HOUR 14 AA TO CA SEC (NP)^F^^6.9;15^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.915,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.915,"DT")
3021122
"^DD",8973.1,8973.1,6.916,0)
HOUR 15 AA TO CA SEC (NP)^F^^6.9;16^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.916,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.916,"DT")
3021122
"^DD",8973.1,8973.1,6.917,0)
HOUR 16 AA TO CA SEC (NP)^F^^6.9;17^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.917,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.917,"DT")
3021122
"^DD",8973.1,8973.1,6.918,0)
HOUR 17 AA TO CA SEC (NP)^F^^6.9;18^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.918,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.918,"DT")
3021122
"^DD",8973.1,8973.1,6.919,0)
HOUR 18 AA TO CA SEC (NP)^F^^6.9;19^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.919,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.919,"DT")
3021122
"^DD",8973.1,8973.1,6.92,0)
HOUR 19 AA TO CA SEC (NP)^F^^6.9;20^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.92,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.92,"DT")
3021122
"^DD",8973.1,8973.1,6.921,0)
HOUR 20 AA TO CA SEC (NP)^F^^6.9;21^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.921,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.921,"DT")
3021122
"^DD",8973.1,8973.1,6.922,0)
HOUR 21 AA TO CA SEC (NP)^F^^6.9;22^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.922,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.922,"DT")
3021122
"^DD",8973.1,8973.1,6.923,0)
HOUR 22 AA TO CA SEC (NP)^F^^6.9;23^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.923,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.923,"DT")
3021122
"^DD",8973.1,8973.1,6.924,0)
HOUR 23 AA TO CA SEC (NP)^F^^6.9;24^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,6.924,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,6.924,"DT")
3021122
"^DD",8973.1,8973.1,99.001,0)
TOT CHR (PT)^F^^99;1^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,99.001,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,99.001,"DT")
3010816
"^DD",8973.1,8973.1,99.002,0)
TOT MESSAGES (PT)^F^^99;2^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,99.002,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,99.002,"DT")
3010816
"^DD",8973.1,8973.1,99.003,0)
TOT SECONDS (PT)^F^^99;3^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,99.003,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,99.003,"DT")
3010816
"^DD",8973.1,8973.1,99.004,0)
TOT CHR (NP)^F^^99;4^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,99.004,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,99.004,"DT")
3010816
"^DD",8973.1,8973.1,99.005,0)
TOT MESSAGES (NP)^F^^99;5^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,99.005,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,99.005,"DT")
3010816
"^DD",8973.1,8973.1,99.006,0)
TOT SECONDS (NP)^F^^99;6^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,99.006,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,99.006,"DT")
3010816
"^DD",8973.1,8973.1,99.201,0)
TOT MSG UNIT CHR^F^^99.2;1^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,99.201,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,99.201,"DT")
3020701
"^DD",8973.1,8973.1,99.202,0)
TOT MSG UNIT MSGS^F^^99.2;2^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,99.202,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,99.202,"DT")
3020701
"^DD",8973.1,8973.1,99.203,0)
TOT MSG UNIT SEC^F^^99.2;3^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,99.203,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,99.203,"DT")
3020701
"^DD",8973.1,8973.1,99.206,0)
MSG UNIT TYPE(S)^F^^99.2;6^K:$L(X)>20!($L(X)<1) X
"^DD",8973.1,8973.1,99.206,3)
Answer must be 1-20 characters in length
"^DD",8973.1,8973.1,99.206,"DT")
3020701
"^DD",8973.1,8973.1,99.207,0)
MSG UNIT PROTOCOL^F^^99.2;7^K:$L(X)>30!($L(X)<1) X
"^DD",8973.1,8973.1,99.207,3)
Answer must be 1-30 characters in length
"^DD",8973.1,8973.1,99.207,"DT")
3020701
"^DD",8973.1,8973.1,99.208,0)
MSG UNIT PROTOCOL - INFERRED^F^^99.2;8^K:$L(X)>30!($L(X)<1) X
"^DD",8973.1,8973.1,99.208,3)
Answer must be 1-30 characters in length
"^DD",8973.1,8973.1,99.208,"DT")
3020701
"^DD",8973.1,8973.1,99.209,0)
MSG UNIT NAMESPACE^F^^99.2;9^K:$L(X)>10!($L(X)<1) X
"^DD",8973.1,8973.1,99.209,3)
Answer must be 1-10 characters in length
"^DD",8973.1,8973.1,99.209,"DT")
3020701
"^DD",8973.1,8973.1,99.21,0)
MSG UNIT NAMESPACE - INFERRED^F^^99.2;10^K:$L(X)>10!($L(X)<1) X
"^DD",8973.1,8973.1,99.21,3)
Answer must be 1-10 characters in length
"^DD",8973.1,8973.1,99.21,"DT")
3020701
"^DD",8973.1,8973.1,99.211,0)
CONTACTED SITE NUMBER^F^^99.2;11^K:$L(X)>9!($L(X)<1) X
"^DD",8973.1,8973.1,99.211,3)
Answer must be 1-9 characters in length
"^DD",8973.1,8973.1,99.211,"DT")
3020701
"^DD",8973.1,8973.1,99.212,0)
CONTACTED SITE NAME^F^^99.2;12^K:$L(X)>45!($L(X)<1) X
"^DD",8973.1,8973.1,99.212,1,0)
^.1
"^DD",8973.1,8973.1,99.212,1,1,0)
8973.1^ACSDTPRNM^MUMPS
"^DD",8973.1,8973.1,99.212,1,1,1)
D XREF1^KMPDUT2($G(DA),$G(X),1)
"^DD",8973.1,8973.1,99.212,1,1,2)
D XREF1^KMPDUT2($G(DA),$G(X),2)
"^DD",8973.1,8973.1,99.212,1,1,"%D",0)
^^1^1^3020702^
"^DD",8973.1,8973.1,99.212,1,1,"%D",1,0)
^KMPD(8973.1,"ACSDTPRNM",ContactSite,Date,Protocol,Namespace)=""
"^DD",8973.1,8973.1,99.212,1,1,"DT")
3020702
"^DD",8973.1,8973.1,99.212,3)
Answer must be 1-45 characters in length
"^DD",8973.1,8973.1,99.212,"DT")
3020701
"^DD",8973.1,8973.1,99.213,0)
CONTACTED SITE LOCAL/REMOTE^F^^99.2;13^K:$L(X)>10!($L(X)<1) X
"^DD",8973.1,8973.1,99.213,3)
Answer must be 1-10 characters in length
"^DD",8973.1,8973.1,99.213,"DT")
3020701
"^DD",8973.1,8973.1,99.301,0)
TOT MSG UNIT CHR (PT)^F^^99.3;1^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,99.301,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,99.301,"DT")
3021018
"^DD",8973.1,8973.1,99.302,0)
TOT MSG UNIT MSGS (PT)^F^^99.3;2^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,99.302,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,99.302,"DT")
3021029
"^DD",8973.1,8973.1,99.303,0)
TOT MSG UNIT SEC (PT)^F^^99.3;3^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,99.303,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,99.303,"DT")
3021018
"^DD",8973.1,8973.1,99.304,0)
TOT MSG UNIT CHR (NP)^F^^99.3;4^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,99.304,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,99.304,"DT")
3021029
"^DD",8973.1,8973.1,99.305,0)
TOT MSG UNIT MSGS (NP)^F^^99.3;5^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,99.305,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,99.305,"DT")
3021029
"^DD",8973.1,8973.1,99.306,0)
TOT MSG UNIT SEC (NP)^F^^99.3;6^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,99.306,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,99.306,"DT")
3021029
"^DD",8973.1,8973.1,99.307,0)
TOT MSG UNIT CHR (PT&NP)^F^^99.3;7^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,99.307,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,99.307,"DT")
3021112
"^DD",8973.1,8973.1,99.308,0)
TOT MSG UNIT MSGS (PT&NP)^F^^99.3;8^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,99.308,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,99.308,"DT")
3021112
"^DD",8973.1,8973.1,99.309,0)
TOT MSG UNIT SEC (PT&NP)^F^^99.3;9^K:$L(X)>25!($L(X)<1) X
"^DD",8973.1,8973.1,99.309,3)
Answer must be 1-25 characters in length
"^DD",8973.1,8973.1,99.309,"DT")
3021112
"^DD",8973.1,8973.1,99.401,0)
TOT MSG TO CA CHR (PT)^F^^99.4;1^K:$L(X)>14!($L(X)<1) X
"^DD",8973.1,8973.1,99.401,3)
Answer must be 1-14 characters in length
"^DD",8973.1,8973.1,99.401,"DT")
3021122
"^DD",8973.1,8973.1,99.402,0)
TOT MSG TO CA CHR (NP)^F^^99.4;2^K:$L(X)>14!($L(X)<1) X
"^DD",8973.1,8973.1,99.402,3)
Answer must be 1-14 characters in length
"^DD",8973.1,8973.1,99.402,"DT")
3021122
"^DD",8973.1,8973.1,99.403,0)
TOT MSG TO CA COUNT (PT)^F^^99.4;3^K:$L(X)>14!($L(X)<1) X
"^DD",8973.1,8973.1,99.403,3)
Answer must be 1-14 characters in length
"^DD",8973.1,8973.1,99.403,"DT")
3021122
"^DD",8973.1,8973.1,99.404,0)
TOT MSG TO CA COUNT (NP)^F^^99.4;4^K:$L(X)>14!($L(X)<1) X
"^DD",8973.1,8973.1,99.404,3)
Answer must be 1-14 characters in length
"^DD",8973.1,8973.1,99.404,"DT")
3021122
"^DD",8973.1,8973.1,99.405,0)
TOT MSG TO CA SEC (PT)^F^^99.4;5^K:$L(X)>14!($L(X)<1) X
"^DD",8973.1,8973.1,99.405,3)
Answer must be 1-14 characters in length
"^DD",8973.1,8973.1,99.405,"DT")
3021122
"^DD",8973.1,8973.1,99.406,0)
TOT MSG TO CA SEC (NP)^F^^99.4;6^K:$L(X)>14!($L(X)<1) X
"^DD",8973.1,8973.1,99.406,3)
Answer must be 1-14 characters in length
"^DD",8973.1,8973.1,99.406,"DT")
3021122
"^DD",8973.1,8973.1,99.407,0)
TOT PROC TM (CA-AA) (PT)^F^^99.4;7^K:$L(X)>14!($L(X)<1) X
"^DD",8973.1,8973.1,99.407,3)
Answer must be 1-14 characters in length
"^DD",8973.1,8973.1,99.407,"DT")
3021122
"^DD",8973.1,8973.1,99.408,0)
TOT PROC TM (CA-AA) (NP)^F^^99.4;8^K:$L(X)>14!($L(X)<1) X
"^DD",8973.1,8973.1,99.408,3)
Answer must be 1-14 characters in length
"^DD",8973.1,8973.1,99.408,"DT")
3021122
"^DD",8973.1,8973.1,99.409,0)
TOT PROC CNT (CA-AA) (PT)^F^^99.4;9^K:$L(X)>14!($L(X)<1) X
"^DD",8973.1,8973.1,99.409,3)
Answer must be 1-14 characters in length
"^DD",8973.1,8973.1,99.409,"DT")
3021122
"^DD",8973.1,8973.1,99.41,0)
TOT PROC CNT (CA-AA) (NP)^F^^99.4;10^K:$L(X)>14!($L(X)<1) X
"^DD",8973.1,8973.1,99.41,3)
Answer must be 1-14 characters in length
"^DD",8973.1,8973.1,99.41,"DT")
3021122
"^DD",8973.1,8973.1,99.411,0)
TOT AA TO CA CHR (PT)^F^^99.4;11^K:$L(X)>14!($L(X)<1) X
"^DD",8973.1,8973.1,99.411,3)
Answer must be 1-14 characters in length
"^DD",8973.1,8973.1,99.411,"DT")
3021122
"^DD",8973.1,8973.1,99.412,0)
TOT AA TO CA CHR (NP)^F^^99.4;12^K:$L(X)>14!($L(X)<1) X
"^DD",8973.1,8973.1,99.412,3)
Answer must be 1-14 characters in length
"^DD",8973.1,8973.1,99.412,"DT")
3021122
"^DD",8973.1,8973.1,99.413,0)
TOT AA TO CA COUNT (PT)^F^^99.4;13^K:$L(X)>14!($L(X)<1) X
"^DD",8973.1,8973.1,99.413,3)
Answer must be 1-14 characters in length
"^DD",8973.1,8973.1,99.413,"DT")
3021122
"^DD",8973.1,8973.1,99.414,0)
TOT AA TO CA COUNT (NP)^F^^99.4;14^K:$L(X)>14!($L(X)<1) X
"^DD",8973.1,8973.1,99.414,3)
Answer must be 1-14 characters in length
"^DD",8973.1,8973.1,99.414,"DT")
3021122
"^DD",8973.1,8973.1,99.415,0)
TOT AA TO CA SEC (PT)^F^^99.4;15^K:$L(X)>14!($L(X)<1) X
"^DD",8973.1,8973.1,99.415,3)
Answer must be 1-14 characters in length
"^DD",8973.1,8973.1,99.415,"DT")
3021127
"^DD",8973.1,8973.1,99.416,0)
TOT AA TO CA SEC (NP)^F^^99.4;16^K:$L(X)>14!($L(X)<1) X
"^DD",8973.1,8973.1,99.416,3)
Answer must be 1-14 characters in length
"^DD",8973.1,8973.1,99.416,"DT")
3021122
"^DD",8973.1,8973.1,99.501,0)
TOT MSG UNIT COUNT (PT)^F^^99.5;1^K:$L(X)>14!($L(X)<1) X
"^DD",8973.1,8973.1,99.501,3)
Answer must be 1-14 characters in length
"^DD",8973.1,8973.1,99.501,"DT")
3030410
"^DD",8973.1,8973.1,99.502,0)
TOT MSG UNIT COUNT (NP)^F^^99.5;2^K:$L(X)>14!($L(X)<1) X
"^DD",8973.1,8973.1,99.502,3)
Answer must be 1-14 characters in length
"^DD",8973.1,8973.1,99.502,"DT")
3030410
"^DD",8973.1,8973.1,99.503,0)
TOT MSG UNIT COUNT (PT&NP)^F^^99.5;3^K:$L(X)>14!($L(X)<1) X
"^DD",8973.1,8973.1,99.503,3)
Answer must be 1-14 characters in length
"^DD",8973.1,8973.1,99.503,"DT")
3030410
"^DD",8973.2,8973.2,0)
FIELD^^.1^10
"^DD",8973.2,8973.2,0,"DT")
3040210
"^DD",8973.2,8973.2,0,"ID","W")
D:$G(Y) ID1^KMPDUT2(Y)
"^DD",8973.2,8973.2,0,"IX","ACLNM",8973.2,.06)

"^DD",8973.2,8973.2,0,"IX","ADT",8973.2,.03)

"^DD",8973.2,8973.2,0,"IX","ANEWPER",8973.2,.05)

"^DD",8973.2,8973.2,0,"IX","ASSCLDTTM",8973.2,.07)

"^DD",8973.2,8973.2,0,"IX","ASSDTPT",8973.2,.07)

"^DD",8973.2,8973.2,0,"IX","ASSDTTM",8973.2,.07)

"^DD",8973.2,8973.2,0,"IX","ASSIPDTTM",8973.2,.07)

"^DD",8973.2,8973.2,0,"IX","ASSNPDTTM",8973.2,.07)

"^DD",8973.2,8973.2,0,"IX","ASTDTTM",8973.2,.03)

"^DD",8973.2,8973.2,0,"IX","ASVDTSS",8973.2,.07)

"^DD",8973.2,8973.2,0,"IX","ATITLE",8973.2,.08)

"^DD",8973.2,8973.2,0,"IX","ATMPSS",8973.2,.07)

"^DD",8973.2,8973.2,0,"IX","B",8973.2,.01)

"^DD",8973.2,8973.2,0,"IX","C",8973.2,.03)

"^DD",8973.2,8973.2,0,"NM","CP TIMING")

"^DD",8973.2,8973.2,0,"VRPK")
KMPD
"^DD",8973.2,8973.2,.01,0)
IDENTIFIER^RF^^0;1^K:$L(X)>40!($L(X)<3)!'(X'?1P.E) X
"^DD",8973.2,8973.2,.01,1,0)
^.1
"^DD",8973.2,8973.2,.01,1,1,0)
8973.2^B
"^DD",8973.2,8973.2,.01,1,1,1)
S ^KMPD(8973.2,"B",$E(X,1,40),DA)=""
"^DD",8973.2,8973.2,.01,1,1,2)
K ^KMPD(8973.2,"B",$E(X,1,40),DA)
"^DD",8973.2,8973.2,.01,3)
Answer must be 3-40 characters in length
"^DD",8973.2,8973.2,.01,"DT")
3030715
"^DD",8973.2,8973.2,.02,0)
SENT TO NATIONAL DATABASE^S^0:NO;1:YES;^0;2^Q
"^DD",8973.2,8973.2,.02,"DT")
3030715
"^DD",8973.2,8973.2,.03,0)
SERVER START DATE/TIME^D^^0;3^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973.2,8973.2,.03,1,0)
^.1
"^DD",8973.2,8973.2,.03,1,1,0)
8973.2^ASTDTTM
"^DD",8973.2,8973.2,.03,1,1,1)
S ^KMPD(8973.2,"ASTDTTM",$E(X,1,30),DA)=""
"^DD",8973.2,8973.2,.03,1,1,2)
K ^KMPD(8973.2,"ASTDTTM",$E(X,1,30),DA)
"^DD",8973.2,8973.2,.03,1,1,"%D",0)
^^1^1^3030715^
"^DD",8973.2,8973.2,.03,1,1,"%D",1,0)
^KMPD(8973.2,"ASTDTTM",StartDateTime,X)=""
"^DD",8973.2,8973.2,.03,1,1,"DT")
3030715
"^DD",8973.2,8973.2,.03,1,2,0)
8973.2^C
"^DD",8973.2,8973.2,.03,1,2,1)
S ^KMPD(8973.2,"C",$E(X,1,30),DA)=""
"^DD",8973.2,8973.2,.03,1,2,2)
K ^KMPD(8973.2,"C",$E(X,1,30),DA)
"^DD",8973.2,8973.2,.03,1,2,"DT")
3030805
"^DD",8973.2,8973.2,.03,1,3,0)
8973.2^ADT^MUMPS
"^DD",8973.2,8973.2,.03,1,3,1)
S:$P(X,".") ^KMPD(8973.2,"ADT",$P(X,"."),DA)=""
"^DD",8973.2,8973.2,.03,1,3,2)
K:$P(X,".") ^KMPD(8973.2,"ADT",$P(X,"."),DA)
"^DD",8973.2,8973.2,.03,1,3,"%D",0)
^^1^1^3031211^
"^DD",8973.2,8973.2,.03,1,3,"%D",1,0)
^KMPD(8973.2,"ADT",Date,Ien)=""
"^DD",8973.2,8973.2,.03,1,3,"DT")
3031211
"^DD",8973.2,8973.2,.03,3)
(No range limit on date)
"^DD",8973.2,8973.2,.03,"DT")
3031211
"^DD",8973.2,8973.2,.04,0)
SERVER DELTA^F^^0;4^K:$L(X)>15!($L(X)<1) X
"^DD",8973.2,8973.2,.04,3)
Answer must be 1-15 characters in length
"^DD",8973.2,8973.2,.04,"DT")
3030718
"^DD",8973.2,8973.2,.05,0)
NEW PERSON^P200'^VA(200,^0;5^Q
"^DD",8973.2,8973.2,.05,1,0)
^.1
"^DD",8973.2,8973.2,.05,1,1,0)
8973.2^ANEWPER
"^DD",8973.2,8973.2,.05,1,1,1)
S ^KMPD(8973.2,"ANEWPER",$E(X,1,30),DA)=""
"^DD",8973.2,8973.2,.05,1,1,2)
K ^KMPD(8973.2,"ANEWPER",$E(X,1,30),DA)
"^DD",8973.2,8973.2,.05,1,1,"%D",0)
^^1^1^3030715^
"^DD",8973.2,8973.2,.05,1,1,"%D",1,0)
^KMPD(8973.2,"ANEWPER",NewPerson,X)=""
"^DD",8973.2,8973.2,.05,1,1,"DT")
3030715
"^DD",8973.2,8973.2,.05,"DT")
3030715
"^DD",8973.2,8973.2,.06,0)
CLIENT NAME^F^^0;6^K:$L(X)>40!($L(X)<1) X
"^DD",8973.2,8973.2,.06,1,0)
^.1^^0
"^DD",8973.2,8973.2,.06,1,1,0)
8973.2^ACLNM
"^DD",8973.2,8973.2,.06,1,1,1)
S ^KMPD(8973.2,"ACLNM",$E(X,1,30),DA)=""
"^DD",8973.2,8973.2,.06,1,1,2)
K ^KMPD(8973.2,"ACLNM",$E(X,1,30),DA)
"^DD",8973.2,8973.2,.06,1,1,"%D",0)
^^1^1^3030715^
"^DD",8973.2,8973.2,.06,1,1,"%D",1,0)
^KMPD(8973.2,"ACLNM",ClientName,X)=""
"^DD",8973.2,8973.2,.06,1,1,"DT")
3030715
"^DD",8973.2,8973.2,.06,3)
Answer must be 1-40 characters in length
"^DD",8973.2,8973.2,.06,"DT")
3030826
"^DD",8973.2,8973.2,.07,0)
KMPTMP SUBSCRIPT^F^^0;7^K:$L(X)>12!($L(X)<1) X
"^DD",8973.2,8973.2,.07,1,0)
^.1
"^DD",8973.2,8973.2,.07,1,1,0)
8973.2^ATMPSS
"^DD",8973.2,8973.2,.07,1,1,1)
S ^KMPD(8973.2,"ATMPSS",$E(X,1,30),DA)=""
"^DD",8973.2,8973.2,.07,1,1,2)
K ^KMPD(8973.2,"ATMPSS",$E(X,1,30),DA)
"^DD",8973.2,8973.2,.07,1,1,"%D",0)
^^1^1^3030715^
"^DD",8973.2,8973.2,.07,1,1,"%D",1,0)
^KMPD(8973.2,"ATMPSS",KmptmpSubscript,X)=""
"^DD",8973.2,8973.2,.07,1,1,"DT")
3030715
"^DD",8973.2,8973.2,.07,1,2,0)
8973.2^ASVDTSS^MUMPS
"^DD",8973.2,8973.2,.07,1,2,1)
D XREFT1^KMPDUT2($G(DA),$G(X),1)
"^DD",8973.2,8973.2,.07,1,2,2)
D XREFT1^KMPDUT2($G(DA),$G(X),2)
"^DD",8973.2,8973.2,.07,1,2,"%D",0)
^^1^1^3030722^
"^DD",8973.2,8973.2,.07,1,2,"%D",1,0)
^KMPD(8973.2,"ASVDTSS",KmptmpSubscript,ServerDate,Ien)=""
"^DD",8973.2,8973.2,.07,1,2,"DT")
3030722
"^DD",8973.2,8973.2,.07,1,3,0)
8973.2^ASSDTPT^MUMPS
"^DD",8973.2,8973.2,.07,1,3,1)
D XREFT2^KMPDUT2($G(DA),$G(X),1)
"^DD",8973.2,8973.2,.07,1,3,2)
D XREFT2^KMPDUT2($G(DA),$G(X),2)
"^DD",8973.2,8973.2,.07,1,3,"%D",0)
^^1^1^3030723^
"^DD",8973.2,8973.2,.07,1,3,"%D",1,0)
^KMPD(8973.2,"ASSDTPT",KmptmpSubscript,ServerDateTime,PrimeTime,DA)=""
"^DD",8973.2,8973.2,.07,1,3,"DT")
3030723
"^DD",8973.2,8973.2,.07,1,4,0)
8973.2^ASSDTTM^MUMPS
"^DD",8973.2,8973.2,.07,1,4,1)
D XREFT3^KMPDUT2($G(DA),$G(X),1)
"^DD",8973.2,8973.2,.07,1,4,2)
D XREFT3^KMPDUT2($G(DA),$G(X),2)
"^DD",8973.2,8973.2,.07,1,4,"%D",0)
^^1^1^3030813^
"^DD",8973.2,8973.2,.07,1,4,"%D",1,0)
^KMPD(8973.2,"ASSDTTM",KmptmpSusbscript,ServerDateTime,Ien)=""
"^DD",8973.2,8973.2,.07,1,4,"DT")
3030813
"^DD",8973.2,8973.2,.07,1,5,0)
8973.2^ASSCLDTTM^MUMPS
"^DD",8973.2,8973.2,.07,1,5,1)
D XREFT4^KMPDUT2($G(DA),$G(X),1)
"^DD",8973.2,8973.2,.07,1,5,2)
D XREFT4^KMPDUT2($G(DA),$G(X),2)
"^DD",8973.2,8973.2,.07,1,5,"%D",0)
^^1^1^3030826^
"^DD",8973.2,8973.2,.07,1,5,"%D",1,0)
S ^KMPD(8973.2,"ASSCLDTTM",KmptmpSubscript,ClientName,ServerDateTime,DA)
"^DD",8973.2,8973.2,.07,1,5,"DT")
3030826
"^DD",8973.2,8973.2,.07,1,6,0)
8973.2^ASSNPDTTM^MUMPS
"^DD",8973.2,8973.2,.07,1,6,1)
D XREFT5^KMPDUT2($G(DA),$G(X),1)
"^DD",8973.2,8973.2,.07,1,6,2)
D XREFT5^KMPDUT2($G(DA),$G(X),2)
"^DD",8973.2,8973.2,.07,1,6,"%D",0)
^^1^1^3030828^
"^DD",8973.2,8973.2,.07,1,6,"%D",1,0)
^KMPD(8973.2,"ASSNPDTTM",KmptmpSubscript,NewPerson,ServerDateTime,DA)=""
"^DD",8973.2,8973.2,.07,1,6,"DT")
3030828
"^DD",8973.2,8973.2,.07,1,7,0)
8973.2^ASSIPDTTM^MUMPS
"^DD",8973.2,8973.2,.07,1,7,1)
D XREFT6^KMPDUT2($G(DA),$G(X),1)
"^DD",8973.2,8973.2,.07,1,7,2)
D XREFT6^KMPDUT2($G(DA),$G(X),2)
"^DD",8973.2,8973.2,.07,1,7,"%D",0)
^^1^1^3030828^
"^DD",8973.2,8973.2,.07,1,7,"%D",1,0)
^KMPD(8973.2,"ASSIPDTTM",KmptmpSubscript,IpAddress,ServerDateTime,DA)=""
"^DD",8973.2,8973.2,.07,1,7,"DT")
3030828
"^DD",8973.2,8973.2,.07,3)
Answer must be 1-12 characters in length
"^DD",8973.2,8973.2,.07,"DT")
3030828
"^DD",8973.2,8973.2,.08,0)
TITLE^F^^0;8^K:$L(X)>30!($L(X)<1) X
"^DD",8973.2,8973.2,.08,1,0)
^.1
"^DD",8973.2,8973.2,.08,1,1,0)
8973.2^ATITLE
"^DD",8973.2,8973.2,.08,1,1,1)
S ^KMPD(8973.2,"ATITLE",$E(X,1,30),DA)=""
"^DD",8973.2,8973.2,.08,1,1,2)
K ^KMPD(8973.2,"ATITLE",$E(X,1,30),DA)
"^DD",8973.2,8973.2,.08,1,1,"%D",0)
^^1^1^3030715^
"^DD",8973.2,8973.2,.08,1,1,"%D",1,0)
^KMPD(8973.2,"ATITLE",Title,X)=""
"^DD",8973.2,8973.2,.08,1,1,"DT")
3030715
"^DD",8973.2,8973.2,.08,3)
Answer must be 1-30 characters in length
"^DD",8973.2,8973.2,.08,"DT")
3030715
"^DD",8973.2,8973.2,.09,0)
IP ADDRESS^F^^0;9^K:$L(X)>15!($L(X)<1) X
"^DD",8973.2,8973.2,.09,3)
Answer must be 1-15 characters in length
"^DD",8973.2,8973.2,.09,"DT")
3030716
"^DD",8973.2,8973.2,.1,0)
DAILY - SENT TO NATIONAL DB^S^0:NO;1:YES;^0;10^Q
"^DD",8973.2,8973.2,.1,"DT")
3040210
"^DD",8973.3,8973.3,0)
FIELD^^.03^5
"^DD",8973.3,8973.3,0,"DT")
3090623
"^DD",8973.3,8973.3,0,"IX","B",8973.3,.01)

"^DD",8973.3,8973.3,0,"IX","C",8973.3,2.01)

"^DD",8973.3,8973.3,0,"NM","CP REPORTS")

"^DD",8973.3,8973.3,0,"VRPK")
KMPD
"^DD",8973.3,8973.3,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",8973.3,8973.3,.01,1,0)
^.1
"^DD",8973.3,8973.3,.01,1,1,0)
8973.3^B
"^DD",8973.3,8973.3,.01,1,1,1)
S ^KMPD(8973.3,"B",$E(X,1,30),DA)=""
"^DD",8973.3,8973.3,.01,1,1,2)
K ^KMPD(8973.3,"B",$E(X,1,30),DA)
"^DD",8973.3,8973.3,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",8973.3,8973.3,.01,"DT")
3080630
"^DD",8973.3,8973.3,.02,0)
INACTIVE?^S^0:NO;1:YES;^0;2^Q
"^DD",8973.3,8973.3,.02,"DT")
3080630
"^DD",8973.3,8973.3,.03,0)
LOCAL/REMOTE^S^0:LOCAL;1:REMOTE;^0;3^Q
"^DD",8973.3,8973.3,.03,"DT")
3090623
"^DD",8973.3,8973.3,2.01,0)
DISPLAY TEXT^F^^2;1^K:$L(X)>50!($L(X)<1) X
"^DD",8973.3,8973.3,2.01,1,0)
^.1
"^DD",8973.3,8973.3,2.01,1,1,0)
8973.3^C
"^DD",8973.3,8973.3,2.01,1,1,1)
S ^KMPD(8973.3,"C",$E(X,1,50),DA)=""
"^DD",8973.3,8973.3,2.01,1,1,2)
K ^KMPD(8973.3,"C",$E(X,1,50),DA)
"^DD",8973.3,8973.3,2.01,1,1,"DT")
3080630
"^DD",8973.3,8973.3,2.01,3)
Answer must be 1-50 characters in length
"^DD",8973.3,8973.3,2.01,"DT")
3080701
"^DD",8973.3,8973.3,10,0)
DEFINITION^8973.31^^10;0
"^DD",8973.3,8973.31,0)
DEFINITION SUB-FIELD^^.01^1
"^DD",8973.3,8973.31,0,"DT")
3080630
"^DD",8973.3,8973.31,0,"NM","DEFINITION")

"^DD",8973.3,8973.31,0,"UP")
8973.3
"^DD",8973.3,8973.31,.01,0)
DEFINITION^Wx^^0;1
"^DD",8973.3,8973.31,.01,"DT")
3080630
"^DIC",8972.1,8972.1,0)
CP CODE EVALUATOR^8972.1
"^DIC",8972.1,8972.1,0,"GL")
^KMPD(8972.1,
"^DIC",8972.1,8972.1,"%",0)
^1.005^^0
"^DIC",8972.1,"B","CP CODE EVALUATOR",8972.1)

"^DIC",8972.3,8972.3,0)
CP DATA ELEMENTS^8972.3
"^DIC",8972.3,8972.3,0,"GL")
^KMPD(8972.3,
"^DIC",8972.3,8972.3,"%",0)
^1.005^^0
"^DIC",8972.3,8972.3,"%D",0)
^^5^5^3040415^
"^DIC",8972.3,8972.3,"%D",1,0)
This file holds CP EVALUATOR data, and the data elements gathered for 
"^DIC",8972.3,8972.3,"%D",2,0)
each entry.  It is used from the CP EVALUATOR application to compare 
"^DIC",8972.3,8972.3,"%D",3,0)
system impacts before and after routine changes.
"^DIC",8972.3,8972.3,"%D",4,0)
 
"^DIC",8972.3,8972.3,"%D",5,0)
    *** THE DATA IN THIS FILE SHOULD NOT BE CHANGED IN ANY WAY BY SITES***
"^DIC",8972.3,"B","CP DATA ELEMENTS",8972.3)

"^DIC",8973,8973,0)
CP PARAMETERS^8973
"^DIC",8973,8973,0,"GL")
^KMPD(8973,
"^DIC",8973,8973,"%",0)
^1.005^^0
"^DIC",8973,8973,"%D",0)
^^5^5^3040401^
"^DIC",8973,8973,"%D",1,0)
This file keeps track of all editable parameters for Capacity Planning 
"^DIC",8973,8973,"%D",2,0)
packages.  It also stores Start, Stop and Delta times for background 
"^DIC",8973,8973,"%D",3,0)
jobs, as well as CPU Node data.  There is only one entry allowed in this 
"^DIC",8973,8973,"%D",4,0)
file, and is a pointer to the Institution file taken from the first piece 
"^DIC",8973,8973,"%D",5,0)
of the $$SITE^VASITE extrinsic function.
"^DIC",8973,"B","CP PARAMETERS",8973)

"^DIC",8973.1,8973.1,0)
CM HL7 DATA^8973.1
"^DIC",8973.1,8973.1,0,"GL")
^KMPD(8973.1,
"^DIC",8973.1,8973.1,"%",0)
^1.005^^0
"^DIC",8973.1,8973.1,"%D",0)
^^1^1^3010820^
"^DIC",8973.1,8973.1,"%D",1,0)
Holds HL7 daily statistics.
"^DIC",8973.1,"B","CM HL7 DATA",8973.1)

"^DIC",8973.2,8973.2,0)
CP TIMING^8973.2
"^DIC",8973.2,8973.2,0,"GL")
^KMPD(8973.2,
"^DIC",8973.2,8973.2,"%",0)
^1.005^^0
"^DIC",8973.2,"B","CP TIMING",8973.2)

"^DIC",8973.3,8973.3,0)
CP REPORTS^8973.3
"^DIC",8973.3,8973.3,0,"GL")
^KMPD(8973.3,
"^DIC",8973.3,"B","CP REPORTS",8973.3)

**END**
**END**
