Released IVM*2*151 SEQ #127
Extracted from mail message
**KIDS**:IVM*2.0*151^

**INSTALL NAME**
IVM*2.0*151
"BLD",8398,0)
IVM*2.0*151^INCOME VERIFICATION MATCH^0^3111116^y
"BLD",8398,4,0)
^9.64PA^^
"BLD",8398,6.3)
10
"BLD",8398,"ABPKG")
n
"BLD",8398,"INI")

"BLD",8398,"INIT")
EP^IVM2151P
"BLD",8398,"KRN",0)
^9.67PA^779.2^20
"BLD",8398,"KRN",.4,0)
.4
"BLD",8398,"KRN",.401,0)
.401
"BLD",8398,"KRN",.402,0)
.402
"BLD",8398,"KRN",.403,0)
.403
"BLD",8398,"KRN",.5,0)
.5
"BLD",8398,"KRN",.84,0)
.84
"BLD",8398,"KRN",3.6,0)
3.6
"BLD",8398,"KRN",3.8,0)
3.8
"BLD",8398,"KRN",3.8,"NM",0)
^9.68A^^0
"BLD",8398,"KRN",9.2,0)
9.2
"BLD",8398,"KRN",9.8,0)
9.8
"BLD",8398,"KRN",9.8,"NM",0)
^9.68A^131^6
"BLD",8398,"KRN",9.8,"NM",115,0)
IVMPREC6^^0^B142485762
"BLD",8398,"KRN",9.8,"NM",117,0)
IVMPREC8^^0^B213937231
"BLD",8398,"KRN",9.8,"NM",128,0)
IVMPTRN8^^0^B74907432
"BLD",8398,"KRN",9.8,"NM",129,0)
IVMPRECA^^0^B87617069
"BLD",8398,"KRN",9.8,"NM",130,0)
IVM2151P^^0^B5786239
"BLD",8398,"KRN",9.8,"NM",131,0)
IVMPREC9^^0^B65534530
"BLD",8398,"KRN",9.8,"NM","B","IVM2151P",130)

"BLD",8398,"KRN",9.8,"NM","B","IVMPREC6",115)

"BLD",8398,"KRN",9.8,"NM","B","IVMPREC8",117)

"BLD",8398,"KRN",9.8,"NM","B","IVMPREC9",131)

"BLD",8398,"KRN",9.8,"NM","B","IVMPRECA",129)

"BLD",8398,"KRN",9.8,"NM","B","IVMPTRN8",128)

"BLD",8398,"KRN",19,0)
19
"BLD",8398,"KRN",19,"NM",0)
^9.68A^^0
"BLD",8398,"KRN",19.1,0)
19.1
"BLD",8398,"KRN",19.1,"NM",0)
^9.68A^^0
"BLD",8398,"KRN",101,0)
101
"BLD",8398,"KRN",101,"NM",0)
^9.68A^^0
"BLD",8398,"KRN",409.61,0)
409.61
"BLD",8398,"KRN",409.61,"NM",0)
^9.68A^^0
"BLD",8398,"KRN",771,0)
771
"BLD",8398,"KRN",771,"NM",0)
^9.68A^^0
"BLD",8398,"KRN",779.2,0)
779.2
"BLD",8398,"KRN",870,0)
870
"BLD",8398,"KRN",8989.51,0)
8989.51
"BLD",8398,"KRN",8989.52,0)
8989.52
"BLD",8398,"KRN",8994,0)
8994
"BLD",8398,"KRN","B",.4,.4)

"BLD",8398,"KRN","B",.401,.401)

"BLD",8398,"KRN","B",.402,.402)

"BLD",8398,"KRN","B",.403,.403)

"BLD",8398,"KRN","B",.5,.5)

"BLD",8398,"KRN","B",.84,.84)

"BLD",8398,"KRN","B",3.6,3.6)

"BLD",8398,"KRN","B",3.8,3.8)

"BLD",8398,"KRN","B",9.2,9.2)

"BLD",8398,"KRN","B",9.8,9.8)

"BLD",8398,"KRN","B",19,19)

"BLD",8398,"KRN","B",19.1,19.1)

"BLD",8398,"KRN","B",101,101)

"BLD",8398,"KRN","B",409.61,409.61)

"BLD",8398,"KRN","B",771,771)

"BLD",8398,"KRN","B",779.2,779.2)

"BLD",8398,"KRN","B",870,870)

"BLD",8398,"KRN","B",8989.51,8989.51)

"BLD",8398,"KRN","B",8989.52,8989.52)

"BLD",8398,"KRN","B",8994,8994)

"BLD",8398,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",8398,"QUES",0)
^9.62^^
"BLD",8398,"REQB",0)
^9.611^3^1
"BLD",8398,"REQB",3,0)
IVM*2.0*148^2
"BLD",8398,"REQB","B","IVM*2.0*148",3)

"INIT")
EP^IVM2151P
"MBREQ")
0
"PKG",120,-1)
1^1
"PKG",120,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",120,20,0)
^9.402P^^
"PKG",120,22,0)
^9.49I^1^1
"PKG",120,22,1,0)
2.0^2941021^2960823
"PKG",120,22,1,"PAH",1,0)
151^3111116^123456989
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","IVM2151P")
0^130^B5786239^n/a
"RTN","IVM2151P",1,0)
IVM2151P ;ALB/LBD - Patch IVM*2*151 Install Utility Routine ; 7/19/11 11:20am
"RTN","IVM2151P",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**151**;21-OCT-94;Build 10
"RTN","IVM2151P",3,0)
 Q
"RTN","IVM2151P",4,0)
 ;
"RTN","IVM2151P",5,0)
EP ;Entry point - Driver
"RTN","IVM2151P",6,0)
 N ABORT,FILE,I,ELEMNT,EXIST,IVMDATA,DATA,SUB,J,VALUE,FILEFLG,DIERR,ERROR
"RTN","IVM2151P",7,0)
 ;
"RTN","IVM2151P",8,0)
 S (ABORT,FILEFLG)=0,FILE=301.92
"RTN","IVM2151P",9,0)
 F I=1:1 S ELEMNT=$P($T(TEXT+I),";;",2) Q:ELEMNT="QUIT"!(ABORT)  D
"RTN","IVM2151P",10,0)
 . S EXIST=0
"RTN","IVM2151P",11,0)
 . K IVMDATA S (DATA,SUB)="" F J=1:1:$L(ELEMNT,";") S DATA=$P(ELEMNT,";",J) D  Q:EXIST
"RTN","IVM2151P",12,0)
 . . S SUB=$P(DATA,"~",1),VALUE=$P(DATA,"~",2),IVMDATA(SUB)=VALUE
"RTN","IVM2151P",13,0)
 . . I SUB=.01 S EXIST=$$FIND1^DIC(FILE,,,IVMDATA(.01))
"RTN","IVM2151P",14,0)
 . I 'EXIST D
"RTN","IVM2151P",15,0)
 . . S FILEFLG=$$ADD(FILE,.IVMDATA)
"RTN","IVM2151P",16,0)
 . . I FILEFLG D MES^XPDUTL("Added - "_$G(IVMDATA(.01)))
"RTN","IVM2151P",17,0)
 . . I 'FILEFLG D
"RTN","IVM2151P",18,0)
 . . . S ABORT=1,XPDABORT=2
"RTN","IVM2151P",19,0)
 . . . D BMES^XPDUTL("Install process could not add an entry in file for "_$G(IVMDATA(.01)))
"RTN","IVM2151P",20,0)
 . . . D BMES^XPDUTL("                        <<<< INSTALLATION ABORTED >>>>")
"RTN","IVM2151P",21,0)
 I 'ABORT D BMES^XPDUTL("<<<< Post Install Successful >>>>")
"RTN","IVM2151P",22,0)
 Q
"RTN","IVM2151P",23,0)
 ;
"RTN","IVM2151P",24,0)
ADD(FILE,DATA) ;
"RTN","IVM2151P",25,0)
 ;Description: Creates a new record and files the data.
"RTN","IVM2151P",26,0)
 ; Input:
"RTN","IVM2151P",27,0)
 ;   FILE - File or sub-file number
"RTN","IVM2151P",28,0)
 ;   DATA - Data array to file, pass by reference
"RTN","IVM2151P",29,0)
 ;          Format: DATA(<field #>)=<value>
"RTN","IVM2151P",30,0)
 ;
"RTN","IVM2151P",31,0)
 ; Output:
"RTN","IVM2151P",32,0)
 ;   Function Value - If no error then it returns the ien of the created record, else returns NULL.
"RTN","IVM2151P",33,0)
 ;
"RTN","IVM2151P",34,0)
 N FDA,FIELD,IEN,IENA,IENS,ERRORS
"RTN","IVM2151P",35,0)
 ;
"RTN","IVM2151P",36,0)
 ;IENS - Internal Entry Number String defined by FM
"RTN","IVM2151P",37,0)
 ;IENA - the Internal Entry Numebr Array defined by FM
"RTN","IVM2151P",38,0)
 ;FDA - the FDA array defined by FM
"RTN","IVM2151P",39,0)
 ;IEN - the ien of the new record
"RTN","IVM2151P",40,0)
 ;
"RTN","IVM2151P",41,0)
 S IVMDA="+1"
"RTN","IVM2151P",42,0)
 S IENS=$$IENS^DILF(.IVMDA)
"RTN","IVM2151P",43,0)
 S FIELD=0
"RTN","IVM2151P",44,0)
 F  S FIELD=$O(DATA(FIELD)) Q:'FIELD  D
"RTN","IVM2151P",45,0)
 .S FDA(FILE,IENS,FIELD)=$G(DATA(FIELD))
"RTN","IVM2151P",46,0)
 I $G(IEN) S IENA(1)=IEN
"RTN","IVM2151P",47,0)
 D UPDATE^DIE("","FDA","IENA","ERRORS(1)")
"RTN","IVM2151P",48,0)
 I +$G(DIERR) D
"RTN","IVM2151P",49,0)
 .S ERROR=$G(ERRORS(1,"DIERR",1,"TEXT",1))
"RTN","IVM2151P",50,0)
 .S IEN=""
"RTN","IVM2151P",51,0)
 E  D
"RTN","IVM2151P",52,0)
 .S IEN=IENA(1)
"RTN","IVM2151P",53,0)
 .S ERROR=""
"RTN","IVM2151P",54,0)
 D CLEAN^DILF
"RTN","IVM2151P",55,0)
 Q IEN
"RTN","IVM2151P",56,0)
 ;
"RTN","IVM2151P",57,0)
TEXT ;;FIELD#~VALUE;FIELD#~VALUE;FIELD#~VALUE.....
"RTN","IVM2151P",58,0)
 ;;.01~FATHER'S NAME;.02~ZPD06;.03~1;.04~2;.05~.2401;.08~0;10~S DR=.2401 D LOOK^IVMPREC9;20~S DR=.2401 D LOOK^IVMPREC9
"RTN","IVM2151P",59,0)
 ;;.01~MOTHER'S NAME;.02~ZPD07;.03~1;.04~2;.05~.2402;.08~0;10~S DR=.2402 D LOOK^IVMPREC9;20~S DR=.2402 D LOOK^IVMPREC9
"RTN","IVM2151P",60,0)
 ;;QUIT
"RTN","IVMPREC6")
0^115^B142485762^B143009000
"RTN","IVMPREC6",1,0)
IVMPREC6 ;ALB/KCL/BRM/CKN,TDM,PWC - PROCESS INCOMING (Z05 EVENT TYPE) HL7 MESSAGES ; 7/18/11 5:36pm
"RTN","IVMPREC6",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**3,4,12,17,34,58,79,102,115,140,144,121,151**;21-OCT-94;Build 10
"RTN","IVMPREC6",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMPREC6",4,0)
 ;
"RTN","IVMPREC6",5,0)
 ; This routine will process batch ORU demographic (event type Z05) HL7
"RTN","IVMPREC6",6,0)
 ; messages received from the IVM center.  Format of HL7 batch message:
"RTN","IVMPREC6",7,0)
 ;
"RTN","IVMPREC6",8,0)
 ;       BHS
"RTN","IVMPREC6",9,0)
 ;       {MSH
"RTN","IVMPREC6",10,0)
 ;        PID
"RTN","IVMPREC6",11,0)
 ;        ZPD
"RTN","IVMPREC6",12,0)
 ;        ZTA
"RTN","IVMPREC6",13,0)
 ;        ZGD
"RTN","IVMPREC6",14,0)
 ;        ZCT (1 episode required, multiple possible)
"RTN","IVMPREC6",15,0)
 ;        ZEM (Veteran)
"RTN","IVMPREC6",16,0)
 ;        ZEM (Spouse - Optional)
"RTN","IVMPREC6",17,0)
 ;        RF1 (optional, multiple possible)
"RTN","IVMPREC6",18,0)
 ;       }
"RTN","IVMPREC6",19,0)
 ;       BTS
"RTN","IVMPREC6",20,0)
 ;
"RTN","IVMPREC6",21,0)
 ;
"RTN","IVMPREC6",22,0)
EN ; - entry point to process HL7 patient demographic message 
"RTN","IVMPREC6",23,0)
 ;
"RTN","IVMPREC6",24,0)
 N DGENUPLD,VAFCA08,DGRUGA08,COMP,DODSEG,GUARSEG
"RTN","IVMPREC6",25,0)
 ;N MULTDONE,XREP
"RTN","IVMPREC6",26,0)
 N XIVMA,IVMALADT,MULTIDONE
"RTN","IVMPREC6",27,0)
 ;
"RTN","IVMPREC6",28,0)
 ; Setup array to hold all the Allowed Address Types
"RTN","IVMPREC6",29,0)
 ;F XIVMA="N","P","VAB1","VAB2","VAB3","VAB4" S IVMALADT(XIVMA)=""
"RTN","IVMPREC6",30,0)
 F XIVMA="P","VAB1","VAB2","VAB3","VAB4" S IVMALADT(XIVMA)=""
"RTN","IVMPREC6",31,0)
 ; Define the Confidential Address Categories
"RTN","IVMPREC6",32,0)
 ;S IVMALADT("VACAE")="CA^1"      ; ELIGIBILITY/ENROLLMENT
"RTN","IVMPREC6",33,0)
 ;S IVMALADT("VACAA")="CA^2"      ; APPOINTMENT/SCHEDULING
"RTN","IVMPREC6",34,0)
 ;S IVMALADT("VACAC")="CA^3"      ; COPAYMENTS/VETERAN BILLING
"RTN","IVMPREC6",35,0)
 ;S IVMALADT("VACAM")="CA^4"      ; MEDICAL RECORDS
"RTN","IVMPREC6",36,0)
 ;S IVMALADT("VACAO")="CA^5"      ; ALL OTHERS
"RTN","IVMPREC6",37,0)
 ; prevent a return Z07 when uploading a Z05 (Patient file triggers)
"RTN","IVMPREC6",38,0)
 S DGENUPLD="ENROLLMENT/ELIGIBILITY UPLOAD IN PROGRESS"
"RTN","IVMPREC6",39,0)
 ;
"RTN","IVMPREC6",40,0)
 ; prevent MPI A08 message when uploading Z05 (Patient file triggers)
"RTN","IVMPREC6",41,0)
 S VAFCA08=1  ;MPI/CIRN A08 suppression flag
"RTN","IVMPREC6",42,0)
 ;
"RTN","IVMPREC6",43,0)
 S IVMFLG=0,IVMADFLG=0
"RTN","IVMPREC6",44,0)
 ; - get incoming HL7 message from HL7 Transmission (#772) file
"RTN","IVMPREC6",45,0)
 F IVMDA=0:0 S IVMDA=$O(^TMP($J,IVMRTN,IVMDA)) Q:'IVMDA  S IVMSEG=$G(^(IVMDA,0)) I $E(IVMSEG,1,3)="MSH" D
"RTN","IVMPREC6",46,0)
 .K HLERR,ZEMADRUP
"RTN","IVMPREC6",47,0)
 .S IVMTSTPT=""                          ;Initialize Temp Addr County
"RTN","IVMPREC6",48,0)
 .;
"RTN","IVMPREC6",49,0)
 .; - message control id from MSH segment
"RTN","IVMPREC6",50,0)
 .S MSGID=$P(IVMSEG,HLFS,10),HLMID=MSGID
"RTN","IVMPREC6",51,0)
 .;
"RTN","IVMPREC6",52,0)
 .; - perform demographics message consistency check
"RTN","IVMPREC6",53,0)
 .D EN^IVMPRECA Q:$D(HLERR)
"RTN","IVMPREC6",54,0)
 .;
"RTN","IVMPREC6",55,0)
 .;Set array of Email, Cell, Pager fields
"RTN","IVMPREC6",56,0)
 .D EPCFLDS(.EPCFARY,.EPCDEL)
"RTN","IVMPREC6",57,0)
 .D AUPBLD(.AUPFARY,.UPDAUPG)
"RTN","IVMPREC6",58,0)
 .; - get next msg segment
"RTN","IVMPREC6",59,0)
 .D NEXT I $E(IVMSEG,1,3)'="PID" D  Q
"RTN","IVMPREC6",60,0)
 ..S HLERR="Missing PID segment" D ACK^IVMPREC
"RTN","IVMPREC6",61,0)
 .;
"RTN","IVMPREC6",62,0)
 .F I=1:1 D NEXT Q:$E(IVMSEG,1,4)="ZPD^"  ;Go through all PID
"RTN","IVMPREC6",63,0)
 .; - patient IEN (DFN) from PID segment
"RTN","IVMPREC6",64,0)
 .;Use IVMPID array created in IVMPRECA while performing consistency
"RTN","IVMPREC6",65,0)
 .;to process PID segment
"RTN","IVMPREC6",66,0)
 .;
"RTN","IVMPREC6",67,0)
 .;I '$G(IVMDFN) S HLERR="Invalid DFN" D ACK^IVMPREC  Q
"RTN","IVMPREC6",68,0)
 .S DFN=$G(IVMDFN)
"RTN","IVMPREC6",69,0)
 .;I ('DFN!(DFN'=+DFN)!('$D(^DPT(+DFN,0)))) D  Q
"RTN","IVMPREC6",70,0)
 .;.S HLERR="Invalid DFN" D ACK^IVMPREC
"RTN","IVMPREC6",71,0)
 .;I IVMPID(19)'=$P(^DPT(DFN,0),"^",9) D  Q
"RTN","IVMPREC6",72,0)
 .;.S HLERR="Couldn't match HEC SSN with DHCP SSN" D ACK^IVMPREC
"RTN","IVMPREC6",73,0)
 .;
"RTN","IVMPREC6",74,0)
 .; - check for entry in IVM PATIENT file, otherwise create stub entry
"RTN","IVMPREC6",75,0)
 .S IVM3015=$O(^IVM(301.5,"B",DFN,0))
"RTN","IVMPREC6",76,0)
 .I 'IVM3015 S IVM3015=$$LOG^IVMPLOG(DFN,DT)
"RTN","IVMPREC6",77,0)
 .I 'IVM3015 D  Q
"RTN","IVMPREC6",78,0)
 ..S HLERR="Failed to create entry in IVM PATIENT file"
"RTN","IVMPREC6",79,0)
 ..D ACK^IVMPREC
"RTN","IVMPREC6",80,0)
 .;
"RTN","IVMPREC6",81,0)
 .; - compare PID segment fields with DHCP fields
"RTN","IVMPREC6",82,0)
 .S IVMSEG="PID"  ;Setting IVMSEG to PID before it calls COMPARE
"RTN","IVMPREC6",83,0)
 .I 'DODSEG,'GUARSEG D COMPARE(IVMSEG) Q:$D(HLERR)
"RTN","IVMPREC6",84,0)
 .;
"RTN","IVMPREC6",85,0)
 .; - get next msg segment -decrement the counter so it can pickup ZPD
"RTN","IVMPREC6",86,0)
 .S IVMDA=IVMDA-1 D NEXT I $E(IVMSEG,1,3)'="ZPD" D  Q
"RTN","IVMPREC6",87,0)
 ..S HLERR="Missing ZPD segment" D ACK^IVMPREC
"RTN","IVMPREC6",88,0)
 .;Convert "" to null in ZPD segment except seq. 8,9, 31 and 32
"RTN","IVMPREC6",89,0)
 .S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS,",9,10,32,33,")
"RTN","IVMPREC6",90,0)
 .;
"RTN","IVMPREC6",91,0)
 .; - compare ZPD segment fields with DHCP fields
"RTN","IVMPREC6",92,0)
 .D COMPARE(IVMSEG)
"RTN","IVMPREC6",93,0)
 .;
"RTN","IVMPREC6",94,0)
 .; - get next msg segment
"RTN","IVMPREC6",95,0)
 .D NEXT I $E(IVMSEG,1,3)="ZEL" D  Q
"RTN","IVMPREC6",96,0)
 ..S HLERR="ZEL segment should not be sent in Z05 message" D ACK^IVMPREC
"RTN","IVMPREC6",97,0)
 .;
"RTN","IVMPREC6",98,0)
 .I $E(IVMSEG,1,3)'="ZTA" D  Q
"RTN","IVMPREC6",99,0)
 ..S HLERR="Missing ZTA segment" D ACK^IVMPREC
"RTN","IVMPREC6",100,0)
 .;Convert "" to null in ZTA segment seq. 7
"RTN","IVMPREC6",101,0)
 .I $P(IVMSEG,HLFS,8)=HLQ S $P(IVMSEG,HLFS,8)=""
"RTN","IVMPREC6",102,0)
 .;
"RTN","IVMPREC6",103,0)
 .; - compare ZTA segment fields with DHCP fields
"RTN","IVMPREC6",104,0)
 .I 'DODSEG,'GUARSEG D COMPARE(IVMSEG)
"RTN","IVMPREC6",105,0)
 .D NEXT
"RTN","IVMPREC6",106,0)
 .;
"RTN","IVMPREC6",107,0)
 .; - get next msg segment
"RTN","IVMPREC6",108,0)
 .I $E(IVMSEG,1,3)'="ZGD" D  Q
"RTN","IVMPREC6",109,0)
 ..S HLERR="Missing ZGD segment" D ACK^IVMPREC
"RTN","IVMPREC6",110,0)
 .;
"RTN","IVMPREC6",111,0)
 .; - compare ZGD segment fields with DHCP fields
"RTN","IVMPREC6",112,0)
 .; convert "" to null for ZGD segment
"RTN","IVMPREC6",113,0)
 .S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS,",7,") ;ignore seq. 6
"RTN","IVMPREC6",114,0)
 .; convert seq. 6 separately
"RTN","IVMPREC6",115,0)
 .S $P(IVMSEG,HLFS,7)=$$CLEARF^IVMPRECA($P(IVMSEG,HLFS,7),$E(HLECH))
"RTN","IVMPREC6",116,0)
 .D COMPARE(IVMSEG)
"RTN","IVMPREC6",117,0)
 .;S IVMFLG=0
"RTN","IVMPREC6",118,0)
 .;
"RTN","IVMPREC6",119,0)
 .;S MULTDONE=0 F XREP=1:1 D  Q:MULTDONE  ;Skip ZCT & ZEM -coming later
"RTN","IVMPREC6",120,0)
 .;.D NEXT
"RTN","IVMPREC6",121,0)
 .;.I ($E(IVMSEG,1,3)'="ZCT")&($E(IVMSEG,1,3)'="ZEM") S MULTDONE=1 Q
"RTN","IVMPREC6",122,0)
 .;S IVMDA=IVMDA-1
"RTN","IVMPREC6",123,0)
 .;
"RTN","IVMPREC6",124,0)
 .; - get next msg segment
"RTN","IVMPREC6",125,0)
 .D NEXT
"RTN","IVMPREC6",126,0)
 .I $E(IVMSEG,1,3)'="ZCT" D  Q
"RTN","IVMPREC6",127,0)
 ..S HLERR="Missing ZCT segment" D ACK^IVMPREC
"RTN","IVMPREC6",128,0)
 .S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS)
"RTN","IVMPREC6",129,0)
 .I 'DODSEG,'GUARSEG D COMPARE(IVMSEG)   ;Process 1st ZCT
"RTN","IVMPREC6",130,0)
 .S MULTDONE=0 F XREP=1:1 D  Q:MULTDONE  ;Handle possible mult ZCTs
"RTN","IVMPREC6",131,0)
 ..D NEXT I $E(IVMSEG,1,3)'="ZCT" S MULTDONE=1 Q
"RTN","IVMPREC6",132,0)
 ..S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS)
"RTN","IVMPREC6",133,0)
 ..I 'DODSEG,'GUARSEG D COMPARE(IVMSEG)
"RTN","IVMPREC6",134,0)
 .;
"RTN","IVMPREC6",135,0)
 .S IVMDA=IVMDA-1 D NEXT
"RTN","IVMPREC6",136,0)
 .I $E(IVMSEG,1,3)'="ZEM" D  Q
"RTN","IVMPREC6",137,0)
 ..S HLERR="Missing ZEM segment" D ACK^IVMPREC
"RTN","IVMPREC6",138,0)
 .I 'DODSEG,'GUARSEG D COMPARE(IVMSEG)   ;Process 1st ZEM
"RTN","IVMPREC6",139,0)
 .S MULTDONE=0 F XREP=1:1 D  Q:MULTDONE  ;Handle possible mult ZEMs
"RTN","IVMPREC6",140,0)
 ..D NEXT I $E(IVMSEG,1,3)'="ZEM" S MULTDONE=1 Q
"RTN","IVMPREC6",141,0)
 ..I 'DODSEG,'GUARSEG D COMPARE(IVMSEG)
"RTN","IVMPREC6",142,0)
 .S IVMDA=IVMDA-1
"RTN","IVMPREC6",143,0)
 .;
"RTN","IVMPREC6",144,0)
 .; - check for RF1 segment and get segment if it exists
"RTN","IVMPREC6",145,0)
 .;     This process will automatically update patient address data
"RTN","IVMPREC6",146,0)
 .;     in the Patient (#2) file if the incoming address is more
"RTN","IVMPREC6",147,0)
 .;     recent than the existing one.
"RTN","IVMPREC6",148,0)
 .;Modified code to handle multiple RF1 segment - IVM*2*115
"RTN","IVMPREC6",149,0)
 .S (UPDEPC("SAD"),UPDEPC("CPH"),UPDEPC("PNO"),UPDEPC("EAD"))=0
"RTN","IVMPREC6",150,0)
 .S QFLG=0 I $$RF1CHK(IVMRTN,IVMDA) F I=1:1 D  Q:QFLG
"RTN","IVMPREC6",151,0)
 ..D NEXT
"RTN","IVMPREC6",152,0)
 ..S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS,",7,") ;ignore seq. 6
"RTN","IVMPREC6",153,0)
 ..S $P(IVMSEG,HLFS,7)=$$CLEARF^IVMPRECA($P(IVMSEG,HLFS,7),$E(HLECH))
"RTN","IVMPREC6",154,0)
 ..I $P(IVMSEG,HLFS,4)="" S QFLG=1 Q  ;Quit if RF1 is blank
"RTN","IVMPREC6",155,0)
 ..D COMPARE(IVMSEG)
"RTN","IVMPREC6",156,0)
 ..I '$$RF1CHK(IVMRTN,IVMDA) S QFLG=1
"RTN","IVMPREC6",157,0)
 .D AUTOAUP^IVMPREC9(DFN,.UPDAUP,.UPDAUPG)
"RTN","IVMPREC6",158,0)
 .S IVMFLG=0
"RTN","IVMPREC6",159,0)
 ;
"RTN","IVMPREC6",160,0)
 ; - send mail message if necessary
"RTN","IVMPREC6",161,0)
 ; This bulletin has been disabled.  IVM*2*140
"RTN","IVMPREC6",162,0)
 ;I IVMCNTR D MAIL^IVMUFNC()
"RTN","IVMPREC6",163,0)
 ; Cleanup variables if no msg necessary
"RTN","IVMPREC6",164,0)
 I 'IVMCNTR K IVMTEXT,XMSUB
"RTN","IVMPREC6",165,0)
 ;
"RTN","IVMPREC6",166,0)
ENQ ; - cleanup variables
"RTN","IVMPREC6",167,0)
 K DA,DFN,IVMADDR,IVMADFLG,IVMDA,IVMDHCP,IVMFLAG,IVMFLD,IVMPIECE,IVMSEG,IVMSTART,IVMXREF,DGENUPLD,IVMPID,PIDSTR,ADDRESS,TELECOM,UPDEPC,EPCFARY,IVMDFN,DODSEG,EPCDEL,GUARSEG,UPDAUP,IVMRACE,IVMTSTPT
"RTN","IVMPREC6",168,0)
 Q
"RTN","IVMPREC6",169,0)
 ;
"RTN","IVMPREC6",170,0)
 ;
"RTN","IVMPREC6",171,0)
NEXT ; - get the next HL7 segment in the message from HL7 Transmission (#772) file
"RTN","IVMPREC6",172,0)
 ;
"RTN","IVMPREC6",173,0)
 S IVMDA=$O(^TMP($J,IVMRTN,IVMDA)),IVMSEG=$G(^(+IVMDA,0))
"RTN","IVMPREC6",174,0)
 Q
"RTN","IVMPREC6",175,0)
 ;
"RTN","IVMPREC6",176,0)
 ;
"RTN","IVMPREC6",177,0)
COMPARE(IVMSEG) ; - compare incoming HL7 segment/fields with DHCP fields
"RTN","IVMPREC6",178,0)
 ;
"RTN","IVMPREC6",179,0)
 ;  Input:  IVMSEG  --  as the text of the incoming HL7 message
"RTN","IVMPREC6",180,0)
 ;
"RTN","IVMPREC6",181,0)
 ; Output:  None
"RTN","IVMPREC6",182,0)
 ;
"RTN","IVMPREC6",183,0)
 ; - get 3 letter HL7 segment name
"RTN","IVMPREC6",184,0)
 S IVMXREF=$P(IVMSEG,HLFS,1),IVMSTART=IVMXREF
"RTN","IVMPREC6",185,0)
 ;
"RTN","IVMPREC6",186,0)
 ; - strip off HL7 segment name
"RTN","IVMPREC6",187,0)
 S IVMSEG=$P(IVMSEG,HLFS,2,99)
"RTN","IVMPREC6",188,0)
 ;
"RTN","IVMPREC6",189,0)
 ; - roll through "C" x-ref in IVM Demographic Upload Fields (#301.92) file
"RTN","IVMPREC6",190,0)
 F  S IVMXREF=$O(^IVM(301.92,"C",IVMXREF)) Q:IVMXREF']""  D
"RTN","IVMPREC6",191,0)
 .S IVMDEMDA=$O(^IVM(301.92,"C",IVMXREF,"")) Q:IVMDEMDA']""
"RTN","IVMPREC6",192,0)
 .I $$INACTIVE(IVMDEMDA) Q
"RTN","IVMPREC6",193,0)
 .;
"RTN","IVMPREC6",194,0)
 .; - compare incoming HL7 segment fields with DHCP fields
"RTN","IVMPREC6",195,0)
 .I IVMXREF["PID",(IVMSTART["PID") D PID^IVMPREC8
"RTN","IVMPREC6",196,0)
 .I IVMXREF["ZPD",(IVMSTART["ZPD") D ZPD^IVMPREC8
"RTN","IVMPREC6",197,0)
 .I IVMXREF["ZTA",(IVMSTART["ZTA") D ZTA^IVMPREC8
"RTN","IVMPREC6",198,0)
 .I IVMXREF["ZGD",(IVMSTART["ZGD") D ZGD^IVMPREC8
"RTN","IVMPREC6",199,0)
 .I IVMXREF["ZCT",(IVMSTART["ZCT") D ZCT^IVMPREC8
"RTN","IVMPREC6",200,0)
 .I IVMXREF["ZEM",(IVMSTART["ZEM") D ZEM^IVMPREC8
"RTN","IVMPREC6",201,0)
 .I IVMXREF["RF1",(IVMSTART["RF1") D RF1^IVMPREC8
"RTN","IVMPREC6",202,0)
 Q
"RTN","IVMPREC6",203,0)
 ;
"RTN","IVMPREC6",204,0)
 ;
"RTN","IVMPREC6",205,0)
DEMBULL ; -  build mail message for transmission to IVM mail group notifying
"RTN","IVMPREC6",206,0)
 ;    them that patients with updated demographic data has been received
"RTN","IVMPREC6",207,0)
 ;    from the IVM Center and may now be uploaded into DHCP.
"RTN","IVMPREC6",208,0)
 ;
"RTN","IVMPREC6",209,0)
 ; If record is auto uploaded, don't add veteran to bulletin
"RTN","IVMPREC6",210,0)
 I $$CKAUTO Q
"RTN","IVMPREC6",211,0)
 ;
"RTN","IVMPREC6",212,0)
 S IVMPTID=$$PT^IVMUFNC4(DFN)
"RTN","IVMPREC6",213,0)
 S XMSUB="IVM - DEMOGRAPHIC UPLOAD for "_$P($P(IVMPTID,"^"),",")_" ("_$P(IVMPTID,"^",3)_")"
"RTN","IVMPREC6",214,0)
 S IVMTEXT(1)="Updated demographic information has been received from the"
"RTN","IVMPREC6",215,0)
 S IVMTEXT(2)="Health Eligibilty Center.  Please select the 'Demographic Upload'"
"RTN","IVMPREC6",216,0)
 S IVMTEXT(3)="option from the IVM Upload Menu in order to take action on this"
"RTN","IVMPREC6",217,0)
 S IVMTEXT(4)="demographic information.  If you have any questions concerning the"
"RTN","IVMPREC6",218,0)
 S IVMTEXT(5)="information received, please contact the Health Eligibility Center."
"RTN","IVMPREC6",219,0)
 S IVMTEXT(7)=""
"RTN","IVMPREC6",220,0)
 S IVMTEXT(8)="The Health Eligibilty Center has identified the following"
"RTN","IVMPREC6",221,0)
 S IVMTEXT(9)="patients as having updated demographic information:"
"RTN","IVMPREC6",222,0)
 S IVMTEXT(10)=""
"RTN","IVMPREC6",223,0)
 S IVMCNTR=IVMCNTR+1
"RTN","IVMPREC6",224,0)
 S IVMTEXT(IVMCNTR+10)=$J(IVMCNTR_")",5)_"  "_$P(IVMPTID,"^")_" ("_$P(IVMPTID,"^",3)_")"
"RTN","IVMPREC6",225,0)
 Q
"RTN","IVMPREC6",226,0)
 ;
"RTN","IVMPREC6",227,0)
INACTIVE(IVMDEMDA) ;Check if field is inactive in Demographic Upload
"RTN","IVMPREC6",228,0)
 ; Input  -- IVMDEMDA IVM Demographic Upload Fields IEN
"RTN","IVMPREC6",229,0)
 ; Output -- 1=Yes and 0=No
"RTN","IVMPREC6",230,0)
 Q +$P($G(^IVM(301.92,IVMDEMDA,0)),U,9)
"RTN","IVMPREC6",231,0)
 ;
"RTN","IVMPREC6",232,0)
RF1CHK(IVMRTN,IVMDA) ;does an RF1 segment exist in this message?
"RTN","IVMPREC6",233,0)
 N RF1
"RTN","IVMPREC6",234,0)
 S RF1=$O(^TMP($J,IVMRTN,IVMDA))
"RTN","IVMPREC6",235,0)
 I $E($G(^(+RF1,0)),1,3)'="RF1" Q 0
"RTN","IVMPREC6",236,0)
 Q 1
"RTN","IVMPREC6",237,0)
 ;
"RTN","IVMPREC6",238,0)
CKAUTO() ;
"RTN","IVMPREC6",239,0)
 ; Chect if message qualifies for an auto upload.
"RTN","IVMPREC6",240,0)
 N AUTO,IVMI,DOD
"RTN","IVMPREC6",241,0)
 S AUTO=0,IVMI=$O(^IVM(301.92,"C","ZPD09",""))
"RTN","IVMPREC6",242,0)
 I IVMI=IVMDEMDA  D
"RTN","IVMPREC6",243,0)
 .I +IVMFLD'>0 S AUTO=1 Q
"RTN","IVMPREC6",244,0)
 .S DOD=$P($G(^DPT(DFN,.35)),U)
"RTN","IVMPREC6",245,0)
 .I DOD=IVMFLD S AUTO=1 Q
"RTN","IVMPREC6",246,0)
 ;
"RTN","IVMPREC6",247,0)
 Q AUTO
"RTN","IVMPREC6",248,0)
BLDPID(PIDTMP,IVMPID) ;Build IVMPID subscripted by sequence number
"RTN","IVMPREC6",249,0)
 N STR,X1,X2,N,TEXT,C,L
"RTN","IVMPREC6",250,0)
 S STR="",X1=1,(N,X2)=0
"RTN","IVMPREC6",251,0)
 F  S N=$O(PIDTMP(N)) Q:N=""  S TEXT=PIDTMP(N) F L=1:1:$L(TEXT) S C=$E(TEXT,L) D
"RTN","IVMPREC6",252,0)
 . I C="^" D  Q
"RTN","IVMPREC6",253,0)
 . . I X2 S X2=X2+1,IVMPID(X1,X2)=STR
"RTN","IVMPREC6",254,0)
 . . E  S IVMPID(X1)=STR
"RTN","IVMPREC6",255,0)
 . . S STR="",X1=X1+1,X2=0
"RTN","IVMPREC6",256,0)
 . I C="|" D  Q
"RTN","IVMPREC6",257,0)
 . . S X2=X2+1,IVMPID(X1,X2)=STR,STR=""
"RTN","IVMPREC6",258,0)
 . S STR=STR_C
"RTN","IVMPREC6",259,0)
 I $G(C)'="",$G(C)'="^",$G(C)'="|" D
"RTN","IVMPREC6",260,0)
 . I X2 S X2=X2+1,IVMPID(X1,X2)=STR Q
"RTN","IVMPREC6",261,0)
 . S IVMPID(X1)=STR
"RTN","IVMPREC6",262,0)
 Q
"RTN","IVMPREC6",263,0)
ADDRCHNG(DFN) ;Store Address Change Date/time, Source and site if necessary
"RTN","IVMPREC6",264,0)
 N IVMVALUE,IVMFIELD
"RTN","IVMPREC6",265,0)
 I '$D(^TMP($J,"CHANGE UPDATE")) Q
"RTN","IVMPREC6",266,0)
 S IVMFIELD=0 F  S IVMFIELD=$O(^TMP($J,"CHANGE UPDATE",IVMFIELD)) Q:IVMFIELD=""  D
"RTN","IVMPREC6",267,0)
 . S IVMVALUE=$G(^TMP($J,"CHANGE UPDATE",IVMFIELD))
"RTN","IVMPREC6",268,0)
 . S DIE="^DPT(",DA=DFN,DR=IVMFIELD_"////^S X=IVMVALUE"
"RTN","IVMPREC6",269,0)
 . D ^DIE K DA,DIE,DR
"RTN","IVMPREC6",270,0)
 .; - delete inaccurate Addr Change Site data if Source is not VAMC
"RTN","IVMPREC6",271,0)
 . I IVMFIELD=.119,IVMVALUE'="VAMC" S FDA(2,+DFN_",",.12)="@" D UPDATE^DIE("E","FDA")
"RTN","IVMPREC6",272,0)
 K ^TMP($J,"CHANGE UPDATE")
"RTN","IVMPREC6",273,0)
 Q
"RTN","IVMPREC6",274,0)
EPCFLDS(EPCFARY,EPCDEL) ;
"RTN","IVMPREC6",275,0)
 ;EPCFARY - Contains IENs of Pager, email and Cell phone records in 301.92 File - Passed by reference
"RTN","IVMPREC6",276,0)
 ;EPCDEL - Contains field # of Pager, Email and Cell phone fields in Patient(#2) file. - Passed by reference
"RTN","IVMPREC6",277,0)
 I (DODSEG)!(GUARSEG) Q
"RTN","IVMPREC6",278,0)
 S EPCFARY("PNO")=$O(^IVM(301.92,"B","PAGER NUMBER",0))_"^"_$O(^IVM(301.92,"B","PAGER CHANGE DT/TM",0))_"^"_$O(^IVM(301.92,"B","PAGER CHANGE SITE",0))_"^"_$O(^IVM(301.92,"B","PAGER CHANGE SOURCE",0))
"RTN","IVMPREC6",279,0)
 S EPCFARY("CPH")=$O(^IVM(301.92,"B","CELLULAR NUMBER",0))_"^"_$O(^IVM(301.92,"B","CELL PHONE CHANGE DT/TM",0))_"^"_$O(^IVM(301.92,"B","CELL PHONE CHANGE SITE",0))_"^"_$O(^IVM(301.92,"B","CELL PHONE CHANGE SOURCE",0))
"RTN","IVMPREC6",280,0)
 S EPCFARY("EAD")=$O(^IVM(301.92,"B","EMAIL ADDRESS",0))_"^"_$O(^IVM(301.92,"B","EMAIL CHANGE DT/TM",0))_"^"_$O(^IVM(301.92,"B","EMAIL CHANGE SITE",0))_"^"_$O(^IVM(301.92,"B","EMAIL CHANGE SOURCE",0))
"RTN","IVMPREC6",281,0)
 S EPCDEL("PNO")=".135^.1312^.1313^.1314"
"RTN","IVMPREC6",282,0)
 S EPCDEL("CPH")=".134^.139^.1311^.13111"
"RTN","IVMPREC6",283,0)
 S EPCDEL("EAD")=".133^.136^.137^.138"
"RTN","IVMPREC6",284,0)
 Q
"RTN","IVMPREC6",285,0)
 ;
"RTN","IVMPREC6",286,0)
AUPBLD(AUPFARY,UPDAUPG) ; Set up array containing fields for auto upload.
"RTN","IVMPREC6",287,0)
 ;AUPFARY - Contains fields in 301.92 File-Passed by reference
"RTN","IVMPREC6",288,0)
 ;UPDAUPG - Contains all groups initialized to '0'
"RTN","IVMPREC6",289,0)
 N AUPSTR,AUPGRP,AUPFLST,AUPPCE,AUPSGSQ,AUPDA
"RTN","IVMPREC6",290,0)
 F I=3:1 S AUPSTR=$P($T(AUPLST+I),";;",2,3) Q:$P(AUPSTR,";")="QUIT"  D
"RTN","IVMPREC6",291,0)
 .S AUPGRP=$P(AUPSTR,";"),AUPFLST=$P(AUPSTR,";",2)
"RTN","IVMPREC6",292,0)
 .F AUPPCE=1:1:$L(AUPFLST,"^") D
"RTN","IVMPREC6",293,0)
 ..S AUPSGSQ=$P(AUPFLST,"^",AUPPCE) Q:AUPSGSQ=""
"RTN","IVMPREC6",294,0)
 ..S AUPDA=$O(^IVM(301.92,"C",AUPSGSQ,0)) Q:AUPDA=""
"RTN","IVMPREC6",295,0)
 ..S AUPFARY(AUPDA)=AUPGRP
"RTN","IVMPREC6",296,0)
 ..S:AUPGRP'="" UPDAUPG(AUPGRP)=0  ; Default group update flags to '0'
"RTN","IVMPREC6",297,0)
 Q
"RTN","IVMPREC6",298,0)
 ;
"RTN","IVMPREC6",299,0)
AUPLST ; P1;P2
"RTN","IVMPREC6",300,0)
 ; P1 = Group Name (treat all entries as this group if present)
"RTN","IVMPREC6",301,0)
 ; P2 = .01 field(s) from 301.92 seperated by '^'
"RTN","IVMPREC6",302,0)
 ;;D1;ZCT03D1^ZCT04D1^ZCT051D1^ZCT052D1^ZCT053D1^ZCT054D1^ZCT055D1^ZCT06D1^ZCT07D1^ZCT10D1
"RTN","IVMPREC6",303,0)
 ;;E1;ZCT03E1^ZCT04E1^ZCT051E1^ZCT052E1^ZCT053E1^ZCT054E1^ZCT055E1^ZCT06E1^ZCT07E1^ZCT10E1
"RTN","IVMPREC6",304,0)
 ;;E2;ZCT03E2^ZCT04E2^ZCT051E2^ZCT052E2^ZCT053E2^ZCT054E2^ZCT055E2^ZCT06E2^ZCT07E2^ZCT10E2
"RTN","IVMPREC6",305,0)
 ;;K1;ZCT03K1^ZCT04K1^ZCT051K1^ZCT052K1^ZCT053K1^ZCT054K1^ZCT055K1^ZCT06K1^ZCT07K1^ZCT10K1
"RTN","IVMPREC6",306,0)
 ;;K2;ZCT03K2^ZCT04K2^ZCT051K2^ZCT052K2^ZCT053K2^ZCT054K2^ZCT055K2^ZCT06K2^ZCT07K2^ZCT10K2
"RTN","IVMPREC6",307,0)
 ;;TA;ZTA02^ZTA03^ZTA04^ZTA051^ZTA052^ZTA053^ZTA054^ZTA055^ZTA056^ZTA058^ZTA059^ZTA07^ZTA08^ZTA09^ZTA054F^ZTA055F
"RTN","IVMPREC6",308,0)
 ;;;ZEM03^ZEM04^ZEM05^ZEM061^ZEM062^ZEM063^ZEM064^ZEM065^ZEM068^ZEM07^ZEM09
"RTN","IVMPREC6",309,0)
 ;;;ZEM03S^ZEM04S^ZEM05S^ZEM061S^ZEM062S^ZEM063S^ZEM064S^ZEM065S^ZEM068S^ZEM07S^ZEM09S
"RTN","IVMPREC6",310,0)
 ;;;PID06^PID10^PID16^PID17^PID22^ZPD30^ZPD06^ZPD07
"RTN","IVMPREC6",311,0)
 ;;QUIT
"RTN","IVMPREC6",312,0)
 ;;
"RTN","IVMPREC6",313,0)
 ;;The following have been disabled until further notice
"RTN","IVMPREC6",314,0)
 ;;;PID113N^PID114N^PID24^PID13W
"RTN","IVMPREC6",315,0)
 ;;CA;PID111C^PID112C^PID113C^PID114C^PID114CF^PID115C^PID115CF^PID116C^PID117C^PID118C^PID119C^PID1112C1^PID1112C2^PID13CA^RF161CA^RF171CA
"RTN","IVMPREC8")
0^117^B213937231^B204616028
"RTN","IVMPREC8",1,0)
IVMPREC8 ;ALB/KCL/BRM/PJR/CKN,TDM,PWC - PROCESS INCOMING (Z05 EVENT TYPE) HL7 MESSAGES (CON'T) ; 7/19/11 10:28am
"RTN","IVMPREC8",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**5,6,12,58,73,79,102,115,121,148,151**;21-OCT-94;Build 10
"RTN","IVMPREC8",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMPREC8",4,0)
 ;
"RTN","IVMPREC8",5,0)
 ; This routine is called from IVMPREC6.
"RTN","IVMPREC8",6,0)
 ; This routine will process batch ORU demographic (event type Z05) HL7
"RTN","IVMPREC8",7,0)
 ; messages received from the IVM center.
"RTN","IVMPREC8",8,0)
 ;
"RTN","IVMPREC8",9,0)
 ;
"RTN","IVMPREC8",10,0)
 ;
"RTN","IVMPREC8",11,0)
PID ; - compare PID segment fields with DHCP fields
"RTN","IVMPREC8",12,0)
 N COMPPH1,COMPPH2,COUNTRY
"RTN","IVMPREC8",13,0)
 ;
"RTN","IVMPREC8",14,0)
 S IVMFLD=""
"RTN","IVMPREC8",15,0)
 ; - strip off segment name
"RTN","IVMPREC8",16,0)
 S IVMPIECE=$E(IVMXREF,4,9)
"RTN","IVMPREC8",17,0)
 ;Only process if value exist - also handles multiple address
"RTN","IVMPREC8",18,0)
 I $G(IVMPID(+$E(IVMPIECE,1,2)))'=""!($O(IVMPID(+$E(IVMPIECE,1,2),""))) D
"RTN","IVMPREC8",19,0)
 .;
"RTN","IVMPREC8",20,0)
 .; - if PID field is the address field - parse address
"RTN","IVMPREC8",21,0)
 .S IVMADFLG=0
"RTN","IVMPREC8",22,0)
 .I IVMXREF["PID11",'$G(DODSEG) D  Q:IVMFLD=""
"RTN","IVMPREC8",23,0)
 ..;
"RTN","IVMPREC8",24,0)
 ..; - Process Place of Birth City & State
"RTN","IVMPREC8",25,0)
 ..;I (IVMXREF="PID113N")!(IVMXREF="PID114N") D  Q
"RTN","IVMPREC8",26,0)
 ..;.Q:'$D(ADDRESS("N"))
"RTN","IVMPREC8",27,0)
 ..;.S IVMADDR=ADDRESS("N")
"RTN","IVMPREC8",28,0)
 ..;.S IVMPIECE=$E(IVMPIECE,3,4),IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE)
"RTN","IVMPREC8",29,0)
 ..;.Q:IVMFLD=""
"RTN","IVMPREC8",30,0)
 ..;.I IVMPIECE="4N" S (IVMSTPTR,IVMFLD)=+$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",31,0)
 ..;
"RTN","IVMPREC8",32,0)
 ..; - get PID address field containing 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",33,0)
 ..;I $G(AUPFARY(IVMDEMDA))="CA" S IVMADDR=$G(ADDRESS("CA")) ;Conf Addr
"RTN","IVMPREC8",34,0)
 ..I $G(AUPFARY(IVMDEMDA))'="CA" D
"RTN","IVMPREC8",35,0)
 ...S IVMADDR=$S($D(ADDRESS("P")):ADDRESS("P"),$D(ADDRESS("VAB1")):ADDRESS("VAB1"),$D(ADDRESS("VAB2")):ADDRESS("VAB2"),$D(ADDRESS("VAB3")):ADDRESS("VAB3"),$D(ADDRESS("VAB4")):ADDRESS("VAB4"),1:"")
"RTN","IVMPREC8",36,0)
 ..I IVMADDR="" Q
"RTN","IVMPREC8",37,0)
 ..S COUNTRY=$P(IVMADDR,$E(HLECH),6)
"RTN","IVMPREC8",38,0)
 ..S FORADDR=$S(COUNTRY="USA":0,1:1)
"RTN","IVMPREC8",39,0)
 ..; - get piece of address field, and set IVMFLD
"RTN","IVMPREC8",40,0)
 ..S IVMPIECE=$E(IVMPIECE,3,6),IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE)
"RTN","IVMPREC8",41,0)
 ..;I (IVMPIECE="2C")!(IVMPIECE="8C") S:IVMFLD="" IVMFLD="@"
"RTN","IVMPREC8",42,0)
 ..Q:IVMFLD=""
"RTN","IVMPREC8",43,0)
 ..; - convert state abbrev. to pointer
"RTN","IVMPREC8",44,0)
 ..I (IVMPIECE=4)!(IVMPIECE="4C") D
"RTN","IVMPREC8",45,0)
 ...S IVMFLD=$S('FORADDR:IVMFLD,1:"")
"RTN","IVMPREC8",46,0)
 ...I IVMFLD'="" S (IVMSTPTR,IVMFLD)=+$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",47,0)
 ..I (IVMPIECE=5)!(IVMPIECE="5C") D
"RTN","IVMPREC8",48,0)
 ...S IVMFLD=$S('FORADDR:IVMFLD,1:"")
"RTN","IVMPREC8",49,0)
 ...I IVMFLD'="" S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=X
"RTN","IVMPREC8",50,0)
 ..I (IVMPIECE="4F")!(IVMPIECE="4CF") S IVMFLD=$S(FORADDR:IVMFLD,1:"") ;PROVINCE
"RTN","IVMPREC8",51,0)
 ..I (IVMPIECE="5F")!(IVMPIECE="5CF") S IVMFLD=$S(FORADDR:IVMFLD,1:"") ;POSTAL CODE
"RTN","IVMPREC8",52,0)
 ..I (IVMPIECE=6)!(IVMPIECE="6C") S IVMFLD=$$CNTRCONV(COUNTRY) ;COUNTRY
"RTN","IVMPREC8",53,0)
 ..I IVMPIECE=7 S IVMFLD=$$BAICONV(IVMFLD) ;Bad Address Indicator
"RTN","IVMPREC8",54,0)
 ..I IVMPIECE="7C" S IVMFLD=CONFADCT  ;CONFADCT set in PID11^IVMPRECA
"RTN","IVMPREC8",55,0)
 ..I IVMPIECE="9C" D
"RTN","IVMPREC8",56,0)
 ...S IVMFLD=$S('FORADDR:IVMFLD,1:"") Q:IVMFLD=""
"RTN","IVMPREC8",57,0)
 ...S IVMFLD=+$O(^DIC(5,IVMSTPTR,1,"C",IVMFLD,0))  ;CONF ADDR COUNTY
"RTN","IVMPREC8",58,0)
 ..I $E(IVMPIECE,1,3)="12C" S IVMFLD=$$FMDATE^HLFNC($P(IVMFLD,$E(HLECH,4),$E(IVMPIECE,4)))
"RTN","IVMPREC8",59,0)
 ..S IVMADFLG=1
"RTN","IVMPREC8",60,0)
 .;
"RTN","IVMPREC8",61,0)
 .I IVMXREF["PID12",'$G(DODSEG) D
"RTN","IVMPREC8",62,0)
 ..I 'FORADDR S IVMADFLG=1,IVMFLD=+$O(^DIC(5,IVMSTPTR,1,"C",IVMPID(12),0))  ;Process county only if not foreign address
"RTN","IVMPREC8",63,0)
 .; line remove so that the phone number is compared 
"RTN","IVMPREC8",64,0)
 .; before saving to 301.5.
"RTN","IVMPREC8",65,0)
 .I IVMXREF["PID13",$D(TELECOM),'$G(DODSEG) D
"RTN","IVMPREC8",66,0)
 ..;Confidential Phone Number
"RTN","IVMPREC8",67,0)
 ..;I IVMXREF="PID13CA",$D(TELECOM("VACPN")) D
"RTN","IVMPREC8",68,0)
 ..;.S IVMFLD=$$CONVPH($P($G(TELECOM("VACPN")),$E(HLECH))),IVMADFLG=1
"RTN","IVMPREC8",69,0)
 ..;Phone Number [Work]
"RTN","IVMPREC8",70,0)
 ..;I IVMXREF="PID13W",$D(TELECOM("WPN")) D
"RTN","IVMPREC8",71,0)
 ..;.S IVMFLD=$$CONVPH($P($G(TELECOM("WPN")),$E(HLECH))),IVMADFLG=1
"RTN","IVMPREC8",72,0)
 ..;Pager Number
"RTN","IVMPREC8",73,0)
 ..I IVMXREF="PID13B",$D(TELECOM("BPN")) D
"RTN","IVMPREC8",74,0)
 ...S IVMFLD=$$CONVPH($P($G(TELECOM("BPN")),$E(HLECH))),IVMADFLG=1
"RTN","IVMPREC8",75,0)
 ..;Cell Phone Number
"RTN","IVMPREC8",76,0)
 ..I IVMXREF="PID13C",$D(TELECOM("ORN")) D
"RTN","IVMPREC8",77,0)
 ...S IVMFLD=$$CONVPH($P($G(TELECOM("ORN")),$E(HLECH))),IVMADFLG=1
"RTN","IVMPREC8",78,0)
 ..;Email Address
"RTN","IVMPREC8",79,0)
 ..I IVMXREF="PID13E",$D(TELECOM("NET")) D
"RTN","IVMPREC8",80,0)
 ...S IVMFLD=$P($G(TELECOM("NET")),$E(HLECH),4)
"RTN","IVMPREC8",81,0)
 ...S IVMFLD=$S($$CHKEMAIL(IVMFLD):IVMFLD,1:""),IVMADFLG=1
"RTN","IVMPREC8",82,0)
 .; - file address fields and quit
"RTN","IVMPREC8",83,0)
 .I IVMADFLG D STORE^IVMPREC9 Q
"RTN","IVMPREC8",84,0)
 .;
"RTN","IVMPREC8",85,0)
 .; - otherwise, set IVMFLD to field rec'd from IVM
"RTN","IVMPREC8",86,0)
 .;   for comparison with DHCP field
"RTN","IVMPREC8",87,0)
 .;I (IVMXREF'="PID113N")&(IVMXREF'="PID114N")&($E(IVMXREF,1,5)'="PID13") S IVMFLD=$G(IVMPID(+IVMPIECE))
"RTN","IVMPREC8",88,0)
 .I $E(IVMXREF,1,5)'="PID13" S IVMFLD=$G(IVMPID(+IVMPIECE))
"RTN","IVMPREC8",89,0)
 .;
"RTN","IVMPREC8",90,0)
 .; - if HL7 date convert to FM date and set IVMFLD
"RTN","IVMPREC8",91,0)
 .I IVMXREF["PID07" S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",92,0)
 .;
"RTN","IVMPREC8",93,0)
 .; - if HL7 code convert to VistA and set IVMFLD
"RTN","IVMPREC8",94,0)
 .I IVMXREF["PID16" D  ;Marital Status
"RTN","IVMPREC8",95,0)
 ..S IVMFLD=$S(IVMFLD="D":"DIVORCED",IVMFLD="M":"MARRIED",IVMFLD="W":"WIDOWED",IVMFLD="A":"SEPARATED",IVMFLD="S":"NEVER MARRIED",IVMFLD="U":"UNKNOWN")
"RTN","IVMPREC8",96,0)
 ..S IVMFLD=$O(^DIC(11,"B",IVMFLD,0))
"RTN","IVMPREC8",97,0)
 .;
"RTN","IVMPREC8",98,0)
 .I IVMXREF["PID17" S IVMFLD=$O(^DIC(13,"C",IVMFLD,0))  ;Religion
"RTN","IVMPREC8",99,0)
 .;
"RTN","IVMPREC8",100,0)
 .I IVMXREF["PID22" D  ;Ethnicity
"RTN","IVMPREC8",101,0)
 ..S IVMFLD=$$CODE2PTR^DGUTL4($P($G(IVMPID(22)),$E(HLECH),4),2,2)
"RTN","IVMPREC8",102,0)
 .;
"RTN","IVMPREC8",103,0)
 .I IVMXREF="PID10",'$G(DODSEG),$D(IVMRACE) D  Q
"RTN","IVMPREC8",104,0)
 ..N XVAL,IVMLST,DHCPLST
"RTN","IVMPREC8",105,0)
 ..S (XVAL,IVMLST,DHCPLST)=""
"RTN","IVMPREC8",106,0)
 ..F  S XVAL=$O(^DPT(DFN,.02,"B",XVAL)) Q:XVAL=""  S IVMLST=IVMLST_XVAL_U
"RTN","IVMPREC8",107,0)
 ..S XVAL="" F  S XVAL=$O(IVMRACE(2,XVAL)) Q:XVAL=""  S DHCPLST=DHCPLST_XVAL_U
"RTN","IVMPREC8",108,0)
 ..Q:IVMLST=DHCPLST
"RTN","IVMPREC8",109,0)
 ..F XVAL=1:1:($L(DHCPLST,U)-1) S IVMFLD=$P(DHCPLST,U,XVAL) D
"RTN","IVMPREC8",110,0)
 ...D STORE^IVMPREC9
"RTN","IVMPREC8",111,0)
 .;
"RTN","IVMPREC8",112,0)
 .; - call VADPT routine to return DHCP demographics
"RTN","IVMPREC8",113,0)
 .D DEM^VADPT,ADD^VADPT,OPD^VADPT
"RTN","IVMPREC8",114,0)
 .;
"RTN","IVMPREC8",115,0)
 .; - execute code on the 1 node and get DHCP field for comparison
"RTN","IVMPREC8",116,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",117,0)
 .;
"RTN","IVMPREC8",118,0)
 .; - special logic for phone number processing
"RTN","IVMPREC8",119,0)
 .; - if different, then store the actual value received, then quit
"RTN","IVMPREC8",120,0)
 .;
"RTN","IVMPREC8",121,0)
 .I IVMXREF="PID13",$D(TELECOM("PRN")),'$G(DODSEG) D  Q
"RTN","IVMPREC8",122,0)
 ..S IVMFLD=$P($G(TELECOM("PRN")),$E(HLECH))
"RTN","IVMPREC8",123,0)
 ..I IVMFLD]"" D
"RTN","IVMPREC8",124,0)
 ...S COMPPH1=$$CONVPH(IVMFLD),COMPPH2=$$CONVPH(IVMDHCP)
"RTN","IVMPREC8",125,0)
 ...I COMPPH1'=COMPPH2 D STORE^IVMPREC9
"RTN","IVMPREC8",126,0)
 .;
"RTN","IVMPREC8",127,0)
 .; - if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",128,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",129,0)
 Q
"RTN","IVMPREC8",130,0)
 ;
"RTN","IVMPREC8",131,0)
 ;
"RTN","IVMPREC8",132,0)
ZPD ; - compare ZPD segment fields with DHCP fields
"RTN","IVMPREC8",133,0)
 N STFLG
"RTN","IVMPREC8",134,0)
 S STFLG=0
"RTN","IVMPREC8",135,0)
 S IVMPIECE=$E(IVMXREF,4,5)
"RTN","IVMPREC8",136,0)
 I IVMXREF="ZPD09"!(IVMXREF="ZPD31")!(IVMXREF="ZPD32") Q:$$DODCK(DFN)
"RTN","IVMPREC8",137,0)
 I $P(IVMSEG,HLFS,IVMPIECE)]"" D
"RTN","IVMPREC8",138,0)
 .;
"RTN","IVMPREC8",139,0)
 .; - set var to HL7 field
"RTN","IVMPREC8",140,0)
 .S IVMFLD=$P(IVMSEG,HLFS,IVMPIECE)
"RTN","IVMPREC8",141,0)
 .;
"RTN","IVMPREC8",142,0)
 .; - if HL7 name format convert to FM
"RTN","IVMPREC8",143,0)
 .I (IVMXREF["ZPD06")!(IVMXREF["ZPD07") S IVMFLD=$$FMNAME^HLFNC(IVMFLD)
"RTN","IVMPREC8",144,0)
 .;
"RTN","IVMPREC8",145,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",146,0)
 .I IVMXREF["ZPD09"!(IVMXREF["ZPD13")!(IVMXREF["ZPD32") S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",147,0)
 .;
"RTN","IVMPREC8",148,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",149,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",150,0)
 .;
"RTN","IVMPREC8",151,0)
 .; - if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",152,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) S STFLG=1 D STORE^IVMPREC9 Q
"RTN","IVMPREC8",153,0)
 .I $P(IVMSEG,"^",IVMPIECE)'="""""" D
"RTN","IVMPREC8",154,0)
 ..I IVMXREF["ZPD09" D STORE^IVMPREC9
"RTN","IVMPREC8",155,0)
 ..;I IVMXREF["ZPD09"!(IVMXREF["ZPD31")!(IVMXREF["ZPD32") D STORE^IVMPREC9
"RTN","IVMPREC8",156,0)
 I IVMXREF["ZPD08",STFLG,$$AUTORINC^IVMPREC9(DFN) Q
"RTN","IVMPREC8",157,0)
 I IVMXREF["ZPD32",$$AUTODOD^IVMLDEMD(DFN)
"RTN","IVMPREC8",158,0)
 Q
"RTN","IVMPREC8",159,0)
 ;
"RTN","IVMPREC8",160,0)
 ;
"RTN","IVMPREC8",161,0)
DODCK(DFN) ;this will check if Date of Death information needs to be uploaded or not.
"RTN","IVMPREC8",162,0)
 ;2 requirements are:
"RTN","IVMPREC8",163,0)
 ;  1. When the DOD is received from ESR with a Source of Death Notification equal to "Death Certificate on file and the
"RTN","IVMPREC8",164,0)
 ;     VistA DOD is null or empty then VistA will upload the Date of Death from ESR
"RTN","IVMPREC8",165,0)
 ;  2. When DOD is Received from ESR and VistA DOD is already populated then Vista will ignore the DOD from ESR and VistA
"RTN","IVMPREC8",166,0)
 ;     will not create an entry in the IVM demographic upload option.
"RTN","IVMPREC8",167,0)
 ;
"RTN","IVMPREC8",168,0)
 ; Inputs: DFN for ^DPT
"RTN","IVMPREC8",169,0)
 ;         IVMXREF (must be ZPD09, ZPD31 and ZPD32)
"RTN","IVMPREC8",170,0)
 ;         IVMSEG (the ZPD data)
"RTN","IVMPREC8",171,0)
 ;         IVMFLD (the field number in ^DPT(DFN)
"RTN","IVMPREC8",172,0)
 ;         IVMPIECE (the piece number of IVMSEG)
"RTN","IVMPREC8",173,0)
 ;         IVMDHCP (the data from ^DPT(DFN)
"RTN","IVMPREC8",174,0)
 ;
"RTN","IVMPREC8",175,0)
 ;
"RTN","IVMPREC8",176,0)
 N DODARRAY,QUIT
"RTN","IVMPREC8",177,0)
 ;
"RTN","IVMPREC8",178,0)
 S (CKDEL,QUIT)=0
"RTN","IVMPREC8",179,0)
 ;
"RTN","IVMPREC8",180,0)
 I $P(IVMSEG,"^",9)="""""" Q 0
"RTN","IVMPREC8",181,0)
 D GETS^DIQ(2,DFN,".351:.355","","DODARRAY")
"RTN","IVMPREC8",182,0)
 S DOD=DODARRAY(2,DFN_",",.351)
"RTN","IVMPREC8",183,0)
 I DOD'="" Q 1
"RTN","IVMPREC8",184,0)
 I $P(IVMSEG,"^",31)=3,DOD="" S QUIT=0    ;Death Certificate not on File
"RTN","IVMPREC8",185,0)
 I $P(IVMSEG,"^",31)=3,DOD'="" S QUIT=1
"RTN","IVMPREC8",186,0)
 ;
"RTN","IVMPREC8",187,0)
 Q QUIT ;
"RTN","IVMPREC8",188,0)
 ;
"RTN","IVMPREC8",189,0)
ZTA ; - compare ZTA segment fields with DHCP fields
"RTN","IVMPREC8",190,0)
 N COMPPH1,COMPPH2,COUNTRY
"RTN","IVMPREC8",191,0)
 S IVMPIECE=$E(IVMXREF,4,7)
"RTN","IVMPREC8",192,0)
 I $P(IVMSEG,HLFS,$E(IVMPIECE,1,2))]"" D
"RTN","IVMPREC8",193,0)
 .;
"RTN","IVMPREC8",194,0)
 .; - set var IVMFLD to incoming HL7 field
"RTN","IVMPREC8",195,0)
 .S IVMFLD=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2))
"RTN","IVMPREC8",196,0)
 .;
"RTN","IVMPREC8",197,0)
 .; - ZTA05 as the ZTA address field containing 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",198,0)
 .I IVMXREF["ZTA05" D
"RTN","IVMPREC8",199,0)
 ..S IVMADDR=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2)) Q:IVMADDR=""
"RTN","IVMPREC8",200,0)
 ..S COUNTRY=$P(IVMADDR,$E(HLECH),6)
"RTN","IVMPREC8",201,0)
 ..S FORADDR=$S(COUNTRY="USA":0,1:1)
"RTN","IVMPREC8",202,0)
 ..; - get piece of address field, and set IVMFLD
"RTN","IVMPREC8",203,0)
 ..S IVMPIECE=$E(IVMPIECE,3,4)
"RTN","IVMPREC8",204,0)
 ..S IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE)
"RTN","IVMPREC8",205,0)
 ..I (IVMPIECE=2)!(IVMPIECE=8) S:IVMFLD="" IVMFLD="@"
"RTN","IVMPREC8",206,0)
 ..Q:IVMFLD=""
"RTN","IVMPREC8",207,0)
 ..I (IVMPIECE=4)!(IVMPIECE=5)!(IVMPIECE=9) S IVMFLD=$S('FORADDR:IVMFLD,1:"") Q:IVMFLD=""
"RTN","IVMPREC8",208,0)
 ..I IVMPIECE=4 S (IVMTSTPT,IVMFLD)=$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",209,0)
 ..I IVMPIECE=5 S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=$G(X)
"RTN","IVMPREC8",210,0)
 ..I IVMPIECE="4F" S IVMFLD=$S(FORADDR:IVMFLD,1:"")  ;PROVINCE
"RTN","IVMPREC8",211,0)
 ..I IVMPIECE="5F" S IVMFLD=$S(FORADDR:IVMFLD,1:"")  ;POSTAL CODE
"RTN","IVMPREC8",212,0)
 ..I IVMPIECE=6 S IVMFLD=$$CNTRCONV(COUNTRY)         ;COUNTRY
"RTN","IVMPREC8",213,0)
 ..I IVMPIECE=9 S IVMFLD=+$O(^DIC(5,+IVMTSTPT,1,"C",IVMFLD,0))  ;COUNTY
"RTN","IVMPREC8",214,0)
 .Q:IVMFLD=""
"RTN","IVMPREC8",215,0)
 .;
"RTN","IVMPREC8",216,0)
 .; - if HL7 data convert to Y/N value
"RTN","IVMPREC8",217,0)
 .I IVMXREF["ZTA02" S IVMFLD=$S(IVMFLD=0:"N",IVMFLD=1:"Y",1:"")
"RTN","IVMPREC8",218,0)
 .;
"RTN","IVMPREC8",219,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",220,0)
 .I (IVMXREF["ZTA03")!(IVMXREF["ZTA04")!(IVMXREF["ZTA08") S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",221,0)
 .;
"RTN","IVMPREC8",222,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",223,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",224,0)
 .;
"RTN","IVMPREC8",225,0)
 .; - special logic for phone number processing
"RTN","IVMPREC8",226,0)
 .; - if different, then store the actual value received, then quit
"RTN","IVMPREC8",227,0)
 .I IVMXREF["ZTA07" D  Q
"RTN","IVMPREC8",228,0)
 ..S COMPPH1=$$CONVPH(IVMFLD),COMPPH2=$$CONVPH(IVMDHCP)
"RTN","IVMPREC8",229,0)
 ..I COMPPH1'=COMPPH2 D STORE^IVMPREC9
"RTN","IVMPREC8",230,0)
 .;
"RTN","IVMPREC8",231,0)
 .; if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",232,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",233,0)
 .;
"RTN","IVMPREC8",234,0)
 .I IVMXREF["ZTA08" D
"RTN","IVMPREC8",235,0)
 ..I IVMFLD]"",(IVMFLD>IVMDHCP) S UPDAUPG("TA")=1
"RTN","IVMPREC8",236,0)
 Q
"RTN","IVMPREC8",237,0)
 ;
"RTN","IVMPREC8",238,0)
ZGD ; - compare ZGD segment fields with DHCP fields
"RTN","IVMPREC8",239,0)
 S IVMADFLG=0
"RTN","IVMPREC8",240,0)
 S IVMPIECE=$E(IVMXREF,4,7)
"RTN","IVMPREC8",241,0)
 I $P(IVMSEG,HLFS,$E(IVMPIECE,1,2))]"" D
"RTN","IVMPREC8",242,0)
 .;
"RTN","IVMPREC8",243,0)
 .; - set var IVMFLD to incoming HL7 field
"RTN","IVMPREC8",244,0)
 .I 'IVMADFLG S IVMFLD=$P(IVMSEG,HLFS,IVMPIECE)
"RTN","IVMPREC8",245,0)
 .;
"RTN","IVMPREC8",246,0)
 .; - ZGD06 as the ZGD address field containing 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",247,0)
 .I IVMXREF["ZGD06" D
"RTN","IVMPREC8",248,0)
 ..S IVMADDR=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2)),IVMPIECE=$E(IVMPIECE,3)
"RTN","IVMPREC8",249,0)
 ..S IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE),IVMADFLG=1
"RTN","IVMPREC8",250,0)
 ..I IVMFLD]"",IVMPIECE=4 S IVMFLD=$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",251,0)
 ..I IVMFLD]"",IVMPIECE=5 S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=$G(X)
"RTN","IVMPREC8",252,0)
 .;
"RTN","IVMPREC8",253,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",254,0)
 .I IVMXREF["ZGD08" S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",255,0)
 .;
"RTN","IVMPREC8",256,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",257,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",258,0)
 .;
"RTN","IVMPREC8",259,0)
 .; if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",260,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",261,0)
 Q
"RTN","IVMPREC8",262,0)
 ;
"RTN","IVMPREC8",263,0)
ZCT ; - compare ZCT segment fields with DHCP fields
"RTN","IVMPREC8",264,0)
 N ZCTTYP
"RTN","IVMPREC8",265,0)
 S IVMADFLG=0
"RTN","IVMPREC8",266,0)
 S IVMPIECE=$E(IVMXREF,4,8)
"RTN","IVMPREC8",267,0)
 S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS)
"RTN","IVMPREC8",268,0)
 S ZCTTYP=$E(IVMPIECE,$L(IVMPIECE)-1,$L(IVMPIECE))
"RTN","IVMPREC8",269,0)
 Q:$P(IVMSEG,HLFS,2)'=$S(ZCTTYP="K1":1,ZCTTYP="K2":2,ZCTTYP="E1":3,ZCTTYP="E2":4,ZCTTYP="D1":5,1:"")
"RTN","IVMPREC8",270,0)
 I $P(IVMSEG,HLFS,$E(IVMPIECE,1,2))]"" D
"RTN","IVMPREC8",271,0)
 .;
"RTN","IVMPREC8",272,0)
 .; - set var IVMFLD to incoming HL7 field
"RTN","IVMPREC8",273,0)
 .I 'IVMADFLG S IVMFLD=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2))
"RTN","IVMPREC8",274,0)
 .;
"RTN","IVMPREC8",275,0)
 .; - if HL7 name format convert to FM
"RTN","IVMPREC8",276,0)
 .I IVMXREF["ZCT03" S IVMFLD=$$FMNAME^HLFNC(IVMFLD)
"RTN","IVMPREC8",277,0)
 .;
"RTN","IVMPREC8",278,0)
 .; - ZCT05 as the ZCT address field containing 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",279,0)
 .I IVMXREF["ZCT05" D
"RTN","IVMPREC8",280,0)
 ..S IVMADDR=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2)),IVMPIECE=$E(IVMPIECE,3)
"RTN","IVMPREC8",281,0)
 ..S IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE),IVMADFLG=1
"RTN","IVMPREC8",282,0)
 ..I IVMFLD]"",IVMPIECE=4 S IVMFLD=$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",283,0)
 ..I IVMFLD]"",IVMPIECE=5 S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=$G(X)
"RTN","IVMPREC8",284,0)
 .;
"RTN","IVMPREC8",285,0)
 .I IVMADFLG D STORE^IVMPREC9 Q
"RTN","IVMPREC8",286,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",287,0)
 .I IVMXREF["ZCT10" S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",288,0)
 .;
"RTN","IVMPREC8",289,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",290,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",291,0)
 .;
"RTN","IVMPREC8",292,0)
 .; if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",293,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",294,0)
 .;
"RTN","IVMPREC8",295,0)
 .I IVMXREF["ZCT10" D
"RTN","IVMPREC8",296,0)
 ..I IVMFLD]"",(IVMFLD>IVMDHCP) S UPDAUPG(ZCTTYP)=1
"RTN","IVMPREC8",297,0)
 Q
"RTN","IVMPREC8",298,0)
 ;
"RTN","IVMPREC8",299,0)
ZEM ; - compare ZEM segment fields with DHCP fields
"RTN","IVMPREC8",300,0)
 S IVMADFLG=0
"RTN","IVMPREC8",301,0)
 S IVMPIECE=$E(IVMXREF,4,7)
"RTN","IVMPREC8",302,0)
 S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS)
"RTN","IVMPREC8",303,0)
 Q:$P(IVMSEG,HLFS,2)'=$S($E(IVMXREF,$L(IVMXREF))="S":2,1:1)
"RTN","IVMPREC8",304,0)
 I $P(IVMSEG,HLFS,$E(IVMPIECE,1,2))]"" D
"RTN","IVMPREC8",305,0)
 .;
"RTN","IVMPREC8",306,0)
 .; - set var IVMFLD to incoming HL7 field
"RTN","IVMPREC8",307,0)
 .I 'IVMADFLG S IVMFLD=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2))
"RTN","IVMPREC8",308,0)
 .;
"RTN","IVMPREC8",309,0)
 .; - ZEM06 as the ZEM address field containing 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",310,0)
 .I IVMXREF["ZEM06" D
"RTN","IVMPREC8",311,0)
 ..S IVMADDR=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2)),IVMPIECE=$E(IVMPIECE,3)
"RTN","IVMPREC8",312,0)
 ..S IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE)    ;,IVMADFLG=1
"RTN","IVMPREC8",313,0)
 ..I IVMFLD]"",IVMPIECE=4 S IVMFLD=$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",314,0)
 ..I IVMFLD]"",IVMPIECE=5 S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=$G(X)
"RTN","IVMPREC8",315,0)
 .;
"RTN","IVMPREC8",316,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",317,0)
 .I IVMXREF["ZEM09" S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",318,0)
 .;
"RTN","IVMPREC8",319,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",320,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",321,0)
 .;
"RTN","IVMPREC8",322,0)
 .; if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",323,0)
 .I $E(IVMXREF,1,6)="ZEM062",IVMFLD'=IVMDHCP S ZEMADRUP(IVMXREF)=1 D STORE^IVMPREC9 Q
"RTN","IVMPREC8",324,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",325,0)
 Q
"RTN","IVMPREC8",326,0)
 ;
"RTN","IVMPREC8",327,0)
RF1 ; - compare RF1 segment fields with DHCP fields
"RTN","IVMPREC8",328,0)
 S IVMPIECE=$E(IVMXREF,4),IVMADFLG=1,RF1TYPE=$P(IVMSEG,HLFS,3)
"RTN","IVMPREC8",329,0)
 ;As per requirements, delete the communication data (Email, Cell and Pager) if it is not received in Z05.
"RTN","IVMPREC8",330,0)
 ;Hence, remove it from EPCDEL (deletion array) if Data exist in Z05. Comm. fields contained in EPCDEL will be deleted after updating all incoming communication data.
"RTN","IVMPREC8",331,0)
 K EPCDEL(RF1TYPE)
"RTN","IVMPREC8",332,0)
 ;if RF1 field is SEQ6, then parse subcomponents
"RTN","IVMPREC8",333,0)
 I RF1TYPE="SAD",((IVMXREF="RF161")!(IVMXREF="RF162")!(IVMXREF="RF171")) D RF1PROC
"RTN","IVMPREC8",334,0)
 ;I RF1TYPE="CAD",((IVMXREF="RF161CA")!(IVMXREF="RF171CA")) D RF1PROC
"RTN","IVMPREC8",335,0)
 I RF1TYPE="CPH",((IVMXREF="RF161C")!(IVMXREF="RF162C")!(IVMXREF="RF171C")) D RF1PROC
"RTN","IVMPREC8",336,0)
 I RF1TYPE="PNO",((IVMXREF="RF161B")!(IVMXREF="RF162B")!(IVMXREF="RF171B")) D RF1PROC
"RTN","IVMPREC8",337,0)
 I RF1TYPE="EAD",((IVMXREF="RF161E")!(IVMXREF="RF162E")!(IVMXREF="RF171E")) D RF1PROC
"RTN","IVMPREC8",338,0)
 I '$$RF1CHK^IVMPREC6(IVMRTN,IVMDA),IVMXREF="RF171E" D  ;Last RF1
"RTN","IVMPREC8",339,0)
 . I $$AUTOEPC^IVMPREC9(DFN,.UPDEPC)
"RTN","IVMPREC8",340,0)
 . I 'UPDEPC("SAD") S NOUPDT=1
"RTN","IVMPREC8",341,0)
 . I $$AUTOADDR^IVMLDEM6(DFN,1,NOUPDT)
"RTN","IVMPREC8",342,0)
 Q
"RTN","IVMPREC8",343,0)
 ;
"RTN","IVMPREC8",344,0)
RF1PROC ;
"RTN","IVMPREC8",345,0)
 N IVMEPC
"RTN","IVMPREC8",346,0)
 I $P(IVMSEG,HLFS,IVMPIECE)]"" D
"RTN","IVMPREC8",347,0)
 .;if RF1 field is SEQ6, then parse subcomponents
"RTN","IVMPREC8",348,0)
 .I IVMXREF["RF16" D  Q
"RTN","IVMPREC8",349,0)
 ..;- get data containing 4 pieces seperated by HLECH (~)
"RTN","IVMPREC8",350,0)
 ..S IVMRFDAT=$P(IVMSEG,HLFS,6)
"RTN","IVMPREC8",351,0)
 ..S IVMPIECE=$E(IVMXREF,5),IVMFLD=$P(IVMRFDAT,"~",IVMPIECE)
"RTN","IVMPREC8",352,0)
 ..;get 6th character of IVMXREF to determine if value is for Address
"RTN","IVMPREC8",353,0)
 ..;OR Email, Cell and Pager
"RTN","IVMPREC8",354,0)
 ..S IVMEPC=$E(IVMXREF,6)
"RTN","IVMPREC8",355,0)
 ..;Convert Change Source for Address, Email, Cell and Pager
"RTN","IVMPREC8",356,0)
 ..I IVMPIECE=2 S IVMFLD=$S(IVMEPC'="":$$EPCSRCC(IVMFLD),1:$$ADDRCNV(IVMFLD))
"RTN","IVMPREC8",357,0)
 ..Q:IVMFLD=""
"RTN","IVMPREC8",358,0)
 ..D STORE^IVMPREC9
"RTN","IVMPREC8",359,0)
 .I IVMXREF["RF17" D  Q
"RTN","IVMPREC8",360,0)
 ..;get address/telecomm change date/tm field
"RTN","IVMPREC8",361,0)
 ..S IVMFLD=$$FMDATE^HLFNC($P(IVMSEG,HLFS,7))
"RTN","IVMPREC8",362,0)
 ..Q:IVMFLD=""
"RTN","IVMPREC8",363,0)
 ..D STORE^IVMPREC9
"RTN","IVMPREC8",364,0)
 ..;
"RTN","IVMPREC8",365,0)
 ..;I RF1TYPE="CAD",$P($G(ADDRESS("CA")),HLFS)]"" D  Q
"RTN","IVMPREC8",366,0)
 ..;.; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",367,0)
 ..;.S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",368,0)
 ..;.I IVMFLD]"",(IVMFLD>IVMDHCP) S UPDAUPG("CA")=1
"RTN","IVMPREC8",369,0)
 ..;
"RTN","IVMPREC8",370,0)
 ..; check for auto-upload
"RTN","IVMPREC8",371,0)
 ..S NOUPDT=0
"RTN","IVMPREC8",372,0)
 ..S IVMDHCP=$S(RF1TYPE="SAD":$P($G(^DPT(DFN,.11)),HLFS,13),RF1TYPE="CPH":$P($G(^DPT(DFN,.13)),HLFS,9),RF1TYPE="PNO":$P($G(^DPT(DFN,.13)),HLFS,12),RF1TYPE="EAD":$P($G(^DPT(DFN,.13)),HLFS,6),1:"")
"RTN","IVMPREC8",373,0)
 ..I IVMFLD]"",(IVMFLD>IVMDHCP) D
"RTN","IVMPREC8",374,0)
 ...S UPDEPC(RF1TYPE)=$G(EPCFARY(RF1TYPE))
"RTN","IVMPREC8",375,0)
 ...I RF1TYPE="SAD" S UPDEPC("SAD")=1
"RTN","IVMPREC8",376,0)
 Q
"RTN","IVMPREC8",377,0)
ADDRCNV(ADDRSRC) ;convert Address Source from HL7 to DHCP format
"RTN","IVMPREC8",378,0)
 ;
"RTN","IVMPREC8",379,0)
 Q:$G(ADDRSRC)']"" ""
"RTN","IVMPREC8",380,0)
 Q:ADDRSRC="USVAHEC" "HEC"
"RTN","IVMPREC8",381,0)
 Q:ADDRSRC="USVAMC" "VAMC"
"RTN","IVMPREC8",382,0)
 Q:ADDRSRC="USVAHBSC" "HBSC"
"RTN","IVMPREC8",383,0)
 Q:ADDRSRC="USNCOA" "NCOA"
"RTN","IVMPREC8",384,0)
 Q:ADDRSRC="USVABVA" "BVA"
"RTN","IVMPREC8",385,0)
 Q:ADDRSRC="USVAINS" "VAINS"
"RTN","IVMPREC8",386,0)
 Q:ADDRSRC="USPS" "USPS"
"RTN","IVMPREC8",387,0)
 Q:ADDRSRC="LACS" "LACS"
"RTN","IVMPREC8",388,0)
 Q:ADDRSRC="USVOA" "VOA"
"RTN","IVMPREC8",389,0)
 Q ""
"RTN","IVMPREC8",390,0)
EPCSRCC(EPCSRC) ;Convert Email, Cell, Pager Change Source from HL7 to DHCP
"RTN","IVMPREC8",391,0)
 ;
"RTN","IVMPREC8",392,0)
 Q:$G(EPCSRC)']"" ""
"RTN","IVMPREC8",393,0)
 Q:EPCSRC="USVAHEC" "HEC"
"RTN","IVMPREC8",394,0)
 Q:EPCSRC="USVAMC" "VAMC"
"RTN","IVMPREC8",395,0)
 Q:EPCSRC="USVAHBSC" "HBSC"
"RTN","IVMPREC8",396,0)
 Q ""
"RTN","IVMPREC8",397,0)
BAICONV(BAISRC) ;Convert Bad address source from HL7 to DHCP format
"RTN","IVMPREC8",398,0)
 Q:$G(BAISRC)']"" ""
"RTN","IVMPREC8",399,0)
 Q:BAISRC="VAB1" 1
"RTN","IVMPREC8",400,0)
 Q:BAISRC="VAB2" 2
"RTN","IVMPREC8",401,0)
 Q:BAISRC="VAB3" 3
"RTN","IVMPREC8",402,0)
 Q:BAISRC="VAB4" 4
"RTN","IVMPREC8",403,0)
 Q ""
"RTN","IVMPREC8",404,0)
CONVPH(PH) ;remove special chars/spaces from Phone number
"RTN","IVMPREC8",405,0)
 Q $TR(PH," )(/#\-","")
"RTN","IVMPREC8",406,0)
CNTRCONV(COUNTRY) ;Check if valid country
"RTN","IVMPREC8",407,0)
 I COUNTRY="" Q 0
"RTN","IVMPREC8",408,0)
 Q $O(^HL(779.004,"B",COUNTRY,""))
"RTN","IVMPREC8",409,0)
CHKEMAIL(EMAIL) ;Check for Valid Email
"RTN","IVMPREC8",410,0)
 I $G(EMAIL)="" Q 0
"RTN","IVMPREC8",411,0)
 I '(EMAIL?1.E1"@"1.E1"."1.E) Q 0
"RTN","IVMPREC8",412,0)
 Q 1
"RTN","IVMPREC9")
0^131^B65534530^B63018866
"RTN","IVMPREC9",1,0)
IVMPREC9 ;ALB/KCL/BRM/CKN,TDM - PROCESS INCOMING (Z05 EVENT TYPE) HL7 MESSAGES (CON'T) ; 6/27/11 6:44pm
"RTN","IVMPREC9",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**34,58,115,121,151**; 21-OCT-94;Build 10
"RTN","IVMPREC9",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMPREC9",4,0)
 ;
"RTN","IVMPREC9",5,0)
 ;
"RTN","IVMPREC9",6,0)
 ;
"RTN","IVMPREC9",7,0)
STORE ; - store HL7 fields that have a different value than DHCP fields in
"RTN","IVMPREC9",8,0)
 ;   the IVM Patient (#301.5) file (#301.511) multiple for uploading
"RTN","IVMPREC9",9,0)
 ;
"RTN","IVMPREC9",10,0)
 S:$D(AUPFARY(IVMDEMDA)) UPDAUP(IVMDEMDA)=""
"RTN","IVMPREC9",11,0)
 G:IVMFLG STORE2
"RTN","IVMPREC9",12,0)
 S X=$$IEN^IVMUFNC4("PID")
"RTN","IVMPREC9",13,0)
 ;
"RTN","IVMPREC9",14,0)
 K DIC("DR")
"RTN","IVMPREC9",15,0)
 S DA(1)=IVM3015
"RTN","IVMPREC9",16,0)
 I $G(^IVM(301.5,DA(1),"IN",0))']"" S ^(0)="^301.501PA^^"
"RTN","IVMPREC9",17,0)
 S DIC="^IVM(301.5,"_DA(1)_",""IN"",",DIC(0)="L",DLAYGO=301.501
"RTN","IVMPREC9",18,0)
 K DD,DO D FILE^DICN
"RTN","IVMPREC9",19,0)
 K DIC,DLAYGO,X,Y
"RTN","IVMPREC9",20,0)
 ;
"RTN","IVMPREC9",21,0)
 ; - build mail message if SUPRESS DEMOGRAPHIC NOTIFICATION field is
"RTN","IVMPREC9",22,0)
 ;   not set in the IVM Site Parameter (#301.9) file
"RTN","IVMPREC9",23,0)
 ;
"RTN","IVMPREC9",24,0)
 I '$P($G(^IVM(301.9,1,0)),"^",5),'IVMADFLG D DEMBULL^IVMPREC6
"RTN","IVMPREC9",25,0)
 ;
"RTN","IVMPREC9",26,0)
 ; - set flag in order to not repeat STORE tag for one msg
"RTN","IVMPREC9",27,0)
 S IVMFLG=1
"RTN","IVMPREC9",28,0)
 ;
"RTN","IVMPREC9",29,0)
 S DA(2)=DA(1)
"RTN","IVMPREC9",30,0)
 S DA(1)=$P(^IVM(301.5,DA(1),"IN",0),"^",3)
"RTN","IVMPREC9",31,0)
 ;
"RTN","IVMPREC9",32,0)
STORE2 ;
"RTN","IVMPREC9",33,0)
 ; - X as the record in the IVM Demo Upload Fields (#301.92) file
"RTN","IVMPREC9",34,0)
 S X=+IVMDEMDA
"RTN","IVMPREC9",35,0)
 I $G(^IVM(301.5,DA(2),"IN",DA(1),"DEM",0))']"" S ^(0)="^301.511PA^^"
"RTN","IVMPREC9",36,0)
 S DIC="^IVM(301.5,"_DA(2)_",""IN"",DA(1),""DEM"",",DIC(0)="L"
"RTN","IVMPREC9",37,0)
 S DIC("DR")=".02////^S X=IVMFLD",DLAYGO=301.511
"RTN","IVMPREC9",38,0)
 K DD,DO D FILE^DICN
"RTN","IVMPREC9",39,0)
 K DIC,DLAYGO,X,Y
"RTN","IVMPREC9",40,0)
 ;
"RTN","IVMPREC9",41,0)
 Q
"RTN","IVMPREC9",42,0)
 ;
"RTN","IVMPREC9",43,0)
 ;
"RTN","IVMPREC9",44,0)
LOOK ; Find the current DHCP field value.
"RTN","IVMPREC9",45,0)
 ;  Input:   DR  --   Field number of the field in file #2
"RTN","IVMPREC9",46,0)
 ;          DFN  --   Pointer to the patient in file #2
"RTN","IVMPREC9",47,0)
 ;  Output:   Y  --   Internal value of field
"RTN","IVMPREC9",48,0)
 ;
"RTN","IVMPREC9",49,0)
 N IVMOUTTY,I
"RTN","IVMPREC9",50,0)
 ;S DIC="^DPT(",DA=DFN,DIQ="IVM",DIQ(0)="I" D EN^DIQ1
"RTN","IVMPREC9",51,0)
 S DIQ(0)=$S($G(DIQ(0))="":"I",$G(DIQ(0))="E":"E",1:"I")
"RTN","IVMPREC9",52,0)
 S IVMOUTTY=DIQ(0)
"RTN","IVMPREC9",53,0)
 S DIC="^DPT(",DA=DFN,DIQ="IVM" D EN^DIQ1
"RTN","IVMPREC9",54,0)
 ;S Y=$G(IVM(2,DFN,DR,"I"))
"RTN","IVMPREC9",55,0)
 S Y=$G(IVM(2,DFN,DR,IVMOUTTY))
"RTN","IVMPREC9",56,0)
 K DIC,DIQ,DR,IVM
"RTN","IVMPREC9",57,0)
 Q
"RTN","IVMPREC9",58,0)
AUTOEPC(DFN,UPDEPC) ;
"RTN","IVMPREC9",59,0)
 ; this functionality is copied from IVMLDEM6 and modified to allow
"RTN","IVMPREC9",60,0)
 ; an automated upload of patient communications information
"RTN","IVMPREC9",61,0)
 ;  Input:     DFN  -  as patient IEN
"RTN","IVMPREC9",62,0)
 ;          UPDEPC  -  array contains flag for update/noupdate for all
"RTN","IVMPREC9",63,0)
 ;                     communication types.
"RTN","IVMPREC9",64,0)
 ; Output: IVMFLAG  -  1 if communications fields updated
"RTN","IVMPREC9",65,0)
 ;                     0 if communications fields not updated
"RTN","IVMPREC9",66,0)
 ;
"RTN","IVMPREC9",67,0)
 N IVMFLAG,IVMI,IVMJ,IVMNODE,IVMPTR,Y,UPDT,IVMCVAL,IVMCFLD,SITEFLD,DFLG,CTYP,UPDT
"RTN","IVMPREC9",68,0)
 S IVMFLAG=0  ;initialize flags
"RTN","IVMPREC9",69,0)
 ; - check for required parameters
"RTN","IVMPREC9",70,0)
 Q:'$G(DFN) IVMFLAG
"RTN","IVMPREC9",71,0)
 S IVMDA2=$G(IVM3015)
"RTN","IVMPREC9",72,0)
 Q:'$G(IVMDA2) IVMFLAG
"RTN","IVMPREC9",73,0)
 S IVMDA1=$O(^HL(771.3,"B","PID",""))
"RTN","IVMPREC9",74,0)
 S IVMDA1=$O(^IVM(301.5,IVMDA2,"IN","B",IVMDA1,""),-1)
"RTN","IVMPREC9",75,0)
 Q:'IVMDA1 IVMFLAG
"RTN","IVMPREC9",76,0)
 ;
"RTN","IVMPREC9",77,0)
 S IVMI=0 F  S IVMI=$O(^IVM(301.92,"AD",IVMI)) Q:IVMI']""  D
"RTN","IVMPREC9",78,0)
 .S IVMJ=0 F  S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,IVMJ)) Q:IVMJ']""  D
"RTN","IVMPREC9",79,0)
 ..S (UPDT,DFLG)=0
"RTN","IVMPREC9",80,0)
 ..; - check for data node in (#301.511) sub-file
"RTN","IVMPREC9",81,0)
 ..S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0))
"RTN","IVMPREC9",82,0)
 ..I ('+IVMNODE)!($P(IVMNODE,"^",2)']"") Q
"RTN","IVMPREC9",83,0)
 ..;Check if fields needs to be updated for particular comm. Type.
"RTN","IVMPREC9",84,0)
 ..S CTYP=0 F  S CTYP=$O(UPDEPC(CTYP)) Q:CTYP=""!UPDT  D
"RTN","IVMPREC9",85,0)
 ...I ("^"_$G(UPDEPC(CTYP))_"^")[("^"_+IVMNODE_"^") S UPDT=1
"RTN","IVMPREC9",86,0)
 ..S IVMCFLD=$P($G(^IVM(301.92,+IVMNODE,0)),"^",5),IVMCVAL=$P(IVMNODE,"^",2)
"RTN","IVMPREC9",87,0)
 ..; - load communications fields rec'd from IVM into DHCP (#2) file
"RTN","IVMPREC9",88,0)
 ..I UPDT D UPLOAD^IVMLDEM6(+DFN,IVMCFLD,IVMCVAL) S IVMFLAG=1
"RTN","IVMPREC9",89,0)
 ..; delete inaccurate Addr Change Site data if Source is not VAMC
"RTN","IVMPREC9",90,0)
 ..I UPDT,((IVMCFLD=.1311)!(IVMCFLD=.1313)!(IVMCFLD=.137)) D
"RTN","IVMPREC9",91,0)
 ...I IVMCVAL="VAMC" Q
"RTN","IVMPREC9",92,0)
 ...S SITEFLD=$S(IVMCFLD=.1311:.13111,IVMCFLD=.1313:.1314,IVMCFLD=.137:.138)
"RTN","IVMPREC9",93,0)
 ... S FDA(2,+DFN_",",SITEFLD)="@" D UPDATE^DIE("E","FDA")
"RTN","IVMPREC9",94,0)
 ..; - remove entry only for Email, Cell and Pager from (#301.511) sub-file
"RTN","IVMPREC9",95,0)
 ..S CTYP=0 F  S CTYP=$O(EPCFARY(CTYP)) Q:CTYP=""!DFLG  D
"RTN","IVMPREC9",96,0)
 ...I ("^"_$G(EPCFARY(CTYP))_"^")[("^"_+IVMNODE_"^") S DFLG=1
"RTN","IVMPREC9",97,0)
 ..I DFLG D DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMJ)
"RTN","IVMPREC9",98,0)
 ;Delete all communication data (Email, Cell phone, Pager) if they are not received in Z05.
"RTN","IVMPREC9",99,0)
 I $D(EPCDEL) D
"RTN","IVMPREC9",100,0)
 . N CTYPE,DIE,DR,DA,CNTR,VAL
"RTN","IVMPREC9",101,0)
 . S DR="",CNTR=0,VAL="@"
"RTN","IVMPREC9",102,0)
 . S CTYPE="" F  S CTYPE=$O(EPCDEL(CTYPE)) Q:CTYPE=""  D
"RTN","IVMPREC9",103,0)
 . . F I=1:1:$L(EPCDEL(CTYPE),"^") S CNTR=CNTR+1,$P(DR,";",CNTR)=$P(EPCDEL(CTYPE),"^",I)_"////^S X=VAL"
"RTN","IVMPREC9",104,0)
 . S DIE="^DPT(",DA=DFN
"RTN","IVMPREC9",105,0)
 . D ^DIE K DIE,DA,DR
"RTN","IVMPREC9",106,0)
 Q IVMFLAG
"RTN","IVMPREC9",107,0)
 ;
"RTN","IVMPREC9",108,0)
AUTORINC(DFN) ;
"RTN","IVMPREC9",109,0)
 ; application to automatically upload Rated Incompetent data
"RTN","IVMPREC9",110,0)
 ; Input:     DFN   -   Patient IEN
"RTN","IVMPREC9",111,0)
 N IVMI,IVMJ,IVMDA1,IVMDA2,IVMNODE,IVMFLAG,IVMRIVAL,IVMRIFLD
"RTN","IVMPREC9",112,0)
 S IVMFLAG=0
"RTN","IVMPREC9",113,0)
 S IVMDA2=$G(IVM3015)
"RTN","IVMPREC9",114,0)
 I 'IVMDA2 Q IVMFLAG
"RTN","IVMPREC9",115,0)
 S IVMDA1=$O(^HL(771.3,"B","PID",""))
"RTN","IVMPREC9",116,0)
 S IVMDA1=$O(^IVM(301.5,IVMDA2,"IN","B",IVMDA1,""),-1)
"RTN","IVMPREC9",117,0)
 S IVMI=$O(^IVM(301.92,"C","ZPD08","")) I IVMI="" Q IVMFLAG
"RTN","IVMPREC9",118,0)
 S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,""))
"RTN","IVMPREC9",119,0)
 I IVMJ']"" Q IVMFLAG
"RTN","IVMPREC9",120,0)
 ; - check for data node in (#301.511) sub-file
"RTN","IVMPREC9",121,0)
 S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0))
"RTN","IVMPREC9",122,0)
 I '(+IVMNODE)!($P(IVMNODE,"^",2)']"") Q IVMFLAG
"RTN","IVMPREC9",123,0)
 S IVMRIFLD=$P($G(^IVM(301.92,+IVMNODE,0)),"^",5),IVMRIVAL=$P(IVMNODE,"^",2)
"RTN","IVMPREC9",124,0)
 I IVMRIVAL="""""" S IVMRIVAL="@"
"RTN","IVMPREC9",125,0)
 D UPLOAD^IVMLDEM6(DFN,IVMRIFLD,IVMRIVAL) S IVMFLAG=1
"RTN","IVMPREC9",126,0)
 ; - remove entry from (#301.511) sub-file
"RTN","IVMPREC9",127,0)
 D DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMJ)
"RTN","IVMPREC9",128,0)
 Q IVMFLAG
"RTN","IVMPREC9",129,0)
PHONE ; - ask user to delete phone # [Residence] from Patient (#2) file
"RTN","IVMPREC9",130,0)
 ; This tag is moved here from IVMLDEM6 due to routine size limit
"RTN","IVMPREC9",131,0)
 D FULL^VALM1
"RTN","IVMPREC9",132,0)
 W ! S DIR("A")="Is it okay to delete the patient's Phone Number [Residence]"
"RTN","IVMPREC9",133,0)
 W ! S DIR("A",1)="The patient's address has been updated and the phonenumber"
"RTN","IVMPREC9",134,0)
 S DIR("A",2)="remains on file."
"RTN","IVMPREC9",135,0)
 S DIR("A",3)=" "
"RTN","IVMPREC9",136,0)
 S DIR("A",4)="Patient Name: "_$P($$PT^IVMUFNC4(+DFN),"^")_" ("_$P($$PT^IVMUFNC4(+DFN),"^",3)_")"
"RTN","IVMPREC9",137,0)
 S DIR("A",5)="Phone Number [Residence]: "_$P($G(^DPT(+DFN,.13)),"^")
"RTN","IVMPREC9",138,0)
 S DIR("A",6)=" "
"RTN","IVMPREC9",139,0)
 S DIR("?",1)="Enter 'YES' to delete the patient's Phone Number [Residence] that is"
"RTN","IVMPREC9",140,0)
 S DIR("?",2)="currently on file.  Enter 'NO' to quit without deleting the patient's"
"RTN","IVMPREC9",141,0)
 S DIR("?")="Phone Number [Residence]."
"RTN","IVMPREC9",142,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IVMPREC9",143,0)
 D ^DIR K DIR
"RTN","IVMPREC9",144,0)
 S:Y $P(^DPT(DFN,.13),"^")="" W !!,"Patient's Phone Number [Residence] has ",$S(Y:"",1:"not "),"been deleted."
"RTN","IVMPREC9",145,0)
 Q
"RTN","IVMPREC9",146,0)
 ;
"RTN","IVMPREC9",147,0)
AUTOAUP(DFN,UPDAUP,UPDAUPG) ;
"RTN","IVMPREC9",148,0)
 ; automated upload of misc information
"RTN","IVMPREC9",149,0)
 ;  Input:     DFN  -  patient IEN
"RTN","IVMPREC9",150,0)
 ;          UPDAUP  -  array contains fields for auto-upload
"RTN","IVMPREC9",151,0)
 ;         UPDAUPG  -  array contains field group flag for auto-upload
"RTN","IVMPREC9",152,0)
 ;
"RTN","IVMPREC9",153,0)
 N IVMDA2,IVMDA1,IVMI,MULTFLG,IVMXREF,UFLG,IVMJ,IVMNODE,IVMCFLD,IVMCVAL,Y,IVM30192,MULFIL
"RTN","IVMPREC9",154,0)
 Q:'$G(DFN)
"RTN","IVMPREC9",155,0)
 S IVMDA2=$G(IVM3015) Q:'IVMDA2
"RTN","IVMPREC9",156,0)
 S IVMDA1=$O(^HL(771.3,"B","PID",""))
"RTN","IVMPREC9",157,0)
 S IVMDA1=$O(^IVM(301.5,IVMDA2,"IN","B",IVMDA1,""),-1) Q:'IVMDA1
"RTN","IVMPREC9",158,0)
 ;
"RTN","IVMPREC9",159,0)
 S IVMI="" F  S IVMI=$O(UPDAUP(IVMI)) Q:IVMI=""  D
"RTN","IVMPREC9",160,0)
 .;
"RTN","IVMPREC9",161,0)
 .;If DHCP field is a multiple set multiple flag for special filing
"RTN","IVMPREC9",162,0)
 .S MULTFLG=0
"RTN","IVMPREC9",163,0)
 .S IVM30192=$G(^IVM(301.92,IVMI,0)),IVMXREF=$P(IVM30192,"^",2)
"RTN","IVMPREC9",164,0)
 .I IVMXREF="PID10" S MULTFLG=1       ;Race
"RTN","IVMPREC9",165,0)
 .I IVMXREF="PID117C" S MULTFLG=1     ;Conf Addr Category
"RTN","IVMPREC9",166,0)
 .I IVMXREF="PID22" S MULTFLG=1       ;Ethnicity
"RTN","IVMPREC9",167,0)
 .;
"RTN","IVMPREC9",168,0)
 .;Don't file if part of a group & group update flag not set
"RTN","IVMPREC9",169,0)
 .S UFLG=1 I AUPFARY(IVMI)'="",'UPDAUPG(AUPFARY(IVMI)) S UFLG=0
"RTN","IVMPREC9",170,0)
 .;
"RTN","IVMPREC9",171,0)
 .S IVMJ=0 F  S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,IVMJ)) Q:IVMJ']""  D
"RTN","IVMPREC9",172,0)
 ..S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0))
"RTN","IVMPREC9",173,0)
 ..I $G(AUPFARY(+$P(IVMNODE,"^")))'="",(($P(IVMNODE,"^",2)="")!($P(IVMNODE,"^",2)="""""")) S $P(IVMNODE,"^",2)="@"
"RTN","IVMPREC9",174,0)
 ..I +$G(ZEMADRUP(IVMXREF)),$P(IVMNODE,"^",2)="" S $P(IVMNODE,"^",2)="@"
"RTN","IVMPREC9",175,0)
 ..I ('+IVMNODE)!($P(IVMNODE,"^",2)']"") Q
"RTN","IVMPREC9",176,0)
 ..S IVMCFLD=$P($G(^IVM(301.92,+IVMNODE,0)),"^",5)
"RTN","IVMPREC9",177,0)
 ..S IVMCVAL=$P(IVMNODE,"^",2)
"RTN","IVMPREC9",178,0)
 ..;
"RTN","IVMPREC9",179,0)
 ..I UFLG D
"RTN","IVMPREC9",180,0)
 ...I MULTFLG D AUTOAUPM(+DFN,IVM30192,IVMCVAL)         ;file mult fld
"RTN","IVMPREC9",181,0)
 ...I 'MULTFLG D UPLOAD^IVMLDEM6(+DFN,IVMCFLD,IVMCVAL)  ;file non-mult
"RTN","IVMPREC9",182,0)
 ..D DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMJ)          ;remove from 301.511
"RTN","IVMPREC9",183,0)
 ..; - if no display or uploadable fields left, delete the PID segment
"RTN","IVMPREC9",184,0)
 ..I '$$DEMO^IVMLDEM5(IVMDA2,IVMDA1,0),'$$DEMO^IVMLDEM5(IVMDA2,IVMDA1,1) D
"RTN","IVMPREC9",185,0)
 ...D DELETE^IVMLDEM5(IVMDA2,IVMDA1," ") ; Dummy up name parameter
"RTN","IVMPREC9",186,0)
 Q
"RTN","IVMPREC9",187,0)
 ;
"RTN","IVMPREC9",188,0)
AUTOAUPM(DFN,IVM30192,IVMVALUE) ;
"RTN","IVMPREC9",189,0)
 ;  Input:       DFN  -  as patient IEN
"RTN","IVMPREC9",190,0)
 ;          IVM30192  -  as '0' node of the 301.92 entry
"RTN","IVMPREC9",191,0)
 ;          IVMVALUE  -  as the value of the field
"RTN","IVMPREC9",192,0)
 ;
"RTN","IVMPREC9",193,0)
 ; Output: None
"RTN","IVMPREC9",194,0)
 ;
"RTN","IVMPREC9",195,0)
 N MFIL,MFLD,DDINFO,DDMNOD,DDMFLD,DA,DIK,DGENDA,MULFIL,DATA,SUB
"RTN","IVMPREC9",196,0)
 S MFIL=$P(IVM30192,"^",4),MFLD=$P(IVM30192,"^",5)
"RTN","IVMPREC9",197,0)
 S DDINFO=$G(^DD(MFIL,MFLD,0))
"RTN","IVMPREC9",198,0)
 S DDMNOD=$P($P(DDINFO,"^",4),";"),DDMFLD=+$P(DDINFO,"^",2)
"RTN","IVMPREC9",199,0)
 ;
"RTN","IVMPREC9",200,0)
 ; - delete values currently in the multiple field
"RTN","IVMPREC9",201,0)
 S DA(1)=DFN,DIK="^DPT("_DFN_","""_DDMNOD_""","
"RTN","IVMPREC9",202,0)
 S DA=0 F  S DA=$O(^DPT(DFN,DDMNOD,DA)) Q:'DA  D ^DIK
"RTN","IVMPREC9",203,0)
 ;
"RTN","IVMPREC9",204,0)
 ; - add new values to multiple field
"RTN","IVMPREC9",205,0)
 S DGENDA(1)=DFN
"RTN","IVMPREC9",206,0)
 ;
"RTN","IVMPREC9",207,0)
 I DDMFLD=2.02 D
"RTN","IVMPREC9",208,0)
 .S DATA(.02)=$$FIND1^DIC(10.3,,,"SELF IDENTIFICATION")
"RTN","IVMPREC9",209,0)
 .S SUB="" F  S SUB=$O(IVMRACE(2,SUB)) Q:SUB=""  D
"RTN","IVMPREC9",210,0)
 ..S DATA(.01)=SUB
"RTN","IVMPREC9",211,0)
 ..I $$ADD^DGENDBS(DDMFLD,.DGENDA,.DATA)
"RTN","IVMPREC9",212,0)
 ;
"RTN","IVMPREC9",213,0)
 I DDMFLD=2.06 D
"RTN","IVMPREC9",214,0)
 .S DATA(.01)=IVMVALUE
"RTN","IVMPREC9",215,0)
 .S DATA(.02)=$$FIND1^DIC(10.3,,,"SELF IDENTIFICATION")
"RTN","IVMPREC9",216,0)
 .I $$ADD^DGENDBS(DDMFLD,.DGENDA,.DATA)
"RTN","IVMPREC9",217,0)
 ;
"RTN","IVMPREC9",218,0)
 I DDMFLD=2.141 D
"RTN","IVMPREC9",219,0)
 .S DATA(1)="Y"
"RTN","IVMPREC9",220,0)
 .S SUB="" F  S SUB=$O(CONFADCT(SUB)) Q:SUB=""  D
"RTN","IVMPREC9",221,0)
 ..S DATA(.01)=SUB
"RTN","IVMPREC9",222,0)
 ..I $$ADD^DGENDBS(DDMFLD,.DGENDA,.DATA)
"RTN","IVMPREC9",223,0)
 Q
"RTN","IVMPRECA")
0^129^B87617069^B87129700
"RTN","IVMPRECA",1,0)
IVMPRECA ;ALB/KCL/BRM/PJR/RGL/CKN,TDM - DEMOGRAPHICS MESSAGE CONSISTENCY CHECK ; 7/19/11 11:16am
"RTN","IVMPRECA",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**5,6,12,34,58,56,115,144,121,151**;21-OCT-94;Build 10
"RTN","IVMPRECA",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMPRECA",4,0)
 ;
"RTN","IVMPRECA",5,0)
 ; This routine will perform data validation checks on uploadable
"RTN","IVMPRECA",6,0)
 ; demographic fields received from the IVM Center to ensure they
"RTN","IVMPRECA",7,0)
 ; are acurate prior to their upload into DHCP.
"RTN","IVMPRECA",8,0)
 ;
"RTN","IVMPRECA",9,0)
 ;
"RTN","IVMPRECA",10,0)
 ; Called from routine IVMPREC6 before uploadable demographic fields
"RTN","IVMPRECA",11,0)
 ; are stored in DHCP.
"RTN","IVMPRECA",12,0)
 ;
"RTN","IVMPRECA",13,0)
 ;
"RTN","IVMPRECA",14,0)
EN ; - Entry point to create temp array and perform msg consistency checks
"RTN","IVMPRECA",15,0)
 ;
"RTN","IVMPRECA",16,0)
 N DFN,IVMCNTY,IVMCR,IVMEG,IVMFLAG,IVMFLD,IVMNUM,IVMSTR,IVMSTPTR,X
"RTN","IVMPRECA",17,0)
 N COMP,CNTR,NOPID,ADDRTYPE,ADDSEQ,TELESEQ,COMMTYPE,TCFLG,TMPARRY,PID3ARRY,CNTR2
"RTN","IVMPRECA",18,0)
 N MULTDONE
"RTN","IVMPRECA",19,0)
 K IVMRACE
"RTN","IVMPRECA",20,0)
 S IVMNUM=IVMDA ; 'current' line in ^HL(772,"IN",...
"RTN","IVMPRECA",21,0)
 S DODSEG=0 ;Initialize flag for DOD information
"RTN","IVMPRECA",22,0)
 S GUARSEG=0 ;Initialize flag for Guardian information
"RTN","IVMPRECA",23,0)
 ;
"RTN","IVMPRECA",24,0)
 ; - check the format of the HL7 demographic message
"RTN","IVMPRECA",25,0)
 D NEXT I $E(IVMSTR,1,3)'="PID" S HLERR="Missing PID segment" G ENQ
"RTN","IVMPRECA",26,0)
 S CNTR=1,NOPID=0,PIDSTR(CNTR)=$P(IVMSTR,HLFS,2,999)
"RTN","IVMPRECA",27,0)
 ;Handle wrapped PID segment
"RTN","IVMPRECA",28,0)
 F I=1:1 D  Q:NOPID
"RTN","IVMPRECA",29,0)
 . D NEXT I $E(IVMSTR,1,4)="ZPD^" S NOPID=1 Q
"RTN","IVMPRECA",30,0)
 . S CNTR=CNTR+1,PIDSTR(CNTR)=IVMSTR
"RTN","IVMPRECA",31,0)
 D BLDPID^IVMPREC6(.PIDSTR,.IVMPID)  ;Create IVMPID subscript by seq #
"RTN","IVMPRECA",32,0)
 ;convert "" to null for PID segment
"RTN","IVMPRECA",33,0)
 S CNTR="" F  S CNTR=$O(IVMPID(CNTR)) Q:CNTR=""  D
"RTN","IVMPRECA",34,0)
 . I $O(IVMPID(CNTR,"")) D  Q
"RTN","IVMPRECA",35,0)
 . . S CNTR2="" F  S CNTR2=$O(IVMPID(CNTR,CNTR2)) Q:CNTR2=""  D
"RTN","IVMPRECA",36,0)
 . . . S IVMPID(CNTR,CNTR2)=$$CLEARF(IVMPID(CNTR,CNTR2),$E(HLECH))
"RTN","IVMPRECA",37,0)
 . I CNTR=11 S IVMPID(CNTR)=$$CLEARF(IVMPID(CNTR),$E(HLECH)) Q
"RTN","IVMPRECA",38,0)
 . I IVMPID(CNTR)=HLQ S IVMPID(CNTR)=""
"RTN","IVMPRECA",39,0)
 I $E(IVMSTR,1,3)'="ZPD" S HLERR="Missing ZPD segment" G ENQ
"RTN","IVMPRECA",40,0)
 S IVMSTR("ZPD")=$P(IVMSTR,HLFS,2,999)
"RTN","IVMPRECA",41,0)
 I $P(IVMSTR("ZPD"),HLFS,8)'="" S GUARSEG=1
"RTN","IVMPRECA",42,0)
 I $P(IVMSTR("ZPD"),HLFS,9)'="" S DODSEG=1
"RTN","IVMPRECA",43,0)
 D NEXT I $E(IVMSTR,1,3)="ZEL" S HLERR="ZEL segment should not be sent in Z05 message" G ENQ
"RTN","IVMPRECA",44,0)
 ;I $E(IVMSTR,1,3)="ZTA" D NEXT  ;Skip ZTA -coming later
"RTN","IVMPRECA",45,0)
 I $E(IVMSTR,1,3)'="ZTA" S HLERR="Missing ZTA segment" G ENQ
"RTN","IVMPRECA",46,0)
 S IVMSTR("ZTA")=$P(IVMSTR,HLFS,2,999)
"RTN","IVMPRECA",47,0)
 D NEXT
"RTN","IVMPRECA",48,0)
 I $E(IVMSTR,1,3)'="ZGD" S HLERR="Missing ZGD segment" G ENQ
"RTN","IVMPRECA",49,0)
 S IVMSTR("ZGD")=$P(IVMSTR,HLFS,2,999)
"RTN","IVMPRECA",50,0)
 ;
"RTN","IVMPRECA",51,0)
 ; - perform field validation checks for PID segment
"RTN","IVMPRECA",52,0)
 M TMPARRY(3)=IVMPID(3) D PARSPID3^IVMUFNC(.TMPARRY,.PID3ARY)
"RTN","IVMPRECA",53,0)
 S DFN=$G(PID3ARY("PI")),ICN=$G(PID3ARY("NI"))
"RTN","IVMPRECA",54,0)
 K TMPARRY,PID3ARY
"RTN","IVMPRECA",55,0)
 I '$$MATCH^IVMUFNC(DFN,ICN,"","","I",.ERRMSG) S HLERR=ERRMSG G ENQ
"RTN","IVMPRECA",56,0)
 S IVMDFN=DFN  ;Store DFN in temp variable to use later
"RTN","IVMPRECA",57,0)
 ;I IVMPID(19)'=$P(^DPT(DFN,0),"^",9) S HLERR="Couldn't match IVM SSN with DHCP SSN" G ENQ
"RTN","IVMPRECA",58,0)
 ;
"RTN","IVMPRECA",59,0)
 S X=IVMPID(7) I X]"",($$FMDATE^HLFNC(X)>DT) S HLERR="Date of Birth greater than current date" G ENQ
"RTN","IVMPRECA",60,0)
 ;
"RTN","IVMPRECA",61,0)
 S X=IVMPID(8) I X]"",X'="M",X'="F" S HLERR="Invalid code sent for Patient sex" G ENQ
"RTN","IVMPRECA",62,0)
 ;
"RTN","IVMPRECA",63,0)
 ; Marital Status
"RTN","IVMPRECA",64,0)
 S X=$G(IVMPID(16)) I (X'="")&(X'="D")&(X'="M")&(X'="W")&(X'="U")&(X'="A")&(X'="S") D  G ENQ
"RTN","IVMPRECA",65,0)
 . S HLERR="Invalid code sent for Patient Marital Status" G ENQ
"RTN","IVMPRECA",66,0)
 ; Religion
"RTN","IVMPRECA",67,0)
 S X=$G(IVMPID(17)) I X'="" S X=$O(^DIC(13,"C",+X,"")) I X="" D  G ENQ
"RTN","IVMPRECA",68,0)
 . S HLERR="Invalid code sent for Patient Religion"
"RTN","IVMPRECA",69,0)
 ; Ethnicity
"RTN","IVMPRECA",70,0)
 S X=$P($G(IVMPID(22)),$E(HLECH),4) I X]"" S X=$O(^DIC(10.2,"AHL7",X,"")) I X="" D  G ENQ
"RTN","IVMPRECA",71,0)
 . S HLERR="Invalid code sent for Patient Ethnicity" G ENQ
"RTN","IVMPRECA",72,0)
 ;
"RTN","IVMPRECA",73,0)
 ; - if address - perform validation checks on addr fields
"RTN","IVMPRECA",74,0)
 ;Get all address from seq. 11 of PID segment
"RTN","IVMPRECA",75,0)
 I 'DODSEG,'GUARSEG D
"RTN","IVMPRECA",76,0)
 . D PID11 Q:$D(HLERR)
"RTN","IVMPRECA",77,0)
 . D PID10 Q:$D(HLERR)
"RTN","IVMPRECA",78,0)
 . D PID13
"RTN","IVMPRECA",79,0)
 G ENQ:$D(HLERR)
"RTN","IVMPRECA",80,0)
 ;
"RTN","IVMPRECA",81,0)
 ; - perform field validation check for ZPD and ZGD segment
"RTN","IVMPRECA",82,0)
 ; - I X]"" was changed to I X below for IVM*2*56
"RTN","IVMPRECA",83,0)
 S X=$P(IVMSTR("ZPD"),HLFS,9) I X,($$FMDATE^HLFNC(X)<$P($G(^DPT(+DFN,0)),"^",3))!($$FMDATE^HLFNC(X)>$$DT^XLFDT) S HLERR="Invalid date of death" G ENQ
"RTN","IVMPRECA",84,0)
 ; IVM*2*121 - Added new check for ZGD
"RTN","IVMPRECA",85,0)
 N ZGD3
"RTN","IVMPRECA",86,0)
 S ZGD3=$P(IVMSTR("ZGD"),HLFS,3)
"RTN","IVMPRECA",87,0)
 S X=$P(IVMSTR("ZGD"),HLFS,2)
"RTN","IVMPRECA",88,0)
 I X=HLQ S HLERR="Invalid Guardian Type" G ENQ
"RTN","IVMPRECA",89,0)
 I X,X'=1 S HLERR="Invalid Guardian Type" G ENQ
"RTN","IVMPRECA",90,0)
 I X=1,((ZGD3=HLQ)!(ZGD3="")) S HLERR="Invalid Guardian Type" G ENQ
"RTN","IVMPRECA",91,0)
 ;
"RTN","IVMPRECA",92,0)
 ;
"RTN","IVMPRECA",93,0)
ENQ ; - send acknowledgement (ACK) 'AE' msg to the IVM Center
"RTN","IVMPRECA",94,0)
 I $D(HLERR) D ACK^IVMPREC
"RTN","IVMPRECA",95,0)
 Q
"RTN","IVMPRECA",96,0)
 ;
"RTN","IVMPRECA",97,0)
 ;
"RTN","IVMPRECA",98,0)
ADDRCHK ; - validate address fields sent by IVM Center
"RTN","IVMPRECA",99,0)
 N HLERRDEF
"RTN","IVMPRECA",100,0)
 ;I ADDRTYPE="N" D  Q   ;Birth City & State
"RTN","IVMPRECA",101,0)
 ;. I $P(X,$E(HLECH),3)']"" S HLERR="Invalid address - Missing birth city" Q
"RTN","IVMPRECA",102,0)
 ;. I $P(X,$E(HLECH),4)']"" S HLERR="Invalid address - Missing birth state abbreviation" Q
"RTN","IVMPRECA",103,0)
 ;. S IVMSTPTR=+$O(^DIC(5,"C",$P(X,$E(HLECH),4),0))
"RTN","IVMPRECA",104,0)
 ;. I 'IVMSTPTR S HLERR="Invalid birth state abbreviation" Q
"RTN","IVMPRECA",105,0)
 ;
"RTN","IVMPRECA",106,0)
 S HLERRDEF="Invalid "_$S(ADDRTYPE="CA":"Confidential ",1:"")_"address - "
"RTN","IVMPRECA",107,0)
 S CNTRY=$P(X,$E(HLECH),6) I CNTRY']"" S HLERR=HLERRDEF_"Missing Country" Q
"RTN","IVMPRECA",108,0)
 I '$$CNTRCONV^IVMPREC8(CNTRY) S HLERR=HLERRDEF_"Invalid Country" Q
"RTN","IVMPRECA",109,0)
 S FORFLG=$S(CNTRY="USA":0,1:1)
"RTN","IVMPRECA",110,0)
 I $P(X,$E(HLECH),1)']"" S HLERR=HLERRDEF_"Missing street address [line 1]" Q
"RTN","IVMPRECA",111,0)
 I $P(X,$E(HLECH),3)']"" S HLERR=HLERRDEF_"Missing city" Q
"RTN","IVMPRECA",112,0)
 ;I $P(X,$E(HLECH),4)']"" S HLERR=HLERRDEF_"Missing "_$S('FORFLG:"state abbreviation",1:"province") Q
"RTN","IVMPRECA",113,0)
 ;I $P(X,$E(HLECH),5)']"" S HLERR=HLERRDEF_"Missing "_$S('FORFLG:"zip code",1:"postal code") Q
"RTN","IVMPRECA",114,0)
 I $P(X,$E(HLECH),4)']"",'FORFLG S HLERR=HLERRDEF_"Missing State abbreviation" Q
"RTN","IVMPRECA",115,0)
 I $P(X,$E(HLECH),5)']"",'FORFLG S HLERR=HLERRDEF_"Missing Zip Code" Q
"RTN","IVMPRECA",116,0)
 I 'FORFLG D  Q:$D(HLERR)
"RTN","IVMPRECA",117,0)
 . S IVMCNTY=$P(X,$E(HLECH),9)
"RTN","IVMPRECA",118,0)
 . I IVMCNTY']"" S HLERR=HLERRDEF_"Missing county code" Q
"RTN","IVMPRECA",119,0)
 I $L($P(X,$E(HLECH),1))>35!($L($P(X,$E(HLECH),1))<3) S HLERR="Invalid "_$S(ADDRTYPE="CA":"Confidential ",1:"")_"street address [line 1]" Q
"RTN","IVMPRECA",120,0)
 I $P(X,$E(HLECH),2)]"",(($L($P(X,$E(HLECH),2))>30)!($L($P(X,$E(HLECH),2))<3)) S HLERR="Invalid "_$S(ADDRTYPE="CA":"Confidential ",1:"")_"street address [line 2]" Q
"RTN","IVMPRECA",121,0)
 I ADDRTYPE'="CA" I $L($P(X,$E(HLECH),3))>15!($L($P(X,$E(HLECH),3))<2) S HLERR="Invalid city" Q
"RTN","IVMPRECA",122,0)
 ;I ADDRTYPE="CA" I $L($P(X,$E(HLECH),3))>30!($L($P(X,$E(HLECH),3))<2) S HLERR="Invalid Confidential city" Q
"RTN","IVMPRECA",123,0)
 ;
"RTN","IVMPRECA",124,0)
 ; - save state pointer for county code validation only if not foreign address
"RTN","IVMPRECA",125,0)
 I 'FORFLG D  Q:$D(HLERR)
"RTN","IVMPRECA",126,0)
 .S IVMSTPTR=+$O(^DIC(5,"C",$P(X,$E(HLECH),4),0))
"RTN","IVMPRECA",127,0)
 .I 'IVMSTPTR S HLERR="Invalid "_$S(ADDRTYPE="CA":"Confidential ",1:"")_"state abbreviation" Q
"RTN","IVMPRECA",128,0)
 .I '$O(^DIC(5,IVMSTPTR,1,"C",IVMCNTY,0)) D  Q:$G(HLERR)]""
"RTN","IVMPRECA",129,0)
 ..N STFIPS
"RTN","IVMPRECA",130,0)
 ..S STFIPS=IVMSTPTR
"RTN","IVMPRECA",131,0)
 ..S:$L(STFIPS)<2 STFIPS="0"_STFIPS
"RTN","IVMPRECA",132,0)
 ..Q:$$FIPSCHK^XIPUTIL(STFIPS_IVMCNTY)  ;county code is valid
"RTN","IVMPRECA",133,0)
 ..S HLERR="Invalid "_$S(ADDRTYPE="CA":"Confidential ",1:"")_"county code"
"RTN","IVMPRECA",134,0)
 .S X=$P(X,$E(HLECH),5) D ZIPIN^VAFADDR I $D(X)[0 S HLERR="Invalid "_$S(ADDRTYPE="CA":"Confidential ",1:"")_"zip code" Q
"RTN","IVMPRECA",135,0)
 Q
"RTN","IVMPRECA",136,0)
 ;
"RTN","IVMPRECA",137,0)
 ;
"RTN","IVMPRECA",138,0)
NEXT ; - get the next HL7 segment in the message from HL7 Transmission (#772) file
"RTN","IVMPRECA",139,0)
 S IVMNUM=$O(^TMP($J,IVMRTN,IVMNUM)),IVMSTR=$G(^(+IVMNUM,0))
"RTN","IVMPRECA",140,0)
 Q
"RTN","IVMPRECA",141,0)
 ;
"RTN","IVMPRECA",142,0)
PID10 ; Perform consistency checks for seq. 10
"RTN","IVMPRECA",143,0)
 ; Get all Race data from seq. 10 of PID segment
"RTN","IVMPRECA",144,0)
 N RACEVAL,RACEDA,RACEFLG,RACESQ
"RTN","IVMPRECA",145,0)
 S RACEFLG=1 ;Flag to check if Race data exist.
"RTN","IVMPRECA",146,0)
 I $D(IVMPID(10)) D
"RTN","IVMPRECA",147,0)
 . I $O(IVMPID(10,"")) D  Q
"RTN","IVMPRECA",148,0)
 . . S RACESQ=0 F  S RACESQ=$O(IVMPID(10,RACESQ)) Q:((RACESQ="")!($D(HLERR))!('RACEFLG))  D
"RTN","IVMPRECA",149,0)
 . . . I $G(IVMPID(10,RACESQ))="" S RACEFLG=0 Q
"RTN","IVMPRECA",150,0)
 . . . S RACEVAL=$P($P(IVMPID(10,RACESQ),$E(HLECH),1),"-",1,2)
"RTN","IVMPRECA",151,0)
 . . . I RACEVAL="" S HLERR="Missing Race Value - PID Seq 10" Q
"RTN","IVMPRECA",152,0)
 . . . S IVMRACE(1,RACEVAL)=IVMPID(10,RACESQ)
"RTN","IVMPRECA",153,0)
 . I $G(IVMPID(10))="" S RACEFLG=0 Q
"RTN","IVMPRECA",154,0)
 . I $P($P(IVMPID(10),$E(HLECH),1),"-",1,2)="" S HLERR="Missing Race Value - PID Seq 10" Q
"RTN","IVMPRECA",155,0)
 . S RACEVAL=$P($P(IVMPID(10),$E(HLECH),1),"-",1,2)
"RTN","IVMPRECA",156,0)
 . I RACEVAL="" S HLERR="Missing Race Value - PID Seq 10" Q
"RTN","IVMPRECA",157,0)
 . S IVMRACE(1,RACEVAL)=IVMPID(10)
"RTN","IVMPRECA",158,0)
 Q:$D(HLERR)
"RTN","IVMPRECA",159,0)
 ;perform consistency checks on Race
"RTN","IVMPRECA",160,0)
 I RACEFLG D
"RTN","IVMPRECA",161,0)
 . S RACEVAL="" F  S RACEVAL=$O(IVMRACE(1,RACEVAL)) Q:RACEVAL=""!$D(HLERR)  D
"RTN","IVMPRECA",162,0)
 . . S RACEDA=$$CODE2PTR^DGUTL4(RACEVAL,1,2)
"RTN","IVMPRECA",163,0)
 . . I RACEVAL="UNK-SLF" S RACEDA=$$CODE2PTR^DGUTL4("9999-4",1,2)
"RTN","IVMPRECA",164,0)
 . . I RACEDA<1 S HLERR="Invalid Race Value - PID Seq 10" Q
"RTN","IVMPRECA",165,0)
 . . S IVMRACE(2,RACEDA)=IVMRACE(1,RACEVAL)
"RTN","IVMPRECA",166,0)
 Q
"RTN","IVMPRECA",167,0)
 ;
"RTN","IVMPRECA",168,0)
PID11 ; Perform consistency check for seq. 11
"RTN","IVMPRECA",169,0)
 S CONFADCT=""
"RTN","IVMPRECA",170,0)
 I $D(IVMPID(11)) D
"RTN","IVMPRECA",171,0)
 . I $O(IVMPID(11,"")) D  Q
"RTN","IVMPRECA",172,0)
 . . S ADDSEQ=0 F  S ADDSEQ=$O(IVMPID(11,ADDSEQ)) Q:ADDSEQ=""!($D(HLERR))  D
"RTN","IVMPRECA",173,0)
 . . . I $G(IVMPID(11,ADDSEQ))="" S HLERR="Invalid Address - Missing Address information" Q
"RTN","IVMPRECA",174,0)
 . . . S ADDRTYPE=$P($G(IVMPID(11,ADDSEQ)),$E(HLECH),7)
"RTN","IVMPRECA",175,0)
 . . . I ADDRTYPE="" S HLERR="Invalid Address - Missing Address Type" Q
"RTN","IVMPRECA",176,0)
 . . . ; I ADDRTYPE="P"!(ADDRTYPE="VAB1")!(ADDRTYPE="VAB2")!(ADDRTYPE="VAB3")!(ADDRTYPE="VAB4") S ADDRESS(ADDRTYPE)=IVMPID(11,ADDSEQ)
"RTN","IVMPRECA",177,0)
 . . . Q:'$D(IVMALADT(ADDRTYPE))
"RTN","IVMPRECA",178,0)
 . . . I IVMALADT(ADDRTYPE)="" S ADDRESS(ADDRTYPE)=IVMPID(11,ADDSEQ)
"RTN","IVMPRECA",179,0)
 . . . ;I $P(IVMALADT(ADDRTYPE),"^")="CA" D
"RTN","IVMPRECA",180,0)
 . . . ;. S ADDRESS("CA")=IVMPID(11,ADDSEQ)
"RTN","IVMPRECA",181,0)
 . . . ;. S CONFADCT=$P(IVMALADT(ADDRTYPE),"^",2)
"RTN","IVMPRECA",182,0)
 . . . ;. S CONFADCT(CONFADCT)=""
"RTN","IVMPRECA",183,0)
 . I $G(IVMPID(11))="" S HLERR="Invalid Address - Missing Address information" Q
"RTN","IVMPRECA",184,0)
 . S ADDRTYPE=$P($G(IVMPID(11)),$E(HLECH),7)
"RTN","IVMPRECA",185,0)
 . I ADDRTYPE="" S HLERR="Invalid Address - Missing Address Type" Q
"RTN","IVMPRECA",186,0)
 . ; I ADDRTYPE="P"!(ADDRTYPE="VAB1")!(ADDRTYPE="VAB2")!(ADDRTYPE="VAB3")!(ADDRTYPE="VAB4") S ADDRESS(ADDRTYPE)=IVMPID(11)
"RTN","IVMPRECA",187,0)
 . Q:'$D(IVMALADT(ADDRTYPE))
"RTN","IVMPRECA",188,0)
 . I IVMALADT(ADDRTYPE)="" S ADDRESS(ADDRTYPE)=IVMPID(11)
"RTN","IVMPRECA",189,0)
 . ;I $P(IVMALADT(ADDRTYPE),"^")="CA" D
"RTN","IVMPRECA",190,0)
 . ;. S ADDRESS("CA")=IVMPID(11)
"RTN","IVMPRECA",191,0)
 . ;. S CONFADCT=$P(IVMALADT(ADDRTYPE),"^",2)
"RTN","IVMPRECA",192,0)
 . ;. S CONFADCT(CONFADCT)=""
"RTN","IVMPRECA",193,0)
 Q:$D(HLERR)
"RTN","IVMPRECA",194,0)
 ;perform consistency checks on Permanent and all bad address
"RTN","IVMPRECA",195,0)
 I '$D(ADDRESS) S HLERR="Invalid Address - Invalid Address Type" Q
"RTN","IVMPRECA",196,0)
 S ADDRTYPE="" F  S ADDRTYPE=$O(ADDRESS(ADDRTYPE)) Q:((ADDRTYPE="")!($G(HLERR)'=""))  S X=$G(ADDRESS(ADDRTYPE)) D ADDRCHK
"RTN","IVMPRECA",197,0)
 Q
"RTN","IVMPRECA",198,0)
 ;
"RTN","IVMPRECA",199,0)
PID13 ; Perform consistency checks for seq. 13
"RTN","IVMPRECA",200,0)
 ;Get communication data for all types from seq. 13 or PID segment
"RTN","IVMPRECA",201,0)
 S TCFLG=1 ;Flag to check if Telecom data exist.
"RTN","IVMPRECA",202,0)
 I $D(IVMPID(13)) D
"RTN","IVMPRECA",203,0)
 . I $O(IVMPID(13,"")) D  Q
"RTN","IVMPRECA",204,0)
 . . S TELESEQ=0 F  S TELESEQ=$O(IVMPID(13,TELESEQ)) Q:((TELESEQ="")!($D(HLERR))!('TCFLG))  D
"RTN","IVMPRECA",205,0)
 . . . I $G(IVMPID(13,TELESEQ))="" S TCFLG=0 Q
"RTN","IVMPRECA",206,0)
 . . . I $P(IVMPID(13,TELESEQ),$E(HLECH),2)="" S HLERR="Invalid Communication Data - Missing Communication Type - PID Seq 13" Q
"RTN","IVMPRECA",207,0)
 . . . S TELECOM($P(IVMPID(13,TELESEQ),$E(HLECH),2))=IVMPID(13,TELESEQ)
"RTN","IVMPRECA",208,0)
 . I $G(IVMPID(13))="" S TCFLG=0 Q
"RTN","IVMPRECA",209,0)
 . I $P(IVMPID(13),$E(HLECH),2)="" S HLERR="Invalid Communication Data - Missing Communication Type - PID Seq 13" Q
"RTN","IVMPRECA",210,0)
 . S TELECOM($P(IVMPID(13),$E(HLECH),2))=IVMPID(13)
"RTN","IVMPRECA",211,0)
 Q:$D(HLERR)
"RTN","IVMPRECA",212,0)
 ;perform consistency checks on all types of communication data.
"RTN","IVMPRECA",213,0)
 I TCFLG D
"RTN","IVMPRECA",214,0)
 . S COMMTYPE="" F  S COMMTYPE=$O(TELECOM(COMMTYPE)) Q:COMMTYPE=""!$D(HLERR)  D
"RTN","IVMPRECA",215,0)
 . . I COMMTYPE="NET" D  Q
"RTN","IVMPRECA",216,0)
 . . . S X=$P(TELECOM(COMMTYPE),$E(HLECH),4)
"RTN","IVMPRECA",217,0)
 . . . I X]"",'$$CHKEMAIL^IVMPREC8(X) S HLERR="Invalid Email address"
"RTN","IVMPRECA",218,0)
 . . S X=$P(TELECOM(COMMTYPE),$E(HLECH)) I X]"",(($L(X)>20)!($L(X)<4)) S HLERR="Invalid phone number"
"RTN","IVMPRECA",219,0)
 Q
"RTN","IVMPRECA",220,0)
 ;
"RTN","IVMPRECA",221,0)
CLEARF(NODE,DEL,IGNORE) ;
"RTN","IVMPRECA",222,0)
 ; Input:       NODE    - SEGMENT/SEQ.
"RTN","IVMPRECA",223,0)
 ;               DEL    - Delimiter (optional - default is ^)
"RTN","IVMPRECA",224,0)
 ;            IGNORE    - String of seq # to avoid (optional)
"RTN","IVMPRECA",225,0)
 N I
"RTN","IVMPRECA",226,0)
 I $G(DEL)="" S DEL=HLFS
"RTN","IVMPRECA",227,0)
 F I=1:1:$L(NODE,DEL) D
"RTN","IVMPRECA",228,0)
 . I $G(IGNORE)[(","_I_",") Q  ;Ignore this seq. to convert
"RTN","IVMPRECA",229,0)
 . I $P(NODE,DEL,I)=HLQ S $P(NODE,DEL,I)=""
"RTN","IVMPRECA",230,0)
 Q NODE
"RTN","IVMPTRN8")
0^128^B74907432^B74827499
"RTN","IVMPTRN8",1,0)
IVMPTRN8 ;ALB/RKS/PDJ/BRM,TDM,PJH,TDM,LBD,PWC - HL7 FULL DATA TRANSMISSION (Z07) BUILDER ; 7/19/11 10:52am
"RTN","IVMPTRN8",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**9,11,19,12,21,17,24,36,37,47,48,42,34,77,76,75,79,85,89,98,56,97,104,113,109,114,105,115,121,151**; 21-OCT-94;Build 10
"RTN","IVMPTRN8",3,0)
 ;
"RTN","IVMPTRN8",4,0)
 ;
"RTN","IVMPTRN8",5,0)
BUILD(DFN,IVMMTDT,IVMCT,IVMQUERY) ; --
"RTN","IVMPTRN8",6,0)
 ;  Description: This entry point will be used to create an HL7 
"RTN","IVMPTRN8",7,0)
 ;  "Full Data Transmission" message for a patient.
"RTN","IVMPTRN8",8,0)
 ;
"RTN","IVMPTRN8",9,0)
 ;  Input:
"RTN","IVMPTRN8",10,0)
 ;        DFN - Patient IEN
"RTN","IVMPTRN8",11,0)
 ;    IVMMTDT - date of the patient's Means Test or Copay Test
"RTN","IVMPTRN8",12,0)
 ;      IVMCT - count of hl7 segments transmitted, pass by reference
"RTN","IVMPTRN8",13,0)
 ;   IVMQUERY - array passed in by reference where
"RTN","IVMPTRN8",14,0)
 ;    IVMQUERY("LTD") -- # of the QUERY that is currently open or
"RTN","IVMPTRN8",15,0)
 ;                undefined, zero, or null if no QUERY opened for
"RTN","IVMPTRN8",16,0)
 ;                last treatment date
"RTN","IVMPTRN8",17,0)
 ;    IVMQUERY("OVIS") -- # of the QUERY that is currently open or
"RTN","IVMPTRN8",18,0)
 ;                undefined, zero, or null if no QUERY opened for
"RTN","IVMPTRN8",19,0)
 ;                finding outpatient visits
"RTN","IVMPTRN8",20,0)
 ;
"RTN","IVMPTRN8",21,0)
 ;  HL7 variables as defined by call to INIT^IVMUFNC:
"RTN","IVMPTRN8",22,0)
 ;      HLEVN - HL7 message event counter 
"RTN","IVMPTRN8",23,0)
 ;      HLSDT - a flag that indicates that the data to be sent is
"RTN","IVMPTRN8",24,0)
 ;              stored in the ^TMP("HLS") global array.
"RTN","IVMPTRN8",25,0)
 ;
"RTN","IVMPTRN8",26,0)
 ;  The following variables returned by the INIT^HLTRANS entry point:
"RTN","IVMPTRN8",27,0)
 ;    HLNDAP - Non-DHCP Application Pointer from file 770
"RTN","IVMPTRN8",28,0)
 ;   HLNDAP0 - Zero node from file 770 corresponding to HLNDAP
"RTN","IVMPTRN8",29,0)
 ;     HLDAP - DHCP Application Pointer from file 771
"RTN","IVMPTRN8",30,0)
 ;     HLDAN - The DHCP Application Name (.01 field, file 771) for HLDAP
"RTN","IVMPTRN8",31,0)
 ;     HLPID - HL7 processing ID from file 770
"RTN","IVMPTRN8",32,0)
 ;     HLVER - HL7 version number from file 770
"RTN","IVMPTRN8",33,0)
 ;      HLFS - HL7 Field Separator from the 'FS' node of file 771
"RTN","IVMPTRN8",34,0)
 ;     HLECH - HL7 Encoding Characters from the 'EC' node of file 771
"RTN","IVMPTRN8",35,0)
 ;       HLQ - Double quotes ("") for use in building HL7 segments
"RTN","IVMPTRN8",36,0)
 ;     HLERR - if an error is encountered, an error message is returned
"RTN","IVMPTRN8",37,0)
 ;             in the HLERR variable.
"RTN","IVMPTRN8",38,0)
 ;      HLDA - the internal entry number for the entry created in
"RTN","IVMPTRN8",39,0)
 ;             file #772.
"RTN","IVMPTRN8",40,0)
 ;      HLDT - transmission date/time (associated with the entry in file
"RTN","IVMPTRN8",41,0)
 ;             #772 identified by HLDA) in internal VA FileMan format.
"RTN","IVMPTRN8",42,0)
 ;     HLDT1 - the same transmission date/time as the HLDT variable, 
"RTN","IVMPTRN8",43,0)
 ;             only in HL7 format.
"RTN","IVMPTRN8",44,0)
 ;
"RTN","IVMPTRN8",45,0)
 ; Output:
"RTN","IVMPTRN8",46,0)
 ;  ^TMP("HLS",$J,IVMCT) - global array containing all segments of the HL7 message that the VistA application wishes to send.  The HLSDT variable is defined above and the IVMCT variable is a sequential number incremented by 1.
"RTN","IVMPTRN8",47,0)
 ;
"RTN","IVMPTRN8",48,0)
 ;
"RTN","IVMPTRN8",49,0)
 N DGINC,DGIR,DGREL,I,IVMNTE,IVMPID,IVMSUB,IVMZRD,VAFPID,VAFZEL,FBZFE,IVMZCD,DELETE,NODE,IVMPIEN,TEST,IVMPNODE,TESTTYPE,SEQS,TESTCODE,HARDSHIP,ACTVIEN,IVMZMH,IVMSEQ
"RTN","IVMPTRN8",50,0)
 N EDBMTZ06,ZMHSQ,SETID,OBXCNT,OBXTMP,DGSEC,SEGOCC,ZIOSEG,N101015,RF1SEG,ZCTTYP,ZCTARY,ZCTSQ,VAFPID,CAFLG
"RTN","IVMPTRN8",51,0)
 ;
"RTN","IVMPTRN8",52,0)
 ; create (PID) Patient Identification segment
"RTN","IVMPTRN8",53,0)
 ; **** Add ICN to 2nd piece PID segment for MPI@HEC.
"RTN","IVMPTRN8",54,0)
 S IVMCMOR="1,2",IVMSEQ=1
"RTN","IVMPTRN8",55,0)
 ; check to see if site is a legacy site.  If not add ICN to PID segment.
"RTN","IVMPTRN8",56,0)
 I '$D(^PPP(1020.128,"AC",$P($$SITE^VASITE,"^",3))) D
"RTN","IVMPTRN8",57,0)
 . I +$$GETICN^MPIF001(DFN)>0,($$IFLOCAL^MPIF001(DFN)=0) S IVMSEQ=IVMSEQ_",2",IVMCMOR="1,2,3"  ;add SEQ 1 and 2 for PID
"RTN","IVMPTRN8",58,0)
 ;
"RTN","IVMPTRN8",59,0)
 ; send SSN indicating pseudo
"RTN","IVMPTRN8",60,0)
 ; I $P(IVMPID_$G(IVMPID(1)),HLFS,20)["P" D PSEUDO^IVMPTRN1  ; strip 'P' from pseudo SSNs
"RTN","IVMPTRN8",61,0)
 S IVMSEQ=IVMSEQ_",3,5,6,7,8,10,11,12,13,14,16,17,19,22,24"
"RTN","IVMPTRN8",62,0)
 K IVMPID D BLDPID^VAFCQRY1(DFN,1,IVMSEQ,.IVMPID,.HL,.ERROR)
"RTN","IVMPTRN8",63,0)
 K VAFPID D STRIP11
"RTN","IVMPTRN8",64,0)
 S SEGOCC="" F  S SEGOCC=$O(VAFPID(SEGOCC)) Q:SEGOCC=""  D
"RTN","IVMPTRN8",65,0)
 . S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=VAFPID(SEGOCC)
"RTN","IVMPTRN8",66,0)
 ;
"RTN","IVMPTRN8",67,0)
 ; **** create (PD1) Patient CMOR segment for MPI@HEC.
"RTN","IVMPTRN8",68,0)
 S:'$D(HL("FS")) HL("FS")=HLFS
"RTN","IVMPTRN8",69,0)
 S:'$D(HL("ECH")) HL("ECH")=HLECH
"RTN","IVMPTRN8",70,0)
 S:'$D(HL("Q")) HL("Q")=HLQ
"RTN","IVMPTRN8",71,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLPD1(DFN,IVMCMOR)
"RTN","IVMPTRN8",72,0)
 ;
"RTN","IVMPTRN8",73,0)
 ; create (ZPD) Patient Dependent Info. segment
"RTN","IVMPTRN8",74,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN1^VAFHLZPD(DFN,"1,6,7,8,9,11,12,13,17,19,30,31,32,33,34,35,40"),IVMINS=$P(^(IVMCT),HLFS,12)
"RTN","IVMPTRN8",75,0)
 I $D(VAFZPD(1)) S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=VAFZPD(1) K VAFZPD(1)
"RTN","IVMPTRN8",76,0)
 ;
"RTN","IVMPTRN8",77,0)
 ; create (ZTA) Temporary Address segment
"RTN","IVMPTRN8",78,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZTA(DFN,"1,2,3,4,5,6,7,8,9",,.HL)
"RTN","IVMPTRN8",79,0)
 ;
"RTN","IVMPTRN8",80,0)
 ; create (ZIE) Ineligible segment
"RTN","IVMPTRN8",81,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIE(DFN,"1,2,3",1)
"RTN","IVMPTRN8",82,0)
 ;
"RTN","IVMPTRN8",83,0)
 ; create (ZEL) Eligibility segment(s) 
"RTN","IVMPTRN8",84,0)
 ; **** Add 5th piece to ZEL to correct consistency check
"RTN","IVMPTRN8",85,0)
 D EN1^VAFHLZEL(DFN,"1,2,5,6,7,8,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,29,34,35,37,38,39,40",2,.VAFZEL)
"RTN","IVMPTRN8",86,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(VAFZEL(1))  ; Primary Eligibility
"RTN","IVMPTRN8",87,0)
 I $D(VAFZEL(1,1)) S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(VAFZEL(1,1))
"RTN","IVMPTRN8",88,0)
 ; - other entitled eligibilities
"RTN","IVMPTRN8",89,0)
 F IVMSUB=1:0 S IVMSUB=+$O(VAFZEL(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",90,0)
 . S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(VAFZEL(+IVMSUB))
"RTN","IVMPTRN8",91,0)
 ;
"RTN","IVMPTRN8",92,0)
 ; create (ZEN) Enrollment segment
"RTN","IVMPTRN8",93,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZEN(DFN)
"RTN","IVMPTRN8",94,0)
 ;
"RTN","IVMPTRN8",95,0)
 ; create (ZCD) Catastrophic Disability segment(s)
"RTN","IVMPTRN8",96,0)
 D BUILD^VAFHLZCD(.IVMZCD,DFN,,HLQ,HLFS)
"RTN","IVMPTRN8",97,0)
 F IVMSUB=0:0 S IVMSUB=+$O(IVMZCD(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",98,0)
 . S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(IVMZCD(+IVMSUB))
"RTN","IVMPTRN8",99,0)
 ;
"RTN","IVMPTRN8",100,0)
 ; Optionally create (ZMH) Military History segments
"RTN","IVMPTRN8",101,0)
 D ENTER^VAFHLZMH(DFN,"IVMZMH")
"RTN","IVMPTRN8",102,0)
 S (ZMHSQ,SETID)=0
"RTN","IVMPTRN8",103,0)
 I $D(IVMZMH) F  S ZMHSQ=$O(IVMZMH(ZMHSQ)) Q:ZMHSQ=""  D
"RTN","IVMPTRN8",104,0)
 . Q:$TR($P(IVMZMH(ZMHSQ,0),HLFS,4,5),"""^~")=""
"RTN","IVMPTRN8",105,0)
 . S SETID=SETID+1,IVMCT=IVMCT+1
"RTN","IVMPTRN8",106,0)
 . S ^TMP("HLS",$J,IVMCT)="ZMH"_HLFS_SETID_HLFS_$P(IVMZMH(ZMHSQ,0),HLFS,3,6)
"RTN","IVMPTRN8",107,0)
 ;
"RTN","IVMPTRN8",108,0)
 ; create (ZRD) Rated Disabilities segment(s)
"RTN","IVMPTRN8",109,0)
 D EN^VAFHLZRD(DFN,"1,2,3,4,12,13,14,",HLQ,HLFS,"IVMZRD")
"RTN","IVMPTRN8",110,0)
 F IVMSUB=0:0 S IVMSUB=+$O(IVMZRD(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",111,0)
 . S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(IVMZRD(+IVMSUB,0))
"RTN","IVMPTRN8",112,0)
 ;
"RTN","IVMPTRN8",113,0)
 ; create (ZCT) Emergency Contact segment
"RTN","IVMPTRN8",114,0)
 ;S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZCT(DFN,"1,2,3,4,5,6,7,10","",1,1)
"RTN","IVMPTRN8",115,0)
 K ZCTARY F ZCTTYP=1:1:5 D   ;Create Optional ZCT Segments
"RTN","IVMPTRN8",116,0)
 . S ZCTARY(ZCTTYP)=$$EN^VAFHLZCT(DFN,"1,2,3,4,5,6,7,10","",ZCTTYP,1)
"RTN","IVMPTRN8",117,0)
 S (ZCTTYP,ZCTSQ)=0
"RTN","IVMPTRN8",118,0)
 I $D(ZCTARY) F  S ZCTTYP=$O(ZCTARY(ZCTTYP)) Q:ZCTTYP=""  D
"RTN","IVMPTRN8",119,0)
 . Q:$P(ZCTARY(ZCTTYP),HLFS,11)=HLQ
"RTN","IVMPTRN8",120,0)
 . S ZCTSQ=ZCTSQ+1,$P(ZCTARY(ZCTTYP),HLFS,2)=ZCTSQ
"RTN","IVMPTRN8",121,0)
 . S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=ZCTARY(ZCTTYP)
"RTN","IVMPTRN8",122,0)
 I ZCTSQ=0 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=ZCTARY(1)
"RTN","IVMPTRN8",123,0)
 ;
"RTN","IVMPTRN8",124,0)
 ; create (ZEM) Employment Info. segment for (1) Patient & (2) Spouse
"RTN","IVMPTRN8",125,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZEM(DFN,"1,2,3,4,5,6,7")
"RTN","IVMPTRN8",126,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZEM(DFN,"1,2,3,4,5,6,7",2,2)
"RTN","IVMPTRN8",127,0)
 ;
"RTN","IVMPTRN8",128,0)
 ; create (ZGD) Guardian segment for (1) VA & (2) Civil 
"RTN","IVMPTRN8",129,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZGD(DFN,"1,2,3,4,5,6,7,8",1)
"RTN","IVMPTRN8",130,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZGD(DFN,"1,2,3,4,5,6,7,8",2)
"RTN","IVMPTRN8",131,0)
 ;
"RTN","IVMPTRN8",132,0)
 ; Income Year requiring transmission from IVM Patient File (301.5)
"RTN","IVMPTRN8",133,0)
 S IVMIY=$S($D(IVMIY):IVMIY,1:(IVMMTDT-10000))
"RTN","IVMPTRN8",134,0)
 N MTINFO S MTINFO=$$FUT^DGMTU(DFN)
"RTN","IVMPTRN8",135,0)
 I ($E(IVMIY,1,3)+1)=$E($P(MTINFO,U,2),1,3) S IVMMTDT=$P(MTINFO,U,2)
"RTN","IVMPTRN8",136,0)
 ;get the primary test for the income year
"RTN","IVMPTRN8",137,0)
 S TESTTYPE=$$GETTYPE^IVMPTRN9(DFN,IVMMTDT,.TESTCODE,.HARDSHIP,.ACTVIEN)
"RTN","IVMPTRN8",138,0)
 ;
"RTN","IVMPTRN8",139,0)
 ; The following function call returns:
"RTN","IVMPTRN8",140,0)
 ;   - Patient Relation IEN array in DGREL
"RTN","IVMPTRN8",141,0)
 ;   - Individual Annual Income IEN array in DGINC
"RTN","IVMPTRN8",142,0)
 ;   - Income Relation IEN array in DGINR
"RTN","IVMPTRN8",143,0)
 D ALL^DGMTU21(DFN,"VSC",IVMMTDT,"IPR",ACTVIEN)
"RTN","IVMPTRN8",144,0)
 ;
"RTN","IVMPTRN8",145,0)
 S EDBMTZ06=0 I $$VERZ06^EASPTRN1(DFN) S EDBMTZ06=1
"RTN","IVMPTRN8",146,0)
 ; create (ZIC) Income segment for veteran
"RTN","IVMPTRN8",147,0)
 S IVMCT=IVMCT+1
"RTN","IVMPTRN8",148,0)
 ;IVM*2.0*115 -- Check for Means Test Version Indicator
"RTN","IVMPTRN8",149,0)
 N MTVERS S MTVERS=$S(+$G(ACTVIEN):+$P($G(^DGMT(408.31,ACTVIEN,2)),"^",11),1:0)
"RTN","IVMPTRN8",150,0)
 I MTVERS=0 D  I 1
"RTN","IVMPTRN8",151,0)
 . S ^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("V")),"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20")
"RTN","IVMPTRN8",152,0)
 E  D
"RTN","IVMPTRN8",153,0)
 . S ^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("V")),"1,2,3,9,12,13,14,15,16,18,19")
"RTN","IVMPTRN8",154,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIC^"_$P(^TMP("HLS",$J,IVMCT),"^",2,3)
"RTN","IVMPTRN8",155,0)
 ;use IVMIY not IVMMTDT. For LTC copay exemption, IVMMTDT is not correct
"RTN","IVMPTRN8",156,0)
 S $P(^TMP("HLS",$J,IVMCT),"^",3)=$$HLDATE^HLFNC(IVMIY)
"RTN","IVMPTRN8",157,0)
 ;
"RTN","IVMPTRN8",158,0)
 ; create (ZIR) Income Relation segment for veteran
"RTN","IVMPTRN8",159,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIR(+$G(DGINR("V")),"1,2,3,4,5,10")
"RTN","IVMPTRN8",160,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIR^1"
"RTN","IVMPTRN8",161,0)
 ;
"RTN","IVMPTRN8",162,0)
 ; create (ZDP) Patient Dependent Info. segment for spouse
"RTN","IVMPTRN8",163,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZDP(+$G(DGREL("S")),"1,2,3,4,5,6,7,8,9,10,13,14")
"RTN","IVMPTRN8",164,0)
 I $P(^TMP("HLS",$J,IVMCT),HLFS,3)'=HLQ,($P($G(^(IVMCT)),HLFS,6)=HLQ) D
"RTN","IVMPTRN8",165,0)
 . ; - pass non-existent SSNs as 0s
"RTN","IVMPTRN8",166,0)
 . S $P(X,HLFS,6)="000000000"
"RTN","IVMPTRN8",167,0)
 ;
"RTN","IVMPTRN8",168,0)
 ; create (ZIC) Income segment for spouse
"RTN","IVMPTRN8",169,0)
 S IVMCT=IVMCT+1
"RTN","IVMPTRN8",170,0)
 ;IVM*2.0*115
"RTN","IVMPTRN8",171,0)
 I MTVERS=0 D  I 1
"RTN","IVMPTRN8",172,0)
 . S ^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("S")),"1,2,3,4,5,6,7,8,9,10,11,12,16,17,18,19,20")
"RTN","IVMPTRN8",173,0)
 E  D
"RTN","IVMPTRN8",174,0)
 . S ^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("S")),"1,2,3,9,12,16,18,19")
"RTN","IVMPTRN8",175,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIC^"_$P(^TMP("HLS",$J,IVMCT),"^",2,3)
"RTN","IVMPTRN8",176,0)
 ;
"RTN","IVMPTRN8",177,0)
 ; create (ZIR) Income Relation segment for spouse
"RTN","IVMPTRN8",178,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIR(+$G(DGINR("S")),"1,2,3")
"RTN","IVMPTRN8",179,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIR^"_$P(^TMP("HLS",$J,IVMCT),"^",2)
"RTN","IVMPTRN8",180,0)
 ;
"RTN","IVMPTRN8",181,0)
 ;
"RTN","IVMPTRN8",182,0)
 ; create ZDP, ZIC, and ZIR segments for all Means Test dependents
"RTN","IVMPTRN8",183,0)
 F IVMSUB=0:0 S IVMSUB=$O(DGREL("C",IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",184,0)
 . ;
"RTN","IVMPTRN8",185,0)
 . ; - create (ZDP) Dependent Info. segment for dependent child
"RTN","IVMPTRN8",186,0)
 . S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZDP(+$G(DGREL("C",IVMSUB)),"1,2,3,4,5,6,7,9,10")
"RTN","IVMPTRN8",187,0)
 . I $P(^TMP("HLS",$J,IVMCT),HLFS,3)'=HLQ,($P($G(^(IVMCT)),HLFS,6)=HLQ) D
"RTN","IVMPTRN8",188,0)
 . . ; - pass non-existent SSNs as 0s
"RTN","IVMPTRN8",189,0)
 . . S $P(X,HLFS,6)="000000000"
"RTN","IVMPTRN8",190,0)
 . ;
"RTN","IVMPTRN8",191,0)
 . ; - create (ZIC) Income segment for dependent child
"RTN","IVMPTRN8",192,0)
 . S IVMCT=IVMCT+1
"RTN","IVMPTRN8",193,0)
 . ;IVM*2.0*115
"RTN","IVMPTRN8",194,0)
 . I MTVERS=0 D  I 1
"RTN","IVMPTRN8",195,0)
 . . S ^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("C",IVMSUB)),"1,2,3,4,5,6,7,8,9,10,11,12,15")
"RTN","IVMPTRN8",196,0)
 . E  D
"RTN","IVMPTRN8",197,0)
 . . S ^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("C",IVMSUB)),"1,2,3,9,12,15,16,18,19")
"RTN","IVMPTRN8",198,0)
 . I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIC^"_$P(^TMP("HLS",$J,IVMCT),"^",2,3)
"RTN","IVMPTRN8",199,0)
 . ;
"RTN","IVMPTRN8",200,0)
 . ; - create (ZIR) Income Relation segment for dependent child
"RTN","IVMPTRN8",201,0)
 . S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIR(+$G(DGINR("C",IVMSUB)),"1,2,3,4,6,7,8,9,14")
"RTN","IVMPTRN8",202,0)
 . I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIR^"_$P(^TMP("HLS",$J,IVMCT),"^",2)
"RTN","IVMPTRN8",203,0)
 . ;
"RTN","IVMPTRN8",204,0)
 ; Send INACTIVE spouse/dependents.
"RTN","IVMPTRN8",205,0)
 D GETINACD^DGMTU11(DFN,.DGREL)
"RTN","IVMPTRN8",206,0)
 F I="S","C" D
"RTN","IVMPTRN8",207,0)
 . F IVMSUB=0:0 S IVMSUB=$O(DGIREL(I,IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",208,0)
 . . S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZDP(+$G(DGIREL(I,IVMSUB)),"1,2,3,4,5,6,7,9,10,11",,,$P(DGIREL(I,IVMSUB),U,3))
"RTN","IVMPTRN8",209,0)
 ;
"RTN","IVMPTRN8",210,0)
 D GOTO^IVMPTRN9
"RTN","IVMPTRN8",211,0)
 Q
"RTN","IVMPTRN8",212,0)
 ;
"RTN","IVMPTRN8",213,0)
STRIP11 N APID,ZPID,ASQ,ATYP,SSQ
"RTN","IVMPTRN8",214,0)
 ;Extract PID segment
"RTN","IVMPTRN8",215,0)
 S IVMPID(1)=$E(IVMPID(1),5,$L(IVMPID(1)))
"RTN","IVMPTRN8",216,0)
 D BLDPID^IVMPREC6(.IVMPID,.APID)
"RTN","IVMPTRN8",217,0)
 ;
"RTN","IVMPTRN8",218,0)
 S CAFLG=0
"RTN","IVMPTRN8",219,0)
 I $D(APID(11)) D
"RTN","IVMPTRN8",220,0)
 .I $O(APID(11,"")) D  Q
"RTN","IVMPTRN8",221,0)
 ..M ZPID(11)=APID(11) K APID(11)
"RTN","IVMPTRN8",222,0)
 ..S (ASQ,SSQ)=0 F  S ASQ=$O(ZPID(11,ASQ)) Q:ASQ=""  D
"RTN","IVMPTRN8",223,0)
 ...S ATYP=$P($G(ZPID(11,ASQ)),$E(HLECH),7) Q:ATYP=""
"RTN","IVMPTRN8",224,0)
 ...I (ATYP="VACAA")!(ATYP="VACAC")!(ATYP="VACAM")!(ATYP="VACAO") Q
"RTN","IVMPTRN8",225,0)
 ...I ATYP="VACAE" S CAFLG=1
"RTN","IVMPTRN8",226,0)
 ...S SSQ=SSQ+1,APID(11,SSQ)=ZPID(11,ASQ)
"RTN","IVMPTRN8",227,0)
 .Q:$G(APID(11))=""
"RTN","IVMPTRN8",228,0)
 .S ATYP=$P($G(APID(11)),$E(HLECH),7) Q:ATYP=""
"RTN","IVMPTRN8",229,0)
 .I ATYP="VACAE" S CAFLG=1 Q
"RTN","IVMPTRN8",230,0)
 .I (ATYP="VACAA")!(ATYP="VACAC")!(ATYP="VACAM")!(ATYP="VACAO") K APID(11)
"RTN","IVMPTRN8",231,0)
 ;
"RTN","IVMPTRN8",232,0)
 I 'CAFLG,$D(APID(13)) D
"RTN","IVMPTRN8",233,0)
 .I $O(APID(13,"")) D  Q
"RTN","IVMPTRN8",234,0)
 ..S ASQ=0 F  S ASQ=$O(APID(13,ASQ)) Q:ASQ=""  D
"RTN","IVMPTRN8",235,0)
 ...Q:$G(APID(13,ASQ))=""
"RTN","IVMPTRN8",236,0)
 ...S ATYP=$P($G(APID(13,ASQ)),$E(HLECH),2) Q:ATYP=""
"RTN","IVMPTRN8",237,0)
 ...I ATYP="VACPN" K APID(13,ASQ) Q
"RTN","IVMPTRN8",238,0)
 .Q:$G(APID(13))=""
"RTN","IVMPTRN8",239,0)
 .S ATYP=$P($G(APID(13)),$E(HLECH),2) Q:ATYP=""
"RTN","IVMPTRN8",240,0)
 .I ATYP="VACPN" K APID(13) Q
"RTN","IVMPTRN8",241,0)
 ;
"RTN","IVMPTRN8",242,0)
 ;Rebuild PID
"RTN","IVMPTRN8",243,0)
 D KVA^VADPT
"RTN","IVMPTRN8",244,0)
 D MAKEIT^VAFHLU("PID",.APID,.VAFPID,.VAFPID)
"RTN","IVMPTRN8",245,0)
 S VAFPID(0)=VAFPID
"RTN","IVMPTRN8",246,0)
 Q
"VER")
8.0^22.0
"BLD",8398,6)
^127
**END**
**END**
