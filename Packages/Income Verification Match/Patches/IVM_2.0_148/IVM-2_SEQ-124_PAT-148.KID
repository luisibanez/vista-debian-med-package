Released IVM*2*148 SEQ #124
Extracted from mail message
**KIDS**:IVM*2.0*148^

**INSTALL NAME**
IVM*2.0*148
"BLD",8573,0)
IVM*2.0*148^INCOME VERIFICATION MATCH^0^3110707^y
"BLD",8573,4,0)
^9.64PA^^
"BLD",8573,6)
27^
"BLD",8573,6.3)
34
"BLD",8573,"ABPKG")
n
"BLD",8573,"KRN",0)
^9.67PA^8989.52^19
"BLD",8573,"KRN",.4,0)
.4
"BLD",8573,"KRN",.401,0)
.401
"BLD",8573,"KRN",.402,0)
.402
"BLD",8573,"KRN",.403,0)
.403
"BLD",8573,"KRN",.5,0)
.5
"BLD",8573,"KRN",.84,0)
.84
"BLD",8573,"KRN",3.6,0)
3.6
"BLD",8573,"KRN",3.8,0)
3.8
"BLD",8573,"KRN",9.2,0)
9.2
"BLD",8573,"KRN",9.8,0)
9.8
"BLD",8573,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",8573,"KRN",9.8,"NM",1,0)
IVMPREC8^^0^B204616028
"BLD",8573,"KRN",9.8,"NM",2,0)
IVMLDEMD^^0^B84869368
"BLD",8573,"KRN",9.8,"NM","B","IVMLDEMD",2)

"BLD",8573,"KRN",9.8,"NM","B","IVMPREC8",1)

"BLD",8573,"KRN",19,0)
19
"BLD",8573,"KRN",19.1,0)
19.1
"BLD",8573,"KRN",101,0)
101
"BLD",8573,"KRN",409.61,0)
409.61
"BLD",8573,"KRN",771,0)
771
"BLD",8573,"KRN",870,0)
870
"BLD",8573,"KRN",8989.51,0)
8989.51
"BLD",8573,"KRN",8989.52,0)
8989.52
"BLD",8573,"KRN",8994,0)
8994
"BLD",8573,"KRN","B",.4,.4)

"BLD",8573,"KRN","B",.401,.401)

"BLD",8573,"KRN","B",.402,.402)

"BLD",8573,"KRN","B",.403,.403)

"BLD",8573,"KRN","B",.5,.5)

"BLD",8573,"KRN","B",.84,.84)

"BLD",8573,"KRN","B",3.6,3.6)

"BLD",8573,"KRN","B",3.8,3.8)

"BLD",8573,"KRN","B",9.2,9.2)

"BLD",8573,"KRN","B",9.8,9.8)

"BLD",8573,"KRN","B",19,19)

"BLD",8573,"KRN","B",19.1,19.1)

"BLD",8573,"KRN","B",101,101)

"BLD",8573,"KRN","B",409.61,409.61)

"BLD",8573,"KRN","B",771,771)

"BLD",8573,"KRN","B",870,870)

"BLD",8573,"KRN","B",8989.51,8989.51)

"BLD",8573,"KRN","B",8989.52,8989.52)

"BLD",8573,"KRN","B",8994,8994)

"BLD",8573,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",8573,"QUES",0)
^9.62^^
"BLD",8573,"REQB",0)
^9.611^^
"MBREQ")
0
"PKG",120,-1)
1^1
"PKG",120,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",120,22,0)
^9.49I^1^1
"PKG",120,22,1,0)
2.0^2941021^2960823
"PKG",120,22,1,"PAH",1,0)
148^3110707^123457000
"PKG",120,22,1,"PAH",1,1,0)
^^87^87^3110707
"PKG",120,22,1,"PAH",1,1,1,0)
    <ftp://ftp.fo-slc.med.va.gov>
"PKG",120,22,1,"PAH",1,1,2,0)
 
"PKG",120,22,1,"PAH",1,1,3,0)
 
"PKG",120,22,1,"PAH",1,1,4,0)
 
"PKG",120,22,1,"PAH",1,1,5,0)
The documentation will be in the form of Adobe Acrobat files.
"PKG",120,22,1,"PAH",1,1,6,0)
 
"PKG",120,22,1,"PAH",1,1,7,0)
 
"PKG",120,22,1,"PAH",1,1,8,0)
Documentation can also be found on the System Design and Development Web
"PKG",120,22,1,"PAH",1,1,9,0)
page at:  http://www.va.gov/vdl/
"PKG",120,22,1,"PAH",1,1,10,0)
 
"PKG",120,22,1,"PAH",1,1,11,0)
 
"PKG",120,22,1,"PAH",1,1,12,0)
Below is a list of the files related to this patch that will be needed
"PKG",120,22,1,"PAH",1,1,13,0)
and available via the FTP sites listed above.
"PKG",120,22,1,"PAH",1,1,14,0)
 
"PKG",120,22,1,"PAH",1,1,15,0)
File Description                        File Name                 FTP Mode
"PKG",120,22,1,"PAH",1,1,16,0)
--------------------------------------------------------------------------
"PKG",120,22,1,"PAH",1,1,17,0)
Revised IVM V2.0 User Manual            IVM_2_P148_UM.PDF         Binary
"PKG",120,22,1,"PAH",1,1,18,0)
 
"PKG",120,22,1,"PAH",1,1,19,0)
 
"PKG",120,22,1,"PAH",1,1,20,0)
Associated Test Sites:
"PKG",120,22,1,"PAH",1,1,21,0)
----------------------
"PKG",120,22,1,"PAH",1,1,22,0)
Puget Sound Health Care Center
"PKG",120,22,1,"PAH",1,1,23,0)
VA Heartland West
"PKG",120,22,1,"PAH",1,1,24,0)
VA Maryland Health Care System
"PKG",120,22,1,"PAH",1,1,25,0)
 
"PKG",120,22,1,"PAH",1,1,26,0)
 
"PKG",120,22,1,"PAH",1,1,27,0)
INSTALLATION INSTRUCTIONS:
"PKG",120,22,1,"PAH",1,1,28,0)
==========================
"PKG",120,22,1,"PAH",1,1,29,0)
This patch may be installed during normal working hours; however,
"PKG",120,22,1,"PAH",1,1,30,0)
this patch should NOT be installed while the IVM BACKGROUND JOB [IVM
"PKG",120,22,1,"PAH",1,1,31,0)
BACKGROUND JOB] is running. VISTA users will not be affected.
"PKG",120,22,1,"PAH",1,1,32,0)
 
"PKG",120,22,1,"PAH",1,1,33,0)
Install Time - less than 5 minutes
"PKG",120,22,1,"PAH",1,1,34,0)
 
"PKG",120,22,1,"PAH",1,1,35,0)
1.  LOAD TRANSPORT GLOBAL
"PKG",120,22,1,"PAH",1,1,36,0)
    ---------------------
"PKG",120,22,1,"PAH",1,1,37,0)
    Choose the PackMan message containing this patch and invoke the
"PKG",120,22,1,"PAH",1,1,38,0)
    INSTALL/CHECK MESSAGE PackMan option.
"PKG",120,22,1,"PAH",1,1,39,0)
 
"PKG",120,22,1,"PAH",1,1,40,0)
2.  START UP KIDS
"PKG",120,22,1,"PAH",1,1,41,0)
    -------------
"PKG",120,22,1,"PAH",1,1,42,0)
    Start up the Kernel Installation and Distribution System Menu
"PKG",120,22,1,"PAH",1,1,43,0)
    [XPD MAIN]:
"PKG",120,22,1,"PAH",1,1,44,0)
 
"PKG",120,22,1,"PAH",1,1,45,0)
         Edits and Distribution ...
"PKG",120,22,1,"PAH",1,1,46,0)
         Utilities ...
"PKG",120,22,1,"PAH",1,1,47,0)
         Installation ...
"PKG",120,22,1,"PAH",1,1,48,0)
 
"PKG",120,22,1,"PAH",1,1,49,0)
Select Kernel Installation & Distribution System Option: INStallation
"PKG",120,22,1,"PAH",1,1,50,0)
                                                         ---
"PKG",120,22,1,"PAH",1,1,51,0)
         Load a Distribution
"PKG",120,22,1,"PAH",1,1,52,0)
         Print Transport Global
"PKG",120,22,1,"PAH",1,1,53,0)
         Compare Transport Global to Current System
"PKG",120,22,1,"PAH",1,1,54,0)
         Verify Checksums in Transport Global
"PKG",120,22,1,"PAH",1,1,55,0)
         Install Package(s)
"PKG",120,22,1,"PAH",1,1,56,0)
         Restart Install of Package(s)
"PKG",120,22,1,"PAH",1,1,57,0)
         Unload a Distribution
"PKG",120,22,1,"PAH",1,1,58,0)
         Backup a Transport Global
"PKG",120,22,1,"PAH",1,1,59,0)
 
"PKG",120,22,1,"PAH",1,1,60,0)
Select Installation Option:
"PKG",120,22,1,"PAH",1,1,61,0)
 
"PKG",120,22,1,"PAH",1,1,62,0)
3.  Select Installation Option:
"PKG",120,22,1,"PAH",1,1,63,0)
    ---------------------------
"PKG",120,22,1,"PAH",1,1,64,0)
    NOTE:  The following are OPTIONAL - (When prompted for the INSTALL
"PKG",120,22,1,"PAH",1,1,65,0)
           NAME, enter IVM*2.0*148):
"PKG",120,22,1,"PAH",1,1,66,0)
 
"PKG",120,22,1,"PAH",1,1,67,0)
    a.  Backup a Transport Global - This option will create a backup
"PKG",120,22,1,"PAH",1,1,68,0)
        message of any routines exported with this patch. It will not
"PKG",120,22,1,"PAH",1,1,69,0)
        backup any other changes such as DD's or templates.
"PKG",120,22,1,"PAH",1,1,70,0)
    b.  Compare Transport Global to Current System - This option will
"PKG",120,22,1,"PAH",1,1,71,0)
        allow you to view all changes that will be made when this patch
"PKG",120,22,1,"PAH",1,1,72,0)
        is installed.  It compares all components of this patch
"PKG",120,22,1,"PAH",1,1,73,0)
        (routines, DD's, templates, etc.).
"PKG",120,22,1,"PAH",1,1,74,0)
    c.  Verify Checksums in Transport Global - This option will allow
"PKG",120,22,1,"PAH",1,1,75,0)
        you to ensure the integrity of the routines that are in the
"PKG",120,22,1,"PAH",1,1,76,0)
        transport global.
"PKG",120,22,1,"PAH",1,1,77,0)
 
"PKG",120,22,1,"PAH",1,1,78,0)
4.  Select Installation Option: Install Package(s)
"PKG",120,22,1,"PAH",1,1,79,0)
                                ------------------
"PKG",120,22,1,"PAH",1,1,80,0)
    **This is the step to start the installation of this KIDS patch:
"PKG",120,22,1,"PAH",1,1,81,0)
 
"PKG",120,22,1,"PAH",1,1,82,0)
    a.  Choose the Install Package(s) option to start the patch
"PKG",120,22,1,"PAH",1,1,83,0)
        install.  When prompted for INSTALL NAME, enter IVM*2.0*148.
"PKG",120,22,1,"PAH",1,1,84,0)
    b.  When prompted 'Want KIDS to INHIBIT LOGONs during the install?
"PKG",120,22,1,"PAH",1,1,85,0)
        YES//' answer NO
"PKG",120,22,1,"PAH",1,1,86,0)
    c.  When prompted 'Want to DISABLE Scheduled Options, Menu
"PKG",120,22,1,"PAH",1,1,87,0)
        Options, and Protocols? NO//' answer NO
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","IVMLDEMD")
0^2^B84869368^B78952880
"RTN","IVMLDEMD",1,0)
IVMLDEMD ;ALB/PJR/PHH/BLD - IVM DEMOGRAPHIC UPLOAD FILE DATE OF DEATH FIELDS ; 7/20/05 9:22am
"RTN","IVMLDEMD",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**102,108,131,148**; 21-OCT-94;Build 34
"RTN","IVMLDEMD",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMLDEMD",4,0)
 ;
"RTN","IVMLDEMD",5,0)
 ;
"RTN","IVMLDEMD",6,0)
DOD(DFN,IVMDA2,IVMDA1,IVMDA) ; function to upload Date of Death
"RTN","IVMLDEMD",7,0)
 ;                                   fields and return a flag
"RTN","IVMLDEMD",8,0)
 ;
"RTN","IVMLDEMD",9,0)
 ;  Input:      DFN  -  as patient IEN
"RTN","IVMLDEMD",10,0)
 ;           IVMDA2  -  pointer to case record in (#301.5) file
"RTN","IVMLDEMD",11,0)
 ;           IVMDA1  -  pointer to PID msg in (#301.501) sub-file
"RTN","IVMLDEMD",12,0)
 ;            IVMDA  -  pointer to record in (#301.511) sub-file
"RTN","IVMLDEMD",13,0)
 ;
"RTN","IVMLDEMD",14,0)
 ; Output: IVMFLAG   -  1 if a Date of Death Field
"RTN","IVMLDEMD",15,0)
 ;                      0 if not a Date of Death field
"RTN","IVMLDEMD",16,0)
 ;
"RTN","IVMLDEMD",17,0)
 ;
"RTN","IVMLDEMD",18,0)
 N IVMFLAG,IVMI,IVMJ,IVMNODE,IVMPTR,Y,DODFIELD,DELDATA,CKDEL,DGDAUTO
"RTN","IVMLDEMD",19,0)
 ;
"RTN","IVMLDEMD",20,0)
 ; - initialize flags
"RTN","IVMLDEMD",21,0)
 S IVMFLAG=0
"RTN","IVMLDEMD",22,0)
 ;
"RTN","IVMLDEMD",23,0)
 ; - check for required parameters
"RTN","IVMLDEMD",24,0)
 I '$G(DFN)!('$G(IVMDA))!('$G(IVMDA1))!'($G(IVMDA2)) G DODQ
"RTN","IVMLDEMD",25,0)
 ;
"RTN","IVMLDEMD",26,0)
 ; - get pointer to (#301.92) file from (#301.511) sub-file
"RTN","IVMLDEMD",27,0)
 S IVMPTR=+$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMDA,0)) G DODQ:'IVMPTR
"RTN","IVMLDEMD",28,0)
 ;
"RTN","IVMLDEMD",29,0)
ASK ;;
"RTN","IVMLDEMD",30,0)
 D CKDEL I CKDEL G DODDEL
"RTN","IVMLDEMD",31,0)
 W ! S DIR("A")="Do you wish to proceed with this action"
"RTN","IVMLDEMD",32,0)
 S DIR("A",1)="You have selected to update a Date of Death field."
"RTN","IVMLDEMD",33,0)
 S DIR("A",2)="All Date of Death Fields will be uploaded."
"RTN","IVMLDEMD",34,0)
 S DIR("?")="Enter 'YES' to continue or 'NO' to abort."
"RTN","IVMLDEMD",35,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IVMLDEMD",36,0)
 D ^DIR K DIR
"RTN","IVMLDEMD",37,0)
 S IVMFLAG=1 G DODQ:'Y
"RTN","IVMLDEMD",38,0)
 W !,"Filing Date of Death fields... "
"RTN","IVMLDEMD",39,0)
 ;
"RTN","IVMLDEMD",40,0)
 ;
"RTN","IVMLDEMD",41,0)
LOOP ; - loop through DOD fields
"RTN","IVMLDEMD",42,0)
 S (DGDAUTO,IVMDODUP)=1
"RTN","IVMLDEMD",43,0)
 F DODFIELD="ZPD09","ZPD31","ZPD32" D
"RTN","IVMLDEMD",44,0)
 .S IVMI=$O(^IVM(301.92,"C",DODFIELD,"")) I IVMI="" Q
"RTN","IVMLDEMD",45,0)
 .S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,"")) Q:IVMJ']""  D
"RTN","IVMLDEMD",46,0)
 ..;
"RTN","IVMLDEMD",47,0)
 ..; - check for data node in (#301.511) sub-file
"RTN","IVMLDEMD",48,0)
 ..S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0)) Q:'(+IVMNODE)
"RTN","IVMLDEMD",49,0)
 ..I DODFIELD="ZPD31",$P(IVMNODE,"^",2)=""!($P(IVMNODE,"^",2)<1)!($P(IVMNODE,"^",2)>9) S $P(IVMNODE,"^",2)="@"
"RTN","IVMLDEMD",50,0)
 ..I DODFIELD'="ZPD31",$P(IVMNODE,"^",2)=""!($E($P(IVMNODE,"^",2),1,7)'?1.7N) S $P(IVMNODE,"^",2)="@"
"RTN","IVMLDEMD",51,0)
 ..;
"RTN","IVMLDEMD",52,0)
 ..;   load Date of Death field rec'd from IVM into DHCP (#2) file
"RTN","IVMLDEMD",53,0)
 ..D UPLOAD(+DFN,$P($G(^IVM(301.92,+IVMNODE,0)),"^",5),$P(IVMNODE,"^",2)) S IVMFLAG=1
"RTN","IVMLDEMD",54,0)
 ..;
"RTN","IVMLDEMD",55,0)
 ..; - remove entry from (#301.511) sub-file
"RTN","IVMLDEMD",56,0)
 ..D DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMJ)
"RTN","IVMLDEMD",57,0)
 ;
"RTN","IVMLDEMD",58,0)
 I IVMFLAG D  W "completed.",!
"RTN","IVMLDEMD",59,0)
 .D UPLOAD(+DFN,.355,$S($G(DUZ):DUZ,1:.5))
"RTN","IVMLDEMD",60,0)
 D DISCHRGE^DGDEATH,XFR^DGDEATH
"RTN","IVMLDEMD",61,0)
 K IVMDODUP
"RTN","IVMLDEMD",62,0)
 ;                                                                    
"RTN","IVMLDEMD",63,0)
 S VALMBCK="R"
"RTN","IVMLDEMD",64,0)
 ;
"RTN","IVMLDEMD",65,0)
 G DODQ
"RTN","IVMLDEMD",66,0)
 ;
"RTN","IVMLDEMD",67,0)
DODDEL ;
"RTN","IVMLDEMD",68,0)
 W ! S DIR("A")="Do you wish to proceed with this action"
"RTN","IVMLDEMD",69,0)
 S DIR("A",1)="You have selected to update a DELETION of a Date of Death field."
"RTN","IVMLDEMD",70,0)
 S DIR("A",2)="All Date of Death Fields will be deleted."
"RTN","IVMLDEMD",71,0)
 S DIR("?")="Enter 'YES' to continue or 'NO' to abort."
"RTN","IVMLDEMD",72,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IVMLDEMD",73,0)
 D ^DIR K DIR
"RTN","IVMLDEMD",74,0)
 S IVMFLAG=1 G DODQ:'Y
"RTN","IVMLDEMD",75,0)
 W !,"Filing Date of Death deletions... "
"RTN","IVMLDEMD",76,0)
 F DODFIELD="ZPD09","ZPD31","ZPD32" D
"RTN","IVMLDEMD",77,0)
 .S IVMI=$O(^IVM(301.92,"C",DODFIELD,"")) I IVMI="" Q
"RTN","IVMLDEMD",78,0)
 .S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,"")) Q:IVMJ']""
"RTN","IVMLDEMD",79,0)
 .;
"RTN","IVMLDEMD",80,0)
 .; - check for data node in (#301.511) sub-file
"RTN","IVMLDEMD",81,0)
 .S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0))
"RTN","IVMLDEMD",82,0)
 .Q:'(+IVMNODE)
"RTN","IVMLDEMD",83,0)
 .;
"RTN","IVMLDEMD",84,0)
 .;   load Date of Death deletion rec'd from IVM into DHCP (#2) file
"RTN","IVMLDEMD",85,0)
 .I DODFIELD="ZPD09" D UPLOAD(+DFN,.351,"@")
"RTN","IVMLDEMD",86,0)
 .;
"RTN","IVMLDEMD",87,0)
 .; - remove entry from (#301.511) sub-file
"RTN","IVMLDEMD",88,0)
 .D DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMJ)
"RTN","IVMLDEMD",89,0)
 ;
"RTN","IVMLDEMD",90,0)
 I IVMFLAG D  W "completed.",!
"RTN","IVMLDEMD",91,0)
 .D UPLOAD(+DFN,.355,.5)
"RTN","IVMLDEMD",92,0)
 ;
"RTN","IVMLDEMD",93,0)
 S VALMBCK="R"
"RTN","IVMLDEMD",94,0)
 ;
"RTN","IVMLDEMD",95,0)
 G DODQ
"RTN","IVMLDEMD",96,0)
CKDEL S CKDEL=0
"RTN","IVMLDEMD",97,0)
 S IVMI=$O(^IVM(301.92,"C","ZPD09","")) I IVMI="" Q
"RTN","IVMLDEMD",98,0)
 S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,""))
"RTN","IVMLDEMD",99,0)
 I IVMJ']"" Q
"RTN","IVMLDEMD",100,0)
 ;
"RTN","IVMLDEMD",101,0)
 ; - check for data node in (#301.511) sub-file
"RTN","IVMLDEMD",102,0)
 S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0))
"RTN","IVMLDEMD",103,0)
 Q:'(+IVMNODE)!($P(IVMNODE,"^",2)']"")
"RTN","IVMLDEMD",104,0)
 ;
"RTN","IVMLDEMD",105,0)
 I $P(IVMNODE,"^",2)="""""" S CKDEL=1
"RTN","IVMLDEMD",106,0)
 Q
"RTN","IVMLDEMD",107,0)
AUTODOD(DFN) ;
"RTN","IVMLDEMD",108,0)
 ; function to automatically upload Date of Death
"RTN","IVMLDEMD",109,0)
 ; fields and return a flag
"RTN","IVMLDEMD",110,0)
 ;
"RTN","IVMLDEMD",111,0)
 ;  Input:      DFN  -  as patient IEN
"RTN","IVMLDEMD",112,0)
 ;
"RTN","IVMLDEMD",113,0)
 ; Output: IVMFLAG   -  1 if a Date of Death Field
"RTN","IVMLDEMD",114,0)
 ;                      0 if not a Date of Death field
"RTN","IVMLDEMD",115,0)
 ;
"RTN","IVMLDEMD",116,0)
 N IVMFLAG,IVMI,IVMJ,IVMNODE,IVMPTR,DODFIELD
"RTN","IVMLDEMD",117,0)
 N DELDATA,CKDEL,CKADD,CKDUZ,IVMDA1,IVMDA2,DGDAUTO,IVMENT4
"RTN","IVMLDEMD",118,0)
 ;
"RTN","IVMLDEMD",119,0)
 ; - initialize flags
"RTN","IVMLDEMD",120,0)
 S (IVMFLAG,CKDEL,CKADD,CKDUZ)=0,IVMENT4=999999999
"RTN","IVMLDEMD",121,0)
 ;
"RTN","IVMLDEMD",122,0)
 ; - check for required parameters
"RTN","IVMLDEMD",123,0)
 S IVMDA2=$G(IVM3015)
"RTN","IVMLDEMD",124,0)
 I 'IVMDA2 G DODQ
"RTN","IVMLDEMD",125,0)
 S IVMDA1=$O(^HL(771.3,"B","PID",""))
"RTN","IVMLDEMD",126,0)
 S IVMDA1=$O(^IVM(301.5,IVMDA2,"IN","B",IVMDA1,""),-1)
"RTN","IVMLDEMD",127,0)
 I 'IVMDA1 G DODQ
"RTN","IVMLDEMD",128,0)
 ;
"RTN","IVMLDEMD",129,0)
 ;added for IVM*2*131
"RTN","IVMLDEMD",130,0)
 I $$CKINPAT^IVMLDEMB($G(DFN)) D  G DODQ
"RTN","IVMLDEMD",131,0)
 .N DODREJDT
"RTN","IVMLDEMD",132,0)
 .; DEMBULL^IVMPREC6 already set up the IVMTEXT array so we don't want
"RTN","IVMLDEMD",133,0)
 .; to send it if the message is to be deleted
"RTN","IVMLDEMD",134,0)
 .; EN^IVMPREC6 will send a message if IVMCNTR
"RTN","IVMLDEMD",135,0)
 .I $G(IVMCNTR),$G(XMSUB)["IVM - DEMOGRAPHIC UPLOAD for ",$G(IVMTEXT(1))["Updated demographic information has been received from the",$G(IVMTEXT(2))["Health Eligibilty Center.  Please select the 'Demographic Upload'" S IVMCNTR=0 K IVMTEXT
"RTN","IVMLDEMD",136,0)
 .D AUTOREJ^IVMLDEMB,SNDBULL^IVMLDEMB ;bld 3/15/2011 for Date of Death Changes IVM*2*148
"RTN","IVMLDEMD",137,0)
 I $P(IVMSEG,"^",9)="""""" D CKAUTO I CKDEL D AUTODEL,DEM5,BULL(+^IVM(301.5,IVMDA2,0)) G DODQ
"RTN","IVMLDEMD",138,0)
 I $P(IVMSEG,"^",31)'=3,$P($G(^DPT(DFN,.35)),"^",1)="" D
"RTN","IVMLDEMD",139,0)
 .D CKAUTO I CKDEL D AUTODEL,DEM5,BULL(+^IVM(301.5,IVMDA2,0)) ;G DODQ
"RTN","IVMLDEMD",140,0)
 .I CKADD D CKDUZ,AUTOADD,DEM5 ;G DODQ
"RTN","IVMLDEMD",141,0)
 I $P(IVMSEG,"^",31)=3,$P($G(^DPT(DFN,.35)),"^",1)'="" D
"RTN","IVMLDEMD",142,0)
 .D CKAUTO I CKDEL D AUTODEL,DEM5,BULL(+^IVM(301.5,IVMDA2,0)) ;G DODQ
"RTN","IVMLDEMD",143,0)
 .I CKADD D CKDUZ,AUTOADD,DEM5 G DODQ
"RTN","IVMLDEMD",144,0)
 I $P(IVMSEG,"^",31)=3,$P($G(^DPT(DFN,.35)),"^",1)="" D
"RTN","IVMLDEMD",145,0)
 .D CKDUZ,AUTOADD,DEM5
"RTN","IVMLDEMD",146,0)
 ;
"RTN","IVMLDEMD",147,0)
 G DODQ
"RTN","IVMLDEMD",148,0)
 ;
"RTN","IVMLDEMD",149,0)
AUTOADD ;
"RTN","IVMLDEMD",150,0)
 S DGDAUTO=1
"RTN","IVMLDEMD",151,0)
 ; - loop through DOD fields
"RTN","IVMLDEMD",152,0)
 F DODFIELD="ZPD09","ZPD31","ZPD32" D
"RTN","IVMLDEMD",153,0)
 .S IVMI=$O(^IVM(301.92,"C",DODFIELD,"")) I IVMI="" Q
"RTN","IVMLDEMD",154,0)
 .S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,"")) Q:IVMJ']""  D
"RTN","IVMLDEMD",155,0)
 ..;
"RTN","IVMLDEMD",156,0)
 ..; - check for data node in (#301.511) sub-file
"RTN","IVMLDEMD",157,0)
 ..S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0)) Q:'(+IVMNODE)
"RTN","IVMLDEMD",158,0)
 ..;
"RTN","IVMLDEMD",159,0)
 ..;   load Date of Death field rec'd from IVM into DHCP (#2) file
"RTN","IVMLDEMD",160,0)
 ..D UPLOAD(+DFN,$P($G(^IVM(301.92,+IVMNODE,0)),"^",5),$P(IVMNODE,"^",2)) S IVMFLAG=1
"RTN","IVMLDEMD",161,0)
 ..; - remove entry from (#301.511) sub-file
"RTN","IVMLDEMD",162,0)
 ..D DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMJ)
"RTN","IVMLDEMD",163,0)
 ;
"RTN","IVMLDEMD",164,0)
 I IVMFLAG D UPLOAD(+DFN,.355,$S(CKDUZ:CKDUZ,1:.5))
"RTN","IVMLDEMD",165,0)
 D CLEAN(IVMDA2)
"RTN","IVMLDEMD",166,0)
 Q
"RTN","IVMLDEMD",167,0)
AUTODEL ;
"RTN","IVMLDEMD",168,0)
 N DFNDOD,DODMPI S DFNDOD=0 I $P($G(^DPT(+DFN,.35)),U)>0 S DFNDOD=1
"RTN","IVMLDEMD",169,0)
 F DODFIELD="ZPD09","ZPD31","ZPD32" D
"RTN","IVMLDEMD",170,0)
 .S IVMI=$O(^IVM(301.92,"C",DODFIELD,"")) I IVMI="" Q
"RTN","IVMLDEMD",171,0)
 .S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,"")) Q:IVMJ']""
"RTN","IVMLDEMD",172,0)
 .; - check for data node in (#301.511) sub-file
"RTN","IVMLDEMD",173,0)
 .S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0))
"RTN","IVMLDEMD",174,0)
 .Q:'(+IVMNODE)
"RTN","IVMLDEMD",175,0)
 .;   load Date of Death deletion rec'd from IVM into DHCP (#2) file
"RTN","IVMLDEMD",176,0)
 .I DODFIELD="ZPD09" I DFNDOD D UPLOAD(+DFN,.351,"@") S DODMPI=$$A31^MPIFA31B(+DFN),IVMFLAG=1
"RTN","IVMLDEMD",177,0)
 .; - remove entry from (#301.511) sub-file
"RTN","IVMLDEMD",178,0)
 .D DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMJ)
"RTN","IVMLDEMD",179,0)
 ;
"RTN","IVMLDEMD",180,0)
 I IVMFLAG D
"RTN","IVMLDEMD",181,0)
 .D NOW^%DTC
"RTN","IVMLDEMD",182,0)
 .D UPLOAD(+DFN,.355,.5)
"RTN","IVMLDEMD",183,0)
 .D UPLOAD(+DFN,.354,%)
"RTN","IVMLDEMD",184,0)
 .N DA,DIE,DR
"RTN","IVMLDEMD",185,0)
 .S DIE="^DPT(",DA=DFN,DR=".352////@"
"RTN","IVMLDEMD",186,0)
 .D ^DIE
"RTN","IVMLDEMD",187,0)
 Q
"RTN","IVMLDEMD",188,0)
 D CLEAN(IVMDA2)
"RTN","IVMLDEMD",189,0)
 Q
"RTN","IVMLDEMD",190,0)
DEM5 ;
"RTN","IVMLDEMD",191,0)
 I '$$DEMO^IVMLDEM5(IVMDA2,IVMDA1,0),'$$DEMO^IVMLDEM5(IVMDA2,IVMDA1,1) D
"RTN","IVMLDEMD",192,0)
 .D DELETE^IVMLDEM5(IVMDA2,IVMDA1," ") ; Dummy up name parameter
"RTN","IVMLDEMD",193,0)
 Q
"RTN","IVMLDEMD",194,0)
CKAUTO S (CKDEL,CKADD)=0
"RTN","IVMLDEMD",195,0)
 S IVMI=$O(^IVM(301.92,"C","ZPD09","")) I IVMI="" Q
"RTN","IVMLDEMD",196,0)
 S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,""))
"RTN","IVMLDEMD",197,0)
 I IVMJ']"" Q
"RTN","IVMLDEMD",198,0)
 ;
"RTN","IVMLDEMD",199,0)
 ; - check for data node in (#301.511) sub-file
"RTN","IVMLDEMD",200,0)
 S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0))
"RTN","IVMLDEMD",201,0)
 Q:'(+IVMNODE)!($P(IVMNODE,"^",2)']"")
"RTN","IVMLDEMD",202,0)
 ;
"RTN","IVMLDEMD",203,0)
 I $P(IVMNODE,"^",2)="""""" S CKDEL=1 Q
"RTN","IVMLDEMD",204,0)
 I $P(IVMNODE,"^",2)=$P($G(^DPT(DFN,.35)),"^",1) S CKADD=1
"RTN","IVMLDEMD",205,0)
 Q
"RTN","IVMLDEMD",206,0)
CKDUZ ; Check to preserve DUZ for "Last Edited By"
"RTN","IVMLDEMD",207,0)
 S IVMI=$O(^IVM(301.92,"C","ZPD32","")) I IVMI="" Q
"RTN","IVMLDEMD",208,0)
 S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,""))
"RTN","IVMLDEMD",209,0)
 I IVMJ']"" Q
"RTN","IVMLDEMD",210,0)
 ;
"RTN","IVMLDEMD",211,0)
 ; - check for data node in (#301.511) sub-file
"RTN","IVMLDEMD",212,0)
 S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0))
"RTN","IVMLDEMD",213,0)
 Q:'(+IVMNODE)!($P(IVMNODE,"^",2)']"")
"RTN","IVMLDEMD",214,0)
 ;
"RTN","IVMLDEMD",215,0)
 I $P(IVMNODE,"^",2)=$P($G(^DPT(DFN,.35)),"^",4) D
"RTN","IVMLDEMD",216,0)
 .S CKDUZ=$P($G(^DPT(DFN,.35)),"^",5)
"RTN","IVMLDEMD",217,0)
 Q
"RTN","IVMLDEMD",218,0)
UPLOAD(DFN,IVMFIELD,IVMVALUE) ; - file Date of Death fields received from IVM
"RTN","IVMLDEMD",219,0)
 ;  Input:       DFN  -  as patient IEN
"RTN","IVMLDEMD",220,0)
 ;          IVMFIELD  -  as the field number to be updated
"RTN","IVMLDEMD",221,0)
 ;          IVMVALUE  -  as the value of the field
"RTN","IVMLDEMD",222,0)
 ;
"RTN","IVMLDEMD",223,0)
 ; Output: None
"RTN","IVMLDEMD",224,0)
 ;
"RTN","IVMLDEMD",225,0)
 N DA,DIE,DR
"RTN","IVMLDEMD",226,0)
 S DIE="^DPT(",DA=DFN,DR=IVMFIELD_"////^S X=IVMVALUE"
"RTN","IVMLDEMD",227,0)
 D ^DIE
"RTN","IVMLDEMD",228,0)
 Q
"RTN","IVMLDEMD",229,0)
 ;
"RTN","IVMLDEMD",230,0)
DODQ ; - return  -->  1 if uploadable field is a Date of Death field
"RTN","IVMLDEMD",231,0)
 ;           -->  0 if nothing uploadable
"RTN","IVMLDEMD",232,0)
 ;
"RTN","IVMLDEMD",233,0)
 I IVMFLAG D RESET^IVMLDEMU
"RTN","IVMLDEMD",234,0)
 Q IVMFLAG
"RTN","IVMLDEMD",235,0)
 ;
"RTN","IVMLDEMD",236,0)
CLEAN(IVMI) ;
"RTN","IVMLDEMD",237,0)
 ; Remove any Date of Death related entries from IVM UPLOAD DEM
"RTN","IVMLDEMD",238,0)
 N IVMJ,IVMN,IVM92,OTHFLG
"RTN","IVMLDEMD",239,0)
 S IVMJ=0 F  S IVMJ=$O(^IVM(301.5,"ASEG","PID",IVMI,IVMJ)) Q:'IVMJ  D
"RTN","IVMLDEMD",240,0)
 .I '$D(^IVM(301.5,IVMI,"IN",IVMJ)) D REMASEG(IVMI,IVMJ) Q
"RTN","IVMLDEMD",241,0)
 .S (OTHFLG,IVMN)=0 F  S IVMN=$O(^IVM(301.5,IVMI,"IN",IVMJ,"DEM",IVMN)) Q:'IVMN  D
"RTN","IVMLDEMD",242,0)
 ..S IVM92=$P(^IVM(301.5,IVMI,"IN",IVMJ,"DEM",IVMN,0),U)
"RTN","IVMLDEMD",243,0)
 ..I "^15^36^37^"[(U_IVM92_U) D REM511(IVMI,IVMJ,IVMN)
"RTN","IVMLDEMD",244,0)
 ..I "^15^36^37^"'[(U_IVM92_U) S OTHFLG=1
"RTN","IVMLDEMD",245,0)
 .I 'OTHFLG D REM501(IVMI,IVMJ)
"RTN","IVMLDEMD",246,0)
 Q
"RTN","IVMLDEMD",247,0)
 ;
"RTN","IVMLDEMD",248,0)
REM501(IVMI,IVMJ) ;
"RTN","IVMLDEMD",249,0)
 ; Delete 301.501 entry to remove from ASEG x-ref
"RTN","IVMLDEMD",250,0)
 N DA,DIE,DR
"RTN","IVMLDEMD",251,0)
 S DA=IVMJ,DA(1)=IVMI
"RTN","IVMLDEMD",252,0)
 S DIE="^IVM(301.5,"_DA(1)_",""IN"","
"RTN","IVMLDEMD",253,0)
 S DR=".02////@" D ^DIE
"RTN","IVMLDEMD",254,0)
 Q
"RTN","IVMLDEMD",255,0)
 ;
"RTN","IVMLDEMD",256,0)
REM511(IVMI,IVMJ,IVMN) ;
"RTN","IVMLDEMD",257,0)
 ; Delete 301.511 entry to remove from IVM UPLOAD DEM
"RTN","IVMLDEMD",258,0)
 N DA,DIK
"RTN","IVMLDEMD",259,0)
 S DA(1)=IVMJ,DA(2)=IVMI,DA=IVMN
"RTN","IVMLDEMD",260,0)
 S DIK="^IVM(301.5,"_DA(2)_",""IN"","_DA(1)_",""DEM"","
"RTN","IVMLDEMD",261,0)
 D ^DIK
"RTN","IVMLDEMD",262,0)
 Q
"RTN","IVMLDEMD",263,0)
 ;
"RTN","IVMLDEMD",264,0)
REMASEG(IVMI,IVMJ) ;
"RTN","IVMLDEMD",265,0)
 ; Delete invalid ASEG x-ref entries
"RTN","IVMLDEMD",266,0)
 K ^IVM(301.5,"ASEG","PID",IVMI,IVMJ)
"RTN","IVMLDEMD",267,0)
 Q
"RTN","IVMLDEMD",268,0)
BULL(DFN) ; Date of Death Deletion Bulletin
"RTN","IVMLDEMD",269,0)
 I '$D(^DPT(DFN,0)) Q
"RTN","IVMLDEMD",270,0)
 I '(+$G(^DPT(DFN,.35))) Q
"RTN","IVMLDEMD",271,0)
 ;
"RTN","IVMLDEMD",272,0)
 N DGDEATH,DGB,DGPCMM,XMSUB,X
"RTN","IVMLDEMD",273,0)
 S DGDEATH=+$G(^DPT(DFN,.35)),XMSUB="Patient Death has been Deleted",DGCT=0
"RTN","IVMLDEMD",274,0)
 D ^DGPATV
"RTN","IVMLDEMD",275,0)
 D LINE^DGDEATH("The date of death for the following patient has been deleted.")
"RTN","IVMLDEMD",276,0)
 D LINE^DGDEATH("")
"RTN","IVMLDEMD",277,0)
 D DEMOG^DGDEATH
"RTN","IVMLDEMD",278,0)
 D LINE^DGDEATH("")
"RTN","IVMLDEMD",279,0)
 S DGPCMM=$$PCMMXMY^SCAPMC25(1,DFN,,,0) ;creates xmy array
"RTN","IVMLDEMD",280,0)
 S DGCT=$$PCMAIL^SCMCMM(DFN,"DGTEXT",DT)
"RTN","IVMLDEMD",281,0)
 S DGB=1 D ^DGBUL S X=DGDEATH
"RTN","IVMLDEMD",282,0)
 K DGCT,DGDEATH D KILL^DGPATV
"RTN","IVMLDEMD",283,0)
 ;
"RTN","IVMLDEMD",284,0)
 Q
"RTN","IVMPREC8")
0^1^B204616028^B186534384
"RTN","IVMPREC8",1,0)
IVMPREC8 ;ALB/KCL/BRM/PJR/CKN,TDM - PROCESS INCOMING (Z05 EVENT TYPE) HL7 MESSAGES (CON'T) ; 2/17/11 10:38am
"RTN","IVMPREC8",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**5,6,12,58,73,79,102,115,121,148**;21-OCT-94;Build 34
"RTN","IVMPREC8",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMPREC8",4,0)
 ;
"RTN","IVMPREC8",5,0)
 ; This routine is called from IVMPREC6.
"RTN","IVMPREC8",6,0)
 ; This routine will process batch ORU demographic (event type Z05) HL7
"RTN","IVMPREC8",7,0)
 ; messages received from the IVM center.
"RTN","IVMPREC8",8,0)
 ;
"RTN","IVMPREC8",9,0)
 ;
"RTN","IVMPREC8",10,0)
 ;
"RTN","IVMPREC8",11,0)
PID ; - compare PID segment fields with DHCP fields
"RTN","IVMPREC8",12,0)
 N COMPPH1,COMPPH2,COUNTRY
"RTN","IVMPREC8",13,0)
 ;
"RTN","IVMPREC8",14,0)
 S IVMFLD=""
"RTN","IVMPREC8",15,0)
 ; - strip off segment name
"RTN","IVMPREC8",16,0)
 S IVMPIECE=$E(IVMXREF,4,9)
"RTN","IVMPREC8",17,0)
 ;Only process if value exist - also handles multiple address
"RTN","IVMPREC8",18,0)
 I $G(IVMPID(+$E(IVMPIECE,1,2)))'=""!($O(IVMPID(+$E(IVMPIECE,1,2),""))) D
"RTN","IVMPREC8",19,0)
 .;
"RTN","IVMPREC8",20,0)
 .; - if PID field is the address field - parse address
"RTN","IVMPREC8",21,0)
 .S IVMADFLG=0
"RTN","IVMPREC8",22,0)
 .I IVMXREF["PID11",'$G(DODSEG) D  Q:IVMFLD=""
"RTN","IVMPREC8",23,0)
 ..;
"RTN","IVMPREC8",24,0)
 ..; - Process Place of Birth City & State
"RTN","IVMPREC8",25,0)
 ..;I (IVMXREF="PID113N")!(IVMXREF="PID114N") D  Q
"RTN","IVMPREC8",26,0)
 ..;.Q:'$D(ADDRESS("N"))
"RTN","IVMPREC8",27,0)
 ..;.S IVMADDR=ADDRESS("N")
"RTN","IVMPREC8",28,0)
 ..;.S IVMPIECE=$E(IVMPIECE,3,4),IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE)
"RTN","IVMPREC8",29,0)
 ..;.Q:IVMFLD=""
"RTN","IVMPREC8",30,0)
 ..;.I IVMPIECE="4N" S (IVMSTPTR,IVMFLD)=+$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",31,0)
 ..;
"RTN","IVMPREC8",32,0)
 ..; - get PID address field containing 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",33,0)
 ..;I $G(AUPFARY(IVMDEMDA))="CA" S IVMADDR=$G(ADDRESS("CA")) ;Conf Addr
"RTN","IVMPREC8",34,0)
 ..I $G(AUPFARY(IVMDEMDA))'="CA" D
"RTN","IVMPREC8",35,0)
 ...S IVMADDR=$S($D(ADDRESS("P")):ADDRESS("P"),$D(ADDRESS("VAB1")):ADDRESS("VAB1"),$D(ADDRESS("VAB2")):ADDRESS("VAB2"),$D(ADDRESS("VAB3")):ADDRESS("VAB3"),$D(ADDRESS("VAB4")):ADDRESS("VAB4"),1:"")
"RTN","IVMPREC8",36,0)
 ..I IVMADDR="" Q
"RTN","IVMPREC8",37,0)
 ..S COUNTRY=$P(IVMADDR,$E(HLECH),6)
"RTN","IVMPREC8",38,0)
 ..S FORADDR=$S(COUNTRY="USA":0,1:1)
"RTN","IVMPREC8",39,0)
 ..; - get piece of address field, and set IVMFLD
"RTN","IVMPREC8",40,0)
 ..S IVMPIECE=$E(IVMPIECE,3,6),IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE)
"RTN","IVMPREC8",41,0)
 ..Q:IVMFLD=""
"RTN","IVMPREC8",42,0)
 ..; - convert state abbrev. to pointer
"RTN","IVMPREC8",43,0)
 ..I (IVMPIECE=4)!(IVMPIECE="4C") D
"RTN","IVMPREC8",44,0)
 ...S IVMFLD=$S('FORADDR:IVMFLD,1:"")
"RTN","IVMPREC8",45,0)
 ...I IVMFLD'="" S (IVMSTPTR,IVMFLD)=+$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",46,0)
 ..I (IVMPIECE=5)!(IVMPIECE="5C") D
"RTN","IVMPREC8",47,0)
 ...S IVMFLD=$S('FORADDR:IVMFLD,1:"")
"RTN","IVMPREC8",48,0)
 ...I IVMFLD'="" S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=X
"RTN","IVMPREC8",49,0)
 ..I (IVMPIECE="4F")!(IVMPIECE="4CF") S IVMFLD=$S(FORADDR:IVMFLD,1:"") ;PROVINCE
"RTN","IVMPREC8",50,0)
 ..I (IVMPIECE="5F")!(IVMPIECE="5CF") S IVMFLD=$S(FORADDR:IVMFLD,1:"") ;POSTAL CODE
"RTN","IVMPREC8",51,0)
 ..I (IVMPIECE=6)!(IVMPIECE="6C") S IVMFLD=$$CNTRCONV(COUNTRY) ;COUNTRY
"RTN","IVMPREC8",52,0)
 ..I IVMPIECE=7 S IVMFLD=$$BAICONV(IVMFLD) ;Bad Address Indicator
"RTN","IVMPREC8",53,0)
 ..I IVMPIECE="7C" S IVMFLD=CONFADCT  ;CONFADCT set in PID11^IVMPRECA
"RTN","IVMPREC8",54,0)
 ..I IVMPIECE="9C" D
"RTN","IVMPREC8",55,0)
 ...S IVMFLD=$S('FORADDR:IVMFLD,1:"") Q:IVMFLD=""
"RTN","IVMPREC8",56,0)
 ...S IVMFLD=+$O(^DIC(5,IVMSTPTR,1,"C",IVMFLD,0))  ;CONF ADDR COUNTY
"RTN","IVMPREC8",57,0)
 ..I $E(IVMPIECE,1,3)="12C" S IVMFLD=$$FMDATE^HLFNC($P(IVMFLD,$E(HLECH,4),$E(IVMPIECE,4)))
"RTN","IVMPREC8",58,0)
 ..S IVMADFLG=1
"RTN","IVMPREC8",59,0)
 .;
"RTN","IVMPREC8",60,0)
 .I IVMXREF["PID12",'$G(DODSEG) D
"RTN","IVMPREC8",61,0)
 ..I 'FORADDR S IVMADFLG=1,IVMFLD=+$O(^DIC(5,IVMSTPTR,1,"C",IVMPID(12),0))  ;Process county only if not foreign address
"RTN","IVMPREC8",62,0)
 .; line remove so that the phone number is compared 
"RTN","IVMPREC8",63,0)
 .; before saving to 301.5.
"RTN","IVMPREC8",64,0)
 .I IVMXREF["PID13",$D(TELECOM),'$G(DODSEG) D
"RTN","IVMPREC8",65,0)
 ..;Confidential Phone Number
"RTN","IVMPREC8",66,0)
 ..;I IVMXREF="PID13CA",$D(TELECOM("VACPN")) D
"RTN","IVMPREC8",67,0)
 ..;.S IVMFLD=$$CONVPH($P($G(TELECOM("VACPN")),$E(HLECH))),IVMADFLG=1
"RTN","IVMPREC8",68,0)
 ..;Phone Number [Work]
"RTN","IVMPREC8",69,0)
 ..;I IVMXREF="PID13W",$D(TELECOM("WPN")) D
"RTN","IVMPREC8",70,0)
 ..;.S IVMFLD=$$CONVPH($P($G(TELECOM("WPN")),$E(HLECH))),IVMADFLG=1
"RTN","IVMPREC8",71,0)
 ..;Pager Number
"RTN","IVMPREC8",72,0)
 ..I IVMXREF="PID13B",$D(TELECOM("BPN")) D
"RTN","IVMPREC8",73,0)
 ...S IVMFLD=$$CONVPH($P($G(TELECOM("BPN")),$E(HLECH))),IVMADFLG=1
"RTN","IVMPREC8",74,0)
 ..;Cell Phone Number
"RTN","IVMPREC8",75,0)
 ..I IVMXREF="PID13C",$D(TELECOM("ORN")) D
"RTN","IVMPREC8",76,0)
 ...S IVMFLD=$$CONVPH($P($G(TELECOM("ORN")),$E(HLECH))),IVMADFLG=1
"RTN","IVMPREC8",77,0)
 ..;Email Address
"RTN","IVMPREC8",78,0)
 ..I IVMXREF="PID13E",$D(TELECOM("NET")) D
"RTN","IVMPREC8",79,0)
 ...S IVMFLD=$P($G(TELECOM("NET")),$E(HLECH),4)
"RTN","IVMPREC8",80,0)
 ...S IVMFLD=$S($$CHKEMAIL(IVMFLD):IVMFLD,1:""),IVMADFLG=1
"RTN","IVMPREC8",81,0)
 .; - file address fields and quit
"RTN","IVMPREC8",82,0)
 .I IVMADFLG D STORE^IVMPREC9 Q
"RTN","IVMPREC8",83,0)
 .;
"RTN","IVMPREC8",84,0)
 .; - otherwise, set IVMFLD to field rec'd from IVM
"RTN","IVMPREC8",85,0)
 .;   for comparison with DHCP field
"RTN","IVMPREC8",86,0)
 .;I (IVMXREF'="PID113N")&(IVMXREF'="PID114N")&($E(IVMXREF,1,5)'="PID13") S IVMFLD=$G(IVMPID(+IVMPIECE))
"RTN","IVMPREC8",87,0)
 .I $E(IVMXREF,1,5)'="PID13" S IVMFLD=$G(IVMPID(+IVMPIECE))
"RTN","IVMPREC8",88,0)
 .;
"RTN","IVMPREC8",89,0)
 .; - if HL7 date convert to FM date and set IVMFLD
"RTN","IVMPREC8",90,0)
 .I IVMXREF["PID07" S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",91,0)
 .;
"RTN","IVMPREC8",92,0)
 .; - if HL7 code convert to VistA and set IVMFLD
"RTN","IVMPREC8",93,0)
 .I IVMXREF["PID16" D  ;Marital Status
"RTN","IVMPREC8",94,0)
 ..S IVMFLD=$S(IVMFLD="D":"DIVORCED",IVMFLD="M":"MARRIED",IVMFLD="W":"WIDOWED",IVMFLD="A":"SEPARATED",IVMFLD="S":"NEVER MARRIED",IVMFLD="U":"UNKNOWN")
"RTN","IVMPREC8",95,0)
 ..S IVMFLD=$O(^DIC(11,"B",IVMFLD,0))
"RTN","IVMPREC8",96,0)
 .;
"RTN","IVMPREC8",97,0)
 .I IVMXREF["PID17" S IVMFLD=$O(^DIC(13,"C",IVMFLD,0))  ;Religion
"RTN","IVMPREC8",98,0)
 .;
"RTN","IVMPREC8",99,0)
 .I IVMXREF["PID22" D  ;Ethnicity
"RTN","IVMPREC8",100,0)
 ..S IVMFLD=$$CODE2PTR^DGUTL4($P($G(IVMPID(22)),$E(HLECH),4),2,2)
"RTN","IVMPREC8",101,0)
 .;
"RTN","IVMPREC8",102,0)
 .I IVMXREF="PID10",'$G(DODSEG),$D(IVMRACE) D  Q
"RTN","IVMPREC8",103,0)
 ..N XVAL,IVMLST,DHCPLST
"RTN","IVMPREC8",104,0)
 ..S (XVAL,IVMLST,DHCPLST)=""
"RTN","IVMPREC8",105,0)
 ..F  S XVAL=$O(^DPT(DFN,.02,"B",XVAL)) Q:XVAL=""  S IVMLST=IVMLST_XVAL_U
"RTN","IVMPREC8",106,0)
 ..S XVAL="" F  S XVAL=$O(IVMRACE(2,XVAL)) Q:XVAL=""  S DHCPLST=DHCPLST_XVAL_U
"RTN","IVMPREC8",107,0)
 ..Q:IVMLST=DHCPLST
"RTN","IVMPREC8",108,0)
 ..F XVAL=1:1:($L(DHCPLST,U)-1) S IVMFLD=$P(DHCPLST,U,XVAL) D
"RTN","IVMPREC8",109,0)
 ...D STORE^IVMPREC9
"RTN","IVMPREC8",110,0)
 .;
"RTN","IVMPREC8",111,0)
 .; - call VADPT routine to return DHCP demographics
"RTN","IVMPREC8",112,0)
 .D DEM^VADPT,ADD^VADPT,OPD^VADPT
"RTN","IVMPREC8",113,0)
 .;
"RTN","IVMPREC8",114,0)
 .; - execute code on the 1 node and get DHCP field for comparison
"RTN","IVMPREC8",115,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",116,0)
 .;
"RTN","IVMPREC8",117,0)
 .; - special logic for phone number processing
"RTN","IVMPREC8",118,0)
 .; - if different, then store the actual value received, then quit
"RTN","IVMPREC8",119,0)
 .;
"RTN","IVMPREC8",120,0)
 .I IVMXREF="PID13",$D(TELECOM("PRN")),'$G(DODSEG) D  Q
"RTN","IVMPREC8",121,0)
 ..S IVMFLD=$P($G(TELECOM("PRN")),$E(HLECH))
"RTN","IVMPREC8",122,0)
 ..I IVMFLD]"" D
"RTN","IVMPREC8",123,0)
 ...S COMPPH1=$$CONVPH(IVMFLD),COMPPH2=$$CONVPH(IVMDHCP)
"RTN","IVMPREC8",124,0)
 ...I COMPPH1'=COMPPH2 D STORE^IVMPREC9
"RTN","IVMPREC8",125,0)
 .;
"RTN","IVMPREC8",126,0)
 .; - if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",127,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",128,0)
 Q
"RTN","IVMPREC8",129,0)
 ;
"RTN","IVMPREC8",130,0)
 ;
"RTN","IVMPREC8",131,0)
ZPD ; - compare ZPD segment fields with DHCP fields
"RTN","IVMPREC8",132,0)
 N STFLG
"RTN","IVMPREC8",133,0)
 S STFLG=0
"RTN","IVMPREC8",134,0)
 S IVMPIECE=$E(IVMXREF,4,5)
"RTN","IVMPREC8",135,0)
 I IVMXREF="ZPD09"!(IVMXREF="ZPD31")!(IVMXREF="ZPD32") Q:$$DODCK(DFN)
"RTN","IVMPREC8",136,0)
 I $P(IVMSEG,HLFS,IVMPIECE)]"" D
"RTN","IVMPREC8",137,0)
 .;
"RTN","IVMPREC8",138,0)
 .; - set var to HL7 field
"RTN","IVMPREC8",139,0)
 .S IVMFLD=$P(IVMSEG,HLFS,IVMPIECE)
"RTN","IVMPREC8",140,0)
 .;
"RTN","IVMPREC8",141,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",142,0)
 .I IVMXREF["ZPD09"!(IVMXREF["ZPD13")!(IVMXREF["ZPD32") S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",143,0)
 .;
"RTN","IVMPREC8",144,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",145,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",146,0)
 .;
"RTN","IVMPREC8",147,0)
 .; - if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",148,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) S STFLG=1 D STORE^IVMPREC9 Q
"RTN","IVMPREC8",149,0)
 .I $P(IVMSEG,"^",IVMPIECE)'="""""" D
"RTN","IVMPREC8",150,0)
 ..I IVMXREF["ZPD09" D STORE^IVMPREC9
"RTN","IVMPREC8",151,0)
 ..;I IVMXREF["ZPD09"!(IVMXREF["ZPD31")!(IVMXREF["ZPD32") D STORE^IVMPREC9
"RTN","IVMPREC8",152,0)
 I IVMXREF["ZPD08",STFLG,$$AUTORINC^IVMPREC9(DFN) Q
"RTN","IVMPREC8",153,0)
 I IVMXREF["ZPD32",$$AUTODOD^IVMLDEMD(DFN)
"RTN","IVMPREC8",154,0)
 Q
"RTN","IVMPREC8",155,0)
 ;
"RTN","IVMPREC8",156,0)
 ;
"RTN","IVMPREC8",157,0)
DODCK(DFN) ;this will check if Date of Death information needs to be uploaded or not.
"RTN","IVMPREC8",158,0)
 ;2 requirements are:
"RTN","IVMPREC8",159,0)
 ;  1. When the DOD is received from ESR with a Source of Death Notification equal to "Death Certificate on file and the
"RTN","IVMPREC8",160,0)
 ;     VistA DOD is null or empty then VistA will upload the Date of Death from ESR
"RTN","IVMPREC8",161,0)
 ;  2. When DOD is Received from ESR and VistA DOD is already populated then Vista will ignore the DOD from ESR and VistA
"RTN","IVMPREC8",162,0)
 ;     will not create an entry in the IVM demographic upload option.
"RTN","IVMPREC8",163,0)
 ;
"RTN","IVMPREC8",164,0)
 ; Inputs: DFN for ^DPT
"RTN","IVMPREC8",165,0)
 ;         IVMXREF (must be ZPD09, ZPD31 and ZPD32)
"RTN","IVMPREC8",166,0)
 ;         IVMSEG (the ZPD data)
"RTN","IVMPREC8",167,0)
 ;         IVMFLD (the field number in ^DPT(DFN)
"RTN","IVMPREC8",168,0)
 ;         IVMPIECE (the piece number of IVMSEG)
"RTN","IVMPREC8",169,0)
 ;         IVMDHCP (the data from ^DPT(DFN)
"RTN","IVMPREC8",170,0)
 ;
"RTN","IVMPREC8",171,0)
 ;
"RTN","IVMPREC8",172,0)
 N DODARRAY,QUIT
"RTN","IVMPREC8",173,0)
 ;
"RTN","IVMPREC8",174,0)
 S (CKDEL,QUIT)=0
"RTN","IVMPREC8",175,0)
 ;
"RTN","IVMPREC8",176,0)
 I $P(IVMSEG,"^",9)="""""" Q 0
"RTN","IVMPREC8",177,0)
 D GETS^DIQ(2,DFN,".351:.355","","DODARRAY")
"RTN","IVMPREC8",178,0)
 S DOD=DODARRAY(2,DFN_",",.351)
"RTN","IVMPREC8",179,0)
 I DOD'="" Q 1
"RTN","IVMPREC8",180,0)
 I $P(IVMSEG,"^",31)=3,DOD="" S QUIT=0    ;Death Certificate not on File
"RTN","IVMPREC8",181,0)
 I $P(IVMSEG,"^",31)=3,DOD'="" S QUIT=1
"RTN","IVMPREC8",182,0)
 ;
"RTN","IVMPREC8",183,0)
 Q QUIT ;
"RTN","IVMPREC8",184,0)
 ;
"RTN","IVMPREC8",185,0)
ZTA ; - compare ZTA segment fields with DHCP fields
"RTN","IVMPREC8",186,0)
 N COMPPH1,COMPPH2,COUNTRY
"RTN","IVMPREC8",187,0)
 S IVMPIECE=$E(IVMXREF,4,7)
"RTN","IVMPREC8",188,0)
 I $P(IVMSEG,HLFS,$E(IVMPIECE,1,2))]"" D
"RTN","IVMPREC8",189,0)
 .;
"RTN","IVMPREC8",190,0)
 .; - set var IVMFLD to incoming HL7 field
"RTN","IVMPREC8",191,0)
 .S IVMFLD=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2))
"RTN","IVMPREC8",192,0)
 .;
"RTN","IVMPREC8",193,0)
 .; - ZTA05 as the ZTA address field containing 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",194,0)
 .I IVMXREF["ZTA05" D
"RTN","IVMPREC8",195,0)
 ..S IVMADDR=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2)) Q:IVMADDR=""
"RTN","IVMPREC8",196,0)
 ..S COUNTRY=$P(IVMADDR,$E(HLECH),6)
"RTN","IVMPREC8",197,0)
 ..S FORADDR=$S(COUNTRY="USA":0,1:1)
"RTN","IVMPREC8",198,0)
 ..; - get piece of address field, and set IVMFLD
"RTN","IVMPREC8",199,0)
 ..S IVMPIECE=$E(IVMPIECE,3,4)
"RTN","IVMPREC8",200,0)
 ..S IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE) Q:IVMFLD=""
"RTN","IVMPREC8",201,0)
 ..I (IVMPIECE=4)!(IVMPIECE=5)!(IVMPIECE=9) S IVMFLD=$S('FORADDR:IVMFLD,1:"") Q:IVMFLD=""
"RTN","IVMPREC8",202,0)
 ..I IVMPIECE=4 S IVMFLD=$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",203,0)
 ..I IVMPIECE=5 S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=$G(X)
"RTN","IVMPREC8",204,0)
 ..I IVMPIECE="4F" S IVMFLD=$S(FORADDR:IVMFLD,1:"")  ;PROVINCE
"RTN","IVMPREC8",205,0)
 ..I IVMPIECE="5F" S IVMFLD=$S(FORADDR:IVMFLD,1:"")  ;POSTAL CODE
"RTN","IVMPREC8",206,0)
 ..I IVMPIECE=6 S IVMFLD=$$CNTRCONV(COUNTRY)         ;COUNTRY
"RTN","IVMPREC8",207,0)
 ..I IVMPIECE=9 S IVMFLD=+$O(^DIC(5,IVMSTPTR,1,"C",IVMFLD,0))  ;COUNTY
"RTN","IVMPREC8",208,0)
 .Q:IVMFLD=""
"RTN","IVMPREC8",209,0)
 .;
"RTN","IVMPREC8",210,0)
 .; - if HL7 data convert to Y/N value
"RTN","IVMPREC8",211,0)
 .I IVMXREF["ZTA02" S IVMFLD=$S(IVMFLD=0:"N",IVMFLD=1:"Y",1:"")
"RTN","IVMPREC8",212,0)
 .;
"RTN","IVMPREC8",213,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",214,0)
 .I (IVMXREF["ZTA03")!(IVMXREF["ZTA04")!(IVMXREF["ZTA08") S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",215,0)
 .;
"RTN","IVMPREC8",216,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",217,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",218,0)
 .;
"RTN","IVMPREC8",219,0)
 .; - special logic for phone number processing
"RTN","IVMPREC8",220,0)
 .; - if different, then store the actual value received, then quit
"RTN","IVMPREC8",221,0)
 .I IVMXREF["ZTA07" D  Q
"RTN","IVMPREC8",222,0)
 ..S COMPPH1=$$CONVPH(IVMFLD),COMPPH2=$$CONVPH(IVMDHCP)
"RTN","IVMPREC8",223,0)
 ..I COMPPH1'=COMPPH2 D STORE^IVMPREC9
"RTN","IVMPREC8",224,0)
 .;
"RTN","IVMPREC8",225,0)
 .; if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",226,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",227,0)
 .;
"RTN","IVMPREC8",228,0)
 .I IVMXREF["ZTA08" D
"RTN","IVMPREC8",229,0)
 ..I IVMFLD]"",(IVMFLD>IVMDHCP) S UPDAUPG("TA")=1
"RTN","IVMPREC8",230,0)
 Q
"RTN","IVMPREC8",231,0)
 ;
"RTN","IVMPREC8",232,0)
ZGD ; - compare ZGD segment fields with DHCP fields
"RTN","IVMPREC8",233,0)
 S IVMADFLG=0
"RTN","IVMPREC8",234,0)
 S IVMPIECE=$E(IVMXREF,4,7)
"RTN","IVMPREC8",235,0)
 I $P(IVMSEG,HLFS,$E(IVMPIECE,1,2))]"" D
"RTN","IVMPREC8",236,0)
 .;
"RTN","IVMPREC8",237,0)
 .; - set var IVMFLD to incoming HL7 field
"RTN","IVMPREC8",238,0)
 .I 'IVMADFLG S IVMFLD=$P(IVMSEG,HLFS,IVMPIECE)
"RTN","IVMPREC8",239,0)
 .;
"RTN","IVMPREC8",240,0)
 .; - ZGD06 as the ZGD address field containing 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",241,0)
 .I IVMXREF["ZGD06" D
"RTN","IVMPREC8",242,0)
 ..S IVMADDR=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2)),IVMPIECE=$E(IVMPIECE,3)
"RTN","IVMPREC8",243,0)
 ..S IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE),IVMADFLG=1
"RTN","IVMPREC8",244,0)
 ..I IVMFLD]"",IVMPIECE=4 S IVMFLD=$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",245,0)
 ..I IVMFLD]"",IVMPIECE=5 S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=$G(X)
"RTN","IVMPREC8",246,0)
 .;
"RTN","IVMPREC8",247,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",248,0)
 .I IVMXREF["ZGD08" S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",249,0)
 .;
"RTN","IVMPREC8",250,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",251,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",252,0)
 .;
"RTN","IVMPREC8",253,0)
 .; if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",254,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",255,0)
 Q
"RTN","IVMPREC8",256,0)
 ;
"RTN","IVMPREC8",257,0)
ZCT ; - compare ZCT segment fields with DHCP fields
"RTN","IVMPREC8",258,0)
 N ZCTTYP
"RTN","IVMPREC8",259,0)
 S IVMADFLG=0
"RTN","IVMPREC8",260,0)
 S IVMPIECE=$E(IVMXREF,4,8)
"RTN","IVMPREC8",261,0)
 S ZCTTYP=$E(IVMPIECE,$L(IVMPIECE)-1,$L(IVMPIECE))
"RTN","IVMPREC8",262,0)
 Q:$P(IVMSEG,HLFS,2)'=$S(ZCTTYP="K1":1,ZCTTYP="K2":2,ZCTTYP="E1":3,ZCTTYP="E2":4,ZCTTYP="D1":5,1:"")
"RTN","IVMPREC8",263,0)
 I $P(IVMSEG,HLFS,$E(IVMPIECE,1,2))]"" D
"RTN","IVMPREC8",264,0)
 .;
"RTN","IVMPREC8",265,0)
 .; - set var IVMFLD to incoming HL7 field
"RTN","IVMPREC8",266,0)
 .I 'IVMADFLG S IVMFLD=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2))
"RTN","IVMPREC8",267,0)
 .;
"RTN","IVMPREC8",268,0)
 .; - if HL7 name format convert to FM
"RTN","IVMPREC8",269,0)
 .I IVMXREF["ZCT03" S IVMFLD=$$FMNAME^HLFNC(IVMFLD)
"RTN","IVMPREC8",270,0)
 .;
"RTN","IVMPREC8",271,0)
 .; - ZCT05 as the ZCT address field containing 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",272,0)
 .I IVMXREF["ZCT05" D
"RTN","IVMPREC8",273,0)
 ..S IVMADDR=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2)),IVMPIECE=$E(IVMPIECE,3)
"RTN","IVMPREC8",274,0)
 ..S IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE),IVMADFLG=1
"RTN","IVMPREC8",275,0)
 ..I IVMFLD]"",IVMPIECE=4 S IVMFLD=$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",276,0)
 ..I IVMFLD]"",IVMPIECE=5 S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=$G(X)
"RTN","IVMPREC8",277,0)
 .;
"RTN","IVMPREC8",278,0)
 .I IVMADFLG D STORE^IVMPREC9 Q
"RTN","IVMPREC8",279,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",280,0)
 .I IVMXREF["ZCT10" S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",281,0)
 .;
"RTN","IVMPREC8",282,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",283,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",284,0)
 .;
"RTN","IVMPREC8",285,0)
 .; if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",286,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",287,0)
 .;
"RTN","IVMPREC8",288,0)
 .I IVMXREF["ZCT10" D
"RTN","IVMPREC8",289,0)
 ..I IVMFLD]"",(IVMFLD>IVMDHCP) S UPDAUPG(ZCTTYP)=1
"RTN","IVMPREC8",290,0)
 Q
"RTN","IVMPREC8",291,0)
 ;
"RTN","IVMPREC8",292,0)
ZEM ; - compare ZEM segment fields with DHCP fields
"RTN","IVMPREC8",293,0)
 S IVMADFLG=0
"RTN","IVMPREC8",294,0)
 S IVMPIECE=$E(IVMXREF,4,7)
"RTN","IVMPREC8",295,0)
 S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS)
"RTN","IVMPREC8",296,0)
 Q:$P(IVMSEG,HLFS,2)'=$S($E(IVMXREF,$L(IVMXREF))="S":2,1:1)
"RTN","IVMPREC8",297,0)
 I $P(IVMSEG,HLFS,$E(IVMPIECE,1,2))]"" D
"RTN","IVMPREC8",298,0)
 .;
"RTN","IVMPREC8",299,0)
 .; - set var IVMFLD to incoming HL7 field
"RTN","IVMPREC8",300,0)
 .I 'IVMADFLG S IVMFLD=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2))
"RTN","IVMPREC8",301,0)
 .;
"RTN","IVMPREC8",302,0)
 .; - ZEM06 as the ZEM address field containing 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",303,0)
 .I IVMXREF["ZEM06" D
"RTN","IVMPREC8",304,0)
 ..S IVMADDR=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2)),IVMPIECE=$E(IVMPIECE,3)
"RTN","IVMPREC8",305,0)
 ..S IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE)    ;,IVMADFLG=1
"RTN","IVMPREC8",306,0)
 ..I IVMFLD]"",IVMPIECE=4 S IVMFLD=$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",307,0)
 ..I IVMFLD]"",IVMPIECE=5 S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=$G(X)
"RTN","IVMPREC8",308,0)
 .;
"RTN","IVMPREC8",309,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",310,0)
 .I IVMXREF["ZEM09" S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",311,0)
 .;
"RTN","IVMPREC8",312,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",313,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",314,0)
 .;
"RTN","IVMPREC8",315,0)
 .; if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",316,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",317,0)
 Q
"RTN","IVMPREC8",318,0)
 ;
"RTN","IVMPREC8",319,0)
RF1 ; - compare RF1 segment fields with DHCP fields
"RTN","IVMPREC8",320,0)
 S IVMPIECE=$E(IVMXREF,4),IVMADFLG=1,RF1TYPE=$P(IVMSEG,HLFS,3)
"RTN","IVMPREC8",321,0)
 ;As per requirements, delete the communication data (Email, Cell and Pager) if it is not received in Z05.
"RTN","IVMPREC8",322,0)
 ;Hence, remove it from EPCDEL (deletion array) if Data exist in Z05. Comm. fields contained in EPCDEL will be deleted after updating all incoming communication data.
"RTN","IVMPREC8",323,0)
 K EPCDEL(RF1TYPE)
"RTN","IVMPREC8",324,0)
 ;if RF1 field is SEQ6, then parse subcomponents
"RTN","IVMPREC8",325,0)
 I RF1TYPE="SAD",((IVMXREF="RF161")!(IVMXREF="RF162")!(IVMXREF="RF171")) D RF1PROC
"RTN","IVMPREC8",326,0)
 ;I RF1TYPE="CAD",((IVMXREF="RF161CA")!(IVMXREF="RF171CA")) D RF1PROC
"RTN","IVMPREC8",327,0)
 I RF1TYPE="CPH",((IVMXREF="RF161C")!(IVMXREF="RF162C")!(IVMXREF="RF171C")) D RF1PROC
"RTN","IVMPREC8",328,0)
 I RF1TYPE="PNO",((IVMXREF="RF161B")!(IVMXREF="RF162B")!(IVMXREF="RF171B")) D RF1PROC
"RTN","IVMPREC8",329,0)
 I RF1TYPE="EAD",((IVMXREF="RF161E")!(IVMXREF="RF162E")!(IVMXREF="RF171E")) D RF1PROC
"RTN","IVMPREC8",330,0)
 I '$$RF1CHK^IVMPREC6(IVMRTN,IVMDA),IVMXREF="RF171E" D  ;Last RF1
"RTN","IVMPREC8",331,0)
 . I $$AUTOEPC^IVMPREC9(DFN,.UPDEPC)
"RTN","IVMPREC8",332,0)
 . I 'UPDEPC("SAD") S NOUPDT=1
"RTN","IVMPREC8",333,0)
 . I $$AUTOADDR^IVMLDEM6(DFN,1,NOUPDT)
"RTN","IVMPREC8",334,0)
 Q
"RTN","IVMPREC8",335,0)
 ;
"RTN","IVMPREC8",336,0)
RF1PROC ;
"RTN","IVMPREC8",337,0)
 N IVMEPC
"RTN","IVMPREC8",338,0)
 I $P(IVMSEG,HLFS,IVMPIECE)]"" D
"RTN","IVMPREC8",339,0)
 .;if RF1 field is SEQ6, then parse subcomponents
"RTN","IVMPREC8",340,0)
 .I IVMXREF["RF16" D  Q
"RTN","IVMPREC8",341,0)
 ..;- get data containing 4 pieces seperated by HLECH (~)
"RTN","IVMPREC8",342,0)
 ..S IVMRFDAT=$P(IVMSEG,HLFS,6)
"RTN","IVMPREC8",343,0)
 ..S IVMPIECE=$E(IVMXREF,5),IVMFLD=$P(IVMRFDAT,"~",IVMPIECE)
"RTN","IVMPREC8",344,0)
 ..;get 6th character of IVMXREF to determine if value is for Address
"RTN","IVMPREC8",345,0)
 ..;OR Email, Cell and Pager
"RTN","IVMPREC8",346,0)
 ..S IVMEPC=$E(IVMXREF,6)
"RTN","IVMPREC8",347,0)
 ..;Convert Change Source for Address, Email, Cell and Pager
"RTN","IVMPREC8",348,0)
 ..I IVMPIECE=2 S IVMFLD=$S(IVMEPC'="":$$EPCSRCC(IVMFLD),1:$$ADDRCNV(IVMFLD))
"RTN","IVMPREC8",349,0)
 ..Q:IVMFLD=""
"RTN","IVMPREC8",350,0)
 ..D STORE^IVMPREC9
"RTN","IVMPREC8",351,0)
 .I IVMXREF["RF17" D  Q
"RTN","IVMPREC8",352,0)
 ..;get address/telecomm change date/tm field
"RTN","IVMPREC8",353,0)
 ..S IVMFLD=$$FMDATE^HLFNC($P(IVMSEG,HLFS,7))
"RTN","IVMPREC8",354,0)
 ..Q:IVMFLD=""
"RTN","IVMPREC8",355,0)
 ..D STORE^IVMPREC9
"RTN","IVMPREC8",356,0)
 ..;
"RTN","IVMPREC8",357,0)
 ..;I RF1TYPE="CAD",$P($G(ADDRESS("CA")),HLFS)]"" D  Q
"RTN","IVMPREC8",358,0)
 ..;.; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",359,0)
 ..;.S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",360,0)
 ..;.I IVMFLD]"",(IVMFLD>IVMDHCP) S UPDAUPG("CA")=1
"RTN","IVMPREC8",361,0)
 ..;
"RTN","IVMPREC8",362,0)
 ..; check for auto-upload
"RTN","IVMPREC8",363,0)
 ..S NOUPDT=0
"RTN","IVMPREC8",364,0)
 ..S IVMDHCP=$S(RF1TYPE="SAD":$P($G(^DPT(DFN,.11)),HLFS,13),RF1TYPE="CPH":$P($G(^DPT(DFN,.13)),HLFS,9),RF1TYPE="PNO":$P($G(^DPT(DFN,.13)),HLFS,12),RF1TYPE="EAD":$P($G(^DPT(DFN,.13)),HLFS,6),1:"")
"RTN","IVMPREC8",365,0)
 ..I IVMFLD]"",(IVMFLD>IVMDHCP) D
"RTN","IVMPREC8",366,0)
 ...S UPDEPC(RF1TYPE)=$G(EPCFARY(RF1TYPE))
"RTN","IVMPREC8",367,0)
 ...I RF1TYPE="SAD" S UPDEPC("SAD")=1
"RTN","IVMPREC8",368,0)
 Q
"RTN","IVMPREC8",369,0)
ADDRCNV(ADDRSRC) ;convert Address Source from HL7 to DHCP format
"RTN","IVMPREC8",370,0)
 ;
"RTN","IVMPREC8",371,0)
 Q:$G(ADDRSRC)']"" ""
"RTN","IVMPREC8",372,0)
 Q:ADDRSRC="USVAHEC" "HEC"
"RTN","IVMPREC8",373,0)
 Q:ADDRSRC="USVAMC" "VAMC"
"RTN","IVMPREC8",374,0)
 Q:ADDRSRC="USVAHBSC" "HBSC"
"RTN","IVMPREC8",375,0)
 Q:ADDRSRC="USNCOA" "NCOA"
"RTN","IVMPREC8",376,0)
 Q:ADDRSRC="USVABVA" "BVA"
"RTN","IVMPREC8",377,0)
 Q:ADDRSRC="USVAINS" "VAINS"
"RTN","IVMPREC8",378,0)
 Q:ADDRSRC="USPS" "USPS"
"RTN","IVMPREC8",379,0)
 Q:ADDRSRC="LACS" "LACS"
"RTN","IVMPREC8",380,0)
 Q:ADDRSRC="USVOA" "VOA"
"RTN","IVMPREC8",381,0)
 Q ""
"RTN","IVMPREC8",382,0)
EPCSRCC(EPCSRC) ;Convert Email, Cell, Pager Change Source from HL7 to DHCP
"RTN","IVMPREC8",383,0)
 ;
"RTN","IVMPREC8",384,0)
 Q:$G(EPCSRC)']"" ""
"RTN","IVMPREC8",385,0)
 Q:EPCSRC="USVAHEC" "HEC"
"RTN","IVMPREC8",386,0)
 Q:EPCSRC="USVAMC" "VAMC"
"RTN","IVMPREC8",387,0)
 Q:EPCSRC="USVAHBSC" "HBSC"
"RTN","IVMPREC8",388,0)
 Q ""
"RTN","IVMPREC8",389,0)
BAICONV(BAISRC) ;Convert Bad address source from HL7 to DHCP format
"RTN","IVMPREC8",390,0)
 Q:$G(BAISRC)']"" ""
"RTN","IVMPREC8",391,0)
 Q:BAISRC="VAB1" 1
"RTN","IVMPREC8",392,0)
 Q:BAISRC="VAB2" 2
"RTN","IVMPREC8",393,0)
 Q:BAISRC="VAB3" 3
"RTN","IVMPREC8",394,0)
 Q:BAISRC="VAB4" 4
"RTN","IVMPREC8",395,0)
 Q ""
"RTN","IVMPREC8",396,0)
CONVPH(PH) ;remove special chars/spaces from Phone number
"RTN","IVMPREC8",397,0)
 Q $TR(PH," )(/#\-","")
"RTN","IVMPREC8",398,0)
CNTRCONV(COUNTRY) ;Check if valid country
"RTN","IVMPREC8",399,0)
 I COUNTRY="" Q 0
"RTN","IVMPREC8",400,0)
 Q $O(^HL(779.004,"B",COUNTRY,""))
"RTN","IVMPREC8",401,0)
CHKEMAIL(EMAIL) ;Check for Valid Email
"RTN","IVMPREC8",402,0)
 I $G(EMAIL)="" Q 0
"RTN","IVMPREC8",403,0)
 I '(EMAIL?1.E1"@"1.E1"."1.E) Q 0
"RTN","IVMPREC8",404,0)
 Q 1
"VER")
8.0^22.0
"BLD",8573,6)
^124
**END**
**END**
