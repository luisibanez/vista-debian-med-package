Released XT*7.3*133 SEQ #108
Extracted from mail message
**KIDS**:XT*7.3*133^

**INSTALL NAME**
XT*7.3*133
"BLD",1438,0)
XT*7.3*133^TOOLKIT^0^3120918^y
"BLD",1438,1,0)
^^2^2^3120509^
"BLD",1438,1,1,0)
Please see the patch description on FORUM, in the National Patch Module.
"BLD",1438,1,2,0)

"BLD",1438,4,0)
^9.64PA^^
"BLD",1438,6.3)
15
"BLD",1438,"ABPKG")
n
"BLD",1438,"KRN",0)
^9.67PA^9002226^21
"BLD",1438,"KRN",.4,0)
.4
"BLD",1438,"KRN",.401,0)
.401
"BLD",1438,"KRN",.402,0)
.402
"BLD",1438,"KRN",.403,0)
.403
"BLD",1438,"KRN",.5,0)
.5
"BLD",1438,"KRN",.84,0)
.84
"BLD",1438,"KRN",3.6,0)
3.6
"BLD",1438,"KRN",3.8,0)
3.8
"BLD",1438,"KRN",9.2,0)
9.2
"BLD",1438,"KRN",9.8,0)
9.8
"BLD",1438,"KRN",9.8,"NM",0)
^9.68A^9^9
"BLD",1438,"KRN",9.8,"NM",1,0)
XINDX1^^0^B20704192
"BLD",1438,"KRN",9.8,"NM",2,0)
XINDX2^^0^B28042462
"BLD",1438,"KRN",9.8,"NM",3,0)
XINDX3^^0^B15082410
"BLD",1438,"KRN",9.8,"NM",4,0)
XINDX4^^0^B14273659
"BLD",1438,"KRN",9.8,"NM",5,0)
XINDX5^^0^B11294544
"BLD",1438,"KRN",9.8,"NM",6,0)
XINDX51^^0^B26771263
"BLD",1438,"KRN",9.8,"NM",7,0)
XINDX9^^0^B32506175
"BLD",1438,"KRN",9.8,"NM",8,0)
XT73P133^^0^B650871
"BLD",1438,"KRN",9.8,"NM",9,0)
XINDEX^^0^B30708729
"BLD",1438,"KRN",9.8,"NM","B","XINDEX",9)

"BLD",1438,"KRN",9.8,"NM","B","XINDX1",1)

"BLD",1438,"KRN",9.8,"NM","B","XINDX2",2)

"BLD",1438,"KRN",9.8,"NM","B","XINDX3",3)

"BLD",1438,"KRN",9.8,"NM","B","XINDX4",4)

"BLD",1438,"KRN",9.8,"NM","B","XINDX5",5)

"BLD",1438,"KRN",9.8,"NM","B","XINDX51",6)

"BLD",1438,"KRN",9.8,"NM","B","XINDX9",7)

"BLD",1438,"KRN",9.8,"NM","B","XT73P133",8)

"BLD",1438,"KRN",19,0)
19
"BLD",1438,"KRN",19.1,0)
19.1
"BLD",1438,"KRN",101,0)
101
"BLD",1438,"KRN",409.61,0)
409.61
"BLD",1438,"KRN",771,0)
771
"BLD",1438,"KRN",779.2,0)
779.2
"BLD",1438,"KRN",870,0)
870
"BLD",1438,"KRN",8989.51,0)
8989.51
"BLD",1438,"KRN",8989.52,0)
8989.52
"BLD",1438,"KRN",8994,0)
8994
"BLD",1438,"KRN",9002226,0)
9002226
"BLD",1438,"KRN","B",.4,.4)

"BLD",1438,"KRN","B",.401,.401)

"BLD",1438,"KRN","B",.402,.402)

"BLD",1438,"KRN","B",.403,.403)

"BLD",1438,"KRN","B",.5,.5)

"BLD",1438,"KRN","B",.84,.84)

"BLD",1438,"KRN","B",3.6,3.6)

"BLD",1438,"KRN","B",3.8,3.8)

"BLD",1438,"KRN","B",9.2,9.2)

"BLD",1438,"KRN","B",9.8,9.8)

"BLD",1438,"KRN","B",19,19)

"BLD",1438,"KRN","B",19.1,19.1)

"BLD",1438,"KRN","B",101,101)

"BLD",1438,"KRN","B",409.61,409.61)

"BLD",1438,"KRN","B",771,771)

"BLD",1438,"KRN","B",779.2,779.2)

"BLD",1438,"KRN","B",870,870)

"BLD",1438,"KRN","B",8989.51,8989.51)

"BLD",1438,"KRN","B",8989.52,8989.52)

"BLD",1438,"KRN","B",8994,8994)

"BLD",1438,"KRN","B",9002226,9002226)

"BLD",1438,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",1438,"QUES",0)
^9.62^^
"BLD",1438,"REQB",0)
^9.611^1^1
"BLD",1438,"REQB",1,0)
XT*7.3*132^2
"BLD",1438,"REQB","B","XT*7.3*132",1)

"MBREQ")
0
"PKG",6,-1)
1^1
"PKG",6,0)
TOOLKIT^XT^PROGRAMMERS OPTIONS, MULTI. TERM LOOKUP^
"PKG",6,20,0)
^9.402P^^0
"PKG",6,22,0)
^9.49I^1^1
"PKG",6,22,1,0)
7.3^3040428^2970513^2
"PKG",6,22,1,"PAH",1,0)
133^3120918
"PKG",6,22,1,"PAH",1,1,0)
^^2^2^3120918
"PKG",6,22,1,"PAH",1,1,1,0)
Please see the patch description on FORUM, in the National Patch Module.
"PKG",6,22,1,"PAH",1,1,2,0)

"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
9
"RTN","XINDEX")
0^9^B30708729^B30540711
"RTN","XINDEX",1,0)
XINDEX ;ISC/REL,GFT,GRK,RWF - INDEX & CROSS-REFERENCE ;08/04/08  13:19
"RTN","XINDEX",2,0)
 ;;7.3;TOOLKIT;**20,27,48,61,66,68,110,121,128,132,133**;Apr 25, 1995;Build 15
"RTN","XINDEX",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XINDEX",4,0)
 G ^XINDX6
"RTN","XINDEX",5,0)
SEP F I=1:1 S CH=$E(LIN,I) D QUOTE:CH=Q Q:" "[CH
"RTN","XINDEX",6,0)
 S ARG=$E(LIN,1,I-1) S:CH=" " I=I+1 S LIN=$E(LIN,I,999) Q
"RTN","XINDEX",7,0)
QUOTE F I=I+1:1 S CH=$E(LIN,I) Q:CH=""!(CH=Q)
"RTN","XINDEX",8,0)
 Q:CH]""  S ERR=6 G ^XINDX1
"RTN","XINDEX",9,0)
ALIVE ;enter here from taskman
"RTN","XINDEX",10,0)
 D SETUP^XINDX7 ;Get ready to process
"RTN","XINDEX",11,0)
A2 S RTN=$O(^UTILITY($J,RTN)) G ^XINDX5:RTN=""
"RTN","XINDEX",12,0)
 S INDLC=(RTN?1"|"1.4L.NP) D LOAD:'INDLC&'$D(^UTILITY($J,1,RTN,0))
"RTN","XINDEX",13,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S RTN="~",IND("QUIT")=1,ZTSTOP=1 G A2
"RTN","XINDEX",14,0)
 I 'INDDS,INDLC W !!?10,"Data Dictionaries",! S INDDS=1
"RTN","XINDEX",15,0)
 D BEG
"RTN","XINDEX",16,0)
 G A2
"RTN","XINDEX",17,0)
 ;
"RTN","XINDEX",18,0)
LOAD S X=RTN,XCNP=0,DIF="^UTILITY("_$J_",1,RTN,0," X ^%ZOSF("TEST") Q:'$T  X ^%ZOSF("LOAD") S ^UTILITY($J,1,RTN,0,0)=XCNP-1
"RTN","XINDEX",19,0)
 I $D(^UTILITY($J,1,RTN,0,0)) S ^UTILITY($J,1,RTN,"RSUM")="B"_$$SUMB^XPDRSUM($NA(^UTILITY($J,1,RTN,0)))
"RTN","XINDEX",20,0)
 Q
"RTN","XINDEX",21,0)
BEG ;
"RTN","XINDEX",22,0)
 S %=INDLC*5 W:$X+10+%>IOM ! W RTN,$J("",10+%-$L(RTN))
"RTN","XINDEX",23,0)
 S (IND("DO"),IND("SZT"),IND("SZC"),LABO)=0,LC=$G(^UTILITY($J,1,RTN,0,0))
"RTN","XINDEX",24,0)
 I LC="" W !,">>>Routine '",RTN,"' not found <<<",! Q
"RTN","XINDEX",25,0)
 S TXT="",LAB=$P(^UTILITY($J,1,RTN,0,1,0)," ") I RTN'=$P(LAB,"(") D E^XINDX1(17)
"RTN","XINDEX",26,0)
 I 'INDLC,LAB["(" D E^XINDX1(55) S LAB=$P(LAB,"(")
"RTN","XINDEX",27,0)
 ;if M routine(not compiled template or DD) and has more than 2 lines, check lines 1 & 2
"RTN","XINDEX",28,0)
 I 'INDLC,LC>2 D
"RTN","XINDEX",29,0)
 . N LABO S LABO=1
"RTN","XINDEX",30,0)
 . S LIN=$G(^UTILITY($J,1,RTN,0,1,0)),TXT=1
"RTN","XINDEX",31,0)
 . ;check 1st line (site/dev - ) patch 128
"RTN","XINDEX",32,0)
 . I $P(LIN,";",2,4)'?.E1"/".E.1"-".E D E^XINDX1(62)
"RTN","XINDEX",33,0)
 . S LIN=$G(^UTILITY($J,1,RTN,0,2,0)),TXT=2
"RTN","XINDEX",34,0)
 . ;check 2nd line (;;nn.nn[TV]nn;package;.anything)
"RTN","XINDEX",35,0)
 . I $P(LIN,";",3,99)'?1.2N1"."1.2N.1(1"T",1"V").2N1";"1A.APN1";".E D E^XINDX1(44) ;patch 132
"RTN","XINDEX",36,0)
 . I $L(INP(11)) X INP(11) ;Version number check
"RTN","XINDEX",37,0)
 . I $L(INP(12)) X INP(12) ;Patch number check
"RTN","XINDEX",38,0)
B5 F TXT=1:1:LC S LIN=^UTILITY($J,1,RTN,0,TXT,0),LN=$L(LIN),IND("SZT")=IND("SZT")+LN+2 D LN,ST ;Process Line
"RTN","XINDEX",39,0)
 S LAB="",LABO=0,TXT=0,^UTILITY($J,1,RTN,0)=IND("SZT")_"^"_LC_"^"_IND("SZC")
"RTN","XINDEX",40,0)
 I IND("SZT")>INP("MAX"),'INDLC S ERR=35,ERR(1)=IND("SZT") D ^XINDX1
"RTN","XINDEX",41,0)
 I IND("SZT")-IND("SZC")>INP("CMAX"),'INDLC S ERR=58,ERR(1)=IND("SZT")-IND("SZC") D ^XINDX1
"RTN","XINDEX",42,0)
 D POSTRTN
"RTN","XINDEX",43,0)
 Q
"RTN","XINDEX",44,0)
 ;Proccess one line, LN = Length, LIN = Line.
"RTN","XINDEX",45,0)
LN K V S (ARG,GRB,IND("COM"),IND("DOL"),IND("F"))="",X=$P(LIN," ")
"RTN","XINDEX",46,0)
 I '$L(X) S LABO=LABO+1 G CD
"RTN","XINDEX",47,0)
 S (IND("COM"),LAB)=$P(X,"("),ARG=$P($P(X,"(",2),")"),LABO=0,IND("PP")=X?1.8E1"(".E1")"
"RTN","XINDEX",48,0)
 D:$L(ARG) NE^XINDX3 ;Process formal parameters as New list.
"RTN","XINDEX",49,0)
 I 'INDLC,'$$VT^XINDX2(LAB) D E^XINDX1($S(LAB=$$CASE^XINDX52(LAB):37,1:55)) ;Check for bad labels
"RTN","XINDEX",50,0)
 I $D(^UTILITY($J,1,RTN,"T",LAB)) D E^XINDX1(15) G CD ;DUP label
"RTN","XINDEX",51,0)
 S ^UTILITY($J,1,RTN,"T",LAB)=""
"RTN","XINDEX",52,0)
CD I LN>245 D:'(LN=246&($E(RTN,1,3)="|dd")) E^XINDX1(19) ;patch 119
"RTN","XINDEX",53,0)
 D:LIN'?1.ANP E^XINDX1(18)
"RTN","XINDEX",54,0)
 S LIN=$P(LIN," ",2,999),IND("LCC")=1
"RTN","XINDEX",55,0)
 I LIN="" D E^XINDX1(42) Q  ;Blank line ;p110
"RTN","XINDEX",56,0)
 S I=0 ;Watch the scope of I, counts dots
"RTN","XINDEX",57,0)
 I " ."[$E(LIN) D  S X=$L($E(LIN,1,I),".")-1,LIN=$E(LIN,I,999)
"RTN","XINDEX",58,0)
 . F I=1:1:245 Q:". "'[$E(LIN,I)
"RTN","XINDEX",59,0)
 . Q
"RTN","XINDEX",60,0)
 ;check dots against Do level IND("DO"), IND("DOL")=dot level
"RTN","XINDEX",61,0)
 D:'I&$G(IND("DO1")) E^XINDX1(51) S IND("DO1")=0 S:'I IND("DO")=0
"RTN","XINDEX",62,0)
 I I D:X>IND("DO") E^XINDX1(51) S (IND("DO"),IND("DOL"))=X
"RTN","XINDEX",63,0)
 ;Count Comment lines, skip ;; lines
"RTN","XINDEX",64,0)
 I $E(LIN)=";",$E(LIN,2)'=";" S IND("SZC")=IND("SZC")+$L(LIN) ;p110
"RTN","XINDEX",65,0)
 ;Process commands on line.
"RTN","XINDEX",66,0)
EE I LIN="" D ^XINDX2 Q
"RTN","XINDEX",67,0)
 S COM=$E(LIN),GK="",ARG=""
"RTN","XINDEX",68,0)
 I COM=";" S LIN="" G EE ;p110
"RTN","XINDEX",69,0)
 I COM=" " S ERR=$S(LIN?1." ":13,1:0),LIN=$S(ERR:"",1:$E(LIN,2,999)) D:ERR ^XINDX1 G EE
"RTN","XINDEX",70,0)
 D SEP
"RTN","XINDEX",71,0)
 S CM=$P(ARG,":",1),POST=$P(ARG,":",2,999),IND("COM")=IND("COM")_$C(9)_COM,ERR=48
"RTN","XINDEX",72,0)
 D:ARG[":"&(POST']"") ^XINDX1 S:POST]"" GRB=GRB_$C(9)_POST,IND("COM")=IND("COM")_":"
"RTN","XINDEX",73,0)
 ;SAC now allows lowercase commands
"RTN","XINDEX",74,0)
 I CM?.E1L.E S CM=$$CASE^XINDX52(CM),COM=$E(CM) ;I IND("LCC") S IND("LCC")=0 D E^XINDX1(47)
"RTN","XINDEX",75,0)
 I CM="" D E^XINDX1(21) G EE ;Missing command
"RTN","XINDEX",76,0)
 S CX=$G(IND("CMD",CM)) I CX="" D  G:CX="" EE
"RTN","XINDEX",77,0)
 . I $E(CM)="Z" S CX="^Z" Q  ;Proccess Z commands
"RTN","XINDEX",78,0)
 . D E^XINDX1(1) S LIN="" Q
"RTN","XINDEX",79,0)
 S CX=$P(CX,"^",2,9)
"RTN","XINDEX",80,0)
 D SEP I '$L(LIN),CH=" " D E^XINDX1(13) ;trailing space
"RTN","XINDEX",81,0)
 I ARG="","CGJMORSUWX"[COM S ERR=49 G ^XINDX1
"RTN","XINDEX",82,0)
 I CX>0 D E^XINDX1(CX) S CX=""
"RTN","XINDEX",83,0)
 D:$L(CX) @CX S:ARG'="" GRB=GRB_$C(9)_ARG G EE
"RTN","XINDEX",84,0)
B S ERR=25 G ^XINDX1
"RTN","XINDEX",85,0)
C S ERR=29 G ^XINDX1
"RTN","XINDEX",86,0)
D G DG1^XINDX4
"RTN","XINDEX",87,0)
E Q:ARG=""  S ERR=7 G ^XINDX1
"RTN","XINDEX",88,0)
F G:ARG]"" FR^XINDX4 S IND("F")=1 Q
"RTN","XINDEX",89,0)
G G DG^XINDX4
"RTN","XINDEX",90,0)
H Q:ARG'=""  S ERR=32 G ^XINDX1
"RTN","XINDEX",91,0)
J S ERR=36,ARG="" G ^XINDX1
"RTN","XINDEX",92,0)
K S ERR=$S(ARG?1"(".E:22,ARG?." ":23,1:0) D:ERR ^XINDX1
"RTN","XINDEX",93,0)
 G KL^XINDX3
"RTN","XINDEX",94,0)
L G LO^XINDX4
"RTN","XINDEX",95,0)
M G S^XINDX3
"RTN","XINDEX",96,0)
N G NE^XINDX3
"RTN","XINDEX",97,0)
O S ERR=34 D ^XINDX1,O^XINDX3 Q
"RTN","XINDEX",98,0)
Q Q:ARG=""  G Q^XINDX4
"RTN","XINDEX",99,0)
R S RDTIME=0 G RD^XINDX3
"RTN","XINDEX",100,0)
S G S^XINDX3
"RTN","XINDEX",101,0)
TR Q  ;What to process. p110
"RTN","XINDEX",102,0)
U S ARG=$S("$"'=$E(ARG):$P(ARG,":"),1:ARG) Q
"RTN","XINDEX",103,0)
V S ARG="",ERR=20 G ^XINDX1
"RTN","XINDEX",104,0)
W G WR^XINDX4
"RTN","XINDEX",105,0)
X G XE^XINDX4
"RTN","XINDEX",106,0)
Z S ERR=2 D ^XINDX1 G ZC^XINDX4
"RTN","XINDEX",107,0)
 ;
"RTN","XINDEX",108,0)
 ;Save off items from line.
"RTN","XINDEX",109,0)
ST S R=LAB_$S(LABO:"+"_LABO,1:"")
"RTN","XINDEX",110,0)
 ;Local variable, Global, Marked Items, Naked global, Internal ref, eXternal ref., Tag ref.
"RTN","XINDEX",111,0)
 S LOC="" F  S LOC=$O(V(LOC)),S="" Q:LOC=""  F  S S=$O(V(LOC,S)) Q:S=""  D SET
"RTN","XINDEX",112,0)
 S ^UTILITY($J,1,RTN,"COM",TXT)=IND("COM")
"RTN","XINDEX",113,0)
 Q
"RTN","XINDEX",114,0)
 ;
"RTN","XINDEX",115,0)
SET I V(LOC,S)]"" F %="!","~" I V(LOC,S)[%,$G(^UTILITY($J,1,RTN,LOC,S))'[% S ^(S)=$G(^(S))_%
"RTN","XINDEX",116,0)
 S %=0
"RTN","XINDEX",117,0)
SE2 S ARG=$G(^UTILITY($J,1,RTN,LOC,S,%)) I $L(ARG)>230 S %=%+1 G SE2
"RTN","XINDEX",118,0)
 S ^UTILITY($J,1,RTN,LOC,S,%)=ARG_R_V(LOC,S)_","
"RTN","XINDEX",119,0)
 Q
"RTN","XINDEX",120,0)
 ;
"RTN","XINDEX",121,0)
POSTRTN ;Do more overall checking
"RTN","XINDEX",122,0)
 N V,E,T,T1,T2
"RTN","XINDEX",123,0)
 S T="" ;Check for missing Labels
"RTN","XINDEX",124,0)
 F  S T=$O(^UTILITY($J,1,RTN,"I",T)),T2=T Q:T=""  S T1=$G(^(T,0)) D
"RTN","XINDEX",125,0)
 . Q:$E(T2,1,2)="@("
"RTN","XINDEX",126,0)
 . S:$E(T2,1,2)="$$" T2=$E(T2,3,99)
"RTN","XINDEX",127,0)
 . I T2]"",'$D(^UTILITY($J,1,RTN,"T",$P(T2,"+",1))) D
"RTN","XINDEX",128,0)
 . . F I=1:1:$L(T1,",")-1 S LAB=$P(T1,",",I),LABO=+$P(LAB,"+",2),LAB=$P(LAB,"+"),E=14,E(1)=T D E^XINDX1(.E)
"RTN","XINDEX",129,0)
 . . Q
"RTN","XINDEX",130,0)
 . Q
"RTN","XINDEX",131,0)
 S LAB="",LABO=0 ;Check for valid label names
"RTN","XINDEX",132,0)
 I 'INDLC F  S LAB=$O(^UTILITY($J,1,RTN,"T",LAB)) Q:LAB=""  D
"RTN","XINDEX",133,0)
 . I '$$VA^XINDX2(LAB) D E^XINDX1(55) Q
"RTN","XINDEX",134,0)
 . D:'$$VT^XINDX2(LAB) E^XINDX1(37)
"RTN","XINDEX",135,0)
 . Q
"RTN","XINDEX",136,0)
 S LAB="",LABO=0 ;Check for valid variable names.
"RTN","XINDEX",137,0)
 F  S LAB=$O(^UTILITY($J,1,RTN,"L",LAB)) Q:LAB=""  D
"RTN","XINDEX",138,0)
 . D VLNF^XINDX3($P(LAB,"("))
"RTN","XINDEX",139,0)
 . Q
"RTN","XINDEX",140,0)
 Q
"RTN","XINDEX",141,0)
 ;
"RTN","XINDEX",142,0)
QUICK ;Quick, Just get a routine an print the results
"RTN","XINDEX",143,0)
 D QUICK^XINDX6()
"RTN","XINDEX",144,0)
 Q
"RTN","XINDX1")
0^1^B20704192^B18451520
"RTN","XINDX1",1,0)
XINDX1 ;ISC/REL,GRK,RWF - ERROR ROUTINE ;08/05/08  13:59
"RTN","XINDX1",2,0)
 ;;7.3;TOOLKIT;**20,61,66,68,110,121,128,133**;Apr 25, 1995;Build 15
"RTN","XINDX1",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XINDX1",4,0)
 G A
"RTN","XINDX1",5,0)
E(ERR) ;
"RTN","XINDX1",6,0)
A N %,%1 ;TXT is the line of the error.
"RTN","XINDX1",7,0)
 S ERTX=LAB_$S(LABO:"+"_LABO,1:"")_$C(9),%1=$T(ERROR+ERR),ERTX=ERTX_$S(ERR:$P(%1,";",4,9),1:ERR) ;p110
"RTN","XINDX1",8,0)
 I ERTX["|" F %=1:1 S ERTX=$P(ERTX,"|")_$S($D(ERR(%)):ERR(%),1:"??")_$P(ERTX,"|",%+1,99) Q:ERTX'["|"
"RTN","XINDX1",9,0)
 ;check exclude rtn list
"RTN","XINDX1",10,0)
B I $P(%1,";",3)]"" D  Q:%1]""  ;Don't flag kernel doing kernel.
"RTN","XINDX1",11,0)
 . S %1=$P(%1,";",3)
"RTN","XINDX1",12,0)
 . F  Q:RTN[$P(%1,",")  S %1=$P(%1,",",2,99) ;quit if RTN[%1 or null.
"RTN","XINDX1",13,0)
 . Q
"RTN","XINDX1",14,0)
 I ERR=17,$E(RTN)'="%",$E(LAB)="%" Q  ;Don't flag %RTN w/o %.
"RTN","XINDX1",15,0)
 ;Global is Error Line,tab,error tag,tab,error text
"RTN","XINDX1",16,0)
 S %=$G(^UTILITY($J,1,RTN,"E",0))+1,^(0)=%,^(%)=TXT_$C(9)_ERTX
"RTN","XINDX1",17,0)
 Q
"RTN","XINDX1",18,0)
 ;
"RTN","XINDX1",19,0)
 ;F = Fatal, S = Standard, W = Warning, I = Info
"RTN","XINDX1",20,0)
 ;;exclude rtn;error text
"RTN","XINDX1",21,0)
ERROR ;
"RTN","XINDX1",22,0)
1 ;;;F - UNDEFINED COMMAND (rest of line not checked).
"RTN","XINDX1",23,0)
2 ;;X,Z,DI,DD,KMP;F - Non-standard (Undefined) 'Z' command.
"RTN","XINDX1",24,0)
3 ;;X,Z,DI,DD,KMP;F - Undefined Function.
"RTN","XINDX1",25,0)
4 ;;;F - Undefined Special Variable.
"RTN","XINDX1",26,0)
5 ;;;F - Unmatched Parenthesis.
"RTN","XINDX1",27,0)
6 ;;;F - Unmatched Quotation Marks.
"RTN","XINDX1",28,0)
7 ;;;F - ELSE Command followed by only one space.
"RTN","XINDX1",29,0)
8 ;;;F - FOR Command did not contain '='.
"RTN","XINDX1",30,0)
9 ;;;I - QUIT Command followed by only one space.
"RTN","XINDX1",31,0)
10 ;;;F - Unrecognized argument in SET command.
"RTN","XINDX1",32,0)
11 ;;;W - Invalid local variable name.
"RTN","XINDX1",33,0)
12 ;;;W - Invalid global variable name.
"RTN","XINDX1",34,0)
13 ;;;W - Blank(s) at end of line.
"RTN","XINDX1",35,0)
14 ;;;F - Call to missing label '|' in this routine.
"RTN","XINDX1",36,0)
15 ;;;W - Duplicate label. (M57)
"RTN","XINDX1",37,0)
16 ;;;F - Error in pattern code.
"RTN","XINDX1",38,0)
17 ;;Z;W - First line label NOT routine name.
"RTN","XINDX1",39,0)
18 ;;;W - Line contains a CONTROL (non-graphic) character.
"RTN","XINDX1",40,0)
19 ;;;S - Line is longer than 245 bytes.
"RTN","XINDX1",41,0)
20 ;;X,Z,DI,DD,KMP;S - View command used.
"RTN","XINDX1",42,0)
21 ;;;F - General Syntax Error.
"RTN","XINDX1",43,0)
22 ;;X,Z,DI,DD,KMP;S - Exclusive Kill.
"RTN","XINDX1",44,0)
23 ;;X,Z,DI,DD,KMP;S - Unargumented Kill.
"RTN","XINDX1",45,0)
24 ;;;S - Kill of an unsubscripted global.
"RTN","XINDX1",46,0)
25 ;;;S - Break command used.
"RTN","XINDX1",47,0)
26 ;;X,Z,DI,DD,KMP;S - Exclusive or Unargumented NEW command.
"RTN","XINDX1",48,0)
27 ;;X,Z,DI,DD,KMP;S - $View function used.
"RTN","XINDX1",49,0)
28 ;;X,Z,DI,DD,KMP;S - Non-standard $Z special variable used.
"RTN","XINDX1",50,0)
29 ;;X,Z,DI,DD,KMP;S - 'Close' command should be invoked through 'D ^%ZISC'.
"RTN","XINDX1",51,0)
30 ;;;S - LABEL+OFFSET syntax.
"RTN","XINDX1",52,0)
31 ;;X,Z,DI,DD,KMP;S - Non-standard $Z function used.
"RTN","XINDX1",53,0)
32 ;;X,Z,DI,DD,KMP;S - 'HALT' command should be invoked through 'G ^XUSCLEAN'.
"RTN","XINDX1",54,0)
33 ;;X,Z,DI,DD,KMP;S - Read command doesn't have a timeout.
"RTN","XINDX1",55,0)
34 ;;X,Z,DI,DD,KMP;S - 'OPEN' command should be invoked through ^%ZIS.
"RTN","XINDX1",56,0)
35 ;;;S - Routine exceeds SACC maximum size of 20000 (|).
"RTN","XINDX1",57,0)
36 ;;X,Z,DI,DD,KMP;S - Should use 'TASKMAN' instead of 'JOB' command.
"RTN","XINDX1",58,0)
37 ;;;F - Label is not valid.
"RTN","XINDX1",59,0)
38 ;;;F - Call to this |
"RTN","XINDX1",60,0)
39 ;;X,Z,DI;S - Kill of a protected variable (|).
"RTN","XINDX1",61,0)
40 ;;;S - Space where a command should be.
"RTN","XINDX1",62,0)
41 ;;X,Z,DI,DD,KMP;I - Star or pound READ used.
"RTN","XINDX1",63,0)
42 ;;;W - Null line (no commands or comment).
"RTN","XINDX1",64,0)
43 ;;;F - Invalid or wrong number of arguments to a function.
"RTN","XINDX1",65,0)
44 ;;;S - 2nd line of routine violates the SAC.
"RTN","XINDX1",66,0)
45 ;;X,Z,DI,DD,KMP;S - Set to a '%' global.
"RTN","XINDX1",67,0)
46 ;;;F - Quoted string not followed by a separator.
"RTN","XINDX1",68,0)
47 ;;;S - Lowercase command(s) used in line.
"RTN","XINDX1",69,0)
48 ;;;F - Missing argument to a command post-conditional.
"RTN","XINDX1",70,0)
49 ;;;F - Command missing an argument.
"RTN","XINDX1",71,0)
50 ;;Z;S - Extended reference.
"RTN","XINDX1",72,0)
51 ;;;F - Block structure mismatch.
"RTN","XINDX1",73,0)
52 ;;;F - Reference to routine '^|'. That isn't in this UCI.
"RTN","XINDX1",74,0)
53 ;;;F - Bad Number.
"RTN","XINDX1",75,0)
54 ;;X,Z,DI,DD,KMP;S - Access to SSVN's or $SYSTEM restricted to Kernel.
"RTN","XINDX1",76,0)
55 ;;;S - Violates VA programming standards.
"RTN","XINDX1",77,0)
56 ;;;S - Patch number '|' missing from second line.
"RTN","XINDX1",78,0)
57 ;;;S - Lower/Mixed case Variable name used.
"RTN","XINDX1",79,0)
58 ;;;S - Routine code exceeds SACC maximum size of 15000 (|).
"RTN","XINDX1",80,0)
59 ;;;F - Bad WRITE syntax.
"RTN","XINDX1",81,0)
60 ;;X,Z,DI,DD,KMP;S - Lock missing Timeout.
"RTN","XINDX1",82,0)
61 ;;X,Z,DI,DD,KMP;S - Non-Incremental Lock.
"RTN","XINDX1",83,0)
62 ;;;S - First line of routine violates the SAC.
"RTN","XINDX1",84,0)
63 ;;;F - GO or DO mismatch from block structure (M45).
"RTN","XINDX1",85,0)
64 ;;;F - Cache Object doesn't exist.
"RTN","XINDX2")
0^2^B28042462^B18776883
"RTN","XINDX2",1,0)
XINDX2 ;ISC/REL,GRK,RWF - PROCESS "GRB" ;4/2/08  16:35
"RTN","XINDX2",2,0)
 ;;7.3;TOOLKIT;**20,27,48,110,121,133**;Apr 25, 1995;Build 15
"RTN","XINDX2",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XINDX2",4,0)
% S LINE=GRB,(CM,COM)="" F I=0:0 S STR=$P(LINE,$C(9),1),LINE=$P(LINE,$C(9),2,999),NOA=0 D:STR]"" ARGG Q:LINE']""
"RTN","XINDX2",5,0)
 Q
"RTN","XINDX2",6,0)
 ;Process argument
"RTN","XINDX2",7,0)
ARGG D ^XINDX9 S I=0,AC=999 F %=0:0 S %=$O(LV(%)) Q:%'>0  S I(%)=0
"RTN","XINDX2",8,0)
ARGS ;Proccess all agruments at this level
"RTN","XINDX2",9,0)
 S AC=LI+AC F  Q:AC'>LI  D INC Q:S=""  D ARG
"RTN","XINDX2",10,0)
 Q
"RTN","XINDX2",11,0)
 ;
"RTN","XINDX2",12,0)
ARG ;Process one argument
"RTN","XINDX2",13,0)
 I CH="," D PEEK I ","[Y Q:$$OBJF()  D E^XINDX1(21):($$FNC()'="$$") Q  ;if ",," must be function of object method
"RTN","XINDX2",14,0)
 Q:CH=Q
"RTN","XINDX2",15,0)
 ;Cache Objects;  Package.Class.method or ##class(package.class).method
"RTN","XINDX2",16,0)
 I $D(LV(LV,"OBJ",LI)) G OBJ2:CH=".",OBJ1
"RTN","XINDX2",17,0)
 I CH="#",$E(S,1,2)="##" D OBJ Q
"RTN","XINDX2",18,0)
 I S'[".",(CH?1A)!(CH="%") D LOC Q
"RTN","XINDX2",19,0)
 I CH="^" S LOC="G" G NAK:S="^",EXTGLO:S["[",EXTGLO:S["|",GLO Q
"RTN","XINDX2",20,0)
 I CH="$" D FUN Q
"RTN","XINDX2",21,0)
 I CH="?" D PAT Q
"RTN","XINDX2",22,0)
 I CH="(" D INC S NOA=S D DN,INC Q
"RTN","XINDX2",23,0)
 Q
"RTN","XINDX2",24,0)
 ;
"RTN","XINDX2",25,0)
NAK S LOC="N"
"RTN","XINDX2",26,0)
 G GLO
"RTN","XINDX2",27,0)
 ;
"RTN","XINDX2",28,0)
EXTGLO D E^XINDX1(50),EG,INC S S=U_S
"RTN","XINDX2",29,0)
 G GLO
"RTN","XINDX2",30,0)
 ;
"RTN","XINDX2",31,0)
EG N GK,LOC S GK="",LOC="L" ;HANDLE EXTENDED GLOBAL
"RTN","XINDX2",32,0)
 F  D INC Q:"]"[CH  Q:"|"[CH  D ARG
"RTN","XINDX2",33,0)
 Q
"RTN","XINDX2",34,0)
GLO S X=$E(S,2,99) I X]"",S'["^$",X'?1(1U,1"%").7UN D E^XINDX1(12)
"RTN","XINDX2",35,0)
 I GK["*",$E(S,1,2)["^%" D E^XINDX1(45)
"RTN","XINDX2",36,0)
 I S1="(" S S=S_S1 D PEEKDN S:(Y?1N.NP)!($A(Y)=34)!("^$J^$I^$H^"[(U_Y)) S=S_Y
"RTN","XINDX2",37,0)
 D ST(LOC,S) I S1="(" D INC2 S NOA=S D DN,INC
"RTN","XINDX2",38,0)
 Q
"RTN","XINDX2",39,0)
 ;
"RTN","XINDX2",40,0)
LOC S LOC="L" ;Check variables at end. I S'?1.8UN,S'?1"%".7UN,S'?1.8LN,S'?1"%".7LN D E^XINDX1(11)
"RTN","XINDX2",41,0)
 I S1="(" S S=S_S1 D PEEKDN S:(Y?1.N)!($A(Y)=34) S=S_Y
"RTN","XINDX2",42,0)
 D ST(LOC,S) I S1="(" D INC2 S NOA=S D DN,INC
"RTN","XINDX2",43,0)
 Q
"RTN","XINDX2",44,0)
OBJ ;Cache Objects within ##class
"RTN","XINDX2",45,0)
 S LOC="O"
"RTN","XINDX2",46,0)
 I S1'="("  D E^XINDX1(3)
"RTN","XINDX2",47,0)
 D PEEKDN S S=Y I S[".",'$$OBJTST(S) D E^XINDX1(64)
"RTN","XINDX2",48,0)
 D ST(LOC,S),INC2 S NOA=S D DN,INC
"RTN","XINDX2",49,0)
 Q
"RTN","XINDX2",50,0)
OBJ1 ;Cache Objects not within ##class, contains "."
"RTN","XINDX2",51,0)
 S LOC="O"
"RTN","XINDX2",52,0)
 D ST(LOC,S)
"RTN","XINDX2",53,0)
 Q
"RTN","XINDX2",54,0)
OBJ2 ;Method
"RTN","XINDX2",55,0)
 D PEEKDN
"RTN","XINDX2",56,0)
 I 'Y D INC2 S NOA=S D DN,INC
"RTN","XINDX2",57,0)
 Q
"RTN","XINDX2",58,0)
 ;
"RTN","XINDX2",59,0)
OBJF() ; return line where object has an open "(" for parameters
"RTN","XINDX2",60,0)
 N %
"RTN","XINDX2",61,0)
 Q:LV<2 0  ;must be down at least 1 level
"RTN","XINDX2",62,0)
 S %=$O(LV(LV-1,"OBJ",""),-1) ;find last object at previous level
"RTN","XINDX2",63,0)
 Q $S('%:0,LV(LV-1,%+1)="(":%,1:0) ; returns 0 if can't find object or object has no parameter
"RTN","XINDX2",64,0)
 ;
"RTN","XINDX2",65,0)
PEEK S Y=$G(LV(LV,LI+1))
"RTN","XINDX2",66,0)
 Q
"RTN","XINDX2",67,0)
 ;
"RTN","XINDX2",68,0)
INC2 S LI=LI+1 ;Drop into INC
"RTN","XINDX2",69,0)
INC S LI=LI+1,S=$G(LV(LV,LI)),S1=$G(LV(LV,LI+1)),CH=$E(S) G:$A(S)=10 ERR
"RTN","XINDX2",70,0)
 Q
"RTN","XINDX2",71,0)
 ;
"RTN","XINDX2",72,0)
DN S LI(LV)=LI,LI(LV,1)=AC,LV=LV+1,LI=LI(LV),AC=NOA
"RTN","XINDX2",73,0)
 D ARGS,UP
"RTN","XINDX2",74,0)
 Q
"RTN","XINDX2",75,0)
UP ;Inc LI as we save to skip the $C(10).
"RTN","XINDX2",76,0)
 D PEEK D:$A(Y)'=10 ERR S LI(LV)=LI+1,LV=LV-1,LI=LI(LV),AC=LI(LV,1)
"RTN","XINDX2",77,0)
 Q
"RTN","XINDX2",78,0)
 ;
"RTN","XINDX2",79,0)
PEEKDN S Y=$G(LV(LV+1,LI(LV+1)+1))
"RTN","XINDX2",80,0)
 Q
"RTN","XINDX2",81,0)
 ;
"RTN","XINDX2",82,0)
ERR D E^XINDX1(43) S (S,S1,CH)="" Q
"RTN","XINDX2",83,0)
 S Z=$P(LV(LV+1),$C(9),LI(LV+1),99),Z=$P(Z,$C(10)) W !,"COUNT=",$L(Z,",")
"RTN","XINDX2",84,0)
 ;functions
"RTN","XINDX2",85,0)
FUN N FUN S FUN=S G EXT:S["$$",PKG:S["$&",SPV:S1'["(" S NOA=$P(S,"^",2)
"RTN","XINDX2",86,0)
 D INC2 I S'>0 D E^XINDX1(43) ;Sit on NOA
"RTN","XINDX2",87,0)
 G:FUN["$TE" TEXT
"RTN","XINDX2",88,0)
 S Y=1 F Z1=LI(LV+1)+1:1 S X=$G(LV(LV+1,Z1)) Q:$A(X)=10!(X="")  S:X="," Y=Y+1
"RTN","XINDX2",89,0)
 I NOA,Y<NOA!(Y>$P(NOA,";",2)) D E^XINDX1(43)
"RTN","XINDX2",90,0)
 S NOA=S D DN,INC
"RTN","XINDX2",91,0)
 Q
"RTN","XINDX2",92,0)
 ;
"RTN","XINDX2",93,0)
TEXT ; process $T
"RTN","XINDX2",94,0)
 N X1,X2
"RTN","XINDX2",95,0)
 S Y=$$ASM^XINDX3(LV+1,LI(LV+1)+1,$C(10)) D ST("MK","$T("_$S($E(Y)'="+":Y,1:""))
"RTN","XINDX2",96,0)
 I $$VT(Y) D ST("I",Y) ;internal label
"RTN","XINDX2",97,0)
 ;check if external routine
"RTN","XINDX2",98,0)
 I Y["^",$$VT($P(Y,"^",2)) S X1=$P(Y,"^"),X2=$P(Y,"^",2),Y=X1 D ST("X",X2_$S($$VT(X1):" "_X1,1:""))
"RTN","XINDX2",99,0)
 D FLUSH(LV+1)
"RTN","XINDX2",100,0)
 Q
"RTN","XINDX2",101,0)
 ;special variables
"RTN","XINDX2",102,0)
SPV ;
"RTN","XINDX2",103,0)
 I "^$D^$EC^$ES^$ET^$I^$K^$P^$Q^$ST^$SY^"[("^"_X_"^") D ST("MK",X)
"RTN","XINDX2",104,0)
 Q
"RTN","XINDX2",105,0)
 ;
"RTN","XINDX2",106,0)
EXT ;Extrinsic functions
"RTN","XINDX2",107,0)
 I $E(S1)="^" S Y=$E(S1,2,99)_" "_S D INC S S=Y ;Build S and fall thru
"RTN","XINDX2",108,0)
 D ST($S(S[" ":"X",1:"I"),S) ;Internal, eXternal
"RTN","XINDX2",109,0)
 I S1["(" D INC2 S NOA=S D DN,INC ;Process param.
"RTN","XINDX2",110,0)
 Q
"RTN","XINDX2",111,0)
 ;
"RTN","XINDX2",112,0)
PKG ;External Package
"RTN","XINDX2",113,0)
 D ST("X",S) ;Record External name
"RTN","XINDX2",114,0)
 I S1["(" D INC2 S NOA=S D DN,INC ;Process param.
"RTN","XINDX2",115,0)
 Q
"RTN","XINDX2",116,0)
 ;
"RTN","XINDX2",117,0)
PAT D INC I $E(S)="@" D INC,ARG Q
"RTN","XINDX2",118,0)
 F  D REPCNT,PATCODE Q:$E(S)=""
"RTN","XINDX2",119,0)
 Q
"RTN","XINDX2",120,0)
 ;
"RTN","XINDX2",121,0)
REPCNT F I=1:1 Q:("0123456789."'[$E(S,I))!($E(S,I)="")
"RTN","XINDX2",122,0)
 S X=$E(S,1,I-1),S=$E(S,I,999) I ('$L(X))!($L(X,".")>2) S S="" D E^XINDX1(16)
"RTN","XINDX2",123,0)
 Q
"RTN","XINDX2",124,0)
 ;
"RTN","XINDX2",125,0)
PATCODE I $E(S)=Q S I=1 D PATQ S S=$E(S,I,999) S:$L(CH)&(",)"[CH) S=$E(S,2,999) Q
"RTN","XINDX2",126,0)
 F I=1:1 Q:("ACELNPUacelnpu()"'[$E(S,I))!($E(S,I)="")
"RTN","XINDX2",127,0)
 S X=$E(S,1,I-1),S=$E(S,I,999) I I=1 S S="" D E^XINDX1(16)
"RTN","XINDX2",128,0)
 I $E(S)="," S S=$E(S,2,999) ;Pull ',' out of alternation
"RTN","XINDX2",129,0)
 Q
"RTN","XINDX2",130,0)
 ;
"RTN","XINDX2",131,0)
PATQ F I=I+1:1 S CH=$E(S,I) Q:CH=""!(CH=Q)
"RTN","XINDX2",132,0)
 S I=I+1 D:CH="" E^XINDX1(6) S CH=$E(S,I) G:CH=Q PATQ
"RTN","XINDX2",133,0)
 Q
"RTN","XINDX2",134,0)
 ;
"RTN","XINDX2",135,0)
ST(LOC,S) S:'$D(V(LOC,S)) V(LOC,S)="" I $D(GK),GK]"",V(LOC,S)'[GK S V(LOC,S)=V(LOC,S)_GK
"RTN","XINDX2",136,0)
 S GK=""
"RTN","XINDX2",137,0)
 Q
"RTN","XINDX2",138,0)
 ;
"RTN","XINDX2",139,0)
VT(X) ;Check if a valid label
"RTN","XINDX2",140,0)
 Q (X?1A.31AN)!(X?1"%".31UN)!(X?1.31N)
"RTN","XINDX2",141,0)
 ;
"RTN","XINDX2",142,0)
VA(X) ;Check if VA Standard label
"RTN","XINDX2",143,0)
 Q (X?1U.7UN)!(X?1"%".7UN)!(X?1.8N)
"RTN","XINDX2",144,0)
 ;
"RTN","XINDX2",145,0)
FLUSH(L) ;Flush rest of list with this offset
"RTN","XINDX2",146,0)
 N I,CH S I=LI(L)+1 F I=I:1 S CH=$G(LV(L,I)) Q:$C(10)[CH  D:CH="(" FLUSH(L+1)
"RTN","XINDX2",147,0)
 S LI(L)=I Q
"RTN","XINDX2",148,0)
 ;
"RTN","XINDX2",149,0)
FNC(NEW) ;Sets or returns the current function
"RTN","XINDX2",150,0)
 I $D(NEW) S LV(LV+1,"FNC",LI)=NEW Q
"RTN","XINDX2",151,0)
 N W
"RTN","XINDX2",152,0)
 S W=+$S($D(LV(LV,"FNC",LI)):LI,$O(LV(LV,"FNC",LI),-1):$O(LV(LV,"FNC",LI),-1),1:$O(LV(LV,"FNC",LI))) ;patch 119,121
"RTN","XINDX2",153,0)
 Q $G(LV(LV,"FNC",W))
"RTN","XINDX2",154,0)
 ;
"RTN","XINDX2",155,0)
OP(NEW) ;Sets or returns the current operator
"RTN","XINDX2",156,0)
 I $D(NEW) S LV(LV,"OP",LI)=NEW Q
"RTN","XINDX2",157,0)
 N W S W=+$S($D(LV(LV,"OP",LI)):LI,1:$O(LV(LV,"OP",LI),-1))
"RTN","XINDX2",158,0)
 Q $G(LV(LV,"OP",W))
"RTN","XINDX2",159,0)
 ;
"RTN","XINDX2",160,0)
OBJTST(OBJ) ;test if OBJ exists, returns 1 if exists
"RTN","XINDX2",161,0)
 Q:$G(OBJ)="" 0
"RTN","XINDX2",162,0)
 Q ##class(%Dictionary.ClassDefinition).%ExistsId(""_OBJ_"")
"RTN","XINDX2",163,0)
 ;
"RTN","XINDX3")
0^3^B15082410^B14051168
"RTN","XINDX3",1,0)
XINDX3 ;ISC/REL,GRK,RWF - PROCESS MERGE/SET/READ/KILL/NEW/OPEN COMMANDS ;06/24/08  15:44
"RTN","XINDX3",2,0)
 ;;7.3;TOOLKIT;**20,27,61,68,110,121,128,132,133**;Apr 25, 1995;Build 15
"RTN","XINDX3",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XINDX3",4,0)
PEEK S Y=$G(LV(LV,LI+1)) Q
"RTN","XINDX3",5,0)
PEEK2 S Y=$G(LV(LV,LI+2)) Q
"RTN","XINDX3",6,0)
INC2 S LI=LI+1 ;Drop into INC
"RTN","XINDX3",7,0)
INC S LI=LI+1,S=$G(LV(LV,LI)),S1=$G(LV(LV,LI+1)),CH=$E(S)
"RTN","XINDX3",8,0)
 G ERR:$A(S)=10 Q
"RTN","XINDX3",9,0)
DN S LI(LV)=LI,LI(LV,1)=AC,LV=LV+1,LI=LI(LV),AC=NOA
"RTN","XINDX3",10,0)
 Q
"RTN","XINDX3",11,0)
UP ;Inc LI as we save to skip the $C(10).
"RTN","XINDX3",12,0)
 D PEEK S:$A(Y)=10 LI=LI+1 S LI(LV)=LI,LV=LV-1,LI=LI(LV),AC=LI(LV,1) Q
"RTN","XINDX3",13,0)
PEEKDN S Y=$G(LV(LV+1,LI(LV+1)+1)) Q
"RTN","XINDX3",14,0)
FIND F Y=LI:1:AC Q:L[$G(LV(LV,Y))
"RTN","XINDX3",15,0)
ERR D E^XINDX1(43) S (S,S1,CH)="" Q
"RTN","XINDX3",16,0)
 Q
"RTN","XINDX3",17,0)
 Q
"RTN","XINDX3",18,0)
S ;Set
"RTN","XINDX3",19,0)
 S STR=ARG,ARG="",RHS=0 D ^XINDX9
"RTN","XINDX3",20,0)
S2 S GK="" D INC I S="" D:'RHS E^XINDX1(10) Q
"RTN","XINDX3",21,0)
 I CH=",","!""#&)*+-,./:;<=?\]_~"[$E(S1),RHS=1 D E^XINDX1(10) G S2 ;patch 121
"RTN","XINDX3",22,0)
 I CH="," S RHS=0 G S2
"RTN","XINDX3",23,0)
 I CH="=" S RHS=1 I "!#&)*,/:;<=?\]_~"[$E(S1) D:$E(S1,1,2)'="##" E^XINDX1(10) G S2 ;patch 119
"RTN","XINDX3",24,0)
 I CH="$",'RHS D  D:% E^XINDX1(10) ;Can't be on left side of set.
"RTN","XINDX3",25,0)
 . S %=1
"RTN","XINDX3",26,0)
 . I "$E$P$X$Y"[$E(S,1,2) S %=0 Q
"RTN","XINDX3",27,0)
 . I "$EC$ET$QS"[$E(S,1,3) S %=0 Q
"RTN","XINDX3",28,0)
 . I "$ZE$ZT"[$E(S,1,3) S %=0 Q  ;Pickup in XINDX9
"RTN","XINDX3",29,0)
 . Q
"RTN","XINDX3",30,0)
 I CH="^" D FL G S2
"RTN","XINDX3",31,0)
 I CH="@" S Y=$$ASM(LV,LI,",") S:Y'["=" RHS=1 D INC,ARG^XINDX2 G S2
"RTN","XINDX3",32,0)
 I CH="(",$D(LV(LV,"OBJ",LI-1)) D ARG^XINDX2 G S2
"RTN","XINDX3",33,0)
 I CH="(" D MULT G S2
"RTN","XINDX3",34,0)
 I CH="#",$E(S,1,2)="##" D ARG^XINDX2 G S2 ;Cache Objects
"RTN","XINDX3",35,0)
 D FL G S2
"RTN","XINDX3",36,0)
 ;NOA=number of arguments
"RTN","XINDX3",37,0)
MULT D INC S NOA=S I S'>0 S ERR=5 G ^XINDX1
"RTN","XINDX3",38,0)
 D DN S AC=AC+LI F  Q:AC'>LI  S:'RHS GK="*" D INC,ARG^XINDX2
"RTN","XINDX3",39,0)
 D UP
"RTN","XINDX3",40,0)
 Q
"RTN","XINDX3",41,0)
FL ;
"RTN","XINDX3",42,0)
 S:'RHS GK="*" D ARG^XINDX2
"RTN","XINDX3",43,0)
 Q
"RTN","XINDX3",44,0)
VLNF(X) ;Drop into VLN
"RTN","XINDX3",45,0)
VLN ;Valid Local Name > Variable
"RTN","XINDX3",46,0)
 S ERR=0
"RTN","XINDX3",47,0)
 Q:X?1(1U,1"%").15UN
"RTN","XINDX3",48,0)
 I X?1(1A,1"%").15AN D E^XINDX1(57) Q  ;Lowercase
"RTN","XINDX3",49,0)
 D E^XINDX1(11) ;Too long or other problem
"RTN","XINDX3",50,0)
 Q
"RTN","XINDX3",51,0)
VGN ;Valid Global Name
"RTN","XINDX3",52,0)
 S ERR=0 I X'?1(1U,1"%").7UN D E^XINDX1(12)
"RTN","XINDX3",53,0)
 Q
"RTN","XINDX3",54,0)
KL ;Process KILL
"RTN","XINDX3",55,0)
 S STR=ARG,ARG(1)=ARG,ARG="" D ^XINDX9
"RTN","XINDX3",56,0)
A D INC Q:S=""  G A:CH="," S LOC="L" D @$S(CH="@":"KL1",CH="^":"KL2",CH="(":"KL4",1:"KL3") G A
"RTN","XINDX3",57,0)
KL1 D INC,ARG^XINDX2 Q
"RTN","XINDX3",58,0)
KL2 S GK="!"
"RTN","XINDX3",59,0)
 I S1'="(" S ERR=24 D ^XINDX1
"RTN","XINDX3",60,0)
 G ARG^XINDX2
"RTN","XINDX3",61,0)
KL3 I "^DT^DTIME^DUZ^IOST^IOM^U^"[("^"_S_"^") S ERR=39,ERR(1)=S D ^XINDX1
"RTN","XINDX3",62,0)
 I "IO"=S D:S1="(" PEEKDN S ERR=39,ERR(1)=S_$S(S1["(":S1_Y_")",1:"") D:S1'="(" ^XINDX1 I S1="(",("QC"'[$E(Y,2)) D ^XINDX1
"RTN","XINDX3",63,0)
KL5 S GK="!" D ARG^XINDX2 Q  ;KILL SUBS
"RTN","XINDX3",64,0)
 Q
"RTN","XINDX3",65,0)
KL4 S NOA=S1 D DN,ARGS^XINDX2,UP,INC2 Q
"RTN","XINDX3",66,0)
NE ;NEW
"RTN","XINDX3",67,0)
 S ERR=$S("("[$E(ARG):26,1:0) I ERR G ^XINDX1 ;look for null or (
"RTN","XINDX3",68,0)
 S STR=ARG D ^XINDX9 K ERTX
"RTN","XINDX3",69,0)
N2 D INC Q:S=""  G N2:CH=","
"RTN","XINDX3",70,0)
 ;I CH?1P,("%@()"'[CH)&("$E"'[$E(S,1,2)) D E^XINDX1(11) G N2
"RTN","XINDX3",71,0)
 ;check for "@", functions, special variables, or %variables
"RTN","XINDX3",72,0)
 I CH?1P,(CH'=S) D  I $G(ERTX)]"" K ERTX G N2
"RTN","XINDX3",73,0)
 . Q:"@("[CH!(CH="%"&($E(S,2,8)?.1A.E))  ;check what's indirected on next pass or
"RTN","XINDX3",74,0)
 . ;if not $ET or $ES must use indirection 
"RTN","XINDX3",75,0)
 . I "$"[CH Q:$E(S,1,3)="$ET"!($E(S,1,3)="$ES")  I LI>1,(LV(LV,LI-1)="@") Q
"RTN","XINDX3",76,0)
 . D E^XINDX1(11)
"RTN","XINDX3",77,0)
 . Q
"RTN","XINDX3",78,0)
 S GK="~" D ARG^XINDX2
"RTN","XINDX3",79,0)
 G N2
"RTN","XINDX3",80,0)
 ;
"RTN","XINDX3",81,0)
RD S STR=ARG D ^XINDX9 S ARG=""
"RTN","XINDX3",82,0)
RD1 D INC Q:S=""
"RTN","XINDX3",83,0)
 ;I (CH="!")!(CH=",")!(CH=Q)!(CH="#") G RD1
"RTN","XINDX3",84,0)
 ;I CH="^" S ERR=11 D ^XINDX1
"RTN","XINDX3",85,0)
 I '((CH="%")!(CH?1A)!(CH="*")) D RD3 G RD1
"RTN","XINDX3",86,0)
 S Y=$$ASM(LV,LI,",") I Y'[":" S ERR=33,RDTIME=1 D ^XINDX1
"RTN","XINDX3",87,0)
 D RD2 G RD1
"RTN","XINDX3",88,0)
RD2 Q:","[CH
"RTN","XINDX3",89,0)
 I "*#"[CH D E^XINDX1(41)
"RTN","XINDX3",90,0)
 I "#:"[CH D INC,ARG^XINDX2,INC G RD2
"RTN","XINDX3",91,0)
 I (CH="%")!(CH?1A) S LOC="L",GK="*" D ARG^XINDX2,INC G RD2
"RTN","XINDX3",92,0)
 D INC G RD2
"RTN","XINDX3",93,0)
RD3 Q:","[CH  I "!#?"[CH D INC G RD3
"RTN","XINDX3",94,0)
 I (CH="%")!(CH?1A)!(CH="@") D ARG^XINDX2,INC G RD3
"RTN","XINDX3",95,0)
 Q
"RTN","XINDX3",96,0)
O S STR=ARG,AC=99 D ^XINDX9,INC S ARG="" I S["@" D ARGS^XINDX2 Q
"RTN","XINDX3",97,0)
 D ARG^XINDX2,INC D  D INC,ARGS^XINDX2 Q
"RTN","XINDX3",98,0)
 . F  D INC Q:":"[S
"RTN","XINDX3",99,0)
 . Q
"RTN","XINDX3",100,0)
 Q
"RTN","XINDX3",101,0)
ERRCP S ERR=5 D ^XINDX1 Q
"RTN","XINDX3",102,0)
ST ;
"RTN","XINDX3",103,0)
 S:'$D(V(LOC,S)) V(LOC,S)="" S:V(LOC,S)'[GK V(LOC,S)=V(LOC,S)_GK,GK="" Q
"RTN","XINDX3",104,0)
 Q
"RTN","XINDX3",105,0)
ASM(WL,SI,L,SEP) ;
"RTN","XINDX3",106,0)
 N %,CH,Y S SEP=$G(SEP),Y="" F %=SI:1 S CH=$G(LV(WL,%)) Q:L[CH  S Y=Y_SEP_CH
"RTN","XINDX3",107,0)
 Q Y
"RTN","XINDX4")
0^4^B14273659^B13667786
"RTN","XINDX4",1,0)
XINDX4 ;ISC/REL,GRK - PROCESS DO, GO TO, WRITE & FOR COMMANDS ;08/05/08  13:59
"RTN","XINDX4",2,0)
 ;;7.3;TOOLKIT;**20,61,68,110,128,133**;Apr 25, 1995;Build 15
"RTN","XINDX4",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XINDX4",4,0)
 ;DO and GO; IND("DO1") checks if we already checked a DO at this level
"RTN","XINDX4",5,0)
DG1 I ARG="" S:'IND("DO1") IND("DO")=IND("DO")+1,IND("DO1")=1 Q
"RTN","XINDX4",6,0)
DG S (LBL,PGM,OFF,PRM)="",S=1,L="+^:," S:$E(ARG,1,2)="@^" S=3
"RTN","XINDX4",7,0)
 D LOOP S LBL=$E(ARG,1,I-1)
"RTN","XINDX4",8,0)
 ;Cache Object method contain ".", check if label is an object or begins with ##
"RTN","XINDX4",9,0)
 I $P(LBL,"(")["."!($E(LBL,1,2)="##") Q
"RTN","XINDX4",10,0)
 I CH="+" S (J,S)=I+1,ERR=30 D ^XINDX1:$E(ARG)'="@" S:$E(ARG,I)="^" S=I+1 D LOOP S OFF=$E(ARG,J,I-1) I OFF'?.N S GRB=GRB_$C(9)_OFF
"RTN","XINDX4",11,0)
 I CH="^" S S=I+1 D LOOP S PGM=$E(ARG,S,I-1)
"RTN","XINDX4",12,0)
 I CH=":" S S=I+1,L="," D LOOP S S=$E(ARG,S,I-1) I S'="" S GRB=GRB_$C(9)_S
"RTN","XINDX4",13,0)
 S ARG=$E(ARG,I+1,999)
"RTN","XINDX4",14,0)
 I $E(LBL)="@" S GRB=GRB_$C(9)_$E(LBL,2,999),LBL="@("
"RTN","XINDX4",15,0)
 I $E(PGM)="@" S GRB=GRB_$C(9)_$E(PGM,2,999),PGM="@("
"RTN","XINDX4",16,0)
 I LBL[")" S PRM=$$INSIDE(LBL,"(",")"),LBL=$P(LBL,"(")
"RTN","XINDX4",17,0)
 I PGM[")" S PRM=$$INSIDE(PGM,"(",")"),PGM=$P(PGM,"(")
"RTN","XINDX4",18,0)
 I $L(PRM) S GRB=GRB_$C(9)_$$PRUNE($$CNG(PRM,",,",","),",") ;strip null parameters
"RTN","XINDX4",19,0)
 I $G(IND("DOL")),CM="G",PGM]"" D E^XINDX1(63) ;can't goto another routine out of block structure
"RTN","XINDX4",20,0)
 S:OFF'="" LBL=LBL_"+"_OFF
"RTN","XINDX4",21,0)
 S S="",LOC="I" I PGM'="" S S=PGM_" ",LOC="X"
"RTN","XINDX4",22,0)
 S:LBL_PGM["&" LOC="X"
"RTN","XINDX4",23,0)
 S:LBL'="" S=S_LBL I S'="" D ST
"RTN","XINDX4",24,0)
 G:ARG'="" DG K LBL,PGM,OFF,PRM
"RTN","XINDX4",25,0)
 Q
"RTN","XINDX4",26,0)
LOOP F I=S:1 S CH=$E(ARG,I) D QUOTE:CH=Q,PAREN:CH="(",ERRCP:CH=")" Q:L[CH
"RTN","XINDX4",27,0)
 Q
"RTN","XINDX4",28,0)
PAREN S PC=1
"RTN","XINDX4",29,0)
 F I=I+1:1 S CH=$E(ARG,I) Q:PC=0!(CH="")  I "()"""[CH D QUOTE:CH=Q S PC=PC+$S("("[CH:1,")"[CH:-1,1:0)
"RTN","XINDX4",30,0)
 S ERR=5 D:PC ^XINDX1
"RTN","XINDX4",31,0)
 Q
"RTN","XINDX4",32,0)
QUOTE F I=I+1:1 S CH=$E(ARG,I) Q:CH=""!(CH=Q)
"RTN","XINDX4",33,0)
 I CH="" S ERR=6 G ^XINDX1
"RTN","XINDX4",34,0)
 Q
"RTN","XINDX4",35,0)
ST S R=$F(S,"(") S:R>1 S=$E(S,1,R-1) S:"IX"[LOC IND("COM")=IND("COM")_","_S
"RTN","XINDX4",36,0)
 S:'$D(V(LOC,S)) V(LOC,S)="" S:LOC="L"&(V(LOC,S)'["*") V(LOC,S)=V(LOC,S)_"*" Q
"RTN","XINDX4",37,0)
 Q
"RTN","XINDX4",38,0)
FR Q:$E(ARG,1)="@"  S S=2,L="=" D LOOP I CH="" S ERR=8 G ^XINDX1
"RTN","XINDX4",39,0)
 S GK="*",STR=$E(ARG,1,I-1),ARG=$E(ARG,I+1,999) D ARGG^XINDX2
"RTN","XINDX4",40,0)
 Q
"RTN","XINDX4",41,0)
WR N S0,WR S STR=ARG,WR="#!,",S0="" ;Need to handle /controlmnemonic
"RTN","XINDX4",42,0)
 D ^XINDX9 S ARG=""
"RTN","XINDX4",43,0)
 F  D INC^XINDX2 Q:S=""  D  S S0=S
"RTN","XINDX4",44,0)
 . I S="?" D:WR[S1 E^XINDX1(49) Q
"RTN","XINDX4",45,0)
 . I S="!",WR'[$E(S0) D E^XINDX1(59) Q  ;Look for var!
"RTN","XINDX4",46,0)
 . I S="!","#!?,"'[$E(S1) D E^XINDX1(59) Q  ;Look for !var
"RTN","XINDX4",47,0)
 . D ARG^XINDX2
"RTN","XINDX4",48,0)
 . Q
"RTN","XINDX4",49,0)
 Q
"RTN","XINDX4",50,0)
ERRCP S ERR=5 D ^XINDX1
"RTN","XINDX4",51,0)
 Q
"RTN","XINDX4",52,0)
SET S ARG=$E(ARG,1,I-1)_","_$E(ARG,I+1,999)
"RTN","XINDX4",53,0)
 Q
"RTN","XINDX4",54,0)
XE S GRB=GRB_$C(9)_ARG,ARG=""
"RTN","XINDX4",55,0)
 Q
"RTN","XINDX4",56,0)
REP S L=",:",S=1 D LOOP I CH=":" S ARG=$E(ARG,I+1,999),L="," D LOOP
"RTN","XINDX4",57,0)
 S ARG=$E(ARG,I+1,999) Q:ARG=""
"RTN","XINDX4",58,0)
 G REP
"RTN","XINDX4",59,0)
 ;
"RTN","XINDX4",60,0)
ZC I "ILRS"'[$E(CM,2)!($E(CM,2)="") S ARG="" Q  ;Zcommands
"RTN","XINDX4",61,0)
 S COM=$E(CM,1,2) Q:CM="ZI"  G:CM="ZR" ZR
"RTN","XINDX4",62,0)
U1 S L=",",S=1 D LOOP S S=$E(ARG,1,I-1),ARG=$E(ARG,I+1,999)
"RTN","XINDX4",63,0)
 S:$E(S,1)="@" S=$E(S,2,999),GRB=GRB_$C(9)_S Q:ARG=""  G U1
"RTN","XINDX4",64,0)
ZR Q:ARG=""  S L=":,",S=1 D LOOP S S=$E(ARG,1,I-1),ARG=$E(ARG,I+1,999)
"RTN","XINDX4",65,0)
 I $E(S,1)="@" S GRB=GRB_$C(9)_S G ZR
"RTN","XINDX4",66,0)
 S:S["+" GRB=GRB_$C(9)_$P(S,"+",2,999)
"RTN","XINDX4",67,0)
 G ZR
"RTN","XINDX4",68,0)
LO ;Lock -- Look for timeouts
"RTN","XINDX4",69,0)
 N LK
"RTN","XINDX4",70,0)
 I ARG="" Q
"RTN","XINDX4",71,0)
 S S=1
"RTN","XINDX4",72,0)
 F  D  Q:CH=""
"RTN","XINDX4",73,0)
 . I "+-"'[$E(ARG,S) D E^XINDX1(61)
"RTN","XINDX4",74,0)
 . S L="-:,",LK=0 D LOOP S S=I+1
"RTN","XINDX4",75,0)
 . I CH="-" S L="," D LOOP S S=I+1 Q
"RTN","XINDX4",76,0)
 . I CH=":" S L=",",LK=1 D LOOP S S=I+1
"RTN","XINDX4",77,0)
 . I CH="," D:'LK E^XINDX1(60) S LK=0 Q
"RTN","XINDX4",78,0)
 . I CH="" D:'LK E^XINDX1(60) Q
"RTN","XINDX4",79,0)
 . Q
"RTN","XINDX4",80,0)
 S GRB=GRB_$C(9)_ARG,ARG=""
"RTN","XINDX4",81,0)
 Q
"RTN","XINDX4",82,0)
Q ;QUIT followed by comment or in structure Do or For loop, must have 2 spaces
"RTN","XINDX4",83,0)
 I $E(ARG)=";"!$G(IND("DOL"))!$G(IND("F")) S ARG="",ERR=9 G ^XINDX1
"RTN","XINDX4",84,0)
 Q
"RTN","XINDX4",85,0)
PT(X) ;Tag for parameter passing
"RTN","XINDX4",86,0)
 S ^UTILITY($J,1,RTN,"P",LAB)=X
"RTN","XINDX4",87,0)
 Q
"RTN","XINDX4",88,0)
PC ;Parameter passing call
"RTN","XINDX4",89,0)
 N LOC S LOC="P" D ST
"RTN","XINDX4",90,0)
 Q
"RTN","XINDX4",91,0)
INSIDE(X,X1,X2) ;Return the data inside the param x1,x2
"RTN","XINDX4",92,0)
 S J=$L(X,X2)-1,J=$S(J<1:1,1:J)
"RTN","XINDX4",93,0)
 Q $P($P(X,X2,1,J),X1,2,99)
"RTN","XINDX4",94,0)
 ;
"RTN","XINDX4",95,0)
SEP(ST,SP,RV) ;String,Separters,Return array)
"RTN","XINDX4",96,0)
 N %,N,Q S Q=$C(34) ;QUOTE
"RTN","XINDX4",97,0)
 F N=1:1 S %=$E(ST,N) D SQT:%=Q Q:SP[%
"RTN","XINDX4",98,0)
 S RV=N-1,RV(1)=$E(ST,1,N)
"RTN","XINDX4",99,0)
 Q
"RTN","XINDX4",100,0)
 ;
"RTN","XINDX4",101,0)
SQT F N=N+1:1 Q:Q[$E(ST,N)
"RTN","XINDX4",102,0)
 Q
"RTN","XINDX4",103,0)
CNG(S1,S2,S3) ;String,replace,with
"RTN","XINDX4",104,0)
 ;
"RTN","XINDX4",105,0)
 F  Q:S1'[S2  S S1=$P(S1,S2)_S3_$P(S1,S2,2,999)
"RTN","XINDX4",106,0)
 Q S1
"RTN","XINDX4",107,0)
PRUNE(S1,S2) ;String,prune char from front and back
"RTN","XINDX4",108,0)
 F  Q:$E(S1)'=S2  S S1=$E(S1,2,999)
"RTN","XINDX4",109,0)
 F  Q:$E(S1,$L(S1))'=S2  S S1=$E(S1,1,$L(S1)-1)
"RTN","XINDX4",110,0)
 Q S1
"RTN","XINDX5")
0^5^B11294544^B11265539
"RTN","XINDX5",1,0)
XINDX5 ;SF-ISC/RWF - CROSS REFERENCE ALL ROUTINES ;03/26/2002  09:57
"RTN","XINDX5",2,0)
 ;;7.3;TOOLKIT;**20,27,61,121,133**;Apr 25, 1995;Build 15
"RTN","XINDX5",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XINDX5",4,0)
 G END:$D(IND("QUIT")) I INP(8) W !,"Called Routines",! D ^XINDX52 ;Get called routines
"RTN","XINDX5",5,0)
 K ARG,CCN,CH,COM,ERR,GK,GRB,I,INDDA,INDDS,L,LAB,LAB0,LC,LIN,LOC,PC,PRV,R,RTN,S,STR,TXT,V,X,Y
"RTN","XINDX5",6,0)
 D ^XINDX53:INP(7) ;Load routine file
"RTN","XINDX5",7,0)
 ;Check called tags and routines
"RTN","XINDX5",8,0)
 S RN="$",TXT="" W !!,"--- CROSS REFERENCING ---",!
"RTN","XINDX5",9,0)
A S RN=$O(^UTILITY($J,RN)),L="",LABO=0 I RN="" G B
"RTN","XINDX5",10,0)
 F  S L=$O(^UTILITY($J,1,RN,"X",L)) Q:L=""  S XX2=^(L,0),XX1=$P(L," ",2),T=$P(XX1,"+",1),P=$P(L," ",1) D AA
"RTN","XINDX5",11,0)
 G A
"RTN","XINDX5",12,0)
AA Q:P=""  I '$D(^UTILITY($J,1,P)) D  Q  ;We can now check % routines
"RTN","XINDX5",13,0)
 . I (P["&")!(P["@") Q  ;External subroutine
"RTN","XINDX5",14,0)
 . S:T["$" T=$E(T,3,99) S:P["(" P=$P(P,"(")
"RTN","XINDX5",15,0)
 . I '$$VTAG(P) S ERR=52,ERR(1)=P D AAER(.ERR,RN,"",0) Q
"RTN","XINDX5",16,0)
 . S X=$T(^@P) I X="" S ERR=52,ERR(1)=P D AAER(.ERR,RN,$P(XX2,","),0) Q
"RTN","XINDX5",17,0)
 . Q:T=""
"RTN","XINDX5",18,0)
 . I '$$VTAG(T) D AAER(37,RN,$P(XX2,","),0) Q
"RTN","XINDX5",19,0)
 . I $$VTAG(T),$T(@T^@P)="" S E=38,E(1)="MISSING LABEL "_XX1_"^"_P D AAER(.E,RN,"",0)
"RTN","XINDX5",20,0)
 . Q
"RTN","XINDX5",21,0)
 I T]"",$D(^UTILITY($J,1,P)) D
"RTN","XINDX5",22,0)
 . S:T["$$" T=$E(T,3,99) S:T["@" T=""
"RTN","XINDX5",23,0)
 . I T]"",'$D(^UTILITY($J,1,P,"T",T)) S E=38,E(1)="MISSING LABEL (see INVOKED BY list)." D AAER(.E,P,XX1,0)
"RTN","XINDX5",24,0)
 Q
"RTN","XINDX5",25,0)
AAER(ERR,RTN,LAB,LABO) ;Report error. error code, routine, label, label offset
"RTN","XINDX5",26,0)
 D ^XINDX1
"RTN","XINDX5",27,0)
 Q
"RTN","XINDX5",28,0)
VTAG(K) ;Check for a valid tag. works for routine name.
"RTN","XINDX5",29,0)
 Q (K?1(1"%",1A).7NA)!(K?1.8N)
"RTN","XINDX5",30,0)
 ;
"RTN","XINDX5",31,0)
B D ^XINDX51
"RTN","XINDX5",32,0)
END W:$D(IND("QUIT")) !!,"--- ",$S($D(ZTSTOP):"TASK ",1:""),"STOPPED ---" W !!,"--- END ---"
"RTN","XINDX5",33,0)
 I IO'=IO(0) U IO(0) W !,"--- D O N E ---" U IO
"RTN","XINDX5",34,0)
 D ^%ZISC
"RTN","XINDX5",35,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","XINDX5",36,0)
CLEAN ;Come here from XINDX6 if queued output.
"RTN","XINDX5",37,0)
 K %,%1,%2,%I1,%IN1,%UCN,A,ARG,C,C9,CCN,CH,COM,DA,DIC,DUOUT,ERR,ERTX,F,F1,G,GK,GRB,H,HED,HS
"RTN","XINDX5",38,0)
 K ^UTILITY($J),I,IND,INDB,INDC,INDDA,INDDS,INDF,INDFN,INDLC,INDPM,INDX,INDXDT,INDXJ,INP,IP,J,K,K1,K3,L,LAB,LABO,LBL,LC,LIN,LINE,LOC,NRO,OFF,P,PC,PGM,POP,POST,Q,R,RDTIME,RHS,ROU,RTN,S,S1,STR,SYM,TAB,TAG,TXT,TY,V,VZ,X,X1,X2,X3,Y
"RTN","XINDX5",39,0)
 Q
"RTN","XINDX5",40,0)
CRX S RTN="$" F I=0:0 S RTN=$O(^UTILITY($J,RTN)) Q:RTN=""  F LOC="L","G","O","MK","N","X" D CR0 ;patch 121
"RTN","XINDX5",41,0)
 K VZ Q
"RTN","XINDX5",42,0)
 ;
"RTN","XINDX5",43,0)
CR0 N VZ S S=-1 I LOC="X",'$D(^UTILITY($J,1,"***","X",RTN_" ")) S ^UTILITY($J,1,"***","X",RTN_" ")=""
"RTN","XINDX5",44,0)
CR1 S S=$O(^UTILITY($J,1,RTN,LOC,S)) Q:S=""  ;Loop
"RTN","XINDX5",45,0)
 S X=$G(^UTILITY($J,1,RTN,LOC,S))
"RTN","XINDX5",46,0)
 F J=1:1:$L(X) S:$G(^UTILITY($J,1,"***",LOC,S))'[$E(X,J) ^(S)=$G(^(S))_$E(X,J) ;Pass on flags
"RTN","XINDX5",47,0)
 F J=0:1 Q:'$D(^UTILITY($J,1,RTN,LOC,S,J))  D CR2
"RTN","XINDX5",48,0)
 G CR1
"RTN","XINDX5",49,0)
 ;
"RTN","XINDX5",50,0)
CR2 S PC="" I LOC'="X" S:^UTILITY($J,1,RTN,LOC,S,J)["*" PC=PC_"*" S:^(J)["!" PC=PC_"!" S:^(J)["~" PC=PC_"~" D CR3(RTN,S,LOC) Q
"RTN","XINDX5",51,0)
 Q:$D(VZ(S))  S S1=$S($P(S," ",2)]"":$P(S," ",2)_"^",1:"")_$P(S," ",1),VZ(S)=""
"RTN","XINDX5",52,0)
 ;S X1=LOC,X2=S,X3=RTN,LOC="Z",S=RTN,RTN=S1 D CR3 S LOC=X1,S=X2,RTN=X3 K X1,X2,X3
"RTN","XINDX5",53,0)
 D CR3(S1,RTN,"Z"),CR3(RTN,S,LOC)
"RTN","XINDX5",54,0)
 Q
"RTN","XINDX5",55,0)
CR3(X1,X2,X3) ;(RTN,REF,LOC)
"RTN","XINDX5",56,0)
 S K=0
"RTN","XINDX5",57,0)
CR4 S ARG="" I $D(^UTILITY($J,1,"***",X3,X2,K)) S ARG=^(K) I $L(ARG)>230 S K=K+1 G CR4
"RTN","XINDX5",58,0)
 S ^UTILITY($J,1,"***",X3,X2,K)=ARG_X1_PC_"," Q
"RTN","XINDX51")
0^6^B26771263^B25548431
"RTN","XINDX51",1,0)
XINDX51 ;ISC/REL,GRK,RWF - PRINT ROUTINE ;06/24/08  16:06
"RTN","XINDX51",2,0)
 ;;7.3;TOOLKIT;**20,48,61,110,133**;Apr 25, 1995;Build 15
"RTN","XINDX51",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XINDX51",4,0)
 ;Setup Local IO paramiters
"RTN","XINDX51",5,0)
B S RTN="",INL(1)=IOM-2,INL(2)=IOSL-4,INL(3)=("C"=$E(IOST)),INL(4)=IOM-1,PG=0,INL(5)="Compiled list of Errors and Warnings "
"RTN","XINDX51",6,0)
 K ER,HED D HD1 ;Do header
"RTN","XINDX51",7,0)
 ;Show Errors
"RTN","XINDX51",8,0)
 F  S RTN=$O(^UTILITY($J,1,RTN)) Q:RTN=""!$D(IND("QUIT"))  S X=^(RTN,0) I $D(^UTILITY($J,1,RTN,"E"))>9 S HED=$$BHDR(RTN,X) D HD,WERR(1)
"RTN","XINDX51",9,0)
 W:'$D(ER) !,"No errors or warnings to report",!
"RTN","XINDX51",10,0)
 ;Did they want more?
"RTN","XINDX51",11,0)
 G END:'INP(1)!$D(IND("QUIT")),CR:INP(6)
"RTN","XINDX51",12,0)
 ;Show detail on each routine
"RTN","XINDX51",13,0)
 W !!,"--- Routine Detail"
"RTN","XINDX51",14,0)
 W:INP(5)?1A "   --- with "_$S(INP(5)["R":"REGULAR",INP(5)["S":"STRUCTURED",INP(5)["B":"R/S",1:"")_" ROUTINE LISTING" W " ---"
"RTN","XINDX51",15,0)
 S RTN="$",INDB="R" ;Report on each routine
"RTN","XINDX51",16,0)
BL F  S RTN=$O(^UTILITY($J,RTN)) Q:RTN=""!('INP(4)&(RTN?1"|"1.4L.NP))!$D(IND("QUIT"))  D B1,CHK
"RTN","XINDX51",17,0)
 ;Exit or do Cross-Refference
"RTN","XINDX51",18,0)
 G END:NRO<2,END:$D(IND("QUIT")),CR
"RTN","XINDX51",19,0)
 ;
"RTN","XINDX51",20,0)
BHDR(R,X) ;Build hdr
"RTN","XINDX51",21,0)
 Q $E(R_"       ",1,8)_" * *  "_$P(X,"^",2)_" Lines,  "_(+X)_" Bytes, Checksum: "_$G(^UTILITY($J,1,R,"RSUM"))
"RTN","XINDX51",22,0)
 ;
"RTN","XINDX51",23,0)
WERR(FL) ;Write error messages
"RTN","XINDX51",24,0)
 N ER2
"RTN","XINDX51",25,0)
 F ER=1:1 Q:'$D(^UTILITY($J,1,RTN,"E",ER))!$D(IND("QUIT"))  S %=^(ER) D
"RTN","XINDX51",26,0)
 . I $Y'<INL(2) D HD K ER2
"RTN","XINDX51",27,0)
 . D:FL&(%>0)&($G(ER2)'=+%) WORL(^UTILITY($J,1,RTN,0,+%,0)) ;Write the routine line
"RTN","XINDX51",28,0)
 . W !?3,$P(%,$C(9),2) W:$X>16 ! W ?16,$P(%,$C(9),3) S ER2=+% ;Write the error p110
"RTN","XINDX51",29,0)
 . Q
"RTN","XINDX51",30,0)
 Q
"RTN","XINDX51",31,0)
 ;
"RTN","XINDX51",32,0)
WR ;Write one routine
"RTN","XINDX51",33,0)
 S X=^UTILITY($J,1,RTN,0),INL(5)=$$BHDR(RTN,X)
"RTN","XINDX51",34,0)
 D HD1 W !,?14,$P(X,"^",3)_" bytes in comments" G:'INP(2) B2
"RTN","XINDX51",35,0)
 F I=1:1 Q:'$D(^UTILITY($J,1,RTN,0,I))  S X=^(I,0) D
"RTN","XINDX51",36,0)
 . D:$Y'<INL(2) HD1 I $D(IND("QUIT")) S I=99999 Q
"RTN","XINDX51",37,0)
 . D WORL(X) ;Write routine line
"RTN","XINDX51",38,0)
 . Q
"RTN","XINDX51",39,0)
 Q
"RTN","XINDX51",40,0)
 ;
"RTN","XINDX51",41,0)
WORL(D) ;Write one routine line
"RTN","XINDX51",42,0)
 N J,L
"RTN","XINDX51",43,0)
 S L=$P(D," ",1),D=$P(D," ",2,999)
"RTN","XINDX51",44,0)
 F J=8,9:0 W !,L,?J," " W:$X>10 "--",!,?10 W $E(D,1,INL(4)-J) S D=$E(D,INL(4)-J+1,999),L="" Q:D=""
"RTN","XINDX51",45,0)
 Q
"RTN","XINDX51",46,0)
 ;
"RTN","XINDX51",47,0)
CHK I $D(ZTQUEUED),$$S^%ZTLOAD S IND("QUIT")=1,ZTSTOP=1
"RTN","XINDX51",48,0)
 S:$D(IND("QUIT")) RTN="~"
"RTN","XINDX51",49,0)
 Q
"RTN","XINDX51",50,0)
 ;
"RTN","XINDX51",51,0)
B1 I '$D(^UTILITY($J,1,RTN,0)) Q  ;No data to show
"RTN","XINDX51",52,0)
 D:INP(5)["S"!(INP(5)["B") ^XINDX8 ;Show structured listing
"RTN","XINDX51",53,0)
 D:INP(5)["F" SC
"RTN","XINDX51",54,0)
 D:INP(5)["R"!(INP(5)["B") WR ;Show normal listing
"RTN","XINDX51",55,0)
B2 ;
"RTN","XINDX51",56,0)
 G:'INP(3)!('$D(^UTILITY($J,1,RTN,"E",0))) B3
"RTN","XINDX51",57,0)
 S HED="*****   ERRORS & WARNINGS IN "_RTN_"   *****" W !,HED
"RTN","XINDX51",58,0)
 D WERR(0) ;Show errors
"RTN","XINDX51",59,0)
B3 ;
"RTN","XINDX51",60,0)
 S INL(5)="*****   INDEX OF "_RTN_"   *****" W !!,INL(5),!
"RTN","XINDX51",61,0)
 S HED="Local Variables      Line Occurrences   ( >> not killed explicitly)",HED(1)=$J("",40)_"( * Changed  ! Killed  ~ Newed)" D P("L","") Q:$D(IND("QUIT"))
"RTN","XINDX51",62,0)
 S HED="Global Variables  ( * Changed  ! Killed)" D P("G","") Q:$D(IND("QUIT"))
"RTN","XINDX51",63,0)
 S HED="Naked Globals" D P("N","") Q:$D(IND("QUIT"))
"RTN","XINDX51",64,0)
 S HED="Cache Objects" D P("O","") Q:$D(IND("QUIT"))
"RTN","XINDX51",65,0)
 S HED="Marked Items" D P("MK","") Q:$D(IND("QUIT"))
"RTN","XINDX51",66,0)
 S HED="Label References" D P("I","") Q:$D(IND("QUIT"))
"RTN","XINDX51",67,0)
 S HED="External References" D P("X","^") Q:$D(IND("QUIT"))
"RTN","XINDX51",68,0)
 W !!,"*****   END   *****",!
"RTN","XINDX51",69,0)
 Q
"RTN","XINDX51",70,0)
 ;
"RTN","XINDX51",71,0)
P(LOC,SYM) ;
"RTN","XINDX51",72,0)
 S L="",PC="",TAB=$S("XG"[LOC:23,"O"[LOC:35,1:16) D HD Q:$D(IND("QUIT"))
"RTN","XINDX51",73,0)
P1 S L=$O(^UTILITY($J,1,RTN,LOC,L)) G:L="" PX
"RTN","XINDX51",74,0)
 I LOC="X",L?1L.LNP Q
"RTN","XINDX51",75,0)
 S PC(1)=$G(^UTILITY($J,1,RTN,LOC,$P(L,"(")))_$S("^DT^DUZ^DTIME^IO^IOF^ION^IOM^IOSL^IOST^U^"[("^"_$P(L,"(")_"^"):"!",1:" ")
"RTN","XINDX51",76,0)
 S PC(1)=(PC(1)["!")!(PC(1)["~"),PC="*"
"RTN","XINDX51",77,0)
 F J=0:1 S X=$S($D(^UTILITY($J,1,RTN,LOC,L,J)):^(J),1:"") Q:X=""!$D(IND("QUIT"))  D P2,P3
"RTN","XINDX51",78,0)
 G P1
"RTN","XINDX51",79,0)
PX W:PC="" !?3,"NONE" K HED
"RTN","XINDX51",80,0)
 Q
"RTN","XINDX51",81,0)
P2 I $Y'<INL(2) D HD S PC="*"
"RTN","XINDX51",82,0)
 Q:PC=L
"RTN","XINDX51",83,0)
 I LOC="L" W !,$S(('PC(1)):">> ",1:"   "),SYM,L," ",?TAB Q
"RTN","XINDX51",84,0)
 I LOC'="X" W !,"   ",SYM,L,?TAB Q
"RTN","XINDX51",85,0)
 W !?3,$P(L," ",2),SYM,$P(L," ",1)," ",?TAB
"RTN","XINDX51",86,0)
 Q
"RTN","XINDX51",87,0)
P3 W:$X>TAB !,?TAB
"RTN","XINDX51",88,0)
 S PC=L F I=1:1 S ARG=$P(X,",",I) Q:ARG=""  W:$X+$L(ARG)>INL(1) !?TAB W:$X'=TAB "," W ARG
"RTN","XINDX51",89,0)
 Q
"RTN","XINDX51",90,0)
HD D:$Y'<INL(2) HD1 D HD2
"RTN","XINDX51",91,0)
 Q
"RTN","XINDX51",92,0)
HD1 D WAIT:INL(3) S PG=PG+1 W @IOF,!,INL(5) W:(IOM-30)<$X ! W ?(IOM-30),INDXDT," page ",PG
"RTN","XINDX51",93,0)
 Q
"RTN","XINDX51",94,0)
HD2 W !!,HED W:$D(HED(1)) !,HED(1)
"RTN","XINDX51",95,0)
 Q
"RTN","XINDX51",96,0)
CR S INDB="C" U IO(0) W !!,"--- CROSS-REFERENCING ALL ROUTINES ---" U IO
"RTN","XINDX51",97,0)
 S RTN="$" D CRX^XINDX5
"RTN","XINDX51",98,0)
 S INL(5)="*****   Cross Reference of all Routines   *****",RTN="***" D HD1
"RTN","XINDX51",99,0)
 S HED="Local Variables    Routines   ( >> not killed explicitly)",HED(1)=$J("",30)_"( * Changed  ! Killed  ~ Newed)" D P("L","") G:$D(IND("QUIT")) END
"RTN","XINDX51",100,0)
 S HED="Global Variables" D P("G","") G:$D(IND("QUIT")) END
"RTN","XINDX51",101,0)
 S HED="Naked Globals" D P("N","") Q:$D(IND("QUIT"))
"RTN","XINDX51",102,0)
 S HED="Cache Objects" D P("O","") Q:$D(IND("QUIT"))
"RTN","XINDX51",103,0)
 S HED="Marked Items" D P("MK","") G:$D(IND("QUIT")) END
"RTN","XINDX51",104,0)
 S HED="Routine             Invokes:" D P("Z","") G:$D(IND("QUIT")) END
"RTN","XINDX51",105,0)
 S HED="Routine             is Invoked by:" D P("X","^")
"RTN","XINDX51",106,0)
 W !!,"*****   END   *****",!
"RTN","XINDX51",107,0)
END K INL,HED Q
"RTN","XINDX51",108,0)
SC ;Print a command chart
"RTN","XINDX51",109,0)
 S INL(5)=RTN_"   Command chart" D HD1
"RTN","XINDX51",110,0)
 F I=0:0 S I=$O(^UTILITY($J,1,RTN,"COM",I)) Q:I'>0  W !,^(I)
"RTN","XINDX51",111,0)
 Q
"RTN","XINDX51",112,0)
WAIT N % W !,"   Press return to continue:" R %:300 S:'$T %="^"
"RTN","XINDX51",113,0)
 I %["?" W !,"Press return to continue the report, ^ to exit the report" G WAIT
"RTN","XINDX51",114,0)
 S:%="^" IND("QUIT")=1 Q
"RTN","XINDX9")
0^7^B32506175^B17326619
"RTN","XINDX9",1,0)
XINDX9 ;SF/RWF - XINDEX SYNTAX CHECKER ;06/24/08  15:39
"RTN","XINDX9",2,0)
 ;;7.3;TOOLKIT;**20,27,48,61,66,68,110,121,132,133**;Apr 25, 1995;Build 15
"RTN","XINDX9",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XINDX9",4,0)
 N CH1,CHO,EC,OP
"RTN","XINDX9",5,0)
 D PARSE S LI=0,AC=255 F %=0:0 S %=$O(LV(%)) Q:%'>0  S LI(%)=0
"RTN","XINDX9",6,0)
 Q
"RTN","XINDX9",7,0)
 ;LV is a set of Linked Values
"RTN","XINDX9",8,0)
PARSE K LV,LI S (ERR,LI,I)=0,(LL,LV)=1,(OP,CH)="",Q=""""
"RTN","XINDX9",9,0)
 ;CH=current, CH1=next, CHO=previous character
"RTN","XINDX9",10,0)
PA2 S I=I+1,CHO=CH,CH=$E(STR,I),CH1=$E(STR,I+1) G:CH="" PEND
"RTN","XINDX9",11,0)
 G E:CH=";"!(CH'?1ANP) I """$()"[CH D QUOTE:CH=Q,FUNC:CH="$",DN:CH="(",UP:CH=")" G PA2
"RTN","XINDX9",12,0)
 I CH="^",CH1="$" D SSVN G PA2
"RTN","XINDX9",13,0)
 I CH="^",I=LL G PA2:CH1'="[" S I=I+1,X=$E(STR,LL,I) D ADD S LL=I+1 G PA2
"RTN","XINDX9",14,0)
 I CH?1A!(CH="%")!(CH=".") D VAR1 G PA2
"RTN","XINDX9",15,0)
 I CH?1N D NUM G PA2
"RTN","XINDX9",16,0)
 I CH="#",CH1="#" D OBJ G PA2
"RTN","XINDX9",17,0)
 S:"+-#'/*_&![]<>?"[CH OP=CH
"RTN","XINDX9",18,0)
 I CH="?",",!#"'[$E(STR,I-1) D AR,PAT G PA2
"RTN","XINDX9",19,0)
 I CH=",",CH1=":" D E^XINDX1(21) ;P121
"RTN","XINDX9",20,0)
 ;check if an open $S exists
"RTN","XINDX9",21,0)
 I $G(LV(LV,"SEL")) D
"RTN","XINDX9",22,0)
 . I '$P(LV(LV,"SEL"),U,2) S:CH="," $P(LV(LV,"SEL"),U,2)=1 Q  ;arg is closed: open if comma
"RTN","XINDX9",23,0)
 . I CH=":" S $P(LV(LV,"SEL"),U,2)=0 Q  ;arg open: close if colon
"RTN","XINDX9",24,0)
 . I CH="," D E^XINDX1(43) S LV(LV,"SEL")="0^0" ;arg open: error if comma, close this $S
"RTN","XINDX9",25,0)
 . Q
"RTN","XINDX9",26,0)
 I CH?1P D  ;Check for dup operators
"RTN","XINDX9",27,0)
 . D AR
"RTN","XINDX9",28,0)
 . Q:(CH_CH1="]]")
"RTN","XINDX9",29,0)
 . I CH=CH1,(",_/\[]&|"[CH) D
"RTN","XINDX9",30,0)
 .. Q:CH=","&$$OBJF()  ;quit if Object with open '(', good code
"RTN","XINDX9",31,0)
 .. I $$FNC()'="$$" D E^XINDX1(21) Q  ; if not function, can't have empty parameters
"RTN","XINDX9",32,0)
 G PA2
"RTN","XINDX9",33,0)
 ;End of parse
"RTN","XINDX9",34,0)
PEND D AR,E^XINDX1(5):LV>1,E^XINDX1(21):($G(LV(1,1))=",") ;LV>1 means mis-match ()
"RTN","XINDX9",35,0)
 Q
"RTN","XINDX9",36,0)
 ;
"RTN","XINDX9",37,0)
DN D STR S X=CH D ADD,NEW S LI(LV)=LI,LV=LV+1 S:'$D(LI(LV)) LI(LV)=0 S LI=LI(LV),LI(LV-1,1)=LI
"RTN","XINDX9",38,0)
 Q
"RTN","XINDX9",39,0)
UP I LV<2 D E^XINDX1(5) Q
"RTN","XINDX9",40,0)
 D STR S EC=LI-LI(LV-1,1),X=$C(10) D ADD,NEW
"RTN","XINDX9",41,0)
 ;$S function still open, check arg
"RTN","XINDX9",42,0)
 I $G(LV(LV,"SEL")) D:$P(LV(LV,"SEL"),U,2) E^XINDX1(43) K LV(LV,"SEL")
"RTN","XINDX9",43,0)
 S LI(LV)=LI,LV=LV-1,LI=LI(LV)
"RTN","XINDX9",44,0)
 S X=EC D ADD S X=CH D ADD
"RTN","XINDX9",45,0)
 I CH1]"",",._=+-*/\#'):<>[]?&!@^"'[CH1 D E^XINDX1(43)
"RTN","XINDX9",46,0)
 Q
"RTN","XINDX9",47,0)
NEW S LL=I+1
"RTN","XINDX9",48,0)
 Q
"RTN","XINDX9",49,0)
AR D STR S X=CH D ADD,NEW Q
"RTN","XINDX9",50,0)
STR S X=$E(STR,LL,I-1) Q:'$L(X)  ;Drop into ADD
"RTN","XINDX9",51,0)
ADD S LI=LI+1,LV(LV,LI)=X Q
"RTN","XINDX9",52,0)
 ;
"RTN","XINDX9",53,0)
FNC(NEW) ;Sets or returns the current function
"RTN","XINDX9",54,0)
 I $D(NEW) S LV(LV+1,"FNC",$G(LI(LV))+1)=NEW Q
"RTN","XINDX9",55,0)
 N W S W=+$S($D(LV(LV,"FNC",LI)):LI,$O(LV(LV,"FNC",LI)):$O(LV(LV,"FNC",LI)),1:$O(LV(LV,"FNC",LI),-1)) ;patch 119
"RTN","XINDX9",56,0)
 Q $G(LV(LV,"FNC",W))
"RTN","XINDX9",57,0)
 ;
"RTN","XINDX9",58,0)
OP(NEW) ;Sets or returns the current operator
"RTN","XINDX9",59,0)
 I $D(NEW) S LV(LV,"OP",LI)=NEW Q
"RTN","XINDX9",60,0)
 N W S W=+$S($D(LV(LV,"OP",LI)):LI,1:$O(LV(LV,"OP",LI),-1))
"RTN","XINDX9",61,0)
 Q $G(LV(LV,"OP",W))
"RTN","XINDX9",62,0)
 ;
"RTN","XINDX9",63,0)
QUOTE F I=I+1:1 S CH=$E(STR,I) Q:CH=""!(CH=Q)
"RTN","XINDX9",64,0)
 I $E(STR,I+1)=Q S I=I+1 G QUOTE
"RTN","XINDX9",65,0)
 I OP'="?",$E(STR,I+1)]"","[]()<>\/+-=&!_#*,:'|"'[$E(STR,I+1) D E^XINDX1(46) Q
"RTN","XINDX9",66,0)
 Q:CH]""  D E^XINDX1(6)
"RTN","XINDX9",67,0)
 Q
"RTN","XINDX9",68,0)
 ;
"RTN","XINDX9",69,0)
GVAR() ;EF get var
"RTN","XINDX9",70,0)
 N % D VAR S %=$E(STR,LL,I),LL=I+1
"RTN","XINDX9",71,0)
 Q %
"RTN","XINDX9",72,0)
 ;
"RTN","XINDX9",73,0)
OBJ ;check Cache Object
"RTN","XINDX9",74,0)
 S J=$E(STR,I,I+7),J=$$CASE(J) I J'="##CLASS(" D E^XINDX1(3) Q
"RTN","XINDX9",75,0)
 S LL=I,I=I+7,CH=$E(STR,I) D SUM("F"),DN
"RTN","XINDX9",76,0)
 ;get the class
"RTN","XINDX9",77,0)
 S LL=I+1,I=$$CLS(LL),CH=$E(STR,I),CH1=$E(STR,I+1),LV(LV,"OBJ",LI+1)=""
"RTN","XINDX9",78,0)
 D SUM("O"),UP
"RTN","XINDX9",79,0)
 ;get the method, must start with "."
"RTN","XINDX9",80,0)
 Q:CH1'="."
"RTN","XINDX9",81,0)
 S LL=I+1,J=$$CLS(LL),I=J-1,LV(LV,"OBJ",LI+1)=""
"RTN","XINDX9",82,0)
 D SUM("O")
"RTN","XINDX9",83,0)
 Q
"RTN","XINDX9",84,0)
 ;
"RTN","XINDX9",85,0)
CLS(I) ;return the position of the class
"RTN","XINDX9",86,0)
 N %
"RTN","XINDX9",87,0)
 F %=I:1 S CH=$E(STR,%) Q:"()"[CH
"RTN","XINDX9",88,0)
 Q %
"RTN","XINDX9",89,0)
 ;
"RTN","XINDX9",90,0)
OBJF() ; return line where object has an open "(" for parameters
"RTN","XINDX9",91,0)
 N %
"RTN","XINDX9",92,0)
 Q:LV<2 0  ;must be down at least 1 level
"RTN","XINDX9",93,0)
 S %=$O(LV(LV-1,"OBJ",""),-1) ;find last object at previous level
"RTN","XINDX9",94,0)
 Q $S('%:0,LV(LV-1,%+1)="(":%,1:0) ; returns 0 if can't find object or object has no parameter
"RTN","XINDX9",95,0)
 ;
"RTN","XINDX9",96,0)
VAR1 ;check if var is Object
"RTN","XINDX9",97,0)
 N % S %=0
"RTN","XINDX9",98,0)
 ;check of var is passed by ref.
"RTN","XINDX9",99,0)
 I CH=".",",("[CHO D AR Q
"RTN","XINDX9",100,0)
 F J=I+1:1 S CH=$E(STR,J) I CH'?1AN Q:CH'="."  S %=1
"RTN","XINDX9",101,0)
 G:'% VAR
"RTN","XINDX9",102,0)
 ;save summary and ref. of Object/method
"RTN","XINDX9",103,0)
 S LL=I,I=J-1,LV(LV,"OBJ",LI+1)=""
"RTN","XINDX9",104,0)
 D SUM("O")
"RTN","XINDX9",105,0)
 Q
"RTN","XINDX9",106,0)
VAR ;find length of var. and reset I
"RTN","XINDX9",107,0)
 F J=I+1:1 S CH=$E(STR,J) Q:CH'?1AN
"RTN","XINDX9",108,0)
 S I=J-1 D SUM("V")
"RTN","XINDX9",109,0)
 Q
"RTN","XINDX9",110,0)
NUM F J=I+1:1 S CH=$E(STR,J) Q:"0123456789."'[CH!(CH="")
"RTN","XINDX9",111,0)
 I CH="E" S CH=$E(STR,J+1) I CH?1N!("+-"[CH) S I=J G NUM
"RTN","XINDX9",112,0)
 I CH]"",CH'?1P S ERR=53 D ^XINDX1
"RTN","XINDX9",113,0)
 S I=J-1 D SUM("N")
"RTN","XINDX9",114,0)
 Q
"RTN","XINDX9",115,0)
INC S I=I+1,CH=$E(STR,I)
"RTN","XINDX9",116,0)
 Q
"RTN","XINDX9",117,0)
FUNC ;Functions and special var's.
"RTN","XINDX9",118,0)
 ;check if $SYSTEM
"RTN","XINDX9",119,0)
 I $$CASE($E(STR,I,I+6))="$SYSTEM" G SYS
"RTN","XINDX9",120,0)
 D INC S X=CH,S=$$GVAR()
"RTN","XINDX9",121,0)
 G EXT:S["$$",PKG:S["$&",SPV:CH'="("
"RTN","XINDX9",122,0)
 I "ZV"[X S ERR=$S("Z"[X:31,1:27) D ^XINDX1
"RTN","XINDX9",123,0)
 S S=$$CASE($E(S,2,11)),F1=$G(IND("FNC",S)) I '$L(F1) D E^XINDX1(3) S F1=S G FX
"RTN","XINDX9",124,0)
 ;$S only function that must contain a colon in each argument
"RTN","XINDX9",125,0)
 I F1["SELECT" S LV(LV+1,"SEL")="1^1"
"RTN","XINDX9",126,0)
FX S X="$"_F1,CH="" D FNC("$F"),ADD,SUM("F")
"RTN","XINDX9",127,0)
 Q
"RTN","XINDX9",128,0)
SPV S X=S D FNC("$V"),ADD,SUM("V") S X=$E(S,2,10),CH="" ;P132 support of $PRINCIPAL, 10 characters
"RTN","XINDX9",129,0)
 I $E(S,2)="Z" D E^XINDX1(28) Q
"RTN","XINDX9",130,0)
 I '$D(IND("SVN",X)) D E^XINDX1(4)
"RTN","XINDX9",131,0)
 Q
"RTN","XINDX9",132,0)
EXT ;EXTRINSIC
"RTN","XINDX9",133,0)
 S X=S,CH="" D FNC("$$"),ADD,SUM("V")
"RTN","XINDX9",134,0)
 Q
"RTN","XINDX9",135,0)
SYS ;$SYSTEM class or SVN
"RTN","XINDX9",136,0)
 S LL=I,I=I+6 D INC
"RTN","XINDX9",137,0)
 I CH'="." D SUM("V") Q  ;SVN
"RTN","XINDX9",138,0)
 S I=LL,CH="" D VAR1
"RTN","XINDX9",139,0)
 ;Error 54 access for Kernel only
"RTN","XINDX9",140,0)
 S CH="" D E^XINDX1(54)
"RTN","XINDX9",141,0)
 Q
"RTN","XINDX9",142,0)
SSVN ;
"RTN","XINDX9",143,0)
 D INC S X=$$GVAR() I '$D(IND("SSVN",$E(X,3,99))) D E^XINDX1(4) Q
"RTN","XINDX9",144,0)
 ;Error 54 access for Kernel only
"RTN","XINDX9",145,0)
 D E^XINDX1(54),ADD,SUM("V")
"RTN","XINDX9",146,0)
 Q
"RTN","XINDX9",147,0)
PKG ;External Function
"RTN","XINDX9",148,0)
 S J=$F(STR,"(",I),I=J-2,X=S_$E(STR,LL,I),LL=J-1,CH=""
"RTN","XINDX9",149,0)
 D ADD,E^XINDX1(55) ;Not standard VA
"RTN","XINDX9",150,0)
 Q
"RTN","XINDX9",151,0)
E D E^XINDX1(11)
"RTN","XINDX9",152,0)
 Q
"RTN","XINDX9",153,0)
PAT N PC S PC=0
"RTN","XINDX9",154,0)
 F I=I+1:1 S CH=$E(STR,I) D PATQ:CH=Q,PATD:CH="(",PATU:CH=")",PATC:CH="," I CH=""!(CH'?1N&("ACELNPUacelnpu."'[CH)) Q
"RTN","XINDX9",155,0)
 I PC D E^XINDX1(5)
"RTN","XINDX9",156,0)
 S I=I-1 I ":),@+-_*/\!&'"'[CH D E^XINDX1(16),SEP Q
"RTN","XINDX9",157,0)
 Q
"RTN","XINDX9",158,0)
 ;Quote in Pattern
"RTN","XINDX9",159,0)
PATQ F I=I+1:1 S CH=$E(STR,I) Q:CH=""!(CH=Q)
"RTN","XINDX9",160,0)
 D:CH="" E^XINDX1(6) S I=I+1,CH=$E(STR,I) G:CH=Q PATQ
"RTN","XINDX9",161,0)
 Q
"RTN","XINDX9",162,0)
PATD S PC=PC+1,CH="." ;p110 Start Alt.
"RTN","XINDX9",163,0)
 Q
"RTN","XINDX9",164,0)
PATU I 'PC,LV>1 S CH="" Q  ;End
"RTN","XINDX9",165,0)
 S PC=PC-1,CH="." ;p110 End Alt.
"RTN","XINDX9",166,0)
 Q
"RTN","XINDX9",167,0)
PATC I PC<1 Q  ;
"RTN","XINDX9",168,0)
 S CH="." ;p110 Comma in Alt.
"RTN","XINDX9",169,0)
 Q
"RTN","XINDX9",170,0)
PAREN F I=I+1:1 S CH=$E(STR,I) Q:CH=""!(CH=")")
"RTN","XINDX9",171,0)
 D:CH="" E^XINDX1(5) S CH="."
"RTN","XINDX9",172,0)
 Q
"RTN","XINDX9",173,0)
SEP ;Find sep
"RTN","XINDX9",174,0)
 Q
"RTN","XINDX9",175,0)
 ;
"RTN","XINDX9",176,0)
SUM(P) ;Build summary line
"RTN","XINDX9",177,0)
 S LV(LV,"S")=$G(LV(LV,"S"))_P
"RTN","XINDX9",178,0)
 Q
"RTN","XINDX9",179,0)
CASE(%) ;UpperCase
"RTN","XINDX9",180,0)
 Q $TR(%,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","XINDX9",181,0)
 ;
"RTN","XINDX9",182,0)
TEST S STR=$E($T(TEST+2),4,999) D XINDX9
"RTN","XINDX9",183,0)
 Q
"RTN","XINDX9",184,0)
 ;;NUMVAL?.1(1"+",1"-")1(1.N.1".".N,.N.1"."1.N).1(1"E".1(1"+",1"-")1.N)
"RTN","XT73P133")
0^8^B650871^n/a
"RTN","XT73P133",1,0)
XT73P133 ;RSD/OAKLAND - Test Routine for XT*7.3*133
"RTN","XT73P133",2,0)
 ;;7.3;TOOLKIT;**133**;Apr 25, 1995;Build 15
"RTN","XT73P133",3,0)
 ;This routine is only to test XINDEX for patch 133. It contains several
"RTN","XT73P133",4,0)
 ; different formats for Cache Objects.
"RTN","XT73P133",5,0)
 Q
"RTN","XT73P133",6,0)
 SET STATUS=##class(%XML.TextReader).ParseStream(STREAM,.READER,,,,,1)
"RTN","XT73P133",7,0)
 SET XOBSTAT=$System.OBJ.DeletePackage("xobw")
"RTN","XT73P133",8,0)
 SET XOBSTRM=##class(%FileCharacterStream).%New()
"RTN","XT73P133",9,0)
 SET X=XOBSTRM.ReadLine(XOBJECT)
"RTN","XT73P133",10,0)
 DO $System.OBJ.DisplayError(%OBJLASTERROR)
"RTN","XT73P133",11,0)
 Q
"VER")
8.0^22.0
"BLD",1438,6)
^108
**END**
**END**
