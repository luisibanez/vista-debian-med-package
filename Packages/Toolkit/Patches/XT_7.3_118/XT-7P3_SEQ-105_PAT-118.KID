Released XT*7.3*118 SEQ #105
Extracted from mail message
**KIDS**:XT*7.3*118^

**INSTALL NAME**
XT*7.3*118
"BLD",1192,0)
XT*7.3*118^TOOLKIT^0^3100414^y
"BLD",1192,1,0)
^^3^3^3081211^
"BLD",1192,1,1,0)
Please see the patch description on FORUM, in the National
"BLD",1192,1,2,0)
 Patch Module.
"BLD",1192,1,3,0)

"BLD",1192,4,0)
^9.64PA^^
"BLD",1192,6.3)
5
"BLD",1192,"ABPKG")
n
"BLD",1192,"KRN",0)
^9.67PA^9002226^21
"BLD",1192,"KRN",.4,0)
.4
"BLD",1192,"KRN",.401,0)
.401
"BLD",1192,"KRN",.402,0)
.402
"BLD",1192,"KRN",.403,0)
.403
"BLD",1192,"KRN",.5,0)
.5
"BLD",1192,"KRN",.84,0)
.84
"BLD",1192,"KRN",3.6,0)
3.6
"BLD",1192,"KRN",3.8,0)
3.8
"BLD",1192,"KRN",9.2,0)
9.2
"BLD",1192,"KRN",9.8,0)
9.8
"BLD",1192,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",1192,"KRN",9.8,"NM",1,0)
XPAREDIT^^0^B13971261
"BLD",1192,"KRN",9.8,"NM",2,0)
XPAR1^^0^B14870924
"BLD",1192,"KRN",9.8,"NM","B","XPAR1",2)

"BLD",1192,"KRN",9.8,"NM","B","XPAREDIT",1)

"BLD",1192,"KRN",19,0)
19
"BLD",1192,"KRN",19.1,0)
19.1
"BLD",1192,"KRN",101,0)
101
"BLD",1192,"KRN",409.61,0)
409.61
"BLD",1192,"KRN",771,0)
771
"BLD",1192,"KRN",779.2,0)
779.2
"BLD",1192,"KRN",870,0)
870
"BLD",1192,"KRN",8989.51,0)
8989.51
"BLD",1192,"KRN",8989.52,0)
8989.52
"BLD",1192,"KRN",8994,0)
8994
"BLD",1192,"KRN",9002226,0)
9002226
"BLD",1192,"KRN","B",.4,.4)

"BLD",1192,"KRN","B",.401,.401)

"BLD",1192,"KRN","B",.402,.402)

"BLD",1192,"KRN","B",.403,.403)

"BLD",1192,"KRN","B",.5,.5)

"BLD",1192,"KRN","B",.84,.84)

"BLD",1192,"KRN","B",3.6,3.6)

"BLD",1192,"KRN","B",3.8,3.8)

"BLD",1192,"KRN","B",9.2,9.2)

"BLD",1192,"KRN","B",9.8,9.8)

"BLD",1192,"KRN","B",19,19)

"BLD",1192,"KRN","B",19.1,19.1)

"BLD",1192,"KRN","B",101,101)

"BLD",1192,"KRN","B",409.61,409.61)

"BLD",1192,"KRN","B",771,771)

"BLD",1192,"KRN","B",779.2,779.2)

"BLD",1192,"KRN","B",870,870)

"BLD",1192,"KRN","B",8989.51,8989.51)

"BLD",1192,"KRN","B",8989.52,8989.52)

"BLD",1192,"KRN","B",8994,8994)

"BLD",1192,"KRN","B",9002226,9002226)

"BLD",1192,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",1192,"QUES",0)
^9.62^^
"BLD",1192,"REQB",0)
^9.611^1^1
"BLD",1192,"REQB",1,0)
XT*7.3*26^2
"BLD",1192,"REQB","B","XT*7.3*26",1)

"MBREQ")
0
"PKG",6,-1)
1^1
"PKG",6,0)
TOOLKIT^XT^PROGRAMMERS OPTIONS, MULTI. TERM LOOKUP^
"PKG",6,20,0)
^9.402P^^0
"PKG",6,22,0)
^9.49I^1^1
"PKG",6,22,1,0)
7.3^3040428^2970513^2
"PKG",6,22,1,"PAH",1,0)
118^3100414
"PKG",6,22,1,"PAH",1,1,0)
^^3^3^3100414
"PKG",6,22,1,"PAH",1,1,1,0)
Please see the patch description on FORUM, in the National
"PKG",6,22,1,"PAH",1,1,2,0)
 Patch Module.
"PKG",6,22,1,"PAH",1,1,3,0)

"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","XPAR1")
0^2^B14870924^B14526151
"RTN","XPAR1",1,0)
XPAR1 ; SLC/KCM - Supporting Calls - Validate;03:32 PM  22 Apr 1998
"RTN","XPAR1",2,0)
 ;;7.3;TOOLKIT;**26,118**;Apr 25, 1995;Build 5
"RTN","XPAR1",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XPAR1",4,0)
 ;
"RTN","XPAR1",5,0)
INTERN ;convert ENT, PAR, and INST to internal form - called from XPAR only
"RTN","XPAR1",6,0)
 ;  ENT: entity in external or internal form
"RTN","XPAR1",7,0)
 ;  PAR: parameter in external or internal form
"RTN","XPAR1",8,0)
 ; INST: instance in external or internal form, or null
"RTN","XPAR1",9,0)
 ;       (may be null when retrieving all instances)
"RTN","XPAR1",10,0)
 ;  ERR: returns error (0 if none, otherwise #^error text)
"RTN","XPAR1",11,0)
 ; -- parameter
"RTN","XPAR1",12,0)
 I 'PAR S PAR=+$O(^XTV(8989.51,"B",PAR,0))
"RTN","XPAR1",13,0)
 ; -- instance
"RTN","XPAR1",14,0)
 I $D(XPARCHK) D VALID^XPARDD(PAR,.INST,"I",.ERR) Q:ERR
"RTN","XPAR1",15,0)
 ; -- entity   formats are:  nnn;GLO(  vptr int
"RTN","XPAR1",16,0)
 ;                           PRE.NAME  vptr ext
"RTN","XPAR1",17,0)
 ;                           PRE.`nnn  vptr ien
"RTN","XPAR1",18,0)
 ;                           PRE       default
"RTN","XPAR1",19,0)
 ;                           ALL       search chain
"RTN","XPAR1",20,0)
 ; begin case
"RTN","XPAR1",21,0)
 I ($L(ENT,"^")>1)!(ENT="ALL") D ENTLST(.ENT,PAR,INST) G C1
"RTN","XPAR1",22,0)
 I ENT?3U D ENTDFLT(.ENT) G C1         ;resolve default entity
"RTN","XPAR1",23,0)
 I '(+ENT&(ENT[";")) D ENTEXT(.ENT) D:ENT=""  G C1 ;resolve external vptr fmt
"RTN","XPAR1",24,0)
 . S ERR=$$ERR^XPARDD(89895012) ;ENT didn't resolve, set error
"RTN","XPAR1",25,0)
C1 ; end case
"RTN","XPAR1",26,0)
 ; by this time, ENT should be in internal variable ptr format
"RTN","XPAR1",27,0)
 I '$D(XPARGET) D                      ;tighter checks when storing data
"RTN","XPAR1",28,0)
 . I '(+ENT&(ENT[";")) S ERR=$$ERR^XPARDD(89895011) Q        ;not VP fmt
"RTN","XPAR1",29,0)
 . I $D(@("^"_$P(ENT,";",2)_$P(ENT,";",1)_")"))'>1 D  Q    ;not found
"RTN","XPAR1",30,0)
 . . S ERR=$$ERR^XPARDD(89895012)
"RTN","XPAR1",31,0)
 Q
"RTN","XPAR1",32,0)
ENTEXT(ENT) ; change entity from external form (PRE.NAME) to VP form
"RTN","XPAR1",33,0)
 ; .ENT: entity in external VP form
"RTN","XPAR1",34,0)
 ;  .FN: optionally returns file number for entity
"RTN","XPAR1",35,0)
 I ENT'["." S ENT="" Q
"RTN","XPAR1",36,0)
 N FN,PRE,X
"RTN","XPAR1",37,0)
 S PRE=$P(ENT,".",1),X=$P(ENT,".",2,$L(ENT,".")),ENT=""
"RTN","XPAR1",38,0)
 S FN=$O(^XTV(8989.518,"C",PRE,0))
"RTN","XPAR1",39,0)
 I $E(X)="`" S ENT=+$E(X,2,99)_$$MAKEVP(FN) Q
"RTN","XPAR1",40,0)
 S ENT=$$FIND1^DIC(FN,"","X",X)_$$MAKEVP(FN)
"RTN","XPAR1",41,0)
 I 'ENT S ENT=""
"RTN","XPAR1",42,0)
 Q
"RTN","XPAR1",43,0)
ENTDFLT(ENT) ; change default form (prefix only) to actual value in VP format
"RTN","XPAR1",44,0)
 ; .ENT: entity prefix only
"RTN","XPAR1",45,0)
 ; XPARSYS should be a system wide variable, identifies current domain
"RTN","XPAR1",46,0)
 I ENT="SYS" D:'$D(XPARSYS)  S ENT=XPARSYS Q  ; current site
"RTN","XPAR1",47,0)
 . S XPARSYS=$$FIND1^DIC(4.2,"","QX",$$KSP^XUPARAM("WHERE"))_";DIC(4.2,"
"RTN","XPAR1",48,0)
 I ENT="USR" S ENT=DUZ_";VA(200," Q    ; user in DUZ
"RTN","XPAR1",49,0)
 I ENT="CLS" S ENT="" Q                ; no default
"RTN","XPAR1",50,0)
 I ENT="TEA" S ENT="" Q                ; no default
"RTN","XPAR1",51,0)
 I ENT="BED" S ENT="" Q                ; no default
"RTN","XPAR1",52,0)
 I ENT="LOC" S ENT="" Q                ; no default
"RTN","XPAR1",53,0)
 I ENT="SRV" S ENT="" Q                ; no default
"RTN","XPAR1",54,0)
 I ENT="DIV" D  Q                      ; division in DUZ(2)
"RTN","XPAR1",55,0)
 . S ENT="" I +DUZ(2) S ENT=DUZ(2)_";DIC(4,"
"RTN","XPAR1",56,0)
 I ENT="PKG" D  Q                      ; package of param namespace
"RTN","XPAR1",57,0)
 . N PKG,NAM
"RTN","XPAR1",58,0)
 . S NAM=$P(^XTV(8989.51,PAR,0),"^",1),PKG=NAM
"RTN","XPAR1",59,0)
 . F  S PKG=$O(^DIC(9.4,"C",PKG),-1) Q:$E(NAM,1,$L(PKG))=PKG
"RTN","XPAR1",60,0)
 . S PKG=$O(^DIC(9.4,"C",PKG,0))
"RTN","XPAR1",61,0)
 . I PKG S ENT=PKG_";DIC(9.4,"
"RTN","XPAR1",62,0)
 Q
"RTN","XPAR1",63,0)
ENTLST(ENT,PAR,INST) ; resolve entity list to entity with highest precedence
"RTN","XPAR1",64,0)
 ; .ENT: multiple entity pieces or keyword 'ALL'
"RTN","XPAR1",65,0)
 ;  PAR: parameter IEN
"RTN","XPAR1",66,0)
 ; INST: instance (may be null)
"RTN","XPAR1",67,0)
 I $E(ENT,1,3)="ALL" D
"RTN","XPAR1",68,0)
 . N FND,IEN,FN,GREF,LIST,I,X
"RTN","XPAR1",69,0)
 . ; set up list of entity values that were passed in
"RTN","XPAR1",70,0)
 . F I=2:1:$L(ENT,"^") S X=$P(ENT,"^",I) I $L(X) D
"RTN","XPAR1",71,0)
 . . I $D(^XTV(8989.518,"C",X)) D ENTDFLT(.X)
"RTN","XPAR1",72,0)
 . . I '(+X&(X[";")) D ENTEXT(.X)
"RTN","XPAR1",73,0)
 . . S GREF=$P(X,";",2) Q:GREF=""
"RTN","XPAR1",74,0)
 . . I $D(^XTV(8989.51,PAR,30,"AG",GREF)) S IEN=$O(^(GREF,0)) D
"RTN","XPAR1",75,0)
 . . . S LIST($P(^XTV(8989.51,PAR,30,IEN,0),"^",2))=X
"RTN","XPAR1",76,0)
 . ; using precedence defined for parameter, look up entities
"RTN","XPAR1",77,0)
 . S I=0,FND=0
"RTN","XPAR1",78,0)
 . F  S I=$O(^XTV(8989.51,PAR,30,"B",I)) Q:'I  S IEN=$O(^(I,0)) D  Q:FND
"RTN","XPAR1",79,0)
 . . S FN=$P(^XTV(8989.51,PAR,30,IEN,0),"^",2),X=$G(LIST(FN))
"RTN","XPAR1",80,0)
 . . I '$L(X) S X=$P(^XTV(8989.518,FN,0),U,2) D ENTDFLT(.X)
"RTN","XPAR1",81,0)
 . . I $L(X),'$L(INST),$D(^XTV(8989.5,"AC",PAR,X)) S ENT=X,FND=1 Q
"RTN","XPAR1",82,0)
 . . I $L(X),$L(INST),$D(^XTV(8989.5,"AC",PAR,X,INST)) S ENT=X,FND=1 Q
"RTN","XPAR1",83,0)
 E  D
"RTN","XPAR1",84,0)
 . ; use only entity values that were passed in
"RTN","XPAR1",85,0)
 . N I,FND
"RTN","XPAR1",86,0)
 . S FND=0
"RTN","XPAR1",87,0)
 . F I=1:1:$L(ENT,"^") S X=$P(ENT,"^",I) I $L(X) D  Q:FND
"RTN","XPAR1",88,0)
 . . I $D(^XTV(8989.518,"C",X)) D ENTDFLT(.X)
"RTN","XPAR1",89,0)
 . . I '(+X&(X[";")) D ENTEXT(.X)
"RTN","XPAR1",90,0)
 . . I $L(X),'$L(INST),$D(^XTV(8989.5,"AC",PAR,X)) S ENT=X,FND=1 Q
"RTN","XPAR1",91,0)
 . . I $L(X),$L(INST),$D(^XTV(8989.5,"AC",PAR,X,INST)) S ENT=X,FND=1 Q
"RTN","XPAR1",92,0)
 Q
"RTN","XPAR1",93,0)
MAKEVP(FN) ; function - returns VP suffix given file number
"RTN","XPAR1",94,0)
 ; N Y
"RTN","XPAR1",95,0)
 ; D FILE^DID(FN,"","GLOBAL NAME","Y")
"RTN","XPAR1",96,0)
 ; Q ";"_$P($G(Y("GLOBAL NAME")),"^",2)
"RTN","XPAR1",97,0)
 Q ";"_$P($G(^DIC(FN,0,"GL")),U,2)
"RTN","XPAREDIT")
0^1^B13971261^B13536584
"RTN","XPAREDIT",1,0)
XPAREDIT ; SLC/KCM - Simple Parameter Editor ;11:15 PM  4 Feb 1998
"RTN","XPAREDIT",2,0)
 ;;7.3;TOOLKIT;**26,118**;Apr 25, 1995;Build 5
"RTN","XPAREDIT",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XPAREDIT",4,0)
 ;
"RTN","XPAREDIT",5,0)
EN ; Enter here to select parameter, then entity
"RTN","XPAREDIT",6,0)
 ; ENT: variable pointer to the entity selected
"RTN","XPAREDIT",7,0)
 ; PAR: IEN^NAME of the selected parameter
"RTN","XPAREDIT",8,0)
 W !,?25,"--- Edit Parameter Values ---"
"RTN","XPAREDIT",9,0)
 N ENT,PAR,LST,JUST1,DIRUT,DUOUT,DTOUT
"RTN","XPAREDIT",10,0)
 F  W ! D GETPAR(.PAR) Q:'PAR  D  W !,$$DASH($S($D(IOM):IOM-1,1:78))
"RTN","XPAREDIT",11,0)
 . D BLDLST(.LST,PAR)
"RTN","XPAREDIT",12,0)
 . F  D GETENT(.ENT,PAR,.JUST1) Q:'ENT  D EDIT(ENT,PAR) Q:JUST1
"RTN","XPAREDIT",13,0)
 Q
"RTN","XPAREDIT",14,0)
TED(TLT,SHWFLG,ALLENT) ; Edit parameters using a template
"RTN","XPAREDIT",15,0)
 G TED^XPAREDT3
"RTN","XPAREDIT",16,0)
 ;
"RTN","XPAREDIT",17,0)
TEDH(TLT,SHWFLG,ALLENT) ; Edit parameters using a template, show dash headers
"RTN","XPAREDIT",18,0)
 G TEDH^XPAREDT3
"RTN","XPAREDIT",19,0)
 ;
"RTN","XPAREDIT",20,0)
TEDIT(ENT,PAR,INST,USRX) ; Edit an instance of a parameter
"RTN","XPAREDIT",21,0)
 K Y
"RTN","XPAREDIT",22,0)
 I $G(INST)="" D EDITA S USRX=$G(Y("X")) I 1
"RTN","XPAREDIT",23,0)
 E  D EDIT1^XPAREDT2 S USRX=$G(Y("X"))
"RTN","XPAREDIT",24,0)
 I $E(USRX)=U,$E(USRX,2)'=U,$L(USRX)>1 K DTOUT,DUOUT,DIRUT
"RTN","XPAREDIT",25,0)
 Q
"RTN","XPAREDIT",26,0)
EDITPAR(PAR) ; Edit a single parameter
"RTN","XPAREDIT",27,0)
 ; add second parameter to limit entity type?  ENTTYP
"RTN","XPAREDIT",28,0)
 ; LOC,CLS,TEA,USR,DIV,SVC call LOOKUP with appropriate FN
"RTN","XPAREDIT",29,0)
 ; PKG,SYS figure out appropriate defaults (param nmsp, domain)
"RTN","XPAREDIT",30,0)
 N ENT
"RTN","XPAREDIT",31,0)
 I 'PAR S PAR=$O(^XTV(8989.51,"B",PAR,0))
"RTN","XPAREDIT",32,0)
 S PAR=PAR_U_$P(^XTV(8989.51,PAR,0),U,2)
"RTN","XPAREDIT",33,0)
 ; W $P(PAR,U,2)
"RTN","XPAREDIT",34,0)
 D GETENT(.ENT,PAR) Q:'ENT
"RTN","XPAREDIT",35,0)
 D EDIT(ENT,PAR)
"RTN","XPAREDIT",36,0)
 Q
"RTN","XPAREDIT",37,0)
GETPAR(Y) ; Select parameter to edit
"RTN","XPAREDIT",38,0)
 N DIC,DTOUT,DUOUT,X
"RTN","XPAREDIT",39,0)
 S DIC=8989.51,DIC(0)="AEMQ"
"RTN","XPAREDIT",40,0)
 S DIC("W")="W ""   "",$P(^(0),U,2)"
"RTN","XPAREDIT",41,0)
 D ^DIC I Y<1 S Y=0
"RTN","XPAREDIT",42,0)
 Q
"RTN","XPAREDIT",43,0)
GETENT(ENT,PAR,JUST1) ; Select entity to edit for a given parameter
"RTN","XPAREDIT",44,0)
 ; .ENT=entity, returned as variable pointer
"RTN","XPAREDIT",45,0)
 ;  PAR=ien^name
"RTN","XPAREDIT",46,0)
 N X,I,LST
"RTN","XPAREDIT",47,0)
 S JUST1=0
"RTN","XPAREDIT",48,0)
 D BLDLST(.LST,PAR) S ENT=""
"RTN","XPAREDIT",49,0)
 I LST=1 D                                ; if only one class of entity
"RTN","XPAREDIT",50,0)
 . S X=LST($O(LST(0))),ENT=$P(X,U,5)            ; instance for entity
"RTN","XPAREDIT",51,0)
 . I ENT S JUST1=1 Q                            ;   is fixed entry
"RTN","XPAREDIT",52,0)
 . I 'ENT D LOOKUP(.ENT,+X)                     ; not fixed - do lookup
"RTN","XPAREDIT",53,0)
 E  D                                     ; otherwise
"RTN","XPAREDIT",54,0)
 . D GETCLS(.X,PAR,.LST)                        ; choose class
"RTN","XPAREDIT",55,0)
 . I 'X S ENT="" Q                              ; nothing selected
"RTN","XPAREDIT",56,0)
 . I +X&(X[";") S ENT=X Q                       ; resolved VP returned
"RTN","XPAREDIT",57,0)
 . I $L($P(LST(X),U,5)) S ENT=$P(LST(X),U,5) Q  ; fixed instance
"RTN","XPAREDIT",58,0)
 . S ENT="" D LOOKUP(.ENT,+LST(X))              ; lookup on selected file
"RTN","XPAREDIT",59,0)
 Q
"RTN","XPAREDIT",60,0)
EDIT(ENT,PAR) ; Edit value(s) for entity/parameter
"RTN","XPAREDIT",61,0)
 N INST,X,Y
"RTN","XPAREDIT",62,0)
EDITA ; come here from TEDIT
"RTN","XPAREDIT",63,0)
 N ERR,INSTLST
"RTN","XPAREDIT",64,0)
 I '$D(NOHDR) W !!,$$CENTER("Setting "_$P(PAR,U,2)_" "_$$ENTDISP(ENT))
"RTN","XPAREDIT",65,0)
 I +$P(^XTV(8989.51,+PAR,0),U,3) F  D  Q:'$L(INST)!$D(DIRUT)  ; multiple
"RTN","XPAREDIT",66,0)
 . I $D(NOHDR) W !!,"For "_$P(PAR,U,2)_" -"
"RTN","XPAREDIT",67,0)
 . ; D SHWINST^XPAREDT2(ENT,+PAR,$S($D(IOSL):IOSL-4,1:20),0,.INSTLST)
"RTN","XPAREDIT",68,0)
 . D SELINST^XPAREDT2(.INST,ENT,+PAR) M Y=INST Q:'$L(INST)
"RTN","XPAREDIT",69,0)
 . W ! S Y="" D EDITVAL^XPAREDT2(.Y,+PAR,"I",INST) Q:(Y="")!($E(Y)=U)
"RTN","XPAREDIT",70,0)
 . I Y="@" D DEL^XPAR(ENT,+PAR,$P(INST,U),.ERR) D  Q
"RTN","XPAREDIT",71,0)
 . . I ERR W $$ERR^XPAREDT2 Q
"RTN","XPAREDIT",72,0)
 . . W "  ...deleted"
"RTN","XPAREDIT",73,0)
 . I $P(Y,U)'=$P(INST,U) D  I ERR W $$ERR^XPAREDT2 Q
"RTN","XPAREDIT",74,0)
 . . D REP^XPAR(ENT,+PAR,$P(INST,U),$P(Y,U),.ERR) S INST=Y
"RTN","XPAREDIT",75,0)
 . W "   ",$P(INST,U,2) D EDIT1^XPAREDT2
"RTN","XPAREDIT",76,0)
 E  S INST="1^1" D EDIT1^XPAREDT2 ;W ! before    ; single valued
"RTN","XPAREDIT",77,0)
 K ^TMP($J,"XPARWP")
"RTN","XPAREDIT",78,0)
 Q
"RTN","XPAREDIT",79,0)
BLDLST(LST,PAR) ; Build list of entities allowed for this parameter
"RTN","XPAREDIT",80,0)
 G BLDLST^XPAREDT1
"RTN","XPAREDIT",81,0)
 ;
"RTN","XPAREDIT",82,0)
GETCLS(X,PAR,LST) ; Choose the class of entity
"RTN","XPAREDIT",83,0)
 G GETCLS^XPAREDT1
"RTN","XPAREDIT",84,0)
 ;
"RTN","XPAREDIT",85,0)
LOOKUP(X,FN) ; Lookup entry in a file and return selection as varptr
"RTN","XPAREDIT",86,0)
 ; if X has data, pass that into lookup silently
"RTN","XPAREDIT",87,0)
 N DIC,DTOUT,DUOUT
"RTN","XPAREDIT",88,0)
 S DIC=FN
"RTN","XPAREDIT",89,0)
 S:$L(X) DIC(0)="M" S:'$L(X) DIC(0)="AEMQ"
"RTN","XPAREDIT",90,0)
 D ^DIC I $D(DTOUT)!$D(DUOUT)!(Y<1) S X="" Q
"RTN","XPAREDIT",91,0)
 S X=+Y_";"_$E(^DIC(FN,0,"GL"),2,999)
"RTN","XPAREDIT",92,0)
 Q
"RTN","XPAREDIT",93,0)
ENTDISP(ENT) ; function - returns text descriptor of an entity
"RTN","XPAREDIT",94,0)
 Q:'ENT ""
"RTN","XPAREDIT",95,0)
 N X,FN
"RTN","XPAREDIT",96,0)
 S FN=+$P(@(U_$P(ENT,";",2)_"0)"),U,2),X=$P(^XTV(8989.518,FN,0),U,3)
"RTN","XPAREDIT",97,0)
 S X=" for "_X_": "_$$EXTPTR^XPARDD(+ENT,FN)
"RTN","XPAREDIT",98,0)
 Q X
"RTN","XPAREDIT",99,0)
CENTER(X) ; function - writes a centered title with dashes on either side
"RTN","XPAREDIT",100,0)
 N I,MAR
"RTN","XPAREDIT",101,0)
 S MAR=(($S($D(IOM):IOM,1:80)-$L(X))\2)-2
"RTN","XPAREDIT",102,0)
 Q $$DASH(MAR)_" "_X_" "_$$DASH(MAR)
"RTN","XPAREDIT",103,0)
DASH(N) ; function - returns N dashes
"RTN","XPAREDIT",104,0)
 N I,X
"RTN","XPAREDIT",105,0)
 S X="" F I=1:1:N S X=X_"-"
"RTN","XPAREDIT",106,0)
 Q X
"VER")
8.0^22.0
"BLD",1192,6)
^105
**END**
**END**
