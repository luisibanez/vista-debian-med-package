Released XT*7.3*128 SEQ #100
Extracted from mail message
**KIDS**:XT*7.3*128^

**INSTALL NAME**
XT*7.3*128
"BLD",1330,0)
XT*7.3*128^TOOLKIT^0^3101103^y
"BLD",1330,1,0)
^^2^2^3101006^
"BLD",1330,1,1,0)
Please see the patch description on FORUM, in the National Patch Module.
"BLD",1330,1,2,0)

"BLD",1330,4,0)
^9.64PA^^
"BLD",1330,6.3)
1
"BLD",1330,"KRN",0)
^9.67PA^9002226^21
"BLD",1330,"KRN",.4,0)
.4
"BLD",1330,"KRN",.401,0)
.401
"BLD",1330,"KRN",.402,0)
.402
"BLD",1330,"KRN",.403,0)
.403
"BLD",1330,"KRN",.5,0)
.5
"BLD",1330,"KRN",.84,0)
.84
"BLD",1330,"KRN",3.6,0)
3.6
"BLD",1330,"KRN",3.8,0)
3.8
"BLD",1330,"KRN",9.2,0)
9.2
"BLD",1330,"KRN",9.8,0)
9.8
"BLD",1330,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",1330,"KRN",9.8,"NM",1,0)
XINDEX^^0^B30427549
"BLD",1330,"KRN",9.8,"NM",2,0)
XINDX1^^0^B18451520
"BLD",1330,"KRN",9.8,"NM",3,0)
XINDX3^^0^B12749285
"BLD",1330,"KRN",9.8,"NM",4,0)
XINDX4^^0^B13667786
"BLD",1330,"KRN",9.8,"NM","B","XINDEX",1)

"BLD",1330,"KRN",9.8,"NM","B","XINDX1",2)

"BLD",1330,"KRN",9.8,"NM","B","XINDX3",3)

"BLD",1330,"KRN",9.8,"NM","B","XINDX4",4)

"BLD",1330,"KRN",19,0)
19
"BLD",1330,"KRN",19.1,0)
19.1
"BLD",1330,"KRN",101,0)
101
"BLD",1330,"KRN",409.61,0)
409.61
"BLD",1330,"KRN",771,0)
771
"BLD",1330,"KRN",779.2,0)
779.2
"BLD",1330,"KRN",870,0)
870
"BLD",1330,"KRN",8989.51,0)
8989.51
"BLD",1330,"KRN",8989.52,0)
8989.52
"BLD",1330,"KRN",8994,0)
8994
"BLD",1330,"KRN",9002226,0)
9002226
"BLD",1330,"KRN","B",.4,.4)

"BLD",1330,"KRN","B",.401,.401)

"BLD",1330,"KRN","B",.402,.402)

"BLD",1330,"KRN","B",.403,.403)

"BLD",1330,"KRN","B",.5,.5)

"BLD",1330,"KRN","B",.84,.84)

"BLD",1330,"KRN","B",3.6,3.6)

"BLD",1330,"KRN","B",3.8,3.8)

"BLD",1330,"KRN","B",9.2,9.2)

"BLD",1330,"KRN","B",9.8,9.8)

"BLD",1330,"KRN","B",19,19)

"BLD",1330,"KRN","B",19.1,19.1)

"BLD",1330,"KRN","B",101,101)

"BLD",1330,"KRN","B",409.61,409.61)

"BLD",1330,"KRN","B",771,771)

"BLD",1330,"KRN","B",779.2,779.2)

"BLD",1330,"KRN","B",870,870)

"BLD",1330,"KRN","B",8989.51,8989.51)

"BLD",1330,"KRN","B",8989.52,8989.52)

"BLD",1330,"KRN","B",8994,8994)

"BLD",1330,"KRN","B",9002226,9002226)

"BLD",1330,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",1330,"QUES",0)
^9.62^^
"BLD",1330,"REQB",0)
^9.611^1^1
"BLD",1330,"REQB",1,0)
XT*7.3*121^2
"BLD",1330,"REQB","B","XT*7.3*121",1)

"MBREQ")
0
"PKG",6,-1)
1^1
"PKG",6,0)
TOOLKIT^XT^PROGRAMMERS OPTIONS, MULTI. TERM LOOKUP^
"PKG",6,20,0)
^9.402P^^0
"PKG",6,22,0)
^9.49I^1^1
"PKG",6,22,1,0)
7.3^3040428^2970513^2
"PKG",6,22,1,"PAH",1,0)
128^3101103
"PKG",6,22,1,"PAH",1,1,0)
^^2^2^3101103
"PKG",6,22,1,"PAH",1,1,1,0)
Please see the patch description on FORUM, in the National Patch Module.
"PKG",6,22,1,"PAH",1,1,2,0)

"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","XINDEX")
0^1^B30427549^B27883860
"RTN","XINDEX",1,0)
XINDEX ;ISC/REL,GFT,GRK,RWF - INDEX & CROSS-REFERENCE ;08/04/08  13:19
"RTN","XINDEX",2,0)
 ;;7.3;TOOLKIT;**20,27,48,61,66,68,110,121,128**;Apr 25, 1995;Build 1
"RTN","XINDEX",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XINDEX",4,0)
 G ^XINDX6
"RTN","XINDEX",5,0)
SEP F I=1:1 S CH=$E(LIN,I) D QUOTE:CH=Q Q:" "[CH
"RTN","XINDEX",6,0)
 S ARG=$E(LIN,1,I-1) S:CH=" " I=I+1 S LIN=$E(LIN,I,999) Q
"RTN","XINDEX",7,0)
QUOTE F I=I+1:1 S CH=$E(LIN,I) Q:CH=""!(CH=Q)
"RTN","XINDEX",8,0)
 Q:CH]""  S ERR=6 G ^XINDX1
"RTN","XINDEX",9,0)
ALIVE ;enter here from taskman
"RTN","XINDEX",10,0)
 D SETUP^XINDX7 ;Get ready to process
"RTN","XINDEX",11,0)
A2 S RTN=$O(^UTILITY($J,RTN)) G ^XINDX5:RTN=""
"RTN","XINDEX",12,0)
 S INDLC=(RTN?1"|"1.4L.NP) D LOAD:'INDLC
"RTN","XINDEX",13,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S RTN="~",IND("QUIT")=1,ZTSTOP=1 G A2
"RTN","XINDEX",14,0)
 I 'INDDS,INDLC W !!?10,"Data Dictionaries",! S INDDS=1
"RTN","XINDEX",15,0)
 D BEG
"RTN","XINDEX",16,0)
 G A2
"RTN","XINDEX",17,0)
 ;
"RTN","XINDEX",18,0)
LOAD S X=RTN,XCNP=0,DIF="^UTILITY("_$J_",1,RTN,0," X ^%ZOSF("TEST") Q:'$T  X ^%ZOSF("LOAD") S ^UTILITY($J,1,RTN,0,0)=XCNP-1
"RTN","XINDEX",19,0)
 I $D(^UTILITY($J,1,RTN,0,0)) S ^UTILITY($J,1,RTN,"RSUM")="B"_$$SUMB^XPDRSUM($NA(^UTILITY($J,1,RTN,0)))
"RTN","XINDEX",20,0)
 Q
"RTN","XINDEX",21,0)
BEG ;
"RTN","XINDEX",22,0)
 S %=INDLC*5 W:$X+10+%>IOM ! W RTN,$J("",10+%-$L(RTN))
"RTN","XINDEX",23,0)
 S (IND("DO"),IND("SZT"),IND("SZC"),LABO)=0,LC=$G(^UTILITY($J,1,RTN,0,0))
"RTN","XINDEX",24,0)
 I LC="" W !,">>>Routine '",RTN,"' not found <<<",! Q
"RTN","XINDEX",25,0)
 S TXT="",LAB=$P(^UTILITY($J,1,RTN,0,1,0)," ") I RTN'=$P(LAB,"(") D E^XINDX1(17)
"RTN","XINDEX",26,0)
 I 'INDLC,LAB["(" D E^XINDX1(55) S LAB=$P(LAB,"(")
"RTN","XINDEX",27,0)
 ;if M routine(not compiled template or DD) and has more than 2 lines, check lines 1 & 2
"RTN","XINDEX",28,0)
 I 'INDLC,LC>2 D
"RTN","XINDEX",29,0)
 . N LABO S LABO=1
"RTN","XINDEX",30,0)
 . S LIN=$G(^UTILITY($J,1,RTN,0,1,0)),TXT=1
"RTN","XINDEX",31,0)
 . ;check 1st line (site/dev - ) patch 128
"RTN","XINDEX",32,0)
 . I $P(LIN,";",2,4)'?.E1"/".E.1"-".E D E^XINDX1(62)
"RTN","XINDEX",33,0)
 . S LIN=$G(^UTILITY($J,1,RTN,0,2,0)),TXT=2
"RTN","XINDEX",34,0)
 . ;check 2nd line (;;nn.nn[TV]nn;package;.anything)
"RTN","XINDEX",35,0)
 . I $P(LIN,";",3,99)'?1.2N1"."1.2N.1(1"T",1"V").2N1";"1A.AP1";".E D E^XINDX1(44) ;patch 121
"RTN","XINDEX",36,0)
 . I $L(INP(11)) X INP(11) ;Version number check
"RTN","XINDEX",37,0)
 . I $L(INP(12)) X INP(12) ;Patch number check
"RTN","XINDEX",38,0)
B5 F TXT=1:1:LC S LIN=^UTILITY($J,1,RTN,0,TXT,0),LN=$L(LIN),IND("SZT")=IND("SZT")+LN+2 D LN,ST ;Process Line
"RTN","XINDEX",39,0)
 S LAB="",LABO=0,TXT=0,^UTILITY($J,1,RTN,0)=IND("SZT")_"^"_LC_"^"_IND("SZC")
"RTN","XINDEX",40,0)
 I IND("SZT")>INP("MAX"),'INDLC S ERR=35,ERR(1)=IND("SZT") D ^XINDX1
"RTN","XINDEX",41,0)
 I IND("SZT")-IND("SZC")>INP("CMAX"),'INDLC S ERR=58,ERR(1)=IND("SZT")-IND("SZC") D ^XINDX1
"RTN","XINDEX",42,0)
 D POSTRTN
"RTN","XINDEX",43,0)
 Q
"RTN","XINDEX",44,0)
 ;Proccess one line, LN = Length, LIN = Line.
"RTN","XINDEX",45,0)
LN K V S (ARG,GRB,IND("COM"),IND("DOL"),IND("F"))="",X=$P(LIN," ")
"RTN","XINDEX",46,0)
 I '$L(X) S LABO=LABO+1 G CD
"RTN","XINDEX",47,0)
 S (IND("COM"),LAB)=$P(X,"("),ARG=$P($P(X,"(",2),")"),LABO=0,IND("PP")=X?1.8E1"(".E1")"
"RTN","XINDEX",48,0)
 D:$L(ARG) NE^XINDX3 ;Process formal parameters as New list.
"RTN","XINDEX",49,0)
 I 'INDLC,'$$VT^XINDX2(LAB) D E^XINDX1($S(LAB=$$CASE^XINDX52(LAB):37,1:55)) ;Check for bad labels
"RTN","XINDEX",50,0)
 I $D(^UTILITY($J,1,RTN,"T",LAB)) D E^XINDX1(15) G CD ;DUP label
"RTN","XINDEX",51,0)
 S ^UTILITY($J,1,RTN,"T",LAB)=""
"RTN","XINDEX",52,0)
CD I LN>245 D:'(LN=246&($E(RTN,1,3)="|dd")) E^XINDX1(19) ;patch 119
"RTN","XINDEX",53,0)
 D:LIN'?1.ANP E^XINDX1(18)
"RTN","XINDEX",54,0)
 S LIN=$P(LIN," ",2,999),IND("LCC")=1
"RTN","XINDEX",55,0)
 I LIN="" D E^XINDX1(42) Q  ;Blank line ;p110
"RTN","XINDEX",56,0)
 S I=0 ;Watch the scope of I, counts dots
"RTN","XINDEX",57,0)
 I " ."[$E(LIN) D  S X=$L($E(LIN,1,I),".")-1,LIN=$E(LIN,I,999)
"RTN","XINDEX",58,0)
 . F I=1:1:245 Q:". "'[$E(LIN,I)
"RTN","XINDEX",59,0)
 . Q
"RTN","XINDEX",60,0)
 ;check dots against Do level IND("DO"), IND("DOL")=dot level
"RTN","XINDEX",61,0)
 D:'I&$G(IND("DO1")) E^XINDX1(51) S IND("DO1")=0 S:'I IND("DO")=0
"RTN","XINDEX",62,0)
 I I D:X>IND("DO") E^XINDX1(51) S (IND("DO"),IND("DOL"))=X
"RTN","XINDEX",63,0)
 ;Count Comment lines, skip ;; lines
"RTN","XINDEX",64,0)
 I $E(LIN)=";",$E(LIN,2)'=";" S IND("SZC")=IND("SZC")+$L(LIN) ;p110
"RTN","XINDEX",65,0)
 ;Process commands on line.
"RTN","XINDEX",66,0)
EE I LIN="" D ^XINDX2 Q
"RTN","XINDEX",67,0)
 S COM=$E(LIN),GK="",ARG=""
"RTN","XINDEX",68,0)
 I COM=";" S LIN="" G EE ;p110
"RTN","XINDEX",69,0)
 I COM=" " S ERR=$S(LIN?1." ":13,1:0),LIN=$S(ERR:"",1:$E(LIN,2,999)) D:ERR ^XINDX1 G EE
"RTN","XINDEX",70,0)
 D SEP
"RTN","XINDEX",71,0)
 S CM=$P(ARG,":",1),POST=$P(ARG,":",2,999),IND("COM")=IND("COM")_$C(9)_COM,ERR=48
"RTN","XINDEX",72,0)
 D:ARG[":"&(POST']"") ^XINDX1 S:POST]"" GRB=GRB_$C(9)_POST,IND("COM")=IND("COM")_":"
"RTN","XINDEX",73,0)
 ;SAC now allows lowercase commands
"RTN","XINDEX",74,0)
 I CM?.E1L.E S CM=$$CASE^XINDX52(CM),COM=$E(CM) ;I IND("LCC") S IND("LCC")=0 D E^XINDX1(47)
"RTN","XINDEX",75,0)
 I CM="" D E^XINDX1(21) G EE ;Missing command
"RTN","XINDEX",76,0)
 S CX=$G(IND("CMD",CM)) I CX="" D  G:CX="" EE
"RTN","XINDEX",77,0)
 . I $E(CM)="Z" S CX="^Z" Q  ;Proccess Z commands
"RTN","XINDEX",78,0)
 . D E^XINDX1(1) S LIN="" Q
"RTN","XINDEX",79,0)
 S CX=$P(CX,"^",2,9)
"RTN","XINDEX",80,0)
 D SEP I '$L(LIN),CH=" " D E^XINDX1(13) ;trailing space
"RTN","XINDEX",81,0)
 I ARG="","CGJMORSUWX"[COM S ERR=49 G ^XINDX1
"RTN","XINDEX",82,0)
 I CX>0 D E^XINDX1(CX) S CX=""
"RTN","XINDEX",83,0)
 D:$L(CX) @CX S:ARG'="" GRB=GRB_$C(9)_ARG G EE
"RTN","XINDEX",84,0)
B S ERR=25 G ^XINDX1
"RTN","XINDEX",85,0)
C S ERR=29 G ^XINDX1
"RTN","XINDEX",86,0)
D G DG1^XINDX4
"RTN","XINDEX",87,0)
E Q:ARG=""  S ERR=7 G ^XINDX1
"RTN","XINDEX",88,0)
F G:ARG]"" FR^XINDX4 S IND("F")=1 Q
"RTN","XINDEX",89,0)
G G DG^XINDX4
"RTN","XINDEX",90,0)
H Q:ARG'=""  S ERR=32 G ^XINDX1
"RTN","XINDEX",91,0)
J S ERR=36,ARG="" G ^XINDX1
"RTN","XINDEX",92,0)
K S ERR=$S(ARG?1"(".E:22,ARG?." ":23,1:0) D:ERR ^XINDX1
"RTN","XINDEX",93,0)
 G KL^XINDX3
"RTN","XINDEX",94,0)
L G LO^XINDX4
"RTN","XINDEX",95,0)
M G S^XINDX3
"RTN","XINDEX",96,0)
N G NE^XINDX3
"RTN","XINDEX",97,0)
O S ERR=34 D ^XINDX1,O^XINDX3 Q
"RTN","XINDEX",98,0)
Q Q:ARG=""  G Q^XINDX4
"RTN","XINDEX",99,0)
R S RDTIME=0 G RD^XINDX3
"RTN","XINDEX",100,0)
S G S^XINDX3
"RTN","XINDEX",101,0)
TR Q  ;What to process. p110
"RTN","XINDEX",102,0)
U S ARG=$P(ARG,":") Q
"RTN","XINDEX",103,0)
V S ARG="",ERR=20 G ^XINDX1
"RTN","XINDEX",104,0)
W G WR^XINDX4
"RTN","XINDEX",105,0)
X G XE^XINDX4
"RTN","XINDEX",106,0)
Z S ERR=2 D ^XINDX1 G ZC^XINDX4
"RTN","XINDEX",107,0)
 ;
"RTN","XINDEX",108,0)
 ;Save off items from line.
"RTN","XINDEX",109,0)
ST S R=LAB_$S(LABO:"+"_LABO,1:"")
"RTN","XINDEX",110,0)
 ;Local variable, Global, Marked Items, Naked global, Internal ref, eXternal ref., Tag ref.
"RTN","XINDEX",111,0)
 S LOC="" F  S LOC=$O(V(LOC)),S="" Q:LOC=""  F  S S=$O(V(LOC,S)) Q:S=""  D SET
"RTN","XINDEX",112,0)
 S ^UTILITY($J,1,RTN,"COM",TXT)=IND("COM")
"RTN","XINDEX",113,0)
 Q
"RTN","XINDEX",114,0)
 ;
"RTN","XINDEX",115,0)
SET I V(LOC,S)]"" F %="!","~" I V(LOC,S)[%,$G(^UTILITY($J,1,RTN,LOC,S))'[% S ^(S)=$G(^(S))_%
"RTN","XINDEX",116,0)
 S %=0
"RTN","XINDEX",117,0)
SE2 S ARG=$G(^UTILITY($J,1,RTN,LOC,S,%)) I $L(ARG)>230 S %=%+1 G SE2
"RTN","XINDEX",118,0)
 S ^UTILITY($J,1,RTN,LOC,S,%)=ARG_R_V(LOC,S)_","
"RTN","XINDEX",119,0)
 Q
"RTN","XINDEX",120,0)
 ;
"RTN","XINDEX",121,0)
POSTRTN ;Do more overall checking
"RTN","XINDEX",122,0)
 N V,E,T,T1,T2
"RTN","XINDEX",123,0)
 S T="" ;Check for missing Labels
"RTN","XINDEX",124,0)
 F  S T=$O(^UTILITY($J,1,RTN,"I",T)),T2=T Q:T=""  S T1=$G(^(T,0)) D
"RTN","XINDEX",125,0)
 . Q:$E(T2,1,2)="@("
"RTN","XINDEX",126,0)
 . S:$E(T2,1,2)="$$" T2=$E(T2,3,99)
"RTN","XINDEX",127,0)
 . I T2]"",'$D(^UTILITY($J,1,RTN,"T",$P(T2,"+",1))) D
"RTN","XINDEX",128,0)
 . . F I=1:1:$L(T1,",")-1 S LAB=$P(T1,",",I),LABO=+$P(LAB,"+",2),LAB=$P(LAB,"+"),E=14,E(1)=T D E^XINDX1(.E)
"RTN","XINDEX",129,0)
 . . Q
"RTN","XINDEX",130,0)
 . Q
"RTN","XINDEX",131,0)
 S LAB="",LABO=0 ;Check for valid label names
"RTN","XINDEX",132,0)
 I 'INDLC F  S LAB=$O(^UTILITY($J,1,RTN,"T",LAB)) Q:LAB=""  D
"RTN","XINDEX",133,0)
 . I '$$VA^XINDX2(LAB) D E^XINDX1(55) Q
"RTN","XINDEX",134,0)
 . D:'$$VT^XINDX2(LAB) E^XINDX1(37)
"RTN","XINDEX",135,0)
 . Q
"RTN","XINDEX",136,0)
 S LAB="",LABO=0 ;Check for valid variable names.
"RTN","XINDEX",137,0)
 F  S LAB=$O(^UTILITY($J,1,RTN,"L",LAB)) Q:LAB=""  D
"RTN","XINDEX",138,0)
 . D VLNF^XINDX3($P(LAB,"("))
"RTN","XINDEX",139,0)
 . Q
"RTN","XINDEX",140,0)
 Q
"RTN","XINDEX",141,0)
 ;
"RTN","XINDEX",142,0)
QUICK ;Quick, Just get a routine an print the results
"RTN","XINDEX",143,0)
 D QUICK^XINDX6()
"RTN","XINDEX",144,0)
 Q
"RTN","XINDX1")
0^2^B18451520^B17282098
"RTN","XINDX1",1,0)
XINDX1 ;ISC/REL,GRK,RWF - ERROR ROUTINE ;08/05/08  13:59
"RTN","XINDX1",2,0)
 ;;7.3;TOOLKIT;**20,61,66,68,110,121,128**;Apr 25, 1995;Build 1
"RTN","XINDX1",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XINDX1",4,0)
 G A
"RTN","XINDX1",5,0)
E(ERR) ;
"RTN","XINDX1",6,0)
A N %,%1 ;TXT is the line of the error.
"RTN","XINDX1",7,0)
 S ERTX=LAB_$S(LABO:"+"_LABO,1:"")_$C(9),%1=$T(ERROR+ERR),ERTX=ERTX_$S(ERR:$P(%1,";",4,9),1:ERR) ;p110
"RTN","XINDX1",8,0)
 I ERTX["|" F %=1:1 S ERTX=$P(ERTX,"|")_$S($D(ERR(%)):ERR(%),1:"??")_$P(ERTX,"|",%+1,99) Q:ERTX'["|"
"RTN","XINDX1",9,0)
B I $P(%1,";",3)]"" D  Q:%1]""  ;Don't flag kernel doing kernel.
"RTN","XINDX1",10,0)
 . S %1=$P(%1,";",3)
"RTN","XINDX1",11,0)
 . F  Q:RTN[$P(%1,",")  S %1=$P(%1,",",2,99) ;quit if RTN[%1 or null.
"RTN","XINDX1",12,0)
 . Q
"RTN","XINDX1",13,0)
 I ERR=17,$E(RTN)'="%",$E(LAB)="%" Q  ;Don't flag %RTN w/o %.
"RTN","XINDX1",14,0)
 ;Global is Error Line,tab,error tag,tab,error text
"RTN","XINDX1",15,0)
 S %=$G(^UTILITY($J,1,RTN,"E",0))+1,^(0)=%,^(%)=TXT_$C(9)_ERTX
"RTN","XINDX1",16,0)
 Q
"RTN","XINDX1",17,0)
 ;
"RTN","XINDX1",18,0)
 ;F = Fatal, S = Standard, W = Warning, I = Info
"RTN","XINDX1",19,0)
ERROR ;
"RTN","XINDX1",20,0)
1 ;;;F - UNDEFINED COMMAND (rest of line not checked).
"RTN","XINDX1",21,0)
2 ;;;F - Non-standard (Undefined) 'Z' command.
"RTN","XINDX1",22,0)
3 ;;XTRMON;F - Undefined Function.
"RTN","XINDX1",23,0)
4 ;;;F - Undefined Special Variable.
"RTN","XINDX1",24,0)
5 ;;;F - Unmatched Parenthesis.
"RTN","XINDX1",25,0)
6 ;;;F - Unmatched Quotation Marks.
"RTN","XINDX1",26,0)
7 ;;;F - ELSE Command followed by only one space.
"RTN","XINDX1",27,0)
8 ;;;F - FOR Command did not contain '='.
"RTN","XINDX1",28,0)
9 ;;;I - QUIT Command followed by only one space.
"RTN","XINDX1",29,0)
10 ;;;F - Unrecognized argument in SET command.
"RTN","XINDX1",30,0)
11 ;;;W - Invalid local variable name.
"RTN","XINDX1",31,0)
12 ;;;W - Invalid global variable name.
"RTN","XINDX1",32,0)
13 ;;;W - Blank(s) at end of line.
"RTN","XINDX1",33,0)
14 ;;;F - Call to missing label '|' in this routine.
"RTN","XINDX1",34,0)
15 ;;;W - Duplicate label. (M57)
"RTN","XINDX1",35,0)
16 ;;;F - Error in pattern code.
"RTN","XINDX1",36,0)
17 ;;;W - First line label NOT routine name.
"RTN","XINDX1",37,0)
18 ;;;W - Line contains a CONTROL (non-graphic) character.
"RTN","XINDX1",38,0)
19 ;;;S - Line is longer than 245 bytes.
"RTN","XINDX1",39,0)
20 ;;;S - View command used.
"RTN","XINDX1",40,0)
21 ;;;F - General Syntax Error.
"RTN","XINDX1",41,0)
22 ;;;S - Exclusive Kill.
"RTN","XINDX1",42,0)
23 ;;;S - Unargumented Kill.
"RTN","XINDX1",43,0)
24 ;;;S - Kill of an unsubscripted global.
"RTN","XINDX1",44,0)
25 ;;;S - Break command used.
"RTN","XINDX1",45,0)
26 ;;;S - Exclusive or Unargumented NEW command.
"RTN","XINDX1",46,0)
27 ;;;S - $View function used.
"RTN","XINDX1",47,0)
28 ;;ZOSV,ZIS,ZT;S - Non-standard $Z special variable used.
"RTN","XINDX1",48,0)
29 ;;ZIS,ZTM;S - 'Close' command should be invoked through 'D ^%ZISC'.
"RTN","XINDX1",49,0)
30 ;;;S - LABEL+OFFSET syntax.
"RTN","XINDX1",50,0)
31 ;;ZOSV,ZIS,ZT;S - Non-standard $Z function used.
"RTN","XINDX1",51,0)
32 ;;;S - 'HALT' command should be invoked through 'G ^XUSCLEAN'.
"RTN","XINDX1",52,0)
33 ;;;S - Read command doesn't have a timeout.
"RTN","XINDX1",53,0)
34 ;;ZIS;S - 'OPEN' command should be invoked through ^%ZIS.
"RTN","XINDX1",54,0)
35 ;;;S - Routine exceeds SACC maximum size of 20000 (|).
"RTN","XINDX1",55,0)
36 ;;ZTM;S - Should use 'TASKMAN' instead of 'JOB' command.
"RTN","XINDX1",56,0)
37 ;;;F - Label is not valid.
"RTN","XINDX1",57,0)
38 ;;;F - Call to this |
"RTN","XINDX1",58,0)
39 ;;ZIS,XUS,XUP;S - Kill of a protected variable (|).
"RTN","XINDX1",59,0)
40 ;;;S - Space where a command should be.
"RTN","XINDX1",60,0)
41 ;;;I - Star or pound READ used.
"RTN","XINDX1",61,0)
42 ;;;W - Null line (no commands or comment).
"RTN","XINDX1",62,0)
43 ;;;F - Invalid or wrong number of arguments to a function.
"RTN","XINDX1",63,0)
44 ;;;S - 2nd line of routine violates the SAC.
"RTN","XINDX1",64,0)
45 ;;ZT,ZIS,XUTM,XTER;S - Set to a '%' global.
"RTN","XINDX1",65,0)
46 ;;;F - Quoted string not followed by a separator.
"RTN","XINDX1",66,0)
47 ;;;S - Lowercase command(s) used in line.
"RTN","XINDX1",67,0)
48 ;;;F - Missing argument to a command post-conditional.
"RTN","XINDX1",68,0)
49 ;;;F - Command missing an argument.
"RTN","XINDX1",69,0)
50 ;;ZTM;S - Extended reference.
"RTN","XINDX1",70,0)
51 ;;;F - Block structure mismatch.
"RTN","XINDX1",71,0)
52 ;;;F - Reference to routine '^|'. That isn't in this UCI.
"RTN","XINDX1",72,0)
53 ;;;F - Bad Number.
"RTN","XINDX1",73,0)
54 ;;XG;S - Access to SSVN's restricted to Kernel.
"RTN","XINDX1",74,0)
55 ;;;S - Violates VA programming standards.
"RTN","XINDX1",75,0)
56 ;;;S - Patch number '|' missing from second line.
"RTN","XINDX1",76,0)
57 ;;;S - Lower/Mixed case Variable name used.
"RTN","XINDX1",77,0)
58 ;;;S - Routine code exceeds SACC maximum size of 15000 (|).
"RTN","XINDX1",78,0)
59 ;;;F - Bad WRITE syntax.
"RTN","XINDX1",79,0)
60 ;;;S - Lock missing Timeout.
"RTN","XINDX1",80,0)
61 ;;;S - Non-Incremental Lock.
"RTN","XINDX1",81,0)
62 ;;;S - First line of routine violates the SAC.
"RTN","XINDX1",82,0)
63 ;;;F - GO or DO mismatch from block structure (M45).
"RTN","XINDX3")
0^3^B12749285^B12135035
"RTN","XINDX3",1,0)
XINDX3 ;ISC/REL,GRK,RWF - PROCESS MERGE/SET/READ/KILL/NEW/OPEN COMMANDS ;06/24/08  15:44
"RTN","XINDX3",2,0)
 ;;7.3;TOOLKIT;**20,27,61,68,110,121,128**;Apr 25, 1995;Build 1
"RTN","XINDX3",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XINDX3",4,0)
PEEK S Y=$G(LV(LV,LI+1)) Q
"RTN","XINDX3",5,0)
PEEK2 S Y=$G(LV(LV,LI+2)) Q
"RTN","XINDX3",6,0)
INC2 S LI=LI+1 ;Drop into INC
"RTN","XINDX3",7,0)
INC S LI=LI+1,S=$G(LV(LV,LI)),S1=$G(LV(LV,LI+1)),CH=$E(S) G ERR:$A(S)=10 Q
"RTN","XINDX3",8,0)
DN S LI(LV)=LI,LI(LV,1)=AC,LV=LV+1,LI=LI(LV),AC=NOA
"RTN","XINDX3",9,0)
 Q
"RTN","XINDX3",10,0)
UP ;Inc LI as we save to skip the $C(10).
"RTN","XINDX3",11,0)
 D PEEK S:$A(Y)=10 LI=LI+1 S LI(LV)=LI,LV=LV-1,LI=LI(LV),AC=LI(LV,1) Q
"RTN","XINDX3",12,0)
PEEKDN S Y=$G(LV(LV+1,LI(LV+1)+1)) Q
"RTN","XINDX3",13,0)
FIND F Y=LI:1:AC Q:L[$G(LV(LV,Y))
"RTN","XINDX3",14,0)
ERR D E^XINDX1(43) S (S,S1,CH)="" Q
"RTN","XINDX3",15,0)
 Q
"RTN","XINDX3",16,0)
 Q
"RTN","XINDX3",17,0)
S ;Set
"RTN","XINDX3",18,0)
 S STR=ARG,ARG="",RHS=0 D ^XINDX9
"RTN","XINDX3",19,0)
S2 S GK="" D INC I S="" D:'RHS E^XINDX1(10) Q
"RTN","XINDX3",20,0)
 I CH=",","!""#&)*+-,./:;<=?\]_~"[$E(S1),RHS=1 D E^XINDX1(10) G S2 ;patch 121
"RTN","XINDX3",21,0)
 I CH="," S RHS=0 G S2
"RTN","XINDX3",22,0)
 I CH="=" S RHS=1 D:"!#&)*,/:;<=?\]_~"[$E(S1) E^XINDX1(10) G S2 ;patch 119
"RTN","XINDX3",23,0)
 I CH="$",'RHS D  D:% E^XINDX1(10) ;Can't be on RHS of set.
"RTN","XINDX3",24,0)
 . S %=1
"RTN","XINDX3",25,0)
 . I "$E$P$X$Y"[$E(S,1,2) S %=0 Q
"RTN","XINDX3",26,0)
 . I "$EC$ET$QS"[$E(S,1,3) S %=0 Q
"RTN","XINDX3",27,0)
 . I "$ZE$ZT"[$E(S,1,3) S %=0 Q  ;Pickup in XINDX9
"RTN","XINDX3",28,0)
 . Q
"RTN","XINDX3",29,0)
 I CH="^" D FL G S2
"RTN","XINDX3",30,0)
 I CH="@" S Y=$$ASM(LV,LI,",") S:Y'["=" RHS=1 D INC,ARG^XINDX2 G S2
"RTN","XINDX3",31,0)
 I CH="(" D MULT G S2
"RTN","XINDX3",32,0)
 D FL G S2
"RTN","XINDX3",33,0)
MULT D INC S NOA=S I S'>0 S ERR=5 G ^XINDX1
"RTN","XINDX3",34,0)
 D DN S AC=AC+LI F  Q:AC'>LI  S:'RHS GK="*" D INC,ARG^XINDX2
"RTN","XINDX3",35,0)
 D UP Q
"RTN","XINDX3",36,0)
FL ;
"RTN","XINDX3",37,0)
 S:'RHS GK="*" D ARG^XINDX2
"RTN","XINDX3",38,0)
 Q
"RTN","XINDX3",39,0)
VLNF(X) ;Drop into VLN
"RTN","XINDX3",40,0)
VLN ;Valid Local Name > Variable
"RTN","XINDX3",41,0)
 S ERR=0
"RTN","XINDX3",42,0)
 Q:X?1(1U,1"%").15UN
"RTN","XINDX3",43,0)
 I X?1(1A,1"%").15AN D E^XINDX1(57) Q  ;Lowercase
"RTN","XINDX3",44,0)
 D E^XINDX1(11) ;Too long or other problem
"RTN","XINDX3",45,0)
 Q
"RTN","XINDX3",46,0)
VGN ;Valid Global Name
"RTN","XINDX3",47,0)
 S ERR=0 I X'?1(1U,1"%").7UN D E^XINDX1(12)
"RTN","XINDX3",48,0)
 Q
"RTN","XINDX3",49,0)
KL ;Process KILL
"RTN","XINDX3",50,0)
 S STR=ARG,ARG(1)=ARG,ARG="" D ^XINDX9
"RTN","XINDX3",51,0)
A D INC Q:S=""  G A:CH="," S LOC="L" D @$S(CH="@":"KL1",CH="^":"KL2",CH="(":"KL4",1:"KL3") G A
"RTN","XINDX3",52,0)
KL1 D INC,ARG^XINDX2 Q
"RTN","XINDX3",53,0)
KL2 S GK="!"
"RTN","XINDX3",54,0)
 I S1'="(" S ERR=24 D ^XINDX1
"RTN","XINDX3",55,0)
 G ARG^XINDX2
"RTN","XINDX3",56,0)
KL3 I "^DT^DTIME^DUZ^IOST^IOM^U^"[("^"_S_"^") S ERR=39,ERR(1)=S D ^XINDX1
"RTN","XINDX3",57,0)
 I "IO"=S D:S1="(" PEEKDN S ERR=39,ERR(1)=S_$S(S1["(":S1_Y_")",1:"") D:S1'="(" ^XINDX1 I S1="(",("QC"'[$E(Y,2)) D ^XINDX1
"RTN","XINDX3",58,0)
KL5 S GK="!" D ARG^XINDX2 Q  ;KILL SUBS
"RTN","XINDX3",59,0)
 Q
"RTN","XINDX3",60,0)
KL4 S NOA=S1 D DN,ARGS^XINDX2,UP,INC2 Q
"RTN","XINDX3",61,0)
NE ;NEW
"RTN","XINDX3",62,0)
 S ERR=$S("("[$E(ARG):26,1:0) I ERR G ^XINDX1 ;look for null or (
"RTN","XINDX3",63,0)
 S STR=ARG D ^XINDX9
"RTN","XINDX3",64,0)
N2 D INC Q:S=""  G N2:CH=","
"RTN","XINDX3",65,0)
 ;I CH?1P,("%@()"'[CH)&("$E"'[$E(S,1,2)) D E^XINDX1(11) G N2
"RTN","XINDX3",66,0)
 ;check for '@' and '$$' patch 128
"RTN","XINDX3",67,0)
 I CH?1P,(CH'=S) D  G:$G(ERTX)]"" N2
"RTN","XINDX3",68,0)
 . I "@("[CH,"$$E"'[$E(S,1,2),($P(S,CH,2)'?1A) D E^XINDX1(11) Q
"RTN","XINDX3",69,0)
 . I "$"[CH,(LV(LV,1)'="@") D E^XINDX1(11) Q
"RTN","XINDX3",70,0)
 S GK="~" D ARG^XINDX2
"RTN","XINDX3",71,0)
 G N2
"RTN","XINDX3",72,0)
 ;
"RTN","XINDX3",73,0)
RD S STR=ARG D ^XINDX9 S ARG=""
"RTN","XINDX3",74,0)
RD1 D INC Q:S=""
"RTN","XINDX3",75,0)
 ;I (CH="!")!(CH=",")!(CH=Q)!(CH="#") G RD1
"RTN","XINDX3",76,0)
 ;I CH="^" S ERR=11 D ^XINDX1
"RTN","XINDX3",77,0)
 I '((CH="%")!(CH?1A)!(CH="*")) D RD3 G RD1
"RTN","XINDX3",78,0)
 S Y=$$ASM(LV,LI,",") I Y'[":" S ERR=33,RDTIME=1 D ^XINDX1
"RTN","XINDX3",79,0)
 D RD2 G RD1
"RTN","XINDX3",80,0)
RD2 Q:","[CH
"RTN","XINDX3",81,0)
 I "*#"[CH D E^XINDX1(41)
"RTN","XINDX3",82,0)
 I "#:"[CH D INC,ARG^XINDX2,INC G RD2
"RTN","XINDX3",83,0)
 I (CH="%")!(CH?1A) S LOC="L",GK="*" D ARG^XINDX2,INC G RD2
"RTN","XINDX3",84,0)
 D INC G RD2
"RTN","XINDX3",85,0)
RD3 Q:","[CH  I "!#?"[CH D INC G RD3
"RTN","XINDX3",86,0)
 I (CH="%")!(CH?1A)!(CH="@") D ARG^XINDX2,INC G RD3
"RTN","XINDX3",87,0)
 Q
"RTN","XINDX3",88,0)
O S STR=ARG,AC=99 D ^XINDX9,INC S ARG="" I S["@" D ARGS^XINDX2 Q
"RTN","XINDX3",89,0)
 D ARG^XINDX2,INC D  D INC,ARGS^XINDX2 Q
"RTN","XINDX3",90,0)
 . F  D INC Q:":"[S
"RTN","XINDX3",91,0)
 . Q
"RTN","XINDX3",92,0)
 Q
"RTN","XINDX3",93,0)
ERRCP S ERR=5 D ^XINDX1 Q
"RTN","XINDX3",94,0)
ST ;
"RTN","XINDX3",95,0)
 S:'$D(V(LOC,S)) V(LOC,S)="" S:V(LOC,S)'[GK V(LOC,S)=V(LOC,S)_GK,GK="" Q
"RTN","XINDX3",96,0)
 Q
"RTN","XINDX3",97,0)
ASM(WL,SI,L,SEP) ;
"RTN","XINDX3",98,0)
 N %,CH,Y S SEP=$G(SEP),Y="" F %=SI:1 S CH=$G(LV(WL,%)) Q:L[CH  S Y=Y_SEP_CH
"RTN","XINDX3",99,0)
 Q Y
"RTN","XINDX4")
0^4^B13667786^B13130963
"RTN","XINDX4",1,0)
XINDX4 ;ISC/REL,GRK - PROCESS DO, GO TO, WRITE & FOR COMMANDS ;08/05/08  13:59
"RTN","XINDX4",2,0)
 ;;7.3;TOOLKIT;**20,61,68,110,128**;Apr 25, 1995;Build 1
"RTN","XINDX4",3,0)
 ;DO and GO; IND("DO1") checks if we already checked a DO at this level
"RTN","XINDX4",4,0)
DG1 I ARG="" S:'IND("DO1") IND("DO")=IND("DO")+1,IND("DO1")=1 Q
"RTN","XINDX4",5,0)
DG S (LBL,PGM,OFF,PRM)="",S=1,L="+^:," S:$E(ARG,1,2)="@^" S=3
"RTN","XINDX4",6,0)
 D LOOP S LBL=$E(ARG,1,I-1)
"RTN","XINDX4",7,0)
 I CH="+" S (J,S)=I+1,ERR=30 D ^XINDX1:$E(ARG)'="@" S:$E(ARG,I)="^" S=I+1 D LOOP S OFF=$E(ARG,J,I-1) I OFF'?.N S GRB=GRB_$C(9)_OFF
"RTN","XINDX4",8,0)
 I CH="^" S S=I+1 D LOOP S PGM=$E(ARG,S,I-1)
"RTN","XINDX4",9,0)
 I CH=":" S S=I+1,L="," D LOOP S S=$E(ARG,S,I-1) I S'="" S GRB=GRB_$C(9)_S
"RTN","XINDX4",10,0)
 S ARG=$E(ARG,I+1,999)
"RTN","XINDX4",11,0)
 I $E(LBL)="@" S GRB=GRB_$C(9)_$E(LBL,2,999),LBL="@("
"RTN","XINDX4",12,0)
 I $E(PGM)="@" S GRB=GRB_$C(9)_$E(PGM,2,999),PGM="@("
"RTN","XINDX4",13,0)
 I LBL[")" S PRM=$$INSIDE(LBL,"(",")"),LBL=$P(LBL,"(")
"RTN","XINDX4",14,0)
 I PGM[")" S PRM=$$INSIDE(PGM,"(",")"),PGM=$P(PGM,"(")
"RTN","XINDX4",15,0)
 I $L(PRM) S GRB=GRB_$C(9)_$$PRUNE($$CNG(PRM,",,",","),",") ;strip null parameters
"RTN","XINDX4",16,0)
 I $G(IND("DOL")),CM="G",PGM]"" D E^XINDX1(63) ;can't goto another routine out of block structure
"RTN","XINDX4",17,0)
 S:OFF'="" LBL=LBL_"+"_OFF
"RTN","XINDX4",18,0)
 S S="",LOC="I" I PGM'="" S S=PGM_" ",LOC="X"
"RTN","XINDX4",19,0)
 S:LBL_PGM["&" LOC="X"
"RTN","XINDX4",20,0)
 S:LBL'="" S=S_LBL I S'="" D ST
"RTN","XINDX4",21,0)
 G:ARG'="" DG K LBL,PGM,OFF,PRM
"RTN","XINDX4",22,0)
 Q
"RTN","XINDX4",23,0)
LOOP F I=S:1 S CH=$E(ARG,I) D QUOTE:CH=Q,PAREN:CH="(",ERRCP:CH=")" Q:L[CH
"RTN","XINDX4",24,0)
 Q
"RTN","XINDX4",25,0)
PAREN S PC=1
"RTN","XINDX4",26,0)
 F I=I+1:1 S CH=$E(ARG,I) Q:PC=0!(CH="")  I "()"""[CH D QUOTE:CH=Q S PC=PC+$S("("[CH:1,")"[CH:-1,1:0)
"RTN","XINDX4",27,0)
 S ERR=5 D:PC ^XINDX1
"RTN","XINDX4",28,0)
 Q
"RTN","XINDX4",29,0)
QUOTE F I=I+1:1 S CH=$E(ARG,I) Q:CH=""!(CH=Q)
"RTN","XINDX4",30,0)
 I CH="" S ERR=6 G ^XINDX1
"RTN","XINDX4",31,0)
 Q
"RTN","XINDX4",32,0)
ST S R=$F(S,"(") S:R>1 S=$E(S,1,R-1) S:"IX"[LOC IND("COM")=IND("COM")_","_S
"RTN","XINDX4",33,0)
 S:'$D(V(LOC,S)) V(LOC,S)="" S:LOC="L"&(V(LOC,S)'["*") V(LOC,S)=V(LOC,S)_"*" Q
"RTN","XINDX4",34,0)
 Q
"RTN","XINDX4",35,0)
FR Q:$E(ARG,1)="@"  S S=2,L="=" D LOOP I CH="" S ERR=8 G ^XINDX1
"RTN","XINDX4",36,0)
 S GK="*",STR=$E(ARG,1,I-1),ARG=$E(ARG,I+1,999) D ARGG^XINDX2
"RTN","XINDX4",37,0)
 Q
"RTN","XINDX4",38,0)
WR N S0,WR S STR=ARG,WR="#!,",S0="" ;Need to handle /controlmnemonic
"RTN","XINDX4",39,0)
 D ^XINDX9 S ARG=""
"RTN","XINDX4",40,0)
 F  D INC^XINDX2 Q:S=""  D  S S0=S
"RTN","XINDX4",41,0)
 . I S="?" D:WR[S1 E^XINDX1(49) Q
"RTN","XINDX4",42,0)
 . I S="!",WR'[$E(S0) D E^XINDX1(59) Q  ;Look for var!
"RTN","XINDX4",43,0)
 . I S="!","#!?,"'[$E(S1) D E^XINDX1(59) Q  ;Look for !var
"RTN","XINDX4",44,0)
 . D ARG^XINDX2
"RTN","XINDX4",45,0)
 . Q
"RTN","XINDX4",46,0)
 Q
"RTN","XINDX4",47,0)
ERRCP S ERR=5 D ^XINDX1
"RTN","XINDX4",48,0)
 Q
"RTN","XINDX4",49,0)
SET S ARG=$E(ARG,1,I-1)_","_$E(ARG,I+1,999)
"RTN","XINDX4",50,0)
 Q
"RTN","XINDX4",51,0)
XE S GRB=GRB_$C(9)_ARG,ARG=""
"RTN","XINDX4",52,0)
 Q
"RTN","XINDX4",53,0)
REP S L=",:",S=1 D LOOP I CH=":" S ARG=$E(ARG,I+1,999),L="," D LOOP
"RTN","XINDX4",54,0)
 S ARG=$E(ARG,I+1,999) Q:ARG=""
"RTN","XINDX4",55,0)
 G REP
"RTN","XINDX4",56,0)
 ;
"RTN","XINDX4",57,0)
ZC I "ILRS"'[$E(CM,2)!($E(CM,2)="") S ARG="" Q  ;Zcommands
"RTN","XINDX4",58,0)
 S COM=$E(CM,1,2) Q:CM="ZI"  G:CM="ZR" ZR
"RTN","XINDX4",59,0)
U1 S L=",",S=1 D LOOP S S=$E(ARG,1,I-1),ARG=$E(ARG,I+1,999)
"RTN","XINDX4",60,0)
 S:$E(S,1)="@" S=$E(S,2,999),GRB=GRB_$C(9)_S Q:ARG=""  G U1
"RTN","XINDX4",61,0)
ZR Q:ARG=""  S L=":,",S=1 D LOOP S S=$E(ARG,1,I-1),ARG=$E(ARG,I+1,999)
"RTN","XINDX4",62,0)
 I $E(S,1)="@" S GRB=GRB_$C(9)_S G ZR
"RTN","XINDX4",63,0)
 S:S["+" GRB=GRB_$C(9)_$P(S,"+",2,999)
"RTN","XINDX4",64,0)
 G ZR
"RTN","XINDX4",65,0)
LO ;Lock -- Look for timeouts
"RTN","XINDX4",66,0)
 N LK
"RTN","XINDX4",67,0)
 I ARG="" Q
"RTN","XINDX4",68,0)
 S S=1
"RTN","XINDX4",69,0)
 F  D  Q:CH=""
"RTN","XINDX4",70,0)
 . I "+-"'[$E(ARG,S) D E^XINDX1(61)
"RTN","XINDX4",71,0)
 . S L="-:,",LK=0 D LOOP S S=I+1
"RTN","XINDX4",72,0)
 . I CH="-" S L="," D LOOP S S=I+1 Q
"RTN","XINDX4",73,0)
 . I CH=":" S L=",",LK=1 D LOOP S S=I+1
"RTN","XINDX4",74,0)
 . I CH="," D:'LK E^XINDX1(60) S LK=0 Q
"RTN","XINDX4",75,0)
 . I CH="" D:'LK E^XINDX1(60) Q
"RTN","XINDX4",76,0)
 . Q
"RTN","XINDX4",77,0)
 S GRB=GRB_$C(9)_ARG,ARG=""
"RTN","XINDX4",78,0)
 Q
"RTN","XINDX4",79,0)
Q ;QUIT followed by comment or in structure Do or For loop, must have 2 spaces
"RTN","XINDX4",80,0)
 I $E(ARG)=";"!$G(IND("DOL"))!$G(IND("F")) S ARG="",ERR=9 G ^XINDX1
"RTN","XINDX4",81,0)
 Q
"RTN","XINDX4",82,0)
PT(X) ;Tag for parameter passing
"RTN","XINDX4",83,0)
 S ^UTILITY($J,1,RTN,"P",LAB)=X
"RTN","XINDX4",84,0)
 Q
"RTN","XINDX4",85,0)
PC ;Parameter passing call
"RTN","XINDX4",86,0)
 N LOC S LOC="P" D ST
"RTN","XINDX4",87,0)
 Q
"RTN","XINDX4",88,0)
INSIDE(X,X1,X2) ;Return the data inside the param x1,x2
"RTN","XINDX4",89,0)
 S J=$L(X,X2)-1,J=$S(J<1:1,1:J)
"RTN","XINDX4",90,0)
 Q $P($P(X,X2,1,J),X1,2,99)
"RTN","XINDX4",91,0)
 ;
"RTN","XINDX4",92,0)
SEP(ST,SP,RV) ;String,Separters,Return array)
"RTN","XINDX4",93,0)
 N %,N,Q S Q=$C(34) ;QUOTE
"RTN","XINDX4",94,0)
 F N=1:1 S %=$E(ST,N) D SQT:%=Q Q:SP[%
"RTN","XINDX4",95,0)
 S RV=N-1,RV(1)=$E(ST,1,N)
"RTN","XINDX4",96,0)
 Q
"RTN","XINDX4",97,0)
 ;
"RTN","XINDX4",98,0)
SQT F N=N+1:1 Q:Q[$E(ST,N)
"RTN","XINDX4",99,0)
 Q
"RTN","XINDX4",100,0)
CNG(S1,S2,S3) ;String,replace,with
"RTN","XINDX4",101,0)
 ;
"RTN","XINDX4",102,0)
 F  Q:S1'[S2  S S1=$P(S1,S2)_S3_$P(S1,S2,2,999)
"RTN","XINDX4",103,0)
 Q S1
"RTN","XINDX4",104,0)
PRUNE(S1,S2) ;String,prune char from front and back
"RTN","XINDX4",105,0)
 F  Q:$E(S1)'=S2  S S1=$E(S1,2,999)
"RTN","XINDX4",106,0)
 F  Q:$E(S1,$L(S1))'=S2  S S1=$E(S1,1,$L(S1)-1)
"RTN","XINDX4",107,0)
 Q S1
"VER")
8.0^22.0
"BLD",1330,6)
^100
**END**
**END**
