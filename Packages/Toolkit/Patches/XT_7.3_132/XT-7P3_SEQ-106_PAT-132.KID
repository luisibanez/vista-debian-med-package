Released XT*7.3*132 SEQ #106
Extracted from mail message
**KIDS**:XT*7.3*132^

**INSTALL NAME**
XT*7.3*132
"BLD",1370,0)
XT*7.3*132^TOOLKIT^0^3110901^y
"BLD",1370,1,0)
^^3^3^3110901^^
"BLD",1370,1,1,0)
Please see the patch description on FORUM, in the National Patch Module.
"BLD",1370,1,2,0)

"BLD",1370,1,3,0)

"BLD",1370,4,0)
^9.64PA^^
"BLD",1370,6.3)
13
"BLD",1370,"ABPKG")
n
"BLD",1370,"INID")
^
"BLD",1370,"INIT")
XT73P132
"BLD",1370,"KRN",0)
^9.67PA^9002226^21
"BLD",1370,"KRN",.4,0)
.4
"BLD",1370,"KRN",.401,0)
.401
"BLD",1370,"KRN",.402,0)
.402
"BLD",1370,"KRN",.403,0)
.403
"BLD",1370,"KRN",.5,0)
.5
"BLD",1370,"KRN",.84,0)
.84
"BLD",1370,"KRN",3.6,0)
3.6
"BLD",1370,"KRN",3.8,0)
3.8
"BLD",1370,"KRN",9.2,0)
9.2
"BLD",1370,"KRN",9.8,0)
9.8
"BLD",1370,"KRN",9.8,"NM",0)
^9.68A^7^7
"BLD",1370,"KRN",9.8,"NM",1,0)
XINDEX^^0^B30540711
"BLD",1370,"KRN",9.8,"NM",2,0)
XINDX6^^0^B20048257
"BLD",1370,"KRN",9.8,"NM",3,0)
XINDX10^^0^B26794578
"BLD",1370,"KRN",9.8,"NM",4,0)
XTRUTL1^^0^B3068515
"BLD",1370,"KRN",9.8,"NM",5,0)
XINDX11^^0^B11308547
"BLD",1370,"KRN",9.8,"NM",6,0)
XINDX3^^0^B14051168
"BLD",1370,"KRN",9.8,"NM",7,0)
XINDX9^^0^B17326619
"BLD",1370,"KRN",9.8,"NM","B","XINDEX",1)

"BLD",1370,"KRN",9.8,"NM","B","XINDX10",3)

"BLD",1370,"KRN",9.8,"NM","B","XINDX11",5)

"BLD",1370,"KRN",9.8,"NM","B","XINDX3",6)

"BLD",1370,"KRN",9.8,"NM","B","XINDX6",2)

"BLD",1370,"KRN",9.8,"NM","B","XINDX9",7)

"BLD",1370,"KRN",9.8,"NM","B","XTRUTL1",4)

"BLD",1370,"KRN",19,0)
19
"BLD",1370,"KRN",19.1,0)
19.1
"BLD",1370,"KRN",101,0)
101
"BLD",1370,"KRN",409.61,0)
409.61
"BLD",1370,"KRN",771,0)
771
"BLD",1370,"KRN",779.2,0)
779.2
"BLD",1370,"KRN",870,0)
870
"BLD",1370,"KRN",8989.51,0)
8989.51
"BLD",1370,"KRN",8989.52,0)
8989.52
"BLD",1370,"KRN",8994,0)
8994
"BLD",1370,"KRN",9002226,0)
9002226
"BLD",1370,"KRN","B",.4,.4)

"BLD",1370,"KRN","B",.401,.401)

"BLD",1370,"KRN","B",.402,.402)

"BLD",1370,"KRN","B",.403,.403)

"BLD",1370,"KRN","B",.5,.5)

"BLD",1370,"KRN","B",.84,.84)

"BLD",1370,"KRN","B",3.6,3.6)

"BLD",1370,"KRN","B",3.8,3.8)

"BLD",1370,"KRN","B",9.2,9.2)

"BLD",1370,"KRN","B",9.8,9.8)

"BLD",1370,"KRN","B",19,19)

"BLD",1370,"KRN","B",19.1,19.1)

"BLD",1370,"KRN","B",101,101)

"BLD",1370,"KRN","B",409.61,409.61)

"BLD",1370,"KRN","B",771,771)

"BLD",1370,"KRN","B",779.2,779.2)

"BLD",1370,"KRN","B",870,870)

"BLD",1370,"KRN","B",8989.51,8989.51)

"BLD",1370,"KRN","B",8989.52,8989.52)

"BLD",1370,"KRN","B",8994,8994)

"BLD",1370,"KRN","B",9002226,9002226)

"BLD",1370,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",1370,"QUES",0)
^9.62^^
"BLD",1370,"REQB",0)
^9.611^^
"INIT")
XT73P132
"MBREQ")
0
"PKG",6,-1)
1^1
"PKG",6,0)
TOOLKIT^XT^PROGRAMMERS OPTIONS, MULTI. TERM LOOKUP^
"PKG",6,20,0)
^9.402P^^0
"PKG",6,22,0)
^9.49I^1^1
"PKG",6,22,1,0)
7.3^3040428^2970513^2
"PKG",6,22,1,"PAH",1,0)
132^3110901
"PKG",6,22,1,"PAH",1,1,0)
^^3^3^3110901
"PKG",6,22,1,"PAH",1,1,1,0)
Please see the patch description on FORUM, in the National Patch Module.
"PKG",6,22,1,"PAH",1,1,2,0)

"PKG",6,22,1,"PAH",1,1,3,0)

"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","XINDEX")
0^1^B30540711^B30427549
"RTN","XINDEX",1,0)
XINDEX ;ISC/REL,GFT,GRK,RWF - INDEX & CROSS-REFERENCE ;08/04/08  13:19
"RTN","XINDEX",2,0)
 ;;7.3;TOOLKIT;**20,27,48,61,66,68,110,121,128,132**;Apr 25, 1995;Build 13
"RTN","XINDEX",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XINDEX",4,0)
 G ^XINDX6
"RTN","XINDEX",5,0)
SEP F I=1:1 S CH=$E(LIN,I) D QUOTE:CH=Q Q:" "[CH
"RTN","XINDEX",6,0)
 S ARG=$E(LIN,1,I-1) S:CH=" " I=I+1 S LIN=$E(LIN,I,999) Q
"RTN","XINDEX",7,0)
QUOTE F I=I+1:1 S CH=$E(LIN,I) Q:CH=""!(CH=Q)
"RTN","XINDEX",8,0)
 Q:CH]""  S ERR=6 G ^XINDX1
"RTN","XINDEX",9,0)
ALIVE ;enter here from taskman
"RTN","XINDEX",10,0)
 D SETUP^XINDX7 ;Get ready to process
"RTN","XINDEX",11,0)
A2 S RTN=$O(^UTILITY($J,RTN)) G ^XINDX5:RTN=""
"RTN","XINDEX",12,0)
 S INDLC=(RTN?1"|"1.4L.NP) D LOAD:'INDLC&'$D(^UTILITY($J,1,RTN,0))
"RTN","XINDEX",13,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S RTN="~",IND("QUIT")=1,ZTSTOP=1 G A2
"RTN","XINDEX",14,0)
 I 'INDDS,INDLC W !!?10,"Data Dictionaries",! S INDDS=1
"RTN","XINDEX",15,0)
 D BEG
"RTN","XINDEX",16,0)
 G A2
"RTN","XINDEX",17,0)
 ;
"RTN","XINDEX",18,0)
LOAD S X=RTN,XCNP=0,DIF="^UTILITY("_$J_",1,RTN,0," X ^%ZOSF("TEST") Q:'$T  X ^%ZOSF("LOAD") S ^UTILITY($J,1,RTN,0,0)=XCNP-1
"RTN","XINDEX",19,0)
 I $D(^UTILITY($J,1,RTN,0,0)) S ^UTILITY($J,1,RTN,"RSUM")="B"_$$SUMB^XPDRSUM($NA(^UTILITY($J,1,RTN,0)))
"RTN","XINDEX",20,0)
 Q
"RTN","XINDEX",21,0)
BEG ;
"RTN","XINDEX",22,0)
 S %=INDLC*5 W:$X+10+%>IOM ! W RTN,$J("",10+%-$L(RTN))
"RTN","XINDEX",23,0)
 S (IND("DO"),IND("SZT"),IND("SZC"),LABO)=0,LC=$G(^UTILITY($J,1,RTN,0,0))
"RTN","XINDEX",24,0)
 I LC="" W !,">>>Routine '",RTN,"' not found <<<",! Q
"RTN","XINDEX",25,0)
 S TXT="",LAB=$P(^UTILITY($J,1,RTN,0,1,0)," ") I RTN'=$P(LAB,"(") D E^XINDX1(17)
"RTN","XINDEX",26,0)
 I 'INDLC,LAB["(" D E^XINDX1(55) S LAB=$P(LAB,"(")
"RTN","XINDEX",27,0)
 ;if M routine(not compiled template or DD) and has more than 2 lines, check lines 1 & 2
"RTN","XINDEX",28,0)
 I 'INDLC,LC>2 D
"RTN","XINDEX",29,0)
 . N LABO S LABO=1
"RTN","XINDEX",30,0)
 . S LIN=$G(^UTILITY($J,1,RTN,0,1,0)),TXT=1
"RTN","XINDEX",31,0)
 . ;check 1st line (site/dev - ) patch 128
"RTN","XINDEX",32,0)
 . I $P(LIN,";",2,4)'?.E1"/".E.1"-".E D E^XINDX1(62)
"RTN","XINDEX",33,0)
 . S LIN=$G(^UTILITY($J,1,RTN,0,2,0)),TXT=2
"RTN","XINDEX",34,0)
 . ;check 2nd line (;;nn.nn[TV]nn;package;.anything)
"RTN","XINDEX",35,0)
 . I $P(LIN,";",3,99)'?1.2N1"."1.2N.1(1"T",1"V").2N1";"1A.APN1";".E D E^XINDX1(44) ;patch 132
"RTN","XINDEX",36,0)
 . I $L(INP(11)) X INP(11) ;Version number check
"RTN","XINDEX",37,0)
 . I $L(INP(12)) X INP(12) ;Patch number check
"RTN","XINDEX",38,0)
B5 F TXT=1:1:LC S LIN=^UTILITY($J,1,RTN,0,TXT,0),LN=$L(LIN),IND("SZT")=IND("SZT")+LN+2 D LN,ST ;Process Line
"RTN","XINDEX",39,0)
 S LAB="",LABO=0,TXT=0,^UTILITY($J,1,RTN,0)=IND("SZT")_"^"_LC_"^"_IND("SZC")
"RTN","XINDEX",40,0)
 I IND("SZT")>INP("MAX"),'INDLC S ERR=35,ERR(1)=IND("SZT") D ^XINDX1
"RTN","XINDEX",41,0)
 I IND("SZT")-IND("SZC")>INP("CMAX"),'INDLC S ERR=58,ERR(1)=IND("SZT")-IND("SZC") D ^XINDX1
"RTN","XINDEX",42,0)
 D POSTRTN
"RTN","XINDEX",43,0)
 Q
"RTN","XINDEX",44,0)
 ;Proccess one line, LN = Length, LIN = Line.
"RTN","XINDEX",45,0)
LN K V S (ARG,GRB,IND("COM"),IND("DOL"),IND("F"))="",X=$P(LIN," ")
"RTN","XINDEX",46,0)
 I '$L(X) S LABO=LABO+1 G CD
"RTN","XINDEX",47,0)
 S (IND("COM"),LAB)=$P(X,"("),ARG=$P($P(X,"(",2),")"),LABO=0,IND("PP")=X?1.8E1"(".E1")"
"RTN","XINDEX",48,0)
 D:$L(ARG) NE^XINDX3 ;Process formal parameters as New list.
"RTN","XINDEX",49,0)
 I 'INDLC,'$$VT^XINDX2(LAB) D E^XINDX1($S(LAB=$$CASE^XINDX52(LAB):37,1:55)) ;Check for bad labels
"RTN","XINDEX",50,0)
 I $D(^UTILITY($J,1,RTN,"T",LAB)) D E^XINDX1(15) G CD ;DUP label
"RTN","XINDEX",51,0)
 S ^UTILITY($J,1,RTN,"T",LAB)=""
"RTN","XINDEX",52,0)
CD I LN>245 D:'(LN=246&($E(RTN,1,3)="|dd")) E^XINDX1(19) ;patch 119
"RTN","XINDEX",53,0)
 D:LIN'?1.ANP E^XINDX1(18)
"RTN","XINDEX",54,0)
 S LIN=$P(LIN," ",2,999),IND("LCC")=1
"RTN","XINDEX",55,0)
 I LIN="" D E^XINDX1(42) Q  ;Blank line ;p110
"RTN","XINDEX",56,0)
 S I=0 ;Watch the scope of I, counts dots
"RTN","XINDEX",57,0)
 I " ."[$E(LIN) D  S X=$L($E(LIN,1,I),".")-1,LIN=$E(LIN,I,999)
"RTN","XINDEX",58,0)
 . F I=1:1:245 Q:". "'[$E(LIN,I)
"RTN","XINDEX",59,0)
 . Q
"RTN","XINDEX",60,0)
 ;check dots against Do level IND("DO"), IND("DOL")=dot level
"RTN","XINDEX",61,0)
 D:'I&$G(IND("DO1")) E^XINDX1(51) S IND("DO1")=0 S:'I IND("DO")=0
"RTN","XINDEX",62,0)
 I I D:X>IND("DO") E^XINDX1(51) S (IND("DO"),IND("DOL"))=X
"RTN","XINDEX",63,0)
 ;Count Comment lines, skip ;; lines
"RTN","XINDEX",64,0)
 I $E(LIN)=";",$E(LIN,2)'=";" S IND("SZC")=IND("SZC")+$L(LIN) ;p110
"RTN","XINDEX",65,0)
 ;Process commands on line.
"RTN","XINDEX",66,0)
EE I LIN="" D ^XINDX2 Q
"RTN","XINDEX",67,0)
 S COM=$E(LIN),GK="",ARG=""
"RTN","XINDEX",68,0)
 I COM=";" S LIN="" G EE ;p110
"RTN","XINDEX",69,0)
 I COM=" " S ERR=$S(LIN?1." ":13,1:0),LIN=$S(ERR:"",1:$E(LIN,2,999)) D:ERR ^XINDX1 G EE
"RTN","XINDEX",70,0)
 D SEP
"RTN","XINDEX",71,0)
 S CM=$P(ARG,":",1),POST=$P(ARG,":",2,999),IND("COM")=IND("COM")_$C(9)_COM,ERR=48
"RTN","XINDEX",72,0)
 D:ARG[":"&(POST']"") ^XINDX1 S:POST]"" GRB=GRB_$C(9)_POST,IND("COM")=IND("COM")_":"
"RTN","XINDEX",73,0)
 ;SAC now allows lowercase commands
"RTN","XINDEX",74,0)
 I CM?.E1L.E S CM=$$CASE^XINDX52(CM),COM=$E(CM) ;I IND("LCC") S IND("LCC")=0 D E^XINDX1(47)
"RTN","XINDEX",75,0)
 I CM="" D E^XINDX1(21) G EE ;Missing command
"RTN","XINDEX",76,0)
 S CX=$G(IND("CMD",CM)) I CX="" D  G:CX="" EE
"RTN","XINDEX",77,0)
 . I $E(CM)="Z" S CX="^Z" Q  ;Proccess Z commands
"RTN","XINDEX",78,0)
 . D E^XINDX1(1) S LIN="" Q
"RTN","XINDEX",79,0)
 S CX=$P(CX,"^",2,9)
"RTN","XINDEX",80,0)
 D SEP I '$L(LIN),CH=" " D E^XINDX1(13) ;trailing space
"RTN","XINDEX",81,0)
 I ARG="","CGJMORSUWX"[COM S ERR=49 G ^XINDX1
"RTN","XINDEX",82,0)
 I CX>0 D E^XINDX1(CX) S CX=""
"RTN","XINDEX",83,0)
 D:$L(CX) @CX S:ARG'="" GRB=GRB_$C(9)_ARG G EE
"RTN","XINDEX",84,0)
B S ERR=25 G ^XINDX1
"RTN","XINDEX",85,0)
C S ERR=29 G ^XINDX1
"RTN","XINDEX",86,0)
D G DG1^XINDX4
"RTN","XINDEX",87,0)
E Q:ARG=""  S ERR=7 G ^XINDX1
"RTN","XINDEX",88,0)
F G:ARG]"" FR^XINDX4 S IND("F")=1 Q
"RTN","XINDEX",89,0)
G G DG^XINDX4
"RTN","XINDEX",90,0)
H Q:ARG'=""  S ERR=32 G ^XINDX1
"RTN","XINDEX",91,0)
J S ERR=36,ARG="" G ^XINDX1
"RTN","XINDEX",92,0)
K S ERR=$S(ARG?1"(".E:22,ARG?." ":23,1:0) D:ERR ^XINDX1
"RTN","XINDEX",93,0)
 G KL^XINDX3
"RTN","XINDEX",94,0)
L G LO^XINDX4
"RTN","XINDEX",95,0)
M G S^XINDX3
"RTN","XINDEX",96,0)
N G NE^XINDX3
"RTN","XINDEX",97,0)
O S ERR=34 D ^XINDX1,O^XINDX3 Q
"RTN","XINDEX",98,0)
Q Q:ARG=""  G Q^XINDX4
"RTN","XINDEX",99,0)
R S RDTIME=0 G RD^XINDX3
"RTN","XINDEX",100,0)
S G S^XINDX3
"RTN","XINDEX",101,0)
TR Q  ;What to process. p110
"RTN","XINDEX",102,0)
U S ARG=$P(ARG,":") Q
"RTN","XINDEX",103,0)
V S ARG="",ERR=20 G ^XINDX1
"RTN","XINDEX",104,0)
W G WR^XINDX4
"RTN","XINDEX",105,0)
X G XE^XINDX4
"RTN","XINDEX",106,0)
Z S ERR=2 D ^XINDX1 G ZC^XINDX4
"RTN","XINDEX",107,0)
 ;
"RTN","XINDEX",108,0)
 ;Save off items from line.
"RTN","XINDEX",109,0)
ST S R=LAB_$S(LABO:"+"_LABO,1:"")
"RTN","XINDEX",110,0)
 ;Local variable, Global, Marked Items, Naked global, Internal ref, eXternal ref., Tag ref.
"RTN","XINDEX",111,0)
 S LOC="" F  S LOC=$O(V(LOC)),S="" Q:LOC=""  F  S S=$O(V(LOC,S)) Q:S=""  D SET
"RTN","XINDEX",112,0)
 S ^UTILITY($J,1,RTN,"COM",TXT)=IND("COM")
"RTN","XINDEX",113,0)
 Q
"RTN","XINDEX",114,0)
 ;
"RTN","XINDEX",115,0)
SET I V(LOC,S)]"" F %="!","~" I V(LOC,S)[%,$G(^UTILITY($J,1,RTN,LOC,S))'[% S ^(S)=$G(^(S))_%
"RTN","XINDEX",116,0)
 S %=0
"RTN","XINDEX",117,0)
SE2 S ARG=$G(^UTILITY($J,1,RTN,LOC,S,%)) I $L(ARG)>230 S %=%+1 G SE2
"RTN","XINDEX",118,0)
 S ^UTILITY($J,1,RTN,LOC,S,%)=ARG_R_V(LOC,S)_","
"RTN","XINDEX",119,0)
 Q
"RTN","XINDEX",120,0)
 ;
"RTN","XINDEX",121,0)
POSTRTN ;Do more overall checking
"RTN","XINDEX",122,0)
 N V,E,T,T1,T2
"RTN","XINDEX",123,0)
 S T="" ;Check for missing Labels
"RTN","XINDEX",124,0)
 F  S T=$O(^UTILITY($J,1,RTN,"I",T)),T2=T Q:T=""  S T1=$G(^(T,0)) D
"RTN","XINDEX",125,0)
 . Q:$E(T2,1,2)="@("
"RTN","XINDEX",126,0)
 . S:$E(T2,1,2)="$$" T2=$E(T2,3,99)
"RTN","XINDEX",127,0)
 . I T2]"",'$D(^UTILITY($J,1,RTN,"T",$P(T2,"+",1))) D
"RTN","XINDEX",128,0)
 . . F I=1:1:$L(T1,",")-1 S LAB=$P(T1,",",I),LABO=+$P(LAB,"+",2),LAB=$P(LAB,"+"),E=14,E(1)=T D E^XINDX1(.E)
"RTN","XINDEX",129,0)
 . . Q
"RTN","XINDEX",130,0)
 . Q
"RTN","XINDEX",131,0)
 S LAB="",LABO=0 ;Check for valid label names
"RTN","XINDEX",132,0)
 I 'INDLC F  S LAB=$O(^UTILITY($J,1,RTN,"T",LAB)) Q:LAB=""  D
"RTN","XINDEX",133,0)
 . I '$$VA^XINDX2(LAB) D E^XINDX1(55) Q
"RTN","XINDEX",134,0)
 . D:'$$VT^XINDX2(LAB) E^XINDX1(37)
"RTN","XINDEX",135,0)
 . Q
"RTN","XINDEX",136,0)
 S LAB="",LABO=0 ;Check for valid variable names.
"RTN","XINDEX",137,0)
 F  S LAB=$O(^UTILITY($J,1,RTN,"L",LAB)) Q:LAB=""  D
"RTN","XINDEX",138,0)
 . D VLNF^XINDX3($P(LAB,"("))
"RTN","XINDEX",139,0)
 . Q
"RTN","XINDEX",140,0)
 Q
"RTN","XINDEX",141,0)
 ;
"RTN","XINDEX",142,0)
QUICK ;Quick, Just get a routine an print the results
"RTN","XINDEX",143,0)
 D QUICK^XINDX6()
"RTN","XINDEX",144,0)
 Q
"RTN","XINDX10")
0^3^B26794578^B25398590
"RTN","XINDX10",1,0)
XINDX10 ;ISC/GRK - assemble DD executable code ;11/12/2002  11:40
"RTN","XINDX10",2,0)
 ;;7.3;TOOLKIT;**20,27,66,68,132**;Apr 25, 1995;Build 13
"RTN","XINDX10",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XINDX10",4,0)
ASK ;Ask for Build, Install, or Package file.
"RTN","XINDX10",5,0)
 N X,Y,P,V,RN
"RTN","XINDX10",6,0)
 S DA=0,Y=-1,INP(11)=""
"RTN","XINDX10",7,0)
 S:$D(^DD(9.6,0)) P=9.6,Y=$$BUILD^XTRUTL1 Q:$D(DUOUT)  D:Y>0  I Y<0 S:$D(^DD(9.7,0)) P=9.7,Y=$$INSTALL^XTRUTL1 D:Y>0
"RTN","XINDX10",8,0)
 . S INP(10)=P,DA=+Y,X=$P(Y,"^",2),V=$$VER^XTRUTL1(X)
"RTN","XINDX10",9,0)
 . S INP(11)="I $P(LIN,"";"",3)'["""_V_""" D E^XINDX1(44)",INP(11.1)=V
"RTN","XINDX10",10,0)
 . I $L($P(X,"*",3)) S INP(12)="I $P(LIN,"";"",5)'?.E1P1"""_$P(X,"*",3)_"""1P.E S ERR=56,ERR(1)=INP(12.1) D E^XINDX1(.ERR)",INP(12.1)=$P(X,"*",3)
"RTN","XINDX10",11,0)
 . Q
"RTN","XINDX10",12,0)
 K DIC Q:$D(DUOUT)
"RTN","XINDX10",13,0)
 I $D(^DD(9.4,0)),'DA S DIC="^DIC(9.4,",DIC(0)="AEQMZ" D ^DIC S INP(10)=9.4,DA=+Y
"RTN","XINDX10",14,0)
 Q
"RTN","XINDX10",15,0)
 ;
"RTN","XINDX10",16,0)
START ;called from SETUP^XINDX7
"RTN","XINDX10",17,0)
 G PKG:INP(10)=9.4,NEXT:INP(10)=9.7
"RTN","XINDX10",18,0)
 ;Get routines and other code from BUILD.
"RTN","XINDX10",19,0)
 W !,"The BUILD file Data Dictionaries are being processed.",!
"RTN","XINDX10",20,0)
 F J=0:0 S J=$O(^XPD(9.6,DA,4,J)) Q:J'>0  I $D(^(J,0)) S INDFN=+^(0),INDRN="|dd"_INDFN D XPD
"RTN","XINDX10",21,0)
 G NEXT
"RTN","XINDX10",22,0)
PKG W !,"The package file Data Dictionaries are being processed.",!
"RTN","XINDX10",23,0)
 F J=0:0 S J=$O(^DIC(9.4,DA,4,J)) Q:J'>0  I $D(^(J,0)) S INDFN=+^(0),INDRN="|dd"_INDFN,(INDF,INDL)=0 D INSERT
"RTN","XINDX10",24,0)
NEXT D ^XINDX11,REMCOMP:'INP(9) K A,B,C,C9,G,H,INDD,INDEL,INDF,INDFN,INDID,INDL,INDN,INDRN,INDSB,INDX,INDXN,INDXRF,DA,DIC,J,INDLC,INDC
"RTN","XINDX10",25,0)
 Q
"RTN","XINDX10",26,0)
XPD ;Check if Full/Partial DD
"RTN","XINDX10",27,0)
 N IND1,IND222,J2,J3 S IND222=$G(^XPD(9.6,DA,4,J,222))
"RTN","XINDX10",28,0)
 S (INDF,INDL)=0 I $P(IND222,"^",3)="f" K IND222 D INSERT Q
"RTN","XINDX10",29,0)
 ;Each entry at the J2 level is a new file/sub-file.
"RTN","XINDX10",30,0)
 F J2=0:0 S J2=$O(^XPD(9.6,DA,4,J,2,J2)) Q:J2'>0  S IND1=^(J2,0) D
"RTN","XINDX10",31,0)
 . S INDFN=J2,INDRN="|dd"_INDFN,INDLC=0 Q:'$$HDR()
"RTN","XINDX10",32,0)
 . ;Each J3 is a field in the file.
"RTN","XINDX10",33,0)
 . F J3=0:0 S J3=$O(^XPD(9.6,DA,4,J,2,J2,1,J3)) Q:J3'>0  S INDFN=J2,INDF=J3,INDL=0 D STRIP
"RTN","XINDX10",34,0)
 . S ^UTILITY($J,1,INDRN,0,0)=INDLC
"RTN","XINDX10",35,0)
 . Q
"RTN","XINDX10",36,0)
 Q
"RTN","XINDX10",37,0)
HDR() ;Display Header and start faux routine build
"RTN","XINDX10",38,0)
 I '$D(^DD(INDFN)) W !,"File # ",INDFN," is missing !",$C(7) Q 0
"RTN","XINDX10",39,0)
 S ^UTILITY($J,INDRN)="",NRO=NRO+1 W !,INDFN," ",$O(^DD(INDFN,0,"NM",0))
"RTN","XINDX10",40,0)
 S INDLC=0,INDC=INDRN_" ;"_$S($D(IND222):"Partial ",1:"")_"DD of the "_$O(^DD(INDFN,0,"NM",0))_$S(INDL:" sub-",1:" ")_"file"_$S(INDL:" of the "_$O(^DD(INDFN(1),0,"NM",0))_" (#"_INDFN(1)_") file.",1:"."),INDX="" D ADD
"RTN","XINDX10",41,0)
 Q 1
"RTN","XINDX10",42,0)
INSERT ;Find executable code in this DD
"RTN","XINDX10",43,0)
 Q:'$$HDR
"RTN","XINDX10",44,0)
ID S INDID=-1 F G=0:0 S INDID=$O(^DD(INDFN,0,"ID",INDID)) Q:INDID=""  I $D(^(INDID))#2 S INDC="ID"_INDID_" ; IDENTIFIER CODE FOR "_INDID S INDX=$S(^(INDID)]"":^(INDID),1:"Q") D ADD
"RTN","XINDX10",45,0)
W I $D(^DD(INDFN,0,"W"))#2 S INDX=^("W"),INDC="W ; 'W' code ??" D ADD
"RTN","XINDX10",46,0)
FLD S INDF=$O(^DD(INDFN,INDF)) I INDF>0 D STRIP W "." G FLD
"RTN","XINDX10",47,0)
 S ^UTILITY($J,1,INDRN,0,0)=INDLC Q
"RTN","XINDX10",48,0)
STRIP ;
"RTN","XINDX10",49,0)
 S A=$P(^DD(INDFN,INDF,0),"^",2) I A D PUSH,INSERT,POP Q
"RTN","XINDX10",50,0)
 I A'["W",A'["S" S INDX=$P(^(0),"^",5,99),INDC=INDF_" ; "_$P(^(0),"^",1) D ADD
"RTN","XINDX10",51,0)
 I $D(^DD(INDFN,INDF,2))#2 S INDC=INDF_"OT ; OUTPUT TRANSFORM CODE",INDX=^(2) D ADD
"RTN","XINDX10",52,0)
 I $D(^DD(INDFN,INDF,4))#2 S INDC=INDF_"HELP ; EXECUTABLE HELP CODE",INDX=^(4) D ADD
"RTN","XINDX10",53,0)
 I $D(^DD(INDFN,INDF,12)) S INDC=INDF_"SCR ; "_$E(^(12),1,220) S INDX=$S($D(^(12.1))#2:^(12.1),1:"Q") D ADD
"RTN","XINDX10",54,0)
 I $D(^DD(INDFN,INDF,7.5))#2 S INDC=INDF_"TPL ; TRANSFORM DONE PRIOR TO THE DIC LOOK-UP",INDX=^(7.5) D ADD
"RTN","XINDX10",55,0)
 I $D(^DD(INDFN,INDF,"AX"))#2 S INDC=INDF_"AX ; EXECUTABLE AUDIT CHECK CODE",INDX=^("AX") D ADD
"RTN","XINDX10",56,0)
 F INDEL=9.2:.1:9.9 I $D(^DD(INDFN,INDF,INDEL))#2 S INDC=INDF_"OF"_INDEL_" ; OVERFLOW CODE",INDX=^(INDEL) D ADD
"RTN","XINDX10",57,0)
 S INDEL="" F  S INDEL=$O(^DD(INDFN,INDF,"DEL",INDEL)) Q:INDEL=""  I $D(^(INDEL,0))#2 S INDC=INDF_"DEL"_INDEL_" ; DELETE PROTECTION CODE",INDX=^(0) D ADD
"RTN","XINDX10",58,0)
 S INDEL="" F G=0:0 S INDEL=$O(^DD(INDFN,INDF,"LAYGO",INDEL)) Q:INDEL=""  I $D(^(INDEL,0))#2 S INDC=INDF_"LAYGO"_INDEL_" ; LAYGO CHECK CODE",INDX=^(0) D ADD
"RTN","XINDX10",59,0)
 F INDXRF=0:0 S INDXRF=$O(^DD(INDFN,INDF,1,INDXRF)) Q:INDXRF'>0  S C=$P(^(INDXRF,0),"^",2) F G=0:0 S G=$O(^DD(INDFN,INDF,1,INDXRF,G)) Q:G'>0  D XREFS
"RTN","XINDX10",60,0)
 Q
"RTN","XINDX10",61,0)
XREFS Q:('$D(^(G))#2)!(G=3)  ;Node 3 is don't delete comment.
"RTN","XINDX10",62,0)
 S INDC=INDF_"XRF"_INDXRF_$S(G=1:"S",G=2:"K",1:"n"_G)_" ; "_$S(G<2:"SET",G<3:"KILL",1:"OVERFLOW")_" LOGIC FOR '"_$S(C]"":C,1:INDXRF)_"' XREF",INDX=^(G) D ADD
"RTN","XINDX10",63,0)
 Q
"RTN","XINDX10",64,0)
ADD ;Put code in UTILITY for processing
"RTN","XINDX10",65,0)
 S INDLC=INDLC+1,^UTILITY($J,1,INDRN,0,INDLC,0)=INDC I INDX]"" S INDLC=INDLC+1,^UTILITY($J,1,INDRN,0,INDLC,0)=" "_INDX
"RTN","XINDX10",66,0)
 Q
"RTN","XINDX10",67,0)
PUSH S INDL=INDL+1 F A="INDFN","INDF","INDLC","INDRN" S @(A_"(INDL)")=@A
"RTN","XINDX10",68,0)
 S INDFN=+$P(^DD(INDFN,INDF,0),"^",2),INDRN="|dd"_INDFN,(INDLC,INDF)=0
"RTN","XINDX10",69,0)
 Q
"RTN","XINDX10",70,0)
POP F A="INDFN","INDF","INDLC","INDRN" S @A=@(A_"(INDL)")
"RTN","XINDX10",71,0)
 S INDL=INDL-1 Q
"RTN","XINDX10",72,0)
REMCOMP ;Remove compiled template routines from selected list
"RTN","XINDX10",73,0)
 S %="|dd"
"RTN","XINDX10",74,0)
 F J=1:1 S %=$O(^UTILITY($J,%)) Q:%'?1"|dd".NP  S INDFN=+$E(%,4,999) I '$D(^DD(INDFN,0,"UP")) F F="^DIE(","^DIPT(" S F1=F_"""F"_INDFN_""",",%1="" F J=0:0 S %1=$O(@(F1_"%1)")) Q:%1=""  F %2=0:0 S %2=$O(@(F1_"%1,%2)")) Q:%2'>0  D P
"RTN","XINDX10",75,0)
 Q
"RTN","XINDX10",76,0)
P I $D(@(F_"%2,0)")) S R=$E($S($D(^("ROU")):^("ROU"),$D(^("ROUOLD")):^("ROUOLD"),1:""),2,999)
"RTN","XINDX10",77,0)
 Q:R=""
"RTN","XINDX10",78,0)
 I $D(^UTILITY($J,R)) K ^UTILITY($J,R)
"RTN","XINDX10",79,0)
 S RN=R F J=0:0 S RN=$O(^UTILITY($J,RN)) Q:RN=""!(RN'?@("1"""_R_"""1N.N"))  K ^UTILITY($J,RN)
"RTN","XINDX10",80,0)
 Q
"RTN","XINDX11")
0^5^B11308547^B11119765
"RTN","XINDX11",1,0)
XINDX11 ;ISC/GRK - Create phantom routines for functions, options, etc. ;07/08/98  15:06
"RTN","XINDX11",2,0)
 ;;7.3;TOOLKIT;**20,27,121,132**;Apr 25, 1995;Build 13
"RTN","XINDX11",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XINDX11",4,0)
 G:INP(10)=9.7 RTN
"RTN","XINDX11",5,0)
 W !,"The option and function files are being processed.",!
"RTN","XINDX11",6,0)
 G:INP(10)=9.4 PKG
"RTN","XINDX11",7,0)
 N KRN,TYPE ;Build file
"RTN","XINDX11",8,0)
 S INDFN="^DD(""FUNC"",",INDRN="|func",INDD="Function",INDSB="FUNC",INDXN="Build file" D HDR
"RTN","XINDX11",9,0)
 F KRN=0:0 S KRN=$O(^XPD(9.6,INDDA,"KRN",.5,"NM",KRN)) Q:KRN'>0  S INDXN=$P(^(KRN,0),U) D ENTRY
"RTN","XINDX11",10,0)
 I INDLC=2 K ^UTILITY($J,INDRN),^UTILITY($J,1,INDRN) ;patch 121
"RTN","XINDX11",11,0)
 S INDFN="^DIC(19,",INDRN="|opt",INDD="Option",INDSB="OPT",INDXN="Build file" D HDR
"RTN","XINDX11",12,0)
 F KRN=0:0 S KRN=$O(^XPD(9.6,INDDA,"KRN",19,"NM",KRN)) Q:KRN'>0  S INDXN=$P(^(KRN,0),U) D ENTRY
"RTN","XINDX11",13,0)
 I INDLC=2 K ^UTILITY($J,INDRN),^UTILITY($J,1,INDRN)
"RTN","XINDX11",14,0)
RTN ;Routines
"RTN","XINDX11",15,0)
 ;F KRN=0:0 S KRN=$O(^XPD(9.6,INDDA,"KRN",9.8,"NM",KRN)) Q:KRN'>0  S X=^(KRN,0) I '$P(X,U,3) S ^UTILITY($J,$P(X,U))=""
"RTN","XINDX11",16,0)
 I $T(RTN^XTRUTL1)]"" D RTN^XTRUTL1(INDDA,INP(10))
"RTN","XINDX11",17,0)
 Q
"RTN","XINDX11",18,0)
PKG D NAMSP ;Package file
"RTN","XINDX11",19,0)
 S INDFN="^DD(""FUNC"",",INDRN="|func",INDD="Function",INDSB="FUNC" D NAME
"RTN","XINDX11",20,0)
 S INDFN="^DIC(19,",INDRN="|opt",INDD="Option",INDSB="OPT" D NAME
"RTN","XINDX11",21,0)
 Q
"RTN","XINDX11",22,0)
NAME Q:'$D(@(INDFN_"""B"")"))
"RTN","XINDX11",23,0)
 D HDR
"RTN","XINDX11",24,0)
 S INDL=$E(INDXN,1,$L(INDXN)-1)_$C($A(INDXN,$L(INDXN))-1)_"z"
"RTN","XINDX11",25,0)
 F A=0:0 S INDL=$O(@(INDFN_"""B"",INDL)")) Q:$P(INDL,INDXN,1)]""!(INDL="")  F B=0:0 S B=$O(@(INDFN_"""B"",INDL,B)")) Q:B=""  X INDF D:C8 @INDSB
"RTN","XINDX11",26,0)
 I INDLC=2 K ^UTILITY($J,INDRN),^UTILITY($J,1,INDRN) Q
"RTN","XINDX11",27,0)
 S ^UTILITY($J,1,INDRN,0,0)=INDLC
"RTN","XINDX11",28,0)
 Q
"RTN","XINDX11",29,0)
NAMSP S INDXN=$P(^DIC(9.4,DA,0),"^",2),C9=0,INDXN(C9)="," F A=0:0 S A=$O(^DIC(9.4,DA,"EX",A)) Q:A'>0  I $D(^(A,0))#2 S C9=C9+1,INDXN(C9)=$P(^(0),"^")
"RTN","XINDX11",30,0)
 S INDF="S C8=1 F H=1:1:C9 I $P(INDL,INDXN(H))="""" S C8=0 Q" ; Checks excluded namespaces
"RTN","XINDX11",31,0)
 Q
"RTN","XINDX11",32,0)
HDR S INDLC=0,INDC=INDRN_" ; '"_INDXN_"' "_INDD_"s.",INDX=";" D ADD S ^UTILITY($J,INDRN)="",^UTILITY($J,1,INDRN,0,0)=0
"RTN","XINDX11",33,0)
 Q
"RTN","XINDX11",34,0)
ENTRY F B=0:0 S B=$O(@(INDFN_"""B"",INDXN,B)")) Q:B=""  D @INDSB
"RTN","XINDX11",35,0)
 ;I INDLC=2 K ^UTILITY($J,INDRN),^UTILITY($J,1,INDRN) Q ;patch 121 moved to top of routine
"RTN","XINDX11",36,0)
 S ^UTILITY($J,1,INDRN,0,0)=INDLC
"RTN","XINDX11",37,0)
 Q
"RTN","XINDX11",38,0)
FUNC ;Process Function file entry
"RTN","XINDX11",39,0)
 Q:'($D(^DD("FUNC",B,0))#2)  S INDC=B_" ; "_$P(^(0),"^",1)_" - "_$S($D(^(9))#2:$E(^(9),1,190),1:""),INDX=$S($D(^(1))#2:^(1),1:";") D ADD
"RTN","XINDX11",40,0)
 Q
"RTN","XINDX11",41,0)
OPT ;Process option file entry for MUMPS code
"RTN","XINDX11",42,0)
 Q:'$D(^DIC(19,B,0))  S T=$P(^(0),"^",4),INDC=B_" ; "_$P(^(0),"^",1)_" - "_$P(^(0),"^",2)_" ("_$P($P($P(^DD(19,4,0),"^",3),T_":",2),";",1)_")"_$S($P(^DIC(19,B,0),"^",6)]"":" - Locked by "_$P(^(0),"^",6),1:""),INDX="" D ADD
"RTN","XINDX11",43,0)
 S INDN="15,20,26,"_$S(T="E":"34,35,54",T="I":"34,35",T="P":"69,69.1,69.2,69.3,71,72,73",T="R":25,1:"") D OPTC:INDN
"RTN","XINDX11",44,0)
 Q
"RTN","XINDX11",45,0)
OPTC F J=1:1 S H=$P(INDN,",",J) Q:H=""  I $D(^DIC(19,B,H))#2 D
"RTN","XINDX11",46,0)
 . S %=^(H),INDX=$S(H'=25:%,1:"D "_$E("^",%'["^")_$P(%,"[")),INDC=" ; "_$P(^DD(19,H,0),"^",1) D ADD
"RTN","XINDX11",47,0)
 Q
"RTN","XINDX11",48,0)
ADD ;Put code in UTILITY for processing
"RTN","XINDX11",49,0)
 S INDLC=INDLC+1,^UTILITY($J,1,INDRN,0,INDLC,0)=INDC I INDX]"" S INDLC=INDLC+1,^UTILITY($J,1,INDRN,0,INDLC,0)=" "_INDX
"RTN","XINDX11",50,0)
 Q
"RTN","XINDX3")
0^6^B14051168^B12749285
"RTN","XINDX3",1,0)
XINDX3 ;ISC/REL,GRK,RWF - PROCESS MERGE/SET/READ/KILL/NEW/OPEN COMMANDS ;06/24/08  15:44
"RTN","XINDX3",2,0)
 ;;7.3;TOOLKIT;**20,27,61,68,110,121,128,132**;Apr 25, 1995;Build 13
"RTN","XINDX3",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XINDX3",4,0)
PEEK S Y=$G(LV(LV,LI+1)) Q
"RTN","XINDX3",5,0)
PEEK2 S Y=$G(LV(LV,LI+2)) Q
"RTN","XINDX3",6,0)
INC2 S LI=LI+1 ;Drop into INC
"RTN","XINDX3",7,0)
INC S LI=LI+1,S=$G(LV(LV,LI)),S1=$G(LV(LV,LI+1)),CH=$E(S) G ERR:$A(S)=10 Q
"RTN","XINDX3",8,0)
DN S LI(LV)=LI,LI(LV,1)=AC,LV=LV+1,LI=LI(LV),AC=NOA
"RTN","XINDX3",9,0)
 Q
"RTN","XINDX3",10,0)
UP ;Inc LI as we save to skip the $C(10).
"RTN","XINDX3",11,0)
 D PEEK S:$A(Y)=10 LI=LI+1 S LI(LV)=LI,LV=LV-1,LI=LI(LV),AC=LI(LV,1) Q
"RTN","XINDX3",12,0)
PEEKDN S Y=$G(LV(LV+1,LI(LV+1)+1)) Q
"RTN","XINDX3",13,0)
FIND F Y=LI:1:AC Q:L[$G(LV(LV,Y))
"RTN","XINDX3",14,0)
ERR D E^XINDX1(43) S (S,S1,CH)="" Q
"RTN","XINDX3",15,0)
 Q
"RTN","XINDX3",16,0)
 Q
"RTN","XINDX3",17,0)
S ;Set
"RTN","XINDX3",18,0)
 S STR=ARG,ARG="",RHS=0 D ^XINDX9
"RTN","XINDX3",19,0)
S2 S GK="" D INC I S="" D:'RHS E^XINDX1(10) Q
"RTN","XINDX3",20,0)
 I CH=",","!""#&)*+-,./:;<=?\]_~"[$E(S1),RHS=1 D E^XINDX1(10) G S2 ;patch 121
"RTN","XINDX3",21,0)
 I CH="," S RHS=0 G S2
"RTN","XINDX3",22,0)
 I CH="=" S RHS=1 D:"!#&)*,/:;<=?\]_~"[$E(S1) E^XINDX1(10) G S2 ;patch 119
"RTN","XINDX3",23,0)
 I CH="$",'RHS D  D:% E^XINDX1(10) ;Can't be on RHS of set.
"RTN","XINDX3",24,0)
 . S %=1
"RTN","XINDX3",25,0)
 . I "$E$P$X$Y"[$E(S,1,2) S %=0 Q
"RTN","XINDX3",26,0)
 . I "$EC$ET$QS"[$E(S,1,3) S %=0 Q
"RTN","XINDX3",27,0)
 . I "$ZE$ZT"[$E(S,1,3) S %=0 Q  ;Pickup in XINDX9
"RTN","XINDX3",28,0)
 . Q
"RTN","XINDX3",29,0)
 I CH="^" D FL G S2
"RTN","XINDX3",30,0)
 I CH="@" S Y=$$ASM(LV,LI,",") S:Y'["=" RHS=1 D INC,ARG^XINDX2 G S2
"RTN","XINDX3",31,0)
 I CH="(" D MULT G S2
"RTN","XINDX3",32,0)
 D FL G S2
"RTN","XINDX3",33,0)
MULT D INC S NOA=S I S'>0 S ERR=5 G ^XINDX1
"RTN","XINDX3",34,0)
 D DN S AC=AC+LI F  Q:AC'>LI  S:'RHS GK="*" D INC,ARG^XINDX2
"RTN","XINDX3",35,0)
 D UP Q
"RTN","XINDX3",36,0)
FL ;
"RTN","XINDX3",37,0)
 S:'RHS GK="*" D ARG^XINDX2
"RTN","XINDX3",38,0)
 Q
"RTN","XINDX3",39,0)
VLNF(X) ;Drop into VLN
"RTN","XINDX3",40,0)
VLN ;Valid Local Name > Variable
"RTN","XINDX3",41,0)
 S ERR=0
"RTN","XINDX3",42,0)
 Q:X?1(1U,1"%").15UN
"RTN","XINDX3",43,0)
 I X?1(1A,1"%").15AN D E^XINDX1(57) Q  ;Lowercase
"RTN","XINDX3",44,0)
 D E^XINDX1(11) ;Too long or other problem
"RTN","XINDX3",45,0)
 Q
"RTN","XINDX3",46,0)
VGN ;Valid Global Name
"RTN","XINDX3",47,0)
 S ERR=0 I X'?1(1U,1"%").7UN D E^XINDX1(12)
"RTN","XINDX3",48,0)
 Q
"RTN","XINDX3",49,0)
KL ;Process KILL
"RTN","XINDX3",50,0)
 S STR=ARG,ARG(1)=ARG,ARG="" D ^XINDX9
"RTN","XINDX3",51,0)
A D INC Q:S=""  G A:CH="," S LOC="L" D @$S(CH="@":"KL1",CH="^":"KL2",CH="(":"KL4",1:"KL3") G A
"RTN","XINDX3",52,0)
KL1 D INC,ARG^XINDX2 Q
"RTN","XINDX3",53,0)
KL2 S GK="!"
"RTN","XINDX3",54,0)
 I S1'="(" S ERR=24 D ^XINDX1
"RTN","XINDX3",55,0)
 G ARG^XINDX2
"RTN","XINDX3",56,0)
KL3 I "^DT^DTIME^DUZ^IOST^IOM^U^"[("^"_S_"^") S ERR=39,ERR(1)=S D ^XINDX1
"RTN","XINDX3",57,0)
 I "IO"=S D:S1="(" PEEKDN S ERR=39,ERR(1)=S_$S(S1["(":S1_Y_")",1:"") D:S1'="(" ^XINDX1 I S1="(",("QC"'[$E(Y,2)) D ^XINDX1
"RTN","XINDX3",58,0)
KL5 S GK="!" D ARG^XINDX2 Q  ;KILL SUBS
"RTN","XINDX3",59,0)
 Q
"RTN","XINDX3",60,0)
KL4 S NOA=S1 D DN,ARGS^XINDX2,UP,INC2 Q
"RTN","XINDX3",61,0)
NE ;NEW
"RTN","XINDX3",62,0)
 S ERR=$S("("[$E(ARG):26,1:0) I ERR G ^XINDX1 ;look for null or (
"RTN","XINDX3",63,0)
 S STR=ARG D ^XINDX9
"RTN","XINDX3",64,0)
N2 D INC Q:S=""  G N2:CH=","
"RTN","XINDX3",65,0)
 ;I CH?1P,("%@()"'[CH)&("$E"'[$E(S,1,2)) D E^XINDX1(11) G N2
"RTN","XINDX3",66,0)
 ;check for '@' and '$$' patch 128
"RTN","XINDX3",67,0)
 I CH?1P,(CH'=S) D  G:$G(ERTX)]"" N2
"RTN","XINDX3",68,0)
 . I "@("[CH,"$$E"'[$E(S,1,2),($P(S,CH,2)'?1A) D E^XINDX1(11) Q  ;$E(  & $$ only works with @
"RTN","XINDX3",69,0)
 . ;I "$"[CH,(LV(LV,1)'="@") D E^XINDX1(11) Q ;didn't allow $ET or $ES
"RTN","XINDX3",70,0)
 . I "$"[CH,(LV(LV,1)'="@"),$E(S,1,3)'="$ET",$E(S,1,3)'="$ES" D E^XINDX1(11) Q  ;P132 allow $ET & $ES
"RTN","XINDX3",71,0)
 S GK="~" D ARG^XINDX2
"RTN","XINDX3",72,0)
 G N2
"RTN","XINDX3",73,0)
 ;
"RTN","XINDX3",74,0)
RD S STR=ARG D ^XINDX9 S ARG=""
"RTN","XINDX3",75,0)
RD1 D INC Q:S=""
"RTN","XINDX3",76,0)
 ;I (CH="!")!(CH=",")!(CH=Q)!(CH="#") G RD1
"RTN","XINDX3",77,0)
 ;I CH="^" S ERR=11 D ^XINDX1
"RTN","XINDX3",78,0)
 I '((CH="%")!(CH?1A)!(CH="*")) D RD3 G RD1
"RTN","XINDX3",79,0)
 S Y=$$ASM(LV,LI,",") I Y'[":" S ERR=33,RDTIME=1 D ^XINDX1
"RTN","XINDX3",80,0)
 D RD2 G RD1
"RTN","XINDX3",81,0)
RD2 Q:","[CH
"RTN","XINDX3",82,0)
 I "*#"[CH D E^XINDX1(41)
"RTN","XINDX3",83,0)
 I "#:"[CH D INC,ARG^XINDX2,INC G RD2
"RTN","XINDX3",84,0)
 I (CH="%")!(CH?1A) S LOC="L",GK="*" D ARG^XINDX2,INC G RD2
"RTN","XINDX3",85,0)
 D INC G RD2
"RTN","XINDX3",86,0)
RD3 Q:","[CH  I "!#?"[CH D INC G RD3
"RTN","XINDX3",87,0)
 I (CH="%")!(CH?1A)!(CH="@") D ARG^XINDX2,INC G RD3
"RTN","XINDX3",88,0)
 Q
"RTN","XINDX3",89,0)
O S STR=ARG,AC=99 D ^XINDX9,INC S ARG="" I S["@" D ARGS^XINDX2 Q
"RTN","XINDX3",90,0)
 D ARG^XINDX2,INC D  D INC,ARGS^XINDX2 Q
"RTN","XINDX3",91,0)
 . F  D INC Q:":"[S
"RTN","XINDX3",92,0)
 . Q
"RTN","XINDX3",93,0)
 Q
"RTN","XINDX3",94,0)
ERRCP S ERR=5 D ^XINDX1 Q
"RTN","XINDX3",95,0)
ST ;
"RTN","XINDX3",96,0)
 S:'$D(V(LOC,S)) V(LOC,S)="" S:V(LOC,S)'[GK V(LOC,S)=V(LOC,S)_GK,GK="" Q
"RTN","XINDX3",97,0)
 Q
"RTN","XINDX3",98,0)
ASM(WL,SI,L,SEP) ;
"RTN","XINDX3",99,0)
 N %,CH,Y S SEP=$G(SEP),Y="" F %=SI:1 S CH=$G(LV(WL,%)) Q:L[CH  S Y=Y_SEP_CH
"RTN","XINDX3",100,0)
 Q Y
"RTN","XINDX6")
0^2^B20048257^B19519203
"RTN","XINDX6",1,0)
XINDX6 ;ISC/REL,GRK - GET SET OF ROUTINES TO INDEX ;07/22/08  13:54
"RTN","XINDX6",2,0)
 ;;7.3;TOOLKIT;**20,27,66,110,132**;Apr 25, 1995;Build 13
"RTN","XINDX6",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XINDX6",4,0)
 ;INP(1=Print more than warnings, 2= Print routines, 3= Print warnings, 4= Print DDs & Functions & Options, 5= Type of List, 6= Summary only, 7= Save Parameters
"RTN","XINDX6",5,0)
 ;INP(8= Index called routines, 9= Include the Compiled template routines, 10 = Build or Package file DA
"RTN","XINDX6",6,0)
 ;INP(11= execute to check for version number on second line, 12= Patch number check.
"RTN","XINDX6",7,0)
 N %A2,%I,%IN2,%IN3,%N,%QMK,%YN,AC,ANS,C8,CM,CX,DEF,DDOT,DIF,E,EC,ER
"RTN","XINDX6",8,0)
 N INDHDR,INP,LI,LL,LN,LV,N,NOA,OP,PG,QUES,RN,T,XCNP,XX1,XX2,Z,Z1,INDXDT
"RTN","XINDX6",9,0)
 K ^UTILITY($J),ZTSK,ZTDTH,ZTIO
"RTN","XINDX6",10,0)
 S:'$D(DTIME)#2 DTIME=360
"RTN","XINDX6",11,0)
 D HOME^%ZIS,HDR^XINDX7
"RTN","XINDX6",12,0)
 D ASKRTN,PARAM
"RTN","XINDX6",13,0)
 I $D(^DIC(9.4))!$D(^DIC(9.6)) D ^XINDX10 G END:$D(DUOUT) S INDDA=DA I DA>0,INP(10)'=9.7 D ANS("Include the compiled template routines: N//","NY") G:X="^" END S:"Nn"'[X INP(9)=1
"RTN","XINDX6",14,0)
 G END:(NRO'>0)&(INDDA'>0)
"RTN","XINDX6",15,0)
 D ANS("Print more than compiled errors and warnings? YES//","YN","Print detailed info") G:X="^" END S INP(1)="Yy"[X G:'INP(1) L7
"RTN","XINDX6",16,0)
 D ANS("Print summary only? NO//","NY","Skip detail on each routine") G:X="^" END S INP(6)="Yy"[X G L7:INP(6)
"RTN","XINDX6",17,0)
 D ANS("Print routines? YES//","YN","Print routines code also") G:X="^" END S INP(2)="Yy"[X
"RTN","XINDX6",18,0)
 I INP(2) D ANS("Print (R)egular,(S)tructured or (B)oth?  R//","RLIST") G:X="^" END S INP(5)=X
"RTN","XINDX6",19,0)
 I INDDA>0,INP(10)'=9.7 D ANS("Print the DDs, Functions, and Options? YES//","YN","Gather other package code.") G:X="^" END S INP(4)="Yy"[X
"RTN","XINDX6",20,0)
 D ANS("Print errors and warnings with each routine? YES//","YN") G:X="^" END S INP(3)="Yy"[X
"RTN","XINDX6",21,0)
L7 I $D(^DIC(9.8,0)),$D(DUZ) D ANS("Save parameters in ROUTINE file? NO//","NY","Update the ROUTINE file with details") G:X="^" END S INP(7)="Yy"[X
"RTN","XINDX6",22,0)
 D ANS("Index all called routines? NO//","NY","Add called routines") G:X="^" END S INP(8)="Yy"[X
"RTN","XINDX6",23,0)
DEVICE W:NRO>2 !!,$C(7),"This report could take some time, Remember to QUEUE the report.",! K IOP,%ZIS S %ZIS="QM",%ZIS("B")="" D ^%ZIS K %ZIS I POP W !,$C(7),"XINDEX terminated.  No device specified." G END
"RTN","XINDX6",24,0)
 ;S IOP=ION_";"_IOST_$S($D(IO("DOC")):";"_IO("DOC"),1:";"_IOM_";"_IOSL)
"RTN","XINDX6",25,0)
 I IO=IO(0),"C"[$E(IOST),$D(IO("Q"))#2 W !,"Do you really mean queue to this device? NO//" D NY I "Nn"[X W !!,"Ok, tell me again ..." K IO("Q") D ^%ZISC G DEVICE
"RTN","XINDX6",26,0)
 I '$D(IO("Q")) G ALIVE^XINDEX ;Do it now
"RTN","XINDX6",27,0)
 ;Queue Report
"RTN","XINDX6",28,0)
 S ZTRTN="ALIVE^XINDEX",ZTDESC="XINDEX of "_NRO_" routine"_$S(NRO>1:"s.",1:".") F G="INP(","INDDA","^UTILITY($J,","NRO","INDPM" S ZTSAVE(G)=""
"RTN","XINDX6",29,0)
 K IO("Q") D ^%ZTLOAD,HOME^%ZIS
"RTN","XINDX6",30,0)
 ;
"RTN","XINDX6",31,0)
END K ZTSK,%ZIS G CLEAN^XINDX5
"RTN","XINDX6",32,0)
 ;
"RTN","XINDX6",33,0)
PARAM ;Setup Parameters
"RTN","XINDX6",34,0)
 S Q="""",RTN=0
"RTN","XINDX6",35,0)
 F I=1:1:10 S INP(I)=0
"RTN","XINDX6",36,0)
 S (INP(11),INP(12))=""
"RTN","XINDX6",37,0)
 S INP("MAX")=20000 ;Max routine size
"RTN","XINDX6",38,0)
 S INP("CMAX")=15000 ;Max Code in routine
"RTN","XINDX6",39,0)
 S INDDA=0
"RTN","XINDX6",40,0)
 Q
"RTN","XINDX6",41,0)
 ;
"RTN","XINDX6",42,0)
QUICK(RL) ;Quick Report, Just errors on some routines.
"RTN","XINDX6",43,0)
 N %A2,%I,%IN2,%IN3,%N,%QMK,%YN,AC,ANS,C8,CM,CX,DEF,DDOT,DIF,E,EC,ER
"RTN","XINDX6",44,0)
 N INDHDR,INDXDT,INP,LI,LL,LN,LV,N,NOA,OP,PG,QUES,RN,T,XCNP,XX1,XX2,Z,Z1
"RTN","XINDX6",45,0)
 K ^UTILITY($J),ZTSK,ZTDTH,ZTIO
"RTN","XINDX6",46,0)
 D HOME^%ZIS I '$D(IOP) D HDR^XINDX7
"RTN","XINDX6",47,0)
 I $D(IOP) S %ZIS="" D ^%ZIS ;Caller can set IOP to send output someplace else
"RTN","XINDX6",48,0)
 U IO
"RTN","XINDX6",49,0)
 I $D(RL) F %I=1:1 S Z=$P(RL,",",%I) Q:Z=""  S ^UTILITY($J,Z)=""
"RTN","XINDX6",50,0)
 D ASKRTN,PARAM
"RTN","XINDX6",51,0)
 I $O(^UTILITY($J,"@"))="" W !,"No Routines to process.",! D ^%ZISC Q
"RTN","XINDX6",52,0)
 S INP(1)=0,INP(6)=1 ;More then errors,Summary Only
"RTN","XINDX6",53,0)
 G ALIVE^XINDEX
"RTN","XINDX6",54,0)
 ;
"RTN","XINDX6",55,0)
ANS(PR,DEF,HELP) ;Ask question get answer
"RTN","XINDX6",56,0)
 N % F  S Y=1 W !!,PR D @DEF Q:Y
"RTN","XINDX6",57,0)
 Q
"RTN","XINDX6",58,0)
YN S %="Y" D RD Q:"^YyNn"[X  W:$D(HELP) !,HELP W !,"Please enter 'Y' or return for YES, 'N' for NO" S Y=0 Q
"RTN","XINDX6",59,0)
 ;
"RTN","XINDX6",60,0)
NY S %="N" D RD Q:"^YyNn"[X  W:$D(HELP) !,HELP W !,"Please enter 'N' or return for NO, 'Y' for YES" S Y=0 Q
"RTN","XINDX6",61,0)
 ;
"RTN","XINDX6",62,0)
RD R X:DTIME S:X["^" X="^" S X=$E($$CASE^XINDX52(X)_%) Q
"RTN","XINDX6",63,0)
 ;
"RTN","XINDX6",64,0)
RLIST S %="R" D RD Q:"^RSBF"[X  W !,"Please select one of the choices." S Y=0 Q
"RTN","XINDX6",65,0)
 Q
"RTN","XINDX6",66,0)
ASKRTN ;Collect a list of routines to index.
"RTN","XINDX6",67,0)
 I '$D(^UTILITY($J)),$D(^%ZOSF("RSEL")) X ^("RSEL")
"RTN","XINDX6",68,0)
 S NRO=0,X=0 F I=0:0 S X=$O(^UTILITY($J,X)) Q:X=""  S NRO=NRO+1
"RTN","XINDX6",69,0)
 Q
"RTN","XINDX6",70,0)
 W !!,"LIST OF ROUTINES TO BE INDEXED; PRESS RETURN TO TERMINATE LIST",! S NRO=0
"RTN","XINDX6",71,0)
R1 R !,"ROUTINE NAME: ",ROU:$S($G(DTIME):DTIME,1:360) Q:ROU=""
"RTN","XINDX6",72,0)
 I ROU'?1"%".UN&(ROU'?1U.UN) W "  INVALID ROUTINE NAME" G R1
"RTN","XINDX6",73,0)
 I $D(^%ZOSF("TEST")) S X=ROU X ^("TEST") E  W "  INVALID ROUTINE NAME" G R1
"RTN","XINDX6",74,0)
 S NRO=NRO+1,^UTILITY($J,ROU)=""
"RTN","XINDX6",75,0)
 G R1
"RTN","XINDX9")
0^7^B17326619^B16811292
"RTN","XINDX9",1,0)
XINDX9 ;SF/RWF - XINDEX SYNTAX CHECKER ;06/24/08  15:39
"RTN","XINDX9",2,0)
 ;;7.3;TOOLKIT;**20,27,48,61,66,68,110,121,132**;Apr 25, 1995;Build 13
"RTN","XINDX9",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XINDX9",4,0)
 N CH1,EC,OP
"RTN","XINDX9",5,0)
 D PARSE S LI=0,AC=255 F %=0:0 S %=$O(LV(%)) Q:%'>0  S LI(%)=0
"RTN","XINDX9",6,0)
 Q
"RTN","XINDX9",7,0)
 ;LV is a set of Linked Values
"RTN","XINDX9",8,0)
PARSE K LV,LI S (ERR,LI,I)=0,(LL,LV)=1,(OP,CH)="",Q=""""
"RTN","XINDX9",9,0)
 ;
"RTN","XINDX9",10,0)
PA2 S I=I+1,CH=$E(STR,I),CH1=$E(STR,I+1) G:CH="" PEND
"RTN","XINDX9",11,0)
 G E:CH=";"!(CH'?1ANP) I """$()"[CH D QUOTE:CH=Q,FUNC:CH="$",DN:CH="(",UP:CH=")" G PA2
"RTN","XINDX9",12,0)
 I CH="^",CH1="$" D SSVN G PA2
"RTN","XINDX9",13,0)
 I CH="^",I=LL G PA2:CH1'="[" S I=I+1,X=$E(STR,LL,I) D ADD S LL=I+1 G PA2
"RTN","XINDX9",14,0)
 I CH?1A!(CH="%") D VAR G PA2
"RTN","XINDX9",15,0)
 I CH?1N D NUM G PA2
"RTN","XINDX9",16,0)
 S:"+-#'/*_&![]<>?"[CH OP=CH
"RTN","XINDX9",17,0)
 I CH="?",",!#"'[$E(STR,I-1) D AR,PAT G PA2
"RTN","XINDX9",18,0)
 I CH=",",CH1=":" D E^XINDX1(21) ;P121
"RTN","XINDX9",19,0)
 I CH?1P D  ;Check for dup operators
"RTN","XINDX9",20,0)
 . D AR
"RTN","XINDX9",21,0)
 . Q:(CH_CH1="]]")
"RTN","XINDX9",22,0)
 . I ((CH=CH1)&(",_/\[]&|"[CH))&($$FNC()'="$$") D E^XINDX1(21) ;p110
"RTN","XINDX9",23,0)
 G PA2
"RTN","XINDX9",24,0)
 ;End of parse
"RTN","XINDX9",25,0)
PEND D AR,E^XINDX1(5):LV>1,E^XINDX1(21):($G(LV(1,1))=",") ;LV>1 means mis-match ()
"RTN","XINDX9",26,0)
 Q
"RTN","XINDX9",27,0)
 ;
"RTN","XINDX9",28,0)
DN D STR S X=CH D ADD,NEW S LI(LV)=LI,LV=LV+1 S:'$D(LI(LV)) LI(LV)=0 S LI=LI(LV),LI(LV-1,1)=LI
"RTN","XINDX9",29,0)
 Q
"RTN","XINDX9",30,0)
UP I LV<2 D E^XINDX1(5) Q
"RTN","XINDX9",31,0)
 D STR S EC=LI-LI(LV-1,1),X=$C(10) D ADD,NEW S LI(LV)=LI,LV=LV-1,LI=LI(LV)
"RTN","XINDX9",32,0)
 S X=EC D ADD S X=CH D ADD I CH1]"",",_=+-*/\#'):<>[]?&!@"'[CH1 D E^XINDX1(43)
"RTN","XINDX9",33,0)
 Q
"RTN","XINDX9",34,0)
NEW S LL=I+1
"RTN","XINDX9",35,0)
 Q
"RTN","XINDX9",36,0)
AR D STR S X=CH D ADD,NEW Q
"RTN","XINDX9",37,0)
STR S X=$E(STR,LL,I-1) Q:'$L(X)  ;Drop into ADD
"RTN","XINDX9",38,0)
ADD S LI=LI+1,LV(LV,LI)=X Q
"RTN","XINDX9",39,0)
 ;
"RTN","XINDX9",40,0)
FNC(NEW) ;Sets or returns the current function
"RTN","XINDX9",41,0)
 I $D(NEW) S LV(LV+1,"FNC",$G(LI(LV))+1)=NEW Q
"RTN","XINDX9",42,0)
 N W S W=+$S($D(LV(LV,"FNC",LI)):LI,$O(LV(LV,"FNC",LI)):$O(LV(LV,"FNC",LI)),1:$O(LV(LV,"FNC",LI),-1)) ;patch 119
"RTN","XINDX9",43,0)
 Q $G(LV(LV,"FNC",W))
"RTN","XINDX9",44,0)
 ;
"RTN","XINDX9",45,0)
OP(NEW) ;Sets or returns the current operator
"RTN","XINDX9",46,0)
 I $D(NEW) S LV(LV,"OP",LI)=NEW Q
"RTN","XINDX9",47,0)
 N W S W=+$S($D(LV(LV,"OP",LI)):LI,1:$O(LV(LV,"OP",LI),-1))
"RTN","XINDX9",48,0)
 Q $G(LV(LV,"OP",W))
"RTN","XINDX9",49,0)
 ;
"RTN","XINDX9",50,0)
QUOTE F I=I+1:1 S CH=$E(STR,I) Q:CH=""!(CH=Q)
"RTN","XINDX9",51,0)
 I $E(STR,I+1)=Q S I=I+1 G QUOTE
"RTN","XINDX9",52,0)
 I OP'="?",$E(STR,I+1)]"","[]()<>\/+-=&!_#*,:'|"'[$E(STR,I+1) D E^XINDX1(46) Q
"RTN","XINDX9",53,0)
 Q:CH]""  D E^XINDX1(6) Q
"RTN","XINDX9",54,0)
GVAR() ;EF get var
"RTN","XINDX9",55,0)
 N % D VAR S %=$E(STR,LL,I),LL=I+1
"RTN","XINDX9",56,0)
 Q %
"RTN","XINDX9",57,0)
VAR F J=I+1:1 S CH=$E(STR,J) Q:CH'?1AN
"RTN","XINDX9",58,0)
 S I=J-1 D SUM("V")
"RTN","XINDX9",59,0)
 Q
"RTN","XINDX9",60,0)
NUM F J=I+1:1 S CH=$E(STR,J) Q:"0123456789."'[CH!(CH="")
"RTN","XINDX9",61,0)
 I CH="E" S CH=$E(STR,J+1) I CH?1N!("+-"[CH) S I=J G NUM
"RTN","XINDX9",62,0)
 I CH]"",CH'?1P S ERR=53 D ^XINDX1
"RTN","XINDX9",63,0)
 S I=J-1 D SUM("N")
"RTN","XINDX9",64,0)
 Q
"RTN","XINDX9",65,0)
INC S I=I+1,CH=$E(STR,I)
"RTN","XINDX9",66,0)
 Q
"RTN","XINDX9",67,0)
FUNC ;Functions and special var's.
"RTN","XINDX9",68,0)
 D INC S X=CH,S=$$GVAR() G EXT:S["$$",PKG:S["$&",SPV:CH'="("
"RTN","XINDX9",69,0)
 S S=$$CASE($E(S,2,11)),F1=$G(IND("FNC",S)) I '$L(F1) D E^XINDX1(3) S F1=S G FX
"RTN","XINDX9",70,0)
 I "ZV"[X S ERR=$S("Z"[X:31,1:27) D ^XINDX1
"RTN","XINDX9",71,0)
FX S X="$"_F1,CH="" D FNC("$F"),ADD,SUM("F") Q
"RTN","XINDX9",72,0)
SPV S X=S D FNC("$V"),ADD,SUM("V") S X=$E(S,2,10),CH="" ;P132 support of $PRINCIPAL, 10 characters
"RTN","XINDX9",73,0)
 I $E(S,2)="Z" D E^XINDX1(28) Q
"RTN","XINDX9",74,0)
 I '$D(IND("SVN",X)) D E^XINDX1(4)
"RTN","XINDX9",75,0)
 Q
"RTN","XINDX9",76,0)
EXT ;EXTRINSIC
"RTN","XINDX9",77,0)
 S X=S,CH="" D FNC("$$"),ADD,SUM("V") Q
"RTN","XINDX9",78,0)
SSVN ;Error 54 access for Kernel only
"RTN","XINDX9",79,0)
 D INC S X=$$GVAR() I '$D(IND("SSVN",$E(X,3,99))) D E^XINDX1(4) Q  ;Need new #
"RTN","XINDX9",80,0)
 D E^XINDX1(54),ADD,SUM("V") Q
"RTN","XINDX9",81,0)
PKG ;External Function
"RTN","XINDX9",82,0)
 S J=$F(STR,"(",I),I=J-2,X=S_$E(STR,LL,I),LL=J-1,CH=""
"RTN","XINDX9",83,0)
 D ADD,E^XINDX1(55) ;Not standard VA
"RTN","XINDX9",84,0)
 Q
"RTN","XINDX9",85,0)
E D E^XINDX1(11)
"RTN","XINDX9",86,0)
 Q
"RTN","XINDX9",87,0)
PAT N PC S PC=0
"RTN","XINDX9",88,0)
 F I=I+1:1 S CH=$E(STR,I) D PATQ:CH=Q,PATD:CH="(",PATU:CH=")",PATC:CH="," I CH=""!(CH'?1N&("ACELNPUacelnpu."'[CH)) Q
"RTN","XINDX9",89,0)
 I PC D E^XINDX1(5)
"RTN","XINDX9",90,0)
 S I=I-1 I ":),@+-_*/\!&'"'[CH D E^XINDX1(16),SEP Q
"RTN","XINDX9",91,0)
 Q
"RTN","XINDX9",92,0)
 ;Quote in Pattern
"RTN","XINDX9",93,0)
PATQ F I=I+1:1 S CH=$E(STR,I) Q:CH=""!(CH=Q)
"RTN","XINDX9",94,0)
 D:CH="" E^XINDX1(6) S I=I+1,CH=$E(STR,I) G:CH=Q PATQ
"RTN","XINDX9",95,0)
 Q
"RTN","XINDX9",96,0)
PATD S PC=PC+1,CH="." ;p110 Start Alt.
"RTN","XINDX9",97,0)
 Q
"RTN","XINDX9",98,0)
PATU I 'PC,LV>1 S CH="" Q  ;End
"RTN","XINDX9",99,0)
 S PC=PC-1,CH="." ;p110 End Alt.
"RTN","XINDX9",100,0)
 Q
"RTN","XINDX9",101,0)
PATC I PC<1 Q  ;
"RTN","XINDX9",102,0)
 S CH="." ;p110 Comma in Alt.
"RTN","XINDX9",103,0)
 Q
"RTN","XINDX9",104,0)
PAREN F I=I+1:1 S CH=$E(STR,I) Q:CH=""!(CH=")")
"RTN","XINDX9",105,0)
 D:CH="" E^XINDX1(5) S CH="."
"RTN","XINDX9",106,0)
 Q
"RTN","XINDX9",107,0)
SEP ;Find sep
"RTN","XINDX9",108,0)
 Q
"RTN","XINDX9",109,0)
SUM(P) ;Build summry line
"RTN","XINDX9",110,0)
 S LV(LV,"S")=$G(LV(LV,"S"))_P
"RTN","XINDX9",111,0)
 Q
"RTN","XINDX9",112,0)
CASE(%) ;UpperCase
"RTN","XINDX9",113,0)
 Q $TR(%,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","XINDX9",114,0)
 ;
"RTN","XINDX9",115,0)
TEST S STR=$E($T(TEST+2),4,999) D XINDX9
"RTN","XINDX9",116,0)
 Q
"RTN","XINDX9",117,0)
 ;;NUMVAL?.1(1"+",1"-")1(1.N.1".".N,.N.1"."1.N).1(1"E".1(1"+",1"-")1.N)
"RTN","XT73P132")
0^^B11819^n/a
"RTN","XT73P132",1,0)
XT73P132 ;RSD/OAKLAND - Post Install Routine for XT*7.3*132
"RTN","XT73P132",2,0)
 ;;7.3;TOOLKIT1;**132**;Apr 25, 1995;Build 13
"RTN","XT73P132",3,0)
 ;This routine is only to test XINDEX for patch 132
"RTN","XT73P132",4,0)
 ;The 2nd lines Package name contains a number, which no longer generates an error
"RTN","XT73P132",5,0)
 ;The use of $ET or $ES no longer generates an error
"RTN","XT73P132",6,0)
 Q
"RTN","XT73P132",7,0)
 N $ET,$ES
"RTN","XT73P132",8,0)
 Q
"RTN","XTRUTL1")
0^4^B3068515^B1160376
"RTN","XTRUTL1",1,0)
XTRUTL1 ;ISCSF/RWF - Developer Routine Utilities Build & Install Files ;2/14/07  15:50
"RTN","XTRUTL1",2,0)
 ;;7.3;TOOLKIT;**20,66,132**;Apr 25, 1995;Build 13
"RTN","XTRUTL1",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XTRUTL1",4,0)
 ;
"RTN","XTRUTL1",5,0)
 Q  ;No entry from the top.
"RTN","XTRUTL1",6,0)
BUILD() ;This will select an entry in the BUILD file.
"RTN","XTRUTL1",7,0)
 N BLDA,DIC,X,Y
"RTN","XTRUTL1",8,0)
 S DIC="^XPD(9.6,",DIC(0)="AEMQZ" D ^DIC
"RTN","XTRUTL1",9,0)
 Q Y
"RTN","XTRUTL1",10,0)
INSTALL() ;This will select an entry in the INSTALL file.
"RTN","XTRUTL1",11,0)
 N BLDA,DIC,X,Y
"RTN","XTRUTL1",12,0)
 S DIC="^XPD(9.7,",DIC(0)="AEMQZ",DIC("S")="I '$P(^(0),U,9),$D(^XTMP(""XPDI"",Y))"
"RTN","XTRUTL1",13,0)
 D ^DIC
"RTN","XTRUTL1",14,0)
 Q Y
"RTN","XTRUTL1",15,0)
RTN(IEN,FILE) ;This will build a list of routines from the BUILD or INSTALL (FILE) file.
"RTN","XTRUTL1",16,0)
 Q:'$G(IEN)  S:'$G(FILE) FILE=9.6
"RTN","XTRUTL1",17,0)
 N X,IX,R S U="^"
"RTN","XTRUTL1",18,0)
 I FILE=9.6 D  Q
"RTN","XTRUTL1",19,0)
 . F IX=0:0 S IX=$O(^XPD(9.6,IEN,"KRN",9.8,"NM",IX)) Q:IX'>0  S X=^(IX,0) S:'$P(X,U,3) ^UTILITY($J,$P(X,U))=""
"RTN","XTRUTL1",20,0)
 . F IX="INI","INIT","PRE" S X=$G(^XPD(9.6,IEN,IX)) I X]"" S R=$P($S(X[U:$P(X,U,2),1:X),"("),^UTILITY($J,R)=""
"RTN","XTRUTL1",21,0)
 . Q
"RTN","XTRUTL1",22,0)
 ;get routines from Transport Global and merge into ^UTILITY
"RTN","XTRUTL1",23,0)
 I FILE=9.7 D  Q
"RTN","XTRUTL1",24,0)
 . S X=""
"RTN","XTRUTL1",25,0)
 . F  S X=$O(^XTMP("XPDI",IEN,"RTN",X)) Q:X=""  S R=^(X),^UTILITY($J,X)="" D
"RTN","XTRUTL1",26,0)
 .. M ^UTILITY($J,1,X,0)=^XTMP("XPDI",IEN,"RTN",X)
"RTN","XTRUTL1",27,0)
 .. S ^UTILITY($J,1,X,"RSUM")=$P(R,"^",3),^UTILITY($J,1,X,0,0)=$O(^UTILITY($J,1,X,0,""),-1) ;set RSUM and line count
"RTN","XTRUTL1",28,0)
 . Q
"RTN","XTRUTL1",29,0)
 Q
"RTN","XTRUTL1",30,0)
 ;
"RTN","XTRUTL1",31,0)
VER(X) ;returns version number from Build file, X=build name
"RTN","XTRUTL1",32,0)
 Q:X["*" $P(X,"*",2)
"RTN","XTRUTL1",33,0)
 Q $P(X," ",$L(X," "))
"RTN","XTRUTL1",34,0)
 ;
"RTN","XTRUTL1",35,0)
PATCH(X) ;returns the patch number from the Build file, X=build name
"RTN","XTRUTL1",36,0)
 Q $S(X["*":$P(X,"*",3),1:"")
"RTN","XTRUTL1",37,0)
 ;
"RTN","XTRUTL1",38,0)
PLCP(PL,N) ;Patch list contains patch number
"RTN","XTRUTL1",39,0)
 N PAT S PAT="PL?.E1P1"""_N_"""1P.E"
"RTN","XTRUTL1",40,0)
 Q @PAT
"VER")
8.0^22.0
"BLD",1370,6)
^106
**END**
**END**
