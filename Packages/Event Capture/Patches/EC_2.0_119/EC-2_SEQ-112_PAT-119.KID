Released EC*2*119 SEQ #112
Extracted from mail message
**KIDS**:EC*2.0*119^

**INSTALL NAME**
EC*2.0*119
"BLD",8701,0)
EC*2.0*119^EVENT CAPTURE^0^3130325^y
"BLD",8701,4,0)
^9.64PA^^
"BLD",8701,6)
3^
"BLD",8701,6.3)
12
"BLD",8701,"ABPKG")
n
"BLD",8701,"INIT")
POST^EC2P119
"BLD",8701,"KRN",0)
^9.67PA^779.2^20
"BLD",8701,"KRN",.4,0)
.4
"BLD",8701,"KRN",.401,0)
.401
"BLD",8701,"KRN",.402,0)
.402
"BLD",8701,"KRN",.403,0)
.403
"BLD",8701,"KRN",.5,0)
.5
"BLD",8701,"KRN",.84,0)
.84
"BLD",8701,"KRN",3.6,0)
3.6
"BLD",8701,"KRN",3.8,0)
3.8
"BLD",8701,"KRN",9.2,0)
9.2
"BLD",8701,"KRN",9.2,"NM",0)
^9.68A^2^2
"BLD",8701,"KRN",9.2,"NM",1,0)
ECREASON^^0
"BLD",8701,"KRN",9.2,"NM",2,0)
EC SCREEN COPY^^0
"BLD",8701,"KRN",9.2,"NM","B","EC SCREEN COPY",2)

"BLD",8701,"KRN",9.2,"NM","B","ECREASON",1)

"BLD",8701,"KRN",9.8,0)
9.8
"BLD",8701,"KRN",9.8,"NM",0)
^9.68A^27^25
"BLD",8701,"KRN",9.8,"NM",1,0)
ECINCPT^^0^B4337598
"BLD",8701,"KRN",9.8,"NM",2,0)
ECRPCLS^^0^B64728262
"BLD",8701,"KRN",9.8,"NM",3,0)
ECUNTRPT^^0^B8713813
"BLD",8701,"KRN",9.8,"NM",5,0)
ECDSS3^^0^B7309130
"BLD",8701,"KRN",9.8,"NM",6,0)
ECRDSSA^^0^B116122411
"BLD",8701,"KRN",9.8,"NM",7,0)
ECRRPT1^^0^B64773176
"BLD",8701,"KRN",9.8,"NM",8,0)
ECDSS1^^0^B26567205
"BLD",8701,"KRN",9.8,"NM",9,0)
ECPAT^^0^B47879400
"BLD",8701,"KRN",9.8,"NM",10,0)
ECPRSUM1^^0^B45928925
"BLD",8701,"KRN",9.8,"NM",11,0)
ECSCPT^^0^B12785074
"BLD",8701,"KRN",9.8,"NM",12,0)
ECSCPT1^^0^B11623947
"BLD",8701,"KRN",9.8,"NM",13,0)
ECNTPCE^^0^B28957760
"BLD",8701,"KRN",9.8,"NM",14,0)
ECRDSSU^^0^B52878746
"BLD",8701,"KRN",9.8,"NM",15,0)
ECRDSSU2^^0^B24221820
"BLD",8701,"KRN",9.8,"NM",16,0)
ECMFECS^^0^B43787476
"BLD",8701,"KRN",9.8,"NM",17,0)
ECPCER^^0^B32347801
"BLD",8701,"KRN",9.8,"NM",18,0)
ECKILL^^0^B13025684
"BLD",8701,"KRN",9.8,"NM",19,0)
ECSUM^^0^B13236696
"BLD",8701,"KRN",9.8,"NM",20,0)
ECSUM1^^0^B19398599
"BLD",8701,"KRN",9.8,"NM",21,0)
ECOSSUM^^0^B96916049
"BLD",8701,"KRN",9.8,"NM",23,0)
ECPROV2^^0^B4427549
"BLD",8701,"KRN",9.8,"NM",24,0)
ECRRPT^^0^B57156527
"BLD",8701,"KRN",9.8,"NM",25,0)
ECEFPAT^^0^B71296249
"BLD",8701,"KRN",9.8,"NM",26,0)
ECPROV3^^0^B73930927
"BLD",8701,"KRN",9.8,"NM",27,0)
EC2P119^^0^B15753102
"BLD",8701,"KRN",9.8,"NM","B","EC2P119",27)

"BLD",8701,"KRN",9.8,"NM","B","ECDSS1",8)

"BLD",8701,"KRN",9.8,"NM","B","ECDSS3",5)

"BLD",8701,"KRN",9.8,"NM","B","ECEFPAT",25)

"BLD",8701,"KRN",9.8,"NM","B","ECINCPT",1)

"BLD",8701,"KRN",9.8,"NM","B","ECKILL",18)

"BLD",8701,"KRN",9.8,"NM","B","ECMFECS",16)

"BLD",8701,"KRN",9.8,"NM","B","ECNTPCE",13)

"BLD",8701,"KRN",9.8,"NM","B","ECOSSUM",21)

"BLD",8701,"KRN",9.8,"NM","B","ECPAT",9)

"BLD",8701,"KRN",9.8,"NM","B","ECPCER",17)

"BLD",8701,"KRN",9.8,"NM","B","ECPROV2",23)

"BLD",8701,"KRN",9.8,"NM","B","ECPROV3",26)

"BLD",8701,"KRN",9.8,"NM","B","ECPRSUM1",10)

"BLD",8701,"KRN",9.8,"NM","B","ECRDSSA",6)

"BLD",8701,"KRN",9.8,"NM","B","ECRDSSU",14)

"BLD",8701,"KRN",9.8,"NM","B","ECRDSSU2",15)

"BLD",8701,"KRN",9.8,"NM","B","ECRPCLS",2)

"BLD",8701,"KRN",9.8,"NM","B","ECRRPT",24)

"BLD",8701,"KRN",9.8,"NM","B","ECRRPT1",7)

"BLD",8701,"KRN",9.8,"NM","B","ECSCPT",11)

"BLD",8701,"KRN",9.8,"NM","B","ECSCPT1",12)

"BLD",8701,"KRN",9.8,"NM","B","ECSUM",19)

"BLD",8701,"KRN",9.8,"NM","B","ECSUM1",20)

"BLD",8701,"KRN",9.8,"NM","B","ECUNTRPT",3)

"BLD",8701,"KRN",19,0)
19
"BLD",8701,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",8701,"KRN",19,"NM",1,0)
EC GUI CONTEXT^^0
"BLD",8701,"KRN",19,"NM","B","EC GUI CONTEXT",1)

"BLD",8701,"KRN",19.1,0)
19.1
"BLD",8701,"KRN",101,0)
101
"BLD",8701,"KRN",409.61,0)
409.61
"BLD",8701,"KRN",771,0)
771
"BLD",8701,"KRN",779.2,0)
779.2
"BLD",8701,"KRN",870,0)
870
"BLD",8701,"KRN",8989.51,0)
8989.51
"BLD",8701,"KRN",8989.52,0)
8989.52
"BLD",8701,"KRN",8994,0)
8994
"BLD",8701,"KRN","B",.4,.4)

"BLD",8701,"KRN","B",.401,.401)

"BLD",8701,"KRN","B",.402,.402)

"BLD",8701,"KRN","B",.403,.403)

"BLD",8701,"KRN","B",.5,.5)

"BLD",8701,"KRN","B",.84,.84)

"BLD",8701,"KRN","B",3.6,3.6)

"BLD",8701,"KRN","B",3.8,3.8)

"BLD",8701,"KRN","B",9.2,9.2)

"BLD",8701,"KRN","B",9.8,9.8)

"BLD",8701,"KRN","B",19,19)

"BLD",8701,"KRN","B",19.1,19.1)

"BLD",8701,"KRN","B",101,101)

"BLD",8701,"KRN","B",409.61,409.61)

"BLD",8701,"KRN","B",771,771)

"BLD",8701,"KRN","B",779.2,779.2)

"BLD",8701,"KRN","B",870,870)

"BLD",8701,"KRN","B",8989.51,8989.51)

"BLD",8701,"KRN","B",8989.52,8989.52)

"BLD",8701,"KRN","B",8994,8994)

"BLD",8701,"QUES",0)
^9.62^^
"BLD",8701,"REQB",0)
^9.611^3^3
"BLD",8701,"REQB",1,0)
EC*2.0*112^1
"BLD",8701,"REQB",2,0)
EC*2.0*108^1
"BLD",8701,"REQB",3,0)
EC*2.0*69^1
"BLD",8701,"REQB","B","EC*2.0*108",2)

"BLD",8701,"REQB","B","EC*2.0*112",1)

"BLD",8701,"REQB","B","EC*2.0*69",3)

"INIT")
POST^EC2P119
"KRN",9.2,1559,-1)
0^1
"KRN",9.2,1559,0)
ECREASON^Activate/Inactivate Reasons^3121106.154743^
"KRN",9.2,1559,1,0)
^9.21^7^7^3121106^^^
"KRN",9.2,1559,1,1,0)
The Reasons table contains records with site-defined descriptions 
"KRN",9.2,1559,1,2,0)
explaining why a procedure was performed for the patient. Reasons that are
"KRN",9.2,1559,1,3,0)
inactive will not appear in the list of available reasons during data
"KRN",9.2,1559,1,4,0)
entry.  Reasons can be inactivated and re-activated by site managers.
"KRN",9.2,1559,1,5,0)
 
"KRN",9.2,1559,1,6,0)
New reasons can be added and will immediately be available for use in 
"KRN",9.2,1559,1,7,0)
data entry.
"KRN",9.2,1560,-1)
0^2
"KRN",9.2,1560,0)
EC SCREEN COPY^Copy EC Screens to another DSS Unit^3121207.100603^
"KRN",9.2,1560,1,0)
^^33^33^3121207^
"KRN",9.2,1560,1,1,0)
** Active (Current) Event Capture Locations must exist before using this 
"KRN",9.2,1560,1,2,0)
option. Update Location information through the Event Capture Management
"KRN",9.2,1560,1,3,0)
Menu. ** 
"KRN",9.2,1560,1,4,0)
 
"KRN",9.2,1560,1,5,0)
** DSS Units must exist before using this option.  Add or update DSS 
"KRN",9.2,1560,1,6,0)
Units through the Event Capture Management Menu. ** 
"KRN",9.2,1560,1,7,0)
 
"KRN",9.2,1560,1,8,0)
** Event Code (EC) Screens define procedure information and must exist 
"KRN",9.2,1560,1,9,0)
before using this option. Add or update EC Screens through the Event 
"KRN",9.2,1560,1,10,0)
Capture Management Menu. During data entry, only the procedures defined 
"KRN",9.2,1560,1,11,0)
in Event Code Screens can be selected. **
"KRN",9.2,1560,1,12,0)
 
"KRN",9.2,1560,1,13,0)
This option allows the Event Capture System (ECS) manager to copy EC 
"KRN",9.2,1560,1,14,0)
Screens from one DSS Unit to another.
"KRN",9.2,1560,1,15,0)
 
"KRN",9.2,1560,1,16,0)
1. Select an existing DSS Unit.
"KRN",9.2,1560,1,17,0)
2. Select "Copy EC Screens to another DSS Unit" from the Edit menu.
"KRN",9.2,1560,1,18,0)
3. Select the target DSS Unit (i.e. the DSS Unit to which the EC Screen 
"KRN",9.2,1560,1,19,0)
   will be copied).
"KRN",9.2,1560,1,20,0)
4. From the "Copy Event Code Screen" form, select the desired fields:
"KRN",9.2,1560,1,21,0)
        Category (optional);
"KRN",9.2,1560,1,22,0)
        Location (required);
"KRN",9.2,1560,1,23,0)
        Default Associated Clinic (if the DSS Unit is sent to PCE; the 
"KRN",9.2,1560,1,24,0)
        field is disabled when the DSS Unit is not sent to PCE).
"KRN",9.2,1560,1,25,0)
5. When all desired fields are populated, clicking the "OK" button will 
"KRN",9.2,1560,1,26,0)
   apply all changes, effectively copying the EC Screen to the target DSS 
"KRN",9.2,1560,1,27,0)
   Unit.
"KRN",9.2,1560,1,28,0)
6. Clicking the "Skip this EC Screen" button will pass over the presently 
"KRN",9.2,1560,1,29,0)
   displayed record and prompt the user with the next EC Screen record.
"KRN",9.2,1560,1,30,0)
7. Clicking the "Close" button will stop processing and close the form.
"KRN",9.2,1560,1,31,0)
 
"KRN",9.2,1560,1,32,0)
Additional EC Screens can be copied by repeating the steps described 
"KRN",9.2,1560,1,33,0)
above.
"KRN",19,11187,-1)
0^1
"KRN",19,11187,0)
EC GUI CONTEXT^EC GUI Context version 2.1.3.5^^B^^^^^^^^EVENT CAPTURE
"KRN",19,11187,1,0)
^19.06^1^1^3120103^^^^
"KRN",19,11187,1,1,0)
This is the Broker Client/Server type option for the Event Capture GUI option
"KRN",19,11187,99)
58583,58456
"KRN",19,11187,99.1)
62872,41516
"KRN",19,11187,"RPC",0)
^19.05P^56^56
"KRN",19,11187,"RPC",1,0)
EC DSSCATCHECK
"KRN",19,11187,"RPC",2,0)
EC FILER
"KRN",19,11187,"RPC",3,0)
EC GETBATPROCS
"KRN",19,11187,"RPC",4,0)
EC GETCAT
"KRN",19,11187,"RPC",5,0)
EC GETCPTLST
"KRN",19,11187,"RPC",6,0)
EC GETDSSECS
"KRN",19,11187,"RPC",7,0)
EC GETDSSUNIT
"KRN",19,11187,"RPC",8,0)
EC GETDSSUNITUSRS
"KRN",19,11187,"RPC",9,0)
EC GETECLOC
"KRN",19,11187,"RPC",10,0)
EC GETECSCATS
"KRN",19,11187,"RPC",11,0)
EC GETECSCREEN
"KRN",19,11187,"RPC",12,0)
EC GETECSDETAIL
"KRN",19,11187,"RPC",13,0)
EC GETECSPROCS
"KRN",19,11187,"RPC",14,0)
EC GETENCDXS
"KRN",19,11187,"RPC",15,0)
EC GETIEN
"KRN",19,11187,"RPC",16,0)
EC GETLIST
"KRN",19,11187,"RPC",17,0)
EC GETLOC
"KRN",19,11187,"RPC",18,0)
EC GETNATPX
"KRN",19,11187,"RPC",19,0)
EC GETPATCLASTAT
"KRN",19,11187,"RPC",20,0)
EC GETPATELIG
"KRN",19,11187,"RPC",21,0)
EC GETPATINFO
"KRN",19,11187,"RPC",22,0)
EC GETPATPROCS
"KRN",19,11187,"RPC",23,0)
EC GETPRODEFS
"KRN",19,11187,"RPC",24,0)
EC GETPROVIDER
"KRN",19,11187,"RPC",25,0)
EC GETPXLST
"KRN",19,11187,"RPC",26,0)
EC GETPXMODIFIER
"KRN",19,11187,"RPC",27,0)
EC GETPXREASON
"KRN",19,11187,"RPC",28,0)
EC GETSCNHELP
"KRN",19,11187,"RPC",29,0)
EC GETUSRDSSUNIT
"KRN",19,11187,"RPC",30,0)
EC REPORTS
"KRN",19,11187,"RPC",31,0)
EC VALIDATE SPREADSHEET DATA
"KRN",19,11187,"RPC",32,0)
ORWU USERINFO
"KRN",19,11187,"RPC",33,0)
ORWU HASKEY
"KRN",19,11187,"RPC",34,0)
ORWU DEVICE
"KRN",19,11187,"RPC",35,0)
SC PATIENT LOOKUP
"KRN",19,11187,"RPC",36,0)
ORWU NEWPERS
"KRN",19,11187,"RPC",37,0)
DDR GET DD HELP
"KRN",19,11187,"RPC",38,0)
DDR FINDER
"KRN",19,11187,"RPC",39,0)
DDR FIND1
"KRN",19,11187,"RPC",40,0)
DDR LISTER
"KRN",19,11187,"RPC",41,0)
EC GETDATE
"KRN",19,11187,"RPC",42,0)
EC CLASHELP
"KRN",19,11187,"RPC",43,0)
DDR GETS ENTRY DATA
"KRN",19,11187,"RPC",44,0)
DG CHK BS5 XREF Y/N
"KRN",19,11187,"RPC",45,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,11187,"RPC",46,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,11187,"RPC",47,0)
DG CHK PAT/DIV MEANS TEST
"KRN",19,11187,"RPC",48,0)
EC SPACEBAR
"KRN",19,11187,"RPC",49,0)
EC DIEDON
"KRN",19,11187,"RPC",50,0)
EC GETPATCH
"KRN",19,11187,"RPC",51,0)
EC GETVISITINFO
"KRN",19,11187,"RPC",52,0)
EC GETVERSION
"KRN",19,11187,"RPC",53,0)
ORWU DT
"KRN",19,11187,"RPC",54,0)
ECOB METHOD
"KRN",19,11187,"RPC",55,0)
ECOB FACTORY
"KRN",19,11187,"RPC",56,0)
EC RECENT VISITS
"KRN",19,11187,"U")
EC GUI CONTEXT VERSION 2.1.3.5
"MBREQ")
0
"ORD",1,9.2)
9.2;1;;;HELP^XPDTA1;HLPF1^XPDIA1;HLPE1^XPDIA1;HLPF2^XPDIA1;;HLPDEL^XPDIA1
"ORD",1,9.2,0)
HELP FRAME
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",486,-1)
1^1
"PKG",486,0)
EVENT CAPTURE^EC^Event Capture Workload Capture System^
"PKG",486,20,0)
^9.402P^^
"PKG",486,22,0)
^9.49I^1^1
"PKG",486,22,1,0)
2.0^2960508^2981027^66481
"PKG",486,22,1,"PAH",1,0)
119^3130325^101077
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
25
"RTN","EC2P119")
0^27^B15753102^n/a
"RTN","EC2P119",1,0)
EC2P119 ;ALB/DAN Update DSS names to uppercase ;1/14/13  11:27
"RTN","EC2P119",2,0)
 ;;2.0;EVENT CAPTURE;**119**;8 May 96;Build 12
"RTN","EC2P119",3,0)
POST ;Post install runs from here
"RTN","EC2P119",4,0)
 N DSSID,NAME,UPNAME,DATA,DUP,UPD,ERR,CNT
"RTN","EC2P119",5,0)
 D BMES^XPDUTL("Checking DSS UNIT names for lowercase letters")
"RTN","EC2P119",6,0)
 D CHECK
"RTN","EC2P119",7,0)
 D BMES^XPDUTL("Sending email to installer and holders of ECMGR key with results of check")
"RTN","EC2P119",8,0)
 D MAIL
"RTN","EC2P119",9,0)
 Q
"RTN","EC2P119",10,0)
 ;
"RTN","EC2P119",11,0)
CHECK ;Check existing DSS UNIT entries in file 724 for names that have lowercase letters.  Convert to uppercase if found.
"RTN","EC2P119",12,0)
 S DSSID=0 F  S DSSID=$O(^ECD(DSSID)) Q:'+DSSID  D
"RTN","EC2P119",13,0)
 .S NAME=$P(^ECD(DSSID,0),U),UPNAME=$$UP^XLFSTR(NAME)
"RTN","EC2P119",14,0)
 .I NAME=UPNAME Q  ;Nothing to change
"RTN","EC2P119",15,0)
 .I $D(^ECD("B",UPNAME)) S DUP(NAME)=UPNAME Q  ;Converting name would cause a duplicate
"RTN","EC2P119",16,0)
 .S DATA(724,DSSID_",",".01")=UPNAME D FILE^DIE(,"DATA") ;file change in name
"RTN","EC2P119",17,0)
 .I '$D(^TMP("DIERR",$J)) S UPD(NAME)=UPNAME Q  ;Uppercase name stored without error
"RTN","EC2P119",18,0)
 .S ERR(NAME)="" K ^TMP("DIERR",$J) Q  ;Error filing name.
"RTN","EC2P119",19,0)
 Q
"RTN","EC2P119",20,0)
 ;
"RTN","EC2P119",21,0)
MAIL ;Send email with results
"RTN","EC2P119",22,0)
 N XMSUB,ECTEXT,XMDUZ,XMY,XMZ,XMTEXT,KIEN,DIFROM
"RTN","EC2P119",23,0)
 S XMDUZ="Event Capture Patch 119 Post-install"
"RTN","EC2P119",24,0)
 S XMY($G(DUZ,.5))="" ;Set recipient to installer or postmaster
"RTN","EC2P119",25,0)
 S KIEN=0 F  S KIEN=$O(^XUSEC("ECMGR",KIEN)) Q:'+KIEN  S XMY(KIEN)="" ;Holders of ECMGR included in email, XUSEC read allowed by DBIA #10076
"RTN","EC2P119",26,0)
 S XMSUB="Patch EC*2*119 Post install COMPLETED"
"RTN","EC2P119",27,0)
 S XMTEXT="ECTEXT("
"RTN","EC2P119",28,0)
 S ECTEXT(1)="The post-install for patch 119, review of DSS UNIT names,"
"RTN","EC2P119",29,0)
 S ECTEXT(2)="has completed.  Below are the results of the review."
"RTN","EC2P119",30,0)
 S ECTEXT(3)=""
"RTN","EC2P119",31,0)
 I '$D(DUP)&('$D(UPD))&('$D(ERR)) S ECTEXT(4)="No changes were made and no further action is required." D ^XMD Q
"RTN","EC2P119",32,0)
 S CNT=4
"RTN","EC2P119",33,0)
 I $D(UPD) D  S ECTEXT(CNT)="",CNT=CNT+1
"RTN","EC2P119",34,0)
 .S ECTEXT(CNT)="The following entries were updated during this process.",CNT=CNT+1,ECTEXT(CNT)="No further action is required for these entries.",CNT=CNT+1,ECTEXT(CNT)="",CNT=CNT+1
"RTN","EC2P119",35,0)
 .S NAME="" F  S NAME=$O(UPD(NAME)) Q:NAME=""  S ECTEXT(CNT)=NAME_" was changed to "_UPD(NAME),CNT=CNT+1
"RTN","EC2P119",36,0)
 I $D(DUP) D  S ECTEXT(CNT)="",CNT=CNT+1
"RTN","EC2P119",37,0)
 .S ECTEXT(CNT)="The following entries could not be updated because a duplicate entry",CNT=CNT+1,ECTEXT(CNT)="would have been created.  Please update entries manually or log a remedy",CNT=CNT+1,ECTEXT(CNT)="ticket for assistance.",CNT=CNT+1
"RTN","EC2P119",38,0)
 .S ECTEXT(CNT)="",CNT=CNT+1
"RTN","EC2P119",39,0)
 .S NAME="" F  S NAME=$O(DUP(NAME)) Q:NAME=""  S ECTEXT(CNT)=NAME_" would have created a duplicate entry to "_DUP(NAME),CNT=CNT+1
"RTN","EC2P119",40,0)
 I $D(ERR) D
"RTN","EC2P119",41,0)
 .S ECTEXT(CNT)="The following entries couldn't be updated because an error was encountered.",CNT=CNT+1,ECTEXT(CNT)="Please log a remedy ticket for assistance.",CNT=CNT+1,ECTEXT(CNT)="",CNT=CNT+1
"RTN","EC2P119",42,0)
 .S NAME="" F  S NAME=$O(ERR(NAME)) Q:NAME=""  S ECTEXT(CNT)="Couldn't update DSS UNIT "_NAME,CNT=CNT+1
"RTN","EC2P119",43,0)
 D ^XMD
"RTN","ECDSS1")
0^8^B26567205^B15692712
"RTN","ECDSS1",1,0)
ECDSS1 ;BIR/RHK,JPW-Active/Inactive Procedure Report ;11/7/12  12:10
"RTN","ECDSS1",2,0)
 ;;2.0;EVENT CAPTURE;**4,25,95,119**;8 May 96;Build 12
"RTN","ECDSS1",3,0)
 ; Routine to report active and inactive procedures
"RTN","ECDSS1",4,0)
START ; Routine execution
"RTN","ECDSS1",5,0)
 N ECRAS S ECRAS=1  ;roll and scroll
"RTN","ECDSS1",6,0)
 S DIR(0)="SO^A:Active Procedures;I:Inactive Procedures"
"RTN","ECDSS1",7,0)
 S DIR("A")="Select Report"
"RTN","ECDSS1",8,0)
 S DIR("?")="Enter an A for active procedures, I for inactive procedures, or ^ to quit."
"RTN","ECDSS1",9,0)
 S DIR("??")="ECDSS1^"
"RTN","ECDSS1",10,0)
 D ^DIR K DIR I $D(DIRUT) G END
"RTN","ECDSS1",11,0)
 S ECRTN=Y
"RTN","ECDSS1",12,0)
INACT ;list inact procs
"RTN","ECDSS1",13,0)
 I ECRTN="I" D LISTI G END
"RTN","ECDSS1",14,0)
ASK ;
"RTN","ECDSS1",15,0)
 S DIR(0)="SO^N:National;L:Local;B:Both",DIR("A")="Select Preferred Report"
"RTN","ECDSS1",16,0)
 S DIR("?,1")="Enter an N for National Procedures only, L for Local Procedures only,"
"RTN","ECDSS1",17,0)
 S DIR("?")="B for a combined report, or ^ to quit."
"RTN","ECDSS1",18,0)
 S DIR("??")="ECDSAC^" D ^DIR K DIR I $D(DIRUT) G END
"RTN","ECDSS1",19,0)
 S ECRN=Y
"RTN","ECDSS1",20,0)
SORT ;ask sort
"RTN","ECDSS1",21,0)
 S DIR(0)="SO^P:Procedure Name;N:National Number",DIR("A")="Select Sort Method"
"RTN","ECDSS1",22,0)
 S DIR("?")="Enter N to sort by National Number, P by Procedure Name, or ^ to quit."
"RTN","ECDSS1",23,0)
 S DIR("??")="ECDSAC1^" D ^DIR K DIR I $D(DIRUT) G END
"RTN","ECDSS1",24,0)
 S ECRD=Y
"RTN","ECDSS1",25,0)
PRT ;start prints
"RTN","ECDSS1",26,0)
 I $G(ECPTYP)="E" D EXPORT,^ECKILL Q  ;119
"RTN","ECDSS1",27,0)
 I ECRN="N",ECRD="N" D LISTNN G END
"RTN","ECDSS1",28,0)
 I ECRN="N",ECRD="P" D LISTNP G END
"RTN","ECDSS1",29,0)
 I ECRN="L",ECRD="N" D LISTPN G END
"RTN","ECDSS1",30,0)
 I ECRN="L",ECRD="P" D LISTPP G END
"RTN","ECDSS1",31,0)
 I ECRN="B",ECRD="N" D LISTBN G END
"RTN","ECDSS1",32,0)
 I ECRN="B",ECRD="P" D LISTBP
"RTN","ECDSS1",33,0)
END ;kills var and quit
"RTN","ECDSS1",34,0)
 W @IOF D ^ECKILL
"RTN","ECDSS1",35,0)
 Q
"RTN","ECDSS1",36,0)
LISTI ;all inact proc
"RTN","ECDSS1",37,0)
 I $G(ECPTYP)="E" D EXPORT,^ECKILL Q  ;119
"RTN","ECDSS1",38,0)
 W ! K DIC S DIC="^EC(725,",FLDS=".01,1,4,2",BY=".01",(FR,TO)="",L=0,DHD="NATIONAL/LOCAL PROCEDURE REPORT - INACTIVE",DIS(0)="I +$P(^EC(725,D0,0),""^"",3)" D EN1^DIP
"RTN","ECDSS1",39,0)
 D MSG
"RTN","ECDSS1",40,0)
 Q
"RTN","ECDSS1",41,0)
LISTNN ;nat only by nat num
"RTN","ECDSS1",42,0)
 W ! K DIC S DIC="^EC(725,",FLDS="1,4,.01",BY="1",(FR,TO)="",L=0,DHD="NATIONAL/LOCAL PROCEDURE REPORT - ACTIVE NATIONAL BY NATIONAL NUMBER",DIS(0)="I D0<90000,'$P(^EC(725,D0,0),""^"",3)" D EN1^DIP
"RTN","ECDSS1",43,0)
 D MSG
"RTN","ECDSS1",44,0)
 Q
"RTN","ECDSS1",45,0)
LISTNP ;nat only by proc
"RTN","ECDSS1",46,0)
 W ! K DIC S DIC="^EC(725,",FLDS=".01,1,4",BY=".01",(FR,TO)="",L=0,DHD="NATIONAL/LOCAL PROCEDURE REPORT - ACTIVE NATIONAL BY PROCEDURE",DIS(0)="I D0<90000,'$P(^EC(725,D0,0),""^"",3)" D EN1^DIP
"RTN","ECDSS1",47,0)
 D MSG
"RTN","ECDSS1",48,0)
 Q
"RTN","ECDSS1",49,0)
LISTPN ;loc by nat num
"RTN","ECDSS1",50,0)
 W ! K DIC S DIC="^EC(725,",FLDS="1,4,.01",BY="1",(FR,TO)="",L=0,DHD="NATIONAL/LOCAL PROCEDURE REPORT - ACTIVE LOCAL BY NATIONAL NUMBER",DIS(0)="I D0>89999,'$P(^EC(725,D0,0),""^"",3)" D EN1^DIP
"RTN","ECDSS1",51,0)
 D MSG
"RTN","ECDSS1",52,0)
 Q
"RTN","ECDSS1",53,0)
LISTPP ;loc by proc
"RTN","ECDSS1",54,0)
 W ! K DIC S DIC="^EC(725,",FLDS=".01,1,4",BY=".01",(FR,TO)="",L=0,DHD="NATIONAL/LOCAL PROCEDURE REPORT - ACTIVE LOCAL BY PROCEDURE",DIS(0)="I D0>89999,'$P(^EC(725,D0,0),""^"",3)" D EN1^DIP
"RTN","ECDSS1",55,0)
 D MSG
"RTN","ECDSS1",56,0)
 Q
"RTN","ECDSS1",57,0)
LISTBN ;both by nat num
"RTN","ECDSS1",58,0)
 W ! K DIC S DIC="^EC(725,",FLDS="1,4,.01",BY="1",(FR,TO)="",L=0,DHD="NATIONAL/LOCAL PROCEDURE REPORT - ACTIVE NATIONAL AND LOCAL BY NATIONAL NUMBER",DIS(0)="I '$P(^EC(725,D0,0),""^"",3)" D EN1^DIP
"RTN","ECDSS1",59,0)
 D MSG
"RTN","ECDSS1",60,0)
 Q
"RTN","ECDSS1",61,0)
LISTBP ;both by proc
"RTN","ECDSS1",62,0)
 W ! K DIC S DIC="^EC(725,",FLDS=".01,1,4",BY=".01",(FR,TO)="",L=0,DHD="NATIONAL/LOCAL PROCEDURE REPORT - ACTIVE NATIONAL AND LOCAL BY PROCEDURE",DIS(0)="I '$P(^EC(725,D0,0),""^"",3)" D EN1^DIP
"RTN","ECDSS1",63,0)
 D MSG
"RTN","ECDSS1",64,0)
 Q
"RTN","ECDSS1",65,0)
MSG I $D(ECRAS) W !!,"Press <RET> to continue  " R X:DTIME
"RTN","ECDSS1",66,0)
 Q
"RTN","ECDSS1",67,0)
 ;
"RTN","ECDSS1",68,0)
EXPORT ;Section added in patch 119
"RTN","ECDSS1",69,0)
 N CNT,I,NM,DATA,IEN,INDEX
"RTN","ECDSS1",70,0)
 S CNT=1,^TMP($J,"ECRPT",CNT)=$S($G(ECRD)="N":"NATIONAL NUMBER^CPT^NAME",1:"NAME^NATIONAL NUMBER^CPT")_$S($G(ECRTN)="I":"^INACTIVE DATE",1:"")
"RTN","ECDSS1",71,0)
 S NM="",INDEX=$S($G(ECRD)="N":"E",1:"B") F  S NM=$O(^EC(725,INDEX,NM)) Q:NM=""  S I=0 F  S I=$O(^EC(725,INDEX,NM,I)) Q:'+I  D  K DATA
"RTN","ECDSS1",72,0)
 .S IEN=I_","
"RTN","ECDSS1",73,0)
 .D GETS^DIQ(725,IEN,".01;1;2;4",,"DATA")
"RTN","ECDSS1",74,0)
 .I $G(ECRTN)="I"&(DATA(725,IEN,2)'="") S CNT=CNT+1,^TMP($J,"ECRPT",CNT)=DATA(725,IEN,.01)_U_DATA(725,IEN,1)_U_DATA(725,IEN,4)_U_DATA(725,IEN,2) Q  ;If sort by inactive and entry is inactive, store record
"RTN","ECDSS1",75,0)
 .I $G(ECRTN)="A"&(DATA(725,IEN,2)="") D  ;If sort by active and entry is active, continue processing
"RTN","ECDSS1",76,0)
 ..I $G(ECRN)="N"&(I>89999) Q  ;If looking for nation entries and entry has a local number, quit
"RTN","ECDSS1",77,0)
 ..I $G(ECRN)="L"&(I<90000) Q  ;If looking for local entries and entry has a national number, quit
"RTN","ECDSS1",78,0)
 ..;assume record should be counted
"RTN","ECDSS1",79,0)
 ..S CNT=CNT+1,^TMP($J,"ECRPT",CNT)=$S($G(ECRD)="N":DATA(725,IEN,1)_U_DATA(725,IEN,4)_U_DATA(725,IEN,.01),1:DATA(725,IEN,.01)_U_DATA(725,IEN,1)_U_DATA(725,IEN,4))
"RTN","ECDSS1",80,0)
 Q
"RTN","ECDSS3")
0^5^B7309130^B4631829
"RTN","ECDSS3",1,0)
ECDSS3 ;BIR/RHK,JPW-Active/Inactive Category Report ;11/7/12  12:09
"RTN","ECDSS3",2,0)
 ;;2.0;EVENT CAPTURE;**25,95,119**;8 May 96;Build 12
"RTN","ECDSS3",3,0)
 ; Routine to report active and inactive procedures
"RTN","ECDSS3",4,0)
START ; Routine execution
"RTN","ECDSS3",5,0)
 N ECRAS S ECRAS=1  ;roll and scroll flag
"RTN","ECDSS3",6,0)
 S DIR(0)="SO^A:Active Categories;I:Inactive Categories;B:Both"
"RTN","ECDSS3",7,0)
 S DIR("A")="Select Report"
"RTN","ECDSS3",8,0)
 S DIR("?",1)="Enter an A for Active Categories, I for Inactive Categories,"
"RTN","ECDSS3",9,0)
 S DIR("?")="B for a consolidated report of all categories, or ^ to quit."
"RTN","ECDSS3",10,0)
 S DIR("??")="ECDSS3^"
"RTN","ECDSS3",11,0)
 D ^DIR K DIR I $D(DIRUT) G END
"RTN","ECDSS3",12,0)
 S ECRTN=Y
"RTN","ECDSS3",13,0)
ACT ;list active cats (LISTA)
"RTN","ECDSS3",14,0)
INACT ;list inactive cats (LISTI)
"RTN","ECDSS3",15,0)
ALL ;list all cats (LISTB)
"RTN","ECDSS3",16,0)
 W ! D PRINT W @IOF
"RTN","ECDSS3",17,0)
 Q
"RTN","ECDSS3",18,0)
PRINT ;starts print for RPC
"RTN","ECDSS3",19,0)
 I $G(ECPTYP)="E" D EXPORT,^ECKILL Q  ;119
"RTN","ECDSS3",20,0)
 I ECRTN="A" D LISTA
"RTN","ECDSS3",21,0)
 I ECRTN="I" D LISTI
"RTN","ECDSS3",22,0)
 I ECRTN="B" D LISTB
"RTN","ECDSS3",23,0)
END ; Kill variables and exit
"RTN","ECDSS3",24,0)
 D ^ECKILL
"RTN","ECDSS3",25,0)
 Q
"RTN","ECDSS3",26,0)
LISTA ;list active categories
"RTN","ECDSS3",27,0)
 K DIC S DIC="^EC(726,",FLDS=".01",BY=".01",(FR,TO)="",L=0,DHD="CATEGORY REPORT - ACTIVE",DIS(0)="I '$P(^EC(726,D0,0),""^"",3)" D EN1^DIP
"RTN","ECDSS3",28,0)
 I $D(ECRAS) W !!,"Press <RET> to continue   " R X:DTIME
"RTN","ECDSS3",29,0)
 Q
"RTN","ECDSS3",30,0)
LISTI ;list inactive categories
"RTN","ECDSS3",31,0)
 K DIC S DIC="^EC(726,",FLDS=".01,2;""INACTIVE DATE""",BY=".01",(FR,TO)="",L=0,DHD="CATEGORY REPORT - INACTIVE",DIS(0)="I +$P(^EC(726,D0,0),""^"",3)" D EN1^DIP
"RTN","ECDSS3",32,0)
 I $D(ECRAS) W !!,"Press <RET> to continue   " R X:DTIME
"RTN","ECDSS3",33,0)
 Q
"RTN","ECDSS3",34,0)
LISTB ;list all cats
"RTN","ECDSS3",35,0)
 K DIC S DIC="^EC(726,",FLDS=".01,2;""INACTIVE DATE""",BY=".01",(FR,TO)="",L=0,DHD="CATEGORY REPORT - BOTH ACTIVE AND INACTIVE" D EN1^DIP
"RTN","ECDSS3",36,0)
 I $D(ECRAS) W !!,"Press <RET> to continue   " R X:DTIME
"RTN","ECDSS3",37,0)
 Q
"RTN","ECDSS3",38,0)
 ;
"RTN","ECDSS3",39,0)
EXPORT ;Section added in patch 119
"RTN","ECDSS3",40,0)
 N CNT,I,NM,NODE
"RTN","ECDSS3",41,0)
 S CNT=1
"RTN","ECDSS3",42,0)
 S ^TMP($J,"ECRPT",CNT)="NAME"_$S(ECRTN'="A":(U_"INACTIVE DATE"),1:"")
"RTN","ECDSS3",43,0)
 S NM="" F  S NM=$O(^EC(726,"B",NM)) Q:NM=""  S I=0 F  S I=$O(^EC(726,"B",NM,I)) Q:'+I  D
"RTN","ECDSS3",44,0)
 .S NODE=$G(^EC(726,I,0)) Q:NODE=""
"RTN","ECDSS3",45,0)
 .I ECRTN="A" I $P(NODE,U,3)="" S CNT=CNT+1,^TMP($J,"ECRPT",CNT)=$P(NODE,U) Q
"RTN","ECDSS3",46,0)
 .I ECRTN="B" S CNT=CNT+1,^TMP($J,"ECRPT",CNT)=$P(NODE,U)_U_$$FMTE^XLFDT($P(NODE,U,3)) Q
"RTN","ECDSS3",47,0)
 .I ECRTN="I" I $P(NODE,U,3)'="" S CNT=CNT+1,^TMP($J,"ECRPT",CNT)=$P(NODE,U)_U_$$FMTE^XLFDT($P(NODE,U,3))
"RTN","ECDSS3",48,0)
 Q
"RTN","ECEFPAT")
0^25^B71296249^B59874823
"RTN","ECEFPAT",1,0)
ECEFPAT ;ALB/JAM-Enter Event Capture Data Patient Filer ;11/21/12  16:29
"RTN","ECEFPAT",2,0)
 ;;2.0;EVENT CAPTURE;**25,32,39,42,47,49,54,65,72,95,76,112,119**;8 May 96;Build 12
"RTN","ECEFPAT",3,0)
 ;
"RTN","ECEFPAT",4,0)
FILE ;Used by the RPC broker to file patient encounter in file #721
"RTN","ECEFPAT",5,0)
 ;  Uses Supported IA 1995 - allow access to $$CPT^ICPTCOD
"RTN","ECEFPAT",6,0)
 ;
"RTN","ECEFPAT",7,0)
 ;     Variables passed in
"RTN","ECEFPAT",8,0)
 ;       ECIEN   - IEN of #721, if editing
"RTN","ECEFPAT",9,0)
 ;       ECDEL   - Delete record. 1- YES; 0- 0, null or undefine for NO.
"RTN","ECEFPAT",10,0)
 ;       ECDFN   - Patient IEN for file #2
"RTN","ECEFPAT",11,0)
 ;       ECDT    - Date and time of procedure
"RTN","ECEFPAT",12,0)
 ;       ECL     - Location
"RTN","ECEFPAT",13,0)
 ;       ECD     - DSS Unit
"RTN","ECEFPAT",14,0)
 ;       ECC     - Category
"RTN","ECEFPAT",15,0)
 ;       ECP     - Procedure
"RTN","ECEFPAT",16,0)
 ;       ECVOL   - Volume
"RTN","ECEFPAT",17,0)
 ;       ECU1..n - Provider (1 thru n), Prov 1 is required,other optional
"RTN","ECEFPAT",18,0)
 ;       ECMN    - Ordering Section
"RTN","ECEFPAT",19,0)
 ;       ECDUZ   - Entered/Edited by, pointer to #200
"RTN","ECEFPAT",20,0)
 ;       ECDX    - Primary Diagnosis
"RTN","ECEFPAT",21,0)
 ;       ECDXS   - Secondary Diagnosis; multiple, optional
"RTN","ECEFPAT",22,0)
 ;       EC4     - Associated Clinic, required if sending data to PCE
"RTN","ECEFPAT",23,0)
 ;       ECPTSTAT- Patient Status
"RTN","ECEFPAT",24,0)
 ;       ECPXREAS- Procedure reason, optional
"RTN","ECEFPAT",25,0)
 ;       ECPXREA2- Procedure reason #2, optional ;112
"RTN","ECEFPAT",26,0)
 ;       ECPXREA3- Procedure reason #3, optional ;112
"RTN","ECEFPAT",27,0)
 ;       ECMOD   - CPT modifiers, optional
"RTN","ECEFPAT",28,0)
 ;       ECLASS  - Classification, optional
"RTN","ECEFPAT",29,0)
 ;       ECELIG  - Eligibility, optional
"RTN","ECEFPAT",30,0)
 ;
"RTN","ECEFPAT",31,0)
 ;     Variable return
"RTN","ECEFPAT",32,0)
 ;       ^TMP($J,"ECMSG",n)=Success or failure to file in #721^Message
"RTN","ECEFPAT",33,0)
 ;
"RTN","ECEFPAT",34,0)
 N NODE,ECS,ECM,ECID,ECCPT,ECINT,ECPCE,ECX,ECERR,ECOUT,ECFLG,ECRES
"RTN","ECEFPAT",35,0)
 N ECFIL,ECPRV
"RTN","ECEFPAT",36,0)
 S ECFLG=1,ECERR=0 D CHKDT(1) I ECERR Q
"RTN","ECEFPAT",37,0)
 F ECX=1:1 Q:'$D(@("ECU"_ECX))  D  I ECERR Q
"RTN","ECEFPAT",38,0)
 .I @("ECU"_ECX)="" Q
"RTN","ECEFPAT",39,0)
 .S NODE=$$GET^XUA4A72(@("ECU"_ECX),ECDT) I +NODE'>0 S ECERR=1 D  Q
"RTN","ECEFPAT",40,0)
 ..S ^TMP($J,"ECMSG",1)="0^Provider doesn't have an active Person class"
"RTN","ECEFPAT",41,0)
 .S ECPRV(ECX)=@("ECU"_ECX)_"^^"_$S(ECX=1:"P",1:"S")
"RTN","ECEFPAT",42,0)
 I $G(ECIEN)'="" S ECFLG=0 D  I ECERR Q
"RTN","ECEFPAT",43,0)
 . I '$D(^ECH(ECIEN)) S ECERR=1,^TMP($J,"ECMSG",1)="0^Pat IEN Not Found"
"RTN","ECEFPAT",44,0)
 I $G(ECDEL) K ^TMP($J,"ECMSG") D  Q
"RTN","ECEFPAT",45,0)
 .S ECVST=$P($G(^ECH(ECIEN,0)),"^",21) I ECVST D
"RTN","ECEFPAT",46,0)
 ..;* Resend all EC records with same Visit file entry to PCE
"RTN","ECEFPAT",47,0)
 ..;* Remove Visit entry from ^ECH( so DELVFILE will complete cleanup
"RTN","ECEFPAT",48,0)
 ..K EC2PCE S ECVAR1=$$FNDVST^ECUTL(ECVST,,.EC2PCE) K ECVAR1
"RTN","ECEFPAT",49,0)
 ..;Set VALQUIET to stop Amb Care validator from broadcasting to screen
"RTN","ECEFPAT",50,0)
 ..N ECPKG,ECSOU
"RTN","ECEFPAT",51,0)
 ..S ECPKG=$O(^DIC(9.4,"B","EVENT CAPTURE",0)),ECSOU="EVENT CAPTURE DATA"
"RTN","ECEFPAT",52,0)
 ..S VALQUIET=1,ECVV=$$DELVFILE^PXAPI("ALL",ECVST,ECPKG,ECSOU) K ECVST,VALQUIET
"RTN","ECEFPAT",53,0)
 ..;- Send to PCE task
"RTN","ECEFPAT",54,0)
 ..D PCETASK^ECPCEU(.EC2PCE) K EC2PCE
"RTN","ECEFPAT",55,0)
 .S DA=ECIEN,DIK="^ECH(" D ^DIK K DA,DIK,ECVV
"RTN","ECEFPAT",56,0)
 .S ^TMP($J,"ECMSG",1)="1^Procedure Deleted"
"RTN","ECEFPAT",57,0)
 I '$D(ECPRV) S ^TMP($J,"ECMSG",1)="0^No provider present" Q
"RTN","ECEFPAT",58,0)
 S ECDT=+ECDT,NODE=$G(^ECD(ECD,0)) I NODE="" D MSG Q
"RTN","ECEFPAT",59,0)
 S ECFN=$G(ECIEN),ECVOL=$G(ECVOL,1),ECS=$P(NODE,U,2),ECM=$P(NODE,U,3)
"RTN","ECEFPAT",60,0)
 S ECPCE="U~"_$S($P(NODE,"^",14)]"":$P(NODE,"^",14),1:"N")
"RTN","ECEFPAT",61,0)
 ;S ECPTSTAT=$$INOUTPT^ECUTL0(ECDFN,+ECDT) ;pat stat may not need
"RTN","ECEFPAT",62,0)
 I $G(EC4)="" D GETCLN^ECEDF
"RTN","ECEFPAT",63,0)
 S ECID=$S(+EC4:$P($G(^SC(+EC4,0)),"^",7),1:""),ECINP=ECPTSTAT
"RTN","ECEFPAT",64,0)
 I $S($P(ECPCE,"~",2)="N":0,$P(ECPCE,"~",2)="O"&(ECINP'="O"):0,1:1) D
"RTN","ECEFPAT",65,0)
 .D CHKDT(2)
"RTN","ECEFPAT",66,0)
 I +EC4 S ECRES=$$CLNCK^SDUTL2(+EC4,0) I 'ECRES D  S ECERR=1
"RTN","ECEFPAT",67,0)
 .S ^TMP($J,"ECMSG",1)=ECRES_" Clinic MUST be corrected before filing."
"RTN","ECEFPAT",68,0)
 Q:ECERR  I ECFLG D NEWIEN
"RTN","ECEFPAT",69,0)
 S ECCPT=$S(ECP["ICPT":+ECP,1:$P($G(^EC(725,+ECP,0)),U,5))
"RTN","ECEFPAT",70,0)
 ;validate CPT value and handle HCPCS name to IEN conversion (HD223010)
"RTN","ECEFPAT",71,0)
 S ECCPT=+$$CPT^ICPTCOD(ECCPT)
"RTN","ECEFPAT",72,0)
 S ECCPT=$S(+ECCPT>0:ECCPT,1:0)
"RTN","ECEFPAT",73,0)
 K DA,DR,DIE S DIE="^ECH(",(DA,ECFN)=ECIEN K ECIEN
"RTN","ECEFPAT",74,0)
 S DR=".01////"_ECFN_";1////"_ECDFN_";3////"_ECL_";4////"_ECS
"RTN","ECEFPAT",75,0)
 S DR=DR_";5////"_ECM_";6////"_ECD_";7////"_+ECC_";9////"_ECVOL
"RTN","ECEFPAT",76,0)
 S $P(^ECH(ECFN,0),"^",9)=ECP
"RTN","ECEFPAT",77,0)
 D ^DIE I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",78,0)
 S DA=ECFN,DR="11////"_ECMN_";13////"_ECDUZ_";2////"_ECDT
"RTN","ECEFPAT",79,0)
 ;S ECPXREAS=$G(ECPXREAS) ;112
"RTN","ECEFPAT",80,0)
 D CVTREAS Q:$G(ECERR)  ;119 Convert reasons from entries in 720.4 to entries in 720.5 before storing.
"RTN","ECEFPAT",81,0)
 S DR=DR_";19////"_$S(+ECCPT:ECCPT,1:"@")_";20////"_ECDX
"RTN","ECEFPAT",82,0)
 S DR=DR_";26////"_$G(EC4)_";27////"_$G(ECID)_";29////"_ECPTSTAT
"RTN","ECEFPAT",83,0)
 S DR=DR_";34////"_$S($G(ECPXREAS)="":"@",1:ECPXREAS) ;112
"RTN","ECEFPAT",84,0)
 S DR=DR_";43////"_$S($G(ECPXREA2)="":"@",1:ECPXREA2) ;112
"RTN","ECEFPAT",85,0)
 S DR=DR_";44////"_$S($G(ECPXREA3)="":"@",1:ECPXREA3) ;112
"RTN","ECEFPAT",86,0)
 D ^DIE I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",87,0)
 I ECDX S ^DISV(DUZ,"^ICD9(")=ECDX  ;last ICD9 code
"RTN","ECEFPAT",88,0)
 S ECX=$O(ECPRV("A"),-1) I ECX'="" S ^DISV(DUZ,"^VA(200,")=+ECPRV(ECX)
"RTN","ECEFPAT",89,0)
 ;Remove Old CPT modifiers
"RTN","ECEFPAT",90,0)
 I 'ECFLG D
"RTN","ECEFPAT",91,0)
 . K OLDMOD S (ECDA,DA(1))=ECFN,DIK="^ECH("_DA(1)_",""MOD"",",DA=0
"RTN","ECEFPAT",92,0)
 . F  S DA=$O(^ECH(ECDA,"MOD",DA)) Q:'DA  S OLDMOD(DA)="" D ^DIK
"RTN","ECEFPAT",93,0)
 . K DA,ECDA,DIK,^ECH(ECFN,"MOD")
"RTN","ECEFPAT",94,0)
 .;Remove old secondary diagnosis codes
"RTN","ECEFPAT",95,0)
 . K OLDDXS S (ECDA,DA(1))=ECFN,DIK="^ECH("_DA(1)_",""DX"",",DA=0
"RTN","ECEFPAT",96,0)
 . F  S DA=$O(^ECH(ECDA,"DX",DA)) Q:'DA  S OLDDXS(DA)="" D ^DIK
"RTN","ECEFPAT",97,0)
 . K DA,ECDA,DIK,^ECH(ECFN,"DX")
"RTN","ECEFPAT",98,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",99,0)
 ;File multiple providers
"RTN","ECEFPAT",100,0)
 S ECFIL=$$FILPRV^ECPRVMUT(ECFN,.ECPRV,.ECOUT) K ECOUT
"RTN","ECEFPAT",101,0)
 I 'ECFIL D RECDEL,MSG Q
"RTN","ECEFPAT",102,0)
 ;File CPT modifiers
"RTN","ECEFPAT",103,0)
 I $G(ECMOD)'="" D
"RTN","ECEFPAT",104,0)
 . S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,36,0),U,2)
"RTN","ECEFPAT",105,0)
 . S DIC="^ECH("_DA(1)_","_"""MOD"""_","
"RTN","ECEFPAT",106,0)
 . F ECX=1:1:$L(ECMOD,"^") S MODIEN=$P(ECMOD,U,ECX) I +MODIEN>0 D
"RTN","ECEFPAT",107,0)
 . . K DD,DO S X=MODIEN D FILE^DICN
"RTN","ECEFPAT",108,0)
 . K MODIEN,DIC
"RTN","ECEFPAT",109,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",110,0)
 ; File multiple secondary diagnosis codes
"RTN","ECEFPAT",111,0)
 I $G(ECDXS)'="" D
"RTN","ECEFPAT",112,0)
 . S DXS="",DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,38,0),U,2)
"RTN","ECEFPAT",113,0)
 . S DIC="^ECH("_DA(1)_","_"""DX"""_",",ECDXY=ECDX K ECDXX
"RTN","ECEFPAT",114,0)
 . F ECX=1:1:$L(ECDXS,"^") S DXSIEN=$P(ECDXS,U,ECX) I +DXSIEN>0 D
"RTN","ECEFPAT",115,0)
 . . S DXCDE=$$ICDDX^ICDCODE(DXSIEN,ECDT) Q:+DXCDE<0  I '$P(DXCDE,U,10) Q
"RTN","ECEFPAT",116,0)
 . . K DD,DO S X=DXSIEN D FILE^DICN
"RTN","ECEFPAT",117,0)
 . . S DXCDE=$P(DXCDE,U,2),ECDXX(DXCDE)=DXSIEN
"RTN","ECEFPAT",118,0)
 . . S ^DISV(DUZ,"^ICD9(")=DXSIEN  ;last ICD9 code
"RTN","ECEFPAT",119,0)
 . ; Update all procedures for an encounter with same primary & second dx
"RTN","ECEFPAT",120,0)
 . S PXUPD=$$PXUPD^ECUTL2(ECDFN,ECDT,ECL,EC4,ECDXY,.ECDXX,ECFN)
"RTN","ECEFPAT",121,0)
 . K PXUPD,ECDXY,ECDXX,DXS,DXSIEN,DIC,DXCDE,DA,DD,DO
"RTN","ECEFPAT",122,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",123,0)
 S DA=ECFN
"RTN","ECEFPAT",124,0)
 ;File classification AO^IR^SC^EC^MST^HNC^CV^SHAD
"RTN","ECEFPAT",125,0)
 I $G(ECLASS)'="" D
"RTN","ECEFPAT",126,0)
 . S CLSTR="21^22^24^23^35^39^40^41",DR=""
"RTN","ECEFPAT",127,0)
 . F ECX=1:1:$L(CLSTR,"^") D
"RTN","ECEFPAT",128,0)
 . . S DR=DR_$P(CLSTR,U,ECX)_"////"_$P(ECLASS,U,ECX)_";"
"RTN","ECEFPAT",129,0)
 . S DR=$E(DR,1,($L(DR)-1)) D ^DIE
"RTN","ECEFPAT",130,0)
 . K CLSTR,DR,DIE
"RTN","ECEFPAT",131,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",132,0)
 ;
"RTN","ECEFPAT",133,0)
PCE ; format PCE data to send
"RTN","ECEFPAT",134,0)
 I ($P(ECPCE,"~",2)="N")!($P(ECPCE,"~",2)="O"&(ECINP'="O")) D  Q
"RTN","ECEFPAT",135,0)
 .S ^TMP($J,"ECMSG",1)="1^Record Filed"
"RTN","ECEFPAT",136,0)
 D:ECFLG PCE^ECBEN2U I 'ECFLG S EC(0)=^ECH(ECFN,0) D PCEE^ECBEN2U K EC
"RTN","ECEFPAT",137,0)
 I $G(ECOUT)!(ECERR) D  Q
"RTN","ECEFPAT",138,0)
 . D RECDEL S STR=$S($G(^ECH(ECFN,"R")):^("R"),1:" PCE Data Missing")
"RTN","ECEFPAT",139,0)
 . S ^TMP($J,"ECMSG",1)="0^Record Not Filed, "_STR K STR
"RTN","ECEFPAT",140,0)
 S ^TMP($J,"ECMSG",1)="1^Record Filed"_U_$G(ECIEN)
"RTN","ECEFPAT",141,0)
 Q
"RTN","ECEFPAT",142,0)
 ;
"RTN","ECEFPAT",143,0)
NEWIEN ;Create new IEN in file #721
"RTN","ECEFPAT",144,0)
 N DIC,DA,DD,DO,ECRN
"RTN","ECEFPAT",145,0)
RLCK L +^ECH(0):60 S ECRN=$P(^ECH(0),"^",3)+1
"RTN","ECEFPAT",146,0)
 I $D(^ECH(ECRN)) S $P(^ECH(0),"^",3)=$P(^(0),"^",3)+1 L -^ECH(0) G RLCK
"RTN","ECEFPAT",147,0)
 L -^ECH(0) S DIC(0)="L",DIC="^ECH(",X=ECRN
"RTN","ECEFPAT",148,0)
 D FILE^DICN S ECIEN=+Y
"RTN","ECEFPAT",149,0)
 Q
"RTN","ECEFPAT",150,0)
RECDEL ; Delete record
"RTN","ECEFPAT",151,0)
 ;restore old data
"RTN","ECEFPAT",152,0)
 I 'ECFLG D  Q
"RTN","ECEFPAT",153,0)
 . I $O(OLDMOD("")) D
"RTN","ECEFPAT",154,0)
 . . S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,36,0),U,2)
"RTN","ECEFPAT",155,0)
 . . S DIC="^ECH("_DA(1)_","_"""MOD"""_",",ECX=0
"RTN","ECEFPAT",156,0)
 . . F  S ECX=$O(OLDMOD(ECX)) Q:'ECX  I ECX>0 K DD,DO S X=ECX D FILE^DICN
"RTN","ECEFPAT",157,0)
 . I $O(OLDDXS("")) D
"RTN","ECEFPAT",158,0)
 . . S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,38,0),U,2)
"RTN","ECEFPAT",159,0)
 . . S DIC="^ECH("_DA(1)_","_"""DX"""_",",ECX=0
"RTN","ECEFPAT",160,0)
 . . F  S ECX=$O(OLDDXS(ECX)) Q:'ECX  I ECX>0 K DD,DO S X=ECX D FILE^DICN
"RTN","ECEFPAT",161,0)
 . K DIC,DA,DD,DO,OLDMOD,OLDDXS,ECX
"RTN","ECEFPAT",162,0)
 S DA=ECFN,DIK="^ECH(" D ^DIK K DA,DIK
"RTN","ECEFPAT",163,0)
 Q
"RTN","ECEFPAT",164,0)
MSG ;Record not filed
"RTN","ECEFPAT",165,0)
 S ^TMP($J,"ECMSG",1)="0^Record not Filed"
"RTN","ECEFPAT",166,0)
 Q
"RTN","ECEFPAT",167,0)
CHKDT(FLG) ;Required Data Check
"RTN","ECEFPAT",168,0)
 N I,C
"RTN","ECEFPAT",169,0)
 S C=1
"RTN","ECEFPAT",170,0)
 I FLG=1 D  Q
"RTN","ECEFPAT",171,0)
 .F I="ECD","ECC","ECL","ECDT","ECP","ECDFN","ECMN","ECDUZ","ECPTSTAT" D
"RTN","ECEFPAT",172,0)
 ..I $G(@I)="" S ^TMP($J,"ECMSG",C)="0^Key data missing "_I,C=C+1,ECERR=1
"RTN","ECEFPAT",173,0)
 .I $G(ECDEL),$D(ECIEN) K ^TMP($J,"ECMSG") S ECERR=0
"RTN","ECEFPAT",174,0)
 ;check PCE data
"RTN","ECEFPAT",175,0)
 I FLG=2 D  Q
"RTN","ECEFPAT",176,0)
 .F I="EC4","ECDX" D  Q
"RTN","ECEFPAT",177,0)
 ..I $G(@I)="" S ^TMP($J,"ECMSG",C)="0^Key PCE data missing "_I,C=C+1,ECERR=1
"RTN","ECEFPAT",178,0)
 Q
"RTN","ECEFPAT",179,0)
VALDATA ;validate data
"RTN","ECEFPAT",180,0)
 N ECRRX
"RTN","ECEFPAT",181,0)
 D CHK^DIE(721,1,,"`"_ECDFN,.ECRRX) I ECRRX'=ECDFN D  Q
"RTN","ECEFPAT",182,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Patient"
"RTN","ECEFPAT",183,0)
 D CHK^DIE(721,2,,ECDT,.ECRRX) I ECRRX'=ECDT D  Q
"RTN","ECEFPAT",184,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Procedure Date"
"RTN","ECEFPAT",185,0)
 D CHK^DIE(721,3,,"`"_ECL,.ECRRX) I ECRRX'=ECL D  Q
"RTN","ECEFPAT",186,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Location"
"RTN","ECEFPAT",187,0)
 D CHK^DIE(721,6,,"`"_ECD,.ECRRX) I ECRRX'=ECD D  Q
"RTN","ECEFPAT",188,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid DSS Unit"
"RTN","ECEFPAT",189,0)
 D CHK^DIE(721,7,,"`"_ECC,.ECRRX) I ECRRX'=ECC D  Q
"RTN","ECEFPAT",190,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Category"
"RTN","ECEFPAT",191,0)
 D  I ECERR Q
"RTN","ECEFPAT",192,0)
 .I ECP["ICPT" S ECRRX=$$CPT^ICPTCOD(+ECP,ECDT) I +ECRRX>0,$P(ECRRX,U,7) Q
"RTN","ECEFPAT",193,0)
 .I ECP["EC",$D(^EC(725,+ECP,0)) Q
"RTN","ECEFPAT",194,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Procedure"
"RTN","ECEFPAT",195,0)
 D CHK^DIE(721,11,,"`"_ECMN,.ECRRX) I ECRRX'=ECMN D  Q
"RTN","ECEFPAT",196,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Ordering Section"
"RTN","ECEFPAT",197,0)
 D CHK^DIE(721,20,,"`"_ECDX,.ECRRX) I ECRRX'=ECDX D  Q
"RTN","ECEFPAT",198,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Primary Diagnosis"
"RTN","ECEFPAT",199,0)
 I $G(EC4)'="" D CHK^DIE(721,26,,"`"_EC4,.ECRRX) I ECRRX'=EC4 D  Q
"RTN","ECEFPAT",200,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Associated Clinic"
"RTN","ECEFPAT",201,0)
 Q
"RTN","ECEFPAT",202,0)
 ;
"RTN","ECEFPAT",203,0)
CVTREAS ;119 Section added to convert procedure reason IEN in 720.4 to EC Code Screen/Procedure reason link in file 720.5.
"RTN","ECEFPAT",204,0)
 N SCREEN,SCREENID,I
"RTN","ECEFPAT",205,0)
 S SCREEN=ECL_"-"_ECD_"-"_+$G(ECC,0)_"-"_ECP ;creates event code screen
"RTN","ECEFPAT",206,0)
 S SCREENID=$O(^ECJ("B",SCREEN,0)) I '+SCREENID S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Event Code Screen" Q  ;event code screen doesn't exist
"RTN","ECEFPAT",207,0)
 F I="ECPXREAS","ECPXREA2","ECPXREA3" I $G(@I) S @I=$$GETVAL(SCREENID,@I)
"RTN","ECEFPAT",208,0)
 Q
"RTN","ECEFPAT",209,0)
GETVAL(SCREENO,REASNO) ;119 section added to get link from 720.5 or add it if necessary
"RTN","ECEFPAT",210,0)
 N LINK,DIC,X,Y
"RTN","ECEFPAT",211,0)
 S LINK=$O(^ECL("AD",SCREENO,REASNO,0))
"RTN","ECEFPAT",212,0)
 I $G(LINK) Q LINK  ;Entry in 720.5 exists, return IEN
"RTN","ECEFPAT",213,0)
 S DIC="^ECL(",DIC(0)="",X=REASNO,DIC("DR")=".02////"_SCREENO
"RTN","ECEFPAT",214,0)
 K DD,DO D FILE^DICN
"RTN","ECEFPAT",215,0)
 S LINK=$S(+Y:+Y,1:"") ;New IEN or null if not added
"RTN","ECEFPAT",216,0)
 Q LINK
"RTN","ECINCPT")
0^1^B4337598^B3068405
"RTN","ECINCPT",1,0)
ECINCPT ;ALB/JAM-Procedure Codes with Inactive CPTs Report ;10/12/12  11:18
"RTN","ECINCPT",2,0)
 ;;2.0;EVENT CAPTURE;**72,119**;8 May 96;Build 12
"RTN","ECINCPT",3,0)
 ; Routine to report National/Local Procedure Codes with Inactive CPT 
"RTN","ECINCPT",4,0)
 ; Codes Report
"RTN","ECINCPT",5,0)
EN ;entry point
"RTN","ECINCPT",6,0)
 N ZTIO,ZTDESC,ZTRTN,ECPG,ECOUT
"RTN","ECINCPT",7,0)
 S ZTIO=ION
"RTN","ECINCPT",8,0)
 S ZTDESC="NATIONAL/LOCAL PROCEDURE CODES WITH INACTIVE CPT"
"RTN","ECINCPT",9,0)
 S ZTRTN="START^ECINCPT"
"RTN","ECINCPT",10,0)
 D EN^XUTMDEVQ(ZTRTN,ZTDESC,.ZTSAVE)
"RTN","ECINCPT",11,0)
 I POP Q
"RTN","ECINCPT",12,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECINCPT",13,0)
 D HOME^%ZIS
"RTN","ECINCPT",14,0)
 Q
"RTN","ECINCPT",15,0)
START ; Routine execution
"RTN","ECINCPT",16,0)
 N ECI,EC0,ECPT,ECN,ECD,ECPI,ECDT,ECPG,ECOUT,ECRDT,CNT ;119
"RTN","ECINCPT",17,0)
 S (ECI,ECOUT)=0,ECPG=1,CNT=1 ;119
"RTN","ECINCPT",18,0)
 S %H=$H S ECRDT=$$HTE^XLFDT(%H,1)
"RTN","ECINCPT",19,0)
 I $G(ECPTYP)="E" S ^TMP($J,"ECRPT",CNT)="NATIONAL NUMBER^NATIONAL NAME^CPT CODE^INACTIVE DATE" ;119
"RTN","ECINCPT",20,0)
 I $G(ECPTYP)'="E" D HEADER ;119
"RTN","ECINCPT",21,0)
 F  S ECI=$O(^EC(725,ECI)) Q:'ECI  D  I ECOUT Q
"RTN","ECINCPT",22,0)
 .S EC0=$G(^EC(725,ECI,0)),ECPT=$P(EC0,"^",5)
"RTN","ECINCPT",23,0)
 .Q:EC0=""  Q:ECPT=""
"RTN","ECINCPT",24,0)
 .S ECN=$P(EC0,"^",2),ECD=$P(EC0,"^"),ECPI=$$CPT^ICPTCOD(ECPT)
"RTN","ECINCPT",25,0)
 .Q:+ECPI<1  Q:$P(ECPI,"^",7)
"RTN","ECINCPT",26,0)
 .S ECDT=$TR($$FMTE^XLFDT($P(ECPI,"^",8),"2F")," ","0")
"RTN","ECINCPT",27,0)
 .I $G(ECPTYP)'="E" I ($Y+3)>IOSL D PAGE Q:ECOUT  D HEADER ;119
"RTN","ECINCPT",28,0)
 .I $G(ECPTYP)="E" S CNT=CNT+1,^TMP($J,"ECRPT",CNT)=ECN_U_ECD_U_$P(ECPI,U,2)_U_ECDT Q  ;119
"RTN","ECINCPT",29,0)
 .W !,ECN,?10,ECD,?60,$P(ECPI,"^",2),?68,ECDT
"RTN","ECINCPT",30,0)
 I $G(ECPTYP)'="E" I 'ECOUT D PAGE ;119
"RTN","ECINCPT",31,0)
 Q
"RTN","ECINCPT",32,0)
HEADER ;
"RTN","ECINCPT",33,0)
 W:$E(IOST,1,2)="C-"!(ECPG>1) @IOF
"RTN","ECINCPT",34,0)
 W !!,"NATIONAL/LOCAL PROCEDURE CODES WITH INACTIVE CPT CODES"
"RTN","ECINCPT",35,0)
 W ?68,"Page: ",ECPG,!?25,"Run Date : ",ECRDT,!
"RTN","ECINCPT",36,0)
 W "National",?60,"CPT",?68,"Inactive",!
"RTN","ECINCPT",37,0)
 W "Number",?10,"National Name",?60,"Code",?68,"Date",!
"RTN","ECINCPT",38,0)
 S ECPG=ECPG+1
"RTN","ECINCPT",39,0)
 F I=1:1:80 W "-"
"RTN","ECINCPT",40,0)
 Q
"RTN","ECINCPT",41,0)
PAGE ;
"RTN","ECINCPT",42,0)
 N SS,JJ
"RTN","ECINCPT",43,0)
 I $D(ECPG),$E(IOST,1,2)="C-" D
"RTN","ECINCPT",44,0)
 . S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECINCPT",45,0)
 . S DIR(0)="E" W ! D ^DIR K DIR I 'Y S ECOUT=1
"RTN","ECINCPT",46,0)
 Q
"RTN","ECKILL")
0^18^B13025684^B12351832
"RTN","ECKILL",1,0)
ECKILL ;BIR/MAM,RHK,JPW-Kill Local Variables ;12/11/12  10:34
"RTN","ECKILL",2,0)
 ;;2.0;EVENT CAPTURE;**4,5,10,17,18,23,42,54,65,76,100,119**;8 May 96;Build 12
"RTN","ECKILL",3,0)
 K %,%DT,%ZIS,A,AA,B,CNT,CNT1,COUNT,D,D0,D1,DA,DATA,DATA0,DATE,DFN,DHD,DIC,DIE,DINUM,DIOEND,DIR,DIROUT,DIRUT,DISYS,DTOUT,DUOUT,DLAYGO,BY,L,DIS ;119
"RTN","ECKILL",4,0)
 K EC,EC1,EC2,EC23,EC7,ECA,ECAC,ECACA,ECACC,ECAD,ECADD,ECALL,ECANE,ECAT,ECB,ECBDH,ECBSZ,ECC,ECC1,ECCAC,ECCAT,ECCC
"RTN","ECKILL",5,0)
 K ECCD,ECCH,ECCLC,ECCN,ECCS,ECCSC,ECCSN,ECD,ECD0,ECDA,ECDAT,ECDATA,ECDATA1,ECDATE,ECDFN,ECDI,ECDIA,ECDICA,ECDIV,ECDN,ECDOC,ECDR,ECDRG,ECDS1,ECDT,ECDT1,ECDU,ECDUZ
"RTN","ECKILL",6,0)
 K ECEC,ECED,ECED1,ECEDH,ECEDN,ECEXT,ECF,ECFCP,ECFD,ECFILE,ECFN,ECGRP,ECH
"RTN","ECKILL",7,0)
 K ECHD,ECHEAD,ECHOICE,ECI,ECID,ECINC,ECINST,ECINZ,ECIOP,ECITEM,ECJLP,ECL,ECL1,ECL2,ECL3,ECL4,ECL5,ECL6,ECLALL,ECLDT,ECLDT1,ECLL,ECLN,ECLOC,ECLOC1,ECLR,ECLRO
"RTN","ECKILL",8,0)
 K ECM,ECMAX,ECMESG,ECMESS,ECMG,ECMIN,ECMN,ECMNTH,ECMOD,ECMODS,ECMODF,ECMORE,ECMS,ECMSG,ECMSN,ECMW,ECN,ECNEW,ECNO,ECNODE,ECNR,ECNT
"RTN","ECKILL",9,0)
 K PA,PR,V,ECPCNT,ECELPT,ECPNAME,ECPRSL,VOL,ECPROCED,ECDTM,ECDSSU,ECDXO,ECYCLN
"RTN","ECKILL",10,0)
 ;
"RTN","ECKILL",11,0)
 ;- Kill ordering section default variables (ECODFN,ECOM)
"RTN","ECKILL",12,0)
 K ECO,ECO0,ECO1,ECO2,ECOB,ECOD0,ECODE,ECODE0,ECODFN,ECOLD,ECOM,ECON,ECOST,ECOUT
"RTN","ECKILL",13,0)
 ;
"RTN","ECKILL",14,0)
 ;- Kill procedure reason variables (ECPRPTR,ECPRSN,ECREAS)
"RTN","ECKILL",15,0)
 K ECP,ECP1,ECP2,ECPACK,ECPAD,ECPAT,ECPG,ECPIECE,ECPN,ECPO,ECPR,ECPRC,ECPRO,ECPROC,ECPROF,ECPROS,ECPRPTR,ECPRSN,ECPS,ECPT,ECPTF
"RTN","ECKILL",16,0)
 K ECQ,ECQTY,ECRAD0,ECRD,ECREAS,ECREDO,ECREPL,ECRFL,ECRL,ECRN,ECRPL1,ECRTN,ECRX,ECS,ECSA,ECSD,ECSD1,ECSDN,ECSEC,ECSECS,ECSN,ECSSN,ECST,ECSTAT,ECSU
"RTN","ECKILL",17,0)
 K ECT,ECTEMP,ECTEST,ECTR,ECTREAT,ECTRN,ECTWO,ECU,ECU2,ECU2A,ECU3,ECU3A,ECUCNT,ECUN,ECUN1,ECUN2,ECUN3,ECUNIT
"RTN","ECKILL",18,0)
 K ECUNM,ECURG,ECUSER,ECUSR,ECUT,ECUT2,ECUT3,ECUTN,ECUTN2,ECUTN3,ECV,ECWORD,ECX,ECXID,ECXMDA,ECXMDT,ECY,ECYN,ECYNZ,ECRY
"RTN","ECKILL",19,0)
 K FAC,FLDS,FR,I,IOP,J,JJ,K,LINE,LIST,LOC,LOS,MM,MSG,MSG1,MSG2,NODE,NODE1,OK,P1,P11,P2,P3,POP,Q,SC,SDATE,SSN,STC,SU,TEST,TIME,TO,TOTD,UNIT,USER,USRCNT,W,X,XMDUZ
"RTN","ECKILL",20,0)
 K X,XMDUZ,XMSUB,XMTEST,XMTEXT,XMY,Y,ECCNTCHK,ECP1N,ECPI,RK,ECPSYN,C,DI,DQ,DR,ECLINE,ECPIEN,ECSYN,MINCNT,MAXCNT,ECFLG,ECZ,ECPATN,ECFILN,ECPC,ECPF,ECPP,ECR,ECSUB,ECV1,ECVOL,ECDIR,EZCNT,ECERR
"RTN","ECKILL",21,0)
 K ECCODE,ECDDT,ECNATN,ECDONE,NATN,ECPSY,ECRDT,ECPG1,ECNOPE,SYN,ECOLD,ECOLDN,RK,ECOS,ECOSN,PRO,SS,ECPA,ANS
"RTN","ECKILL",22,0)
PCE K ECAO,ECSC,ECZEC,ECIR,ECINP,ECID,EC4,EC4N,ECDX,ECDXN,ECVST,ECVV,ECZZ,LOCP,LOCPX,LOCX,PN,PNP,PNODE,ECMST,ECDXS,ECHNC,ECCV,ECSHAD,ECDXSN ;119
"RTN","ECKILL",23,0)
 K ECPCL,ECPCID,ECPCRD,ECPKG,ECCPT,EC725,ECONE,ECNODE2,ECCLFLDS,ECELANS,ECELCOD,ECELDSP,ECELIG,ECIOFLG,ECNEWDT,ECPTSTAT,VAEL,ECPTCD
"RTN","ECKILL",24,0)
 K ECP10,ECP11,ECP15,ECP17,ECP19,ECP2,ECP20,ECP3,ECP4,ECPCE,ECPP1,ECPP1A,ECPP2,ECPP3,ECPP4,ECPP5,ECPP6,ECPP9
"RTN","ECKILL",25,0)
 K:$G(ECPTYP)'="E" ^TMP($J) ;119 Only kill the tmp global when not exporting data
"RTN","ECKILL",26,0)
 Q
"RTN","ECMFECS")
0^16^B43787476^B43702074
"RTN","ECMFECS",1,0)
ECMFECS ;ALB/JAM - Event Capture Management - Event Code Screen Filer ;11/6/12  09:56
"RTN","ECMFECS",2,0)
 ;;2.0;EVENT CAPTURE;**25,33,47,55,65,95,100,119**;8 May 96;Build 12
"RTN","ECMFECS",3,0)
 ;
"RTN","ECMFECS",4,0)
 I $G(ECL0)'="" D MULTLOC Q  ;multiple location filing
"RTN","ECMFECS",5,0)
 ;
"RTN","ECMFECS",6,0)
FILE ;Used by the RPC broker to file EC Code Screens in file #720.3
"RTN","ECMFECS",7,0)
 ;     Variables passed in
"RTN","ECMFECS",8,0)
 ;       ECIEN     - IEN of #720.3, if editing
"RTN","ECMFECS",9,0)
 ;       ECL       - Location
"RTN","ECMFECS",10,0)
 ;       ECD       - DSS Unit
"RTN","ECMFECS",11,0)
 ;       ECC       - Category
"RTN","ECMFECS",12,0)
 ;       ECP       - Procedure
"RTN","ECMFECS",13,0)
 ;       ECST      - Event code screen status
"RTN","ECMFECS",14,0)
 ;       ECSYN     - Synonym
"RTN","ECMFECS",15,0)
 ;       ECVOL     - Volume
"RTN","ECMFECS",16,0)
 ;       ECAC      - Associated Clinic
"RTN","ECMFECS",17,0)
 ;       ECREAS    - Reason indicator
"RTN","ECMFECS",18,0)
 ;       ECRES0..n - array of reasons
"RTN","ECMFECS",19,0)
 ;
"RTN","ECMFECS",20,0)
 ;     Variable return
"RTN","ECMFECS",21,0)
 ;       ^TMP($J,"ECMSG",n)=Success or failure to file in #720.3^Message
"RTN","ECMFECS",22,0)
 ;
"RTN","ECMFECS",23,0)
 N ECCH,ECERR,ECX,ECY,ECFLG,ECR,ECI,X,Y,DIK,DIE
"RTN","ECMFECS",24,0)
 N ECLOC  ;protect from XREF reuse & kills
"RTN","ECMFECS",25,0)
 N ECRES  ;prevent ECREAS overwrite
"RTN","ECMFECS",26,0)
 S ECERR=0 D CHKDT I ECERR Q
"RTN","ECMFECS",27,0)
 D VALDATA I ECERR Q
"RTN","ECMFECS",28,0)
 I ECIEN'="" S ECFLG=0,ECX=$G(^ECJ(ECIEN,0)),ECY=$P(ECX,U) D  I ECERR Q
"RTN","ECMFECS",29,0)
 .I ECX="" D  Q
"RTN","ECMFECS",30,0)
 ..S ECERR=1,^TMP($J,"ECMSG",1)="0^Event Code Screen Not on File" Q
"RTN","ECMFECS",31,0)
 .S ECL=$P(ECY,"-"),ECD=$P(ECY,"-",2),ECC=$P(ECY,"-",3),ECP=$P(ECY,"-",4)
"RTN","ECMFECS",32,0)
 .I ECST="A",$P(ECX,U,2)'="" S DA=ECIEN,DIE="^ECJ(",DR="1///@" D ^DIE Q
"RTN","ECMFECS",33,0)
 .I ECST="I",$P(ECX,U,2)="" S $P(^ECJ(ECIEN,0),U,2)=DT
"RTN","ECMFECS",34,0)
 S ECC=$G(ECC,0),ECCH=ECL_"-"_ECD_"-"_ECC_"-"_ECP
"RTN","ECMFECS",35,0)
 I '$P($G(^ECD(ECD,0)),U,11),ECC D  Q
"RTN","ECMFECS",36,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^DSS Unit/Category inconsistency" Q
"RTN","ECMFECS",37,0)
 I ECIEN="" D  I ECERR Q
"RTN","ECMFECS",38,0)
 .I $D(^ECJ("B",ECCH)) D  Q
"RTN","ECMFECS",39,0)
 ..S ECERR=1,^TMP($J,"ECMSG",1)="0^EC Screen Exist" Q
"RTN","ECMFECS",40,0)
 .D NEWIEN
"RTN","ECMFECS",41,0)
 S DA=ECIEN,DIK="^ECJ(",ECRES=$S(ECREAS="Y":1,1:0) D IX^DIK
"RTN","ECMFECS",42,0)
 S ^ECJ("AP",ECL,ECD,ECC,ECP,ECIEN)="",^ECJ("APP",ECL,ECD,ECP,ECIEN)=""
"RTN","ECMFECS",43,0)
 S $P(^ECJ(ECIEN,"PRO"),U)=ECP
"RTN","ECMFECS",44,0)
 S DR="53////"_$S($G(ECSYN)'="":ECSYN,1:"@")_";54////"_$G(ECVOL,1)
"RTN","ECMFECS",45,0)
 S DR=DR_";55////"_$S($G(ECAC)'="":ECAC,1:"@")_";56////"_ECRES,DIE="^ECJ(",DA=ECIEN
"RTN","ECMFECS",46,0)
 D ^DIE K DA,DR,DIE
"RTN","ECMFECS",47,0)
 I $D(DTOUT) D RECDEL S ^TMP($J,"ECMSG",1)="0^Record not Filed" Q
"RTN","ECMFECS",48,0)
 I ECRES D
"RTN","ECMFECS",49,0)
 .N ECLARR,ECLIEN
"RTN","ECMFECS",50,0)
 .K DIC,DA,DR,ECX S DIC="^ECL(",DIC(0)="L",DLAYGO=720.5,ECR=0
"RTN","ECMFECS",51,0)
 .F ECI=0:1 S ECX="ECRES"_ECI Q:'$D(@ECX)  S ECR=(@ECX) D
"RTN","ECMFECS",52,0)
 ..Q:ECR=""  I '$D(^ECR(ECR,0)) Q
"RTN","ECMFECS",53,0)
 ..S ECLARR(ECR)=""  ; control of valid passed in Procedure Reason Codes
"RTN","ECMFECS",54,0)
 ..I '$D(^ECL("AD",ECIEN,ECR)) S X=ECR,DIC("DR")=".02////"_ECIEN
"RTN","ECMFECS",55,0)
 ..K DD,DO,DLAYGO D FILE^DICN
"RTN","ECMFECS",56,0)
 .;kill nodes no Procedure Reason Code passed in but "AD" Xref exists 
"RTN","ECMFECS",57,0)
 .K DIK S DIK="^ECL(",DA=""
"RTN","ECMFECS",58,0)
 .S ECR=0 F  S ECR=$O(^ECL("AD",ECIEN,ECR)) Q:ECR=""  D
"RTN","ECMFECS",59,0)
 ..I $D(ECLARR(ECR)) Q  ;procedure reason code passed in - don't remove
"RTN","ECMFECS",60,0)
 ..S ECLIEN=0 F  S ECLIEN=$O(^ECL("AD",ECIEN,ECR,ECLIEN)) Q:ECLIEN=""  S DA=ECLIEN D ^DIK
"RTN","ECMFECS",61,0)
 S ^TMP($J,"ECMSG",1)="1^Record Filed"_U_ECIEN
"RTN","ECMFECS",62,0)
 K DIC,DA,DR,ECX,DIK
"RTN","ECMFECS",63,0)
 Q
"RTN","ECMFECS",64,0)
 ;
"RTN","ECMFECS",65,0)
VALDATA ;validate data
"RTN","ECMFECS",66,0)
 N ECRRX,ECRES
"RTN","ECMFECS",67,0)
 S DIC="^DIC(4,",DIC(0)="NX",X=ECL D ^DIC I Y=-1 D  Q
"RTN","ECMFECS",68,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Location"
"RTN","ECMFECS",69,0)
 S DIC="^ECD(",DIC(0)="NX",X=ECD D ^DIC I Y=-1 D  Q
"RTN","ECMFECS",70,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid DSS Unit"
"RTN","ECMFECS",71,0)
 I ECC S DIC="^EC(726,",DIC(0)="NX",X=ECC D ^DIC I Y=-1 D  Q
"RTN","ECMFECS",72,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Category"
"RTN","ECMFECS",73,0)
 I ECP'="" D  I ECERR Q
"RTN","ECMFECS",74,0)
 .; ATG-1003-32110 : by VMP
"RTN","ECMFECS",75,0)
 .I ECP["ICPT" S ECRRX=$$CPT^ICPTCOD(+ECP) I +ECRRX>0 Q:$G(ECIEN)  I $P(ECRRX,U,7) Q
"RTN","ECMFECS",76,0)
 .I ECP["EC",$D(^EC(725,+ECP,0)) Q
"RTN","ECMFECS",77,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Procedure"
"RTN","ECMFECS",78,0)
 I $G(ECAC)'="" D  I ECERR Q
"RTN","ECMFECS",79,0)
 .D CHK^DIE(720.3,55,"E","`"_ECAC,.ECRRX) I ECRRX'=ECAC D  Q
"RTN","ECMFECS",80,0)
 ..S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Associated Clinic"
"RTN","ECMFECS",81,0)
 .S ECRES=$$CLNCK^SDUTL2(ECAC,0) I 'ECRES D  S ECERR=1
"RTN","ECMFECS",82,0)
 ..S ^TMP($J,"ECMSG",1)=ECRES_" Clinic MUST be corrected before filing."
"RTN","ECMFECS",83,0)
 I $G(ECSYN)'="" D CHK^DIE(720.3,53,"E",ECSYN,.ECRRX) I ECRRX'=ECSYN D  Q
"RTN","ECMFECS",84,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Synonym"
"RTN","ECMFECS",85,0)
 I "^N^Y^"'[U_ECREAS_U D  Q
"RTN","ECMFECS",86,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Reason Response"
"RTN","ECMFECS",87,0)
 Q
"RTN","ECMFECS",88,0)
RECDEL ; Delete record
"RTN","ECMFECS",89,0)
 I ECFLG S DA=ECIEN,DIK="^ECJ(" D ^DIK K DA,DIK
"RTN","ECMFECS",90,0)
 Q
"RTN","ECMFECS",91,0)
 ;
"RTN","ECMFECS",92,0)
NEWIEN ;Create new IEN in file #720.3
"RTN","ECMFECS",93,0)
 N DIC,DA,DD,DO
"RTN","ECMFECS",94,0)
 L +^ECJ(0):10 I '$T S ECERR=1,^TMP($J,"ECMSG",1)="0^Another user is editing this file." Q
"RTN","ECMFECS",95,0)
 S X=ECCH,DIC="^ECJ(",DIC(0)="L",DLAYGO=720.3 D FILE^DICN
"RTN","ECMFECS",96,0)
 L -^ECJ(0)
"RTN","ECMFECS",97,0)
 S ECIEN=+Y,$P(^ECJ(ECIEN,0),U,3)=DT,$P(^ECJ(ECIEN,"PRO"),U)=ECP
"RTN","ECMFECS",98,0)
 I ECST="I" S $P(^ECJ(ECIEN,0),U,2)=DT
"RTN","ECMFECS",99,0)
 Q
"RTN","ECMFECS",100,0)
CHKDT ;Required Data Check
"RTN","ECMFECS",101,0)
 N I,C
"RTN","ECMFECS",102,0)
 S C=1
"RTN","ECMFECS",103,0)
 F I="ECL","ECD","ECC","ECP","ECREAS" D
"RTN","ECMFECS",104,0)
 .I $G(@I)="" S ^TMP($J,"ECMSG",C)="0^Key data missing "_I,C=C+1,ECERR=1
"RTN","ECMFECS",105,0)
 Q
"RTN","ECMFECS",106,0)
REASON ;Used by the RPC broker to file EC Reasons in file #720.4
"RTN","ECMFECS",107,0)
 ;     Variables passed in
"RTN","ECMFECS",108,0)
 ;       ECIEN     - IEN of #720.4, if editing
"RTN","ECMFECS",109,0)
 ;       ECRES     - Reason
"RTN","ECMFECS",110,0)
 ;       ECST      - Reason status
"RTN","ECMFECS",111,0)
 ;
"RTN","ECMFECS",112,0)
 ;     Variable return
"RTN","ECMFECS",113,0)
 ;       ^TMP($J,"ECMSG",n)=Success or failure to file in #720.4^Message
"RTN","ECMFECS",114,0)
 ;
"RTN","ECMFECS",115,0)
 N ECOST,ECERR,ECFLG,X,Y,DIC,DIE
"RTN","ECMFECS",116,0)
 S ECERR=0 I $G(ECRES)="" D  I ECERR Q
"RTN","ECMFECS",117,0)
 .S ^TMP($J,"ECMSG",1)="0^Key data missing - Reason",ECERR=1
"RTN","ECMFECS",118,0)
 D CHK^DIE(720.4,.01,,ECRES,.ECRRX) I ECRRX="^" D  Q
"RTN","ECMFECS",119,0)
 .S ^TMP($J,"ECMSG",1)="0^Invalid Reason",ECERR=1
"RTN","ECMFECS",120,0)
 S ECST=$G(ECST,"A")
"RTN","ECMFECS",121,0)
 I "^I^A^"'[U_ECST_U S ^TMP($J,"ECMSG",1)="0^Invalid Reason Status" Q
"RTN","ECMFECS",122,0)
 S ECST=$S(ECST="I":0,1:1),ECIEN=$G(ECIEN),ECFLG=1
"RTN","ECMFECS",123,0)
 I ECIEN'="" S ECFLG=0 I $G(^ECR(ECIEN,0))="" D  I ECERR K ECST Q
"RTN","ECMFECS",124,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Reason Not on File" Q
"RTN","ECMFECS",125,0)
 I ECIEN="" D  I ECERR K ECST Q
"RTN","ECMFECS",126,0)
 .I $D(^ECR("B",ECRES)) S ECERR=1,^TMP($J,"ECMSG",1)="0^Reason Exist" Q
"RTN","ECMFECS",127,0)
 .K DIE,DR,DA
"RTN","ECMFECS",128,0)
 .L +^ECR(0):10 I '$T S ECERR=1,^TMP($J,"ECMSG",1)="0^Another user is editing this file." Q
"RTN","ECMFECS",129,0)
 .S X=ECRES,DIC="^ECR(",DIC(0)="L",DLAYGO=720.4 D FILE^DICN
"RTN","ECMFECS",130,0)
 .L -^ECR(0)
"RTN","ECMFECS",131,0)
 .S ECIEN=+Y
"RTN","ECMFECS",132,0)
 S ECOST=$P($G(^ECR(ECIEN,0)),U,2)
"RTN","ECMFECS",133,0)
 I ECST'=ECOST D
"RTN","ECMFECS",134,0)
 .S DIE="^ECR(",DA=ECIEN,DR=".02////"_ECST D ^DIE ;119
"RTN","ECMFECS",135,0)
 S ^TMP($J,"ECMSG",1)="1^Reason Filed"_U_ECIEN K ECST
"RTN","ECMFECS",136,0)
 Q
"RTN","ECMFECS",137,0)
 ;
"RTN","ECMFECS",138,0)
MULTLOC ;Entry point for multiple locations
"RTN","ECMFECS",139,0)
 ;  Input:
"RTN","ECMFECS",140,0)
 ;    ECL0..n - locations IEN
"RTN","ECMFECS",141,0)
 ;    ECIEN - IEN for edits; "" for new records
"RTN","ECMFECS",142,0)
 ;    See FILE tag for other variables passed in
"RTN","ECMFECS",143,0)
 ;
"RTN","ECMFECS",144,0)
 ;  Output:
"RTN","ECMFECS",145,0)
 ;    ^TMP($J,"ECMSG",n)=Success or failure
"RTN","ECMFECS",146,0)
 ;
"RTN","ECMFECS",147,0)
 N ECERR  ;error flag
"RTN","ECMFECS",148,0)
 N ECI    ;generic index
"RTN","ECMFECS",149,0)
 N ECL    ;location IEN
"RTN","ECMFECS",150,0)
 N ECLN   ;location name
"RTN","ECMFECS",151,0)
 N ECLOC  ;array of locations
"RTN","ECMFECS",152,0)
 N ECX    ;variable name (ex. ECL1)
"RTN","ECMFECS",153,0)
 ;
"RTN","ECMFECS",154,0)
 ;short circuit when IEN passed w/multiple locations
"RTN","ECMFECS",155,0)
 I (+$G(ECIEN)>0)&(ECL0="ALL"!($D(ECL1))) D  Q
"RTN","ECMFECS",156,0)
 . S ^TMP($J,"ECMSG",1)=0_U_"Multiple location edits not allowed"
"RTN","ECMFECS",157,0)
 ;
"RTN","ECMFECS",158,0)
 I ECL0="ALL" D
"RTN","ECMFECS",159,0)
 . D LOCARRY^ECRUTL  ;returns all sites in ECLOC(n)=IEN^name format
"RTN","ECMFECS",160,0)
 E  D
"RTN","ECMFECS",161,0)
 . F ECI=0:1 S ECX="ECL"_ECI Q:'$D(@ECX)  D
"RTN","ECMFECS",162,0)
 . . S ECLN=$$GET1^DIQ(4,@ECX_",",.01,"")
"RTN","ECMFECS",163,0)
 . . S ECLOC(ECI+1)=@ECX_U_ECLN
"RTN","ECMFECS",164,0)
 ;
"RTN","ECMFECS",165,0)
 S ECI=0
"RTN","ECMFECS",166,0)
 F  S ECI=$O(ECLOC(ECI)) Q:'ECI  D
"RTN","ECMFECS",167,0)
 . I ECL0="ALL"!($D(ECL1)) N ECIEN S ECIEN=""  ;reset IEN for multiple
"RTN","ECMFECS",168,0)
 . S ECL=+ECLOC(ECI)
"RTN","ECMFECS",169,0)
 . D FILE^ECMFECS
"RTN","ECMFECS",170,0)
 . I $P(^TMP($J,"ECMSG",1),U)=0 S ECERR(ECI)=ECLOC(ECI)_U_$P(^TMP($J,"ECMSG",1),U,2)
"RTN","ECMFECS",171,0)
 ;
"RTN","ECMFECS",172,0)
 ;process results
"RTN","ECMFECS",173,0)
 I '$D(ECERR) S ^TMP($J,"ECMSG",1)=1_U_"Records filed for all locations"
"RTN","ECMFECS",174,0)
 E  D PROCERR(.ECERR)
"RTN","ECMFECS",175,0)
 Q
"RTN","ECMFECS",176,0)
 ;
"RTN","ECMFECS",177,0)
PROCERR(ECERR) ;process multiple location errors
"RTN","ECMFECS",178,0)
 ;  Input:
"RTN","ECMFECS",179,0)
 ;    ECERR - array of location errors
"RTN","ECMFECS",180,0)
 ;
"RTN","ECMFECS",181,0)
 ;  Output:
"RTN","ECMFECS",182,0)
 ;    ^TMP($J,"ECMSG" - RPC results global array
"RTN","ECMFECS",183,0)
 ;    Format:  ^TMP($J,"ECMSG",1)="0^One or more locations did not file"
"RTN","ECMFECS",184,0)
 ;             ^TMP($J,"ECMSG",n)=Location_IEN^Location_name^Error_text
"RTN","ECMFECS",185,0)
 ;
"RTN","ECMFECS",186,0)
 Q:'$D(ECERR)
"RTN","ECMFECS",187,0)
 ;
"RTN","ECMFECS",188,0)
 N ECCNT,ECI
"RTN","ECMFECS",189,0)
 S ECCNT=1
"RTN","ECMFECS",190,0)
 S ^TMP($J,"ECMSG",ECCNT)=0_U_"One or more locations did not file"
"RTN","ECMFECS",191,0)
 S ECI=0
"RTN","ECMFECS",192,0)
 F  S ECI=$O(ECERR(ECI)) Q:'ECI  S ECCNT=ECCNT+1 D
"RTN","ECMFECS",193,0)
 . S ^TMP($J,"ECMSG",ECCNT)=$P(ECERR(ECI),U)_U_$P(ECERR(ECI),U,2)_U_$P(ECERR(ECI),U,3)
"RTN","ECMFECS",194,0)
 Q
"RTN","ECNTPCE")
0^13^B28957760^B20426279
"RTN","ECNTPCE",1,0)
ECNTPCE ;ALB/JAM-Event Capture Records failing transmission to PCE;14 Jan 04 ;11/7/12  11:27
"RTN","ECNTPCE",2,0)
 ;;2.0;EVENT CAPTURE;**61,72,119**;8 May 96;Build 12
"RTN","ECNTPCE",3,0)
EN ; entry point
"RTN","ECNTPCE",4,0)
 K %DT S %DT="AEX",%DT("A")="Start with Date:  " D ^%DT I Y<0 G END
"RTN","ECNTPCE",5,0)
 S ECSD=Y,%DT("A")="End with Date:  " D ^%DT G:Y<0 END S ECED=Y
"RTN","ECNTPCE",6,0)
 I ECED<ECSD W !,"End date must be after start date",! G EN
"RTN","ECNTPCE",7,0)
 S ECDATE=$$FMTE^XLFDT(ECSD)_U_$$FMTE^XLFDT(ECED)
"RTN","ECNTPCE",8,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECNTPCE",9,0)
 K IOP,%ZIS,POP,IO("Q") S %ZIS("A")="Select Device: ",%ZIS="QM"
"RTN","ECNTPCE",10,0)
 D ^%ZIS G:POP END
"RTN","ECNTPCE",11,0)
 I $D(IO("Q")) K IO("Q") D  G END
"RTN","ECNTPCE",12,0)
 .S (ZTSAVE("ECDFN"),ZTSAVE("ECDATE"),ZTSAVE("ECED"),ZTSAVE("ECSD"))=""
"RTN","ECNTPCE",13,0)
 .S ZTDESC="ECS RECORDS FAILING TRANSMISSION TO PCE REPORT",ZTRTN="START^ECNTPCE"
"RTN","ECNTPCE",14,0)
 .S ZTIO=ION D ^%ZTLOAD,HOME^%ZIS
"RTN","ECNTPCE",15,0)
 W !,?5,"Please be patient, this may take a few moments..."
"RTN","ECNTPCE",16,0)
 ;
"RTN","ECNTPCE",17,0)
START ; entry when queued
"RTN","ECNTPCE",18,0)
 N ECOUT,X,Y,DIR,LINE,ECPG,ECRDT,%H,CNT ;119
"RTN","ECNTPCE",19,0)
 S ECOUT=0,ECPG=1
"RTN","ECNTPCE",20,0)
 S %H=$H D YX^%DTC S ECRDT=Y
"RTN","ECNTPCE",21,0)
 U IO
"RTN","ECNTPCE",22,0)
 I $G(ECPTYP)="E" S CNT=1,^TMP($J,"ECRPT",CNT)="DATE/TIME^LOCATION^DSS UNIT^CATEGORY^PATIENT^SSN^PROCEDURE CODE^PROCEDURE NAME^PROV 1^PROV 2^PROV 3^PROV 4^PROV 5^PROV 6^PROV 7^REASON 1^REASON 2^REASON 3" ;119
"RTN","ECNTPCE",23,0)
 I $G(ECPTYP)="E" D GET,^ECKILL Q  ;119 get data to export and stop processing.
"RTN","ECNTPCE",24,0)
 D GET
"RTN","ECNTPCE",25,0)
 D END
"RTN","ECNTPCE",26,0)
 Q
"RTN","ECNTPCE",27,0)
GET ; start processing or records
"RTN","ECNTPCE",28,0)
 N DATE,ECL,ECNT,ECFN,ECEC,ECPX,ECSTR,ECD
"RTN","ECNTPCE",29,0)
 K ^TMP("ECNTPCE",$J)
"RTN","ECNTPCE",30,0)
 S DATE=ECSD,ECNT=0
"RTN","ECNTPCE",31,0)
 F  S DATE=$O(^ECH("AC",DATE)) Q:('DATE)!(DATE>ECED)  D
"RTN","ECNTPCE",32,0)
 .S ECFN=0 F  S ECFN=$O(^ECH("AC",DATE,ECFN)) Q:'ECFN  D 
"RTN","ECNTPCE",33,0)
 ..Q:'$D(^ECH(ECFN,"R"))  S ECEC=$G(^ECH(ECFN,0)) Q:ECEC=""
"RTN","ECNTPCE",34,0)
 ..S ECL=$P(ECEC,U,4),ECD=$P(ECEC,U,7),ECPX=$P(ECEC,U,9)
"RTN","ECNTPCE",35,0)
 ..S ECDFN=$P(ECEC,U,2)
"RTN","ECNTPCE",36,0)
 ..I (ECL="")!(ECD="")!(ECPX="")!(ECDFN="") Q
"RTN","ECNTPCE",37,0)
 ..S ECSTR=ECFN_U_$P(ECEC,U,8)_U_ECPX
"RTN","ECNTPCE",38,0)
 ..S ECNT=ECNT+1,^TMP("ECNTPCE",$J,DATE,ECL,ECD,ECDFN,ECNT)=ECSTR
"RTN","ECNTPCE",39,0)
 ..K ECPRV S ECPRV=$$GETPRV^ECPRVMUT(ECFN,.ECPRV) I 'ECPRV D  K ECPRV
"RTN","ECNTPCE",40,0)
 ...M ^TMP("ECNTPCE",$J,DATE,ECL,ECD,ECDFN,ECNT,"PRV")=ECPRV
"RTN","ECNTPCE",41,0)
 I $G(ECPTYP)="E" D PRT Q  ;119
"RTN","ECNTPCE",42,0)
 D HDR
"RTN","ECNTPCE",43,0)
 I '$O(^TMP("ECNTPCE",$J,0)) D  Q
"RTN","ECNTPCE",44,0)
 .W !!,?10,"No Data found during the time selected."
"RTN","ECNTPCE",45,0)
 D PRT
"RTN","ECNTPCE",46,0)
 Q
"RTN","ECNTPCE",47,0)
 ;
"RTN","ECNTPCE",48,0)
END K ECSD,ECED
"RTN","ECNTPCE",49,0)
 I $D(ECGUI) D ^ECKILL Q
"RTN","ECNTPCE",50,0)
 W !
"RTN","ECNTPCE",51,0)
 I $E(IOST,1,2)="C-",$G(ECOUT)=0 W !!,"Press <RET> to continue" R X:DTIME
"RTN","ECNTPCE",52,0)
 ;W @IOF
"RTN","ECNTPCE",53,0)
 D ^%ZISC D ^ECKILL S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECNTPCE",54,0)
 Q
"RTN","ECNTPCE",55,0)
PAGE ; end of page
"RTN","ECNTPCE",56,0)
 I $E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR I 'Y S ECOUT=1 Q
"RTN","ECNTPCE",57,0)
 D HDR
"RTN","ECNTPCE",58,0)
 Q
"RTN","ECNTPCE",59,0)
HDR ; print header
"RTN","ECNTPCE",60,0)
 W @IOF
"RTN","ECNTPCE",61,0)
 W ECRDT,?70,"Page: ",ECPG,!
"RTN","ECNTPCE",62,0)
 W !,?17,"ECS RECORDS FAILING TRANSMISSION TO PCE REPORT",!,?24
"RTN","ECNTPCE",63,0)
 W "FROM "_$P(ECDATE,U)_" TO "_$P(ECDATE,U,2),!!
"RTN","ECNTPCE",64,0)
 W "DATE/TIME",?16,"PATIENT",?39,"SSN",?44,"PROVIDER(S)",?61,"REASONS"
"RTN","ECNTPCE",65,0)
 W !,"LOCATION",?16,"PROCEDURE",!,"DSS UNIT",?16,"CATEGORY",!
"RTN","ECNTPCE",66,0)
 F LINE=1:1:80 W "-"
"RTN","ECNTPCE",67,0)
 W !
"RTN","ECNTPCE",68,0)
 S ECPG=ECPG+1
"RTN","ECNTPCE",69,0)
 Q
"RTN","ECNTPCE",70,0)
 ;
"RTN","ECNTPCE",71,0)
PRT N ECLN,ECDN,ECPAT,ECEC,ECPS,ECDFN,ECUN,ECUN1,ECUN2,ECDTE,ECDT,ECRS,ECDE
"RTN","ECNTPCE",72,0)
 N ECX,ECAT,ECSSN,DFN,VA,VADM,ECEPN,ECECPT ;119
"RTN","ECNTPCE",73,0)
 S ECDTE=0 F  S ECDTE=$O(^TMP("ECNTPCE",$J,ECDTE)) Q:'ECDTE  D  Q:ECOUT
"RTN","ECNTPCE",74,0)
 .S ECDT=$$FMTE^XLFDT(ECDTE,2),ECL=0
"RTN","ECNTPCE",75,0)
 .F  S ECL=$O(^TMP("ECNTPCE",$J,ECDTE,ECL)) Q:'ECL  D  Q:ECOUT
"RTN","ECNTPCE",76,0)
 ..S ECLN=$P($G(^DIC(4,ECL,0)),U),ECLN=$S(ECLN="":"UNKNOWN",1:ECLN),ECD=0
"RTN","ECNTPCE",77,0)
 ..F  S ECD=$O(^TMP("ECNTPCE",$J,ECDTE,ECL,ECD)) Q:'ECD  D  Q:ECOUT
"RTN","ECNTPCE",78,0)
 ...S ECDN=$P($G(^ECD(ECD,0)),U),ECDN=$S(ECDN="":"UNKNOWN",1:ECDN)
"RTN","ECNTPCE",79,0)
 ...S ECDFN=0
"RTN","ECNTPCE",80,0)
 ...F  S ECDFN=$O(^TMP("ECNTPCE",$J,ECDTE,ECL,ECD,ECDFN)) Q:'ECDFN  D  Q:ECOUT
"RTN","ECNTPCE",81,0)
 ....S DFN=ECDFN D DEM^VADPT
"RTN","ECNTPCE",82,0)
 ....S ECPAT=VADM(1),ECSSN=$P($P(VADM(2),U,2),"-",3),ECNT=0
"RTN","ECNTPCE",83,0)
 ....F  S ECNT=$O(^TMP("ECNTPCE",$J,ECDTE,ECL,ECD,ECDFN,ECNT)) Q:'ECNT  D PR2  Q:ECOUT
"RTN","ECNTPCE",84,0)
 Q
"RTN","ECNTPCE",85,0)
 ;
"RTN","ECNTPCE",86,0)
PR2 S ECEC=$G(^TMP("ECNTPCE",$J,ECDTE,ECL,ECD,ECDFN,ECNT))
"RTN","ECNTPCE",87,0)
 S ECPS="",ECFN=$P(ECEC,U)
"RTN","ECNTPCE",88,0)
 D PROV
"RTN","ECNTPCE",89,0)
 S ECAT=$S($P(ECEC,U,2):$P($G(^EC(726,$P(ECEC,U,2),0)),U),1:"")
"RTN","ECNTPCE",90,0)
 I $P(ECEC,U,3)'="" S ECDE=+$P(ECEC,U,3) D
"RTN","ECNTPCE",91,0)
 .I $P(ECEC,U,3)[";EC" D  Q
"RTN","ECNTPCE",92,0)
 ..S ECPS=$G(^EC(725,+ECDE,0)),ECEPN=$P(ECPS,U),ECECPT=$P(ECPS,U,2),ECPS=$P(ECPS,U,2)_" "_$P(ECPS,U) ;119
"RTN","ECNTPCE",93,0)
 .S ECPS=$$CPT^ICPTCOD(ECDE,ECDTE),ECEPN=$S(+ECPS:$P(ECPS,U,3),1:"CPT NAME UNKNOWN"),ECECPT=$P(ECPS,U,2) ;119
"RTN","ECNTPCE",94,0)
 .S ECPS=$S(+ECPS>0:$P(ECPS,U,2)_" "_$P(ECPS,U,3),1:"CPT NAME UNKNOWN")
"RTN","ECNTPCE",95,0)
 S ECRS=^ECH(ECFN,"R")
"RTN","ECNTPCE",96,0)
 I $G(ECPTYP)="E" D EXPORT K ECPRV Q  ;119
"RTN","ECNTPCE",97,0)
 W ECDT,?16,$E(ECPAT,1,20),?39,ECSSN,?44,$E(ECUN1,1,16),?61,$E($P(ECRS,";"),1,19),!
"RTN","ECNTPCE",98,0)
 W $E(ECLN,1,15),?16,$E(ECPS,1,27),?44,$E(ECUN2,1,16)
"RTN","ECNTPCE",99,0)
 W ?61,$E($P(ECRS,";",2),1,19),!
"RTN","ECNTPCE",100,0)
 W $E(ECDN,1,15),?16,$E(ECAT,1,27),?44,$E(ECUN3,1,16)
"RTN","ECNTPCE",101,0)
 W ?61,$E($P(ECRS,";",3),1,198)
"RTN","ECNTPCE",102,0)
 S ECUN=0 F ECX=4:1 S ECUN=$O(ECPRV(ECUN)) Q:(ECUN="")&($P(ECRS,";",ECX)="")  D  I ECOUT Q
"RTN","ECNTPCE",103,0)
 .W !
"RTN","ECNTPCE",104,0)
 .I ($Y+6)>IOSL D PAGE I ECOUT Q
"RTN","ECNTPCE",105,0)
 .I ECUN'="" W ?44,$E($P(ECPRV(ECUN),"^",2),1,16) K ECPRV(ECUN)
"RTN","ECNTPCE",106,0)
 .W ?61,$E($P(ECRS,";",ECX),1,19)
"RTN","ECNTPCE",107,0)
 W !!
"RTN","ECNTPCE",108,0)
 I ($Y+6)>IOSL D PAGE I ECOUT Q
"RTN","ECNTPCE",109,0)
 Q
"RTN","ECNTPCE",110,0)
PROV ;Set provider 1-3 in variables
"RTN","ECNTPCE",111,0)
 M ECPRV=^TMP("ECNTPCE",$J,ECDTE,ECL,ECD,ECDFN,ECNT,"PRV")
"RTN","ECNTPCE",112,0)
 S ECUN=0,ECUN1="UNKNOWN",(ECUN2,ECUN3)=""
"RTN","ECNTPCE",113,0)
 F I=1:1:3 S ECUN=$O(ECPRV(ECUN)) Q:'ECUN  D
"RTN","ECNTPCE",114,0)
 .S @("ECUN"_I)=$P(ECPRV(ECUN),"^",2) K ECPRV(ECUN)
"RTN","ECNTPCE",115,0)
 Q
"RTN","ECNTPCE",116,0)
 ;
"RTN","ECNTPCE",117,0)
EXPORT ;Section added in patch 119
"RTN","ECNTPCE",118,0)
 N J
"RTN","ECNTPCE",119,0)
 S CNT=CNT+1
"RTN","ECNTPCE",120,0)
 S ^TMP($J,"ECRPT",CNT)=ECDT_U_ECLN_U_ECDN_U_ECAT_U_ECPAT_U_ECSSN_U_ECECPT_U_ECEPN_U_ECUN1_U_ECUN2_U_ECUN3
"RTN","ECNTPCE",121,0)
 F J=4:1:7 S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_U_$P($G(ECPRV(J)),U,2) ;Set providers 4 through 7
"RTN","ECNTPCE",122,0)
 F J=1:1:3 S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_U_$P(ECRS,";",J) ;add up to 3 reasons
"RTN","ECNTPCE",123,0)
 Q
"RTN","ECOSSUM")
0^21^B96916049^B64825146
"RTN","ECOSSUM",1,0)
ECOSSUM ;BIR/DMA,RHK,JPW - Ordering Section Summary ;11/16/12  11:49
"RTN","ECOSSUM",2,0)
 ;;2.0;EVENT CAPTURE;**5,8,18,47,72,95,119**;8 May 96;Build 12
"RTN","ECOSSUM",3,0)
EN ;entry point from menu option
"RTN","ECOSSUM",4,0)
 W !
"RTN","ECOSSUM",5,0)
 K DIC S DIC=723,DIC(0)="AQEMZ",DIC("A")="Select Ordering Section: " D ^DIC K DIC
"RTN","ECOSSUM",6,0)
 I Y<0 G EXIT
"RTN","ECOSSUM",7,0)
 S ECOS=+Y,ECOSN=$P(Y,"^",2)
"RTN","ECOSSUM",8,0)
 D RANGE
"RTN","ECOSSUM",9,0)
 I '$G(ECLOOP)!'$G(ECSD)!'$G(ECED) G EXIT
"RTN","ECOSSUM",10,0)
 W !
"RTN","ECOSSUM",11,0)
 S JJ=$$ASKLOC^ECRUTL
"RTN","ECOSSUM",12,0)
 I 'JJ G EXIT
"RTN","ECOSSUM",13,0)
 W !
"RTN","ECOSSUM",14,0)
 S JJ=$$ASKDSS^ECRUTL
"RTN","ECOSSUM",15,0)
 I 'JJ G EXIT
"RTN","ECOSSUM",16,0)
 W !
"RTN","ECOSSUM",17,0)
 D DEVICE
"RTN","ECOSSUM",18,0)
 I POP G EXIT
"RTN","ECOSSUM",19,0)
 I $G(ZTSK) G EXIT
"RTN","ECOSSUM",20,0)
 I $G(IO("Q")),'$G(ZTSK) G EXIT
"RTN","ECOSSUM",21,0)
 D START
"RTN","ECOSSUM",22,0)
 D HOME^%ZIS
"RTN","ECOSSUM",23,0)
 G EXIT
"RTN","ECOSSUM",24,0)
 Q
"RTN","ECOSSUM",25,0)
 ;
"RTN","ECOSSUM",26,0)
START ;queued entry point or continuation
"RTN","ECOSSUM",27,0)
 D PROCESS
"RTN","ECOSSUM",28,0)
 I $G(ECPTYP)="E" D EXPORT,EXIT Q  ;119
"RTN","ECOSSUM",29,0)
 U IO D PRINT
"RTN","ECOSSUM",30,0)
 I $D(ECGUI) D EXIT Q
"RTN","ECOSSUM",31,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECOSSUM",32,0)
 I $D(ZTQUEUED) S ZTREQ="@" D EXIT
"RTN","ECOSSUM",33,0)
 Q
"RTN","ECOSSUM",34,0)
 ;
"RTN","ECOSSUM",35,0)
RANGE ;get any date range
"RTN","ECOSSUM",36,0)
 N ECSTDT,ECENDDT
"RTN","ECOSSUM",37,0)
 W !!,?5,"Enter a Begin Date and End Date for the Event Capture "
"RTN","ECOSSUM",38,0)
 W !,?5,"Ordering Section report.",!
"RTN","ECOSSUM",39,0)
 S (ECSD,ECED)=0
"RTN","ECOSSUM",40,0)
 F  D  Q:ECSD>0  Q:'$G(ECLOOP)
"RTN","ECOSSUM",41,0)
 .S ECLOOP=$$STDT^ECRUTL() I 'ECLOOP Q
"RTN","ECOSSUM",42,0)
 .S ECSD=ECSTDT
"RTN","ECOSSUM",43,0)
 Q:'$G(ECLOOP)!'$G(ECSD)
"RTN","ECOSSUM",44,0)
 F  D  Q:ECED>0  Q:'$G(ECLOOP)
"RTN","ECOSSUM",45,0)
 .S ECLOOP=$$ENDDT^ECRUTL(ECSTDT) I 'ECLOOP Q
"RTN","ECOSSUM",46,0)
 .S ECED=ECENDDT
"RTN","ECOSSUM",47,0)
 .I ECED>(DT+1) D
"RTN","ECOSSUM",48,0)
 ..W !!,?15,"The End Date for this report may not be"
"RTN","ECOSSUM",49,0)
 ..W !,?15,"a future date.  Try again...",!
"RTN","ECOSSUM",50,0)
 ..S ECED=0
"RTN","ECOSSUM",51,0)
 Q 
"RTN","ECOSSUM",52,0)
 ;
"RTN","ECOSSUM",53,0)
DEVICE ;select output device
"RTN","ECOSSUM",54,0)
 W !,"This report is formatted for 132 column output.",!
"RTN","ECOSSUM",55,0)
 K IOP S %ZIS="QM" D ^%ZIS
"RTN","ECOSSUM",56,0)
 I POP W !!,"No device selected.  Exiting...",!! S DIR(0)="E" W ! D ^DIR K DIR Q
"RTN","ECOSSUM",57,0)
 I $D(IO("Q")) D
"RTN","ECOSSUM",58,0)
 .S ZTRTN="START^ECOSSUM",ZTDESC="EC Ordering Section Summary"
"RTN","ECOSSUM",59,0)
 .S ZTSAVE("ECSD")="",ZTSAVE("ECED")="",ZTSAVE("ECOS")="",ZTSAVE("ECOSN")=""
"RTN","ECOSSUM",60,0)
 .S ZTSAVE("ECLOC(")="",ZTSAVE("ECDSSU(")=""
"RTN","ECOSSUM",61,0)
 .D ^%ZTLOAD
"RTN","ECOSSUM",62,0)
 .I '$G(ZTSK) W !,"Report canceled..." S DIR(0)="E" W ! D ^DIR K DIR Q
"RTN","ECOSSUM",63,0)
 .W !,"Report queued as Task #: ",ZTSK S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECOSSUM",64,0)
 Q
"RTN","ECOSSUM",65,0)
 ;
"RTN","ECOSSUM",66,0)
PROCESS ;get data to print
"RTN","ECOSSUM",67,0)
 N EC,ECD,ECDA,ECPA,ECPATN,ECSS,ECSSN,ECP,ECPN,ECLOCA,ECUNIT,ECCAT,ECFILE,ECPSY,ECPSYN,ECPRV,ECPRVN,EC725,ECLOCN,ECUNITN,ECEPN,ECEPC ;119
"RTN","ECOSSUM",68,0)
 N NLOC,NUNIT,JJ,ECPXD
"RTN","ECOSSUM",69,0)
 K ^TMP("ECOS",$J)
"RTN","ECOSSUM",70,0)
 ;put locations and units into ien subscripted arrays
"RTN","ECOSSUM",71,0)
 S JJ="" F  S JJ=$O(ECLOC(JJ)) Q:JJ=""  D
"RTN","ECOSSUM",72,0)
 .S NLOC($P(ECLOC(JJ),"^",1))=$P(ECLOC(JJ),"^",2)
"RTN","ECOSSUM",73,0)
 S JJ="" F  S JJ=$O(ECDSSU(JJ)) Q:JJ=""  D
"RTN","ECOSSUM",74,0)
 .S NUNIT($P(ECDSSU(JJ),"^",1))=$P(ECDSSU(JJ),"^",2)
"RTN","ECOSSUM",75,0)
 S ECD=ECSD
"RTN","ECOSSUM",76,0)
 F  S ECD=$O(^ECH("AC",ECD)) Q:'ECD  Q:ECD>ECED  D
"RTN","ECOSSUM",77,0)
 .S ECDA="" F  S ECDA=$O(^ECH("AC",ECD,ECDA)) Q:'ECDA  S EC=$G(^ECH(ECDA,0)) I $P(EC,"^",12)=ECOS D
"RTN","ECOSSUM",78,0)
 ..I $P(EC,"^",3)<ECSD!($P(EC,"^",3)>ECED) Q  ;file or x-ref problem
"RTN","ECOSSUM",79,0)
 ..S ECLOCA=+$P(EC,U,4),ECUNIT=+$P(EC,U,7)
"RTN","ECOSSUM",80,0)
 ..I '$D(NLOC(ECLOCA))!('$D(NUNIT(ECUNIT))) Q
"RTN","ECOSSUM",81,0)
 ..S ECLOCN=$G(NLOC(ECLOCA)),ECUNITN=$G(NUNIT(ECUNIT)) ;119 Get location and unit names
"RTN","ECOSSUM",82,0)
 ..S ECP=$P(EC,U,9) Q:ECP']""
"RTN","ECOSSUM",83,0)
 ..S ECCAT=+$P(EC,U,8)
"RTN","ECOSSUM",84,0)
 ..S ECPSY=+$O(^ECJ("AP",ECLOCA,ECUNIT,ECCAT,ECP,""))
"RTN","ECOSSUM",85,0)
 ..S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2)
"RTN","ECOSSUM",86,0)
 ..S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECOSSUM",87,0)
 ..I ECFILE="UNKNOWN" S (ECPN,ECEPN)="UNKNOWN" ;119
"RTN","ECOSSUM",88,0)
 ..S ECCPT=$S(ECFILE=81:+ECP,1:$P($G(^EC(725,+ECP,0)),"^",5)),ECPXD="",ECEPC="" ;119
"RTN","ECOSSUM",89,0)
 ..I ECCPT'="" D
"RTN","ECOSSUM",90,0)
 ...S ECPXD=$$CPT^ICPTCOD(ECCPT,$P(EC,"^",3)),ECCPT=$P(ECPXD,"^",2)
"RTN","ECOSSUM",91,0)
 ..I ECFILE=81 S (ECPN,ECEPN)=$S($P(ECPXD,"^",3)]"":$P(ECPXD,"^",3),1:"UNKNOWN") ;119
"RTN","ECOSSUM",92,0)
 ..I ECFILE=725 D
"RTN","ECOSSUM",93,0)
 ...S EC725=$G(^EC(725,+ECP,0)),ECPN=$P(EC725,"^",2)_" "_$P(EC725,"^"),ECEPN=$P(EC725,U),ECEPC=$P(EC725,U,2) ;119
"RTN","ECOSSUM",94,0)
 ..S ECPN=$E(ECPN,1,37)_$S(ECPSYN]"":" ["_ECPSYN_"] ",1:"")_"~"_ECCPT,ECEPN=ECEPN_$S(ECPSYN]"":" ["_ECPSYN_"]",1:"") ;119
"RTN","ECOSSUM",95,0)
 ..;ALB/JAM - Get Procedure CPT modifiers
"RTN","ECOSSUM",96,0)
 ..S ECMODF=0 I $O(^ECH(ECDA,"MOD",0))'="" D
"RTN","ECOSSUM",97,0)
 ...K ECMOD S ECMODF=$$MOD^ECUTL(ECDA,"E",.ECMOD)
"RTN","ECOSSUM",98,0)
 ..S (ECPA,ECPATN,ECSS)="",ECPA=$G(^DPT(+$P(EC,"^",2),0)) Q:ECPA=""
"RTN","ECOSSUM",99,0)
 ..S ECPATN=$P(ECPA,"^",1),ECSS=$P(ECPA,"^",9)
"RTN","ECOSSUM",100,0)
 ..S:+ECSS ECSSN=$E(ECSS,6,10) S:ECSS="" ECSSN="UNKN"
"RTN","ECOSSUM",101,0)
 ..S:ECPATN="" ECPATN="UNKNOWN" S ECPATN=ECPATN_"^"_ECSSN
"RTN","ECOSSUM",102,0)
 ..S ECV=+$P(EC,"^",10)
"RTN","ECOSSUM",103,0)
 ..K ECPRV S ECPRV=$$GETPRV^ECPRVMUT(ECDA,.ECPRV) I 'ECPRV D  K ECPRV
"RTN","ECOSSUM",104,0)
 ...M ^TMP("ECOS",$J,$S($G(ECPTYP)="E":ECLOCN,1:ECLOCA),$S($G(ECPTYP)="E":ECUNITN,1:ECUNIT),ECPATN,ECDA,"PRV")=ECPRV ;119 Use names rather than numbers if exporting
"RTN","ECOSSUM",105,0)
 ..I $G(ECPTYP)'="E" S ^TMP("ECOS",$J,ECLOCA,ECUNIT,ECPATN,ECDA)=ECSSN_"^"_ECPN_"^"_ECV ;119
"RTN","ECOSSUM",106,0)
 ..S:$G(ECPTYP)="E" ^TMP("ECOS",$J,ECLOCN,ECUNITN,ECPATN,ECDA)=ECSSN_U_ECCPT_U_ECEPC_U_ECEPN_U_ECV ;119
"RTN","ECOSSUM",107,0)
 ..I ECMODF D
"RTN","ECOSSUM",108,0)
 ...M ^TMP("ECOS",$J,$S($G(ECPTYP)="E":ECLOCN,1:ECLOCA),$S($G(ECPTYP)="E":ECUNITN,1:ECUNIT),ECPATN,ECDA,"MOD")=ECMOD ;119 use names rather than numbers when exporting
"RTN","ECOSSUM",109,0)
 Q
"RTN","ECOSSUM",110,0)
 ;
"RTN","ECOSSUM",111,0)
PRINT ;output report
"RTN","ECOSSUM",112,0)
 N ECDA,ECLOCA,ECUNIT,ECPATN,ECSSN,ECPN,ECV
"RTN","ECOSSUM",113,0)
 N PAGE,QFLAG,DASH,DASH2,PRNTDT,JJ,SS,ALOC,AUNIT,LOC,UNNAME,UNIT,DATA,PTNAME,PROV,PROVN,V,X,Y
"RTN","ECOSSUM",114,0)
 S (PAGE,QFLAG)=0 S $P(DASH,"-",130)="",$P(DASH2,"-",64)=""
"RTN","ECOSSUM",115,0)
 S Y=$P(ECSD,".",1)+1 D DD^%DT S ECSD=Y S Y=$P(ECED,".",1) D DD^%DT S ECED=Y
"RTN","ECOSSUM",116,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S PRNTDT=Y
"RTN","ECOSSUM",117,0)
 S ECV("L")=0,ECV("O")=0,ECV("P")=0,ECV("U")=0
"RTN","ECOSSUM",118,0)
 ;if no data exists then print the header and quit
"RTN","ECOSSUM",119,0)
 I '$D(^TMP("ECOS",$J)) D  Q
"RTN","ECOSSUM",120,0)
 .S LOC="" D HEAD
"RTN","ECOSSUM",121,0)
 .W !!,?26,"No data for this Ordering Section for the date range specified.",!!
"RTN","ECOSSUM",122,0)
 .I $E(IOST)="C"&('QFLAG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECOSSUM",123,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECOSSUM",124,0)
 .W:$E(IOST)'="C" @IOF
"RTN","ECOSSUM",125,0)
 ;if there's data in ^TMP then need to present the data alphabetically;
"RTN","ECOSSUM",126,0)
 ;put locations and units in alpha ordered array
"RTN","ECOSSUM",127,0)
 S JJ="" F  S JJ=$O(ECLOC(JJ)) Q:JJ=""  D
"RTN","ECOSSUM",128,0)
 .S ALOC($P(ECLOC(JJ),"^",2))=$P(ECLOC(JJ),"^",1)
"RTN","ECOSSUM",129,0)
 S JJ="" F  S JJ=$O(ECDSSU(JJ)) Q:JJ=""  D
"RTN","ECOSSUM",130,0)
 .S AUNIT($P(ECDSSU(JJ),"^",2))=$P(ECDSSU(JJ),"^",1)
"RTN","ECOSSUM",131,0)
 ;process the ^TMP global data in alpha order for location and unit
"RTN","ECOSSUM",132,0)
 S LOC="" F  S LOC=$O(ALOC(LOC)) Q:LOC=""  S ECLOCA=ALOC(LOC),ECV("L")=0 D  Q:QFLAG
"RTN","ECOSSUM",133,0)
 .D HEAD Q:QFLAG  ;always start a new location at top of page
"RTN","ECOSSUM",134,0)
 .S UNIT="" F  S UNIT=$O(AUNIT(UNIT)) Q:UNIT=""  S ECUNIT=AUNIT(UNIT),ECV("U")=0 D  Q:QFLAG
"RTN","ECOSSUM",135,0)
 ..I '$D(^TMP("ECOS",$J,ECLOCA,ECUNIT)) Q
"RTN","ECOSSUM",136,0)
 ..S UNNAME=$E(UNIT,1,20)
"RTN","ECOSSUM",137,0)
 ..D:($Y+6>IOSL) HEAD Q:QFLAG  W !!,UNNAME
"RTN","ECOSSUM",138,0)
 ..S ECPATN="" F  S ECPATN=$O(^TMP("ECOS",$J,ECLOCA,ECUNIT,ECPATN)) Q:ECPATN=""  S ECV("P")=0 D  Q:QFLAG
"RTN","ECOSSUM",139,0)
 ...S PTNAME=$P(ECPATN,"^",1),PTNAME=$E(PTNAME,1,22),ECSSN=$P(ECPATN,"^",2)
"RTN","ECOSSUM",140,0)
 ...W ?24,PTNAME,?48,ECSSN
"RTN","ECOSSUM",141,0)
 ...S ECDA="" F  S ECDA=$O(^TMP("ECOS",$J,ECLOCA,ECUNIT,ECPATN,ECDA)) Q:ECDA=""  S DATA=^(ECDA) D  Q:QFLAG
"RTN","ECOSSUM",142,0)
 ....S ECPN=$P(DATA,"^",2),ECPN=$J($P(ECPN,"~",2)_" ",6)_$P(ECPN,"~")
"RTN","ECOSSUM",143,0)
 ....S ECPN=$E(ECPN,1,41),ECV=$P(DATA,"^",3),ECV=ECV\1 D
"RTN","ECOSSUM",144,0)
 .....F V="L","O","P","U" S ECV(V)=ECV(V)+ECV
"RTN","ECOSSUM",145,0)
 .....S:+ECV>9999 ECV="9999+" S ECV=$$RJ^XLFSTR(ECV,5," ") ;unusually high individual volume figure
"RTN","ECOSSUM",146,0)
 ....K PROV M PROV=^TMP("ECOS",$J,ECLOCA,ECUNIT,ECPATN,ECDA,"PRV")
"RTN","ECOSSUM",147,0)
 ....K ECMOD M ECMOD=^TMP("ECOS",$J,ECLOCA,ECUNIT,ECPATN,ECDA,"MOD")
"RTN","ECOSSUM",148,0)
 ....W ?54,ECPN,?96,ECV,?105,$E($P($G(PROV(1)),"^",2),1,24) K PROV(1)
"RTN","ECOSSUM",149,0)
 ....D:($Y+6>IOSL) HEAD Q:QFLAG
"RTN","ECOSSUM",150,0)
 ....;ALB/JAM - write cpt procedure modifiers on same line with providers
"RTN","ECOSSUM",151,0)
 ....S MOD=0,PROVN=1 F  S MOD=$O(ECMOD(MOD)),PROVN=$O(PROV(PROVN)) Q:(MOD="")&(PROVN="")  D  I QFLAG Q
"RTN","ECOSSUM",152,0)
 .....I ($Y+6>IOSL) D HEAD Q:QFLAG  W !?54,ECPN
"RTN","ECOSSUM",153,0)
 .....W !
"RTN","ECOSSUM",154,0)
 .....I MOD'="" W ?58,"- ",MOD," ",$E($P(ECMOD(MOD),U,3),1,36) K ECMOD(MOD)
"RTN","ECOSSUM",155,0)
 .....I PROVN'="" W ?105,$E($P($G(PROV(PROVN)),"^",2),1,24) K PROV(PROVN)
"RTN","ECOSSUM",156,0)
 ....W ! ;start a new line
"RTN","ECOSSUM",157,0)
 ...;write subtotal for patient
"RTN","ECOSSUM",158,0)
 ...Q:QFLAG  D:($Y+6>IOSL) HEAD Q:QFLAG
"RTN","ECOSSUM",159,0)
 ...W ?54,DASH2,!
"RTN","ECOSSUM",160,0)
 ...W ?24,"Subtotal for "_$P(ECPATN,"^",1)_":",?96,$$RJ^XLFSTR(ECV("P"),5," "),!!
"RTN","ECOSSUM",161,0)
 ..;write total for unit
"RTN","ECOSSUM",162,0)
 ..Q:QFLAG  D:($Y+6>IOSL) HEAD Q:QFLAG
"RTN","ECOSSUM",163,0)
 ..W !,"Subtotal for DSS Unit "_UNIT_":",?95,$$RJ^XLFSTR(ECV("U"),6," "),!
"RTN","ECOSSUM",164,0)
 .;write the total for the location
"RTN","ECOSSUM",165,0)
 .Q:QFLAG  D:($Y+6>IOSL) HEAD Q:QFLAG
"RTN","ECOSSUM",166,0)
 .W !!,"Total for Location "_LOC_":",?95,$$RJ^XLFSTR(ECV("L"),6," "),!
"RTN","ECOSSUM",167,0)
 ;write the ordering section grandtotal
"RTN","ECOSSUM",168,0)
 Q:QFLAG  D:($Y+8>IOSL) HEAD Q:QFLAG
"RTN","ECOSSUM",169,0)
 W !!!,"Grand Total for Ordering Section "_ECOSN_":",?95,$$RJ^XLFSTR(ECV("O"),6," "),!
"RTN","ECOSSUM",170,0)
 ;all done
"RTN","ECOSSUM",171,0)
 D FOOTER  ;print footer on last page
"RTN","ECOSSUM",172,0)
 I $E(IOST)="C"&('QFLAG) S DIR(0)="E" D  D ^DIR W @IOF
"RTN","ECOSSUM",173,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECOSSUM",174,0)
 W:$E(IOST)'="C" @IOF
"RTN","ECOSSUM",175,0)
 Q
"RTN","ECOSSUM",176,0)
HEAD ;header
"RTN","ECOSSUM",177,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECOSSUM",178,0)
 I PAGE>0 D FOOTER
"RTN","ECOSSUM",179,0)
 I $E(IOST)="C",PAGE>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLAG=1 Q
"RTN","ECOSSUM",180,0)
 W:$Y!($E(IOST)="C") @IOF
"RTN","ECOSSUM",181,0)
 S PAGE=PAGE+1
"RTN","ECOSSUM",182,0)
 W !,?26,"Event Capture Ordering Section Summary for ",ECOSN,?105,"Page: ",PAGE
"RTN","ECOSSUM",183,0)
 W !,?26,"for the Date Range ",$$FMTE^XLFDT(ECSD)," to ",$$FMTE^XLFDT(ECED),?102,"Printed: "_PRNTDT
"RTN","ECOSSUM",184,0)
 W !,?26,"Location: ",LOC,!
"RTN","ECOSSUM",185,0)
 W !,"DSS Unit",?24,"Patient",?48,"SSN",?54,"Procedure",?98,"Vol.",?105,"Provider(s)"
"RTN","ECOSSUM",186,0)
 W !,DASH,!
"RTN","ECOSSUM",187,0)
 Q
"RTN","ECOSSUM",188,0)
 ;
"RTN","ECOSSUM",189,0)
FOOTER ;print page footer
"RTN","ECOSSUM",190,0)
 W !!?4,"Volume totals may represent days, minutes, numbers of procedures"
"RTN","ECOSSUM",191,0)
 W !?4,"and/or a combination of these."
"RTN","ECOSSUM",192,0)
 Q
"RTN","ECOSSUM",193,0)
 ;
"RTN","ECOSSUM",194,0)
EXIT ;common exit point
"RTN","ECOSSUM",195,0)
 D ^ECKILL
"RTN","ECOSSUM",196,0)
 D:'$D(ECGUI) ^%ZISC
"RTN","ECOSSUM",197,0)
 K ^TMP("ECOS",$J)
"RTN","ECOSSUM",198,0)
 K JJ,X,Y,ZTSK,IO("Q"),DIR,DIRUT,DTOUT,DUOUT,ECOS,ECOSN,ECSD,ECED,ECLOOP,ECLOC,ECDSSU
"RTN","ECOSSUM",199,0)
 Q
"RTN","ECOSSUM",200,0)
 ;
"RTN","ECOSSUM",201,0)
EXPORT ;119 Section added for exporting data to excel
"RTN","ECOSSUM",202,0)
 N CNT,LOC,UNIT,PAT,IEN,DATA,SUB,MODCNT,PRCNT
"RTN","ECOSSUM",203,0)
 S CNT=1,^TMP($J,"ECRPT",CNT)="ORDERING SECTION^LOCATION^DSS UNIT^PATIENT^SSN^CPT CODE^PROCEDURE CODE^DESCRIPTION^VOLUME^CPT MOD #1^CPT MOD #2^CPT MOD #3^PROVIDER #1^PROVIDER #2^PROVIDER #3^PROVIDER #4^PROVIDER #5^PROVIDER #6^PROVIDER #7"
"RTN","ECOSSUM",204,0)
 I '$D(^TMP("ECOS",$J)) Q  ;Nothing to report
"RTN","ECOSSUM",205,0)
 S LOC="" F  S LOC=$O(^TMP("ECOS",$J,LOC)) Q:LOC=""  D
"RTN","ECOSSUM",206,0)
 .S UNIT="" F  S UNIT=$O(^TMP("ECOS",$J,LOC,UNIT)) Q:UNIT=""  D
"RTN","ECOSSUM",207,0)
 ..S PAT="" F  S PAT=$O(^TMP("ECOS",$J,LOC,UNIT,PAT)) Q:PAT=""  D
"RTN","ECOSSUM",208,0)
 ...S IEN=0 F  S IEN=$O(^TMP("ECOS",$J,LOC,UNIT,PAT,IEN)) Q:'+IEN  D
"RTN","ECOSSUM",209,0)
 ....S DATA=^TMP("ECOS",$J,LOC,UNIT,PAT,IEN)
"RTN","ECOSSUM",210,0)
 ....S CNT=CNT+1,^TMP($J,"ECRPT",CNT)=ECOSN_U_LOC_U_UNIT_U_$P(PAT,U)_U_$P(DATA,U)_U_$P(DATA,U,2)_U_$P(DATA,U,3)_U_$P(DATA,U,4)_U_$P(DATA,U,5)
"RTN","ECOSSUM",211,0)
 ....S SUB=0,MODCNT=0 F  S:SUB'="" SUB=$O(^TMP("ECOS",$J,LOC,UNIT,PAT,IEN,"MOD",SUB)) Q:MODCNT=3  S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_U_$S(SUB'="":SUB_" "_$P($G(^TMP("ECOS",$J,LOC,UNIT,PAT,IEN,"MOD",SUB)),U,3),1:""),MODCNT=MODCNT+1
"RTN","ECOSSUM",212,0)
 ....S SUB=0,PRCNT=0 F  S:SUB'="" SUB=$O(^TMP("ECOS",$J,LOC,UNIT,PAT,IEN,"PRV",SUB)) Q:PRCNT=7  S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_U_$S(SUB="":"",1:$P($G(^TMP("ECOS",$J,LOC,UNIT,PAT,IEN,"PRV",SUB)),U,2)) S PRCNT=PRCNT+1
"RTN","ECOSSUM",213,0)
 Q
"RTN","ECPAT")
0^9^B47879400^B34100564
"RTN","ECPAT",1,0)
ECPAT ;BIR/MAM,JPW - Event Capture Patient Summary ;11/7/12  10:53
"RTN","ECPAT",2,0)
 ;;2.0;EVENT CAPTURE;**5,18,47,72,95,112,119**;8 May 96;Build 12
"RTN","ECPAT",3,0)
SET ; set ^TMP($J,"ECPAT")
"RTN","ECPAT",4,0)
 N ECPXD,EC725
"RTN","ECPAT",5,0)
 I $G(ECPTYP)'="E" I $Y+11>IOSL D PAGE I ECOUT Q  ;119
"RTN","ECPAT",6,0)
 S ECEC=$G(^ECH(ECFN,0))
"RTN","ECPAT",7,0)
 S ECL=+$P(ECEC,"^",4),ECC=+$P(ECEC,"^",8),ECP=$P(ECEC,"^",9),ECD=+$P(ECEC,"^",7),ECV=+$P(ECEC,"^",10)
"RTN","ECPAT",8,0)
 S ECU=$$GETPPRV^ECPRVMUT(ECFN,.ECUN),ECUN=$S(ECU:"UNKNOWN",1:$P(ECUN,"^",2))
"RTN","ECPAT",9,0)
 Q:ECP']""
"RTN","ECPAT",10,0)
 ;set default med spec and ord sect to administrative if blank
"RTN","ECPAT",11,0)
 S ECM=$S($P(ECEC,"^",6)]"":+$P(ECEC,"^",6),1:108),ECO=$S($P(ECEC,"^",12)]"":+$P(ECEC,"^",12),1:108)
"RTN","ECPAT",12,0)
 S ECMN=$S($P($G(^ECC(723,ECM,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPAT",13,0)
 S ECON=$S($P($G(^ECC(723,ECO,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPAT",14,0)
 S ECS=+$P(ECEC,"^",5),ECSN=$S($P($G(^DIC(49,ECS,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPAT",15,0)
 S ECCN=$S($P($G(^EC(726,ECC,0)),"^")]"":$P(^(0),"^"),1:"None")
"RTN","ECPAT",16,0)
 S ECPSY=+$O(^ECJ("AP",ECL,ECD,ECC,ECP,""))
"RTN","ECPAT",17,0)
 S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2)
"RTN","ECPAT",18,0)
 S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,1:725)
"RTN","ECPAT",19,0)
 S ECCPT=$S(ECFILE=81:+ECP,1:$P($G(^EC(725,+ECP,0)),"^",5)),ECPXD=""
"RTN","ECPAT",20,0)
 I ECCPT'="" D
"RTN","ECPAT",21,0)
 . S ECPXD=$$CPT^ICPTCOD(ECCPT,$P(ECEC,"^",3)),ECCPT=$P(ECPXD,"^",2)
"RTN","ECPAT",22,0)
 . I ECCPT'="" S ECCPT=ECCPT_" "
"RTN","ECPAT",23,0)
 I ECFILE=81 S ECPN=$S($P(ECPXD,"^",3)]"":$P(ECPXD,"^",3),1:"UNKNOWN")
"RTN","ECPAT",24,0)
 I ECFILE=725 D
"RTN","ECPAT",25,0)
 .S EC725=$G(^EC(725,+ECP,0)),ECPN=$P(EC725,"^",2)_" "_$P(EC725,"^")
"RTN","ECPAT",26,0)
 S ECEPN=$S(ECFILE=81:ECPN,1:$P(EC725,U))_$S(ECPSYN]"":" ["_ECPSYN_"] ",1:"") ;119 Set export version of procedure name
"RTN","ECPAT",27,0)
 S ECPN=$J(ECCPT,6)_$E(ECPN,1,38)_$S(ECPSYN]"":" ["_ECPSYN_"] ",1:"")
"RTN","ECPAT",28,0)
 S ECDN=$S($P($G(^ECD(ECD,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPAT",29,0)
 S ECLN=$S($P($G(^DIC(4,ECL,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPAT",30,0)
 S ECUN=$S(ECUN'="UNKNOWN":$P(ECUN,",",2)_" "_$P(ECUN,","),1:"UNKNOWN")
"RTN","ECPAT",31,0)
 S ECDT=$$FMTE^XLFDT(DATE)
"RTN","ECPAT",32,0)
 ;
"RTN","ECPAT",33,0)
 ;ALB/ESD - Add Procedure Reason to report
"RTN","ECPAT",34,0)
 N ECLNK,ECRAR ;112,119
"RTN","ECPAT",35,0)
 D GETS^DIQ(721,ECFN,"34;43;44",,"ECRAR") ;112 Get all reasons
"RTN","ECPAT",36,0)
 S ECPRSN=$G(ECRAR(721,ECFN_",",34)) S:ECPRSN="" ECPRSN="REASON NOT DEFINED" ;112
"RTN","ECPAT",37,0)
 S ECPRSN2=$G(ECRAR(721,ECFN_",",43)) ;112
"RTN","ECPAT",38,0)
 S ECPRSN3=$G(ECRAR(721,ECFN_",",44)) ;112
"RTN","ECPAT",39,0)
 ;
"RTN","ECPAT",40,0)
 ;Get Procedure CPT modifiers
"RTN","ECPAT",41,0)
 I $G(ECPTYP)="E" Q  ;119 Don't need modifiers for exportable version
"RTN","ECPAT",42,0)
 S ECMODF=0 K ECMOD
"RTN","ECPAT",43,0)
 I $O(^ECH(ECFN,"MOD",0))'="" S ECMODF=$$MOD^ECUTL(ECFN,"E",.ECMOD)
"RTN","ECPAT",44,0)
 I $D(ECY) DO
"RTN","ECPAT",45,0)
 .W !!,ECDT,?32,ECCN,?87,ECPN_" ("_ECV_")",! ;112
"RTN","ECPAT",46,0)
 .I ECMODF S MD="" D  K MD I ECOUT Q
"RTN","ECPAT",47,0)
 ..F  S MD=$O(ECMOD(MD)) Q:MD=""  D  I ECOUT Q
"RTN","ECPAT",48,0)
 ...D:$Y+5>IOSL PAGE Q:ECOUT  W ?91,"- ",MD," ",$P(ECMOD(MD),U,3),! ;112
"RTN","ECPAT",49,0)
 .W $E(ECLN,1,22),?32,ECSN,?87,ECMN,! ;112
"RTN","ECPAT",50,0)
 .I '$D(ECRY) W ?32,ECON,?87,ECUN ;119
"RTN","ECPAT",51,0)
 .I $D(ECRY) D  ;112
"RTN","ECPAT",52,0)
 ..W ECPRSN,?32,ECON,?87,ECUN ;112
"RTN","ECPAT",53,0)
 ..I $G(ECPRSN2)'="" W !,ECPRSN2 ;112
"RTN","ECPAT",54,0)
 ..I $G(ECPRSN3)'="" W !,ECPRSN3 ;112
"RTN","ECPAT",55,0)
 I $D(ECN) DO
"RTN","ECPAT",56,0)
 .W !!,ECDT,?32,ECPN_" ("_ECV_")",! ;112
"RTN","ECPAT",57,0)
 .I ECMODF S MD="" D  K MD I ECOUT Q
"RTN","ECPAT",58,0)
 ..F  S MD=$O(ECMOD(MD)) Q:MD=""  D  I ECOUT Q
"RTN","ECPAT",59,0)
 ...D:$Y+5>IOSL PAGE Q:ECOUT  W ?36,"- ",MD," ",$P(ECMOD(MD),U,3),! ;112
"RTN","ECPAT",60,0)
 .W $E(ECLN,1,22),?32,ECSN,?87,ECMN,! ;112
"RTN","ECPAT",61,0)
 .I '$D(ECRY) W ?32,ECON,?87,ECUN ;119
"RTN","ECPAT",62,0)
 .I $D(ECRY) D  ;112
"RTN","ECPAT",63,0)
 ..W ECPRSN,?32,ECON,?87,ECUN ;112
"RTN","ECPAT",64,0)
 ..I $G(ECPRSN2)'="" W !,ECPRSN2 ;112
"RTN","ECPAT",65,0)
 ..I $G(ECPRSN3)'="" W !,ECPRSN3 ;112
"RTN","ECPAT",66,0)
 Q
"RTN","ECPAT",67,0)
PAT ; entry point
"RTN","ECPAT",68,0)
 K DIC S DIC=2,DIC(0)="QEAMZ",DIC("A")="Select Patient: " D ^DIC K DIC G:Y<0 END S ECDFN=+Y,ECPAT=$P(Y,"^",2)
"RTN","ECPAT",69,0)
DATE K %DT S %DT="AEX",%DT("A")="Start with Date:  " D ^%DT G:Y<0 END S ECSD=Y,%DT("A")="End with Date:  " D ^%DT G:Y<0 END S ECED=Y I ECED<ECSD W !,"End date must be after start date",! G DATE
"RTN","ECPAT",70,0)
 S ECDATE=$$FMTE^XLFDT(ECSD)_"^"_$$FMTE^XLFDT(ECED),ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECPAT",71,0)
 D REASON^ECRUTL ;* Prompt to report Procedure Reasons
"RTN","ECPAT",72,0)
 K IOP,%ZIS,POP,IO("Q") S %ZIS("A")="Select Device: ",%ZIS="QM" W !!,"This report is designed to use a 132 column format.",! D ^%ZIS G:POP END
"RTN","ECPAT",73,0)
 I $D(IO("Q")) S:$D(ECRY) ZTSAVE("ECRY")=""
"RTN","ECPAT",74,0)
 I $D(IO("Q")) K IO("Q") S (ZTSAVE("ECDFN"),ZTSAVE("ECPAT"),ZTSAVE("ECDATE"),ZTSAVE("ECED"),ZTSAVE("ECSD"))="",ZTDESC="EVENT CAPTURE PATIENT SUMMARY",ZTRTN="SUM^ECPAT",ZTIO=ION D ^%ZTLOAD,HOME^%ZIS G END
"RTN","ECPAT",75,0)
SUM ; entry when queued
"RTN","ECPAT",76,0)
 N ECPRSN,ECPRSN2,ECPRSN3,%H ;112,119
"RTN","ECPAT",77,0)
 I $G(ECPTYP)="E" D EXPORT,^ECKILL Q  ;119
"RTN","ECPAT",78,0)
 S %H=$H D YX^%DTC S ECRDT=Y
"RTN","ECPAT",79,0)
 U IO S DATE=$O(^ECH("APAT",ECDFN,ECSD)) I 'DATE W:$Y @IOF W !!,"No Data for "_ECPAT_" during the time selected." G END
"RTN","ECPAT",80,0)
 S ECFN=+$O(^ECH("APAT",ECDFN,DATE,0)),ECL=+$P(^ECH(ECFN,0),"^",4) D BRO D:$D(ECY) HDR D:$D(ECN) HDR1
"RTN","ECPAT",81,0)
 S DATE=ECSD,(ECFN,ECOUT)=0 F I=0:0 S DATE=$O(^ECH("APAT",ECDFN,DATE)) Q:'DATE!(DATE>ECED)!(ECOUT)  F I=0:0 S ECFN=$O(^ECH("APAT",ECDFN,DATE,ECFN)) Q:'ECFN!(ECOUT)  D SET
"RTN","ECPAT",82,0)
 D FOOTER  ;for last page
"RTN","ECPAT",83,0)
END I $D(ECGUI) D ^ECKILL Q
"RTN","ECPAT",84,0)
 W ! I $D(ECOUT),'ECOUT D
"RTN","ECPAT",85,0)
 . I $E(IOST,1,2)="C-" W !!,"Press <RET> to continue  " R X:DTIME
"RTN","ECPAT",86,0)
 W @IOF D ^%ZISC D ^ECKILL S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECPAT",87,0)
 Q
"RTN","ECPAT",88,0)
HDR ; print heading
"RTN","ECPAT",89,0)
 ;
"RTN","ECPAT",90,0)
 ;ALB/ESD - Add Procedure Reason to column headings
"RTN","ECPAT",91,0)
 W:$Y @IOF
"RTN","ECPAT",92,0)
 W !,?32,"EVENT CAPTURE PATIENT SUMMARY FOR "_ECPAT,!,?32,"FROM "_$P(ECDATE,"^")_"   TO "_$P(ECDATE,"^",2),!,?32,"Run Date : ",ECRDT
"RTN","ECPAT",93,0)
 W !,"PROCEDURE DATE/TIME",?32,"CATEGORY",?87,"PROCEDURE",!,?87,"PROCEDURE (CPT) MODIFIER",!,"LOCATION",?32,"SERVICE",?87,"SECTION" ;112
"RTN","ECPAT",94,0)
 W !
"RTN","ECPAT",95,0)
 W:$D(ECRY) "PROCEDURE REASON(S)" ;112
"RTN","ECPAT",96,0)
 W ?32,"ORDERING SECTION",?87,"PROVIDER",! F LINE=1:1:132 W "-" ;112
"RTN","ECPAT",97,0)
 W !
"RTN","ECPAT",98,0)
 Q
"RTN","ECPAT",99,0)
PAGE ; end of page
"RTN","ECPAT",100,0)
 I $G(X)'["?" D FOOTER
"RTN","ECPAT",101,0)
 S X="" I $E(IOST,1,2)="C-" W !!,"Press <RET> to continue, or ^ to quit   " R X:DTIME I '$T!(X="^") S ECOUT=1 Q
"RTN","ECPAT",102,0)
 I X["?" W !!,"If you want to continue with this report, press <RET>.  Entering an ^ will",!,"exit you from this option." G PAGE
"RTN","ECPAT",103,0)
 D:$D(ECY) HDR D:$D(ECN) HDR1
"RTN","ECPAT",104,0)
 Q
"RTN","ECPAT",105,0)
HDR1 ; print heading without categories
"RTN","ECPAT",106,0)
 ;
"RTN","ECPAT",107,0)
 ;ALB/ESD - Add Run Date to header
"RTN","ECPAT",108,0)
 W @IOF,!!,?32,"EVENT CAPTURE PATIENT SUMMARY FOR "_ECPAT,!,?36,"FROM "_$P(ECDATE,"^")_"   TO "_$P(ECDATE,"^",2),!,?36,"Run Date : ",ECRDT
"RTN","ECPAT",109,0)
 ;
"RTN","ECPAT",110,0)
 ;ALB/ESD - Add Procedure Reason to column headings
"RTN","ECPAT",111,0)
 W !!,"PROCEDURE DATE/TIME",?32,"PROCEDURE(VOLUME)",!,?32,"PROCEDURE (CPT) MODIFIER",!,"LOCATION",?32,"SERVICE",?87,"SECTION" ;112
"RTN","ECPAT",112,0)
 W !
"RTN","ECPAT",113,0)
 W:$D(ECRY) "PROCEDURE REASON(S)" ;112
"RTN","ECPAT",114,0)
 W ?32,"ORDERING SECTION",?87,"PROVIDER",! F LINE=1:1:132 W "-" ;112
"RTN","ECPAT",115,0)
 W !
"RTN","ECPAT",116,0)
 Q
"RTN","ECPAT",117,0)
 ;
"RTN","ECPAT",118,0)
FOOTER ;print page footer
"RTN","ECPAT",119,0)
 W !!?4,"Volume totals may represent days, minutes, numbers of procedures"
"RTN","ECPAT",120,0)
 W !?4,"and/or a combination of these."
"RTN","ECPAT",121,0)
 Q
"RTN","ECPAT",122,0)
 ;
"RTN","ECPAT",123,0)
BRO ;ask prt with category or without
"RTN","ECPAT",124,0)
 S ECN=1
"RTN","ECPAT",125,0)
 Q
"RTN","ECPAT",126,0)
 ;
"RTN","ECPAT",127,0)
EXPORT ;Section added in 119
"RTN","ECPAT",128,0)
 N DATE,CNT,ECEPN
"RTN","ECPAT",129,0)
 S CNT=1
"RTN","ECPAT",130,0)
 S ^TMP($J,"ECRPT",CNT)="PATIENT NAME^SSN^PROCEDURE DATE/TIME^LOCATION^CPT CODE^PROCEDURE CODE^PROCEDURE NAME^VOLUME^"_$S($D(ECRY):"REASON #1^REASON #2^REASON #3^",1:"")_"SERVICE^SECTION^ORDERING SECTION^PROVIDER"
"RTN","ECPAT",131,0)
 S DATE=$O(^ECH("APAT",ECDFN,ECSD)) I 'DATE Q
"RTN","ECPAT",132,0)
 S ECFN=+$O(^ECH("APAT",ECDFN,DATE,0)),ECL=+$P(^ECH(ECFN,0),"^",4) D BRO
"RTN","ECPAT",133,0)
 S DATE=ECSD,ECFN=0 F I=0:0 S DATE=$O(^ECH("APAT",ECDFN,DATE)) Q:'DATE!(DATE>ECED)  F I=0:0 S ECFN=$O(^ECH("APAT",ECDFN,DATE,ECFN)) Q:'ECFN  D
"RTN","ECPAT",134,0)
 .D SET
"RTN","ECPAT",135,0)
 .S CNT=CNT+1,^TMP($J,"ECRPT",CNT)=ECPAT_U_$E($$GET1^DIQ(2,(ECDFN_","),.09),6,9)_U_ECDT_U_ECLN_U_$E(ECCPT,1,5)
"RTN","ECPAT",136,0)
 .S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_U_$S(ECFILE=725:$P($G(^EC(725,+ECP,0)),U,2),1:"")_U_ECEPN_U_ECV_U_$S($D(ECRY):ECPRSN_U_ECPRSN2_U_ECPRSN3_U,1:"")_ECSN_U_ECMN_U_ECON_U_ECUN
"RTN","ECPCER")
0^17^B32347801^B20555015
"RTN","ECPCER",1,0)
ECPCER ;BIR/JPW - Event Capture PCE Data Summary ;11/7/12  11:42
"RTN","ECPCER",2,0)
 ;;2.0;EVENT CAPTURE;**4,18,23,47,72,95,119**;8 May 96;Build 12
"RTN","ECPCER",3,0)
EN ; entry point
"RTN","ECPCER",4,0)
 K DIC S DIC=2,DIC(0)="QEAMZ",DIC("A")="Select Patient: " D ^DIC K DIC G:Y<0 END S ECDFN=+Y,ECPAT=$P(Y,"^",2)
"RTN","ECPCER",5,0)
DATE K %DT S %DT="AEX",%DT("A")="Start with Date:  " D ^%DT G:Y<0 END S ECSD=Y,%DT("A")="End with Date:  " D ^%DT G:Y<0 END S ECED=Y I ECED<ECSD W !,"End date must be after start date",! G DATE
"RTN","ECPCER",6,0)
 S ECDATE=$$FMTE^XLFDT(ECSD)_"^"_$$FMTE^XLFDT(ECED),ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECPCER",7,0)
 K IOP,%ZIS,POP,IO("Q") S %ZIS("A")="Select Device: ",%ZIS="QM" W !!,"This report is designed to use a 132 column format.",! D ^%ZIS G:POP END
"RTN","ECPCER",8,0)
 I $D(IO("Q")) K IO("Q") S (ZTSAVE("ECDFN"),ZTSAVE("ECPAT"),ZTSAVE("ECDATE"),ZTSAVE("ECED"),ZTSAVE("ECSD"))="",ZTDESC="ECS/PCE PATIENT SUMMARY",ZTRTN="SUM^ECPCER",ZTIO=ION D ^%ZTLOAD,HOME^%ZIS G END
"RTN","ECPCER",9,0)
SUM ; entry when queued
"RTN","ECPCER",10,0)
 N ECEPN,ECPCODE,ECEXDS,ECEI ;119
"RTN","ECPCER",11,0)
 I $G(ECPTYP)="E" D EXPORT,^ECKILL Q  ;119
"RTN","ECPCER",12,0)
 S %H=$H D YX^%DTC S ECRDT=Y
"RTN","ECPCER",13,0)
 U IO S DATE=$O(^ECH("APAT",ECDFN,ECSD)) I 'DATE W:$Y @IOF W !!,"No Data for "_ECPAT_" during the time selected." G END
"RTN","ECPCER",14,0)
 S ECFN=+$O(^ECH("APAT",ECDFN,DATE,0)),ECL=+$P(^ECH(ECFN,0),"^",4) D HDR1
"RTN","ECPCER",15,0)
 S DATE=ECSD,(ECFN,ECOUT)=0 F  S DATE=$O(^ECH("APAT",ECDFN,DATE)) Q:'DATE!(DATE>ECED)!(ECOUT)  F  S ECFN=$O(^ECH("APAT",ECDFN,DATE,ECFN)) Q:'ECFN!(ECOUT)  D SET
"RTN","ECPCER",16,0)
 D FOOTER  ;print footer on last page
"RTN","ECPCER",17,0)
END I $D(ECGUI) D ^ECKILL Q
"RTN","ECPCER",18,0)
 W ! I $E(IOST,1,2)="C-" W !!,"Press <RET> to continue  " R X:DTIME
"RTN","ECPCER",19,0)
 W @IOF D ^%ZISC D ^ECKILL S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECPCER",20,0)
 Q
"RTN","ECPCER",21,0)
PAGE ; end of page
"RTN","ECPCER",22,0)
 I $G(X)'["?" D FOOTER
"RTN","ECPCER",23,0)
 S X="" I $E(IOST,1,2)="C-" W !!,"Press <RET> to continue, or ^ to quit   " R X:DTIME I '$T!(X="^") S ECOUT=1 Q
"RTN","ECPCER",24,0)
 I X["?" W !!,"If you want to continue with this report, press <RET>.  Entering an ^ will",!,"exit you from this option." G PAGE
"RTN","ECPCER",25,0)
 D HDR1
"RTN","ECPCER",26,0)
 Q
"RTN","ECPCER",27,0)
HDR1 ; print heading without categories
"RTN","ECPCER",28,0)
 W:$Y @IOF
"RTN","ECPCER",29,0)
 ;W !,?31,"ECS/PCE PATIENT SUMMARY FOR "_ECPAT,!,?36,"FROM "_$P(ECDATE,"^")_"   TO "_$P(ECDATE,"^",2),!!,"PROCEDURE DATE/TIME",?25,"PROCEDURE NAME SENT (VOLUME)",?78,"CPT CODE (DIAGNOSIS)",!?78,"PROCEDURE (CPT) MODIFIER"
"RTN","ECPCER",30,0)
 W !,?31,"ECS/PCE PATIENT SUMMARY FOR "_ECPAT,!,?36,"FROM "_$P(ECDATE,"^")_"   TO "_$P(ECDATE,"^",2),!!,"PROCEDURE DATE/TIME",?25,"PROCEDURE NAME SENT (VOLUME)",?78,"PROVIDER"
"RTN","ECPCER",31,0)
 ;W !,"LOCATION",?25,"CLINIC (DSS ID)",?78,"PROVIDER",!
"RTN","ECPCER",32,0)
 W !,"LOCATION",?25,"CLINIC (DSS ID)",?78,"CPT CODE"
"RTN","ECPCER",33,0)
 W !,?25,"DIAGNOSIS",?78,"PROCEDURE (CPT) MODIFIER",!
"RTN","ECPCER",34,0)
 F LINE=1:1:132 W "-"
"RTN","ECPCER",35,0)
 W !
"RTN","ECPCER",36,0)
 Q
"RTN","ECPCER",37,0)
FOOTER ;print page footer
"RTN","ECPCER",38,0)
 W !!?4,"Volume totals may represent days, minutes, numbers of procedures"
"RTN","ECPCER",39,0)
 W !?4,"and/or a combination of these."
"RTN","ECPCER",40,0)
 Q
"RTN","ECPCER",41,0)
 ;
"RTN","ECPCER",42,0)
SET ; set data
"RTN","ECPCER",43,0)
 I $G(ECPTYP)'="E" I $Y+10>IOSL D PAGE I ECOUT Q  ;119
"RTN","ECPCER",44,0)
 Q:'$D(^ECH(ECFN,"PCE"))  S ECEC=$G(^ECH(ECFN,"PCE"))
"RTN","ECPCER",45,0)
 I '$P($G(^ECH(ECFN,"P")),"^",7) Q
"RTN","ECPCER",46,0)
 S ECL=+$P(ECEC,"~",4),ECCPT=+$P(ECEC,"~",10),ECD=+$P(ECEC,"~",3),ECV=+$P(ECEC,"~",9),ECDX=+$P(ECEC,"~",11),ECID=$P(ECEC,"~",5),ECDT=+$P(ECEC,"~")
"RTN","ECPCER",47,0)
 S ECDN=$S($P($G(^SC(ECD,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPCER",48,0)
 S ECPS=$$CPT^ICPTCOD(ECCPT,$P(ECEC,"~")),ECCPT=$S(+ECPS>0:$P(ECPS,"^",2),1:""),ECEPN=$S(+ECPS>0:$P(ECPS,U,3),1:""),ECPS=$S(+ECPS>0:$P(ECPS,"^",2)_" "_$P(ECPS,"^",3),1:"CPT NAME UNKNOWN") ;119
"RTN","ECPCER",49,0)
 S ECLN=$S($P($G(^DIC(4,ECL,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPCER",50,0)
 S ECID=$S($P($G(^DIC(40.7,ECID,0)),"^",2)]"":$P(^(0),"^",2),1:"DSS ID UNKNOWN")
"RTN","ECPCER",51,0)
 S ECDXN=$P($$ICDDX^ICDCODE(ECDX,$P(ECEC,"~")),U,2) S:ECDXN="" ECDXN="UNKNOWN"
"RTN","ECPCER",52,0)
 S ECPN=$S($P(ECEC,"~",16)]"":$P(ECEC,"~",16),1:ECPS)
"RTN","ECPCER",53,0)
 S ECPCODE="" ;119
"RTN","ECPCER",54,0)
 I $P(^ECH(ECFN,0),U,9)["EC" S:$P(ECEC,"~",16)]"" ECEPN=$$GET1^DIQ(721,ECFN,8) S ECPCODE=$P($P(ECEC,"~",16)," ") ;119
"RTN","ECPCER",55,0)
 S ECU=$$GETPPRV^ECPRVMUT(ECFN,.ECUN),ECUN=$S(ECU:"UNKNOWN",1:$P(ECUN,"^",2))
"RTN","ECPCER",56,0)
 S ECUN=$S(ECUN'="UNKNOWN":$P(ECUN,",",2)_" "_$P(ECUN,","),1:"UNKNOWN")
"RTN","ECPCER",57,0)
 S ECDT=$$FMTE^XLFDT(ECDT)
"RTN","ECPCER",58,0)
 ;get secondary diagnosis codes, ALB/JAM
"RTN","ECPCER",59,0)
 S DXS=0,ECI=2,ECEI=1 F  S DXS=$O(^ECH(ECFN,"DX",DXS)) Q:'DXS  D  ;119
"RTN","ECPCER",60,0)
 . S DXSIEN=+$G(^ECH(ECFN,"DX",DXS,0)) I DXSIEN="" Q
"RTN","ECPCER",61,0)
 . S ECDXSN=$P($$ICDDX^ICDCODE(DXSIEN,$P(ECEC,"~")),"^",2) I ECDXSN="" Q
"RTN","ECPCER",62,0)
 . I $L($G(ECDXS(ECI)))+$L(ECDXSN)>52 S ECI=ECI+1
"RTN","ECPCER",63,0)
 . I $G(ECDXS(ECI))="" S ECDXS(ECI)="Secondary Dx: "
"RTN","ECPCER",64,0)
 . S ECDXS(ECI)=ECDXS(ECI)_$S($L(ECDXS(ECI))=14:"",1:", ")_ECDXSN
"RTN","ECPCER",65,0)
 . S ECEXDS(ECEI)=ECDXSN,ECEI=ECEI+1 ;119
"RTN","ECPCER",66,0)
 S ECMOD="" I $D(^ECH(ECFN,"PCE1")) S ECMOD=^("PCE1")
"RTN","ECPCER",67,0)
 I $G(ECPTYP)="E" Q  ;119
"RTN","ECPCER",68,0)
PRT W !,ECDT,?25,ECPN_" ("_ECV_")",?78,ECUN,!
"RTN","ECPCER",69,0)
 W $E(ECLN,1,22),?25,ECDN_" ("_ECID_")",?78,ECCPT,!
"RTN","ECPCER",70,0)
 W ?25,"Primary DX: ",ECDXN
"RTN","ECPCER",71,0)
 ;ALB/JAM print CPT modifiers and secondary diagnosis code
"RTN","ECPCER",72,0)
 F I=1:1 S MOD=$P(ECMOD,";",I) Q:MOD=""  D  I ECOUT Q
"RTN","ECPCER",73,0)
 . S MODESC=$$MODP^ICPTMOD(ECCPT,MOD,"E",$P(ECEC,"~")) I +MODESC'>0 Q
"RTN","ECPCER",74,0)
 . W ?25,$S(I>1:$G(ECDXS(I)),1:""),?79,"- ",MOD," ",$P(MODESC,"^",2),!
"RTN","ECPCER",75,0)
 . K ECDXS(I) I ($Y+6)>IOSL D PAGE I ECOUT Q
"RTN","ECPCER",76,0)
 W:ECMOD="" ! S DXS=""
"RTN","ECPCER",77,0)
 F  S DXS=$O(ECDXS(DXS)) Q:DXS=""  W ?25,ECDXS(DXS),!
"RTN","ECPCER",78,0)
 K I,MOD,MODESC,ECI,DXS,DXSIEN,ECDXS,ECDXN,ECDXSN
"RTN","ECPCER",79,0)
 Q
"RTN","ECPCER",80,0)
EXPORT ;Produce exportable version, added in patch 119
"RTN","ECPCER",81,0)
 N CNT,DATE,ECFN,I,MOD,MODESC
"RTN","ECPCER",82,0)
 S CNT=1
"RTN","ECPCER",83,0)
 S ^TMP($J,"ECRPT",CNT)="PATIENT^PROCEDURE DATE/TIME^LOCATION^CLINIC^DSS ID^CPT CODE^PROCEDURE CODE^PROCEDURE NAME^PROCEDURE VOLUME^CPT MOD 1^CPT MOD 2^CPT MOD 3^PROVIDER^PRIMARY DIAGNOSIS^2ND DIAG 1^2ND DIAG 2^2ND DIAG 3^2ND DIAG 4"
"RTN","ECPCER",84,0)
 S DATE=ECSD F  S DATE=$O(^ECH("APAT",ECDFN,DATE)) Q:'+DATE!(DATE>ECED)  S ECFN=0 F  S ECFN=$O(^ECH("APAT",ECDFN,DATE,ECFN)) Q:'+ECFN  D
"RTN","ECPCER",85,0)
 .Q:'$D(^ECH(ECFN,"PCE"))
"RTN","ECPCER",86,0)
 .I '$P($G(^ECH(ECFN,"P")),U,7) Q
"RTN","ECPCER",87,0)
 .K ECEXDS D SET
"RTN","ECPCER",88,0)
 .S CNT=CNT+1
"RTN","ECPCER",89,0)
 .S ^TMP($J,"ECRPT",CNT)=ECPAT_U_ECDT_U_ECLN_U_ECDN_U_ECID_U_ECCPT_U_ECPCODE_U_ECEPN_U_ECV
"RTN","ECPCER",90,0)
 .F I=1:1:3 D
"RTN","ECPCER",91,0)
 ..S MOD=$P(ECMOD,";",I),MODESC="" I MOD'="" S MODESC=$$MODP^ICPTMOD(ECCPT,MOD,"E",$P(ECEC,"~")) S MODESC=$S(+MODESC>0:MOD_" "_$P(MODESC,U,2),1:"")
"RTN","ECPCER",92,0)
 ..S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_U_MODESC
"RTN","ECPCER",93,0)
 .S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_U_ECUN_U_ECDXN
"RTN","ECPCER",94,0)
 .F I=1:1:4 S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_U_$G(ECEXDS(I))
"RTN","ECPCER",95,0)
 Q
"RTN","ECPROV2")
0^23^B4427549^B4114212
"RTN","ECPROV2",1,0)
ECPROV2 ;BIR/MAM-Event Capture Provider Summary (cont'd) ;12/11/12  09:40
"RTN","ECPROV2",2,0)
 ;;2.0;EVENT CAPTURE;**5,47,69,119**;8 May 96;Build 12
"RTN","ECPROV2",3,0)
 ;
"RTN","ECPROV2",4,0)
 D REASON^ECRUTL ;* Prompt to report Procedure Reasons
"RTN","ECPROV2",5,0)
 ;
"RTN","ECPROV2",6,0)
DATE W ! K %DT S %DT="AEX",%DT("A")="Start with Date: " D ^%DT I Y<0 S ECOUT=1 Q
"RTN","ECPROV2",7,0)
 S ECSD=Y,ECDATE=$$FMTE^XLFDT(ECSD),%DT("A")="End with Date: " D ^%DT I Y<0 S ECOUT=1 Q
"RTN","ECPROV2",8,0)
 I Y<ECSD W !!,"The ending date of the range must be later than the starting date." G DATE
"RTN","ECPROV2",9,0)
 S ECED=Y,ECDATE=ECDATE_"^"_$$FMTE^XLFDT(ECED),ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECPROV2",10,0)
 ;
"RTN","ECPROV2",11,0)
 ;ALB/ESD - Print report length informational message
"RTN","ECPROV2",12,0)
 W !,"This report is formatted for 132 column output."
"RTN","ECPROV2",13,0)
 W ! K IOP,POP,IO("Q"),%ZIS S %ZIS="QM",%ZIS("A")="Select Device: " D ^%ZIS I POP S ECOUT=1 Q
"RTN","ECPROV2",14,0)
 I $D(IO("Q")) K IO("Q") S ZTDESC="EVENT CAPTURE PROVIDER SUMMARY",ZTRTN="START^ECPROV2",ZTIO=ION_";"_IOST_";"_IOM_";"_IOSL D VAR,^%ZTLOAD,HOME^%ZIS K ZTSK Q
"RTN","ECPROV2",15,0)
 U IO
"RTN","ECPROV2",16,0)
START ; entry when queued
"RTN","ECPROV2",17,0)
 N ECPRV
"RTN","ECPROV2",18,0)
 K ^TMP("ECTMP",$J) S ECINC=0 ;119 Change temporary storage location
"RTN","ECPROV2",19,0)
 S ECPRV=$S(ECD="SOME":1,ECD="ALL":2,1:0) D ^ECPROV3
"RTN","ECPROV2",20,0)
 K ^TMP("ECTMP",$J) I $D(ECGUI) D ^ECKILL Q  ;119
"RTN","ECPROV2",21,0)
 G:$D(ZTQUEUED) END
"RTN","ECPROV2",22,0)
 Q
"RTN","ECPROV2",23,0)
VAR ; set ZTSAVE array
"RTN","ECPROV2",24,0)
 S:'$D(UNIT) UNIT="" S (ZTSAVE("ECD*"),ZTSAVE("ECL*"),ZTSAVE("ECED"),ZTSAVE("ECSD"),ZTSAVE("ECDATE"),ZTSAVE("UNIT*"))=""
"RTN","ECPROV2",25,0)
 S ZTSAVE("ECRY")=""
"RTN","ECPROV2",26,0)
 Q
"RTN","ECPROV2",27,0)
END W @IOF D ^%ZISC W !! D ^ECKILL S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECPROV2",28,0)
 Q
"RTN","ECPROV3")
0^26^B73930927^B40301318
"RTN","ECPROV3",1,0)
ECPROV3 ;BIR/MAM,JPW - Event Capture Provider Summary (cont'd) ;11/20/12  13:49
"RTN","ECPROV3",2,0)
 ;;2.0;EVENT CAPTURE;**5,8,18,29,47,56,63,72,95,112,119**;8 May 96;Build 12
"RTN","ECPROV3",3,0)
 ; This routine is used when printing the report for
"RTN","ECPROV3",4,0)
 ; all ACCESSIBLE DSS Units
"RTN","ECPROV3",5,0)
 ;JAM/3/7/03, This routine now combines ECPROV3, ECPROV4 and ECPROV5
"RTN","ECPROV3",6,0)
 ;
"RTN","ECPROV3",7,0)
 ;119 Changed all ^TMP($J references to ^TMP("ECTMP",$J so that temporary storage doesn't conflict with exporting data in ^TMP($J
"RTN","ECPROV3",8,0)
 N %H ;112
"RTN","ECPROV3",9,0)
 S %H=$H D YX^%DTC S ECRDT=Y
"RTN","ECPROV3",10,0)
 I ECL D  D LOC D:$G(ECPTYP)="E" EXPORT D:$G(ECPTYP)'="E" PRINT Q  ;119 Q
"RTN","ECPROV3",11,0)
 .I ECPRV=1 D UNIT Q
"RTN","ECPROV3",12,0)
 .I 'ECPRV S ECC=+$P(^ECD(ECD,0),U,11) Q
"RTN","ECPROV3",13,0)
 S ECL=0 D
"RTN","ECPROV3",14,0)
 .F I=0:0 S ECL=$O(^ECH("ADT",ECL)) Q:'ECL  D
"RTN","ECPROV3",15,0)
 ..S ECLN=$P(^DIC(4,ECL,0),"^") I ECPRV D UNIT
"RTN","ECPROV3",16,0)
 ..I 'ECPRV S ECC=+$P(^ECD(ECD,0),U,11)
"RTN","ECPROV3",17,0)
 ..D LOC
"RTN","ECPROV3",18,0)
 I $G(ECPTYP)="E" D EXPORT Q  ;119
"RTN","ECPROV3",19,0)
PRINT ;Changes below were made by VMP to correct NOIS ATG-1003-32545
"RTN","ECPROV3",20,0)
 S (ECLN,ECPN)=0,ECCN=""
"RTN","ECPROV3",21,0)
 F I=0:0 S ECLN=$O(^TMP("ECTMP",$J,ECLN)) Q:ECLN=""!(ECOUT)!(ECLN["^")  D
"RTN","ECPROV3",22,0)
 .I 'ECPRV D CATS Q
"RTN","ECPROV3",23,0)
 . S ECDN="" D NOUNIT F I=0:0 S ECDN=$O(^TMP("ECTMP",$J,ECLN,ECDN)) Q:ECDN=""!(ECOUT)  D CATS
"RTN","ECPROV3",24,0)
 K ECPNAM
"RTN","ECPROV3",25,0)
 D FOOTER  ;print footer on last page
"RTN","ECPROV3",26,0)
 Q
"RTN","ECPROV3",27,0)
CATS ; continue looping
"RTN","ECPROV3",28,0)
 I $O(^TMP("ECTMP",$J,ECLN,ECDN,""))']"" D PAGE W !!!,?12,"NO PROCEDURES" S ECPG=1 Q
"RTN","ECPROV3",29,0)
 D PAGE Q:ECOUT  S ECPG=1,ECUN=0 F I=0:0 S ECUN=$O(^TMP("ECTMP",$J,ECLN,ECDN,ECUN)) Q:ECUN=""!(ECOUT)  S ECINZ="^"_$O(^(ECUN,0)) D:$Y+10>IOSL PAGE Q:ECOUT  D PRO
"RTN","ECPROV3",30,0)
 Q
"RTN","ECPROV3",31,0)
PRO I $Y+13>IOSL D PAGE I ECOUT Q
"RTN","ECPROV3",32,0)
 W !!,ECUN S ECCN=0 F I=0:0 S ECCN=$O(^TMP("ECTMP",$J,ECINZ,ECCN)) D:ECCN="" TOTP Q:ECCN=""!(ECOUT)  D MORE
"RTN","ECPROV3",33,0)
 Q
"RTN","ECPROV3",34,0)
MORE ;
"RTN","ECPROV3",35,0)
 ;ALB/ESD - Loop through to get procedure reason and print
"RTN","ECPROV3",36,0)
 W !,?3,ECCN S ECPN=0,(ECPRSN,ECPI)=""
"RTN","ECPROV3",37,0)
 F  S ECPN=$O(^TMP("ECTMP",$J,ECINZ,ECCN,ECPN)) Q:ECPN=""!(ECOUT)  S ECUSER=1 D:$Y+10>IOSL PAGE Q:ECOUT  K ECUSER F  S ECPRSN=$O(^TMP("ECTMP",$J,ECINZ,ECCN,ECPN,ECPRSN)) Q:ECPRSN=""!(ECOUT)  DO
"RTN","ECPROV3",38,0)
 .S ECCPT=$S($P(ECPN,"~",3)="I":$P(ECPN,"~",2),1:$P($G(^EC(725,$P(ECPN,"~",2),0)),"^",5))
"RTN","ECPROV3",39,0)
 .I ECCPT'="" D
"RTN","ECPROV3",40,0)
 ..;Changes made by VMP to correct NOIS ATG-1003-32545
"RTN","ECPROV3",41,0)
 ..;use end date/date range to get CPT description; CTD project.
"RTN","ECPROV3",42,0)
 ..S ECPI=$$CPT^ICPTCOD(ECCPT,$P(ECED,".")),ECCPT=$P(ECPI,"^",2)
"RTN","ECPROV3",43,0)
 .S EC725="" I $P(ECPN,"~",3)="E" S EC725=$G(^EC(725,+$P(ECPN,"~",2),0))
"RTN","ECPROV3",44,0)
 .S ECPNAM=$S($P(ECPN,"~",3)="E":$P(EC725,"^"),$P(ECPN,"~",3)="I":$P(ECPI,"^",3),1:"UNKNOWN") ;112
"RTN","ECPROV3",45,0)
 .S ECPSY=$P(ECPN,"~",4),ECPSYN=""
"RTN","ECPROV3",46,0)
 .I ECPSY'="" S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2)
"RTN","ECPROV3",47,0)
 .W !,?6,$J(ECCPT_" ",6),$J($S($P($G(EC725),"^",2)="":ECCPT_" ",1:$P($G(EC725),"^",2)_" "),6),?18,$E(ECPNAM,1,40) ;112
"RTN","ECPROV3",48,0)
 .W:ECPSYN'="" " [",$E(ECPSYN,1,25),"]"
"RTN","ECPROV3",49,0)
 .W:$D(ECRY) ?70,ECPRSN
"RTN","ECPROV3",50,0)
 .W ?105,$J(^TMP("ECTMP",$J,ECINZ,ECCN,ECPN,ECPRSN),6)
"RTN","ECPROV3",51,0)
 .;print CPT procedure modifiers
"RTN","ECPROV3",52,0)
 .S IEN=""
"RTN","ECPROV3",53,0)
 .F  S IEN=$O(^TMP("ECTMP",$J,ECINZ,ECCN,ECPN,ECPRSN,"MOD",IEN)) Q:IEN=""  D  I ECOUT Q
"RTN","ECPROV3",54,0)
 ..;used end date to get description,CTD project
"RTN","ECPROV3",55,0)
 ..S MODI=$$MOD^ICPTMOD(IEN,"I",$P(ECED,"."))
"RTN","ECPROV3",56,0)
 ..S MOD=$P(MODI,"^",2) I MOD="" K MODI Q
"RTN","ECPROV3",57,0)
 ..S MODESC=$P(MODI,"^",3) I MODESC="" S MODESC="UNKNOWN"
"RTN","ECPROV3",58,0)
 ..S MODAMT=^TMP("ECTMP",$J,ECINZ,ECCN,ECPN,ECPRSN,"MOD",IEN)
"RTN","ECPROV3",59,0)
 ..W !?10,"- ",MOD," ",MODESC," (",MODAMT,")"
"RTN","ECPROV3",60,0)
 ..I ($Y+6)>IOSL D PAGE
"RTN","ECPROV3",61,0)
 .K MODESC,MOD,IEN,MODAMT,MODI,EC725
"RTN","ECPROV3",62,0)
 Q
"RTN","ECPROV3",63,0)
LOC S (ECDFN,ECOUT,^TMP("ECTMP",$J,ECLN))=0
"RTN","ECPROV3",64,0)
 F I=0:0 S ECDFN=$O(^ECH("ADT",ECL,ECDFN)) Q:'ECDFN  D
"RTN","ECPROV3",65,0)
 .I ECPRV D GECD Q
"RTN","ECPROV3",66,0)
 .D GMM
"RTN","ECPROV3",67,0)
 Q
"RTN","ECPROV3",68,0)
GECD S ECD=0 F I=0:0 S ECD=$O(^ECH("ADT",ECL,ECDFN,ECD)) Q:'ECD  D GMM
"RTN","ECPROV3",69,0)
 Q
"RTN","ECPROV3",70,0)
GMM S MM=ECSD F I=0:0 S MM=$O(^ECH("ADT",ECL,ECDFN,ECD,MM)) Q:'MM!(MM>ECED)  D LOC1
"RTN","ECPROV3",71,0)
 Q
"RTN","ECPROV3",72,0)
LOC1 S ECFN=0 F I=0:0 S ECFN=$O(^ECH("ADT",ECL,ECDFN,ECD,MM,ECFN)) Q:'ECFN  D UTL
"RTN","ECPROV3",73,0)
 Q
"RTN","ECPROV3",74,0)
UTL ; set ^TMP("ECTMP",$J
"RTN","ECPROV3",75,0)
 Q:'$D(^ECH(+ECFN,0))!(+$G(ECD)'=$P($G(^ECH(+ECFN,0)),"^",7))
"RTN","ECPROV3",76,0)
 S ECEC=^ECH(+ECFN,0),ECV=+$P(ECEC,"^",10),ECC=+$P(ECEC,"^",8)
"RTN","ECPROV3",77,0)
 ;S ECP=$P(ECEC,"^",9),ECU=+$P(ECEC,"^",11)
"RTN","ECPROV3",78,0)
 S ECP=$P(ECEC,"^",9),ECU=$$GETPPRV^ECPRVMUT(ECFN,.ECUN),ECUN=$S(ECU:"UNKNOWN",1:$P(ECUN,"^",2))
"RTN","ECPROV3",79,0)
 S ECCN=$S($P($G(^EC(726,ECC,0)),"^")]"":$P(^(0),"^"),1:"None")
"RTN","ECPROV3",80,0)
 Q:ECP']""
"RTN","ECPROV3",81,0)
 S ECD=+$P(ECEC,"^",7)
"RTN","ECPROV3",82,0)
 I ECPRV=1 Q:'$D(ECDU(ECD))  S ECDN=ECDU(ECD)
"RTN","ECPROV3",83,0)
 I ECPRV=2 S ECDN=$S($P($G(^ECD(ECD,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPROV3",84,0)
 ;S ECUN=$S($P($G(^VA(200,ECU,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPROV3",85,0)
 S ECPSY=+$O(^ECJ("AP",ECL,ECD,ECC,ECP,"")),ECPN=""
"RTN","ECPROV3",86,0)
 S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECPROV3",87,0)
 I ECFILE=81 S ECPN=$P($$CPT^ICPTCOD(+ECP,$P(ECED,".")),"^",3)
"RTN","ECPROV3",88,0)
 I ECFILE=725 S ECPN=$P($G(^EC(725,+ECP,0)),"^")
"RTN","ECPROV3",89,0)
 I ECFILE="UNKNOWN"!(ECPN="") S ECPN="UNKNOWN"
"RTN","ECPROV3",90,0)
 ;Changes made by VMP to correct NOIS SDC-1003-60397
"RTN","ECPROV3",91,0)
 S ECPN=$E(ECPN,1,5)_"~"_$P(ECP,";")_"~"_$E($P(ECP,";",2))_"~"_ECPSY
"RTN","ECPROV3",92,0)
 ;Get Procedure CPT modifiers
"RTN","ECPROV3",93,0)
 S ECMODF=0 K ECMOD
"RTN","ECPROV3",94,0)
 I $O(^ECH(+ECFN,"MOD",0))'="" S ECMODF=$$MOD^ECUTL(+ECFN,"I",.ECMOD)
"RTN","ECPROV3",95,0)
 ;
"RTN","ECPROV3",96,0)
 ;ALB/ESD - Get procedure reason from EC Patient file (#721) record
"RTN","ECPROV3",97,0)
 N ECLNK
"RTN","ECPROV3",98,0)
 S ECPRSN=""
"RTN","ECPROV3",99,0)
 S ECLNK=+$P(ECEC,"^",23)
"RTN","ECPROV3",100,0)
 I +ECLNK>0 DO
"RTN","ECPROV3",101,0)
 .S ECPRSN=$P($G(^ECL(ECLNK,0)),"^",1)
"RTN","ECPROV3",102,0)
 .S:+ECPRSN'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPROV3",103,0)
 .S:+ECPRSN>0 ECPRSN=$P(^ECR(ECPRSN,0),"^",1)
"RTN","ECPROV3",104,0)
 S:+ECLNK'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPROV3",105,0)
 I '$D(ECRY) S ECPRSN="REASON NOT DEFINED" ;group proc reason-not print
"RTN","ECPROV3",106,0)
 I '$D(^TMP("ECTMP",$J,ECLN,ECDN,ECUN)) S ECINC=ECINC+1,ECINZ="^"_ECINC,^(ECUN)=0,^(ECUN,ECINC)=0
"RTN","ECPROV3",107,0)
 S ECINZ="^"_$O(^TMP("ECTMP",$J,ECLN,ECDN,ECUN,0))
"RTN","ECPROV3",108,0)
 I '$D(^TMP("ECTMP",$J,ECINZ,ECCN)) S ^TMP("ECTMP",$J,ECINZ,ECCN)=0
"RTN","ECPROV3",109,0)
 ;
"RTN","ECPROV3",110,0)
 ;ALB/ESD - Add procedure reason to ^TMP array
"RTN","ECPROV3",111,0)
 I '$D(^TMP("ECTMP",$J,ECINZ,ECCN,ECPN,ECPRSN)) S ^TMP("ECTMP",$J,ECINZ,ECCN,ECPN,ECPRSN)=0
"RTN","ECPROV3",112,0)
 S ^TMP("ECTMP",$J,ECLN)=^TMP("ECTMP",$J,ECLN)+ECV
"RTN","ECPROV3",113,0)
 S ^TMP("ECTMP",$J,ECLN,ECDN,ECUN)=^TMP("ECTMP",$J,ECLN,ECDN,ECUN)+ECV
"RTN","ECPROV3",114,0)
 S ^TMP("ECTMP",$J,ECINZ,ECCN)=^TMP("ECTMP",$J,ECINZ,ECCN)+ECV
"RTN","ECPROV3",115,0)
 ;
"RTN","ECPROV3",116,0)
 ;ALB/ESD - Add procedure reason to ^TMP array
"RTN","ECPROV3",117,0)
 S ^TMP("ECTMP",$J,ECINZ,ECCN,ECPN,ECPRSN)=^TMP("ECTMP",$J,ECINZ,ECCN,ECPN,ECPRSN)+ECV
"RTN","ECPROV3",118,0)
 ;ALB/JAM - Add Procedure CPT modifier to ^TMP array
"RTN","ECPROV3",119,0)
 S MOD="" F  S MOD=$O(ECMOD(MOD)) Q:MOD=""  D
"RTN","ECPROV3",120,0)
 . S ^TMP("ECTMP",$J,ECINZ,ECCN,ECPN,ECPRSN,"MOD",MOD)=$G(^TMP("ECTMP",$J,ECINZ,ECCN,ECPN,ECPRSN,"MOD",MOD))+ECV
"RTN","ECPROV3",121,0)
 Q
"RTN","ECPROV3",122,0)
PAGE ; end of page
"RTN","ECPROV3",123,0)
 D:$D(ECPG) FOOTER
"RTN","ECPROV3",124,0)
 I $D(ECPG),$E(IOST,1,2)="C-" W !!,"Press <RET> to continue, or ^ to quit  " R X:DTIME I '$T!(X="^") S ECOUT=1 Q
"RTN","ECPROV3",125,0)
HDR ; print heading
"RTN","ECPROV3",126,0)
 W:$Y @IOF W !!,?49,"EVENT CAPTURE PROVIDER SUMMARY",!,?49,"FROM "_$P(ECDATE,"^")_"  TO "_$P(ECDATE,"^",2),!,?49,"Run Date : ",ECRDT
"RTN","ECPROV3",127,0)
 W !!?3,"Category",?105,"Procedure/Reason",!,?6,"CPT",?12,"Proc",?18,"Procedure Name" ;112
"RTN","ECPROV3",128,0)
 W:$D(ECRY) ?70,"Procedure Reason #1" ;112
"RTN","ECPROV3",129,0)
 W ?105,"Volume*",!,?6,"Code",?12,"Code",!,?10,"CPT Modifier (volume)",! ;112
"RTN","ECPROV3",130,0)
 F LINE=1:1:132 W "-"
"RTN","ECPROV3",131,0)
 W !!,"Location: "_ECLN,! W:ECDN]"" "DSS Unit: "_ECDN
"RTN","ECPROV3",132,0)
 I ECPRV,$D(ECUSER) W !!,ECUN,!,ECCN
"RTN","ECPROV3",133,0)
 Q
"RTN","ECPROV3",134,0)
FOOTER ;print page footer
"RTN","ECPROV3",135,0)
 W !!?4,"*Volume totals may represent days, minutes, numbers of procedures and/or a combination of these."
"RTN","ECPROV3",136,0)
 I $G(ECRY)'="" W !?4,"Procedure/Reason Volume = count of unique combinations of procedure code and procedure reason" ;112
"RTN","ECPROV3",137,0)
 Q
"RTN","ECPROV3",138,0)
 ;
"RTN","ECPROV3",139,0)
TOTP Q:ECOUT  W !,?105,"------",!,"Total Procedures for "_ECUN,?105,$J(^TMP("ECTMP",$J,ECLN,ECDN,ECUN),6)
"RTN","ECPROV3",140,0)
 Q
"RTN","ECPROV3",141,0)
UNIT ; set units
"RTN","ECPROV3",142,0)
 S CNT=0 F I=0:0 S CNT=$O(UNIT(CNT)) Q:'CNT  S ECDU(+UNIT(CNT))=$P(UNIT(CNT),"^",2)
"RTN","ECPROV3",143,0)
 Q
"RTN","ECPROV3",144,0)
 ;
"RTN","ECPROV3",145,0)
NOUNIT ;Nothing there
"RTN","ECPROV3",146,0)
 I $O(^TMP("ECTMP",$J,ECLN,ECDN))']"" D PAGE W !!!,?12,"NO PROCEDURES",! S ECPG=1
"RTN","ECPROV3",147,0)
 Q
"RTN","ECPROV3",148,0)
 ;
"RTN","ECPROV3",149,0)
EXPORT ;119 Entire section added in patch 119 for exporting data to excel
"RTN","ECPROV3",150,0)
 N CNT,ECLN,ECPN,ECCN,I,ECDN,ECINZ,ECUN,ECPRSN,ECPI,ECCPT,EC725,ECPNAM,ECPSY,ECPSYN,MOD1,VOL1,MOD2,VOL2,MOD3,VOL3
"RTN","ECPROV3",151,0)
 S CNT=1,^TMP($J,"ECRPT",CNT)="LOCATION^DSS UNIT^CATEGORY^PROVIDER^CPT CODE^PROCEDURE CODE^PROCEDURE NAME^PROCEDURE REASON#1^PROCEDURE/REASON VOLUME^CPT MOD 1^CPT MOD 1 VOL^CPT MOD 2^CPT MOD 2 VOL^CPT MOD 3^CPT MOD 3 VOL"
"RTN","ECPROV3",152,0)
 S ECLN=0 F  S ECLN=$O(^TMP("ECTMP",$J,ECLN)) Q:ECLN=""!(ECLN["^")  D
"RTN","ECPROV3",153,0)
 .S ECDN="" F  S ECDN=$O(^TMP("ECTMP",$J,ECLN,ECDN)) Q:ECDN=""  D
"RTN","ECPROV3",154,0)
 ..S ECUN=0 F  S ECUN=$O(^TMP("ECTMP",$J,ECLN,ECDN,ECUN)) Q:ECUN=""  D
"RTN","ECPROV3",155,0)
 ...S ECINZ="^"_$O(^TMP("ECTMP",$J,ECLN,ECDN,ECUN,0))
"RTN","ECPROV3",156,0)
 ...S ECCN=0 F  S ECCN=$O(^TMP("ECTMP",$J,ECINZ,ECCN)) Q:ECCN=""  D
"RTN","ECPROV3",157,0)
 ....S ECPN=0 F  S ECPN=$O(^TMP("ECTMP",$J,ECINZ,ECCN,ECPN)) Q:ECPN=""  D
"RTN","ECPROV3",158,0)
 .....S ECPRSN="" F  S ECPRSN=$O(^TMP("ECTMP",$J,ECINZ,ECCN,ECPN,ECPRSN)) Q:ECPRSN=""  D
"RTN","ECPROV3",159,0)
 ......S ECPI="",ECCPT=$S($P(ECPN,"~",3)="I":$P(ECPN,"~",2),1:$P($G(^EC(725,$P(ECPN,"~",2),0)),U,5)) I ECCPT'="" S ECPI=$$CPT^ICPTCOD(ECCPT,$P(ECED,".")),ECCPT=$P(ECPI,U,2)
"RTN","ECPROV3",160,0)
 ......S EC725="" I $P(ECPN,"~",3)="E" S EC725=$G(^EC(725,+$P(ECPN,"~",2),0))
"RTN","ECPROV3",161,0)
 ......S ECPNAM=$S($P(ECPN,"~",3)="E":$P(EC725,U),$P(ECPN,"~",3)="I":$P(ECPI,U,3),1:"UNKNOWN")
"RTN","ECPROV3",162,0)
 ......S ECPSY=$P(ECPN,"~",4),ECPSYN="" I ECPSY'="" S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),U,2)
"RTN","ECPROV3",163,0)
 ......S CNT=CNT+1,^TMP($J,"ECRPT",CNT)=ECLN_U_ECDN_U_ECCN_U_ECUN_U_ECCPT_U_$S($P($G(EC725),U,2)="":ECCPT,1:$P($G(EC725),U,2))_U_ECPNAM_$S(ECPSYN'="":" ["_ECPSYN_"]",1:"")_U_ECPRSN_U_^TMP("ECTMP",$J,ECINZ,ECCN,ECPN,ECPRSN)
"RTN","ECPROV3",164,0)
 ......D ORDMODS S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_U_MOD1_U_VOL1_U_MOD2_U_VOL2_U_MOD3_U_VOL3
"RTN","ECPROV3",165,0)
 Q
"RTN","ECPROV3",166,0)
 ;119, sections added to order CPT modifiers
"RTN","ECPROV3",167,0)
ORDMODS ;Find first three mods by volume
"RTN","ECPROV3",168,0)
 N MOD,ORD,VOL,NUM
"RTN","ECPROV3",169,0)
 S (MOD1,VOL1,MOD2,VOL2,MOD3,VOL3)="",NUM=0
"RTN","ECPROV3",170,0)
 S MOD="" F  S MOD=$O(^TMP("ECTMP",$J,ECINZ,ECCN,ECPN,ECPRSN,"MOD",MOD)) Q:'+MOD  S ORD(-^TMP("ECTMP",$J,ECINZ,ECCN,ECPN,ECPRSN,"MOD",MOD),MOD)=""
"RTN","ECPROV3",171,0)
 I $D(ORD) S VOL="" F  S VOL=$O(ORD(VOL)) Q:VOL=""!(NUM=3)  S MOD="" F  S MOD=$O(ORD(VOL,MOD)) Q:MOD=""!(NUM=3)   S NUM=NUM+1 S @("MOD"_NUM)=$$MODNM(MOD),@("VOL"_NUM)=-VOL
"RTN","ECPROV3",172,0)
 Q
"RTN","ECPROV3",173,0)
 ;
"RTN","ECPROV3",174,0)
MODNM(IEN) ;Get modifier name
"RTN","ECPROV3",175,0)
 N MOD,MODI,MODESC
"RTN","ECPROV3",176,0)
 S MODI=$$MOD^ICPTMOD(IEN,"I",$P(ECED,"."))
"RTN","ECPROV3",177,0)
 S MOD=$P(MODI,U,2) I MOD="" Q MOD
"RTN","ECPROV3",178,0)
 S MODESC=$S($P(MODI,U,3)'="":$P(MODI,U,3),1:"Unknown")
"RTN","ECPROV3",179,0)
 Q MOD_" "_MODESC
"RTN","ECPRSUM1")
0^10^B45928925^B30118950
"RTN","ECPRSUM1",1,0)
ECPRSUM1 ;BIR/DMA,RHK,JPW - Provider Summary (1 to 7) ;11/8/12  16:38
"RTN","ECPRSUM1",2,0)
 ;;2.0;EVENT CAPTURE;**5,18,33,47,62,63,61,72,88,95,112,119**;8 May 96;Build 12
"RTN","ECPRSUM1",3,0)
 ;In patch 119, temporary data storage for the report was moved from
"RTN","ECPRSUM1",4,0)
 ;^TMP($J to ^TMP("ECTMP",$J so that the exportable version of the
"RTN","ECPRSUM1",5,0)
 ;report, which is returned in ^TMP($J,"ECRPT", wouldn't be deleted upon
"RTN","ECPRSUM1",6,0)
 ;completion. That change occurred in many lines in this routine.
"RTN","ECPRSUM1",7,0)
 ;
"RTN","ECPRSUM1",8,0)
 S DIC=200,DIC(0)="AQEMZ",DIC("A")="Select Provider: "
"RTN","ECPRSUM1",9,0)
 D ^DIC K DIC G END:Y<0 S ECU=+Y,ECUN=$P(Y,"^",2)
"RTN","ECPRSUM1",10,0)
 ;D REASON^ECRUTL ;* Prompt to include Procedure Reasons. 112, Remove reasons from report
"RTN","ECPRSUM1",11,0)
 I ($D(DIRUT))!($D(DUOUT)) G END
"RTN","ECPRSUM1",12,0)
BDATE K %DT S %DT="AEX",%DT("A")="Starting with Date: "
"RTN","ECPRSUM1",13,0)
 D ^%DT G:Y<0 END S ECSD=Y
"RTN","ECPRSUM1",14,0)
EDATE K %DT S %DT="AEX",%DT("A")="Ending with Date: " D ^%DT G:Y<0 END
"RTN","ECPRSUM1",15,0)
 I Y<ECSD D  G EDATE
"RTN","ECPRSUM1",16,0)
 .W !!,"The ending date cannot be earlier than the starting date.  "
"RTN","ECPRSUM1",17,0)
 .W "Please re-enter",!,"the ending date.",!
"RTN","ECPRSUM1",18,0)
 S ECED=Y,ECDATE=ECSD_"^"_ECED
"RTN","ECPRSUM1",19,0)
DEV ;dev call
"RTN","ECPRSUM1",20,0)
 W !!,"This report is formatted for 132 column output.",!!
"RTN","ECPRSUM1",21,0)
 S %ZIS="Q",%ZIS("A")="Select Device: " D ^%ZIS G END:POP
"RTN","ECPRSUM1",22,0)
 I $D(IO("Q")) K ZTSAVE S (ZTSAVE("ECRY"),ZTSAVE("ECSD"),ZTSAVE("ECDATE"),ZTSAVE("ECED"),ZTSAVE("ECU"),ZTSAVE("ECUN"))="",ZTDESC="Event Capture Provider Summary",ZTRTN="EN^ECPRSUM1" D ^%ZTLOAD,HOME^%ZIS K ZTSK G END
"RTN","ECPRSUM1",23,0)
 ;
"RTN","ECPRSUM1",24,0)
EN ;QUEUED ENTRY POINT
"RTN","ECPRSUM1",25,0)
 N ECPG,ECGT,EC,ECCAT,ECPXD,MODI,ECI,ECPRV,RK,A,ECX,EC725,ECEPN ;119
"RTN","ECPRSUM1",26,0)
 I $G(ECPTYP)'="E" U IO ;119 Only need IO if not exporting
"RTN","ECPRSUM1",27,0)
 S (ECOUT,ECPG)=0 F ECI=1:1:7 S ECGT(ECI)=0,A(ECI)=0
"RTN","ECPRSUM1",28,0)
 K ^TMP("ECTMP",$J) S ECOUT=0,ECSD=ECSD-.1,ECED=ECED+.3
"RTN","ECPRSUM1",29,0)
 F ECD=ECSD:0 S ECD=$O(^ECH("AC",ECD)) Q:'ECD  Q:ECD>ECED  F DA=0:0 S DA=$O(^ECH("AC",ECD,DA)) Q:'DA  I $D(^ECH("APRV",ECU,DA)) S EC=$G(^ECH(DA,0)) D 
"RTN","ECPRSUM1",30,0)
 .K ECPRV S ECPRV=$$GETPRV^ECPRVMUT(DA,.ECPRV),ECX=0 I ECPRV Q
"RTN","ECPRSUM1",31,0)
 .F ECI=1:1:7 S A(ECI)=0
"RTN","ECPRSUM1",32,0)
 .F ECI=1:1:7 S ECX=$O(ECPRV(ECX)) Q:'ECX  D
"RTN","ECPRSUM1",33,0)
 ..S A(ECI)=$P(ECPRV(ECX),U)=ECU
"RTN","ECPRSUM1",34,0)
 .S ECX=A(1)=A(2)=A(3)=A(4)=A(5)=A(6)=A(7) I 'ECX Q
"RTN","ECPRSUM1",35,0)
 .S ECPAT=+$P(EC,"^",2),PA=$G(^DPT(ECPAT,0)),SS=$P(PA,"^",9)
"RTN","ECPRSUM1",36,0)
 .S PA=$S($P(PA,"^")]"":$P(PA,"^"),1:"UNKNOWN"),ECP=$P(EC,"^",9)
"RTN","ECPRSUM1",37,0)
 .Q:ECP']""
"RTN","ECPRSUM1",38,0)
 .S ECLOC=+$P(EC,U,4),ECUNIT=+$P(EC,U,7),ECCAT=+$P(EC,U,8)
"RTN","ECPRSUM1",39,0)
 .S ECPSY=+$O(^ECJ("AP",ECLOC,ECUNIT,ECCAT,ECP,""))
"RTN","ECPRSUM1",40,0)
 .S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2)
"RTN","ECPRSUM1",41,0)
 .S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECPRSUM1",42,0)
 .I ECFILE="UNKNOWN" S ECPN="UNKNOWN"
"RTN","ECPRSUM1",43,0)
 .S ECCPT=$S(ECFILE=81:+ECP,1:$P($G(^EC(725,+ECP,0)),"^",5)),ECPXD=""
"RTN","ECPRSUM1",44,0)
 .I ECCPT'="" D
"RTN","ECPRSUM1",45,0)
 ..S ECPXD=$$CPT^ICPTCOD(ECCPT,$P(ECED,".")),ECCPT=$P(ECPXD,"^",2)_" "
"RTN","ECPRSUM1",46,0)
 .I ECFILE=81 S ECPN=$S($P(ECPXD,"^",3)]"":$P(ECPXD,"^",3),1:"UNKNOWN")
"RTN","ECPRSUM1",47,0)
 .I ECFILE=725 S EC725=$G(^EC(725,+ECP,0)),ECPN=$P(EC725,"^",2)_" "_$P(EC725,"^")
"RTN","ECPRSUM1",48,0)
 .S ECEPN=$S(ECFILE=81:ECPN,1:$P(EC725,U))_$S(ECPSYN]"":" ["_ECPSYN_"]",1:"") ;119
"RTN","ECPRSUM1",49,0)
 .S ECPTDS=ECCPT_ECPN_$S(ECPSYN]"":" ["_ECPSYN_"] ",1:"")
"RTN","ECPRSUM1",50,0)
 .;Get Procedure CPT modifiers
"RTN","ECPRSUM1",51,0)
 . K ECMOD S ECMODF=0 I $O(^ECH(DA,"MOD",0))'="" D
"RTN","ECPRSUM1",52,0)
 ..S ECMODF=$$MOD^ECUTL(DA,"I",.ECMOD)
"RTN","ECPRSUM1",53,0)
 ..;K ECMOD S ECMODF=$$MOD^ECUTL(DA,"I",.ECMOD)
"RTN","ECPRSUM1",54,0)
 .;
"RTN","ECPRSUM1",55,0)
 .;ALB/ESD - Get procedure reason from EC Patient file (#721) record
"RTN","ECPRSUM1",56,0)
 .S ECPRSN="",ECLNK=+$P(EC,"^",23)
"RTN","ECPRSUM1",57,0)
 .I +ECLNK>0 DO
"RTN","ECPRSUM1",58,0)
 ..S ECPRSN=$P($G(^ECL(ECLNK,0)),"^",1)
"RTN","ECPRSUM1",59,0)
 ..S:+ECPRSN'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPRSUM1",60,0)
 ..S:+ECPRSN>0 ECPRSN=$P(^ECR(ECPRSN,0),"^",1)
"RTN","ECPRSUM1",61,0)
 .S:+ECLNK'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPRSUM1",62,0)
 .I '$D(ECRY) S ECPRSN="REASON NOT DEFINED"
"RTN","ECPRSUM1",63,0)
 .;
"RTN","ECPRSUM1",64,0)
 .;ALB/ESD - Add procedure reason to ^TMP array
"RTN","ECPRSUM1",65,0)
 .S PRO=ECCPT_ECPN I PRO]"" S V=+$P(EC,"^",10) D
"RTN","ECPRSUM1",66,0)
 ..F J=1:1:7 I A(J) S ^(J)=$G(^TMP("ECTMP",$J,PRO,ECPRSN,PA_"^"_SS,J))+V D
"RTN","ECPRSUM1",67,0)
 ...I $G(^TMP("ECTMP",$J,PRO))="" S ^TMP("ECTMP",$J,PRO)=ECPTDS
"RTN","ECPRSUM1",68,0)
 ..;ALB/JAM - Add Procedure CPT modifier to ^TMP array
"RTN","ECPRSUM1",69,0)
 ..S MOD="" F  S MOD=$O(ECMOD(MOD)) Q:MOD=""  D
"RTN","ECPRSUM1",70,0)
 ...S ^TMP("ECTMP",$J,PRO,ECPRSN,PA_"^"_SS,"MOD",MOD)=$G(^TMP("ECTMP",$J,PRO,ECPRSN,PA_"^"_SS,"MOD",MOD))+V
"RTN","ECPRSUM1",71,0)
 .I $G(ECPTYP)="E" S ^TMP("ECTMP",$J,PRO,ECPRSN,PA_U_SS,"EXPORT")=$P($G(ECCPT)," ")_U_$S(ECFILE=725:$P(EC725,U,2),1:"")_U_$G(ECEPN) ;119 additional information needed for export
"RTN","ECPRSUM1",72,0)
 K ECLNK,MOD,ECPTDS
"RTN","ECPRSUM1",73,0)
 I $G(ECPTYP)="E" D EXPORT,^ECKILL K ^TMP("ECTMP",$J) Q  ;119 If exporting, process and then quit
"RTN","ECPRSUM1",74,0)
 ;
"RTN","ECPRSUM1",75,0)
PRINT ;print report
"RTN","ECPRSUM1",76,0)
 S ECSD=$P(ECDATE,"^"),ECED=$P(ECDATE,"^",2)
"RTN","ECPRSUM1",77,0)
 D HDR I '$D(^TMP("ECTMP",$J)) W !!,?12,"No Event Capture Provider Summary for "_ECUN_" to report for the date range selected.",!! D PAGE G END
"RTN","ECPRSUM1",78,0)
 F ECI=1:1:7 S A(ECI)=0
"RTN","ECPRSUM1",79,0)
 S (ECREAS,PA,PR)=""
"RTN","ECPRSUM1",80,0)
 F  S PR=$O(^TMP("ECTMP",$J,PR)),PA="" Q:PR=""  D  Q:ECOUT
"RTN","ECPRSUM1",81,0)
 .W !,^TMP("ECTMP",$J,PR)
"RTN","ECPRSUM1",82,0)
 .F  S ECREAS=$O(^TMP("ECTMP",$J,PR,ECREAS)) Q:ECREAS=""  D  Q:ECOUT
"RTN","ECPRSUM1",83,0)
 ..F  S PA=$O(^TMP("ECTMP",$J,PR,ECREAS,PA)) D:PA="" TOT Q:PA=""  D  Q:ECOUT
"RTN","ECPRSUM1",84,0)
 ...S A=$G(^TMP("ECTMP",$J,PR,ECREAS,PA,0))
"RTN","ECPRSUM1",85,0)
 ...W ! W:$D(ECRY) $E(ECREAS,1,23)
"RTN","ECPRSUM1",86,0)
 ...W ?25,$E($P(PA,"^"),1,24),?52,$E($P(PA,"^",2),6,9) ;112 only print last 4
"RTN","ECPRSUM1",87,0)
 ...F J=1:1:7 S A=$G(^TMP("ECTMP",$J,PR,ECREAS,PA,J)),A(J)=A(J)+A W ?10*J+50,$J(A,5,0) I J=7 I $Y+8>IOSL D PAGE Q:ECOUT  D HDR
"RTN","ECPRSUM1",88,0)
 ...;print CPT procedure modifiers
"RTN","ECPRSUM1",89,0)
 ...Q:ECOUT  S IEN=""
"RTN","ECPRSUM1",90,0)
 ...F  S IEN=$O(^TMP("ECTMP",$J,PR,ECREAS,PA,"MOD",IEN)) Q:IEN=""  D  I ECOUT Q
"RTN","ECPRSUM1",91,0)
 ....S MODI=$$MOD^ICPTMOD(IEN,"I",$P(ECED,"."))
"RTN","ECPRSUM1",92,0)
 ....S MOD=$P(MODI,U,2) I MOD="" Q
"RTN","ECPRSUM1",93,0)
 ....S MODESC=$P(MODI,U,3)  I MODESC="" S MODESC="UNKNOWN"
"RTN","ECPRSUM1",94,0)
 ....S MODAMT=^TMP("ECTMP",$J,PR,ECREAS,PA,"MOD",IEN)
"RTN","ECPRSUM1",95,0)
 ....W !?5,"- ",MOD," ",MODESC," (",MODAMT,")"
"RTN","ECPRSUM1",96,0)
 ....I ($Y+7)>IOSL D PAGE Q:ECOUT  D HDR
"RTN","ECPRSUM1",97,0)
 ...K MODESC,MOD,MODAMT
"RTN","ECPRSUM1",98,0)
 W !!,?60 F RK=61:1:IOM W "*"
"RTN","ECPRSUM1",99,0)
 W !,?35,"GRAND TOTAL - PROCEDURES"
"RTN","ECPRSUM1",100,0)
 F J=1:1:7 W ?10*J+50,$J(ECGT(J),5,0)
"RTN","ECPRSUM1",101,0)
 D:'ECOUT PAGE G END
"RTN","ECPRSUM1",102,0)
 ;
"RTN","ECPRSUM1",103,0)
PAGE ; end of page
"RTN","ECPRSUM1",104,0)
 D FOOTER
"RTN","ECPRSUM1",105,0)
 I $E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR I 'Y S ECOUT=1
"RTN","ECPRSUM1",106,0)
 Q
"RTN","ECPRSUM1",107,0)
HDR ;
"RTN","ECPRSUM1",108,0)
 W:$Y @IOF S ECPG=ECPG+1
"RTN","ECPRSUM1",109,0)
 W !!?33,"EVENT CAPTURE PROVIDER (1-7) SUMMARY FOR ",ECUN,?118,"Page: ",ECPG,!,?33,"FOR THE DATE RANGE ",$$FMTE^XLFDT(ECSD)," TO ",$$FMTE^XLFDT(ECED),!!,"PROCEDURE",?85,"TOTALS AS PROVIDER #",! ;112
"RTN","ECPRSUM1",110,0)
 W:$D(ECRY) "PROCEDURE REASON" W ?25,"PATIENT",?52,"SSN",?64,1,?74,2,?84,3,?94,4,?104,5,?114,6,?124,7
"RTN","ECPRSUM1",111,0)
 W !,?5,"CPT MODIFIER (Volume of modifiers use)",!
"RTN","ECPRSUM1",112,0)
 F RK=1:1:IOM W "-"
"RTN","ECPRSUM1",113,0)
 W !
"RTN","ECPRSUM1",114,0)
 Q
"RTN","ECPRSUM1",115,0)
 ;
"RTN","ECPRSUM1",116,0)
TOT W !,?60 F RK=61:1:IOM W "-"
"RTN","ECPRSUM1",117,0)
 W !?35,"TOTAL PROCEDURES"
"RTN","ECPRSUM1",118,0)
 F J=1:1:7 W ?10*J+50,$J(A(J),5,0) S ECGT(J)=ECGT(J)+A(J)
"RTN","ECPRSUM1",119,0)
 W ! F ECI=1:1:7 S A(ECI)=0
"RTN","ECPRSUM1",120,0)
 Q
"RTN","ECPRSUM1",121,0)
 ;
"RTN","ECPRSUM1",122,0)
FOOTER ;print page footer
"RTN","ECPRSUM1",123,0)
 W !!?4,"Volume totals may represent days, minutes, numbers of procedures"
"RTN","ECPRSUM1",124,0)
 W !?4,"and/or a combination of these."
"RTN","ECPRSUM1",125,0)
 Q
"RTN","ECPRSUM1",126,0)
 ;
"RTN","ECPRSUM1",127,0)
END D ^ECKILL K ^TMP("ECTMP",$J),ZTSK W @IOF
"RTN","ECPRSUM1",128,0)
 K ^TMP("ECTMP",$J) Q:$D(ECGUI)
"RTN","ECPRSUM1",129,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ECPRSUM1",130,0)
 D ^%ZISC
"RTN","ECPRSUM1",131,0)
 Q
"RTN","ECPRSUM1",132,0)
 ;
"RTN","ECPRSUM1",133,0)
EXPORT ;Section added in 119
"RTN","ECPRSUM1",134,0)
 N CNT,ECI,A,PA,PR,ECREAS,EXPORT
"RTN","ECPRSUM1",135,0)
 S CNT=1
"RTN","ECPRSUM1",136,0)
 S ^TMP($J,"ECRPT",CNT)="PROVIDER NAME^CPT CODE^PROCEDURE CODE^PROCEDURE NAME^PATIENT^SSN^TOTAL AS PROV #1^TOTAL AS PROV #2^TOTAL AS PROV #3^TOTAL AS PROV #4^TOTAL AS PROV #5^TOTAL AS PROV #6^TOTAL AS PROV #7"
"RTN","ECPRSUM1",137,0)
 S (ECREAS,PA,PR)=""
"RTN","ECPRSUM1",138,0)
 F  S PR=$O(^TMP("ECTMP",$J,PR)),PA="" Q:PR=""  D
"RTN","ECPRSUM1",139,0)
 .F  S ECREAS=$O(^TMP("ECTMP",$J,PR,ECREAS)) Q:ECREAS=""  D
"RTN","ECPRSUM1",140,0)
 ..F  S PA=$O(^TMP("ECTMP",$J,PR,ECREAS,PA)) Q:PA=""  D
"RTN","ECPRSUM1",141,0)
 ...S EXPORT=^TMP("ECTMP",$J,PR,ECREAS,PA,"EXPORT")
"RTN","ECPRSUM1",142,0)
 ...S CNT=CNT+1
"RTN","ECPRSUM1",143,0)
 ...S ^TMP($J,"ECRPT",CNT)=ECUN_U_$P(EXPORT,U)_U_$P(EXPORT,U,2)_U_$P(EXPORT,U,3)_U_$P(PA,U)_U_$E($P(PA,U,2),6,9)
"RTN","ECPRSUM1",144,0)
 ...F J=1:1:7 S $P(^TMP($J,"ECRPT",CNT),U,(J+6))=+$G(^TMP("ECTMP",$J,PR,ECREAS,PA,J))
"RTN","ECPRSUM1",145,0)
 Q
"RTN","ECRDSSA")
0^6^B116122411^B103256712
"RTN","ECRDSSA",1,0)
ECRDSSA ;ALB/RPM - DSS Unit Activity Report ;11/7/12  17:32
"RTN","ECRDSSA",2,0)
 ;;2.0;EVENT CAPTURE;**95,104,112,119**;8 May 96;Build 12
"RTN","ECRDSSA",3,0)
 ;
"RTN","ECRDSSA",4,0)
EN ;Get location(s), DSS Unit(s), sort type, start & end dates, device
"RTN","ECRDSSA",5,0)
 ;
"RTN","ECRDSSA",6,0)
 N ECLOC,ECDSSU,ECSORT,ECSTDT,ECENDDT ;112
"RTN","ECRDSSA",7,0)
 I '$$ASKLOC^ECRUTL G ENQ
"RTN","ECRDSSA",8,0)
 I '$$ASKDSS^ECRUTL G ENQ
"RTN","ECRDSSA",9,0)
 I '$$ASKSRT(.ECSORT) G ENQ
"RTN","ECRDSSA",10,0)
 I '$$STDT^ECRUTL G ENQ
"RTN","ECRDSSA",11,0)
 I '$$ENDDT^ECRUTL(ECSTDT) G ENQ
"RTN","ECRDSSA",12,0)
 I $$ASKDEV D STRPT^ECRDSSA
"RTN","ECRDSSA",13,0)
ENQ Q
"RTN","ECRDSSA",14,0)
 ;
"RTN","ECRDSSA",15,0)
STRPT ;Main entry point
"RTN","ECRDSSA",16,0)
 N ECCRT  ;is CRT?
"RTN","ECRDSSA",17,0)
 N ECPAGE  ;page cnt
"RTN","ECRDSSA",18,0)
 S ECPAGE=0
"RTN","ECRDSSA",19,0)
 S ECCRT=$S($E(IOST,1,2)="C-":1,1:0)
"RTN","ECRDSSA",20,0)
 I $G(ECPTYP)'="E" U IO ;119 open device if not exporting
"RTN","ECRDSSA",21,0)
 K ^TMP("ECRPT",$J)
"RTN","ECRDSSA",22,0)
 D FNDREC(ECSORT)
"RTN","ECRDSSA",23,0)
 D PRINT(ECSORT)
"RTN","ECRDSSA",24,0)
 K ^TMP("ECRPT",$J) D ^ECKILL ;119
"RTN","ECRDSSA",25,0)
 Q
"RTN","ECRDSSA",26,0)
 ;
"RTN","ECRDSSA",27,0)
FNDREC(ECSRT) ;Loop through "ADT" xref of EVENT CAPTURE PATIENT (#721) file
"RTN","ECRDSSA",28,0)
 ;  Input:
"RTN","ECRDSSA",29,0)
 ;    ECSRT - sort type
"RTN","ECRDSSA",30,0)
 ;
"RTN","ECRDSSA",31,0)
 ;  Output: none
"RTN","ECRDSSA",32,0)
 ;
"RTN","ECRDSSA",33,0)
 N ECNT   ;record cnt
"RTN","ECRDSSA",34,0)
 N ECL     ;location cnt
"RTN","ECRDSSA",35,0)
 N ECD     ;DSS unit cnt
"RTN","ECRDSSA",36,0)
 N ECDFN   ;DFN
"RTN","ECRDSSA",37,0)
 N ECLOCF  ;Location IEN
"RTN","ECRDSSA",38,0)
 N ECDSSF  ;DSS unit IEN
"RTN","ECRDSSA",39,0)
 N ECDT    ;date index
"RTN","ECRDSSA",40,0)
 N ECREC   ;"0" node
"RTN","ECRDSSA",41,0)
 N ECIEN   ;IEN of file 721 ;patch 119
"RTN","ECRDSSA",42,0)
 S ECNT=0
"RTN","ECRDSSA",43,0)
 ;
"RTN","ECRDSSA",44,0)
 S ECL=0
"RTN","ECRDSSA",45,0)
 F  S ECL=$O(ECLOC(ECL)) Q:'ECL  S ECLOCF=+$P(ECLOC(ECL),U) D
"RTN","ECRDSSA",46,0)
 . S ^TMP("ECRPT",$J,ECLOCF)=0  ;initialize location counter
"RTN","ECRDSSA",47,0)
 . S ECD=0
"RTN","ECRDSSA",48,0)
 . F  S ECD=$O(ECDSSU(ECD)) Q:'ECD  S ECDSSF=+$P(ECDSSU(ECD),U) D
"RTN","ECRDSSA",49,0)
 . . S ^TMP("ECRPT",$J,ECLOCF,ECDSSF)=0  ;initialize DSS Unit counter
"RTN","ECRDSSA",50,0)
 . S ECDFN=0
"RTN","ECRDSSA",51,0)
 . F  S ECDFN=+$O(^ECH("ADT",ECLOCF,ECDFN)) Q:'ECDFN  D
"RTN","ECRDSSA",52,0)
 . . S ECD=0
"RTN","ECRDSSA",53,0)
 . . F  S ECD=$O(ECDSSU(ECD)) Q:'ECD  S ECDSSF=+$P(ECDSSU(ECD),U) D
"RTN","ECRDSSA",54,0)
 . . . S ECDT=ECSTDT
"RTN","ECRDSSA",55,0)
 . . . F  S ECDT=+$O(^ECH("ADT",ECLOCF,ECDFN,ECDSSF,ECDT)) Q:'ECDT!(ECDT>ECENDDT)  D
"RTN","ECRDSSA",56,0)
 . . . . S ECIEN=0
"RTN","ECRDSSA",57,0)
 . . . . F  S ECIEN=+$O(^ECH("ADT",ECLOCF,ECDFN,ECDSSF,ECDT,ECIEN)) Q:'ECIEN  D
"RTN","ECRDSSA",58,0)
 . . . . . I $P($G(^ECH(ECIEN,0)),U,7)=ECDSSF D BLDTMP(ECIEN,ECSRT,.ECNT)
"RTN","ECRDSSA",59,0)
 Q
"RTN","ECRDSSA",60,0)
 ;
"RTN","ECRDSSA",61,0)
BLDTMP(ECIEN,ECSRT,ECCNT) ;add record to list
"RTN","ECRDSSA",62,0)
 ;  Input:
"RTN","ECRDSSA",63,0)
 ;    ECIEN - pointer to EVENT CAPTURE PATIENT (#721) file
"RTN","ECRDSSA",64,0)
 ;    ECSRT - sort type
"RTN","ECRDSSA",65,0)
 ;    ECCNT - record counter
"RTN","ECRDSSA",66,0)
 ;
"RTN","ECRDSSA",67,0)
 ;  Output:
"RTN","ECRDSSA",68,0)
 ;    ^TMP("ECRPT",$J,location,DSS unit,sort key1,sort key2,count)
"RTN","ECRDSSA",69,0)
 ;
"RTN","ECRDSSA",70,0)
 N ECLOCA  ;location
"RTN","ECRDSSA",71,0)
 N ECDSS  ;DSS unit
"RTN","ECRDSSA",72,0)
 N ECIENS  ;IENS
"RTN","ECRDSSA",73,0)
 N ECKEY  ;sort key array
"RTN","ECRDSSA",74,0)
 N ECREC  ;record string
"RTN","ECRDSSA",75,0)
 N ECERR  ;FM error
"RTN","ECRDSSA",76,0)
 N ECDT  ;date
"RTN","ECRDSSA",77,0)
 I +$G(ECIEN)>0,$$GETKEYS(ECSRT,ECIEN,.ECKEY) D
"RTN","ECRDSSA",78,0)
 . S ECCNT=+$G(ECCNT)+1
"RTN","ECRDSSA",79,0)
 . S ECIENS=ECIEN_","
"RTN","ECRDSSA",80,0)
 . S ECREC=""
"RTN","ECRDSSA",81,0)
 . D GETS^DIQ(721,ECIENS,"1;2;3;6;8;9;10;20;29","IE","ECREC","ECERR")
"RTN","ECRDSSA",82,0)
 . S ECLOCA=+$G(ECREC(721,ECIENS,3,"I"))
"RTN","ECRDSSA",83,0)
 . S ECDSS=+$G(ECREC(721,ECIENS,6,"I"))
"RTN","ECRDSSA",84,0)
 . S ECREC=ECREC_$E($G(ECREC(721,ECIENS,1,"E")),1,30)_"^"  ;pt name
"RTN","ECRDSSA",85,0)
 . S ECREC=ECREC_$E($$GETSSN(ECIEN),1,10)_"^"              ;ssn
"RTN","ECRDSSA",86,0)
 . S ECREC=ECREC_$E($G(ECREC(721,ECIENS,29,"I")),1)_"^"    ;in/out
"RTN","ECRDSSA",87,0)
 . S ECREC=ECREC_$E($G(ECREC(721,ECIENS,2,"I")),1,13)_"^"  ;dt/tm
"RTN","ECRDSSA",88,0)
 . S ECDT=$P($G(ECREC(721,ECIENS,2,"I")),".",1)
"RTN","ECRDSSA",89,0)
 . S ECREC=ECREC_$E($$GETPROC($G(ECREC(721,ECIENS,8,"I"))),1,5)_"^"   ;proc code
"RTN","ECRDSSA",90,0)
 . S ECREC=ECREC_$E($$GETPRNM($G(ECREC(721,ECIENS,8,"I")),ECDT),1,10)_"^"  ;proc name
"RTN","ECRDSSA",91,0)
 . S ECREC=ECREC_$E($G(ECREC(721,ECIENS,9,"I")),1,2)_"^"   ;vol
"RTN","ECRDSSA",92,0)
 . S ECREC=ECREC_$E($$GETPROV(ECIEN),1,30)_"^"  ;provider
"RTN","ECRDSSA",93,0)
 . S ECREC=ECREC_$E($G(ECREC(721,ECIENS,20,"E")),1,7)      ;dx
"RTN","ECRDSSA",94,0)
 . S ^TMP("ECRPT",$J,ECLOCA,ECDSS,ECKEY(1),ECKEY(2),ECNT)=ECREC
"RTN","ECRDSSA",95,0)
 . S ^TMP("ECRPT",$J,ECLOCA)=$G(^TMP("ECRPT",$J,ECLOCA))+1
"RTN","ECRDSSA",96,0)
 . S ^TMP("ECRPT",$J,ECLOCA,ECDSS)=$G(^TMP("ECRPT",$J,ECLOCA,ECDSS))+1
"RTN","ECRDSSA",97,0)
 Q
"RTN","ECRDSSA",98,0)
 ;
"RTN","ECRDSSA",99,0)
PRINT(ECSRT) ;loop results array and format output
"RTN","ECRDSSA",100,0)
 ;  Input:
"RTN","ECRDSSA",101,0)
 ;    ECSRT - sort type
"RTN","ECRDSSA",102,0)
 ;
"RTN","ECRDSSA",103,0)
 ;  Output: none
"RTN","ECRDSSA",104,0)
 ;
"RTN","ECRDSSA",105,0)
 N ECCLOC  ;current location
"RTN","ECRDSSA",106,0)
 N ECPLOC  ;previous location
"RTN","ECRDSSA",107,0)
 N ECLOCNM  ;location name
"RTN","ECRDSSA",108,0)
 N ECCDSS  ;current DSS unit
"RTN","ECRDSSA",109,0)
 N ECPDSS  ;previous DSS unit
"RTN","ECRDSSA",110,0)
 N ECDSSNM  ;DSS unit name
"RTN","ECRDSSA",111,0)
 N ECCNT   ;record count
"RTN","ECRDSSA",112,0)
 N ECDAT   ;procedure date/time
"RTN","ECRDSSA",113,0)
 N ECRDT   ;run date
"RTN","ECRDSSA",114,0)
 N ECFDT   ;from date
"RTN","ECRDSSA",115,0)
 N ECTDT   ;to date
"RTN","ECRDSSA",116,0)
 N ECKEY1  ;sort key 1
"RTN","ECRDSSA",117,0)
 N ECKEY2  ;sort key 2
"RTN","ECRDSSA",118,0)
 N ECSRTBY  ;sort type text
"RTN","ECRDSSA",119,0)
 N ECQUIT  ;user quit indicator
"RTN","ECRDSSA",120,0)
 N ECREC   ;tmp record data
"RTN","ECRDSSA",121,0)
 N CNT,PIECE ;119 array count for data, record piece
"RTN","ECRDSSA",122,0)
 I $G(ECPTYP)="E" S ^TMP($J,"ECRPT",1)="LOCATION^DSS UNIT (IEN #)^PATIENT^SSN^I/O^DATE/TIME^PROCEDURE CODE^PROCEDURE NAME^VOLUME^PRIMARY PROVIDER^DIAGNOSIS",CNT=1 ;119 Export header
"RTN","ECRDSSA",123,0)
 I '$D(^TMP("ECRPT",$J)) G PRINTQ
"RTN","ECRDSSA",124,0)
 S ECRDT=$$FMTE^XLFDT($$NOW^XLFDT,"5DZ")
"RTN","ECRDSSA",125,0)
 S ECFDT=$$FMTE^XLFDT($P(ECSTDT+.0001,"."),"5DZ")
"RTN","ECRDSSA",126,0)
 S ECTDT=$$FMTE^XLFDT($P(ECENDDT,"."),"5DZ")
"RTN","ECRDSSA",127,0)
 S ECSRTBY=$S(ECSRT="P":"Patient Name",ECSRT="R":"Provider Name",ECSRT="S":"Patient SSN",1:"")
"RTN","ECRDSSA",128,0)
 S (ECCLOC,ECPLOC,ECQUIT)=0
"RTN","ECRDSSA",129,0)
 F  S ECCLOC=$O(^TMP("ECRPT",$J,ECCLOC)) Q:'ECCLOC!(ECQUIT)  D
"RTN","ECRDSSA",130,0)
 . I ECCLOC'=ECPLOC D  ;location changed
"RTN","ECRDSSA",131,0)
 . . S ECPLOC=ECCLOC
"RTN","ECRDSSA",132,0)
 . . S ECLOCNM=$$GETLOCN(ECCLOC,.ECLOC)
"RTN","ECRDSSA",133,0)
 . . I $G(ECPTYP)'="E" I $O(^TMP("ECRPT",$J,ECCLOC,0))>0 D:ECPAGE>0 PAUSE Q:ECQUIT  D HDR(ECLOCNM,ECRDT,ECFDT,ECTDT,ECSRTBY) ;119
"RTN","ECRDSSA",134,0)
 . I $G(ECPTYP)'="E" I $G(^TMP("ECRPT",$J,ECCLOC))=0 D  Q  ;119
"RTN","ECRDSSA",135,0)
 . . W !!,"    ** No records found on Location that match selection criteria"
"RTN","ECRDSSA",136,0)
 . S (ECCDSS,ECPDSS)=0
"RTN","ECRDSSA",137,0)
 . F  S ECCDSS=$O(^TMP("ECRPT",$J,ECCLOC,ECCDSS)) Q:'ECCDSS!(ECQUIT)  D
"RTN","ECRDSSA",138,0)
 . . I ECCDSS'=ECPDSS D  Q:ECQUIT  ;dss unit changed
"RTN","ECRDSSA",139,0)
 . . . S ECPDSS=ECCDSS
"RTN","ECRDSSA",140,0)
 . . . S ECDSSNM=$$GETDSSN(ECCDSS,.ECDSSU)
"RTN","ECRDSSA",141,0)
 . . . I $G(ECPTYP)'="E" I $Y>(IOSL-10) D PAUSE Q:ECQUIT  D HDR(ECLOCNM,ECRDT,ECFDT,ECTDT,ECSRTBY) ;119
"RTN","ECRDSSA",142,0)
 . . . I $G(ECPTYP)'="E" D DSSHDR(ECCDSS,ECDSSNM) ;119
"RTN","ECRDSSA",143,0)
 . . I $G(ECPTYP)'="E" I $G(^TMP("ECRPT",$J,ECCLOC,ECCDSS))=0 D  Q  ;119
"RTN","ECRDSSA",144,0)
 . . . W !,"** No records found on DSS Unit that match selection criteria"
"RTN","ECRDSSA",145,0)
 . . S ECKEY1=""
"RTN","ECRDSSA",146,0)
 . . F  S ECKEY1=$O(^TMP("ECRPT",$J,ECCLOC,ECCDSS,ECKEY1)) Q:ECKEY1=""!(ECQUIT)  D
"RTN","ECRDSSA",147,0)
 . . . S ECKEY2=""
"RTN","ECRDSSA",148,0)
 . . . F  S ECKEY2=$O(^TMP("ECRPT",$J,ECCLOC,ECCDSS,ECKEY1,ECKEY2)) Q:ECKEY2=""!(ECQUIT)  D
"RTN","ECRDSSA",149,0)
 . . . . S ECCNT=0
"RTN","ECRDSSA",150,0)
 . . . . F  S ECCNT=$O(^TMP("ECRPT",$J,ECCLOC,ECCDSS,ECKEY1,ECKEY2,ECCNT)) Q:'ECCNT!(ECQUIT)  D
"RTN","ECRDSSA",151,0)
 . . . . . I $G(ECPTYP)'="E" I $Y>(IOSL-7) D PAUSE Q:ECQUIT  D HDR(ECLOCNM,ECRDT,ECFDT,ECTDT,ECSRTBY),DSSHDR(ECCDSS,ECDSSNM) W " (cont'd)" ;119
"RTN","ECRDSSA",152,0)
 . . . . . S ECREC=^TMP("ECRPT",$J,ECCLOC,ECCDSS,ECKEY1,ECKEY2,ECCNT)
"RTN","ECRDSSA",153,0)
 . . . . . I $G(ECPTYP)="E" S CNT=CNT+1 S ^TMP($J,"ECRPT",CNT)=ECLOCNM_U_ECDSSNM_"(IEN #"_ECCDSS_")" D  Q  ;119
"RTN","ECRDSSA",154,0)
 . . . . . . F PIECE=1:1:9 S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_U_$S(PIECE'=4:$P(ECREC,U,PIECE),1:$$FMTE^XLFDT($P(ECREC,U,PIECE),"2MZ")) ;119
"RTN","ECRDSSA",155,0)
 . . . . . W !,$P(ECREC,U,1)  ;name
"RTN","ECRDSSA",156,0)
 . . . . . W ?31,$P(ECREC,U,2)  ;ssn
"RTN","ECRDSSA",157,0)
 . . . . . W ?42,$P(ECREC,U,3)  ;inpt/outpt
"RTN","ECRDSSA",158,0)
 . . . . . S ECDAT=$$FMTE^XLFDT($P(ECREC,U,4),"2MZ")
"RTN","ECRDSSA",159,0)
 . . . . . W ?44,$P(ECDAT,":")_$P(ECDAT,":",2)  ;dt/tm
"RTN","ECRDSSA",160,0)
 . . . . . W ?58,$P(ECREC,U,5)  ;proc code
"RTN","ECRDSSA",161,0)
 . . . . . W ?64,$P(ECREC,U,6)  ;proc name
"RTN","ECRDSSA",162,0)
 . . . . . W ?75,$P(ECREC,U,7)  ;vol 119 fixed dot structure
"RTN","ECRDSSA",163,0)
 . . . . . W ?78,$P(ECREC,U,8)  ;provider
"RTN","ECRDSSA",164,0)
 . . . . . W ?109,$P(ECREC,U,9)  ;dx
"RTN","ECRDSSA",165,0)
 I $G(ECPTYP)'="E" I 'ECQUIT D PAUSE ;119
"RTN","ECRDSSA",166,0)
PRINTQ Q
"RTN","ECRDSSA",167,0)
 ;
"RTN","ECRDSSA",168,0)
HDR(ECLOCN,ECRDT,ECFDT,ECTDT,ECSRT) ;Report header
"RTN","ECRDSSA",169,0)
 ;  Input:
"RTN","ECRDSSA",170,0)
 ;    ECLOCN - location name
"RTN","ECRDSSA",171,0)
 ;    ECRDT - run date
"RTN","ECRDSSA",172,0)
 ;    EDFDT - from date
"RTN","ECRDSSA",173,0)
 ;    EDTDT - to date
"RTN","ECRDSSA",174,0)
 ;    ECSRT - sort text
"RTN","ECRDSSA",175,0)
 ;
"RTN","ECRDSSA",176,0)
 ;  Output:  none
"RTN","ECRDSSA",177,0)
 ;
"RTN","ECRDSSA",178,0)
 I ECCRT!(ECPAGE) W @IOF
"RTN","ECRDSSA",179,0)
 S ECPAGE=ECPAGE+1
"RTN","ECRDSSA",180,0)
 W !,?11,"EVENT CAPTURE DSS UNIT ACTIVITY REPORT"
"RTN","ECRDSSA",181,0)
 W ?58,"Run Date: ",ECRDT
"RTN","ECRDSSA",182,0)
 W ?109,"Page: ",ECPAGE
"RTN","ECRDSSA",183,0)
 W !!,?13,"For Location ",ECLOCN
"RTN","ECRDSSA",184,0)
 W !,?13,"From "_ECFDT_" through "_ECTDT
"RTN","ECRDSSA",185,0)
 W !,?13,"Sorted by ",ECSRT
"RTN","ECRDSSA",186,0)
 W !!?4,"Patient",?31,"SSN",?40,"I/O",?45,"Date/Time",?58,"Proc",?64,"Procedure",?75,"Vol",?80,"Primary",?109,"Primary"
"RTN","ECRDSSA",187,0)
 W !?58,"Code",?64,"Name",?80,"Provider",?109,"Diagnosis"
"RTN","ECRDSSA",188,0)
 Q
"RTN","ECRDSSA",189,0)
 ;
"RTN","ECRDSSA",190,0)
DSSHDR(ECDSS,ECDSSNM) ;DSS header
"RTN","ECRDSSA",191,0)
 ;  Input:
"RTN","ECRDSSA",192,0)
 ;    ECDSS - DSS unit
"RTN","ECRDSSA",193,0)
 ;    ECDSSNM - DSS unit name
"RTN","ECRDSSA",194,0)
 ;
"RTN","ECRDSSA",195,0)
 ;  Output:  none
"RTN","ECRDSSA",196,0)
 ;
"RTN","ECRDSSA",197,0)
 W !!,"DSS Unit: ",ECDSSNM," (IEN #",ECDSS,")"
"RTN","ECRDSSA",198,0)
 Q
"RTN","ECRDSSA",199,0)
 ;
"RTN","ECRDSSA",200,0)
PAUSE ;page break
"RTN","ECRDSSA",201,0)
 N DIR,DIRUT,DUOUT
"RTN","ECRDSSA",202,0)
 D FOOTER
"RTN","ECRDSSA",203,0)
 Q:'ECCRT
"RTN","ECRDSSA",204,0)
 I IOSL<30 F  W ! Q:$Y>(IOSL-7)
"RTN","ECRDSSA",205,0)
 W !
"RTN","ECRDSSA",206,0)
 S DIR(0)="E"
"RTN","ECRDSSA",207,0)
 D ^DIR
"RTN","ECRDSSA",208,0)
 I $D(DIRUT)!($D(DUOUT)) S ECQUIT=1
"RTN","ECRDSSA",209,0)
 Q
"RTN","ECRDSSA",210,0)
 ;
"RTN","ECRDSSA",211,0)
FOOTER ;page footer
"RTN","ECRDSSA",212,0)
 W !!?4,"Volume totals may represent days, minutes, numbers of procedures"
"RTN","ECRDSSA",213,0)
 W !?4,"and/or a combination of these."
"RTN","ECRDSSA",214,0)
 Q
"RTN","ECRDSSA",215,0)
 ;
"RTN","ECRDSSA",216,0)
GETLOCN(ECLOCA,ECLOC) ;get location name
"RTN","ECRDSSA",217,0)
 ;  Input:
"RTN","ECRDSSA",218,0)
 ;    ECLOCA - location
"RTN","ECRDSSA",219,0)
 ;    ECLOC - array of selected locations
"RTN","ECRDSSA",220,0)
 ;
"RTN","ECRDSSA",221,0)
 ;  Output:
"RTN","ECRDSSA",222,0)
 ;   Function value - returns location name on success; "" on failure
"RTN","ECRDSSA",223,0)
 ;
"RTN","ECRDSSA",224,0)
 N ECI
"RTN","ECRDSSA",225,0)
 N ECLOCNM
"RTN","ECRDSSA",226,0)
 S ECLOCNM=""
"RTN","ECRDSSA",227,0)
 I +$G(ECLOCA)>0 D
"RTN","ECRDSSA",228,0)
 . S ECI=0
"RTN","ECRDSSA",229,0)
 . F  S ECI=$O(ECLOC(ECI)) Q:'ECI!(ECLOCNM'="")  D
"RTN","ECRDSSA",230,0)
 . . I $P(ECLOC(ECI),U)=ECLOCA S ECLOCNM=$P(ECLOC(ECI),U,2)
"RTN","ECRDSSA",231,0)
 Q ECLOCNM
"RTN","ECRDSSA",232,0)
 ;
"RTN","ECRDSSA",233,0)
GETDSSN(ECDSS,ECDSSU) ;-get DSS unit name
"RTN","ECRDSSA",234,0)
 ;  Input:
"RTN","ECRDSSA",235,0)
 ;    ECDSS - DSS unit
"RTN","ECRDSSA",236,0)
 ;    ECDSSU - array of selected DSS units
"RTN","ECRDSSA",237,0)
 ;
"RTN","ECRDSSA",238,0)
 ;  Output:
"RTN","ECRDSSA",239,0)
 ;   Function value - returns DSS unit name on success; "" on failure
"RTN","ECRDSSA",240,0)
 ;
"RTN","ECRDSSA",241,0)
 N ECI
"RTN","ECRDSSA",242,0)
 N ECDSSNM
"RTN","ECRDSSA",243,0)
 S ECDSSNM=""
"RTN","ECRDSSA",244,0)
 I +$G(ECDSS)>0 D
"RTN","ECRDSSA",245,0)
 . S ECI=0
"RTN","ECRDSSA",246,0)
 . F  S ECI=$O(ECDSSU(ECI)) Q:'ECI!(ECDSSNM'="")  D
"RTN","ECRDSSA",247,0)
 . . I $P(ECDSSU(ECI),U)=ECDSS S ECDSSNM=$P(ECDSSU(ECI),U,2)
"RTN","ECRDSSA",248,0)
 Q ECDSSNM
"RTN","ECRDSSA",249,0)
 ;
"RTN","ECRDSSA",250,0)
GETKEYS(ECSRT,ECIEN,ECKEYS) ;get sort keys based on sort type
"RTN","ECRDSSA",251,0)
 ;  Input:
"RTN","ECRDSSA",252,0)
 ;    ECSRT - (required) sort type indicator (P, S, R)
"RTN","ECRDSSA",253,0)
 ;    ECIEN - (required) pointer to EVENT CAPTURE PATIENT (#721) file
"RTN","ECRDSSA",254,0)
 ;    
"RTN","ECRDSSA",255,0)
 ;  Output:
"RTN","ECRDSSA",256,0)
 ;    ECKEYS - (pass by reference) array of sort keys
"RTN","ECRDSSA",257,0)
 ;    Function value - returns 1 on success;0 on failure
"RTN","ECRDSSA",258,0)
 ;
"RTN","ECRDSSA",259,0)
 N ECRSLT  ;function value
"RTN","ECRDSSA",260,0)
 S ECRSLT=0
"RTN","ECRDSSA",261,0)
 S (ECKEYS(1),ECKEYS(2))=""
"RTN","ECRDSSA",262,0)
 I $G(ECSRT)'="",+$G(ECIEN)>0 D
"RTN","ECRDSSA",263,0)
 . I ECSRT="P" D
"RTN","ECRDSSA",264,0)
 . . S ECKEYS(1)=$$GET1^DIQ(721,ECIEN_",",1)  ;name
"RTN","ECRDSSA",265,0)
 . . S ECKEYS(2)=$E($$GETSSN(ECIEN),1,9)  ;ssn
"RTN","ECRDSSA",266,0)
 . I ECSRT="R" D
"RTN","ECRDSSA",267,0)
 . . S ECKEYS(1)=$$GETPROV(ECIEN)  ;provider
"RTN","ECRDSSA",268,0)
 . . I ECKEYS(1)="" S ECKEYS(1)=" "  ;missing provider sorts to top
"RTN","ECRDSSA",269,0)
 . . S ECKEYS(2)=$$GET1^DIQ(721,ECIEN_",",1)  ;name
"RTN","ECRDSSA",270,0)
 . I ECSRT="S" D
"RTN","ECRDSSA",271,0)
 . . S ECKEYS(1)=$E($$GETSSN(ECIEN),1,9)  ;ssn
"RTN","ECRDSSA",272,0)
 . . S ECKEYS(2)=$$GET1^DIQ(721,ECIEN_",",1)  ;name
"RTN","ECRDSSA",273,0)
 . I ECKEYS(1)'="",ECKEYS(2)'="" S ECRSLT=1
"RTN","ECRDSSA",274,0)
 Q ECRSLT
"RTN","ECRDSSA",275,0)
 ;
"RTN","ECRDSSA",276,0)
GETSSN(ECIEN) ;get patient SSN
"RTN","ECRDSSA",277,0)
 ;  Input:
"RTN","ECRDSSA",278,0)
 ;    ECIEN - (required) pointer to EVENT CAPTURE PATIENT (#721) file
"RTN","ECRDSSA",279,0)
 ;    
"RTN","ECRDSSA",280,0)
 ;  Output:
"RTN","ECRDSSA",281,0)
 ;    Function value - returns patient's SSN on success; "" on failure
"RTN","ECRDSSA",282,0)
 ;
"RTN","ECRDSSA",283,0)
 N DFN,VADM,VAERR  ;VADPT variables
"RTN","ECRDSSA",284,0)
 I +$G(ECIEN)>0 D
"RTN","ECRDSSA",285,0)
 . S DFN=$$GET1^DIQ(721,ECIEN_",",1,"I")
"RTN","ECRDSSA",286,0)
 . D DEM^VADPT
"RTN","ECRDSSA",287,0)
 I $G(ECPTYP)="E" Q $P($G(VADM(2)),U)  ;119 full SSN on export
"RTN","ECRDSSA",288,0)
 Q $E($P($G(VADM(2)),U),6,9)  ;112, only get last 4 SSN
"RTN","ECRDSSA",289,0)
 ;
"RTN","ECRDSSA",290,0)
GETPROV(ECIEN) ;get primary provider
"RTN","ECRDSSA",291,0)
 ;This function retrieves the primary provider for a given Event
"RTN","ECRDSSA",292,0)
 ;Capture record.  Searches the PROVIDER MULTIPLE (#42) field first
"RTN","ECRDSSA",293,0)
 ;and falls back to the PROVIDER (#10) field.
"RTN","ECRDSSA",294,0)
 ;  Input:
"RTN","ECRDSSA",295,0)
 ;    ECIEN -(required) pointer to EVENT CAPTURE PATIENT (#721) file
"RTN","ECRDSSA",296,0)
 ;
"RTN","ECRDSSA",297,0)
 ;  Output:
"RTN","ECRDSSA",298,0)
 ;   Function value - returns provider's name on success; "" on failure
"RTN","ECRDSSA",299,0)
 ;
"RTN","ECRDSSA",300,0)
 N ECPROV  ;provider name
"RTN","ECRDSSA",301,0)
 S ECPROV=""
"RTN","ECRDSSA",302,0)
 I $G(ECIEN)'="",$D(^ECH(ECIEN)) D
"RTN","ECRDSSA",303,0)
 . ;try PROVIDER MULTIPLE
"RTN","ECRDSSA",304,0)
 . I '$$GETPPRV^ECPRVMUT(ECIEN,.ECPROV) D  ;api returns "0" on success
"RTN","ECRDSSA",305,0)
 . . S ECPROV=$P(ECPROV,U,2)
"RTN","ECRDSSA",306,0)
 . E  D  ;try PROVIDER
"RTN","ECRDSSA",307,0)
 . . S ECPROV=$$GET1^DIQ(721,ECIEN_",",10)
"RTN","ECRDSSA",308,0)
 Q ECPROV
"RTN","ECRDSSA",309,0)
 ;
"RTN","ECRDSSA",310,0)
GETPRNM(ECVIEN,ECDT) ;get procedure name
"RTN","ECRDSSA",311,0)
 ;  Input:
"RTN","ECRDSSA",312,0)
 ;    ECVIEN - variable pointer to CPT (#81) file or EC PROC file
"RTN","ECRDSSA",313,0)
 ;    
"RTN","ECRDSSA",314,0)
 ;  Output:
"RTN","ECRDSSA",315,0)
 ;    Function value - returns procedure name on success; "" on failure
"RTN","ECRDSSA",316,0)
 ;
"RTN","ECRDSSA",317,0)
 N ECIEN   ;IEN part of variable pointer
"RTN","ECRDSSA",318,0)
 N ECFILE  ;file part of variable pointer
"RTN","ECRDSSA",319,0)
 S ECIEN=$P(ECVIEN,";",1)
"RTN","ECRDSSA",320,0)
 S ECFILE=$P(ECVIEN,";",2)
"RTN","ECRDSSA",321,0)
 Q $S(ECFILE["ICPT(":$P($$CPT^ICPTCOD(ECIEN,ECDT),U,3),ECFILE["EC(725":$$GET1^DIQ(725,ECIEN_",",.01),1:"")
"RTN","ECRDSSA",322,0)
 ;
"RTN","ECRDSSA",323,0)
GETPROC(ECVIEN) ;get procedure code
"RTN","ECRDSSA",324,0)
 ;  Input:
"RTN","ECRDSSA",325,0)
 ;    ECVIEN - variable pointer to CPT (#81) file or EC PROC file
"RTN","ECRDSSA",326,0)
 ;
"RTN","ECRDSSA",327,0)
 ;  Output:
"RTN","ECRDSSA",328,0)
 ;   Function value - returns procedure code on success; "" on failure
"RTN","ECRDSSA",329,0)
 ;
"RTN","ECRDSSA",330,0)
 N ECIEN  ;IEN part of variable pointer
"RTN","ECRDSSA",331,0)
 N ECFILE  ;file part of variable pointer
"RTN","ECRDSSA",332,0)
 S ECIEN=$P(ECVIEN,";",1)
"RTN","ECRDSSA",333,0)
 S ECFILE=$P(ECVIEN,";",2)
"RTN","ECRDSSA",334,0)
 Q $S(ECFILE["ICPT(":$$GET1^DIQ(81,ECIEN_",",.01),ECFILE["EC(725":$$GET1^DIQ(725,ECIEN_",",1),1:"")
"RTN","ECRDSSA",335,0)
 ;
"RTN","ECRDSSA",336,0)
ASKSRT(ECTYP) ;Ask report sort type
"RTN","ECRDSSA",337,0)
 ;  Input:  none
"RTN","ECRDSSA",338,0)
 ;  
"RTN","ECRDSSA",339,0)
 ;  Output:
"RTN","ECRDSSA",340,0)
 ;    ECTYP - (pass by reference) Sort type
"RTN","ECRDSSA",341,0)
 ;            (P: Patient Name,S: SSN,R: Provider Name)
"RTN","ECRDSSA",342,0)
 ;    Function value - returns 1 on success; 0 on failure
"RTN","ECRDSSA",343,0)
 ;
"RTN","ECRDSSA",344,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y  ;^DIR variables
"RTN","ECRDSSA",345,0)
 S DIR(0)="SA^P:PATIENT NAME;S:SSN;R:PROVIDER NAME"
"RTN","ECRDSSA",346,0)
 S DIR("A")="Sort within each DSS Unit by: "
"RTN","ECRDSSA",347,0)
 S DIR("B")="SSN"
"RTN","ECRDSSA",348,0)
 D ^DIR
"RTN","ECRDSSA",349,0)
 S ECTYP=$P(Y,U)
"RTN","ECRDSSA",350,0)
 Q $S($D(DUOUT):0,$D(DTOUT):0,$D(DIROUT):0,1:1)
"RTN","ECRDSSA",351,0)
 ;
"RTN","ECRDSSA",352,0)
ASKDEV() ;Ask output device
"RTN","ECRDSSA",353,0)
 ;  Input:  none
"RTN","ECRDSSA",354,0)
 ;
"RTN","ECRDSSA",355,0)
 ; Output:  1 if report is printed
"RTN","ECRDSSA",356,0)
 ;          0 if report is queued (or exited)
"RTN","ECRDSSA",357,0)
 ;
"RTN","ECRDSSA",358,0)
 N ECX,ZTDESC,ZTRTN,ZTSAVE
"RTN","ECRDSSA",359,0)
 S ECX=1
"RTN","ECRDSSA",360,0)
 K %ZIS S %ZIS="QMP"
"RTN","ECRDSSA",361,0)
 D ^%ZIS
"RTN","ECRDSSA",362,0)
 S:POP ECX=0
"RTN","ECRDSSA",363,0)
 I ECX&($D(IO("Q"))) D
"RTN","ECRDSSA",364,0)
 . S ZTRTN="STRPT^ECRDSSA",ZTDESC="DSS UNIT ACTIVITY REPORT"
"RTN","ECRDSSA",365,0)
 . S (ZTSAVE("ECLOC("),ZTSAVE("ECDSSU("),ZTSAVE("ECSRT"))=""
"RTN","ECRDSSA",366,0)
 . S (ZTSAVE("ECSTDT"),ZTSAVE("ECENDDT"))=""
"RTN","ECRDSSA",367,0)
 . D ^%ZTLOAD
"RTN","ECRDSSA",368,0)
 . D HOME^%ZIS
"RTN","ECRDSSA",369,0)
 . S ECX=0
"RTN","ECRDSSA",370,0)
 Q ECX
"RTN","ECRDSSU")
0^14^B52878746^B52276776
"RTN","ECRDSSU",1,0)
ECRDSSU ;ALB/ESD - DSS Unit Workload Summary Report ;11/7/12  12:00
"RTN","ECRDSSU",2,0)
 ;;2.0;EVENT CAPTURE;**5,8,10,14,18,47,63,72,95,119**;8 May 96;Build 12
"RTN","ECRDSSU",3,0)
 ;
"RTN","ECRDSSU",4,0)
EN ;- Get location(s), DSS Unit(s), start & end dates, device
"RTN","ECRDSSU",5,0)
 ;
"RTN","ECRDSSU",6,0)
 N ECLOC,ECDSSU,ECSTDT,ECENDDT
"RTN","ECRDSSU",7,0)
 I '$$ASKLOC^ECRUTL G ENQ
"RTN","ECRDSSU",8,0)
 I '$$ASKDSS^ECRUTL G ENQ
"RTN","ECRDSSU",9,0)
 I '$$STDT^ECRUTL G ENQ
"RTN","ECRDSSU",10,0)
 I '$$ENDDT^ECRUTL(ECSTDT) G ENQ
"RTN","ECRDSSU",11,0)
 I $$ASKDEV D STRPT^ECRDSSU
"RTN","ECRDSSU",12,0)
ENQ Q
"RTN","ECRDSSU",13,0)
 ;
"RTN","ECRDSSU",14,0)
 ;
"RTN","ECRDSSU",15,0)
STRPT ;- Main entry point
"RTN","ECRDSSU",16,0)
 ;
"RTN","ECRDSSU",17,0)
 N ECCRT,ECDSSNM,ECDSSTOT,ECLOCNM,ECQUIT,ECPAGE,ECTMP ;119
"RTN","ECRDSSU",18,0)
 S (ECDSSTOT,ECPAGE,ECQUIT)=0,(ECDSSNM,ECLOCNM)=""
"RTN","ECRDSSU",19,0)
 I $G(ECPTYP)="E" D EXPORT^ECRDSSU2,^ECKILL Q  ;119
"RTN","ECRDSSU",20,0)
 ; Determine if device is CRT
"RTN","ECRDSSU",21,0)
 S ECCRT=$S($E(IOST,1,2)="C-":1,1:0)
"RTN","ECRDSSU",22,0)
 U IO
"RTN","ECRDSSU",23,0)
 D GETREC
"RTN","ECRDSSU",24,0)
 D LOOP
"RTN","ECRDSSU",25,0)
 I ECQUIT G STRPTQ
"RTN","ECRDSSU",26,0)
 D PRTCAT
"RTN","ECRDSSU",27,0)
 I ECQUIT G STRPTQ
"RTN","ECRDSSU",28,0)
 D DSSCHG
"RTN","ECRDSSU",29,0)
 I ECQUIT G STRPTQ
"RTN","ECRDSSU",30,0)
 I $D(ECGUI) G STRPTQ
"RTN","ECRDSSU",31,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ECRDSSU",32,0)
 D ^%ZISC
"RTN","ECRDSSU",33,0)
STRPTQ K ^TMP("ECRPT") D ^ECKILL ;119
"RTN","ECRDSSU",34,0)
 Q
"RTN","ECRDSSU",35,0)
 ;
"RTN","ECRDSSU",36,0)
 ;
"RTN","ECRDSSU",37,0)
GETREC ;- Loop thru "ADT" x-ref of EC Patient file (#721)
"RTN","ECRDSSU",38,0)
 ;
"RTN","ECRDSSU",39,0)
 N ECD,ECDFN,ECIEN,ECL,ECNT,I,J,ECREC,ECST
"RTN","ECRDSSU",40,0)
 S ECNT=0
"RTN","ECRDSSU",41,0)
 F I=0:0 S I=$O(ECLOC(I)) Q:'I  S ECL=+$P(ECLOC(I),U) D
"RTN","ECRDSSU",42,0)
 . S ECDFN=0
"RTN","ECRDSSU",43,0)
 . F  S ECDFN=+$O(^ECH("ADT",ECL,ECDFN)) Q:'ECDFN  F J=0:0 S J=$O(ECDSSU(J)) Q:'J  S ECD=+$P(ECDSSU(J),U) D
"RTN","ECRDSSU",44,0)
 .. S ECIEN=0
"RTN","ECRDSSU",45,0)
 .. S ECST=ECSTDT
"RTN","ECRDSSU",46,0)
 .. F  S ECST=+$O(^ECH("ADT",ECL,ECDFN,ECD,ECST)) Q:'ECST!(ECST>ECENDDT)  F  S ECIEN=+$O(^ECH("ADT",ECL,ECDFN,ECD,ECST,ECIEN)) Q:'ECIEN  D
"RTN","ECRDSSU",47,0)
 ... S ECREC=$G(^ECH(ECIEN,0))
"RTN","ECRDSSU",48,0)
 ... I ECD=+$P(ECREC,"^",7) D CRETMP
"RTN","ECRDSSU",49,0)
 Q
"RTN","ECRDSSU",50,0)
 ;
"RTN","ECRDSSU",51,0)
 ;
"RTN","ECRDSSU",52,0)
CRETMP ;- Create ^TMP("ECRPT" array w/format:
"RTN","ECRDSSU",53,0)
 ;    ^TMP("ECRPT",$J,location,DSS Unit,category,count)=procedure^volume^
"RTN","ECRDSSU",54,0)
 ;                                                         CPT modifiers
"RTN","ECRDSSU",55,0)
 ;
"RTN","ECRDSSU",56,0)
 N ECTC,ECTP,ECMOD,ECMODS,ECMODF,SEQ
"RTN","ECRDSSU",57,0)
 S ECTC=$S(+$P(ECREC,"^",8)=0:-1,1:+$P(ECREC,"^",8)),ECTP=$P($G(ECREC),"^",9)
"RTN","ECRDSSU",58,0)
 S ECNT=ECNT+1,ECTP=$P(ECTP,";")_";"_$E($P(ECTP,";",2),1)
"RTN","ECRDSSU",59,0)
 ;ALB/JAM - Get Procedure CPT modifiers
"RTN","ECRDSSU",60,0)
 S ECMODS="" I $O(^ECH(ECIEN,"MOD",0))'="" D
"RTN","ECRDSSU",61,0)
 . K ECMOD S ECMODF=$$MOD^ECUTL(ECIEN,"I",.ECMOD) I 'ECMODF Q
"RTN","ECRDSSU",62,0)
 . S SEQ="" F  S SEQ=$O(ECMOD(SEQ)) Q:SEQ=""  D
"RTN","ECRDSSU",63,0)
 . . S ECMODS=ECMODS_$S(ECMODS="":"",1:";")_SEQ
"RTN","ECRDSSU",64,0)
 S ^TMP("ECRPT",$J,+$P(ECREC,"^",4),+$P(ECREC,"^",7),ECTC,ECNT)=ECTP_"^"_+$P(ECREC,"^",10)_"^"_ECMODS
"RTN","ECRDSSU",65,0)
 Q
"RTN","ECRDSSU",66,0)
 ;
"RTN","ECRDSSU",67,0)
LOOP ;- Loop through data
"RTN","ECRDSSU",68,0)
 ;
"RTN","ECRDSSU",69,0)
 N ECCAT,ECNT,ECOCAT,ECDSS,ECLOCAT,ECPR,ECVOL,ECMOD
"RTN","ECRDSSU",70,0)
 S (ECNT,ECDSS,ECLOCAT)=0,(ECCAT,ECOCAT)=""
"RTN","ECRDSSU",71,0)
 I '$D(^TMP("ECRPT",$J)) G LOOPQ
"RTN","ECRDSSU",72,0)
 F  S ECLOCAT=$O(^TMP("ECRPT",$J,ECLOCAT)) Q:'ECLOCAT  D
"RTN","ECRDSSU",73,0)
 . F  S ECDSS=$O(^TMP("ECRPT",$J,ECLOCAT,ECDSS)) Q:'ECDSS  D
"RTN","ECRDSSU",74,0)
 .. Q:ECQUIT
"RTN","ECRDSSU",75,0)
 .. D PRTCAT Q:ECQUIT
"RTN","ECRDSSU",76,0)
 .. D DSSCHG Q:ECQUIT
"RTN","ECRDSSU",77,0)
 .. S ECOCAT=0
"RTN","ECRDSSU",78,0)
 .. D HDR
"RTN","ECRDSSU",79,0)
 .. D LOCNAM,DSSUNAM
"RTN","ECRDSSU",80,0)
 .. W !!,"Location: ",$G(ECLOCNM),!,"DSS Unit: ",$G(ECDSSNM)
"RTN","ECRDSSU",81,0)
 .. F  S ECCAT=$O(^TMP("ECRPT",$J,ECLOCAT,ECDSS,ECCAT)) Q:ECCAT=""  D
"RTN","ECRDSSU",82,0)
 ... D CATCHG
"RTN","ECRDSSU",83,0)
 ... Q:ECQUIT
"RTN","ECRDSSU",84,0)
 ... F  S ECNT=$O(^TMP("ECRPT",$J,ECLOCAT,ECDSS,ECCAT,ECNT)) Q:'ECNT  D
"RTN","ECRDSSU",85,0)
 .... S (ECPR,ECVOL)=0
"RTN","ECRDSSU",86,0)
 .... S ECPR=$P($G(^TMP("ECRPT",$J,ECLOCAT,ECDSS,ECCAT,ECNT)),"^")
"RTN","ECRDSSU",87,0)
 .... S ECVOL=$P($G(^TMP("ECRPT",$J,ECLOCAT,ECDSS,ECCAT,ECNT)),"^",2)
"RTN","ECRDSSU",88,0)
 .... S ECMOD=$P($G(^TMP("ECRPT",$J,ECLOCAT,ECDSS,ECCAT,ECNT)),"^",3)
"RTN","ECRDSSU",89,0)
 .... I '$D(ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR)) S ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR)=ECVOL D:ECMOD'="" SETMOD Q
"RTN","ECRDSSU",90,0)
 .... S ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR)=ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR)+ECVOL D:ECMOD'="" SETMOD
"RTN","ECRDSSU",91,0)
LOOPQ Q
"RTN","ECRDSSU",92,0)
SETMOD ;ALB/JAM - Set CPT modifiers in ECTMP array
"RTN","ECRDSSU",93,0)
 N MOD,I
"RTN","ECRDSSU",94,0)
 F I=1:1 S MOD=$P(ECMOD,";",I) Q:MOD=""  D
"RTN","ECRDSSU",95,0)
 . S ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR,MOD)=$G(ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR,MOD))+ECVOL
"RTN","ECRDSSU",96,0)
 Q
"RTN","ECRDSSU",97,0)
 ;
"RTN","ECRDSSU",98,0)
CATCHG ;- Category change
"RTN","ECRDSSU",99,0)
 ;
"RTN","ECRDSSU",100,0)
 I ECCAT=""&(ECOCAT="") G CATCHGQ
"RTN","ECRDSSU",101,0)
 I ECOCAT="" S ECOCAT=ECCAT G CATCHGQ
"RTN","ECRDSSU",102,0)
 I $G(ECOCAT)'=$G(ECCAT) D
"RTN","ECRDSSU",103,0)
 . D PRTCAT
"RTN","ECRDSSU",104,0)
 . S ECOCAT=ECCAT
"RTN","ECRDSSU",105,0)
CATCHGQ Q
"RTN","ECRDSSU",106,0)
 ;
"RTN","ECRDSSU",107,0)
PRTCAT ;- Print category
"RTN","ECRDSSU",108,0)
 ;
"RTN","ECRDSSU",109,0)
 Q:'$D(ECTMP)
"RTN","ECRDSSU",110,0)
 N ECC,ECCATOT,ECDSS,ECFLG,ECLOC,ECPR,ECPRN,ECSYI,ECSYN,ECCNAM,ECPNAM
"RTN","ECRDSSU",111,0)
 N ECCPT,ECPI
"RTN","ECRDSSU",112,0)
 S (ECCATOT,ECDSS,ECFLG,ECLOC)=0,(ECC,ECCNAM,ECPR)=""
"RTN","ECRDSSU",113,0)
 F  S ECLOC=$O(ECTMP(ECLOC)) Q:'ECLOC  F  S ECDSS=$O(ECTMP(ECLOC,ECDSS)) Q:'ECDSS  F  S ECC=$O(ECTMP(ECLOC,ECDSS,ECC)) Q:ECC=""  F  S ECPR=$O(ECTMP(ECLOC,ECDSS,ECC,ECPR)) Q:ECPR=""  D  I ECQUIT Q
"RTN","ECRDSSU",114,0)
 . S ECCNAM=$S($P($G(^EC(726,$S(ECC<1:0,1:+ECC),0)),"^")'="":$P($G(^EC(726,$S(ECC<1:0,1:+ECC),0)),"^"),1:"None")
"RTN","ECRDSSU",115,0)
 . S ECPRN=$S($P(ECPR,";",2)="E":ECPR_"C(725,",1:ECPR_"CPT(")
"RTN","ECRDSSU",116,0)
 . S ECSYI=+$O(^ECJ("AP",ECLOC,ECDSS,$S(ECC<1:0,1:+ECC),ECPRN,0)),ECSYN=$P($G(^ECJ(ECSYI,"PRO")),"^",2)
"RTN","ECRDSSU",117,0)
 . S ECPI=""
"RTN","ECRDSSU",118,0)
 . S ECCPT=$S($P(ECPR,";",2)="I":+ECPR,1:$P($G(^EC(725,+ECPR,0)),"^",5))
"RTN","ECRDSSU",119,0)
 . I ECCPT'="" S ECPI=$$CPT^ICPTCOD(ECCPT,$P(ECENDDT,".")),ECCPT=$P(ECPI,"^",2)
"RTN","ECRDSSU",120,0)
 . S ECPNAM=$S($P(ECPR,";",2)="E":$G(^EC(725,+$P(ECPR,";"),0)),$P(ECPR,";",2)="I":$P(ECPI,"^",3),1:"") S:$P(ECPR,";",2)="E" ECPNAM=$P(ECPNAM,"^",2)_" "_$P(ECPNAM,"^")
"RTN","ECRDSSU",121,0)
 . Q:ECQUIT
"RTN","ECRDSSU",122,0)
 . I $Y>(IOSL-11) D PAUSE Q:ECQUIT  D HDR
"RTN","ECRDSSU",123,0)
 . W:'ECFLG !!?1,"Category:",!?2,ECCNAM S ECFLG=1
"RTN","ECRDSSU",124,0)
 . W !?3,ECCPT,?9,$E(ECPNAM,1,35),?46,$S(ECSYN]"":$E(ECSYN,1,21),1:""),?69,$J($P($G(ECTMP(ECLOC,ECDSS,ECC,ECPR)),"^"),6)
"RTN","ECRDSSU",125,0)
 . S ECCATOT=ECCATOT+$P($G(ECTMP(ECLOC,ECDSS,ECC,ECPR)),"^")
"RTN","ECRDSSU",126,0)
 . I $O(ECTMP(ECLOC,ECDSS,ECC,ECPR,""))'="" D PRTMOD I ECQUIT Q
"RTN","ECRDSSU",127,0)
 G:ECQUIT PRTCATQ
"RTN","ECRDSSU",128,0)
 I $Y>(IOSL-11) D PAUSE G:ECQUIT PRTCATQ D HDR
"RTN","ECRDSSU",129,0)
 W !?69,"------"
"RTN","ECRDSSU",130,0)
 W !?6,"Total Procedures for ",ECCNAM,?69,$J(ECCATOT,6),!
"RTN","ECRDSSU",131,0)
 S ECDSSTOT=ECDSSTOT+ECCATOT
"RTN","ECRDSSU",132,0)
PRTCATQ K ECTMP
"RTN","ECRDSSU",133,0)
 Q
"RTN","ECRDSSU",134,0)
 ;
"RTN","ECRDSSU",135,0)
PRTMOD ;ALB/JAM - Print CPT modifiers
"RTN","ECRDSSU",136,0)
 N MOD,IEN,MODESC,MODI S IEN=""
"RTN","ECRDSSU",137,0)
 F  S IEN=$O(ECTMP(ECLOC,ECDSS,ECC,ECPR,IEN)) Q:IEN=""  D
"RTN","ECRDSSU",138,0)
 . I $Y>(IOSL-8) D PAUSE Q:ECQUIT  D HDR
"RTN","ECRDSSU",139,0)
 . S MODI=$$MOD^ICPTMOD(IEN,"I",$P(ECENDDT,"."))
"RTN","ECRDSSU",140,0)
 . S MOD=$P(MODI,"^",2) I MOD="" Q
"RTN","ECRDSSU",141,0)
 . S MODESC=$P(MODI,"^",3) I MODESC="" S MODESC="Unknown"
"RTN","ECRDSSU",142,0)
 . W !?7,"- ",MOD," ",$E(MODESC,1,40)," ("
"RTN","ECRDSSU",143,0)
 . W ECTMP(ECLOC,ECDSS,ECC,ECPR,IEN),")"
"RTN","ECRDSSU",144,0)
 Q
"RTN","ECRDSSU",145,0)
 ;
"RTN","ECRDSSU",146,0)
DSSCHG ;- DSS Unit change
"RTN","ECRDSSU",147,0)
 ;
"RTN","ECRDSSU",148,0)
 Q:'$G(ECDSSTOT)
"RTN","ECRDSSU",149,0)
 I ECDSSTOT>0 D
"RTN","ECRDSSU",150,0)
 . I $Y>(IOSL-11) D PAUSE Q:ECQUIT  D HDR
"RTN","ECRDSSU",151,0)
 . W !!?69,"======"
"RTN","ECRDSSU",152,0)
 . W !?6,"Total Procedures for ",$G(ECDSSNM),?69,$J(ECDSSTOT,6)
"RTN","ECRDSSU",153,0)
 . S ECDSSTOT=0,(ECLOCNM,ECDSSNM)=""
"RTN","ECRDSSU",154,0)
 . D PAUSE
"RTN","ECRDSSU",155,0)
 Q
"RTN","ECRDSSU",156,0)
 ;
"RTN","ECRDSSU",157,0)
HDR ;- Report header
"RTN","ECRDSSU",158,0)
 ;
"RTN","ECRDSSU",159,0)
 I ECCRT!(ECPAGE) W @IOF
"RTN","ECRDSSU",160,0)
 S ECPAGE=ECPAGE+1
"RTN","ECRDSSU",161,0)
 W !,?((IOM-32)\2),"DSS UNIT WORKLOAD SUMMARY REPORT"
"RTN","ECRDSSU",162,0)
 W !,?((IOM-40)\2),"Date Range: "_$$FMTE^XLFDT($P((ECSTDT+.0001),"."))_" to "_$$FMTE^XLFDT($P(ECENDDT,"."))
"RTN","ECRDSSU",163,0)
 W !!,"Run Date: "_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","ECRDSSU",164,0)
 W ?65,"    Page: ",ECPAGE
"RTN","ECRDSSU",165,0)
 W !!?3,"CPT Code",?13,"Description",?46,"Synonym",?69,"Volume"
"RTN","ECRDSSU",166,0)
 W !?7,"CPT Modifier (volume of modifiers use)"
"RTN","ECRDSSU",167,0)
 W !,$TR($J("",79)," ","-")
"RTN","ECRDSSU",168,0)
 Q
"RTN","ECRDSSU",169,0)
 ;
"RTN","ECRDSSU",170,0)
 ;
"RTN","ECRDSSU",171,0)
LOCNAM ;- Get location name
"RTN","ECRDSSU",172,0)
 ;
"RTN","ECRDSSU",173,0)
 N I
"RTN","ECRDSSU",174,0)
 F I=0:0 S I=$O(ECLOC(I)) Q:'I  I $P($G(ECLOC(I)),"^")=ECLOCAT S ECLOCNM=$P(ECLOC(I),"^",2)
"RTN","ECRDSSU",175,0)
 Q
"RTN","ECRDSSU",176,0)
 ;
"RTN","ECRDSSU",177,0)
 ;
"RTN","ECRDSSU",178,0)
DSSUNAM ;- Get DSS Unit name
"RTN","ECRDSSU",179,0)
 ;
"RTN","ECRDSSU",180,0)
 N I
"RTN","ECRDSSU",181,0)
 F I=0:0 S I=$O(ECDSSU(I)) Q:'I  I $P($G(ECDSSU(I)),"^")=ECDSS S ECDSSNM=$P(ECDSSU(I),"^",2)
"RTN","ECRDSSU",182,0)
 Q
"RTN","ECRDSSU",183,0)
 ;
"RTN","ECRDSSU",184,0)
 ;
"RTN","ECRDSSU",185,0)
PAUSE ;- Pause for screen output
"RTN","ECRDSSU",186,0)
 D FOOTER
"RTN","ECRDSSU",187,0)
 Q:'ECCRT
"RTN","ECRDSSU",188,0)
 N DIR,DIRUT,DUOUT
"RTN","ECRDSSU",189,0)
 I IOSL<30 F  W ! Q:$Y>(IOSL-4)
"RTN","ECRDSSU",190,0)
 W ! S DIR(0)="E" D ^DIR I $D(DIRUT)!($D(DUOUT)) S ECQUIT=1
"RTN","ECRDSSU",191,0)
 Q
"RTN","ECRDSSU",192,0)
 ;
"RTN","ECRDSSU",193,0)
 ;
"RTN","ECRDSSU",194,0)
FOOTER ;- Print page footer
"RTN","ECRDSSU",195,0)
 W !!?4,"Volume totals may represent days, minutes, numbers of procedures"
"RTN","ECRDSSU",196,0)
 W !?4,"and/or a combination of these."
"RTN","ECRDSSU",197,0)
 Q
"RTN","ECRDSSU",198,0)
 ;
"RTN","ECRDSSU",199,0)
 ;
"RTN","ECRDSSU",200,0)
ASKDEV() ;- Ask device for printing or queuing report
"RTN","ECRDSSU",201,0)
 ;  Input:     None
"RTN","ECRDSSU",202,0)
 ;
"RTN","ECRDSSU",203,0)
 ; Output:     1 if report is printed
"RTN","ECRDSSU",204,0)
 ;             0 if report is queued (or exited out)
"RTN","ECRDSSU",205,0)
 ;
"RTN","ECRDSSU",206,0)
 N ECX,ZTDESC,ZTRTN,ZTSAVE
"RTN","ECRDSSU",207,0)
 S ECX=1
"RTN","ECRDSSU",208,0)
 K %ZIS S %ZIS="QMP"
"RTN","ECRDSSU",209,0)
 D ^%ZIS
"RTN","ECRDSSU",210,0)
 S:POP ECX=0
"RTN","ECRDSSU",211,0)
 I ECX&($D(IO("Q"))) D
"RTN","ECRDSSU",212,0)
 . S ZTRTN="STRPT^ECRDSSU",ZTDESC="DSS UNIT WORKLOAD SUMMARY REPORT"
"RTN","ECRDSSU",213,0)
 . S (ZTSAVE("ECLOC("),ZTSAVE("ECDSSU("),ZTSAVE("ECSTDT"),ZTSAVE("ECENDDT"))=""
"RTN","ECRDSSU",214,0)
 . D ^%ZTLOAD
"RTN","ECRDSSU",215,0)
 . D HOME^%ZIS
"RTN","ECRDSSU",216,0)
 . S ECX=0
"RTN","ECRDSSU",217,0)
 Q ECX
"RTN","ECRDSSU2")
0^15^B24221820^n/a
"RTN","ECRDSSU2",1,0)
ECRDSSU2 ;ALB/DAN - DSS Unit Workload Summary Report (CONT) ;10/31/12  12:09
"RTN","ECRDSSU2",2,0)
 ;;2.0;EVENT CAPTURE;**119**;8 May 96;Build 12
"RTN","ECRDSSU2",3,0)
 ;Routine added in patch 119 to support exporting report
"RTN","ECRDSSU2",4,0)
EXPORT ;
"RTN","ECRDSSU2",5,0)
 N CNT
"RTN","ECRDSSU2",6,0)
 K ^TMP("ECRPT",$J) ; delete temporary storage global
"RTN","ECRDSSU2",7,0)
 S CNT=1
"RTN","ECRDSSU2",8,0)
 S ^TMP($J,"ECRPT",CNT)="LOCATION^DSS UNIT^CATEGORY^CPT CODE^PROCEDURE CODE^PROCEDURE NAME^PROCEDURE VOLUME^SYNONYM^CPT MOD 1^MOD 1 VOL^CPT MOD 2^MOD 2 VOL^CPT MOD 3^MOD 3 VOL"
"RTN","ECRDSSU2",9,0)
 D GETINFO
"RTN","ECRDSSU2",10,0)
 D STORE
"RTN","ECRDSSU2",11,0)
 K ^TMP("ECRPT",$J)
"RTN","ECRDSSU2",12,0)
 Q
"RTN","ECRDSSU2",13,0)
 ;
"RTN","ECRDSSU2",14,0)
GETINFO ;Use "ADT" x-ref of file 721 to get information for report
"RTN","ECRDSSU2",15,0)
 ;
"RTN","ECRDSSU2",16,0)
 N ECD,ECDFN,ECIEN,ECL,ECNT,I,J,ECREC,ECST
"RTN","ECRDSSU2",17,0)
 N ECTC,ECTP,ECMOD,ECMODS,ECMODF,SEQ
"RTN","ECRDSSU2",18,0)
 S ECNT=0
"RTN","ECRDSSU2",19,0)
 F I=0:0 S I=$O(ECLOC(I)) Q:'I  S ECL=+$P(ECLOC(I),U) D
"RTN","ECRDSSU2",20,0)
 . S ECDFN=0
"RTN","ECRDSSU2",21,0)
 . F  S ECDFN=+$O(^ECH("ADT",ECL,ECDFN)) Q:'ECDFN  F J=0:0 S J=$O(ECDSSU(J)) Q:'J  S ECD=+$P(ECDSSU(J),U) D
"RTN","ECRDSSU2",22,0)
 .. S ECIEN=0
"RTN","ECRDSSU2",23,0)
 .. S ECST=ECSTDT
"RTN","ECRDSSU2",24,0)
 .. F  S ECST=+$O(^ECH("ADT",ECL,ECDFN,ECD,ECST)) Q:'ECST!(ECST>ECENDDT)  F  S ECIEN=+$O(^ECH("ADT",ECL,ECDFN,ECD,ECST,ECIEN)) Q:'ECIEN  D
"RTN","ECRDSSU2",25,0)
 ... S ECREC=$G(^ECH(ECIEN,0))
"RTN","ECRDSSU2",26,0)
 ... I ECD=+$P(ECREC,"^",7) D CRETMP
"RTN","ECRDSSU2",27,0)
 Q
"RTN","ECRDSSU2",28,0)
 ;
"RTN","ECRDSSU2",29,0)
CRETMP ;- Create ^TMP("ECRPT" array w/format:
"RTN","ECRDSSU2",30,0)
 ;    ^TMP("ECRPT",$J,location,DSS Unit,category,count)=procedure^volume^
"RTN","ECRDSSU2",31,0)
 ;     CPT modifiers
"RTN","ECRDSSU2",32,0)
 ;
"RTN","ECRDSSU2",33,0)
 S ECTC=$S(+$P(ECREC,"^",8)=0:-1,1:+$P(ECREC,"^",8)),ECTP=$P($G(ECREC),"^",9)
"RTN","ECRDSSU2",34,0)
 S ECNT=ECNT+1,ECTP=$P(ECTP,";")_";"_$E($P(ECTP,";",2),1)
"RTN","ECRDSSU2",35,0)
 S ECMODS="" I $O(^ECH(ECIEN,"MOD",0))'="" D
"RTN","ECRDSSU2",36,0)
 . K ECMOD S ECMODF=$$MOD^ECUTL(ECIEN,"I",.ECMOD) I 'ECMODF Q
"RTN","ECRDSSU2",37,0)
 . S SEQ="" F  S SEQ=$O(ECMOD(SEQ)) Q:SEQ=""  D
"RTN","ECRDSSU2",38,0)
 . . S ECMODS=ECMODS_$S(ECMODS="":"",1:";")_SEQ
"RTN","ECRDSSU2",39,0)
 S ^TMP("ECRPT",$J,+$P(ECREC,"^",4),+$P(ECREC,"^",7),ECTC,ECNT)=ECTP_"^"_+$P(ECREC,"^",10)_"^"_ECMODS
"RTN","ECRDSSU2",40,0)
 Q
"RTN","ECRDSSU2",41,0)
 ;
"RTN","ECRDSSU2",42,0)
STORE ;Put data into ^TMP($J,"ECRPT")
"RTN","ECRDSSU2",43,0)
 N ECCAT,ECNT,ECOCAT,ECDSS,ECLOCAT,ECPR,ECVOL,ECMOD,ECSYI,ECLOCNM,ECDSSNM,ECCNAM,ECPRCODE,ECPNAM,ECPRN
"RTN","ECRDSSU2",44,0)
 N MOD1,VOL1,MOD2,VOL2,MOD3,VOL3
"RTN","ECRDSSU2",45,0)
 S (ECNT,ECDSS,ECLOCAT)=0,(ECCAT,ECOCAT)=""
"RTN","ECRDSSU2",46,0)
 I '$D(^TMP("ECRPT",$J)) Q
"RTN","ECRDSSU2",47,0)
 F  S ECLOCAT=$O(^TMP("ECRPT",$J,ECLOCAT)) Q:'ECLOCAT  D
"RTN","ECRDSSU2",48,0)
 . F  S ECDSS=$O(^TMP("ECRPT",$J,ECLOCAT,ECDSS)) Q:'ECDSS  D
"RTN","ECRDSSU2",49,0)
 .. S ECOCAT=0
"RTN","ECRDSSU2",50,0)
 .. D LOCNAM,DSSUNAM
"RTN","ECRDSSU2",51,0)
 .. F  S ECCAT=$O(^TMP("ECRPT",$J,ECLOCAT,ECDSS,ECCAT)) Q:ECCAT=""  K ECTMP D
"RTN","ECRDSSU2",52,0)
 ... F  S ECNT=$O(^TMP("ECRPT",$J,ECLOCAT,ECDSS,ECCAT,ECNT)) Q:'ECNT  D
"RTN","ECRDSSU2",53,0)
 .... S (ECPR,ECVOL)=0
"RTN","ECRDSSU2",54,0)
 .... S ECPR=$P($G(^TMP("ECRPT",$J,ECLOCAT,ECDSS,ECCAT,ECNT)),"^")
"RTN","ECRDSSU2",55,0)
 .... S ECVOL=$P($G(^TMP("ECRPT",$J,ECLOCAT,ECDSS,ECCAT,ECNT)),"^",2)
"RTN","ECRDSSU2",56,0)
 .... S ECMOD=$P($G(^TMP("ECRPT",$J,ECLOCAT,ECDSS,ECCAT,ECNT)),"^",3)
"RTN","ECRDSSU2",57,0)
 .... S ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR)=$G(ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR))+ECVOL D:ECMOD'="" SETMOD Q
"RTN","ECRDSSU2",58,0)
 ... S ECPR="" F  S ECPR=$O(ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR)) Q:ECPR=""  D
"RTN","ECRDSSU2",59,0)
 .... S ECCNAM=$S($P($G(^EC(726,$S(ECCAT<1:0,1:+ECCAT),0)),"^")'="":$P($G(^EC(726,$S(ECCAT<1:0,1:+ECCAT),0)),"^"),1:"None")
"RTN","ECRDSSU2",60,0)
 .... S ECPRN=$S($P(ECPR,";",2)="E":ECPR_"C(725,",1:ECPR_"CPT(")
"RTN","ECRDSSU2",61,0)
 .... S ECSYI=+$O(^ECJ("AP",ECLOCAT,ECDSS,$S(ECCAT<1:0,1:+ECCAT),ECPRN,0)),ECSYN=$P($G(^ECJ(ECSYI,"PRO")),"^",2)
"RTN","ECRDSSU2",62,0)
 .... S ECPI="",ECPRCODE=""
"RTN","ECRDSSU2",63,0)
 .... S ECCPT=$S($P(ECPR,";",2)="I":+ECPR,1:$P($G(^EC(725,+ECPR,0)),"^",5))
"RTN","ECRDSSU2",64,0)
 .... I ECCPT'="" S ECPI=$$CPT^ICPTCOD(ECCPT,$P(ECENDDT,".")),ECCPT=$P(ECPI,"^",2)
"RTN","ECRDSSU2",65,0)
 .... S ECPNAM=$S($P(ECPR,";",2)="E":$G(^EC(725,+$P(ECPR,";"),0)),$P(ECPR,";",2)="I":$P(ECPI,"^",3),1:"") I $P(ECPR,";",2)="E" S ECPRCODE=$P(ECPNAM,U,2),ECPNAM=$P(ECPNAM,U)
"RTN","ECRDSSU2",66,0)
 .... S CNT=CNT+1 S ^TMP($J,"ECRPT",CNT)=ECLOCNM_U_ECDSSNM_U_ECCNAM_U_ECCPT_U_ECPRCODE_U_ECPNAM_U_$G(ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR))_U_ECSYN
"RTN","ECRDSSU2",67,0)
 .... D ORDMODS ;Get top 3 mods by volume
"RTN","ECRDSSU2",68,0)
 .... S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_U_MOD1_U_VOL1_U_MOD2_U_VOL2_U_MOD3_U_VOL3
"RTN","ECRDSSU2",69,0)
 Q
"RTN","ECRDSSU2",70,0)
 ;
"RTN","ECRDSSU2",71,0)
SETMOD ;Set CPT modifiers in ECTMP array
"RTN","ECRDSSU2",72,0)
 N MOD,I
"RTN","ECRDSSU2",73,0)
 F I=1:1 S MOD=$P(ECMOD,";",I) Q:MOD=""  D
"RTN","ECRDSSU2",74,0)
 . S ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR,MOD)=$G(ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR,MOD))+ECVOL
"RTN","ECRDSSU2",75,0)
 Q
"RTN","ECRDSSU2",76,0)
LOCNAM ;- Get location name
"RTN","ECRDSSU2",77,0)
 ;
"RTN","ECRDSSU2",78,0)
 N I
"RTN","ECRDSSU2",79,0)
 F I=0:0 S I=$O(ECLOC(I)) Q:'I  I $P($G(ECLOC(I)),"^")=ECLOCAT S ECLOCNM=$P(ECLOC(I),"^",2)
"RTN","ECRDSSU2",80,0)
 Q
"RTN","ECRDSSU2",81,0)
 ;
"RTN","ECRDSSU2",82,0)
DSSUNAM ;- Get DSS Unit name
"RTN","ECRDSSU2",83,0)
 ;
"RTN","ECRDSSU2",84,0)
 N I
"RTN","ECRDSSU2",85,0)
 F I=0:0 S I=$O(ECDSSU(I)) Q:'I  I $P($G(ECDSSU(I)),"^")=ECDSS S ECDSSNM=$P(ECDSSU(I),"^",2)
"RTN","ECRDSSU2",86,0)
 Q
"RTN","ECRDSSU2",87,0)
 ;
"RTN","ECRDSSU2",88,0)
ORDMODS ;Find first three mods by volume
"RTN","ECRDSSU2",89,0)
 N MOD,ORD,VOL,NUM
"RTN","ECRDSSU2",90,0)
 S (MOD1,VOL1,MOD2,VOL2,MOD3,VOL3)="",NUM=0
"RTN","ECRDSSU2",91,0)
 S MOD="" F  S MOD=$O(ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR,MOD)) Q:'+MOD  S ORD(-ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR,MOD),MOD)=""
"RTN","ECRDSSU2",92,0)
 I $D(ORD) S VOL="" F  S VOL=$O(ORD(VOL)) Q:VOL=""!(NUM=3)  S MOD="" F  S MOD=$O(ORD(VOL,MOD)) Q:MOD=""!(NUM=3)   S NUM=NUM+1 S @("MOD"_NUM)=$$MODNM(MOD),@("VOL"_NUM)=-VOL
"RTN","ECRDSSU2",93,0)
 Q
"RTN","ECRDSSU2",94,0)
 ;
"RTN","ECRDSSU2",95,0)
MODNM(IEN) ;Get modifier name
"RTN","ECRDSSU2",96,0)
 N MOD,MODI,MODESC
"RTN","ECRDSSU2",97,0)
 S MODI=$$MOD^ICPTMOD(IEN,"I",$P(ECENDDT,"."))
"RTN","ECRDSSU2",98,0)
 S MOD=$P(MODI,U,2) I MOD="" Q MOD
"RTN","ECRDSSU2",99,0)
 S MODESC=$S($P(MODI,U,3)'="":$P(MODI,U,3),1:"Unknown")
"RTN","ECRDSSU2",100,0)
 Q MOD_" "_MODESC
"RTN","ECRPCLS")
0^2^B64728262^B51723587
"RTN","ECRPCLS",1,0)
ECRPCLS ;ALB/JAP - Event Capture Invalid Provider Report ;12/10/12  16:10
"RTN","ECRPCLS",2,0)
 ;;2.0;EVENT CAPTURE;**5,47,119**;8 May 96;Build 12
"RTN","ECRPCLS",3,0)
 ;
"RTN","ECRPCLS",4,0)
EN ;entry point from menu option
"RTN","ECRPCLS",5,0)
 W !
"RTN","ECRPCLS",6,0)
 D RANGE
"RTN","ECRPCLS",7,0)
 I '$G(ECLOOP)!'$G(ECBEGIN)!'$G(ECEND) G EXIT
"RTN","ECRPCLS",8,0)
 W !
"RTN","ECRPCLS",9,0)
 D SORT
"RTN","ECRPCLS",10,0)
 I $G(DIRUT) G EXIT
"RTN","ECRPCLS",11,0)
 I "PR"'[$G(ECSORT) G EXIT
"RTN","ECRPCLS",12,0)
 K DIR,DIRUT,DUOUT
"RTN","ECRPCLS",13,0)
 W !
"RTN","ECRPCLS",14,0)
 D DEVICE
"RTN","ECRPCLS",15,0)
 I POP G EXIT
"RTN","ECRPCLS",16,0)
 I $G(ZTSK) G EXIT
"RTN","ECRPCLS",17,0)
 I $G(IO("Q")),'$G(ZTSK) G EXIT
"RTN","ECRPCLS",18,0)
 D START
"RTN","ECRPCLS",19,0)
 D HOME^%ZIS
"RTN","ECRPCLS",20,0)
 G EXIT
"RTN","ECRPCLS",21,0)
 ;
"RTN","ECRPCLS",22,0)
START ;queued entry point or continuation
"RTN","ECRPCLS",23,0)
 D PROCESS
"RTN","ECRPCLS",24,0)
 I $G(ECPTYP)="E" D EXPORT,EXIT Q  ;119 Export to excel
"RTN","ECRPCLS",25,0)
 U IO D PRINT
"RTN","ECRPCLS",26,0)
 I $D(ECGUI) D EXIT Q
"RTN","ECRPCLS",27,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECRPCLS",28,0)
 I $D(ZTQUEUED) S ZTREQ="@" D EXIT
"RTN","ECRPCLS",29,0)
 Q
"RTN","ECRPCLS",30,0)
 ;
"RTN","ECRPCLS",31,0)
RANGE ;get any date range between T and T-365
"RTN","ECRPCLS",32,0)
 N X1,X2,ECSTDT,ECENDDT
"RTN","ECRPCLS",33,0)
 W !,?5,"Enter a Begin Date and End Date for this Event Capture "
"RTN","ECRPCLS",34,0)
 W !,?5,"provider report -- both dates must be within the past "
"RTN","ECRPCLS",35,0)
 W !,?5,"365 days.",!
"RTN","ECRPCLS",36,0)
 S (ECBEGIN,ECEND)=0
"RTN","ECRPCLS",37,0)
 F  D  Q:ECBEGIN>0  Q:'$G(ECLOOP)
"RTN","ECRPCLS",38,0)
 .S ECLOOP=$$STDT^ECRUTL() I 'ECLOOP Q
"RTN","ECRPCLS",39,0)
 .S ECBEGIN=ECSTDT
"RTN","ECRPCLS",40,0)
 .S X1=DT,X2=ECBEGIN D ^%DTC I X>365 D
"RTN","ECRPCLS",41,0)
 ..W !!,?15,"The Begin Date for this report may not be"
"RTN","ECRPCLS",42,0)
 ..W !,?15,"more than 365 days ago.  Try again...",!
"RTN","ECRPCLS",43,0)
 ..S ECBEGIN=0
"RTN","ECRPCLS",44,0)
 Q:'$G(ECLOOP)!'$G(ECBEGIN)
"RTN","ECRPCLS",45,0)
 F  D  Q:ECEND>0  Q:'$G(ECLOOP)
"RTN","ECRPCLS",46,0)
 .S ECLOOP=$$ENDDT^ECRUTL(ECSTDT) I 'ECLOOP Q
"RTN","ECRPCLS",47,0)
 .S ECEND=ECENDDT
"RTN","ECRPCLS",48,0)
 .I ECEND>(DT+1) D
"RTN","ECRPCLS",49,0)
 ..W !!,?15,"The End Date for this report may not be"
"RTN","ECRPCLS",50,0)
 ..W !,?15,"a future date.  Try again...",!
"RTN","ECRPCLS",51,0)
 ..S ECEND=0
"RTN","ECRPCLS",52,0)
 Q 
"RTN","ECRPCLS",53,0)
 ;
"RTN","ECRPCLS",54,0)
SORT ;ask user if report should be alpha by patient (P) or
"RTN","ECRPCLS",55,0)
 ;                             alpha by provider (R)
"RTN","ECRPCLS",56,0)
 K DIR
"RTN","ECRPCLS",57,0)
 S DIR(0)="SAXB^P:PATIENT;R:PROVIDER"
"RTN","ECRPCLS",58,0)
 S DIR("?")="Enter an uppercase 'P' or 'R'."
"RTN","ECRPCLS",59,0)
 S DIR("A")="Select sorting by Patient or pRovider (P/R): "
"RTN","ECRPCLS",60,0)
 S DIR("A",1)=" "
"RTN","ECRPCLS",61,0)
 S DIR("A",2)="If you want the report to show Patient name in the 1st column,"
"RTN","ECRPCLS",62,0)
 S DIR("A",3)="enter a 'P'.  The listing will be alphabetical by Patient name."
"RTN","ECRPCLS",63,0)
 S DIR("A",4)=" "
"RTN","ECRPCLS",64,0)
 S DIR("A",5)="If you want the report to show Provider name in the 1st column,"
"RTN","ECRPCLS",65,0)
 S DIR("A",6)="enter an 'R'.  The listing will be alphabetical by Provider name."
"RTN","ECRPCLS",66,0)
 S DIR("A",7)=" "
"RTN","ECRPCLS",67,0)
 D ^DIR
"RTN","ECRPCLS",68,0)
 Q:$G(DIRUT)
"RTN","ECRPCLS",69,0)
 S ECSORT=Y
"RTN","ECRPCLS",70,0)
 Q
"RTN","ECRPCLS",71,0)
 ;
"RTN","ECRPCLS",72,0)
DEVICE ;get device and queue 
"RTN","ECRPCLS",73,0)
 K IOP S %ZIS="QM" D ^%ZIS
"RTN","ECRPCLS",74,0)
 I POP W !!,"No device selected.  Exiting...",!! S DIR(0)="E" W ! D ^DIR K DIR Q
"RTN","ECRPCLS",75,0)
 I $D(IO("Q")) D
"RTN","ECRPCLS",76,0)
 .S ZTRTN="START^ECRPCLS",ZTDESC="EC Invalid Provider Report"
"RTN","ECRPCLS",77,0)
 .S ZTSAVE("ECBEGIN")="",ZTSAVE("ECEND")="",ZTSAVE("ECSORT")=""
"RTN","ECRPCLS",78,0)
 .D ^%ZTLOAD
"RTN","ECRPCLS",79,0)
 .I '$G(ZTSK) W !,"Report canceled..." S DIR(0)="E" W ! D ^DIR K DIR Q
"RTN","ECRPCLS",80,0)
 .W !,"Report queued as Task #: ",ZTSK S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECRPCLS",81,0)
 Q
"RTN","ECRPCLS",82,0)
 ;
"RTN","ECRPCLS",83,0)
PROCESS ;process the "AC" x-ref in file #721
"RTN","ECRPCLS",84,0)
 ;^ECH("AC",date,file#721 ien)=""
"RTN","ECRPCLS",85,0)
 ;$ORDER from begindate to enddate
"RTN","ECRPCLS",86,0)
 ;use $$GET^XUA4A72(provider ien,date)
"RTN","ECRPCLS",87,0)
 ;if return is >0 then get next x-ref entry
"RTN","ECRPCLS",88,0)
 ;
"RTN","ECRPCLS",89,0)
 N ECD,ECDATA,ECDATE,ECDDT,ECDT,ECERR,ECIEN,ECPIEN,ECPRDT,ECPRIEN,ECPRVN,ECPT,ECPTN,ECS,ECSSN,ECT,ECU,ECU2,ECU3
"RTN","ECRPCLS",90,0)
 K ^TMP("ECRPCLS",$J) S ECDT=ECBEGIN
"RTN","ECRPCLS",91,0)
 F  S ECDT=$O(^ECH("AC",ECDT)) Q:ECDT>ECEND  Q:ECDT=""  D
"RTN","ECRPCLS",92,0)
 .S ECIEN=""
"RTN","ECRPCLS",93,0)
 .F  S ECIEN=$O(^ECH("AC",ECDT,ECIEN)) Q:ECIEN=""  D
"RTN","ECRPCLS",94,0)
 ..S ECDATA=$G(^ECH(ECIEN,0)) I '+ECDATA Q  ;file problem
"RTN","ECRPCLS",95,0)
 ..S ECPRDT=$P(ECDT,".",1),ECDDT=$P(ECDATA,"^",3) I ECDDT'=ECDT S ECPRDT=$P(ECDDT,".",1) ;there's a problem in the x-ref
"RTN","ECRPCLS",96,0)
 ..I ECPRDT<ECBEGIN!(ECPRDT>ECEND) Q
"RTN","ECRPCLS",97,0)
 ..S ECU=$P(ECDATA,"^",11),ECU2=$P(ECDATA,"^",15),ECU3=$P(ECDATA,"^",17)
"RTN","ECRPCLS",98,0)
 ..F ECPIEN=ECU,ECU2,ECU3 D
"RTN","ECRPCLS",99,0)
 ...Q:'+ECPIEN
"RTN","ECRPCLS",100,0)
 ...S ECERR=$$GET^XUA4A72(ECPIEN,ECPRDT) Q:+ECERR>0
"RTN","ECRPCLS",101,0)
 ...S ECD=$P(ECDDT,".",1),ECT=$P(ECDDT,".",2)
"RTN","ECRPCLS",102,0)
 ...S ECDATE=$E(ECD,4,5)_"/"_$E(ECD,6,7)_"/"_$E(ECD,2,3) I +ECT S ECT=$$LJ^XLFSTR(ECT,4,0),ECDATE=ECDATE_" "_$E(ECT,1,2)_":"_$E(ECT,3,4)
"RTN","ECRPCLS",103,0)
 ...S ECPT=$P(ECDATA,"^",2),ECPTN=$P($G(^DPT(ECPT,0)),"^",1) Q:ECPTN=""
"RTN","ECRPCLS",104,0)
 ...S ECS=$P(^(0),"^",9),ECS=$E(ECS,1,9),ECSSN=$E(ECS,6,9)
"RTN","ECRPCLS",105,0)
 ...S ECPRVN=$P($G(^VA(200,ECPIEN,0)),"^",1) Q:ECPRVN=""
"RTN","ECRPCLS",106,0)
 ...S ECPRIEN="("_ECPIEN_")",ECPRIEN=$$RJ^XLFSTR(ECPRIEN,10," ")
"RTN","ECRPCLS",107,0)
 ...;if sort by patient then patient name is 3rd subscript
"RTN","ECRPCLS",108,0)
 ...I ECSORT="P" S ^TMP("ECRPCLS",$J,ECPTN,ECPRVN,ECIEN)=ECERR_"^"_ECPRIEN_"^"_ECSSN_"^"_ECDATE
"RTN","ECRPCLS",109,0)
 ...;if sort by provider then provider name is 3rd subscript
"RTN","ECRPCLS",110,0)
 ...I ECSORT="R" S ^TMP("ECRPCLS",$J,ECPRVN,ECPTN,ECIEN)=ECERR_"^"_ECPRIEN_"^"_ECSSN_"^"_ECDATE
"RTN","ECRPCLS",111,0)
 Q
"RTN","ECRPCLS",112,0)
 ;
"RTN","ECRPCLS",113,0)
PRINT ;output report
"RTN","ECRPCLS",114,0)
 ;
"RTN","ECRPCLS",115,0)
 N X1,X2,PROVIDER,PATIENT,PAGE,PRNTDT,QFLAG,DASH,JJ,SS
"RTN","ECRPCLS",116,0)
 N ECDATA,ECDATE,ECERR,ECIEN,ECPRIEN,ECPRVN,ECPTN,ECSSN
"RTN","ECRPCLS",117,0)
 S (PAGE,QFLAG)=0 S $P(DASH,"-",80)=""
"RTN","ECRPCLS",118,0)
 S Y=$P(ECBEGIN,".",1)+1 D DD^%DT S ECBEGIN=Y S Y=$P(ECEND,".",1) D DD^%DT S ECEND=Y
"RTN","ECRPCLS",119,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S PRNTDT=Y
"RTN","ECRPCLS",120,0)
 D HEAD
"RTN","ECRPCLS",121,0)
 I '$D(^TMP("ECRPCLS",$J)) D  Q
"RTN","ECRPCLS",122,0)
 .W !!,?12,"No invalid providers found for date range specified."
"RTN","ECRPCLS",123,0)
 .I $E(IOST)="C"&('QFLAG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECRPCLS",124,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECRPCLS",125,0)
 .W:$E(IOST)'="C" @IOF
"RTN","ECRPCLS",126,0)
 S X1="" F  S X1=$O(^TMP("ECRPCLS",$J,X1)) Q:X1=""  D
"RTN","ECRPCLS",127,0)
 .S:ECSORT="P" ECPTN=X1 S:ECSORT="R" ECPRVN=X1
"RTN","ECRPCLS",128,0)
 .S X2="" F  S X2=$O(^TMP("ECRPCLS",$J,X1,X2)) Q:X2=""  D
"RTN","ECRPCLS",129,0)
 ..S:ECSORT="P" ECPRVN=X2 S:ECSORT="R" ECPTN=X2
"RTN","ECRPCLS",130,0)
 ..S ECIEN="",ECIEN=$O(^TMP("ECRPCLS",$J,X1,X2,ECIEN)),ECDATA=^(ECIEN)
"RTN","ECRPCLS",131,0)
 ..S ECERR=$P(ECDATA,"^",1),ECPRIEN=$P(ECDATA,"^",2),ECSSN=$P(ECDATA,"^",3),ECDATE=$P(ECDATA,"^",4)
"RTN","ECRPCLS",132,0)
 ..S PROVIDER=$$LJ^XLFSTR($E(ECPRVN,1,20),20," ")_" "_ECPRIEN_"  "_ECERR
"RTN","ECRPCLS",133,0)
 ..S PATIENT=$$LJ^XLFSTR($E(ECPTN,1,20),20," ")_" "_ECSSN_"  "_ECDATE
"RTN","ECRPCLS",134,0)
 ..D:($Y+3>IOSL) HEAD
"RTN","ECRPCLS",135,0)
 ..I ECSORT="P" W !,PATIENT_"  "_PROVIDER
"RTN","ECRPCLS",136,0)
 ..I ECSORT="R" W !,PROVIDER_"   "_PATIENT
"RTN","ECRPCLS",137,0)
 I $E(IOST)="C"&('QFLAG) S DIR(0)="E" D  D ^DIR W @IOF
"RTN","ECRPCLS",138,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECRPCLS",139,0)
 W:$E(IOST)'="C" @IOF
"RTN","ECRPCLS",140,0)
 Q
"RTN","ECRPCLS",141,0)
 ;
"RTN","ECRPCLS",142,0)
HEAD ;report header
"RTN","ECRPCLS",143,0)
 ;write the header line with page # and print date and explanation
"RTN","ECRPCLS",144,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECRPCLS",145,0)
 I $E(IOST)="C",PAGE>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLAG=1 Q
"RTN","ECRPCLS",146,0)
 W:$Y!($E(IOST)="C") @IOF
"RTN","ECRPCLS",147,0)
 S PAGE=PAGE+1
"RTN","ECRPCLS",148,0)
 W !,?12,"Event Capture Providers with Inactive/Missing Person Class"
"RTN","ECRPCLS",149,0)
 W !,?12,"for the Date Range "_ECBEGIN_" through "_ECEND
"RTN","ECRPCLS",150,0)
 W !!,"Printed: "_PRNTDT,?65,"Page: "_PAGE,!
"RTN","ECRPCLS",151,0)
 I PAGE=1 D
"RTN","ECRPCLS",152,0)
 .W !,?12,"The following entries in the Event Capture Patient file (#721)"
"RTN","ECRPCLS",153,0)
 .W !,?12,"are associated with a provider who meets one of the following"
"RTN","ECRPCLS",154,0)
 .W !,?12,"criteria:",!
"RTN","ECRPCLS",155,0)
 .W !,?22,"(a) The provider has no Person Class"
"RTN","ECRPCLS",156,0)
 .W !,?22,"    specified in file #200. (Error=-1)"
"RTN","ECRPCLS",157,0)
 .W !,?22,"(b) The provider does not have an active"
"RTN","ECRPCLS",158,0)
 .W !,?22,"    Person Class in file #200 for the"
"RTN","ECRPCLS",159,0)
 .W !,?22,"    date of procedure. (Error=-2)",!
"RTN","ECRPCLS",160,0)
 .W !,?12,"The provider's record number in file #200 is shown in parentheses"
"RTN","ECRPCLS",161,0)
 .W !,?12,"after the provider name.",!
"RTN","ECRPCLS",162,0)
 I ECSORT="P" D SUBHDA
"RTN","ECRPCLS",163,0)
 I ECSORT="R" D SUBHDB
"RTN","ECRPCLS",164,0)
 Q
"RTN","ECRPCLS",165,0)
 ;
"RTN","ECRPCLS",166,0)
SUBHDA ;subheader for sort by patient
"RTN","ECRPCLS",167,0)
 W !,?27,"Date of"
"RTN","ECRPCLS",168,0)
 W !,"Patient",?21,"SSN",?27,"Procedure",?43,"Provider",?75,"Err."
"RTN","ECRPCLS",169,0)
 W !,DASH,!
"RTN","ECRPCLS",170,0)
 Q
"RTN","ECRPCLS",171,0)
 ;
"RTN","ECRPCLS",172,0)
SUBHDB ;subheader for sort by provider
"RTN","ECRPCLS",173,0)
 W !,?65,"Date of"
"RTN","ECRPCLS",174,0)
 W !,"Provider",?32,"Err.",?38,"Patient",?59,"SSN",?65,"Procedure"
"RTN","ECRPCLS",175,0)
 W !,DASH,!
"RTN","ECRPCLS",176,0)
 Q
"RTN","ECRPCLS",177,0)
 ;
"RTN","ECRPCLS",178,0)
EXIT ;common exit point & clean-up
"RTN","ECRPCLS",179,0)
 D ^ECKILL
"RTN","ECRPCLS",180,0)
 D:'$D(ECGUI) ^%ZISC
"RTN","ECRPCLS",181,0)
 K ^TMP("ECRPCLS",$J)
"RTN","ECRPCLS",182,0)
 K DIR,DIRUT,DTOUT,DUOUT,ECBEGIN,ECEND,ECSORT,ECLOOP
"RTN","ECRPCLS",183,0)
 K IO("Q"),POP,X,Y,ZTSK,ZTRTN,ZTDESC,ZTSAVE
"RTN","ECRPCLS",184,0)
 Q
"RTN","ECRPCLS",185,0)
 ;
"RTN","ECRPCLS",186,0)
EXPORT ;119 Put data in excel format
"RTN","ECRPCLS",187,0)
 N X1,X2,CNT,JJ,SS,ECDATA,ECDATE,ECERR,ECIEN,ECPRIEN,ECPRVN,ECPTN,ECSSN
"RTN","ECRPCLS",188,0)
 S CNT=1
"RTN","ECRPCLS",189,0)
 S ^TMP($J,"ECRPT",CNT)="PATIENT NAME^SSN^PROCEDURE DATE^PROVIDER NAME^PROVIDER IEN #^ERROR"
"RTN","ECRPCLS",190,0)
 I '$D(^TMP("ECRPCLS",$J)) Q  ;no data to export
"RTN","ECRPCLS",191,0)
 S X1="" F  S X1=$O(^TMP("ECRPCLS",$J,X1)) Q:X1=""  D
"RTN","ECRPCLS",192,0)
 .S:ECSORT="P" ECPTN=X1 S:ECSORT="R" ECPRVN=X1
"RTN","ECRPCLS",193,0)
 .S X2="" F  S X2=$O(^TMP("ECRPCLS",$J,X1,X2)) Q:X2=""  D
"RTN","ECRPCLS",194,0)
 ..S:ECSORT="P" ECPRVN=X2 S:ECSORT="R" ECPTN=X2
"RTN","ECRPCLS",195,0)
 ..S ECIEN="",ECIEN=$O(^TMP("ECRPCLS",$J,X1,X2,ECIEN)),ECDATA=^(ECIEN)
"RTN","ECRPCLS",196,0)
 ..S ECERR=$P(ECDATA,"^",1),ECPRIEN=$P(ECDATA,"^",2),ECSSN=$P(ECDATA,"^",3),ECDATE=$P(ECDATA,"^",4)
"RTN","ECRPCLS",197,0)
 ..S CNT=CNT+1,^TMP($J,"ECRPT",CNT)=ECPTN_U_ECSSN_U_ECDATE_U_ECPRVN_U_+$TR(ECPRIEN," ()","")_U_$S(ECERR=-1:"No Person Class",1:"Person class not active on procedure date")
"RTN","ECRPCLS",198,0)
 Q
"RTN","ECRRPT")
0^24^B57156527^B55454344
"RTN","ECRRPT",1,0)
ECRRPT ;ALB/JAM - Event Capture Report RPC Broker ;11/15/12  13:06
"RTN","ECRRPT",2,0)
 ;;2.0;EVENT CAPTURE;**25,32,41,56,61,82,94,95,108,119**;8 May 96;Build 12
"RTN","ECRRPT",3,0)
 ;
"RTN","ECRRPT",4,0)
 ;119 For patch 119, added comment regarding ECPTYP being set to "E" when exporting, for those reports that are now exportable.
"RTN","ECRRPT",5,0)
REQCHK(ECV) ;Required data check
"RTN","ECRRPT",6,0)
 N I,C
"RTN","ECRRPT",7,0)
 S C=1
"RTN","ECRRPT",8,0)
 F I=1:1:$L(ECV,U) I '$D(@$P(ECV,U,I)) D
"RTN","ECRRPT",9,0)
 . S ^TMP("ECMSG",$J,C)="0^Required data missing "_$P(ECV,U,I)
"RTN","ECRRPT",10,0)
 . S C=C+1,ECERR=1
"RTN","ECRRPT",11,0)
 Q
"RTN","ECRRPT",12,0)
DATECHK(ECSD,ECED) ;Check human format date and converts to FileMan format
"RTN","ECRRPT",13,0)
 ;    Input  ECSD  - Start Date (ex. 10/9/01)
"RTN","ECRRPT",14,0)
 ;           ECED  - End Date
"RTN","ECRRPT",15,0)
 N ECI,X,Y
"RTN","ECRRPT",16,0)
 S %DT="X" F ECI="ECSD","ECED" S X=@ECI D ^%DT S @ECI=Y
"RTN","ECRRPT",17,0)
 S ECSD=$S(ECSD=-1:DT,1:ECSD),ECED=$S(ECED=-1:DT,1:ECED)
"RTN","ECRRPT",18,0)
 S ECDATE=$$FMTE^XLFDT(ECSD)_"^"_$$FMTE^XLFDT(ECED)
"RTN","ECRRPT",19,0)
 Q
"RTN","ECRRPT",20,0)
QUEUE ;Queues report to printer
"RTN","ECRRPT",21,0)
 N ZTIO,ZTDESC,ZTRTN,ZTDTH,ZTSAVE,%ZIS,I,IOP,POP
"RTN","ECRRPT",22,0)
 S IOP="Q;`"_ECDEV,%ZIS="Q" D ^%ZIS I POP D  Q
"RTN","ECRRPT",23,0)
 . S ^TMP("ECMSG",$J,1)="0^Device selection unsuccessful"
"RTN","ECRRPT",24,0)
 S ZTIO=ION,ZTDESC=ECDESC,ZTRTN=ECROU
"RTN","ECRRPT",25,0)
 S ZTDTH=$$FMTH^XLFDT(ECQDT)
"RTN","ECRRPT",26,0)
 ;D NOW^%DTC S ZTDTH=$S(%'<ECQDT:%+.0002,1:ECQDT)
"RTN","ECRRPT",27,0)
 F I=1:1:$L(ECV,U) I $D(@$P(ECV,U,I)) S ZTSAVE($P(ECV,U,I))=""
"RTN","ECRRPT",28,0)
 M ZTSAVE=ECSAVE
"RTN","ECRRPT",29,0)
 D ^%ZTLOAD,HOME^%ZIS,^%ZISC ;K IO("Q")
"RTN","ECRRPT",30,0)
 I $D(ZTSK) S ^TMP("ECMSG",$J)="1^Report queued. Task #"_ZTSK Q
"RTN","ECRRPT",31,0)
 S ^TMP("ECMSG",$J)="0^Task Rejected"
"RTN","ECRRPT",32,0)
 Q
"RTN","ECRRPT",33,0)
 ;
"RTN","ECRRPT",34,0)
ECPAT ;Patient Summary Report for RPC Call
"RTN","ECRRPT",35,0)
 ;     Variables passed in
"RTN","ECRRPT",36,0)
 ;       ECDFN  - Patient IEN for file #2
"RTN","ECRRPT",37,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",38,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",39,0)
 ;       ECRY   - Print Procedure Reason (optional)
"RTN","ECRRPT",40,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",41,0)
 ;                or (E)xport
"RTN","ECRRPT",42,0)
 ;
"RTN","ECRRPT",43,0)
 ;     Variable return
"RTN","ECRRPT",44,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",45,0)
 N ECDATE,ECPAT,ECV,DIC,X,Y,ECROU,ECDESC
"RTN","ECRRPT",46,0)
 S ECV="ECDFN^ECSD^ECED" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",47,0)
 S DIC=2,DIC(0)="QNMZX",X=ECDFN D ^DIC Q:Y<0  S ECPAT=$P(Y,U,2)
"RTN","ECRRPT",48,0)
 ;EC*2.0*108 - Convert Date/Time to Date only
"RTN","ECRRPT",49,0)
 S ECSD=$P(ECSD,"."),ECED=$P(ECED,".")
"RTN","ECRRPT",50,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",51,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT",52,0)
 I $E($G(ECRY))'="Y" K ECRY
"RTN","ECRRPT",53,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",54,0)
 . S ECV="ECDFN^ECPAT^ECDATE^ECSD^ECED^ECRY",ECROU="SUM^ECPAT"
"RTN","ECRRPT",55,0)
 . S ECDESC="EVENT CAPTURE PATIENT SUMMARY"
"RTN","ECRRPT",56,0)
 . D QUEUE
"RTN","ECRRPT",57,0)
 D SUM^ECPAT
"RTN","ECRRPT",58,0)
 Q
"RTN","ECRRPT",59,0)
ECRDSSU ;DSS Unit Workload Summary Report
"RTN","ECRRPT",60,0)
 ;     Variables passed in
"RTN","ECRRPT",61,0)
 ;       ECL    - Location to report (1 or ALL)
"RTN","ECRRPT",62,0)
 ;       ECD    - DSS Unit to report (1, some or ALL)
"RTN","ECRRPT",63,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",64,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",65,0)
 ;       ECDUZ  - User IEN from file (#200)
"RTN","ECRRPT",66,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",67,0)
 ;                or (E)xport
"RTN","ECRRPT",68,0)
 ;
"RTN","ECRRPT",69,0)
 ;     Variable return
"RTN","ECRRPT",70,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",71,0)
 N ECLOC,ECDSSU,ECV,ECI,ECSTDT,ECENDDT,ECKEY,ECROU,ECSAVE,ECDESC,ECNT
"RTN","ECRRPT",72,0)
 N ECDATE,ECX,DIC,X,Y
"RTN","ECRRPT",73,0)
 S ECV="ECL^ECD0^ECSD^ECED^ECDUZ" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",74,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location." Q
"RTN","ECRRPT",75,0)
 . I ECL="ALL" D LOCARRY^ECRUTL Q
"RTN","ECRRPT",76,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL D ^DIC Q:Y<0  S ECLOC(1)=+Y_"^"_$P(Y,U,2)
"RTN","ECRRPT",77,0)
 D  I '$D(ECDSSU) S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT",78,0)
 . I ECD0="ALL" D  Q
"RTN","ECRRPT",79,0)
 . . S ECKEY=$S($D(^XUSEC("ECALLU",ECDUZ)):1,1:0) D ALLU^ECRUTL
"RTN","ECRRPT",80,0)
 . S (ECI,ECNT)=0 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT",81,0)
 . . K DIC S DIC=724,DIC(0)="QNZX",X=@ECX D ^DIC I Y<0 Q
"RTN","ECRRPT",82,0)
 . . S ECNT=ECNT+1,ECDSSU(ECNT)=Y
"RTN","ECRRPT",83,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",84,0)
 S ECSTDT=ECSD-.0001,ECENDDT=ECED+.9999
"RTN","ECRRPT",85,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",86,0)
 . S ECV="ECDATE^ECSTDT^ECENDDT",ECROU="STRPT^ECRDSSU"
"RTN","ECRRPT",87,0)
 . S (ECSAVE("ECLOC("),ECSAVE("ECDSSU("))=""
"RTN","ECRRPT",88,0)
 . S ECDESC="DSS UNIT WORKLOAD SUMMARY REPORT"
"RTN","ECRRPT",89,0)
 . D QUEUE
"RTN","ECRRPT",90,0)
 D STRPT^ECRDSSU
"RTN","ECRRPT",91,0)
 Q
"RTN","ECRRPT",92,0)
PROSUM ;Provider (1-7) Summary Report for RPC Call 119-Updated comment to reflect 7 instead of 3
"RTN","ECRRPT",93,0)
 ;     Variables passed in
"RTN","ECRRPT",94,0)
 ;       ECU    - Provider IEN for file #200
"RTN","ECRRPT",95,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",96,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",97,0)
 ;       ECRY   - Print Procedure Reason (optional)
"RTN","ECRRPT",98,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",99,0)
 ;                or (E)xport
"RTN","ECRRPT",100,0)
 ;
"RTN","ECRRPT",101,0)
 ;     Variable return
"RTN","ECRRPT",102,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",103,0)
 N ECV,ECDATE,ECUN,ECROU,ECDESC,DIC,X,Y
"RTN","ECRRPT",104,0)
 S ECV="ECU^ECSD^ECED" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",105,0)
 S DIC=200,DIC(0)="QNZX",X=ECU D ^DIC D:Y<0  Q:Y<0  S ECUN=$P(Y,U,2)
"RTN","ECRRPT",106,0)
 . S ^TMP("ECMSG",$J)="1^Invalid Provider."
"RTN","ECRRPT",107,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",108,0)
 I ECRY'="Y" K ECRY
"RTN","ECRRPT",109,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",110,0)
 . S ECV="ECU^ECUN^ECDATE^ECSD^ECED^ECRY"
"RTN","ECRRPT",111,0)
 . S ECROU="EN^ECPRSUM1",ECDESC="Event Capture Provider Summary"
"RTN","ECRRPT",112,0)
 . D QUEUE
"RTN","ECRRPT",113,0)
 D EN^ECPRSUM1
"RTN","ECRRPT",114,0)
 Q
"RTN","ECRRPT",115,0)
ECPROV ;Provider Summary Report for RPC Call
"RTN","ECRRPT",116,0)
 ;     Variables passed in
"RTN","ECRRPT",117,0)
 ;       ECL    - Location to report (1 or ALL)
"RTN","ECRRPT",118,0)
 ;       ECD    - DSS Unit to report (1 or ALL)
"RTN","ECRRPT",119,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",120,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",121,0)
 ;       ECRY   - Print Procedure Reason (optional)
"RTN","ECRRPT",122,0)
 ;       ECDUZ  - User DUZ (ien in #200)
"RTN","ECRRPT",123,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",124,0)
 ;                or (E)xport
"RTN","ECRRPT",125,0)
 ;
"RTN","ECRRPT",126,0)
 ;     Variable return
"RTN","ECRRPT",127,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",128,0)
 N ECV,ECDN,ECDATE,ECLN,ECSAVE,ECDESC,ECROU,DIC,X,Y,CNT,UNIT
"RTN","ECRRPT",129,0)
 S ECDN="ALL",ECV="ECL^ECD^ECSD^ECED^ECDUZ" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",130,0)
 I ECL'="ALL" D  I ECERR Q
"RTN","ECRRPT",131,0)
 . ;The line below was changed by VMP for NOIS ANN-1003-42305
"RTN","ECRRPT",132,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL D ^DIC D:Y<0  Q:Y<0  S ECLN=$P(Y,U,2)
"RTN","ECRRPT",133,0)
 . . S ^TMP("ECMSG",$J)="1^Invalid Location.",ECERR=1
"RTN","ECRRPT",134,0)
 I ECD'="ALL" K DIC D  I ECERR Q
"RTN","ECRRPT",135,0)
 . S DIC=724,DIC(0)="QNMZX",X=ECD D ^DIC D:Y<0  Q:Y<0  S ECDN=$P(Y,U,2)
"RTN","ECRRPT",136,0)
 . . S ^TMP("ECMSG",$J)="1^Invalid Location.",ECERR=1
"RTN","ECRRPT",137,0)
 I ECD="ALL",'$D(^XUSEC("ECALLU",ECDUZ)) D
"RTN","ECRRPT",138,0)
 . S (ECD,ECDN)="SOME",(X,CNT)=0
"RTN","ECRRPT",139,0)
 . F  S X=$O(^VA(200,ECDUZ,"EC",X)) Q:'X  D
"RTN","ECRRPT",140,0)
 . . S CNT=CNT+1,UNIT=$P(^VA(200,ECDUZ,"EC",X,0),"^")
"RTN","ECRRPT",141,0)
 . . S UNIT(CNT)=UNIT_"^"_$P(^ECD(UNIT,0),"^")
"RTN","ECRRPT",142,0)
 ;I $E($G(ECRY))'="Y" K ECRY ;112 Removed check for ECRY as reasons always print - remove comment and next line to restore reason check
"RTN","ECRRPT",143,0)
 S ECRY="Y" ;112 Reasons always print
"RTN","ECRRPT",144,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",145,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999 S:'$D(UNIT) UNIT=""
"RTN","ECRRPT",146,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",147,0)
 . S ECV="ECDATE^ECSD^ECED^ECRY",ECROU="START^ECPROV2"
"RTN","ECRRPT",148,0)
 . S (ECSAVE("ECL*"),ECSAVE("ECD*"),ECSAVE("UNIT*"))=""
"RTN","ECRRPT",149,0)
 . S ECDESC="EVENT CAPTURE PROVIDER SUMMARY"
"RTN","ECRRPT",150,0)
 . D QUEUE
"RTN","ECRRPT",151,0)
 U IO D START^ECPROV2
"RTN","ECRRPT",152,0)
 Q
"RTN","ECRRPT",153,0)
ECOSSUM ;Ordering Section Summary Report for RPC Call
"RTN","ECRRPT",154,0)
 ;     Variables passed in
"RTN","ECRRPT",155,0)
 ;       ECOS   - Ordering Section
"RTN","ECRRPT",156,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",157,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",158,0)
 ;       ECL    - Location to report (1 or ALL)
"RTN","ECRRPT",159,0)
 ;       ECD    - DSS Unit to report (1, some or ALL)
"RTN","ECRRPT",160,0)
 ;       ECDUZ  - User ien (#200)
"RTN","ECRRPT",161,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",162,0)
 ;                or (E)xport
"RTN","ECRRPT",163,0)
 ;
"RTN","ECRRPT",164,0)
 ;     Variable return
"RTN","ECRRPT",165,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",166,0)
 N ECV,ECI,ECOSN,ECLOC,ECDSSU,ECDATE,ECNT,ECSAVE,ECROU,ECDESC,DIC,X,Y
"RTN","ECRRPT",167,0)
 S ECV="ECOS^ECL^ECD0^ECSD^ECED^ECDUZ" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",168,0)
 S DIC=723,DIC(0)="QNMZX",X=ECOS D ^DIC D:Y<0  Q:Y<0  S ECOSN=$P(Y,U,2)
"RTN","ECRRPT",169,0)
 . S ^TMP("ECMSG",$J)="1^Invalid Ordering Section.",ECERR=1
"RTN","ECRRPT",170,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location.",ECERR=1 Q
"RTN","ECRRPT",171,0)
 . K DIC I ECL="ALL" D LOCARRY^ECRUTL Q
"RTN","ECRRPT",172,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL D ^DIC Q:Y<0  S ECLOC(1)=+Y_"^"_$P(Y,U,2)
"RTN","ECRRPT",173,0)
 D  I '$D(ECDSSU) S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT",174,0)
 . I ECD0="ALL" D  Q
"RTN","ECRRPT",175,0)
 . . S ECKEY=$S($D(^XUSEC("ECALLU",ECDUZ)):1,1:0) D ALLU^ECRUTL
"RTN","ECRRPT",176,0)
 . S (ECI,ECNT)=0 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT",177,0)
 . . K DIC S DIC=724,DIC(0)="QNMZX",X=@ECX D ^DIC I Y<0 Q
"RTN","ECRRPT",178,0)
 . . S ECNT=ECNT+1,ECDSSU(ECNT)=Y
"RTN","ECRRPT",179,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",180,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT",181,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",182,0)
 . S ECV="ECOS^ECSD^ECED^ECOSN",ECROU="START^ECOSSUM"
"RTN","ECRRPT",183,0)
 . S (ECSAVE("ECLOC("),ECSAVE("ECDSSU("))=""
"RTN","ECRRPT",184,0)
 . S ECDESC="EC Ordering Section Summary"
"RTN","ECRRPT",185,0)
 . D QUEUE
"RTN","ECRRPT",186,0)
 D START^ECOSSUM
"RTN","ECRRPT",187,0)
 Q
"RTN","ECRRPT",188,0)
ECPCER ;PCE Data Summary Report for RPC Call
"RTN","ECRRPT",189,0)
 ;     Variables passed in
"RTN","ECRRPT",190,0)
 ;       ECDFN  - Patient IEN for file #2
"RTN","ECRRPT",191,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",192,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",193,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",194,0)
 ;                or (E)xport
"RTN","ECRRPT",195,0)
 ;
"RTN","ECRRPT",196,0)
 ;     Variable return
"RTN","ECRRPT",197,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",198,0)
 N ECV,ECDATE,ECPAT,ECROU,ECDESC,X,DIC,Y
"RTN","ECRRPT",199,0)
 S ECV="ECDFN^ECSD^ECED" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",200,0)
 S DIC=2,DIC(0)="QNMZX",X=ECDFN D ^DIC D:Y<0  Q:Y<0  S ECPAT=$P(Y,U,2)
"RTN","ECRRPT",201,0)
 . S ^TMP("ECMSG",$J)="1^Invalid Provider."
"RTN","ECRRPT",202,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",203,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT",204,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",205,0)
 . S ECV="ECDFN^ECPAT^ECDATE^ECSD^ECED",ECROU="SUM^ECPCER"
"RTN","ECRRPT",206,0)
 . S ECDESC="ECS/PCE PATIENT SUMMARY"
"RTN","ECRRPT",207,0)
 . D QUEUE
"RTN","ECRRPT",208,0)
 D SUM^ECPCER
"RTN","ECRRPT",209,0)
 Q
"RTN","ECRRPT",210,0)
ECRDSSA ;DSS Unit Activity Report
"RTN","ECRRPT",211,0)
 ;     Variables passed in
"RTN","ECRRPT",212,0)
 ;       ECL    - Location to report (1 or ALL)
"RTN","ECRRPT",213,0)
 ;       ECD0   - DSS Unit to report (1, some or ALL)
"RTN","ECRRPT",214,0)
 ;       ECSORT  - Sort type(P,S or R)
"RTN","ECRRPT",215,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",216,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",217,0)
 ;       ECDUZ  - User IEN from file (#200)
"RTN","ECRRPT",218,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",219,0)
 ;                or (E)xport
"RTN","ECRRPT",220,0)
 ;
"RTN","ECRRPT",221,0)
 ;     Variable return
"RTN","ECRRPT",222,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",223,0)
 N ECLOC,ECDSSU,ECV,ECI,ECSTDT,ECENDDT,ECKEY,ECROU,ECSAVE,ECDESC,ECNT
"RTN","ECRRPT",224,0)
 N ECDATE,ECX,DIC,X,Y
"RTN","ECRRPT",225,0)
 S ECV="ECL^ECD0^ECSORT^ECSD^ECED^ECDUZ" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",226,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location." Q
"RTN","ECRRPT",227,0)
 . I ECL="ALL" D LOCARRY^ECRUTL Q
"RTN","ECRRPT",228,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL D ^DIC Q:Y<0  S ECLOC(1)=+Y_"^"_$P(Y,U,2)
"RTN","ECRRPT",229,0)
 D  I '$D(ECDSSU) S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT",230,0)
 . I ECD0="ALL" D  Q
"RTN","ECRRPT",231,0)
 . . S ECKEY=$S($D(^XUSEC("ECALLU",ECDUZ)):1,1:0) D ALLU^ECRUTL
"RTN","ECRRPT",232,0)
 . S (ECI,ECNT)=0 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT",233,0)
 . . K DIC S DIC=724,DIC(0)="QNZX",X=@ECX D ^DIC I Y<0 Q
"RTN","ECRRPT",234,0)
 . . S ECNT=ECNT+1,ECDSSU(ECNT)=Y
"RTN","ECRRPT",235,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",236,0)
 S ECSTDT=ECSD-.0001,ECENDDT=ECED+.9999
"RTN","ECRRPT",237,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",238,0)
 . S ECV="ECSORT^ECDATE^ECSTDT^ECENDDT",ECROU="STRPT^ECRDSSA"
"RTN","ECRRPT",239,0)
 . S (ECSAVE("ECLOC("),ECSAVE("ECDSSU("))=""
"RTN","ECRRPT",240,0)
 . S ECDESC="DSS UNIT ACTIVITY REPORT"
"RTN","ECRRPT",241,0)
 . D QUEUE
"RTN","ECRRPT",242,0)
 D STRPT^ECRDSSA
"RTN","ECRRPT",243,0)
 Q
"RTN","ECRRPT1")
0^7^B64773176^B61256749
"RTN","ECRRPT1",1,0)
ECRRPT1 ;ALB/JAM;Event Capture Report RPC Broker ;12/10/12  16:59
"RTN","ECRRPT1",2,0)
 ;;2.0;EVENT CAPTURE;**25,32,33,61,78,72,90,95,100,107,112,119**;8 May 96;Build 12
"RTN","ECRRPT1",3,0)
 ;
"RTN","ECRRPT1",4,0)
 ;119 Updated comments for reports to include (E)xport as a value for ECPTYP
"RTN","ECRRPT1",5,0)
ECRPRSN ;Procedure Reason Report for RPC Call
"RTN","ECRRPT1",6,0)
 ;     Variables passed in
"RTN","ECRRPT1",7,0)
 ;       ECSD     - Start Date or Report
"RTN","ECRRPT1",8,0)
 ;       ECED     - End Date or Report
"RTN","ECRRPT1",9,0)
 ;       ECL0..n  - Location to report (1,some or ALL)
"RTN","ECRRPT1",10,0)
 ;       ECD0..n  - DSS Unit to report (1,some or ALL)
"RTN","ECRRPT1",11,0)
 ;       ECRY0..n - Procedure reason (some or ALL)
"RTN","ECRRPT1",12,0)
 ;       ECPTYP   - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",13,0)
 ;                  or (E)xport
"RTN","ECRRPT1",14,0)
 ;
"RTN","ECRRPT1",15,0)
 ;     Variable return
"RTN","ECRRPT1",16,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",17,0)
 N ECV,ECI,ECLOC,ECDSSU,ECDN,ECDATE,ECUN,ECNT,ECKEY,ECX,ECLINK,ECZ
"RTN","ECRRPT1",18,0)
 N ECROU,ECSAVE,ECDESC,ECW,DIC,X,Y,I,LIEN,ECJ
"RTN","ECRRPT1",19,0)
 S ECV="ECL0^ECD0^ECSD^ECED^ECRY0" D REQCHK^ECRRPT(ECV) I ECERR Q  ;112
"RTN","ECRRPT1",20,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location." Q
"RTN","ECRRPT1",21,0)
 . D LOCARRY^ECRUTL I ECL0="ALL" Q  ;112
"RTN","ECRRPT1",22,0)
 . K ECLOC F I=0:1 S LIEN=$G(@("ECL"_I)) Q:'+LIEN  I $D(ECLOC1(LIEN)) S ECLOC(I+1)=LIEN_"^"_ECLOC1(LIEN) ;112
"RTN","ECRRPT1",23,0)
 D  I '$D(ECDSSU) S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT1",24,0)
 . I ECD0="ALL" D  Q
"RTN","ECRRPT1",25,0)
 . . I '$D(ECDUZ) Q
"RTN","ECRRPT1",26,0)
 . . S ECKEY=$S($D(^XUSEC("ECALLU",ECDUZ)):1,1:0) D ALLU^ECRUTL
"RTN","ECRRPT1",27,0)
 . S (ECI,ECNT)=0 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT1",28,0)
 . . K DIC S DIC=724,DIC(0)="QNMZX",X=@ECX D ^DIC I Y<0 Q
"RTN","ECRRPT1",29,0)
 . . S ECNT=ECNT+1,ECDSSU(ECNT)=Y
"RTN","ECRRPT1",30,0)
 S ECX=0 D
"RTN","ECRRPT1",31,0)
 .I ECRY0="ALL" D PXREAS Q
"RTN","ECRRPT1",32,0)
 .N TLOC,TDSS,ECY
"RTN","ECRRPT1",33,0)
 .S ECI=0 F  S ECI=$O(ECLOC(ECI)) Q:'ECI  S TLOC(+ECLOC(ECI))=""
"RTN","ECRRPT1",34,0)
 .S ECI=0 F  S ECI=$O(ECDSSU(ECI)) Q:'ECI  S TDSS(+ECDSSU(ECI))=""
"RTN","ECRRPT1",35,0)
 .S ECI=0 F ECI=0:1 S ECZ="ECRY"_ECI Q:'$D(@ECZ)  D
"RTN","ECRRPT1",36,0)
 ..S ECW=0 F  S ECW=$O(^ECL("B",@ECZ,ECW)) Q:'ECW  D
"RTN","ECRRPT1",37,0)
 ...S ECY=$P($G(^ECL(ECW,0)),U,2) Q:ECY=""  S ECJ=$P($G(^ECJ(ECY,0)),U)
"RTN","ECRRPT1",38,0)
 ...Q:ECJ=""  Q:'$D(TLOC($P(ECJ,"-")))  Q:'$D(TDSS($P(ECJ,"-",2)))
"RTN","ECRRPT1",39,0)
 ...S ECLINK(ECW)=$P($G(^ECL(ECW,0)),U)
"RTN","ECRRPT1",40,0)
 D DATECHK^ECRRPT(.ECSD,.ECED) S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT1",41,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",42,0)
 . S ECV="ECSD^ECED^ECPTYP",ECROU="STRPT^ECRPRSN2"
"RTN","ECRRPT1",43,0)
 . S (ECSAVE("ECLOC("),ECSAVE("ECDSSU("),ECSAVE("ECLINK("))=""
"RTN","ECRRPT1",44,0)
 . S ECDESC="EC Procedure Reason Report"
"RTN","ECRRPT1",45,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",46,0)
 D STRPT^ECRPRSN2 ;112
"RTN","ECRRPT1",47,0)
 Q
"RTN","ECRRPT1",48,0)
PXREAS ;Procedure reason link
"RTN","ECRRPT1",49,0)
 N ECZ,ECX,ECY,ECV
"RTN","ECRRPT1",50,0)
 S ECX=0 F  S ECX=$O(ECLOC(ECX)) Q:'ECX  S ECY=0 D
"RTN","ECRRPT1",51,0)
 . F  S ECY=$O(ECDSSU(ECY)) Q:'ECY  S ECV=+ECLOC(ECX)_"-"_+ECDSSU(ECY) D
"RTN","ECRRPT1",52,0)
 . . S ECZ=ECV_"-0-0"
"RTN","ECRRPT1",53,0)
 . . F  S ECZ=$O(^ECJ("B",ECZ)) Q:('ECZ)!($P(ECZ,"-",1,2)'=ECV)  D
"RTN","ECRRPT1",54,0)
 . . . S ECW=$O(^ECJ("B",ECZ,"")) Q:ECW=""  D REALNK
"RTN","ECRRPT1",55,0)
 Q
"RTN","ECRRPT1",56,0)
REALNK ;Reason link
"RTN","ECRRPT1",57,0)
 N XX,YY,ZZ
"RTN","ECRRPT1",58,0)
 S XX=0 F  S XX=$O(^ECL("AD",ECW,XX)) Q:'XX  S YY=0 D
"RTN","ECRRPT1",59,0)
 . F  S YY=$O(^ECL("AD",ECW,XX,YY)) Q:'YY  D
"RTN","ECRRPT1",60,0)
 . . Q:$G(^ECL(YY,0))=""  S ECLINK(YY)=XX
"RTN","ECRRPT1",61,0)
 Q
"RTN","ECRRPT1",62,0)
ECRPERS ;Inactive Person Class Report for RPC Call
"RTN","ECRRPT1",63,0)
 ;     Variables passed in
"RTN","ECRRPT1",64,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT1",65,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT1",66,0)
 ;       ECSORT - Sort by Patient (P) or Provider (R)
"RTN","ECRRPT1",67,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",68,0)
 ;                or (E)xport
"RTN","ECRRPT1",69,0)
 ;
"RTN","ECRRPT1",70,0)
 ;     Variable return
"RTN","ECRRPT1",71,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",72,0)
 N ECV,ECDATE,ECBEGIN,ECEND,ECROU,ECDESC
"RTN","ECRRPT1",73,0)
 S ECV="ECSD^ECED^ECSORT" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",74,0)
 D DATECHK^ECRRPT(.ECSD,.ECED)
"RTN","ECRRPT1",75,0)
 S ECBEGIN=ECSD-.0001,ECEND=ECED+.9999
"RTN","ECRRPT1",76,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",77,0)
 . S ECV="ECBEGIN^ECEND^ECSORT",ECROU="START^ECRPCLS"
"RTN","ECRRPT1",78,0)
 . S ECDESC="EC Invalid Provider Report"
"RTN","ECRRPT1",79,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",80,0)
 D START^ECRPCLS
"RTN","ECRRPT1",81,0)
 Q
"RTN","ECRRPT1",82,0)
ECDSS1 ;National/Local Procedure Reports for RPC Call
"RTN","ECRRPT1",83,0)
 ;     Variables passed in
"RTN","ECRRPT1",84,0)
 ;       ECRTN    - Procedure Report (A-active or I-inactive)
"RTN","ECRRPT1",85,0)
 ;       ECPTYP   - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",86,0)
 ;                  or (E)xport
"RTN","ECRRPT1",87,0)
 ;    If ECRTN=A, also
"RTN","ECRRPT1",88,0)
 ;       ECRN     - Preferred Report (N-ational, L-ocal or Both)
"RTN","ECRRPT1",89,0)
 ;       ECRD     - Sort Method (P-rocedure Name, N-ational Number)
"RTN","ECRRPT1",90,0)
 ;
"RTN","ECRRPT1",91,0)
 ;     Variable return
"RTN","ECRRPT1",92,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",93,0)
 N ECV,ECDESC,ECROU,DQTIME
"RTN","ECRRPT1",94,0)
 S ECV=$S($G(ECRTN)="A":"ECRTN^ECRN^ECRD",1:"ECRTN")
"RTN","ECRRPT1",95,0)
 D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",96,0)
 S DQTIME=ECQDT
"RTN","ECRRPT1",97,0)
 I $G(ECPTYP)="E" D @$S(ECRTN="I":"LISTI^ECDSS1",1:"PRT^ECDSS1") Q  ;119
"RTN","ECRRPT1",98,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",99,0)
 . S ECV="ECRTN^ECRN^ECRD",ECROU=$S(ECRTN="I":"LISTI",1:"PRT")_"^ECDSS1"
"RTN","ECRRPT1",100,0)
 . S ECDESC="Event Capture National Procedure Report",ECDIP=1
"RTN","ECRRPT1",101,0)
 . ;S ECSAVE("IO*")=""
"RTN","ECRRPT1",102,0)
 .D QUEDIP D @$S(ECRTN="I":"LISTI^ECDSS1",1:"PRT^ECDSS1")
"RTN","ECRRPT1",103,0)
 D CLOSE^%ZISH(ECDIRY_ECFILER)
"RTN","ECRRPT1",104,0)
 S %ZIS("HFSNAME")=ECDIRY_ECFILER,%ZIS("HFSMODE")="W",IOP="HFS"
"RTN","ECRRPT1",105,0)
 D @$S(ECRTN="I":"LISTI^ECDSS1",1:"PRT^ECDSS1")
"RTN","ECRRPT1",106,0)
 Q
"RTN","ECRRPT1",107,0)
ECDSS3 ;Category Reports for RPC Call
"RTN","ECRRPT1",108,0)
 ;     Variables passed in
"RTN","ECRRPT1",109,0)
 ;       ECRTN    - Category Procedure Report 
"RTN","ECRRPT1",110,0)
 ;                  (A-active, I-inactive or B-oth)
"RTN","ECRRPT1",111,0)
 ;       ECPTYP   - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",112,0)
 ;                  or (E)xport
"RTN","ECRRPT1",113,0)
 ;
"RTN","ECRRPT1",114,0)
 ;     Variable return
"RTN","ECRRPT1",115,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",116,0)
 N ECV,ECDIP,DQTIME
"RTN","ECRRPT1",117,0)
 S ECV="ECRTN" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",118,0)
 S DQTIME=ECQDT
"RTN","ECRRPT1",119,0)
 I $G(ECPTYP)="E" D PRINT^ECDSS3 Q  ;119
"RTN","ECRRPT1",120,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",121,0)
 . S ECV="ECRTN",ECROU="PRINT^ECDSS3"
"RTN","ECRRPT1",122,0)
 . S ECDESC="Event Capture Category Reports"
"RTN","ECRRPT1",123,0)
 . D QUEDIP D PRINT^ECDSS3
"RTN","ECRRPT1",124,0)
 D CLOSE^%ZISH(ECDIRY_ECFILER)
"RTN","ECRRPT1",125,0)
 S %ZIS("HFSNAME")=ECDIRY_ECFILER,%ZIS("HFSMODE")="W",IOP="HFS"
"RTN","ECRRPT1",126,0)
 D PRINT^ECDSS3
"RTN","ECRRPT1",127,0)
 Q
"RTN","ECRRPT1",128,0)
QUEDIP ;Queue when using DIP
"RTN","ECRRPT1",129,0)
 N DIC,X,Y
"RTN","ECRRPT1",130,0)
 D  I Y=-1 S ECERR=1 Q
"RTN","ECRRPT1",131,0)
 . S DIC(0)="MN",X=ECDEV,DIC="^%ZIS(1," D ^DIC
"RTN","ECRRPT1",132,0)
 . S:+Y>0 IOP="Q;"_$P(Y,U,2)
"RTN","ECRRPT1",133,0)
 . S Y=ECQDT X ^DD("DD") S DQTIME=Y
"RTN","ECRRPT1",134,0)
 Q
"RTN","ECRRPT1",135,0)
ECSUM ;Print Category and Procedure Summary (Report) for RPC Call
"RTN","ECRRPT1",136,0)
 ;     Variables passed in
"RTN","ECRRPT1",137,0)
 ;       ECL      - Location to report (1 or ALL)
"RTN","ECRRPT1",138,0)
 ;       ECD      - DSS Unit to report (1 or ALL), If ECD'="ALL" then ECC
"RTN","ECRRPT1",139,0)
 ;       ECC      - Category (1 or ALL) (optional)
"RTN","ECRRPT1",140,0)
 ;       ECRTN    - Event Code Screen (Active, Inactive or Both)
"RTN","ECRRPT1",141,0)
 ;       ECPTYP   - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",142,0)
 ;                  or (E)xport
"RTN","ECRRPT1",143,0)
 ;
"RTN","ECRRPT1",144,0)
 ;     Variable return
"RTN","ECRRPT1",145,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",146,0)
 N ECV,ECDN,ECCN,ECROU,ECSAVE,ECDESC,ECLOC,ECS,ECJLP,ECSN,ECALL,DIC,X,Y
"RTN","ECRRPT1",147,0)
 N ECSCN
"RTN","ECRRPT1",148,0)
 S (ECJLP,ECALL)=0,ECV="ECL^ECD^ECRTN" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",149,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location." Q
"RTN","ECRRPT1",150,0)
 . D LOCARRY^ECRUTL I ECL="ALL" Q
"RTN","ECRRPT1",151,0)
 . K ECLOC I $D(ECLOC1(ECL)) S ECLOC(1)=ECL_"^"_ECLOC1(ECL)
"RTN","ECRRPT1",152,0)
 S ECSCN=ECRTN D  I ECERR S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT1",153,0)
 . I ECD="ALL" S ECALL=1 Q
"RTN","ECRRPT1",154,0)
 . K DIC S DIC=724,DIC(0)="QNMZX",X=ECD D ^DIC I Y<0 S ECERR=1 Q
"RTN","ECRRPT1",155,0)
 . S ECDN=$P(Y,U,2)_$S($P($G(^ECD(+ECD,0)),"^",6):" **Inactive**",1:"")
"RTN","ECRRPT1",156,0)
 . S ECS=+$P(^ECD(ECD,0),"^",2),ECJLP=+$P(^(0),"^",11)
"RTN","ECRRPT1",157,0)
 . S ECSN=$S($P($G(^DIC(49,ECS,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECRRPT1",158,0)
 . I 'ECJLP S ECC=0,ECCN="None"
"RTN","ECRRPT1",159,0)
 I ECALL D PXRUN Q
"RTN","ECRRPT1",160,0)
 S ECV="ECC" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",161,0)
 D  I ECERR S ^TMP("ECMSG",$J)="1^Invalid Category." Q
"RTN","ECRRPT1",162,0)
 . I (ECC="ALL")!(ECC=0) Q
"RTN","ECRRPT1",163,0)
 . K DIC S DIC=726,DIC(0)="QNMZX",X=ECC D ^DIC I Y<0 S ECERR=1 Q
"RTN","ECRRPT1",164,0)
 . S ECCN=$P(Y,U,2)
"RTN","ECRRPT1",165,0)
PXRUN I ECPTYP="P" D  Q
"RTN","ECRRPT1",166,0)
 . S ECV="ECALL^ECSCN",ECROU="START^ECSUM"
"RTN","ECRRPT1",167,0)
 . S ECSAVE("ECLOC(")=""
"RTN","ECRRPT1",168,0)
 . I 'ECALL S ECV=ECV_"^ECD^ECC^ECSN^ECDN^ECJLP^ECCN^ECSCN"
"RTN","ECRRPT1",169,0)
 . S ECDESC="EC Print Category and Procedure Summary"
"RTN","ECRRPT1",170,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",171,0)
 U IO D START^ECSUM
"RTN","ECRRPT1",172,0)
 Q
"RTN","ECRRPT1",173,0)
ECNTPCE ;ECS Records Failing Transmission to PCE
"RTN","ECRRPT1",174,0)
 ;     Variables passed in
"RTN","ECRRPT1",175,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT1",176,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT1",177,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",178,0)
 ;                or (E)xport
"RTN","ECRRPT1",179,0)
 ;
"RTN","ECRRPT1",180,0)
 ;     Variable return
"RTN","ECRRPT1",181,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",182,0)
 N ECV,ECDATE,ECROU,ECDESC
"RTN","ECRRPT1",183,0)
 S ECV="ECSD^ECED" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",184,0)
 D DATECHK^ECRRPT(.ECSD,.ECED)
"RTN","ECRRPT1",185,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT1",186,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",187,0)
 . S ECV="ECSD^ECED^ECDATE",ECROU="START^ECNTPCE"
"RTN","ECRRPT1",188,0)
 . S ECDESC="ECS Records Failing Transmission to PCE Report"
"RTN","ECRRPT1",189,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",190,0)
 D START^ECNTPCE
"RTN","ECRRPT1",191,0)
 Q
"RTN","ECRRPT1",192,0)
ECSCPT ;Event Code Screens with CPT Codes
"RTN","ECRRPT1",193,0)
 ;     Variables passed in
"RTN","ECRRPT1",194,0)
 ;       ECL      - Location to report (1 or ALL)
"RTN","ECRRPT1",195,0)
 ;       ECD      - DSS Unit to report (1 or ALL), If ECD'="ALL" then ECC
"RTN","ECRRPT1",196,0)
 ;       ECC      - Category (1 or ALL) (optional)
"RTN","ECRRPT1",197,0)
 ;       ECCPT    - CPT Codes to Display (Active, Inactive or Both)
"RTN","ECRRPT1",198,0)
 ;       ECPTYP   - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",199,0)
 ;                  or (E)xport
"RTN","ECRRPT1",200,0)
 ;
"RTN","ECRRPT1",201,0)
 ;     Variable return
"RTN","ECRRPT1",202,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",203,0)
 N ECV,ECDN,ECCN,ECROU,ECSAVE,ECDESC,ECLOC,ECS,ECJLP,ECALL,DIC,X,Y
"RTN","ECRRPT1",204,0)
 S (ECJLP,ECALL)=0,ECV="ECL^ECD^ECCPT" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",205,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location." Q
"RTN","ECRRPT1",206,0)
 . I ECL="ALL" D LOCARRY^ECRUTL Q
"RTN","ECRRPT1",207,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL D ^DIC Q:Y<0  S ECLOC(1)=+Y_U_$P(Y,U,2)
"RTN","ECRRPT1",208,0)
 D  I ECERR S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT1",209,0)
 . I ECD="ALL" S ECALL=1 Q
"RTN","ECRRPT1",210,0)
 . K DIC S DIC=724,DIC(0)="QNMZX",X=ECD D ^DIC I Y<0 S ECERR=1 Q
"RTN","ECRRPT1",211,0)
 . S ECDN=$P(Y,U,2)_$S($P($G(^ECD(+ECD,0)),"^",6):" **Inactive**",1:"")
"RTN","ECRRPT1",212,0)
 . S ECJLP=+$P(^ECD(ECD,0),"^",11)
"RTN","ECRRPT1",213,0)
 . I 'ECJLP S ECC=0,ECCN="None"
"RTN","ECRRPT1",214,0)
 I ECALL D CPTRUN Q
"RTN","ECRRPT1",215,0)
 S ECV="ECC" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",216,0)
 D  I ECERR S ^TMP("ECMSG",$J)="1^Invalid Category." Q
"RTN","ECRRPT1",217,0)
 . I (ECC="ALL")!(ECC=0) Q
"RTN","ECRRPT1",218,0)
 . K DIC S DIC=726,DIC(0)="QNMZX",X=ECC D ^DIC I Y<0 S ECERR=1 Q
"RTN","ECRRPT1",219,0)
 . S ECCN=$P(Y,U,2)
"RTN","ECRRPT1",220,0)
CPTRUN I ECPTYP="P" D  Q
"RTN","ECRRPT1",221,0)
 . S ECV="ECALL^ECCPT",ECROU="START^ECSCPT"
"RTN","ECRRPT1",222,0)
 . S ECSAVE("ECLOC(")=""
"RTN","ECRRPT1",223,0)
 . I 'ECALL S ECV=ECV_"^ECD^ECC^ECDN^ECJLP^ECCN"
"RTN","ECRRPT1",224,0)
 . S ECDESC="Event Code Screens with CPT Codes"
"RTN","ECRRPT1",225,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",226,0)
 U IO D START^ECSCPT
"RTN","ECRRPT1",227,0)
 Q
"RTN","ECRRPT1",228,0)
ECINCPT ;National/Local Procedure Codes with Inactive CPT Reports for RPC Call
"RTN","ECRRPT1",229,0)
 ;     Variables passed in
"RTN","ECRRPT1",230,0)
 ;       ECPTYP  - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",231,0)
 ;                 or (E)xport
"RTN","ECRRPT1",232,0)
 ;
"RTN","ECRRPT1",233,0)
 ;     Variable return
"RTN","ECRRPT1",234,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",235,0)
 N ECV,ECL,ECDESC,ECROU,DQTIME,ECPG
"RTN","ECRRPT1",236,0)
 S ECPG=1
"RTN","ECRRPT1",237,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",238,0)
 . S ECROU="START^ECINCPT",ECV="ECL",ECL=""
"RTN","ECRRPT1",239,0)
 . S ECDESC="National/Local Procedure Codes with Inactive CPT"
"RTN","ECRRPT1",240,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",241,0)
 U IO D START^ECINCPT
"RTN","ECRRPT1",242,0)
 Q
"RTN","ECRRPT1",243,0)
ECGTP ;ECS Generic Table Printer
"RTN","ECRRPT1",244,0)
 ;     Variables passed in
"RTN","ECRRPT1",245,0)
 ;       ECOBHNDL   - Handle to generic table print obj
"RTN","ECRRPT1",246,0)
 ;       ECPTYP     - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",247,0)
 ;
"RTN","ECRRPT1",248,0)
 ;     Variable return
"RTN","ECRRPT1",249,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",250,0)
 N ECV,ECROU,ECDESC
"RTN","ECRRPT1",251,0)
 S ECV="ECOBHNDL" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",252,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",253,0)
 . S ECV="ECOBHNDL",ECROU="START^ECGTP"
"RTN","ECRRPT1",254,0)
 . S ECDESC="ECS Generic Table Printer"
"RTN","ECRRPT1",255,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",256,0)
 D START^ECGTP
"RTN","ECRRPT1",257,0)
 Q
"RTN","ECRRPT1",258,0)
ECSTPCD ;DSS Units with Associated Stop Code Error REPORT
"RTN","ECRRPT1",259,0)
 ;  EC*2*107 - added to GUI reports
"RTN","ECRRPT1",260,0)
 ;     Variables passed in
"RTN","ECRRPT1",261,0)
 ;       ECPTYP  - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",262,0)
 ;                 or (E)xport
"RTN","ECRRPT1",263,0)
 ;
"RTN","ECRRPT1",264,0)
 ;     Variable return
"RTN","ECRRPT1",265,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",266,0)
 N ECV,ECL,ECDESC,ECROU,DQTIME,ECPG
"RTN","ECRRPT1",267,0)
 S ECPG=1
"RTN","ECRRPT1",268,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",269,0)
 . S ECROU="STRTGUI^ECUNTRPT",ECV="ECL",ECL=""
"RTN","ECRRPT1",270,0)
 . S ECDESC="DSS Units with Associated Stop Code Error"
"RTN","ECRRPT1",271,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",272,0)
 U IO D STRTGUI^ECUNTRPT
"RTN","ECRRPT1",273,0)
 Q 
"RTN","ECSCPT")
0^11^B12785074^B11029333
"RTN","ECSCPT",1,0)
ECSCPT ;ALB/JAM - Event Code Screen With CPT Codes ;11/7/12  11:01
"RTN","ECSCPT",2,0)
 ;;2.0;EVENT CAPTURE;**72,92,95,119**;8 May 96;Build 12
"RTN","ECSCPT",3,0)
LOC K ECL S EC1=0 D ^ECL S:$D(LOC(2)) EC1=1 K LOC I '$D(ECL) S ECOUT=1 G END
"RTN","ECSCPT",4,0)
UNIT ;set var and sel dss unit
"RTN","ECSCPT",5,0)
 S ECJLP=0
"RTN","ECSCPT",6,0)
 S (ECOUT,ECALL)=0,ECPG=1
"RTN","ECSCPT",7,0)
 W @IOF F Q=0:0 D  Q:%
"RTN","ECSCPT",8,0)
 .W !!,"Do you want to list all DSS Units for "_ECLN S %=1 D YN^DICN Q:%
"RTN","ECSCPT",9,0)
 .W !!?5,"Enter <RET> to list all your DSS Units for this location, or"
"RTN","ECSCPT",10,0)
 .W !?11,"NO to select a specific DSS Unit"
"RTN","ECSCPT",11,0)
 G:%<0 END I %=1 S ECALL=1 G ECCPT
"RTN","ECSCPT",12,0)
 W @IOF,! K DIC S DIC=724,DIC(0)="QEAMZ",DIC("A")="Select DSS Unit: "
"RTN","ECSCPT",13,0)
 S:ECL DIC("S")="I $D(^ECJ(""AP"",ECL,+Y))"
"RTN","ECSCPT",14,0)
 D ^DIC K DIC G:Y<0 END S ECD=+Y,ECDN=$P(Y,"^",2)
"RTN","ECSCPT",15,0)
 S ECDN=ECDN_$S($P($G(^ECD(+ECD,0)),"^",6):" **Inactive**",1:"")
"RTN","ECSCPT",16,0)
 S ECJLP=+$P(^ECD(ECD,0),"^",11)
"RTN","ECSCPT",17,0)
SEL ;
"RTN","ECSCPT",18,0)
 I 'ECJLP S ECC=0,ECCN="None" G ECCPT
"RTN","ECSCPT",19,0)
 W @IOF F Q=0:0 D  Q:%
"RTN","ECSCPT",20,0)
 .W !!,"Do you want to list all categories for "_ECDN S %=1 D YN^DICN Q:%
"RTN","ECSCPT",21,0)
 .W !!,"Enter <RET> if you would like to list all categories for this "
"RTN","ECSCPT",22,0)
 .W "DSS Unit,",!," or NO to select a specific category"
"RTN","ECSCPT",23,0)
 G:%<0 END I %=1 S ECC="ALL" G ECCPT
"RTN","ECSCPT",24,0)
 W @IOF,! K DIC S DIC=726,DIC(0)="QEAMZ",DIC("A")="Select Category for "
"RTN","ECSCPT",25,0)
 S DIC("A")=DIC("A")_ECDN_" DSS Unit:  "
"RTN","ECSCPT",26,0)
 S:ECD DIC("S")="I $D(^ECJ(""AP"",ECL,ECD,+Y))"
"RTN","ECSCPT",27,0)
 D ^DIC K DIC G:Y<0 END S ECC=+Y,ECCN=$P(Y,"^",2)
"RTN","ECSCPT",28,0)
ECCPT ;CPT Codes to display
"RTN","ECSCPT",29,0)
 K DIR
"RTN","ECSCPT",30,0)
 S DIR(0)="SO^A:Active CPT Codes;I:Inactive CPT Codes;B:Both"
"RTN","ECSCPT",31,0)
 S DIR("B")="I",DIR("A")="CPT Codes to display"
"RTN","ECSCPT",32,0)
 S DIR("?",1)="Enter an A for Event Code screens with Active CPT Codes,"
"RTN","ECSCPT",33,0)
 S DIR("?",1)=DIR("?",1)_" I for Inactive Codes,"
"RTN","ECSCPT",34,0)
 S DIR("?")="B for a consolidated report of CPT codes, or ^ to quit."
"RTN","ECSCPT",35,0)
 S DIR("??")="ECSCPT^"
"RTN","ECSCPT",36,0)
 D ^DIR K DIR I $D(DIRUT) G END
"RTN","ECSCPT",37,0)
 S ECCPT=Y
"RTN","ECSCPT",38,0)
DEV W !! K IOP,POP,IO("Q"),%ZIS,ZTSK
"RTN","ECSCPT",39,0)
 S %ZIS="QM",%ZIS("A")="Select Device:  " D ^%ZIS I POP S ECOUT=1 G END
"RTN","ECSCPT",40,0)
 I $D(IO("Q")) K IO("Q") D  G END
"RTN","ECSCPT",41,0)
 .S ZTDESC="CATEGORY AND PROCEDURE SUMMARY",ZTRTN="START^ECSCPT",ZTIO=ION
"RTN","ECSCPT",42,0)
 .D SAVE,^%ZTLOAD,HOME^%ZIS K ZTSK
"RTN","ECSCPT",43,0)
 U IO
"RTN","ECSCPT",44,0)
START ;
"RTN","ECSCPT",45,0)
 N ECI  ;generic index
"RTN","ECSCPT",46,0)
 N ECL  ;location IEN
"RTN","ECSCPT",47,0)
 N ECLN  ;location name
"RTN","ECSCPT",48,0)
 N CNT  ;119 Subscript for exported data
"RTN","ECSCPT",49,0)
 S %H=$H D YX^%DTC S ECRDT=Y
"RTN","ECSCPT",50,0)
 S ECOUT=0,ECPG=1
"RTN","ECSCPT",51,0)
 I $G(ECPTYP)="E" S CNT=1 S ^TMP($J,"ECRPT",CNT)="LOCATION^DSS UNIT^CATEGORY^CPT CODE^PROCEDURE CODE^PROCEDURE NAME" ;119
"RTN","ECSCPT",52,0)
 S ECI=0
"RTN","ECSCPT",53,0)
 F  S ECI=$O(ECLOC(ECI)) Q:'ECI  D
"RTN","ECSCPT",54,0)
 . S ECL=$P(ECLOC(ECI),U),ECLN=$P(ECLOC(ECI),U,2)
"RTN","ECSCPT",55,0)
 . D ^ECSCPT1
"RTN","ECSCPT",56,0)
 I $G(ECPTYP)="E" D ^ECKILL Q  ;119 Nothing to write if exporting
"RTN","ECSCPT",57,0)
CLEAR I $E(IOST,1,2)'="C-" G END
"RTN","ECSCPT",58,0)
 G:ECOUT END
"RTN","ECSCPT",59,0)
 I ECPG W !!!!!,"Press <RET> to continue  " R X:DTIME I '$T!(X="^") S ECOUT=1 G END
"RTN","ECSCPT",60,0)
 G:ECALL END
"RTN","ECSCPT",61,0)
ASK ;
"RTN","ECSCPT",62,0)
 W @IOF F Q=0:0 D  I % Q
"RTN","ECSCPT",63,0)
 .W !!,"Would you like to list another DSS Unit for this Location"
"RTN","ECSCPT",64,0)
 .S %=2 D YN^DICN I % Q
"RTN","ECSCPT",65,0)
 .W !!,"Enter YES to list another DSS Unit or <RET> to continue"
"RTN","ECSCPT",66,0)
 G:%<0 END I %=1 D  G UNIT
"RTN","ECSCPT",67,0)
 .K ECD,ECDN,ECC,ECCN,ECP,ECPN,NATN,ECFILE,ECCPT
"RTN","ECSCPT",68,0)
 K ECD,ECDN,ECC,ECCN,ECP,ECPN,NATN,ECFILE,ECCPT
"RTN","ECSCPT",69,0)
 I EC1 G LOC
"RTN","ECSCPT",70,0)
END ;
"RTN","ECSCPT",71,0)
 D ^ECKILL Q:$D(ECGUI)  W @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECSCPT",72,0)
 Q
"RTN","ECSCPT",73,0)
SAVE ;
"RTN","ECSCPT",74,0)
 S (ZTSAVE("ECALL"),ZTSAVE("ECJLP"),ZTSAVE("ECC*"),ZTSAVE("ECD*"),ZTSAVE("ECL*"),ZTSAVE("ECP*"))=""
"RTN","ECSCPT",75,0)
 Q
"RTN","ECSCPT1")
0^12^B11623947^B9008177
"RTN","ECSCPT1",1,0)
ECSCPT1 ;ALB/JAM - Event Code Screens with CPT Codes ;10/29/12  12:45
"RTN","ECSCPT1",2,0)
 ;;2.0;EVENT CAPTURE;**72,95,119**;8 May 96;Build 12
"RTN","ECSCPT1",3,0)
EN ;entry point
"RTN","ECSCPT1",4,0)
 N UCNT,ECDO,ECCO,ECNT,ECINDT,ECP0
"RTN","ECSCPT1",5,0)
 S (ECMORE,ECNT,ECDO,ECCO)=0,ECPG=$G(ECPG,1),ECCPT=$G(ECCPT,"B")
"RTN","ECSCPT1",6,0)
 ;Process all DSS Units
"RTN","ECSCPT1",7,0)
 I ECALL S ECD=0 D  G END
"RTN","ECSCPT1",8,0)
 .F  S ECD=$O(^ECJ("AP",ECL,ECD)) Q:'ECD  D  Q:ECOUT
"RTN","ECSCPT1",9,0)
 ..D SET,CATS,PAGE:'ECOUT&UCNT
"RTN","ECSCPT1",10,0)
 ;Process a specific DSS Unit
"RTN","ECSCPT1",11,0)
 S UCNT=0 D
"RTN","ECSCPT1",12,0)
 .I ECC="ALL" D CATS Q
"RTN","ECSCPT1",13,0)
 .I 'ECJLP S ECC=0,ECCN="None",ECCO=999
"RTN","ECSCPT1",14,0)
 .D PROC
"RTN","ECSCPT1",15,0)
END I 'ECNT,$G(ECPTYP)'="E" W !!!,"Nothing Found." ;119 Nothing to write if exporting
"RTN","ECSCPT1",16,0)
 S ECPG=$G(ECPG,1)
"RTN","ECSCPT1",17,0)
 Q
"RTN","ECSCPT1",18,0)
SET ;set var
"RTN","ECSCPT1",19,0)
 S ECDN=$S($P($G(^ECD(+ECD,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN"),UCNT=0
"RTN","ECSCPT1",20,0)
 S ECDN=ECDN_$S($P($G(^ECD(+ECD,0)),"^",6):" **Inactive**",1:"")
"RTN","ECSCPT1",21,0)
 Q
"RTN","ECSCPT1",22,0)
SETC ;set cats
"RTN","ECSCPT1",23,0)
 I ECC=0 S ECCN="None" Q
"RTN","ECSCPT1",24,0)
 S ECCN=$S($P($G(^EC(726,+ECC,0)),"^")]"":$P(^(0),"^"),1:"ZZ #"_ECC_" MISSING DATA")
"RTN","ECSCPT1",25,0)
 S ECMORE=1
"RTN","ECSCPT1",26,0)
 Q
"RTN","ECSCPT1",27,0)
HEADER ;
"RTN","ECSCPT1",28,0)
 W:$E(IOST,1,2)="C-"!(ECPG>1) @IOF
"RTN","ECSCPT1",29,0)
 W !!,?24,"EVENT CODE SCREENS WITH"
"RTN","ECSCPT1",30,0)
 W $S(ECCPT="I":" INACTIVE",ECCPT="A":" ACTIVE",1:"")_" CPT CODES"
"RTN","ECSCPT1",31,0)
 W ?70,"Page: ",ECPG,!?25,"Run Date: ",ECRDT,!?25,"LOCATION:  "_ECLN
"RTN","ECSCPT1",32,0)
 W !?25,"DSS UNIT:  "_ECDN,! S ECPG=ECPG+1
"RTN","ECSCPT1",33,0)
 F I=1:1:80 W "-"
"RTN","ECSCPT1",34,0)
 Q
"RTN","ECSCPT1",35,0)
CATS ;
"RTN","ECSCPT1",36,0)
 S ECC="",ECCO=0
"RTN","ECSCPT1",37,0)
 F  S ECC=$O(^ECJ("AP",ECL,ECD,ECC)) Q:ECC=""  D SETC,PROC Q:ECOUT
"RTN","ECSCPT1",38,0)
 S ECMORE=0
"RTN","ECSCPT1",39,0)
 Q
"RTN","ECSCPT1",40,0)
PROC ;
"RTN","ECSCPT1",41,0)
 S ECP=""
"RTN","ECSCPT1",42,0)
 F  S ECP=$O(^ECJ("AP",ECL,ECD,ECC,ECP)) Q:ECP=""  D SETP Q:ECOUT
"RTN","ECSCPT1",43,0)
 S ECMORE=0
"RTN","ECSCPT1",44,0)
 Q
"RTN","ECSCPT1",45,0)
SETP ;set procs
"RTN","ECSCPT1",46,0)
 S ECPSY=+$O(^ECJ("AP",ECL,ECD,ECC,ECP,"")),ECPI=""
"RTN","ECSCPT1",47,0)
 S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2),ECFILE=$P(ECP,";",2)
"RTN","ECSCPT1",48,0)
 S ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"")
"RTN","ECSCPT1",49,0)
 I ECFILE="" Q
"RTN","ECSCPT1",50,0)
 S (ECPN,ECPT,NATN)="",ECPI=0
"RTN","ECSCPT1",51,0)
 I ECFILE=81 S ECPI=$$CPT^ICPTCOD(+ECP) I +ECPI>0 D
"RTN","ECSCPT1",52,0)
 .S ECPN=$P(ECPI,"^",3),ECPT=$P(ECPI,"^",2),ECINDT=$P(ECPI,"^",7)
"RTN","ECSCPT1",53,0)
 I ECFILE=725 D
"RTN","ECSCPT1",54,0)
 .S ECP0=$G(^EC(725,+ECP,0)),ECPT="",ECPN=$P(ECP0,"^")
"RTN","ECSCPT1",55,0)
 .S NATN=$P(ECP0,"^",2)
"RTN","ECSCPT1",56,0)
 .I $P(ECP0,"^",5)'="" S ECPI=$$CPT^ICPTCOD($P(ECP0,"^",5)) I +ECPI>0 D 
"RTN","ECSCPT1",57,0)
 ..S ECPT=$P(ECPI,"^",2),ECINDT=$P(ECPI,"^",7)
"RTN","ECSCPT1",58,0)
 I +ECPI<1 Q
"RTN","ECSCPT1",59,0)
 I ECCPT="A",'ECINDT Q
"RTN","ECSCPT1",60,0)
 I ECCPT="I",ECINDT Q
"RTN","ECSCPT1",61,0)
 I $G(ECPTYP)="E" D EXPORT Q  ;119 Nothing to write if exporting
"RTN","ECSCPT1",62,0)
 I ECD'=ECDO D HEADER S ECDO=ECD
"RTN","ECSCPT1",63,0)
 I ECC'=ECCO D  S ECCO=ECC I ECOUT Q
"RTN","ECSCPT1",64,0)
 .W !!,"Category:  "_ECCN D:$Y+4>IOSL CONTD
"RTN","ECSCPT1",65,0)
 S ECPN=$S(ECPSYN]"":ECPSYN,1:ECPN),ECNT=ECNT+1,UCNT=UCNT+1
"RTN","ECSCPT1",66,0)
 W !,"Procedure: ",$E(ECPN,1,30)," (",$S(ECFILE=81:"CPT",1:"EC"),")",?48,"Nat'l #: ",NATN,?64,"CPT: ",ECPT
"RTN","ECSCPT1",67,0)
 I ECCPT="B",'ECINDT W ?70," *I*"
"RTN","ECSCPT1",68,0)
 D:($Y+3)>IOSL CONTD I ECOUT Q
"RTN","ECSCPT1",69,0)
 Q
"RTN","ECSCPT1",70,0)
CONTD ;Check whether to continue or exit
"RTN","ECSCPT1",71,0)
 D PAGE I ECOUT Q
"RTN","ECSCPT1",72,0)
 D HEADER:ECPG,MORE:$D(ECCN)
"RTN","ECSCPT1",73,0)
 Q
"RTN","ECSCPT1",74,0)
 ;
"RTN","ECSCPT1",75,0)
PAGE ;
"RTN","ECSCPT1",76,0)
 N SS,JJ
"RTN","ECSCPT1",77,0)
 I $D(ECPG),$E(IOST,1,2)="C-" D
"RTN","ECSCPT1",78,0)
 . S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECSCPT1",79,0)
 . S DIR(0)="E" W ! D ^DIR K DIR I 'Y S ECOUT=1
"RTN","ECSCPT1",80,0)
 Q
"RTN","ECSCPT1",81,0)
MORE I ECMORE W !!,"Category:  "_ECCN
"RTN","ECSCPT1",82,0)
 Q
"RTN","ECSCPT1",83,0)
 ;
"RTN","ECSCPT1",84,0)
EXPORT ;Section added in patch 119
"RTN","ECSCPT1",85,0)
 S CNT=CNT+1
"RTN","ECSCPT1",86,0)
 S ^TMP($J,"ECRPT",CNT)=ECLN_U_ECDN_U_ECCN_U_ECPT_$S('ECINDT:" **Inactive**",1:"")_U_NATN_U_$S(ECPSYN]"":ECPSYN,1:ECPN)_" ("_$S(ECFILE=81:"CPT",1:"EC")_")"
"RTN","ECSCPT1",87,0)
 Q
"RTN","ECSUM")
0^19^B13236696^B13051883
"RTN","ECSUM",1,0)
ECSUM ;BIR/JLP,RHK-Category and Procedure Summary ;11/13/12  11:51
"RTN","ECSUM",2,0)
 ;;2.0;EVENT CAPTURE;**4,19,33,47,95,119**;8 May 96;Build 12
"RTN","ECSUM",3,0)
LOC K ECL S EC1=0 D ^ECL S:$D(LOC(2)) EC1=1 K LOC I '$D(ECL) S ECOUT=1 G END
"RTN","ECSUM",4,0)
UNIT ;set var and sel dss unit
"RTN","ECSUM",5,0)
 S ECJLP=0
"RTN","ECSUM",6,0)
 S (ECOUT,ECALL)=0,ECPG=1
"RTN","ECSUM",7,0)
 W @IOF F Q=0:0 D  Q:%
"RTN","ECSUM",8,0)
 .W !!,"Do you want to list all DSS Units for "_ECLN S %=1 D YN^DICN Q:%
"RTN","ECSUM",9,0)
 .W !!?5,"Enter <RET> to list all your DSS Units for this location, or"
"RTN","ECSUM",10,0)
 .W !?11,"NO to select a specific DSS Unit"
"RTN","ECSUM",11,0)
 G:%<0 END I %=1 S ECALL=1 G ECSCN
"RTN","ECSUM",12,0)
 W @IOF,! K DIC S DIC=724,DIC(0)="QEAMZ",DIC("A")="Select DSS Unit: "
"RTN","ECSUM",13,0)
 S:ECL DIC("S")="I $D(^ECJ(""AP"",ECL,+Y))"
"RTN","ECSUM",14,0)
 D ^DIC K DIC G:Y<0 END S ECD=+Y,ECDN=$P(Y,"^",2)
"RTN","ECSUM",15,0)
 S ECDN=ECDN_$S($P($G(^ECD(+ECD,0)),"^",6):" **Inactive**",1:"")
"RTN","ECSUM",16,0)
 S ECS=+$P(^ECD(ECD,0),"^",2),ECJLP=+$P(^(0),"^",11)
"RTN","ECSUM",17,0)
 S ECSN=$S($P($G(^DIC(49,ECS,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECSUM",18,0)
SEL ;
"RTN","ECSUM",19,0)
 I 'ECJLP S ECC=0,ECCN="None" G ECSCN
"RTN","ECSUM",20,0)
 W @IOF F Q=0:0 D  Q:%
"RTN","ECSUM",21,0)
 .W !!,"Do you want to list all categories for "_ECDN S %=1 D YN^DICN Q:%
"RTN","ECSUM",22,0)
 .W !!,"Enter <RET> if you would like to list all categories for this "
"RTN","ECSUM",23,0)
 .W "DSS Unit,",!," or NO to select a specific category"
"RTN","ECSUM",24,0)
 G:%<0 END I %=1 S ECC="ALL" G ECSCN
"RTN","ECSUM",25,0)
 W @IOF,! K DIC S DIC=726,DIC(0)="QEAMZ",DIC("A")="Select Category for "
"RTN","ECSUM",26,0)
 S DIC("A")=DIC("A")_ECDN_" DSS Unit:  "
"RTN","ECSUM",27,0)
 S:ECD DIC("S")="I $D(^ECJ(""AP"",ECL,ECD,+Y))"
"RTN","ECSUM",28,0)
 D ^DIC K DIC G:Y<0 END S ECC=+Y,ECCN=$P(Y,"^",2)
"RTN","ECSUM",29,0)
ECSCN ;Event Codes Screens to display, ALB/JAM-10/16/01
"RTN","ECSUM",30,0)
 K DIR
"RTN","ECSUM",31,0)
 S DIR(0)="SO^A:Active Event Code Screens;I:Inactive Event Code Screens"
"RTN","ECSUM",32,0)
 S DIR(0)=DIR(0)_";B:Both",DIR("B")="A"
"RTN","ECSUM",33,0)
 S DIR("A")="Event Code Screen to display"
"RTN","ECSUM",34,0)
 S DIR("?",1)="Enter an A for Active Event Code Screens, I for Inactive "
"RTN","ECSUM",35,0)
 S DIR("?",1)=DIR("?",1)_"Code Screens,"
"RTN","ECSUM",36,0)
 S DIR("?")="B for a consolidated report of all Event Code Screens, or "
"RTN","ECSUM",37,0)
 S DIR("?")=DIR("?")_"^ to quit."
"RTN","ECSUM",38,0)
 S DIR("??")="ECSUM^"
"RTN","ECSUM",39,0)
 D ^DIR K DIR I $D(DIRUT) G END
"RTN","ECSUM",40,0)
 S ECSCN=Y
"RTN","ECSUM",41,0)
DEV W !! K IOP,POP,IO("Q"),%ZIS,ZTSK
"RTN","ECSUM",42,0)
 S %ZIS="QM",%ZIS("A")="Select Device:  " D ^%ZIS I POP S ECOUT=1 G END
"RTN","ECSUM",43,0)
 I $D(IO("Q")) K IO("Q") D  G END
"RTN","ECSUM",44,0)
 .S ZTDESC="CATEGORY AND PROCEDURE SUMMARY",ZTRTN="START^ECSUM",ZTIO=ION
"RTN","ECSUM",45,0)
 .D SAVE,^%ZTLOAD,HOME^%ZIS K ZTSK
"RTN","ECSUM",46,0)
 U IO
"RTN","ECSUM",47,0)
START ;
"RTN","ECSUM",48,0)
 N ECI  ;generic index
"RTN","ECSUM",49,0)
 N ECL  ;location IEN
"RTN","ECSUM",50,0)
 N ECLN  ;location name
"RTN","ECSUM",51,0)
 S %H=$H D YX^%DTC S ECRDT=Y
"RTN","ECSUM",52,0)
 S ECOUT=0,ECPG=1
"RTN","ECSUM",53,0)
 S ECI=0
"RTN","ECSUM",54,0)
 F  S ECI=$O(ECLOC(ECI)) Q:'ECI  D
"RTN","ECSUM",55,0)
 . S ECL=$P(ECLOC(ECI),U),ECLN=$P(ECLOC(ECI),U,2)
"RTN","ECSUM",56,0)
 . I ECALL D
"RTN","ECSUM",57,0)
 . . D ^ECSUM1
"RTN","ECSUM",58,0)
 . E  D SUM2^ECSUM1
"RTN","ECSUM",59,0)
CLEAR I $E(IOST,1,2)'="C-" G END
"RTN","ECSUM",60,0)
 G:ECOUT END
"RTN","ECSUM",61,0)
 I ECPG W !!!!!,"Press <RET> to continue  " R X:DTIME I '$T!(X="^") S ECOUT=1 G END
"RTN","ECSUM",62,0)
 G:ECALL END
"RTN","ECSUM",63,0)
ASK ;
"RTN","ECSUM",64,0)
 W @IOF F Q=0:0 D  I % Q
"RTN","ECSUM",65,0)
 .W !!,"Would you like to list another DSS Unit for this Location"
"RTN","ECSUM",66,0)
 .S %=2 D YN^DICN I % Q
"RTN","ECSUM",67,0)
 .W !!,"Enter YES to list another DSS Unit or <RET> to continue"
"RTN","ECSUM",68,0)
 G:%<0 END I %=1 D  G UNIT
"RTN","ECSUM",69,0)
 .K EC4,ECD,ECDN,ECC,ECCN,ECP,ECPN,ECSY,ECSYN,NATN,ECS,ECSN,ECFILE,ECSCN
"RTN","ECSUM",70,0)
 K EC4,ECD,ECDN,ECC,ECCN,ECP,ECPN,ECSY,ECSYN,NATN,ECS,ECSN,ECFILE,ECSCN
"RTN","ECSUM",71,0)
 I EC1 G LOC
"RTN","ECSUM",72,0)
END ;
"RTN","ECSUM",73,0)
 D ^ECKILL Q:$D(ECGUI)!($G(ECPTYP)="E")  W @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@" ;119
"RTN","ECSUM",74,0)
 Q
"RTN","ECSUM",75,0)
SAVE ;
"RTN","ECSUM",76,0)
 S (ZTSAVE("ECA*"),ZTSAVE("ECJLP"),ZTSAVE("ECC*"),ZTSAVE("ECD*"),ZTSAVE("ECL*"),ZTSAVE("ECM*"),ZTSAVE("ECP*"),ZTSAVE("ECS*"),ZTSAVE("EC4"))=""
"RTN","ECSUM",77,0)
 Q
"RTN","ECSUM1")
0^20^B19398599^B12652997
"RTN","ECSUM1",1,0)
ECSUM1 ;BIR/JLP,RHK-Category and Procedure Summary (cont'd) ;11/14/12  14:25
"RTN","ECSUM1",2,0)
 ;;2.0;EVENT CAPTURE;**4,19,23,33,47,95,100,119**;8 May 96;Build 12
"RTN","ECSUM1",3,0)
ALLU ;
"RTN","ECSUM1",4,0)
 N UCNT,ECDO,ECCO,ECNT,ECD,ECMORE,CNT,ECEDN,ECEDNST,ECCPT ;119
"RTN","ECSUM1",5,0)
 S CNT=1,^TMP($J,"ECRPT",CNT)="ECSCREEN STATUS^LOCATION^SERVICE^DSS UNIT^DSS UNIT INACTIVE^CATEGORY^CPT CODE^PROCEDURE CODE^PROCEDURE NAME^CLINIC" ;119
"RTN","ECSUM1",6,0)
 S (ECD,ECMORE,ECNT,ECDO,ECCO)=0,ECPG=$G(ECPG,1),ECSCN=$G(ECSCN,"B")
"RTN","ECSUM1",7,0)
 F  S ECD=$O(^ECJ("AP",ECL,ECD)) Q:'ECD  D  Q:ECOUT
"RTN","ECSUM1",8,0)
 .D SET,CATS I $G(ECPTYP)'="E" D PAGE:'ECOUT&UCNT ;119
"RTN","ECSUM1",9,0)
END Q:$G(ECPTYP)="E"  I 'ECNT N ECNOCNT S ECNOCNT=1 D HEADER W !!!,"Nothing Found." ;119
"RTN","ECSUM1",10,0)
 S ECPG=$G(ECPG,1)
"RTN","ECSUM1",11,0)
 Q
"RTN","ECSUM1",12,0)
SUM2 ;Prints Categories and Procedures for a DSS Unit
"RTN","ECSUM1",13,0)
 N UCNT,ECDO,ECCO,ECNT,ECMORE,CNT,ECEDN,ECEDNST,ECCPT ;119
"RTN","ECSUM1",14,0)
 S CNT=1,^TMP($J,"ECRPT",CNT)="ECSCREEN STATUS^LOCATION^SERVICE^DSS UNIT^DSS UNIT INACTIVE^CATEGORY^CPT CODE^PROCEDURE CODE^PROCEDURE NAME^CLINIC" ;119
"RTN","ECSUM1",15,0)
 S (ECDO,ECMORE,UCNT,ECNT,ECCO)=0,ECPG=$G(ECPG,1),ECSCN=$G(ECSCN,"B")
"RTN","ECSUM1",16,0)
 I ECC="ALL" D CATS G END
"RTN","ECSUM1",17,0)
 I 'ECJLP S ECC=0,ECCN="None",ECCO=999
"RTN","ECSUM1",18,0)
 D PROC
"RTN","ECSUM1",19,0)
 D END
"RTN","ECSUM1",20,0)
 Q
"RTN","ECSUM1",21,0)
SET ;set var
"RTN","ECSUM1",22,0)
 S (ECDN,ECEDN)=$S($P($G(^ECD(+ECD,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN"),UCNT=0 ;119
"RTN","ECSUM1",23,0)
 S ECDN=ECDN_$S($P($G(^ECD(+ECD,0)),"^",6):" **Inactive**",1:"")
"RTN","ECSUM1",24,0)
 S ECEDNST=$S($P($G(^ECD(+ECD,0)),U,6):"INACTIVE",1:"") ;119
"RTN","ECSUM1",25,0)
 S ECS=+$P($G(^ECD(+ECD,0)),"^",2)
"RTN","ECSUM1",26,0)
 S ECSN=$S($P($G(^DIC(49,ECS,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECSUM1",27,0)
 Q
"RTN","ECSUM1",28,0)
SETC ;set cats
"RTN","ECSUM1",29,0)
 I ECC=0 S ECCN="None" Q
"RTN","ECSUM1",30,0)
 S ECCN=$S($P($G(^EC(726,+ECC,0)),"^")]"":$P(^(0),"^"),1:"ZZ #"_ECC_" MISSING DATA")
"RTN","ECSUM1",31,0)
 S ECCN=ECCN_$S($P($G(^EC(726,+ECC,0)),"^",3):" **Inactive**",1:"")
"RTN","ECSUM1",32,0)
 S ECMORE=1
"RTN","ECSUM1",33,0)
 Q
"RTN","ECSUM1",34,0)
HEADER ;
"RTN","ECSUM1",35,0)
 W:$E(IOST,1,2)="C-"!(ECPG>1) @IOF
"RTN","ECSUM1",36,0)
 W !!,?25,"CATEGORY AND PROCEDURE SUMMARY",?70,"Page: ",ECPG,!
"RTN","ECSUM1",37,0)
 W ?27,$S(ECSCN="I":"INACTIVE",ECSCN="A":"ACTIVE",1:" ALL")_" EVENT CODE"
"RTN","ECSUM1",38,0)
 W " SCREENS",!?25,"Run Date : ",ECRDT,!?25,"LOCATION:  "_ECLN
"RTN","ECSUM1",39,0)
 I $G(ECNOCNT) W ! S ECPG=ECPG+1
"RTN","ECSUM1",40,0)
 I '$G(ECNOCNT) W !,?25,"SERVICE:   ",ECSN,!?25,"DSS UNIT:  "_ECDN,! S ECPG=ECPG+1
"RTN","ECSUM1",41,0)
 F I=1:1:80 W "-"
"RTN","ECSUM1",42,0)
 Q
"RTN","ECSUM1",43,0)
CATS ;
"RTN","ECSUM1",44,0)
 S ECC="",ECCO=0
"RTN","ECSUM1",45,0)
 F  S ECC=$O(^ECJ("AP",ECL,ECD,ECC)) Q:ECC=""  D SETC,PROC Q:ECOUT
"RTN","ECSUM1",46,0)
 S ECMORE=0
"RTN","ECSUM1",47,0)
 Q
"RTN","ECSUM1",48,0)
PROC ;
"RTN","ECSUM1",49,0)
 S ECP=""
"RTN","ECSUM1",50,0)
 F  S ECP=$O(^ECJ("AP",ECL,ECD,ECC,ECP)) Q:ECP=""  D SETP Q:ECOUT
"RTN","ECSUM1",51,0)
 S ECMORE=0
"RTN","ECSUM1",52,0)
 Q
"RTN","ECSUM1",53,0)
SETP ;set procs
"RTN","ECSUM1",54,0)
 S ECPSY=+$O(^ECJ("AP",ECL,ECD,ECC,ECP,""))
"RTN","ECSUM1",55,0)
 S ECINDT=$P($G(^ECJ(ECPSY,0)),"^",2)
"RTN","ECSUM1",56,0)
 I ECSCN="A",ECINDT'="" Q
"RTN","ECSUM1",57,0)
 I ECSCN="I",ECINDT="" Q
"RTN","ECSUM1",58,0)
 I ECD'=ECDO D:$G(ECPTYP)'="E" HEADER S ECDO=ECD ;119
"RTN","ECSUM1",59,0)
 I ECC'=ECCO D  S ECCO=ECC I ECOUT Q
"RTN","ECSUM1",60,0)
 .I $G(ECPTYP)="E" Q  ;119
"RTN","ECSUM1",61,0)
 .W !!,?3,"Category:  "_ECCN D:$Y+4>IOSL PAGE,HEADER:ECPG,MORE:$D(ECCN)
"RTN","ECSUM1",62,0)
 S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2),EC4=+$P($G(^("PRO")),"^",4)
"RTN","ECSUM1",63,0)
 S EC2="" I EC4 S EC2=$S($P($G(^SC(EC4,0)),"^")]"":$P(^(0),"^"),1:"NO ASSOCIATED CLINIC")
"RTN","ECSUM1",64,0)
 S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECSUM1",65,0)
 I ECFILE="UNKNOWN" S ECPN="UNKNOWN",NATN="UNKNOWN"
"RTN","ECSUM1",66,0)
 I ECFILE=81 S ECPI=$$CPT^ICPTCOD(+ECP) D
"RTN","ECSUM1",67,0)
 .S ECPN=$S($P(ECPI,"^",3)]"":$P(ECPI,"^",3),1:"UNKNOWN"),NATN=$S($P(ECPI,"^",2)]"":$P(ECPI,"^",2),1:"NOT LISTED") K ECPI
"RTN","ECSUM1",68,0)
 I ECFILE=725 S ECPN=$S($P($G(^EC(725,+ECP,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN"),NATN=$S($P($G(^EC(725,+ECP,0)),"^",2)]"":$P(^(0),"^",2),1:"NOT LISTED")
"RTN","ECSUM1",69,0)
 I ECFILE=725 S ECCPT=$$CPT^ICPTCOD(+$P($G(^EC(725,+ECP,0)),U,5)),ECCPT=$S($P(ECCPT,U)=-1:"",1:$P(ECCPT,U,2)) ;119
"RTN","ECSUM1",70,0)
 S ECPN=$S(ECPSYN]"":ECPSYN,1:ECPN),ECNT=ECNT+1,UCNT=UCNT+1
"RTN","ECSUM1",71,0)
 I $G(ECPTYP)="E" D  Q  ;119
"RTN","ECSUM1",72,0)
 .D SET ; SET THE DSS UNIT AND UNIT STATUS VARIABLES 119
"RTN","ECSUM1",73,0)
 .S CNT=CNT+1 ;119
"RTN","ECSUM1",74,0)
 .S ^TMP($J,"ECRPT",CNT)=$S($P($G(^ECJ(+ECPSY,0)),U,2):"INACTIVE",1:"ACTIVE")_U_ECLN_U_ECSN_U_ECEDN_U_ECEDNST_U_ECCN_U_$S(ECFILE=81:NATN_U,1:ECCPT_U_NATN)_U_ECPN_U_EC2 ;119
"RTN","ECSUM1",75,0)
 W !,?3,"Procedure: ",$E(ECPN,1,30),"   (",$S(ECFILE=81:"CPT",1:"EC"),")",?52,"Nat'l No.: ",NATN
"RTN","ECSUM1",76,0)
 W:EC2]"" !,?14,"(Clinic: "_EC2_")"
"RTN","ECSUM1",77,0)
 I $P($G(^ECJ(+ECPSY,0)),"^",2),ECSCN="B" W ?70,"*INACTIVE*"
"RTN","ECSUM1",78,0)
 D:($Y+3)>IOSL PAGE,HEADER:ECPG,MORE:$D(ECCN) Q:ECOUT
"RTN","ECSUM1",79,0)
 Q
"RTN","ECSUM1",80,0)
PAGE ;
"RTN","ECSUM1",81,0)
 N SS,JJ
"RTN","ECSUM1",82,0)
 I $D(ECPG),$E(IOST,1,2)="C-" D
"RTN","ECSUM1",83,0)
 . S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECSUM1",84,0)
 . S DIR(0)="E" W ! D ^DIR K DIR I 'Y S ECOUT=1
"RTN","ECSUM1",85,0)
 Q
"RTN","ECSUM1",86,0)
MORE I ECMORE W !!,?3,"Category:  "_ECCN
"RTN","ECSUM1",87,0)
 Q
"RTN","ECUNTRPT")
0^3^B8713813^B6471767
"RTN","ECUNTRPT",1,0)
ECUNTRPT ;ALB/DHE DSS Units Errors Report ;10/12/12  11:21
"RTN","ECUNTRPT",2,0)
 ;;2.0;EVENT CAPTURE;**107,119**;8 May 96;Build 12
"RTN","ECUNTRPT",3,0)
 ;
"RTN","ECUNTRPT",4,0)
 ;This report displays DSS Units with any Associated Stop Codes
"RTN","ECUNTRPT",5,0)
 ;with any errors or warnings.
"RTN","ECUNTRPT",6,0)
 ;
"RTN","ECUNTRPT",7,0)
 ;Routine entry point, START if from roll and scroll, EN if
"RTN","ECUNTRPT",8,0)
 ;from GUI
"RTN","ECUNTRPT",9,0)
 ;
"RTN","ECUNTRPT",10,0)
 ;need to set up output device and taskman
"RTN","ECUNTRPT",11,0)
START ;
"RTN","ECUNTRPT",12,0)
 W @IOF,!!,"This option displays DSS Units with Associated Stop Code Errors.",!!
"RTN","ECUNTRPT",13,0)
 S %ZIS="QM" D ^%ZIS G EXIT:POP
"RTN","ECUNTRPT",14,0)
 I $D(IO("Q")) D  Q
"RTN","ECUNTRPT",15,0)
 . N ZTRTN,ZTDESC
"RTN","ECUNTRPT",16,0)
 . S ZTRTN="EN^ECUNTRPT",ZTDESC="DSS Units with Assoc Stop Codes"
"RTN","ECUNTRPT",17,0)
 . D ^%ZTLOAD D HOME^%ZIS K IO("Q") Q
"RTN","ECUNTRPT",18,0)
 U IO
"RTN","ECUNTRPT",19,0)
EN ;
"RTN","ECUNTRPT",20,0)
 N I,CNTR,DATE,ECERR,ECNAME,ECOUT,ECRDT,ECSTOP,ECSTOP1,ERR,INACT,LN
"RTN","ECUNTRPT",21,0)
 N PG,RTYPE,STR,UNITNM,UNT,CNT ;119
"RTN","ECUNTRPT",22,0)
 ;
"RTN","ECUNTRPT",23,0)
 S %H=$H,ECRDT=$$HTE^XLFDT(%H,"5M"),ECOUT=0
"RTN","ECUNTRPT",24,0)
 S CNTR=0,PG=1,UNT=0,$P(LN,"-",80)=""
"RTN","ECUNTRPT",25,0)
 I $G(ECPTYP)'="E" D HEAD ;119
"RTN","ECUNTRPT",26,0)
 I $G(ECPTYP)="E" S CNT=1,^TMP($J,"ECRPT",CNT)="DSS UNIT #^DSS UNIT NAME^STOP CODE^STOP CODE NAME^ERROR #1^ERROR #2^ERROR #3" ;119
"RTN","ECUNTRPT",27,0)
 F  S UNT=$O(^ECD(UNT)) Q:'UNT  D  I ECOUT Q
"RTN","ECUNTRPT",28,0)
 .Q:'$D(^ECD(UNT,0))
"RTN","ECUNTRPT",29,0)
 .;check to see if unit is inactive
"RTN","ECUNTRPT",30,0)
 .I $P(^ECD(UNT,0),"^",6)=1 Q
"RTN","ECUNTRPT",31,0)
 .;get associated stop code
"RTN","ECUNTRPT",32,0)
 .S ECSTOP=$P(^ECD(UNT,0),"^",10) Q:$G(ECSTOP)=0!(ECSTOP="")
"RTN","ECUNTRPT",33,0)
 .;
"RTN","ECUNTRPT",34,0)
 .S UNITNM=$P($G(^ECD(UNT,0)),U),ERR=0
"RTN","ECUNTRPT",35,0)
 .S STR=$G(^DIC(40.7,ECSTOP,0))
"RTN","ECUNTRPT",36,0)
 .I $G(STR)="" S ERR=ERR+1,ECERR(ERR)="CODE DOES NOT EXIST IN FILE 40.7",ECNAME="" Q
"RTN","ECUNTRPT",37,0)
 .S ECNAME=$P(STR,U),ECSTOP1=$P(STR,U,2),INACT=$P(STR,U,3),RTYPE=$P(STR,U,6)
"RTN","ECUNTRPT",38,0)
 .I $L(ECSTOP1)'=3 S ERR=ERR+1,ECERR(ERR)="CODE MUST BE 3 DIGITS"
"RTN","ECUNTRPT",39,0)
 .I $G(INACT),((DT>INACT)!(DT=INACT)) S ERR=ERR+1,ECERR(ERR)="INACTIVE CODE"
"RTN","ECUNTRPT",40,0)
 .I (RTYPE'=("P"))&(RTYPE'=("E")) S ERR=ERR+1,ECERR(ERR)="SECONDARY CODE"
"RTN","ECUNTRPT",41,0)
 .I $G(ECPTYP)'="E" I ($Y+4)>IOSL D PAGE Q:ECOUT  D HEAD ;119
"RTN","ECUNTRPT",42,0)
 .;if errors, loop through array, write, then kill
"RTN","ECUNTRPT",43,0)
 .I ERR D  S ERR=0 K ECERR
"RTN","ECUNTRPT",44,0)
 ..I $G(ECPTYP)="E" D EXPORT Q  ;119
"RTN","ECUNTRPT",45,0)
 ..W !!,"DSS Unit: ",?12,UNT,?19,UNITNM
"RTN","ECUNTRPT",46,0)
 ..W !,"Stop Code: ",?12,ECSTOP1,?19,ECNAME
"RTN","ECUNTRPT",47,0)
 ..F I=1:1:ERR W !,"Reason: ",ECERR(I) ;119
"RTN","ECUNTRPT",48,0)
 Q
"RTN","ECUNTRPT",49,0)
EXIT ;
"RTN","ECUNTRPT",50,0)
 K POP,QUIT,ZTQUEUED
"RTN","ECUNTRPT",51,0)
 Q
"RTN","ECUNTRPT",52,0)
 ;
"RTN","ECUNTRPT",53,0)
HEAD ;header
"RTN","ECUNTRPT",54,0)
 W:$E(IOST,1,2)="C-"!(PG>1) @IOF
"RTN","ECUNTRPT",55,0)
 W !!,"DSS UNITS WITH ANY ASSOCIATED STOP CODE ERRORS"
"RTN","ECUNTRPT",56,0)
 W !,"Page: ",PG,?53,"Run Date: ",ECRDT,!,LN
"RTN","ECUNTRPT",57,0)
 S PG=PG+1
"RTN","ECUNTRPT",58,0)
 Q
"RTN","ECUNTRPT",59,0)
PAGE ;
"RTN","ECUNTRPT",60,0)
 N SS,JJ
"RTN","ECUNTRPT",61,0)
 I $D(PG),$E(IOST,1,2)="C-" D
"RTN","ECUNTRPT",62,0)
 .S SS=22-$Y F JJ=1:1:22 W !
"RTN","ECUNTRPT",63,0)
 .S DIR(0)="E" W ! D ^DIR K DIR I 'Y S ECOUT=1
"RTN","ECUNTRPT",64,0)
 Q
"RTN","ECUNTRPT",65,0)
 ;
"RTN","ECUNTRPT",66,0)
STRTGUI ; if called from GUI, enter routine here
"RTN","ECUNTRPT",67,0)
 D EN
"RTN","ECUNTRPT",68,0)
 Q
"RTN","ECUNTRPT",69,0)
 ;
"RTN","ECUNTRPT",70,0)
EXPORT ;Section added in 119, puts data in exportable format
"RTN","ECUNTRPT",71,0)
 N I
"RTN","ECUNTRPT",72,0)
 S CNT=CNT+1,^TMP($J,"ECRPT",CNT)=UNT_U_UNITNM_U_ECSTOP1_U_ECNAME
"RTN","ECUNTRPT",73,0)
 F I=1:1:ERR S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_U_ECERR(I)
"RTN","ECUNTRPT",74,0)
 Q
"VER")
8.0^22.0
"BLD",8701,6)
^112
**END**
**END**
