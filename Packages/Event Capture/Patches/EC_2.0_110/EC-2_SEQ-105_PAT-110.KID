Released EC*2*110 SEQ #105
Extracted from mail message
**KIDS**:EC*2.0*110^

**INSTALL NAME**
EC*2.0*110
"BLD",8611,0)
EC*2.0*110^EVENT CAPTURE^0^3110318^y
"BLD",8611,1,0)
^^3^3^3110318^
"BLD",8611,1,1,0)
This patch will resolve issues with an Associated Clinic selection bug,
"BLD",8611,1,2,0)
multiple syntax errors occurring in routine ECOB, and a bug not allowing
"BLD",8611,1,3,0)
the answering of classification questions for inpatient procedures.
"BLD",8611,4,0)
^9.64PA^^
"BLD",8611,6.3)
4
"BLD",8611,"ABPKG")
n
"BLD",8611,"KRN",0)
^9.67PA^779.2^20
"BLD",8611,"KRN",.4,0)
.4
"BLD",8611,"KRN",.401,0)
.401
"BLD",8611,"KRN",.402,0)
.402
"BLD",8611,"KRN",.403,0)
.403
"BLD",8611,"KRN",.5,0)
.5
"BLD",8611,"KRN",.84,0)
.84
"BLD",8611,"KRN",3.6,0)
3.6
"BLD",8611,"KRN",3.8,0)
3.8
"BLD",8611,"KRN",9.2,0)
9.2
"BLD",8611,"KRN",9.8,0)
9.8
"BLD",8611,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",8611,"KRN",9.8,"NM",1,0)
ECOB^^0^B22576998
"BLD",8611,"KRN",9.8,"NM",2,0)
ECUMRPC1^^0^B78953323
"BLD",8611,"KRN",9.8,"NM",3,0)
ECUERPC1^^0^B52697567
"BLD",8611,"KRN",9.8,"NM","B","ECOB",1)

"BLD",8611,"KRN",9.8,"NM","B","ECUERPC1",3)

"BLD",8611,"KRN",9.8,"NM","B","ECUMRPC1",2)

"BLD",8611,"KRN",19,0)
19
"BLD",8611,"KRN",19.1,0)
19.1
"BLD",8611,"KRN",101,0)
101
"BLD",8611,"KRN",409.61,0)
409.61
"BLD",8611,"KRN",771,0)
771
"BLD",8611,"KRN",779.2,0)
779.2
"BLD",8611,"KRN",870,0)
870
"BLD",8611,"KRN",8989.51,0)
8989.51
"BLD",8611,"KRN",8989.52,0)
8989.52
"BLD",8611,"KRN",8994,0)
8994
"BLD",8611,"KRN","B",.4,.4)

"BLD",8611,"KRN","B",.401,.401)

"BLD",8611,"KRN","B",.402,.402)

"BLD",8611,"KRN","B",.403,.403)

"BLD",8611,"KRN","B",.5,.5)

"BLD",8611,"KRN","B",.84,.84)

"BLD",8611,"KRN","B",3.6,3.6)

"BLD",8611,"KRN","B",3.8,3.8)

"BLD",8611,"KRN","B",9.2,9.2)

"BLD",8611,"KRN","B",9.8,9.8)

"BLD",8611,"KRN","B",19,19)

"BLD",8611,"KRN","B",19.1,19.1)

"BLD",8611,"KRN","B",101,101)

"BLD",8611,"KRN","B",409.61,409.61)

"BLD",8611,"KRN","B",771,771)

"BLD",8611,"KRN","B",779.2,779.2)

"BLD",8611,"KRN","B",870,870)

"BLD",8611,"KRN","B",8989.51,8989.51)

"BLD",8611,"KRN","B",8989.52,8989.52)

"BLD",8611,"KRN","B",8994,8994)

"BLD",8611,"QDEF")
^^^^^^^^^^YES
"BLD",8611,"QUES",0)
^9.62^^
"BLD",8611,"REQB",0)
^9.611^2^2
"BLD",8611,"REQB",1,0)
EC*2.0*107^1
"BLD",8611,"REQB",2,0)
EC*2.0*76^1
"BLD",8611,"REQB","B","EC*2.0*107",1)

"BLD",8611,"REQB","B","EC*2.0*76",2)

"MBREQ")
0
"PKG",486,-1)
1^1
"PKG",486,0)
EVENT CAPTURE^EC^Event Capture Workload Capture System^
"PKG",486,20,0)
^9.402P^^
"PKG",486,22,0)
^9.49I^1^1
"PKG",486,22,1,0)
2.0^2960508^2981027^66481
"PKG",486,22,1,"PAH",1,0)
110^3110318
"PKG",486,22,1,"PAH",1,1,0)
^^3^3^3110318
"PKG",486,22,1,"PAH",1,1,1,0)
This patch will resolve issues with an Associated Clinic selection bug,
"PKG",486,22,1,"PAH",1,1,2,0)
multiple syntax errors occurring in routine ECOB, and a bug not allowing
"PKG",486,22,1,"PAH",1,1,3,0)
the answering of classification questions for inpatient procedures.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","ECOB")
0^1^B22576998^B22194703
"RTN","ECOB",1,0)
ECOB ;BP/CMF - base object 
"RTN","ECOB",2,0)
 ;;2.0;EVENT CAPTURE;**100,107,110**;8 May 96;Build 4
"RTN","ECOB",3,0)
 ;@author  - Chris Flegel
"RTN","ECOB",4,0)
 ;@date    - 17 May 2009
"RTN","ECOB",5,0)
 ;@version - 1.0
"RTN","ECOB",6,0)
 ;;
"RTN","ECOB",7,0)
 Q
"RTN","ECOB",8,0)
 ;; private methods
"RTN","ECOB",9,0)
COUNT(NAME) ; increment counter
"RTN","ECOB",10,0)
 N COUNT
"RTN","ECOB",11,0)
 S COUNT=+$O(@NAME@(9999999),-1)+1
"RTN","ECOB",12,0)
 S @NAME@(COUNT,0)=$G(DT)+1
"RTN","ECOB",13,0)
 Q COUNT
"RTN","ECOB",14,0)
 ;;
"RTN","ECOB",15,0)
PARSE(METHOD,VALUE)  ;
"RTN","ECOB",16,0)
 I METHOD="Argument" D  Q
"RTN","ECOB",17,0)
 .S HANDLE=$P(VALUE,".")
"RTN","ECOB",18,0)
 .Q
"RTN","ECOB",19,0)
 I METHOD="Child" D  Q
"RTN","ECOB",20,0)
 .S CHILD=$P(VALUE,"Handle.",2)
"RTN","ECOB",21,0)
 .Q
"RTN","ECOB",22,0)
 I METHOD="Handle" D  Q
"RTN","ECOB",23,0)
 .S NAME=$P(VALUE,".",1)
"RTN","ECOB",24,0)
 .S COUNT=$P(VALUE,".",2)
"RTN","ECOB",25,0)
 .Q
"RTN","ECOB",26,0)
 I METHOD="Tag" D  Q
"RTN","ECOB",27,0)
 .S TAG("routine")=$P(VALUE,"(")
"RTN","ECOB",28,0)
 .S TAG("parameters")=$P(VALUE,TAG("routine"),2)
"RTN","ECOB",29,0)
 .Q
"RTN","ECOB",30,0)
 ;;
"RTN","ECOB",31,0)
 ;; protected methods
"RTN","ECOB",32,0)
CREATE(NAME) ; return unique handle
"RTN","ECOB",33,0)
 N HANDLE
"RTN","ECOB",34,0)
 S NAME=$TR(NAME,".","") ;reserve period for piecers
"RTN","ECOB",35,0)
 S HANDLE=$TR(NAME,")","")_","_$$COUNT(NAME)_")"
"RTN","ECOB",36,0)
 D PROPERTY(HANDLE,"Pu","_class","EC BASE")
"RTN","ECOB",37,0)
 D PROPERTY(HANDLE,"Pu","_routine","METHOD^DGOB(.RESULT,ARGUMENT)")
"RTN","ECOB",38,0)
 D PROPERTY(HANDLE,"Pu","_name","Basic Pharmacy Object")
"RTN","ECOB",39,0)
 D PROPERTY(HANDLE,"Pu","_namespace",NAME)
"RTN","ECOB",40,0)
 D PROPERTY(HANDLE,"Pr","_parent","")
"RTN","ECOB",41,0)
 Q HANDLE
"RTN","ECOB",42,0)
 ;;
"RTN","ECOB",43,0)
COLLECT(HANDLE,CHILD,SCOPE,PROPERTY) ; attach or collect child objects
"RTN","ECOB",44,0)
 S SCOPE=$S($G(SCOPE)'="":SCOPE,1:"Pu")
"RTN","ECOB",45,0)
 S PROPERTY=$S($G(PROPERTY)'="":PROPERTY,1:"-1")
"RTN","ECOB",46,0)
 S @HANDLE@(SCOPE,PROPERTY)=CHILD
"RTN","ECOB",47,0)
 S @HANDLE@("Pr","Handle",CHILD)=PROPERTY
"RTN","ECOB",48,0)
 Q 1
"RTN","ECOB",49,0)
 ;;
"RTN","ECOB",50,0)
DESTROY(HANDLE) ; cleanup
"RTN","ECOB",51,0)
 N CHILD
"RTN","ECOB",52,0)
 S CHILD=0
"RTN","ECOB",53,0)
 F  S CHILD=$O(@HANDLE@("Pr","Handle",CHILD)) Q:'CHILD  D
"RTN","ECOB",54,0)
 .K @CHILD
"RTN","ECOB",55,0)
 .Q
"RTN","ECOB",56,0)
 K @HANDLE
"RTN","ECOB",57,0)
 Q 1
"RTN","ECOB",58,0)
 ;;
"RTN","ECOB",59,0)
FUNCTION(HANDLE,ARGUMENT)  ;
"RTN","ECOB",60,0)
 N RESULT
"RTN","ECOB",61,0)
 D METHOD(.RESULT,HANDLE_"."_ARGUMENT)
"RTN","ECOB",62,0)
 Q RESULT
"RTN","ECOB",63,0)
 ;;
"RTN","ECOB",64,0)
GET(RESULT,HANDLE,SCOPE,PROPERTY) ; get simple property
"RTN","ECOB",65,0)
 I $G(HANDLE)="" S RESULT="-1^Handle does not exist." Q  ;EC*110 - BGP
"RTN","ECOB",66,0)
 I '$D(@HANDLE) S RESULT="-1^No data at handle: "_HANDLE_"." Q  ;EC*110
"RTN","ECOB",67,0)
 S SCOPE=$S($G(SCOPE)'="":SCOPE,1:"Pu")
"RTN","ECOB",68,0)
 S PROPERTY=$S($G(PROPERTY)'="":PROPERTY,1:"-1")
"RTN","ECOB",69,0)
 S RESULT=$G(@HANDLE@(SCOPE,PROPERTY))
"RTN","ECOB",70,0)
 S:$D(RESULT)=0 RESULT="-1^Property "_PROPERTY_" does not exist."
"RTN","ECOB",71,0)
 Q
"RTN","ECOB",72,0)
 ;;
"RTN","ECOB",73,0)
ISHANDLE(HANDLE,CHILD)  ;
"RTN","ECOB",74,0)
 S HANDLE=$S($G(HANDLE)'="":HANDLE,1:-1)
"RTN","ECOB",75,0)
 S CHILD=$S($G(CHILD)'="":CHILD,1:-1)
"RTN","ECOB",76,0)
 Q $D(@HANDLE@("Pr","Handle",CHILD))
"RTN","ECOB",77,0)
 ;;
"RTN","ECOB",78,0)
METHOD(RESULT,ARGUMENT) ; most basic handler
"RTN","ECOB",79,0)
 N HANDLE,TAG
"RTN","ECOB",80,0)
 S RESULT=-1
"RTN","ECOB",81,0)
 D PARSE("Argument",ARGUMENT)
"RTN","ECOB",82,0)
 D GET(.TAG,HANDLE,"Pu","_routine")
"RTN","ECOB",83,0)
 D PARSE("Tag",TAG)
"RTN","ECOB",84,0)
 Q:TAG("routine")="METHOD^DGOB"  ;stop recursive call
"RTN","ECOB",85,0)
 Q:TAG("routine")=""
"RTN","ECOB",86,0)
 I $T(@TAG("routine"))'="" D  Q
"RTN","ECOB",87,0)
 .I TAG("parameters")="(.RESULT,ARGUMENT)" D @TAG
"RTN","ECOB",88,0)
 Q
"RTN","ECOB",89,0)
 ;;
"RTN","ECOB",90,0)
MOVE(RESULT,HANDLE,SOURCE,SCOPE,PROPERTY) ;copy simple object property to another
"RTN","ECOB",91,0)
 N X
"RTN","ECOB",92,0)
 D GET(.X,SOURCE,SCOPE,PROPERTY)
"RTN","ECOB",93,0)
 D SET(.RESULT,HANDLE,SCOPE,PROPERTY,X)
"RTN","ECOB",94,0)
 Q
"RTN","ECOB",95,0)
 ;;
"RTN","ECOB",96,0)
PROPERTY(HANDLE,SCOPE,PROPERTY,VALUE) ; create simple property node
"RTN","ECOB",97,0)
 S HANDLE=$S($G(HANDLE)'="":HANDLE,1:-1)
"RTN","ECOB",98,0)
 S SCOPE=$S($G(SCOPE)'="":SCOPE,1:"Pu")
"RTN","ECOB",99,0)
 S PROPERTY=$S($G(PROPERTY)'="":PROPERTY,1:-1)
"RTN","ECOB",100,0)
 S @HANDLE@(SCOPE,PROPERTY)=$G(VALUE)
"RTN","ECOB",101,0)
 Q 1
"RTN","ECOB",102,0)
 ;;
"RTN","ECOB",103,0)
SELF(RESULT,HANDLE,CLASS,NAME,ROUTINE,PARENT) ; set 'self' properties of object
"RTN","ECOB",104,0)
 N RESULT
"RTN","ECOB",105,0)
 D:CLASS'="" SET(.RESULT,HANDLE,"Pu","_class",CLASS)
"RTN","ECOB",106,0)
 D:NAME'="" SET(.RESULT,HANDLE,"Pu","_name",NAME)
"RTN","ECOB",107,0)
 D:ROUTINE'="" SET(.RESULT,HANDLE,"Pu","_routine",ROUTINE)
"RTN","ECOB",108,0)
 D:PARENT'="" SET(.RESULT,HANDLE,"Pr","_parent",PARENT)
"RTN","ECOB",109,0)
 Q
"RTN","ECOB",110,0)
 ;;
"RTN","ECOB",111,0)
SET(RESULT,HANDLE,SCOPE,PROPERTY,VALUE) ; set simple property
"RTN","ECOB",112,0)
 I $G(HANDLE)="" S RESULT="-1^Handle does not exist" Q  ;EC*110
"RTN","ECOB",113,0)
 I '$D(@HANDLE) S RESULT="-1^No data at handle: "_HANDLE_"." Q  ;EC*110
"RTN","ECOB",114,0)
 S SCOPE=$S($G(SCOPE)'="":SCOPE,1:"Pu")
"RTN","ECOB",115,0)
 S PROPERTY=$S($G(PROPERTY)'="":PROPERTY,1:"-1")
"RTN","ECOB",116,0)
 I '$D(@HANDLE@(SCOPE,PROPERTY)) D  Q
"RTN","ECOB",117,0)
 .S RESULT="-1^Property "_PROPERTY_" does not exist."
"RTN","ECOB",118,0)
 S @HANDLE@(SCOPE,PROPERTY)=VALUE
"RTN","ECOB",119,0)
 S RESULT=1
"RTN","ECOB",120,0)
 Q
"RTN","ECOB",121,0)
 ;;
"RTN","ECOB",122,0)
SHOW(RESULT,HANDLE,SCOPE,PROPERTY,PARAMS) ; show a property
"RTN","ECOB",123,0)
 N JUSTIFY,CHILD,CLASS
"RTN","ECOB",124,0)
 D GET(.RESULT,HANDLE,SCOPE,PROPERTY)
"RTN","ECOB",125,0)
 S JUSTIFY=$S(+PARAMS:+PARAMS,1:0)
"RTN","ECOB",126,0)
 I PARAMS["/" W !,$J("</"_PROPERTY_">  ",JUSTIFY) Q
"RTN","ECOB",127,0)
 W !,$J("<"_PROPERTY_"> : ",JUSTIFY),RESULT
"RTN","ECOB",128,0)
 D:$$ISHANDLE(HANDLE,RESULT)
"RTN","ECOB",129,0)
 .S CHILD=RESULT
"RTN","ECOB",130,0)
 .D GET(.CLASS,CHILD,"Pu","_class")
"RTN","ECOB",131,0)
 .W " [class = "_CLASS_"]"
"RTN","ECOB",132,0)
 Q
"RTN","ECOB",133,0)
 ;; 
"RTN","ECOB",134,0)
TREE(CHILD,HANDLE,SCOPE,PROPERTY,JUSTIFY) Q  ; no longer used
"RTN","ECUERPC1")
0^3^B52697567^B53314567
"RTN","ECUERPC1",1,0)
ECUERPC1 ;ALB/JAM;Event Capture Data Entry Broker Util ; 5/21/01 7:30pm
"RTN","ECUERPC1",2,0)
 ;;2.0; EVENT CAPTURE ;**25,33,42,46,47,54,72,76,110**;8 May 96;Build 4
"RTN","ECUERPC1",3,0)
PATINF(RESULTS,ECARY) ;
"RTN","ECUERPC1",4,0)
 ;Broker entry point to get various types of data from EVENT CAPTURE 
"RTN","ECUERPC1",5,0)
 ;PATIENT FILE #721
"RTN","ECUERPC1",6,0)
 ;        RPC: EC GETPATINFO
"RTN","ECUERPC1",7,0)
 ;INPUTS   ECARY  - Contains the following subscripted elements
"RTN","ECUERPC1",8,0)
 ;          ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",9,0)
 ;          ECTYP - Data type to return
"RTN","ECUERPC1",10,0)
 ;
"RTN","ECUERPC1",11,0)
 ;OUTPUTS  RESULTS - Array of Event Capture Patient data
"RTN","ECUERPC1",12,0)
 ;
"RTN","ECUERPC1",13,0)
 N ECTYP,ECIEN
"RTN","ECUERPC1",14,0)
 S ECARY=$G(ECARY),ECIEN=$P(ECARY,U),ECTYP=$P(ECARY,U,2) I ECIEN="" Q
"RTN","ECUERPC1",15,0)
 I '$D(^ECH(ECIEN)) Q
"RTN","ECUERPC1",16,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",17,0)
 I ECTYP="DXS" D PATDXS(ECIEN) Q
"RTN","ECUERPC1",18,0)
 I ECTYP="MOD" D PATMOD(ECIEN) Q
"RTN","ECUERPC1",19,0)
 I ECTYP="CLASS" D PATCLASS(ECIEN) Q
"RTN","ECUERPC1",20,0)
 I ECTYP="OTH" D PATOTH(ECIEN) Q
"RTN","ECUERPC1",21,0)
 I ECTYP="PRV" D PATPRV^ECUERPC2(ECIEN) Q
"RTN","ECUERPC1",22,0)
 Q
"RTN","ECUERPC1",23,0)
PATDXS(ECIEN) ;
"RTN","ECUERPC1",24,0)
 ;Returns to broker a patient secondary DXs entries from EVENT 
"RTN","ECUERPC1",25,0)
 ;CAPTURE PATIENT FILE #721
"RTN","ECUERPC1",26,0)
 ;INPUTS   ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",27,0)
 ;
"RTN","ECUERPC1",28,0)
 ;OUTPUTS  RESULTS - Array of Event Capture Patient file contains
"RTN","ECUERPC1",29,0)
 ;          721 IEN^secondary dx ien #80^secondary dx code^dx description
"RTN","ECUERPC1",30,0)
 ;
"RTN","ECUERPC1",31,0)
 N DXS,DXSIEN,DXSD,CNT
"RTN","ECUERPC1",32,0)
 I '$D(^ECH(ECIEN,"DX")) Q
"RTN","ECUERPC1",33,0)
 K ^TMP($J,"ECDXS")
"RTN","ECUERPC1",34,0)
 S (CNT,DXS)=0 F  S DXS=$O(^ECH(ECIEN,"DX",DXS)) Q:'DXS  D
"RTN","ECUERPC1",35,0)
 . S DXSIEN=$G(^ECH(ECIEN,"DX",DXS,0)) I DXSIEN="" Q
"RTN","ECUERPC1",36,0)
 . S DXSD=$$ICDDX^ICDCODE(DXSIEN,$P($G(^ECH(ECIEN,0)),U,3))
"RTN","ECUERPC1",37,0)
 . S DXSD=$P(DXSD,U,2)_"   "_$P(DXSD,U,4)
"RTN","ECUERPC1",38,0)
 . S CNT=CNT+1,^TMP($J,"ECDXS",CNT)=ECIEN_U_DXSIEN_U_DXSD
"RTN","ECUERPC1",39,0)
 S RESULTS=$NA(^TMP($J,"ECDXS"))
"RTN","ECUERPC1",40,0)
 Q
"RTN","ECUERPC1",41,0)
PATMOD(ECIEN) ;
"RTN","ECUERPC1",42,0)
 ;Returns to broker a patient procedure modifier from EVENT CAPTURE
"RTN","ECUERPC1",43,0)
 ;PATIENT FILE #721
"RTN","ECUERPC1",44,0)
 ;INPUTS   ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",45,0)
 ;
"RTN","ECUERPC1",46,0)
 ;OUTPUTS  RESULTS - Array of procedure modifiers
"RTN","ECUERPC1",47,0)
 ;          721 IEN^modifier ien #81.3^modifier^modifier name
"RTN","ECUERPC1",48,0)
 ;
"RTN","ECUERPC1",49,0)
 N MOD,MODIEN,CNT,MODS
"RTN","ECUERPC1",50,0)
 I '$D(^ECH(ECIEN,"MOD")) Q
"RTN","ECUERPC1",51,0)
 K ^TMP($J,"ECMOD")
"RTN","ECUERPC1",52,0)
 S (CNT,MOD)=0 F  S MOD=$O(^ECH(ECIEN,"MOD",MOD)) Q:'MOD  D
"RTN","ECUERPC1",53,0)
 . S MODIEN=$G(^ECH(ECIEN,"MOD",MOD,0)) I MODIEN="" Q
"RTN","ECUERPC1",54,0)
 . S MODS=$$MOD^ICPTMOD(MODIEN,"I",$P($G(^ECH(ECIEN,0)),U,3)) I +MODS<0 Q
"RTN","ECUERPC1",55,0)
 . S CNT=CNT+1
"RTN","ECUERPC1",56,0)
 . S ^TMP($J,"ECMOD",CNT)=ECIEN_U_$P(MODS,U,1,2)_"  "_$P(MODS,U,3)
"RTN","ECUERPC1",57,0)
 S RESULTS=$NA(^TMP($J,"ECMOD"))
"RTN","ECUERPC1",58,0)
 Q
"RTN","ECUERPC1",59,0)
PATCLASS(ECIEN) ;
"RTN","ECUERPC1",60,0)
 ;Returns to broker a patient classification & eligibility data from
"RTN","ECUERPC1",61,0)
 ;EVENT CAPTURE PATIENT FILE #721
"RTN","ECUERPC1",62,0)
 ; INPUTS   ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",63,0)
 ; OUTPUTS  RESULTS - Array of procedure modifiers
"RTN","ECUERPC1",64,0)
 ;  721 IEN^agent orange^radiation exposure^service connect^environmental
"RTN","ECUERPC1",65,0)
 ;  contaminants/SWAC^military sexual trauma^eligibility code #8^
"RTN","ECUERPC1",66,0)
 ;  eligibility description^head/neck cancer^combat veteran^P112/SHAD
"RTN","ECUERPC1",67,0)
 ;
"RTN","ECUERPC1",68,0)
 N CLA,ELIG,ELCOD,ECAO,ECIR,ECEC,ECSC,ECMST,STR,ECHNC,ECCV,ECSHAD
"RTN","ECUERPC1",69,0)
 I '$D(^ECH(ECIEN,"P")),'$D(^ECH(ECIEN,"PCE")) Q
"RTN","ECUERPC1",70,0)
 K ^TMP($J,"ECLASS")
"RTN","ECUERPC1",71,0)
 S ELIG=$P($G(^ECH(ECIEN,"PCE")),"~",17),ELCOD="",CLA=$G(^ECH(ECIEN,"P"))
"RTN","ECUERPC1",72,0)
 S:ELIG'="" ELCOD=$P($G(^DIC(8,ELIG,0)),U)
"RTN","ECUERPC1",73,0)
 S ECAO=$P(CLA,U,3),ECIR=$P(CLA,U,4),ECEC=$P(CLA,U,5),ECSC=$P(CLA,U,6)
"RTN","ECUERPC1",74,0)
 S ECMST=$P(CLA,U,9),ECHNC=$P(CLA,U,10),ECCV=$P(CLA,U,11),ECSHAD=$P(CLA,U,12)
"RTN","ECUERPC1",75,0)
 S STR=ECIEN_U_ECAO_U_ECIR_U_ECSC_U_ECEC_U_ECMST
"RTN","ECUERPC1",76,0)
 S STR=STR_U_ELIG_U_ELCOD_U_ECHNC_U_ECCV_U_ECSHAD,^TMP($J,"ECLASS",1)=STR
"RTN","ECUERPC1",77,0)
 S RESULTS=$NA(^TMP($J,"ECLASS"))
"RTN","ECUERPC1",78,0)
 Q
"RTN","ECUERPC1",79,0)
PATOTH(ECIEN) ;
"RTN","ECUERPC1",80,0)
 ;Returns to broker a patient remaining data from EVENT CAPTURE
"RTN","ECUERPC1",81,0)
 ;PATIENT FILE #721
"RTN","ECUERPC1",82,0)
 ;INPUTS   ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",83,0)
 ;
"RTN","ECUERPC1",84,0)
 ;OUTPUTS  RESULTS - Array of procedure modifiers
"RTN","ECUERPC1",85,0)
 ;          721 IEN^procedure reason
"RTN","ECUERPC1",86,0)
 ;
"RTN","ECUERPC1",87,0)
 N REAS,ECX
"RTN","ECUERPC1",88,0)
 K ^TMP($J,"ECOTH")
"RTN","ECUERPC1",89,0)
 S ECX=^ECH(ECIEN,0)
"RTN","ECUERPC1",90,0)
 S REAS=$$GET1^DIQ(721,ECIEN,34,"E")
"RTN","ECUERPC1",91,0)
 S ^TMP($J,"ECOTH",1)=REAS
"RTN","ECUERPC1",92,0)
 S RESULTS=$NA(^TMP($J,"ECOTH"))
"RTN","ECUERPC1",93,0)
 Q
"RTN","ECUERPC1",94,0)
PATCLAST(RESULTS,ECARY) ;
"RTN","ECUERPC1",95,0)
 ;Returns to broker a patient status (in/out) and classification
"RTN","ECUERPC1",96,0)
 ;     RPC: EC GETPATCLASTAT
"RTN","ECUERPC1",97,0)
 ;INPUTS  ECARY  - Contains the following subscripted elements  
"RTN","ECUERPC1",98,0)
 ;         ECDFN - Patient ien (#2)
"RTN","ECUERPC1",99,0)
 ;         ECD   - DSS Unit ien (#724)
"RTN","ECUERPC1",100,0)
 ;         ECDT  - Procedure date and time (fileman format)
"RTN","ECUERPC1",101,0)
 ;OUTPUTS  RESULTS - Patient status and classifications delimited by (^)
"RTN","ECUERPC1",102,0)
 ;         Patient Status: I for inpatient or O for outpatient
"RTN","ECUERPC1",103,0)
 ;         Classification: 2- Agent Orange, 3- Ionizing Radiation
"RTN","ECUERPC1",104,0)
 ;          4- SC Condition, 5- Environment Contaminants/SWAC 6- Military
"RTN","ECUERPC1",105,0)
 ;          Sexual Trauma    7- Head/Neck Cancer 8- Combat Veteran
"RTN","ECUERPC1",106,0)
 ;          9- Project 112/SHAD
"RTN","ECUERPC1",107,0)
 ;         Data after the '~' refers to those class. that must be asked 
"RTN","ECUERPC1",108,0)
 ;         by Delphi appl. when the answer to SC=No.
"RTN","ECUERPC1",109,0)
 ;         Data after "~"  1- Agent Orange  2- Ionizing Radi. 3- Env Cont/SWAC
"RTN","ECUERPC1",110,0)
 N ECDFN,ECDT,ECX,I,ECCLARY,SCDAT,PATSTAT
"RTN","ECUERPC1",111,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",112,0)
 S ECDFN=$P(ECARY,U),ECD=$P(ECARY,U,2),ECDT=$P(ECARY,U,3) Q:ECDFN=""
"RTN","ECUERPC1",113,0)
 I ECDT="" D NOW^%DTC S ECDT=%
"RTN","ECUERPC1",114,0)
 S PATSTAT=$$INOUTPT^ECUTL0(ECDFN,ECDT),RESULTS="^^^^^^",SCDAT=";;;"
"RTN","ECUERPC1",115,0)
 ;
"RTN","ECUERPC1",116,0)
 ; Removed in EC*110 so inpatient data can be answered for transmission to Austin
"RTN","ECUERPC1",117,0)
 ; This was to be consistant with VHA Directive 2009-002
"RTN","ECUERPC1",118,0)
 ;
"RTN","ECUERPC1",119,0)
 ; I PATSTAT="I" D  Q
"RTN","ECUERPC1",120,0)
 ; .S RESULTS=PATSTAT_"^"_RESULTS_$S(SCDAT'="":"~"_SCDAT,1:"") 
"RTN","ECUERPC1",121,0)
 I '$$CHKDSS^ECUTL0(+$G(ECD),PATSTAT) D  Q
"RTN","ECUERPC1",122,0)
 .S RESULTS=PATSTAT_"^"_RESULTS_$S(SCDAT'="":"~"_SCDAT,1:"")
"RTN","ECUERPC1",123,0)
 D CL^SDCO21(ECDFN,ECDT,"",.ECCLARY) F ECX=3,1,2,4,5,6,7,8 D
"RTN","ECUERPC1",124,0)
 .I ECX=1,$P($G(^DPT(ECDFN,.321)),"^",2)'="Y" Q
"RTN","ECUERPC1",125,0)
 .I ECX=2,$P($G(^DPT(ECDFN,.321)),"^",3)'="Y" Q
"RTN","ECUERPC1",126,0)
 .I ECX=4,$P($G(^DPT(ECDFN,.322)),"^",13)'="Y",'$$EC^SDCO22(ECDFN,"") Q
"RTN","ECUERPC1",127,0)
 .I ECX=3,$D(ECCLARY(ECX)) F I=1,2,4 S ECCLARY(I)="SC"
"RTN","ECUERPC1",128,0)
 .I '$D(ECCLARY(ECX)) Q
"RTN","ECUERPC1",129,0)
 .;Check SC, if answer to SC is NO then these questions will be asked
"RTN","ECUERPC1",130,0)
 .I ECCLARY(ECX)="SC" S $P(SCDAT,";",ECX)="E"
"RTN","ECUERPC1",131,0)
 .E  S $P(RESULTS,"^",ECX)="E"
"RTN","ECUERPC1",132,0)
 S RESULTS=PATSTAT_"^"_RESULTS_$S(SCDAT'="":"~"_SCDAT,1:"")
"RTN","ECUERPC1",133,0)
 Q
"RTN","ECUERPC1",134,0)
ENCDXS(RESULTS,ECARY) ;
"RTN","ECUERPC1",135,0)
 ;Broker call returns a patient encounter primary & secondary dx (#721)
"RTN","ECUERPC1",136,0)
 ;     RPC: EC GETENCDXS
"RTN","ECUERPC1",137,0)
 ;INPUTS   ECDFN - Patient ien (#2)
"RTN","ECUERPC1",138,0)
 ;         ECDT  - Procedure date and time (fileman format)
"RTN","ECUERPC1",139,0)
 ;         ECL   - Location ien
"RTN","ECUERPC1",140,0)
 ;         EC4   - Clinic ien
"RTN","ECUERPC1",141,0)
 ;
"RTN","ECUERPC1",142,0)
 ;OUTPUTS  RESULTS - array of patient encounter diagnosis
"RTN","ECUERPC1",143,0)
 ;         primary/secondary flag^DX ien^DX code  DX description.
"RTN","ECUERPC1",144,0)
 ;
"RTN","ECUERPC1",145,0)
 N ECDFN,ECDT,ECL,EC4,ECPDX,ECDX,ECDXN,ECDXS,CNT,STR,ECPDX,SDXCNT
"RTN","ECUERPC1",146,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",147,0)
 K ^TMP($J,"ECENCDXS")
"RTN","ECUERPC1",148,0)
 S ECDFN=$P(ECARY,U),ECDT=+$P(ECARY,U,2),ECL=$P(ECARY,U,3)
"RTN","ECUERPC1",149,0)
 S EC4=$P(ECARY,U,4) I ECDT="" D NOW^%DTC S ECDT=%
"RTN","ECUERPC1",150,0)
 I ECDFN=""!(ECL="")!(EC4="") Q
"RTN","ECUERPC1",151,0)
 S (ECDX,ECDXN)="",ECPDX=$$PDXCK^ECUTL2(ECDFN,ECDT,ECL,EC4) I ECDX="" Q
"RTN","ECUERPC1",152,0)
 S IEN="",STR=1_U_ECDX_U_ECDXN_"   "_$P($$ICDDX^ICDCODE(ECDX,ECDT),U,4)
"RTN","ECUERPC1",153,0)
 S CNT=1,^TMP($J,"ECENCDXS",CNT)=STR
"RTN","ECUERPC1",154,0)
 ;*ACS concat description to 2nd diag code, in the order entered by the user
"RTN","ECUERPC1",155,0)
 F  S IEN=$O(ECDXS(IEN)) Q:IEN=""  D
"RTN","ECUERPC1",156,0)
 . S CNT=CNT+1,^TMP($J,"ECENCDXS",CNT)=0_U_ECDXS(IEN)_U_IEN_"   "_$P($$ICDDX^ICDCODE(ECDXS(IEN),ECDT),U,4)
"RTN","ECUERPC1",157,0)
 S RESULTS=$NA(^TMP($J,"ECENCDXS"))
"RTN","ECUERPC1",158,0)
 Q
"RTN","ECUERPC1",159,0)
 ;
"RTN","ECUERPC1",160,0)
PROCBAT(RESULTS,ECARY) ;
"RTN","ECUERPC1",161,0)
 ;Broker call returns the entries from EVENT CAPTURE PATIENT FILE #721
"RTN","ECUERPC1",162,0)
 ;for patients for a specific procedure
"RTN","ECUERPC1",163,0)
 ;        RPC: EC GETBATPROCS
"RTN","ECUERPC1",164,0)
 ;INPUTS   ECARY - Contains the following subscripted elements
"RTN","ECUERPC1",165,0)
 ;          ECLOC - Location ien
"RTN","ECUERPC1",166,0)
 ;          ECUNT - DSS unit ien
"RTN","ECUERPC1",167,0)
 ;          ECC   - Category ien
"RTN","ECUERPC1",168,0)
 ;          ECP   - Procedure ien
"RTN","ECUERPC1",169,0)
 ;          ECSD  - Start Date
"RTN","ECUERPC1",170,0)
 ;          ECED  - End Date
"RTN","ECUERPC1",171,0)
 ;
"RTN","ECUERPC1",172,0)
 ;OUTPUTS  RESULTS - Array of Event Capture Patient data containing:-
"RTN","ECUERPC1",173,0)
 ;          721 IEN^Patient name^Procedure Date/Time^Primary Dx
"RTN","ECUERPC1",174,0)
 ;          ^Ordering Section^Associated Clinic
"RTN","ECUERPC1",175,0)
 ;^SSN^DOB^Procedure Date and Time
"RTN","ECUERPC1",176,0)
 ;
"RTN","ECUERPC1",177,0)
 N IEN,CNT,ECLOC,ECUNT,NODE,DATA,PXDT,ECV,ECC,ECP,ECSD,ECED,DATE,DFN
"RTN","ECUERPC1",178,0)
 N CAT,ECI,VADM,ORC,ASC,ECDX
"RTN","ECUERPC1",179,0)
 S ECV="ECLOC^ECUNT^ECC^ECP^ECSD^ECED"
"RTN","ECUERPC1",180,0)
 D PARSE^ECUERPC(ECV,ECARY)
"RTN","ECUERPC1",181,0)
 I (ECLOC="")!(ECUNT="")!(ECC="")!(ECP="") Q
"RTN","ECUERPC1",182,0)
 D SETENV^ECUMRPC K ^TMP($J,"ECBATPX") S CNT=0
"RTN","ECUERPC1",183,0)
 S %DT="STX" F ECI="ECSD","ECED" S X=@ECI D ^%DT S @ECI=Y
"RTN","ECUERPC1",184,0)
 S ECSD=$S(ECSD=-1:DT,1:ECSD)-.0001,ECED=$S(ECED=-1:DT,1:ECED)+.9999
"RTN","ECUERPC1",185,0)
 Q:ECED'>ECSD  S DATE=ECSD
"RTN","ECUERPC1",186,0)
 F  S DATE=$O(^ECH("AC1",ECLOC,DATE)) Q:'DATE!(DATE>ECED)  S IEN=0 D
"RTN","ECUERPC1",187,0)
 . F  S IEN=$O(^ECH("AC1",ECLOC,DATE,IEN)) Q:'IEN  D
"RTN","ECUERPC1",188,0)
 . . S NODE=$G(^ECH(IEN,0))  Q:NODE=""  Q:$P(NODE,U,7)'=ECUNT
"RTN","ECUERPC1",189,0)
 . . Q:$P(NODE,U,8)'=ECC  Q:$P(NODE,U,9)'=ECP
"RTN","ECUERPC1",190,0)
 . . S ECDX=$P($G(^ECH(IEN,"P")),U,2) I ECDX'="" D
"RTN","ECUERPC1",191,0)
 . . . S ECDX=$$ICDDX^ICDCODE(ECDX,DATE)
"RTN","ECUERPC1",192,0)
 . . . S ECDX=$P(ECDX,U,2)_"  "_$P(ECDX,U,4)
"RTN","ECUERPC1",193,0)
 . . S ASC=$P(NODE,U,19) S:ASC'="" ASC=$$GET1^DIQ(44,ASC,.01,"I")
"RTN","ECUERPC1",194,0)
 . . S ORC=$P(NODE,U,12) S:ORC'="" ORC=$$GET1^DIQ(723,ORC,.01,"I")
"RTN","ECUERPC1",195,0)
 . . S Y=DATE X ^DD("DD") S PXDT=Y,DFN=$P(NODE,U,2) D DEM^VADPT
"RTN","ECUERPC1",196,0)
 . . S DATA=$E(VADM(1),1,30)_U_PXDT_U_ECDX_U_ORC_U_ASC
"RTN","ECUERPC1",197,0)
 . . S CNT=CNT+1,^TMP($J,"ECBATPX",CNT)=IEN_U_DATA
"RTN","ECUERPC1",198,0)
 S RESULTS=$NA(^TMP($J,"ECBATPX"))
"RTN","ECUERPC1",199,0)
 Q
"RTN","ECUERPC1",200,0)
 ;
"RTN","ECUERPC1",201,0)
CLHLP(RESULTS,ECARY) ;RPC Broker entry point for classification help
"RTN","ECUERPC1",202,0)
 ;        RPC: EC CLASHELP
"RTN","ECUERPC1",203,0)
 ;INPUTS   ECARY - Contains the following elements for report printing
"RTN","ECUERPC1",204,0)
 ;          ECDFN  - Patient DFN from file (#2)
"RTN","ECUERPC1",205,0)
 ;          ECKY   - Key to provide help on
"RTN","ECUERPC1",206,0)
 ;
"RTN","ECUERPC1",207,0)
 ;OUTPUTS  RESULTS - Array of help text for classification
"RTN","ECUERPC1",208,0)
 ;
"RTN","ECUERPC1",209,0)
 N ECFILER,ECERR,ECDIRY,ECUFILE,ECDFN,ECKY,ECHNDL
"RTN","ECUERPC1",210,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",211,0)
 K ^TMP("ECMSG",$J)
"RTN","ECUERPC1",212,0)
 S ECERR=0,ECDFN=$P(ECARY,U),ECKY=$P(ECARY,U,2) D  I ECERR D CLEND Q
"RTN","ECUERPC1",213,0)
 .I ECDFN="" S ECERR=1,^TMP("ECMSG",$J,1)="0^Patient IEN not defined" Q
"RTN","ECUERPC1",214,0)
 .I ECKY="" S ECERR=1,^TMP("ECMSG",$J,1)="0^Help Key not defined" Q
"RTN","ECUERPC1",215,0)
 .S DIC=2,DIC(0)="NMZX",X=ECDFN D ^DIC I Y<0 D
"RTN","ECUERPC1",216,0)
 ..S ECERR=1,^TMP("ECMSG",$J,1)="0^Patient IEN not found"
"RTN","ECUERPC1",217,0)
 S ECHNDL="ECLASHLP" D HFSOPEN^ECRRPC(ECHNDL) I ECERR D CLEND Q
"RTN","ECUERPC1",218,0)
 U IO
"RTN","ECUERPC1",219,0)
 I ECKY="SC" D SC^SDCO23(ECDFN)
"RTN","ECUERPC1",220,0)
 D HFSCLOSE^ECRRPC(ECFILER)
"RTN","ECUERPC1",221,0)
CLEND ;
"RTN","ECUERPC1",222,0)
 I $D(^TMP("ECMSG",$J)) S RESULTS=$NA(^TMP("ECMSG",$J)) Q
"RTN","ECUERPC1",223,0)
 S RESULTS=$NA(^TMP($J))
"RTN","ECUERPC1",224,0)
 Q
"RTN","ECUERPC1",225,0)
ECDEF(RESULTS,ECARY) ;RPC Broker entry point to get a default for space bar
"RTN","ECUERPC1",226,0)
 ;        RPC: EC SPACEBAR
"RTN","ECUERPC1",227,0)
 ;INPUTS   ECARY - Contains the following elements for report printing
"RTN","ECUERPC1",228,0)
 ;          ECFILE - File to obtain value from
"RTN","ECUERPC1",229,0)
 ;
"RTN","ECUERPC1",230,0)
 ;OUTPUTS  RESULTS - IEN^Description of Text
"RTN","ECUERPC1",231,0)
 ;
"RTN","ECUERPC1",232,0)
 N DIC,ECFILE,X,Y
"RTN","ECUERPC1",233,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",234,0)
 S ECFILE=$P(ECARY,U)
"RTN","ECUERPC1",235,0)
 I ECFILE="" S ECERR=1,RESULTS="0^File not defined" Q
"RTN","ECUERPC1",236,0)
 S X=" ",DIC(0)="MZX",DIC=ECFILE D ^DIC I Y<0 D  I ECERR Q
"RTN","ECUERPC1",237,0)
 . S ECERR=1,RESULTS="0^Nothing found"
"RTN","ECUERPC1",238,0)
 S RESULTS=Y
"RTN","ECUERPC1",239,0)
 Q
"RTN","ECUMRPC1")
0^2^B78953323^B78546073
"RTN","ECUMRPC1",1,0)
ECUMRPC1 ;ALB/JAM-Event Capture Management Broker Utilities ; 7/21/09 2:05pm
"RTN","ECUMRPC1",2,0)
 ;;2.0; EVENT CAPTURE ;**25,30,33,72,94,95,105,100,107,110**;8 May 96;Build 4
"RTN","ECUMRPC1",3,0)
 ;
"RTN","ECUMRPC1",4,0)
DSSUNT(RESULTS,ECARY) ;
"RTN","ECUMRPC1",5,0)
 ;
"RTN","ECUMRPC1",6,0)
 ;This broker entry point returns DSS units from file 724
"RTN","ECUMRPC1",7,0)
 ;        RPC: EC GETDSSUNIT
"RTN","ECUMRPC1",8,0)
 ;INPUTS         ECARY -Contains the following subscripted elements
"RTN","ECUMRPC1",9,0)
 ;               P1 =   optional field to return DSS Units
"RTN","ECUMRPC1",10,0)
 ;                      STAT; 'A'ctive (default), 'I'nactive, 'B'oth
"RTN","ECUMRPC1",11,0)
 ;               P2 =   optional field to filter based on the DSS Name
"RTN","ECUMRPC1",12,0)
 ;               P3 =   optional field to return 1 DSS unit by IEN, if used
"RTN","ECUMRPC1",13,0)
 ;                      no other filters evaluated
"RTN","ECUMRPC1",14,0)
 ;               P4 =   optional field to filter based on the DSS Unit Number
"RTN","ECUMRPC1",15,0)
 ;               
"RTN","ECUMRPC1",16,0)
 ;               if data is passed into the other fields then all criteria
"RTN","ECUMRPC1",17,0)
 ;               must be met for data on a unit to be returned
"RTN","ECUMRPC1",18,0)
 ;
"RTN","ECUMRPC1",19,0)
 ;OUTPUTS        RESULTS - Array of DSS units. Data pieces as follows:-
"RTN","ECUMRPC1",20,0)
 ;               PIECE - Description
"RTN","ECUMRPC1",21,0)
 ;                 1     IEN of DSS Unit 
"RTN","ECUMRPC1",22,0)
 ;                 2     Name of DSS Unit
"RTN","ECUMRPC1",23,0)
 ;                 3     IEN of DSS Unit
"RTN","ECUMRPC1",24,0)
 ;                 4     Inactive flag
"RTN","ECUMRPC1",25,0)
 ;                 5     Send to PCE   
"RTN","ECUMRPC1",26,0)
 ;                 6     Unit Number
"RTN","ECUMRPC1",27,0)
 ;                 7     Service
"RTN","ECUMRPC1",28,0)
 ;                 8     Medical Specialty
"RTN","ECUMRPC1",29,0)
 ;                 9     Cost Center
"RTN","ECUMRPC1",30,0)
 ;                 10    Associated Stop code (if not sending to PCE)
"RTN","ECUMRPC1",31,0)
 ;                 11    Category flag
"RTN","ECUMRPC1",32,0)
 ;                 12    Default date entry
"RTN","ECUMRPC1",33,0)
 ;
"RTN","ECUMRPC1",34,0)
 N UNT,STAT,CNT,CAT,NODE,ECS,STR,SRV,MED,CST,UNO,INACT,ASC,PCE,ACT,NODE
"RTN","ECUMRPC1",35,0)
 N DFD,DIEN,DNM,DUNIT,GET1
"RTN","ECUMRPC1",36,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC1",37,0)
 K ^TMP($J,"ECDSSUNT")
"RTN","ECUMRPC1",38,0)
 S DNM=$P($G(ECARY),U,2),DIEN=$P($G(ECARY),U,3),DUNIT=$P($G(ECARY),U,4)
"RTN","ECUMRPC1",39,0)
 S:DNM'="" DNM=$$UP^XLFSTR(DNM)
"RTN","ECUMRPC1",40,0)
 S:DUNIT'="" DUNIT=$$UP^XLFSTR(DUNIT)
"RTN","ECUMRPC1",41,0)
 S STAT=$P($G(ECARY),U),(CNT,UNT,GET1)=0 S:STAT="" STAT="A"
"RTN","ECUMRPC1",42,0)
 ; if IEN passed in - use that, then quit, GET1 used as control to stop
"RTN","ECUMRPC1",43,0)
 I $G(DIEN) S UNT=DIEN-.001,GET1=1
"RTN","ECUMRPC1",44,0)
 F  S UNT=$O(^ECD(UNT)) Q:'UNT!((UNT>DIEN&(GET1)))  S NODE=$G(^ECD(UNT,0)) I NODE'="" D
"RTN","ECUMRPC1",45,0)
 . S ECS=$P(NODE,U,8),ACT=$P(NODE,U,6),ACT=$S(ACT:1,1:0)
"RTN","ECUMRPC1",46,0)
 . Q:('ECS)
"RTN","ECUMRPC1",47,0)
 . I '$G(DIEN),$S(STAT="A"&(ACT):1,STAT="I"&('ACT):1,1:0) Q
"RTN","ECUMRPC1",48,0)
 . ; execute new filters
"RTN","ECUMRPC1",49,0)
 . I DNM'="",$$UP^XLFSTR($P(NODE,U))'[DNM Q
"RTN","ECUMRPC1",50,0)
 . I DUNIT'="",$$UP^XLFSTR($P(NODE,U,5))'[DUNIT Q
"RTN","ECUMRPC1",51,0)
 . I DIEN'="",$$UP^XLFSTR(UNT)'[DIEN Q
"RTN","ECUMRPC1",52,0)
 . S CNT=CNT+1,CAT=$P(NODE,U,11),CAT=$S(CAT:"Y",1:"N"),UNO=$P(NODE,U,5)
"RTN","ECUMRPC1",53,0)
 . S SRV=$$GET1^DIQ(49,$P(NODE,U,2),.01,"I")
"RTN","ECUMRPC1",54,0)
 . S MED=$$GET1^DIQ(723,$P(NODE,U,3),.01,"I")
"RTN","ECUMRPC1",55,0)
 . S CST=$$GET1^DIQ(420.1,$P(NODE,U,4),.01,"I")
"RTN","ECUMRPC1",56,0)
 . S INACT=$P(NODE,U,6),INACT=$S(INACT:"I",1:"A"),ASC=$P(NODE,U,10)
"RTN","ECUMRPC1",57,0)
 . S:ASC ASC=$$GET1^DIQ(40.7,ASC,.01,"I")
"RTN","ECUMRPC1",58,0)
 . S DFD=$S($P(NODE,U,12)="N":"N",1:"X"),PCE=$P(NODE,U,14)
"RTN","ECUMRPC1",59,0)
 . S PCE=$S(PCE="A":PCE,PCE="O":PCE,1:"N")
"RTN","ECUMRPC1",60,0)
 . S STR=UNT_U_$P(NODE,U)_U_UNT_U_INACT_U_PCE_U_UNO_U_SRV_U_MED_U_CST
"RTN","ECUMRPC1",61,0)
 . S STR=STR_U_ASC_U_CAT_U_DFD,^TMP($J,"ECDSSUNT",CNT)=STR
"RTN","ECUMRPC1",62,0)
 S RESULTS=$NA(^TMP($J,"ECDSSUNT"))
"RTN","ECUMRPC1",63,0)
 Q
"RTN","ECUMRPC1",64,0)
CAT(RESULTS,ECARY) ;
"RTN","ECUMRPC1",65,0)
 ;
"RTN","ECUMRPC1",66,0)
 ;This broker entry point returns a list of categories from file 726
"RTN","ECUMRPC1",67,0)
 ;        RPC: EC GETCAT
"RTN","ECUMRPC1",68,0)
 ;INPUTS         ECARY - Contains the following subscripted elements
"RTN","ECUMRPC1",69,0)
 ;                STAT - Active or inactive category (optional)
"RTN","ECUMRPC1",70,0)
 ;                A-ctive (default), I-nactive, B-oth
"RTN","ECUMRPC1",71,0)
 ;
"RTN","ECUMRPC1",72,0)
 ;OUTPUTS        RESULTS - Array of category. Data pieces as follows:-
"RTN","ECUMRPC1",73,0)
 ;               PIECE - Description
"RTN","ECUMRPC1",74,0)
 ;                 1     IEN of Category
"RTN","ECUMRPC1",75,0)
 ;                 2     Name of Category
"RTN","ECUMRPC1",76,0)
 ;                 3     Creation Date
"RTN","ECUMRPC1",77,0)
 ;                 4     Inactive Date
"RTN","ECUMRPC1",78,0)
 ;
"RTN","ECUMRPC1",79,0)
 N STAT,CNT,CAT,NODE,ECDT,INDT,CRDT
"RTN","ECUMRPC1",80,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC1",81,0)
 K ^TMP($J,"ECCAT")
"RTN","ECUMRPC1",82,0)
 S STAT=$P($G(ECARY),U),(CNT,CAT)=0 S:STAT="" STAT="A"
"RTN","ECUMRPC1",83,0)
 F  S CAT=$O(^EC(726,CAT)) Q:'CAT  S NODE=$G(^EC(726,CAT,0)) I NODE'="" D
"RTN","ECUMRPC1",84,0)
 . S ECDT=$P(NODE,U,3)
"RTN","ECUMRPC1",85,0)
 . I STAT="A",ECDT'="",ECDT'>DT Q
"RTN","ECUMRPC1",86,0)
 . I STAT="I",ECDT="" Q
"RTN","ECUMRPC1",87,0)
 . S CRDT=$$FMTE^XLFDT($P(NODE,U,2),"2F")
"RTN","ECUMRPC1",88,0)
 . S INDT=$$FMTE^XLFDT($P(NODE,U,3),"2F")
"RTN","ECUMRPC1",89,0)
 . ;S CNT=CNT+1,^TMP($J,"ECCAT",CNT)=CAT_U_$P(NODE,U)_U_CRDT_U_INDT
"RTN","ECUMRPC1",90,0)
 . S CNT=CNT+1,^TMP($J,"ECCAT",CNT)=CAT_U_$P(NODE,U)_U_$P(CRDT,"@",1)_U_$P(INDT,"@",1)
"RTN","ECUMRPC1",91,0)
 S RESULTS=$NA(^TMP($J,"ECCAT"))
"RTN","ECUMRPC1",92,0)
 Q
"RTN","ECUMRPC1",93,0)
 ;
"RTN","ECUMRPC1",94,0)
CATCHK(RESULTS,ECARY) ;
"RTN","ECUMRPC1",95,0)
 ;
"RTN","ECUMRPC1",96,0)
 ;Broker call checks whether category is used in an Event Code Screen.
"RTN","ECUMRPC1",97,0)
 ;        RPC: EC DSSCATCHECK
"RTN","ECUMRPC1",98,0)
 ;INPUTS   ECARY  - Contains the following subscripted elements
"RTN","ECUMRPC1",99,0)
 ;          ECDA  - DSS Unit ien (file #724)
"RTN","ECUMRPC1",100,0)
 ;
"RTN","ECUMRPC1",101,0)
 ;OUTPUTS  RESULTS - Category used in Event Code Screen, 1-Yes or 0-No
"RTN","ECUMRPC1",102,0)
 ;
"RTN","ECUMRPC1",103,0)
 N ECDA,ECFLG,ECX
"RTN","ECUMRPC1",104,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC1",105,0)
 S ECDA=$P(ECARY,U) I ECDA="" Q
"RTN","ECUMRPC1",106,0)
 S (ECFLG,ECX)=0
"RTN","ECUMRPC1",107,0)
 F  S ECX=$O(^ECJ("AP",ECX)) Q:'ECX!(ECFLG)  D
"RTN","ECUMRPC1",108,0)
 . I $D(^ECJ("AP",ECX,ECDA)) S ECFLG=1
"RTN","ECUMRPC1",109,0)
 S RESULTS=ECFLG
"RTN","ECUMRPC1",110,0)
 Q
"RTN","ECUMRPC1",111,0)
PXCHK(RESULTS,ECARY) ;
"RTN","ECUMRPC1",112,0)
 ;
"RTN","ECUMRPC1",113,0)
 ;Checks whether procedure description or national number exist
"RTN","ECUMRPC1",114,0)
 ;INPUTS   ECARY  - Contains the following subscripted elements
"RTN","ECUMRPC1",115,0)
 ;          ECP - Procedure description
"RTN","ECUMRPC1",116,0)
 ;          ECN - EC National Number
"RTN","ECUMRPC1",117,0)
 ;
"RTN","ECUMRPC1",118,0)
 ;OUTPUTS  RESULTS - Px used^National # used, 1-Yes or 0-No ex. 1^0
"RTN","ECUMRPC1",119,0)
 ;
"RTN","ECUMRPC1",120,0)
 N ECX,ECP,ECN
"RTN","ECUMRPC1",121,0)
 Q:$G(ECARY)
"RTN","ECUMRPC1",122,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC1",123,0)
 S ECP=$P(ECARY,U),ECN=$P(ECARY,U,2),RESULTS="0^0"
"RTN","ECUMRPC1",124,0)
 I ECP'="",$D(^EC(725,"B",ECP)) S $P(RESULTS,U)=1
"RTN","ECUMRPC1",125,0)
 I ECN'="" F ECX="E","D","DL" D  I $P(RESULTS,U,2) Q
"RTN","ECUMRPC1",126,0)
 . I $D(^EC(725,ECX,ECN)) S $P(RESULTS,U,2)=1
"RTN","ECUMRPC1",127,0)
 Q
"RTN","ECUMRPC1",128,0)
SRCLST(RESULTS,ECARY) ;
"RTN","ECUMRPC1",129,0)
 ;
"RTN","ECUMRPC1",130,0)
 ;This broker entry returns an array of codes from a file based on a 
"RTN","ECUMRPC1",131,0)
 ;search string.
"RTN","ECUMRPC1",132,0)
 ;        RPC: EC GETLIST
"RTN","ECUMRPC1",133,0)
 ;
"RTN","ECUMRPC1",134,0)
 ;INPUTS   ECARY   - Contains the following subscripted elements
"RTN","ECUMRPC1",135,0)
 ;           ECSTR  - Search string
"RTN","ECUMRPC1",136,0)
 ;           ECFIL  - File to search
"RTN","ECUMRPC1",137,0)
 ;           ECDIR  - Search order
"RTN","ECUMRPC1",138,0)
 ;           ECNUM  - (Optional) # records to return [default=44]
"RTN","ECUMRPC1",139,0)
 ;OUTPUTS     RESULTS - Array of values based on the search criteria.
"RTN","ECUMRPC1",140,0)
 ;
"RTN","ECUMRPC1",141,0)
 N ECNT,DIC,ECSTR,ECFIL,ECORD,ECER,ECDI,ECNUM,ECDIR
"RTN","ECUMRPC1",142,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC1",143,0)
 S ECNT=0,ECFIL=$P(ECARY,U),ECSTR=$P(ECARY,U,2),ECDIR=$P(ECARY,U,3)
"RTN","ECUMRPC1",144,0)
 S ECORD=$S(ECDIR=-1:"B",1:"I")
"RTN","ECUMRPC1",145,0)
 K ^TMP($J,"ECFIND"),^TMP("ECSRCH",$J)
"RTN","ECUMRPC1",146,0)
 I ECFIL="" Q
"RTN","ECUMRPC1",147,0)
 S ECNUM=$S(+$P(ECARY,U,4)>0:$P(ECARY,U,4),1:44)
"RTN","ECUMRPC1",148,0)
 I ECFIL=420.1 D CSTCTR            ;Cost Center search
"RTN","ECUMRPC1",149,0)
 I ECFIL=49 D SERVC                ;Service search
"RTN","ECUMRPC1",150,0)
 I ECFIL=723 D MEDSPC              ;Medical specialty
"RTN","ECUMRPC1",151,0)
 I ECFIL=40.7 D STPCDE G EXIT      ;Associated stop code
"RTN","ECUMRPC1",152,0)
 I ECFIL=724 D DUNT G EXIT         ;DSS Unit
"RTN","ECUMRPC1",153,0)
 I ECFIL=726 D ECAT                ;Category
"RTN","ECUMRPC1",154,0)
 I ECFIL=4 D LOC                   ;Location
"RTN","ECUMRPC1",155,0)
 I ECFIL=44 D ASCLN G EXIT         ;Associated clinic
"RTN","ECUMRPC1",156,0)
 I ECFIL=757.01 D LEX^ECUMRPC2 G EXIT  ;Lex ICD code
"RTN","ECUMRPC1",157,0)
 I ECFIL=200 D PROV^ECUMRPC2(ECNUM)      ;Providers
"RTN","ECUMRPC1",158,0)
 I $D(ECER) S ^TMP($J,"ECFIND",1)="0^Error occurred during search" G EXIT
"RTN","ECUMRPC1",159,0)
 D SORT
"RTN","ECUMRPC1",160,0)
EXIT K ^TMP("ECSRCH",$J)
"RTN","ECUMRPC1",161,0)
 S RESULTS=$NA(^TMP($J,"ECFIND"))
"RTN","ECUMRPC1",162,0)
 Q
"RTN","ECUMRPC1",163,0)
ASCLN ;Search for active associated clinics (file #44)
"RTN","ECUMRPC1",164,0)
 N CLN,CNT,NOD,ECDT,INACT,REACT,ERR
"RTN","ECUMRPC1",165,0)
 S CNT=0,ECDT=DT
"RTN","ECUMRPC1",166,0)
 I (ECDIR'=1)&(ECDIR'=-1) S ECDIR=1
"RTN","ECUMRPC1",167,0)
 ;the next 2 lines of code compensate for the M collating sequence & how the
"RTN","ECUMRPC1",168,0)
 ;clinic code is passed in from a CPRS RPC, in a unique situation. If the
"RTN","ECUMRPC1",169,0)
 ;code is numeric, ending in 0 and there is a similar code ending with a
"RTN","ECUMRPC1",170,0)
 ;letter, the correct clinic is not returned. EX: 2 clinics, 3010 and "3010A"
"RTN","ECUMRPC1",171,0)
 ;exist, the code is written to return 3010, yet 3010A is incorrectly returned. 
"RTN","ECUMRPC1",172,0)
 ;This code puts the 0 back on and subtracts 1 to the clinic code
"RTN","ECUMRPC1",173,0)
 I $E(ECSTR,$L(ECSTR)-1)="/",$E(ECSTR,1,($L(ECSTR)-2))?.N D
"RTN","ECUMRPC1",174,0)
 .S ECSTR=$E(ECSTR,1,($L(ECSTR)-2))_0,ECSTR=ECSTR-1
"RTN","ECUMRPC1",175,0)
 F  Q:CNT=ECNUM  S ECSTR=$O(^SC("B",ECSTR),ECDIR) Q:ECSTR=""  S CLN="" D
"RTN","ECUMRPC1",176,0)
 .F  S CLN=$O(^SC("B",ECSTR,CLN),ECDIR) Q:CLN=""  S NOD=$G(^SC(CLN,0)) D
"RTN","ECUMRPC1",177,0)
 ..Q:NOD=""  Q:$P(NOD,U,3)'="C"  ;Q:+$G(^SC(CLN,"OOS"))
"RTN","ECUMRPC1",178,0)
 ..S ERR=0 I $D(^SC(CLN,"I")) D  I ERR Q
"RTN","ECUMRPC1",179,0)
 ...S INACT=$P(^SC(CLN,"I"),U),REACT=$P(^SC(CLN,"I"),U,2)
"RTN","ECUMRPC1",180,0)
 ...I INACT D  I ERR Q
"RTN","ECUMRPC1",181,0)
 ....I REACT="" S:ECDT'<INACT ERR=1 Q
"RTN","ECUMRPC1",182,0)
 ....I ECDT'<INACT,ECDT<REACT S ERR=1 Q
"RTN","ECUMRPC1",183,0)
 ...;I REACT,ECDT<REACT S ERR=1  removed in EC*110 - BGP
"RTN","ECUMRPC1",184,0)
 ..S CNT=CNT+1,^TMP($J,"ECFIND",CNT)=CLN_U_$P(NOD,U)
"RTN","ECUMRPC1",185,0)
 Q
"RTN","ECUMRPC1",186,0)
CSTCTR ;Search for cost centers (File #420.1)
"RTN","ECUMRPC1",187,0)
 N ECNULL,INDX,STR,NSTR,I
"RTN","ECUMRPC1",188,0)
 S $P(ECNULL," ",7)=" ",INDX="B"
"RTN","ECUMRPC1",189,0)
 I $E(ECSTR)?.N,$L(ECSTR)<7 S ECSTR=ECSTR_$E(ECNULL,1,7-$L(ECSTR))
"RTN","ECUMRPC1",190,0)
 I $L($P(ECSTR," "))=6,$P(ECSTR," ",2)?.A D   ;truncate for x-ref
"RTN","ECUMRPC1",191,0)
 . S ECSTR=$P(ECSTR," ")_" "_$E($P(ECSTR," ",2,999),1,22)
"RTN","ECUMRPC1",192,0)
 I $E(ECSTR)?.A S INDX="C",(STR,NSTR)="" D  S ECSTR=NSTR
"RTN","ECUMRPC1",193,0)
 .F I=1:1 S STR=$P(ECSTR," ",I) Q:STR=""  D
"RTN","ECUMRPC1",194,0)
 ..S STR=$E(STR)_$TR($E(STR,2,9999),"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","ECUMRPC1",195,0)
 ..S NSTR=NSTR_STR
"RTN","ECUMRPC1",196,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"",INDX,"I '$P(^(0),U,2)","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",197,0)
 Q
"RTN","ECUMRPC1",198,0)
SERVC ;Search for services (File #49)
"RTN","ECUMRPC1",199,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"","","","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",200,0)
 Q
"RTN","ECUMRPC1",201,0)
MEDSPC ;Search for medical specialty (File #723)
"RTN","ECUMRPC1",202,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"","","","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",203,0)
 Q
"RTN","ECUMRPC1",204,0)
STPCDE ;Search for associated stop code (File #40.7)
"RTN","ECUMRPC1",205,0)
 N ECNT,INDX,ECNUL,STR,IEN
"RTN","ECUMRPC1",206,0)
 S $P(ECNUL,"  ",30)=" ",INDX="B",ECNT=0,ECSTR=$P(ECSTR,"~")
"RTN","ECUMRPC1",207,0)
 I +ECSTR,+ECSTR?.N S INDX="C",IEN=0 D  Q
"RTN","ECUMRPC1",208,0)
 .S ECSTR=$O(^DIC(40.7,INDX,+ECSTR)) I ECSTR="" Q
"RTN","ECUMRPC1",209,0)
 .F  S IEN=$O(^DIC(40.7,INDX,ECSTR,IEN)) Q:'IEN  D  I ECNT>(ECNUM-1) Q
"RTN","ECUMRPC1",210,0)
 ..;07/27/09 llh added checks on piece 2 and 6
"RTN","ECUMRPC1",211,0)
 ..S STR=$G(^DIC(40.7,IEN,0)) I ($P(STR,U,3)'=""&($P(STR,U,3)'>DT))!($P(STR,U,6)="S")!($P(STR,U,6)="")!($L($P(STR,U,2))'=3) Q
"RTN","ECUMRPC1",212,0)
 ..S STR=$E($P(STR,U),1,30)_"  ["_$J($P(STR,U,2),3,0)_"]"_U_$P(STR,U,2)_U_IEN
"RTN","ECUMRPC1",213,0)
 ..S ECNT=ECNT+1,^TMP($J,"ECFIND",ECNT)=STR
"RTN","ECUMRPC1",214,0)
 ;added validation checks here as well
"RTN","ECUMRPC1",215,0)
 ;D LISTDIC(ECFIL,"",".01;1",ECORD,ECNUM,ECSTR,"",INDX,"I $P(^(0),U,3)=""""!($P(^(0),U,3)'<DT)&($P(^(0),U,6)'=""S"")","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",216,0)
 D LISTDIC(ECFIL,"",".01;1",ECORD,ECNUM,ECSTR,"",INDX,"I $P(^(0),U,3)=""""!($P(^(0),U,3)'<DT)&($L($P(^(0),U,2))=3)&(($P(^(0),U,6)=""P"")!($P(^(0),U,6)=""E""))","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",217,0)
 S ECNT=0
"RTN","ECUMRPC1",218,0)
 F  S ECNT=$O(^TMP("ECSRCH",$J,"DILIST","ID",ECNT)) Q:'ECNT  D
"RTN","ECUMRPC1",219,0)
 .S STR=$G(^TMP("ECSRCH",$J,"DILIST","ID",ECNT,.01))_U_$G(^(1))
"RTN","ECUMRPC1",220,0)
 .S STR=$E($P(STR,U),1,30)_"  ["_$J($P(STR,U,2),3,0)_"]"_U_$P(STR,U,2)
"RTN","ECUMRPC1",221,0)
 .S ^TMP($J,"ECFIND",ECNT)=STR_U_^TMP("ECSRCH",$J,"DILIST",2,ECNT)
"RTN","ECUMRPC1",222,0)
 Q
"RTN","ECUMRPC1",223,0)
DUNT ;Search for DSS unit (File #724)
"RTN","ECUMRPC1",224,0)
 N ECNT,SNDPCE
"RTN","ECUMRPC1",225,0)
 D LISTDIC(ECFIL,"",".01;10;13",ECORD,ECNUM,ECSTR,"","","I '$P(^(0),""^"",6),$P(^(0),U,8)","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",226,0)
 S ECNT=0
"RTN","ECUMRPC1",227,0)
 F  S ECNT=$O(^TMP("ECSRCH",$J,"DILIST","ID",ECNT)) Q:'ECNT  D
"RTN","ECUMRPC1",228,0)
 .S SNDPCE=$G(^TMP("ECSRCH",$J,"DILIST","ID",ECNT,13))
"RTN","ECUMRPC1",229,0)
 .S SNDPCE=$S(SNDPCE="O":1,SNDPCE="A":1,1:0)
"RTN","ECUMRPC1",230,0)
 .S ^TMP($J,"ECFIND",ECNT)=$G(^TMP("ECSRCH",$J,"DILIST","ID",ECNT,.01))_U_^TMP("ECSRCH",$J,"DILIST",2,ECNT)_U_$G(^TMP("ECSRCH",$J,"DILIST","ID",ECNT,10))_U_SNDPCE
"RTN","ECUMRPC1",231,0)
 Q
"RTN","ECUMRPC1",232,0)
ECAT ;Search for Category (File #726)
"RTN","ECUMRPC1",233,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"","","I $P(^(0),""^"",3)=""""!($P(^(0),U,3)>DT)","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",234,0)
 Q
"RTN","ECUMRPC1",235,0)
LOC ;Search for Location (File #4)
"RTN","ECUMRPC1",236,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"","","I $G(^(""EC""))","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",237,0)
 Q
"RTN","ECUMRPC1",238,0)
LISTDIC(ECFL,ECIEN,ECFLD,ECFLG,ECNUM,ECFRM,ECPRT,ECINDX,ECSCN,ECIND,ECTG,ECER) ;
"RTN","ECUMRPC1",239,0)
 ;Produces a list of records in a file base on search string
"RTN","ECUMRPC1",240,0)
 N DIC
"RTN","ECUMRPC1",241,0)
 D LIST^DIC(ECFL,ECIEN,ECFLD,ECFLG,ECNUM,ECFRM,ECPRT,ECINDX,ECSCN,ECIND,ECTG,ECER)
"RTN","ECUMRPC1",242,0)
 K ECFL,ECIEN,ECFLD,ECFLG,ECNUM,ECFRM,ECPRT,ECINDX,ECSCN,ECID
"RTN","ECUMRPC1",243,0)
 Q
"RTN","ECUMRPC1",244,0)
SORT ;Extracts data to be returned to broker
"RTN","ECUMRPC1",245,0)
 N ECNT,STR
"RTN","ECUMRPC1",246,0)
 S ECNT=0
"RTN","ECUMRPC1",247,0)
 F  S ECNT=$O(^TMP("ECSRCH",$J,"DILIST","ID",ECNT)) Q:'ECNT  D
"RTN","ECUMRPC1",248,0)
 .S ^TMP($J,"ECFIND",ECNT)=$G(^TMP("ECSRCH",$J,"DILIST","ID",ECNT,.01))_U_^TMP("ECSRCH",$J,"DILIST",2,ECNT)
"RTN","ECUMRPC1",249,0)
 Q
"VER")
8.0^22.0
"BLD",8611,6)
^105
**END**
**END**
