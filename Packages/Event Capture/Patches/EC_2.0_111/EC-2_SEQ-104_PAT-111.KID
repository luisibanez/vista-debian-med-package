Released EC*2*111 SEQ #104
Extracted from mail message
**KIDS**:EC*2.0*111^

**INSTALL NAME**
EC*2.0*111
"BLD",8619,0)
EC*2.0*111^EVENT CAPTURE^0^3110518^y
"BLD",8619,1,0)
^^1^1^3110318^
"BLD",8619,1,1,0)
This patch will update the EC NATIONAL PROCEDURE (#725) file.
"BLD",8619,4,0)
^9.64PA^^
"BLD",8619,6.3)
12
"BLD",8619,"ABPKG")
n
"BLD",8619,"INID")
^n
"BLD",8619,"INIT")
POST^ECP111PT
"BLD",8619,"KRN",0)
^9.67PA^779.2^20
"BLD",8619,"KRN",.4,0)
.4
"BLD",8619,"KRN",.401,0)
.401
"BLD",8619,"KRN",.402,0)
.402
"BLD",8619,"KRN",.403,0)
.403
"BLD",8619,"KRN",.5,0)
.5
"BLD",8619,"KRN",.84,0)
.84
"BLD",8619,"KRN",3.6,0)
3.6
"BLD",8619,"KRN",3.8,0)
3.8
"BLD",8619,"KRN",9.2,0)
9.2
"BLD",8619,"KRN",9.8,0)
9.8
"BLD",8619,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",8619,"KRN",9.8,"NM",1,0)
EC725U60^^0^B30485790
"BLD",8619,"KRN",9.8,"NM",2,0)
EC725U61^^0^B18370155
"BLD",8619,"KRN",9.8,"NM","B","EC725U60",1)

"BLD",8619,"KRN",9.8,"NM","B","EC725U61",2)

"BLD",8619,"KRN",19,0)
19
"BLD",8619,"KRN",19.1,0)
19.1
"BLD",8619,"KRN",101,0)
101
"BLD",8619,"KRN",409.61,0)
409.61
"BLD",8619,"KRN",771,0)
771
"BLD",8619,"KRN",779.2,0)
779.2
"BLD",8619,"KRN",870,0)
870
"BLD",8619,"KRN",8989.51,0)
8989.51
"BLD",8619,"KRN",8989.52,0)
8989.52
"BLD",8619,"KRN",8994,0)
8994
"BLD",8619,"KRN","B",.4,.4)

"BLD",8619,"KRN","B",.401,.401)

"BLD",8619,"KRN","B",.402,.402)

"BLD",8619,"KRN","B",.403,.403)

"BLD",8619,"KRN","B",.5,.5)

"BLD",8619,"KRN","B",.84,.84)

"BLD",8619,"KRN","B",3.6,3.6)

"BLD",8619,"KRN","B",3.8,3.8)

"BLD",8619,"KRN","B",9.2,9.2)

"BLD",8619,"KRN","B",9.8,9.8)

"BLD",8619,"KRN","B",19,19)

"BLD",8619,"KRN","B",19.1,19.1)

"BLD",8619,"KRN","B",101,101)

"BLD",8619,"KRN","B",409.61,409.61)

"BLD",8619,"KRN","B",771,771)

"BLD",8619,"KRN","B",779.2,779.2)

"BLD",8619,"KRN","B",870,870)

"BLD",8619,"KRN","B",8989.51,8989.51)

"BLD",8619,"KRN","B",8989.52,8989.52)

"BLD",8619,"KRN","B",8994,8994)

"BLD",8619,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",8619,"QUES",0)
^9.62^^
"BLD",8619,"REQB",0)
^9.611^1^1
"BLD",8619,"REQB",1,0)
EC*2.0*106^1
"BLD",8619,"REQB","B","EC*2.0*106",1)

"INIT")
POST^ECP111PT
"MBREQ")
0
"PKG",486,-1)
1^1
"PKG",486,0)
EVENT CAPTURE^EC^Event Capture Workload Capture System^
"PKG",486,20,0)
^9.402P^^
"PKG",486,22,0)
^9.49I^1^1
"PKG",486,22,1,0)
2.0^2960508^2981027^66481
"PKG",486,22,1,"PAH",1,0)
111^3110518
"PKG",486,22,1,"PAH",1,1,0)
^^1^1^3110518
"PKG",486,22,1,"PAH",1,1,1,0)
This patch will update the EC NATIONAL PROCEDURE (#725) file.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","EC725U60")
0^1^B30485790^n/a
"RTN","EC725U60",1,0)
EC725U60 ;ALB/BP - EC National Procedure Update ; 1/19/10 2:49pm
"RTN","EC725U60",2,0)
 ;;2.0; EVENT CAPTURE ;**111**;8 May 96;Build 12
"RTN","EC725U60",3,0)
 ;
"RTN","EC725U60",4,0)
 ;this routine is used as a post-init in a KIDS build 
"RTN","EC725U60",5,0)
 ;to modify the EC National Procedure file #725
"RTN","EC725U60",6,0)
 ;
"RTN","EC725U60",7,0)
 Q
"RTN","EC725U60",8,0)
ADDPROC ;* add national procedures
"RTN","EC725U60",9,0)
 ;
"RTN","EC725U60",10,0)
 ;  ECXX is in format:
"RTN","EC725U60",11,0)
 ;   NAME^NATIONAL NUMBER^CPT CODE^FIRST NATIONAL NUMBER SEQUENCE
"RTN","EC725U60",12,0)
 ;   LAST NATIONAL NUMBER SEQUENCE
"RTN","EC725U60",13,0)
 ;
"RTN","EC725U60",14,0)
 N ECX,ECXX,ECDINUM,NAME,CODE,CPT,COUNT,X,Y,DIC,DIE,DA,DR,DLAYGO,DINUM
"RTN","EC725U60",15,0)
 N ECADD,ECBEG,ECEND,CODX,NAMX,ECSEQ,LIEN,STR,CPTN,STR
"RTN","EC725U60",16,0)
 D MES^XPDUTL(" ")
"RTN","EC725U60",17,0)
 D BMES^XPDUTL("Adding new procedures to EC NATIONAL PROCEDURE File (#725)...")
"RTN","EC725U60",18,0)
 D MES^XPDUTL(" ")
"RTN","EC725U60",19,0)
 S ECDINUM=$O(^EC(725,9999),-1),COUNT=$P(^EC(725,0),U,4)
"RTN","EC725U60",20,0)
 F ECX=1:1 S ECXX=$P($T(NEW+ECX),";;",2) Q:ECXX="QUIT"  D
"RTN","EC725U60",21,0)
 .S NAME=$P(ECXX,U,1),CODE=$P(ECXX,U,2),CPTN=$P(ECXX,U,3),CODX=CODE
"RTN","EC725U60",22,0)
 .S CPT=""
"RTN","EC725U60",23,0)
 .I CPTN'="" S CPT=$$FIND1^DIC(81,"","X",CPTN) I +CPT<1 D  Q
"RTN","EC725U60",24,0)
 ..S STR="   CPT code "_CPTN_" not a valid code in CPT File."
"RTN","EC725U60",25,0)
 ..D MES^XPDUTL(" ")
"RTN","EC725U60",26,0)
 ..D BMES^XPDUTL("   ["_CODE_"] "_STR)
"RTN","EC725U60",27,0)
 .S ECBEG=$P(ECXX,U,4),ECEND=$P(ECXX,U,5),NAMX=NAME
"RTN","EC725U60",28,0)
 .I ECBEG="" S X=NAME D FILPROC Q
"RTN","EC725U60",29,0)
 .F ECSEQ=ECBEG:1:ECEND D
"RTN","EC725U60",30,0)
 ..S ECADD="000"_ECSEQ,ECADD=$E(ECADD,$L(ECADD)-2,$L(ECADD))
"RTN","EC725U60",31,0)
 ..;S NAME=NAMX_ECADD,X=NAME,CODE=CODX_ECADD
"RTN","EC725U60",32,0)
 ..I $E(CODX,1,3)'="RCM" S NAME=NAMX_ECSEQ,X=NAME,CODE=CODX_ECADD
"RTN","EC725U60",33,0)
 ..E  S NAME=NAMX_$E(ECADD,2,99),X=NAME,CODE=CODX_$E(ECADD,2,99)
"RTN","EC725U60",34,0)
 ..D FILPROC
"RTN","EC725U60",35,0)
 S $P(^EC(725,0),U,4)=COUNT,X=$O(^EC(725,999999),-1),$P(^EC(725,0),U,3)=X
"RTN","EC725U60",36,0)
 Q
"RTN","EC725U60",37,0)
 ;
"RTN","EC725U60",38,0)
FILPROC ;File national procedures
"RTN","EC725U60",39,0)
 I '$D(^EC(725,"D",CODE)) D
"RTN","EC725U60",40,0)
 .S ECDINUM=ECDINUM+1,DINUM=ECDINUM,DIC(0)="L",DLAYGO=725,DIC="^EC(725,"
"RTN","EC725U60",41,0)
 .S DIC("DR")="1///^S X=CODE;4///^S X=CPT"
"RTN","EC725U60",42,0)
 .D FILE^DICN
"RTN","EC725U60",43,0)
 .I +Y>0 D
"RTN","EC725U60",44,0)
 ..S COUNT=COUNT+1
"RTN","EC725U60",45,0)
 ..D MES^XPDUTL(" ")
"RTN","EC725U60",46,0)
 ..S STR="   Entry #"_+Y_" for "_$P(Y,U,2)
"RTN","EC725U60",47,0)
 ..S STR=STR_$S(CPT'="":" [CPT: "_CPT_"]",1:"")_" ("_CODE_")"
"RTN","EC725U60",48,0)
 ..D BMES^XPDUTL(STR_"  ...successfully added.")
"RTN","EC725U60",49,0)
 .I Y=-1 D
"RTN","EC725U60",50,0)
 ..D MES^XPDUTL(" ")
"RTN","EC725U60",51,0)
 ..D BMES^XPDUTL("ERROR when attempting to add "_NAME_" ("_CODE_")")
"RTN","EC725U60",52,0)
 I $D(^EC(725,"DL",CODE)) D
"RTN","EC725U60",53,0)
 .S LIEN=$O(^EC(725,"DL",CODE,""))
"RTN","EC725U60",54,0)
 .D MES^XPDUTL(" ")
"RTN","EC725U60",55,0)
 .D BMES^XPDUTL("   Your site has a local procedure (entry #"_LIEN_") in File #725")
"RTN","EC725U60",56,0)
 .D BMES^XPDUTL("   which uses "_CODE_" as its National Number.")
"RTN","EC725U60",57,0)
 .D BMES^XPDUTL("   Please inactivate this local procedure.")
"RTN","EC725U60",58,0)
 .K Y
"RTN","EC725U60",59,0)
 Q
"RTN","EC725U60",60,0)
NEW ;national procedures to add;;descript^nation #^CPT code^beg seq^end seq
"RTN","EC725U60",61,0)
 ;;HH DRIVE TIME (15MIN) PSO^HH144
"RTN","EC725U60",62,0)
 ;;HH DRIVE TIME (15MIN) KT^HH145
"RTN","EC725U60",63,0)
 ;;HH DRIVE TIME (15MIN) SPCH PTH^HH146
"RTN","EC725U60",64,0)
 ;;INPT NUTR ED,IND,Q15M^NU187
"RTN","EC725U60",65,0)
 ;;STATUS - UNCLASSIFIED^NU188
"RTN","EC725U60",66,0)
 ;;DRIVE TIME-CBOC Q5M^NU189
"RTN","EC725U60",67,0)
 ;;CCHT INIT. SCREENING^NU190^99499
"RTN","EC725U60",68,0)
 ;;CCHT TECH ED/INSTALL^NU191^97762
"RTN","EC725U60",69,0)
 ;;CCHT ASSESS TX PLAN^NU192^99211
"RTN","EC725U60",70,0)
 ;;CCHT PHONE TX PLAN^NU193^98968
"RTN","EC725U60",71,0)
 ;;MOVE QUEST.W/PT1ST30^NU194^99499
"RTN","EC725U60",72,0)
 ;;MOV QUEST.W/PT QADL5^NU195
"RTN","EC725U60",73,0)
 ;;MV HOTLINE RVW&FU,Q5^NU196
"RTN","EC725U60",74,0)
 ;;MV QUEST.W/O PT Q10^NU197
"RTN","EC725U60",75,0)
 ;;MV QUEST.W/IP Q10M^NU198
"RTN","EC725U60",76,0)
 ;;COOK PREP/CLN2-5PT Q15^NU199
"RTN","EC725U60",77,0)
 ;;COOK PREP/CLN6-10PT Q15^NU200
"RTN","EC725U60",78,0)
 ;;COOK PREP/CLN11-20PT Q15^NU201
"RTN","EC725U60",79,0)
 ;;COOK PREP/CLN>20PT Q15^NU202
"RTN","EC725U60",80,0)
 ;;SECURE MSG CORRESPOND^NU203^98969
"RTN","EC725U60",81,0)
 ;;CCHT PHONE INIT SCREEN^NU204^98968
"RTN","EC725U60",82,0)
 ;;SENSORY INTEGRATION IND^RC099^97533
"RTN","EC725U60",83,0)
 ;;WHEELCHAIR ASSESSMENT^RC100^97542
"RTN","EC725U60",84,0)
 ;;QUIT
"RTN","EC725U60",85,0)
NAMECHG ;* change national procedure names
"RTN","EC725U60",86,0)
 ;
"RTN","EC725U60",87,0)
 ;  ECXX is in format:
"RTN","EC725U60",88,0)
 ;   NATIONAL NUMBER^NEW NAME
"RTN","EC725U60",89,0)
 ;
"RTN","EC725U60",90,0)
 N ECX,ECXX,ECDA,DA,DR,DIC,DIE,X,Y,STR
"RTN","EC725U60",91,0)
 D MES^XPDUTL(" ")
"RTN","EC725U60",92,0)
 D BMES^XPDUTL("Changing names in EC NATIONAL PROCEDURE File (#725)...")
"RTN","EC725U60",93,0)
 D MES^XPDUTL(" ")
"RTN","EC725U60",94,0)
 F ECX=1:1 S ECXX=$P($T(CHNG+ECX),";;",2) Q:ECXX="QUIT"  D
"RTN","EC725U60",95,0)
 .I $D(^EC(725,"D",$P(ECXX,U,1))) D
"RTN","EC725U60",96,0)
 ..S ECDA=+$O(^EC(725,"D",$P(ECXX,U,1),0))
"RTN","EC725U60",97,0)
 ..I $D(^EC(725,ECDA,0)) D
"RTN","EC725U60",98,0)
 ...S DA=ECDA,DR=".01////^S X=$P(ECXX,U,2)",DIE="^EC(725," D ^DIE
"RTN","EC725U60",99,0)
 ...D MES^XPDUTL(" ")
"RTN","EC725U60",100,0)
 ...D MES^XPDUTL("   Entry #"_ECDA_" for "_$P(ECXX,U,1))
"RTN","EC725U60",101,0)
 ...D BMES^XPDUTL("      ... field (#.01) updated to  "_$P(ECXX,U,2)_".")
"RTN","EC725U60",102,0)
 .I '$D(^EC(725,"D",$P(ECXX,U,1))) D
"RTN","EC725U60",103,0)
 ..D MES^XPDUTL(" ")
"RTN","EC725U60",104,0)
 ..S STR="Can't find entry for "_$P(ECXX,U,1)
"RTN","EC725U60",105,0)
 ..D BMES^XPDUTL(STR_" ...field (#.01) not updated.")
"RTN","EC725U60",106,0)
 Q
"RTN","EC725U60",107,0)
 ;
"RTN","EC725U60",108,0)
CHNG ;name changes -national code #^new procedure name
"RTN","EC725U60",109,0)
 ;;NU007^IN/CLC NUT CARE-BASIC,10M
"RTN","EC725U60",110,0)
 ;;NU008^IN/CLC NUT CARE-INTRM,10M
"RTN","EC725U60",111,0)
 ;;NU009^IN/CLC NUT CARE-CMPLX,10M
"RTN","EC725U60",112,0)
 ;;NU060^DSMT ACCR GP,2-5PT,30M
"RTN","EC725U60",113,0)
 ;;NU061^DSMT ACCR GP,6-10PT,30M
"RTN","EC725U60",114,0)
 ;;NU062^DSMT ACCR GP,11-20PT,30M
"RTN","EC725U60",115,0)
 ;;NU063^DSMT ACCR GP,>20PT,30M
"RTN","EC725U60",116,0)
 ;;NU077^NUTR GP, 2-5 PT 1ST 30M
"RTN","EC725U60",117,0)
 ;;NU078^NUTR GP, 6-10 PT 1ST 30M
"RTN","EC725U60",118,0)
 ;;NU079^NUTR GP, 11-20 PT 1ST 30M
"RTN","EC725U60",119,0)
 ;;NU080^NUTR GP, >20 PT 1ST 30M
"RTN","EC725U60",120,0)
 ;;NU156^HBPC NUTR DRIVE TIME,EA 15M
"RTN","EC725U60",121,0)
 ;;NU162^MNT F/U EA 15M
"RTN","EC725U60",122,0)
 ;;NU163^MNT SUBSEQ EA 15M
"RTN","EC725U60",123,0)
 ;;NU164^NUT CNSG IND,1ST15M
"RTN","EC725U60",124,0)
 ;;NU165^CASE MGT,W/PT EA15M
"RTN","EC725U60",125,0)
 ;;NU166^NUT SCREENING 10M
"RTN","EC725U60",126,0)
 ;;NU167^OTHER OPT VISIT
"RTN","EC725U60",127,0)
 ;;NU168^PT EDUC 1ST 15M
"RTN","EC725U60",128,0)
 ;;NU169^INSLN PMP ED 1ST15M
"RTN","EC725U60",129,0)
 ;;NU170^GLUC FINGER STICK
"RTN","EC725U60",130,0)
 ;;NU171^PHONE 5-10 MIN
"RTN","EC725U60",131,0)
 ;;NU172^PHONE 11-20 MIN
"RTN","EC725U60",132,0)
 ;;NU173^PHONE 21-30 MIN
"RTN","EC725U60",133,0)
 ;;NU174^DSMT ACCRED IND Q30M
"RTN","EC725U60",134,0)
 ;;NU175^DIABMGT NONACRD1ST15
"RTN","EC725U60",135,0)
 ;;NU176^DIAB MGT F/U 1ST15M
"RTN","EC725U60",136,0)
 ;;NU177^CGM-CONT.GLUC MNTR
"RTN","EC725U60",137,0)
 ;;NU178^SELF-MGT ED IND,EA 30M
"RTN","EC725U60",138,0)
 ;;NU179^SELF MGT GP2-4,EA 30M
"RTN","EC725U60",139,0)
 ;;NU180^SELF MGT GP5-8,EA 30M
"RTN","EC725U60",140,0)
 ;;NU181^CCHT MONTHLY MONITOR
"RTN","EC725U60",141,0)
 ;;NU182^MNT INIT EA 15M
"RTN","EC725U60",142,0)
 ;;NU185^HBPC-NUTR INPT 1ST 10M
"RTN","EC725U60",143,0)
 ;;NU186^HBPC-NUTR IP QADL10M
"RTN","EC725U60",144,0)
 ;;RC001^REFER/CONS/SCREEN
"RTN","EC725U60",145,0)
 ;;RC002^RECORD REVIEW
"RTN","EC725U60",146,0)
 ;;RC003^ASMNT INIT 30M
"RTN","EC725U60",147,0)
 ;;RC004^ASMNT UPREVDISC 30M
"RTN","EC725U60",148,0)
 ;;RC005^ASMNT PROG NOTE
"RTN","EC725U60",149,0)
 ;;RC006^ASMNT PROG NOTE 15M
"RTN","EC725U60",150,0)
 ;;RC007^DISCH/COMM REF 15M
"RTN","EC725U60",151,0)
 ;;RC008^DISCH/COMM REF 30M
"RTN","EC725U60",152,0)
 ;;RC010^TEAMEETCAREPLAN 30M
"RTN","EC725U60",153,0)
 ;;RC014^REC CREATARTGRP 2-4
"RTN","EC725U60",154,0)
 ;;RC015^REC CREATARTGRP 5-20
"RTN","EC725U60",155,0)
 ;;RC016^REC CREATARTGRP >20
"RTN","EC725U60",156,0)
 ;;RC053^MUSTHER SOC IND 15M
"RTN","EC725U60",157,0)
 ;;RC054^MUSTHER COG IND 15M
"RTN","EC725U60",158,0)
 ;;QUIT
"RTN","EC725U61")
0^2^B18370155^n/a
"RTN","EC725U61",1,0)
EC725U61 ;ALB/BP - EC National Procedure Update ; 1/19/10 2:49pm
"RTN","EC725U61",2,0)
 ;;2.0; EVENT CAPTURE ;**111**;8 May 96;Build 12
"RTN","EC725U61",3,0)
 ;
"RTN","EC725U61",4,0)
 ;this routine is used as a post-init in KIDS build 
"RTN","EC725U61",5,0)
 ;to modify the the EC National Procedure file #725
"RTN","EC725U61",6,0)
 ;
"RTN","EC725U61",7,0)
 Q
"RTN","EC725U61",8,0)
INACT ;* inactivate national procedures
"RTN","EC725U61",9,0)
 ;
"RTN","EC725U61",10,0)
 ;  ECXX is in format:
"RTN","EC725U61",11,0)
 ;   NATIONAL NUMBER^INACTIVATION DATE^FIRST NATIONAL NUMBER SEQUENCE^
"RTN","EC725U61",12,0)
 ;   LAST NATIONAL NUMBER SEQUENCE
"RTN","EC725U61",13,0)
 ;
"RTN","EC725U61",14,0)
 N ECX,ECXX,ECEXDT,ECINDT,ECDA,DIC,DIE,DA,DR,X,Y,%DT,ECBEG,ECEND,ECADD
"RTN","EC725U61",15,0)
 N ECSEQ,CODE,CODX
"RTN","EC725U61",16,0)
 D MES^XPDUTL(" ")
"RTN","EC725U61",17,0)
 D BMES^XPDUTL("Inactivating procedures EC NATIONAL PROCEDURE File (#725)...")
"RTN","EC725U61",18,0)
 D MES^XPDUTL(" ")
"RTN","EC725U61",19,0)
 F ECX=1:1 K DD,DO,DA S ECXX=$P($T(OLD+ECX),";;",2) Q:ECXX="QUIT"  D
"RTN","EC725U61",20,0)
 .S ECEXDT=$P(ECXX,U,2),X=ECEXDT,%DT="X" D ^%DT S ECINDT=$P(Y,".",1)
"RTN","EC725U61",21,0)
 .S CODE=$P(ECXX,U),ECBEG=$P(ECXX,U,3),ECEND=$P(ECXX,U,4),CODX=CODE
"RTN","EC725U61",22,0)
 .I ECBEG="" D UPINACT Q
"RTN","EC725U61",23,0)
 .F ECSEQ=ECBEG:1:ECEND D
"RTN","EC725U61",24,0)
 ..S ECADD="000"_ECSEQ,ECADD=$E(ECADD,$L(ECADD)-2,$L(ECADD))
"RTN","EC725U61",25,0)
 ..S CODE=CODX_ECADD
"RTN","EC725U61",26,0)
 ..D UPINACT
"RTN","EC725U61",27,0)
 Q
"RTN","EC725U61",28,0)
UPINACT ;Update codes as inactive
"RTN","EC725U61",29,0)
 ;
"RTN","EC725U61",30,0)
 S ECDA=+$O(^EC(725,"D",CODE,0))
"RTN","EC725U61",31,0)
 I $D(^EC(725,ECDA,0)) D
"RTN","EC725U61",32,0)
 .S DA=ECDA,DR="2///^S X=ECINDT",DIE="^EC(725," D ^DIE
"RTN","EC725U61",33,0)
 .D MES^XPDUTL(" ")
"RTN","EC725U61",34,0)
 .D BMES^XPDUTL("   "_CODE_" inactivated as of "_ECEXDT_".")
"RTN","EC725U61",35,0)
 Q
"RTN","EC725U61",36,0)
 ;
"RTN","EC725U61",37,0)
OLD ;national procedures to be inactivated - national code #^inact. date
"RTN","EC725U61",38,0)
 ;;RC023^9/1/2011
"RTN","EC725U61",39,0)
 ;;RC026^9/1/2011
"RTN","EC725U61",40,0)
 ;;RC032^9/1/2011
"RTN","EC725U61",41,0)
 ;;RC038^9/1/2011
"RTN","EC725U61",42,0)
 ;;RC041^9/1/2011
"RTN","EC725U61",43,0)
 ;;RC044^9/1/2011
"RTN","EC725U61",44,0)
 ;;RC048^9/1/2011
"RTN","EC725U61",45,0)
 ;;RC052^9/1/2011
"RTN","EC725U61",46,0)
 ;;RC059^9/1/2011
"RTN","EC725U61",47,0)
 ;;RC062^9/1/2011
"RTN","EC725U61",48,0)
 ;;RC068^9/1/2011
"RTN","EC725U61",49,0)
 ;;RC084^9/1/2011
"RTN","EC725U61",50,0)
 ;;RC095^9/1/2011
"RTN","EC725U61",51,0)
 ;;RC096^9/1/2011
"RTN","EC725U61",52,0)
 ;;RC097^9/1/2011
"RTN","EC725U61",53,0)
 ;;RC098^9/1/2011
"RTN","EC725U61",54,0)
 ;;QUIT
"RTN","EC725U61",55,0)
 ;
"RTN","EC725U61",56,0)
REACT ;* reactivate national procedures
"RTN","EC725U61",57,0)
 ;
"RTN","EC725U61",58,0)
 ;  ECXX is in format:
"RTN","EC725U61",59,0)
 ;   NATIONAL NUMBER^DATE (FUTURE)^FIRST NATIONAL NUMBER SEQUENCE^
"RTN","EC725U61",60,0)
 ;   LAST NATIONAL NUMBER SEQUENCE
"RTN","EC725U61",61,0)
 ;
"RTN","EC725U61",62,0)
 N ECX,ECXX,ECEXDT,ECINDT,ECDA,DIC,DIE,DA,DR,X,Y,%DT,ECBEG,ECEND,ECADD
"RTN","EC725U61",63,0)
 N ECSEQ,CODE,CODX,ECDES
"RTN","EC725U61",64,0)
 D MES^XPDUTL(" ")
"RTN","EC725U61",65,0)
 D BMES^XPDUTL("Reactivating procedures EC NATIONAL PROCEDURE File (#725)...")
"RTN","EC725U61",66,0)
 D MES^XPDUTL(" ")
"RTN","EC725U61",67,0)
 F ECX=1:1 K DD,DO,DA S ECXX=$P($T(ACT+ECX),";;",2) Q:ECXX="QUIT"  D
"RTN","EC725U61",68,0)
 .S ECDES=$P(ECXX,U,5)
"RTN","EC725U61",69,0)
 .S CODE=$P(ECXX,U),ECBEG=$P(ECXX,U,3),ECEND=$P(ECXX,U,4),CODX=CODE
"RTN","EC725U61",70,0)
 .I ECBEG="" D UPREACT Q
"RTN","EC725U61",71,0)
 .F ECSEQ=ECBEG:1:ECEND D
"RTN","EC725U61",72,0)
 ..S ECADD="000"_ECSEQ,ECADD=$E(ECADD,$L(ECADD)-2,$L(ECADD))
"RTN","EC725U61",73,0)
 ..S CODE=CODX_ECADD
"RTN","EC725U61",74,0)
 ..D UPREACT
"RTN","EC725U61",75,0)
 Q
"RTN","EC725U61",76,0)
UPREACT ;Update codes as reactive
"RTN","EC725U61",77,0)
 ;
"RTN","EC725U61",78,0)
 S ECDA=+$O(^EC(725,"D",CODE,0))
"RTN","EC725U61",79,0)
 I $D(^EC(725,ECDA,0)) D
"RTN","EC725U61",80,0)
 .S DA=ECDA,DR="2///@",DIE="^EC(725," D ^DIE
"RTN","EC725U61",81,0)
 .D BMES^XPDUTL("   "_CODE_" "_ECDES_" reactivated.")
"RTN","EC725U61",82,0)
 Q
"RTN","EC725U61",83,0)
 ;
"RTN","EC725U61",84,0)
ACT ;national procedures to be reactivated - national number^date
"RTN","EC725U61",85,0)
 ;;QUIT
"RTN","EC725U61",86,0)
 ;
"RTN","EC725U61",87,0)
CPTCHG ;* change cpt codes
"RTN","EC725U61",88,0)
 ;
"RTN","EC725U61",89,0)
 ;  ECXX is in format:
"RTN","EC725U61",90,0)
 ;  NATIONAL NUMBER^NEW CPT^FIRST NATIONAL NUMBER SEQUENCE^LAST NATIONAL
"RTN","EC725U61",91,0)
 ;  NUMBER SEQUENCE
"RTN","EC725U61",92,0)
 ;
"RTN","EC725U61",93,0)
 N ECX,ECXX,CPT,DIC,DIE,DA,DR,X,Y,ECBEG,ECEND,ECADD,NAME,ECSEQ,STR,CPTIEN
"RTN","EC725U61",94,0)
 D MES^XPDUTL(" ")
"RTN","EC725U61",95,0)
 D BMES^XPDUTL("Changing CPT Codes in EC NATIONAL PROCEDURE file (#725)")
"RTN","EC725U61",96,0)
 D MES^XPDUTL(" ")
"RTN","EC725U61",97,0)
 F ECX=1:1 S ECXX=$P($T(CPT+ECX),";;",2) Q:ECXX="QUIT"  D
"RTN","EC725U61",98,0)
 .S ECBEG=$P(ECXX,U,3),ECEND=$P(ECXX,U,4),CPTIEN=$P(ECXX,U,2)
"RTN","EC725U61",99,0)
 .S CPTIEN=$S(CPTIEN="":"@",1:$$FIND1^DIC(81,"","X",CPTIEN))
"RTN","EC725U61",100,0)
 .I CPTIEN'="@",+CPTIEN<1 D  Q
"RTN","EC725U61",101,0)
 ..S STR=$P(ECXX,U)_":  CPT code "_$P(ECXX,U,2)_" is invalid."
"RTN","EC725U61",102,0)
 ..D MES^XPDUTL(" ")
"RTN","EC725U61",103,0)
 ..D BMES^XPDUTL("   "_STR)
"RTN","EC725U61",104,0)
 .I ECBEG="" S CPT($P(ECXX,U))=CPTIEN_U_$P(ECXX,U,2) Q
"RTN","EC725U61",105,0)
 .F ECSEQ=ECBEG:1:ECEND D
"RTN","EC725U61",106,0)
 ..S ECADD="000"_ECSEQ,ECADD=$E(ECADD,$L(ECADD)-2,$L(ECADD))
"RTN","EC725U61",107,0)
 ..S CPT($P(ECXX,U)_ECADD)=CPTIEN_U_$P(ECXX,U,2)
"RTN","EC725U61",108,0)
 S ECXX=""
"RTN","EC725U61",109,0)
 F  S ECXX=$O(CPT(ECXX)) Q:ECXX=""  D
"RTN","EC725U61",110,0)
 .S ECX=$O(^EC(725,"D",ECXX,0))
"RTN","EC725U61",111,0)
 .Q:+ECX=0
"RTN","EC725U61",112,0)
 .I '$D(^EC(725,ECX,0))!(+ECX=0) D  Q
"RTN","EC725U61",113,0)
 ..D MES^XPDUTL(" ")
"RTN","EC725U61",114,0)
 ..D BMES^XPDUTL("   Can't find entry for "_ECXX_",CPT code not updated.")
"RTN","EC725U61",115,0)
 .S CPT=$P(CPT(ECXX),U),DA=ECX,DR="4///"_CPT,DIE="^EC(725," D ^DIE
"RTN","EC725U61",116,0)
 .D MES^XPDUTL(" ")
"RTN","EC725U61",117,0)
 .S STR="   Entry #"_ECX_" for "_ECXX
"RTN","EC725U61",118,0)
 .D BMES^XPDUTL(STR_" updated to use CPT code "_$P(CPT(ECXX),U,2))
"RTN","EC725U61",119,0)
 Q
"RTN","EC725U61",120,0)
 ;
"RTN","EC725U61",121,0)
CPT ;cpt codes to be changed - national #^new CPT code
"RTN","EC725U61",122,0)
 ;;RC001^97750
"RTN","EC725U61",123,0)
 ;;RC002^97750
"RTN","EC725U61",124,0)
 ;;RC003^97750
"RTN","EC725U61",125,0)
 ;;RC004^97750
"RTN","EC725U61",126,0)
 ;;RC005^97750
"RTN","EC725U61",127,0)
 ;;RC006^97750
"RTN","EC725U61",128,0)
 ;;RC007^97750
"RTN","EC725U61",129,0)
 ;;RC008^97750
"RTN","EC725U61",130,0)
 ;;RC010^98961
"RTN","EC725U61",131,0)
 ;;RC014^97150
"RTN","EC725U61",132,0)
 ;;RC015^97150
"RTN","EC725U61",133,0)
 ;;RC016^97150
"RTN","EC725U61",134,0)
 ;;RC053^96152
"RTN","EC725U61",135,0)
 ;;RC054^96152
"RTN","EC725U61",136,0)
 ;;QUIT
"RTN","ECP111PT")
0^^B31484480^n/a
"RTN","ECP111PT",1,0)
ECP111PT ;ALB/GTS/JAP/BP - PATCH EC*2.0*111 Post-Init Rtn ; 1/19/10 2:48pm
"RTN","ECP111PT",2,0)
 ;;2.0; EVENT CAPTURE ;**111**;8 May 96;Build 12
"RTN","ECP111PT",3,0)
 ;
"RTN","ECP111PT",4,0)
 Q
"RTN","ECP111PT",5,0)
POST ; entry point
"RTN","ECP111PT",6,0)
 N ECVRRV
"RTN","ECP111PT",7,0)
 ;* if 725 converted, write message
"RTN","ECP111PT",8,0)
 ;  since check inserted in addproc subroutine, patch may be re-installed
"RTN","ECP111PT",9,0)
 I $$GET1^DID(725,"","","PACKAGE REVISION DATA")["EC*2*111" D
"RTN","ECP111PT",10,0)
 .D MES^XPDUTL(" ")
"RTN","ECP111PT",11,0)
 .D MES^XPDUTL("It appears that the EC NATIONAL PROCEDURE")
"RTN","ECP111PT",12,0)
 .D MES^XPDUTL("file (#725) has already been updated")
"RTN","ECP111PT",13,0)
 .D MES^XPDUTL("with Patch EC*2*111.")
"RTN","ECP111PT",14,0)
 .D MES^XPDUTL(" ")
"RTN","ECP111PT",15,0)
 .D MES^XPDUTL("But the patch may be re-installed...")
"RTN","ECP111PT",16,0)
 .D MES^XPDUTL(" ")
"RTN","ECP111PT",17,0)
 D ENTUP
"RTN","ECP111PT",18,0)
 D F7203
"RTN","ECP111PT",19,0)
 D KILL1
"RTN","ECP111PT",20,0)
 Q
"RTN","ECP111PT",21,0)
 ;
"RTN","ECP111PT",22,0)
ENTUP ; 
"RTN","ECP111PT",23,0)
 D MES^XPDUTL(" ")
"RTN","ECP111PT",24,0)
 D BMES^XPDUTL("Updating the National Procedures file (#725)...")
"RTN","ECP111PT",25,0)
 D MES^XPDUTL(" ")
"RTN","ECP111PT",26,0)
 ;* add new/edit national procedures
"RTN","ECP111PT",27,0)
 D ADDPROC^EC725U60  ;add new procedures
"RTN","ECP111PT",28,0)
 D NAMECHG^EC725U60  ;change desription
"RTN","ECP111PT",29,0)
 D CPTCHG^EC725U61  ;change CPT code
"RTN","ECP111PT",30,0)
 D INACT^EC725U61  ;inactivate code
"RTN","ECP111PT",31,0)
 D REACT^EC725U61    ;reactivate code
"RTN","ECP111PT",32,0)
 ;* set VRRV node (file #725)
"RTN","ECP111PT",33,0)
 S ECVRRV=$$GET1^DID(725,"","","PACKAGE REVISION DATA")
"RTN","ECP111PT",34,0)
 S ECVRRV=ECVRRV_"^EC*2*111"
"RTN","ECP111PT",35,0)
 D PRD^DILFD(725,ECVRRV)
"RTN","ECP111PT",36,0)
 D MES^XPDUTL(" ")
"RTN","ECP111PT",37,0)
 D BMES^XPDUTL("Update of EC NATIONAL PROCEDURE file (#725)")
"RTN","ECP111PT",38,0)
 D BMES^XPDUTL("   completed...")
"RTN","ECP111PT",39,0)
 D MES^XPDUTL(" ")
"RTN","ECP111PT",40,0)
 Q
"RTN","ECP111PT",41,0)
MSGTXT ; Message intro
"RTN","ECP111PT",42,0)
 ;; Please forward this message to your local DSS Site Manager or
"RTN","ECP111PT",43,0)
 ;; Event Capture ADPAC.;; Event Capture ADPAC.
"RTN","ECP111PT",44,0)
 ;;
"RTN","ECP111PT",45,0)
 ;; A review of the EC EVENT CODE SCREENS file (#720.3) was done
"RTN","ECP111PT",46,0)
 ;; after installation of patch EC*2*111 which updated the EC NATIONAL
"RTN","ECP111PT",47,0)
 ;; PROCEDURE file (#725).  This message provides the results of that
"RTN","ECP111PT",48,0)
 ;; review.
"RTN","ECP111PT",49,0)
 ;;
"RTN","ECP111PT",50,0)
 ;; The EC EVENT CODE SCREENS file (#720.3) records indicated below
"RTN","ECP111PT",51,0)
 ;; point to an inactive record in the EC NATIONAL PROCEDURE file
"RTN","ECP111PT",52,0)
 ;; (#725) or to an inactive record in the CPT file (#81).
"RTN","ECP111PT",53,0)
 ;;
"RTN","ECP111PT",54,0)
 ;; The user should use the Inactivate Event Code Screens [ECNACT]
"RTN","ECP111PT",55,0)
 ;; option to inactivate the Event Code Screen.  If necessary, a new
"RTN","ECP111PT",56,0)
 ;; Event Code Screen can be created using a currently active CPT code
"RTN","ECP111PT",57,0)
 ;; or National Procedure.
"RTN","ECP111PT",58,0)
 ;;
"RTN","ECP111PT",59,0)
 ;;QUIT
"RTN","ECP111PT",60,0)
 ;
"RTN","ECP111PT",61,0)
F7203 ;* inspect/report 720.3
"RTN","ECP111PT",62,0)
 D BMES^XPDUTL("Inspecting EC Event Code Screens file (#720.3)...")
"RTN","ECP111PT",63,0)
 D BMES^XPDUTL("You will receive a MailMan message regarding file #720.3 ")
"RTN","ECP111PT",64,0)
 D BMES^XPDUTL("  ")
"RTN","ECP111PT",65,0)
 S ZTRTN="F7203Q^ECP111PT",ZTDESC="File #720.3 Review from EC*2*111",ZTIO=""
"RTN","ECP111PT",66,0)
 S ZTDTH=$H,ZTREQ="@",ZTSAVE("ZTREQ")="" D ^%ZTLOAD
"RTN","ECP111PT",67,0)
 Q
"RTN","ECP111PT",68,0)
 ;
"RTN","ECP111PT",69,0)
F7203Q ;* background job entry point
"RTN","ECP111PT",70,0)
 N ECPTR,ECPROCT,EC01,ECSCDA,ECFILE,ECDATA,ECLOC,ECCAT,ECCATNM,ECUNIT,ECNAM,ECPROC,ECINACT,COUNT,TXTVAR
"RTN","ECP111PT",71,0)
 S COUNT=0 K ^TMP($J,"ECP111")
"RTN","ECP111PT",72,0)
 F I=1:1 S TXTVAR=$P($T(MSGTXT+I),";;",2) Q:TXTVAR="QUIT"  D LINE(TXTVAR)
"RTN","ECP111PT",73,0)
 S (EC01,ECPROCT)=0
"RTN","ECP111PT",74,0)
 F  S EC01=$O(^ECJ("B",EC01)) Q:+EC01=0  D
"RTN","ECP111PT",75,0)
 .S ECPTR=$P(EC01,"-",4),ECSCDA=$O(^ECJ("B",EC01,0))
"RTN","ECP111PT",76,0)
 .Q:'$D(^ECJ(ECSCDA,0))
"RTN","ECP111PT",77,0)
 .;ignore any ec screen that has been inactivated
"RTN","ECP111PT",78,0)
 .Q:+$P(^ECJ(ECSCDA,0),"^",2)
"RTN","ECP111PT",79,0)
 .S ECFILE=$P(ECPTR,";",2)
"RTN","ECP111PT",80,0)
 .;ec screens pointing to file #725
"RTN","ECP111PT",81,0)
 .I ECFILE["EC(725" S ECDATA=$G(^EC(725,$P(ECPTR,";",1),0)) D
"RTN","ECP111PT",82,0)
 ..S ECINACT=$P(ECDATA,U,3)
"RTN","ECP111PT",83,0)
 ..Q:ECINACT=""
"RTN","ECP111PT",84,0)
 ..;ignore if procedure inactivated before this fiscal year
"RTN","ECP111PT",85,0)
 ..Q:(ECINACT<3100104)
"RTN","ECP111PT",86,0)
 ..S Y=ECINACT D DD^%DT S ECINACT=Y
"RTN","ECP111PT",87,0)
 ..S ECLOC=$P(EC01,"-",1),ECUNIT=$P(EC01,"-",2),ECCAT=$P(EC01,"-",3)
"RTN","ECP111PT",88,0)
 ..S ECLOC=$P($G(^DIC(4,ECLOC,0)),U,1),ECUNIT=$P($G(^ECD(ECUNIT,0)),U,1)
"RTN","ECP111PT",89,0)
 ..S:+ECCAT'=0 ECCATNM=$P($G(^EC(726,ECCAT,0)),U,1)
"RTN","ECP111PT",90,0)
 ..S:+ECCAT=0 ECCATNM="None"
"RTN","ECP111PT",91,0)
 ..S ECPROC=$P(ECDATA,U,1)_" ("_$P(ECDATA,U,2)_")"
"RTN","ECP111PT",92,0)
 ..S ECNAM=$P(^ECJ(ECSCDA,0),";",1)
"RTN","ECP111PT",93,0)
 ..D LINE(" ")
"RTN","ECP111PT",94,0)
 ..D LINE(" The National Procedure for the following Event Code")
"RTN","ECP111PT",95,0)
 ..D LINE(" Screen ("_ECNAM_") is inactive or will soon be inactive --")
"RTN","ECP111PT",96,0)
 ..D LINE("  Location:  "_ECLOC)
"RTN","ECP111PT",97,0)
 ..D LINE("  Category:  "_ECCATNM)
"RTN","ECP111PT",98,0)
 ..D LINE("  DSS Unit:  "_ECUNIT)
"RTN","ECP111PT",99,0)
 ..D LINE("  Procedure: "_ECPROC)
"RTN","ECP111PT",100,0)
 ..D LINE("  Inactivation Date: "_ECINACT)
"RTN","ECP111PT",101,0)
 ..S ECPROCT=ECPROCT+1
"RTN","ECP111PT",102,0)
 .;ec screens pointing to file #81
"RTN","ECP111PT",103,0)
 .I ECFILE["ICPT" S ECDATA=$G(^ICPT($P(ECPTR,";",1),0)) D
"RTN","ECP111PT",104,0)
 ..S ECINACT=$P(ECDATA,U,4)
"RTN","ECP111PT",105,0)
 ..Q:ECINACT=""
"RTN","ECP111PT",106,0)
 ..S ECLOC=$P(EC01,"-",1),ECUNIT=$P(EC01,"-",2),ECCAT=$P(EC01,"-",3)
"RTN","ECP111PT",107,0)
 ..S ECLOC=$P($G(^DIC(4,ECLOC,0)),U,1),ECUNIT=$P($G(^ECD(ECUNIT,0)),U,1)
"RTN","ECP111PT",108,0)
 ..S:+ECCAT'=0 ECCATNM=$P($G(^EC(726,ECCAT,0)),U,1)
"RTN","ECP111PT",109,0)
 ..S:+ECCAT=0 ECCATNM="None"
"RTN","ECP111PT",110,0)
 ..S ECPROC=$P(ECDATA,U,2)_" ("_$P(ECDATA,U,1)_")",ECNAM=$P(^ECJ(ECSCDA,0),";",1)
"RTN","ECP111PT",111,0)
 ..D LINE(" ")
"RTN","ECP111PT",112,0)
 ..D LINE(" The CPT procedure for the following Event")
"RTN","ECP111PT",113,0)
 ..D LINE(" Code Screen ("_ECNAM_") is inactive --")
"RTN","ECP111PT",114,0)
 ..D LINE("  Location:  "_ECLOC)
"RTN","ECP111PT",115,0)
 ..D LINE("  Category:  "_ECCATNM)
"RTN","ECP111PT",116,0)
 ..D LINE("  DSS Unit:  "_ECUNIT)
"RTN","ECP111PT",117,0)
 ..D LINE("  Procedure: "_ECPROC)
"RTN","ECP111PT",118,0)
 ..S ECPROCT=ECPROCT+1
"RTN","ECP111PT",119,0)
 I ECPROCT=0 D
"RTN","ECP111PT",120,0)
 .D LINE(" ")
"RTN","ECP111PT",121,0)
 .D LINE(" "_ECPROCT_" Event Code Screens were found to be pointing to an inactive")
"RTN","ECP111PT",122,0)
 .D LINE(" or soon to be inactive procedure in file #725 or file #81.")
"RTN","ECP111PT",123,0)
 .D LINE(" ")
"RTN","ECP111PT",124,0)
 D MAIL
"RTN","ECP111PT",125,0)
 K ^TMP($J,"ECP111"),I,Y
"RTN","ECP111PT",126,0)
 Q
"RTN","ECP111PT",127,0)
 ;
"RTN","ECP111PT",128,0)
LINE(TEXT) ; Add line to message global
"RTN","ECP111PT",129,0)
 S COUNT=COUNT+1,^TMP($J,"ECP111",COUNT)=TEXT
"RTN","ECP111PT",130,0)
 Q
"RTN","ECP111PT",131,0)
 ;
"RTN","ECP111PT",132,0)
MAIL ; Send message
"RTN","ECP111PT",133,0)
 N XMDUZ,XMY,XMTEXT,XMSUB
"RTN","ECP111PT",134,0)
 S XMY(DUZ)="",XMDUZ=.5
"RTN","ECP111PT",135,0)
 S XMSUB="Event Code Screens to Review"
"RTN","ECP111PT",136,0)
 S XMTEXT="^TMP($J,""ECP111"","
"RTN","ECP111PT",137,0)
 D ^XMD
"RTN","ECP111PT",138,0)
 Q
"RTN","ECP111PT",139,0)
KILL1 ;
"RTN","ECP111PT",140,0)
 K ZTDESC,ZTDTH,ZTIO,ZTREQ,ZTRTN,ZTSAVE("ZTREQ")
"RTN","ECP111PT",141,0)
 Q
"VER")
8.0^22.0
"BLD",8619,6)
^104
**END**
**END**
