Released EC*2*112 SEQ #106
Extracted from mail message
**KIDS**:EC*2.0*112^

**INSTALL NAME**
EC*2.0*112
"BLD",8404,0)
EC*2.0*112^EVENT CAPTURE^0^3120209^y
"BLD",8404,4,0)
^9.64PA^721^1
"BLD",8404,4,721,0)
721
"BLD",8404,4,721,2,0)
^9.641^721^1
"BLD",8404,4,721,2,721,0)
EVENT CAPTURE PATIENT  (File-top level)
"BLD",8404,4,721,2,721,1,0)
^9.6411^44^2
"BLD",8404,4,721,2,721,1,43,0)
PROCEDURE REASON #2
"BLD",8404,4,721,2,721,1,44,0)
PROCEDURE REASON #3
"BLD",8404,4,721,222)
y^y^p^^^^n^^n
"BLD",8404,4,721,224)

"BLD",8404,4,"APDD",721,721)

"BLD",8404,4,"APDD",721,721,43)

"BLD",8404,4,"APDD",721,721,44)

"BLD",8404,4,"B",721,721)

"BLD",8404,6.3)
18
"BLD",8404,"ABPKG")
n
"BLD",8404,"KRN",0)
^9.67PA^779.2^20
"BLD",8404,"KRN",.4,0)
.4
"BLD",8404,"KRN",.4,"NM",0)
^9.68A^^
"BLD",8404,"KRN",.401,0)
.401
"BLD",8404,"KRN",.402,0)
.402
"BLD",8404,"KRN",.403,0)
.403
"BLD",8404,"KRN",.5,0)
.5
"BLD",8404,"KRN",.84,0)
.84
"BLD",8404,"KRN",3.6,0)
3.6
"BLD",8404,"KRN",3.8,0)
3.8
"BLD",8404,"KRN",9.2,0)
9.2
"BLD",8404,"KRN",9.2,"NM",0)
^9.68A^5^5
"BLD",8404,"KRN",9.2,"NM",1,0)
ECRECER^^0
"BLD",8404,"KRN",9.2,"NM",2,0)
ECRECSIC^^0
"BLD",8404,"KRN",9.2,"NM",3,0)
ECRECSPC^^0
"BLD",8404,"KRN",9.2,"NM",4,0)
ECRDSSUA^^0
"BLD",8404,"KRN",9.2,"NM",5,0)
ECINACTECS^^0
"BLD",8404,"KRN",9.2,"NM","B","ECINACTECS",5)

"BLD",8404,"KRN",9.2,"NM","B","ECRDSSUA",4)

"BLD",8404,"KRN",9.2,"NM","B","ECRECER",1)

"BLD",8404,"KRN",9.2,"NM","B","ECRECSIC",2)

"BLD",8404,"KRN",9.2,"NM","B","ECRECSPC",3)

"BLD",8404,"KRN",9.8,0)
9.8
"BLD",8404,"KRN",9.8,"NM",0)
^9.68A^18^18
"BLD",8404,"KRN",9.8,"NM",1,0)
ECPRSUM1^^0^B30118950
"BLD",8404,"KRN",9.8,"NM",2,0)
ECRDSSA^^0^B103256712
"BLD",8404,"KRN",9.8,"NM",3,0)
ECUERPC1^^0^B53869940
"BLD",8404,"KRN",9.8,"NM",4,0)
ECEFPAT^^0^B59874823
"BLD",8404,"KRN",9.8,"NM",5,0)
ECPROV3^^0^B40301318
"BLD",8404,"KRN",9.8,"NM",6,0)
ECRRPT^^0^B55454344
"BLD",8404,"KRN",9.8,"NM",7,0)
ECRRPC^^0^B21499079
"BLD",8404,"KRN",9.8,"NM",8,0)
ECUMRPC1^^0^B80221872
"BLD",8404,"KRN",9.8,"NM",9,0)
ECRRPT2^^0^B34837441
"BLD",8404,"KRN",9.8,"NM",10,0)
ECRDSSUA^^0^B5616622
"BLD",8404,"KRN",9.8,"NM",11,0)
ECPAT^^0^B34100564
"BLD",8404,"KRN",9.8,"NM",12,0)
ECRUDSS^^0^B4128147
"BLD",8404,"KRN",9.8,"NM",13,0)
ECRDSSEC^^0^B6543732
"BLD",8404,"KRN",9.8,"NM",14,0)
ECRPRSN2^^0^B23756227
"BLD",8404,"KRN",9.8,"NM",15,0)
ECRRPT1^^0^B61256749
"BLD",8404,"KRN",9.8,"NM",16,0)
ECRECER^^0^B26467658
"BLD",8404,"KRN",9.8,"NM",17,0)
ECRECSIC^^0^B9988550
"BLD",8404,"KRN",9.8,"NM",18,0)
ECRECSPC^^0^B10939952
"BLD",8404,"KRN",9.8,"NM","B","ECEFPAT",4)

"BLD",8404,"KRN",9.8,"NM","B","ECPAT",11)

"BLD",8404,"KRN",9.8,"NM","B","ECPROV3",5)

"BLD",8404,"KRN",9.8,"NM","B","ECPRSUM1",1)

"BLD",8404,"KRN",9.8,"NM","B","ECRDSSA",2)

"BLD",8404,"KRN",9.8,"NM","B","ECRDSSEC",13)

"BLD",8404,"KRN",9.8,"NM","B","ECRDSSUA",10)

"BLD",8404,"KRN",9.8,"NM","B","ECRECER",16)

"BLD",8404,"KRN",9.8,"NM","B","ECRECSIC",17)

"BLD",8404,"KRN",9.8,"NM","B","ECRECSPC",18)

"BLD",8404,"KRN",9.8,"NM","B","ECRPRSN2",14)

"BLD",8404,"KRN",9.8,"NM","B","ECRRPC",7)

"BLD",8404,"KRN",9.8,"NM","B","ECRRPT",6)

"BLD",8404,"KRN",9.8,"NM","B","ECRRPT1",15)

"BLD",8404,"KRN",9.8,"NM","B","ECRRPT2",9)

"BLD",8404,"KRN",9.8,"NM","B","ECRUDSS",12)

"BLD",8404,"KRN",9.8,"NM","B","ECUERPC1",3)

"BLD",8404,"KRN",9.8,"NM","B","ECUMRPC1",8)

"BLD",8404,"KRN",19,0)
19
"BLD",8404,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",8404,"KRN",19,"NM",1,0)
EC GUI CONTEXT^^0
"BLD",8404,"KRN",19,"NM","B","EC GUI CONTEXT",1)

"BLD",8404,"KRN",19.1,0)
19.1
"BLD",8404,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",8404,"KRN",19.1,"NM",1,0)
ECNORPT^^0
"BLD",8404,"KRN",19.1,"NM","B","ECNORPT",1)

"BLD",8404,"KRN",101,0)
101
"BLD",8404,"KRN",409.61,0)
409.61
"BLD",8404,"KRN",771,0)
771
"BLD",8404,"KRN",779.2,0)
779.2
"BLD",8404,"KRN",870,0)
870
"BLD",8404,"KRN",8989.51,0)
8989.51
"BLD",8404,"KRN",8989.52,0)
8989.52
"BLD",8404,"KRN",8994,0)
8994
"BLD",8404,"KRN","B",.4,.4)

"BLD",8404,"KRN","B",.401,.401)

"BLD",8404,"KRN","B",.402,.402)

"BLD",8404,"KRN","B",.403,.403)

"BLD",8404,"KRN","B",.5,.5)

"BLD",8404,"KRN","B",.84,.84)

"BLD",8404,"KRN","B",3.6,3.6)

"BLD",8404,"KRN","B",3.8,3.8)

"BLD",8404,"KRN","B",9.2,9.2)

"BLD",8404,"KRN","B",9.8,9.8)

"BLD",8404,"KRN","B",19,19)

"BLD",8404,"KRN","B",19.1,19.1)

"BLD",8404,"KRN","B",101,101)

"BLD",8404,"KRN","B",409.61,409.61)

"BLD",8404,"KRN","B",771,771)

"BLD",8404,"KRN","B",779.2,779.2)

"BLD",8404,"KRN","B",870,870)

"BLD",8404,"KRN","B",8989.51,8989.51)

"BLD",8404,"KRN","B",8989.52,8989.52)

"BLD",8404,"KRN","B",8994,8994)

"BLD",8404,"QUES",0)
^9.62^^
"BLD",8404,"REQB",0)
^9.611^3^3
"BLD",8404,"REQB",1,0)
EC*2.0*104^1
"BLD",8404,"REQB",2,0)
EC*2.0*108^1
"BLD",8404,"REQB",3,0)
EC*2.0*110^1
"BLD",8404,"REQB","B","EC*2.0*104",1)

"BLD",8404,"REQB","B","EC*2.0*108",2)

"BLD",8404,"REQB","B","EC*2.0*110",3)

"FIA",721)
EVENT CAPTURE PATIENT
"FIA",721,0)
^ECH(
"FIA",721,0,0)
721A
"FIA",721,0,1)
y^y^p^^^^n^^n
"FIA",721,0,10)

"FIA",721,0,11)

"FIA",721,0,"RLRO")

"FIA",721,0,"VR")
2.0^EC
"FIA",721,721)
1
"FIA",721,721,43)

"FIA",721,721,44)

"KRN",9.2,1554,-1)
0^1
"KRN",9.2,1554,0)
ECRECER^Event Capture Encounters Report^3111220.153224^
"KRN",9.2,1554,1,0)
^^14^14^3111220^
"KRN",9.2,1554,1,1,0)
** This report is formatted for a 132 column device. **
"KRN",9.2,1554,1,2,0)
 
"KRN",9.2,1554,1,3,0)
This option allows you to print/display/export Event Capture encounter
"KRN",9.2,1554,1,4,0)
data within a specified date range for selected locations and DSS units.
"KRN",9.2,1554,1,5,0)
The report can be sorted by patient or provider.
"KRN",9.2,1554,1,6,0)
 
"KRN",9.2,1554,1,7,0)
The output includes 
"KRN",9.2,1554,1,8,0)
 - Patient name 
"KRN",9.2,1554,1,9,0)
 - Last four digits of patient SSN
"KRN",9.2,1554,1,10,0)
 - Inpatient/Outpatient
"KRN",9.2,1554,1,11,0)
 - Date and time
"KRN",9.2,1554,1,12,0)
 - Primary provider
"KRN",9.2,1554,1,13,0)
 - DSS Unit
"KRN",9.2,1554,1,14,0)
 - Volume
"KRN",9.2,1555,-1)
0^2
"KRN",9.2,1555,0)
ECRECSIC^EC SCREENS WITH INACTIVE DEFAULT ASSOCIATED CILNIC^3111220.161559^
"KRN",9.2,1555,1,0)
^^12^12^3111220^
"KRN",9.2,1555,1,1,0)
** This report is formatted for a 132 column device. **
"KRN",9.2,1555,1,2,0)
 
"KRN",9.2,1555,1,3,0)
This option allows you to print/display/export inactive default
"KRN",9.2,1555,1,4,0)
associated clinic data for specified locations and DSS units.
"KRN",9.2,1555,1,5,0)
 
"KRN",9.2,1555,1,6,0)
The output includes
"KRN",9.2,1555,1,7,0)
- DSS unit name
"KRN",9.2,1555,1,8,0)
- Location
"KRN",9.2,1555,1,9,0)
- Category
"KRN",9.2,1555,1,10,0)
- Procedure code
"KRN",9.2,1555,1,11,0)
- Clinic IEN
"KRN",9.2,1555,1,12,0)
- Clinic name
"KRN",9.2,1556,-1)
0^3
"KRN",9.2,1556,0)
ECRECSPC^DSS UNITS/EVENT CODE SCREENS FOR SELECTED PROCEDURE CODE^3111220.161802^
"KRN",9.2,1556,1,0)
^^11^11^3111220^
"KRN",9.2,1556,1,1,0)
** This report is formatted for a 132 column device. **
"KRN",9.2,1556,1,2,0)
 
"KRN",9.2,1556,1,3,0)
This option allows you to print/display/export DSS unit and EC
"KRN",9.2,1556,1,4,0)
screen data for a selected procedure code and specified locations.
"KRN",9.2,1556,1,5,0)
 
"KRN",9.2,1556,1,6,0)
The output includes
"KRN",9.2,1556,1,7,0)
- DSS unit IEN
"KRN",9.2,1556,1,8,0)
- DSS unit name
"KRN",9.2,1556,1,9,0)
- Location
"KRN",9.2,1556,1,10,0)
- Category
"KRN",9.2,1556,1,11,0)
- EC screen status
"KRN",9.2,1557,-1)
0^4
"KRN",9.2,1557,0)
ECRDSSUA^USER ACCESS TO DSS UNITS FOR SELECTED LOCATIONS/DSS UNITS^3111220.161951^
"KRN",9.2,1557,1,0)
^^10^10^3111220^
"KRN",9.2,1557,1,1,0)
** This report is formatted for a 132 column device. **
"KRN",9.2,1557,1,2,0)
 
"KRN",9.2,1557,1,3,0)
This option allows you to print/display/export user access to DSS
"KRN",9.2,1557,1,4,0)
unit data for specified locations and DSS units.
"KRN",9.2,1557,1,5,0)
 
"KRN",9.2,1557,1,6,0)
The output includes
"KRN",9.2,1557,1,7,0)
- DSS unit name
"KRN",9.2,1557,1,8,0)
- User name
"KRN",9.2,1557,1,9,0)
- IEN
"KRN",9.2,1557,1,10,0)
- Person Class/Classification
"KRN",9.2,1558,-1)
0^5
"KRN",9.2,1558,0)
ECINACTECS^Inactivate Multiple Event Code Screens^3111222.172718^
"KRN",9.2,1558,1,0)
^9.21^30^30^3111222^^^
"KRN",9.2,1558,1,1,0)
This option allows you to identify active Event Code (EC) Screens that 
"KRN",9.2,1558,1,2,0)
use a selected EC product code.  The EC product code can be a CPT code, a 
"KRN",9.2,1558,1,3,0)
national EC procedure code or a local EC procedure code.
"KRN",9.2,1558,1,4,0)
 
"KRN",9.2,1558,1,5,0)
All active EC Screens that use the selected product code will be 
"KRN",9.2,1558,1,6,0)
displayed in the list box below the selected EC product code, sorted by 
"KRN",9.2,1558,1,7,0)
unique DSS Unit, Location and Category.  The DSS Unit will be displayed 
"KRN",9.2,1558,1,8,0)
for the first EC Screen that contains the unique value; the Category will 
"KRN",9.2,1558,1,9,0)
only be displayed if a Category was selected when the EC Screen was 
"KRN",9.2,1558,1,10,0)
defined.
"KRN",9.2,1558,1,11,0)
 
"KRN",9.2,1558,1,12,0)
To the left of each line in the list box will be a check box.  Clicking 
"KRN",9.2,1558,1,13,0)
on an unchecked box will indicate the record is to be inactivated.  
"KRN",9.2,1558,1,14,0)
Clicking on a checked box will result in the check box being unchecked, 
"KRN",9.2,1558,1,15,0)
and no longer a candidate for inactivation.
"KRN",9.2,1558,1,16,0)
 
"KRN",9.2,1558,1,17,0)
Whenever one or more check boxes is checked, the 'Apply' button will be 
"KRN",9.2,1558,1,18,0)
enabled.  Clicking the 'Apply' button will result in the display of a 
"KRN",9.2,1558,1,19,0)
confirmation screen.  If the user wants the selected records to be 
"KRN",9.2,1558,1,20,0)
inactivated, then the 'OK' button should be clicked; all records that 
"KRN",9.2,1558,1,21,0)
were checked will now be inactivated.  If the user does not want to 
"KRN",9.2,1558,1,22,0)
inactivate the checked records, the 'Cancel' button should be clicked; 
"KRN",9.2,1558,1,23,0)
the user will then be free to check records, uncheck records or cancel 
"KRN",9.2,1558,1,24,0)
out of the selection screen.
"KRN",9.2,1558,1,25,0)
 
"KRN",9.2,1558,1,26,0)
Once records have been inactivated, a list of inactivated records will 
"KRN",9.2,1558,1,27,0)
display on the screen.  In addition to the 'Print' button being enabled, 
"KRN",9.2,1558,1,28,0)
the 'Apply' button will now be disabled.  To print a hard copy of the EC 
"KRN",9.2,1558,1,29,0)
Screens that were just inactivated, click the 'Print' button and follow 
"KRN",9.2,1558,1,30,0)
the printing instructions.
"KRN",19,11187,-1)
0^1
"KRN",19,11187,0)
EC GUI CONTEXT^EC GUI Context version 2.1.3.4^^B^^^^^^^^EVENT CAPTURE
"KRN",19,11187,1,0)
^19.06^1^1^3120103^^^^
"KRN",19,11187,1,1,0)
This is the Broker Client/Server type option for the Event Capture GUI option
"KRN",19,11187,99)
58583,58456
"KRN",19,11187,99.1)
62473,41167
"KRN",19,11187,"RPC",0)
^19.05P^56^56
"KRN",19,11187,"RPC",1,0)
EC DSSCATCHECK
"KRN",19,11187,"RPC",2,0)
EC FILER
"KRN",19,11187,"RPC",3,0)
EC GETBATPROCS
"KRN",19,11187,"RPC",4,0)
EC GETCAT
"KRN",19,11187,"RPC",5,0)
EC GETCPTLST
"KRN",19,11187,"RPC",6,0)
EC GETDSSECS
"KRN",19,11187,"RPC",7,0)
EC GETDSSUNIT
"KRN",19,11187,"RPC",8,0)
EC GETDSSUNITUSRS
"KRN",19,11187,"RPC",9,0)
EC GETECLOC
"KRN",19,11187,"RPC",10,0)
EC GETECSCATS
"KRN",19,11187,"RPC",11,0)
EC GETECSCREEN
"KRN",19,11187,"RPC",12,0)
EC GETECSDETAIL
"KRN",19,11187,"RPC",13,0)
EC GETECSPROCS
"KRN",19,11187,"RPC",14,0)
EC GETENCDXS
"KRN",19,11187,"RPC",15,0)
EC GETIEN
"KRN",19,11187,"RPC",16,0)
EC GETLIST
"KRN",19,11187,"RPC",17,0)
EC GETLOC
"KRN",19,11187,"RPC",18,0)
EC GETNATPX
"KRN",19,11187,"RPC",19,0)
EC GETPATCLASTAT
"KRN",19,11187,"RPC",20,0)
EC GETPATELIG
"KRN",19,11187,"RPC",21,0)
EC GETPATINFO
"KRN",19,11187,"RPC",22,0)
EC GETPATPROCS
"KRN",19,11187,"RPC",23,0)
EC GETPRODEFS
"KRN",19,11187,"RPC",24,0)
EC GETPROVIDER
"KRN",19,11187,"RPC",25,0)
EC GETPXLST
"KRN",19,11187,"RPC",26,0)
EC GETPXMODIFIER
"KRN",19,11187,"RPC",27,0)
EC GETPXREASON
"KRN",19,11187,"RPC",28,0)
EC GETSCNHELP
"KRN",19,11187,"RPC",29,0)
EC GETUSRDSSUNIT
"KRN",19,11187,"RPC",30,0)
EC REPORTS
"KRN",19,11187,"RPC",31,0)
EC VALIDATE SPREADSHEET DATA
"KRN",19,11187,"RPC",32,0)
ORWU USERINFO
"KRN",19,11187,"RPC",33,0)
ORWU HASKEY
"KRN",19,11187,"RPC",34,0)
ORWU DEVICE
"KRN",19,11187,"RPC",35,0)
SC PATIENT LOOKUP
"KRN",19,11187,"RPC",36,0)
ORWU NEWPERS
"KRN",19,11187,"RPC",37,0)
DDR GET DD HELP
"KRN",19,11187,"RPC",38,0)
DDR FINDER
"KRN",19,11187,"RPC",39,0)
DDR FIND1
"KRN",19,11187,"RPC",40,0)
DDR LISTER
"KRN",19,11187,"RPC",41,0)
EC GETDATE
"KRN",19,11187,"RPC",42,0)
EC CLASHELP
"KRN",19,11187,"RPC",43,0)
DDR GETS ENTRY DATA
"KRN",19,11187,"RPC",44,0)
DG CHK BS5 XREF Y/N
"KRN",19,11187,"RPC",45,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,11187,"RPC",46,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,11187,"RPC",47,0)
DG CHK PAT/DIV MEANS TEST
"KRN",19,11187,"RPC",48,0)
EC SPACEBAR
"KRN",19,11187,"RPC",49,0)
EC DIEDON
"KRN",19,11187,"RPC",50,0)
EC GETPATCH
"KRN",19,11187,"RPC",51,0)
EC GETVISITINFO
"KRN",19,11187,"RPC",52,0)
EC GETVERSION
"KRN",19,11187,"RPC",53,0)
ORWU DT
"KRN",19,11187,"RPC",54,0)
ECOB METHOD
"KRN",19,11187,"RPC",55,0)
ECOB FACTORY
"KRN",19,11187,"RPC",56,0)
EC RECENT VISITS
"KRN",19,11187,"U")
EC GUI CONTEXT VERSION 2.1.3.4
"KRN",19.1,572,-1)
0^1
"KRN",19.1,572,0)
ECNORPT^
"KRN",19.1,572,1,0)
^^3^3^3111005^
"KRN",19.1,572,1,1,0)
This key will be used as a reverse key in that anyone assigned this key 
"KRN",19.1,572,1,2,0)
will not be able to view reports.  Reports will be available to everyone 
"KRN",19.1,572,1,3,0)
except those that hold this key.
"MBREQ")
0
"ORD",1,9.2)
9.2;1;;;HELP^XPDTA1;HLPF1^XPDIA1;HLPE1^XPDIA1;HLPF2^XPDIA1;;HLPDEL^XPDIA1
"ORD",1,9.2,0)
HELP FRAME
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",486,-1)
1^1
"PKG",486,0)
EVENT CAPTURE^EC^Event Capture Workload Capture System^
"PKG",486,20,0)
^9.402P^^
"PKG",486,22,0)
^9.49I^1^1
"PKG",486,22,1,0)
2.0^2960508^2981027^66481
"PKG",486,22,1,"PAH",1,0)
112^3120209^101077
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
18
"RTN","ECEFPAT")
0^4^B59874823^B57831365
"RTN","ECEFPAT",1,0)
ECEFPAT ;ALB/JAM-Enter Event Capture Data Patient Filer ;11/18/11  13:30
"RTN","ECEFPAT",2,0)
 ;;2.0;EVENT CAPTURE;**25,32,39,42,47,49,54,65,72,95,76,112**;8 May 96;Build 18
"RTN","ECEFPAT",3,0)
 ;
"RTN","ECEFPAT",4,0)
FILE ;Used by the RPC broker to file patient encounter in file #721
"RTN","ECEFPAT",5,0)
 ;  Uses Supported IA 1995 - allow access to $$CPT^ICPTCOD
"RTN","ECEFPAT",6,0)
 ;
"RTN","ECEFPAT",7,0)
 ;     Variables passed in
"RTN","ECEFPAT",8,0)
 ;       ECIEN   - IEN of #721, if editing
"RTN","ECEFPAT",9,0)
 ;       ECDEL   - Delete record. 1- YES; 0- 0, null or undefine for NO.
"RTN","ECEFPAT",10,0)
 ;       ECDFN   - Patient IEN for file #2
"RTN","ECEFPAT",11,0)
 ;       ECDT    - Date and time of procedure
"RTN","ECEFPAT",12,0)
 ;       ECL     - Location
"RTN","ECEFPAT",13,0)
 ;       ECD     - DSS Unit
"RTN","ECEFPAT",14,0)
 ;       ECC     - Category
"RTN","ECEFPAT",15,0)
 ;       ECP     - Procedure
"RTN","ECEFPAT",16,0)
 ;       ECVOL   - Volume
"RTN","ECEFPAT",17,0)
 ;       ECU1..n - Provider (1 thru n), Prov 1 is required,other optional
"RTN","ECEFPAT",18,0)
 ;       ECMN    - Ordering Section
"RTN","ECEFPAT",19,0)
 ;       ECDUZ   - Entered/Edited by, pointer to #200
"RTN","ECEFPAT",20,0)
 ;       ECDX    - Primary Diagnosis
"RTN","ECEFPAT",21,0)
 ;       ECDXS   - Secondary Diagnosis; multiple, optional
"RTN","ECEFPAT",22,0)
 ;       EC4     - Associated Clinic, required if sending data to PCE
"RTN","ECEFPAT",23,0)
 ;       ECPTSTAT- Patient Status
"RTN","ECEFPAT",24,0)
 ;       ECPXREAS- Procedure reason, optional
"RTN","ECEFPAT",25,0)
 ;       ECPXREA2- Procedure reason #2, optional ;112
"RTN","ECEFPAT",26,0)
 ;       ECPXREA3- Procedure reason #3, optional ;112
"RTN","ECEFPAT",27,0)
 ;       ECMOD   - CPT modifiers, optional
"RTN","ECEFPAT",28,0)
 ;       ECLASS  - Classification, optional
"RTN","ECEFPAT",29,0)
 ;       ECELIG  - Eligibility, optional
"RTN","ECEFPAT",30,0)
 ;
"RTN","ECEFPAT",31,0)
 ;     Variable return
"RTN","ECEFPAT",32,0)
 ;       ^TMP($J,"ECMSG",n)=Success or failure to file in #721^Message
"RTN","ECEFPAT",33,0)
 ;
"RTN","ECEFPAT",34,0)
 N NODE,ECS,ECM,ECID,ECCPT,ECINT,ECPCE,ECX,ECERR,ECOUT,ECFLG,ECRES
"RTN","ECEFPAT",35,0)
 N ECFIL,ECPRV
"RTN","ECEFPAT",36,0)
 S ECFLG=1,ECERR=0 D CHKDT(1) I ECERR Q
"RTN","ECEFPAT",37,0)
 F ECX=1:1 Q:'$D(@("ECU"_ECX))  D  I ECERR Q
"RTN","ECEFPAT",38,0)
 .I @("ECU"_ECX)="" Q
"RTN","ECEFPAT",39,0)
 .S NODE=$$GET^XUA4A72(@("ECU"_ECX),ECDT) I +NODE'>0 S ECERR=1 D  Q
"RTN","ECEFPAT",40,0)
 ..S ^TMP($J,"ECMSG",1)="0^Provider doesn't have an active Person class"
"RTN","ECEFPAT",41,0)
 .S ECPRV(ECX)=@("ECU"_ECX)_"^^"_$S(ECX=1:"P",1:"S")
"RTN","ECEFPAT",42,0)
 I $G(ECIEN)'="" S ECFLG=0 D  I ECERR Q
"RTN","ECEFPAT",43,0)
 . I '$D(^ECH(ECIEN)) S ECERR=1,^TMP($J,"ECMSG",1)="0^Pat IEN Not Found"
"RTN","ECEFPAT",44,0)
 I $G(ECDEL) K ^TMP($J,"ECMSG") D  Q
"RTN","ECEFPAT",45,0)
 .S ECVST=$P($G(^ECH(ECIEN,0)),"^",21) I ECVST D
"RTN","ECEFPAT",46,0)
 ..;* Resend all EC records with same Visit file entry to PCE
"RTN","ECEFPAT",47,0)
 ..;* Remove Visit entry from ^ECH( so DELVFILE will complete cleanup
"RTN","ECEFPAT",48,0)
 ..K EC2PCE S ECVAR1=$$FNDVST^ECUTL(ECVST,,.EC2PCE) K ECVAR1
"RTN","ECEFPAT",49,0)
 ..;Set VALQUIET to stop Amb Care validator from broadcasting to screen
"RTN","ECEFPAT",50,0)
 ..N ECPKG,ECSOU
"RTN","ECEFPAT",51,0)
 ..S ECPKG=$O(^DIC(9.4,"B","EVENT CAPTURE",0)),ECSOU="EVENT CAPTURE DATA"
"RTN","ECEFPAT",52,0)
 ..S VALQUIET=1,ECVV=$$DELVFILE^PXAPI("ALL",ECVST,ECPKG,ECSOU) K ECVST,VALQUIET
"RTN","ECEFPAT",53,0)
 ..;- Send to PCE task
"RTN","ECEFPAT",54,0)
 ..D PCETASK^ECPCEU(.EC2PCE) K EC2PCE
"RTN","ECEFPAT",55,0)
 .S DA=ECIEN,DIK="^ECH(" D ^DIK K DA,DIK,ECVV
"RTN","ECEFPAT",56,0)
 .S ^TMP($J,"ECMSG",1)="1^Procedure Deleted"
"RTN","ECEFPAT",57,0)
 I '$D(ECPRV) S ^TMP($J,"ECMSG",1)="0^No provider present" Q
"RTN","ECEFPAT",58,0)
 S ECDT=+ECDT,NODE=$G(^ECD(ECD,0)) I NODE="" D MSG Q
"RTN","ECEFPAT",59,0)
 S ECFN=$G(ECIEN),ECVOL=$G(ECVOL,1),ECS=$P(NODE,U,2),ECM=$P(NODE,U,3)
"RTN","ECEFPAT",60,0)
 S ECPCE="U~"_$S($P(NODE,"^",14)]"":$P(NODE,"^",14),1:"N")
"RTN","ECEFPAT",61,0)
 ;S ECPTSTAT=$$INOUTPT^ECUTL0(ECDFN,+ECDT) ;pat stat may not need
"RTN","ECEFPAT",62,0)
 I $G(EC4)="" D GETCLN^ECEDF
"RTN","ECEFPAT",63,0)
 S ECID=$S(+EC4:$P($G(^SC(+EC4,0)),"^",7),1:""),ECINP=ECPTSTAT
"RTN","ECEFPAT",64,0)
 I $S($P(ECPCE,"~",2)="N":0,$P(ECPCE,"~",2)="O"&(ECINP'="O"):0,1:1) D
"RTN","ECEFPAT",65,0)
 .D CHKDT(2)
"RTN","ECEFPAT",66,0)
 I +EC4 S ECRES=$$CLNCK^SDUTL2(+EC4,0) I 'ECRES D  S ECERR=1
"RTN","ECEFPAT",67,0)
 .S ^TMP($J,"ECMSG",1)=ECRES_" Clinic MUST be corrected before filing."
"RTN","ECEFPAT",68,0)
 Q:ECERR  I ECFLG D NEWIEN
"RTN","ECEFPAT",69,0)
 S ECCPT=$S(ECP["ICPT":+ECP,1:$P($G(^EC(725,+ECP,0)),U,5))
"RTN","ECEFPAT",70,0)
 ;validate CPT value and handle HCPCS name to IEN conversion (HD223010)
"RTN","ECEFPAT",71,0)
 S ECCPT=+$$CPT^ICPTCOD(ECCPT)
"RTN","ECEFPAT",72,0)
 S ECCPT=$S(+ECCPT>0:ECCPT,1:0)
"RTN","ECEFPAT",73,0)
 K DA,DR,DIE S DIE="^ECH(",(DA,ECFN)=ECIEN K ECIEN
"RTN","ECEFPAT",74,0)
 S DR=".01////"_ECFN_";1////"_ECDFN_";3////"_ECL_";4////"_ECS
"RTN","ECEFPAT",75,0)
 S DR=DR_";5////"_ECM_";6////"_ECD_";7////"_+ECC_";9////"_ECVOL
"RTN","ECEFPAT",76,0)
 S $P(^ECH(ECFN,0),"^",9)=ECP
"RTN","ECEFPAT",77,0)
 D ^DIE I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",78,0)
 S DA=ECFN,DR="11////"_ECMN_";13////"_ECDUZ_";2////"_ECDT
"RTN","ECEFPAT",79,0)
 ;S ECPXREAS=$G(ECPXREAS) ;112
"RTN","ECEFPAT",80,0)
 S DR=DR_";19////"_$S(+ECCPT:ECCPT,1:"@")_";20////"_ECDX
"RTN","ECEFPAT",81,0)
 S DR=DR_";26////"_$G(EC4)_";27////"_$G(ECID)_";29////"_ECPTSTAT
"RTN","ECEFPAT",82,0)
 S DR=DR_";34////"_$S($G(ECPXREAS)="":"@",1:ECPXREAS) ;112
"RTN","ECEFPAT",83,0)
 S DR=DR_";43////"_$S($G(ECPXREA2)="":"@",1:ECPXREA2) ;112
"RTN","ECEFPAT",84,0)
 S DR=DR_";44////"_$S($G(ECPXREA3)="":"@",1:ECPXREA3) ;112
"RTN","ECEFPAT",85,0)
 D ^DIE I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",86,0)
 I ECDX S ^DISV(DUZ,"^ICD9(")=ECDX  ;last ICD9 code
"RTN","ECEFPAT",87,0)
 S ECX=$O(ECPRV("A"),-1) I ECX'="" S ^DISV(DUZ,"^VA(200,")=+ECPRV(ECX)
"RTN","ECEFPAT",88,0)
 ;Remove Old CPT modifiers
"RTN","ECEFPAT",89,0)
 I 'ECFLG D
"RTN","ECEFPAT",90,0)
 . K OLDMOD S (ECDA,DA(1))=ECFN,DIK="^ECH("_DA(1)_",""MOD"",",DA=0
"RTN","ECEFPAT",91,0)
 . F  S DA=$O(^ECH(ECDA,"MOD",DA)) Q:'DA  S OLDMOD(DA)="" D ^DIK
"RTN","ECEFPAT",92,0)
 . K DA,ECDA,DIK,^ECH(ECFN,"MOD")
"RTN","ECEFPAT",93,0)
 .;Remove old secondary diagnosis codes
"RTN","ECEFPAT",94,0)
 . K OLDDXS S (ECDA,DA(1))=ECFN,DIK="^ECH("_DA(1)_",""DX"",",DA=0
"RTN","ECEFPAT",95,0)
 . F  S DA=$O(^ECH(ECDA,"DX",DA)) Q:'DA  S OLDDXS(DA)="" D ^DIK
"RTN","ECEFPAT",96,0)
 . K DA,ECDA,DIK,^ECH(ECFN,"DX")
"RTN","ECEFPAT",97,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",98,0)
 ;File multiple providers
"RTN","ECEFPAT",99,0)
 S ECFIL=$$FILPRV^ECPRVMUT(ECFN,.ECPRV,.ECOUT) K ECOUT
"RTN","ECEFPAT",100,0)
 I 'ECFIL D RECDEL,MSG Q
"RTN","ECEFPAT",101,0)
 ;File CPT modifiers
"RTN","ECEFPAT",102,0)
 I $G(ECMOD)'="" D
"RTN","ECEFPAT",103,0)
 . S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,36,0),U,2)
"RTN","ECEFPAT",104,0)
 . S DIC="^ECH("_DA(1)_","_"""MOD"""_","
"RTN","ECEFPAT",105,0)
 . F ECX=1:1:$L(ECMOD,"^") S MODIEN=$P(ECMOD,U,ECX) I +MODIEN>0 D
"RTN","ECEFPAT",106,0)
 . . K DD,DO S X=MODIEN D FILE^DICN
"RTN","ECEFPAT",107,0)
 . K MODIEN,DIC
"RTN","ECEFPAT",108,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",109,0)
 ; File multiple secondary diagnosis codes
"RTN","ECEFPAT",110,0)
 I $G(ECDXS)'="" D
"RTN","ECEFPAT",111,0)
 . S DXS="",DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,38,0),U,2)
"RTN","ECEFPAT",112,0)
 . S DIC="^ECH("_DA(1)_","_"""DX"""_",",ECDXY=ECDX K ECDXX
"RTN","ECEFPAT",113,0)
 . F ECX=1:1:$L(ECDXS,"^") S DXSIEN=$P(ECDXS,U,ECX) I +DXSIEN>0 D
"RTN","ECEFPAT",114,0)
 . . S DXCDE=$$ICDDX^ICDCODE(DXSIEN,ECDT) Q:+DXCDE<0  I '$P(DXCDE,U,10) Q
"RTN","ECEFPAT",115,0)
 . . K DD,DO S X=DXSIEN D FILE^DICN
"RTN","ECEFPAT",116,0)
 . . S DXCDE=$P(DXCDE,U,2),ECDXX(DXCDE)=DXSIEN
"RTN","ECEFPAT",117,0)
 . . S ^DISV(DUZ,"^ICD9(")=DXSIEN  ;last ICD9 code
"RTN","ECEFPAT",118,0)
 . ; Update all procedures for an encounter with same primary & second dx
"RTN","ECEFPAT",119,0)
 . S PXUPD=$$PXUPD^ECUTL2(ECDFN,ECDT,ECL,EC4,ECDXY,.ECDXX,ECFN)
"RTN","ECEFPAT",120,0)
 . K PXUPD,ECDXY,ECDXX,DXS,DXSIEN,DIC,DXCDE,DA,DD,DO
"RTN","ECEFPAT",121,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",122,0)
 S DA=ECFN
"RTN","ECEFPAT",123,0)
 ;File classification AO^IR^SC^EC^MST^HNC^CV^SHAD
"RTN","ECEFPAT",124,0)
 I $G(ECLASS)'="" D
"RTN","ECEFPAT",125,0)
 . S CLSTR="21^22^24^23^35^39^40^41",DR=""
"RTN","ECEFPAT",126,0)
 . F ECX=1:1:$L(CLSTR,"^") D
"RTN","ECEFPAT",127,0)
 . . S DR=DR_$P(CLSTR,U,ECX)_"////"_$P(ECLASS,U,ECX)_";"
"RTN","ECEFPAT",128,0)
 . S DR=$E(DR,1,($L(DR)-1)) D ^DIE
"RTN","ECEFPAT",129,0)
 . K CLSTR,DR,DIE
"RTN","ECEFPAT",130,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",131,0)
 ;
"RTN","ECEFPAT",132,0)
PCE ; format PCE data to send
"RTN","ECEFPAT",133,0)
 I ($P(ECPCE,"~",2)="N")!($P(ECPCE,"~",2)="O"&(ECINP'="O")) D  Q
"RTN","ECEFPAT",134,0)
 .S ^TMP($J,"ECMSG",1)="1^Record Filed"
"RTN","ECEFPAT",135,0)
 D:ECFLG PCE^ECBEN2U I 'ECFLG S EC(0)=^ECH(ECFN,0) D PCEE^ECBEN2U K EC
"RTN","ECEFPAT",136,0)
 I $G(ECOUT)!(ECERR) D  Q
"RTN","ECEFPAT",137,0)
 . D RECDEL S STR=$S($G(^ECH(ECFN,"R")):^("R"),1:" PCE Data Missing")
"RTN","ECEFPAT",138,0)
 . S ^TMP($J,"ECMSG",1)="0^Record Not Filed, "_STR K STR
"RTN","ECEFPAT",139,0)
 S ^TMP($J,"ECMSG",1)="1^Record Filed"_U_$G(ECIEN)
"RTN","ECEFPAT",140,0)
 Q
"RTN","ECEFPAT",141,0)
 ;
"RTN","ECEFPAT",142,0)
NEWIEN ;Create new IEN in file #721
"RTN","ECEFPAT",143,0)
 N DIC,DA,DD,DO,ECRN
"RTN","ECEFPAT",144,0)
RLCK L +^ECH(0):60 S ECRN=$P(^ECH(0),"^",3)+1
"RTN","ECEFPAT",145,0)
 I $D(^ECH(ECRN)) S $P(^ECH(0),"^",3)=$P(^(0),"^",3)+1 L -^ECH(0) G RLCK
"RTN","ECEFPAT",146,0)
 L -^ECH(0) S DIC(0)="L",DIC="^ECH(",X=ECRN
"RTN","ECEFPAT",147,0)
 D FILE^DICN S ECIEN=+Y
"RTN","ECEFPAT",148,0)
 Q
"RTN","ECEFPAT",149,0)
RECDEL ; Delete record
"RTN","ECEFPAT",150,0)
 ;restore old data
"RTN","ECEFPAT",151,0)
 I 'ECFLG D  Q
"RTN","ECEFPAT",152,0)
 . I $O(OLDMOD("")) D
"RTN","ECEFPAT",153,0)
 . . S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,36,0),U,2)
"RTN","ECEFPAT",154,0)
 . . S DIC="^ECH("_DA(1)_","_"""MOD"""_",",ECX=0
"RTN","ECEFPAT",155,0)
 . . F  S ECX=$O(OLDMOD(ECX)) Q:'ECX  I ECX>0 K DD,DO S X=ECX D FILE^DICN
"RTN","ECEFPAT",156,0)
 . I $O(OLDDXS("")) D
"RTN","ECEFPAT",157,0)
 . . S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,38,0),U,2)
"RTN","ECEFPAT",158,0)
 . . S DIC="^ECH("_DA(1)_","_"""DX"""_",",ECX=0
"RTN","ECEFPAT",159,0)
 . . F  S ECX=$O(OLDDXS(ECX)) Q:'ECX  I ECX>0 K DD,DO S X=ECX D FILE^DICN
"RTN","ECEFPAT",160,0)
 . K DIC,DA,DD,DO,OLDMOD,OLDDXS,ECX
"RTN","ECEFPAT",161,0)
 S DA=ECFN,DIK="^ECH(" D ^DIK K DA,DIK
"RTN","ECEFPAT",162,0)
 Q
"RTN","ECEFPAT",163,0)
MSG ;Record not filed
"RTN","ECEFPAT",164,0)
 S ^TMP($J,"ECMSG",1)="0^Record not Filed"
"RTN","ECEFPAT",165,0)
 Q
"RTN","ECEFPAT",166,0)
CHKDT(FLG) ;Required Data Check
"RTN","ECEFPAT",167,0)
 N I,C
"RTN","ECEFPAT",168,0)
 S C=1
"RTN","ECEFPAT",169,0)
 I FLG=1 D  Q
"RTN","ECEFPAT",170,0)
 .F I="ECD","ECC","ECL","ECDT","ECP","ECDFN","ECMN","ECDUZ","ECPTSTAT" D
"RTN","ECEFPAT",171,0)
 ..I $G(@I)="" S ^TMP($J,"ECMSG",C)="0^Key data missing "_I,C=C+1,ECERR=1
"RTN","ECEFPAT",172,0)
 .I $G(ECDEL),$D(ECIEN) K ^TMP($J,"ECMSG") S ECERR=0
"RTN","ECEFPAT",173,0)
 ;check PCE data
"RTN","ECEFPAT",174,0)
 I FLG=2 D  Q
"RTN","ECEFPAT",175,0)
 .F I="EC4","ECDX" D  Q
"RTN","ECEFPAT",176,0)
 ..I $G(@I)="" S ^TMP($J,"ECMSG",C)="0^Key PCE data missing "_I,C=C+1,ECERR=1
"RTN","ECEFPAT",177,0)
 Q
"RTN","ECEFPAT",178,0)
VALDATA ;validate data
"RTN","ECEFPAT",179,0)
 N ECRRX
"RTN","ECEFPAT",180,0)
 D CHK^DIE(721,1,,"`"_ECDFN,.ECRRX) I ECRRX'=ECDFN D  Q
"RTN","ECEFPAT",181,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Patient"
"RTN","ECEFPAT",182,0)
 D CHK^DIE(721,2,,ECDT,.ECRRX) I ECRRX'=ECDT D  Q
"RTN","ECEFPAT",183,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Procedure Date"
"RTN","ECEFPAT",184,0)
 D CHK^DIE(721,3,,"`"_ECL,.ECRRX) I ECRRX'=ECL D  Q
"RTN","ECEFPAT",185,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Location"
"RTN","ECEFPAT",186,0)
 D CHK^DIE(721,6,,"`"_ECD,.ECRRX) I ECRRX'=ECD D  Q
"RTN","ECEFPAT",187,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid DSS Unit"
"RTN","ECEFPAT",188,0)
 D CHK^DIE(721,7,,"`"_ECC,.ECRRX) I ECRRX'=ECC D  Q
"RTN","ECEFPAT",189,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Category"
"RTN","ECEFPAT",190,0)
 D  I ECERR Q
"RTN","ECEFPAT",191,0)
 .I ECP["ICPT" S ECRRX=$$CPT^ICPTCOD(+ECP,ECDT) I +ECRRX>0,$P(ECRRX,U,7) Q
"RTN","ECEFPAT",192,0)
 .I ECP["EC",$D(^EC(725,+ECP,0)) Q
"RTN","ECEFPAT",193,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Procedure"
"RTN","ECEFPAT",194,0)
 D CHK^DIE(721,11,,"`"_ECMN,.ECRRX) I ECRRX'=ECMN D  Q
"RTN","ECEFPAT",195,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Ordering Section"
"RTN","ECEFPAT",196,0)
 D CHK^DIE(721,20,,"`"_ECDX,.ECRRX) I ECRRX'=ECDX D  Q
"RTN","ECEFPAT",197,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Primary Diagnosis"
"RTN","ECEFPAT",198,0)
 I $G(EC4)'="" D CHK^DIE(721,26,,"`"_EC4,.ECRRX) I ECRRX'=EC4 D  Q
"RTN","ECEFPAT",199,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Associated Clinic"
"RTN","ECEFPAT",200,0)
 Q
"RTN","ECPAT")
0^11^B34100564^B32218957
"RTN","ECPAT",1,0)
ECPAT ;BIR/MAM,JPW - Event Capture Patient Summary ;1/4/12  12:05
"RTN","ECPAT",2,0)
 ;;2.0;EVENT CAPTURE;**5,18,47,72,95,112**;8 May 96;Build 18
"RTN","ECPAT",3,0)
SET ; set ^TMP($J,"ECPAT")
"RTN","ECPAT",4,0)
 N ECPXD,EC725
"RTN","ECPAT",5,0)
 I $Y+11>IOSL D PAGE I ECOUT Q
"RTN","ECPAT",6,0)
 S ECEC=$G(^ECH(ECFN,0))
"RTN","ECPAT",7,0)
 S ECL=+$P(ECEC,"^",4),ECC=+$P(ECEC,"^",8),ECP=$P(ECEC,"^",9),ECD=+$P(ECEC,"^",7),ECV=+$P(ECEC,"^",10)
"RTN","ECPAT",8,0)
 S ECU=$$GETPPRV^ECPRVMUT(ECFN,.ECUN),ECUN=$S(ECU:"UNKNOWN",1:$P(ECUN,"^",2))
"RTN","ECPAT",9,0)
 Q:ECP']""
"RTN","ECPAT",10,0)
 ;set default med spec and ord sect to administrative if blank
"RTN","ECPAT",11,0)
 S ECM=$S($P(ECEC,"^",6)]"":+$P(ECEC,"^",6),1:108),ECO=$S($P(ECEC,"^",12)]"":+$P(ECEC,"^",12),1:108)
"RTN","ECPAT",12,0)
 S ECMN=$S($P($G(^ECC(723,ECM,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPAT",13,0)
 S ECON=$S($P($G(^ECC(723,ECO,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPAT",14,0)
 S ECS=+$P(ECEC,"^",5),ECSN=$S($P($G(^DIC(49,ECS,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPAT",15,0)
 S ECCN=$S($P($G(^EC(726,ECC,0)),"^")]"":$P(^(0),"^"),1:"None")
"RTN","ECPAT",16,0)
 S ECPSY=+$O(^ECJ("AP",ECL,ECD,ECC,ECP,""))
"RTN","ECPAT",17,0)
 S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2)
"RTN","ECPAT",18,0)
 S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,1:725)
"RTN","ECPAT",19,0)
 S ECCPT=$S(ECFILE=81:+ECP,1:$P($G(^EC(725,+ECP,0)),"^",5)),ECPXD=""
"RTN","ECPAT",20,0)
 I ECCPT'="" D
"RTN","ECPAT",21,0)
 . S ECPXD=$$CPT^ICPTCOD(ECCPT,$P(ECEC,"^",3)),ECCPT=$P(ECPXD,"^",2)
"RTN","ECPAT",22,0)
 . I ECCPT'="" S ECCPT=ECCPT_" "
"RTN","ECPAT",23,0)
 I ECFILE=81 S ECPN=$S($P(ECPXD,"^",3)]"":$P(ECPXD,"^",3),1:"UNKNOWN")
"RTN","ECPAT",24,0)
 I ECFILE=725 D
"RTN","ECPAT",25,0)
 .S EC725=$G(^EC(725,+ECP,0)),ECPN=$P(EC725,"^",2)_" "_$P(EC725,"^")
"RTN","ECPAT",26,0)
 S ECPN=$J(ECCPT,6)_$E(ECPN,1,38)_$S(ECPSYN]"":" ["_ECPSYN_"] ",1:"")
"RTN","ECPAT",27,0)
 S ECDN=$S($P($G(^ECD(ECD,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPAT",28,0)
 S ECLN=$S($P($G(^DIC(4,ECL,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPAT",29,0)
 S ECUN=$S(ECUN'="UNKNOWN":$P(ECUN,",",2)_" "_$P(ECUN,","),1:"UNKNOWN")
"RTN","ECPAT",30,0)
 S ECDT=$$FMTE^XLFDT(DATE)
"RTN","ECPAT",31,0)
 ;
"RTN","ECPAT",32,0)
 ;ALB/ESD - Add Procedure Reason to report
"RTN","ECPAT",33,0)
 N ECLNK,ECRAR,ECPRSN,ECPRSN2,ECPRSN3 ;112
"RTN","ECPAT",34,0)
 D GETS^DIQ(721,ECFN,"34;43;44",,"ECRAR") ;112 Get all reasons
"RTN","ECPAT",35,0)
 S ECPRSN=$G(ECRAR(721,ECFN_",",34)) S:ECPRSN="" ECPRSN="REASON NOT DEFINED" ;112
"RTN","ECPAT",36,0)
 S ECPRSN2=$G(ECRAR(721,ECFN_",",43)) ;112
"RTN","ECPAT",37,0)
 S ECPRSN3=$G(ECRAR(721,ECFN_",",44)) ;112
"RTN","ECPAT",38,0)
 ;
"RTN","ECPAT",39,0)
 ;Get Procedure CPT modifiers
"RTN","ECPAT",40,0)
 S ECMODF=0 K ECMOD
"RTN","ECPAT",41,0)
 I $O(^ECH(ECFN,"MOD",0))'="" S ECMODF=$$MOD^ECUTL(ECFN,"E",.ECMOD)
"RTN","ECPAT",42,0)
 I $D(ECY) DO
"RTN","ECPAT",43,0)
 .W !!,ECDT,?32,ECCN,?87,ECPN_" ("_ECV_")",! ;112
"RTN","ECPAT",44,0)
 .I ECMODF S MD="" D  K MD I ECOUT Q
"RTN","ECPAT",45,0)
 ..F  S MD=$O(ECMOD(MD)) Q:MD=""  D  I ECOUT Q
"RTN","ECPAT",46,0)
 ...D:$Y+5>IOSL PAGE Q:ECOUT  W ?91,"- ",MD," ",$P(ECMOD(MD),U,3),! ;112
"RTN","ECPAT",47,0)
 .W $E(ECLN,1,22),?32,ECSN,?87,ECMN,! ;112
"RTN","ECPAT",48,0)
 .I $D(ECRY) D  ;112
"RTN","ECPAT",49,0)
 ..W ECPRSN,?32,ECON,?87,ECUN ;112
"RTN","ECPAT",50,0)
 ..I $G(ECPRSN2)'="" W !,ECPRSN2 ;112
"RTN","ECPAT",51,0)
 ..I $G(ECPRSN3)'="" W !,ECPRSN3 ;112
"RTN","ECPAT",52,0)
 I $D(ECN) DO
"RTN","ECPAT",53,0)
 .W !!,ECDT,?32,ECPN_" ("_ECV_")",! ;112
"RTN","ECPAT",54,0)
 .I ECMODF S MD="" D  K MD I ECOUT Q
"RTN","ECPAT",55,0)
 ..F  S MD=$O(ECMOD(MD)) Q:MD=""  D  I ECOUT Q
"RTN","ECPAT",56,0)
 ...D:$Y+5>IOSL PAGE Q:ECOUT  W ?36,"- ",MD," ",$P(ECMOD(MD),U,3),! ;112
"RTN","ECPAT",57,0)
 .W $E(ECLN,1,22),?32,ECSN,?87,ECMN,! ;112
"RTN","ECPAT",58,0)
 .I $D(ECRY) D  ;112
"RTN","ECPAT",59,0)
 ..W ECPRSN,?32,ECON,?87,ECUN ;112
"RTN","ECPAT",60,0)
 ..I $G(ECPRSN2)'="" W !,ECPRSN2 ;112
"RTN","ECPAT",61,0)
 ..I $G(ECPRSN3)'="" W !,ECPRSN3 ;112
"RTN","ECPAT",62,0)
 Q
"RTN","ECPAT",63,0)
PAT ; entry point
"RTN","ECPAT",64,0)
 K DIC S DIC=2,DIC(0)="QEAMZ",DIC("A")="Select Patient: " D ^DIC K DIC G:Y<0 END S ECDFN=+Y,ECPAT=$P(Y,"^",2)
"RTN","ECPAT",65,0)
DATE K %DT S %DT="AEX",%DT("A")="Start with Date:  " D ^%DT G:Y<0 END S ECSD=Y,%DT("A")="End with Date:  " D ^%DT G:Y<0 END S ECED=Y I ECED<ECSD W !,"End date must be after start date",! G DATE
"RTN","ECPAT",66,0)
 S ECDATE=$$FMTE^XLFDT(ECSD)_"^"_$$FMTE^XLFDT(ECED),ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECPAT",67,0)
 D REASON^ECRUTL ;* Prompt to report Procedure Reasons
"RTN","ECPAT",68,0)
 K IOP,%ZIS,POP,IO("Q") S %ZIS("A")="Select Device: ",%ZIS="QM" W !!,"This report is designed to use a 132 column format.",! D ^%ZIS G:POP END
"RTN","ECPAT",69,0)
 I $D(IO("Q")) S:$D(ECRY) ZTSAVE("ECRY")=""
"RTN","ECPAT",70,0)
 I $D(IO("Q")) K IO("Q") S (ZTSAVE("ECDFN"),ZTSAVE("ECPAT"),ZTSAVE("ECDATE"),ZTSAVE("ECED"),ZTSAVE("ECSD"))="",ZTDESC="EVENT CAPTURE PATIENT SUMMARY",ZTRTN="SUM^ECPAT",ZTIO=ION D ^%ZTLOAD,HOME^%ZIS G END
"RTN","ECPAT",71,0)
SUM ; entry when queued
"RTN","ECPAT",72,0)
 N EXPRSN,ECPRSN2,ECPRSN3,%H ;112
"RTN","ECPAT",73,0)
 S %H=$H D YX^%DTC S ECRDT=Y
"RTN","ECPAT",74,0)
 U IO S DATE=$O(^ECH("APAT",ECDFN,ECSD)) I 'DATE W:$Y @IOF W !!,"No Data for "_ECPAT_" during the time selected." G END
"RTN","ECPAT",75,0)
 S ECFN=+$O(^ECH("APAT",ECDFN,DATE,0)),ECL=+$P(^ECH(ECFN,0),"^",4) D BRO D:$D(ECY) HDR D:$D(ECN) HDR1
"RTN","ECPAT",76,0)
 S DATE=ECSD,(ECFN,ECOUT)=0 F I=0:0 S DATE=$O(^ECH("APAT",ECDFN,DATE)) Q:'DATE!(DATE>ECED)!(ECOUT)  F I=0:0 S ECFN=$O(^ECH("APAT",ECDFN,DATE,ECFN)) Q:'ECFN!(ECOUT)  D SET
"RTN","ECPAT",77,0)
 D FOOTER  ;for last page
"RTN","ECPAT",78,0)
END I $D(ECGUI) D ^ECKILL Q
"RTN","ECPAT",79,0)
 W ! I $D(ECOUT),'ECOUT D
"RTN","ECPAT",80,0)
 . I $E(IOST,1,2)="C-" W !!,"Press <RET> to continue  " R X:DTIME
"RTN","ECPAT",81,0)
 W @IOF D ^%ZISC D ^ECKILL S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECPAT",82,0)
 Q
"RTN","ECPAT",83,0)
HDR ; print heading
"RTN","ECPAT",84,0)
 ;
"RTN","ECPAT",85,0)
 ;ALB/ESD - Add Procedure Reason to column headings
"RTN","ECPAT",86,0)
 W:$Y @IOF
"RTN","ECPAT",87,0)
 W !,?32,"EVENT CAPTURE PATIENT SUMMARY FOR "_ECPAT,!,?32,"FROM "_$P(ECDATE,"^")_"   TO "_$P(ECDATE,"^",2),!,?32,"Run Date : ",ECRDT
"RTN","ECPAT",88,0)
 W !,"PROCEDURE DATE/TIME",?32,"CATEGORY",?87,"PROCEDURE",!,?87,"PROCEDURE (CPT) MODIFIER",!,"LOCATION",?32,"SERVICE",?87,"SECTION" ;112
"RTN","ECPAT",89,0)
 W !
"RTN","ECPAT",90,0)
 W:$D(ECRY) "PROCEDURE REASON(S)" ;112
"RTN","ECPAT",91,0)
 W ?32,"ORDERING SECTION",?87,"PROVIDER",! F LINE=1:1:132 W "-" ;112
"RTN","ECPAT",92,0)
 W !
"RTN","ECPAT",93,0)
 Q
"RTN","ECPAT",94,0)
PAGE ; end of page
"RTN","ECPAT",95,0)
 I $G(X)'["?" D FOOTER
"RTN","ECPAT",96,0)
 S X="" I $E(IOST,1,2)="C-" W !!,"Press <RET> to continue, or ^ to quit   " R X:DTIME I '$T!(X="^") S ECOUT=1 Q
"RTN","ECPAT",97,0)
 I X["?" W !!,"If you want to continue with this report, press <RET>.  Entering an ^ will",!,"exit you from this option." G PAGE
"RTN","ECPAT",98,0)
 D:$D(ECY) HDR D:$D(ECN) HDR1
"RTN","ECPAT",99,0)
 Q
"RTN","ECPAT",100,0)
HDR1 ; print heading without categories
"RTN","ECPAT",101,0)
 ;
"RTN","ECPAT",102,0)
 ;ALB/ESD - Add Run Date to header
"RTN","ECPAT",103,0)
 W @IOF,!!,?32,"EVENT CAPTURE PATIENT SUMMARY FOR "_ECPAT,!,?36,"FROM "_$P(ECDATE,"^")_"   TO "_$P(ECDATE,"^",2),!,?36,"Run Date : ",ECRDT
"RTN","ECPAT",104,0)
 ;
"RTN","ECPAT",105,0)
 ;ALB/ESD - Add Procedure Reason to column headings
"RTN","ECPAT",106,0)
 W !!,"PROCEDURE DATE/TIME",?32,"PROCEDURE(VOLUME)",!,?32,"PROCEDURE (CPT) MODIFIER",!,"LOCATION",?32,"SERVICE",?87,"SECTION" ;112
"RTN","ECPAT",107,0)
 W !
"RTN","ECPAT",108,0)
 W:$D(ECRY) "PROCEDURE REASON(S)" ;112
"RTN","ECPAT",109,0)
 W ?32,"ORDERING SECTION",?87,"PROVIDER",! F LINE=1:1:132 W "-" ;112
"RTN","ECPAT",110,0)
 W !
"RTN","ECPAT",111,0)
 Q
"RTN","ECPAT",112,0)
 ;
"RTN","ECPAT",113,0)
FOOTER ;print page footer
"RTN","ECPAT",114,0)
 W !!?4,"Volume totals may represent days, minutes, numbers of procedures"
"RTN","ECPAT",115,0)
 W !?4,"and/or a combination of these."
"RTN","ECPAT",116,0)
 Q
"RTN","ECPAT",117,0)
 ;
"RTN","ECPAT",118,0)
BRO ;ask prt with category or without
"RTN","ECPAT",119,0)
 S ECN=1
"RTN","ECPAT",120,0)
 Q
"RTN","ECPROV3")
0^5^B40301318^B36456147
"RTN","ECPROV3",1,0)
ECPROV3 ;BIR/MAM,JPW - Event Capture Provider Summary (cont'd) ; 04 Jan 2012  12:06 PM
"RTN","ECPROV3",2,0)
 ;;2.0;EVENT CAPTURE;**5,8,18,29,47,56,63,72,95,112**;8 May 96;Build 18
"RTN","ECPROV3",3,0)
 ; This routine is used when printing the report for
"RTN","ECPROV3",4,0)
 ; all ACCESSIBLE DSS Units
"RTN","ECPROV3",5,0)
 ;JAM/3/7/03, This routine now combines ECPROV3, ECPROV4 and ECPROV5
"RTN","ECPROV3",6,0)
 ;
"RTN","ECPROV3",7,0)
 N %H ;112
"RTN","ECPROV3",8,0)
 S %H=$H D YX^%DTC S ECRDT=Y
"RTN","ECPROV3",9,0)
 I ECL D  D LOC,PRINT Q
"RTN","ECPROV3",10,0)
 .I ECPRV=1 D UNIT Q
"RTN","ECPROV3",11,0)
 .I 'ECPRV S ECC=+$P(^ECD(ECD,0),U,11) Q
"RTN","ECPROV3",12,0)
 S ECL=0 D
"RTN","ECPROV3",13,0)
 .F I=0:0 S ECL=$O(^ECH("ADT",ECL)) Q:'ECL  D
"RTN","ECPROV3",14,0)
 ..S ECLN=$P(^DIC(4,ECL,0),"^") I ECPRV D UNIT
"RTN","ECPROV3",15,0)
 ..I 'ECPRV S ECC=+$P(^ECD(ECD,0),U,11)
"RTN","ECPROV3",16,0)
 ..D LOC
"RTN","ECPROV3",17,0)
PRINT ;Changes below were made by VMP to correct NOIS ATG-1003-32545
"RTN","ECPROV3",18,0)
 S (ECLN,ECPN)=0,ECCN=""
"RTN","ECPROV3",19,0)
 F I=0:0 S ECLN=$O(^TMP($J,ECLN)) Q:ECLN=""!(ECOUT)!(ECLN["^")  D
"RTN","ECPROV3",20,0)
 .I 'ECPRV D CATS Q
"RTN","ECPROV3",21,0)
 . S ECDN="" D NOUNIT F I=0:0 S ECDN=$O(^TMP($J,ECLN,ECDN)) Q:ECDN=""!(ECOUT)  D CATS
"RTN","ECPROV3",22,0)
 K ECPNAM
"RTN","ECPROV3",23,0)
 D FOOTER  ;print footer on last page
"RTN","ECPROV3",24,0)
 Q
"RTN","ECPROV3",25,0)
CATS ; continue looping
"RTN","ECPROV3",26,0)
 I $O(^TMP($J,ECLN,ECDN,""))']"" D PAGE W !!!,?12,"NO PROCEDURES" S ECPG=1 Q
"RTN","ECPROV3",27,0)
 D PAGE Q:ECOUT  S ECPG=1,ECUN=0 F I=0:0 S ECUN=$O(^TMP($J,ECLN,ECDN,ECUN)) Q:ECUN=""!(ECOUT)  S ECINZ="^"_$O(^(ECUN,0)) D:$Y+10>IOSL PAGE Q:ECOUT  D PRO
"RTN","ECPROV3",28,0)
 Q
"RTN","ECPROV3",29,0)
PRO I $Y+13>IOSL D PAGE I ECOUT Q
"RTN","ECPROV3",30,0)
 W !!,ECUN S ECCN=0 F I=0:0 S ECCN=$O(^TMP($J,ECINZ,ECCN)) D:ECCN="" TOTP Q:ECCN=""!(ECOUT)  D MORE
"RTN","ECPROV3",31,0)
 Q
"RTN","ECPROV3",32,0)
MORE ;
"RTN","ECPROV3",33,0)
 ;ALB/ESD - Loop through to get procedure reason and print
"RTN","ECPROV3",34,0)
 W !,?3,ECCN S ECPN=0,(ECPRSN,ECPI)=""
"RTN","ECPROV3",35,0)
 F  S ECPN=$O(^TMP($J,ECINZ,ECCN,ECPN)) Q:ECPN=""!(ECOUT)  S ECUSER=1 D:$Y+10>IOSL PAGE Q:ECOUT  K ECUSER F  S ECPRSN=$O(^TMP($J,ECINZ,ECCN,ECPN,ECPRSN)) Q:ECPRSN=""!(ECOUT)  DO
"RTN","ECPROV3",36,0)
 .S ECCPT=$S($P(ECPN,"~",3)="I":$P(ECPN,"~",2),1:$P($G(^EC(725,$P(ECPN,"~",2),0)),"^",5))
"RTN","ECPROV3",37,0)
 .I ECCPT'="" D
"RTN","ECPROV3",38,0)
 ..;Changes made by VMP to correct NOIS ATG-1003-32545
"RTN","ECPROV3",39,0)
 ..;use end date/date range to get CPT description; CTD project.
"RTN","ECPROV3",40,0)
 ..S ECPI=$$CPT^ICPTCOD(ECCPT,$P(ECED,".")),ECCPT=$P(ECPI,"^",2)
"RTN","ECPROV3",41,0)
 .S EC725="" I $P(ECPN,"~",3)="E" S EC725=$G(^EC(725,+$P(ECPN,"~",2),0))
"RTN","ECPROV3",42,0)
 .S ECPNAM=$S($P(ECPN,"~",3)="E":$P(EC725,"^"),$P(ECPN,"~",3)="I":$P(ECPI,"^",3),1:"UNKNOWN") ;112
"RTN","ECPROV3",43,0)
 .S ECPSY=$P(ECPN,"~",4),ECPSYN=""
"RTN","ECPROV3",44,0)
 .I ECPSY'="" S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2)
"RTN","ECPROV3",45,0)
 .W !,?6,$J(ECCPT_" ",6),$J($S($P($G(EC725),"^",2)="":ECCPT_" ",1:$P($G(EC725),"^",2)_" "),6),?18,$E(ECPNAM,1,40) ;112
"RTN","ECPROV3",46,0)
 .W:ECPSYN'="" " [",$E(ECPSYN,1,25),"]"
"RTN","ECPROV3",47,0)
 .W:$D(ECRY) ?70,ECPRSN
"RTN","ECPROV3",48,0)
 .W ?105,$J(^TMP($J,ECINZ,ECCN,ECPN,ECPRSN),6)
"RTN","ECPROV3",49,0)
 .;print CPT procedure modifiers
"RTN","ECPROV3",50,0)
 .S IEN=""
"RTN","ECPROV3",51,0)
 .F  S IEN=$O(^TMP($J,ECINZ,ECCN,ECPN,ECPRSN,"MOD",IEN)) Q:IEN=""  D  I ECOUT Q
"RTN","ECPROV3",52,0)
 ..;used end date to get description,CTD project
"RTN","ECPROV3",53,0)
 ..S MODI=$$MOD^ICPTMOD(IEN,"I",$P(ECED,"."))
"RTN","ECPROV3",54,0)
 ..S MOD=$P(MODI,"^",2) I MOD="" K MODI Q
"RTN","ECPROV3",55,0)
 ..S MODESC=$P(MODI,"^",3) I MODESC="" S MODESC="UNKNOWN"
"RTN","ECPROV3",56,0)
 ..S MODAMT=^TMP($J,ECINZ,ECCN,ECPN,ECPRSN,"MOD",IEN)
"RTN","ECPROV3",57,0)
 ..W !?10,"- ",MOD," ",MODESC," (",MODAMT,")"
"RTN","ECPROV3",58,0)
 ..I ($Y+6)>IOSL D PAGE
"RTN","ECPROV3",59,0)
 .K MODESC,MOD,IEN,MODAMT,MODI,EC725
"RTN","ECPROV3",60,0)
 Q
"RTN","ECPROV3",61,0)
LOC S (ECDFN,ECOUT,^TMP($J,ECLN))=0
"RTN","ECPROV3",62,0)
 F I=0:0 S ECDFN=$O(^ECH("ADT",ECL,ECDFN)) Q:'ECDFN  D
"RTN","ECPROV3",63,0)
 .I ECPRV D GECD Q
"RTN","ECPROV3",64,0)
 .D GMM
"RTN","ECPROV3",65,0)
 Q
"RTN","ECPROV3",66,0)
GECD S ECD=0 F I=0:0 S ECD=$O(^ECH("ADT",ECL,ECDFN,ECD)) Q:'ECD  D GMM
"RTN","ECPROV3",67,0)
 Q
"RTN","ECPROV3",68,0)
GMM S MM=ECSD F I=0:0 S MM=$O(^ECH("ADT",ECL,ECDFN,ECD,MM)) Q:'MM!(MM>ECED)  D LOC1
"RTN","ECPROV3",69,0)
 Q
"RTN","ECPROV3",70,0)
LOC1 S ECFN=0 F I=0:0 S ECFN=$O(^ECH("ADT",ECL,ECDFN,ECD,MM,ECFN)) Q:'ECFN  D UTL
"RTN","ECPROV3",71,0)
 Q
"RTN","ECPROV3",72,0)
UTL ; set ^TMP($J,"ECPROV"
"RTN","ECPROV3",73,0)
 Q:'$D(^ECH(+ECFN,0))!(+$G(ECD)'=$P($G(^ECH(+ECFN,0)),"^",7))
"RTN","ECPROV3",74,0)
 S ECEC=^ECH(+ECFN,0),ECV=+$P(ECEC,"^",10),ECC=+$P(ECEC,"^",8)
"RTN","ECPROV3",75,0)
 ;S ECP=$P(ECEC,"^",9),ECU=+$P(ECEC,"^",11)
"RTN","ECPROV3",76,0)
 S ECP=$P(ECEC,"^",9),ECU=$$GETPPRV^ECPRVMUT(ECFN,.ECUN),ECUN=$S(ECU:"UNKNOWN",1:$P(ECUN,"^",2))
"RTN","ECPROV3",77,0)
 S ECCN=$S($P($G(^EC(726,ECC,0)),"^")]"":$P(^(0),"^"),1:"None")
"RTN","ECPROV3",78,0)
 Q:ECP']""
"RTN","ECPROV3",79,0)
 S ECD=+$P(ECEC,"^",7)
"RTN","ECPROV3",80,0)
 I ECPRV=1 Q:'$D(ECDU(ECD))  S ECDN=ECDU(ECD)
"RTN","ECPROV3",81,0)
 I ECPRV=2 S ECDN=$S($P($G(^ECD(ECD,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPROV3",82,0)
 ;S ECUN=$S($P($G(^VA(200,ECU,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPROV3",83,0)
 S ECPSY=+$O(^ECJ("AP",ECL,ECD,ECC,ECP,"")),ECPN=""
"RTN","ECPROV3",84,0)
 S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECPROV3",85,0)
 I ECFILE=81 S ECPN=$P($$CPT^ICPTCOD(+ECP,$P(ECED,".")),"^",3)
"RTN","ECPROV3",86,0)
 I ECFILE=725 S ECPN=$P($G(^EC(725,+ECP,0)),"^")
"RTN","ECPROV3",87,0)
 I ECFILE="UNKNOWN"!(ECPN="") S ECPN="UNKNOWN"
"RTN","ECPROV3",88,0)
 ;Changes made by VMP to correct NOIS SDC-1003-60397
"RTN","ECPROV3",89,0)
 S ECPN=$E(ECPN,1,5)_"~"_$P(ECP,";")_"~"_$E($P(ECP,";",2))_"~"_ECPSY
"RTN","ECPROV3",90,0)
 ;Get Procedure CPT modifiers
"RTN","ECPROV3",91,0)
 S ECMODF=0 K ECMOD
"RTN","ECPROV3",92,0)
 I $O(^ECH(+ECFN,"MOD",0))'="" S ECMODF=$$MOD^ECUTL(+ECFN,"I",.ECMOD)
"RTN","ECPROV3",93,0)
 ;
"RTN","ECPROV3",94,0)
 ;ALB/ESD - Get procedure reason from EC Patient file (#721) record
"RTN","ECPROV3",95,0)
 N ECLNK
"RTN","ECPROV3",96,0)
 S ECPRSN=""
"RTN","ECPROV3",97,0)
 S ECLNK=+$P(ECEC,"^",23)
"RTN","ECPROV3",98,0)
 I +ECLNK>0 DO
"RTN","ECPROV3",99,0)
 .S ECPRSN=$P($G(^ECL(ECLNK,0)),"^",1)
"RTN","ECPROV3",100,0)
 .S:+ECPRSN'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPROV3",101,0)
 .S:+ECPRSN>0 ECPRSN=$P(^ECR(ECPRSN,0),"^",1)
"RTN","ECPROV3",102,0)
 S:+ECLNK'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPROV3",103,0)
 I '$D(ECRY) S ECPRSN="REASON NOT DEFINED" ;group proc reason-not print
"RTN","ECPROV3",104,0)
 I '$D(^TMP($J,ECLN,ECDN,ECUN)) S ECINC=ECINC+1,ECINZ="^"_ECINC,^(ECUN)=0,^(ECUN,ECINC)=0
"RTN","ECPROV3",105,0)
 S ECINZ="^"_$O(^TMP($J,ECLN,ECDN,ECUN,0))
"RTN","ECPROV3",106,0)
 I '$D(^TMP($J,ECINZ,ECCN)) S ^TMP($J,ECINZ,ECCN)=0
"RTN","ECPROV3",107,0)
 ;
"RTN","ECPROV3",108,0)
 ;ALB/ESD - Add procedure reason to ^TMP array
"RTN","ECPROV3",109,0)
 I '$D(^TMP($J,ECINZ,ECCN,ECPN,ECPRSN)) S ^TMP($J,ECINZ,ECCN,ECPN,ECPRSN)=0
"RTN","ECPROV3",110,0)
 S ^TMP($J,ECLN)=^TMP($J,ECLN)+ECV
"RTN","ECPROV3",111,0)
 S ^TMP($J,ECLN,ECDN,ECUN)=^TMP($J,ECLN,ECDN,ECUN)+ECV
"RTN","ECPROV3",112,0)
 S ^TMP($J,ECINZ,ECCN)=^TMP($J,ECINZ,ECCN)+ECV
"RTN","ECPROV3",113,0)
 ;
"RTN","ECPROV3",114,0)
 ;ALB/ESD - Add procedure reason to ^TMP array
"RTN","ECPROV3",115,0)
 S ^TMP($J,ECINZ,ECCN,ECPN,ECPRSN)=^TMP($J,ECINZ,ECCN,ECPN,ECPRSN)+ECV
"RTN","ECPROV3",116,0)
 ;ALB/JAM - Add Procedure CPT modifier to ^TMP array
"RTN","ECPROV3",117,0)
 S MOD="" F  S MOD=$O(ECMOD(MOD)) Q:MOD=""  D
"RTN","ECPROV3",118,0)
 . S ^TMP($J,ECINZ,ECCN,ECPN,ECPRSN,"MOD",MOD)=$G(^TMP($J,ECINZ,ECCN,ECPN,ECPRSN,"MOD",MOD))+ECV
"RTN","ECPROV3",119,0)
 Q
"RTN","ECPROV3",120,0)
PAGE ; end of page
"RTN","ECPROV3",121,0)
 D:$D(ECPG) FOOTER
"RTN","ECPROV3",122,0)
 I $D(ECPG),$E(IOST,1,2)="C-" W !!,"Press <RET> to continue, or ^ to quit  " R X:DTIME I '$T!(X="^") S ECOUT=1 Q
"RTN","ECPROV3",123,0)
HDR ; print heading
"RTN","ECPROV3",124,0)
 W:$Y @IOF W !!,?49,"EVENT CAPTURE PROVIDER SUMMARY",!,?49,"FROM "_$P(ECDATE,"^")_"  TO "_$P(ECDATE,"^",2),!,?49,"Run Date : ",ECRDT
"RTN","ECPROV3",125,0)
 W !!?3,"Category",?105,"Procedure/Reason",!,?6,"CPT",?12,"Proc",?18,"Procedure Name" ;112
"RTN","ECPROV3",126,0)
 W:$D(ECRY) ?70,"Procedure Reason #1" ;112
"RTN","ECPROV3",127,0)
 W ?105,"Volume*",!,?6,"Code",?12,"Code",!,?10,"CPT Modifier (volume)",! ;112
"RTN","ECPROV3",128,0)
 F LINE=1:1:132 W "-"
"RTN","ECPROV3",129,0)
 W !!,"Location: "_ECLN,! W:ECDN]"" "DSS Unit: "_ECDN
"RTN","ECPROV3",130,0)
 I ECPRV,$D(ECUSER) W !!,ECUN,!,ECCN
"RTN","ECPROV3",131,0)
 Q
"RTN","ECPROV3",132,0)
FOOTER ;print page footer
"RTN","ECPROV3",133,0)
 W !!?4,"*Volume totals may represent days, minutes, numbers of procedures and/or a combination of these."
"RTN","ECPROV3",134,0)
 I $G(ECRY)'="" W !?4,"Procedure/Reason Volume = count of unique combinations of procedure code and procedure reason" ;112
"RTN","ECPROV3",135,0)
 Q
"RTN","ECPROV3",136,0)
 ;
"RTN","ECPROV3",137,0)
TOTP Q:ECOUT  W !,?105,"------",!,"Total Procedures for "_ECUN,?105,$J(^TMP($J,ECLN,ECDN,ECUN),6)
"RTN","ECPROV3",138,0)
 Q
"RTN","ECPROV3",139,0)
UNIT ; set units
"RTN","ECPROV3",140,0)
 S CNT=0 F I=0:0 S CNT=$O(UNIT(CNT)) Q:'CNT  S ECDU(+UNIT(CNT))=$P(UNIT(CNT),"^",2)
"RTN","ECPROV3",141,0)
 Q
"RTN","ECPROV3",142,0)
 ;
"RTN","ECPROV3",143,0)
NOUNIT ;Nothing there
"RTN","ECPROV3",144,0)
 I $O(^TMP($J,ECLN,ECDN))']"" D PAGE W !!!,?12,"NO PROCEDURES",! S ECPG=1
"RTN","ECPROV3",145,0)
 Q
"RTN","ECPRSUM1")
0^1^B30118950^B29801966
"RTN","ECPRSUM1",1,0)
ECPRSUM1 ;BIR/DMA,RHK,JPW - Provider Summary (1 to 7) ;1/4/12  12:04
"RTN","ECPRSUM1",2,0)
 ;;2.0;EVENT CAPTURE;**5,18,33,47,62,63,61,72,88,95,112**;8 May 96;Build 18
"RTN","ECPRSUM1",3,0)
 S DIC=200,DIC(0)="AQEMZ",DIC("A")="Select Provider: "
"RTN","ECPRSUM1",4,0)
 D ^DIC K DIC G END:Y<0 S ECU=+Y,ECUN=$P(Y,"^",2)
"RTN","ECPRSUM1",5,0)
 ;D REASON^ECRUTL ;* Prompt to include Procedure Reasons. 112, Remove reasons from report
"RTN","ECPRSUM1",6,0)
 I ($D(DIRUT))!($D(DUOUT)) G END
"RTN","ECPRSUM1",7,0)
BDATE K %DT S %DT="AEX",%DT("A")="Starting with Date: "
"RTN","ECPRSUM1",8,0)
 D ^%DT G:Y<0 END S ECSD=Y
"RTN","ECPRSUM1",9,0)
EDATE K %DT S %DT="AEX",%DT("A")="Ending with Date: " D ^%DT G:Y<0 END
"RTN","ECPRSUM1",10,0)
 I Y<ECSD D  G EDATE
"RTN","ECPRSUM1",11,0)
 .W !!,"The ending date cannot be earlier than the starting date.  "
"RTN","ECPRSUM1",12,0)
 .W "Please re-enter",!,"the ending date.",!
"RTN","ECPRSUM1",13,0)
 S ECED=Y,ECDATE=ECSD_"^"_ECED
"RTN","ECPRSUM1",14,0)
DEV ;dev call
"RTN","ECPRSUM1",15,0)
 W !!,"This report is formatted for 132 column output.",!!
"RTN","ECPRSUM1",16,0)
 S %ZIS="Q",%ZIS("A")="Select Device: " D ^%ZIS G END:POP
"RTN","ECPRSUM1",17,0)
 I $D(IO("Q")) K ZTSAVE S (ZTSAVE("ECRY"),ZTSAVE("ECSD"),ZTSAVE("ECDATE"),ZTSAVE("ECED"),ZTSAVE("ECU"),ZTSAVE("ECUN"))="",ZTDESC="Event Capture Provider Summary",ZTRTN="EN^ECPRSUM1" D ^%ZTLOAD,HOME^%ZIS K ZTSK G END
"RTN","ECPRSUM1",18,0)
 ;
"RTN","ECPRSUM1",19,0)
EN ;QUEUED ENTRY POINT
"RTN","ECPRSUM1",20,0)
 N ECPG,ECGT,EC,ECCAT,ECPXD,MODI,ECI,ECPRV,RK,A,ECX,EC725
"RTN","ECPRSUM1",21,0)
 U IO
"RTN","ECPRSUM1",22,0)
 S (ECOUT,ECPG)=0 F ECI=1:1:7 S ECGT(ECI)=0,A(ECI)=0
"RTN","ECPRSUM1",23,0)
 K ^TMP($J) S ECOUT=0,ECSD=ECSD-.1,ECED=ECED+.3
"RTN","ECPRSUM1",24,0)
 F ECD=ECSD:0 S ECD=$O(^ECH("AC",ECD)) Q:'ECD  Q:ECD>ECED  F DA=0:0 S DA=$O(^ECH("AC",ECD,DA)) Q:'DA  I $D(^ECH("APRV",ECU,DA)) S EC=$G(^ECH(DA,0)) D 
"RTN","ECPRSUM1",25,0)
 .K ECPRV S ECPRV=$$GETPRV^ECPRVMUT(DA,.ECPRV),ECX=0 I ECPRV Q
"RTN","ECPRSUM1",26,0)
 .F ECI=1:1:7 S A(ECI)=0
"RTN","ECPRSUM1",27,0)
 .F ECI=1:1:7 S ECX=$O(ECPRV(ECX)) Q:'ECX  D
"RTN","ECPRSUM1",28,0)
 ..S A(ECI)=$P(ECPRV(ECX),U)=ECU
"RTN","ECPRSUM1",29,0)
 .S ECX=A(1)=A(2)=A(3)=A(4)=A(5)=A(6)=A(7) I 'ECX Q
"RTN","ECPRSUM1",30,0)
 .S ECPAT=+$P(EC,"^",2),PA=$G(^DPT(ECPAT,0)),SS=$P(PA,"^",9)
"RTN","ECPRSUM1",31,0)
 .S PA=$S($P(PA,"^")]"":$P(PA,"^"),1:"UNKNOWN"),ECP=$P(EC,"^",9)
"RTN","ECPRSUM1",32,0)
 .Q:ECP']""
"RTN","ECPRSUM1",33,0)
 .S ECLOC=+$P(EC,U,4),ECUNIT=+$P(EC,U,7),ECCAT=+$P(EC,U,8)
"RTN","ECPRSUM1",34,0)
 .S ECPSY=+$O(^ECJ("AP",ECLOC,ECUNIT,ECCAT,ECP,""))
"RTN","ECPRSUM1",35,0)
 .S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2)
"RTN","ECPRSUM1",36,0)
 .S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECPRSUM1",37,0)
 .I ECFILE="UNKNOWN" S ECPN="UNKNOWN"
"RTN","ECPRSUM1",38,0)
 .S ECCPT=$S(ECFILE=81:+ECP,1:$P($G(^EC(725,+ECP,0)),"^",5)),ECPXD=""
"RTN","ECPRSUM1",39,0)
 .I ECCPT'="" D
"RTN","ECPRSUM1",40,0)
 ..S ECPXD=$$CPT^ICPTCOD(ECCPT,$P(ECED,".")),ECCPT=$P(ECPXD,"^",2)_" "
"RTN","ECPRSUM1",41,0)
 .I ECFILE=81 S ECPN=$S($P(ECPXD,"^",3)]"":$P(ECPXD,"^",3),1:"UNKNOWN")
"RTN","ECPRSUM1",42,0)
 .I ECFILE=725 S EC725=$G(^EC(725,+ECP,0)),ECPN=$P(EC725,"^",2)_" "_$P(EC725,"^")
"RTN","ECPRSUM1",43,0)
 .S ECPTDS=ECCPT_ECPN_$S(ECPSYN]"":" ["_ECPSYN_"] ",1:"")
"RTN","ECPRSUM1",44,0)
 .;Get Procedure CPT modifiers
"RTN","ECPRSUM1",45,0)
 . K ECMOD S ECMODF=0 I $O(^ECH(DA,"MOD",0))'="" D
"RTN","ECPRSUM1",46,0)
 ..S ECMODF=$$MOD^ECUTL(DA,"I",.ECMOD)
"RTN","ECPRSUM1",47,0)
 ..;K ECMOD S ECMODF=$$MOD^ECUTL(DA,"I",.ECMOD)
"RTN","ECPRSUM1",48,0)
 .;
"RTN","ECPRSUM1",49,0)
 .;ALB/ESD - Get procedure reason from EC Patient file (#721) record
"RTN","ECPRSUM1",50,0)
 .S ECPRSN="",ECLNK=+$P(EC,"^",23)
"RTN","ECPRSUM1",51,0)
 .I +ECLNK>0 DO
"RTN","ECPRSUM1",52,0)
 ..S ECPRSN=$P($G(^ECL(ECLNK,0)),"^",1)
"RTN","ECPRSUM1",53,0)
 ..S:+ECPRSN'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPRSUM1",54,0)
 ..S:+ECPRSN>0 ECPRSN=$P(^ECR(ECPRSN,0),"^",1)
"RTN","ECPRSUM1",55,0)
 .S:+ECLNK'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPRSUM1",56,0)
 .I '$D(ECRY) S ECPRSN="REASON NOT DEFINED"
"RTN","ECPRSUM1",57,0)
 .;
"RTN","ECPRSUM1",58,0)
 .;ALB/ESD - Add procedure reason to ^TMP array
"RTN","ECPRSUM1",59,0)
 .S PRO=ECCPT_ECPN I PRO]"" S V=+$P(EC,"^",10) D
"RTN","ECPRSUM1",60,0)
 ..F J=1:1:7 I A(J) S ^(J)=$G(^TMP($J,PRO,ECPRSN,PA_"^"_SS,J))+V D
"RTN","ECPRSUM1",61,0)
 ...I $G(^TMP($J,PRO))="" S ^TMP($J,PRO)=ECPTDS
"RTN","ECPRSUM1",62,0)
 ..;ALB/JAM - Add Procedure CPT modifier to ^TMP array
"RTN","ECPRSUM1",63,0)
 ..S MOD="" F  S MOD=$O(ECMOD(MOD)) Q:MOD=""  D
"RTN","ECPRSUM1",64,0)
 ...S ^TMP($J,PRO,ECPRSN,PA_"^"_SS,"MOD",MOD)=$G(^TMP($J,PRO,ECPRSN,PA_"^"_SS,"MOD",MOD))+V
"RTN","ECPRSUM1",65,0)
 K ECLNK,MOD,ECPTDS
"RTN","ECPRSUM1",66,0)
 ;
"RTN","ECPRSUM1",67,0)
PRINT ;print report
"RTN","ECPRSUM1",68,0)
 S ECSD=$P(ECDATE,"^"),ECED=$P(ECDATE,"^",2)
"RTN","ECPRSUM1",69,0)
 D HDR I '$D(^TMP($J)) W !!,?12,"No Event Capture Provider Summary for "_ECUN_" to report for the date range selected.",!! D PAGE G END
"RTN","ECPRSUM1",70,0)
 F ECI=1:1:7 S A(ECI)=0
"RTN","ECPRSUM1",71,0)
 S (ECREAS,PA,PR)=""
"RTN","ECPRSUM1",72,0)
 F  S PR=$O(^TMP($J,PR)),PA="" Q:PR=""  D  Q:ECOUT
"RTN","ECPRSUM1",73,0)
 .W !,^TMP($J,PR)
"RTN","ECPRSUM1",74,0)
 .F  S ECREAS=$O(^TMP($J,PR,ECREAS)) Q:ECREAS=""  D  Q:ECOUT
"RTN","ECPRSUM1",75,0)
 ..F  S PA=$O(^TMP($J,PR,ECREAS,PA)) D:PA="" TOT Q:PA=""  D  Q:ECOUT
"RTN","ECPRSUM1",76,0)
 ...S A=$G(^TMP($J,PR,ECREAS,PA,0))
"RTN","ECPRSUM1",77,0)
 ...W ! W:$D(ECRY) $E(ECREAS,1,23)
"RTN","ECPRSUM1",78,0)
 ...W ?25,$E($P(PA,"^"),1,24),?52,$E($P(PA,"^",2),6,9) ;112 only print last 4
"RTN","ECPRSUM1",79,0)
 ...F J=1:1:7 S A=$G(^TMP($J,PR,ECREAS,PA,J)),A(J)=A(J)+A W ?10*J+50,$J(A,5,0) I J=7 I $Y+8>IOSL D PAGE Q:ECOUT  D HDR
"RTN","ECPRSUM1",80,0)
 ...;print CPT procedure modifiers
"RTN","ECPRSUM1",81,0)
 ...Q:ECOUT  S IEN=""
"RTN","ECPRSUM1",82,0)
 ...F  S IEN=$O(^TMP($J,PR,ECREAS,PA,"MOD",IEN)) Q:IEN=""  D  I ECOUT Q
"RTN","ECPRSUM1",83,0)
 ....S MODI=$$MOD^ICPTMOD(IEN,"I",$P(ECED,"."))
"RTN","ECPRSUM1",84,0)
 ....S MOD=$P(MODI,U,2) I MOD="" Q
"RTN","ECPRSUM1",85,0)
 ....S MODESC=$P(MODI,U,3)  I MODESC="" S MODESC="UNKNOWN"
"RTN","ECPRSUM1",86,0)
 ....S MODAMT=^TMP($J,PR,ECREAS,PA,"MOD",IEN)
"RTN","ECPRSUM1",87,0)
 ....W !?5,"- ",MOD," ",MODESC," (",MODAMT,")"
"RTN","ECPRSUM1",88,0)
 ....I ($Y+7)>IOSL D PAGE Q:ECOUT  D HDR
"RTN","ECPRSUM1",89,0)
 ...K MODESC,MOD,MODAMT
"RTN","ECPRSUM1",90,0)
 W !!,?60 F RK=61:1:IOM W "*"
"RTN","ECPRSUM1",91,0)
 W !,?35,"GRAND TOTAL - PROCEDURES"
"RTN","ECPRSUM1",92,0)
 F J=1:1:7 W ?10*J+50,$J(ECGT(J),5,0)
"RTN","ECPRSUM1",93,0)
 D:'ECOUT PAGE G END
"RTN","ECPRSUM1",94,0)
 ;
"RTN","ECPRSUM1",95,0)
PAGE ; end of page
"RTN","ECPRSUM1",96,0)
 D FOOTER
"RTN","ECPRSUM1",97,0)
 I $E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR I 'Y S ECOUT=1
"RTN","ECPRSUM1",98,0)
 Q
"RTN","ECPRSUM1",99,0)
HDR ;
"RTN","ECPRSUM1",100,0)
 W:$Y @IOF S ECPG=ECPG+1
"RTN","ECPRSUM1",101,0)
 W !!?33,"EVENT CAPTURE PROVIDER (1-7) SUMMARY FOR ",ECUN,?118,"Page: ",ECPG,!,?33,"FOR THE DATE RANGE ",$$FMTE^XLFDT(ECSD)," TO ",$$FMTE^XLFDT(ECED),!!,"PROCEDURE",?85,"TOTALS AS PROVIDER #",! ;112
"RTN","ECPRSUM1",102,0)
 W:$D(ECRY) "PROCEDURE REASON" W ?25,"PATIENT",?52,"SSN",?64,1,?74,2,?84,3,?94,4,?104,5,?114,6,?124,7
"RTN","ECPRSUM1",103,0)
 W !,?5,"CPT MODIFIER (Volume of modifiers use)",!
"RTN","ECPRSUM1",104,0)
 F RK=1:1:IOM W "-"
"RTN","ECPRSUM1",105,0)
 W !
"RTN","ECPRSUM1",106,0)
 Q
"RTN","ECPRSUM1",107,0)
 ;
"RTN","ECPRSUM1",108,0)
TOT W !,?60 F RK=61:1:IOM W "-"
"RTN","ECPRSUM1",109,0)
 W !?35,"TOTAL PROCEDURES"
"RTN","ECPRSUM1",110,0)
 F J=1:1:7 W ?10*J+50,$J(A(J),5,0) S ECGT(J)=ECGT(J)+A(J)
"RTN","ECPRSUM1",111,0)
 W ! F ECI=1:1:7 S A(ECI)=0
"RTN","ECPRSUM1",112,0)
 Q
"RTN","ECPRSUM1",113,0)
 ;
"RTN","ECPRSUM1",114,0)
FOOTER ;print page footer
"RTN","ECPRSUM1",115,0)
 W !!?4,"Volume totals may represent days, minutes, numbers of procedures"
"RTN","ECPRSUM1",116,0)
 W !?4,"and/or a combination of these."
"RTN","ECPRSUM1",117,0)
 Q
"RTN","ECPRSUM1",118,0)
 ;
"RTN","ECPRSUM1",119,0)
END D ^ECKILL K ^TMP($J),ZTSK W @IOF
"RTN","ECPRSUM1",120,0)
 K ^TMP($J) Q:$D(ECGUI)
"RTN","ECPRSUM1",121,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ECPRSUM1",122,0)
 D ^%ZISC
"RTN","ECPRSUM1",123,0)
 Q
"RTN","ECRDSSA")
0^2^B103256712^B102481577
"RTN","ECRDSSA",1,0)
ECRDSSA ;ALB/RPM - DSS Unit Activity Report ;1/24/12  16:20
"RTN","ECRDSSA",2,0)
 ;;2.0;EVENT CAPTURE;**95,104,112**;8 May 96;Build 18
"RTN","ECRDSSA",3,0)
 ;
"RTN","ECRDSSA",4,0)
EN ;Get location(s), DSS Unit(s), sort type, start & end dates, device
"RTN","ECRDSSA",5,0)
 ;
"RTN","ECRDSSA",6,0)
 N ECLOC,ECDSSU,ECSORT,ECSTDT,ECENDDT ;112
"RTN","ECRDSSA",7,0)
 I '$$ASKLOC^ECRUTL G ENQ
"RTN","ECRDSSA",8,0)
 I '$$ASKDSS^ECRUTL G ENQ
"RTN","ECRDSSA",9,0)
 I '$$ASKSRT(.ECSORT) G ENQ
"RTN","ECRDSSA",10,0)
 I '$$STDT^ECRUTL G ENQ
"RTN","ECRDSSA",11,0)
 I '$$ENDDT^ECRUTL(ECSTDT) G ENQ
"RTN","ECRDSSA",12,0)
 I $$ASKDEV D STRPT^ECRDSSA
"RTN","ECRDSSA",13,0)
ENQ Q
"RTN","ECRDSSA",14,0)
 ;
"RTN","ECRDSSA",15,0)
STRPT ;Main entry point
"RTN","ECRDSSA",16,0)
 N ECCRT  ;is CRT?
"RTN","ECRDSSA",17,0)
 N ECPAGE  ;page cnt
"RTN","ECRDSSA",18,0)
 S ECPAGE=0
"RTN","ECRDSSA",19,0)
 S ECCRT=$S($E(IOST,1,2)="C-":1,1:0)
"RTN","ECRDSSA",20,0)
 U IO
"RTN","ECRDSSA",21,0)
 K ^TMP("ECRPT",$J)
"RTN","ECRDSSA",22,0)
 D FNDREC(ECSORT)
"RTN","ECRDSSA",23,0)
 D PRINT(ECSORT)
"RTN","ECRDSSA",24,0)
 K ^TMP("ECRPT",$J)
"RTN","ECRDSSA",25,0)
 Q
"RTN","ECRDSSA",26,0)
 ;
"RTN","ECRDSSA",27,0)
FNDREC(ECSRT) ;Loop through "ADT" xref of EVENT CAPTURE PATIENT (#721) file
"RTN","ECRDSSA",28,0)
 ;  Input:
"RTN","ECRDSSA",29,0)
 ;    ECSRT - sort type
"RTN","ECRDSSA",30,0)
 ;
"RTN","ECRDSSA",31,0)
 ;  Output: none
"RTN","ECRDSSA",32,0)
 ;
"RTN","ECRDSSA",33,0)
 N ECNT   ;record cnt
"RTN","ECRDSSA",34,0)
 N ECL     ;location cnt
"RTN","ECRDSSA",35,0)
 N ECD     ;DSS unit cnt
"RTN","ECRDSSA",36,0)
 N ECDFN   ;DFN
"RTN","ECRDSSA",37,0)
 N ECLOCF  ;Location IEN
"RTN","ECRDSSA",38,0)
 N ECDSSF  ;DSS unit IEN
"RTN","ECRDSSA",39,0)
 N ECDT    ;date index
"RTN","ECRDSSA",40,0)
 N ECREC   ;"0" node
"RTN","ECRDSSA",41,0)
 S ECNT=0
"RTN","ECRDSSA",42,0)
 ;
"RTN","ECRDSSA",43,0)
 S ECL=0
"RTN","ECRDSSA",44,0)
 F  S ECL=$O(ECLOC(ECL)) Q:'ECL  S ECLOCF=+$P(ECLOC(ECL),U) D
"RTN","ECRDSSA",45,0)
 . S ^TMP("ECRPT",$J,ECLOCF)=0  ;initialize location counter
"RTN","ECRDSSA",46,0)
 . S ECD=0
"RTN","ECRDSSA",47,0)
 . F  S ECD=$O(ECDSSU(ECD)) Q:'ECD  S ECDSSF=+$P(ECDSSU(ECD),U) D
"RTN","ECRDSSA",48,0)
 . . S ^TMP("ECRPT",$J,ECLOCF,ECDSSF)=0  ;initialize DSS Unit counter
"RTN","ECRDSSA",49,0)
 . S ECDFN=0
"RTN","ECRDSSA",50,0)
 . F  S ECDFN=+$O(^ECH("ADT",ECLOCF,ECDFN)) Q:'ECDFN  D
"RTN","ECRDSSA",51,0)
 . . S ECD=0
"RTN","ECRDSSA",52,0)
 . . F  S ECD=$O(ECDSSU(ECD)) Q:'ECD  S ECDSSF=+$P(ECDSSU(ECD),U) D
"RTN","ECRDSSA",53,0)
 . . . S ECDT=ECSTDT
"RTN","ECRDSSA",54,0)
 . . . F  S ECDT=+$O(^ECH("ADT",ECLOCF,ECDFN,ECDSSF,ECDT)) Q:'ECDT!(ECDT>ECENDDT)  D
"RTN","ECRDSSA",55,0)
 . . . . S ECIEN=0
"RTN","ECRDSSA",56,0)
 . . . . F  S ECIEN=+$O(^ECH("ADT",ECLOCF,ECDFN,ECDSSF,ECDT,ECIEN)) Q:'ECIEN  D
"RTN","ECRDSSA",57,0)
 . . . . . I $P($G(^ECH(ECIEN,0)),U,7)=ECDSSF D BLDTMP(ECIEN,ECSRT,.ECNT)
"RTN","ECRDSSA",58,0)
 Q
"RTN","ECRDSSA",59,0)
 ;
"RTN","ECRDSSA",60,0)
BLDTMP(ECIEN,ECSRT,ECCNT) ;add record to list
"RTN","ECRDSSA",61,0)
 ;  Input:
"RTN","ECRDSSA",62,0)
 ;    ECIEN - pointer to EVENT CAPTURE PATIENT (#721) file
"RTN","ECRDSSA",63,0)
 ;    ECSRT - sort type
"RTN","ECRDSSA",64,0)
 ;    ECCNT - record counter
"RTN","ECRDSSA",65,0)
 ;
"RTN","ECRDSSA",66,0)
 ;  Output:
"RTN","ECRDSSA",67,0)
 ;    ^TMP("ECRPT",$J,location,DSS unit,sort key1,sort key2,count)
"RTN","ECRDSSA",68,0)
 ;
"RTN","ECRDSSA",69,0)
 N ECLOCA  ;location
"RTN","ECRDSSA",70,0)
 N ECDSS  ;DSS unit
"RTN","ECRDSSA",71,0)
 N ECIENS  ;IENS
"RTN","ECRDSSA",72,0)
 N ECKEY  ;sort key array
"RTN","ECRDSSA",73,0)
 N ECREC  ;record string
"RTN","ECRDSSA",74,0)
 N ECERR  ;FM error
"RTN","ECRDSSA",75,0)
 N ECDT  ;date
"RTN","ECRDSSA",76,0)
 I +$G(ECIEN)>0,$$GETKEYS(ECSRT,ECIEN,.ECKEY) D
"RTN","ECRDSSA",77,0)
 . S ECCNT=+$G(ECCNT)+1
"RTN","ECRDSSA",78,0)
 . S ECIENS=ECIEN_","
"RTN","ECRDSSA",79,0)
 . S ECREC=""
"RTN","ECRDSSA",80,0)
 . D GETS^DIQ(721,ECIENS,"1;2;3;6;8;9;10;20;29","IE","ECREC","ECERR")
"RTN","ECRDSSA",81,0)
 . S ECLOCA=+$G(ECREC(721,ECIENS,3,"I"))
"RTN","ECRDSSA",82,0)
 . S ECDSS=+$G(ECREC(721,ECIENS,6,"I"))
"RTN","ECRDSSA",83,0)
 . S ECREC=ECREC_$E($G(ECREC(721,ECIENS,1,"E")),1,30)_"^"  ;pt name
"RTN","ECRDSSA",84,0)
 . S ECREC=ECREC_$E($$GETSSN(ECIEN),1,10)_"^"              ;ssn
"RTN","ECRDSSA",85,0)
 . S ECREC=ECREC_$E($G(ECREC(721,ECIENS,29,"I")),1)_"^"    ;in/out
"RTN","ECRDSSA",86,0)
 . S ECREC=ECREC_$E($G(ECREC(721,ECIENS,2,"I")),1,13)_"^"  ;dt/tm
"RTN","ECRDSSA",87,0)
 . S ECDT=$P($G(ECREC(721,ECIENS,2,"I")),".",1)
"RTN","ECRDSSA",88,0)
 . S ECREC=ECREC_$E($$GETPROC($G(ECREC(721,ECIENS,8,"I"))),1,5)_"^"   ;proc code
"RTN","ECRDSSA",89,0)
 . S ECREC=ECREC_$E($$GETPRNM($G(ECREC(721,ECIENS,8,"I")),ECDT),1,10)_"^"  ;proc name
"RTN","ECRDSSA",90,0)
 . S ECREC=ECREC_$E($G(ECREC(721,ECIENS,9,"I")),1,2)_"^"   ;vol
"RTN","ECRDSSA",91,0)
 . S ECREC=ECREC_$E($$GETPROV(ECIEN),1,30)_"^"  ;provider
"RTN","ECRDSSA",92,0)
 . S ECREC=ECREC_$E($G(ECREC(721,ECIENS,20,"E")),1,7)      ;dx
"RTN","ECRDSSA",93,0)
 . S ^TMP("ECRPT",$J,ECLOCA,ECDSS,ECKEY(1),ECKEY(2),ECNT)=ECREC
"RTN","ECRDSSA",94,0)
 . S ^TMP("ECRPT",$J,ECLOCA)=$G(^TMP("ECRPT",$J,ECLOCA))+1
"RTN","ECRDSSA",95,0)
 . S ^TMP("ECRPT",$J,ECLOCA,ECDSS)=$G(^TMP("ECRPT",$J,ECLOCA,ECDSS))+1
"RTN","ECRDSSA",96,0)
 Q
"RTN","ECRDSSA",97,0)
 ;
"RTN","ECRDSSA",98,0)
PRINT(ECSRT) ;loop results array and format output
"RTN","ECRDSSA",99,0)
 ;  Input:
"RTN","ECRDSSA",100,0)
 ;    ECSRT - sort type
"RTN","ECRDSSA",101,0)
 ;
"RTN","ECRDSSA",102,0)
 ;  Output: none
"RTN","ECRDSSA",103,0)
 ;
"RTN","ECRDSSA",104,0)
 N ECCLOC  ;current location
"RTN","ECRDSSA",105,0)
 N ECPLOC  ;previous location
"RTN","ECRDSSA",106,0)
 N ECLOCNM  ;location name
"RTN","ECRDSSA",107,0)
 N ECCDSS  ;current DSS unit
"RTN","ECRDSSA",108,0)
 N ECPDSS  ;previous DSS unit
"RTN","ECRDSSA",109,0)
 N ECDSSNM  ;DSS unit name
"RTN","ECRDSSA",110,0)
 N ECCNT   ;record count
"RTN","ECRDSSA",111,0)
 N ECDAT   ;procedure date/time
"RTN","ECRDSSA",112,0)
 N ECRDT   ;run date
"RTN","ECRDSSA",113,0)
 N ECFDT   ;from date
"RTN","ECRDSSA",114,0)
 N ECTDT   ;to date
"RTN","ECRDSSA",115,0)
 N ECKEY1  ;sort key 1
"RTN","ECRDSSA",116,0)
 N ECKEY2  ;sort key 2
"RTN","ECRDSSA",117,0)
 N ECSRTBY  ;sort type text
"RTN","ECRDSSA",118,0)
 N ECQUIT  ;user quit indicator
"RTN","ECRDSSA",119,0)
 N ECREC   ;tmp record data
"RTN","ECRDSSA",120,0)
 I '$D(^TMP("ECRPT",$J)) G PRINTQ
"RTN","ECRDSSA",121,0)
 S ECRDT=$$FMTE^XLFDT($$NOW^XLFDT,"5DZ")
"RTN","ECRDSSA",122,0)
 S ECFDT=$$FMTE^XLFDT($P(ECSTDT+.0001,"."),"5DZ")
"RTN","ECRDSSA",123,0)
 S ECTDT=$$FMTE^XLFDT($P(ECENDDT,"."),"5DZ")
"RTN","ECRDSSA",124,0)
 S ECSRTBY=$S(ECSRT="P":"Patient Name",ECSRT="R":"Provider Name",ECSRT="S":"Patient SSN",1:"")
"RTN","ECRDSSA",125,0)
 S (ECCLOC,ECPLOC,ECQUIT)=0
"RTN","ECRDSSA",126,0)
 F  S ECCLOC=$O(^TMP("ECRPT",$J,ECCLOC)) Q:'ECCLOC!(ECQUIT)  D
"RTN","ECRDSSA",127,0)
 . I ECCLOC'=ECPLOC D  ;location changed
"RTN","ECRDSSA",128,0)
 . . S ECPLOC=ECCLOC
"RTN","ECRDSSA",129,0)
 . . S ECLOCNM=$$GETLOCN(ECCLOC,.ECLOC)
"RTN","ECRDSSA",130,0)
 . . I $O(^TMP("ECRPT",$J,ECCLOC,0))>0 D:ECPAGE>0 PAUSE Q:ECQUIT  D HDR(ECLOCNM,ECRDT,ECFDT,ECTDT,ECSRTBY)
"RTN","ECRDSSA",131,0)
 . I $G(^TMP("ECRPT",$J,ECCLOC))=0 D  Q
"RTN","ECRDSSA",132,0)
 . . W !!,"    ** No records found on Location that match selection criteria"
"RTN","ECRDSSA",133,0)
 . S (ECCDSS,ECPDSS)=0
"RTN","ECRDSSA",134,0)
 . F  S ECCDSS=$O(^TMP("ECRPT",$J,ECCLOC,ECCDSS)) Q:'ECCDSS!(ECQUIT)  D
"RTN","ECRDSSA",135,0)
 . . I ECCDSS'=ECPDSS D  Q:ECQUIT  ;dss unit changed
"RTN","ECRDSSA",136,0)
 . . . S ECPDSS=ECCDSS
"RTN","ECRDSSA",137,0)
 . . . S ECDSSNM=$$GETDSSN(ECCDSS,.ECDSSU)
"RTN","ECRDSSA",138,0)
 . . . I $Y>(IOSL-10) D PAUSE Q:ECQUIT  D HDR(ECLOCNM,ECRDT,ECFDT,ECTDT,ECSRTBY)
"RTN","ECRDSSA",139,0)
 . . . D DSSHDR(ECCDSS,ECDSSNM)
"RTN","ECRDSSA",140,0)
 . . I $G(^TMP("ECRPT",$J,ECCLOC,ECCDSS))=0 D  Q
"RTN","ECRDSSA",141,0)
 . . . W !,"** No records found on DSS Unit that match selection criteria"
"RTN","ECRDSSA",142,0)
 . . S ECKEY1=""
"RTN","ECRDSSA",143,0)
 . . F  S ECKEY1=$O(^TMP("ECRPT",$J,ECCLOC,ECCDSS,ECKEY1)) Q:ECKEY1=""!(ECQUIT)  D
"RTN","ECRDSSA",144,0)
 . . . S ECKEY2=""
"RTN","ECRDSSA",145,0)
 . . . F  S ECKEY2=$O(^TMP("ECRPT",$J,ECCLOC,ECCDSS,ECKEY1,ECKEY2)) Q:ECKEY2=""!(ECQUIT)  D
"RTN","ECRDSSA",146,0)
 . . . . S ECCNT=0
"RTN","ECRDSSA",147,0)
 . . . . F  S ECCNT=$O(^TMP("ECRPT",$J,ECCLOC,ECCDSS,ECKEY1,ECKEY2,ECCNT)) Q:'ECCNT!(ECQUIT)  D
"RTN","ECRDSSA",148,0)
 . . . . . I $Y>(IOSL-7) D PAUSE Q:ECQUIT  D HDR(ECLOCNM,ECRDT,ECFDT,ECTDT,ECSRTBY),DSSHDR(ECCDSS,ECDSSNM) W " (cont'd)"
"RTN","ECRDSSA",149,0)
 . . . . . S ECREC=^TMP("ECRPT",$J,ECCLOC,ECCDSS,ECKEY1,ECKEY2,ECCNT)
"RTN","ECRDSSA",150,0)
 . . . . . W !,$P(ECREC,U,1)  ;name
"RTN","ECRDSSA",151,0)
 . . . . . W ?31,$P(ECREC,U,2)  ;ssn
"RTN","ECRDSSA",152,0)
 . . . . . W ?42,$P(ECREC,U,3)  ;inpt/outpt
"RTN","ECRDSSA",153,0)
 . . . . . S ECDAT=$$FMTE^XLFDT($P(ECREC,U,4),"2MZ")
"RTN","ECRDSSA",154,0)
 . . . . . W ?44,$P(ECDAT,":")_$P(ECDAT,":",2)  ;dt/tm
"RTN","ECRDSSA",155,0)
 . . . . . W ?58,$P(ECREC,U,5)  ;proc code
"RTN","ECRDSSA",156,0)
 . . . . . W ?64,$P(ECREC,U,6)  ;proc name
"RTN","ECRDSSA",157,0)
 . . .  .. W ?75,$P(ECREC,U,7)  ;vol
"RTN","ECRDSSA",158,0)
 . . . . . W ?78,$P(ECREC,U,8)  ;provider
"RTN","ECRDSSA",159,0)
 . . . . . W ?109,$P(ECREC,U,9)  ;dx
"RTN","ECRDSSA",160,0)
 I 'ECQUIT D PAUSE
"RTN","ECRDSSA",161,0)
PRINTQ Q
"RTN","ECRDSSA",162,0)
 ;
"RTN","ECRDSSA",163,0)
HDR(ECLOCN,ECRDT,ECFDT,ECTDT,ECSRT) ;Report header
"RTN","ECRDSSA",164,0)
 ;  Input:
"RTN","ECRDSSA",165,0)
 ;    ECLOCN - location name
"RTN","ECRDSSA",166,0)
 ;    ECRDT - run date
"RTN","ECRDSSA",167,0)
 ;    EDFDT - from date
"RTN","ECRDSSA",168,0)
 ;    EDTDT - to date
"RTN","ECRDSSA",169,0)
 ;    ECSRT - sort text
"RTN","ECRDSSA",170,0)
 ;
"RTN","ECRDSSA",171,0)
 ;  Output:  none
"RTN","ECRDSSA",172,0)
 ;
"RTN","ECRDSSA",173,0)
 I ECCRT!(ECPAGE) W @IOF
"RTN","ECRDSSA",174,0)
 S ECPAGE=ECPAGE+1
"RTN","ECRDSSA",175,0)
 W !,?11,"EVENT CAPTURE DSS UNIT ACTIVITY REPORT"
"RTN","ECRDSSA",176,0)
 W ?58,"Run Date: ",ECRDT
"RTN","ECRDSSA",177,0)
 W ?109,"Page: ",ECPAGE
"RTN","ECRDSSA",178,0)
 W !!,?13,"For Location ",ECLOCN
"RTN","ECRDSSA",179,0)
 W !,?13,"From "_ECFDT_" through "_ECTDT
"RTN","ECRDSSA",180,0)
 W !,?13,"Sorted by ",ECSRT
"RTN","ECRDSSA",181,0)
 W !!?4,"Patient",?31,"SSN",?40,"I/O",?45,"Date/Time",?58,"Proc",?64,"Procedure",?75,"Vol",?80,"Primary",?109,"Primary"
"RTN","ECRDSSA",182,0)
 W !?58,"Code",?64,"Name",?80,"Provider",?109,"Diagnosis"
"RTN","ECRDSSA",183,0)
 Q
"RTN","ECRDSSA",184,0)
 ;
"RTN","ECRDSSA",185,0)
DSSHDR(ECDSS,ECDSSNM) ;DSS header
"RTN","ECRDSSA",186,0)
 ;  Input:
"RTN","ECRDSSA",187,0)
 ;    ECDSS - DSS unit
"RTN","ECRDSSA",188,0)
 ;    ECDSSNM - DSS unit name
"RTN","ECRDSSA",189,0)
 ;
"RTN","ECRDSSA",190,0)
 ;  Output:  none
"RTN","ECRDSSA",191,0)
 ;
"RTN","ECRDSSA",192,0)
 W !!,"DSS Unit: ",ECDSSNM," (IEN #",ECDSS,")"
"RTN","ECRDSSA",193,0)
 Q
"RTN","ECRDSSA",194,0)
 ;
"RTN","ECRDSSA",195,0)
PAUSE ;page break
"RTN","ECRDSSA",196,0)
 N DIR,DIRUT,DUOUT
"RTN","ECRDSSA",197,0)
 D FOOTER
"RTN","ECRDSSA",198,0)
 Q:'ECCRT
"RTN","ECRDSSA",199,0)
 I IOSL<30 F  W ! Q:$Y>(IOSL-7)
"RTN","ECRDSSA",200,0)
 W !
"RTN","ECRDSSA",201,0)
 S DIR(0)="E"
"RTN","ECRDSSA",202,0)
 D ^DIR
"RTN","ECRDSSA",203,0)
 I $D(DIRUT)!($D(DUOUT)) S ECQUIT=1
"RTN","ECRDSSA",204,0)
 Q
"RTN","ECRDSSA",205,0)
 ;
"RTN","ECRDSSA",206,0)
FOOTER ;page footer
"RTN","ECRDSSA",207,0)
 W !!?4,"Volume totals may represent days, minutes, numbers of procedures"
"RTN","ECRDSSA",208,0)
 W !?4,"and/or a combination of these."
"RTN","ECRDSSA",209,0)
 Q
"RTN","ECRDSSA",210,0)
 ;
"RTN","ECRDSSA",211,0)
GETLOCN(ECLOCA,ECLOC) ;get location name
"RTN","ECRDSSA",212,0)
 ;  Input:
"RTN","ECRDSSA",213,0)
 ;    ECLOCA - location
"RTN","ECRDSSA",214,0)
 ;    ECLOC - array of selected locations
"RTN","ECRDSSA",215,0)
 ;
"RTN","ECRDSSA",216,0)
 ;  Output:
"RTN","ECRDSSA",217,0)
 ;   Function value - returns location name on success; "" on failure
"RTN","ECRDSSA",218,0)
 ;
"RTN","ECRDSSA",219,0)
 N ECI
"RTN","ECRDSSA",220,0)
 N ECLOCNM
"RTN","ECRDSSA",221,0)
 S ECLOCNM=""
"RTN","ECRDSSA",222,0)
 I +$G(ECLOCA)>0 D
"RTN","ECRDSSA",223,0)
 . S ECI=0
"RTN","ECRDSSA",224,0)
 . F  S ECI=$O(ECLOC(ECI)) Q:'ECI!(ECLOCNM'="")  D
"RTN","ECRDSSA",225,0)
 . . I $P(ECLOC(ECI),U)=ECLOCA S ECLOCNM=$P(ECLOC(ECI),U,2)
"RTN","ECRDSSA",226,0)
 Q ECLOCNM
"RTN","ECRDSSA",227,0)
 ;
"RTN","ECRDSSA",228,0)
GETDSSN(ECDSS,ECDSSU) ;-get DSS unit name
"RTN","ECRDSSA",229,0)
 ;  Input:
"RTN","ECRDSSA",230,0)
 ;    ECDSS - DSS unit
"RTN","ECRDSSA",231,0)
 ;    ECDSSU - array of selected DSS units
"RTN","ECRDSSA",232,0)
 ;
"RTN","ECRDSSA",233,0)
 ;  Output:
"RTN","ECRDSSA",234,0)
 ;   Function value - returns DSS unit name on success; "" on failure
"RTN","ECRDSSA",235,0)
 ;
"RTN","ECRDSSA",236,0)
 N ECI
"RTN","ECRDSSA",237,0)
 N ECDSSNM
"RTN","ECRDSSA",238,0)
 S ECDSSNM=""
"RTN","ECRDSSA",239,0)
 I +$G(ECDSS)>0 D
"RTN","ECRDSSA",240,0)
 . S ECI=0
"RTN","ECRDSSA",241,0)
 . F  S ECI=$O(ECDSSU(ECI)) Q:'ECI!(ECDSSNM'="")  D
"RTN","ECRDSSA",242,0)
 . . I $P(ECDSSU(ECI),U)=ECDSS S ECDSSNM=$P(ECDSSU(ECI),U,2)
"RTN","ECRDSSA",243,0)
 Q ECDSSNM
"RTN","ECRDSSA",244,0)
 ;
"RTN","ECRDSSA",245,0)
GETKEYS(ECSRT,ECIEN,ECKEYS) ;get sort keys based on sort type
"RTN","ECRDSSA",246,0)
 ;  Input:
"RTN","ECRDSSA",247,0)
 ;    ECSRT - (required) sort type indicator (P, S, R)
"RTN","ECRDSSA",248,0)
 ;    ECIEN - (required) pointer to EVENT CAPTURE PATIENT (#721) file
"RTN","ECRDSSA",249,0)
 ;    
"RTN","ECRDSSA",250,0)
 ;  Output:
"RTN","ECRDSSA",251,0)
 ;    ECKEYS - (pass by reference) array of sort keys
"RTN","ECRDSSA",252,0)
 ;    Function value - returns 1 on success;0 on failure
"RTN","ECRDSSA",253,0)
 ;
"RTN","ECRDSSA",254,0)
 N ECRSLT  ;function value
"RTN","ECRDSSA",255,0)
 S ECRSLT=0
"RTN","ECRDSSA",256,0)
 S (ECKEYS(1),ECKEYS(2))=""
"RTN","ECRDSSA",257,0)
 I $G(ECSRT)'="",+$G(ECIEN)>0 D
"RTN","ECRDSSA",258,0)
 . I ECSRT="P" D
"RTN","ECRDSSA",259,0)
 . . S ECKEYS(1)=$$GET1^DIQ(721,ECIEN_",",1)  ;name
"RTN","ECRDSSA",260,0)
 . . S ECKEYS(2)=$E($$GETSSN(ECIEN),1,9)  ;ssn
"RTN","ECRDSSA",261,0)
 . I ECSRT="R" D
"RTN","ECRDSSA",262,0)
 . . S ECKEYS(1)=$$GETPROV(ECIEN)  ;provider
"RTN","ECRDSSA",263,0)
 . . I ECKEYS(1)="" S ECKEYS(1)=" "  ;missing provider sorts to top
"RTN","ECRDSSA",264,0)
 . . S ECKEYS(2)=$$GET1^DIQ(721,ECIEN_",",1)  ;name
"RTN","ECRDSSA",265,0)
 . I ECSRT="S" D
"RTN","ECRDSSA",266,0)
 . . S ECKEYS(1)=$E($$GETSSN(ECIEN),1,9)  ;ssn
"RTN","ECRDSSA",267,0)
 . . S ECKEYS(2)=$$GET1^DIQ(721,ECIEN_",",1)  ;name
"RTN","ECRDSSA",268,0)
 . I ECKEYS(1)'="",ECKEYS(2)'="" S ECRSLT=1
"RTN","ECRDSSA",269,0)
 Q ECRSLT
"RTN","ECRDSSA",270,0)
 ;
"RTN","ECRDSSA",271,0)
GETSSN(ECIEN) ;get patient SSN
"RTN","ECRDSSA",272,0)
 ;  Input:
"RTN","ECRDSSA",273,0)
 ;    ECIEN - (required) pointer to EVENT CAPTURE PATIENT (#721) file
"RTN","ECRDSSA",274,0)
 ;    
"RTN","ECRDSSA",275,0)
 ;  Output:
"RTN","ECRDSSA",276,0)
 ;    Function value - returns patient's SSN on success; "" on failure
"RTN","ECRDSSA",277,0)
 ;
"RTN","ECRDSSA",278,0)
 N DFN,VADM,VAERR  ;VADPT variables
"RTN","ECRDSSA",279,0)
 I +$G(ECIEN)>0 D
"RTN","ECRDSSA",280,0)
 . S DFN=$$GET1^DIQ(721,ECIEN_",",1,"I")
"RTN","ECRDSSA",281,0)
 . D DEM^VADPT
"RTN","ECRDSSA",282,0)
 Q $E($P($G(VADM(2)),U),6,9)  ;112, only get last 4 SSN
"RTN","ECRDSSA",283,0)
 ;
"RTN","ECRDSSA",284,0)
GETPROV(ECIEN) ;get primary provider
"RTN","ECRDSSA",285,0)
 ;This function retrieves the primary provider for a given Event
"RTN","ECRDSSA",286,0)
 ;Capture record.  Searches the PROVIDER MULTIPLE (#42) field first
"RTN","ECRDSSA",287,0)
 ;and falls back to the PROVIDER (#10) field.
"RTN","ECRDSSA",288,0)
 ;  Input:
"RTN","ECRDSSA",289,0)
 ;    ECIEN -(required) pointer to EVENT CAPTURE PATIENT (#721) file
"RTN","ECRDSSA",290,0)
 ;
"RTN","ECRDSSA",291,0)
 ;  Output:
"RTN","ECRDSSA",292,0)
 ;   Function value - returns provider's name on success; "" on failure
"RTN","ECRDSSA",293,0)
 ;
"RTN","ECRDSSA",294,0)
 N ECPROV  ;provider name
"RTN","ECRDSSA",295,0)
 S ECPROV=""
"RTN","ECRDSSA",296,0)
 I $G(ECIEN)'="",$D(^ECH(ECIEN)) D
"RTN","ECRDSSA",297,0)
 . ;try PROVIDER MULTIPLE
"RTN","ECRDSSA",298,0)
 . I '$$GETPPRV^ECPRVMUT(ECIEN,.ECPROV) D  ;api returns "0" on success
"RTN","ECRDSSA",299,0)
 . . S ECPROV=$P(ECPROV,U,2)
"RTN","ECRDSSA",300,0)
 . E  D  ;try PROVIDER
"RTN","ECRDSSA",301,0)
 . . S ECPROV=$$GET1^DIQ(721,ECIEN_",",10)
"RTN","ECRDSSA",302,0)
 Q ECPROV
"RTN","ECRDSSA",303,0)
 ;
"RTN","ECRDSSA",304,0)
GETPRNM(ECVIEN,ECDT) ;get procedure name
"RTN","ECRDSSA",305,0)
 ;  Input:
"RTN","ECRDSSA",306,0)
 ;    ECVIEN - variable pointer to CPT (#81) file or EC PROC file
"RTN","ECRDSSA",307,0)
 ;    
"RTN","ECRDSSA",308,0)
 ;  Output:
"RTN","ECRDSSA",309,0)
 ;    Function value - returns procedure name on success; "" on failure
"RTN","ECRDSSA",310,0)
 ;
"RTN","ECRDSSA",311,0)
 N ECIEN   ;IEN part of variable pointer
"RTN","ECRDSSA",312,0)
 N ECFILE  ;file part of variable pointer
"RTN","ECRDSSA",313,0)
 S ECIEN=$P(ECVIEN,";",1)
"RTN","ECRDSSA",314,0)
 S ECFILE=$P(ECVIEN,";",2)
"RTN","ECRDSSA",315,0)
 Q $S(ECFILE["ICPT(":$P($$CPT^ICPTCOD(ECIEN,ECDT),U,3),ECFILE["EC(725":$$GET1^DIQ(725,ECIEN_",",.01),1:"")
"RTN","ECRDSSA",316,0)
 ;
"RTN","ECRDSSA",317,0)
GETPROC(ECVIEN) ;get procedure code
"RTN","ECRDSSA",318,0)
 ;  Input:
"RTN","ECRDSSA",319,0)
 ;    ECVIEN - variable pointer to CPT (#81) file or EC PROC file
"RTN","ECRDSSA",320,0)
 ;
"RTN","ECRDSSA",321,0)
 ;  Output:
"RTN","ECRDSSA",322,0)
 ;   Function value - returns procedure code on success; "" on failure
"RTN","ECRDSSA",323,0)
 ;
"RTN","ECRDSSA",324,0)
 N ECIEN  ;IEN part of variable pointer
"RTN","ECRDSSA",325,0)
 N ECFILE  ;file part of variable pointer
"RTN","ECRDSSA",326,0)
 S ECIEN=$P(ECVIEN,";",1)
"RTN","ECRDSSA",327,0)
 S ECFILE=$P(ECVIEN,";",2)
"RTN","ECRDSSA",328,0)
 Q $S(ECFILE["ICPT(":$$GET1^DIQ(81,ECIEN_",",.01),ECFILE["EC(725":$$GET1^DIQ(725,ECIEN_",",1),1:"")
"RTN","ECRDSSA",329,0)
 ;
"RTN","ECRDSSA",330,0)
ASKSRT(ECTYP) ;Ask report sort type
"RTN","ECRDSSA",331,0)
 ;  Input:  none
"RTN","ECRDSSA",332,0)
 ;  
"RTN","ECRDSSA",333,0)
 ;  Output:
"RTN","ECRDSSA",334,0)
 ;    ECTYP - (pass by reference) Sort type
"RTN","ECRDSSA",335,0)
 ;            (P: Patient Name,S: SSN,R: Provider Name)
"RTN","ECRDSSA",336,0)
 ;    Function value - returns 1 on success; 0 on failure
"RTN","ECRDSSA",337,0)
 ;
"RTN","ECRDSSA",338,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y  ;^DIR variables
"RTN","ECRDSSA",339,0)
 S DIR(0)="SA^P:PATIENT NAME;S:SSN;R:PROVIDER NAME"
"RTN","ECRDSSA",340,0)
 S DIR("A")="Sort within each DSS Unit by: "
"RTN","ECRDSSA",341,0)
 S DIR("B")="SSN"
"RTN","ECRDSSA",342,0)
 D ^DIR
"RTN","ECRDSSA",343,0)
 S ECTYP=$P(Y,U)
"RTN","ECRDSSA",344,0)
 Q $S($D(DUOUT):0,$D(DTOUT):0,$D(DIROUT):0,1:1)
"RTN","ECRDSSA",345,0)
 ;
"RTN","ECRDSSA",346,0)
ASKDEV() ;Ask output device
"RTN","ECRDSSA",347,0)
 ;  Input:  none
"RTN","ECRDSSA",348,0)
 ;
"RTN","ECRDSSA",349,0)
 ; Output:  1 if report is printed
"RTN","ECRDSSA",350,0)
 ;          0 if report is queued (or exited)
"RTN","ECRDSSA",351,0)
 ;
"RTN","ECRDSSA",352,0)
 N ECX,ZTDESC,ZTRTN,ZTSAVE
"RTN","ECRDSSA",353,0)
 S ECX=1
"RTN","ECRDSSA",354,0)
 K %ZIS S %ZIS="QMP"
"RTN","ECRDSSA",355,0)
 D ^%ZIS
"RTN","ECRDSSA",356,0)
 S:POP ECX=0
"RTN","ECRDSSA",357,0)
 I ECX&($D(IO("Q"))) D
"RTN","ECRDSSA",358,0)
 . S ZTRTN="STRPT^ECRDSSA",ZTDESC="DSS UNIT ACTIVITY REPORT"
"RTN","ECRDSSA",359,0)
 . S (ZTSAVE("ECLOC("),ZTSAVE("ECDSSU("),ZTSAVE("ECSRT"))=""
"RTN","ECRDSSA",360,0)
 . S (ZTSAVE("ECSTDT"),ZTSAVE("ECENDDT"))=""
"RTN","ECRDSSA",361,0)
 . D ^%ZTLOAD
"RTN","ECRDSSA",362,0)
 . D HOME^%ZIS
"RTN","ECRDSSA",363,0)
 . S ECX=0
"RTN","ECRDSSA",364,0)
 Q ECX
"RTN","ECRDSSEC")
0^13^B6543732^n/a
"RTN","ECRDSSEC",1,0)
ECRDSSEC ;ALB/DAN - Event capture screen for DSS unit report ;11/22/11  16:58
"RTN","ECRDSSEC",2,0)
 ;;2.0;EVENT CAPTURE;**112**;8 May 96;Build 18
"RTN","ECRDSSEC",3,0)
 ;
"RTN","ECRDSSEC",4,0)
STRPT ;Main entry point for report
"RTN","ECRDSSEC",5,0)
 N NODE,PRO,CNT,LOC,CAT,IEN,PX,PN,CATD,LOCDS,ECL,ECSYN,ACT,DEFCL
"RTN","ECRDSSEC",6,0)
 K ^TMP($J,"ECRPT")
"RTN","ECRDSSEC",7,0)
 S (CNT,LOC)=0
"RTN","ECRDSSEC",8,0)
 S CNT=CNT+1,^TMP($J,"ECRPT",CNT)="SYNONYM^PROCEDURE^LOCATION^DEFAULT ASSOCIATED CLINIC^CATEGORY^STATUS"
"RTN","ECRDSSEC",9,0)
 F  S LOC=$O(^ECJ("AP",LOC)) Q:'LOC  S CAT="" D
"RTN","ECRDSSEC",10,0)
 .I ECD'="" D:$D(^ECJ("AP",LOC,ECD)) GETSCN Q 
"RTN","ECRDSSEC",11,0)
 I ECPTYP="E" Q  ;Stop if exporting and not printing.
"RTN","ECRDSSEC",12,0)
 U IO
"RTN","ECRDSSEC",13,0)
 D HDR
"RTN","ECRDSSEC",14,0)
 S CNT=1
"RTN","ECRDSSEC",15,0)
 F  S CNT=$O(^TMP($J,"ECRPT",CNT)) Q:'+CNT  D
"RTN","ECRDSSEC",16,0)
 .S NODE=^TMP($J,"ECRPT",CNT)
"RTN","ECRDSSEC",17,0)
 .W $E($P(NODE,U),1,20),?22,$E($P(NODE,U,2),1,25),?49,$E($P(NODE,U,3),1,25),?76,$E($P(NODE,U,4),1,25),?103,$E($P(NODE,U,5),1,25),?123,$P(NODE,U,6),!
"RTN","ECRDSSEC",18,0)
 .I $Y>(IOSL-5) D HDR
"RTN","ECRDSSEC",19,0)
 Q
"RTN","ECRDSSEC",20,0)
GETSCN F  S CAT=$O(^ECJ("AP",LOC,ECD,CAT)) Q:CAT=""  S PX="" D
"RTN","ECRDSSEC",21,0)
 .F  S PX=$O(^ECJ("AP",LOC,ECD,CAT,PX)) Q:PX=""  S IEN=0 D
"RTN","ECRDSSEC",22,0)
 ..F  S IEN=$O(^ECJ("AP",LOC,ECD,CAT,PX,IEN)) Q:'IEN  D
"RTN","ECRDSSEC",23,0)
 ...S NODE=$G(^ECJ(IEN,0)) I NODE="" Q
"RTN","ECRDSSEC",24,0)
 ...S ACT=$P(NODE,U,2)
"RTN","ECRDSSEC",25,0)
 ...I $S(STAT="A"&(ACT'=""):1,STAT="I"&(ACT=""):1,1:0) Q  ;filter by status
"RTN","ECRDSSEC",26,0)
 ...S PRO=$G(^ECJ(IEN,"PRO")),ECSYN=$P(PRO,U,2),PN=$P($P(PRO,U),";"),DEFCL=$P(PRO,U,4)
"RTN","ECRDSSEC",27,0)
 ...I PN="" Q
"RTN","ECRDSSEC",28,0)
 ...I $P(PRO,U)["EC" S PN=$G(^EC(725,PN,0)),PRO=$P(PN,U,2)_" "_$P(PN,U)
"RTN","ECRDSSEC",29,0)
 ...E  S PN=$$CPT^ICPTCOD(PN) S PRO=$P(PN,U,2)_" "_$P(PN,U,3)
"RTN","ECRDSSEC",30,0)
 ...S ACT=$S(ACT'="":"Inactive",1:"Active")
"RTN","ECRDSSEC",31,0)
 ...S CATD=$S('CAT:"None",1:$P($G(^EC(726,CAT,0)),U))
"RTN","ECRDSSEC",32,0)
 ...S LOCDS=$$GET1^DIQ(4,LOC,.01,"I"),CNT=CNT+1
"RTN","ECRDSSEC",33,0)
 ...I DEFCL'="" S DEFCL=$$GET1^DIQ(44,DEFCL,".01")
"RTN","ECRDSSEC",34,0)
 ...S ^TMP($J,"ECRPT",CNT)=ECSYN_U_PRO_U_LOCDS_U_DEFCL_U_CATD_U_ACT
"RTN","ECRDSSEC",35,0)
 Q
"RTN","ECRDSSEC",36,0)
 ;
"RTN","ECRDSSEC",37,0)
HDR ;
"RTN","ECRDSSEC",38,0)
 I $D(IOF) W @IOF
"RTN","ECRDSSEC",39,0)
 W !,"EVENT SCREENS FOR DSS UNIT:",$$GET1^DIQ(724,ECD,".01"),?$S($G(IOM):(IOM-18),1:62),$$FMTE^XLFDT($$NOW^XLFDT,"1M"),!!
"RTN","ECRDSSEC",40,0)
 W !,"SYNONYM",?22,"PROCEDURE",?49,"LOCATION",?76,"ASSOC. CLINIC",?103,"CATEGORY",?123,"STATUS",!,$$REPEAT^XLFSTR("-",$S($G(IOM):IOM,1:132)),!
"RTN","ECRDSSUA")
0^10^B5616622^n/a
"RTN","ECRDSSUA",1,0)
ECRDSSUA ;ALB/DAN - Users by DSS unit report ;11/22/11  16:59
"RTN","ECRDSSUA",2,0)
 ;;2.0;EVENT CAPTURE;**112**;8 May 96;Build 18
"RTN","ECRDSSUA",3,0)
 ;
"RTN","ECRDSSUA",4,0)
STRPT ;Main entry point for report
"RTN","ECRDSSUA",5,0)
 N IEN,CNT,UNIT,NAME
"RTN","ECRDSSUA",6,0)
 K ^TMP($J,"ECRDSSUA") ;Temporary storage of information
"RTN","ECRDSSUA",7,0)
 U IO
"RTN","ECRDSSUA",8,0)
 S IEN=0 F  S IEN=$O(^VA(200,IEN)) Q:'+IEN  D
"RTN","ECRDSSUA",9,0)
 .S UNIT=0 F  S UNIT=$O(^VA(200,IEN,"EC","B",UNIT)) Q:'+UNIT  I $D(ECDSSU(UNIT)) S ^TMP($J,"ECRDSSUA",ECDSSU(UNIT),$$GET1^DIQ(200,IEN,".01"))=IEN_U_$E($P($$GET^XUA4A72(IEN,DT),U,3),1,52)
"RTN","ECRDSSUA",10,0)
 I ECPTYP="E" D  Q  ;Put into parsable format
"RTN","ECRDSSUA",11,0)
 .S CNT=0,UNIT="",NAME=""
"RTN","ECRDSSUA",12,0)
 .S CNT=CNT+1,^TMP($J,"ECRPT",CNT)="DSS UNIT^USER NAME^IEN^PERSON CLASS/CLASSIFICATION"
"RTN","ECRDSSUA",13,0)
 .F  S UNIT=$O(^TMP($J,"ECRDSSUA",UNIT)) Q:UNIT=""  F  S NAME=$O(^TMP($J,"ECRDSSUA",UNIT,NAME)) Q:NAME=""  S CNT=CNT+1,^TMP($J,"ECRPT",CNT)=UNIT_U_NAME_U_$P(^TMP($J,"ECRDSSUA",UNIT,NAME),U)_U_$P(^(NAME),U,2)
"RTN","ECRDSSUA",14,0)
 .K ^TMP($J,"ECRDSSUA")
"RTN","ECRDSSUA",15,0)
 ;
"RTN","ECRDSSUA",16,0)
 D HDR
"RTN","ECRDSSUA",17,0)
 S UNIT="",NAME=""
"RTN","ECRDSSUA",18,0)
 F  S UNIT=$O(^TMP($J,"ECRDSSUA",UNIT)) Q:UNIT=""  F  S NAME=$O(^TMP($J,"ECRDSSUA",UNIT,NAME)) Q:NAME=""  D
"RTN","ECRDSSUA",19,0)
 .W !,UNIT,?32,NAME,?64,$P(^TMP($J,"ECRDSSUA",UNIT,NAME),U),?80,$P(^(NAME),U,2)
"RTN","ECRDSSUA",20,0)
 .I (IOSL-$Y)<5 W @IOF D HDR
"RTN","ECRDSSUA",21,0)
 K ^TMP($J,"ECRDSSUA")
"RTN","ECRDSSUA",22,0)
 Q
"RTN","ECRDSSUA",23,0)
 ;
"RTN","ECRDSSUA",24,0)
HDR ;Print header for report
"RTN","ECRDSSUA",25,0)
 W !,"Users with access to selected DSS Units",?$S($G(IOM):(IOM-15),1:65),$$FMTE^XLFDT($$DT^XLFDT),!!
"RTN","ECRDSSUA",26,0)
 W "DSS UNIT",?32,"USER NAME",?64,"IEN",?80,"PERSON CLASS/CLASSIFICATION",!,$$REPEAT^XLFSTR("-",$S($G(IOM):IOM,1:132)),!
"RTN","ECRDSSUA",27,0)
 Q
"RTN","ECRECER")
0^16^B26467658^n/a
"RTN","ECRECER",1,0)
ECRECER ;ALB/DAN-Event Capture Encounter Report ;12/13/11  10:23
"RTN","ECRECER",2,0)
 ;;2.0;EVENT CAPTURE;**112**;8 May 96;Build 18
"RTN","ECRECER",3,0)
 ;
"RTN","ECRECER",4,0)
STRPT ;
"RTN","ECRECER",5,0)
 K ^TMP("ECRECER",$J),^TMP($J,"ECRPT")
"RTN","ECRECER",6,0)
 D GETREC
"RTN","ECRECER",7,0)
 I ECPTYP="E" D EXPORT Q
"RTN","ECRECER",8,0)
 U IO
"RTN","ECRECER",9,0)
 D PRINT
"RTN","ECRECER",10,0)
 Q
"RTN","ECRECER",11,0)
 ;
"RTN","ECRECER",12,0)
GETREC ;Find records to put on report
"RTN","ECRECER",13,0)
 N ECLI,ECDFN,ECD,ECDT,ECIEN,ECPROV,ECPATN,ECSSN,ECVOL,UNI,ECARR,ECIO
"RTN","ECRECER",14,0)
 S ECLI=0 F  S ECLI=$O(ECLOC1(ECLI)) Q:'+ECLI  D
"RTN","ECRECER",15,0)
 .S ECDFN=0 K UNI
"RTN","ECRECER",16,0)
 .F  S ECDFN=+$O(^ECH("ADT",ECLI,ECDFN)) Q:'ECDFN  D
"RTN","ECRECER",17,0)
 ..S ECD=0
"RTN","ECRECER",18,0)
 ..F  S ECD=$O(ECDSSU(ECD)) Q:'ECD  D
"RTN","ECRECER",19,0)
 ...S ECDT=ECSD-.1
"RTN","ECRECER",20,0)
 ...F  S ECDT=+$O(^ECH("ADT",ECLI,ECDFN,ECD,ECDT)) Q:'ECDT!(ECDT>(ECED_.24))  D
"RTN","ECRECER",21,0)
 ....S ECIEN=0
"RTN","ECRECER",22,0)
 ....F  S ECIEN=+$O(^ECH("ADT",ECLI,ECDFN,ECD,ECDT,ECIEN)) Q:'ECIEN  D
"RTN","ECRECER",23,0)
 .....S ECPROV=$$GETPROV^ECRDSSA(ECIEN)
"RTN","ECRECER",24,0)
 .....Q:$D(UNI(ECDFN,ECDT,ECD))  S UNI(ECDFN,ECDT,ECD)="" ;don't count if already counted
"RTN","ECRECER",25,0)
 .....K ECARR D GETS^DIQ(721,ECIEN,"1;9;29","IE","ECARR","ECERROR")
"RTN","ECRECER",26,0)
 .....S ECPATN=ECARR(721,ECIEN_",",1,"E")_"~"_ECDFN
"RTN","ECRECER",27,0)
 .....S ECSSN=$$GETSSN^ECRDSSA(ECIEN)
"RTN","ECRECER",28,0)
 .....S ECVOL=ECARR(721,ECIEN_",",9,"E"),ECIO=ECARR(721,ECIEN_",",29,"I")
"RTN","ECRECER",29,0)
 .....I $G(ECSORT)="P" D
"RTN","ECRECER",30,0)
 ......S ^TMP("ECRECER",$J,ECLOC1(ECLI),ECPATN,ECPROV,ECIEN)=ECIO_U_ECDT_U_ECD_U_ECVOL_U_ECSSN
"RTN","ECRECER",31,0)
 .....I $G(ECSORT)="D" D
"RTN","ECRECER",32,0)
 ......S ^TMP("ECRECER",$J,ECLOC1(ECLI),ECPROV,ECPATN,ECIEN)=ECIO_U_ECDT_U_ECD_U_ECVOL_U_ECSSN
"RTN","ECRECER",33,0)
 Q
"RTN","ECRECER",34,0)
 ;
"RTN","ECRECER",35,0)
EXPORT ;Put in delimited format for exporting
"RTN","ECRECER",36,0)
 N CNT,LOC,PATN,PROV,IEN,DATA
"RTN","ECRECER",37,0)
 Q:'$D(^TMP("ECRECER",$J))
"RTN","ECRECER",38,0)
 S CNT=1,^TMP($J,"ECRPT",CNT)="LOCATION^PATIENT^SSN^I/O^DATE/TIME^PROVIDER #1^DSS UNIT^VOLUME"
"RTN","ECRECER",39,0)
 I ECSORT="P" D
"RTN","ECRECER",40,0)
 .S LOC="" F  S LOC=$O(^TMP("ECRECER",$J,LOC)) Q:LOC=""  D
"RTN","ECRECER",41,0)
 ..S PATN="" F  S PATN=$O(^TMP("ECRECER",$J,LOC,PATN)) Q:PATN=""  D
"RTN","ECRECER",42,0)
 ...S PROV="" F  S PROV=$O(^TMP("ECRECER",$J,LOC,PATN,PROV)) Q:PROV=""  D
"RTN","ECRECER",43,0)
 ....S IEN=0 F  S IEN=$O(^TMP("ECRECER",$J,LOC,PATN,PROV,IEN)) Q:'+IEN  D
"RTN","ECRECER",44,0)
 .....S DATA=^(IEN) ;Naked reference to above line
"RTN","ECRECER",45,0)
 .....S CNT=CNT+1,^TMP($J,"ECRPT",CNT)=LOC_U_$P(PATN,"~")_U_$P(DATA,U,5)_U_$P(DATA,U,1)_U_$$FMTE^XLFDT($P(DATA,U,2),2)_U_PROV_U_ECDSSU($P(DATA,U,3))_U_$P(DATA,U,4)
"RTN","ECRECER",46,0)
 I ECSORT="D" D
"RTN","ECRECER",47,0)
 .S LOC="" F  S LOC=$O(^TMP("ECRECER",$J,LOC)) Q:LOC=""  D
"RTN","ECRECER",48,0)
 ..S PROV="" F  S PROV=$O(^TMP("ECRECER",$J,LOC,PROV)) Q:PROV=""  D
"RTN","ECRECER",49,0)
 ...S PATN="" F  S PATN=$O(^TMP("ECRECER",$J,LOC,PROV,PATN)) Q:PATN=""  D
"RTN","ECRECER",50,0)
 ....S IEN=0 F  S IEN=$O(^TMP("ECRECER",$J,LOC,PROV,PATN,IEN)) Q:'+IEN  D
"RTN","ECRECER",51,0)
 .....S DATA=^(IEN) ;Naked reference to above line
"RTN","ECRECER",52,0)
 .....S CNT=CNT+1,^TMP($J,"ECRPT",CNT)=LOC_U_$P(PATN,"~")_U_$P(DATA,U,5)_U_$P(DATA,U,1)_U_$$FMTE^XLFDT($P(DATA,U,2),2)_U_PROV_U_ECDSSU($P(DATA,U,3))_U_$P(DATA,U,4)
"RTN","ECRECER",53,0)
 Q
"RTN","ECRECER",54,0)
 ;
"RTN","ECRECER",55,0)
PRINT ;Display results
"RTN","ECRECER",56,0)
 N LOC,PATN,PROV,IEN,DATA,PAGE,PTOT,PROTOT
"RTN","ECRECER",57,0)
 I '$D(^TMP("ECRECER",$J)) S LOC="NONE" D HDR W !,"No data found"
"RTN","ECRECER",58,0)
 S PAGE=0
"RTN","ECRECER",59,0)
 I ECSORT="P" D
"RTN","ECRECER",60,0)
 .S LOC="" F  S LOC=$O(^TMP("ECRECER",$J,LOC)) Q:LOC=""  D HDR D
"RTN","ECRECER",61,0)
 ..S PATN="" F  S PATN=$O(^TMP("ECRECER",$J,LOC,PATN)) Q:PATN=""  K PTOT,PROTOT D  D SUB
"RTN","ECRECER",62,0)
 ...S PROV="" F  S PROV=$O(^TMP("ECRECER",$J,LOC,PATN,PROV)) Q:PROV=""  D
"RTN","ECRECER",63,0)
 ....S IEN=0 F  S IEN=$O(^TMP("ECRECER",$J,LOC,PATN,PROV,IEN)) Q:'+IEN  D
"RTN","ECRECER",64,0)
 .....S DATA=^(IEN) ;Naked reference to above line
"RTN","ECRECER",65,0)
 .....W !,$P(PATN,"~"),?32,$P(DATA,U,5),?38,$P(DATA,U,1),?43,$$FMTE^XLFDT($P(DATA,U,2),2),?59,PROV,?91,ECDSSU($P(DATA,U,3)),?123,$P(DATA,U,4)
"RTN","ECRECER",66,0)
 .....S PTOT=+$G(PTOT)+1,PROTOT(PROV)=+$G(PROTOT(PROV))+1
"RTN","ECRECER",67,0)
 I ECSORT="D" D
"RTN","ECRECER",68,0)
 .S LOC="" F  S LOC=$O(^TMP("ECRECER",$J,LOC)) Q:LOC=""  D HDR D
"RTN","ECRECER",69,0)
 ..S PROV="" F  S PROV=$O(^TMP("ECRECER",$J,LOC,PROV)) Q:PROV=""  K PROTOT,PTOT D  D SUB
"RTN","ECRECER",70,0)
 ...S PATN="" F  S PATN=$O(^TMP("ECRECER",$J,LOC,PROV,PATN)) Q:PATN=""  D
"RTN","ECRECER",71,0)
 ....S IEN=0 F  S IEN=$O(^TMP("ECRECER",$J,LOC,PROV,PATN,IEN)) Q:'+IEN  D
"RTN","ECRECER",72,0)
 .....S DATA=^(IEN) ;Naked reference to above line
"RTN","ECRECER",73,0)
 .....W !,$P(PATN,"~"),?32,$P(DATA,U,5),?38,$P(DATA,U,1),?43,$$FMTE^XLFDT($P(DATA,U,2),2),?59,PROV,?91,ECDSSU($P(DATA,U,3)),?123,$P(DATA,U,4)
"RTN","ECRECER",74,0)
 .....S PTOT(PATN)=+$G(PTOT(PATN))+1,PROTOT=+$G(PROTOT)+1
"RTN","ECRECER",75,0)
 Q
"RTN","ECRECER",76,0)
HDR ;Print Header
"RTN","ECRECER",77,0)
 N SORT
"RTN","ECRECER",78,0)
 W @IOF
"RTN","ECRECER",79,0)
 S PAGE=+$G(PAGE)+1
"RTN","ECRECER",80,0)
 W ?51,"Event Capture Encounters Report",?123,"Page: ",PAGE
"RTN","ECRECER",81,0)
 W !,?(132-(12+$L(LOC))\2),"For Location ",LOC
"RTN","ECRECER",82,0)
 W !,?47,"From ",$$FMTE^XLFDT(ECSD)," through ",$$FMTE^XLFDT(ECED)
"RTN","ECRECER",83,0)
 S SORT=$S(ECSORT="P":"Patient Name",1:"Provider")
"RTN","ECRECER",84,0)
 W !,?(132-(9+$L(SORT))\2),"Sorted by ",SORT,!
"RTN","ECRECER",85,0)
 W !,"Patient",?32,"SSN",?38,"I/O",?43,"Date/Time",?59,"Provider #1",?91,"DSS Unit",?123,"Vol"
"RTN","ECRECER",86,0)
 W !,$$REPEAT^XLFSTR("-",132)
"RTN","ECRECER",87,0)
 Q
"RTN","ECRECER",88,0)
SUB ;Print totals
"RTN","ECRECER",89,0)
 N ARR,DISP
"RTN","ECRECER",90,0)
 I ECSORT="P" D
"RTN","ECRECER",91,0)
 .W !
"RTN","ECRECER",92,0)
 .S ARR="" F  S ARR=$O(PROTOT(ARR)) Q:ARR=""  S DISP="Subtotal for provider "_ARR W !,$J(DISP,128),$J(PROTOT(ARR),4)
"RTN","ECRECER",93,0)
 .W !,?128,"===="
"RTN","ECRECER",94,0)
 .S DISP="Total for patient "_$P(PATN,"~") W !,$J(DISP,128),$J(PTOT,4),!
"RTN","ECRECER",95,0)
 I ECSORT="D" D
"RTN","ECRECER",96,0)
 .W !
"RTN","ECRECER",97,0)
 .S ARR="" F  S ARR=$O(PTOT(ARR)) Q:ARR=""  S DISP="Subtotal for patient "_$P(ARR,"~") W !,$J(DISP,128),$J(PTOT(ARR),4)
"RTN","ECRECER",98,0)
 .W !,?128,"===="
"RTN","ECRECER",99,0)
 .S DISP="Total for provider "_PROV W !,$J(DISP,128),$J(PROTOT,4),!
"RTN","ECRECER",100,0)
 Q
"RTN","ECRECSIC")
0^17^B9988550^n/a
"RTN","ECRECSIC",1,0)
ECRECSIC ;ALB/DAN - Event Capture Screens w/ Inactive Clinics ;12/14/11  16:09
"RTN","ECRECSIC",2,0)
 ;;2.0;EVENT CAPTURE;**112**;8 May 96;Build 18
"RTN","ECRECSIC",3,0)
 ;
"RTN","ECRECSIC",4,0)
STRPT ;
"RTN","ECRECSIC",5,0)
 D GETREC
"RTN","ECRECSIC",6,0)
 I ECPTYP="E" D EXPORT Q
"RTN","ECRECSIC",7,0)
 U IO
"RTN","ECRECSIC",8,0)
 D PRINT
"RTN","ECRECSIC",9,0)
 Q
"RTN","ECRECSIC",10,0)
 ;
"RTN","ECRECSIC",11,0)
GETREC ;Find screens with inactive clinics
"RTN","ECRECSIC",12,0)
 N STAT,IEN,ACT,FL,V,EI,ECSCR,CLN,LOC,UNT,CAT,PX,NODE,DSSIEN,EC4,EC4N,ECPCL
"RTN","ECRECSIC",13,0)
 K ^TMP("ECRECSIC",$J)
"RTN","ECRECSIC",14,0)
 S STAT="A",FL="4,724,726"
"RTN","ECRECSIC",15,0)
 S V="LOC,UNT,CAT",IEN=0
"RTN","ECRECSIC",16,0)
 F  S IEN=$O(^ECJ(IEN)) Q:'IEN  S NODE=$G(^ECJ(IEN,0)) I NODE'="" D
"RTN","ECRECSIC",17,0)
 .S ACT=$P(NODE,U,2),ECSCR=$TR($P(NODE,U),"-;,","^^")
"RTN","ECRECSIC",18,0)
 .I $S(STAT="A"&(ACT'=""):1,STAT="I"&(ACT=""):1,1:0) Q
"RTN","ECRECSIC",19,0)
 .I '$D(ECLOC1(+$P(ECSCR,U))) Q  ;Not a location we're looking for
"RTN","ECRECSIC",20,0)
 .I '$D(ECDSSU(+$P(ECSCR,U,2))) Q  ;Not a DSS Unit we're looking for
"RTN","ECRECSIC",21,0)
 .S EC4=$P($G(^ECJ(IEN,"PRO")),U,4) I '+EC4 Q  ;No associated clinic
"RTN","ECRECSIC",22,0)
 .D CLIN^ECPCEU I ECPCL Q  ;Clinic is active, not what we're looking for
"RTN","ECRECSIC",23,0)
 .S EC4N=$$GET1^DIQ(44,EC4,.01) ;Get clinic name
"RTN","ECRECSIC",24,0)
 .F EI=1:1:3 D
"RTN","ECRECSIC",25,0)
 ..S @$P(V,",",EI)=$$GET1^DIQ($P(FL,",",EI),$P(ECSCR,U,EI),.01,"E"),PX=""
"RTN","ECRECSIC",26,0)
 .I $P(ECSCR,U,5)["EC" D
"RTN","ECRECSIC",27,0)
 ..S PRO=$G(^EC(725,$P(ECSCR,U,4),0)),PX=$P(PRO,U,2)
"RTN","ECRECSIC",28,0)
 .E  S PRO=$$CPT^ICPTCOD($P(ECSCR,U,4)) S PX=$P(PRO,U,2)
"RTN","ECRECSIC",29,0)
 .S ^TMP("ECRECSIC",$J,UNT,LOC,IEN)=CAT_U_PX_U_EC4_U_EC4N
"RTN","ECRECSIC",30,0)
 Q
"RTN","ECRECSIC",31,0)
 ;
"RTN","ECRECSIC",32,0)
PRINT ;
"RTN","ECRECSIC",33,0)
 N PAGE,UNT,LOC,IEN,DATA
"RTN","ECRECSIC",34,0)
 D HDR
"RTN","ECRECSIC",35,0)
 S UNT="" F  S UNT=$O(^TMP("ECRECSIC",$J,UNT)) Q:UNT=""  D  W !
"RTN","ECRECSIC",36,0)
 .S LOC="" F  S LOC=$O(^TMP("ECRECSIC",$J,UNT,LOC)) Q:LOC=""  S IEN=0 F  S IEN=$O(^TMP("ECRECSIC",$J,UNT,LOC,IEN)) Q:'+IEN  D
"RTN","ECRECSIC",37,0)
 ..S DATA=^TMP("ECRECSIC",$J,UNT,LOC,IEN)
"RTN","ECRECSIC",38,0)
 ..W !,UNT,?32,LOC,?64,$E($P(DATA,U),1,20),?86,$P(DATA,U,2),?93,$P(DATA,U,3),?99,$P(DATA,U,4)
"RTN","ECRECSIC",39,0)
 ..I $Y>(IOSL-4) D HDR
"RTN","ECRECSIC",40,0)
 Q
"RTN","ECRECSIC",41,0)
 ;
"RTN","ECRECSIC",42,0)
HDR ;
"RTN","ECRECSIC",43,0)
 W @IOF
"RTN","ECRECSIC",44,0)
 S PAGE=$G(PAGE)+1
"RTN","ECRECSIC",45,0)
 W !,?56,"EVENT CAPTURE REPORT",?123,"PAGE: ",PAGE
"RTN","ECRECSIC",46,0)
 W !,?37,"EVENT CODE SCREENS WITH INACTIVE DEFAULT ASSOCIATED CLINICS",?104,"RUN DATE: ",$$FMTE^XLFDT($$NOW^XLFDT,"M"),!
"RTN","ECRECSIC",47,0)
 W !,?86,"PROC",?91,"CLINIC",?99,"CLINIC",!,"DSS UNIT",?32,"LOCATION",?64,"CATEGORY",?86,"CODE",?93,"IEN",?99,"NAME"
"RTN","ECRECSIC",48,0)
 W !,$$REPEAT^XLFSTR("-",132)
"RTN","ECRECSIC",49,0)
 Q
"RTN","ECRECSIC",50,0)
EXPORT ;
"RTN","ECRECSIC",51,0)
 N CNT,UNT,LOC,IEN
"RTN","ECRECSIC",52,0)
 K ^TMP($J,"ECRPT")
"RTN","ECRECSIC",53,0)
 S CNT=1,^TMP($J,"ECRPT",CNT)="DSS UNIT^LOCATION^CATEGORY^PROCEDURE CODE^INACTIVE CLINIC IEN^INACTIVE CLINIC NAME"
"RTN","ECRECSIC",54,0)
 S UNT="" F  S UNT=$O(^TMP("ECRECSIC",$J,UNT)) Q:UNT=""  S LOC="" F  S LOC=$O(^TMP("ECRECSIC",$J,UNT,LOC)) Q:LOC=""  S IEN=0 F  S IEN=$O(^TMP("ECRECSIC",$J,UNT,LOC,IEN)) Q:'+IEN  D
"RTN","ECRECSIC",55,0)
 .S CNT=CNT+1,^TMP($J,"ECRPT",CNT)=UNT_U_LOC_U_^TMP("ECRECSIC",$J,UNT,LOC,IEN)
"RTN","ECRECSIC",56,0)
 Q
"RTN","ECRECSPC")
0^18^B10939952^n/a
"RTN","ECRECSPC",1,0)
ECRECSPC ;ALB/DAN - Event Capture Screens w/ selected procedure codes ;12/15/11  18:08
"RTN","ECRECSPC",2,0)
 ;;2.0;EVENT CAPTURE;**112**;8 May 96;Build 18
"RTN","ECRECSPC",3,0)
 ;
"RTN","ECRECSPC",4,0)
STRPT ;
"RTN","ECRECSPC",5,0)
 D GETREC
"RTN","ECRECSPC",6,0)
 I ECPTYP="E" D EXPORT Q
"RTN","ECRECSPC",7,0)
 U IO
"RTN","ECRECSPC",8,0)
 D PRINT
"RTN","ECRECSPC",9,0)
 Q
"RTN","ECRECSPC",10,0)
 ;
"RTN","ECRECSPC",11,0)
GETREC ;Find screens with selected procedure codes
"RTN","ECRECSPC",12,0)
 N IEN,ACT,FL,V,EI,ECSCR,LOC,UNT,CAT,PX,NODE
"RTN","ECRECSPC",13,0)
 K ^TMP("ECRECSPC",$J)
"RTN","ECRECSPC",14,0)
 S FL="4,724,726"
"RTN","ECRECSPC",15,0)
 S V="LOC,UNT,CAT",IEN=0
"RTN","ECRECSPC",16,0)
 F  S IEN=$O(^ECJ(IEN)) Q:'IEN  S NODE=$G(^ECJ(IEN,0)) I NODE'="" D
"RTN","ECRECSPC",17,0)
 .S ACT=$P(NODE,U,2),ECSCR=$TR($P(NODE,U),"-;,","^^")
"RTN","ECRECSPC",18,0)
 .I '$D(ECLOC1(+$P(ECSCR,U))) Q  ;Not a location we're looking for
"RTN","ECRECSPC",19,0)
 .F EI=1:1:3 D
"RTN","ECRECSPC",20,0)
 ..S @$P(V,",",EI)=$$GET1^DIQ($P(FL,",",EI),$P(ECSCR,U,EI),.01,"E"),PX=""
"RTN","ECRECSPC",21,0)
 .I $P(ECSCR,U,5)["EC" D
"RTN","ECRECSPC",22,0)
 ..S PRO=$G(^EC(725,$P(ECSCR,U,4),0)),PX=$P(PRO,U,2)_"~"_$P(PRO,U)
"RTN","ECRECSPC",23,0)
 .E  S PRO=$$CPT^ICPTCOD($P(ECSCR,U,4)) S PX=$P(PRO,U,2)_"~"_$P(PRO,U,3)
"RTN","ECRECSPC",24,0)
 .I ECLPC0'="ALL" I '$D(ECPROC($P(PX,"~"))) Q  ;not procedure code we're looking for
"RTN","ECRECSPC",25,0)
 .S ^TMP("ECRECSPC",$J,PX,UNT,LOC,IEN)=CAT_U_$S(ACT="":"ACTIVE",1:"INACTIVE")_U_+$P(ECSCR,U,2)
"RTN","ECRECSPC",26,0)
 Q
"RTN","ECRECSPC",27,0)
 ;
"RTN","ECRECSPC",28,0)
PRINT ;
"RTN","ECRECSPC",29,0)
 N PAGE,UNT,LOC,IEN,DATA,PX,DONE
"RTN","ECRECSPC",30,0)
 D HDR
"RTN","ECRECSPC",31,0)
 S PX="" F  S PX=$O(^TMP("ECRECSPC",$J,PX)) Q:PX=""  D
"RTN","ECRECSPC",32,0)
 .W !,?3,"PROCEDURE CODE: ",$P(PX,"~"),!,?3,"PROCEDURE NAME: ",$P(PX,"~",2),!
"RTN","ECRECSPC",33,0)
 .S UNT="" F  S UNT=$O(^TMP("ECRECSPC",$J,PX,UNT)) Q:UNT=""  D  W !
"RTN","ECRECSPC",34,0)
 ..S DONE=0
"RTN","ECRECSPC",35,0)
 ..S LOC="" F  S LOC=$O(^TMP("ECRECSPC",$J,PX,UNT,LOC)) Q:LOC=""  S IEN=0 F  S IEN=$O(^TMP("ECRECSPC",$J,PX,UNT,LOC,IEN)) Q:'+IEN  D
"RTN","ECRECSPC",36,0)
 ...S DATA=^TMP("ECRECSPC",$J,PX,UNT,LOC,IEN)
"RTN","ECRECSPC",37,0)
 ...W ! I 'DONE W $P(DATA,U,3),?11,UNT S DONE=1
"RTN","ECRECSPC",38,0)
 ...W ?43,LOC,?75,$P(DATA,U),?112,$P(DATA,U,2)
"RTN","ECRECSPC",39,0)
 ...I $Y>(IOSL-4) D HDR
"RTN","ECRECSPC",40,0)
 Q
"RTN","ECRECSPC",41,0)
 ;
"RTN","ECRECSPC",42,0)
HDR ;
"RTN","ECRECSPC",43,0)
 W @IOF
"RTN","ECRECSPC",44,0)
 S PAGE=$G(PAGE)+1
"RTN","ECRECSPC",45,0)
 W !,?56,"EVENT CAPTURE REPORT",?123,"PAGE: ",PAGE
"RTN","ECRECSPC",46,0)
 W !,?35,"DSS UNITS/EVENT CODE (EC) SCREENS FOR SELECTED PROCEDURE CODE",?104,"RUN DATE: ",$$FMTE^XLFDT($$NOW^XLFDT,"M"),!
"RTN","ECRECSPC",47,0)
 W !,?110,"EC SCREEN",!,"DSS IEN",?11,"DSS UNIT NAME",?43,"LOCATION",?75,"CATEGORY",?112,"STATUS"
"RTN","ECRECSPC",48,0)
 W !,$$REPEAT^XLFSTR("-",132)
"RTN","ECRECSPC",49,0)
 Q
"RTN","ECRECSPC",50,0)
EXPORT ;
"RTN","ECRECSPC",51,0)
 N CNT,UNT,LOC,IEN,PX,DATA
"RTN","ECRECSPC",52,0)
 K ^TMP($J,"ECRPT")
"RTN","ECRECSPC",53,0)
 S CNT=1,^TMP($J,"ECRPT",CNT)="PROCEDURE CODE^PROCEDURE NAME^DSS UNIT IEN^DSS UNIT^LOCATION^CATEGORY^EC SCREEN STATUS"
"RTN","ECRECSPC",54,0)
 S PX="" F  S PX=$O(^TMP("ECRECSPC",$J,PX)) Q:PX=""  D
"RTN","ECRECSPC",55,0)
 .S UNT="" F  S UNT=$O(^TMP("ECRECSPC",$J,PX,UNT)) Q:UNT=""  S LOC="" F  S LOC=$O(^TMP("ECRECSPC",$J,PX,UNT,LOC)) Q:LOC=""  S IEN=0 F  S IEN=$O(^TMP("ECRECSPC",$J,PX,UNT,LOC,IEN)) Q:'+IEN  D
"RTN","ECRECSPC",56,0)
 ..S DATA=$G(^TMP("ECRECSPC",$J,PX,UNT,LOC,IEN))
"RTN","ECRECSPC",57,0)
 ..S CNT=CNT+1,^TMP($J,"ECRPT",CNT)=$P(PX,"~")_U_$P(PX,"~",2)_U_$P(DATA,U,3)_U_UNT_U_LOC_U_$P(DATA,U)_U_$P(DATA,U,2)
"RTN","ECRECSPC",58,0)
 Q
"RTN","ECRPRSN2")
0^14^B23756227^n/a
"RTN","ECRPRSN2",1,0)
ECRPRSN2 ;ALB/DAN - Updated Procedure Reasons Report;24 JAN 07 ;2/7/12  12:58
"RTN","ECRPRSN2",2,0)
 ;;2.0;EVENT CAPTURE;**112**;8 May 96;Build 18
"RTN","ECRPRSN2",3,0)
STRPT ;queued entry point or continuation
"RTN","ECRPRSN2",4,0)
 D PROCESS
"RTN","ECRPRSN2",5,0)
 I ECPTYP="E" D EXPORT D EXIT Q
"RTN","ECRPRSN2",6,0)
 U IO D PRINT Q:$D(ECGUI)
"RTN","ECRPRSN2",7,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECRPRSN2",8,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ECRPRSN2",9,0)
 D EXIT
"RTN","ECRPRSN2",10,0)
 Q
"RTN","ECRPRSN2",11,0)
PROCESS ;get data to print
"RTN","ECRPRSN2",12,0)
 N EC,ECD,ECDA,ECPA,ECR,ECRL,ECRN,ECPATN,ECSSN,ECP,ECLOCA
"RTN","ECRPRSN2",13,0)
 N ECUNIT,ECFILE,ECPRV,ECPRVN,ECDFN,ECCPT
"RTN","ECRPRSN2",14,0)
 N NLOC,NUNIT,JJ,REAS,ECRSNUM,ECPI
"RTN","ECRPRSN2",15,0)
 K ^TMP("ECREAS",$J)
"RTN","ECRPRSN2",16,0)
 ;if ecreas array doesn't exist, quit
"RTN","ECRPRSN2",17,0)
 I $D(ECLINK)<10 Q
"RTN","ECRPRSN2",18,0)
 ;put locations and units into ien subscripted arrays
"RTN","ECRPRSN2",19,0)
 S JJ="" F  S JJ=$O(ECLOC(JJ)) Q:JJ=""  D
"RTN","ECRPRSN2",20,0)
 .S NLOC($P(ECLOC(JJ),"^",1))=$P(ECLOC(JJ),"^",2)
"RTN","ECRPRSN2",21,0)
 S JJ="" F  S JJ=$O(ECDSSU(JJ)) Q:JJ=""  D
"RTN","ECRPRSN2",22,0)
 .S NUNIT($P(ECDSSU(JJ),"^",1))=$P(ECDSSU(JJ),"^",2)
"RTN","ECRPRSN2",23,0)
 S ECD=ECSD F  S ECD=$O(^ECH("AC",ECD)) Q:'ECD  Q:ECD>ECED  D
"RTN","ECRPRSN2",24,0)
 .S ECDA="" F  S ECDA=$O(^ECH("AC",ECD,ECDA)) Q:'ECDA  S EC=$G(^ECH(ECDA,0))  I $P(EC,"^",23)'="" D
"RTN","ECRPRSN2",25,0)
 ..S ECDFN=$P(EC,"^")
"RTN","ECRPRSN2",26,0)
 ..I $P(EC,"^",3)<ECSD!($P(EC,"^",3)>ECED) Q  ;file or x-ref problem
"RTN","ECRPRSN2",27,0)
 ..S ECLOCA=+$P(EC,U,4),ECUNIT=+$P(EC,U,7)
"RTN","ECRPRSN2",28,0)
 ..I '$D(NLOC(ECLOCA))!('$D(NUNIT(ECUNIT))) Q
"RTN","ECRPRSN2",29,0)
 ..F REAS=34,43,44 S ECRL=$$GET1^DIQ(721,ECDA,REAS,"I") I +ECRL I $D(ECLINK(ECRL))  S ECR=ECLINK(ECRL),ECRN=$P($G(^ECR(ECR,0)),"^") I ECRN'="" S ECRSNUM=$S(REAS=34:1,REAS=43:2,1:3) D
"RTN","ECRPRSN2",30,0)
 ...S ECP=$P(EC,U,9) Q:ECP']""
"RTN","ECRPRSN2",31,0)
 ...S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECRPRSN2",32,0)
 ...S ECCPT=$S(ECFILE=81:+ECP,1:$P($G(^EC(725,+ECP,0)),"^",2))
"RTN","ECRPRSN2",33,0)
 ...I ECCPT'=""&(ECFILE=81) D
"RTN","ECRPRSN2",34,0)
 ....S ECPI=$$CPT^ICPTCOD(ECCPT,$P(ECED,".")) I +ECPI>1 S ECCPT=$P(ECPI,"^",2)
"RTN","ECRPRSN2",35,0)
 ...S (ECPA,ECPATN)="",ECPA=$G(^DPT(+$P(EC,"^",2),0)) Q:ECPA=""
"RTN","ECRPRSN2",36,0)
 ...S ECPATN=$P(ECPA,"^",1),ECSSN=$E($P(ECPA,"^",9),6,9)
"RTN","ECRPRSN2",37,0)
 ...S:ECPATN="" ECPATN="UNKNOWN"
"RTN","ECRPRSN2",38,0)
 ...S (ECPRV,ECPRVN)="",ECPRV=$$GETPPRV^ECPRVMUT(ECDA,.ECPRVN),ECPRVN=$S(ECPRV:"UNKNOWN",1:ECPRVN)
"RTN","ECRPRSN2",39,0)
 ...S ^TMP("ECREAS",$J,NLOC(ECLOCA),NUNIT(ECUNIT)_"~"_ECUNIT,ECRN,ECPATN,ECD)=ECRSNUM_"^"_$P(ECPRVN,U,2)_"^"_ECSSN_"^"_ECCPT
"RTN","ECRPRSN2",40,0)
 Q
"RTN","ECRPRSN2",41,0)
PRINT ;output report
"RTN","ECRPRSN2",42,0)
 N ECED2,ECSD2,Y,DSSU,REAS,PAT,DATE,DATA,PAGE,QFLAG,DASH,PRNTDT,LOC,%
"RTN","ECRPRSN2",43,0)
 S (PAGE,QFLAG)=0 S $P(DASH,"-",132)=""
"RTN","ECRPRSN2",44,0)
 S Y=$P(ECSD,".",1)+1 D DD^%DT S ECSD2=Y S Y=$P(ECED,".",1) D DD^%DT S ECED2=Y
"RTN","ECRPRSN2",45,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S PRNTDT=Y
"RTN","ECRPRSN2",46,0)
 ;if no data exists then print the header and quit
"RTN","ECRPRSN2",47,0)
 I '$D(^TMP("ECREAS",$J)) D  Q
"RTN","ECRPRSN2",48,0)
 .S LOC="" D HEAD
"RTN","ECRPRSN2",49,0)
 .W !!,?6,"No data for the date range specified.",!!
"RTN","ECRPRSN2",50,0)
 .I $E(IOST)="C"&('QFLAG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECRPRSN2",51,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECRPRSN2",52,0)
 .W:$E(IOST)'="C" @IOF
"RTN","ECRPRSN2",53,0)
 S LOC="" F  S LOC=$O(^TMP("ECREAS",$J,LOC)) Q:LOC=""  D HEAD  S DSSU="" F  S DSSU=$O(^TMP("ECREAS",$J,LOC,DSSU)) Q:DSSU=""  W !,"DSS Unit: ",$P(DSSU,"~",1)_" (IEN "_$P(DSSU,"~",2)_")"  D  W !
"RTN","ECRPRSN2",54,0)
 .S REAS="" F  S REAS=$O(^TMP("ECREAS",$J,LOC,DSSU,REAS)) Q:REAS=""  D
"RTN","ECRPRSN2",55,0)
 ..S PAT="" F  S PAT=$O(^TMP("ECREAS",$J,LOC,DSSU,REAS,PAT)) Q:PAT=""  S DATE="" F  S DATE=$O(^TMP("ECREAS",$J,LOC,DSSU,REAS,PAT,DATE)) Q:'+DATE  D
"RTN","ECRPRSN2",56,0)
 ...S DATA=^TMP("ECREAS",$J,LOC,DSSU,REAS,PAT,DATE)
"RTN","ECRPRSN2",57,0)
 ...W !,?3,REAS,?35,$P(DATA,U,1),?38,$P(DATA,U,4),?46,$P(DATA,U,3),?52,PAT,?84,$$FMTE^XLFDT(DATE,2),?100,$P(DATA,U,2)
"RTN","ECRPRSN2",58,0)
 ...I $Y>(IOSL-4) D HEAD
"RTN","ECRPRSN2",59,0)
 Q
"RTN","ECRPRSN2",60,0)
HEAD ;header
"RTN","ECRPRSN2",61,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECRPRSN2",62,0)
 I $E(IOST)="C",PAGE>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLAG=1 Q
"RTN","ECRPRSN2",63,0)
 W:$Y!($E(IOST)="C") @IOF
"RTN","ECRPRSN2",64,0)
 S PAGE=PAGE+1
"RTN","ECRPRSN2",65,0)
 W !,?47,"Event Capture Procedure Reasons Report",?123,"Page: ",PAGE
"RTN","ECRPRSN2",66,0)
 W !,?43,"for the Date Range ",$$FMTE^XLFDT(ECSD2)," to ",$$FMTE^XLFDT(ECED2),!,?53,"Printed: "_PRNTDT,!
"RTN","ECRPRSN2",67,0)
 W !,"Location: ",LOC,!
"RTN","ECRPRSN2",68,0)
 W ?34,"RSN",?38,"PROC",!,?3,"REASON",?35,"#",?38,"CODE",?46,"SSN",?52,"PATIENT",?84,"DATE/TIME",?100,"PROVIDER"
"RTN","ECRPRSN2",69,0)
 W !,DASH
"RTN","ECRPRSN2",70,0)
 Q
"RTN","ECRPRSN2",71,0)
EXIT ;common exit point
"RTN","ECRPRSN2",72,0)
 D:'$D(ECGUI) ^%ZISC
"RTN","ECRPRSN2",73,0)
 K ^TMP("ECREAS",$J)
"RTN","ECRPRSN2",74,0)
 Q
"RTN","ECRPRSN2",75,0)
 ;
"RTN","ECRPRSN2",76,0)
EXPORT ;Convert data to exportable format
"RTN","ECRPRSN2",77,0)
 N LOC,DSSU,REAS,PAT,DATE,CNT,DATA
"RTN","ECRPRSN2",78,0)
 K ^TMP($J,"ECRPT") ;make sure there isn't anything here before it's populated
"RTN","ECRPRSN2",79,0)
 S CNT=1,^TMP($J,"ECRPT",CNT)="LOCATION^DSS UNIT^REASON TEXT^REASON #^PROC CODE^SSN^PATIENT^DATE/TIME^PROVIDER"
"RTN","ECRPRSN2",80,0)
 S LOC="" F  S LOC=$O(^TMP("ECREAS",$J,LOC)) Q:LOC=""  S DSSU="" F  S DSSU=$O(^TMP("ECREAS",$J,LOC,DSSU)) Q:DSSU=""  S REAS="" F  S REAS=$O(^TMP("ECREAS",$J,LOC,DSSU,REAS)) Q:REAS=""  D
"RTN","ECRPRSN2",81,0)
 .S PAT="" F  S PAT=$O(^TMP("ECREAS",$J,LOC,DSSU,REAS,PAT)) Q:PAT=""  S DATE="" F  S DATE=$O(^TMP("ECREAS",$J,LOC,DSSU,REAS,PAT,DATE)) Q:'+DATE  D
"RTN","ECRPRSN2",82,0)
 ..S DATA=^TMP("ECREAS",$J,LOC,DSSU,REAS,PAT,DATE)
"RTN","ECRPRSN2",83,0)
 ..S CNT=CNT+1,^TMP($J,"ECRPT",CNT)=LOC_U_$P(DSSU,"~",1)_U_REAS_U_$P(DATA,U,1)_U_$P(DATA,U,4)_U_$P(DATA,U,3)_U_PAT_U_$$FMTE^XLFDT(DATE,2)_U_$P(DATA,U,2)
"RTN","ECRPRSN2",84,0)
 Q
"RTN","ECRRPC")
0^7^B21499079^B16341040
"RTN","ECRRPC",1,0)
ECRRPC ;ALB/JAM - Event Capture Report RPC Broker ;1/25/12  16:52
"RTN","ECRRPC",2,0)
 ;;2.0;EVENT CAPTURE;**25,47,61,72,95,101,100,107,112**;8 May 96;Build 18
"RTN","ECRRPC",3,0)
 ;
"RTN","ECRRPC",4,0)
RPTEN(RESULTS,ECARY) ;RPC Broker entry point for EC Reports
"RTN","ECRRPC",5,0)
 ;All EC GUI reports will call this line tag
"RTN","ECRRPC",6,0)
 ;        RPC: EC REPORTS
"RTN","ECRRPC",7,0)
 ;INPUTS  ECARY   - Contains the following elements for report printing
"RTN","ECRRPC",8,0)
 ;        ECDEV   - Print to queue, if device
"RTN","ECRRPC",9,0)
 ;        ECQDT   - Queue to print (date/time), optional
"RTN","ECRRPC",10,0)
 ;        ECPTYP  - Where to send output (P)rinter, (D)evice or screen, (E)xport
"RTN","ECRRPC",11,0)
 ;
"RTN","ECRRPC",12,0)
 ;OUTPUTS RESULTS - Array of help text in the HELP FRAM File (#9.2)
"RTN","ECRRPC",13,0)
 ;
"RTN","ECRRPC",14,0)
 N HLPDA,HND,ECSTR,ECFILER,ECERR,ECDIRY,ECUFILE,ECGUI
"RTN","ECRRPC",15,0)
 N ECQTIME ;CMF should not need this!  %DT call below fails for future dates within this routine
"RTN","ECRRPC",16,0)
 D SETENV^ECUMRPC
"RTN","ECRRPC",17,0)
 S ECERR=0,ECGUI=1 D PARSE,CHKDT I ECERR Q
"RTN","ECRRPC",18,0)
 K ^TMP("ECMSG",$J),^TMP($J,"ECRPT")
"RTN","ECRRPC",19,0)
 D  I ECERR D END Q
"RTN","ECRRPC",20,0)
 . I ECPTYP="E" Q  ;112 For exporable format, no device needed
"RTN","ECRRPC",21,0)
 . I ECPTYP="D" D HFSOPEN(ECHNDL) Q
"RTN","ECRRPC",22,0)
 . I '$D(ECDEV) S ^TMP("ECMSG",$J,1)="0^Device undefined",ECERR=1
"RTN","ECRRPC",23,0)
 S HND=$P($T(@ECHNDL),";;",2) I HND="" D  Q
"RTN","ECRRPC",24,0)
 . S ^TMP("ECMSG",$J,1)="0^Line Tag undefined" D END
"RTN","ECRRPC",25,0)
 S ^XTMP("ECRRPT","ECRRPC","ECQDTbefore")=$G(ECQDT)  ;;cmf diagnostic hack
"RTN","ECRRPC",26,0)
 S:ECPTYP="P" ECQTIME=$TR($P(ECQDT,"@",2),":","")
"RTN","ECRRPC",27,0)
 S ECQDT=$G(ECQDT,"NOW"),%DT="XT",X=ECQDT D ^%DT  ;Print time
"RTN","ECRRPC",28,0)
 S ECQDT=$S(Y>0:Y,1:"NOW")
"RTN","ECRRPC",29,0)
 S:ECPTYP="P"&(ECQDT="NOW") ECQDT=DT_"."_ECQTIME  ;Should not have to do this! %DT malfunctions inside this routine!!!
"RTN","ECRRPC",30,0)
 D @$P(HND,";",2)
"RTN","ECRRPC",31,0)
 I ECPTYP="D" D HFSCLOSE(ECFILER) ;S RESULTS=$NA(^TMP($J))
"RTN","ECRRPC",32,0)
END D KILLVAR
"RTN","ECRRPC",33,0)
 I $D(^TMP("ECMSG",$J)) S RESULTS=$NA(^TMP("ECMSG",$J)) Q
"RTN","ECRRPC",34,0)
 S RESULTS=$NA(^TMP($J))
"RTN","ECRRPC",35,0)
 Q
"RTN","ECRRPC",36,0)
 ;
"RTN","ECRRPC",37,0)
PARSE ;Parse data from array for filing
"RTN","ECRRPC",38,0)
 N SUB
"RTN","ECRRPC",39,0)
 S SUB="" F  S SUB=$O(ECARY(SUB)) Q:SUB=""  S @SUB=ECARY(SUB)
"RTN","ECRRPC",40,0)
 Q
"RTN","ECRRPC",41,0)
CHKDT ;Required Data Check
"RTN","ECRRPC",42,0)
 N I,C
"RTN","ECRRPC",43,0)
 S C=1
"RTN","ECRRPC",44,0)
 F I="ECHNDL","ECPTYP" D
"RTN","ECRRPC",45,0)
 .I $G(@I)="" S ^TMP("ECMSG",$J,C)="0^Key data missing "_I,C=C+1,ECERR=1
"RTN","ECRRPC",46,0)
 Q
"RTN","ECRRPC",47,0)
KILLVAR ;Kill variables
"RTN","ECRRPC",48,0)
 N SUB
"RTN","ECRRPC",49,0)
 S SUB="" F  S SUB=$O(ECARY(SUB)) Q:SUB=""  K @SUB
"RTN","ECRRPC",50,0)
 K ECARY,POP,ECQDT
"RTN","ECRRPC",51,0)
 Q
"RTN","ECRRPC",52,0)
HFSOPEN(HANDLE) ; 
"RTN","ECRRPC",53,0)
 ;S ECDIRY=$$GET^XPAR("DIV","EC HFS SCRATCH")
"RTN","ECRRPC",54,0)
 S ECDIRY=$$DEFDIR^%ZISH()
"RTN","ECRRPC",55,0)
 I ECDIRY="" S ECERR=1 D  Q
"RTN","ECRRPC",56,0)
 .S ^TMP("ECMSG",$J,1)="0^A scratch directory for reports doesn't exist"
"RTN","ECRRPC",57,0)
 S ECFILER="EC"_DUZ_".DAT",ECUFILE=ECFILER S ^TMP("JEN",$J,.1)=ECUFILE
"RTN","ECRRPC",58,0)
 D OPEN^%ZISH(HANDLE,ECDIRY,ECFILER,"W") D:POP  Q:POP
"RTN","ECRRPC",59,0)
 .S ECERR=1,^TMP("ECMSG",$J,1)="0^Unable to open file "_ECDIRY_ECFILER
"RTN","ECRRPC",60,0)
 S IOM=132,IOSL=99999,IOST="P-DUMMY",IOF=""""""
"RTN","ECRRPC",61,0)
 Q
"RTN","ECRRPC",62,0)
 ;
"RTN","ECRRPC",63,0)
HFSCLOSE(HANDLE) ; 
"RTN","ECRRPC",64,0)
 N ECDEL
"RTN","ECRRPC",65,0)
 D CLOSE^%ZISH(ECDIRY_HANDLE)
"RTN","ECRRPC",66,0)
 K ^TMP($J)
"RTN","ECRRPC",67,0)
 S ECDEL(ECFILER)=""
"RTN","ECRRPC",68,0)
 S X=$$FTG^%ZISH(ECDIRY,ECFILER,$NAME(^TMP($J,1)),2)
"RTN","ECRRPC",69,0)
 S X=$$DEL^%ZISH(ECDIRY,$NA(ECDEL))
"RTN","ECRRPC",70,0)
 Q
"RTN","ECRRPC",71,0)
 ;added ECSTPCD for EC*2*107
"RTN","ECRRPC",72,0)
 ;added ECDSSUA, ECRUDSS, ECRECER, ECRECSIC,ECRECSPC, ECRGP and ECRDSSEC for patch EC*2*112
"RTN","ECRRPC",73,0)
ECPAT ;;Patient Summary Report;ECPAT^ECRRPT
"RTN","ECRRPC",74,0)
ECRDSSA ;;DSS Unit Activity;ECRDSSA^ECRRPT
"RTN","ECRRPC",75,0)
ECRDSSU ;;DSS Unit Workload Summary;ECRDSSU^ECRRPT
"RTN","ECRRPC",76,0)
ECPROV ;;Provider Summary Report;ECPROV^ECRRPT
"RTN","ECRRPC",77,0)
PROSUM ;;Provider (1-7) Summary Report;PROSUM^ECRRPT
"RTN","ECRRPC",78,0)
ECOSSUM ;;Ordering Section Summary Report;ECOSSUM^ECRRPT
"RTN","ECRRPC",79,0)
ECPCER ;;PCE Data Summary Report;ECPCER^ECRRPT
"RTN","ECRRPC",80,0)
ECRPERS ;;Inactive Person Class Report;ECRPERS^ECRRPT1
"RTN","ECRRPC",81,0)
ECRPRSN ;;Procedure Reason Report;ECRPRSN^ECRRPT1
"RTN","ECRRPC",82,0)
ECDSS1 ;;National/Local Procedure Reports;ECDSS1^ECRRPT1
"RTN","ECRRPC",83,0)
ECDSS3 ;;Category Reports;ECDSS3^ECRRPT1
"RTN","ECRRPC",84,0)
ECSUM ;;Print Category and Procedure Summary (Report);ECSUM^ECRRPT1
"RTN","ECRRPC",85,0)
ECNTPCE ;;Records Failing Transmission to PCE Report;ECNTPCE^ECRRPT1
"RTN","ECRRPC",86,0)
ECSCPT ;;Event Code Screens with CPT Codes;ECSCPT^ECRRPT1
"RTN","ECRRPC",87,0)
ECINCPT ;;National/Local Procedure Codes with Inactive CPT;ECINCPT^ECRRPT1
"RTN","ECRRPC",88,0)
ECGTP ;;Generic Table Printer;ECGTP^ECRRPT1
"RTN","ECRRPC",89,0)
ECSTPCD ;;DSS Units with Associated Stop Code Error Report;ECSTPCD^ECRRPT1
"RTN","ECRRPC",90,0)
ECRDSSUA ;;Users with access to selected DSS Unit;ECRDSSUA^ECRRPT2
"RTN","ECRRPC",91,0)
ECRUDSS ;;DSS unit access by selected user;ECRUDSS^ECRRPT2
"RTN","ECRRPC",92,0)
ECRDSSEC ;;Event code screen for selected DSS Unit;ECRDSSEC^ECRRPT2
"RTN","ECRRPC",93,0)
ECRECER ;;Event capture encounters report;ECRECER^ECRRPT2
"RTN","ECRRPC",94,0)
ECRECSIC ;;Event Code Screens with Inactive Clinics;ECRECSIC^ECRRPT2
"RTN","ECRRPC",95,0)
ECRECSPC ;;Event Code Screens by Procedure Code;ECRECSPC^ECRRPT2
"RTN","ECRRPC",96,0)
ECRGP ;;Generic print of report;ECRGP^ECRRPT2
"RTN","ECRRPT")
0^6^B55454344^B54625757
"RTN","ECRRPT",1,0)
ECRRPT ;ALB/JAM - Event Capture Report RPC Broker ;1/30/12  11:37
"RTN","ECRRPT",2,0)
 ;;2.0;EVENT CAPTURE;**25,32,41,56,61,82,94,95,108,112**;8 May 96;Build 18
"RTN","ECRRPT",3,0)
 ;
"RTN","ECRRPT",4,0)
REQCHK(ECV) ;Required data check
"RTN","ECRRPT",5,0)
 N I,C
"RTN","ECRRPT",6,0)
 S C=1
"RTN","ECRRPT",7,0)
 F I=1:1:$L(ECV,U) I '$D(@$P(ECV,U,I)) D
"RTN","ECRRPT",8,0)
 . S ^TMP("ECMSG",$J,C)="0^Required data missing "_$P(ECV,U,I)
"RTN","ECRRPT",9,0)
 . S C=C+1,ECERR=1
"RTN","ECRRPT",10,0)
 Q
"RTN","ECRRPT",11,0)
DATECHK(ECSD,ECED) ;Check human format date and converts to FileMan format
"RTN","ECRRPT",12,0)
 ;    Input  ECSD  - Start Date (ex. 10/9/01)
"RTN","ECRRPT",13,0)
 ;           ECED  - End Date
"RTN","ECRRPT",14,0)
 N ECI,X,Y
"RTN","ECRRPT",15,0)
 S %DT="X" F ECI="ECSD","ECED" S X=@ECI D ^%DT S @ECI=Y
"RTN","ECRRPT",16,0)
 S ECSD=$S(ECSD=-1:DT,1:ECSD),ECED=$S(ECED=-1:DT,1:ECED)
"RTN","ECRRPT",17,0)
 S ECDATE=$$FMTE^XLFDT(ECSD)_"^"_$$FMTE^XLFDT(ECED)
"RTN","ECRRPT",18,0)
 Q
"RTN","ECRRPT",19,0)
QUEUE ;Queues report to printer
"RTN","ECRRPT",20,0)
 N ZTIO,ZTDESC,ZTRTN,ZTDTH,ZTSAVE,%ZIS,I,IOP,POP
"RTN","ECRRPT",21,0)
 S IOP="Q;`"_ECDEV,%ZIS="Q" D ^%ZIS I POP D  Q
"RTN","ECRRPT",22,0)
 . S ^TMP("ECMSG",$J,1)="0^Device selection unsuccessful"
"RTN","ECRRPT",23,0)
 S ZTIO=ION,ZTDESC=ECDESC,ZTRTN=ECROU
"RTN","ECRRPT",24,0)
 S ZTDTH=$$FMTH^XLFDT(ECQDT)
"RTN","ECRRPT",25,0)
 ;D NOW^%DTC S ZTDTH=$S(%'<ECQDT:%+.0002,1:ECQDT)
"RTN","ECRRPT",26,0)
 F I=1:1:$L(ECV,U) I $D(@$P(ECV,U,I)) S ZTSAVE($P(ECV,U,I))=""
"RTN","ECRRPT",27,0)
 M ZTSAVE=ECSAVE
"RTN","ECRRPT",28,0)
 D ^%ZTLOAD,HOME^%ZIS,^%ZISC ;K IO("Q")
"RTN","ECRRPT",29,0)
 I $D(ZTSK) S ^TMP("ECMSG",$J)="1^Report queued. Task #"_ZTSK Q
"RTN","ECRRPT",30,0)
 S ^TMP("ECMSG",$J)="0^Task Rejected"
"RTN","ECRRPT",31,0)
 Q
"RTN","ECRRPT",32,0)
 ;
"RTN","ECRRPT",33,0)
ECPAT ;Patient Summary Report for RPC Call
"RTN","ECRRPT",34,0)
 ;     Variables passed in
"RTN","ECRRPT",35,0)
 ;       ECDFN  - Patient IEN for file #2
"RTN","ECRRPT",36,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",37,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",38,0)
 ;       ECRY   - Print Procedure Reason (optional)
"RTN","ECRRPT",39,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",40,0)
 ;
"RTN","ECRRPT",41,0)
 ;     Variable return
"RTN","ECRRPT",42,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",43,0)
 N ECDATE,ECPAT,ECV,DIC,X,Y,ECROU,ECDESC
"RTN","ECRRPT",44,0)
 S ECV="ECDFN^ECSD^ECED" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",45,0)
 S DIC=2,DIC(0)="QNMZX",X=ECDFN D ^DIC Q:Y<0  S ECPAT=$P(Y,U,2)
"RTN","ECRRPT",46,0)
 ;EC*2.0*108 - Convert Date/Time to Date only
"RTN","ECRRPT",47,0)
 S ECSD=$P(ECSD,"."),ECED=$P(ECED,".")
"RTN","ECRRPT",48,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",49,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT",50,0)
 I $E($G(ECRY))'="Y" K ECRY
"RTN","ECRRPT",51,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",52,0)
 . S ECV="ECDFN^ECPAT^ECDATE^ECSD^ECED^ECRY",ECROU="SUM^ECPAT"
"RTN","ECRRPT",53,0)
 . S ECDESC="EVENT CAPTURE PATIENT SUMMARY"
"RTN","ECRRPT",54,0)
 . D QUEUE
"RTN","ECRRPT",55,0)
 D SUM^ECPAT
"RTN","ECRRPT",56,0)
 Q
"RTN","ECRRPT",57,0)
ECRDSSU ;DSS Unit Workload Summary Report
"RTN","ECRRPT",58,0)
 ;     Variables passed in
"RTN","ECRRPT",59,0)
 ;       ECL    - Location to report (1 or ALL)
"RTN","ECRRPT",60,0)
 ;       ECD    - DSS Unit to report (1, some or ALL)
"RTN","ECRRPT",61,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",62,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",63,0)
 ;       ECDUZ  - User IEN from file (#200)
"RTN","ECRRPT",64,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",65,0)
 ;
"RTN","ECRRPT",66,0)
 ;     Variable return
"RTN","ECRRPT",67,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",68,0)
 N ECLOC,ECDSSU,ECV,ECI,ECSTDT,ECENDDT,ECKEY,ECROU,ECSAVE,ECDESC,ECNT
"RTN","ECRRPT",69,0)
 N ECDATE,ECX,DIC,X,Y
"RTN","ECRRPT",70,0)
 S ECV="ECL^ECD0^ECSD^ECED^ECDUZ" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",71,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location." Q
"RTN","ECRRPT",72,0)
 . I ECL="ALL" D LOCARRY^ECRUTL Q
"RTN","ECRRPT",73,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL D ^DIC Q:Y<0  S ECLOC(1)=+Y_"^"_$P(Y,U,2)
"RTN","ECRRPT",74,0)
 D  I '$D(ECDSSU) S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT",75,0)
 . I ECD0="ALL" D  Q
"RTN","ECRRPT",76,0)
 . . S ECKEY=$S($D(^XUSEC("ECALLU",ECDUZ)):1,1:0) D ALLU^ECRUTL
"RTN","ECRRPT",77,0)
 . S (ECI,ECNT)=0 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT",78,0)
 . . K DIC S DIC=724,DIC(0)="QNZX",X=@ECX D ^DIC I Y<0 Q
"RTN","ECRRPT",79,0)
 . . S ECNT=ECNT+1,ECDSSU(ECNT)=Y
"RTN","ECRRPT",80,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",81,0)
 S ECSTDT=ECSD-.0001,ECENDDT=ECED+.9999
"RTN","ECRRPT",82,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",83,0)
 . S ECV="ECDATE^ECSTDT^ECENDDT",ECROU="STRPT^ECRDSSU"
"RTN","ECRRPT",84,0)
 . S (ECSAVE("ECLOC("),ECSAVE("ECDSSU("))=""
"RTN","ECRRPT",85,0)
 . S ECDESC="DSS UNIT WORKLOAD SUMMARY REPORT"
"RTN","ECRRPT",86,0)
 . D QUEUE
"RTN","ECRRPT",87,0)
 D STRPT^ECRDSSU
"RTN","ECRRPT",88,0)
 Q
"RTN","ECRRPT",89,0)
PROSUM ;Provider (1-3) Summary Report for RPC Call
"RTN","ECRRPT",90,0)
 ;     Variables passed in
"RTN","ECRRPT",91,0)
 ;       ECU    - Provider IEN for file #200
"RTN","ECRRPT",92,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",93,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",94,0)
 ;       ECRY   - Print Procedure Reason (optional)
"RTN","ECRRPT",95,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",96,0)
 ;
"RTN","ECRRPT",97,0)
 ;     Variable return
"RTN","ECRRPT",98,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",99,0)
 N ECV,ECDATE,ECUN,ECROU,ECDESC,DIC,X,Y
"RTN","ECRRPT",100,0)
 S ECV="ECU^ECSD^ECED" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",101,0)
 S DIC=200,DIC(0)="QNZX",X=ECU D ^DIC D:Y<0  Q:Y<0  S ECUN=$P(Y,U,2)
"RTN","ECRRPT",102,0)
 . S ^TMP("ECMSG",$J)="1^Invalid Provider."
"RTN","ECRRPT",103,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",104,0)
 I ECRY'="Y" K ECRY
"RTN","ECRRPT",105,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",106,0)
 . S ECV="ECU^ECUN^ECDATE^ECSD^ECED^ECRY"
"RTN","ECRRPT",107,0)
 . S ECROU="EN^ECPRSUM1",ECDESC="Event Capture Provider Summary"
"RTN","ECRRPT",108,0)
 . D QUEUE
"RTN","ECRRPT",109,0)
 D EN^ECPRSUM1
"RTN","ECRRPT",110,0)
 Q
"RTN","ECRRPT",111,0)
ECPROV ;Provider Summary Report for RPC Call
"RTN","ECRRPT",112,0)
 ;     Variables passed in
"RTN","ECRRPT",113,0)
 ;       ECL    - Location to report (1 or ALL)
"RTN","ECRRPT",114,0)
 ;       ECD    - DSS Unit to report (1 or ALL)
"RTN","ECRRPT",115,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",116,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",117,0)
 ;       ECRY   - Print Procedure Reason (optional)
"RTN","ECRRPT",118,0)
 ;       ECDUZ  - User DUZ (ien in #200)
"RTN","ECRRPT",119,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",120,0)
 ;
"RTN","ECRRPT",121,0)
 ;     Variable return
"RTN","ECRRPT",122,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",123,0)
 N ECV,ECDN,ECDATE,ECLN,ECSAVE,ECDESC,ECROU,DIC,X,Y,CNT,UNIT
"RTN","ECRRPT",124,0)
 S ECDN="ALL",ECV="ECL^ECD^ECSD^ECED^ECDUZ" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",125,0)
 I ECL'="ALL" D  I ECERR Q
"RTN","ECRRPT",126,0)
 . ;The line below was changed by VMP for NOIS ANN-1003-42305
"RTN","ECRRPT",127,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL D ^DIC D:Y<0  Q:Y<0  S ECLN=$P(Y,U,2)
"RTN","ECRRPT",128,0)
 . . S ^TMP("ECMSG",$J)="1^Invalid Location.",ECERR=1
"RTN","ECRRPT",129,0)
 I ECD'="ALL" K DIC D  I ECERR Q
"RTN","ECRRPT",130,0)
 . S DIC=724,DIC(0)="QNMZX",X=ECD D ^DIC D:Y<0  Q:Y<0  S ECDN=$P(Y,U,2)
"RTN","ECRRPT",131,0)
 . . S ^TMP("ECMSG",$J)="1^Invalid Location.",ECERR=1
"RTN","ECRRPT",132,0)
 I ECD="ALL",'$D(^XUSEC("ECALLU",ECDUZ)) D
"RTN","ECRRPT",133,0)
 . S (ECD,ECDN)="SOME",(X,CNT)=0
"RTN","ECRRPT",134,0)
 . F  S X=$O(^VA(200,ECDUZ,"EC",X)) Q:'X  D
"RTN","ECRRPT",135,0)
 . . S CNT=CNT+1,UNIT=$P(^VA(200,ECDUZ,"EC",X,0),"^")
"RTN","ECRRPT",136,0)
 . . S UNIT(CNT)=UNIT_"^"_$P(^ECD(UNIT,0),"^")
"RTN","ECRRPT",137,0)
 ;I $E($G(ECRY))'="Y" K ECRY ;112 Removed check for ECRY as reasons always print - remove comment and next line to restore reason check
"RTN","ECRRPT",138,0)
 S ECRY="Y" ;112 Reasons always print
"RTN","ECRRPT",139,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",140,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999 S:'$D(UNIT) UNIT=""
"RTN","ECRRPT",141,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",142,0)
 . S ECV="ECDATE^ECSD^ECED^ECRY",ECROU="START^ECPROV2"
"RTN","ECRRPT",143,0)
 . S (ECSAVE("ECL*"),ECSAVE("ECD*"),ECSAVE("UNIT*"))=""
"RTN","ECRRPT",144,0)
 . S ECDESC="EVENT CAPTURE PROVIDER SUMMARY"
"RTN","ECRRPT",145,0)
 . D QUEUE
"RTN","ECRRPT",146,0)
 U IO D START^ECPROV2
"RTN","ECRRPT",147,0)
 Q
"RTN","ECRRPT",148,0)
ECOSSUM ;Ordering Section Summary Report for RPC Call
"RTN","ECRRPT",149,0)
 ;     Variables passed in
"RTN","ECRRPT",150,0)
 ;       ECOS   - Ordering Section
"RTN","ECRRPT",151,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",152,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",153,0)
 ;       ECL    - Location to report (1 or ALL)
"RTN","ECRRPT",154,0)
 ;       ECD    - DSS Unit to report (1, some or ALL)
"RTN","ECRRPT",155,0)
 ;       ECDUZ  - User ien (#200)
"RTN","ECRRPT",156,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",157,0)
 ;
"RTN","ECRRPT",158,0)
 ;     Variable return
"RTN","ECRRPT",159,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",160,0)
 N ECV,ECI,ECOSN,ECLOC,ECDSSU,ECDATE,ECNT,ECSAVE,ECROU,ECDESC,DIC,X,Y
"RTN","ECRRPT",161,0)
 S ECV="ECOS^ECL^ECD0^ECSD^ECED^ECDUZ" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",162,0)
 S DIC=723,DIC(0)="QNMZX",X=ECOS D ^DIC D:Y<0  Q:Y<0  S ECOSN=$P(Y,U,2)
"RTN","ECRRPT",163,0)
 . S ^TMP("ECMSG",$J)="1^Invalid Ordering Section.",ECERR=1
"RTN","ECRRPT",164,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location.",ECERR=1 Q
"RTN","ECRRPT",165,0)
 . K DIC I ECL="ALL" D LOCARRY^ECRUTL Q
"RTN","ECRRPT",166,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL D ^DIC Q:Y<0  S ECLOC(1)=+Y_"^"_$P(Y,U,2)
"RTN","ECRRPT",167,0)
 D  I '$D(ECDSSU) S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT",168,0)
 . I ECD0="ALL" D  Q
"RTN","ECRRPT",169,0)
 . . S ECKEY=$S($D(^XUSEC("ECALLU",ECDUZ)):1,1:0) D ALLU^ECRUTL
"RTN","ECRRPT",170,0)
 . S (ECI,ECNT)=0 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT",171,0)
 . . K DIC S DIC=724,DIC(0)="QNMZX",X=@ECX D ^DIC I Y<0 Q
"RTN","ECRRPT",172,0)
 . . S ECNT=ECNT+1,ECDSSU(ECNT)=Y
"RTN","ECRRPT",173,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",174,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT",175,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",176,0)
 . S ECV="ECOS^ECSD^ECED^ECOSN",ECROU="START^ECOSSUM"
"RTN","ECRRPT",177,0)
 . S (ECSAVE("ECLOC("),ECSAVE("ECDSSU("))=""
"RTN","ECRRPT",178,0)
 . S ECDESC="EC Ordering Section Summary"
"RTN","ECRRPT",179,0)
 . D QUEUE
"RTN","ECRRPT",180,0)
 D START^ECOSSUM
"RTN","ECRRPT",181,0)
 Q
"RTN","ECRRPT",182,0)
ECPCER ;PCE Data Summary Report for RPC Call
"RTN","ECRRPT",183,0)
 ;     Variables passed in
"RTN","ECRRPT",184,0)
 ;       ECDFN  - Patient IEN for file #2
"RTN","ECRRPT",185,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",186,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",187,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",188,0)
 ;
"RTN","ECRRPT",189,0)
 ;     Variable return
"RTN","ECRRPT",190,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",191,0)
 N ECV,ECDATE,ECPAT,ECROU,ECDESC,X,DIC,Y
"RTN","ECRRPT",192,0)
 S ECV="ECDFN^ECSD^ECED" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",193,0)
 S DIC=2,DIC(0)="QNMZX",X=ECDFN D ^DIC D:Y<0  Q:Y<0  S ECPAT=$P(Y,U,2)
"RTN","ECRRPT",194,0)
 . S ^TMP("ECMSG",$J)="1^Invalid Provider."
"RTN","ECRRPT",195,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",196,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT",197,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",198,0)
 . S ECV="ECDFN^ECPAT^ECDATE^ECSD^ECED",ECROU="SUM^ECPCER"
"RTN","ECRRPT",199,0)
 . S ECDESC="ECS/PCE PATIENT SUMMARY"
"RTN","ECRRPT",200,0)
 . D QUEUE
"RTN","ECRRPT",201,0)
 D SUM^ECPCER
"RTN","ECRRPT",202,0)
 Q
"RTN","ECRRPT",203,0)
ECRDSSA ;DSS Unit Activity Report
"RTN","ECRRPT",204,0)
 ;     Variables passed in
"RTN","ECRRPT",205,0)
 ;       ECL    - Location to report (1 or ALL)
"RTN","ECRRPT",206,0)
 ;       ECD0   - DSS Unit to report (1, some or ALL)
"RTN","ECRRPT",207,0)
 ;       ECSORT  - Sort type(P,S or R)
"RTN","ECRRPT",208,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",209,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",210,0)
 ;       ECDUZ  - User IEN from file (#200)
"RTN","ECRRPT",211,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",212,0)
 ;
"RTN","ECRRPT",213,0)
 ;     Variable return
"RTN","ECRRPT",214,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",215,0)
 N ECLOC,ECDSSU,ECV,ECI,ECSTDT,ECENDDT,ECKEY,ECROU,ECSAVE,ECDESC,ECNT
"RTN","ECRRPT",216,0)
 N ECDATE,ECX,DIC,X,Y
"RTN","ECRRPT",217,0)
 S ECV="ECL^ECD0^ECSORT^ECSD^ECED^ECDUZ" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",218,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location." Q
"RTN","ECRRPT",219,0)
 . I ECL="ALL" D LOCARRY^ECRUTL Q
"RTN","ECRRPT",220,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL D ^DIC Q:Y<0  S ECLOC(1)=+Y_"^"_$P(Y,U,2)
"RTN","ECRRPT",221,0)
 D  I '$D(ECDSSU) S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT",222,0)
 . I ECD0="ALL" D  Q
"RTN","ECRRPT",223,0)
 . . S ECKEY=$S($D(^XUSEC("ECALLU",ECDUZ)):1,1:0) D ALLU^ECRUTL
"RTN","ECRRPT",224,0)
 . S (ECI,ECNT)=0 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT",225,0)
 . . K DIC S DIC=724,DIC(0)="QNZX",X=@ECX D ^DIC I Y<0 Q
"RTN","ECRRPT",226,0)
 . . S ECNT=ECNT+1,ECDSSU(ECNT)=Y
"RTN","ECRRPT",227,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",228,0)
 S ECSTDT=ECSD-.0001,ECENDDT=ECED+.9999
"RTN","ECRRPT",229,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",230,0)
 . S ECV="ECSORT^ECDATE^ECSTDT^ECENDDT",ECROU="STRPT^ECRDSSA"
"RTN","ECRRPT",231,0)
 . S (ECSAVE("ECLOC("),ECSAVE("ECDSSU("))=""
"RTN","ECRRPT",232,0)
 . S ECDESC="DSS UNIT ACTIVITY REPORT"
"RTN","ECRRPT",233,0)
 . D QUEUE
"RTN","ECRRPT",234,0)
 D STRPT^ECRDSSA
"RTN","ECRRPT",235,0)
 Q
"RTN","ECRRPT1")
0^15^B61256749^B59190035
"RTN","ECRRPT1",1,0)
ECRRPT1 ;ALB/JAM;Event Capture Report RPC Broker ;1/30/12  11:46
"RTN","ECRRPT1",2,0)
 ;;2.0;EVENT CAPTURE;**25,32,33,61,78,72,90,95,100,107,112**;8 May 96;Build 18
"RTN","ECRRPT1",3,0)
 ;
"RTN","ECRRPT1",4,0)
ECRPRSN ;Procedure Reason Report for RPC Call
"RTN","ECRRPT1",5,0)
 ;     Variables passed in
"RTN","ECRRPT1",6,0)
 ;       ECSD     - Start Date or Report
"RTN","ECRRPT1",7,0)
 ;       ECED     - End Date or Report
"RTN","ECRRPT1",8,0)
 ;       ECL0..n  - Location to report (1,some or ALL)
"RTN","ECRRPT1",9,0)
 ;       ECD0..n  - DSS Unit to report (1,some or ALL)
"RTN","ECRRPT1",10,0)
 ;       ECRY0..n - Procedure reason (some or ALL)
"RTN","ECRRPT1",11,0)
 ;       ECPTYP   - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",12,0)
 ;
"RTN","ECRRPT1",13,0)
 ;     Variable return
"RTN","ECRRPT1",14,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",15,0)
 N ECV,ECI,ECLOC,ECDSSU,ECDN,ECDATE,ECUN,ECNT,ECKEY,ECX,ECLINK,ECZ
"RTN","ECRRPT1",16,0)
 N ECROU,ECSAVE,ECDESC,ECW,DIC,X,Y,I,LIEN,ECJ
"RTN","ECRRPT1",17,0)
 S ECV="ECL0^ECD0^ECSD^ECED^ECRY0" D REQCHK^ECRRPT(ECV) I ECERR Q  ;112
"RTN","ECRRPT1",18,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location." Q
"RTN","ECRRPT1",19,0)
 . D LOCARRY^ECRUTL I ECL0="ALL" Q  ;112
"RTN","ECRRPT1",20,0)
 . K ECLOC F I=0:1 S LIEN=$G(@("ECL"_I)) Q:'+LIEN  I $D(ECLOC1(LIEN)) S ECLOC(I+1)=LIEN_"^"_ECLOC1(LIEN) ;112
"RTN","ECRRPT1",21,0)
 D  I '$D(ECDSSU) S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT1",22,0)
 . I ECD0="ALL" D  Q
"RTN","ECRRPT1",23,0)
 . . I '$D(ECDUZ) Q
"RTN","ECRRPT1",24,0)
 . . S ECKEY=$S($D(^XUSEC("ECALLU",ECDUZ)):1,1:0) D ALLU^ECRUTL
"RTN","ECRRPT1",25,0)
 . S (ECI,ECNT)=0 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT1",26,0)
 . . K DIC S DIC=724,DIC(0)="QNMZX",X=@ECX D ^DIC I Y<0 Q
"RTN","ECRRPT1",27,0)
 . . S ECNT=ECNT+1,ECDSSU(ECNT)=Y
"RTN","ECRRPT1",28,0)
 S ECX=0 D
"RTN","ECRRPT1",29,0)
 .I ECRY0="ALL" D PXREAS Q
"RTN","ECRRPT1",30,0)
 .N TLOC,TDSS,ECY
"RTN","ECRRPT1",31,0)
 .S ECI=0 F  S ECI=$O(ECLOC(ECI)) Q:'ECI  S TLOC(+ECLOC(ECI))=""
"RTN","ECRRPT1",32,0)
 .S ECI=0 F  S ECI=$O(ECDSSU(ECI)) Q:'ECI  S TDSS(+ECDSSU(ECI))=""
"RTN","ECRRPT1",33,0)
 .S ECI=0 F ECI=0:1 S ECZ="ECRY"_ECI Q:'$D(@ECZ)  D
"RTN","ECRRPT1",34,0)
 ..S ECW=0 F  S ECW=$O(^ECL("B",@ECZ,ECW)) Q:'ECW  D
"RTN","ECRRPT1",35,0)
 ...S ECY=$P($G(^ECL(ECW,0)),U,2) Q:ECY=""  S ECJ=$P($G(^ECJ(ECY,0)),U)
"RTN","ECRRPT1",36,0)
 ...Q:ECJ=""  Q:'$D(TLOC($P(ECJ,"-")))  Q:'$D(TDSS($P(ECJ,"-",2)))
"RTN","ECRRPT1",37,0)
 ...S ECLINK(ECW)=$P($G(^ECL(ECW,0)),U)
"RTN","ECRRPT1",38,0)
 D DATECHK^ECRRPT(.ECSD,.ECED) S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT1",39,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",40,0)
 . S ECV="ECSD^ECED^ECPTYP",ECROU="STRPT^ECRPRSN2"
"RTN","ECRRPT1",41,0)
 . S (ECSAVE("ECLOC("),ECSAVE("ECDSSU("),ECSAVE("ECLINK("))=""
"RTN","ECRRPT1",42,0)
 . S ECDESC="EC Procedure Reason Report"
"RTN","ECRRPT1",43,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",44,0)
 D STRPT^ECRPRSN2 ;112
"RTN","ECRRPT1",45,0)
 Q
"RTN","ECRRPT1",46,0)
PXREAS ;Procedure reason link
"RTN","ECRRPT1",47,0)
 N ECZ,ECX,ECY,ECV
"RTN","ECRRPT1",48,0)
 S ECX=0 F  S ECX=$O(ECLOC(ECX)) Q:'ECX  S ECY=0 D
"RTN","ECRRPT1",49,0)
 . F  S ECY=$O(ECDSSU(ECY)) Q:'ECY  S ECV=+ECLOC(ECX)_"-"_+ECDSSU(ECY) D
"RTN","ECRRPT1",50,0)
 . . S ECZ=ECV_"-0-0"
"RTN","ECRRPT1",51,0)
 . . F  S ECZ=$O(^ECJ("B",ECZ)) Q:('ECZ)!($P(ECZ,"-",1,2)'=ECV)  D
"RTN","ECRRPT1",52,0)
 . . . S ECW=$O(^ECJ("B",ECZ,"")) Q:ECW=""  D REALNK
"RTN","ECRRPT1",53,0)
 Q
"RTN","ECRRPT1",54,0)
REALNK ;Reason link
"RTN","ECRRPT1",55,0)
 N XX,YY,ZZ
"RTN","ECRRPT1",56,0)
 S XX=0 F  S XX=$O(^ECL("AD",ECW,XX)) Q:'XX  S YY=0 D
"RTN","ECRRPT1",57,0)
 . F  S YY=$O(^ECL("AD",ECW,XX,YY)) Q:'YY  D
"RTN","ECRRPT1",58,0)
 . . Q:$G(^ECL(YY,0))=""  S ECLINK(YY)=XX
"RTN","ECRRPT1",59,0)
 Q
"RTN","ECRRPT1",60,0)
ECRPERS ;Inactive Person Class Report for RPC Call
"RTN","ECRRPT1",61,0)
 ;     Variables passed in
"RTN","ECRRPT1",62,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT1",63,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT1",64,0)
 ;       ECSORT - Sort by Patient (P) or Provider (R)
"RTN","ECRRPT1",65,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",66,0)
 ;
"RTN","ECRRPT1",67,0)
 ;     Variable return
"RTN","ECRRPT1",68,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",69,0)
 N ECV,ECDATE,ECBEGIN,ECEND,ECROU,ECDESC
"RTN","ECRRPT1",70,0)
 S ECV="ECSD^ECED^ECSORT" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",71,0)
 D DATECHK^ECRRPT(.ECSD,.ECED)
"RTN","ECRRPT1",72,0)
 S ECBEGIN=ECSD-.0001,ECEND=ECED+.9999
"RTN","ECRRPT1",73,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",74,0)
 . S ECV="ECBEGIN^ECEND^ECSORT",ECROU="START^ECRPCLS"
"RTN","ECRRPT1",75,0)
 . S ECDESC="EC Invalid Provider Report"
"RTN","ECRRPT1",76,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",77,0)
 D START^ECRPCLS
"RTN","ECRRPT1",78,0)
 Q
"RTN","ECRRPT1",79,0)
ECDSS1 ;National/Local Procedure Reports for RPC Call
"RTN","ECRRPT1",80,0)
 ;     Variables passed in
"RTN","ECRRPT1",81,0)
 ;       ECRTN    - Procedure Report (A-active or I-inactive)
"RTN","ECRRPT1",82,0)
 ;       ECPTYP   - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",83,0)
 ;    If ECRTN=A, also
"RTN","ECRRPT1",84,0)
 ;       ECRN     - Preferred Report (N-ational, L-ocal or Both)
"RTN","ECRRPT1",85,0)
 ;       ECRD     - Sort Method (P-rocedure Name, N-ational Number)
"RTN","ECRRPT1",86,0)
 ;
"RTN","ECRRPT1",87,0)
 ;     Variable return
"RTN","ECRRPT1",88,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",89,0)
 N ECV,ECDESC,ECROU,DQTIME
"RTN","ECRRPT1",90,0)
 S ECV=$S($G(ECRTN)="A":"ECRTN^ECRN^ECRD",1:"ECRTN")
"RTN","ECRRPT1",91,0)
 D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",92,0)
 S DQTIME=ECQDT
"RTN","ECRRPT1",93,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",94,0)
 . S ECV="ECRTN^ECRN^ECRD",ECROU=$S(ECRTN="I":"LISTI",1:"PRT")_"^ECDSS1"
"RTN","ECRRPT1",95,0)
 . S ECDESC="Event Capture National Procedure Report",ECDIP=1
"RTN","ECRRPT1",96,0)
 . ;S ECSAVE("IO*")=""
"RTN","ECRRPT1",97,0)
 .D QUEDIP D @$S(ECRTN="I":"LISTI^ECDSS1",1:"PRT^ECDSS1")
"RTN","ECRRPT1",98,0)
 D CLOSE^%ZISH(ECDIRY_ECFILER)
"RTN","ECRRPT1",99,0)
 S %ZIS("HFSNAME")=ECDIRY_ECFILER,%ZIS("HFSMODE")="W",IOP="HFS"
"RTN","ECRRPT1",100,0)
 D @$S(ECRTN="I":"LISTI^ECDSS1",1:"PRT^ECDSS1")
"RTN","ECRRPT1",101,0)
 Q
"RTN","ECRRPT1",102,0)
ECDSS3 ;Category Reports for RPC Call
"RTN","ECRRPT1",103,0)
 ;     Variables passed in
"RTN","ECRRPT1",104,0)
 ;       ECRTN    - Category Procedure Report 
"RTN","ECRRPT1",105,0)
 ;                  (A-active, I-inactive or B-oth)
"RTN","ECRRPT1",106,0)
 ;       ECPTYP   - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",107,0)
 ;
"RTN","ECRRPT1",108,0)
 ;     Variable return
"RTN","ECRRPT1",109,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",110,0)
 N ECV,ECDIP,DQTIME
"RTN","ECRRPT1",111,0)
 S ECV="ECRTN" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",112,0)
 S DQTIME=ECQDT
"RTN","ECRRPT1",113,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",114,0)
 . S ECV="ECRTN",ECROU="PRINT^ECDSS3"
"RTN","ECRRPT1",115,0)
 . S ECDESC="Event Capture Category Reports"
"RTN","ECRRPT1",116,0)
 . D QUEDIP D PRINT^ECDSS3
"RTN","ECRRPT1",117,0)
 D CLOSE^%ZISH(ECDIRY_ECFILER)
"RTN","ECRRPT1",118,0)
 S %ZIS("HFSNAME")=ECDIRY_ECFILER,%ZIS("HFSMODE")="W",IOP="HFS"
"RTN","ECRRPT1",119,0)
 D PRINT^ECDSS3
"RTN","ECRRPT1",120,0)
 Q
"RTN","ECRRPT1",121,0)
QUEDIP ;Queue when using DIP
"RTN","ECRRPT1",122,0)
 N DIC,X,Y
"RTN","ECRRPT1",123,0)
 D  I Y=-1 S ECERR=1 Q
"RTN","ECRRPT1",124,0)
 . S DIC(0)="MN",X=ECDEV,DIC="^%ZIS(1," D ^DIC
"RTN","ECRRPT1",125,0)
 . S:+Y>0 IOP="Q;"_$P(Y,U,2)
"RTN","ECRRPT1",126,0)
 . S Y=ECQDT X ^DD("DD") S DQTIME=Y
"RTN","ECRRPT1",127,0)
 Q
"RTN","ECRRPT1",128,0)
ECSUM ;Print Category and Procedure Summary (Report) for RPC Call
"RTN","ECRRPT1",129,0)
 ;     Variables passed in
"RTN","ECRRPT1",130,0)
 ;       ECL      - Location to report (1 or ALL)
"RTN","ECRRPT1",131,0)
 ;       ECD      - DSS Unit to report (1 or ALL), If ECD'="ALL" then ECC
"RTN","ECRRPT1",132,0)
 ;       ECC      - Category (1 or ALL) (optional)
"RTN","ECRRPT1",133,0)
 ;       ECRTN    - Event Code Screen (Active, Inactive or Both)
"RTN","ECRRPT1",134,0)
 ;       ECPTYP   - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",135,0)
 ;
"RTN","ECRRPT1",136,0)
 ;     Variable return
"RTN","ECRRPT1",137,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",138,0)
 N ECV,ECDN,ECCN,ECROU,ECSAVE,ECDESC,ECLOC,ECS,ECJLP,ECSN,ECALL,DIC,X,Y
"RTN","ECRRPT1",139,0)
 N ECSCN
"RTN","ECRRPT1",140,0)
 S (ECJLP,ECALL)=0,ECV="ECL^ECD^ECRTN" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",141,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location." Q
"RTN","ECRRPT1",142,0)
 . D LOCARRY^ECRUTL I ECL="ALL" Q
"RTN","ECRRPT1",143,0)
 . K ECLOC I $D(ECLOC1(ECL)) S ECLOC(1)=ECL_"^"_ECLOC1(ECL)
"RTN","ECRRPT1",144,0)
 S ECSCN=ECRTN D  I ECERR S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT1",145,0)
 . I ECD="ALL" S ECALL=1 Q
"RTN","ECRRPT1",146,0)
 . K DIC S DIC=724,DIC(0)="QNMZX",X=ECD D ^DIC I Y<0 S ECERR=1 Q
"RTN","ECRRPT1",147,0)
 . S ECDN=$P(Y,U,2)_$S($P($G(^ECD(+ECD,0)),"^",6):" **Inactive**",1:"")
"RTN","ECRRPT1",148,0)
 . S ECS=+$P(^ECD(ECD,0),"^",2),ECJLP=+$P(^(0),"^",11)
"RTN","ECRRPT1",149,0)
 . S ECSN=$S($P($G(^DIC(49,ECS,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECRRPT1",150,0)
 . I 'ECJLP S ECC=0,ECCN="None"
"RTN","ECRRPT1",151,0)
 I ECALL D PXRUN Q
"RTN","ECRRPT1",152,0)
 S ECV="ECC" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",153,0)
 D  I ECERR S ^TMP("ECMSG",$J)="1^Invalid Category." Q
"RTN","ECRRPT1",154,0)
 . I (ECC="ALL")!(ECC=0) Q
"RTN","ECRRPT1",155,0)
 . K DIC S DIC=726,DIC(0)="QNMZX",X=ECC D ^DIC I Y<0 S ECERR=1 Q
"RTN","ECRRPT1",156,0)
 . S ECCN=$P(Y,U,2)
"RTN","ECRRPT1",157,0)
PXRUN I ECPTYP="P" D  Q
"RTN","ECRRPT1",158,0)
 . S ECV="ECALL^ECSCN",ECROU="START^ECSUM"
"RTN","ECRRPT1",159,0)
 . S ECSAVE("ECLOC(")=""
"RTN","ECRRPT1",160,0)
 . I 'ECALL S ECV=ECV_"^ECD^ECC^ECSN^ECDN^ECJLP^ECCN^ECSCN"
"RTN","ECRRPT1",161,0)
 . S ECDESC="EC Print Category and Procedure Summary"
"RTN","ECRRPT1",162,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",163,0)
 U IO D START^ECSUM
"RTN","ECRRPT1",164,0)
 Q
"RTN","ECRRPT1",165,0)
ECNTPCE ;ECS Records Failing Transmission to PCE
"RTN","ECRRPT1",166,0)
 ;     Variables passed in
"RTN","ECRRPT1",167,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT1",168,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT1",169,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",170,0)
 ;
"RTN","ECRRPT1",171,0)
 ;     Variable return
"RTN","ECRRPT1",172,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",173,0)
 N ECV,ECDATE,ECROU,ECDESC
"RTN","ECRRPT1",174,0)
 S ECV="ECSD^ECED" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",175,0)
 D DATECHK^ECRRPT(.ECSD,.ECED)
"RTN","ECRRPT1",176,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT1",177,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",178,0)
 . S ECV="ECSD^ECED^ECDATE",ECROU="START^ECNTPCE"
"RTN","ECRRPT1",179,0)
 . S ECDESC="ECS Records Failing Transmission to PCE Report"
"RTN","ECRRPT1",180,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",181,0)
 D START^ECNTPCE
"RTN","ECRRPT1",182,0)
 Q
"RTN","ECRRPT1",183,0)
ECSCPT ;Event Code Screens with CPT Codes
"RTN","ECRRPT1",184,0)
 ;     Variables passed in
"RTN","ECRRPT1",185,0)
 ;       ECL      - Location to report (1 or ALL)
"RTN","ECRRPT1",186,0)
 ;       ECD      - DSS Unit to report (1 or ALL), If ECD'="ALL" then ECC
"RTN","ECRRPT1",187,0)
 ;       ECC      - Category (1 or ALL) (optional)
"RTN","ECRRPT1",188,0)
 ;       ECCPT    - CPT Codes to Display (Active, Inactive or Both)
"RTN","ECRRPT1",189,0)
 ;       ECPTYP   - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",190,0)
 ;
"RTN","ECRRPT1",191,0)
 ;     Variable return
"RTN","ECRRPT1",192,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",193,0)
 N ECV,ECDN,ECCN,ECROU,ECSAVE,ECDESC,ECLOC,ECS,ECJLP,ECALL,DIC,X,Y
"RTN","ECRRPT1",194,0)
 S (ECJLP,ECALL)=0,ECV="ECL^ECD^ECCPT" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",195,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location." Q
"RTN","ECRRPT1",196,0)
 . I ECL="ALL" D LOCARRY^ECRUTL Q
"RTN","ECRRPT1",197,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL D ^DIC Q:Y<0  S ECLOC(1)=+Y_U_$P(Y,U,2)
"RTN","ECRRPT1",198,0)
 D  I ECERR S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT1",199,0)
 . I ECD="ALL" S ECALL=1 Q
"RTN","ECRRPT1",200,0)
 . K DIC S DIC=724,DIC(0)="QNMZX",X=ECD D ^DIC I Y<0 S ECERR=1 Q
"RTN","ECRRPT1",201,0)
 . S ECDN=$P(Y,U,2)_$S($P($G(^ECD(+ECD,0)),"^",6):" **Inactive**",1:"")
"RTN","ECRRPT1",202,0)
 . S ECJLP=+$P(^ECD(ECD,0),"^",11)
"RTN","ECRRPT1",203,0)
 . I 'ECJLP S ECC=0,ECCN="None"
"RTN","ECRRPT1",204,0)
 I ECALL D CPTRUN Q
"RTN","ECRRPT1",205,0)
 S ECV="ECC" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",206,0)
 D  I ECERR S ^TMP("ECMSG",$J)="1^Invalid Category." Q
"RTN","ECRRPT1",207,0)
 . I (ECC="ALL")!(ECC=0) Q
"RTN","ECRRPT1",208,0)
 . K DIC S DIC=726,DIC(0)="QNMZX",X=ECC D ^DIC I Y<0 S ECERR=1 Q
"RTN","ECRRPT1",209,0)
 . S ECCN=$P(Y,U,2)
"RTN","ECRRPT1",210,0)
CPTRUN I ECPTYP="P" D  Q
"RTN","ECRRPT1",211,0)
 . S ECV="ECALL^ECCPT",ECROU="START^ECSCPT"
"RTN","ECRRPT1",212,0)
 . S ECSAVE("ECLOC(")=""
"RTN","ECRRPT1",213,0)
 . I 'ECALL S ECV=ECV_"^ECD^ECC^ECDN^ECJLP^ECCN"
"RTN","ECRRPT1",214,0)
 . S ECDESC="Event Code Screens with CPT Codes"
"RTN","ECRRPT1",215,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",216,0)
 U IO D START^ECSCPT
"RTN","ECRRPT1",217,0)
 Q
"RTN","ECRRPT1",218,0)
ECINCPT ;National/Local Procedure Codes with Inactive CPT Reports for RPC Call
"RTN","ECRRPT1",219,0)
 ;     Variables passed in
"RTN","ECRRPT1",220,0)
 ;       ECPTYP  - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",221,0)
 ;
"RTN","ECRRPT1",222,0)
 ;     Variable return
"RTN","ECRRPT1",223,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",224,0)
 N ECV,ECL,ECDESC,ECROU,DQTIME,ECPG
"RTN","ECRRPT1",225,0)
 S ECPG=1
"RTN","ECRRPT1",226,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",227,0)
 . S ECROU="START^ECINCPT",ECV="ECL",ECL=""
"RTN","ECRRPT1",228,0)
 . S ECDESC="National/Local Procedure Codes with Inactive CPT"
"RTN","ECRRPT1",229,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",230,0)
 U IO D START^ECINCPT
"RTN","ECRRPT1",231,0)
 Q
"RTN","ECRRPT1",232,0)
ECGTP ;ECS Generic Table Printer
"RTN","ECRRPT1",233,0)
 ;     Variables passed in
"RTN","ECRRPT1",234,0)
 ;       ECOBHNDL   - Handle to generic table print obj
"RTN","ECRRPT1",235,0)
 ;       ECPTYP     - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",236,0)
 ;
"RTN","ECRRPT1",237,0)
 ;     Variable return
"RTN","ECRRPT1",238,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",239,0)
 N ECV,ECROU,ECDESC
"RTN","ECRRPT1",240,0)
 S ECV="ECOBHNDL" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",241,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",242,0)
 . S ECV="ECOBHNDL",ECROU="START^ECGTP"
"RTN","ECRRPT1",243,0)
 . S ECDESC="ECS Generic Table Printer"
"RTN","ECRRPT1",244,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",245,0)
 D START^ECGTP
"RTN","ECRRPT1",246,0)
 Q
"RTN","ECRRPT1",247,0)
ECSTPCD ;DSS Units with Associated Stop Code Error REPORT
"RTN","ECRRPT1",248,0)
 ;  EC*2*107 - added to GUI reports
"RTN","ECRRPT1",249,0)
 ;     Variables passed in
"RTN","ECRRPT1",250,0)
 ;       ECPTYP  - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",251,0)
 ;
"RTN","ECRRPT1",252,0)
 ;     Variable return
"RTN","ECRRPT1",253,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",254,0)
 N ECV,ECL,ECDESC,ECROU,DQTIME,ECPG
"RTN","ECRRPT1",255,0)
 S ECPG=1
"RTN","ECRRPT1",256,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",257,0)
 . S ECROU="STRTGUI^ECUNTRPT",ECV="ECL",ECL=""
"RTN","ECRRPT1",258,0)
 . S ECDESC="DSS Units with Associated Stop Code Error"
"RTN","ECRRPT1",259,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",260,0)
 U IO D STRTGUI^ECUNTRPT
"RTN","ECRRPT1",261,0)
 Q 
"RTN","ECRRPT2")
0^9^B34837441^n/a
"RTN","ECRRPT2",1,0)
ECRRPT2 ;ALB/DAN - Event Capture Report RPC Broker (Cont) ;1/25/12  17:00
"RTN","ECRRPT2",2,0)
 ;;2.0;EVENT CAPTURE;**112**;8 May 96;Build 18
"RTN","ECRRPT2",3,0)
 ;
"RTN","ECRRPT2",4,0)
ECRDSSUA ;List users with access to DSS Units
"RTN","ECRRPT2",5,0)
 ;     Variables passed in
"RTN","ECRRPT2",6,0)
 ;       ECD0...n    - DSS Unit to report (1, some or ALL)
"RTN","ECRRPT2",7,0)
 ;       ECDUZ       - User IEN from file (#200)
"RTN","ECRRPT2",8,0)
 ;       ECPTYP      - Where to send output (P)rinter, (D)evice or screen, (E)xport
"RTN","ECRRPT2",9,0)
 ;                     data will be returned in ^TMP($J,"ECRPT") in
"RTN","ECRRPT2",10,0)
 ;                     delimited format for export to spreadsheet
"RTN","ECRRPT2",11,0)
 ;
"RTN","ECRRPT2",12,0)
 ;     Variable return
"RTN","ECRRPT2",13,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT2",14,0)
 N ECDSSU,ECV,ECI,ECKEY,ECROU,ECSAVE,ECDESC,ECX,DIC,X,Y
"RTN","ECRRPT2",15,0)
 S ECV="ECD0^ECDUZ^ECPTYP" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT2",16,0)
 D  I '$D(ECDSSU) S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT2",17,0)
 . I ECD0="ALL" D  Q
"RTN","ECRRPT2",18,0)
 . . S ECKEY=$S($D(^XUSEC("ECALLU",ECDUZ)):1,1:0) D ALLU
"RTN","ECRRPT2",19,0)
 . S ECI=0 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT2",20,0)
 . . K DIC S DIC=724,DIC(0)="QNZX",X=@ECX D ^DIC I Y<0 Q
"RTN","ECRRPT2",21,0)
 . . S ECDSSU(+Y)=$P(Y,U,2)
"RTN","ECRRPT2",22,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT2",23,0)
 . S ECROU="STRPT^ECRDSSUA"
"RTN","ECRRPT2",24,0)
 . S ECSAVE("ECDSSU(")=""
"RTN","ECRRPT2",25,0)
 . S ECDESC="Users with access to DSS Units"
"RTN","ECRRPT2",26,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT2",27,0)
 D STRPT^ECRDSSUA
"RTN","ECRRPT2",28,0)
 Q
"RTN","ECRRPT2",29,0)
ALLU ;-- Get all DSS Units and create ECDSSU array
"RTN","ECRRPT2",30,0)
 N ECD,ECN,ECX,Y
"RTN","ECRRPT2",31,0)
 S ECD="",ECN=0
"RTN","ECRRPT2",32,0)
 F  S ECD=$O(^ECD("B",ECD)) Q:ECD=""  F  S ECN=$O(^ECD("B",ECD,ECN)) Q:'ECN  D
"RTN","ECRRPT2",33,0)
 . Q:'$$VALID(ECN)!('ECKEY&('$D(^VA(200,ECDUZ,"EC",+ECN))))
"RTN","ECRRPT2",34,0)
 . S ECDSSU(ECN)=ECD
"RTN","ECRRPT2",35,0)
ALLUQ Q
"RTN","ECRRPT2",36,0)
 ;
"RTN","ECRRPT2",37,0)
VALID(IEN) ;-- Check DSS Unit for use by Event Capture
"RTN","ECRRPT2",38,0)
 N NODE
"RTN","ECRRPT2",39,0)
 S NODE=$G(^ECD(IEN,0))
"RTN","ECRRPT2",40,0)
 Q $S($P(NODE,"^",8):1,1:0)
"RTN","ECRRPT2",41,0)
 ;
"RTN","ECRRPT2",42,0)
ECRUDSS ;List all DSS units user has access to
"RTN","ECRRPT2",43,0)
 ;     Variables passed in
"RTN","ECRRPT2",44,0)
 ;       ECDUZ       - User IEN from file (#200)
"RTN","ECRRPT2",45,0)
 ;       ECPTYP      - Where to send output (P)rinter, (D)evice or screen, (E)xport
"RTN","ECRRPT2",46,0)
 ;                     data will be returned in ^TMP($J,"ECRPT") in
"RTN","ECRRPT2",47,0)
 ;                     delimited format for export to spreadsheet
"RTN","ECRRPT2",48,0)
 ;
"RTN","ECRRPT2",49,0)
 ;     Variable return
"RTN","ECRRPT2",50,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT2",51,0)
 N ECV,ECROU,ECSAVE,ECDESC
"RTN","ECRRPT2",52,0)
 S ECV="ECDUZ^ECPTYP" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT2",53,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT2",54,0)
 . S ECROU="STRPT^ECRUDSS"
"RTN","ECRRPT2",55,0)
 . S ECSAVE("ECDUZ")=""
"RTN","ECRRPT2",56,0)
 . S ECDESC="DSS unit access for a selected user"
"RTN","ECRRPT2",57,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT2",58,0)
 D STRPT^ECRUDSS
"RTN","ECRRPT2",59,0)
 Q
"RTN","ECRRPT2",60,0)
 ;
"RTN","ECRRPT2",61,0)
ECRDSSEC ;List event code screens for selected DSS unit
"RTN","ECRRPT2",62,0)
 ;     Variables passed in
"RTN","ECRRPT2",63,0)
 ;       ECD       - DSS Unit IEN
"RTN","ECRRPT2",64,0)
 ;       STAT      - Event code screen, (A)ctive, (I)nactive,(B)oth
"RTN","ECRRPT2",65,0)
 ;       ECPTYP    - Where to send output (P)rinter, (D)evice or screen, (E)xport
"RTN","ECRRPT2",66,0)
 ;
"RTN","ECRRPT2",67,0)
 ;     Variable return
"RTN","ECRRPT2",68,0)
 ;       ^TMP($J,"ECRPT",n)=delimited data
"RTN","ECRRPT2",69,0)
 ;
"RTN","ECRRPT2",70,0)
 ;
"RTN","ECRRPT2",71,0)
 N ECV,ECROU,ECSAVE,ECDESC
"RTN","ECRRPT2",72,0)
 S ECV="ECD^STAT^ECPTYP" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT2",73,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT2",74,0)
 . S ECROU="STRPT^ECRDSSEC"
"RTN","ECRRPT2",75,0)
 . S ECSAVE("ECD")="",ECSAVE("STAT")="",ECSAVE("ECPTYP")=""
"RTN","ECRRPT2",76,0)
 . S ECDESC="Event code screens for selected DSS Unit"
"RTN","ECRRPT2",77,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT2",78,0)
 D STRPT^ECRDSSEC
"RTN","ECRRPT2",79,0)
 Q
"RTN","ECRRPT2",80,0)
 ;
"RTN","ECRRPT2",81,0)
ECRECER ;Event Capture Encounter Report
"RTN","ECRRPT2",82,0)
 ;     Variables passed in
"RTN","ECRRPT2",83,0)
 ;       ECD0...n    - DSS Unit to report (1, some or ALL)
"RTN","ECRRPT2",84,0)
 ;       ECDUZ       - User IEN from file (#200)
"RTN","ECRRPT2",85,0)
 ;       ECL0        - Location IEN (1 or ALL)
"RTN","ECRRPT2",86,0)
 ;       ECSORT      - Sort ordered by (P)atient or (D)octor (provider)
"RTN","ECRRPT2",87,0)
 ;       ECSD        - Start date range
"RTN","ECRRPT2",88,0)
 ;       ECED        - End date range
"RTN","ECRRPT2",89,0)
 ;       ECPTYP      - Where to send output (P)rinter, (D)evice (screen), (E)xport
"RTN","ECRRPT2",90,0)
 ;
"RTN","ECRRPT2",91,0)
 ;     Variable return
"RTN","ECRRPT2",92,0)
 ;       ^TMP($J,"ECRPT",n)=returned if exported
"RTN","ECRRPT2",93,0)
 N ECDSSU,ECV,ECI,ECKEY,ECROU,ECSAVE,ECDESC,ECX,DIC,X,Y,ECLOC,ECLOC1
"RTN","ECRRPT2",94,0)
 S ECV="ECD0^ECDUZ^ECL0^ECSORT^ECSD^ECED^ECPTYP" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT2",95,0)
 D DATECHK^ECRRPT(.ECSD,.ECED)
"RTN","ECRRPT2",96,0)
 D  I '$D(ECDSSU) S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT2",97,0)
 . I ECD0="ALL" D  Q
"RTN","ECRRPT2",98,0)
 . . S ECKEY=$S($D(^XUSEC("ECALLU",ECDUZ)):1,1:0) D ALLU
"RTN","ECRRPT2",99,0)
 . S ECI=0 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT2",100,0)
 . . K DIC S DIC=724,DIC(0)="QNZX",X=@ECX D ^DIC I Y<0 Q
"RTN","ECRRPT2",101,0)
 . . S ECDSSU(+Y)=$P(Y,U,2)
"RTN","ECRRPT2",102,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location." Q
"RTN","ECRRPT2",103,0)
 . I ECL0="ALL" D LOCARRY^ECRUTL Q
"RTN","ECRRPT2",104,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL0 D ^DIC Q:Y<0  S ECLOC(1)=+Y_U_$P(Y,U,2),ECLOC1(+Y)=$P(Y,U,2)
"RTN","ECRRPT2",105,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT2",106,0)
 . S ECROU="STRPT^ECRECER"
"RTN","ECRRPT2",107,0)
 . S ECSAVE("ECDSSU(")="",ECSAVE("ECLOC(")="",ECSAVE("ECLOC1(")=""
"RTN","ECRRPT2",108,0)
 . S ECDESC="Event Capture Encounter Report"
"RTN","ECRRPT2",109,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT2",110,0)
 D STRPT^ECRECER
"RTN","ECRRPT2",111,0)
 Q
"RTN","ECRRPT2",112,0)
 ;
"RTN","ECRRPT2",113,0)
ECRECSIC ;Event Capture Report, Event Capture Screen, Inactive Clinics
"RTN","ECRRPT2",114,0)
 ;     Variables passed in
"RTN","ECRRPT2",115,0)
 ;       ECD0...n    - DSS Unit to report (1, some or ALL)
"RTN","ECRRPT2",116,0)
 ;       ECL0...n    - Location IEN (1,some or ALL)
"RTN","ECRRPT2",117,0)
 ;       ECDUZ       - User IEN from file (#200)
"RTN","ECRRPT2",118,0)
 ;       ECPTYP      - Where to send output (P)rinter, (D)evice (screen), (E)xport
"RTN","ECRRPT2",119,0)
 ;
"RTN","ECRRPT2",120,0)
 ;     Variable return
"RTN","ECRRPT2",121,0)
 ;       ^TMP($J,"ECRPT",n)=returned if exported
"RTN","ECRRPT2",122,0)
 N ECDSSU,ECV,ECI,ECKEY,ECROU,ECSAVE,ECDESC,ECX,DIC,X,Y,ECLOC,ECLOC1
"RTN","ECRRPT2",123,0)
 S ECV="ECD0^ECL0^ECDUZ^ECPTYP" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT2",124,0)
 D  I '$D(ECDSSU) S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT2",125,0)
 . I ECD0="ALL" D  Q
"RTN","ECRRPT2",126,0)
 . . S ECKEY=$S($D(^XUSEC("ECALLU",ECDUZ)):1,1:0) D ALLU
"RTN","ECRRPT2",127,0)
 . S ECI=0 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT2",128,0)
 . . K DIC S DIC=724,DIC(0)="QNZX",X=@ECX D ^DIC I Y<0 Q
"RTN","ECRRPT2",129,0)
 . . S ECDSSU(+Y)=$P(Y,U,2)
"RTN","ECRRPT2",130,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location." Q
"RTN","ECRRPT2",131,0)
 . I ECL0="ALL" D LOCARRY^ECRUTL Q
"RTN","ECRRPT2",132,0)
 . S ECI=0 F ECI=0:1 S ECX="ECL"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT2",133,0)
 . . S DIC=4,DIC(0)="QNZX",X=@ECX D ^DIC Q:Y<0  S ECLOC(1)=+Y_U_$P(Y,U,2),ECLOC1(+Y)=$P(Y,U,2)
"RTN","ECRRPT2",134,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT2",135,0)
 . S ECROU="STRPT^ECRECSIC"
"RTN","ECRRPT2",136,0)
 . S ECSAVE("ECDSSU(")=""
"RTN","ECRRPT2",137,0)
 . S ECSAVE("ECLOC(")="",ECSAVE("ECLOC1(")=""
"RTN","ECRRPT2",138,0)
 . S ECDESC="Event Capture Event Code Screens with Inactive Clinics"
"RTN","ECRRPT2",139,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT2",140,0)
 D STRPT^ECRECSIC
"RTN","ECRRPT2",141,0)
 Q
"RTN","ECRRPT2",142,0)
 ;
"RTN","ECRRPT2",143,0)
ECRECSPC ;Event code screens by procedure code
"RTN","ECRRPT2",144,0)
 ;     Variables passed in
"RTN","ECRRPT2",145,0)
 ;       ECLPC0...n  - Procedure Code (1, some or ALL)
"RTN","ECRRPT2",146,0)
 ;       ECL0...n    - Location IEN (1,some or ALL)
"RTN","ECRRPT2",147,0)
 ;       ECDUZ       - User IEN from file (#200)
"RTN","ECRRPT2",148,0)
 ;       ECPTYP      - Where to send output (P)rinter, (D)evice (screen), (E)xport
"RTN","ECRRPT2",149,0)
 ;
"RTN","ECRRPT2",150,0)
 ;     Variable return
"RTN","ECRRPT2",151,0)
 ;       ^TMP($J,"ECRPT",n)=returned if exported
"RTN","ECRRPT2",152,0)
 N ECV,ECI,ECKEY,ECROU,ECSAVE,ECDESC,ECX,DIC,X,Y,ECPROC,ECLOC,ECLOC1
"RTN","ECRRPT2",153,0)
 S ECV="ECLPC0^ECL0^ECDUZ^ECPTYP" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT2",154,0)
 D  I '$D(ECPROC)&(ECLPC0'="ALL") S ^TMP("ECMSG",$J)="1^Invalid Procedure Code." Q
"RTN","ECRRPT2",155,0)
 . I ECLPC0="ALL" Q
"RTN","ECRRPT2",156,0)
 . S ECI=0 F ECI=0:1 S ECX="ECLPC"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT2",157,0)
 . . S ECPROC(@ECX)=""
"RTN","ECRRPT2",158,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location." Q
"RTN","ECRRPT2",159,0)
 . I ECL0="ALL" D LOCARRY^ECRUTL Q
"RTN","ECRRPT2",160,0)
 . S ECI=0 F ECI=0:1 S ECX="ECL"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT2",161,0)
 . . S DIC=4,DIC(0)="QNZX",X=@ECX D ^DIC Q:Y<0  S ECLOC(1)=+Y_U_$P(Y,U,2),ECLOC1(+Y)=$P(Y,U,2)
"RTN","ECRRPT2",162,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT2",163,0)
 . S ECROU="STRPT^ECRECSPC"
"RTN","ECRRPT2",164,0)
 . S ECSAVE("ECPROC(")=""
"RTN","ECRRPT2",165,0)
 . S ECSAVE("ECLOC(")="",ECSAVE("ECLOC1(")=""
"RTN","ECRRPT2",166,0)
 . S ECDESC="Event Capture Event Code Screens by procedure code"
"RTN","ECRRPT2",167,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT2",168,0)
 D STRPT^ECRECSPC
"RTN","ECRRPT2",169,0)
 Q
"RTN","ECRRPT2",170,0)
ECRGP ;generic print capability
"RTN","ECRRPT2",171,0)
 ;  Variables passed in
"RTN","ECRRPT2",172,0)
 ;  ECLIN0...n  - Lines of data to be printed out
"RTN","ECRRPT2",173,0)
 ;
"RTN","ECRRPT2",174,0)
 ;  Variables returned - none
"RTN","ECRRPT2",175,0)
 ;
"RTN","ECRRPT2",176,0)
 N ECROU,ECSAVE,ECDESC,ECX,I,ECV
"RTN","ECRRPT2",177,0)
 S ECV="ECLIN0" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT2",178,0)
 S ECROU="PRINT^ECRRPT2"
"RTN","ECRRPT2",179,0)
 S ECDESC="Generic Print of Event Capture Report"
"RTN","ECRRPT2",180,0)
 F I=0:1 S ECX="ECLIN"_I Q:'$D(@ECX)  S ECSAVE(ECX)=""
"RTN","ECRRPT2",181,0)
 D QUEUE^ECRRPT
"RTN","ECRRPT2",182,0)
 Q
"RTN","ECRRPT2",183,0)
 ;
"RTN","ECRRPT2",184,0)
PRINT ;Send data to printer
"RTN","ECRRPT2",185,0)
 N I,ECX
"RTN","ECRRPT2",186,0)
 U IO
"RTN","ECRRPT2",187,0)
 W @IOF
"RTN","ECRRPT2",188,0)
 F I=0:1 S ECX="ECLIN"_I Q:'$D(@ECX)  W !,@ECX I $Y>(IOSL-4) W @IOF
"RTN","ECRRPT2",189,0)
 Q
"RTN","ECRUDSS")
0^12^B4128147^n/a
"RTN","ECRUDSS",1,0)
ECRUDSS ;ALB/DAN - DSS unit access by user report ;11/22/11  17:00
"RTN","ECRUDSS",2,0)
 ;;2.0;EVENT CAPTURE;**112**;8 May 96;Build 18
"RTN","ECRUDSS",3,0)
 ;
"RTN","ECRUDSS",4,0)
STRPT ;Main entry point for report
"RTN","ECRUDSS",5,0)
 N IEN,CNT,UNIT
"RTN","ECRUDSS",6,0)
 K ^TMP($J,"ECRUDSS") ;Temporary storage of information
"RTN","ECRUDSS",7,0)
 U IO
"RTN","ECRUDSS",8,0)
 S IEN=ECDUZ
"RTN","ECRUDSS",9,0)
 S UNIT=0 F  S UNIT=$O(^VA(200,IEN,"EC","B",UNIT)) Q:'+UNIT  S ^TMP($J,"ECRUDSS",$$GET1^DIQ(724,UNIT,".01"))=""
"RTN","ECRUDSS",10,0)
 I ECPTYP="E" D  Q  ;Put into parsable format
"RTN","ECRUDSS",11,0)
 .S CNT=0,UNIT=""
"RTN","ECRUDSS",12,0)
 .S CNT=CNT+1,^TMP($J,"ECRPT",CNT)="NAME^IEN^PERSON CLASS/CLASSIFICATION^DSS UNIT"
"RTN","ECRUDSS",13,0)
 .F  S UNIT=$O(^TMP($J,"ECRUDSS",UNIT)) Q:UNIT=""  S CNT=CNT+1 S:CNT=2 ^TMP($J,"ECRPT",CNT)=$$GET1^DIQ(200,IEN,".01")_U_IEN_U_$P($$GET^XUA4A72(IEN,DT),U,3) S $P(^TMP($J,"ECRPT",CNT),U,4)=UNIT
"RTN","ECRUDSS",14,0)
 .K ^TMP($J,"ECRUDSS")
"RTN","ECRUDSS",15,0)
 ;
"RTN","ECRUDSS",16,0)
 D HDR
"RTN","ECRUDSS",17,0)
 S UNIT=""
"RTN","ECRUDSS",18,0)
 W $$GET1^DIQ(200,IEN,".01"),?32,IEN,?46,$E($P($$GET^XUA4A72(IEN,DT),U,3),1,52)
"RTN","ECRUDSS",19,0)
 F  S UNIT=$O(^TMP($J,"ECRUDSS",UNIT)) Q:UNIT=""  D
"RTN","ECRUDSS",20,0)
 .W ?100,UNIT,!
"RTN","ECRUDSS",21,0)
 .I (IOSL-$Y)<5 W @IOF D HDR
"RTN","ECRUDSS",22,0)
 K ^TMP($J,"ECRUDSS")
"RTN","ECRUDSS",23,0)
 Q
"RTN","ECRUDSS",24,0)
 ;
"RTN","ECRUDSS",25,0)
HDR ;Print header for report
"RTN","ECRUDSS",26,0)
 W !,"DSS Unit access by selected user",?$S($G(IOM):(IOM-18),1:62),$$FMTE^XLFDT($$NOW^XLFDT,"1M"),!!
"RTN","ECRUDSS",27,0)
 W "USER NAME",?32,"IEN",?46,"PERSON CLASS/CLASSIFICATION",?100,"DSS UNIT",!,$$REPEAT^XLFSTR("-",$S($G(IOM):IOM,1:132)),!
"RTN","ECRUDSS",28,0)
 Q
"RTN","ECUERPC1")
0^3^B53869940^B52697567
"RTN","ECUERPC1",1,0)
ECUERPC1 ;ALB/JAM;Event Capture Data Entry Broker Util ;1/24/12  16:19
"RTN","ECUERPC1",2,0)
 ;;2.0;EVENT CAPTURE;**25,33,42,46,47,54,72,76,110,112**;8 May 96;Build 18
"RTN","ECUERPC1",3,0)
PATINF(RESULTS,ECARY) ;
"RTN","ECUERPC1",4,0)
 ;Broker entry point to get various types of data from EVENT CAPTURE 
"RTN","ECUERPC1",5,0)
 ;PATIENT FILE #721
"RTN","ECUERPC1",6,0)
 ;        RPC: EC GETPATINFO
"RTN","ECUERPC1",7,0)
 ;INPUTS   ECARY  - Contains the following subscripted elements
"RTN","ECUERPC1",8,0)
 ;          ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",9,0)
 ;          ECTYP - Data type to return
"RTN","ECUERPC1",10,0)
 ;
"RTN","ECUERPC1",11,0)
 ;OUTPUTS  RESULTS - Array of Event Capture Patient data
"RTN","ECUERPC1",12,0)
 ;
"RTN","ECUERPC1",13,0)
 N ECTYP,ECIEN
"RTN","ECUERPC1",14,0)
 S ECARY=$G(ECARY),ECIEN=$P(ECARY,U),ECTYP=$P(ECARY,U,2) I ECIEN="" Q
"RTN","ECUERPC1",15,0)
 I '$D(^ECH(ECIEN)) Q
"RTN","ECUERPC1",16,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",17,0)
 I ECTYP="DXS" D PATDXS(ECIEN) Q
"RTN","ECUERPC1",18,0)
 I ECTYP="MOD" D PATMOD(ECIEN) Q
"RTN","ECUERPC1",19,0)
 I ECTYP="CLASS" D PATCLASS(ECIEN) Q
"RTN","ECUERPC1",20,0)
 I ECTYP="OTH" D PATOTH(ECIEN) Q
"RTN","ECUERPC1",21,0)
 I ECTYP="PRV" D PATPRV^ECUERPC2(ECIEN) Q
"RTN","ECUERPC1",22,0)
 Q
"RTN","ECUERPC1",23,0)
PATDXS(ECIEN) ;
"RTN","ECUERPC1",24,0)
 ;Returns to broker a patient secondary DXs entries from EVENT 
"RTN","ECUERPC1",25,0)
 ;CAPTURE PATIENT FILE #721
"RTN","ECUERPC1",26,0)
 ;INPUTS   ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",27,0)
 ;
"RTN","ECUERPC1",28,0)
 ;OUTPUTS  RESULTS - Array of Event Capture Patient file contains
"RTN","ECUERPC1",29,0)
 ;          721 IEN^secondary dx ien #80^secondary dx code^dx description
"RTN","ECUERPC1",30,0)
 ;
"RTN","ECUERPC1",31,0)
 N DXS,DXSIEN,DXSD,CNT
"RTN","ECUERPC1",32,0)
 I '$D(^ECH(ECIEN,"DX")) Q
"RTN","ECUERPC1",33,0)
 K ^TMP($J,"ECDXS")
"RTN","ECUERPC1",34,0)
 S (CNT,DXS)=0 F  S DXS=$O(^ECH(ECIEN,"DX",DXS)) Q:'DXS  D
"RTN","ECUERPC1",35,0)
 . S DXSIEN=$G(^ECH(ECIEN,"DX",DXS,0)) I DXSIEN="" Q
"RTN","ECUERPC1",36,0)
 . S DXSD=$$ICDDX^ICDCODE(DXSIEN,$P($G(^ECH(ECIEN,0)),U,3))
"RTN","ECUERPC1",37,0)
 . S DXSD=$P(DXSD,U,2)_"   "_$P(DXSD,U,4)
"RTN","ECUERPC1",38,0)
 . S CNT=CNT+1,^TMP($J,"ECDXS",CNT)=ECIEN_U_DXSIEN_U_DXSD
"RTN","ECUERPC1",39,0)
 S RESULTS=$NA(^TMP($J,"ECDXS"))
"RTN","ECUERPC1",40,0)
 Q
"RTN","ECUERPC1",41,0)
PATMOD(ECIEN) ;
"RTN","ECUERPC1",42,0)
 ;Returns to broker a patient procedure modifier from EVENT CAPTURE
"RTN","ECUERPC1",43,0)
 ;PATIENT FILE #721
"RTN","ECUERPC1",44,0)
 ;INPUTS   ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",45,0)
 ;
"RTN","ECUERPC1",46,0)
 ;OUTPUTS  RESULTS - Array of procedure modifiers
"RTN","ECUERPC1",47,0)
 ;          721 IEN^modifier ien #81.3^modifier^modifier name
"RTN","ECUERPC1",48,0)
 ;
"RTN","ECUERPC1",49,0)
 N MOD,MODIEN,CNT,MODS
"RTN","ECUERPC1",50,0)
 I '$D(^ECH(ECIEN,"MOD")) Q
"RTN","ECUERPC1",51,0)
 K ^TMP($J,"ECMOD")
"RTN","ECUERPC1",52,0)
 S (CNT,MOD)=0 F  S MOD=$O(^ECH(ECIEN,"MOD",MOD)) Q:'MOD  D
"RTN","ECUERPC1",53,0)
 . S MODIEN=$G(^ECH(ECIEN,"MOD",MOD,0)) I MODIEN="" Q
"RTN","ECUERPC1",54,0)
 . S MODS=$$MOD^ICPTMOD(MODIEN,"I",$P($G(^ECH(ECIEN,0)),U,3)) I +MODS<0 Q
"RTN","ECUERPC1",55,0)
 . S CNT=CNT+1
"RTN","ECUERPC1",56,0)
 . S ^TMP($J,"ECMOD",CNT)=ECIEN_U_$P(MODS,U,1,2)_"  "_$P(MODS,U,3)
"RTN","ECUERPC1",57,0)
 S RESULTS=$NA(^TMP($J,"ECMOD"))
"RTN","ECUERPC1",58,0)
 Q
"RTN","ECUERPC1",59,0)
PATCLASS(ECIEN) ;
"RTN","ECUERPC1",60,0)
 ;Returns to broker a patient classification & eligibility data from
"RTN","ECUERPC1",61,0)
 ;EVENT CAPTURE PATIENT FILE #721
"RTN","ECUERPC1",62,0)
 ; INPUTS   ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",63,0)
 ; OUTPUTS  RESULTS - Array of procedure modifiers
"RTN","ECUERPC1",64,0)
 ;  721 IEN^agent orange^radiation exposure^service connect^environmental
"RTN","ECUERPC1",65,0)
 ;  contaminants/SWAC^military sexual trauma^eligibility code #8^
"RTN","ECUERPC1",66,0)
 ;  eligibility description^head/neck cancer^combat veteran^P112/SHAD
"RTN","ECUERPC1",67,0)
 ;
"RTN","ECUERPC1",68,0)
 N CLA,ELIG,ELCOD,ECAO,ECIR,ECEC,ECSC,ECMST,STR,ECHNC,ECCV,ECSHAD
"RTN","ECUERPC1",69,0)
 I '$D(^ECH(ECIEN,"P")),'$D(^ECH(ECIEN,"PCE")) Q
"RTN","ECUERPC1",70,0)
 K ^TMP($J,"ECLASS")
"RTN","ECUERPC1",71,0)
 S ELIG=$P($G(^ECH(ECIEN,"PCE")),"~",17),ELCOD="",CLA=$G(^ECH(ECIEN,"P"))
"RTN","ECUERPC1",72,0)
 S:ELIG'="" ELCOD=$P($G(^DIC(8,ELIG,0)),U)
"RTN","ECUERPC1",73,0)
 S ECAO=$P(CLA,U,3),ECIR=$P(CLA,U,4),ECEC=$P(CLA,U,5),ECSC=$P(CLA,U,6)
"RTN","ECUERPC1",74,0)
 S ECMST=$P(CLA,U,9),ECHNC=$P(CLA,U,10),ECCV=$P(CLA,U,11),ECSHAD=$P(CLA,U,12)
"RTN","ECUERPC1",75,0)
 S STR=ECIEN_U_ECAO_U_ECIR_U_ECSC_U_ECEC_U_ECMST
"RTN","ECUERPC1",76,0)
 S STR=STR_U_ELIG_U_ELCOD_U_ECHNC_U_ECCV_U_ECSHAD,^TMP($J,"ECLASS",1)=STR
"RTN","ECUERPC1",77,0)
 S RESULTS=$NA(^TMP($J,"ECLASS"))
"RTN","ECUERPC1",78,0)
 Q
"RTN","ECUERPC1",79,0)
PATOTH(ECIEN) ;
"RTN","ECUERPC1",80,0)
 ;Returns to broker a patient remaining data from EVENT CAPTURE
"RTN","ECUERPC1",81,0)
 ;PATIENT FILE #721
"RTN","ECUERPC1",82,0)
 ;INPUTS   ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",83,0)
 ;
"RTN","ECUERPC1",84,0)
 ;OUTPUTS  RESULTS - Array of procedure modifiers
"RTN","ECUERPC1",85,0)
 ;          721 IEN^procedure reason
"RTN","ECUERPC1",86,0)
 ;
"RTN","ECUERPC1",87,0)
 N REAS,ECX
"RTN","ECUERPC1",88,0)
 K ^TMP($J,"ECOTH")
"RTN","ECUERPC1",89,0)
 S ECX=^ECH(ECIEN,0)
"RTN","ECUERPC1",90,0)
 D GETS^DIQ(721,ECIEN_",","34;43;44","E","REAS") ;112
"RTN","ECUERPC1",91,0)
 S ^TMP($J,"ECOTH",1)=$G(REAS(721,ECIEN_",",34,"E"))_"^"_$G(REAS(721,ECIEN_",",43,"E"))_"^"_$G(REAS(721,ECIEN_",",44,"E")) ;112
"RTN","ECUERPC1",92,0)
 S RESULTS=$NA(^TMP($J,"ECOTH"))
"RTN","ECUERPC1",93,0)
 Q
"RTN","ECUERPC1",94,0)
PATCLAST(RESULTS,ECARY) ;
"RTN","ECUERPC1",95,0)
 ;Returns to broker a patient status (in/out) and classification
"RTN","ECUERPC1",96,0)
 ;     RPC: EC GETPATCLASTAT
"RTN","ECUERPC1",97,0)
 ;INPUTS  ECARY  - Contains the following subscripted elements  
"RTN","ECUERPC1",98,0)
 ;         ECDFN - Patient ien (#2)
"RTN","ECUERPC1",99,0)
 ;         ECD   - DSS Unit ien (#724)
"RTN","ECUERPC1",100,0)
 ;         ECDT  - Procedure date and time (fileman format)
"RTN","ECUERPC1",101,0)
 ;OUTPUTS  RESULTS - Patient status and classifications delimited by (^)
"RTN","ECUERPC1",102,0)
 ;         Patient Status: I for inpatient or O for outpatient
"RTN","ECUERPC1",103,0)
 ;         Classification: 2- Agent Orange, 3- Ionizing Radiation
"RTN","ECUERPC1",104,0)
 ;          4- SC Condition, 5- Environment Contaminants/SWAC 6- Military
"RTN","ECUERPC1",105,0)
 ;          Sexual Trauma    7- Head/Neck Cancer 8- Combat Veteran
"RTN","ECUERPC1",106,0)
 ;          9- Project 112/SHAD
"RTN","ECUERPC1",107,0)
 ;         Data after the '~' refers to those class. that must be asked 
"RTN","ECUERPC1",108,0)
 ;         by Delphi appl. when the answer to SC=No.
"RTN","ECUERPC1",109,0)
 ;         Data after "~"  1- Agent Orange  2- Ionizing Radi. 3- Env Cont/SWAC
"RTN","ECUERPC1",110,0)
 N ECDFN,ECDT,ECX,I,ECCLARY,SCDAT,PATSTAT,% ;112
"RTN","ECUERPC1",111,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",112,0)
 S ECDFN=$P(ECARY,U),ECD=$P(ECARY,U,2),ECDT=$P(ECARY,U,3) Q:ECDFN=""
"RTN","ECUERPC1",113,0)
 I ECDT="" D NOW^%DTC S ECDT=%
"RTN","ECUERPC1",114,0)
 S PATSTAT=$$INOUTPT^ECUTL0(ECDFN,ECDT),RESULTS="^^^^^^",SCDAT=";;;"
"RTN","ECUERPC1",115,0)
 ;
"RTN","ECUERPC1",116,0)
 ; Removed in EC*110 so inpatient data can be answered for transmission to Austin
"RTN","ECUERPC1",117,0)
 ; This was to be consistent with VHA Directive 2009-002
"RTN","ECUERPC1",118,0)
 ;
"RTN","ECUERPC1",119,0)
 ; I PATSTAT="I" D  Q
"RTN","ECUERPC1",120,0)
 ; .S RESULTS=PATSTAT_"^"_RESULTS_$S(SCDAT'="":"~"_SCDAT,1:"") 
"RTN","ECUERPC1",121,0)
 I '$$CHKDSS^ECUTL0(+$G(ECD),PATSTAT) D  Q
"RTN","ECUERPC1",122,0)
 .S RESULTS=PATSTAT_"^"_RESULTS_$S(SCDAT'="":"~"_SCDAT,1:"")
"RTN","ECUERPC1",123,0)
 D CL^SDCO21(ECDFN,ECDT,"",.ECCLARY) F ECX=3,1,2,4,5,6,7,8 D
"RTN","ECUERPC1",124,0)
 .I ECX=1,$P($G(^DPT(ECDFN,.321)),"^",2)'="Y" Q
"RTN","ECUERPC1",125,0)
 .I ECX=2,$P($G(^DPT(ECDFN,.321)),"^",3)'="Y" Q
"RTN","ECUERPC1",126,0)
 .I ECX=4,$P($G(^DPT(ECDFN,.322)),"^",13)'="Y",'$$EC^SDCO22(ECDFN,"") Q
"RTN","ECUERPC1",127,0)
 .I ECX=3,$D(ECCLARY(ECX)) F I=1,2,4 S ECCLARY(I)="SC"
"RTN","ECUERPC1",128,0)
 .I '$D(ECCLARY(ECX)) Q
"RTN","ECUERPC1",129,0)
 .;Check SC, if answer to SC is NO then these questions will be asked
"RTN","ECUERPC1",130,0)
 .I ECCLARY(ECX)="SC" S $P(SCDAT,";",ECX)="E"
"RTN","ECUERPC1",131,0)
 .E  S $P(RESULTS,"^",ECX)="E"
"RTN","ECUERPC1",132,0)
 S RESULTS=PATSTAT_"^"_RESULTS_$S(SCDAT'="":"~"_SCDAT,1:"")
"RTN","ECUERPC1",133,0)
 Q
"RTN","ECUERPC1",134,0)
ENCDXS(RESULTS,ECARY) ;
"RTN","ECUERPC1",135,0)
 ;Broker call returns a patient encounter primary & secondary dx (#721)
"RTN","ECUERPC1",136,0)
 ;     RPC: EC GETENCDXS
"RTN","ECUERPC1",137,0)
 ;INPUTS   ECDFN - Patient ien (#2)
"RTN","ECUERPC1",138,0)
 ;         ECDT  - Procedure date and time (fileman format)
"RTN","ECUERPC1",139,0)
 ;         ECL   - Location ien
"RTN","ECUERPC1",140,0)
 ;         EC4   - Clinic ien
"RTN","ECUERPC1",141,0)
 ;
"RTN","ECUERPC1",142,0)
 ;OUTPUTS  RESULTS - array of patient encounter diagnosis
"RTN","ECUERPC1",143,0)
 ;         primary/secondary flag^DX ien^DX code  DX description.
"RTN","ECUERPC1",144,0)
 ;
"RTN","ECUERPC1",145,0)
 N ECDFN,ECDT,ECL,EC4,ECPDX,ECDX,ECDXN,ECDXS,CNT,STR,ECPDX,SDXCNT,% ;112
"RTN","ECUERPC1",146,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",147,0)
 K ^TMP($J,"ECENCDXS")
"RTN","ECUERPC1",148,0)
 S ECDFN=$P(ECARY,U),ECDT=+$P(ECARY,U,2),ECL=$P(ECARY,U,3)
"RTN","ECUERPC1",149,0)
 S EC4=$P(ECARY,U,4) I ECDT="" D NOW^%DTC S ECDT=%
"RTN","ECUERPC1",150,0)
 I ECDFN=""!(ECL="")!(EC4="") Q
"RTN","ECUERPC1",151,0)
 S (ECDX,ECDXN)="",ECPDX=$$PDXCK^ECUTL2(ECDFN,ECDT,ECL,EC4) I ECDX="" Q
"RTN","ECUERPC1",152,0)
 S IEN="",STR=1_U_ECDX_U_ECDXN_"   "_$P($$ICDDX^ICDCODE(ECDX,ECDT),U,4)
"RTN","ECUERPC1",153,0)
 S CNT=1,^TMP($J,"ECENCDXS",CNT)=STR
"RTN","ECUERPC1",154,0)
 ;*ACS concat description to 2nd diag code, in the order entered by the user
"RTN","ECUERPC1",155,0)
 F  S IEN=$O(ECDXS(IEN)) Q:IEN=""  D
"RTN","ECUERPC1",156,0)
 . S CNT=CNT+1,^TMP($J,"ECENCDXS",CNT)=0_U_ECDXS(IEN)_U_IEN_"   "_$P($$ICDDX^ICDCODE(ECDXS(IEN),ECDT),U,4)
"RTN","ECUERPC1",157,0)
 S RESULTS=$NA(^TMP($J,"ECENCDXS"))
"RTN","ECUERPC1",158,0)
 Q
"RTN","ECUERPC1",159,0)
 ;
"RTN","ECUERPC1",160,0)
PROCBAT(RESULTS,ECARY) ;
"RTN","ECUERPC1",161,0)
 ;Broker call returns the entries from EVENT CAPTURE PATIENT FILE #721
"RTN","ECUERPC1",162,0)
 ;for patients for a specific procedure
"RTN","ECUERPC1",163,0)
 ;        RPC: EC GETBATPROCS
"RTN","ECUERPC1",164,0)
 ;INPUTS   ECARY - Contains the following subscripted elements
"RTN","ECUERPC1",165,0)
 ;          ECLOC - Location ien
"RTN","ECUERPC1",166,0)
 ;          ECUNT - DSS unit ien
"RTN","ECUERPC1",167,0)
 ;          ECC   - Category ien
"RTN","ECUERPC1",168,0)
 ;          ECP   - Procedure ien
"RTN","ECUERPC1",169,0)
 ;          ECSD  - Start Date
"RTN","ECUERPC1",170,0)
 ;          ECED  - End Date
"RTN","ECUERPC1",171,0)
 ;
"RTN","ECUERPC1",172,0)
 ;OUTPUTS  RESULTS - Array of Event Capture Patient data containing:-
"RTN","ECUERPC1",173,0)
 ;          721 IEN^Patient name^Procedure Date/Time^Primary Dx
"RTN","ECUERPC1",174,0)
 ;          ^Ordering Section^Associated Clinic
"RTN","ECUERPC1",175,0)
 ;^SSN^DOB^Procedure Date and Time
"RTN","ECUERPC1",176,0)
 ;
"RTN","ECUERPC1",177,0)
 N IEN,CNT,ECLOC,ECUNT,NODE,DATA,PXDT,ECV,ECC,ECP,ECSD,ECED,DATE,DFN
"RTN","ECUERPC1",178,0)
 N CAT,ECI,VADM,ORC,ASC,ECDX
"RTN","ECUERPC1",179,0)
 S ECV="ECLOC^ECUNT^ECC^ECP^ECSD^ECED"
"RTN","ECUERPC1",180,0)
 D PARSE^ECUERPC(ECV,ECARY)
"RTN","ECUERPC1",181,0)
 I (ECLOC="")!(ECUNT="")!(ECC="")!(ECP="") Q
"RTN","ECUERPC1",182,0)
 D SETENV^ECUMRPC K ^TMP($J,"ECBATPX") S CNT=0
"RTN","ECUERPC1",183,0)
 S %DT="STX" F ECI="ECSD","ECED" S X=@ECI D ^%DT S @ECI=Y
"RTN","ECUERPC1",184,0)
 S ECSD=$S(ECSD=-1:DT,1:ECSD)-.0001,ECED=$S(ECED=-1:DT,1:ECED)+.9999
"RTN","ECUERPC1",185,0)
 Q:ECED'>ECSD  S DATE=ECSD
"RTN","ECUERPC1",186,0)
 F  S DATE=$O(^ECH("AC1",ECLOC,DATE)) Q:'DATE!(DATE>ECED)  S IEN=0 D
"RTN","ECUERPC1",187,0)
 . F  S IEN=$O(^ECH("AC1",ECLOC,DATE,IEN)) Q:'IEN  D
"RTN","ECUERPC1",188,0)
 . . S NODE=$G(^ECH(IEN,0))  Q:NODE=""  Q:$P(NODE,U,7)'=ECUNT
"RTN","ECUERPC1",189,0)
 . . Q:$P(NODE,U,8)'=ECC  Q:$P(NODE,U,9)'=ECP
"RTN","ECUERPC1",190,0)
 . . S ECDX=$P($G(^ECH(IEN,"P")),U,2) I ECDX'="" D
"RTN","ECUERPC1",191,0)
 . . . S ECDX=$$ICDDX^ICDCODE(ECDX,DATE)
"RTN","ECUERPC1",192,0)
 . . . S ECDX=$P(ECDX,U,2)_"  "_$P(ECDX,U,4)
"RTN","ECUERPC1",193,0)
 . . S ASC=$P(NODE,U,19) S:ASC'="" ASC=$$GET1^DIQ(44,ASC,.01,"I")
"RTN","ECUERPC1",194,0)
 . . S ORC=$P(NODE,U,12) S:ORC'="" ORC=$$GET1^DIQ(723,ORC,.01,"I")
"RTN","ECUERPC1",195,0)
 . . S Y=DATE X ^DD("DD") S PXDT=Y,DFN=$P(NODE,U,2) D DEM^VADPT
"RTN","ECUERPC1",196,0)
 . . S DATA=$E(VADM(1),1,30)_U_PXDT_U_ECDX_U_ORC_U_ASC
"RTN","ECUERPC1",197,0)
 . . S CNT=CNT+1,^TMP($J,"ECBATPX",CNT)=IEN_U_DATA
"RTN","ECUERPC1",198,0)
 S RESULTS=$NA(^TMP($J,"ECBATPX"))
"RTN","ECUERPC1",199,0)
 Q
"RTN","ECUERPC1",200,0)
 ;
"RTN","ECUERPC1",201,0)
CLHLP(RESULTS,ECARY) ;RPC Broker entry point for classification help
"RTN","ECUERPC1",202,0)
 ;        RPC: EC CLASHELP
"RTN","ECUERPC1",203,0)
 ;INPUTS   ECARY - Contains the following elements for report printing
"RTN","ECUERPC1",204,0)
 ;          ECDFN  - Patient DFN from file (#2)
"RTN","ECUERPC1",205,0)
 ;          ECKY   - Key to provide help on
"RTN","ECUERPC1",206,0)
 ;
"RTN","ECUERPC1",207,0)
 ;OUTPUTS  RESULTS - Array of help text for classification
"RTN","ECUERPC1",208,0)
 ;
"RTN","ECUERPC1",209,0)
 N ECFILER,ECERR,ECDIRY,ECUFILE,ECDFN,ECKY,ECHNDL
"RTN","ECUERPC1",210,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",211,0)
 K ^TMP("ECMSG",$J)
"RTN","ECUERPC1",212,0)
 S ECERR=0,ECDFN=$P(ECARY,U),ECKY=$P(ECARY,U,2) D  I ECERR D CLEND Q
"RTN","ECUERPC1",213,0)
 .I ECDFN="" S ECERR=1,^TMP("ECMSG",$J,1)="0^Patient IEN not defined" Q
"RTN","ECUERPC1",214,0)
 .I ECKY="" S ECERR=1,^TMP("ECMSG",$J,1)="0^Help Key not defined" Q
"RTN","ECUERPC1",215,0)
 .S DIC=2,DIC(0)="NMZX",X=ECDFN D ^DIC I Y<0 D
"RTN","ECUERPC1",216,0)
 ..S ECERR=1,^TMP("ECMSG",$J,1)="0^Patient IEN not found"
"RTN","ECUERPC1",217,0)
 S ECHNDL="ECLASHLP" D HFSOPEN^ECRRPC(ECHNDL) I ECERR D CLEND Q
"RTN","ECUERPC1",218,0)
 U IO
"RTN","ECUERPC1",219,0)
 I ECKY="SC" D SC^SDCO23(ECDFN)
"RTN","ECUERPC1",220,0)
 D HFSCLOSE^ECRRPC(ECFILER)
"RTN","ECUERPC1",221,0)
CLEND ;
"RTN","ECUERPC1",222,0)
 I $D(^TMP("ECMSG",$J)) S RESULTS=$NA(^TMP("ECMSG",$J)) Q
"RTN","ECUERPC1",223,0)
 S RESULTS=$NA(^TMP($J))
"RTN","ECUERPC1",224,0)
 Q
"RTN","ECUERPC1",225,0)
ECDEF(RESULTS,ECARY) ;RPC Broker entry point to get a default for space bar
"RTN","ECUERPC1",226,0)
 ;        RPC: EC SPACEBAR
"RTN","ECUERPC1",227,0)
 ;INPUTS   ECARY - Contains the following elements for report printing
"RTN","ECUERPC1",228,0)
 ;          ECFILE - File to obtain value from
"RTN","ECUERPC1",229,0)
 ;
"RTN","ECUERPC1",230,0)
 ;OUTPUTS  RESULTS - IEN^Description of Text
"RTN","ECUERPC1",231,0)
 ;
"RTN","ECUERPC1",232,0)
 N DIC,ECFILE,X,Y
"RTN","ECUERPC1",233,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",234,0)
 S ECFILE=$P(ECARY,U)
"RTN","ECUERPC1",235,0)
 I ECFILE="" S ECERR=1,RESULTS="0^File not defined" Q
"RTN","ECUERPC1",236,0)
 S X=" ",DIC(0)="MZX",DIC=ECFILE D ^DIC I Y<0 D  I ECERR Q
"RTN","ECUERPC1",237,0)
 . S ECERR=1,RESULTS="0^Nothing found"
"RTN","ECUERPC1",238,0)
 S RESULTS=Y
"RTN","ECUERPC1",239,0)
 Q
"RTN","ECUMRPC1")
0^8^B80221872^B78953323
"RTN","ECUMRPC1",1,0)
ECUMRPC1 ;ALB/JAM-Event Capture Management Broker Utilities ;11/18/11  13:31
"RTN","ECUMRPC1",2,0)
 ;;2.0;EVENT CAPTURE;**25,30,33,72,94,95,105,100,107,110,112**;8 May 96;Build 18
"RTN","ECUMRPC1",3,0)
 ;
"RTN","ECUMRPC1",4,0)
DSSUNT(RESULTS,ECARY) ;
"RTN","ECUMRPC1",5,0)
 ;
"RTN","ECUMRPC1",6,0)
 ;This broker entry point returns DSS units from file 724
"RTN","ECUMRPC1",7,0)
 ;        RPC: EC GETDSSUNIT
"RTN","ECUMRPC1",8,0)
 ;INPUTS         ECARY -Contains the following subscripted elements
"RTN","ECUMRPC1",9,0)
 ;               P1 =   optional field to return DSS Units
"RTN","ECUMRPC1",10,0)
 ;                      STAT; 'A'ctive (default), 'I'nactive, 'B'oth
"RTN","ECUMRPC1",11,0)
 ;               P2 =   optional field to filter based on the DSS Name
"RTN","ECUMRPC1",12,0)
 ;               P3 =   optional field to return 1 DSS unit by IEN, if used
"RTN","ECUMRPC1",13,0)
 ;                      no other filters evaluated
"RTN","ECUMRPC1",14,0)
 ;               P4 =   optional field to filter based on the DSS Unit Number
"RTN","ECUMRPC1",15,0)
 ;               
"RTN","ECUMRPC1",16,0)
 ;               if data is passed into the other fields then all criteria
"RTN","ECUMRPC1",17,0)
 ;               must be met for data on a unit to be returned
"RTN","ECUMRPC1",18,0)
 ;
"RTN","ECUMRPC1",19,0)
 ;OUTPUTS        RESULTS - Array of DSS units. Data pieces as follows:-
"RTN","ECUMRPC1",20,0)
 ;               PIECE - Description
"RTN","ECUMRPC1",21,0)
 ;                 1     IEN of DSS Unit 
"RTN","ECUMRPC1",22,0)
 ;                 2     Name of DSS Unit
"RTN","ECUMRPC1",23,0)
 ;                 3     IEN of DSS Unit
"RTN","ECUMRPC1",24,0)
 ;                 4     Inactive flag
"RTN","ECUMRPC1",25,0)
 ;                 5     Send to PCE   
"RTN","ECUMRPC1",26,0)
 ;                 6     Unit Number
"RTN","ECUMRPC1",27,0)
 ;                 7     Service
"RTN","ECUMRPC1",28,0)
 ;                 8     Medical Specialty
"RTN","ECUMRPC1",29,0)
 ;                 9     Cost Center
"RTN","ECUMRPC1",30,0)
 ;                 10    Associated Stop code (if not sending to PCE)
"RTN","ECUMRPC1",31,0)
 ;                 11    Category flag
"RTN","ECUMRPC1",32,0)
 ;                 12    Default date entry
"RTN","ECUMRPC1",33,0)
 ;
"RTN","ECUMRPC1",34,0)
 N UNT,STAT,CNT,CAT,NODE,ECS,STR,SRV,MED,CST,UNO,INACT,ASC,PCE,ACT,NODE
"RTN","ECUMRPC1",35,0)
 N DFD,DIEN,DNM,DUNIT,GET1
"RTN","ECUMRPC1",36,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC1",37,0)
 K ^TMP($J,"ECDSSUNT")
"RTN","ECUMRPC1",38,0)
 S DNM=$P($G(ECARY),U,2),DIEN=$P($G(ECARY),U,3),DUNIT=$P($G(ECARY),U,4)
"RTN","ECUMRPC1",39,0)
 S:DNM'="" DNM=$$UP^XLFSTR(DNM)
"RTN","ECUMRPC1",40,0)
 S:DUNIT'="" DUNIT=$$UP^XLFSTR(DUNIT)
"RTN","ECUMRPC1",41,0)
 S STAT=$P($G(ECARY),U),(CNT,UNT,GET1)=0 S:STAT="" STAT="A"
"RTN","ECUMRPC1",42,0)
 ; if IEN passed in - use that, then quit, GET1 used as control to stop
"RTN","ECUMRPC1",43,0)
 I $G(DIEN) S UNT=DIEN-.001,GET1=1
"RTN","ECUMRPC1",44,0)
 F  S UNT=$O(^ECD(UNT)) Q:'UNT!((UNT>DIEN&(GET1)))  S NODE=$G(^ECD(UNT,0)) I NODE'="" D
"RTN","ECUMRPC1",45,0)
 . S ECS=$P(NODE,U,8),ACT=$P(NODE,U,6),ACT=$S(ACT:1,1:0)
"RTN","ECUMRPC1",46,0)
 . Q:('ECS)
"RTN","ECUMRPC1",47,0)
 . I '$G(DIEN),$S(STAT="A"&(ACT):1,STAT="I"&('ACT):1,1:0) Q
"RTN","ECUMRPC1",48,0)
 . ; execute new filters
"RTN","ECUMRPC1",49,0)
 . I DNM'="",$$UP^XLFSTR($P(NODE,U))'[DNM Q
"RTN","ECUMRPC1",50,0)
 . I DUNIT'="",$$UP^XLFSTR($P(NODE,U,5))'[DUNIT Q
"RTN","ECUMRPC1",51,0)
 . I DIEN'="",$$UP^XLFSTR(UNT)'[DIEN Q
"RTN","ECUMRPC1",52,0)
 . S CNT=CNT+1,CAT=$P(NODE,U,11),CAT=$S(CAT:"Y",1:"N"),UNO=$P(NODE,U,5)
"RTN","ECUMRPC1",53,0)
 . S SRV=$$GET1^DIQ(49,$P(NODE,U,2),.01,"I")
"RTN","ECUMRPC1",54,0)
 . S MED=$$GET1^DIQ(723,$P(NODE,U,3),.01,"I")
"RTN","ECUMRPC1",55,0)
 . S CST=$$GET1^DIQ(420.1,$P(NODE,U,4),.01,"I")
"RTN","ECUMRPC1",56,0)
 . S INACT=$P(NODE,U,6),INACT=$S(INACT:"I",1:"A"),ASC=$P(NODE,U,10)
"RTN","ECUMRPC1",57,0)
 . S:ASC ASC=$$GET1^DIQ(40.7,ASC,.01,"I")
"RTN","ECUMRPC1",58,0)
 . S DFD=$S($P(NODE,U,12)="N":"N",1:"X"),PCE=$P(NODE,U,14)
"RTN","ECUMRPC1",59,0)
 . S PCE=$S(PCE="A":PCE,PCE="O":PCE,1:"N")
"RTN","ECUMRPC1",60,0)
 . S STR=UNT_U_$P(NODE,U)_U_UNT_U_INACT_U_PCE_U_UNO_U_SRV_U_MED_U_CST
"RTN","ECUMRPC1",61,0)
 . S STR=STR_U_ASC_U_CAT_U_DFD,^TMP($J,"ECDSSUNT",CNT)=STR
"RTN","ECUMRPC1",62,0)
 S RESULTS=$NA(^TMP($J,"ECDSSUNT"))
"RTN","ECUMRPC1",63,0)
 Q
"RTN","ECUMRPC1",64,0)
CAT(RESULTS,ECARY) ;
"RTN","ECUMRPC1",65,0)
 ;
"RTN","ECUMRPC1",66,0)
 ;This broker entry point returns a list of categories from file 726
"RTN","ECUMRPC1",67,0)
 ;        RPC: EC GETCAT
"RTN","ECUMRPC1",68,0)
 ;INPUTS         ECARY - Contains the following subscripted elements
"RTN","ECUMRPC1",69,0)
 ;                STAT - Active or inactive category (optional)
"RTN","ECUMRPC1",70,0)
 ;                A-ctive (default), I-nactive, B-oth
"RTN","ECUMRPC1",71,0)
 ;
"RTN","ECUMRPC1",72,0)
 ;OUTPUTS        RESULTS - Array of category. Data pieces as follows:-
"RTN","ECUMRPC1",73,0)
 ;               PIECE - Description
"RTN","ECUMRPC1",74,0)
 ;                 1     IEN of Category
"RTN","ECUMRPC1",75,0)
 ;                 2     Name of Category
"RTN","ECUMRPC1",76,0)
 ;                 3     Creation Date
"RTN","ECUMRPC1",77,0)
 ;                 4     Inactive Date
"RTN","ECUMRPC1",78,0)
 ;
"RTN","ECUMRPC1",79,0)
 N STAT,CNT,CAT,NODE,ECDT,INDT,CRDT
"RTN","ECUMRPC1",80,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC1",81,0)
 K ^TMP($J,"ECCAT")
"RTN","ECUMRPC1",82,0)
 S STAT=$P($G(ECARY),U),(CNT,CAT)=0 S:STAT="" STAT="A"
"RTN","ECUMRPC1",83,0)
 F  S CAT=$O(^EC(726,CAT)) Q:'CAT  S NODE=$G(^EC(726,CAT,0)) I NODE'="" D
"RTN","ECUMRPC1",84,0)
 . S ECDT=$P(NODE,U,3)
"RTN","ECUMRPC1",85,0)
 . I STAT="A",ECDT'="",ECDT'>DT Q
"RTN","ECUMRPC1",86,0)
 . I STAT="I",ECDT="" Q
"RTN","ECUMRPC1",87,0)
 . S CRDT=$$FMTE^XLFDT($P(NODE,U,2),"2F")
"RTN","ECUMRPC1",88,0)
 . S INDT=$$FMTE^XLFDT($P(NODE,U,3),"2F")
"RTN","ECUMRPC1",89,0)
 . ;S CNT=CNT+1,^TMP($J,"ECCAT",CNT)=CAT_U_$P(NODE,U)_U_CRDT_U_INDT
"RTN","ECUMRPC1",90,0)
 . S CNT=CNT+1,^TMP($J,"ECCAT",CNT)=CAT_U_$P(NODE,U)_U_$P(CRDT,"@",1)_U_$P(INDT,"@",1)
"RTN","ECUMRPC1",91,0)
 S RESULTS=$NA(^TMP($J,"ECCAT"))
"RTN","ECUMRPC1",92,0)
 Q
"RTN","ECUMRPC1",93,0)
 ;
"RTN","ECUMRPC1",94,0)
CATCHK(RESULTS,ECARY) ;
"RTN","ECUMRPC1",95,0)
 ;
"RTN","ECUMRPC1",96,0)
 ;Broker call checks whether category is used in an Event Code Screen.
"RTN","ECUMRPC1",97,0)
 ;        RPC: EC DSSCATCHECK
"RTN","ECUMRPC1",98,0)
 ;INPUTS   ECARY  - Contains the following subscripted elements
"RTN","ECUMRPC1",99,0)
 ;          ECDA  - DSS Unit ien (file #724)
"RTN","ECUMRPC1",100,0)
 ;
"RTN","ECUMRPC1",101,0)
 ;OUTPUTS  RESULTS - Category used in Event Code Screen, 1-Yes or 0-No
"RTN","ECUMRPC1",102,0)
 ;
"RTN","ECUMRPC1",103,0)
 N ECDA,ECFLG,ECX
"RTN","ECUMRPC1",104,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC1",105,0)
 S ECDA=$P(ECARY,U) I ECDA="" Q
"RTN","ECUMRPC1",106,0)
 S (ECFLG,ECX)=0
"RTN","ECUMRPC1",107,0)
 F  S ECX=$O(^ECJ("AP",ECX)) Q:'ECX!(ECFLG)  D
"RTN","ECUMRPC1",108,0)
 . I $D(^ECJ("AP",ECX,ECDA)) S ECFLG=1
"RTN","ECUMRPC1",109,0)
 S RESULTS=ECFLG
"RTN","ECUMRPC1",110,0)
 Q
"RTN","ECUMRPC1",111,0)
PXCHK(RESULTS,ECARY) ;
"RTN","ECUMRPC1",112,0)
 ;
"RTN","ECUMRPC1",113,0)
 ;Checks whether procedure description or national number exist
"RTN","ECUMRPC1",114,0)
 ;INPUTS   ECARY  - Contains the following subscripted elements
"RTN","ECUMRPC1",115,0)
 ;          ECP - Procedure description
"RTN","ECUMRPC1",116,0)
 ;          ECN - EC National Number
"RTN","ECUMRPC1",117,0)
 ;
"RTN","ECUMRPC1",118,0)
 ;OUTPUTS  RESULTS - Px used^National # used, 1-Yes or 0-No ex. 1^0
"RTN","ECUMRPC1",119,0)
 ;
"RTN","ECUMRPC1",120,0)
 N ECX,ECP,ECN
"RTN","ECUMRPC1",121,0)
 Q:$G(ECARY)
"RTN","ECUMRPC1",122,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC1",123,0)
 S ECP=$P(ECARY,U),ECN=$P(ECARY,U,2),RESULTS="0^0"
"RTN","ECUMRPC1",124,0)
 I ECP'="",$D(^EC(725,"B",ECP)) S $P(RESULTS,U)=1
"RTN","ECUMRPC1",125,0)
 I ECN'="" F ECX="E","D","DL" D  I $P(RESULTS,U,2) Q
"RTN","ECUMRPC1",126,0)
 . I $D(^EC(725,ECX,ECN)) S $P(RESULTS,U,2)=1
"RTN","ECUMRPC1",127,0)
 Q
"RTN","ECUMRPC1",128,0)
SRCLST(RESULTS,ECARY) ;
"RTN","ECUMRPC1",129,0)
 ;
"RTN","ECUMRPC1",130,0)
 ;This broker entry returns an array of codes from a file based on a 
"RTN","ECUMRPC1",131,0)
 ;search string.
"RTN","ECUMRPC1",132,0)
 ;        RPC: EC GETLIST
"RTN","ECUMRPC1",133,0)
 ;
"RTN","ECUMRPC1",134,0)
 ;INPUTS    ECARY   - Contains the following subscripted elements
"RTN","ECUMRPC1",135,0)
 ;          ECSTR   - Search string
"RTN","ECUMRPC1",136,0)
 ;          ECFIL   - File to search
"RTN","ECUMRPC1",137,0)
 ;          ECDIR   - Search order
"RTN","ECUMRPC1",138,0)
 ;          ECNUM   - (Optional) # records to return [default=44]
"RTN","ECUMRPC1",139,0)
 ;          ECADT   - (Optional) date to determine clinic inactivity
"RTN","ECUMRPC1",140,0)
 ;OUTPUTS   RESULTS - Array of values based on the search criteria.
"RTN","ECUMRPC1",141,0)
 ;
"RTN","ECUMRPC1",142,0)
 N ECNT,DIC,ECSTR,ECFIL,ECORD,ECER,ECDI,ECNUM,ECDIR,ECADT ;112
"RTN","ECUMRPC1",143,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC1",144,0)
 S ECNT=0,ECFIL=$P(ECARY,U),ECSTR=$P(ECARY,U,2),ECDIR=$P(ECARY,U,3)
"RTN","ECUMRPC1",145,0)
 S ECORD=$S(ECDIR=-1:"B",1:"I")
"RTN","ECUMRPC1",146,0)
 K ^TMP($J,"ECFIND"),^TMP("ECSRCH",$J)
"RTN","ECUMRPC1",147,0)
 I ECFIL="" Q
"RTN","ECUMRPC1",148,0)
 S ECNUM=$S(+$P(ECARY,U,4)>0:$P(ECARY,U,4),1:44)
"RTN","ECUMRPC1",149,0)
 S ECADT=$S(+$P(ECARY,U,5):$P(ECARY,U,5),1:DT) ;112
"RTN","ECUMRPC1",150,0)
 I ECFIL=420.1 D CSTCTR            ;Cost Center search
"RTN","ECUMRPC1",151,0)
 I ECFIL=49 D SERVC                ;Service search
"RTN","ECUMRPC1",152,0)
 I ECFIL=723 D MEDSPC              ;Medical specialty
"RTN","ECUMRPC1",153,0)
 I ECFIL=40.7 D STPCDE G EXIT      ;Associated stop code
"RTN","ECUMRPC1",154,0)
 I ECFIL=724 D DUNT G EXIT         ;DSS Unit
"RTN","ECUMRPC1",155,0)
 I ECFIL=726 D ECAT                ;Category
"RTN","ECUMRPC1",156,0)
 I ECFIL=4 D LOC                   ;Location
"RTN","ECUMRPC1",157,0)
 I ECFIL=44 D ASCLN G EXIT         ;Associated clinic
"RTN","ECUMRPC1",158,0)
 I ECFIL=757.01 D LEX^ECUMRPC2 G EXIT  ;Lex ICD code
"RTN","ECUMRPC1",159,0)
 I ECFIL=200 D PROV^ECUMRPC2(ECNUM)      ;Providers
"RTN","ECUMRPC1",160,0)
 I $D(ECER) S ^TMP($J,"ECFIND",1)="0^Error occurred during search" G EXIT
"RTN","ECUMRPC1",161,0)
 D SORT
"RTN","ECUMRPC1",162,0)
EXIT K ^TMP("ECSRCH",$J)
"RTN","ECUMRPC1",163,0)
 S RESULTS=$NA(^TMP($J,"ECFIND"))
"RTN","ECUMRPC1",164,0)
 Q
"RTN","ECUMRPC1",165,0)
ASCLN ;Search for active associated clinics (file #44)
"RTN","ECUMRPC1",166,0)
 N CLN,CNT,NOD,ECDT,INACT,REACT,ERR
"RTN","ECUMRPC1",167,0)
 S CNT=0,ECDT=ECADT ;112
"RTN","ECUMRPC1",168,0)
 I (ECDIR'=1)&(ECDIR'=-1) S ECDIR=1
"RTN","ECUMRPC1",169,0)
 ;the next 2 lines of code compensate for the M collating sequence & how the
"RTN","ECUMRPC1",170,0)
 ;clinic code is passed in from a CPRS RPC, in a unique situation. If the
"RTN","ECUMRPC1",171,0)
 ;code is numeric, ending in 0 and there is a similar code ending with a
"RTN","ECUMRPC1",172,0)
 ;letter, the correct clinic is not returned. EX: 2 clinics, 3010 and "3010A"
"RTN","ECUMRPC1",173,0)
 ;exist, the code is written to return 3010, yet 3010A is incorrectly returned. 
"RTN","ECUMRPC1",174,0)
 ;This code puts the 0 back on and subtracts 1 to the clinic code
"RTN","ECUMRPC1",175,0)
 I $E(ECSTR,$L(ECSTR)-1)="/",$E(ECSTR,1,($L(ECSTR)-2))?.N D
"RTN","ECUMRPC1",176,0)
 .S ECSTR=$E(ECSTR,1,($L(ECSTR)-2))_0,ECSTR=ECSTR-1
"RTN","ECUMRPC1",177,0)
 F  Q:CNT=ECNUM  S ECSTR=$O(^SC("B",ECSTR),ECDIR) Q:ECSTR=""  S CLN="" D
"RTN","ECUMRPC1",178,0)
 .F  S CLN=$O(^SC("B",ECSTR,CLN),ECDIR) Q:CLN=""  S NOD=$G(^SC(CLN,0)) D
"RTN","ECUMRPC1",179,0)
 ..Q:NOD=""  Q:$P(NOD,U,3)'="C"  ;Q:+$G(^SC(CLN,"OOS"))
"RTN","ECUMRPC1",180,0)
 ..S ERR=0 I $D(^SC(CLN,"I")) D  I ERR Q
"RTN","ECUMRPC1",181,0)
 ...S INACT=$P(^SC(CLN,"I"),U),REACT=$P(^SC(CLN,"I"),U,2)
"RTN","ECUMRPC1",182,0)
 ...I INACT D  I ERR Q
"RTN","ECUMRPC1",183,0)
 ....I REACT="" S:ECDT'<INACT ERR=1 Q
"RTN","ECUMRPC1",184,0)
 ....I ECDT'<INACT,ECDT<REACT S ERR=1 Q
"RTN","ECUMRPC1",185,0)
 ...;I REACT,ECDT<REACT S ERR=1  removed in EC*110 - BGP
"RTN","ECUMRPC1",186,0)
 ..S CNT=CNT+1,^TMP($J,"ECFIND",CNT)=CLN_U_$P(NOD,U)
"RTN","ECUMRPC1",187,0)
 Q
"RTN","ECUMRPC1",188,0)
CSTCTR ;Search for cost centers (File #420.1)
"RTN","ECUMRPC1",189,0)
 N ECNULL,INDX,STR,NSTR,I
"RTN","ECUMRPC1",190,0)
 S $P(ECNULL," ",7)=" ",INDX="B"
"RTN","ECUMRPC1",191,0)
 I $E(ECSTR)?.N,$L(ECSTR)<7 S ECSTR=ECSTR_$E(ECNULL,1,7-$L(ECSTR))
"RTN","ECUMRPC1",192,0)
 I $L($P(ECSTR," "))=6,$P(ECSTR," ",2)?.A D   ;truncate for x-ref
"RTN","ECUMRPC1",193,0)
 . S ECSTR=$P(ECSTR," ")_" "_$E($P(ECSTR," ",2,999),1,22)
"RTN","ECUMRPC1",194,0)
 I $E(ECSTR)?.A S INDX="C",(STR,NSTR)="" D  S ECSTR=NSTR
"RTN","ECUMRPC1",195,0)
 .F I=1:1 S STR=$P(ECSTR," ",I) Q:STR=""  D
"RTN","ECUMRPC1",196,0)
 ..S STR=$E(STR)_$TR($E(STR,2,9999),"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","ECUMRPC1",197,0)
 ..S NSTR=NSTR_STR
"RTN","ECUMRPC1",198,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"",INDX,"I '$P(^(0),U,2)","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",199,0)
 Q
"RTN","ECUMRPC1",200,0)
SERVC ;Search for services (File #49)
"RTN","ECUMRPC1",201,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"","","","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",202,0)
 Q
"RTN","ECUMRPC1",203,0)
MEDSPC ;Search for medical specialty (File #723)
"RTN","ECUMRPC1",204,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"","","","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",205,0)
 Q
"RTN","ECUMRPC1",206,0)
STPCDE ;Search for associated stop code (File #40.7)
"RTN","ECUMRPC1",207,0)
 N ECNT,INDX,ECNUL,STR,IEN
"RTN","ECUMRPC1",208,0)
 S $P(ECNUL,"  ",30)=" ",INDX="B",ECNT=0,ECSTR=$P(ECSTR,"~")
"RTN","ECUMRPC1",209,0)
 I +ECSTR,+ECSTR?.N S INDX="C",IEN=0 D  Q
"RTN","ECUMRPC1",210,0)
 .S ECSTR=$O(^DIC(40.7,INDX,+ECSTR)) I ECSTR="" Q
"RTN","ECUMRPC1",211,0)
 .F  S IEN=$O(^DIC(40.7,INDX,ECSTR,IEN)) Q:'IEN  D  I ECNT>(ECNUM-1) Q
"RTN","ECUMRPC1",212,0)
 ..;07/27/09 llh added checks on piece 2 and 6
"RTN","ECUMRPC1",213,0)
 ..S STR=$G(^DIC(40.7,IEN,0)) I ($P(STR,U,3)'=""&($P(STR,U,3)'>DT))!($P(STR,U,6)="S")!($P(STR,U,6)="")!($L($P(STR,U,2))'=3) Q
"RTN","ECUMRPC1",214,0)
 ..S STR=$E($P(STR,U),1,30)_"  ["_$J($P(STR,U,2),3,0)_"]"_U_$P(STR,U,2)_U_IEN
"RTN","ECUMRPC1",215,0)
 ..S ECNT=ECNT+1,^TMP($J,"ECFIND",ECNT)=STR
"RTN","ECUMRPC1",216,0)
 ;added validation checks here as well
"RTN","ECUMRPC1",217,0)
 ;D LISTDIC(ECFIL,"",".01;1",ECORD,ECNUM,ECSTR,"",INDX,"I $P(^(0),U,3)=""""!($P(^(0),U,3)'<DT)&($P(^(0),U,6)'=""S"")","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",218,0)
 D LISTDIC(ECFIL,"",".01;1",ECORD,ECNUM,ECSTR,"",INDX,"I $P(^(0),U,3)=""""!($P(^(0),U,3)'<DT)&($L($P(^(0),U,2))=3)&(($P(^(0),U,6)=""P"")!($P(^(0),U,6)=""E""))","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",219,0)
 S ECNT=0
"RTN","ECUMRPC1",220,0)
 F  S ECNT=$O(^TMP("ECSRCH",$J,"DILIST","ID",ECNT)) Q:'ECNT  D
"RTN","ECUMRPC1",221,0)
 .S STR=$G(^TMP("ECSRCH",$J,"DILIST","ID",ECNT,.01))_U_$G(^(1))
"RTN","ECUMRPC1",222,0)
 .S STR=$E($P(STR,U),1,30)_"  ["_$J($P(STR,U,2),3,0)_"]"_U_$P(STR,U,2)
"RTN","ECUMRPC1",223,0)
 .S ^TMP($J,"ECFIND",ECNT)=STR_U_^TMP("ECSRCH",$J,"DILIST",2,ECNT)
"RTN","ECUMRPC1",224,0)
 Q
"RTN","ECUMRPC1",225,0)
DUNT ;Search for DSS unit (File #724)
"RTN","ECUMRPC1",226,0)
 N ECNT,SNDPCE
"RTN","ECUMRPC1",227,0)
 D LISTDIC(ECFIL,"",".01;10;13",ECORD,ECNUM,ECSTR,"","","I '$P(^(0),""^"",6),$P(^(0),U,8)","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",228,0)
 S ECNT=0
"RTN","ECUMRPC1",229,0)
 F  S ECNT=$O(^TMP("ECSRCH",$J,"DILIST","ID",ECNT)) Q:'ECNT  D
"RTN","ECUMRPC1",230,0)
 .S SNDPCE=$G(^TMP("ECSRCH",$J,"DILIST","ID",ECNT,13))
"RTN","ECUMRPC1",231,0)
 .S SNDPCE=$S(SNDPCE="O":1,SNDPCE="A":1,1:0)
"RTN","ECUMRPC1",232,0)
 .S ^TMP($J,"ECFIND",ECNT)=$G(^TMP("ECSRCH",$J,"DILIST","ID",ECNT,.01))_U_^TMP("ECSRCH",$J,"DILIST",2,ECNT)_U_$G(^TMP("ECSRCH",$J,"DILIST","ID",ECNT,10))_U_SNDPCE
"RTN","ECUMRPC1",233,0)
 Q
"RTN","ECUMRPC1",234,0)
ECAT ;Search for Category (File #726)
"RTN","ECUMRPC1",235,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"","","I $P(^(0),""^"",3)=""""!($P(^(0),U,3)>DT)","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",236,0)
 Q
"RTN","ECUMRPC1",237,0)
LOC ;Search for Location (File #4)
"RTN","ECUMRPC1",238,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"","","I $G(^(""EC""))","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",239,0)
 Q
"RTN","ECUMRPC1",240,0)
LISTDIC(ECFL,ECIEN,ECFLD,ECFLG,ECNUM,ECFRM,ECPRT,ECINDX,ECSCN,ECIND,ECTG,ECER) ;
"RTN","ECUMRPC1",241,0)
 ;Produces a list of records in a file base on search string
"RTN","ECUMRPC1",242,0)
 N DIC
"RTN","ECUMRPC1",243,0)
 D LIST^DIC(ECFL,ECIEN,ECFLD,ECFLG,ECNUM,ECFRM,ECPRT,ECINDX,ECSCN,ECIND,ECTG,ECER)
"RTN","ECUMRPC1",244,0)
 K ECFL,ECIEN,ECFLD,ECFLG,ECNUM,ECFRM,ECPRT,ECINDX,ECSCN,ECID
"RTN","ECUMRPC1",245,0)
 Q
"RTN","ECUMRPC1",246,0)
SORT ;Extracts data to be returned to broker
"RTN","ECUMRPC1",247,0)
 N ECNT,STR
"RTN","ECUMRPC1",248,0)
 S ECNT=0
"RTN","ECUMRPC1",249,0)
 F  S ECNT=$O(^TMP("ECSRCH",$J,"DILIST","ID",ECNT)) Q:'ECNT  D
"RTN","ECUMRPC1",250,0)
 .S ^TMP($J,"ECFIND",ECNT)=$G(^TMP("ECSRCH",$J,"DILIST","ID",ECNT,.01))_U_^TMP("ECSRCH",$J,"DILIST",2,ECNT)
"RTN","ECUMRPC1",251,0)
 Q
"VER")
8.0^22.0
"^DD",721,721,43,0)
PROCEDURE REASON #2^*P720.5'^ECL(^0;24^S DIC("S")="I $P(^(0),U,2)=$$GETSCRN^ECDSUTIL(DA)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",721,721,43,3)
Enter second applicable procedure reason for the patient's procedure.
"^DD",721,721,43,12)
Only allow procedure reason(s) associated with the event code screen.
"^DD",721,721,43,12.1)
S DIC("S")="I $P(^(0),U,2)=$$GETSCRN^ECDSUTIL(DA)"
"^DD",721,721,43,21,0)
^.001^4^4^3111019^^^
"^DD",721,721,43,21,1,0)
A second procedure reason for the patient's procedure may be selected
"^DD",721,721,43,21,2,0)
during data entry.  The user may only select procedure reasons which were
"^DD",721,721,43,21,3,0)
previously entered during the creation or editing of the associated event
"^DD",721,721,43,21,4,0)
code screen.
"^DD",721,721,43,"DT")
3111019
"^DD",721,721,44,0)
PROCEDURE REASON #3^*P720.5'^ECL(^1;1^S DIC("S")="I $P(^(0),U,2)=$$GETSCRN^ECDSUTIL(DA)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",721,721,44,3)
Enter third applicable procedure reason for the patient's procedure.
"^DD",721,721,44,12)
Only allow procedure reason(s) associated with the event code screen.
"^DD",721,721,44,12.1)
S DIC("S")="I $P(^(0),U,2)=$$GETSCRN^ECDSUTIL(DA)"
"^DD",721,721,44,21,0)
^.001^4^4^3111019^^^
"^DD",721,721,44,21,1,0)
A third procedure reason for the patient's procedure may be selected
"^DD",721,721,44,21,2,0)
during data entry. The user may only select procedure reasons which were
"^DD",721,721,44,21,3,0)
previously entered during the creation or editing of the associated event
"^DD",721,721,44,21,4,0)
code screen.  
"^DD",721,721,44,"DT")
3111019
"BLD",8404,6)
^106
**END**
**END**
