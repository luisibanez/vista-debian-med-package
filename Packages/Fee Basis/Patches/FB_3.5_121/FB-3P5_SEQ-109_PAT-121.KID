Released FB*3.5*121 SEQ #109
Extracted from mail message
**KIDS**:FB*3.5*121^

**INSTALL NAME**
FB*3.5*121
"BLD",8564,0)
FB*3.5*121^FEE BASIS^0^3110526^y
"BLD",8564,4,0)
^9.64PA^161.2^4
"BLD",8564,4,161.2,0)
161.2
"BLD",8564,4,161.2,2,0)
^9.641^161.2^1
"BLD",8564,4,161.2,2,161.2,0)
FEE BASIS VENDOR  (File-top level)
"BLD",8564,4,161.2,2,161.2,1,0)
^9.6411^42^1
"BLD",8564,4,161.2,2,161.2,1,42,0)
TAXONOMY CODE
"BLD",8564,4,161.2,222)
y^y^p^^^^n^^n
"BLD",8564,4,161.2,224)

"BLD",8564,4,161.4,0)
161.4
"BLD",8564,4,161.4,2,0)
^9.641^161.4^1
"BLD",8564,4,161.4,2,161.4,0)
FEE BASIS SITE PARAMETERS  (File-top level)
"BLD",8564,4,161.4,2,161.4,1,0)
^9.6411^37^2
"BLD",8564,4,161.4,2,161.4,1,36,0)
FPPS TRANSMIT START
"BLD",8564,4,161.4,2,161.4,1,37,0)
FPPS TRANSMIT END
"BLD",8564,4,161.4,222)
y^y^p^^^^n^^n
"BLD",8564,4,161.4,224)

"BLD",8564,4,162,0)
162
"BLD",8564,4,162,2,0)
^9.641^162.02^2
"BLD",8564,4,162,2,162.02,0)
INITIAL TREATMENT DATE  (sub-file)
"BLD",8564,4,162,2,162.02,1,0)
^9.6411^69^12
"BLD",8564,4,162,2,162.02,1,58,0)
ATTENDING PROV NAME
"BLD",8564,4,162,2,162.02,1,59,0)
ATTENDING PROV NPI
"BLD",8564,4,162,2,162.02,1,60,0)
ATTENDING PROV TAXONOMY CODE
"BLD",8564,4,162,2,162.02,1,61,0)
OPERATING PROV NAME
"BLD",8564,4,162,2,162.02,1,62,0)
OPERATING PROV NPI
"BLD",8564,4,162,2,162.02,1,63,0)
RENDERING PROV NAME
"BLD",8564,4,162,2,162.02,1,64,0)
RENDERING PROV NPI
"BLD",8564,4,162,2,162.02,1,65,0)
RENDERING PROV TAXONOMY CODE
"BLD",8564,4,162,2,162.02,1,66,0)
SERVICING PROV NAME
"BLD",8564,4,162,2,162.02,1,67,0)
SERVICING PROV NPI
"BLD",8564,4,162,2,162.02,1,68,0)
REFERRING PROV NAME
"BLD",8564,4,162,2,162.02,1,69,0)
REFERRING PROV NPI
"BLD",8564,4,162,2,162.03,0)
SERVICE PROVIDED  (sub-file)
"BLD",8564,4,162,2,162.03,1,0)
^9.6411^75^6
"BLD",8564,4,162,2,162.03,1,55,0)
ROUTING NUMBER
"BLD",8564,4,162,2,162.03,1,56,0)
ACCOUNT NUMBER
"BLD",8564,4,162,2,162.03,1,57,0)
FINANCIAL INSTITUTION
"BLD",8564,4,162,2,162.03,1,73,0)
LINE ITEM RENDERING PROV NAME
"BLD",8564,4,162,2,162.03,1,74,0)
LI RENDERING PROV NPI
"BLD",8564,4,162,2,162.03,1,75,0)
LI RENDERING PROV TAXONOMY
"BLD",8564,4,162,222)
y^y^p^^^^n^^n
"BLD",8564,4,162,224)

"BLD",8564,4,162.5,0)
162.5
"BLD",8564,4,162.5,222)
y^y^f^^^^n^^n
"BLD",8564,4,162.5,224)

"BLD",8564,4,"APDD",161.2,161.2)

"BLD",8564,4,"APDD",161.2,161.2,42)

"BLD",8564,4,"APDD",161.4,161.4)

"BLD",8564,4,"APDD",161.4,161.4,36)

"BLD",8564,4,"APDD",161.4,161.4,37)

"BLD",8564,4,"APDD",162,162.02)

"BLD",8564,4,"APDD",162,162.02,58)

"BLD",8564,4,"APDD",162,162.02,59)

"BLD",8564,4,"APDD",162,162.02,60)

"BLD",8564,4,"APDD",162,162.02,61)

"BLD",8564,4,"APDD",162,162.02,62)

"BLD",8564,4,"APDD",162,162.02,63)

"BLD",8564,4,"APDD",162,162.02,64)

"BLD",8564,4,"APDD",162,162.02,65)

"BLD",8564,4,"APDD",162,162.02,66)

"BLD",8564,4,"APDD",162,162.02,67)

"BLD",8564,4,"APDD",162,162.02,68)

"BLD",8564,4,"APDD",162,162.02,69)

"BLD",8564,4,"APDD",162,162.03)

"BLD",8564,4,"APDD",162,162.03,55)

"BLD",8564,4,"APDD",162,162.03,56)

"BLD",8564,4,"APDD",162,162.03,57)

"BLD",8564,4,"APDD",162,162.03,73)

"BLD",8564,4,"APDD",162,162.03,74)

"BLD",8564,4,"APDD",162,162.03,75)

"BLD",8564,4,"B",161.2,161.2)

"BLD",8564,4,"B",161.4,161.4)

"BLD",8564,4,"B",162,162)

"BLD",8564,4,"B",162.5,162.5)

"BLD",8564,6.3)
4
"BLD",8564,"ABPKG")
n
"BLD",8564,"INIT")
REMKEY^FBXIP121
"BLD",8564,"KRN",0)
^9.67PA^779.2^20
"BLD",8564,"KRN",.4,0)
.4
"BLD",8564,"KRN",.401,0)
.401
"BLD",8564,"KRN",.402,0)
.402
"BLD",8564,"KRN",.403,0)
.403
"BLD",8564,"KRN",.5,0)
.5
"BLD",8564,"KRN",.84,0)
.84
"BLD",8564,"KRN",3.6,0)
3.6
"BLD",8564,"KRN",3.8,0)
3.8
"BLD",8564,"KRN",9.2,0)
9.2
"BLD",8564,"KRN",9.8,0)
9.8
"BLD",8564,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",8564,"KRN",9.8,"NM",1,0)
FBFHLX^^0^B55631854
"BLD",8564,"KRN",9.8,"NM",2,0)
FBFHLX1^^0^B30458874
"BLD",8564,"KRN",9.8,"NM",3,0)
FBPAID^^0^B29740896
"BLD",8564,"KRN",9.8,"NM",4,0)
FBPAID1^^0^B14897492
"BLD",8564,"KRN",9.8,"NM",5,0)
FBXIP121^^0^B655280
"BLD",8564,"KRN",9.8,"NM","B","FBFHLX",1)

"BLD",8564,"KRN",9.8,"NM","B","FBFHLX1",2)

"BLD",8564,"KRN",9.8,"NM","B","FBPAID",3)

"BLD",8564,"KRN",9.8,"NM","B","FBPAID1",4)

"BLD",8564,"KRN",9.8,"NM","B","FBXIP121",5)

"BLD",8564,"KRN",19,0)
19
"BLD",8564,"KRN",19,"NM",0)
^9.68A^^0
"BLD",8564,"KRN",19.1,0)
19.1
"BLD",8564,"KRN",101,0)
101
"BLD",8564,"KRN",409.61,0)
409.61
"BLD",8564,"KRN",771,0)
771
"BLD",8564,"KRN",779.2,0)
779.2
"BLD",8564,"KRN",870,0)
870
"BLD",8564,"KRN",8989.51,0)
8989.51
"BLD",8564,"KRN",8989.52,0)
8989.52
"BLD",8564,"KRN",8994,0)
8994
"BLD",8564,"KRN","B",.4,.4)

"BLD",8564,"KRN","B",.401,.401)

"BLD",8564,"KRN","B",.402,.402)

"BLD",8564,"KRN","B",.403,.403)

"BLD",8564,"KRN","B",.5,.5)

"BLD",8564,"KRN","B",.84,.84)

"BLD",8564,"KRN","B",3.6,3.6)

"BLD",8564,"KRN","B",3.8,3.8)

"BLD",8564,"KRN","B",9.2,9.2)

"BLD",8564,"KRN","B",9.8,9.8)

"BLD",8564,"KRN","B",19,19)

"BLD",8564,"KRN","B",19.1,19.1)

"BLD",8564,"KRN","B",101,101)

"BLD",8564,"KRN","B",409.61,409.61)

"BLD",8564,"KRN","B",771,771)

"BLD",8564,"KRN","B",779.2,779.2)

"BLD",8564,"KRN","B",870,870)

"BLD",8564,"KRN","B",8989.51,8989.51)

"BLD",8564,"KRN","B",8989.52,8989.52)

"BLD",8564,"KRN","B",8994,8994)

"BLD",8564,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",8564,"QUES",0)
^9.62^^
"BLD",8564,"REQB",0)
^9.611^2^2
"BLD",8564,"REQB",1,0)
FB*3.5*61^2
"BLD",8564,"REQB",2,0)
FB*3.5*107^2
"BLD",8564,"REQB","B","FB*3.5*107",2)

"BLD",8564,"REQB","B","FB*3.5*61",1)

"FIA",161.2)
FEE BASIS VENDOR
"FIA",161.2,0)
^FBAAV(
"FIA",161.2,0,0)
161.2I
"FIA",161.2,0,1)
y^y^p^^^^n^^n
"FIA",161.2,0,10)

"FIA",161.2,0,11)

"FIA",161.2,0,"RLRO")

"FIA",161.2,0,"VR")
3.5^FB
"FIA",161.2,161.2)
1
"FIA",161.2,161.2,42)

"FIA",161.4)
FEE BASIS SITE PARAMETERS
"FIA",161.4,0)
^FBAA(161.4,
"FIA",161.4,0,0)
161.4
"FIA",161.4,0,1)
y^y^p^^^^n^^n
"FIA",161.4,0,10)

"FIA",161.4,0,11)

"FIA",161.4,0,"RLRO")

"FIA",161.4,0,"VR")
3.5^FB
"FIA",161.4,161.4)
1
"FIA",161.4,161.4,36)

"FIA",161.4,161.4,37)

"FIA",162)
FEE BASIS PAYMENT
"FIA",162,0)
^FBAAC(
"FIA",162,0,0)
162P
"FIA",162,0,1)
y^y^p^^^^n^^n
"FIA",162,0,10)

"FIA",162,0,11)

"FIA",162,0,"RLRO")

"FIA",162,0,"VR")
3.5^FB
"FIA",162,162)
1
"FIA",162,162.02)
1
"FIA",162,162.02,58)

"FIA",162,162.02,59)

"FIA",162,162.02,60)

"FIA",162,162.02,61)

"FIA",162,162.02,62)

"FIA",162,162.02,63)

"FIA",162,162.02,64)

"FIA",162,162.02,65)

"FIA",162,162.02,66)

"FIA",162,162.02,67)

"FIA",162,162.02,68)

"FIA",162,162.02,69)

"FIA",162,162.03)
1
"FIA",162,162.03,55)

"FIA",162,162.03,56)

"FIA",162,162.03,57)

"FIA",162,162.03,73)

"FIA",162,162.03,74)

"FIA",162,162.03,75)

"FIA",162.5)
FEE BASIS INVOICE
"FIA",162.5,0)
^FBAAI(
"FIA",162.5,0,0)
162.5
"FIA",162.5,0,1)
y^y^f^^^^n^^n
"FIA",162.5,0,10)

"FIA",162.5,0,11)

"FIA",162.5,0,"RLRO")

"FIA",162.5,0,"VR")
3.5^FB
"FIA",162.5,162.5)
0
"FIA",162.5,162.518)
0
"FIA",162.5,162.558)
0
"FIA",162.5,162.559)
0
"FIA",162.5,162.579)
0
"INIT")
REMKEY^FBXIP121
"IX",162.5,162.5,"AA",0)
162.5^AA^Index of vendor, veteran, treatment from date.^R^^R^IR^I^162.5^^^^^S
"IX",162.5,162.5,"AA",.1,0)
^^7^7^3000131^
"IX",162.5,162.5,"AA",.1,1,0)
The "AA" cross reference is a compound cross reference on fields in the
"IX",162.5,162.5,"AA",.1,2,0)
FEE BASIS INVOICE file. It is defined as
"IX",162.5,162.5,"AA",.1,3,0)
   ^FBAAI("AA",vendor,veteran,$E($P(date,"."),1,5),da)
"IX",162.5,162.5,"AA",.1,4,0)
 where vendor  is the VENDOR (#2)
"IX",162.5,162.5,"AA",.1,5,0)
       veteran is the VETERAN (#3)
"IX",162.5,162.5,"AA",.1,6,0)
       date    is the TREATMENT FROM DATE (#5)
"IX",162.5,162.5,"AA",.1,7,0)
       da      is the IEN of the FEE BASIS INVOICE entry
"IX",162.5,162.5,"AA",1)
S ^FBAAI("AA",X(1),X(2),X(3),DA)=""
"IX",162.5,162.5,"AA",2)
K ^FBAAI("AA",X(1),X(2),X(3),DA)
"IX",162.5,162.5,"AA",2.5)
K ^FBAAI("AA")
"IX",162.5,162.5,"AA",11.1,0)
^.114IA^3^3
"IX",162.5,162.5,"AA",11.1,1,0)
1^F^162.5^2^^1^F
"IX",162.5,162.5,"AA",11.1,2,0)
2^F^162.5^3^^2^F
"IX",162.5,162.5,"AA",11.1,3,0)
3^F^162.5^5^^3^F
"IX",162.5,162.5,"AA",11.1,3,2)
S X=$E($P(X,"."),1,5)
"IX",162.5,162.5,"AA",11.1,3,3)
S X=X
"IX",162.5,162.5,"AE",0)
162.5^AE^Index of batch number, veteran^R^^R^IR^I^162.5^^^^^S
"IX",162.5,162.5,"AE",.1,0)
^^6^6^3000131^
"IX",162.5,162.5,"AE",.1,1,0)
The "AE" cross reference is a compound cross reference on fields in the
"IX",162.5,162.5,"AE",.1,2,0)
FEE BASIS INVOICE file. It is defined as
"IX",162.5,162.5,"AE",.1,3,0)
   ^FBAAI("AE",batch,veteran,da)
"IX",162.5,162.5,"AE",.1,4,0)
 where batch   is the BATCH NUMBER (#20)
"IX",162.5,162.5,"AE",.1,5,0)
       veteran is the VETERAN (#3)
"IX",162.5,162.5,"AE",.1,6,0)
       da      is the IEN of the FEE BASIS INVOICE entry
"IX",162.5,162.5,"AE",1)
S ^FBAAI("AE",X(1),X(2),DA)=""
"IX",162.5,162.5,"AE",2)
K ^FBAAI("AE",X(1),X(2),DA)
"IX",162.5,162.5,"AE",2.5)
K ^FBAAI("AE")
"IX",162.5,162.5,"AE",11.1,0)
^.114IA^2^2
"IX",162.5,162.5,"AE",11.1,1,0)
1^F^162.5^20^^1^F
"IX",162.5,162.5,"AE",11.1,2,0)
2^F^162.5^3^^2^F
"IX",162.5,162.5,"AFC",0)
162.5^AFC^Cross-reference on FPPS CLAIM ID.^R^^F^IR^I^162.5^^^^^S
"IX",162.5,162.5,"AFC",.1,0)
^^1^1^3030618^
"IX",162.5,162.5,"AFC",.1,1,0)
Regular cross-reference on the FPPS CLAIM ID.
"IX",162.5,162.5,"AFC",1)
S ^FBAAI("AFC",$E(X,1,32),DA)=""
"IX",162.5,162.5,"AFC",2)
K ^FBAAI("AFC",$E(X,1,32),DA)
"IX",162.5,162.5,"AFC",2.5)
K ^FBAAI("AFC")
"IX",162.5,162.5,"AFC",11.1,0)
^.114IA^1^1
"IX",162.5,162.5,"AFC",11.1,1,0)
1^F^162.5^56^32^1^F
"IX",162.5,162.5,"AFC",11.1,1,3)

"IX",162.5,162.5,"AI",0)
162.5^AI^Index of vendor, invoice date, veteran, suspend code.^R^^R^IR^I^162.5^^^^^S
"IX",162.5,162.5,"AI",.1,0)
^^9^9^3000131^
"IX",162.5,162.5,"AI",.1,1,0)
The "AI" cross-reference is used for printing suspense letters for a date
"IX",162.5,162.5,"AI",.1,2,0)
range. It is a compound cross reference on fields in the FEE BASIS INVOICE
"IX",162.5,162.5,"AI",.1,3,0)
file. It is defined as
"IX",162.5,162.5,"AI",.1,4,0)
   ^FBAAI("AI",vendor,invoice_date,veteran,suspend_code,da)
"IX",162.5,162.5,"AI",.1,5,0)
 where vendor       is the VENDOR (#2)
"IX",162.5,162.5,"AI",.1,6,0)
       invoice_date is the INVOICE DATE RECEIVED (#1)
"IX",162.5,162.5,"AI",.1,7,0)
       veteran      is the VETERAN (#3)
"IX",162.5,162.5,"AI",.1,8,0)
       suspend_code is the SUSPEND CODE (#10)
"IX",162.5,162.5,"AI",.1,9,0)
       da           is the IEN of the FEE BASIS INVOICE
"IX",162.5,162.5,"AI",1)
S ^FBAAI("AI",X(1),X(2),X(3),X(4),DA)=""
"IX",162.5,162.5,"AI",2)
K ^FBAAI("AI",X(1),X(2),X(3),X(4),DA)
"IX",162.5,162.5,"AI",2.5)
K ^FBAAI("AI")
"IX",162.5,162.5,"AI",11.1,0)
^.114IA^4^4
"IX",162.5,162.5,"AI",11.1,1,0)
1^F^162.5^2^^1^F
"IX",162.5,162.5,"AI",11.1,1,3)

"IX",162.5,162.5,"AI",11.1,2,0)
2^F^162.5^1^^2^F
"IX",162.5,162.5,"AI",11.1,2,3)

"IX",162.5,162.5,"AI",11.1,3,0)
3^F^162.5^3^^3^F
"IX",162.5,162.5,"AI",11.1,3,3)

"IX",162.5,162.5,"AI",11.1,4,0)
4^F^162.5^10^^4^F
"IX",162.5,162.5,"AI",11.1,4,3)

"MBREQ")
0
"PKG",344,-1)
1^1
"PKG",344,0)
FEE BASIS^FB^Used to pay private vendors
"PKG",344,20,0)
^9.402P^1^1
"PKG",344,20,1,0)
2^^FBPMRG
"PKG",344,20,1,1)

"PKG",344,20,"B",2,1)

"PKG",344,22,0)
^9.49I^1^1
"PKG",344,22,1,0)
3.5^2950130^2950329
"PKG",344,22,1,"PAH",1,0)
121^3110526^10000000046
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","FBFHLX")
0^1^B55631854^B54858004
"RTN","FBFHLX",1,0)
FBFHLX ;WOIFO/SAB-TRANSMIT HL7 MESSAGES TO FPPS ;10/8/2003
"RTN","FBFHLX",2,0)
 ;;3.5;FEE BASIS;**61,121**;JULY 18, 2003;Build 4
"RTN","FBFHLX",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBFHLX",4,0)
 Q
"RTN","FBFHLX",5,0)
 ;
"RTN","FBFHLX",6,0)
EN ; Entry Point
"RTN","FBFHLX",7,0)
 ;   may be called by scheduled option as non-interactive task
"RTN","FBFHLX",8,0)
 ;   may be called by user menu option as interactive task
"RTN","FBFHLX",9,0)
 ;
"RTN","FBFHLX",10,0)
 N FBMODE,FBQUIT
"RTN","FBFHLX",11,0)
 S FBQUIT=0
"RTN","FBFHLX",12,0)
 ;
"RTN","FBFHLX",13,0)
 ; Determine Mode - (A)LL PENDING or BY SELECTED (I)NVOICE
"RTN","FBFHLX",14,0)
 I $E(IOST,1,2)'="C-" S FBMODE="A" ; non-interactive is always ALL
"RTN","FBFHLX",15,0)
 I $E(IOST,1,2)="C-" D
"RTN","FBFHLX",16,0)
 . ; ask mode
"RTN","FBFHLX",17,0)
 . W !,"This option transmits HL7 messages to FPPS for EDI invoices."
"RTN","FBFHLX",18,0)
 . S DIR(0)="S^I:By Specified Invoice;A:All Pending Invoices"
"RTN","FBFHLX",19,0)
 . S DIR("A")="Select Transmission Option"
"RTN","FBFHLX",20,0)
 . S DIR("?",1)="Enter I to transmit a single invoice or A to transmit"
"RTN","FBFHLX",21,0)
 . S DIR("?",2)="all pending invoices.  If I is entered then you will be"
"RTN","FBFHLX",22,0)
 . S DIR("?",3)="asked to select the invoice."
"RTN","FBFHLX",23,0)
 . S DIR("?",4)=""
"RTN","FBFHLX",24,0)
 . S DIR("?")="Enter a code from the list."
"RTN","FBFHLX",25,0)
 . D ^DIR K DIR I $D(DIRUT) S FBQUIT=1 Q
"RTN","FBFHLX",26,0)
 . S FBMODE=Y
"RTN","FBFHLX",27,0)
 . ; confirm all
"RTN","FBFHLX",28,0)
 . I FBMODE="A" D
"RTN","FBFHLX",29,0)
 . . S DIR(0)="Y",DIR("A")="Transmit all pending invoices now"
"RTN","FBFHLX",30,0)
 . . D ^DIR K DIR I 'Y!$D(DIRUT) S FBQUIT=1 Q
"RTN","FBFHLX",31,0)
 Q:FBQUIT
"RTN","FBFHLX",32,0)
 ;
"RTN","FBFHLX",33,0)
 I FBMODE="A" D ALL
"RTN","FBFHLX",34,0)
 I FBMODE="I" D BYINV
"RTN","FBFHLX",35,0)
 ;
"RTN","FBFHLX",36,0)
 Q
"RTN","FBFHLX",37,0)
 ;
"RTN","FBFHLX",38,0)
ALL ; Transmit All Pending Invoices (interactive and non-interactive)
"RTN","FBFHLX",39,0)
 ; input
"RTN","FBFHLX",40,0)
 ;   FBQUIT - boolean value (0 or 1), true if process should stop
"RTN","FBFHLX",41,0)
 ; output
"RTN","FBFHLX",42,0)
 ;   FBQUIT - may change value
"RTN","FBFHLX",43,0)
 ;
"RTN","FBFHLX",44,0)
 N FBCNT,FBERR,FBHL,FBQDA,FBSTA,FBTTYP,FBXL,FBXMIT,HLFS,HLECH
"RTN","FBFHLX",45,0)
 ;
"RTN","FBFHLX",46,0)
 ; init
"RTN","FBFHLX",47,0)
 S FBXL=20 ; last line used for message text (save 20 lines for header)
"RTN","FBFHLX",48,0)
 S FBCNT("PENDT")=0 ; count of pending invoices that were transmitted
"RTN","FBFHLX",49,0)
 S FBCNT("PENDE")=0 ; count of pending invoices that had exception
"RTN","FBFHLX",50,0)
 ;
"RTN","FBFHLX",51,0)
 ; save time that process started
"RTN","FBFHLX",52,0)
 S FBXMIT("START")=$$NOW^XLFDT()
"RTN","FBFHLX",53,0)
 I $E(IOST,1,2)="C-" W !!,"Starting Process..."
"RTN","FBFHLX",54,0)
 ;
"RTN","FBFHLX",55,0)
 ; initialize HL variables
"RTN","FBFHLX",56,0)
 D INIT^HLFNC2("FB FEE TO FPPS EVENT",.FBHL)
"RTN","FBFHLX",57,0)
 I $G(FBHL) D
"RTN","FBFHLX",58,0)
 . S FBQUIT=1
"RTN","FBFHLX",59,0)
 . D PTXT^FBFHLX1(.FBXL,"Error: Unable to initialize HL variables.")
"RTN","FBFHLX",60,0)
 . D PTXT^FBFHLX1(.FBXL,FBHL)
"RTN","FBFHLX",61,0)
 E  D
"RTN","FBFHLX",62,0)
 . S HLFS=FBHL("FS")
"RTN","FBFHLX",63,0)
 . S HLECH=FBHL("ECH")
"RTN","FBFHLX",64,0)
 ;
"RTN","FBFHLX",65,0)
 ; check for transmitted invoices w/o commit ACK
"RTN","FBFHLX",66,0)
 S FBXMIT("ACK")=$$NOW^XLFDT()
"RTN","FBFHLX",67,0)
 I 'FBQUIT,$E(IOST,1,2)="C-" W !!,"Checking for acknowledgements..."
"RTN","FBFHLX",68,0)
 I 'FBQUIT D CHKACK^FBFHLX1
"RTN","FBFHLX",69,0)
 ;
"RTN","FBFHLX",70,0)
 S FBXMIT("SEND")=$$NOW^XLFDT()
"RTN","FBFHLX",71,0)
 I 'FBQUIT,$E(IOST,1,2)="C-" W !!,"Transmitting Pending Invoices..."
"RTN","FBFHLX",72,0)
 ; loop thru pending invoices and transmit
"RTN","FBFHLX",73,0)
 S FBQDA=0 F  S FBQDA=$O(^FBHL(163.5,"AC",0,FBQDA)) Q:'FBQDA!FBQUIT  D
"RTN","FBFHLX",74,0)
 . ; check for taskman quit request
"RTN","FBFHLX",75,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,FBQUIT=1 Q
"RTN","FBFHLX",76,0)
 . ; try to transmit invoice
"RTN","FBFHLX",77,0)
 . D INVOICE
"RTN","FBFHLX",78,0)
 . ; update counters based on result
"RTN","FBFHLX",79,0)
 . I FBERR S FBCNT("PENDE")=FBCNT("PENDE")+1
"RTN","FBFHLX",80,0)
 . E  S FBCNT("PENDT")=FBCNT("PENDT")+1
"RTN","FBFHLX",81,0)
 . I FBCNT("PENDE")+FBCNT("PENDT")>9999 S (FBCNT("10K"),FBQUIT)=1  ;FB*3.5*121
"RTN","FBFHLX",82,0)
 ;
"RTN","FBFHLX",83,0)
 ; save time that process ended
"RTN","FBFHLX",84,0)
 S FBXMIT("END")=$$NOW^XLFDT()
"RTN","FBFHLX",85,0)
 I $E(IOST,1,2)="C-" W !!,"Process complete. Sending Summary Message to G.FEE..."
"RTN","FBFHLX",86,0)
 ;
"RTN","FBFHLX",87,0)
 ; build and send summary mail message to G.FEE
"RTN","FBFHLX",88,0)
 D SUMMSG^FBFHLX1
"RTN","FBFHLX",89,0)
 ;
"RTN","FBFHLX",90,0)
 ; clean-up
"RTN","FBFHLX",91,0)
 K ^TMP($J,"FBE"),^TMP($J,"FBNA"),^TMP($J,"FBW"),^TMP($J,"FBX")
"RTN","FBFHLX",92,0)
 ;
"RTN","FBFHLX",93,0)
 Q
"RTN","FBFHLX",94,0)
 ;
"RTN","FBFHLX",95,0)
BYINV ; Transmit Selected Invoices (interactive)
"RTN","FBFHLX",96,0)
 ;
"RTN","FBFHLX",97,0)
 N FBAAIN,FBERR,FBHL,FBQDA,FBSTA,FBTTYP,FBX,HLFS,HLECH
"RTN","FBFHLX",98,0)
 ;
"RTN","FBFHLX",99,0)
 ; initialize HL variables
"RTN","FBFHLX",100,0)
 D INIT^HLFNC2("FB FEE TO FPPS EVENT",.FBHL)
"RTN","FBFHLX",101,0)
 I $G(FBHL) D  Q
"RTN","FBFHLX",102,0)
 . W !,$C(7),"ERROR: Couldn't initialize HL variables!"
"RTN","FBFHLX",103,0)
 . W !,FBHL
"RTN","FBFHLX",104,0)
 S HLFS=FBHL("FS")
"RTN","FBFHLX",105,0)
 S HLECH=FBHL("ECH")
"RTN","FBFHLX",106,0)
 ;
"RTN","FBFHLX",107,0)
 ; select invoice
"RTN","FBFHLX",108,0)
 F  Q:FBQUIT  D
"RTN","FBFHLX",109,0)
 . S DIC="^FBHL(163.5,",DIC(0)="AEQM"
"RTN","FBFHLX",110,0)
 . D ^DIC I Y'>0 S FBQUIT=1 Q
"RTN","FBFHLX",111,0)
 . S FBQDA=+Y
"RTN","FBFHLX",112,0)
 . ;
"RTN","FBFHLX",113,0)
 . ; get invoice number and switch to last entry for invoice
"RTN","FBFHLX",114,0)
 . S FBAAIN=$P($G(^FBHL(163.5,FBQDA,0)),U)
"RTN","FBFHLX",115,0)
 . S FBQDA=$$LAST^FBFHLU(FBAAIN)
"RTN","FBFHLX",116,0)
 . I 'FBQDA W !,"Error, invalid data for invoice ",FBAAIN," in file 163.5" Q
"RTN","FBFHLX",117,0)
 . S FBQY=$G(^FBHL(163.5,FBQDA,0))
"RTN","FBFHLX",118,0)
 . ;
"RTN","FBFHLX",119,0)
 . ; confirm
"RTN","FBFHLX",120,0)
 . S FBX=$S($P(FBQY,U,3)=0:"",1:"re-")
"RTN","FBFHLX",121,0)
 . S DIR(0)="Y"
"RTN","FBFHLX",122,0)
 . S DIR("A")="Do you want to "_FBX_"transmit invoice "_FBAAIN
"RTN","FBFHLX",123,0)
 . D ^DIR K DIR S:$D(DIRUT) FBQUIT=1 I 'Y Q
"RTN","FBFHLX",124,0)
 . ;
"RTN","FBFHLX",125,0)
 . ; if re-transmit then create a new pending entry for invoice
"RTN","FBFHLX",126,0)
 . I FBX="re-" D
"RTN","FBFHLX",127,0)
 . . D FILEQUE^FBFHLL(FBAAIN,$P(FBQY,U,2))
"RTN","FBFHLX",128,0)
 . . S FBQDA=$$LAST^FBFHLU(FBAAIN)
"RTN","FBFHLX",129,0)
 . . I FBQDA S FBQY=$G(^FBHL(163.5,FBQDA,0))
"RTN","FBFHLX",130,0)
 . . E  S FBQY=""
"RTN","FBFHLX",131,0)
 . ;
"RTN","FBFHLX",132,0)
 . ; check that pending entry was added
"RTN","FBFHLX",133,0)
 . I FBX="re-",$P(FBQY,U,3)'=0 D  Q
"RTN","FBFHLX",134,0)
 . . W !,"Error adding entry to file 163.5. Can't re-transmit invoice."
"RTN","FBFHLX",135,0)
 . ;
"RTN","FBFHLX",136,0)
 . ; transmit specified invoice
"RTN","FBFHLX",137,0)
 . D INVOICE
"RTN","FBFHLX",138,0)
 . ;
"RTN","FBFHLX",139,0)
 . ; report success or failure of transmit
"RTN","FBFHLX",140,0)
 . I FBERR=0 W !,"Invoice has been transmitted to the HL7 package.",!!
"RTN","FBFHLX",141,0)
 . I FBERR=1 D
"RTN","FBFHLX",142,0)
 . . N FBL
"RTN","FBFHLX",143,0)
 . . W $C(7),!,"Problems prevented transmission of the invoice."
"RTN","FBFHLX",144,0)
 . . S FBL=0 F  S FBL=$O(^TMP($J,"FBE",FBAAIN,FBL)) Q:'FBL  D
"RTN","FBFHLX",145,0)
 . . . W !,"  ",$G(^TMP($J,"FBE",FBAAIN,FBL))
"RTN","FBFHLX",146,0)
 . . W !
"RTN","FBFHLX",147,0)
 . ;
"RTN","FBFHLX",148,0)
 . ; clean up after transmit
"RTN","FBFHLX",149,0)
 . K ^TMP($J,"FBE",FBAAIN)
"RTN","FBFHLX",150,0)
 . K ^TMP($J,"FBW",FBAAIN)
"RTN","FBFHLX",151,0)
 ;
"RTN","FBFHLX",152,0)
 Q
"RTN","FBFHLX",153,0)
 ;
"RTN","FBFHLX",154,0)
INVOICE ; transmit invoice
"RTN","FBFHLX",155,0)
 ; input
"RTN","FBFHLX",156,0)
 ;   FBQDA - ien of entry in file 163.5 to transmit, required
"RTN","FBFHLX",157,0)
 ; output
"RTN","FBFHLX",158,0)
 ;   FBERR - error flag (0 or 1), true if error prevented transmit
"RTN","FBFHLX",159,0)
 ;   FBSTA  - station number in transmitted message (may be null if err)
"RTN","FBFHLX",160,0)
 ;   FBTTYP - transaction type in transmitted message (may be null)
"RTN","FBFHLX",161,0)
 ;   ^TMP($J,"FBE",invoice number,#) - any exceptions
"RTN","FBFHLX",162,0)
 ;   ^TMP($J,"FBW",invoice number,#) - any warnings
"RTN","FBFHLX",163,0)
 ;
"RTN","FBFHLX",164,0)
 ; N FBAAIN,FBD,FBFILE,FBRESULT,FBQY
"RTN","FBFHLX",165,0)
 ;
"RTN","FBFHLX",166,0)
 ; initialize
"RTN","FBFHLX",167,0)
 S FBERR=0
"RTN","FBFHLX",168,0)
 S FBSTA=""
"RTN","FBFHLX",169,0)
 S FBTTYP=""
"RTN","FBFHLX",170,0)
 ;
"RTN","FBFHLX",171,0)
 ; check for required input
"RTN","FBFHLX",172,0)
 I '$G(FBQDA) S FBERR=1 Q
"RTN","FBFHLX",173,0)
 ;
"RTN","FBFHLX",174,0)
 ; lock record
"RTN","FBFHLX",175,0)
 L +^FBHL(163.5,FBQDA):10
"RTN","FBFHLX",176,0)
 I '$T D  Q
"RTN","FBFHLX",177,0)
 . S FBERR=1
"RTN","FBFHLX",178,0)
 . S FBAAIN=+$P($G(^FBHL(163.5,FBQDA,0)),U)
"RTN","FBFHLX",179,0)
 . I FBAAIN D POST^FBFHLU(FBAAIN,"E","Couldn't Lock Entry "_FBQDA_" in File 163.5.")
"RTN","FBFHLX",180,0)
 ;
"RTN","FBFHLX",181,0)
 ; get invoice number and file number
"RTN","FBFHLX",182,0)
 I 'FBERR D
"RTN","FBFHLX",183,0)
 . N FBQY
"RTN","FBFHLX",184,0)
 . S FBQY=$G(^FBHL(163.5,FBQDA,0))
"RTN","FBFHLX",185,0)
 . S FBAAIN=+$P(FBQY,U)
"RTN","FBFHLX",186,0)
 . I 'FBAAIN D
"RTN","FBFHLX",187,0)
 . . S FBERR=1
"RTN","FBFHLX",188,0)
 . . D POST^FBFHLU(0,"E","Couldn't determine invoice # for entry "_FBQDA_" in file 163.5.")
"RTN","FBFHLX",189,0)
 . Q:FBERR
"RTN","FBFHLX",190,0)
 . S FBFILE=$P(FBQY,U,2)
"RTN","FBFHLX",191,0)
 . I "^3^5^9^"'[(U_FBFILE_U) D
"RTN","FBFHLX",192,0)
 . . S FBERR=1
"RTN","FBFHLX",193,0)
 . . D POST^FBFHLU(FBAAIN,"E","Invalid File # for entry "_FBQDA_" in file 163.5.")
"RTN","FBFHLX",194,0)
 ;
"RTN","FBFHLX",195,0)
 ; gather invoice data
"RTN","FBFHLX",196,0)
 I 'FBERR D @("EN^FBFHLD"_FBFILE) I $D(^TMP($J,"FBE",FBAAIN)) S FBERR=1
"RTN","FBFHLX",197,0)
 S FBTTYP=$P($G(FBD(0,"INV")),U,2)
"RTN","FBFHLX",198,0)
 S FBSTA=$P($G(FBD(0,"INV")),U,3)
"RTN","FBFHLX",199,0)
 ;
"RTN","FBFHLX",200,0)
 ; build HL segments
"RTN","FBFHLX",201,0)
 I 'FBERR D EN^FBFHLS I $D(^TMP($J,"FBE",FBAAIN)) S FBERR=1
"RTN","FBFHLX",202,0)
 ;
"RTN","FBFHLX",203,0)
 ; generate HL message
"RTN","FBFHLX",204,0)
 I 'FBERR D
"RTN","FBFHLX",205,0)
 . K FBRESULT
"RTN","FBFHLX",206,0)
 . D GENERATE^HLMA("FB FEE TO FPPS EVENT","GM",1,.FBRESULT)
"RTN","FBFHLX",207,0)
 . I +$P(FBRESULT,U,2) D
"RTN","FBFHLX",208,0)
 . . S FBERR=1
"RTN","FBFHLX",209,0)
 . . D POST^FBFHLU(FBAAIN,"E","HL ERR:"_$P(FBRESULT,U,3))
"RTN","FBFHLX",210,0)
 ;
"RTN","FBFHLX",211,0)
 ; update file 163.5
"RTN","FBFHLX",212,0)
 I 'FBERR D
"RTN","FBFHLX",213,0)
 . N FBFDA
"RTN","FBFHLX",214,0)
 . S FBFDA(163.5,FBQDA_",",2)="1" ; set status = transmitted
"RTN","FBFHLX",215,0)
 . S FBFDA(163.5,FBQDA_",",3)=$P(FBRESULT,U) ; message ID
"RTN","FBFHLX",216,0)
 . S FBFDA(163.5,FBQDA_",",4)=$$NOW^XLFDT() ; message date/time
"RTN","FBFHLX",217,0)
 . S FBFDA(163.5,FBQDA_",",5)=FBTTYP ; transaction type
"RTN","FBFHLX",218,0)
 . S FBFDA(163.5,FBQDA_",",6)=FBSTA ; station number
"RTN","FBFHLX",219,0)
 . I $D(FBFDA) D FILE^DIE("","FBFDA")
"RTN","FBFHLX",220,0)
 . ;
"RTN","FBFHLX",221,0)
 . ; store HL segments in word-processing field
"RTN","FBFHLX",222,0)
 . D MOVEHL
"RTN","FBFHLX",223,0)
 . D WP^DIE(163.5,FBQDA_",",7,"","^TMP($J,""FBHLSEG"")")
"RTN","FBFHLX",224,0)
 . K ^TMP($J,"FBHLSEG")
"RTN","FBFHLX",225,0)
 ;
"RTN","FBFHLX",226,0)
 ; unlock record
"RTN","FBFHLX",227,0)
 L -^FBHL(163.5,FBQDA)
"RTN","FBFHLX",228,0)
 ;
"RTN","FBFHLX",229,0)
 ; clean-up
"RTN","FBFHLX",230,0)
 K ^TMP("HLS",$J)
"RTN","FBFHLX",231,0)
 Q
"RTN","FBFHLX",232,0)
 ;
"RTN","FBFHLX",233,0)
MOVEHL ; Copy HL segment data into word-processing style array
"RTN","FBFHLX",234,0)
 ; input
"RTN","FBFHLX",235,0)
 ; ^TMP("HLS",$J, array
"RTN","FBFHLX",236,0)
 ; output
"RTN","FBFHLX",237,0)
 ; ^TMP($J,"HLSEG",#)=line of text
"RTN","FBFHLX",238,0)
 ;  there will be a blank line after each segment
"RTN","FBFHLX",239,0)
 ;
"RTN","FBFHLX",240,0)
 N FBI,FBII,FBL
"RTN","FBFHLX",241,0)
 K ^TMP($J,"FBHLSEG")
"RTN","FBFHLX",242,0)
 S FBL=0
"RTN","FBFHLX",243,0)
 S FBI=0 F  S FBI=$O(^TMP("HLS",$J,FBI)) Q:'FBI  D
"RTN","FBFHLX",244,0)
 . S FBL=FBL+1,^TMP($J,"FBHLSEG",FBL)=$G(^TMP("HLS",$J,FBI))
"RTN","FBFHLX",245,0)
 . S FBII=0 F  S FBII=$O(^TMP("HLS",$J,FBI,FBII)) Q:'FBII  D
"RTN","FBFHLX",246,0)
 . . S FBL=FBL+1,^TMP($J,"FBHLSEG",FBL)=$G(^TMP("HLS",$J,FBI,FBII))
"RTN","FBFHLX",247,0)
 . S FBL=FBL+1,^TMP($J,"FBHLSEG",FBL)=""
"RTN","FBFHLX",248,0)
 Q
"RTN","FBFHLX",249,0)
 ;
"RTN","FBFHLX",250,0)
 ;FBFHLX
"RTN","FBFHLX1")
0^2^B30458874^B29142920
"RTN","FBFHLX1",1,0)
FBFHLX1 ;WOIFO/SAB-TRANSMIT HL7 MESSAGES TO FPPS (CON'T) ;9/9/2003
"RTN","FBFHLX1",2,0)
 ;;3.5;FEE BASIS;**61,121**;JULY 18, 2003;Build 4
"RTN","FBFHLX1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBFHLX1",4,0)
 Q
"RTN","FBFHLX1",5,0)
 ;
"RTN","FBFHLX1",6,0)
CHKACK ; check for acknowledgements
"RTN","FBFHLX1",7,0)
 ; input  - none
"RTN","FBFHLX1",8,0)
 ; output
"RTN","FBFHLX1",9,0)
 ;   FBCNT("ACKT") - count of previously transmitted invoices w/o ack
"RTN","FBFHLX1",10,0)
 ;   FBCNT("ACKA") - count of these that were accepted
"RTN","FBFHLX1",11,0)
 ;   FBCNT("ACKR") - count of these that were rejected
"RTN","FBFHLX1",12,0)
 ;   FBCNT("ACKW") - count of these that are still waiting for ack
"RTN","FBFHLX1",13,0)
 ;   ^TMP($J,"FBNA",invoice number)="" - list waiting for ack
"RTN","FBFHLX1",14,0)
 ;   update file 163.5
"RTN","FBFHLX1",15,0)
 N FBAAIN,FBMSGID,FBQDA,FBQY,FBSTATUS,FBX
"RTN","FBFHLX1",16,0)
 ;
"RTN","FBFHLX1",17,0)
 ; initialize
"RTN","FBFHLX1",18,0)
 K ^TMP($J,"FBNA")
"RTN","FBFHLX1",19,0)
 F FBX="ACKA","ACKR","ACKW" S FBCNT(FBX)=0
"RTN","FBFHLX1",20,0)
 ;
"RTN","FBFHLX1",21,0)
 ; loop thru transmitted (not yet acknowledged entries)
"RTN","FBFHLX1",22,0)
 S FBQDA=0  F  S FBQDA=$O(^FBHL(163.5,"AC",1,FBQDA)) Q:'FBQDA  D
"RTN","FBFHLX1",23,0)
 . S FBQY=$G(^FBHL(163.5,FBQDA,0))
"RTN","FBFHLX1",24,0)
 . S FBAAIN=$P(FBQY,U)
"RTN","FBFHLX1",25,0)
 . Q:FBAAIN=""  ; invalid invoice number
"RTN","FBFHLX1",26,0)
 . S FBMSGID=$P(FBQY,U,4)
"RTN","FBFHLX1",27,0)
 . Q:FBMSGID=""
"RTN","FBFHLX1",28,0)
 . ;
"RTN","FBFHLX1",29,0)
 . S FBSTATUS=$$MSGSTAT^HLUTIL(FBMSGID)
"RTN","FBFHLX1",30,0)
 . ;
"RTN","FBFHLX1",31,0)
 . I $P(FBSTATUS,U)=3 D  Q
"RTN","FBFHLX1",32,0)
 . . N FBFDA
"RTN","FBFHLX1",33,0)
 . . S FBFDA(163.5,FBQDA_",",2)="2" ; set status = acknowledged
"RTN","FBFHLX1",34,0)
 . . S FBFDA(163.5,FBQDA_",",8)="A" ; set ACK FLAG = ACCEPTED
"RTN","FBFHLX1",35,0)
 . . S FBFDA(163.5,FBQDA_",",9)=$P(FBSTATUS,U,2) ; set ACK DATE/TIME
"RTN","FBFHLX1",36,0)
 . . I $D(FBFDA) D FILE^DIE("","FBFDA")
"RTN","FBFHLX1",37,0)
 . . S FBCNT("ACKA")=FBCNT("ACKA")+1
"RTN","FBFHLX1",38,0)
 . ;
"RTN","FBFHLX1",39,0)
 . I $P(FBSTATUS,U)=4 D  Q
"RTN","FBFHLX1",40,0)
 . . N FBFDA,FBTXT
"RTN","FBFHLX1",41,0)
 . . S FBFDA(163.5,FBQDA_",",2)="2" ; set status = acknowledged
"RTN","FBFHLX1",42,0)
 . . S FBFDA(163.5,FBQDA_",",8)="R" ; set ACK FLAG = rejected
"RTN","FBFHLX1",43,0)
 . . S FBFDA(163.5,FBQDA_",",9)=$P(FBSTATUS,U,2) ; set ACK DATE/TIME
"RTN","FBFHLX1",44,0)
 . . S FBFDA(163.5,FBQDA_",",10)="N" ; rej status = not reported
"RTN","FBFHLX1",45,0)
 . . I $D(FBFDA) D FILE^DIE("","FBFDA")
"RTN","FBFHLX1",46,0)
 . . S FBTXT(1)=$P(FBSTATUS,U,3)
"RTN","FBFHLX1",47,0)
 . . I FBTXT(1)]"" D WP^DIE(163.5,FBQDA_",",11,"","FBTXT") ; error msg
"RTN","FBFHLX1",48,0)
 . . S FBCNT("ACKR")=FBCNT("ACKR")+1
"RTN","FBFHLX1",49,0)
 . ;
"RTN","FBFHLX1",50,0)
 . ; don't report not acknowledged unless it is last entry for invoice
"RTN","FBFHLX1",51,0)
 . Q:$$LAST^FBFHLU($P(FBQY,U))'=FBQDA
"RTN","FBFHLX1",52,0)
 . ;
"RTN","FBFHLX1",53,0)
 . ; last entry for invoice was not acknowledged yet
"RTN","FBFHLX1",54,0)
 . S ^TMP($J,"FBNA",FBAAIN)=""
"RTN","FBFHLX1",55,0)
 . S FBCNT("ACKW")=FBCNT("ACKW")+1
"RTN","FBFHLX1",56,0)
 ;
"RTN","FBFHLX1",57,0)
 S FBCNT("ACKT")=FBCNT("ACKA")+FBCNT("ACKR")+FBCNT("ACKW")
"RTN","FBFHLX1",58,0)
 ;
"RTN","FBFHLX1",59,0)
 Q
"RTN","FBFHLX1",60,0)
 ;
"RTN","FBFHLX1",61,0)
SUMMSG ; Summary Message (build and send)
"RTN","FBFHLX1",62,0)
 ; input
"RTN","FBFHLX1",63,0)
 ;   ^TMP($J,"FBE",invoice number,seq number)=error text
"RTN","FBFHLX1",64,0)
 ;   ^TMP($J,"FBW",invoice number,seq number)=warning text
"RTN","FBFHLX1",65,0)
 ;   ^TMP($J,"FBNA",invoice number)="" for invoices not acknowledged
"RTN","FBFHLX1",66,0)
 ;   ^TMP($J,"FBX",seq number)=message text so far
"RTN","FBFHLX1",67,0)
 ;   FBXL = last line used in ^TMP($J,"FBX",seq number)
"RTN","FBFHLX1",68,0)
 ;   FBXMIT("START") = start process, FileMan date/time
"RTN","FBFHLX1",69,0)
 ;   FBXMIT("ACK") = start check for acks, FileMan date/time
"RTN","FBFHLX1",70,0)
 ;   FBXMIT("SEND") = start transmit, FileMan date/time
"RTN","FBFHLX1",71,0)
 ;   FBXMIT("END") = end process, FileMan date/time
"RTN","FBFHLX1",72,0)
 ;   FBCNT("PENDT")= count of pending invoices that were transmitted
"RTN","FBFHLX1",73,0)
 ;   FBCNT("PENDE")= count of pending invoices that had exception
"RTN","FBFHLX1",74,0)
 ;   FBCNT("ACKT") = count of previously transmitted invoices w/o ack
"RTN","FBFHLX1",75,0)
 ;   FBCNT("ACKA") = count of these that were accepted
"RTN","FBFHLX1",76,0)
 ;   FBCNT("ACKR") = count of these that were rejected
"RTN","FBFHLX1",77,0)
 ;   FBCNT("ACKW") = count of these that are still waiting for ack
"RTN","FBFHLX1",78,0)
 ; output
"RTN","FBFHLX1",79,0)
 ;   ^TMP($J,"FBX",
"RTN","FBFHLX1",80,0)
 ;   mail message
"RTN","FBFHLX1",81,0)
 ;
"RTN","FBFHLX1",82,0)
 N XMDUZ,XMSUB,XMTEXT,XMY,XMZ
"RTN","FBFHLX1",83,0)
 ;
"RTN","FBFHLX1",84,0)
 ; add header text
"RTN","FBFHLX1",85,0)
 S ^TMP($J,"FBX",1)=$$FMTE^XLFDT(FBXMIT("START"))_"  Process Started."
"RTN","FBFHLX1",86,0)
 S ^TMP($J,"FBX",2)=$$FMTE^XLFDT(FBXMIT("ACK"))_"  Check transmitted messages for acknowledgement..."
"RTN","FBFHLX1",87,0)
 S ^TMP($J,"FBX",3)="                       "_FBCNT("ACKT")_" previously transmitted messages w/o ack."
"RTN","FBFHLX1",88,0)
 S ^TMP($J,"FBX",4)="                       "_FBCNT("ACKA")_" of these were accepted."
"RTN","FBFHLX1",89,0)
 S ^TMP($J,"FBX",5)="                       "_FBCNT("ACKR")_" of these were rejected."
"RTN","FBFHLX1",90,0)
 S ^TMP($J,"FBX",6)="                       "_FBCNT("ACKW")_" of these still waiting for ack."
"RTN","FBFHLX1",91,0)
 S ^TMP($J,"FBX",7)=$$FMTE^XLFDT(FBXMIT("SEND"))_"  Transmit pending invoices..."
"RTN","FBFHLX1",92,0)
 S ^TMP($J,"FBX",8)="                       "_FBCNT("PENDT")_" transmitted."
"RTN","FBFHLX1",93,0)
 S ^TMP($J,"FBX",9)="                       "_FBCNT("PENDE")_" not transmitted due to exception."
"RTN","FBFHLX1",94,0)
 S ^TMP($J,"FBX",10)=$$FMTE^XLFDT(FBXMIT("END"))_"  Process Complete."
"RTN","FBFHLX1",95,0)
 I $D(ZTSTOP) S ^TMP($J,"FBX",11)="  Process (task) stopped due to user request."
"RTN","FBFHLX1",96,0)
 I $D(FBCNT("10K")) S ^TMP($J,"FBX",12)="  Process (task) stopped due reaching 10K message limit."  ;FB*3.5*121
"RTN","FBFHLX1",97,0)
 ;
"RTN","FBFHLX1",98,0)
 ; List Exceptions
"RTN","FBFHLX1",99,0)
 I FBCNT("PENDE")>0 D
"RTN","FBFHLX1",100,0)
 . N FBAAIN,FBL,FBX
"RTN","FBFHLX1",101,0)
 . D PTXT(.FBXL," ")
"RTN","FBFHLX1",102,0)
 . D PTXT(.FBXL,"List of Exceptions during Transmit of Pending Invoices")
"RTN","FBFHLX1",103,0)
 . S FBAAIN="" F  S FBAAIN=$O(^TMP($J,"FBE",FBAAIN)) Q:FBAAIN=""  D
"RTN","FBFHLX1",104,0)
 . . D PTXT(.FBXL,"Invoice: "_FBAAIN)
"RTN","FBFHLX1",105,0)
 . . S FBL=0 F  S FBL=$O(^TMP($J,"FBE",FBAAIN,FBL)) Q:'FBL  D
"RTN","FBFHLX1",106,0)
 . . . S FBX=$G(^TMP($J,"FBE",FBAAIN,FBL))
"RTN","FBFHLX1",107,0)
 . . . I FBX]"" D PTXT(.FBXL,"  "_FBX)
"RTN","FBFHLX1",108,0)
 ;
"RTN","FBFHLX1",109,0)
 ; List Invoices Waiting for Ack
"RTN","FBFHLX1",110,0)
 I FBCNT("ACKW")>0 D
"RTN","FBFHLX1",111,0)
 . N FBAAIN
"RTN","FBFHLX1",112,0)
 . D PTXT(.FBXL," ")
"RTN","FBFHLX1",113,0)
 . D PTXT(.FBXL,"List of Invoices Waiting for Acknowledgement")
"RTN","FBFHLX1",114,0)
 . S FBAAIN="" F  S FBAAIN=$O(^TMP($J,"FBW",FBAAIN)) Q:FBAAIN=""  D
"RTN","FBFHLX1",115,0)
 . . D PTXT(.FBXL,"Invoice: "_FBAAIN)
"RTN","FBFHLX1",116,0)
 ;
"RTN","FBFHLX1",117,0)
 ; Report Rejected Acks
"RTN","FBFHLX1",118,0)
 I $D(^FBHL(163.5,"ARS","N")) D
"RTN","FBFHLX1",119,0)
 . N FBAAIN,FBFDA,FBI,FBQDA,FBTXT,FBWP,FBX
"RTN","FBFHLX1",120,0)
 . D PTXT(.FBXL," ")
"RTN","FBFHLX1",121,0)
 . D PTXT(.FBXL,"List of Rejected Invoices that have not been reported.")
"RTN","FBFHLX1",122,0)
 . S FBQDA=0 F  S FBQDA=$O(^FBHL(163.5,"ARS","N",FBQDA)) Q:'FBQDA  D
"RTN","FBFHLX1",123,0)
 . . S FBQY=$G(^FBHL(163.5,FBQDA,0))
"RTN","FBFHLX1",124,0)
 . . S FBAAIN=$P(FBQY,U)
"RTN","FBFHLX1",125,0)
 . . D PTXT(.FBXL,"Invoice: "_FBAAIN)
"RTN","FBFHLX1",126,0)
 . . ;
"RTN","FBFHLX1",127,0)
 . . K FBWP
"RTN","FBFHLX1",128,0)
 . . S FBX=$$GET1^DIQ(163.5,FBQDA_",",11,"","FBWP")
"RTN","FBFHLX1",129,0)
 . . S FBI=0 F  S FBI=$O(FBWP(FBI)) Q:'FBI  D
"RTN","FBFHLX1",130,0)
 . . . S FBTXT=FBWP(FBI)
"RTN","FBFHLX1",131,0)
 . . . D PTXT(.FBXL,"  "_FBTXT)
"RTN","FBFHLX1",132,0)
 . . ;
"RTN","FBFHLX1",133,0)
 . . K FBFDA
"RTN","FBFHLX1",134,0)
 . . S FBFDA(163,FBQDA_",",10)="R" ; set reject status = reported
"RTN","FBFHLX1",135,0)
 . . I $D(FBFDA) D FILE^DIE("","FBFDA")
"RTN","FBFHLX1",136,0)
 ;
"RTN","FBFHLX1",137,0)
 D PTXT(.FBXL," ")
"RTN","FBFHLX1",138,0)
 D PTXT(.FBXL,"END OF SUMMARY MESSAGE")
"RTN","FBFHLX1",139,0)
 ;
"RTN","FBFHLX1",140,0)
 ; send message
"RTN","FBFHLX1",141,0)
 S XMSUB="FEE BASIS FPPS Transmit "_$$FMTE^XLFDT(FBXMIT("START"),"DF")
"RTN","FBFHLX1",142,0)
 S XMDUZ="FEE BASIS"
"RTN","FBFHLX1",143,0)
 S XMY("G.FEE")=""
"RTN","FBFHLX1",144,0)
 S XMTEXT="^TMP($J,""FBX"","
"RTN","FBFHLX1",145,0)
 D ^XMD
"RTN","FBFHLX1",146,0)
 Q
"RTN","FBFHLX1",147,0)
 ;
"RTN","FBFHLX1",148,0)
PTXT(FBXL,FBTXT) ; Post line of text in global array for summary message
"RTN","FBFHLX1",149,0)
 ; input
"RTN","FBFHLX1",150,0)
 ;   FBXL  - last line number used, passed by reference
"RTN","FBFHLX1",151,0)
 ;   FBTXT - line of text
"RTN","FBFHLX1",152,0)
 ; output
"RTN","FBFHLX1",153,0)
 ;   FBXL -  increments value by 1
"RTN","FBFHLX1",154,0)
 ;   ^TMP($J,"FBX",input line+1)=text
"RTN","FBFHLX1",155,0)
 ;
"RTN","FBFHLX1",156,0)
 S FBXL=FBXL+1
"RTN","FBFHLX1",157,0)
 S ^TMP($J,"FBX",FBXL)=FBTXT
"RTN","FBFHLX1",158,0)
 ;
"RTN","FBFHLX1",159,0)
 Q
"RTN","FBFHLX1",160,0)
 ;
"RTN","FBFHLX1",161,0)
 ;FBFHLX1
"RTN","FBPAID")
0^3^B29740896^B27015212
"RTN","FBPAID",1,0)
FBPAID ;WOIFO/SAB - SERVER ROUTINE TO UPDATE PAYMENTS ;2/10/2009
"RTN","FBPAID",2,0)
 ;;3.5;FEE BASIS;**5,61,107,121**;JAN 30, 1995;Build 4
"RTN","FBPAID",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBPAID",4,0)
 ;incoming record from AAC will contain the following data
"RTN","FBPAID",5,0)
 ;   - Fee Program  - from Fee Basis Program  (161.8)
"RTN","FBPAID",6,0)
 ;   - Activity Code    (C - confirmed)
"RTN","FBPAID",7,0)
 ;                      (B - backout)
"RTN","FBPAID",8,0)
 ;                      (X - cancelled)
"RTN","FBPAID",9,0)
 ;   - Internal Control Number   - IEN of payment record
"RTN","FBPAID",10,0)
 ;   - Check Number
"RTN","FBPAID",11,0)
 ;   - Check Date
"RTN","FBPAID",12,0)
 ;   - Interest Amount
"RTN","FBPAID",13,0)
 ;   - Cancellation Date
"RTN","FBPAID",14,0)
 ;   - Reason Code  (File # 162.95)
"RTN","FBPAID",15,0)
 ;   - Cancellation Code (R - C - X)
"RTN","FBPAID",16,0)
 ;   - Disbursed Amount   (this amount minus interest amount = amt pd)
"RTN","FBPAID",17,0)
 ;   variable 'FBPAID' is defined and passed to TRAP^FBMRASVR2
"RTN","FBPAID",18,0)
 ;
"RTN","FBPAID",19,0)
 N FBINV
"RTN","FBPAID",20,0)
 S U="^",FBPAID=1,FBMCNT=0
"RTN","FBPAID",21,0)
 S X="TRAP^FBMRASV2" S @^%ZOSF("TRAP")
"RTN","FBPAID",22,0)
 ;K XMY S XMY("G.FEE")="" D ENT1^XMD
"RTN","FBPAID",23,0)
 K ^TMP("FBPAID",$J),^TMP("FBERR",$J)
"RTN","FBPAID",24,0)
 D STATION^FBAAUTL I $S($G(FB("ERROR")):1,'$G(FBAASN):1,1:0) Q
"RTN","FBPAID",25,0)
 K FB
"RTN","FBPAID",26,0)
 ;start to read in message from central fee
"RTN","FBPAID",27,0)
 ;edits are:
"RTN","FBPAID",28,0)
 ;          1. invalid station number
"RTN","FBPAID",29,0)
 ;          2. invalid record length
"RTN","FBPAID",30,0)
 ;          3. unable to locate payment record
"RTN","FBPAID",31,0)
 ;          4. disbursed amount '= amt paid+interest
"RTN","FBPAID",32,0)
 ;          5. cancellations
"RTN","FBPAID",33,0)
 ; XMRG=record received in mail message from Austin
"RTN","FBPAID",34,0)
 F I=1:1 X XMREC Q:XMER<0  I XMRG]"",$E(XMRG,1,3)=FBAASN D
"RTN","FBPAID",35,0)
 .S ^TMP("FBREC",$J,I)=XMRG
"RTN","FBPAID",36,0)
 .K FBERR
"RTN","FBPAID",37,0)
 .I $L(XMRG)'=82&($L(XMRG)'=138) S FBERR=1,^TMP("FBERR",$J,2,I)=""
"RTN","FBPAID",38,0)
 .D PARSE^FBPAID1 Q:$G(FBERR)  S FBMCNT=FBMCNT+1 D @FBPROG
"RTN","FBPAID",39,0)
 D ^FBPAID2:$D(^TMP("FBERR",$J))
"RTN","FBPAID",40,0)
 D BUL^FBPAID1
"RTN","FBPAID",41,0)
 ; if any EDI invoices then add to FPPS queue
"RTN","FBPAID",42,0)
 I $D(FBINV) D PAIDLOG^FBFHLL(.FBINV)
"RTN","FBPAID",43,0)
 G END
"RTN","FBPAID",44,0)
 ;
"RTN","FBPAID",45,0)
3 ;update outpatient payment record
"RTN","FBPAID",46,0)
 Q:'$D(^FBAAC(+FBIEN(3),1,+FBIEN(2),1,FBIEN(1),1,FBIEN,0))  S FBAMT=+$P(^(0),U,3) D
"RTN","FBPAID",47,0)
 .I FBDAMT-FBINAMT'=FBAMT,$G(FBACT)="C" S ^TMP("FBERR",$J,4,I)=""_U_FBPROG_U_+FBIEN(3)_U_+FBIEN(2)_U_+FBIEN(1)_U_+FBIEN
"RTN","FBPAID",48,0)
 N JJ F JJ=1:1:3 S DA(JJ)=+FBIEN(JJ)
"RTN","FBPAID",49,0)
 S DA=+FBIEN
"RTN","FBPAID",50,0)
 S DR=""
"RTN","FBPAID",51,0)
 I FBACT="C" S DR="12////^S X=$G(FBCKDT);35///^S X=FBCKNUM;40///^S X=FBDAMT;41///^S X=FBINAMT;36///@;37///@"
"RTN","FBPAID",52,0)
 I  I $G(FBBRTG) S DR=DR_";55///^S X=FBBRTG;56///^S X=FBBACC;57///^S X=FBBNAM" ;HIPAA 5010 P121
"RTN","FBPAID",53,0)
 I FBACT="B" S DR="12///@;35///@;36///@;37///@;40///@;41///@;55///@;56///@;57///@"
"RTN","FBPAID",54,0)
 I FBACT="X" S DR="12///@;40///@;41///@;36////^S X=FBXDT;37////^S X=$G(FBRCOD);38///^S X=FBXCOD;55///@;56///@;57///@" D
"RTN","FBPAID",55,0)
 .I FBXCOD'="R" S ^TMP("FBERR",$J,5,I)=""_U_FBPROG_U_+FBIEN(3)_U_+FBIEN(2)_U_+FBIEN(1)_U_+FBIEN
"RTN","FBPAID",56,0)
 .I FBXCOD="R" S DR=DR_";35///@"
"RTN","FBPAID",57,0)
 S DIE="^FBAAC("_DA(3)_",1,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","FBPAID",58,0)
 D LOCK^FBUCUTL(DIE,DA,1) I FBLOCK D ^DIE L -^FBAAC(DA(3),1,DA(2),1,DA(1),1,DA)
"RTN","FBPAID",59,0)
 ; if EDI then add invoice to list in FBINV(, patch *61
"RTN","FBPAID",60,0)
 I FBACT'="B",$P($G(^FBAAC(DA(3),1,DA(2),1,DA(1),1,DA,3)),U)]"" D
"RTN","FBPAID",61,0)
 . N FBAAIN
"RTN","FBPAID",62,0)
 . S FBAAIN=$P($G(^FBAAC(DA(3),1,DA(2),1,DA(1),1,DA,0)),U,16)
"RTN","FBPAID",63,0)
 . I FBAAIN]"" S FBINV(3,FBAAIN)=""
"RTN","FBPAID",64,0)
 D KILL
"RTN","FBPAID",65,0)
 Q
"RTN","FBPAID",66,0)
 ;
"RTN","FBPAID",67,0)
5 ;update pharmacy payment record
"RTN","FBPAID",68,0)
 Q:'$D(^FBAA(162.1,+FBIEN(1),"RX",+FBIEN,0))  S FBAMT=+$P(^(0),U,16) D
"RTN","FBPAID",69,0)
 . I FBDAMT-FBINAMT'=FBAMT,$G(FBACT)="C" S ^TMP("FBERR",$J,4,I)=""_U_FBPROG_U_+FBIEN(1)_U_+FBIEN
"RTN","FBPAID",70,0)
 S DA(1)=+FBIEN(1),DA=+FBIEN
"RTN","FBPAID",71,0)
 S DR=""
"RTN","FBPAID",72,0)
 I FBACT="C" S DR="28////^S X=FBCKDT;30///^S X=FBCKNUM;34///^S X=FBDAMT;35///^S X=FBINAMT;31///@;32///@"
"RTN","FBPAID",73,0)
 I FBACT="B" S DR="28///@;30///@;31///@;32///@;34///@;35///@"
"RTN","FBPAID",74,0)
 I FBACT="X" S DR="28///@;34///@;35///@;31////^S X=FBXDT;32////^S X=$G(FBRCOD);33///^S X=FBXCOD" D
"RTN","FBPAID",75,0)
 .I FBXCOD'="R" S ^TMP("FBERR",$J,5,I)=""_U_FBPROG_U_+FBIEN(1)_U_+FBIEN
"RTN","FBPAID",76,0)
 .I FBXCOD="R" S DR=DR_";30///@"
"RTN","FBPAID",77,0)
 S DIE="^FBAA(162.1,"_DA(1)_",""RX"","
"RTN","FBPAID",78,0)
 D LOCK^FBUCUTL(DIE,DA,1) I FBLOCK D ^DIE L -^FBAA(162.1,DA(1),"RX",DA)
"RTN","FBPAID",79,0)
 ; if EDI then add invoice to list in FBINV(, patch *61
"RTN","FBPAID",80,0)
 I FBACT'="B",$P($G(^FBAA(162.1,DA(1),0)),U,13)]"" D
"RTN","FBPAID",81,0)
 . N FBAAIN
"RTN","FBPAID",82,0)
 . S FBAAIN=$P($G(^FBAA(162.1,DA(1),0)),U)
"RTN","FBPAID",83,0)
 . I FBAAIN]"" S FBINV(5,FBAAIN)=""
"RTN","FBPAID",84,0)
 D KILL
"RTN","FBPAID",85,0)
 Q
"RTN","FBPAID",86,0)
 ;
"RTN","FBPAID",87,0)
9 ;update inpatient payment record
"RTN","FBPAID",88,0)
 Q:'$D(^FBAAI(+FBIEN,0))  S FBAMT=+$P(^(0),U,9) D
"RTN","FBPAID",89,0)
 .I FBDAMT-FBINAMT'=FBAMT,$G(FBACT)="C" S ^TMP("FBERR",$J,4,I)=""_U_FBPROG_U_+FBIEN
"RTN","FBPAID",90,0)
 S DA=+FBIEN
"RTN","FBPAID",91,0)
 S DR=""
"RTN","FBPAID",92,0)
 I FBACT="C" S DR="45////^S X=FBCKDT;48///^S X=FBCKNUM;52///^S X=FBDAMT;53///^S X=FBINAMT;49///@;50///@"
"RTN","FBPAID",93,0)
 I  I $G(FBBRTG) S DR=DR_";61///^S X=FBBRTG;62///^S X=FBBACC;63///^S X=FBBNAM" ;HIPAA 5010 P121
"RTN","FBPAID",94,0)
 I FBACT="B" S DR="45///@;48///@;49///@;50///@;52///@;53///@;61///@;62///@;63///@"
"RTN","FBPAID",95,0)
 I FBACT="X" S DR="45///@;52///@;53///@;49////^S X=FBXDT;50////^S X=$G(FBRCOD);51///^S X=FBXCOD;61///@;62///@;63///@" D
"RTN","FBPAID",96,0)
 .I FBXCOD'="R" S ^TMP("FBERR",$J,5,I)=""_U_FBPROG_U_+FBIEN
"RTN","FBPAID",97,0)
 .I FBXCOD="R" S DR=DR_";48///@"
"RTN","FBPAID",98,0)
 S DIE="^FBAAI("
"RTN","FBPAID",99,0)
 D LOCK^FBUCUTL(DIE,DA,1) I FBLOCK D ^DIE L -^FBAAI(DA)
"RTN","FBPAID",100,0)
 ; if EDI then add invoice to list in FBINV(, patch *61
"RTN","FBPAID",101,0)
 I FBACT'="B",$P($G(^FBAAI(DA,3)),U)]"" D
"RTN","FBPAID",102,0)
 . N FBAAIN
"RTN","FBPAID",103,0)
 . S FBAAIN=$P($G(^FBAAI(DA,0)),U)
"RTN","FBPAID",104,0)
 . I FBAAIN]"" S FBINV(9,FBAAIN)=""
"RTN","FBPAID",105,0)
 D KILL
"RTN","FBPAID",106,0)
 Q
"RTN","FBPAID",107,0)
 ;
"RTN","FBPAID",108,0)
T ;update travel payment record
"RTN","FBPAID",109,0)
 Q:'$D(^FBAAC(+FBIEN(1),3,+FBIEN,0))  S FBAMT=+$P(^(0),U,3) D
"RTN","FBPAID",110,0)
 . I FBDAMT-FBINAMT'=FBAMT,$G(FBACT)="C" S ^TMP("FBERR",$J,4,I)=""_U_FBPROG_U_+FBIEN(1)_U_+FBIEN
"RTN","FBPAID",111,0)
 S DA(1)=+FBIEN(1),DA=+FBIEN
"RTN","FBPAID",112,0)
 S DR=""
"RTN","FBPAID",113,0)
 I FBACT="C" S DR="8////^S X=FBCKDT;9///^S X=FBCKNUM;13///^S X=FBDAMT;14///^S X=FBINAMT;10///@;11///@"
"RTN","FBPAID",114,0)
 I FBACT="B" S DR="8///@;9///@;10///@;11///@;13///@;14///@"
"RTN","FBPAID",115,0)
 I FBACT="X" S DR="8///@;13///@;14///@;10////^S X=FBXDT;11////^S X=$G(FBRCOD);12///^S X=FBXCOD" D
"RTN","FBPAID",116,0)
 .I FBXCOD'="R" S ^TMP("FBERR",$J,5,I)=""_U_FBPROG_U_+FBIEN(1)_U_+FBIEN
"RTN","FBPAID",117,0)
 .I FBXCOD="R" S DR=DR_";9///@"
"RTN","FBPAID",118,0)
 S DIE="^FBAAC("_+FBIEN(1)_",3,"
"RTN","FBPAID",119,0)
 D LOCK^FBUCUTL(DIE,DA,1) I FBLOCK D ^DIE L -^FBAAC(DA(1),3,DA)
"RTN","FBPAID",120,0)
 D KILL
"RTN","FBPAID",121,0)
 Q
"RTN","FBPAID",122,0)
 ;
"RTN","FBPAID",123,0)
END ;clean and exit
"RTN","FBPAID",124,0)
 N XMSER,XMZ S XMSER="S."_XQSOP,XMZ=XQMSG D REMSBMSG^XMA1C
"RTN","FBPAID",125,0)
 K FB,FBPAID,FBSITE,FBAASN,FBSN,FBMCNT,I,XMER,XMREC,XMRG,XMY,^TMP("FBERR",$J),^TMP("FBPAID",$J),^TMP("FBREC",$J),X
"RTN","FBPAID",126,0)
KILL K FBLOCK,DIE,DA,DR,FBIEN,FBACT,FBCKNUM,FBRCOD,FBPROG,FBCKDT,FBXDT,FBXCOD,FBINAMT,FBDAMT,FBAMT,FBERR,FBBRTG,FBBACC,FBBNAM
"RTN","FBPAID",127,0)
 Q
"RTN","FBPAID1")
0^4^B14897492^B16159022
"RTN","FBPAID1",1,0)
FBPAID1 ;WOIFO/SAB - SERVER ROUTINE TO UPDATE PAYMENTS CON'T ;2/10/2009
"RTN","FBPAID1",2,0)
 ;;3.5;FEE BASIS;**19,107,121**;JAN 30, 1995;Build 4
"RTN","FBPAID1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBPAID1",4,0)
PARSE ;set-up variables for payment record called from FBPAID
"RTN","FBPAID1",5,0)
 ;  FBPROG = 3 for Outpatient (file 162)
"RTN","FBPAID1",6,0)
 ;         = T for Travel (file 162)
"RTN","FBPAID1",7,0)
 ;         = 5 for Pharmacy (file 162.1)
"RTN","FBPAID1",8,0)
 ;         = 9 for Inpatient (file 162.5)
"RTN","FBPAID1",9,0)
 ;         = $E(XMRG,7)      fee program and effected file
"RTN","FBPAID1",10,0)
 ;  FBACT  = $E(XMRG,8)      type of activity                
"RTN","FBPAID1",11,0)
 ;  FBIEN(x)=$E(XMRG,9,38)   IEN for payment record to update
"RTN","FBPAID1",12,0)
 ;  FBCKNUM= $E(XMRG,39,46)  check number
"RTN","FBPAID1",13,0)
 ;  old format (when total length = 77)
"RTN","FBPAID1",14,0)
 ;  FBCKDT = $E(XMRG,47,52)  check date
"RTN","FBPAID1",15,0)
 ;  FBINAMT= $E(XMRG,53,60)  interest amount
"RTN","FBPAID1",16,0)
 ;  FBXDT  = $E(XMRG,61,66)  cancel date
"RTN","FBPAID1",17,0)
 ;  FBRCOD = $E(XMRG,67)     reason code
"RTN","FBPAID1",18,0)
 ;  FBXCOD = $E(XMRG,68)     cancel code
"RTN","FBPAID1",19,0)
 ;  FBDAMT = $E(XMRG,69,76)  disbursed amount
"RTN","FBPAID1",20,0)
 ;  new format (when total length = 82)
"RTN","FBPAID1",21,0)
 ;  FBCKDT = $E(XMRG,47,54)  check date
"RTN","FBPAID1",22,0)
 ;  FBINAMT= $E(XMRG,55,62)  interest amount
"RTN","FBPAID1",23,0)
 ;  FBXDT  = $E(XMRG,63,70)  cancel date
"RTN","FBPAID1",24,0)
 ;  FBRCOD = $E(XMRG,71)     reason code
"RTN","FBPAID1",25,0)
 ;  FBXCOD = $E(XMRG,72)     cancel code
"RTN","FBPAID1",26,0)
 ;  FBDAMT = $E(XMRG,73,81)  disbursed amount
"RTN","FBPAID1",27,0)
 ;  FBBRTG = $E(XMRG,82,90)  bank routing number ;HIPAA 5010 P121
"RTN","FBPAID1",28,0)
 ;  FBBACC = $E(XMRG,91,107) bank account number ;HIPAA 5010 P121
"RTN","FBPAID1",29,0)
 ;  FBBNAM = $E(XMRG,108,138)bank name           ;HIPAA 5010 P121
"RTN","FBPAID1",30,0)
 ;  FBAMT  = Amount paid out of payment record
"RTN","FBPAID1",31,0)
 Q:$G(FBERR)
"RTN","FBPAID1",32,0)
 S FBPROG=$E(XMRG,7) I $S(FBPROG=3:0,FBPROG=5:0,FBPROG=9:0,FBPROG="T":0,1:1) S FBERR=1 Q
"RTN","FBPAID1",33,0)
 S FBACT=$E(XMRG,8) I $S(FBACT="C":0,FBACT="B":0,FBACT="X":0,1:1) S FBERR=1 Q
"RTN","FBPAID1",34,0)
 S FBIEN=$E(XMRG,9,38) D  Q:$G(FBERR)
"RTN","FBPAID1",35,0)
 . I FBPROG=3 D  Q:$G(FBERR)
"RTN","FBPAID1",36,0)
 ..S FBIEN(3)=+$P(FBIEN,U),FBIEN(2)=+$P(FBIEN,U,2),FBIEN(1)=+$P(FBIEN,U,3),FBIEN=+$P(FBIEN,U,4)
"RTN","FBPAID1",37,0)
 ..I '$D(^FBAAC(FBIEN(3),1,FBIEN(2),1,FBIEN(1),1,FBIEN,0)) D CHKMOVE
"RTN","FBPAID1",38,0)
 ..I '$D(^FBAAC(FBIEN(3),1,FBIEN(2),1,FBIEN(1),1,FBIEN,0)) S FBERR=1,^TMP("FBERR",$J,3,I)=""
"RTN","FBPAID1",39,0)
 . ;
"RTN","FBPAID1",40,0)
 . I FBPROG=5 D  Q:$G(FBERR)
"RTN","FBPAID1",41,0)
 ..S FBIEN(1)=+$P(FBIEN,U),FBIEN=+$P(FBIEN,U,2)
"RTN","FBPAID1",42,0)
 ..I '$D(^FBAA(162.1,FBIEN(1),"RX",FBIEN,0)) S FBERR=1,^TMP("FBERR",$J,3,I)=""
"RTN","FBPAID1",43,0)
 . ;
"RTN","FBPAID1",44,0)
 . I FBPROG=9 D  Q:$G(FBERR)
"RTN","FBPAID1",45,0)
 ..S FBIEN=+FBIEN I '$D(^FBAAI(FBIEN,0)) S FBERR=1,^TMP("FBERR",$J,3,I)=""
"RTN","FBPAID1",46,0)
 . ;
"RTN","FBPAID1",47,0)
 . I FBPROG="T" D  Q:$G(FBERR)
"RTN","FBPAID1",48,0)
 ..S FBIEN(1)=+$P(FBIEN,U),FBIEN=+$P(FBIEN,U,2)
"RTN","FBPAID1",49,0)
 ..I '$D(^FBAAC(FBIEN(1),3,FBIEN,0)) D CHKMOVE
"RTN","FBPAID1",50,0)
 ..I '$D(^FBAAC(FBIEN(1),3,FBIEN,0)) S FBERR=1,^TMP("FBERR",$J,3,I)=""
"RTN","FBPAID1",51,0)
 S FBCKNUM=$$EXTRL^FBMRASVR($E(XMRG,39,46),1)
"RTN","FBPAID1",52,0)
 S FBCKDT=$$DATE4^FBPAID1($E(XMRG,47,54))
"RTN","FBPAID1",53,0)
 S FBINAMT=$S(+$E(XMRG,55,62):+$E(XMRG,55,60)_"."_$E(XMRG,61,62),1:0)
"RTN","FBPAID1",54,0)
 S FBINAMT=$S(FBINAMT=0:0,$P(FBINAMT,".",2)'>0:$P(FBINAMT,"."),1:+FBINAMT)
"RTN","FBPAID1",55,0)
 S FBXDT=$$DATE4^FBPAID1($E(XMRG,63,70))
"RTN","FBPAID1",56,0)
 S FBRCOD=$E(XMRG,71),FBXCOD=$E(XMRG,72)
"RTN","FBPAID1",57,0)
 S FBRCOD=$O(^FB(162.95,"C",FBRCOD,0))
"RTN","FBPAID1",58,0)
 S FBDAMT=$S(+$E(XMRG,73,81):+$E(XMRG,73,79)_"."_$E(XMRG,80,81),1:0)
"RTN","FBPAID1",59,0)
 S FBDAMT=$S(FBDAMT=0:0,$P(FBDAMT,".",2)'>0:$P(FBDAMT,"."),1:+FBDAMT)
"RTN","FBPAID1",60,0)
 I $L(XMRG)=138 D  ; process new format with bank fields HIPAA 5010 P121
"RTN","FBPAID1",61,0)
 . S FBBRTG=$$TRIM^XLFSTR($E(XMRG,82,90),"LR") ;bank routing number
"RTN","FBPAID1",62,0)
 . S FBBACC=$$TRIM^XLFSTR($E(XMRG,91,107),"LR") ;bank account number
"RTN","FBPAID1",63,0)
 . S FBBNAM=$$TRIM^XLFSTR($E(XMRG,108,137),"LR") ;bank name
"RTN","FBPAID1",64,0)
 Q
"RTN","FBPAID1",65,0)
 ;
"RTN","FBPAID1",66,0)
BUL ;create server bulletin message
"RTN","FBPAID1",67,0)
 S ^TMP("FBPAID",$J,0)=FBMCNT
"RTN","FBPAID1",68,0)
 Q
"RTN","FBPAID1",69,0)
DATE(X) ;pass in 'X'=date in yymmdd format and return date in
"RTN","FBPAID1",70,0)
 ;fileman format.
"RTN","FBPAID1",71,0)
 N Y I '$G(X) Q ""
"RTN","FBPAID1",72,0)
 S %DT="",X=$E(X,3,7)_$E(X,1,2) D ^%DT K %DT
"RTN","FBPAID1",73,0)
 Q $S(Y=-1:"",1:Y)
"RTN","FBPAID1",74,0)
DATE4(X) ;pass in 'X'=date in yyyymmdd format and return date in
"RTN","FBPAID1",75,0)
 ;fileman format.
"RTN","FBPAID1",76,0)
 N Y I '$G(X) Q ""
"RTN","FBPAID1",77,0)
 S %DT="",X=$E(X,5,6)_"/"_$E(X,7,8)_"/"_$E(X,1,4) D ^%DT K %DT
"RTN","FBPAID1",78,0)
 Q $S(Y=-1:"",1:Y)
"RTN","FBPAID1",79,0)
CHKMOVE ;check if payment moved
"RTN","FBPAID1",80,0)
 ; input
"RTN","FBPAID1",81,0)
 ;   FBPROG - fee program
"RTN","FBPAID1",82,0)
 ;   FBIEN - ien of payment (from austin)
"RTN","FBPAID1",83,0)
 ;   FBIEN() - ien(s) of higher level entries (1 for next higher, etc.)
"RTN","FBPAID1",84,0)
 ; output
"RTN","FBPAID1",85,0)
 ;   FBIEN   may be changed
"RTN","FBPAID1",86,0)
 ;   FBIEN() may be changed
"RTN","FBPAID1",87,0)
 N FBDA,FBFILE,FBNIENS,FBOIENS
"RTN","FBPAID1",88,0)
 S FBFILE=$S(FBPROG=3:162.03,FBPROG="T":162.04,1:"")
"RTN","FBPAID1",89,0)
 Q:FBFILE=""
"RTN","FBPAID1",90,0)
 I FBPROG=3 D
"RTN","FBPAID1",91,0)
 . S FBOIENS=FBIEN_","_FBIEN(1)_","_FBIEN(2)_","_FBIEN(3)_","
"RTN","FBPAID1",92,0)
 . S FBDA=$O(^FBAA(161.45,"C",FBFILE,FBOIENS,0))
"RTN","FBPAID1",93,0)
 . Q:'FBDA  ; not moved
"RTN","FBPAID1",94,0)
 . S FBNIENS=$P($G(^FBAA(161.45,FBDA,0)),U,3)
"RTN","FBPAID1",95,0)
 . Q:FBNIENS=""  ; don't know new iens
"RTN","FBPAID1",96,0)
 . S FBIEN=$P(FBNIENS,",",1)
"RTN","FBPAID1",97,0)
 . S FBIEN(1)=$P(FBNIENS,",",2)
"RTN","FBPAID1",98,0)
 . S FBIEN(2)=$P(FBNIENS,",",3)
"RTN","FBPAID1",99,0)
 . S FBIEN(3)=$P(FBNIENS,",",4)
"RTN","FBPAID1",100,0)
 I FBPROG="T" D
"RTN","FBPAID1",101,0)
 . S FBOIENS=FBIEN_","_FBIEN(1)_","
"RTN","FBPAID1",102,0)
 . S FBDA=$O(^FBAA(161.45,"C",FBFILE,FBOIENS,0))
"RTN","FBPAID1",103,0)
 . Q:'FBDA  ; not moved
"RTN","FBPAID1",104,0)
 . S FBNIENS=$P($G(^FBAA(161.45,FBDA,0)),U,3)
"RTN","FBPAID1",105,0)
 . Q:FBNIENS=""  ; don't known new iens
"RTN","FBPAID1",106,0)
 . S FBIEN=$P(FBNIENS,",",1)
"RTN","FBPAID1",107,0)
 . S FBIEN(1)=$P(FBNIENS,",",2)
"RTN","FBPAID1",108,0)
 Q
"RTN","FBXIP121")
0^5^B655280^n/a
"RTN","FBXIP121",1,0)
FBXIP121 ;DSS/LJF - PATCH INSTALL ROUTINE;APR 04, 2011
"RTN","FBXIP121",2,0)
 ;;3.5;FEE BASIS;**121**;APR 04, 2011;Build 4
"RTN","FBXIP121",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBXIP121",4,0)
 Q
"RTN","FBXIP121",5,0)
REMKEY ; Remove Key from FB FPPS TRANSMIT option.
"RTN","FBXIP121",6,0)
 N FB5010,KEYNM,OPID
"RTN","FBXIP121",7,0)
 S OPID=$O(^DIC(19,"B","FB FPPS TRANSMIT",0)) I 'OPID Q
"RTN","FBXIP121",8,0)
 S KEYNM=$$GET1^DIQ(19,+OPID_",",3,"I") I KEYNM'="FBAASUPERVISOR" Q
"RTN","FBXIP121",9,0)
 S FB5010(19,+OPID_",",3)="" D UPDATE^DIE("","FB5010")
"RTN","FBXIP121",10,0)
 Q
"UP",162,162.02,-2)
162^1
"UP",162,162.02,-1)
162.01^1
"UP",162,162.02,0)
162.02
"UP",162,162.03,-3)
162^1
"UP",162,162.03,-2)
162.01^1
"UP",162,162.03,-1)
162.02^1
"UP",162,162.03,0)
162.03
"VER")
8.0^22.0
"^DD",161.2,161.2,42,0)
TAXONOMY CODE^F^^3;3^K:$L(X)>10!($L(X)<10) X
"^DD",161.2,161.2,42,3)
Answer must be 10 characters in length.
"^DD",161.2,161.2,42,21,0)
^^1^1^3110422^
"^DD",161.2,161.2,42,21,1,0)
Enter the Vendor's Taxonomy code. This value must be 10 characters.
"^DD",161.2,161.2,42,"DT")
3110422
"^DD",161.4,161.4,36,0)
FPPS TRANSMIT START^D^^2;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",161.4,161.4,36,3)
Please enter a Date & Time including seconds.
"^DD",161.4,161.4,36,21,0)
^.001^3^3^3110517^^
"^DD",161.4,161.4,36,21,1,0)
Enter the start date and time for the beginning of the FB FPPS TRANSMIT 
"^DD",161.4,161.4,36,21,2,0)
menu option. This value will be auto-populated by the menu option to help 
"^DD",161.4,161.4,36,21,3,0)
track when the last time a batch was started.
"^DD",161.4,161.4,36,"DT")
3110422
"^DD",161.4,161.4,37,0)
FPPS TRANSMIT END^D^^2;2^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",161.4,161.4,37,.1)
[A
"^DD",161.4,161.4,37,3)
Please enter a Date & Time including seconds.
"^DD",161.4,161.4,37,21,0)
^.001^3^3^3110517^^
"^DD",161.4,161.4,37,21,1,0)
Enter the finish date and time for the FB FPPS TRANSMIT menu option. This 
"^DD",161.4,161.4,37,21,2,0)
value will be auto-populated by the menu option to help track when the 
"^DD",161.4,161.4,37,21,3,0)
last time a batch finished.
"^DD",161.4,161.4,37,"DT")
3110517
"^DD",162,162.02,58,0)
ATTENDING PROV NAME^F^^2;1^K:$L(X)>30!($L(X)<1) X
"^DD",162,162.02,58,3)
Answer must be 1-30 characters in length.
"^DD",162,162.02,58,21,0)
^^1^1^3110422^
"^DD",162,162.02,58,21,1,0)
Enter the Attending Provider's name found in the claim information.
"^DD",162,162.02,58,"DT")
3110422
"^DD",162,162.02,59,0)
ATTENDING PROV NPI^F^^2;2^K:$L(X)>10!($L(X)<10) X
"^DD",162,162.02,59,3)
Answer must be 10 characters in length.
"^DD",162,162.02,59,21,0)
^^3^3^3110422^
"^DD",162,162.02,59,21,1,0)
Enter the Attending Provider's National Provider Identifier (NPI) found 
"^DD",162,162.02,59,21,2,0)
in the claim information. This value must be 10 characters, including any 
"^DD",162,162.02,59,21,3,0)
leading zeros.
"^DD",162,162.02,59,"DT")
3110422
"^DD",162,162.02,60,0)
ATTENDING PROV TAXONOMY CODE^F^^2;3^K:$L(X)>10!($L(X)<10) X
"^DD",162,162.02,60,3)
Answer must be 10 characters in length.
"^DD",162,162.02,60,21,0)
^^3^3^3110422^
"^DD",162,162.02,60,21,1,0)
Enter the Attending Provider's Taxonomy code found in the claim 
"^DD",162,162.02,60,21,2,0)
information. This value must be 10 characters, including any leading 
"^DD",162,162.02,60,21,3,0)
zeros.
"^DD",162,162.02,60,"DT")
3110422
"^DD",162,162.02,61,0)
OPERATING PROV NAME^F^^2;4^K:$L(X)>30!($L(X)<1) X
"^DD",162,162.02,61,3)
Answer must be 1-30 characters in length.
"^DD",162,162.02,61,21,0)
^^1^1^3110422^
"^DD",162,162.02,61,21,1,0)
Enter the Operating Provider's name found in the claim information.
"^DD",162,162.02,61,"DT")
3110422
"^DD",162,162.02,62,0)
OPERATING PROV NPI^F^^2;5^K:$L(X)>10!($L(X)<10) X
"^DD",162,162.02,62,3)
Answer must be 10 characters in length.
"^DD",162,162.02,62,21,0)
^^3^3^3110422^
"^DD",162,162.02,62,21,1,0)
Enter the Operating Provider's National Provider Identifier (NPI) found 
"^DD",162,162.02,62,21,2,0)
in the claim information. This value must be 10 characters, including any 
"^DD",162,162.02,62,21,3,0)
leading zeros.
"^DD",162,162.02,62,"DT")
3110422
"^DD",162,162.02,63,0)
RENDERING PROV NAME^F^^2;6^K:$L(X)>30!($L(X)<1) X
"^DD",162,162.02,63,3)
Answer must be 1-30 characters in length.
"^DD",162,162.02,63,21,0)
^^1^1^3110422^
"^DD",162,162.02,63,21,1,0)
Enter the Rendering Provider's name found in the claim information.
"^DD",162,162.02,63,"DT")
3110422
"^DD",162,162.02,64,0)
RENDERING PROV NPI^F^^2;7^K:$L(X)>10!($L(X)<10) X
"^DD",162,162.02,64,3)
Answer must be 10 characters in length.
"^DD",162,162.02,64,21,0)
^^3^3^3110422^
"^DD",162,162.02,64,21,1,0)
Enter the Rendering Provider's National Provider Identifier (NPI) found 
"^DD",162,162.02,64,21,2,0)
in the claim information. This value must be 10 characters, including any 
"^DD",162,162.02,64,21,3,0)
leading zeros.
"^DD",162,162.02,64,"DT")
3110422
"^DD",162,162.02,65,0)
RENDERING PROV TAXONOMY CODE^F^^2;8^K:$L(X)>10!($L(X)<10) X
"^DD",162,162.02,65,3)
Answer must be 10 characters in length.
"^DD",162,162.02,65,21,0)
^^3^3^3110422^
"^DD",162,162.02,65,21,1,0)
Enter the Rendering Provider's Taxonomy code found in the claim 
"^DD",162,162.02,65,21,2,0)
information. This value must be 10 characters, including any leading 
"^DD",162,162.02,65,21,3,0)
zeros.
"^DD",162,162.02,65,"DT")
3110422
"^DD",162,162.02,66,0)
SERVICING PROV NAME^F^^2;9^K:$L(X)>30!($L(X)<1) X
"^DD",162,162.02,66,3)
Answer must be 1-30 characters in length.
"^DD",162,162.02,66,21,0)
^^1^1^3110422^
"^DD",162,162.02,66,21,1,0)
Enter the Servicing Provider's name found in the claim information.
"^DD",162,162.02,66,"DT")
3110422
"^DD",162,162.02,67,0)
SERVICING PROV NPI^F^^2;10^K:$L(X)>10!($L(X)<10) X
"^DD",162,162.02,67,3)
Answer must be 10 characters in length.
"^DD",162,162.02,67,21,0)
^^3^3^3110422^
"^DD",162,162.02,67,21,1,0)
Enter the Servicing Provider's National Provider Identifier (NPI) found 
"^DD",162,162.02,67,21,2,0)
in the claim information. This value must be 10 characters, including any 
"^DD",162,162.02,67,21,3,0)
leading zeros.
"^DD",162,162.02,67,"DT")
3110422
"^DD",162,162.02,68,0)
REFERRING PROV NAME^F^^2;11^K:$L(X)>30!($L(X)<1) X
"^DD",162,162.02,68,3)
Answer must be 1-30 characters in length.
"^DD",162,162.02,68,21,0)
^^1^1^3110422^
"^DD",162,162.02,68,21,1,0)
Enter the Referring Provider's name found in the claim information.
"^DD",162,162.02,68,"DT")
3110422
"^DD",162,162.02,69,0)
REFERRING PROV NPI^F^^2;12^K:$L(X)>10!($L(X)<10) X
"^DD",162,162.02,69,3)
Answer must be 10 characters in length.
"^DD",162,162.02,69,21,0)
^^3^3^3110422^
"^DD",162,162.02,69,21,1,0)
Enter the Referring Provider's National Provider Identifier (NPI) found 
"^DD",162,162.02,69,21,2,0)
in the claim information. This value must be 10 characters, including any 
"^DD",162,162.02,69,21,3,0)
leading zeros.
"^DD",162,162.02,69,"DT")
3110422
"^DD",162,162.03,55,0)
ROUTING NUMBER^F^^2;17^K:$L(X)>9!($L(X)<9) X
"^DD",162,162.03,55,3)
Answer must be 9 characters in length.
"^DD",162,162.03,55,21,0)
^^6^6^3110513^
"^DD",162,162.03,55,21,1,0)
Enter the financial routing number information that was returned with 
"^DD",162,162.03,55,21,2,0)
the payment from Central Fee for Electronic Fund Transfer (EFT) 
"^DD",162,162.03,55,21,3,0)
entries. This information will be forwarded to FPPS so that the vendor can
"^DD",162,162.03,55,21,4,0)
be notified of the payment. This field must be 9 characters, including any
"^DD",162,162.03,55,21,5,0)
leading zeros. Note: The Central Fee nightly update will automatically set
"^DD",162,162.03,55,21,6,0)
this field if the data is included in their message.
"^DD",162,162.03,55,"DT")
3110513
"^DD",162,162.03,56,0)
ACCOUNT NUMBER^F^^2;18^K:$L(X)>17!($L(X)<1) X
"^DD",162,162.03,56,3)
Answer must be 1-17 characters in length.
"^DD",162,162.03,56,21,0)
^^6^6^3110513^
"^DD",162,162.03,56,21,1,0)
Enter the financial account number information that was returned with 
"^DD",162,162.03,56,21,2,0)
the payment from Central Fee for Electronic Fund Transfer (EFT) 
"^DD",162,162.03,56,21,3,0)
entries. This information will be forwarded to FPPS so that the vendor can
"^DD",162,162.03,56,21,4,0)
be notified of the payment. This field must be 1-17 characters, including
"^DD",162,162.03,56,21,5,0)
any leading zeros.  Note: The Central Fee nightly update will 
"^DD",162,162.03,56,21,6,0)
automatically set this field if the data is included in their message.
"^DD",162,162.03,56,"DT")
3110513
"^DD",162,162.03,57,0)
FINANCIAL INSTITUTION^F^^2;19^K:$L(X)>30!($L(X)<1) X
"^DD",162,162.03,57,3)
Answer must be 1-30 characters in length.
"^DD",162,162.03,57,21,0)
^^5^5^3110513^
"^DD",162,162.03,57,21,1,0)
Enter the financial institution name that was returned with the payment
"^DD",162,162.03,57,21,2,0)
from Central Fee for Electronic Fund Transfer (EFT) entries. This
"^DD",162,162.03,57,21,3,0)
information will be forwarded to FPPS so that the vendor can be notified
"^DD",162,162.03,57,21,4,0)
of the payment. Note: The Central Fee nightly update will automatically
"^DD",162,162.03,57,21,5,0)
set this field if the data is included in their message.
"^DD",162,162.03,57,"DT")
3110513
"^DD",162,162.03,73,0)
LI RENDERING PROV NAME^F^^3;3^K:$L(X)>30!($L(X)<1) X
"^DD",162,162.03,73,3)
Answer must be 1-30 characters in length.
"^DD",162,162.03,73,21,0)
^^4^4^3110425^
"^DD",162,162.03,73,21,1,0)
Enter the associated line item Rendering Provider's name found in the 
"^DD",162,162.03,73,21,2,0)
line item level claim information. Note: This field is only necessary if 
"^DD",162,162.03,73,21,3,0)
the line item Rendering Provider is different than the claim Rendering 
"^DD",162,162.03,73,21,4,0)
Provider.
"^DD",162,162.03,73,"DT")
3110517
"^DD",162,162.03,74,0)
LI RENDERING PROV NPI^F^^3;4^K:$L(X)>10!($L(X)<10) X
"^DD",162,162.03,74,3)
Answer must be 10 characters in length.
"^DD",162,162.03,74,21,0)
^^6^6^3110425^
"^DD",162,162.03,74,21,1,0)
Enter the associated line item Rendering Provider's name found in the 
"^DD",162,162.03,74,21,2,0)
line item level claim information. This value must be 10 characters, 
"^DD",162,162.03,74,21,3,0)
including any leading zeros.
"^DD",162,162.03,74,21,4,0)
 
"^DD",162,162.03,74,21,5,0)
Note: This field is only necessary if the line item Rendering Provider is
"^DD",162,162.03,74,21,6,0)
different than the claim Rendering Provider.
"^DD",162,162.03,74,"DT")
3110425
"^DD",162,162.03,75,0)
LI RENDERING PROV TAXONOMY^F^^3;5^K:$L(X)>10!($L(X)<10) X
"^DD",162,162.03,75,3)
Answer must be 10 characters in length.
"^DD",162,162.03,75,21,0)
^^6^6^3110425^
"^DD",162,162.03,75,21,1,0)
Enter the associated line item Rendering Provider's Taxonomy code found 
"^DD",162,162.03,75,21,2,0)
in the line item level of the claim information. This value must be 10 
"^DD",162,162.03,75,21,3,0)
characters, including any leading zeros.
"^DD",162,162.03,75,21,4,0)
 
"^DD",162,162.03,75,21,5,0)
Note: This field is only necessary if the line item Rendering Provider is
"^DD",162,162.03,75,21,6,0)
different than the claim Rendering Provider.
"^DD",162,162.03,75,"DT")
3110425
"^DD",162.5,162.5,0)
FIELD^^79^73
"^DD",162.5,162.5,0,"DT")
3110517
"^DD",162.5,162.5,0,"IX","AC",162.5,20)

"^DD",162.5,162.5,0,"IX","ACK",162.5,48)

"^DD",162.5,162.5,0,"IX","AD",162.5,19)

"^DD",162.5,162.5,0,"IX","AF",162.5,2)

"^DD",162.5,162.5,0,"IX","AG",162.5,3)

"^DD",162.5,162.5,0,"IX","AH",162.5,15)

"^DD",162.5,162.5,0,"IX","AJ",162.5,4)

"^DD",162.5,162.5,0,"IX","AK",162.5,3)

"^DD",162.5,162.5,0,"IX","AK1",162.5,2)

"^DD",162.5,162.5,0,"IX","AP",162.5,19)

"^DD",162.5,162.5,0,"IX","B",162.5,.01)

"^DD",162.5,162.5,0,"IX","C",162.5,2)

"^DD",162.5,162.5,0,"IX","D",162.5,3)

"^DD",162.5,162.5,0,"NM","FEE BASIS INVOICE")

"^DD",162.5,162.5,0,"VRPK")
FB
"^DD",162.5,162.5,.01,0)
NUMBER^RNJ8,0X^^0;1^K:+X'=X!(X>99999999)!(X<1)!(X?.E1"."1N.N)!('$$CHKBI^FBAAUTL4(X)) X S:$D(X) DINUM=X
"^DD",162.5,162.5,.01,1,0)
^.1
"^DD",162.5,162.5,.01,1,1,0)
162.5^B
"^DD",162.5,162.5,.01,1,1,1)
S ^FBAAI("B",$E(X,1,30),DA)=""
"^DD",162.5,162.5,.01,1,1,2)
K ^FBAAI("B",$E(X,1,30),DA)
"^DD",162.5,162.5,.01,3)
Type a Number between 1 and 99999999, 0 Decimal Digits
"^DD",162.5,162.5,.01,21,0)
^^1^1^2930514^
"^DD",162.5,162.5,.01,21,1,0)
This field contains the internal entry number for the Fee Basis Invoice.
"^DD",162.5,162.5,.01,"DT")
2940722
"^DD",162.5,162.5,1,0)
INVOICE DATE RECEIVED^RD^^0;2^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",162.5,162.5,1,1,0)
^.1^^0
"^DD",162.5,162.5,1,21,0)
^^2^2^2930519^^^
"^DD",162.5,162.5,1,21,1,0)
This field contains the date the correct invoice was received.  It is
"^DD",162.5,162.5,1,21,2,0)
used by Austin for the calculation of any applicable interest payments.
"^DD",162.5,162.5,1,"DT")
3000131
"^DD",162.5,162.5,2,0)
VENDOR^RP161.2'^FBAAV(^0;3^Q
"^DD",162.5,162.5,2,1,0)
^.1
"^DD",162.5,162.5,2,1,1,0)
162.5^C
"^DD",162.5,162.5,2,1,1,1)
S ^FBAAI("C",$E(X,1,30),DA)=""
"^DD",162.5,162.5,2,1,1,2)
K ^FBAAI("C",$E(X,1,30),DA)
"^DD",162.5,162.5,2,1,2,0)
162.5^AF^MUMPS
"^DD",162.5,162.5,2,1,2,1)
S ^FBAAI("AF",$E(X,1,30),9999999.9999-$P(^FBAAI(DA,0),U,2),DA)=""
"^DD",162.5,162.5,2,1,2,2)
K ^FBAAI("AF",$E(X,1,30),9999999.9999-$P(^FBAAI(DA,0),U,2),DA)
"^DD",162.5,162.5,2,1,3,0)
162.5^AK1^MUMPS
"^DD",162.5,162.5,2,1,3,1)
S:$P(^FBAAI(DA,0),U,4) ^FBAAI("AK",$P(^(0),U,4),$E(X,1,30),DA)=""
"^DD",162.5,162.5,2,1,3,2)
K:$P(^FBAAI(DA,0),U,4) ^FBAAI("AK",$P(^(0),U,4),$E(X,1,30),DA)
"^DD",162.5,162.5,2,1,3,"%D",0)
^^2^2^2930514^^
"^DD",162.5,162.5,2,1,3,"%D",1,0)
Update cross-reference on veteran field, which includes vendor.
"^DD",162.5,162.5,2,1,3,"%D",2,0)
Used for displaying payment data by veteran.
"^DD",162.5,162.5,2,1,3,"DT")
2930303
"^DD",162.5,162.5,2,21,0)
^^2^2^2930514^
"^DD",162.5,162.5,2,21,1,0)
Reference to the vendor file, this field contains the name of the vendor
"^DD",162.5,162.5,2,21,2,0)
associated with this invoice.
"^DD",162.5,162.5,2,"DT")
3000131
"^DD",162.5,162.5,3,0)
VETERAN^RP161'^FBAAA(^0;4^Q
"^DD",162.5,162.5,3,1,0)
^.1
"^DD",162.5,162.5,3,1,1,0)
162.5^D
"^DD",162.5,162.5,3,1,1,1)
S ^FBAAI("D",$E(X,1,30),DA)=""
"^DD",162.5,162.5,3,1,1,2)
K ^FBAAI("D",$E(X,1,30),DA)
"^DD",162.5,162.5,3,1,2,0)
162.5^AG^MUMPS
"^DD",162.5,162.5,3,1,2,1)
S ^FBAAI("AG",$E(X,1,30),9999999.9999-$P(^FBAAI(DA,0),U,2),DA)=""
"^DD",162.5,162.5,3,1,2,2)
K ^FBAAI("AG",$E(X,1,30),9999999.9999-$P(^FBAAI(DA,0),U,2),DA)
"^DD",162.5,162.5,3,1,3,0)
162.5^AK^MUMPS
"^DD",162.5,162.5,3,1,3,1)
S:$P(^FBAAI(DA,0),U,3) ^FBAAI("AK",$E(X,1,30),$P(^FBAAI(DA,0),U,3),DA)=""
"^DD",162.5,162.5,3,1,3,2)
K:$P(^FBAAI(DA,0),U,3) ^FBAAI("AK",$E(X,1,30),$P(^(0),U,3),DA)
"^DD",162.5,162.5,3,1,3,"%D",0)
^^1^1^2930514^^^^
"^DD",162.5,162.5,3,1,3,"%D",1,0)
Cross-reference on veteran field to  include vendor.
"^DD",162.5,162.5,3,1,3,"DT")
2930303
"^DD",162.5,162.5,3,21,0)
^^2^2^2930514^
"^DD",162.5,162.5,3,21,1,0)
Reference the Fee Basis Patient file, this field contains the name of
"^DD",162.5,162.5,3,21,2,0)
the veteran for which this invoice is established.
"^DD",162.5,162.5,3,"DT")
3000131
"^DD",162.5,162.5,4,0)
ASSOCIATED 7078/583^V^^0;5^Q
"^DD",162.5,162.5,4,1,0)
^.1
"^DD",162.5,162.5,4,1,1,0)
162.5^AJ^MUMPS
"^DD",162.5,162.5,4,1,1,1)
S ^FBAAI("E",$E(X,1,30),DA)=""
"^DD",162.5,162.5,4,1,1,2)
K ^FBAAI("E",$E(X,1,30),DA)
"^DD",162.5,162.5,4,3)

"^DD",162.5,162.5,4,21,0)
^^2^2^2930514^^
"^DD",162.5,162.5,4,21,1,0)
This field contains the pointer to the appropriate 7078 or
"^DD",162.5,162.5,4,21,2,0)
583 file.
"^DD",162.5,162.5,4,"DT")
2901011
"^DD",162.5,162.5,4,"V",0)
^.12P^2^2
"^DD",162.5,162.5,4,"V",1,0)
162.4^Select associated 7078^1^AUTH^^n
"^DD",162.5,162.5,4,"V",2,0)
162.7^Select associated 583^2^UNAUTH^^n
"^DD",162.5,162.5,5,0)
TREATMENT FROM DATE^RD^^0;6^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",162.5,162.5,5,1,0)
^.1^^0
"^DD",162.5,162.5,5,21,0)
^^2^2^2930514^^
"^DD",162.5,162.5,5,21,1,0)
Information in this field indicates the starting date for this invoice.
"^DD",162.5,162.5,5,21,2,0)
(i.e. the starting treatment date for which this billing covers).
"^DD",162.5,162.5,5,"DT")
3000131
"^DD",162.5,162.5,6,0)
TREATMENT TO DATE^RDX^^0;7^S %DT="ETX" D ^%DT S X=Y K:Y<1 X I $D(X),$P(^FBAAI(DA,0),U,6)>X K X W !,*7,"To Date cannot be before From date!",!
"^DD",162.5,162.5,6,3)

"^DD",162.5,162.5,6,21,0)
^^2^2^2930519^^
"^DD",162.5,162.5,6,21,1,0)
Information in this field indicates the ending date for this invoice.
"^DD",162.5,162.5,6,21,2,0)
(i.e. the ending treatment date this billing covers).
"^DD",162.5,162.5,6,"DT")
2910129
"^DD",162.5,162.5,6.5,0)
DISCHARGE TYPE CODE^P162.6'^FBAA(162.6,^0;21^Q
"^DD",162.5,162.5,6.5,21,0)
^^2^2^2930514^
"^DD",162.5,162.5,6.5,21,1,0)
This field contains the code pertaining to the type of discharge
"^DD",162.5,162.5,6.5,21,2,0)
associated with this invoice.
"^DD",162.5,162.5,6.5,"DT")
2900416
"^DD",162.5,162.5,6.6,0)
BILLED CHARGES^RNJ9,2^^0;22^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999.99)!(X<.01) X
"^DD",162.5,162.5,6.6,3)
Type a Dollar Amount between .01 and 999999.99, 2 Decimal Digits
"^DD",162.5,162.5,6.6,21,0)
^^2^2^2930514^
"^DD",162.5,162.5,6.6,21,1,0)
This field contains cost information on the amount the VA was initially
"^DD",162.5,162.5,6.6,21,2,0)
billed by the vendor for an inpatient stay.
"^DD",162.5,162.5,6.6,"DT")
2900416
"^DD",162.5,162.5,6.7,0)
PAYMENT BY MEDICARE/FED AGENCY^RFXO^^0;23^I $D(X) D YN^FBAAUTL3
"^DD",162.5,162.5,6.7,2)
S Y(0)=Y D OUTYN^FBAAUTL3
"^DD",162.5,162.5,6.7,2.1)
D OUTYN^FBAAUTL3
"^DD",162.5,162.5,6.7,3)
Answer 'Yes' or '1' for YES and 'No' or '0' for NO.
"^DD",162.5,162.5,6.7,21,0)
^^3^3^2940906^^^^
"^DD",162.5,162.5,6.7,21,1,0)
Answer 'Yes' if Medicare or some other
"^DD",162.5,162.5,6.7,21,2,0)
federal agency has paid some of the
"^DD",162.5,162.5,6.7,21,3,0)
bill for contract hospital.
"^DD",162.5,162.5,6.7,"DT")
2940318
"^DD",162.5,162.5,7,0)
AMOUNT CLAIMED^RNJ9,2X^^0;8^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999)!(X<.01) X I $D(X),$P(^FBAAI(DA,0),U,12)=6,$P(^(0),U,22)<X K X W !,*7,"Amount Claimed cannot be greater than the 'BILLED CHARGES'.",!
"^DD",162.5,162.5,7,3)
Type a Dollar Amount between .01 and 999999, 2 Decimal Digits
"^DD",162.5,162.5,7,21,0)
^^3^3^2930514^
"^DD",162.5,162.5,7,21,1,0)
The portion of the billed charges that the vendor is requesting payment
"^DD",162.5,162.5,7,21,2,0)
for from the VA.  Usually the billed charges and the amount claimed
"^DD",162.5,162.5,7,21,3,0)
will be the same.
"^DD",162.5,162.5,7,"DT")
2910204
"^DD",162.5,162.5,8,0)
AMOUNT PAID^RNJ9,2X^^0;9^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999)!(X<0) X I $D(X),$P(^FBAAI(DA,0),U,12)'=6,$P(^FBAAI(DA,0),U,8)<X W !,*7,"Amount Paid cannot be greater than Amount Claimed !",! K X
"^DD",162.5,162.5,8,1,0)
^.1^^0
"^DD",162.5,162.5,8,3)
Type a Dollar Amount between 0 and 999999, 2 Decimal Digits
"^DD",162.5,162.5,8,21,0)
^^2^2^2930514^
"^DD",162.5,162.5,8,21,1,0)
The dollar amount that was actually paid to the vendor for the service
"^DD",162.5,162.5,8,21,2,0)
provided.
"^DD",162.5,162.5,8,"DT")
3030807
"^DD",162.5,162.5,9,0)
AMOUNT SUSPENDED^NJ9,2^^0;10^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999)!(X<0) X
"^DD",162.5,162.5,9,3)
Type a Dollar Amount between 0 and 999999, 2 Decimal Digits
"^DD",162.5,162.5,9,21,0)
^^2^2^2950110^^^
"^DD",162.5,162.5,9,21,1,0)
This field allows the user to enter in a dollar amount which cannot exceed
"^DD",162.5,162.5,9,21,2,0)
$999,999 dollars.
"^DD",162.5,162.5,9,"DT")
2900614
"^DD",162.5,162.5,10,0)
SUSPEND CODE^P161.27'^FBAA(161.27,^0;11^Q
"^DD",162.5,162.5,10,1,0)
^.1^^0
"^DD",162.5,162.5,10,21,0)
^^2^2^2930514^
"^DD",162.5,162.5,10,21,1,0)
If an amount was suspended, the user is requested to indicate the reason
"^DD",162.5,162.5,10,21,2,0)
for suspense from the selection of suspense codes.
"^DD",162.5,162.5,10,"DT")
3000131
"^DD",162.5,162.5,11,0)
FEE PROGRAM^RP161.8'^FBAA(161.8,^0;12^Q
"^DD",162.5,162.5,11,21,0)
^^3^3^2930514^
"^DD",162.5,162.5,11,21,1,0)
This field contains the valid Fee Program associated with this Invoice
"^DD",162.5,162.5,11,21,2,0)
as contained in the Fee Basis Program file (i.e. Contract Hospital or
"^DD",162.5,162.5,11,21,3,0)
Community Nursing Home for an inpatient stay).
"^DD",162.5,162.5,12,0)
PAYMENT TYPE CODE^S^R:REIMBURSEMENT;V:VENDOR;S:STATISTICAL;SR:STAT-REIMBURSEMENT;^0;13^Q
"^DD",162.5,162.5,12,21,0)
^^8^8^2940926^^^
"^DD",162.5,162.5,12,21,1,0)
An entry of 'R' will indicate the invoice is for a reimbursement to the
"^DD",162.5,162.5,12,21,2,0)
veteran for services that he/she has already paid.
"^DD",162.5,162.5,12,21,3,0)
An entry of 'V' will indicate the invoice is for a payment directly to
"^DD",162.5,162.5,12,21,4,0)
a vendor.
"^DD",162.5,162.5,12,21,5,0)
An entry of 'S' will indicate the invoice was paid "out of system"
"^DD",162.5,162.5,12,21,6,0)
to a vendor and allows the update of the payment history files.
"^DD",162.5,162.5,12,21,7,0)
An entry of 'SR' will indicate a statistical reimbursement to a
"^DD",162.5,162.5,12,21,8,0)
party other than the vendor.
"^DD",162.5,162.5,13,0)
REJECT STATUS^S^P:REJECTED, PENDING ACTION;C:REJECTED, COMPLETED;^FBREJ;1^Q
"^DD",162.5,162.5,13,21,0)
^^4^4^2930514^
"^DD",162.5,162.5,13,21,1,0)
An entry in this field will indicate that the invoice has been rejected.
"^DD",162.5,162.5,13,21,2,0)
An entry of 'P' will indicate the invoice has been rejected
"^DD",162.5,162.5,13,21,3,0)
and it is awaiting action.  An entry of 'C' will indicate the invoice
"^DD",162.5,162.5,13,21,4,0)
has been rejected and action on it has been completed.
"^DD",162.5,162.5,14,0)
REJECT REASON^F^^FBREJ;2^K:$L(X)>40!($L(X)<2) X
"^DD",162.5,162.5,14,3)
Answer must be 2-40 characters in length.
"^DD",162.5,162.5,14,21,0)
^^2^2^2930514^
"^DD",162.5,162.5,14,21,1,0)
If the invoice has a status of rejected, the user will be prompted to
"^DD",162.5,162.5,14,21,2,0)
enter a reason that the reject has occurred.
"^DD",162.5,162.5,15,0)
OLD BATCH NUMBER^P161.7'^FBAA(161.7,^FBREJ;3^Q
"^DD",162.5,162.5,15,1,0)
^.1
"^DD",162.5,162.5,15,1,1,0)
162.5^AH^MUMPS
"^DD",162.5,162.5,15,1,1,1)
S ^FBAAI("AH",$E(X,1,30),DA)=""
"^DD",162.5,162.5,15,1,1,2)
K ^FBAAI("AH",$E(X,1,30),DA)
"^DD",162.5,162.5,15,21,0)
^^3^3^2930514^
"^DD",162.5,162.5,15,21,1,0)
This field is populated only if there is a reject pending.  It will contain
"^DD",162.5,162.5,15,21,2,0)
the batch number of the old batch associated with the invoice.  This is
"^DD",162.5,162.5,15,21,3,0)
to provide a link back to that batch if the user deletes the reject.
"^DD",162.5,162.5,15,"DT")
2890131
"^DD",162.5,162.5,16,0)
VOID PAYMENT^S^VP:VOIDED PAYMENT;^0;14^Q
"^DD",162.5,162.5,16,21,0)
^^2^2^2930514^
"^DD",162.5,162.5,16,21,1,0)
Entry into this field is made when the user indicates the payment must
"^DD",162.5,162.5,16,21,2,0)
be voided.
"^DD",162.5,162.5,16.5,0)
REASON FOR VOIDED PAYMENT^F^^R;1^K:$L(X)>75!($L(X)<3) X
"^DD",162.5,162.5,16.5,3)
Answer must be 3-75 characters in length.
"^DD",162.5,162.5,16.5,21,0)
^^2^2^2930514^
"^DD",162.5,162.5,16.5,21,1,0)
This field is only populated if the Void Payment field is flagged for a
"^DD",162.5,162.5,16.5,21,2,0)
void.  The user is prompted to enter a reason the payment was voided.
"^DD",162.5,162.5,16.5,"DT")
2930304
"^DD",162.5,162.5,17,0)
SUPERVISOR WHO VOIDED^P200'^VA(200,^0;15^Q
"^DD",162.5,162.5,17,21,0)
^^3^3^2930514^
"^DD",162.5,162.5,17,21,1,0)
This field is only populated when the Void Payment field is flagged for
"^DD",162.5,162.5,17,21,2,0)
a void.  The field is stuffed with the user who voided the payment (and
"^DD",162.5,162.5,17,21,3,0)
in all instances, the user must be a supervisor).
"^DD",162.5,162.5,17,"DT")
2900405
"^DD",162.5,162.5,18,0)
DESCRIPTION OF SUSPENSION^162.518^^1;0
"^DD",162.5,162.5,18,21,0)
^^3^3^2930514^
"^DD",162.5,162.5,18,21,1,0)
This field is only populated when there is a dollar amount that has been
"^DD",162.5,162.5,18,21,2,0)
suspended.  The user is prompted to enter a description of the suspension
"^DD",162.5,162.5,18,21,3,0)
in word-processing format.
"^DD",162.5,162.5,19,0)
DATE FINALIZED^D^^0;16^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",162.5,162.5,19,1,0)
^.1
"^DD",162.5,162.5,19,1,1,0)
162.5^AP^MUMPS
"^DD",162.5,162.5,19,1,1,1)
S:$P(^FBAAI(DA,0),U,20)]"" ^FBAAI("AP",$P(^FBAAI(DA,0),U,20),9999999-$E(X,1,30),DA)=""
"^DD",162.5,162.5,19,1,1,2)
K:$P(^FBAAI(DA,0),U,20)]"" ^FBAAI("AP",$P(^FBAAI(DA,0),U,20),9999999-$E(X,1,30),DA)
"^DD",162.5,162.5,19,1,2,0)
162.5^AD
"^DD",162.5,162.5,19,1,2,1)
S ^FBAAI("AD",$E(X,1,30),DA)=""
"^DD",162.5,162.5,19,1,2,2)
K ^FBAAI("AD",$E(X,1,30),DA)
"^DD",162.5,162.5,19,21,0)
^^1^1^2930514^
"^DD",162.5,162.5,19,21,1,0)
This field contains the date the invoice was vouchered by Fiscal.
"^DD",162.5,162.5,19,"DT")
2900611
"^DD",162.5,162.5,20,0)
BATCH NUMBER^*P161.7'^FBAA(161.7,^0;17^S DIC("S")="I $P(^(0),U,3)=""B9""&($P(^(0),U,5)=DUZ)&($P(^(""ST""),U,1)=""O"")" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",162.5,162.5,20,1,0)
^.1^^-1
"^DD",162.5,162.5,20,1,1,0)
162.5^AC^MUMPS
"^DD",162.5,162.5,20,1,1,1)
S ^FBAAI("AC",$E(X,1,30),DA)=""
"^DD",162.5,162.5,20,1,1,2)
K ^FBAAI("AC",$E(X,1,30),DA)
"^DD",162.5,162.5,20,12)
ONLY BATCHES WITH A STATUS OF 'OPEN'
"^DD",162.5,162.5,20,12.1)
S DIC("S")="I $P(^(0),U,3)=""B9""&($P(^(0),U,5)=DUZ)&($P(^(""ST""),U,1)=""O"")"
"^DD",162.5,162.5,20,21,0)
^^2^2^2930514^
"^DD",162.5,162.5,20,21,1,0)
This field contains the batch number associated with this invoice.
"^DD",162.5,162.5,20,21,2,0)
(The batch number that the invoice resides in).
"^DD",162.5,162.5,20,"DT")
3000131
"^DD",162.5,162.5,21,0)
PURPOSE OF VISIT^*P161.82'^FBAA(161.82,^0;18^S DIC("S")="I $S('$G(^(""I"")):1,DT'>^(""I""):1,1:0)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",162.5,162.5,21,12)
An inactive Purpose of Visit Code may not be selected.
"^DD",162.5,162.5,21,12.1)
S DIC("S")="I $S('$G(^(""I"")):1,DT'>^(""I""):1,1:0)"
"^DD",162.5,162.5,21,21,0)
^^2^2^2930514^
"^DD",162.5,162.5,21,21,1,0)
Contains the valid Purpose of Visit code as defined in the Fee Basis
"^DD",162.5,162.5,21,21,2,0)
Purpose of Visit file.
"^DD",162.5,162.5,21,"DT")
2930205
"^DD",162.5,162.5,22,0)
PATIENT TYPE CODE^S^00:SURGICAL;10:MEDICAL;60:HOME NURSING SERVICE;85:PSYCHIATRIC-CONTRACT;86:PSYCHIATRIC;95:NEUROLOGICAL-CONTRACT;96:NEUROLOGICAL;^0;19^Q
"^DD",162.5,162.5,22,21,0)
^^2^2^2930514^
"^DD",162.5,162.5,22,21,1,0)
This field requires the entry of the type of treatment being provided
"^DD",162.5,162.5,22,21,2,0)
to the patient (i.e. Surgical, Medical, Home Nursing Service, etc.)
"^DD",162.5,162.5,22,"DT")
2890425
"^DD",162.5,162.5,23,0)
PRIMARY SERVICE FACILITY^P4'^DIC(4,^0;20^Q
"^DD",162.5,162.5,23,1,0)
^.1^^0
"^DD",162.5,162.5,23,21,0)
^^1^1^2941130^^
"^DD",162.5,162.5,23,21,1,0)
The VA Hospital responsible for that Veterans care.
"^DD",162.5,162.5,23,"DT")
2900604
"^DD",162.5,162.5,24,0)
DISCHARGE DRG^P80.2'^ICD(^0;24^Q
"^DD",162.5,162.5,24,21,0)
^^2^2^2930514^^
"^DD",162.5,162.5,24,21,1,0)
This field should contain the discharge DRG that is returned from the
"^DD",162.5,162.5,24,21,2,0)
Austin Pricer System.
"^DD",162.5,162.5,24,23,0)
^^2^2^2930111^
"^DD",162.5,162.5,24,23,1,0)
This field is a pointer to the DRG file, however it is the grouped DRG
"^DD",162.5,162.5,24,23,2,0)
as calculated by the Austin Pricer system.
"^DD",162.5,162.5,24,"DT")
2930111
"^DD",162.5,162.5,24.5,0)
DRG WEIGHT^NJ8,4^^2;12^K:+X'=X!(X>999.9999)!(X<0)!(X?.E1"."5N.N) X
"^DD",162.5,162.5,24.5,3)
Type a Number between 0 and 999.9999, 4 Decimal Digits
"^DD",162.5,162.5,24.5,21,0)
^.001^1^1^3030922^^
"^DD",162.5,162.5,24.5,21,1,0)
Enter the DRG weight as reported by the Austin Pricer.
"^DD",162.5,162.5,24.5,"DT")
3030922
"^DD",162.5,162.5,25,0)
RESUBMISSION^S^1:YES;^0;25^Q
"^DD",162.5,162.5,25,21,0)
^^3^3^2930514^
"^DD",162.5,162.5,25,21,1,0)
Entry into this field indicates that this invoice is a resubmission.
"^DD",162.5,162.5,25,21,2,0)
Failure to annotate an invoice in such a manner would cause Austin to 
"^DD",162.5,162.5,25,21,3,0)
reject the payment as duplicate.
"^DD",162.5,162.5,25,"DT")
2930304
"^DD",162.5,162.5,26,0)
NVH PRICER AMOUNT^NJ9,2^^0;26^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999.99)!(X<.01) X
"^DD",162.5,162.5,26,3)
Type a Dollar Amount between .01 and 999999.99, 2 Decimal Digits
"^DD",162.5,162.5,26,21,0)
^^1^1^2930514^
"^DD",162.5,162.5,26,21,1,0)
The amount for this payment as determined by the Austin Pricer.
"^DD",162.5,162.5,26,"DT")
2930322
"^DD",162.5,162.5,30,0)
ICD1^RP80'^ICD9(^DX;1^Q
"^DD",162.5,162.5,30,21,0)
^^1^1^2930514^
"^DD",162.5,162.5,30,21,1,0)
The first valid ICD code associated with this payment.
"^DD",162.5,162.5,30,"DT")
2900529
"^DD",162.5,162.5,31,0)
ICD2^P80'^ICD9(^DX;2^Q
"^DD",162.5,162.5,31,3)

"^DD",162.5,162.5,31,21,0)
^^1^1^2930514^
"^DD",162.5,162.5,31,21,1,0)
The second valid ICD code (if one exists) associated with this payment.
"^DD",162.5,162.5,32,0)
ICD3^P80'^ICD9(^DX;3^Q
"^DD",162.5,162.5,32,3)

"^DD",162.5,162.5,32,21,0)
^^1^1^2930514^
"^DD",162.5,162.5,32,21,1,0)
The third valid ICD code (if one exists) associated with this payment.
"^DD",162.5,162.5,33,0)
ICD4^P80'^ICD9(^DX;4^Q
"^DD",162.5,162.5,33,3)

"^DD",162.5,162.5,33,21,0)
^^1^1^2930514^
"^DD",162.5,162.5,33,21,1,0)
The fourth valid ICD code (if one exists) associated with this payment.
"^DD",162.5,162.5,34,0)
ICD5^P80'^ICD9(^DX;5^Q
"^DD",162.5,162.5,34,3)

"^DD",162.5,162.5,34,21,0)
^^1^1^2930514^
"^DD",162.5,162.5,34,21,1,0)
The fifth valid ICD code (if one exists) associated with this payment.
"^DD",162.5,162.5,40,0)
PROC1^P80.1'^ICD0(^PROC;1^Q
"^DD",162.5,162.5,40,21,0)
^^1^1^2930514^
"^DD",162.5,162.5,40,21,1,0)
The first valid procedure code (if one exists) associated with this payment.
"^DD",162.5,162.5,41,0)
PROC2^P80.1'^ICD0(^PROC;2^Q
"^DD",162.5,162.5,41,3)

"^DD",162.5,162.5,41,21,0)
^^2^2^2930514^
"^DD",162.5,162.5,41,21,1,0)
The second valid procedure code (if one exists) associated with this
"^DD",162.5,162.5,41,21,2,0)
payment.
"^DD",162.5,162.5,42,0)
PROC3^P80.1'^ICD0(^PROC;3^Q
"^DD",162.5,162.5,42,3)

"^DD",162.5,162.5,42,21,0)
^^2^2^2930514^
"^DD",162.5,162.5,42,21,1,0)
The third valid procedure code (if one exists) associated with this
"^DD",162.5,162.5,42,21,2,0)
payment.
"^DD",162.5,162.5,43,0)
PROC4^P80.1'^ICD0(^PROC;4^Q
"^DD",162.5,162.5,43,3)

"^DD",162.5,162.5,43,21,0)
^^2^2^2930514^
"^DD",162.5,162.5,43,21,1,0)
The fourth valid procedure code (if one exists) associated with this
"^DD",162.5,162.5,43,21,2,0)
payment.
"^DD",162.5,162.5,44,0)
PROC5^P80.1'^ICD0(^PROC;5^Q
"^DD",162.5,162.5,44,3)

"^DD",162.5,162.5,44,21,0)
^^2^2^2930514^
"^DD",162.5,162.5,44,21,1,0)
The fifth valid procedure code (if one exists) associated with this
"^DD",162.5,162.5,44,21,2,0)
payment.
"^DD",162.5,162.5,45,0)
DATE PAID^D^^2;1^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",162.5,162.5,45,3)
This is the date of the check, as issued by the treasury.
"^DD",162.5,162.5,45,21,0)
^^4^4^2940315^^
"^DD",162.5,162.5,45,21,1,0)
This is the date of the check, as issued by the treasury.  This
"^DD",162.5,162.5,45,21,2,0)
information will be passed back to DHCP from the Financial Management
"^DD",162.5,162.5,45,21,3,0)
System (FMS) when the check is issued to the vendor.  This field will
"^DD",162.5,162.5,45,21,4,0)
use the check date beginning with version 3.5 of Fee Basis.
"^DD",162.5,162.5,45,"DT")
2940315
"^DD",162.5,162.5,46,0)
VENDOR INVOICE DATE^RDX^^2;2^S %DT="E" D ^%DT S X=Y K:Y<1 X I X>$P(^FBAAI(DA,0),U,2) W !,*7,"Vendor Invoice Date cannot be later than the Date Correct Invoice Received" K X
"^DD",162.5,162.5,46,3)
Enter the date the vendor issued the invoice.
"^DD",162.5,162.5,46,21,0)
^^1^1^2940315^^
"^DD",162.5,162.5,46,21,1,0)
This is the date that the vendor issued the invoice.
"^DD",162.5,162.5,46,"DT")
2940415
"^DD",162.5,162.5,47,0)
PROMPT PAY TYPE^S^1:MONEY MANAGED;^2;3^Q
"^DD",162.5,162.5,47,3)
Set equal to 1 if payment is subject to interest payments.
"^DD",162.5,162.5,47,21,0)
^^2^2^2940315^^
"^DD",162.5,162.5,47,21,1,0)
Field is set to 1 if the payment is subject to interest payments (prompt
"^DD",162.5,162.5,47,21,2,0)
pay).
"^DD",162.5,162.5,47,"DT")
2940318
"^DD",162.5,162.5,48,0)
CHECK NUMBER^F^^2;4^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>8!($L(X)<1)!'(X?.AN) X
"^DD",162.5,162.5,48,1,0)
^.1
"^DD",162.5,162.5,48,1,1,0)
162.5^ACK^MUMPS
"^DD",162.5,162.5,48,1,1,1)
S ^FBAAI("ACK",$E(X,1,30),DA)=""
"^DD",162.5,162.5,48,1,1,2)
K ^FBAAI("ACK",X,DA)
"^DD",162.5,162.5,48,1,1,"%D",0)
^^2^2^2940425^^
"^DD",162.5,162.5,48,1,1,"%D",1,0)
This cross-reference is used to find payment line items for specific
"^DD",162.5,162.5,48,1,1,"%D",2,0)
check numbers.
"^DD",162.5,162.5,48,1,1,"DT")
2940425
"^DD",162.5,162.5,48,3)
Answer must be 1-8 characters in length.
"^DD",162.5,162.5,48,21,0)
^^3^3^2940315^^
"^DD",162.5,162.5,48,21,1,0)
Contains the check number as issued by the treasury.  This field is updated
"^DD",162.5,162.5,48,21,2,0)
after the check is issued, through a server option that records actual
"^DD",162.5,162.5,48,21,3,0)
payment information for each Fee payment made.
"^DD",162.5,162.5,48,"DT")
2940425
"^DD",162.5,162.5,49,0)
CANCELLATION DATE^D^^2;5^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",162.5,162.5,49,3)
The date the check was cancelled by the treasury.
"^DD",162.5,162.5,49,21,0)
^^3^3^2940315^^
"^DD",162.5,162.5,49,21,1,0)
This is the date the treasury cancelled the check.  This field is updated
"^DD",162.5,162.5,49,21,2,0)
through a server option that records cancellations of previously recorded
"^DD",162.5,162.5,49,21,3,0)
payment data.
"^DD",162.5,162.5,49,"DT")
2940315
"^DD",162.5,162.5,50,0)
REASON CODE^P162.95'^FB(162.95,^2;6^Q
"^DD",162.5,162.5,50,3)
Enter the reason the check was cancelled.
"^DD",162.5,162.5,50,21,0)
^^3^3^2940315^^
"^DD",162.5,162.5,50,21,1,0)
This field contains a pointer to the Fee Basis Check Cancellation Reason
"^DD",162.5,162.5,50,21,2,0)
file.  It is populated through a server option that updates the payment
"^DD",162.5,162.5,50,21,3,0)
record when the treasury cancels a check that was previously payed.
"^DD",162.5,162.5,50,"DT")
2940315
"^DD",162.5,162.5,51,0)
CANCELLATION ACTIVITY^S^R:WILL BE REPLACED;C:WILL BE REISSUED;X:WILL NOT BE REISSUED;^2;7^Q
"^DD",162.5,162.5,51,3)
Field will contain cancellation code if there has been cancellation activity on this payment.
"^DD",162.5,162.5,51,21,0)
^^7^7^2940315^^
"^DD",162.5,162.5,51,21,1,0)
This field is populated when a cancellation is recorded for the payment
"^DD",162.5,162.5,51,21,2,0)
referenced.  This field will always remain populated, to indicate that
"^DD",162.5,162.5,51,21,3,0)
there was cancellation activity on this payment at one time.  New payments
"^DD",162.5,162.5,51,21,4,0)
will replace the cancellation date and reason code fields, but the
"^DD",162.5,162.5,51,21,5,0)
cancellation activity flag will not be overwritten.  This flag will allow
"^DD",162.5,162.5,51,21,6,0)
the user to know that previous cancellation activity existed, and to
"^DD",162.5,162.5,51,21,7,0)
review the cancellation history output for further information.
"^DD",162.5,162.5,51,"DT")
2940426
"^DD",162.5,162.5,52,0)
DISBURSED AMOUNT^NJ10,2^^2;8^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999.99)!(X<0) X
"^DD",162.5,162.5,52,3)
Type a Dollar Amount between 0 and 9999999.99, 2 Decimal Digits
"^DD",162.5,162.5,52,21,0)
^.001^1^1^3081119^^^
"^DD",162.5,162.5,52,21,1,0)
This is the dollar amount paid by the treasury, less any interest paid.
"^DD",162.5,162.5,52,"DT")
3081119
"^DD",162.5,162.5,53,0)
INTEREST AMOUNT^NJ9,2^^2;9^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999)!(X<0) X
"^DD",162.5,162.5,53,3)
Type a Dollar Amount between 0 and 999999, 2 Decimal Digits
"^DD",162.5,162.5,53,21,0)
^^1^1^2940420^^
"^DD",162.5,162.5,53,21,1,0)
The interest amount paid on this line item by the treasury.
"^DD",162.5,162.5,53,"DT")
2940421
"^DD",162.5,162.5,54,0)
COVERED DAYS^RNJ5,0^^2;10^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",162.5,162.5,54,3)
Type a Number between 0 and 99999, 0 Decimal Digits
"^DD",162.5,162.5,54,21,0)
^^2^2^3030617^
"^DD",162.5,162.5,54,21,1,0)
This is the number of total number of Inpatient days that the Fee Staff 
"^DD",162.5,162.5,54,21,2,0)
has determined will be paid.  Enter number of inpatient days to be paid.
"^DD",162.5,162.5,54,"DT")
3030707
"^DD",162.5,162.5,55,0)
PATIENT CONTROL NUMBER^F^^2;11^K:$L(X)>20!($L(X)<1) X
"^DD",162.5,162.5,55,3)
Answer must be 1-20 characters in length.
"^DD",162.5,162.5,55,21,0)
^^2^2^3030617^
"^DD",162.5,162.5,55,21,1,0)
Please enter the Patient control number.  This could be either the Patient
"^DD",162.5,162.5,55,21,2,0)
Identification Number or Patient Account Number from the vendor's invoice.
"^DD",162.5,162.5,55,"DT")
3030617
"^DD",162.5,162.5,56,0)
FPPS CLAIM ID^F^^3;1^K:$L(X)>32!($L(X)<1)!'(X?1.32N) X
"^DD",162.5,162.5,56,3)
Enter a non-zero number from 1 to 32 digits long, 0 decimal digits.
"^DD",162.5,162.5,56,21,0)
^.001^2^2^3030710^^^
"^DD",162.5,162.5,56,21,1,0)
Enter the entire FPPS Claim ID as shown on the invoice document.  (1-32 
"^DD",162.5,162.5,56,21,2,0)
character text ID created by FPPS system).
"^DD",162.5,162.5,56,"DT")
3030618
"^DD",162.5,162.5,57,0)
FPPS LINE ITEM^F^^3;2^K:$L(X)>40!($L(X)<1) X
"^DD",162.5,162.5,57,3)
This response must be a number or a list or range or ALL, e.g., 1,3,5 or 2-4,8.
"^DD",162.5,162.5,57,21,0)
^^8^8^3030617^
"^DD",162.5,162.5,57,21,1,0)
Enter the line item sequence number associated with this charge.  Each 
"^DD",162.5,162.5,57,21,2,0)
charge on the FPPS invoice document will have a line item sequence number 
"^DD",162.5,162.5,57,21,3,0)
associated with it.  A line item can be entered individually or a group of
"^DD",162.5,162.5,57,21,4,0)
charges from multiple lines can be entered.  If all line items in a group
"^DD",162.5,162.5,57,21,5,0)
are in numerical sequence, you may enter the first line item sequence
"^DD",162.5,162.5,57,21,6,0)
number followed by a hyphen and the last line item sequence number.  If
"^DD",162.5,162.5,57,21,7,0)
the grouped charges are not in sequential order, each line item must be
"^DD",162.5,162.5,57,21,8,0)
entered individually, followed by a comma.
"^DD",162.5,162.5,57,"DT")
3030617
"^DD",162.5,162.5,58,0)
ADJUSTMENT^162.558P^^8;0
"^DD",162.5,162.5,59,0)
REMITTANCE REMARK^162.559P^^9;0
"^DD",162.5,162.5,61,0)
ROUTING NUMBER^F^^2;13^K:$L(X)>9!($L(X)<9) X
"^DD",162.5,162.5,61,3)
Answer must be 9 characters in length.
"^DD",162.5,162.5,61,21,0)
^^6^6^3110513^
"^DD",162.5,162.5,61,21,1,0)
Enter the financial routing number information that was returned with the
"^DD",162.5,162.5,61,21,2,0)
payment from Central Fee for Electronic Fund Transfer (EFT) entries. This
"^DD",162.5,162.5,61,21,3,0)
information will be forwarded to FPPS so that the vendor can be notified
"^DD",162.5,162.5,61,21,4,0)
of the payment. This field must be 9 characters, including any leading
"^DD",162.5,162.5,61,21,5,0)
zeros.  Note: The Central Fee nightly update will automatically set this
"^DD",162.5,162.5,61,21,6,0)
field if the data is included in their message.
"^DD",162.5,162.5,61,"DT")
3110513
"^DD",162.5,162.5,62,0)
ACCOUNT NUMBER^F^^2;14^K:$L(X)>17!($L(X)<1) X
"^DD",162.5,162.5,62,3)
Answer must be 1-17 characters in length.
"^DD",162.5,162.5,62,21,0)
^^6^6^3110513^
"^DD",162.5,162.5,62,21,1,0)
Enter the financial account number information that was returned with the
"^DD",162.5,162.5,62,21,2,0)
payment from Central Fee for Electronic Fund Transfer (EFT) entries. This
"^DD",162.5,162.5,62,21,3,0)
information will be forwarded to FPPS so that the vendor can be notified
"^DD",162.5,162.5,62,21,4,0)
of the payment. This field must be 1-17 characters, including any leading
"^DD",162.5,162.5,62,21,5,0)
zeros.  Note: The Central Fee nightly update will automatically set this
"^DD",162.5,162.5,62,21,6,0)
field if the data is included in their message.
"^DD",162.5,162.5,62,"DT")
3110513
"^DD",162.5,162.5,63,0)
FINANCIAL INSTITUTION^F^^2;15^K:$L(X)>30!($L(X)<1) X
"^DD",162.5,162.5,63,3)
Answer must be 1-30 characters in length.
"^DD",162.5,162.5,63,21,0)
^^5^5^3110513^
"^DD",162.5,162.5,63,21,1,0)
Enter the financial institution name that was returned with the payment
"^DD",162.5,162.5,63,21,2,0)
from Central Fee for Electronic Fund Transfer (EFT) entries. This
"^DD",162.5,162.5,63,21,3,0)
information will be forwarded to FPPS so that the vendor can be notified
"^DD",162.5,162.5,63,21,4,0)
of the payment. Note: The Central Fee nightly update will automatically
"^DD",162.5,162.5,63,21,5,0)
set this field if the data is included in their message.
"^DD",162.5,162.5,63,"DT")
3110513
"^DD",162.5,162.5,64,0)
ATTENDING PROV NAME^F^^4;1^K:$L(X)>30!($L(X)<1) X
"^DD",162.5,162.5,64,3)
Answer must be 1-30 characters in length.
"^DD",162.5,162.5,64,21,0)
^^1^1^3110422^
"^DD",162.5,162.5,64,21,1,0)
Enter the Attending Provider's name found in the claim information.
"^DD",162.5,162.5,64,"DT")
3110422
"^DD",162.5,162.5,65,0)
ATTENDING PROV NPI^F^^4;2^K:$L(X)>10!($L(X)<10) X
"^DD",162.5,162.5,65,3)
Answer must be 10 characters in length.
"^DD",162.5,162.5,65,21,0)
^^3^3^3110422^
"^DD",162.5,162.5,65,21,1,0)
Enter the Attending Provider's National Provider Identifier (NPI) found
"^DD",162.5,162.5,65,21,2,0)
in the claim information. This value must be 10 characters, including any
"^DD",162.5,162.5,65,21,3,0)
leading zeros.
"^DD",162.5,162.5,65,"DT")
3110422
"^DD",162.5,162.5,66,0)
ATTENDING PROV TAXONOMY CODE^F^^4;3^K:$L(X)>10!($L(X)<10) X
"^DD",162.5,162.5,66,3)
Answer must be 10 characters in length.
"^DD",162.5,162.5,66,21,0)
^^3^3^3110422^
"^DD",162.5,162.5,66,21,1,0)
Enter the Attending Provider's Taxonomy code found in the claim 
"^DD",162.5,162.5,66,21,2,0)
information. This value must be 10 characters, including any leading 
"^DD",162.5,162.5,66,21,3,0)
zeros.
"^DD",162.5,162.5,66,"DT")
3110422
"^DD",162.5,162.5,67,0)
OPERATING PROV NAME^F^^4;4^K:$L(X)>30!($L(X)<1) X
"^DD",162.5,162.5,67,3)
Answer must be 1-30 characters in length.
"^DD",162.5,162.5,67,21,0)
^^1^1^3110422^
"^DD",162.5,162.5,67,21,1,0)
Enter the Operating Provider's name found in the claim information.
"^DD",162.5,162.5,67,"DT")
3110422
"^DD",162.5,162.5,68,0)
OPERATING PROV NPI^F^^4;5^K:$L(X)>10!($L(X)<10) X
"^DD",162.5,162.5,68,3)
Answer must be 10 characters in length.
"^DD",162.5,162.5,68,21,0)
^^3^3^3110517^
"^DD",162.5,162.5,68,21,1,0)
Enter the Operating Provider's National Provider Identifier (NPI) found 
"^DD",162.5,162.5,68,21,2,0)
in the claim information. This value must be 10 characters, including any 
"^DD",162.5,162.5,68,21,3,0)
leading zeros.
"^DD",162.5,162.5,68,"DT")
3110422
"^DD",162.5,162.5,69,0)
RENDERING PROV NAME^F^^4;6^K:$L(X)>30!($L(X)<1) X
"^DD",162.5,162.5,69,3)
Answer must be 1-30 characters in length.
"^DD",162.5,162.5,69,21,0)
^^1^1^3110422^
"^DD",162.5,162.5,69,21,1,0)
Enter the Rendering Provider's name found in the claim information.
"^DD",162.5,162.5,69,"DT")
3110429
"^DD",162.5,162.5,70,0)
RENDERING PROV NPI^F^^4;7^K:$L(X)>10!($L(X)<10) X
"^DD",162.5,162.5,70,3)
Answer must be 10 characters in length.
"^DD",162.5,162.5,70,21,0)
^^3^3^3110517^
"^DD",162.5,162.5,70,21,1,0)
Enter the Rendering Provider's National Provider Identifier (NPI) found 
"^DD",162.5,162.5,70,21,2,0)
in the claim information. This value must be 10 characters, including any 
"^DD",162.5,162.5,70,21,3,0)
leading zeros.
"^DD",162.5,162.5,70,"DT")
3110422
"^DD",162.5,162.5,71,0)
RENDERING PROV TAXONOMY CODE^F^^4;8^K:$L(X)>10!($L(X)<10) X
"^DD",162.5,162.5,71,3)
Answer must be 10 characters in length.
"^DD",162.5,162.5,71,21,0)
^^3^3^3110422^
"^DD",162.5,162.5,71,21,1,0)
Enter the Rendering Provider's Taxonomy code found in the claim 
"^DD",162.5,162.5,71,21,2,0)
information. This value must be 10 characters, including any leading 
"^DD",162.5,162.5,71,21,3,0)
zeros.
"^DD",162.5,162.5,71,"DT")
3110422
"^DD",162.5,162.5,72,0)
SERVICING PROV NAME^F^^4;9^K:$L(X)>30!($L(X)<1) X
"^DD",162.5,162.5,72,3)
Answer must be 1-30 characters in length.
"^DD",162.5,162.5,72,21,0)
^^1^1^3110422^
"^DD",162.5,162.5,72,21,1,0)
Enter the Servicing Provider's name found in the claim information.
"^DD",162.5,162.5,72,"DT")
3110422
"^DD",162.5,162.5,73,0)
SERVICING PROV NPI^F^^4;10^K:$L(X)>10!($L(X)<10) X
"^DD",162.5,162.5,73,3)
Answer must be 10 characters in length.
"^DD",162.5,162.5,73,21,0)
^^3^3^3110422^
"^DD",162.5,162.5,73,21,1,0)
Enter the Servicing Provider's National Provider Identifier (NPI) found 
"^DD",162.5,162.5,73,21,2,0)
in the claim information. This value must be 10 characters, including any 
"^DD",162.5,162.5,73,21,3,0)
leading zeros.
"^DD",162.5,162.5,73,"DT")
3110422
"^DD",162.5,162.5,74,0)
REFERRING PROV NAME^F^^4;11^K:$L(X)>30!($L(X)<1) X
"^DD",162.5,162.5,74,3)
Answer must be 1-30 characters in length.
"^DD",162.5,162.5,74,21,0)
^^1^1^3110422^
"^DD",162.5,162.5,74,21,1,0)
Enter the Referring Provider's name found in the claim information.
"^DD",162.5,162.5,74,"DT")
3110422
"^DD",162.5,162.5,75,0)
REFERRING PROV NPI^F^^4;12^K:$L(X)>10!($L(X)<10) X
"^DD",162.5,162.5,75,3)
Answer must be 10 characters in length.
"^DD",162.5,162.5,75,21,0)
^^3^3^3110422^
"^DD",162.5,162.5,75,21,1,0)
Enter the Referring Provider's National Provider Identifier (NPI) found 
"^DD",162.5,162.5,75,21,2,0)
in the claim information. This value must be 10 characters, including any 
"^DD",162.5,162.5,75,21,3,0)
leading zeros.
"^DD",162.5,162.5,75,"DT")
3110422
"^DD",162.5,162.5,79,0)
LINE ITEM RENDERING PROV^162.579^^RPROV;0
"^DD",162.5,162.5,79,21,0)
^^7^7^3110517^
"^DD",162.5,162.5,79,21,1,0)
This multiple stores Rendering Provider information that is specific 
"^DD",162.5,162.5,79,21,2,0)
to a line item on the claim. A record should only be added to this 
"^DD",162.5,162.5,79,21,3,0)
multiple if the Rendering Provider for a line item is different from the 
"^DD",162.5,162.5,79,21,4,0)
Rendering Provider at the claim level. Example, if the PROC1 code is
"^DD",162.5,162.5,79,21,5,0)
entered and has a different Rendering Provider than the claim Rendering 
"^DD",162.5,162.5,79,21,6,0)
Provider (field #70) the multiple will store the different data. Line 
"^DD",162.5,162.5,79,21,7,0)
item #1 would be referencing PROC1; Line Item #5 would reference PROC5.
"^DD",162.5,162.518,0)
DESCRIPTION OF SUSPENSION SUB-FIELD^^.01^1
"^DD",162.5,162.518,0,"NM","DESCRIPTION OF SUSPENSION")

"^DD",162.5,162.518,0,"UP")
162.5
"^DD",162.5,162.518,.01,0)
DESCRIPTION OF SUSPENSION^WL^^0;1^Q
"^DD",162.5,162.518,.01,"DT")
2910117
"^DD",162.5,162.558,0)
ADJUSTMENT SUB-FIELD^^2^3
"^DD",162.5,162.558,0,"DT")
3030625
"^DD",162.5,162.558,0,"IX","B",162.558,.01)

"^DD",162.5,162.558,0,"NM","ADJUSTMENT")

"^DD",162.5,162.558,0,"UP")
162.5
"^DD",162.5,162.558,.01,0)
ADJUSTMENT REASON^*P161.91'^FB(161.91,^0;1^S DIC("S")="I $P($$AR^FBUTL1(Y),U,4)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",162.5,162.558,.01,1,0)
^.1
"^DD",162.5,162.558,.01,1,1,0)
162.558^B
"^DD",162.5,162.558,.01,1,1,1)
S ^FBAAI(DA(1),8,"B",$E(X,1,30),DA)=""
"^DD",162.5,162.558,.01,1,1,2)
K ^FBAAI(DA(1),8,"B",$E(X,1,30),DA)
"^DD",162.5,162.558,.01,3)
Select a HIPAA Adjustment (suspense) Reason Code.
"^DD",162.5,162.558,.01,12)
Only adjustment reasons that are applicable for Fee use can be selected.
"^DD",162.5,162.558,.01,12.1)
S DIC("S")="I $P($$AR^FBUTL1(Y),U,4)=1"
"^DD",162.5,162.558,.01,21,0)
^.001^2^2^3030625^^^^
"^DD",162.5,162.558,.01,21,1,0)
Adjustment reason codes explain why the amount paid differs from the 
"^DD",162.5,162.558,.01,21,2,0)
amount claimed.
"^DD",162.5,162.558,.01,"DT")
3030625
"^DD",162.5,162.558,1,0)
ADJUSTMENT GROUP^R*P161.92'^FB(161.92,^0;2^S DIC("S")="I $P($$AG^FBUTL1(Y),U,4)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",162.5,162.558,1,3)
Select a HIPAA Adjustment Group Code.
"^DD",162.5,162.558,1,12)
Only adjustment groups that are applicable for Fee use can be selected.
"^DD",162.5,162.558,1,12.1)
S DIC("S")="I $P($$AG^FBUTL1(Y),U,4)=1"
"^DD",162.5,162.558,1,21,0)
^.001^2^2^3030625^^^^
"^DD",162.5,162.558,1,21,1,0)
The Adjustment Group Code pertains to the previously entered adjustment 
"^DD",162.5,162.558,1,21,2,0)
reason code.
"^DD",162.5,162.558,1,"DT")
3030625
"^DD",162.5,162.558,2,0)
ADJUSTMENT AMOUNT^RNJ9,2X^^0;3^S:X["$" X=$P(X,"$",2) K:X'?."-".N.1".".2N!(X>999999.99)!(X<-999999.99) X I $D(X) K:+X=0 X
"^DD",162.5,162.558,2,3)
Type a non-zero Dollar Amount between -999999.99 and 999999.99, 2 Decimal Digits
"^DD",162.5,162.558,2,21,0)
^.001^2^2^3030625^^
"^DD",162.5,162.558,2,21,1,0)
Enter the dollar amount that is not being paid for this charge per the 
"^DD",162.5,162.558,2,21,2,0)
adjustment reason.
"^DD",162.5,162.558,2,"DT")
3030625
"^DD",162.5,162.559,0)
REMITTANCE REMARK SUB-FIELD^^.01^1
"^DD",162.5,162.559,0,"DT")
3030618
"^DD",162.5,162.559,0,"IX","B",162.559,.01)

"^DD",162.5,162.559,0,"NM","REMITTANCE REMARK")

"^DD",162.5,162.559,0,"UP")
162.5
"^DD",162.5,162.559,.01,0)
REMITTANCE REMARK^M*P161.93'^FB(161.93,^0;1^S DIC("S")="I $P($$RR^FBUTL1(Y),U,4)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",162.5,162.559,.01,1,0)
^.1
"^DD",162.5,162.559,.01,1,1,0)
162.559^B
"^DD",162.5,162.559,.01,1,1,1)
S ^FBAAI(DA(1),9,"B",$E(X,1,30),DA)=""
"^DD",162.5,162.559,.01,1,1,2)
K ^FBAAI(DA(1),9,"B",$E(X,1,30),DA)
"^DD",162.5,162.559,.01,3)
Select a HIPAA Remittance Remark Code.
"^DD",162.5,162.559,.01,12)
Only remittance remarks applicable for Fee use can be selected.
"^DD",162.5,162.559,.01,12.1)
S DIC("S")="I $P($$RR^FBUTL1(Y),U,4)=1"
"^DD",162.5,162.559,.01,21,0)
^.001^2^2^3030717^^^
"^DD",162.5,162.559,.01,21,1,0)
Select a remittance remark code to provide non-financial information 
"^DD",162.5,162.559,.01,21,2,0)
critical to understanding the adjudication of the claim.
"^DD",162.5,162.559,.01,"DT")
3030717
"^DD",162.5,162.579,0)
LINE ITEM RENDERING PROV SUB-FIELD^^.04^4
"^DD",162.5,162.579,0,"DT")
3110517
"^DD",162.5,162.579,0,"IX","B",162.579,.01)

"^DD",162.5,162.579,0,"NM","LINE ITEM RENDERING PROV")

"^DD",162.5,162.579,0,"UP")
162.5
"^DD",162.5,162.579,.01,0)
LINE ITEM NUMBER^MNJ1,0^^0;1^K:+X'=X!(X>5)!(X<0)!(X?.E1"."1N.N) X
"^DD",162.5,162.579,.01,1,0)
^.1
"^DD",162.5,162.579,.01,1,1,0)
162.579^B
"^DD",162.5,162.579,.01,1,1,1)
S ^FBAAI(DA(1),"RPROV","B",$E(X,1,30),DA)=""
"^DD",162.5,162.579,.01,1,1,2)
K ^FBAAI(DA(1),"RPROV","B",$E(X,1,30),DA)
"^DD",162.5,162.579,.01,3)
Type a number between 0 and 5, 0 decimal digits.
"^DD",162.5,162.579,.01,21,0)
^.001^4^4^3110517^^^
"^DD",162.5,162.579,.01,21,1,0)
Enter the line item number for the associated Rendering Provider 
"^DD",162.5,162.579,.01,21,2,0)
information. Example, Line item 3 has a Rendering Provider different than 
"^DD",162.5,162.579,.01,21,3,0)
the claim level Rendering Provider. You would enter 3 to associate this 
"^DD",162.5,162.579,.01,21,4,0)
different Rendering Provider to the line item 3 of the claim.
"^DD",162.5,162.579,.01,"DT")
3110517
"^DD",162.5,162.579,.02,0)
RENDERING PROV NAME^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",162.5,162.579,.02,3)
Answer must be 1-30 characters in length.
"^DD",162.5,162.579,.02,21,0)
^^2^2^3110422^
"^DD",162.5,162.579,.02,21,1,0)
Enter the associated line item Rendering Provider's name found in the 
"^DD",162.5,162.579,.02,21,2,0)
line item level claim information.
"^DD",162.5,162.579,.02,"DT")
3110422
"^DD",162.5,162.579,.03,0)
RENDERING PROV NPI^F^^0;3^K:$L(X)>10!($L(X)<10) X
"^DD",162.5,162.579,.03,3)
Answer must be 10 characters in length.
"^DD",162.5,162.579,.03,21,0)
^^2^2^3110517^
"^DD",162.5,162.579,.03,21,1,0)
Enter the associated line item Rendering Provider's National Provider 
"^DD",162.5,162.579,.03,21,2,0)
Identifier (NPI) for the line level claim information.
"^DD",162.5,162.579,.03,"DT")
3110422
"^DD",162.5,162.579,.04,0)
RENDERING PROV TAXONOMY CODE^F^^0;4^K:$L(X)>10!($L(X)<10) X
"^DD",162.5,162.579,.04,3)
Answer must be 10 characters in length.
"^DD",162.5,162.579,.04,21,0)
^^3^3^3110517^
"^DD",162.5,162.579,.04,21,1,0)
Enter the associated line item Rendering Provider's Taxonomy code found 
"^DD",162.5,162.579,.04,21,2,0)
in the line item level of the claim information. This value must be 10 
"^DD",162.5,162.579,.04,21,3,0)
characters, including any leading zeros.
"^DD",162.5,162.579,.04,"DT")
3110422
"^DIC",162.5,162.5,0)
FEE BASIS INVOICE^162.5
"^DIC",162.5,162.5,0,"GL")
^FBAAI(
"^DIC",162.5,162.5,"%D",0)
^^4^4^2940622^^^^
"^DIC",162.5,162.5,"%D",1,0)
This file contains the payment data associated with the inpatient
"^DIC",162.5,162.5,"%D",2,0)
hospital programs of FEE Basis.
"^DIC",162.5,162.5,"%D",3,0)
 
"^DIC",162.5,162.5,"%D",4,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",162.5,"B","FEE BASIS INVOICE",162.5)

"BLD",8564,6)
^109
**END**
**END**
