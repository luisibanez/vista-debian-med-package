Released FB*3.5*130 SEQ #112
Extracted from mail message
**KIDS**:FB*3.5*130^

**INSTALL NAME**
FB*3.5*130
"BLD",8482,0)
FB*3.5*130^FEE BASIS^0^3111101^y
"BLD",8482,4,0)
^9.64PA^161^2
"BLD",8482,4,161,0)
161
"BLD",8482,4,161,2,0)
^9.641^161.011^1
"BLD",8482,4,161,2,161.011,0)
ARCH ELIGIBILITY  (sub-file)
"BLD",8482,4,161,2,161.011,1,0)
^9.6411^5^3
"BLD",8482,4,161,2,161.011,1,3,0)
ARCH ELIGIBILITY DETERMINATION
"BLD",8482,4,161,2,161.011,1,4,0)
JUSTIFICATION
"BLD",8482,4,161,2,161.011,1,5,0)
VERIFICATION OF MILEAGE
"BLD",8482,4,161,222)
y^y^p^^^^n^^n
"BLD",8482,4,161,224)

"BLD",8482,4,161.35,0)
161.35
"BLD",8482,4,161.35,222)
y^y^f^^n^^y^o^n
"BLD",8482,4,"APDD",161,161.011)

"BLD",8482,4,"APDD",161,161.011,3)

"BLD",8482,4,"APDD",161,161.011,4)

"BLD",8482,4,"APDD",161,161.011,5)

"BLD",8482,4,"B",161,161)

"BLD",8482,4,"B",161.35,161.35)

"BLD",8482,6.3)
13
"BLD",8482,"INID")
^y
"BLD",8482,"INIT")
FBY130PO
"BLD",8482,"KRN",0)
^9.67PA^779.2^20
"BLD",8482,"KRN",.4,0)
.4
"BLD",8482,"KRN",.401,0)
.401
"BLD",8482,"KRN",.402,0)
.402
"BLD",8482,"KRN",.403,0)
.403
"BLD",8482,"KRN",.5,0)
.5
"BLD",8482,"KRN",.84,0)
.84
"BLD",8482,"KRN",3.6,0)
3.6
"BLD",8482,"KRN",3.8,0)
3.8
"BLD",8482,"KRN",9.2,0)
9.2
"BLD",8482,"KRN",9.8,0)
9.8
"BLD",8482,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",8482,"KRN",9.8,"NM",1,0)
FBARCH0^^0^B51834191
"BLD",8482,"KRN",9.8,"NM",2,0)
FBARCHU^^0^B24246185
"BLD",8482,"KRN",9.8,"NM",3,0)
FBARCHR0^^0^B122985826
"BLD",8482,"KRN",9.8,"NM","B","FBARCH0",1)

"BLD",8482,"KRN",9.8,"NM","B","FBARCHR0",3)

"BLD",8482,"KRN",9.8,"NM","B","FBARCHU",2)

"BLD",8482,"KRN",19,0)
19
"BLD",8482,"KRN",19,"NM",0)
^9.68A^4^4
"BLD",8482,"KRN",19,"NM",1,0)
FB PROJECT ARCH MENU^^0
"BLD",8482,"KRN",19,"NM",2,0)
FB ADD ARCH ELIGIBILITY^^0
"BLD",8482,"KRN",19,"NM",3,0)
FB VIEW ARCH ELIGIBILITY^^0
"BLD",8482,"KRN",19,"NM",4,0)
FBAA MAIN MENU^^2
"BLD",8482,"KRN",19,"NM","B","FB ADD ARCH ELIGIBILITY",2)

"BLD",8482,"KRN",19,"NM","B","FB PROJECT ARCH MENU",1)

"BLD",8482,"KRN",19,"NM","B","FB VIEW ARCH ELIGIBILITY",3)

"BLD",8482,"KRN",19,"NM","B","FBAA MAIN MENU",4)

"BLD",8482,"KRN",19.1,0)
19.1
"BLD",8482,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",8482,"KRN",19.1,"NM",1,0)
FB ARCH^^0
"BLD",8482,"KRN",19.1,"NM","B","FB ARCH",1)

"BLD",8482,"KRN",101,0)
101
"BLD",8482,"KRN",409.61,0)
409.61
"BLD",8482,"KRN",771,0)
771
"BLD",8482,"KRN",779.2,0)
779.2
"BLD",8482,"KRN",870,0)
870
"BLD",8482,"KRN",8989.51,0)
8989.51
"BLD",8482,"KRN",8989.52,0)
8989.52
"BLD",8482,"KRN",8994,0)
8994
"BLD",8482,"KRN","B",.4,.4)

"BLD",8482,"KRN","B",.401,.401)

"BLD",8482,"KRN","B",.402,.402)

"BLD",8482,"KRN","B",.403,.403)

"BLD",8482,"KRN","B",.5,.5)

"BLD",8482,"KRN","B",.84,.84)

"BLD",8482,"KRN","B",3.6,3.6)

"BLD",8482,"KRN","B",3.8,3.8)

"BLD",8482,"KRN","B",9.2,9.2)

"BLD",8482,"KRN","B",9.8,9.8)

"BLD",8482,"KRN","B",19,19)

"BLD",8482,"KRN","B",19.1,19.1)

"BLD",8482,"KRN","B",101,101)

"BLD",8482,"KRN","B",409.61,409.61)

"BLD",8482,"KRN","B",771,771)

"BLD",8482,"KRN","B",779.2,779.2)

"BLD",8482,"KRN","B",870,870)

"BLD",8482,"KRN","B",8989.51,8989.51)

"BLD",8482,"KRN","B",8989.52,8989.52)

"BLD",8482,"KRN","B",8994,8994)

"BLD",8482,"QUES",0)
^9.62^^
"BLD",8482,"REQB",0)
^9.611^1^1
"BLD",8482,"REQB",1,0)
FB*3.5*119^2
"BLD",8482,"REQB","B","FB*3.5*119",1)

"DATA",161.35,1,0)
OEF/OIF/OND, enrolled after 8/29/2011, geographic eligibility confirmed via web based tool^1
"DATA",161.35,2,0)
Enrolled between 10/1/2010 and 8/29/2011, geographic eligibility confirmed via web based tool^1
"DATA",161.35,3,0)
Enrolled prior to 10/1/2010, geographic eligibility confirmed via web based tool^1
"FIA",161)
FEE BASIS PATIENT
"FIA",161,0)
^FBAAA(
"FIA",161,0,0)
161P
"FIA",161,0,1)
y^y^p^^^^n^^n
"FIA",161,0,10)

"FIA",161,0,11)

"FIA",161,0,"RLRO")

"FIA",161,0,"VR")
3.5^FB
"FIA",161,161)
1
"FIA",161,161.011)
1
"FIA",161,161.011,3)

"FIA",161,161.011,4)

"FIA",161,161.011,5)

"FIA",161.35)
FEE BASIS PROJECT ARCH JUSTIFICATION
"FIA",161.35,0)
^FBAA(161.35,
"FIA",161.35,0,0)
161.35
"FIA",161.35,0,1)
y^y^f^^n^^y^o^n
"FIA",161.35,0,10)

"FIA",161.35,0,11)

"FIA",161.35,0,"RLRO")

"FIA",161.35,0,"VR")
3.5^FB
"FIA",161.35,161.35)
0
"INIT")
FBY130PO
"IX",161.35,161.35,"C",0)
161.35^C^This index is used for lookup of the .01 field.^R^^F^IR^I^161.35^^^^^LS
"IX",161.35,161.35,"C",1)
S ^FBAA(161.35,"C",$E(X,1,100),DA)=""
"IX",161.35,161.35,"C",2)
K ^FBAA(161.35,"C",$E(X,1,100),DA)
"IX",161.35,161.35,"C",2.5)
K ^FBAA(161.35,"C")
"IX",161.35,161.35,"C",11.1,0)
^.114IA^1^1
"IX",161.35,161.35,"C",11.1,1,0)
1^F^161.35^.01^100^1^F
"IX",161.35,161.35,"C",11.1,1,3)

"KRN",19,462,-1)
2^4
"KRN",19,462,0)
FBAA MAIN MENU^Fee Basis Main Menu^^M^.5^^^^^^^^y^1
"KRN",19,462,10,0)
^19.01IP^8^8
"KRN",19,462,10,8,0)
13470
"KRN",19,462,10,8,"^")
FB PROJECT ARCH MENU
"KRN",19,462,"U")
FEE BASIS MAIN MENU
"KRN",19,13469,-1)
0^2
"KRN",19,13469,0)
FB ADD ARCH ELIGIBILITY^Add/Edit Project ARCH Eligibility^^R^^FB ARCH^^^^^^FEE BASIS^y
"KRN",19,13469,1,0)
^^2^2^3110504^
"KRN",19,13469,1,1,0)
This option is used to add or edit Project ARCH Eligibility for a Fee 
"KRN",19,13469,1,2,0)
Basis patient.
"KRN",19,13469,25)
ADD^FBARCHU
"KRN",19,13469,"U")
ADD/EDIT PROJECT ARCH ELIGIBIL
"KRN",19,13470,-1)
0^1
"KRN",19,13470,0)
FB PROJECT ARCH MENU^Project ARCH Menu^^M^^FB ARCH^^^^^^FEE BASIS^y
"KRN",19,13470,1,0)
^^1^1^3110504^
"KRN",19,13470,1,1,0)
This menu contains options associated with the Project ARCH Pilot Project.
"KRN",19,13470,10,0)
^19.01IP^2^2
"KRN",19,13470,10,1,0)
13469^AD^1
"KRN",19,13470,10,1,"^")
FB ADD ARCH ELIGIBILITY
"KRN",19,13470,10,2,0)
13471^VW^2
"KRN",19,13470,10,2,"^")
FB VIEW ARCH ELIGIBILITY
"KRN",19,13470,99)
62243,36844
"KRN",19,13470,"U")
PROJECT ARCH MENU
"KRN",19,13471,-1)
0^3
"KRN",19,13471,0)
FB VIEW ARCH ELIGIBILITY^View Project ARCH Eligibility^^R^^FB ARCH^^^^^^FEE BASIS^y
"KRN",19,13471,1,0)
^^2^2^3110510^
"KRN",19,13471,1,1,0)
This option allows Fee Basis Clinical Application Coordinators to view 
"KRN",19,13471,1,2,0)
the Project ARCH eligible patients.
"KRN",19,13471,25)
VIEW^FBARCHU
"KRN",19,13471,"U")
VIEW PROJECT ARCH ELIGIBILITY
"KRN",19.1,576,-1)
0^1
"KRN",19.1,576,0)
FB ARCH^Project ARCH security key
"KRN",19.1,576,1,0)
^^2^2^3110601^
"KRN",19.1,576,1,1,0)
This Security Key is used to control access to the Project ARCH Menu and 
"KRN",19.1,576,1,2,0)
associated options.
"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",60,-1)
1^1
"PKG",60,0)
FEE BASIS^FB^Used to pay private vendors
"PKG",60,20,0)
^9.402P^1^1
"PKG",60,20,1,0)
2^^FBPMRG
"PKG",60,20,1,1)

"PKG",60,20,"B",2,1)

"PKG",60,22,0)
^9.49I^1^1
"PKG",60,22,1,0)
3.5^2950130^2950313
"PKG",60,22,1,"PAH",1,0)
130^3111101
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","FBARCH0")
0^1^B51834191^n/a
"RTN","FBARCH0",1,0)
FBARCH0 ; HINOIFO/RVD - ARCH IMPORT ELIGIBILITY AND UTILITY ; 01/08/11 12:30pm
"RTN","FBARCH0",2,0)
 ;;3.5;FEE BASIS;**119,130**;JAN 30, 1995;Build 13
"RTN","FBARCH0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBARCH0",4,0)
 ;Integration Agreements:
"RTN","FBARCH0",5,0)
 ; ^DPT( - #2070, 10035
"RTN","FBARCH0",6,0)
 ; ^DIE - #2053
"RTN","FBARCH0",7,0)
 ; ^VASITE -#10112
"RTN","FBARCH0",8,0)
 ; ^XUAF4 - #2171
"RTN","FBARCH0",9,0)
 ; ^DIC(4 - #10090
"RTN","FBARCH0",10,0)
 ; ^MPIF001 - #2701
"RTN","FBARCH0",11,0)
 ; @XPDGREF - 2433
"RTN","FBARCH0",12,0)
 ; DT^DILF - #2054
"RTN","FBARCH0",13,0)
 Q
"RTN","FBARCH0",14,0)
START ;input SAS data file
"RTN","FBARCH0",15,0)
 ;the imported file is located in certain directory
"RTN","FBARCH0",16,0)
 N X,Y,FBDIR,FBVMS,FBFILE,FBREAD,FBTAB
"RTN","FBARCH0",17,0)
 S FBDIR="SYS$USER:[DAYO]"   ;for testing, use your own default directory
"RTN","FBARCH0",18,0)
 W !!,"Enter VMS directory :"_FBDIR_"//" R X:DTIME
"RTN","FBARCH0",19,0)
 Q:X="^"  S:X'="" FBDIR=X
"RTN","FBARCH0",20,0)
 R !!,"Enter VMS file name :",FBVMS:DTIME
"RTN","FBARCH0",21,0)
 Q:"^"[FBVMS
"RTN","FBARCH0",22,0)
 S FBFILE=FBDIR_FBVMS
"RTN","FBARCH0",23,0)
 W !!,"Full name of input file is ",FBFILE,!
"RTN","FBARCH0",24,0)
 S DIR(0)="Y",DIR("A",1)="Import ARCH ELIGIBILITY file.",DIR("A",2)=" "
"RTN","FBARCH0",25,0)
 S DIR("A")="Do you want to import data from "_FBFILE
"RTN","FBARCH0",26,0)
 S DIR("B")="No"
"RTN","FBARCH0",27,0)
 D ^DIR K DIR I 'Y W !!?5,"Nothing Done." D CLEANUP Q
"RTN","FBARCH0",28,0)
 D OPEN^%ZISH("FILE",FBDIR,FBVMS,"R")
"RTN","FBARCH0",29,0)
 I POP W !?3,"** This file cannot be opened. **" G ABEND
"RTN","FBARCH0",30,0)
 S FBTAB="^",FBCOUNT=0,FBREAD=0
"RTN","FBARCH0",31,0)
 ;S FBTAB=$C(9)
"RTN","FBARCH0",32,0)
 W !,"Loading data into Fee Basis Patient file (#161)."
"RTN","FBARCH0",33,0)
 ;
"RTN","FBARCH0",34,0)
R1 ;A(1) = Integration Control Number (ICN)
"RTN","FBARCH0",35,0)
 ;DBIA # 2701 - Master Patient Index
"RTN","FBARCH0",36,0)
 ;A(2) = a field for validity check
"RTN","FBARCH0",37,0)
 ;A(3) = eligibility code: 1 = yes, 0 = no
"RTN","FBARCH0",38,0)
 ;if theres no A(3), it assumes it's a 1 for yes
"RTN","FBARCH0",39,0)
 U IO R X:DTIME I $$STATUS^%ZISH G EOF
"RTN","FBARCH0",40,0)
 K A,DFN,FBARCH,FBICN,FBDTE S FBREAD=FBREAD+1
"RTN","FBARCH0",41,0)
 F I=1:1:3 S A(I)=$P(X,FBTAB,I)
"RTN","FBARCH0",42,0)
 I $L(A(1))'=17 D  G R1 ; skip header record, only record start with a 10 digits ICN.
"RTN","FBARCH0",43,0)
 . W !,"First field is "_A(1)_", record is not imported"
"RTN","FBARCH0",44,0)
 . Q
"RTN","FBARCH0",45,0)
 I A(1)="" D  G R1 ; skip null record
"RTN","FBARCH0",46,0)
 . W !,"First field is null, record is not imported"
"RTN","FBARCH0",47,0)
 . Q
"RTN","FBARCH0",48,0)
 ;only process if data (ICN) belongs to the station & second check is valid
"RTN","FBARCH0",49,0)
 S FBICN=$P(A(1),"V"),FBCHK=$P(A(1),"V",2)
"RTN","FBARCH0",50,0)
 D DT^DILF("E",A(2),.FBDTE)
"RTN","FBARCH0",51,0)
 S DFN=$$GETDFN^MPIF001(FBICN)
"RTN","FBARCH0",52,0)
 S FBARCH=$S($G(A(3)):1,A(3)=0:0,1:1)
"RTN","FBARCH0",53,0)
 I $G(DFN),$D(^DPT(DFN,"MPI")),$P(^("MPI"),U,2)=FBCHK D SETREC S FBCOUNT=FBCOUNT+1 I '(FBCOUNT#10) U 0 W "."
"RTN","FBARCH0",54,0)
 G R1
"RTN","FBARCH0",55,0)
 ;
"RTN","FBARCH0",56,0)
EOF D CLOSE^%ZISH("FILE")
"RTN","FBARCH0",57,0)
 S FBTXT=FBREAD_" records read, "_FBCOUNT_" records loaded." D DISP
"RTN","FBARCH0",58,0)
 D CLEANUP
"RTN","FBARCH0",59,0)
 Q
"RTN","FBARCH0",60,0)
 ;
"RTN","FBARCH0",61,0)
SETREC ;update Fee Basis Patient record (file #161) for ARCH elilibility
"RTN","FBARCH0",62,0)
 N FBDATA,FBIEN,FBIEN2,FBI11
"RTN","FBARCH0",63,0)
 S DA=DFN
"RTN","FBARCH0",64,0)
 I '$D(^FBAAA(DFN,0)) K DD,DO S (X,DINUM)=DFN,DIC="^FBAAA(",DIC(0)="LM",DLAYGO=161 D FILE^DICN K DIC,DA,DD,DO,DLAYGO
"RTN","FBARCH0",65,0)
 ;update eligibility if different
"RTN","FBARCH0",66,0)
 I $D(^FBAAA(DFN,"ARCHFEE")) S FBI11=$O(^FBAAA(DFN,"ARCHFEE"," "),-1) Q:($P(^FBAAA(DFN,"ARCHFEE",FBI11,0),U,2)=FBARCH)
"RTN","FBARCH0",67,0)
 S FBIEN2="+2,"_DFN
"RTN","FBARCH0",68,0)
 S FBDATA(161.011,FBIEN2_",",.01)=FBDTE
"RTN","FBARCH0",69,0)
 S FBDATA(161.011,FBIEN2_",",2)=FBARCH
"RTN","FBARCH0",70,0)
 D UPDATE^DIE("","FBDATA")
"RTN","FBARCH0",71,0)
 K FBDATA
"RTN","FBARCH0",72,0)
 Q
"RTN","FBARCH0",73,0)
 ;
"RTN","FBARCH0",74,0)
ABEND U 0 W !,"Processing abended."
"RTN","FBARCH0",75,0)
 D CLEANUP
"RTN","FBARCH0",76,0)
 Q
"RTN","FBARCH0",77,0)
 ;
"RTN","FBARCH0",78,0)
DISP ;display one-line text either interactively or within KIDS installation
"RTN","FBARCH0",79,0)
 I '$D(XPDNM)#2 U 0 W !?5,FBTXT
"RTN","FBARCH0",80,0)
 E  D BMES^XPDUTL(FBTXT)
"RTN","FBARCH0",81,0)
 Q
"RTN","FBARCH0",82,0)
 ;
"RTN","FBARCH0",83,0)
PRET ;entry point for a pre-transport routine, instead of
"RTN","FBARCH0",84,0)
 ;using a global.  ARCH data should be in ^XTMP("FEEARCH") for transport
"RTN","FBARCH0",85,0)
 ;
"RTN","FBARCH0",86,0)
 M @XPDGREF@("^XTMP(""FEEARCH"")")=^XTMP("FEEARCH")
"RTN","FBARCH0",87,0)
 Q
"RTN","FBARCH0",88,0)
 ;
"RTN","FBARCH0",89,0)
POST ;entry to import SAS data to VISTA Fee Basis Patient File (#161) using pre-transport rou.
"RTN","FBARCH0",90,0)
 ;only process if data (ICN) belongs to the station & second check is valid
"RTN","FBARCH0",91,0)
 N FBV,FBCOUNT,FBI,FBICN,FBDTE,FBCHK,DFN,FB4,FB47,FBA,FBSTA
"RTN","FBARCH0",92,0)
 ;only install ARCH data to 5 VISNs (1,6,15,18 & 19)
"RTN","FBARCH0",93,0)
 S FBV="VISN "
"RTN","FBARCH0",94,0)
 F FBI=FBV_1,FBV_6,FBV_15,FBV_18,FBV_19 Q:FBI=""  S FB4=$O(^DIC(4,"B",FBI,0)) D
"RTN","FBARCH0",95,0)
 .D CHILDREN^XUAF4("FBA","`"_FB4,"VISN")
"RTN","FBARCH0",96,0)
 S FBSTA=+$$SITE^VASITE()
"RTN","FBARCH0",97,0)
 Q:'$D(FBA("C",FBSTA))
"RTN","FBARCH0",98,0)
 ;
"RTN","FBARCH0",99,0)
 D MES^XPDUTL(" ")
"RTN","FBARCH0",100,0)
 D MES^XPDUTL("Populating ARCH ELIGIBILITY in file (#161).....")
"RTN","FBARCH0",101,0)
 ;
"RTN","FBARCH0",102,0)
 K ^TMP("FEEARCH",$J)
"RTN","FBARCH0",103,0)
 M ^TMP("FEEARCH",$J)=@XPDGREF@("^XTMP(""FEEARCH"")")
"RTN","FBARCH0",104,0)
 S XPDIDTOT=$P(^TMP("FEEARCH",$J,0),U,4),FBCOUNT=0
"RTN","FBARCH0",105,0)
 S FBI=0
"RTN","FBARCH0",106,0)
 F  S FBI=$O(^TMP("FEEARCH",$J,FBI)) Q:'FBI  D
"RTN","FBARCH0",107,0)
 . S FBCOUNT=FBCOUNT+1 I '(FBCOUNT#100) D UPDATE^XPDID(FBCOUNT)
"RTN","FBARCH0",108,0)
 . K FBICN,FBDTE,FBCHK,FBTMP,DFN
"RTN","FBARCH0",109,0)
 . S FBTMP=$G(^TMP("FEEARCH",$J,FBI,0))
"RTN","FBARCH0",110,0)
 . S FBICN=$P(FBTMP,U),FBARCH=$P(FBTMP,U,2),FBDTE=$P(FBTMP,U,3),FBCHK=$P(FBTMP,U,4)
"RTN","FBARCH0",111,0)
 . S DFN=$$GETDFN^MPIF001(FBICN)
"RTN","FBARCH0",112,0)
 . I $G(DFN),$D(^DPT(DFN,"MPI")),$P(^("MPI"),U,2)=FBCHK D SETREC
"RTN","FBARCH0",113,0)
 D UPDATE^XPDID(XPDIDTOT)
"RTN","FBARCH0",114,0)
 Q
"RTN","FBARCH0",115,0)
 ;
"RTN","FBARCH0",116,0)
PST1 ;entry point if data is imported through a global
"RTN","FBARCH0",117,0)
 N FBTXT
"RTN","FBARCH0",118,0)
 S FBCOUNT=0
"RTN","FBARCH0",119,0)
 S FBTXT="Importing the ARCH Eligibility to Fee Basis Patient File.."
"RTN","FBARCH0",120,0)
 D DISP
"RTN","FBARCH0",121,0)
 F I=0:0 S I=$O(^FBARCH(161.1,I)) Q:I'>0  D
"RTN","FBARCH0",122,0)
 .K FBICN,FBDTE,FBCHK
"RTN","FBARCH0",123,0)
 .S FBICN=$P(^FBARCH(161.1,I,0),U),FBARCH=$P(^(0),U,2),FBDTE=$P(^(0),U,3),FBCHK=$P(^(0),U,4)
"RTN","FBARCH0",124,0)
 .S DFN=$$GETDFN^MPIF001(FBICN)
"RTN","FBARCH0",125,0)
 .I $G(DFN),$D(^DPT(DFN,"MPI")),$P(^("MPI"),U,2)=FBCHK D SETREC S FBCOUNT=FBCOUNT+1
"RTN","FBARCH0",126,0)
 S FBTXT="Done importing ARCH data to Fee Basis Patient File!!!!!"
"RTN","FBARCH0",127,0)
 D DISP
"RTN","FBARCH0",128,0)
 Q
"RTN","FBARCH0",129,0)
 ;
"RTN","FBARCH0",130,0)
TMP ;set-up ARCH data to ^XTMP("FEEARCH" temporary global for kids transport
"RTN","FBARCH0",131,0)
 ;ICN = piece 1
"RTN","FBARCH0",132,0)
 ;ARCH ELIGIBILITY DATE = piece 2
"RTN","FBARCH0",133,0)
 S FBDIR="SYS$USER:[DAYO]"  ;use this as a default for testing
"RTN","FBARCH0",134,0)
 W !!,"Enter VMS directory :"_FBDIR_"//" R X:DTIME
"RTN","FBARCH0",135,0)
 Q:X="^"  S:X'="" FBDIR=X
"RTN","FBARCH0",136,0)
 R !!,"Enter VMS file name :",FBVMS:DTIME
"RTN","FBARCH0",137,0)
 Q:"^"[FBVMS
"RTN","FBARCH0",138,0)
 S FBFILE=FBDIR_FBVMS
"RTN","FBARCH0",139,0)
 W !!,"Full name of input file is ",FBFILE,!
"RTN","FBARCH0",140,0)
 D OPEN^%ZISH("FILE",FBDIR,FBVMS,"R")
"RTN","FBARCH0",141,0)
 I POP W !?3,"** This file cannot be opened. **" G ABEND
"RTN","FBARCH0",142,0)
 S FBTAB="^",FBCOUNT=0,FBREAD=0
"RTN","FBARCH0",143,0)
LOOP U IO R X:DTIME I $$STATUS^%ZISH S ^XTMP("FEEARCH",0)="^^^"_FBCOUNT G EOF
"RTN","FBARCH0",144,0)
 K A,FBICN,FBDTE,FBCHK,FBARCH S FBREAD=FBREAD+1
"RTN","FBARCH0",145,0)
 I '(FBREAD#500) U 0 W "."
"RTN","FBARCH0",146,0)
 F I=1:1:3 S A(I)=$P(X,FBTAB,I)
"RTN","FBARCH0",147,0)
 I $L(A(1))'=17 G LOOP ; skip header record, only record start with a 10 digits ICN +7 chksum
"RTN","FBARCH0",148,0)
 I A(1)="" G LOOP ; skip null record
"RTN","FBARCH0",149,0)
 S FBICN=$P(A(1),"V"),FBCHK=$P(A(1),"V",2)
"RTN","FBARCH0",150,0)
 S FBARCH=$S($G(A(3)):1,A(3)=0:0,1:1)
"RTN","FBARCH0",151,0)
 D DT^DILF("E",A(2),.FBDTE)
"RTN","FBARCH0",152,0)
 S FBCOUNT=FBCOUNT+1 S ^XTMP("FEEARCH",FBCOUNT,0)=FBICN_U_FBARCH_U_FBDTE_U_FBCHK
"RTN","FBARCH0",153,0)
 G LOOP
"RTN","FBARCH0",154,0)
 Q
"RTN","FBARCH0",155,0)
 ;
"RTN","FBARCH0",156,0)
CLEANUP ;
"RTN","FBARCH0",157,0)
 K A,F
"RTN","FBARCH0",158,0)
 Q
"RTN","FBARCH0",159,0)
 ;
"RTN","FBARCH0",160,0)
ELIG(DFN,FBBDT,FBEDT,FBDATA) ;this function returns if pt is ARCH eligible or NOT
"RTN","FBARCH0",161,0)
 ; input: = DFN - patient IEN (pointer to file #161)
"RTN","FBARCH0",162,0)
 ;          FBBDT - beginning dt
"RTN","FBARCH0",163,0)
 ;          FBEDT - ending dt
"RTN","FBARCH0",164,0)
 ; output: FBDATA = 1 if eligible and FBDATA()=DFN^0 or 1^date of eligibility
"RTN","FBARCH0",165,0)
 ;          from most recent to the oldest
"RTN","FBARCH0",166,0)
 ;  FBDATA = 0 if not eligibile
"RTN","FBARCH0",167,0)
 ;
"RTN","FBARCH0",168,0)
 N FBI,FBDAT,FBEL,FBHDT,FBCNT,FBELDT,FBSAV1,FBSAV2,FBJ
"RTN","FBARCH0",169,0)
 S (FBHDT,FBEL,FBELDT,FBCNT,FBDATA)=0
"RTN","FBARCH0",170,0)
 S FBBDT=$S(FBBDT>0:FBBDT,1:0)
"RTN","FBARCH0",171,0)
 S FBEDT=$S(FBEDT>0:FBEDT,1:9999999)
"RTN","FBARCH0",172,0)
 Q:(FBEDT<FBBDT) FBDATA
"RTN","FBARCH0",173,0)
 Q:'$D(^FBAAA(DFN,"ARCHFEE")) FBDATA
"RTN","FBARCH0",174,0)
 S FBI=$O(^FBAAA(DFN,"ARCHFEE","B"," "),-1)
"RTN","FBARCH0",175,0)
 S FBJ=$O(^FBAAA(DFN,"ARCHFEE","B",FBI," "),-1),FBDAT=$G(^FBAAA(DFN,"ARCHFEE",FBJ,0))
"RTN","FBARCH0",176,0)
 I (FBEDT=FBI)!(FBEDT>FBI) D
"RTN","FBARCH0",177,0)
 .S FBEL=$P(FBDAT,U,2)
"RTN","FBARCH0",178,0)
 .S FBCNT=FBCNT+1 S FBDATA(FBCNT)=FBEL_U_FBI,FBDATA=FBEL
"RTN","FBARCH0",179,0)
 F  S FBI=$O(^FBAAA(DFN,"ARCHFEE","B",FBI),-1) Q:FBI'>0  D
"RTN","FBARCH0",180,0)
 .S FBJ=$O(^FBAAA(DFN,"ARCHFEE","B",FBI,0)),FBDAT=$G(^FBAAA(DFN,"ARCHFEE",FBJ,0))
"RTN","FBARCH0",181,0)
 .Q:(FBEDT<FBI)
"RTN","FBARCH0",182,0)
 .S FBEL=$P(FBDAT,U,2),FBCNT=FBCNT+1
"RTN","FBARCH0",183,0)
 .S FBDATA(FBCNT)=FBEL_U_FBI
"RTN","FBARCH0",184,0)
 ;
"RTN","FBARCH0",185,0)
 S:$G(FBDATA(1)) FBDATA=$P(FBDATA(1),U)
"RTN","FBARCH0",186,0)
 Q FBDATA
"RTN","FBARCH0",187,0)
 ;
"RTN","FBARCH0",188,0)
LIST(FBBDT,FBEDT) ;this function returns a list of ARCH patients w/in the date range.
"RTN","FBARCH0",189,0)
 ; input: = FBBGT - beggingin dt
"RTN","FBARCH0",190,0)
 ;          FBEDT - ending dt
"RTN","FBARCH0",191,0)
 ; output:= number of ARCH eligible pt and ^TMP($J,"ARCHFEE",#)=DFN^0 or 1^date of eligibility
"RTN","FBARCH0",192,0)
 ;          from the OLDEST to the MOST RECENT
"RTN","FBARCH0",193,0)
 ; FBJ - internal entry number of file #161 which is DINUM to Patient File (2)
"RTN","FBARCH0",194,0)
 N FBCOUNT,FBI,FBJ,FBEDAT,FBHDAT,FBELDA,FBELDT,FBEL,FBHDT,FBH,FBDFI
"RTN","FBARCH0",195,0)
 K ^TMP($J,"ARCHFEE") S (FBI,FBCOUNT,FBELDT)=0
"RTN","FBARCH0",196,0)
 Q:'$D(^FBAAA("ARCH")) FBCOUNT
"RTN","FBARCH0",197,0)
 S FBBDT=$S(FBBDT>0:FBBDT,1:0)
"RTN","FBARCH0",198,0)
 S FBEDT=$S(FBEDT>0:FBEDT,1:9999999)
"RTN","FBARCH0",199,0)
 Q:(FBEDT<FBBDT) FBCOUNT
"RTN","FBARCH0",200,0)
 F  S FBI=$O(^FBAAA("ARCH",FBI)) Q:FBI=""  D
"RTN","FBARCH0",201,0)
 .F FBJ=0:0 S FBJ=$O(^FBAAA("ARCH",FBI,FBJ)) Q:FBJ'>0  D
"RTN","FBARCH0",202,0)
 ..S FBDFI=$O(^FBAAA("ARCH",FBI,FBJ,0))
"RTN","FBARCH0",203,0)
 ..S FBEDAT=$G(^FBAAA(FBJ,"ARCHFEE",FBDFI,0)),FBELDT=$P(FBEDAT,U)
"RTN","FBARCH0",204,0)
 ..Q:(FBEDT<FBELDT)
"RTN","FBARCH0",205,0)
 ..S FBCOUNT=FBCOUNT+1
"RTN","FBARCH0",206,0)
 ..S ^TMP($J,"ARCHFEE",FBCOUNT)=FBJ_U_$P(FBEDAT,U,2)_U_FBELDT
"RTN","FBARCH0",207,0)
 Q FBCOUNT
"RTN","FBARCH0",208,0)
 ;
"RTN","FBARCH0",209,0)
PARSE(FB) ; parse - remove double quotes and trailing blanks if any
"RTN","FBARCH0",210,0)
 N I,B
"RTN","FBARCH0",211,0)
 Q:FB="" FB
"RTN","FBARCH0",212,0)
 S:$E(FB,1)="""" FB=$E(FB,2,$L(FB))
"RTN","FBARCH0",213,0)
 S:$E(FB,$L(FB))="""" FB=$E(FB,1,($L(FB)-1))
"RTN","FBARCH0",214,0)
 Q:$E(FB,$L(FB))'=" " FB ; Last char is non-blank
"RTN","FBARCH0",215,0)
 F I=$L(FB):-1:1 Q:$E(FB,I)'=" "  S B=$E(FB,1,I-1)
"RTN","FBARCH0",216,0)
 S FB=B
"RTN","FBARCH0",217,0)
 Q FB
"RTN","FBARCHR0")
0^3^B122985826^n/a
"RTN","FBARCHR0",1,0)
FBARCHR0 ; HINOIFO/BNT - ARCH Reports ; 05/09/11 5:30pm
"RTN","FBARCHR0",2,0)
 ;;3.5;FEE BASIS;**130**;JAN 30, 1995;Build 13
"RTN","FBARCHR0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBARCHR0",4,0)
 ;Integration Agreements:
"RTN","FBARCHR0",5,0)
 ;
"RTN","FBARCHR0",6,0)
 Q
"RTN","FBARCHR0",7,0)
 ;
"RTN","FBARCHR0",8,0)
 ;
"RTN","FBARCHR0",9,0)
SELSMDET(DFLT) ; Display (S)ummary or (D)etail Format
"RTN","FBARCHR0",10,0)
 ; Input Variable -> DFLT = 1 Summary
"RTN","FBARCHR0",11,0)
 ;                          2 Detail
"RTN","FBARCHR0",12,0)
 ;                          
"RTN","FBARCHR0",13,0)
 ; Return Value ->   1 = Summary
"RTN","FBARCHR0",14,0)
 ;                   0 = Detail
"RTN","FBARCHR0",15,0)
 ;                   ^ = Exit
"RTN","FBARCHR0",16,0)
 ;
"RTN","FBARCHR0",17,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBARCHR0",18,0)
 S DFLT=$S($G(DFLT)=1:"Summary",$G(DFLT)=0:"Detail",1:"Detail")
"RTN","FBARCHR0",19,0)
 S DIR(0)="S^S:Summary;D:Detail",DIR("A")="Display (S)ummary or (D)etail Format",DIR("B")=DFLT
"RTN","FBARCHR0",20,0)
 D ^DIR
"RTN","FBARCHR0",21,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","FBARCHR0",22,0)
 S Y=$S(Y="S":1,Y="D":0,1:Y)
"RTN","FBARCHR0",23,0)
 Q Y
"RTN","FBARCHR0",24,0)
 ;
"RTN","FBARCHR0",25,0)
SELEXCEL() ; - Returns whether to capture data for Excel report.
"RTN","FBARCHR0",26,0)
 ; Output: EXCEL = 1 - YES (capture data) / 0 - NO (DO NOT capture data)
"RTN","FBARCHR0",27,0)
 ;
"RTN","FBARCHR0",28,0)
 N EXCEL,DIR,DIRUT,DTOUT,DUOUT,DIROUT
"RTN","FBARCHR0",29,0)
 ;
"RTN","FBARCHR0",30,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("T")=DTIME W !
"RTN","FBARCHR0",31,0)
 S DIR("A")="Do you want to capture report data for an Excel document"
"RTN","FBARCHR0",32,0)
 S DIR("?")="^D HEXC^FBARCHR0"
"RTN","FBARCHR0",33,0)
 D ^DIR K DIR I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) Q "^"
"RTN","FBARCHR0",34,0)
 K DIROUT,DTOUT,DUOUT,DIRUT
"RTN","FBARCHR0",35,0)
 S EXCEL=0 I Y S EXCEL=1
"RTN","FBARCHR0",36,0)
 ;
"RTN","FBARCHR0",37,0)
 ;Display Excel display message
"RTN","FBARCHR0",38,0)
 I EXCEL=1 D EXMSG
"RTN","FBARCHR0",39,0)
 ;
"RTN","FBARCHR0",40,0)
 Q EXCEL
"RTN","FBARCHR0",41,0)
 ;
"RTN","FBARCHR0",42,0)
SELPAT(DFLT) ; - Returns either a Fee Basis Patient IEN or 0 for All patients
"RTN","FBARCHR0",43,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBARCHR0",44,0)
 S DFLT=$S($G(DFLT)=1:"One Patient",$G(DFLT)=0:"All Patients",1:"All Patients")
"RTN","FBARCHR0",45,0)
 S DIR(0)="S^P:One Patient;A:All Patients",DIR("A")="Display One (P)atient or (A)ll Patients",DIR("B")=DFLT
"RTN","FBARCHR0",46,0)
 D ^DIR
"RTN","FBARCHR0",47,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","FBARCHR0",48,0)
 S Y=$S(Y="P":1,Y="A":0,1:Y)
"RTN","FBARCHR0",49,0)
 I Y D
"RTN","FBARCHR0",50,0)
 . N DIR,DIRUT,DTOUT,DUOUT
"RTN","FBARCHR0",51,0)
 . ;Prompt to select FEE BASIS PATIENT file entry
"RTN","FBARCHR0",52,0)
 . S DIR(0)="P^161:EMZ",DIR("S")="I $D(^FBAAA(Y,""ARCHFEE"",0))"
"RTN","FBARCHR0",53,0)
 . D ^DIR I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","FBARCHR0",54,0)
 . I +Y S Y=+Y
"RTN","FBARCHR0",55,0)
 Q Y
"RTN","FBARCHR0",56,0)
 ;            
"RTN","FBARCHR0",57,0)
SELDATE(DFLT) ; Select Date Range
"RTN","FBARCHR0",58,0)
 ; Input Variable -> DFLT = 1 - ARCH Eligibility Date
"RTN","FBARCHR0",59,0)
 ;                          0 - All Dates
"RTN","FBARCHR0",60,0)
 ;
"RTN","FBARCHR0",61,0)
 ; Return Value -> P1^P2
"RTN","FBARCHR0",62,0)
 ; 
"RTN","FBARCHR0",63,0)
 ;           where P1 = From Date
"RTN","FBARCHR0",64,0)
 ;                    = ^ Exit
"RTN","FBARCHR0",65,0)
 ;                 P2 = To Date
"RTN","FBARCHR0",66,0)
 ;                    = blank for Exit
"RTN","FBARCHR0",67,0)
 ;
"RTN","FBARCHR0",68,0)
 N DIR,DIRUT,DTOUT,DUOUT,VAL,X,Y
"RTN","FBARCHR0",69,0)
 S DFLT=$S($G(DFLT)=1:"ARCH Eligibility Date",$G(DFLT)=0:"All",1:"All")
"RTN","FBARCHR0",70,0)
 S DIR(0)="S^D:ARCH Eligibility Date;A:All",DIR("A")="Select a beginning ARCH Eligibility (D)ate or (A)ll",DIR("B")=DFLT
"RTN","FBARCHR0",71,0)
 D ^DIR
"RTN","FBARCHR0",72,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","FBARCHR0",73,0)
 S Y=$S(Y="D":1,Y="A":0,1:Y)
"RTN","FBARCHR0",74,0)
 I Y'=1 Q Y
"RTN","FBARCHR0",75,0)
 ;
"RTN","FBARCHR0",76,0)
 S VAL="",DIR(0)="DA^:DT:EX",DIR("A")="Beginning ARCH Eligibility Date: ",DIR("B")="SEP 30, 2010"
"RTN","FBARCHR0",77,0)
 W ! D ^DIR
"RTN","FBARCHR0",78,0)
 ;
"RTN","FBARCHR0",79,0)
 ;Check for "^", timeout, or blank entry
"RTN","FBARCHR0",80,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1)!($G(X)="") S VAL="^"
"RTN","FBARCHR0",81,0)
 ;
"RTN","FBARCHR0",82,0)
 I VAL="" D
"RTN","FBARCHR0",83,0)
 .S $P(VAL,U)=Y
"RTN","FBARCHR0",84,0)
 .S DIR(0)="DA^"_VAL_":DT:EX",DIR("A")="   Ending ARCH Eligibility Date: ",DIR("B")="T"
"RTN","FBARCHR0",85,0)
 .D ^DIR
"RTN","FBARCHR0",86,0)
 .;
"RTN","FBARCHR0",87,0)
 .;Check for "^", timeout, or blank entry
"RTN","FBARCHR0",88,0)
 .I ($G(DUOUT)=1)!($G(DTOUT)=1)!($G(X)="") S VAL="^" Q
"RTN","FBARCHR0",89,0)
 .;
"RTN","FBARCHR0",90,0)
 .;Define Entry
"RTN","FBARCHR0",91,0)
 .S $P(VAL,U,2)=Y
"RTN","FBARCHR0",92,0)
 ;
"RTN","FBARCHR0",93,0)
 Q VAL
"RTN","FBARCHR0",94,0)
 ;
"RTN","FBARCHR0",95,0)
SELELIG(DFLT) ; Select ARCH Eligibility Status
"RTN","FBARCHR0",96,0)
 ; Input Variable -> DFLT = 0 - NO patient is not ARCH eligible
"RTN","FBARCHR0",97,0)
 ;                          1 - YES patient is ARCH eligible
"RTN","FBARCHR0",98,0)
 ;                          2 - BOTH
"RTN","FBARCHR0",99,0)
 ;
"RTN","FBARCHR0",100,0)
 ; Return Value ->   0 - NO patient is not ARCH eligible
"RTN","FBARCHR0",101,0)
 ;                   1 - YES patient is ARCH eligible
"RTN","FBARCHR0",102,0)
 ;                   2 - BOTH
"RTN","FBARCHR0",103,0)
 ;                   ^ - EXIT
"RTN","FBARCHR0",104,0)
 ;
"RTN","FBARCHR0",105,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBARCHR0",106,0)
 S DFLT=$S($G(DFLT)=0:"NO",$G(DFLT)=1:"YES",1:"BOTH")
"RTN","FBARCHR0",107,0)
 S DIR(0)="S^Y:YES - Patient is ARCH Eligible;N:NO  - Patient is NOT ARCH Eligible;B:BOTH",DIR("A")="Which ARCH Eligibility Status should display (Y/N/B)",DIR("B")=DFLT
"RTN","FBARCHR0",108,0)
 D ^DIR
"RTN","FBARCHR0",109,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","FBARCHR0",110,0)
 S Y=$S(Y="N":0,Y="Y":1,Y="B":2,1:Y)
"RTN","FBARCHR0",111,0)
 Q Y
"RTN","FBARCHR0",112,0)
 ;
"RTN","FBARCHR0",113,0)
SELELDET(DFLT) ; Select ARCH Eligibility Determination
"RTN","FBARCHR0",114,0)
 ; Input Variable -> DFLT = 0 - CAC
"RTN","FBARCHR0",115,0)
 ;                          1 - SAS DB Update
"RTN","FBARCHR0",116,0)
 ;                          2 - All
"RTN","FBARCHR0",117,0)
 ;
"RTN","FBARCHR0",118,0)
 ; Return Value ->   New Person File IEN of CAC
"RTN","FBARCHR0",119,0)
 ;                   -1 - SAS DB Update
"RTN","FBARCHR0",120,0)
 ;                   0 - All
"RTN","FBARCHR0",121,0)
 ;                   ^ - EXIT
"RTN","FBARCHR0",122,0)
 ;
"RTN","FBARCHR0",123,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBARCHR0",124,0)
 S DFLT=$S($G(DFLT)=0:"U",$G(DFLT)=1:"N",1:"A")
"RTN","FBARCHR0",125,0)
 S DIR(0)="S^C:Project ARCH CAC;S:SAS DB Update;A:All",DIR("A")="Select ARCH Elig Determination (C)AC, (S)AS DB update or (A)LL",DIR("B")=DFLT
"RTN","FBARCHR0",126,0)
 D ^DIR
"RTN","FBARCHR0",127,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","FBARCHR0",128,0)
 S Y=$S(Y="C":1,Y="S":0,Y="A":-1,1:Y)
"RTN","FBARCHR0",129,0)
 I Y=1 D
"RTN","FBARCHR0",130,0)
 . N DIR,DIRUT,DTOUT,DUOUT
"RTN","FBARCHR0",131,0)
 . ;Prompt to select NEW PERSON file entry. Screen on ELIGIBILITY SOURCE
"RTN","FBARCHR0",132,0)
 . S DIR(0)="P^200:EMZ",DIR("S")="I $D(^FBAAA(""ARCHSRC"",Y))"
"RTN","FBARCHR0",133,0)
 . S DIR("A")="Select Project ARCH CAC"
"RTN","FBARCHR0",134,0)
 . D ^DIR I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","FBARCHR0",135,0)
 . S Y=+Y
"RTN","FBARCHR0",136,0)
 Q Y
"RTN","FBARCHR0",137,0)
 ;
"RTN","FBARCHR0",138,0)
SELJUST() ; Select the ARCH Justification Reason
"RTN","FBARCHR0",139,0)
 ; Return Value ->   FEE BASIS PROJECT ARCH JUSTIFICATION file #161.35 IEN
"RTN","FBARCHR0",140,0)
 ;
"RTN","FBARCHR0",141,0)
 N FBJUST,IEN,X,CNT,FBJAR,DIR,DTOUT,DUOUT,Y
"RTN","FBARCHR0",142,0)
 S (FBJUST,X,CNT)=0
"RTN","FBARCHR0",143,0)
 W !!,"     Project ARCH Justification Reasons",!
"RTN","FBARCHR0",144,0)
 F  S FBJUST=$O(^FBAA(161.35,"C",FBJUST)) Q:FBJUST=""  D
"RTN","FBARCHR0",145,0)
 . S IEN=$O(^FBAA(161.35,"C",FBJUST,0))
"RTN","FBARCHR0",146,0)
 . Q:$P(^FBAA(161.35,IEN,0),U,2)'=1
"RTN","FBARCHR0",147,0)
 . S CNT=CNT+1
"RTN","FBARCHR0",148,0)
 . S FBJAR(CNT)=FBJUST_U_IEN
"RTN","FBARCHR0",149,0)
 F  S X=$O(FBJAR(X)) Q:X=""  D
"RTN","FBARCHR0",150,0)
 . W !,?5,X
"RTN","FBARCHR0",151,0)
 . I $L($P(FBJAR(X),U))>69 D
"RTN","FBARCHR0",152,0)
 . . ; Handle the line breaks and hyphenate the word in the right spot
"RTN","FBARCHR0",153,0)
 . . I $E($P(FBJAR(X),U),70)'=" " D  Q
"RTN","FBARCHR0",154,0)
 . . . W ?10,$E($P(FBJAR(X),U),1,69),"-"
"RTN","FBARCHR0",155,0)
 . . . W !,?10,$E($P(FBJAR(X),U),70,$L($P(FBJAR(X),U)))
"RTN","FBARCHR0",156,0)
 . . W ?10,$E($P(FBJAR(X),U),1,70)
"RTN","FBARCHR0",157,0)
 . . W !,?10,$E($P(FBJAR(X),U),71,$L($P(FBJAR(X),U)))
"RTN","FBARCHR0",158,0)
 W !
"RTN","FBARCHR0",159,0)
 S DIR(0)="N^1:"_CNT,DIR("A")="Select ARCH Justification" D ^DIR
"RTN","FBARCHR0",160,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^" Q Y
"RTN","FBARCHR0",161,0)
 W "  ",$P(FBJAR(Y),U),!
"RTN","FBARCHR0",162,0)
 Q $P(FBJAR(Y),U,2)
"RTN","FBARCHR0",163,0)
 ;
"RTN","FBARCHR0",164,0)
HEXC ; - 'Do you want to capture data...' prompt
"RTN","FBARCHR0",165,0)
 W !!,"      Enter:  'Y'    -  To capture detail report data to transfer"
"RTN","FBARCHR0",166,0)
 W !,"                        to an Excel document"
"RTN","FBARCHR0",167,0)
 W !,"              '<CR>' -  To skip this option"
"RTN","FBARCHR0",168,0)
 W !,"              '^'    -  To quit this option"
"RTN","FBARCHR0",169,0)
 Q
"RTN","FBARCHR0",170,0)
 ;
"RTN","FBARCHR0",171,0)
 ;Display the message about capturing to an Excel file format
"RTN","FBARCHR0",172,0)
 ; 
"RTN","FBARCHR0",173,0)
EXMSG ;
"RTN","FBARCHR0",174,0)
 W !!?5,"Before continuing, please set up your terminal to capture the"
"RTN","FBARCHR0",175,0)
 W !?5,"detail report data. On some terminals, this can  be  done  by"
"RTN","FBARCHR0",176,0)
 W !?5,"clicking  on the 'Tools' menu above, then click  on  'Capture"
"RTN","FBARCHR0",177,0)
 W !?5,"Incoming  Data' to save to  Desktop. This  report  may take a"
"RTN","FBARCHR0",178,0)
 W !?5,"while to run."
"RTN","FBARCHR0",179,0)
 W !!?5,"Note: To avoid  undesired  wrapping of the data  saved to the"
"RTN","FBARCHR0",180,0)
 W !?5,"      file, please enter '0;256;999' at the 'DEVICE:' prompt.",!
"RTN","FBARCHR0",181,0)
 Q
"RTN","FBARCHR0",182,0)
 ;
"RTN","FBARCHR0",183,0)
 ;Screen Pause 1
"RTN","FBARCHR0",184,0)
 ;
"RTN","FBARCHR0",185,0)
 ; Return variable - FBQ = 0 Continue
"RTN","FBARCHR0",186,0)
 ;                          2 Quit
"RTN","FBARCHR0",187,0)
PAUSE N X
"RTN","FBARCHR0",188,0)
 U IO(0) W !!,"Press RETURN to continue, '^' to exit:"
"RTN","FBARCHR0",189,0)
 R X:$G(DTIME) S:'$T X="^" S:X["^" FBQ=2
"RTN","FBARCHR0",190,0)
 U IO
"RTN","FBARCHR0",191,0)
 Q
"RTN","FBARCHR0",192,0)
 ;
"RTN","FBARCHR0",193,0)
 ;Screen Pause 2
"RTN","FBARCHR0",194,0)
 ;
"RTN","FBARCHR0",195,0)
 ; Return variable - FBQ = 0 Continue
"RTN","FBARCHR0",196,0)
 ;                         2 Quit
"RTN","FBARCHR0",197,0)
PAUSE2 N X
"RTN","FBARCHR0",198,0)
 U IO(0) W !!,"Press RETURN to continue:"
"RTN","FBARCHR0",199,0)
 R X:$G(DTIME) S:'$T X="^" S:X["^" FBQ=2
"RTN","FBARCHR0",200,0)
 U IO
"RTN","FBARCHR0",201,0)
 Q
"RTN","FBARCHR0",202,0)
 ;
"RTN","FBARCHR0",203,0)
CHKKEY(KEY) ; Check if user holds the appropriate security key
"RTN","FBARCHR0",204,0)
 ; Return 1 if user holds key, 0 if not and display message
"RTN","FBARCHR0",205,0)
 Q:KEY']"" 0
"RTN","FBARCHR0",206,0)
 I $D(^XUSEC(KEY,DUZ)) Q 1
"RTN","FBARCHR0",207,0)
 W !,"You must hold the "_KEY_" Security Key in order to continue."
"RTN","FBARCHR0",208,0)
 D PAUSE2
"RTN","FBARCHR0",209,0)
 Q 0
"RTN","FBARCHR0",210,0)
 ;
"RTN","FBARCHR0",211,0)
REPORT(REF,FBEXCEL,FBSCR,FBRPTNAM,FBPAT,FBBEGDT,FBENDDT,FBELIG,FBELDET,FBSUMDET,FBPAGE) ; Display the report
"RTN","FBARCHR0",212,0)
 N DFN,ELIGDT,DETUSR,FB11,ELIGIND,FBARCH0,FBCNT
"RTN","FBARCHR0",213,0)
 N NP,FBLOCNT,FBNCNT,FBNELCNT,FBNPAT,FBELPAT
"RTN","FBARCHR0",214,0)
 S (FBLOCNT,FBNCNT,FBNELCNT,FBCNT)=0
"RTN","FBARCHR0",215,0)
 D HDR(FBRPTNAM,.FBPAGE)
"RTN","FBARCHR0",216,0)
 I '$D(@REF) W !,"No data meets the criteria." G XREPORT
"RTN","FBARCHR0",217,0)
 ;
"RTN","FBARCHR0",218,0)
 S DFN="" F  S DFN=$O(@REF@(DFN)) Q:DFN=""  D  Q:FBQ
"RTN","FBARCHR0",219,0)
 . Q:'$D(^DPT(DFN))
"RTN","FBARCHR0",220,0)
 . ; Check the patient filter
"RTN","FBARCHR0",221,0)
 . I FBPAT Q:DFN'=FBPAT
"RTN","FBARCHR0",222,0)
 . S FBNPAT=1
"RTN","FBARCHR0",223,0)
 . S ELIGDT="" F  S ELIGDT=$O(@REF@(DFN,ELIGDT)) Q:ELIGDT=""  D  Q:FBQ
"RTN","FBARCHR0",224,0)
 . . ; Check the date filters
"RTN","FBARCHR0",225,0)
 . . I FBBEGDT,ELIGDT<FBBEGDT Q
"RTN","FBARCHR0",226,0)
 . . S FB11="" F  S FB11=$O(@REF@(DFN,ELIGDT,FB11)) Q:FB11=""  D  Q:FBQ
"RTN","FBARCHR0",227,0)
 . . . S FBARCH0=^FBAAA(DFN,"ARCHFEE",FB11,0)
"RTN","FBARCHR0",228,0)
 . . . S ELIGIND=$P(FBARCH0,U,2)
"RTN","FBARCHR0",229,0)
 . . . S DETUSR=$S($P(FBARCH0,U,3)]"":$P(^VA(200,$P(FBARCH0,U,3),0),U),1:"SAS DB UPDATE")
"RTN","FBARCHR0",230,0)
 . . . ; Check the Eligibility filter
"RTN","FBARCHR0",231,0)
 . . . I FBELIG'=2,FBELIG'=ELIGIND Q
"RTN","FBARCHR0",232,0)
 . . . ; Check Determination Source filter
"RTN","FBARCHR0",233,0)
 . . . I FBELDET>0,FBELDET'=$P(FBARCH0,U,3) Q
"RTN","FBARCHR0",234,0)
 . . . I FBELDET=0,$P(FBARCH0,U,3)]"" Q
"RTN","FBARCHR0",235,0)
 . . . ; Set eligibility counter
"RTN","FBARCHR0",236,0)
 . . . S FBELPAT(DFN)=$S((ELIGIND)&($P(FBARCH0,U,3)]""):1,(ELIGIND)&($P(FBARCH0,U,3)=""):2,1:0)
"RTN","FBARCHR0",237,0)
 . . . I FBNPAT S FBCNT=FBCNT+1
"RTN","FBARCHR0",238,0)
 . . . S NP=$$CHKP(1) Q:FBQ
"RTN","FBARCHR0",239,0)
 . . . I 'FBSUMDET D
"RTN","FBARCHR0",240,0)
 . . . . D WRLINE1(FBEXCEL,$S(FBNPAT:FBCNT,1:""),$P(^DPT(DFN,0),U),ELIGDT,ELIGIND,DETUSR)
"RTN","FBARCHR0",241,0)
 . . . . I $P(FBARCH0,U,4)]"" D WRLINE2(FBEXCEL,$P(FBARCH0,U,4))
"RTN","FBARCHR0",242,0)
 . . . . I $P(FBARCH0,U,5)]"" D WRLINE3(FBEXCEL,$P(FBARCH0,U,5))
"RTN","FBARCHR0",243,0)
 . . . ; Reset FBNPAT to not print the ID if same patient
"RTN","FBARCHR0",244,0)
 . . . S FBNPAT=0
"RTN","FBARCHR0",245,0)
 Q:FBQ
"RTN","FBARCHR0",246,0)
 ; Get the total eligible patients
"RTN","FBARCHR0",247,0)
 N DFN S DFN="" F  S DFN=$O(FBELPAT(DFN)) Q:DFN=""  D
"RTN","FBARCHR0",248,0)
 . ; Get locally defined eligible patients
"RTN","FBARCHR0",249,0)
 . I FBELPAT(DFN)=1 S FBLOCNT=FBLOCNT+1 Q
"RTN","FBARCHR0",250,0)
 . ; Get nationally defined eligible patients
"RTN","FBARCHR0",251,0)
 . I FBELPAT(DFN)=2 S FBNCNT=FBNCNT+1 Q
"RTN","FBARCHR0",252,0)
 . ; Get locally defined patients changed to Not Eligible
"RTN","FBARCHR0",253,0)
 . S FBNELCNT=FBNELCNT+1
"RTN","FBARCHR0",254,0)
 W !
"RTN","FBARCHR0",255,0)
 I (FBELIG=1)!(FBELIG=2) W !,"Total Nationally Determined Project ARCH Eligible Patients:  "_FBNCNT
"RTN","FBARCHR0",256,0)
 I (FBELIG=1)!(FBELIG=2) W !,"Total Locally Determined Project ARCH Eligible Patients:  "_FBLOCNT
"RTN","FBARCHR0",257,0)
 I (FBELIG=0)!(FBELIG=2) W !,"Total Locally Determined Eligible changed to Not Eligible:  "_FBNELCNT
"RTN","FBARCHR0",258,0)
 Q
"RTN","FBARCHR0",259,0)
 ;
"RTN","FBARCHR0",260,0)
WRLINE1(FBEXCEL,ID,PATIENT,ELIGDT,ELIGIND,DETERM) ; Write Line 1 of report
"RTN","FBARCHR0",261,0)
 I FBEXCEL W !,ID_U_PATIENT_U_$$FMTE^XLFDT(ELIGDT)_U_$S(ELIGIND=1:"YES",1:"NO")_U_DETERM Q
"RTN","FBARCHR0",262,0)
 ;
"RTN","FBARCHR0",263,0)
 W !,ID,?8,PATIENT,?35,$$FMTE^XLFDT(ELIGDT),?51,$S(ELIGIND=1:"YES",1:"NO"),?64,DETERM
"RTN","FBARCHR0",264,0)
 Q
"RTN","FBARCHR0",265,0)
 ;
"RTN","FBARCHR0",266,0)
WRLINE2(FBEXCEL,FBJUST) ; Write Line 2 of report
"RTN","FBARCHR0",267,0)
 I FBEXCEL W U_$P(^FBAA(161.35,FBJUST,0),U) Q
"RTN","FBARCHR0",268,0)
 ;
"RTN","FBARCHR0",269,0)
 W !,?10,$P(^FBAA(161.35,FBJUST,0),U)
"RTN","FBARCHR0",270,0)
 Q
"RTN","FBARCHR0",271,0)
 ;
"RTN","FBARCHR0",272,0)
WRLINE3(FBEXCEL,FBMILE) ; Write Line 3 of report
"RTN","FBARCHR0",273,0)
 I FBEXCEL W U_FBMILE Q
"RTN","FBARCHR0",274,0)
 ;
"RTN","FBARCHR0",275,0)
 W !,?12,FBMILE
"RTN","FBARCHR0",276,0)
 Q
"RTN","FBARCHR0",277,0)
 ;
"RTN","FBARCHR0",278,0)
 ;Check for End of Page
"RTN","FBARCHR0",279,0)
 ; Input variables -> FBLINES -> Number of lines from bottom
"RTN","FBARCHR0",280,0)
 ;                    FBEXCEL -> 1 - Print to Excel/0 Regular Display
"RTN","FBARCHR0",281,0)
 ; Output variable -> FBDATA  -> 0 -> New screen, no data displayed yet
"RTN","FBARCHR0",282,0)
 ;                               1 -> Data displayed on current screen
"RTN","FBARCHR0",283,0)
CHKP(FBLINES) Q:$G(FBEXCEL) 0
"RTN","FBARCHR0",284,0)
 S FBLINES=FBLINES+1
"RTN","FBARCHR0",285,0)
 I $G(FBSCR) S FBLINES=FBLINES+2
"RTN","FBARCHR0",286,0)
 I $G(FBSCR),'$G(FBDATA) S FBDATA=1 Q 0
"RTN","FBARCHR0",287,0)
 S FBDATA=1
"RTN","FBARCHR0",288,0)
 I $Y>(IOSL-FBLINES) D:$G(FBSCR) PAUSE Q:$G(FBQ) 0 D HDR(FBRPTNAM,.FBPAGE) Q 1
"RTN","FBARCHR0",289,0)
 Q 0
"RTN","FBARCHR0",290,0)
 ;
"RTN","FBARCHR0",291,0)
 ;Print one line of characters
"RTN","FBARCHR0",292,0)
ULINE(X) N I
"RTN","FBARCHR0",293,0)
 W ! F I=1:1:80 W $G(X,"-")
"RTN","FBARCHR0",294,0)
 Q
"RTN","FBARCHR0",295,0)
 ;
"RTN","FBARCHR0",296,0)
HDR(FBRPTNAM,FBPAGE) ;
"RTN","FBARCHR0",297,0)
 ;Display Excel Header
"RTN","FBARCHR0",298,0)
 I FBEXCEL D EXHDR Q
"RTN","FBARCHR0",299,0)
 ;
"RTN","FBARCHR0",300,0)
 ; Define FBDATA - Tells whether data has been displayed for a screen
"RTN","FBARCHR0",301,0)
 S FBDATA=0
"RTN","FBARCHR0",302,0)
 S FBPAGE=$G(FBPAGE)+1
"RTN","FBARCHR0",303,0)
 W @IOF
"RTN","FBARCHR0",304,0)
 W FBRPTNAM_" ("_$S(FBSUMDET=1:"SUMMARY",1:"DETAIL")_" REPORT)"
"RTN","FBARCHR0",305,0)
 W $$RJ("Page: "_FBPAGE,30)
"RTN","FBARCHR0",306,0)
 W !,"Print Date: "_$G(FBNOW)
"RTN","FBARCHR0",307,0)
 I +FBBEGDT W !,"Report Date From "_$$DATTIM(FBBEGDT)_" through "_$$DATTIM($P(FBENDDT,"."))
"RTN","FBARCHR0",308,0)
 ;
"RTN","FBARCHR0",309,0)
 ;
"RTN","FBARCHR0",310,0)
 D ULINE("-") Q:$G(FBQ)
"RTN","FBARCHR0",311,0)
 ; If just printing Summary, no need to print other headers
"RTN","FBARCHR0",312,0)
 I FBSUMDET Q
"RTN","FBARCHR0",313,0)
 D HEADLN1
"RTN","FBARCHR0",314,0)
 D HEADLN2
"RTN","FBARCHR0",315,0)
 D HEADLN3
"RTN","FBARCHR0",316,0)
 D ULINE("-")
"RTN","FBARCHR0",317,0)
 ;
"RTN","FBARCHR0",318,0)
 Q
"RTN","FBARCHR0",319,0)
 ;
"RTN","FBARCHR0",320,0)
EXHDR ; Write the Excel Report Header
"RTN","FBARCHR0",321,0)
 W !,"ID#"_U
"RTN","FBARCHR0",322,0)
 W "PATIENT"_U
"RTN","FBARCHR0",323,0)
 W "ELIG DATE"_U
"RTN","FBARCHR0",324,0)
 W "ELIGIBLE"_U
"RTN","FBARCHR0",325,0)
 W "DETERMINATION"_U
"RTN","FBARCHR0",326,0)
 W "LOCAL JUSTIFICATION"_U
"RTN","FBARCHR0",327,0)
 W "LOCAL VERIFICATION OF MILEAGE"_U
"RTN","FBARCHR0",328,0)
 Q
"RTN","FBARCHR0",329,0)
 ;
"RTN","FBARCHR0",330,0)
DATTIM(X) ;Convert FM date or date.time to displayable (mm/dd/yy HH:MM) format
"RTN","FBARCHR0",331,0)
 N DATE,FBT,FBM,FBH,FBAP
"RTN","FBARCHR0",332,0)
 S DATE=$S(X:$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3),1:"")
"RTN","FBARCHR0",333,0)
 S FBT=$P(X,".",2) S:$L(FBT)<4 FBT=FBT_$E("0000",1,4-$L(FBT))
"RTN","FBARCHR0",334,0)
 S FBH=$E(FBT,1,2),FBM=$E(FBT,3,4)
"RTN","FBARCHR0",335,0)
 S FBAP="AM" I FBH>12 S FBH=FBH-12,FBAP="PM" S:$L(FBH)<2 FBH="0"_FBH
"RTN","FBARCHR0",336,0)
 I FBT S:'FBH FBH=12 S DATE=DATE_" "_FBH_":"_FBM_FBAP
"RTN","FBARCHR0",337,0)
 Q $G(DATE)
"RTN","FBARCHR0",338,0)
 ;
"RTN","FBARCHR0",339,0)
HEADLN1 ; Write the first header line
"RTN","FBARCHR0",340,0)
 W !,"ID#",?8,"Patient",?35,"Elig Date",?51,"Eligible",?64,"Determination"
"RTN","FBARCHR0",341,0)
 Q
"RTN","FBARCHR0",342,0)
 ;
"RTN","FBARCHR0",343,0)
HEADLN2 ; Write the second header line
"RTN","FBARCHR0",344,0)
 W !,?10,"Local Project ARCH Justification"
"RTN","FBARCHR0",345,0)
 Q
"RTN","FBARCHR0",346,0)
 ;
"RTN","FBARCHR0",347,0)
HEADLN3 ; Write the third header line
"RTN","FBARCHR0",348,0)
 W !,?12,"Local Verification of Mileage"
"RTN","FBARCHR0",349,0)
 Q
"RTN","FBARCHR0",350,0)
 ;
"RTN","FBARCHR0",351,0)
XREPORT Q
"RTN","FBARCHR0",352,0)
 ;
"RTN","FBARCHR0",353,0)
 ;left justified, blank padded
"RTN","FBARCHR0",354,0)
 ;adds spaces on right or truncates to make return string FBLEN characters long
"RTN","FBARCHR0",355,0)
 ;FBST- original string
"RTN","FBARCHR0",356,0)
 ;FBLEN - desired length
"RTN","FBARCHR0",357,0)
LJ(FBST,FBLEN) ;
"RTN","FBARCHR0",358,0)
 N FBL
"RTN","FBARCHR0",359,0)
 S FBL=FBLEN-$L(FBST)
"RTN","FBARCHR0",360,0)
 Q $E(FBST_$J("",$S(FBL<0:0,1:FBL)),1,FBLEN)
"RTN","FBARCHR0",361,0)
 ;
"RTN","FBARCHR0",362,0)
 ;right justified, blank padded
"RTN","FBARCHR0",363,0)
 ;adds spaces on left or truncates to make return string FBLEN characters long
"RTN","FBARCHR0",364,0)
 ;FBST- original string
"RTN","FBARCHR0",365,0)
 ;FBLEN - desired length
"RTN","FBARCHR0",366,0)
RJ(FBST,FBLEN)  ;
"RTN","FBARCHR0",367,0)
 S FBL=FBLEN-$L(FBST)
"RTN","FBARCHR0",368,0)
 I FBL>0 Q $J("",$S(FBL<0:0,1:FBL))_FBST
"RTN","FBARCHR0",369,0)
 Q $E(FBST,1,FBLEN)
"RTN","FBARCHU")
0^2^B24246185^n/a
"RTN","FBARCHU",1,0)
FBARCHU ; HINOIFO/BNT - ARCH ELIGIBILITY ; 05/03/11 5:30pm
"RTN","FBARCHU",2,0)
 ;;3.5;FEE BASIS;**130**;JAN 30, 1995;Build 13
"RTN","FBARCHU",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBARCHU",4,0)
 ;Integration Agreements:
"RTN","FBARCHU",5,0)
 ;
"RTN","FBARCHU",6,0)
 Q
"RTN","FBARCHU",7,0)
 ;
"RTN","FBARCHU",8,0)
ADD ; Add patient to the ARCH ELIGIBILITY Multiple
"RTN","FBARCHU",9,0)
 N FBQUIT,Y,X,DFN,DA,FBARCH,FBUSER,FBJUST,FBMILE,FBDATA,FBI11,FBIEN2,FBSITE,FBPOP,DUOUT,DTOUT,DIRUT,DIROUT,DINUM,DLAYGO,DILOCKTM,DD,DO,D,DIC,DIR
"RTN","FBARCHU",10,0)
 S (FBARCH,FBQUIT)=0,(FBJUST,FBMILE)=""
"RTN","FBARCHU",11,0)
 D SITEP^FBAAUTL Q:FBPOP  ;S FBAADDYS=+$P(FBSITE(0),"^",13),FBAAASKV=$P(FBSITE(1),"^",1),FBPROG=$S($P(FBSITE(1),"^",6)="":"I 1",1:"I $P(^(0),U,3)=2")
"RTN","FBARCHU",12,0)
 W ! K DIC S DIC="^DPT(",DIC(0)="QEAZM" D ^DIC S DFN=+Y
"RTN","FBARCHU",13,0)
 Q:'$D(^DPT(DFN))
"RTN","FBARCHU",14,0)
 S DA=DFN I '$D(^FBAAA(DA,0)) D  Q:FBQUIT
"RTN","FBARCHU",15,0)
 . L +^FBAAA(DFN):$G(DILOCKTM,3) I '$T D  S FBQUIT=1 Q
"RTN","FBARCHU",16,0)
 . . W !,"This record is being edited by another user. Try again later.",!
"RTN","FBARCHU",17,0)
 . K DD,DO S (X,DINUM)=DA,DIC="^FBAAA(",DIC(0)="LM",DLAYGO=161 D FILE^DICN L -^FBAAA(DFN) K DIC
"RTN","FBARCHU",18,0)
 S:'$D(^FBAAA(DFN,1,0)) ^(0)="^161.01D^^"
"RTN","FBARCHU",19,0)
 I $D(^FBAAA(DFN,"ARCHFEE")) D  Q:FBQUIT
"RTN","FBARCHU",20,0)
 . S FBI11=$O(^FBAAA(DFN,"ARCHFEE"," "),-1)
"RTN","FBARCHU",21,0)
 . S FBARCH=$P(^FBAAA(DFN,"ARCHFEE",FBI11,0),U,2)
"RTN","FBARCHU",22,0)
 . I $P(^FBAAA(DFN,"ARCHFEE",FBI11,0),U,3)="" D  Q
"RTN","FBARCHU",23,0)
 . . W !,"This patient was determined Project ARCH Eligible by the"
"RTN","FBARCHU",24,0)
 . . W !,"national extract and cannot be edited."
"RTN","FBARCHU",25,0)
 . . W !!,"Only manually added patients can be edited."
"RTN","FBARCHU",26,0)
 . . S FBQUIT=1 Q
"RTN","FBARCHU",27,0)
 W !,$P(^DPT(DFN,0),U)_" is "_$S(FBARCH>0:"",1:"NOT ")_"Project ARCH eligible.",!
"RTN","FBARCHU",28,0)
 S DIR("A")="Change to "_$S(FBARCH>0:"NOT ",1:"")_"Project ARCH eligible? (Y/N): "
"RTN","FBARCHU",29,0)
 S DIR(0)="YA",DIR("B")="YES" D ^DIR
"RTN","FBARCHU",30,0)
 I $G(DUOUT)!$G(DTOUT)!$G(DIROUT)!$G(DIRUT)!(Y="^") Q
"RTN","FBARCHU",31,0)
 Q:'Y
"RTN","FBARCHU",32,0)
 ;
"RTN","FBARCHU",33,0)
 ; Prompt for Justification
"RTN","FBARCHU",34,0)
 I 'FBARCH S FBJUST=$$SELJUST^FBARCHR0() I FBJUST="^" G XDEV
"RTN","FBARCHU",35,0)
 ;
"RTN","FBARCHU",36,0)
 ; Prompt for Verification of Mileage
"RTN","FBARCHU",37,0)
 I 'FBARCH D  Q:FBQUIT
"RTN","FBARCHU",38,0)
 . K DIR S DIR(0)="F^3:100:EMZ",DIR("A")="Enter Verification of Mileage"
"RTN","FBARCHU",39,0)
 . S DIR("?")="Enter how the mileage requirement was verified (i.e. Google Maps, Zip Code listing, etc.)"
"RTN","FBARCHU",40,0)
 . D ^DIR
"RTN","FBARCHU",41,0)
 . I $G(DUOUT)!$G(DTOUT)!$G(DIROUT)!$G(DIRUT)!(Y="^") S FBQUIT=1 Q
"RTN","FBARCHU",42,0)
 . S FBMILE=Y K DIR
"RTN","FBARCHU",43,0)
 ;
"RTN","FBARCHU",44,0)
 ;update eligibility
"RTN","FBARCHU",45,0)
 S FBARCH=$S('FBARCH:1,1:0)
"RTN","FBARCHU",46,0)
 S FBIEN2="+2,"_DFN
"RTN","FBARCHU",47,0)
 S FBDATA(161.011,FBIEN2_",",.01)=$$DT^XLFDT()
"RTN","FBARCHU",48,0)
 S FBDATA(161.011,FBIEN2_",",2)=FBARCH
"RTN","FBARCHU",49,0)
 S FBDATA(161.011,FBIEN2_",",3)=DUZ
"RTN","FBARCHU",50,0)
 I FBJUST]"" S FBDATA(161.011,FBIEN2_",",4)=FBJUST
"RTN","FBARCHU",51,0)
 I FBMILE]"" S FBDATA(161.011,FBIEN2_",",5)=FBMILE
"RTN","FBARCHU",52,0)
 ;
"RTN","FBARCHU",53,0)
 D UPDATE^DIE("","FBDATA")
"RTN","FBARCHU",54,0)
 K FBDATA
"RTN","FBARCHU",55,0)
 W !!,$P(^DPT(DFN,0),U)_" is "_$S('FBARCH:"NOT ",1:"")_"Project ARCH eligible.",!
"RTN","FBARCHU",56,0)
 K DIR S DIR(0)="E" D ^DIR
"RTN","FBARCHU",57,0)
 ;
"RTN","FBARCHU",58,0)
 Q
"RTN","FBARCHU",59,0)
 ;
"RTN","FBARCHU",60,0)
VIEW ; View Project ARCH Eligibility
"RTN","FBARCHU",61,0)
 N Y,FBNOW,FBSUMDET,FBEXCEL,FBQ,FBRPTNAM,FBPAT,FBBEGDT,FBENDDT,FBELIG,FBELDET,FBDATA,FBSCR
"RTN","FBARCHU",62,0)
 ; Quit if the user does not hold the FB ARCH security key
"RTN","FBARCHU",63,0)
 Q:'$$CHKKEY^FBARCHR0("FB ARCH")
"RTN","FBARCHU",64,0)
 ;
"RTN","FBARCHU",65,0)
 ;Get current Date/Time
"RTN","FBARCHU",66,0)
 D NOW^%DTC S Y=% D DD^%DT S FBNOW=Y
"RTN","FBARCHU",67,0)
 ;
"RTN","FBARCHU",68,0)
 S FBRPTNAM="Project ARCH Eligibility Report"
"RTN","FBARCHU",69,0)
 ;
"RTN","FBARCHU",70,0)
 ;Prompt to Display for One Patient or All Patients (Default to All)
"RTN","FBARCHU",71,0)
 S FBPAT=$$SELPAT^FBARCHR0(0) I FBPAT="^" G XDEV
"RTN","FBARCHU",72,0)
 ;
"RTN","FBARCHU",73,0)
 ;Prompt to select Eligibility Determination Date Range
"RTN","FBARCHU",74,0)
 ;Returns (Start Date^End Date)
"RTN","FBARCHU",75,0)
 S FBBEGDT=$$SELDATE^FBARCHR0(0) D  I FBBEGDT="^" G XDEV
"RTN","FBARCHU",76,0)
 . I FBBEGDT="^" Q
"RTN","FBARCHU",77,0)
 . S FBENDDT=$P(FBBEGDT,U,2)
"RTN","FBARCHU",78,0)
 . S FBBEGDT=$P(FBBEGDT,U)
"RTN","FBARCHU",79,0)
 ;
"RTN","FBARCHU",80,0)
 ;Prompt to select ARCH Eligibility
"RTN","FBARCHU",81,0)
 S FBELIG=$$SELELIG^FBARCHR0(2) I FBELIG="^" G XDEV
"RTN","FBARCHU",82,0)
 ;
"RTN","FBARCHU",83,0)
 ;Prompt to select ARCH Eligibility Determination
"RTN","FBARCHU",84,0)
 S FBELDET=$$SELELDET^FBARCHR0(2) I FBELDET="^" G XDEV
"RTN","FBARCHU",85,0)
 ;
"RTN","FBARCHU",86,0)
 ;Prompt to Display Summary or Detail Format (Default to Detail)
"RTN","FBARCHU",87,0)
 ;Returns 1 for Summary, 0 for Detail
"RTN","FBARCHU",88,0)
 S FBSUMDET=$$SELSMDET^FBARCHR0(2) I FBSUMDET="^" G XDEV
"RTN","FBARCHU",89,0)
 ;
"RTN","FBARCHU",90,0)
 ;Prompt for Excel Capture (Detail Only)
"RTN","FBARCHU",91,0)
 S FBEXCEL=0 I 'FBSUMDET S FBEXCEL=$$SELEXCEL^FBARCHR0() I FBEXCEL="^" G XDEV
"RTN","FBARCHU",92,0)
 ;
"RTN","FBARCHU",93,0)
 ;Prompt for the Device
"RTN","FBARCHU",94,0)
 S FBQ=0 D DEVICE(FBRPTNAM) Q:FBQ
"RTN","FBARCHU",95,0)
 ;
"RTN","FBARCHU",96,0)
 ;Compile and Run the Report
"RTN","FBARCHU",97,0)
 D RUN(FBEXCEL,FBRPTNAM,FBSUMDET)
"RTN","FBARCHU",98,0)
 I 'FBQ D PAUSE2^FBARCHR0
"RTN","FBARCHU",99,0)
 ;
"RTN","FBARCHU",100,0)
 Q
"RTN","FBARCHU",101,0)
 ;
"RTN","FBARCHU",102,0)
RUN(FBEXCEL,FBRPTNAM,FBSUMDET) ; Run the report
"RTN","FBARCHU",103,0)
 N FBPAGE,FBTMP,FBCNT
"RTN","FBARCHU",104,0)
 S FBTMP=$NA(^TMP($J,"ARCH"))
"RTN","FBARCHU",105,0)
 K @FBTMP
"RTN","FBARCHU",106,0)
 S FBPAGE=0
"RTN","FBARCHU",107,0)
 W:FBSCR&'FBEXCEL !,"Please wait...",!
"RTN","FBARCHU",108,0)
 ;
"RTN","FBARCHU",109,0)
 ;Compile the report
"RTN","FBARCHU",110,0)
 S FBCNT=$$ELIGLST(FBTMP) Q:'FBCNT
"RTN","FBARCHU",111,0)
 U IO
"RTN","FBARCHU",112,0)
 ;
"RTN","FBARCHU",113,0)
 ;Display the report
"RTN","FBARCHU",114,0)
 D REPORT^FBARCHR0(FBTMP,FBEXCEL,FBSCR,FBRPTNAM,FBPAT,FBBEGDT,FBENDDT,FBELIG,FBELDET,FBSUMDET,FBPAGE)
"RTN","FBARCHU",115,0)
 I 'FBSCR W !,@IOF
"RTN","FBARCHU",116,0)
 ;K @FBTMP
"RTN","FBARCHU",117,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","FBARCHU",118,0)
 D ^%ZISC
"RTN","FBARCHU",119,0)
 Q
"RTN","FBARCHU",120,0)
 ;
"RTN","FBARCHU",121,0)
ELIGLST(FBTMP) ; Get the current eligibility list
"RTN","FBARCHU",122,0)
 ; Returned in ^TMP($J,"ARCH",DFN,DATE,ELIG IEN)=""
"RTN","FBARCHU",123,0)
 N DFN,FB11,FBDATE,FBCNT
"RTN","FBARCHU",124,0)
 K @FBTMP
"RTN","FBARCHU",125,0)
 S (FBCNT,FBDATE)=0
"RTN","FBARCHU",126,0)
 F  S FBDATE=$O(^FBAAA("ARCH",FBDATE)) Q:FBDATE=""  D
"RTN","FBARCHU",127,0)
 . S DFN="" F  S DFN=$O(^FBAAA("ARCH",FBDATE,DFN)) Q:DFN=""  D
"RTN","FBARCHU",128,0)
 . . S FB11="" F  S FB11=$O(^FBAAA("ARCH",FBDATE,DFN,FB11)) Q:FB11=""  D
"RTN","FBARCHU",129,0)
 . . . S @FBTMP@(DFN,$P(FBDATE,"."),FB11)=""
"RTN","FBARCHU",130,0)
 . . S FBCNT=FBCNT+1
"RTN","FBARCHU",131,0)
 . Q
"RTN","FBARCHU",132,0)
 S @FBTMP@("TOTAL")=FBCNT
"RTN","FBARCHU",133,0)
 Q FBCNT
"RTN","FBARCHU",134,0)
 ;
"RTN","FBARCHU",135,0)
 ;Prompt For the Device
"RTN","FBARCHU",136,0)
 ;
"RTN","FBARCHU",137,0)
 ; Returns Device variables and FBSCR
"RTN","FBARCHU",138,0)
 ;
"RTN","FBARCHU",139,0)
DEVICE(FBRPTNAM) ;
"RTN","FBARCHU",140,0)
 N %ZIS,ZTSK,ZTRTN,ZTIO,ZTDESC,ZTSAVE,POP
"RTN","FBARCHU",141,0)
 S %ZIS="QM"
"RTN","FBARCHU",142,0)
 D ^%ZIS
"RTN","FBARCHU",143,0)
 I POP S FBQ=1
"RTN","FBARCHU",144,0)
 ;
"RTN","FBARCHU",145,0)
 ;Check for exit
"RTN","FBARCHU",146,0)
 I $G(FBQ) G XDEV
"RTN","FBARCHU",147,0)
 ;
"RTN","FBARCHU",148,0)
 S FBSCR=$S($E($G(IOST),1,2)="C-":1,1:0)
"RTN","FBARCHU",149,0)
 I $D(IO("Q")) D  S FBQ=1
"RTN","FBARCHU",150,0)
 . S ZTRTN="RUN^FBARCHU(FBEXCEL,FBRPTNAM,FBSUMDET)"
"RTN","FBARCHU",151,0)
 . S ZTIO=ION
"RTN","FBARCHU",152,0)
 . S ZTSAVE("*")=""
"RTN","FBARCHU",153,0)
 . S ZTDESC=FBRPTNAM
"RTN","FBARCHU",154,0)
 . D ^%ZTLOAD
"RTN","FBARCHU",155,0)
 . W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","FBARCHU",156,0)
 . D HOME^%ZIS
"RTN","FBARCHU",157,0)
 U IO
"RTN","FBARCHU",158,0)
XDEV Q
"RTN","FBY130PO")
0^^B5536715^n/a
"RTN","FBY130PO",1,0)
FBY130PO ;Harris/YMG - Post Install for FB patch 130 ;26-Oct-2011
"RTN","FBY130PO",2,0)
 ;;3.5;FEE BASIS;**130**;JAN 30, 1995;Build 13
"RTN","FBY130PO",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBY130PO",4,0)
 ;
"RTN","FBY130PO",5,0)
 ; project ARCH post-install
"RTN","FBY130PO",6,0)
 ;
"RTN","FBY130PO",7,0)
EN ; entry point
"RTN","FBY130PO",8,0)
 N XPDIDTOT
"RTN","FBY130PO",9,0)
 S XPDIDTOT=1
"RTN","FBY130PO",10,0)
 D JUST(1)         ; 1. Modify eligibility justification entries
"RTN","FBY130PO",11,0)
 ;
"RTN","FBY130PO",12,0)
EX ; exit point
"RTN","FBY130PO",13,0)
 Q
"RTN","FBY130PO",14,0)
 ;
"RTN","FBY130PO",15,0)
JUST(FBXPD) ; modify entries in file 161.35
"RTN","FBY130PO",16,0)
 ;
"RTN","FBY130PO",17,0)
 N DA,DIE,DIK,DR,IEN1,IEN2,NEWPTR,PTR,STR,X,Y,Z
"RTN","FBY130PO",18,0)
 D BMES^XPDUTL(" STEP "_FBXPD_" of "_XPDIDTOT)
"RTN","FBY130PO",19,0)
 D MES^XPDUTL("-------------")
"RTN","FBY130PO",20,0)
 D MES^XPDUTL("Setting eligibility justification entries ... ")
"RTN","FBY130PO",21,0)
 ;
"RTN","FBY130PO",22,0)
 S Z=$P(^FBAA(161.35,0),U,3) I Z=3 G JUSTX  ; there's nothing to do
"RTN","FBY130PO",23,0)
 ; delete existing entries
"RTN","FBY130PO",24,0)
 S DIK="^FBAA(161.35," F DA=1:1:Z D ^DIK
"RTN","FBY130PO",25,0)
 ; create new entries
"RTN","FBY130PO",26,0)
 S STR(1)="OEF/OIF/OND, enrolled after 8/29/2011, geographic eligibility confirmed via web based tool"
"RTN","FBY130PO",27,0)
 S STR(2)="Enrolled between 10/1/2010 and 8/29/2011, geographic eligibility confirmed via web based tool"
"RTN","FBY130PO",28,0)
 S STR(3)="Enrolled prior to 10/1/2010, geographic eligibility confirmed via web based tool"
"RTN","FBY130PO",29,0)
 F DA=1:1:3 S DR=".01////"_STR(DA)_";1////1",DIE=161.35 D ^DIE
"RTN","FBY130PO",30,0)
 ; change existing pointers
"RTN","FBY130PO",31,0)
TEST ;
"RTN","FBY130PO",32,0)
 S Z="" F  S Z=$O(^FBAAA("ARCH",Z)) Q:Z=""  D
"RTN","FBY130PO",33,0)
 .S IEN1="" F  S IEN1=$O(^FBAAA("ARCH",Z,IEN1)) Q:IEN1=""  D
"RTN","FBY130PO",34,0)
 ..S IEN2="" F  S IEN2=$O(^FBAAA("ARCH",Z,IEN1,IEN2)) Q:IEN2=""  D
"RTN","FBY130PO",35,0)
 ...S PTR=+$P(^FBAAA(IEN1,"ARCHFEE",IEN2,0),U,4)
"RTN","FBY130PO",36,0)
 ...I PTR'>0 Q  ; only change existing pointers
"RTN","FBY130PO",37,0)
 ...S NEWPTR=$S(PTR=5:2,PTR=1:3,PTR=6:3,1:1)
"RTN","FBY130PO",38,0)
 ...S DIE="^FBAAA("_IEN1_",""ARCHFEE"",",DA(1)=IEN1,DA=IEN2,DR="4////"_NEWPTR D ^DIE
"RTN","FBY130PO",39,0)
 ...Q
"RTN","FBY130PO",40,0)
 ..Q
"RTN","FBY130PO",41,0)
 .Q
"RTN","FBY130PO",42,0)
 ;
"RTN","FBY130PO",43,0)
JUSTX ;
"RTN","FBY130PO",44,0)
 D MES^XPDUTL(" Done.")
"RTN","FBY130PO",45,0)
 D UPDATE^XPDID(FBXPD)
"RTN","FBY130PO",46,0)
 Q
"SEC","^DIC",161.35,161.35,0,"AUDIT")
@
"SEC","^DIC",161.35,161.35,0,"DD")
@
"SEC","^DIC",161.35,161.35,0,"DEL")
@
"SEC","^DIC",161.35,161.35,0,"LAYGO")
@
"SEC","^DIC",161.35,161.35,0,"RD")
@
"SEC","^DIC",161.35,161.35,0,"WR")
@
"UP",161,161.011,-1)
161^ARCHFEE
"UP",161,161.011,0)
161.011
"VER")
8.0^22.0
"^DD",161,161.011,3,0)
ARCH ELIGIBILITY DETERMINATION^P200'^VA(200,^0;3^Q
"^DD",161,161.011,3,1,0)
^.1
"^DD",161,161.011,3,1,1,0)
161^ARCHSRC
"^DD",161,161.011,3,1,1,1)
S ^FBAAA("ARCHSRC",$E(X,1,30),DA(1),DA)=""
"^DD",161,161.011,3,1,1,2)
K ^FBAAA("ARCHSRC",$E(X,1,30),DA(1),DA)
"^DD",161,161.011,3,1,1,"DT")
3110512
"^DD",161,161.011,3,3)
Enter the person that determined ARCH elibility.
"^DD",161,161.011,3,21,0)
^^2^2^3110801^^
"^DD",161,161.011,3,21,1,0)
This is the person that determined local Project ARCH eligiblity for this 
"^DD",161,161.011,3,21,2,0)
patient.
"^DD",161,161.011,3,"DT")
3110801
"^DD",161,161.011,4,0)
JUSTIFICATION^P161.35'^FBAA(161.35,^0;4^Q
"^DD",161,161.011,4,3)
Select the justification for determining Project ARCH eligibility.
"^DD",161,161.011,4,21,0)
^^2^2^3110801^
"^DD",161,161.011,4,21,1,0)
This is the justification for locally determining that a patient is
"^DD",161,161.011,4,21,2,0)
eligible for Project ARCH.
"^DD",161,161.011,4,"DT")
3110801
"^DD",161,161.011,5,0)
VERIFICATION OF MILEAGE^F^^0;5^K:$L(X)>100!($L(X)<3) X
"^DD",161,161.011,5,3)
Enter 3-100 characters of how the mileage requirement was verified (e.g. Google Maps, Zip Code listing, etc.)
"^DD",161,161.011,5,21,0)
^^4^4^3110808^^
"^DD",161,161.011,5,21,1,0)
This is how the user verified the mileage requirements for Project ARCH 
"^DD",161,161.011,5,21,2,0)
before adding the patient to local dataset. This can be done through the
"^DD",161,161.011,5,21,3,0)
use of an online tool such as Google Maps or with the Zip Code listing 
"^DD",161,161.011,5,21,4,0)
from the national Project ARCH dataset.
"^DD",161,161.011,5,"DT")
3110808
"^DD",161.35,161.35,0)
FIELD^^1^2
"^DD",161.35,161.35,0,"DDA")
N
"^DD",161.35,161.35,0,"DT")
3110801
"^DD",161.35,161.35,0,"IX","B",161.35,.01)

"^DD",161.35,161.35,0,"NM","FEE BASIS PROJECT ARCH JUSTIFICATION")

"^DD",161.35,161.35,0,"PT",161.011,4)

"^DD",161.35,161.35,.01,0)
PROJECT ARCH JUSTIFICATION^RF^^0;1^K:$L(X)>100!($L(X)<3)!'(X'?1P.E) X
"^DD",161.35,161.35,.01,1,0)
^.1^^-1
"^DD",161.35,161.35,.01,1,1,0)
161.35^B
"^DD",161.35,161.35,.01,1,1,1)
S ^FBAA(161.35,"B",$E(X,1,30),DA)=""
"^DD",161.35,161.35,.01,1,1,2)
K ^FBAA(161.35,"B",$E(X,1,30),DA)
"^DD",161.35,161.35,.01,3)
Answer must be 3-100 characters in length.
"^DD",161.35,161.35,.01,21,0)
^^2^2^3110801^
"^DD",161.35,161.35,.01,21,1,0)
This is the justification reason for Project Access to care Received 
"^DD",161.35,161.35,.01,21,2,0)
Close to Home (ARCH).
"^DD",161.35,161.35,.01,"DT")
3110829
"^DD",161.35,161.35,1,0)
ACTIVE?^S^1:YES;0:NO;^0;2^Q
"^DD",161.35,161.35,1,3)
Is this Project ARCH Justification active?
"^DD",161.35,161.35,1,21,0)
^^1^1^3110801^
"^DD",161.35,161.35,1,21,1,0)
This field is used to indicate if the Justification is active or not.
"^DD",161.35,161.35,1,"DT")
3110801
"^DIC",161.35,161.35,0)
FEE BASIS PROJECT ARCH JUSTIFICATION^161.35
"^DIC",161.35,161.35,0,"GL")
^FBAA(161.35,
"^DIC",161.35,161.35,"%",0)
^1.005^^
"^DIC",161.35,161.35,"%D",0)
^^3^3^3110801^
"^DIC",161.35,161.35,"%D",1,0)
This file is part of Project Access to care Received Closer to Home 
"^DIC",161.35,161.35,"%D",2,0)
(ARCH). The file is used to identify a list of reasons that a
"^DIC",161.35,161.35,"%D",3,0)
patient may be determined eligible for Project ARCH at the local level.
"^DIC",161.35,"B","FEE BASIS PROJECT ARCH JUSTIFICATION",161.35)

"BLD",8482,6)
^112
**END**
**END**
