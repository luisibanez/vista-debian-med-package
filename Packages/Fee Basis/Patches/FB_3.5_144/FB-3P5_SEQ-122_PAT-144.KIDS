Released FB*3.5*144 SEQ #122
Extracted from mail message
**KIDS**:FB*3.5*144^

**INSTALL NAME**
FB*3.5*144
"BLD",8710,0)
FB*3.5*144^FEE BASIS^0^3130214^y
"BLD",8710,1,0)
^^6^6^3130214^^
"BLD",8710,1,1,0)
This patch addresses the following:
"BLD",8710,1,2,0)
- Modifies the logic when determining the symbols used for payments 
"BLD",8710,1,3,0)
  in the Payment History Display.
"BLD",8710,1,4,0)
- Resolves an undefined error in routine FBPHON from variable DFN.
"BLD",8710,1,5,0)
- Resolves an undefined error within the [TRAVEL PAYMENT] option due to 
"BLD",8710,1,6,0)
  batch files missing a status.
"BLD",8710,4,0)
^9.64PA^162^1
"BLD",8710,4,162,0)
162
"BLD",8710,4,162,2,0)
^9.641^162.04^1
"BLD",8710,4,162,2,162.04,0)
TRAVEL PAYMENT DATE  (sub-file)
"BLD",8710,4,162,2,162.04,1,0)
^9.6411^1^1
"BLD",8710,4,162,2,162.04,1,1,0)
TRAVEL BATCH NUMBER
"BLD",8710,4,162,222)
y^y^p^^^^n^^n
"BLD",8710,4,162,224)

"BLD",8710,4,"APDD",162,162.04)

"BLD",8710,4,"APDD",162,162.04,1)

"BLD",8710,4,"B",162,162)

"BLD",8710,6.3)
8
"BLD",8710,"KRN",0)
^9.67PA^779.2^20
"BLD",8710,"KRN",.4,0)
.4
"BLD",8710,"KRN",.401,0)
.401
"BLD",8710,"KRN",.402,0)
.402
"BLD",8710,"KRN",.403,0)
.403
"BLD",8710,"KRN",.5,0)
.5
"BLD",8710,"KRN",.84,0)
.84
"BLD",8710,"KRN",3.6,0)
3.6
"BLD",8710,"KRN",3.8,0)
3.8
"BLD",8710,"KRN",9.2,0)
9.2
"BLD",8710,"KRN",9.8,0)
9.8
"BLD",8710,"KRN",9.8,"NM",0)
^9.68A^3^2
"BLD",8710,"KRN",9.8,"NM",2,0)
FBCHVH^^0^B37233286
"BLD",8710,"KRN",9.8,"NM",3,0)
FBAAUTL4^^0^B20242957
"BLD",8710,"KRN",9.8,"NM","B","FBAAUTL4",3)

"BLD",8710,"KRN",9.8,"NM","B","FBCHVH",2)

"BLD",8710,"KRN",19,0)
19
"BLD",8710,"KRN",19.1,0)
19.1
"BLD",8710,"KRN",101,0)
101
"BLD",8710,"KRN",409.61,0)
409.61
"BLD",8710,"KRN",771,0)
771
"BLD",8710,"KRN",779.2,0)
779.2
"BLD",8710,"KRN",870,0)
870
"BLD",8710,"KRN",8989.51,0)
8989.51
"BLD",8710,"KRN",8989.52,0)
8989.52
"BLD",8710,"KRN",8994,0)
8994
"BLD",8710,"KRN","B",.4,.4)

"BLD",8710,"KRN","B",.401,.401)

"BLD",8710,"KRN","B",.402,.402)

"BLD",8710,"KRN","B",.403,.403)

"BLD",8710,"KRN","B",.5,.5)

"BLD",8710,"KRN","B",.84,.84)

"BLD",8710,"KRN","B",3.6,3.6)

"BLD",8710,"KRN","B",3.8,3.8)

"BLD",8710,"KRN","B",9.2,9.2)

"BLD",8710,"KRN","B",9.8,9.8)

"BLD",8710,"KRN","B",19,19)

"BLD",8710,"KRN","B",19.1,19.1)

"BLD",8710,"KRN","B",101,101)

"BLD",8710,"KRN","B",409.61,409.61)

"BLD",8710,"KRN","B",771,771)

"BLD",8710,"KRN","B",779.2,779.2)

"BLD",8710,"KRN","B",870,870)

"BLD",8710,"KRN","B",8989.51,8989.51)

"BLD",8710,"KRN","B",8989.52,8989.52)

"BLD",8710,"KRN","B",8994,8994)

"BLD",8710,"QDEF")
^^^^NO^^^^NO^^YES
"BLD",8710,"QUES",0)
^9.62^^
"BLD",8710,"REQB",0)
^9.611^3^2
"BLD",8710,"REQB",1,0)
FB*3.5*81^2
"BLD",8710,"REQB",3,0)
FB*3.5*135^2
"BLD",8710,"REQB","B","FB*3.5*135",3)

"BLD",8710,"REQB","B","FB*3.5*81",1)

"FIA",162)
FEE BASIS PAYMENT
"FIA",162,0)
^FBAAC(
"FIA",162,0,0)
162P
"FIA",162,0,1)
y^y^p^^^^n^^n
"FIA",162,0,10)

"FIA",162,0,11)

"FIA",162,0,"RLRO")

"FIA",162,0,"VR")
3.5^FB
"FIA",162,162)
1
"FIA",162,162.04)
1
"FIA",162,162.04,1)

"MBREQ")
0
"PKG",114,-1)
1^1
"PKG",114,0)
FEE BASIS^FB^Used to pay private vendors
"PKG",114,20,0)
^9.402P^^0
"PKG",114,22,0)
^9.49I^1^1
"PKG",114,22,1,0)
3.5^2950130^2960822
"PKG",114,22,1,"PAH",1,0)
144^3130214
"PKG",114,22,1,"PAH",1,1,0)
^^6^6^3130214
"PKG",114,22,1,"PAH",1,1,1,0)
This patch addresses the following:
"PKG",114,22,1,"PAH",1,1,2,0)
- Modifies the logic when determining the symbols used for payments 
"PKG",114,22,1,"PAH",1,1,3,0)
  in the Payment History Display.
"PKG",114,22,1,"PAH",1,1,4,0)
- Resolves an undefined error in routine FBPHON from variable DFN.
"PKG",114,22,1,"PAH",1,1,5,0)
- Resolves an undefined error within the [TRAVEL PAYMENT] option due to 
"PKG",114,22,1,"PAH",1,1,6,0)
  batch files missing a status.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","FBAAUTL4")
0^3^B20242957^B19952985
"RTN","FBAAUTL4",1,0)
FBAAUTL4 ;AISC/CMR,dmk,WCIOFO/SAB-UTILITY ROUTINE ; 8/21/12 3:39pm
"RTN","FBAAUTL4",2,0)
 ;;3.5;FEE BASIS;**4,32,77,81,144**;JAN 30, 1995;Build 8
"RTN","FBAAUTL4",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAUTL4",4,0)
 ;
"RTN","FBAAUTL4",5,0)
CPT(X,Y,FBSRVDT) ;return external format of CPT code
"RTN","FBAAUTL4",6,0)
 ;INPUT   X = ien of CPT
"RTN","FBAAUTL4",7,0)
 ;optional Y I Y return description, I 'Y return external format of CPT
"RTN","FBAAUTL4",8,0)
 ;optional FBSRVDT - date of service
"RTN","FBAAUTL4",9,0)
 ;OUTPUT  external format of CPT code or description of CPT code
"RTN","FBAAUTL4",10,0)
 I '$G(X) Q ""
"RTN","FBAAUTL4",11,0)
 N Z
"RTN","FBAAUTL4",12,0)
 S Z=$$CPT^ICPTCOD(X,$S($G(FBSRVDT)>0:+$G(FBSRVDT),1:""),1)
"RTN","FBAAUTL4",13,0)
 Q $S('$G(Y):$P(Z,U,2),1:$P(Z,U,3))
"RTN","FBAAUTL4",14,0)
 ;
"RTN","FBAAUTL4",15,0)
MOD(X,Y,FBSRVDT) ;return external format of modifier
"RTN","FBAAUTL4",16,0)
 ;INPUT   X = ien of modifier
"RTN","FBAAUTL4",17,0)
 ;optional Y I Y return description, I 'Y return external format of mod
"RTN","FBAAUTL4",18,0)
 ;optional FBSRVDT - date of service
"RTN","FBAAUTL4",19,0)
 ;OUTPUT  external format of modifier or description of CPT code
"RTN","FBAAUTL4",20,0)
 I '$G(X) Q ""
"RTN","FBAAUTL4",21,0)
 N Z
"RTN","FBAAUTL4",22,0)
 S Z=$$MOD^ICPTMOD(X,"I",$S($G(FBSRVDT)>0:+$G(FBSRVDT),1:""),1)
"RTN","FBAAUTL4",23,0)
 Q $S('$G(Y):$P(Z,U,2),1:$P(Z,U,3))
"RTN","FBAAUTL4",24,0)
 ;
"RTN","FBAAUTL4",25,0)
CPTDATA(W,X,Y,Z) ;get internal value of CPT
"RTN","FBAAUTL4",26,0)
 ; input
"RTN","FBAAUTL4",27,0)
 ;   W = IEN of PATIENT in file 162
"RTN","FBAAUTL4",28,0)
 ;   X = IEN of VENDOR multiple in file 162
"RTN","FBAAUTL4",29,0)
 ;   Y = IEN of INITIAL TREATMENT DATE multiple in file 162
"RTN","FBAAUTL4",30,0)
 ;   Z = IEN of SERVICE PROVIDED multiple in file 162
"RTN","FBAAUTL4",31,0)
 ; returns
"RTN","FBAAUTL4",32,0)
 ;   value of SERVICE PROVIDED (internal)
"RTN","FBAAUTL4",33,0)
 ;
"RTN","FBAAUTL4",34,0)
 I '$G(W)!('$G(X))!('$G(Y))!('$G(Z)) Q ""
"RTN","FBAAUTL4",35,0)
 Q $P($G(^FBAAC(W,1,X,1,Y,1,Z,0)),U)
"RTN","FBAAUTL4",36,0)
 ;
"RTN","FBAAUTL4",37,0)
MODDATA(W,X,Y,Z) ;get internal values of CPT Modifier
"RTN","FBAAUTL4",38,0)
 ; input
"RTN","FBAAUTL4",39,0)
 ;   W = IEN of PATIENT in file 162
"RTN","FBAAUTL4",40,0)
 ;   X = IEN of VENDOR multiple in file 162
"RTN","FBAAUTL4",41,0)
 ;   Y = IEN of INITIAL TREATMENT DATE multiple in file 162
"RTN","FBAAUTL4",42,0)
 ;   Z = IEN of SERVICE PROVIDED multiple in file 162
"RTN","FBAAUTL4",43,0)
 ; output
"RTN","FBAAUTL4",44,0)
 ;   FBMODA( array of CPT MODIFIERs
"RTN","FBAAUTL4",45,0)
 ;     FBMODA(#)=CPT MODIFIER (internal value)
"RTN","FBAAUTL4",46,0)
 ;     where # is the IEN for an entry in the CPT MODIFIER multiple
"RTN","FBAAUTL4",47,0)
 K FBMODA
"RTN","FBAAUTL4",48,0)
 I '$G(W)!('$G(X))!('$G(Y))!('$G(Z)) Q
"RTN","FBAAUTL4",49,0)
 N FBI,FBMOD
"RTN","FBAAUTL4",50,0)
 S FBI=0 F  S FBI=$O(^FBAAC(W,1,X,1,Y,1,Z,"M",FBI)) Q:'FBI  D
"RTN","FBAAUTL4",51,0)
 . S FBMOD=$P($G(^FBAAC(W,1,X,1,Y,1,Z,"M",FBI,0)),U)
"RTN","FBAAUTL4",52,0)
 . Q:FBMOD=""
"RTN","FBAAUTL4",53,0)
 . S FBMODA(FBI)=FBMOD
"RTN","FBAAUTL4",54,0)
 Q
"RTN","FBAAUTL4",55,0)
 ;
"RTN","FBAAUTL4",56,0)
APS(FBJ,FBK,FBL,FBM) ; amount paid symbol
"RTN","FBAAUTL4",57,0)
 ; input
"RTN","FBAAUTL4",58,0)
 ;   FBJ = IEN of PATIENT in file 162
"RTN","FBAAUTL4",59,0)
 ;   FBK = IEN of VENDOR multiple in file 162
"RTN","FBAAUTL4",60,0)
 ;   FBL = IEN of INITIAL TREATMENT DATE multiple in file 162
"RTN","FBAAUTL4",61,0)
 ;   FBM = IEN of SERVICE PROVIDED multiple in file 162
"RTN","FBAAUTL4",62,0)
 ; returns symbol
"RTN","FBAAUTL4",63,0)
 ;   where value is M (Mill Bill emergency care - 38 U.S.C. 1725)
"RTN","FBAAUTL4",64,0)
 ;                  R (RBRVS fee schedule amount)
"RTN","FBAAUTL4",65,0)
 ;                  F (VA fee schedule amount)
"RTN","FBAAUTL4",66,0)
 ;                  C (contracted service amount)
"RTN","FBAAUTL4",67,0)
 ;                  U (usual & customary - claimed)
"RTN","FBAAUTL4",68,0)
 ;                  null if no amount paid
"RTN","FBAAUTL4",69,0)
 N FBAP,FBRET,FBY0,FBY2
"RTN","FBAAUTL4",70,0)
 S FBRET=""
"RTN","FBAAUTL4",71,0)
 S FBY0=$G(^FBAAC(FBJ,1,FBK,1,FBL,1,FBM,0))
"RTN","FBAAUTL4",72,0)
 S FBY2=$G(^FBAAC(FBJ,1,FBK,1,FBL,1,FBM,2))
"RTN","FBAAUTL4",73,0)
 S FBAP=$P(FBY0,U,3)
"RTN","FBAAUTL4",74,0)
 I FBAP>0 D
"RTN","FBAAUTL4",75,0)
 . ; FB*3.5*144 Changed order of evaluation, setting Mill-Bill first as 
"RTN","FBAAUTL4",76,0)
 . ; this coding takes precedence.
"RTN","FBAAUTL4",77,0)
 . ; Mill Bill payments
"RTN","FBAAUTL4",78,0)
 . I "^39^52^"[(U_$P($G(^FBAA(161.82,+$P(FBY0,U,18),0)),U,3)_U) S FBRET="M" Q
"RTN","FBAAUTL4",79,0)
 . ; use fee schedule info for payment (if any)
"RTN","FBAAUTL4",80,0)
 . I +FBAP=+$P(FBY2,U,12) S FBRET=$P(FBY2,U,13) Q:FBRET]""
"RTN","FBAAUTL4",81,0)
 . ; if no fee schedule info then calc 75th percentile and check
"RTN","FBAAUTL4",82,0)
 . I $P(FBY2,U,12)="" D  Q:FBRET]""
"RTN","FBAAUTL4",83,0)
 . . S FBCPT=$$CPT($P(FBY0,U))
"RTN","FBAAUTL4",84,0)
 . . S FBMODL=$$MODL("^FBAAC("_FBJ_",1,"_FBK_",1,"_FBL_",1,"_FBM_",""M"")","E")
"RTN","FBAAUTL4",85,0)
 . . S FBDOS=$P($G(^FBAAC(FBJ,1,FBK,1,FBL,0)),U)
"RTN","FBAAUTL4",86,0)
 . . I +FBAP=+$$PRCTL^FBAAFSF(FBCPT,FBMODL,FBDOS) S FBRET="F"
"RTN","FBAAUTL4",87,0)
 . ; since not paid by a fee schedule, check prompt pay type
"RTN","FBAAUTL4",88,0)
 . I $P(FBY2,U,2) S FBRET="C" Q
"RTN","FBAAUTL4",89,0)
 . ; all other payments considered u&c
"RTN","FBAAUTL4",90,0)
 . S FBRET="U"
"RTN","FBAAUTL4",91,0)
 Q FBRET
"RTN","FBAAUTL4",92,0)
 ;
"RTN","FBAAUTL4",93,0)
CHKBI(X,Y) ;called to determine if batch number or invoice number
"RTN","FBAAUTL4",94,0)
 ;already exists
"RTN","FBAAUTL4",95,0)
 ;X= next batch/invoice number
"RTN","FBAAUTL4",96,0)
 ;Y=1 if Batch
"RTN","FBAAUTL4",97,0)
 ;Y undefined if invoice number passed
"RTN","FBAAUTL4",98,0)
 ;returns a truth if X is ok for next batch/invoice #
"RTN","FBAAUTL4",99,0)
 ;
"RTN","FBAAUTL4",100,0)
 I 'X Q ""
"RTN","FBAAUTL4",101,0)
 I $G(Y) Q $S($D(^FBAA(161.7,"B",X)):"",1:1)
"RTN","FBAAUTL4",102,0)
 I '$G(Y) Q $S($D(^FBAA(162.1,"B",X)):"",$D(^FBAAI("B",X)):"",$D(^FBAAC("C",X)):"",1:1)
"RTN","FBAAUTL4",103,0)
 ;
"RTN","FBAAUTL4",104,0)
MODL(FBAN,FBFLAG) ;return sorted list given array of modifiers
"RTN","FBAAUTL4",105,0)
 ; Input
"RTN","FBAAUTL4",106,0)
 ;   FBAN - closed root of array containing modifiers
"RTN","FBAAUTL4",107,0)
 ;          the data must be in nodes descendent from this root.
"RTN","FBAAUTL4",108,0)
 ;          The subscripts of the nodes below FBAN must be
"RTN","FBAAUTL4",109,0)
 ;          positive numbers. The CPT MODIFIER internal value
"RTN","FBAAUTL4",110,0)
 ;          must be the first piece in these nodes or in the
"RTN","FBAAUTL4",111,0)
 ;          0-node descendent from these nodes.
"RTN","FBAAUTL4",112,0)
 ;          i.e.
"RTN","FBAAUTL4",113,0)
 ;            ARRAY(number)=CPT MODIFIER (internal value)
"RTN","FBAAUTL4",114,0)
 ;                  OR
"RTN","FBAAUTL4",115,0)
 ;            ARRAY(number,0)=CPT MODIFIER (internal value)
"RTN","FBAAUTL4",116,0)
 ;   FBFLAG - (optional) flag, E or I, default I
"RTN","FBAAUTL4",117,0)
 ;          I to return internal values of modifiers
"RTN","FBAAUTL4",118,0)
 ;          E to return external values of modifiers
"RTN","FBAAUTL4",119,0)
 ; Returns string of sorted modifiers (e.g. "1,3,7") 
"RTN","FBAAUTL4",120,0)
 ;
"RTN","FBAAUTL4",121,0)
 N FBI,FBRET,FBSORT,FBX,FBZERO
"RTN","FBAAUTL4",122,0)
 S FBRET=""
"RTN","FBAAUTL4",123,0)
 S FBFLAG=$G(FBFLAG,"I")
"RTN","FBAAUTL4",124,0)
 ;
"RTN","FBAAUTL4",125,0)
 ; if any descendent data then determine if it is 0-node descendent
"RTN","FBAAUTL4",126,0)
 S FBZERO=0 I $O(@FBAN@(0)),$D(@FBAN@($O(@FBAN@(0)),0))#2 S FBZERO=1
"RTN","FBAAUTL4",127,0)
 ;
"RTN","FBAAUTL4",128,0)
 ; loop thru input array and place modifiers in a sort array
"RTN","FBAAUTL4",129,0)
 S FBI=0 F  S FBI=$O(@FBAN@(FBI)) Q:'FBI  D
"RTN","FBAAUTL4",130,0)
 . ; get the cpt modifier
"RTN","FBAAUTL4",131,0)
 . I FBZERO S FBX=$P(@FBAN@(FBI,0),U)
"RTN","FBAAUTL4",132,0)
 . E  S FBX=$P(@FBAN@(FBI),U)
"RTN","FBAAUTL4",133,0)
 . I FBFLAG="E" D
"RTN","FBAAUTL4",134,0)
 . . ; convert to external value
"RTN","FBAAUTL4",135,0)
 . . S FBX=$$MOD^ICPTMOD(FBX,"I")
"RTN","FBAAUTL4",136,0)
 . . I FBX>0 S FBX=$P(FBX,U,2)
"RTN","FBAAUTL4",137,0)
 . . E  S FBX=""
"RTN","FBAAUTL4",138,0)
 . I FBX]"" S FBSORT(FBX)=""
"RTN","FBAAUTL4",139,0)
 ;
"RTN","FBAAUTL4",140,0)
 ; loop thru sorted array and add the modifiers to return value
"RTN","FBAAUTL4",141,0)
 S FBX="" F  S FBX=$O(FBSORT(FBX)) Q:FBX=""  S FBRET=FBRET_","_FBX
"RTN","FBAAUTL4",142,0)
 ;
"RTN","FBAAUTL4",143,0)
 ; strip leading comma (if any)
"RTN","FBAAUTL4",144,0)
 I $E(FBRET)="," S FBRET=$E(FBRET,2,999)
"RTN","FBAAUTL4",145,0)
 ;
"RTN","FBAAUTL4",146,0)
 ; return value
"RTN","FBAAUTL4",147,0)
 Q FBRET
"RTN","FBAAUTL4",148,0)
 ;
"RTN","FBAAUTL4",149,0)
REPMOD(FBJ,FBK,FBL,FBM) ; Replace CPT Modifier(s) in payment
"RTN","FBAAUTL4",150,0)
 ; input
"RTN","FBAAUTL4",151,0)
 ;   FBJ = IEN of PATIENT in file 162
"RTN","FBAAUTL4",152,0)
 ;   FBK = IEN of VENDOR multiple in file 162
"RTN","FBAAUTL4",153,0)
 ;   FBL = IEN of INITIAL TREATMENT DATE multiple in file 162
"RTN","FBAAUTL4",154,0)
 ;   FBM = IEN of SERVICE PROVIDED multiple in file 162
"RTN","FBAAUTL4",155,0)
 ;   FBMODA( array of modifiers
"RTN","FBAAUTL4",156,0)
 ;      where FBMODA(number)=CPT Modifier (internal)
"RTN","FBAAUTL4",157,0)
 ;
"RTN","FBAAUTL4",158,0)
 N FBI,FBIENS,FBFDA
"RTN","FBAAUTL4",159,0)
 S FBIENS=FBM_","_FBL_","_FBK_","_FBJ_","
"RTN","FBAAUTL4",160,0)
 ;
"RTN","FBAAUTL4",161,0)
 ; delete any existing CPT MODIFIER entries from global
"RTN","FBAAUTL4",162,0)
 I $O(^FBAAC(FBJ,1,FBK,1,FBL,1,FBM,"M",0)) D
"RTN","FBAAUTL4",163,0)
 . K FBFDA S FBI=0
"RTN","FBAAUTL4",164,0)
 . F  S FBI=$O(^FBAAC(FBJ,1,FBK,1,FBL,1,FBM,"M",FBI)) Q:'FBI  D
"RTN","FBAAUTL4",165,0)
 . . S FBFDA(162.06,FBI_","_FBIENS,.01)="@"
"RTN","FBAAUTL4",166,0)
 . D FILE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBAAUTL4",167,0)
 ;
"RTN","FBAAUTL4",168,0)
 ; create CPT MODIFIER entries from data in array FBMODA
"RTN","FBAAUTL4",169,0)
 I $O(FBMODA(0)) D
"RTN","FBAAUTL4",170,0)
 . K FBFDA S FBI=0 F  S FBI=$O(FBMODA(FBI)) Q:'FBI  D
"RTN","FBAAUTL4",171,0)
 . . S FBFDA(162.06,"+"_FBI_","_FBIENS,.01)=FBMODA(FBI)
"RTN","FBAAUTL4",172,0)
 . D UPDATE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBAAUTL4",173,0)
 ;
"RTN","FBAAUTL4",174,0)
 Q
"RTN","FBAAUTL4",175,0)
 ;
"RTN","FBAAUTL4",176,0)
 ;FBAAUTL4
"RTN","FBCHVH")
0^2^B37233286^B37280892
"RTN","FBCHVH",1,0)
FBCHVH ;AISC/DMK-VENDOR PAYMENT HISTORY ; 8/21/12 3:12pm
"RTN","FBCHVH",2,0)
 ;;3.5;FEE BASIS;**4,61,122,133,108,135,144**;JAN 30, 1995;Build 8
"RTN","FBCHVH",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBCHVH",4,0)
GETVEN K FBAANQ D GETVEN^FBAAUTL1 G END:IFN']""
"RTN","FBCHVH",5,0)
 D DATE^FBAAUTL G:FBPOP GETVEN S ZZ=9999999.9999,FBBEG=ZZ-ENDDATE,FBEND=ZZ-BEGDATE
"RTN","FBCHVH",6,0)
 I '$D(^FBAAI("AF",IFN)) W !,*7,"No invoices on line for this vendor." G GETVEN
"RTN","FBCHVH",7,0)
 S VAR="IFN^FBBEG^FBEND^BEGDATE^ENDDATE"_$S($D(FBPROG):"^FBPROG",1:""),VAL=IFN_"^"_FBBEG_"^"_FBEND_"^"_BEGDATE_"^"_ENDDATE_$S($D(FBPROG):"^"_FBPROG,1:""),PGM="START^FBCHVH" D ZIS^FBAAUTL G:FBPOP END S:IO=IO(0) FBAANQ=1
"RTN","FBCHVH",8,0)
START S:'$D(FBPROG) FBPROG=6 S FBHEAD="VENDOR",Q="",$P(Q,"=",80)="=",FBAAOUT=0 U IO D GETDAT S:$E(IOST,1,2)'["C-" FBPG=1 D HEDC
"RTN","FBCHVH",9,0)
 F FBM=FBBEG-.1:0 S FBM=$O(^FBAAI("AF",IFN,FBM)) Q:FBM'>0!(FBM>FBEND)  F FBI=0:0 S FBI=$O(^FBAAI("AF",IFN,FBM,FBI)) Q:FBI'>0!(FBAAOUT)  I $D(^FBAAI(FBI,0)),$P(^(0),"^",12)=FBPROG,'$D(^("FBREJ")) D GETINV
"RTN","FBCHVH",10,0)
 G:$D(FBAANQ) GETVEN
"RTN","FBCHVH",11,0)
END K DA,BEGDATE,ENDDATE,FBBEG,FBEND,DIC,FBAANQ,FBAAOUT,FBDX,FBI,FBIN,FBPROC,FBVEN,FBVID,IFN,J,K,L,PGM,Q,VADM,VAERR,VAL,VAR,X,Y,VA,ZZ,FBM,FBHEAD,FBPROG,FBPG,FBVINDT
"RTN","FBCHVH",12,0)
 D CLOSE^FBAAUTL Q
"RTN","FBCHVH",13,0)
GETINV ;
"RTN","FBCHVH",14,0)
 N FBADJLA,FBADJLR,FBCDAYS,FBCSID,FBFPPSC,FBFPPSL,FBRRMKL,FBY2,FBY3,FBY5,FBADMTDX,FBPOA,FBCNTRN,B
"RTN","FBCHVH",15,0)
 S FBIN=^FBAAI(FBI,0)
"RTN","FBCHVH",16,0)
 S FBY2=$G(^FBAAI(FBI,2))
"RTN","FBCHVH",17,0)
 S FBY3=$G(^FBAAI(FBI,3))
"RTN","FBCHVH",18,0)
 S FBY5=$G(^FBAAI(FBI,5))
"RTN","FBCHVH",19,0)
 F J=1,2,3,4,6,7,8,9,10,11,13,14 S FBIN(J)=$P(FBIN,"^",J)
"RTN","FBCHVH",20,0)
 S FBVINDT=$P(FBY2,"^",2) D FBCKI^FBAACCB1(FBI)
"RTN","FBCHVH",21,0)
 S FBVEN=$S($D(^FBAAV(+FBIN(3),0)):$P(^(0),"^",1),1:"") I FBVEN]"" S FBVID=$P(^(0),"^",2)
"RTN","FBCHVH",22,0)
 S DFN=FBIN(4) Q:'DFN  D DEM^VADPT
"RTN","FBCHVH",23,0)
 S Y=FBIN(2) D CDAT S FBIN(2)=Y
"RTN","FBCHVH",24,0)
 S Y=FBIN(6) D CDAT S FBIN(6)=Y,Y=FBIN(7) D CDAT S FBIN(7)=Y
"RTN","FBCHVH",25,0)
 S FBCDAYS=$P(FBY2,U,10) ; covered days
"RTN","FBCHVH",26,0)
 S FBCSID=$P(FBY2,U,11) ; patient control number
"RTN","FBCHVH",27,0)
 S FBFPPSC=$P(FBY3,U) ; fpps claim id
"RTN","FBCHVH",28,0)
 S FBFPPSL=$P(FBY3,U,2) ; fpps line item
"RTN","FBCHVH",29,0)
 S FBX=$$ADJLRA^FBCHFA(FBI_",")
"RTN","FBCHVH",30,0)
 S FBADJLR=$P(FBX,U)
"RTN","FBCHVH",31,0)
 S FBADJLA=$P(FBX,U,2)
"RTN","FBCHVH",32,0)
 S FBRRMKL=$$RRL^FBCHFR(FBI_",")
"RTN","FBCHVH",33,0)
WRT I $Y+6>IOSL D HANG^FBAAUTL1:$E(IOST,1,2)["C-" Q:FBAAOUT  I $D(^FBAAI(FBI,4)) D HEDC
"RTN","FBCHVH",34,0)
 W !,$S('$D(FBIN(13)):"",FBIN(13)="R":"*",1:""),$S($G(FBCAN)]"":"+",1:"")
"RTN","FBCHVH",35,0)
 W VADM(1)_"  "_$P(VADM(2),"^",2),?48,FBCSID
"RTN","FBCHVH",36,0)
 W !,?4,FBVEN,?45,FBVID,?62,FBIN(1)
"RTN","FBCHVH",37,0)
 W !,$S(FBIN(13)["R":"*",1:""),$S(FBIN(14)]"":"#",1:"")
"RTN","FBCHVH",38,0)
 W ?4,FBFPPSC,?18,FBFPPSL,?35,FBIN(2),?46,$$DATX^FBAAUTL(FBVINDT),?57,FBIN(6),?68,FBIN(7)
"RTN","FBCHVH",39,0)
 W !?4,$J(FBIN(8),1,2),?17,$J(FBIN(9),1,2),?29,FBCDAYS
"RTN","FBCHVH",40,0)
 ; write adjustment reasons, if null then write suspend code
"RTN","FBCHVH",41,0)
 W ?39,$S(FBADJLR]"":FBADJLR,1:FBIN(11))
"RTN","FBCHVH",42,0)
 ; write adjustment amounts, if null then write amount suspended
"RTN","FBCHVH",43,0)
 W ?49,$S(FBADJLA]"":FBADJLA,1:$J(FBIN(10),1,2))
"RTN","FBCHVH",44,0)
 W ?64,FBRRMKL
"RTN","FBCHVH",45,0)
 ;write admitting diagnosis
"RTN","FBCHVH",46,0)
 S FBADMTDX=$P(FBY5,"^",9) I FBADMTDX]"" W !?2,"Admit Dx: ",$$ICD9^FBCSV1((FBADMTDX),$P($G(FBIN),"^",6))
"RTN","FBCHVH",47,0)
 ;write contract number
"RTN","FBCHVH",48,0)
 S FBCNTRN=$S($P(FBY5,U,8):$P($G(^FBAA(161.43,$P(FBY5,U,8),0)),U),1:"")
"RTN","FBCHVH",49,0)
 I FBCNTRN]"" W ?25,"Contract Number: ",FBCNTRN
"RTN","FBCHVH",50,0)
 ;set diagnosis code and present on admission code
"RTN","FBCHVH",51,0)
 N P1,P2
"RTN","FBCHVH",52,0)
 S P1=$G(^FBAAI(FBI,"DX"))
"RTN","FBCHVH",53,0)
 S P2=$G(^FBAAI(FBI,"POA"))
"RTN","FBCHVH",54,0)
 F K=1:1:25 D WRTDX
"RTN","FBCHVH",55,0)
 ;display procedure code with line item prov data - FB*3.5*135
"RTN","FBCHVH",56,0)
 N DIR,DUOUT,DTOUT,FBOUT,F135,L,P3,P5,RPROV,STRLEN,WRTPC
"RTN","FBCHVH",57,0)
 S P5=$G(^FBAAI(FBI,"PROC"))   ; Procedure codes
"RTN","FBCHVH",58,0)
 M RPROV=^FBAAI(FBI,"RPROV")   ; LI Provider array
"RTN","FBCHVH",59,0)
 S F135=24,FBOUT=0,STRLEN=66
"RTN","FBCHVH",60,0)
 F L=1:1:25 S WRTPC=$$WRTPC I WRTPC]"" D  Q:FBOUT
"RTN","FBCHVH",61,0)
 . S P3=$O(RPROV("B",L,0))
"RTN","FBCHVH",62,0)
 . I P3 D    ; display LI Provider and NPI/TAXONOMY data if present
"RTN","FBCHVH",63,0)
 .. W !,?4,"PROC: "_WRTPC,?17,"RENDERING PROV NAME (LI): "_$P(RPROV(P3,0),U,2) S F135=1+F135,STRLEN=66
"RTN","FBCHVH",64,0)
 .. I '$L($P(RPROV(P3,0),U,3)),'$L($P(RPROV(P3,0),U,4)) Q
"RTN","FBCHVH",65,0)
 .. W !,?22,"NPI: "_$P(RPROV(P3,0),U,3),?43,"TAXONOMY CODE: "_$P(RPROV(P3,0),U,4) S F135=1+F135
"RTN","FBCHVH",66,0)
 . E  D  Q   ; only display procedure code
"RTN","FBCHVH",67,0)
 .. I STRLEN>65 W !,?4,"PROC: " S STRLEN=0    ; start new line
"RTN","FBCHVH",68,0)
 .. W WRTPC_" " S STRLEN=1+STRLEN+$L(WRTPC)
"RTN","FBCHVH",69,0)
 . I F135>22 S F135=0,STRLEN=66,DIR(0)="E" W ! D ^DIR K DIR S:$D(DUOUT)!($D(DTOUT)) FBOUT=1   ; pagination
"RTN","FBCHVH",70,0)
 N A2 S A2=FBIN(9) W ! D PMNT^FBAACCB2
"RTN","FBCHVH",71,0)
 Q
"RTN","FBCHVH",72,0)
WRTDX ;write dianosis code and present on admission code
"RTN","FBCHVH",73,0)
 N P3,P4
"RTN","FBCHVH",74,0)
 S FBDX=$P(P1,"^",K)
"RTN","FBCHVH",75,0)
 S FBPOA=$P(P2,"^",K)
"RTN","FBCHVH",76,0)
 Q:FBDX=""
"RTN","FBCHVH",77,0)
 S P3=$$ICD9^FBCSV1((FBDX),$P($G(FBIN),"^",6))_"/"
"RTN","FBCHVH",78,0)
 S P4=P3_$S(FBPOA:$P($G(^FB(161.94,FBPOA,0)),"^"),1:"")_" "
"RTN","FBCHVH",79,0)
 I K=1!($X+$L(P4)+2>IOM) W !,?4,"DX/POA: "
"RTN","FBCHVH",80,0)
 W P4,""
"RTN","FBCHVH",81,0)
 Q
"RTN","FBCHVH",82,0)
WRTPC() ;write procedure code (if present)    ; FB*3.5*135
"RTN","FBCHVH",83,0)
 N P6
"RTN","FBCHVH",84,0)
 S FBPROC=$P(P5,"^",L)
"RTN","FBCHVH",85,0)
 Q:FBPROC="" ""
"RTN","FBCHVH",86,0)
 S P6=$$ICD0^FBCSV1((FBPROC),$P($G(FBIN),"^",6))_" "
"RTN","FBCHVH",87,0)
 Q P6
"RTN","FBCHVH",88,0)
HEDC I $D(FBHEAD) W:'$G(FBPG) @IOF K:$G(FBPG) FBPG W ?25,FBHEAD_" PAYMENT HISTORY",!,?24,$E(Q,1,24),!?48,"Date Range: ",BEGDATE_" to "_ENDDATE
"RTN","FBCHVH",89,0)
 I '$D(FBHEAD) W:'$G(FBPG) @IOF K:$G(FBPG) FBPG W !?32,"INVOICE DISPLAY",!,?31,$E(Q,1,17),!
"RTN","FBCHVH",90,0)
 W !,"Veteran's Name",?48,"Patient Control Number"
"RTN","FBCHVH",91,0)
 W !,"('*'Reimbursement to Veteran   '+' Cancellation Activity)   '#' Voided Payment)"
"RTN","FBCHVH",92,0)
 W !,?4,"Vendor Name",?45,"Vendor ID",?59,"Invoice #"
"RTN","FBCHVH",93,0)
 ;W !,?3,"Fr Date",?14,"To Date  Claimed   Paid",?41,"Sus Code",?59,"Dt. Rec.",?69,"Inv. Date"
"RTN","FBCHVH",94,0)
 W !,?4,"FPPS Claim ID",?18,"FPPS Line Item",?35,"Date Rec.",?46,"Inv. Date",?57,"Fr Date",?68,"To Date"
"RTN","FBCHVH",95,0)
 W !,?4,"Amt Claimed",?17,"Amt Paid",?29,"Cov.Days",?39,"Adj Code",?49,"Adj Amount",?64,"Remit Remark"
"RTN","FBCHVH",96,0)
 W !,Q,!
"RTN","FBCHVH",97,0)
 Q
"RTN","FBCHVH",98,0)
CDAT S Y=$E(Y,4,5)_"/"_$S($E(Y,6,7)="00":$E(Y,2,3),1:$E(Y,6,7)_"/"_$E(Y,2,3)) Q
"RTN","FBCHVH",99,0)
GETDAT S Y=BEGDATE D PDF^FBAAUTL S BEGDATE=Y,Y=ENDDATE D PDF^FBAAUTL S ENDDATE=Y
"RTN","FBCHVH",100,0)
 Q
"RTN","FBCHVH",101,0)
PRVD ;DISPLAY PROVIDER INFORMATION BEFORE INVOICE DISPLAY FB*3.5*122
"RTN","FBCHVH",102,0)
 N FBPRI,FBSRVF,FBST
"RTN","FBCHVH",103,0)
 S FBPRI=$G(^FBAAI(FBI,4)),FBSRVF=$G(^FBAAI(FBI,5)),$P(FBSRVF,U,3)=$$GET1^DIQ(5,$P(FBSRVF,U,3)_",",1)
"RTN","FBCHVH",104,0)
 W @IOF,!?30,"INVOICE DISPLAY",!?30,"===============",!?28,"PROVIDER INFORMATION",!
"RTN","FBCHVH",105,0)
 I $L($P(FBPRI,U,1,3))>3 W !?3,"ATTENDING PROV NAME: "_$P(FBPRI,U),!?3,"ATTENDING PROV NPI: "_$P(FBPRI,U,2),?35,"ATTENDING PROV TAXONOMY CODE: "_$P(FBPRI,U,3)
"RTN","FBCHVH",106,0)
 I $L($P(FBPRI,U,4,5))>2 W !!?3,"OPERATING PROV NAME: "_$P(FBPRI,U,4),!?3,"OPERATING PROV NPI: "_$P(FBPRI,U,5)
"RTN","FBCHVH",107,0)
 I $L($P(FBPRI,U,6,8))>3 W !!?3,"RENDERING PROV NAME: "_$P(FBPRI,U,6),!?3,"RENDERING PROV NPI: "_$P(FBPRI,U,7),?35,"RENDERING PROV TAXONOMY CODE: "_$P(FBPRI,U,8)
"RTN","FBCHVH",108,0)
 I $L($P(FBPRI,U,9,10))>2 W !!?3,"SERVICING PROV NAME: "_$P(FBPRI,U,9),!?3,"SERVICING PROV NPI: "_$P(FBPRI,U,10)
"RTN","FBCHVH",109,0)
 I $L($P(FBSRVF,U,1,4))>4 W !?3,"SERVICING FACILITY ADDRESS: ",!?5,$P(FBSRVF,U),!?5,$P(FBSRVF,U,2) I $P(FBSRVF,U,2)'="" W ", "
"RTN","FBCHVH",110,0)
 W $P(FBSRVF,U,3)_" "_$P(FBSRVF,U,4)
"RTN","FBCHVH",111,0)
 I $L($P(FBPRI,U,11,12))>2 W !!?3,"REFERRING PROV NAME: "_$P(FBPRI,U,11),!?3,"REFERRING PROV NPI: "_$P(FBPRI,U,12),!!
"RTN","FBCHVH",112,0)
 S DIR(0)="E" D ^DIR
"RTN","FBCHVH",113,0)
 Q
"UP",162,162.04,-1)
162^3
"UP",162,162.04,0)
162.04
"VER")
8.0^22.0
"^DD",162,162.04,1,0)
TRAVEL BATCH NUMBER^R*P161.7'X^FBAA(161.7,^0;2^S DIC("S")="I $P(^(0),U,3)=""B2""&($P(^(0),U,5)=DUZ)&($P($G(^(""ST"")),U)=""O"")" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",162,162.04,1,1,0)
^.1
"^DD",162,162.04,1,1,1,0)
162^AD
"^DD",162,162.04,1,1,1,1)
S ^FBAAC("AD",$E(X,1,30),DA(1),DA)=""
"^DD",162,162.04,1,1,1,2)
K ^FBAAC("AD",$E(X,1,30),DA(1),DA)
"^DD",162,162.04,1,3)
Select the batch number associated with this travel payment.
"^DD",162,162.04,1,12)
Allows selection of travel batches in open status, which were opened by this specific user.
"^DD",162,162.04,1,12.1)
S DIC("S")="I $P(^(0),U,3)=""B2""&($P(^(0),U,5)=DUZ)&($P($G(^(""ST"")),U)=""O"")"
"^DD",162,162.04,1,21,0)
^^1^1^2930514^^
"^DD",162,162.04,1,21,1,0)
The batch number that this travel payment will be associated with.
"^DD",162,162.04,1,"DT")
3121204
"BLD",8710,6)
^122
**END**
**END**
