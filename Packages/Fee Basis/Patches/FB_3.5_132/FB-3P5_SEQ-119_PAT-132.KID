Released FB*3.5*132 SEQ #119
Extracted from mail message
**KIDS**:FB*3.5*132^

**INSTALL NAME**
FB*3.5*132
"BLD",8911,0)
FB*3.5*132^FEE BASIS^0^3121107^y
"BLD",8911,1,0)
^^22^22^3120404^^
"BLD",8911,1,1,0)
This patch is part of the VistA Fee and IFCAP Automation Enhancements
"BLD",8911,1,2,0)
project (aka Duplicate Payments).
"BLD",8911,1,3,0)
 
"BLD",8911,1,4,0)
This patch will enhance the interface between VistA Fee Basis and Central
"BLD",8911,1,5,0)
Fee to improve the consistency of payment line item data between the
"BLD",8911,1,6,0)
systems.  This will prevent duplicate ICN payments by ensuring that a 
"BLD",8911,1,7,0)
payment line cannot be reprocessed in VistA Fee Basis unless it has been 
"BLD",8911,1,8,0)
removed from Central Fee.  The primary interface enhancements consist of 
"BLD",8911,1,9,0)
the following:
"BLD",8911,1,10,0)
 o Rejection of payment line items by Central Fee will be transmitted to
"BLD",8911,1,11,0)
   VistA Fee Basis via new transactions that update the VistA database.  
"BLD",8911,1,12,0)
   Users will no longer manually record such rejects in VistA.
"BLD",8911,1,13,0)
 o Completion of a payment batch using the Finalize a Batch option in
"BLD",8911,1,14,0)
   VistA Fee Basis will automatically generate a new transaction that is
"BLD",8911,1,15,0)
   sent to Central Fee.  This new transaction will instruct Central Fee of
"BLD",8911,1,16,0)
   any payment line items that must be deleted (i.e. local rejects) and
"BLD",8911,1,17,0)
   instruct Central Fee to release the remainder of the batch to
"BLD",8911,1,18,0)
   downstream payment systems such as FMS.  This new transaction will
"BLD",8911,1,19,0)
   replace all use of 994 code sheets in IFCAP.
"BLD",8911,1,20,0)
 
"BLD",8911,1,21,0)
This patch also resolves three existing software faults that were 
"BLD",8911,1,22,0)
discovered during analysis and design of the patch.
"BLD",8911,4,0)
^9.64PA^161.99^6
"BLD",8911,4,161.45,0)
161.45
"BLD",8911,4,161.45,2,0)
^9.641^161.45^1
"BLD",8911,4,161.45,2,161.45,0)
FEE BASIS PAYMENT MOVES  (File-top level)
"BLD",8911,4,161.45,2,161.45,1,0)
^9.6411^2^2
"BLD",8911,4,161.45,2,161.45,1,.01,0)
FILE #
"BLD",8911,4,161.45,2,161.45,1,2,0)
NEW IENS
"BLD",8911,4,161.45,222)
y^n^p^^^^n^^n
"BLD",8911,4,161.45,224)

"BLD",8911,4,161.7,0)
161.7
"BLD",8911,4,161.7,2,0)
^9.641^161.7^1
"BLD",8911,4,161.7,2,161.7,0)
FEE BASIS BATCH  (File-top level)
"BLD",8911,4,161.7,2,161.7,1,0)
^9.6411^25^7
"BLD",8911,4,161.7,2,161.7,1,11,0)
STATUS
"BLD",8911,4,161.7,2,161.7,1,20,0)
FINALIZED WITH VISTA
"BLD",8911,4,161.7,2,161.7,1,21,0)
VOUCHER MSG DATE
"BLD",8911,4,161.7,2,161.7,1,22,0)
VOUCHER MSG ACK STATUS
"BLD",8911,4,161.7,2,161.7,1,23,0)
STATUS SET TO RETRANSMIT BY
"BLD",8911,4,161.7,2,161.7,1,24,0)
STATUS SET TO RETRANSMIT DATE
"BLD",8911,4,161.7,2,161.7,1,25,0)
TRANSMITTED BATCH WAS REJECTED
"BLD",8911,4,161.7,222)
y^n^p^^^^n^^n
"BLD",8911,4,161.7,224)

"BLD",8911,4,161.99,0)
161.99
"BLD",8911,4,161.99,222)
y^y^f^^n^^y^o^n
"BLD",8911,4,162,0)
162
"BLD",8911,4,162,2,0)
^9.641^162.041^4
"BLD",8911,4,162,2,162.03,0)
SERVICE PROVIDED  (sub-file)
"BLD",8911,4,162,2,162.03,1,0)
^9.6411^7^3
"BLD",8911,4,162,2,162.03,1,7,0)
BATCH NUMBER
"BLD",8911,4,162,2,162.03,1,14,0)
INVOICE NUMBER
"BLD",8911,4,162,2,162.03,1,21.3,0)
INTERFACE REJECT
"BLD",8911,4,162,2,162.031,0)
REJECT CODE  (sub-file)
"BLD",8911,4,162,2,162.031,1,0)
^9.6411^^
"BLD",8911,4,162,2,162.04,0)
TRAVEL PAYMENT DATE  (sub-file)
"BLD",8911,4,162,2,162.04,1,0)
^9.6411^6.3^1
"BLD",8911,4,162,2,162.04,1,6.3,0)
INTERFACE REJECT
"BLD",8911,4,162,2,162.041,0)
REJECT CODE  (sub-file)
"BLD",8911,4,162,2,162.041,1,0)
^9.6411^^
"BLD",8911,4,162,222)
y^n^p^^^^n^^n
"BLD",8911,4,162,224)

"BLD",8911,4,162.1,0)
162.1
"BLD",8911,4,162.1,2,0)
^9.641^162.111^2
"BLD",8911,4,162.1,2,162.11,0)
PRESCRIPTION NUMBER  (sub-file)
"BLD",8911,4,162.1,2,162.11,1,0)
^9.6411^19.3^1
"BLD",8911,4,162.1,2,162.11,1,19.3,0)
INTERFACE REJECT
"BLD",8911,4,162.1,2,162.111,0)
REJECT CODE  (sub-file)
"BLD",8911,4,162.1,2,162.111,1,0)
^9.6411^^
"BLD",8911,4,162.1,222)
y^n^p^^^^n^^n
"BLD",8911,4,162.1,224)

"BLD",8911,4,162.5,0)
162.5
"BLD",8911,4,162.5,2,0)
^9.641^162.515^2
"BLD",8911,4,162.5,2,162.5,0)
FEE BASIS INVOICE  (File-top level)
"BLD",8911,4,162.5,2,162.5,1,0)
^9.6411^15.3^1
"BLD",8911,4,162.5,2,162.5,1,15.3,0)
INTERFACE REJECT
"BLD",8911,4,162.5,2,162.515,0)
REJECT CODE  (sub-file)
"BLD",8911,4,162.5,2,162.515,1,0)
^9.6411^^
"BLD",8911,4,162.5,222)
y^n^p^^^^n^^n
"BLD",8911,4,162.5,224)

"BLD",8911,4,"APDD",161.45,161.45)

"BLD",8911,4,"APDD",161.45,161.45,.01)

"BLD",8911,4,"APDD",161.45,161.45,2)

"BLD",8911,4,"APDD",161.7,161.7)

"BLD",8911,4,"APDD",161.7,161.7,11)

"BLD",8911,4,"APDD",161.7,161.7,20)

"BLD",8911,4,"APDD",161.7,161.7,21)

"BLD",8911,4,"APDD",161.7,161.7,22)

"BLD",8911,4,"APDD",161.7,161.7,23)

"BLD",8911,4,"APDD",161.7,161.7,24)

"BLD",8911,4,"APDD",161.7,161.7,25)

"BLD",8911,4,"APDD",162,162.03)

"BLD",8911,4,"APDD",162,162.03,7)

"BLD",8911,4,"APDD",162,162.03,14)

"BLD",8911,4,"APDD",162,162.03,21.3)

"BLD",8911,4,"APDD",162,162.031)

"BLD",8911,4,"APDD",162,162.04)

"BLD",8911,4,"APDD",162,162.04,6.3)

"BLD",8911,4,"APDD",162,162.041)

"BLD",8911,4,"APDD",162.1,162.11)

"BLD",8911,4,"APDD",162.1,162.11,19.3)

"BLD",8911,4,"APDD",162.1,162.111)

"BLD",8911,4,"APDD",162.5,162.5)

"BLD",8911,4,"APDD",162.5,162.5,15.3)

"BLD",8911,4,"APDD",162.5,162.515)

"BLD",8911,4,"B",161.45,161.45)

"BLD",8911,4,"B",161.7,161.7)

"BLD",8911,4,"B",161.99,161.99)

"BLD",8911,4,"B",162,162)

"BLD",8911,4,"B",162.1,162.1)

"BLD",8911,4,"B",162.5,162.5)

"BLD",8911,6.3)
17
"BLD",8911,"INI")
PR^FBXIP132
"BLD",8911,"INIT")
PS^FBXIP132
"BLD",8911,"KRN",0)
^9.67PA^779.2^20
"BLD",8911,"KRN",.4,0)
.4
"BLD",8911,"KRN",.401,0)
.401
"BLD",8911,"KRN",.402,0)
.402
"BLD",8911,"KRN",.403,0)
.403
"BLD",8911,"KRN",.5,0)
.5
"BLD",8911,"KRN",.84,0)
.84
"BLD",8911,"KRN",3.6,0)
3.6
"BLD",8911,"KRN",3.6,"NM",0)
^9.68A^1^1
"BLD",8911,"KRN",3.6,"NM",1,0)
FBAA SERVER^^0
"BLD",8911,"KRN",3.6,"NM","B","FBAA SERVER",1)

"BLD",8911,"KRN",3.8,0)
3.8
"BLD",8911,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",8911,"KRN",3.8,"NM",1,0)
FEE FINANCE^^0
"BLD",8911,"KRN",3.8,"NM","B","FEE FINANCE",1)

"BLD",8911,"KRN",9.2,0)
9.2
"BLD",8911,"KRN",9.8,0)
9.8
"BLD",8911,"KRN",9.8,"NM",0)
^9.68A^45^44
"BLD",8911,"KRN",9.8,"NM",1,0)
FBXIP132^^0^B8043750
"BLD",8911,"KRN",9.8,"NM",2,0)
FB1358^^0^B28348622
"BLD",8911,"KRN",9.8,"NM",3,0)
FBMRASV2^^0^B20185478
"BLD",8911,"KRN",9.8,"NM",4,0)
FBPAID1^^0^B17574969
"BLD",8911,"KRN",9.8,"NM",5,0)
FBSVBR^^0^B72554273
"BLD",8911,"KRN",9.8,"NM",6,0)
FBAAVR^^0^B27838493
"BLD",8911,"KRN",9.8,"NM",7,0)
FBAADD^^0^B6478201
"BLD",8911,"KRN",9.8,"NM",8,0)
FBAAUTL1^^0^B22206482
"BLD",8911,"KRN",9.8,"NM",9,0)
FBAAVR0^^0^B11021288
"BLD",8911,"KRN",9.8,"NM",10,0)
FBAAVR1^^0^B14166230
"BLD",8911,"KRN",9.8,"NM",11,0)
FBAAVR2^^0^B7234769
"BLD",8911,"KRN",9.8,"NM",12,0)
FBSVVA^^0^B19365869
"BLD",8911,"KRN",9.8,"NM",13,0)
FBAARD^^0^B22001848
"BLD",8911,"KRN",9.8,"NM",14,0)
FBAARD0^^0^B6586917
"BLD",8911,"KRN",9.8,"NM",15,0)
FBAARD1^^0^B9198257
"BLD",8911,"KRN",9.8,"NM",16,0)
FBAARD2^^0^B16756936
"BLD",8911,"KRN",9.8,"NM",17,0)
FBAARD3^^0^B1840852
"BLD",8911,"KRN",9.8,"NM",18,0)
FBSVPR^^0^B35954279
"BLD",8911,"KRN",9.8,"NM",19,0)
FBAARJP^^0^B44159952
"BLD",8911,"KRN",9.8,"NM",20,0)
FBAARR^^0^B31401239
"BLD",8911,"KRN",9.8,"NM",21,0)
FBAARR0^^0^B7588254
"BLD",8911,"KRN",9.8,"NM",22,0)
FBAARR1^^0^B19022226
"BLD",8911,"KRN",9.8,"NM",23,0)
FBAARR2^^0^B8520138
"BLD",8911,"KRN",9.8,"NM",25,0)
FBAABT^^0^B11583784
"BLD",8911,"KRN",9.8,"NM",26,0)
FBAAEPI^^0^B20120074
"BLD",8911,"KRN",9.8,"NM",27,0)
FBAAPET^^0^B42847501
"BLD",8911,"KRN",9.8,"NM",28,0)
FBCHPET^^0^B40150841
"BLD",8911,"KRN",9.8,"NM",29,0)
FBCHDIN^^0^B5017257
"BLD",8911,"KRN",9.8,"NM",30,0)
FBCHEP1^^0^B39885067
"BLD",8911,"KRN",9.8,"NM",31,0)
FBNHEDPA^^0^B15639852
"BLD",8911,"KRN",9.8,"NM",32,0)
FBAABDL^^0^B8137938
"BLD",8911,"KRN",9.8,"NM",33,0)
FBAAV0^^0^B44344317
"BLD",8911,"KRN",9.8,"NM",34,0)
FBAAV3^^0^B3409907
"BLD",8911,"KRN",9.8,"NM",35,0)
FBAASCB^^0^B27212930
"BLD",8911,"KRN",9.8,"NM",36,0)
FBAASCB0^^0^B19510216
"BLD",8911,"KRN",9.8,"NM",37,0)
FBAAVR4^^0^B24607302
"BLD",8911,"KRN",9.8,"NM",38,0)
FBAAVR5^^0^B40211184
"BLD",8911,"KRN",9.8,"NM",39,0)
FBAAVR6^^0^B12051113
"BLD",8911,"KRN",9.8,"NM",40,0)
FBAABS^^0^B1208762
"BLD",8911,"KRN",9.8,"NM",41,0)
FBAADD1^^0^B29573874
"BLD",8911,"KRN",9.8,"NM",42,0)
FBAARR3^^0^B24328371
"BLD",8911,"KRN",9.8,"NM",43,0)
FBAAVR3^^0^B14888732
"BLD",8911,"KRN",9.8,"NM",44,0)
FBAAPAR^^0^B93982366
"BLD",8911,"KRN",9.8,"NM",45,0)
FBAAUTL3^^0^B4132421
"BLD",8911,"KRN",9.8,"NM","B","FB1358",2)

"BLD",8911,"KRN",9.8,"NM","B","FBAABDL",32)

"BLD",8911,"KRN",9.8,"NM","B","FBAABS",40)

"BLD",8911,"KRN",9.8,"NM","B","FBAABT",25)

"BLD",8911,"KRN",9.8,"NM","B","FBAADD",7)

"BLD",8911,"KRN",9.8,"NM","B","FBAADD1",41)

"BLD",8911,"KRN",9.8,"NM","B","FBAAEPI",26)

"BLD",8911,"KRN",9.8,"NM","B","FBAAPAR",44)

"BLD",8911,"KRN",9.8,"NM","B","FBAAPET",27)

"BLD",8911,"KRN",9.8,"NM","B","FBAARD",13)

"BLD",8911,"KRN",9.8,"NM","B","FBAARD0",14)

"BLD",8911,"KRN",9.8,"NM","B","FBAARD1",15)

"BLD",8911,"KRN",9.8,"NM","B","FBAARD2",16)

"BLD",8911,"KRN",9.8,"NM","B","FBAARD3",17)

"BLD",8911,"KRN",9.8,"NM","B","FBAARJP",19)

"BLD",8911,"KRN",9.8,"NM","B","FBAARR",20)

"BLD",8911,"KRN",9.8,"NM","B","FBAARR0",21)

"BLD",8911,"KRN",9.8,"NM","B","FBAARR1",22)

"BLD",8911,"KRN",9.8,"NM","B","FBAARR2",23)

"BLD",8911,"KRN",9.8,"NM","B","FBAARR3",42)

"BLD",8911,"KRN",9.8,"NM","B","FBAASCB",35)

"BLD",8911,"KRN",9.8,"NM","B","FBAASCB0",36)

"BLD",8911,"KRN",9.8,"NM","B","FBAAUTL1",8)

"BLD",8911,"KRN",9.8,"NM","B","FBAAUTL3",45)

"BLD",8911,"KRN",9.8,"NM","B","FBAAV0",33)

"BLD",8911,"KRN",9.8,"NM","B","FBAAV3",34)

"BLD",8911,"KRN",9.8,"NM","B","FBAAVR",6)

"BLD",8911,"KRN",9.8,"NM","B","FBAAVR0",9)

"BLD",8911,"KRN",9.8,"NM","B","FBAAVR1",10)

"BLD",8911,"KRN",9.8,"NM","B","FBAAVR2",11)

"BLD",8911,"KRN",9.8,"NM","B","FBAAVR3",43)

"BLD",8911,"KRN",9.8,"NM","B","FBAAVR4",37)

"BLD",8911,"KRN",9.8,"NM","B","FBAAVR5",38)

"BLD",8911,"KRN",9.8,"NM","B","FBAAVR6",39)

"BLD",8911,"KRN",9.8,"NM","B","FBCHDIN",29)

"BLD",8911,"KRN",9.8,"NM","B","FBCHEP1",30)

"BLD",8911,"KRN",9.8,"NM","B","FBCHPET",28)

"BLD",8911,"KRN",9.8,"NM","B","FBMRASV2",3)

"BLD",8911,"KRN",9.8,"NM","B","FBNHEDPA",31)

"BLD",8911,"KRN",9.8,"NM","B","FBPAID1",4)

"BLD",8911,"KRN",9.8,"NM","B","FBSVBR",5)

"BLD",8911,"KRN",9.8,"NM","B","FBSVPR",18)

"BLD",8911,"KRN",9.8,"NM","B","FBSVVA",12)

"BLD",8911,"KRN",9.8,"NM","B","FBXIP132",1)

"BLD",8911,"KRN",19,0)
19
"BLD",8911,"KRN",19,"NM",0)
^9.68A^8^8
"BLD",8911,"KRN",19,"NM",1,0)
FBAA FINALIZE BATCH^^0
"BLD",8911,"KRN",19,"NM",2,0)
FBAA VOUCHER DELETE REJECT^^0
"BLD",8911,"KRN",19,"NM",3,0)
FBAA OUTPUTS MENU^^2
"BLD",8911,"KRN",19,"NM",4,0)
FBCH OUTPUT MENU^^2
"BLD",8911,"KRN",19,"NM",5,0)
FBAA RESEND VOUCHER MSG^^0
"BLD",8911,"KRN",19,"NM",6,0)
FBAA REPROCESS BATCH^^0
"BLD",8911,"KRN",19,"NM",7,0)
FBAA SUPERVISOR OPTIONS^^2
"BLD",8911,"KRN",19,"NM",8,0)
FB PAYMENT AGING RPT^^0
"BLD",8911,"KRN",19,"NM","B","FB PAYMENT AGING RPT",8)

"BLD",8911,"KRN",19,"NM","B","FBAA FINALIZE BATCH",1)

"BLD",8911,"KRN",19,"NM","B","FBAA OUTPUTS MENU",3)

"BLD",8911,"KRN",19,"NM","B","FBAA REPROCESS BATCH",6)

"BLD",8911,"KRN",19,"NM","B","FBAA RESEND VOUCHER MSG",5)

"BLD",8911,"KRN",19,"NM","B","FBAA SUPERVISOR OPTIONS",7)

"BLD",8911,"KRN",19,"NM","B","FBAA VOUCHER DELETE REJECT",2)

"BLD",8911,"KRN",19,"NM","B","FBCH OUTPUT MENU",4)

"BLD",8911,"KRN",19.1,0)
19.1
"BLD",8911,"KRN",19.1,"NM",0)
^9.68A^2^2
"BLD",8911,"KRN",19.1,"NM",1,0)
FBAAFINANCE^^0
"BLD",8911,"KRN",19.1,"NM",2,0)
FBAAREJECT^^0
"BLD",8911,"KRN",19.1,"NM","B","FBAAFINANCE",1)

"BLD",8911,"KRN",19.1,"NM","B","FBAAREJECT",2)

"BLD",8911,"KRN",101,0)
101
"BLD",8911,"KRN",409.61,0)
409.61
"BLD",8911,"KRN",771,0)
771
"BLD",8911,"KRN",779.2,0)
779.2
"BLD",8911,"KRN",870,0)
870
"BLD",8911,"KRN",8989.51,0)
8989.51
"BLD",8911,"KRN",8989.52,0)
8989.52
"BLD",8911,"KRN",8994,0)
8994
"BLD",8911,"KRN","B",.4,.4)

"BLD",8911,"KRN","B",.401,.401)

"BLD",8911,"KRN","B",.402,.402)

"BLD",8911,"KRN","B",.403,.403)

"BLD",8911,"KRN","B",.5,.5)

"BLD",8911,"KRN","B",.84,.84)

"BLD",8911,"KRN","B",3.6,3.6)

"BLD",8911,"KRN","B",3.8,3.8)

"BLD",8911,"KRN","B",9.2,9.2)

"BLD",8911,"KRN","B",9.8,9.8)

"BLD",8911,"KRN","B",19,19)

"BLD",8911,"KRN","B",19.1,19.1)

"BLD",8911,"KRN","B",101,101)

"BLD",8911,"KRN","B",409.61,409.61)

"BLD",8911,"KRN","B",771,771)

"BLD",8911,"KRN","B",779.2,779.2)

"BLD",8911,"KRN","B",870,870)

"BLD",8911,"KRN","B",8989.51,8989.51)

"BLD",8911,"KRN","B",8989.52,8989.52)

"BLD",8911,"KRN","B",8994,8994)

"BLD",8911,"PRE")
FBXIP132
"BLD",8911,"QDEF")
^^^^NO^^^^^^YES
"BLD",8911,"QUES",0)
^9.62^^
"BLD",8911,"REQB",0)
^9.611^9^8
"BLD",8911,"REQB",1,0)
FB*3.5*9^2
"BLD",8911,"REQB",3,0)
FB*3.5*114^2
"BLD",8911,"REQB",4,0)
FB*3.5*117^2
"BLD",8911,"REQB",5,0)
FB*3.5*121^2
"BLD",8911,"REQB",6,0)
FB*3.5*131^2
"BLD",8911,"REQB",7,0)
FB*3.5*108^2
"BLD",8911,"REQB",8,0)
PRC*5.1*162^2
"BLD",8911,"REQB",9,0)
FB*3.5*124^2
"BLD",8911,"REQB","B","FB*3.5*108",7)

"BLD",8911,"REQB","B","FB*3.5*114",3)

"BLD",8911,"REQB","B","FB*3.5*117",4)

"BLD",8911,"REQB","B","FB*3.5*121",5)

"BLD",8911,"REQB","B","FB*3.5*124",9)

"BLD",8911,"REQB","B","FB*3.5*131",6)

"BLD",8911,"REQB","B","FB*3.5*9",1)

"BLD",8911,"REQB","B","PRC*5.1*162",8)

"DATA",161.99,1,0)
C001
"DATA",161.99,1,1,0)
^^2^2^3120420
"DATA",161.99,1,1,1,0)
Treatment code on Veteran MRA or medical payment is
"DATA",161.99,1,1,2,0)
incorrect/missing.  
"DATA",161.99,2,0)
C002
"DATA",161.99,2,1,0)
^^1^1^3120420
"DATA",161.99,2,1,1,0)
First initial of Veteran was not alpha or it was blank.  
"DATA",161.99,3,0)
C003
"DATA",161.99,3,1,0)
^^1^1^3120420
"DATA",161.99,3,1,1,0)
Middle initial of Veteran was not alpha or blank.  
"DATA",161.99,4,0)
C004
"DATA",161.99,4,1,0)
^^1^1^3120420
"DATA",161.99,4,1,1,0)
First three positions in Vendor name was incorrectly formatted.  
"DATA",161.99,5,0)
C005
"DATA",161.99,5,1,0)
^^1^1^3120420
"DATA",161.99,5,1,1,0)
Invalid Veteran ID.  
"DATA",161.99,6,0)
C006
"DATA",161.99,6,1,0)
^^1^1^3120420
"DATA",161.99,6,1,1,0)
Invalid Veteran ID suffix 
"DATA",161.99,7,0)
C007
"DATA",161.99,7,1,0)
^^1^1^3120420
"DATA",161.99,7,1,1,0)
County code missing or incompatible with numeric state code.  
"DATA",161.99,8,0)
C008
"DATA",161.99,8,1,0)
^^1^1^3120420
"DATA",161.99,8,1,1,0)
Invalid POV.  
"DATA",161.99,9,0)
C00E
"DATA",161.99,9,1,0)
^^1^1^3120420
"DATA",161.99,9,1,1,0)
The Veteran is Active at another Site 
"DATA",161.99,10,0)
C010
"DATA",161.99,10,1,0)
^^1^1^3120420
"DATA",161.99,10,1,1,0)
The state abbreviation inconsistent with the numeric state code.  
"DATA",161.99,11,0)
C011
"DATA",161.99,11,1,0)
^^1^1^3120420
"DATA",161.99,11,1,1,0)
Invalid patient type.  
"DATA",161.99,12,0)
C012
"DATA",161.99,12,1,0)
^^1^1^3120420
"DATA",161.99,12,1,1,0)
Invalid Birth Date.  
"DATA",161.99,13,0)
C013
"DATA",161.99,13,1,0)
^^1^1^3120420
"DATA",161.99,13,1,1,0)
Invalid war code.  
"DATA",161.99,14,0)
C014
"DATA",161.99,14,1,0)
^^2^2^3120420
"DATA",161.99,14,1,1,0)
Incorrect station number (in all transactions). Must be 3-digit
"DATA",161.99,14,1,2,0)
numeric with no blanks.  
"DATA",161.99,15,0)
C015
"DATA",161.99,15,1,0)
^^1^1^3120420
"DATA",161.99,15,1,1,0)
Invalid payment type.  
"DATA",161.99,16,0)
C016
"DATA",161.99,16,1,0)
^^1^1^3120420
"DATA",161.99,16,1,1,0)
Incorrect transaction type.  
"DATA",161.99,17,0)
C017
"DATA",161.99,17,1,0)
^^1^1^3120420
"DATA",161.99,17,1,1,0)
Batch Header with no transactions.  
"DATA",161.99,18,0)
C018
"DATA",161.99,18,1,0)
^^1^1^3120420
"DATA",161.99,18,1,1,0)
Invalid Action Code.  
"DATA",161.99,19,0)
C019
"DATA",161.99,19,1,0)
^^1^1^3120420
"DATA",161.99,19,1,1,0)
Invalid Action Code. (i.e.. 7R not allowed) 
"DATA",161.99,20,0)
C020
"DATA",161.99,20,1,0)
^^1^1^3120420
"DATA",161.99,20,1,1,0)
Invalid D MRA transaction.  
"DATA",161.99,21,0)
C021
"DATA",161.99,21,1,0)
^^1^1^3120420
"DATA",161.99,21,1,1,0)
Invalid R MRA transaction.  
"DATA",161.99,22,0)
C022
"DATA",161.99,22,1,0)
^^1^1^3120420
"DATA",161.99,22,1,1,0)
Cannot add this record.  
"DATA",161.99,23,0)
C023
"DATA",161.99,23,1,0)
^^1^1^3120420
"DATA",161.99,23,1,1,0)
Cannot add this record or process payment transaction.  
"DATA",161.99,24,0)
C024
"DATA",161.99,24,1,0)
^^1^1^3120420
"DATA",161.99,24,1,1,0)
Invalid Change transaction.  
"DATA",161.99,25,0)
C026
"DATA",161.99,25,1,0)
^^1^1^3120420
"DATA",161.99,25,1,1,0)
Cannot delete or add.  
"DATA",161.99,26,0)
C027
"DATA",161.99,26,1,0)
^^1^1^3120420
"DATA",161.99,26,1,1,0)
Cannot reinstate.  
"DATA",161.99,27,0)
C028
"DATA",161.99,27,1,0)
^^1^1^3120420
"DATA",161.99,27,1,1,0)
Invalid interest indicator.  
"DATA",161.99,28,0)
C030
"DATA",161.99,28,1,0)
^^1^1^3120420
"DATA",161.99,28,1,1,0)
City cannot be blank on Veteran/Vendor A type MRA.  
"DATA",161.99,29,0)
C031
"DATA",161.99,29,1,0)
^^2^2^3120420
"DATA",161.99,29,1,1,0)
State must be a valid 2-letter abbreviation on the Veteran/Vendor A
"DATA",161.99,29,1,2,0)
type MRA.  
"DATA",161.99,30,0)
C032
"DATA",161.99,30,1,0)
^^1^1^3120420
"DATA",161.99,30,1,1,0)
ZIP code not numeric.  
"DATA",161.99,31,0)
C033
"DATA",161.99,31,1,0)
^^2^2^3120420^
"DATA",161.99,31,1,1,0)
POW code must be either 1 or 2. Cannot be blank for action code A for 
"DATA",161.99,31,1,2,0)
veterans.
"DATA",161.99,32,0)
C034
"DATA",161.99,32,1,0)
^^1^1^3120420
"DATA",161.99,32,1,1,0)
Sex Code must be 1 or 2.  
"DATA",161.99,33,0)
C035
"DATA",161.99,33,1,0)
^^1^1^3120420
"DATA",161.99,33,1,1,0)
Date of death conflict with ID Card issue date.  
"DATA",161.99,34,0)
C037
"DATA",161.99,34,1,0)
^^2^2^3120420
"DATA",161.99,34,1,1,0)
Veteran ID number on input payment transaction does not match Veteran
"DATA",161.99,34,1,2,0)
Master Record data.  
"DATA",161.99,35,0)
C038
"DATA",161.99,35,1,0)
^^2^2^3120420
"DATA",161.99,35,1,1,0)
Medical/Pharmacy payment date do not fall within the validity period
"DATA",161.99,35,1,2,0)
of the Authorization used.  
"DATA",161.99,36,0)
C039
"DATA",161.99,36,1,0)
^^1^1^3120420
"DATA",161.99,36,1,1,0)
Veteran is active in 3 stations.  
"DATA",161.99,37,0)
C040
"DATA",161.99,37,1,0)
^^1^1^3120420
"DATA",161.99,37,1,1,0)
Invalid Vendor Participation Code.  
"DATA",161.99,38,0)
C041
"DATA",161.99,38,1,0)
^^1^1^3120420
"DATA",161.99,38,1,1,0)
Invalid Participant ID number.  
"DATA",161.99,39,0)
C043
"DATA",161.99,39,1,0)
^^1^1^3120420
"DATA",161.99,39,1,1,0)
Vendor not in Central FEE file.  
"DATA",161.99,40,0)
C044
"DATA",161.99,40,1,0)
^^1^1^3120420
"DATA",161.99,40,1,1,0)
Station not on FEE Pharmacy program.  
"DATA",161.99,41,0)
C045
"DATA",161.99,41,1,0)
^^1^1^3120420
"DATA",161.99,41,1,1,0)
FEE ONLY indicator must be 1 and cannot be blank.  
"DATA",161.99,42,0)
C046
"DATA",161.99,42,1,0)
^^1^1^3120420
"DATA",161.99,42,1,1,0)
Veteran ID card issue date invalid.  
"DATA",161.99,43,0)
C047
"DATA",161.99,43,1,0)
^^1^1^3120420
"DATA",161.99,43,1,1,0)
Invalid Veteran ID card end-of-validity date.  
"DATA",161.99,44,0)
C049
"DATA",161.99,44,1,0)
^^1^1^3120420
"DATA",161.99,44,1,1,0)
Invalid Pharmacy Chain number.  
"DATA",161.99,45,0)
C050
"DATA",161.99,45,1,0)
^^1^1^3120420
"DATA",161.99,45,1,1,0)
Invalid invoice date.  
"DATA",161.99,46,0)
C051
"DATA",161.99,46,1,0)
^^1^1^3120420
"DATA",161.99,46,1,1,0)
Invalid prescription filled date.  
"DATA",161.99,47,0)
C052
"DATA",161.99,47,1,0)
^^1^1^3120420
"DATA",161.99,47,1,1,0)
Invalid prescription number.  
"DATA",161.99,48,0)
C053
"DATA",161.99,48,1,0)
^^1^1^3120420
"DATA",161.99,48,1,1,0)
Invalid Pharmacy amount claimed.  
"DATA",161.99,49,0)
C054
"DATA",161.99,49,1,0)
^^1^1^3120420
"DATA",161.99,49,1,1,0)
Invalid Pharmacy amount approved.  
"DATA",161.99,50,0)
C055
"DATA",161.99,50,1,0)
^^1^1^3120420
"DATA",161.99,50,1,1,0)
Invalid NVH amount claimed.  
"DATA",161.99,51,0)
C056
"DATA",161.99,51,1,0)
^^2^2^3120420
"DATA",161.99,51,1,1,0)
Inconsistency with amount approved and amount claimed or missing
"DATA",161.99,51,1,2,0)
adjustment code.  
"DATA",161.99,52,0)
C057
"DATA",161.99,52,1,0)
^^1^1^3120420
"DATA",161.99,52,1,1,0)
Invalid PSA.  
"DATA",161.99,53,0)
C058
"DATA",161.99,53,1,0)
^^1^1^3120420
"DATA",161.99,53,1,1,0)
Missing first ICD-9/ICD-10 code.  
"DATA",161.99,54,0)
C059
"DATA",161.99,54,1,0)
^^1^1^3120420
"DATA",161.99,54,1,1,0)
Duplicate batch number and type on the travel payment.  
"DATA",161.99,55,0)
C060
"DATA",161.99,55,1,0)
^^1^1^3120420
"DATA",161.99,55,1,1,0)
Invalid Vendor MRA - not in the Central Fee file.  
"DATA",161.99,56,0)
C061
"DATA",161.99,56,1,0)
^^1^1^3120420
"DATA",161.99,56,1,1,0)
Invalid Obligation number.  
"DATA",161.99,57,0)
C063
"DATA",161.99,57,1,0)
^^1^1^3120420
"DATA",161.99,57,1,1,0)
Invalid Treatment date or travel payment.  
"DATA",161.99,58,0)
C064
"DATA",161.99,58,1,0)
^^1^1^3120420
"DATA",161.99,58,1,1,0)
Invalid NVH Pricer amount.  
"DATA",161.99,59,0)
C065
"DATA",161.99,59,1,0)
^^1^1^3120420
"DATA",161.99,59,1,1,0)
Invalid Medical amount.  
"DATA",161.99,60,0)
C066
"DATA",161.99,60,1,0)
^^1^1^3120420
"DATA",161.99,60,1,1,0)
Invalid Travel amount approved.  
"DATA",161.99,61,0)
C068
"DATA",161.99,61,1,0)
^^1^1^3120420
"DATA",161.99,61,1,1,0)
Invalid Change MRA.  
"DATA",161.99,62,0)
C069
"DATA",161.99,62,1,0)
^^1^1^3120420
"DATA",161.99,62,1,1,0)
Invalid invoice number.  
"DATA",161.99,63,0)
C071
"DATA",161.99,63,1,0)
^^1^1^3120420
"DATA",161.99,63,1,1,0)
Missing CPT/HCPCS code.  
"DATA",161.99,64,0)
C073
"DATA",161.99,64,1,0)
^^1^1^3120420
"DATA",161.99,64,1,1,0)
Invalid payment type on the statistical batch header.  
"DATA",161.99,65,0)
C074
"DATA",161.99,65,1,0)
^^1^1^3120420
"DATA",161.99,65,1,1,0)
Invalid Vendor change MRA.  
"DATA",161.99,66,0)
C076
"DATA",161.99,66,1,0)
^^1^1^3120420
"DATA",161.99,66,1,1,0)
Invalid Vendor invoice date.  
"DATA",161.99,67,0)
C082
"DATA",161.99,67,1,0)
^^1^1^3120420
"DATA",161.99,67,1,1,0)
Invalid amount in the header transaction.  
"DATA",161.99,68,0)
C084
"DATA",161.99,68,1,0)
^^1^1^3120420
"DATA",161.99,68,1,1,0)
Invalid Obligation prefix.  
"DATA",161.99,69,0)
C086
"DATA",161.99,69,1,0)
^^1^1^3120420
"DATA",161.99,69,1,1,0)
Invalid 994 transaction.  
"DATA",161.99,70,0)
C087
"DATA",161.99,70,1,0)
^^1^1^3120420
"DATA",161.99,70,1,1,0)
Invalid routing indicator.  
"DATA",161.99,71,0)
C088
"DATA",161.99,71,1,0)
^^1^1^3120420
"DATA",161.99,71,1,1,0)
Invalid transaction format.  
"DATA",161.99,72,0)
C089
"DATA",161.99,72,1,0)
^^1^1^3120420
"DATA",161.99,72,1,1,0)
Invalid transaction date.  
"DATA",161.99,73,0)
C090
"DATA",161.99,73,1,0)
^^1^1^3120420
"DATA",161.99,73,1,1,0)
Invalid reference number.  
"DATA",161.99,74,0)
C091
"DATA",161.99,74,1,0)
^^1^1^3120420
"DATA",161.99,74,1,1,0)
Invalid 994 transaction.  
"DATA",161.99,75,0)
C092
"DATA",161.99,75,1,0)
^^1^1^3120420
"DATA",161.99,75,1,1,0)
Invalid control number.  
"DATA",161.99,76,0)
C093
"DATA",161.99,76,1,0)
^^1^1^3120420
"DATA",161.99,76,1,1,0)
Invalid Vendor ID.  
"DATA",161.99,77,0)
C094
"DATA",161.99,77,1,0)
^^1^1^3120420
"DATA",161.99,77,1,1,0)
Duplicate Vendor Record.  
"DATA",161.99,78,0)
C095
"DATA",161.99,78,1,0)
^^1^1^3120420
"DATA",161.99,78,1,1,0)
Vendor ID is not in FMS Vendor file.  
"DATA",161.99,79,0)
C096
"DATA",161.99,79,1,0)
^^1^1^3120420
"DATA",161.99,79,1,1,0)
Central Remit Vendor ID cannot be determined or blocked.  
"DATA",161.99,80,0)
C097
"DATA",161.99,80,1,0)
^^1^1^3120420
"DATA",161.99,80,1,1,0)
Invalid Admission date.  
"DATA",161.99,81,0)
C098
"DATA",161.99,81,1,0)
^^1^1^3120420
"DATA",161.99,81,1,1,0)
Invalid Discharge date.  
"DATA",161.99,82,0)
C102
"DATA",161.99,82,1,0)
^^1^1^3120420
"DATA",161.99,82,1,1,0)
Invalid amount.  
"DATA",161.99,83,0)
C105
"DATA",161.99,83,1,0)
^^1^1^3120420
"DATA",161.99,83,1,1,0)
Missing PAT reference number or missing reason code.  
"DATA",161.99,84,0)
C106
"DATA",161.99,84,1,0)
^^1^1^3120420
"DATA",161.99,84,1,1,0)
Invalid or missing Admission date.  
"DATA",161.99,85,0)
C107
"DATA",161.99,85,1,0)
^^1^1^3120420
"DATA",161.99,85,1,1,0)
Missing Discharge date.  
"DATA",161.99,86,0)
C108
"DATA",161.99,86,1,0)
^^1^1^3120420
"DATA",161.99,86,1,1,0)
Invalid Discharge date.  
"DATA",161.99,87,0)
C109
"DATA",161.99,87,1,0)
^^1^1^3120420
"DATA",161.99,87,1,1,0)
Invalid volume indicator.  
"DATA",161.99,88,0)
C110
"DATA",161.99,88,1,0)
^^1^1^3120420
"DATA",161.99,88,1,1,0)
Invalid Authorized flag.  
"DATA",161.99,89,0)
C111
"DATA",161.99,89,1,0)
^^1^1^3120420
"DATA",161.99,89,1,1,0)
Invalid Adjustment amount.  
"DATA",161.99,90,0)
C112
"DATA",161.99,90,1,0)
^^1^1^3120420
"DATA",161.99,90,1,1,0)
Missing Adjustment Reason Code.  
"DATA",161.99,91,0)
C113
"DATA",161.99,91,1,0)
^^2^2^3120420
"DATA",161.99,91,1,1,0)
INVALID NATIONAL PROVIDER INDICATOR (NPI).  INPUT NPI DOESN'T MATCH
"DATA",161.99,91,1,2,0)
FEE NPI.  
"DATA",161.99,92,0)
C114
"DATA",161.99,92,1,0)
^^1^1^3120420
"DATA",161.99,92,1,1,0)
Invalid NPI.  
"DATA",161.99,93,0)
C115
"DATA",161.99,93,1,0)
^^1^1^3120420
"DATA",161.99,93,1,1,0)
Physician Specialty code is invalid.  
"DATA",161.99,94,0)
C116
"DATA",161.99,94,1,0)
^^1^1^3120420
"DATA",161.99,94,1,1,0)
Invoice number or invoice date is blank.  
"DATA",161.99,95,0)
C149
"DATA",161.99,95,1,0)
^^1^1^3120420
"DATA",161.99,95,1,1,0)
Another payment for this line item was received on the same day.  
"DATA",161.99,96,0)
C150
"DATA",161.99,96,1,0)
^^2^2^3120420
"DATA",161.99,96,1,1,0)
Another payment for this line item is in process, or already
"DATA",161.99,96,1,2,0)
confirmed by Treasury.  
"DATA",161.99,97,0)
C151
"DATA",161.99,97,1,0)
^^1^1^3120420
"DATA",161.99,97,1,1,0)
Invalid payment format from VistA.  
"DATA",161.99,98,0)
C165
"DATA",161.99,98,1,0)
^161.991^1^1^3120912^
"DATA",161.99,98,1,1,0)
For an invoice, the sum of its line amounts must be greater than zero.
"DATA",161.99,99,0)
C200
"DATA",161.99,99,1,0)
^^1^1^3120420
"DATA",161.99,99,1,1,0)
Invalid Voucher Batch Header.  
"DATA",161.99,100,0)
C201
"DATA",161.99,100,1,0)
^^1^1^3120420
"DATA",161.99,100,1,1,0)
Invalid Voucher Batch detail format.  
"DATA",161.99,101,0)
C202
"DATA",161.99,101,1,0)
^^1^1^3120420
"DATA",161.99,101,1,1,0)
Invalid Voucher Batch payment type.  
"DATA",161.99,102,0)
C203
"DATA",161.99,102,1,0)
^^1^1^3120420
"DATA",161.99,102,1,1,0)
Invalid Voucher Batch date.  
"DATA",161.99,103,0)
C204
"DATA",161.99,103,1,0)
^^1^1^3120420
"DATA",161.99,103,1,1,0)
Invalid Voucher Batch Station.  
"DATA",161.99,104,0)
C205
"DATA",161.99,104,1,0)
^^1^1^3120420
"DATA",161.99,104,1,1,0)
Invalid Voucher Batch number.  
"DATA",161.99,105,0)
C206
"DATA",161.99,105,1,0)
^^1^1^3120420
"DATA",161.99,105,1,1,0)
Invalid Voucher Batch detail count.  
"DATA",161.99,106,0)
C207
"DATA",161.99,106,1,0)
^^1^1^3120420
"DATA",161.99,106,1,1,0)
Voucher Batch payment mismatch with the hold payments file.  
"DATA",161.99,107,0)
C208
"DATA",161.99,107,1,0)
^^1^1^3120420
"DATA",161.99,107,1,1,0)
Invalid Processing stage.  
"DATA",161.99,108,0)
C209
"DATA",161.99,108,1,0)
^^1^1^3120420
"DATA",161.99,108,1,1,0)
Voucher Batch Header mismatch with the batch detail.  
"DATA",161.99,109,0)
C210
"DATA",161.99,109,1,0)
^^1^1^3120420
"DATA",161.99,109,1,1,0)
Voucher Batch detail mismatch with the payment line item.  
"DATA",161.99,110,0)
CC07
"DATA",161.99,110,1,0)
^^2^2^3120420
"DATA",161.99,110,1,1,0)
County code missing or incompatible with numeric state code on
"DATA",161.99,110,1,2,0)
confidential address.  
"DATA",161.99,111,0)
CC10
"DATA",161.99,111,1,0)
^^2^2^3120420
"DATA",161.99,111,1,1,0)
The state abbreviation inconsistent with the numeric state code on
"DATA",161.99,111,1,2,0)
confidential address.  
"DATA",161.99,112,0)
CC30
"DATA",161.99,112,1,0)
^^1^1^3120420
"DATA",161.99,112,1,1,0)
City cannot be blank on the confidential address.  
"DATA",161.99,113,0)
CC31
"DATA",161.99,113,1,0)
^^2^2^3120420
"DATA",161.99,113,1,1,0)
State must be a valid 2-letter abbreviation on the Veteran A type
"DATA",161.99,113,1,2,0)
MRA.  
"DATA",161.99,114,0)
CC32
"DATA",161.99,114,1,0)
^^1^1^3120420
"DATA",161.99,114,1,1,0)
ZIP code on Confidential Address not numeric.  
"DATA",161.99,115,0)
CC46
"DATA",161.99,115,1,0)
^^1^1^3120420
"DATA",161.99,115,1,1,0)
Invalid Confidential Communications Start Date format.  
"DATA",161.99,116,0)
CC47
"DATA",161.99,116,1,0)
^^1^1^3120420
"DATA",161.99,116,1,1,0)
Invalid Confidential Communications End Date format.  
"DATA",161.99,117,0)
FMS1
"DATA",161.99,117,1,0)
^^1^1^3120420
"DATA",161.99,117,1,1,0)
Rejected as a duplicate payment ID, by FMS.  
"DATA",161.99,118,0)
FMS2
"DATA",161.99,118,1,0)
^^1^1^3120420
"DATA",161.99,118,1,1,0)
Payment reversed by the user, in FMS 
"DATA",161.99,119,0)
FMS3
"DATA",161.99,119,1,0)
^^1^1^3120420
"DATA",161.99,119,1,1,0)
Payment archived by FMS.  
"DATA",161.99,120,0)
FMS4
"DATA",161.99,120,1,0)
^^1^1^3120420
"DATA",161.99,120,1,1,0)
Payment deleted by the user, in FMS.  
"DATA",161.99,121,0)
C152
"DATA",161.99,121,1,0)
^161.991^1^1^3120912^^
"DATA",161.99,121,1,1,0)
Batch total amount not equal to sum of detail line amounts.
"FIA",161.45)
FEE BASIS PAYMENT MOVES
"FIA",161.45,0)
^FBAA(161.45,
"FIA",161.45,0,0)
161.45
"FIA",161.45,0,1)
y^n^p^^^^n^^n
"FIA",161.45,0,10)

"FIA",161.45,0,11)

"FIA",161.45,0,"RLRO")

"FIA",161.45,0,"VR")
3.5^FB
"FIA",161.45,161.45)
1
"FIA",161.45,161.45,.01)

"FIA",161.45,161.45,2)

"FIA",161.7)
FEE BASIS BATCH
"FIA",161.7,0)
^FBAA(161.7,
"FIA",161.7,0,0)
161.7I
"FIA",161.7,0,1)
y^n^p^^^^n^^n
"FIA",161.7,0,10)

"FIA",161.7,0,11)

"FIA",161.7,0,"RLRO")

"FIA",161.7,0,"VR")
3.5^FB
"FIA",161.7,161.7)
1
"FIA",161.7,161.7,11)

"FIA",161.7,161.7,20)

"FIA",161.7,161.7,21)

"FIA",161.7,161.7,22)

"FIA",161.7,161.7,23)

"FIA",161.7,161.7,24)

"FIA",161.7,161.7,25)

"FIA",161.99)
FEE BASIS PAYMENT REJECT CODE
"FIA",161.99,0)
^FBAA(161.99,
"FIA",161.99,0,0)
161.99
"FIA",161.99,0,1)
y^y^f^^n^^y^o^n
"FIA",161.99,0,10)

"FIA",161.99,0,11)

"FIA",161.99,0,"RLRO")

"FIA",161.99,0,"VR")
3.5^FB
"FIA",161.99,161.99)
0
"FIA",161.99,161.991)
0
"FIA",162)
FEE BASIS PAYMENT
"FIA",162,0)
^FBAAC(
"FIA",162,0,0)
162P
"FIA",162,0,1)
y^n^p^^^^n^^n
"FIA",162,0,10)

"FIA",162,0,11)

"FIA",162,0,"RLRO")

"FIA",162,0,"VR")
3.5^FB
"FIA",162,162)
1
"FIA",162,162.03)
1
"FIA",162,162.03,7)

"FIA",162,162.03,14)

"FIA",162,162.03,21.3)

"FIA",162,162.03,21.6)

"FIA",162,162.031)
0
"FIA",162,162.04)
1
"FIA",162,162.04,6.3)

"FIA",162,162.04,6.6)

"FIA",162,162.041)
0
"FIA",162.1)
FEE BASIS PHARMACY INVOICE
"FIA",162.1,0)
^FBAA(162.1,
"FIA",162.1,0,0)
162.1
"FIA",162.1,0,1)
y^n^p^^^^n^^n
"FIA",162.1,0,10)

"FIA",162.1,0,11)

"FIA",162.1,0,"RLRO")

"FIA",162.1,0,"VR")
3.5^FB
"FIA",162.1,162.1)
1
"FIA",162.1,162.11)
1
"FIA",162.1,162.11,19.3)

"FIA",162.1,162.11,19.6)

"FIA",162.1,162.111)
0
"FIA",162.5)
FEE BASIS INVOICE
"FIA",162.5,0)
^FBAAI(
"FIA",162.5,0,0)
162.5
"FIA",162.5,0,1)
y^n^p^^^^n^^n
"FIA",162.5,0,10)

"FIA",162.5,0,11)

"FIA",162.5,0,"RLRO")

"FIA",162.5,0,"VR")
3.5^FB
"FIA",162.5,162.5)
1
"FIA",162.5,162.5,15.3)

"FIA",162.5,162.5,15.6)

"FIA",162.5,162.515)
0
"INI")
PR^FBXIP132
"INIT")
PS^FBXIP132
"IX",161.45,161.45,"AN",0)
161.45^AN^Index of the FILE # and NEW IENS.^R^^R^IR^I^161.45^^^^^S
"IX",161.45,161.45,"AN",.1,0)
^^3^3^3111214^
"IX",161.45,161.45,"AN",.1,1,0)
This index will be used to locate the entry containing the OLD IENS value
"IX",161.45,161.45,"AN",.1,2,0)
given a FILE # and NEW IENS value for a payment line item that was moved
"IX",161.45,161.45,"AN",.1,3,0)
by a patient merge process.
"IX",161.45,161.45,"AN",1)
S ^FBAA(161.45,"AN",$E(X(1),1,30),$E(X(2),1,30),DA)=""
"IX",161.45,161.45,"AN",2)
K ^FBAA(161.45,"AN",$E(X(1),1,30),$E(X(2),1,30),DA)
"IX",161.45,161.45,"AN",2.5)
K ^FBAA(161.45,"AN")
"IX",161.45,161.45,"AN",11.1,0)
^.114IA^2^2
"IX",161.45,161.45,"AN",11.1,1,0)
1^F^161.45^.01^30^1^F
"IX",161.45,161.45,"AN",11.1,2,0)
2^F^161.45^2^30^2^F
"IX",161.45,161.45,"C",0)
161.45^C^Index of file and old iens^R^^R^IR^I^161.45^^^^^LS
"IX",161.45,161.45,"C",1)
S ^FBAA(161.45,"C",$E(X(1),1,30),$E(X(2),1,30),DA)=""
"IX",161.45,161.45,"C",2)
K ^FBAA(161.45,"C",$E(X(1),1,30),$E(X(2),1,30),DA)
"IX",161.45,161.45,"C",2.5)
K ^FBAA(161.45,"C")
"IX",161.45,161.45,"C",11.1,0)
^.114IA^2^2
"IX",161.45,161.45,"C",11.1,1,0)
1^F^161.45^.01^30^1^F
"IX",161.45,161.45,"C",11.1,1,3)

"IX",161.45,161.45,"C",11.1,2,0)
2^F^161.45^1^30^2^F
"IX",161.45,161.45,"C",11.1,2,3)

"IX",162,162,"AJ",0)
162^AJ^Index on batch number and invoice number.^R^^R^IR^W^162.03^^^^^S
"IX",162,162,"AJ",.1,0)
^^2^2^3111213^
"IX",162,162,"AJ",.1,1,0)
This is a whole file index on the BATCH NUMBER and INVOICE NUMBER fields
"IX",162,162,"AJ",.1,2,0)
that are located in the SERVICE PROVIDED multiple.
"IX",162,162,"AJ",1)
S ^FBAAC("AJ",X(1),X(2),DA(3),DA(2),DA(1),DA)=""
"IX",162,162,"AJ",2)
K ^FBAAC("AJ",X(1),X(2),DA(3),DA(2),DA(1),DA)
"IX",162,162,"AJ",2.5)
K ^FBAAC("AJ")
"IX",162,162,"AJ",11.1,0)
^.114IA^2^2
"IX",162,162,"AJ",11.1,1,0)
1^F^162.03^7^^1^F
"IX",162,162,"AJ",11.1,2,0)
2^F^162.03^14^^2^F
"KEY",161.45,161.45,"A",0)
161.45^A^P^10
"KEY",161.45,161.45,"A",2,0)
^.312IA^2^2
"KEY",161.45,161.45,"A",2,1,0)
.01^161.45^1
"KEY",161.45,161.45,"A",2,2,0)
1^161.45^2
"KEYPTR",161.45,161.45,"A")
161.45^C
"KRN",3.6,294,-1)
0^1
"KRN",3.6,294,0)
FBAA SERVER^Fee Server Notification |7|
"KRN",3.6,294,1,0)
^3.61A^13^13^3120229^^^^
"KRN",3.6,294,1,1,0)
                 |1|
"KRN",3.6,294,1,2,0)
  
"KRN",3.6,294,1,3,0)
A request for execution of a server option has been received.
"KRN",3.6,294,1,4,0)
  
"KRN",3.6,294,1,5,0)
Sender: |2|
"KRN",3.6,294,1,6,0)
Option name: |3|
"KRN",3.6,294,1,7,0)
Subject: |4|
"KRN",3.6,294,1,8,0)
Message #: |5|
"KRN",3.6,294,1,9,0)
  
"KRN",3.6,294,1,10,0)
Comments: |6|
"KRN",3.6,294,1,11,0)
   
"KRN",3.6,294,1,12,0)
This is the bulletin named FBAA SERVER.
"KRN",3.6,294,1,13,0)
   
"KRN",3.6,294,3,0)
^3.63^2^2^3120229^^^^
"KRN",3.6,294,3,1,0)
This bulletin is used by the Fee Basis software to notify users about 
"KRN",3.6,294,3,2,0)
server request events.
"KRN",3.6,294,4,0)
^3.64A^7^7
"KRN",3.6,294,4,1,0)
1
"KRN",3.6,294,4,1,1,0)
^^1^1^3111214^
"KRN",3.6,294,4,1,1,1,0)
The date and time in human-readable form.
"KRN",3.6,294,4,2,0)
2
"KRN",3.6,294,4,2,1,0)
^3.65^1^1^3111214^^^^
"KRN",3.6,294,4,2,1,1,0)
The name of the sender of the server request.
"KRN",3.6,294,4,3,0)
3
"KRN",3.6,294,4,3,1,0)
^3.65^1^1^3111214^^^
"KRN",3.6,294,4,3,1,1,0)
The name of the option which was requested by Mailman.
"KRN",3.6,294,4,4,0)
4
"KRN",3.6,294,4,4,1,0)
^3.65^1^1^3111214^^^^
"KRN",3.6,294,4,4,1,1,0)
The subject of the message which requested a server.
"KRN",3.6,294,4,5,0)
5
"KRN",3.6,294,4,5,1,0)
^3.65^1^1^3111214^^^^
"KRN",3.6,294,4,5,1,1,0)
The internal number of the message requesting a server.
"KRN",3.6,294,4,6,0)
6
"KRN",3.6,294,4,6,1,0)
^3.65^3^3^3111214^^
"KRN",3.6,294,4,6,1,1,0)
Comments appended to the bulletin.  These may include errors trapped
"KRN",3.6,294,4,6,1,2,0)
by the server software and/or the operating system, as well as general
"KRN",3.6,294,4,6,1,3,0)
purpose messages.
"KRN",3.6,294,4,7,0)
7
"KRN",3.6,294,4,7,1,0)
^3.65^1^1^3120229^^
"KRN",3.6,294,4,7,1,1,0)
Text to be appended to the message subject.
"KRN",3.8,6257,-1)
0^1
"KRN",3.8,6257,0)
FEE FINANCE^PU^n^^^^
"KRN",3.8,6257,2,0)
^3.801^11^11^3120131^^^
"KRN",3.8,6257,2,1,0)
This mail group receives messages from the Fee Basis software when 
"KRN",3.8,6257,2,2,0)
exceptions occur during processing of messages sent by Central Fee that
"KRN",3.8,6257,2,3,0)
are related to payment batches previously transmitted to Central Fee.
"KRN",3.8,6257,2,4,0)
 
"KRN",3.8,6257,2,5,0)
This mail group was created for finance staff.  The messages sent to this 
"KRN",3.8,6257,2,6,0)
mail group are also sent to another mail group (FEE).  Since the FEE mail
"KRN",3.8,6257,2,7,0)
group also receives messages that may not be of interest to finance staff,
"KRN",3.8,6257,2,8,0)
the seperate FEE FINANCE mail group was created.
"KRN",3.8,6257,2,9,0)
 
"KRN",3.8,6257,2,10,0)
The FBAA BATCH SERVER, FBAA VOUCHER SERVER, and FBAA REJECT SERVER options
"KRN",3.8,6257,2,11,0)
may send a message to this mail group.
"KRN",3.8,6257,3)

"KRN",19,441,-1)
2^7
"KRN",19,441,0)
FBAA SUPERVISOR OPTIONS^Supervisor Main Menu^^M^12222^FBAASUPERVISOR^^^^^^
"KRN",19,441,10,0)
^19.01IP^33^33
"KRN",19,441,10,17,0)
789^
"KRN",19,441,10,17,"^")
FBAA FINALIZE BATCH
"KRN",19,441,10,18,0)
790^
"KRN",19,441,10,18,"^")
FBAA VOUCHER DELETE REJECT
"KRN",19,441,10,30,0)
13757
"KRN",19,441,10,30,"^")
FBAA REPROCESS BATCH
"KRN",19,441,10,31,0)
13758
"KRN",19,441,10,31,"^")
FBAA RESEND VOUCHER MSG
"KRN",19,441,"U")
SUPERVISOR MAIN MENU
"KRN",19,624,-1)
2^3
"KRN",19,624,0)
FBAA OUTPUTS MENU^Outputs Main Menu^^M^.5^^^^^^^
"KRN",19,624,10,0)
^19.01IP^23^20
"KRN",19,624,10,23,0)
13759
"KRN",19,624,10,23,"^")
FB PAYMENT AGING RPT
"KRN",19,624,"U")
OUTPUTS MAIN MENU
"KRN",19,789,-1)
0^1
"KRN",19,789,0)
FBAA FINALIZE BATCH^Finalize a Batch^^R^^^^^^^^
"KRN",19,789,1,0)
^19.06^1^1^3120322^^^^
"KRN",19,789,1,1,0)
Used to reject payment items and release a batch.
"KRN",19,789,25)
FBAAVR
"KRN",19,789,99)
55626,34279
"KRN",19,789,"U")
FINALIZE A BATCH
"KRN",19,790,-1)
0^2
"KRN",19,790,0)
FBAA VOUCHER DELETE REJECT^Delete reject flag^^R^^FBAAREJECT^^^^^^
"KRN",19,790,1,0)
^19.06^2^2^3120326^^^^
"KRN",19,790,1,1,0)
Used to delete the reject flag previously entered for selected items in
"KRN",19,790,1,2,0)
a batch, or for all items in a batch.
"KRN",19,790,25)
FBAARD
"KRN",19,790,"U")
DELETE REJECT FLAG
"KRN",19,1300,-1)
2^4
"KRN",19,1300,0)
FBCH OUTPUT MENU^Output Menu^^M^.5^^^^^^^
"KRN",19,1300,10,0)
^19.01IP^21^17
"KRN",19,1300,10,21,0)
13759
"KRN",19,1300,10,21,"^")
FB PAYMENT AGING RPT
"KRN",19,1300,"U")
OUTPUT MENU
"KRN",19,13757,-1)
0^6
"KRN",19,13757,0)
FBAA REPROCESS BATCH^Reprocess Overdue Batch^^R^^FBAASUPERVISOR^^^^^^FEE BASIS
"KRN",19,13757,1,0)
^^16^16^3111214^
"KRN",19,13757,1,1,0)
This option is used to reprocess a transmitted payment batch that was not
"KRN",19,13757,1,2,0)
received by Central Fee.
"KRN",19,13757,1,3,0)
 
"KRN",19,13757,1,4,0)
If VistA Fee Basis does not receive a Payment Batch Result message by the 
"KRN",19,13757,1,5,0)
third weekday after transmission of the Payment Batch message, the 
"KRN",19,13757,1,6,0)
software will consider the result message as overdue.  A list of overdue 
"KRN",19,13757,1,7,0)
batches can be obtained by entering a ? at the select batch prompt of this
"KRN",19,13757,1,8,0)
option.
"KRN",19,13757,1,9,0)
 
"KRN",19,13757,1,10,0)
The site should contact the National Service Desk Austin to determine if
"KRN",19,13757,1,11,0)
Central Fee contains the overdue batch. If so, the site should request
"KRN",19,13757,1,12,0)
that the Payment Batch Results message be resent to VistA.  If Central Fee
"KRN",19,13757,1,13,0)
does not have the batch, the site can use this option to either change the
"KRN",19,13757,1,14,0)
batch status so the batch will be resent or to reject the entire batch so
"KRN",19,13757,1,15,0)
the line items can be re-initiated into a new batch, edited, and then
"KRN",19,13757,1,16,0)
resent with the new batch.
"KRN",19,13757,25)
FBAADD1
"KRN",19,13757,"U")
REPROCESS OVERDUE BATCH
"KRN",19,13758,-1)
0^5
"KRN",19,13758,0)
FBAA RESEND VOUCHER MSG^Resend Completed Batch^^R^^FBAASUPERVISOR^^^^^^FEE BASIS
"KRN",19,13758,1,0)
^19.06^15^15^3120329^^^
"KRN",19,13758,1,1,0)
This option can be used to resend a Voucher Batch message to Central Fee.
"KRN",19,13758,1,2,0)
 
"KRN",19,13758,1,3,0)
If VistA Fee Basis does not receive a Voucher Batch Acknowledgement 
"KRN",19,13758,1,4,0)
message by the third weekday after finalization of the batch, the software
"KRN",19,13758,1,5,0)
will consider the acknowledgement message as overdue. A list of batches
"KRN",19,13758,1,6,0)
with an overdue acknowledgement can be obtained by entering a ? at the
"KRN",19,13758,1,7,0)
select batch prompt of this option.  
"KRN",19,13758,1,8,0)
 
"KRN",19,13758,1,9,0)
The site should contact the National Service Desk Austin to determine if
"KRN",19,13758,1,10,0)
Central Fee received the Voucher Batch message.  If Central Fee received
"KRN",19,13758,1,11,0)
the Voucher Batch message, the site should request that the Voucher Batch
"KRN",19,13758,1,12,0)
Acknowledgement message be resent to VistA.  If Central Fee did not 
"KRN",19,13758,1,13,0)
receive the Voucher Batch message, the site can use the Resend Completed 
"KRN",19,13758,1,14,0)
Batch option in VistA to generate a new Voucher Batch message and send 
"KRN",19,13758,1,15,0)
that to Central Fee.
"KRN",19,13758,25)
RESEND^FBAAVR6
"KRN",19,13758,"U")
RESEND COMPLETED BATCH
"KRN",19,13759,-1)
0^8
"KRN",19,13759,0)
FB PAYMENT AGING RPT^Payment Aging Report^^R^^^^^^^^FEE BASIS
"KRN",19,13759,1,0)
^19.06^9^9^3120109^^
"KRN",19,13759,1,1,0)
This option generates a report of payments that have been transmitted to
"KRN",19,13759,1,2,0)
Central Fee and are still awaiting payment confirmation or cancellation in
"KRN",19,13759,1,3,0)
VistA.  The purpose of the new report is to identify payments in VistA Fee
"KRN",19,13759,1,4,0)
Basis that appear to have a problem because payment confirmation has not
"KRN",19,13759,1,5,0)
been received within an expected period.
"KRN",19,13759,1,6,0)
 
"KRN",19,13759,1,7,0)
Payment line items finalized within a user-specified period will be listed
"KRN",19,13759,1,8,0)
on this report if payment confirmation has not been received from Austin
"KRN",19,13759,1,9,0)
and the payment is not cancelled, flagged as rejected, or voided.
"KRN",19,13759,25)
FBAAPAR
"KRN",19,13759,"U")
PAYMENT AGING REPORT
"KRN",19.1,623,-1)
0^1
"KRN",19.1,623,0)
FBAAFINANCE
"KRN",19.1,623,1,0)
^19.11^5^5^3120912^^
"KRN",19.1,623,1,1,0)
Permits the holder to finalize (complete) a payment batch.  That action 
"KRN",19.1,623,1,2,0)
generates the Voucher Batch message which instructs Central Fee (Austin)
"KRN",19.1,623,1,3,0)
to release the payments to a downstream payment system such as FMS.  This
"KRN",19.1,623,1,4,0)
security key would normally be assigned to finance staff responsible for 
"KRN",19.1,623,1,5,0)
completing the batch.
"KRN",19.1,624,-1)
0^2
"KRN",19.1,624,0)
FBAAREJECT
"KRN",19.1,624,1,0)
^^2^2^3111214^
"KRN",19.1,624,1,1,0)
Permits the holder to flag payment line items as locally rejected and to
"KRN",19.1,624,1,2,0)
delete local reject flags that were entered in error.
"MBREQ")
0
"ORD",2,3.6)
3.6;2;1;;BUL^XPDTA1;;BULE1^XPDIA1;;;BULDEL^XPDIA1
"ORD",2,3.6,0)
BULLETIN
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",60,-1)
1^1
"PKG",60,0)
FEE BASIS^FB^Used to pay private vendors
"PKG",60,20,0)
^9.402P^1^1
"PKG",60,20,1,0)
2^^FBPMRG
"PKG",60,20,1,1)

"PKG",60,20,"B",2,1)

"PKG",60,22,0)
^9.49I^1^1
"PKG",60,22,1,0)
3.5^2950130^2950313
"PKG",60,22,1,"PAH",1,0)
132^3121107
"PKG",60,22,1,"PAH",1,1,0)
^^22^22^3121107
"PKG",60,22,1,"PAH",1,1,1,0)
This patch is part of the VistA Fee and IFCAP Automation Enhancements
"PKG",60,22,1,"PAH",1,1,2,0)
project (aka Duplicate Payments).
"PKG",60,22,1,"PAH",1,1,3,0)
 
"PKG",60,22,1,"PAH",1,1,4,0)
This patch will enhance the interface between VistA Fee Basis and Central
"PKG",60,22,1,"PAH",1,1,5,0)
Fee to improve the consistency of payment line item data between the
"PKG",60,22,1,"PAH",1,1,6,0)
systems.  This will prevent duplicate ICN payments by ensuring that a 
"PKG",60,22,1,"PAH",1,1,7,0)
payment line cannot be reprocessed in VistA Fee Basis unless it has been 
"PKG",60,22,1,"PAH",1,1,8,0)
removed from Central Fee.  The primary interface enhancements consist of 
"PKG",60,22,1,"PAH",1,1,9,0)
the following:
"PKG",60,22,1,"PAH",1,1,10,0)
 o Rejection of payment line items by Central Fee will be transmitted to
"PKG",60,22,1,"PAH",1,1,11,0)
   VistA Fee Basis via new transactions that update the VistA database.  
"PKG",60,22,1,"PAH",1,1,12,0)
   Users will no longer manually record such rejects in VistA.
"PKG",60,22,1,"PAH",1,1,13,0)
 o Completion of a payment batch using the Finalize a Batch option in
"PKG",60,22,1,"PAH",1,1,14,0)
   VistA Fee Basis will automatically generate a new transaction that is
"PKG",60,22,1,"PAH",1,1,15,0)
   sent to Central Fee.  This new transaction will instruct Central Fee of
"PKG",60,22,1,"PAH",1,1,16,0)
   any payment line items that must be deleted (i.e. local rejects) and
"PKG",60,22,1,"PAH",1,1,17,0)
   instruct Central Fee to release the remainder of the batch to
"PKG",60,22,1,"PAH",1,1,18,0)
   downstream payment systems such as FMS.  This new transaction will
"PKG",60,22,1,"PAH",1,1,19,0)
   replace all use of 994 code sheets in IFCAP.
"PKG",60,22,1,"PAH",1,1,20,0)
 
"PKG",60,22,1,"PAH",1,1,21,0)
This patch also resolves three existing software faults that were 
"PKG",60,22,1,"PAH",1,1,22,0)
discovered during analysis and design of the patch.
"PRE")
FBXIP132
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
44
"RTN","FB1358")
0^2^B28348622^n/a
"RTN","FB1358",1,0)
FB1358 ;WOIFO/SAB - IFCAP 1358 OBLIGATION UTILITIES ;3/13/2012
"RTN","FB1358",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FB1358",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FB1358",4,0)
 Q
"RTN","FB1358",5,0)
 ;
"RTN","FB1358",6,0)
CHK1358(FBAAOB) ; Determine if 1358 obligation is available for posting
"RTN","FB1358",7,0)
 ; input
"RTN","FB1358",8,0)
 ;   FBAAOB - (required) full obligation number including station
"RTN","FB1358",9,0)
 ;            (e.g. 500-C20001)
"RTN","FB1358",10,0)
 ; returns a value
"RTN","FB1358",11,0)
 ;   = 1 if 1358 is available for posting
"RTN","FB1358",12,0)
 ;   = 0^message if 1358 is not available for posting
"RTN","FB1358",13,0)
 ;   
"RTN","FB1358",14,0)
 N FBRET,PRCS,X,Y
"RTN","FB1358",15,0)
 S FBRET="0^1358 number not provided!"
"RTN","FB1358",16,0)
 I $G(FBAAOB)'="" D
"RTN","FB1358",17,0)
 . S PRCS("X")=FBAAOB
"RTN","FB1358",18,0)
 . S PRCS("TYPE")="FB"
"RTN","FB1358",19,0)
 . D EN3^PRCS58
"RTN","FB1358",20,0)
 . I Y=-1 S FBRET="0^1358 not available for posting!"
"RTN","FB1358",21,0)
 . E  S FBRET=1
"RTN","FB1358",22,0)
 ;
"RTN","FB1358",23,0)
 Q FBRET
"RTN","FB1358",24,0)
 ;   
"RTN","FB1358",25,0)
FND424(FB424ID) ; Find File 424 IEN
"RTN","FB1358",26,0)
 ; input
"RTN","FB1358",27,0)
 ;   FB424ID - (required) INTERFACE ID value of entry in file 424
"RTN","FB1358",28,0)
 ; returns file 424 internal entry number or null value if not found
"RTN","FB1358",29,0)
 ;
"RTN","FB1358",30,0)
 Q $S($G(FB424ID)]"":$O(^PRC(424,"E",FB424ID,0)),1:"")
"RTN","FB1358",31,0)
 ;
"RTN","FB1358",32,0)
POSTBAT(FBN,FBAAMT,FBACT,FBSKIP) ; Post to 1358 obligation by batch
"RTN","FB1358",33,0)
 ; This API is called to update an existing IFCAP authorization on a
"RTN","FB1358",34,0)
 ; 1358 obligation when the IFCAP authorization is by fee batch.
"RTN","FB1358",35,0)
 ; input
"RTN","FB1358",36,0)
 ;   FBN - (required) Batch IEN, file 161.7
"RTN","FB1358",37,0)
 ;   FBAAMT - (required) dollar amount
"RTN","FB1358",38,0)
 ;   FBACT - (required) action, value of "R" or "D"
"RTN","FB1358",39,0)
 ;           = "R" if called when payment flagged as rejected
"RTN","FB1358",40,0)
 ;           = "D" if called when reject flag is deleted
"RTN","FB1358",41,0)
 ;   FBSKIP (optional) =1 to skip control point access check
"RTN","FB1358",42,0)
 ; returns value
"RTN","FB1358",43,0)
 ;   = 1 if success
"RTN","FB1358",44,0)
 ;   = 0^message if unsuccessful
"RTN","FB1358",45,0)
 ;
"RTN","FB1358",46,0)
 N FB424,FBAAB,FBAAON,FBAASN,FBRET
"RTN","FB1358",47,0)
 S FBRET=1 ; initialize return value
"RTN","FB1358",48,0)
 ;
"RTN","FB1358",49,0)
 ; verify inputs
"RTN","FB1358",50,0)
 I $G(FBN)="" S FBRET="0^Batch IEN was not provided."
"RTN","FB1358",51,0)
 I $G(FBAAMT)="" S FBRET="0^Amount was not provided."
"RTN","FB1358",52,0)
 I "^R^D^"'[(U_$G(FBACT)_U) S FBRET="0^Invalid action code."
"RTN","FB1358",53,0)
 ;
"RTN","FB1358",54,0)
 ; get data from batch file
"RTN","FB1358",55,0)
 I FBRET D
"RTN","FB1358",56,0)
 . N FBX
"RTN","FB1358",57,0)
 . S FBX=$G(^FBAA(161.7,FBN,0))
"RTN","FB1358",58,0)
 . S FBAAB=$P(FBX,U,1) ; NUMBER
"RTN","FB1358",59,0)
 . S FBAAON=$P(FBX,U,2) ; OBLIGATION NUMBER
"RTN","FB1358",60,0)
 . S FBAASN=$P(FBX,U,8) ; STATION NUMBER
"RTN","FB1358",61,0)
 . I FBAAB=""!(FBAAON="")!(FBAASN="") S FBRET="0^Invalid Batch Data for IEN "_FBN
"RTN","FB1358",62,0)
 ;
"RTN","FB1358",63,0)
 ; check if 1358 available for posting
"RTN","FB1358",64,0)
 I FBRET D
"RTN","FB1358",65,0)
 . N FBX
"RTN","FB1358",66,0)
 . S FBX=$$CHK1358(FBAASN_"-"_FBAAON)
"RTN","FB1358",67,0)
 . I 'FBX S FBRET=FBX
"RTN","FB1358",68,0)
 ;
"RTN","FB1358",69,0)
 ; determine 1358 daily record entry to update
"RTN","FB1358",70,0)
 I FBRET D
"RTN","FB1358",71,0)
 . S FB424=$$FND424(FBN)
"RTN","FB1358",72,0)
 . I FB424="" S FBRET="0^File 424 entry not found."
"RTN","FB1358",73,0)
 ;
"RTN","FB1358",74,0)
 ; post amount to IFCAP
"RTN","FB1358",75,0)
 I FBRET D
"RTN","FB1358",76,0)
 . N FBCOMM,PRCSX,Y
"RTN","FB1358",77,0)
 . ; determine comment
"RTN","FB1358",78,0)
 . I FBACT="R" S FBCOMM="Rejected items from batch "_FBAAB
"RTN","FB1358",79,0)
 . I FBACT="D" S FBCOMM="Deleted reject flags from batch "_FBAAB
"RTN","FB1358",80,0)
 . ; if action is reject then make amount negative to add dollars back
"RTN","FB1358",81,0)
 . I FBACT="R",FBAAMT>0 S FBAAMT=-FBAAMT
"RTN","FB1358",82,0)
 . ;
"RTN","FB1358",83,0)
 . S PRCSX=FB424_"^"_$$NOW^XLFDT_"^"_FBAAMT_"^"_$G(FBCOMM)_"^1"
"RTN","FB1358",84,0)
 . I $G(FBSKIP)=1 S $P(PRCSX,"^",7)="1"
"RTN","FB1358",85,0)
 . D ^PRCS58CC
"RTN","FB1358",86,0)
 . I Y'=1 S FBRET="0^"_$P(Y,"^",2)_"."
"RTN","FB1358",87,0)
 ;
"RTN","FB1358",88,0)
 Q FBRET
"RTN","FB1358",89,0)
 ;
"RTN","FB1358",90,0)
POSTINV(FBN,FBI,FBACT,FBSKIP) ; Post to 1358 obligation by invoice
"RTN","FB1358",91,0)
 ; This API is called to update an existing IFCAP authorization on a
"RTN","FB1358",92,0)
 ; 1358 obligation when the IFCAP authorization is posted by invoice.
"RTN","FB1358",93,0)
 ; input
"RTN","FB1358",94,0)
 ;   FBN - (required) Batch IEN, file 161.7
"RTN","FB1358",95,0)
 ;   FBI - (required) Invoice IEN, file 162.5
"RTN","FB1358",96,0)
 ;   FBACT - (required) action, value of "R" or "D"
"RTN","FB1358",97,0)
 ;           = "R" if called when payment flagged as rejected
"RTN","FB1358",98,0)
 ;           = "D" if called when reject flag is deleted
"RTN","FB1358",99,0)
 ;   FBSKIP (optional) =1 to skip control point access check
"RTN","FB1358",100,0)
 ; returns value
"RTN","FB1358",101,0)
 ;   = 1 if success
"RTN","FB1358",102,0)
 ;   = 0^message if unsuccessful
"RTN","FB1358",103,0)
 ;
"RTN","FB1358",104,0)
 N FB424,FBAAB,FBAAMT,FBAAON,FBAASN,FBDFN,FBII78,FBMM,FBPROG,FBRET
"RTN","FB1358",105,0)
 S FBRET=1 ; initialize return value
"RTN","FB1358",106,0)
 ;
"RTN","FB1358",107,0)
 ; verify inputs
"RTN","FB1358",108,0)
 I $G(FBN)="" S FBRET="0^Batch IEN was not provided."
"RTN","FB1358",109,0)
 I $G(FBI)="" S FBRET="0^Invoice IEN was not provided."
"RTN","FB1358",110,0)
 I "^R^D^"'[(U_$G(FBACT)_U) S FBRET="0^Invalid action code."
"RTN","FB1358",111,0)
 ;
"RTN","FB1358",112,0)
 ; get data from batch file
"RTN","FB1358",113,0)
 I FBRET D
"RTN","FB1358",114,0)
 . N FBX
"RTN","FB1358",115,0)
 . S FBX=$G(^FBAA(161.7,FBN,0))
"RTN","FB1358",116,0)
 . S FBAAB=$P(FBX,U,1) ; NUMBER
"RTN","FB1358",117,0)
 . S FBAASN=$P(FBX,U,8) ; STATION NUMBER
"RTN","FB1358",118,0)
 . S FBAAON=$P(FBX,U,2) ; OBLIGATION NUMBER
"RTN","FB1358",119,0)
 . I FBAAB=""!(FBAAON="")!(FBAASN="") S FBRET="0^Invalid Batch Data for IEN "_FBN
"RTN","FB1358",120,0)
 ;
"RTN","FB1358",121,0)
 ; check if 1358 available for posting
"RTN","FB1358",122,0)
 I FBRET D
"RTN","FB1358",123,0)
 . N FBX
"RTN","FB1358",124,0)
 . S FBX=$$CHK1358(FBAASN_"-"_FBAAON)
"RTN","FB1358",125,0)
 . I 'FBX S FBRET=FBX
"RTN","FB1358",126,0)
 ;
"RTN","FB1358",127,0)
 ; get invoice data
"RTN","FB1358",128,0)
 I FBRET D
"RTN","FB1358",129,0)
 . N FBX
"RTN","FB1358",130,0)
 . S FBX=$G(^FBAAI(FBI,0))
"RTN","FB1358",131,0)
 . S FBDFN=$P(FBX,"^",4) ; VETERAN
"RTN","FB1358",132,0)
 . S FBPROG=$P(FBX,"^",12) ; FEE PROGRAM
"RTN","FB1358",133,0)
 . S FBAAMT=$P(FBX,"^",9) ; AMOUNT PAID
"RTN","FB1358",134,0)
 . S FBII78=$P(FBX,"^",5) ; ASSOCIATED 7078/583
"RTN","FB1358",135,0)
 . I FBDFN=""!(FBPROG="")!(FBAAMT="")!(FBII78="") S FBRET="0^Invalid invoice data for IEN "_FBI
"RTN","FB1358",136,0)
 . ; if nursing home invoice get month
"RTN","FB1358",137,0)
 . I FBRET,FBPROG=7 D
"RTN","FB1358",138,0)
 . . S FBMM=$E($P(FBX,"^",7),4,5) ; 2 digit month from TREATMENT TO DATE 
"RTN","FB1358",139,0)
 . . I FBMM="" S FBRET="0^Invalid invoice data for IEN "_FBI
"RTN","FB1358",140,0)
 ;
"RTN","FB1358",141,0)
 I FBRET,FBII78["FB583" D
"RTN","FB1358",142,0)
 . S FBRET="0^Invoice is associated with an unauthorized claim."
"RTN","FB1358",143,0)
 ;
"RTN","FB1358",144,0)
 ; determine 1358 daily record entry to update
"RTN","FB1358",145,0)
 I FBRET D
"RTN","FB1358",146,0)
 . N FBX
"RTN","FB1358",147,0)
 . ; build interface ID
"RTN","FB1358",148,0)
 . S FBX=FBDFN_";"_+FBII78_";"_FBAAON
"RTN","FB1358",149,0)
 . I FBPROG=7 S FBX=FBX_";"_FBMM
"RTN","FB1358",150,0)
 . S FB424=$$FND424(FBX)
"RTN","FB1358",151,0)
 . I FB424="" S FBRET="0^File 424 entry not found."
"RTN","FB1358",152,0)
 ;
"RTN","FB1358",153,0)
 ; post amount to IFCAP
"RTN","FB1358",154,0)
 I FBRET D
"RTN","FB1358",155,0)
 . N FBCOMM,PRCSX,Y
"RTN","FB1358",156,0)
 . ; determine comment
"RTN","FB1358",157,0)
 . I FBACT="R" S FBCOMM="Rejected items from batch "_FBAAB
"RTN","FB1358",158,0)
 . I FBACT="D" S FBCOMM="Deleted reject flags from batch "_FBAAB
"RTN","FB1358",159,0)
 . ; if action is reject then make amount negative to add dollars back
"RTN","FB1358",160,0)
 . I FBACT="R",FBAAMT>0 S FBAAMT=-FBAAMT
"RTN","FB1358",161,0)
 . ;
"RTN","FB1358",162,0)
 . S PRCSX=FB424_"^"_$$NOW^XLFDT_"^"_FBAAMT_"^"_$G(FBCOMM)_"^1"
"RTN","FB1358",163,0)
 . I $G(FBSKIP)=1 S $P(PRCSX,"^",7)="1"
"RTN","FB1358",164,0)
 . D ^PRCS58CC
"RTN","FB1358",165,0)
 . I Y'=1 S FBRET="0^"_$P(Y,"^",2)_"."
"RTN","FB1358",166,0)
 ;
"RTN","FB1358",167,0)
 Q FBRET
"RTN","FB1358",168,0)
 ;
"RTN","FB1358",169,0)
 ;FB1358
"RTN","FBAABDL")
0^32^B8137938^B6967271
"RTN","FBAABDL",1,0)
FBAABDL ;AISC/DMK - DELETE A BATCH ;4/4/2012
"RTN","FBAABDL",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FBAABDL",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAABDL",4,0)
 ;This routine allows the deletion of a batch that has no line
"RTN","FBAABDL",5,0)
 ;items associated with it.  Access is restricted to the user
"RTN","FBAABDL",6,0)
 ;who opened the batch or the holder of the 'FBAASUPERVISOR'
"RTN","FBAABDL",7,0)
 ;security key.
"RTN","FBAABDL",8,0)
BT ;select batch
"RTN","FBAABDL",9,0)
 S FBNO=1
"RTN","FBAABDL",10,0)
 W ! S DIC="^FBAA(161.7,",DIC(0)="AEQZ",DIC("S")=$S($D(^XUSEC("FBAASUPERVISOR",DUZ)):"",1:"I $P(^(0),U,5)=DUZ")
"RTN","FBAABDL",11,0)
 D ^DIC K DIC G END:X=""!(X="^") G BT:Y<0 S FBBAT=+Y,FBBAT(0)=Y(0)
"RTN","FBAABDL",12,0)
 ;
"RTN","FBAABDL",13,0)
 I $$GET1^DIQ(161.7,FBBAT_",",25,"I")=1 W !!,"Batch cannot be deleted because:",!?5,$P($T(NOGO+6),";;",2) S FBNO=0 D END G BT
"RTN","FBAABDL",14,0)
 ;reset batch line count and total dollars first
"RTN","FBAABDL",15,0)
 I $G(FBBAT) N FBTOTAL,FBLCNT D
"RTN","FBAABDL",16,0)
 .  D CNTTOT^FBAARB(FBBAT) S DA=FBBAT,DIE="^FBAA(161.7,",DR="10////^S X=FBLCNT;8////^S X=FBTOTAL;S:FBLCNT!(FBTOTAL) Y="""";9///@" D ^DIE K DIE,DR,DA D
"RTN","FBAABDL",17,0)
 ..S:FBTOTAL=0 $P(^FBAA(161.7,+FBBAT,0),U,9)=""
"RTN","FBAABDL",18,0)
 ..S:FBLCNT=0 $P(^FBAA(161.7,+FBBAT,0),U,11)=""
"RTN","FBAABDL",19,0)
 . S FBBAT(0)=^FBAA(161.7,+FBBAT,0)
"RTN","FBAABDL",20,0)
 ;
"RTN","FBAABDL",21,0)
 ;check to see if batch meets criteria for deletion
"RTN","FBAABDL",22,0)
 ;Total Dollars '>0        Invoice Count '>0
"RTN","FBAABDL",23,0)
 ;Payment Line Count '>0        Rejects Pending flag '= "Y"
"RTN","FBAABDL",24,0)
 ;
"RTN","FBAABDL",25,0)
 F I=9,10,11 I $P(FBBAT(0),U,I)>0 W !!?5,$P($T(NOGO+(I-8)),";;",2) S FBNO=0 D END G BT
"RTN","FBAABDL",26,0)
 ;check to see if any invoices point to batch
"RTN","FBAABDL",27,0)
 S FBTYPE=$P(^FBAA(161.7,FBBAT,0),"^",3) I $S(FBTYPE="B3":$D(^FBAAC("AC",FBBAT)),FBTYPE="B5":$D(^FBAA(162.1,"AE",FBBAT)),FBTYPE="B9":$D(^FBAAI("AC",FBBAT)),FBTYPE="B2":$D(^FBAAC("AD",FBBAT)),1:0) D  D END G BT
"RTN","FBAABDL",28,0)
 .W !!?5,$P($T(NOGO+5),";;",2)
"RTN","FBAABDL",29,0)
 I $P(FBBAT(0),U,17)="Y" W !!?5,$P($T(NOGO+4),";;",2) S FBNO=0 D END G BT
"RTN","FBAABDL",30,0)
 ;display batch and ask if sure want to delete
"RTN","FBAABDL",31,0)
 W !! S DIC="^FBAA(161.7,",DA=FBBAT,DR="0:1;ST" D EN^DIQ K DIC,DR,DA
"RTN","FBAABDL",32,0)
 ;
"RTN","FBAABDL",33,0)
 S DIR(0)="Y",DIR("B")="No",DIR("A")="Sure you want to DELETE this batch" D ^DIR K DIR S:'Y FBNO=0
"RTN","FBAABDL",34,0)
 I $D(DIRUT)!('Y) D END G BT
"RTN","FBAABDL",35,0)
 ;
"RTN","FBAABDL",36,0)
 ;delete batch
"RTN","FBAABDL",37,0)
 I $G(FBNO) S DA=FBBAT,DIK="^FBAA(161.7," D ^DIK K DIK
"RTN","FBAABDL",38,0)
 W !!?5,*7,"Batch Deleted.",!
"RTN","FBAABDL",39,0)
 D END G BT
"RTN","FBAABDL",40,0)
 ;
"RTN","FBAABDL",41,0)
END K DA,I,FBBAT,FBNO,X,Y,FBTYPE Q
"RTN","FBAABDL",42,0)
 ;
"RTN","FBAABDL",43,0)
NOGO ;reasons why batch cannot be deleted
"RTN","FBAABDL",44,0)
 ;;TOTAL DOLLARS in batch is greater than zero.
"RTN","FBAABDL",45,0)
 ;;INVOICE COUNT in batch is greater than zero.
"RTN","FBAABDL",46,0)
 ;;PAYMENT LINE COUNT in batch is greater than zero.
"RTN","FBAABDL",47,0)
 ;;REJECTS PENDING flag in batch is set to 'YES'.
"RTN","FBAABDL",48,0)
 ;;Batch has INVOICES associated with it.
"RTN","FBAABDL",49,0)
 ;;Batch was rejected using the Reprocess Overdue Batch option.
"RTN","FBAABS")
0^40^B1208762^B1198122
"RTN","FBAABS",1,0)
FBAABS ;AISC/GRR - DISPLAY BATCH STATUS ;4/4/2012
"RTN","FBAABS",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FBAABS",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAABS",4,0)
BT K FBAANQ W !! S DIC="^FBAA(161.7,",DIC(0)="AEQM" D ^DIC G Q:X="^"!(X=""),BT:Y<0 S DA=+Y
"RTN","FBAABS",5,0)
 S VAR="DA",VAL=DA,PGM="START^FBAABS" D ZIS^FBAAUTL G Q:FBPOP S:IO=IO(0) FBAANQ=1
"RTN","FBAABS",6,0)
START U IO W:$E(IOST,1,2)="C-" @IOF S DIC="^FBAA(161.7,",DIC(0)="AEQM",DR="0:1;ST" D EN^DIQ
"RTN","FBAABS",7,0)
 G:$D(FBAANQ) BT
"RTN","FBAABS",8,0)
Q D CLOSE^FBAAUTL K DIC,DA,DR,X,Y,FBAANQ,A,D0,DL,DRX,PGM,S,VAL,VAR Q
"RTN","FBAABT")
0^25^B11583784^B11887938
"RTN","FBAABT",1,0)
FBAABT ;AISC/CMR - OUTPUT FOR BATCHES ;3/28/2012
"RTN","FBAABT",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FBAABT",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAABT",4,0)
 S FBSTAT=0,DIR(0)="YA",DIR("A")="Do you want to print ALL Fee Basis Batch Status':  ",DIR("B")="No" D ^DIR K DIR Q:$D(DIRUT)  I Y S FBSTAT=1 D
"RTN","FBAABT",5,0)
 .F J="C","S","O","T","P","A","R" S FBSTAT(J)=$S(J="C":"CLERK CLOSED",J="S":"SUPERVISOR CLOSED",J="O":"OPEN",J="T":"TRANSMITTED",J="P":"FORWARDED TO PRICER",J="A":"ASSIGNED PRICE",J="R":"REVIEWED AFTER PRICER")
"RTN","FBAABT",6,0)
 .S FBSTAT("F")="CENTRAL FEE ACCEPTED"
"RTN","FBAABT",7,0)
SEL I 'FBSTAT D   D ^DIR K DIR G END:$D(DIRUT) S FBSTAT(Y)=Y(0)
"RTN","FBAABT",8,0)
 . S DIR(0)="S^O:OPEN;C:CLERK CLOSED;S:SUPERVISOR CLOSED;P:FORWARDED TO PRICER;A:ASSIGNED PRICE;R:REVIEWED AFTER PRICER;T:TRANSMITTED;F:CENTRAL FEE ACCEPTED"
"RTN","FBAABT",9,0)
 . S DIR("A")="Select STATUS to print"
"RTN","FBAABT",10,0)
 I 'FBSTAT S DIR(0)="YA",DIR("A")="Do you want to select another STATUS:  ",DIR("B")="No" D ^DIR K DIR G END:$D(DIRUT),SEL:Y
"RTN","FBAABT",11,0)
 S (J,VAR,VAL)="" F  S J=$O(FBSTAT(J)) Q:J=""  S VAR="FBSTAT(",VAL=VAR
"RTN","FBAABT",12,0)
 S PGM="START^FBAABT" D ZIS^FBAAUTL G END:FBPOP
"RTN","FBAABT",13,0)
 ;
"RTN","FBAABT",14,0)
START K ^TMP($J,"FBBATO") S (FBST,FBCHK)="",(FBIEN,FBAAOUT)=0,Q="-",$P(Q,"-",17)="-",QQ="=",$P(QQ,"=",80)="=" U IO W:$E(IOST,1,2)["C-" @IOF D HED
"RTN","FBAABT",15,0)
 F  S FBST=$O(FBSTAT(FBST)) Q:FBST=""  F  S FBIEN=$O(^FBAA(161.7,"AC",FBST,FBIEN)) Q:FBIEN'>0  D
"RTN","FBAABT",16,0)
 .Q:'$D(^FBAA(161.7,FBIEN,0))  S FB(0)=^FBAA(161.7,FBIEN,0),FBBAT=+FB(0),FBDT=+$P(FB(0),"^",4),FBCLK=+$P(FB(0),"^",5),FBTYPE=$P(FB(0),"^",3) S ^TMP($J,"FBBATO",FBST,FBIEN)=FBBAT_"^"_FBDT_"^"_FBCLK_"^"_FBTYPE
"RTN","FBAABT",17,0)
 S FBST="",FBIEN=0
"RTN","FBAABT",18,0)
 F  S FBST=$O(^TMP($J,"FBBATO",FBST)) Q:FBST=""!(FBAAOUT)  F  S FBIEN=$O(^TMP($J,"FBBATO",FBST,FBIEN)) Q:FBIEN'>0!(FBAAOUT)  D
"RTN","FBAABT",19,0)
 .S FB(0)=^TMP($J,"FBBATO",FBST,FBIEN),FBBAT=+FB(0),FBDT=$P(FB(0),"^",2),FBCLK=+$P(FB(0),"^",3),FBTYPE=$P(FB(0),"^",4) D PRINT
"RTN","FBAABT",20,0)
END K FBAAOUT,FBSTAT,FBST,FBIEN,FBBAT,FBDT,FBCLK,FB(0),FBCHK,FBTYPE,J,Q,QQ,^TMP($J,"FBBATO") D CLOSE^FBAAUTL
"RTN","FBAABT",21,0)
 Q
"RTN","FBAABT",22,0)
PRINT I $Y+5>IOSL,($E(IOST,1,2)["C-") S DIR(0)="E" D ^DIR K DIR I 'Y S FBAAOUT=1 Q
"RTN","FBAABT",23,0)
 I $Y+5>IOSL W @IOF D HED
"RTN","FBAABT",24,0)
 I FBST'=FBCHK D HED1 S FBCHK=FBST
"RTN","FBAABT",25,0)
 W !?2,FBBAT,?9,$S(FBTYPE="B3":"MEDICAL & STAT PAYMENTS",FBTYPE="B5":"HOMETOWN PHARMACY PAYMENTS",FBTYPE="B2":"TRAVEL PAYMENTS",FBTYPE="B9":"CH/CNH",1:""),?38,$$DATX^FBAAUTL(FBDT),?50,$P(^VA(200,FBCLK,0),"^")
"RTN","FBAABT",26,0)
 Q
"RTN","FBAABT",27,0)
HED W !?30,"STATUS OF BATCHES",!?30,Q
"RTN","FBAABT",28,0)
 W !!!?1,"BATCH #",?12,"BATCH TYPE",?36,"DATE OPENED",?55,"CLERK",!,QQ
"RTN","FBAABT",29,0)
 Q
"RTN","FBAABT",30,0)
HED1 W !!,"STATUS:  ",FBSTAT(FBST),!
"RTN","FBAABT",31,0)
 Q
"RTN","FBAADD")
0^7^B6478201^B11873445
"RTN","FBAADD",1,0)
FBAADD ;AISC/GRR - REJECT ENTIRE BATCH ;3/22/2012
"RTN","FBAADD",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FBAADD",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAADD",4,0)
 N FBIENS
"RTN","FBAADD",5,0)
RD S DIR(0)="Y",DIR("A")="Are you sure you want to reject all line items in this batch",DIR("B")="NO" D ^DIR K DIR G Q^FBAAVR:$D(DIRUT),RD1^FBAAVR:'Y
"RTN","FBAADD",6,0)
 I $P(FZ,"^",11)'>0 G NOLINE
"RTN","FBAADD",7,0)
 D CK1358^FBAAUTL1 G Q^FBAAVR:$D(FBERR)
"RTN","FBAADD",8,0)
RR S DIR(0)="F^2:40",DIR("A")="Enter reason for rejecting (2-40 characters)",DIR("?")="Please enter the reason this item was rejected" D ^DIR K DIR G:$D(DIRUT) Q^FBAAVR S FBRR=X
"RTN","FBAADD",9,0)
 D WAIT^DICD,ALLM:FBTYPE="B3",ALLT:FBTYPE="B2",ALLP:FBTYPE="B5",ALLC:FBTYPE="B9"
"RTN","FBAADD",10,0)
 W !!,"All items in batch flagged as rejected!!"
"RTN","FBAADD",11,0)
 G RD2^FBAAVR
"RTN","FBAADD",12,0)
 ;
"RTN","FBAADD",13,0)
ALLM F J=0:0 S J=$O(^FBAAC("AC",B,J)) Q:J'>0  F K=0:0 S K=$O(^FBAAC("AC",B,J,K)) Q:K'>0  F L=0:0 S L=$O(^FBAAC("AC",B,J,K,L)) Q:L'>0  F M=0:0 S M=$O(^FBAAC("AC",B,J,K,L,M)) Q:M'>0  S FBIENS=M_","_L_","_K_","_J_"," D REJLN^FBAAVR0
"RTN","FBAADD",14,0)
 Q
"RTN","FBAADD",15,0)
 ;
"RTN","FBAADD",16,0)
ALLT F J=0:0 S J=$O(^FBAAC("AD",B,J)) Q:J'>0  F K=0:0 S K=$O(^FBAAC("AD",B,J,K)) Q:K'>0  S FBIENS=K_","_J_"," D REJLN^FBAAVR0
"RTN","FBAADD",17,0)
 Q
"RTN","FBAADD",18,0)
 ;
"RTN","FBAADD",19,0)
ALLP F J=0:0 S J=$O(^FBAA(162.1,"AE",B,J)) Q:J'>0  F K=0:0 S K=$O(^FBAA(162.1,"AE",B,J,K)) Q:K'>0  S FBIENS=K_","_J_"," D REJLN^FBAAVR0
"RTN","FBAADD",20,0)
 Q
"RTN","FBAADD",21,0)
 ;
"RTN","FBAADD",22,0)
ALLC F J=0:0 S J=$O(^FBAAI("AC",B,J)) Q:J'>0  S FBIENS=J_"," D REJLN^FBAAVR0
"RTN","FBAADD",23,0)
 Q
"RTN","FBAADD",24,0)
 ;
"RTN","FBAADD",25,0)
NOLINE W $C(7),!!,"Line count of batch is equal zero!",!
"RTN","FBAADD",26,0)
 G RDD^FBAAVR
"RTN","FBAADD1")
0^41^B29573874^n/a
"RTN","FBAADD1",1,0)
FBAADD1 ;WOIFO/SAB - REPROCESS OVERDUE BATCH ;4/19/2012
"RTN","FBAADD1",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FBAADD1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAADD1",4,0)
 ; ICRs
"RTN","FBAADD1",5,0)
 ;  #2053  FILE^DIE
"RTN","FBAADD1",6,0)
 ;  #2054  CLEAN^DILF
"RTN","FBAADD1",7,0)
 ;  #10004 EN^DIQ
"RTN","FBAADD1",8,0)
 ;  #10006 ^DIC
"RTN","FBAADD1",9,0)
 ;  #10026 ^DIR
"RTN","FBAADD1",10,0)
 ;  #10103 $$DOW^XLFDT, $$FMADD^XLFDT
"RTN","FBAADD1",11,0)
 ;
"RTN","FBAADD1",12,0)
 W !,"This option is used to reprocess an overdue payment batch."
"RTN","FBAADD1",13,0)
 W !,"A batch is considered overdue if the Payment Batch Result message"
"RTN","FBAADD1",14,0)
 W !,"has not been received by the 3rd weekday after the batch was"
"RTN","FBAADD1",15,0)
 W !,"transmitted to Central Fee."
"RTN","FBAADD1",16,0)
 W !
"RTN","FBAADD1",17,0)
 W !,"The National Service Desk Austin should be contacted to determine"
"RTN","FBAADD1",18,0)
 W !,"the status of the batch before using this option.  If Central Fee"
"RTN","FBAADD1",19,0)
 W !,"already has the batch, you should request that Central Fee resend"
"RTN","FBAADD1",20,0)
 W !,"the Payment Batch Result message.  If Central Fee does not have"
"RTN","FBAADD1",21,0)
 W !,"the batch then use this option to reprocess it.",!
"RTN","FBAADD1",22,0)
 ;
"RTN","FBAADD1",23,0)
 N DA,DIC,DIR,DIRUT,DR,DTOUT,DUOUT,FBACT,FBDT,FBN,X,Y
"RTN","FBAADD1",24,0)
 ;
"RTN","FBAADD1",25,0)
 ; determine date that is 3 weekdays prior to the current date
"RTN","FBAADD1",26,0)
 S FBDT=$$CALCDT(3,DT)
"RTN","FBAADD1",27,0)
 ;
"RTN","FBAADD1",28,0)
BT ; select batch
"RTN","FBAADD1",29,0)
 S DIC="^FBAA(161.7,",DIC(0)="AEQ"
"RTN","FBAADD1",30,0)
 ; status = TRANSMITTED and DATE TRANSMITTED not after FBDT
"RTN","FBAADD1",31,0)
 S DIC("S")="I ($G(^(""ST""))=""T"")&($P($G(^(0)),""^"",14)'>"_FBDT_")"
"RTN","FBAADD1",32,0)
 D ^DIC K DIC G END:Y<0
"RTN","FBAADD1",33,0)
 L +^FBAA(161.7,+Y):$G(DILOCKTM,3)
"RTN","FBAADD1",34,0)
 I '$T W !,"Another user is editing this batch.  Try again later." G BT
"RTN","FBAADD1",35,0)
 S FBN=+Y
"RTN","FBAADD1",36,0)
 ;
"RTN","FBAADD1",37,0)
 ; display batch
"RTN","FBAADD1",38,0)
 S DIC="^FBAA(161.7,",DA=FBN,DR="0:1;ST" W !! D EN^DIQ
"RTN","FBAADD1",39,0)
 ;
"RTN","FBAADD1",40,0)
 ; confirm help desk was contacted
"RTN","FBAADD1",41,0)
 S DIR(0)="Y"
"RTN","FBAADD1",42,0)
 S DIR("A")="Have you confirmed the batch is not in Central Fee"
"RTN","FBAADD1",43,0)
 W !
"RTN","FBAADD1",44,0)
 D ^DIR K DIR G:$D(DIRUT) END
"RTN","FBAADD1",45,0)
 I 'Y W !,"Please contact the National Service Desk Austin to determine the batch status." G END
"RTN","FBAADD1",46,0)
 ;
"RTN","FBAADD1",47,0)
ASKACT ; ask action
"RTN","FBAADD1",48,0)
 S DIR(0)="S^R:RETRANSMIT BY RESETTING BATCH STATUS;F:FLAG ENTIRE BATCH AS REJECTED"
"RTN","FBAADD1",49,0)
 S DIR("A")="What action should be taken to reprocess this batch"
"RTN","FBAADD1",50,0)
 D ^DIR K DIR G:$D(DIRUT) END
"RTN","FBAADD1",51,0)
 S FBACT=Y
"RTN","FBAADD1",52,0)
 ;
"RTN","FBAADD1",53,0)
 ; confirm action
"RTN","FBAADD1",54,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","FBAADD1",55,0)
 S DIR("A")="Are you sure you want to "_$S(FBACT="R":"retransmit",1:"reject")_" this batch"
"RTN","FBAADD1",56,0)
 D ^DIR K DIR G:$D(DIRUT) END G:'Y ASKACT
"RTN","FBAADD1",57,0)
 ;
"RTN","FBAADD1",58,0)
 ; perform selected action
"RTN","FBAADD1",59,0)
 I FBACT="R" D ACTR
"RTN","FBAADD1",60,0)
 I FBACT="F" D ACTF
"RTN","FBAADD1",61,0)
 ;
"RTN","FBAADD1",62,0)
 ; display batch
"RTN","FBAADD1",63,0)
 S DIC="^FBAA(161.7,",DA=FBN,DR="0:1;ST" W !! D EN^DIQ
"RTN","FBAADD1",64,0)
 ;
"RTN","FBAADD1",65,0)
END ;
"RTN","FBAADD1",66,0)
 I $G(FBN) L -^FBAA(161.7,FBN)
"RTN","FBAADD1",67,0)
 Q
"RTN","FBAADD1",68,0)
 ;
"RTN","FBAADD1",69,0)
CALCDT(FBN,FBDT) ; Calculate Date
"RTN","FBAADD1",70,0)
 ; input
"RTN","FBAADD1",71,0)
 ;   FBN  - (optional) integer, default 3
"RTN","FBAADD1",72,0)
 ;   FBDT - (optional) date in FileMan internal format, default today
"RTN","FBAADD1",73,0)
 ; returns date that is FBN workdays before the FBDT
"RTN","FBAADD1",74,0)
 N FBC,FBI,FBPDT,FBRET,FBWKDAY
"RTN","FBAADD1",75,0)
 S (FBDT,FBRET)=$G(FBDT,DT)
"RTN","FBAADD1",76,0)
 S FBN=$G(FBN,3)
"RTN","FBAADD1",77,0)
 S FBWKDAY="^Monday^Tuesday^Wednesday^Thursday^Friday^"
"RTN","FBAADD1",78,0)
 S FBC=0
"RTN","FBAADD1",79,0)
 I FBN>0 F FBI=-1:-1 D  I FBC'<FBN S FBRET=FBPDT Q
"RTN","FBAADD1",80,0)
 . S FBPDT=$$FMADD^XLFDT(FBDT,FBI)
"RTN","FBAADD1",81,0)
 . I FBWKDAY[("^"_$$DOW^XLFDT(FBPDT)_"^") S FBC=FBC+1
"RTN","FBAADD1",82,0)
 Q FBRET
"RTN","FBAADD1",83,0)
 ;
"RTN","FBAADD1",84,0)
ACTR ; action R (retransmit)
"RTN","FBAADD1",85,0)
 N FBFDA,FBSTAT,FZ
"RTN","FBAADD1",86,0)
 S FZ=$G(^FBAA(161.7,FBN,0))
"RTN","FBAADD1",87,0)
 ;
"RTN","FBAADD1",88,0)
 ; determine status immediately prior to T (TRANSMITTED)
"RTN","FBAADD1",89,0)
 S FBSTAT="S" ; init as S
"RTN","FBAADD1",90,0)
 ; change to R for civil hospital batch that is not pricer exempt
"RTN","FBAADD1",91,0)
 I $P(FZ,U,3)="B9",$P(FZ,U,15)="Y",$P(FZ,U,18)'="Y" S FBSTAT="R"
"RTN","FBAADD1",92,0)
 ;
"RTN","FBAADD1",93,0)
 ; update batch
"RTN","FBAADD1",94,0)
 S FBFDA(161.7,FBN_",",11)=FBSTAT ; STATUS
"RTN","FBAADD1",95,0)
 S FBFDA(161.7,FBN_",",12)="@" ; DATE TRANSMITTED
"RTN","FBAADD1",96,0)
 S FBFDA(161.7,FBN_",",23)=DUZ ; STATUS SET TO RETRANSMIT BY
"RTN","FBAADD1",97,0)
 S FBFDA(161.7,FBN_",",24)=DT ; STATUS SET TO RETRANSMIT DATE 
"RTN","FBAADD1",98,0)
 D FILE^DIE("","FBFDA")
"RTN","FBAADD1",99,0)
 I $D(DIERR) W !,"Error updating batch file."
"RTN","FBAADD1",100,0)
 E  W !,"Batch status was updated. It will be included with the next transmission."
"RTN","FBAADD1",101,0)
 D CLEAN^DILF
"RTN","FBAADD1",102,0)
 Q
"RTN","FBAADD1",103,0)
 ;
"RTN","FBAADD1",104,0)
ACTF ; action F (flag as rejected)
"RTN","FBAADD1",105,0)
 N FBAAB,FBAAOB,FBAAON,FBEMPTY,FBTYPE,FBX,FZ
"RTN","FBAADD1",106,0)
 ;
"RTN","FBAADD1",107,0)
 S FZ=$G(^FBAA(161.7,FBN,0))
"RTN","FBAADD1",108,0)
 S FBAAB=$P(FZ,"^"),FBTYPE=$P(FZ,"^",3)
"RTN","FBAADD1",109,0)
 S FBAAON=$P(FZ,"^",2),FBAAOB=$P(FZ,"^",8)_"-"_FBAAON
"RTN","FBAADD1",110,0)
 ;
"RTN","FBAADD1",111,0)
 ; verify that 1358 is avaiable for posting
"RTN","FBAADD1",112,0)
 S FBX=$$CHK1358^FB1358(FBAAOB)
"RTN","FBAADD1",113,0)
 I 'FBX W !,"Batch was not rejected.",!,$P(FBX,U,2) Q
"RTN","FBAADD1",114,0)
 ;
"RTN","FBAADD1",115,0)
 ; flag all line items as rejected
"RTN","FBAADD1",116,0)
 D
"RTN","FBAADD1",117,0)
 . N B,FBAARA,FBIENS,FBRFLAG,FBRR,J,K,L,M
"RTN","FBAADD1",118,0)
 . S B=FBN
"RTN","FBAADD1",119,0)
 . S FBRR="Rejected by Reprocess Overdue Batch"
"RTN","FBAADD1",120,0)
 . S (FBRFLAG,FBAARA)=0
"RTN","FBAADD1",121,0)
 . I FBTYPE="B2" D ALLT^FBAADD
"RTN","FBAADD1",122,0)
 . I FBTYPE="B3" D ALLM^FBAADD
"RTN","FBAADD1",123,0)
 . I FBTYPE="B5" D ALLP^FBAADD
"RTN","FBAADD1",124,0)
 . I FBTYPE="B9" D ALLC^FBAADD
"RTN","FBAADD1",125,0)
 . ;
"RTN","FBAADD1",126,0)
 . ; update obligation for rejected lines that are posted by batch
"RTN","FBAADD1",127,0)
 . I FBRFLAG D
"RTN","FBAADD1",128,0)
 . . N FBX
"RTN","FBAADD1",129,0)
 . . S FBRFLAG=0
"RTN","FBAADD1",130,0)
 . . Q:FBAARA'>0
"RTN","FBAADD1",131,0)
 . . S FBX=$$POSTBAT^FB1358(FBN,FBAARA,"R")
"RTN","FBAADD1",132,0)
 . . I 'FBX D
"RTN","FBAADD1",133,0)
 . . . W !,"Error posting $"_$FN(FBAARA,",",2)_" to 1358 for batch "_FBAAB
"RTN","FBAADD1",134,0)
 . . . W !,"  "_$P(FBX,"^",2)
"RTN","FBAADD1",135,0)
 ;
"RTN","FBAADD1",136,0)
 ; check if batch is empty
"RTN","FBAADD1",137,0)
 S FBEMPTY=1
"RTN","FBAADD1",138,0)
 I FBTYPE="B2",$O(^FBAAC("AD",FBN,0)) S FBEMPTY=0
"RTN","FBAADD1",139,0)
 I FBTYPE="B3",$O(^FBAAC("AC",FBN,0)) S FBEMPTY=0
"RTN","FBAADD1",140,0)
 I FBTYPE="B5",$O(^FBAA(162.1,"AE",FBN,0)) S FBEMPTY=0
"RTN","FBAADD1",141,0)
 I FBTYPE="B9",$O(^FBAAI("AC",FBN,0)) S FBEMPTY=0
"RTN","FBAADD1",142,0)
 ;
"RTN","FBAADD1",143,0)
 I 'FBEMPTY D
"RTN","FBAADD1",144,0)
 . W !,"Batch was not completely rejected."
"RTN","FBAADD1",145,0)
 . W !,"There are still payment line items in the batch."
"RTN","FBAADD1",146,0)
 ;
"RTN","FBAADD1",147,0)
 I FBEMPTY D
"RTN","FBAADD1",148,0)
 . ; update batch
"RTN","FBAADD1",149,0)
 . S FBFDA(161.7,FBN_",",11)="V" ; STATUS
"RTN","FBAADD1",150,0)
 . S FBFDA(161.7,FBN_",",13)=DT ; DATE FINALIZED
"RTN","FBAADD1",151,0)
 . S FBFDA(161.7,FBN_",",14)=DUZ ; PERSON WHO COMPLETED
"RTN","FBAADD1",152,0)
 . S FBFDA(161.7,FBN_",",25)=1 ; TRANSMITTED BATCH WAS REJECTED
"RTN","FBAADD1",153,0)
 . D FILE^DIE("","FBFDA")
"RTN","FBAADD1",154,0)
 . I $D(DIERR) W !,"Error updating batch file."
"RTN","FBAADD1",155,0)
 . E  W !,"Batch was rejected."
"RTN","FBAADD1",156,0)
 . D CLEAN^DILF
"RTN","FBAADD1",157,0)
 ;
"RTN","FBAADD1",158,0)
 Q
"RTN","FBAADD1",159,0)
 ;FBAADD1
"RTN","FBAAEPI")
0^26^B20120074^B20301979
"RTN","FBAAEPI",1,0)
FBAAEPI ;AISC/GRR - EDIT PREVIOUSLY ENTERED PHARMACY INVOICE ; 5/16/12 12:24pm
"RTN","FBAAEPI",2,0)
 ;;3.5;FEE BASIS;**38,61,124,132**;JAN 30, 1995;Build 17
"RTN","FBAAEPI",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAAEPI",4,0)
RD W ! S DIC="^FBAA(162.1,",DIC(0)="AEQM",DIC("A")="Select Invoice #: ",DIC("S")="I $P(^(0),U,5)'=4!($P(^(0),U,5)=4&$D(^XUSEC(""FBAASUPERVISOR"",DUZ)))" D ^DIC K DIC("S") G END:X=""!(X="^"),RD:Y<0
"RTN","FBAAEPI",5,0)
 S (DA,FBDA)=+Y,DIE=DIC
"RTN","FBAAEPI",6,0)
 ; save FPPS data prior to edit session
"RTN","FBAAEPI",7,0)
 S (FBFPPSC,FBFPPSC(0))=$P($G(^FBAA(162.1,FBDA,0)),U,13)
"RTN","FBAAEPI",8,0)
 D LASTRXDT ;Look up last RX FILL DATE in selected invoice, for use in validating Invoice Received Date if it is edited.
"RTN","FBAAEPI",9,0)
 S DR="@1;1;I $$BADDATE^FBAAEPI(LASTRXDT,X) S Y=""@1"";Q;12;S FBX=$$FPPSC^FBUTL5(1,FBFPPSC);S:FBX=-1 Y=0;S:FBX="""" Y=""@10"";13///^S X=FBX;S FBFPPSC=X;S Y=""@15"";@10;13///@;S FBFPPSC="""";@15;3;5"
"RTN","FBAAEPI",10,0)
 D ^DIE K DIC
"RTN","FBAAEPI",11,0)
 ; if FPPS CLAIM ID changed, then update Rx's
"RTN","FBAAEPI",12,0)
 I FBFPPSC'=FBFPPSC(0) D CKINVEDI^FBAAEPI1(FBFPPSC(0),FBFPPSC,FBDA)
"RTN","FBAAEPI",13,0)
 S DIC="^FBAA(162.1,DA,""RX"",",DIC(0)="AEQM",DIC("W")="W ?30,""DATE RX FILLED: "",$E($P(^(0),U,3),4,5)_""/""_$E($P(^(0),U,3),6,7)_""/""_$E($P(^(0),U,3),2,3)" D ^DIC G END:X=""!(X="^"),RD:Y<0 W !
"RTN","FBAAEPI",14,0)
 S (FBJ,FBK)=0
"RTN","FBAAEPI",15,0)
 ;check status of batch rx is in.
"RTN","FBAAEPI",16,0)
 S DA=+Y,DA(1)=FBDA S FBSTAT=$P($G(^FBAA(161.7,+$P($G(^FBAA(162.1,+FBDA,"RX",+DA,0)),U,17),"ST")),U) I FBSTAT]"" D
"RTN","FBAAEPI",17,0)
 .I '$D(^XUSEC("FBAASUPERVISOR",DUZ)) D
"RTN","FBAAEPI",18,0)
 .. I $S(FBSTAT="O":0,FBSTAT="C":0,1:1) D
"RTN","FBAAEPI",19,0)
 ... W !,*7,"You cannot edit a payment once released by a supervisor.",! S FBOUT=1 Q
"RTN","FBAAEPI",20,0)
 .I $S(FBSTAT="T":1,FBSTAT="F":1,FBSTAT="V":1,1:0) D
"RTN","FBAAEPI",21,0)
 .. W !,*7,"You cannot edit an invoice when the batch has been sent to Austin",! S FBOUT=1
"RTN","FBAAEPI",22,0)
 I $G(FBOUT) D END G FBAAEPI
"RTN","FBAAEPI",23,0)
 S DIE="^FBAA(162.1,FBDA,""RX"","
"RTN","FBAAEPI",24,0)
 ; get current value of FPPS LINE ITEM to use as default
"RTN","FBAAEPI",25,0)
 S FBFPPSL=$P($G(^FBAA(162.1,FBDA,"RX",DA,3)),U)
"RTN","FBAAEPI",26,0)
 ; load current adjustment data
"RTN","FBAAEPI",27,0)
 D LOADADJ^FBRXFA(DA_","_FBDA_",",.FBADJ)
"RTN","FBAAEPI",28,0)
 ; save adjustment data prior to edit session in sorted list
"RTN","FBAAEPI",29,0)
 S FBADJL(0)=$$ADJL^FBUTL2(.FBADJ) ; sorted list of original adjustments
"RTN","FBAAEPI",30,0)
 ; load current remittance remark data
"RTN","FBAAEPI",31,0)
 D LOADRR^FBRXFR(DA_","_FBDA_",",.FBRRMK)
"RTN","FBAAEPI",32,0)
 ; save remittance remarks prior to edit session in sorted list
"RTN","FBAAEPI",33,0)
 S FBRRMKL(0)=$$RRL^FBUTL4(.FBRRMK)
"RTN","FBAAEPI",34,0)
 S DR=".01;S:FBFPPSC="""" Y=1;S FBX=$$FPPSL^FBUTL5(FBFPPSL);S:FBX=-1 Y=0;36///^S X=FBX;S FBFPPSL=X;1;1.5;1.6;3;S FBJ=X;I $P(^FBAA(162.1,DA(1),""RX"",DA,0),U,9)=1 S Y="""";I 1;5"
"RTN","FBAAEPI",35,0)
 S DR(1,162.11,1)="S FBA=$P($G(^FBAA(162.1,DA(1),""RX"",DA,2)),U,6);S FB1725=$S(FBA[""FB583"":+$P($G(^FB583(+FBA,0)),U,28),1:0);W:FB1725 !?2,""**Payment is for emergency treatment under 38 U.S.C. 1725."""
"RTN","FBAAEPI",36,0)
 S DR(1,162.11,2)="@12;S FBHAP=$P(^FBAA(162.1,DA(1),""RX"",DA,0),U,16);6.5;S FBK=X;S:FBK]"""" Y=""@20"";K FBADJ,FBRRMK;S Y=8"
"RTN","FBAAEPI",37,0)
 S DR(1,162.11,3)="@20;I FBK>FBJ S $P(^FBAA(162.1,DA(1),""RX"",DA,0),U,16)=FBHAP W !,*7,""Amount Paid cannot be greater than the Amount Claimed"" S Y=""@12"""
"RTN","FBAAEPI",38,0)
 ;S DR(1,162.11,4)="S:FBJ=FBK Y=""@5"";6////^S X=FBJ-FBK;Q;6R;7R;S:X'=4 Y=""@6"";20;S Y=""@6"";@5;6///@;7///@;20///@;@6;8"
"RTN","FBAAEPI",39,0)
 S DR(1,162.11,4)="K FBADJD;M FBADJD=FBADJ;S FBX=$$ADJ^FBUTL2(FBJ-FBK,.FBADJ,2,,.FBADJD,1);K FBADJD"
"RTN","FBAAEPI",40,0)
 S DR(1,162.11,5)="K FBRRMKD;M FBRRMKD=FBRRMK;S FBX=$$RR^FBUTL4(.FBRRMK,2,,.FBRRMKD);K FBRRMKD;S:FBX=-1 Y=0;8"
"RTN","FBAAEPI",41,0)
 D ^DIE
"RTN","FBAAEPI",42,0)
 ; if adjustment data changed then file
"RTN","FBAAEPI",43,0)
 I $$ADJL^FBUTL2(.FBADJ)'=FBADJL(0) D FILEADJ^FBRXFA(DA_","_FBDA_",",.FBADJ)
"RTN","FBAAEPI",44,0)
 ; if remit remark data changed then file
"RTN","FBAAEPI",45,0)
 I $$RRL^FBUTL4(.FBRRMK)'=FBRRMKL(0) D FILERR^FBRXFR(DA_","_FBDA_",",.FBRRMK)
"RTN","FBAAEPI",46,0)
 ;
"RTN","FBAAEPI",47,0)
LASTRXDT ;Look up last RX FILL DATE in selected invoice, for use in validating Invoice Received Date if it is edited.
"RTN","FBAAEPI",48,0)
 ;DA contains the selected INV#
"RTN","FBAAEPI",49,0)
 N I
"RTN","FBAAEPI",50,0)
 S LASTRXDT=0
"RTN","FBAAEPI",51,0)
 F I=1:1 Q:'$D(^FBAA(162.1,DA,"RX",I))  D
"RTN","FBAAEPI",52,0)
 .N RXDT S RXDT=$P(^FBAA(162.1,DA,"RX",I,0),"^",3)
"RTN","FBAAEPI",53,0)
 .I RXDT>LASTRXDT S LASTRXDT=RXDT,RXNUM=$P(^FBAA(162.1,DA,"RX",I,0),"^",1)
"RTN","FBAAEPI",54,0)
 Q
"RTN","FBAAEPI",55,0)
 ;
"RTN","FBAAEPI",56,0)
BADDATE(LASTRXDT,INVRCVDT) ;Reject entry if InvRcvDt is Prior to the last Rx Fill Date on the Invoice
"RTN","FBAAEPI",57,0)
 I INVRCVDT<LASTRXDT D  Q 1 ;Reject entry
"RTN","FBAAEPI",58,0)
 .N SHOWRXDT  S SHOWRXDT=$E(LASTRXDT,4,5)_"/"_$E(LASTRXDT,6,7)_"/"_$E(LASTRXDT,2,3) ;Convert RXDT into display format for error message
"RTN","FBAAEPI",59,0)
 .W *7,!!?5,"*** Invoice Received Date cannot be prior to the last",!?8," Prescription Filled Date on the Invoice ("_SHOWRXDT_" for RX# "_RXNUM_") !!!"
"RTN","FBAAEPI",60,0)
 Q 0 ;Accept entry
"RTN","FBAAEPI",61,0)
 ;
"RTN","FBAAEPI",62,0)
END K D,DA,DIC,DIE,DR,FBJ,FBK,FBDA,FBOUT,FBSTAT,FBHAP,X,Y,FBA,FB1725
"RTN","FBAAEPI",63,0)
 K FBADJ,FBADJD,FBADJL,FBFPPSC,FBFPPSL,FBRRMK,FBRRMKD,FBRRMKL,LASTRXDT,RXNUM
"RTN","FBAAEPI",64,0)
 Q
"RTN","FBAAPAR")
0^44^B93982366^n/a
"RTN","FBAAPAR",1,0)
FBAAPAR ;WOIFO/SAB - PAYMENT AGING REPORT ;11/7/2012
"RTN","FBAAPAR",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FBAAPAR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAAPAR",4,0)
 ; ICRs
"RTN","FBAAPAR",5,0)
 ;  #10090  ^DIC(4,
"RTN","FBAAPAR",6,0)
 ;  #2056   $$GET1^DIQ
"RTN","FBAAPAR",7,0)
 ;  #10026  DIR
"RTN","FBAAPAR",8,0)
 ;  #10003  DD^%DT
"RTN","FBAAPAR",9,0)
 ;  #10000  NOW^%DTC
"RTN","FBAAPAR",10,0)
 ;  #4398   FIRST^VAUTOMA
"RTN","FBAAPAR",11,0)
 ;  #10103  $$FMADD^XLFDT, $$FMDIFF^XLFDT, $$FMTE^XLFDT
"RTN","FBAAPAR",12,0)
 ;  #2171   $$STA^XUAF4
"RTN","FBAAPAR",13,0)
 ;  #10086  %ZIS, HOME^%ZIS
"RTN","FBAAPAR",14,0)
 ;  #10089  %ZISC
"RTN","FBAAPAR",15,0)
 ;  #10063  %ZTLOAD, $$S^%ZTLOAD
"RTN","FBAAPAR",16,0)
 ;
"RTN","FBAAPAR",17,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,FBDT1,FBDT2,FBPSV,FBX,%ZIS,POP,X,Y
"RTN","FBAAPAR",18,0)
 ;
"RTN","FBAAPAR",19,0)
 ; user prompts
"RTN","FBAAPAR",20,0)
 ;
"RTN","FBAAPAR",21,0)
 ; ask one/many/all primary service failities
"RTN","FBAAPAR",22,0)
 W !!
"RTN","FBAAPAR",23,0)
 S DIC="^DIC(4,"
"RTN","FBAAPAR",24,0)
 S VAUTSTR="Primary Service Facility",VAUTNI=2,VAUTVB="FBPSV"
"RTN","FBAAPAR",25,0)
 D FIRST^VAUTOMA K DIC I Y=-1 G EXIT
"RTN","FBAAPAR",26,0)
 ;
"RTN","FBAAPAR",27,0)
 ; ask end date
"RTN","FBAAPAR",28,0)
 S DIR(0)="D^:"_DT_":EX"
"RTN","FBAAPAR",29,0)
 S DIR("A")="Report payments finalized on or before"
"RTN","FBAAPAR",30,0)
 ;   default end date is last day of month at least 30 days ago
"RTN","FBAAPAR",31,0)
 S FBX=$$FMADD^XLFDT($E(DT,1,5)_"01",-1) ; last date of prior month
"RTN","FBAAPAR",32,0)
 I $$FMDIFF^XLFDT(DT,FBX)<30 S FBX=$$FMADD^XLFDT($E(FBX,1,5)_"01",-1)
"RTN","FBAAPAR",33,0)
 S DIR("B")=$$FMTE^XLFDT(FBX)
"RTN","FBAAPAR",34,0)
 D ^DIR K DIR G:$D(DIRUT) EXIT
"RTN","FBAAPAR",35,0)
 S FBDT2=Y
"RTN","FBAAPAR",36,0)
 ;
"RTN","FBAAPAR",37,0)
 ; ask start date
"RTN","FBAAPAR",38,0)
 S DIR(0)="D^:"_FBDT2_":EX"
"RTN","FBAAPAR",39,0)
 S DIR("A")="Earliest finalized date to report"
"RTN","FBAAPAR",40,0)
 ;   default start date is first day of selected month
"RTN","FBAAPAR",41,0)
 S DIR("B")=$$FMTE^XLFDT($E(FBDT2,1,5)_"01")
"RTN","FBAAPAR",42,0)
 D ^DIR K DIR G:$D(DIRUT) EXIT
"RTN","FBAAPAR",43,0)
 S FBDT1=Y
"RTN","FBAAPAR",44,0)
 ;
"RTN","FBAAPAR",45,0)
 ; ask device
"RTN","FBAAPAR",46,0)
 S %ZIS="Q" D ^%ZIS G:POP EXIT
"RTN","FBAAPAR",47,0)
 I $D(IO("Q")) D  G EXIT
"RTN","FBAAPAR",48,0)
 . N ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTUCI,ZTCPU,ZTPRI,ZTSAVE,ZTKIL,ZTSYNC,ZTSK
"RTN","FBAAPAR",49,0)
 . S ZTRTN="QEN^FBAAPAR",ZTDESC="Fee Basis Payment Aging Report"
"RTN","FBAAPAR",50,0)
 . F FBX="FBDT*","FBPSV","FBPSV(" S ZTSAVE(FBX)=""
"RTN","FBAAPAR",51,0)
 . D ^%ZTLOAD,HOME^%ZIS
"RTN","FBAAPAR",52,0)
 ;
"RTN","FBAAPAR",53,0)
QEN ; queued entry
"RTN","FBAAPAR",54,0)
 U IO
"RTN","FBAAPAR",55,0)
 ;
"RTN","FBAAPAR",56,0)
GATHER ; collect and sort data
"RTN","FBAAPAR",57,0)
 K ^TMP($J)
"RTN","FBAAPAR",58,0)
 ; init counters
"RTN","FBAAPAR",59,0)
 K FBC F X="B2","B3","B5","B9" F Y="F","P" S FBC(X,Y)=0
"RTN","FBAAPAR",60,0)
 ;
"RTN","FBAAPAR",61,0)
 ;
"RTN","FBAAPAR",62,0)
 ; batch type B2
"RTN","FBAAPAR",63,0)
 ; loop thru batch file by date finalized for specified period
"RTN","FBAAPAR",64,0)
 ;   because DATE FINALIZED field is not being populated
"RTN","FBAAPAR",65,0)
 S FBDT=FBDT1-.0001
"RTN","FBAAPAR",66,0)
 F  S FBDT=$O(^FBAA(161.7,"AF",FBDT)) Q:FBDT>FBDT2!(FBDT="")  D
"RTN","FBAAPAR",67,0)
 . ; loop thru batch
"RTN","FBAAPAR",68,0)
 . S FBN=0 F  S FBN=$O(^FBAA(161.7,"AF",FBDT,FBN)) Q:'FBN  D
"RTN","FBAAPAR",69,0)
 . . ; loop thru payments for batch
"RTN","FBAAPAR",70,0)
 . . S FBJ=0 F  S FBJ=$O(^FBAAC("AD",FBN,FBJ)) Q:'FBJ  D
"RTN","FBAAPAR",71,0)
 . . . S FBK=0 F  S FBK=$O(^FBAAC("AD",FBN,FBJ,FBK)) Q:'FBK  D
"RTN","FBAAPAR",72,0)
 . . . . S FBY0=$G(^FBAAC(FBJ,3,FBK,0))
"RTN","FBAAPAR",73,0)
 . . . . ;
"RTN","FBAAPAR",74,0)
 . . . . ; dont't check primary service facility since it is not
"RTN","FBAAPAR",75,0)
 . . . . ;   stored with payment, associated auth. is not known, and
"RTN","FBAAPAR",76,0)
 . . . . ;   station in batch file is not necessarily the same
"RTN","FBAAPAR",77,0)
 . . . . ;
"RTN","FBAAPAR",78,0)
 . . . . S FBC("B2","F")=FBC("B2","F")+1 ; incr finalized count
"RTN","FBAAPAR",79,0)
 . . . . ;
"RTN","FBAAPAR",80,0)
 . . . . ; check if payment meets criterion for pending
"RTN","FBAAPAR",81,0)
 . . . . Q:$P(FBY0,U,7)'=""  ; check number
"RTN","FBAAPAR",82,0)
 . . . . Q:$P(FBY0,U,6)'=""  ; date paid
"RTN","FBAAPAR",83,0)
 . . . . Q:$P(FBY0,U,8)'=""  ; cancel date
"RTN","FBAAPAR",84,0)
 . . . . Q:$P($G(^FBAAC(FBJ,3,FBK,"FBREJ")),U)'=""  ; reject status
"RTN","FBAAPAR",85,0)
 . . . . ; travel payment cannot be void
"RTN","FBAAPAR",86,0)
 . . . . ;
"RTN","FBAAPAR",87,0)
 . . . . ; save payment in list
"RTN","FBAAPAR",88,0)
 . . . . S ^TMP($J,"B2",FBDT,FBJ,FBK)=""
"RTN","FBAAPAR",89,0)
 . . . . S FBC("B2","P")=FBC("B2","P")+1 ; incr pending payment count
"RTN","FBAAPAR",90,0)
 ;
"RTN","FBAAPAR",91,0)
 ; batch type B3
"RTN","FBAAPAR",92,0)
 ; loop thru DATE FINALIZED x-ref
"RTN","FBAAPAR",93,0)
 S FBDT=FBDT1-.0001
"RTN","FBAAPAR",94,0)
 F  S FBDT=$O(^FBAAC("AK",FBDT)) Q:FBDT>FBDT2!(FBDT="")  D
"RTN","FBAAPAR",95,0)
 . S FBJ=0 F  S FBJ=$O(^FBAAC("AK",FBDT,FBJ)) Q:'FBJ  D
"RTN","FBAAPAR",96,0)
 . . S FBK=0 F  S FBK=$O(^FBAAC("AK",FBDT,FBJ,FBK)) Q:'FBK  D
"RTN","FBAAPAR",97,0)
 . . . S FBL=0 F  S FBL=$O(^FBAAC("AK",FBDT,FBJ,FBK,FBL)) Q:'FBL  D
"RTN","FBAAPAR",98,0)
 . . . . S FBM=0 F  S FBM=$O(^FBAAC("AK",FBDT,FBJ,FBK,FBL,FBM)) Q:'FBM  D
"RTN","FBAAPAR",99,0)
 . . . . . S FBY0=$G(^FBAAC(FBJ,1,FBK,1,FBL,1,FBM,0))
"RTN","FBAAPAR",100,0)
 . . . . . S FBY2=$G(^FBAAC(FBJ,1,FBK,1,FBL,1,FBM,2))
"RTN","FBAAPAR",101,0)
 . . . . . ;
"RTN","FBAAPAR",102,0)
 . . . . . ; skip if not selected primary service facility
"RTN","FBAAPAR",103,0)
 . . . . . I 'FBPSV,$P(FBY0,U,12),'$D(FBPSV($P(FBY0,U,12))) Q
"RTN","FBAAPAR",104,0)
 . . . . . ;
"RTN","FBAAPAR",105,0)
 . . . . . S FBC("B3","F")=FBC("B3","F")+1 ; incr finalized count
"RTN","FBAAPAR",106,0)
 . . . . . ;
"RTN","FBAAPAR",107,0)
 . . . . . ; check if payment meets criterion for pending
"RTN","FBAAPAR",108,0)
 . . . . . Q:$P(FBY2,U,3)'=""  ; check number
"RTN","FBAAPAR",109,0)
 . . . . . Q:$P(FBY0,U,14)'=""  ; date paid
"RTN","FBAAPAR",110,0)
 . . . . . Q:$P(FBY2,U,4)'=""  ; cancellation date
"RTN","FBAAPAR",111,0)
 . . . . . Q:$P($G(^FBAAC(FBJ,1,FBK,1,FBL,1,FBM,"FBREJ")),U)'=""  ; rej.
"RTN","FBAAPAR",112,0)
 . . . . . Q:$P(FBY0,U,21)'=""  ; void
"RTN","FBAAPAR",113,0)
 . . . . . ;
"RTN","FBAAPAR",114,0)
 . . . . . ; save payment in list
"RTN","FBAAPAR",115,0)
 . . . . . S ^TMP($J,"B3",FBDT,FBJ,FBK,FBL,FBM)=""
"RTN","FBAAPAR",116,0)
 . . . . . S FBC("B3","P")=FBC("B3","P")+1 ; incr pending payment count
"RTN","FBAAPAR",117,0)
 ;
"RTN","FBAAPAR",118,0)
 ; batch type B5
"RTN","FBAAPAR",119,0)
 ; loop thru batch file by date finalized for specified period
"RTN","FBAAPAR",120,0)
 ;   because DATE FINALIZED field does not exist
"RTN","FBAAPAR",121,0)
 S FBDT=FBDT1-.0001
"RTN","FBAAPAR",122,0)
 F  S FBDT=$O(^FBAA(161.7,"AF",FBDT)) Q:FBDT>FBDT2!(FBDT="")  D
"RTN","FBAAPAR",123,0)
 . ; loop thru batch
"RTN","FBAAPAR",124,0)
 . S FBN=0 F  S FBN=$O(^FBAA(161.7,"AF",FBDT,FBN)) Q:'FBN  D
"RTN","FBAAPAR",125,0)
 . . ; loop thru payments for batch
"RTN","FBAAPAR",126,0)
 . . S FBJ=0 F  S FBJ=$O(^FBAA(162.1,"AE",FBN,FBJ)) Q:'FBJ  D
"RTN","FBAAPAR",127,0)
 . . . S FBK=0 F  S FBK=$O(^FBAA(162.1,"AE",FBN,FBJ,FBK)) Q:'FBK  D
"RTN","FBAAPAR",128,0)
 . . . . S FBY2=$G(^FBAA(162.1,FBJ,"RX",FBK,2))
"RTN","FBAAPAR",129,0)
 . . . . ;
"RTN","FBAAPAR",130,0)
 . . . . ; skip if not selected primary service facility
"RTN","FBAAPAR",131,0)
 . . . . I 'FBPSV,$P(FBY2,U,5),'$D(FBPSV($P(FBY2,U,5))) Q
"RTN","FBAAPAR",132,0)
 . . . . ;
"RTN","FBAAPAR",133,0)
 . . . . S FBC("B5","F")=FBC("B5","F")+1 ; incr finalzied count
"RTN","FBAAPAR",134,0)
 . . . . ;
"RTN","FBAAPAR",135,0)
 . . . . ; check if payment meets criterion as pending
"RTN","FBAAPAR",136,0)
 . . . . Q:$P(FBY2,U,10)'=""  ; check number
"RTN","FBAAPAR",137,0)
 . . . . Q:$P(FBY2,U,8)'=""  ; date paid
"RTN","FBAAPAR",138,0)
 . . . . Q:$P(FBY2,U,11)'=""  ; cancel date
"RTN","FBAAPAR",139,0)
 . . . . Q:$P(FBY2,U,3)'=""  ; void
"RTN","FBAAPAR",140,0)
 . . . . Q:$P($G(^FBAA(162.1,FBJ,"RX",FBK,"FBREJ")),U)'=""  ; reject
"RTN","FBAAPAR",141,0)
 . . . . ;
"RTN","FBAAPAR",142,0)
 . . . . ; save payment in list
"RTN","FBAAPAR",143,0)
 . . . . S ^TMP($J,"B5",FBDT,FBJ,FBK)=""
"RTN","FBAAPAR",144,0)
 . . . . S FBC("B5","P")=FBC("B5","P")+1 ; incr pending payment count
"RTN","FBAAPAR",145,0)
 ;
"RTN","FBAAPAR",146,0)
 ; batch type B9
"RTN","FBAAPAR",147,0)
 ; loop thru DATE FINALIZED x-ref
"RTN","FBAAPAR",148,0)
 S FBDT=FBDT1-.0001
"RTN","FBAAPAR",149,0)
 F  S FBDT=$O(^FBAAI("AD",FBDT)) Q:FBDT>FBDT2!(FBDT="")  D
"RTN","FBAAPAR",150,0)
 . S FBJ=0 F  S FBJ=$O(^FBAAI("AD",FBDT,FBJ)) Q:'FBJ  D
"RTN","FBAAPAR",151,0)
 . . S FBY0=$G(^FBAAI(FBJ,0))
"RTN","FBAAPAR",152,0)
 . . S FBY2=$G(^FBAAI(FBJ,2))
"RTN","FBAAPAR",153,0)
 . . ;
"RTN","FBAAPAR",154,0)
 . . ; skip if not selected primary service facility
"RTN","FBAAPAR",155,0)
 . . I 'FBPSV,$P(FBY0,U,20),'$D(FBPSV($P(FBY0,U,20))) Q
"RTN","FBAAPAR",156,0)
 . . ;
"RTN","FBAAPAR",157,0)
 . . S FBC("B9","F")=FBC("B9","F")+1 ; incr finalized count
"RTN","FBAAPAR",158,0)
 . . ;
"RTN","FBAAPAR",159,0)
 . . ; check if payment meets criterion
"RTN","FBAAPAR",160,0)
 . . Q:$P(FBY2,U,4)'=""  ; check number
"RTN","FBAAPAR",161,0)
 . . Q:$P(FBY2,U,1)'=""  ; date paid
"RTN","FBAAPAR",162,0)
 . . Q:$P(FBY2,U,5)'=""  ; cancellation date
"RTN","FBAAPAR",163,0)
 . . Q:$P($G(^FBAAI(FBJ,"FBREJ")),U)'=""  ; reject status
"RTN","FBAAPAR",164,0)
 . . Q:$P(FBY0,U,14)'=""  ; void
"RTN","FBAAPAR",165,0)
 . . ;
"RTN","FBAAPAR",166,0)
 . . ; save payment in list
"RTN","FBAAPAR",167,0)
 . . S ^TMP($J,"B9",FBDT,FBJ)=""
"RTN","FBAAPAR",168,0)
 . . S FBC("B9","P")=FBC("B9","P")+1 ; incr pending payment count
"RTN","FBAAPAR",169,0)
 ;
"RTN","FBAAPAR",170,0)
PRINT ; report data
"RTN","FBAAPAR",171,0)
 S (FBQUIT,FBPG)=0 D NOW^%DTC S Y=% D DD^%DT S FBDTR=Y
"RTN","FBAAPAR",172,0)
 K FBDL
"RTN","FBAAPAR",173,0)
 S FBDL="",$P(FBDL,"-",80)=""
"RTN","FBAAPAR",174,0)
 ;
"RTN","FBAAPAR",175,0)
 ; build page header text for selection criteria
"RTN","FBAAPAR",176,0)
 K FBHDT
"RTN","FBAAPAR",177,0)
 S FBHDT(1)="  Payments finalized from "
"RTN","FBAAPAR",178,0)
 S FBHDT(1)=FBHDT(1)_$$FMTE^XLFDT(FBDT1)_" to "_$$FMTE^XLFDT(FBDT2)
"RTN","FBAAPAR",179,0)
 S FBHDT(2)="  for "_$S(FBPSV:"all ",1:"")_"primary service facilities"_$S(FBPSV:"",1:": ")
"RTN","FBAAPAR",180,0)
 I 'FBPSV D
"RTN","FBAAPAR",181,0)
 . ; load facility numbers into header lines
"RTN","FBAAPAR",182,0)
 . S FBK=2
"RTN","FBAAPAR",183,0)
 . S FBJ=0 F  S FBJ=$O(FBPSV(FBJ)) Q:'FBJ  D
"RTN","FBAAPAR",184,0)
 . . S FBX=$$STA^XUAF4(FBJ)_"  "
"RTN","FBAAPAR",185,0)
 . . I $L(FBHDT(FBK))+$L(FBX)>78 S FBK=FBK+1,FBHDT(FBK)="  "
"RTN","FBAAPAR",186,0)
 . . S FBHDT(FBK)=FBHDT(FBK)_FBX
"RTN","FBAAPAR",187,0)
 S Q="",$P(Q,"=",80)="="
"RTN","FBAAPAR",188,0)
 S (FBAAOUT,FBINTOT)=0
"RTN","FBAAPAR",189,0)
 ;
"RTN","FBAAPAR",190,0)
 ; loop thru ^TMP global by batch type
"RTN","FBAAPAR",191,0)
 S FBTYPE="" F  S FBTYPE=$O(^TMP($J,FBTYPE)) Q:FBTYPE=""  D  Q:FBQUIT
"RTN","FBAAPAR",192,0)
 . ; print header
"RTN","FBAAPAR",193,0)
 . D HD
"RTN","FBAAPAR",194,0)
 . ; add header for batch type
"RTN","FBAAPAR",195,0)
 . D:FBTYPE="B2" HEDP^FBAACCB0
"RTN","FBAAPAR",196,0)
 . D:FBTYPE="B3" HED^FBAACCB
"RTN","FBAAPAR",197,0)
 . D:FBTYPE="B5" HED^FBAACCB
"RTN","FBAAPAR",198,0)
 . D:FBTYPE="B9" HEDC^FBAACCB1
"RTN","FBAAPAR",199,0)
 . ;
"RTN","FBAAPAR",200,0)
 . ; loop thru date finalized
"RTN","FBAAPAR",201,0)
 . S FBDT="" F  S FBDT=$O(^TMP($J,FBTYPE,FBDT)) Q:FBDT=""  D  Q:FBQUIT
"RTN","FBAAPAR",202,0)
 . . ; process payments
"RTN","FBAAPAR",203,0)
 . . D:FBTYPE="B2" PROCB2
"RTN","FBAAPAR",204,0)
 . . D:FBTYPE="B3" PROCB3
"RTN","FBAAPAR",205,0)
 . . D:FBTYPE="B5" PROCB5
"RTN","FBAAPAR",206,0)
 . . D:FBTYPE="B9" PROCB9
"RTN","FBAAPAR",207,0)
 ;
"RTN","FBAAPAR",208,0)
 I FBQUIT W !!,"REPORT STOPPED AT USER REQUEST"
"RTN","FBAAPAR",209,0)
 E  D  ; report footer
"RTN","FBAAPAR",210,0)
 . I $Y+5>IOSL D HD Q:FBQUIT
"RTN","FBAAPAR",211,0)
 . W !,FBDL
"RTN","FBAAPAR",212,0)
 . W !,"Type",?30,"Total Finalized",?50,"Pending Payment"
"RTN","FBAAPAR",213,0)
 . F FBTYPE="B2","B3","B5","B9" D
"RTN","FBAAPAR",214,0)
 . . W !,"  "
"RTN","FBAAPAR",215,0)
 . . W:FBTYPE="B2" "Travel"
"RTN","FBAAPAR",216,0)
 . . W:FBTYPE="B3" "Outpatient/Ancillary"
"RTN","FBAAPAR",217,0)
 . . W:FBTYPE="B5" "Pharmacy"
"RTN","FBAAPAR",218,0)
 . . W:FBTYPE="B9" "Inpatient"
"RTN","FBAAPAR",219,0)
 . . W ?30,$J(FBC(FBTYPE,"F"),10)
"RTN","FBAAPAR",220,0)
 . . W ?50,$J(FBC(FBTYPE,"P"),10)
"RTN","FBAAPAR",221,0)
 ;
"RTN","FBAAPAR",222,0)
 I 'FBQUIT,$E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR
"RTN","FBAAPAR",223,0)
 D ^%ZISC
"RTN","FBAAPAR",224,0)
 ;
"RTN","FBAAPAR",225,0)
EXIT ;
"RTN","FBAAPAR",226,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","FBAAPAR",227,0)
 K ^TMP($J)
"RTN","FBAAPAR",228,0)
 K FBC,FBDA,FBDL,FBDT,FBDT1,FBDT2,FBDTR,FBEV,FBHDT,FBJ,FBK,FBL,FBM,FBN
"RTN","FBAAPAR",229,0)
 K FBPG,FBSTALL,FBSTN,FBQUIT,FBY0,FBY2
"RTN","FBAAPAR",230,0)
 D Q^FBAACCB0
"RTN","FBAAPAR",231,0)
 K DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBAAPAR",232,0)
 Q
"RTN","FBAAPAR",233,0)
 ;
"RTN","FBAAPAR",234,0)
HD ; page header
"RTN","FBAAPAR",235,0)
 N FBI
"RTN","FBAAPAR",236,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,FBQUIT=1 Q
"RTN","FBAAPAR",237,0)
 I $E(IOST,1,2)="C-",FBPG S DIR(0)="E" D ^DIR K DIR I 'Y S FBQUIT=1 Q
"RTN","FBAAPAR",238,0)
 I $E(IOST,1,2)="C-"!FBPG W @IOF
"RTN","FBAAPAR",239,0)
 S FBPG=FBPG+1
"RTN","FBAAPAR",240,0)
 W !,"Fee Basis Payment Aging Report",?49,FBDTR,?72,"page ",FBPG
"RTN","FBAAPAR",241,0)
 S FBI=0 F  S FBI=$O(FBHDT(FBI)) Q:'FBI  W !,FBHDT(FBI)
"RTN","FBAAPAR",242,0)
 W !
"RTN","FBAAPAR",243,0)
 Q
"RTN","FBAAPAR",244,0)
 ;
"RTN","FBAAPAR",245,0)
PROCB2 ;
"RTN","FBAAPAR",246,0)
 N J,K,Y
"RTN","FBAAPAR",247,0)
 ; loop thru payments
"RTN","FBAAPAR",248,0)
 S FBJ=0 F  S FBJ=$O(^TMP($J,FBTYPE,FBDT,FBJ)) Q:'FBJ  D  Q:FBQUIT
"RTN","FBAAPAR",249,0)
 . S FBK=0 F  S FBK=$O(^TMP($J,FBTYPE,FBDT,FBJ,FBK)) Q:'FBK  D  Q:FBQUIT
"RTN","FBAAPAR",250,0)
 . . I $Y+7>IOSL D HD Q:FBQUIT  D HEDP^FBAACCB0
"RTN","FBAAPAR",251,0)
 . . S J=FBJ,K=FBK,Y(0)=^FBAAC(J,3,K,0)
"RTN","FBAAPAR",252,0)
 . . D SETT^FBAACCB0 I FBAAOUT S FBQUIT=1
"RTN","FBAAPAR",253,0)
 Q
"RTN","FBAAPAR",254,0)
 ;
"RTN","FBAAPAR",255,0)
PROCB3 ;
"RTN","FBAAPAR",256,0)
 N B,J,K,L,M
"RTN","FBAAPAR",257,0)
 ; loop thru payments
"RTN","FBAAPAR",258,0)
 S FBJ=0 F  S FBJ=$O(^TMP($J,FBTYPE,FBDT,FBJ)) Q:'FBJ  D  Q:FBQUIT
"RTN","FBAAPAR",259,0)
 . S FBK=0 F  S FBK=$O(^TMP($J,FBTYPE,FBDT,FBJ,FBK)) Q:'FBK  D  Q:FBQUIT
"RTN","FBAAPAR",260,0)
 . . S FBL=0
"RTN","FBAAPAR",261,0)
 . . F  S FBL=$O(^TMP($J,FBTYPE,FBDT,FBJ,FBK,FBL)) Q:'FBL  D  Q:FBQUIT
"RTN","FBAAPAR",262,0)
 . . . S FBM=0
"RTN","FBAAPAR",263,0)
 . . . F  S FBM=$O(^TMP($J,FBTYPE,FBDT,FBJ,FBK,FBL,FBM)) Q:'FBM  D  Q:FBQUIT
"RTN","FBAAPAR",264,0)
 . . . . I $Y+8>IOSL D HD Q:FBQUIT  D HED^FBAACCB
"RTN","FBAAPAR",265,0)
 . . . . S J=FBJ,K=FBK,L=FBL,M=FBM
"RTN","FBAAPAR",266,0)
 . . . . S Y(0)=^FBAAC(J,1,K,1,L,1,M,0),B=$P(Y(0),U,8)
"RTN","FBAAPAR",267,0)
 . . . . D SET^FBAACCB I FBAAOUT S FBQUIT=1
"RTN","FBAAPAR",268,0)
 Q
"RTN","FBAAPAR",269,0)
 ;
"RTN","FBAAPAR",270,0)
PROCB5 ;
"RTN","FBAAPAR",271,0)
 N A,B,B2,Z
"RTN","FBAAPAR",272,0)
 ; loop thru payments
"RTN","FBAAPAR",273,0)
 S FBJ=0 F  S FBJ=$O(^TMP($J,FBTYPE,FBDT,FBJ)) Q:'FBJ  D  Q:FBQUIT
"RTN","FBAAPAR",274,0)
 . S FBK=0 F  S FBK=$O(^TMP($J,FBTYPE,FBDT,FBJ,FBK)) Q:'FBK  D  Q:FBQUIT
"RTN","FBAAPAR",275,0)
 . . I $Y+7>IOSL D HD Q:FBQUIT  D HED^FBAACCB
"RTN","FBAAPAR",276,0)
 . . S A=FBJ,B2=FBK,Z(0)=^FBAA(162.1,A,"RX",B2,0),B=$P(Z(0),U,17)
"RTN","FBAAPAR",277,0)
 . . D SETV^FBAACCB0,MORE^FBAACCB1 I FBAAOUT S FBQUIT=1
"RTN","FBAAPAR",278,0)
 Q
"RTN","FBAAPAR",279,0)
 ;
"RTN","FBAAPAR",280,0)
PROCB9 ;
"RTN","FBAAPAR",281,0)
 N A,B,B2,Z
"RTN","FBAAPAR",282,0)
 ; loop thru payments
"RTN","FBAAPAR",283,0)
 S FBJ=0 F  S FBJ=$O(^TMP($J,FBTYPE,FBDT,FBJ)) Q:'FBJ  D  Q:FBQUIT
"RTN","FBAAPAR",284,0)
 . I $Y+7>IOSL D HD Q:FBQUIT  D HEDC^FBAACCB1
"RTN","FBAAPAR",285,0)
 . S I=FBJ,Z(0)=^FBAAI(I,0),B=$P(Z(0),U,17)
"RTN","FBAAPAR",286,0)
 . D CMORE^FBAACCB1 I FBAAOUT S FBQUIT=1
"RTN","FBAAPAR",287,0)
 Q
"RTN","FBAAPAR",288,0)
 ;
"RTN","FBAAPAR",289,0)
 ;FBAAPAR
"RTN","FBAAPET")
0^27^B42847501^B43544171
"RTN","FBAAPET",1,0)
FBAAPET ;AISC/DMK - EDIT PAYMENT ; 5/16/12 12:44pm
"RTN","FBAAPET",2,0)
 ;;3.5;FEE BASIS;**4,38,55,61,77,116,122,133,108,124,132**;JAN 30, 1995;Build 17
"RTN","FBAAPET",3,0)
 ;;VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAAPET",4,0)
 S FBOT=1
"RTN","FBAAPET",5,0)
GETPT I $G(BAT) D
"RTN","FBAAPET",6,0)
 .I '$D(^FBAAC("AC",+BAT)) F I=9,10,11 S $P(^FBAA(161.7,+BAT,0),U,I)=""
"RTN","FBAAPET",7,0)
 .I $D(^FBAAC("AC",+BAT)) D  S $P(^FBAA(161.7,+BAT,0),U,11)=I,$P(^(0),U,9)=$G(FBTOT) K I,FBTOT
"RTN","FBAAPET",8,0)
 ..N J,K,L,M S (I,J,K,L,M,FBTOT)=0
"RTN","FBAAPET",9,0)
 ..F  S J=$O(^FBAAC("AC",+BAT,J)) Q:'J  F  S K=$O(^FBAAC("AC",+BAT,J,K)) Q:'K  F  S L=$O(^FBAAC("AC",+BAT,J,K,L)) Q:'L  F  S M=$O(^FBAAC("AC",+BAT,J,K,L,M)) Q:'M  I $D(^FBAAC(J,1,K,1,L,1,M,0)) S I=I+1,FBTOT=FBTOT+$P(^(0),U,3)
"RTN","FBAAPET",10,0)
 W !! S DIC="^FBAAC(",DIC(0)="AEQM" D ^DIC G END:X="^"!(X=""),GETPT:Y<0 S (DFN,FBDA(3))=+Y
"RTN","FBAAPET",11,0)
 S:'$D(^FBAAC(DFN,1,0)) ^FBAAC(DFN,1,0)="^162.01P^0^0"
"RTN","FBAAPET",12,0)
 S DIC=DIC_DFN_",1,"
"RTN","FBAAPET",13,0)
GETVD W !! S DIC(0)="AEQM" D ^DIC G GETPT:X="^"!(X=""),GETVD:Y<0 S (FBV,FBVD,FBDA(2))=+Y
"RTN","FBAAPET",14,0)
 S:'$D(^FBAAC(DFN,1,FBDA(2),1,0)) ^FBAAC(DFN,1,FBDA(2),1,0)="^162.02DA^0^0"
"RTN","FBAAPET",15,0)
 S DIC=DIC_FBVD_",1,"
"RTN","FBAAPET",16,0)
GETDT S DIC(0)="AEQM",DIC("A")="Date of Service: " D ^DIC K DIC("A") G GETPT:X="^"!(X=""),GETDT:Y<0 S (FBSD,FBSDI,FBDA(1))=+Y,FBAADT=$P(Y,U,2)
"RTN","FBAAPET",17,0)
 S:'$D(^FBAAC(DFN,1,FBDA(2),1,FBDA(1),1,0)) ^FBAAC(DFN,1,FBDA(2),1,FBDA(1),1,0)="^162.03A^0^0"
"RTN","FBAAPET",18,0)
 S FBZ=DIC_FBSD_",1,"
"RTN","FBAAPET",19,0)
SERV S DA(3)=FBDA(3),DA(2)=FBDA(2),DA(1)=FBDA(1)
"RTN","FBAAPET",20,0)
 S DIC("W")="N FBX S FBX=$$MODL^FBAAUTL4(""^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,+Y,""""M"""")"",""E"") W:FBX]"""" ""    CPT Modifier(s): "",FBX Q"
"RTN","FBAAPET",21,0)
 S DIC=FBZ,DIC(0)="AEQMZ"
"RTN","FBAAPET",22,0)
 D
"RTN","FBAAPET",23,0)
 . N ICPTVDT S ICPTVDT=$G(FBAADT) D ^DIC
"RTN","FBAAPET",24,0)
 G GETPT:X="^"!(X=""),SERV:Y<0 S (FBSV,FBAACPI,FBDA)=+Y,BAT=$P(Y(0),U,8),FBDUZ=$P(Y(0),U,7),(FBAACP,FBAACP(0))=$P(Y,U,2),K=$P(Y(0),U,3),FBAAPTC=$P(Y(0),U,20),J(0)=$P(Y(0),U,2)
"RTN","FBAAPET",25,0)
 ; set FB1725 true (1) if payment is for a Mill Bill claim
"RTN","FBAAPET",26,0)
 S FB1725=$S($P(Y(0),U,13)["FB583":+$P($G(^FB583(+$P(Y(0),U,13),0)),U,28),1:0)
"RTN","FBAAPET",27,0)
 I FBDUZ'=DUZ&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,"Sorry,only the clerk who entered the payment ",!," or a supervisor can edit this payment." G GETPT
"RTN","FBAAPET",28,0)
 ;S FBAAMM1=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,2)),U,2)
"RTN","FBAAPET",29,0)
 S FBFSAMT(0)=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,2)),U,12)
"RTN","FBAAPET",30,0)
 ; determine lesser of original fee schedule amount and amount claimed
"RTN","FBAAPET",31,0)
 S FBAMTPD(0)=$S(FBFSAMT(0)="":J(0),FBFSAMT(0)>J(0):J(0),1:FBFSAMT(0))
"RTN","FBAAPET",32,0)
 S FBMODL=$$MODL^FBAAUTL4("^FBAAC("_FBDA(3)_",1,"_FBDA(2)_",1,"_FBDA(1)_",1,"_FBDA_",""M"")")
"RTN","FBAAPET",33,0)
 ; load current adjustment data
"RTN","FBAAPET",34,0)
 D LOADADJ^FBAAFA(FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",.FBADJ)
"RTN","FBAAPET",35,0)
 ; save adjustment data prior to edit session in sorted list
"RTN","FBAAPET",36,0)
 S FBADJL(0)=$$ADJL^FBUTL2(.FBADJ) ; sorted list of original adjustments
"RTN","FBAAPET",37,0)
 ; load current remittance remark data
"RTN","FBAAPET",38,0)
 D LOADRR^FBAAFR(FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",.FBRRMK)
"RTN","FBAAPET",39,0)
 ; save remittance remarks prior to edit session in sorted list
"RTN","FBAAPET",40,0)
 S FBRRMKL(0)=$$RRL^FBUTL4(.FBRRMK)
"RTN","FBAAPET",41,0)
 ; save FPPS data prior to edit session
"RTN","FBAAPET",42,0)
 S FBFPPSC(0)=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,3)),U)
"RTN","FBAAPET",43,0)
 S FBFPPSC=FBFPPSC(0)
"RTN","FBAAPET",44,0)
 S FBFPPSL(0)=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,3)),U,2)
"RTN","FBAAPET",45,0)
 S FBFPPSL=FBFPPSL(0)
"RTN","FBAAPET",46,0)
 G:BAT']"" EDIT
"RTN","FBAAPET",47,0)
 ; check batch status
"RTN","FBAAPET",48,0)
 S FBSTAT=$P($G(^FBAA(161.7,BAT,"ST")),U) ; batch status
"RTN","FBAAPET",49,0)
 I FBSTAT="S",'$D(^XUSEC("FBAASUPERVISOR",DUZ)) W !!,*7,"Sorry, only the Supervisor can edit a payment once the batch has been released." G GETPT
"RTN","FBAAPET",50,0)
 I "^T^F^V^"[(U_FBSTAT_U) W !!,*7,"Sorry, you cannot edit a payment when the batch has been sent to Austin." G GETPT
"RTN","FBAAPET",51,0)
 K FBSTAT
"RTN","FBAAPET",52,0)
 ;
"RTN","FBAAPET",53,0)
EDIT S DA=FBSV
"RTN","FBAAPET",54,0)
 ;
"RTN","FBAAPET",55,0)
 ; first edit CPT code and modifiers
"RTN","FBAAPET",56,0)
 D CPTM^FBAALU(FBAADT,DFN,FBAACP(0),FBMODL) I '$G(FBGOT) G GETPT
"RTN","FBAAPET",57,0)
 ; if CPT was changed then update file
"RTN","FBAAPET",58,0)
 I FBAACP'=FBAACP(0) D  I FBAACP="@" G GETPT
"RTN","FBAAPET",59,0)
 . N FBIENS,FBFDA
"RTN","FBAAPET",60,0)
 . S FBIENS=FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_","
"RTN","FBAAPET",61,0)
 . S FBFDA(162.03,FBIENS,.01)=FBAACP
"RTN","FBAAPET",62,0)
 . D FILE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBAAPET",63,0)
 ; if modifiers changed then update file
"RTN","FBAAPET",64,0)
 I FBMODL'=$$MODL^FBAAUTL4("FBMODA") D REPMOD^FBAAUTL4(FBDA(3),FBDA(2),FBDA(1),FBDA)
"RTN","FBAAPET",65,0)
 ;
"RTN","FBAAPET",66,0)
 ; now edit remaining fields
"RTN","FBAAPET",67,0)
 S DIE("NO^")=""
"RTN","FBAAPET",68,0)
 S DR="48;47;S FBUNITS=X;42R;S FBZIP=X;S:$$ANES^FBAAFS($$CPT^FBAAUTL4(FBAACP)) Y=""@2"";43///@;S FBTIME=X;S Y=""@3"";@2;43R;S FBTIME=X;@3"
"RTN","FBAAPET",69,0)
 ; fb*3.5*116 remove edit of interest indicator (162.03,34) to prevent different interest indicator values at line item level; interest indicator set at invoice level only; 
"RTN","FBAAPET",70,0)
 S DR(1,162.03,1)="S FBAAMM=$S(FBAAPTC=""R"":"""",1:1);D PPT^FBAACO1(FBAAMM1,FBCNTRP,1);54///@;54////^S X=FBCNTRP;30R;S FBHCFA(30)=X;1;S J=X;Q"
"RTN","FBAAPET",71,0)
 ;S DR(1,162.03,1)="30R;S FBHCFA(30)=X;1;S J=X;Q"
"RTN","FBAAPET",72,0)
 S DR(1,162.03,2)="D FEEDT^FBAACO3;44///@;44///^S X=FBFSAMT;45///@;45///^S X=FBFSUSD;S:FBAMTPD'>0!(FBAMTPD=FBAMTPD(0)) Y=""@4"";2///^S X=FBAMTPD;@4;2//^S X=FBAMTPD;D CHKIT^FBAACO3;S K=X"
"RTN","FBAAPET",73,0)
 ;S DR(1,162.03,3)="3////^S X=$S(J-K:J-K,1:"""");I X S Y=""@11"";4////@;S Y=""@5"";@11;3R;4R;S:X'=4 Y=""@5"";22"
"RTN","FBAAPET",74,0)
 S DR(1,162.03,3)="K FBADJD;M FBADJD=FBADJ;S FBX=$$ADJ^FBUTL2(J-K,.FBADJ,2,,.FBADJD,1)"
"RTN","FBAAPET",75,0)
 S DR(1,162.03,4)="S FBX=$$FPPSC^FBUTL5(1,FBFPPSC);S:FBX=-1 Y=0;S:FBX="""" Y=""@5"";50///^S X=FBX;S FBFPPSC=X;S FBX=$$FPPSL^FBUTL5(FBFPPSL);S:FBX=-1 Y=0;51///^S X=FBX;S FBFPPCL=X;S Y=""@55"";@5;50///@;S FBFPPSC="""";51///@;S FBFPPSL="""";@55"
"RTN","FBAAPET",76,0)
 S DR(1,162.03,5)="K DIE(""NO^"");W !,""Exit ('^') allowed now"";26;S PRC(""SITE"")=X;8;@13;13;I $$BADDATE^FBAAPET(FBAADT,X) S Y=""@13"";Q;33;49"
"RTN","FBAAPET",77,0)
 S DR(1,162.03,6)="15;17;16;S:X=1 Y=""@1"";@6;28R;S:$$INPICD9^FBCSV1(X,"""",$G(FBAADT)) Y=""@6"";31;32R;S Y=""@7"";@1;28;I X]"""" S:$$INPICD9^FBCSV1(X,"""",$G(FBAADT)) Y=""@1"";31"
"RTN","FBAAPET",78,0)
 S DR(1,162.03,7)="@7;K FBRRMKD;M FBRRMKD=FBRRMK;S FBX=$$RR^FBUTL4(.FBRRMK,2,,.FBRRMKD)"
"RTN","FBAAPET",79,0)
 S DR(1,162.03,8)="73;74;75;58;59;60;61;62;63;64;65;66;67;76;77;78;79;68;69" ;FB*3.5*122,FB*3.5*133 edit line item provider fields
"RTN","FBAAPET",80,0)
 S DIE=FBZ
"RTN","FBAAPET",81,0)
 D
"RTN","FBAAPET",82,0)
 . N ICPTVDT,ICDVDT,FB583,FBAAMM,FBAAMM1,FBCNTRA,FBCNTRP,FBVEN,FTP
"RTN","FBAAPET",83,0)
 . S (ICPTVDT,ICDVDT)=$G(FBAADT)
"RTN","FBAAPET",84,0)
 . ; set variables for call to PPT^FBAACO1
"RTN","FBAAPET",85,0)
 . S FBAAMM1=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,2)),U,2)
"RTN","FBAAPET",86,0)
 . S FBCNTRP=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,3)),U,8)
"RTN","FBAAPET",87,0)
 . S X=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,0)),U,13)
"RTN","FBAAPET",88,0)
 . S:X[";FB583(" FB583=+X
"RTN","FBAAPET",89,0)
 . S FTP=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),0)),U,4)
"RTN","FBAAPET",90,0)
 . S FBVEN=$S(FTP:$P($G(^FBAAA(DFN,1,FTP,0)),U,4),1:"")
"RTN","FBAAPET",91,0)
 . S FBCNTRA=$S(FTP:$P($G(^FBAAA(DFN,1,FTP,0)),U,22),1:"")
"RTN","FBAAPET",92,0)
 . D ^DIE
"RTN","FBAAPET",93,0)
 ; if adjustment data changed then file
"RTN","FBAAPET",94,0)
 I $$ADJL^FBUTL2(.FBADJ)'=FBADJL(0) D FILEADJ^FBAAFA(FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",.FBADJ)
"RTN","FBAAPET",95,0)
 ; if remit remark data changed then file
"RTN","FBAAPET",96,0)
 I $$RRL^FBUTL4(.FBRRMK)'=FBRRMKL(0) D FILERR^FBAAFR(FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",.FBRRMK)
"RTN","FBAAPET",97,0)
 ; if FPPS CLAIM ID changed, update other line items on invoice
"RTN","FBAAPET",98,0)
 I FBFPPSC'=FBFPPSC(0) D
"RTN","FBAAPET",99,0)
 . N FBAAIN
"RTN","FBAAPET",100,0)
 . S FBAAIN=$$GET1^DIQ(162.03,FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",14)
"RTN","FBAAPET",101,0)
 . D CKINVEDI^FBAAPET1(FBFPPSC(0),FBFPPSC,FBAAIN,FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",")
"RTN","FBAAPET",102,0)
 K FBSV W !! G SERV
"RTN","FBAAPET",103,0)
 ;
"RTN","FBAAPET",104,0)
BADDATE(FBDOS,INVRCVDT) ;Reject entry if InvRcvDt is Prior to the Date of Service on the Invoice
"RTN","FBAAPET",105,0)
 I INVRCVDT<FBDOS D  Q 1 ;Reject entry
"RTN","FBAAPET",106,0)
 .N SHOWDOS S SHOWDOS=$E(FBDOS,4,5)_"/"_$E(FBDOS,6,7)_"/"_$E(FBDOS,2,3) ;Convert FBDOS into display format for error message
"RTN","FBAAPET",107,0)
 .W *7,!!?5,"*** Invoice Received Date cannot be prior to the",!?8,"Date of Service ("_SHOWDOS_") !!!"
"RTN","FBAAPET",108,0)
 Q 0 ;Accept entry
"RTN","FBAAPET",109,0)
 ;
"RTN","FBAAPET",110,0)
END K DR,DIC,DIE,X,DFN,FBOT,FBVD,FBSD,BAT,FBAADT,FBSV,DA,FBDA,FBZ,FBDUZ,FBAACP,FBFY,FY,FBAMTPD,J,K,Y,ZZ,PRC,FBHOLDX,FBV,FBSDI,FBAACPI
"RTN","FBAAPET",111,0)
 K FBFSAMT,FBFSUSD,FBMODA,FBZIP,FBTIME,FBHCFA(30),FBAAPTC,FB1725,FBADJ,FBADJD,FBADJL(0),FBRRMK,FBRRMKD,FBRRMKL(0),FBX,FBUNITS
"RTN","FBAAPET",112,0)
 Q
"RTN","FBAARD")
0^13^B22001848^B20514488
"RTN","FBAARD",1,0)
FBAARD ;AISC/DMK - DELETE REJECTS ENTERED IN ERROR ;4/4/2012
"RTN","FBAARD",2,0)
 ;;3.5;FEE BASIS;**114,132**;JAN 30, 1995;Build 17
"RTN","FBAARD",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAARD",4,0)
 S IOP=$S($D(ION):ION,1:"HOME") D ^%ZIS K IOP
"RTN","FBAARD",5,0)
 S Q="",$P(Q,"=",80)="=",UL="",$P(UL,"-",80)="-",(CNT,FBAAOUT,FBINTOT)=0
"RTN","FBAARD",6,0)
 D DT^DICRW
"RTN","FBAARD",7,0)
 I '$D(^XUSEC("FBAAREJECT",DUZ)) W !!,$C(7),"Sorry, you must hold the FBAAREJECT flag to use this option!" G Q
"RTN","FBAARD",8,0)
BT K QQ W !! S DIC="^FBAA(161.7,",DIC(0)="AEQMN",DIC("S")="I $G(^(""ST""))=""F""&($P(^(0),U,17)]"""")" D ^DIC K DIC("S") G Q:X="^"!(X=""),BT:Y<0 S FBN=+Y,B=FBN
"RTN","FBAARD",9,0)
 L +^FBAA(161.7,FBN):$G(DILOCKTM,3)
"RTN","FBAARD",10,0)
 I '$T W !,"Another user is editing this batch.  Try again later." G BT
"RTN","FBAARD",11,0)
 S FZ=^FBAA(161.7,FBN,0),FBTYPE=$P(FZ,"^",3),FBAAON=$P(FZ,"^",2),FBAARA=0
"RTN","FBAARD",12,0)
 I FBTYPE="B9",$P(FZ,"^",15)="" S FBCNH=1
"RTN","FBAARD",13,0)
 S FBAAB=$P(FZ,"^"),FBAAOB=$P(FZ,"^",8)_"-"_FBAAON,FBCOMM="Rejects deleted from batch "_FBAAB
"RTN","FBAARD",14,0)
 I '$S(FBTYPE="B3":$D(^FBAAC("AH",B)),FBTYPE="B2":$D(^FBAAC("AG",B)),FBTYPE="B5":$D(^FBAA(162.1,"AF",B)),FBTYPE="B9":$D(^FBAAI("AH",B)),1:0) W !!,*7,"No items rejected in this batch!" L -^FBAA(161.7,FBN) G BT
"RTN","FBAARD",15,0)
 S DA=FBN,DR="0:1;ST" W !! D EN^DIQ
"RTN","FBAARD",16,0)
 S FBNUM=$P(^FBAA(161.7,B,0),"^",1),FBVD=$P(^(0),"^",12),FBVDUZ=$P(^(0),"^",16)
"RTN","FBAARD",17,0)
ASKLL S B=FBN,FBNNP=1 S DIR(0)="Y",DIR("A")="Want line items listed",DIR("B")="NO" D ^DIR K DIR W:Y @IOF D:Y MORE^FBAARJP:FBTYPE="B3",PMORE^FBAARJP:FBTYPE="B5",TMORE^FBAARJP:FBTYPE="B2",CMORE^FBAARJP:FBTYPE="B9" K FBNNP
"RTN","FBAARD",18,0)
RD0 S DIR(0)="Y",DIR("A")="Want to delete local rejection codes for the entire Batch",DIR("B")="NO",DIR("?")="^D ^FBAARD0" D ^DIR K DIR G Q:$D(DIRUT),^FBAARD1:Y
"RTN","FBAARD",19,0)
RD1 S DIR(0)="Y",DIR("A")="Want to delete local rejection code for any line items",DIR("B")="NO" D ^DIR K DIR G Q:'Y,Q:$D(DIRUT) D DELT^FBAARD2:FBTYPE="B2",DELM:FBTYPE="B3",DELP^FBAARD2:FBTYPE="B5",DELC^FBAARD0:FBTYPE="B9"
"RTN","FBAARD",20,0)
 G Q:$D(FBERR)
"RTN","FBAARD",21,0)
RDD ;
"RTN","FBAARD",22,0)
 S DIC="^FBAA(161.7,",DA=FBN,DR="0:1;ST" W !! D EN^DIQ
"RTN","FBAARD",23,0)
 L -^FBAA(161.7,FBN)
"RTN","FBAARD",24,0)
 G BT
"RTN","FBAARD",25,0)
Q ; clean-up
"RTN","FBAARD",26,0)
 I $G(FBN) L -^FBAA(161.7,FBN)
"RTN","FBAARD",27,0)
 K B,J,K,L,M,X,Y,Z,DIC,A,A1,A2,CPTDESC,DIRUT,DR,FBAACB,FBAACPT,FBAAON,FBAAOUT,FBAARA,FBIN,FBINOLD,FBINTOT,FBNUM,FBRR,FBTYPE,FBVD,FBVDUZ,FBVP,FZ,FBN,CNT,Q,P3,P4,UL,VAL,FBERR,FBAAMT,FBAAOB,FBCOMM,FBAAB,V,VID
"RTN","FBAARD",28,0)
 K FBAC,FBAP,FBDX,FBFD,FBK,FBX,FBPDT,FBSC,FBTD,S,ZS,PRCSCPAN,FBCNH,DUOUT
"RTN","FBAARD",29,0)
 Q
"RTN","FBAARD",30,0)
DELM ; specify line items rejected in error for batch type B3
"RTN","FBAARD",31,0)
 ; select patient
"RTN","FBAARD",32,0)
 S J=$$ASKVET^FBAAUTL1("I $D(^FBAAC(""AH"",B,+Y))")
"RTN","FBAARD",33,0)
 Q:'J
"RTN","FBAARD",34,0)
 K QQ
"RTN","FBAARD",35,0)
 S QQ=0,FBAAOUT="" W @IOF D HED^FBAACCB
"RTN","FBAARD",36,0)
 F K=0:0 S K=$O(^FBAAC("AH",B,J,K)) Q:K'>0!(FBAAOUT)  F L=0:0 S L=$O(^FBAAC("AH",B,J,K,L)) Q:L'>0!(FBAAOUT)  F M=0:0 S M=$O(^FBAAC("AH",B,J,K,L,M)) Q:M'>0!(FBAAOUT)  D WRITM
"RTN","FBAARD",37,0)
 I QQ=0 W !,"No local rejects found in batch for this patient!" G DELM
"RTN","FBAARD",38,0)
RL1 S DIR(0)="Y",DIR("A")="Delete Reject flag for all items for this patient",DIR("B")="YES" D ^DIR K DIR Q:$D(DIRUT)  G LOOP:Y
"RTN","FBAARD",39,0)
RL S DIR(0)="N^1:"_QQ,DIR("A")="Delete reject for which line item"
"RTN","FBAARD",40,0)
 D ^DIR K DIR Q:$D(DIRUT)  S HX=X
"RTN","FBAARD",41,0)
 I '$D(QQ(HX)) W !,*7,"You already deleted that one!!" G RL
"RTN","FBAARD",42,0)
ASUR S DIR(0)="Y",DIR("A")="Are you sure you want to delete reject for item number "_HX,DIR("B")="NO" D ^DIR K DIR G:$D(DIRUT)!'Y RL
"RTN","FBAARD",43,0)
 S J=$P(QQ(HX),"^",1),K=$P(QQ(HX),"^",2),L=$P(QQ(HX),"^",3),M=$P(QQ(HX),"^",4)
"RTN","FBAARD",44,0)
 D STUFF Q:$D(FBERR)
"RTN","FBAARD",45,0)
RDMORE S DIR(0)="Y",DIR("A")=$S($G(FBERR):"",1:"Item Deleted.  ")_"Want to delete another",DIR("B")="YES" D ^DIR K DIR G RL:Y,DELM
"RTN","FBAARD",46,0)
WRITM ;
"RTN","FBAARD",47,0)
 Q:$P($G(^FBAAC(J,1,K,1,L,1,M,"FBREJ")),"^",4)=1  ; skip interface rej.
"RTN","FBAARD",48,0)
 S QQ=QQ+1,QQ(QQ)=J_"^"_K_"^"_L_"^"_M D SET^FBAACCB
"RTN","FBAARD",49,0)
 Q
"RTN","FBAARD",50,0)
STUFF ;
"RTN","FBAARD",51,0)
 N FBX
"RTN","FBAARD",52,0)
 S FBAAMT=+$P(^FBAAC(J,1,K,1,L,1,M,0),"^",3)
"RTN","FBAARD",53,0)
 D POST^FBAARD3 G PROB^FBAARD1:$D(FBERR)
"RTN","FBAARD",54,0)
 S FBX=$$DELREJ^FBAARR3("162.03",M_","_L_","_K_","_J_",")
"RTN","FBAARD",55,0)
 I 'FBX D
"RTN","FBAARD",56,0)
 . W !,"1358 was updated, but error occured while deleting the reject"
"RTN","FBAARD",57,0)
 . W !,"flag for line with IENS = "_M_","_L_","_K_","_J_","
"RTN","FBAARD",58,0)
 . W !,"  ",$P(FBX,"^",2)
"RTN","FBAARD",59,0)
 . S FBERR=1
"RTN","FBAARD",60,0)
 K QQ(HX)
"RTN","FBAARD",61,0)
 Q
"RTN","FBAARD",62,0)
LOOP F HX=0:0 S HX=$O(QQ(HX)) Q:HX'>0!($D(FBERR))  S J=$P(QQ(HX),"^",1),K=$P(QQ(HX),"^",2),L=$P(QQ(HX),"^",3),M=$P(QQ(HX),"^",4) D STUFF Q:$D(FBERR)
"RTN","FBAARD",63,0)
 W !,"...DONE!" G DELM
"RTN","FBAARD0")
0^14^B6586917^B7658071
"RTN","FBAARD0",1,0)
FBAARD0 ;AISC/GRR - DELETE REJECTS ENTERED IN ERROR (CONT.) ;3/28/2012
"RTN","FBAARD0",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FBAARD0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAARD0",4,0)
HELPD ;
"RTN","FBAARD0",5,0)
 W !!,"If you answer 'Yes' to this question, the reject flag will be deleted from all"
"RTN","FBAARD0",6,0)
 W !,"locally rejected line items in this batch.  If you answer 'No', you will be"
"RTN","FBAARD0",7,0)
 W !,"asked if you want to delete the reject flag from specific line items."
"RTN","FBAARD0",8,0)
 Q
"RTN","FBAARD0",9,0)
DELC ; specify line items rejected in error for batch type B9
"RTN","FBAARD0",10,0)
 S (QQ,FBAAOUT)=0 W @IOF D HEDC^FBAACCB1 F I=0:0 S I=$O(^FBAAI("AH",B,I)) Q:I'>0!(FBAAOUT)  I $D(^FBAAI(I,0)) S Z(0)=^(0) D WRITC
"RTN","FBAARD0",11,0)
 I QQ=0 W !,"No local rejects found in batch!" Q
"RTN","FBAARD0",12,0)
RL S DIR(0)="N^1:"_QQ,DIR("A")="Delete reject flag for which line item" D ^DIR K DIR Q:$D(DIRUT)  S HX=X
"RTN","FBAARD0",13,0)
 I '$D(QQ(HX)) W !,*7,"You already did that one !!" G RL
"RTN","FBAARD0",14,0)
ASKSU S DIR(0)="Y",DIR("A")="Are you sure you want to delete the reject on item number "_HX,DIR("B")="NO" D ^DIR K DIR G:$D(DIRUT)!'Y RL
"RTN","FBAARD0",15,0)
 S I=QQ(HX),(FBAAAP,FBAAMT)=+$P(^FBAAI(I,0),"^",9),FBII78=$P($G(^(0)),"^",5),FBMM=$E($P(^(0),U,6),4,5) S FBINVI=I D INPOST^FBAARD3 S I=FBINVI K FBINVI I $D(FBERR) G PROB^FBAARD1
"RTN","FBAARD0",16,0)
 S FBX=$$DELREJ^FBAARR3(162.5,I_",")
"RTN","FBAARD0",17,0)
 I 'FBX D
"RTN","FBAARD0",18,0)
 . W !,"1358 was updated, but error occured while deleting the reject"
"RTN","FBAARD0",19,0)
 . W !,"flag for line with IENS = "_I_","
"RTN","FBAARD0",20,0)
 . W !,"  ",$P(FBX,"^",2)
"RTN","FBAARD0",21,0)
 . S FBERR=1
"RTN","FBAARD0",22,0)
 K QQ(HX),FBMM
"RTN","FBAARD0",23,0)
 W !,"...Done"
"RTN","FBAARD0",24,0)
 I '$D(^FBAAI("AH",B)) Q
"RTN","FBAARD0",25,0)
RDMORE S DIR(0)="Y",DIR("A")=$S($G(FBERR):"",1:"Item Deleted.  ")_"Want to delete another",DIR("B")="YES" D ^DIR K DIR G RDMORE:$D(DIRUT),RL:Y
"RTN","FBAARD0",26,0)
 Q
"RTN","FBAARD0",27,0)
WRITC ;
"RTN","FBAARD0",28,0)
 Q:$P($G(^FBAAI(I,"FBREJ")),"^",4)=1  ; skip interface rejects
"RTN","FBAARD0",29,0)
 S QQ=QQ+1,QQ(QQ)=I D CMORE^FBAACCB1 Q
"RTN","FBAARD1")
0^15^B9198257^B14194007
"RTN","FBAARD1",1,0)
FBAARD1 ;AISC/GRR - FEE BASIS VOUCHER AUDIT DELETE REJECT FLAG ;4/17/2012
"RTN","FBAARD1",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FBAARD1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAARD1",4,0)
RD S DIR(0)="Y",DIR("A")="Are you sure you want to delete reject code for all locally rejected items in this batch",DIR("B")="NO" D ^DIR K DIR G Q^FBAARD:$D(DIRUT),RD1^FBAARD:'Y
"RTN","FBAARD1",5,0)
 D WAIT^DICD,ALLM:FBTYPE="B3",ALLT:FBTYPE="B2",ALLP:FBTYPE="B5",ALLC:FBTYPE="B9"
"RTN","FBAARD1",6,0)
 G Q^FBAARD:$D(FBERR)
"RTN","FBAARD1",7,0)
 G RDD^FBAARD
"RTN","FBAARD1",8,0)
ALLM ;
"RTN","FBAARD1",9,0)
 F J=0:0 S J=$O(^FBAAC("AH",B,J)) Q:J'>0!($D(FBERR))  F K=0:0 S K=$O(^FBAAC("AH",B,J,K)) Q:K'>0!($D(FBERR))  F L=0:0 S L=$O(^FBAAC("AH",B,J,K,L)) Q:L'>0!($D(FBERR))  F M=0:0 S M=$O(^FBAAC("AH",B,J,K,L,M)) Q:M'>0!($D(FBERR))  D REJM Q:$D(FBERR)
"RTN","FBAARD1",10,0)
ADONE ;
"RTN","FBAARD1",11,0)
 W:'$D(FBERR) !!,"Local reject codes for all items have been deleted!"
"RTN","FBAARD1",12,0)
 Q
"RTN","FBAARD1",13,0)
REJM ;
"RTN","FBAARD1",14,0)
 Q:$P($G(^FBAAC(J,1,K,1,L,1,M,"FBREJ")),"^",4)=1  ; skip interface rej.
"RTN","FBAARD1",15,0)
 S FBAAMT=+$P(^FBAAC(J,1,K,1,L,1,M,0),"^",3)
"RTN","FBAARD1",16,0)
 D POST^FBAARD3 I $D(FBERR) G PROB
"RTN","FBAARD1",17,0)
 S FBX=$$DELREJ^FBAARR3("162.03",M_","_L_","_K_","_J_",")
"RTN","FBAARD1",18,0)
 Q
"RTN","FBAARD1",19,0)
ALLT ;
"RTN","FBAARD1",20,0)
 F J=0:0 S J=$O(^FBAAC("AG",B,J)) Q:J'>0!($D(FBERR))  F K=0:0 S K=$O(^FBAAC("AG",B,J,K)) Q:K'>0!($D(FBERR))  D REJT Q:$D(FBERR)
"RTN","FBAARD1",21,0)
 G ADONE
"RTN","FBAARD1",22,0)
REJT ;
"RTN","FBAARD1",23,0)
 Q:$P($G(^FBAAC(J,3,K,"FBREJ")),"^",4)=1  ; skip interface reject
"RTN","FBAARD1",24,0)
 S FBAAMT=$P(^FBAAC(J,3,K,0),"^",3)
"RTN","FBAARD1",25,0)
 D POST^FBAARD3 I $D(FBERR) G PROB
"RTN","FBAARD1",26,0)
 S FBX=$$DELREJ^FBAARR3("162.04",K_","_J_",")
"RTN","FBAARD1",27,0)
 Q
"RTN","FBAARD1",28,0)
ALLP ;
"RTN","FBAARD1",29,0)
 F J=0:0 S J=$O(^FBAA(162.1,"AF",B,J)) Q:J'>0!($D(FBERR))  F K=0:0 S K=$O(^FBAA(162.1,"AF",B,J,K)) Q:K'>0!($D(FBERR))  D REJP Q:$D(FBERR)
"RTN","FBAARD1",30,0)
 G ADONE
"RTN","FBAARD1",31,0)
REJP ;
"RTN","FBAARD1",32,0)
 Q:$P($G(^FBAA(162.1,J,"RX",K,"FBREJ")),"^",4)=1  ; skip interface rej.
"RTN","FBAARD1",33,0)
 S FBAAMT=+$P(^FBAA(162.1,J,"RX",K,0),"^",16)
"RTN","FBAARD1",34,0)
 D POST^FBAARD3 I $D(FBERR) G PROB
"RTN","FBAARD1",35,0)
 S FBX=$$DELREJ^FBAARR3("162.11",K_","_J_",")
"RTN","FBAARD1",36,0)
 Q
"RTN","FBAARD1",37,0)
ALLC ;
"RTN","FBAARD1",38,0)
 F J=0:0 S J=$O(^FBAAI("AH",B,J)) Q:J'>0!($D(FBERR))  I $D(^FBAAI(J,0)) D REJC Q:$D(FBERR)
"RTN","FBAARD1",39,0)
 G ADONE
"RTN","FBAARD1",40,0)
REJC ;
"RTN","FBAARD1",41,0)
 Q:$P($G(^FBAAI(J,"FBREJ")),"^",4)=1  ; skip interface reject
"RTN","FBAARD1",42,0)
 S FBAAMT=+$P(^FBAAI(J,0),"^",9),FBII78=$P($G(^(0)),"^",5),FBMM=$E($P(^(0),U,6),4,5)
"RTN","FBAARD1",43,0)
 D INPOST^FBAARD3 I $D(FBERR) G PROB
"RTN","FBAARD1",44,0)
 S FBX=$$DELREJ^FBAARR3("162.5",J_",")
"RTN","FBAARD1",45,0)
 K FBMM
"RTN","FBAARD1",46,0)
 Q
"RTN","FBAARD1",47,0)
PROB W !!,*7,"There is a problem with your 1358. Unable to delete reject flag!",!
"RTN","FBAARD1",48,0)
 Q
"RTN","FBAARD2")
0^16^B16756936^B17028231
"RTN","FBAARD2",1,0)
FBAARD2 ;AISC/GRR - DELETE REJECT CODE FOR AN ITEM (CONT.) ;3/26/2012
"RTN","FBAARD2",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FBAARD2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAARD2",4,0)
DELT ; specify line items rejected in error for batch type B2
"RTN","FBAARD2",5,0)
 ; select patient
"RTN","FBAARD2",6,0)
 S J=$$ASKVET^FBAAUTL1("I $D(^FBAAC(""AG"",B,+Y))")
"RTN","FBAARD2",7,0)
 Q:'J
"RTN","FBAARD2",8,0)
 K QQ
"RTN","FBAARD2",9,0)
 S QQ=0 W @IOF D HEDP^FBAACCB0
"RTN","FBAARD2",10,0)
 F K=0:0 S K=$O(^FBAAC("AG",B,J,K)) Q:K'>0  D WRITT
"RTN","FBAARD2",11,0)
 I QQ=0 W !,"No local rejects found in batch for this patient!" G DELT
"RTN","FBAARD2",12,0)
RLT1 S DIR(0)="Y",DIR("A")="Delete Reject flag for all items for this patient",DIR("B")="YES" D ^DIR K DIR Q:$D(DIRUT)  G LOOPT:Y
"RTN","FBAARD2",13,0)
RLT S DIR(0)="N^1:"_QQ,DIR("A")="Delete reject for which line item" D ^DIR K DIR Q:$D(DIRUT)  S HX=X
"RTN","FBAARD2",14,0)
 I '$D(QQ(HX)) W !!,*7,"You just deleted that one!!" G RLT
"RTN","FBAARD2",15,0)
ASKK S DIR(0)="Y",DIR("A")="Are you sure you want to delete reject for item number "_HX,DIR("B")="NO" D ^DIR K DIR G:$D(DIRUT)!'Y RLT
"RTN","FBAARD2",16,0)
 S J=$P(QQ(HX),"^",1),K=$P(QQ(HX),"^",2)
"RTN","FBAARD2",17,0)
 D STUFFT
"RTN","FBAARD2",18,0)
RDMORT S DIR(0)="Y",DIR("A")=$S($G(FBERR):"",1:"Reject Flag deleted.  ")_"Want to delete another",DIR("B")="YES" D ^DIR K DIR G RDMORT:$D(DIRUT),RLT:Y
"RTN","FBAARD2",19,0)
 Q
"RTN","FBAARD2",20,0)
WRITT ;
"RTN","FBAARD2",21,0)
 Q:$P($G(^FBAAC(J,3,K,"FBREJ")),"^",4)=1  ; skip interface reject
"RTN","FBAARD2",22,0)
 S QQ=QQ+1,QQ(QQ)=J_"^"_K S Y(0)=^FBAAC(J,3,K,0) D SETT^FBAACCB0
"RTN","FBAARD2",23,0)
 Q
"RTN","FBAARD2",24,0)
STUFFT ;
"RTN","FBAARD2",25,0)
 N FBX
"RTN","FBAARD2",26,0)
 S FBAAMT=$P(^FBAAC(J,3,K,0),"^",3)
"RTN","FBAARD2",27,0)
 D POST^FBAARD3 I $D(FBERR) G PROB^FBAARD1
"RTN","FBAARD2",28,0)
 S FBX=$$DELREJ^FBAARR3("162.04",K_","_J_",")
"RTN","FBAARD2",29,0)
 I 'FBX D
"RTN","FBAARD2",30,0)
 . W !,"1358 was updated, but error occured while deleting the reject"
"RTN","FBAARD2",31,0)
 . W !,"flag for line with IENS = "_K_","_J_","
"RTN","FBAARD2",32,0)
 . W !,"  ",$P(FBX,"^",2)
"RTN","FBAARD2",33,0)
 . S FBERR=1
"RTN","FBAARD2",34,0)
 K QQ(HX)
"RTN","FBAARD2",35,0)
 Q
"RTN","FBAARD2",36,0)
LOOPT F HX=0:0 S HX=$O(QQ(HX)) Q:HX'>0  S J=$P(QQ(HX),"^",1),K=$P(QQ(HX),"^",2) D STUFFT
"RTN","FBAARD2",37,0)
 W !,"...DONE!"
"RTN","FBAARD2",38,0)
 G DELT
"RTN","FBAARD2",39,0)
 ;
"RTN","FBAARD2",40,0)
DELP ; specify line items rejected in error for batch type B5
"RTN","FBAARD2",41,0)
RDI K QQ W !! S DIC="^FBAA(162.1,",DIC(0)="AEQ" D ^DIC Q:X="^"!(X="")  G:Y<0 RDI S A=+Y I '$D(^FBAA(162.1,"AF",B,A)) W !!,*7,"No payments rejected in this batch for that Invoice!" G RDI
"RTN","FBAARD2",42,0)
 S QQ=0,FBIN=A W @IOF D SETV^FBAACCB0,HED^FBAACCB
"RTN","FBAARD2",43,0)
 F B2=0:0 S B2=$O(^FBAA(162.1,"AF",B,A,B2)) Q:B2'>0  D WRITP
"RTN","FBAARD2",44,0)
 I QQ=0 W !,"No local rejects found in batch for this invoice!" G DELP
"RTN","FBAARD2",45,0)
RLP1 S DIR(0)="Y",DIR("A")="Delete Reject code for all items for this invoice",DIR("B")="YES" D ^DIR K DIR Q:$D(DIRUT)  G LOOPP:Y
"RTN","FBAARD2",46,0)
RLP S DIR(0)="N^1:"_QQ,DIR("A")="Delete reject code for which line item" D ^DIR K DIR Q:$D(DIRUT)  S HX=X
"RTN","FBAARD2",47,0)
 I '$D(QQ(HX)) W !!,*7,"You just deleted that one!!" G RLP
"RTN","FBAARD2",48,0)
ASKJJ S DIR(0)="Y",DIR("A")="Are you sure you want to delete reject for item number "_HX,DIR("B")="NO" D ^DIR K DIR G:$D(DIRUT)!'Y RLP
"RTN","FBAARD2",49,0)
 S A=$P(QQ(HX),"^",1),B2=$P(QQ(HX),"^",2)
"RTN","FBAARD2",50,0)
 D STUFFP
"RTN","FBAARD2",51,0)
RDMORP S DIR(0)="Y",DIR("A")=$S($G(FBERR):"",1:"Reject Flag deleted.  ")_"Want to delete another",DIR("B")="YES" D ^DIR K DIR G RDMORP:$D(DIRUT),RLP:Y
"RTN","FBAARD2",52,0)
 Q
"RTN","FBAARD2",53,0)
WRITP ;
"RTN","FBAARD2",54,0)
 Q:$P($G(^FBAA(162.1,A,"RX",B2,"FBREJ")),"^",4)=1  ; skip interface rej.
"RTN","FBAARD2",55,0)
 S QQ=QQ+1,QQ(QQ)=A_"^"_B2 S Z(0)=^FBAA(162.1,A,"RX",B2,0)
"RTN","FBAARD2",56,0)
 D MORE^FBAACCB1
"RTN","FBAARD2",57,0)
 Q
"RTN","FBAARD2",58,0)
STUFFP ;
"RTN","FBAARD2",59,0)
 N FBX
"RTN","FBAARD2",60,0)
 S FBAAMT=$P(^FBAA(162.1,A,"RX",B2,0),"^",16)
"RTN","FBAARD2",61,0)
 D POST^FBAARD3 I $D(FBERR) G PROB^FBAARD1
"RTN","FBAARD2",62,0)
 S FBX=$$DELREJ^FBAARR3("162.11",B2_","_A_",")
"RTN","FBAARD2",63,0)
 I 'FBX D
"RTN","FBAARD2",64,0)
 . W !,"1358 was updated, but error occured while deleting the reject"
"RTN","FBAARD2",65,0)
 . W !,"flag for line with IENS = "_B2_","_A_","
"RTN","FBAARD2",66,0)
 . W !,"  ",$P(FBX,"^",2)
"RTN","FBAARD2",67,0)
 . S FBERR=1
"RTN","FBAARD2",68,0)
 K QQ(HX)
"RTN","FBAARD2",69,0)
 Q
"RTN","FBAARD2",70,0)
LOOPP F HX=0:0 S HX=$O(QQ(HX)) Q:HX'>0  S A=$P(QQ(HX),"^",1),B2=$P(QQ(HX),"^",2) D STUFFP
"RTN","FBAARD2",71,0)
 W !,"...DONE!"
"RTN","FBAARD2",72,0)
 G DELP
"RTN","FBAARD3")
0^17^B1840852^B3642205
"RTN","FBAARD3",1,0)
FBAARD3 ;AISC/GRR-VOUCHER AUDIT DELETE REJECTS ENTERED IN ERROR ;3/27/2012
"RTN","FBAARD3",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FBAARD3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAARD3",4,0)
 Q
"RTN","FBAARD3",5,0)
 ;
"RTN","FBAARD3",6,0)
POST ;entry point to put dollars back into an authorization on the 1358
"RTN","FBAARD3",7,0)
 ;if rejected in error
"RTN","FBAARD3",8,0)
 ;first will locate interface ID from PRC(424,"E",IEN of 161.7)
"RTN","FBAARD3",9,0)
 ;if interface not exist use old call to POST^FBAASCB
"RTN","FBAARD3",10,0)
 ;I '$$VER^FBAAUTL1() D POST^FBAASCB Q
"RTN","FBAARD3",11,0)
 I '$O(^PRC(424,"E",+$G(FBN),0)) D POST^FBAASCB Q
"RTN","FBAARD3",12,0)
 D ADD^FBAAUTL1 Q
"RTN","FBAARD3",13,0)
 ;
"RTN","FBAARD3",14,0)
INPOST ;call to put money back into 1358 for inpatient invoices
"RTN","FBAARD3",15,0)
 ;call will handle both v4 and v3.6 of ifcap
"RTN","FBAARD3",16,0)
 ;I $G(FBCNH),'$$VER^FBAAUTL1() D POST^FBAASCB Q
"RTN","FBAARD3",17,0)
 I FBII78["FB583(" D POST Q
"RTN","FBAARD3",18,0)
 ;find 7078 entry and build variables needed for call
"RTN","FBAARD3",19,0)
 I '$D(^FB7078(+FBII78,0)) W !,"No 7078 on file for invoice ",J,".  Could not determine 1358.",! S FBERR=1 Q
"RTN","FBAARD3",20,0)
 S FBI78=$P(^FB7078(+FBII78,0),"^"),DFN=+$P(^(0),"^",3),FBI78=$P(FZ,"^",8)_"-"_$P(FBI78,".")_"-"_$P(FBI78,".",2) D
"RTN","FBAARD3",21,0)
 .I $D(FBCNH),'$D(^PRC(424,"E",DFN_";"_+FBII78_";"_FBAAON_";"_FBMM)) D POST Q
"RTN","FBAARD3",22,0)
 .D INPOST^FBAASCB0:$$INTER^FBAASCB0()
"RTN","FBAARD3",23,0)
 Q
"RTN","FBAARJP")
0^19^B44159952^B20577819
"RTN","FBAARJP",1,0)
FBAARJP ;AISC/GRR - PRINT REJECTS PENDING ACTION ;4/17/2012
"RTN","FBAARJP",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FBAARJP",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAARJP",4,0)
 ; ask batch status to report
"RTN","FBAARJP",5,0)
 S DIR(0)="S^1:CENTRAL FEE ACCEPTED;2:VOUCHERED;3:BOTH"
"RTN","FBAARJP",6,0)
 S DIR("A")="Select batch status to report"
"RTN","FBAARJP",7,0)
 S DIR("B")="BOTH"
"RTN","FBAARJP",8,0)
 D ^DIR K DIR Q:$D(DIRUT)
"RTN","FBAARJP",9,0)
 S FBSTATL=$S(Y=1:"^F^",Y=2:"^V^",1:"^F^V^")
"RTN","FBAARJP",10,0)
 S VAR="FBSTATL",VAL="",PGM="START^FBAARJP"
"RTN","FBAARJP",11,0)
 D ZIS^FBAAUTL G:FBPOP END
"RTN","FBAARJP",12,0)
START U IO W:$E(IOST,1,2)="C-" @IOF K QQ,B S (Q,UL)="",$P(Q,"=",80)="=",$P(UL,"-",80)="-",(FBAAOUT,CNT,FBINTOT)=0
"RTN","FBAARJP",13,0)
 D MED:$D(^FBAAC("AH")) G END:FBAAOUT D TRAV:$D(^FBAAC("AG")) G END:FBAAOUT D PHARM:$D(^FBAA(162.1,"AF")) G END:FBAAOUT D CHNH:$D(^FBAAI("AH")) G END:FBAAOUT
"RTN","FBAARJP",14,0)
 I 'CNT W !!,*7,"No Rejects Pending!"
"RTN","FBAARJP",15,0)
END K FBTYPE,FBVDUZ,FBVD,FBPV,CNT,D,I,PGM,Q,UL,VAL,VAR,Y,Z,A1,A2,A3,B,FBAACPT,FBIN,FBNUM,FBRR,FBINTOT,CPTDESC,FBAAOUT,FBVP,J,K,T,X,L,M,N,S,V,VID,XY,ZS,POP,A,B2,FBINOLD
"RTN","FBAARJP",16,0)
 K FBAC,FBAP,FBDX,FBK,FBL,FBPDT,FBPROC,FBSC,FBTD,FBFD,FBSTATL
"RTN","FBAARJP",17,0)
 D CLOSE^FBAAUTL Q
"RTN","FBAARJP",18,0)
MED F B=0:0 S B=$O(^FBAAC("AH",B)) Q:B'>0!(FBAAOUT)  I $D(^FBAA(161.7,B,0)),FBSTATL[(U_^("ST")_U) S B(0)=^(0),FBTYPE=$P(B(0),"^",3),FBNUM=$P(B(0),"^",1),FBVD=$P(B(0),"^",12),FBVDUZ=$P(B(0),"^",16) D MORE
"RTN","FBAARJP",19,0)
 Q
"RTN","FBAARJP",20,0)
MORE D HED,HED^FBAACCB,HEDB
"RTN","FBAARJP",21,0)
 F J=0:0 S J=$O(^FBAAC("AH",B,J)) Q:J'>0!(FBAAOUT)  F K=0:0 S K=$O(^FBAAC("AH",B,J,K)) Q:K'>0!(FBAAOUT)  F L=0:0 S L=$O(^FBAAC("AH",B,J,K,L)) Q:L'>0!(FBAAOUT)  F M=0:0 S M=$O(^FBAAC("AH",B,J,K,L,M)) Q:M'>0!(FBAAOUT)  D SET^FBAACCB,WRITM
"RTN","FBAARJP",22,0)
 Q:FBAAOUT  W !,UL,! D ASKH^FBAACCB0:$E(IOST,1,2)["C-"&('$G(FBNNP)) Q:FBAAOUT  W:'$G(FBNNP) @IOF
"RTN","FBAARJP",23,0)
 Q
"RTN","FBAARJP",24,0)
HEDB W !,"Batch Number: ",FBNUM,?21,"Voucher Date: ",$$DATX^FBAAUTL(FBVD),?44,"Voucherer: ",$S(FBVDUZ="":"",$D(^VA(200,FBVDUZ,0)):$P(^(0),"^",1),1:"Unknown"),!
"RTN","FBAARJP",25,0)
 Q
"RTN","FBAARJP",26,0)
WRITM Q:FBAAOUT  S CNT=CNT+1
"RTN","FBAARJP",27,0)
 N FBL,FBTXT
"RTN","FBAARJP",28,0)
 D REJTXT(162.03,M_","_L_","_K_","_J_",",.FBTXT)
"RTN","FBAARJP",29,0)
 S FBL=0 F  S FBL=$O(FBTXT(FBL)) Q:'FBL  D
"RTN","FBAARJP",30,0)
 . I $Y+3>IOSL D ASKH^FBAACCB0:$E(IOST,1,2)["C-" Q:FBAAOUT  W @IOF D HED^FBAACCB
"RTN","FBAARJP",31,0)
 . W !,FBTXT(FBL)
"RTN","FBAARJP",32,0)
 Q
"RTN","FBAARJP",33,0)
TRAV F B=0:0 S B=$O(^FBAAC("AG",B)) Q:B'>0!(FBAAOUT)  I $D(^FBAA(161.7,B,0)),FBSTATL[(U_^("ST")_U) S B(0)=^(0),FBTYPE=$P(B(0),"^",3),FBNUM=$P(B(0),"^",1),FBVD=$P(B(0),"^",12),FBVDUZ=$P(B(0),"^",16) D TMORE
"RTN","FBAARJP",34,0)
 Q
"RTN","FBAARJP",35,0)
TMORE D HED,HEDP^FBAACCB0,HEDB
"RTN","FBAARJP",36,0)
 F J=0:0 S J=$O(^FBAAC("AG",B,J)) Q:J'>0  F K=0:0 S K=$O(^FBAAC("AG",B,J,K)) Q:K'>0  S Y(0)=^FBAAC(J,3,K,0) D SETT^FBAACCB0,WRITT
"RTN","FBAARJP",37,0)
 Q:FBAAOUT  W !,UL,! D ASKH^FBAACCB0:$E(IOST,1,2)["C-"&('$G(FBNNP)) Q:FBAAOUT  W:'$G(FBNNP) @IOF
"RTN","FBAARJP",38,0)
 Q
"RTN","FBAARJP",39,0)
WRITT S CNT=CNT+1
"RTN","FBAARJP",40,0)
 N FBL,FBTXT
"RTN","FBAARJP",41,0)
 D REJTXT(162.04,K_","_J_",",.FBTXT)
"RTN","FBAARJP",42,0)
 S FBL=0 F  S FBL=$O(FBTXT(FBL)) Q:'FBL  D
"RTN","FBAARJP",43,0)
 . I $Y+3>IOSL D ASKH^FBAACCB0:$E(IOST,1,2)["C-" Q:FBAAOUT  W @IOF D HEDP^FBAACCB0
"RTN","FBAARJP",44,0)
 . W !,FBTXT(FBL)
"RTN","FBAARJP",45,0)
 Q
"RTN","FBAARJP",46,0)
PHARM F B=0:0 S B=$O(^FBAA(162.1,"AF",B)) Q:B'>0!(FBAAOUT)  I $D(^FBAA(161.7,B,0)),FBSTATL[(U_^("ST")_U) S B(0)=^(0),FBTYPE=$P(B(0),"^",3),FBNUM=$P(B(0),"^",1),FBVD=$P(B(0),"^",12),FBVDUZ=$P(B(0),"^",16) D PMORE
"RTN","FBAARJP",47,0)
 Q
"RTN","FBAARJP",48,0)
PMORE D HED,HED^FBAACCB,HEDB
"RTN","FBAARJP",49,0)
 F A=0:0 S A=$O(^FBAA(162.1,"AF",B,A)) Q:A'>0!(FBAAOUT)  S FBIN=A D SETV^FBAACCB0 F B2=0:0 S B2=$O(^FBAA(162.1,"AF",B,A,B2)) Q:B2'>0!(FBAAOUT)  I $D(^FBAA(162.1,A,"RX",B2,0)) S Z(0)=^(0) D MORE^FBAACCB1,WRITP
"RTN","FBAARJP",50,0)
 Q:FBAAOUT  W !,UL,! D ASKH^FBAACCB0:$E(IOST,1,2)="C-"&('$G(FBNNP)) Q:FBAAOUT  W:'$G(FBNNP) @IOF
"RTN","FBAARJP",51,0)
 Q
"RTN","FBAARJP",52,0)
WRITP S CNT=CNT+1
"RTN","FBAARJP",53,0)
 N FBL,FBTXT
"RTN","FBAARJP",54,0)
 D REJTXT(162.11,B2_","_A_",",.FBTXT)
"RTN","FBAARJP",55,0)
 S FBL=0 F  S FBL=$O(FBTXT(FBL)) Q:'FBL  D
"RTN","FBAARJP",56,0)
 . I $Y+3>IOSL D ASKH^FBAACCB0:$E(IOST,1,2)["C-" Q:FBAAOUT  W @IOF D HED^FBAACCB
"RTN","FBAARJP",57,0)
 . W !,FBTXT(FBL)
"RTN","FBAARJP",58,0)
 Q
"RTN","FBAARJP",59,0)
CHNH F B=0:0 S B=$O(^FBAAI("AH",B)) Q:B'>0!(FBAAOUT)  I $D(^FBAA(161.7,B,0)),FBSTATL[(U_^("ST")_U) S B(0)=^(0),FBTYPE=$P(B(0),"^",3),FBNUM=$P(B(0),"^",1),FBVD=$P(B(0),"^",12),FBVDUZ=$P(B(0),"^",16) D CMORE
"RTN","FBAARJP",60,0)
 Q
"RTN","FBAARJP",61,0)
CMORE D HED,HEDC^FBAACCB1,HEDB
"RTN","FBAARJP",62,0)
 F I=0:0 S I=$O(^FBAAI("AH",B,I)) Q:I'>0!(FBAAOUT)  I $D(^FBAAI(I,0)) S Z(0)=^(0) D CMORE^FBAACCB1,WRITC
"RTN","FBAARJP",63,0)
 Q:FBAAOUT  W !,UL,! D ASKH^FBAACCB0:$E(IOST,1,2)="C-"&('$G(FBNNP)) Q:FBAAOUT  W:'$G(FBNNP) @IOF
"RTN","FBAARJP",64,0)
 Q
"RTN","FBAARJP",65,0)
WRITC Q:FBAAOUT  S CNT=CNT+1
"RTN","FBAARJP",66,0)
 N FBL,FBTXT
"RTN","FBAARJP",67,0)
 D REJTXT(162.5,I_",",.FBTXT)
"RTN","FBAARJP",68,0)
 S FBL=0 F  S FBL=$O(FBTXT(FBL)) Q:'FBL  D
"RTN","FBAARJP",69,0)
 . I $Y+3>IOSL D ASKH^FBAACCB0:$E(IOST,1,2)["C-" Q:FBAAOUT  W @IOF D HEDC^FBAACCB1
"RTN","FBAARJP",70,0)
 . W !,FBTXT(FBL)
"RTN","FBAARJP",71,0)
 Q
"RTN","FBAARJP",72,0)
 ;
"RTN","FBAARJP",73,0)
HED ;write header for report if sent to printer
"RTN","FBAARJP",74,0)
 Q:$E(IOST,1,2)="C-"
"RTN","FBAARJP",75,0)
 W !?31,"REJECTS PENDING ACTION",!?30,$E(Q,1,24),!
"RTN","FBAARJP",76,0)
 Q
"RTN","FBAARJP",77,0)
 ;
"RTN","FBAARJP",78,0)
REJTXT(FBFILE,FBIENS,FBTXT) ; get reject text for line item
"RTN","FBAARJP",79,0)
 ; input
"RTN","FBAARJP",80,0)
 ;   FBFILE - (required) Sub-File (162.03, 162.04, 162.1, or 162.5)
"RTN","FBAARJP",81,0)
 ;   FBIENS - (required) IENS of line item, FileMan DBS format
"RTN","FBAARJP",82,0)
 ;   FBTXT  - array passed by reference, will be initialzed
"RTN","FBAARJP",83,0)
 ; output
"RTN","FBAARJP",84,0)
 ;   FBTXT  - array of text with format
"RTN","FBAARJP",85,0)
 ;            FBTXT(0)=count of lines
"RTN","FBAARJP",86,0)
 ;            FBTXT(#)=line of text
"RTN","FBAARJP",87,0)
 ;             where # is sequential number starting at 1
"RTN","FBAARJP",88,0)
 ;
"RTN","FBAARJP",89,0)
 N FBC,FBD,FBFIELDS,FBLST,FBRIENS
"RTN","FBAARJP",90,0)
 K FBTXT
"RTN","FBAARJP",91,0)
 S (FBC,FBTXT(0))=0
"RTN","FBAARJP",92,0)
 ; check inputs
"RTN","FBAARJP",93,0)
 Q:"^162.03^162.04^162.11^162.5^"'[("^"_$G(FBFILE)_"^")
"RTN","FBAARJP",94,0)
 Q:$G(FBIENS)=""
"RTN","FBAARJP",95,0)
 ;
"RTN","FBAARJP",96,0)
 ; determine field numbers based on file
"RTN","FBAARJP",97,0)
 ; FBFIELDS will contain the numbers of the following fields/sub-file
"RTN","FBAARJP",98,0)
 ;   piece 1 = batch number
"RTN","FBAARJP",99,0)
 ;   piece 2 = amount paid
"RTN","FBAARJP",100,0)
 ;   piece 3 = reject status
"RTN","FBAARJP",101,0)
 ;   piece 4 = reject reason
"RTN","FBAARJP",102,0)
 ;   piece 5 = old batch number
"RTN","FBAARJP",103,0)
 ;   piece 6 = interface reject
"RTN","FBAARJP",104,0)
 ;   piece 7 = reject code
"RTN","FBAARJP",105,0)
 ;   piece 8 = reject code sub-file number
"RTN","FBAARJP",106,0)
 I FBFILE="162.03" S FBFIELDS="7^2^19^20^21^21.3^21.6^162.031"
"RTN","FBAARJP",107,0)
 I FBFILE="162.04" S FBFIELDS="1^2^4^5^6^6.3^6.6^162.041"
"RTN","FBAARJP",108,0)
 I FBFILE="162.11" S FBFIELDS="13^6.5^17^18^19^19.3^19.6^162.111"
"RTN","FBAARJP",109,0)
 I FBFILE="162.5" S FBFIELDS="20^8^13^14^15^15.3^15.6^162.515"
"RTN","FBAARJP",110,0)
 ;
"RTN","FBAARJP",111,0)
 S FBD(5)=$$GET1^DIQ(FBFILE,FBIENS,$P(FBFIELDS,"^",5)) ; old batch
"RTN","FBAARJP",112,0)
 Q:FBD(5)=""  ; line is not rejected
"RTN","FBAARJP",113,0)
 S FBD(6)=$$GET1^DIQ(FBFILE,FBIENS,$P(FBFIELDS,"^",6),"I") ; inter. rej.
"RTN","FBAARJP",114,0)
 ;
"RTN","FBAARJP",115,0)
 ; 1st line
"RTN","FBAARJP",116,0)
 S FBC=FBC+1
"RTN","FBAARJP",117,0)
 S FBTXT(FBC)=$$LJ^XLFSTR($S(FBD(6):"Central Fee",1:"Local")_" Reject",20)_"Old Batch #: "_FBD(5)
"RTN","FBAARJP",118,0)
 ;
"RTN","FBAARJP",119,0)
 ; line for reject reason (if any)
"RTN","FBAARJP",120,0)
 S FBD(4)=$$GET1^DIQ(FBFILE,FBIENS,$P(FBFIELDS,"^",4)) ; reject reason
"RTN","FBAARJP",121,0)
 I FBD(4)]"" S FBC=FBC+1,FBTXT(FBC)="Reject Reason: "_FBD(4)
"RTN","FBAARJP",122,0)
 ;
"RTN","FBAARJP",123,0)
 ; lines for reject codes (if any)
"RTN","FBAARJP",124,0)
 ; get list of entries in REJECT CODE multiple
"RTN","FBAARJP",125,0)
 D GETS^DIQ(FBFILE,FBIENS,$P(FBFIELDS,"^",7)_"*","","FBLST")
"RTN","FBAARJP",126,0)
 ;
"RTN","FBAARJP",127,0)
 ; loop thru REJECT CODE entries
"RTN","FBAARJP",128,0)
 S FBRIENS=""
"RTN","FBAARJP",129,0)
 F  S FBRIENS=$O(FBLST($P(FBFIELDS,"^",8),FBRIENS)) Q:FBRIENS=""  D
"RTN","FBAARJP",130,0)
 . N FBARR,FBRC,FBLI
"RTN","FBAARJP",131,0)
 . S FBRC=FBLST($P(FBFIELDS,"^",8),FBRIENS,.01) ; REJECT CODE
"RTN","FBAARJP",132,0)
 . Q:FBRC=""
"RTN","FBAARJP",133,0)
 . ; get description of code from file 161.99
"RTN","FBAARJP",134,0)
 . D RCDES(FBRC,,.FBARR)
"RTN","FBAARJP",135,0)
 . ;
"RTN","FBAARJP",136,0)
 . ; add code and first line of description to output array
"RTN","FBAARJP",137,0)
 . S FBC=FBC+1
"RTN","FBAARJP",138,0)
 . S FBTXT(FBC)=$$LJ^XLFSTR("Rej Code: "_FBRC,16)
"RTN","FBAARJP",139,0)
 . I $D(FBARR(1,0)) S FBTXT(FBC)=FBTXT(FBC)_FBARR(1,0)
"RTN","FBAARJP",140,0)
 . ;
"RTN","FBAARJP",141,0)
 . ; loop thru remaining description lines
"RTN","FBAARJP",142,0)
 . S FBLI=1 F  S FBLI=$O(FBARR(FBLI)) Q:'FBLI  D
"RTN","FBAARJP",143,0)
 . . Q:'$D(FBARR(FBLI,0))
"RTN","FBAARJP",144,0)
 . . ; add description line to output array
"RTN","FBAARJP",145,0)
 . . S FBC=FBC+1
"RTN","FBAARJP",146,0)
 . . S FBTXT(FBC)="                "_FBARR(FBLI,0)
"RTN","FBAARJP",147,0)
 ;
"RTN","FBAARJP",148,0)
 S FBTXT(0)=FBC
"RTN","FBAARJP",149,0)
 Q
"RTN","FBAARJP",150,0)
 ;
"RTN","FBAARJP",151,0)
RCDES(FBRC,FBRM,FBARR) ; Reject Code Description
"RTN","FBAARJP",152,0)
 ; input
"RTN","FBAARJP",153,0)
 ;   FBRC  - reject code external value
"RTN","FBAARJP",154,0)
 ;   FBRM  - (optional) right margin, default 60
"RTN","FBAARJP",155,0)
 ;   FBARR - array, passed by reference, not FBWP, will be initialized
"RTN","FBAARJP",156,0)
 ; output
"RTN","FBAARJP",157,0)
 ;   FBARR - array contained formatted description
"RTN","FBAARJP",158,0)
 ;           where
"RTN","FBAARJP",159,0)
 ;             FBARR(0)=line count
"RTN","FBAARJP",160,0)
 ;             FBARR(1,0)=1st line of description
"RTN","FBAARJP",161,0)
 ;             FBARR(2,0)=2nd line of description
"RTN","FBAARJP",162,0)
 ;
"RTN","FBAARJP",163,0)
 ; note: some variables newed because DIWP call is stepping on I
"RTN","FBAARJP",164,0)
 N A,B,DIWL,DIWR,DIWF,FBI,FBRCI,FBWP,FBX,I,J,K,L,M
"RTN","FBAARJP",165,0)
 ;
"RTN","FBAARJP",166,0)
 S FBRM=$G(FBRM,60)
"RTN","FBAARJP",167,0)
 K FBARR
"RTN","FBAARJP",168,0)
 Q:$G(FBRC)=""
"RTN","FBAARJP",169,0)
 ;
"RTN","FBAARJP",170,0)
 ; find IEN of code
"RTN","FBAARJP",171,0)
 S FBRCI=$$FIND1^DIC(161.99,,"X",FBRC)
"RTN","FBAARJP",172,0)
 ;
"RTN","FBAARJP",173,0)
 ; if entry found then load description from file
"RTN","FBAARJP",174,0)
 S:FBRCI FBX=$$GET1^DIQ(161.99,FBRCI_",",1,"","FBWP")
"RTN","FBAARJP",175,0)
 ; if entry not found use default description
"RTN","FBAARJP",176,0)
 S:'FBRCI FBWP(1)="Reject reason code is not currently defined in list."
"RTN","FBAARJP",177,0)
 ;
"RTN","FBAARJP",178,0)
 ; reformat description
"RTN","FBAARJP",179,0)
 K ^UTILITY($J,"W")
"RTN","FBAARJP",180,0)
 S DIWL=1,DIWR=FBRM,DIWF=""
"RTN","FBAARJP",181,0)
 S FBI=0 F  S FBI=$O(FBWP(FBI)) Q:'FBI  S X=FBWP(FBI) D ^DIWP
"RTN","FBAARJP",182,0)
 ;
"RTN","FBAARJP",183,0)
 ; move description into output array
"RTN","FBAARJP",184,0)
 M FBARR=^UTILITY($J,"W",DIWL)
"RTN","FBAARJP",185,0)
 ;
"RTN","FBAARJP",186,0)
 K ^UTILITY($J,"W")
"RTN","FBAARJP",187,0)
 Q
"RTN","FBAARR")
0^20^B31401239^B32870767
"RTN","FBAARR",1,0)
FBAARR ;AISC/GRR - REINITIATE REJECTED LINE ITEMS ; 4/6/2012
"RTN","FBAARR",2,0)
 ;;3.5;FEE BASIS;**61,114,132**;JAN 30, 1995;Build 17
"RTN","FBAARR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAARR",4,0)
 N FBILM
"RTN","FBAARR",5,0)
 S IOP=$S($D(ION):ION,1:"HOME") D ^%ZIS K IOP
"RTN","FBAARR",6,0)
 S Q="",$P(Q,"=",80)="=",UL="",$P(UL,"-",80)="-",(FBAAOUT,CNT,FBINTOT)=0
"RTN","FBAARR",7,0)
 D DT^DICRW
"RTN","FBAARR",8,0)
BT K QQ W !!
"RTN","FBAARR",9,0)
 S DIC="^FBAA(161.7,",DIC(0)="AEQMN",DIC("A")="Select Batch with Rejects: ",DIC("S")="I $G(^(""ST""))=""V""&($P(^(0),U,17)]"""")" D ^DIC K DIC("S"),DIC("A") G Q:X="^"!(X=""),BT:Y<0
"RTN","FBAARR",10,0)
 L +^FBAA(161.7,+Y):$G(DILOCKTM,3)
"RTN","FBAARR",11,0)
 I '$T W !,"Another user is editing this batch.  Try again later." G BT
"RTN","FBAARR",12,0)
 S FBN=+Y,B=FBN,FZ=^FBAA(161.7,FBN,0),FBTYPE=$P(FZ,"^",3)
"RTN","FBAARR",13,0)
 S FBOB=$P(FZ,"^",2),FBEXMPT=$S($P(FZ,"^",18)]"":$P(FZ,"^",18),1:"N")
"RTN","FBAARR",14,0)
 I '$S(FBTYPE="B3":$D(^FBAAC("AH",B)),FBTYPE="B2":$D(^FBAAC("AG",B)),FBTYPE="B5":$D(^FBAA(162.1,"AF",B)),FBTYPE="B9":$D(^FBAAI("AH",B)),1:0) W !!,*7,"No items rejected in this batch!" D  D UNLK G BT
"RTN","FBAARR",15,0)
 .S $P(^FBAA(161.7,B,0),U,17)=""
"RTN","FBAARR",16,0)
 ;
"RTN","FBAARR",17,0)
 I "^P^E^"[(U_$$GET1^DIQ(161.7,FBN_",",22,"I")_U) D  D UNLK G BT
"RTN","FBAARR",18,0)
 . W !,"This batch cannot be re-initiated yet.  The Voucher Batch"
"RTN","FBAARR",19,0)
 . W !,"Message must first be successfully acknowledged by Central Fee."
"RTN","FBAARR",20,0)
 ;
"RTN","FBAARR",21,0)
 I FBTYPE="B9",$P(FZ,"^",15)="Y" D NEWBT^FBAARR0 G ASKLL
"RTN","FBAARR",22,0)
BTN W !! S DIC("A")="Select New Batch number: ",DIC("S")="I $P(^(0),U,3)=FBTYPE&($P(^(0),U,5)=DUZ)&($G(^(""ST""))=""O"")" D ^DIC K DIC("A"),DIC("S") G Q:X=""!(X="^"),HELP^FBAARR0:X["?",BTN:Y<0 S FBNB=+Y
"RTN","FBAARR",23,0)
 D BATCNT^FBAARR1 I '$D(FBNB) D UNLK G BT
"RTN","FBAARR",24,0)
 S FBNUM=$P(^FBAA(161.7,B,0),"^",1),FBVD=$P(^(0),"^",12),FBVDUZ=$P(^(0),"^",16),FBNOB=$P(^FBAA(161.7,FBNB,0),"^",2) G:FBNOB'=FBOB CHKOB^FBAARR0
"RTN","FBAARR",25,0)
ASKLL S B=FBN,FBNNP=1 S DIR(0)="Y",DIR("A")="Want line items listed",DIR("B")="NO" D ^DIR K DIR W:Y @IOF D:Y MORE^FBAARJP:FBTYPE="B3",PMORE^FBAARJP:FBTYPE="B5",TMORE^FBAARJP:FBTYPE="B2",CMORE^FBAARJP:FBTYPE="B9" K FBNNP
"RTN","FBAARR",26,0)
RD0 S DIR(0)="Y",DIR("A")="Want to re-initiate all rejected items in the Batch",DIR("B")="NO",DIR("?")="'Yes' will re-initiate all rejected payment items for this batch, 'No' will prompt for re-initiation of specific line items"
"RTN","FBAARR",27,0)
 D ^DIR K DIR G:Y ^FBAARR1
"RTN","FBAARR",28,0)
RD1 S DIR(0)="Y",DIR("A")="Want to re-initiate any line items",DIR("B")="NO" D ^DIR K DIR Q:$D(DIRUT)!'Y  D DELT^FBAARR2:FBTYPE="B2",DELM:FBTYPE="B3",DELP^FBAARR2:FBTYPE="B5",DELC^FBAARR0:FBTYPE="B9"
"RTN","FBAARR",29,0)
RDD ;
"RTN","FBAARR",30,0)
 S DIC="^FBAA(161.7,",DA=FBN,DR="0:1;ST" W !! D EN^DIQ
"RTN","FBAARR",31,0)
 D UNLK
"RTN","FBAARR",32,0)
 G BT
"RTN","FBAARR",33,0)
Q ; clean up
"RTN","FBAARR",34,0)
 D UNLK
"RTN","FBAARR",35,0)
 D KILL^FBAARR1
"RTN","FBAARR",36,0)
 Q
"RTN","FBAARR",37,0)
UNLK ; unlock batch
"RTN","FBAARR",38,0)
 I $G(FBN) L -^FBAA(161.7,FBN)
"RTN","FBAARR",39,0)
 Q
"RTN","FBAARR",40,0)
DELM ; specify line items to re-initiate for batch type B3
"RTN","FBAARR",41,0)
 ; select patient
"RTN","FBAARR",42,0)
 S J=$$ASKVET^FBAAUTL1("I $D(^FBAAC(""AH"",B,+Y))")
"RTN","FBAARR",43,0)
 Q:'J
"RTN","FBAARR",44,0)
 K QQ
"RTN","FBAARR",45,0)
 S QQ=0 W @IOF D HED^FBAACCB
"RTN","FBAARR",46,0)
 F K=0:0 S K=$O(^FBAAC("AH",B,J,K)) Q:K'>0  F L=0:0 S L=$O(^FBAAC("AH",B,J,K,L)) Q:L'>0  F M=0:0 S M=$O(^FBAAC("AH",B,J,K,L,M)) Q:M'>0  D WRITM
"RTN","FBAARR",47,0)
RL S ERR=0 S DIR(0)="N^1:"_QQ,DIR("A")="Re-initiate which line item" D ^DIR K DIR G:$D(DIRUT) END S HX=X
"RTN","FBAARR",48,0)
 I '$D(QQ(HX)) W !,*7,"You already did that one!!" G RL
"RTN","FBAARR",49,0)
ASKSU S DIR(0)="Y",DIR("A")="Are you sure you want to re-initiate line item number "_HX,DIR("B")="NO" D ^DIR K DIR G:$D(DIRUT)!'Y RL
"RTN","FBAARR",50,0)
 S J=$P(QQ(HX),"^",1),K=$P(QQ(HX),"^",2),L=$P(QQ(HX),"^",3),M=$P(QQ(HX),"^",4)
"RTN","FBAARR",51,0)
 K FBERR
"RTN","FBAARR",52,0)
 D REJM^FBAARR1
"RTN","FBAARR",53,0)
ASKRI S DIR(0)="Y",DIR("A")=$S($G(FBERR):"",1:"Item Re-initiated.  ")_"Want to re-initiate another",DIR("B")="YES" D ^DIR K DIR G ASKRI:$D(DIRUT),DELM:Y,END
"RTN","FBAARR",54,0)
WRITM S QQ=QQ+1,QQ(QQ)=J_"^"_K_"^"_L_"^"_M D SET^FBAACCB Q
"RTN","FBAARR",55,0)
END ;
"RTN","FBAARR",56,0)
 ; Assign new invoice number to moved lines if invoice was split
"RTN","FBAARR",57,0)
 I $$CKSPLIT(B,.FBILM) S DIR(0)="E" D ^DIR K DIR
"RTN","FBAARR",58,0)
 Q
"RTN","FBAARR",59,0)
CKSPLIT(B,FBILM) ; Check for/Update split invoice
"RTN","FBAARR",60,0)
 ; Input
"RTN","FBAARR",61,0)
 ;   B      - ien of original batch before item moved
"RTN","FBAARR",62,0)
 ;   FBILM( - array of invoice lines that were moved to a new batch
"RTN","FBAARR",63,0)
 ;     passed by reference
"RTN","FBAARR",64,0)
 ;     format FBILM(invoice number,iens)=""
"RTN","FBAARR",65,0)
 ;     where
"RTN","FBAARR",66,0)
 ;       invoice number = invoice number
"RTN","FBAARR",67,0)
 ;       iens           = iens of subfile 162.03 (a line item)
"RTN","FBAARR",68,0)
 ; Result (0 or 1)
"RTN","FBAARR",69,0)
 ;   =0 if no lines were assigned a new invoice number
"RTN","FBAARR",70,0)
 ;   =1 if some lines assigned a new invoice number
"RTN","FBAARR",71,0)
 ;   May change invoice number of line items in subfile 162.03
"RTN","FBAARR",72,0)
 ;   and inform user
"RTN","FBAARR",73,0)
 N FBAAIN,FBFDA,FBIENS,FBIN,FBINL,FBJ,FBK,FBL,FBM,FBRET,FBSPLT
"RTN","FBAARR",74,0)
 S FBRET=0
"RTN","FBAARR",75,0)
 ; loop thru invoice numbers in input array
"RTN","FBAARR",76,0)
 S FBIN="" F  S FBIN=$O(FBILM(FBIN)) Q:FBIN=""  D
"RTN","FBAARR",77,0)
 . S FBSPLT=0 ; initialize split flag to false
"RTN","FBAARR",78,0)
 . ; check if any unrejected invoice lines still in original batch
"RTN","FBAARR",79,0)
 . I $D(^FBAAC("AJ",B,FBIN)) S FBSPLT=1
"RTN","FBAARR",80,0)
 . ; check if any rejected invoice lines still in original batch
"RTN","FBAARR",81,0)
 . I 'FBSPLT S FBJ=0 F  S FBJ=$O(^FBAAC("AH",B,FBJ)) Q:'FBJ  D  Q:FBSPLT
"RTN","FBAARR",82,0)
 . . S FBK=0
"RTN","FBAARR",83,0)
 . . F  S FBK=$O(^FBAAC("AH",B,FBJ,FBK)) Q:'FBK  D  Q:FBSPLT
"RTN","FBAARR",84,0)
 . . . S FBL=0
"RTN","FBAARR",85,0)
 . . . F  S FBL=$O(^FBAAC("AH",B,FBJ,FBK,FBL)) Q:'FBL  D  Q:FBSPLT
"RTN","FBAARR",86,0)
 . . . . S FBM=0
"RTN","FBAARR",87,0)
 . . . . F  S FBM=$O(^FBAAC("AH",B,FBJ,FBK,FBL,FBM)) Q:'FBM  D  Q:FBSPLT
"RTN","FBAARR",88,0)
 . . . . . S FBINL=$P($G(^FBAAC(FBJ,1,FBK,1,FBL,1,FBM,0)),U,16)
"RTN","FBAARR",89,0)
 . . . . . I FBINL=FBIN S FBSPLT=1
"RTN","FBAARR",90,0)
 . Q:FBSPLT=0  ; invoice was not split
"RTN","FBAARR",91,0)
 . S FBRET=1
"RTN","FBAARR",92,0)
 . ; assign new invoice number to lines moved to the new batch
"RTN","FBAARR",93,0)
 . ; get a new invoice number (FBAAIN)
"RTN","FBAARR",94,0)
 . D GETNXI^FBAAUTL
"RTN","FBAARR",95,0)
 . ; loop thru the moved line items and assign the new invoice number
"RTN","FBAARR",96,0)
 . K FBFDA
"RTN","FBAARR",97,0)
 . S FBIENS="" F  S FBIENS=$O(FBILM(FBIN,FBIENS)) Q:FBIENS=""  D
"RTN","FBAARR",98,0)
 . . S FBFDA(162.03,FBIENS,14)=FBAAIN
"RTN","FBAARR",99,0)
 . W !!,"FYI: Invoice ",FBIN," was split since entire invoice did not move to the new batch."
"RTN","FBAARR",100,0)
 . W !,"Re-initiated lines are being assigned a new invoice number of ",FBAAIN,"."
"RTN","FBAARR",101,0)
 . ; update the file
"RTN","FBAARR",102,0)
 . I $D(FBFDA) D FILE^DIE("","FBFDA"),MSG^DIALOG()
"RTN","FBAARR",103,0)
 Q FBRET
"RTN","FBAARR",104,0)
 ;
"RTN","FBAARR",105,0)
 ;FBAARR
"RTN","FBAARR0")
0^21^B7588254^B10007343
"RTN","FBAARR0",1,0)
FBAARR0 ;AISC/GRR - REINITIATE BATCH CONTINUED ;3/28/2012
"RTN","FBAARR0",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FBAARR0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAARR0",4,0)
HELP W !!,"Enter the batch number to which the rejected items you re-initiate will",!,"be assigned to. It must be an open batch and assigned to you."
"RTN","FBAARR0",5,0)
 G BTN^FBAARR
"RTN","FBAARR0",6,0)
CHKOB W !!,*7,"The obligation number from the batch with rejects"
"RTN","FBAARR0",7,0)
 W !,"is not the same as the new batch selected !"
"RTN","FBAARR0",8,0)
 S DIR(0)="Y",DIR("A")="Do you want to continue",DIR("B")="NO"
"RTN","FBAARR0",9,0)
 D ^DIR K DIR I $D(DIRUT)!'Y D UNLK^FBAARR G BT^FBAARR
"RTN","FBAARR0",10,0)
 G ASKLL^FBAARR
"RTN","FBAARR0",11,0)
DELC S (QQ,FBAAOUT)=0 W @IOF D HEDC^FBAACCB1
"RTN","FBAARR0",12,0)
 F I=0:0 S I=$O(^FBAAI("AH",B,I)) Q:I'>0!(FBAAOUT)  I $D(^FBAAI(I,0)) S Z(0)=^(0) D WRITC
"RTN","FBAARR0",13,0)
RL S ERR=0 S DIR(0)="N^1:"_QQ,DIR("A")="Re-Initiate which line item" D ^DIR K DIR G:$D(DIRUT) END^FBAARR S HX=X
"RTN","FBAARR0",14,0)
 I '$D(QQ(HX)) W !,*7,"You already did that one !!" G RL
"RTN","FBAARR0",15,0)
ASKSU S DIR(0)="Y",DIR("A")="Are you sure you want to re-initiate line item number:  "_HX,DIR("B")="NO" D ^DIR K DIR G:$D(DIRUT)!'Y RL
"RTN","FBAARR0",16,0)
 S J=QQ(HX)
"RTN","FBAARR0",17,0)
 K FBERR
"RTN","FBAARR0",18,0)
 D REJC^FBAARR1
"RTN","FBAARR0",19,0)
ASKRI S DIR(0)="Y",DIR("A")=$S($G(FBERR):"",1:"Item Re-initiated.  ")_"Want to re-initiate another",DIR("B")="YES" D ^DIR K DIR G ASKRI:$D(DIRUT),DELC:Y
"RTN","FBAARR0",20,0)
 Q
"RTN","FBAARR0",21,0)
WRITC S QQ=QQ+1,QQ(QQ)=I D CMORE^FBAACCB1 Q
"RTN","FBAARR0",22,0)
 ;
"RTN","FBAARR0",23,0)
NEWBT S FBSTN=$P(FZ,"^",8),FBDCB=$P(FZ,"^",13)
"RTN","FBAARR0",24,0)
 W ! D GETNXB^FBAAUTL W !!,*7,"New Batch for Rejects is: ",FBBN
"RTN","FBAARR0",25,0)
 S DLAYGO=161.7,X=FBBN,DIC(0)="LQ",DIC("DR")="1////^S X=FBOB;2////^S X=""B9"";3////^S X=DT;4////^S X=DUZ;4.5////^S X=FBDCB;11////^S X=$S(FBEXMPT[""Y"":""O"",1:""A"");16////^S X=FBSTN;17////^S X=""Y"";18////^S X=FBEXMPT"
"RTN","FBAARR0",26,0)
 K DD,DO D FILE^DICN K DIC,DLAYGO S FBNB=+Y
"RTN","FBAARR0",27,0)
 S FBNUM=$P(FZ,"^",1),FBVD=$P(FZ,"^",12),FBVDUZ=$P(FZ,"^",16),FBNOB=FBOB
"RTN","FBAARR0",28,0)
 Q
"RTN","FBAARR1")
0^22^B19022226^B21041788
"RTN","FBAARR1",1,0)
FBAARR1 ;AISC/GRR - FEE BASIS REINITIATE ENTIRE BATCH ;3/28/2012
"RTN","FBAARR1",2,0)
 ;;3.5;FEE BASIS;**61,132**;JAN 30, 1995;Build 17
"RTN","FBAARR1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAARR1",4,0)
RD S DIR(0)="Y",DIR("A")="Are you sure you want to re-initiate all line items in this batch",DIR("B")="NO"
"RTN","FBAARR1",5,0)
 D ^DIR K DIR G:$D(DIRUT)!'Y RD1^FBAARR
"RTN","FBAARR1",6,0)
 D WAIT^DICD
"RTN","FBAARR1",7,0)
 S FBRJV=0
"RTN","FBAARR1",8,0)
 D ALLM:FBTYPE="B3",ALLT:FBTYPE="B2",ALLP:FBTYPE="B5",ALLC:FBTYPE="B9"
"RTN","FBAARR1",9,0)
 K FBRJV
"RTN","FBAARR1",10,0)
 D UNLK^FBAARR
"RTN","FBAARR1",11,0)
 G BT^FBAARR
"RTN","FBAARR1",12,0)
 ;
"RTN","FBAARR1",13,0)
ALLM ; re-initiate all rejected line items in medical (B3) type batch
"RTN","FBAARR1",14,0)
 K FBILM
"RTN","FBAARR1",15,0)
 F J=0:0 S J=$O(^FBAAC("AH",B,J)) Q:J'>0  F K=0:0 S K=$O(^FBAAC("AH",B,J,K)) Q:K'>0  F L=0:0 S L=$O(^FBAAC("AH",B,J,K,L)) Q:L'>0  F M=0:0 S M=$O(^FBAAC("AH",B,J,K,L,M)) Q:M'>0  D REJM
"RTN","FBAARR1",16,0)
 ; Assign new invoice number to moved lines if medical invoice was split
"RTN","FBAARR1",17,0)
 I $$CKSPLIT^FBAARR(B,.FBILM) S DIR(0)="E" D ^DIR K DIR
"RTN","FBAARR1",18,0)
ADONE ;
"RTN","FBAARR1",19,0)
 I '$G(FBRJV) W !!,"All rejected items have been re-initiated!"
"RTN","FBAARR1",20,0)
 I $G(FBRJV) W !!,"All rejected items (except for voided payments) have been re-initiated!"
"RTN","FBAARR1",21,0)
 Q
"RTN","FBAARR1",22,0)
 ;
"RTN","FBAARR1",23,0)
REJM I $P(^FBAAC(J,1,K,1,L,1,M,0),"^",21)="VP" S FBIN=+$P(^(0),"^",16) D VOID S FBRJV=1 Q
"RTN","FBAARR1",24,0)
 S FBX=$$DELREJ^FBAARR3("162.03",M_","_L_","_K_","_J_",",FBNB)
"RTN","FBAARR1",25,0)
 I 'FBX D
"RTN","FBAARR1",26,0)
 . W !,"Error re-initiating line with IENs = "_M_","_L_","_K_","_J_","
"RTN","FBAARR1",27,0)
 . W !,"  ",$P(FBX,U,2)
"RTN","FBAARR1",28,0)
 . S FBERR=1
"RTN","FBAARR1",29,0)
 ; update list of invoice lines that were moved to the new batch
"RTN","FBAARR1",30,0)
 S FBILM(FBIN,M_","_L_","_K_","_J_",")=""
"RTN","FBAARR1",31,0)
 Q
"RTN","FBAARR1",32,0)
 ;
"RTN","FBAARR1",33,0)
ALLT F J=0:0 S J=$O(^FBAAC("AG",B,J)) Q:J'>0  F K=0:0 S K=$O(^FBAAC("AG",B,J,K)) Q:K'>0  D REJT
"RTN","FBAARR1",34,0)
 G ADONE
"RTN","FBAARR1",35,0)
REJT ;SETUP REJECT FIELDS FOR TRAVEL
"RTN","FBAARR1",36,0)
 S FBX=$$DELREJ^FBAARR3("162.04",K_","_J_",",FBNB)
"RTN","FBAARR1",37,0)
 I 'FBX D
"RTN","FBAARR1",38,0)
 . W !,"Error re-initiating line with IENs = "_K_","_J_","
"RTN","FBAARR1",39,0)
 . W !,"  ",$P(FBX,U,2)
"RTN","FBAARR1",40,0)
 . S FBERR=1
"RTN","FBAARR1",41,0)
 Q
"RTN","FBAARR1",42,0)
 ;
"RTN","FBAARR1",43,0)
ALLP F J=0:0 S J=$O(^FBAA(162.1,"AF",B,J)) Q:J'>0  F K=0:0 S K=$O(^FBAA(162.1,"AF",B,J,K)) Q:K'>0  D REJP
"RTN","FBAARR1",44,0)
 G ADONE
"RTN","FBAARR1",45,0)
REJP I $P($G(^FBAA(162.1,J,"RX",K,2)),"^",3)="V" S FBIN=J D VOID S FBRJV=1 Q
"RTN","FBAARR1",46,0)
 S FBX=$$DELREJ^FBAARR3("162.11",K_","_J_",",FBNB)
"RTN","FBAARR1",47,0)
 I 'FBX D
"RTN","FBAARR1",48,0)
 . W !,"Error re-initiating line with IENs = "_K_","_J_","
"RTN","FBAARR1",49,0)
 . W !,"  ",$P(FBX,U,2)
"RTN","FBAARR1",50,0)
 . S FBERR=1
"RTN","FBAARR1",51,0)
 Q
"RTN","FBAARR1",52,0)
 ;
"RTN","FBAARR1",53,0)
ALLC F J=0:0 S J=$O(^FBAAI("AH",B,J)) Q:J'>0  I $D(^FBAAI(J,0)) D REJC
"RTN","FBAARR1",54,0)
 G ADONE
"RTN","FBAARR1",55,0)
REJC I $P(^FBAAI(J,0),"^",14)="VP" S FBIN=J D VOID S FBRJV=1 Q
"RTN","FBAARR1",56,0)
 S FBX=$$DELREJ^FBAARR3(162.5,J_",",FBNB)
"RTN","FBAARR1",57,0)
 I 'FBX D
"RTN","FBAARR1",58,0)
 . W !,"Error re-initiating line with IENs = "_J_","
"RTN","FBAARR1",59,0)
 . W !,"  ",$P(FBX,U,2)
"RTN","FBAARR1",60,0)
 . S FBERR=1
"RTN","FBAARR1",61,0)
 Q
"RTN","FBAARR1",62,0)
 ;
"RTN","FBAARR1",63,0)
KILL K A,A1,A2,B,CPTDESC,D0,DA,FBAACPT,FBAAOUT,FBVP,J,K,L,M,X,Y,Z,DIC,ERR,FBIN,FBNB,FBNUM,FBPV,FBRR,FBTYPE,FBVD,FBVDUZ,FZ,I,POP,DR,IOP,V,VID,ZS,FBN,FBOB,FBNOB,CNT,Q,UL,VAL,FBINTOT,PRCS,PRCSI,FBFDC,FBMST,FBTTYPE,FBSTN,FBDCB,FBBN
"RTN","FBAARR1",64,0)
 K FBAAAP,FBAC,FBAP,FBDX,FBFD,FBK,FBL,FBPDT,FBPROC,FBSC,FBINOLD,FBTD,N,S,FBCNT,FBNBCNT,I,DIRUT,FBEXMPT,FBX
"RTN","FBAARR1",65,0)
 K FBAAMPI,HX,B2
"RTN","FBAARR1",66,0)
 Q
"RTN","FBAARR1",67,0)
 ;
"RTN","FBAARR1",68,0)
BATCNT ;GET NUMBER OF REJECTS IN OLD BATCH
"RTN","FBAARR1",69,0)
 S:'$D(FBAAMPI) FBAAMPI=$S($D(^FBAA(161.4,1,"FBNUM")):$P(^("FBNUM"),"^",3),1:100),FBAAMPI=$S(FBAAMPI]"":FBAAMPI,1:100)
"RTN","FBAARR1",70,0)
 Q:'$D(FBN)  S FBCNT=0
"RTN","FBAARR1",71,0)
 F I=0:0 S I=$O(^FBAAC("AH",FBN,I)) Q:'I  F J=0:0 S J=$O(^FBAAC("AH",FBN,I,J)) Q:'J  F K=0:0 S K=$O(^FBAAC("AH",FBN,I,J,K)) Q:'K  F L=0:0 S L=$O(^FBAAC("AH",FBN,I,J,K,L)) Q:'L  I $D(^FBAAC(I,1,J,1,K,1,L,"FBREJ")) S FBCNT=FBCNT+1
"RTN","FBAARR1",72,0)
 Q:'$D(FBNB)
"RTN","FBAARR1",73,0)
 S FBNBCNT=$S($D(^FBAA(161.7,FBNB,0)):(FBAAMPI-$P(^(0),"^",11)),1:0)
"RTN","FBAARR1",74,0)
 I FBCNT>FBNBCNT W !!,*7,"New Batch selected does not have enough room to fit the",!,FBCNT," rejects pending from batch ",$P(FZ,"^")," !",!! K FBNB Q
"RTN","FBAARR1",75,0)
 Q
"RTN","FBAARR1",76,0)
 ;
"RTN","FBAARR1",77,0)
VOID W !!,*7,"Invoice #: ",FBIN," has a status of VOID.  Please delete the VOID",!,"before re-initiating this rejected payment."
"RTN","FBAARR1",78,0)
 Q
"RTN","FBAARR2")
0^23^B8520138^B12046671
"RTN","FBAARR2",1,0)
FBAARR2 ;AISC/GRR - REINITIATE REJECTED LINE ITEMS ;3/27/2012
"RTN","FBAARR2",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FBAARR2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAARR2",4,0)
DELT ;TRAVEL LINE ITEM RE-INITIATE
"RTN","FBAARR2",5,0)
 ; select patient
"RTN","FBAARR2",6,0)
 S J=$$ASKVET^FBAAUTL1("I $D(^FBAAC(""AG"",B,+Y))")
"RTN","FBAARR2",7,0)
 Q:'J
"RTN","FBAARR2",8,0)
 K QQ
"RTN","FBAARR2",9,0)
 S QQ=0 W @IOF D HEDP^FBAACCB0
"RTN","FBAARR2",10,0)
 F K=0:0 S K=$O(^FBAAC("AG",B,J,K)) Q:K'>0  S QQ=QQ+1,QQ(QQ)=J_"^"_K S Y(0)=^FBAAC(J,3,K,0) D SETT^FBAACCB0
"RTN","FBAARR2",11,0)
RLT S DIR(0)="N^1:"_QQ,DIR("A")="Re-initiate which line item" D ^DIR K DIR G:$D(DIRUT) ENDT S HX=X
"RTN","FBAARR2",12,0)
 I '$D(QQ(HX)) W !!,*7,"You just did that one!!" G RLT
"RTN","FBAARR2",13,0)
RIN S DIR(0)="Y",DIR("A")="Are you sure you want to re-initiate line item number: "_HX,DIR("B")="NO" D ^DIR K DIR G:$D(DIRUT)!'Y RLT
"RTN","FBAARR2",14,0)
 S J=$P(QQ(HX),"^",1),K=$P(QQ(HX),"^",2)
"RTN","FBAARR2",15,0)
 K FBERR
"RTN","FBAARR2",16,0)
 D REJT^FBAARR1
"RTN","FBAARR2",17,0)
 K QQ(HX)
"RTN","FBAARR2",18,0)
RASK S DIR(0)="Y",DIR("A")=$S($G(FBERR):"",1:"Line Re-initiated.  ")_"Want to re-initiate another",DIR("B")="YES" D ^DIR K DIR G RASK:$D(DIRUT),ENDT:'Y,DELT:Y
"RTN","FBAARR2",19,0)
ENDT ;
"RTN","FBAARR2",20,0)
 Q
"RTN","FBAARR2",21,0)
DELP ;PHARMACY LINE ITEM RE-INITIATE
"RTN","FBAARR2",22,0)
RDI W !! S DIC="^FBAA(162.1,",DIC(0)="AEQ" D ^DIC Q:X="^"!(X="")  G:Y<0 RDI S A=+Y I '$D(^FBAA(162.1,"AF",B,A)) W !!,*7,"No payments rejected in this batch for that Invoice!" G RDI
"RTN","FBAARR2",23,0)
 K QQ
"RTN","FBAARR2",24,0)
 S QQ=0,FBIN=A W @IOF D SETV^FBAACCB0,HED^FBAACCB
"RTN","FBAARR2",25,0)
 F B2=0:0 S B2=$O(^FBAA(162.1,"AF",B,A,B2)) Q:B2'>0  S QQ=QQ+1,QQ(QQ)=A_"^"_B2 S Z(0)=^FBAA(162.1,A,"RX",B2,0) D MORE^FBAACCB1
"RTN","FBAARR2",26,0)
RLP S DIR(0)="N^1:"_QQ,DIR("A")="Re-initiate which line item" D ^DIR K DIR G:$D(DIRUT) ENDP S HX=X
"RTN","FBAARR2",27,0)
 I '$D(QQ(HX)) W !!,*7,"You just did that one!!" G RLP
"RTN","FBAARR2",28,0)
PRIN S DIR(0)="Y",DIR("A")="Are you sure you want to re-initiate item number: "_HX,DIR("B")="NO" D ^DIR K DIR G:$D(DIRUT)!'Y RLP
"RTN","FBAARR2",29,0)
 S J=$P(QQ(HX),"^",1),K=$P(QQ(HX),"^",2)
"RTN","FBAARR2",30,0)
 K FBERR
"RTN","FBAARR2",31,0)
 D REJP^FBAARR1
"RTN","FBAARR2",32,0)
PASK S DIR(0)="Y",DIR("A")=$S($G(FBERR):"",1:"Line Re-initiated.  ")_"Want to re-initiate another",DIR("B")="YES" D ^DIR K DIR G PASK:$D(DIRUT),DELP:Y,ENDP
"RTN","FBAARR2",33,0)
ENDP ;
"RTN","FBAARR2",34,0)
 Q
"RTN","FBAARR3")
0^42^B24328371^n/a
"RTN","FBAARR3",1,0)
FBAARR3 ;WOIFO/SAB - REINITIATE REJECTED LINE ITEMS ;4/26/2012
"RTN","FBAARR3",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FBAARR3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAARR3",4,0)
 Q
"RTN","FBAARR3",5,0)
 ;
"RTN","FBAARR3",6,0)
 ; ICRs
"RTN","FBAARR3",7,0)
 ;  #2053   FILE^DIE
"RTN","FBAARR3",8,0)
 ;  #2054   CLEAN^DILF, DA^DILF
"RTN","FBAARR3",9,0)
 ;  #2056   $$GET1^DIQ, GETS^DIQ
"RTN","FBAARR3",10,0)
 ;
"RTN","FBAARR3",11,0)
DELREJ(FBFILE,FBPIENS,FBNB) ; Delete Reject Flag
"RTN","FBAARR3",12,0)
 ; input
"RTN","FBAARR3",13,0)
 ;   FBFILE - payment file (162.03, 162.04, 162.11, 162.5)
"RTN","FBAARR3",14,0)
 ;   FBPIENS - IEN of payment line in file, FileMan DBS format
"RTN","FBAARR3",15,0)
 ;   FBNB - IEN of new batch, only pass when re-initiate
"RTN","FBAARR3",16,0)
 ; return value
"RTN","FBAARR3",17,0)
 ;   =1 when successfully processed
"RTN","FBAARR3",18,0)
 ;   =0^message when not
"RTN","FBAARR3",19,0)
 ;
"RTN","FBAARR3",20,0)
 N FBAP,FBFIELDS,FBN,FBRET,FBSKIPIC
"RTN","FBAARR3",21,0)
 S FBRET=1
"RTN","FBAARR3",22,0)
 ;
"RTN","FBAARR3",23,0)
 ; verify inputs
"RTN","FBAARR3",24,0)
 I $G(FBFILE)="" S FBRET="0^File number not provided."
"RTN","FBAARR3",25,0)
 I $G(FBPIENS)="" S FBRET="0^Line Item IENs not provided."
"RTN","FBAARR3",26,0)
 I $G(FBNB),"^O^A^"'[("^"_$$GET1^DIQ(161.7,FBNB_",",11,"I")_"^") D
"RTN","FBAARR3",27,0)
 . S FBRET="0^New batch status is not OPEN or ASSIGNED PRICE."
"RTN","FBAARR3",28,0)
 ;
"RTN","FBAARR3",29,0)
 ; determine field numbers based on file
"RTN","FBAARR3",30,0)
 I FBRET D
"RTN","FBAARR3",31,0)
 . ; FBFIELDS will contain the numbers of the following fields/sub-file
"RTN","FBAARR3",32,0)
 . ;   piece 1 = batch number
"RTN","FBAARR3",33,0)
 . ;   piece 2 = amount paid
"RTN","FBAARR3",34,0)
 . ;   piece 3 = reject status
"RTN","FBAARR3",35,0)
 . ;   piece 4 = reject reason
"RTN","FBAARR3",36,0)
 . ;   piece 5 = old batch number
"RTN","FBAARR3",37,0)
 . ;   piece 6 = interface reject
"RTN","FBAARR3",38,0)
 . ;   piece 7 = reject code
"RTN","FBAARR3",39,0)
 . ;   piece 8 = reject code sub-file number
"RTN","FBAARR3",40,0)
 . I FBFILE="162.03" S FBFIELDS="7^2^19^20^21^21.3^21.6^162.031"
"RTN","FBAARR3",41,0)
 . I FBFILE="162.04" S FBFIELDS="1^2^4^5^6^6.3^6.6^162.041"
"RTN","FBAARR3",42,0)
 . I FBFILE="162.11" S FBFIELDS="13^6.5^17^18^19^19.3^19.6^162.111"
"RTN","FBAARR3",43,0)
 . I FBFILE="162.5" S FBFIELDS="20^8^13^14^15^15.3^15.6^162.515"
"RTN","FBAARR3",44,0)
 . I $G(FBFIELDS)="" S FBRET="0^Could not determine field numbers"
"RTN","FBAARR3",45,0)
 ;
"RTN","FBAARR3",46,0)
 ; get line item data
"RTN","FBAARR3",47,0)
 I FBRET D
"RTN","FBAARR3",48,0)
 . S FBAP=$$GET1^DIQ(FBFILE,FBPIENS,$P(FBFIELDS,"^",2)) ; amount paid
"RTN","FBAARR3",49,0)
 . S FBN=$$GET1^DIQ(FBFILE,FBPIENS,$P(FBFIELDS,"^",5),"I") ; old batch
"RTN","FBAARR3",50,0)
 . I FBN="" S FBRET="0^OLD BATCH NUMBER is null, Line is not rejected."
"RTN","FBAARR3",51,0)
 ;
"RTN","FBAARR3",52,0)
 ; restore to original batch when input FBNB is null (not re-initiate)
"RTN","FBAARR3",53,0)
 I FBRET D
"RTN","FBAARR3",54,0)
 . S:$G(FBNB)="" FBNB=FBN
"RTN","FBAARR3",55,0)
 ;
"RTN","FBAARR3",56,0)
 ; if file is 162.11 and invoice already has a line on the batch then
"RTN","FBAARR3",57,0)
 ;   set flag to prevent increase to the batch invoice count
"RTN","FBAARR3",58,0)
 I FBRET,FBFILE=162.11 D
"RTN","FBAARR3",59,0)
 . I $O(^FBAA(162.1,"AE",FBNB,$P(FBPIENS,",",2),0)) S FBSKIPIC=1
"RTN","FBAARR3",60,0)
 ;
"RTN","FBAARR3",61,0)
 ; update line item
"RTN","FBAARR3",62,0)
 I FBRET D
"RTN","FBAARR3",63,0)
 . N DIERR,FBFDA,FBRIENS,FBX
"RTN","FBAARR3",64,0)
 . S FBFDA(FBFILE,FBPIENS,$P(FBFIELDS,"^",1))=FBNB ; batch number
"RTN","FBAARR3",65,0)
 . S FBFDA(FBFILE,FBPIENS,$P(FBFIELDS,"^",3))="@" ; reject status
"RTN","FBAARR3",66,0)
 . S FBFDA(FBFILE,FBPIENS,$P(FBFIELDS,"^",4))="@" ; reject reason
"RTN","FBAARR3",67,0)
 . S FBFDA(FBFILE,FBPIENS,$P(FBFIELDS,"^",5))="@" ; old batch number
"RTN","FBAARR3",68,0)
 . S FBFDA(FBFILE,FBPIENS,$P(FBFIELDS,"^",6))="@" ; interface reject
"RTN","FBAARR3",69,0)
 . ;
"RTN","FBAARR3",70,0)
 . ; get list of entries in REJECT CODE multiple
"RTN","FBAARR3",71,0)
 . D GETS^DIQ(FBFILE,FBPIENS,$P(FBFIELDS,"^",7)_"*","","FBX")
"RTN","FBAARR3",72,0)
 . ;
"RTN","FBAARR3",73,0)
 . ; loop thru REJECT CODE entries
"RTN","FBAARR3",74,0)
 . S FBRIENS=""
"RTN","FBAARR3",75,0)
 . F  S FBRIENS=$O(FBX($P(FBFIELDS,"^",8),FBRIENS)) Q:FBRIENS=""  D
"RTN","FBAARR3",76,0)
 . . S FBFDA($P(FBFIELDS,"^",8),FBRIENS,.01)="@" ; REJECT CODE
"RTN","FBAARR3",77,0)
 . ;
"RTN","FBAARR3",78,0)
 . D FILE^DIE("","FBFDA")
"RTN","FBAARR3",79,0)
 . I $D(DIERR) S FBRET="0^Error updating line item."
"RTN","FBAARR3",80,0)
 . D CLEAN^DILF
"RTN","FBAARR3",81,0)
 ;
"RTN","FBAARR3",82,0)
 I FBRET D
"RTN","FBAARR3",83,0)
 . ; the software often checks $DATA of the "FBREJ" node to determine
"RTN","FBAARR3",84,0)
 . ; if a line item is flagged as rejected.  To ensure this checks works
"RTN","FBAARR3",85,0)
 . ; correctly the node will be killed.
"RTN","FBAARR3",86,0)
 . N FBDA
"RTN","FBAARR3",87,0)
 . D DA^DILF(FBPIENS,.FBDA)
"RTN","FBAARR3",88,0)
 . I FBFILE=162.03 K ^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,"FBREJ")
"RTN","FBAARR3",89,0)
 . I FBFILE=162.04 K ^FBAAC(FBDA(1),3,FBDA,"FBREJ")
"RTN","FBAARR3",90,0)
 . I FBFILE=162.11 K ^FBAA(162.1,FBDA(1),"RX",FBDA,"FBREJ")
"RTN","FBAARR3",91,0)
 . I FBFILE=162.5 K ^FBAAI(FBDA,"FBREJ")
"RTN","FBAARR3",92,0)
 ;
"RTN","FBAARR3",93,0)
 ; update new batch fields to reflect addition of line item
"RTN","FBAARR3",94,0)
 I FBRET D
"RTN","FBAARR3",95,0)
 . N DIERR,FBFDA,FBIC,FBLC,FBTOT
"RTN","FBAARR3",96,0)
 . ; get existing data
"RTN","FBAARR3",97,0)
 . S FBTOT=$$GET1^DIQ(161.7,FBNB_",",8) ; TOTAL DOLLARS
"RTN","FBAARR3",98,0)
 . S FBIC=$$GET1^DIQ(161.7,FBNB_",",9) ; INVOICE COUNT
"RTN","FBAARR3",99,0)
 . S FBLC=$$GET1^DIQ(161.7,FBNB_",",10) ; PAYMENT LINE COUNT
"RTN","FBAARR3",100,0)
 . ; 
"RTN","FBAARR3",101,0)
 . S FBFDA(161.7,FBNB_",",8)=FBTOT+FBAP ; TOTAL DOLLARS
"RTN","FBAARR3",102,0)
 . S FBFDA(161.7,FBNB_",",10)=FBLC+1 ; PAYMENT LINE COUNT
"RTN","FBAARR3",103,0)
 . ; update INVOICE COUNT when appropriate
"RTN","FBAARR3",104,0)
 . ; this field is not curently maintained for batch types B2 and B3
"RTN","FBAARR3",105,0)
 . I FBFILE=162.5 S FBFDA(161.7,FBNB_",",9)=FBIC+1 ; INVOICE COUNT
"RTN","FBAARR3",106,0)
 . I FBFILE=162.11,'$G(FBSKIPIC) D
"RTN","FBAARR3",107,0)
 . . S FBFDA(161.7,FBNB_",",9)=FBIC+1 ; INVOICE COUNT
"RTN","FBAARR3",108,0)
 . ;
"RTN","FBAARR3",109,0)
 . I $D(FBFDA) D FILE^DIE("","FBFDA")
"RTN","FBAARR3",110,0)
 . I $D(DIERR) S FBRET="0^Error updating data for new batch."
"RTN","FBAARR3",111,0)
 . D CLEAN^DILF
"RTN","FBAARR3",112,0)
 ;
"RTN","FBAARR3",113,0)
 ; update old batch if no more rejects pending
"RTN","FBAARR3",114,0)
 I FBRET D
"RTN","FBAARR3",115,0)
 . N DIERR,FBFDA
"RTN","FBAARR3",116,0)
 . I FBFILE=162.03,$D(^FBAAC("AH",FBN)) Q
"RTN","FBAARR3",117,0)
 . I FBFILE=162.04,$D(^FBAAC("AG",FBN)) Q
"RTN","FBAARR3",118,0)
 . I FBFILE=162.11,$D(^FBAA(162.1,"AF",FBN)) Q
"RTN","FBAARR3",119,0)
 . I FBFILE=162.5,$D(^FBAAI("AH",FBN)) Q
"RTN","FBAARR3",120,0)
 . S FBFDA(161.7,FBN_",",15)="@" ; REJECTS PENDING
"RTN","FBAARR3",121,0)
 . I $D(FBFDA) D FILE^DIE("","FBFDA")
"RTN","FBAARR3",122,0)
 . I $D(DIERR) S FBRET="0^Error updating data for old batch."
"RTN","FBAARR3",123,0)
 . D CLEAN^DILF
"RTN","FBAARR3",124,0)
 ;
"RTN","FBAARR3",125,0)
 Q FBRET
"RTN","FBAARR3",126,0)
 ;
"RTN","FBAARR3",127,0)
 ;FBAARR3
"RTN","FBAASCB")
0^35^B27212930^B26810368
"RTN","FBAASCB",1,0)
FBAASCB ;AISC/GRR - SUPERVISOR RELEASE ;4/4/2012
"RTN","FBAASCB",2,0)
 ;;3.5;FEE BASIS;**38,61,116,117,132**;JAN 30, 1995;Build 17
"RTN","FBAASCB",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAASCB",4,0)
 S FBERR=0 D DT^DICRW
"RTN","FBAASCB",5,0)
 I '$D(^FBAA(161.7,"AC","C"))&('$D(^FBAA(161.7,"AC","A"))) W !!,*7,"There are no batches Pending Release!" Q
"RTN","FBAASCB",6,0)
BT W !! S DIC="^FBAA(161.7,",DIC(0)="AEQ",DIC("S")="I ($G(^(""ST""))=""C""!($G(^(""ST""))=""A""))&('$G(^XTMP(""FBAASCB"",+Y)))" D ^DIC K DIC("S") G Q:X="^"!(X=""),BT:Y<0 S FBN=+Y,^XTMP("FBAASCB",FBN)=1
"RTN","FBAASCB",7,0)
 D LOCK^FBUCUTL("^FBAA(161.7,",FBN) I 'FBLOCK W !!,*7,"Try releasing batch at another time." D Q G FBAASCB
"RTN","FBAASCB",8,0)
 S FZ=^FBAA(161.7,FBN,0),FBTYPE=$P(FZ,"^",3),FBAAON=$P(FZ,"^",2),FBAAB=$P(FZ,"^")
"RTN","FBAASCB",9,0)
 I $G(FBTYPE)="B9",$P(FZ,"^",15)="Y",$P(^FBAA(161.7,FBN,"ST"),"^")="C",$P(FZ,"^",18)'="Y" W !!,*7,"Batch needs to be released to Pricer first.",! G Q
"RTN","FBAASCB",10,0)
 I $G(FBTYPE)="B9",$P(FZ,"^",15)="" S FBCNH=1
"RTN","FBAASCB",11,0)
 S FBSTAT=^FBAA(161.7,FBN,"ST"),FBSTAT=$S(FBSTAT="C":"S",FBSTAT="A":"R",1:FBSTAT)
"RTN","FBAASCB",12,0)
 S FBAAOB=$P(FZ,"^",8)_"-"_FBAAON,FBAAMT=$P(FZ,"^",9),FBCOMM="Release of batch "_FBAAB
"RTN","FBAASCB",13,0)
 I '$D(^XUSEC("FBAASUPERVISOR",DUZ)) W !!,*7,"Sorry, only Supervisor can Release batch!" D Q G FBAASCB
"RTN","FBAASCB",14,0)
 ; enforce segregation of duties (FB*3.5*117)
"RTN","FBAASCB",15,0)
 D UOKCERT^PRCEMOA(.FBUOK,FBAAOB,DUZ) ; IA #5573
"RTN","FBAASCB",16,0)
 I 'FBUOK D  D Q G FBAASCB
"RTN","FBAASCB",17,0)
 . W $C(7),!,$P(FBUOK,U,2) ; display text returned by IFCAP API
"RTN","FBAASCB",18,0)
 . I $P(FBUOK,U)="0" W !,"Due to segregation of duties, you cannot also certify an invoice for payment."
"RTN","FBAASCB",19,0)
 . I $P(FBUOK,U)="E" W !,"This 1358 error must be resolved before the batch can be released."
"RTN","FBAASCB",20,0)
 ;
"RTN","FBAASCB",21,0)
 S DA=FBN,DR="0:1;ST" W !! D EN^DIQ
"RTN","FBAASCB",22,0)
RD S B=FBN S DIR(0)="Y",DIR("A")="Want line items listed",DIR("B")="NO" D ^DIR K DIR G Q:$D(DIRUT) W:Y @IOF D:Y LIST^FBAACCB:FBTYPE="B3",LISTP^FBAACCB:FBTYPE="B5",LISTT^FBAACCB0:FBTYPE="B2",LISTC^FBAACCB1:FBTYPE="B9"
"RTN","FBAASCB",23,0)
RDD S DIR(0)="Y",DIR("A")="Do you want to Release Batch as Correct",DIR("B")="NO" D ^DIR K DIR G Q:$D(DIRUT) I 'Y W !!,"Batch has NOT been Released!",*7 D Q G FBAASCB
"RTN","FBAASCB",24,0)
 D WAIT^DICD
"RTN","FBAASCB",25,0)
 S FBAARA=0
"RTN","FBAASCB",26,0)
 I FBTYPE="B9" D ^FBAASCB0 G SHORT:$D(FBERR)
"RTN","FBAASCB",27,0)
 I FBTYPE="B9",FBAARA>0 S FBAAMT=FBAARA D POST G SHORT:$D(FBERR)
"RTN","FBAASCB",28,0)
 I FBTYPE'="B9" D POST I $D(FBERR) G SHORT
"RTN","FBAASCB",29,0)
FIN ;
"RTN","FBAASCB",30,0)
 ; use FileMan to update fields 5 and 6, store date & time (FB*3.5*117)
"RTN","FBAASCB",31,0)
 S DA=FBN,DIE="^FBAA(161.7,"
"RTN","FBAASCB",32,0)
 S DR="11////^S X=FBSTAT;6////^S X=DUZ;5////^S X=$$NOW^XLFDT" D ^DIE
"RTN","FBAASCB",33,0)
 K DA,DIE,DIC,DR
"RTN","FBAASCB",34,0)
 D UCAUTOP
"RTN","FBAASCB",35,0)
 S DA=FBN,DR="0:1;ST",DIC="^FBAA(161.7," W !! D EN^DIQ W !!," Batch has been Released!"
"RTN","FBAASCB",36,0)
 D Q G FBAASCB
"RTN","FBAASCB",37,0)
Q I $G(FBN) K ^XTMP("FBAASCB",FBN) L -^FBAA(161.7,FBN)
"RTN","FBAASCB",38,0)
 K B,J,K,L,M,X,Y,Z,DIC,FBN,A,A1,A2,BE,CPTDESC,D0,DA,DL,DR,DRX,DX,FBAACB,FBAACPT,FBAAON,FBAAOUT,FBVP,FBIN,DK,N,XY,FBINOLD,FBINTOT,FBTYPE,FZ,P3,P4,Q,S,T,V,VID,ZS,FBAAB,FBAAMT,FBAAOB,FBCOMM,FBAUT,FBSITE,I,X,Y,Z,FBERR,DIRUT,FBSTAT,FBLOCK
"RTN","FBAASCB",39,0)
 K FBAC,FBAP,FBCNH,FBFD,FBI,FBLISTC,FBPDT,FBSC,FBTD,PRCSCPAN,DFN,FBINV
"RTN","FBAASCB",40,0)
 K FBUOK,FBAARA
"RTN","FBAASCB",41,0)
 Q
"RTN","FBAASCB",42,0)
SHORT ;
"RTN","FBAASCB",43,0)
 I '$D(FBINV) W !!,*7,"This batch CANNOT be released. Check your 1358.",!
"RTN","FBAASCB",44,0)
 L -^FBAA(161.7,FBN) D Q G FBAASCB
"RTN","FBAASCB",45,0)
POST ;FBAAOB=FULL OBLIGATION NUMBER(STA-CXXXXX)
"RTN","FBAASCB",46,0)
 ;FBCOMM=COMMENT FOR 1358
"RTN","FBAASCB",47,0)
 ;FBAAMT=TOTAL AMOUNT OF BATCH
"RTN","FBAASCB",48,0)
 ;FBAAB=BATCH NUMBER
"RTN","FBAASCB",49,0)
 ;IF CALL FAILS FBERR RETURNED=1
"RTN","FBAASCB",50,0)
 ;FBN added as 7th peice of 'X'. It is the interface ID
"RTN","FBAASCB",51,0)
 K FBERR
"RTN","FBAASCB",52,0)
 S PRCS("X")=FBAAOB,PRCS("TYPE")="FB" D EN3^PRCS58 I Y=-1 W !!,*7,?5,"1358 not available for posting!",! S FBERR=1 Q
"RTN","FBAASCB",53,0)
 D NOW^%DTC S X=FBAAOB_"^"_%_"^^"_FBAAMT_"^"_$S($L(FBAAB)<3:$$PADZ^FBAAV01(FBAAB,4),1:FBAAB)_"^"_FBCOMM_"^"_FBN_"^"_1,PRCS("TYPE")="FB" D EN2^PRCS58 I +Y=0 W !!,*7,Y,! S FBERR=1 Q
"RTN","FBAASCB",54,0)
 K PRCS("SITE"),PRCSI Q
"RTN","FBAASCB",55,0)
UCAUTOP ; Unauthorized Claims Autoprint
"RTN","FBAASCB",56,0)
 ; If unauthorized claims autoprint feature is enabled then check items
"RTN","FBAASCB",57,0)
 ; in batch and print an unauthorized claim disposition letter if all
"RTN","FBAASCB",58,0)
 ; payments for a claim have been released
"RTN","FBAASCB",59,0)
 ; input FBN    - batch ien
"RTN","FBAASCB",60,0)
 ;       FBTYPE - batch type
"RTN","FBAASCB",61,0)
 ;       FBCNH  - (opt) equals 1 if batch is for community nursing home
"RTN","FBAASCB",62,0)
 N DA,FBDA,FBORDER,FBUC,FBUCA,FBX
"RTN","FBAASCB",63,0)
 Q:"^B3^B5^B9^"'[(U_FBTYPE_U)  ; not an applicable batch type
"RTN","FBAASCB",64,0)
 Q:$G(FBCNH)=1  ; CNH batch won't have associated unauth claims
"RTN","FBAASCB",65,0)
 S FBUC=$$FBUC^FBUCUTL2(1)
"RTN","FBAASCB",66,0)
 Q:'$$PARAM^FBUCLET(FBUC)  ; autoprint feature not enabled
"RTN","FBAASCB",67,0)
 ;
"RTN","FBAASCB",68,0)
 ; loop thru items in batch to build list of unauthorized claims
"RTN","FBAASCB",69,0)
 K ^TMP("FBUC",$J)
"RTN","FBAASCB",70,0)
 I FBTYPE="B3" D  ; if outpatient/ancillary batch
"RTN","FBAASCB",71,0)
 . S DA(3)=0 F  S DA(3)=$O(^FBAAC("AC",FBN,DA(3))) Q:'DA(3)  D
"RTN","FBAASCB",72,0)
 . . S DA(2)=0 F  S DA(2)=$O(^FBAAC("AC",FBN,DA(3),DA(2))) Q:'DA(2)  D
"RTN","FBAASCB",73,0)
 . . . S DA(1)=0
"RTN","FBAASCB",74,0)
 . . . F  S DA(1)=$O(^FBAAC("AC",FBN,DA(3),DA(2),DA(1))) Q:'DA(1)  D
"RTN","FBAASCB",75,0)
 . . . . S DA=0
"RTN","FBAASCB",76,0)
 . . . . F  S DA=$O(^FBAAC("AC",FBN,DA(3),DA(2),DA(1),DA)) Q:'DA  D
"RTN","FBAASCB",77,0)
 . . . . . S FBX=$P($G(^FBAAC(DA(3),1,DA(2),1,DA(1),1,DA,0)),U,13)
"RTN","FBAASCB",78,0)
 . . . . . I FBX["FB583" S ^TMP("FBUC",$J,+FBX)=""
"RTN","FBAASCB",79,0)
 I FBTYPE="B5" D  ; if pharmacy batch
"RTN","FBAASCB",80,0)
 . S DA(1)=0 F  S DA(1)=$O(^FBAA(162.1,"AE",FBN,DA(1))) Q:'DA(1)  D
"RTN","FBAASCB",81,0)
 . . S DA=0 F  S DA=$O(^FBAA(162.1,"AE",FBN,DA(1),DA)) Q:'DA  D
"RTN","FBAASCB",82,0)
 . . . S FBX=$P($G(^FBAA(162.1,DA(1),"RX",DA,2)),U,6)
"RTN","FBAASCB",83,0)
 . . . I FBX["FB583" S ^TMP("FBUC",$J,+FBX)=""
"RTN","FBAASCB",84,0)
 I FBTYPE="B9" D  ; if inpatient batch
"RTN","FBAASCB",85,0)
 . S DA=0 F  S DA=$O(^FBAAI("AC",FBN,DA)) Q:'DA  D
"RTN","FBAASCB",86,0)
 . . S FBX=$P($G(^FBAAI(DA,0)),U,5)
"RTN","FBAASCB",87,0)
 . . I FBX["FB583" S ^TMP("FBUC",$J,+FBX)=""
"RTN","FBAASCB",88,0)
 ;
"RTN","FBAASCB",89,0)
 ; loop thru unauthorized claim list and print letter when appropriate
"RTN","FBAASCB",90,0)
 S FBDA=0 F  S FBDA=$O(^TMP("FBUC",$J,FBDA)) Q:'FBDA  D
"RTN","FBAASCB",91,0)
 . Q:'$$PAYST^FBUCUTL(FBDA)  ; not all payments for claim released yet
"RTN","FBAASCB",92,0)
 . S FBUCA=$G(^FB583(FBDA,0))
"RTN","FBAASCB",93,0)
 . Q:$P(FBUCA,U,16)'=1  ; claim not flagged for printing
"RTN","FBAASCB",94,0)
 . S FBORDER=$$ORDER^FBUCUTL($P(FBUCA,U,24))
"RTN","FBAASCB",95,0)
 . D AUTO^FBUCLET(FBDA,FBORDER,FBUCA,FBUC) ; autoprint letter
"RTN","FBAASCB",96,0)
 ;
"RTN","FBAASCB",97,0)
 K ^TMP("FBUC",$J)
"RTN","FBAASCB",98,0)
 Q
"RTN","FBAASCB",99,0)
 ;
"RTN","FBAASCB0")
0^36^B19510216^B19526441
"RTN","FBAASCB0",1,0)
FBAASCB0 ;AISC/DMK - POST 1358 FOR INPATIENT 7078'S ;4/2/2012
"RTN","FBAASCB0",2,0)
 ;;3.5;FEE BASIS;**116,132**;JAN 30, 1995;Build 17
"RTN","FBAASCB0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAASCB0",4,0)
 K FBERR,^TMP($J) S FBRJC=0,FBINTOT=$P(FZ,U,10)
"RTN","FBAASCB0",5,0)
 I '$O(^FBAAI("AC",FBN,0)) W !,*7,"No invoices found for this batch. Unable to release.",! S FBERR=1 Q
"RTN","FBAASCB0",6,0)
 ;
"RTN","FBAASCB0",7,0)
 S FBII=0 F  S FBII=$O(^FBAAI("AC",FBN,FBII)) Q:'FBII!($D(FBERR))  S FBII78=$P($G(^FBAAI(FBII,0)),"^",5),FBAAMT=$P($G(^(0)),"^",9),FBMM=$E($P(^(0),U,6),4,5) D GETAP,GET78:FBII78["FB7078(",UC:FBII78["FB583("
"RTN","FBAASCB0",8,0)
 I $G(FBRJC),FBRJC=FBINTOT S FBERR=1 D KILL Q
"RTN","FBAASCB0",9,0)
 I $G(FBRJC) K FBERR S (FBRJC,FBII)=0 F  S FBII=$O(^TMP($J,FBII)) Q:'FBII  S X=$G(^FBAAI(FBII,0)),FBII78=$P(X,U,5),FBAAMT=$P(X,U,9),FBMM=$E($P(X,U,6),4,5) K X,^TMP($J,FBII) D GET78
"RTN","FBAASCB0",10,0)
 I $G(FBRJC) S (FBAAMT,FBINTOT)=0 D NEWBT S FBII=0 F  S FBII=$O(^TMP($J,FBII)) Q:'FBII  D
"RTN","FBAASCB0",11,0)
 .S DA=FBII,DIE="^FBAAI(",DR="20////^S X=FBBN" D ^DIE K DR,DA,DIE
"RTN","FBAASCB0",12,0)
 .S FBAAMT=FBAAMT+$P(^FBAAI(FBII,0),U,9),FBINTOT=FBINTOT+1
"RTN","FBAASCB0",13,0)
 D:$G(FBRJC) RESETBT
"RTN","FBAASCB0",14,0)
 ; FB*3.5*116  ; report zero dollar invoices
"RTN","FBAASCB0",15,0)
 I $D(FBINV) D
"RTN","FBAASCB0",16,0)
 . S FBII=0 F  S FBII=$O(FBINV(FBII)) Q:'FBII  W !!,"Invoice #: "_FBII_" totals $0.00"
"RTN","FBAASCB0",17,0)
 . W $C(7),!!?2,"Batch cannot be released when zero dollar invoices exist."
"RTN","FBAASCB0",18,0)
 . W !?2,"Invoices must be corrected or removed from the batch."
"RTN","FBAASCB0",19,0)
 . S FBERR=1
"RTN","FBAASCB0",20,0)
 Q
"RTN","FBAASCB0",21,0)
 ;
"RTN","FBAASCB0",22,0)
KILL K FBII,FBII78,FBAAMT,FBI78,FBMM,PRCSX,FBRJC,FBSTN,FBBN,FBINTOT,FBCNH,^TMP($J) Q
"RTN","FBAASCB0",23,0)
 ;
"RTN","FBAASCB0",24,0)
GET78 I '$D(^FB7078(+FBII78,0)) W !,*7,"No associated 7078 for invoice ",FBII,". Unable to release batch.",! S FBERR=1 Q
"RTN","FBAASCB0",25,0)
 S FBI78=$P(^FB7078(+FBII78,0),"^"),DFN=+$P(^(0),"^",3),FBI78=$P(FZ,"^",8)_"-"_$P(FBI78,".")_"-"_$P(FBI78,".",2) D
"RTN","FBAASCB0",26,0)
 . ;
"RTN","FBAASCB0",27,0)
 . ;I $D(FBCNH),'$D(^PRC(424,"E",DFN_";"_+FBII78_";"_FBAAON_";"_FBMM)) D POST^FBAASCB
"RTN","FBAASCB0",28,0)
 .D INPOST:$$INTER()
"RTN","FBAASCB0",29,0)
 .I $D(FBCNH),'$$INTER S FBERR=1 W !!,$$NAME^FBCHREQ2(DFN),"  ",$$SSN^FBAAUTL(DFN),!,*7,"Unable to locate reference number on 1358.  Run Post Commitments for",!,"Obligation option."
"RTN","FBAASCB0",30,0)
 .I $D(FBCNH),$D(FBERR) S ^TMP($J,+FBII)="",FBRJC=FBRJC+1 K FBERR
"RTN","FBAASCB0",31,0)
 Q
"RTN","FBAASCB0",32,0)
 ;
"RTN","FBAASCB0",33,0)
INPOST ;PRCSX=INTERNAL DAILY REF #^INTERNAL DATE/TIME^AMT OF PAYMENT^COMMENTS^COMPLETE FLAG
"RTN","FBAASCB0",34,0)
 ;FBI78=AUTHORIZATION NAME IN 424 (STA-CXXXXX-REF #)
"RTN","FBAASCB0",35,0)
 ;FBERR RETURNED IF IFCAP CALL FAILS
"RTN","FBAASCB0",36,0)
 ;FBCOMM=COMMENT
"RTN","FBAASCB0",37,0)
 ;FBAAMT=ACTUAL AMOUNT OF PAYMENT
"RTN","FBAASCB0",38,0)
 ;INTERFACE ID = DFN_";"_INTERNAL ENTRY NUMBER OF 7078_";"_FBAAON  (OBLIGATION)_";" if CNH _FBMM (month of service)
"RTN","FBAASCB0",39,0)
 ;INTERNAL DAILY REF # = $O(^PRC(424,"B","STA #-OBLIGATION #-REF #",0))
"RTN","FBAASCB0",40,0)
 ;NEW INTERNAL DAILY REF # LOOKUP=$O(^PRC(424,"E",INTERFACE ID,0))
"RTN","FBAASCB0",41,0)
 I '$$INTER() W !,*7,"Unable to locate reference number on 1358.",! S FBERR=1 Q
"RTN","FBAASCB0",42,0)
 S PRCS("X")=FBAAOB,PRCS("TYPE")="FB" D EN3^PRCS58 I Y=-1 W !!,*7,"1358 not available for posting!",! S FBERR=1 Q
"RTN","FBAASCB0",43,0)
 D NOW^%DTC
"RTN","FBAASCB0",44,0)
 S PRCSX=$$INTER()_"^"_%_"^"_FBAAMT_"^"_$S($D(FBCOMM):FBCOMM,1:"")_"^"_1
"RTN","FBAASCB0",45,0)
 D ^PRCS58CC I Y'=1 W !!,$$NAME^FBCHREQ2(DFN),"  (",$$SSN^FBAAUTL(DFN,1),")",!,*7,$P(Y,"^",2),! S FBERR=1 Q
"RTN","FBAASCB0",46,0)
 Q
"RTN","FBAASCB0",47,0)
 ;
"RTN","FBAASCB0",48,0)
INTER() ;get internal entry number from file 424
"RTN","FBAASCB0",49,0)
 ;first check for new INTERFACE ID "E" x-ref in 424
"RTN","FBAASCB0",50,0)
 ;2nd check is to "B" x-ref to stay backward compatible with IFCAP 3.6
"RTN","FBAASCB0",51,0)
 ;
"RTN","FBAASCB0",52,0)
 I '$D(FBCNH),$D(^PRC(424,"E",DFN_";"_+FBII78_";"_FBAAON)) Q $O(^(DFN_";"_+FBII78_";"_FBAAON,0))
"RTN","FBAASCB0",53,0)
 I $D(FBCNH),$D(^PRC(424,"E",DFN_";"_+FBII78_";"_FBAAON_";"_FBMM)) Q $O(^(DFN_";"_+FBII78_";"_FBAAON_";"_FBMM,0))
"RTN","FBAASCB0",54,0)
 I '$D(FBCNH),$D(^PRC(424,"B",FBI78)) Q $O(^(FBI78,0))
"RTN","FBAASCB0",55,0)
 Q 0
"RTN","FBAASCB0",56,0)
 ;
"RTN","FBAASCB0",57,0)
NEWBT ;open new batch for cnh line items unable to post to 1358
"RTN","FBAASCB0",58,0)
 S FBSTN=$P(FZ,U,8) W ! D GETNXB^FBAAUTL
"RTN","FBAASCB0",59,0)
 S DIC="^FBAA(161.7,",DIC(0)="LQ",X=FBBN,DIC("DR")="1////^S X=FBAAON;2////^S X=""B9"";3////^S X=DT;4////^S X=$P(FZ,U,5);11////^S X=""O"";16////^S X=FBSTN",DLAYGO=161.7
"RTN","FBAASCB0",60,0)
 K DD,DO D FILE^DICN S FBBN=+Y K DIC,DLAYGO
"RTN","FBAASCB0",61,0)
 Q
"RTN","FBAASCB0",62,0)
RESETBT ;reset original batch total $ set new batch totals
"RTN","FBAASCB0",63,0)
 S X=$G(^FBAA(161.7,FBBN,0)),$P(X,U,9)=FBAAMT,$P(X,U,10)=FBINTOT,$P(X,U,11)=FBINTOT,^(0)=X K X
"RTN","FBAASCB0",64,0)
 S $P(FZ,U,9)=$P(FZ,U,9)-FBAAMT,$P(FZ,U,10)=$P(FZ,U,10)-FBINTOT,$P(FZ,U,11)=$P(FZ,U,11)-FBINTOT,^FBAA(161.7,FBN,0)=FZ
"RTN","FBAASCB0",65,0)
 W !!,*7,"A new batch, number ",$P(^FBAA(161.7,FBBN,0),U),", was opened for invoices unable to post to 1358.",!,"Adjust 1358 and take action on new batch.",!
"RTN","FBAASCB0",66,0)
 Q
"RTN","FBAASCB0",67,0)
 ;
"RTN","FBAASCB0",68,0)
GETAP ; FB*3.5*116 build array of invoices in batch
"RTN","FBAASCB0",69,0)
 Q:$D(FBCNH)  ; do not build array if CNH batch
"RTN","FBAASCB0",70,0)
 Q:FBAAMT>0  ; do not place invoice reference in array if the amount paid is greater than 0.00
"RTN","FBAASCB0",71,0)
 S FBINV(FBII)=""
"RTN","FBAASCB0",72,0)
 Q
"RTN","FBAASCB0",73,0)
UC ; accumulate amount of unauthorized inpatient claims for later posting
"RTN","FBAASCB0",74,0)
 S FBAARA=FBAARA+FBAAMT
"RTN","FBAASCB0",75,0)
 Q
"RTN","FBAAUTL1")
0^8^B22206482^B21242092
"RTN","FBAAUTL1",1,0)
FBAAUTL1 ;AISC/GRR - Fee Basis Utility Routine ;9/12/2012
"RTN","FBAAUTL1",2,0)
 ;;3.5;FEE BASIS;**3,12,13,108,132**;JAN 30, 1995;Build 17
"RTN","FBAAUTL1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAAUTL1",4,0)
PLUSOB ;ENTRY POINT TO INCREASE OBLIGATION ADJUSTMENT
"RTN","FBAAUTL1",5,0)
 S FBAAMT="-"_FBAARA
"RTN","FBAAUTL1",6,0)
 D ADD Q
"RTN","FBAAUTL1",7,0)
 ;D NOW^%DTC S X=FBAAOB_"^"_%_"^^"_FBAAMT_"^"_FBAAB_"^"_FBCOMM,PRCS("TYPE")="FB" D EN2^PRCS58 I +Y=0 W !!,*7,Y,! S FBERR=1 Q
"RTN","FBAAUTL1",8,0)
 Q
"RTN","FBAAUTL1",9,0)
VALCK ;DETERMINE VALIDITY OF RESPONSE
"RTN","FBAAUTL1",10,0)
 S VAL=0 I $E(X)="?"!("YyNn"'[$E(X,1)) D HELPYN Q
"RTN","FBAAUTL1",11,0)
 S VAL=1
"RTN","FBAAUTL1",12,0)
 Q
"RTN","FBAAUTL1",13,0)
HELPYN ;DISPLAY HELP TEXT FOR YES OR NO
"RTN","FBAAUTL1",14,0)
 W !!,"Please enter 'Yes' or 'No'."
"RTN","FBAAUTL1",15,0)
 Q
"RTN","FBAAUTL1",16,0)
GETVET D DT^DICRW S DFN="",U="^" W !! S DIC="^FBAAA(",DIC(0)="AEMQZ",DIC("A")="Select Patient: " D ^DIC K DIC("A"),DIC("S") Q:Y<0  S (D0,DFN)=+Y
"RTN","FBAAUTL1",17,0)
 Q
"RTN","FBAAUTL1",18,0)
GETAUTH S CNT=0,FTP="" N FB,FBFDT
"RTN","FBAAUTL1",19,0)
 I '$D(^FBAAA(DFN,1)) W !!,"PATIENT HAS NO AUTHORIZATIONS " Q
"RTN","FBAAUTL1",20,0)
 S FBPROG=$S($D(FBPROG):FBPROG,1:"I 1")
"RTN","FBAAUTL1",21,0)
 S FBFDT=9999999 F  S FBFDT=$O(^FBAAA(DFN,1,"B",FBFDT),-1) Q:'FBFDT  D
"RTN","FBAAUTL1",22,0)
 . S I=0 F  S I=$O(^FBAAA(DFN,1,"B",FBFDT,I)) Q:'I  I $D(^FBAAA(DFN,1,I,0)) X FBPROG I  S CNT=CNT+1,CNT(CNT)=I
"RTN","FBAAUTL1",23,0)
 S PI="" D HOME^%ZIS D ^FBAADEM
"RTN","FBAAUTL1",24,0)
 I CNT<1 W !!,"Veteran does NOT have an Authorization for the Fee Program being used !!" G Q
"RTN","FBAAUTL1",25,0)
RD I CNT=1 S DIR(0)="Y",DIR("A")="Is this the correct Authorization period (Y/N)",DIR("B")="Yes" D ^DIR K DIR G:Y=0!($D(DIRUT)) NOAUTH S X=1 G 2
"RTN","FBAAUTL1",26,0)
CHOOS W !! S DIR(0)="N^1:"_CNT D ^DIR K DIR S X=+Y Q:$D(DUOUT)  G H^XUS:$D(DTOUT)
"RTN","FBAAUTL1",27,0)
2 S (FTP,X)=CNT(X),FB=$G(^FBAAA(DFN,1,X,0)),FBAABDT=$P(FB,"^"),FBAAEDT=$P(FB,"^",2),FBTYPE=$P(FB,"^",3),TA=$P(FB,"^",11),FBTT=$P(FB,"^",13),FBPOV=$P(FB,"^",7),FBPT=$P(FB,"^",18),FBPSA=$P(FB,"^",5),FBVEN=$P(FB,"^",4),FB7078=""
"RTN","FBAAUTL1",28,0)
 I $P(FB,"^",9)[";FB7078(" S FB7078=+$P(FB,"^",9)
"RTN","FBAAUTL1",29,0)
 I $P(FB,"^",9)[";FB583(" S FB583=+$P(FB,"^",9)
"RTN","FBAAUTL1",30,0)
 S FBDMRA=$G(^FBAAA(DFN,1,X,"ADEL")) I FBDMRA']"" K FBDMRA
"RTN","FBAAUTL1",31,0)
 S FBASSOC=X
"RTN","FBAAUTL1",32,0)
 I FB7078]"" S FBVEN=+$P($G(^FB7078(+FB7078,0)),U,2)
"RTN","FBAAUTL1",33,0)
 S FBCNTRA=$P(FB,"^",22)
"RTN","FBAAUTL1",34,0)
Q Q
"RTN","FBAAUTL1",35,0)
GETAUTHK ; kill new authorization variables output from GETAUTH
"RTN","FBAAUTL1",36,0)
 K FBCNTRA
"RTN","FBAAUTL1",37,0)
 Q
"RTN","FBAAUTL1",38,0)
DAYS ;CALCULATES THE NUMBER OF DAYS IN MONTH
"RTN","FBAAUTL1",39,0)
 S X1=X,X=+$E(X,4,5),X=$S("^1^3^5^7^8^10^12^"[("^"_X_"^"):31,X=2:28,1:30)
"RTN","FBAAUTL1",40,0)
 I X=28 D
"RTN","FBAAUTL1",41,0)
 . N YEAR
"RTN","FBAAUTL1",42,0)
 . S YEAR=$E(X1,1,3)+1700
"RTN","FBAAUTL1",43,0)
 . I $S(YEAR#400=0:1,YEAR#4=0&'(YEAR#100=0):1,1:0) S X=29
"RTN","FBAAUTL1",44,0)
 Q
"RTN","FBAAUTL1",45,0)
DATCK2 I $D(FBAABDT),$D(FBAAEDT),Y<FBAABDT!(Y\1>FBAAEDT) W !!,*7,"Date ",$S(Y<FBAABDT:"prior to ",1:"later than "),"Authorization period",! K X Q
"RTN","FBAAUTL1",46,0)
 I $D(FBTRT),$D(FBLTD),(9999999.999999-Y)'<FBLTD W !,*7,"There is already an existing admission for this authorization!",! K X
"RTN","FBAAUTL1",47,0)
 Q
"RTN","FBAAUTL1",48,0)
DATCK3 I $D(FBLTTYP),FBLTTYP]"",FBLTTYP<4,(X-3)'=FBLTTYP W !!,*7,"That transfer type NOT consistent with last transfer type!",! K X
"RTN","FBAAUTL1",49,0)
 I $D(FBLTT),FBLTT="A",X>3 W !!,*7,"A 'Transfer From' type transaction can only follow a 'Transfer To' type!",! K X
"RTN","FBAAUTL1",50,0)
 Q
"RTN","FBAAUTL1",51,0)
WRONGT ;WRONG TYPE OF AUTHORIZATION SELECTED
"RTN","FBAAUTL1",52,0)
 W !!,"Authorization type selected inconsistent with option being used" Q
"RTN","FBAAUTL1",53,0)
GETVEN ;LOOKUP VENDOR
"RTN","FBAAUTL1",54,0)
 W ! S DIC=161.2,DIC(0)="AEQM",IFN="" D ^DIC Q:Y<0  S IFN=+Y Q
"RTN","FBAAUTL1",55,0)
HANG ;IF $E(IOST,1,2)["C-" ASK TO CONTINUE
"RTN","FBAAUTL1",56,0)
 S DIR(0)="E" D ^DIR K DIR S:'Y FBAAOUT=1 Q
"RTN","FBAAUTL1",57,0)
CKOB D STATION^FBAAUTL I $D(FB("ERROR")) K FB("ERROR"),X Q
"RTN","FBAAUTL1",58,0)
 S PRC("SITE")=$S($D(PRC("SITE")):PRC("SITE"),1:FBSN) K FBSN,FBAASN
"RTN","FBAAUTL1",59,0)
 I '$D(^PRC(442,"B",PRC("SITE")_"-"_X)) W !,"This Obligation number does not exist in the IFCAP file!",! K PRC,X
"RTN","FBAAUTL1",60,0)
 Q
"RTN","FBAAUTL1",61,0)
CK1358 ;CHECK TO SEE IF 1358 AVAILABLE
"RTN","FBAAUTL1",62,0)
 ;FBAAOB=FULL OBLIGATION NUMBER (STA-CXXXXX)
"RTN","FBAAUTL1",63,0)
 ;RETURNS Y=1 IF OK
"RTN","FBAAUTL1",64,0)
 S PRCS("X")=FBAAOB,PRCS("TYPE")="FB" D EN3^PRCS58 I Y=-1 W !!,*7,"1358 not available for posting!",! S FBERR=1 Q
"RTN","FBAAUTL1",65,0)
 Q
"RTN","FBAAUTL1",66,0)
NOAUTH S (FTP,X)="" Q
"RTN","FBAAUTL1",67,0)
LOCK W !!,*7,"Queueing has been initiated by another user and is now in progress!",!! Q
"RTN","FBAAUTL1",68,0)
 ;
"RTN","FBAAUTL1",69,0)
XSET ;SET X-REF IN FILE 161.27 FOR LOOK-UP BY SHORT DESCRIPTION
"RTN","FBAAUTL1",70,0)
 S ZZ=^FBAA(161.27,DA,2) D TRANS S ^FBAA(161.27,"C",$E(ZZ,1,30),DA)=""
"RTN","FBAAUTL1",71,0)
 K ZZ Q
"RTN","FBAAUTL1",72,0)
XKILL ;
"RTN","FBAAUTL1",73,0)
 S ZZ=^FBAA(161.27,DA,2) D TRANS K ^FBAA(161.27,"C",$E(ZZ,1,30),DA)
"RTN","FBAAUTL1",74,0)
 K ZZ Q
"RTN","FBAAUTL1",75,0)
 ;
"RTN","FBAAUTL1",76,0)
TRANS ;
"RTN","FBAAUTL1",77,0)
 S ZZ=$TR(ZZ,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","FBAAUTL1",78,0)
 Q
"RTN","FBAAUTL1",79,0)
 ;
"RTN","FBAAUTL1",80,0)
VER() ;no parameters passed
"RTN","FBAAUTL1",81,0)
 ;returns 1 if site is running version 4 of IFCAP
"RTN","FBAAUTL1",82,0)
 ;S X=$G(^DIC(9.4,+$O(^DIC(9.4,"C","PRC",0)),"VERSION"))
"RTN","FBAAUTL1",83,0)
 N X
"RTN","FBAAUTL1",84,0)
 S X=$$VERSION^XPDUTL("PRC")
"RTN","FBAAUTL1",85,0)
 Q $S(+X=4:1,1:0)
"RTN","FBAAUTL1",86,0)
 ;
"RTN","FBAAUTL1",87,0)
ADD ;call to add money back into 1358 when version of IFCAP>3.6
"RTN","FBAAUTL1",88,0)
 ;uses interface ID look-up to get internal entry number
"RTN","FBAAUTL1",89,0)
 ;interface ID = IEN of batch from 161.7
"RTN","FBAAUTL1",90,0)
 ;find ien to 424 by $O(^PRC(424,"E",FBN,0))
"RTN","FBAAUTL1",91,0)
 ;call NOT used for civil hospital/cnh
"RTN","FBAAUTL1",92,0)
 S PRCS("X")=FBAAOB,PRCS("TYPE")="FB" D EN3^PRCS58 I Y=-1 W !!,*7,"1358 not available for posting!",! S FBERR=1 Q
"RTN","FBAAUTL1",93,0)
 N FBADDX S FBADDX=$O(^PRC(424,"E",+$G(FBN),0)) I 'FBADDX S FBERR=1 Q
"RTN","FBAAUTL1",94,0)
 D NOW^%DTC
"RTN","FBAAUTL1",95,0)
 S PRCSX=FBADDX_"^"_%_"^"_FBAAMT_"^"_FBCOMM_"^"_1
"RTN","FBAAUTL1",96,0)
 D ^PRCS58CC I Y'=1 W !!,*7,$P(Y,U,2),! S FBERR=1
"RTN","FBAAUTL1",97,0)
 Q
"RTN","FBAAUTL1",98,0)
 ;
"RTN","FBAAUTL1",99,0)
ASKVET(FBSCR) ; Prompt for patient
"RTN","FBAAUTL1",100,0)
 ; input FBSCR - (optional) screen logic for DIC lookup
"RTN","FBAAUTL1",101,0)
 ;                e.g. I $D(^FBAAC("AH",12,+Y))
"RTN","FBAAUTL1",102,0)
 ; returns IEN of patient in file 161 or 0 if none selected
"RTN","FBAAUTL1",103,0)
 N DIC,FBRET,Y
"RTN","FBAAUTL1",104,0)
 S FBRET=0
"RTN","FBAAUTL1",105,0)
 W !!
"RTN","FBAAUTL1",106,0)
 S DIC="^FBAAA("
"RTN","FBAAUTL1",107,0)
 S DIC(0)="AQEM"
"RTN","FBAAUTL1",108,0)
 S:$G(FBSCR)'="" DIC("S")=FBSCR
"RTN","FBAAUTL1",109,0)
 D ^DIC
"RTN","FBAAUTL1",110,0)
 I Y'<0 S FBRET=+Y
"RTN","FBAAUTL1",111,0)
 Q FBRET
"RTN","FBAAUTL3")
0^45^B4132421^B4051592
"RTN","FBAAUTL3",1,0)
FBAAUTL3 ;AISC/DMK - FEE BASIS UTILITY ROUTINE ;4/20/2012
"RTN","FBAAUTL3",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FBAAUTL3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAAUTL3",4,0)
HDR() ;this is a supported call to be used by IFCAP to determine
"RTN","FBAAUTL3",5,0)
 ;the System Identifier for the 994 code sheets
"RTN","FBAAUTL3",6,0)
 ;Q $S($P($G(^FBAA(161.4,1,1)),U,10)]"":$P(^(1),U,10),1:"FEN")
"RTN","FBAAUTL3",7,0)
 ; switch to FEE for the Subsystem Identifier FB*3.5*132
"RTN","FBAAUTL3",8,0)
 ;Q $S($$VER5():"FEN",1:"FEE")
"RTN","FBAAUTL3",9,0)
 Q "FEE"
"RTN","FBAAUTL3",10,0)
 ;
"RTN","FBAAUTL3",11,0)
POV(X) ;determine ien of pov based on austin code
"RTN","FBAAUTL3",12,0)
 ;INPUT:  X = pov code
"RTN","FBAAUTL3",13,0)
 ;OUTPUT: ien of active record containing passed pov code or 0
"RTN","FBAAUTL3",14,0)
 S:X']"" X=0
"RTN","FBAAUTL3",15,0)
 Q +$O(^FBAA(161.82,"AC",X,0))
"RTN","FBAAUTL3",16,0)
 ;
"RTN","FBAAUTL3",17,0)
RCOMP ;entry point to re-compile templates
"RTN","FBAAUTL3",18,0)
 S:'$D(DTIME) DTIME=300 S U="^"
"RTN","FBAAUTL3",19,0)
 S DIR(0)="Y",DIR("A")="Re-compile FB input templates" D ^DIR K DIR G RCOMPQ:'Y
"RTN","FBAAUTL3",20,0)
 S $P(QQ,"=",81)="" W !!?17,"Recompilation of Fee Basis Input Templates",!,QQ
"RTN","FBAAUTL3",21,0)
 S FBMAX=^DD("ROU") F FBX="FB VENDOR UPDATE","FBAA AUTHORIZATION" S Y=$O(^DIE("B",FBX,0)) Q:'Y  I $D(^DIE(Y,"ROUOLD")),^("ROUOLD")]"",$D(^(0)) S X=$P(^("ROUOLD"),"^"),DMAX=FBMAX D EN^DIEZ
"RTN","FBAAUTL3",22,0)
RCOMPQ ;kill off variables and exit re-compile option
"RTN","FBAAUTL3",23,0)
 K DMAX,FBX,Y,X,QQ,FBMAX
"RTN","FBAAUTL3",24,0)
 Q
"RTN","FBAAUTL3",25,0)
 ;
"RTN","FBAAUTL3",26,0)
UP(X) ;entry point to convert lower case to upper case letters
"RTN","FBAAUTL3",27,0)
 I $G(X)']"" Q 0
"RTN","FBAAUTL3",28,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","FBAAUTL3",29,0)
 ;
"RTN","FBAAUTL3",30,0)
YN ;called from input transform on Yes - No type fields to allow
"RTN","FBAAUTL3",31,0)
 ;a user to enter:
"RTN","FBAAUTL3",32,0)
 ;              1 = Yes     0 = No  stores Y or N
"RTN","FBAAUTL3",33,0)
 ;
"RTN","FBAAUTL3",34,0)
 S X=$E($$UP^FBAAUTL3(X))
"RTN","FBAAUTL3",35,0)
 S X=$S(X:"Y",X="Y":X,X="N":X,X=0:"N",1:2)
"RTN","FBAAUTL3",36,0)
 I X'=2 W "  (",$S(X="Y":"YES",1:"NO"),")" Q
"RTN","FBAAUTL3",37,0)
 W *7,!?4,"NOT A VALID ENTRY!" K X
"RTN","FBAAUTL3",38,0)
 Q
"RTN","FBAAUTL3",39,0)
 ;
"RTN","FBAAUTL3",40,0)
OUTYN ;called from output transform on fields that are defined as Y/N
"RTN","FBAAUTL3",41,0)
 ;
"RTN","FBAAUTL3",42,0)
 S Y=$S(Y="Y":"YES",Y="N":"NO",1:"")
"RTN","FBAAUTL3",43,0)
 Q
"RTN","FBAAUTL3",44,0)
 ;
"RTN","FBAAUTL3",45,0)
VER5() ;returns '1' if site is running version 5 of IFCAP
"RTN","FBAAUTL3",46,0)
 ;used to handle record layouts for FMS payments
"RTN","FBAAUTL3",47,0)
 N X
"RTN","FBAAUTL3",48,0)
 ;S X=$G(^DIC(9.4,+$O(^DIC(9.4,"C","PRC",0)),"VERSION"))
"RTN","FBAAUTL3",49,0)
 S X=$$VERSION^XPDUTL("PRC")
"RTN","FBAAUTL3",50,0)
 Q $S(+X>4:1,1:0)
"RTN","FBAAUTL3",51,0)
 ;
"RTN","FBAAUTL3",52,0)
IDCHK(DFN,AUTH) ;call to check if authorization being paid is
"RTN","FBAAUTL3",53,0)
 ;an ID card.  Called during payment process.
"RTN","FBAAUTL3",54,0)
 ;DFN = patients internal entry number
"RTN","FBAAUTL3",55,0)
 ;AUTH= internal entry number of authorization in 161.
"RTN","FBAAUTL3",56,0)
 ;both are required
"RTN","FBAAUTL3",57,0)
 I $S('$G(DFN):1,'$G(AUTH):1,1:0) Q 0
"RTN","FBAAUTL3",58,0)
 Q $S('$D(^FBAAA(+DFN,1,+AUTH,0)):0,$P(^(0),U,13)=3:1,1:0)
"RTN","FBAAV0")
0^33^B44344317^B43916106
"RTN","FBAAV0",1,0)
FBAAV0 ;AISC/GRR - ELECTRONICALLY TRANSMIT FEE DATA ;3/22/2012
"RTN","FBAAV0",2,0)
 ;;3.5;FEE BASIS;**3,4,55,89,98,116,108,132**;JAN 30, 1995;Build 17
"RTN","FBAAV0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAAV0",4,0)
 K ^TMP($J,"FBAABATCH"),^TMP($J,"FBVADAT") D DT^DICRW
"RTN","FBAAV0",5,0)
 I '$D(^FBAA(161.7,"AC","S")),'$D(^FBAA(161.7,"AC","R")),'$D(^FBAA(161.25,"AE")),$S('$D(^FBAA(161.26,"AC","P")):1,$O(^FBAA(161.26,"AC","P",0))'>0:1,1:0) W !,*7,"There are no transactions requiring transmission",*7 Q
"RTN","FBAAV0",6,0)
 W !!,"This option will transmit all Batches and MRA's ready to be transmitted",!,"to Austin"
"RTN","FBAAV0",7,0)
RD W !! S DIR(0)="Y",DIR("A")="Are you sure you want to continue",DIR("B")="No" D ^DIR K DIR G END:'Y
"RTN","FBAAV0",8,0)
 L +^FBAA(161.7,"AC"):0 G:'$T LOCK^FBAAUTL1
"RTN","FBAAV0",9,0)
 W !!,"The following Batches will be transmitted: " F FBSTAT="S","R" F J=0:0 S J=$O(^FBAA(161.7,"AC",FBSTAT,J)) Q:J'>0  S FBATCH=$G(^FBAA(161.7,J,0)) D
"RTN","FBAAV0",10,0)
 .Q:'+FBATCH
"RTN","FBAAV0",11,0)
 .I (FBSTAT="S"&($P(FBATCH,U,15)="Y"))!(+$P(FBATCH,U,9)) S ^TMP($J,"FBAABATCH",J)="" W !,+FBATCH
"RTN","FBAAV0",12,0)
RTRAN ;Entry from Re-transmit MRA routine
"RTN","FBAAV0",13,0)
 D ADDRESS^FBAAV01 G END:VATERR K VAT
"RTN","FBAAV0",14,0)
 D WAIT^DICD,STATION^FBAAUTL,HD^FBAAUTL I $D(FB("ERROR")) G END
"RTN","FBAAV0",15,0)
 S TOTSTR=0,$P(PAD," ",200)=" "
"RTN","FBAAV0",16,0)
 D ^FBAAV1:$D(^FBAA(161.25,"AE"))
"RTN","FBAAV0",17,0)
 D ^FBAAV4:$D(^FBAA(161.26,"AC","P"))
"RTN","FBAAV0",18,0)
 F J=0:0 S J=$O(^TMP($J,"FBAABATCH",J)) Q:J'>0  I $D(^FBAA(161.7,J,0)) S Y(0)=^(0) D SET1,DET:FBAABT="B3",DETP^FBAAV2:FBAABT="B5",DETT^FBAAV3:FBAABT="B2",^FBAAV5:FBAABT="B9"
"RTN","FBAAV0",19,0)
END L -^FBAA(161.7,"AC") D KILL^FBAAV1 Q
"RTN","FBAAV0",20,0)
SET1 ; build the payment batch header string (used by all four formats)
"RTN","FBAAV0",21,0)
 S FBAABN=$P(Y(0),"^",1),FBAABN=$E("00000",$L(FBAABN)+1,5)_FBAABN
"RTN","FBAAV0",22,0)
 S FBAAON=$E($P(Y(0),"^",2),3,6)
"RTN","FBAAV0",23,0)
 S FBAACD=$$AUSDT^FBAAV3(DT)
"RTN","FBAAV0",24,0)
 S FBAACP=$E($P(Y(0),"^",2),1,2)
"RTN","FBAAV0",25,0)
 S FBAABT=$P(Y(0),"^",3)
"RTN","FBAAV0",26,0)
 S FBAAAP=$$AUSAMT^FBAAV3($P(Y(0),"^",9),11)
"RTN","FBAAV0",27,0)
 S FBSTAT=$P(^FBAA(161.7,J,"ST"),"^")
"RTN","FBAAV0",28,0)
 S FBCHB=$P(Y(0),"^",15)
"RTN","FBAAV0",29,0)
 S FBEXMPT=$P(Y(0),"^",18)
"RTN","FBAAV0",30,0)
 S X=$$SUB^FBAAUTL5(+$P(Y(0),U,8)_"-"_$P(Y(0),U,2))
"RTN","FBAAV0",31,0)
 S FBAASN=$$LJ^XLFSTR($S(X]"":X,1:FBAASN),6," ")
"RTN","FBAAV0",32,0)
 I FBSTAT="R"!(FBSTAT="S"&(FBCHB'["Y"))!(FBSTAT="S"&($G(FBEXMPT)="Y")) S FBSTR=FBHD_$S(FBAABT="B2":"BT",1:FBAABT)_FBAACD_FBAASN_FBAABN_" "_FBAAAP_FBAACP_" $"
"RTN","FBAAV0",33,0)
 Q
"RTN","FBAAV0",34,0)
DET ;entry point to process B3 (outpatient/ancillary) batch
"RTN","FBAAV0",35,0)
 ; input (partial list)
"RTN","FBAAV0",36,0)
 ;   J      - Batch IEN in file 161.7
"RTN","FBAAV0",37,0)
 ;   FBAAON - last 4 of obligation number
"RTN","FBAAV0",38,0)
 ;   FBAASN - station number (formatted)
"RTN","FBAAV0",39,0)
 S FBTXT=0
"RTN","FBAAV0",40,0)
 D CKB3V^FBAAV01 I $G(FBERR) K FBERR Q
"RTN","FBAAV0",41,0)
 ; HIPAA 5010 - line items that have 0.00 amount paid are now required to go to Central Fee
"RTN","FBAAV0",42,0)
 ;F K=0:0 S K=$O(^FBAAC("AC",J,K)) Q:K'>0  F L=0:0 S L=$O(^FBAAC("AC",J,K,L)) Q:L'>0  F M=0:0 S M=$O(^FBAAC("AC",J,K,L,M)) Q:M'>0  F N=0:0 S N=$O(^FBAAC("AC",J,K,L,M,N)) Q:N'>0  S Y(0)=$G(^FBAAC(K,1,L,1,M,1,N,0)) I Y(0)]"",+$P(Y(0),U,3) D
"RTN","FBAAV0",43,0)
 F K=0:0 S K=$O(^FBAAC("AC",J,K)) Q:K'>0  F L=0:0 S L=$O(^FBAAC("AC",J,K,L)) Q:L'>0  F M=0:0 S M=$O(^FBAAC("AC",J,K,L,M)) Q:M'>0  F N=0:0 S N=$O(^FBAAC("AC",J,K,L,M,N)) Q:N'>0  S Y(0)=$G(^FBAAC(K,1,L,1,M,1,N,0)) I Y(0)]"" D
"RTN","FBAAV0",44,0)
 .N FBDTSR1,FBPICN
"RTN","FBAAV0",45,0)
 .S FBDTSR1=+$G(^FBAAC(K,1,L,1,M,0))
"RTN","FBAAV0",46,0)
 .S FBPICN=K_U_L_U_M_U_N
"RTN","FBAAV0",47,0)
 .S FBPICN=$$ORGICN^FBAAVR5(162.03,FBPICN)
"RTN","FBAAV0",48,0)
 .S FBY=$G(^FBAAC(K,1,L,1,M,1,N,2))
"RTN","FBAAV0",49,0)
 .S FBY3=$G(^FBAAC(K,1,L,1,M,1,N,3))
"RTN","FBAAV0",50,0)
 .I 'FBTXT S FBTXT=1 D NEWMSG^FBAAV01,STORE^FBAAV01,UPD
"RTN","FBAAV0",51,0)
 .D GOT
"RTN","FBAAV0",52,0)
 ;
"RTN","FBAAV0",53,0)
 D:FBTXT XMIT^FBAAV01
"RTN","FBAAV0",54,0)
 Q
"RTN","FBAAV0",55,0)
 ;
"RTN","FBAAV0",56,0)
GOT ; process a B3 line item
"RTN","FBAAV0",57,0)
 ;
"RTN","FBAAV0",58,0)
 N DFN,FBADJ,FBADJA1,FBADJA2,FBADJR1,FBADJR2,FBADMIT,FBAUTHF,FBIENS
"RTN","FBAAV0",59,0)
 N FBMOD1,FBMOD2,FBMOD3,FBMOD4,FBPNAMX,FBUNITS,FBX,FBNPI
"RTN","FBAAV0",60,0)
 N FBCSID,FBEDIF,FBCNTRN
"RTN","FBAAV0",61,0)
 ;
"RTN","FBAAV0",62,0)
 S FBIENS=N_","_M_","_L_","_K_","
"RTN","FBAAV0",63,0)
 ;
"RTN","FBAAV0",64,0)
 S FBEDIF=$S($P($G(^FBAAC(K,1,L,1,M,1,N,3)),"^")]"":"Y",1:" ") ;EDI flag
"RTN","FBAAV0",65,0)
 ; get CPT modifiers
"RTN","FBAAV0",66,0)
 D
"RTN","FBAAV0",67,0)
 . N FBMODA,FBMODL
"RTN","FBAAV0",68,0)
 . D MODDATA^FBAAUTL4(K,L,M,N)
"RTN","FBAAV0",69,0)
 . S FBMODL=$$MODL^FBAAUTL4("FBMODA","E")
"RTN","FBAAV0",70,0)
 . S FBMOD1=$$RJ^XLFSTR($P(FBMODL,",",1),5," ")
"RTN","FBAAV0",71,0)
 . S FBMOD2=$$RJ^XLFSTR($P(FBMODL,",",2),5," ")
"RTN","FBAAV0",72,0)
 . S FBMOD3=$$RJ^XLFSTR($P(FBMODL,",",3),5," ")
"RTN","FBAAV0",73,0)
 . S FBMOD4=$$RJ^XLFSTR($P(FBMODL,",",4),5," ")
"RTN","FBAAV0",74,0)
 ;
"RTN","FBAAV0",75,0)
 S FBPAYT=$P(Y(0),"^",20),FBPAYT=$S(FBPAYT]"":FBPAYT,1:"V")
"RTN","FBAAV0",76,0)
 ;
"RTN","FBAAV0",77,0)
 S FBVID=$P($G(^FBAAV(L,0)),U,2)
"RTN","FBAAV0",78,0)
 S FBVID=FBVID_$E(PAD,$L(FBVID)+1,11)
"RTN","FBAAV0",79,0)
 S:FBPAYT="R" FBVID=$E(PAD,1,11)
"RTN","FBAAV0",80,0)
 S FBNPI=$$EN^FBNPILK(L)  ;SET THE NPI TO BE PASSED TO FBAAV01,FBAAV2,FBAAV5
"RTN","FBAAV0",81,0)
 ;
"RTN","FBAAV0",82,0)
 D POV^FBAAUTL2
"RTN","FBAAV0",83,0)
 S POV=$S(POV']"":"",POV="A":6,POV="B":7,POV="C":8,POV="D":9,POV="E":10,1:POV)
"RTN","FBAAV0",84,0)
 S POV=$S(POV']"":99,$D(^FBAA(161.82,POV,0)):$P(^(0),"^",3),1:99)
"RTN","FBAAV0",85,0)
 S FBPOV=POV
"RTN","FBAAV0",86,0)
 S FBTT=$S(FBTT]"":FBTT,1:1)
"RTN","FBAAV0",87,0)
 S FBCPT=$$CPT^FBAAUTL4($P(Y(0),"^")),FBCPT=$S($L(FBCPT)=5:FBCPT,1:"     ")
"RTN","FBAAV0",88,0)
 S FBPSA=$$PSA^FBAAV5(+$P(Y(0),U,12),+FBAASN) I $L(+FBPSA)'=3 S FBPSA=999
"RTN","FBAAV0",89,0)
 S FBPATT=$P(Y(0),"^",17),FBPATT=$S(FBPATT]"":FBPATT,1:10)
"RTN","FBAAV0",90,0)
 S FBTD=$$AUSDT^FBAAV3(FBDTSR1) ; formatted treatment date
"RTN","FBAAV0",91,0)
 S FBSUSP=$P(Y(0),"^",5),FBSUSP=$S(FBSUSP]"":FBSUSP,1:" ")
"RTN","FBAAV0",92,0)
 S FBSUSP=$S(FBSUSP=" ":" ",$D(^FBAA(161.27,+FBSUSP,0)):$P(^(0),"^"),1:" ")
"RTN","FBAAV0",93,0)
 S FBAP=$$AUSAMT^FBAAV3($P(Y(0),"^",3),8) ; amount paid
"RTN","FBAAV0",94,0)
 S FBPOS=+$P(Y(0),"^",25),FBPOS=$S(FBPOS:$P(^IBE(353.1,FBPOS,0),"^"),1:"  ")
"RTN","FBAAV0",95,0)
 S FBHCFA=+$P(Y(0),"^",26),FBHCFA=$S(FBHCFA:$P(^IBE(353.2,FBHCFA,0),"^"),1:""),FBHCFA=$E(PAD,$L(FBHCFA)+1,2)_FBHCFA
"RTN","FBAAV0",96,0)
 S FBVTOS=+$P(Y(0),"^",24),FBVTOS=$S(FBVTOS:$P(^FBAA(163.85,FBVTOS,0),"^",2),1:"  ")
"RTN","FBAAV0",97,0)
 S FBPD=+$P(Y(0),"^",23),FBPD=$S(FBPD:$$ICD9^FBCSV1(FBPD,$G(FBDTSR1)),1:""),FBPD=$E(PAD,$L(FBPD)+1,7)_FBPD
"RTN","FBAAV0",98,0)
 S FBINVN=$P(Y(0),"^",16)
"RTN","FBAAV0",99,0)
 S FBINVN=$E("000000000",$L(FBINVN)+1,9)_FBINVN
"RTN","FBAAV0",100,0)
 S FBAUTHF=$S($P(Y(0),U,13)["FB583":"U",1:"A") ; auth/unauth flag
"RTN","FBAAV0",101,0)
 S FBDIN=$$AUSDT^FBAAV3($P(Y(0),"^",15)) ; invoice date rec'd
"RTN","FBAAV0",102,0)
 S FBADMIT=$$AUSDT^FBAAV3($$B3ADMIT(FBIENS)) ; formatted admission date
"RTN","FBAAV0",103,0)
 ;
"RTN","FBAAV0",104,0)
 S VAPA("P")=""
"RTN","FBAAV0",105,0)
 S DFN=K
"RTN","FBAAV0",106,0)
 ; Note - before this point Y(0) was the 0 node of subfile #162.03
"RTN","FBAAV0",107,0)
 ;      - after this point Y(0) will be the 0 node of file #2
"RTN","FBAAV0",108,0)
 S Y(0)=$G(^DPT(+K,0)) Q:Y(0)']""
"RTN","FBAAV0",109,0)
 D PAT^FBAAUTL2
"RTN","FBAAV0",110,0)
 ; obtain date of birth, must follow call to PAT^FBAAUTL2 to overwrite 
"RTN","FBAAV0",111,0)
 ; the value returned from it
"RTN","FBAAV0",112,0)
 S FBDOB=$$AUSDT^FBAAV3($P(Y(0),"^",3)) ; date of birth
"RTN","FBAAV0",113,0)
 D ADD^VADPT
"RTN","FBAAV0",114,0)
 S FBPNAMX=$$HL7NAME^FBAAV2(DFN) ; patient name
"RTN","FBAAV0",115,0)
 S FBUNITS=$P(FBY,U,14)
"RTN","FBAAV0",116,0)
 S:FBUNITS<1 FBUNITS=1
"RTN","FBAAV0",117,0)
 S FBUNITS=$$RJ^XLFSTR(FBUNITS,5,0) ; volume indicator (units paid)
"RTN","FBAAV0",118,0)
 S FBCSID=$$LJ^XLFSTR($P(FBY,"^",16),20," ") ; patient acct #
"RTN","FBAAV0",119,0)
 D
"RTN","FBAAV0",120,0)
 . N FBCNTRP
"RTN","FBAAV0",121,0)
 . S FBCNTRP=$P(FBY3,"^",8)
"RTN","FBAAV0",122,0)
 . S FBCNTRN=$S(FBCNTRP:$P($G(^FBAA(161.43,FBCNTRP,0)),"^"),1:"")
"RTN","FBAAV0",123,0)
 . S FBCNTRN=$$LJ^XLFSTR(FBCNTRN,20," ") ; contract number
"RTN","FBAAV0",124,0)
 ;
"RTN","FBAAV0",125,0)
 ; get and format adjustment reason codes and amounts (if any)
"RTN","FBAAV0",126,0)
 D LOADADJ^FBAAFA(FBIENS,.FBADJ)
"RTN","FBAAV0",127,0)
 S FBX=$$ADJL^FBUTL2(.FBADJ)
"RTN","FBAAV0",128,0)
 S FBADJR1=$$RJ^XLFSTR($P(FBX,U,1),5," ")
"RTN","FBAAV0",129,0)
 S FBADJA1=$$AUSAMT^FBAAV3($P(FBX,U,3),9,1)
"RTN","FBAAV0",130,0)
 S FBADJR2=$$RJ^XLFSTR($P(FBX,U,4),5," ")
"RTN","FBAAV0",131,0)
 S FBADJA2=$$AUSAMT^FBAAV3($P(FBX,U,6),9,1)
"RTN","FBAAV0",132,0)
 K FBADJ,FBX
"RTN","FBAAV0",133,0)
 ;
"RTN","FBAAV0",134,0)
 S FBST=$S($P(VAPA(5),"^")="":"  ",$D(^DIC(5,$P(VAPA(5),"^"),0)):$P(^(0),"^",2),1:"  ")
"RTN","FBAAV0",135,0)
 I $L(FBST)>2 S FBST="**"
"RTN","FBAAV0",136,0)
 S:$L(FBST)'=2 FBST=$E(PAD,$L(FBST)+1,2)_FBST
"RTN","FBAAV0",137,0)
 S FBCTY=$S($P(VAPA(7),"^",1)="":"   ",FBST="  ":"   ",$D(^DIC(5,$P(VAPA(5),"^"),1,$P(VAPA(7),"^"),0)):$P(^(0),"^",3),1:"   ")
"RTN","FBAAV0",138,0)
 I $L(FBCTY)'=3 S FBCTY=$E("000",$L(FBCTY)+1,3)_FBCTY
"RTN","FBAAV0",139,0)
 S FBZIP=$S('+$G(VAPA(11)):VAPA(6),+VAPA(11):$P(VAPA(11),U),1:VAPA(6)),FBZIP=$TR(FBZIP,"-","")_$E("000000000",$L(FBZIP)+1,9)
"RTN","FBAAV0",140,0)
 D STRING^FBAAV01
"RTN","FBAAV0",141,0)
 Q
"RTN","FBAAV0",142,0)
 ;
"RTN","FBAAV0",143,0)
UPD ; update the batch file
"RTN","FBAAV0",144,0)
 N Y
"RTN","FBAAV0",145,0)
 S DA=J,(DIC,DIE)="^FBAA(161.7,"
"RTN","FBAAV0",146,0)
 S DR="11////^S X=""T"";12////^S X=DT"
"RTN","FBAAV0",147,0)
 D ^DIE
"RTN","FBAAV0",148,0)
 Q
"RTN","FBAAV0",149,0)
 ;
"RTN","FBAAV0",150,0)
STORE D STORE^FBAAV01 Q
"RTN","FBAAV0",151,0)
 ;
"RTN","FBAAV0",152,0)
B3ADMIT(FBIENS) ; Determine Admission Date for a B3 payment line item
"RTN","FBAAV0",153,0)
 ; input
"RTN","FBAAV0",154,0)
 ;   FBIENS - IENS (FileMan format) for subfile 162.03 entry
"RTN","FBAAV0",155,0)
 ; returns admission date in internal FileMan format or null value
"RTN","FBAAV0",156,0)
 ;
"RTN","FBAAV0",157,0)
 N FB7078,FBRET
"RTN","FBAAV0",158,0)
 S FBRET=""
"RTN","FBAAV0",159,0)
 S FB7078=$$GET1^DIQ(162.03,FBIENS,27,"I") ; associated 7078/583
"RTN","FBAAV0",160,0)
 ; (the unauthorized ancillary claims will have the treatment date
"RTN","FBAAV0",161,0)
 ;  instead of the inpatient admission date so nothing is sent to
"RTN","FBAAV0",162,0)
 ;  Austin for them)
"RTN","FBAAV0",163,0)
 ;
"RTN","FBAAV0",164,0)
 ; if line items points to a 7078 authorization then return a date
"RTN","FBAAV0",165,0)
 I $P(FB7078,";",2)="FB7078(" D
"RTN","FBAAV0",166,0)
 . N FBY
"RTN","FBAAV0",167,0)
 . S FBY=$G(^FB7078(+FB7078,0))
"RTN","FBAAV0",168,0)
 . ; if fee program is civil hospital then return 7078 date of admission
"RTN","FBAAV0",169,0)
 . I $P(FBY,U,11)=6 S FBRET=$P(FBY,U,15)
"RTN","FBAAV0",170,0)
 . ; if fee program is CNH then return 7078 authorized from date
"RTN","FBAAV0",171,0)
 . I $P(FBY,U,11)=7 S FBRET=$P(FBY,U,4)
"RTN","FBAAV0",172,0)
 ;
"RTN","FBAAV0",173,0)
 Q FBRET
"RTN","FBAAV3")
0^34^B3409907^B3282866
"RTN","FBAAV3",1,0)
FBAAV3 ;AISC/GRR - CREATE & ELECTRONICALLY TRANSMIT TRANSACTIONS FOR TRAVEL PAYMENTS ;3/23/2012
"RTN","FBAAV3",2,0)
 ;;3.5;FEE BASIS;**3,89,116,132**;JAN 30, 1995;Build 17
"RTN","FBAAV3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAAV3",4,0)
DETT ; process a travel batch
"RTN","FBAAV3",5,0)
 S FBTXT=0
"RTN","FBAAV3",6,0)
 ; HIPAA 5010 - line items that have 0.00 amount paid are now required to go to Central Fee
"RTN","FBAAV3",7,0)
 ;F K=0:0 S K=$O(^FBAAC("AD",J,K)) Q:K'>0  F L=0:0 S L=$O(^FBAAC("AD",J,K,L)) Q:L'>0  S Y(0)=$G(^FBAAC(K,3,L,0)) I Y(0)]"",+$P(Y(0),U,3) D
"RTN","FBAAV3",8,0)
 F K=0:0 S K=$O(^FBAAC("AD",J,K)) Q:K'>0  F L=0:0 S L=$O(^FBAAC("AD",J,K,L)) Q:L'>0  S Y(0)=$G(^FBAAC(K,3,L,0)) I Y(0)]"" D
"RTN","FBAAV3",9,0)
 .S FBPICN=K_U_L
"RTN","FBAAV3",10,0)
 .S FBPICN=$$ORGICN^FBAAVR5(162.04,FBPICN)
"RTN","FBAAV3",11,0)
 .I 'FBTXT S FBTXT=1 D NEWMSG^FBAAV01,STORE^FBAAV01,UPD^FBAAV0
"RTN","FBAAV3",12,0)
 .D GOT
"RTN","FBAAV3",13,0)
 D:FBTXT XMIT^FBAAV01 Q
"RTN","FBAAV3",14,0)
GOT ; process a travel line item
"RTN","FBAAV3",15,0)
 N DFN,FBPNAMX
"RTN","FBAAV3",16,0)
 S FBTD=$$AUSDT($P(Y(0),U))
"RTN","FBAAV3",17,0)
 S FBAP=$$AUSAMT($P(Y(0),"^",3),8)
"RTN","FBAAV3",18,0)
 S DFN=K
"RTN","FBAAV3",19,0)
 Q:'DFN
"RTN","FBAAV3",20,0)
 Q:'$D(^DPT(DFN,0))
"RTN","FBAAV3",21,0)
 ; Note: Prior to the following line Y(0) = 0 node of subfile #162.04
"RTN","FBAAV3",22,0)
 ;       After the line, Y(0) will = 0 node of file #2
"RTN","FBAAV3",23,0)
 S Y(0)=^DPT(DFN,0)
"RTN","FBAAV3",24,0)
 D PAT^FBAAUTL2
"RTN","FBAAV3",25,0)
 S FBPNAMX=$$HL7NAME^FBAAV4(DFN) ; formatted patient name
"RTN","FBAAV3",26,0)
 S FBSTR="T"_FBAASN_FBSSN_"T"_FBPNAMX_FBAP_FBAAON_FBTD_"0"_$E(PAD,1,8)
"RTN","FBAAV3",27,0)
 S FBSTR=FBSTR_$$PADZ^FBAAV01(FBPICN,30)_FBTD_"$"
"RTN","FBAAV3",28,0)
 D STORE^FBAAV01
"RTN","FBAAV3",29,0)
 K FBPICN
"RTN","FBAAV3",30,0)
 Q
"RTN","FBAAV3",31,0)
 ;
"RTN","FBAAV3",32,0)
AUSDT(FBDT) ;called to format date from VA FileMan internal to YYYYMMDD
"RTN","FBAAV3",33,0)
 ; if input date is blank or invalid, eight spaces will be returned
"RTN","FBAAV3",34,0)
 ;
"RTN","FBAAV3",35,0)
 N FBRET
"RTN","FBAAV3",36,0)
 S:FBDT FBRET=$$FMTHL7^XLFDT($P(FBDT,"."))
"RTN","FBAAV3",37,0)
 S:$G(FBRET)=""!($G(FBRET)<0) FBRET="        "
"RTN","FBAAV3",38,0)
 Q FBRET
"RTN","FBAAV3",39,0)
 ;
"RTN","FBAAV3",40,0)
AUSAMT(FBAMT,FBL,FBS) ; called to format signed dollar amount for Austin
"RTN","FBAAV3",41,0)
 ; input
"RTN","FBAAV3",42,0)
 ;   FBAMT - dollar amount
"RTN","FBAAV3",43,0)
 ;   FBL   - (optional) length of return sting 
"RTN","FBAAV3",44,0)
 ;   FBS   - (optional) =true(1) if return value could be negative (-)
"RTN","FBAAV3",45,0)
 ;           default is false (0)
"RTN","FBAAV3",46,0)
 ; result
"RTN","FBAAV3",47,0)
 ;   string value, right justified, 0 padded, decimal point removed,
"RTN","FBAAV3",48,0)
 ;   with rightmost 2 numeric characters the cents
"RTN","FBAAV3",49,0)
 ;   if FBS true then rightmost character indicate the sign (' ' or '-')
"RTN","FBAAV3",50,0)
 ;   example with FBS false: 12.41 with length 8 would return '00001241'
"RTN","FBAAV3",51,0)
 ;   example with FBS true:  12.41 with length 9 would return '00001241 '
"RTN","FBAAV3",52,0)
 ;   example with FBS true: -12.41 with length 9 would return '00001241-'
"RTN","FBAAV3",53,0)
 ;
"RTN","FBAAV3",54,0)
 N FBRET
"RTN","FBAAV3",55,0)
 ;
"RTN","FBAAV3",56,0)
 ; use absolute value
"RTN","FBAAV3",57,0)
 S FBRET=$S(FBAMT<0:-FBAMT,1:FBAMT)
"RTN","FBAAV3",58,0)
 ;
"RTN","FBAAV3",59,0)
 ; format with 2 decimals places
"RTN","FBAAV3",60,0)
 S FBRET=$FN(FBRET,"",2)
"RTN","FBAAV3",61,0)
 ;
"RTN","FBAAV3",62,0)
 ; remove the decimal point
"RTN","FBAAV3",63,0)
 S FBRET=$TR(FBRET,".","")
"RTN","FBAAV3",64,0)
 ;
"RTN","FBAAV3",65,0)
 ; add the suffix denoting the sign when applicable (when FBS true)
"RTN","FBAAV3",66,0)
 S FBRET=FBRET_$S('$G(FBS):"",FBAMT<0:"-",1:" ")
"RTN","FBAAV3",67,0)
 ;
"RTN","FBAAV3",68,0)
 ; right justify and 0 pad
"RTN","FBAAV3",69,0)
 S FBRET=$$RJ^XLFSTR(FBRET,$G(FBL),"0")
"RTN","FBAAV3",70,0)
 ;
"RTN","FBAAV3",71,0)
 ; return result
"RTN","FBAAV3",72,0)
 Q FBRET
"RTN","FBAAV3",73,0)
 ;
"RTN","FBAAV3",74,0)
 ;FBAAV3
"RTN","FBAAVR")
0^6^B27838493^B17172017
"RTN","FBAAVR",1,0)
FBAAVR ;AISC/GRR,SAB - FINALIZE BATCH ;4/16/2012
"RTN","FBAAVR",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FBAAVR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAAVR",4,0)
 S Q="",$P(Q,"=",80)="=",IOP=$S($D(ION):ION,1:"HOME") D ^%ZIS
"RTN","FBAAVR",5,0)
 D DT^DICRW
"RTN","FBAAVR",6,0)
 I '$D(^XUSEC("FBAAREJECT",DUZ)),'$D(^XUSEC("FBAAFINANCE")) W !!,*7,"Sorry, you must hold security key FBAAREJECT or FBAAFINANCE!" G Q
"RTN","FBAAVR",7,0)
 ;
"RTN","FBAAVR",8,0)
BT ; select batch
"RTN","FBAAVR",9,0)
 S FBINTOT=0 K QQ W !!
"RTN","FBAAVR",10,0)
 K DIC S DIC="^FBAA(161.7,",DIC(0)="AEQ",DIC("S")="I $G(^(""ST""))=""F"""
"RTN","FBAAVR",11,0)
 D ^DIC K DIC("S") G Q:X="^"!(X=""),BT:Y<0
"RTN","FBAAVR",12,0)
 L +^FBAA(161.7,+Y):$G(DILOCKTM,3)
"RTN","FBAAVR",13,0)
 I '$T W !,"Another user is editing this batch.  Try again later." G Q
"RTN","FBAAVR",14,0)
 S FBN=+Y
"RTN","FBAAVR",15,0)
 I $G(^FBAA(161.7,FBN,"ST"))'="F" W !,$C(7),"Batch status must be CENTRAL FEE ACCEPTED!" G DONE
"RTN","FBAAVR",16,0)
 S FZ=^FBAA(161.7,FBN,0),FBTYPE=$P(FZ,"^",3)
"RTN","FBAAVR",17,0)
 S FBAAB=$P(FZ,"^"),FBAAON=$P(FZ,"^",2),FBAAOB=$P(FZ,"^",8)_"-"_FBAAON
"RTN","FBAAVR",18,0)
 I FBTYPE="B9",$P(FZ,"^",15)="" S FBCNH=1
"RTN","FBAAVR",19,0)
 S (FBRFLAG,FBAARA)=0
"RTN","FBAAVR",20,0)
 ;
"RTN","FBAAVR",21,0)
 ; display batch
"RTN","FBAAVR",22,0)
 S DIC="^FBAA(161.7,",DA=FBN,DR="0:1;ST" W !! D EN^DIQ
"RTN","FBAAVR",23,0)
 ;
"RTN","FBAAVR",24,0)
 ; check for split invoice
"RTN","FBAAVR",25,0)
 I FBTYPE="B3" D CHKSPLT^FBAAVR3
"RTN","FBAAVR",26,0)
 ;
"RTN","FBAAVR",27,0)
BTL S B=FBN S DIR(0)="Y",DIR("A")="Want line items listed",DIR("B")="NO" D ^DIR K DIR G Q:$D(DIRUT) W:Y @IOF D:Y LIST^FBAACCB:FBTYPE="B3",LISTP^FBAACCB:FBTYPE="B5",LISTT^FBAACCB0:FBTYPE="B2",LISTC^FBAACCB1:FBTYPE="B9"
"RTN","FBAAVR",28,0)
 ;
"RTN","FBAAVR",29,0)
RD0 ; local reject functionality
"RTN","FBAAVR",30,0)
 I '$D(^XUSEC("FBAAREJECT",DUZ)) W !,"Skipping reject function because key not held." G RDD
"RTN","FBAAVR",31,0)
 ;
"RTN","FBAAVR",32,0)
 S DIR(0)="Y",DIR("A")="Want to reject the entire Batch",DIR("B")="NO",DIR("?")="'Yes' will flag all payment items in batch as rejected, 'No' will prompt for rejection of specific line items." D ^DIR K DIR G Q:$D(DIRUT),^FBAADD:Y
"RTN","FBAAVR",33,0)
 ;
"RTN","FBAAVR",34,0)
 I FBTYPE="B3",$D(FBLNLST) D  G Q:$D(DIRUT),SPLIT^FBAAVR2:Y
"RTN","FBAAVR",35,0)
 . S DIR(0)="Y"
"RTN","FBAAVR",36,0)
 . S DIR("A")="Want to reject all line items on split invoices"
"RTN","FBAAVR",37,0)
 . S DIR("B")="NO"
"RTN","FBAAVR",38,0)
 . S DIR("?")="'Yes' will flag all payment items on split invoices as rejected, 'No' will prompt for rejection of specific line items."
"RTN","FBAAVR",39,0)
 . D ^DIR K DIR
"RTN","FBAAVR",40,0)
 ;
"RTN","FBAAVR",41,0)
RD1 S DIR(0)="Y",DIR("A")="Want to reject any line items",DIR("B")="NO" D ^DIR K DIR G Q:$D(DIRUT)
"RTN","FBAAVR",42,0)
 I 'Y G RDD
"RTN","FBAAVR",43,0)
 ; answered yes to reject line items
"RTN","FBAAVR",44,0)
 I $P(FZ,U,11)'>0 G NOLINE^FBAADD
"RTN","FBAAVR",45,0)
 D CK1358^FBAAUTL1 G Q:$D(FBERR)
"RTN","FBAAVR",46,0)
 D DELC^FBAAVR0:FBTYPE="B9"
"RTN","FBAAVR",47,0)
 D DELT^FBAAVR1:FBTYPE="B2"
"RTN","FBAAVR",48,0)
 D DELP^FBAAVR1:FBTYPE="B5"
"RTN","FBAAVR",49,0)
 D DELM^FBAAVR2:FBTYPE="B3"
"RTN","FBAAVR",50,0)
 ;
"RTN","FBAAVR",51,0)
RD2 ; update obligation for rejected lines that are posted by batch
"RTN","FBAAVR",52,0)
 I FBRFLAG D
"RTN","FBAAVR",53,0)
 . N FBX
"RTN","FBAAVR",54,0)
 . S FBRFLAG=0
"RTN","FBAAVR",55,0)
 . Q:FBAARA'>0
"RTN","FBAAVR",56,0)
 . S FBX=$$POSTBAT^FB1358(FBN,FBAARA,"R")
"RTN","FBAAVR",57,0)
 . I 'FBX D
"RTN","FBAAVR",58,0)
 . . W !,"Error posting $"_$FN(FBAARA,",",2)_" to 1358 for batch "_FBAAB
"RTN","FBAAVR",59,0)
 . . W !,"  "_$P(FBX,"^",2)
"RTN","FBAAVR",60,0)
 ;
"RTN","FBAAVR",61,0)
 ; display batch
"RTN","FBAAVR",62,0)
 S DIC="^FBAA(161.7,",DA=FBN,DR="0:1;ST" W !! D EN^DIQ
"RTN","FBAAVR",63,0)
 ;
"RTN","FBAAVR",64,0)
RDD ; finalize batch functionality
"RTN","FBAAVR",65,0)
 I '$D(^XUSEC("FBAAFINANCE",DUZ)) W !,"Skipping finalize function because key not held." G DONE
"RTN","FBAAVR",66,0)
 ;
"RTN","FBAAVR",67,0)
 ; enforce segregation of duties
"RTN","FBAAVR",68,0)
 I $P(FZ,U,7)=DUZ W $C(7),!,"You released this batch. Per segregation of duties you cannot finalize it." G DONE
"RTN","FBAAVR",69,0)
 ;
"RTN","FBAAVR",70,0)
RDD1 ; ask if batch should be finalized
"RTN","FBAAVR",71,0)
 S DIR(0)="Y",DIR("A")="Do you want to Finalize Batch as Correct"
"RTN","FBAAVR",72,0)
 S DIR("B")="NO"
"RTN","FBAAVR",73,0)
 D ^DIR K DIR G Q:$D(DIRUT)
"RTN","FBAAVR",74,0)
 I 'Y W !!,"Batch has NOT been Finalized!",$C(7) G DONE
"RTN","FBAAVR",75,0)
 ;
"RTN","FBAAVR",76,0)
 ; generate voucher batch message
"RTN","FBAAVR",77,0)
 S FBX=$$VBMSG^FBAAVR5(FBN)
"RTN","FBAAVR",78,0)
 I FBX W !,"Voucher Batch message # "_FBX_" sent to Central Fee."
"RTN","FBAAVR",79,0)
 I 'FBX D  G DONE
"RTN","FBAAVR",80,0)
 . W !,"Error occurred during creation of voucher batch message."
"RTN","FBAAVR",81,0)
 . W !,"  ",$P(FBX,U,2)
"RTN","FBAAVR",82,0)
 . W !!,"Batch has NOT been Finalized!",$C(7)
"RTN","FBAAVR",83,0)
 ;
"RTN","FBAAVR",84,0)
 ; finalize batch
"RTN","FBAAVR",85,0)
 ; update line items
"RTN","FBAAVR",86,0)
 D MEDV:FBTYPE="B3",VCHNH^FBAAVR0:FBTYPE="B9"
"RTN","FBAAVR",87,0)
 ; update batch file
"RTN","FBAAVR",88,0)
 S DA=FBN,DIE="^FBAA(161.7,"
"RTN","FBAAVR",89,0)
 S DR="13////^S X=DT;14////^S X=DUZ;11////^S X=""V"";20////^S X=1"
"RTN","FBAAVR",90,0)
 D ^DIE K DIE,DA
"RTN","FBAAVR",91,0)
 W !!," Batch has been Finalized!"
"RTN","FBAAVR",92,0)
 ;
"RTN","FBAAVR",93,0)
DONE ;
"RTN","FBAAVR",94,0)
 D Q
"RTN","FBAAVR",95,0)
 G FBAAVR
"RTN","FBAAVR",96,0)
 ;
"RTN","FBAAVR",97,0)
Q ; clean-up
"RTN","FBAAVR",98,0)
 I $G(FBN) L -^FBAA(161.7,FBN)
"RTN","FBAAVR",99,0)
 K B,J,K,L,M,X,Y,Z,DIC,ERR,FBN,FBAAOUT,FBAC,FBAP,FBFD,FBPDT,FBSC,FBTD,FBVP,POP,FBRFLAG,Q,QQ,A,A1,A2,DO,DA,DL,DR,DRX,DX,FBAAAP,FBAACB,FBAACPT,FBAAON,FBAARA,FBINTOT,FBIN,FBRR,FBTYPE,FZ,HX,I,P3,P4,S,V,VAL,VID,XY,ZS,FBAAB,FBAAOB,DIRUT
"RTN","FBAAVR",100,0)
 K FBAAON,FBCOMM,FBERR,FBI,FBLIST,PRCS("TYPE"),FBLISTC,FBINOLD,FBDX,FBK,FBL,FBPROC,FBCNH,FBAAMT,FBII78,FBLNLST
"RTN","FBAAVR",101,0)
 Q
"RTN","FBAAVR",102,0)
 ;
"RTN","FBAAVR",103,0)
MEDV ; set DATE FINALIZED for line items in batch type B3
"RTN","FBAAVR",104,0)
 F J=0:0 S J=$O(^FBAAC("AC",B,J)) Q:J'>0  F K=0:0 S K=$O(^FBAAC("AC",B,J,K)) Q:K'>0  F L=0:0 S L=$O(^FBAAC("AC",B,J,K,L)) Q:L'>0  F M=0:0 S M=$O(^FBAAC("AC",B,J,K,L,M)) Q:M'>0  D SETXFR
"RTN","FBAAVR",105,0)
 Q
"RTN","FBAAVR",106,0)
SETXFR I '$D(^FBAAC(J,1,K,1,L,1,M,"FBREJ")),$D(^FBAAC(J,1,K,1,L,1,M,0)) S DA(3)=J,DA(2)=K,DA(1)=L,DA=M,DIE="^FBAAC(DA(3),1,DA(2),1,DA(1),1,",DR="5///^S X=DT" D ^DIE K DIE,DA,DR
"RTN","FBAAVR",107,0)
 Q
"RTN","FBAAVR",108,0)
 ;
"RTN","FBAAVR",109,0)
 ;FBAAVR
"RTN","FBAAVR0")
0^9^B11021288^B13722764
"RTN","FBAAVR0",1,0)
FBAAVR0 ;AISC/GRR,SAB - REJECT ITEMS ;3/26/2012
"RTN","FBAAVR0",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FBAAVR0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAAVR0",4,0)
 Q
"RTN","FBAAVR0",5,0)
 ;
"RTN","FBAAVR0",6,0)
VCHNH ; set DATE FINALIZED for batch type B9 line items
"RTN","FBAAVR0",7,0)
 F J=0:0 S J=$O(^FBAAI("AC",B,J)) Q:J'>0  I '$D(^FBAAI(J,"FBREJ")),$D(^FBAAI(J,0)) S DA=J,DIE="^FBAAI(",DR="19////^S X=DT" D ^DIE
"RTN","FBAAVR0",8,0)
 K DIE,DA
"RTN","FBAAVR0",9,0)
 Q
"RTN","FBAAVR0",10,0)
 ;
"RTN","FBAAVR0",11,0)
DELC ; specify local rejects for batch type B9
"RTN","FBAAVR0",12,0)
 N FBIENS
"RTN","FBAAVR0",13,0)
 ; select patient
"RTN","FBAAVR0",14,0)
 S FBDFN=$$ASKVET^FBAAUTL1("I $D(^FBAAI(""AE"",B,+Y))")
"RTN","FBAAVR0",15,0)
 Q:'FBDFN
"RTN","FBAAVR0",16,0)
 K QQ
"RTN","FBAAVR0",17,0)
 S (QQ,FBAAOUT)=0 W @IOF D HEDC^FBAACCB1 F I=0:0 S I=$O(^FBAAI("AE",B,FBDFN,I)) Q:I'>0!(FBAAOUT)  I $D(^FBAAI(I,0)) S Z(0)=^(0),FBI=I D WRITC
"RTN","FBAAVR0",18,0)
 ;
"RTN","FBAAVR0",19,0)
RL S DIR(0)="Y",DIR("A")="Want all line items rejected for this patient",DIR("B")="YES" D ^DIR K DIR G DELC:$D(DIRUT),LOOP:Y
"RTN","FBAAVR0",20,0)
RL1 S DIR(0)="NO^1:"_QQ,DIR("A")="Reject which line item" D ^DIR K DIR G DELC:X=""!$D(DIRUT) S HX=X
"RTN","FBAAVR0",21,0)
 I '$D(QQ(HX)) W !,*7,"You already rejected that one!!" G RL1
"RTN","FBAAVR0",22,0)
RJT S DIR(0)="Y",DIR("A")="Are you sure you want to reject item number: "_HX,DIR("B")="NO" D ^DIR K DIR G RL1:$D(DIRUT)!'Y
"RTN","FBAAVR0",23,0)
RDR1 S DIR(0)="F^2:40",DIR("A")="Enter reason for rejecting" D ^DIR K DIR W:$D(DIRUT) !!,"Required Response!!" G:$D(DIRUT) RDR1 S FBRR=X
"RTN","FBAAVR0",24,0)
 S FBIENS=QQ(HX)_"," D REJLN
"RTN","FBAAVR0",25,0)
RDMORE S DIR(0)="Y",DIR("A")="Item rejected.  Want to reject another",DIR("B")="YES" D ^DIR K DIR Q:$D(DIRUT)  G RL1:Y
"RTN","FBAAVR0",26,0)
 Q
"RTN","FBAAVR0",27,0)
 ;
"RTN","FBAAVR0",28,0)
WRITC S QQ=QQ+1,QQ(QQ)=I D CMORE^FBAACCB1
"RTN","FBAAVR0",29,0)
 Q
"RTN","FBAAVR0",30,0)
 ;
"RTN","FBAAVR0",31,0)
LOOP S DIR(0)="F^2:40",DIR("A")="Reason for rejecting" D ^DIR K DIR W:$D(DIRUT) !!,"Required Response!!" G:$D(DIRUT) LOOP S FBRR=X
"RTN","FBAAVR0",32,0)
 F HX=0:0 S HX=$O(QQ(HX)) Q:HX'>0  S FBIENS=QQ(HX)_"," D REJLN
"RTN","FBAAVR0",33,0)
 W !,"...DONE!"
"RTN","FBAAVR0",34,0)
 G DELC
"RTN","FBAAVR0",35,0)
 ;
"RTN","FBAAVR0",36,0)
REJLN ; flag line item as rejected
"RTN","FBAAVR0",37,0)
 ; input
"RTN","FBAAVR0",38,0)
 ;   FBN    - batch IEN
"RTN","FBAAVR0",39,0)
 ;   FBTYPE - batch type
"RTN","FBAAVR0",40,0)
 ;   FZ     - zero node of batch (file 161.7)
"RTN","FBAAVR0",41,0)
 ;   FBIENS - iens of line item
"RTN","FBAAVR0",42,0)
 ;   FBRR   - reject reason
"RTN","FBAAVR0",43,0)
 ;   FBAARA - accumulated dollar amount to be posted to 1358 by batch
"RTN","FBAAVR0",44,0)
 ;   QQ(    - (optional) array of line items
"RTN","FBAAVR0",45,0)
 ;   HX     - (optional) line number selected from QQ( array
"RTN","FBAAVR0",46,0)
 ; output
"RTN","FBAAVR0",47,0)
 ;   FZ      - may be updated
"RTN","FBAAVR0",48,0)
 ;   FBAARA  - may be updated
"RTN","FBAAVR0",49,0)
 ;   QQ(HX)  - may be deleted
"RTN","FBAAVR0",50,0)
 ;   FBRFLAG - will be set =1 if 1358 needs to be posted by batch
"RTN","FBAAVR0",51,0)
 ;
"RTN","FBAAVR0",52,0)
 N FBX
"RTN","FBAAVR0",53,0)
 ; flag line as rejected
"RTN","FBAAVR0",54,0)
 S FBX=$$SETREJ^FBAAVR4(FBN,FBTYPE,FBIENS,"",FBRR)
"RTN","FBAAVR0",55,0)
 ;
"RTN","FBAAVR0",56,0)
 ; if problem
"RTN","FBAAVR0",57,0)
 I 'FBX D
"RTN","FBAAVR0",58,0)
 . W !,"Error rejecting line with IENS "_FBIENS
"RTN","FBAAVR0",59,0)
 . W !,"  "_$P(FBX,"^",2)
"RTN","FBAAVR0",60,0)
 ;
"RTN","FBAAVR0",61,0)
 ; if success
"RTN","FBAAVR0",62,0)
 I FBX D
"RTN","FBAAVR0",63,0)
 . N FBPBYINV
"RTN","FBAAVR0",64,0)
 . I $G(HX)'="" K QQ(HX) ; remove from list
"RTN","FBAAVR0",65,0)
 . ; determine if 1358 posted by invoice or batch
"RTN","FBAAVR0",66,0)
 . S FBPBYINV=0
"RTN","FBAAVR0",67,0)
 . I FBTYPE="B9",$$GET1^DIQ(162.5,FBIENS,4,"I")'["FB583" S FBPBYINV=1
"RTN","FBAAVR0",68,0)
 . ;
"RTN","FBAAVR0",69,0)
 . ; if by batch then accumulate amount for later posting
"RTN","FBAAVR0",70,0)
 . I 'FBPBYINV S FBAARA=FBAARA+$P(FBX,"^",3),FBRFLAG=1
"RTN","FBAAVR0",71,0)
 . ;
"RTN","FBAAVR0",72,0)
 . ; if by B9 invoice then post it now
"RTN","FBAAVR0",73,0)
 . I FBPBYINV D
"RTN","FBAAVR0",74,0)
 . . N FBX1
"RTN","FBAAVR0",75,0)
 . . S FBX1=$$POSTINV^FB1358(FBN,+FBIENS,"R")
"RTN","FBAAVR0",76,0)
 . . I 'FBX1 D
"RTN","FBAAVR0",77,0)
 . . . W !,"Error posting invoice "_+FBIENS_" to 1358"
"RTN","FBAAVR0",78,0)
 . . . W !,"  "_$P(FBX1,"^",2)
"RTN","FBAAVR0",79,0)
 ;
"RTN","FBAAVR0",80,0)
 ; update variable FZ with current batch counts and totals
"RTN","FBAAVR0",81,0)
 S FZ=^FBAA(161.7,FBN,0)
"RTN","FBAAVR0",82,0)
 ;
"RTN","FBAAVR0",83,0)
 Q
"RTN","FBAAVR1")
0^10^B14166230^B19735859
"RTN","FBAAVR1",1,0)
FBAAVR1 ;AISC/GRR,SAB - FEE BASIS VOUCHER AUDIT DELETE AN ITEM ;4/30/2012
"RTN","FBAAVR1",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FBAAVR1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAAVR1",4,0)
 Q
"RTN","FBAAVR1",5,0)
 ;
"RTN","FBAAVR1",6,0)
DELT ; specify local rejects for batch type B2 (travel)
"RTN","FBAAVR1",7,0)
 N FBIENS
"RTN","FBAAVR1",8,0)
 ; select patient
"RTN","FBAAVR1",9,0)
 S J=$$ASKVET^FBAAUTL1("I $D(^FBAAC(""AD"",B,+Y))")
"RTN","FBAAVR1",10,0)
 Q:'J
"RTN","FBAAVR1",11,0)
 K QQ
"RTN","FBAAVR1",12,0)
 S (QQ,FBAAOUT)=0 W @IOF D HEDP^FBAACCB0
"RTN","FBAAVR1",13,0)
 F K=0:0 S K=$O(^FBAAC("AD",B,J,K)) Q:K'>0!(FBAAOUT)  S QQ=QQ+1,QQ(QQ)=J_"^"_K S Y(0)=^FBAAC(J,3,K,0) D SETT^FBAACCB0
"RTN","FBAAVR1",14,0)
 ;
"RTN","FBAAVR1",15,0)
RLT1 S DIR(0)="Y",DIR("A")="Reject all line items for this patient",DIR("B")="YES" D ^DIR K DIR G DELT:$D(DIRUT),LOOPT:Y
"RTN","FBAAVR1",16,0)
RLT ; select a line to reject
"RTN","FBAAVR1",17,0)
 S DIR(0)="NO^1:"_QQ,DIR("A")="Reject which line item" D ^DIR K DIR G DELT:X=""!$D(DIRUT) S HX=X
"RTN","FBAAVR1",18,0)
 I '$D(QQ(HX)) W !!,*7,"You just deleted that one!!" G RLT
"RTN","FBAAVR1",19,0)
RASK S DIR(0)="Y",DIR("A")="Are you sure you want to reject line item number: "_HX,DIR("B")="NO" D ^DIR K DIR G RLT:$D(DIRUT)!'Y
"RTN","FBAAVR1",20,0)
 S FBIENS=$P(QQ(HX),"^",2)_","_$P(QQ(HX),"^",1)_","
"RTN","FBAAVR1",21,0)
RDR2 S DIR(0)="F^2:40",DIR("A")="Enter reason for rejecting" D ^DIR K DIR W:$D(DIRUT) !!,"Required Response!!" G:$D(DIRUT) RDR2 S FBRR=X
"RTN","FBAAVR1",22,0)
 D REJLN^FBAAVR0
"RTN","FBAAVR1",23,0)
RDMORT S DIR(0)="Y",DIR("A")="Item Rejected!  Want to reject another",DIR("B")="YES" D ^DIR K DIR Q:$D(DIRUT)  G RLT:Y
"RTN","FBAAVR1",24,0)
 G DELT
"RTN","FBAAVR1",25,0)
 ;
"RTN","FBAAVR1",26,0)
LOOPT ; reject all lines for patient in batch type B2 (travel)
"RTN","FBAAVR1",27,0)
 S DIR(0)="F^2:40",DIR("A")="Reason for Rejecting" D ^DIR K DIR
"RTN","FBAAVR1",28,0)
 G:$D(DIRUT) DELT
"RTN","FBAAVR1",29,0)
 S FBRR=X
"RTN","FBAAVR1",30,0)
 F HX=0:0 S HX=$O(QQ(HX)) Q:HX'>0  S FBIENS=$P(QQ(HX),"^",2)_","_$P(QQ(HX),"^",1)_"," D REJLN^FBAAVR0
"RTN","FBAAVR1",31,0)
 W !,"...DONE!"
"RTN","FBAAVR1",32,0)
 G DELT
"RTN","FBAAVR1",33,0)
 ;
"RTN","FBAAVR1",34,0)
DELP ; specify local rejects for batch type B5 (pharmacy)
"RTN","FBAAVR1",35,0)
 N FBIENS,W1,W2
"RTN","FBAAVR1",36,0)
 ; select patient
"RTN","FBAAVR1",37,0)
 S DFN=$$ASKVET^FBAAUTL1("I $D(^FBAA(162.1,""AJ"",B,+Y))")
"RTN","FBAAVR1",38,0)
 Q:'DFN
"RTN","FBAAVR1",39,0)
 K QQ
"RTN","FBAAVR1",40,0)
 S (FBAAOUT,QQ)=0 W @IOF D HED^FBAACCB
"RTN","FBAAVR1",41,0)
 F W1=0:0 S W1=$O(^FBAA(162.1,"AJ",B,DFN,W1)) Q:W1'>0!(FBAAOUT)  F W2=0:0 S W2=$O(^FBAA(162.1,"AJ",B,DFN,W1,W2)) Q:W2'>0!(FBAAOUT)  S (A,FBIN)=W1,B2=W2,QQ=QQ+1,QQ(QQ)=A_"^"_B2 S Z(0)=^FBAA(162.1,A,"RX",B2,0) D SETV^FBAACCB0,MORE^FBAACCB1
"RTN","FBAAVR1",42,0)
 ;
"RTN","FBAAVR1",43,0)
RLP1 S DIR(0)="Y",DIR("A")="Reject all line items for this patient",DIR("B")="YES" D ^DIR K DIR G DELP:$D(DIRUT),LOOPP:Y
"RTN","FBAAVR1",44,0)
 ;
"RTN","FBAAVR1",45,0)
RLP ; select a line to reject
"RTN","FBAAVR1",46,0)
 S DIR(0)="NO^1:"_QQ,DIR("A")="Reject which line item" D ^DIR K DIR G DELP:X=""!$D(DIRUT) S HX=X
"RTN","FBAAVR1",47,0)
 I '$D(QQ(HX)) W !!,*7,"You just did that one!" G RLP
"RTN","FBAAVR1",48,0)
RLI S DIR(0)="Y",DIR("A")="Are you sure you want to reject line item number: "_HX,DIR("B")="NO" D ^DIR K DIR G RLP:$D(DIRUT)!'Y
"RTN","FBAAVR1",49,0)
 S FBIENS=$P(QQ(HX),"^",2)_","_$P(QQ(HX),"^",1)_","
"RTN","FBAAVR1",50,0)
RDR3 S DIR(0)="F^2:40",DIR("A")="Enter reason for rejecting" D ^DIR K DIR
"RTN","FBAAVR1",51,0)
 G:$D(DIRUT) RLP
"RTN","FBAAVR1",52,0)
 S FBRR=X
"RTN","FBAAVR1",53,0)
 D REJLN^FBAAVR0
"RTN","FBAAVR1",54,0)
RDMORP S DIR(0)="Y",DIR("A")="Item rejected. Want to reject another",DIR("B")="YES" D ^DIR K DIR Q:$D(DIRUT)  G RLP:Y
"RTN","FBAAVR1",55,0)
 G DELP
"RTN","FBAAVR1",56,0)
 ;
"RTN","FBAAVR1",57,0)
LOOPP ; reject all lines for patient in batch type B5 (pharmacy)
"RTN","FBAAVR1",58,0)
 S DIR(0)="F^2:40",DIR("A")="Reason for Rejecting" D ^DIR K DIR
"RTN","FBAAVR1",59,0)
 G:$D(DIRUT) DELP
"RTN","FBAAVR1",60,0)
 S FBRR=X
"RTN","FBAAVR1",61,0)
 F HX=0:0 S HX=$O(QQ(HX)) Q:HX'>0  S FBIENS=$P(QQ(HX),"^",2)_","_$P(QQ(HX),"^",1)_"," D REJLN^FBAAVR0
"RTN","FBAAVR1",62,0)
 W !,"...DONE!"
"RTN","FBAAVR1",63,0)
 G DELP
"RTN","FBAAVR2")
0^11^B7234769^B7056912
"RTN","FBAAVR2",1,0)
FBAAVR2 ;AISC/GRR,SAB - FINALIZE BATCH (CONT) ;3/26/2012
"RTN","FBAAVR2",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FBAAVR2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAAVR2",4,0)
 Q
"RTN","FBAAVR2",5,0)
 ;
"RTN","FBAAVR2",6,0)
DELM ; specify local rejects for batch type B3
"RTN","FBAAVR2",7,0)
 ; select patient
"RTN","FBAAVR2",8,0)
 S J=$$ASKVET^FBAAUTL1("I $D(^FBAAC(""AC"",B,+Y))")
"RTN","FBAAVR2",9,0)
 Q:'J
"RTN","FBAAVR2",10,0)
 K QQ
"RTN","FBAAVR2",11,0)
 S (QQ,FBAAOUT)=0 W @IOF D HED^FBAACCB
"RTN","FBAAVR2",12,0)
 F K=0:0 S K=$O(^FBAAC("AC",B,J,K)) Q:K'>0!(FBAAOUT)  F L=0:0 S L=$O(^FBAAC("AC",B,J,K,L)) Q:L'>0!(FBAAOUT)  F M=0:0 S M=$O(^FBAAC("AC",B,J,K,L,M)) Q:M'>0!(FBAAOUT)  D WRITM
"RTN","FBAAVR2",13,0)
RL1 S DIR(0)="Y",DIR("A")="Want all line items rejected for this patient",DIR("B")="YES" D ^DIR K DIR G DELM:$D(DIRUT),LOOP:Y
"RTN","FBAAVR2",14,0)
RL S DIR(0)="N^1:"_QQ,DIR("A")="Reject which line item" D ^DIR K DIR G DELM:X=""!$D(DIRUT) S HX=X
"RTN","FBAAVR2",15,0)
 I '$D(QQ(HX)) W !,*7,"You already rejected that one!!" G RL
"RTN","FBAAVR2",16,0)
RJT S DIR(0)="Y",DIR("A")="Are you sure you want to reject item number: "_HX,DIR("B")="NO" D ^DIR K DIR G RL:$D(DIRUT)!'Y
"RTN","FBAAVR2",17,0)
 S FBIENS=$P(QQ(HX),"^",4)_","_$P(QQ(HX),"^",3)_","_$P(QQ(HX),"^",2)_","_$P(QQ(HX),"^",1)_","
"RTN","FBAAVR2",18,0)
RDR1 S DIR(0)="F^2:40",DIR("A")="Enter reason for rejecting" D ^DIR K DIR W:$D(DIRUT) !!,"Required Response!!" G:$D(DIRUT) RDR1 S FBRR=X
"RTN","FBAAVR2",19,0)
 D REJLN^FBAAVR0
"RTN","FBAAVR2",20,0)
RDMORE S DIR(0)="Y",DIR("A")="Item rejected. Want to reject another",DIR("B")="YES"
"RTN","FBAAVR2",21,0)
 D ^DIR K DIR Q:$D(DIRUT)  G RL:Y,DELM
"RTN","FBAAVR2",22,0)
 ;
"RTN","FBAAVR2",23,0)
WRITM S QQ=QQ+1,QQ(QQ)=J_"^"_K_"^"_L_"^"_M D SET^FBAACCB Q
"RTN","FBAAVR2",24,0)
 ;
"RTN","FBAAVR2",25,0)
LOOP ; reject all lines for patient
"RTN","FBAAVR2",26,0)
 S DIR(0)="F^2:40",DIR("A")="Reason for rejecting" D ^DIR K DIR
"RTN","FBAAVR2",27,0)
 G:$D(DIRUT) DELM
"RTN","FBAAVR2",28,0)
 S FBRR=X
"RTN","FBAAVR2",29,0)
 F HX=0:0 S HX=$O(QQ(HX)) Q:HX'>0  S FBIENS=$P(QQ(HX),"^",4)_","_$P(QQ(HX),"^",3)_","_$P(QQ(HX),"^",2)_","_$P(QQ(HX),"^",1)_"," D REJLN^FBAAVR0
"RTN","FBAAVR2",30,0)
 W !,"...DONE!"
"RTN","FBAAVR2",31,0)
 G DELM
"RTN","FBAAVR2",32,0)
 ;
"RTN","FBAAVR2",33,0)
SPLIT ; reject all lines on split invoices
"RTN","FBAAVR2",34,0)
 S DIR(0)="F^2:40",DIR("A")="Reason for rejecting" D ^DIR K DIR
"RTN","FBAAVR2",35,0)
 Q:$D(DIRUT)
"RTN","FBAAVR2",36,0)
 S FBRR=X
"RTN","FBAAVR2",37,0)
 S FBIENS=""  F  S FBIENS=$O(FBLNLST(FBIENS)) Q:FBIENS=""  D REJLN^FBAAVR0
"RTN","FBAAVR2",38,0)
 W !,"...DONE!"
"RTN","FBAAVR2",39,0)
 Q
"RTN","FBAAVR3")
0^43^B14888732^n/a
"RTN","FBAAVR3",1,0)
FBAAVR3 ;WOIFO/SAB - FINALIZE BATCH (CONT) ;4/10/2012
"RTN","FBAAVR3",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FBAAVR3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAAVR3",4,0)
 Q
"RTN","FBAAVR3",5,0)
 ;
"RTN","FBAAVR3",6,0)
CHKSPLT ; check for split invoices for batch
"RTN","FBAAVR3",7,0)
 ; input FBN - batch IEN (file 161.7), must be type B3
"RTN","FBAAVR3",8,0)
 ; output FBLNLST(FBIENS) - array of line items still in batch for
"RTN","FBAAVR3",9,0)
 ;                          split invoices
"RTN","FBAAVR3",10,0)
 N DIR,DIROUT,DIRUT,DTOUT,FBINLST,X,Y
"RTN","FBAAVR3",11,0)
 ;
"RTN","FBAAVR3",12,0)
 ; build list of split invoices
"RTN","FBAAVR3",13,0)
 D LSTSPIN(FBN,.FBINLST)
"RTN","FBAAVR3",14,0)
 ; build list of line items for split invoices
"RTN","FBAAVR3",15,0)
 D LSTLN(FBN,.FBINLST,.FBLNLST)
"RTN","FBAAVR3",16,0)
 ;
"RTN","FBAAVR3",17,0)
 I $D(FBINLST) D
"RTN","FBAAVR3",18,0)
 . W !,"This batch contains split invoice(s)."
"RTN","FBAAVR3",19,0)
 . W !," An invoice is split when some lines on invoice are flagged as"
"RTN","FBAAVR3",20,0)
 . W !," rejected and other lines are not flagged as rejected."
"RTN","FBAAVR3",21,0)
 . W !," Current policy is to keep all invoice lines together."
"RTN","FBAAVR3",22,0)
 . ;
"RTN","FBAAVR3",23,0)
 . S DIR(0)="Y",DIR("A")="Do you want a list of split invoices"
"RTN","FBAAVR3",24,0)
 . S DIR("B")="YES"
"RTN","FBAAVR3",25,0)
 . D ^DIR Q:$D(DIRUT)
"RTN","FBAAVR3",26,0)
 . ;
"RTN","FBAAVR3",27,0)
 . I Y D
"RTN","FBAAVR3",28,0)
 . . N FBDFN,FBIN,FBX
"RTN","FBAAVR3",29,0)
 . . ; loop thru split invoices
"RTN","FBAAVR3",30,0)
 . . S FBIN="" F  S FBIN=$O(FBINLST(FBIN)) Q:FBIN=""  D
"RTN","FBAAVR3",31,0)
 . . . W !,"  Invoice ",FBIN," is split"
"RTN","FBAAVR3",32,0)
 . . . S FBDFN=0 F  S FBDFN=$O(FBINLST(FBIN,FBDFN)) Q:'FBDFN  D
"RTN","FBAAVR3",33,0)
 . . . . S FBX=FBINLST(FBIN,FBDFN)
"RTN","FBAAVR3",34,0)
 . . . . W !,"    Patient: ",$P(FBX,"^")," with ",$P(FBX,"^",2)," line",$S($P(FBX,"^",2)'=1:"s that are",1:" that is")," not rejected."
"RTN","FBAAVR3",35,0)
 . ;
"RTN","FBAAVR3",36,0)
 . W !
"RTN","FBAAVR3",37,0)
 ;
"RTN","FBAAVR3",38,0)
 Q
"RTN","FBAAVR3",39,0)
 ;
"RTN","FBAAVR3",40,0)
LSTSPIN(FBN,FBINLST) ; build list of split invoices for a batch
"RTN","FBAAVR3",41,0)
 ; input
"RTN","FBAAVR3",42,0)
 ;   FBN - batch IEN file 161.7. must be type B3
"RTN","FBAAVR3",43,0)
 ;   FBINLST - array, passed by reference
"RTN","FBAAVR3",44,0)
 ; output
"RTN","FBAAVR3",45,0)
 ;   FBLST - initialized and updated
"RTN","FBAAVR3",46,0)
 ;     FBINLST(FBIN)=""
"RTN","FBAAVR3",47,0)
 ;       where FBIN is an invoice number
"RTN","FBAAVR3",48,0)
 ;       note: FBINLST will not be defined if batch is empty
"RTN","FBAAVR3",49,0)
 ;
"RTN","FBAAVR3",50,0)
 N FBDA,FBIENS,FBIN
"RTN","FBAAVR3",51,0)
 K FBINLST
"RTN","FBAAVR3",52,0)
 Q:'$G(FBN)
"RTN","FBAAVR3",53,0)
 ;
"RTN","FBAAVR3",54,0)
 ; loop thru rejected lines for batch
"RTN","FBAAVR3",55,0)
 S FBDA(3)=0 F  S FBDA(3)=$O(^FBAAC("AH",FBN,FBDA(3))) Q:'FBDA(3)  D
"RTN","FBAAVR3",56,0)
 . S FBDA(2)=0
"RTN","FBAAVR3",57,0)
 . F  S FBDA(2)=$O(^FBAAC("AH",FBN,FBDA(3),FBDA(2))) Q:'FBDA(2)  D
"RTN","FBAAVR3",58,0)
 . . S FBDA(1)=0
"RTN","FBAAVR3",59,0)
 . . F  S FBDA(1)=$O(^FBAAC("AH",FBN,FBDA(3),FBDA(2),FBDA(1))) Q:'FBDA(1)  D
"RTN","FBAAVR3",60,0)
 . . . S FBDA=0
"RTN","FBAAVR3",61,0)
 . . . F  S FBDA=$O(^FBAAC("AH",FBN,FBDA(3),FBDA(2),FBDA(1),FBDA)) Q:'FBDA  D
"RTN","FBAAVR3",62,0)
 . . . . S FBIENS=FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_","
"RTN","FBAAVR3",63,0)
 . . . . S FBIN=$$GET1^DIQ(162.03,FBIENS,14) ; INVOICE NUMBER
"RTN","FBAAVR3",64,0)
 . . . . Q:FBIN=""
"RTN","FBAAVR3",65,0)
 . . . . Q:'$D(^FBAAC("AJ",FBN,FBIN))  ; no unrejected lines in batch
"RTN","FBAAVR3",66,0)
 . . . . S FBINLST(FBIN)="" ; add to list of split invoices
"RTN","FBAAVR3",67,0)
 ;
"RTN","FBAAVR3",68,0)
 Q
"RTN","FBAAVR3",69,0)
 ;
"RTN","FBAAVR3",70,0)
LSTLN(FBN,FBINLST,FBLNLST) ; build list of line items
"RTN","FBAAVR3",71,0)
 ; input
"RTN","FBAAVR3",72,0)
 ;   FBN     - batch IEN file 161.7. must be type B3
"RTN","FBAAVR3",73,0)
 ;   FBINLST - array of invoices, passed by reference
"RTN","FBAAVR3",74,0)
 ;             FBINLST(FBIN)
"RTN","FBAAVR3",75,0)
 ;             where FBIN is an invoice number
"RTN","FBAAVR3",76,0)
 ;   FBLNLST - array of line items, passed by reference
"RTN","FBAAVR3",77,0)
 ; output
"RTN","FBAAVR3",78,0)
 ;   FBINLST - array of invoices, passed by reference
"RTN","FBAAVR3",79,0)
 ;             will be updated by adding the following node
"RTN","FBAAVR3",80,0)
 ;             FBINLST(FBIN,FBDFN)=patient name^line item count
"RTN","FBAAVR3",81,0)
 ;             where FBDFN is the patient IEN (file 161 & file 2)
"RTN","FBAAVR3",82,0)
 ;   FBLNLST - array of line items, passed by reference
"RTN","FBAAVR3",83,0)
 ;             FBLNLST(FBIENS)=""
"RTN","FBAAVR3",84,0)
 ;             where FBIENS is the IENS for a line item,
"RTN","FBAAVR3",85,0)
 ;               FileMan DBS format
"RTN","FBAAVR3",86,0)
 ;             this array will contain a list of line items still in
"RTN","FBAAVR3",87,0)
 ;             input batch FBN for the invoices in input array FBINLST 
"RTN","FBAAVR3",88,0)
 ;             Note: array is initialized and will not be defined
"RTN","FBAAVR3",89,0)
 ;               if there are no line items
"RTN","FBAAVR3",90,0)
 ;
"RTN","FBAAVR3",91,0)
 N FBC,FBDA,FBIN
"RTN","FBAAVR3",92,0)
 K FBLNLST
"RTN","FBAAVR3",93,0)
 Q:'$G(FBN)
"RTN","FBAAVR3",94,0)
 ;
"RTN","FBAAVR3",95,0)
 ; loop thru invoices in array
"RTN","FBAAVR3",96,0)
 S FBIN="" F  S FBIN=$O(FBINLST(FBIN)) Q:FBIN=""  D
"RTN","FBAAVR3",97,0)
 . ; loop thru patients for invoice in batch
"RTN","FBAAVR3",98,0)
 . S FBDA(3)=0
"RTN","FBAAVR3",99,0)
 . F  S FBDA(3)=$O(^FBAAC("AJ",FBN,FBIN,FBDA(3))) Q:'FBDA(3)  D
"RTN","FBAAVR3",100,0)
 . . S FBC=0 ; init line count for invoice & patient
"RTN","FBAAVR3",101,0)
 . . S FBDA(2)=0
"RTN","FBAAVR3",102,0)
 . . F  S FBDA(2)=$O(^FBAAC("AJ",FBN,FBIN,FBDA(3),FBDA(2))) Q:'FBDA(2)  D
"RTN","FBAAVR3",103,0)
 . . . S FBDA(1)=0
"RTN","FBAAVR3",104,0)
 . . . F  S FBDA(1)=$O(^FBAAC("AJ",FBN,FBIN,FBDA(3),FBDA(2),FBDA(1))) Q:'FBDA(1)  D
"RTN","FBAAVR3",105,0)
 . . . . S FBDA=0 F  S FBDA=$O(^FBAAC("AJ",FBN,FBIN,FBDA(3),FBDA(2),FBDA(1),FBDA)) Q:'FBDA  D
"RTN","FBAAVR3",106,0)
 . . . . . ; add to line item array
"RTN","FBAAVR3",107,0)
 . . . . . S FBLNLST(FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",")=""
"RTN","FBAAVR3",108,0)
 . . . . . ; increment line count for invoice & patient
"RTN","FBAAVR3",109,0)
 . . . . . S FBC=FBC+1
"RTN","FBAAVR3",110,0)
 . . ;
"RTN","FBAAVR3",111,0)
 . . ; update invoice array with save patient name and line count
"RTN","FBAAVR3",112,0)
 . . S FBINLST(FBIN,FBDA(3))=$$GET1^DIQ(161,FBDA(3),.01)_"^"_FBC
"RTN","FBAAVR3",113,0)
 ;
"RTN","FBAAVR3",114,0)
 Q
"RTN","FBAAVR3",115,0)
 ;
"RTN","FBAAVR3",116,0)
 ;FBAAVR3
"RTN","FBAAVR4")
0^37^B24607302^n/a
"RTN","FBAAVR4",1,0)
FBAAVR4 ;WOIFO/SAB - FINALIZE BATCH (CONT) ;4/16/2012
"RTN","FBAAVR4",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FBAAVR4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAAVR4",4,0)
 Q
"RTN","FBAAVR4",5,0)
 ;
"RTN","FBAAVR4",6,0)
SETREJ(FBN,FBTYPE,FBIENS,FBIREJ,FBRR,FBRRC) ; Set reject flag for line
"RTN","FBAAVR4",7,0)
 ; input
"RTN","FBAAVR4",8,0)
 ;   FBN - (conditionally required) Batch IEN, file 161.7
"RTN","FBAAVR4",9,0)
 ;   FBTYPE - (conditionally required) Batch type (B2, B3, B5, or B9)
"RTN","FBAAVR4",10,0)
 ;   FBIENS - (required) IENS of line being rejected, FileMan DBS format
"RTN","FBAAVR4",11,0)
 ;   FBIREJ - (optional) = 1 if reject from interface
"RTN","FBAAVR4",12,0)
 ;   FBRR - (required when not interface reject) free text reject reason
"RTN","FBAAVR4",13,0)
 ;   FBRRC - (required for interface reject), passed by reference
"RTN","FBAAVR4",14,0)
 ;           array of reject codes, FBRRC(#)=code
"RTN","FBAAVR4",15,0)
 ;           where # is an integer greater than 0. e.g. FBRRC(1)="C012"
"RTN","FBAAVR4",16,0)
 ;  returns a value
"RTN","FBAAVR4",17,0)
 ;         =1^batch number^amount paid if successful
"RTN","FBAAVR4",18,0)
 ;         =0^message if unsuccessful
"RTN","FBAAVR4",19,0)
 ;
"RTN","FBAAVR4",20,0)
 ; ICRs
"RTN","FBAAVR4",21,0)
 ;  #2053   FILE^DIE, UPDATE^DIE
"RTN","FBAAVR4",22,0)
 ;  #2054   CLEAN^DILF
"RTN","FBAAVR4",23,0)
 ;  #2056   $$GET1^DIQ
"RTN","FBAAVR4",24,0)
 ;
"RTN","FBAAVR4",25,0)
 N FBAP,FBFIELDS,FBFILE,FBRET
"RTN","FBAAVR4",26,0)
 S FBRET=1
"RTN","FBAAVR4",27,0)
 ;
"RTN","FBAAVR4",28,0)
 ; check inputs
"RTN","FBAAVR4",29,0)
 I $G(FBN)="",$G(FBTYPE)="" S FBRET="0^Batch number or type not provided."
"RTN","FBAAVR4",30,0)
 I $G(FBIENS)="" S FBRET="0^Line Item IENs not provided."
"RTN","FBAAVR4",31,0)
 I $G(FBIREJ),'$O(FBRRC(0)) S FBRET="0^Reject Code not provided."
"RTN","FBAAVR4",32,0)
 I '$G(FBIREJ),$G(FBRR)="" S FBRET="0^Reject Reason not provided."
"RTN","FBAAVR4",33,0)
 ;
"RTN","FBAAVR4",34,0)
 ; determine batch type if not provided
"RTN","FBAAVR4",35,0)
 I FBRET D
"RTN","FBAAVR4",36,0)
 . I $G(FBTYPE)="" S FBTYPE=$P($G(^FBAA(161.7,FBN,0)),"^",3) ; TYPE
"RTN","FBAAVR4",37,0)
 . I "^B2^B3^B5^B9^"'[(U_FBTYPE_U) S FBRET="0^Batch type invalid."
"RTN","FBAAVR4",38,0)
 ;
"RTN","FBAAVR4",39,0)
 ; determine payment/invoice file/sub-file of line item based on type
"RTN","FBAAVR4",40,0)
 I FBRET D
"RTN","FBAAVR4",41,0)
 . I FBTYPE="B2" S FBFILE="162.04" ; travel
"RTN","FBAAVR4",42,0)
 . I FBTYPE="B3" S FBFILE="162.03" ; outpatient or inpatient ancillary
"RTN","FBAAVR4",43,0)
 . I FBTYPE="B5" S FBFILE="162.11" ; pharmacy
"RTN","FBAAVR4",44,0)
 . I FBTYPE="B9" S FBFILE="162.5"  ; inpatient
"RTN","FBAAVR4",45,0)
 . I $G(FBFILE)="" S FBRET="0^Could not determine file to update"
"RTN","FBAAVR4",46,0)
 ;
"RTN","FBAAVR4",47,0)
 ; determine field numbers based on file
"RTN","FBAAVR4",48,0)
 I FBRET D
"RTN","FBAAVR4",49,0)
 . ; FBFIELDS will contain the numbers of the following fields/sub-file
"RTN","FBAAVR4",50,0)
 . ;   piece 1 = batch number
"RTN","FBAAVR4",51,0)
 . ;   piece 2 = amount paid
"RTN","FBAAVR4",52,0)
 . ;   piece 3 = reject status
"RTN","FBAAVR4",53,0)
 . ;   piece 4 = reject reason
"RTN","FBAAVR4",54,0)
 . ;   piece 5 = old batch number
"RTN","FBAAVR4",55,0)
 . ;   piece 6 = interface reject
"RTN","FBAAVR4",56,0)
 . ;   piece 7 = reject code sub-file number
"RTN","FBAAVR4",57,0)
 . ;   piece 8 = date finalized (n/a for 162.11)
"RTN","FBAAVR4",58,0)
 . I FBFILE="162.03" S FBFIELDS="7^2^19^20^21^21.3^162.031^5"
"RTN","FBAAVR4",59,0)
 . I FBFILE="162.04" S FBFIELDS="1^2^4^5^6^6.3^162.041^7"
"RTN","FBAAVR4",60,0)
 . I FBFILE="162.11" S FBFIELDS="13^6.5^17^18^19^19.3^162.111^"
"RTN","FBAAVR4",61,0)
 . I FBFILE="162.5" S FBFIELDS="20^8^13^14^15^15.3^162.515^19"
"RTN","FBAAVR4",62,0)
 . I $G(FBFIELDS)="" S FBRET="0^Could not determine field numbers"
"RTN","FBAAVR4",63,0)
 ;
"RTN","FBAAVR4",64,0)
 ; check status of payment line item
"RTN","FBAAVR4",65,0)
 I FBRET D
"RTN","FBAAVR4",66,0)
 . S FBN=$$GET1^DIQ(FBFILE,FBIENS,$P(FBFIELDS,"^",1),"I") ; batch IEN
"RTN","FBAAVR4",67,0)
 . I $D(DIERR) S FBRET="0^Error retrieving line item data." Q
"RTN","FBAAVR4",68,0)
 . I FBN="" D  Q  ; not in a batch
"RTN","FBAAVR4",69,0)
 . . I $$GET1^DIQ(FBFILE,FBIENS,$P(FBFIELDS,"^",3))'="" D  Q
"RTN","FBAAVR4",70,0)
 . . . S FBRET="0^Line is already flagged as rejected."
"RTN","FBAAVR4",71,0)
 . . S FBRET="0^Batch number field on line is a null value."
"RTN","FBAAVR4",72,0)
 . S FBAP=$$GET1^DIQ(FBFILE,FBIENS,$P(FBFIELDS,"^",2)) ; amount paid
"RTN","FBAAVR4",73,0)
 ;
"RTN","FBAAVR4",74,0)
 ; reject payment line item
"RTN","FBAAVR4",75,0)
 I FBRET D
"RTN","FBAAVR4",76,0)
 . N DIERR,FBFDA
"RTN","FBAAVR4",77,0)
 . S FBFDA(FBFILE,FBIENS,$P(FBFIELDS,"^",1))="@" ; batch number
"RTN","FBAAVR4",78,0)
 . S FBFDA(FBFILE,FBIENS,$P(FBFIELDS,"^",3))="P" ; reject status
"RTN","FBAAVR4",79,0)
 . I '$G(FBIREJ) S FBFDA(FBFILE,FBIENS,$P(FBFIELDS,"^",4))=FBRR ; reason
"RTN","FBAAVR4",80,0)
 . S FBFDA(FBFILE,FBIENS,$P(FBFIELDS,"^",5))=FBN ; old batch number
"RTN","FBAAVR4",81,0)
 . S:$G(FBIREJ) FBFDA(FBFILE,FBIENS,$P(FBFIELDS,"^",6))=1 ; interface
"RTN","FBAAVR4",82,0)
 . I $P(FBFIELDS,"^",8) D
"RTN","FBAAVR4",83,0)
 . . ; field will already be null except when post voucher reject msg
"RTN","FBAAVR4",84,0)
 . . S FBFDA(FBFILE,FBIENS,$P(FBFIELDS,"^",8))="@" ; date finalized
"RTN","FBAAVR4",85,0)
 . ;
"RTN","FBAAVR4",86,0)
 . D FILE^DIE("","FBFDA")
"RTN","FBAAVR4",87,0)
 . D CLEAN^DILF
"RTN","FBAAVR4",88,0)
 ;
"RTN","FBAAVR4",89,0)
 ; save reject codes for interface reject
"RTN","FBAAVR4",90,0)
 I FBRET,$G(FBIREJ) D
"RTN","FBAAVR4",91,0)
 . N DIERR,FBFDA,FBI
"RTN","FBAAVR4",92,0)
 . ; loop thru reject codes
"RTN","FBAAVR4",93,0)
 . S FBI=0 F  S FBI=$O(FBRRC(FBI)) Q:'FBI  D
"RTN","FBAAVR4",94,0)
 . . Q:FBRRC(FBI)=""
"RTN","FBAAVR4",95,0)
 . . S FBFDA($P(FBFIELDS,"^",7),"+"_FBI_","_FBIENS,.01)=FBRRC(FBI)
"RTN","FBAAVR4",96,0)
 . ;
"RTN","FBAAVR4",97,0)
 . D UPDATE^DIE("","FBFDA")
"RTN","FBAAVR4",98,0)
 . D CLEAN^DILF
"RTN","FBAAVR4",99,0)
 ;
"RTN","FBAAVR4",100,0)
 ; update batch data to reflect rejected line item
"RTN","FBAAVR4",101,0)
 I FBRET D
"RTN","FBAAVR4",102,0)
 . N DIERR,FBFDA,FBIC,FBLC,FBTOT
"RTN","FBAAVR4",103,0)
 . ; get existing data
"RTN","FBAAVR4",104,0)
 . S FBTOT=$$GET1^DIQ(161.7,FBN_",",8) ; TOTAL DOLLARS
"RTN","FBAAVR4",105,0)
 . S FBIC=$$GET1^DIQ(161.7,FBN_",",9) ; INVOICE COUNT
"RTN","FBAAVR4",106,0)
 . S FBLC=$$GET1^DIQ(161.7,FBN_",",10) ; PAYMENT LINE COUNT
"RTN","FBAAVR4",107,0)
 . ; 
"RTN","FBAAVR4",108,0)
 . S FBFDA(161.7,FBN_",",8)=FBTOT-FBAP ; TOTAL DOLLARS
"RTN","FBAAVR4",109,0)
 . S FBFDA(161.7,FBN_",",10)=FBLC-1 ; PAYMENT LINE COUNT
"RTN","FBAAVR4",110,0)
 . S FBFDA(161.7,FBN_",",15)="Y" ; REJECTS PENDING
"RTN","FBAAVR4",111,0)
 . ; update INVOICE COUNT when appropriate
"RTN","FBAAVR4",112,0)
 . ; this field is not curently maintained for batch types B2 and B3
"RTN","FBAAVR4",113,0)
 . I FBFILE=162.5 S FBFDA(161.7,FBN_",",9)=FBIC-1 ; INVOICE COUNT
"RTN","FBAAVR4",114,0)
 . I FBFILE=162.11 D
"RTN","FBAAVR4",115,0)
 . . ; quit if any lines from the pharmacy invoice remain on the batch
"RTN","FBAAVR4",116,0)
 . . Q:$O(^FBAA(162.1,"AE",FBN,$P(FBIENS,",",2),0))
"RTN","FBAAVR4",117,0)
 . . S FBFDA(161.7,FBN_",",9)=FBIC-1 ; INVOICE COUNT
"RTN","FBAAVR4",118,0)
 . ;
"RTN","FBAAVR4",119,0)
 . D FILE^DIE("","FBFDA")
"RTN","FBAAVR4",120,0)
 . D CLEAN^DILF
"RTN","FBAAVR4",121,0)
 ;
"RTN","FBAAVR4",122,0)
 ; if success add batch IEN and amount paid to return value
"RTN","FBAAVR4",123,0)
 I FBRET S FBRET=FBRET_"^"_FBN_"^"_FBAP
"RTN","FBAAVR4",124,0)
 Q FBRET
"RTN","FBAAVR4",125,0)
 ;
"RTN","FBAAVR4",126,0)
 ;FBAAVR4
"RTN","FBAAVR5")
0^38^B40211184^n/a
"RTN","FBAAVR5",1,0)
FBAAVR5 ;WOIFO/SAB - GENERATE VOUCHER BATCH MSG ;9/12/2012
"RTN","FBAAVR5",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FBAAVR5",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAAVR5",4,0)
 ;
"RTN","FBAAVR5",5,0)
 ; ICRs
"RTN","FBAAVR5",6,0)
 ;  #2053  FILE^DIE
"RTN","FBAAVR5",7,0)
 ;  #2054  CLEAN^DILF
"RTN","FBAAVR5",8,0)
 ;  #2056  $$GET1^DIQ
"RTN","FBAAVR5",9,0)
 ;  #2729  SENDMSG^XMXAPI
"RTN","FBAAVR5",10,0)
 ;  #10104 $$LG^XLFSTR, $$RJ^XLFSTR
"RTN","FBAAVR5",11,0)
 Q
"RTN","FBAAVR5",12,0)
 ;
"RTN","FBAAVR5",13,0)
VBMSG(FBN) ; Generate Voucher Batch Message
"RTN","FBAAVR5",14,0)
 ; input
"RTN","FBAAVR5",15,0)
 ;   FBN - Batch IEN (file 161.7)
"RTN","FBAAVR5",16,0)
 ; returns value
"RTN","FBAAVR5",17,0)
 ;   =message number if successful
"RTN","FBAAVR5",18,0)
 ;   =0^error message if unsuccessful
"RTN","FBAAVR5",19,0)
 ;
"RTN","FBAAVR5",20,0)
 N FBAUS,FBCNT,FBHD,FBLN,FBNUM,FBRET,FBSTUB,FBTYPE
"RTN","FBAAVR5",21,0)
 K ^TMP($J,"FBVBM")
"RTN","FBAAVR5",22,0)
 ;
"RTN","FBAAVR5",23,0)
 ; check for required input
"RTN","FBAAVR5",24,0)
 I '$G(FBN) S FBRET="0^Batch IEN not provided." G END
"RTN","FBAAVR5",25,0)
 ;
"RTN","FBAAVR5",26,0)
 ; retrieve batch data
"RTN","FBAAVR5",27,0)
 S FBNUM=$$GET1^DIQ(161.7,FBN_",",.01) ; NUMBER
"RTN","FBAAVR5",28,0)
 I $D(DIERR) S FBRET="0^Error getting batch data." G END
"RTN","FBAAVR5",29,0)
 S FBTYPE=$$GET1^DIQ(161.7,FBN_",",2,"I") ; TYPE
"RTN","FBAAVR5",30,0)
 I "^B2^B3^B5^B9^"'[("^"_FBTYPE_"^") S FBRET="0^Invalid batch type" G END
"RTN","FBAAVR5",31,0)
 ;
"RTN","FBAAVR5",32,0)
 ; determine subsystem identifier
"RTN","FBAAVR5",33,0)
 D HD^FBAAUTL
"RTN","FBAAVR5",34,0)
 I $G(FBHD)="" S FBRET="0^Error obtaining Subsystem Identifier." G END
"RTN","FBAAVR5",35,0)
 ;
"RTN","FBAAVR5",36,0)
 ; determine string values to transmit
"RTN","FBAAVR5",37,0)
 S FBAUS("SN")=$$LJ^XLFSTR($$STANUM(FBN),6) ; station number
"RTN","FBAAVR5",38,0)
 S FBAUS("DT")=$$AUSDT^FBAAV3(DT) ; date
"RTN","FBAAVR5",39,0)
 S FBAUS("PT")=$S(FBTYPE="B2":"T",1:$E(FBTYPE,2)) ; payment type
"RTN","FBAAVR5",40,0)
 ;
"RTN","FBAAVR5",41,0)
 S FBCNT=0 ; init reject line count
"RTN","FBAAVR5",42,0)
 ;
"RTN","FBAAVR5",43,0)
 ; determine stub string for voucher batch reject line
"RTN","FBAAVR5",44,0)
 S FBSTUB=FBAUS("SN")_FBAUS("DT")_"V"_FBAUS("PT")
"RTN","FBAAVR5",45,0)
 ;
"RTN","FBAAVR5",46,0)
 ; loop thru line items rejected from batch
"RTN","FBAAVR5",47,0)
 I FBTYPE="B2" D
"RTN","FBAAVR5",48,0)
 . N FBIEN,FBIENS
"RTN","FBAAVR5",49,0)
 . S FBIEN(1)=0
"RTN","FBAAVR5",50,0)
 . F  S FBIEN(1)=$O(^FBAAC("AG",FBN,FBIEN(1))) Q:'FBIEN(1)  D
"RTN","FBAAVR5",51,0)
 . . S FBIEN=0
"RTN","FBAAVR5",52,0)
 . . F  S FBIEN=$O(^FBAAC("AG",FBN,FBIEN(1),FBIEN)) Q:'FBIEN  D
"RTN","FBAAVR5",53,0)
 . . . S FBIENS=FBIEN_","_FBIEN(1)_","
"RTN","FBAAVR5",54,0)
 . . . Q:$$GET1^DIQ(162.04,FBIENS,6.3,"I")=1  ; skip interface rej.
"RTN","FBAAVR5",55,0)
 . . . S FBPICN=FBIEN(1)_"^"_FBIEN
"RTN","FBAAVR5",56,0)
 . . . S FBPICN=$$ORGICN(162.04,FBPICN) ; send original ICN
"RTN","FBAAVR5",57,0)
 . . . D ADDLN
"RTN","FBAAVR5",58,0)
 ;
"RTN","FBAAVR5",59,0)
 I FBTYPE="B3" D
"RTN","FBAAVR5",60,0)
 . N FBIEN,FBIENS,FBPICN
"RTN","FBAAVR5",61,0)
 . S FBIEN(3)=0
"RTN","FBAAVR5",62,0)
 . F  S FBIEN(3)=$O(^FBAAC("AH",FBN,FBIEN(3))) Q:'FBIEN(3)  D
"RTN","FBAAVR5",63,0)
 . . S FBIEN(2)=0
"RTN","FBAAVR5",64,0)
 . . F  S FBIEN(2)=$O(^FBAAC("AH",FBN,FBIEN(3),FBIEN(2))) Q:'FBIEN(2)  D
"RTN","FBAAVR5",65,0)
 . . . S FBIEN(1)=0
"RTN","FBAAVR5",66,0)
 . . . F  S FBIEN(1)=$O(^FBAAC("AH",FBN,FBIEN(3),FBIEN(2),FBIEN(1))) Q:'FBIEN(1)  D
"RTN","FBAAVR5",67,0)
 . . . . S FBIEN=0
"RTN","FBAAVR5",68,0)
 . . . . F  S FBIEN=$O(^FBAAC("AH",FBN,FBIEN(3),FBIEN(2),FBIEN(1),FBIEN)) Q:'FBIEN  D
"RTN","FBAAVR5",69,0)
 . . . . . S FBIENS=FBIEN_","_FBIEN(1)_","_FBIEN(2)_","_FBIEN(3)_","
"RTN","FBAAVR5",70,0)
 . . . . . Q:$$GET1^DIQ(162.03,FBIENS,21.3,"I")=1  ; skip interface rej.
"RTN","FBAAVR5",71,0)
 . . . . . S FBPICN=FBIEN(3)_"^"_FBIEN(2)_"^"_FBIEN(1)_"^"_FBIEN
"RTN","FBAAVR5",72,0)
 . . . . . S FBPICN=$$ORGICN(162.03,FBPICN) ; send orignal ICN
"RTN","FBAAVR5",73,0)
 . . . . . D ADDLN
"RTN","FBAAVR5",74,0)
 ;
"RTN","FBAAVR5",75,0)
 I FBTYPE="B5" D
"RTN","FBAAVR5",76,0)
 . N FBIEN,FBIENS,FBPICN
"RTN","FBAAVR5",77,0)
 . S FBIEN(1)=0
"RTN","FBAAVR5",78,0)
 . F  S FBIEN(1)=$O(^FBAA(162.1,"AF",FBN,FBIEN(1))) Q:'FBIEN(1)  D
"RTN","FBAAVR5",79,0)
 . . S FBIEN=0
"RTN","FBAAVR5",80,0)
 . . F  S FBIEN=$O(^FBAA(162.1,"AF",FBN,FBIEN(1),FBIEN)) Q:'FBIEN  D
"RTN","FBAAVR5",81,0)
 . . . S FBIENS=FBIEN_","_FBIEN(1)_","
"RTN","FBAAVR5",82,0)
 . . . Q:$$GET1^DIQ(162.11,FBIENS,19.3,"I")=1  ; skip interface rej.
"RTN","FBAAVR5",83,0)
 . . . S FBPICN=FBIEN(1)_"^"_FBIEN
"RTN","FBAAVR5",84,0)
 . . . D ADDLN
"RTN","FBAAVR5",85,0)
 ;
"RTN","FBAAVR5",86,0)
 I FBTYPE="B9" D
"RTN","FBAAVR5",87,0)
 . N FBIEN,FBIENS,FBPICN
"RTN","FBAAVR5",88,0)
 . S FBIEN=0
"RTN","FBAAVR5",89,0)
 . F  S FBIEN=$O(^FBAAI("AH",FBN,FBIEN)) Q:'FBIEN  D
"RTN","FBAAVR5",90,0)
 . . S FBIENS=FBIEN_","
"RTN","FBAAVR5",91,0)
 . . Q:$$GET1^DIQ(162.5,FBIENS,15.3,"I")=1  ; skip interface rej.
"RTN","FBAAVR5",92,0)
 . . S FBPICN=FBIEN
"RTN","FBAAVR5",93,0)
 . . D ADDLN
"RTN","FBAAVR5",94,0)
 ;
"RTN","FBAAVR5",95,0)
 ; build message header line
"RTN","FBAAVR5",96,0)
 S ^TMP($J,"FBVBM",1)=FBHD_"V"_FBAUS("PT")_FBAUS("DT")_FBAUS("SN")_$$RJ^XLFSTR(FBNUM,6,"0")_$$RJ^XLFSTR(FBCNT,3,"0")_"$"
"RTN","FBAAVR5",97,0)
 ;
"RTN","FBAAVR5",98,0)
 ; address and send message
"RTN","FBAAVR5",99,0)
 D
"RTN","FBAAVR5",100,0)
 . N FBINSTR,XMDUZ,XMERR,XMSUBJ,XMY,XMZ
"RTN","FBAAVR5",101,0)
 . S XMSUBJ="FEE BASIS VOUCHER MESSAGE BATCH "_FBNUM
"RTN","FBAAVR5",102,0)
 . S FBINSTR("ADDR FLAGS")="R"
"RTN","FBAAVR5",103,0)
 . D RECIP
"RTN","FBAAVR5",104,0)
 . D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,"^TMP("_$J_",""FBVBM"")",.XMY,.FBINSTR,.XMZ)
"RTN","FBAAVR5",105,0)
 . I $G(XMERR) S FBRET="0^Error generating mail message"
"RTN","FBAAVR5",106,0)
 . I '$G(XMERR) S FBRET=XMZ
"RTN","FBAAVR5",107,0)
 ;
"RTN","FBAAVR5",108,0)
 ; if message created update batch
"RTN","FBAAVR5",109,0)
 I FBRET D
"RTN","FBAAVR5",110,0)
 . N DIERR,FBFDA,FBX
"RTN","FBAAVR5",111,0)
 . S FBFDA(161.7,FBN_",",21)=DT ; VOUCHER MSG DATE
"RTN","FBAAVR5",112,0)
 . S FBFDA(161.7,FBN_",",22)="P" ; VOUCHER MSG ACK STATUS
"RTN","FBAAVR5",113,0)
 . D FILE^DIE("","FBFDA")
"RTN","FBAAVR5",114,0)
 . D CLEAN^DILF
"RTN","FBAAVR5",115,0)
 ;
"RTN","FBAAVR5",116,0)
END ;
"RTN","FBAAVR5",117,0)
 K ^TMP($J,"FBVBM")
"RTN","FBAAVR5",118,0)
 Q FBRET
"RTN","FBAAVR5",119,0)
 ;
"RTN","FBAAVR5",120,0)
ADDLN ; add detail line
"RTN","FBAAVR5",121,0)
 S FBCNT=FBCNT+1
"RTN","FBAAVR5",122,0)
 S ^TMP($J,"FBVBM",FBCNT+1)=FBSTUB_$$RJ^XLFSTR(FBPICN,30,"0")_"$"
"RTN","FBAAVR5",123,0)
 Q
"RTN","FBAAVR5",124,0)
 ;
"RTN","FBAAVR5",125,0)
STANUM(FBN) ; determine station number to transmit
"RTN","FBAAVR5",126,0)
 ;
"RTN","FBAAVR5",127,0)
 N FBRET,FBX,FBY0
"RTN","FBAAVR5",128,0)
 S FBRET=""
"RTN","FBAAVR5",129,0)
 ;
"RTN","FBAAVR5",130,0)
 ; determine station number based on obligation of batch
"RTN","FBAAVR5",131,0)
 I $G(FBN) D
"RTN","FBAAVR5",132,0)
 . S FBY0=$G(^FBAA(161.7,FBN,0))
"RTN","FBAAVR5",133,0)
 . S FBX=$$SUB^FBAAUTL5(+$P(FBY0,U,8)_"-"_$P(FBY0,U,2))
"RTN","FBAAVR5",134,0)
 . I FBX]"" S FBRET=FBX
"RTN","FBAAVR5",135,0)
 ;
"RTN","FBAAVR5",136,0)
 ; if station number not found use default station number
"RTN","FBAAVR5",137,0)
 I FBRET="" D
"RTN","FBAAVR5",138,0)
 . S FBX=$P($G(^FBAA(161.4,1,1)),"^",3)
"RTN","FBAAVR5",139,0)
 . S:FBX FBRET=$$STA^XUAF4(FBX)
"RTN","FBAAVR5",140,0)
 ;
"RTN","FBAAVR5",141,0)
 Q FBRET
"RTN","FBAAVR5",142,0)
 ;
"RTN","FBAAVR5",143,0)
RECIP ; determine message recipients
"RTN","FBAAVR5",144,0)
 ; input
"RTN","FBAAVR5",145,0)
 ;  DUZ
"RTN","FBAAVR5",146,0)
 ; output
"RTN","FBAAVR5",147,0)
 ;  XMDUZ
"RTN","FBAAVR5",148,0)
 ;  XMY(
"RTN","FBAAVR5",149,0)
 N FBXMFEE,FBXMNVP
"RTN","FBAAVR5",150,0)
 S XMDUZ=DUZ
"RTN","FBAAVR5",151,0)
 ;
"RTN","FBAAVR5",152,0)
 ; get recipients from TRANSMISISON ROUTERS files
"RTN","FBAAVR5",153,0)
 D
"RTN","FBAAVR5",154,0)
 . N FBI,FBVAR,VAT,VATERR,VATNAME
"RTN","FBAAVR5",155,0)
 . D ADDRESS^FBAAV01
"RTN","FBAAVR5",156,0)
 ;
"RTN","FBAAVR5",157,0)
 ; set XMY array and XMDUZ
"RTN","FBAAVR5",158,0)
 D
"RTN","FBAAVR5",159,0)
 . N FBFLAG,FBI,XMD,XMLOC,XMMG,XMN,X,Y
"RTN","FBAAVR5",160,0)
 . D ROUT^FBAAV01
"RTN","FBAAVR5",161,0)
 Q
"RTN","FBAAVR5",162,0)
 ;
"RTN","FBAAVR5",163,0)
ORGICN(FBFILE,FBICN) ; return original ICN value for a line item
"RTN","FBAAVR5",164,0)
 ; input
"RTN","FBAAVR5",165,0)
 ;   FBFILE - sub-file (162.03 or 162.04)
"RTN","FBAAVR5",166,0)
 ;   FBICN  - ICN value
"RTN","FBAAVR5",167,0)
 ; return value = the original ICN value
"RTN","FBAAVR5",168,0)
 ;
"RTN","FBAAVR5",169,0)
 N FBRET
"RTN","FBAAVR5",170,0)
 S FBRET=$G(FBICN)
"RTN","FBAAVR5",171,0)
 ;
"RTN","FBAAVR5",172,0)
 I "^162.03^162.04^"[("^"_$G(FBFILE)_"^"),$G(FBICN)'="" D
"RTN","FBAAVR5",173,0)
 . N FBCIENS,FBOIENS,FBSIENS
"RTN","FBAAVR5",174,0)
 . ; determine starting IEN string
"RTN","FBAAVR5",175,0)
 . I FBFILE=162.03 S FBSIENS=$P(FBICN,"^",4)_","_$P(FBICN,"^",3)_","_$P(FBICN,"^",2)_","_$P(FBICN,"^",1)_","
"RTN","FBAAVR5",176,0)
 . I FBFILE=162.04 S FBSIENS=$P(FBICN,"^",2)_","_$P(FBICN,"^",1)_","
"RTN","FBAAVR5",177,0)
 . ;
"RTN","FBAAVR5",178,0)
 . S FBCIENS=FBSIENS ; init current IEN string as starting IEN string
"RTN","FBAAVR5",179,0)
 . ;
"RTN","FBAAVR5",180,0)
 . ;loop thru moves for current IENs until no more moves are found
"RTN","FBAAVR5",181,0)
 . F  D  Q:FBOIENS=""
"RTN","FBAAVR5",182,0)
 . . N FBDA
"RTN","FBAAVR5",183,0)
 . . S FBOIENS="" ; init old IENs value for a move
"RTN","FBAAVR5",184,0)
 . . S FBDA=$O(^FBAA(161.45,"AN",FBFILE,FBCIENS,0))
"RTN","FBAAVR5",185,0)
 . . Q:'FBDA  ; no more moves
"RTN","FBAAVR5",186,0)
 . . S FBOIENS=$P($G(^FBAA(161.45,FBDA,0)),U,2) ; old IENs
"RTN","FBAAVR5",187,0)
 . . ; if old IEN is same as starting IEN, break out of the endless loop
"RTN","FBAAVR5",188,0)
 . . I FBOIENS=FBSIENS S FBOIENS="" Q
"RTN","FBAAVR5",189,0)
 . . ; set current IENs to the new value
"RTN","FBAAVR5",190,0)
 . . S:FBOIENS'="" FBCIENS=FBOIENS
"RTN","FBAAVR5",191,0)
 . ;
"RTN","FBAAVR5",192,0)
 . ; if current IENs is different from starting IENs update outputs
"RTN","FBAAVR5",193,0)
 . I FBCIENS'=FBSIENS D
"RTN","FBAAVR5",194,0)
 . . I FBFILE=162.03 S FBRET=$P(FBCIENS,",",4)_"^"_$P(FBCIENS,",",3)_"^"_$P(FBCIENS,",",2)_"^"_$P(FBCIENS,",",1)
"RTN","FBAAVR5",195,0)
 . . I FBFILE=162.04 S FBRET=$P(FBCIENS,",",2)_"^"_$P(FBCIENS,",",1)
"RTN","FBAAVR5",196,0)
 ;
"RTN","FBAAVR5",197,0)
 Q FBRET
"RTN","FBAAVR5",198,0)
 ;
"RTN","FBAAVR5",199,0)
 ;FBAAVR5
"RTN","FBAAVR6")
0^39^B12051113^n/a
"RTN","FBAAVR6",1,0)
FBAAVR6 ;WOIFO/SAB - RESEND VOUCHER BATCH MSG ;4/19/2012
"RTN","FBAAVR6",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FBAAVR6",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAAVR6",4,0)
 ;
"RTN","FBAAVR6",5,0)
 ; ICRs
"RTN","FBAAVR6",6,0)
 ;  #10004 EN^DIQ
"RTN","FBAAVR6",7,0)
 ;  #10006 ^DIC
"RTN","FBAAVR6",8,0)
 ;  #10026 ^DIR
"RTN","FBAAVR6",9,0)
 Q
"RTN","FBAAVR6",10,0)
 ;
"RTN","FBAAVR6",11,0)
RESEND ; called by the FBAA RESEND VOUCHER MSG option
"RTN","FBAAVR6",12,0)
 ;
"RTN","FBAAVR6",13,0)
 W !,"This option is used to resend a Voucher Batch message to Central"
"RTN","FBAAVR6",14,0)
 W !,"Fee when the acknowledgement message reported an error or is"
"RTN","FBAAVR6",15,0)
 W !,"overdue.  An acknowledgement is considered overdue if it has not"
"RTN","FBAAVR6",16,0)
 W !,"been received by the 3rd weekday after the Voucher Batch message"
"RTN","FBAAVR6",17,0)
 W !,"was transmitted to Central Fee."
"RTN","FBAAVR6",18,0)
 W !
"RTN","FBAAVR6",19,0)
 W !,"The National Service Desk Austin should be contacted to determine"
"RTN","FBAAVR6",20,0)
 W !,"the status of the voucher batch message before using this option"
"RTN","FBAAVR6",21,0)
 W !,"for an overdue acknowledgement.  If Central Fee already has the"
"RTN","FBAAVR6",22,0)
 W !,"voucher batch message, you should request that Central Fee resend"
"RTN","FBAAVR6",23,0)
 W !,"the acknowledgement message.  If Central Fee does not have the"
"RTN","FBAAVR6",24,0)
 W !,"voucher batch message then use this option to reprocess it.",!
"RTN","FBAAVR6",25,0)
 ;
"RTN","FBAAVR6",26,0)
 N DA,DIC,DIR,DIRUT,DR,DTOUT,DUOUT,FBDT,FBN,FBVMAS,FBX,X,Y
"RTN","FBAAVR6",27,0)
 ;
"RTN","FBAAVR6",28,0)
 ; determine date that is 3 weekdays prior to the current date
"RTN","FBAAVR6",29,0)
 S FBDT=$$CALCDT^FBAADD1(3,DT)
"RTN","FBAAVR6",30,0)
 ;
"RTN","FBAAVR6",31,0)
BT ; select batch
"RTN","FBAAVR6",32,0)
 S DIC="^FBAA(161.7,",DIC(0)="AEQ"
"RTN","FBAAVR6",33,0)
 D  ; set screen
"RTN","FBAAVR6",34,0)
 . N FBX1,FBX2,FBX3
"RTN","FBAAVR6",35,0)
 . ; logic
"RTN","FBAAVR6",36,0)
 . ; STATUS = VOUCHERED and
"RTN","FBAAVR6",37,0)
 . ; VOUCHER MSG ACK STATUS=ERROR or
"RTN","FBAAVR6",38,0)
 . ; VOUCHER MSG ACK STATUS=PENDING and VOUCHER MSG DATE not after FBDT 
"RTN","FBAAVR6",39,0)
 . S FBX1="I ($G(^(""ST""))=""V"")"
"RTN","FBAAVR6",40,0)
 . S FBX2="$P($G(^(1)),""^"",3)=""E"""
"RTN","FBAAVR6",41,0)
 . S FBX3="$P($G(^(1)),""^"",3)=""P""&($P($G(^(1)),""^"",2)'>"_FBDT_")"
"RTN","FBAAVR6",42,0)
 . S DIC("S")=FBX1_"&("_FBX2_"!("_FBX3_"))"
"RTN","FBAAVR6",43,0)
 D ^DIC K DIC G END:Y<0
"RTN","FBAAVR6",44,0)
 L +^FBAA(161.7,+Y):$G(DILOCKTM,3)
"RTN","FBAAVR6",45,0)
 I '$T W !,"Another user is editing this batch.  Try again later." G BT
"RTN","FBAAVR6",46,0)
 S FBN=+Y
"RTN","FBAAVR6",47,0)
 S FBVMAS=$P($G(^FBAA(161.7,FBN,1)),U,3) ; voucher message ack status
"RTN","FBAAVR6",48,0)
 ;
"RTN","FBAAVR6",49,0)
 ; display batch
"RTN","FBAAVR6",50,0)
 S DIC="^FBAA(161.7,",DA=FBN,DR="0:1;ST" W !! D EN^DIQ
"RTN","FBAAVR6",51,0)
 ;
"RTN","FBAAVR6",52,0)
 ; confirm help desk was contacted
"RTN","FBAAVR6",53,0)
 I FBVMAS="P" D  G:$D(DIRUT)!'Y END
"RTN","FBAAVR6",54,0)
 . S DIR(0)="Y"
"RTN","FBAAVR6",55,0)
 . S DIR("A")="Have you confirmed that Central Fee did not receive the voucher msg."
"RTN","FBAAVR6",56,0)
 . W !
"RTN","FBAAVR6",57,0)
 . D ^DIR K DIR
"RTN","FBAAVR6",58,0)
 . I 'Y W !,"Please contact the National Service Desk Austin to determine",!,"if Central Fee received the voucher message."
"RTN","FBAAVR6",59,0)
 ;
"RTN","FBAAVR6",60,0)
 ; confirm
"RTN","FBAAVR6",61,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","FBAAVR6",62,0)
 S DIR("A")="Are you sure you want to resend the voucher batch message"
"RTN","FBAAVR6",63,0)
 D ^DIR K DIR G:$D(DIRUT)!'Y END
"RTN","FBAAVR6",64,0)
 ;
"RTN","FBAAVR6",65,0)
 ; generate voucher batch message
"RTN","FBAAVR6",66,0)
 S FBX=$$VBMSG^FBAAVR5(FBN)
"RTN","FBAAVR6",67,0)
 I FBX W !,"Voucher Batch message # "_FBX_" sent to Central Fee."
"RTN","FBAAVR6",68,0)
 I 'FBX D  G END
"RTN","FBAAVR6",69,0)
 . W !,"Error occurred during creation of voucher batch message."
"RTN","FBAAVR6",70,0)
 . W !,"  ",$P(FBX,U,2)
"RTN","FBAAVR6",71,0)
 ;
"RTN","FBAAVR6",72,0)
 ; display batch
"RTN","FBAAVR6",73,0)
 S DIC="^FBAA(161.7,",DA=FBN,DR="0:1;ST" W !! D EN^DIQ
"RTN","FBAAVR6",74,0)
 ;
"RTN","FBAAVR6",75,0)
END ;
"RTN","FBAAVR6",76,0)
 I $G(FBN) L -^FBAA(161.7,FBN)
"RTN","FBAAVR6",77,0)
 Q
"RTN","FBAAVR6",78,0)
 ;
"RTN","FBAAVR6",79,0)
 ;FBAAVR6
"RTN","FBCHDIN")
0^29^B5017257^B4594745
"RTN","FBCHDIN",1,0)
FBCHDIN ;AISC/DMK - DELETE INPATIENT INVOICE ;3/27/2012
"RTN","FBCHDIN",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FBCHDIN",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBCHDIN",4,0)
 ;
"RTN","FBCHDIN",5,0)
BAT ;ask batch Number
"RTN","FBCHDIN",6,0)
 ;cannot delete an invoice from a batch that has a status of
"RTN","FBCHDIN",7,0)
 ;supervisor closed, reviewed after pricer, transmitted or vouchered.
"RTN","FBCHDIN",8,0)
 ;A clerk may delete an invoice in a batch
"RTN","FBCHDIN",9,0)
 ;they own if the status is open, closed, forwarded to pricer or
"RTN","FBCHDIN",10,0)
 ;assigned price.
"RTN","FBCHDIN",11,0)
 ;
"RTN","FBCHDIN",12,0)
 D HOME^%ZIS
"RTN","FBCHDIN",13,0)
 W ! S DIC="^FBAA(161.7,",DIC(0)="AEQMZ"
"RTN","FBCHDIN",14,0)
 S DIC("S")=$S($D(^XUSEC("FBAASUPERVISOR",DUZ)):"I ""TFV""'[$G(^(""ST""))",1:"I $P(^(0),U,5)=DUZ&(""TFVRS""'[($G(^(""ST""))))")_"&($P(^(0),U,3)=""B9"")"
"RTN","FBCHDIN",15,0)
 D ^DIC K DIC G END:X=""!(X="^")
"RTN","FBCHDIN",16,0)
 L +^FBAA(161.7,+Y):$G(DILOCKTM,3)
"RTN","FBCHDIN",17,0)
 I '$T W !,"Another user is editing this batch.  Try again later." G BAT
"RTN","FBCHDIN",18,0)
 S FBBAT=+Y,FBBAT(0)=Y(0)
"RTN","FBCHDIN",19,0)
 ;
"RTN","FBCHDIN",20,0)
INV ;get invoice user wants to delete in batch selected
"RTN","FBCHDIN",21,0)
 W ! S DIC="^FBAAI(",DIC(0)="AEQZ",DIC("S")="I $D(^FBAAI(""AC"",FBBAT,X))"
"RTN","FBCHDIN",22,0)
 S DIC("A")="Select Invoice to delete: " D ^DIC K DIC I X=""!(X="^") L -^FBAA(161.7,FBBAT) G BAT
"RTN","FBCHDIN",23,0)
 S FBDINV=Y,FBDINV(0)=Y(0),FBI=+Y,FBLISTC=0 D START^FBCHDI
"RTN","FBCHDIN",24,0)
 W ! S DIR(0)="Y",DIR("B")="No",DIR("A")="Sure you want to delete this invoice" D ^DIR K DIR G END:$D(DIRUT) I 'Y L -^FBAA(161.7,FBBAT) G BAT
"RTN","FBCHDIN",25,0)
 ;
"RTN","FBCHDIN",26,0)
 S DA=+FBDINV,DIK="^FBAAI(" W !?5,".... deleting!",!
"RTN","FBCHDIN",27,0)
 D ^DIK K DIK
"RTN","FBCHDIN",28,0)
 ;
"RTN","FBCHDIN",29,0)
 ;reset batch dollar amount, total payment items and invoice count
"RTN","FBCHDIN",30,0)
 D CNTTOT^FBAARB(FBBAT)
"RTN","FBCHDIN",31,0)
 S $P(FBBAT(0),"^",9)=+FBTOTAL
"RTN","FBCHDIN",32,0)
 S $P(FBBAT(0),"^",10)=+FBLCNT
"RTN","FBCHDIN",33,0)
 S $P(FBBAT(0),"^",11)=+FBLCNT
"RTN","FBCHDIN",34,0)
 S:$P(FBBAT(0),"^",10)'>0 $P(FBBAT(0),"^",18)=""
"RTN","FBCHDIN",35,0)
 S $P(^FBAA(161.7,FBBAT,0),"^",9,11)=$P(FBBAT(0),"^",9,11),$P(^FBAA(161.7,FBBAT,0),"^",18)=$P(FBBAT(0),"^",18)
"RTN","FBCHDIN",36,0)
END I $G(FBBAT) L -^FBAA(161.7,FBBAT)
"RTN","FBCHDIN",37,0)
 K DA,FBBAT,FBLISTC,FBDINV,FBAAOUT,FBDX,FBDX1,FBPAT,FBPROC,FBVEN,X,Y,Q
"RTN","FBCHDIN",38,0)
 D END^FBCHDI Q
"RTN","FBCHEP1")
0^30^B39885067^B39779983
"RTN","FBCHEP1",1,0)
FBCHEP1 ;AISC/DMK-EDIT PAYMENT FOR CONTRACT HOSPITAL ; 5/16/12 3:31pm
"RTN","FBCHEP1",2,0)
 ;;3.5;FEE BASIS;**38,61,122,133,108,124,132**;JAN 30, 1995;Build 17
"RTN","FBCHEP1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBCHEP1",4,0)
EDIT ;ENTRY POINT TO EDIT PAYMENT
"RTN","FBCHEP1",5,0)
 N LASTDX,LASTPROC
"RTN","FBCHEP1",6,0)
 S IOP=$S($D(ION):ION,1:"HOME") D ^%ZIS K IOP
"RTN","FBCHEP1",7,0)
BT W ! S DIC="^FBAA(161.7,",DIC(0)="AEQMZ",DIC("S")="I $P(^(0),U,3)=""B9""&($P(^(0),U,15)=""Y"")",DIC("S")=$S($D(^XUSEC("FBAASUPERVISOR",DUZ)):DIC("S"),1:DIC("S")_"&($P(^(0),U,5)=DUZ)") D ^DIC
"RTN","FBCHEP1",8,0)
 G END:X=""!(X="^"),BT:Y<0 S FBN=+Y,FBN(0)=Y(0)
"RTN","FBCHEP1",9,0)
 S FBEXMPT=$P(FBN(0),"^",18)
"RTN","FBCHEP1",10,0)
 S FBSTAT=^FBAA(161.7,FBN,"ST"),FBBAMT=$S($P(FBN(0),"^",9)="":0,1:$P(FBN(0),"^",9))
"RTN","FBCHEP1",11,0)
 I FBSTAT="C"&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,?3,"You must Reopen the batch prior to editting the invoice.",! G END
"RTN","FBCHEP1",12,0)
 I FBSTAT="S"!(FBSTAT="P")!(FBSTAT="R")&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,?3,"You must be a holder of the 'FBAASUPERVISOR' security key",!,?3,"to edit this invoice.",! G END
"RTN","FBCHEP1",13,0)
 I FBSTAT="T"!(FBSTAT="F")!(FBSTAT="V") W !!,?3,"Batch has already been sent to Austin for payment.",! G END
"RTN","FBCHEP1",14,0)
INV W ! S DIC="^FBAAI(",DIC(0)="AEQZ",DIC("S")="I $P(^(0),U,17)=FBN" D ^DIC K DIC("S") G BT:X=""!(X="^"),INV:Y<0 S FBI=+Y
"RTN","FBCHEP1",15,0)
 S FBK=$S($P(^FBAAI(FBI,0),"^",9)="":0,1:$P(^(0),"^",9))
"RTN","FBCHEP1",16,0)
 S FBLISTC="",FBAAI=FBI W @IOF D START^FBCHDI2 S FBI=FBAAI I $P(^FBAAI(FBI,0),"^",9)="" S FBPRICE=""
"RTN","FBCHEP1",17,0)
 ; set FB1725 flag = true if payment for a 38 U.S.C. 1725 claim
"RTN","FBCHEP1",18,0)
 D
"RTN","FBCHEP1",19,0)
 . N FBY
"RTN","FBCHEP1",20,0)
 . S FBY=$G(^FBAAI(FBI,0))
"RTN","FBCHEP1",21,0)
 . S FB1725=$S($P(FBY,U,5)["FB583":+$P($G(^FB583(+$P(FBY,U,5),0)),U,28),1:0)
"RTN","FBCHEP1",22,0)
 ; get values of FPPS Claim ID and Line Item
"RTN","FBCHEP1",23,0)
 S FBFPPSC=$P($G(^FBAAI(FBI,3)),U)
"RTN","FBCHEP1",24,0)
 S FBFPPSL=$P($G(^FBAAI(FBI,3)),U,2)
"RTN","FBCHEP1",25,0)
 ; load current adjustment data
"RTN","FBCHEP1",26,0)
 D LOADADJ^FBCHFA(FBI_",",.FBADJ)
"RTN","FBCHEP1",27,0)
 ; save adjustment data prior to edit session in sorted list
"RTN","FBCHEP1",28,0)
 S FBADJL(0)=$$ADJL^FBUTL2(.FBADJ) ; sorted list of original adjustments
"RTN","FBCHEP1",29,0)
 ; load current remittance remark data
"RTN","FBCHEP1",30,0)
 D LOADRR^FBCHFR(FBI_",",.FBRRMK)
"RTN","FBCHEP1",31,0)
 ; load Item level Rendering provider data
"RTN","FBCHEP1",32,0)
 D LOADRP^FBUTL8(FBI_",",.FBPROV) ;FB*3.5*122
"RTN","FBCHEP1",33,0)
 ; save remittance remarks prior to edit session in sorted list
"RTN","FBCHEP1",34,0)
 S FBRRMKL(0)=$$RRL^FBUTL4(.FBRRMK)
"RTN","FBCHEP1",35,0)
 S LASTDX=$$LAST(FBI,"DX"),LASTPROC=$$LAST(FBI,"PROC")
"RTN","FBCHEP1",36,0)
 S (DIE,DIC)="^FBAAI(",DIC(0)="AEQM",DA=FBI,DR="[FBCH EDIT PAYMENT]" W !
"RTN","FBCHEP1",37,0)
 D
"RTN","FBCHEP1",38,0)
 . N ICDVDT,DFN,FB583,FBAAMM1,FBAAPTC,FBCNTRA,FBCNTRP,FBV,FBVEN,FTP
"RTN","FBCHEP1",39,0)
 . S ICDVDT=$$FRDTINV^FBCSV1(DA) ;date for files 80 and 80.1 identifier
"RTN","FBCHEP1",40,0)
 . ;get variables for cal to PPT^FBAACO1
"RTN","FBCHEP1",41,0)
 . S FBAAMM1=$P($G(^FBAAI(DA,2)),U,3)
"RTN","FBCHEP1",42,0)
 . S FBCNTRP=$P($G(^FBAAI(DA,5)),U,8)
"RTN","FBCHEP1",43,0)
 . S FBV=$P($G(^FBAAI(DA,0)),U,3)
"RTN","FBCHEP1",44,0)
 . S DFN=$P($G(^FBAAI(DA,0)),U,4)
"RTN","FBCHEP1",45,0)
 . S FBAAPTC=$P($G(^FBAAI(DA,0)),U,13)
"RTN","FBCHEP1",46,0)
 . S X=$P($G(^FBAAI(DA,0)),U,5)
"RTN","FBCHEP1",47,0)
 . S:X[";FB583(" FB583=+X
"RTN","FBCHEP1",48,0)
 . S FTP=$S(X]"":+$O(^FBAAA("AG",X,DFN,0)),1:"")
"RTN","FBCHEP1",49,0)
 . S FBVEN=$S(FTP:$P($G(^FBAAA(DFN,1,FTP,0)),U,4),1:"")
"RTN","FBCHEP1",50,0)
 . S FBCNTRA=$S(FTP:$P($G(^FBAAA(DFN,1,FTP,0)),U,22),1:"")
"RTN","FBCHEP1",51,0)
 . D ^DIE
"RTN","FBCHEP1",52,0)
 ; if adjustment data changed then file
"RTN","FBCHEP1",53,0)
 I $$ADJL^FBUTL2(.FBADJ)'=FBADJL(0) D FILEADJ^FBCHFA(FBI_",",.FBADJ)
"RTN","FBCHEP1",54,0)
 ; if remit remark data changed then file
"RTN","FBCHEP1",55,0)
 I $$RRL^FBUTL4(.FBRRMK)'=FBRRMKL(0) D FILERR^FBCHFR(FBI_",",.FBRRMK)
"RTN","FBCHEP1",56,0)
 ; remove any gaps in codes
"RTN","FBCHEP1",57,0)
 D RMVGAP(FBI,1)
"RTN","FBCHEP1",58,0)
 ; if line item rendering providers exist then file FB*3.5*133
"RTN","FBCHEP1",59,0)
 I $D(FBPROV) D FILERP^FBUTL8(FBI_",",.FBPROV)
"RTN","FBCHEP1",60,0)
 K FBAAMM,FBAAMM1
"RTN","FBCHEP1",61,0)
 S FBNK=$P(^FBAAI(FBI,0),"^",9)
"RTN","FBCHEP1",62,0)
 I FBNK-FBK S $P(^FBAA(161.7,FBN,0),"^",9)=FBBAMT+(FBNK-FBK)
"RTN","FBCHEP1",63,0)
END K DA,DFN,DIC,DIE,DR,FBAAOUT,FBDX,FBI,FBIN,FBLISTC,FBN,FBPROC,FBSTAT,FBVEN,FBVID,J,K,L,POP,Q,VA,VADM,X,FBIFN,Y,FBPRICE,FBK,FBNK,FB583,FBAAPN,FBASSOC,FBDEL,FBLOC,DAT
"RTN","FBCHEP1",64,0)
 K CNT,D0,FB7078,FBAABDT,FBAAEDT,FBASSOC,FBAUT,FBLOC,FBPROG,FBPSA,FBPT,FBRR,FBTT,FBTYPE,FBXX,FTP,PI,PTYPE,T,Z,ZZ,F,FBPOV,I,TA,VAL,DUOUT,FBVET,FBBAMT,FBAAI,FBEXMPT,FB1725,FBPAMT
"RTN","FBCHEP1",65,0)
 K FBFPPSC,FBFPPSL,FBADJ,FBADJD,FBRRMK,FBRRMKD
"RTN","FBCHEP1",66,0)
 D END^FBCHDI
"RTN","FBCHEP1",67,0)
 Q
"RTN","FBCHEP1",68,0)
 ;
"RTN","FBCHEP1",69,0)
BADDATE(INVRCVDT,TEMPDA) ;Compare edited Invoice Received Date to Treatment Date, reject if before. Called from [FBCH EDIT PAYMENT] template. 
"RTN","FBCHEP1",70,0)
 I INVRCVDT="" Q 0 ;Inv Date not changed, no check necessary
"RTN","FBCHEP1",71,0)
 N TDAT,SHODAT S TDAT=$$GET1^DIQ(162.5,TEMPDA_",",6,"I") I TDAT]"" S SHODAT="TO"
"RTN","FBCHEP1",72,0)
 I TDAT="" S TDAT=$$GET1^DIQ(162.5,TEMPDA_",",5,"I"),SHODAT="FROM"
"RTN","FBCHEP1",73,0)
 I INVRCVDT<TDAT D  Q 1 ;Reject entered date
"RTN","FBCHEP1",74,0)
 .N SHOTDAT S SHOTDAT=$E(TDAT,4,5)_"/"_$E(TDAT,6,7)_"/"_$E(TDAT,2,3) ;Convert TDAT into display format for error message.
"RTN","FBCHEP1",75,0)
 .N MSG1,MSG2 S MSG1="*** Invoice Received Date cannot be before",MSG2=" Treatment "_SHODAT_" Date ("_SHOTDAT_") !!!"
"RTN","FBCHEP1",76,0)
 .W !!?5,*7,MSG1,!?8,MSG2
"RTN","FBCHEP1",77,0)
 Q 0 ;Date entered is OK
"RTN","FBCHEP1",78,0)
 ;
"RTN","FBCHEP1",79,0)
LAST(FBDA,FBNODE) ; Returns number (0-25) of last code in node for invoice
"RTN","FBCHEP1",80,0)
 D RMVGAP(FBDA,0)  ;Insure that gaps were not created outside normal processes
"RTN","FBCHEP1",81,0)
 N FBI,FBRET,FBX
"RTN","FBCHEP1",82,0)
 S FBRET=0
"RTN","FBCHEP1",83,0)
 I FBDA,"^DX^PROC^"[(U_FBNODE_U) D
"RTN","FBCHEP1",84,0)
 . S FBX=$G(^FBAAI(FBDA,FBNODE))
"RTN","FBCHEP1",85,0)
 . F FBI=25:-1:1 I $P(FBX,"^",FBI)'="" S FBRET=FBI Q
"RTN","FBCHEP1",86,0)
 Q FBRET
"RTN","FBCHEP1",87,0)
 ;
"RTN","FBCHEP1",88,0)
RMVGAP(FBDA,FBWRT) ;  Remove gaps in ICD diagnosis and procedure codes
"RTN","FBCHEP1",89,0)
 ; input
"RTN","FBCHEP1",90,0)
 ;   FBDA  IEN of invoice
"RTN","FBCHEP1",91,0)
 ;   FBWRT (optional) =1 if messages can be written to the screen
"RTN","FBCHEP1",92,0)
 ; remove any gaps
"RTN","FBCHEP1",93,0)
 N DXFLD,FBDX,FBFDA,FBI,FBMOVED,FBN,FBPOA,FBPROC,POAFLD,PROCFLD
"RTN","FBCHEP1",94,0)
 D FLDLIST ; get list of field numbers
"RTN","FBCHEP1",95,0)
 ; check diagnosis and POA codes
"RTN","FBCHEP1",96,0)
 S FBDX=$G(^FBAAI(FBDA,"DX"))
"RTN","FBCHEP1",97,0)
 S FBPOA=$G(^FBAAI(FBDA,"POA"))
"RTN","FBCHEP1",98,0)
 S FBMOVED=0
"RTN","FBCHEP1",99,0)
 S FBN=0
"RTN","FBCHEP1",100,0)
 F FBI=1:1:25 D
"RTN","FBCHEP1",101,0)
 . Q:$P(FBDX,U,FBI)=""
"RTN","FBCHEP1",102,0)
 . S FBN=FBN+1 ; increment number of diagnosis codes
"RTN","FBCHEP1",103,0)
 . Q:FBI=FBN  ; no gap
"RTN","FBCHEP1",104,0)
 . ; move diagnosis and POA from slot FBI to slot FBN
"RTN","FBCHEP1",105,0)
 . S FBMOVED=1 ; set flag for message
"RTN","FBCHEP1",106,0)
 . K FBFDA
"RTN","FBCHEP1",107,0)
 . S FBFDA(162.5,FBDA_",",$P(DXFLD,U,FBN))=$P(FBDX,U,FBI)
"RTN","FBCHEP1",108,0)
 . S FBFDA(162.5,FBDA_",",$P(POAFLD,U,FBN))=$P(FBPOA,U,FBI)
"RTN","FBCHEP1",109,0)
 . S FBFDA(162.5,FBDA_",",$P(DXFLD,U,FBI))="@"
"RTN","FBCHEP1",110,0)
 . S FBFDA(162.5,FBDA_",",$P(POAFLD,U,FBI))="@"
"RTN","FBCHEP1",111,0)
 . D FILE^DIE("","FBFDA") D:$G(FBWRT) MSG^DIALOG()
"RTN","FBCHEP1",112,0)
 . S $P(FBDX,U,FBN)=$P(FBDX,U,FBI)
"RTN","FBCHEP1",113,0)
 . S $P(FBPOA,U,FBN)=$P(FBPOA,U,FBI)
"RTN","FBCHEP1",114,0)
 . S $P(FBDX,U,FBI)=""
"RTN","FBCHEP1",115,0)
 . S $P(FBPOA,U,FBI)=""
"RTN","FBCHEP1",116,0)
 I $G(FBWRT),FBMOVED W !,"Diagnosis codes were moved to remove gaps"
"RTN","FBCHEP1",117,0)
 ;
"RTN","FBCHEP1",118,0)
 S FBPROC=$G(^FBAAI(FBDA,"PROC"))
"RTN","FBCHEP1",119,0)
 S FBMOVED=0
"RTN","FBCHEP1",120,0)
 S FBN=0
"RTN","FBCHEP1",121,0)
 F FBI=1:1:25 D
"RTN","FBCHEP1",122,0)
 . Q:$P(FBPROC,U,FBI)=""
"RTN","FBCHEP1",123,0)
 . S FBN=FBN+1 ; increment number of procedure codes
"RTN","FBCHEP1",124,0)
 . Q:FBI=FBN  ; no gap
"RTN","FBCHEP1",125,0)
 . ; move procedure from slot FBI to slot FBN
"RTN","FBCHEP1",126,0)
 . S FBMOVED=1
"RTN","FBCHEP1",127,0)
 . K FBFDA
"RTN","FBCHEP1",128,0)
 . S FBFDA(162.5,FBDA_",",$P(PROCFLD,U,FBN))=$P(FBPROC,U,FBI)
"RTN","FBCHEP1",129,0)
 . S FBFDA(162.5,FBDA_",",$P(PROCFLD,U,FBI))="@"
"RTN","FBCHEP1",130,0)
 . D FILE^DIE("","FBFDA") D:$G(FBWRT) MSG^DIALOG()
"RTN","FBCHEP1",131,0)
 . S $P(FBPROC,U,FBN)=$P(FBPROC,U,FBI)
"RTN","FBCHEP1",132,0)
 . S $P(FBPROC,U,FBI)=""
"RTN","FBCHEP1",133,0)
 I $G(FBWRT),FBMOVED W !,"Procedure codes were moved to remove gaps"
"RTN","FBCHEP1",134,0)
 Q
"RTN","FBCHEP1",135,0)
 ;
"RTN","FBCHEP1",136,0)
FLDLIST ; Provide list of fields for diagnosis, POA, and prodedures
"RTN","FBCHEP1",137,0)
 S DXFLD="30^31^32^33^34^35^35.1^35.2^35.3^35.4^35.5^35.6^35.7^35.8^35.9^36^36.1^36.2^36.3^36.4^36.5^36.6^36.7^36.8^36.9"
"RTN","FBCHEP1",138,0)
 S POAFLD="30.02^31.02^32.02^33.02^34.02^35.02^35.12^35.22^35.32^35.42^35.52^35.62^35.72^35.82^35.92^36.02^36.12^36.22^36.32^36.42^36.52^36.62^36.72^26.82^36.92"
"RTN","FBCHEP1",139,0)
 S PROCFLD="40^41^42^43^44^44.06^44.07^44.08^44.09^44.1^44.11^44.12^44.13^44.14^44.15^44.16^44.17^44.18^44.19^44.2^44.21^44.22^44.23^44.24^44.25"
"RTN","FBCHEP1",140,0)
 Q
"RTN","FBCHPET")
0^28^B40150841^B40446570
"RTN","FBCHPET",1,0)
FBCHPET ;AISC/DMK - EDIT ANCILLARY PAYMENT ; 5/16/12 12:52pm
"RTN","FBCHPET",2,0)
 ;;3.5;FEE BASIS;**4,38,61,77,116,108,124,132**;JAN 30, 1995;Build 17
"RTN","FBCHPET",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBCHPET",4,0)
 S FY=$E(DT,1,3)+1700+$S($E(4,5)>9:1,1:0)
"RTN","FBCHPET",5,0)
GETPT I $G(BAT) D
"RTN","FBCHPET",6,0)
 .I '$D(^FBAAC("AC",+BAT)) F I=9,10,11 S $P(^FBAA(161.7,+BAT,0),U,I)=""
"RTN","FBCHPET",7,0)
 .I $D(^FBAAC("AC",+BAT)) D  S $P(^FBAA(161.7,+BAT,0),U,11)=I,$P(^(0),U,9)=$G(FBTOT) K I,FBTOT
"RTN","FBCHPET",8,0)
 ..N J,K,L,M S (I,J,K,L,M,FBTOT)=0
"RTN","FBCHPET",9,0)
 ..F  S J=$O(^FBAAC("AC",+BAT,J)) Q:'J  F  S K=$O(^FBAAC("AC",+BAT,J,K)) Q:'K  F  S L=$O(^FBAAC("AC",+BAT,J,K,L)) Q:'L  F  S M=$O(^FBAAC("AC",+BAT,J,K,L,M)) Q:'M  I $D(^FBAAC(J,1,K,1,L,1,M,0)) S I=I+1,FBTOT=FBTOT+$P(^(0),U,3)
"RTN","FBCHPET",10,0)
 W !! S DIC="^FBAAC(",DIC(0)="AEQM" D ^DIC G END:X="^"!(X=""),GETPT:Y<0 S (DFN,FBDA(3))=+Y
"RTN","FBCHPET",11,0)
 S:'$D(^FBAAC(DFN,1,0)) ^FBAAC(DFN,1,0)="^162.01P^0^0"
"RTN","FBCHPET",12,0)
 S DIC=DIC_DFN_",1,"
"RTN","FBCHPET",13,0)
GETVD W !! S DIC(0)="AEQM" D ^DIC G GETPT:X="^"!(X=""),GETVD:Y<0 S (FBV,FBVD,FBDA(2))=+Y
"RTN","FBCHPET",14,0)
 S:'$D(^FBAAC(DFN,1,FBDA(2),1,0)) ^FBAAC(DFN,1,FBDA(2),1,0)="^162.02DA^0^0"
"RTN","FBCHPET",15,0)
 S DIC=DIC_FBVD_",1,"
"RTN","FBCHPET",16,0)
GETDT S DIC(0)="AEQM",DIC("A")="Date of Service: " D ^DIC K DIC("A") G GETPT:X="^"!(X=""),GETDT:Y<0 S (FBSD,FBSDI,FBDA(1))=+Y,FBAADT=$P(Y,U,2) S:'$D(^FBAAC(DFN,1,FBDA(2),1,FBDA(1),1,0)) ^FBAAC(DFN,1,FBDA(2),1,FBDA(1),1,0)="^162.03A^0^0"
"RTN","FBCHPET",17,0)
 S FBZ=DIC_FBSD_",1,"
"RTN","FBCHPET",18,0)
SERV S DA(3)=FBDA(3),DA(2)=FBDA(2),DA(1)=FBDA(1)
"RTN","FBCHPET",19,0)
 S DIC("W")="N FBX S FBX=$$MODL^FBAAUTL4(""^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,+Y,""""M"""")"",""E"") W:FBX]"""" ""    CPT Modifier(s): "",FBX Q"
"RTN","FBCHPET",20,0)
 S DIC=FBZ,DIC(0)="AEQMZ"
"RTN","FBCHPET",21,0)
 D
"RTN","FBCHPET",22,0)
 . N ICPTVDT S ICPTVDT=$G(FBAADT) D ^DIC
"RTN","FBCHPET",23,0)
 G GETPT:X="^"!(X=""),SERV:Y<0 S (FBSV,FBAACPI,FBDA)=+Y,BAT=$P(Y(0),U,8),FBDUZ=$P(Y(0),U,7),(FBAACP,FBAACP(0))=$P(Y,U,2),K=$P(Y(0),U,3),FBAAPTC=$P(Y(0),U,20),J(0)=$P(Y(0),U,2)
"RTN","FBCHPET",24,0)
 ; set FB1725 true (1) if payment is for a Mill Bill claim
"RTN","FBCHPET",25,0)
 S FB1725=$S($P(Y(0),U,13)["FB583":+$P($G(^FB583(+$P(Y(0),U,13),0)),U,28),1:0)
"RTN","FBCHPET",26,0)
 I FBDUZ'=DUZ&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,"Sorry,only the clerk who entered the payment ",!," or a supervisor can edit this payment." G GETPT
"RTN","FBCHPET",27,0)
 ;S FBAAMM1=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,2)),U,2)
"RTN","FBCHPET",28,0)
 S FBFSAMT(0)=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,2)),U,12)
"RTN","FBCHPET",29,0)
 ; determine lesser of original fee schedule amount and amount claimed
"RTN","FBCHPET",30,0)
 S FBAMTPD(0)=$S(FBFSAMT(0)="":J(0),FBFSAMT(0)>J(0):J(0),1:FBFSAMT(0))
"RTN","FBCHPET",31,0)
 S FBMODL=$$MODL^FBAAUTL4("^FBAAC("_FBDA(3)_",1,"_FBDA(2)_",1,"_FBDA(1)_",1,"_FBDA_",""M"")")
"RTN","FBCHPET",32,0)
 ; load current adjustment data
"RTN","FBCHPET",33,0)
 D LOADADJ^FBAAFA(FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",.FBADJ)
"RTN","FBCHPET",34,0)
 ; save adjustment data prior to edit session in sorted list
"RTN","FBCHPET",35,0)
 S FBADJL(0)=$$ADJL^FBUTL2(.FBADJ) ; sorted list of original adjustments
"RTN","FBCHPET",36,0)
 ; load current remittance remark data
"RTN","FBCHPET",37,0)
 D LOADRR^FBAAFR(FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",.FBRRMK)
"RTN","FBCHPET",38,0)
 ; save remittance remarks prior to edit session in sorted list
"RTN","FBCHPET",39,0)
 S FBRRMKL(0)=$$RRL^FBUTL4(.FBRRMK)
"RTN","FBCHPET",40,0)
 S FBFPPSC(0)=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,3)),U)
"RTN","FBCHPET",41,0)
 S FBFPPSC=FBFPPSC(0)
"RTN","FBCHPET",42,0)
 S FBFPPSL(0)=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,3)),U,2)
"RTN","FBCHPET",43,0)
 S FBFPPSL=FBFPPSL(0)
"RTN","FBCHPET",44,0)
 G:BAT']"" EDIT
"RTN","FBCHPET",45,0)
 ; check batch status
"RTN","FBCHPET",46,0)
 S FBSTAT=$P($G(^FBAA(161.7,BAT,"ST")),U) ; batch status
"RTN","FBCHPET",47,0)
 I FBSTAT="S",'$D(^XUSEC("FBAASUPERVISOR",DUZ)) W !!,*7,"Sorry, only the Supervisor can edit a payment once the batch has been released." G GETPT
"RTN","FBCHPET",48,0)
 I "^T^F^V^"[(U_FBSTAT_U) W !!,*7,"Sorry, you cannot edit a payment when the batch has been sent to Austin." G GETPT
"RTN","FBCHPET",49,0)
 K FBSTAT
"RTN","FBCHPET",50,0)
EDIT S DA=FBSV
"RTN","FBCHPET",51,0)
 ;
"RTN","FBCHPET",52,0)
 ; first edit CPT code and modifiers
"RTN","FBCHPET",53,0)
 D CPTM^FBAALU(FBAADT,DFN,FBAACP(0),FBMODL) I '$G(FBGOT) G GETPT
"RTN","FBCHPET",54,0)
 ; if CPT was changed then update file
"RTN","FBCHPET",55,0)
 I FBAACP'=FBAACP(0) D  I FBAACP="@" G GETPT
"RTN","FBCHPET",56,0)
 . N FBIENS,FBFDA
"RTN","FBCHPET",57,0)
 . S FBIENS=FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_","
"RTN","FBCHPET",58,0)
 . S FBFDA(162.03,FBIENS,.01)=FBAACP
"RTN","FBCHPET",59,0)
 . D FILE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBCHPET",60,0)
 ; if modifiers changed then update file
"RTN","FBCHPET",61,0)
 I FBMODL'=$$MODL^FBAAUTL4("FBMODA") D REPMOD^FBAAUTL4(FBDA(3),FBDA(2),FBDA(1),FBDA)
"RTN","FBCHPET",62,0)
 ;
"RTN","FBCHPET",63,0)
 ; now edit remaining fields
"RTN","FBCHPET",64,0)
 S DIE("NO^")=""
"RTN","FBCHPET",65,0)
 S DR="48;47;S FBUNITS=X;42R;S FBZIP=X;S:$$ANES^FBAAFS($$CPT^FBAAUTL4(FBAACP)) Y=""@2"";43///@;S FBTIME=X;S Y=""@3"";@2;43R;S FBTIME=X;@3"
"RTN","FBCHPET",66,0)
 ; fb*3.5*116 remove edit of interest indicator (162.03,34) to prevent different interest indicator values at line item level; interest indicator set at invoice level only;
"RTN","FBCHPET",67,0)
 ;S DR(1,162.03,1)="S FBAAMM=$S(FBAAPTC=""R"":"""",1:1);D PPT^FBAACO1(FBAAMM1);30R;S FBHCFA(30)=X;1;S J=X;Q"
"RTN","FBCHPET",68,0)
 S DR(1,162.03,1)="S FBAAMM=$S(FBAAPTC=""R"":"""",$D(FB583):"""",1:1);D PPT^FBAACO1(FBAAMM1,FBCNTRP,1);54///@;54////^S X=$G(FBCNTRP);30R;S FBHCFA(30)=X;1;S J=X;Q"
"RTN","FBCHPET",69,0)
 S DR(1,162.03,2)="D FEEDT^FBAACO3;44///@;44///^S X=FBFSAMT;45///@;45///^S X=FBFSUSD;S:FBAMTPD'>0!(FBAMTPD=FBAMTPD(0)) Y=""@4"";2///^S X=FBAMTPD;@4;2//^S X=FBAMTPD;D CHKIT^FBAACO3;S K=X"
"RTN","FBCHPET",70,0)
 ;S DR(1,162.03,3)="3////^S X=$S(J-K:J-K,1:"""");I X S Y=""@11"";4////@;S Y=""@5"";@11;3R;4R;S:X'=4 Y=""@5"";22;K FBADJD;M FBADJD=FBADJ;S FBX=$$ADJ^FBUTL2(J-K,.FBADJ,2,,.FBADJD,1)"
"RTN","FBCHPET",71,0)
 S DR(1,162.03,3)="K FBADJD;M FBADJD=FBADJ;S FBX=$$ADJ^FBUTL2(J-K,.FBADJ,2,,.FBADJD,1)"
"RTN","FBCHPET",72,0)
 S DR(1,162.03,4)="S FBX=$$FPPSC^FBUTL5(1,FBFPPSC);S:FBX=-1 Y=0;S:FBX="""" Y=""@5"";50///^S X=FBX;S FBFPPSC=X;S FBX=$$FPPSL^FBUTL5(FBFPPSL);S:FBX=-1 Y=0;51///^S X=FBX;S FBFPPCL=X;S Y=""@55"";@5;50///@;S FBFPPSC="""";51///@;S FBFPPCL="""";@55"
"RTN","FBCHPET",73,0)
 S DR(1,162.03,5)="@5;K DIE(""NO^"");W !,""Exit ('^') allowed now"";26;S PRC(""SITE"")=X;8;@13;13;I $$BADDATE^FBCHPET(FBAADT,X) S Y=""@13"";Q;33;49"
"RTN","FBCHPET",74,0)
 S DR(1,162.03,6)="15;16;17////^S X=1"
"RTN","FBCHPET",75,0)
 S DR(1,162.03,7)="@7;K FBRRMKD;M FBRRMKD=FBRRMK;S FBX=$$RR^FBUTL4(.FBRRMK,2,,.FBRRMKD)"
"RTN","FBCHPET",76,0)
 S DIE=FBZ
"RTN","FBCHPET",77,0)
 D
"RTN","FBCHPET",78,0)
 . N ICPTVDT,ICDVDT,FB583,FBAAMM,FBAAMM1,FBCNTRA,FBCNTRP,FBVEN,FTP
"RTN","FBCHPET",79,0)
 . S (ICPTVDT,ICDVDT)=$G(FBAADT)
"RTN","FBCHPET",80,0)
 . ; set variables for call to PPT^FBAACO1
"RTN","FBCHPET",81,0)
 . S FBAAMM1=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,2)),U,2)
"RTN","FBCHPET",82,0)
 . S FBCNTRP=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,3)),U,8)
"RTN","FBCHPET",83,0)
 . S X=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,0)),U,13)
"RTN","FBCHPET",84,0)
 . S:X[";FB583(" FB583=+X
"RTN","FBCHPET",85,0)
 . S FTP=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),0)),U,4)
"RTN","FBCHPET",86,0)
 . S FBVEN=$S(FTP:$P($G(^FBAAA(DFN,1,FTP,0)),U,4),1:"")
"RTN","FBCHPET",87,0)
 . S FBCNTRA=$S(FTP:$P($G(^FBAAA(DFN,1,FTP,0)),U,22),1:"")
"RTN","FBCHPET",88,0)
 . D ^DIE
"RTN","FBCHPET",89,0)
 ; if adjustment data changed then file
"RTN","FBCHPET",90,0)
 I $$ADJL^FBUTL2(.FBADJ)'=FBADJL(0) D FILEADJ^FBAAFA(FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",.FBADJ)
"RTN","FBCHPET",91,0)
 ; if remit remark data changed then file
"RTN","FBCHPET",92,0)
 I $$RRL^FBUTL4(.FBRRMK)'=FBRRMKL(0) D FILERR^FBAAFR(FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",.FBRRMK)
"RTN","FBCHPET",93,0)
 ; if FPPS CLAIM ID changed, update other line items on invoice
"RTN","FBCHPET",94,0)
 I FBFPPSC'=FBFPPSC(0) D
"RTN","FBCHPET",95,0)
 . N FBAAIN
"RTN","FBCHPET",96,0)
 . S FBAAIN=$$GET1^DIQ(162.03,FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",14)
"RTN","FBCHPET",97,0)
 . D CKINVEDI^FBAAPET1(FBFPPSC(0),FBFPPSC,FBAAIN,FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",")
"RTN","FBCHPET",98,0)
 K FBSV W !! G SERV
"RTN","FBCHPET",99,0)
 ;
"RTN","FBCHPET",100,0)
BADDATE(FBDOS,INVRCVDT) ;Reject entry if InvRcvDt is Prior to the Date of Service on the Invoice
"RTN","FBCHPET",101,0)
 I INVRCVDT<FBDOS D  Q 1 ;Reject entry
"RTN","FBCHPET",102,0)
 .N SHOWDOS S SHOWDOS=$E(FBDOS,4,5)_"/"_$E(FBDOS,6,7)_"/"_$E(FBDOS,2,3) ;Convert FBDOS into display format for error message
"RTN","FBCHPET",103,0)
 .W *7,!!?5,"*** Invoice Received Date cannot be prior to the",!?8,"Date of Service ("_SHOWDOS_") !!!"
"RTN","FBCHPET",104,0)
 Q 0 ;Accept entry
"RTN","FBCHPET",105,0)
 ;
"RTN","FBCHPET",106,0)
END K DR,DIC,DIE,X,DFN,FBVD,FBSD,BAT,FBSV,DA,FBDA,FBZ,FBDUZ,FBAACP,FBFY,FY,FBAMTPD,J,K,Y,PRC,FBHOLDX,ZZ,FBAADT,FBV,FBSDI,FBAACPI
"RTN","FBCHPET",107,0)
 K FBAAMM,FBAAMM1,FBFSAMT,FBFSUSD,FBMODA,FBZIP,FBTIME,FBHCFA(30)
"RTN","FBCHPET",108,0)
 K FBAAPTC,FB1725
"RTN","FBCHPET",109,0)
 K FBADJ,FBADJD,FBADJL,FBRRMK,FBRRMKD,FBRRMKL,FBX,FBUNITS
"RTN","FBCHPET",110,0)
 Q
"RTN","FBMRASV2")
0^3^B20185478^B19213426
"RTN","FBMRASV2",1,0)
FBMRASV2 ;AISC/TET - Server routine (Cont'd) ;2/29/2012
"RTN","FBMRASV2",2,0)
 ;;3.5;FEE BASIS;**9,132**;JAN 30, 1995;Build 17
"RTN","FBMRASV2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBMRASV2",4,0)
EXIT S XMSER="S."_XQSOP,XMZ=XQMSG D REMSBMSG^XMA1C
"RTN","FBMRASV2",5,0)
 K I,XMER,XMRG,FBI,FBID,FBER,FBERR,FBSITE,FBPOP,FBSN,FBAASN,FBJ,FBRT,FBAC,FBSTN,FBVID,FBCHAIN,FBFEEO,FBVNAME,FBADD1,FBADD2,FBCITY,FBST,FBZIP,FBMRC,FBCC,FBPC,FBTID,FB1099,FBVT,FBICN,FBSC,FBPART,FBSTATE,FBICN1,K,DIE,DA,DR,X,DLAYGO
"RTN","FBMRASV2",6,0)
 K FBOGN,DIC,FBNGN,%X,%Y,DIK,FBTMP,FBMRA,FBCNT,FBATOT,FBCTOT,FBFTOT,FBQTOT,FBZIP1,FBCHK,FBOUT,XMSER,XMZ,^TMP("FBMRA",$J),^TMP("FBER",$J)
"RTN","FBMRASV2",7,0)
 Q
"RTN","FBMRASV2",8,0)
EDIT ;edit check if fbac=q
"RTN","FBMRASV2",9,0)
 ;INPUT:  FBAC = action code; should only come here if = 'Q'
"RTN","FBMRASV2",10,0)
 ;        FBVID = vendor tax id number
"RTN","FBMRASV2",11,0)
 ;        FBCHAIN = chain store (optional - only if pharmacy record type)
"RTN","FBMRASV2",12,0)
 ;        FBICN = internal control number
"RTN","FBMRASV2",13,0)
 ;        FBVNAME = vendor name from autsin transmission
"RTN","FBMRASV2",14,0)
 ;OUTPUT: FBAC may be changed from 'Q' to 'C' if id's have not changed,
"RTN","FBMRASV2",15,0)
 ;         or if venid exists on file and austin name matches FBVNAME
"RTN","FBMRASV2",16,0)
 ;         to avoid leaving duplicate vendors in site's vendor file. 
"RTN","FBMRASV2",17,0)
 ;VAR:  FBI = internal entry of vendor in vendor file with same id as FBVID
"RTN","FBMRASV2",18,0)
 ;  FBVC = internal entry of vendor in vendor correction file (with station number stripped)
"RTN","FBMRASV2",19,0)
 N FBI,FBVCI S FBI=0,FBVCI=$E(FBICN,4,$L(FBICN))
"RTN","FBMRASV2",20,0)
 S:FBVID=$P($G(^FBAAV(+FBVCI,0)),U,2) FBAC="C" I FBAC="Q" S FBI=$O(^FBAAV("C",FBVID,0)) I FBI,FBVNAME=$P($G(^FBAAV(FBI,"AMS")),U) S FBAC="C"
"RTN","FBMRASV2",21,0)
 Q
"RTN","FBMRASV2",22,0)
TRAP ;trap error, have bulletin message record error, send server message to group and reset trap to server error trap and exit.
"RTN","FBMRASV2",23,0)
 D @^%ZOSF("ERRTN")
"RTN","FBMRASV2",24,0)
 S XQSTXT(0)=""
"RTN","FBMRASV2",25,0)
 S XQSTXT(1)="*** Error detected by FEE while processing the above server message. ***"
"RTN","FBMRASV2",26,0)
 S XQSTXT(2)="Details recorded in the Kernel error trap."
"RTN","FBMRASV2",27,0)
 S XQSTXT(3)="Please contact your IRM representative immediately."
"RTN","FBMRASV2",28,0)
 S XQSTXT(4)="",XQSTXT(5)="The above message # has been forwarded to the FEE mail group."
"RTN","FBMRASV2",29,0)
 S XQSTXT(6)="Once the problem has been identified AND corrected, forward the server message"
"RTN","FBMRASV2",30,0)
 S XQSTXT(7)="  to S."_$G(XQSOP)_" server to complete processing."
"RTN","FBMRASV2",31,0)
 ;S %ZTERLGR=$$LGR^%ZOSV D ^%ZTER
"RTN","FBMRASV2",32,0)
 ;S X="ERROR^XQSRV2",@^%ZOSF("TRAP")
"RTN","FBMRASV2",33,0)
 ; generate FBAA SERVER bulletin for selected server options
"RTN","FBMRASV2",34,0)
 I "^FBAA BATCH SERVER^FBAA VOUCHER SERVER^FBAA REJECT SERVER^"[("^"_$G(XQSOP)_"^") D SNDBUL^FBSVBR("of Trapped Error")
"RTN","FBMRASV2",35,0)
SEND ; send served message to G.FEE
"RTN","FBMRASV2",36,0)
 D
"RTN","FBMRASV2",37,0)
 . N XMDUZ,XMY,XMZ
"RTN","FBMRASV2",38,0)
 . S XMY("G.FEE")=""
"RTN","FBMRASV2",39,0)
 . S XMZ=XQMSG
"RTN","FBMRASV2",40,0)
 . D ENT1^XMD
"RTN","FBMRASV2",41,0)
 D EXIT
"RTN","FBMRASV2",42,0)
 Q
"RTN","FBMRASV2",43,0)
MSG ;set up server bulletin upon successful completion of processing
"RTN","FBMRASV2",44,0)
 S XQSTXT(0)="",XQSTXT(1)="Total Vendor MRA's Received: "_(FBATOT+FBCTOT+FBFTOT+FBQTOT)_"     Processed: "_FBCNT_"     Errors: "_FBER
"RTN","FBMRASV2",45,0)
 S XQSTXT(2)="ADDS: "_FBATOT,XQSTXT(3)="CHANGES:  "_FBCTOT,XQSTXT(4)="UNSOLICITED ADDS: "_FBQTOT,XQSTXT(5)="FPDS-ONLY CHANGES:  "_FBFTOT
"RTN","FBMRASV2",46,0)
 I +FBER S XQSTXT(6)="",XQSTXT(7)="*** "_FBER_" Error"_$S(FBER>1:"s",1:"")_" detected by FEE while processing the above server message. ***",XQSTXT(8)="" D
"RTN","FBMRASV2",47,0)
 .N EC,QCT
"RTN","FBMRASV2",48,0)
 .S QCT=8,EC="" F  S EC=$O(^TMP("FBER",$J,EC)) Q:EC']""  D  S QCT=QCT+1,XQSTXT(QCT)=""
"RTN","FBMRASV2",49,0)
 ..N I,DATA
"RTN","FBMRASV2",50,0)
 ..S QCT=QCT+1,XQSTXT(QCT)="ERROR CODE "_EC_":  "
"RTN","FBMRASV2",51,0)
 ..I EC<4 S XQSTXT(QCT)=XQSTXT(QCT)_$S(EC=1:"Invalid Vendor ID",EC=2:"Invalid Record Length",EC=3:"Invalid Station Number",1:"")
"RTN","FBMRASV2",52,0)
 ..I EC'<4 S XQSTXT(QCT)=XQSTXT(QCT)_$S(EC=4:"Vendor names do not match",EC=4.1:"Vendor not found in file or vendor in delete status",EC=5:"Vendor change already processed",1:"")
"RTN","FBMRASV2",53,0)
 ..S XQSTXT(QCT)=" ===> "_XQSTXT(QCT)
"RTN","FBMRASV2",54,0)
 ..S QCT=QCT+1,XQSTXT(QCT)="       "_$S(EC<3:"Action necessary.",EC=3:"Action may be necessary.",1:"Information only.")_"  Refer to the Vendor Error Code documentation."
"RTN","FBMRASV2",55,0)
 ..S QCT=QCT+1,XQSTXT(QCT)="",I=0 F  S I=$O(^TMP("FBER",$J,EC,I)) Q:'I  S DATA=^(I),QCT=QCT+1,XQSTXT(QCT)=DATA
"RTN","FBMRASV2",56,0)
 G EXIT
"RTN","FBMRASV2",57,0)
ER(EC,J,FBER) ;set error & error count
"RTN","FBMRASV2",58,0)
 ;INPUT:  EC = error code
"RTN","FBMRASV2",59,0)
 ;            1 = invalid vendor id (action needed)
"RTN","FBMRASV2",60,0)
 ;            2 = invalid record length (action needed)
"RTN","FBMRASV2",61,0)
 ;            3 = invalid station number (action may be necessary)
"RTN","FBMRASV2",62,0)
 ;            4 = vendor names do not match (ignore)
"RTN","FBMRASV2",63,0)
 ;           4.1 = vendor not found or in delete status (ignore)
"RTN","FBMRASV2",64,0)
 ;            5 = record already processed (ignore)
"RTN","FBMRASV2",65,0)
 ;        J = data string from message/mra record
"RTN","FBMRASV2",66,0)
 ;        FBER = error count
"RTN","FBMRASV2",67,0)
 ;OUTPUT: FBER updated
"RTN","FBMRASV2",68,0)
 I $S($G(FBER)']"":1,J']"":1,'+$G(EC):1,1:0) Q
"RTN","FBMRASV2",69,0)
 N FBCHAIN,FBRT,FBVID,FBVNAME
"RTN","FBMRASV2",70,0)
 I EC'=2 S FBRT=$E(J,1),FBVID=$S(FBRT=1:$E(J,9,19),1:$E(J,9,17)),FBVNAME=$S(FBRT=1:$E(J,27,56),1:$E(J,23,52)),FBCHAIN=$S(FBRT=1:"",1:" "_$E(J,18,21))
"RTN","FBMRASV2",71,0)
 S FBER=FBER+1,^TMP("FBER",$J,EC,FBER)=$S(EC=2:J,1:FBVNAME_"     "_FBVID_FBCHAIN)
"RTN","FBMRASV2",72,0)
 Q
"RTN","FBNHEDPA")
0^31^B15639852^B15541684
"RTN","FBNHEDPA",1,0)
FBNHEDPA ;AISC/GRR - EDIT PAYMENT FOR COMMUNITY NURSING HOME ; 5/16/12 3:22pm
"RTN","FBNHEDPA",2,0)
 ;;3.5;FEE BASIS;**61,124,132**;JAN 30, 1995;Build 17
"RTN","FBNHEDPA",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBNHEDPA",4,0)
EDIT ;ENTRY POINT TO EDIT PAYMENT
"RTN","FBNHEDPA",5,0)
 S IOP=$S($D(ION):ION,1:"HOME") D ^%ZIS K IOP
"RTN","FBNHEDPA",6,0)
BT S DIC="^FBAA(161.7,",DIC(0)="AEQMZ",DIC("S")="I $P(^(0),U,3)=""B9""",DIC("S")=$S($D(^XUSEC("FBAASUPERVISOR",DUZ)):DIC("S"),1:DIC("S")_"&($P(^(0),U,5)=DUZ)") D ^DIC
"RTN","FBNHEDPA",7,0)
 G END:X=""!(X="^"),BT:Y<0 S FBN=+Y,FBN(0)=Y(0)
"RTN","FBNHEDPA",8,0)
 S FBSTAT=^FBAA(161.7,FBN,"ST")
"RTN","FBNHEDPA",9,0)
 I FBSTAT="C"&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,?3,"You must Reopen the batch prior to editting the invoice.",! G END
"RTN","FBNHEDPA",10,0)
 I FBSTAT="S"!(FBSTAT="P")!(FBSTAT="R")&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,?3,"You must be a holder of the 'FBAASUPERVISOR' security key",!,?3,"to edit this invoice.",! G END
"RTN","FBNHEDPA",11,0)
 I FBSTAT="T"!(FBSTAT="F")!(FBSTAT="V") W !!,?3,"Batch has already been sent to Austin for payment.",! G END
"RTN","FBNHEDPA",12,0)
INV W ! S DIC("A")="Select Invoice Number: ",DIC="^FBAAI(",DIC(0)="AEQMZ",DIC("S")="I $P(^(0),U,17)=FBN" D ^DIC K DIC G BT:X=""!(X="^"),INV:Y<0 S FBI=+Y,FBOLD(0)=Y(0)
"RTN","FBNHEDPA",13,0)
 S FBLISTC="",FBHDI=FBI W @IOF D START^FBCHDI S FBI=FBHDI K FBHDI
"RTN","FBNHEDPA",14,0)
 K FBHAP,FBAP
"RTN","FBNHEDPA",15,0)
 S (DIE,DIC)="^FBAAI(",DIC(0)="AEQM",DA=FBI,DR="[FBNH EDIT PAYMENT]",DIE("NO^")=""
"RTN","FBNHEDPA",16,0)
 W !
"RTN","FBNHEDPA",17,0)
 N FBHAC
"RTN","FBNHEDPA",18,0)
 ; get values of FPPS Claim ID and Line Item
"RTN","FBNHEDPA",19,0)
 S FBFPPSC=$P($G(^FBAAI(FBI,3)),U)
"RTN","FBNHEDPA",20,0)
 S FBFPPSL=$P($G(^FBAAI(FBI,3)),U,2)
"RTN","FBNHEDPA",21,0)
 ; load current adjustment data
"RTN","FBNHEDPA",22,0)
 D LOADADJ^FBCHFA(FBI_",",.FBADJ)
"RTN","FBNHEDPA",23,0)
 ; save adjustment data prior to edit session in sorted list
"RTN","FBNHEDPA",24,0)
 S FBADJL(0)=$$ADJL^FBUTL2(.FBADJ) ; sorted list of original adjustments
"RTN","FBNHEDPA",25,0)
 ; load current remittance remark data
"RTN","FBNHEDPA",26,0)
 D LOADRR^FBCHFR(FBI_",",.FBRRMK)
"RTN","FBNHEDPA",27,0)
 ; save remittance remarks prior to edit session in sorted list
"RTN","FBNHEDPA",28,0)
 S FBRRMKL(0)=$$RRL^FBUTL4(.FBRRMK)
"RTN","FBNHEDPA",29,0)
 D ^DIE K DIE("NO^")
"RTN","FBNHEDPA",30,0)
 I $D(DTOUT) S DR="5///^S X="_$P(FBOLD(0),U,6)_";6///^S X="_$P(FBOLD(0),U,7) D ^DIE
"RTN","FBNHEDPA",31,0)
 ; if adjustment data changed then file
"RTN","FBNHEDPA",32,0)
 I $$ADJL^FBUTL2(.FBADJ)'=FBADJL(0) D FILEADJ^FBCHFA(FBI_",",.FBADJ)
"RTN","FBNHEDPA",33,0)
 ; if remit remark data changed then file
"RTN","FBNHEDPA",34,0)
 I $$RRL^FBUTL4(.FBRRMK)'=FBRRMKL(0) D FILERR^FBCHFR(FBI_",",.FBRRMK)
"RTN","FBNHEDPA",35,0)
 I $D(FBHAP),$D(FBAP),FBAP-FBHAP S FBDIF=FBAP-FBHAP,$P(^FBAA(161.7,FBN,0),"^",9)=$P(^FBAA(161.7,FBN,0),"^",9)+FBDIF
"RTN","FBNHEDPA",36,0)
END K DA,DFN,DIC,DIE,DR,FBAAOUT,FBDX,FBI,FBIN,FBLISTC,FBN,FBPROC,FBSTAT,FBVEN,FBVID,J,K,L,POP,Q,VA,VADM,X,Y,FBAC,FBAP,FBBAL,FBHAP,FBDIF
"RTN","FBNHEDPA",37,0)
 K FBADJ,FBADJL,FBRRMK,FBRRMKL,FBFPPSC,FBFPPSL
"RTN","FBNHEDPA",38,0)
 D KILL^FBPAY K FBOLD,FBINODE,FBPAT,FBPRGNAM
"RTN","FBNHEDPA",39,0)
 Q
"RTN","FBNHEDPA",40,0)
 ;
"RTN","FBNHEDPA",41,0)
BADDATE(INVRCVDT,TEMPDA) ;Compare edited Invoice Received Date to Treatment Date, reject if before 
"RTN","FBNHEDPA",42,0)
 I INVRCVDT="" Q 0 ;Inv Date not changed, no check necessary
"RTN","FBNHEDPA",43,0)
 N TDAT,SHODAT S TDAT=$$GET1^DIQ(162.5,TEMPDA_",",6,"I") I TDAT]"" S SHODAT="TO"
"RTN","FBNHEDPA",44,0)
 I TDAT="" S TDAT=$$GET1^DIQ(162.5,TEMPDA_",",5,"I"),SHODAT="FROM"
"RTN","FBNHEDPA",45,0)
 I INVRCVDT<TDAT D  Q 1 ;Reject entered date
"RTN","FBNHEDPA",46,0)
 .N SHOTDAT S SHOTDAT=$E(TDAT,4,5)_"/"_$E(TDAT,6,7)_"/"_$E(TDAT,2,3) ;Convert TDAT into display format for error message
"RTN","FBNHEDPA",47,0)
 .N MSG1,MSG2 S MSG1="*** Invoice Received Date cannot be before",MSG2=" Treatment "_SHODAT_" Date ("_SHOTDAT_") !!!"
"RTN","FBNHEDPA",48,0)
 .W !!?5,*7,MSG1,!?8,MSG2
"RTN","FBNHEDPA",49,0)
 Q 0 ;Date entered is OK
"RTN","FBNHEDPA",50,0)
 ;
"RTN","FBNHEDPA",51,0)
BADTDATE(TDAT,INVRCVDT,SHODAT) ;Compare edited Treatment TO or FROM Date to Invoice Received Date, reject if AFTER 
"RTN","FBNHEDPA",52,0)
 I INVRCVDT<TDAT D  Q 1 ;Reject entered date
"RTN","FBNHEDPA",53,0)
 .N SHOIRDAT S SHOIRDAT=$E(INVRCVDT,4,5)_"/"_$E(INVRCVDT,6,7)_"/"_$E(INVRCVDT,2,3) ;Convert INVRCVDT into display format for error message.
"RTN","FBNHEDPA",54,0)
 .N MSG1,MSG2 S MSG1="*** Treatment "_SHODAT_" Date cannot be after",MSG2=" Invoice Received Date ("_SHOIRDAT_") !!!"
"RTN","FBNHEDPA",55,0)
 .W !!?5,*7,MSG1,!?8,MSG2
"RTN","FBNHEDPA",56,0)
 Q 0 ;Date entered is OK
"RTN","FBNHEDPA",57,0)
 ;
"RTN","FBPAID1")
0^4^B17574969^B14897492
"RTN","FBPAID1",1,0)
FBPAID1 ;WOIFO/SAB - SERVER ROUTINE TO UPDATE PAYMENTS CON'T ;1/11/2012
"RTN","FBPAID1",2,0)
 ;;3.5;FEE BASIS;**19,107,121,132**;JAN 30, 1995;Build 17
"RTN","FBPAID1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBPAID1",4,0)
PARSE ;set-up variables for payment record called from FBPAID
"RTN","FBPAID1",5,0)
 ;  FBPROG = 3 for Outpatient (file 162)
"RTN","FBPAID1",6,0)
 ;         = T for Travel (file 162)
"RTN","FBPAID1",7,0)
 ;         = 5 for Pharmacy (file 162.1)
"RTN","FBPAID1",8,0)
 ;         = 9 for Inpatient (file 162.5)
"RTN","FBPAID1",9,0)
 ;         = $E(XMRG,7)      fee program and effected file
"RTN","FBPAID1",10,0)
 ;  FBACT  = $E(XMRG,8)      type of activity                
"RTN","FBPAID1",11,0)
 ;  FBIEN(x)=$E(XMRG,9,38)   IEN for payment record to update
"RTN","FBPAID1",12,0)
 ;  FBCKNUM= $E(XMRG,39,46)  check number
"RTN","FBPAID1",13,0)
 ;  old format (when total length = 77)
"RTN","FBPAID1",14,0)
 ;  FBCKDT = $E(XMRG,47,52)  check date
"RTN","FBPAID1",15,0)
 ;  FBINAMT= $E(XMRG,53,60)  interest amount
"RTN","FBPAID1",16,0)
 ;  FBXDT  = $E(XMRG,61,66)  cancel date
"RTN","FBPAID1",17,0)
 ;  FBRCOD = $E(XMRG,67)     reason code
"RTN","FBPAID1",18,0)
 ;  FBXCOD = $E(XMRG,68)     cancel code
"RTN","FBPAID1",19,0)
 ;  FBDAMT = $E(XMRG,69,76)  disbursed amount
"RTN","FBPAID1",20,0)
 ;  new format (when total length = 82)
"RTN","FBPAID1",21,0)
 ;  FBCKDT = $E(XMRG,47,54)  check date
"RTN","FBPAID1",22,0)
 ;  FBINAMT= $E(XMRG,55,62)  interest amount
"RTN","FBPAID1",23,0)
 ;  FBXDT  = $E(XMRG,63,70)  cancel date
"RTN","FBPAID1",24,0)
 ;  FBRCOD = $E(XMRG,71)     reason code
"RTN","FBPAID1",25,0)
 ;  FBXCOD = $E(XMRG,72)     cancel code
"RTN","FBPAID1",26,0)
 ;  FBDAMT = $E(XMRG,73,81)  disbursed amount
"RTN","FBPAID1",27,0)
 ;  FBBRTG = $E(XMRG,82,90)  bank routing number ;HIPAA 5010 P121
"RTN","FBPAID1",28,0)
 ;  FBBACC = $E(XMRG,91,107) bank account number ;HIPAA 5010 P121
"RTN","FBPAID1",29,0)
 ;  FBBNAM = $E(XMRG,108,138)bank name           ;HIPAA 5010 P121
"RTN","FBPAID1",30,0)
 ;  FBAMT  = Amount paid out of payment record
"RTN","FBPAID1",31,0)
 Q:$G(FBERR)
"RTN","FBPAID1",32,0)
 S FBPROG=$E(XMRG,7) I $S(FBPROG=3:0,FBPROG=5:0,FBPROG=9:0,FBPROG="T":0,1:1) S FBERR=1 Q
"RTN","FBPAID1",33,0)
 S FBACT=$E(XMRG,8) I $S(FBACT="C":0,FBACT="B":0,FBACT="X":0,1:1) S FBERR=1 Q
"RTN","FBPAID1",34,0)
 S FBIEN=$E(XMRG,9,38) D  Q:$G(FBERR)
"RTN","FBPAID1",35,0)
 . I FBPROG=3 D  Q:$G(FBERR)
"RTN","FBPAID1",36,0)
 ..S FBIEN(3)=+$P(FBIEN,U),FBIEN(2)=+$P(FBIEN,U,2),FBIEN(1)=+$P(FBIEN,U,3),FBIEN=+$P(FBIEN,U,4)
"RTN","FBPAID1",37,0)
 ..I '$D(^FBAAC(FBIEN(3),1,FBIEN(2),1,FBIEN(1),1,FBIEN,0)) D CHKMOVE
"RTN","FBPAID1",38,0)
 ..I '$D(^FBAAC(FBIEN(3),1,FBIEN(2),1,FBIEN(1),1,FBIEN,0)) S FBERR=1,^TMP("FBERR",$J,3,I)=""
"RTN","FBPAID1",39,0)
 . ;
"RTN","FBPAID1",40,0)
 . I FBPROG=5 D  Q:$G(FBERR)
"RTN","FBPAID1",41,0)
 ..S FBIEN(1)=+$P(FBIEN,U),FBIEN=+$P(FBIEN,U,2)
"RTN","FBPAID1",42,0)
 ..I '$D(^FBAA(162.1,FBIEN(1),"RX",FBIEN,0)) S FBERR=1,^TMP("FBERR",$J,3,I)=""
"RTN","FBPAID1",43,0)
 . ;
"RTN","FBPAID1",44,0)
 . I FBPROG=9 D  Q:$G(FBERR)
"RTN","FBPAID1",45,0)
 ..S FBIEN=+FBIEN I '$D(^FBAAI(FBIEN,0)) S FBERR=1,^TMP("FBERR",$J,3,I)=""
"RTN","FBPAID1",46,0)
 . ;
"RTN","FBPAID1",47,0)
 . I FBPROG="T" D  Q:$G(FBERR)
"RTN","FBPAID1",48,0)
 ..S FBIEN(1)=+$P(FBIEN,U),FBIEN=+$P(FBIEN,U,2)
"RTN","FBPAID1",49,0)
 ..I '$D(^FBAAC(FBIEN(1),3,FBIEN,0)) D CHKMOVE
"RTN","FBPAID1",50,0)
 ..I '$D(^FBAAC(FBIEN(1),3,FBIEN,0)) S FBERR=1,^TMP("FBERR",$J,3,I)=""
"RTN","FBPAID1",51,0)
 S FBCKNUM=$$EXTRL^FBMRASVR($E(XMRG,39,46),1)
"RTN","FBPAID1",52,0)
 S FBCKDT=$$DATE4^FBPAID1($E(XMRG,47,54))
"RTN","FBPAID1",53,0)
 S FBINAMT=$S(+$E(XMRG,55,62):+$E(XMRG,55,60)_"."_$E(XMRG,61,62),1:0)
"RTN","FBPAID1",54,0)
 S FBINAMT=$S(FBINAMT=0:0,$P(FBINAMT,".",2)'>0:$P(FBINAMT,"."),1:+FBINAMT)
"RTN","FBPAID1",55,0)
 S FBXDT=$$DATE4^FBPAID1($E(XMRG,63,70))
"RTN","FBPAID1",56,0)
 S FBRCOD=$E(XMRG,71),FBXCOD=$E(XMRG,72)
"RTN","FBPAID1",57,0)
 S FBRCOD=$O(^FB(162.95,"C",FBRCOD,0))
"RTN","FBPAID1",58,0)
 S FBDAMT=$S(+$E(XMRG,73,81):+$E(XMRG,73,79)_"."_$E(XMRG,80,81),1:0)
"RTN","FBPAID1",59,0)
 S FBDAMT=$S(FBDAMT=0:0,$P(FBDAMT,".",2)'>0:$P(FBDAMT,"."),1:+FBDAMT)
"RTN","FBPAID1",60,0)
 I $L(XMRG)=138 D  ; process new format with bank fields HIPAA 5010 P121
"RTN","FBPAID1",61,0)
 . S FBBRTG=$$TRIM^XLFSTR($E(XMRG,82,90),"LR") ;bank routing number
"RTN","FBPAID1",62,0)
 . S FBBACC=$$TRIM^XLFSTR($E(XMRG,91,107),"LR") ;bank account number
"RTN","FBPAID1",63,0)
 . S FBBNAM=$$TRIM^XLFSTR($E(XMRG,108,137),"LR") ;bank name
"RTN","FBPAID1",64,0)
 Q
"RTN","FBPAID1",65,0)
 ;
"RTN","FBPAID1",66,0)
BUL ;create server bulletin message
"RTN","FBPAID1",67,0)
 S ^TMP("FBPAID",$J,0)=FBMCNT
"RTN","FBPAID1",68,0)
 Q
"RTN","FBPAID1",69,0)
DATE(X) ;pass in 'X'=date in yymmdd format and return date in
"RTN","FBPAID1",70,0)
 ;fileman format.
"RTN","FBPAID1",71,0)
 N Y I '$G(X) Q ""
"RTN","FBPAID1",72,0)
 S %DT="",X=$E(X,3,7)_$E(X,1,2) D ^%DT K %DT
"RTN","FBPAID1",73,0)
 Q $S(Y=-1:"",1:Y)
"RTN","FBPAID1",74,0)
DATE4(X) ;pass in 'X'=date in yyyymmdd format and return date in
"RTN","FBPAID1",75,0)
 ;fileman format.
"RTN","FBPAID1",76,0)
 N Y I '$G(X) Q ""
"RTN","FBPAID1",77,0)
 S %DT="",X=$E(X,5,6)_"/"_$E(X,7,8)_"/"_$E(X,1,4) D ^%DT K %DT
"RTN","FBPAID1",78,0)
 Q $S(Y=-1:"",1:Y)
"RTN","FBPAID1",79,0)
CHKMOVE ;check if payment line item was moved by patient merge process
"RTN","FBPAID1",80,0)
 ; input
"RTN","FBPAID1",81,0)
 ;   FBPROG - fee program (3 or "T")
"RTN","FBPAID1",82,0)
 ;   FBIEN - ien of payment (from austin)
"RTN","FBPAID1",83,0)
 ;   FBIEN() - ien(s) of higher level entries (1 for next higher, etc.)
"RTN","FBPAID1",84,0)
 ; output
"RTN","FBPAID1",85,0)
 ;   FBIEN   may be changed to reflect current value
"RTN","FBPAID1",86,0)
 ;   FBIEN() may be changed to reflect current value
"RTN","FBPAID1",87,0)
 N FBDA,FBFILE,FBNIENS,FBCIENS,FBSIENS
"RTN","FBPAID1",88,0)
 ;
"RTN","FBPAID1",89,0)
 ; determine file
"RTN","FBPAID1",90,0)
 S FBFILE=$S(FBPROG=3:162.03,FBPROG="T":162.04,1:"")
"RTN","FBPAID1",91,0)
 Q:FBFILE=""
"RTN","FBPAID1",92,0)
 ;
"RTN","FBPAID1",93,0)
 ; determine starting IEN string
"RTN","FBPAID1",94,0)
 I FBPROG="3" S FBSIENS=FBIEN_","_FBIEN(1)_","_FBIEN(2)_","_FBIEN(3)_","
"RTN","FBPAID1",95,0)
 I FBPROG="T" S FBSIENS=FBIEN_","_FBIEN(1)_","
"RTN","FBPAID1",96,0)
 Q:FBSIENS=""
"RTN","FBPAID1",97,0)
 ;
"RTN","FBPAID1",98,0)
 S FBCIENS=FBSIENS ; init current IEN string as starting IEN string
"RTN","FBPAID1",99,0)
 ;
"RTN","FBPAID1",100,0)
 ; loop thru moves for current IENs until no more moves are found
"RTN","FBPAID1",101,0)
 F  D  Q:FBNIENS=""
"RTN","FBPAID1",102,0)
 . S FBNIENS="" ; init new IENs value for a move
"RTN","FBPAID1",103,0)
 . S FBDA=$O(^FBAA(161.45,"C",FBFILE,FBCIENS,0))
"RTN","FBPAID1",104,0)
 . Q:'FBDA  ; no more moves
"RTN","FBPAID1",105,0)
 . S FBNIENS=$P($G(^FBAA(161.45,FBDA,0)),U,3) ; new IENs
"RTN","FBPAID1",106,0)
 . ; if new IEN is same as starting IEN, break out of the endless loop
"RTN","FBPAID1",107,0)
 . I FBNIENS=FBSIENS S FBNIENS="" Q
"RTN","FBPAID1",108,0)
 . ; set current IENs to the new value
"RTN","FBPAID1",109,0)
 . S:FBNIENS'="" FBCIENS=FBNIENS
"RTN","FBPAID1",110,0)
 ;
"RTN","FBPAID1",111,0)
 ; if current IENs is different from starting IENs update outputs
"RTN","FBPAID1",112,0)
 I FBCIENS'=FBSIENS D
"RTN","FBPAID1",113,0)
 . I FBPROG="3" D
"RTN","FBPAID1",114,0)
 . . S FBIEN=$P(FBCIENS,",",1)
"RTN","FBPAID1",115,0)
 . . S FBIEN(1)=$P(FBCIENS,",",2)
"RTN","FBPAID1",116,0)
 . . S FBIEN(2)=$P(FBCIENS,",",3)
"RTN","FBPAID1",117,0)
 . . S FBIEN(3)=$P(FBCIENS,",",4)
"RTN","FBPAID1",118,0)
 . I FBPROG="T" D
"RTN","FBPAID1",119,0)
 . . S FBIEN=$P(FBCIENS,",",1)
"RTN","FBPAID1",120,0)
 . . S FBIEN(1)=$P(FBCIENS,",",2)
"RTN","FBPAID1",121,0)
 Q
"RTN","FBSVBR")
0^5^B72554273^B370540
"RTN","FBSVBR",1,0)
FBSVBR ;ISW/SAB - PAYMENT BATCH RESULT MESSAGE SERVER ;5/8/2012
"RTN","FBSVBR",2,0)
 ;;3.5;FEE BASIS;**131,132**;JAN 30, 1995;Build 17
"RTN","FBSVBR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBSVBR",4,0)
 ;
"RTN","FBSVBR",5,0)
 ; This routine is called by a server option to process the
"RTN","FBSVBR",6,0)
 ; Payment Batch Result message sent by Central Fee.
"RTN","FBSVBR",7,0)
 ;
"RTN","FBSVBR",8,0)
 ; ICRs
"RTN","FBSVBR",9,0)
 ;  #2053  FILE^DIE
"RTN","FBSVBR",10,0)
 ;  #2054  CLEAN^DILF
"RTN","FBSVBR",11,0)
 ;  #2056  $$GET1^DIQ
"RTN","FBSVBR",12,0)
 ;  #10069 XMB
"RTN","FBSVBR",13,0)
 ;  #10072 REMSBMSG^XMA1C
"RTN","FBSVBR",14,0)
 ;  #10096 ^%ZOSF("ERRTN" ), ^%ZOSF("TRAP")
"RTN","FBSVBR",15,0)
 ;  #10103 $$FMTE^XLFDT, $$NOW^XLFDT
"RTN","FBSVBR",16,0)
 ;  #10104 $$TRIM^XLFSTR
"RTN","FBSVBR",17,0)
 ;
"RTN","FBSVBR",18,0)
 ; init
"RTN","FBSVBR",19,0)
 N FBBAMT,FBERR,FBHL,FBN,FBSN,FBSTAT,FBTYPE,X,XMER,XMRG
"RTN","FBSVBR",20,0)
 S FBERR=0
"RTN","FBSVBR",21,0)
 ;
"RTN","FBSVBR",22,0)
 ; switch to a Fee Basis server error trap
"RTN","FBSVBR",23,0)
 S X="TRAP^FBMRASV2" S @^%ZOSF("TRAP")
"RTN","FBSVBR",24,0)
 ;
"RTN","FBSVBR",25,0)
HDR ; process header line
"RTN","FBSVBR",26,0)
 X XMREC
"RTN","FBSVBR",27,0)
 I XMER<0 D ERR("Error reading header line.")
"RTN","FBSVBR",28,0)
 I FBERR G END
"RTN","FBSVBR",29,0)
 I $E(XMRG,2,4)="FEB" G HDR ; skip initial line if just envelope data
"RTN","FBSVBR",30,0)
 ;
"RTN","FBSVBR",31,0)
 I $L(XMRG)'=33 D ERR("Header line has incorrect length.")
"RTN","FBSVBR",32,0)
 I FBERR G END
"RTN","FBSVBR",33,0)
 ;
"RTN","FBSVBR",34,0)
 ; extract data from header line
"RTN","FBSVBR",35,0)
 S FBHL(1)=$$TRIM^XLFSTR($E(XMRG,1,6),"R") ; station number
"RTN","FBSVBR",36,0)
 S FBHL(2)=$E(XMRG,7,14) ; date YYYYMMDD
"RTN","FBSVBR",37,0)
 S FBHL(3)=$E(XMRG,15) ; processing stage (R)
"RTN","FBSVBR",38,0)
 S FBHL(4)=$E(XMRG,16) ; payment type (3, 5, 9, or T)
"RTN","FBSVBR",39,0)
 S FBHL(5)=+$E(XMRG,17,22) ; batch number
"RTN","FBSVBR",40,0)
 S FBHL(6)=$$TRIM^XLFSTR($E(XMRG,23,26)) ; batch reject code
"RTN","FBSVBR",41,0)
 S FBHL(7)=+$E(XMRG,27,29) ; number accepted
"RTN","FBSVBR",42,0)
 S FBHL(8)=+$E(XMRG,30,32) ; number rejected
"RTN","FBSVBR",43,0)
 S FBHL(9)=$E(XMRG,33) ; delimiter ($)
"RTN","FBSVBR",44,0)
 ;
"RTN","FBSVBR",45,0)
 ; validate header data
"RTN","FBSVBR",46,0)
 I FBHL(3)'="R" D ERR("Processing stage ("_FBHL(3)_") is invalid.")
"RTN","FBSVBR",47,0)
 I "^3^5^9^T^"'[("^"_FBHL(4)_"^") D ERR("Payment type ("_FBHL(4)_") is invalid.")
"RTN","FBSVBR",48,0)
 I FBERR G END
"RTN","FBSVBR",49,0)
 ;
"RTN","FBSVBR",50,0)
 ; determine batch IEN
"RTN","FBSVBR",51,0)
 S FBN=$O(^FBAA(161.7,"B",FBHL(5),0))
"RTN","FBSVBR",52,0)
 I 'FBN D ERR("Could not locate record for batch "_FBHL(5)_".")
"RTN","FBSVBR",53,0)
 I FBERR G END
"RTN","FBSVBR",54,0)
 ;
"RTN","FBSVBR",55,0)
 ; obtain batch data
"RTN","FBSVBR",56,0)
 S FBTYPE=$$GET1^DIQ(161.7,FBN_",",2,"I") ; type (internal)
"RTN","FBSVBR",57,0)
 S FBSTAT=$$GET1^DIQ(161.7,FBN_",",11,"I") ; status (internal)
"RTN","FBSVBR",58,0)
 S FBSN=$$GET1^DIQ(161.7,FBN_",",16) ; station number (3 digit)
"RTN","FBSVBR",59,0)
 ;
"RTN","FBSVBR",60,0)
 ; verify batch values
"RTN","FBSVBR",61,0)
 I FBHL(4)="T",FBTYPE'="B2" D ERR("Payment Type in message is not consistent with the batch type.")
"RTN","FBSVBR",62,0)
 I FBHL(4),FBHL(4)'=$E(FBTYPE,2) D ERR("Payment Type in message is not consistent with the batch type.")
"RTN","FBSVBR",63,0)
 I FBSN'=$E(FBHL(1),1,3) D ERR("Station number in message is not consistent with the batch station number.")
"RTN","FBSVBR",64,0)
 I FBSTAT'="T" D ERR("Current batch status is not TRANSMITTED.")
"RTN","FBSVBR",65,0)
 I FBERR G END
"RTN","FBSVBR",66,0)
 ;
"RTN","FBSVBR",67,0)
 S FBBAMT=0 ; init dollar amount for posting to 1358 by batch
"RTN","FBSVBR",68,0)
 ;
"RTN","FBSVBR",69,0)
 ; if batch reject code sent then reject entire batch
"RTN","FBSVBR",70,0)
 I FBHL(6)'="" D
"RTN","FBSVBR",71,0)
 . N FBIEN,FBIENS,FBRCA
"RTN","FBSVBR",72,0)
 . S FBRCA(1)=FBHL(6) ; reject code array
"RTN","FBSVBR",73,0)
 . ;
"RTN","FBSVBR",74,0)
 . ; loop thru line items in batch
"RTN","FBSVBR",75,0)
 . I FBTYPE="B2" D
"RTN","FBSVBR",76,0)
 . . S FBIEN(1)=0
"RTN","FBSVBR",77,0)
 . . F  S FBIEN(1)=$O(^FBAAC("AD",FBN,FBIEN(1))) Q:'FBIEN(1)  D
"RTN","FBSVBR",78,0)
 . . . S FBIEN=0
"RTN","FBSVBR",79,0)
 . . . F  S FBIEN=$O(^FBAAC("AD",FBN,FBIEN(1),FBIEN)) Q:'FBIEN  D
"RTN","FBSVBR",80,0)
 . . . . S FBIENS=FBIEN_","_FBIEN(1)_","
"RTN","FBSVBR",81,0)
 . . . . D REJLN
"RTN","FBSVBR",82,0)
 . ;
"RTN","FBSVBR",83,0)
 . I FBTYPE="B3" D
"RTN","FBSVBR",84,0)
 . . S FBIEN(3)=0
"RTN","FBSVBR",85,0)
 . . F  S FBIEN(3)=$O(^FBAAC("AC",FBN,FBIEN(3))) Q:'FBIEN(3)  D
"RTN","FBSVBR",86,0)
 . . . S FBIEN(2)=0
"RTN","FBSVBR",87,0)
 . . . F  S FBIEN(2)=$O(^FBAAC("AC",FBN,FBIEN(3),FBIEN(2))) Q:'FBIEN(2)  D
"RTN","FBSVBR",88,0)
 . . . . S FBIEN(1)=0
"RTN","FBSVBR",89,0)
 . . . . F  S FBIEN(1)=$O(^FBAAC("AC",FBN,FBIEN(3),FBIEN(2),FBIEN(1))) Q:'FBIEN(1)  D
"RTN","FBSVBR",90,0)
 . . . . . S FBIEN=0
"RTN","FBSVBR",91,0)
 . . . . . F  S FBIEN=$O(^FBAAC("AC",FBN,FBIEN(3),FBIEN(2),FBIEN(1),FBIEN)) Q:'FBIEN  D
"RTN","FBSVBR",92,0)
 . . . . . . S FBIENS=FBIEN_","_FBIEN(1)_","_FBIEN(2)_","_FBIEN(3)_","
"RTN","FBSVBR",93,0)
 . . . . . . D REJLN
"RTN","FBSVBR",94,0)
 . ;
"RTN","FBSVBR",95,0)
 . I FBTYPE="B5" D
"RTN","FBSVBR",96,0)
 . . S FBIEN(1)=0
"RTN","FBSVBR",97,0)
 . . F  S FBIEN(1)=$O(^FBAA(162.1,"AE",FBN,FBIEN(1))) Q:'FBIEN(1)  D
"RTN","FBSVBR",98,0)
 . . . S FBIEN=0
"RTN","FBSVBR",99,0)
 . . . F  S FBIEN=$O(^FBAA(162.1,"AE",FBN,FBIEN(1),FBIEN)) Q:'FBIEN  D
"RTN","FBSVBR",100,0)
 . . . . S FBIENS=FBIEN_","_FBIEN(1)_","
"RTN","FBSVBR",101,0)
 . . . . D REJLN
"RTN","FBSVBR",102,0)
 . ;
"RTN","FBSVBR",103,0)
 . I FBTYPE="B9" D
"RTN","FBSVBR",104,0)
 . . S FBIEN=0
"RTN","FBSVBR",105,0)
 . . F  S FBIEN=$O(^FBAAI("AC",FBN,FBIEN)) Q:'FBIEN  D
"RTN","FBSVBR",106,0)
 . . . S FBIENS=FBIEN_","
"RTN","FBSVBR",107,0)
 . . . D REJLN
"RTN","FBSVBR",108,0)
 ;
"RTN","FBSVBR",109,0)
 ; if batch reject code not sent then process line rejects (if any)
"RTN","FBSVBR",110,0)
 I FBHL(6)="" D
"RTN","FBSVBR",111,0)
 . ; loop thru detail lines in message
"RTN","FBSVBR",112,0)
 . F  X XMREC Q:XMER<0!($E(XMRG,1,4)="NNNN")  I XMRG]"" D
"RTN","FBSVBR",113,0)
 . . N FBI,FBJ,FBIEN,FBIENS,FBRCA,FBX
"RTN","FBSVBR",114,0)
 . . ; determine the reject codes for the line item
"RTN","FBSVBR",115,0)
 . . S FBJ=0 ; init number of reject codes for line item
"RTN","FBSVBR",116,0)
 . . ; loop thru the five data elements that can hold a reject code
"RTN","FBSVBR",117,0)
 . . F FBI=1:1:5 D
"RTN","FBSVBR",118,0)
 . . . N FBP
"RTN","FBSVBR",119,0)
 . . . S FBP=53+((FBI-1)*4) ; calc data element starting position
"RTN","FBSVBR",120,0)
 . . . S FBX=$$TRIM^XLFSTR($E(XMRG,FBP,FBP+3))
"RTN","FBSVBR",121,0)
 . . . I FBX'="" S FBJ=FBJ+1,FBRCA(FBJ)=FBX ; add to array
"RTN","FBSVBR",122,0)
 . . ;
"RTN","FBSVBR",123,0)
 . . ; determine the IENs for the line item
"RTN","FBSVBR",124,0)
 . . S FBX=$E(XMRG,23,52) ; IEN string
"RTN","FBSVBR",125,0)
 . . I FBTYPE="B2" D
"RTN","FBSVBR",126,0)
 . . . S FBIEN(1)=+$P(FBX,U),FBIEN=+$P(FBX,U,2)
"RTN","FBSVBR",127,0)
 . . . ; if line item not found then check if moved
"RTN","FBSVBR",128,0)
 . . . I '$D(^FBAAC(FBIEN(1),3,FBIEN,0)) D
"RTN","FBSVBR",129,0)
 . . . . N FBPROG
"RTN","FBSVBR",130,0)
 . . . . S FBPROG="T"
"RTN","FBSVBR",131,0)
 . . . . D CHKMOVE^FBPAID1
"RTN","FBSVBR",132,0)
 . . . S FBIENS=FBIEN_","_FBIEN(1)_","
"RTN","FBSVBR",133,0)
 . . ;
"RTN","FBSVBR",134,0)
 . . I FBTYPE="B3" D
"RTN","FBSVBR",135,0)
 . . . S FBIEN(3)=+$P(FBX,U),FBIEN(2)=+$P(FBX,U,2)
"RTN","FBSVBR",136,0)
 . . . S FBIEN(1)=+$P(FBX,U,3),FBIEN=+$P(FBX,U,4)
"RTN","FBSVBR",137,0)
 . . . ; if line item not found then check if moved
"RTN","FBSVBR",138,0)
 . . . I '$D(^FBAAC(FBIEN(3),1,FBIEN(2),1,FBIEN(1),1,FBIEN,0)) D
"RTN","FBSVBR",139,0)
 . . . . N FBPROG
"RTN","FBSVBR",140,0)
 . . . . S FBPROG=3
"RTN","FBSVBR",141,0)
 . . . . D CHKMOVE^FBPAID1
"RTN","FBSVBR",142,0)
 . . . S FBIENS=FBIEN_","_FBIEN(1)_","_FBIEN(2)_","_FBIEN(3)_","
"RTN","FBSVBR",143,0)
 . . ;
"RTN","FBSVBR",144,0)
 . . I FBTYPE="B5" D
"RTN","FBSVBR",145,0)
 . . . S FBIEN(1)=+$P(FBX,U),FBIEN=+$P(FBX,U,2)
"RTN","FBSVBR",146,0)
 . . . S FBIENS=FBIEN_","_FBIEN(1)_","
"RTN","FBSVBR",147,0)
 . . ;
"RTN","FBSVBR",148,0)
 . . I FBTYPE="B9" D
"RTN","FBSVBR",149,0)
 . . . S FBIEN=+FBX
"RTN","FBSVBR",150,0)
 . . . S FBIENS=FBIEN_","
"RTN","FBSVBR",151,0)
 . . ;
"RTN","FBSVBR",152,0)
 . . ; call to reject the line item
"RTN","FBSVBR",153,0)
 . . D REJLN
"RTN","FBSVBR",154,0)
 ;
"RTN","FBSVBR",155,0)
 ; update obligation for rejected lines posted by batch
"RTN","FBSVBR",156,0)
 I FBBAMT>0 D
"RTN","FBSVBR",157,0)
 . N FBX
"RTN","FBSVBR",158,0)
 . S FBX=$$POSTBAT^FB1358(FBN,FBBAMT,"R",1)
"RTN","FBSVBR",159,0)
 . I 'FBX D
"RTN","FBSVBR",160,0)
 . . D ERR("Error posting to 1358 for batch")
"RTN","FBSVBR",161,0)
 . . D ERR("  "_$P(FBX,"^",2))
"RTN","FBSVBR",162,0)
 ;
"RTN","FBSVBR",163,0)
 ; update batch status
"RTN","FBSVBR",164,0)
 I FBN D
"RTN","FBSVBR",165,0)
 . N DIERR,FBFDA,FBX
"RTN","FBSVBR",166,0)
 . S FBX="F" ; init new status as Central Fee Accepted
"RTN","FBSVBR",167,0)
 . ; if no lines remain in batch change new status to Vouchered
"RTN","FBSVBR",168,0)
 . I FBTYPE="B2",'$O(^FBAAC("AD",FBN,0)) S FBX="V"
"RTN","FBSVBR",169,0)
 . I FBTYPE="B3",'$O(^FBAAC("AC",FBN,0)) S FBX="V"
"RTN","FBSVBR",170,0)
 . I FBTYPE="B5",'$O(^FBAA(162.1,"AE",FBN,0)) S FBX="V"
"RTN","FBSVBR",171,0)
 . I FBTYPE="B9",'$O(^FBAAI("AC",FBN,0)) S FBX="V"
"RTN","FBSVBR",172,0)
 . S FBFDA(161.7,FBN_",",11)=FBX
"RTN","FBSVBR",173,0)
 . I FBX="V" D
"RTN","FBSVBR",174,0)
 . . S FBFDA(161.7,FBN_",",13)=DT ; DATE FINALIZED
"RTN","FBSVBR",175,0)
 . . S FBFDA(161.7,FBN_",",14)=DUZ ; PERSON WHO COMPLETED
"RTN","FBSVBR",176,0)
 . D FILE^DIE("","FBFDA")
"RTN","FBSVBR",177,0)
 . D CLEAN^DILF
"RTN","FBSVBR",178,0)
 ;
"RTN","FBSVBR",179,0)
END ;
"RTN","FBSVBR",180,0)
 ; switch back to the standard Kernel error trap
"RTN","FBSVBR",181,0)
 S X=^%ZOSF("ERRTN"),@^%ZOSF("TRAP")
"RTN","FBSVBR",182,0)
 ;
"RTN","FBSVBR",183,0)
 ; remove Central Fee message from server basket
"RTN","FBSVBR",184,0)
 N XMSER,XMZ
"RTN","FBSVBR",185,0)
 S XMSER="S."_XQSOP,XMZ=XQMSG D REMSBMSG^XMA1C
"RTN","FBSVBR",186,0)
 ;
"RTN","FBSVBR",187,0)
 I FBERR D
"RTN","FBSVBR",188,0)
 . ; add text to bulletin
"RTN","FBSVBR",189,0)
 . D ERR(" ")
"RTN","FBSVBR",190,0)
 . D ERR("The above message # has been forwarded to the FEE mail group.")
"RTN","FBSVBR",191,0)
 . ;
"RTN","FBSVBR",192,0)
 . ; send bulletin
"RTN","FBSVBR",193,0)
 . D SNDBUL("for batch "_$G(FBHL(5))_" results")
"RTN","FBSVBR",194,0)
 . ;
"RTN","FBSVBR",195,0)
 . ; forward served message to G.FEE
"RTN","FBSVBR",196,0)
 . N XMDUZ,XMY,XMZ
"RTN","FBSVBR",197,0)
 . S XMY("G.FEE")=""
"RTN","FBSVBR",198,0)
 . S XMZ=XQMSG
"RTN","FBSVBR",199,0)
 . D ENT1^XMD
"RTN","FBSVBR",200,0)
 ;
"RTN","FBSVBR",201,0)
 K XQSTXT
"RTN","FBSVBR",202,0)
 Q
"RTN","FBSVBR",203,0)
 ;
"RTN","FBSVBR",204,0)
ERR(FBTXT) ; set error flag and save text for inclusion in bulletin
"RTN","FBSVBR",205,0)
 N FBL
"RTN","FBSVBR",206,0)
 S FBERR=1
"RTN","FBSVBR",207,0)
 S FBL=$P($G(XQSTXT(0)),"^",4)
"RTN","FBSVBR",208,0)
 S FBL=FBL+1
"RTN","FBSVBR",209,0)
 S XQSTXT(FBL)=$G(FBTXT)
"RTN","FBSVBR",210,0)
 S $P(XQSTXT(0),"^",3,4)=FBL_"^"_FBL
"RTN","FBSVBR",211,0)
 Q
"RTN","FBSVBR",212,0)
 ;
"RTN","FBSVBR",213,0)
REJLN ; reject payment line item
"RTN","FBSVBR",214,0)
 N FBX
"RTN","FBSVBR",215,0)
 ; set reject flag
"RTN","FBSVBR",216,0)
 S FBX=$$SETREJ^FBAAVR4(FBN,FBTYPE,FBIENS,1,,.FBRCA)
"RTN","FBSVBR",217,0)
 ;
"RTN","FBSVBR",218,0)
 ; if problem
"RTN","FBSVBR",219,0)
 I 'FBX D
"RTN","FBSVBR",220,0)
 . D ERR("Error rejecting line with IENS "_FBIENS)
"RTN","FBSVBR",221,0)
 . D ERR("  "_$P(FBX,"^",2))
"RTN","FBSVBR",222,0)
 ;
"RTN","FBSVBR",223,0)
 ; if success
"RTN","FBSVBR",224,0)
 I FBX D
"RTN","FBSVBR",225,0)
 . N FBPBYINV
"RTN","FBSVBR",226,0)
 . ; determine if 1358 posted by invoice or batch
"RTN","FBSVBR",227,0)
 . S FBPBYINV=0
"RTN","FBSVBR",228,0)
 . I FBTYPE="B9",$$GET1^DIQ(162.5,FBIENS,4,"I")'["FB583" S FBPBYINV=1
"RTN","FBSVBR",229,0)
 . ;
"RTN","FBSVBR",230,0)
 . ; if by batch then accumulate amount for later posting
"RTN","FBSVBR",231,0)
 . I 'FBPBYINV S FBBAMT=FBBAMT+$P(FBX,"^",3)
"RTN","FBSVBR",232,0)
 . ;
"RTN","FBSVBR",233,0)
 . ; if by B9 invoice then post it now
"RTN","FBSVBR",234,0)
 . I FBPBYINV D
"RTN","FBSVBR",235,0)
 . . N FBX1
"RTN","FBSVBR",236,0)
 . . S FBX1=$$POSTINV^FB1358(FBN,+FBIENS,"R",1)
"RTN","FBSVBR",237,0)
 . . I 'FBX1 D
"RTN","FBSVBR",238,0)
 . . . D ERR("Error posting invoice "_+FBIENS_" to 1358")
"RTN","FBSVBR",239,0)
 . . . D ERR("  "_$P(FBX1,"^",2))
"RTN","FBSVBR",240,0)
 Q
"RTN","FBSVBR",241,0)
 ;
"RTN","FBSVBR",242,0)
SNDBUL(FBSUB) ; send bulletin
"RTN","FBSVBR",243,0)
 ;
"RTN","FBSVBR",244,0)
 N XMB,XMBTMP,XMDF,XMDT,XMDUZ,XMTEXT,XMY,XMYBLOB
"RTN","FBSVBR",245,0)
 S XMB="FBAA SERVER"
"RTN","FBSVBR",246,0)
 S XMB(1)=$$FMTE^XLFDT($$NOW^XLFDT) ; date/time
"RTN","FBSVBR",247,0)
 S XMB(2)=$G(XQSND) ; sender of message sent to server option
"RTN","FBSVBR",248,0)
 S XMB(3)=$G(XQSOP) ; server option
"RTN","FBSVBR",249,0)
 S XMB(4)=$G(XQSUB) ; subject of message sent to server option
"RTN","FBSVBR",250,0)
 S XMB(5)=$G(XQMSG) ; number of message sent to server option
"RTN","FBSVBR",251,0)
 S XMB(6)="An issue occurred that requires notification." ; comment
"RTN","FBSVBR",252,0)
 S XMB(7)=$G(FBSUB) ; optional text for bulletin message subject
"RTN","FBSVBR",253,0)
 S:$O(XQSTXT(0)) XMTEXT="XQSTXT(" ; additional text
"RTN","FBSVBR",254,0)
 S XMY("G.FEE")=""
"RTN","FBSVBR",255,0)
 S XMY("G.FEE FINANCE")=""
"RTN","FBSVBR",256,0)
 D ^XMB
"RTN","FBSVBR",257,0)
 Q
"RTN","FBSVBR",258,0)
 ;FBSVBR
"RTN","FBSVPR")
0^18^B35954279^B370624
"RTN","FBSVPR",1,0)
FBSVPR ;ISW/SAB - PAYMENT BATCH RESULT MESSAGE SERVER ;3/23/2012
"RTN","FBSVPR",2,0)
 ;;3.5;FEE BASIS;**131,132**;JAN 30, 1995;Build 17
"RTN","FBSVPR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBSVPR",4,0)
 ;
"RTN","FBSVPR",5,0)
 ; This routine is called by a server option to process the
"RTN","FBSVPR",6,0)
 ; Post Voucher Reject message sent by Central Fee.
"RTN","FBSVPR",7,0)
 ;
"RTN","FBSVPR",8,0)
 ; ICRs
"RTN","FBSVPR",9,0)
 ;  #2056  $$GET1^DIQ
"RTN","FBSVPR",10,0)
 ;  #10069 XMB
"RTN","FBSVPR",11,0)
 ;  #10072 REMSBMSG^XMA1C
"RTN","FBSVPR",12,0)
 ;  #10096 ^%ZOSF("ERRTN" ), ^%ZOSF("TRAP")
"RTN","FBSVPR",13,0)
 ;  #10103 $$FMTE^XLFDT, $$NOW^XLFDT
"RTN","FBSVPR",14,0)
 ;  #10104 $$TRIM^XLFSTR
"RTN","FBSVPR",15,0)
 ;
"RTN","FBSVPR",16,0)
 ; init
"RTN","FBSVPR",17,0)
 N FBBATCH,FBERR,FBHL,FBTYPE,X,XMER,XMRG
"RTN","FBSVPR",18,0)
 S FBERR=0
"RTN","FBSVPR",19,0)
 ;
"RTN","FBSVPR",20,0)
 ; switch to a Fee Basis server error trap
"RTN","FBSVPR",21,0)
 S X="TRAP^FBMRASV2" S @^%ZOSF("TRAP")
"RTN","FBSVPR",22,0)
 ;
"RTN","FBSVPR",23,0)
HDR ; process header line
"RTN","FBSVPR",24,0)
 X XMREC
"RTN","FBSVPR",25,0)
 I XMER<0 D ERR("Error reading header line.")
"RTN","FBSVPR",26,0)
 I FBERR G END
"RTN","FBSVPR",27,0)
 I $E(XMRG,2,4)="FEP" G HDR ; skip initial line if just envelope data
"RTN","FBSVPR",28,0)
 ;
"RTN","FBSVPR",29,0)
 I $L(XMRG)'=17 D ERR("Header line has incorrect length.")
"RTN","FBSVPR",30,0)
 I FBERR G END
"RTN","FBSVPR",31,0)
 ;
"RTN","FBSVPR",32,0)
 ; extract data from header line
"RTN","FBSVPR",33,0)
 S FBHL(1)=$$TRIM^XLFSTR($E(XMRG,1,6),"R") ; station number
"RTN","FBSVPR",34,0)
 S FBHL(2)=$E(XMRG,7,14) ; date YYYYMMDD
"RTN","FBSVPR",35,0)
 S FBHL(3)=$E(XMRG,15) ; processing stage (P)
"RTN","FBSVPR",36,0)
 S FBHL(4)=$E(XMRG,16) ; payment type (3, 5, 9, or T)
"RTN","FBSVPR",37,0)
 S FBHL(5)=$E(XMRG,17) ; delimiter ($)
"RTN","FBSVPR",38,0)
 ;
"RTN","FBSVPR",39,0)
 ; validate header data
"RTN","FBSVPR",40,0)
 I FBHL(3)'="P" D ERR("Processing stage ("_FBHL(3)_") is invalid.")
"RTN","FBSVPR",41,0)
 I "^3^5^9^T^"'[("^"_FBHL(4)_"^") D ERR("Payment type ("_FBHL(4)_") is invalid.")
"RTN","FBSVPR",42,0)
 I FBERR G END
"RTN","FBSVPR",43,0)
 ;
"RTN","FBSVPR",44,0)
 ; determine batch type
"RTN","FBSVPR",45,0)
 I FBHL(4)="T" S FBTYPE="B2"
"RTN","FBSVPR",46,0)
 I FBHL(4) S FBTYPE="B"_FBHL(4)
"RTN","FBSVPR",47,0)
 ;
"RTN","FBSVPR",48,0)
 ; process line rejects
"RTN","FBSVPR",49,0)
 ; loop thru detail lines in message
"RTN","FBSVPR",50,0)
 F  X XMREC Q:XMER<0!($E(XMRG,1,4)="NNNN")  I XMRG]"" D
"RTN","FBSVPR",51,0)
 . N FBI,FBIEN,FBIENS,FBJ,FBN,FBRCA,FBX
"RTN","FBSVPR",52,0)
 . ; determine the reject codes for the line item
"RTN","FBSVPR",53,0)
 . S FBJ=0 ; init number of reject codes for line item
"RTN","FBSVPR",54,0)
 . ; loop thru the five data elements that can hold a reject code
"RTN","FBSVPR",55,0)
 . F FBI=1:1:5 D
"RTN","FBSVPR",56,0)
 . . N FBP
"RTN","FBSVPR",57,0)
 . . S FBP=47+((FBI-1)*4) ; calc data element starting position
"RTN","FBSVPR",58,0)
 . . S FBX=$$TRIM^XLFSTR($E(XMRG,FBP,FBP+3))
"RTN","FBSVPR",59,0)
 . . I FBX'="" S FBJ=FBJ+1,FBRCA(FBJ)=FBX ; add to array
"RTN","FBSVPR",60,0)
 . ;
"RTN","FBSVPR",61,0)
 . ; determine the IENs for the line item
"RTN","FBSVPR",62,0)
 . S FBX=$E(XMRG,17,46) ; IEN string
"RTN","FBSVPR",63,0)
 . I FBTYPE="B2" D
"RTN","FBSVPR",64,0)
 . . S FBIEN(1)=+$P(FBX,U),FBIEN=+$P(FBX,U,2)
"RTN","FBSVPR",65,0)
 . . ; if line item not found then check if moved
"RTN","FBSVPR",66,0)
 . . I '$D(^FBAAC(FBIEN(1),3,FBIEN,0)) D
"RTN","FBSVPR",67,0)
 . . . N FBPROG
"RTN","FBSVPR",68,0)
 . . . S FBPROG="T"
"RTN","FBSVPR",69,0)
 . . . D CHKMOVE^FBPAID1
"RTN","FBSVPR",70,0)
 . . S FBIENS=FBIEN_","_FBIEN(1)_","
"RTN","FBSVPR",71,0)
 . . S FBN=$$GET1^DIQ(162.04,FBIENS,1,"I") ; batch IEN
"RTN","FBSVPR",72,0)
 . ;
"RTN","FBSVPR",73,0)
 . I FBTYPE="B3" D
"RTN","FBSVPR",74,0)
 . . S FBIEN(3)=+$P(FBX,U),FBIEN(2)=+$P(FBX,U,2)
"RTN","FBSVPR",75,0)
 . . S FBIEN(1)=+$P(FBX,U,3),FBIEN=+$P(FBX,U,4)
"RTN","FBSVPR",76,0)
 . . ; if line item not found then check if moved
"RTN","FBSVPR",77,0)
 . . I '$D(^FBAAC(FBIEN(3),1,FBIEN(2),1,FBIEN(1),1,FBIEN,0)) D
"RTN","FBSVPR",78,0)
 . . . N FBPROG
"RTN","FBSVPR",79,0)
 . . . S FBPROG=3
"RTN","FBSVPR",80,0)
 . . . D CHKMOVE^FBPAID1
"RTN","FBSVPR",81,0)
 . . S FBIENS=FBIEN_","_FBIEN(1)_","_FBIEN(2)_","_FBIEN(3)_","
"RTN","FBSVPR",82,0)
 . . S FBN=$$GET1^DIQ(162.03,FBIENS,7,"I") ; batch IEN
"RTN","FBSVPR",83,0)
 . ;
"RTN","FBSVPR",84,0)
 . I FBTYPE="B5" D
"RTN","FBSVPR",85,0)
 . . S FBIEN(1)=+$P(FBX,U),FBIEN=+$P(FBX,U,2)
"RTN","FBSVPR",86,0)
 . . S FBIENS=FBIEN_","_FBIEN(1)_","
"RTN","FBSVPR",87,0)
 . . S FBN=$$GET1^DIQ(162.11,FBIENS,13,"I") ; batch IEN
"RTN","FBSVPR",88,0)
 . ;
"RTN","FBSVPR",89,0)
 . I FBTYPE="B9" D
"RTN","FBSVPR",90,0)
 . . S FBIEN=+FBX
"RTN","FBSVPR",91,0)
 . . S FBIENS=FBIEN_","
"RTN","FBSVPR",92,0)
 . . S FBN=$$GET1^DIQ(162.5,FBIENS,20,"I") ; batch IEN
"RTN","FBSVPR",93,0)
 . ;
"RTN","FBSVPR",94,0)
 . ; call to reject the line item
"RTN","FBSVPR",95,0)
 . D REJLN
"RTN","FBSVPR",96,0)
 ;
"RTN","FBSVPR",97,0)
 ; update obligation for rejected lines posted by batch (if any)
"RTN","FBSVPR",98,0)
 I $O(FBBATCH(0)) D
"RTN","FBSVPR",99,0)
 . N FBBAMT,FBN
"RTN","FBSVPR",100,0)
 . ; loop thru batch
"RTN","FBSVPR",101,0)
 . S FBN=0 F  S FBN=$O(FBBATCH(FBN)) Q:'FBN  D
"RTN","FBSVPR",102,0)
 . . N FBX
"RTN","FBSVPR",103,0)
 . . S FBBAMT=FBBATCH(FBN)
"RTN","FBSVPR",104,0)
 . . Q:FBBAMT'>0
"RTN","FBSVPR",105,0)
 . . S FBX=$$POSTBAT^FB1358(FBN,FBBAMT,"R",1)
"RTN","FBSVPR",106,0)
 . . I 'FBX D
"RTN","FBSVPR",107,0)
 . . . D ERR("Error posting to 1358 for batch")
"RTN","FBSVPR",108,0)
 . . . D ERR("  "_$P(FBX,"^",2))
"RTN","FBSVPR",109,0)
 ;
"RTN","FBSVPR",110,0)
END ;
"RTN","FBSVPR",111,0)
 ; switch back to the standard Kernel error trap
"RTN","FBSVPR",112,0)
 S X=^%ZOSF("ERRTN"),@^%ZOSF("TRAP")
"RTN","FBSVPR",113,0)
 ;
"RTN","FBSVPR",114,0)
 ; remove Central Fee message from server basket
"RTN","FBSVPR",115,0)
 N XMSER,XMZ
"RTN","FBSVPR",116,0)
 S XMSER="S."_XQSOP,XMZ=XQMSG D REMSBMSG^XMA1C
"RTN","FBSVPR",117,0)
 ;
"RTN","FBSVPR",118,0)
 I FBERR D
"RTN","FBSVPR",119,0)
 . ; add text to bulletin
"RTN","FBSVPR",120,0)
 . D ERR(" ")
"RTN","FBSVPR",121,0)
 . D ERR("The above message # has been forwarded to the FEE mail group.")
"RTN","FBSVPR",122,0)
 . ;
"RTN","FBSVPR",123,0)
 . ; send bulletin
"RTN","FBSVPR",124,0)
 . D SNDBUL^FBSVBR("for post voucher rejects")
"RTN","FBSVPR",125,0)
 . ;
"RTN","FBSVPR",126,0)
 . ; forward served message to G.FEE
"RTN","FBSVPR",127,0)
 . N XMDUZ,XMY,XMZ
"RTN","FBSVPR",128,0)
 . S XMY("G.FEE")=""
"RTN","FBSVPR",129,0)
 . S XMZ=XQMSG
"RTN","FBSVPR",130,0)
 . D ENT1^XMD
"RTN","FBSVPR",131,0)
 ;
"RTN","FBSVPR",132,0)
 K XQSTXT
"RTN","FBSVPR",133,0)
 Q
"RTN","FBSVPR",134,0)
 ;
"RTN","FBSVPR",135,0)
ERR(FBTXT) ; set error flag and save text for inclusion in bulletin
"RTN","FBSVPR",136,0)
 N FBL
"RTN","FBSVPR",137,0)
 S FBERR=1
"RTN","FBSVPR",138,0)
 S FBL=$P($G(XQSTXT(0)),"^",4)
"RTN","FBSVPR",139,0)
 S FBL=FBL+1
"RTN","FBSVPR",140,0)
 S XQSTXT(FBL)=$G(FBTXT)
"RTN","FBSVPR",141,0)
 S $P(XQSTXT(0),"^",3,4)=FBL_"^"_FBL
"RTN","FBSVPR",142,0)
 Q
"RTN","FBSVPR",143,0)
 ;
"RTN","FBSVPR",144,0)
REJLN ; reject payment line item
"RTN","FBSVPR",145,0)
 N FBX
"RTN","FBSVPR",146,0)
 S FBX=1
"RTN","FBSVPR",147,0)
 ;
"RTN","FBSVPR",148,0)
 ; verify batch data (note: null batch value is handled by $$SETREJ)
"RTN","FBSVPR",149,0)
 I FBN D
"RTN","FBSVPR",150,0)
 . N FBNUM,FBSN,FBSTAT
"RTN","FBSVPR",151,0)
 . ;
"RTN","FBSVPR",152,0)
 . ; obtain batch data
"RTN","FBSVPR",153,0)
 . S FBNUM=$$GET1^DIQ(161.7,FBN_",",.01) ; batch number
"RTN","FBSVPR",154,0)
 . S FBSTAT=$$GET1^DIQ(161.7,FBN_",",11,"I") ; status (internal)
"RTN","FBSVPR",155,0)
 . S FBSN=$$GET1^DIQ(161.7,FBN_",",16) ; station number (3 digit)
"RTN","FBSVPR",156,0)
 . ;
"RTN","FBSVPR",157,0)
 . ; verify batch values
"RTN","FBSVPR",158,0)
 . I FBSN'=$E(FBHL(1),1,3) S FBX="0^Station number in message is not consistent with batch "_FBNUM_"." Q
"RTN","FBSVPR",159,0)
 . I FBSTAT'="V" S FBX="0^Batch "_FBNUM_" status is not VOUCHERED." Q
"RTN","FBSVPR",160,0)
 ;
"RTN","FBSVPR",161,0)
 ; if batch OK then set reject flag for line
"RTN","FBSVPR",162,0)
 I FBX S FBX=$$SETREJ^FBAAVR4(FBN,FBTYPE,FBIENS,1,,.FBRCA)
"RTN","FBSVPR",163,0)
 ;
"RTN","FBSVPR",164,0)
 ; if problem
"RTN","FBSVPR",165,0)
 I 'FBX D
"RTN","FBSVPR",166,0)
 . D ERR("Error rejecting line with IENS "_FBIENS)
"RTN","FBSVPR",167,0)
 . D ERR("  "_$P(FBX,"^",2))
"RTN","FBSVPR",168,0)
 ;
"RTN","FBSVPR",169,0)
 ; if success
"RTN","FBSVPR",170,0)
 I FBX D
"RTN","FBSVPR",171,0)
 . N FBN,FBPBYINV
"RTN","FBSVPR",172,0)
 . S FBN=$P(FBX,"^",2) ; batch IEN
"RTN","FBSVPR",173,0)
 . ;
"RTN","FBSVPR",174,0)
 . ; determine if 1358 posted by invoice or batch
"RTN","FBSVPR",175,0)
 . S FBPBYINV=0
"RTN","FBSVPR",176,0)
 . I FBTYPE="B9",$$GET1^DIQ(162.5,FBIENS,4,"I")'["FB583" S FBPBYINV=1
"RTN","FBSVPR",177,0)
 . ;
"RTN","FBSVPR",178,0)
 . ; if by batch then accumulate amount for later posting
"RTN","FBSVPR",179,0)
 . I 'FBPBYINV S FBBATCH(FBN)=$G(FBBATCH(FBN))+$P(FBX,"^",3)
"RTN","FBSVPR",180,0)
 . ;
"RTN","FBSVPR",181,0)
 . ; if by B9 invoice then post it now
"RTN","FBSVPR",182,0)
 . I FBPBYINV D
"RTN","FBSVPR",183,0)
 . . N FBX1
"RTN","FBSVPR",184,0)
 . . S FBX1=$$POSTINV^FB1358(FBN,+FBIENS,"R",1)
"RTN","FBSVPR",185,0)
 . . I 'FBX1 D
"RTN","FBSVPR",186,0)
 . . . D ERR("Error posting invoice "_+FBIENS_" to 1358")
"RTN","FBSVPR",187,0)
 . . . D ERR("  "_$P(FBX,"^",2))
"RTN","FBSVPR",188,0)
 Q
"RTN","FBSVPR",189,0)
 ;
"RTN","FBSVPR",190,0)
 ;FBSVPR
"RTN","FBSVVA")
0^12^B19365869^B370541
"RTN","FBSVVA",1,0)
FBSVVA ;ISW/SAB - VOUCHER BATCH ACKNOWLEDGEMENT MESSAGE SERVER ;4/23/2012
"RTN","FBSVVA",2,0)
 ;;3.5;FEE BASIS;**131,132**;JAN 30, 1995;Build 17
"RTN","FBSVVA",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBSVVA",4,0)
 ;
"RTN","FBSVVA",5,0)
 ; This routine is called by a server option to process the
"RTN","FBSVVA",6,0)
 ; Payment Batch Result message sent by Central Fee.
"RTN","FBSVVA",7,0)
 ;
"RTN","FBSVVA",8,0)
 ; ICRs
"RTN","FBSVVA",9,0)
 ;  #2053  FILE^DIE
"RTN","FBSVVA",10,0)
 ;  #2054  CLEAN^DILF
"RTN","FBSVVA",11,0)
 ;  #2056  $$GET1^DIQ
"RTN","FBSVVA",12,0)
 ;  #10069 XMB
"RTN","FBSVVA",13,0)
 ;  #10072 REMSBMSG^XMA1C
"RTN","FBSVVA",14,0)
 ;  #10096 ^%ZOSF("ERRTN" ), ^%ZOSF("TRAP")
"RTN","FBSVVA",15,0)
 ;  #10103 $$FMTE^XLFDT, $$NOW^XLFDT
"RTN","FBSVVA",16,0)
 ;  #10104 $$TRIM^XLFSTR
"RTN","FBSVVA",17,0)
 ;
"RTN","FBSVVA",18,0)
 ; init
"RTN","FBSVVA",19,0)
 N FBERR,FBHDR,FBHL,FBN,FBSN,FBSTAT,FBTYPE,X,XMER,XMRG
"RTN","FBSVVA",20,0)
 S FBERR=0
"RTN","FBSVVA",21,0)
 ;
"RTN","FBSVVA",22,0)
 ; switch to a Fee Basis server error trap
"RTN","FBSVVA",23,0)
 S X="TRAP^FBMRASV2" S @^%ZOSF("TRAP")
"RTN","FBSVVA",24,0)
 ;
"RTN","FBSVVA",25,0)
HDR ; process header line
"RTN","FBSVVA",26,0)
 X XMREC
"RTN","FBSVVA",27,0)
 I XMER<0 D ERR("Error reading header line.")
"RTN","FBSVVA",28,0)
 I FBERR G END
"RTN","FBSVVA",29,0)
 I $E(XMRG,2,4)="FEV" G HDR ; skip initial line if just envelope data
"RTN","FBSVVA",30,0)
 ;
"RTN","FBSVVA",31,0)
 I $L(XMRG)'=25 D ERR("Header line has incorrect length.")
"RTN","FBSVVA",32,0)
 I FBERR G END
"RTN","FBSVVA",33,0)
 ;
"RTN","FBSVVA",34,0)
 ; extract data from header line
"RTN","FBSVVA",35,0)
 S FBHL(1)=$$TRIM^XLFSTR($E(XMRG,1,6),"R") ; station number
"RTN","FBSVVA",36,0)
 S FBHL(2)=$E(XMRG,7,14) ; date YYYYMMDD
"RTN","FBSVVA",37,0)
 S FBHL(3)=$E(XMRG,15) ; processing stage (A)
"RTN","FBSVVA",38,0)
 S FBHL(4)=$E(XMRG,16) ; payment type (3, 5, 9, or T)
"RTN","FBSVVA",39,0)
 S FBHL(5)=+$E(XMRG,17,22) ; batch number
"RTN","FBSVVA",40,0)
 S FBHL(6)=$E(XMRG,23,24) ; status (AA or AE)
"RTN","FBSVVA",41,0)
 S FBHL(7)=$E(XMRG,25) ; delimiter ($)
"RTN","FBSVVA",42,0)
 ;
"RTN","FBSVVA",43,0)
 ; validate header data
"RTN","FBSVVA",44,0)
 I FBHL(3)'="A" D ERR("Processing stage ("_FBHL(3)_") is invalid.")
"RTN","FBSVVA",45,0)
 I "^3^5^9^T^"'[("^"_FBHL(4)_"^") D ERR("Payment type ("_FBHL(4)_") is invalid.")
"RTN","FBSVVA",46,0)
 I "^AA^AE^"'[("^"_FBHL(6)_"^") D ERR("Acknowledgement status ("_FBHL(6)_") is invalid.")
"RTN","FBSVVA",47,0)
 I FBERR G END
"RTN","FBSVVA",48,0)
 ;
"RTN","FBSVVA",49,0)
 ; determine batch IEN
"RTN","FBSVVA",50,0)
 S FBN=$O(^FBAA(161.7,"B",FBHL(5),0))
"RTN","FBSVVA",51,0)
 I 'FBN D ERR("Could not locate record for batch "_FBHL(5)_".")
"RTN","FBSVVA",52,0)
 I FBERR G END
"RTN","FBSVVA",53,0)
 ;
"RTN","FBSVVA",54,0)
 ; obtain batch data
"RTN","FBSVVA",55,0)
 S FBTYPE=$$GET1^DIQ(161.7,FBN_",",2,"I") ; type (internal)
"RTN","FBSVVA",56,0)
 S FBSTAT=$$GET1^DIQ(161.7,FBN_",",11,"I") ; status (internal)
"RTN","FBSVVA",57,0)
 S FBSN=$$GET1^DIQ(161.7,FBN_",",16) ; station number (3 digit)
"RTN","FBSVVA",58,0)
 ;
"RTN","FBSVVA",59,0)
 ; verify batch values
"RTN","FBSVVA",60,0)
 I FBHL(4)="T",FBTYPE'="B2" D ERR("Payment Type in message is not consistent with the batch type.")
"RTN","FBSVVA",61,0)
 I FBHL(4),FBHL(4)'=$E(FBTYPE,2) D ERR("Payment Type in message is not consistent with the batch type.")
"RTN","FBSVVA",62,0)
 I FBSN'=$E(FBHL(1),1,3) D ERR("Station number in message is not consistent with the batch station number.")
"RTN","FBSVVA",63,0)
 I FBSTAT'="V" D ERR("Current batch status is not VOUCHERED.")
"RTN","FBSVVA",64,0)
 I FBERR G END
"RTN","FBSVVA",65,0)
 ;
"RTN","FBSVVA",66,0)
 ; loop thru detail lines (errors and warnings) in message
"RTN","FBSVVA",67,0)
 S FBHDR=1
"RTN","FBSVVA",68,0)
 F  X XMREC Q:XMER<0!($E(XMRG,1,4)="NNNN")  I XMRG]"" D
"RTN","FBSVVA",69,0)
 . N FBDL
"RTN","FBSVVA",70,0)
 . ;
"RTN","FBSVVA",71,0)
 . S FBDL(6)=$E(XMRG,23,23) ; severity (E or W)
"RTN","FBSVVA",72,0)
 . S FBDL(7)=$$TRIM^XLFSTR($E(XMRG,24,27)) ; message code
"RTN","FBSVVA",73,0)
 . S FBDL(8)=$$TRIM^XLFSTR($E(XMRG,28,97)) ; message text
"RTN","FBSVVA",74,0)
 . ;
"RTN","FBSVVA",75,0)
 . I FBHDR D MSG("Messages from Central Fee follow") S FBHDR=0
"RTN","FBSVVA",76,0)
 . D MSG(" ("_FBDL(6)_")  "_FBDL(8))
"RTN","FBSVVA",77,0)
 ;
"RTN","FBSVVA",78,0)
 ; update batch
"RTN","FBSVVA",79,0)
 I FBN D
"RTN","FBSVVA",80,0)
 . N DIERR,FBFDA,FBX
"RTN","FBSVVA",81,0)
 . ; set VOUCHER MSG ACK STATUS to A or E
"RTN","FBSVVA",82,0)
 . S FBFDA(161.7,FBN_",",22)=$S(FBHL(6)="AA":"A",1:"E")
"RTN","FBSVVA",83,0)
 . D FILE^DIE("","FBFDA")
"RTN","FBSVVA",84,0)
 . D CLEAN^DILF
"RTN","FBSVVA",85,0)
 ;
"RTN","FBSVVA",86,0)
END ;
"RTN","FBSVVA",87,0)
 ; switch back to the standard Kernel error trap
"RTN","FBSVVA",88,0)
 S X=^%ZOSF("ERRTN"),@^%ZOSF("TRAP")
"RTN","FBSVVA",89,0)
 ;
"RTN","FBSVVA",90,0)
 ; remove Central Fee message from server basket
"RTN","FBSVVA",91,0)
 N XMSER,XMZ
"RTN","FBSVVA",92,0)
 S XMSER="S."_XQSOP,XMZ=XQMSG D REMSBMSG^XMA1C
"RTN","FBSVVA",93,0)
 ;
"RTN","FBSVVA",94,0)
 I FBERR D
"RTN","FBSVVA",95,0)
 . ; add text to bulletin
"RTN","FBSVVA",96,0)
 . D ERR(" ")
"RTN","FBSVVA",97,0)
 . D ERR("The above message # has been forwarded to the FEE mail group.")
"RTN","FBSVVA",98,0)
 . ;
"RTN","FBSVVA",99,0)
 . ; send bulletin
"RTN","FBSVVA",100,0)
 . D SNDBUL^FBSVBR("for batch "_$G(FBHL(5))_" voucher ack.")
"RTN","FBSVVA",101,0)
 . ;
"RTN","FBSVVA",102,0)
 . ; forward served message to G.FEE
"RTN","FBSVVA",103,0)
 . N XMDUZ,XMY,XMZ
"RTN","FBSVVA",104,0)
 . S XMY("G.FEE")=""
"RTN","FBSVVA",105,0)
 . S XMZ=XQMSG
"RTN","FBSVVA",106,0)
 . D ENT1^XMD
"RTN","FBSVVA",107,0)
 ;
"RTN","FBSVVA",108,0)
 ; if no VistA error, but Central Fee sent a warning or error
"RTN","FBSVVA",109,0)
 I 'FBERR,'FBHDR D
"RTN","FBSVVA",110,0)
 . ; send bulletin
"RTN","FBSVVA",111,0)
 . D SNDBUL^FBSVBR("for batch "_$G(FBHL(5))_" voucher ack.")
"RTN","FBSVVA",112,0)
 ;
"RTN","FBSVVA",113,0)
 K XQSTXT
"RTN","FBSVVA",114,0)
 Q
"RTN","FBSVVA",115,0)
 ;
"RTN","FBSVVA",116,0)
ERR(FBTXT) ; set error flag and save text for inclusion in bulletin
"RTN","FBSVVA",117,0)
 N FBL
"RTN","FBSVVA",118,0)
 S FBERR=1
"RTN","FBSVVA",119,0)
 S FBL=$P($G(XQSTXT(0)),"^",4)
"RTN","FBSVVA",120,0)
 S FBL=FBL+1
"RTN","FBSVVA",121,0)
 S XQSTXT(FBL)=$G(FBTXT)
"RTN","FBSVVA",122,0)
 S $P(XQSTXT(0),"^",3,4)=FBL_"^"_FBL
"RTN","FBSVVA",123,0)
 Q
"RTN","FBSVVA",124,0)
 ;
"RTN","FBSVVA",125,0)
MSG(FBTXT) ; set save text for inclusion in bulletin
"RTN","FBSVVA",126,0)
 N FBL
"RTN","FBSVVA",127,0)
 S FBL=$P($G(XQSTXT(0)),"^",4)
"RTN","FBSVVA",128,0)
 S FBL=FBL+1
"RTN","FBSVVA",129,0)
 S XQSTXT(FBL)=$G(FBTXT)
"RTN","FBSVVA",130,0)
 S $P(XQSTXT(0),"^",3,4)=FBL_"^"_FBL
"RTN","FBSVVA",131,0)
 Q
"RTN","FBSVVA",132,0)
 ;
"RTN","FBSVVA",133,0)
 ;FBSVVA
"RTN","FBXIP132")
0^1^B8043750^n/a
"RTN","FBXIP132",1,0)
FBXIP132 ;WOIFO/SAB - PATCH INSTALL ROUTINE ;4/25/2012
"RTN","FBXIP132",2,0)
 ;;3.5;FEE BASIS;**132**;JAN 30, 1995;Build 17
"RTN","FBXIP132",3,0)
 ; 
"RTN","FBXIP132",4,0)
 ; ICRs
"RTN","FBXIP132",5,0)
 ;  #10141  BMES^XPDUTL, MES^XPDUTL, $$NEWCP^XPDUTL, $$PATCH^XPDUTL
"RTN","FBXIP132",6,0)
 ;  #4440   $$PROD^XUPROD
"RTN","FBXIP132",7,0)
 ;
"RTN","FBXIP132",8,0)
 ; the top of the routine is the environment check entry point
"RTN","FBXIP132",9,0)
 ;
"RTN","FBXIP132",10,0)
 N FBSKIP
"RTN","FBXIP132",11,0)
 S FBSKIP=""
"RTN","FBXIP132",12,0)
 ;
"RTN","FBXIP132",13,0)
 ; determine if environmental check should be skipped
"RTN","FBXIP132",14,0)
 I FBSKIP="",$G(XPDENV)'=1 S FBSKIP="Not a KIDS Install phase."
"RTN","FBXIP132",15,0)
 I FBSKIP="",$$PROD^XUPROD()'=1 S FBSKIP="Not a production account."
"RTN","FBXIP132",16,0)
 I FBSKIP="",$$PATCH^XPDUTL("FB*3.5*132")=1 S FBSKIP="Patch was previously installed."
"RTN","FBXIP132",17,0)
 I FBSKIP]"" D
"RTN","FBXIP132",18,0)
 . D BMES^XPDUTL(FBSKIP)
"RTN","FBXIP132",19,0)
 . D MES^XPDUTL("Skipping environmental check.")
"RTN","FBXIP132",20,0)
 ;
"RTN","FBXIP132",21,0)
 I FBSKIP="" D
"RTN","FBXIP132",22,0)
 . N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBXIP132",23,0)
 . D BMES^XPDUTL("Performing environmental check.")
"RTN","FBXIP132",24,0)
 . I $O(^FBAA(161.7,"AC","T",0)) D  Q
"RTN","FBXIP132",25,0)
 . . D MES^XPDUTL("This patch cannot be installed because there are.")
"RTN","FBXIP132",26,0)
 . . D MES^XPDUTL("batches with status equal to TRANSMITTED.")
"RTN","FBXIP132",27,0)
 . . D MES^XPDUTL("The Active Batch Listing by Status option can be used")
"RTN","FBXIP132",28,0)
 . . D MES^XPDUTL("to generate a list of the batches with this status.")
"RTN","FBXIP132",29,0)
 . . S XPDQUIT=2
"RTN","FBXIP132",30,0)
 . ;
"RTN","FBXIP132",31,0)
 . ; ask user for confirmation
"RTN","FBXIP132",32,0)
 . D BMES^XPDUTL("The Chief Fiscal Officer or representative must verify")
"RTN","FBXIP132",33,0)
 . D MES^XPDUTL("there are no pending payments on Central Fee report")
"RTN","FBXIP132",34,0)
 . D MES^XPDUTL("number 12007 for your site.")
"RTN","FBXIP132",35,0)
 . D MES^XPDUTL(" ")
"RTN","FBXIP132",36,0)
 . S DIR(0)="Y"
"RTN","FBXIP132",37,0)
 . S DIR("A")="Has the Chief Fiscal Officer approved installation of this patch"
"RTN","FBXIP132",38,0)
 . D ^DIR K DIR
"RTN","FBXIP132",39,0)
 . I $D(DIRUT)!'Y S XPDQUIT=2
"RTN","FBXIP132",40,0)
 Q
"RTN","FBXIP132",41,0)
 ;
"RTN","FBXIP132",42,0)
PR ; pre-install entry point
"RTN","FBXIP132",43,0)
 ; create KIDS checkpoints with call backs
"RTN","FBXIP132",44,0)
 N FBX,Y
"RTN","FBXIP132",45,0)
 F FBX="DELAJ" D
"RTN","FBXIP132",46,0)
 . S Y=$$NEWCP^XPDUTL(FBX,FBX_"^FBXIP132")
"RTN","FBXIP132",47,0)
 . I 'Y D BMES^XPDUTL("ERROR Creating "_FBX_" Checkpoint.")
"RTN","FBXIP132",48,0)
 Q
"RTN","FBXIP132",49,0)
 ;
"RTN","FBXIP132",50,0)
DELAJ ; Delete AJ x-ref definition
"RTN","FBXIP132",51,0)
 D BMES^XPDUTL("    Deleting traditional AJ x-ref from file 162 ...")
"RTN","FBXIP132",52,0)
 ;
"RTN","FBXIP132",53,0)
 ; delete traditional mumps AJ x-ref definition from INVOICE NUMBER
"RTN","FBXIP132",54,0)
 ; it will be replaced by an equivalent new-style regular AJ x-ref
"RTN","FBXIP132",55,0)
 ;   during the KIDS install of the partial DD
"RTN","FBXIP132",56,0)
 ; the cross-referance data will not be impacted
"RTN","FBXIP132",57,0)
 D DELIX^DDMOD(162.03,14,2,"","")
"RTN","FBXIP132",58,0)
 ;
"RTN","FBXIP132",59,0)
 D MES^XPDUTL("    Done.")
"RTN","FBXIP132",60,0)
 Q
"RTN","FBXIP132",61,0)
 ;
"RTN","FBXIP132",62,0)
PS ; post-install entry point
"RTN","FBXIP132",63,0)
 ; create KIDS checkpoints with call backs
"RTN","FBXIP132",64,0)
 N FBX,Y
"RTN","FBXIP132",65,0)
 F FBX="XREF" D
"RTN","FBXIP132",66,0)
 . S Y=$$NEWCP^XPDUTL(FBX,FBX_"^FBXIP132")
"RTN","FBXIP132",67,0)
 . I 'Y D BMES^XPDUTL("ERROR Creating "_FBX_" Checkpoint.")
"RTN","FBXIP132",68,0)
 Q
"RTN","FBXIP132",69,0)
 ;
"RTN","FBXIP132",70,0)
XREF ; Set new x-ref
"RTN","FBXIP132",71,0)
 N DIK
"RTN","FBXIP132",72,0)
 D BMES^XPDUTL("    Setting File 161.45 AN x-ref...")
"RTN","FBXIP132",73,0)
 ;
"RTN","FBXIP132",74,0)
 S DIK="^FBAA(161.45,"
"RTN","FBXIP132",75,0)
 S DIK(1)="2^AN"
"RTN","FBXIP132",76,0)
 D ENALL^DIK
"RTN","FBXIP132",77,0)
 ;
"RTN","FBXIP132",78,0)
 D MES^XPDUTL("    Done.")
"RTN","FBXIP132",79,0)
 Q
"RTN","FBXIP132",80,0)
 ;
"RTN","FBXIP132",81,0)
 ;FBXIP132
"SEC","^DIC",161.99,161.99,0,"AUDIT")
@
"SEC","^DIC",161.99,161.99,0,"DD")
@
"SEC","^DIC",161.99,161.99,0,"DEL")
@
"SEC","^DIC",161.99,161.99,0,"LAYGO")
@
"SEC","^DIC",161.99,161.99,0,"RD")

"SEC","^DIC",161.99,161.99,0,"WR")
@
"UP",162,162.03,-3)
162^1
"UP",162,162.03,-2)
162.01^1
"UP",162,162.03,-1)
162.02^1
"UP",162,162.03,0)
162.03
"UP",162,162.031,-4)
162^1
"UP",162,162.031,-3)
162.01^1
"UP",162,162.031,-2)
162.02^1
"UP",162,162.031,-1)
162.03^FBREJC
"UP",162,162.031,0)
162.031
"UP",162,162.04,-1)
162^3
"UP",162,162.04,0)
162.04
"UP",162,162.041,-2)
162^3
"UP",162,162.041,-1)
162.04^FBREJC
"UP",162,162.041,0)
162.041
"UP",162.1,162.11,-1)
162.1^RX
"UP",162.1,162.11,0)
162.11
"UP",162.1,162.111,-2)
162.1^RX
"UP",162.1,162.111,-1)
162.11^FBREJC
"UP",162.1,162.111,0)
162.111
"UP",162.5,162.515,-1)
162.5^FBREJC
"UP",162.5,162.515,0)
162.515
"VER")
8.0^22.0
"^DD",161.45,161.45,.01,0)
FILE #^RF^^0;1^K:$L(X)>30!($L(X)<1)!'(X'?1P.E) X
"^DD",161.45,161.45,.01,1,0)
^.1
"^DD",161.45,161.45,.01,1,1,0)
161.45^B
"^DD",161.45,161.45,.01,1,1,1)
S ^FBAA(161.45,"B",$E(X,1,30),DA)=""
"^DD",161.45,161.45,.01,1,1,2)
K ^FBAA(161.45,"B",$E(X,1,30),DA)
"^DD",161.45,161.45,.01,1,1,"DT")
3000208
"^DD",161.45,161.45,.01,3)
Answer must be 1-30 characters in length.
"^DD",161.45,161.45,.01,21,0)
^.001^3^3^3111220^^
"^DD",161.45,161.45,.01,21,1,0)
Identifies the file (or subfile) number where the payment is stored. For
"^DD",161.45,161.45,.01,21,2,0)
example, subfile 162.03 contains medical payments and subfile 162.04
"^DD",161.45,161.45,.01,21,3,0)
contains travel payments.
"^DD",161.45,161.45,.01,"DT")
3111208
"^DD",161.45,161.45,2,0)
NEW IENS^RF^^0;3^K:$L(X)>30!($L(X)<1) X
"^DD",161.45,161.45,2,3)
Answer must be 1-30 characters in length.
"^DD",161.45,161.45,2,21,0)
^^5^5^3001011^
"^DD",161.45,161.45,2,21,1,0)
The internal entry numbers (iens) that describe the new location of the
"^DD",161.45,161.45,2,21,2,0)
payment after the patient merge has completed. The iens are delimited by
"^DD",161.45,161.45,2,21,3,0)
commas (,) beginning with the ien of the lowest level subentry. For
"^DD",161.45,161.45,2,21,4,0)
example, a travel payment (subfile 162.04) with iens "1,3000," would be
"^DD",161.45,161.45,2,21,5,0)
located at ^FBAAC(3000,3,1,0).
"^DD",161.45,161.45,2,"DT")
3111208
"^DD",161.7,161.7,11,0)
STATUS^RS^C:CLERK CLOSED;S:SUPERVISOR CLOSED;O:OPEN;T:TRANSMITTED;F:CENTRAL FEE ACCEPTED;V:VOUCHERED;P:FORWARDED TO PRICER;A:ASSIGNED PRICE;R:REVIEWED AFTER PRICER;^ST;1^Q
"^DD",161.7,161.7,11,1,0)
^.1
"^DD",161.7,161.7,11,1,1,0)
161.7^AC
"^DD",161.7,161.7,11,1,1,1)
S ^FBAA(161.7,"AC",$E(X,1,30),DA)=""
"^DD",161.7,161.7,11,1,1,2)
K ^FBAA(161.7,"AC",$E(X,1,30),DA)
"^DD",161.7,161.7,11,1,2,0)
161.7^AB^MUMPS
"^DD",161.7,161.7,11,1,2,1)
I $P(^FBAA(161.7,DA,0),U,5)]"" S ^FBAA(161.7,"AB",$E(X,1,30),$P(^FBAA(161.7,DA,0),U,5),DA)=""
"^DD",161.7,161.7,11,1,2,2)
I $P(^FBAA(161.7,DA,0),U,5)]"" K ^FBAA(161.7,"AB",$E(X,1,30),$P(^FBAA(161.7,DA,0),U,5),DA)
"^DD",161.7,161.7,11,9)
^
"^DD",161.7,161.7,11,21,0)
^.001^1^1^3111208^^^^
"^DD",161.7,161.7,11,21,1,0)
The current status of the batch (ie Open, Clerk Closed, Transmitted).
"^DD",161.7,161.7,11,23,0)
^^3^3^3120130^
"^DD",161.7,161.7,11,23,1,0)
Patch FB*3.5*132 set the WRITE ACCESS of the STATUS field to the caret (^)
"^DD",161.7,161.7,11,23,2,0)
to prevent users from changing the batch status using the FileMan
"^DD",161.7,161.7,11,23,3,0)
Enter/Edit option.
"^DD",161.7,161.7,11,"DT")
3120130
"^DD",161.7,161.7,20,0)
FINALIZED WITH VISTA^S^1:YES;^1;1^Q
"^DD",161.7,161.7,20,3)
Enter YES if a Fee Basis option was used to complete the batch.
"^DD",161.7,161.7,20,21,0)
^^5^5^3111212^
"^DD",161.7,161.7,20,21,1,0)
This field indicates if batch was finalized (completed) using the VistA
"^DD",161.7,161.7,20,21,2,0)
Finalize a Batch option as opposed to some other method such as the Fee
"^DD",161.7,161.7,20,21,3,0)
Basis Claims System (FBCS). This field is automatically populated by the
"^DD",161.7,161.7,20,21,4,0)
software.  It was added by patch FB*3.5*132 and will not be populated for
"^DD",161.7,161.7,20,21,5,0)
batches finalized prior to installation of that patch.
"^DD",161.7,161.7,20,"DT")
3111212
"^DD",161.7,161.7,21,0)
VOUCHER MSG DATE^D^^1;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",161.7,161.7,21,3)
Enter date most recent voucher batch message was generated.
"^DD",161.7,161.7,21,21,0)
^.001^3^3^3111212^^
"^DD",161.7,161.7,21,21,1,0)
This field is automatically populated with the current date when a Voucher
"^DD",161.7,161.7,21,21,2,0)
Batch message is generated for the batch.  This field will be used to
"^DD",161.7,161.7,21,21,3,0)
determine if the application acknowledgement from Central Fee is overdue.
"^DD",161.7,161.7,21,"DT")
3111212
"^DD",161.7,161.7,22,0)
VOUCHER MSG ACK STATUS^S^P:PENDING;E:ERROR;A:ACKNOWLEDGED;^1;3^Q
"^DD",161.7,161.7,22,3)
Select status of the voucher batch acknowledgement.
"^DD",161.7,161.7,22,21,0)
^^5^5^3111212^
"^DD",161.7,161.7,22,21,1,0)
This field holds the status of the acknowledgement for the most recent 
"^DD",161.7,161.7,22,21,2,0)
voucher batch message. This field will be automatically set to Pending
"^DD",161.7,161.7,22,21,3,0)
when a voucher batch message is generated.  The FBAA VOUCHER SERVER server
"^DD",161.7,161.7,22,21,4,0)
option will update this field to Error or Acknowledged based on the
"^DD",161.7,161.7,22,21,5,0)
voucher batch acknowledgement message from Central Fee.
"^DD",161.7,161.7,22,"DT")
3111212
"^DD",161.7,161.7,23,0)
STATUS SET TO RETRANSMIT BY^P200'^VA(200,^1;4^Q
"^DD",161.7,161.7,23,3)
Enter person that reset the batch status.
"^DD",161.7,161.7,23,21,0)
^.001^4^4^3111214^^^
"^DD",161.7,161.7,23,21,1,0)
This field is automatically populated with the current user when the
"^DD",161.7,161.7,23,21,2,0)
Reprocess Overdue Batch option is used to reset the status of a payment
"^DD",161.7,161.7,23,21,3,0)
batch so the batch will be retransmitted to Central Fee.  This field is 
"^DD",161.7,161.7,23,21,4,0)
used to track exceptions to the normal batch process.
"^DD",161.7,161.7,23,"DT")
3111212
"^DD",161.7,161.7,24,0)
STATUS SET TO RETRANSMIT DATE^D^^1;5^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",161.7,161.7,24,3)
Enter date the batch status was reset.
"^DD",161.7,161.7,24,21,0)
^.001^4^4^3111214^^
"^DD",161.7,161.7,24,21,1,0)
This field is automatically populated with the current date when the
"^DD",161.7,161.7,24,21,2,0)
Reprocess Overdue Batch option is used to reset the status of a payment
"^DD",161.7,161.7,24,21,3,0)
batch so the batch will be retransmitted to Central Fee.  This field is 
"^DD",161.7,161.7,24,21,4,0)
used to track exceptions to the normal batch process.
"^DD",161.7,161.7,24,"DT")
3111212
"^DD",161.7,161.7,25,0)
TRANSMITTED BATCH WAS REJECTED^S^1:YES;^1;6^Q
"^DD",161.7,161.7,25,3)
Enter YES if a batch with TRANSMITTED status was rejected.
"^DD",161.7,161.7,25,21,0)
^^3^3^3111212^
"^DD",161.7,161.7,25,21,1,0)
This field is automatically populated with YES when the Reprocess Overdue
"^DD",161.7,161.7,25,21,2,0)
Batch option is used to flag an entire batch as rejected.  This field is 
"^DD",161.7,161.7,25,21,3,0)
used to identify when an exception to the normal batch process occurred.
"^DD",161.7,161.7,25,"DT")
3111212
"^DD",161.99,161.99,0)
FIELD^^1^2
"^DD",161.99,161.99,0,"DDA")
N
"^DD",161.99,161.99,0,"DT")
3111213
"^DD",161.99,161.99,0,"IX","B",161.99,.01)

"^DD",161.99,161.99,0,"NM","FEE BASIS PAYMENT REJECT CODE")

"^DD",161.99,161.99,.01,0)
CODE^RF^^0;1^K:$L(X)>4!($L(X)<1)!'(X'?1P.E) X
"^DD",161.99,161.99,.01,1,0)
^.1
"^DD",161.99,161.99,.01,1,1,0)
161.99^B
"^DD",161.99,161.99,.01,1,1,1)
S ^FBAA(161.99,"B",$E(X,1,30),DA)=""
"^DD",161.99,161.99,.01,1,1,2)
K ^FBAA(161.99,"B",$E(X,1,30),DA)
"^DD",161.99,161.99,.01,3)
Answer must be 1-4 characters in length.
"^DD",161.99,161.99,.01,21,0)
^^1^1^3111213^
"^DD",161.99,161.99,.01,21,1,0)
The field contains a reject reason code.
"^DD",161.99,161.99,.01,"DT")
3111213
"^DD",161.99,161.99,1,0)
DESCRIPTION^161.991^^1;0
"^DD",161.99,161.99,1,21,0)
^^1^1^3111214^
"^DD",161.99,161.99,1,21,1,0)
This field contains a description of the reject reason code.
"^DD",161.99,161.991,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",161.99,161.991,0,"DT")
3111213
"^DD",161.99,161.991,0,"NM","DESCRIPTION")

"^DD",161.99,161.991,0,"UP")
161.99
"^DD",161.99,161.991,.01,0)
DESCRIPTION^Wx^^0;1^Q
"^DD",161.99,161.991,.01,3)
Enter a description for the code.
"^DD",161.99,161.991,.01,21,0)
^^1^1^3111214^^
"^DD",161.99,161.991,.01,21,1,0)
This field contains a description of the reject reason code.
"^DD",161.99,161.991,.01,"DT")
3111214
"^DD",162,162.03,7,0)
BATCH NUMBER^*P161.7'^FBAA(161.7,^0;8^S DIC("S")="I $P(^(""ST""),U,1)=""O""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",162,162.03,7,1,0)
^.1^^-1
"^DD",162,162.03,7,1,1,0)
162^AC
"^DD",162,162.03,7,1,1,1)
S ^FBAAC("AC",$E(X,1,30),DA(3),DA(2),DA(1),DA)=""
"^DD",162,162.03,7,1,1,2)
K ^FBAAC("AC",$E(X,1,30),DA(3),DA(2),DA(1),DA)
"^DD",162,162.03,7,12)
ALLOWS SELECTION OF ONLY BATCHES THAT ARE OPEN
"^DD",162,162.03,7,12.1)
S DIC("S")="I $P(^(""ST""),U,1)=""O"""
"^DD",162,162.03,7,21,0)
^^2^2^2930519^^
"^DD",162,162.03,7,21,1,0)
The batch number with which this payment was associated. If the batch
"^DD",162,162.03,7,21,2,0)
file has been purged this may be blank.
"^DD",162,162.03,7,"DT")
3111213
"^DD",162,162.03,14,0)
INVOICE NUMBER^NJ9,0X^^0;16^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",162,162.03,14,1,0)
^.1^^-1
"^DD",162,162.03,14,1,1,0)
162^C
"^DD",162,162.03,14,1,1,1)
S ^FBAAC("C",$E(X,1,30),DA(3),DA(2),DA(1),DA)=""
"^DD",162,162.03,14,1,1,2)
K ^FBAAC("C",$E(X,1,30),DA(3),DA(2),DA(1),DA)
"^DD",162,162.03,14,3)
TYPE A WHOLE NUMBER BETWEEN 1 AND 999999999
"^DD",162,162.03,14,21,0)
^^1^1^2880617^^^
"^DD",162,162.03,14,21,1,0)
An automatically generated number associated with a vendor's bill.
"^DD",162,162.03,14,"DT")
3111213
"^DD",162,162.03,21.3,0)
INTERFACE REJECT^S^1:YES;^FBREJ;4^Q
"^DD",162,162.03,21.3,3)
Enter YES if the line item was rejected by Central Fee.
"^DD",162,162.03,21.3,21,0)
^^5^5^3111213^
"^DD",162,162.03,21.3,21,1,0)
This field is populated by the FBAA BATCH SERVER and FBAA REJECT SERVER
"^DD",162,162.03,21.3,21,2,0)
server options when a payment line item is rejected via the interface with
"^DD",162,162.03,21.3,21,3,0)
Central Fee.  This field is used to distinguish line items that were
"^DD",162,162.03,21.3,21,4,0)
locally rejected from those that were rejected by a downstream system.
"^DD",162,162.03,21.3,21,5,0)
This field is not populated for a local reject.
"^DD",162,162.03,21.3,"DT")
3111213
"^DD",162,162.03,21.6,0)
REJECT CODE^162.031^^FBREJC;0
"^DD",162,162.03,21.6,21,0)
^^5^5^3120201^
"^DD",162,162.03,21.6,21,1,0)
The REJECT CODE multiple is populated with one to four reject codes by the
"^DD",162,162.03,21.6,21,2,0)
FBAA BATCH SERVER and FBAA REJECT SERVER server options when a line item
"^DD",162,162.03,21.6,21,3,0)
is rejected via the interface with Central Fee.  The REJECT CODE multiple
"^DD",162,162.03,21.6,21,4,0)
is not used for local rejects.  The reason for a local reject is entered
"^DD",162,162.03,21.6,21,5,0)
into the REJECT REASON (#20) field.
"^DD",162,162.031,0)
REJECT CODE SUB-FIELD^^.01^1
"^DD",162,162.031,0,"DT")
3111213
"^DD",162,162.031,0,"IX","B",162.031,.01)

"^DD",162,162.031,0,"NM","REJECT CODE")

"^DD",162,162.031,0,"UP")
162.03
"^DD",162,162.031,.01,0)
REJECT CODE^MF^^0;1^K:$L(X)>4!($L(X)<1) X
"^DD",162,162.031,.01,1,0)
^.1
"^DD",162,162.031,.01,1,1,0)
162.031^B
"^DD",162,162.031,.01,1,1,1)
S ^FBAAC(DA(4),1,DA(3),1,DA(2),1,DA(1),"FBREJC","B",$E(X,1,30),DA)=""
"^DD",162,162.031,.01,1,1,2)
K ^FBAAC(DA(4),1,DA(3),1,DA(2),1,DA(1),"FBREJC","B",$E(X,1,30),DA)
"^DD",162,162.031,.01,3)
Answer must be 1-4 characters in length.
"^DD",162,162.031,.01,21,0)
^^5^5^3120201^
"^DD",162,162.031,.01,21,1,0)
The REJECT CODE field is populated by the FBAA BATCH SERVER and FBAA
"^DD",162,162.031,.01,21,2,0)
REJECT SERVER server options when a line item is rejected via the
"^DD",162,162.031,.01,21,3,0)
interface with Central Fee.  The REJECT CODE field is not used for local
"^DD",162,162.031,.01,21,4,0)
rejects.  The reason for a local reject is entered into the REJECT REASON
"^DD",162,162.031,.01,21,5,0)
(#20) field.
"^DD",162,162.031,.01,23,0)
^^10^10^3120201^
"^DD",162,162.031,.01,23,1,0)
Values stored in the REJECT CODE field are normally expected to have a
"^DD",162,162.031,.01,23,2,0)
matching entry in the FEE BASIS PAYMENT REJECT CODE (#161.99) file.  The
"^DD",162,162.031,.01,23,3,0)
FEE BASIS PAYMENT REJECT CODE file contains a list of reject codes and
"^DD",162,162.031,.01,23,4,0)
their descriptions.
"^DD",162,162.031,.01,23,5,0)
 
"^DD",162,162.031,.01,23,6,0)
However it is possible that a new reject code will be transmitted to VistA
"^DD",162,162.031,.01,23,7,0)
by Central Fee and stored in the REJECT CODE field before the FEE BASIS
"^DD",162,162.031,.01,23,8,0)
PAYMENT REJECT CODE file is updated with that new code.  In this case
"^DD",162,162.031,.01,23,9,0)
outputs that display the description of a code will display text similar
"^DD",162,162.031,.01,23,10,0)
to "Reject reason code not currently defined in list."
"^DD",162,162.031,.01,"DT")
3120201
"^DD",162,162.04,6.3,0)
INTERFACE REJECT^S^1:YES;^FBREJ;4^Q
"^DD",162,162.04,6.3,3)
Enter YES if the line item was rejected by Central Fee.
"^DD",162,162.04,6.3,21,0)
^^5^5^3111213^
"^DD",162,162.04,6.3,21,1,0)
This field is populated by the FBAA BATCH SERVER and FBAA REJECT SERVER
"^DD",162,162.04,6.3,21,2,0)
server options when a payment line item is rejected via the interface with
"^DD",162,162.04,6.3,21,3,0)
Central Fee.  This field is used to distinguish line items that were
"^DD",162,162.04,6.3,21,4,0)
locally rejected from those that were rejected by a downstream system.
"^DD",162,162.04,6.3,21,5,0)
This field is not populated for a local reject.
"^DD",162,162.04,6.3,"DT")
3111213
"^DD",162,162.04,6.6,0)
REJECT CODE^162.041^^FBREJC;0
"^DD",162,162.04,6.6,21,0)
^^5^5^3120201^
"^DD",162,162.04,6.6,21,1,0)
The REJECT CODE multiple is populated with one to four reject codes by the
"^DD",162,162.04,6.6,21,2,0)
FBAA BATCH SERVER and FBAA REJECT SERVER server options when a line item
"^DD",162,162.04,6.6,21,3,0)
is rejected via the interface with Central Fee.  The REJECT CODE multiple
"^DD",162,162.04,6.6,21,4,0)
is not used for local rejects.  The reason for a local reject is entered
"^DD",162,162.04,6.6,21,5,0)
into the REJECT REASON (#5) field.
"^DD",162,162.041,0)
REJECT CODE SUB-FIELD^^.01^1
"^DD",162,162.041,0,"DT")
3111213
"^DD",162,162.041,0,"IX","B",162.041,.01)

"^DD",162,162.041,0,"NM","REJECT CODE")

"^DD",162,162.041,0,"UP")
162.04
"^DD",162,162.041,.01,0)
REJECT CODE^MF^^0;1^K:$L(X)>4!($L(X)<1) X
"^DD",162,162.041,.01,1,0)
^.1
"^DD",162,162.041,.01,1,1,0)
162.041^B
"^DD",162,162.041,.01,1,1,1)
S ^FBAAC(DA(2),3,DA(1),"FBREJC","B",$E(X,1,30),DA)=""
"^DD",162,162.041,.01,1,1,2)
K ^FBAAC(DA(2),3,DA(1),"FBREJC","B",$E(X,1,30),DA)
"^DD",162,162.041,.01,3)
Answer must be 1-4 characters in length.
"^DD",162,162.041,.01,21,0)
^^5^5^3120201^
"^DD",162,162.041,.01,21,1,0)
The REJECT CODE field is populated by the FBAA BATCH SERVER and FBAA
"^DD",162,162.041,.01,21,2,0)
REJECT SERVER server options when a line item is rejected via the
"^DD",162,162.041,.01,21,3,0)
interface with Central Fee.  The REJECT CODE field is not used for local
"^DD",162,162.041,.01,21,4,0)
rejects.  The reason for a local reject is entered into the REJECT REASON
"^DD",162,162.041,.01,21,5,0)
(#5) field.
"^DD",162,162.041,.01,23,0)
^^10^10^3120201^
"^DD",162,162.041,.01,23,1,0)
Values stored in the REJECT CODE field are normally expected to have a
"^DD",162,162.041,.01,23,2,0)
matching entry in the FEE BASIS PAYMENT REJECT CODE (#161.99) file.  The
"^DD",162,162.041,.01,23,3,0)
FEE BASIS PAYMENT REJECT CODE file contains a list of reject codes and
"^DD",162,162.041,.01,23,4,0)
their descriptions.
"^DD",162,162.041,.01,23,5,0)
 
"^DD",162,162.041,.01,23,6,0)
However it is possible that a new reject code will be transmitted to VistA
"^DD",162,162.041,.01,23,7,0)
by Central Fee and stored in the REJECT CODE field before the FEE BASIS
"^DD",162,162.041,.01,23,8,0)
PAYMENT REJECT CODE file is updated with that new code.  In this case
"^DD",162,162.041,.01,23,9,0)
outputs that display the description of a code will display text similar
"^DD",162,162.041,.01,23,10,0)
to "Reject reason code not currently defined in list."
"^DD",162,162.041,.01,"DT")
3120201
"^DD",162.1,162.11,19.3,0)
INTERFACE REJECT^S^1:YES;^FBREJ;4^Q
"^DD",162.1,162.11,19.3,3)
Enter YES if the line item was rejected by Central Fee.
"^DD",162.1,162.11,19.3,21,0)
^^5^5^3111212^
"^DD",162.1,162.11,19.3,21,1,0)
This field is populated by the FBAA BATCH SERVER and FBAA REJECT SERVER
"^DD",162.1,162.11,19.3,21,2,0)
server options when a payment line item is rejected via the interface with
"^DD",162.1,162.11,19.3,21,3,0)
Central Fee.  This field is used to distinguish line items that were
"^DD",162.1,162.11,19.3,21,4,0)
locally rejected from those that were rejected by a downstream system.  
"^DD",162.1,162.11,19.3,21,5,0)
This field is not populated for a local reject.
"^DD",162.1,162.11,19.3,"DT")
3111212
"^DD",162.1,162.11,19.6,0)
REJECT CODE^162.111^^FBREJC;0
"^DD",162.1,162.11,19.6,21,0)
^^5^5^3120201^
"^DD",162.1,162.11,19.6,21,1,0)
The REJECT CODE multiple is populated with one to four reject codes by the
"^DD",162.1,162.11,19.6,21,2,0)
FBAA BATCH SERVER and FBAA REJECT SERVER server options when a line item
"^DD",162.1,162.11,19.6,21,3,0)
is rejected via the interface with Central Fee.  The REJECT CODE multiple
"^DD",162.1,162.11,19.6,21,4,0)
is not used for local rejects.  The reason for a local reject is entered
"^DD",162.1,162.11,19.6,21,5,0)
into the REJECT REASON (#18) field.
"^DD",162.1,162.111,0)
REJECT CODE SUB-FIELD^^.01^1
"^DD",162.1,162.111,0,"DT")
3111212
"^DD",162.1,162.111,0,"IX","B",162.111,.01)

"^DD",162.1,162.111,0,"NM","REJECT CODE")

"^DD",162.1,162.111,0,"UP")
162.11
"^DD",162.1,162.111,.01,0)
REJECT CODE^MF^^0;1^K:$L(X)>4!($L(X)<1) X
"^DD",162.1,162.111,.01,1,0)
^.1
"^DD",162.1,162.111,.01,1,1,0)
162.111^B
"^DD",162.1,162.111,.01,1,1,1)
S ^FBAA(162.1,DA(2),"RX",DA(1),"FBREJC","B",$E(X,1,30),DA)=""
"^DD",162.1,162.111,.01,1,1,2)
K ^FBAA(162.1,DA(2),"RX",DA(1),"FBREJC","B",$E(X,1,30),DA)
"^DD",162.1,162.111,.01,3)
Answer must be 1-4 characters in length.
"^DD",162.1,162.111,.01,21,0)
^^5^5^3120201^
"^DD",162.1,162.111,.01,21,1,0)
The REJECT CODE field is populated by the FBAA BATCH SERVER and FBAA
"^DD",162.1,162.111,.01,21,2,0)
REJECT SERVER server options when a line item is rejected via the
"^DD",162.1,162.111,.01,21,3,0)
interface with Central Fee.  The REJECT CODE field is not used for local
"^DD",162.1,162.111,.01,21,4,0)
rejects.  The reason for a local reject is entered into the REJECT REASON
"^DD",162.1,162.111,.01,21,5,0)
(#18) field.
"^DD",162.1,162.111,.01,23,0)
^^10^10^3120201^
"^DD",162.1,162.111,.01,23,1,0)
Values stored in the REJECT CODE field are normally expected to have a
"^DD",162.1,162.111,.01,23,2,0)
matching entry in the FEE BASIS PAYMENT REJECT CODE (#161.99) file.  The
"^DD",162.1,162.111,.01,23,3,0)
FEE BASIS PAYMENT REJECT CODE file contains a list of reject codes and
"^DD",162.1,162.111,.01,23,4,0)
their descriptions.
"^DD",162.1,162.111,.01,23,5,0)
 
"^DD",162.1,162.111,.01,23,6,0)
However it is possible that a new reject code will be transmitted to VistA
"^DD",162.1,162.111,.01,23,7,0)
by Central Fee and stored in the REJECT CODE field before the FEE BASIS
"^DD",162.1,162.111,.01,23,8,0)
PAYMENT REJECT CODE file is updated with that new code.  In this case
"^DD",162.1,162.111,.01,23,9,0)
outputs that display the description of a code will display text similar
"^DD",162.1,162.111,.01,23,10,0)
to "Reject reason code not currently defined in list."
"^DD",162.1,162.111,.01,"DT")
3120201
"^DD",162.5,162.5,15.3,0)
INTERFACE REJECT^S^1:YES;^FBREJ;4^Q
"^DD",162.5,162.5,15.3,3)
Enter YES if the line item was rejected by Central Fee.
"^DD",162.5,162.5,15.3,21,0)
^^5^5^3111212^
"^DD",162.5,162.5,15.3,21,1,0)
This field is populated by the FBAA BATCH SERVER and FBAA REJECT SERVER
"^DD",162.5,162.5,15.3,21,2,0)
server options when a payment line item is rejected via the interface with
"^DD",162.5,162.5,15.3,21,3,0)
Central Fee.  This field is used to distinguish line items that were 
"^DD",162.5,162.5,15.3,21,4,0)
locally rejected from those that were rejected by a downstream system.  
"^DD",162.5,162.5,15.3,21,5,0)
This field is not populated for a local reject.
"^DD",162.5,162.5,15.3,"DT")
3111212
"^DD",162.5,162.5,15.6,0)
REJECT CODE^162.515^^FBREJC;0
"^DD",162.5,162.5,15.6,21,0)
^^5^5^3120201^
"^DD",162.5,162.5,15.6,21,1,0)
The REJECT CODE multiple is populated with one to four reject codes by the
"^DD",162.5,162.5,15.6,21,2,0)
FBAA BATCH SERVER and FBAA REJECT SERVER server options when a line item
"^DD",162.5,162.5,15.6,21,3,0)
is rejected via the interface with Central Fee.  The REJECT CODE multiple
"^DD",162.5,162.5,15.6,21,4,0)
is not used for local rejects.  The reason for a local reject is entered
"^DD",162.5,162.5,15.6,21,5,0)
into the REJECT REASON (#14) field.
"^DD",162.5,162.515,0)
REJECT CODE SUB-FIELD^^.01^1
"^DD",162.5,162.515,0,"DT")
3111215
"^DD",162.5,162.515,0,"IX","B",162.515,.01)

"^DD",162.5,162.515,0,"NM","REJECT CODE")

"^DD",162.5,162.515,0,"UP")
162.5
"^DD",162.5,162.515,.01,0)
REJECT CODE^MF^^0;1^K:$L(X)>4!($L(X)<1) X
"^DD",162.5,162.515,.01,1,0)
^.1
"^DD",162.5,162.515,.01,1,1,0)
162.515^B
"^DD",162.5,162.515,.01,1,1,1)
S ^FBAAI(DA(1),"FBREJC","B",$E(X,1,30),DA)=""
"^DD",162.5,162.515,.01,1,1,2)
K ^FBAAI(DA(1),"FBREJC","B",$E(X,1,30),DA)
"^DD",162.5,162.515,.01,3)
Answer must be 1-4 characters in length.
"^DD",162.5,162.515,.01,21,0)
^^5^5^3120201^
"^DD",162.5,162.515,.01,21,1,0)
The REJECT CODE field is populated by the FBAA BATCH SERVER and FBAA
"^DD",162.5,162.515,.01,21,2,0)
REJECT SERVER server options when a line item is rejected via the
"^DD",162.5,162.515,.01,21,3,0)
interface with Central Fee.  The REJECT CODE field is not used for local
"^DD",162.5,162.515,.01,21,4,0)
rejects.  The reason for a local reject is entered into the REJECT REASON 
"^DD",162.5,162.515,.01,21,5,0)
(#14) field.
"^DD",162.5,162.515,.01,23,0)
^^10^10^3120201^
"^DD",162.5,162.515,.01,23,1,0)
Values stored in the REJECT CODE field are normally expected to have a 
"^DD",162.5,162.515,.01,23,2,0)
matching entry in the FEE BASIS PAYMENT REJECT CODE (#161.99) file.  The
"^DD",162.5,162.515,.01,23,3,0)
FEE BASIS PAYMENT REJECT CODE file contains a list of reject codes and
"^DD",162.5,162.515,.01,23,4,0)
their descriptions.
"^DD",162.5,162.515,.01,23,5,0)
 
"^DD",162.5,162.515,.01,23,6,0)
However it is possible that a new reject code will be transmitted to VistA
"^DD",162.5,162.515,.01,23,7,0)
by Central Fee and stored in the REJECT CODE field before the FEE BASIS
"^DD",162.5,162.515,.01,23,8,0)
PAYMENT REJECT CODE file is updated with that new code.  In this case 
"^DD",162.5,162.515,.01,23,9,0)
outputs that display the description of a code will display text similar
"^DD",162.5,162.515,.01,23,10,0)
to "Reject reason code not currently defined in list."
"^DD",162.5,162.515,.01,"DT")
3120201
"^DIC",161.99,161.99,0)
FEE BASIS PAYMENT REJECT CODE^161.99
"^DIC",161.99,161.99,0,"GL")
^FBAA(161.99,
"^DIC",161.99,161.99,"%",0)
^1.005^^
"^DIC",161.99,161.99,"%D",0)
^^23^23^3120201^
"^DIC",161.99,161.99,"%D",1,0)
This file holds reject codes that are applicable to payment line items.  
"^DIC",161.99,161.99,"%D",2,0)
This file will be exported with data.  The data must not be locally
"^DIC",161.99,161.99,"%D",3,0)
modified.
"^DIC",161.99,161.99,"%D",4,0)
 
"^DIC",161.99,161.99,"%D",5,0)
VistA Fee Basis has four logical files/sub-files that contain payment line
"^DIC",161.99,161.99,"%D",6,0)
items:
"^DIC",161.99,161.99,"%D",7,0)
 1. SERVICE PROVIDED (#162.03) multiple within the FEE BASIS PAYMENT
"^DIC",161.99,161.99,"%D",8,0)
    (#162) file.
"^DIC",161.99,161.99,"%D",9,0)
 2. TRAVEL PAYMENT DATE (#162.04) multiple within the FEE BASIS PAYMENT
"^DIC",161.99,161.99,"%D",10,0)
    (#162) file.
"^DIC",161.99,161.99,"%D",11,0)
 3. PRESCRIPTION NUMBER (#162.11) multiple within the FEE BASIS PHARMACY
"^DIC",161.99,161.99,"%D",12,0)
    INVOICE (#162.1) file.
"^DIC",161.99,161.99,"%D",13,0)
 4. FEE BASIS INVOICE (#162.5) file.
"^DIC",161.99,161.99,"%D",14,0)
 
"^DIC",161.99,161.99,"%D",15,0)
Each of these four logical files has a free-text REJECT CODE field within
"^DIC",161.99,161.99,"%D",16,0)
a REJECT CODE multiple. The value stored in the REJECT CODE field is 
"^DIC",161.99,161.99,"%D",17,0)
normally expected to have a matching record in the FEE BASIS PAYMENT
"^DIC",161.99,161.99,"%D",18,0)
REJECT CODE file so a description of the reject code can be displayed on
"^DIC",161.99,161.99,"%D",19,0)
appropriate outputs.  In the event the FEE BASIS PAYMENT REJECT CODE file
"^DIC",161.99,161.99,"%D",20,0)
data is out-of-date and does not contain a code that is stored with a
"^DIC",161.99,161.99,"%D",21,0)
payment, a description similar to "Reject reason code not currently
"^DIC",161.99,161.99,"%D",22,0)
defined in list" will be used as the code description until the code 
"^DIC",161.99,161.99,"%D",23,0)
is added to file #161.99 by a patch.
"^DIC",161.99,"B","FEE BASIS PAYMENT REJECT CODE",161.99)

"BLD",8911,6)
^119
**END**
**END**
