Released FB*3.5*135 SEQ #118
Extracted from mail message
**KIDS**:FB*3.5*135^

**INSTALL NAME**
FB*3.5*135
"BLD",9230,0)
FB*3.5*135^FEE BASIS^0^3120919^y
"BLD",9230,4,0)
^9.64PA^161.9^4
"BLD",9230,4,161.4,0)
161.4
"BLD",9230,4,161.4,2,0)
^9.641^161.4^1
"BLD",9230,4,161.4,2,161.4,0)
FEE BASIS SITE PARAMETERS  (File-top level)
"BLD",9230,4,161.4,2,161.4,1,0)
^9.6411^40^2
"BLD",9230,4,161.4,2,161.4,1,39,0)
UNIQUE CLAIM IDENTIFIER SEQ
"BLD",9230,4,161.4,2,161.4,1,40,0)
ALLOW FB PAID TO IB
"BLD",9230,4,161.4,222)
y^y^p^^^^n^^n
"BLD",9230,4,161.4,224)

"BLD",9230,4,161.9,0)
161.9
"BLD",9230,4,161.9,222)
y^y^f^^^^n
"BLD",9230,4,162,0)
162
"BLD",9230,4,162,2,0)
^9.641^162.03^1
"BLD",9230,4,162,2,162.03,0)
SERVICE PROVIDED  (sub-file)
"BLD",9230,4,162,2,162.03,1,0)
^9.6411^81^1
"BLD",9230,4,162,2,162.03,1,81,0)
UNIQUE CLAIM IDENTIFIER
"BLD",9230,4,162,222)
y^y^p^^^^n^^n
"BLD",9230,4,162,224)

"BLD",9230,4,162.5,0)
162.5
"BLD",9230,4,162.5,2,0)
^9.641^162.5^1
"BLD",9230,4,162.5,2,162.5,0)
FEE BASIS INVOICE  (File-top level)
"BLD",9230,4,162.5,2,162.5,1,0)
^9.6411^85^1
"BLD",9230,4,162.5,2,162.5,1,85,0)
UNIQUE CLAIM IDENTIFIER
"BLD",9230,4,162.5,222)
y^y^p^^^^n^^n
"BLD",9230,4,162.5,224)

"BLD",9230,4,"APDD",161.4,161.4)

"BLD",9230,4,"APDD",161.4,161.4,39)

"BLD",9230,4,"APDD",161.4,161.4,40)

"BLD",9230,4,"APDD",162,162.03)

"BLD",9230,4,"APDD",162,162.03,81)

"BLD",9230,4,"APDD",162.5,162.5)

"BLD",9230,4,"APDD",162.5,162.5,85)

"BLD",9230,4,"B",161.4,161.4)

"BLD",9230,4,"B",161.9,161.9)

"BLD",9230,4,"B",162,162)

"BLD",9230,4,"B",162.5,162.5)

"BLD",9230,6.3)
3
"BLD",9230,"KRN",0)
^9.67PA^779.2^20
"BLD",9230,"KRN",.4,0)
.4
"BLD",9230,"KRN",.4,"NM",0)
^9.68A^1^1
"BLD",9230,"KRN",.4,"NM",1,0)
FB UCID PAYMENT    FILE #162^162^0
"BLD",9230,"KRN",.4,"NM","B","FB UCID PAYMENT    FILE #162",1)

"BLD",9230,"KRN",.401,0)
.401
"BLD",9230,"KRN",.402,0)
.402
"BLD",9230,"KRN",.402,"NM",0)
^9.68A^3^3
"BLD",9230,"KRN",.402,"NM",1,0)
FBCH ENTER PAYMENT    FILE #162.5^162.5^0
"BLD",9230,"KRN",.402,"NM",2,0)
FBCH EDIT PAYMENT    FILE #162.5^162.5^0
"BLD",9230,"KRN",.402,"NM",3,0)
FBAA SITE PARAMETERS    FILE #161.4^161.4^0
"BLD",9230,"KRN",.402,"NM","B","FBAA SITE PARAMETERS    FILE #161.4",3)

"BLD",9230,"KRN",.402,"NM","B","FBCH EDIT PAYMENT    FILE #162.5",2)

"BLD",9230,"KRN",.402,"NM","B","FBCH ENTER PAYMENT    FILE #162.5",1)

"BLD",9230,"KRN",.403,0)
.403
"BLD",9230,"KRN",.5,0)
.5
"BLD",9230,"KRN",.84,0)
.84
"BLD",9230,"KRN",3.6,0)
3.6
"BLD",9230,"KRN",3.8,0)
3.8
"BLD",9230,"KRN",9.2,0)
9.2
"BLD",9230,"KRN",9.8,0)
9.8
"BLD",9230,"KRN",9.8,"NM",0)
^9.68A^14^14
"BLD",9230,"KRN",9.8,"NM",1,0)
FBAAPIN^^0^B36889806
"BLD",9230,"KRN",9.8,"NM",2,0)
FBCHVH^^0^B37280892
"BLD",9230,"KRN",9.8,"NM",3,0)
FBPAID^^0^B34000309
"BLD",9230,"KRN",9.8,"NM",4,0)
FBPAID3^^0^B190545666
"BLD",9230,"KRN",9.8,"NM",5,0)
FBPCR^^0^B73151731
"BLD",9230,"KRN",9.8,"NM",6,0)
FBPCR4^^0^B14245640
"BLD",9230,"KRN",9.8,"NM",7,0)
FBUTL135^^0^B139327633
"BLD",9230,"KRN",9.8,"NM",8,0)
FBCHEP^^0^B34203582
"BLD",9230,"KRN",9.8,"NM",9,0)
FBPAID3A^^0^B117117622
"BLD",9230,"KRN",9.8,"NM",10,0)
FBUTL5^^0^B19998374
"BLD",9230,"KRN",9.8,"NM",11,0)
FBUTL136^^0^B203178014
"BLD",9230,"KRN",9.8,"NM",12,0)
FBAACO^^0^B30906889
"BLD",9230,"KRN",9.8,"NM",13,0)
FBAACO2^^0^B14623021
"BLD",9230,"KRN",9.8,"NM",14,0)
FBPAID3B^^0^B52284307
"BLD",9230,"KRN",9.8,"NM","B","FBAACO",12)

"BLD",9230,"KRN",9.8,"NM","B","FBAACO2",13)

"BLD",9230,"KRN",9.8,"NM","B","FBAAPIN",1)

"BLD",9230,"KRN",9.8,"NM","B","FBCHEP",8)

"BLD",9230,"KRN",9.8,"NM","B","FBCHVH",2)

"BLD",9230,"KRN",9.8,"NM","B","FBPAID",3)

"BLD",9230,"KRN",9.8,"NM","B","FBPAID3",4)

"BLD",9230,"KRN",9.8,"NM","B","FBPAID3A",9)

"BLD",9230,"KRN",9.8,"NM","B","FBPAID3B",14)

"BLD",9230,"KRN",9.8,"NM","B","FBPCR",5)

"BLD",9230,"KRN",9.8,"NM","B","FBPCR4",6)

"BLD",9230,"KRN",9.8,"NM","B","FBUTL135",7)

"BLD",9230,"KRN",9.8,"NM","B","FBUTL136",11)

"BLD",9230,"KRN",9.8,"NM","B","FBUTL5",10)

"BLD",9230,"KRN",19,0)
19
"BLD",9230,"KRN",19,"NM",0)
^9.68A^5^5
"BLD",9230,"KRN",19,"NM",1,0)
FB PAID TO IB^^0
"BLD",9230,"KRN",19,"NM",2,0)
FB PROVIDER TO IB REPORT^^0
"BLD",9230,"KRN",19,"NM",3,0)
FB UCID DISPLAY^^0
"BLD",9230,"KRN",19,"NM",4,0)
FB UCID UTILITY MENU^^0
"BLD",9230,"KRN",19,"NM",5,0)
FB UCID PAYMENT RPT^^0
"BLD",9230,"KRN",19,"NM","B","FB PAID TO IB",1)

"BLD",9230,"KRN",19,"NM","B","FB PROVIDER TO IB REPORT",2)

"BLD",9230,"KRN",19,"NM","B","FB UCID DISPLAY",3)

"BLD",9230,"KRN",19,"NM","B","FB UCID PAYMENT RPT",5)

"BLD",9230,"KRN",19,"NM","B","FB UCID UTILITY MENU",4)

"BLD",9230,"KRN",19.1,0)
19.1
"BLD",9230,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",9230,"KRN",101,0)
101
"BLD",9230,"KRN",409.61,0)
409.61
"BLD",9230,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",9230,"KRN",771,0)
771
"BLD",9230,"KRN",779.2,0)
779.2
"BLD",9230,"KRN",870,0)
870
"BLD",9230,"KRN",8989.51,0)
8989.51
"BLD",9230,"KRN",8989.52,0)
8989.52
"BLD",9230,"KRN",8994,0)
8994
"BLD",9230,"KRN","B",.4,.4)

"BLD",9230,"KRN","B",.401,.401)

"BLD",9230,"KRN","B",.402,.402)

"BLD",9230,"KRN","B",.403,.403)

"BLD",9230,"KRN","B",.5,.5)

"BLD",9230,"KRN","B",.84,.84)

"BLD",9230,"KRN","B",3.6,3.6)

"BLD",9230,"KRN","B",3.8,3.8)

"BLD",9230,"KRN","B",9.2,9.2)

"BLD",9230,"KRN","B",9.8,9.8)

"BLD",9230,"KRN","B",19,19)

"BLD",9230,"KRN","B",19.1,19.1)

"BLD",9230,"KRN","B",101,101)

"BLD",9230,"KRN","B",409.61,409.61)

"BLD",9230,"KRN","B",771,771)

"BLD",9230,"KRN","B",779.2,779.2)

"BLD",9230,"KRN","B",870,870)

"BLD",9230,"KRN","B",8989.51,8989.51)

"BLD",9230,"KRN","B",8989.52,8989.52)

"BLD",9230,"KRN","B",8994,8994)

"BLD",9230,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9230,"QUES",0)
^9.62^^
"BLD",9230,"REQB",0)
^9.611^3^3
"BLD",9230,"REQB",1,0)
FB*3.5*108^2
"BLD",9230,"REQB",2,0)
FB*3.5*124^2
"BLD",9230,"REQB",3,0)
IB*2.0*476^2
"BLD",9230,"REQB","B","FB*3.5*108",1)

"BLD",9230,"REQB","B","FB*3.5*124",2)

"BLD",9230,"REQB","B","IB*2.0*476",3)

"FIA",161.4)
FEE BASIS SITE PARAMETERS
"FIA",161.4,0)
^FBAA(161.4,
"FIA",161.4,0,0)
161.4
"FIA",161.4,0,1)
y^y^p^^^^n^^n
"FIA",161.4,0,10)

"FIA",161.4,0,11)

"FIA",161.4,0,"RLRO")

"FIA",161.4,0,"VR")
3.5^FB
"FIA",161.4,161.4)
1
"FIA",161.4,161.4,39)

"FIA",161.4,161.4,40)

"FIA",161.9)
FEE BASIS PAID TO IB
"FIA",161.9,0)
^FB(161.9,
"FIA",161.9,0,0)
161.9P
"FIA",161.9,0,1)
y^y^f^^^^n
"FIA",161.9,0,10)

"FIA",161.9,0,11)

"FIA",161.9,0,"RLRO")

"FIA",161.9,0,"VR")
3.5^FB
"FIA",161.9,161.9)
0
"FIA",162)
FEE BASIS PAYMENT
"FIA",162,0)
^FBAAC(
"FIA",162,0,0)
162P
"FIA",162,0,1)
y^y^p^^^^n^^n
"FIA",162,0,10)

"FIA",162,0,11)

"FIA",162,0,"RLRO")

"FIA",162,0,"VR")
3.5^FB
"FIA",162,162)
1
"FIA",162,162.03)
1
"FIA",162,162.03,81)

"FIA",162.5)
FEE BASIS INVOICE
"FIA",162.5,0)
^FBAAI(
"FIA",162.5,0,0)
162.5
"FIA",162.5,0,1)
y^y^p^^^^n^^n
"FIA",162.5,0,10)

"FIA",162.5,0,11)

"FIA",162.5,0,"RLRO")

"FIA",162.5,0,"VR")
3.5^FB
"FIA",162.5,162.5)
1
"FIA",162.5,162.5,85)

"KRN",.4,2646,-1)
0^1
"KRN",.4,2646,0)
FB UCID PAYMENT^3120913.1121^@^162^^@^3120913
"KRN",.4,2646,"F",2)
.01~6,.01~6,1,.01~6,1,2,.01~6,1,2,81~
"KRN",.4,2646,"H")
FB UCID PAYMENT SEARCH
"KRN",.402,583,-1)
0^3
"KRN",.402,583,0)
FBAA SITE PARAMETERS^3120504.1104^^161.4^^^3120509
"KRN",.402,583,"DIAB",13,0,161.4,0)
32;T
"KRN",.402,583,"DR",1,161.4)
.01;I $$VER^FBAAUTL2(161.4)=3,$D(^FBAA(161.4,1,0)) S $P(^(1),U,10)="FEE";I $D(^FBAA(161.4,1,0)),$P(^(1),U,9)="" S $P(^(1),U,9)=125;1;2;16;3:8;9;12:14;15;17:19;21:28;32T~;32.5;33;34;35;35.5;35.6;35.7;40;
"KRN",.402,583,"DR",2,161.428)
.01
"KRN",.402,1175,-1)
0^1
"KRN",.402,1175,0)
FBCH ENTER PAYMENT^3120509.1147^^162.5^^^3120530
"KRN",.402,1175,"DIAB",2,0,162.5,4)
31.02;REQ
"KRN",.402,1175,"DIAB",2,0,162.5,5)
34.02;REQ
"KRN",.402,1175,"DIAB",2,0,162.5,6)
35.22;REQ
"KRN",.402,1175,"DIAB",2,0,162.5,7)
35.52;REQ
"KRN",.402,1175,"DIAB",2,0,162.5,8)
35.82;REQ
"KRN",.402,1175,"DIAB",2,0,162.5,9)
36.12;REQ
"KRN",.402,1175,"DIAB",2,0,162.5,10)
36.42;REQ
"KRN",.402,1175,"DIAB",2,0,162.5,11)
36.72;REQ
"KRN",.402,1175,"DIAB",7,0,162.5,4)
32.02;REQ
"KRN",.402,1175,"DIAB",7,0,162.5,5)
35.02;REQ
"KRN",.402,1175,"DIAB",7,0,162.5,6)
35.32;REQ
"KRN",.402,1175,"DIAB",7,0,162.5,7)
35.62;REQ
"KRN",.402,1175,"DIAB",7,0,162.5,8)
35.92;REQ
"KRN",.402,1175,"DIAB",7,0,162.5,9)
36.22;REQ
"KRN",.402,1175,"DIAB",7,0,162.5,10)
36.52;REQ
"KRN",.402,1175,"DIAB",7,0,162.5,11)
36.82;REQ
"KRN",.402,1175,"DIAB",12,0,162.5,4)
33.02;REQ
"KRN",.402,1175,"DIAB",12,0,162.5,5)
35.12;REQ
"KRN",.402,1175,"DIAB",12,0,162.5,6)
35.42;REQ
"KRN",.402,1175,"DIAB",12,0,162.5,7)
35.72;REQ
"KRN",.402,1175,"DIAB",12,0,162.5,8)
36.02;REQ
"KRN",.402,1175,"DIAB",12,0,162.5,9)
36.32;REQ
"KRN",.402,1175,"DIAB",12,0,162.5,10)
36.62;REQ
"KRN",.402,1175,"DIAB",12,0,162.5,11)
36.92;REQ
"KRN",.402,1175,"DIAB",24,0,162.5,3)
30.02;REQ
"KRN",.402,1175,"DR",1,162.5)
1////^S X=FBAAID;46////^S X=FBAAVID;55///^S X=FBCSID;56///^S X=$G(FBFPPSC);85///^S X=$G(FBUCI135);57///^S X=$G(FBFPPSL);47////^S X=FBAAMM1;2////^S X=FBVEN;3////^S X=FBVET;60////^S X=$G(FBCNTRP);4////^S X=FBI7078;5////^S X=FBAABDT;
"KRN",.402,1175,"DR",1,162.5,1)
6////^S X=FBAAEDT;23////^S X=FBPSA;21////^S X=FBPOV;22////^S X=FBPT;11////^S X=FBTYPE;12////^S X=FBAAPTC;20////^S X=FBAABE;W !;6.5;54//^S X=$G(FBCDAYS);6.6;I 1;7;S FBAMTC=X;I $G(FBEXMPT)'="Y" S Y="@25";S:FBI7078'["FB583" Y=8;
"KRN",.402,1175,"DR",1,162.5,2)
S:'$P($G(^FB583(+FBI7078,0)),U,28) Y=8;W !?2,"**Payment is for emergency treatment under 38 U.S.C. 1725.";8;S FBAMTP=X;I FBAMTC=FBAMTP S Y="@25";S FBX=$$ADJ^FBUTL2(FBAMTC-FBAMTP,.FBADJ,1,,,1);@20;I $G(FBEXMPT)="Y" S Y="@25";@26;24;
"KRN",.402,1175,"DR",1,162.5,3)
I $$INPICD^FBCSV1(X,$G(DA),FBAABDT) S Y="@26";@25;6.7;I 1;64;65;66;67;68;69;70;71;72;73;80;81;82;83;74;75;@30;30;I $$INPICD9^FBCSV1(X,$G(DA),FBAABDT) S Y="@30";30.02R~;@31;31;S:X="" Y="@57";
"KRN",.402,1175,"DR",1,162.5,4)
I $$INPICD9^FBCSV1(X,$G(DA),FBAABDT) S Y="@31";31.02R~;@32;32;S:X="" Y="@57";I $$INPICD9^FBCSV1(X,$G(DA),FBAABDT) S Y="@32";32.02R~;@33;33;S:X="" Y="@57";I $$INPICD9^FBCSV1(X,$G(DA),FBAABDT) S Y="@33";33.02R~;@34;34;S:X="" Y="@57";
"KRN",.402,1175,"DR",1,162.5,5)
I $$INPICD9^FBCSV1(X,$G(DA),FBAABDT) S Y="@34";34.02R~;@35;35;S:X="" Y="@57";I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@35";35.02R~;@36;35.1;S:X="" Y="@57";I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@36";35.12R~;@37;35.2;S:X="" Y="@57";
"KRN",.402,1175,"DR",1,162.5,6)
I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@37";35.22R~;@38;35.3;S:X="" Y="@57";I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@38";35.32R~;@39;35.4;S:X="" Y="@57";I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@39";35.42R~;@40;35.5;S:X="" Y="@57";
"KRN",.402,1175,"DR",1,162.5,7)
I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@40";35.52R~;@41;35.6;S:X="" Y="@57";I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@41";35.62R~;@42;35.7;S:X="" Y="@57";I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@42";35.72R~;@43;35.8;S:X="" Y="@57";
"KRN",.402,1175,"DR",1,162.5,8)
I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@43";35.82R~;@44;35.9;S:X="" Y="@57";I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@44";35.92R~;@45;36;S:X="" Y="@57";I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@45";36.02R~;@46;36.1;S:X="" Y="@57";
"KRN",.402,1175,"DR",1,162.5,9)
I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@46";36.12R~;@47;36.2;S:X="" Y="@57";I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@47";36.22R~;@48;36.3;S:X="" Y="@57";I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@48";36.32R~;@49;36.4;S:X="" Y="@57";
"KRN",.402,1175,"DR",1,162.5,10)
I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@49";36.42R~;@50;36.5;S:X="" Y="@57";I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@50";36.52R~;@51;36.6;S:X="" Y="@57";I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@51";36.62R~;@52;36.7;S:X="" Y="@57";
"KRN",.402,1175,"DR",1,162.5,11)
I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@52";36.72R~;@53;36.8;S:X="" Y="@57";I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@53";36.82R~;@54;36.9;S:X="" Y="@57";I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@54";36.92R~;@57;39;
"KRN",.402,1175,"DR",1,162.5,12)
S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@57";@60;40;S:X="" Y="@99";I $$INPICD0^FBCSV1(X,$G(DA),FBAABDT) S Y="@60";@61;41;S:X="" Y="@99";I $$INPICD0^FBCSV1(X,$G(DA),FBAABDT) S Y="@61";@62;42;S:X="" Y="@99";
"KRN",.402,1175,"DR",1,162.5,13)
I $$INPICD0^FBCSV1(X,$G(DA),FBAABDT) S Y="@62";@63;43;S:X="" Y="@99";I $$INPICD0^FBCSV1(X,$G(DA),FBAABDT) S Y="@63";@64;44;S:X="" Y="@99";I $$INPICD0^FBCSV1(X,$G(DA),FBAABDT) S Y="@64";@65;44.06;S:X="" Y="@99";
"KRN",.402,1175,"DR",1,162.5,14)
S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@65";@66;44.07;S:X="" Y="@99";S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@66";@67;44.08;S:X="" Y="@99";S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@67";@68;44.09;S:X="" Y="@99";S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@68";@69;
"KRN",.402,1175,"DR",1,162.5,15)
44.1;S:X="" Y="@99";S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@69";@70;44.11;S:X="" Y="@99";S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@70";@71;44.12;S:X="" Y="@99";S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@71";@72;44.13;S:X="" Y="@99";
"KRN",.402,1175,"DR",1,162.5,16)
S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@72";@73;44.14;S:X="" Y="@99";S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@73";@74;44.15;S:X="" Y="@99";S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@74";@75;44.16;S:X="" Y="@99";S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@75";@76;
"KRN",.402,1175,"DR",1,162.5,17)
44.17;S:X="" Y="@99";S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@76";@77;44.18;S:X="" Y="@99";S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@77";@78;44.19;S:X="" Y="@99";S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@78";@79;44.2;S:X="" Y="@99";
"KRN",.402,1175,"DR",1,162.5,18)
S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@79";@80;44.21;S:X="" Y="@99";S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@80";@81;44.22;S:X="" Y="@99";S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@81";@82;44.23;S:X="" Y="@99";S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@82";@83;
"KRN",.402,1175,"DR",1,162.5,19)
44.24;S:X="" Y="@99";S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@83";@84;44.25;S:X="" Y="@99";S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@84";@99;I $D(^FBAAI(DA,"DX")),$P(^("DX"),U)="" W !!,*7,"The 'ICD1' field is a manditory field!",! S Y="@30";
"KRN",.402,1175,"DR",1,162.5,20)
S FBX=$$RPROV^FBUTL8(.FBPROV,.FBPROVD);I $G(FBEXMPT)'="Y" S Y="@992";S FBX=$$RR^FBUTL4(.FBRRMK,2);@992;25////^S X=FBRESUB;
"KRN",.402,1176,-1)
0^2
"KRN",.402,1176,0)
FBCH EDIT PAYMENT^3120523.1043^^162.5^^^3120531
"KRN",.402,1176,"DIAB",2,0,162.5,5)
31.02;REQ
"KRN",.402,1176,"DIAB",2,0,162.5,7)
34.02;REQ
"KRN",.402,1176,"DIAB",2,0,162.5,9)
35.22;REQ
"KRN",.402,1176,"DIAB",2,0,162.5,11)
35.52;REQ
"KRN",.402,1176,"DIAB",2,0,162.5,13)
35.82;REQ
"KRN",.402,1176,"DIAB",2,0,162.5,15)
36.12;REQ
"KRN",.402,1176,"DIAB",2,0,162.5,17)
36.42;REQ
"KRN",.402,1176,"DIAB",2,0,162.5,19)
36.72;REQ
"KRN",.402,1176,"DIAB",5,0,162.5,4)
24;REQ
"KRN",.402,1176,"DIAB",7,0,162.5,4)
24.5;REQ
"KRN",.402,1176,"DIAB",7,0,162.5,6)
33.02;REQ
"KRN",.402,1176,"DIAB",7,0,162.5,8)
35.12;REQ
"KRN",.402,1176,"DIAB",7,0,162.5,10)
35.42;REQ
"KRN",.402,1176,"DIAB",7,0,162.5,12)
35.72;REQ
"KRN",.402,1176,"DIAB",7,0,162.5,14)
36.02;REQ
"KRN",.402,1176,"DIAB",7,0,162.5,16)
36.32;REQ
"KRN",.402,1176,"DIAB",7,0,162.5,18)
36.62;REQ
"KRN",.402,1176,"DIAB",7,0,162.5,20)
36.92;REQ
"KRN",.402,1176,"DIAB",11,0,162.5,4)
30.02;REQ
"KRN",.402,1176,"DIAB",12,0,162.5,5)
32.02;REQ
"KRN",.402,1176,"DIAB",12,0,162.5,7)
35.02;REQ
"KRN",.402,1176,"DIAB",12,0,162.5,9)
35.32;REQ
"KRN",.402,1176,"DIAB",12,0,162.5,11)
35.62;REQ
"KRN",.402,1176,"DIAB",12,0,162.5,13)
35.92;REQ
"KRN",.402,1176,"DIAB",12,0,162.5,15)
36.22;REQ
"KRN",.402,1176,"DIAB",12,0,162.5,17)
36.52;REQ
"KRN",.402,1176,"DIAB",12,0,162.5,19)
36.82;REQ
"KRN",.402,1176,"DR",1,162.5)
@1;1;I 1;I $$BADDATE^FBCHEP1(X,DA) S Y="@1";46;55;S FBX=$$FPPSC^FBUTL5(1,FBFPPSC);D EDINPAT^FBUTL136($G(FBX),$G(FBI));S:FBX=-1 Y=0;S:FBX="" Y="@10";56///^S X=FBX;S FBFPPSC=X;S FBX=$$FPPSL^FBUTL5(FBFPPSL,1);S:FBX=-1 Y=0;
"KRN",.402,1176,"DR",1,162.5,1)
57///^S X=FBX;S FBFPPSL=X;S Y="@14";@10;56///@;S FBFPPSC="";57///@;S FBFPPSL="";@14;S FBV=$P($G(^FBAAI(DA,0)),U,3);S FBAAMM=$S($G(FBAAPTC)="R":"",$D(FB583):"",1:1);D PPT^FBAACO1($G(FBAAMM1),$G(FBCNTRP));47////@;47///^S X=FBAAMM1;
"KRN",.402,1176,"DR",1,162.5,2)
60///@;60////^S X=$G(FBCNTRP);6.5;54;6.6;I 1;6.7;64;65;66;67;68;69;70;71;72;73;80;81;82;83;74;75;S DIE("NO^")="NO QUIT";7;S:$D(FBPRICE) Y="@20";S FBJJ=X;I $G(FBEXMPT)="Y" S Y="@16";26;S FBPAMT=X;@16;
"KRN",.402,1176,"DR",1,162.5,3)
W:FB1725 !?2,"**Payment is for emergency treatment under 38 U.S.C. 1725.";W:FB1725&($G(FBPAMT)>0) !?2,"  70% of Pricer Amount = "_$J(.7*FBPAMT,0,2);8;S FBKK=X;K FBADJD;M FBADJD=FBADJ;
"KRN",.402,1176,"DR",1,162.5,4)
S FBX=$$ADJ^FBUTL2(FBJJ-FBKK,.FBADJ,1,,.FBADJD,1);K FBADJD;I $G(FBEXMPT)="Y" S Y=30;@18;24R~;I $$INPICD^FBCSV1(X,$G(DA)) S Y="@18";24.5R~;@20;30;S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@20";30.02R~;@22;31;S:X="" Y="@23";
"KRN",.402,1176,"DR",1,162.5,5)
S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@22";31.02R~;S:$G(LASTDX)<2 LASTDX=2;S Y="@24";@23;31.02///@;S:$G(LASTDX)'>2 Y="@70";@24;32;S:X="" Y="@25";S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@24";32.02R~;S:$G(LASTDX)<3 LASTDX=3;S Y="@26";@25;
"KRN",.402,1176,"DR",1,162.5,6)
32.02///@;S:$G(LASTDX)'>3 Y="@70";@26;33;S:X="" Y="@27";S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@26";33.02R~;S:$G(LASTDX)<4 LASTDX=4;S Y="@28";@27;33.02///@;S:$G(LASTDX)'>4 Y="@70";@28;34;S:X="" Y="@29";
"KRN",.402,1176,"DR",1,162.5,7)
S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@28";34.02R~;S:$G(LASTDX)<5 LASTDX=5;S Y="@30";@29;34.02///@;S:$G(LASTDX)'>5 Y="@70";@30;35;S:X="" Y="@31";S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@30";35.02R~;S:$G(LASTDX)<6 LASTDX=6;S Y="@32";@31;
"KRN",.402,1176,"DR",1,162.5,8)
35.02///@;S:$G(LASTDX)'>6 Y="@70";@32;35.1;S:X="" Y="@33";S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@32";35.12R~;S:$G(LASTDX)<7 LASTDX=7;S Y="@34";@33;35.12///@;S:$G(LASTDX)'>7 Y="@70";@34;35.2;S:X="" Y="@35";
"KRN",.402,1176,"DR",1,162.5,9)
S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@34";35.22R~;S:$G(LASTDX)<8 LASTDX=8;S Y="@36";@35;35.22///@;S:$G(LASTDX)'>8 Y="@70";@36;35.3;S:X="" Y="@37";S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@36";35.32R~;S:$G(LASTDX)<9 LASTDX=9;S Y="@38";@37;
"KRN",.402,1176,"DR",1,162.5,10)
35.32///@;S:$G(LASTDX)'>9 Y="@70";@38;35.4;S:X="" Y="@39";S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@38";35.42R~;S:$G(LASTDX)<10 LASTDX=10;S Y="@40";@39;35.42///@;S:$G(LASTDX)'>10 Y="@70";@40;35.5;S:X="" Y="@41";
"KRN",.402,1176,"DR",1,162.5,11)
S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@40";35.52R~;S:$G(LASTDX)<11 LASTDX=11;S Y="@42";@41;35.52///@;S:$G(LASTDX)'>11 Y="@70";@42;35.6;S:X="" Y="@43";S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@42";35.62R~;S:$G(LASTDX)<12 LASTDX=12;S Y="@44";@43;
"KRN",.402,1176,"DR",1,162.5,12)
35.62///@;S:$G(LASTDX)'>12 Y="@70";@44;35.7;S:X="" Y="@45";S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@44";35.72R~;S:$G(LASTDX)<13 LASTDX=13;S Y="@46";@45;35.72///@;S:$G(LASTDX)'>13 Y="@70";@46;35.8;S:X="" Y="@47";
"KRN",.402,1176,"DR",1,162.5,13)
S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@46";35.82R~;S:$G(LASTDX)<14 LASTDX=14;S Y="@48";@47;35.82///@;S:$G(LASTDX)'>14 Y="@70";@48;35.9;S:X="" Y="@49";S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@48";35.92R~;S:$G(LASTDX)<15 LASTDX=15;S Y="@50";@49;
"KRN",.402,1176,"DR",1,162.5,14)
35.92///@;S:$G(LASTDX)'>15 Y="@70";@50;36;S:X="" Y="@51";S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@50";36.02R~;S:$G(LASTDX)<16 LASTDX=16;S Y="@52";@51;36.02///@;S:$G(LASTDX)'>16 Y="@70";@52;36.1;S:X="" Y="@53";
"KRN",.402,1176,"DR",1,162.5,15)
S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@52";36.12R~;S:$G(LASTDX)<17 LASTDX=17;S Y="@54";@53;36.12///@;S:$G(LASTDX)'>17 Y="@70";@54;36.2;S:X="" Y="@55";S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@54";36.22R~;S:$G(LASTDX)<18 LASTDX=18;S Y="@56";@55;
"KRN",.402,1176,"DR",1,162.5,16)
36.22///@;S:$G(LASTDX)'>18 Y="@70";@56;36.3;S:X="" Y="@57";S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@56";36.32R~;S:$G(LASTDX)<19 LASTDX=19;S Y="@58";@57;36.32///@;S:$G(LASTDX)'>19 Y="@70";@58;36.4;S:X="" Y="@59";
"KRN",.402,1176,"DR",1,162.5,17)
S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@58";36.42R~;S:$G(LASTDX)<20 LASTDX=20;S Y="@60";@59;36.42///@;S:$G(LASTDX)'>20 Y="@70";@60;36.5;S:X="" Y="@61";S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@60";36.52R~;S:$G(LASTDX)<21 LASTDX=21;S Y="@62";@61;
"KRN",.402,1176,"DR",1,162.5,18)
36.52///@;S:$G(LASTDX)'>21 Y="@70";@62;36.6;S:X="" Y="@63";S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@62";36.62R~;S:$G(LASTDX)<22 LASTDX=22;S Y="@64";@63;36.62///@;S:$G(LASTDX)'>22 Y="@70";@64;36.7;S:X="" Y="@65";
"KRN",.402,1176,"DR",1,162.5,19)
S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@64";36.72R~;S:$G(LASTDX)<23 LASTDX=23;S Y="@66";@65;36.72///@;S:$G(LASTDX)'>23 Y="@70";@66;36.8;S:X="" Y="@67";S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@66";36.82R~;S:$G(LASTDX)<24 LASTDX=24;S Y="@68";@67;
"KRN",.402,1176,"DR",1,162.5,20)
36.82///@;S:$G(LASTDX)'>24 Y="@70";@68;36.9;S:X="" Y="@69";S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@68";36.92R~;S:$G(LASTDX)<25 LASTDX=25;S Y="@70";@69;36.92///@;@70;39;S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@70";@71;40;
"KRN",.402,1176,"DR",1,162.5,21)
S:X="" Y=$S($G(LASTPROC)>1:"@72",1:"@99");S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@71";S:$G(LASTPROC)<1 LASTPROC=1;@72;41;S:X="" Y=$S($G(LASTPROC)>2:"@73",1:"@99");S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@72";S:$G(LASTPROC)<2 LASTPROC=2;@73;42;
"KRN",.402,1176,"DR",1,162.5,22)
S:X="" Y=$S($G(LASTPROC)>3:"@74",1:"@99");S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@73";S:$G(LASTPROC)<3 LASTPROC=3;@74;43;S:X="" Y=$S($G(LASTPROC)>4:"@75",1:"@99");S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@74";S:$G(LASTPROC)<4 LASTPROC=4;@75;44;
"KRN",.402,1176,"DR",1,162.5,23)
S:X="" Y=$S($G(LASTPROC)>5:"@76",1:"@99");S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@75";S:$G(LASTPROC)<5 LASTPROC=5;@76;44.06;S:X="" Y=$S($G(LASTPROC)>6:"@77",1:"@99");S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@76";S:$G(LASTPROC)<6 LASTPROC=6;@77;
"KRN",.402,1176,"DR",1,162.5,24)
44.07;S:X="" Y=$S($G(LASTPROC)>7:"@78",1:"@99");S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@77";S:$G(LASTPROC)<7 LASTPROC=7;@78;44.08;S:X="" Y=$S($G(LASTPROC)>8:"@79",1:"@99");S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@78";S:$G(LASTPROC)<8 LASTPROC=8;
"KRN",.402,1176,"DR",1,162.5,25)
@79;44.09;S:X="" Y=$S($G(LASTPROC)>9:"@80",1:"@99");S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@79";S:$G(LASTPROC)<9 LASTPROC=9;@80;44.1;S:X="" Y=$S($G(LASTPROC)>10:"@81",1:"@99");S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@80";
"KRN",.402,1176,"DR",1,162.5,26)
S:$G(LASTPROC)<10 LASTPROC=10;@81;44.11;S:X="" Y=$S($G(LASTPROC)>11:"@82",1:"@99");S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@81";S:$G(LASTPROC)<11 LASTPROC=11;@82;44.12;S:X="" Y=$S($G(LASTPROC)>12:"@83",1:"@99");
"KRN",.402,1176,"DR",1,162.5,27)
S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@82";S:$G(LASTPROC)<12 LASTPROC=12;@83;44.13;S:X="" Y=$S($G(LASTPROC)>13:"@84",1:"@99");S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@83";S:$G(LASTPROC)<13 LASTPROC=13;@84;44.14;
"KRN",.402,1176,"DR",1,162.5,28)
S:X="" Y=$S($G(LASTPROC)>14:"@85",1:"@99");S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@84";S:$G(LASTPROC)<14 LASTPROC=14;@85;44.15;S:X="" Y=$S($G(LASTPROC)>15:"@86",1:"@99");S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@85";S:$G(LASTPROC)<15 LASTPROC=15;
"KRN",.402,1176,"DR",1,162.5,29)
@86;44.16;S:X="" Y=$S($G(LASTPROC)>16:"@87",1:"@99");S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@86";S:$G(LASTPROC)<16 LASTPROC=16;@87;44.17;S:X="" Y=$S($G(LASTPROC)>17:"@88",1:"@99");S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@87";
"KRN",.402,1176,"DR",1,162.5,30)
S:$G(LASTPROC)<17 LASTPROC=17;@88;44.18;S:X="" Y=$S($G(LASTPROC)>18:"@89",1:"@99");S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@88";S:$G(LASTPROC)<18 LASTPROC=18;@89;44.19;S:X="" Y=$S($G(LASTPROC)>19:"@90",1:"@99");
"KRN",.402,1176,"DR",1,162.5,31)
S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@89";S:$G(LASTPROC)<19 LASTPROC=19;@90;44.2;S:X="" Y=$S($G(LASTPROC)>20:"@91",1:"@99");S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@90";S:$G(LASTPROC)<20 LASTPROC=20;@91;44.21;
"KRN",.402,1176,"DR",1,162.5,32)
S:X="" Y=$S($G(LASTPROC)>21:"@92",1:"@99");S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@91";S:$G(LASTPROC)<21 LASTPROC=21;@92;44.22;S:X="" Y=$S($G(LASTPROC)>22:"@93",1:"@99");S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@92";S:$G(LASTPROC)<22 LASTPROC=22;
"KRN",.402,1176,"DR",1,162.5,33)
@93;44.23;S:X="" Y=$S($G(LASTPROC)>23:"@94",1:"@99");S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@93";S:$G(LASTPROC)<23 LASTPROC=23;@94;44.24;S:X="" Y=$S($G(LASTPROC)>24:"@95",1:"@99");S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@94";
"KRN",.402,1176,"DR",1,162.5,34)
S:$G(LASTPROC)<24 LASTPROC=24;@95;44.25;S:X="" Y="@99";S:$$INPICD0^FBCSV1(X,$G(DA)) Y="@95";S:$G(LASTPROC)<25 LASTPROC=25;@99;K FBPROVD;M FBPROVD=FBPROV;S FBX=$$RPROV^FBUTL8(.FBPROV,.FBPROVD);K FBPROVD;S:$D(FBPRICE) Y="@992";
"KRN",.402,1176,"DR",1,162.5,35)
K FBRRMKD;M FBRRMKD=FBRRMK;S FBX=$$RR^FBUTL4(.FBRRMK,2,,.FBRRMKD);K FBRRMKD;@992;K FBJJ,FBKK,DIE("NO^"),FBX;
"KRN",19,14344,-1)
0^1
"KRN",19,14344,0)
FB PAID TO IB^Fee Basis Payment to IB^^R^^^^^^^^FEE BASIS
"KRN",19,14344,1,0)
^19.06^4^4^3120425^^^^
"KRN",19,14344,1,1,0)
This OPTION is intended to be scheduled on a nightly basis.  Lines in
"KRN",19,14344,1,2,0)
the FEE BASIS PAID TO IB (#161.9) file which are older than 180 days
"KRN",19,14344,1,3,0)
will be deleted. All remaining unprocessed lines will be processed
"KRN",19,14344,1,4,0)
by this task.
"KRN",19,14344,10.1)
FB PAID TO IB
"KRN",19,14344,25)
EPFBTOIB^FBPAID3()
"KRN",19,14344,200.9)
y
"KRN",19,14344,"U")
FEE BASIS PAYMENT TO IB
"KRN",19,14345,-1)
0^2
"KRN",19,14345,0)
FB PROVIDER TO IB REPORT^FB Provider to IB Report^^R^^^^^^^^FEE BASIS
"KRN",19,14345,1,0)
^19.06^1^1^3120524^^^
"KRN",19,14345,1,1,0)
This option provides reporting tools for the FB PAID TO IB scheduled task
"KRN",19,14345,10.1)
FB Provider to IB Report
"KRN",19,14345,25)
EPFBPRV^FBPAID3B()
"KRN",19,14345,30)

"KRN",19,14345,60)

"KRN",19,14345,63)

"KRN",19,14345,64)

"KRN",19,14345,"U")
FB PROVIDER TO IB REPORT
"KRN",19,14346,-1)
0^3
"KRN",19,14346,0)
FB UCID DISPLAY^Unique Claim Identifier Display^^R^^^^^^^^FEE BASIS
"KRN",19,14346,1,0)
^^1^1^3120913^
"KRN",19,14346,1,1,0)
TESTING Option to enable validation of UCID for FB PATCH 135 testing
"KRN",19,14346,10.1)
Unique Claim ID Display
"KRN",19,14346,25)
UCIDUTL^FBUTL135()
"KRN",19,14346,"U")
UNIQUE CLAIM IDENTIFIER DISPLA
"KRN",19,14347,-1)
0^4
"KRN",19,14347,0)
FB UCID UTILITY MENU^Unique Claim Identifier Utility Menu^^M^^^^^^^^FEE BASIS^^1
"KRN",19,14347,1,0)
^19.06^1^1^3120913^^^
"KRN",19,14347,1,1,0)
This menu option contains utilities for examining Unique Claim ID information in Fee Basis files
"KRN",19,14347,10,0)
^19.01IP^2^2
"KRN",19,14347,10,1,0)
14346^UCID^1
"KRN",19,14347,10,1,"^")
FB UCID DISPLAY
"KRN",19,14347,10,2,0)
14348^OUT^2
"KRN",19,14347,10,2,"^")
FB UCID PAYMENT RPT
"KRN",19,14347,10.1)
UCID Utility Menu
"KRN",19,14347,20)
D CLEAR^FBUTL135()
"KRN",19,14347,99)
62719,46722
"KRN",19,14347,"U")
UNIQUE CLAIM IDENTIFIER UTILIT
"KRN",19,14348,-1)
0^5
"KRN",19,14348,0)
FB UCID PAYMENT RPT^FB OUTPATIENT UCID REPORT^^I^^^^^^^^FEE BASIS
"KRN",19,14348,10.1)
Outpatient UCID report
"KRN",19,14348,30)
FBAAC(
"KRN",19,14348,31)
AEMQ
"KRN",19,14348,63)
[FB UCID PAYMENT]
"KRN",19,14348,80)
FBAAC(
"KRN",19,14348,"U")
FB OUTPATIENT UCID REPORT
"MBREQ")
0
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",344,-1)
1^1
"PKG",344,0)
FEE BASIS^FB^Used to pay private vendors
"PKG",344,20,0)
^9.402P^1^1
"PKG",344,20,1,0)
2^^FBPMRG
"PKG",344,20,1,1)

"PKG",344,20,"B",2,1)

"PKG",344,22,0)
^9.49I^1^1
"PKG",344,22,1,0)
3.5^2950130^2950329
"PKG",344,22,1,"PAH",1,0)
135^3120919^10000000046
"PKG",344,22,1,"PAH",1,1,0)
^^3^3^3120919
"PKG",344,22,1,"PAH",1,1,1,0)
FIRST BUILD OF FEE BASIS v3.5 PATCH 135  being created for phase two of 
"PKG",344,22,1,"PAH",1,1,2,0)
the VistA 5010 Fee Basis project. This build only contains data 
"PKG",344,22,1,"PAH",1,1,3,0)
dictionary updates
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
14
"RTN","FBAACO")
0^12^B30906889^B29088561
"RTN","FBAACO",1,0)
FBAACO ;AISC/GRR-ENTER MEDICAL PAYMENT ;7/13/2003
"RTN","FBAACO",2,0)
 ;;3.5;FEE BASIS;**4,61,79,116,122,133,108,135**;JAN 30, 1995;Build 3
"RTN","FBAACO",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAACO",4,0)
EN583 ;driver for opt payments (entry point for uc)
"RTN","FBAACO",5,0)
 K FBAAOUT,FBPOP
"RTN","FBAACO",6,0)
 D SITE G Q:$G(FBPOP) D BT G Q:$G(FBAAOUT)
"RTN","FBAACO",7,0)
1 K FBAAID,FBAAVID,FBAAOUT,FBDL,FBAAMM D SITE G Q:$G(FBPOP) S FBINTOT=0 W !!
"RTN","FBAACO",8,0)
 I '$D(FB583) K FBDL,FBAR D GETVET^FBAAUTL1 G EN583:'DFN K FBAAOUT,FBDMRA D GETAUTH^FBAAUTL1 G 1:FTP']""
"RTN","FBAACO",9,0)
 K FBAAOUT
"RTN","FBAACO",10,0)
 I $G(FBCHCO) S FB7078=$S($G(FB7078):FB7078_";FB7078(",$D(FB583):FB583_";FB583(",1:"")
"RTN","FBAACO",11,0)
 D:FBAAPTC="R" ^FBAACO0
"RTN","FBAACO",12,0)
 D ^FBAAEAR:$P(FBSITE(1),"^",4)="Y"
"RTN","FBAACO",13,0)
 D PAT,GETVEN1^FBAACO1:$D(FB583),GETVEN^FBAACO1:'$D(FB583) I $G(FBAAOUT) G Q:$D(FB583),1
"RTN","FBAACO",14,0)
 W !! D FILEV^FBAACO5(DFN,FBV) I $G(FBAAOUT) G Q:$D(FB583),1
"RTN","FBAACO",15,0)
 ;check for payments against all linked vendors
"RTN","FBAACO",16,0)
 S DA=+Y D CHK^FBAACO4 K FBAACK1,FBAAOUT,DA,X,Y
"RTN","FBAACO",17,0)
 K FBAAID,FBAAVID D GETINV^FBAACO1 I $G(FBAAOUT) Q:$D(FBCHCO)  G Q:$D(FB583),1
"RTN","FBAACO",18,0)
 I '$D(FBAAID)!('$D(FBAAVID)) D GETINDT^FBAACO1 I $G(FBAAOUT) D OUT G Q:$D(FB583),1:'$D(FBCHCO) Q
"RTN","FBAACO",19,0)
 ; ask patient account number
"RTN","FBAACO",20,0)
 S FBCSID=$$ASKPAN^FBUTL5() I FBCSID="^" K FBCSID S FBAAOUT=1 D OUT G Q:$D(FB583),1:'$D(FBCHCO) Q
"RTN","FBAACO",21,0)
 ; if U/C then get FPPS Claim ID else ask user
"RTN","FBAACO",22,0)
 I $D(FB583) S FBFPPSC=$P($G(^FB583(FB583,5)),U) W !,"FPPS CLAIM ID: ",$S(FBFPPSC="":"N/A",1:FBFPPSC)
"RTN","FBAACO",23,0)
 E  S FBFPPSC=$$FPPSC^FBUTL5() I FBFPPSC=-1 K FBFPPSC S FBAAOUT=1 D OUT G Q:$D(FB583),1:'$D(FBCHCO) Q
"RTN","FBAACO",24,0)
 ;
"RTN","FBAACO",25,0)
 S FBUCI135=$$ENTROUTP^FBUTL136(DFN,FBV,FBAAVID,FBFPPSC)                   ; Enter UCID FB3.5*135
"RTN","FBAACO",26,0)
 I FBUCI135<1 K FBFPPSC S FBAAOUT=1 D OUT G Q:$D(FB583),1:'$D(FBCHCO) Q    ; Enter UCID FB3.5*135
"RTN","FBAACO",27,0)
 ;
"RTN","FBAACO",28,0)
 G 1^FBAAMP:$G(FBMP) D MM G Q:$G(FBAAOUT)
"RTN","FBAACO",29,0)
SVDT K FBAAOUT,HOLDY W !! D GETSVDT^FBAACO5(DFN,FBV,FBASSOC,1) I $G(FBAAOUT) K FBAADT,FBX,FBAACP W:FBINTOT>0 !!,"Invoice: "_FBAAIN_" Totals $ "_$J(FBINTOT,1,2) G Q:$D(FB583)!($G(FBCHCO)),1
"RTN","FBAACO",30,0)
 D SETO^FBAACO3,DISPINV^FBAACO1
"RTN","FBAACO",31,0)
 W ! D ASKZIP^FBAAFS($G(FBV),$G(FBAADT))
"RTN","FBAACO",32,0)
 I $G(FBAAOUT)!(FBZIP']"") D DEL^FBAACO3 G SVDT
"RTN","FBAACO",33,0)
CPT K FBAAOUT W !
"RTN","FBAACO",34,0)
 D CPTM^FBAALU($G(FBAADT),$G(DFN)) I 'FBGOT D DEL^FBAACO3 G SVDT
"RTN","FBAACO",35,0)
 D CHK2^FBAACO4 I FBJ']"" G SVPR
"RTN","FBAACO",36,0)
CHKE ;determines what action to take on duplicate services entered
"RTN","FBAACO",37,0)
 K FBAAOUT W !!,*7,"Service selected for that date already in system."
"RTN","FBAACO",38,0)
 S DIR(0)="Y",DIR("A")="Do you want to add another service for the SAME DATE",DIR("B")="No" D ^DIR K DIR G Q:$D(DIRUT),SVPR:Y
"RTN","FBAACO",39,0)
 I FBJ]"",FBJ'=FBV W !!,*7,"You must use the 'EDIT PAYMENT' option to edit the service previously",!,"entered for that date." D DEL^FBAACO3 G SVDT
"RTN","FBAACO",40,0)
 S DIR(0)="Y",DIR("A")="Want to edit it",DIR("B")="No" D ^DIR K DIR G Q:$D(DIRUT) I Y D DOEDIT^FBAACO3 G SVDT:'$D(FBDL)!($G(FBAAOUT)),Q:$D(FB583),1
"RTN","FBAACO",41,0)
 D ^FBAACO2 G CPT:'$G(FBDEN)
"RTN","FBAACO",42,0)
SVPR K FBAAOUT
"RTN","FBAACO",43,0)
 I $$ANES^FBAAFS($$CPT^FBAAUTL4($G(FBAACP))) D ASKTIME^FBAAFS I $G(FBAAOUT)!'$G(FBTIME) G CPT
"RTN","FBAACO",44,0)
 D SVCPR^FBAACO1 G CPT:$G(FBAAOUT)
"RTN","FBAACO",45,0)
 S FBAMTPD=0 D FILE^FBAACO2 I $D(FBAAOUT) G Q:$D(FB583),1:$D(FBDL),Q ;FB*3.5*133 removed provider field save
"RTN","FBAACO",46,0)
 D OUT^FBAACO3 W:Z1>(FBAAMPI-20) !,*7,"Warning, you can only enter ",(FBAAMPI-Z1)," more line(s)!" G CPT:Z1'>(FBAAMPI-1) D WARN^FBAACO3 G EN583
"RTN","FBAACO",47,0)
 G 1
"RTN","FBAACO",48,0)
 ;
"RTN","FBAACO",49,0)
Q ;exit point for outpatient payment routines
"RTN","FBAACO",50,0)
 K FBAAPTC,DIC,Y,A,I,DFN,BO,DA,DI,DQ,DR,E,FBAABDT,FBAABE,FBFY,FBDL,FBAAID,FBAAIN,FBAAMPI,FBAAOPA,FBAAPN,FBCONT,FBDX,FBGOT,FBPOV,FBPT,DLAYGO,FBPSA,FBASSOC,FBZBN,FBZBS,FBDEN,FBV,FBSDI,FBAACPI,FBAACP,FBX,FBLOCK
"RTN","FBAACO",51,0)
 K FBSP,FBTPD,FBTT,FBTYPE,FTP,FBDEL,FY,FBINTOT,G,H,MAJN,NO,PI,Q,R,SUB,SUBN,TA,TP,UL,W,X1,Z,Z1,ZZ,FBAADT,K,L,J,FBTOV,FBPARCD,FBT,FEEO,Z2,FBSITE,FBAUT,T,FBLOC,FBSSN,FBVEN,FBD1,Z0,FB583
"RTN","FBAACO",52,0)
 K A1,A2,B1,B2,DAT,DIE,FBAACPT,FBAMTPD,FBAAEDT,FBAAOUT,FBAAPD,FBI,FBIN,FBPROG,FBRR,FBXX,PTYPE,S,VAL,X,V,ZS,FB7078,FBFDC,FBCOUNTY,FBMST,FBTTYPE,FBTV,HY,FBDMRA,DIRUT,FBPOP,FBJ,FBAACK1,FBAR,FBDA,FBST
"RTN","FBAACO",53,0)
 K FBMP,FBK,FBAAAS,%DT,FBDT,FBMAX,FBAMFS,FBAASC,FBHCFA,FBSI,FBCNP,FBAAAMT,FBAAVID,FBAAMM,FBAAMM1,VAPA,FBZX,FBTST,HOLDY,FBAOT
"RTN","FBAACO",54,0)
 K FBCSID,FBFPPSC,FBFPPSL,FBADJ,FBADJD,FBADJL,FBRRMK,FBRRMKD,FBRRMKL,FBUNITS,FBCNTRP,FBUCI135
"RTN","FBAACO",55,0)
AUTHQ K DIC,DFN,CNT,FB7078,FBAABDT,FBAAEDT,FBAAOUT,FBASSOC,FBAUT,FBPOV,FBPROG,FBPSA,FBPT,FBTT,FBTYPE,FBVEN,FBTP,PI,TA,FBMOD,FBMODA,FBZIP,FBTIME,FBFSAMT,FBFSUSD
"RTN","FBAACO",56,0)
 D GETAUTHK^FBAAUTL1
"RTN","FBAACO",57,0)
 Q
"RTN","FBAACO",58,0)
 ;
"RTN","FBAACO",59,0)
SITE ;set up site variables
"RTN","FBAACO",60,0)
 D:'$D(FBSITE(0)) SITEP^FBAAUTL Q:$G(FBPOP)  I '$G(FBPROG) D
"RTN","FBAACO",61,0)
 .I $G(FBCHCO) S FBPROG="I ($P(^(0),""^"",3)=6!($P(^(0),""^"",3)=7))&($P(^(0),U,9)'[""FB583"")" Q
"RTN","FBAACO",62,0)
 .S FBPROG=$S($P(FBSITE(1),"^",6)="":"I $P(^(0),""^"",9)'[""FB583""",1:"I $P(^(0),""^"",3)=2,($P(^(0),""^"",9)'[""FB583"")")
"RTN","FBAACO",63,0)
 S:'$D(FBAAPTC) FBAAPTC="V"
"RTN","FBAACO",64,0)
 S FBAAMPI=$P($G(^FBAA(161.4,1,"FBNUM")),"^",3),FBAAMPI=$S(FBAAMPI]"":FBAAMPI,1:100)
"RTN","FBAACO",65,0)
 Q
"RTN","FBAACO",66,0)
 ;
"RTN","FBAACO",67,0)
BT ;select batch
"RTN","FBAACO",68,0)
 S DIC="^FBAA(161.7,",DIC(0)="AEQM",DIC("S")="I $P(^(0),U,3)=""B3""&($G(^(""ST""))=""O"")&(($P(^(0),U,5)=DUZ)!($D(^XUSEC(""FBAASUPERVISOR"",DUZ))))",DIC("W")="W !,""  Obligation #: "",$P(^(0),U,2)" W !! D ^DIC K DIC I X["^"!(X="") S FBAAOUT=1 Q
"RTN","FBAACO",69,0)
 G BT:Y<0 S (DA,FBAABE)=+Y,Y(0)=^FBAA(161.7,DA,0)
"RTN","FBAACO",70,0)
 I $P(Y(0),"^",11)>(FBAAMPI-1) W !!,"This Batch already has the maximum number of Payments!" G BT
"RTN","FBAACO",71,0)
 S Z1=$P(Y(0),"^",11),FB7078="",BO=$P(^FBAA(161.7,DA,0),"^",2)
"RTN","FBAACO",72,0)
 Q
"RTN","FBAACO",73,0)
PAT ;set up patient in patient file
"RTN","FBAACO",74,0)
 ;required input variable DFN
"RTN","FBAACO",75,0)
 I '$D(^FBAAC(DFN,0)) K DD,DO S (X,DINUM)=DFN,DIC(0)="L",DLAYGO=162,DIC="^FBAAC(" D FILE^DICN K DLAYGO,DIC,DINUM,DD,DO,DA
"RTN","FBAACO",76,0)
 Q
"RTN","FBAACO",77,0)
MM ;check for money management of entire invoice
"RTN","FBAACO",78,0)
 ; fb*3.5*116
"RTN","FBAACO",79,0)
 ;I FBAAPTC="R" S FBAAMM="" Q
"RTN","FBAACO",80,0)
 ;W ! S DIR(0)="Y",DIR("A")="Will any line items in this invoice be for contracted services",DIR("B")="No",DIR("?")="Answering no indicates interest will not be paid for any line items." D ^DIR K DIR I $D(DIRUT) S FBAAOUT=1 Q
"RTN","FBAACO",81,0)
 ;S FBAAMM=$S(Y=1:1,1:"")
"RTN","FBAACO",82,0)
 D MMPPT^FBAACP
"RTN","FBAACO",83,0)
 Q
"RTN","FBAACO",84,0)
OUT K FBAADT,FBX,FBAACP W:FBINTOT>0 !!,"Invoice: "_FBAAIN_" Totals $ "_$J(FBINTOT,1,2) Q
"RTN","FBAACO2")
0^13^B14623021^B14357578
"RTN","FBAACO2",1,0)
FBAACO2 ;AISC/GRR-PAYMENT PROCESS FOR DUPLICATE ;7/13/2003
"RTN","FBAACO2",2,0)
 ;;3.5;FEE BASIS;**4,55,61,77,116,122,133,108,135**;JAN 30, 1995;Build 3
"RTN","FBAACO2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAACO2",4,0)
RD S DIR(0)="Y",DIR("A")="Want this payment stored as a Medical Denial",DIR("B")="YES",DIR("?")="Enter 'Yes' to store payment entry as a denial and send a Suspension letter.  Enter 'No' to have nothing happen." D ^DIR K DIR Q:$D(DIRUT)!('Y)
"RTN","FBAACO2",5,0)
 S FBDEN=1 Q
"RTN","FBAACO2",6,0)
FILE ;files sp multiple entry
"RTN","FBAACO2",7,0)
 K DR S TP="" I $G(FBDEN) S FBAMTPD=0
"RTN","FBAACO2",8,0)
 S DR="49///^S X=$G(FBCSID);50///^S X=$G(FBFPPSC);81///^S X=$G(FBUCI135);I $G(FBDEN) S Y=1;48;47//1;S FBUNITS=X;S:$G(FBFPPSC)="""" Y=""@11"";S FBX=$$FPPSL^FBUTL5();S:FBX=-1 Y=0;51///^S X=FBX;@11"
"RTN","FBAACO2",9,0)
 ; fb*3.5*116 do not enable different interest indicator values at line item level; interest indicator set at invoice level
"RTN","FBAACO2",10,0)
 ;S DR(1,162.03,1)="D PPT^FBAACO1();34///^S X=$G(FBAAMM1);D POS^FBAACO1;S:'$G(FBHCFA(30)) Y=0;1;S J=X;I $G(FBDEN) S Y=2;D FEE^FBAACO0;44////^S X=FBFSAMT;45///^S X=FBFSUSD;2///^S X=FBAMTPD;S K=X"
"RTN","FBAACO2",11,0)
 S DR(1,162.03,1)="34///^S X=$G(FBAAMM);D POS^FBAACO1;S:'$G(FBHCFA(30)) Y=0;1;S J=X;I $G(FBDEN) S Y=2;D FEE^FBAACO0;44////^S X=FBFSAMT;45///^S X=FBFSUSD;2///^S X=FBAMTPD;S K=X"
"RTN","FBAACO2",12,0)
 ;S DR(1,162.03,2)="S:J-K=0 Y=6;3//^S X=$S(J-K:J-K,1:"""");S:'X Y=6;3.5///^S X=DT;@4;4;I X']"""" D SC^FBAACO3;S:X'=4 Y=6;22;6////^S X=DUZ"
"RTN","FBAACO2",13,0)
 S DR(1,162.03,2)="S FBX=$$ADJ^FBUTL2(J-K,.FBADJ,2);S:FBX=0 Y=0;6////^S X=DUZ"
"RTN","FBAACO2",14,0)
 S DR(1,162.03,3)="7////^S X=FBAABE;8////^S X=BO;13///^S X=FBAAID;14///^S X=FBAAIN;33///^S X=FBAAVID;I $G(FBDEN) S FBTST=1"
"RTN","FBAACO2",15,0)
 I '$G(FBDEN) D
"RTN","FBAACO2",16,0)
 .N FBCSVSTR S FBCSVSTR="I X]"""" S:$$INPICD9^FBCSV1(X,"""",$G(FBAADT)) Y=""@1"";"
"RTN","FBAACO2",17,0)
 .S DR(1,162.03,4)="S:$$EXTPV^FBAAUTL5(FBPOV)=""01"" Y=""@1"";S:FB7078]""""!($D(FB583)) Y=30;@5;28R;S:$$INPICD9^FBCSV1(X,"""",$G(FBAADT)) Y=""@5"";30////^S X=FBHCFA(30);31;32R;S Y=15;@1;28;"_FBCSVSTR_"30////^S X=FBHCFA(30);31"
"RTN","FBAACO2",18,0)
 .S DR(1,162.03,5)="15///^S X=FBPT;S FBX=$$RR^FBUTL4(.FBRRMK,2);S:FBX=0 Y=0"
"RTN","FBAACO2",19,0)
 .S DR(1,162.03,6)="16////^S X=FBPOV;17///^S X=FBTT;18///^S X=FBAAPTC;23////^S X=FBTYPE;26////^S X=FBPSA;S:$D(FBV583) Y=""@2"";27////^S X=FB7078;S Y=""@99"";@2;27////^S X=FBV583;@99;S FBTST=1;54////^S X=FBCNTRP"
"RTN","FBAACO2",20,0)
 .S DR(1,162.03,7)="73;74;75;58;59;60;61;62;63;64;65;66;67;76;77;78;79;68;69" ;FB*3.5*122 Line Item Provider information ;FB*3.5*133 Provider Information
"RTN","FBAACO2",21,0)
 S DIE="^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,"
"RTN","FBAACO2",22,0)
 S DA(3)=DFN,DA(2)=FBV,DA(1)=FBSDI,DA=FBAACPI
"RTN","FBAACO2",23,0)
 D LOCK^FBUCUTL("^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,",FBAACPI,1)
"RTN","FBAACO2",24,0)
 D
"RTN","FBAACO2",25,0)
 . N ICDVDT S ICDVDT=$G(FBAADT) D ^DIE
"RTN","FBAACO2",26,0)
 I '$D(DTOUT),$G(FBTST) D
"RTN","FBAACO2",27,0)
 . D FILEADJ^FBAAFA(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBADJ)
"RTN","FBAACO2",28,0)
 . D FILERR^FBAAFR(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBRRMK)
"RTN","FBAACO2",29,0)
 L -^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI)
"RTN","FBAACO2",30,0)
 I $D(DTOUT) D KILL Q
"RTN","FBAACO2",31,0)
 I '$G(FBTST),$G(DA) S DIR(0)="YA",DIR("A")="Entering an '^' will delete "_$S($G(FBDEN):"denial",1:"payment")_".  Are you sure you want to delete? ",DIR("B")="No" D ^DIR K DIR G FILE:'$D(DIRUT)&('Y) D KILL Q
"RTN","FBAACO2",32,0)
 K FBTST,FBDEN,DIE,DR,DA,FBX
"RTN","FBAACO2",33,0)
 I $D(FBDL) S FBAAOUT=1 Q
"RTN","FBAACO2",34,0)
 Q
"RTN","FBAACO2",35,0)
KILL S DIK=DIE D ^DIK K DIE,DIK I '$G(FBCNP) D Q^FBAACO S FBAAOUT=1
"RTN","FBAACO2",36,0)
 W !,"Deleted" Q
"RTN","FBAAPIN")
0^1^B36889806^B34775282
"RTN","FBAAPIN",1,0)
FBAAPIN ;AISC/GRR-INVOICE DISPLAY ;7/17/2003
"RTN","FBAAPIN",2,0)
 ;;3.5;FEE BASIS;**4,61,122,133,108,135**;JAN 30, 1995;Build 3
"RTN","FBAAPIN",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAPIN",4,0)
 D DT^DICRW
"RTN","FBAAPIN",5,0)
RD1 W ! S (FBHDONE,FBAAOUT,FBINTOT)=0,FBSW=0 K FBHED S DIR(0)="NO",DIR("A")="Select Invoice Number",DIR("?")="^D HELP^FBAAPIN1" D ^DIR K DIR G Q:$D(DIRUT)!'Y
"RTN","FBAAPIN",6,0)
 I '$D(^FBAAC("C",X)) W !,*7,"Invalid selection.",! G RD1
"RTN","FBAAPIN",7,0)
 S HX=X,FBAAIN=X D LIST S X=HX G RD1
"RTN","FBAAPIN",8,0)
LIST S Q="",$P(Q,"=",80)="="
"RTN","FBAAPIN",9,0)
 S IOP=$S($D(ION):ION,1:"HOME") D ^%ZIS K IOP
"RTN","FBAAPIN",10,0)
 F J=0:0 S J=$O(^FBAAC("C",FBAAIN,J)) Q:J'>0!(FBAAOUT)  D MMORE
"RTN","FBAAPIN",11,0)
 Q
"RTN","FBAAPIN",12,0)
SET S FBFILE="^FBAAC("_J_",1,"_K_",1,"_L_",1,"_M_",1,",D=$P($G(^FBAAC(J,1,K,1,L,0)),"^",1),FBYY=$G(^FBAAC(J,1,K,1,L,1,M,0)),FBYY("REJ")=$S($D(^FBAAC(J,1,K,1,L,1,M,"FBREJ")):^("FBREJ"),1:""),FBY=$G(^FBAAC(J,1,K,1,L,1,M,2))
"RTN","FBAAPIN",13,0)
 S FBY3=$G(^FBAAC(J,1,K,1,L,1,M,3))
"RTN","FBAAPIN",14,0)
 S FBAARCE=$$GET1^DIQ(162.03,M_","_L_","_K_","_J_",",48)
"RTN","FBAAPIN",15,0)
 D SET2
"RTN","FBAAPIN",16,0)
 Q
"RTN","FBAAPIN",17,0)
SET2 ;
"RTN","FBAAPIN",18,0)
 N FBX
"RTN","FBAAPIN",19,0)
 S N=$S($D(^DPT(J,0)):$P(^(0),"^",1),1:""),S=$S(N]"":$P(^DPT(J,0),"^",9),1:""),V=$S($D(^FBAAV(K,0)):$P(^FBAAV(K,0),"^",1),1:"")
"RTN","FBAAPIN",20,0)
 S T=$P(FBYY,"^",5),D2=$P(FBYY,"^",6),ZS=$P(FBYY,"^",20),VP=$P(FBYY,"^",21)
"RTN","FBAAPIN",21,0)
 S T=$P($G(^FBAA(161.27,+T,0)),U)
"RTN","FBAAPIN",22,0)
 S TAMT=$FN($P(FBYY,U,4),"",2)
"RTN","FBAAPIN",23,0)
 S FBAACPT=$P(FBYY,"^",1) I FBAACPT]"" S FBAACPT=$$CPT^FBAAUTL4(FBAACPT)
"RTN","FBAAPIN",24,0)
 S FBMODLE=$$MODL^FBAAUTL4("^FBAAC("_J_",1,"_K_",1,"_L_",1,"_M_",""M"")","E")
"RTN","FBAAPIN",25,0)
 S FBUNITS=$P(FBY,U,14)
"RTN","FBAAPIN",26,0)
 S FBFPPSL=$P(FBY3,U,2)
"RTN","FBAAPIN",27,0)
 S FBX=$$ADJLRA^FBAAFA(M_","_L_","_K_","_J_",")
"RTN","FBAAPIN",28,0)
 S FBADJLR=$P(FBX,U)
"RTN","FBAAPIN",29,0)
 S FBADJLA=$P(FBX,U,2)
"RTN","FBAAPIN",30,0)
 S FBRRMKL=$$RRL^FBAAFR(M_","_L_","_K_","_J_",")
"RTN","FBAAPIN",31,0)
 S FBCNTRN=$S($P(FBY3,U,8):$P($G(^FBAA(161.43,$P(FBY3,U,8),0)),U),1:"")
"RTN","FBAAPIN",32,0)
 S A1=$P(FBYY,"^",2)+.0001,A2=$P(FBYY,"^",3)+.0001,A3=$P(FBYY,"^",12)+.0001,A1=$P(A1,".",1)_"."_$E($P(A1,".",2),1,2),A2=$P(A2,".",1)_"."_$E($P(A2,".",2),1,2),A3=$P(A3,".",1)_"."_$E($P(A3,".",2),1,2),FBINTOT=FBINTOT+A2+.0001
"RTN","FBAAPIN",33,0)
 S FBINTOT=$P(FBINTOT,".")_"."_$E($P(FBINTOT,".",2),1,2)
"RTN","FBAAPIN",34,0)
 S FBBN=$S($P(FBYY,"^",8)]"":$S($D(^FBAA(161.7,$P(FBYY,"^",8),0)):$P(^(0),"^",1),1:""),$P(FBYY("REJ"),"^",3)]"":$S($D(^FBAA(161.7,$P(FBYY("REJ"),"^",3),0)):$P(^(0),"^",1),1:""),1:"")
"RTN","FBAAPIN",35,0)
 D FBCKO^FBAACCB2(J,K,L,M)
"RTN","FBAAPIN",36,0)
 I $D(^FBAAC(J,1,K,1,L,1,M,4))!($D(^FBAAC(J,1,K,1,L,1,M,5))) D PROV
"RTN","FBAAPIN",37,0)
 I '$D(FBHED) D HED
"RTN","FBAAPIN",38,0)
 D WRT S FBHED=1
"RTN","FBAAPIN",39,0)
 Q
"RTN","FBAAPIN",40,0)
WRT I ($Y+5)>IOSL S DIR(0)="E" D ^DIR K DIR S:'Y FBAAOUT=1 Q:FBAAOUT  D HED
"RTN","FBAAPIN",41,0)
 W !!,N,?33,$$DATX^FBAAUTL(D),?43,FBAACPT_$S($G(FBMODLE)]"":"-"_$P(FBMODLE,","),1:"")
"RTN","FBAAPIN",42,0)
 I FBAARCE]"" W ?51,"/",FBAARCE
"RTN","FBAAPIN",43,0)
 W ?57,FBBN,?67,$S(FBYY("REJ")]"":"Rejected",1:$$DATX^FBAAUTL(D2))
"RTN","FBAAPIN",44,0)
 I $P($G(FBMODLE),",",2)]"" D  Q:FBAAOUT
"RTN","FBAAPIN",45,0)
 . N FBI
"RTN","FBAAPIN",46,0)
 . F FBI=2:1 S FBMOD=$P(FBMODLE,",",FBI) Q:FBMOD=""  D  Q:FBAAOUT
"RTN","FBAAPIN",47,0)
 . . I $Y+5>IOSL D  Q:FBAAOUT  W !,"(continued)"
"RTN","FBAAPIN",48,0)
 . . . S DIR(0)="E" D ^DIR K DIR S:'Y FBAAOUT=1 Q:FBAAOUT  D HED
"RTN","FBAAPIN",49,0)
 . . W !,?48,"-",FBMOD
"RTN","FBAAPIN",50,0)
 W !,$S(ZS="R":"*",1:""),$S(VP="VP":"#",1:""),$S($G(FBCAN)]"":"+",1:"")
"RTN","FBAAPIN",51,0)
 W ?3,FBFPPSL,?14,"$",$J(A1,8),?26,"$",$J(A2,8),?37,FBUNITS
"RTN","FBAAPIN",52,0)
 ; write adjustment reasons, if null then write suspend code
"RTN","FBAAPIN",53,0)
 W ?43,$S(FBADJLR]"":FBADJLR,1:T)
"RTN","FBAAPIN",54,0)
 ; write adjustment amounts, if null then write amount suspended
"RTN","FBAAPIN",55,0)
 W ?53,"$",$S(FBADJLA]"":FBADJLA,1:TAMT)
"RTN","FBAAPIN",56,0)
 W ?69,FBRRMKL
"RTN","FBAAPIN",57,0)
 ; if adjustment reasons null and suspend code = other then write desc.
"RTN","FBAAPIN",58,0)
 I FBADJLR="",T=4 D ^FBAAPIN1
"RTN","FBAAPIN",59,0)
 I FBCNTRN]"" W !!,?2,"Contract Number: ",FBCNTRN
"RTN","FBAAPIN",60,0)
 D PMNT^FBAACCB2
"RTN","FBAAPIN",61,0)
 ; Display LI Rendering Provider data
"RTN","FBAAPIN",62,0)
 N FBLIPRV S FBLIPRV=$G(^FBAAC(J,1,K,1,L,1,M,3))  ; FB*3.5*135
"RTN","FBAAPIN",63,0)
 I $L($P(FBLIPRV,U,3)) D
"RTN","FBAAPIN",64,0)
 . W !?3,"RENDERING PROV NAME (LI): "_$P(FBLIPRV,U,3)
"RTN","FBAAPIN",65,0)
 . I $L($P(FBLIPRV,U,4,5))>1 W !?7,"NPI: "_$P(FBLIPRV,U,4),?29,"TAXONOMY CODE: "_$P(FBLIPRV,U,5)
"RTN","FBAAPIN",66,0)
 Q
"RTN","FBAAPIN",67,0)
HED W @IOF,!,"Invoice Number: ",FBAAIN,?30,"Vendor Name: ",V,!,?2,"Date Received: ",FBINDAT
"RTN","FBAAPIN",68,0)
 I +$G(FBY) W ?33,"Invoice Date: ",$$DATX^FBAAUTL(+FBY)
"RTN","FBAAPIN",69,0)
 W !?2,"FPPS Claim ID: ",$S(FBFPPSC]"":FBFPPSC,1:"N/A")
"RTN","FBAAPIN",70,0)
 W ?33,"Patient Account #: ",FBCSID
"RTN","FBAAPIN",71,0)
 W !?10,"('*' Reimb. to Patient  '+' Cancel. Activity  '#' Voided Payment)"
"RTN","FBAAPIN",72,0)
 ;W !,"SVC DATE"," CPT-MOD ","   AMT CLAIMED",?35,"AMT PAID",?47,"CODE",?57,"BATCH NO.",?67,"VOUCHER DATE",!,?5,"Other Suspension Description",!,$$REPEAT^XLFSTR("=",79),!
"RTN","FBAAPIN",73,0)
 W !,"PATIENT",?33,"SVC DATE",?43,"CPT-MOD",?51,"/REV",?57,"BATCH NO.",?67,"VOUCHER DATE"
"RTN","FBAAPIN",74,0)
 W !,?3,"FPPS LINE",?14,"AMT CLAIMED",?26,"AMT PAID",?36,"UNITS",?43,"ADJ CODE",?53,"ADJ AMT",?69,"REMIT RMK"
"RTN","FBAAPIN",75,0)
 W !,$$REPEAT^XLFSTR("=",79)
"RTN","FBAAPIN",76,0)
 Q
"RTN","FBAAPIN",77,0)
Q K D,N,V,D2,J,K,L,M,DIC,T,FBYY,Q,I,A1,A2,A3,C,DIYS,FBAACPT,FBAAIN,FBAAOUT,FBBN,FBINTOT,FBINDAT,FBSW,FBHDONE,HX,S,VP,Z,ZS,FBHED,FBFILE,DIRUT,FBY,FBMOD
"RTN","FBAAPIN",78,0)
 K FBMODLE
"RTN","FBAAPIN",79,0)
 K FBAARCE,FBADJLA,FBADJLR,FBCSID,FBFPPSC,FBFPPSL,FBRRMKL,FBUNITS,TAMT
"RTN","FBAAPIN",80,0)
 Q
"RTN","FBAAPIN",81,0)
ERR W !,*7,"Please enter a whole number! Alpha characters and puctuation are invalid" G RD1
"RTN","FBAAPIN",82,0)
SETHD S V=$S($D(^FBAAV(K,0)):$P(^(0),"^",1),1:"") D INDAT:FBSW S FBHDONE=1 Q
"RTN","FBAAPIN",83,0)
MMORE S FBSW=1 F K=0:0 S K=$O(^FBAAC("C",FBAAIN,J,K)) Q:K=""!(FBAAOUT)  D SETHD F L=0:0 S L=$O(^FBAAC("C",FBAAIN,J,K,L)) Q:L=""!(FBAAOUT)  F M=0:0 S M=$O(^FBAAC("C",FBAAIN,J,K,L,M)) Q:M'>0  D SET Q:FBAAOUT
"RTN","FBAAPIN",84,0)
 Q
"RTN","FBAAPIN",85,0)
INDAT S L=$O(^FBAAC("C",FBAAIN,J,K,"")),M=$O(^FBAAC("C",FBAAIN,J,K,L,""))
"RTN","FBAAPIN",86,0)
 S FBINDAT=$P($G(^FBAAC(J,1,K,1,L,1,M,0)),"^",15)
"RTN","FBAAPIN",87,0)
 S FBINDAT=$S(FBINDAT="":"Unknown",1:$E(FBINDAT,4,5)_"/"_$E(FBINDAT,6,7)_"/"_$E(FBINDAT,2,3))
"RTN","FBAAPIN",88,0)
 S FBFPPSC=$P($G(^FBAAC(J,1,K,1,L,1,M,3)),U,1)
"RTN","FBAAPIN",89,0)
 S FBCSID=$P($G(^FBAAC(J,1,K,1,L,1,M,2)),U,16)
"RTN","FBAAPIN",90,0)
 S FBSW=0 K L,M Q
"RTN","FBAAPIN",91,0)
 Q
"RTN","FBAAPIN",92,0)
PROV ;Display Invoice Provider information before invoice details FB*3.5*122
"RTN","FBAAPIN",93,0)
 N FBPRI,FBSRVF S FBPRI=$G(^FBAAC(J,1,K,1,L,1,M,4)),FBSRVF=$G(^FBAAC(J,1,K,1,L,1,M,5)),$P(FBSRVF,U,3)=$$GET1^DIQ(5,$P(FBSRVF,U,3)_",",1)
"RTN","FBAAPIN",94,0)
 W @IOF,!?30,"INVOICE DISPLAY",!?30,"===============",!?28,"PROVIDER INFORMATION",!
"RTN","FBAAPIN",95,0)
 I $L($P(FBPRI,U,1,3))>3 W !?3,"ATTENDING PROV NAME: "_$P(FBPRI,U),!?3,"ATTENDING PROV NPI: "_$P(FBPRI,U,2),?35,"ATTENDING PROV TAXONOMY CODE: "_$P(FBPRI,U,3)
"RTN","FBAAPIN",96,0)
 I $L($P(FBPRI,U,4,5))>2 W !!?3,"OPERATING PROV NAME: "_$P(FBPRI,U,4),!?3,"OPERATING PROV NPI: "_$P(FBPRI,U,5)
"RTN","FBAAPIN",97,0)
 I $L($P(FBPRI,U,6,8))>3 W !!?3,"RENDERING PROV NAME: "_$P(FBPRI,U,6),!?3,"RENDERING PROV NPI: "_$P(FBPRI,U,7),?35,"RENDERING PROV TAXONOMY CODE: "_$P(FBPRI,U,8)
"RTN","FBAAPIN",98,0)
 I $L($P(FBPRI,U,9,10))>2 W !!?3,"SERVICING PROV NAME: "_$P(FBPRI,U,9),!?3,"SERVICING PROV NPI: "_$P(FBPRI,U,10)
"RTN","FBAAPIN",99,0)
 I $L($P(FBSRVF,U,1,4))>4 W !?3,"SERVICING FACILITY ADDRESS: ",!?5,$P(FBSRVF,U),!?5,$P(FBSRVF,U,2) I $P(FBSRVF,U,2)'="" W ", "
"RTN","FBAAPIN",100,0)
 W $P(FBSRVF,U,3)_" "_$P(FBSRVF,U,4)
"RTN","FBAAPIN",101,0)
 I $L($P(FBPRI,U,11,12))>2 W !!?3,"REFERRING PROV NAME: "_$P(FBPRI,U,11),!?3,"REFERRING PROV NPI: "_$P(FBPRI,U,12),!!
"RTN","FBAAPIN",102,0)
 I '$D(FBHED) S DIR(0)="E" D ^DIR
"RTN","FBAAPIN",103,0)
 Q
"RTN","FBCHEP")
0^8^B34203582^B33379064
"RTN","FBCHEP",1,0)
FBCHEP ;AISC/DMK-ENTER PAYMENT FOR CONTRACT HOSPITAL ;8/18/2004
"RTN","FBCHEP",2,0)
 ;;3.5;FEE BASIS;**4,61,77,82,122,108,124,135**;JAN 30, 1995;Build 3
"RTN","FBCHEP",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBCHEP",4,0)
 S FBAAPTC="V",FBAAOUT=0
"RTN","FBCHEP",5,0)
RD K FBAAID,FBAAVID S FBRESUB="" D GETVET^FBAAUTL1 G:DFN']"" Q
"RTN","FBCHEP",6,0)
 S FBPROG="I $P(^(0),U,3)=6,($P(^(0),U,9)'[""FB583"")" D GETAUTH^FBAAUTL1 G RD:$D(DUOUT),RD:FTP']""
"RTN","FBCHEP",7,0)
 ;W !!,?25,"<  ASSOCIATED 7078  >",!!
"RTN","FBCHEP",8,0)
 ;S DIC="^FB7078(",DA=FB7078,DR="0;1" D EN^DIQ
"RTN","FBCHEP",9,0)
 I FB7078="" W !,*7,"No 7078 on file for this authorization." G RD
"RTN","FBCHEP",10,0)
 S FBI7078=FB7078_";FB7078("
"RTN","FBCHEP",11,0)
 I $D(^FBAAI("E",FBI7078)) S FBAAIN=$O(^FBAAI("E",FBI7078,0)) G OUT
"RTN","FBCHEP",12,0)
SETINV S FBZ(0)=^FB7078(FB7078,0),FBVET=$P(FBZ(0),"^",3),FBVEN=$P(FBZ(0),"^",2),FBVEN=$P(FBVEN,";",1)
"RTN","FBCHEP",13,0)
 ;
"RTN","FBCHEP",14,0)
EN583 ;Entry from 583 enter payment
"RTN","FBCHEP",15,0)
 I FBAAPTC="R" D ^FBAACO0
"RTN","FBCHEP",16,0)
 S DA=FBVEN D EN1^FBAAVD
"RTN","FBCHEP",17,0)
 I $P($G(^FBAAV(FBVEN,"ADEL")),U)="Y" W !!,*7,"Vendor is flagged for Austin deletion!" G Q
"RTN","FBCHEP",18,0)
 D SITEP^FBAAUTL G Q:FBPOP
"RTN","FBCHEP",19,0)
 S FBAAMPI=$P(FBSITE("FBNUM"),U,4)
"RTN","FBCHEP",20,0)
 ;
"RTN","FBCHEP",21,0)
RDV S FBVE="" S:$D(^FBAAV(FBVEN,"AMS")) FBVE=$P(^("AMS"),"^",2) S:$G(FBVE)'="Y" FBVE="N"
"RTN","FBCHEP",22,0)
 I FBVE="Y" W *7,!!,"Vendor is listed as 'exempt from the pricer'." S DIR(0)="Y",DIR("A")="Do you wish to keep this invoice exempt from the pricer",DIR("B")="Yes" D ^DIR K DIR G Q:$D(DIRUT) S FBVE=$S(Y=1:"Y",1:"N")
"RTN","FBCHEP",23,0)
 I $G(FBVE)'="Y",($P($G(^FBAAV(FBVEN,0)),"^",17)']"") W !!,*7,"Medicare ID Number is needed for this Vendor!" S DIE="^FBAAV(",DR=22 D ^DIE K DIE G Q:$D(DTOUT)!('$L(X))
"RTN","FBCHEP",24,0)
 ;
"RTN","FBCHEP",25,0)
BAT S DIC="^FBAA(161.7,",DIC(0)="AEQMZ",DIC("S")="I $P(^(0),U,3)=""B9""&($P(^(0),U,5)=DUZ)&($P(^(0),U,15)=""Y"")&($G(^(""ST""))=""O"")&(FBAAMPI>$P(^(0),U,10))" W ! D ^DIC K DIC
"RTN","FBCHEP",26,0)
 G Q:X="^"!(X=""),BAT:Y<0 S FBAABE=+Y,FBY(0)=Y(0),Z1=$P(FBY(0),"^",11),BO=$P(FBY(0),"^",2),Z2=$P(FBY(0),"^",10),FBSTN=$P(FBY(0),"^",8),FBCHOB=FBSTN_"-"_$P(FBY(0),"^",2),FBEXMPT=$P(FBY(0),"^",18) S FBAAOUT=0 D CHK I FBAAOUT K Y,Y(0),FBAABE G BAT
"RTN","FBCHEP",27,0)
 I FBI7078["FB7078(",BO'=$P($P(FBZ(0),U),".") W !,*7,"Obligation number on batch does not match 1358.",!,"Obligation number on batch must be ",$P($P(FBZ(0),U),"."),".",! G BAT
"RTN","FBCHEP",28,0)
 S FBINC=$S($P(FBY(0),"^",10)="":0,1:$P(FBY(0),"^",10)),FBLN=$S($P(FBY(0),"^",11)="":0,1:$P(FBY(0),"^",11))
"RTN","FBCHEP",29,0)
GETNXI D GETNXI^FBAAUTL
"RTN","FBCHEP",30,0)
 W !!,"Invoice # ",FBAAIN," assigned to this Invoice"
"RTN","FBCHEP",31,0)
RIN S CALLERID="FBCHEP" D GETINDT^FBAACO1 K CALLERID G Q:$G(FBAAOUT)
"RTN","FBCHEP",32,0)
 ; ask patient control number
"RTN","FBCHEP",33,0)
 S FBCSID=$$ASKPCN^FBUTL5() I FBCSID="^" G Q
"RTN","FBCHEP",34,0)
 ; if U/C then get FPPS Claim ID else ask user
"RTN","FBCHEP",35,0)
 I $D(FB583) S FBFPPSC=$P($G(^FB583(FB583,5)),U) W !,"FPPS CLAIM ID: ",$S(FBFPPSC="":"N/A",1:FBFPPSC)
"RTN","FBCHEP",36,0)
 E  S FBFPPSC=$$FPPSC^FBUTL5() I FBFPPSC=-1 G Q
"RTN","FBCHEP",37,0)
 ; Get Unique Claim ID  ; FB*3.5*135
"RTN","FBCHEP",38,0)
 S FBUCI135=$$ENTINPAT^FBUTL136($G(FBSTN),1,,"I",$G(FBFPPSC),$G(FBVEN)) I FBUCI135<1 G Q
"RTN","FBCHEP",39,0)
 ; if EDI claim then ask FPPS line item
"RTN","FBCHEP",40,0)
 I FBFPPSC]"" S FBFPPSL=$$FPPSL^FBUTL5(,1) I FBFPPSL=-1 G Q
"RTN","FBCHEP",41,0)
 ; compute default Covered Days
"RTN","FBCHEP",42,0)
 S FBCDAYS=$$FMDIFF^XLFDT(FBAAEDT,FBAABDT)
"RTN","FBCHEP",43,0)
 I FBCDAYS=0 S FBCDAYS=1
"RTN","FBCHEP",44,0)
 S FBAAMM=$S(FBAAPTC="R":"",$D(FB583):"",1:1) D PPT^FBAACO1()
"RTN","FBCHEP",45,0)
DIC S DIC="^FBAAI(",DIC(0)="LQ",DLAYGO=162.5,X=FBAAIN D ^DIC G Q:Y<0
"RTN","FBCHEP",46,0)
 S DA=+Y,DIE=DIC,DR="[FBCH ENTER PAYMENT]",DIE("NO^")=""
"RTN","FBCHEP",47,0)
 D
"RTN","FBCHEP",48,0)
 . N ICDVDT S ICDVDT=$G(FBAABDT) D ^DIE
"RTN","FBCHEP",49,0)
 ; file adjustment reasons
"RTN","FBCHEP",50,0)
 D FILEADJ^FBCHFA(DA_",",.FBADJ)
"RTN","FBCHEP",51,0)
 ; file remittance remarks
"RTN","FBCHEP",52,0)
 D FILERR^FBCHFR(DA_",",.FBRRMK)
"RTN","FBCHEP",53,0)
 ; file Line Item Rendering providers
"RTN","FBCHEP",54,0)
 D FILERP^FBUTL8(DA_",",.FBPROV) ;FB*3.5*122
"RTN","FBCHEP",55,0)
 K DIE,DIC,D,DA,DR
"RTN","FBCHEP",56,0)
 S $P(FBY(0),"^",10)=FBINC+1,$P(FBY(0),"^",11)=FBLN+1,$P(FBY(0),"^",18)=FBEXMPT,^FBAA(161.7,FBAABE,0)=FBY(0) ;D:'$D(FBNOPTF) PTF G Q:$D(FB583),RD
"RTN","FBCHEP",57,0)
 D
"RTN","FBCHEP",58,0)
 . N FBX
"RTN","FBCHEP",59,0)
 . S FBX=FBAAMPI-(FBINC+1)
"RTN","FBCHEP",60,0)
 . I FBX<6 W !,$C(7),"Warning, you can only enter ",FBX," more invoices in this batch!",!
"RTN","FBCHEP",61,0)
 D:'$D(FBNOPTF) PTF
"RTN","FBCHEP",62,0)
 G Q:$D(FB583),RD
"RTN","FBCHEP",63,0)
OUT W !!,*7,?3,"Invoice number ",FBAAIN," has already been entered for this authorization.",!,?3,"Use the Contract Hospital 'Invoice Edit' option if needed.",!
"RTN","FBCHEP",64,0)
 ;check if user wants to add a second invoice for this 7078
"RTN","FBCHEP",65,0)
 W ! S DIR("A")="Want to add another invoice for this episode of care",DIR("B")="No",DIR(0)="Y" D ^DIR K DIR I Y S (FBNOPTF,FBRESUB)=1 G SETINV
"RTN","FBCHEP",66,0)
Q K BO,CNT,D,DA,DAT,DIC,DIE,DLAYGO,DR,FB7078,FBAABDT,FBAABE,FBAAEDT,FBAAID,FBAAIN,FBAAOUT,FBAAPTC,FBDX,FBTT,FBTYPE,FBVEN,FBVET,FBXX,FTP,I,J,FBK,PI,FBPOP,PTYPE,S,FBZ,Z1,FBI,FBPROG,FBRR,FBSW,FBPOV,FBPT,FBY,T,Y,Z1,Z2,ZZ,FBPSA,A,FBI7078
"RTN","FBCHEP",67,0)
 K FBCHOB,FBAUT,FBSEQ,X,FBSITE,F,FBSTN,FBASSOC,FBLOC,DUOUT,PSA,FBCOUNTY,DFN,FBNOPTF,DIRUT,FBVE,FBAAOUT,FBEXMPT,FBAAPN,FBAMTC,FBDEL,FBINC,FBLN,FBRESUB
"RTN","FBCHEP",68,0)
 K FBD1,FBFDC,FBMST,FBTTYPE,FB583,FBUCI135
"RTN","FBCHEP",69,0)
 K FBCSID,FBFPPSC,FBFPPSL,FBCDAYS,FBAMTP,FBADJ,FBRRMK,FBAAMPI,FBV
"RTN","FBCHEP",70,0)
 D GETAUTHK^FBAAUTL1
"RTN","FBCHEP",71,0)
 Q
"RTN","FBCHEP",72,0)
PTF I $G(FBVET),$G(FBI7078)["FB583" S:'$G(DFN) DFN=FBVET D PTFC^FBUTL6(DFN,$P(FBZ(0),"^",4))
"RTN","FBCHEP",73,0)
 Q
"RTN","FBCHEP",74,0)
PRBT ;Entry point for patient reimbursement option
"RTN","FBCHEP",75,0)
 ;
"RTN","FBCHEP",76,0)
 S FBAAPTC="R"
"RTN","FBCHEP",77,0)
 G RD
"RTN","FBCHEP",78,0)
CHK ;Check for vendor and batch being exempt from pricer
"RTN","FBCHEP",79,0)
 I $G(FBVE)'="Y"&($G(FBVE)'="N") S FBVE="N"
"RTN","FBCHEP",80,0)
 I $G(FBEXMPT)="Y" Q:FBVE="Y"  G OPEN:FBVE="N"
"RTN","FBCHEP",81,0)
 I $G(FBEXMPT)="N" Q:FBVE="N"  G OPEN:FBVE="Y"
"RTN","FBCHEP",82,0)
 I '$G(FBEXMPT)&($G(Z2)'>0) S FBEXMPT=FBVE Q
"RTN","FBCHEP",83,0)
 I '$G(FBEXMPT)&($G(Z2)>0) S $P(^FBAA(161.7,FBAABE,0),"^",18)="N",FBEXMPT="N" G CHK
"RTN","FBCHEP",84,0)
 Q
"RTN","FBCHEP",85,0)
OPEN W *7,!!,"This Invoice may not be added to Batch # ",+FBY(0),".",!,"***You may not add a ",$S(FBVE="Y":"pricer exempt",1:"non-exempt")," invoice to a ",$S(FBVE="Y":"non-exempt",1:"pricer exempt")," batch.***"
"RTN","FBCHEP",86,0)
 S DIR(0)="Y",DIR("A")="Do you want to open a new batch at this time",DIR("B")="Y" D ^DIR K DIR S:$D(DIRUT)!('Y) FBAAOUT=1 Q:FBAAOUT  D RCHOP^FBAAOB S FBEXMPT=FBVE D
"RTN","FBCHEP",87,0)
 .S FBY(0)=$G(^FBAA(161.7,FBAABE,0)),Z1=$P(FBY(0),"^",11),BO=$P(FBY(0),"^",2),Z2=$P(FBY(0),"^",10),FBSTN=$P(FBY(0),"^",8),FBCHOB=FBSTN_"-"_$P(FBY(0),"^",2)
"RTN","FBCHEP",88,0)
 Q
"RTN","FBCHEP",89,0)
IPAC ;
"RTN","FBCHVH")
0^2^B37280892^B31027719
"RTN","FBCHVH",1,0)
FBCHVH ;AISC/DMK-VENDOR PAYMENT HISTORY ;7/17/2003
"RTN","FBCHVH",2,0)
 ;;3.5;FEE BASIS;**4,61,122,133,108,135**;JAN 30, 1995;Build 3
"RTN","FBCHVH",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBCHVH",4,0)
GETVEN K FBAANQ D GETVEN^FBAAUTL1 G END:IFN']""
"RTN","FBCHVH",5,0)
 D DATE^FBAAUTL G:FBPOP GETVEN S ZZ=9999999.9999,FBBEG=ZZ-ENDDATE,FBEND=ZZ-BEGDATE
"RTN","FBCHVH",6,0)
 I '$D(^FBAAI("AF",IFN)) W !,*7,"No invoices on line for this vendor." G GETVEN
"RTN","FBCHVH",7,0)
 S VAR="IFN^FBBEG^FBEND^BEGDATE^ENDDATE"_$S($D(FBPROG):"^FBPROG",1:""),VAL=IFN_"^"_FBBEG_"^"_FBEND_"^"_BEGDATE_"^"_ENDDATE_$S($D(FBPROG):"^"_FBPROG,1:""),PGM="START^FBCHVH" D ZIS^FBAAUTL G:FBPOP END S:IO=IO(0) FBAANQ=1
"RTN","FBCHVH",8,0)
START S:'$D(FBPROG) FBPROG=6 S FBHEAD="VENDOR",Q="",$P(Q,"=",80)="=",FBAAOUT=0 U IO D GETDAT S:$E(IOST,1,2)'["C-" FBPG=1 D HEDC
"RTN","FBCHVH",9,0)
 F FBM=FBBEG-.1:0 S FBM=$O(^FBAAI("AF",IFN,FBM)) Q:FBM'>0!(FBM>FBEND)  F FBI=0:0 S FBI=$O(^FBAAI("AF",IFN,FBM,FBI)) Q:FBI'>0!(FBAAOUT)  I $D(^FBAAI(FBI,0)),$P(^(0),"^",12)=FBPROG,'$D(^("FBREJ")) D GETINV
"RTN","FBCHVH",10,0)
 G:$D(FBAANQ) GETVEN
"RTN","FBCHVH",11,0)
END K DA,DFN,BEGDATE,ENDDATE,FBBEG,FBEND,DIC,FBAANQ,FBAAOUT,FBDX,FBI,FBIN,FBPROC,FBVEN,FBVID,IFN,J,K,L,PGM,Q,VADM,VAERR,VAL,VAR,X,Y,VA,ZZ,FBM,FBHEAD,FBPROG,FBPG,FBVINDT
"RTN","FBCHVH",12,0)
 D CLOSE^FBAAUTL Q
"RTN","FBCHVH",13,0)
GETINV ;
"RTN","FBCHVH",14,0)
 N FBADJLA,FBADJLR,FBCDAYS,FBCSID,FBFPPSC,FBFPPSL,FBRRMKL,FBY2,FBY3,FBY5,FBADMTDX,FBPOA,FBCNTRN,B
"RTN","FBCHVH",15,0)
 S FBIN=^FBAAI(FBI,0)
"RTN","FBCHVH",16,0)
 S FBY2=$G(^FBAAI(FBI,2))
"RTN","FBCHVH",17,0)
 S FBY3=$G(^FBAAI(FBI,3))
"RTN","FBCHVH",18,0)
 S FBY5=$G(^FBAAI(FBI,5))
"RTN","FBCHVH",19,0)
 F J=1,2,3,4,6,7,8,9,10,11,13,14 S FBIN(J)=$P(FBIN,"^",J)
"RTN","FBCHVH",20,0)
 S FBVINDT=$P(FBY2,"^",2) D FBCKI^FBAACCB1(FBI)
"RTN","FBCHVH",21,0)
 S FBVEN=$S($D(^FBAAV(+FBIN(3),0)):$P(^(0),"^",1),1:"") I FBVEN]"" S FBVID=$P(^(0),"^",2)
"RTN","FBCHVH",22,0)
 S DFN=FBIN(4) Q:'DFN  D DEM^VADPT
"RTN","FBCHVH",23,0)
 S Y=FBIN(2) D CDAT S FBIN(2)=Y
"RTN","FBCHVH",24,0)
 S Y=FBIN(6) D CDAT S FBIN(6)=Y,Y=FBIN(7) D CDAT S FBIN(7)=Y
"RTN","FBCHVH",25,0)
 S FBCDAYS=$P(FBY2,U,10) ; covered days
"RTN","FBCHVH",26,0)
 S FBCSID=$P(FBY2,U,11) ; patient control number
"RTN","FBCHVH",27,0)
 S FBFPPSC=$P(FBY3,U) ; fpps claim id
"RTN","FBCHVH",28,0)
 S FBFPPSL=$P(FBY3,U,2) ; fpps line item
"RTN","FBCHVH",29,0)
 S FBX=$$ADJLRA^FBCHFA(FBI_",")
"RTN","FBCHVH",30,0)
 S FBADJLR=$P(FBX,U)
"RTN","FBCHVH",31,0)
 S FBADJLA=$P(FBX,U,2)
"RTN","FBCHVH",32,0)
 S FBRRMKL=$$RRL^FBCHFR(FBI_",")
"RTN","FBCHVH",33,0)
WRT I $Y+6>IOSL D HANG^FBAAUTL1:$E(IOST,1,2)["C-" Q:FBAAOUT  I $D(^FBAAI(FBI,4)) D HEDC
"RTN","FBCHVH",34,0)
 W !,$S('$D(FBIN(13)):"",FBIN(13)="R":"*",1:""),$S($G(FBCAN)]"":"+",1:"")
"RTN","FBCHVH",35,0)
 W VADM(1)_"  "_$P(VADM(2),"^",2),?48,FBCSID
"RTN","FBCHVH",36,0)
 W !,?4,FBVEN,?45,FBVID,?62,FBIN(1)
"RTN","FBCHVH",37,0)
 W !,$S(FBIN(13)["R":"*",1:""),$S(FBIN(14)]"":"#",1:"")
"RTN","FBCHVH",38,0)
 W ?4,FBFPPSC,?18,FBFPPSL,?35,FBIN(2),?46,$$DATX^FBAAUTL(FBVINDT),?57,FBIN(6),?68,FBIN(7)
"RTN","FBCHVH",39,0)
 W !?4,$J(FBIN(8),1,2),?17,$J(FBIN(9),1,2),?29,FBCDAYS
"RTN","FBCHVH",40,0)
 ; write adjustment reasons, if null then write suspend code
"RTN","FBCHVH",41,0)
 W ?39,$S(FBADJLR]"":FBADJLR,1:FBIN(11))
"RTN","FBCHVH",42,0)
 ; write adjustment amounts, if null then write amount suspended
"RTN","FBCHVH",43,0)
 W ?49,$S(FBADJLA]"":FBADJLA,1:$J(FBIN(10),1,2))
"RTN","FBCHVH",44,0)
 W ?64,FBRRMKL
"RTN","FBCHVH",45,0)
 ;write admitting diagnosis
"RTN","FBCHVH",46,0)
 S FBADMTDX=$P(FBY5,"^",9) I FBADMTDX]"" W !?2,"Admit Dx: ",$$ICD9^FBCSV1((FBADMTDX),$P($G(FBIN),"^",6))
"RTN","FBCHVH",47,0)
 ;write contract number
"RTN","FBCHVH",48,0)
 S FBCNTRN=$S($P(FBY5,U,8):$P($G(^FBAA(161.43,$P(FBY5,U,8),0)),U),1:"")
"RTN","FBCHVH",49,0)
 I FBCNTRN]"" W ?25,"Contract Number: ",FBCNTRN
"RTN","FBCHVH",50,0)
 ;set diagnosis code and present on admission code
"RTN","FBCHVH",51,0)
 N P1,P2
"RTN","FBCHVH",52,0)
 S P1=$G(^FBAAI(FBI,"DX"))
"RTN","FBCHVH",53,0)
 S P2=$G(^FBAAI(FBI,"POA"))
"RTN","FBCHVH",54,0)
 F K=1:1:25 D WRTDX
"RTN","FBCHVH",55,0)
 ;display procedure code with line item prov data - FB*3.5*135
"RTN","FBCHVH",56,0)
 N DIR,DUOUT,DTOUT,FBOUT,F135,L,P3,P5,RPROV,STRLEN,WRTPC
"RTN","FBCHVH",57,0)
 S P5=$G(^FBAAI(FBI,"PROC"))   ; Procedure codes
"RTN","FBCHVH",58,0)
 M RPROV=^FBAAI(FBI,"RPROV")   ; LI Provider array
"RTN","FBCHVH",59,0)
 S F135=24,FBOUT=0,STRLEN=66
"RTN","FBCHVH",60,0)
 F L=1:1:25 S WRTPC=$$WRTPC I WRTPC]"" D  Q:FBOUT
"RTN","FBCHVH",61,0)
 . S P3=$O(RPROV("B",L,0))
"RTN","FBCHVH",62,0)
 . I P3 D    ; display LI Provider and NPI/TAXONOMY data if present
"RTN","FBCHVH",63,0)
 .. W !,?4,"PROC: "_WRTPC,?17,"RENDERING PROV NAME (LI): "_$P(RPROV(P3,0),U,2) S F135=1+F135,STRLEN=66
"RTN","FBCHVH",64,0)
 .. I '$L($P(RPROV(P3,0),U,3)),'$L($P(RPROV(P3,0),U,4)) Q
"RTN","FBCHVH",65,0)
 .. W !,?22,"NPI: "_$P(RPROV(P3,0),U,3),?43,"TAXONOMY CODE: "_$P(RPROV(P3,0),U,4) S F135=1+F135
"RTN","FBCHVH",66,0)
 . E  D  Q   ; only display procedure code
"RTN","FBCHVH",67,0)
 .. I STRLEN>65 W !,?4,"PROC: " S STRLEN=0    ; start new line
"RTN","FBCHVH",68,0)
 .. W WRTPC_" " S STRLEN=1+STRLEN+$L(WRTPC)
"RTN","FBCHVH",69,0)
 . I F135>22 S F135=0,STRLEN=66,DIR(0)="E" W ! D ^DIR K DIR S:$D(DUOUT)!($D(DTOUT)) FBOUT=1   ; pagination
"RTN","FBCHVH",70,0)
 N A2 S A2=FBIN(9) W ! D PMNT^FBAACCB2
"RTN","FBCHVH",71,0)
 Q
"RTN","FBCHVH",72,0)
WRTDX ;write dianosis code and present on admission code
"RTN","FBCHVH",73,0)
 N P3,P4
"RTN","FBCHVH",74,0)
 S FBDX=$P(P1,"^",K)
"RTN","FBCHVH",75,0)
 S FBPOA=$P(P2,"^",K)
"RTN","FBCHVH",76,0)
 Q:FBDX=""
"RTN","FBCHVH",77,0)
 S P3=$$ICD9^FBCSV1((FBDX),$P($G(FBIN),"^",6))_"/"
"RTN","FBCHVH",78,0)
 S P4=P3_$S(FBPOA:$P($G(^FB(161.94,FBPOA,0)),"^"),1:"")_" "
"RTN","FBCHVH",79,0)
 I K=1!($X+$L(P4)+2>IOM) W !,?4,"DX/POA: "
"RTN","FBCHVH",80,0)
 W P4,""
"RTN","FBCHVH",81,0)
 Q
"RTN","FBCHVH",82,0)
WRTPC() ;write procedure code (if present)    ; FB*3.5*135
"RTN","FBCHVH",83,0)
 N P6
"RTN","FBCHVH",84,0)
 S FBPROC=$P(P5,"^",L)
"RTN","FBCHVH",85,0)
 Q:FBPROC="" ""
"RTN","FBCHVH",86,0)
 S P6=$$ICD0^FBCSV1((FBPROC),$P($G(FBIN),"^",6))_" "
"RTN","FBCHVH",87,0)
 Q P6
"RTN","FBCHVH",88,0)
HEDC I $D(FBHEAD) W:'$G(FBPG) @IOF K:$G(FBPG) FBPG W ?25,FBHEAD_" PAYMENT HISTORY",!,?24,$E(Q,1,24),!?48,"Date Range: ",BEGDATE_" to "_ENDDATE
"RTN","FBCHVH",89,0)
 I '$D(FBHEAD) W:'$G(FBPG) @IOF K:$G(FBPG) FBPG W !?32,"INVOICE DISPLAY",!,?31,$E(Q,1,17),!
"RTN","FBCHVH",90,0)
 W !,"Veteran's Name",?48,"Patient Control Number"
"RTN","FBCHVH",91,0)
 W !,"('*'Reimbursement to Veteran   '+' Cancellation Activity)   '#' Voided Payment)"
"RTN","FBCHVH",92,0)
 W !,?4,"Vendor Name",?45,"Vendor ID",?59,"Invoice #"
"RTN","FBCHVH",93,0)
 ;W !,?3,"Fr Date",?14,"To Date  Claimed   Paid",?41,"Sus Code",?59,"Dt. Rec.",?69,"Inv. Date"
"RTN","FBCHVH",94,0)
 W !,?4,"FPPS Claim ID",?18,"FPPS Line Item",?35,"Date Rec.",?46,"Inv. Date",?57,"Fr Date",?68,"To Date"
"RTN","FBCHVH",95,0)
 W !,?4,"Amt Claimed",?17,"Amt Paid",?29,"Cov.Days",?39,"Adj Code",?49,"Adj Amount",?64,"Remit Remark"
"RTN","FBCHVH",96,0)
 W !,Q,!
"RTN","FBCHVH",97,0)
 Q
"RTN","FBCHVH",98,0)
CDAT S Y=$E(Y,4,5)_"/"_$S($E(Y,6,7)="00":$E(Y,2,3),1:$E(Y,6,7)_"/"_$E(Y,2,3)) Q
"RTN","FBCHVH",99,0)
GETDAT S Y=BEGDATE D PDF^FBAAUTL S BEGDATE=Y,Y=ENDDATE D PDF^FBAAUTL S ENDDATE=Y
"RTN","FBCHVH",100,0)
 Q
"RTN","FBCHVH",101,0)
PRVD ;DISPLAY PROVIDER INFORMATION BEFORE INVOICE DISPLAY FB*3.5*122
"RTN","FBCHVH",102,0)
 N FBPRI,FBSRVF,FBST
"RTN","FBCHVH",103,0)
 S FBPRI=$G(^FBAAI(FBI,4)),FBSRVF=$G(^FBAAI(FBI,5)),$P(FBSRVF,U,3)=$$GET1^DIQ(5,$P(FBSRVF,U,3)_",",1)
"RTN","FBCHVH",104,0)
 W @IOF,!?30,"INVOICE DISPLAY",!?30,"===============",!?28,"PROVIDER INFORMATION",!
"RTN","FBCHVH",105,0)
 I $L($P(FBPRI,U,1,3))>3 W !?3,"ATTENDING PROV NAME: "_$P(FBPRI,U),!?3,"ATTENDING PROV NPI: "_$P(FBPRI,U,2),?35,"ATTENDING PROV TAXONOMY CODE: "_$P(FBPRI,U,3)
"RTN","FBCHVH",106,0)
 I $L($P(FBPRI,U,4,5))>2 W !!?3,"OPERATING PROV NAME: "_$P(FBPRI,U,4),!?3,"OPERATING PROV NPI: "_$P(FBPRI,U,5)
"RTN","FBCHVH",107,0)
 I $L($P(FBPRI,U,6,8))>3 W !!?3,"RENDERING PROV NAME: "_$P(FBPRI,U,6),!?3,"RENDERING PROV NPI: "_$P(FBPRI,U,7),?35,"RENDERING PROV TAXONOMY CODE: "_$P(FBPRI,U,8)
"RTN","FBCHVH",108,0)
 I $L($P(FBPRI,U,9,10))>2 W !!?3,"SERVICING PROV NAME: "_$P(FBPRI,U,9),!?3,"SERVICING PROV NPI: "_$P(FBPRI,U,10)
"RTN","FBCHVH",109,0)
 I $L($P(FBSRVF,U,1,4))>4 W !?3,"SERVICING FACILITY ADDRESS: ",!?5,$P(FBSRVF,U),!?5,$P(FBSRVF,U,2) I $P(FBSRVF,U,2)'="" W ", "
"RTN","FBCHVH",110,0)
 W $P(FBSRVF,U,3)_" "_$P(FBSRVF,U,4)
"RTN","FBCHVH",111,0)
 I $L($P(FBPRI,U,11,12))>2 W !!?3,"REFERRING PROV NAME: "_$P(FBPRI,U,11),!?3,"REFERRING PROV NPI: "_$P(FBPRI,U,12),!!
"RTN","FBCHVH",112,0)
 S DIR(0)="E" D ^DIR
"RTN","FBCHVH",113,0)
 Q
"RTN","FBPAID")
0^3^B34000309^B29740896
"RTN","FBPAID",1,0)
FBPAID ;WOIFO/SAB - SERVER ROUTINE TO UPDATE PAYMENTS ;2/10/2009
"RTN","FBPAID",2,0)
 ;;3.5;FEE BASIS;**5,61,107,121,135**;JAN 30, 1995;Build 3
"RTN","FBPAID",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBPAID",4,0)
 ;incoming record from AAC will contain the following data
"RTN","FBPAID",5,0)
 ;   - Fee Program  - from Fee Basis Program  (161.8)
"RTN","FBPAID",6,0)
 ;   - Activity Code    (C - confirmed)
"RTN","FBPAID",7,0)
 ;                      (B - backout)
"RTN","FBPAID",8,0)
 ;                      (X - cancelled)
"RTN","FBPAID",9,0)
 ;   - Internal Control Number   - IEN of payment record
"RTN","FBPAID",10,0)
 ;   - Check Number
"RTN","FBPAID",11,0)
 ;   - Check Date
"RTN","FBPAID",12,0)
 ;   - Interest Amount
"RTN","FBPAID",13,0)
 ;   - Cancellation Date
"RTN","FBPAID",14,0)
 ;   - Reason Code  (File # 162.95)
"RTN","FBPAID",15,0)
 ;   - Cancellation Code (R - C - X)
"RTN","FBPAID",16,0)
 ;   - Disbursed Amount   (this amount minus interest amount = amt pd)
"RTN","FBPAID",17,0)
 ;   variable 'FBPAID' is defined and passed to TRAP^FBMRASVR2
"RTN","FBPAID",18,0)
 ;
"RTN","FBPAID",19,0)
 N FBINV
"RTN","FBPAID",20,0)
 S U="^",FBPAID=1,FBMCNT=0
"RTN","FBPAID",21,0)
 S X="TRAP^FBMRASV2" S @^%ZOSF("TRAP")
"RTN","FBPAID",22,0)
 ;K XMY S XMY("G.FEE")="" D ENT1^XMD
"RTN","FBPAID",23,0)
 K ^TMP("FBPAID",$J),^TMP("FBERR",$J)
"RTN","FBPAID",24,0)
 D STATION^FBAAUTL I $S($G(FB("ERROR")):1,'$G(FBAASN):1,1:0) Q
"RTN","FBPAID",25,0)
 K FB
"RTN","FBPAID",26,0)
 ;
"RTN","FBPAID",27,0)
 ;FB*3.5*135 Start changes
"RTN","FBPAID",28,0)
 N FBDATE,FBIBOK
"RTN","FBPAID",29,0)
 S FBDATE=DT
"RTN","FBPAID",30,0)
 S FBIBOK=$$IBALLWD^FBPAID3()  ;RETURNS 0 if the site has sent the site parameter ALLOW FB PAID TO IB to NO or if it is blank
"RTN","FBPAID",31,0)
 ;FB*3.5*135 End changes
"RTN","FBPAID",32,0)
 ;
"RTN","FBPAID",33,0)
 ;start to read in message from central fee
"RTN","FBPAID",34,0)
 ;edits are:
"RTN","FBPAID",35,0)
 ;          1. invalid station number
"RTN","FBPAID",36,0)
 ;          2. invalid record length
"RTN","FBPAID",37,0)
 ;          3. unable to locate payment record
"RTN","FBPAID",38,0)
 ;          4. disbursed amount '= amt paid+interest
"RTN","FBPAID",39,0)
 ;          5. cancellations
"RTN","FBPAID",40,0)
 ; XMRG=record received in mail message from Austin
"RTN","FBPAID",41,0)
 F I=1:1 X XMREC Q:XMER<0  I XMRG]"",$E(XMRG,1,3)=FBAASN D
"RTN","FBPAID",42,0)
 .S ^TMP("FBREC",$J,I)=XMRG
"RTN","FBPAID",43,0)
 .K FBERR
"RTN","FBPAID",44,0)
 .I $L(XMRG)'=82&($L(XMRG)'=138) S FBERR=1,^TMP("FBERR",$J,2,I)=""
"RTN","FBPAID",45,0)
 .D PARSE^FBPAID1 Q:$G(FBERR)  S FBMCNT=FBMCNT+1 D @FBPROG
"RTN","FBPAID",46,0)
 D ^FBPAID2:$D(^TMP("FBERR",$J))
"RTN","FBPAID",47,0)
 D BUL^FBPAID1
"RTN","FBPAID",48,0)
 ; if any EDI invoices then add to FPPS queue
"RTN","FBPAID",49,0)
 I $D(FBINV) D PAIDLOG^FBFHLL(.FBINV)
"RTN","FBPAID",50,0)
 G END
"RTN","FBPAID",51,0)
 ;
"RTN","FBPAID",52,0)
3 ;update outpatient payment record
"RTN","FBPAID",53,0)
 Q:'$D(^FBAAC(+FBIEN(3),1,+FBIEN(2),1,FBIEN(1),1,FBIEN,0))  S FBAMT=+$P(^(0),U,3) D
"RTN","FBPAID",54,0)
 .I FBDAMT-FBINAMT'=FBAMT,$G(FBACT)="C" S ^TMP("FBERR",$J,4,I)=""_U_FBPROG_U_+FBIEN(3)_U_+FBIEN(2)_U_+FBIEN(1)_U_+FBIEN
"RTN","FBPAID",55,0)
 N JJ F JJ=1:1:3 S DA(JJ)=+FBIEN(JJ)
"RTN","FBPAID",56,0)
 S DA=+FBIEN
"RTN","FBPAID",57,0)
 S DR=""
"RTN","FBPAID",58,0)
 I FBACT="C" S DR="12////^S X=$G(FBCKDT);35///^S X=FBCKNUM;40///^S X=FBDAMT;41///^S X=FBINAMT;36///@;37///@"
"RTN","FBPAID",59,0)
 I  I $G(FBBRTG) S DR=DR_";55///^S X=FBBRTG;56///^S X=FBBACC;57///^S X=FBBNAM" ;HIPAA 5010 P121
"RTN","FBPAID",60,0)
 I FBACT="B" S DR="12///@;35///@;36///@;37///@;40///@;41///@;55///@;56///@;57///@"
"RTN","FBPAID",61,0)
 I FBACT="X" S DR="12///@;40///@;41///@;36////^S X=FBXDT;37////^S X=$G(FBRCOD);38///^S X=FBXCOD;55///@;56///@;57///@" D
"RTN","FBPAID",62,0)
 .I FBXCOD'="R" S ^TMP("FBERR",$J,5,I)=""_U_FBPROG_U_+FBIEN(3)_U_+FBIEN(2)_U_+FBIEN(1)_U_+FBIEN
"RTN","FBPAID",63,0)
 .I FBXCOD="R" S DR=DR_";35///@"
"RTN","FBPAID",64,0)
 S DIE="^FBAAC("_DA(3)_",1,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","FBPAID",65,0)
 D LOCK^FBUCUTL(DIE,DA,1) I FBLOCK D ^DIE L -^FBAAC(DA(3),1,DA(2),1,DA(1),1,DA)
"RTN","FBPAID",66,0)
 ; if EDI then add invoice to list in FBINV(, patch *61
"RTN","FBPAID",67,0)
 I FBACT'="B",$P($G(^FBAAC(DA(3),1,DA(2),1,DA(1),1,DA,3)),U)]"" D
"RTN","FBPAID",68,0)
 . N FBAAIN
"RTN","FBPAID",69,0)
 . S FBAAIN=$P($G(^FBAAC(DA(3),1,DA(2),1,DA(1),1,DA,0)),U,16)
"RTN","FBPAID",70,0)
 . I FBAAIN]"" S FBINV(3,FBAAIN)=""
"RTN","FBPAID",71,0)
 I FBACT="C" D:FBIBOK ADDONE^FBPAID3(3,.FBIEN,+FBIEN(3),FBDATE)  ;FB*3.5*135
"RTN","FBPAID",72,0)
 D KILL
"RTN","FBPAID",73,0)
 Q
"RTN","FBPAID",74,0)
 ;
"RTN","FBPAID",75,0)
5 ;update pharmacy payment record
"RTN","FBPAID",76,0)
 Q:'$D(^FBAA(162.1,+FBIEN(1),"RX",+FBIEN,0))  S FBAMT=+$P(^(0),U,16) D
"RTN","FBPAID",77,0)
 . I FBDAMT-FBINAMT'=FBAMT,$G(FBACT)="C" S ^TMP("FBERR",$J,4,I)=""_U_FBPROG_U_+FBIEN(1)_U_+FBIEN
"RTN","FBPAID",78,0)
 S DA(1)=+FBIEN(1),DA=+FBIEN
"RTN","FBPAID",79,0)
 S DR=""
"RTN","FBPAID",80,0)
 I FBACT="C" S DR="28////^S X=FBCKDT;30///^S X=FBCKNUM;34///^S X=FBDAMT;35///^S X=FBINAMT;31///@;32///@"
"RTN","FBPAID",81,0)
 I FBACT="B" S DR="28///@;30///@;31///@;32///@;34///@;35///@"
"RTN","FBPAID",82,0)
 I FBACT="X" S DR="28///@;34///@;35///@;31////^S X=FBXDT;32////^S X=$G(FBRCOD);33///^S X=FBXCOD" D
"RTN","FBPAID",83,0)
 .I FBXCOD'="R" S ^TMP("FBERR",$J,5,I)=""_U_FBPROG_U_+FBIEN(1)_U_+FBIEN
"RTN","FBPAID",84,0)
 .I FBXCOD="R" S DR=DR_";30///@"
"RTN","FBPAID",85,0)
 S DIE="^FBAA(162.1,"_DA(1)_",""RX"","
"RTN","FBPAID",86,0)
 D LOCK^FBUCUTL(DIE,DA,1) I FBLOCK D ^DIE L -^FBAA(162.1,DA(1),"RX",DA)
"RTN","FBPAID",87,0)
 ; if EDI then add invoice to list in FBINV(, patch *61
"RTN","FBPAID",88,0)
 I FBACT'="B",$P($G(^FBAA(162.1,DA(1),0)),U,13)]"" D
"RTN","FBPAID",89,0)
 . N FBAAIN
"RTN","FBPAID",90,0)
 . S FBAAIN=$P($G(^FBAA(162.1,DA(1),0)),U)
"RTN","FBPAID",91,0)
 . I FBAAIN]"" S FBINV(5,FBAAIN)=""
"RTN","FBPAID",92,0)
 D KILL
"RTN","FBPAID",93,0)
 Q
"RTN","FBPAID",94,0)
 ;
"RTN","FBPAID",95,0)
9 ;update inpatient payment record
"RTN","FBPAID",96,0)
 Q:'$D(^FBAAI(+FBIEN,0))  S FBAMT=+$P(^(0),U,9) D
"RTN","FBPAID",97,0)
 .I FBDAMT-FBINAMT'=FBAMT,$G(FBACT)="C" S ^TMP("FBERR",$J,4,I)=""_U_FBPROG_U_+FBIEN
"RTN","FBPAID",98,0)
 S DA=+FBIEN
"RTN","FBPAID",99,0)
 S DR=""
"RTN","FBPAID",100,0)
 I FBACT="C" S DR="45////^S X=FBCKDT;48///^S X=FBCKNUM;52///^S X=FBDAMT;53///^S X=FBINAMT;49///@;50///@"
"RTN","FBPAID",101,0)
 I  I $G(FBBRTG) S DR=DR_";61///^S X=FBBRTG;62///^S X=FBBACC;63///^S X=FBBNAM" ;HIPAA 5010 P121
"RTN","FBPAID",102,0)
 I FBACT="B" S DR="45///@;48///@;49///@;50///@;52///@;53///@;61///@;62///@;63///@"
"RTN","FBPAID",103,0)
 I FBACT="X" S DR="45///@;52///@;53///@;49////^S X=FBXDT;50////^S X=$G(FBRCOD);51///^S X=FBXCOD;61///@;62///@;63///@" D
"RTN","FBPAID",104,0)
 .I FBXCOD'="R" S ^TMP("FBERR",$J,5,I)=""_U_FBPROG_U_+FBIEN
"RTN","FBPAID",105,0)
 .I FBXCOD="R" S DR=DR_";48///@"
"RTN","FBPAID",106,0)
 S DIE="^FBAAI("
"RTN","FBPAID",107,0)
 D LOCK^FBUCUTL(DIE,DA,1) I FBLOCK D ^DIE L -^FBAAI(DA)
"RTN","FBPAID",108,0)
 ; if EDI then add invoice to list in FBINV(, patch *61
"RTN","FBPAID",109,0)
 I FBACT'="B",$P($G(^FBAAI(DA,3)),U)]"" D
"RTN","FBPAID",110,0)
 . N FBAAIN
"RTN","FBPAID",111,0)
 . S FBAAIN=$P($G(^FBAAI(DA,0)),U)
"RTN","FBPAID",112,0)
 . I FBAAIN]"" S FBINV(9,FBAAIN)=""
"RTN","FBPAID",113,0)
 I FBACT="C" D:FBIBOK ADDONE^FBPAID3(9,+FBIEN,$P(^FBAAI(+FBIEN,0),U,4),FBDATE)  ;FB*3.5*135
"RTN","FBPAID",114,0)
 D KILL
"RTN","FBPAID",115,0)
 Q
"RTN","FBPAID",116,0)
 ;
"RTN","FBPAID",117,0)
T ;update travel payment record
"RTN","FBPAID",118,0)
 Q:'$D(^FBAAC(+FBIEN(1),3,+FBIEN,0))  S FBAMT=+$P(^(0),U,3) D
"RTN","FBPAID",119,0)
 . I FBDAMT-FBINAMT'=FBAMT,$G(FBACT)="C" S ^TMP("FBERR",$J,4,I)=""_U_FBPROG_U_+FBIEN(1)_U_+FBIEN
"RTN","FBPAID",120,0)
 S DA(1)=+FBIEN(1),DA=+FBIEN
"RTN","FBPAID",121,0)
 S DR=""
"RTN","FBPAID",122,0)
 I FBACT="C" S DR="8////^S X=FBCKDT;9///^S X=FBCKNUM;13///^S X=FBDAMT;14///^S X=FBINAMT;10///@;11///@"
"RTN","FBPAID",123,0)
 I FBACT="B" S DR="8///@;9///@;10///@;11///@;13///@;14///@"
"RTN","FBPAID",124,0)
 I FBACT="X" S DR="8///@;13///@;14///@;10////^S X=FBXDT;11////^S X=$G(FBRCOD);12///^S X=FBXCOD" D
"RTN","FBPAID",125,0)
 .I FBXCOD'="R" S ^TMP("FBERR",$J,5,I)=""_U_FBPROG_U_+FBIEN(1)_U_+FBIEN
"RTN","FBPAID",126,0)
 .I FBXCOD="R" S DR=DR_";9///@"
"RTN","FBPAID",127,0)
 S DIE="^FBAAC("_+FBIEN(1)_",3,"
"RTN","FBPAID",128,0)
 D LOCK^FBUCUTL(DIE,DA,1) I FBLOCK D ^DIE L -^FBAAC(DA(1),3,DA)
"RTN","FBPAID",129,0)
 D KILL
"RTN","FBPAID",130,0)
 Q
"RTN","FBPAID",131,0)
 ;
"RTN","FBPAID",132,0)
END ;clean and exit
"RTN","FBPAID",133,0)
 N XMSER,XMZ S XMSER="S."_XQSOP,XMZ=XQMSG D REMSBMSG^XMA1C
"RTN","FBPAID",134,0)
 K FB,FBPAID,FBSITE,FBAASN,FBSN,FBMCNT,I,XMER,XMREC,XMRG,XMY,^TMP("FBERR",$J),^TMP("FBPAID",$J),^TMP("FBREC",$J),X
"RTN","FBPAID",135,0)
KILL K FBLOCK,DIE,DA,DR,FBIEN,FBACT,FBCKNUM,FBRCOD,FBPROG,FBCKDT,FBXDT,FBXCOD,FBINAMT,FBDAMT,FBAMT,FBERR,FBBRTG,FBBACC,FBBNAM
"RTN","FBPAID",136,0)
 Q
"RTN","FBPAID3")
0^4^B190545666^n/a
"RTN","FBPAID3",1,0)
FBPAID3 ;DSS/SCR - Utilities to support FEE BASIS PAID TO IB Process ;3/28/1012
"RTN","FBPAID3",2,0)
 ;;3.5;FEE BASIS;**135**;JAN 30, 1995;Build 3
"RTN","FBPAID3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBPAID3",4,0)
 ;
"RTN","FBPAID3",5,0)
 ;  DBIA SUPPORTED REF INSUR^IBBAPI
"RTN","FBPAID3",6,0)
 ;                     ELIG^VADPT
"RTN","FBPAID3",7,0)
 ;
"RTN","FBPAID3",8,0)
 Q
"RTN","FBPAID3",9,0)
 ;
"RTN","FBPAID3",10,0)
IBALLWD()  ;EP FROM FBPAID
"RTN","FBPAID3",11,0)
 ; RETURNS 1 if lines should be added to the FEE BASIS PAID TO IB file for further processing
"RTN","FBPAID3",12,0)
 ;           by scheduled background job FB PAID TO IB
"RTN","FBPAID3",13,0)
 ;         0 if the site has not set the site parameter to allow updates OR db errors occur
"RTN","FBPAID3",14,0)
 ;
"RTN","FBPAID3",15,0)
 N FBIEN,FBRETRN,FBERR
"RTN","FBPAID3",16,0)
 ;
"RTN","FBPAID3",17,0)
 S FBRETRN=0  ;DON'T ALLOW new entries to FEE BASIS PAID TO IB file...
"RTN","FBPAID3",18,0)
 S FBIEN=$O(^FBAA(161.4,0))
"RTN","FBPAID3",19,0)
 S:+FBIEN FBRETRN=$$GET1^DIQ(161.4,FBIEN_",",40,"I","","FBERR")  ;if "" or 1 is returned updates ok
"RTN","FBPAID3",20,0)
 I $G(FBERR("DIERR"))'="" S FBRETRN=0
"RTN","FBPAID3",21,0)
 S:FBRETRN="" FBRETRN=0  ;Site must set parameter to make interface work initially
"RTN","FBPAID3",22,0)
 Q FBRETRN
"RTN","FBPAID3",23,0)
 ;
"RTN","FBPAID3",24,0)
 ;
"RTN","FBPAID3",25,0)
ADDONE(FBPROG,FBIEN,FBPAT,FBDATE) ;EP FROM FBPAID
"RTN","FBPAID3",26,0)
 ; INPUT  : FBPROG : "3" FOR OUTPATIENT, "9" FOR INPATIENT
"RTN","FBPAID3",27,0)
 ;          FBIEN  : AN ARRAY SET UP FROM THE PARSING ROUTINE IN FBPAID1
"RTN","FBPAID3",28,0)
 ;          FBPAT  : POINTER TO THE PATIENT FILE
"RTN","FBPAID3",29,0)
 ;          FBDATE : DATE OF MM MESSAGE FROM CENTRAL FEE PROCESSING
"RTN","FBPAID3",30,0)
 ;
"RTN","FBPAID3",31,0)
 ; OUPUT  : ien of new entry or -1 if problems occur
"RTN","FBPAID3",32,0)
 ;
"RTN","FBPAID3",33,0)
 N FBARRY,FBOK,FBERR
"RTN","FBPAID3",34,0)
 ;
"RTN","FBPAID3",35,0)
 S FBARRY("PATIENT")=FBPAT  ;INTERNAL
"RTN","FBPAID3",36,0)
 S FBARRY("PROGRAM")=FBPROG
"RTN","FBPAID3",37,0)
 I $G(FBPROG)=3 D
"RTN","FBPAID3",38,0)
 .S FBARRY("FBICN")=$G(FBIEN(3))_";"_$G(FBIEN(2))_";"_$G(FBIEN(1))_";"_$G(FBIEN)
"RTN","FBPAID3",39,0)
 .S FBARRY("LI NUMBER")=FBIEN
"RTN","FBPAID3",40,0)
 I $G(FBPROG)=9 D
"RTN","FBPAID3",41,0)
 .S FBARRY("FBICN")=FBIEN
"RTN","FBPAID3",42,0)
 .;S FBARRY("LI NUMBER")=1   ;There can be up to 25 line items in the same record
"RTN","FBPAID3",43,0)
 S FBARRY("PROCESS DATE")=FBDATE   ;INTERNAL Date message started getting processed
"RTN","FBPAID3",44,0)
 S FBOK=$$SETFB2IB("",.FBARRY)  ;returns the ien of a new line, or -1
"RTN","FBPAID3",45,0)
 Q FBOK
"RTN","FBPAID3",46,0)
 ;
"RTN","FBPAID3",47,0)
EPFBTOIB(FBDATEIN) ;EP FROM FB PAID TO IB OPTION
"RTN","FBPAID3",48,0)
 ;  INPUT : FBDATEIN - OPTIONAL and not supplied by the OPTION if sent
"RTN","FBPAID3",49,0)
 ;                      this should be 'DATE OF LAST GOOD RUN' 
"RTN","FBPAID3",50,0)
 ;                   - all dates after this date will be re-processed in the
"RTN","FBPAID3",51,0)
 ;                       FEE BASIS PAID TO IB file
"RTN","FBPAID3",52,0)
 ;                       
"RTN","FBPAID3",53,0)
 N FBIEN,FBTEST,FBQUIT,FBOK,FBIEN3,FBDATE,FBTODAY
"RTN","FBPAID3",54,0)
 S FBTODAY=DT
"RTN","FBPAID3",55,0)
 ;
"RTN","FBPAID3",56,0)
 D CLEANUP(FBTODAY)
"RTN","FBPAID3",57,0)
 K ^TMP($J,"FBPAID3") ;temporary global to hold info for each date to be processed
"RTN","FBPAID3",58,0)
 ; 
"RTN","FBPAID3",59,0)
 I $G(FBDATEIN)="" D
"RTN","FBPAID3",60,0)
 .S FBQUIT=0
"RTN","FBPAID3",61,0)
 .S FBDATE=""
"RTN","FBPAID3",62,0)
 .S FBDATE=$O(^FB(161.9,"AC",FBDATE),-1)
"RTN","FBPAID3",63,0)
 .;FIND LAST PROCCESSED DATE BY LOOKING AT NPI ADDED field which is always populated when processed
"RTN","FBPAID3",64,0)
 .S:FBDATE="" FBQUIT=1
"RTN","FBPAID3",65,0)
 .F  Q:FBQUIT  D
"RTN","FBPAID3",66,0)
 ..S FBIEN=0
"RTN","FBPAID3",67,0)
 ..S FBIEN=$O(^FB(161.9,"AC",FBDATE,FBIEN))
"RTN","FBPAID3",68,0)
 ..I $$GET1^DIQ(161.9,FBIEN_",",.08,"I","","")'="" S FBQUIT=1
"RTN","FBPAID3",69,0)
 ..Q:FBQUIT
"RTN","FBPAID3",70,0)
 ..S FBDATE=$O(^FB(161.9,"AC",FBDATE),-1)
"RTN","FBPAID3",71,0)
 ..I FBDATE="" S FBQUIT=1
"RTN","FBPAID3",72,0)
 .S FBDATE=$O(^FB(161.9,"AC",FBDATE))   ;then I have found a date that has been processed, stepped back one and then quit...
"RTN","FBPAID3",73,0)
 I $G(FBDATEIN)'="" S FBDATE=FBDATEIN
"RTN","FBPAID3",74,0)
 Q:FBDATE=""  ;NO UNPROCESSED RECORDS
"RTN","FBPAID3",75,0)
 F  Q:(FBDATE="")  D
"RTN","FBPAID3",76,0)
 .S FBIEN3=0
"RTN","FBPAID3",77,0)
 .F  S FBIEN3=$O(^FB(161.9,"AC",FBDATE,FBIEN3)) Q:'+FBIEN3  S ^TMP($J,"FBPAID3",FBDATE,FBIEN3)=""
"RTN","FBPAID3",78,0)
 .D SCRUB2IB(FBDATE)
"RTN","FBPAID3",79,0)
 .K ^TMP($J,"FBPAID3",FBDATE)
"RTN","FBPAID3",80,0)
 .S FBDATE=$O(^FB(161.9,"AC",FBDATE))
"RTN","FBPAID3",81,0)
 Q
"RTN","FBPAID3",82,0)
 ;
"RTN","FBPAID3",83,0)
CLEANUP(FBDATE) ;delete entries from 161.9 older than 180 days from FBDATE
"RTN","FBPAID3",84,0)
 ; INPUT : FBDATE - Today's date
"RTN","FBPAID3",85,0)
 ;
"RTN","FBPAID3",86,0)
 ;
"RTN","FBPAID3",87,0)
 N FBIEN,FBOLDATE
"RTN","FBPAID3",88,0)
 ;
"RTN","FBPAID3",89,0)
 N X1,X2,X,%H,DA,DIK,DIE,DR
"RTN","FBPAID3",90,0)
 ;
"RTN","FBPAID3",91,0)
 S X1=FBDATE
"RTN","FBPAID3",92,0)
 S X2=-179
"RTN","FBPAID3",93,0)
 D C^%DTC
"RTN","FBPAID3",94,0)
 S FBOLDATE=X  ;THE FM DATE 179 DAYS BEFORE FBDATE
"RTN","FBPAID3",95,0)
 ;
"RTN","FBPAID3",96,0)
 F  S FBOLDATE=$O(^FB(161.9,"AC",FBOLDATE),-1) Q:FBOLDATE=""  D
"RTN","FBPAID3",97,0)
 .S FBIEN=0
"RTN","FBPAID3",98,0)
 .F  S FBIEN=$O(^FB(161.9,"AC",FBOLDATE,FBIEN)) Q:FBIEN=""  D DELFB2IB(FBIEN)
"RTN","FBPAID3",99,0)
 Q
"RTN","FBPAID3",100,0)
 ;
"RTN","FBPAID3",101,0)
SCRUB2IB(FBDATE) ; process entries in 161.9 for this process date
"RTN","FBPAID3",102,0)
 ;
"RTN","FBPAID3",103,0)
 ; INPUT  : FBDATE - Process date in FEE BASIS PAID TO IB file
"RTN","FBPAID3",104,0)
 ;
"RTN","FBPAID3",105,0)
 ; OUTUPT : 1 indication processing is complete
"RTN","FBPAID3",106,0)
 ;
"RTN","FBPAID3",107,0)
 N FBIEN2,FBCHECK,FBPATARY,FBARRY,FBPAT,FBXIEN,FBNXT,FBRECARY,FBINSRET,FBTRTDT,FBDATE2,FBLINUM
"RTN","FBPAID3",108,0)
 ;
"RTN","FBPAID3",109,0)
 ; FBCHECK,FBARRY and FBRECARY are all arrays that keep persistent information
"RTN","FBPAID3",110,0)
 ;   through subroutine calls and are always passed by reference
"RTN","FBPAID3",111,0)
 ; 
"RTN","FBPAID3",112,0)
 S FBIEN2=0
"RTN","FBPAID3",113,0)
 ;
"RTN","FBPAID3",114,0)
 S FBCHECK(0)="^0^0"  ;the three piece string of info to use if NPI is blank
"RTN","FBPAID3",115,0)
 ;
"RTN","FBPAID3",116,0)
 F  S FBIEN2=$O(^TMP($J,"FBPAID3",FBDATE,FBIEN2)) Q:FBIEN2=""  D
"RTN","FBPAID3",117,0)
 .S FBOK=$$GETFB2IB(FBIEN2,.FBARRY)
"RTN","FBPAID3",118,0)
 .S FBPAT=$G(FBARRY("PATIENT INTERNAL"))
"RTN","FBPAID3",119,0)
 .Q:'+FBPAT
"RTN","FBPAID3",120,0)
 .S:$G(FBPATARY(FBPAT,0))="" FBPATARY(FBPAT,0)='$$FBSC(FBPAT)  ;(IF SC RETURNS 1, WE WANT 0)
"RTN","FBPAID3",121,0)
 .S FBPATARY(FBPAT,FBIEN2)=""
"RTN","FBPAID3",122,0)
 .Q:FBPATARY(FBPAT,0)=0
"RTN","FBPAID3",123,0)
 .S FBPROG=$G(FBARRY("PROGRAM INTERNAL"))
"RTN","FBPAID3",124,0)
 .S FBICN=$G(FBARRY("FBICN"))
"RTN","FBPAID3",125,0)
 .S FBLINUM=$G(FBARRY("LI NUMBER"))
"RTN","FBPAID3",126,0)
 .S FBOK=0   ;FLAGS IF DB CALLS RETURN WITH PROBLEMS
"RTN","FBPAID3",127,0)
 .I FBPROG=9 D
"RTN","FBPAID3",128,0)
 ..S FBOK=$$GETFBINV(FBICN,.FBRECARY)
"RTN","FBPAID3",129,0)
 ..Q:'FBOK
"RTN","FBPAID3",130,0)
 ..S FBTRTDT=FBRECARY("TREATMENT FROM DATE")
"RTN","FBPAID3",131,0)
 ..S:$G(FBPATARY(FBPAT,"STRTDT",FBTRTDT))="" FBPATARY(FBPAT,"STRTDT",FBTRTDT)=$$INSUR^IBBAPI(FBPAT,FBTRTDT,"I",.FBINSRET)
"RTN","FBPAID3",132,0)
 ..S FBPATARY(FBPAT,FBIEN2)=FBPATARY(FBPAT,"STRTDT",FBTRTDT)
"RTN","FBPAID3",133,0)
 .;
"RTN","FBPAID3",134,0)
 .I FBPROG=3 D
"RTN","FBPAID3",135,0)
 ..S FBOK=$$GETFBPAY(FBICN,.FBRECARY)
"RTN","FBPAID3",136,0)
 ..Q:'FBOK
"RTN","FBPAID3",137,0)
 ..S FBTRTDT=FBRECARY("TREATMENT DATE")
"RTN","FBPAID3",138,0)
 ..S:$G(FBPATARY(FBPAT,"TRTDT",FBTRTDT))="" FBPATARY(FBPAT,"TRTDT",FBTRTDT)=$$INSUR^IBBAPI(FBPAT,FBTRTDT,"O",.FBINSRET)
"RTN","FBPAID3",139,0)
 ..S FBPATARY(FBPAT,FBIEN2)=FBPATARY(FBPAT,"TRTDT",FBTRTDT)
"RTN","FBPAID3",140,0)
 .;
"RTN","FBPAID3",141,0)
 .Q:'FBOK
"RTN","FBPAID3",142,0)
 .I $G(FBRECARY("CONTRACT"))'="" S FBPATARY(FBPAT,FBIEN2)=-1  ;get rid of this record
"RTN","FBPAID3",143,0)
 .Q:$G(FBRECARY("CONTRACT"))'=""
"RTN","FBPAID3",144,0)
 .Q:FBPATARY(FBPAT,FBIEN2)=0  ;get rid of this record since no valid INPATIENT insurance on 'start date'
"RTN","FBPAID3",145,0)
 .I FBPATARY(FBPAT,FBIEN2)=1 D PRCFBREC^FBPAID3A(FBIEN2,.FBRECARY,.FBARRY,.FBCHECK)
"RTN","FBPAID3",146,0)
 ;NOW REMOVE EACH RECORD EACH PATIENT THAT HAS SC STATUS from FEE BASIS PAID TO IB and from local array 
"RTN","FBPAID3",147,0)
 S FBPAT=0
"RTN","FBPAID3",148,0)
 F  S FBPAT=$O(FBPATARY(FBPAT)) Q:'+FBPAT  D
"RTN","FBPAID3",149,0)
 .;IF THIS PERSON HAS SERVICE CONNECTED STATUS, KILL ALL HIS/HER ENTRIES
"RTN","FBPAID3",150,0)
 .I $G(FBPATARY(FBPAT,0))=0 D
"RTN","FBPAID3",151,0)
 ..S FBXIEN=0
"RTN","FBPAID3",152,0)
 ..F  S FBXIEN=$O(FBPATARY(FBPAT,FBXIEN)) Q:'+FBXIEN  D DELFB2IB(FBXIEN)
"RTN","FBPAID3",153,0)
 ..K FBPATARY(FBPAT)
"RTN","FBPAID3",154,0)
 .;IF THIS PERSON DOES NOT HAVE APPROPRIATE COVERAGE ON THE DATE OF SERVICE, KILL THIS LINE
"RTN","FBPAID3",155,0)
 .I $G(FBPATARY(FBPAT,0))=1 D
"RTN","FBPAID3",156,0)
 ..S FBXIEN=0
"RTN","FBPAID3",157,0)
 ..F  S FBXIEN=$O(FBPATARY(FBPAT,FBXIEN)) Q:'+FBXIEN  D 
"RTN","FBPAID3",158,0)
 ...I $G(FBPATARY(FBPAT,FBXIEN))<=0 D 
"RTN","FBPAID3",159,0)
 ....D DELFB2IB(FBXIEN)
"RTN","FBPAID3",160,0)
 ....K FBPATARY(FBPAT,FBXIEN)
"RTN","FBPAID3",161,0)
 .S FBXIEN=0
"RTN","FBPAID3",162,0)
 .;NOW KILL ANY REMAINING ENTRIES FOR THIS PATIENT THAT ARE FOR CONTRACTED SERVICES
"RTN","FBPAID3",163,0)
 .F  S FBXIEN=$O(FBPATARY(FBPAT,FBXIEN)) Q:'+FBXIEN  D
"RTN","FBPAID3",164,0)
 ..I $G(FBPATARY(FBPAT,FBXIEN))<=0 D 
"RTN","FBPAID3",165,0)
 ...D DELFB2IB(FBXIEN)
"RTN","FBPAID3",166,0)
 ...K FBPATARY(FBPAT,FBXIEN)
"RTN","FBPAID3",167,0)
 Q
"RTN","FBPAID3",168,0)
 ;
"RTN","FBPAID3",169,0)
SETFB2IB(FBIEN,FBARRY)  ;ADD OR UPDATE A RECORD TO 161.9 FEE BASIS PAID TO IB FILE
"RTN","FBPAID3",170,0)
 ;SETS FIELD VALUES INTO 161.9 -- FEE BASIS PAID TO IB FILE
"RTN","FBPAID3",171,0)
 ;
"RTN","FBPAID3",172,0)
 ; INPUT : FBIEN : IF "" a new entry will be created ELSE an EXISTING entry will be updated
"RTN","FBPAID3",173,0)
 ;         FBARRY - AN ARRAY OF INFORMATION IN INTERNAL FORMAT THAT WILL BE SET INTO THE NEW RECORD W/O VALIDATION
"RTN","FBPAID3",174,0)
 ;
"RTN","FBPAID3",175,0)
 ;         FBERR  - Empty array passed by reference which is populated if DB errors occur
"RTN","FBPAID3",176,0)
 ;
"RTN","FBPAID3",177,0)
 N FBFDA,FBOK,FBIENRET,FBERR
"RTN","FBPAID3",178,0)
 ;
"RTN","FBPAID3",179,0)
 S FBOK=1
"RTN","FBPAID3",180,0)
 I FBIEN="" D
"RTN","FBPAID3",181,0)
 .S FBFDA(161.9,"+1,",.01)=$G(FBARRY("PATIENT"))
"RTN","FBPAID3",182,0)
 .S FBFDA(161.9,"+1,",.02)=$G(FBARRY("PROGRAM"))
"RTN","FBPAID3",183,0)
 .S FBFDA(161.9,"+1,",.03)=$G(FBARRY("FBICN"))
"RTN","FBPAID3",184,0)
 .S FBFDA(161.9,"+1,",.04)=$G(FBARRY("PROCESS DATE"))
"RTN","FBPAID3",185,0)
 .S FBFDA(161.9,"+1,",.05)=$G(FBARRY("LI NUMBER"))
"RTN","FBPAID3",186,0)
 .D UPDATE^DIE("","FBFDA","FBIENRET","FBERR")
"RTN","FBPAID3",187,0)
 I FBIEN'="" D
"RTN","FBPAID3",188,0)
 .S FBFDA(161.9,FBIEN_",",.05)=$G(FBARRY("LI NUMBER"))
"RTN","FBPAID3",189,0)
 .S FBFDA(161.9,FBIEN_",",.06)=$G(FBARRY("PROVIDER TYPE"))
"RTN","FBPAID3",190,0)
 .S FBFDA(161.9,FBIEN_",",.07)=$G(FBARRY("IBICN"))
"RTN","FBPAID3",191,0)
 .S FBFDA(161.9,FBIEN_",",.08)=$G(FBARRY("NPI ADDED"))
"RTN","FBPAID3",192,0)
 .S FBFDA(161.9,FBIEN_",",.09)=$G(FBARRY("TXY ADDED"))
"RTN","FBPAID3",193,0)
 .D FILE^DIE("","FBFDA","FBERR")
"RTN","FBPAID3",194,0)
 ;
"RTN","FBPAID3",195,0)
 I $G(FBERR("DIERR"))="" D
"RTN","FBPAID3",196,0)
 .S:$G(FBIENRET(1))'="" FBOK=FBIENRET(1)  ;THE IEN WHICH WAS JUST ADDED
"RTN","FBPAID3",197,0)
 .S:$G(FBIENRET(1))="" FBOK=FBIEN
"RTN","FBPAID3",198,0)
 I $G(FBERR("DIERR"))'="" S FBOK=-1
"RTN","FBPAID3",199,0)
 Q FBOK  ;RETURNS IEN JUST ADDED OR UPDATED OR -1
"RTN","FBPAID3",200,0)
 ;
"RTN","FBPAID3",201,0)
GETFB2IB(FBIEN,FBARRY)  ;GETS FIELD VALUES FROM 161.9 FEE BASIS PAID TO IB FILE
"RTN","FBPAID3",202,0)
 ;
"RTN","FBPAID3",203,0)
 ; INPUT: FBIEN - THE IEN OF THE FEE BASIS PAID TO IB FILE INFORMAITON IS DESIRED FOR
"RTN","FBPAID3",204,0)
 ;        FBARRY - AN EMPTY ARRAY PASSED BY REFERENCE 
"RTN","FBPAID3",205,0)
 ;
"RTN","FBPAID3",206,0)
 ; OUTPUT FBARRY :  POPULATED WITH INFO ABOUT THIS IEN
"RTN","FBPAID3",207,0)
 ;
"RTN","FBPAID3",208,0)
 N FBIENS,FBFLDS,FBRET,FBOK,FBERR
"RTN","FBPAID3",209,0)
 ;
"RTN","FBPAID3",210,0)
 S FBOK=1
"RTN","FBPAID3",211,0)
 ;
"RTN","FBPAID3",212,0)
 ; FB INTERNAL CONTROL NUMBER [4F]
"RTN","FBPAID3",213,0)
 ;^ 
"RTN","FBPAID3",214,0)
 ;^  ^
"RTN","FBPAID3",215,0)
 ;
"RTN","FBPAID3",216,0)
 D GETS^DIQ(161.9,FBIEN_",","*","EI","FBRET","FBERR")
"RTN","FBPAID3",217,0)
 I $G(FBERR("DIERR"))'="" S FBOK=-1
"RTN","FBPAID3",218,0)
 I $G(FBRET(161.9,FBIEN_",",".01","I"))="" S FBOK=0 ;NO SUCH RECORD IEN
"RTN","FBPAID3",219,0)
 ;
"RTN","FBPAID3",220,0)
 I FBOK D
"RTN","FBPAID3",221,0)
 .S FBARRY("PATIENT")=$G(FBRET(161.9,FBIEN_",",".01","E"))
"RTN","FBPAID3",222,0)
 .S FBARRY("PATIENT INTERNAL")=$G(FBRET(161.9,FBIEN_",",".01","I")) ;(#.01) ENTRY ID [1N]
"RTN","FBPAID3",223,0)
 .S FBARRY("PROGRAM")=$G(FBRET(161.9,FBIEN_",",".02","E")) ;
"RTN","FBPAID3",224,0)
 .S FBARRY("PROGRAM INTERNAL")=$G(FBRET(161.9,FBIEN_",",".02","I")) ;(#.02) PATIENT [2P:2]
"RTN","FBPAID3",225,0)
 .S FBARRY("FBICN")=$G(FBRET(161.9,FBIEN_",",".03","E")) ;(#.03)PROGRAM [3S]
"RTN","FBPAID3",226,0)
 .S FBARRY("PROCESS DATE")=$G(FBRET(161.9,FBIEN_",",".04","E")) ;
"RTN","FBPAID3",227,0)
 .S FBARRY("PROCESS DATE INTERNAL")=$G(FBRET(161.9,FBIEN_",",".04","I")) ;(#.04)FB INTERNAL CONTROL NUMBER [4F]
"RTN","FBPAID3",228,0)
 .S FBARRY("LI NUMBER")=$G(FBRET(161.9,FBIEN_",",".05","E")) ;(#.05) PROCESS DATE [5D] 
"RTN","FBPAID3",229,0)
 .S FBARRY("PROVIDER TYPE")=FBRET(161.9,FBIEN_",",".06","E") ;(#.06) PROVIDER TYPE [6S]
"RTN","FBPAID3",230,0)
 .S FBARRY("IBICN")=$G(FBRET(161.9,FBIEN_",",".07","E")) ;(#.07) IB NON/OTHER PNTR[7P] 
"RTN","FBPAID3",231,0)
 .S FBARRY("NPI ADDED")=$G(FBRET(161.9,FBIEN_",",".08","E"))
"RTN","FBPAID3",232,0)
 .S FBARRY("NPI ADDED INTERNAL")=$G(FBRET(161.9,FBIEN_",",".08","I")) ;(#.08) NPI ADDED [8S]
"RTN","FBPAID3",233,0)
 .S FBARRY("TXY ADDED")=$G(FBRET(161.9,FBIEN_",",".09","E")) ;
"RTN","FBPAID3",234,0)
 .S FBARRY("TXY ADDED INTERNAL")=$G(FBRET(161.9,FBIEN_",",".09","I")) ;(#.09) TAXONOMY ADDED [9S] 
"RTN","FBPAID3",235,0)
 ;
"RTN","FBPAID3",236,0)
 I 'FBOK K FBARRY
"RTN","FBPAID3",237,0)
 ;
"RTN","FBPAID3",238,0)
 Q FBOK
"RTN","FBPAID3",239,0)
 ;
"RTN","FBPAID3",240,0)
DELFB2IB(FBIEN)  ;EP FROM FBPAID3A
"RTN","FBPAID3",241,0)
 ;DELETES A RECORD FROM 161.9 FEE BASIS PAID TO IB FILE
"RTN","FBPAID3",242,0)
 ;
"RTN","FBPAID3",243,0)
 ; INPUT: FBIEN - The IEN of the FEE BASIS PAID TO IB FILE to be deleted
"RTN","FBPAID3",244,0)
 ;
"RTN","FBPAID3",245,0)
 N DIK,DA
"RTN","FBPAID3",246,0)
 S DIK="^FB(161.9,"
"RTN","FBPAID3",247,0)
 S DA=FBIEN
"RTN","FBPAID3",248,0)
 D ^DIK
"RTN","FBPAID3",249,0)
 Q
"RTN","FBPAID3",250,0)
 ;
"RTN","FBPAID3",251,0)
FBSC(FBDFN) ; returns 1 if service connection indicated, 0 otherwise (based on VAEL(3))
"RTN","FBPAID3",252,0)
 ; INPUT : FBDFN - ien to the PATIENT file
"RTN","FBPAID3",253,0)
 ;
"RTN","FBPAID3",254,0)
 ; OUTPUT : 1 if service connected, 0 if NO service connected
"RTN","FBPAID3",255,0)
 N FBX,VAEL,VAERR,DFN
"RTN","FBPAID3",256,0)
 S FBX=0
"RTN","FBPAID3",257,0)
 S DFN=FBDFN
"RTN","FBPAID3",258,0)
 I +$G(DFN) D ELIG^VADPT S FBX=$P($G(VAEL(3)),U,1)
"RTN","FBPAID3",259,0)
 Q FBX
"RTN","FBPAID3",260,0)
 ;
"RTN","FBPAID3",261,0)
GETFBINV(FBINVIEN,FBINVARY)  ;Get info about a record in FEE BASIS INVOICE file
"RTN","FBPAID3",262,0)
 ;
"RTN","FBPAID3",263,0)
 ; INPUT :FBINVIEN   the ien we wish to examine
"RTN","FBPAID3",264,0)
 ;        FBINVARY  an empty array passed by reference 
"RTN","FBPAID3",265,0)
 ;
"RTN","FBPAID3",266,0)
 ; OUTPUT : FBINVARY : populated with information about this record
"RTN","FBPAID3",267,0)
 ;
"RTN","FBPAID3",268,0)
 N FBFLDS,FBQUIT,FBLIPRV,FBERR,FBFLDS2,FBRET,FBRET2
"RTN","FBPAID3",269,0)
 ;
"RTN","FBPAID3",270,0)
 S FBQUIT=0
"RTN","FBPAID3",271,0)
 ;
"RTN","FBPAID3",272,0)
 S FBFLDS=".01;2;5;6;20;60;64;65;66;67;68;69;70;71;72;73;74;75;80;81;82;83"
"RTN","FBPAID3",273,0)
 ;(#2)VENDOR [3P:161.2] ;THIS IS OUR PRIMARY PROVIDER
"RTN","FBPAID3",274,0)
 ;(#5) TREATMENT FROM DATE [6D] ^ (#6) TREATMENT TO DATE [7D] 
"RTN","FBPAID3",275,0)
 ;(#20) BATCH NUMBER ; (#60) CONTRACT [8P:161.43] 
"RTN","FBPAID3",276,0)
 ;(#64) ATTENDING PROV NAME [1F] ^ (#65) ATTENDING PROV NPI [2F](#66) ATTENDING PROV TAXONOMY CODE [3F] ^ 
"RTN","FBPAID3",277,0)
 ;(#67) OPERATING PROV NAME [4F] ^ (#68) OPERATING PROV NPI [5F]
"RTN","FBPAID3",278,0)
 ; (#69)RENDERING PROV NAME [6F] ^ (#70) RENDERING PROV NPI [7F] ^(#71) RENDERING PROV TAXONOMY CODE [8F] 
"RTN","FBPAID3",279,0)
 ;(#72) SERVICING PROVNAME [9F] ^ (#73) SERVICING PROV NPI [10F] 
"RTN","FBPAID3",280,0)
 ;(#74) REFERRING PROV NAME [11F] ^ (#75) REFERRING PROV NPI [12F];(#80) SERVICING FACILITY ADDRESS [1F]
"RTN","FBPAID3",281,0)
 ;(#81) SERVICING FACILITY CITY [2F] ^ (#82) SERVICING FACILITY STATE [3P:5] ^ (#83) SERVICING FACILITY ZIP [4F]
"RTN","FBPAID3",282,0)
 D GETS^DIQ(162.5,FBINVIEN_",",FBFLDS,"I","FBRET","FBERR")
"RTN","FBPAID3",283,0)
 I $G(FBERR("DIERR"))'="" S FBQUIT=1
"RTN","FBPAID3",284,0)
 I 'FBQUIT D
"RTN","FBPAID3",285,0)
 .S FBINVARY("VENDOR INTERNAL")=$G(FBRET(162.5,FBINVIEN_",","2","I"))
"RTN","FBPAID3",286,0)
 .S FBINVARY("TREATMENT FROM DATE")=$G(FBRET(162.5,FBINVIEN_",","5","I"))
"RTN","FBPAID3",287,0)
 .S FBINVARY("TREATMENT TO DATE")=$G(FBRET(162.5,FBINVIEN_",","6","I"))
"RTN","FBPAID3",288,0)
 .S FBINVARY("BATCH NUMBER")=$G(FBRET(162.5,FBINVIEN_",","20","I"))
"RTN","FBPAID3",289,0)
 .S FBINVARY("CONTRACT")=$G(FBRET(162.5,FBINVIEN_",","60","I"))
"RTN","FBPAID3",290,0)
 .S FBINVARY("ATTENDING NAME")=$G(FBRET(162.5,FBINVIEN_",","64","I"))
"RTN","FBPAID3",291,0)
 .S FBINVARY("ATTENDING NPI")=$G(FBRET(162.5,FBINVIEN_",","65","I"))
"RTN","FBPAID3",292,0)
 .S FBINVARY("ATTENDING TXY")=$G(FBRET(162.5,FBINVIEN_",","66","I"))
"RTN","FBPAID3",293,0)
 .S FBINVARY("OPERATING NAME")=$G(FBRET(162.5,FBINVIEN_",","67","I"))
"RTN","FBPAID3",294,0)
 .S FBINVARY("OPERATING NPI")=$G(FBRET(162.5,FBINVIEN_",","68","I"))
"RTN","FBPAID3",295,0)
 .S FBINVARY("RENDERING NAME")=$G(FBRET(162.5,FBINVIEN_",","69","I"))
"RTN","FBPAID3",296,0)
 .S FBINVARY("RENDERING NPI")=$G(FBRET(162.5,FBINVIEN_",","70","I"))
"RTN","FBPAID3",297,0)
 .S FBINVARY("RENDERING TXY")=$G(FBRET(162.5,FBINVIEN_",","71","I"))
"RTN","FBPAID3",298,0)
 .S FBINVARY("SERVICING NAME")=$G(FBRET(162.5,FBINVIEN_",","72","I"))
"RTN","FBPAID3",299,0)
 .S FBINVARY("SERVICING NPI")=$G(FBRET(162.5,FBINVIEN_",","73","I"))
"RTN","FBPAID3",300,0)
 .S FBINVARY("REFERRING NAME")=$G(FBRET(162.5,FBINVIEN_",","74","I"))
"RTN","FBPAID3",301,0)
 .S FBINVARY("REFERRING NPI")=$G(FBRET(162.5,FBINVIEN_",","75","I"))
"RTN","FBPAID3",302,0)
 .S FBINVARY("SERVICING ADDRESS")=$G(FBRET(162.5,FBINVIEN_",","80","I"))
"RTN","FBPAID3",303,0)
 .S FBINVARY("SERVICING CITY")=$G(FBRET(162.5,FBINVIEN_",","81","I"))
"RTN","FBPAID3",304,0)
 .S FBINVARY("SERVICING STATE INT")=$G(FBRET(162.5,FBINVIEN_",","82","I"))
"RTN","FBPAID3",305,0)
 .S FBINVARY("SERVICING ZIP")=$G(FBRET(162.5,FBINVIEN_",","83","I"))
"RTN","FBPAID3",306,0)
 .;kill any existing LI info, because it may not get overwritten like the above
"RTN","FBPAID3",307,0)
 .K FBINVARY("LIRENDER NAME")
"RTN","FBPAID3",308,0)
 .K FBINVARY("LIRENDER NPI")
"RTN","FBPAID3",309,0)
 .K FBINVARY("LIRENDER TXY")
"RTN","FBPAID3",310,0)
 .;
"RTN","FBPAID3",311,0)
 .;NOW GET LI RENDERING PROVIDER INFO
"RTN","FBPAID3",312,0)
 .S FBLIPRV=0
"RTN","FBPAID3",313,0)
 .F  S FBLIPRV=$O(^FBAAI(FBINVIEN,"RPROV",FBLIPRV)) Q:'+FBLIPRV  D
"RTN","FBPAID3",314,0)
 ..S FBFLDS2=".01;.02;.03;.04"
"RTN","FBPAID3",315,0)
 ..;(#.01) LINE ITEM NUMBER [1N];(#.02) RENDERING PROV NAME [2F];(#.03) RENDERING PROV NPI [3F]
"RTN","FBPAID3",316,0)
 ..; (#.04)RENDERING PROV TAXONOMY CODE [4F] ^
"RTN","FBPAID3",317,0)
 ..D GETS^DIQ(162.579,FBLIPRV_","_FBINVIEN_",",FBFLDS2,"I","FBRET2","FBERR")  ;162.579(#79) LINE ITEM RENDERING PROV
"RTN","FBPAID3",318,0)
 ..I $G(FBERR("DIERR"))'="" S FBQUIT=1
"RTN","FBPAID3",319,0)
 ..I 'FBQUIT D
"RTN","FBPAID3",320,0)
 ...S FBINVARY("LINE ITEM NUMBER",FBLIPRV)=$G(FBRET2(162.579,FBLIPRV_","_FBINVIEN_",",".01","I"))
"RTN","FBPAID3",321,0)
 ...S FBINVARY("LIRENDER NAME",FBLIPRV)=$G(FBRET2(162.579,FBLIPRV_","_FBINVIEN_",",".02","I"))
"RTN","FBPAID3",322,0)
 ...S FBINVARY("LIRENDER NPI",FBLIPRV)=$G(FBRET2(162.579,FBLIPRV_","_FBINVIEN_",",".03","I"))
"RTN","FBPAID3",323,0)
 ...S FBINVARY("LIRENDER TXY",FBLIPRV)=$G(FBRET2(162.579,FBLIPRV_","_FBINVIEN_",",".04","I"))
"RTN","FBPAID3",324,0)
 Q 'FBQUIT
"RTN","FBPAID3",325,0)
 ;
"RTN","FBPAID3",326,0)
GETFBPAY(FBPAYIEN,FBPAYARY)  ;Get info about a record in FEE BASIS PAYMENT file
"RTN","FBPAID3",327,0)
 ;
"RTN","FBPAID3",328,0)
 ; INPUT :FBPAYIEN   a four piece string that will identify the SERVICE
"RTN","FBPAID3",329,0)
 ;        FBPAYARY  an empty array passed by reference
"RTN","FBPAID3",330,0)
 ;
"RTN","FBPAID3",331,0)
 ; OUTPUT : FBPAYARY :  populated with information about this sub-record
"RTN","FBPAID3",332,0)
 ;          0 if problems occurred, 1 otherwise
"RTN","FBPAID3",333,0)
 N FBIENS,FBFLDS,FBQUIT,FBRET,FBERR1
"RTN","FBPAID3",334,0)
 ;
"RTN","FBPAID3",335,0)
 S FBQUIT=0
"RTN","FBPAID3",336,0)
 S FBIENS=$P(FBPAYIEN,";",2)_","_$P(FBPAYIEN,";",1)_","   ;THE PATIENT:VENDOR sub-record id
"RTN","FBPAID3",337,0)
 D GETS^DIQ(162.01,FBIENS,".01","I","FBRET","FBERR1") ;162.01 FEE BASIS PAYMENT FILE:(#.01) VENDOR subrecord
"RTN","FBPAID3",338,0)
 I $G(FBERR1("DIERR"))'="" S FBQUIT=1
"RTN","FBPAID3",339,0)
 I 'FBQUIT D
"RTN","FBPAID3",340,0)
 .S FBPAYARY("VENDOR INTERNAL")=$G(FBRET(162.01,FBIENS,".01","I"))
"RTN","FBPAID3",341,0)
 .;
"RTN","FBPAID3",342,0)
 .S FBIENS=$P(FBPAYIEN,";",3)_","_FBIENS
"RTN","FBPAID3",343,0)
 .D GETS^DIQ(162.02,FBIENS,".01","I","FBRET","FBERR1") ;162.02 (#.01) INITIAL TREATMENT DATE [1D]
"RTN","FBPAID3",344,0)
 .I $G(FBERR1("DIERR"))'="" S FBQUIT=1
"RTN","FBPAID3",345,0)
 .S FBPAYARY("TREATMENT DATE")=$G(FBRET(162.02,FBIENS,".01","I"))
"RTN","FBPAID3",346,0)
 .;
"RTN","FBPAID3",347,0)
 .I 'FBQUIT D
"RTN","FBPAID3",348,0)
 ..S FBIENS=$P(FBPAYIEN,";",4)_","_FBIENS
"RTN","FBPAID3",349,0)
 ..S FBFLDS="7;54;58;59;60;61;62;63;64;65;66;67;68;69;73;74;75;76;77;78;79"
"RTN","FBPAID3",350,0)
 ..D GETS^DIQ(162.03,FBIENS,FBFLDS,"I","FBRET","FBERR1")  ;162.03  ; (#2) SERVICE PROVIDED
"RTN","FBPAID3",351,0)
 ..I $G(FBERR1("DIERR"))'="" S FBQUIT=1
"RTN","FBPAID3",352,0)
 ..Q:FBQUIT
"RTN","FBPAID3",353,0)
 ..S FBPAYARY("BATCH NUMBER")=$G(FBRET(162.03,FBIENS,"7","I"))
"RTN","FBPAID3",354,0)
 ..S FBPAYARY("LI NUMBER")=$P(FBPAYIEN,";",4)
"RTN","FBPAID3",355,0)
 ..S FBPAYARY("CONTRACT")=$G(FBRET(162.03,FBIENS,"54","I"))
"RTN","FBPAID3",356,0)
 ..S FBPAYARY("ATTENDING NAME")=$G(FBRET(162.03,FBIENS,"58","I"))
"RTN","FBPAID3",357,0)
 ..S FBPAYARY("ATTENDING NPI")=$G(FBRET(162.03,FBIENS,"59","I"))
"RTN","FBPAID3",358,0)
 ..S FBPAYARY("ATTENDING TXY")=$G(FBRET(162.03,FBIENS,"60","I"))
"RTN","FBPAID3",359,0)
 ..S FBPAYARY("OPERATING NAME")=$G(FBRET(162.03,FBIENS,"61","I"))
"RTN","FBPAID3",360,0)
 ..S FBPAYARY("OPERATING NPI")=$G(FBRET(162.03,FBIENS,"62","I"))
"RTN","FBPAID3",361,0)
 ..S FBPAYARY("RENDERING NAME")=$G(FBRET(162.03,FBIENS,"63","I"))
"RTN","FBPAID3",362,0)
 ..S FBPAYARY("RENDERING NPI")=$G(FBRET(162.03,FBIENS,"64","I"))
"RTN","FBPAID3",363,0)
 ..S FBPAYARY("RENDERING TXY")=$G(FBRET(162.03,FBIENS,"65","I"))
"RTN","FBPAID3",364,0)
 ..S FBPAYARY("SERVICING NAME")=$G(FBRET(162.03,FBIENS,"66","I"))
"RTN","FBPAID3",365,0)
 ..S FBPAYARY("SERVICING NPI")=$G(FBRET(162.03,FBIENS,"67","I"))
"RTN","FBPAID3",366,0)
 ..S FBPAYARY("REFERRING NAME")=$G(FBRET(162.03,FBIENS,"68","I"))
"RTN","FBPAID3",367,0)
 ..S FBPAYARY("REFERRING NPI")=$G(FBRET(162.03,FBIENS,"69","I"))
"RTN","FBPAID3",368,0)
 ..S FBPAYARY("LI RENDERING NAME")=$G(FBRET(162.03,FBIENS,"73","I"))
"RTN","FBPAID3",369,0)
 ..S FBPAYARY("LI RENDERING NPI")=$G(FBRET(162.03,FBIENS,"74","I"))
"RTN","FBPAID3",370,0)
 ..S FBPAYARY("LI RENDERING TXY")=$G(FBRET(162.03,FBIENS,"75","I"))
"RTN","FBPAID3",371,0)
 ..S FBPAYARY("SERVICING ADDRESS")=$G(FBRET(162.03,FBIENS,"76","I"))
"RTN","FBPAID3",372,0)
 ..S FBPAYARY("SERVICING CITY")=$G(FBRET(162.03,FBIENS,"77","I"))
"RTN","FBPAID3",373,0)
 ..S FBPAYARY("SERVICING STATE INT")=$G(FBRET(162.03,FBIENS,"78","I"))
"RTN","FBPAID3",374,0)
 ..S FBPAYARY("SERVICING ZIP")=$G(FBRET(162.03,FBIENS,"79","I"))
"RTN","FBPAID3",375,0)
 Q 'FBQUIT
"RTN","FBPAID3A")
0^9^B117117622^n/a
"RTN","FBPAID3A",1,0)
FBPAID3A ;DSS/SCR - Utilities to support FEE BASIS PAID TO IB Process ;3/28/1012
"RTN","FBPAID3A",2,0)
 ;;3.5;FEE BASIS;**135**;JAN 30, 1995;Build 3
"RTN","FBPAID3A",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBPAID3A",4,0)
 ;
"RTN","FBPAID3A",5,0)
 ;; DBIA SUPPORTED REF CHKDGT^XUSNPI
"RTN","FBPAID3A",6,0)
 Q
"RTN","FBPAID3A",7,0)
 ;
"RTN","FBPAID3A",8,0)
 ;
"RTN","FBPAID3A",9,0)
PRCFBREC(FBIEN,FBRECARY,FBARRY,FBCHECK) ;Processes one Fee Basis record
"RTN","FBPAID3A",10,0)
 ;                                       
"RTN","FBPAID3A",11,0)
 ; INPUT : FBIEN - the IEN of the FEE BASIS TO IB file line being processed
"RTN","FBPAID3A",12,0)
 ;         FBRECARY - AN array populated with information about the FEE BASIS INVOICE
"RTN","FBPAID3A",13,0)
 ;         FBARRY - An array used to update the FEE BASIS PAID TO IB file
"RTN","FBPAID3A",14,0)
 ;         FBCHECK - An array passed by reference which holds processed NPIs
"RTN","FBPAID3A",15,0)
 ;  
"RTN","FBPAID3A",16,0)
 ; OUTPUT: FBARRY populated with line item provider information
"RTN","FBPAID3A",17,0)
 ;         FBCHECK populated with information about each NPI which has been processed
"RTN","FBPAID3A",18,0)
 ;         'FBQUIT - 1 if no problems stopped processing, 0 if they did
"RTN","FBPAID3A",19,0)
 ;
"RTN","FBPAID3A",20,0)
 N FBDUZ,FBPRVTYP,FBVDRIEN,FBATDNAM,FBATDNPI,FBATDTXY,FBOPRNAM,FBOPRNPI,FBOPRTXY
"RTN","FBPAID3A",21,0)
 N FBRNDNAM,FBRNDNPI,FBRNDTXY,FBSRVNAM,FBSRVNPI,FBSRVTXY,FBREFNAM,FBREFNPI,FBREFTXY
"RTN","FBPAID3A",22,0)
 N FBLIRNAM,FBLIRNPI,FBLIRTXY
"RTN","FBPAID3A",23,0)
 N FBINFO,FBIBIEN,FBNPIFLG,FBTXYFLG,FBOK,FBQUIT,FBNIEN,FBBADNPI
"RTN","FBPAID3A",24,0)
 ;
"RTN","FBPAID3A",25,0)
 S FBQUIT=0
"RTN","FBPAID3A",26,0)
 ;
"RTN","FBPAID3A",27,0)
 S FBDUZ=$$GETFBDUZ(FBRECARY("BATCH NUMBER"))
"RTN","FBPAID3A",28,0)
 ;FIRST add the PRIMARY provider info
"RTN","FBPAID3A",29,0)
 S FBPRVTYP="1"   ;FIRST WE LOOK FOR/ADD A FACILITY PROVIDER IN THE IB FILE
"RTN","FBPAID3A",30,0)
 S FBVDRIEN=FBRECARY("VENDOR INTERNAL")
"RTN","FBPAID3A",31,0)
 I FBVDRIEN<0 S FBQUIT=1  ;if we don't have a valid VENDOR we won't be sending a bill out
"RTN","FBPAID3A",32,0)
 I 'FBQUIT D
"RTN","FBPAID3A",33,0)
 .S FBATDNAM=FBRECARY("ATTENDING NAME")
"RTN","FBPAID3A",34,0)
 .S FBOPRNAM=FBRECARY("OPERATING NAME")
"RTN","FBPAID3A",35,0)
 .S FBRNDNAM=FBRECARY("RENDERING NAME")
"RTN","FBPAID3A",36,0)
 .S FBSRVNAM=FBRECARY("SERVICING NAME")
"RTN","FBPAID3A",37,0)
 .S FBREFNAM=FBRECARY("REFERRING NAME")
"RTN","FBPAID3A",38,0)
 .S FBPRVNAM=""
"RTN","FBPAID3A",39,0)
 .S FBPRVNPI=""
"RTN","FBPAID3A",40,0)
 .S FBPRVTXY=""
"RTN","FBPAID3A",41,0)
 .S FBINFO=$$FBTOIB(FBVDRIEN,FBPRVNAM,FBPRVTYP,FBPRVNPI,FBPRVTXY,FBDUZ,.FBCHECK)
"RTN","FBPAID3A",42,0)
 .S FBIBIEN=$P(FBINFO,U,1)
"RTN","FBPAID3A",43,0)
 .S FBNPIFLG=$P(FBINFO,U,2)
"RTN","FBPAID3A",44,0)
 .S FBTXYFLG=$P(FBINFO,U,3)
"RTN","FBPAID3A",45,0)
 .S FBOK=$$UPDTONE(FBIEN,"V",FBIBIEN,FBNPIFLG,FBTXYFLG,.FBARRY)  ;UPDATES FEE BASIS PAID WITH RESULTS FOR THIS PROVIDER
"RTN","FBPAID3A",46,0)
 .Q:FBNPIFLG=0
"RTN","FBPAID3A",47,0)
 .;ADD SERVICING PROVIDER INFORMATION AS A TYPE 1 PROVIDER
"RTN","FBPAID3A",48,0)
 .I FBSRVNAM'="" D
"RTN","FBPAID3A",49,0)
 ..N FBSRVINF,FBNIEN
"RTN","FBPAID3A",50,0)
 ..S FBSRVNPI=$G(FBRECARY("SERVICING NPI"))
"RTN","FBPAID3A",51,0)
 ..S FBSRVTXY=$G(FBRECARY("SERVICING TXY"))
"RTN","FBPAID3A",52,0)
 ..S FBSRVTXY=""
"RTN","FBPAID3A",53,0)
 ..S FBSRVINF("ADDRESS")=FBRECARY("SERVICING ADDRESS")
"RTN","FBPAID3A",54,0)
 ..S FBSRVINF("CITY")=FBRECARY("SERVICING CITY")
"RTN","FBPAID3A",55,0)
 ..S FBSRVINF("STATE")=FBRECARY("SERVICING STATE INT")
"RTN","FBPAID3A",56,0)
 ..S FBSRVINF("ZIP")=FBRECARY("SERVICING ZIP")
"RTN","FBPAID3A",57,0)
 ..S FBINFO=$$FBTOIB("",FBSRVNAM,FBPRVTYP,FBSRVNPI,FBSRVTXY,FBDUZ,.FBCHECK,.FBSRVINF)
"RTN","FBPAID3A",58,0)
 ..S FBIBIEN=$P(FBINFO,U,1)  ;THIS IS "" IF NO UPDATES WERE MADE, the IB record if it was found/updated
"RTN","FBPAID3A",59,0)
 ..S FBNPIFLG=$P(FBINFO,U,2)
"RTN","FBPAID3A",60,0)
 ..S FBTXYFLG=$P(FBINFO,U,3)
"RTN","FBPAID3A",61,0)
 ..S FBNIEN=$$ADD5010(FBARRY("PROGRAM INTERNAL"),FBARRY("FBICN"),FBARRY("PATIENT INTERNAL"),FBARRY("PROCESS DATE INTERNAL"),FBARRY("LI NUMBER"))
"RTN","FBPAID3A",62,0)
 ..Q:'+FBNIEN
"RTN","FBPAID3A",63,0)
 ..S FBOK=$$UPDTONE(FBNIEN,"S",FBIBIEN,FBNPIFLG,FBTXYFLG,.FBARRY)  ;UPDATES FEE BASIS PAID WITH RESULTS FOR THIS PROVIDER
"RTN","FBPAID3A",64,0)
 .;MAKE A TYPE "2" PROVIDER ENTRY FOR EACH 5010 PROVIDER EXCEPT SERVICING
"RTN","FBPAID3A",65,0)
 .S FBPRVTYP="2"  ;AN INDIVIDUAL TYPE PROVIDER IN THE IB NON/OTHER VA BILLING PROVIDER FILE
"RTN","FBPAID3A",66,0)
 .I FBATDNAM'="" D
"RTN","FBPAID3A",67,0)
 ..S FBATDNPI=FBRECARY("ATTENDING NPI")
"RTN","FBPAID3A",68,0)
 ..S FBATDTXY=FBRECARY("ATTENDING TXY")
"RTN","FBPAID3A",69,0)
 ..S FBOK=$$TYPETWO("A",FBATDNAM,FBATDNPI,FBATDTXY,FBDUZ,.FBARRAY,.FBCHECK)
"RTN","FBPAID3A",70,0)
 .I FBOPRNAM'="" D
"RTN","FBPAID3A",71,0)
 ..S FBOPRNPI=FBRECARY("OPERATING NPI")
"RTN","FBPAID3A",72,0)
 ..S FBOPRTXY=""
"RTN","FBPAID3A",73,0)
 ..S FBOK=$$TYPETWO("O",FBOPRNAM,FBOPRNPI,FBOPRTXY,FBDUZ,.FBARRAY,.FBCHECK)
"RTN","FBPAID3A",74,0)
 .I FBRNDNAM'="" D
"RTN","FBPAID3A",75,0)
 ..S FBRNDNPI=FBRECARY("RENDERING NPI")
"RTN","FBPAID3A",76,0)
 ..S FBRNDTXY=FBRECARY("RENDERING TXY")
"RTN","FBPAID3A",77,0)
 ..S FBOK=$$TYPETWO("R",FBRNDNAM,FBRNDNPI,FBRNDTXY,FBDUZ,.FBARRAY,.FBCHECK)
"RTN","FBPAID3A",78,0)
 .I FBREFNAM'="" D
"RTN","FBPAID3A",79,0)
 ..S FBREFNPI=FBRECARY("REFERRING NPI")
"RTN","FBPAID3A",80,0)
 ..S FBREFTXY=""
"RTN","FBPAID3A",81,0)
 ..S FBOK=$$TYPETWO("F",FBREFNAM,FBREFNPI,FBREFTXY,FBDUZ,.FBARRAY,.FBCHECK)
"RTN","FBPAID3A",82,0)
 .I FBARRY("PROGRAM INTERNAL")=3  D
"RTN","FBPAID3A",83,0)
 ..;ADD LINE ITEM RENDERING PROVIDER FOR OUPATIENT
"RTN","FBPAID3A",84,0)
 ..S FBLIRNAM=FBRECARY("LI RENDERING NAME")
"RTN","FBPAID3A",85,0)
 ..S FBLIRNPI=FBRECARY("LI RENDERING NPI")
"RTN","FBPAID3A",86,0)
 ..S FBLIRTXY=FBRECARY("LI RENDERING TXY")
"RTN","FBPAID3A",87,0)
 ..I FBLIRNAM'="" S FBOK=$$TYPETWO("L",FBLIRNAM,FBLIRNPI,FBLIRTXY,FBDUZ,.FBARRAY,.FBCHECK)
"RTN","FBPAID3A",88,0)
 .I FBARRY("PROGRAM INTERNAL")=9 D
"RTN","FBPAID3A",89,0)
 ..;ADD A LINE FOR EACH INPATIENT LINE ITEM RENDERING INFO
"RTN","FBPAID3A",90,0)
 ..S FBLINUM=0
"RTN","FBPAID3A",91,0)
 ..F  S FBLINUM=$O(FBRECARY("LIRENDER NAME",FBLINUM)) Q:FBLINUM=""  D
"RTN","FBPAID3A",92,0)
 ...S FBLIRNAM=$G(FBRECARY("LIRENDER NAME",FBLINUM))
"RTN","FBPAID3A",93,0)
 ...S FBLIRNPI=$G(FBRECARY("LIRENDER NPI",FBLINUM))
"RTN","FBPAID3A",94,0)
 ...S FBLIRTXY=$G(FBRECARY("LIRENDER TXY",FBLINUM))
"RTN","FBPAID3A",95,0)
 ...S FBARRY("LI NUMBER")=$G(FBRECARY("LINE ITEM NUMBER",FBLINUM))
"RTN","FBPAID3A",96,0)
 ...S FBOK=$$TYPETWO("L",FBLIRNAM,FBLIRNPI,FBLIRTXY,FBDUZ,.FBARRAY,.FBCHECK)
"RTN","FBPAID3A",97,0)
 Q 'FBQUIT
"RTN","FBPAID3A",98,0)
 ;
"RTN","FBPAID3A",99,0)
UPDTONE(FBIEN,FBTYP,FBIBICN,FBNPIFLG,FBTXYFLG,FBARRY)  ;UPDATES a record in 161.9
"RTN","FBPAID3A",100,0)
 ;
"RTN","FBPAID3A",101,0)
 ; INPUT FBIEN : IEN OF FEE BASIS PAID TO IB file being updated
"RTN","FBPAID3A",102,0)
 ;       FBTYP: INTERNAL value of set of codes identifying provider type
"RTN","FBPAID3A",103,0)
 ;       FBIBICN  : IEN OF IB NON/VA OTHER BILLING PROVIDER file that was added or looked up
"RTN","FBPAID3A",104,0)
 ;
"RTN","FBPAID3A",105,0)
 ;       FBNPIFLG : '0' FOR NO NPI DATA PROVIDED;
"RTN","FBPAID3A",106,0)
 ;                  '1' FOR NPI DATA INVALID;
"RTN","FBPAID3A",107,0)
 ;                  '2' FOR NPI MATCHED ACTIVE, NO UPDATES;
"RTN","FBPAID3A",108,0)
 ;                  '3' FOR NPI MATCHED ACTIVE, IB UPDATED;
"RTN","FBPAID3A",109,0)
 ;                  '4' FOR NPI MATCHED INACTIVE, NO UPDATES;
"RTN","FBPAID3A",110,0)
 ;                  '5' FOR NPI NEW, IB RECORD CREATED;
"RTN","FBPAID3A",111,0)
 ;
"RTN","FBPAID3A",112,0)
 ;       FBTXYFLG : '0' FOR NO TXY UPDATES ATTEMPTED;
"RTN","FBPAID3A",113,0)
 ;                  '1' FOR TXY CODE NOT FOUND IN 8932.1;
"RTN","FBPAID3A",114,0)
 ;                  '2' FOR MATCHED PRIMARY,NO UPDATES;
"RTN","FBPAID3A",115,0)
 ;                  '3' FOR MATCHED NON-PRIMARY, IB TXY UPDATES;
"RTN","FBPAID3A",116,0)
 ;                  '4' FOR NEW, IB TXY ENTRY CREATED;
"RTN","FBPAID3A",117,0)
 ;
"RTN","FBPAID3A",118,0)
 ;       FBARRY : ARRAY populated with initial values from lookup
"RTN","FBPAID3A",119,0)
 ;
"RTN","FBPAID3A",120,0)
 N FBOK,FBERR
"RTN","FBPAID3A",121,0)
 ;
"RTN","FBPAID3A",122,0)
 S FBARRY("PROVIDER TYPE")=FBTYP ; INTERNAL CODE FOR PRIMARY
"RTN","FBPAID3A",123,0)
 S FBARRY("IBICN")=$G(FBIBICN)   ;CAN BE NULL
"RTN","FBPAID3A",124,0)
 S FBARRY("NPI ADDED")=FBNPIFLG ;
"RTN","FBPAID3A",125,0)
 S FBARRY("TXY ADDED")=FBTXYFLG ;
"RTN","FBPAID3A",126,0)
 S FBOK=$$SETFB2IB^FBPAID3(FBIEN,.FBARRY)
"RTN","FBPAID3A",127,0)
 Q FBOK
"RTN","FBPAID3A",128,0)
 ;
"RTN","FBPAID3A",129,0)
FBTOIB(FBVDRIEN,FBPRVNAM,FBPRVTYP,FBPRVNPI,FBPRVTXY,FBDUZ,FBCHECK,FBSRVINF)   ;
"RTN","FBPAID3A",130,0)
 ; PROCESSES information about one FB PROVIDER
"RTN","FBPAID3A",131,0)
 ;
"RTN","FBPAID3A",132,0)
 ; INPUTS  :  FBVDRIEN  : AN IEN to FEE BASIS VENDOR FILE
"RTN","FBPAID3A",133,0)
 ;            FBPRVNAM  : A STRING OF TEXT FROM FB FILES REPRESENTING THE PROVIDER NAME
"RTN","FBPAID3A",134,0)
 ;            FBPRVTYP  : "1" FOR FACILITY TYPE PROVIDER ;  "2" FOR INDIVIDUAL
"RTN","FBPAID3A",135,0)
 ;            FBPRVNPI  : A STRING OF TEXT FROM FB FILES REPRESENTING THE PROVIDER NPI
"RTN","FBPAID3A",136,0)
 ;            FBPRVTXY  : A STRING OF TEXT FROM FB FILES REPRESENTING A SUPPORTING PROVIDER TAXONOMY CODE
"RTN","FBPAID3A",137,0)
 ;            FBDUZ     ; FB USER DUZ WHO LAST UPDATED THE FB FILE INFO IS COMING FROM
"RTN","FBPAID3A",138,0)
 ;            FBSRVINF  : AN ARRAY OF INFORMATION FOR A SERVICING PROVIDER (TYPE 1) 
"RTN","FBPAID3A",139,0)
 ;                            WILL BE NULL UNLESS THIS IS BEING CALLED TO ADD A SERVICING PROVIDER
"RTN","FBPAID3A",140,0)
 ;
"RTN","FBPAID3A",141,0)
 ;            FBCHECK   ; AN ARRAY OF NPIs that have been previously examined for this date
"RTN","FBPAID3A",142,0)
 ;
"RTN","FBPAID3A",143,0)
 ; OUTPUT :    A three piece string with information about how attempted updates went
"RTN","FBPAID3A",144,0)
 ;        :    FBCHECK will contain information about NPIs that are 'new' for this date
"RTN","FBPAID3A",145,0)
 ;
"RTN","FBPAID3A",146,0)
 N FBQUIT,FBRTRN,FBIBIEN,FBIENS,FBFLDS,FBFLGS,FBINDX,FBSCRN,FBIDNT,FBINFO,FBBADNPI,FBNEW,FBRETRN
"RTN","FBPAID3A",147,0)
 ;
"RTN","FBPAID3A",148,0)
 S FBINFO("FBPRVTYP")=FBPRVTYP   ;"1" OR "2" for IB FACILITY or IB INDIVIDUAL
"RTN","FBPAID3A",149,0)
 S FBQUIT=0
"RTN","FBPAID3A",150,0)
 S FBIBIEN=-1
"RTN","FBPAID3A",151,0)
 I FBPRVNAM="" D
"RTN","FBPAID3A",152,0)
 .I '+FBVDRIEN S FBPRVTYP=-1
"RTN","FBPAID3A",153,0)
 I FBPRVNAM'="" D
"RTN","FBPAID3A",154,0)
 .I ($L($G(FBPRVNAM))>30) S FBPRVNAM=$E(FBPRVNAM,1,30)
"RTN","FBPAID3A",155,0)
 .I ($L($G(FBPRVNAM))<3) S FBPRVTYP=-1  ;
"RTN","FBPAID3A",156,0)
 S FBINFO("FB SUP DUZ")=FBDUZ
"RTN","FBPAID3A",157,0)
 S FBINFO("NAME")=FBPRVNAM
"RTN","FBPAID3A",158,0)
 I (FBPRVTYP="1") D
"RTN","FBPAID3A",159,0)
 .I FBVDRIEN'="" D
"RTN","FBPAID3A",160,0)
 ..;LOOK UP THE PROVIDER IN THE FEE BASIS VENDOR FILE
"RTN","FBPAID3A",161,0)
 ..;(#.01) NAME [1F] ^ (#1) ID NUMBER [2F] ^ (#2) STREET ADDRESS[3F] ^(#2.5) STREET ADDRESS 2 [14F]
"RTN","FBPAID3A",162,0)
 ..;^ (#3) CITY [4F] ^ (#4) STATE [5P:5] ^ (#5) ZIP CODE [6F]^(#14) PHONE NUMBER [1F] ;(#41.01) NPI (#42) TAXONOMY CODE [3F]
"RTN","FBPAID3A",163,0)
 ..I '+FBVDRIEN S FBPRVTYP=-1 Q
"RTN","FBPAID3A",164,0)
 ..S FBFLDS=".01;1;2;2.5;3;4;5;14;41.01;42"
"RTN","FBPAID3A",165,0)
 ..D GETS^DIQ(161.2,FBVDRIEN_",",FBFLDS,"IE","FBRTRN","FBERR")  ;161.2  ;FEE BASIS VENDOR
"RTN","FBPAID3A",166,0)
 ..I $G(FBERR("DIERR"))'="" S FBPRVTYP=-1 Q
"RTN","FBPAID3A",167,0)
 ..S FBINFO("NAME")=$G(FBRTRN(161.2,FBVDRIEN_",",".01","I"))
"RTN","FBPAID3A",168,0)
 ..I $L(FBINFO("NAME"))>30 S FBINFO("NAME")=$E(FBINFO("NAME"),1,30)
"RTN","FBPAID3A",169,0)
 ..S FBPRVNAM=FBINFO("NAME")
"RTN","FBPAID3A",170,0)
 ..S FBINFO("FBFACID")=$G(FBRTRN(161.2,FBVDRIEN_",","1","I"))
"RTN","FBPAID3A",171,0)
 ..S FBINFO("FBADD1")=$G(FBRTRN(161.2,FBVDRIEN_",","2","I"))
"RTN","FBPAID3A",172,0)
 ..S FBINFO("FBADD2")=$G(FBRTRN(161.2,FBVDRIEN_",","2.5","I"))
"RTN","FBPAID3A",173,0)
 ..S FBINFO("FBCITY")=$G(FBRTRN(161.2,FBVDRIEN_",","3","I"))
"RTN","FBPAID3A",174,0)
 ..S FBINFO("FBSTATE")=$G(FBRTRN(161.2,FBVDRIEN_",","4","E"))
"RTN","FBPAID3A",175,0)
 ..S FBINFO("FBSTATE INT")=$G(FBRTRN(161.2,FBVDRIEN_",","4","I"))  ;this is pointer to state file
"RTN","FBPAID3A",176,0)
 ..S FBINFO("FBZIP")=$G(FBRTRN(161.2,FBVDRIEN_",","5","I"))
"RTN","FBPAID3A",177,0)
 ..S FBINFO("FBPHONE")=$G(FBRTRN(161.2,FBVDRIEN_",","14","I"))
"RTN","FBPAID3A",178,0)
 ..S FBINFO("FBNPI")=$G(FBRTRN(161.2,FBVDRIEN_",","41.01","I"))
"RTN","FBPAID3A",179,0)
 ..S FBINFO("FBTXY")=$G(FBRTRN(161.2,FBVDRIEN_",","42","I"))
"RTN","FBPAID3A",180,0)
 ..S FBINFO("IB TYPE")=1
"RTN","FBPAID3A",181,0)
 .I FBVDRIEN="" D 
"RTN","FBPAID3A",182,0)
 ..;ADDING A SERVICING PROVIDER with address info from the FEE BASIS INVOICE or PAYMENT file
"RTN","FBPAID3A",183,0)
 ..S FBINFO("FBADD1")=$G(FBSRVINF("ADDRESS"))
"RTN","FBPAID3A",184,0)
 ..S FBINFO("FBADD2")=""
"RTN","FBPAID3A",185,0)
 ..S FBINFO("FBCITY")=$G(FBSRVINF("CITY"))
"RTN","FBPAID3A",186,0)
 ..S FBINFO("FBSTATE INT")=$G(FBSRVINF("STATE"))  ;this is pointer to state file
"RTN","FBPAID3A",187,0)
 ..S FBINFO("FBZIP")=$G(FBSRVINF("ZIP"))
"RTN","FBPAID3A",188,0)
 ..S FBINFO("FBNPI")=$G(FBPRVNPI)
"RTN","FBPAID3A",189,0)
 ..S FBINFO("FBTXY")=$G(FBPRVTXY)
"RTN","FBPAID3A",190,0)
 ..S FBINFO("IB TYPE")=1
"RTN","FBPAID3A",191,0)
 .S FBPRVNPI=FBINFO("FBNPI")
"RTN","FBPAID3A",192,0)
 .S FBPRVTXY=FBINFO("FBTXY")
"RTN","FBPAID3A",193,0)
 .;Check to see if NPI has been processed for this process date
"RTN","FBPAID3A",194,0)
 .I $G(FBPRVNPI)="" S FBPRVNPI=0
"RTN","FBPAID3A",195,0)
 .I $G(FBCHECK(FBPRVNPI))'="" D
"RTN","FBPAID3A",196,0)
 ..S:$P(FBCHECK(FBPRVNPI),U,2)'=1 FBNEW=$P(FBCHECK(FBPRVNPI),U,1)_"^0^0" ;IBRECORD^NO UPDATES ATTEMPTED ^ NO TXY UPDATES ATTEMPTED
"RTN","FBPAID3A",197,0)
 ..S:$P(FBCHECK(FBPRVNPI),U,2)'=1 FBNEW=FBCHECK(FBPRVNPI)  ; "^1^0" ;NPI INVALID, no IB record
"RTN","FBPAID3A",198,0)
 .Q:$G(FBNEW)'=""
"RTN","FBPAID3A",199,0)
 .S FBBADNPI=0
"RTN","FBPAID3A",200,0)
 .S:$G(FBPRVNPI)="" FBPRVNPI=0
"RTN","FBPAID3A",201,0)
 .Q:$G(FBPRVNPI)=""
"RTN","FBPAID3A",202,0)
 .I $L(FBPRVNPI)>10!($L(FBPRVNPI)<10)!('$$CHKDGT^XUSNPI(FBPRVNPI)) S FBBADNPI=1
"RTN","FBPAID3A",203,0)
 .I 'FBBADNPI D 
"RTN","FBPAID3A",204,0)
 ..D EPFBAPI^IBCEP8C(.FBINFO,.FBRETRN)  ;compares/updates 355.93 -- IB NON/OTHER VA BILLING PROVIDER FILE
"RTN","FBPAID3A",205,0)
 ..S FBNEW=FBRETRN(1)_"^"_FBRETRN(2)_"^"_FBRETRN(3)
"RTN","FBPAID3A",206,0)
 .I FBBADNPI S FBNEW="^1^0"
"RTN","FBPAID3A",207,0)
 .S FBCHECK(FBPRVNPI)=FBNEW
"RTN","FBPAID3A",208,0)
 I FBPRVTYP="2" D
"RTN","FBPAID3A",209,0)
 .;NO LOOK UP TO FB FILES OCCURS- THIS IS NOT A BILLING PROVIDER AND WON'T BE IN THE FEE BASIS VENDOR FILE
"RTN","FBPAID3A",210,0)
 .S FBINFO("NAME")=FBPRVNAM
"RTN","FBPAID3A",211,0)
 .S FBINFO("FBNPI")=FBPRVNPI
"RTN","FBPAID3A",212,0)
 .S FBINFO("FBTXY")=FBPRVTXY
"RTN","FBPAID3A",213,0)
 .S FBINFO("IB TYPE")=2
"RTN","FBPAID3A",214,0)
 .I $G(FBPRVNPI)="" S FBPRVNPI=0
"RTN","FBPAID3A",215,0)
 .I $G(FBCHECK(FBPRVNPI))'="" S FBNEW=$G(FBCHECK(FBPRVNPI))
"RTN","FBPAID3A",216,0)
 .I $G(FBNEW)="" D
"RTN","FBPAID3A",217,0)
 ..S FBBADNPI=0
"RTN","FBPAID3A",218,0)
 ..I $L(FBPRVNPI)>10!($L(FBPRVNPI)<10)!('$$CHKDGT^XUSNPI(FBPRVNPI)) S FBBADNPI=1
"RTN","FBPAID3A",219,0)
 ..I 'FBBADNPI D
"RTN","FBPAID3A",220,0)
 ...D EPFBAPI^IBCEP8C(.FBINFO,.FBRETRN)  ;compares/updates 355.93 -- IB NON/OTHER VA BILLING PROVIDER FILE
"RTN","FBPAID3A",221,0)
 ...S:FBRETRN(1)'="" FBNEW=FBRETRN(1)_"^"_FBRETRN(2)_"^"_FBRETRN(3)
"RTN","FBPAID3A",222,0)
 ...S:FBRETRN(1)="" FBNEW="^0^0"   ;problems adding or finding provider, so no other updates attempted
"RTN","FBPAID3A",223,0)
 ..I FBBADNPI S FBNEW="^1^0"
"RTN","FBPAID3A",224,0)
 .Q:FBBADNPI
"RTN","FBPAID3A",225,0)
 S:FBPRVTYP=-1 FBNEW="^0^0"  ;
"RTN","FBPAID3A",226,0)
 Q FBNEW   ;A THREE PIECE STRING OF INFORMATION ABOUT HOW UPDATES WENT
"RTN","FBPAID3A",227,0)
 ;
"RTN","FBPAID3A",228,0)
ADD5010(FBPROG,FBICN,FBPAT,FBDATE,FBLINUM) ;EP FROM FBPAID AND FBPAID3A
"RTN","FBPAID3A",229,0)
 ; INPUT  : 
"RTN","FBPAID3A",230,0)
 ;          FBPROG : "3" FOR OUTPATIENT, "9" FOR INPATIENT
"RTN","FBPAID3A",231,0)
 ;          FBICN  : A FOUR PIECE ';' DELIMITED STRING
"RTN","FBPAID3A",232,0)
 ;          FBPAT  : POINTER TO THE PATIENT FILE
"RTN","FBPAID3A",233,0)
 ;          FBDATE : DATE OF MM MESSAGE FROM CENTRAL FEE PROCESSING
"RTN","FBPAID3A",234,0)
 ;
"RTN","FBPAID3A",235,0)
 ; OUPUT  : ien of new entry or -1 if problems occur
"RTN","FBPAID3A",236,0)
 ;
"RTN","FBPAID3A",237,0)
 N FBARRY,FBOK,FBERR
"RTN","FBPAID3A",238,0)
 ;
"RTN","FBPAID3A",239,0)
 S FBARRY("PATIENT")=FBPAT  ;INTERNAL
"RTN","FBPAID3A",240,0)
 S FBARRY("PROGRAM")=FBPROG
"RTN","FBPAID3A",241,0)
 I $G(FBPROG)=3 D
"RTN","FBPAID3A",242,0)
 .S FBARRY("FBICN")=FBICN
"RTN","FBPAID3A",243,0)
 .S FBARRY("LI NUMBER")=FBLINUM
"RTN","FBPAID3A",244,0)
 I $G(FBPROG)=9 D
"RTN","FBPAID3A",245,0)
 .S FBARRY("FBICN")=FBICN
"RTN","FBPAID3A",246,0)
 S FBARRY("PROCESS DATE")=FBDATE   ;INTERNAL Date message started getting processed
"RTN","FBPAID3A",247,0)
 S FBOK=$$SETFB2IB^FBPAID3("",.FBARRY)  ;returns the ien of a new line, or -1
"RTN","FBPAID3A",248,0)
 Q FBOK
"RTN","FBPAID3A",249,0)
 ;
"RTN","FBPAID3A",250,0)
TYPETWO(FB5010TYP,FBPRVNAM,FBPRVNPI,FBPRVTXY,FBDUZ,FBARRAY,FBCHECK)   ;process IB INDIVIDUAL providers
"RTN","FBPAID3A",251,0)
 ; Validates NPI information for IB INDIVIDUAL (type 2) providers, and calls the IBAPI if the NPI is
"RTN","FBPAID3A",252,0)
 ;    valid and has not already been processed for the current processing date.
"RTN","FBPAID3A",253,0)
 ;
"RTN","FBPAID3A",254,0)
 ; Updates the FEE BASIS PAID TO IB file with the results of validation/update
"RTN","FBPAID3A",255,0)
 ;
"RTN","FBPAID3A",256,0)
 ; INPUT  :   FB5010TYP ('A','O','R','S','F','L')
"RTN","FBPAID3A",257,0)
 ;            FBPRVNAM   - The name of a type 2 provider
"RTN","FBPAID3A",258,0)
 ;            FBPRVNPI  - The NPI of a type 2 provider
"RTN","FBPAID3A",259,0)
 ;            FBPRVTXY  - Taxonomy code of a type 2 provider (can be null)
"RTN","FBPAID3A",260,0)
 ;            FBDUZ      - IEN of supervisor who validated batch the fee basis record is in
"RTN","FBPAID3A",261,0)
 ;            FBARRAY  - an array of information about the fee basis record being processed
"RTN","FBPAID3A",262,0)
 ;            FBCHECK - an array of information about NPIs which have already been dealt with
"RTN","FBPAID3A",263,0)
 ;
"RTN","FBPAID3A",264,0)
 ;  OUTPUT : FBCHECK is updated with information about any NPI which is not already represented
"RTN","FBPAID3A",265,0)
 ;           FBOK - IEN of record added or -1 if problems occurred
"RTN","FBPAID3A",266,0)
 ;
"RTN","FBPAID3A",267,0)
 N FBBADNPI,FBIBIEN2,FBNPIFLG,FBTXYFLG,FBNIEN,FBOK
"RTN","FBPAID3A",268,0)
 ;
"RTN","FBPAID3A",269,0)
 S FBIBIEN2=""
"RTN","FBPAID3A",270,0)
 S FBBADNPI=0
"RTN","FBPAID3A",271,0)
 S FBOK=0
"RTN","FBPAID3A",272,0)
 S:$G(FBPRVNPI)="" FBPRVNPI=0
"RTN","FBPAID3A",273,0)
 I $G(FBCHECK(FBPRVNPI))'="" D
"RTN","FBPAID3A",274,0)
 .S FBIBIEN2=$P($G(FBCHECK(FBPRVNPI)),U,1)  ;a record we found or added tonight or NULL
"RTN","FBPAID3A",275,0)
 .S:$P($G(FBCHECK(FBPRVNPI)),U,2)'=1 FBNPIFLG=0   ;NO NPI UPDATES ATTEMPTED
"RTN","FBPAID3A",276,0)
 .S:$P($G(FBCHECK(FBPRVNPI)),U,2)=1 FBNPIFLG=1  ;NPI INVALID
"RTN","FBPAID3A",277,0)
 .S FBTXYFLG=0   ; NO TXY UPDATES ATTEMPTED
"RTN","FBPAID3A",278,0)
 I $G(FBCHECK(FBPRVNPI))="" D
"RTN","FBPAID3A",279,0)
 .I $L(FBPRVNPI)>10!($L(FBPRVNPI)<10)!('$$CHKDGT^XUSNPI(FBPRVNPI)) S FBBADNPI=1
"RTN","FBPAID3A",280,0)
 .I FBBADNPI S FBCHECK(FBPRVNPI)="^1^0"   ;INVALID NPI
"RTN","FBPAID3A",281,0)
 .I 'FBBADNPI S FBCHECK(FBPRVNPI)=$$FBTOIB("",FBPRVNAM,2,FBPRVNPI,FBPRVTXY,FBDUZ,.FBCHECK)
"RTN","FBPAID3A",282,0)
 .S FBIBIEN2=$P($G(FBCHECK(FBPRVNPI)),U,1)
"RTN","FBPAID3A",283,0)
 .S FBNPIFLG=$P($G(FBCHECK(FBPRVNPI)),U,2)
"RTN","FBPAID3A",284,0)
 .S FBTXYFLG=$P($G(FBCHECK(FBPRVNPI)),U,3)
"RTN","FBPAID3A",285,0)
 S FBNIEN=$$ADD5010(FBARRY("PROGRAM INTERNAL"),FBARRY("FBICN"),FBARRY("PATIENT INTERNAL"),FBARRY("PROCESS DATE INTERNAL"),FBARRY("LI NUMBER"))
"RTN","FBPAID3A",286,0)
 S:'+FBNIEN FBOK=-1
"RTN","FBPAID3A",287,0)
 S:FBOK'=-1 FBOK=$$UPDTONE(FBNIEN,FB5010TYP,FBIBIEN2,FBNPIFLG,FBTXYFLG,.FBARRY)  ;UPDATES FEE BASIS PAID WITH RESULTS FOR THIS PROVIDER
"RTN","FBPAID3A",288,0)
 Q FBOK
"RTN","FBPAID3A",289,0)
 ;
"RTN","FBPAID3A",290,0)
GETFBDUZ(FBBTCH) ;returns an IEN from NEW PERSON file
"RTN","FBPAID3A",291,0)
 ;INPUT FBBTCH : the internal number of the FEE BASIS BATCH that the invoice is part of
"RTN","FBPAID3A",292,0)
 ;
"RTN","FBPAID3A",293,0)
 ; OUTPUT : the IEN of the NEW PERSON file for SUPERVISOR WHO CERTIFIED this batch
"RTN","FBPAID3A",294,0)
 ;
"RTN","FBPAID3A",295,0)
 N FBDUZ
"RTN","FBPAID3A",296,0)
 ;
"RTN","FBPAID3A",297,0)
 S FBIENS=FBBTCH_","
"RTN","FBPAID3A",298,0)
 S FBDUZ=$$GET1^DIQ(161.7,FBBTCH_",",6,"I","","")   ;FEE BASIS BATCH FILE (#6) SUPERVISOR WHO CERTIFIED [7P:200]
"RTN","FBPAID3A",299,0)
 Q FBDUZ
"RTN","FBPAID3B")
0^14^B52284307^n/a
"RTN","FBPAID3B",1,0)
FBPAID3B ;DSS/SCR - Utilities to support FEE BASIS PAID TO IB Process ;3/28/1012
"RTN","FBPAID3B",2,0)
 ;;3.5;FEE BASIS;**135**;JAN 30, 1995;Build 3
"RTN","FBPAID3B",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBPAID3B",4,0)
 ;
"RTN","FBPAID3B",5,0)
 Q
"RTN","FBPAID3B",6,0)
 ;
"RTN","FBPAID3B",7,0)
EPFBPRV()  ;EP FROM OPTION [FB PROVIDER TO IB]
"RTN","FBPAID3B",8,0)
 ;
"RTN","FBPAID3B",9,0)
 ;REPORTING OPTION FOR FB PAID TO IB AUTOMATIC INTERFACE TO IB NON/OTHER VA BILLING PROVIDER FILE
"RTN","FBPAID3B",10,0)
 ;
"RTN","FBPAID3B",11,0)
 N DUOUT,DIRUT,DTOUT,FBQUIT,DIR,FBFROM,FBTO,FBDATE,FBIEN,FBNODE,FBPROG,FBNPI,FBNPISRT,Y,X1,X2,X,FBQUIT1
"RTN","FBPAID3B",12,0)
 N FBTODATE
"RTN","FBPAID3B",13,0)
 ;
"RTN","FBPAID3B",14,0)
 S FBQUIT1=0
"RTN","FBPAID3B",15,0)
 F  Q:FBQUIT1  D
"RTN","FBPAID3B",16,0)
 .K ^TMP($J,"FBPAID3B")
"RTN","FBPAID3B",17,0)
 .S FBQUIT=0
"RTN","FBPAID3B",18,0)
 .D CLEAR()
"RTN","FBPAID3B",19,0)
 .S DIR("A")="ENTER FIRST date to include in reports"
"RTN","FBPAID3B",20,0)
 .S DIR(0)="D"
"RTN","FBPAID3B",21,0)
 .D ^DIR
"RTN","FBPAID3B",22,0)
 .I $D(DUOUT) S FBQUIT1=1  ;DEFINED IF USER ENTERS ONE UP ARROW
"RTN","FBPAID3B",23,0)
 .I $D(DIRUT) S FBQUIT1=1  ;DEFINED IF USER ENTERS TWO UP ARROWS
"RTN","FBPAID3B",24,0)
 .I $D(DTOUT) S FBQUIT1=1  ;DEFINED IF USER TIMES OUT
"RTN","FBPAID3B",25,0)
 .W:'FBQUIT1 " "_Y(0)
"RTN","FBPAID3B",26,0)
 .I 'FBQUIT1 D
"RTN","FBPAID3B",27,0)
 ..S FBFROM=+Y
"RTN","FBPAID3B",28,0)
 ..S DIR("A")="ENTER LAST date to include in reports"
"RTN","FBPAID3B",29,0)
 ..S DIR(0)="D"
"RTN","FBPAID3B",30,0)
 ..D ^DIR
"RTN","FBPAID3B",31,0)
 ..I $D(DUOUT) S FBQUIT1=1  ;DEFINED IF USER ENTERS ONE UP ARROW
"RTN","FBPAID3B",32,0)
 ..I $D(DIRUT) S FBQUIT1=1  ;DEFINED IF USER ENTERS TWO UP ARROWS
"RTN","FBPAID3B",33,0)
 ..I $D(DTOUT) S FBQUIT1=1  ;DEFINED IF USER TIMES OUT
"RTN","FBPAID3B",34,0)
 ..W:'FBQUIT1 " "_Y(0)
"RTN","FBPAID3B",35,0)
 .I 'FBQUIT1 D 
"RTN","FBPAID3B",36,0)
 ..S FBTO=+Y
"RTN","FBPAID3B",37,0)
 ..S X1=FBFROM
"RTN","FBPAID3B",38,0)
 ..S X2=-1
"RTN","FBPAID3B",39,0)
 ..D C^%DTC  ;SUBTRACT ONE DAY FROM THE 'START' DATE FOR $O
"RTN","FBPAID3B",40,0)
 ..S FBDATE=X
"RTN","FBPAID3B",41,0)
 ..;FIRST GATHER THE SORTED DATA TO BE REPORTED IN A TMP ARRAY
"RTN","FBPAID3B",42,0)
 ..F  S FBDATE=$O(^FB(161.9,"AC",FBDATE)) Q:(FBDATE>FBTO)!(FBDATE="")  D
"RTN","FBPAID3B",43,0)
 ...S FBIEN=0
"RTN","FBPAID3B",44,0)
 ...F  S FBIEN=$O(^FB(161.9,"AC",FBDATE,FBIEN)) Q:FBIEN=""  D
"RTN","FBPAID3B",45,0)
 ....S FBNODE=^FB(161.9,FBIEN,0)
"RTN","FBPAID3B",46,0)
 ....S FBPROG=$P(FBNODE,U,2)
"RTN","FBPAID3B",47,0)
 ....S FBNPI=$P(FBNODE,U,8)
"RTN","FBPAID3B",48,0)
 ....S:FBNPI'="" ^TMP($J,"FBPAID3B",FBDATE,FBPROG,FBNPI,FBIEN)=FBNODE   ;only include processed records
"RTN","FBPAID3B",49,0)
 ..I '$D(^TMP($J,"FBPAID3B")) W !,"No Processed Entries in Date Range" Q
"RTN","FBPAID3B",50,0)
 ..;NOW SET UP FILTERING IN A LOOP so more than one report can be generated from it
"RTN","FBPAID3B",51,0)
 ..F  Q:FBQUIT  D
"RTN","FBPAID3B",52,0)
 ...D CLEAR()
"RTN","FBPAID3B",53,0)
 ...S DIR("A")="SELECT PROGRAM TYPE to include"
"RTN","FBPAID3B",54,0)
 ...S DIR(0)="S^3:OUTPATIENT;9:CIVIL HOSPITAL;0:BOTH"
"RTN","FBPAID3B",55,0)
 ...D ^DIR
"RTN","FBPAID3B",56,0)
 ...I $D(DUOUT) S FBQUIT=1  ;DEFINED IF USER ENTERS ONE UP ARROW
"RTN","FBPAID3B",57,0)
 ...I $D(DIRUT) S FBQUIT=1  ;DEFINED IF USER ENTERS TWO UP ARROWS
"RTN","FBPAID3B",58,0)
 ...I $D(DTOUT) S FBQUIT=1  ;DEFINED IF USER TIMES OUT
"RTN","FBPAID3B",59,0)
 ...Q:FBQUIT
"RTN","FBPAID3B",60,0)
 ...S FBPROG=+Y
"RTN","FBPAID3B",61,0)
 ...S DIR("A")="SELECT NPI STATUS to include"
"RTN","FBPAID3B",62,0)
 ...S DIR(0)="S^0:FOR NO NPI UPDATES ATTEMPTED;1:NPI DATA INVALID;2:NPI MATCHED ACTIVE, NO UPDATES;"
"RTN","FBPAID3B",63,0)
 ...S DIR(0)=DIR(0)_"3:NPI MATCHED INACTIVE, NO UPDATES;4:NPI MATCHED ACTIVE, IB UPDATED;5:NPI NEW, IB RECORD CREATED;"
"RTN","FBPAID3B",64,0)
 ...S DIR(0)=DIR(0)_"99:ALL"
"RTN","FBPAID3B",65,0)
 ...D ^DIR
"RTN","FBPAID3B",66,0)
 ...I $D(DUOUT) S FBQUIT=1  ;DEFINED IF USER ENTERS ONE UP ARROW
"RTN","FBPAID3B",67,0)
 ...I $D(DIRUT) S FBQUIT=1  ;DEFINED IF USER ENTERS TWO UP ARROWS
"RTN","FBPAID3B",68,0)
 ...I $D(DTOUT) S FBQUIT=1  ;DEFINED IF USER TIMES OUT
"RTN","FBPAID3B",69,0)
 ...Q:FBQUIT
"RTN","FBPAID3B",70,0)
 ...S FBNPISRT=+Y
"RTN","FBPAID3B",71,0)
 ...D DISPLAY(FBPROG,FBNPISRT,FBFROM,FBTO)
"RTN","FBPAID3B",72,0)
 K ^TMP($J,"FBPAID3B")
"RTN","FBPAID3B",73,0)
 Q
"RTN","FBPAID3B",74,0)
DISPLAY(FBPROG,FBNPISRT,FBFROM,FBTO)  ;DISPLAYS SUBSET OF SORTED INFO IN ^TMP
"RTN","FBPAID3B",75,0)
 ;
"RTN","FBPAID3B",76,0)
 ; INPUT : FBPROG - a number identifying the selected program
"RTN","FBPAID3B",77,0)
 ;         FBNPISRT - a number indentifying the selected NPI sort value
"RTN","FBPAID3B",78,0)
 ;         FBFROM - the "FROM DATE" selected by user
"RTN","FBPAID3B",79,0)
 ;         FBTO - The "TO DATE" selected by user
"RTN","FBPAID3B",80,0)
 ;
"RTN","FBPAID3B",81,0)
 N FBNDATE,FBTYPE1,FBNPI1,FBIEN,FBPATIEN,FBICTRL,FBLINUM,FBPTYPE,FBIBPNTR,FBQUIT,FBERR,FBHDSTG,FBHDSTG1
"RTN","FBPAID3B",82,0)
 N FBICNTRL,FBPAT,FBTXY,FBVNDR,FBINVDT,FBHDSTG2,FBDAT1,FBDAT2,DO,DD,X,%,%H,%I,FBNOW,FBFIRST,%ZIS,FBPINFO
"RTN","FBPAID3B",83,0)
 ;
"RTN","FBPAID3B",84,0)
 D NOW^%DTC
"RTN","FBPAID3B",85,0)
 S Y=%
"RTN","FBPAID3B",86,0)
 D DD^%DT
"RTN","FBPAID3B",87,0)
 S FBNOW=Y
"RTN","FBPAID3B",88,0)
 S FBQUIT=0
"RTN","FBPAID3B",89,0)
 S FBFIRST=1
"RTN","FBPAID3B",90,0)
 S %ZIS("A")="OUTPUT DEVICE: "
"RTN","FBPAID3B",91,0)
 D ^%ZIS
"RTN","FBPAID3B",92,0)
 I POP S FBQUIT=1
"RTN","FBPAID3B",93,0)
 Q:FBQUIT
"RTN","FBPAID3B",94,0)
 S FBNDATE=0
"RTN","FBPAID3B",95,0)
 S Y=FBFROM
"RTN","FBPAID3B",96,0)
 D DD^%DT
"RTN","FBPAID3B",97,0)
 S FBDAT1=Y
"RTN","FBPAID3B",98,0)
 S Y=FBTO
"RTN","FBPAID3B",99,0)
 D DD^%DT
"RTN","FBPAID3B",100,0)
 S FBDAT2=Y
"RTN","FBPAID3B",101,0)
 W !
"RTN","FBPAID3B",102,0)
 W ?10,"**** FEE BASIS PROVIDER TO IB REPORT ****"
"RTN","FBPAID3B",103,0)
 W !,?20,FBNOW
"RTN","FBPAID3B",104,0)
 W !,?8,"PROCESS DATES: "_FBDAT1_" - "_FBDAT2
"RTN","FBPAID3B",105,0)
 W !,?8,"PROGRAM: "_$S(FBPROG=0:"BOTH",FBPROG=3:"OUTPATIENT",FBPROG=9:"CIVIL HOSPITAL",1:"")_"         NPI SORT: "_$S(FBNPISRT=99:"ALL",1:$$GTNPIVAL(FBNPISRT))
"RTN","FBPAID3B",106,0)
 W !
"RTN","FBPAID3B",107,0)
 F  S FBNDATE=$O(^TMP($J,"FBPAID3B",FBNDATE)) Q:(FBNDATE=""!FBQUIT)  D
"RTN","FBPAID3B",108,0)
 .S Y=FBNDATE
"RTN","FBPAID3B",109,0)
 .D DD^%DT
"RTN","FBPAID3B",110,0)
 .S FBHDSTG="PROCESS DATE: "_Y
"RTN","FBPAID3B",111,0)
 .S FBTYPE1=""
"RTN","FBPAID3B",112,0)
 .F  S FBTYPE1=$O(^TMP($J,"FBPAID3B",FBNDATE,FBTYPE1)) Q:(FBTYPE1=""!FBQUIT)  D
"RTN","FBPAID3B",113,0)
 ..I FBPROG'=0&(FBTYPE1'=FBPROG) Q  ;NOT A PROGRAM TYPE WE WANT TO REPORT ON
"RTN","FBPAID3B",114,0)
 ..S:FBTYPE1=3 FBHDSTG1="OUTPATIENT"
"RTN","FBPAID3B",115,0)
 ..S:FBTYPE1=9 FBHDSTG1="CIVIL HOSPITAL"
"RTN","FBPAID3B",116,0)
 ..S FBNPI1=""
"RTN","FBPAID3B",117,0)
 ..S FBFIRST=1
"RTN","FBPAID3B",118,0)
 ..F  S FBNPI1=$O(^TMP($J,"FBPAID3B",FBNDATE,FBTYPE1,FBNPI1)) Q:(FBNPI1=""!FBQUIT)  D
"RTN","FBPAID3B",119,0)
 ...I (FBNPISRT'=99)&(FBNPISRT'=FBNPI1) Q   ;NOT AN NPI UPDATE VALUE WE WANT TO REPORT ON
"RTN","FBPAID3B",120,0)
 ...S FBHDSTG2=$$GTNPIVAL(FBNPI1)
"RTN","FBPAID3B",121,0)
 ...I ((IOT="VTRM")&'FBFIRST) D
"RTN","FBPAID3B",122,0)
 ....S DIR("A")="PRESS ENTER TO CONTINUE"
"RTN","FBPAID3B",123,0)
 ....S DIR(0)="FO"
"RTN","FBPAID3B",124,0)
 ....D ^DIR
"RTN","FBPAID3B",125,0)
 ....I $D(DUOUT) S FBQUIT=1  ;DEFINED IF USER ENTERS ONE UP ARROW
"RTN","FBPAID3B",126,0)
 ....I $D(DTOUT) S FBQUIT=1  ;DEFINED IF USER TIMES OUT
"RTN","FBPAID3B",127,0)
 ...Q:FBQUIT
"RTN","FBPAID3B",128,0)
 ...S FBIEN=0
"RTN","FBPAID3B",129,0)
 ...W !,?3,FBHDSTG_"   "_FBHDSTG1_"    "_FBHDSTG2,!
"RTN","FBPAID3B",130,0)
 ...F  S FBIEN=$O(^TMP($J,"FBPAID3B",FBNDATE,FBTYPE1,FBNPI1,FBIEN)) Q:FBIEN=""  D
"RTN","FBPAID3B",131,0)
 ....S FBPATIEN=$P(^TMP($J,"FBPAID3B",FBNDATE,FBTYPE1,FBNPI1,FBIEN),U,1)
"RTN","FBPAID3B",132,0)
 ....S FBICNTRL=$P(^TMP($J,"FBPAID3B",FBNDATE,FBTYPE1,FBNPI1,FBIEN),U,3)
"RTN","FBPAID3B",133,0)
 ....S FBLINUM=$P(^TMP($J,"FBPAID3B",FBNDATE,FBTYPE1,FBNPI1,FBIEN),U,5)
"RTN","FBPAID3B",134,0)
 ....S FBPTYPE=$P(^TMP($J,"FBPAID3B",FBNDATE,FBTYPE1,FBNPI1,FBIEN),U,6)
"RTN","FBPAID3B",135,0)
 ....S FBIBPNTR=$P(^TMP($J,"FBPAID3B",FBNDATE,FBTYPE1,FBNPI1,FBIEN),U,7)
"RTN","FBPAID3B",136,0)
 ....S FBTXY=$P(^TMP($J,"FBPAID3B",FBNDATE,FBTYPE1,FBNPI1,FBIEN),U,9)
"RTN","FBPAID3B",137,0)
 ....;NOW GET INFO FROM THE FEE BASIS PAYMENT FILE IF THIS IS A TYPE 3
"RTN","FBPAID3B",138,0)
 ....I FBTYPE1=3 S FBPINFO=$$GTPYMNT(FBICNTRL)
"RTN","FBPAID3B",139,0)
 ....W:FBTYPE1=3 !,?5,$P(FBPINFO,U,1)_" => "_$P(FBPINFO,U,2)_" => "
"RTN","FBPAID3B",140,0)
 ....W:FBTYPE1=3 !,?8,$P(FBPINFO,U,3)_" => "_$P(FBPINFO,U,4)
"RTN","FBPAID3B",141,0)
 ....W:FBTYPE1=9 !,?5,"INVOICE: "_FBICNTRL
"RTN","FBPAID3B",142,0)
 ....W !,?5,"IB PROVIDER NAME: "_$$GTIBNAM(FBIBPNTR)
"RTN","FBPAID3B",143,0)
 ....W !,?8,$$GTTXYVAL(FBIEN)
"RTN","FBPAID3B",144,0)
 ....W !,?5,"PROVIDER TYPE: "_$$GTPRVTYP(FBIEN)
"RTN","FBPAID3B",145,0)
 ....W:FBLINUM>0 " "_"(LI) "_FBLINUM
"RTN","FBPAID3B",146,0)
 ....W !
"RTN","FBPAID3B",147,0)
 ....S FBFIRST=0
"RTN","FBPAID3B",148,0)
 Q
"RTN","FBPAID3B",149,0)
 ;
"RTN","FBPAID3B",150,0)
GTPRVTYP(FBIEN) ;RETURNS EXTERNAL VALUE FOR A CODE IN A SET
"RTN","FBPAID3B",151,0)
 ;
"RTN","FBPAID3B",152,0)
 Q:FBIEN="" ""
"RTN","FBPAID3B",153,0)
 Q $$GET1^DIQ(161.9,FBIEN_",",.06,"","","FBERR")
"RTN","FBPAID3B",154,0)
 ;
"RTN","FBPAID3B",155,0)
GTIBNAM(FBIBPNTR) ;RETURNS EXTERNAL VALUE FOR NAME OF IB NON/OTHER VA BILLING PROVIDER
"RTN","FBPAID3B",156,0)
 ; INPUT : FBIBPNTR - pointer to the IB NON/OTHER VA BILLING PROVIDER FILE - 355,93
"RTN","FBPAID3B",157,0)
 N FBERR
"RTN","FBPAID3B",158,0)
 Q:FBIBPNTR="" ""
"RTN","FBPAID3B",159,0)
 Q $$GET1^DIQ(355.93,FBIBPNTR_",",.01,"","","FBERR")
"RTN","FBPAID3B",160,0)
 ;
"RTN","FBPAID3B",161,0)
GTTXYVAL(FBIEN)  ;RETURNS EXTERNAL VALUE FOR TAXONOMY UPDATE CODE
"RTN","FBPAID3B",162,0)
 ; INPUT : FBIEN - pointer to the FEE BASIS PAID TO IB file - 161.9
"RTN","FBPAID3B",163,0)
 N FBERR
"RTN","FBPAID3B",164,0)
 Q:FBIEN=""
"RTN","FBPAID3B",165,0)
 Q $$GET1^DIQ(161.9,FBIEN_",",.09,"","","FBERR")
"RTN","FBPAID3B",166,0)
 ;
"RTN","FBPAID3B",167,0)
GTNPIVAL(FBNPI1)  ;RETURNS EXTERNAL VALUE FOR A SET OF SORT CODES
"RTN","FBPAID3B",168,0)
 ; INPUT : FBNPI1 - USER SELECTED value from set of code
"RTN","FBPAID3B",169,0)
 N FBERR
"RTN","FBPAID3B",170,0)
 Q:FBNPI1="" ""
"RTN","FBPAID3B",171,0)
 Q:FBNPI1=0 "NO NPI UPDATES ATTEMPTED"
"RTN","FBPAID3B",172,0)
 Q:FBNPI1=1 "NPI DATA INVALID"
"RTN","FBPAID3B",173,0)
 Q:FBNPI1=2 "NPI MATCHED ACTIVE, NO UPDATES"
"RTN","FBPAID3B",174,0)
 Q:FBNPI1=3 "NPI MATCHED INACTIVE, NO UPDATES"
"RTN","FBPAID3B",175,0)
 Q:FBNPI1=4 "NPI MATCHED ACTIVE, IB UPDATED"
"RTN","FBPAID3B",176,0)
 Q:FBNPI1=5 "NPI NEW, IB RECORD CREATED"
"RTN","FBPAID3B",177,0)
 Q -1
"RTN","FBPAID3B",178,0)
 ;
"RTN","FBPAID3B",179,0)
GTPYMNT(FBICNTRL)  ;Get info from FEE BASIS PAYMENT
"RTN","FBPAID3B",180,0)
 ;INPUT : FBICNTRL - a four piece ';' delimitated string representing a sub record
"RTN","FBPAID3B",181,0)
 N FBIENS,FBPAT,FBVNDR,FBINVDT,FBPROC
"RTN","FBPAID3B",182,0)
 ;
"RTN","FBPAID3B",183,0)
 S FBIENS=$P(FBICNTRL,";",1)_","
"RTN","FBPAID3B",184,0)
 S FBPAT=$$GET1^DIQ(162,FBIENS,.01,"","","FBERR")
"RTN","FBPAID3B",185,0)
 S FBIENS=$P(FBICNTRL,";",2)_","_FBIENS
"RTN","FBPAID3B",186,0)
 S FBVNDR=$$GET1^DIQ(162.01,FBIENS,.01,"","","FBERR")
"RTN","FBPAID3B",187,0)
 S FBIENS=$P(FBICNTRL,";",3)_","_FBIENS
"RTN","FBPAID3B",188,0)
 S FBINVDT=$$GET1^DIQ(162.02,FBIENS,.01,"","","FBERR")
"RTN","FBPAID3B",189,0)
 S FBIENS=$P(FBICNTRL,";",4)_","_FBIENS
"RTN","FBPAID3B",190,0)
 S FBPROC=$$GET1^DIQ(162.03,FBIENS,.01,"","","FBERR")
"RTN","FBPAID3B",191,0)
 Q FBPAT_"^"_FBVNDR_"^"_FBINVDT_"^"_FBPROC
"RTN","FBPAID3B",192,0)
 ;
"RTN","FBPAID3B",193,0)
CLEAR()  ;CLEARS A SPACE ON SCREEN AFTER REPORT
"RTN","FBPAID3B",194,0)
 N FBLINE
"RTN","FBPAID3B",195,0)
 F FBLINE=1:1:10 W !
"RTN","FBPAID3B",196,0)
 Q
"RTN","FBPAID3B",197,0)
                  
"RTN","FBPCR")
0^5^B73151731^B63936182
"RTN","FBPCR",1,0)
FBPCR ;AISC/DMK,GRR,TET-POTENTIAL COST RECOVERY OUTPUT DRIVER ;23 May 2006  10:06 AM
"RTN","FBPCR",2,0)
 ;;3.5;FEE BASIS;**12,48,76,98,103,135**;JAN 30, 1995;Build 3
"RTN","FBPCR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBPCR",4,0)
 ; DBIA SUPPORTED REF $$NPI^XUSNPI = 4532
"RTN","FBPCR",5,0)
DOC ;Refer to fbdoc, tag fbpcr, for documentation of fbpcr* routines
"RTN","FBPCR",6,0)
PSF ;select one/many/all primary service failities
"RTN","FBPCR",7,0)
 S FBARRLTC=""
"RTN","FBPCR",8,0)
 W !! S DIC="^DIC(4,",VAUTSTR="Primary Service Facility",VAUTNI=2,VAUTVB="FBPSV" D FIRST^VAUTOMA K DIC I Y=-1 G EXIT
"RTN","FBPCR",9,0)
ARRAY ;set fee program array for all programs
"RTN","FBPCR",10,0)
 S FBPI=0 F  S FBPI=$O(^FBAA(161.8,FBPI)) Q:'FBPI  S FBPIN=$G(^(FBPI,0)) I $P(FBPIN,U,3) S FBPROG(FBPI)=$P(FBPIN,U)
"RTN","FBPCR",11,0)
 I '$D(FBPROG) G EXIT
"RTN","FBPCR",12,0)
 ;prepare array with LTC POV codes
"RTN","FBPCR",13,0)
 D MKARRLTC^FBPCR4
"RTN","FBPCR",14,0)
 ;what party to include
"RTN","FBPCR",15,0)
 K DIR
"RTN","FBPCR",16,0)
 S DIR(0)="SO^P:Patient;I:Insurance;B:Both",DIR("A")="Include (P)atient Co-pays / (I)nsurance / (B)oth",DIR("B")="Both"
"RTN","FBPCR",17,0)
 S DIR("?")=" Select type of recover to include",DIR("?",1)=" P - include only recover from patient copays",DIR("?",2)=" I - include only recover from insurance",DIR("?",3)=" B - include both",DIR("L")=""
"RTN","FBPCR",18,0)
 D ^DIR S FBPARTY=$S($G(Y(0))="Patient":1,$G(Y(0))="Insurance":2,$G(Y(0))="Both":3,X="Both":3,1:0)
"RTN","FBPCR",19,0)
 K DIR
"RTN","FBPCR",20,0)
 G:FBPARTY=0 EXIT
"RTN","FBPCR",21,0)
 ;what type of copay to include
"RTN","FBPCR",22,0)
 S FBCOPAY=3
"RTN","FBPCR",23,0)
 I FBPARTY'=2 D
"RTN","FBPCR",24,0)
 . S DIR(0)="SO^M:MeansTest;L:LTC;B:Both",DIR("A")="Include (M)eans Test Co-pays /(L)TC Co-pays /(B)oth",DIR("B")="Both"
"RTN","FBPCR",25,0)
 . S DIR("?")=" Select services to include",DIR("?",1)=" M - include only Means Test copays",DIR("?",2)=" L - include only LTC copays",DIR("?",3)=" B - include both",DIR("L")=""
"RTN","FBPCR",26,0)
 . D ^DIR S FBCOPAY=$S($G(Y(0))="LTC":1,$G(Y(0))="MeansTest":2,$G(Y(0))="Both":3,X="Both":3,1:0)
"RTN","FBPCR",27,0)
 . K DIR
"RTN","FBPCR",28,0)
 G:FBCOPAY=0 EXIT
"RTN","FBPCR",29,0)
 ;
"RTN","FBPCR",30,0)
 ;include patients if their insurance informations is unavailable?
"RTN","FBPCR",31,0)
 S FBINCUNK=0
"RTN","FBPCR",32,0)
 I FBPARTY=2!(FBPARTY=3) D
"RTN","FBPCR",33,0)
 . S FBINCUNK=1
"RTN","FBPCR",34,0)
 . N Y,X
"RTN","FBPCR",35,0)
 . W !!
"RTN","FBPCR",36,0)
 . S DIR("A")="Do you want to include patients whose insurance status is unavailable? "
"RTN","FBPCR",37,0)
 . S DIR("?")="Please answer Yes or No."
"RTN","FBPCR",38,0)
 . S DIR("B")="YES",DIR(0)="YA^^"
"RTN","FBPCR",39,0)
 . D ^DIR K DIR
"RTN","FBPCR",40,0)
 . I $G(DIRUT) S FBINCUNK=-1 Q
"RTN","FBPCR",41,0)
 . I $G(Y)=0 S FBINCUNK=0
"RTN","FBPCR",42,0)
 I FBINCUNK=-1 G EXIT ;uparrow - exit
"RTN","FBPCR",43,0)
 N FBINEXCL  ; FB*3.5*135
"RTN","FBPCR",44,0)
 D EXCLINS  ;select insurances to be excluded ; FB*3.5*135
"RTN","FBPCR",45,0)
 ;
"RTN","FBPCR",46,0)
DATE ;select date range
"RTN","FBPCR",47,0)
 D DATE^FBAAUTL I FBPOP G PSF
"RTN","FBPCR",48,0)
 S FBBDATE=BEGDATE,FBEDATE=ENDDATE
"RTN","FBPCR",49,0)
 S Z=9999999.9999,FBBEG=Z-FBEDATE,FBEND=Z-FBBDATE
"RTN","FBPCR",50,0)
Q K ^TMP($J,"FB"),^TMP($J,"FBINSIBAPI"),DIC
"RTN","FBPCR",51,0)
 ;
"RTN","FBPCR",52,0)
 S VAR="FBINCUNK^FBARRLTC^FBARRLTC(^FBPARTY^FBCOPAY^FBNAME^FBIEN^FBID^FBBEG^FBEND^FBBDATE^FBEDATE^FBPSV^FBPSV(^FBPROG(",VAL=VAR,PGM="DQ^FBPCR",IOP="Q" D ZIS^FBAAUTL G:FBPOP EXIT
"RTN","FBPCR",53,0)
DQ S $P(FBDASH,"=",80)="",$P(FBDASH1,"-",80)="",FBPG=0,FBCRT=$S($E(IOST,1,2)="C-":1,1:0),FBOUT=0,FBBEG=FBBEG-.9 U IO
"RTN","FBPCR",54,0)
SORT ;sort driver for payment output(s)
"RTN","FBPCR",55,0)
 S FBPI=0 F  S FBPI=$O(FBPROG(FBPI)) Q:'FBPI  S FBXPROG=FBPROG(FBPI) D
"RTN","FBPCR",56,0)
 .I FBPI=2 D EN^FBPCR2 ;outpatient payments
"RTN","FBPCR",57,0)
 .I FBPI=3 D EN^FBPCR3 ;pharmacy payments
"RTN","FBPCR",58,0)
 .I FBPI=6!(FBPI=7) S:FBPI=6&($D(FBPROG(7))) FBPI=67 D EN^FBPCR67 S:FBPI=67 FBPI=7 ;civil hospital/cnh payments
"RTN","FBPCR",59,0)
PRINT ;print driver for payment output(s)
"RTN","FBPCR",60,0)
 I $G(^TMP($J,"FBINSIBAPI"))>0 D HDRUNK
"RTN","FBPCR",61,0)
 S FBPI=$O(^TMP($J,"FB",0)) I FBPI']"" D WMSG G OUT
"RTN","FBPCR",62,0)
 S FBSTA=0
"RTN","FBPCR",63,0)
 S FBPSF=0 F  S FBPSF=$O(^TMP($J,"FB",FBPSF)) Q:'FBPSF!FBOUT  D STA S FBPT="" F  S FBPT=$O(^TMP($J,"FB",FBPSF,FBPT)) Q:FBPT']""!FBOUT  S DFN=$P(FBPT,";",2) D VET S FBPI=0 F  S FBPI=$O(FBPROG(FBPI)) Q:'FBPI  S FBXPROG=FBPROG(FBPI) D  Q:FBOUT
"RTN","FBPCR",64,0)
 .I FBPSF_FBPT'=FBSTA D HDR Q:FBOUT
"RTN","FBPCR",65,0)
 .I FBPI=2,$D(^TMP($J,"FB",FBPSF,FBPT,FBPI)) D PRINT^FBPCR2 Q
"RTN","FBPCR",66,0)
 .I FBPI=3 D:$D(^TMP($J,"FB",FBPSF,FBPT,FBPI)) PRINT^FBPCR3 Q
"RTN","FBPCR",67,0)
 .I FBPI=6!(FBPI=7) D:$D(^TMP($J,"FB",FBPSF,FBPT,FBPI)) PRINT^FBPCR671 Q
"RTN","FBPCR",68,0)
OUT I $G(^TMP($J,"FBINSIBAPI"))>0 D ERRHDL^FBPCR4
"RTN","FBPCR",69,0)
 I FBOUT!$D(ZTQUEUED) G EXIT
"RTN","FBPCR",70,0)
 D EXIT G PSF
"RTN","FBPCR",71,0)
 Q
"RTN","FBPCR",72,0)
 ;
"RTN","FBPCR",73,0)
EXCLINS ;create list of insurance type to be excluded ; FB*3.5*135
"RTN","FBPCR",74,0)
 N Y,X,DIC,DTOUT,DUOUT,DIR,DIRUT,DIROUT
"RTN","FBPCR",75,0)
 K FBINEXCL S FBINEXCL=0,X=1
"RTN","FBPCR",76,0)
 W !!!,"Select the TYPE of INSURANCE PLANS to be EXCLUDED from the PCR report:"
"RTN","FBPCR",77,0)
 F  Q:$G(X)=""  S DIC="^IBE(355.1,",DIC(0)="QEAFIBS",DIC("S")="I '$P($G(^(0)),U,4)" K X,Y D ^DIC I $G(Y)>0 S FBINEXCL(+Y)=$P(Y,U,2),FBINEXCL("INS",$P(Y,U,2))=+Y
"RTN","FBPCR",78,0)
 S FBINEXCL="A",X=0 F  S FBINEXCL=$O(FBINEXCL("INS",FBINEXCL)) Q:FBINEXCL=""  W:'X !!,"Type of Plan selected for EXCLUSION: " S X=1 W ?41,FBINEXCL,!
"RTN","FBPCR",79,0)
 I $O(FBINEXCL(0)) K X,Y S DIR(0)="Y",DIR("B")="NO",DIR("A")="Recreate Exclusion List" D ^DIR I Y D EXCLINS
"RTN","FBPCR",80,0)
 K FBINEXCL("INS")
"RTN","FBPCR",81,0)
 Q
"RTN","FBPCR",82,0)
 ;
"RTN","FBPCR",83,0)
EXIT ;kill and quit
"RTN","FBPCR",84,0)
KILL ;kill all variables set in the FBPCR* routines, other than fbx
"RTN","FBPCR",85,0)
 D CLOSE^FBAAUTL K ^TMP($J,"FB")
"RTN","FBPCR",86,0)
 K A1,A2,A3,BEGDATE,C,D,D2,DFN,DIC,DIR,DTOUT,DUOUT,ENDDATE,FBPDXC,FBPARTY,FBCOPAY,FBARRLTC,FBINCUNK
"RTN","FBPCR",87,0)
 K FBAAA,FBAACPTC,FBAC,FBAP,FBBATCH,FBBDATE,FBBEG,FBBN,FBCATC,FBCNT,FBCP,FBCRT,FBDA1,FBDASH,FBDASH1,FBDATA,FBDOB,FBDRUG,FBDT,FBDT1,FBDOS,FBDX,FBDX1,FBEDATE,FBEND,FBERR,FBFD,FBFD1,FBHEAD
"RTN","FBPCR",88,0)
 K FBI,FBID,FBIEN,FBIN,FBINS,FBINVN,FBIX,FBJ,FBLOC,FBM,FBNAME,FBOB,FBOPI,FBOUT,FBOV,FBP,FBPAT,FBPD,FBPDX,FBPG,FBPI,FBPID,FBPIN,FBPNAME,FBPROC,FBPROC1,FBPROG,FBPSF,FBPSFNAM,FBPSFNUM,FBPSV,FBPT,FBPV,FBQTY,FBREIM,FBRX
"RTN","FBPCR",89,0)
 K FBSC,FBSL,FBSTA,FBSTR,FBSUSP,FBTA,FBTYPE,FBV,FBVCHAIN,FBVEN,FBVENID,FBVNAME,FBVI,FBVID,FBVP,FBXPROG,FBY,FBZ,I,IOP,J,K,L,M,N,PGM,T,V,VA,VAERR,VAL,VAR,VAUTNI,VAUTSTR,VAUTVB,X,Y,Z,FBSTANPI,FBXX
"RTN","FBPCR",90,0)
 Q
"RTN","FBPCR",91,0)
WMSG ;write message if no matches found
"RTN","FBPCR",92,0)
 D HDR W !!?3,"There are no potential cost recoveries on file"
"RTN","FBPCR",93,0)
 W !?5,"for specified date range:  ",$$DATX^FBAAUTL(FBBDATE)," through ",$$DATX^FBAAUTL(FBEDATE)
"RTN","FBPCR",94,0)
 I 'FBPSV D
"RTN","FBPCR",95,0)
 .W ",",!?5,"and selected Primary Service Area(s):"
"RTN","FBPCR",96,0)
 .S FBPSF=0 F  S FBPSF=$O(FBPSV(FBPSF)) Q:'FBPSF  W !?31,$G(FBPSV(FBPSF))
"RTN","FBPCR",97,0)
 E  W !?5,"and ALL Primary Service Areas "
"RTN","FBPCR",98,0)
 W ".",*7,!!
"RTN","FBPCR",99,0)
 Q
"RTN","FBPCR",100,0)
 ;
"RTN","FBPCR",101,0)
CATC(DFN,FBDT,FBPOV) ;
"RTN","FBPCR",102,0)
 ;treats all copays as Means test for date < 3020705 (JULY 5,2002)
"RTN","FBPCR",103,0)
 ;check if patient is liable for copay
"RTN","FBPCR",104,0)
 ;INPUT:
"RTN","FBPCR",105,0)
 ; DFN = IEN of Patient file
"RTN","FBPCR",106,0)
 ; FBDT= Date
"RTN","FBPCR",107,0)
 ; FBPOV = POV code (for LTC determination)
"RTN","FBPCR",108,0)
 ;OUTPUT:
"RTN","FBPCR",109,0)
 ;0 - the patient is not liable for any co-pay;
"RTN","FBPCR",110,0)
 ;1 - if Means test catc or pending adjudication and agree to pay deduc
"RTN","FBPCR",111,0)
 ;2 - the patient is liable for LTC co-pay;
"RTN","FBPCR",112,0)
 ;3 - no 1010EC on file
"RTN","FBPCR",113,0)
 ;4 - more analysis is needed to determine the patient liability
"RTN","FBPCR",114,0)
 N FBLTC,FBISLTC
"RTN","FBPCR",115,0)
 S FBCATC=$$BIL^DGMTUB(DFN,FBDT)
"RTN","FBPCR",116,0)
 I '$D(FBPOV)!(FBDT<3020705) Q $S(FBCATC:1,1:0)
"RTN","FBPCR",117,0)
 S FBISLTC=$$ISLTC^FBPCR4(FBPOV)
"RTN","FBPCR",118,0)
 I FBISLTC=0 Q $S(FBCATC:1,1:0)  ;Means test
"RTN","FBPCR",119,0)
 I FBISLTC=2 Q 0  ;LTC-service, but LTC-copay is not applicable
"RTN","FBPCR",120,0)
 S FBLTC=$$LTCST^FBPCR4(DFN,FBDT)
"RTN","FBPCR",121,0)
 I FBLTC=2 Q 2  ;LTC copay
"RTN","FBPCR",122,0)
 I FBLTC=0 Q 3  ;no 1010EC on file
"RTN","FBPCR",123,0)
 I FBLTC=4 Q 4  ;more info needed
"RTN","FBPCR",124,0)
 Q 0  ;exemption from LTC -copay
"RTN","FBPCR",125,0)
 ;
"RTN","FBPCR",126,0)
VET ;set vet name/ssn/dob info
"RTN","FBPCR",127,0)
 ;INPUT:  DFN  = IEN of Patient file
"RTN","FBPCR",128,0)
 ;      FBPI = IEN of fee program (optional)
"RTN","FBPCR",129,0)
 ;OUTPUT:  FBPNAME = Patient's name
"RTN","FBPCR",130,0)
 ;      FBPID   = Patient's pid
"RTN","FBPCR",131,0)
 ;      FBDOB   = Patient's dob (if pharmacy fee program)
"RTN","FBPCR",132,0)
 N N
"RTN","FBPCR",133,0)
 S N=$G(^DPT(DFN,0)),FBPNAME=$P(N,U),FBPID=$$SSN^FBAAUTL(DFN),FBDOB=$$FMTE^XLFDT($P(N,U,3))
"RTN","FBPCR",134,0)
 Q
"RTN","FBPCR",135,0)
STA ;set station name & number
"RTN","FBPCR",136,0)
 ;INPUT = FBPSF - IEN to institution file
"RTN","FBPCR",137,0)
 ;OUTPUT = FBPSFNAM = station name
"RTN","FBPCR",138,0)
 ;      FBPSFNUM = station number
"RTN","FBPCR",139,0)
 S FBPSFNAM=$P($G(^DIC(4,FBPSF,0)),U),FBPSFNUM=$P($G(^DIC(4,FBPSF,99)),U)
"RTN","FBPCR",140,0)
 S:FBPSFNAM=+FBPSFNAM FBPSFNAM="UNKNOWN"
"RTN","FBPCR",141,0)
 S FBSTANPI=$S($G(FBPSFNAM)="":"",FBPSFNAM="UNKNOWN":"",1:$P($$NPI^XUSNPI("Organization_ID",FBPSF),U,1))
"RTN","FBPCR",142,0)
 Q
"RTN","FBPCR",143,0)
PAGE ;form feed when new station/patient
"RTN","FBPCR",144,0)
 S FBSTA=$G(FBPSF)_$G(FBPT)
"RTN","FBPCR",145,0)
 I FBCRT&(FBPG'=0) D CR Q:FBOUT
"RTN","FBPCR",146,0)
 I FBPG>0!FBCRT W @IOF
"RTN","FBPCR",147,0)
 S FBPG=FBPG+1
"RTN","FBPCR",148,0)
 Q
"RTN","FBPCR",149,0)
CR ;read for display
"RTN","FBPCR",150,0)
 S DIR(0)="E" W ! D ^DIR K DIR S:$D(DUOUT)!($D(DTOUT)) FBOUT=1
"RTN","FBPCR",151,0)
 Q
"RTN","FBPCR",152,0)
HDR ;general header for potential recoveries
"RTN","FBPCR",153,0)
 D PAGE Q:FBOUT
"RTN","FBPCR",154,0)
 W !?(IOM-30/2),"POTENTIAL COST RECOVERY REPORT"
"RTN","FBPCR",155,0)
 W !?(IOM-(11+$L($G(FBPSFNAM))+$L($G(FBPSFNUM)))/2),"Division: ",$G(FBPSFNUM)," ",$G(FBPSFNAM)
"RTN","FBPCR",156,0)
 W !?(IOM-14/2),"NPI: ",$S($G(FBSTANPI)="":"",$G(FBSTANPI)<1:"",1:$G(FBSTANPI))
"RTN","FBPCR",157,0)
 W !?(IOM-19/2),$$DATX^FBAAUTL(FBBDATE)," - ",$$DATX^FBAAUTL(FBEDATE)
"RTN","FBPCR",158,0)
 W !?71,"Page: ",FBPG
"RTN","FBPCR",159,0)
 W !,"Patient: ",$G(FBPNAME),?40,"Pat. ID: ",$G(FBPID),?62,"DOB: ",$G(FBDOB)
"RTN","FBPCR",160,0)
 W !
"RTN","FBPCR",161,0)
 I FBINCUNK=1,$D(^TMP($J,"FBINSIBAPI",+$G(DFN))) W ">> Warning: accurate insurance information for the patient is unavailable"
"RTN","FBPCR",162,0)
 W !?3,"('*' Represents Reimbursement to Patient",?50,"'#' Represents Voided Payment)"
"RTN","FBPCR",163,0)
 W !,FBDASH
"RTN","FBPCR",164,0)
 W ! D:$D(DFN) INS^DGRPDB
"RTN","FBPCR",165,0)
 Q
"RTN","FBPCR",166,0)
HDRUNK ;Warning message if patient's insurance status is unknown
"RTN","FBPCR",167,0)
 D PAGE Q:FBOUT
"RTN","FBPCR",168,0)
 W !?(IOM-30/2),"POTENTIAL COST RECOVERY REPORT"
"RTN","FBPCR",169,0)
 W !?(IOM-(11+$L($G(FBPSFNAM))+$L($G(FBPSFNUM)))/2),"Division: ",$G(FBPSFNUM)," ",$G(FBPSFNAM)
"RTN","FBPCR",170,0)
 W !?(IOM-19/2),$$DATX^FBAAUTL(FBBDATE)," - ",$$DATX^FBAAUTL(FBEDATE)
"RTN","FBPCR",171,0)
 W !?71,"Page: ",FBPG
"RTN","FBPCR",172,0)
 W !,"------------------------------ !!! WARNING !!! --------------------------------"
"RTN","FBPCR",173,0)
 W !,"This report is incomplete due to problems with obtaining insurance information"
"RTN","FBPCR",174,0)
 W !,"for those patients listed in a separate section in the end of the report. You"
"RTN","FBPCR",175,0)
 W !,"may want to rerun the report again to get more accurate results."
"RTN","FBPCR",176,0)
 W !,FBDASH
"RTN","FBPCR",177,0)
 I FBINCUNK=1 D
"RTN","FBPCR",178,0)
 . W !,"Note: You have chosen to include patients with unknown insurance status in"
"RTN","FBPCR",179,0)
 . W !,"this report. Please be aware that these patients will be treated as if they"
"RTN","FBPCR",180,0)
 . W !,"have billable insurance and their treatment details will be marked accordingly."
"RTN","FBPCR",181,0)
 . W !,"The names of these patients will be accompanied with the following message"
"RTN","FBPCR",182,0)
 . W !,"to order to identify them:"
"RTN","FBPCR",183,0)
 . W !,">> Warning: accurate insurance information for the patient is unavailable"
"RTN","FBPCR",184,0)
 . W !,FBDASH
"RTN","FBPCR",185,0)
 Q
"RTN","FBPCR4")
0^6^B14245640^B10705492
"RTN","FBPCR4",1,0)
FBPCR4 ;WOIFO/SS-LTC PHASE 3 UTILITIES ;03/17/04
"RTN","FBPCR4",2,0)
 ;;3.5;FEE BASIS;**48,76,135**;JAN 30, 1995;Build 3
"RTN","FBPCR4",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBPCR4",4,0)
 ;
"RTN","FBPCR4",5,0)
 Q
"RTN","FBPCR4",6,0)
 ;
"RTN","FBPCR4",7,0)
INSURED(FBDFN,FBINDT1,FBINDT2) ;check if the patient has insurance ;modified for FB*3.5*135 filtering
"RTN","FBPCR4",8,0)
 ;FBDFN - patient DFN
"RTN","FBPCR4",9,0)
 ;FBINDT1 - the treatment date - for outpatients,
"RTN","FBPCR4",10,0)
 ;    FROM date - for inpatients,
"RTN","FBPCR4",11,0)
 ;    certified date  - for Pharmacy
"RTN","FBPCR4",12,0)
 ;FBINDT2 (optional) - TO date for inpatients
"RTN","FBPCR4",13,0)
 ;
"RTN","FBPCR4",14,0)
 N FBINS1,FBINSDAT
"RTN","FBPCR4",15,0)
 S FBINS1=+$$INSUR^IBBAPI(FBDFN,FBINDT1,,.FBINSDAT,"1,21")
"RTN","FBPCR4",16,0)
 I FBINS1<0 D ADDERR(DFN) Q FBINCUNK  ;error handling
"RTN","FBPCR4",17,0)
 S FBINS1=$$SETFBINS ;FB*3.5*135 filtering
"RTN","FBPCR4",18,0)
 Q:'$D(FBINDT2) FBINS1
"RTN","FBPCR4",19,0)
 Q:FBINS1=1 1  ;if was insured for FROM date - don't check TO date
"RTN","FBPCR4",20,0)
 K FBINSDAT S FBINS1=+$$INSUR^IBBAPI(FBDFN,FBINDT2,,.FBINSDAT,"1,21") ;otherwise return the state on TO date
"RTN","FBPCR4",21,0)
 I FBINS1<0 D ADDERR(DFN) Q FBINCUNK  ;error handling
"RTN","FBPCR4",22,0)
 S FBINS1=$$SETFBINS ;FB*3.5*135 filtering for inpatient TO date
"RTN","FBPCR4",23,0)
 Q FBINS1
"RTN","FBPCR4",24,0)
 ;
"RTN","FBPCR4",25,0)
ADDERR(FBDFN) ;add error to ^TMP, FBDFN - patient DFN
"RTN","FBPCR4",26,0)
 I FBPARTY=1 Q
"RTN","FBPCR4",27,0)
 N DFN,FBPNAME,FBPID,FBDOB,FBPI
"RTN","FBPCR4",28,0)
 S DFN=FBDFN
"RTN","FBPCR4",29,0)
 D VET^FBPCR
"RTN","FBPCR4",30,0)
 S ^TMP($J,"FBINSIBAPI")=$G(^TMP($J,"FBINSIBAPI"))+1
"RTN","FBPCR4",31,0)
 S ^TMP($J,"FBINSIBAPI",DFN)=FBPID_"^"_FBDOB_"^"_FBPNAME
"RTN","FBPCR4",32,0)
 Q
"RTN","FBPCR4",33,0)
 ;
"RTN","FBPCR4",34,0)
SETFBINS() ;reset FBINS based on excluded Type of Plans (if any) and Patient 'Policy Not Billable' field
"RTN","FBPCR4",35,0)
 ;TYPE OF PLAN (pointer to file 355.1) will be in FBINEXCL if user selected to exclude insurance type(s)
"RTN","FBPCR4",36,0)
 I 'FBINS1 Q FBINS1
"RTN","FBPCR4",37,0)
 N X,TYPID,FBPOLIEN
"RTN","FBPCR4",38,0)
 S X=0 F  S X=$O(FBINSDAT("IBBAPI","INSUR",X)) Q:'X  D
"RTN","FBPCR4",39,0)
 .S TYPID=+$G(FBINSDAT("IBBAPI","INSUR",X,21)) ;get Type of Plan
"RTN","FBPCR4",40,0)
 .I $D(FBINEXCL(TYPID)) K FBINSDAT("IBBAPI","INSUR",X) ; not billable, so kill it
"RTN","FBPCR4",41,0)
 .Q
"RTN","FBPCR4",42,0)
 I $D(FBINSDAT("IBBAPI","INSUR"))>1 Q 1 ; something left to bill
"RTN","FBPCR4",43,0)
 Q 0
"RTN","FBPCR4",44,0)
 ;
"RTN","FBPCR4",45,0)
ERRHDL ;Error handler called from FBPCR
"RTN","FBPCR4",46,0)
 I +$G(^TMP($J,"FBINSIBAPI"))=0 Q  ;no errors
"RTN","FBPCR4",47,0)
 D PRNUNKN
"RTN","FBPCR4",48,0)
 Q
"RTN","FBPCR4",49,0)
 ;
"RTN","FBPCR4",50,0)
PRNUNKN ;write output
"RTN","FBPCR4",51,0)
 N FBDFN,FBDATA
"RTN","FBPCR4",52,0)
 D PAGEINS
"RTN","FBPCR4",53,0)
 I FBPG>1&(($Y+15)>IOSL) D HEADER Q:FBOUT
"RTN","FBPCR4",54,0)
 S FBDFN=0 F  S FBDFN=$O(^TMP($J,"FBINSIBAPI",FBDFN)) Q:FBDFN']""!(FBOUT)  D  Q:FBOUT
"RTN","FBPCR4",55,0)
 . I ($Y+6)>IOSL D PAGEINS Q:FBOUT
"RTN","FBPCR4",56,0)
 . S FBDATA=$G(^TMP($J,"FBINSIBAPI",FBDFN))
"RTN","FBPCR4",57,0)
 . W !,$P(FBDATA,"^",3),?40,$P(FBDATA,"^",1),?62,$P(FBDATA,"^",2)
"RTN","FBPCR4",58,0)
 Q
"RTN","FBPCR4",59,0)
PAGEINS ;new page
"RTN","FBPCR4",60,0)
 D CHKPAGE Q:FBOUT
"RTN","FBPCR4",61,0)
 D HEADER Q:FBOUT
"RTN","FBPCR4",62,0)
 Q
"RTN","FBPCR4",63,0)
CHKPAGE ;form feed when new station/patient
"RTN","FBPCR4",64,0)
 S FBSTA=$G(FBPSF)_$G(FBPT)
"RTN","FBPCR4",65,0)
 I FBCRT&(FBPG'=0) D CR^FBPCR Q:FBOUT
"RTN","FBPCR4",66,0)
 I FBPG>0!FBCRT W @IOF
"RTN","FBPCR4",67,0)
 S FBPG=FBPG+1
"RTN","FBPCR4",68,0)
 Q
"RTN","FBPCR4",69,0)
HEADER ;main header
"RTN","FBPCR4",70,0)
 N FBSTR1 S FBSTR1="List of the patients whose insurance information is currently unavailable"
"RTN","FBPCR4",71,0)
 W !?(IOM-30/2),"POTENTIAL COST RECOVERY REPORT"
"RTN","FBPCR4",72,0)
 W !?(IOM-$L(FBSTR1)/2),FBSTR1
"RTN","FBPCR4",73,0)
 W !?71,"Page: ",FBPG
"RTN","FBPCR4",74,0)
 W !,"Patient",?40,"Pat. ID",?62,"DOB"
"RTN","FBPCR4",75,0)
 W !,FBDASH
"RTN","FBPCR4",76,0)
 Q
"RTN","FBPCR4",77,0)
 ;/**filtering logic
"RTN","FBPCR4",78,0)
 ;input:
"RTN","FBPCR4",79,0)
 ; FBPARTY: 1-Patient copay only,2-Insurance only,3-Both
"RTN","FBPCR4",80,0)
 ; FBCOPAY: 1-LTC copays only,2-MT copays only,3-Both
"RTN","FBPCR4",81,0)
 ; FBINS:   1- has insurance,0-none
"RTN","FBPCR4",82,0)
 ; FBCATC:  0 - no copay,1- MT copay,2-LTC copay,3-no 1010EC,4-more analysis is needed
"RTN","FBPCR4",83,0)
 ;output:
"RTN","FBPCR4",84,0)
 ; 1 - include to report
"RTN","FBPCR4",85,0)
 ; 0 - exclude from report
"RTN","FBPCR4",86,0)
FILTER() ;*/
"RTN","FBPCR4",87,0)
 I FBPARTY=1,FBCATC=0 Q 0
"RTN","FBPCR4",88,0)
 I FBPARTY=2,FBINS=0 Q 0
"RTN","FBPCR4",89,0)
 I FBPARTY=3,FBINS=1 Q 1
"RTN","FBPCR4",90,0)
 I FBCOPAY=1,FBCATC<2 Q 0
"RTN","FBPCR4",91,0)
 I FBCOPAY=2,FBCATC'=1 Q 0
"RTN","FBPCR4",92,0)
 Q 1
"RTN","FBPCR4",93,0)
 ;
"RTN","FBPCR4",94,0)
 ;/**
"RTN","FBPCR4",95,0)
 ; returns LTC status
"RTN","FBPCR4",96,0)
 ; input:  Patient's DFN, Date of Care
"RTN","FBPCR4",97,0)
 ;
"RTN","FBPCR4",98,0)
 ; return values: 
"RTN","FBPCR4",99,0)
 ; 0 - no1010EC
"RTN","FBPCR4",100,0)
 ; 1 - exemption from LTC copay
"RTN","FBPCR4",101,0)
 ; 2 - LTC copay
"RTN","FBPCR4",102,0)
LTCST(DFN,FBDT) ;*/
"RTN","FBPCR4",103,0)
 Q +$$COPAY^EASECCAL(DFN,$$LASTDT(FBDT),1)
"RTN","FBPCR4",104,0)
 ;
"RTN","FBPCR4",105,0)
LASTDT(X) ; compute the last day of the month in X
"RTN","FBPCR4",106,0)
 N XM,X1,X2
"RTN","FBPCR4",107,0)
 I $E(X,4,5)=12 Q $E(X,1,5)_"31"
"RTN","FBPCR4",108,0)
 S XM=$E(X,4,5)+1
"RTN","FBPCR4",109,0)
 S:XM<10 XM="0"_XM
"RTN","FBPCR4",110,0)
 S X1=$E(X,1,3)_XM_"01"
"RTN","FBPCR4",111,0)
 S X2=-1
"RTN","FBPCR4",112,0)
 D C^%DTC
"RTN","FBPCR4",113,0)
 Q X
"RTN","FBPCR4",114,0)
 ;
"RTN","FBPCR4",115,0)
 ;
"RTN","FBPCR4",116,0)
 ;prepares local array with LTC POV codes
"RTN","FBPCR4",117,0)
 ;input: FBARRLTC must be defined
"RTN","FBPCR4",118,0)
 ;output: FBARRLTC with POV codes
"RTN","FBPCR4",119,0)
MKARRLTC ;
"RTN","FBPCR4",120,0)
 N FBPOV,FBIEN,FBLTCTYP
"RTN","FBPCR4",121,0)
 S FBPOV="" F  S FBPOV=$O(^FBAA(161.82,"C",FBPOV)) Q:'FBPOV  S FBIEN=+$O(^FBAA(161.82,"C",FBPOV,0)),FBLTCTYP=+$P($G(^FBAA(161.82,FBIEN,0)),"^",4) S:FBLTCTYP=1!(FBLTCTYP=2) FBARRLTC(FBPOV)=FBLTCTYP
"RTN","FBPCR4",122,0)
 Q
"RTN","FBPCR4",123,0)
 ;/**
"RTN","FBPCR4",124,0)
 ; Determine if POV code is related to LTC.
"RTN","FBPCR4",125,0)
 ;Input:
"RTN","FBPCR4",126,0)
 ; FBPOV - POV code, pointer to #161.82
"RTN","FBPCR4",127,0)
 ; FBARRLTC must be defined and populated - array with LTC POV codes (see MKARRLTC) 
"RTN","FBPCR4",128,0)
 ;Output:
"RTN","FBPCR4",129,0)
 ; returns 
"RTN","FBPCR4",130,0)
 ; 0 - it is not LTC service
"RTN","FBPCR4",131,0)
 ; 1 - this POV code is for LTC and recoverable from LTC copayment 
"RTN","FBPCR4",132,0)
 ; 2 - this POV code is for LTC but it is not a subject of LTC copayment
"RTN","FBPCR4",133,0)
ISLTC(FBPOV) ;*/
"RTN","FBPCR4",134,0)
 Q +$G(FBARRLTC(FBPOV))
"RTN","FBPCR4",135,0)
 ;
"RTN","FBUTL135")
0^7^B139327633^n/a
"RTN","FBUTL135",1,0)
FBUTL135 ;DSS/LJF - FEE BASIS UTILITY FOR UNIQUE CLAIM ID - FEE5010 ;3/23/2012
"RTN","FBUTL135",2,0)
 ;;3.5;FEE BASIS;**135**;MAR 23, 2012;Build 3
"RTN","FBUTL135",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBUTL135",4,0)
 ;
"RTN","FBUTL135",5,0)
 Q
"RTN","FBUTL135",6,0)
UCLAIMNO(FBSTA,FBSRC,FBINT,FBCLT,FBCLAIMS) ; Unique Claim Identifier for patch 135
"RTN","FBUTL135",7,0)
 N FBFDA,FBHELD,FBYEAR,FBINTDF,FBCLTDF,FBSRCDF,FBSTADF
"RTN","FBUTL135",8,0)
 ; Input:  FBSTA = Station
"RTN","FBUTL135",9,0)
 ;         FBSRC = Source
"RTN","FBUTL135",10,0)
 ;         FBINT = Initiation Type
"RTN","FBUTL135",11,0)
 ;         FBCLT = Claim Type
"RTN","FBUTL135",12,0)
 ;         FBCLAIMS = FPPS CLAIM ID - replaces sequence number
"RTN","FBUTL135",13,0)
 ; Output: 21 character string composed of the following characters:
"RTN","FBUTL135",14,0)
 ;           1-5    5 Character Station ID - left justified with trailing Zero's
"RTN","FBUTL135",15,0)
 ;           6      1 Character Source - 1=Fee, 2=FBCS, 3=VAPM, 4-9 - Future Use, default is 1
"RTN","FBUTL135",16,0)
 ;           7      1 character Initiation Type - (S)canned, (E)DI, (M)anual   ; default is M
"RTN","FBUTL135",17,0)
 ;           8      1 Character Claim Type - (I)nstitutional, (P)rofessional, (D)ental, (N)on-Standard    ; default is N
"RTN","FBUTL135",18,0)
 ;           9-12   4 digit year
"RTN","FBUTL135",19,0)
 ;           13     1 character "-" 
"RTN","FBUTL135",20,0)
 ;           14-28  15 character SEQUENCE NUMBER unique to the year - reinitialized when year changes
"RTN","FBUTL135",21,0)
 ;                  or:  the number supplied in FBCLAIMS - NOTE: this value will be limited to 15 digits
"RTN","FBUTL135",22,0)
 ; UCID example without FBCLAIMS supplied : 500001MN2012-291
"RTN","FBUTL135",23,0)
 ;
"RTN","FBUTL135",24,0)
 S FBSRCDF="1",FBINTDF="M",FBCLTDF="N",FBCLAIMS=$G(FBCLAIMS)   ; Defaults
"RTN","FBUTL135",25,0)
 S FBSTA=$E($S($G(FBSTA)]"":FBSTA,1:$$STATION)_"00000",1,5)   ; Station
"RTN","FBUTL135",26,0)
 ; Get first non space character for each input string;
"RTN","FBUTL135",27,0)
 S FBSRC=$E($S(+$G(FBSRC):+FBSRC,1:FBSRCDF),1)              ; Source
"RTN","FBUTL135",28,0)
 S FBINT=$E($TR($G(FBINT,FBINTDF)," ")),FBINT=$S(FBINT="":FBINTDF,"SEM"[FBINT:FBINT,1:FBINTDF)   ; Initiation Type
"RTN","FBUTL135",29,0)
 S FBCLT=$E($TR($G(FBCLT,FBCLTDF)," ")),FBCLT=$S(FBCLT="":FBCLTDF,"IPDN"[FBCLT:FBCLT,1:FBCLTDF)  ; Claim Type
"RTN","FBUTL135",30,0)
 I FBCLAIMS="" S FBCLAIMS=$$CLAIMNO                                             ; Generate Claim number if needed
"RTN","FBUTL135",31,0)
 Q (FBSTA_FBSRC_FBINT_FBCLT_$E(FBCLAIMS,1,20))
"RTN","FBUTL135",32,0)
 ;
"RTN","FBUTL135",33,0)
CLAIMNO() ; Return the value of field 39: UNIQUE CLAIM IDENTIFIER SEQ from file 161.4: FEE BASIS SITE PARAMETERS - incremented by one
"RTN","FBUTL135",34,0)
 N FBCLAIMS,FBYEAR
"RTN","FBUTL135",35,0)
 S FBCLAIMS=$E($TR($$NOW^XLFDT,".")_"000000000",1,15)  ;default if can't lock global
"RTN","FBUTL135",36,0)
 ; Lock the global node and set sequence number
"RTN","FBUTL135",37,0)
 F FBHELD=1:1:10 L +^FBAA(161.4,1,2):$G(DILOCTM,3) I  D  L -^FBAA(161.4,1,2) Q
"RTN","FBUTL135",38,0)
 . S FBCLAIMS=$$GET1^DIQ(161.4,1,39,"I"),FBYEAR=+$P($$HTE^XLFDT($H)," ",3)
"RTN","FBUTL135",39,0)
 . I FBYEAR'=$P(FBCLAIMS,"-") S FBCLAIMS="-0" ;reinit sequence when year changes
"RTN","FBUTL135",40,0)
 . S FBCLAIMS=FBYEAR_"-"_(1+$P(FBCLAIMS,"-",2))
"RTN","FBUTL135",41,0)
 . S FBFDA(161.4,"1,",39)=FBCLAIMS D FILE^DIE(,"FBFDA") ; increment and file
"RTN","FBUTL135",42,0)
 Q FBCLAIMS
"RTN","FBUTL135",43,0)
 ;
"RTN","FBUTL135",44,0)
VALIDATE(TYPE,UCID) ;
"RTN","FBUTL135",45,0)
 N VALID,FBSTA,FBSRC,FBINT,FBCLMT
"RTN","FBUTL135",46,0)
 S VALID=0
"RTN","FBUTL135",47,0)
 I TYPE="I" D  Q VALID
"RTN","FBUTL135",48,0)
 . I $L(UCID)<14 Q  ; needs to be at least 14 characters long
"RTN","FBUTL135",49,0)
 . S FBSTA=$E(UCID,1,5)
"RTN","FBUTL135",50,0)
 . S FBSRC=$E(UCID,6)
"RTN","FBUTL135",51,0)
 . S FBINT=$E(UCID,7)
"RTN","FBUTL135",52,0)
 . S FBCLMT=$E(UCID,8)
"RTN","FBUTL135",53,0)
 . S $E(UCID,1,8)=""
"RTN","FBUTL135",54,0)
 . I FBSRC,"SEM"[FBINT,FBCLMT="I",UCID?4N1"-"1.15N S VALID=1
"RTN","FBUTL135",55,0)
 I TYPE="O" D  Q VALID
"RTN","FBUTL135",56,0)
 . I $L(UCID)<14 Q  ; needs to be at least 14 characters long
"RTN","FBUTL135",57,0)
 . S FBSTA=$E(UCID,1,5)
"RTN","FBUTL135",58,0)
 . S FBSRC=$E(UCID,6)
"RTN","FBUTL135",59,0)
 . S FBINT=$E(UCID,7)
"RTN","FBUTL135",60,0)
 . S FBCLMT=$E(UCID,8)
"RTN","FBUTL135",61,0)
 . S $E(UCID,1,8)=""
"RTN","FBUTL135",62,0)
 . I FBSRC,"SEM"[FBINT,"PDN"[FBCLMT,UCID?4N1"-"1.15N S VALID=1
"RTN","FBUTL135",63,0)
 Q VALID
"RTN","FBUTL135",64,0)
 ;
"RTN","FBUTL135",65,0)
STATION() ;  Set station
"RTN","FBUTL135",66,0)
 N FBAASN,FBPOP,FBSITE,FBSN,FB
"RTN","FBUTL135",67,0)
 D STATION^FBAAUTL S FBSN=$E(FBSN_"00000",1,5)
"RTN","FBUTL135",68,0)
 Q FBSN
"RTN","FBUTL135",69,0)
 ;
"RTN","FBUTL135",70,0)
INVUCID(FBAAIN,FBSTA,FBSRC,FBINTYP,FBCLAIMS)  ; populates file 162.5 field UCID and returns UCID
"RTN","FBUTL135",71,0)
 N UCID,FBDAT,FBMSG,FBCLTYP
"RTN","FBUTL135",72,0)
 ;FBAAIN = IEN of entry in file 162.5
"RTN","FBUTL135",73,0)
 ;FBSTA = Station ID
"RTN","FBUTL135",74,0)
 ;FBSRC = Source - 1=Fee, 2=FBCS, 3=VAPM, 4-9 - Future Use
"RTN","FBUTL135",75,0)
 ;FBINTYP = Initiation Type - (S)canned, (E)DI, (M)anual
"RTN","FBUTL135",76,0)
 ;FBCLAIMS = Claim Number in format YYYY-nnnn format
"RTN","FBUTL135",77,0)
 ;
"RTN","FBUTL135",78,0)
 S UCID="-1",FBCLTYP="I" ;- Claim Type is always - 'I'nstitution - for this API
"RTN","FBUTL135",79,0)
 I $G(FBAAIN),$G(FBSTA)]"",$G(FBSRC)]"",$G(FBINTYP)]"",$G(FBCLAIMS)]""     ; Validate all input parameters populated
"RTN","FBUTL135",80,0)
 E  D  Q UCID
"RTN","FBUTL135",81,0)
 . S:'$G(FBAAIN) UCID=UCID_U_"UNDEFINED INVOICE IEN" S:$G(FBSTA)="" UCID=UCID_U_"UNDEFINED STATION"
"RTN","FBUTL135",82,0)
 . S:$G(FBSRC)="" UCID=UCID_U_"UNDEFINED SOURCE" S:$G(FBINTYP)="" UCID=UCID_U_"UNDEFINED INITIATION TYPE"
"RTN","FBUTL135",83,0)
 . S:$G(FBCLAIMS)="" UCID=UCID_U_"UNDEFINED CLAIM NUMBER"
"RTN","FBUTL135",84,0)
 ; Validate paramaters contain acceptable values
"RTN","FBUTL135",85,0)
 I $L(FBSTA)<3 S UCID=UCID_U_"INVALID STATION PARAMETER"
"RTN","FBUTL135",86,0)
 I FBSRC,FBSRC?1N
"RTN","FBUTL135",87,0)
 E  S UCID=UCID_U_"INVALID SOURCE PARAMETER"
"RTN","FBUTL135",88,0)
 I "SEM"[FBINTYP,$L(FBINTYP)=1
"RTN","FBUTL135",89,0)
 E  S UCID=UCID_U_"INVALID INITIATION TYPE PARAMETER"
"RTN","FBUTL135",90,0)
 I FBCLAIMS'?4N1"-"1.15N S UCID=UCID_U_"INVALID CLAIM NUMBER PARAMETER"
"RTN","FBUTL135",91,0)
 I '$D(^FBAAI(FBAAIN)) S UCID=UCID_U_"INVALID ENTRY IN FILE 162.5: "_$NA(^FBAAI(FBAAIN))
"RTN","FBUTL135",92,0)
 I $L(UCID)>2 Q UCID
"RTN","FBUTL135",93,0)
 ; parameters passed muster
"RTN","FBUTL135",94,0)
 S UCID=$$UCLAIMNO(FBSTA,FBSRC,FBINTYP,FBCLTYP,FBCLAIMS)
"RTN","FBUTL135",95,0)
 S FBDAT(162.5,FBAAIN_",",85)=UCID
"RTN","FBUTL135",96,0)
 D FILE^DIE(,"FBDAT","FBMSG")
"RTN","FBUTL135",97,0)
 I $D(FBMSG("DIERR")) S UCID="-1^"_"DIERR TEXT: "_$G(FBMSG("DIERR","1","TEXT",1))_$NA(^FBAAI(FBAAIN))_"^UCID: "_UCID
"RTN","FBUTL135",98,0)
 Q UCID
"RTN","FBUTL135",99,0)
 ;
"RTN","FBUTL135",100,0)
PAYUCID(DFN,FBV,FBSDI,FBAACPI,FBSTA,FBSRC,FBINTYP,FBCLTYP,FBCLAIMS)  ;populates file 162 field UCID and returns UCID - Outpatient
"RTN","FBUTL135",101,0)
 N C,UCID,FBDAT,FBMSG
"RTN","FBUTL135",102,0)
 ;DFN = IEN of PATIENT in 162
"RTN","FBUTL135",103,0)
 ;FBV = IEN of VENDOR in 162
"RTN","FBUTL135",104,0)
 ;FBSDI = IEN of INITIAL TREATMENT DATE multiple in 162
"RTN","FBUTL135",105,0)
 ;FBAACPI = IEN of SERVICE PROVIDED multiple in 162
"RTN","FBUTL135",106,0)
 ;FBSTA = Station ID
"RTN","FBUTL135",107,0)
 ;FBSRC = Source - 1=Fee, 2=FBCS, 3=VAPM, 4-9 - Future Use
"RTN","FBUTL135",108,0)
 ;FBINTYP = Initiation Type - (S)canned, (E)DI, (M)anual
"RTN","FBUTL135",109,0)
 ;FBCLTYP = Claim Type - (I)nstitutional, (P)rofessional, (D)ental, (N)on-Standard
"RTN","FBUTL135",110,0)
 ;FBCLAIMS = Claim Number in format YYYY-nnnn format
"RTN","FBUTL135",111,0)
 ;
"RTN","FBUTL135",112,0)
 S C=",",UCID="-1"
"RTN","FBUTL135",113,0)
 I $G(DFN),$G(FBV),$G(FBSDI),$G(FBAACPI),$G(FBSTA)]"",$G(FBSRC),$G(FBINTYP)]"",$G(FBCLTYP)]"",$G(FBCLAIMS)]""  ; Validate all input parameters populated
"RTN","FBUTL135",114,0)
 E  D  Q UCID
"RTN","FBUTL135",115,0)
 . S:'$G(DFN) UCID=UCID_U_"UNDEFINED IEN of PATIENT" S:'$G(FBV) UCID=UCID_U_"UNDEFINED IEN of VENDOR"
"RTN","FBUTL135",116,0)
 . S:'$G(FBSDI) UCID=UCID_U_"UNDEFINED IEN of INITIAL TREATMENT DATE" S:'$G(FBAACPI) UCID=UCID_U_"UNDEFINED IEN of SERVICE PROVIDED"
"RTN","FBUTL135",117,0)
 . S:$G(FBSTA)="" UCID=UCID_U_"UNDEFINED STATION" S:'$G(FBSRC) UCID=UCID_U_"UNDEFINED SOURCE VALUE"
"RTN","FBUTL135",118,0)
 . S:$G(FBINTYP)="" UCID=UCID_U_"UNDEFINED INITIATION TYPE" S:$G(FBCLTYP)="" UCID=UCID_U_"UNDEFINED CLAIM TYPE"
"RTN","FBUTL135",119,0)
 . S:$G(FBCLAIMS)="" UCID=UCID_U_"UNDEFINED CLAIM NUMBER"
"RTN","FBUTL135",120,0)
 ; Validate paramaters contain acceptable values
"RTN","FBUTL135",121,0)
 I $L(FBSTA)<3 S UCID=UCID_U_"INVALID STATION PARAMETER"
"RTN","FBUTL135",122,0)
 I FBSRC,FBSRC?1N
"RTN","FBUTL135",123,0)
 E  S UCID=UCID_U_"INVALID SOURCE PARAMETER"
"RTN","FBUTL135",124,0)
 I "SEM"[FBINTYP,$L(FBINTYP)=1
"RTN","FBUTL135",125,0)
 E  S UCID=UCID_U_"INVALID INITIATION TYPE PARAMETER"
"RTN","FBUTL135",126,0)
 I "PDN"[FBCLTYP,$L(FBCLTYP)=1
"RTN","FBUTL135",127,0)
 E  S UCID=UCID_U_"INVALID CLAIM TYPE PARAMETER"
"RTN","FBUTL135",128,0)
 I FBCLAIMS'?4N1"-"1.15NUL S UCID=UCID_U_"INVALID CLAIM NUMBER PARAMETER"
"RTN","FBUTL135",129,0)
 I '$D(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI)) S UCID=UCID_U_"INVALID ENTRY IN FILE 162: "_$NA(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI))
"RTN","FBUTL135",130,0)
 I $L(UCID)>2 Q UCID
"RTN","FBUTL135",131,0)
 ; parameters passed muster
"RTN","FBUTL135",132,0)
 S UCID=$$UCLAIMNO(FBSTA,FBSRC,FBINTYP,FBCLTYP,FBCLAIMS)
"RTN","FBUTL135",133,0)
 S FBDAT(162.03,FBAACPI_C_FBSDI_C_FBV_C_DFN_C,81)=UCID
"RTN","FBUTL135",134,0)
 D FILE^DIE(,"FBDAT","FBMSG")
"RTN","FBUTL135",135,0)
 I $D(FBMSG("DIERR")) S UCID="-1^"_"DIERR TEXT: "_$G(FBMSG("DIERR","1","TEXT",1))_$NA(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI))_"^UCID: "_UCID
"RTN","FBUTL135",136,0)
 Q UCID
"RTN","FBUTL135",137,0)
 ;
"RTN","FBUTL135",138,0)
OCLMTYP(FBCURVAL) ; Get Outpatient Claim Type from the user
"RTN","FBUTL135",139,0)
 N DIR,X,Y,DTOUT,DUOUT,DIRUT,DTOCNT
"RTN","FBUTL135",140,0)
 S FBCURVAL=$G(FBCURVAL) I $G(FBCURVAL)]"","PDN"[FBCURVAL S DIR("B")=FBCURVAL
"RTN","FBUTL135",141,0)
 S DIR(0)="SO^P:P;D:D;N:N"
"RTN","FBUTL135",142,0)
 S DIR("L",1)="Select the Claim Type:"
"RTN","FBUTL135",143,0)
 S DIR("L",2)=""
"RTN","FBUTL135",144,0)
 S DIR("L")=" P - Professional,  D - Dental, N - Non-Standard"
"RTN","FBUTL135",145,0)
 S DTOCNT=0
"RTN","FBUTL135",146,0)
 F  D ^DIR D  Q:Y]""
"RTN","FBUTL135",147,0)
 . I $G(DTOUT) S Y=$S(FBCURVAL]"":FBCURVAL,1:"N") Q  ; time out - set to "N"on-standard if no current value exists
"RTN","FBUTL135",148,0)
 . I Y="" W !!,"This is a required response." Q
"RTN","FBUTL135",149,0)
 . I Y="^" S Y="" W !!,"This is a required response. '^' is not allowed." K DUOUT Q
"RTN","FBUTL135",150,0)
 . I Y="^^" S Y="" W !!,"This is a required response. '^' is not allowed." K DUOUT Q
"RTN","FBUTL135",151,0)
 . I Y]"","PDN"[Y Q
"RTN","FBUTL135",152,0)
 . S Y="" W !,"Enter a code from the list."
"RTN","FBUTL135",153,0)
 Q Y
"RTN","FBUTL135",154,0)
 ;
"RTN","FBUTL135",155,0)
UCIDUTL()  ;EP for TEST report to validate UCID information for FB PATCH 135
"RTN","FBUTL135",156,0)
 ;
"RTN","FBUTL135",157,0)
 N DIR,FBQUIT,Y,FBSTG1,FBSRVC,FBPROG,FBID,DA,DUOUT,DIRUT,DTOUT,FBDONE
"RTN","FBUTL135",158,0)
 ;
"RTN","FBUTL135",159,0)
 S FBQUIT=0
"RTN","FBUTL135",160,0)
 S FBDONE=0
"RTN","FBUTL135",161,0)
 ;
"RTN","FBUTL135",162,0)
 I $G(DUZ(2))="" D
"RTN","FBUTL135",163,0)
 .W !,"DUZ NOT IDENTIFIED - PLEASE LOG IN BEFORE USING FB 135 TESTING UTILTIES"
"RTN","FBUTL135",164,0)
 .S FBDONE=1
"RTN","FBUTL135",165,0)
 ;
"RTN","FBUTL135",166,0)
 D CLEAR()
"RTN","FBUTL135",167,0)
 W !,?5,"FEE BASIS PATCH 135 UNIQUE CLAIM IDENTIFIER DISPLAY"
"RTN","FBUTL135",168,0)
 F  Q:FBDONE  D
"RTN","FBUTL135",169,0)
 .S DIR("A",1)="Select the UCID REPORT or the PROGRAM you are testing"
"RTN","FBUTL135",170,0)
 .S DIR("A",2)="ENTER '^' or leave blank to EXIT"
"RTN","FBUTL135",171,0)
 .S DIR("A")="SELECT"
"RTN","FBUTL135",172,0)
 .S DIR(0)="SO^1:Outpatient and Inpatient UCID Display by Date Range Report"
"RTN","FBUTL135",173,0)
 .S DIR(0)=DIR(0)_";3:Outpatient UCID Screen Display"
"RTN","FBUTL135",174,0)
 .S DIR(0)=DIR(0)_";9:Inpatient UCID Screen Display"
"RTN","FBUTL135",175,0)
 .S DIR("B")=""
"RTN","FBUTL135",176,0)
 .D ^DIR
"RTN","FBUTL135",177,0)
 .K DIR("A")
"RTN","FBUTL135",178,0)
 .I $D(DUOUT) S FBDONE=1 ;DEFINED IF USER ENTERS ONE UP ARROW
"RTN","FBUTL135",179,0)
 .I $D(DIRUT) S FBDONE=1 ;DEFINED IF USER ENTERS TWO UP ARROWS
"RTN","FBUTL135",180,0)
 .I $D(DTOUT) S FBDONE=1  ;DEFINED IF USER TIMES OUT
"RTN","FBUTL135",181,0)
 .I '+Y S FBDONE=1
"RTN","FBUTL135",182,0)
 .Q:FBDONE
"RTN","FBUTL135",183,0)
 .S FBPROG=+Y
"RTN","FBUTL135",184,0)
 .I FBPROG=1 D UCIDRPT()
"RTN","FBUTL135",185,0)
 .I FBPROG=9 D   ;INPATIENT
"RTN","FBUTL135",186,0)
 ..S FBQUIT=0
"RTN","FBUTL135",187,0)
 ..F  Q:FBQUIT  D
"RTN","FBUTL135",188,0)
 ...S DIC=162.5  ;162.5 -- FEE BASIS INVOICE FILE
"RTN","FBUTL135",189,0)
 ...S DIC(0)="AE"
"RTN","FBUTL135",190,0)
 ...;S DIC("S")="I $P(^(0),U,9)="""""
"RTN","FBUTL135",191,0)
 ...D ^DIC
"RTN","FBUTL135",192,0)
 ...I $D(DUOUT) S FBQUIT=1
"RTN","FBUTL135",193,0)
 ...I $D(DIRUT) S FBQUIT=1
"RTN","FBUTL135",194,0)
 ...I $D(DTOUT) S FBQUIT=1
"RTN","FBUTL135",195,0)
 ...I Y<0 S FBQUIT=1
"RTN","FBUTL135",196,0)
 ...Q:FBQUIT
"RTN","FBUTL135",197,0)
 ...I (Y>0) D
"RTN","FBUTL135",198,0)
 ....;W !,"UCID: "_$P($G(^FBAAI(+Y,5)),U,5)
"RTN","FBUTL135",199,0)
 ....S FBIEN=$P(Y,U,2)
"RTN","FBUTL135",200,0)
 ....S FBNODE=^FBAAI(FBIEN,0)
"RTN","FBUTL135",201,0)
 ....S FBDATE=$P(FBNODE,U,2)
"RTN","FBUTL135",202,0)
 ....S FBVET=$P(FBNODE,U,4)   ;POINTER TO 161 - FEE BASIS PATIENT
"RTN","FBUTL135",203,0)
 ....S FBPAT=$P(^FBAAA(FBVET,0),U,1)   ;POINTER TO FILE 2 - PATIENT
"RTN","FBUTL135",204,0)
 ....S FBVNDR=$P(FBNODE,U,3)  ;POINTER TO FB VENDOR FILE
"RTN","FBUTL135",205,0)
 ....S Y=FBDATE
"RTN","FBUTL135",206,0)
 ....D DD^%DT
"RTN","FBUTL135",207,0)
 ....W !,$P(^DPT(FBPAT,0),U,1)_"    "_$P(^FBAAV(FBVNDR,0),U,1)_"    "_Y
"RTN","FBUTL135",208,0)
 ....W !?10,"UCID: "_$P($G(^FBAAI(FBIEN,5)),U,5)
"RTN","FBUTL135",209,0)
 ....H:('FBDONE)&('FBQUIT) 3
"RTN","FBUTL135",210,0)
 ...W !!
"RTN","FBUTL135",211,0)
 .I FBPROG=3 D  ;OUTPATIENT
"RTN","FBUTL135",212,0)
 ..S FBQUIT=0
"RTN","FBUTL135",213,0)
 ..F  Q:FBQUIT  D
"RTN","FBUTL135",214,0)
 ...S DIC="^FBAAC(" ;  162 -- FEE BASIS PAYMENT FILE
"RTN","FBUTL135",215,0)
 ...S DIC(0)="AE"   ;
"RTN","FBUTL135",216,0)
 ...D ^DIC   ;PATIENT SELECTION
"RTN","FBUTL135",217,0)
 ...I $D(DUOUT) S FBQUIT=1
"RTN","FBUTL135",218,0)
 ...I $D(DIRUT) S FBQUIT=1
"RTN","FBUTL135",219,0)
 ...I $D(DTOUT) S FBQUIT=1
"RTN","FBUTL135",220,0)
 ...Q:FBQUIT
"RTN","FBUTL135",221,0)
 ...S DA(1)=+Y
"RTN","FBUTL135",222,0)
 ...Q:'+$O(^FBAAC(DA(1),1,0))
"RTN","FBUTL135",223,0)
 ...S DIC="^FBAAC("_DA(1)_",1,"
"RTN","FBUTL135",224,0)
 ...D ^DIC
"RTN","FBUTL135",225,0)
 ...I $D(DUOUT) S FBQUIT=1
"RTN","FBUTL135",226,0)
 ...I $D(DIRUT) S FBQUIT=1
"RTN","FBUTL135",227,0)
 ...I $D(DTOUT) S FBQUIT=1
"RTN","FBUTL135",228,0)
 ...Q:FBQUIT
"RTN","FBUTL135",229,0)
 ...I +Y<0 W !,"No Fee Basis Invoice Vendors found for this patient!" Q
"RTN","FBUTL135",230,0)
 ...S DA(2)=DA(1)
"RTN","FBUTL135",231,0)
 ...S DA(1)=+Y
"RTN","FBUTL135",232,0)
 ...Q:'+$O(^FBAAC(DA(2),1,DA(1),1,0))
"RTN","FBUTL135",233,0)
 ...S DIC="^FBAAC("_DA(2)_",1,"_DA(1)_",1,"     ;INITIAL TREATMENT DATE SELECTION
"RTN","FBUTL135",234,0)
 ...D ^DIC
"RTN","FBUTL135",235,0)
 ...I $D(DUOUT) S FBQUIT=1
"RTN","FBUTL135",236,0)
 ...I $D(DIRUT) S FBQUIT=1
"RTN","FBUTL135",237,0)
 ...I $D(DTOUT) S FBQUIT=1
"RTN","FBUTL135",238,0)
 ...Q:FBQUIT
"RTN","FBUTL135",239,0)
 ...I +Y<0 W !,"No Fee Basis Invoice DATE OF SERVICE found for this Vendor!" Q
"RTN","FBUTL135",240,0)
 ...S DA(3)=DA(2)
"RTN","FBUTL135",241,0)
 ...S DA(2)=DA(1)
"RTN","FBUTL135",242,0)
 ...S DA(1)=+Y
"RTN","FBUTL135",243,0)
 ...Q:'+$O(^FBAAC(DA(3),1,DA(2),1,DA(1),1,0))
"RTN","FBUTL135",244,0)
 ...S FBSRVC=0
"RTN","FBUTL135",245,0)
 ...F  S FBSRVC=$O(^FBAAC(DA(3),1,DA(2),1,DA(1),1,FBSRVC)) Q:'+FBSRVC  D
"RTN","FBUTL135",246,0)
 ....S FBPNTR=$P($G(^FBAAC(DA(3),1,DA(2),1,DA(1),1,FBSRVC,0)),U,1)  ;POINTER TO 81 - CPT FILE
"RTN","FBUTL135",247,0)
 ....W !,"SERVICE: ",$P($G(^ICPT(FBPNTR,0)),U,1),"  ",$P($G(^ICPT(FBPNTR,0)),U,2),?50,"UCID: "_$P($G(^FBAAC(DA(3),1,DA(2),1,DA(1),1,FBSRVC,5)),U,5)
"RTN","FBUTL135",248,0)
 ...H:('FBDONE)&('FBQUIT) 3
"RTN","FBUTL135",249,0)
 ...W !!
"RTN","FBUTL135",250,0)
 .D CLEAR()
"RTN","FBUTL135",251,0)
 Q
"RTN","FBUTL135",252,0)
CLEAR()   ;CLEAR SCREEN
"RTN","FBUTL135",253,0)
 N FBLINE
"RTN","FBUTL135",254,0)
 F FBLINE=1:1:10 W !
"RTN","FBUTL135",255,0)
 Q
"RTN","FBUTL135",256,0)
UCIDRPT()  ;PROVIDES A REPORT OF ALL UCIDS IN THE SYSTEM FOR A DATE RANGE
"RTN","FBUTL135",257,0)
 ;
"RTN","FBUTL135",258,0)
 N DIR,FBQUIT,FBSTRT,FBEND,Y,FBSDATE,FBEDATE,FBDATE,FBINTLDT,FBPAT
"RTN","FBUTL135",259,0)
 S FBQUIT=0
"RTN","FBUTL135",260,0)
 S Y=DT
"RTN","FBUTL135",261,0)
 D DD^%DT
"RTN","FBUTL135",262,0)
 S FBTODAY=Y
"RTN","FBUTL135",263,0)
 S DIR("A")="Enter the START DATE for UCID report"
"RTN","FBUTL135",264,0)
 S DIR(0)="D"
"RTN","FBUTL135",265,0)
 S DIR("B")=FBTODAY
"RTN","FBUTL135",266,0)
 D ^DIR
"RTN","FBUTL135",267,0)
 I $D(DUOUT) S FBQUIT=1
"RTN","FBUTL135",268,0)
 I $D(DIRUT) S FBQUIT=1
"RTN","FBUTL135",269,0)
 I $D(DTOUT) S FBQUIT=1
"RTN","FBUTL135",270,0)
 S FBSTRT=Y
"RTN","FBUTL135",271,0)
 I 'FBQUIT D
"RTN","FBUTL135",272,0)
 .S DIR("A")="Enter the END DATE for UCID report"
"RTN","FBUTL135",273,0)
 .S DIR(0)="D"
"RTN","FBUTL135",274,0)
 .S DIR("B")=FBTODAY
"RTN","FBUTL135",275,0)
 .D ^DIR
"RTN","FBUTL135",276,0)
 .I $D(DUOUT) S FBQUIT=1
"RTN","FBUTL135",277,0)
 .I $D(DIRUT) S FBQUIT=1
"RTN","FBUTL135",278,0)
 .I $D(DTOUT) S FBQUIT=1
"RTN","FBUTL135",279,0)
 .S FBEND=Y
"RTN","FBUTL135",280,0)
 I 'FBQUIT D
"RTN","FBUTL135",281,0)
 .D ^%ZIS
"RTN","FBUTL135",282,0)
 .I 'POP D
"RTN","FBUTL135",283,0)
 ..U IO
"RTN","FBUTL135",284,0)
 ..S Y=FBSTRT
"RTN","FBUTL135",285,0)
 ..D DD^%DT
"RTN","FBUTL135",286,0)
 ..S FBSDATE=Y
"RTN","FBUTL135",287,0)
 ..S Y=FBEND
"RTN","FBUTL135",288,0)
 ..D DD^%DT
"RTN","FBUTL135",289,0)
 ..S FBEDATE=Y
"RTN","FBUTL135",290,0)
 ..W !,"OUTPATIENT INVOICES INITIAL SERVICES FROM: ",FBSDATE," TO: "_FBEDATE
"RTN","FBUTL135",291,0)
 ..D OUTDSPLY(FBSTRT,FBEND)
"RTN","FBUTL135",292,0)
 ..W !!,"CIVIL HOSPITAL INVOICES DATE RECEIVED FROM: ",FBSDATE," TO: "_FBEDATE
"RTN","FBUTL135",293,0)
 ..D INDSPLY(FBSTRT,FBEND)
"RTN","FBUTL135",294,0)
 .D ^%ZISC
"RTN","FBUTL135",295,0)
 Q
"RTN","FBUTL135",296,0)
OUTDSPLY(FBSTRT,FBEND)  ;DISPLAY OUTPATIENT UCID INFORMATION FOR A DATE RANGE
"RTN","FBUTL135",297,0)
 ; INPUT : FBSTRT : A FM DATE REPRESENTING THE STARTING DATE FOR REPORT
"RTN","FBUTL135",298,0)
 ;         FBEND  : A FM DATE REPRESENTING THE ENDING DATE FOR REPORT
"RTN","FBUTL135",299,0)
 ;
"RTN","FBUTL135",300,0)
 N FBIEN,FBVNDR,FBINTLDT,FBSRVC,FBSNUM
"RTN","FBUTL135",301,0)
 S FBIEN=0
"RTN","FBUTL135",302,0)
 F  S FBIEN=$O(^FBAAC(FBIEN)) Q:'+FBIEN  D
"RTN","FBUTL135",303,0)
 .S FBVNDR=0
"RTN","FBUTL135",304,0)
 .F  S FBVNDR=$O(^FBAAC(FBIEN,1,FBVNDR))  Q:'+FBVNDR  D
"RTN","FBUTL135",305,0)
 ..S FBINTLDT=0
"RTN","FBUTL135",306,0)
 ..F  S FBINTLDT=$O(^FBAAC(FBIEN,1,FBVNDR,1,FBINTLDT)) Q:'+FBINTLDT  D
"RTN","FBUTL135",307,0)
 ...S FBDATE=$P(^FBAAC(FBIEN,1,FBVNDR,1,FBINTLDT,0),U,1)
"RTN","FBUTL135",308,0)
 ...I (FBSTRT<=FBDATE)&(FBDATE<=FBEND) D
"RTN","FBUTL135",309,0)
 ....W !
"RTN","FBUTL135",310,0)
 ....;NOW PRINT OUT PATIENT NAME, VENDOR NAME, TREATMENT DATE, AND EACH SERVICE AND UCID
"RTN","FBUTL135",311,0)
 ....S Y=FBDATE
"RTN","FBUTL135",312,0)
 ....D DD^%DT
"RTN","FBUTL135",313,0)
 ....W !,$P(^DPT(FBIEN,0),U,1)_"    "_$P(^FBAAV(FBVNDR,0),U,1)_"    "_Y
"RTN","FBUTL135",314,0)
 ....S FBSNUM=0
"RTN","FBUTL135",315,0)
 ....F  S FBSNUM=$O(^FBAAC(FBIEN,1,FBVNDR,1,FBINTLDT,1,FBSNUM)) Q:'+FBSNUM  D
"RTN","FBUTL135",316,0)
 .....S FBSRVC=$P(^FBAAC(FBIEN,1,FBVNDR,1,FBINTLDT,1,FBSNUM,0),U,1)
"RTN","FBUTL135",317,0)
 .....W !,"SERVICE: ",$P($G(^ICPT(FBSRVC,0)),U,1),"  ",$P($G(^ICPT(FBSRVC,0)),U,2),?50,"UCID: "_$P($G(^FBAAC(FBIEN,1,FBVNDR,1,FBINTLDT,1,FBSNUM,5)),U,5)
"RTN","FBUTL135",318,0)
 Q
"RTN","FBUTL135",319,0)
 ;
"RTN","FBUTL135",320,0)
INDSPLY(FBSTRT,FBEND)  ;DISPLAY CIVIL HOSPITAL UCID INFORMATION FOR A DATE RANGE
"RTN","FBUTL135",321,0)
 ; INPUT : FBSTRT : A FM DATE REPRESENTING THE STARTING DATE FOR REPORT
"RTN","FBUTL135",322,0)
 ;         FBEND  : A FM DATE REPRESENTING THE ENDING DATE FOR REPORT
"RTN","FBUTL135",323,0)
 N FBIEN,DBDATE,FBVET,FBPAT,FBVNDR
"RTN","FBUTL135",324,0)
 S FBIEN=0
"RTN","FBUTL135",325,0)
 F  S FBIEN=$O(^FBAAI(FBIEN)) Q:'+FBIEN  D
"RTN","FBUTL135",326,0)
 .S FBNODE=^FBAAI(FBIEN,0)
"RTN","FBUTL135",327,0)
 .S FBDATE=$P(FBNODE,U,2)
"RTN","FBUTL135",328,0)
 .I (FBSTRT<=FBDATE)&(FBDATE<=FBEND) D
"RTN","FBUTL135",329,0)
 ..W !
"RTN","FBUTL135",330,0)
 ..S FBVET=$P(FBNODE,U,4)   ;POINTER TO 161
"RTN","FBUTL135",331,0)
 ..S FBPAT=$P(^FBAAA(FBVET,0),U,1)   ;POINTER TO FILE 2
"RTN","FBUTL135",332,0)
 ..S FBVNDR=$P(FBNODE,U,3)
"RTN","FBUTL135",333,0)
 ..S Y=FBDATE
"RTN","FBUTL135",334,0)
 ..D DD^%DT
"RTN","FBUTL135",335,0)
 ..W !,$P(FBNODE,U,1)_"   "_$P(^DPT(FBPAT,0),U,1)_"   "_$P(^FBAAV(FBVNDR,0),U,1)_"   "_Y
"RTN","FBUTL135",336,0)
 ..W !?10,"UCID: "_$P($G(^FBAAI(FBIEN,5)),U,5)
"RTN","FBUTL135",337,0)
 Q
"RTN","FBUTL136")
0^11^B203178014^n/a
"RTN","FBUTL136",1,0)
FBUTL136 ;DSS/LJF - FEE BASIS UTILITY FOR UNIQUE CLAIM ID - FEE5010 (overflow from FBUTL135) ;3/23/2012
"RTN","FBUTL136",2,0)
 ;;3.5;FEE BASIS;**135**;MAR 23, 2012;Build 3
"RTN","FBUTL136",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBUTL136",4,0)
 ;
"RTN","FBUTL136",5,0)
 Q
"RTN","FBUTL136",6,0)
 ;--------------------- OUTPATIENT ----------------------------------------
"RTN","FBUTL136",7,0)
 ;
"RTN","FBUTL136",8,0)
ENTROUTP(DFN,FBV,FBAAVID,FBCLAIMS) ; OUTPATIENT ENTER UCID
"RTN","FBUTL136",9,0)
 ; Input:   DFN      - Patient ID 
"RTN","FBUTL136",10,0)
 ;          FBV      - Vendor IEN
"RTN","FBUTL136",11,0)
 ;          FBAAVID  - Vendor Invoice Date
"RTN","FBUTL136",12,0)
 ;          FBCLAIMS - FPPS claim id
"RTN","FBUTL136",13,0)
 ; Output:  returns UCID
"RTN","FBUTL136",14,0)
 ;
"RTN","FBUTL136",15,0)
 N FBCLT,FBTOUT
"RTN","FBUTL136",16,0)
 I $G(DFN),$G(FBV),$G(FBAAVID) S FBCLAIMS=$G(FBCLAIMS),FBCLT="",DTIME=$G(DTIME,300),FBTOUT=""
"RTN","FBUTL136",17,0)
 E  Q "-1"
"RTN","FBUTL136",18,0)
 ;
"RTN","FBUTL136",19,0)
 I FBCLAIMS="N/A" S FBCLAIMS=""
"RTN","FBUTL136",20,0)
 I FBCLAIMS]"" D  Q FBCLAIMS
"RTN","FBUTL136",21,0)
 . S FBCLAIMS=+$P($$HTE^XLFDT($H)," ",3)_"-"_FBCLAIMS
"RTN","FBUTL136",22,0)
 . S FBCLT=$$OCLMTYP^FBUTL135
"RTN","FBUTL136",23,0)
 . S FBCLAIMS=$$UCLAIMNO^FBUTL135($G(FBSTA),1,"E",FBCLT,FBCLAIMS)
"RTN","FBUTL136",24,0)
 ;
"RTN","FBUTL136",25,0)
 F  R !,"CLAIM NUMBER: ",FBANS:DTIME S FBTOUT='$T D  I FBANS]"" S FBCLAIMS=FBANS Q
"RTN","FBUTL136",26,0)
 . I FBTOUT S FBANS="-1" Q
"RTN","FBUTL136",27,0)
 . I $TR(FBANS,"new","NEW")="NEW" D  Q
"RTN","FBUTL136",28,0)
 .. S FBANS=$$UCLAIMNO^FBUTL135 W "#: "_$E(FBANS,9,28)
"RTN","FBUTL136",29,0)
 .. S $E(FBANS,8)=$$OCLMTYP^FBUTL135
"RTN","FBUTL136",30,0)
 . I FBANS="??" D  W ! I FBANS="" Q    ; if no claim returns claim# - reask claim number
"RTN","FBUTL136",31,0)
 .. S FBANS=$$OUTPHELP(DFN,FBV) I FBANS<1 S FBANS="" Q
"RTN","FBUTL136",32,0)
 .. S FBCLT=$P(FBANS,U,2),FBANS=$P(FBANS,U)
"RTN","FBUTL136",33,0)
 . I $E(FBANS)="^" S FBANS="" W !!,"This is a required response. ""^"" is not allowed.",! Q
"RTN","FBUTL136",34,0)
 . I FBANS="?" D  S FBANS="" Q
"RTN","FBUTL136",35,0)
 .. W !!,"Enter ""NEW"" to automatically generate a new claim number,"
"RTN","FBUTL136",36,0)
 .. W !,"or enter an existing numeric claim number in format YYYY-<nn..>,"
"RTN","FBUTL136",37,0)
 .. W !,"or enter ?? to see a list of existing claim numbers for this vendor.",!
"RTN","FBUTL136",38,0)
 . I FBANS="" W !!,"This is a required response.",! Q
"RTN","FBUTL136",39,0)
 . I FBANS'?4N1"-"1.15N W !!,"** INVALID CLAIM NUMBER **",!! S FBANS="" Q
"RTN","FBUTL136",40,0)
 . S FBANS=$$UCLAIMNO^FBUTL135(,,,$G(FBCLT),FBANS)
"RTN","FBUTL136",41,0)
 . S $E(FBANS,8)=$$OCLMTYP^FBUTL135
"RTN","FBUTL136",42,0)
 . I FBANS'?6N2UL4N1"-"1.15N W !!,"** INVALID CLAIM NUMBER ***",!! S (FBANS,FBCLT)=""
"RTN","FBUTL136",43,0)
 Q FBCLAIMS
"RTN","FBUTL136",44,0)
 ;
"RTN","FBUTL136",45,0)
EDITOUTP(FBXSTR,FBDA) ;
"RTN","FBUTL136",46,0)
 ; Inputs:  FBXSTR = FPPS CLAIM ID entered by user
"RTN","FBUTL136",47,0)
 ;          FBDA = DA variable containing SERVICE PROVIDED, INITIAL TREATMENT DATE, VENDOR, PATIENT
"RTN","FBUTL136",48,0)
 ;
"RTN","FBUTL136",49,0)
 N FBPAT,FBVEND,FBTDTG,FBSERVSE,DA,DR,FBINTYP
"RTN","FBUTL136",50,0)
 S FBSERVSE=$G(FBDA)
"RTN","FBUTL136",51,0)
 S FBTDTG=$G(FBDA(1))
"RTN","FBUTL136",52,0)
 S FBVEND=$G(FBDA(2))
"RTN","FBUTL136",53,0)
 S FBPAT=$G(FBDA(3))
"RTN","FBUTL136",54,0)
 S FBXSTR=$G(FBXSTR)
"RTN","FBUTL136",55,0)
 I FBXSTR'=-1,FBPAT,FBVEND,FBTDTG,FBSERVSE
"RTN","FBUTL136",56,0)
 E  Q
"RTN","FBUTL136",57,0)
 N FBDA ; New it so we don't affect it in any way
"RTN","FBUTL136",58,0)
 N FBDATA,FBSTA,FBSITE,FPPSCLM,FBICLAIM,FBSRC,FBINT,FBCLT,FBCLAIMS,FBPRMPT,FBHOLD,C
"RTN","FBUTL136",59,0)
 S C=",",FBSTA=$$STATION^FBUTL135,(FBHOLD,FBICLAIM)=""
"RTN","FBUTL136",60,0)
 S FPPSCLM=$$GET1^DIQ(162.03,FBSERVSE_C_FBTDTG_C_FBVEND_C_FBPAT_C,50,"I")  ; get current value of FPPS claim id
"RTN","FBUTL136",61,0)
 ;
"RTN","FBUTL136",62,0)
 I FBXSTR]"" D  Q  ; If user entered FPPS, create UCID, save, and quit
"RTN","FBUTL136",63,0)
 . S FBICLAIM=+$P($$HTE^XLFDT($H)," ",3)_"-"_FBXSTR
"RTN","FBUTL136",64,0)
 . ; get claim type
"RTN","FBUTL136",65,0)
 . S FBCLT=$$OCLMTYP^FBUTL135($G(FBCLT))
"RTN","FBUTL136",66,0)
 . S FBICLAIM=$$PAYUCID^FBUTL135(FBPAT,FBVEND,FBTDTG,FBSERVSE,FBSTA,1,"E",FBCLT,FBICLAIM)  ; Populate UCID field
"RTN","FBUTL136",67,0)
 ; If user didn't enter a new FPPS CLAIM ID
"RTN","FBUTL136",68,0)
 I FBXSTR="" D
"RTN","FBUTL136",69,0)
 . ;If FPPS CLAIM ID field is populated, clear out exisitng UCID and prepare for new one
"RTN","FBUTL136",70,0)
 . I FPPSCLM]"" S FBICLAIM(162.03,FBSERVSE_C_FBTDTG_C_FBVEND_C_FBPAT_C,81)="" D FILE^DIE(,"FBICLAIM") K FBICLAIM S FBICLAIM="" Q
"RTN","FBUTL136",71,0)
 . ;FPPS CLAIM ID field is null get existing UCID for default
"RTN","FBUTL136",72,0)
 . S FBICLAIM=$$GET1^DIQ(162.03,FBSERVSE_C_FBTDTG_C_FBVEND_C_FBPAT_C,81,"I")
"RTN","FBUTL136",73,0)
 . I $E(FBICLAIM,7)'="M" S FBICLAIM="" Q  ; if not a manual claim, don't use it
"RTN","FBUTL136",74,0)
 ;
"RTN","FBUTL136",75,0)
 I FBICLAIM="" D  Q   ; If UCID not populated
"RTN","FBUTL136",76,0)
 . F  S FBICLAIM=$$ENTROUTP(FBPAT,FBVEND,FBTDTG) W:FBICLAIM<1 !,"  REQUIRED ENTRY." Q:FBICLAIM<1  D  Q:FBICLAIM>1   ; allow user to enter new UCID
"RTN","FBUTL136",77,0)
 .. S FBSTA=$E(FBICLAIM,1,5)
"RTN","FBUTL136",78,0)
 .. S FBSRC=$E(FBICLAIM,6)
"RTN","FBUTL136",79,0)
 .. S FBINTYP=$E(FBICLAIM,7)
"RTN","FBUTL136",80,0)
 .. S FBCLT=$E(FBICLAIM,8)
"RTN","FBUTL136",81,0)
 .. S $E(FBICLAIM,1,8)=""
"RTN","FBUTL136",82,0)
 .. S FBICLAIM=$$PAYUCID^FBUTL135(FBPAT,FBVEND,FBTDTG,FBSERVSE,FBSTA,FBSRC,FBINTYP,FBCLT,FBICLAIM)   ; Populate UCID field
"RTN","FBUTL136",83,0)
 ;
"RTN","FBUTL136",84,0)
 ; we have an existing UCID - validate it then allow edit
"RTN","FBUTL136",85,0)
 I '$$VALIDATE^FBUTL135("O",FBICLAIM) S FBICLAIM=""  ; not valid - 
"RTN","FBUTL136",86,0)
 E  D
"RTN","FBUTL136",87,0)
 . S FBSTA=$E(FBICLAIM,1,5)
"RTN","FBUTL136",88,0)
 . S FBSRC=$E(FBICLAIM,6)
"RTN","FBUTL136",89,0)
 . S FBINT=$E(FBICLAIM,7)
"RTN","FBUTL136",90,0)
 . S FBCLT=$E(FBICLAIM,8)
"RTN","FBUTL136",91,0)
 . S $E(FBICLAIM,1,8)="",FBHOLD=FBICLAIM
"RTN","FBUTL136",92,0)
 ;
"RTN","FBUTL136",93,0)
 I FBICLAIM]"" S FBPRMPT=" "_FBICLAIM_" //"
"RTN","FBUTL136",94,0)
 S FBPRMPT="CLAIM NUMBER:"_$G(FBPRMPT)_" ",FBTOUT=""
"RTN","FBUTL136",95,0)
 F  W !,FBPRMPT R FBANS:DTIME S FBTOUT='$T Q:FBTOUT  D  Q:FBTOUT  I FBANS'="" S FBCLAIMS=FBANS Q
"RTN","FBUTL136",96,0)
 . I FBANS="",FBICLAIM]"" D
"RTN","FBUTL136",97,0)
 .. S FBANS=FBICLAIM
"RTN","FBUTL136",98,0)
 . I $TR(FBANS,"new","NEW")="NEW" D  Q
"RTN","FBUTL136",99,0)
 .. S (FBSTA,FBSRC)="",FBINTYP="M",FBANS=$$UCLAIMNO^FBUTL135() W "#: "_$E(FBANS,9,28)
"RTN","FBUTL136",100,0)
 . I FBANS="??" D  I FBANS="" Q
"RTN","FBUTL136",101,0)
 .. S FBANS=$$OUTPHELP(FBPAT,FBVEND) I FBANS<1 S FBANS="" Q
"RTN","FBUTL136",102,0)
 .. S FBCLT=$P(FBANS,U,2),FBANS=$P(FBANS,U)
"RTN","FBUTL136",103,0)
 . I FBANS="@" W !!,"  REQUIRED ENTRY.",! S FBANS="" Q
"RTN","FBUTL136",104,0)
 . I $E(FBANS)="^" S FBANS="" W !!,"This is a required response. ""^"" is not allowed.",! Q
"RTN","FBUTL136",105,0)
 . I FBANS="?" D  S FBANS="" Q
"RTN","FBUTL136",106,0)
 .. W !!,"Enter ""NEW"" to automatically generate a new claim number,"
"RTN","FBUTL136",107,0)
 .. W !,"or enter an existing numeric claim number in format YYYY-<nn..>,"
"RTN","FBUTL136",108,0)
 .. W !,"or enter ?? to see a list of existing claim numbers for this vendor.",!
"RTN","FBUTL136",109,0)
 . I FBANS="" S FBANS=FBHOLD
"RTN","FBUTL136",110,0)
 . I FBANS?4N1"-"1.15N D
"RTN","FBUTL136",111,0)
 .. S FBANS=$$UCLAIMNO^FBUTL135($G(FBSITE),$G(FBSRC),$G(FBINT),$G(FBCLT),FBANS)
"RTN","FBUTL136",112,0)
 . I FBANS'?6N2UL4N1"-"1.15N W !!,"** INVALID CLAIM NUMBER ****",!! S FBANS=""
"RTN","FBUTL136",113,0)
 I FBTOUT S DTOUT=FBTOUT,FBXSTR=-1 Q  ; flag not to save FPPS EDIT
"RTN","FBUTL136",114,0)
 I $G(FBCLAIMS)]"" D  I FBCLAIMS Q
"RTN","FBUTL136",115,0)
 . S FBSTA=$E(FBCLAIMS,1,5)
"RTN","FBUTL136",116,0)
 . S FBSRC=$E(FBCLAIMS,6)
"RTN","FBUTL136",117,0)
 . S FBINT=$E(FBCLAIMS,7)
"RTN","FBUTL136",118,0)
 . S FBCLT=$$OCLMTYP^FBUTL135($E(FBCLAIMS,8))
"RTN","FBUTL136",119,0)
 . S $E(FBCLAIMS,1,8)=""
"RTN","FBUTL136",120,0)
 . S FBCLAIMS=$$PAYUCID^FBUTL135(FBPAT,FBVEND,FBTDTG,FBSERVSE,FBSTA,FBSRC,FBINT,FBCLT,FBCLAIMS)
"RTN","FBUTL136",121,0)
 . I FBCLAIMS<1 S FBCLAIMS=""
"RTN","FBUTL136",122,0)
 ;
"RTN","FBUTL136",123,0)
 N DA
"RTN","FBUTL136",124,0)
 S DA=$G(FBSERVSE)
"RTN","FBUTL136",125,0)
 S DA(1)=$G(FBTDTG)
"RTN","FBUTL136",126,0)
 S DA(2)=$G(FBVEND)
"RTN","FBUTL136",127,0)
 S DA(3)=$G(FBPAT)
"RTN","FBUTL136",128,0)
 S FBXSTR=$G(FBXSTR)
"RTN","FBUTL136",129,0)
 W !!,"** INVALID CLAIM NUMBER *****",!! D EDITOUTP(FBXSTR,.DA)   ; Restart edit
"RTN","FBUTL136",130,0)
 Q
"RTN","FBUTL136",131,0)
OUTPHELP(DFN,FBV) ; ?? response
"RTN","FBUTL136",132,0)
 I $G(DFN),$G(FBV)   ; gotta have a DFN, and a Vendor number
"RTN","FBUTL136",133,0)
 E  Q 0
"RTN","FBUTL136",134,0)
 N DTG,E7,E7TEXT,FBINT,FBIX,RETDIR,FBVENDT
"RTN","FBUTL136",135,0)
 N DTOUT,DUOUT,DIRUT,DIROUT,X,Y,C
"RTN","FBUTL136",136,0)
 N FBDOS,FBSVC,UCID,FBYEAR,OLINE,CNT,CLMID,CLMTYP
"RTN","FBUTL136",137,0)
 S FBTOUT=""
"RTN","FBUTL136",138,0)
 S E7TEXT("E")="1-EDI",E7TEXT("S")="2-SCANNED",E7TEXT("M")="3-MANUAL"
"RTN","FBUTL136",139,0)
 S (CNT,DTG)=0,RETDIR="",C=","
"RTN","FBUTL136",140,0)
 S FBDOS=0
"RTN","FBUTL136",141,0)
 F  S FBDOS=$O(^FBAAC(DFN,1,FBV,1,FBDOS)),FBSVC=0 Q:'FBDOS  D   ; date of service
"RTN","FBUTL136",142,0)
 . F  S FBSVC=$O(^FBAAC(DFN,1,FBV,1,FBDOS,1,FBSVC)) Q:'FBSVC  D   ; service provided
"RTN","FBUTL136",143,0)
 .. S UCID=$P($G(^FBAAC(DFN,1,FBV,1,FBDOS,1,FBSVC,5)),U,5)
"RTN","FBUTL136",144,0)
 .. I UCID="" Q
"RTN","FBUTL136",145,0)
 .. I '$$VALIDATE^FBUTL135("O",UCID) Q
"RTN","FBUTL136",146,0)
 .. I $E(UCID,7)="E" Q  ; Quit if Initiation Type is "E"DI
"RTN","FBUTL136",147,0)
 .. S CLMTYP=$E(UCID,8)
"RTN","FBUTL136",148,0)
 .. S FBYEAR=$$FMTE^XLFDT(FBDOS),FBVENDT=$$GET1^DIQ(162.02,FBDOS_C_FBV_C_DFN_C,.01,"I")
"RTN","FBUTL136",149,0)
 .. S CLMID=$E(UCID,9,28)   ; Only want the YYYY-<xxxxx> 
"RTN","FBUTL136",150,0)
 .. S OLINE=$E(CLMID_"                       ",1,22)
"RTN","FBUTL136",151,0)
 .. S OLINE=OLINE_$E(FBVENDT_"       ",1,14)  ; Vendor date
"RTN","FBUTL136",152,0)
 .. S OLINE=OLINE_"("_UCID_")"             ; Full UCID
"RTN","FBUTL136",153,0)
 .. S UCID("LIST",9999999-FBVENDT,FBSVC,CLMID)=OLINE_"^^"_CLMTYP
"RTN","FBUTL136",154,0)
 ;
"RTN","FBUTL136",155,0)
 I '$D(UCID("LIST")) W !!,?5,"NO RECENT CLAIM NUMBERS FOR THIS PATIENT/VENDOR" Q ""   ; Nothing to display
"RTN","FBUTL136",156,0)
 E  W !!,?4,"RECENT CLAIM NUMBERS FOR THIS PATIENT/VENDOR",!
"RTN","FBUTL136",157,0)
 K OLINE S OLINE=$NA(UCID("LIST"))
"RTN","FBUTL136",158,0)
 ; Display list of prospects
"RTN","FBUTL136",159,0)
 F CNT=1:1 S OLINE=$Q(@OLINE) Q:OLINE=""  D   Q:RETDIR  Q:$G(DTOUT)  Q:$G(DUOUT)
"RTN","FBUTL136",160,0)
 . I '(CNT-1#5) W !," #  CLAIM NO              VEND INV DATE  COMPLETE UCID"
"RTN","FBUTL136",161,0)
 . S CNT(CNT)=$J(CNT,2)_": "_$P(@OLINE,"^^"),CNT(CNT,"CLMID")=$QS(OLINE,4)_U_$P(@OLINE,"^^",2) W !,CNT(CNT)
"RTN","FBUTL136",162,0)
 . I '(CNT#5) D
"RTN","FBUTL136",163,0)
 .. N DA,DIR
"RTN","FBUTL136",164,0)
 .. S DIR(0)="NAO^1:"_CNT,DIR("A",1)="Press <RETURN> to see more, '^' to exit this list, or",DIR("A")="CHOOSE 1-"_CNT_": "  D ^DIR
"RTN","FBUTL136",165,0)
 .. ;Possible options - X is a number = done. or X is null or X is "^" 
"RTN","FBUTL136",166,0)
 .. I X?1.2N S RETDIR=X Q
"RTN","FBUTL136",167,0)
 I '$G(DTOUT),'$G(DUOUT)
"RTN","FBUTL136",168,0)
 E  S RETDIR="-1^"_$G(DTOUT)_"."_$G(DUOUT) K DTOUT,DUOUT Q RETDIR ; time out or opt out
"RTN","FBUTL136",169,0)
 ; no opt out, no time out
"RTN","FBUTL136",170,0)
 I 'RETDIR D   ; user did not select any entries so far, so display final choice prompt
"RTN","FBUTL136",171,0)
 . N DA,DIR
"RTN","FBUTL136",172,0)
 . S CNT=CNT-1,DIR(0)="NAO^1:"_CNT,DIR("A",1)="Press <RETURN> to return to main prompt, or",DIR("A")="CHOOSE 1-"_CNT_":" D ^DIR
"RTN","FBUTL136",173,0)
 . I X?1.2N S RETDIR=X
"RTN","FBUTL136",174,0)
 I '$G(DTOUT),'$G(DUOUT)
"RTN","FBUTL136",175,0)
 E  S RETDIR="-1^"_$G(DTOUT)_"."_$G(DUOUT) K DTOUT,DUOUT Q RETDIR ; time out or opt out
"RTN","FBUTL136",176,0)
 I RETDIR Q $G(CNT(RETDIR,"CLMID"))   ; quit with the selected claim
"RTN","FBUTL136",177,0)
 Q RETDIR
"RTN","FBUTL136",178,0)
 ;
"RTN","FBUTL136",179,0)
 ;
"RTN","FBUTL136",180,0)
 ;--------------------- INPATIENT ----------------------------------------
"RTN","FBUTL136",181,0)
 ;
"RTN","FBUTL136",182,0)
ENTINPAT(FBSTA,FBSRC,FBINT,FBCLT,FBCLAIMS,FBVEND) ;Returns UCID; FB*3.5*135
"RTN","FBUTL136",183,0)
 ; Input:  FBSTA = Station
"RTN","FBUTL136",184,0)
 ;         FBSRC = Source
"RTN","FBUTL136",185,0)
 ;         FBINT = Initiation Type
"RTN","FBUTL136",186,0)
 ;         FBCLT = Claim Type
"RTN","FBUTL136",187,0)
 ;         FBCLAIMS = FPPS CLAIM ID - replaces sequence number
"RTN","FBUTL136",188,0)
 ;         FBVEND = Vendor IEN
"RTN","FBUTL136",189,0)
 ;
"RTN","FBUTL136",190,0)
 ; Output: UCID
"RTN","FBUTL136",191,0)
 ;
"RTN","FBUTL136",192,0)
 N FBRETVAL,FBTOUT,FBANS
"RTN","FBUTL136",193,0)
 K DTOUT
"RTN","FBUTL136",194,0)
 S FBSTA=$G(FBSTA),FBSRC=$G(FBSRC),FBINT=$G(FBINT),FBCLT=$G(FBCLT),FBCLAIMS=$G(FBCLAIMS),FBVEND=$G(FBVEND),(FBRETVAL,FBTOUT,FBUOUT,FBANS)=""
"RTN","FBUTL136",195,0)
 I FBCLAIMS="N/A" S FBCLAIMS=""
"RTN","FBUTL136",196,0)
 I FBCLAIMS]"" D  Q FBCLAIMS
"RTN","FBUTL136",197,0)
 . S FBCLAIMS=+$P($$HTE^XLFDT($H)," ",3)_"-"_FBCLAIMS
"RTN","FBUTL136",198,0)
 . S FBCLAIMS=$$UCLAIMNO^FBUTL135(FBSTA,FBSRC,"E",FBCLT,FBCLAIMS)
"RTN","FBUTL136",199,0)
 F  R !,"CLAIM NUMBER: ",FBANS:DTIME S FBTOUT='$T Q:FBTOUT  D  Q:FBTOUT  I FBANS'="" S FBCLAIMS=FBANS Q
"RTN","FBUTL136",200,0)
 . I $TR(FBANS,"new","NEW")="NEW" S FBANS=$$UCLAIMNO^FBUTL135(FBSTA,$G(FBSRC),"M",$G(FBCLT)) W "#: "_$E(FBANS,9,28) Q
"RTN","FBUTL136",201,0)
 . I FBANS="??" S FBANS=$$ENTHELP(FBVEND,.FBTOUT,.FBUOUT) S:FBUOUT (FBANS,FBUOUT)="" Q:FBANS=""
"RTN","FBUTL136",202,0)
 . I $E(FBANS)="^" S FBANS="" W !!,"This is a required response. ""^"" is not allowed.",! Q
"RTN","FBUTL136",203,0)
 . I FBANS="?" D  S FBANS="" Q
"RTN","FBUTL136",204,0)
 .. W !!,"Enter ""NEW"" to automatically generate a new claim number,"
"RTN","FBUTL136",205,0)
 .. W !,"or enter an existing numeric claim number in format YYYY-<nn..>,"
"RTN","FBUTL136",206,0)
 .. W !,"or enter ?? to see a list of existing claim numbers for this vendor.",!
"RTN","FBUTL136",207,0)
 . I FBANS="" W !!,"  REQUIRED ENTRY.",! Q
"RTN","FBUTL136",208,0)
 . I FBANS?4N1"-"1.15N S FBANS=$$UCLAIMNO^FBUTL135(FBSTA,$G(FBSRC),$G(FBINT),$G(FBCLT),FBANS)
"RTN","FBUTL136",209,0)
 . I FBANS'?6N2UL4N1"-"1.15N W !!,"*** INVALID CLAIM NUMBER ***",!! S FBANS=""
"RTN","FBUTL136",210,0)
 I 'FBTOUT,'FBUOUT Q FBCLAIMS
"RTN","FBUTL136",211,0)
 I FBTOUT S DTOUT=FBTOUT
"RTN","FBUTL136",212,0)
 I FBUOUT S DUOUT=FBUOUT
"RTN","FBUTL136",213,0)
 Q ""
"RTN","FBUTL136",214,0)
 ;
"RTN","FBUTL136",215,0)
ENTHELP(FBVEND,FBTOUT,FBUOUT) ; Help for UCID in "FBCH ENTER PAYMENT" ; FB*3.5*135
"RTN","FBUTL136",216,0)
 I $G(DFN),$G(FBVEND)   ; gotta have a DFN, and a Vendor number
"RTN","FBUTL136",217,0)
 E  Q 0
"RTN","FBUTL136",218,0)
 N CLMID,CNT,DTG,E7,E7TEXT,FBINT,FBIX,OLINE,RETDIR,UCIDLIST,YR
"RTN","FBUTL136",219,0)
 N DTOUT,DUOUT,DIRUT,DIROUT,X,Y
"RTN","FBUTL136",220,0)
 S (FBTOUT,FBUOUT)=""
"RTN","FBUTL136",221,0)
 S E7TEXT("E")="1-EDI",E7TEXT("S")="2-SCANNED",E7TEXT("M")="3-MANUAL"
"RTN","FBUTL136",222,0)
 S (CNT,DTG)=0,RETDIR=""
"RTN","FBUTL136",223,0)
 ; Build list of prospects
"RTN","FBUTL136",224,0)
 F  S DTG=$O(^FBAAI("AG",DFN,DTG)),FBIX=0 Q:'DTG  D
"RTN","FBUTL136",225,0)
 . F  S FBIX=$O(^FBAAI("AG",DFN,DTG,FBIX)) Q:'FBIX  D
"RTN","FBUTL136",226,0)
 .. K FBINT D GETS^DIQ(162.5,FBIX,"2;46;85","IE","FBINT")
"RTN","FBUTL136",227,0)
 .. I FBINT("162.5",FBIX_",",2,"I")'=FBVEND Q     ; Quit if vendor doesn't match 
"RTN","FBUTL136",228,0)
 .. I FBINT("162.5",FBIX_",",85,"E")="" Q         ; Quit if no UCID
"RTN","FBUTL136",229,0)
 .. I $E(FBINT("162.5",FBIX_",",85,"E"),7)="E" Q  ; Quit if Initiation Type is "E"DI
"RTN","FBUTL136",230,0)
 .. I '$$VALIDATE^FBUTL135("I",FBINT("162.5",FBIX_",",85,"E")) Q  ; Quit if not valid
"RTN","FBUTL136",231,0)
 .. K OLINE M OLINE=FBINT("162.5",FBIX_",")
"RTN","FBUTL136",232,0)
 .. S UCIDLIST=FBINT("162.5",FBIX_",",85,"E")
"RTN","FBUTL136",233,0)
 .. S YR=(9999999.999999-$G(OLINE(46,"I"))),CLMID=$P(UCIDLIST,"-",1,2),E7=$E(UCIDLIST,7)
"RTN","FBUTL136",234,0)
 .. I $D(E7TEXT(E7)) S E7=E7TEXT(E7)
"RTN","FBUTL136",235,0)
 .. E  S E7="4-"_E7
"RTN","FBUTL136",236,0)
 .. S OLINE=$E($G(OLINE(85,"E"))_"                       ",9,30)  ; Only want the YYYY-<xxxxx> 
"RTN","FBUTL136",237,0)
 .. S OLINE=OLINE_$E($G(OLINE(46,"E"))_"       ",1,14)  ; Vendor date
"RTN","FBUTL136",238,0)
 .. S OLINE=OLINE_"("_$G(OLINE(85,"E"))_")"             ; Full UCID
"RTN","FBUTL136",239,0)
 .. S UCIDLIST("LIST",YR,E7,CLMID,FBIX)=OLINE
"RTN","FBUTL136",240,0)
 K OLINE S OLINE=$NA(UCIDLIST("LIST"))
"RTN","FBUTL136",241,0)
 I '$D(UCIDLIST("LIST")) W !!,?5,"NO RECENT CLAIM NUMBERS FOR THIS PATIENT/VENDOR",! Q ""   ; Nothing to display
"RTN","FBUTL136",242,0)
 E  W !!,?4,"RECENT CLAIM NUMBERS FOR THIS PATIENT/VENDOR",!
"RTN","FBUTL136",243,0)
 ; Display list of prospects
"RTN","FBUTL136",244,0)
 F CNT=1:1 S OLINE=$Q(@OLINE) Q:OLINE=""  D   Q:RETDIR  Q:$G(DTOUT)  Q:$G(DUOUT)
"RTN","FBUTL136",245,0)
 . I '(CNT-1#5) W !," #  CLAIM NO              VEND INV DATE  COMPLETE UCID"
"RTN","FBUTL136",246,0)
 . S CNT(CNT)=$J(CNT,2)_": "_@OLINE,CNT(CNT,"CLMID")=$QS(OLINE,4)_U_$QS(OLINE,3) W !,CNT(CNT)
"RTN","FBUTL136",247,0)
 . I '(CNT#5) D
"RTN","FBUTL136",248,0)
 .. N DA,DIR
"RTN","FBUTL136",249,0)
 .. S DIR(0)="NAO^1:"_CNT,DIR("A",1)="Press <RETURN> to see more, '^' to exit this list, or",DIR("A")="CHOOSE 1-"_CNT_": "  D ^DIR
"RTN","FBUTL136",250,0)
 .. ;Possible options - X is a number = done. or X is null or X is "^" 
"RTN","FBUTL136",251,0)
 .. I X?1.2N S RETDIR=X Q
"RTN","FBUTL136",252,0)
 S FBTOUT=$G(DTOUT),FBUOUT=$G(DUOUT)
"RTN","FBUTL136",253,0)
 I 'FBTOUT,'FBUOUT
"RTN","FBUTL136",254,0)
 E  Q ""   ; time out or opt out
"RTN","FBUTL136",255,0)
 ; no opt out, no time out
"RTN","FBUTL136",256,0)
 I 'RETDIR D   ; user did not select any entries so far, so display final choice prompt
"RTN","FBUTL136",257,0)
 . N DA,DIR
"RTN","FBUTL136",258,0)
 . S CNT=CNT-1,DIR(0)="NAO^1:"_CNT,DIR("A",1)="Press <RETURN> to return to main prompt, or",DIR("A")="CHOOSE 1-"_CNT_":" D ^DIR
"RTN","FBUTL136",259,0)
 . I X?1.2N S RETDIR=X
"RTN","FBUTL136",260,0)
 S FBTOUT=$G(DTOUT),FBUOUT=$G(DUOUT)
"RTN","FBUTL136",261,0)
 I 'FBTOUT,'FBUOUT
"RTN","FBUTL136",262,0)
 E  Q ""   ; time out or opt out
"RTN","FBUTL136",263,0)
 I RETDIR Q $P($G(CNT(RETDIR,"CLMID")),U)   ; quit with the selected claim
"RTN","FBUTL136",264,0)
 Q RETDIR
"RTN","FBUTL136",265,0)
 ;
"RTN","FBUTL136",266,0)
EDINPAT(FBXSTR,FBI) ; EDIT UNIQUE CLAIM ID for FEE BASIS INVOICE file - 162.5
"RTN","FBUTL136",267,0)
 ; Input:  FBXSTR = FPPS value entered by user for FPPS
"RTN","FBUTL136",268,0)
 ;         FBI = IEN of Invoice record
"RTN","FBUTL136",269,0)
 ;
"RTN","FBUTL136",270,0)
 ; Output: UCID
"RTN","FBUTL136",271,0)
 ;
"RTN","FBUTL136",272,0)
 N FBDATA,FBFPPSCL,FBICLAIM,FBSITE,FBSTA,FBSRC,FBINT,FBCLT,FPPSCLM,FBCLAIMS,FBPRMPT,FBHOLD,FBVEND
"RTN","FBUTL136",273,0)
 S FBXSTR=$G(FBXSTR),FBI=$G(FBI),FBSTA=$$STATION^FBUTL135,FBVEND=$$GET1^DIQ(162.5,FBI_",",2,"I"),FPPSCLM=$$GET1^DIQ(162.5,FBI_",",56,"I"),(FBHOLD,FBICLAIM)=""
"RTN","FBUTL136",274,0)
 I FBXSTR'=-1,FBI
"RTN","FBUTL136",275,0)
 E  Q
"RTN","FBUTL136",276,0)
 ;
"RTN","FBUTL136",277,0)
 I FBXSTR]"" D  Q  ; If user entered FPPS, create UCID, save, and quit
"RTN","FBUTL136",278,0)
 . S FBICLAIM=+$P($$HTE^XLFDT($H)," ",3)_"-"_FBXSTR
"RTN","FBUTL136",279,0)
 . S FBICLAIM=$$INVUCID^FBUTL135(FBI,FBSTA,1,"E",FBICLAIM)  ; Populate UCID field
"RTN","FBUTL136",280,0)
 ;
"RTN","FBUTL136",281,0)
 ; If user didn't enter a new FPPS CLAIM ID
"RTN","FBUTL136",282,0)
 I FBXSTR="" D
"RTN","FBUTL136",283,0)
 . ;If FPPS CLAIM ID field is populated, clear out exisitng UCID and prepare for new one
"RTN","FBUTL136",284,0)
 . I FPPSCLM]"" S FBICLAIM(162.5,FBI_",",85)="" D FILE^DIE(,"FBICLAIM") K FBICLAIM S FBICLAIM="" Q
"RTN","FBUTL136",285,0)
 . ;FPPS CLAIM ID field is null get existing UCID for default
"RTN","FBUTL136",286,0)
 . S FBICLAIM=$$GET1^DIQ(162.5,FBI_",",85,"I") I $E(FBICLAIM,7)'="M" S FBICLAIM=""  ; if not a manual claim, don't use it
"RTN","FBUTL136",287,0)
 ;
"RTN","FBUTL136",288,0)
 I FBICLAIM="" D  Q   ; If UCID not populated
"RTN","FBUTL136",289,0)
 . S FBICLAIM=$$ENTINPAT(,1,"M","I",,FBVEND)  ; allow user to enter new UCID
"RTN","FBUTL136",290,0)
 . I '$G(DTOUT),'$G(DUOUT),FBICLAIM]"" D
"RTN","FBUTL136",291,0)
 .. S FBSITE=$E(FBICLAIM,1,5)
"RTN","FBUTL136",292,0)
 .. S FBSRC=$E(FBICLAIM,6)
"RTN","FBUTL136",293,0)
 .. S FBINT=$E(FBICLAIM,7)
"RTN","FBUTL136",294,0)
 .. S $E(FBICLAIM,1,8)=""
"RTN","FBUTL136",295,0)
 .. S FBICLAIM=$$INVUCID^FBUTL135(FBI,FBSITE,FBSRC,FBINT,FBICLAIM) ; Populate UCID field
"RTN","FBUTL136",296,0)
 ; we have an existing UCID - validate it then allow edit
"RTN","FBUTL136",297,0)
 ;
"RTN","FBUTL136",298,0)
 I '$$VALIDATE^FBUTL135("I",FBICLAIM) S FBICLAIM=""  ; not valid - 
"RTN","FBUTL136",299,0)
 E  D
"RTN","FBUTL136",300,0)
 . S FBSITE=$E(FBICLAIM,1,5) I FBSITE="" S FBSITE=FBSTA
"RTN","FBUTL136",301,0)
 . S FBSRC=$E(FBICLAIM,6) I FBSRC="" S FBSRC=1
"RTN","FBUTL136",302,0)
 . S FBINT=$E(FBICLAIM,7) I FBINT="" S FBINT="M"
"RTN","FBUTL136",303,0)
 . S FBCLT="I"
"RTN","FBUTL136",304,0)
 . S $E(FBICLAIM,1,8)="",FBHOLD=FBICLAIM
"RTN","FBUTL136",305,0)
 ;
"RTN","FBUTL136",306,0)
 I FBICLAIM]"" S FBPRMPT=" "_FBICLAIM_" //"
"RTN","FBUTL136",307,0)
 S FBPRMPT="CLAIM NUMBER:"_$G(FBPRMPT)_" ",(FBTOUT,FBUOUT)=""
"RTN","FBUTL136",308,0)
 F  W !,FBPRMPT R FBANS:DTIME S FBTOUT='$T Q:FBTOUT  D  Q:FBTOUT  Q:FBUOUT  I FBANS'="" S FBCLAIMS=FBANS Q
"RTN","FBUTL136",309,0)
 . I FBANS="",'FBTOUT,FBICLAIM]"" S FBANS=FBICLAIM Q   ; accept existing UCID suffix
"RTN","FBUTL136",310,0)
 . I $TR(FBANS,"new","NEW")="NEW" S FBANS=$$UCLAIMNO^FBUTL135(FBSTA,$G(FBSRC),$G(FBINT),$G(FBCLT)) W "#: "_$E(FBANS,9,28) Q
"RTN","FBUTL136",311,0)
 . I FBANS="??" D  Q:FBANS=""
"RTN","FBUTL136",312,0)
 .. S FBANS=$$ENTHELP(FBVEND,.FBTOUT,.FBUOUT)
"RTN","FBUTL136",313,0)
 .. I FBTOUT S (FBTOUT,FBANS)="" Q
"RTN","FBUTL136",314,0)
 .. I FBUOUT Q
"RTN","FBUTL136",315,0)
 .. I FBANS="" Q
"RTN","FBUTL136",316,0)
 . I FBANS="@" W !!,"  REQUIRED ENTRY.",! S FBANS="" Q
"RTN","FBUTL136",317,0)
 . I $E(FBANS)="^" S FBANS="" W !!,"This is a required response. ""^"" is not allowed.",! Q
"RTN","FBUTL136",318,0)
 . I FBANS="?" D  S FBANS="" Q
"RTN","FBUTL136",319,0)
 .. W !!,"Enter ""NEW"" to automatically generate a new claim number,"
"RTN","FBUTL136",320,0)
 .. W !,"or enter an existing numeric claim number in format YYYY-<nn..>,"
"RTN","FBUTL136",321,0)
 .. W !,"or enter ?? to see a list of existing claim numbers for this vendor.",!
"RTN","FBUTL136",322,0)
 . I FBANS="" S FBANS=FBHOLD Q
"RTN","FBUTL136",323,0)
 . I FBANS?4N1"-"1.15N S FBANS=$$UCLAIMNO^FBUTL135($G(FBSITE),$G(FBSRC),$G(FBINT),$G(FBCLT),FBANS)
"RTN","FBUTL136",324,0)
 . I FBANS'?6N2UL4N1"-"1.15N W !!,"*** INVALID CLAIM NUMBER ****",!! S FBANS="" Q
"RTN","FBUTL136",325,0)
 I FBTOUT S DTOUT=FBTOUT,FBX=-1   ; flag not to save FPPS EDIT
"RTN","FBUTL136",326,0)
 I FBUOUT S DUOUT=FBUOUT,FBX=-1   ; flag not to save FPPS EDIT
"RTN","FBUTL136",327,0)
 I 'FBTOUT,'FBUOUT D
"RTN","FBUTL136",328,0)
 . I FBANS?4N1"-"1.15N D
"RTN","FBUTL136",329,0)
 .. S FBANS=FBSTA_"1MI"_FBANS
"RTN","FBUTL136",330,0)
 . S FBSTA=$E(FBANS,1,5)
"RTN","FBUTL136",331,0)
 . S FBSRC=$E(FBANS,6)
"RTN","FBUTL136",332,0)
 . S FBINT=$E(FBANS,7)
"RTN","FBUTL136",333,0)
 . S $E(FBANS,1,8)=""
"RTN","FBUTL136",334,0)
 . S FBICLAIM=$$INVUCID^FBUTL135(FBI,FBSTA,FBSRC,FBINT,FBANS)
"RTN","FBUTL136",335,0)
 . I +FBICLAIM=-1 W !!,"*** INVALID CLAIM NUMBER *****",!! D EDINPAT(FBXSTR,FBI)   ; Populate UCID field
"RTN","FBUTL136",336,0)
 Q
"RTN","FBUTL5")
0^10^B19998374^B18887718
"RTN","FBUTL5",1,0)
FBUTL5 ;WOIFO/SAB-FEE BASIS UTILITY ;7/6/2003
"RTN","FBUTL5",2,0)
 ;;3.5;FEE BASIS;**61,135**;JAN 30, 1995;Build 3
"RTN","FBUTL5",3,0)
 Q
"RTN","FBUTL5",4,0)
FPPSC(FBEDIT,FBFPPSC) ; Prompt EDI Claim and FPPS Claim ID Extrinsic Function
"RTN","FBUTL5",5,0)
 ; Input
"RTN","FBUTL5",6,0)
 ;   FBEDIT  - optional, true (=1) when editing an existing item
"RTN","FBUTL5",7,0)
 ;   FBFPPSC - optional, current value of FPPS CLAIM ID
"RTN","FBUTL5",8,0)
 ;             only passed when editing an existing item
"RTN","FBUTL5",9,0)
 ; Return value (FBRET)
"RTN","FBUTL5",10,0)
 ;   = FPPS CLAIM ID if EDI Claim
"RTN","FBUTL5",11,0)
 ;   = null if not EDI Claim
"RTN","FBUTL5",12,0)
 ;   = -1 if time-out or '^'
"RTN","FBUTL5",13,0)
 ;
"RTN","FBUTL5",14,0)
 N FBEDI,FBRET
"RTN","FBUTL5",15,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBUTL5",16,0)
 S FBRET=""
"RTN","FBUTL5",17,0)
 ;
"RTN","FBUTL5",18,0)
ASKEDI ; ask if claim is an EDI claim
"RTN","FBUTL5",19,0)
 S DIR(0)="Y"
"RTN","FBUTL5",20,0)
 S DIR("A")="Is this an EDI Claim from the FPPS system"
"RTN","FBUTL5",21,0)
 I $G(FBEDIT) S DIR("B")=$S($G(FBFPPSC)]"":"YES",1:"NO")
"RTN","FBUTL5",22,0)
 D ^DIR K DIR I $D(DIRUT) S FBRET=-1 G FPPSCX
"RTN","FBUTL5",23,0)
 S FBEDI=Y
"RTN","FBUTL5",24,0)
 ;
"RTN","FBUTL5",25,0)
ASKID ; If EDI then ask claim ID
"RTN","FBUTL5",26,0)
 I FBEDI D  I $D(DTOUT)!$D(DUOUT) S FBRET=-1 G FPPSCX
"RTN","FBUTL5",27,0)
 . N DA
"RTN","FBUTL5",28,0)
 . S DIR(0)="162.7,32"
"RTN","FBUTL5",29,0)
 . I $G(FBFPPSC)]"" S DIR("B")=FBFPPSC
"RTN","FBUTL5",30,0)
 . D ^DIR K DIR Q:$D(DIRUT)
"RTN","FBUTL5",31,0)
 . S FBRET=Y
"RTN","FBUTL5",32,0)
 ;
"RTN","FBUTL5",33,0)
 ; If EDI and claim ID not entered then reask
"RTN","FBUTL5",34,0)
 I FBEDI,FBRET="" D  G ASKEDI
"RTN","FBUTL5",35,0)
 . W $C(7),!,"  The FPPS CLAIM ID must be entered for EDI claims!"
"RTN","FBUTL5",36,0)
 ;
"RTN","FBUTL5",37,0)
FPPSCX ; FPPSC Exit
"RTN","FBUTL5",38,0)
 I FBRET'="-1" D    ; EDIT UCID FB3.5*135
"RTN","FBUTL5",39,0)
 . N XQOPT
"RTN","FBUTL5",40,0)
 . D OP^XQCHK I $P(XQOPT,U,1)'="FBAA EDIT PAYMENT" Q
"RTN","FBUTL5",41,0)
 . D EDITOUTP^FBUTL136(.FBRET,.DA) Q
"RTN","FBUTL5",42,0)
 Q FBRET
"RTN","FBUTL5",43,0)
 ;
"RTN","FBUTL5",44,0)
FPPSL(FBFPPSL,FBALL,FBNOOUT) ; Prompt FPPS Line Item Extrinsic Function
"RTN","FBUTL5",45,0)
 ; Input
"RTN","FBUTL5",46,0)
 ;   FBFPPSL -  optional, current value of FPPS LINE ITEM
"RTN","FBUTL5",47,0)
 ;              only passed when editing an existing item
"RTN","FBUTL5",48,0)
 ;   FBALL   -  optional, true (=1) if ALL allowed as input value,
"RTN","FBUTL5",49,0)
 ;              default is false
"RTN","FBUTL5",50,0)
 ;   FBNOOUT -  optional, boolean value, default 0, set =1 if user
"RTN","FBUTL5",51,0)
 ;              should not be allowed to exit using an uparrow
"RTN","FBUTL5",52,0)
 ; Return value (FBRET)
"RTN","FBUTL5",53,0)
 ;   = FPPS LINE ITEM
"RTN","FBUTL5",54,0)
 ;   = -1 if time-out or '^'
"RTN","FBUTL5",55,0)
 ;
"RTN","FBUTL5",56,0)
 N FBRET
"RTN","FBUTL5",57,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBUTL5",58,0)
 S FBRET=""
"RTN","FBUTL5",59,0)
 S FBNOOUT=$G(FBNOOUT,0)
"RTN","FBUTL5",60,0)
 S FBALL=$G(FBALL,0)
"RTN","FBUTL5",61,0)
 ;
"RTN","FBUTL5",62,0)
ASKLI ; ask line item
"RTN","FBUTL5",63,0)
 I FBALL D  G:FBRET]"" FPPSLX I $D(DIRUT) S FBRET=-1 G FPPSLX
"RTN","FBUTL5",64,0)
 . S FBRET=""
"RTN","FBUTL5",65,0)
 . S DIR(0)="Y"
"RTN","FBUTL5",66,0)
 . S DIR("A")="Does this VistA invoice cover all line items on the FPPS Claim"
"RTN","FBUTL5",67,0)
 . I $G(FBFPPSL)]"" S DIR("B")=$S(FBFPPSL="ALL":"YES",1:"NO")
"RTN","FBUTL5",68,0)
 . D ^DIR K DIR Q:$D(DIRUT)
"RTN","FBUTL5",69,0)
 . I Y S FBRET="ALL"
"RTN","FBUTL5",70,0)
 ;
"RTN","FBUTL5",71,0)
 S DIR(0)="LCA^1:999:0"
"RTN","FBUTL5",72,0)
 S DIR("A")="FPPS LINE ITEM: "
"RTN","FBUTL5",73,0)
 S DIR("?")="This response must be a number or a list or range, e.g., 1,3,5 or 2-4,8."
"RTN","FBUTL5",74,0)
 S DIR("??")="^D LIHLP^FBUTL5"
"RTN","FBUTL5",75,0)
 I $G(FBFPPSL)]"",FBFPPSL'="ALL" S DIR("B")=FBFPPSL
"RTN","FBUTL5",76,0)
 D ^DIR K DIR
"RTN","FBUTL5",77,0)
 I $D(DTOUT)!$D(DUOUT) S FBRET=-1 G FPPSLX
"RTN","FBUTL5",78,0)
 S FBRET=Y
"RTN","FBUTL5",79,0)
 ;
"RTN","FBUTL5",80,0)
FPPSLX ; FPPSL Exit
"RTN","FBUTL5",81,0)
 I FBNOOUT,FBRET=-1 D  G ASKLI
"RTN","FBUTL5",82,0)
 . W !,"'^' NOT ALLOWED"
"RTN","FBUTL5",83,0)
 ; strip trailing comma if any
"RTN","FBUTL5",84,0)
 I $E(FBRET,$L(FBRET))="," S FBRET=$E(FBRET,1,$L(FBRET)-1)
"RTN","FBUTL5",85,0)
 Q FBRET
"RTN","FBUTL5",86,0)
 ;
"RTN","FBUTL5",87,0)
LIHLP ; Line Item ?? Help
"RTN","FBUTL5",88,0)
 W !,"Enter the line item sequence number associated with this charge.  Each"
"RTN","FBUTL5",89,0)
 W !,"charge on the FPPS invoice document will have a line item sequence number"
"RTN","FBUTL5",90,0)
 W !,"associated with it.  A line item can be entered individually or a group of"
"RTN","FBUTL5",91,0)
 W !,"charges from multiple lines can be entered.  If all line items in a group"
"RTN","FBUTL5",92,0)
 W !,"are in numerical sequence, you may enter the first line item sequence"
"RTN","FBUTL5",93,0)
 W !,"number followed by a hyphen and the last line item sequence number.  If"
"RTN","FBUTL5",94,0)
 W !,"the grouped charges are not in sequential order, each line item must be"
"RTN","FBUTL5",95,0)
 W !,"entered individually, followed by a comma."
"RTN","FBUTL5",96,0)
 W !
"RTN","FBUTL5",97,0)
 Q
"RTN","FBUTL5",98,0)
ASKPAN() ; Ask Patient Account Number Extrinsic Function
"RTN","FBUTL5",99,0)
 ; Return value (FBRET)
"RTN","FBUTL5",100,0)
 ;   = PATIENT ACCOUNT NUMBER (if entered)
"RTN","FBUTL5",101,0)
 ;   = null if value not entered
"RTN","FBUTL5",102,0)
 ;   = '^' if time-out or '^'
"RTN","FBUTL5",103,0)
 N FBRET
"RTN","FBUTL5",104,0)
 N DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBUTL5",105,0)
 S FBRET=""
"RTN","FBUTL5",106,0)
 S DIR(0)="162.03,49"
"RTN","FBUTL5",107,0)
 D ^DIR K DIR
"RTN","FBUTL5",108,0)
 I $D(DTOUT)!$D(DUOUT) S FBRET="^"
"RTN","FBUTL5",109,0)
 I '$D(DIRUT) S FBRET=Y
"RTN","FBUTL5",110,0)
 Q FBRET
"RTN","FBUTL5",111,0)
 ;
"RTN","FBUTL5",112,0)
ASKREVC() ; Ask Revenue Code Extrinsic Function
"RTN","FBUTL5",113,0)
 ; Return value (FBRET)
"RTN","FBUTL5",114,0)
 ;   = REVENUE CODE, internal pointer value (if entered)
"RTN","FBUTL5",115,0)
 ;   = null if value not entered
"RTN","FBUTL5",116,0)
 ;   = '^' if time-out or '^'
"RTN","FBUTL5",117,0)
 N FBRET
"RTN","FBUTL5",118,0)
 N DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBUTL5",119,0)
 S FBRET=""
"RTN","FBUTL5",120,0)
 S DIR(0)="162.03,48"
"RTN","FBUTL5",121,0)
 D ^DIR K DIR
"RTN","FBUTL5",122,0)
 I $D(DTOUT)!$D(DUOUT) S FBRET="^"
"RTN","FBUTL5",123,0)
 I '$D(DIRUT) S FBRET=+Y
"RTN","FBUTL5",124,0)
 Q FBRET
"RTN","FBUTL5",125,0)
 ;
"RTN","FBUTL5",126,0)
ASKUNITS() ; Ask Units Paid Extrinsic Function
"RTN","FBUTL5",127,0)
 ; Return value (FBRET)
"RTN","FBUTL5",128,0)
 ;   = UNITS PAID (if entered)
"RTN","FBUTL5",129,0)
 ;   = null if value not entered
"RTN","FBUTL5",130,0)
 ;   = '^' if time-out or '^'
"RTN","FBUTL5",131,0)
 N FBRET
"RTN","FBUTL5",132,0)
 N DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBUTL5",133,0)
 S FBRET=""
"RTN","FBUTL5",134,0)
 S DIR(0)="162.03,47"
"RTN","FBUTL5",135,0)
 S DIR("B")=1
"RTN","FBUTL5",136,0)
 D ^DIR K DIR
"RTN","FBUTL5",137,0)
 I $D(DTOUT)!$D(DUOUT) S FBRET="^"
"RTN","FBUTL5",138,0)
 I '$D(DIRUT) S FBRET=Y
"RTN","FBUTL5",139,0)
 Q FBRET
"RTN","FBUTL5",140,0)
 ;
"RTN","FBUTL5",141,0)
ASKPCN() ; Ask Patient Control Number Extrinsic Function
"RTN","FBUTL5",142,0)
 ; Return value (FBRET)
"RTN","FBUTL5",143,0)
 ;   = PATIENT ACCOUNT NUMBER (if entered)
"RTN","FBUTL5",144,0)
 ;   = null if value not entered
"RTN","FBUTL5",145,0)
 ;   = '^' if time-out or '^'
"RTN","FBUTL5",146,0)
 N FBRET
"RTN","FBUTL5",147,0)
 N DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBUTL5",148,0)
 S FBRET=""
"RTN","FBUTL5",149,0)
 S DIR(0)="162.5,55"
"RTN","FBUTL5",150,0)
 D ^DIR K DIR
"RTN","FBUTL5",151,0)
 I $D(DTOUT)!$D(DUOUT) S FBRET="^"
"RTN","FBUTL5",152,0)
 I '$D(DIRUT) S FBRET=Y
"RTN","FBUTL5",153,0)
 Q FBRET
"RTN","FBUTL5",154,0)
 ;
"RTN","FBUTL5",155,0)
 ;FBUTL5
"SEC","^DIC",161.9,161.9,0,"AUDIT")
@
"SEC","^DIC",161.9,161.9,0,"DD")
@
"SEC","^DIC",161.9,161.9,0,"DEL")
@
"SEC","^DIC",161.9,161.9,0,"LAYGO")
@
"SEC","^DIC",161.9,161.9,0,"RD")
@
"SEC","^DIC",161.9,161.9,0,"WR")
@
"UP",162,162.03,-3)
162^1
"UP",162,162.03,-2)
162.01^1
"UP",162,162.03,-1)
162.02^1
"UP",162,162.03,0)
162.03
"VER")
8.0^22.0
"^DD",161.4,161.4,39,0)
UNIQUE CLAIM IDENTIFIER SEQ^F^^2;3^K:$L(X)>20!($L(X)<1) X
"^DD",161.4,161.4,39,3)
Answer must be 1-20 characters in length.
"^DD",161.4,161.4,39,21,0)
^^4^4^3120530^
"^DD",161.4,161.4,39,21,1,0)
The sequence number for the UNIQUE CLAIM IDENTIFER that is used to 
"^DD",161.4,161.4,39,21,2,0)
identify individual claims. The UNIQUE CLAIM IDENTIFIER field is
"^DD",161.4,161.4,39,21,3,0)
present in the FEE BASIS PAYMENT (#162) file, field #81 and in the FEE 
"^DD",161.4,161.4,39,21,4,0)
BASIS INVOICE (#162.5) file, field #85.
"^DD",161.4,161.4,39,"DT")
3120530
"^DD",161.4,161.4,40,0)
ALLOW FB PAID TO IB^S^0:NO;1:YES;^2;4^Q
"^DD",161.4,161.4,40,3)
Enter YES if the FB PAID TO IB option should be processed.
"^DD",161.4,161.4,40,21,0)
^^6^6^3120530^
"^DD",161.4,161.4,40,21,1,0)
This field allows the site to turn on the FB to IB Provider automation.  
"^DD",161.4,161.4,40,21,2,0)
The scheduled option, Fee Basis Payment to IB [FB PAID TO IB] also needs 
"^DD",161.4,161.4,40,21,3,0)
to be scheduled to run each night.  The background process will check 
"^DD",161.4,161.4,40,21,4,0)
this parameter to determine if FB providers in Fee Invoice and Payment 
"^DD",161.4,161.4,40,21,5,0)
entries should be created and/or updated in the IB NON/OTHER VA BILLING 
"^DD",161.4,161.4,40,21,6,0)
PROVIDER (#355.93) file.
"^DD",161.4,161.4,40,"DT")
3120530
"^DD",161.9,161.9,0)
FIELD^^.09^9
"^DD",161.9,161.9,0,"DDA")
N
"^DD",161.9,161.9,0,"DT")
3120606
"^DD",161.9,161.9,0,"IX","AC",161.9,.04)

"^DD",161.9,161.9,0,"IX","B",161.9,.01)

"^DD",161.9,161.9,0,"NM","FEE BASIS PAID TO IB")

"^DD",161.9,161.9,0,"VRPK")
FB
"^DD",161.9,161.9,.01,0)
PATIENT^RP2'^DPT(^0;1^Q
"^DD",161.9,161.9,.01,1,0)
^.1
"^DD",161.9,161.9,.01,1,1,0)
161.9^B
"^DD",161.9,161.9,.01,1,1,1)
S ^FB(161.9,"B",$E(X,1,30),DA)=""
"^DD",161.9,161.9,.01,1,1,2)
K ^FB(161.9,"B",$E(X,1,30),DA)
"^DD",161.9,161.9,.01,3)
Enter the Patient for the paid claim.
"^DD",161.9,161.9,.01,21,0)
^^2^2^3120530^
"^DD",161.9,161.9,.01,21,1,0)
This field contains the patient for the paid Fee claim that may have 
"^DD",161.9,161.9,.01,21,2,0)
vendor and/or 5010 provider information automated to IB.
"^DD",161.9,161.9,.01,"DT")
3120530
"^DD",161.9,161.9,.02,0)
PROGRAM^S^3:OUTPATIENT;9:INPATIENT;^0;2^Q
"^DD",161.9,161.9,.02,3)
Choose the fee program for the claim.
"^DD",161.9,161.9,.02,21,0)
^^4^4^3120530^
"^DD",161.9,161.9,.02,21,1,0)
This field identifies the Fee program for the paid claim. Vendor and 5010 
"^DD",161.9,161.9,.02,21,2,0)
provider data is pulled from either the FEE BASIS PAYMENT(#162) file for 
"^DD",161.9,161.9,.02,21,3,0)
Outpatient, or the FEE BASIS INVOICE(#162.5) file for Inpatient during IB 
"^DD",161.9,161.9,.02,21,4,0)
automation.
"^DD",161.9,161.9,.02,"DT")
3120530
"^DD",161.9,161.9,.03,0)
FB INTERNAL CONTROL NUMBER^F^^0;3^K:$L(X)>30!($L(X)<1) X
"^DD",161.9,161.9,.03,3)
Answer must be 1-30 characters in length.
"^DD",161.9,161.9,.03,21,0)
^^5^5^3120328^
"^DD",161.9,161.9,.03,21,1,0)
This value is retrieved from the PAID message from Central Fee to identify
"^DD",161.9,161.9,.03,21,2,0)
the payment or invoice. Outpatient claim control numbers are formatted as
"^DD",161.9,161.9,.03,21,3,0)
comma-delimited strings that point to the specific line item in a claim.
"^DD",161.9,161.9,.03,21,4,0)
Inpatient claim control numbers are pointers to the FEE BASIS
"^DD",161.9,161.9,.03,21,5,0)
INVOICE(#162.5) file.
"^DD",161.9,161.9,.03,"DT")
3120328
"^DD",161.9,161.9,.04,0)
PROCESS DATE^D^^0;4^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",161.9,161.9,.04,1,0)
^.1
"^DD",161.9,161.9,.04,1,1,0)
161.9^AC
"^DD",161.9,161.9,.04,1,1,1)
S ^FB(161.9,"AC",$E(X,1,30),DA)=""
"^DD",161.9,161.9,.04,1,1,2)
K ^FB(161.9,"AC",$E(X,1,30),DA)
"^DD",161.9,161.9,.04,1,1,"%D",0)
^^2^2^3120328^
"^DD",161.9,161.9,.04,1,1,"%D",1,0)
This cross-reference is used by 5010 FB PAID TO IB background job to identify
"^DD",161.9,161.9,.04,1,1,"%D",2,0)
records by the date the PAID message from Central Fee was processed
"^DD",161.9,161.9,.04,1,1,"DT")
3120321
"^DD",161.9,161.9,.04,3)
Enter the date the PAID message was processed from Central Fee.
"^DD",161.9,161.9,.04,21,0)
^^2^2^3120328^
"^DD",161.9,161.9,.04,21,1,0)
This field contains the date the MailMan message from Central Fee was 
"^DD",161.9,161.9,.04,21,2,0)
processed by the server.
"^DD",161.9,161.9,.04,"DT")
3120530
"^DD",161.9,161.9,.05,0)
LI NUMBER^NJ2,0^^0;5^K:+X'=X!(X>35)!(X<1)!(X?.E1"."1.N) X
"^DD",161.9,161.9,.05,3)
Type a number between 1 and 35, 0 decimal digits.
"^DD",161.9,161.9,.05,21,0)
^^1^1^3120530^
"^DD",161.9,161.9,.05,21,1,0)
The Line Item number from the FEE BASIS entry being processed.
"^DD",161.9,161.9,.05,"DT")
3120530
"^DD",161.9,161.9,.06,0)
PROVIDER TYPE^S^V:VENDOR;A:ATTENDING;O:OPERATING;R:RENDERING;S:SERVICING;F:REFERRING;L:LI RENDERING;^0;6^Q
"^DD",161.9,161.9,.06,3)
Enter a Provider Type for this Line Item.
"^DD",161.9,161.9,.06,21,0)
^^2^2^3120530^
"^DD",161.9,161.9,.06,21,1,0)
This field identifies the provider type that is associated with this Line 
"^DD",161.9,161.9,.06,21,2,0)
Item.
"^DD",161.9,161.9,.06,"DT")
3120530
"^DD",161.9,161.9,.07,0)
IB NON/OTHER PROVIDER^P355.93'^IBA(355.93,^0;7^Q
"^DD",161.9,161.9,.07,3)
Select the IB NON/OTHER VA BILLING PROVIDER Name.
"^DD",161.9,161.9,.07,21,0)
^^1^1^3120530^
"^DD",161.9,161.9,.07,21,1,0)
This is the provider of Fee Basis services in the IB file.
"^DD",161.9,161.9,.07,"DT")
3120530
"^DD",161.9,161.9,.08,0)
NPI ADDED^S^0:NO NPI UPDATES ATTEMPTED;1:NPI DATA INVALID;2:NPI MATCHED ACTIVE, NO UPDATES;3:NPI MATCHED INACTIVE, NO UPDATES;4:NPI MATCHED ACTIVE, IB UPDATED;5:NPI NEW, IB RECORD CREATED;^0;8^Q
"^DD",161.9,161.9,.08,3)
Enter the code that describes result of NPI processing.
"^DD",161.9,161.9,.08,21,0)
^^3^3^3120530^
"^DD",161.9,161.9,.08,21,1,0)
This field provides information about updates to the NPI(#41.01) field of 
"^DD",161.9,161.9,.08,21,2,0)
the record in the IB/NON OTHER VA BILLING PROVIDER (#355.93) file as 
"^DD",161.9,161.9,.08,21,3,0)
pointed to by field #.07 in this file.
"^DD",161.9,161.9,.08,"DT")
3120530
"^DD",161.9,161.9,.09,0)
TAXONOMY ADDED^S^0:NO TXY UPDATES ATTEMPTED;1:TXY CODE NOT FOUND IN 8932.1;2:MATCHED PRIMARY, NO UPDATES;3:MATCHED NON-PRIMARY, IB TXY UPDATES;4:NEW, IB TXY ENTRY CREATED;^0;9^Q
"^DD",161.9,161.9,.09,3)
Enter the code that describes the result of TXY processing.
"^DD",161.9,161.9,.09,21,0)
^^3^3^3120530^
"^DD",161.9,161.9,.09,21,1,0)
This field provides information about updates to the TAXONOMY CODE(#42) 
"^DD",161.9,161.9,.09,21,2,0)
field of the record in the IB/NON OTHER VA PROVIDER(#355.93) file as 
"^DD",161.9,161.9,.09,21,3,0)
pointed to by field #.07 in this file.
"^DD",161.9,161.9,.09,"DT")
3120606
"^DD",162,162.03,81,0)
UNIQUE CLAIM IDENTIFIER^F^^5;5^K:$L(X)>28!($L(X)<1) X
"^DD",162,162.03,81,3)
Answer must be 1-28 characters in length.
"^DD",162,162.03,81,21,0)
^^2^2^3120306^
"^DD",162,162.03,81,21,1,0)
This field contains a unique identifier for tracking claims. Fee5010 
"^DD",162,162.03,81,21,2,0)
Project.
"^DD",162,162.03,81,"DT")
3120322
"^DD",162.5,162.5,85,0)
UNIQUE CLAIM IDENTIFIER^F^^5;5^K:$L(X)>28!($L(X)<1) X
"^DD",162.5,162.5,85,3)
Answer must be 1-28 characters in length.
"^DD",162.5,162.5,85,21,0)
^^2^2^3120529^
"^DD",162.5,162.5,85,21,1,0)
This field contains a unique identifier for tracking claims.  Fee5010 
"^DD",162.5,162.5,85,21,2,0)
Project.
"^DD",162.5,162.5,85,"DT")
3120529
"^DIC",161.9,161.9,0)
FEE BASIS PAID TO IB^161.9
"^DIC",161.9,161.9,0,"GL")
^FB(161.9,
"^DIC",161.9,161.9,"%D",0)
^^4^4^3120328^
"^DIC",161.9,161.9,"%D",1,0)
This file contains temporary information for the automation
"^DIC",161.9,161.9,"%D",2,0)
of Fee Basis Vendor and 5010 Providers to the IB NON/OTHER
"^DIC",161.9,161.9,"%D",3,0)
VA BILLING PROVIDER (#355.93) file.  The automation assists IB clerks in the
"^DIC",161.9,161.9,"%D",4,0)
creation of bills to third party insurance companies for paid fee claims.
"^DIC",161.9,"B","FEE BASIS PAID TO IB",161.9)

"BLD",9230,6)
^118
**END**
**END**
