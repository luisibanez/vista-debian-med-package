Released MPIF*1*57 SEQ #55
Extracted from mail message
**KIDS**:MPIF*1.0*57^

**INSTALL NAME**
MPIF*1.0*57
"BLD",2976,0)
MPIF*1.0*57^MASTER PATIENT INDEX VISTA^0^3130510^y
"BLD",2976,1,0)
^^3^3^3130416^
"BLD",2976,1,1,0)
MASTER VETERAN INDEX VISTA ISSUES - ITERATION 10
"BLD",2976,1,2,0)
Refer to patch MPIF*1*57 in the FORUM Patch Module for a complete
"BLD",2976,1,3,0)
description.
"BLD",2976,4,0)
^9.64PA^^
"BLD",2976,6.3)
2
"BLD",2976,"ABPKG")
n
"BLD",2976,"KRN",0)
^9.67PA^779.2^20
"BLD",2976,"KRN",.4,0)
.4
"BLD",2976,"KRN",.401,0)
.401
"BLD",2976,"KRN",.402,0)
.402
"BLD",2976,"KRN",.403,0)
.403
"BLD",2976,"KRN",.5,0)
.5
"BLD",2976,"KRN",.84,0)
.84
"BLD",2976,"KRN",3.6,0)
3.6
"BLD",2976,"KRN",3.8,0)
3.8
"BLD",2976,"KRN",9.2,0)
9.2
"BLD",2976,"KRN",9.8,0)
9.8
"BLD",2976,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",2976,"KRN",9.8,"NM",1,0)
MPIFSA2^^0^B83766711
"BLD",2976,"KRN",9.8,"NM",2,0)
MPIFDNL^^0^B34577284
"BLD",2976,"KRN",9.8,"NM",3,0)
MPIFEXT^^0^B45536997
"BLD",2976,"KRN",9.8,"NM","B","MPIFDNL",2)

"BLD",2976,"KRN",9.8,"NM","B","MPIFEXT",3)

"BLD",2976,"KRN",9.8,"NM","B","MPIFSA2",1)

"BLD",2976,"KRN",19,0)
19
"BLD",2976,"KRN",19.1,0)
19.1
"BLD",2976,"KRN",101,0)
101
"BLD",2976,"KRN",409.61,0)
409.61
"BLD",2976,"KRN",771,0)
771
"BLD",2976,"KRN",779.2,0)
779.2
"BLD",2976,"KRN",870,0)
870
"BLD",2976,"KRN",8989.51,0)
8989.51
"BLD",2976,"KRN",8989.52,0)
8989.52
"BLD",2976,"KRN",8994,0)
8994
"BLD",2976,"KRN","B",.4,.4)

"BLD",2976,"KRN","B",.401,.401)

"BLD",2976,"KRN","B",.402,.402)

"BLD",2976,"KRN","B",.403,.403)

"BLD",2976,"KRN","B",.5,.5)

"BLD",2976,"KRN","B",.84,.84)

"BLD",2976,"KRN","B",3.6,3.6)

"BLD",2976,"KRN","B",3.8,3.8)

"BLD",2976,"KRN","B",9.2,9.2)

"BLD",2976,"KRN","B",9.8,9.8)

"BLD",2976,"KRN","B",19,19)

"BLD",2976,"KRN","B",19.1,19.1)

"BLD",2976,"KRN","B",101,101)

"BLD",2976,"KRN","B",409.61,409.61)

"BLD",2976,"KRN","B",771,771)

"BLD",2976,"KRN","B",779.2,779.2)

"BLD",2976,"KRN","B",870,870)

"BLD",2976,"KRN","B",8989.51,8989.51)

"BLD",2976,"KRN","B",8989.52,8989.52)

"BLD",2976,"KRN","B",8994,8994)

"BLD",2976,"QDEF")
^^^^^^^^^^YES
"BLD",2976,"QUES",0)
^9.62^^
"BLD",2976,"REQB",0)
^9.611^3^3
"BLD",2976,"REQB",1,0)
MPIF*1.0*55^2
"BLD",2976,"REQB",2,0)
MPIF*1.0*20^2
"BLD",2976,"REQB",3,0)
DG*5.3*863^2
"BLD",2976,"REQB","B","DG*5.3*863",3)

"BLD",2976,"REQB","B","MPIF*1.0*20",2)

"BLD",2976,"REQB","B","MPIF*1.0*55",1)

"MBREQ")
0
"PKG",282,-1)
1^1
"PKG",282,0)
MASTER PATIENT INDEX VISTA^MPIF^Master Patient Index VistA side
"PKG",282,20,0)
^9.402P^^
"PKG",282,22,0)
^9.49I^1^1
"PKG",282,22,1,0)
1.0^2990428
"PKG",282,22,1,"PAH",1,0)
57^3130510
"PKG",282,22,1,"PAH",1,1,0)
^^3^3^3130510
"PKG",282,22,1,"PAH",1,1,1,0)
MASTER VETERAN INDEX VISTA ISSUES - ITERATION 10
"PKG",282,22,1,"PAH",1,1,2,0)
Refer to patch MPIF*1*57 in the FORUM Patch Module for a complete
"PKG",282,22,1,"PAH",1,1,3,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","MPIFDNL")
0^2^B34577284^B32783071
"RTN","MPIFDNL",1,0)
MPIFDNL ;OAK/TKW-CALL RPC TO ADD TO MPI DO NOT LINK FILE #985.28 ;9 Apr 2013  2:18 PM
"RTN","MPIFDNL",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**52,55,57**;30 Apr 99;Build 2
"RTN","MPIFDNL",3,0)
 ;
"RTN","MPIFDNL",4,0)
 ;Reference to ^XWB2HL7 supported by IA #3144
"RTN","MPIFDNL",5,0)
 ;Reference to ^XWBDRPC supported by IA #3149
"RTN","MPIFDNL",6,0)
 ;
"RTN","MPIFDNL",7,0)
CALLRPC(MPIFDUZ,MPIFSITE,MPIFFR,MPIFTO,MPIFINAC) ; Activate (add if necessary) or
"RTN","MPIFDNL",8,0)
 ; inactivate entry on MPI DO NOT LINK file (#985.28)
"RTN","MPIFDNL",9,0)
 ;
"RTN","MPIFDNL",10,0)
 ; Called from option XDR VERIFY ALL when patient pair status set to VERIFIED, NOT A DUPLICATE
"RTN","MPIFDNL",11,0)
 ; Called from option XDR EDIT DUP RECORD STATUS when status set to POTENTIAL DUPLICATE, UNVERIFIED
"RTN","MPIFDNL",12,0)
 ;  MPIFDUZ = DUZ of current user (REQUIRED)
"RTN","MPIFDNL",13,0)
 ;  MPIFSITE = IEN from file 4 for current users institution (from DUZ(2)) (REQUIRED)
"RTN","MPIFDNL",14,0)
 ;  MPIFFR = First Patient IEN (DFN) from File 2 at the VistA site (REQUIRED)
"RTN","MPIFDNL",15,0)
 ;  MPIFTO = Second Patient IEN (DFN) from file 2 at the VistA site (REQUIRED)
"RTN","MPIFDNL",16,0)
 ;  MPIFINAC = If set to 1, entry will be inactivated (OPTIONAL)
"RTN","MPIFDNL",17,0)
 ;
"RTN","MPIFDNL",18,0)
 ; Call KERNEL routine to call remote RPC
"RTN","MPIFDNL",19,0)
 ; 1) Return array
"RTN","MPIFDNL",20,0)
 ; 2) Station number where RPC is to be executed (MPI="200M")
"RTN","MPIFDNL",21,0)
 ; 3) Name of RPC at VistA site
"RTN","MPIFDNL",22,0)
 ; 4) Version number
"RTN","MPIFDNL",23,0)
 ; 5) SOURCEID = TO_DFN~STATION~Assigning_Authority~Source_Type (Ex. 12345~500~USVHA~PI)
"RTN","MPIFDNL",24,0)
 ; 6) DNLSOURCEID = FROM_DFN~STATION~Assigning_Authority~Source_Type
"RTN","MPIFDNL",25,0)
 ; 7) DNLIDENTIFIEDBY = Name of person whose DUZ represents current user
"RTN","MPIFDNL",26,0)
 ; 8) DNLEVENT = "P" (KERNEL Duplicate Merge potential match resolution)
"RTN","MPIFDNL",27,0)
 ; 9) DNLIDENTIFYINGLOCATION = VistA station number
"RTN","MPIFDNL",28,0)
 ; 10) INACTIVATE_FLAG = (optional) set to "Y" if entry is to be inactivated.
"RTN","MPIFDNL",29,0)
 ;
"RTN","MPIFDNL",30,0)
 N MPIFRTN,MPIFNAME,MPIFSTA,MPISTA,MPIFFRP,MPIFTOP,MPIFHNDL,MPIFUERR,X
"RTN","MPIFDNL",31,0)
 ; Set MPI station number
"RTN","MPIFDNL",32,0)
 S MPISTA="200M"
"RTN","MPIFDNL",33,0)
 ; Get current users name and current station number
"RTN","MPIFDNL",34,0)
 S MPIFDUZ=+$G(MPIFDUZ),MPIFSITE=+$G(MPIFSITE)
"RTN","MPIFDNL",35,0)
 S (MPIFNAME,MPIFSTA)=""
"RTN","MPIFDNL",36,0)
 I MPIFSITE,$D(^DIC(4,MPIFSITE,0)) S MPIFSTA=$$GET1^DIQ(4,+MPIFSITE_",",99)
"RTN","MPIFDNL",37,0)
 I MPIFSTA="" D  Q
"RTN","MPIFDNL",38,0)
 . D ERRMSG(MPIFNAME,MPIFSITE,MPIFFR,MPIFTO,"missing or invalid value in user's station DUZ(2) parameter")
"RTN","MPIFDNL",39,0)
 . Q
"RTN","MPIFDNL",40,0)
 I $D(^VA(200,MPIFDUZ,0)) S MPIFNAME=$$GET1^DIQ(200,MPIFDUZ_",",.01)
"RTN","MPIFDNL",41,0)
 I ('MPIFDUZ)!(MPIFNAME'?1U.E1","1U.E) D  Q
"RTN","MPIFDNL",42,0)
 . D ERRMSG(MPIFDUZ,MPIFSTA,MPIFFR,MPIFTO,"missing or invalid value in users DUZ variable")
"RTN","MPIFDNL",43,0)
 . Q
"RTN","MPIFDNL",44,0)
 S MPIFUERR=0
"RTN","MPIFDNL",45,0)
 S X=$$GET1^DIQ(200,MPIFDUZ_",",9)
"RTN","MPIFDNL",46,0)
 ; If station is not MANILA-RO, user must have an SSN.
"RTN","MPIFDNL",47,0)
 I MPIFSTA'=358,X'?9N D  Q
"RTN","MPIFDNL",48,0)
 . D ERRMSG(MPIFDUZ,MPIFSTA,MPIFFR,MPIFTO,"Current user has missing or invalid SSN")
"RTN","MPIFDNL",49,0)
 . Q
"RTN","MPIFDNL",50,0)
 S MPIFFR=+$G(MPIFFR),MPIFTO=+$G(MPIFTO)
"RTN","MPIFDNL",51,0)
 I ('$D(^DPT(MPIFFR,0)))!('$D(^DPT(MPIFTO,0))) D  Q
"RTN","MPIFDNL",52,0)
 . D ERRMSG(MPIFNAME,MPIFSTA,MPIFFR,MPIFTO,"invalid FROM or TO patient input variable")
"RTN","MPIFDNL",53,0)
 . Q
"RTN","MPIFDNL",54,0)
 S MPIFSTA=$P($$SITE^VASITE,U,3) ;**55,MPIC 2161: Reset site, don't use DUZ(2)
"RTN","MPIFDNL",55,0)
 ; Build FROM patient parameter
"RTN","MPIFDNL",56,0)
 S MPIFFRP=MPIFFR_"~"_MPIFSTA_"~USVHA~PI"
"RTN","MPIFDNL",57,0)
 ; Build TO patient parameter
"RTN","MPIFDNL",58,0)
 S MPIFTOP=MPIFTO_"~"_MPIFSTA_"~USVHA~PI"
"RTN","MPIFDNL",59,0)
 ; Call RPC to Activate or Inactivate the entry in the MPI DO NOT LINK file.
"RTN","MPIFDNL",60,0)
 I $G(MPIFINAC) D EN1^XWB2HL7(.MPIFRTN,MPISTA,"MPIF DNL ADD UPD",1,MPIFTOP,MPIFFRP,"P",MPIFSTA,MPIFNAME,"Y")
"RTN","MPIFDNL",61,0)
 I '$G(MPIFINAC) D EN1^XWB2HL7(.MPIFRTN,MPISTA,"MPIF DNL ADD UPD",1,MPIFTOP,MPIFFRP,"P",MPIFSTA,MPIFNAME)
"RTN","MPIFDNL",62,0)
 ; If RPC was not scheduled, return error.
"RTN","MPIFDNL",63,0)
 I $G(MPIFRTN(0))=""!($P($G(MPIFRTN(0)),U)=0)!(+$G(MPIFRTN(0))=-1) D  Q
"RTN","MPIFDNL",64,0)
 . S X=$P($G(MPIFRTN(0)),U,2)
"RTN","MPIFDNL",65,0)
 . S:X="" X=$P($G(MPIFRTN(1)),U,2)
"RTN","MPIFDNL",66,0)
 . D ERRMSG(MPIFNAME,MPIFSTA,MPIFFR,MPIFTO,X)
"RTN","MPIFDNL",67,0)
 . Q
"RTN","MPIFDNL",68,0)
 ; Schedule a taskman job to process results of RPC
"RTN","MPIFDNL",69,0)
 S MPIFHNDL=MPIFRTN(0)
"RTN","MPIFDNL",70,0)
 N ZTIO,ZTSK,ZTRTN,ZTDESC,ZTSAVE,ZTDTH,Y
"RTN","MPIFDNL",71,0)
 S ZTIO="",ZTRTN="CHKRSLT^MPIFDNL",ZTDTH=$H
"RTN","MPIFDNL",72,0)
 S ZTSAVE("MPIFHNDL")=MPIFHNDL,ZTSAVE("MPIFNAME")=MPIFNAME,ZTSAVE("MPIFSTA")=MPIFSTA
"RTN","MPIFDNL",73,0)
 S ZTSAVE("MPIFFR")=MPIFFR,ZTSAVE("MPIFTO")=MPIFTO
"RTN","MPIFDNL",74,0)
 S ZTDESC="Check Results from call to RPC MPIF DNL ADD UPD"
"RTN","MPIFDNL",75,0)
 D ^%ZTLOAD
"RTN","MPIFDNL",76,0)
 I '$G(ZTSK) D  Q
"RTN","MPIFDNL",77,0)
 . S MPIFMSG="Results not returned from RPC to log an MPI DO NOT LINK entry for User "_MPIFNAME_" at station "_MPIFSTA_", for "_MPIFFR_" and "_MPIFTO_"."
"RTN","MPIFDNL",78,0)
 . D EXC^RGHLLOG(208,MPIFMSG,MPIFTO)
"RTN","MPIFDNL",79,0)
 . D STOP^RGHLLOG(0)
"RTN","MPIFDNL",80,0)
 . Q
"RTN","MPIFDNL",81,0)
 Q
"RTN","MPIFDNL",82,0)
 ;
"RTN","MPIFDNL",83,0)
CHKRSLT ; Check results from calling RPC (QUEUED job)
"RTN","MPIFDNL",84,0)
 ;**57,MVI_1414 (mko): Call RPCCHK^XWB2HL7 instead of RTNDATA^XWBDRPC to check for results
"RTN","MPIFDNL",85,0)
 N MPIFCNT,MPIFRTN,X
"RTN","MPIFDNL",86,0)
 F MPIFCNT=1:1:20 K MPIFRTN D RPCCHK^XWB2HL7(.MPIFRTN,MPIFHNDL) Q:+MPIFRTN(0)=1  Q:+MPIFRTN(0)=-1  H 5
"RTN","MPIFDNL",87,0)
 I +MPIFRTN(0)=-1 S X=$P($G(MPIFRTN(0)),U,2) D ERRMSG(MPIFNAME,MPIFSTA,MPIFFR,MPIFTO,X) Q
"RTN","MPIFDNL",88,0)
 I +MPIFRTN(0)'=1 D ERRMSG(MPIFNAME,MPIFSTA,MPIFFR,MPIFTO,"Timeout") Q
"RTN","MPIFDNL",89,0)
 ; Get results
"RTN","MPIFDNL",90,0)
 K MPIFRTN D RTNDATA^XWBDRPC(.MPIFRTN,MPIFHNDL)
"RTN","MPIFDNL",91,0)
 I $P(MPIFRTN(0),U)=-1 S X=$P($G(MPIFRTN(0)),U,2) D ERRMSG(MPIFNAME,MPIFSTA,MPIFFR,MPIFTO,X)
"RTN","MPIFDNL",92,0)
 Q
"RTN","MPIFDNL",93,0)
 ;S MPIFDONE=0
"RTN","MPIFDNL",94,0)
 ;F MPIFCNT=1:1:20 D  Q:MPIFDONE
"RTN","MPIFDNL",95,0)
 ;. H 5
"RTN","MPIFDNL",96,0)
 ;. D RTNDATA^XWBDRPC(.MPIFRTN,MPIFHNDL)
"RTN","MPIFDNL",97,0)
 ;. Q:$P(MPIFRTN(0),U)=0  ; Not done
"RTN","MPIFDNL",98,0)
 ;. I $P(MPIFRTN(0),U)=-1 D  Q
"RTN","MPIFDNL",99,0)
 ;. . I MPIFRTN(0)["Not DONE" Q
"RTN","MPIFDNL",100,0)
 ;. . S X=$P($G(MPIFRTN(0)),U,2)
"RTN","MPIFDNL",101,0)
 ;. . S:X="" X=$P($G(MPIFRTN(1)),U,2)
"RTN","MPIFDNL",102,0)
 ;. . D ERRMSG(MPIFNAME,MPIFSTA,MPIFFR,MPIFTO,X)
"RTN","MPIFDNL",103,0)
 ;. . S MPIFDONE=1
"RTN","MPIFDNL",104,0)
 ;. . Q
"RTN","MPIFDNL",105,0)
 ;. ; Success.
"RTN","MPIFDNL",106,0)
 ;. S MPIFDONE=1 Q
"RTN","MPIFDNL",107,0)
 ;Q
"RTN","MPIFDNL",108,0)
 ;
"RTN","MPIFDNL",109,0)
ERRMSG(MPIFNAME,MPIFSTA,MPIFFR,MPIFTO,MPIFMSG) ; Send error to CIRN HL7 EXCEPTION LOG (991.1)
"RTN","MPIFDNL",110,0)
 S MPIFMSG="User "_MPIFNAME_" at station "_MPIFSTA_" failed to log a DO NOT LINK event for "_MPIFFR_" and "_MPIFTO_" due to "_MPIFMSG
"RTN","MPIFDNL",111,0)
 ; If MPIFTO is invalid, set it to null so it won't cause a problem logging the error
"RTN","MPIFDNL",112,0)
 I '$D(^DPT(+MPIFTO,0)) S MPIFTO=""
"RTN","MPIFDNL",113,0)
 D EXC^RGHLLOG(208,MPIFMSG,MPIFTO)
"RTN","MPIFDNL",114,0)
 D STOP^RGHLLOG(0)
"RTN","MPIFDNL",115,0)
 Q
"RTN","MPIFDNL",116,0)
 ;
"RTN","MPIFDNL",117,0)
DNLCHK(MPIFREC1,MPIFREC2) ; Checks whether records with DFNs MPIFREC1 and
"RTN","MPIFDNL",118,0)
 ; MPIFREC2 are verified as not duplicates in the MPI DO NOT LINK file.
"RTN","MPIFDNL",119,0)
 ; (New entry point created in MPIF*1.0*55, MPIC_1834)
"RTN","MPIFDNL",120,0)
 ; Input:
"RTN","MPIFDNL",121,0)
 ;   MPIFREC1          - DFN for record 1 in the Patient file
"RTN","MPIFDNL",122,0)
 ;   MPIFREC2          - DFN for record 2 in the Patient file
"RTN","MPIFDNL",123,0)
 ; Returns:
"RTN","MPIFDNL",124,0)
 ;   0                 - if the are no problems and the records can be
"RTN","MPIFDNL",125,0)
 ;                       added to the Duplicate Record file
"RTN","MPIFDNL",126,0)
 ;   -1^error message  - if the there was a problem calling the MPI RPC
"RTN","MPIFDNL",127,0)
 ;                       or if the record pair is in the MPI DO NOT LINK
"RTN","MPIFDNL",128,0)
 ;                       file.
"RTN","MPIFDNL",129,0)
 ;
"RTN","MPIFDNL",130,0)
 N MPIFERR,MPIFSITE,MPIFID,MPIFI,MPIFREC,MPIICN1,MPIICN2
"RTN","MPIFDNL",131,0)
 S MPIFERR=0
"RTN","MPIFDNL",132,0)
 ;
"RTN","MPIFDNL",133,0)
 ; Find records that should not be merged with MPIFREC1
"RTN","MPIFDNL",134,0)
 ; Use the ICN if available,
"RTN","MPIFDNL",135,0)
 S MPIFSITE=$P($$SITE^VASITE,U,3)
"RTN","MPIFDNL",136,0)
 S MPIFICN1=$$GETICN^MPIF001(MPIFREC1)
"RTN","MPIFDNL",137,0)
 S MPIFICN2=$$GETICN^MPIF001(MPIFREC2)
"RTN","MPIFDNL",138,0)
 I MPIFICN1>0 D
"RTN","MPIFDNL",139,0)
 . S MPIFID=MPIFICN1_"|200M|USVHA|NI"
"RTN","MPIFDNL",140,0)
 E  D
"RTN","MPIFDNL",141,0)
 . S MPIFID=MPIFREC1_"|"_MPIFSITE_"|USVHA|PI"
"RTN","MPIFDNL",142,0)
 D CALLRPCD(.MPIFRES,MPIFID)
"RTN","MPIFDNL",143,0)
 ;
"RTN","MPIFDNL",144,0)
 ; Check for errors invoking RPC
"RTN","MPIFDNL",145,0)
 I $P($G(MPIFRES(0)),U)=-1!(+$G(MPIFRES)=-1) D  Q MPIFERR
"RTN","MPIFDNL",146,0)
 . S MPIFERR="-1^Remote procedure call to MPI to return DO NOT LINK records failed. "_$P($G(MPIFRES(0)),U,2)
"RTN","MPIFDNL",147,0)
 ;
"RTN","MPIFDNL",148,0)
 ; Loop through the records returned by the MPI EVENT LIST call and see
"RTN","MPIFDNL",149,0)
 ; if any of the returned records match MPIFREC2 or MPIFICN2
"RTN","MPIFDNL",150,0)
 S MPIFI="" F  S MPIFI=$O(MPIFRES(MPIFI)) Q:MPIFI=""  D  Q:MPIFERR
"RTN","MPIFDNL",151,0)
 . Q:MPIFRES(MPIFI)'["^DO NOT LINK^"
"RTN","MPIFDNL",152,0)
 . S MPIFID2=$P(MPIFRES(MPIFI),"^DO NOT LINK^",2,999)
"RTN","MPIFDNL",153,0)
 . I $P(MPIFID2,U,1,4)=(MPIFREC2_U_MPIFSITE_"^USVHA^PI")!($P(MPIFID2,U,1,4)=(MPIFICN2_"^200M^USVHA^NI")) D
"RTN","MPIFDNL",154,0)
 .. S MPIFERR="-1^The records with DFN #"_MPIFREC1_" and "_MPIFREC2_" have already been identified as not duplicates in the MPI NOT LINK file, and therefore cannot be added as a duplicate pair."
"RTN","MPIFDNL",155,0)
 ;
"RTN","MPIFDNL",156,0)
 Q MPIFERR
"RTN","MPIFDNL",157,0)
 ;
"RTN","MPIFDNL",158,0)
CALLRPCD(MPIFRES,MPIFID) ; Uses the DIRECT^XWB2HL7 API to call the
"RTN","MPIFDNL",159,0)
 ; "MPI EVENT LIST" Remote Procedure on the MPI directly. This RPC
"RTN","MPIFDNL",160,0)
 ; returns the list of records that have been marked as DO NOT LINK
"RTN","MPIFDNL",161,0)
 ; with the record identified by the Source ID input parameter.
"RTN","MPIFDNL",162,0)
 ; (Entry point created in MPIF*1.0*55, MPIC_1834)
"RTN","MPIFDNL",163,0)
 ;
"RTN","MPIFDNL",164,0)
 ; Input:
"RTN","MPIFDNL",165,0)
 ;  MPIFID = The source ID in the format:
"RTN","MPIFDNL",166,0)
 ;              DFN/ICN|SourceSytemID|SourceAssigningAuthority|IDType
"RTN","MPIFDNL",167,0)
 ;           Example:
"RTN","MPIFDNL",168,0)
 ;              100001440|500|USVHA|PI
"RTN","MPIFDNL",169,0)
 ; Output:
"RTN","MPIFDNL",170,0)
 ;  .MPIFRES = Array of records that should not be linked with the
"RTN","MPIFDNL",171,0)
 ;             source ID passed in
"RTN","MPIFDNL",172,0)
 ; Example output:
"RTN","MPIFDNL",173,0)
 ;   RESULT(0)="100001440|500|USVHA|PI^DO NOT LINK^100001439^500^USVHA^PI"
"RTN","MPIFDNL",174,0)
 ;   RESULT(1)="100001440|500|USVHA|PI^DO NOT LINK^100002113^500^USVHA^PI"
"RTN","MPIFDNL",175,0)
 ;
"RTN","MPIFDNL",176,0)
 N MPIFRPC,MPIFSTA
"RTN","MPIFDNL",177,0)
 ;
"RTN","MPIFDNL",178,0)
 ; Setup input parameters and call the DIRECT^XWB2HL7 entry point to
"RTN","MPIFDNL",179,0)
 ; invoke the "MPI EVENT LIST" Remote Procedure on the MPI.
"RTN","MPIFDNL",180,0)
 S MPIFRPC="MPI EVENT LIST"
"RTN","MPIFDNL",181,0)
 S MPIFSTA="200M"
"RTN","MPIFDNL",182,0)
 D DIRECT^XWB2HL7(.MPIFRES,MPIFSTA,MPIFRPC,1,MPIFID)
"RTN","MPIFDNL",183,0)
 Q
"RTN","MPIFDNL",184,0)
 ;
"RTN","MPIFEXT")
0^3^B45536997^B46733837
"RTN","MPIFEXT",1,0)
MPIFEXT ;SFCIO/CMC-EXTENDED PDAT - RPC ;9 Apr 2013  4:42 PM
"RTN","MPIFEXT",2,0)
 ;;1.0;MASTER PATIENT INDEX VISTA;**20,57**;30 Apr 99;Build 2
"RTN","MPIFEXT",3,0)
 ;
"RTN","MPIFEXT",4,0)
 ;Integration Agreements Utilized:
"RTN","MPIFEXT",5,0)
 ;  ^DGCN(391.91 - #2751
"RTN","MPIFEXT",6,0)
 ;  EN1^XWB2HL7 - #3144
"RTN","MPIFEXT",7,0)
 ;  RPCCHK^XWB2HL7 - #3144
"RTN","MPIFEXT",8,0)
 ;  RTNDATA^XEBDRPC - #3149
"RTN","MPIFEXT",9,0)
 ;
"RTN","MPIFEXT",10,0)
PEXT(RETURN,ICN,SSN,LOCAL,ALL,SITE,RPC) ;get patient info array
"RTN","MPIFEXT",11,0)
 N MPINODE,ARRAY,DFN,TICN,TSSN
"RTN","MPIFEXT",12,0)
 I RPC="" S RPC=0 ; default is 0 for RPC
"RTN","MPIFEXT",13,0)
 I $G(ICN)=""&($G(SSN)="") S RETURN="-1^NO ICN OR SSN PASSED" Q
"RTN","MPIFEXT",14,0)
 I $G(LOCAL)=""&($G(ALL)="")&($G(SITE)="") S ALL=1
"RTN","MPIFEXT",15,0)
 ; ^ All is the default
"RTN","MPIFEXT",16,0)
 I LOCAL=1 D PATINFO^MPIFEXT2(.RETURN,ICN,SSN,0) Q
"RTN","MPIFEXT",17,0)
 I ALL=1 D ALL(.RETURN,ICN,SSN,RPC) Q
"RTN","MPIFEXT",18,0)
 I SITE'="" D SITE(.RETURN,ICN,SSN,SITE,RPC)
"RTN","MPIFEXT",19,0)
 Q
"RTN","MPIFEXT",20,0)
 ;
"RTN","MPIFEXT",21,0)
SITE(RETS,ICN,SSN,SITE,RPC) ;
"RTN","MPIFEXT",22,0)
 ; request PDAT from one remote site
"RTN","MPIFEXT",23,0)
 I $G(SITE)="" S RETS="-1^No Site Passed" Q
"RTN","MPIFEXT",24,0)
 I $G(ICN)=""&($G(SSN)="") S RETS="-1^No ICN or SSN passed" Q
"RTN","MPIFEXT",25,0)
 I ICN="" S EXIST=$$ASK(SSN,SITE)
"RTN","MPIFEXT",26,0)
 I SSN="" S EXIST=$$ASK(ICN,SITE)
"RTN","MPIFEXT",27,0)
 I EXIST=1 D
"RTN","MPIFEXT",28,0)
 .I ICN="" S RETS(0)=$G(^XTMP("MPIF EXT PDAT"_SSN,SITE))
"RTN","MPIFEXT",29,0)
 .I SSN="" S RETS(0)=$G(^XTMP("MPIF EXT PDAT"_ICN,SITE))
"RTN","MPIFEXT",30,0)
 .I RETS(0)="" S EXIST=0
"RTN","MPIFEXT",31,0)
 I EXIST=0 D
"RTN","MPIFEXT",32,0)
 .I ICN="" K ^XTMP("MPIF EXT PDAT"_SSN,SITE)
"RTN","MPIFEXT",33,0)
 .I SSN="" K ^XTMP("MPIF EXT PDAT"_ICN,SITE)
"RTN","MPIFEXT",34,0)
 .D EN1^XWB2HL7(.RETS,SITE,"MPIF EXT PDAT REMOTE",1,ICN,SSN,1)
"RTN","MPIFEXT",35,0)
 .I $G(ICN)'="" S ^XTMP("MPIF EXT PDAT"_ICN,0)=$$FMADD^XLFDT($$NOW^XLFDT,2)_"^"_$$NOW^XLFDT_"^"_"Remote data from site",^XTMP("MPIF EXT PDAT"_ICN,SITE)=RETS(0)
"RTN","MPIFEXT",36,0)
 .I $G(SSN)'="" S ^XTMP("MPIF EXT PDAT"_SSN,0)=$$FMADD^XLFDT($$NOW^XLFDT,2)_"^"_$$NOW^XLFDT_"^"_"Remote data from site",^XTMP("MPIF EXT PDAT"_SSN,SITE)=RETS(0)
"RTN","MPIFEXT",37,0)
 ;
"RTN","MPIFEXT",38,0)
 ;**57,MVI_1414 (mko): Call RPCCHK^XWB2HL7 to check for results
"RTN","MPIFEXT",39,0)
 N CNT
"RTN","MPIFEXT",40,0)
 F CNT=1:1:10 K RES D RPCCHK^XWB2HL7(.RES,RETS(0)) Q:+RES(0)=1  Q:+RES(0)=-1  H 2
"RTN","MPIFEXT",41,0)
 I +RES(0)=-1 S RETS=RES(0) Q
"RTN","MPIFEXT",42,0)
 I +RES(0)'=1 S RETS(SITE)="Unable to get data" Q
"RTN","MPIFEXT",43,0)
 K RES D RTNDATA^XWBDRPC(.RES,RETS(0))
"RTN","MPIFEXT",44,0)
 ;S CNT=0
"RTN","MPIFEXT",45,0)
 ;AGAIN H 2 K RES D RTNDATA^XWBDRPC(.RES,RETS(0)) S CNT=CNT+1
"RTN","MPIFEXT",46,0)
 ;I +RES(0)=-1&(RES(0)["Not DONE") I CNT<10 G AGAIN
"RTN","MPIFEXT",47,0)
 ;I +RES(0)=-1&(RES(0)["Not DONE") I CNT>10 S RETS(SITE)="Unable to get data" Q
"RTN","MPIFEXT",48,0)
 ;I RES(0)="0^New" I CNT<10 G AGAIN
"RTN","MPIFEXT",49,0)
 ;I RES(0)="0^New" I CNT>10 S RETS(SITE)="Unable to get data" Q
"RTN","MPIFEXT",50,0)
 ;I +RES(0)=-1 S RETS=RES(0) Q
"RTN","MPIFEXT",51,0)
 ;I RES'="" I CNT<10 G AGAIN
"RTN","MPIFEXT",52,0)
 ;I RES'="" I CNT>10 S RETS(SITE)="Unable to get data" Q
"RTN","MPIFEXT",53,0)
 D REFORMAT(.RES)
"RTN","MPIFEXT",54,0)
 K RETS,EXIST
"RTN","MPIFEXT",55,0)
 M RETS(SITE)=RES
"RTN","MPIFEXT",56,0)
 K RES
"RTN","MPIFEXT",57,0)
 Q
"RTN","MPIFEXT",58,0)
 ;
"RTN","MPIFEXT",59,0)
ALL(RETS2,ICN,SSN,RPC) ;
"RTN","MPIFEXT",60,0)
 ; request PDAT from ALL TFs and the MPI
"RTN","MPIFEXT",61,0)
 I $G(ICN)=""&($G(SSN)="") S RETS1="-1^No ICN or SSN passed" Q
"RTN","MPIFEXT",62,0)
 N DFN,ICN2
"RTN","MPIFEXT",63,0)
 I ICN="" S EXIST=$$ASK(SSN,1)
"RTN","MPIFEXT",64,0)
 I SSN="" S EXIST=$$ASK(ICN,1)
"RTN","MPIFEXT",65,0)
 I SSN'="" S ICN=$$GETICNS^MPIF002(SSN)
"RTN","MPIFEXT",66,0)
 F XX=1:1 S ICN2=$P(ICN,"^",XX) Q:ICN2=""  D
"RTN","MPIFEXT",67,0)
 .S DFN=$$GETDFN^MPIF001(ICN2)
"RTN","MPIFEXT",68,0)
 .I +DFN<0 S RETS2(ICN2)="-1^No such ICN" Q
"RTN","MPIFEXT",69,0)
 .D ALL2(DFN,ICN2,SSN,1,.RETS2,EXIST)
"RTN","MPIFEXT",70,0)
 K EXIST
"RTN","MPIFEXT",71,0)
 Q
"RTN","MPIFEXT",72,0)
 ;
"RTN","MPIFEXT",73,0)
ALL2(DFN,ICN,SSN,RPC,RETS1,EXIST) ;
"RTN","MPIFEXT",74,0)
 D GETTFS(DFN,.ARR)
"RTN","MPIFEXT",75,0)
 I +ARR=-1 G MPI
"RTN","MPIFEXT",76,0)
 S SITE=""
"RTN","MPIFEXT",77,0)
 F  S SITE=$O(ARR(SITE)) Q:SITE=""  D
"RTN","MPIFEXT",78,0)
 .K RETS1
"RTN","MPIFEXT",79,0)
 .I EXIST=1 D
"RTN","MPIFEXT",80,0)
 ..I ICN="" S RETS1(0)=$G(^XTMP("MPIF EXT PDAT"_SSN,SITE))
"RTN","MPIFEXT",81,0)
 ..I SSN="" S RETS1(0)=$G(^XTMP("MPIF EXT PDAT"_ICN,SITE))
"RTN","MPIFEXT",82,0)
 ..I RETS1(0)="" S EXIST=0
"RTN","MPIFEXT",83,0)
 .I EXIST=0 D
"RTN","MPIFEXT",84,0)
 ..I ICN="" K ^XTMP("MPIF EXT PDAT"_SSN,SITE)
"RTN","MPIFEXT",85,0)
 ..I SSN="" K ^XTMP("MPIF EXT PDAT"_ICN,SITE)
"RTN","MPIFEXT",86,0)
 ..D EN1^XWB2HL7(.RETS1,SITE,"MPIF EXT PDAT REMOTE",1,ICN,SSN,RPC)
"RTN","MPIFEXT",87,0)
 ..I $G(ICN)'="" S ^XTMP("MPIF EXT PDAT"_ICN,SITE,0)=$$FMADD^XLFDT($$NOW^XLFDT,2)_"^"_$$NOW^XLFDT_"^"_"Remote data from site",^XTMP("MPIF EXT PDAT"_ICN,SITE)=RETS1(0)
"RTN","MPIFEXT",88,0)
 ..I $G(SSN)'="" S ^XTMP("MPIF EXT PDAT"_SSN,SITE,0)=$$FMADD^XLFDT($$NOW^XLFDT,2)_"^"_$$NOW^XLFDT_"^"_"Remote data from site",^XTMP("MPIF EXT PDAT"_SSN,SITE)=RETS1(0)
"RTN","MPIFEXT",89,0)
 ;
"RTN","MPIFEXT",90,0)
MPI K RETS1
"RTN","MPIFEXT",91,0)
 I EXIST=1 D
"RTN","MPIFEXT",92,0)
 .I ICN="" S RETS1(0)=$G(^XTMP("MPIF EXT PDAT"_SSN,"MPI"))
"RTN","MPIFEXT",93,0)
 .I SSN="" S RETS1(0)=$G(^XTMP("MPIF EXT PDAT"_ICN,"MPI"))
"RTN","MPIFEXT",94,0)
 .I RETS1(0)="" S EXIST=0
"RTN","MPIFEXT",95,0)
 I EXIST=0 D
"RTN","MPIFEXT",96,0)
 .I ICN="" K ^XTMP("MPIF EXT PDAT"_SSN,"MPI")
"RTN","MPIFEXT",97,0)
 .I SSN="" K ^XTMP("MPIF EXT PDAT"_ICN,"MPI")
"RTN","MPIFEXT",98,0)
 .D EN1^XWB2HL7(.RETS1,"MPI","MPIF EXT PDAT REMOTE",1,ICN,SSN,RPC)
"RTN","MPIFEXT",99,0)
 .I $G(ICN)'="" S ^XTMP("MPIF EXT PDAT"_ICN,"MPI",0)=$$FMADD^XLFDT($$NOW^XLFDT,2)_"^"_$$NOW^XLFDT_"^"_"Remote data from site",^XTMP("MPIF EXT PDAT"_ICN,"MPI")=RETS1(0)
"RTN","MPIFEXT",100,0)
 .I $G(SSN)'="" S ^XTMP("MPIF EXT PDAT"_SSN,"MPI",0)=$$FMADD^XLFDT($$NOW^XLFDT,2)_"^"_$$NOW^XLFDT_"^"_"Remote data from site",^XTMP("MPIF EXT PDAT"_SSN,"MPI")=RETS1(0)
"RTN","MPIFEXT",101,0)
 ;
"RTN","MPIFEXT",102,0)
 K RETS1,RES,RESS2
"RTN","MPIFEXT",103,0)
 N ZNODE,IEN
"RTN","MPIFEXT",104,0)
 H 2
"RTN","MPIFEXT",105,0)
 I SSN="" S IEN=ICN
"RTN","MPIFEXT",106,0)
 I ICN="" S IEN=SSN
"RTN","MPIFEXT",107,0)
 S SITE=""
"RTN","MPIFEXT",108,0)
 F  S SITE=$O(^XTMP("MPIF EXT PDAT"_IEN,SITE)) Q:SITE=""  D
"RTN","MPIFEXT",109,0)
 .S ZNODE=$G(^XTMP("MPIF EXT PDAT"_IEN,SITE))
"RTN","MPIFEXT",110,0)
 .K RES
"RTN","MPIFEXT",111,0)
 .D RET(.RES,SITE,ZNODE)
"RTN","MPIFEXT",112,0)
 .K RETS1(SITE)
"RTN","MPIFEXT",113,0)
 .M RETS1(SITE)=RES
"RTN","MPIFEXT",114,0)
 .K RES
"RTN","MPIFEXT",115,0)
 ;
"RTN","MPIFEXT",116,0)
 K RES,RESS2
"RTN","MPIFEXT",117,0)
 D PATINFO^MPIFEXT2(.RESS2,ICN,SSN,0)
"RTN","MPIFEXT",118,0)
 S SITE=$P($$SITE^VASITE,"^",3)
"RTN","MPIFEXT",119,0)
 K RETS1(SITE)
"RTN","MPIFEXT",120,0)
 M RETS1(SITE)=RESS2
"RTN","MPIFEXT",121,0)
 K RESS2,ARR
"RTN","MPIFEXT",122,0)
 Q
"RTN","MPIFEXT",123,0)
 ;
"RTN","MPIFEXT",124,0)
RET(REST,SITE,IEN) ;
"RTN","MPIFEXT",125,0)
 ; RETRIEVING DATA
"RTN","MPIFEXT",126,0)
 ;**57,MVI_1414 (mko): Call RPCCHK^XWB2HL7 to check for results
"RTN","MPIFEXT",127,0)
 N RES1,CNT
"RTN","MPIFEXT",128,0)
 F CNT=1:1:10 K RES1 D RPCCHK^XWB2HL7(.RES1,IEN) Q:+RES1(0)=1  Q:+RES1(0)=-1  H 2
"RTN","MPIFEXT",129,0)
 I +RES1(0)=-1 S REST=RES1(0) Q
"RTN","MPIFEXT",130,0)
 I +RES1(0)'=1 S REST(SITE)="Unable to get data" Q
"RTN","MPIFEXT",131,0)
 K RES1 D RTNDATA^XWBDRPC(.RES1,IEN)
"RTN","MPIFEXT",132,0)
 ;N RES1,CNT S CNT=0
"RTN","MPIFEXT",133,0)
 ;AGAIN1 H 2 K RES1,REST D RTNDATA^XWBDRPC(.RES1,IEN) S CNT=CNT+1
"RTN","MPIFEXT",134,0)
 ;I +RES1(0)=-1&(RES1(0)["Not DONE") I CNT<10 G AGAIN1
"RTN","MPIFEXT",135,0)
 ;I +RES1(0)=-1&(RES1(0)["Not DONE") I CNT>10 S REST(SITE)="Unable to get data" Q
"RTN","MPIFEXT",136,0)
 ;I RES1(0)="0^New" I CNT<10 G AGAIN1
"RTN","MPIFEXT",137,0)
 ;I RES1(0)="0^New" I CNT>10 S REST(SITE)="Unable to get data" Q
"RTN","MPIFEXT",138,0)
 ;I +RES1(0)=-1 S REST(SITE)=RES1(0) Q
"RTN","MPIFEXT",139,0)
 ;I RES1'="" I CNT<10 G AGAIN1
"RTN","MPIFEXT",140,0)
 ;I RES1'="" I CNT>10 S REST(SITE)="Unable to get data" Q
"RTN","MPIFEXT",141,0)
 D REFORMAT(.RES1)
"RTN","MPIFEXT",142,0)
 K REST
"RTN","MPIFEXT",143,0)
 M REST=RES1
"RTN","MPIFEXT",144,0)
 Q
"RTN","MPIFEXT",145,0)
 ;
"RTN","MPIFEXT",146,0)
GETTFS(DFN,ARRAY) ;
"RTN","MPIFEXT",147,0)
 ; get list of TF station numbers for a patient (dfn)
"RTN","MPIFEXT",148,0)
 ;
"RTN","MPIFEXT",149,0)
 N SITE,HERE,HSTN,CNT
"RTN","MPIFEXT",150,0)
 I $D(^DGCN(391.91,"APAT",DFN))="" S ARRAY="-1^No TFs" Q
"RTN","MPIFEXT",151,0)
 S HERE=+$$SITE^VASITE(),HSTN=$P($$SITE^VASITE(),"^",3)
"RTN","MPIFEXT",152,0)
 S SITE="",CNT=0
"RTN","MPIFEXT",153,0)
 F  S SITE=$O(^DGCN(391.91,"APAT",DFN,SITE)) Q:SITE=""  D
"RTN","MPIFEXT",154,0)
 .Q:SITE=HERE
"RTN","MPIFEXT",155,0)
 .S CNT=CNT+1
"RTN","MPIFEXT",156,0)
 .S ARRAY($P($$NNT^XUAF4(SITE),"^",2))=""
"RTN","MPIFEXT",157,0)
 I CNT=0 S ARRAY="-1^No other site TFs" Q
"RTN","MPIFEXT",158,0)
 S ARRAY=CNT
"RTN","MPIFEXT",159,0)
 Q
"RTN","MPIFEXT",160,0)
 ;
"RTN","MPIFEXT",161,0)
REFORMAT(ARRAY) ; Reformat from RPC=1 format to RPC=0 format
"RTN","MPIFEXT",162,0)
 N XX,ARR,TARR
"RTN","MPIFEXT",163,0)
 S XX=0
"RTN","MPIFEXT",164,0)
 F  S XX=$O(ARRAY(XX)) Q:XX=""  D
"RTN","MPIFEXT",165,0)
 .I XX=1 S TARR=$P(ARRAY(XX),"(")
"RTN","MPIFEXT",166,0)
 .S ARR=$P(ARRAY(XX),"=")
"RTN","MPIFEXT",167,0)
 .S @ARR=$P(ARRAY(XX),"=",2)
"RTN","MPIFEXT",168,0)
 K ARRAY
"RTN","MPIFEXT",169,0)
 M ARRAY=@TARR
"RTN","MPIFEXT",170,0)
 K @TARR
"RTN","MPIFEXT",171,0)
 Q
"RTN","MPIFEXT",172,0)
 ;
"RTN","MPIFEXT",173,0)
ASK(ICNSSN,SITE) ; Function to check if there has been a previous request
"RTN","MPIFEXT",174,0)
 ; made for this ICN/SSN. If so, ask the user if they wish to view if or
"RTN","MPIFEXT",175,0)
 ; create a new request.
"RTN","MPIFEXT",176,0)
 ;
"RTN","MPIFEXT",177,0)
 N DIR,X,Y,SITE1
"RTN","MPIFEXT",178,0)
 I '$D(^XTMP("MPIF EXT PDAT"_ICNSSN)) Q 0
"RTN","MPIFEXT",179,0)
 I SITE=1 D
"RTN","MPIFEXT",180,0)
 .S SITE1=0
"RTN","MPIFEXT",181,0)
 .W !!,"There has been a request made for this patient to site(s): "
"RTN","MPIFEXT",182,0)
 .F  S SITE1=$O(^XTMP("MPIF EXT PDAT"_ICNSSN,SITE1)) Q:SITE1=""  D
"RTN","MPIFEXT",183,0)
 ..I SITE1=$P($$SITE^VASITE(),"^",3) Q
"RTN","MPIFEXT",184,0)
 ..W !,SITE1,?10,$P($$NNT^XUAF4($$LKUP^XUAF4(SITE1)),"^"),?40,"made at "
"RTN","MPIFEXT",185,0)
 ..N Y S Y=$P(^XTMP("MPIF EXT PDAT"_ICNSSN,SITE1,0),"^",2) D DD^%DT
"RTN","MPIFEXT",186,0)
 ..W Y
"RTN","MPIFEXT",187,0)
 I SITE'=1,'$D(^XTMP("MPIF EXT PDAT"_ICNSSN,SITE)) Q 0
"RTN","MPIFEXT",188,0)
 I SITE'=1,SITE'=$P($$SITE^VASITE(),"^",3) D
"RTN","MPIFEXT",189,0)
 .W !!,"There has been a previous request made for this patient from the same "
"RTN","MPIFEXT",190,0)
 .W !,"site you are requesting.  The request was made at "
"RTN","MPIFEXT",191,0)
 .N Y S Y=$P($G(^XTMP("MPIF EXT PDAT"_ICNSSN,SITE,0)),"^",2) D DD^%DT
"RTN","MPIFEXT",192,0)
 .W Y
"RTN","MPIFEXT",193,0)
 S DIR("A")="Would you like to view this data?"
"RTN","MPIFEXT",194,0)
 S DIR(0)="Y",DIR("B")="No"
"RTN","MPIFEXT",195,0)
 D ^DIR
"RTN","MPIFEXT",196,0)
 I Y'=1 Q 0
"RTN","MPIFEXT",197,0)
 Q 1
"RTN","MPIFSA2")
0^1^B83766711^B81928168
"RTN","MPIFSA2",1,0)
MPIFSA2 ;SF/CMC-STAND ALONE QUERY PART 2 ;11 Apr 2013  3:38 PM
"RTN","MPIFSA2",2,0)
 ;;1.0;MASTER PATIENT INDEX VISTA;**28,29,35,38,43,52,55,57**;30 Apr 99;Build 2
"RTN","MPIFSA2",3,0)
 ;
"RTN","MPIFSA2",4,0)
 ;Integration Agreements: $$EN^HLCSAC - #3471
"RTN","MPIFSA2",5,0)
 ;
"RTN","MPIFSA2",6,0)
FIELD ;
"RTN","MPIFSA2",7,0)
 ;;@00108.1;LAST NAME;ST;30
"RTN","MPIFSA2",8,0)
 ;;@00122;SSN;ST;9
"RTN","MPIFSA2",9,0)
 ;;@00110;DOB;TS;8
"RTN","MPIFSA2",10,0)
 ;;@00756;PRIMARY CARE SITE;ST;6
"RTN","MPIFSA2",11,0)
 ;;@00105;ICN;ST;19
"RTN","MPIFSA2",12,0)
 ;;@00108.2;FIRST NAME;ST;30
"RTN","MPIFSA2",13,0)
 ;;@00169;TREATING FACILITY (MULTIPLE--FILE 985.5);ST;999
"RTN","MPIFSA2",14,0)
 ;;@00740;DATE OF DEATH;TS;8
"RTN","MPIFSA2",15,0)
 ;;@00108.3;MIDDLE;ST;16
"RTN","MPIFSA2",16,0)
 ;;@00111;SEX;ST;1
"RTN","MPIFSA2",17,0)
 ;;@00126.1;BIRTH PLACE CITY;ST;30
"RTN","MPIFSA2",18,0)
 ;;@00126.2;BIRTH PLACE STATE;ST;3
"RTN","MPIFSA2",19,0)
 ;;@00108.5;NAME PREFIX;ST;15
"RTN","MPIFSA2",20,0)
 ;;@00108.4;NAME SUFFIX;ST;10
"RTN","MPIFSA2",21,0)
 ;;@00109.1;MOTHER'S MAIDEN NAME;ST;20
"RTN","MPIFSA2",22,0)
 ;;@ZEL6;CLAIM NUMBER;ST;9
"RTN","MPIFSA2",23,0)
 ;;@CASE#;MPI DUP CASE#;ST;69
"RTN","MPIFSA2",24,0)
 ;;@POW;POW STATUS;ST;1
"RTN","MPIFSA2",25,0)
 ;;@00127;MULTIPLE BIRTH INDICATOR;ST;1
"RTN","MPIFSA2",26,0)
 ;;@00112.1;ALIAS LAST NAME;ST;30
"RTN","MPIFSA2",27,0)
 ;;@00112.2;ALIAS FIRST NAME;ST;25
"RTN","MPIFSA2",28,0)
 ;;@00112.3;ALIAS MIDDLE NAME;ST;25
"RTN","MPIFSA2",29,0)
 ;;@00112.5;ALIAS PREFIX;ST;10
"RTN","MPIFSA2",30,0)
 ;;@00112.4;ALIAS SUFFIX;ST;10
"RTN","MPIFSA2",31,0)
 ;;@00114.1;STREET ADDRESS LINE 1;ST;35
"RTN","MPIFSA2",32,0)
 ;;@00114.2;STREET ADDRESS LINE 2;ST;30
"RTN","MPIFSA2",33,0)
 ;;@00114.3;CITY;ST;28
"RTN","MPIFSA2",34,0)
 ;;@00114.8;STREET ADDRESS LINE 3;ST;30
"RTN","MPIFSA2",35,0)
 ;;@00116;PHONE NUMBER (RESIDENCE);ST;23
"RTN","MPIFSA2",36,0)
 ;;@SCORE;SCORE;ST;8
"RTN","MPIFSA2",37,0)
 ;;@ALTRSHLD;AUTOLINK THRESHOLD;ST;5
"RTN","MPIFSA2",38,0)
 ;;@TKTRSHLD;TASK THRESHOLD;ST;5
"RTN","MPIFSA2",39,0)
 ;;
"RTN","MPIFSA2",40,0)
VTQ(MPIVAR) ;
"RTN","MPIFSA2",41,0)
 N TIME,% D NOW^%DTC S TIME=%
"RTN","MPIFSA2",42,0)
 W !!,"Attempting to connect to the Master Patient Index in Austin...",!,"If DOB is inexact or if SSN is not passed or if common name,",!,"this could take some time - please be patient...."
"RTN","MPIFSA2",43,0)
 N HL,MPIQRYNM,MPIINM,MPIOUT,MPIIN,MPIMCNT,MPICNT,MPICS,HEADER,RDF,QUERY,TEST,SITE,MPIDC,MPINM,MPI1NM,MPI2NM,MPIESC,MPIHDOB,MPIRS,MPISCS,QUEDDOB,MPIFLDV
"RTN","MPIFSA2",44,0)
 S HLP("ACKTIME")=300,HL("ECH")="^~\&",HL("FS")="|",MPIIN="",MPICNT=1,MPICS=$E(HL("ECH"),1)
"RTN","MPIFSA2",45,0)
 ;**43 CHANGING QUERY NAME FROM VTQ_PID_ICN_NO_LOAD TO VTQ_DISPLAY_ONLY_QUERY to enable the returning of potential matches and not just exact matches
"RTN","MPIFSA2",46,0)
 S MPIQRYNM="VTQ_DISPLAY_ONLY_QUERY"
"RTN","MPIFSA2",47,0)
 I '$D(MPIVAR("DFN")) S MPIVAR("DFN")=""
"RTN","MPIFSA2",48,0)
 S MPIMCNT=MPIVAR("DFN")
"RTN","MPIFSA2",49,0)
 ;SETUP VTQ
"RTN","MPIFSA2",50,0)
 S MPICS=$E(HL("ECH"),1),MPIRS=$E(HL("ECH"),2),MPISCS=$E(HL("ECH"),4),MPIESC=$E(HL("ECH"),3)
"RTN","MPIFSA2",51,0)
 D BLDRDF(.MPIOUT,3,MPIRS,MPICS)
"RTN","MPIFSA2",52,0)
 ; ^ fields to be returned in query response
"RTN","MPIFSA2",53,0)
 S QUERY="VTQ"_HL("FS")_$G(MPIVAR("DFN"))_HL("FS")_"T"_HL("FS")_MPIQRYNM_HL("FS")_"ICN"_HL("FS")
"RTN","MPIFSA2",54,0)
 S MPI2NM=$P($G(MPIVAR("NM")),",",1),QUERY=QUERY_"@00108.1"_MPICS_"EQ"_MPICS_MPI2NM ; ^ sending last name
"RTN","MPIFSA2",55,0)
 I MPIVAR("SSN")'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00122"_MPICS_"EQ"_MPICS_$G(MPIVAR("SSN")) ; ^ sending SSN
"RTN","MPIFSA2",56,0)
 S MPI1NM=$P($G(MPIVAR("NM")),",",2),MPI1NM=$P(MPI1NM," ",1) I MPI1NM'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00108.2"_MPICS_"EQ"_MPICS_MPI1NM
"RTN","MPIFSA2",57,0)
 ; ^ sending first name
"RTN","MPIFSA2",58,0)
 I $G(MPIVAR("DOB"))>0 D
"RTN","MPIFSA2",59,0)
 .S MPIHDOB=$$HLDATE^HLFNC(MPIVAR("DOB")) ; send date of birth (convert to hl7 date format)
"RTN","MPIFSA2",60,0)
 .S QUEDDOB=MPICS_"AND"_MPIRS_"@00110"_MPICS_"EQ"_MPICS_MPIHDOB,QUERY=QUERY_QUEDDOB ; ^ sending date of birth
"RTN","MPIFSA2",61,0)
 S MPI1NM=$P($G(MPIVAR("NM")),",",2),MPIMID=$P(MPI1NM," ",2) I MPIMID'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00108.3"_MPICS_"EQ"_MPICS_MPIMID ; sending middle name
"RTN","MPIFSA2",62,0)
 S MPISUF=$P(MPI1NM," ",3) I MPISUF'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00108.4"_MPICS_"EQ"_MPICS_MPISUF ; sending suffix
"RTN","MPIFSA2",63,0)
 S MPIPRE=$P(MPI1NM," ",4) I MPIPRE'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00108.5"_MPICS_"EQ"_MPICS_MPIPRE ; sending prefix
"RTN","MPIFSA2",64,0)
 I $G(MPIVAR("SEX"))'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00111"_MPICS_"EQ"_MPICS_$G(MPIVAR("SEX")) ;sending sex
"RTN","MPIFSA2",65,0)
 I $G(MPIVAR("ADDR1"))'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00114.1"_MPICS_"EQ"_MPICS_$G(MPIVAR("ADDR1")) ;sending Address 1
"RTN","MPIFSA2",66,0)
 I $G(MPIVAR("ADDR2"))'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00114.2"_MPICS_"EQ"_MPICS_$G(MPIVAR("ADDR2")) ;sending Address 2
"RTN","MPIFSA2",67,0)
 I $G(MPIVAR("CITY"))'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00114.3"_MPICS_"EQ"_MPICS_$G(MPIVAR("CITY")) ;sending City
"RTN","MPIFSA2",68,0)
 I $G(MPIVAR("ADDR3"))'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00114.8"_MPICS_"EQ"_MPICS_$G(MPIVAR("ADDR3")) ;sending Address 3
"RTN","MPIFSA2",69,0)
 I $G(MPIVAR("PHONE"))'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00116"_MPICS_"EQ"_MPICS_$G(MPIVAR("PHONE")) ;sending Residence Phone
"RTN","MPIFSA2",70,0)
 ;keep following traits for future use
"RTN","MPIFSA2",71,0)
 ;I $G(MPIVAR("MMN"))'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00109.1"_MPICS_"EQ"_MPICS_$G(MPIVAR("MMN")) ;sending Mother's maiden name
"RTN","MPIFSA2",72,0)
 ;I $G(MPIVAR("CLAIM"))'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@ZEL6"_MPICS_"EQ"_MPICS_$G(MPIVAR("CLAIM")) ;sending Claim #
"RTN","MPIFSA2",73,0)
 ;I $G(MPIVAR("POBCITY"))'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00126.1"_MPICS_"EQ"_MPICS_$G(MPIVAR("POBCITY")) ;sending POB city
"RTN","MPIFSA2",74,0)
 ;I $G(MPIVAR("POBSTATE"))'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00126.2"_MPICS_"EQ"_MPICS_$G(MPIVAR("POBSTATE")) ;sending POB State
"RTN","MPIFSA2",75,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3) ;**29
"RTN","MPIFSA2",76,0)
 S HEADER="MSH"_HL("FS")_HL("ECH")_HL("FS")_"MPI_LOAD"_HL("FS")_SITE_HL("FS")_"MPI-ICN"_HL("FS")_HL("FS")_HL("FS")_HL("FS")_"VQQ"_MPICS_"Q02"_HL("FS")_MPIMCNT_"-"_MPICNT_HL("FS") ;create msh **38 changed VTQ to VQQ
"RTN","MPIFSA2",77,0)
 S MPIOUT(1)=HEADER K MPIOUT(0) S MPIOUT(2)=QUERY
"RTN","MPIFSA2",78,0)
 ;Attempt to connect to MPI and send message,receive message. Message is returned in MPIDC array
"RTN","MPIFSA2",79,0)
 S TEST=$$EN^HLCSAC("MPIVA DIR","MPIOUT","MPIDC")
"RTN","MPIFSA2",80,0)
 K HLP("ACKTIME") ;Clean up the ack timeout HLP array variable
"RTN","MPIFSA2",81,0)
 I +TEST<0 W !!,"Could not connect to MPI or Time-out occured, try again later." G EXIT
"RTN","MPIFSA2",82,0)
 K ^TMP("MPIFVQQ",$J),^TMP("MPIDOQ",$J)
"RTN","MPIFSA2",83,0)
INIPARS ;
"RTN","MPIFSA2",84,0)
 N SEG,INDEX,SKIP,CHECK,AL,TTF2,TFLL,TF,TF2,MPIREP,MPICOMP
"RTN","MPIFSA2",85,0)
 S INDEX=0 K CHECK
"RTN","MPIFSA2",86,0)
LOOP1 ;
"RTN","MPIFSA2",87,0)
 ;process in ADT type messages
"RTN","MPIFSA2",88,0)
 N MPIX S MPIX=0 N REP,SG,MSG,MPIQUIT,MPINODE
"RTN","MPIFSA2",89,0)
 S MPIQUIT=0
"RTN","MPIFSA2",90,0)
 F MPIX=0:1 X "D LOOP2" D  K MPINODE,MSG Q:MPIQUIT'>0
"RTN","MPIFSA2",91,0)
 . I $D(MPINODE(1)) S SG=$E(MPINODE(1),1,3) S MSG(1)=MPINODE(1) D
"RTN","MPIFSA2",92,0)
 ..  S MPIJ=1 F  S MPIJ=$O(MPINODE(MPIJ)) Q:'MPIJ  S MSG(MPIJ)=MPINODE(MPIJ)
"RTN","MPIFSA2",93,0)
 .. D:SG?2A1(1A,1N) @SG
"RTN","MPIFSA2",94,0)
 I '$D(^TMP("MPIFVQQ",$J)) W !!,"Patient was not found in the MPI." G EXIT
"RTN","MPIFSA2",95,0)
 I INDEX>9 W !!,"More Identity Traits Required to Make a Match." G EXIT
"RTN","MPIFSA2",96,0)
DISPLAY ; display data found
"RTN","MPIFSA2",97,0)
 I INDEX>1 W !!,"Found potential matches"
"RTN","MPIFSA2",98,0)
 I INDEX=1 W !!,"Found One Match"
"RTN","MPIFSA2",99,0)
 N CNT1,CNT2,STOP,CNTR2,TTF,CNT3,DIR,X,Y,DATA,PREFIX,ANAME,APRE,ALN,AFN,NAME,SSN,BIRTHDAY,CMOR,TF,ICN,POBC,POBS,PAST,XXX,AMID,ASUF
"RTN","MPIFSA2",100,0)
 N MNAME,SUFFIX,SEX,IEN,CMOR2,TF2,CLAIM,CASE,NOIS,CUSER,TFN,CMOR3,POW,MBIRTH,TIEN,MIDDLE,SCORE,ALTRSHLD,TKTRSHLD,I,FULLICN
"RTN","MPIFSA2",101,0)
 S (CNT1)=0
"RTN","MPIFSA2",102,0)
 F  S CNT1=$O(^TMP("MPIFVQQ",$J,CNT1)) Q:CNT1'>0!($D(STOP))  D
"RTN","MPIFSA2",103,0)
 . S DATA=$G(^TMP("MPIFVQQ",$J,CNT1,"DATA"))
"RTN","MPIFSA2",104,0)
 . Q:DATA=""
"RTN","MPIFSA2",105,0)
 . K CHECK S NAME=$P(DATA,"^"),SSN=$P(DATA,"^",3),BIRTHDAY=$P(DATA,"^",4),ICN=$P(DATA,"^",6)
"RTN","MPIFSA2",106,0)
 . S SEX=$P(DATA,"^",11),SCORE=$P(DATA,"^",21),ALTRSHLD=$P(DATA,"^",22),TKTRSHLD=$P(DATA,"^",23)
"RTN","MPIFSA2",107,0)
 . I $G(SCORE)="" W !!,"IdM System uavailable, try again later!" S STOP=1 Q  ;Quit if no score is returned.
"RTN","MPIFSA2",108,0)
 . ;**55 MPIC_2218  Commented the following two lines, added the third
"RTN","MPIFSA2",109,0)
 . ;I SCORE>=ALTRSHLD S M="E"
"RTN","MPIFSA2",110,0)
 . ;I SCORE<ALTRSHLD,(SCORE>=TKTRSHLD) S M="P"
"RTN","MPIFSA2",111,0)
 . S M=$S(SCORE>=ALTRSHLD:"E",1:"P")
"RTN","MPIFSA2",112,0)
 . ;Rearranging array for sectional view display
"RTN","MPIFSA2",113,0)
 . S FULLICN=ICN   ;**57 - MVI_2350 (cml)
"RTN","MPIFSA2",114,0)
 . S ^TMP("MPIDOQ",$J,M,SCORE,+ICN)=NAME_"^"_SSN_"^"_BIRTHDAY_"^"_SEX
"RTN","MPIFSA2",115,0)
 . M ^TMP("MPIDOQ",$J,M,SCORE,+ICN,"TF")=^TMP("MPIFVQQ",$J,CNT1,"TF")
"RTN","MPIFSA2",116,0)
 I $D(STOP) Q  ;Quit if no score is returned
"RTN","MPIFSA2",117,0)
DISP2 ;
"RTN","MPIFSA2",118,0)
 S COUNT=0
"RTN","MPIFSA2",119,0)
 W @IOF
"RTN","MPIFSA2",120,0)
 F I="E","P" D
"RTN","MPIFSA2",121,0)
 . I $D(^TMP("MPIDOQ",$J,I)) D HDR($S(I="E":"",I="P":" POTENTIAL",1:""))
"RTN","MPIFSA2",122,0)
 . S SCORE=9999999 F  S SCORE=$O(^TMP("MPIDOQ",$J,I,SCORE),-1) Q:SCORE=""  D
"RTN","MPIFSA2",123,0)
 . . S ICN=0 F  S ICN=$O(^TMP("MPIDOQ",$J,I,SCORE,ICN)) Q:ICN=""  D
"RTN","MPIFSA2",124,0)
 . . . S ICNARR(ICN)="",COUNT=COUNT+1
"RTN","MPIFSA2",125,0)
 . . . S DATA=$G(^TMP("MPIDOQ",$J,I,SCORE,ICN))
"RTN","MPIFSA2",126,0)
 . . . D HDR1
"RTN","MPIFSA2",127,0)
 . . . W !,COUNT_") ",?4,FULLICN,?22,$P(DATA,"^"),?54,$P(DATA,"^",2),?65,$P(DATA,"^",3),?76,$P(DATA,"^",4)  ;**57 - MVI_2350 (cml)
"RTN","MPIFSA2",128,0)
 . . . W ! N TMP S XXX=0 F  S XXX=$O(^TMP("MPIDOQ",$J,I,SCORE,ICN,"TF",XXX)) Q:XXX=""  S TMP=$G(^TMP("MPIDOQ",$J,I,SCORE,ICN,"TF",XXX)) Q:TMP=""  D
"RTN","MPIFSA2",129,0)
 . . . . S TMP=$P(TMP,"^",1) W !,?10,"Treating Facility: ",$P($$NS^XUAF4($$LKUP^XUAF4(TMP)),"^")," (",TMP,")"
"RTN","MPIFSA2",130,0)
 . . . W !
"RTN","MPIFSA2",131,0)
 S ENOUGH=0
"RTN","MPIFSA2",132,0)
 W !
"RTN","MPIFSA2",133,0)
 D ASK I ENOUGH G EXIT
"RTN","MPIFSA2",134,0)
 I TMPICN'="" W !,"Please wait..." D ENRPC(TMPICN)
"RTN","MPIFSA2",135,0)
 W !!
"RTN","MPIFSA2",136,0)
 K DIR,DA S DIR(0)="Y",DIR("B")="NO",DIR("A")="Would you like to see another record" D ^DIR
"RTN","MPIFSA2",137,0)
 I $D(DTOUT)!($D(DUOUT)) S ENOUGH=1 G EXIT
"RTN","MPIFSA2",138,0)
 I Y G DISP2
"RTN","MPIFSA2",139,0)
EXIT K DA,X,Y,^TMP("MPIDOQ",$J) W !! Q
"RTN","MPIFSA2",140,0)
HDR(HDL) ;Header
"RTN","MPIFSA2",141,0)
 W !,"--- All ICNs Below meet the"_HDL_" Match criteria ---"
"RTN","MPIFSA2",142,0)
 Q
"RTN","MPIFSA2",143,0)
HDR1 ;Repeating header
"RTN","MPIFSA2",144,0)
 W !,?4,"ICN",?22,"NAME",?54,"SSN",?65,"DOB",?76,"SEX"  ;**57 - MVI_2350 (cml)
"RTN","MPIFSA2",145,0)
 Q
"RTN","MPIFSA2",146,0)
ASK ;
"RTN","MPIFSA2",147,0)
 N DIR,DA,DR,ND,SC,CNTR,BC,EC,ICN
"RTN","MPIFSA2",148,0)
 S EC=0,BC=1
"RTN","MPIFSA2",149,0)
 S TMP=0 F  S TMP=$O(ICNARR(TMP)) Q:TMP=""  S EC=EC+1
"RTN","MPIFSA2",150,0)
 K DIR,X,Y S DIR(0)="NA^"_BC_":"_EC,DIR("A")="Enter the Number to display the details: ",DIR("?")="Enter the number from range of "_BC_" to "_EC D ^DIR
"RTN","MPIFSA2",151,0)
 I $D(DTOUT)!($D(DUOUT)) S ENOUGH=1 Q
"RTN","MPIFSA2",152,0)
 S QFLG=0,CNTR=0
"RTN","MPIFSA2",153,0)
 F I="E","P" D
"RTN","MPIFSA2",154,0)
 . S SC=10000 F  S SC=$O(^TMP("MPIDOQ",$J,I,SC),-1) Q:SC=""!(QFLG)  D
"RTN","MPIFSA2",155,0)
 ..S ICN=0 F  S ICN=$O(^TMP("MPIDOQ",$J,I,SC,ICN)) Q:ICN=""!(QFLG)  D
"RTN","MPIFSA2",156,0)
 ...S CNTR=CNTR+1 I CNTR=+Y S QFLG=1,TMPICN=ICN
"RTN","MPIFSA2",157,0)
 Q
"RTN","MPIFSA2",158,0)
ENRPC(ICN) ;RPC Call
"RTN","MPIFSA2",159,0)
 N LOC,HNDL,RETURN,I,ND
"RTN","MPIFSA2",160,0)
 S LOC="200M"
"RTN","MPIFSA2",161,0)
 D EN1^XWB2HL7(.RETURN,LOC,"MPIF EDAT REMOTE",1,ICN)
"RTN","MPIFSA2",162,0)
 S HNDL=$G(RETURN(0))
"RTN","MPIFSA2",163,0)
 ;**57,MVI_1414: Check whether EN^XWB2HL7 call succeeded
"RTN","MPIFSA2",164,0)
 I HNDL="" W:+$G(RETURN(1))=-1 !,$P(RETURN(1),"^",2) Q
"RTN","MPIFSA2",165,0)
 I +HNDL=-1 W !,$P(HNDL,"^",2) Q
"RTN","MPIFSA2",166,0)
 F I=1:1:20 K RETURN D RPCCHK^XWB2HL7(.RETURN,HNDL) Q:+RETURN(0)=1  Q:+RETURN(0)=-1  W "." H 5
"RTN","MPIFSA2",167,0)
 I +RETURN(0)=-1 W !,$P(RETURN(0),"^",2) Q
"RTN","MPIFSA2",168,0)
 I +RETURN(0)'=1 W !,"MPI system is unavailable to display the record, Try again later." Q
"RTN","MPIFSA2",169,0)
 ;S DONE=0
"RTN","MPIFSA2",170,0)
 ;F I=1:1:20 D  Q:DONE
"RTN","MPIFSA2",171,0)
 ;. H 5 W "."
"RTN","MPIFSA2",172,0)
 ;. D RTNDATA^XWBDRPC(.RETURN,HNDL)
"RTN","MPIFSA2",173,0)
 ;. Q:$P(RETURN(0),"^")=0
"RTN","MPIFSA2",174,0)
 ;. I $P(RETURN(0),"^")=-1 D  Q
"RTN","MPIFSA2",175,0)
 ;. . I RETURN(0)["Not DONE" Q
"RTN","MPIFSA2",176,0)
 ;. S DONE=1
"RTN","MPIFSA2",177,0)
 ;I 'DONE W !,"MPI system is unavailable to display the record, Try again later." Q
"RTN","MPIFSA2",178,0)
 ;I DONE,$G(^XTMP(HNDL,"D",1))'="" D
"RTN","MPIFSA2",179,0)
 I $G(^XTMP(HNDL,"D",1))'="" D
"RTN","MPIFSA2",180,0)
 . W @IOF S $Y=1
"RTN","MPIFSA2",181,0)
 . S ND=0 F  S ND=$O(^XTMP(HNDL,"D",ND)) Q:ND=""  D
"RTN","MPIFSA2",182,0)
 ..W !,^XTMP(HNDL,"D",ND)
"RTN","MPIFSA2",183,0)
 K ^XTMP(HNDL),RETURN
"RTN","MPIFSA2",184,0)
 Q
"RTN","MPIFSA2",185,0)
LOOP2 ;
"RTN","MPIFSA2",186,0)
 N MPIDONE,MPII,MPIJ
"RTN","MPIFSA2",187,0)
 S MPII=0,MPIDONE=0
"RTN","MPIFSA2",188,0)
 F  S MPIQUIT=$O(MPIDC(MPIQUIT)) Q:'MPIQUIT  D  Q:MPIDONE
"RTN","MPIFSA2",189,0)
 . I MPIDC(MPIQUIT)="" S MPIDONE=1 Q
"RTN","MPIFSA2",190,0)
 . S MPII=MPII+1,MPINODE(MPII)=$G(MPIDC(MPIQUIT)) Q
"RTN","MPIFSA2",191,0)
 Q
"RTN","MPIFSA2",192,0)
MSH ;
"RTN","MPIFSA2",193,0)
 S MPIREP=$E(HL("ECH"),2),MPICOMP=$E(HL("ECH"),1)
"RTN","MPIFSA2",194,0)
 Q
"RTN","MPIFSA2",195,0)
MSA ;
"RTN","MPIFSA2",196,0)
 Q
"RTN","MPIFSA2",197,0)
RDF ;
"RTN","MPIFSA2",198,0)
 Q
"RTN","MPIFSA2",199,0)
QAK ;
"RTN","MPIFSA2",200,0)
 Q
"RTN","MPIFSA2",201,0)
RDT ;
"RTN","MPIFSA2",202,0)
 S INDEX=$G(INDEX)+1
"RTN","MPIFSA2",203,0)
 D RDT^MPIFSA3(.INDEX,.HL,.MSG)
"RTN","MPIFSA2",204,0)
 Q
"RTN","MPIFSA2",205,0)
BLDRDF(MPIOUT,MPICNT,MPIRS,MPICS) ;
"RTN","MPIFSA2",206,0)
 S MPIOUT(MPICNT)="RDF"_HL("FS")_32_HL("FS") N T,I F I=1:1 S T=$T(FIELD+I) Q:$P(T,";",3)=""  D
"RTN","MPIFSA2",207,0)
 . I I=1 S MPIFLDV=$P(T,";",3)_MPICS_$P(T,";",5)_MPICS_$P(T,";",6)
"RTN","MPIFSA2",208,0)
 . I I'=1 S MPIFLDV=MPIRS_$P(T,";",3)_MPICS_$P(T,";",5)_MPICS_$P(T,";",6)
"RTN","MPIFSA2",209,0)
 .N XLEN,TOTLEN
"RTN","MPIFSA2",210,0)
 . S TOTLEN=$L($G(MPIOUT(MPICNT)))+$L(MPIFLDV)
"RTN","MPIFSA2",211,0)
 . I TOTLEN'>245 S MPIOUT(MPICNT)=$G(MPIOUT(MPICNT))_MPIFLDV Q
"RTN","MPIFSA2",212,0)
 . I TOTLEN>245 D
"RTN","MPIFSA2",213,0)
 .. S XLEN=245-$L($G(MPIOUT(MPICNT)))
"RTN","MPIFSA2",214,0)
 .. S MPIOUT(MPICNT)=$G(MPIOUT(MPICNT))_$E(MPIFLDV,1,XLEN),MPICNT=MPICNT+1
"RTN","MPIFSA2",215,0)
 .. S MPIOUT(MPICNT)=$E(MPIFLDV,XLEN+1,245)
"RTN","MPIFSA2",216,0)
 Q
"VER")
8.0^22.0
"BLD",2976,6)
^55
**END**
**END**
