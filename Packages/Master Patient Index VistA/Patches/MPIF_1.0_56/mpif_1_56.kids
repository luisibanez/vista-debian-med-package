KIDS Distribution saved on Dec 14, 2012@13:45:48
MPIF*1*56 VIC 4.0/CAC
**KIDS**:MPIF*1.0*56^

**INSTALL NAME**
MPIF*1.0*56
"BLD",2916,0)
MPIF*1.0*56^MASTER PATIENT INDEX VISTA^0^3121214^y
"BLD",2916,1,0)
^^3^3^3120810^
"BLD",2916,1,1,0)
VIC 4.02 MPI INTEGRATION/HWSC
"BLD",2916,1,2,0)
Refer to patch MPIF*1*56 in the FORUM Patch Module for a complete
"BLD",2916,1,3,0)
description.
"BLD",2916,4,0)
^9.64PA^^
"BLD",2916,6.3)
2
"BLD",2916,"INID")
n^n
"BLD",2916,"INIT")
POSTINT^MPIFHWSC
"BLD",2916,"KRN",0)
^9.67PA^779.2^20
"BLD",2916,"KRN",.4,0)
.4
"BLD",2916,"KRN",.401,0)
.401
"BLD",2916,"KRN",.402,0)
.402
"BLD",2916,"KRN",.403,0)
.403
"BLD",2916,"KRN",.5,0)
.5
"BLD",2916,"KRN",.84,0)
.84
"BLD",2916,"KRN",3.6,0)
3.6
"BLD",2916,"KRN",3.8,0)
3.8
"BLD",2916,"KRN",9.2,0)
9.2
"BLD",2916,"KRN",9.8,0)
9.8
"BLD",2916,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",2916,"KRN",9.8,"NM",1,0)
MPIFAPI^^0^B50736449
"BLD",2916,"KRN",9.8,"NM",2,0)
MPIFHWSC^^0^B6654102
"BLD",2916,"KRN",9.8,"NM",3,0)
MPIFQ0^^0^B73016774
"BLD",2916,"KRN",9.8,"NM",4,0)
MPIFXMLS^^0^B42583885
"BLD",2916,"KRN",9.8,"NM","B","MPIFAPI",1)

"BLD",2916,"KRN",9.8,"NM","B","MPIFHWSC",2)

"BLD",2916,"KRN",9.8,"NM","B","MPIFQ0",3)

"BLD",2916,"KRN",9.8,"NM","B","MPIFXMLS",4)

"BLD",2916,"KRN",19,0)
19
"BLD",2916,"KRN",19.1,0)
19.1
"BLD",2916,"KRN",101,0)
101
"BLD",2916,"KRN",409.61,0)
409.61
"BLD",2916,"KRN",771,0)
771
"BLD",2916,"KRN",779.2,0)
779.2
"BLD",2916,"KRN",870,0)
870
"BLD",2916,"KRN",8989.51,0)
8989.51
"BLD",2916,"KRN",8989.52,0)
8989.52
"BLD",2916,"KRN",8994,0)
8994
"BLD",2916,"KRN","B",.4,.4)

"BLD",2916,"KRN","B",.401,.401)

"BLD",2916,"KRN","B",.402,.402)

"BLD",2916,"KRN","B",.403,.403)

"BLD",2916,"KRN","B",.5,.5)

"BLD",2916,"KRN","B",.84,.84)

"BLD",2916,"KRN","B",3.6,3.6)

"BLD",2916,"KRN","B",3.8,3.8)

"BLD",2916,"KRN","B",9.2,9.2)

"BLD",2916,"KRN","B",9.8,9.8)

"BLD",2916,"KRN","B",19,19)

"BLD",2916,"KRN","B",19.1,19.1)

"BLD",2916,"KRN","B",101,101)

"BLD",2916,"KRN","B",409.61,409.61)

"BLD",2916,"KRN","B",771,771)

"BLD",2916,"KRN","B",779.2,779.2)

"BLD",2916,"KRN","B",870,870)

"BLD",2916,"KRN","B",8989.51,8989.51)

"BLD",2916,"KRN","B",8989.52,8989.52)

"BLD",2916,"KRN","B",8994,8994)

"BLD",2916,"PRE")
MPIFHWSC
"BLD",2916,"QDEF")
^^^^NO^^^^^^YES
"BLD",2916,"QUES",0)
^9.62^^
"BLD",2916,"REQB",0)
^9.611^3^3
"BLD",2916,"REQB",1,0)
XOBW 1.0^1
"BLD",2916,"REQB",2,0)
MPIF*1.0*54^2
"BLD",2916,"REQB",3,0)
MPIF*1.0*55^2
"BLD",2916,"REQB","B","MPIF*1.0*54",2)

"BLD",2916,"REQB","B","MPIF*1.0*55",3)

"BLD",2916,"REQB","B","XOBW 1.0",1)

"INIT")
POSTINT^MPIFHWSC
"MBREQ")
0
"PKG",282,-1)
1^1
"PKG",282,0)
MASTER PATIENT INDEX VISTA^MPIF^Master Patient Index VistA side
"PKG",282,20,0)
^9.402P^^
"PKG",282,22,0)
^9.49I^1^1
"PKG",282,22,1,0)
1.0^2990428
"PKG",282,22,1,"PAH",1,0)
56^3121214
"PKG",282,22,1,"PAH",1,1,0)
^^3^3^3121214
"PKG",282,22,1,"PAH",1,1,1,0)
VIC 4.02 MPI INTEGRATION/HWSC
"PKG",282,22,1,"PAH",1,1,2,0)
Refer to patch MPIF*1*56 in the FORUM Patch Module for a complete
"PKG",282,22,1,"PAH",1,1,3,0)
description.
"PRE")
MPIFHWSC
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","MPIFAPI")
0^1^B50736449
"RTN","MPIFAPI",1,0)
MPIFAPI ;CMC/BP-APIS FOR MPI ;DEC 21, 1998
"RTN","MPIFAPI",2,0)
 ;;1.0;MASTER PATIENT INDEX VISTA;**1,3,14,16,17,21,27,28,33,35,37,43,45,44,46,48,55,56**;30 Apr 99;Build 2
"RTN","MPIFAPI",3,0)
 ; Integration Agreements Utilized:
"RTN","MPIFAPI",4,0)
 ;   ^DPT( - #2070 and #4079
"RTN","MPIFAPI",5,0)
 ;   ^DPT("AICN", ^DPT("AMPIMIS", ^DPT("ASCN2" - #2070
"RTN","MPIFAPI",6,0)
 ;   EXC, START, STOP^RGHLLOG - #2796
"RTN","MPIFAPI",7,0)
 ;
"RTN","MPIFAPI",8,0)
EN2() ;NEW ENTRY POINT FOR LOCALS
"RTN","MPIFAPI",9,0)
 N MPIOUT,DIC,MPICHK,MPINCK,MPINNM,MPINUM1,DA,MPINUM
"RTN","MPIFAPI",10,0)
 I $O(^MPIF(984.1,0))="" G SETUP
"RTN","MPIFAPI",11,0)
AGN2 L +^MPIF(984.1):1 E  H 3 G AGN2
"RTN","MPIFAPI",12,0)
 S MPINUM=0,X=$$SITE^VASITE,X=$P(X,"^",3),X=X\1
"RTN","MPIFAPI",13,0)
 S DIC="^MPIF(984.1,",DIC(0)="XZ" D ^DIC
"RTN","MPIFAPI",14,0)
 S MPINUM1=$P(Y(0),"^",4),MPICHK=$P(Y(0),"^",5),MPINNM=MPINUM1+1
"RTN","MPIFAPI",15,0)
 S MPINUM=MPINUM1_"V"_MPICHK,MPINCK=$$CHECKDG^MPIFSPC(MPINNM)
"RTN","MPIFAPI",16,0)
 S DA=1,DIE="^MPIF(984.1,",DR="1////^S X=MPINUM1;2////^S X=MPICHK;3////^S X=MPINNM;5////"_MPINCK
"RTN","MPIFAPI",17,0)
 D ^DIE
"RTN","MPIFAPI",18,0)
 K DIE,DR,X,Y
"RTN","MPIFAPI",19,0)
 L -^MPIF(984.1)
"RTN","MPIFAPI",20,0)
 Q MPINUM
"RTN","MPIFAPI",21,0)
SETUP ;
"RTN","MPIFAPI",22,0)
 N CHK,NUM,NXTCHK,NXTNUM,SITE,DA
"RTN","MPIFAPI",23,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1
"RTN","MPIFAPI",24,0)
 S DIC="^MPIF(984.1,",DA=1,DIC(0)="",X=SITE
"RTN","MPIFAPI",25,0)
 S NUM=SITE_"0000000",CHK=$$CHECKDG^MPIFSPC(NUM),MPINUM=NUM_"V"_CHK
"RTN","MPIFAPI",26,0)
 S NXTNUM=NUM+1,NXTCHK=$$CHECKDG^MPIFSPC(NXTNUM)
"RTN","MPIFAPI",27,0)
 S DIC("DR")="1////^S X=NUM;2////^S X=CHK;3////^S X=NXTNUM;5////"_NXTCHK
"RTN","MPIFAPI",28,0)
 K DD,D0
"RTN","MPIFAPI",29,0)
 D FILE^DICN
"RTN","MPIFAPI",30,0)
 K DIC,X,Y
"RTN","MPIFAPI",31,0)
 Q MPINUM
"RTN","MPIFAPI",32,0)
 ;
"RTN","MPIFAPI",33,0)
MPILINK() ;returns MPI logical Link
"RTN","MPIFAPI",34,0)
 N MPIL,MPILINK
"RTN","MPIFAPI",35,0)
 D LINK^HLUTIL3("MPI",.MPIL)
"RTN","MPIFAPI",36,0)
 I '$D(MPIL) Q "-1^NOT DEFINED"
"RTN","MPIFAPI",37,0)
 S MPILINK=$O(MPIL(0))
"RTN","MPIFAPI",38,0)
 I MPILINK="" Q "-1^NOT DEFINED"
"RTN","MPIFAPI",39,0)
 S MPILINK=$G(MPIL(MPILINK))
"RTN","MPIFAPI",40,0)
 Q MPILINK
"RTN","MPIFAPI",41,0)
 ;
"RTN","MPIFAPI",42,0)
SUBNUM(DFN) ; returns SCN from MPI node for given DFN
"RTN","MPIFAPI",43,0)
 ; DFN - ien of patient file
"RTN","MPIFAPI",44,0)
 ; returns:  -1^error message << always returns.
"RTN","MPIFAPI",45,0)
 ;*** Subscription control numbers no longer exist
"RTN","MPIFAPI",46,0)
 Q "-1^No Subscription Control Number for DFN "_DFN
"RTN","MPIFAPI",47,0)
 ;
"RTN","MPIFAPI",48,0)
MPINODE(DFN) ; returns MPI node for given DFN
"RTN","MPIFAPI",49,0)
 ; DFN - patient file ien
"RTN","MPIFAPI",50,0)
 ; returns:  -1^error message or MPI node from patient file
"RTN","MPIFAPI",51,0)
 N TMP
"RTN","MPIFAPI",52,0)
 I '$D(DFN) Q "-1^DFN not defined"
"RTN","MPIFAPI",53,0)
 I '$D(^DPT(DFN)) Q "-1^DFN doesn't exist"
"RTN","MPIFAPI",54,0)
 I '$D(^DPT(DFN,"MPI")) Q "-1^No MPI node for DFN "_DFN
"RTN","MPIFAPI",55,0)
 L +^DPT("MPI",DFN):10 ;**45 added lock check for getting ICN data back
"RTN","MPIFAPI",56,0)
 N NODE S NODE=$G(^DPT(DFN,"MPI"))
"RTN","MPIFAPI",57,0)
 I NODE=""!(NODE?."^") S NODE="-1^No MPI data for DFN "_DFN
"RTN","MPIFAPI",58,0)
 I +NODE>0 D
"RTN","MPIFAPI",59,0)
 .;**45 checking if checksum for ICN is correct, if not update the 991.02 field
"RTN","MPIFAPI",60,0)
 .; and include new value in NODE returned.
"RTN","MPIFAPI",61,0)
 .N CHK S CHK=$$CHECKDG^MPIFSPC($P(NODE,"^"))
"RTN","MPIFAPI",62,0)
 .I CHK'=$P(NODE,"^",2) S TMP=$$SETICN^MPIF001(DFN,$P(NODE,"^"),CHK) S $P(NODE,"^",2)=CHK
"RTN","MPIFAPI",63,0)
 L -^DPT("MPI",DFN)
"RTN","MPIFAPI",64,0)
 Q NODE
"RTN","MPIFAPI",65,0)
 ;
"RTN","MPIFAPI",66,0)
GETADFN(ICN) ; return DFN ONLY if ICN is the active ICN
"RTN","MPIFAPI",67,0)
 ; ICN - Integration Control Number for patient to be returned
"RTN","MPIFAPI",68,0)
 ; returns:  -1^error message
"RTN","MPIFAPI",69,0)
 ;           DFN - IEN for the patient entry in the Patient file (#2)
"RTN","MPIFAPI",70,0)
 N RETURN,DFN
"RTN","MPIFAPI",71,0)
 I $G(ICN)'>0 Q "-1^NO ICN"
"RTN","MPIFAPI",72,0)
 I '$D(^DPT("AICN",ICN)) Q "-1^ICN NOT IN DATABASE"
"RTN","MPIFAPI",73,0)
 S DFN=$O(^DPT("AICN",ICN,0))
"RTN","MPIFAPI",74,0)
 I $G(DFN)'>0 Q "-1^BAD AICN CROSS-REFERENCE"
"RTN","MPIFAPI",75,0)
 I $P($G(^DPT(DFN,"MPI")),"^")'=ICN Q "-1^ICN is not Active one"
"RTN","MPIFAPI",76,0)
 Q DFN
"RTN","MPIFAPI",77,0)
 ;
"RTN","MPIFAPI",78,0)
UPDATE(DFN,ARR,MPISILNT,REMOVE) ;api to edit 'mpi','mpifhis' and 'mpicmor' nodes
"RTN","MPIFAPI",79,0)
 ;**37 UPDATE module moved 3/30/05 from MPIFAPI into MPIFAPI1.
"RTN","MPIFAPI",80,0)
 ;Linetag must remain due to DBIA #2706.
"RTN","MPIFAPI",81,0)
 Q $$UPDATE^MPIFAPI1(DFN,ARR,.MPISILNT,.REMOVE)
"RTN","MPIFAPI",82,0)
 ;
"RTN","MPIFAPI",83,0)
MPIQ(DFN) ;MPI QUERY
"RTN","MPIFAPI",84,0)
 N MPIFARR
"RTN","MPIFAPI",85,0)
 L +^DPT(DFN):2 I '$T,'$D(MPIFS) W $C(7),!!,"Patient is being edited. No attempt will be made to connect to the MPI." H 2 Q
"RTN","MPIFAPI",86,0)
 I '$D(MPIFS) D  ;Not from SmartCard background job
"RTN","MPIFAPI",87,0)
 .;**37 mods to L -^DPT
"RTN","MPIFAPI",88,0)
 .I $G(DGNEW)=1 D  ;New patient, fields always blank, ask
"RTN","MPIFAPI",89,0)
 ..D WRTLN
"RTN","MPIFAPI",90,0)
 ..; **44 Adding Pseudo SSN Reason to the list of prompted fields if SSN is a pseudo and there isn't already a reason stored
"RTN","MPIFAPI",91,0)
 ..N MPIFP S MPIFP="" S DA=DFN,DIQ(0)="EI",DIC=2,DR=".09;.0906",DIQ="MPIFARR" D EN^DIQ1 K DA,DR,DIC,DQ,DR
"RTN","MPIFAPI",92,0)
 ..I $D(MPIFARR(2,DFN,.0906,"I")) D
"RTN","MPIFAPI",93,0)
 ...I MPIFARR(2,DFN,.09,"E")["P",("S"[MPIFARR(2,DFN,.0906,"I")) S MPIFP=".0906;"
"RTN","MPIFAPI",94,0)
 ..S DIE="^DPT(",DA=DFN,DIE("NO^")="BACK"
"RTN","MPIFAPI",95,0)
 ..S DR=MPIFP_".2403;.092;.093;1",DR(2,2.01)=".01;1" D ^DIE K DA,DIE,DR Q  ;*55 MPIC_1402 ALIAS SSN
"RTN","MPIFAPI",96,0)
 .I $G(DGNEW)="" D  ;Existing patient, get current values
"RTN","MPIFAPI",97,0)
 ..N MPIDOB,IMPRS,MPIMMN,MPICTY,MPIST
"RTN","MPIFAPI",98,0)
 ..S DIC=2,DR=".02;.03;.09;.0906;.092;.093;.2403;994;1",DR(2.01)=".01"
"RTN","MPIFAPI",99,0)
 ..;^ **44 include pseudo ssn reason to list
"RTN","MPIFAPI",100,0)
 ..S DA=DFN,DA(2.01)=1,DIQ(0)="EI",DIQ="MPIFARR"
"RTN","MPIFAPI",101,0)
 ..D EN^DIQ1 K DA,DIC,DIQ,DR
"RTN","MPIFAPI",102,0)
 ..;build DR from blank fields / imprecise DOB / pseudo SSN
"RTN","MPIFAPI",103,0)
 ..S DR=""
"RTN","MPIFAPI",104,0)
 ..S MPIDOB=$G(MPIFARR(2,DFN,.03,"I")) ;DATE OF BIRTH
"RTN","MPIFAPI",105,0)
 ..I MPIDOB="" S DR=DR_".03;" ;DOB null
"RTN","MPIFAPI",106,0)
 ..;Is DOB imprecise?
"RTN","MPIFAPI",107,0)
 ..I MPIDOB'="" S IMPRS=0 D
"RTN","MPIFAPI",108,0)
 ...I $E(MPIDOB,4,7)="0000" S IMPRS=1 ;Year only; no month/day
"RTN","MPIFAPI",109,0)
 ...I ($E(MPIDOB,6,7)="00")&($E(MPIDOB,4,5)'="00") S IMPRS=1 ;Year/month only; no day
"RTN","MPIFAPI",110,0)
 ...I IMPRS=1 S DR=DR_".03;" ;DOB imprecise
"RTN","MPIFAPI",111,0)
 ..I $G(MPIFARR(2,DFN,.02,"I"))="" S DR=DR_".02;" ;SEX
"RTN","MPIFAPI",112,0)
 ..;if the SSN is null, add to prompted fields
"RTN","MPIFAPI",113,0)
 ..N SSNP S SSNP=0
"RTN","MPIFAPI",114,0)
 ..I ($G(MPIFARR(2,DFN,.09,"E"))="") S DR=DR_".09;",SSNP=1 ;SSN
"RTN","MPIFAPI",115,0)
 ..I DR'="" D
"RTN","MPIFAPI",116,0)
 ...D WRTLN
"RTN","MPIFAPI",117,0)
 ...S DIE="^DPT(",DA=DFN,DIE("NO^")="BACK"
"RTN","MPIFAPI",118,0)
 ...D ^DIE K DA,DIE,DR,DIC,DIQ
"RTN","MPIFAPI",119,0)
 ...;if SSN was prompted then reinitialize SSN ARRAY variable
"RTN","MPIFAPI",120,0)
 ...I SSNP=1 S MPIFARR(2,DFN,.09,"E")="" S DIC=2,DR=".09" S DA=DFN,DA(2.01)=1,DIQ(0)="E",DIQ="MPIFARR" D EN^DIQ1 K DA,DIC,DIQ,DR
"RTN","MPIFAPI",121,0)
 ...;**44 if the PSEUDO SSN REASON field exist
"RTN","MPIFAPI",122,0)
 ..S DR="" ;reset DR to null to be able to concatenate the fields together since DR was just killed above
"RTN","MPIFAPI",123,0)
 ..I $D(MPIFARR(2,DFN,.0906,"I")) D
"RTN","MPIFAPI",124,0)
 ...;check to see if the SSN is a PSEUDO and the PSEUDO SSN REASON is null or "S" (FOLLOW-UP REQUIRED), if so add PSEUDO SSN REASON to the prompted fields
"RTN","MPIFAPI",125,0)
 ...I MPIFARR(2,DFN,.09,"E")["P",(MPIFARR(2,DFN,.0906,"I")="") S DR=DR_".0906;" ;**48 correct when SSN is prompted
"RTN","MPIFAPI",126,0)
 ...I MPIFARR(2,DFN,.09,"E")["P",(MPIFARR(2,DFN,.0906,"I")="S") S DR=DR_".09;" ;**48 correct when SSN is prompted
"RTN","MPIFAPI",127,0)
 ..I $G(MPIFARR(2,DFN,994,"I"))="" S DR=DR_"994;" ;MULTIPLE BIRTH INDICATOR
"RTN","MPIFAPI",128,0)
 ..S MPIMMN=$G(MPIFARR(2,DFN,.2403,"E")) ;MOTHER'S MAIDEN NAME
"RTN","MPIFAPI",129,0)
 ..I $$VALDT(MPIMMN) S DR=DR_".2403;" ;Validate MMN value
"RTN","MPIFAPI",130,0)
 ..S MPICTY=$G(MPIFARR(2,DFN,.092,"E")) ;PLACE OF BIRTH [CITY]
"RTN","MPIFAPI",131,0)
 ..S MPIST=$G(MPIFARR(2,DFN,.093,"E")) ;PLACE OF BIRTH [STATE]
"RTN","MPIFAPI",132,0)
 ..I $S($$VALDT(MPICTY):1,$$VALDT(MPIST):1,1:0) S DR=DR_".092;.093;" ;Validate POB [CITY] & [STATE] value
"RTN","MPIFAPI",133,0)
 ..I $G(MPIFARR(2.01,1,.01,"E"))="" S DR=DR_"1",DR(2,2.01)=".01;1" ;ALIAS **44 ADDING ALIAS SSN TO FIELDS
"RTN","MPIFAPI",134,0)
 ..I DR'="" D
"RTN","MPIFAPI",135,0)
 ...D WRTLN
"RTN","MPIFAPI",136,0)
 ...S DIE="^DPT(",DA=DFN,DIE("NO^")="BACK"
"RTN","MPIFAPI",137,0)
 ...D ^DIE K DA,DIE,DR,DIC,DIQ
"RTN","MPIFAPI",138,0)
 L -^DPT(DFN)
"RTN","MPIFAPI",139,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","MPIFAPI",140,0)
 K MPIFRTN D VTQ^MPIFQ0
"RTN","MPIFAPI",141,0)
 ;**43 No longer get list of potential matches to pick from
"RTN","MPIFAPI",142,0)
 ;I $G(MPIFRTN)="" D
"RTN","MPIFAPI",143,0)
 ;. ^ Quit at LM screen when presented with a list of possible matches
"RTN","MPIFAPI",144,0)
 ;. \/ setup Local ICN and proceed
"RTN","MPIFAPI",145,0)
 ;.N ICN,ERR
"RTN","MPIFAPI",146,0)
 ;.S ICN=$$EN2^MPIFAPI()
"RTN","MPIFAPI",147,0)
 ;.Q:ICN=""!(+ICN=-1)
"RTN","MPIFAPI",148,0)
 ;.S ERR=$$SETICN^MPIF001(DFN,+ICN,$P(ICN,"V",2))
"RTN","MPIFAPI",149,0)
 ;.Q:+ERR=-1
"RTN","MPIFAPI",150,0)
 ;. ^ couldn't set ICN don't set other fields
"RTN","MPIFAPI",151,0)
 ;.S ERR=$$SETLOC^MPIF001(DFN,1),ERR=$$CHANGE^MPIF001(DFN,$P($$SITE^VASITE,"^"))
"RTN","MPIFAPI",152,0)
 K MPIFRTN,ZTREQ
"RTN","MPIFAPI",153,0)
 Q
"RTN","MPIFAPI",154,0)
 ;
"RTN","MPIFAPI",155,0)
MPIQQ(PDFN) ; Entry point for queuing d/c
"RTN","MPIFAPI",156,0)
 ; Returned is -1^error message OR Task #
"RTN","MPIFAPI",157,0)
 Q:'$D(PDFN) "-1^No DFN passed"
"RTN","MPIFAPI",158,0)
 S ZTRTN="MPIQ^MPIFAPI(PDFN)"
"RTN","MPIFAPI",159,0)
 I $D(DUZ) S ZTSAVE("DUZ")=DUZ
"RTN","MPIFAPI",160,0)
 S ZTSAVE("PDFN")=PDFN,ZTSAVE("MPIFS")=1
"RTN","MPIFAPI",161,0)
 ; ^ silent flag
"RTN","MPIFAPI",162,0)
 S ZTIO="",ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,0,0,1,0)
"RTN","MPIFAPI",163,0)
 D ^%ZTLOAD
"RTN","MPIFAPI",164,0)
 D HOME^%ZIS K IO("Q")
"RTN","MPIFAPI",165,0)
 N TSK S TSK=ZTSK
"RTN","MPIFAPI",166,0)
 K ZTSAVE,ZTRTN,ZTIO,ZTDTH,ZTSK
"RTN","MPIFAPI",167,0)
 Q TSK
"RTN","MPIFAPI",168,0)
 ;
"RTN","MPIFAPI",169,0)
WRTLN ;**37 Write intro text ONLY if there are fields to ask
"RTN","MPIFAPI",170,0)
 W !!,"Please verify or update the following information:",!
"RTN","MPIFAPI",171,0)
 Q
"RTN","MPIFAPI",172,0)
 ;
"RTN","MPIFAPI",173,0)
VALDT(VAL) ;**37 Validate value passed in.
"RTN","MPIFAPI",174,0)
 ;Prompt if field contains invalid data (e.g., UNKNOWN, NOT KNOWN, etc.)
"RTN","MPIFAPI",175,0)
 ;Returns 0 if not found
"RTN","MPIFAPI",176,0)
 ;Returns 1 if found
"RTN","MPIFAPI",177,0)
 I VAL="" Q 1
"RTN","MPIFAPI",178,0)
 I $E($$UP^XLFSTR(VAL),1,3)="UNK" Q 1
"RTN","MPIFAPI",179,0)
 I $E($$UP^XLFSTR(VAL),1,4)="NONE" Q 1
"RTN","MPIFAPI",180,0)
 I $E($$UP^XLFSTR(VAL),1,4)="NOT " Q 1
"RTN","MPIFAPI",181,0)
 I $$UP^XLFSTR(VAL)["UNAVAILABLE" Q 1
"RTN","MPIFAPI",182,0)
 I $$UP^XLFSTR(VAL)["DECEASED" Q 1
"RTN","MPIFAPI",183,0)
 I $E($$UP^XLFSTR(VAL),1,2)="DC" Q 1
"RTN","MPIFAPI",184,0)
 Q 0
"RTN","MPIFAPI",185,0)
 ;
"RTN","MPIFAPI",186,0)
VIC40(DFN,ICN,CHK) ; -- only allowed for approved package use
"RTN","MPIFAPI",187,0)
 ; this will file the icn/chk for a patient and update correlations
"RTN","MPIFAPI",188,0)
 ; so the local site is now a subscribing package.  This is used with the
"RTN","MPIFAPI",189,0)
 ; VIC 4.0 card registration where PV data was obtained from MVI.  
"RTN","MPIFAPI",190,0)
 ;*56 (elz)
"RTN","MPIFAPI",191,0)
 N MPIX,TIME,LIST
"RTN","MPIFAPI",192,0)
 S TIME=$$NOW^XLFDT
"RTN","MPIFAPI",193,0)
 S INDEX=1
"RTN","MPIFAPI",194,0)
 D UPDATE^MPIFQ0(DFN,ICN_"V"_CHK,"")
"RTN","MPIFAPI",195,0)
 Q
"RTN","MPIFHWSC")
0^2^B6654102
"RTN","MPIFHWSC",1,0)
MPIFHWSC ;OAK/ELZ - MPIF HEALTHEVET WEB SERVICES CLIENT TOOLS ;3 APR 2012
"RTN","MPIFHWSC",2,0)
 ;;1.0;MASTER PATIENT INDEX VISTA;**56**;30 Apr 99;Build 2
"RTN","MPIFHWSC",3,0)
 ;
"RTN","MPIFHWSC",4,0)
ENV ; - environment check entry (first time with this patch only)
"RTN","MPIFHWSC",5,0)
 ; this tag area can be removed with future patches
"RTN","MPIFHWSC",6,0)
 ; future patches can call the $$CKSETUP^MPIFHWSC entry for environment
"RTN","MPIFHWSC",7,0)
 ; check
"RTN","MPIFHWSC",8,0)
 S X=$$CKSETUP("PSIMWSEXECUTE.WSDL")
"RTN","MPIFHWSC",9,0)
 Q
"RTN","MPIFHWSC",10,0)
 ;
"RTN","MPIFHWSC",11,0)
POSTINT ; -- setup (first time with this patch only)
"RTN","MPIFHWSC",12,0)
 ; this tag area can be removed with future patches
"RTN","MPIFHWSC",13,0)
 ; future patches can call the DO SETUP^MPIFHWSC entry for post-init
"RTN","MPIFHWSC",14,0)
 ; to setup a new HWSC 18.02 entry
"RTN","MPIFHWSC",15,0)
 D SETUP("PSIMWSEXECUTE.WSDL","MPI_PSIM_EXECUTE")
"RTN","MPIFHWSC",16,0)
 Q
"RTN","MPIFHWSC",17,0)
 ;
"RTN","MPIFHWSC",18,0)
CKSETUP(MPIWSDL) ; - used to check the environment
"RTN","MPIFHWSC",19,0)
 ; returns the path to be used that was verified or 0 if it fails
"RTN","MPIFHWSC",20,0)
 ;
"RTN","MPIFHWSC",21,0)
 ; $$DEFDIR^%ZISH,$$LIST^%ZISH - #2320
"RTN","MPIFHWSC",22,0)
 ; BMES^XPDUTL - #10141
"RTN","MPIFHWSC",23,0)
 ;
"RTN","MPIFHWSC",24,0)
 N MPISTAT,MPIPATH,MPIFILE
"RTN","MPIFHWSC",25,0)
 S MPIPATH=$$DEFDIR^%ZISH()
"RTN","MPIFHWSC",26,0)
 S MPIFILE(MPIWSDL)=""
"RTN","MPIFHWSC",27,0)
 S MPISTAT=$$LIST^%ZISH(MPIPATH,"MPIFILE","MPISTAT")
"RTN","MPIFHWSC",28,0)
 I 'MPISTAT!($D(MPISTAT)'=11),'$D(XPDENV) D  Q 0
"RTN","MPIFHWSC",29,0)
 . D BMES^XPDUTL("**** Error cannot find file "_MPIPATH_MPIWSDL)
"RTN","MPIFHWSC",30,0)
 I 'MPISTAT!($D(MPISTAT)'=11) D  Q 0
"RTN","MPIFHWSC",31,0)
 . W !!,"**** WSDL file "_MPIWSDL_" not found in "_MPIPATH_"."
"RTN","MPIFHWSC",32,0)
 . W !,"     You will need that prior to install."
"RTN","MPIFHWSC",33,0)
 . S XPDQUIT=2
"RTN","MPIFHWSC",34,0)
 Q MPIPATH
"RTN","MPIFHWSC",35,0)
 ;
"RTN","MPIFHWSC",36,0)
SETUP(MPIWSDL,MPISERV) ;  -- call to setup hwsc
"RTN","MPIFHWSC",37,0)
 ;MPIWSDL - call with the wsdl file to setup, must be in the
"RTN","MPIFHWSC",38,0)
 ;          kernel default directory
"RTN","MPIFHWSC",39,0)
 ;
"RTN","MPIFHWSC",40,0)
 ; $$GENPORT^XOBWLIB - #5421
"RTN","MPIFHWSC",41,0)
 ;
"RTN","MPIFHWSC",42,0)
 N MPISTAT,MPIPATH,MPIARR
"RTN","MPIFHWSC",43,0)
 S MPIPATH=$$CKSETUP(MPIWSDL) I MPIPATH=0 Q
"RTN","MPIFHWSC",44,0)
 S MPIFILE(MPIWSDL)=""
"RTN","MPIFHWSC",45,0)
 S MPIARR("WSDL FILE")=MPIPATH_MPIWSDL
"RTN","MPIFHWSC",46,0)
 S MPIARR("CACHE PACKAGE NAME")="MPIPSIM"
"RTN","MPIFHWSC",47,0)
 S MPIARR("WEB SERVICE NAME")=MPISERV
"RTN","MPIFHWSC",48,0)
 S MPIARR("AVAILABILITY RESOURCE")="?wsdl"
"RTN","MPIFHWSC",49,0)
 S MPISTAT=$$GENPORT^XOBWLIB(.MPIARR)
"RTN","MPIFHWSC",50,0)
 ;
"RTN","MPIFHWSC",51,0)
 I 'MPISTAT D BMES^XPDUTL("**** Error creating Web Service (#18.02)"_MPISERV),MES^XPDUTL(MPISTAT) Q
"RTN","MPIFHWSC",52,0)
 D BMES^XPDUTL(">>> "_MPISERV_" entry added to WEB SERVICE file #18.02")
"RTN","MPIFHWSC",53,0)
 D BMES^XPDUTL("  - Be sure and set up the Web Server as in the post-install instructions!!")
"RTN","MPIFHWSC",54,0)
 ;
"RTN","MPIFHWSC",55,0)
 Q
"RTN","MPIFHWSC",56,0)
 ;
"RTN","MPIFHWSC",57,0)
POST(MPIXML,MPIXMLR) ; - post XML to the execute server
"RTN","MPIFHWSC",58,0)
 ;
"RTN","MPIFHWSC",59,0)
 ; $$GETPROXY^XOBWLIB - #5421
"RTN","MPIFHWSC",60,0)
 ;
"RTN","MPIFHWSC",61,0)
 N $ETRAP,$ESTACK,SVC
"RTN","MPIFHWSC",62,0)
 ;
"RTN","MPIFHWSC",63,0)
 ; set error trap
"RTN","MPIFHWSC",64,0)
 S $ETRAP="DO ERROR^MPIFHWSC"
"RTN","MPIFHWSC",65,0)
 ;
"RTN","MPIFHWSC",66,0)
 ; make the call
"RTN","MPIFHWSC",67,0)
 S SVC=$$GETPROXY^XOBWLIB("MPI_PSIM_EXECUTE","MPI_PSIM_EXECUTE")
"RTN","MPIFHWSC",68,0)
 S MPIXMLR=SVC.execute(MPIXML)
"RTN","MPIFHWSC",69,0)
 ;
"RTN","MPIFHWSC",70,0)
 Q
"RTN","MPIFHWSC",71,0)
 ;
"RTN","MPIFHWSC",72,0)
ERROR ; - catch errors
"RTN","MPIFHWSC",73,0)
 ; Set ecode to empty to return to calling function
"RTN","MPIFHWSC",74,0)
 ;
"RTN","MPIFHWSC",75,0)
 ; $$EOFAC^XOBWLIB, ZTER^XOBWLIB - #5421
"RTN","MPIFHWSC",76,0)
 ; UNWIND^%ZTER - #1621
"RTN","MPIFHWSC",77,0)
 ;
"RTN","MPIFHWSC",78,0)
 N MPIERR
"RTN","MPIFHWSC",79,0)
 S MPIERR=$$EOFAC^XOBWLIB()
"RTN","MPIFHWSC",80,0)
 D ZTER^XOBWLIB(MPIERR)
"RTN","MPIFHWSC",81,0)
 S $ECODE=""
"RTN","MPIFHWSC",82,0)
 D UNWIND^%ZTER
"RTN","MPIFHWSC",83,0)
 Q
"RTN","MPIFHWSC",84,0)
 ;
"RTN","MPIFQ0")
0^3^B73016774
"RTN","MPIFQ0",1,0)
MPIFQ0 ;ALB/RJS-QUERY HANDLER TOP LEVEL ; 9/12/12 3:01pm
"RTN","MPIFQ0",2,0)
 ;;1.0;MASTER PATIENT INDEX VISTA;**1,3,8,14,13,16,17,21,20,24,26,28,31,33,35,38,43,52,54,56**;30 Apr 99;Build 2
"RTN","MPIFQ0",3,0)
 ;
"RTN","MPIFQ0",4,0)
 ; Integration Agreements utilized:
"RTN","MPIFQ0",5,0)
 ;  EXC, START and STOP^RGHLLOG - #2796
"RTN","MPIFQ0",6,0)
 ;  FILE^VAFCTFU - #2988
"RTN","MPIFQ0",7,0)
 ;  $$EN^HLCSAC - #3471
"RTN","MPIFQ0",8,0)
 ;  NAME^VAFCPID2 - #3492
"RTN","MPIFQ0",9,0)
 ;
"RTN","MPIFQ0",10,0)
INTACTV ;Interactive standalone query
"RTN","MPIFQ0",11,0)
 N DFN,NAME1,MPIFLL
"RTN","MPIFQ0",12,0)
 K DTOUT,DUOUT,X,Y,DIC
"RTN","MPIFQ0",13,0)
 S MPIFRES="",MPIFINT="",DIC="^DPT(",DIC(0)="AEMQ" D ^DIC
"RTN","MPIFQ0",14,0)
 I ($D(DTOUT))!($D(DUOUT))!((+$G(Y))<0) W:'$D(MPIFRPC) !,"TRY AGAIN LATER" G END
"RTN","MPIFQ0",15,0)
 S DFN=+Y,HLP("ACKTIME")=300
"RTN","MPIFQ0",16,0)
 W:'$D(MPIFRPC) !
"RTN","MPIFQ0",17,0)
CIRNEXC ; Exception Entry Point
"RTN","MPIFQ0",18,0)
 I +$$GETICN^MPIF001(DFN)>0,$$IFLOCAL^MPIF001(DFN)'=1 W:'$D(MPIFRPC) !,"Patient already has an ICN" G END
"RTN","MPIFQ0",19,0)
 N LOCDATA ;Data Returned from GETDATA in ICN array
"RTN","MPIFQ0",20,0)
 D GETDATA("^DPT(",DFN,"LOCDATA",".01;.02;.03;.09;.301;391;1901")
"RTN","MPIFQ0",21,0)
 S LOCDATA(2,DFN,991.01)=$P($$MPINODE^MPIFAPI(DFN),"^"),TSSN=LOCDATA(2,DFN,.09)
"RTN","MPIFQ0",22,0)
 I $$IFLOCAL^MPIF001(DFN)=1 S MPIFLL=""
"RTN","MPIFQ0",23,0)
 I $G(LOCDATA(2,DFN,991.01))>0&('$D(MPIFLL)) W:'$D(MPIFRPC) !,"Patient already has an ICN" G END
"RTN","MPIFQ0",24,0)
 S HLP("ACKTIME")=300,MPIQRYNM="EXACT_MATCH_QUERY"
"RTN","MPIFQ0",25,0)
 ;MPIQRYNM="VTQ_PID_ICN_NO_LOAD" **43 CHANGING QUERY NAME
"RTN","MPIFQ0",26,0)
 G JUMP
"RTN","MPIFQ0",27,0)
VTQ G:$G(DFN)']"" END
"RTN","MPIFQ0",28,0)
 N LOCDATA ;Data Returned from GETDATA in ICN array
"RTN","MPIFQ0",29,0)
 D GETDATA("^DPT(",DFN,"LOCDATA",".01;.02;.03;.09;.301;391;1901")
"RTN","MPIFQ0",30,0)
 S LOCDATA(2,DFN,991.01)=$P($$MPINODE^MPIFAPI(DFN),"^"),TSSN=LOCDATA(2,DFN,.09)
"RTN","MPIFQ0",31,0)
 ;S MPIQRYNM="VTQ_PID_ICN_NO_LOAD" **43 CHANGING QUERY NAME
"RTN","MPIFQ0",32,0)
 S MPIQRYNM="EXACT_MATCH_QUERY"
"RTN","MPIFQ0",33,0)
 I $G(LOCDATA(2,DFN,991.01))>0 S MPIFRTN="ALREADY HAS ICN" G END ;If Pt already has ICN don't connect to MPI
"RTN","MPIFQ0",34,0)
JUMP N TIME,% D NOW^%DTC S TIME=%
"RTN","MPIFQ0",35,0)
 N HL,MPIINM,MPIOUT,MPIIN,MPIMCNT,MPICNT,MPICS,HEADER,TEST,SITE,MPIDC,SSN
"RTN","MPIFQ0",36,0)
 I $G(HLP("ACKTIME"))="" S HLP("ACKTIME")=30 ;If the HLP("ACKTIME") is not already set for the D/C
"RTN","MPIFQ0",37,0)
 S HL("ECH")="^~\&",HL("FS")="|"
"RTN","MPIFQ0",38,0)
 I '$D(MPIQRYNM) S MPIQRYNM="VTQ_PID_ICN"
"RTN","MPIFQ0",39,0)
 S MPIIN="",MPIMCNT=DFN,MPICNT=1,MPICS=$E(HL("ECH"),1)
"RTN","MPIFQ0",40,0)
 D VTQ1^MPIFVTQ(DFN,.MPIOUT,.HL,.MPIQRYNM) ; **33 remove field list to get all now
"RTN","MPIFQ0",41,0)
 I +MPIOUT(0)=-1 D  G EXIT
"RTN","MPIFQ0",42,0)
 .S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)=$G(MPIOUT(0)),MPIFRTN="CONTINUE"
"RTN","MPIFQ0",43,0)
 ;Create MSH
"RTN","MPIFQ0",44,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1,HEADER="MSH"_HL("FS")_HL("ECH")_HL("FS")_"MPI_LOAD"_HL("FS")_SITE_HL("FS")
"RTN","MPIFQ0",45,0)
 S HEADER=HEADER_"MPI-ICN"_HL("FS")_HL("FS")_HL("FS")_HL("FS")_"VQQ"_MPICS_"Q02"_HL("FS")_MPIMCNT_"-"_MPICNT_HL("FS") ;**38 changed VTQ to VQQ
"RTN","MPIFQ0",46,0)
 S MPIOUT(1)=HEADER K MPIOUT(0)
"RTN","MPIFQ0",47,0)
 I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Attempting to connect to the Master Patient Index in Austin...",!,"If no SSN or inexact DOB or common name, this request",!,"may take some time, please be patient...",!
"RTN","MPIFQ0",48,0)
 S TEST=$$EN^HLCSAC("MPIVA DIR","MPIOUT","MPIDC")
"RTN","MPIFQ0",49,0)
 K HLP("ACKTIME") ;kill the HLP array set for the ack timeout
"RTN","MPIFQ0",50,0)
 I +TEST=-1 D  G EXIT
"RTN","MPIFQ0",51,0)
 .S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)=TEST
"RTN","MPIFQ0",52,0)
 .I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Could not connect to MPI or Timed Out, assigning local ICN (if not already assigned)..."
"RTN","MPIFQ0",53,0)
 .D LOCAL^MPIFQ3(DFN) S MPIFRTN="ASSIGNING LOCAL"
"RTN","MPIFQ0",54,0)
 K ^TMP("MPIFVQQ",$J),^TMP("MPIFQ0",$J) ;array data is parsed into for display in LM
"RTN","MPIFQ0",55,0)
INIPARS ;
"RTN","MPIFQ0",56,0)
 N SEG,INDEX,SKIP,CHECK,AL,TTF2,TFLL,TF,TF2,MPIREP,MPICOMP
"RTN","MPIFQ0",57,0)
 S INDEX=0 K CHECK
"RTN","MPIFQ0",58,0)
LOOP1 ;
"RTN","MPIFQ0",59,0)
 ;process in ADT type messages
"RTN","MPIFQ0",60,0)
 N MPIX S MPIX=0 N REP,SG,MSG,MPIQUIT,MPINODE
"RTN","MPIFQ0",61,0)
 K TWODFN S MPIQUIT=0
"RTN","MPIFQ0",62,0)
 F MPIX=0:1 X "D LOOP2" D  K MPINODE,MSG Q:MPIQUIT'>0
"RTN","MPIFQ0",63,0)
 . I $D(MPINODE(1)) S SG=$E(MPINODE(1),1,3) S MSG(1)=MPINODE(1) D
"RTN","MPIFQ0",64,0)
 .. S MPIJ=1 F  S MPIJ=$O(MPINODE(MPIJ)) Q:'MPIJ  S MSG(MPIJ)=MPINODE(MPIJ)
"RTN","MPIFQ0",65,0)
 .. D:SG?2A1(1A,1N) @SG
"RTN","MPIFQ0",66,0)
DECIDE ;If no data in ^TMP that means the patient was not found in the MPI w/VTQ Query. So we go to A28 to add the patient to the MPI.
"RTN","MPIFQ0",67,0)
 N EXC,TEXT,EXACT,EXACT2
"RTN","MPIFQ0",68,0)
 I '$D(^TMP("MPIFVQQ",$J)) D  G EXIT
"RTN","MPIFQ0",69,0)
 .I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Exact match for Patient was not found in the MPI..."
"RTN","MPIFQ0",70,0)
 .D A28^MPIFQ3(DFN) S MPIFRTN="DID A28"
"RTN","MPIFQ0",71,0)
 .;**43 log potential match exception if exist
"RTN","MPIFQ0",72,0)
 .;**52 removed all references to logging of Potential Matches because that will be done via a remote RPC in the Probabilistic Search flow on the MPI
"RTN","MPIFQ0",73,0)
 ;If INDEX=1 it means we got 1 match check SSN see if definitely same pt
"RTN","MPIFQ0",74,0)
 I (INDEX=1) D  G EXIT
"RTN","MPIFQ0",75,0)
 .;**43 Removed &(TSSN=SSN) from line above as there will only be an exact match returned now
"RTN","MPIFQ0",76,0)
 .N CCMOR,ICN,DATA,TICN,SNM,SNM2,IEN
"RTN","MPIFQ0",77,0)
 .S DATA=^TMP("MPIFVQQ",$J,INDEX,"DATA"),CMOR=$P(DATA,"^",5),ICN=$P(DATA,"^",6),IEN=$$IEN^XUAF4(CMOR)
"RTN","MPIFQ0",78,0)
 .D START^RGHLLOG(0)
"RTN","MPIFQ0",79,0)
 .S TICN=$$GETDFN^MPIF001(+ICN)
"RTN","MPIFQ0",80,0)
 .I TICN>0,DFN'=TICN D
"RTN","MPIFQ0",81,0)
 ..; call the new DUPLICATE RECORD MERGE ADD API (see section 3.2.1.2)
"RTN","MPIFQ0",82,0)
 ..N XDRSLT,XDRLST,XDRFL
"RTN","MPIFQ0",83,0)
 ..S XDRFL=2,XDRLST(1)=TICN_"^"_DFN
"RTN","MPIFQ0",84,0)
 ..D ADD^XDRDADDS(.XDRSLT,XDRFL,.XDRLST) S TWODFN=1
"RTN","MPIFQ0",85,0)
 ..;D TWODFNS^MPIF002(TICN,DFN,ICN) S TWODFN=1
"RTN","MPIFQ0",86,0)
 ..;I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Exception logged, another patient has the ICN returned already, requesting new ICN for this patient..."
"RTN","MPIFQ0",87,0)
 ..D A28^MPIFQ3(DFN),STOP^RGHLLOG(0) S MPIFRTN="Did A28" Q
"RTN","MPIFQ0",88,0)
 .;I TICN>0&(DFN'=TICN)
"RTN","MPIFQ0",89,0)
 .; CHECK IF NAME IS SAME - IF NOT POTENTIAL MATCH EXCEPTION
"RTN","MPIFQ0",90,0)
 .; **43 remove checks here as only exact match will be returned from the MPI
"RTN","MPIFQ0",91,0)
 .;S SNM=LOCDATA(2,DFN,.01) D NAME^VAFCPID2(DFN,.SNM,0) ;reformat name to DG 149 standard
"RTN","MPIFQ0",92,0)
 .;S SNM2=$P(DATA,"^") D NAME^VAFCPID2(0,.SNM2,0) S $P(DATA,"^")=SNM2
"RTN","MPIFQ0",93,0)
 .;I $P(SNM,",")=$P(SNM2,",")&($P($P(SNM2,",",2)," ")=$P($P(SNM,",",2)," ")) D
"RTN","MPIFQ0",94,0)
 .; ^first and last match - check for middle name vs middle initial
"RTN","MPIFQ0",95,0)
 .;N SNMN,SNMN2
"RTN","MPIFQ0",96,0)
 .;S SNMN=$P($P(SNM,",",2)," ",2),SNMN2=$P($P(SNM2,",",2)," ",2)
"RTN","MPIFQ0",97,0)
 .;I $L(SNMN)>1&($L(SNMN2)=1),$E(SNMN,1)=SNMN2 S EXACT=1
"RTN","MPIFQ0",98,0)
 .;I $L(SNMN2)>1&($L(SNMN)=1),$E(SNMN2,1)=SNMN S EXACT=1
"RTN","MPIFQ0",99,0)
 .;I $P($G(^DPT(DFN,0)),"^",2)'=$P(DATA,"^",11) S EXC=209,TEXT="Gender fields don't match between site and MPI for DFN "_DFN S EXACT2=1
"RTN","MPIFQ0",100,0)
 .;I SNM2'=SNM&('$D(EXACT))!($D(EXACT2)) D  Q
"RTN","MPIFQ0",101,0)
 .;I '$D(EXC) S EXC=214,TEXT="Name fields don't match between site and MPI for DFN "_DFN
"RTN","MPIFQ0",102,0)
 .;I $D(MPIFINT) D START^MPIFQ1(INDEX) Q
"RTN","MPIFQ0",103,0)
 .;I '$D(MPIFINT) D LOC2^MPIFQ3(DFN) Q
"RTN","MPIFQ0",104,0)
 .I '$D(MPIFS)&('$D(TWODFN)) W:'$D(MPIFRPC) !!,"Found Patient "_$G(LOCDATA(2,DFN,.01))_" on MPI",!,"  Updating ICN to "_+ICN_"  - just a minute..."
"RTN","MPIFQ0",105,0)
 .D STOP^RGHLLOG(0),UPDATE(DFN,ICN,CMOR) S MPIFRTN="GOT 1 HIT FROM MPI"
"RTN","MPIFQ0",106,0)
 ;I '$D(MPIFINT) D  G EXIT
"RTN","MPIFQ0",107,0)
 ;. came in via PIMS options to d/c with MPI
"RTN","MPIFQ0",108,0)
 ;.I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Potential Matches Found, Assigning Local ICN..."
"RTN","MPIFQ0",109,0)
 ;.I '$D(EXC) S EXC=218,TEXT="Potential matches found for patient DFN= "_DFN_" Use Single Patient Initialization to MPI option to manually process."
"RTN","MPIFQ0",110,0)
 ;.D START^RGHLLOG(0),EXC^RGHLLOG(EXC,TEXT,DFN),STOP^RGHLLOG(0)
"RTN","MPIFQ0",111,0)
 ;.D LOCAL^MPIFQ3(DFN) S MPIFRTN="ASSIGNING LOCAL"
"RTN","MPIFQ0",112,0)
 ;D START^MPIFQ1(INDEX) G END
"RTN","MPIFQ0",113,0)
EXIT I $D(MPIFINT) K MPIFINT,MPIFRES,MPIQRYNM,TSSN,TWODFN
"RTN","MPIFQ0",114,0)
 K VALMCNT,VALMLST,CCMOR,FICN H 3 W:'$D(MPIFRPC) !!
"RTN","MPIFQ0",115,0)
END K ^TMP("MPIFVQQ",$J),^TMP("MPIFQ0",$J) Q
"RTN","MPIFQ0",116,0)
 ;
"RTN","MPIFQ0",117,0)
UPDATE(DFN,ICN,CMOR) ;
"RTN","MPIFQ0",118,0)
 N TICN,CHKSUM,SETICN,SETLOC,CHANGE,RGLOG,LOCAL
"RTN","MPIFQ0",119,0)
 S CHKSUM=$P(ICN,"V",2),ICN=$P(ICN,"V",1),TICN=$$GETDFN^MPIF001(+ICN)
"RTN","MPIFQ0",120,0)
 I TICN>0,TICN'=DFN,'$D(TWODFN) D TWODFNS^MPIF002(TICN,DFN,ICN) Q
"RTN","MPIFQ0",121,0)
 S SETICN=$$SETICN^MPIF001(DFN,ICN,CHKSUM)
"RTN","MPIFQ0",122,0)
 I +SETICN'>0 S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)="COULD NOT SET ICN IN MPIFQ0" Q
"RTN","MPIFQ0",123,0)
 S SETLOC=1,LOCAL="N"
"RTN","MPIFQ0",124,0)
 I $E(ICN,1,3)=$P($$SITE^VASITE(),"^",3) S LOCAL="Y"
"RTN","MPIFQ0",125,0)
 I $G(LOCAL)="Y" S SETLOC=$$SETLOC^MPIF001(DFN,1)
"RTN","MPIFQ0",126,0)
 I $G(LOCAL)'="Y" S SETLOC=$$SETLOC^MPIF001(DFN,0)
"RTN","MPIFQ0",127,0)
 I +SETLOC'>0 S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)="COULD NOT SETLOC IN MPIFQ0" Q
"RTN","MPIFQ0",128,0)
 N CMOR1 S CMOR1=$$LKUP^XUAF4(CMOR)
"RTN","MPIFQ0",129,0)
 I CMOR1'="" S CHANGE=$$CHANGE^MPIF001(DFN,CMOR1)
"RTN","MPIFQ0",130,0)
 I CMOR1="" S CHANGE=-1
"RTN","MPIFQ0",131,0)
 I $G(LOCAL)="Y" S CHANGE=$$CHANGE^MPIF001(DFN,$P($$SITE^VASITE,"^"))
"RTN","MPIFQ0",132,0)
 ;**56 - MVI_1727 (ckn) - Don't quit after logging an error as we still want to update TFs and send A24 to MPI.
"RTN","MPIFQ0",133,0)
 I +CHANGE'>0 S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)="COULD NOT SET CMOR IN MPIFQ0" ;Q - commented out quit
"RTN","MPIFQ0",134,0)
 Q:$G(LOCAL)="Y"
"RTN","MPIFQ0",135,0)
 N RESLT S RESLT=$$A24^MPIFA24B(DFN)
"RTN","MPIFQ0",136,0)
 I +RESLT<0 D EXC^RGHLLOG(208,"Problem building A24 (ADD TF) for DFN= "_DFN,DFN)
"RTN","MPIFQ0",137,0)
 ; Added for patch 31, create treating facility list
"RTN","MPIFQ0",138,0)
 I $D(^TMP("MPIFVQQ",$J,INDEX,"TF")) D
"RTN","MPIFQ0",139,0)
 . N MPINTFI,MPINTF,TFSTRG,TFIEN,MPIFMDT
"RTN","MPIFQ0",140,0)
 . S MPINTFI=0
"RTN","MPIFQ0",141,0)
 . F  S MPINTFI=$O(^TMP("MPIFVQQ",$J,INDEX,"TF",MPINTFI)) Q:'MPINTFI  D
"RTN","MPIFQ0",142,0)
 .. S MPINTF=^TMP("MPIFVQQ",$J,INDEX,"TF",MPINTFI)
"RTN","MPIFQ0",143,0)
 .. S TFIEN=$$IEN^XUAF4($P(MPINTF,"^",1))
"RTN","MPIFQ0",144,0)
 .. S MPIFMDT=$$HL7TFM^XLFDT($P(MPINTF,"^",2)) I MPIFMDT<0 S MPIFMDT=""
"RTN","MPIFQ0",145,0)
 .. S TFSTRG=TFIEN_"^"_$G(MPIFMDT)_"^"_$P(MPINTF,"^",3)
"RTN","MPIFQ0",146,0)
 .. D FILE^VAFCTFU(DFN,TFSTRG,1)
"RTN","MPIFQ0",147,0)
 Q
"RTN","MPIFQ0",148,0)
GETDATA(DIC,DA,MPIFAR,DR,EI) ;
"RTN","MPIFQ0",149,0)
 ;This function returns the values stored in the fields via FM call DIQ1
"RTN","MPIFQ0",150,0)
 ;DIC=file reference, DA=IEN in file, ARRAY=array for the values to be stored in, DR=fields requested, EI=external/internal values
"RTN","MPIFQ0",151,0)
 N DIQ S DIQ=MPIFAR
"RTN","MPIFQ0",152,0)
 I $G(EI)]"" S DIQ(0)=EI
"RTN","MPIFQ0",153,0)
 D EN^DIQ1
"RTN","MPIFQ0",154,0)
 Q
"RTN","MPIFQ0",155,0)
LOOP2 ;
"RTN","MPIFQ0",156,0)
 N MPIDONE,MPII,MPIJ
"RTN","MPIFQ0",157,0)
 S MPII=0,MPIDONE=0
"RTN","MPIFQ0",158,0)
 F  S MPIQUIT=$O(MPIDC(MPIQUIT)) Q:'MPIQUIT  D  Q:MPIDONE
"RTN","MPIFQ0",159,0)
 . I MPIDC(MPIQUIT)="" S MPIDONE=1 Q
"RTN","MPIFQ0",160,0)
 . S MPII=MPII+1,MPINODE(MPII)=$G(MPIDC(MPIQUIT)) Q
"RTN","MPIFQ0",161,0)
 Q
"RTN","MPIFQ0",162,0)
MSH ;
"RTN","MPIFQ0",163,0)
 S MPIREP=$E(HL("ECH"),2),MPICOMP=$E(HL("ECH"),1)
"RTN","MPIFQ0",164,0)
 Q
"RTN","MPIFQ0",165,0)
MSA ;
"RTN","MPIFQ0",166,0)
 Q
"RTN","MPIFQ0",167,0)
RDF ;
"RTN","MPIFQ0",168,0)
 Q
"RTN","MPIFQ0",169,0)
QAK ;**43 added check for potential matches
"RTN","MPIFQ0",170,0)
 K MPIPOT S MPIPOT=0
"RTN","MPIFQ0",171,0)
 I MSG(1)["POTENTIAL MATCHES" S MPIPOT=1
"RTN","MPIFQ0",172,0)
 Q
"RTN","MPIFQ0",173,0)
RDT ;
"RTN","MPIFQ0",174,0)
 N NAME,ICN,BIRTHDAY,CMOR,IEN,SEG,HEREICN,STRING,LASTNAME,FRSTNAME,MIDDLE,SUFF,SEX
"RTN","MPIFQ0",175,0)
 S STRING="",INDEX=$G(INDEX)+1
"RTN","MPIFQ0",176,0)
 D RDT^MPIFSA3(.INDEX,.HL,.MSG)
"RTN","MPIFQ0",177,0)
 S SEG=^TMP("MPIFVQQ",$J,INDEX,"DATA")
"RTN","MPIFQ0",178,0)
 S FRSTNAME=$P(SEG,"^",7),LASTNAME=$P(SEG,"^",2),MIDDLE=$P(SEG,"^",10),SUFF=$P(SEG,"^",15)
"RTN","MPIFQ0",179,0)
 S SSN=$P(SEG,"^",3),NAME=LASTNAME_","_FRSTNAME
"RTN","MPIFQ0",180,0)
 I MIDDLE'="" S NAME=NAME_" "_MIDDLE
"RTN","MPIFQ0",181,0)
 I SUFF'="" S NAME=NAME_" "_SUFF
"RTN","MPIFQ0",182,0)
 S SEX=$P(SEG,"^",11)
"RTN","MPIFQ0",183,0)
 S ICN=$P(SEG,"^",6)
"RTN","MPIFQ0",184,0)
 S BIRTHDAY=$P(SEG,"^",4)
"RTN","MPIFQ0",185,0)
 S CMOR=$P(SEG,"^",5),IEN=$$IEN^XUAF4(CMOR)
"RTN","MPIFQ0",186,0)
 I IEN'="" S CMOR=$P($$NS^XUAF4(IEN),"^") ;**54 fix when CMOR not passed
"RTN","MPIFQ0",187,0)
 S HEREICN=$$HEREICN^MPIFQ3($P(ICN,"V",1))
"RTN","MPIFQ0",188,0)
 I HEREICN S STRING=$$SETSTR^VALM1("*",STRING,1,1),^TMP("MPIFVQQ",$J,INDEX,"INDICATOR")="*"_"^"_HEREICN
"RTN","MPIFQ0",189,0)
 S STRING=$$SETSTR^VALM1(INDEX,STRING,2,4),STRING=$$SETSTR^VALM1($E(NAME,1,23),STRING,6,23)
"RTN","MPIFQ0",190,0)
 S STRING=$$SETSTR^VALM1(SSN,STRING,30,9),STRING=$$SETSTR^VALM1(BIRTHDAY,STRING,41,10)
"RTN","MPIFQ0",191,0)
 S STRING=$$SETSTR^VALM1(CMOR,STRING,54,20)
"RTN","MPIFQ0",192,0)
 S ^TMP("MPIFVQQ",$J,INDEX,0)=STRING,^TMP("MPIFVQQ",$J,"IDX",INDEX,INDEX)=""
"RTN","MPIFQ0",193,0)
 Q
"RTN","MPIFQ0",194,0)
 Q
"RTN","MPIFXMLS")
0^4^B42583885
"RTN","MPIFXMLS",1,0)
MPIFXMLS ;OAK/ELZ - MPIF HEALTHEVET XML BUILDING - SEARCH ID (PATIENT) ;19 APR 2012
"RTN","MPIFXMLS",2,0)
 ;;1.0;MASTER PATIENT INDEX VISTA;**56**;30 Apr 99;Build 2
"RTN","MPIFXMLS",3,0)
 ;
"RTN","MPIFXMLS",4,0)
PATIENT(RETURN,MPIID) ; - look up and return PV data from fully qualified id
"RTN","MPIFXMLS",5,0)
 ;  such as 1000323423^PI^500^USVHA
"RTN","MPIFXMLS",6,0)
 ;
"RTN","MPIFXMLS",7,0)
 ; RETURN is in MPI array format if not found RETURN=-1
"RTN","MPIFXMLS",8,0)
 ;
"RTN","MPIFXMLS",9,0)
 ; $$HL7TFM^XLFDT - #10103
"RTN","MPIFXMLS",10,0)
 ;
"RTN","MPIFXMLS",11,0)
 N MPIXML,MPIXMLR,MPID
"RTN","MPIFXMLS",12,0)
 S RETURN=1
"RTN","MPIFXMLS",13,0)
 S MPIXML=$$XMLS(MPIID)
"RTN","MPIFXMLS",14,0)
 D POST^MPIFHWSC(MPIXML,.MPIXMLR)
"RTN","MPIFXMLS",15,0)
 D PARSE(.RETURN,.MPIXMLR)
"RTN","MPIFXMLS",16,0)
 ;
"RTN","MPIFXMLS",17,0)
 ; must have name, dob and ssn
"RTN","MPIFXMLS",18,0)
 I '$L($G(RETURN("Surname","NAME")))!('$L($G(RETURN("DOB"))))!('$L($G(RETURN("SSN")))) K RETURN S RETURN=-1 Q
"RTN","MPIFXMLS",19,0)
 ;
"RTN","MPIFXMLS",20,0)
 ; convert dob to fm format
"RTN","MPIFXMLS",21,0)
 S RETURN("DOB")=$$HL7TFM^XLFDT($G(RETURN("DOB")))
"RTN","MPIFXMLS",22,0)
 ;
"RTN","MPIFXMLS",23,0)
 Q
"RTN","MPIFXMLS",24,0)
 ;
"RTN","MPIFXMLS",25,0)
CARDPV(RETURN,MPICARD,EDIPI) ; - look up PV data from a VIC card number
"RTN","MPIFXMLS",26,0)
 ;  pass in the VIC card number or EDIPI in MPICARD,
"RTN","MPIFXMLS",27,0)
 ;       EDIPI if set to 1 to indicate EDIPI lookup
"RTN","MPIFXMLS",28,0)
 ;  this will return the array:
"RTN","MPIFXMLS",29,0)
 ;          RETURN(.01)= patient name
"RTN","MPIFXMLS",30,0)
 ;          RETURN(.02)= patient sex
"RTN","MPIFXMLS",31,0)
 ;          RETURN(.03)= patient dob
"RTN","MPIFXMLS",32,0)
 ;          RETURN(.09)= patient ssn
"RTN","MPIFXMLS",33,0)
 ;          RETURN(.092)= patient place of birth (city)
"RTN","MPIFXMLS",34,0)
 ;          RETURN(.093)= patient place of birth (state)
"RTN","MPIFXMLS",35,0)
 ;          RETURN(.2403)= mother's maiden name
"RTN","MPIFXMLS",36,0)
 ;          RETURN(991.01)= patient icn
"RTN","MPIFXMLS",37,0)
 ;          RETURN(991.02)= patient icn checksum
"RTN","MPIFXMLS",38,0)
 ;  or if not found RETURN=-1
"RTN","MPIFXMLS",39,0)
 ;
"RTN","MPIFXMLS",40,0)
 N MPIXML,MPIDATA,MPIXMLR
"RTN","MPIFXMLS",41,0)
 S MPICARD=MPICARD_$S(EDIPI:"^NI^200DOD^USDOD",1:"^PI^742V1^USVHA")
"RTN","MPIFXMLS",42,0)
 D PATIENT(.MPIDATA,MPICARD)
"RTN","MPIFXMLS",43,0)
 S RETURN=MPIDATA I RETURN=-1 Q
"RTN","MPIFXMLS",44,0)
 D DPTLK(.RETURN,.MPIDATA)
"RTN","MPIFXMLS",45,0)
 Q
"RTN","MPIFXMLS",46,0)
 ;
"RTN","MPIFXMLS",47,0)
DPTLK(RETURN,MPIDATA) ; - sets up return data for DPTLK needs
"RTN","MPIFXMLS",48,0)
 N MPISTATE
"RTN","MPIFXMLS",49,0)
 S MPISTATE=$G(MPIDATA("POBState"))
"RTN","MPIFXMLS",50,0)
 S:$L(MPISTATE) MPISTATE=$O(^DIC(5,"C",MPISTATE,0))
"RTN","MPIFXMLS",51,0)
 ;
"RTN","MPIFXMLS",52,0)
 S RETURN(.01)=$G(MPIDATA("Surname","NAME"))_","_$G(MPIDATA("FirstName","NAME"))
"RTN","MPIFXMLS",53,0)
 S RETURN(.02)=$G(MPIDATA("Gender"))
"RTN","MPIFXMLS",54,0)
 S RETURN(.03)=$G(MPIDATA("DOB"))
"RTN","MPIFXMLS",55,0)
 S RETURN(.09)=$G(MPIDATA("SSN"))
"RTN","MPIFXMLS",56,0)
 S RETURN(.092)=$G(MPIDATA("POBCity"))
"RTN","MPIFXMLS",57,0)
 ; setting up state to auto stuff (additional slash) with internal value
"RTN","MPIFXMLS",58,0)
 S RETURN(.093)=$S(MPISTATE:"/"_MPISTATE,1:"")
"RTN","MPIFXMLS",59,0)
 S RETURN(.2403)=$G(MPIDATA("Surname","MMN"))
"RTN","MPIFXMLS",60,0)
 S RETURN(991.01)=$P($G(MPIDATA("MPIID")),"V")
"RTN","MPIFXMLS",61,0)
 S RETURN(991.02)=$P($P($G(MPIDATA("MPIID")),"^"),"V",2)
"RTN","MPIFXMLS",62,0)
 ;
"RTN","MPIFXMLS",63,0)
 Q
"RTN","MPIFXMLS",64,0)
 ;
"RTN","MPIFXMLS",65,0)
XMLS(MPIID) ; setup xml to search
"RTN","MPIFXMLS",66,0)
 ; MPIID =fully qualified ID to search for a patient delaminated with "^"
"RTN","MPIFXMLS",67,0)
 ;    Returns XML for the search
"RTN","MPIFXMLS",68,0)
 ;
"RTN","MPIFXMLS",69,0)
 ; $$SITE^VASITE - #10112
"RTN","MPIFXMLS",70,0)
 ; $$PARAM^HLCS2 - #3552 (need)
"RTN","MPIFXMLS",71,0)
 ;
"RTN","MPIFXMLS",72,0)
 N MPIXML,MPISITE,MPIPCODE
"RTN","MPIFXMLS",73,0)
 S MPISITE=$P($$SITE^VASITE,"^",3)
"RTN","MPIFXMLS",74,0)
 S MPIPCODE=$P($$PARAM^HLCS2,"^",3)
"RTN","MPIFXMLS",75,0)
 S MPIXML="<PRPA_IN201305UV02 xmlns=""urn:hl7-org:v3"" "
"RTN","MPIFXMLS",76,0)
 S MPIXML=MPIXML_"xmlns:ps=""http://www.domain.ext"" "
"RTN","MPIFXMLS",77,0)
 S MPIXML=MPIXML_"xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"
"RTN","MPIFXMLS",78,0)
 S MPIXML=MPIXML_""" xsi:schemaLocation=""urn:hl7-org:v3 ../../schema/"
"RTN","MPIFXMLS",79,0)
 S MPIXML=MPIXML_"HL7V3/NE2008/multicacheschemas/PRPA_IN201305UV02.xsd"
"RTN","MPIFXMLS",80,0)
 S MPIXML=MPIXML_""" ITSVersion=""XML_1.0"">"
"RTN","MPIFXMLS",81,0)
 S MPIXML=MPIXML_"<id root=""1.2.840.114350.1.13.0.1.7.1.1"" "
"RTN","MPIFXMLS",82,0)
 S MPIXML=MPIXML_"extension=""MCID-"_$J_"""/>"
"RTN","MPIFXMLS",83,0)
 S MPIXML=MPIXML_"<creationTime value="""_$$FMTHL7^XLFDT($$NOW^XLFDT)_"""/>"
"RTN","MPIFXMLS",84,0)
 S MPIXML=MPIXML_"<interactionId root=""2.16.840.1.113883.1.6"" "
"RTN","MPIFXMLS",85,0)
 S MPIXML=MPIXML_"extension=""PRPA_IN201305UV02""/>"
"RTN","MPIFXMLS",86,0)
 S MPIXML=MPIXML_"<processingCode code="""_MPIPCODE_"""/>"
"RTN","MPIFXMLS",87,0)
 S MPIXML=MPIXML_"<processingModeCode code=""T""/>"
"RTN","MPIFXMLS",88,0)
 S MPIXML=MPIXML_"<acceptAckCode code=""AL""/>"
"RTN","MPIFXMLS",89,0)
 S MPIXML=MPIXML_"<receiver typeCode=""RCV"">"
"RTN","MPIFXMLS",90,0)
 S MPIXML=MPIXML_"<device classCode=""DEV"" "
"RTN","MPIFXMLS",91,0)
 S MPIXML=MPIXML_"determinerCode=""INSTANCE"">"
"RTN","MPIFXMLS",92,0)
 S MPIXML=MPIXML_"<id root=""2.16.840.1.113883.4.349""/>"
"RTN","MPIFXMLS",93,0)
 S MPIXML=MPIXML_"<telecom value=""http://servicelocation/PDQuery""/>"
"RTN","MPIFXMLS",94,0)
 S MPIXML=MPIXML_"</device></receiver><sender typeCode=""SND"">"
"RTN","MPIFXMLS",95,0)
 S MPIXML=MPIXML_"<device classCode=""DEV"" determinerCode=""INSTANCE"">"
"RTN","MPIFXMLS",96,0)
 S MPIXML=MPIXML_"<id extension="""_MPISITE_""""
"RTN","MPIFXMLS",97,0)
 S MPIXML=MPIXML_" root=""2.16.840.1.113883.4.349""/>"
"RTN","MPIFXMLS",98,0)
 S MPIXML=MPIXML_"</device></sender><controlActProcess "
"RTN","MPIFXMLS",99,0)
 S MPIXML=MPIXML_"classCode=""CACT"" moodCode=""EVN"">"
"RTN","MPIFXMLS",100,0)
 S MPIXML=MPIXML_"<code code=""PRPA_TE201305UV02"" "
"RTN","MPIFXMLS",101,0)
 S MPIXML=MPIXML_"codeSystem=""2.16.840.1.113883.1.6""/>"
"RTN","MPIFXMLS",102,0)
 S MPIXML=MPIXML_"<queryByParameter><queryId extension="""_$J_""""
"RTN","MPIFXMLS",103,0)
 S MPIXML=MPIXML_" root=""1.2.840.114350.1.13.28.1.18.5.999""/>"
"RTN","MPIFXMLS",104,0)
 S MPIXML=MPIXML_"<statusCode code=""new""/>"
"RTN","MPIFXMLS",105,0)
 S MPIXML=MPIXML_"<initialQuantity value=""1""/>"
"RTN","MPIFXMLS",106,0)
 S MPIXML=MPIXML_"<parameterList><id extension="""_MPIID
"RTN","MPIFXMLS",107,0)
 S MPIXML=MPIXML_""" root=""2.16.840.1.113883.4.349""/></parameterList>"
"RTN","MPIFXMLS",108,0)
 S MPIXML=MPIXML_"</queryByParameter></controlActProcess>"
"RTN","MPIFXMLS",109,0)
 S MPIXML=MPIXML_"</PRPA_IN201305UV02>"
"RTN","MPIFXMLS",110,0)
 Q MPIXML
"RTN","MPIFXMLS",111,0)
 ;
"RTN","MPIFXMLS",112,0)
PARSE(MPIDATA,MPIXML) ; - parse the data
"RTN","MPIFXMLS",113,0)
 ;
"RTN","MPIFXMLS",114,0)
 ; EN^MXMLPRSE - #4149
"RTN","MPIFXMLS",115,0)
 ;
"RTN","MPIFXMLS",116,0)
 K ^TMP($J,"MPIFXMLS")
"RTN","MPIFXMLS",117,0)
 N MPICB,MPIUSE,MPIVAR,MPIALIAS
"RTN","MPIFXMLS",118,0)
 S MPIALIAS=0
"RTN","MPIFXMLS",119,0)
 S MPICB("STARTELEMENT")="SE^MPIFXMLS"
"RTN","MPIFXMLS",120,0)
 S MPICB("CHARACTERS")="VALUE^MPIFXMLS"
"RTN","MPIFXMLS",121,0)
 S ^TMP($J,"MPIFXMLS",1)=MPIXML
"RTN","MPIFXMLS",122,0)
 D EN^MXMLPRSE($NA(^TMP($J,"MPIFXMLS")),.MPICB)
"RTN","MPIFXMLS",123,0)
 K ^TMP($J,"MPIFXMLS")
"RTN","MPIFXMLS",124,0)
 Q
"RTN","MPIFXMLS",125,0)
 ;
"RTN","MPIFXMLS",126,0)
SE(MPIN,MPIA) ; - used for the parser to call back with STARTELEMENT
"RTN","MPIFXMLS",127,0)
 ;
"RTN","MPIFXMLS",128,0)
 ; just to protect the process
"RTN","MPIFXMLS",129,0)
 S MPIN=$G(MPIN)
"RTN","MPIFXMLS",130,0)
 S MPIA("extension")=$G(MPIA("extension"))
"RTN","MPIFXMLS",131,0)
 S MPIA("code")=$G(MPIA("code"))
"RTN","MPIFXMLS",132,0)
 ;
"RTN","MPIFXMLS",133,0)
 ; now look for the data I need
"RTN","MPIFXMLS",134,0)
 I MPIN="id",$E(MPIA("extension"),1,4)="MCID" Q
"RTN","MPIFXMLS",135,0)
 I MPIN="id",MPIA("extension")?3N.NA Q
"RTN","MPIFXMLS",136,0)
 I MPIN="id",MPIA("extension")="" Q
"RTN","MPIFXMLS",137,0)
 I MPIN="statusCode",'$D(MPIDATA("SSNStatus")) D  Q
"RTN","MPIFXMLS",138,0)
 . S MPIDATA("SSNStatus")=$G(MPIA("code"))
"RTN","MPIFXMLS",139,0)
 I MPIN="id",MPIA("extension")["NI^200M^USVHA^P" D  Q
"RTN","MPIFXMLS",140,0)
 . S MPIDATA("MPIID")=MPIA("extension")
"RTN","MPIFXMLS",141,0)
 I MPIN="id",MPIA("extension")["^SS" D  Q
"RTN","MPIFXMLS",142,0)
 . S MPIDATA("SSN")=$P(MPIA("extension"),"^")
"RTN","MPIFXMLS",143,0)
 I MPIN="name" D  Q
"RTN","MPIFXMLS",144,0)
 . S MPIUSE=$G(MPIA("use"),0)
"RTN","MPIFXMLS",145,0)
 . S MPIUSE=$S(MPIUSE="L":"NAME",MPIUSE="C":"MMN",MPIUSE="P":"ALIAS",1:MPIUSE)
"RTN","MPIFXMLS",146,0)
 . S MPIVAR="MPIDATA(""FirstName"","""_MPIUSE_""")"
"RTN","MPIFXMLS",147,0)
 . ; P = alias name, need additional subscript
"RTN","MPIFXMLS",148,0)
 . I MPIUSE="ALIAS" D
"RTN","MPIFXMLS",149,0)
 .. S MPIALIAS=MPIALIAS+1
"RTN","MPIFXMLS",150,0)
 .. S MPIVAR="MPIDATA(""FirstName"","""_MPIUSE_","_MPIALIAS_""")"
"RTN","MPIFXMLS",151,0)
 . S @MPIVAR=""
"RTN","MPIFXMLS",152,0)
 I MPIN="family" D  Q
"RTN","MPIFXMLS",153,0)
 . S MPIVAR="MPIDATA(""Surname"","""_$G(MPIUSE,0)_$S($G(MPIUSE)="ALIAS":","_MPIALIAS,1:"")_""")"
"RTN","MPIFXMLS",154,0)
 . S @MPIVAR=""
"RTN","MPIFXMLS",155,0)
 I MPIN="administrativeGenderCode" S MPIDATA("Gender")=MPIA("code") Q
"RTN","MPIFXMLS",156,0)
 I MPIN="birthTime" S MPIDATA("DOB")=$G(MPIA("value")) Q
"RTN","MPIFXMLS",157,0)
 I MPIN="city" S MPIVAR="MPIDATA(""POBCity"")",@MPIVAR="" Q
"RTN","MPIFXMLS",158,0)
 I MPIN="state" S MPIVAR="MPIDATA(""POBState"")",@MPIVAR="" Q
"RTN","MPIFXMLS",159,0)
 I MPIN="country" S MPIVAR="MPIDATA(""POBCountry"")",@MPIVAR="" Q
"RTN","MPIFXMLS",160,0)
 I MPIN="multipleBirthInd" S MPIDATA("MBI")=MPIA("value") Q
"RTN","MPIFXMLS",161,0)
 Q
"RTN","MPIFXMLS",162,0)
 ;
"RTN","MPIFXMLS",163,0)
VALUE(MPIT) ; - used by the parser to call back with CHARACTERS
"RTN","MPIFXMLS",164,0)
 S:$D(MPIVAR) @MPIVAR=@MPIVAR_$S($L(@MPIVAR):" ",1:"")_MPIT
"RTN","MPIFXMLS",165,0)
 Q
"VER")
8.0^22.0
**END**
**END**
