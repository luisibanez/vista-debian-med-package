Released IB*2*476 SEQ #444
Extracted from mail message
**KIDS**:IB*2.0*476^

**INSTALL NAME**
IB*2.0*476
"BLD",9141,0)
IB*2.0*476^INTEGRATED BILLING^0^3120712^y
"BLD",9141,4,0)
^9.64PA^355.93^1
"BLD",9141,4,355.93,0)
355.93
"BLD",9141,4,355.93,222)
y^y^f^^^^n^^n
"BLD",9141,4,355.93,223)

"BLD",9141,4,355.93,224)

"BLD",9141,4,"B",355.93,355.93)

"BLD",9141,6.3)
2
"BLD",9141,"ABPKG")
n
"BLD",9141,"KRN",0)
^9.67PA^779.2^20
"BLD",9141,"KRN",.4,0)
.4
"BLD",9141,"KRN",.401,0)
.401
"BLD",9141,"KRN",.401,"NM",0)
^9.68A^1^1
"BLD",9141,"KRN",.401,"NM",1,0)
IB PROVIDERS FROM FB    FILE #355.93^355.93^0
"BLD",9141,"KRN",.401,"NM","B","IB PROVIDERS FROM FB    FILE #355.93",1)

"BLD",9141,"KRN",.402,0)
.402
"BLD",9141,"KRN",.403,0)
.403
"BLD",9141,"KRN",.5,0)
.5
"BLD",9141,"KRN",.84,0)
.84
"BLD",9141,"KRN",3.6,0)
3.6
"BLD",9141,"KRN",3.8,0)
3.8
"BLD",9141,"KRN",9.2,0)
9.2
"BLD",9141,"KRN",9.8,0)
9.8
"BLD",9141,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",9141,"KRN",9.8,"NM",1,0)
IBCEP8^^0^B129710257
"BLD",9141,"KRN",9.8,"NM",2,0)
IBCEP8B^^0^B20063767
"BLD",9141,"KRN",9.8,"NM",3,0)
IBCEP8C^^0^B149217224
"BLD",9141,"KRN",9.8,"NM",4,0)
IBCEP8C1^^0^B49680718
"BLD",9141,"KRN",9.8,"NM",5,0)
IBCEP81^^0^B65647537
"BLD",9141,"KRN",9.8,"NM","B","IBCEP8",1)

"BLD",9141,"KRN",9.8,"NM","B","IBCEP81",5)

"BLD",9141,"KRN",9.8,"NM","B","IBCEP8B",2)

"BLD",9141,"KRN",9.8,"NM","B","IBCEP8C",3)

"BLD",9141,"KRN",9.8,"NM","B","IBCEP8C1",4)

"BLD",9141,"KRN",19,0)
19
"BLD",9141,"KRN",19,"NM",0)
^9.68A^3^3
"BLD",9141,"KRN",19,"NM",1,0)
IB PROVIDER FROM FB SUMMARY^^0
"BLD",9141,"KRN",19,"NM",2,0)
IB PROVIDER FROM FB RPTS MENU^^0
"BLD",9141,"KRN",19,"NM",3,0)
IB PROVIDER FROM FB DETAIL^^0
"BLD",9141,"KRN",19,"NM","B","IB PROVIDER FROM FB DETAIL",3)

"BLD",9141,"KRN",19,"NM","B","IB PROVIDER FROM FB RPTS MENU",2)

"BLD",9141,"KRN",19,"NM","B","IB PROVIDER FROM FB SUMMARY",1)

"BLD",9141,"KRN",19.1,0)
19.1
"BLD",9141,"KRN",101,0)
101
"BLD",9141,"KRN",409.61,0)
409.61
"BLD",9141,"KRN",771,0)
771
"BLD",9141,"KRN",779.2,0)
779.2
"BLD",9141,"KRN",870,0)
870
"BLD",9141,"KRN",8989.51,0)
8989.51
"BLD",9141,"KRN",8989.52,0)
8989.52
"BLD",9141,"KRN",8994,0)
8994
"BLD",9141,"KRN","B",.4,.4)

"BLD",9141,"KRN","B",.401,.401)

"BLD",9141,"KRN","B",.402,.402)

"BLD",9141,"KRN","B",.403,.403)

"BLD",9141,"KRN","B",.5,.5)

"BLD",9141,"KRN","B",.84,.84)

"BLD",9141,"KRN","B",3.6,3.6)

"BLD",9141,"KRN","B",3.8,3.8)

"BLD",9141,"KRN","B",9.2,9.2)

"BLD",9141,"KRN","B",9.8,9.8)

"BLD",9141,"KRN","B",19,19)

"BLD",9141,"KRN","B",19.1,19.1)

"BLD",9141,"KRN","B",101,101)

"BLD",9141,"KRN","B",409.61,409.61)

"BLD",9141,"KRN","B",771,771)

"BLD",9141,"KRN","B",779.2,779.2)

"BLD",9141,"KRN","B",870,870)

"BLD",9141,"KRN","B",8989.51,8989.51)

"BLD",9141,"KRN","B",8989.52,8989.52)

"BLD",9141,"KRN","B",8994,8994)

"BLD",9141,"QDEF")
^^^^^^^^^^YES
"BLD",9141,"QUES",0)
^9.62^^
"BLD",9141,"REQB",0)
^9.611^2^2
"BLD",9141,"REQB",1,0)
IB*2.0*400^2
"BLD",9141,"REQB",2,0)
IB*2.0*432^2
"BLD",9141,"REQB","B","IB*2.0*400",1)

"BLD",9141,"REQB","B","IB*2.0*432",2)

"FIA",355.93)
IB NON/OTHER VA BILLING PROVIDER
"FIA",355.93,0)
^IBA(355.93,
"FIA",355.93,0,0)
355.93I
"FIA",355.93,0,1)
y^y^f^^^^n^^n
"FIA",355.93,0,10)

"FIA",355.93,0,11)

"FIA",355.93,0,"RLRO")

"FIA",355.93,0,"VR")
2.0^IB
"FIA",355.93,355.93)
0
"FIA",355.93,355.9301)
0
"FIA",355.93,355.9342)
0
"FIA",355.93,355.935)
0
"FIA",355.93,355.9351)
0
"IX",355.93,355.93,"NPI42",0)
355.93^NPI42^NPI42 X-REF^R^^F^IR^W^355.9301^^^^^LS
"IX",355.93,355.93,"NPI42",1)
S ^IBA(355.93,"NPI42",$E(X,1,10),DA(1),DA)=""
"IX",355.93,355.93,"NPI42",2)
K ^IBA(355.93,"NPI42",$E(X,1,10),DA(1),DA)
"IX",355.93,355.93,"NPI42",2.5)
K ^IBA(355.93,"NPI42")
"IX",355.93,355.93,"NPI42",11.1,0)
^.114IA^1^1
"IX",355.93,355.93,"NPI42",11.1,1,0)
1^F^355.9301^.03^10^1^F
"IX",355.93,355.93,"NPI42",11.1,1,3)

"KRN",.401,1840,-1)
0^1
"KRN",.401,1840,0)
IB PROVIDERS FROM FB^3120529.136^@^355.93^^@^3120606
"KRN",.401,1840,2,0)
^.4014^3^3
"KRN",.401,1840,2,1,0)
355.935^.01^DATE/TIME LAST FB UPDATE^^;S1^^^^^1
"KRN",.401,1840,2,1,1,0)
^.40141^1^1
"KRN",.401,1840,2,1,1,1,0)
355.93^4
"KRN",.401,1840,2,1,1,"B",355.93,1)

"KRN",.401,1840,2,1,"ASK")
1
"KRN",.401,1840,2,1,"F")
3120510.999999^May 11,2012^May 11,2012
"KRN",.401,1840,2,1,"GET")
S DISX(1)=$P($G(^IBA(355.93,D0,4,D1,0)),U)
"KRN",.401,1840,2,1,"QCON")
I (DISX(1)]]3120510.999999)&(DISX(1)']]3120517.24)
"KRN",.401,1840,2,1,"T")
3120517.24^May 17,2012@2400^May 17,2012@24:00
"KRN",.401,1840,2,1,"TXT")
DATE/TIME LAST FB UPDATE from May 11,2012 to May 17,2012@24:00
"KRN",.401,1840,2,2,0)
355.93^.02^PROVIDER TYPE^^;S1^^^^^3
"KRN",.401,1840,2,2,"ASK")
1
"KRN",.401,1840,2,2,"F")
.999999^1^1 (FACILITY/GROUP)
"KRN",.401,1840,2,2,"GET")
S DISX(2)=$P($G(^IBA(355.93,D0,0)),U,2)
"KRN",.401,1840,2,2,"QCON")
I (DISX(2)]].999999)&(DISX(2)']]2)
"KRN",.401,1840,2,2,"SER")
0.0000^0.0000
"KRN",.401,1840,2,2,"T")
2^2^2 (INDIVIDUAL)
"KRN",.401,1840,2,2,"TXT")
PROVIDER TYPE from 1 (FACILITY/GROUP) to 2 (INDIVIDUAL)
"KRN",.401,1840,2,3,0)
355.935^.03^CREATED BY FB PAID TO IB^^^^^^^3
"KRN",.401,1840,2,3,1,0)
^.40141^1^1
"KRN",.401,1840,2,3,1,1,0)
355.93^4
"KRN",.401,1840,2,3,1,"B",355.93,1)

"KRN",.401,1840,2,3,"ASK")
1
"KRN",.401,1840,2,3,"F")
?z^@
"KRN",.401,1840,2,3,"GET")
S DISX(3)=$P($G(^IBA(355.93,D0,4,D1,0)),U,3)
"KRN",.401,1840,2,3,"QCON")
I 1
"KRN",.401,1840,2,3,"T")
z^
"KRN",.401,1840,2,3,"TXT")
All CREATED BY FB PAID TO IB (includes nulls)
"KRN",.401,1840,2,"B",355.93,2)

"KRN",.401,1840,2,"B",355.935,1)

"KRN",.401,1840,2,"B",355.935,3)

"KRN",.401,1840,"%D",0)
^.4012^1^1^3120529^^^^
"KRN",.401,1840,"%D",1,0)
Displays entries created by the FB PAID TO IB task
"KRN",19,14276,-1)
0^3
"KRN",19,14276,0)
IB PROVIDER FROM FB DETAIL^Non-VA Provider From FB Detail Report^^P^^^^^^^^INTEGRATED BILLING
"KRN",19,14276,1,0)
^19.06^2^2^3120530^^^
"KRN",19,14276,1,1,0)
This option prints all records modified by the FB PAID TO IB background
"KRN",19,14276,1,2,0)
process for a date range.
"KRN",19,14276,10.1)
IB Providers From FB Detail
"KRN",19,14276,60)
IBA(355.93,
"KRN",19,14276,63)
[CAPTION]
"KRN",19,14276,64)
[IB PROVIDERS FROM FB]
"KRN",19,14276,"U")
NON-VA PROVIDER FROM FB DETAIL
"KRN",19,14277,-1)
0^1
"KRN",19,14277,0)
IB PROVIDER FROM FB SUMMARY^Non-VA Provider From FB Summary Report^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,14277,1,0)
^19.06^3^3^3120530^^^
"KRN",19,14277,1,1,0)
This option identifies and reports on entries in the IB NON/OTHER VA
"KRN",19,14277,1,2,0)
BILLING PROVIDER (#355.93) file that were added or changed by the
"KRN",19,14277,1,3,0)
FEE BASIS PAID TO IB interface for a date range.
"KRN",19,14277,10.1)
IB Provider from FB
"KRN",19,14277,25)
EPFBRPT^IBCEP8C1()
"KRN",19,14277,"U")
NON-VA PROVIDER FROM FB SUMMAR
"KRN",19,14278,-1)
0^2
"KRN",19,14278,0)
IB PROVIDER FROM FB RPTS MENU^IB Provider From FB Reports Menu^^M^^^^^^^^INTEGRATED BILLING
"KRN",19,14278,1,0)
^19.06^1^1^3120530^^^
"KRN",19,14278,1,1,0)
This menu option allows users to run reports about records in the IB NON/OTHER BILLING PROVIDER (#355.93) file that have been affected by the FB PAID TO IB background job.
"KRN",19,14278,10,0)
^19.01IP^2^2
"KRN",19,14278,10,1,0)
14277^SUM^5
"KRN",19,14278,10,1,"^")
IB PROVIDER FROM FB SUMMARY
"KRN",19,14278,10,2,0)
14276^DET^10
"KRN",19,14278,10,2,"^")
IB PROVIDER FROM FB DETAIL
"KRN",19,14278,10.1)
IB From FB Reports Menu
"KRN",19,14278,99)
62650,44919
"KRN",19,14278,"U")
IB PROVIDER FROM FB REPORTS ME
"MBREQ")
0
"ORD",6,.401)
.401;6;;;EDEOUT^DIFROMSO(.401,DA,"",XPDA);FPRE^DIFROMSI(.401,"",XPDA);EPRE^DIFROMSI(.401,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.401,DA,"",XPDA);DEL^DIFROMSK(.401,"",%)
"ORD",6,.401,0)
SORT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",192,-1)
1^1
"PKG",192,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",192,20,0)
^9.402P^1^1
"PKG",192,20,1,0)
2^^IBAXDR
"PKG",192,20,1,1)

"PKG",192,20,"B",2,1)

"PKG",192,22,0)
^9.49I^1^1
"PKG",192,22,1,0)
2.0^2940321^2940414
"PKG",192,22,1,"PAH",1,0)
476^3120712^10000000046
"PKG",192,22,1,"PAH",1,1,0)
^^2^2^3120712
"PKG",192,22,1,"PAH",1,1,1,0)
IB*2.0*476 t1 build contains the first iteratin of the IB portion
"PKG",192,22,1,"PAH",1,1,2,0)
of the deliverables for the 5010 VistA Fee Basis phase II project.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","IBCEP8")
0^1^B129710257^B124149510
"RTN","IBCEP8",1,0)
IBCEP8 ;ALB/TMP/OIFO-BP/RBN - Functions for NON-VA PROVIDER ;11-07-00
"RTN","IBCEP8",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,232,288,320,343,374,377,391,400,436,432,476**;21-MAR-94;Build 2
"RTN","IBCEP8",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP8",4,0)
 ;
"RTN","IBCEP8",5,0)
EN ; -- main entry point
"RTN","IBCEP8",6,0)
 N IBNPRV
"RTN","IBCEP8",7,0)
 K IBFASTXT
"RTN","IBCEP8",8,0)
 D FULL^VALM1
"RTN","IBCEP8",9,0)
 D EN^VALM("IBCE PRVNVA MAINT")
"RTN","IBCEP8",10,0)
 Q
"RTN","IBCEP8",11,0)
 ;
"RTN","IBCEP8",12,0)
HDR ; -- header code
"RTN","IBCEP8",13,0)
 K VALMHDR
"RTN","IBCEP8",14,0)
 Q
"RTN","IBCEP8",15,0)
 ;
"RTN","IBCEP8",16,0)
INIT ; Initialization
"RTN","IBCEP8",17,0)
 N DIC,DA,X,Y,DLAYGO,IBIF,DIR,DTOUT,DUOUT
"RTN","IBCEP8",18,0)
 K ^TMP("IBCE_PRVNVA_MAINT",$J)
"RTN","IBCEP8",19,0)
 ;
"RTN","IBCEP8",20,0)
 ; if coming in from main routine ^IBCEP6 this special variable IBNVPMIF is set already
"RTN","IBCEP8",21,0)
 I $G(IBNVPMIF)'="" S IBIF=IBNVPMIF G INIT1
"RTN","IBCEP8",22,0)
 ;
"RTN","IBCEP8",23,0)
 S DIR("A")="(I)NDIVIDUAL OR (F)ACILITY?: ",DIR(0)="SA^I:INDIVIDUAL;F:FACILITY" D ^DIR K DIR
"RTN","IBCEP8",24,0)
 I $D(DUOUT)!$D(DTOUT) S VALMQUIT=1 G INITQ
"RTN","IBCEP8",25,0)
 S IBIF=Y
"RTN","IBCEP8",26,0)
 ;
"RTN","IBCEP8",27,0)
INIT1 ;
"RTN","IBCEP8",28,0)
 ;
"RTN","IBCEP8",29,0)
 ; Begin IB*2.0*436 - RBN
"RTN","IBCEP8",30,0)
 ;
"RTN","IBCEP8",31,0)
 ;I IBIF="F" D
"RTN","IBCEP8",32,0)
 ;. S VALM("TITLE")="Non-VA Lab or Facility Info"
"RTN","IBCEP8",33,0)
 ;. K VALM("PROTOCOL")
"RTN","IBCEP8",34,0)
 ;. S Y=$$FIND1^DIC(101,,,"IBCE PRVNVA NONIND MAINT")
"RTN","IBCEP8",35,0)
 ;. I Y S VALM("PROTOCOL")=+Y_";ORD(101,"
"RTN","IBCEP8",36,0)
 ;
"RTN","IBCEP8",37,0)
 ; End IB*2.0*436 - RBN
"RTN","IBCEP8",38,0)
 ;
"RTN","IBCEP8",39,0)
 S DIC="^IBA(355.93,",DIC("DR")=".02///"_$S(IBIF'="F":2,1:1)
"RTN","IBCEP8",40,0)
 S DIC("S")="I $P(^(0),U,2)="_$S(IBIF'="F":2,1:1)
"RTN","IBCEP8",41,0)
 S DLAYGO=355.93,DIC(0)="AELMQ",DIC("A")="Select a NON"_$S(IBIF="I":"-",1:"/OTHER ")_"VA PROVIDER: "
"RTN","IBCEP8",42,0)
 D ^DIC K DIC,DLAYGO
"RTN","IBCEP8",43,0)
 I Y'>0 S VALMQUIT=1 G INITQ
"RTN","IBCEP8",44,0)
 S IBNPRV=+Y
"RTN","IBCEP8",45,0)
 ;
"RTN","IBCEP8",46,0)
 ; *** Begin IB*2.0*436 - RBN
"RTN","IBCEP8",47,0)
 ;
"RTN","IBCEP8",48,0)
 N NEWENTRY
"RTN","IBCEP8",49,0)
 S IBNPRV=+Y,NEWENTRY=$P($G(Y),U,3),IBFLPFLP=0
"RTN","IBCEP8",50,0)
 I 'NEWENTRY D
"RTN","IBCEP8",51,0)
 . N DA,X,Y,DIE,DR
"RTN","IBCEP8",52,0)
 . ;D EN^DDIOL(" ")
"RTN","IBCEP8",53,0)
 . ;D EN^DDIOL("If you do NOT want to edit the provider name or the provider type,","","!")
"RTN","IBCEP8",54,0)
 . ;D EN^DDIOL("then press return at the following NAME prompt.  Otherwise,")
"RTN","IBCEP8",55,0)
 . ;D EN^DDIOL("retype the name as you want it entered into the system.")
"RTN","IBCEP8",56,0)
 . ;D EN^DDIOL(" ")
"RTN","IBCEP8",57,0)
 . ;S DA=IBNPRV
"RTN","IBCEP8",58,0)
 . ;S DIE="^IBA(355.93,"
"RTN","IBCEP8",59,0)
 . ;S DR=".01"
"RTN","IBCEP8",60,0)
 . ;D ^DIE
"RTN","IBCEP8",61,0)
 . D SCREEN(IBNPRV)
"RTN","IBCEP8",62,0)
 . I $D(Y) S VALMQUIT=1 G INITQ
"RTN","IBCEP8",63,0)
 . I $G(IBFLPFLP) S IBIF=$S(IBIF="F":"I",1:"F")
"RTN","IBCEP8",64,0)
 ;
"RTN","IBCEP8",65,0)
 ; *** End IB*2.0*436 - rbn
"RTN","IBCEP8",66,0)
 ;
"RTN","IBCEP8",67,0)
 I IBIF="F" D
"RTN","IBCEP8",68,0)
 . S VALM("TITLE")="Non-VA Lab or Facility Info"
"RTN","IBCEP8",69,0)
 . K VALM("PROTOCOL")
"RTN","IBCEP8",70,0)
 . S Y=$$FIND1^DIC(101,,,"IBCE PRVNVA NONIND MAINT")
"RTN","IBCEP8",71,0)
 . I Y S VALM("PROTOCOL")=+Y_";ORD(101,"
"RTN","IBCEP8",72,0)
 D BLD^IBCEP8B(IBNPRV)
"RTN","IBCEP8",73,0)
INITQ Q
"RTN","IBCEP8",74,0)
 ;
"RTN","IBCEP8",75,0)
EXPND ;
"RTN","IBCEP8",76,0)
 Q
"RTN","IBCEP8",77,0)
 ;
"RTN","IBCEP8",78,0)
HELP ;
"RTN","IBCEP8",79,0)
 Q
"RTN","IBCEP8",80,0)
 ;
"RTN","IBCEP8",81,0)
EXIT ;
"RTN","IBCEP8",82,0)
 K ^TMP("IBCE_PRVNVA_MAINT",$J)
"RTN","IBCEP8",83,0)
 D CLEAN^VALM10
"RTN","IBCEP8",84,0)
 K IBFASTXT
"RTN","IBCEP8",85,0)
 Q
"RTN","IBCEP8",86,0)
 ;
"RTN","IBCEP8",87,0)
EDIT1(IBNPRV,IBNOLM) ; Edit non-VA provider/facility demographics
"RTN","IBCEP8",88,0)
 ; IBNPRV = ien of entry in file 355.93
"RTN","IBCEP8",89,0)
 ; IBNOLM = 1 if not called from list manager
"RTN","IBCEP8",90,0)
 ;
"RTN","IBCEP8",91,0)
 N DA,X,Y,DIE,DR,IBP
"RTN","IBCEP8",92,0)
 I '$G(IBNOLM) D FULL^VALM1
"RTN","IBCEP8",93,0)
 I IBNPRV D
"RTN","IBCEP8",94,0)
 . I '$G(IBNOLM) D CLEAR^VALM1
"RTN","IBCEP8",95,0)
 . S DIE="^IBA(355.93,",DA=IBNPRV,IBP=($P($G(^IBA(355.93,IBNPRV,0)),U,2)=2)
"RTN","IBCEP8",96,0)
 . ; PRXM/KJH - Added NPI and Taxonomy to the list of fields to be edited. Put a "NO^" around the Taxonomy multiple (#42) since some of the sub-field entries are 'required'.
"RTN","IBCEP8",97,0)
 . ; Begin IB*2.0*436 - RBN
"RTN","IBCEP8",98,0)
 . ;S DR=".01;"_$S(IBP:".03;.04",1:".05;.1;.06;.07;.08;.13///24;W !,""ID Qualifier: 24 - EMPLOYER'S IDENTIFICATION #"";.09Lab or Facility Primary ID;.11;.15")_";D PRENPI^IBCEP81(IBNPRV);D EN^IBCEP82(IBNPRV);S DIE(""NO^"")="""";42;K DIE(""NO^"")"
"RTN","IBCEP8",99,0)
 . ;S DR=$S(IBP:".03;.04",1:".05;.1;.06;.07;.08;.13///24;W !,""ID Qualifier: 24 - EMPLOYER'S IDENTIFICATION #"";.09Lab or Facility Primary ID;.11;.15")_";D PRENPI^IBCEP81(IBNPRV);D EN^IBCEP82(IBNPRV);S DIE(""NO^"")="""";42;K DIE(""NO^"")"
"RTN","IBCEP8",100,0)
 . ; End IB*2.0*436 - RBN
"RTN","IBCEP8",101,0)
 . ;IB*2.0*432  - add contact phone and name
"RTN","IBCEP8",102,0)
 . S DR=$S(IBP:".03;.04",1:".05;.1;.06;.07;.08;1.01;I X="""" S Y=""@2"";1.02R;S Y=""@3"";@2;1.02;@3;1.03;.13///24;W !,""ID Qualifier: 24 - EMPLOYER'S IDENTIFICATION #"";.09Lab or Facility Primary ID;.11;.15")
"RTN","IBCEP8",103,0)
 . ;IB*2.0*476 - Add FEE BASIS allow multiple value
"RTN","IBCEP8",104,0)
 . ;S DR=DR_";D PRENPI^IBCEP81(IBNPRV);D EN^IBCEP82(IBNPRV);S DIE(""NO^"")="""";42;K DIE(""NO^"")"
"RTN","IBCEP8",105,0)
 . S DR=DR_";D PRENPI^IBCEP81(IBNPRV);D EN^IBCEP82(IBNPRV);S DIE(""NO^"")="""";42;K DIE(""NO^"");D FBTGLSET^IBCEP8C1(IBNPRV)"
"RTN","IBCEP8",106,0)
 . D ^DIE
"RTN","IBCEP8",107,0)
 . Q:$G(IBNOLM)
"RTN","IBCEP8",108,0)
 . D BLD^IBCEP8B(IBNPRV)
"RTN","IBCEP8",109,0)
 I '$G(IBNOLM) K VALMBCK S VALMBCK="R"
"RTN","IBCEP8",110,0)
 Q
"RTN","IBCEP8",111,0)
 ;
"RTN","IBCEP8",112,0)
EDITID(IBNPRV,IBSLEV) ; Link from this list template to maintain provider-specific ids
"RTN","IBCEP8",113,0)
 ; This entry point is called by 4 action protocols.
"RTN","IBCEP8",114,0)
 ; IBNPRV = ien of entry in file 355.93 (can be either an individual or a facility) (required)
"RTN","IBCEP8",115,0)
 ; IBSLEV = 1 for facility/provider own ID's
"RTN","IBCEP8",116,0)
 ; IBSLEV = 2 for facility/provider ID's furnished by an insurance company
"RTN","IBCEP8",117,0)
 ;
"RTN","IBCEP8",118,0)
 Q:'$G(IBNPRV)
"RTN","IBCEP8",119,0)
 Q:'$G(IBSLEV)
"RTN","IBCEP8",120,0)
 N IBPRV,IBIF
"RTN","IBCEP8",121,0)
 D FULL^VALM1    ; set full scrolling region
"RTN","IBCEP8",122,0)
 D CLEAR^VALM1   ; clear screen
"RTN","IBCEP8",123,0)
 S IBPRV=IBNPRV
"RTN","IBCEP8",124,0)
 ;
"RTN","IBCEP8",125,0)
 K IBFASTXT
"RTN","IBCEP8",126,0)
 S IBIF=$$GET1^DIQ(355.93,IBPRV,.02,"I")    ; 1=facility/group      2=individual
"RTN","IBCEP8",127,0)
 D EN^VALM("IBCE PRVPRV MAINT")
"RTN","IBCEP8",128,0)
 ;
"RTN","IBCEP8",129,0)
 K VALMQUIT
"RTN","IBCEP8",130,0)
 S VALMBCK=$S($G(IBFASTXT)'="":"Q",1:"R")
"RTN","IBCEP8",131,0)
 Q
"RTN","IBCEP8",132,0)
 ;
"RTN","IBCEP8",133,0)
NVAFAC ; Enter/edit Non-VA facility information
"RTN","IBCEP8",134,0)
 ; This entry point is called by the menu system for option IBCE PRVNVA FAC EDIT
"RTN","IBCEP8",135,0)
 N X,Y,DA,DIC,IBNPRV,DLAYGO
"RTN","IBCEP8",136,0)
 S DIC="^IBA(355.93,",DIC("S")="I $P(^(0),U,2)=1",DIC("DR")=".02///1"
"RTN","IBCEP8",137,0)
 S DLAYGO=355.93,DIC(0)="AELMQ",DIC("A")="Select a NON/Other VA FACILITY: "
"RTN","IBCEP8",138,0)
 D ^DIC K DIC,DLAYGO
"RTN","IBCEP8",139,0)
 I Y'>0 S VALMQUIT=1 G NVAFACQ
"RTN","IBCEP8",140,0)
 S IBNPRV=+Y
"RTN","IBCEP8",141,0)
 D EDIT1(IBNPRV,1)
"RTN","IBCEP8",142,0)
 ;
"RTN","IBCEP8",143,0)
NVAFACQ Q
"RTN","IBCEP8",144,0)
 ;
"RTN","IBCEP8",145,0)
GETFAC(IB,IBFILE,IBELE,CSZLEN) ; Returns facility name, address lines or city-state-zip
"RTN","IBCEP8",146,0)
 ;        IB = ien of entry in file
"RTN","IBCEP8",147,0)
 ;    IBFILE = 0 for retrieval from file 4, 1 for retrieval from file 355.93
"RTN","IBCEP8",148,0)
 ;  If IBELE = 0, returns name
"RTN","IBCEP8",149,0)
 ;           = 1, returns address line 1
"RTN","IBCEP8",150,0)
 ;           = 2, returns address line 2
"RTN","IBCEP8",151,0)
 ;           = 12, returns address lines 1 and 2 together
"RTN","IBCEP8",152,0)
 ;           = 3, returns city, state zip
"RTN","IBCEP8",153,0)
 ;           = "3C", returns city    = "3S", state    = "3Z", zip
"RTN","IBCEP8",154,0)
 ;    CSZLEN = max length allowed for city,st,zip string - Only applies when IBELE=3
"RTN","IBCEP8",155,0)
 ;
"RTN","IBCEP8",156,0)
 N Z,IBX,IC,IS,IZ,DIFF
"RTN","IBCEP8",157,0)
 S IBX=""
"RTN","IBCEP8",158,0)
 ;
"RTN","IBCEP8",159,0)
 S Z=$S('IBFILE:$G(^DIC(4,+IB,1)),1:$G(^IBA(355.93,+IB,0)))
"RTN","IBCEP8",160,0)
 I +IBELE=0 S IBX=$S('IBFILE:$P($G(^DIC(4,+IB,0)),U),1:$P($G(^IBA(355.93,+IB,0)),U))
"RTN","IBCEP8",161,0)
 I IBELE=1!(IBELE=12) S IBX=$S('IBFILE:$P(Z,U),1:$P(Z,U,5))
"RTN","IBCEP8",162,0)
 I IBELE=2!(IBELE=12) S IBX=$S(IBELE=12:IBX_" ",1:"")_$S('IBFILE:$P(Z,U,2),1:$P(Z,U,10))
"RTN","IBCEP8",163,0)
 ;
"RTN","IBCEP8",164,0)
 I +IBELE=3 D
"RTN","IBCEP8",165,0)
 . I 'IBFILE S IC=$P(Z,U,3),IS=$$STATE^IBCEFG1($P($G(^DIC(4,+IB,0)),U,2)),IZ=$P(Z,U,4)
"RTN","IBCEP8",166,0)
 . I IBFILE S IC=$P(Z,U,6),IS=$$STATE^IBCEFG1($P(Z,U,7)),IZ=$P(Z,U,8)
"RTN","IBCEP8",167,0)
 . ;
"RTN","IBCEP8",168,0)
 . I IBELE="3C" S IBX=IC Q
"RTN","IBCEP8",169,0)
 . I IBELE="3S" S IBX=IS Q
"RTN","IBCEP8",170,0)
 . I IBELE="3Z" S IBX=IZ Q
"RTN","IBCEP8",171,0)
 . ;
"RTN","IBCEP8",172,0)
 . S IBX=$$CSZ(IC,IS,IZ,+$G(CSZLEN))    ; build the city, st zip string since IBELE=3 here
"RTN","IBCEP8",173,0)
 . Q
"RTN","IBCEP8",174,0)
 ;
"RTN","IBCEP8",175,0)
GETFACX ;
"RTN","IBCEP8",176,0)
 Q IBX
"RTN","IBCEP8",177,0)
 ;
"RTN","IBCEP8",178,0)
CSZ(IC,IS,IZ,CSZLEN) ; build city, state, zip string
"RTN","IBCEP8",179,0)
 ; IC - city
"RTN","IBCEP8",180,0)
 ; IS - state abbreviation
"RTN","IBCEP8",181,0)
 ; IZ - zip
"RTN","IBCEP8",182,0)
 ; CSZLEN - max length allowed for city, st zip string
"RTN","IBCEP8",183,0)
 ;
"RTN","IBCEP8",184,0)
 NEW IBX,DIFF
"RTN","IBCEP8",185,0)
 ;
"RTN","IBCEP8",186,0)
 ; build the full city, st zip string
"RTN","IBCEP8",187,0)
 S IBX=IC_$S(IC'="":", ",1:"")_IS_" "_IZ
"RTN","IBCEP8",188,0)
 ;
"RTN","IBCEP8",189,0)
 I '$G(CSZLEN) G CSZX          ; no max length to worry about
"RTN","IBCEP8",190,0)
 I $L(IBX)'>CSZLEN G CSZX      ; length is OK so get out
"RTN","IBCEP8",191,0)
 ;
"RTN","IBCEP8",192,0)
 ; string is too long so try to shorten the zip if it has a dash
"RTN","IBCEP8",193,0)
 I IZ["-" S IZ=$P(IZ,"-",1),IBX=IC_$S(IC'="":", ",1:"")_IS_" "_IZ I $L(IBX)'>CSZLEN G CSZX
"RTN","IBCEP8",194,0)
 ;
"RTN","IBCEP8",195,0)
 ; string is still too long so truncate the city name until it fits
"RTN","IBCEP8",196,0)
 S DIFF=$L(IBX)-CSZLEN
"RTN","IBCEP8",197,0)
 S IC=$E(IC,1,$L(IC)-DIFF)
"RTN","IBCEP8",198,0)
 S IBX=IC_$S(IC'="":", ",1:"")_IS_" "_IZ
"RTN","IBCEP8",199,0)
CSZX ;
"RTN","IBCEP8",200,0)
 Q IBX
"RTN","IBCEP8",201,0)
 ;
"RTN","IBCEP8",202,0)
ALLID(IBPRV,IBPTYP,IBZ) ; Returns array IBZ for all ids for provider IBPRV
"RTN","IBCEP8",203,0)
 ; for all provider id types or for id type in IBPTYP
"RTN","IBCEP8",204,0)
 ; IBPRV = vp ien of provider
"RTN","IBCEP8",205,0)
 ; IBPTYP = ien of provider id type to return or "" for all
"RTN","IBCEP8",206,0)
 ; IBZ = array returned with internal data:
"RTN","IBCEP8",207,0)
 ;  IBZ(file 355.9 ien)=ID type^ID#^ins co^form type^bill care type^care un^X12 code for id type
"RTN","IBCEP8",208,0)
 N Z,Z0
"RTN","IBCEP8",209,0)
 K IBZ
"RTN","IBCEP8",210,0)
 G:'$G(IBPRV) ALLIDQ
"RTN","IBCEP8",211,0)
 S IBPTYP=$G(IBPTYP)
"RTN","IBCEP8",212,0)
 S Z=0 F  S Z=$O(^IBA(355.9,"B",IBPRV,Z)) Q:'Z  S Z0=$G(^IBA(355.9,Z,0)) D
"RTN","IBCEP8",213,0)
 . I $S(IBPTYP="":1,1:($P(Z0,U,6)=IBPTYP)) S IBZ(Z)=($P(Z0,U,6)_U_$P(Z0,U,7)_U_$P(Z0,U,2)_U_$P(Z0,U,4)_U_$P(Z0,U,5)_U_$P(Z0,U,3))_U_$P($G(^IBE(355.97,+$P(Z0,U,6),0)),U,3)
"RTN","IBCEP8",214,0)
 ;
"RTN","IBCEP8",215,0)
ALLIDQ Q
"RTN","IBCEP8",216,0)
 ;
"RTN","IBCEP8",217,0)
CLIA() ; Returns ien of CLIA # provider id type
"RTN","IBCEP8",218,0)
 N Z,IBZ
"RTN","IBCEP8",219,0)
 S (IBZ,Z)=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  I $P($G(^(Z,0)),U,3)="X4",$P(^(0),U)["CLIA" S IBZ=Z Q
"RTN","IBCEP8",220,0)
 Q IBZ
"RTN","IBCEP8",221,0)
 ;
"RTN","IBCEP8",222,0)
STLIC() ; Returns ien of STLIC# provider id type
"RTN","IBCEP8",223,0)
 N Z,IBZ
"RTN","IBCEP8",224,0)
 S (IBZ,Z)=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  I $P($G(^(Z,1)),U,3) S IBZ=Z Q
"RTN","IBCEP8",225,0)
 Q IBZ
"RTN","IBCEP8",226,0)
 ;
"RTN","IBCEP8",227,0)
TAXID() ; Returns ien of Fed tax id provider id type
"RTN","IBCEP8",228,0)
 N Z,IBZ
"RTN","IBCEP8",229,0)
 S (IBZ,Z)=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  I $P($G(^(Z,1)),U,4) S IBZ=Z Q
"RTN","IBCEP8",230,0)
 Q IBZ
"RTN","IBCEP8",231,0)
 ;
"RTN","IBCEP8",232,0)
CLIANVA(IBIFN) ; Returns CLIA # for a non-VA facility on bill ien IBIFN
"RTN","IBCEP8",233,0)
 N IBCLIA,IBZ,IBNVA,Z
"RTN","IBCEP8",234,0)
 S IBCLIA="",IBZ=$$CLIA()
"RTN","IBCEP8",235,0)
 I IBZ D
"RTN","IBCEP8",236,0)
 . S IBNVA=$P($G(^DGCR(399,IBIFN,"U2")),U,10) Q:'IBNVA
"RTN","IBCEP8",237,0)
 . S IBCLIA=$$IDFIND^IBCEP2(IBIFN,IBZ,IBNVA_";IBA(355.93,","",1)
"RTN","IBCEP8",238,0)
 Q IBCLIA
"RTN","IBCEP8",239,0)
 ;
"RTN","IBCEP8",240,0)
VALFAC(X) ; Function returns 1 if format is valid for X12 facility name
"RTN","IBCEP8",241,0)
 ; Alpha/numeric/certain punctuation valid.  Must start with an Alpha
"RTN","IBCEP8",242,0)
 N OK,VAL
"RTN","IBCEP8",243,0)
 S OK=1
"RTN","IBCEP8",244,0)
 S VAL("A")="",VAL("N")="",VAL=",.- "
"RTN","IBCEP8",245,0)
 I $E(X)'?1A!'$$VALFMT(X,.VAL) S OK=0
"RTN","IBCEP8",246,0)
 Q OK
"RTN","IBCEP8",247,0)
 ;
"RTN","IBCEP8",248,0)
VALFMT(X,VAL) ; Returns 1 if format of X is valid, 0 if not
"RTN","IBCEP8",249,0)
 ; X = data to be examined
"RTN","IBCEP8",250,0)
 ; VAL = a 'string' of valid characters AND/OR (passed by reference)
"RTN","IBCEP8",251,0)
 ;    if VAL("A") defined ==> Alpha
"RTN","IBCEP8",252,0)
 ;    if VAL("A") defined ==> Numeric valid
"RTN","IBCEP8",253,0)
 ;    if VAL("A") defined ==> Punctuation valid
"RTN","IBCEP8",254,0)
 ;   any other character included in the string is checked individually
"RTN","IBCEP8",255,0)
 N Z
"RTN","IBCEP8",256,0)
 I $D(VAL("A")) D
"RTN","IBCEP8",257,0)
 . N Z0
"RTN","IBCEP8",258,0)
 . F Z=1:1:$L(X) I $E(X,Z)?1A S Z0(Z)=""
"RTN","IBCEP8",259,0)
 . S Z0="" F  S Z0=$O(Z0(Z0),-1) Q:'Z0  S $E(X,Z0)=""
"RTN","IBCEP8",260,0)
 I $D(VAL("N")) D
"RTN","IBCEP8",261,0)
 . N Z0
"RTN","IBCEP8",262,0)
 . F Z=1:1:$L(X) I $E(X,Z)?1N S Z0(Z)=""
"RTN","IBCEP8",263,0)
 . S Z0="" F  S Z0=$O(Z0(Z0),-1) Q:'Z0  S $E(X,Z0)=""
"RTN","IBCEP8",264,0)
 I $D(VAL("P")) D
"RTN","IBCEP8",265,0)
 . N Z0
"RTN","IBCEP8",266,0)
 . F Z=1:1:$L(X) I $E(X,Z)?1P S Z0(Z)=""
"RTN","IBCEP8",267,0)
 . S Z0="" F  S Z0=$O(Z0(Z0),-1) Q:'Z0  S $E(X,Z0)=""
"RTN","IBCEP8",268,0)
 I $G(VAL)'="" S X=$TR(X,VAL,"")
"RTN","IBCEP8",269,0)
 Q (X="")
"RTN","IBCEP8",270,0)
 ;
"RTN","IBCEP8",271,0)
PS(IBXSAVE) ; Returns 1 if IBXSAVE("PSVC") indicates the svc was non-lab
"RTN","IBCEP8",272,0)
 ; 
"RTN","IBCEP8",273,0)
 Q $S($G(IBXSAVE("PSVC"))="":0,1:"13"[IBXSAVE("PSVC"))
"RTN","IBCEP8",274,0)
 ;
"RTN","IBCEP8",275,0)
 ; Pass in the Internal Entry number to File 355.93
"RTN","IBCEP8",276,0)
 ; Return the Primary ID and Qualifier (ID Type) from 355.9
"RTN","IBCEP8",277,0)
PRIMID(IEN35593) ; Return External Primary ID and ID Quailier
"RTN","IBCEP8",278,0)
 N INDXVAL,LIST,MSG,IDCODE
"RTN","IBCEP8",279,0)
 S INDXVAL=IEN35593_";IBA(355.93,"
"RTN","IBCEP8",280,0)
 N SCREEN S SCREEN="I $P(^(0),U,8)"
"RTN","IBCEP8",281,0)
 D FIND^DIC(355.9,,"@;.06EI;.07","Q",INDXVAL,,,SCREEN,,"LIST","MSG")
"RTN","IBCEP8",282,0)
 I '+$G(LIST("DILIST",0)) Q ""   ; No Primary ID
"RTN","IBCEP8",283,0)
 I +$G(LIST("DILIST",0))>1 Q "***ERROR***^***ERROR***"  ; Bad.  More than one. 
"RTN","IBCEP8",284,0)
 ; Found just one
"RTN","IBCEP8",285,0)
 S IDCODE=$$GET1^DIQ(355.97,LIST("DILIST","ID",1,.06,"I"),.03)
"RTN","IBCEP8",286,0)
 Q $G(LIST("DILIST","ID",1,.07))_U_IDCODE_" - "_$G(LIST("DILIST","ID",1,.06,"E"))
"RTN","IBCEP8",287,0)
 ;
"RTN","IBCEP8",288,0)
 ; Begin IB*2.0*436 - RBN
"RTN","IBCEP8",289,0)
 ;
"RTN","IBCEP8",290,0)
PRVFMT ;  called only by the INPUT TRANSFORM of #355.93,.01
"RTN","IBCEP8",291,0)
 ;      no other calls are allowed to this tag
"RTN","IBCEP8",292,0)
 ;
"RTN","IBCEP8",293,0)
 ; DSS/SCR 032812 PATCH 476 : Modified to support FB PAID TO IB background job
"RTN","IBCEP8",294,0)
 ;
"RTN","IBCEP8",295,0)
 ; DESCRIPTION  : Sets the NAME (.01) and the ENTITY TYPE (.02) fields
"RTN","IBCEP8",296,0)
 ;                of file 355.93.  Allows the user to change the ENTITY
"RTN","IBCEP8",297,0)
 ;                TYPE and forces reentry of the provider data so
"RTN","IBCEP8",298,0)
 ;                that it matches the ENTITY TYPE,if changes are being 
"RTN","IBCEP8",299,0)
 ;                made through IB menues.  Also formats the 
"RTN","IBCEP8",300,0)
 ;                NAME to correspond to the ENTITY TYPE. Disallows
"RTN","IBCEP8",301,0)
 ;                changing of the NAME field from ANYWHERE other than
"RTN","IBCEP8",302,0)
 ;                PROVIDER ID MAINTENANCE or IB EDIT BILLING INFO 
"RTN","IBCEP8",303,0)
 ;                (billing screens) or FB AUTO INTERFACE TO IB.  
"RTN","IBCEP8",304,0)
 ;                Adding new entries directly from FileMan is no longer permitted.
"RTN","IBCEP8",305,0)
 ; 
"RTN","IBCEP8",306,0)
 ; INPUTS       : Variables set by user selected option, screen actions
"RTN","IBCEP8",307,0)
 ;                and user input:
"RTN","IBCEP8",308,0)
 ;                X        - Provider name passed in by .01 field input
"RTN","IBCEP8",309,0)
 ;                           transform.
"RTN","IBCEP8",310,0)
 ;                XQY0     - IB option selected by the user OR "FB PAID TO IB"
"RTN","IBCEP8",311,0)
 ;                DA       - IEN of the record selected by the user or provided 
"RTN","IBCEP8",312,0)
 ;                            by the OPTION: FB PAID TO IB
"RTN","IBCEP8",313,0)
 ;                IBNVPMIF - ENTITY TYPE flag passed in from ListManager or provided 
"RTN","IBCEP8",314,0)
 ;                           by the OPTION: FB PAID TO IB
"RTN","IBCEP8",315,0)
 ;                           (F=Facility,I=Individual).
"RTN","IBCEP8",316,0)
 ;                IBSCNN   - IB variable indication of the actions/submenu:
"RTN","IBCEP8",317,0)
 ;                           #3, #4, and #7 found on bill screen #8  OR "" for FB PAID TO IB
"RTN","IBCEP8",318,0)
 ;
"RTN","IBCEP8",319,0)
 ; OUTPUTS      : IBFLPFLP - Indicate that the user is changing the
"RTN","IBCEP8",320,0)
 ;                           ENTITY TYPE (flip flop).  Possible states:
"RTN","IBCEP8",321,0)
 ;
"RTN","IBCEP8",322,0)
 ;                   IBFLPFLP = 0 - The type was not changed.
"RTN","IBCEP8",323,0)
 ;                            = 1 - The type changed to facility type.
"RTN","IBCEP8",324,0)
 ;                            = 2 - The type changed to individual type.
"RTN","IBCEP8",325,0)
 ;
"RTN","IBCEP8",326,0)
 ; 
"RTN","IBCEP8",327,0)
 ; GLOBALS      : ^IBA(355.93  - IB NON/OTHER VA BILLING PROVIDER file
"RTN","IBCEP8",328,0)
 ; 
"RTN","IBCEP8",329,0)
 ; 
"RTN","IBCEP8",330,0)
 ;
"RTN","IBCEP8",331,0)
 N OKRTN,IBNAM,IBCEPDA,IBTYPE
"RTN","IBCEP8",332,0)
 S (IBFLPFLP,OKRTN)=0,IBNAM=X,IBCEPDA=$G(DA)
"RTN","IBCEP8",333,0)
 ;
"RTN","IBCEP8",334,0)
 ; Prevent modification of NAME (#.01) in file #355.93 from anywhere
"RTN","IBCEP8",335,0)
 ; but the PROVIDER ID MAINTENANCE or IB EDIT BILLING INFO screens.
"RTN","IBCEP8",336,0)
 ;
"RTN","IBCEP8",337,0)
 I $P($G(XQY0),U,1)="IB EDIT BILLING INFO" D PRVINIT,PRVMANT S OKRTN=1
"RTN","IBCEP8",338,0)
 I $P($G(XQY0),U,1)="IBCE PROVIDER MAINT" D PRVINIT,PRVMANT S OKRTN=1
"RTN","IBCEP8",339,0)
 ;
"RTN","IBCEP8",340,0)
 I $P($G(XQY0),U,1)="IB AUTO INTERFACE FROM FB" D EPTRANS^IBCEP8C() S OKRTN=1  ;IB*2.0*476
"RTN","IBCEP8",341,0)
 ;
"RTN","IBCEP8",342,0)
 I 'OKRTN K X
"RTN","IBCEP8",343,0)
 Q
"RTN","IBCEP8",344,0)
 ;==========================
"RTN","IBCEP8",345,0)
PRVINIT ; initialization
"RTN","IBCEP8",346,0)
 ;
"RTN","IBCEP8",347,0)
 ; If arriving from the billing screens (IBSCNN is 3 or 4) the
"RTN","IBCEP8",348,0)
 ; variable DA is the ien of the bill (file #399) - need to find the ien
"RTN","IBCEP8",349,0)
 ; of 355.93 of the provider that the user entered/selected
"RTN","IBCEP8",350,0)
 ;
"RTN","IBCEP8",351,0)
 ; *** Begin IB*2.0*436 -RBN ***
"RTN","IBCEP8",352,0)
 ;I $G(IBSCNN)=3!($G(IBSCNN)=4) S IBCEPDA=$O(^IBA(355.93,"B",IBNAM,"")),IBTYPE=$S(IBSCNN=3:2,1:1)
"RTN","IBCEP8",353,0)
 I $G(IBDR20),'$G(IBCEP6FL) S IBCEPDA=$O(^IBA(355.93,"B",IBNAM,"")),IBTYPE=$S(IBDR20=84:1,IBDR20=104:1,1:2)
"RTN","IBCEP8",354,0)
 ; *** End IB*2.0*436 -RBN ***
"RTN","IBCEP8",355,0)
 ;
"RTN","IBCEP8",356,0)
 ; If arriving from the Provider ID Maintenance call (billing screen or
"RTN","IBCEP8",357,0)
 ; direct call to the option) & the user entered a brand new record, the
"RTN","IBCEP8",358,0)
 ; IBNVPMIF variable is set to indicate if the user was entering a
"RTN","IBCEP8",359,0)
 ; Non-VA facility ("F") or a Non-VA Provider (ie. individual) ("I")
"RTN","IBCEP8",360,0)
 I '$G(IBCEPDA)&$D(IBNVPMIF) S IBTYPE=$S(IBNVPMIF="F":1,1:2)
"RTN","IBCEP8",361,0)
 ;
"RTN","IBCEP8",362,0)
 ; If arriving from the Provider ID Maintenance call (billing screen or
"RTN","IBCEP8",363,0)
 ; direct call to the option) & the user selected an existing record
"RTN","IBCEP8",364,0)
 I $G(IBCEPDA) S IBTYPE=$P($G(^IBA(355.93,IBCEPDA,0)),U,2)
"RTN","IBCEP8",365,0)
 Q
"RTN","IBCEP8",366,0)
 ;----------------------------
"RTN","IBCEP8",367,0)
PRVMANT ; is the user flipping the provider type (for existing records only)
"RTN","IBCEP8",368,0)
 N TXT,TXT2,%
"RTN","IBCEP8",369,0)
 ;
"RTN","IBCEP8",370,0)
 ; IBTYPE - based on the current value of provider type (#355.93,.02)
"RTN","IBCEP8",371,0)
 ;          where "1" = Facility/Group  & "2" = Individual
"RTN","IBCEP8",372,0)
 ;
"RTN","IBCEP8",373,0)
 I '$G(IBTYPE) Q    ; one of the calls that triggers this routine needs
"RTN","IBCEP8",374,0)
 ;               ; this check when creating a new record in file #355.93
"RTN","IBCEP8",375,0)
 ;
"RTN","IBCEP8",376,0)
 ; If record is not brand new (IBCEPDA exists) - give the user the
"RTN","IBCEP8",377,0)
 ; opportunity to change the provider type field (#355.93,.02)
"RTN","IBCEP8",378,0)
 I IBTYPE,$G(IBCEPDA) D
"RTN","IBCEP8",379,0)
 . ;
"RTN","IBCEP8",380,0)
 . S %=2  ; Default answer is no
"RTN","IBCEP8",381,0)
 . ;
"RTN","IBCEP8",382,0)
 . I IBTYPE=1 S TXT="Facility",TXT2="Individual/Provider"
"RTN","IBCEP8",383,0)
 . I IBTYPE=2 S TXT="Individual/Provider",TXT2="Facility"
"RTN","IBCEP8",384,0)
 . ;
"RTN","IBCEP8",385,0)
 . D EN^DDIOL("This provider name exists and is a "_TXT_".","","!")
"RTN","IBCEP8",386,0)
 . D EN^DDIOL("Do you want to change this record to be a "_TXT2)
"RTN","IBCEP8",387,0)
 . ;
"RTN","IBCEP8",388,0)
 . D YN^DICN
"RTN","IBCEP8",389,0)
 . ;
"RTN","IBCEP8",390,0)
 . I %=1 D
"RTN","IBCEP8",391,0)
 . . ;
"RTN","IBCEP8",392,0)
 . . S IBTYPE=$S(IBTYPE=1:2,1:1),IBFLPFLP=IBTYPE
"RTN","IBCEP8",393,0)
 ;
"RTN","IBCEP8",394,0)
 I IBTYPE=2 D STDNAME^XLFNAME(.IBNAM,"GP") S X=IBNAM
"RTN","IBCEP8",395,0)
 I IBTYPE=1,('$$VALFAC^IBCEP8(IBNAM)) K X
"RTN","IBCEP8",396,0)
 Q
"RTN","IBCEP8",397,0)
 ;
"RTN","IBCEP8",398,0)
 ; DESCRIPTION: This routine inputs a provider name and formats it appropriately as an 
"RTN","IBCEP8",399,0)
 ;              individual or a facility name.
"RTN","IBCEP8",400,0)
 ; 
"RTN","IBCEP8",401,0)
 ; INPUTS     : name
"RTN","IBCEP8",402,0)
 ; 
"RTN","IBCEP8",403,0)
 ; OUTPUTS    : formatted name and provider type
"RTN","IBCEP8",404,0)
 ; 
"RTN","IBCEP8",405,0)
 ; VARIABLES  :
"RTN","IBCEP8",406,0)
 ; 
"RTN","IBCEP8",407,0)
 ; GLOBALS      : 
"RTN","IBCEP8",408,0)
 ; 
"RTN","IBCEP8",409,0)
 ; FUNCTIONS    : None
"RTN","IBCEP8",410,0)
 ; 
"RTN","IBCEP8",411,0)
 ; SUBROUTINES  : 
"RTN","IBCEP8",412,0)
 ; 
"RTN","IBCEP8",413,0)
 ; HISTORY    : Original version - 21 September 2010
"RTN","IBCEP8",414,0)
 ;
"RTN","IBCEP8",415,0)
SCREEN(IBNPRV) ;
"RTN","IBCEP8",416,0)
 N IBNPRVN,IBNAME,DR,DIR,DA,DIRUT,X,DTOUT,DUOUT
"RTN","IBCEP8",417,0)
 S IBNPRVN=""
"RTN","IBCEP8",418,0)
 D EN^DDIOL(" ")
"RTN","IBCEP8",419,0)
 D EN^DDIOL("If you do NOT want to edit the provider name or the provider type,","","!")
"RTN","IBCEP8",420,0)
 D EN^DDIOL("then press return at the following NAME prompt.  Otherwise,")
"RTN","IBCEP8",421,0)
 D EN^DDIOL("retype the name as you want it entered into the system.")
"RTN","IBCEP8",422,0)
 D EN^DDIOL(" ")
"RTN","IBCEP8",423,0)
 ;
"RTN","IBCEP8",424,0)
 ; Get the current provider name
"RTN","IBCEP8",425,0)
 ;
"RTN","IBCEP8",426,0)
 S IBNAME=$P(^IBA(355.93,IBNPRV,0),U,1)
"RTN","IBCEP8",427,0)
 ;
"RTN","IBCEP8",428,0)
 ; Get the user's input
"RTN","IBCEP8",429,0)
 ;
"RTN","IBCEP8",430,0)
INPUT ;
"RTN","IBCEP8",431,0)
 S DIR(0)="FOUr^3:30"
"RTN","IBCEP8",432,0)
 S DIR("A")="NAME: "_IBNAME_"//"
"RTN","IBCEP8",433,0)
 ;
"RTN","IBCEP8",434,0)
 S DIR("?")=" "
"RTN","IBCEP8",435,0)
 S DIR("?",1)="Press <ENTER> to accept the displayed provider name"
"RTN","IBCEP8",436,0)
 S DIR("?",2)="or enter the name as you would like it displayed."
"RTN","IBCEP8",437,0)
 ;
"RTN","IBCEP8",438,0)
 S DIR("??")="IB PROV ID MAINT^"
"RTN","IBCEP8",439,0)
 ;
"RTN","IBCEP8",440,0)
 D ^DIR
"RTN","IBCEP8",441,0)
 ;
"RTN","IBCEP8",442,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","IBCEP8",443,0)
 I X["?" G INPUT
"RTN","IBCEP8",444,0)
 S:'$D(DIRUT) IBNPRVN=X
"RTN","IBCEP8",445,0)
 ; The user entered something else
"RTN","IBCEP8",446,0)
 ;
"RTN","IBCEP8",447,0)
 S DIE="^IBA(355.93,"
"RTN","IBCEP8",448,0)
 S DA=IBNPRV
"RTN","IBCEP8",449,0)
 S DR=".01///"_IBNPRVN
"RTN","IBCEP8",450,0)
 D ^DIE
"RTN","IBCEP8",451,0)
 Q
"RTN","IBCEP8",452,0)
 ;
"RTN","IBCEP8",453,0)
 ; End IB*2.0*436 - RBN
"RTN","IBCEP8",454,0)
 ;
"RTN","IBCEP81")
0^5^B65647537^B63919738
"RTN","IBCEP81",1,0)
IBCEP81 ;ALB/KJH - NPI and Taxonomy Functions ;19 Apr 2008  5:17 PM
"RTN","IBCEP81",2,0)
 ;;2.0;INTEGRATED BILLING;**343,391,400,476**;21-MAR-94;Build 2
"RTN","IBCEP81",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP81",4,0)
 ;
"RTN","IBCEP81",5,0)
 ; Must call at an entry point  
"RTN","IBCEP81",6,0)
 Q
"RTN","IBCEP81",7,0)
 ;
"RTN","IBCEP81",8,0)
 ; NPIREQ - Extrinsic function that will return a flag indicating
"RTN","IBCEP81",9,0)
 ;          if the NPI 'drop dead date' has passed.
"RTN","IBCEP81",10,0)
 ; Input
"RTN","IBCEP81",11,0)
 ;    IBDT - Date to check (internal Fileman format)
"RTN","IBCEP81",12,0)
 ; Output
"RTN","IBCEP81",13,0)
 ;    1 - On or after the May 23, 2008 drop dead date
"RTN","IBCEP81",14,0)
 ;    0 - Prior to the May 23, 2008 drop dead date 
"RTN","IBCEP81",15,0)
NPIREQ(IBDT) ; Check NPI drop dead date
"RTN","IBCEP81",16,0)
 N IBCHKDT
"RTN","IBCEP81",17,0)
 S IBCHKDT=3080523
"RTN","IBCEP81",18,0)
 Q $S(IBDT<IBCHKDT:0,1:1)
"RTN","IBCEP81",19,0)
 ;
"RTN","IBCEP81",20,0)
 ; TAXREQ - Extrinsic function that will return a flag indicating
"RTN","IBCEP81",21,0)
 ;          if the Taxonomy 'drop dead date' has passed.
"RTN","IBCEP81",22,0)
 ; Input
"RTN","IBCEP81",23,0)
 ;    IBDT - Date to check (internal Fileman format)
"RTN","IBCEP81",24,0)
 ; Output
"RTN","IBCEP81",25,0)
 ;    1 - On or after the May 23, 2008 drop dead date
"RTN","IBCEP81",26,0)
 ;    0 - Prior to the May 23, 2008 drop dead date 
"RTN","IBCEP81",27,0)
TAXREQ(IBDT) ; Check Taxonomy drop dead date
"RTN","IBCEP81",28,0)
 N IBCHKDT
"RTN","IBCEP81",29,0)
 S IBCHKDT=3080523
"RTN","IBCEP81",30,0)
 Q $S(IBDT<IBCHKDT:0,1:1)
"RTN","IBCEP81",31,0)
 ;
"RTN","IBCEP81",32,0)
 ; NPIGET - Extrinsic function to retrieve the NPI of a specified
"RTN","IBCEP81",33,0)
 ;          record from file 355.93.
"RTN","IBCEP81",34,0)
 ; Input
"RTN","IBCEP81",35,0)
 ;    IBIEN - IEN of the record from file 355.93
"RTN","IBCEP81",36,0)
 ; Output
"RTN","IBCEP81",37,0)
 ;    NPI of that record or "" if not yet defined
"RTN","IBCEP81",38,0)
NPIGET(IBIEN) ; Get NPI
"RTN","IBCEP81",39,0)
 I IBIEN="" Q ""
"RTN","IBCEP81",40,0)
 N NPI
"RTN","IBCEP81",41,0)
 S NPI=$$GET1^DIQ(355.93,IBIEN_",",41.01,"I")
"RTN","IBCEP81",42,0)
 Q NPI
"RTN","IBCEP81",43,0)
 ;
"RTN","IBCEP81",44,0)
 ; TAXGET - Extrinsic function to retrieve the Taxonomy of a specified
"RTN","IBCEP81",45,0)
 ;          record from file 355.93. (NOTE: Returns data for the 'active'
"RTN","IBCEP81",46,0)
 ;          primary record from the Taxonomy multiple or the earliest
"RTN","IBCEP81",47,0)
 ;          'active' secondary record if no primary is present.)
"RTN","IBCEP81",48,0)
 ;
"RTN","IBCEP81",49,0)
 ;          The 'optional' array parameter returns all Taxonomies in a
"RTN","IBCEP81",50,0)
 ;          formatted array so they can be displayed.
"RTN","IBCEP81",51,0)
 ; Input
"RTN","IBCEP81",52,0)
 ;    IBIEN - IEN of the record from file 355.93
"RTN","IBCEP81",53,0)
 ; Output
"RTN","IBCEP81",54,0)
 ;    Piece 1 = Taxonomy (X12 value) of that record as defined in file 8932.1
"RTN","IBCEP81",55,0)
 ;    Piece 2 = IEN from file 8932.1
"RTN","IBCEP81",56,0)
 ;
"RTN","IBCEP81",57,0)
 ;    IBARR = IEN of the record from the main output
"RTN","IBCEP81",58,0)
 ;    IBARR(IEN) = 3 pieces for each Taxonomy record
"RTN","IBCEP81",59,0)
 ;    Piece 1 = Taxonomy (X12 value) of that record as defined in file 8932.1
"RTN","IBCEP81",60,0)
 ;    Piece 2 = IEN from file 8932.1
"RTN","IBCEP81",61,0)
 ;    Piece 3 = Primary/Secondary (1/0)
"RTN","IBCEP81",62,0)
 ;    
"RTN","IBCEP81",63,0)
TAXGET(IBIEN,IBARR) ; Get Taxonomy
"RTN","IBCEP81",64,0)
 I IBIEN="" Q U
"RTN","IBCEP81",65,0)
 N TAX,IBPTR,IEN,IENS
"RTN","IBCEP81",66,0)
 S IEN=0,IBPTR=""
"RTN","IBCEP81",67,0)
 F  S IEN=$O(^IBA(355.93,IBIEN,"TAXONOMY",IEN)) Q:'IEN  D
"RTN","IBCEP81",68,0)
 . S IENS=IEN_","_IBIEN_","
"RTN","IBCEP81",69,0)
 . I $$GET1^DIQ(355.9342,IENS,.03,"E")'="ACTIVE" Q
"RTN","IBCEP81",70,0)
 . S IBARR(IEN)=U_$$GET1^DIQ(355.9342,IENS,.01,"I")_U_$$GET1^DIQ(355.9342,IENS,.02,"I")
"RTN","IBCEP81",71,0)
 . S $P(IBARR(IEN),U)=$$GET1^DIQ(8932.1,$P(IBARR(IEN),U,2),"X12 CODE")
"RTN","IBCEP81",72,0)
 . I $$GET1^DIQ(355.9342,IENS,.02,"E")="YES" S IBPTR=$P(IBARR(IEN),U,2),IBARR=IEN Q
"RTN","IBCEP81",73,0)
 . I IBPTR="" S IBPTR=$P(IBARR(IEN),U,2),IBARR=IEN
"RTN","IBCEP81",74,0)
 S TAX=$$GET1^DIQ(8932.1,IBPTR,"X12 CODE")
"RTN","IBCEP81",75,0)
 Q TAX_U_IBPTR
"RTN","IBCEP81",76,0)
 ;
"RTN","IBCEP81",77,0)
 ; TAXDEF - Extrinsic function to retrieve the Taxonomy for the Default
"RTN","IBCEP81",78,0)
 ;          Division from a record in file 399.
"RTN","IBCEP81",79,0)
 ; Input
"RTN","IBCEP81",80,0)
 ;    IBIEN399 - IEN of the record from file 399
"RTN","IBCEP81",81,0)
 ; Output
"RTN","IBCEP81",82,0)
 ;    Piece 1 = Taxonomy (X12 value) of that record as defined in file 8932.1
"RTN","IBCEP81",83,0)
 ;    Piece 2 = IEN from file 8932.1
"RTN","IBCEP81",84,0)
TAXDEF(IBIEN399) ; Get Taxonomy for Default Division
"RTN","IBCEP81",85,0)
 I IBIEN399="" Q U
"RTN","IBCEP81",86,0)
 N IBRETVAL,IBORG,IBEVDT,IBDIV,TAX
"RTN","IBCEP81",87,0)
 S IBDIV=$$GET1^DIQ(399,IBIEN399_",",.22,"I")
"RTN","IBCEP81",88,0)
 S IBEVDT=$$GET1^DIQ(399,IBIEN399_",",.03,"I")
"RTN","IBCEP81",89,0)
 S IBORG=$P($$SITE^VASITE(IBEVDT,IBDIV),U)
"RTN","IBCEP81",90,0)
 Q $$TAXORG^XUSTAX(IBORG)
"RTN","IBCEP81",91,0)
 ;
"RTN","IBCEP81",92,0)
 ; NPIUSED - Extrinsic function to determine whether a given NPI is already being used in files 200, 4, or 355.93.
"RTN","IBCEP81",93,0)
 ;
"RTN","IBCEP81",94,0)
 ; Input
"RTN","IBCEP81",95,0)
 ;    IBNPI - NPI number to check.
"RTN","IBCEP81",96,0)
 ;    IBOLDNPI - NPI that is being replaced or deleted
"RTN","IBCEP81",97,0)
 ;    IBIEN - entry number for file 355.93 of entry being edited
"RTN","IBCEP81",98,0)
 ;    IBCHECK - Is this a new NPI entry or existing
"RTN","IBCEP81",99,0)
 ;    IBKEY - They security key XUSNPIMTL
"RTN","IBCEP81",100,0)
 ; Output
"RTN","IBCEP81",101,0)
 ;    1 = NPI is already being used.
"RTN","IBCEP81",102,0)
 ;    0 = NPI is not currently being used.
"RTN","IBCEP81",103,0)
 ;
"RTN","IBCEP81",104,0)
NPIUSED(IBNPI,IBOLDNPI,IBIEN,IBCHECK,IBKEY) ; Check whether NPI is already used within files 200, 4, or 355.93.
"RTN","IBCEP81",105,0)
 N IBNOTIFY,IBVA200,DUP,DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","IBCEP81",106,0)
 I $G(IBFBFLAG)=1 Q ""  ;IB*2.0*476 Consider updating RULES^IBCEP8C for FB PAID TO IB interface if changes are made
"RTN","IBCEP81",107,0)
 S (IBNOTIFY,IBVA200,DUP)=""
"RTN","IBCEP81",108,0)
 S IBNOTIFY=$S(IBCHECK=2:1,1:$$RULES(IBNPI,IBIEN,IBOLDNPI))
"RTN","IBCEP81",109,0)
 I IBNOTIFY=0!(IBNOTIFY="") Q ""
"RTN","IBCEP81",110,0)
 ;Associating NPI to an entry in NEW PERSON file
"RTN","IBCEP81",111,0)
 ;IBNOTIFY of 14 = Replacing an NPI from NEW PERSON file with an NPI from NEW PERSON file
"RTN","IBCEP81",112,0)
 I IBNOTIFY=1!(IBNOTIFY=14) D:$G(IBOLDNPI)'=$G(IBNPI)  Q $S($G(Y)=1:0,$G(IBCHECK)=2:0,1:1)
"RTN","IBCEP81",113,0)
 . D EN^DDIOL("The NPI of "_IBNPI_" is also associated with the INDIVIDUAL provider","","!!")
"RTN","IBCEP81",114,0)
 . I $G(IBVA200)="" S IBVA200=$$QI^XUSNPI(IBNPI)
"RTN","IBCEP81",115,0)
 . D EN^DDIOL($$GET1^DIQ(200,$P(IBVA200,U,2),.01))
"RTN","IBCEP81",116,0)
 . D EN^DDIOL(" in the NEW PERSON file.  You are trying to associate","","?0")
"RTN","IBCEP81",117,0)
 . D EN^DDIOL("it with "_$S($$GET1^DIQ(355.93,IBIEN,.02,"I")=1:"a FACILITY/GROUP",$$GET1^DIQ(355.93,IBIEN,.02,"I")=2:"an INDIVIDUAL",1:"a")_" provider")
"RTN","IBCEP81",118,0)
 . D EN^DDIOL(" in the IB NON/OTHER VA BILLING PROVIDER file.","","?0"),EN^DDIOL("")
"RTN","IBCEP81",119,0)
 . S DIR(0)="Y",DIR("A")="Do you still want to add this NPI to provider "_$$GET1^DIQ(355.93,IBIEN,.01),DIR("B")="NO"
"RTN","IBCEP81",120,0)
 . S DIR("?")="Answer YES if you wish to associate the NPI from the IB NON/OTHER VA PROVIDER file with the entry in the NEW PERSON file."
"RTN","IBCEP81",121,0)
 . D ^DIR,EN^DDIOL("") Q
"RTN","IBCEP81",122,0)
 ; NPI is now or was in the past in use in File 4
"RTN","IBCEP81",123,0)
 I IBNOTIFY=9 D EN^DDIOL("The NPI of "_IBNPI_" is now, or was in the past, associated with "_$$GET1^DIQ(4,$O(^DIC(4,"ANPI",IBNPI,"")),.01),"","!!"),EN^DDIOL(" in the INSTITUTION file.") Q 1
"RTN","IBCEP81",124,0)
 ; NPI is now or was in the past in use in 355.93
"RTN","IBCEP81",125,0)
 I IBNOTIFY=11 D EN^DDIOL("The NPI of "_IBNPI_" is now, or was in the past, associated with "_$$GET1^DIQ(355.93,$$DUP(IBNPI),.01),"","!!"),EN^DDIOL(" in the IB NON/OTHER VA BILLING PROVIDER file.") Q 1
"RTN","IBCEP81",126,0)
 ;Inactive NPI in 355.93
"RTN","IBCEP81",127,0)
 I IBNOTIFY=12 D EN^DDIOL("The NPI of "_IBNPI_" is already associated with the provider "_$$GET1^DIQ(355.93,$$DUP(IBNPI),.01)_" as","","!!") D  Q 1
"RTN","IBCEP81",128,0)
 . D EN^DDIOL("INACTIVE in the IB NON/OTHER VA BILLING PROVIDER file.")
"RTN","IBCEP81",129,0)
 . D EN^DDIOL("You are updating "_$S($$GET1^DIQ(355.93,IBIEN,.02,"I")=1:"a FACILITY/GROUP",$$GET1^DIQ(355.93,IBIEN,.02,"I")=2:"an INDIVIDUAL",1:""),"","!!")
"RTN","IBCEP81",130,0)
 . D EN^DDIOL("in the IB NON/OTHER VA BILLING PROVIDER file.")
"RTN","IBCEP81",131,0)
 ;Inactive NPI in NEW PERSON file
"RTN","IBCEP81",132,0)
 I IBNOTIFY=13 D  Q 1
"RTN","IBCEP81",133,0)
 .D EN^DDIOL("The NPI of "_IBNPI_" is also associated with the INDIVIDUAL provider","","!!"),EN^DDIOL($$GET1^DIQ(200,$P(IBVA200,U,2),.01)_" in the NEW PERSON file."),EN^DDIOL("The NPI is INACTIVE and may not be used."),EN^DDIOL("")
"RTN","IBCEP81",134,0)
 Q ""
"RTN","IBCEP81",135,0)
 ;
"RTN","IBCEP81",136,0)
 ; DUP - Extrinsic function to determine whether a given NPI is already being used in file# 355.93.
"RTN","IBCEP81",137,0)
 ;
"RTN","IBCEP81",138,0)
 ; Input
"RTN","IBCEP81",139,0)
 ;    IBNPI - NPI number to check.
"RTN","IBCEP81",140,0)
 ; Output
"RTN","IBCEP81",141,0)
 ;    NULL - NPI is not currently being used.
"RTN","IBCEP81",142,0)
 ;    Otherwise, the IEN of the entry in file# 355.93 associated with that NPI.
"RTN","IBCEP81",143,0)
 ;
"RTN","IBCEP81",144,0)
DUP(IBNPI) ; Check whether this is a duplicate NPI within file# 355.93
"RTN","IBCEP81",145,0)
 I IBNPI="" Q ""
"RTN","IBCEP81",146,0)
 Q $O(^IBA(355.93,"NPIHISTORY",IBNPI,""))
"RTN","IBCEP81",147,0)
 ;
"RTN","IBCEP81",148,0)
 ; DISPTAX - Function to display extra Taxonomy info in the input templates in screens 6, 7, and 8 in IB EDIT BILLING INFO
"RTN","IBCEP81",149,0)
 ; 
"RTN","IBCEP81",150,0)
 ; Input
"RTN","IBCEP81",151,0)
 ;    IBIEN - IEN of the entry in file 8932.1 to be displayed
"RTN","IBCEP81",152,0)
 ;    IBTXT - (optional) extra text to be displayed before the entry
"RTN","IBCEP81",153,0)
 ;            (i.e. "Billing Provider" or "Non-VA Facility")
"RTN","IBCEP81",154,0)
 ;
"RTN","IBCEP81",155,0)
DISPTAX(IBIEN,IBTXT) ; Display extra Taxonomy info (when available)
"RTN","IBCEP81",156,0)
 N IBX
"RTN","IBCEP81",157,0)
 I $G(IBIEN)="" Q
"RTN","IBCEP81",158,0)
 S IBX=$$GET1^DIQ(8932.1,IBIEN,1) I IBX]"" W !,"    ",$G(IBTXT)," Classification: ",IBX
"RTN","IBCEP81",159,0)
 S IBX=$$GET1^DIQ(8932.1,IBIEN,2) I IBX]"" W !,"    ",$G(IBTXT)," Area of Specialization: ",IBX
"RTN","IBCEP81",160,0)
 S IBX=$$GET1^DIQ(8932.1,IBIEN,8) I IBX]"" W !,"    ",$G(IBTXT)," Specialty Code: ",IBX
"RTN","IBCEP81",161,0)
 S IBX=$$GET1^DIQ(8932.1,IBIEN,6) W !,"    ",$G(IBTXT)," Taxonomy X12 Code: ",IBX
"RTN","IBCEP81",162,0)
 Q
"RTN","IBCEP81",163,0)
RULES(IBNPI,IBIEN,IBOLDNPI) ;Verify that the NPI meets all rules for usage
"RTN","IBCEP81",164,0)
 N IBIEN1,IBIEN2,DUP
"RTN","IBCEP81",165,0)
 I $G(IBOLDNPI)>0,IBNPI=IBOLDNPI,$D(^VA(200,"ANPI",IBOLDNPI)) Q 1
"RTN","IBCEP81",166,0)
 I IBNPI="" Q ""
"RTN","IBCEP81",167,0)
 S DUP=$$DUP(IBNPI)
"RTN","IBCEP81",168,0)
 ;Duplicate in 355.93
"RTN","IBCEP81",169,0)
 I DUP'="",DUP'=IBIEN Q 11
"RTN","IBCEP81",170,0)
 ;Replacing an NPI that is associated to NEW PERSON file with another NPI that is associated with the NEW PERSON file
"RTN","IBCEP81",171,0)
 I $G(IBOLDNPI)>0,$D(^VA(200,"ANPI",IBOLDNPI)),$D(^VA(200,"ANPI",IBNPI)) Q 14
"RTN","IBCEP81",172,0)
 ;Already an inactive NPI
"RTN","IBCEP81",173,0)
 S IBIEN2=$O(^IBA(355.93,"NPIHISTORY",IBNPI,"")) D:$G(IBIEN2)'=""
"RTN","IBCEP81",174,0)
 . S IBIEN1=$O(^IBA(355.93,IBIEN2,"NPISTATUS","C",IBNPI,""),-1)
"RTN","IBCEP81",175,0)
 I $G(IBIEN1)'="",$D(^IBA(355.93,IBIEN2,"NPISTATUS","NPISTATUS",0,IBIEN1)) Q 12
"RTN","IBCEP81",176,0)
 ;Check for existence in New Person 
"RTN","IBCEP81",177,0)
 ;file (#200) and/or Institution file (#4)
"RTN","IBCEP81",178,0)
 S IBVA200=$$QI^XUSNPI(IBNPI)
"RTN","IBCEP81",179,0)
 I $E($P(IBVA200,U,4),1,8)="Inactive" Q 13
"RTN","IBCEP81",180,0)
 I $P(IBVA200,U)="Individual_ID",$P(IBVA200,U,4)["Active" Q 1
"RTN","IBCEP81",181,0)
 I $P(IBVA200,U)="Organization_ID",$P(IBVA200,U,4)["Active" Q 9
"RTN","IBCEP81",182,0)
 I $D(^DIC(4,"ANPI",IBNPI)) Q 9
"RTN","IBCEP81",183,0)
 Q 0
"RTN","IBCEP81",184,0)
 ;
"RTN","IBCEP81",185,0)
PRENPI(IBIEN) ;Pre-NPI edit messages
"RTN","IBCEP81",186,0)
 N IBNPI,IBVA200
"RTN","IBCEP81",187,0)
 Q:$G(IBIEN)=""
"RTN","IBCEP81",188,0)
 S IBNPI=$P($G(^IBA(355.93,IBIEN,0)),U,14)
"RTN","IBCEP81",189,0)
 Q:$G(IBNPI)=""
"RTN","IBCEP81",190,0)
 S IBVA200=$$QI^XUSNPI(IBNPI)
"RTN","IBCEP81",191,0)
 ;NPI that exists in 355.93 also is used in 200
"RTN","IBCEP81",192,0)
 I $P(IBVA200,U,1)="Individual_ID",$P(IBVA200,U,4)["Active" D
"RTN","IBCEP81",193,0)
 . W !!,"The NPI of ",IBNPI," is also associated with the INDIVIDUAL provider ",!,$$GET1^DIQ(200,$P(IBVA200,U,2),.01)," in the NEW PERSON file."
"RTN","IBCEP81",194,0)
 . W !!,"You are updating ",$S($$GET1^DIQ(355.93,IBIEN,.02,"I")=1:"a FACILITY/GROUP",$$GET1^DIQ(355.93,IBIEN,.02,"I")=2:"an INDIVIDUAL",1:"a")," provider in the"
"RTN","IBCEP81",195,0)
 . W !,"IB NON/OTHER VA BILLING PROVIDER file.",!
"RTN","IBCEP81",196,0)
 ;The NPI used in 355.93 is inactive in 200
"RTN","IBCEP81",197,0)
 I $P(IBVA200,U,1)="Individual_ID",$P(IBVA200,U,4)["Inactive" D
"RTN","IBCEP81",198,0)
 . W !!,"The NPI of ",IBNPI," is also associated with the INDIVIDUAL provider ",!,$$GET1^DIQ(200,$P(IBVA200,U,2),.01)," as INACTIVE in the NEW PERSON file."
"RTN","IBCEP81",199,0)
 . W !!,"You are updating ",$S($$GET1^DIQ(355.93,IBIEN,.02,"I")=1:"a FACILITY/GROUP",$$GET1^DIQ(355.93,IBIEN,.02,"I")=2:"an INDIVIDUAL",1:"a")," provider in the"
"RTN","IBCEP81",200,0)
 . W !,"IB NON/OTHER VA BILLING PROVIDER file.",!
"RTN","IBCEP81",201,0)
 Q
"RTN","IBCEP8B")
0^2^B20063767^B12352923
"RTN","IBCEP8B",1,0)
IBCEP8B ;ALB/CJS - Functions for NON-VA PROVIDER cont'd ;06-06-08
"RTN","IBCEP8B",2,0)
 ;;2.0;INTEGRATED BILLING;**391,432,476**;21-MAR-94;Build 2
"RTN","IBCEP8B",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP8B",4,0)
 ;
"RTN","IBCEP8B",5,0)
BLD(IBNPRV) ; Build/Rebuild display
"RTN","IBCEP8B",6,0)
 N IBLCT,IBCT,IBLST,IBPRI,IBIEN,Z,Z1,Z2,IB1
"RTN","IBCEP8B",7,0)
 N IBFBTGL,IBFBOK ;IB*2.0*476
"RTN","IBCEP8B",8,0)
 K @VALMAR
"RTN","IBCEP8B",9,0)
 ;S (IBLCT,IBCT)=0,Z=$G(^IBA(355.93,IBNPRV,0))
"RTN","IBCEP8B",10,0)
 S (IBLCT,IBCT)=0,Z=$G(^IBA(355.93,IBNPRV,0)),IB1=$G(^IBA(355.93,IBNPRV,1))
"RTN","IBCEP8B",11,0)
 S IBCT=IBCT+1
"RTN","IBCEP8B",12,0)
 S Z1=$J("Name: ",15)_$P(Z,U) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",13,0)
 I $P(Z,U,2)=2 D
"RTN","IBCEP8B",14,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",15,0)
 . S Z1=$J("Type: ",15)_$S($P(Z,U,2)=2:"INDIVIDUAL PROVIDER",1:"OUTSIDE OR OTHER VA FACILITY") D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",16,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",17,0)
 . S Z1=$J("Credentials: ",15)_$P(Z,U,3) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",18,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",19,0)
 . S Z1=$J("Specialty: ",15)_$P(Z,U,4) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",20,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",21,0)
 . S Z1=$J("NPI: ",15)_$$NPIGET^IBCEP81(IBNPRV) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",22,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",23,0)
 . S IBPRI=$$TAXGET^IBCEP81(IBNPRV,.IBLST)
"RTN","IBCEP8B",24,0)
 . S Z1=$J("Taxonomy Code: ",15)_$P(IBPRI,U)
"RTN","IBCEP8B",25,0)
 . I $D(IBLST) S Z1=Z1_" ("_$S($P(IBLST(IBLST),U,3)=1:"Primary",1:"Secondary")_")"
"RTN","IBCEP8B",26,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",27,0)
 . S IBIEN=""
"RTN","IBCEP8B",28,0)
 . F  S IBIEN=$O(IBLST(IBIEN)) Q:IBIEN=""  D
"RTN","IBCEP8B",29,0)
 .. I IBIEN=IBLST Q
"RTN","IBCEP8B",30,0)
 .. S IBCT=IBCT+1
"RTN","IBCEP8B",31,0)
 .. S Z1=$J("",15)_$P(IBLST(IBIEN),U)_" ("_$S($P(IBLST(IBIEN),U,3)=1:"Primary",1:"Secondary")_")"
"RTN","IBCEP8B",32,0)
 .. D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",33,0)
 . ;IB*2.0*476 - BEGIN added prompt to allow OPTION FB PAID TO IB to make updates or not
"RTN","IBCEP8B",34,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",35,0)
 . S Z1=" " D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",36,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",37,0)
 . S IBFBTGL=$$FBTGLGET^IBCEP8C1(IBNPRV)  ;RETURNS 0,1 OR ""
"RTN","IBCEP8B",38,0)
 . S IBFBOK="YES"
"RTN","IBCEP8B",39,0)
 . S:IBFBTGL=0 IBFBOK="NO"
"RTN","IBCEP8B",40,0)
 . S Z1=$J("Allow future updates by FEE BASIS automatic interface? : ",50)_IBFBOK
"RTN","IBCEP8B",41,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",42,0)
 ;E  D
"RTN","IBCEP8B",43,0)
 I $P(Z,U,2)'=2 D
"RTN","IBCEP8B",44,0)
 .;IB*2.0*476 - END added prompt to allow OPTION FB PAID TO IB to make updates or not
"RTN","IBCEP8B",45,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",46,0)
 . S Z1=$J("Address: ",15)_$P(Z,U,5) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",47,0)
 . I $P(Z,U,10) D
"RTN","IBCEP8B",48,0)
 .. S IBCT=IBCT+1
"RTN","IBCEP8B",49,0)
 .. S Z1=$J("",15)_$P(Z,U,10)
"RTN","IBCEP8B",50,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",51,0)
 . S Z1=$J("",15)_$P(Z,U,6)_$S($P(Z,U,6)'="":", ",1:"")_$S($P(Z,U,7):$$EXTERNAL^DILFD(355.93,.07,"",$P(Z,U,7))_"  ",1:"")_$P(Z,U,8)
"RTN","IBCEP8B",52,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",53,0)
 . ; start contact changes here
"RTN","IBCEP8B",54,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",55,0)
 . S Z1=$J("Contact Name: ",15)_$P(IB1,U,1) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",56,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",57,0)
 . S Z1=$J("Contact Phone: ",15)_$P(IB1,U,2)_"  "_$P(IB1,U,3) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",58,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",59,0)
 . S Z1=" " D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",60,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",61,0)
 . S Z1=$J("Type of Facility: ",30)_$$EXTERNAL^DILFD(355.93,.11,,$P(Z,U,11))
"RTN","IBCEP8B",62,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",63,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",64,0)
 . S Z1=$J("Primary ID: ",30)_$P(Z,U,9)
"RTN","IBCEP8B",65,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",66,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",67,0)
 . S Z1=$J("ID Qualifier: ",30)_$$GET1^DIQ(355.97,$P(Z,U,13),.03) I $P(Z,U,13)]"" S Z1=Z1_" - "_$$GET1^DIQ(355.97,$P(Z,U,13),.01)
"RTN","IBCEP8B",68,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",69,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",70,0)
 . S Z1=$J("Mammography Certification #: ",30)_$P(Z,U,15)
"RTN","IBCEP8B",71,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",72,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",73,0)
 . S Z1=$J("NPI: ",30)_$$NPIGET^IBCEP81(IBNPRV) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",74,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",75,0)
 . S IBPRI=$$TAXGET^IBCEP81(IBNPRV,.IBLST)
"RTN","IBCEP8B",76,0)
 . S Z1=$J("Taxonomy Code: ",30)_$P(IBPRI,U)
"RTN","IBCEP8B",77,0)
 . I $D(IBLST) S Z1=Z1_" ("_$S($P(IBLST(IBLST),U,3)=1:"Primary",1:"Secondary")_")"
"RTN","IBCEP8B",78,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",79,0)
 . S IBIEN=""
"RTN","IBCEP8B",80,0)
 . F  S IBIEN=$O(IBLST(IBIEN)) Q:IBIEN=""  D
"RTN","IBCEP8B",81,0)
 .. I IBIEN=IBLST Q
"RTN","IBCEP8B",82,0)
 .. S IBCT=IBCT+1
"RTN","IBCEP8B",83,0)
 .. S Z1=$J("",30)_$P(IBLST(IBIEN),U)_" ("_$S($P(IBLST(IBIEN),U,3)=1:"Primary",1:"Secondary")_")"
"RTN","IBCEP8B",84,0)
 .. D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",85,0)
 . ;IB*2.0*476 - BEGIN added prompt to allow OPTION FB PAID TO IB to make updates or not
"RTN","IBCEP8B",86,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",87,0)
 . S Z1=" " D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",88,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",89,0)
 . S IBFBTGL=$$FBTGLGET^IBCEP8C1(IBNPRV)  ;RETURNS 1,0 OR ""
"RTN","IBCEP8B",90,0)
 . S IBFBOK="YES"
"RTN","IBCEP8B",91,0)
 . S:IBFBTGL=0 IBFBOK="NO"
"RTN","IBCEP8B",92,0)
 . S Z1=$J("Allow future updates by FEE BASIS automatic interface? : ",60)_IBFBOK
"RTN","IBCEP8B",93,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",94,0)
 . ;IB*2.0*476 - END added prompt to allow OPTION FB PAID TO IB to make updates or not
"RTN","IBCEP8B",95,0)
 K VALMBG,VALMCNT
"RTN","IBCEP8B",96,0)
 S VALMBG=1,VALMCNT=IBLCT
"RTN","IBCEP8B",97,0)
 Q
"RTN","IBCEP8B",98,0)
 ;
"RTN","IBCEP8B",99,0)
SET1(IBLCT,TEXT,IBCT) ;
"RTN","IBCEP8B",100,0)
 S IBLCT=IBLCT+1 D SET^VALM10(IBLCT,TEXT,$G(IBCT))
"RTN","IBCEP8B",101,0)
 Q
"RTN","IBCEP8C")
0^3^B149217224^n/a
"RTN","IBCEP8C",1,0)
IBCEP8C ;DSS/SCR - Functions for IB SILENT INTERFACE FROM FB ;03-27-12
"RTN","IBCEP8C",2,0)
 ;;2.0;INTEGRATED BILLING;**476**;21-MAR-94;Build 2
"RTN","IBCEP8C",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP8C",4,0)
 ;
"RTN","IBCEP8C",5,0)
 ; This routine contains functions needed by the FB PAID TO IB OPTION to maintain
"RTN","IBCEP8C",6,0)
 ;    the 355.93 - IB VA NON/OTHER BILLING PROVIDER file
"RTN","IBCEP8C",7,0)
 ;
"RTN","IBCEP8C",8,0)
EPTRANS()  ;EP called from INPUT TRANSFORM IN THE .01 FIELD
"RTN","IBCEP8C",9,0)
 ;                              of 355.93 VA NON/OTHER BILLING PROVIDER file
"RTN","IBCEP8C",10,0)
 ;                                                
"RTN","IBCEP8C",11,0)
 ;Used only by the IB AUTOMATIC INTERFACE FROM FB to ADD a new entry or UPDATE an existing one
"RTN","IBCEP8C",12,0)
 ;
"RTN","IBCEP8C",13,0)
 S:IBPRVTYP=1 IBTYPE="F"
"RTN","IBCEP8C",14,0)
 S:IBPRVTYP=2 IBTYPE="I"
"RTN","IBCEP8C",15,0)
 S IBFBFLAG=1   ;USED BY THE NPI input transform to transfer code to interface and avoid user interaction
"RTN","IBCEP8C",16,0)
 ;
"RTN","IBCEP8C",17,0)
 Q
"RTN","IBCEP8C",18,0)
EPFBAPI(IBSRCREC,IBRETARY)  ;EP from FBTOIB^FBPAID3A
"RTN","IBCEP8C",19,0)
 ; INPUTS : IBSRCREC  - an array of information about this source record supplied by FB side
"RTN","IBCEP8C",20,0)
 ;
"RTN","IBCEP8C",21,0)
 ; OUTPUT : IBRETARY (passed by reference) populated with information about results of interface processing
"RTN","IBCEP8C",22,0)
 ;
"RTN","IBCEP8C",23,0)
 ;TO IB NON/OTHER VA BILLING PROVIDER FILE 355.93
"RTN","IBCEP8C",24,0)
 N IBRET
"RTN","IBCEP8C",25,0)
 ;
"RTN","IBCEP8C",26,0)
 S IBRET=$$IBNONVA(.IBSRCREC)   ;UPDATES THE IB NON/OTHER VA BILLING PROVIDER FILE
"RTN","IBCEP8C",27,0)
 S IBRETARY(1)=$P(IBRET,U,1)   ;The IEN of the IB record matched or created or NULL if neither
"RTN","IBCEP8C",28,0)
 S IBRETARY(2)=$P(IBRET,U,2)   ;A code from below indicating how NPI validation and record updates went
"RTN","IBCEP8C",29,0)
 ; '0' FOR NO NPI UPDATES ATTEMPTED;'1' FOR NPI DATA INVALID;'2' FOR NPI MATCHED ACTIVE, NO UPDATES;
"RTN","IBCEP8C",30,0)
 ; '3' FOR NPI MATCHED INACTIVE, NO UPDATES;'4' FOR NPI MATCHED ACTIVE, IB UPDATED; '5' FOR NPI NEW, IB RECORD CREATED;
"RTN","IBCEP8C",31,0)
 S IBRETARY(3)=$P(IBRET,U,3)   ;A code from below indicating how TXY updates went
"RTN","IBCEP8C",32,0)
 ;  '0' FOR NO TXY UPDATES ATTEMPTED;'1' FOR TXY CODE NOT FOUND IN 8932.1; '2' FOR MATCHED PRIMARY,NO UPDATES;
"RTN","IBCEP8C",33,0)
 ;'3' FOR MATCHED NON-PRIMARY, IB TXY UPDATES;'4' FOR NEW, IB TXY ENTRY CREATED;
"RTN","IBCEP8C",34,0)
 Q
"RTN","IBCEP8C",35,0)
 ;
"RTN","IBCEP8C",36,0)
IBNONVA(IBFBINF)  ;UPDATES TO #355.93
"RTN","IBCEP8C",37,0)
 ;  INPUTS  IBFBINF :  AN ARRAY OF INFORMATION FROM FB TO BE COMPARED/UPDATED IN IB NON/OTHER
"RTN","IBCEP8C",38,0)
 ;
"RTN","IBCEP8C",39,0)
 ;  LOOK UP BY NPI - should only be one match per provider type
"RTN","IBCEP8C",40,0)
 ;
"RTN","IBCEP8C",41,0)
 N IBQUIT,IBRTRN,IBDONE,IBFLGS,IBFLDS,IBIEN,IBSCRN,IBINDX,IBERR2,IBLKUP,IBOKTXY,IBOKNPI
"RTN","IBCEP8C",42,0)
 N IBERR,IBFBMLT,IBNPICHK,IBFDA,IBALLOW,IBOKFB,IBOK,IBPRVNPI,IBPRVTYP
"RTN","IBCEP8C",43,0)
 ;
"RTN","IBCEP8C",44,0)
 S IBQUIT=0
"RTN","IBCEP8C",45,0)
 S IBDONE=0
"RTN","IBCEP8C",46,0)
 S IBOKTXY=""
"RTN","IBCEP8C",47,0)
 S IBOKNPI=""
"RTN","IBCEP8C",48,0)
 S IBPRVTYP=IBFBINF("IB TYPE")
"RTN","IBCEP8C",49,0)
 S IBPRVNPI=IBFBINF("FBNPI")
"RTN","IBCEP8C",50,0)
 S IBPRVNAM=IBFBINF("NAME")
"RTN","IBCEP8C",51,0)
 S IBPRVTXY=IBFBINF("FBTXY")
"RTN","IBCEP8C",52,0)
 S IBFBDUZ=IBFBINF("FB SUP DUZ")
"RTN","IBCEP8C",53,0)
 ;
"RTN","IBCEP8C",54,0)
 I IBPRVNPI'="" D
"RTN","IBCEP8C",55,0)
 .N DO,X,%,%H,%I,X,IBNOW,DD,Y
"RTN","IBCEP8C",56,0)
 .D NOW^%DTC
"RTN","IBCEP8C",57,0)
 .S IBNOW=%
"RTN","IBCEP8C",58,0)
 .S IBPRVNAM=$$STRIP(IBPRVNAM)
"RTN","IBCEP8C",59,0)
 .S IBPRVNAM=$$UP^XLFSTR(IBPRVNAM)
"RTN","IBCEP8C",60,0)
 .S IBIEN=$$ACTVNPI(IBPRVNPI)  ;returns IEN of record with this NPI as 'active'
"RTN","IBCEP8C",61,0)
 .I IBIEN>0 D
"RTN","IBCEP8C",62,0)
 ..S IBFBMLT=0  ;FB MULTIPLE NOT YET UPDATED
"RTN","IBCEP8C",63,0)
 ..S IBOKNPI=2  ;MATCHED ACTIVE  NO UPDATES...will get changed if updates are made
"RTN","IBCEP8C",64,0)
 ..S IBOKTXY=0  ;NO TXY UPDATES ATTEMPTED
"RTN","IBCEP8C",65,0)
 ..;(#.01) NAME [1F] ; (#.02) PROVIDER TYPE [2S](#.05) STREETADDRESS [5F] ; (#.06) CITY [6F]; 
"RTN","IBCEP8C",66,0)
 ..;(#.07) STATE [7P:5] ^(#.08) ZIP CODE [8F] ; (#.09) FACILITY DEFAULT ID NUMBER[9F] ^(#.1) STREET ADDRESS LINE 2 [10F] ;
"RTN","IBCEP8C",67,0)
 ..;(#.13)PRIMARY ID QUALIFIER [13P:355.97];(#41.01) NPI [14F] 
"RTN","IBCEP8C",68,0)
 ..S IBFLDS=".01;.02;.05;.06;.07;.08;.09;.1;.13;41.01"
"RTN","IBCEP8C",69,0)
 ..D GETS^DIQ(355.93,IBIEN_",",IBFLDS,"I","IBRTRN","IBERR")  ; 355.93  IB NON/OTHER VA BILLING PROVIDER FILE
"RTN","IBCEP8C",70,0)
 ..I $G(IBERR("DIERR")) S IBQUIT=1
"RTN","IBCEP8C",71,0)
 ..Q:IBQUIT
"RTN","IBCEP8C",72,0)
 ..S IBALLOW=$$FBALLOW(IBIEN)   ;FIND OUT IF THIS PROVIDER SHOULD BE EDITED OR NOT
"RTN","IBCEP8C",73,0)
 ..Q:IBALLOW=0
"RTN","IBCEP8C",74,0)
 ..I IBRTRN(355.93,IBIEN_",",".02","I")=IBPRVTYP D SETIBFDA(.IBRTRN,.IBFBINF,.IBFDA,IBIEN)
"RTN","IBCEP8C",75,0)
 ..S IBOK=$$LOCK(IBIEN)  ;locks the #355.93  record
"RTN","IBCEP8C",76,0)
 ..Q:'IBOK
"RTN","IBCEP8C",77,0)
 ..I $D(IBFDA(355.93)) D
"RTN","IBCEP8C",78,0)
 ...S XQY0="FB AUTO INTERFACE TO IB"  ; MUST be set to pass the .01 input transform defined in PRVFMT^IBCEP8
"RTN","IBCEP8C",79,0)
 ...S IBFLPFLP=IBPRVTYP  ;needed for input transform
"RTN","IBCEP8C",80,0)
 ...D FILE^DIE("","IBFDA","IBERR")
"RTN","IBCEP8C",81,0)
 ...I $G(IBERR("DIERR")) S IBQUIT=1  ;FILE ATTEMPT RETURNED DB ERROR
"RTN","IBCEP8C",82,0)
 ...Q:IBQUIT
"RTN","IBCEP8C",83,0)
 ...S IBFBMLT=$$ADDFB(IBIEN,IBFBDUZ,IBNOW,0)
"RTN","IBCEP8C",84,0)
 ...S IBOKNPI=4  ; FOR NPI MATCHED ACTIVE, IB UPDATED;
"RTN","IBCEP8C",85,0)
 ..;CHECK TAXONOMY CODE
"RTN","IBCEP8C",86,0)
 ..I $G(IBPRVTXY)'="" D
"RTN","IBCEP8C",87,0)
 ...S IBOKTXY=$$CHKTXY(IBIEN,IBPRVTXY)  ;RETURNS A CODE FROM SET OF CODES - 0 IF NO CHANGES WERE MADE
"RTN","IBCEP8C",88,0)
 ...S:('+IBFBMLT)&((IBOKTXY=3)!(IBOKTXY=4)) IBFBMLT=$$ADDFB(IBIEN,IBFBDUZ,IBNOW,0)
"RTN","IBCEP8C",89,0)
 ...;add FB mult if not already added for other changes, and the txy was changed
"RTN","IBCEP8C",90,0)
 ..D UNLOCK(IBIEN)  ;Unlocks the #355.93  record
"RTN","IBCEP8C",91,0)
 ..S IBDONE=1   ;We have found a match on NPI
"RTN","IBCEP8C",92,0)
 .Q:IBQUIT 
"RTN","IBCEP8C",93,0)
 .Q:IBDONE
"RTN","IBCEP8C",94,0)
 .I IBIEN="" D
"RTN","IBCEP8C",95,0)
 ..S IBNPICHK=$$INACTV(IBPRVNPI) ;look for match on currently inactive
"RTN","IBCEP8C",96,0)
 ..I IBNPICHK'="" D
"RTN","IBCEP8C",97,0)
 ...S IBIEN=IBNPICHK  ;THE IEN OF THE record with this NPI as INACTIVE
"RTN","IBCEP8C",98,0)
 ...S IBOKNPI=3  ;FOR NPI MATCHED INACTIVE, NO UPDATES;
"RTN","IBCEP8C",99,0)
 ...S IBOKTXY=0    ;NO ATTEMPTED UPDATES
"RTN","IBCEP8C",100,0)
 ...S IBDONE=1
"RTN","IBCEP8C",101,0)
 ..Q:IBDONE
"RTN","IBCEP8C",102,0)
 ..S IBNPICHK=$$RULES(IBPRVNPI)  ;RETURN OF 0 means no problem
"RTN","IBCEP8C",103,0)
 ..I IBNPICHK>0 D
"RTN","IBCEP8C",104,0)
 ...;there is a match on an active NPI in the NEW PERSON or the INSTITUTION file
"RTN","IBCEP8C",105,0)
 ...S IBOKNPI=2   ;NPI MATCHED ACTIVE NO UPDATES
"RTN","IBCEP8C",106,0)
 ...S IBOKTXY=0
"RTN","IBCEP8C",107,0)
 ...S IBDONE=1
"RTN","IBCEP8C",108,0)
 ..Q:IBDONE
"RTN","IBCEP8C",109,0)
 ..;all checks have occurred, now we are going to add this PROVIDER/NPI
"RTN","IBCEP8C",110,0)
 ..S IBOK=$$LOCK()  ;locks the #355.93 file
"RTN","IBCEP8C",111,0)
 ..I 'IBOK Q
"RTN","IBCEP8C",112,0)
 ..N DIC,X,Y
"RTN","IBCEP8C",113,0)
 ..S DIC="^IBA(355.93,"
"RTN","IBCEP8C",114,0)
 ..S X=IBPRVNAM
"RTN","IBCEP8C",115,0)
 ..S DIC(0)=""
"RTN","IBCEP8C",116,0)
 ..S DIC("DR")=".02///"_IBPRVTYP
"RTN","IBCEP8C",117,0)
 ..I IBPRVTYP=1 D  ;ADD FACILITY INFORMATION
"RTN","IBCEP8C",118,0)
 ...I $G(IBFBINF("FBADD1"))'="" S DIC("DR")=DIC("DR")_";.05///"_IBFBINF("FBADD1")
"RTN","IBCEP8C",119,0)
 ...I $G(IBFBINF("FBADD2"))'="" S DIC("DR")=DIC("DR")_";.1///"_IBFBINF("FBADD2")
"RTN","IBCEP8C",120,0)
 ...I $G(IBFBINF("FBCITY"))'="" S DIC("DR")=DIC("DR")_";.06///"_IBFBINF("FBCITY")
"RTN","IBCEP8C",121,0)
 ...S:$G(IBFBINF("FBSTATE INT")) DIC("DR")=DIC("DR")_";.07///`"_IBFBINF("FBSTATE INT")  ;POINTER SO PUT INTO INTERNAL FORMAT
"RTN","IBCEP8C",122,0)
 ...S:$G(IBFBINF("FBZIP")) DIC("DR")=DIC("DR")_";.08///"_IBFBINF("FBZIP")
"RTN","IBCEP8C",123,0)
 ...I $G(IBFBINF("FBFACID"))'="" S DIC("DR")=DIC("DR")_";.09///"_IBFBINF("FBFACID")
"RTN","IBCEP8C",124,0)
 ..S DIC("DR")=DIC("DR")_";41.01///"_IBPRVNPI
"RTN","IBCEP8C",125,0)
 ..S XQY0="FB AUTO INTERFACE TO IB"  ; MUST be set to pass the .01 input transform defined in PRVFMT^IBCEP8
"RTN","IBCEP8C",126,0)
 ..S IBFLPFLP=IBPRVTYP  ;needed for successful 'three stuff' validation
"RTN","IBCEP8C",127,0)
 ..D FILE^DICN
"RTN","IBCEP8C",128,0)
 ..S IBIEN=+Y
"RTN","IBCEP8C",129,0)
 ..I IBIEN=-1 D
"RTN","IBCEP8C",130,0)
 ...S IBQUIT=1
"RTN","IBCEP8C",131,0)
 ...D UNLOCK()
"RTN","IBCEP8C",132,0)
 ..Q:IBQUIT
"RTN","IBCEP8C",133,0)
 ..S IBOKFB=$$ADDFB(IBIEN,IBFBDUZ,IBNOW,1)
"RTN","IBCEP8C",134,0)
 ..S IBOKNPI=$$ADDNPI(IBIEN,IBPRVNPI,IBFBDUZ,IBNOW)  ;returns 1 or 0
"RTN","IBCEP8C",135,0)
 ..S:IBOKNPI=1 IBOKNPI=5   ;NPI NEW, IB RECORD CREATED
"RTN","IBCEP8C",136,0)
 ..I $G(IBPRVTXY)'="" D
"RTN","IBCEP8C",137,0)
 ...S IBOK=$$ADDTXY(IBIEN,IBPRVTXY,1)
"RTN","IBCEP8C",138,0)
 ...S:IBOK IBOKTXY=4  ;FOR NEW TXY ENTRY CREATED
"RTN","IBCEP8C",139,0)
 ...S:'IBOK IBOKTXY=0  ;NO TXY UPDATES ATTEMPTED
"RTN","IBCEP8C",140,0)
 ..D UNLOCK()    ;unlocks the #355.93 file or a record
"RTN","IBCEP8C",141,0)
 S:$G(IBPRVTXY)="" IBOKTXY=0 ;NO TXY UPDATES ATTEMPTED
"RTN","IBCEP8C",142,0)
 S:$G(IBPRVNPI)="" IBOKNPI=0 ;NO NPI UPDATES ATTEMPTED
"RTN","IBCEP8C",143,0)
 I IBQUIT S IBIEN=""
"RTN","IBCEP8C",144,0)
 Q IBIEN_"^"_IBOKNPI_"^"_IBOKTXY
"RTN","IBCEP8C",145,0)
 ;
"RTN","IBCEP8C",146,0)
ADDFB(IBIEN,IBFBDUZ,IBNOW,IBFBADD)  ;ADD a multiple entry
"RTN","IBCEP8C",147,0)
 ; INPUTS : IBIEN: IEN OF THE IB NON/OTHER VA PROVIDER FILE being updated with NPI information
"RTN","IBCEP8C",148,0)
 ;          IBFBDUZ : IEN of the FB SUPERVISOR who certified the batch
"RTN","IBCEP8C",149,0)
 ;          IBNOW   : FM Date/time
"RTN","IBCEP8C",150,0)
 ;          IBFBADD : 1 if FB is just created the record 0 if not
"RTN","IBCEP8C",151,0)
 ;
"RTN","IBCEP8C",152,0)
 N IBFDA,IBIENRET,IBERR
"RTN","IBCEP8C",153,0)
 ;
"RTN","IBCEP8C",154,0)
 S IBQUIT=0
"RTN","IBCEP8C",155,0)
 S IBFDA(355.935,"+1,"_IBIEN_",",.01)=IBNOW  ;(#.01) DATE/TIME LAST FB UPDATE [1D]
"RTN","IBCEP8C",156,0)
 S IBFDA(355.935,"+1,"_IBIEN_",",.02)=IBFBDUZ  ;(#.02) DUZ OFFB SUP [2P:200]
"RTN","IBCEP8C",157,0)
 S:IBFBADD IBFDA(355.935,"+1,"_IBIEN_",",.03)=IBFBADD  ;(#.03) CREATED BY FB PAID TO IB[3S]
"RTN","IBCEP8C",158,0)
 D UPDATE^DIE("","IBFDA","IBIENRET","IBERR")
"RTN","IBCEP8C",159,0)
 I $G(IBERR("DIERR"))'="" S IBQUIT=1
"RTN","IBCEP8C",160,0)
 Q 'IBQUIT
"RTN","IBCEP8C",161,0)
 ;
"RTN","IBCEP8C",162,0)
ADDNPI(IBIEN,IBNPI,IBFBDUZ,IBNOW) ;ADD NPI multiple
"RTN","IBCEP8C",163,0)
 ; INPUTS : IBIEN: IEN OF THE IB NON/OTHER VA PROVIDER FILE being updated with NPI information
"RTN","IBCEP8C",164,0)
 ;          IBNPI : NPI STRING TO BE ADDED if it passes validation rules (we already know this 
"RTN","IBCEP8C",165,0)
 ;                    npi does not exist as an 'active' npi for a current entry in this file
"RTN","IBCEP8C",166,0)
 ;
"RTN","IBCEP8C",167,0)
 N IBFDA,IBERR,IBQUIT
"RTN","IBCEP8C",168,0)
 ;
"RTN","IBCEP8C",169,0)
 S IBQUIT=0
"RTN","IBCEP8C",170,0)
 S IBFDA(355.9301,"+1,"_IBIEN_",",.01)=IBNOW  ;355.9301  ;(#40) DATE/TIME OF LAST NPI CHANGE (#.01) DATE/TIME OF LAST NPI CHANGE [1D]
"RTN","IBCEP8C",171,0)
 S IBFDA(355.9301,"+1,"_IBIEN_",",.02)=1  ;(#.02) STATUS [2S]
"RTN","IBCEP8C",172,0)
 S IBFDA(355.9301,"+1,"_IBIEN_",",.03)=IBNPI  ;(#.03) NPI [3F]
"RTN","IBCEP8C",173,0)
 S IBFDA(355.9301,"+1,"_IBIEN_",",.04)=IBFBDUZ  ;(#.04)PERSON AFFECTING LAST CHANGE [4P:200]
"RTN","IBCEP8C",174,0)
 D UPDATE^DIE("","IBFDA","","IBERR")
"RTN","IBCEP8C",175,0)
 I $G(IBERR("DIERR"))'="" S IBQUIT=1
"RTN","IBCEP8C",176,0)
 Q 'IBQUIT
"RTN","IBCEP8C",177,0)
 ;
"RTN","IBCEP8C",178,0)
CHKTXY(IBIEN,IBPRVTXY)  ;LOOKS FOR TAXONOMY CODE AND MAKES ACTIVE OR ADDS
"RTN","IBCEP8C",179,0)
 ;
"RTN","IBCEP8C",180,0)
 ;INPUT : IBIEN  - THE IEN OF THE IB NON/OTHER VA BILLING PROVIDER BEING UDPATED
"RTN","IBCEP8C",181,0)
 ;        IBPRVTXY - THE TAXONOMY CODE PROVIDED BY FEE BASIS THAT IS BEING LOOKED FOR
"RTN","IBCEP8C",182,0)
 ;
"RTN","IBCEP8C",183,0)
 ; RETURNS: 
"RTN","IBCEP8C",184,0)
 ;                               '0' FOR NO TXY UPDATES ATTEMPTED;
"RTN","IBCEP8C",185,0)
 ;                               '1' FOR TXY CODE NOT FOUND IN 8932.1;
"RTN","IBCEP8C",186,0)
 ;                               '2' FOR MATCHED PRIMARY,NO UPDATES;
"RTN","IBCEP8C",187,0)
 ;                               '3' FOR MATCHED NON-PRIMARY, IB TXY UPDATES;
"RTN","IBCEP8C",188,0)
 ;                               '4' FOR NEW, IB TXY ENTRY CREATED;
"RTN","IBCEP8C",189,0)
 ;
"RTN","IBCEP8C",190,0)
 N IBDONE,IBERR,IBTXYIEN,IBRETRN,IBACTIV,IBTXYCOD,IBOK
"RTN","IBCEP8C",191,0)
 ;
"RTN","IBCEP8C",192,0)
 ;GET THE INTERNAL VALUE OF THIS TAXONOMY CODE
"RTN","IBCEP8C",193,0)
 S IBTXYIEN=$$FIND1^DIC(8932.1,"","X",IBPRVTXY,"G","","IBERR")  ;8932.1 PERSON CLASS FILE
"RTN","IBCEP8C",194,0)
 I (IBTXYIEN>0) D
"RTN","IBCEP8C",195,0)
 .S IBDONE=0
"RTN","IBCEP8C",196,0)
 .S IBPRIM=0
"RTN","IBCEP8C",197,0)
 .S IBTXY=0
"RTN","IBCEP8C",198,0)
 .F  S IBTXY=$O(^IBA(355.93,IBIEN,"TAXONOMY",IBTXY)) Q:(('+IBTXY)!IBDONE)  D
"RTN","IBCEP8C",199,0)
 ..S IBTXYCOD=$P(^IBA(355.93,IBIEN,"TAXONOMY",IBTXY,0),U,1)
"RTN","IBCEP8C",200,0)
 ..S IBPRIM=$P(^IBA(355.93,IBIEN,"TAXONOMY",IBTXY,0),U,2)
"RTN","IBCEP8C",201,0)
 ..S IBACTIV=$P(^IBA(355.93,IBIEN,"TAXONOMY",IBTXY,0),U,3)
"RTN","IBCEP8C",202,0)
 ..I IBTXYCOD=IBTXYIEN D
"RTN","IBCEP8C",203,0)
 ...S IBDONE=1
"RTN","IBCEP8C",204,0)
 ...S IBRETRN=2  ;'2' FOR MATCHED PRIMARY,NO UPDATES;
"RTN","IBCEP8C",205,0)
 ...I IBPRIM'=1 D
"RTN","IBCEP8C",206,0)
 ....S IBFDA(355.9342,IBTXY_","_IBIEN_",",".02")=1  ;355.9342 IB NON/OTHER VA BILLING PROVIDER FILE :TAXONOMY
"RTN","IBCEP8C",207,0)
 ....S IBFDA(355.9342,IBTXY_","_IBIEN_",",".03")="A"
"RTN","IBCEP8C",208,0)
 ....S IBRETRN=3  ;'3' FOR MATCHED NON-PRIMARY, IB TXY UPDATES;
"RTN","IBCEP8C",209,0)
 ....D FILE^DIE("","IBFDA","IBERR")
"RTN","IBCEP8C",210,0)
 .I 'IBDONE D
"RTN","IBCEP8C",211,0)
 ..S IBOK=$$ADDTXY(IBIEN,IBPRVTXY,1)
"RTN","IBCEP8C",212,0)
 ..S:IBOK IBRETRN=4 ; '4' FOR NEW IB TXY ENTRY CREATED
"RTN","IBCEP8C",213,0)
 ..S:'IBOK IBRETRN=0  ;'0' FOR NO UPDATES ATTEMPTED
"RTN","IBCEP8C",214,0)
 I (IBTXYIEN<=0) S IBRETRN=1   ;THIS CODE IS NOT A POINTER TO THE PERSON CLASS FILE - CAN'T ADD
"RTN","IBCEP8C",215,0)
 Q IBRETRN
"RTN","IBCEP8C",216,0)
 ;
"RTN","IBCEP8C",217,0)
ADDTXY(IBIEN,IBTXY,IBPRIM)  ;ADD TAXONOMY multiple entry
"RTN","IBCEP8C",218,0)
 ; INPUTS : IBIEN: IEN OF THE IB NON/OTHER VA PROVIDER FILE being updated with NPI information
"RTN","IBCEP8C",219,0)
 ;          IBTXY : TAXONOMY STRING TO BE ADDED if it passes validation rules
"RTN","IBCEP8C",220,0)
 ;          IBPRIM : 1 IF THIS IS TO BE ADDED AS PRIMARY CODE, 0 OTHERWISE
"RTN","IBCEP8C",221,0)
 ;
"RTN","IBCEP8C",222,0)
 ; RETURNS: 0 IF NO UDPATES WERE MADE TO TAXONOMY FILE
"RTN","IBCEP8C",223,0)
 ;          1 IF NEW TAXONOMY CODE WAS ADDED
"RTN","IBCEP8C",224,0)
 ;
"RTN","IBCEP8C",225,0)
 N IBFDA,IBFDAVAL,IBIENRET,IBERR,IBQUIT,IBOK
"RTN","IBCEP8C",226,0)
 ;
"RTN","IBCEP8C",227,0)
 S IBQUIT=0
"RTN","IBCEP8C",228,0)
 S IBFDA(355.9342,"?+1,"_IBIEN_",",.01)=IBTXY   ;355.9342  ;IB NON/OTHER VA BILLING PROVIDER FILE :TAXONOMY
"RTN","IBCEP8C",229,0)
 S IBFDA(355.9342,"?+1,"_IBIEN_",",.02)=IBPRIM
"RTN","IBCEP8C",230,0)
 S IBFDA(355.9342,"?+1,"_IBIEN_",",.03)="A"
"RTN","IBCEP8C",231,0)
 D VALS^DIE("","IBFDA","IBFDAVAL","IBERR")
"RTN","IBCEP8C",232,0)
 I $G(IBERR("DIERR"))'="" S IBQUIT=1
"RTN","IBCEP8C",233,0)
 I 'IBQUIT D 
"RTN","IBCEP8C",234,0)
 .D UPDATE^DIE("","IBFDAVAL","IBIENRET","IBERR")
"RTN","IBCEP8C",235,0)
 .I $G(IBERR("DIERR"))="" D
"RTN","IBCEP8C",236,0)
 ..S:$G(IBIENRET(1))'="" IBOK=IBIENRET(1)  ;THE IEN WHICH WAS JUST ADDED
"RTN","IBCEP8C",237,0)
 ..S:'+IBOK IBQUIT=1
"RTN","IBCEP8C",238,0)
 .I $G(IBERR("DIERR"))'="" S IBQUIT=1
"RTN","IBCEP8C",239,0)
 Q 'IBQUIT
"RTN","IBCEP8C",240,0)
 ;
"RTN","IBCEP8C",241,0)
ACTVNPI(IBNPI) ;RETURNS ien of ACTIVE NPI IN IB NON/OTHER VA BILLING PROVIDER FILE
"RTN","IBCEP8C",242,0)
 ;INPUT IBNPI : The NPI from FB provider under consideration
"RTN","IBCEP8C",243,0)
 N IBIEN,IBSUB
"RTN","IBCEP8C",244,0)
 S IBIEN=$O(^IBA(355.93,"NPIHISTORY",IBNPI,""),-1)  ;Most recent IEN for this NPI
"RTN","IBCEP8C",245,0)
 I $G(IBIEN)'="" D
"RTN","IBCEP8C",246,0)
 .S IBSUB=$O(^IBA(355.93,IBIEN,"NPISTATUS","C",IBNPI,""),-1)  ;MOST recent status for this IEN for this NPI
"RTN","IBCEP8C",247,0)
 .S:IBSUB="" IBIEN=""
"RTN","IBCEP8C",248,0)
 .Q:IBIEN=""
"RTN","IBCEP8C",249,0)
 .S:'$D(^IBA(355.93,IBIEN,"NPISTATUS","NPISTATUS",1,IBSUB)) IBIEN=""
"RTN","IBCEP8C",250,0)
 Q IBIEN
"RTN","IBCEP8C",251,0)
 ;
"RTN","IBCEP8C",252,0)
INACTV(IBNPI) ;RETURNS ien of INACTIVE NPI IN IB NON/OTHER VA BILLING PROVIDER FILE
"RTN","IBCEP8C",253,0)
 ;INPUT IBNPI : The NPI from FB provider under consideration
"RTN","IBCEP8C",254,0)
 N IBIEN,IBSUB
"RTN","IBCEP8C",255,0)
 S IBIEN=$O(^IBA(355.93,"NPIHISTORY",IBNPI,""),-1)
"RTN","IBCEP8C",256,0)
 I $G(IBIEN)'="" D
"RTN","IBCEP8C",257,0)
 .S IBSUB=$O(^IBA(355.93,IBIEN,"NPISTATUS","C",IBNPI,""),-1)  ;MOST recent status for this NPI
"RTN","IBCEP8C",258,0)
 .S:IBSUB="" IBIEN=""
"RTN","IBCEP8C",259,0)
 .Q:IBIEN=""
"RTN","IBCEP8C",260,0)
 .S:'$D(^IBA(355.93,IBIEN,"NPISTATUS","NPISTATUS",0,IBSUB)) IBIEN=""
"RTN","IBCEP8C",261,0)
 Q IBIEN
"RTN","IBCEP8C",262,0)
 ;
"RTN","IBCEP8C",263,0)
RULES(IBNPI) ;Verify that the NPI meets all rules for being added
"RTN","IBCEP8C",264,0)
 ; see NPIUSED^IBCEP81 where the input transform on the NPI field that is being bypassed is defined
"RTN","IBCEP8C",265,0)
 ; INPUT IBNPI - the NPI about to be added
"RTN","IBCEP8C",266,0)
 ;
"RTN","IBCEP8C",267,0)
 ; OUTPUT 0 if no ACTIVE records found 1 if ACTIVE in NEW PERSON FILE, 2 IF ACVTIVE IN INSTUTUTION FILE
"RTN","IBCEP8C",268,0)
 N IBIEN1,IBIEN2,IBRETURN
"RTN","IBCEP8C",269,0)
 ;
"RTN","IBCEP8C",270,0)
 S IBRETURN=0  ;NOT FOUND IN ANY FILES
"RTN","IBCEP8C",271,0)
 I IBNPI="" S IBRETURN=""
"RTN","IBCEP8C",272,0)
 S:+IBNPI&$D(^VA(200,"ANPI",IBNPI)) IBRETURN=1  ;ACTIVE in the NEW PERSON file
"RTN","IBCEP8C",273,0)
 S:+IBNPI&$D(^DIC(4,"ANPI",IBNPI)) IBRETURN=2   ;ACTIVE in the INSTITUTION file
"RTN","IBCEP8C",274,0)
 Q IBRETURN
"RTN","IBCEP8C",275,0)
 ;
"RTN","IBCEP8C",276,0)
FBALLOW(IBIEN)  ;Returns 1 if FB updates are allowed
"RTN","IBCEP8C",277,0)
 ; INPUT : IBIEN - The internal entry number to the IB NON/OTHER VA BILLING PROVIDER FILE
"RTN","IBCEP8C",278,0)
 ;
"RTN","IBCEP8C",279,0)
 N IBRETURN,IBSUB,IBERR
"RTN","IBCEP8C",280,0)
 ;
"RTN","IBCEP8C",281,0)
 S IBSUB=9999999
"RTN","IBCEP8C",282,0)
 S IBRETURN=1   ;ALLOW updates if no entry has been  made
"RTN","IBCEP8C",283,0)
 I $O(^IBA(355.93,IBIEN,2))=3 D
"RTN","IBCEP8C",284,0)
 .S IBSUB=$O(^IBA(355.93,IBIEN,3,IBSUB),-1)  ;get the most recent sub-entry
"RTN","IBCEP8C",285,0)
 .S IBRETURN=$$GET1^DIQ(355.9351,IBSUB_","_IBIEN_",",".02","I","","")
"RTN","IBCEP8C",286,0)
 .I IBRETURN'=0 S IBRETURN=1
"RTN","IBCEP8C",287,0)
 Q IBRETURN
"RTN","IBCEP8C",288,0)
 ;
"RTN","IBCEP8C",289,0)
STRIP(FBPRVNAM) ; Strip off leading and trailing spaces
"RTN","IBCEP8C",290,0)
 ;
"RTN","IBCEP8C",291,0)
 N IBPRVNAM
"RTN","IBCEP8C",292,0)
 ;
"RTN","IBCEP8C",293,0)
 S IBPRVNAM=FBPRVNAM
"RTN","IBCEP8C",294,0)
 F  Q:$E(IBPRVNAM)'=" "  S IBPRVNAM=$E(IBPRVNAM,2,$L(IBPRVNAM))
"RTN","IBCEP8C",295,0)
 F  Q:$E(IBPRVNAM,$L(IBPRVNAM))'=" "  S IBPRVNAM=$E(FBPRVNAM,1,$L(IBPRVNAM)-1)
"RTN","IBCEP8C",296,0)
 Q IBPRVNAM
"RTN","IBCEP8C",297,0)
 ;
"RTN","IBCEP8C",298,0)
SETIBFDA(IBRTRN,IBFBINF,IBFDA,IBIEN)  ;Populates IBFDA ARRAY with update information
"RTN","IBCEP8C",299,0)
 ; INPUT : IBRTRN - an array with current IB information in it
"RTN","IBCEP8C",300,0)
 ;         IBFBINF - an array with information from FB in it
"RTN","IBCEP8C",301,0)
 ;         IBFDA  - the array which will be used to update the record
"RTN","IBCEP8C",302,0)
 ;         IBIEN  - the IEN of the IB record being updated
"RTN","IBCEP8C",303,0)
 ; 
"RTN","IBCEP8C",304,0)
 ; OUTPUT : POPULATED IBFDA ARRAY IF UPDATES ARE NEEDED
"RTN","IBCEP8C",305,0)
 I IBFBINF("IB TYPE")=1 D
"RTN","IBCEP8C",306,0)
 .I IBRTRN(355.93,IBIEN_",",".01","I")=IBPRVNAM D
"RTN","IBCEP8C",307,0)
 ..I IBRTRN(355.93,IBIEN_",",".05","I")'=$G(IBFBINF("FBADD1")) S IBFDA(355.93,IBIEN_",",.05)=IBFBINF("FBADD1")
"RTN","IBCEP8C",308,0)
 ..I IBRTRN(355.93,IBIEN_",",".1","I")'=$G(IBFBINF("FBADD2")) S IBFDA(355.93,IBIEN_",",.1)=IBFBINF("FBADD2")
"RTN","IBCEP8C",309,0)
 ..I IBRTRN(355.93,IBIEN_",",".06","I")'=$G(IBFBINF("FBCITY")) S IBFDA(355.93,IBIEN_",",.06)=IBFBINF("FBCITY")
"RTN","IBCEP8C",310,0)
 ..I IBRTRN(355.93,IBIEN_",",".07","I")'=$G(IBFBINF("FBSTATE INT")) S IBFDA(355.93,IBIEN_",",.07)=IBFBINF("FBSTATE INT")
"RTN","IBCEP8C",311,0)
 ..I IBRTRN(355.93,IBIEN_",",".08","I")'=$G(IBFBINF("FBZIP")) S IBFDA(355.93,IBIEN_",",.08)=IBFBINF("FBZIP")
"RTN","IBCEP8C",312,0)
 ..I IBRTRN(355.93,IBIEN_",",".09","I")'=$G(IBFBINF("FBFACID")) S IBFDA(355.93,IBIEN_",",.09)=IBFBINF("FBFACID")
"RTN","IBCEP8C",313,0)
 .I (IBRTRN(355.93,IBIEN_",",".01","I")'=IBPRVNAM) D
"RTN","IBCEP8C",314,0)
 ..; When the name changes, everything is wiped out, so needs to be saved again
"RTN","IBCEP8C",315,0)
 ..S IBFDA(355.93,IBIEN_",",.01)=IBPRVNAM
"RTN","IBCEP8C",316,0)
 ..I $G(IBFBINF("FBADD1"))'="" S IBFDA(355.93,IBIEN_",",.05)=IBFBINF("FBADD1")
"RTN","IBCEP8C",317,0)
 ..I $G(IBFBINF("FBADD2"))'="" S IBFDA(355.93,IBIEN_",",.1)=IBFBINF("FBADD2")
"RTN","IBCEP8C",318,0)
 ..I $G(IBFBINF("FBCITY"))'="" S IBFDA(355.93,IBIEN_",",.06)=IBFBINF("FBCITY")
"RTN","IBCEP8C",319,0)
 ..I $G(IBFBINF("FBSTATE"))'="" S IBFDA(355.93,IBIEN_",",.07)=IBFBINF("FBSTATE INT")
"RTN","IBCEP8C",320,0)
 ..I $G(IBFBINF("FBZIP"))'="" S IBFDA(355.93,IBIEN_",",.08)=IBFBINF("FBZIP")
"RTN","IBCEP8C",321,0)
 ..I $G(IBFBINF("FBFACID"))'="" S IBFDA(355.93,IBIEN_",",.09)=IBFBINF("FBFACID")
"RTN","IBCEP8C",322,0)
 I IBFBINF("IB TYPE")=2 D
"RTN","IBCEP8C",323,0)
 .I (IBRTRN(355.93,IBIEN_",",".01","I")'=IBPRVNAM) S IBFDA(355.93,IBIEN_",",.01)=IBPRVNAM
"RTN","IBCEP8C",324,0)
 Q
"RTN","IBCEP8C",325,0)
 ;
"RTN","IBCEP8C",326,0)
LOCK(IBIEN) ;Locks the #355.93 file or a record in it
"RTN","IBCEP8C",327,0)
 ; INPUT : IBIEN - the ien of the record to be locked NULL if a  new record is being added
"RTN","IBCEP8C",328,0)
 N IBLOCK
"RTN","IBCEP8C",329,0)
 ;
"RTN","IBCEP8C",330,0)
 S IBLOCK=1
"RTN","IBCEP8C",331,0)
 I $G(IBIEN)="" D
"RTN","IBCEP8C",332,0)
 .L +^IBA(355.93):3
"RTN","IBCEP8C",333,0)
 .I '$T S IBLOCK=0
"RTN","IBCEP8C",334,0)
 I $G(IBIEN)'="" D
"RTN","IBCEP8C",335,0)
 .L +^IBA(355.93,IBIEN):3
"RTN","IBCEP8C",336,0)
 .I '$T S IBLOCK=0
"RTN","IBCEP8C",337,0)
 Q IBLOCK
"RTN","IBCEP8C",338,0)
 ;
"RTN","IBCEP8C",339,0)
UNLOCK(IBIEN)  ; Unlocks the #355.93 file or a record in it
"RTN","IBCEP8C",340,0)
 ; INPUT : IBIEN - the ien of the record to be unlocked or NULL if a new record was added
"RTN","IBCEP8C",341,0)
 I $G(IBIEN)="" L -^IBA(355.93)
"RTN","IBCEP8C",342,0)
 I $G(IBIEN)'="" L -^IBA(355.93,IBIEN)
"RTN","IBCEP8C",343,0)
 Q
"RTN","IBCEP8C1")
0^4^B49680718^n/a
"RTN","IBCEP8C1",1,0)
IBCEP8C1 ;DSS/SCR - Functions for IB SILENT INTERFACE FROM FB ;03-27-12
"RTN","IBCEP8C1",2,0)
 ;;2.0;INTEGRATED BILLING;**476**;21-MAR-94;Build 2
"RTN","IBCEP8C1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP8C1",4,0)
 ;
"RTN","IBCEP8C1",5,0)
 ; This routine contains functions to support the Non-VA Items from the
"RTN","IBCEP8C1",6,0)
 ; Provider ID Maintenance Main Menu
"RTN","IBCEP8C1",7,0)
FBTGLGET(IBNPRV)  ;EP from IBCEP8B
"RTN","IBCEP8C1",8,0)
 ;  Provider ID Maintenance Main Menu
"RTN","IBCEP8C1",9,0)
 ;  for display on screens created for NP Non-VA Provider and NF Non-VA facility selections
"RTN","IBCEP8C1",10,0)
 ;
"RTN","IBCEP8C1",11,0)
 ; INPUTS: IBNPRV  : IEN of the IB NON/OTHER VA BILLING PROVIDER file
"RTN","IBCEP8C1",12,0)
 ;
"RTN","IBCEP8C1",13,0)
 ; OUTPUT : returns 1 if currently set to 'ALLOW' or not set, 0 if currently set to 'DISALLOW'
"RTN","IBCEP8C1",14,0)
 ;        : a NULL return indicates a DB read error
"RTN","IBCEP8C1",15,0)
 ;
"RTN","IBCEP8C1",16,0)
 N IBTGLNUM,IBTGLVAL,IBERR
"RTN","IBCEP8C1",17,0)
 ;
"RTN","IBCEP8C1",18,0)
 S IBTGLNUM=9999999
"RTN","IBCEP8C1",19,0)
 S IBTGLNUM=$O(^IBA(355.93,IBNPRV,3,IBTGLNUM),-1)   ;should return the most recent entry
"RTN","IBCEP8C1",20,0)
 I IBTGLNUM="" S IBTGLVAL=1
"RTN","IBCEP8C1",21,0)
 I IBTGLNUM'="" D
"RTN","IBCEP8C1",22,0)
 .S IBTGLVAL=$$GET1^DIQ(355.9351,IBTGLNUM_","_IBNPRV_",",".02","I","","IBERR")  ;355.9351 (#51) DATE/TIME ALLOW FB UPDATE
"RTN","IBCEP8C1",23,0)
 .I $G(IBERR("DIERR"))'="" S IBTGLVAL=""   ;
"RTN","IBCEP8C1",24,0)
 Q IBTGLVAL
"RTN","IBCEP8C1",25,0)
 ;
"RTN","IBCEP8C1",26,0)
FBTGLSET(IBNPRV)   ;EP from IBCEP8
"RTN","IBCEP8C1",27,0)
 ;INPUT IBNPRV : IEN of IB NON/OTHER VA BILLING PROVIDER
"RTN","IBCEP8C1",28,0)
 ;
"RTN","IBCEP8C1",29,0)
 N DIR,DTOUT,DUOUT,Y,DA,IBNEW,IBQUIT,IBOLD,IBLAST,IBNEXT
"RTN","IBCEP8C1",30,0)
 ;
"RTN","IBCEP8C1",31,0)
 S IBQUIT=0
"RTN","IBCEP8C1",32,0)
 S DIR(0)="Y"
"RTN","IBCEP8C1",33,0)
 S DIR("A")="Allow future updates by FEE BASIS automatic interface"
"RTN","IBCEP8C1",34,0)
 S DIR("?")="Enter YES to allow automatic updates, NO not to"
"RTN","IBCEP8C1",35,0)
 S DA=IBNPRV
"RTN","IBCEP8C1",36,0)
 S DIR("B")="YES"
"RTN","IBCEP8C1",37,0)
 S IBNEXT=0
"RTN","IBCEP8C1",38,0)
 S IBQUIT=0
"RTN","IBCEP8C1",39,0)
 F  S IBNEXT=$O(^IBA(355.93,IBNPRV,3,IBNEXT)) Q:'+IBNEXT  S IBLAST=IBNEXT
"RTN","IBCEP8C1",40,0)
 S:'+$G(IBLAST) IBOLD=1
"RTN","IBCEP8C1",41,0)
 S:+$G(IBLAST) IBOLD=$P($G(^IBA(355.93,IBNPRV,3,IBLAST,0)),U,2)
"RTN","IBCEP8C1",42,0)
 S:IBOLD=0 DIR("B")="NO"
"RTN","IBCEP8C1",43,0)
 S:IBOLD=1 DIR("B")="YES"
"RTN","IBCEP8C1",44,0)
 D ^DIR
"RTN","IBCEP8C1",45,0)
 I $G(DTOUT)=1!$G(DUOUT)=1 S IBQUIT=1
"RTN","IBCEP8C1",46,0)
 S IBNEW=Y
"RTN","IBCEP8C1",47,0)
 I IBNEW="" S IBQUIT=1   ;don't update if we couldn't read
"RTN","IBCEP8C1",48,0)
 I (IBNEW'=IBOLD)&'IBQUIT D
"RTN","IBCEP8C1",49,0)
 .N DO,DD,X,%,%H,%I,IBNOW,IBFDA,IBRET
"RTN","IBCEP8C1",50,0)
 .D NOW^%DTC
"RTN","IBCEP8C1",51,0)
 .S IBNOW=%
"RTN","IBCEP8C1",52,0)
 .S IBFDA(355.9351,"+1,"_IBNPRV_",",".01")=IBNOW   ;355.9351  ;(#51) DATE/TIME ALLOW FB UPDATE INTERNAL
"RTN","IBCEP8C1",53,0)
 .S IBFDA(355.9351,"+1,"_IBNPRV_",",".02")=IBNEW  ;(#.02)CHANGED TO [2S]
"RTN","IBCEP8C1",54,0)
 .S IBFDA(355.9351,"+1,"_IBNPRV_",",".03")=DUZ  ;(#.03) IB USER WHO CHANGED [3P:200]
"RTN","IBCEP8C1",55,0)
 .D UPDATE^DIE("","IBFDA","IBRET","IBERR")
"RTN","IBCEP8C1",56,0)
 Q
"RTN","IBCEP8C1",57,0)
 ;
"RTN","IBCEP8C1",58,0)
EPFBRPT()  ;EP FOR IB PROVIDER FROM FB STAT RPT OPTION
"RTN","IBCEP8C1",59,0)
 ;
"RTN","IBCEP8C1",60,0)
 N IBIEN,IBDATE,IBFROM,IBTO,IBSTYLE,DIR,Y,IBQUIT,IBTYPE
"RTN","IBCEP8C1",61,0)
 ;
"RTN","IBCEP8C1",62,0)
 S IBQUIT=0
"RTN","IBCEP8C1",63,0)
 ;FIRST PROMT FOR DATES
"RTN","IBCEP8C1",64,0)
 F  Q:IBQUIT  D
"RTN","IBCEP8C1",65,0)
 .D CLEAR()
"RTN","IBCEP8C1",66,0)
 .W ?3,"** SUMMARY OF NON-VA PROVIDERS AFFECTED BY FEE BASIS INTERFACE **"
"RTN","IBCEP8C1",67,0)
 .W !!!!!
"RTN","IBCEP8C1",68,0)
 .S DIR("A")="SELECT FIRST date to include in report"
"RTN","IBCEP8C1",69,0)
 .S DIR(0)="DE"
"RTN","IBCEP8C1",70,0)
 .D ^DIR
"RTN","IBCEP8C1",71,0)
 .I $D(DUOUT) S IBQUIT=1  ;DEFINED IF USER ENTERS ONE UP ARROW
"RTN","IBCEP8C1",72,0)
 .I $D(DIRUT) S IBQUIT=1  ;DEFINED IF USER ENTERS ""
"RTN","IBCEP8C1",73,0)
 .I $D(DTOUT) S IBQUIT=1  ;DEFINED IF USER TIMES OUT
"RTN","IBCEP8C1",74,0)
 .W:'IBQUIT " "_Y(0)
"RTN","IBCEP8C1",75,0)
 .I 'IBQUIT D
"RTN","IBCEP8C1",76,0)
 ..S IBFROM=+Y
"RTN","IBCEP8C1",77,0)
 ..S DIR("A")="SELECT LAST date to include in report"
"RTN","IBCEP8C1",78,0)
 ..S DIR(0)="D"
"RTN","IBCEP8C1",79,0)
 ..D ^DIR
"RTN","IBCEP8C1",80,0)
 ..I $D(DUOUT) S IBQUIT=1  ;DEFINED IF USER ENTERS ONE UP ARROW
"RTN","IBCEP8C1",81,0)
 ..I $D(DIRUT) S IBQUIT=1  ;DEFINED IF USER ENTERS ""
"RTN","IBCEP8C1",82,0)
 ..I $D(DTOUT) S IBQUIT=1  ;DEFINED IF USER TIMES OUT
"RTN","IBCEP8C1",83,0)
 ..W:'IBQUIT " "_Y(0)
"RTN","IBCEP8C1",84,0)
 ..I 'IBQUIT S IBTO=+Y
"RTN","IBCEP8C1",85,0)
 .I 'IBQUIT D IBRPT(IBFROM,IBTO)
"RTN","IBCEP8C1",86,0)
 K ^TMP($J,"IBCEP8C1")
"RTN","IBCEP8C1",87,0)
 Q
"RTN","IBCEP8C1",88,0)
 ;
"RTN","IBCEP8C1",89,0)
IBRPT(IBFROM,IBTO)  ;reports from 355.935 (#50)DATE/TIME LAST FB UPDATE
"RTN","IBCEP8C1",90,0)
 ;
"RTN","IBCEP8C1",91,0)
 ;INPUTS IBFROM : Records modified FROM this date will be considered
"RTN","IBCEP8C1",92,0)
 ;       IBTO   : Records modified TO this date will be considered
"RTN","IBCEP8C1",93,0)
 ;
"RTN","IBCEP8C1",94,0)
 K ^TMP($J,"IBCEP8C1")
"RTN","IBCEP8C1",95,0)
 N IBNEXT,IBARRAY,IBIEN,IBCHKIEN
"RTN","IBCEP8C1",96,0)
 ;S DIC=355.93       ;IB NON/OTHER VA BILLING PROVIDER FILE
"RTN","IBCEP8C1",97,0)
 ;IBA(355.93,D0,4,0)=^355.935DA^^  (#50) DATE/TIME LAST FB UPDATE
"RTN","IBCEP8C1",98,0)
 S IBIEN=0
"RTN","IBCEP8C1",99,0)
 S IBNEXT=$P(IBFROM,".",1)_"."_0  ;first second of from date
"RTN","IBCEP8C1",100,0)
 F  S IBIEN=$O(^IBA(355.93,IBIEN)) Q:'+IBIEN  D
"RTN","IBCEP8C1",101,0)
 .S IBNEXT=IBFROM
"RTN","IBCEP8C1",102,0)
 .F  S IBNEXT=$O(^IBA(355.93,IBIEN,4,"B",IBNEXT)) Q:(IBNEXT>(IBTO+1))!(IBNEXT="")  D
"RTN","IBCEP8C1",103,0)
 ..S IBSUB=0  ;GATHER CHANGES FOR THIS DATE
"RTN","IBCEP8C1",104,0)
 ..F  S IBSUB=$O(^IBA(355.93,IBIEN,4,"B",IBNEXT,IBSUB)) Q:IBSUB=""  D
"RTN","IBCEP8C1",105,0)
 ...S ^TMP($J,"IBCEP8C1",IBNEXT,IBIEN,IBSUB)=^IBA(355.93,IBIEN,4,IBSUB,0)
"RTN","IBCEP8C1",106,0)
 ;Now count records by date
"RTN","IBCEP8C1",107,0)
 S ^TMP($J,"IBCEP8C1",0)=0  ;HOLDS THE NUMBER OF RECORDS MODIFIED BY THE INTERFACE FOR TIME FRAME
"RTN","IBCEP8C1",108,0)
 S ^TMP($J,"IBCEP8C1",0,1)=0 ;HOLDS THE NUMBER RECORDS CREATED BY THE INTERFACE FOR TIME FRAME
"RTN","IBCEP8C1",109,0)
 S IBNEXT=0
"RTN","IBCEP8C1",110,0)
 F  S IBNEXT=$O(^TMP($J,"IBCEP8C1",IBNEXT)) Q:IBNEXT=""  D
"RTN","IBCEP8C1",111,0)
 .S ^TMP($J,"IBCEP8C1",IBNEXT,0)=0  ;HOLDS THE NUMBER OF RECORDS MODIFIED BY THE INTERFACE FOR A DATE
"RTN","IBCEP8C1",112,0)
 .S ^TMP($J,"IBCEP8C1",IBNEXT,0,1)=0  ;HOLDS THE NUMBER OF RECORDS CREATED BY THE INTERFACE FOR A DATE
"RTN","IBCEP8C1",113,0)
 .S IBIEN=0
"RTN","IBCEP8C1",114,0)
 .F  S IBIEN=$O(^TMP($J,"IBCEP8C1",IBNEXT,IBIEN)) Q:IBIEN=""  D
"RTN","IBCEP8C1",115,0)
 ..S IBSUB=$O(^TMP($J,"IBCEP8C1",IBNEXT,IBIEN,0))
"RTN","IBCEP8C1",116,0)
 ..I $P(^TMP($J,"IBCEP8C1",IBNEXT,IBIEN,IBSUB),U,3)'=1 D
"RTN","IBCEP8C1",117,0)
 ...S ^TMP($J,"IBCEP8C1",IBNEXT,0)=$G(^TMP($J,"IBCEP8C1",IBNEXT,0))+1
"RTN","IBCEP8C1",118,0)
 ...S ^TMP($J,"IBCEP8C1",0)=$G(^TMP($J,"IBCEP8C1",0))+1
"RTN","IBCEP8C1",119,0)
 ..I $P(^TMP($J,"IBCEP8C1",IBNEXT,IBIEN,IBSUB),U,3)=1 D
"RTN","IBCEP8C1",120,0)
 ...S ^TMP($J,"IBCEP8C1",IBNEXT,0,1)=$G(^TMP($J,"IBCEP8C1",IBNEXT,0,1))+1
"RTN","IBCEP8C1",121,0)
 ...S ^TMP($J,"IBCEP8C1",0,1)=$G(^TMP($J,"IBCEP8C1",0,1))+1
"RTN","IBCEP8C1",122,0)
 D DAYIBRPT(IBTO,IBFROM)
"RTN","IBCEP8C1",123,0)
 Q
"RTN","IBCEP8C1",124,0)
 ;
"RTN","IBCEP8C1",125,0)
DAYIBRPT(IBTO,IBFROM)  ;PRINTS RECORDS BY DAY THAT WERE MODIFIED BY FB
"RTN","IBCEP8C1",126,0)
 ;
"RTN","IBCEP8C1",127,0)
 ;
"RTN","IBCEP8C1",128,0)
 N DIR,DUOUT,DIRUT,DTOUT,IBQUIT,IBIEN,X,Y,IBSUB,IBTYPE,IBDAT1,IBDAT2,IBDATE,IBIENS,IBSUBS
"RTN","IBCEP8C1",129,0)
 S IBQUIT=0
"RTN","IBCEP8C1",130,0)
 S %ZIS("A")="OUTPUT DEVICE: "
"RTN","IBCEP8C1",131,0)
 D ^%ZIS
"RTN","IBCEP8C1",132,0)
 I POP S IBQUIT=1 Q
"RTN","IBCEP8C1",133,0)
 S Y=IBFROM
"RTN","IBCEP8C1",134,0)
 D DD^%DT
"RTN","IBCEP8C1",135,0)
 S IBDAT1=Y
"RTN","IBCEP8C1",136,0)
 S Y=IBTO
"RTN","IBCEP8C1",137,0)
 D DD^%DT
"RTN","IBCEP8C1",138,0)
 S IBDAT2=Y
"RTN","IBCEP8C1",139,0)
 W !,?15,"*** IB PROVIDER FROM FB SUMMARY LISTING ***"
"RTN","IBCEP8C1",140,0)
 W !,?25,IBDAT1_" - "_IBDAT2
"RTN","IBCEP8C1",141,0)
 W !!,?3,"Includes information about records in the IB NON/OTHER BILLING PROVIDER"
"RTN","IBCEP8C1",142,0)
 W !,?3,"file modified by the FB PAID TO IB automatic interface for date range"
"RTN","IBCEP8C1",143,0)
 W !
"RTN","IBCEP8C1",144,0)
 S IBDATE=0
"RTN","IBCEP8C1",145,0)
 W !,?13,"TOTAL RECORDS MODIFIED FOR DATE RANGE: "_^TMP($J,"IBCEP8C1",0)
"RTN","IBCEP8C1",146,0)
 W !?16,"TOTAL RECORDS CREATED FOR DATE RANGE: "_^TMP($J,"IBCEP8C1",0,1)
"RTN","IBCEP8C1",147,0)
 F  S IBDATE=$O(^TMP($J,"IBCEP8C1",IBDATE)) Q:(IBDATE=""!IBQUIT)  D
"RTN","IBCEP8C1",148,0)
 .S Y=IBDATE
"RTN","IBCEP8C1",149,0)
 .D DD^%DT
"RTN","IBCEP8C1",150,0)
 .W !!,?3,"FB PROCESS DATE: "_Y
"RTN","IBCEP8C1",151,0)
 .W !,?5,"TOTAL RECORDS MODIFIED FOR THIS DATE: "_^TMP($J,"IBCEP8C1",IBDATE,0)
"RTN","IBCEP8C1",152,0)
 .W !,?8,"TOTAL RECORDS CREATED FOR THIS DATE: "_$G(^TMP($J,"IBCEP8C1",IBDATE,0,1))
"RTN","IBCEP8C1",153,0)
 .S IBIEN=0
"RTN","IBCEP8C1",154,0)
 .F  S IBIEN=$O(^TMP($J,"IBCEP8C1",IBDATE,IBIEN)) Q:IBIEN=""  D GETS^DIQ(355.93,IBIEN_",","**","","IBRET")
"RTN","IBCEP8C1",155,0)
 .S IBIEN=0
"RTN","IBCEP8C1",156,0)
 .S IBQUIT=0
"RTN","IBCEP8C1",157,0)
 .W !!,?3,"PROVIDER",?38,"NPI",?52,"TYPE",?63,"CREATED BY FB"
"RTN","IBCEP8C1",158,0)
 .W !,?3,"--------------------------------------------------------------------------"
"RTN","IBCEP8C1",159,0)
 .F  S IBIEN=$O(^TMP($J,"IBCEP8C1",IBDATE,IBIEN)) Q:(IBIEN="")!IBQUIT  D
"RTN","IBCEP8C1",160,0)
 ..W !,?3,$G(IBRET(355.93,IBIEN_",",.01))
"RTN","IBCEP8C1",161,0)
 ..S IBIENS=IBIEN_","
"RTN","IBCEP8C1",162,0)
 ..W ?38,$G(IBRET(355.93,IBIENS,41.01))
"RTN","IBCEP8C1",163,0)
 ..W ?52,$G(IBRET(355.93,IBIENS,.02))
"RTN","IBCEP8C1",164,0)
 ..S IBSUB=$O(^TMP($J,"IBCEP8C1",IBDATE,IBIEN,""))
"RTN","IBCEP8C1",165,0)
 ..S IBSUBS=IBSUB_","_IBIEN_","
"RTN","IBCEP8C1",166,0)
 ..W:$G(IBRET(355.935,IBSUBS,.03))'="" ?68,$G(IBRET(355.935,IBSUBS,.03))
"RTN","IBCEP8C1",167,0)
 ..W:$G(IBRET(355.935,IBSUBS,.03))="" ?68,"NO"
"RTN","IBCEP8C1",168,0)
 .I (IOT="VTRM") D
"RTN","IBCEP8C1",169,0)
 ..W !
"RTN","IBCEP8C1",170,0)
 ..S DIR("A")="Enter RETURN to continue or '^' to exit"
"RTN","IBCEP8C1",171,0)
 ..S DIR(0)="FO"
"RTN","IBCEP8C1",172,0)
 ..D ^DIR
"RTN","IBCEP8C1",173,0)
 ..I $D(DUOUT) S IBQUIT=1  ;DEFINED IF USER ENTERS ONE UP ARROWS
"RTN","IBCEP8C1",174,0)
 ..I $D(DTOUT) S IBQUIT=1  ;DEFINED IF USER TIMES OUT
"RTN","IBCEP8C1",175,0)
 ..I $O(^TMP($J,"IBCEP8C1",IBDATE))'="" D
"RTN","IBCEP8C1",176,0)
 ...W !!,?15,"*** IB PROVIDER FROM FB SUMMARY LISTING (CONT.)***"
"RTN","IBCEP8C1",177,0)
 ...W !,?25,IBDAT1_" - "_IBDAT2
"RTN","IBCEP8C1",178,0)
 .Q:IBQUIT
"RTN","IBCEP8C1",179,0)
 Q 
"RTN","IBCEP8C1",180,0)
 ;
"RTN","IBCEP8C1",181,0)
CLEAR()   ;clears screen between reports
"RTN","IBCEP8C1",182,0)
 N IBLINE
"RTN","IBCEP8C1",183,0)
 F IBLINE=1:1:15 W !
"RTN","IBCEP8C1",184,0)
 Q
"SEC","^DIC",355.93,355.93,0,"AUDIT")
@
"SEC","^DIC",355.93,355.93,0,"DD")
@
"SEC","^DIC",355.93,355.93,0,"DEL")

"SEC","^DIC",355.93,355.93,0,"LAYGO")

"SEC","^DIC",355.93,355.93,0,"RD")

"SEC","^DIC",355.93,355.93,0,"WR")

"VER")
8.0^22.0
"^DD",355.93,355.93,0)
FIELD^^50^23
"^DD",355.93,355.93,0,"DDA")
N
"^DD",355.93,355.93,0,"DT")
3120530
"^DD",355.93,355.93,0,"ID",.02)
W "   ",@("$P($P($C(59)_$S($D(^DD(355.93,.02,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,2)_"":"",2),$C(59),1)")
"^DD",355.93,355.93,0,"IX","B",355.93,.01)

"^DD",355.93,355.93,0,"IX","NPI",355.93,41.01)

"^DD",355.93,355.93,0,"IX","NPIHISTORY",355.93,41.01)

"^DD",355.93,355.93,0,"IX","TAXSTATUS",355.9342,.03)

"^DD",355.93,355.93,0,"NM","IB NON/OTHER VA BILLING PROVIDER")

"^DD",355.93,355.93,0,"PT",161.9,.07)

"^DD",355.93,355.93,0,"PT",355.9,.01)

"^DD",355.93,355.93,0,"PT",399,232)

"^DD",355.93,355.93,0,"PT",399.0222,.02)

"^DD",355.93,355.93,0,"PT",399.0404,.02)

"^DD",355.93,355.93,0,"VRPK")
IB
"^DD",355.93,355.93,.01,0)
NAME^RFX^^0;1^K:($L(X)>30)!($L(X)<3) X I $D(X) D PRVFMT^IBCEP8
"^DD",355.93,355.93,.01,1,0)
^.1
"^DD",355.93,355.93,.01,1,1,0)
355.93^B
"^DD",355.93,355.93,.01,1,1,1)
S ^IBA(355.93,"B",$E(X,1,30),DA)=""
"^DD",355.93,355.93,.01,1,1,2)
K ^IBA(355.93,"B",$E(X,1,30),DA)
"^DD",355.93,355.93,.01,1,2,0)
^^TRIGGER^355.93^.02
"^DD",355.93,355.93,.01,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=IBFLPFLP I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=IBFLPFLP X ^DD(355.93,.01,1,2,1.4)
"^DD",355.93,355.93,.01,1,2,1.4)
S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,2)=DIV,DIH=355.93,DIG=.02 D ^DICR
"^DD",355.93,355.93,.01,1,2,2)
Q
"^DD",355.93,355.93,.01,1,2,3)
Do not delete
"^DD",355.93,355.93,.01,1,2,"%D",0)
^^3^3^3100720^
"^DD",355.93,355.93,.01,1,2,"%D",1,0)
Trigger to change provider type based on user input during add/edit of the
"^DD",355.93,355.93,.01,1,2,"%D",2,0)
NAME field (#.01).  Population of this field is based on the value of the
"^DD",355.93,355.93,.01,1,2,"%D",3,0)
IBFLPFLP variable returned by the NAME field input transform.
"^DD",355.93,355.93,.01,1,2,"CREATE CONDITION")
S X=IBFLPFLP
"^DD",355.93,355.93,.01,1,2,"CREATE VALUE")
S X=IBFLPFLP
"^DD",355.93,355.93,.01,1,2,"DELETE VALUE")
NO EFFECT
"^DD",355.93,355.93,.01,1,2,"DT")
3100707
"^DD",355.93,355.93,.01,1,2,"FIELD")
PROVIDER TYPE
"^DD",355.93,355.93,.01,3)
Enter the name of a NON-VA provider/facility or other VA.  Name must start with a letter and can have letters,numbers,comma,space,dash only.  Names aren't valid if they exist in the NEW PERSON file.
"^DD",355.93,355.93,.01,21,0)
^.001^26^26^3100913^^^^
"^DD",355.93,355.93,.01,21,1,0)
This is the name of either an individual NON-VA
"^DD",355.93,355.93,.01,21,2,0)
provider or a NON-VA or another VA facility
"^DD",355.93,355.93,.01,21,3,0)
that provides services to the V.A. for which
"^DD",355.93,355.93,.01,21,4,0)
the V.A. can in turn bill an insurance company
"^DD",355.93,355.93,.01,21,5,0)
for reimbursement.  
"^DD",355.93,355.93,.01,21,6,0)
 
"^DD",355.93,355.93,.01,21,7,0)
For individual type entries:
"^DD",355.93,355.93,.01,21,8,0)
The name should be entered in LAST,FIRST MIDDLE
"^DD",355.93,355.93,.01,21,9,0)
format.  Enter only data that is actually part
"^DD",355.93,355.93,.01,21,10,0)
of the provider's name. Do not include extra
"^DD",355.93,355.93,.01,21,11,0)
titles, identification, flags, local information,
"^DD",355.93,355.93,.01,21,12,0)
etc.  All individual provider names will be
"^DD",355.93,355.93,.01,21,13,0)
converted to the 'standardized' format. 
"^DD",355.93,355.93,.01,21,14,0)
'Standardized' for individuals means all
"^DD",355.93,355.93,.01,21,15,0)
punctuation except '-' and space are removed,
"^DD",355.93,355.93,.01,21,16,0)
the name is changed to all uppercase, 2 or more
"^DD",355.93,355.93,.01,21,17,0)
successive '-' or spaces are converted to a
"^DD",355.93,355.93,.01,21,18,0)
single '-' or space and any words for birth
"^DD",355.93,355.93,.01,21,19,0)
position (1ST-10TH) are changed to their Roman
"^DD",355.93,355.93,.01,21,20,0)
numeral equivalents. 
"^DD",355.93,355.93,.01,21,21,0)
 
"^DD",355.93,355.93,.01,21,22,0)
For facility type entries:
"^DD",355.93,355.93,.01,21,23,0)
The name MUST start with an Alpha character. The
"^DD",355.93,355.93,.01,21,24,0)
name may contain numerals, spaces, commas,
"^DD",355.93,355.93,.01,21,25,0)
periods, and a hyphen or dash.  No other
"^DD",355.93,355.93,.01,21,26,0)
punctuation characters are allowed in the name.
"^DD",355.93,355.93,.01,"DT")
3100917
"^DD",355.93,355.93,.02,0)
PROVIDER TYPE^SX^1:FACILITY/GROUP;2:INDIVIDUAL;^0;2^K:$L(X)>1!($L(X)<1) X
"^DD",355.93,355.93,.02,1,0)
^.1
"^DD",355.93,355.93,.02,1,1,0)
^^TRIGGER^355.93^.03
"^DD",355.93,355.93,.02,1,1,1)
Q
"^DD",355.93,355.93,.02,1,1,2)
X ^DD(355.93,.02,1,1,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=355.93,DIG=.03 D ^DICR
"^DD",355.93,355.93,.02,1,1,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$P($G(^DD(355.93,.02,0)),U,3) S X=$P($P(Y(1),$C(59)_X_":",2),$C(59))="INDIVIDUAL"
"^DD",355.93,355.93,.02,1,1,3)
Do not delete
"^DD",355.93,355.93,.02,1,1,"%D",0)
^.101^2^2^3100722^^
"^DD",355.93,355.93,.02,1,1,"%D",1,0)
This trigger deletes the value of the CREDENTIALS field if the type is
"^DD",355.93,355.93,.02,1,1,"%D",2,0)
no longer an individual provider type.
"^DD",355.93,355.93,.02,1,1,"CREATE VALUE")
NO EFFECT
"^DD",355.93,355.93,.02,1,1,"DELETE CONDITION")
OLD PROVIDER TYPE="INDIVIDUAL"
"^DD",355.93,355.93,.02,1,1,"DELETE VALUE")
@
"^DD",355.93,355.93,.02,1,1,"DT")
3100720
"^DD",355.93,355.93,.02,1,1,"FIELD")
CRE
"^DD",355.93,355.93,.02,1,2,0)
^^TRIGGER^355.93^.04
"^DD",355.93,355.93,.02,1,2,1)
Q
"^DD",355.93,355.93,.02,1,2,2)
X ^DD(355.93,.02,1,2,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,4)=DIV,DIH=355.93,DIG=.04 D ^DICR
"^DD",355.93,355.93,.02,1,2,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$P($G(^DD(355.93,.02,0)),U,3) S X=$P($P(Y(1),$C(59)_X_":",2),$C(59))="INDIVIDUAL"
"^DD",355.93,355.93,.02,1,2,3)
Do not delete
"^DD",355.93,355.93,.02,1,2,"%D",0)
^.101^2^2^3100722^^
"^DD",355.93,355.93,.02,1,2,"%D",1,0)
This trigger deletes the value of the SPECIALTY field if the type is
"^DD",355.93,355.93,.02,1,2,"%D",2,0)
no longer an individual provider type.
"^DD",355.93,355.93,.02,1,2,"CREATE VALUE")
NO EFFECT
"^DD",355.93,355.93,.02,1,2,"DELETE CONDITION")
OLD PROVIDER TYPE="INDIVIDUAL"
"^DD",355.93,355.93,.02,1,2,"DELETE VALUE")
@
"^DD",355.93,355.93,.02,1,2,"DT")
3100720
"^DD",355.93,355.93,.02,1,2,"FIELD")
SPE
"^DD",355.93,355.93,.02,1,3,0)
^^TRIGGER^355.93^.05
"^DD",355.93,355.93,.02,1,3,1)
Q
"^DD",355.93,355.93,.02,1,3,2)
X ^DD(355.93,.02,1,3,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,5)=DIV,DIH=355.93,DIG=.05 D ^DICR
"^DD",355.93,355.93,.02,1,3,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$P($G(^DD(355.93,.02,0)),U,3) S X=$P($P(Y(1),$C(59)_X_":",2),$C(59))="FACILITY/GROUP"
"^DD",355.93,355.93,.02,1,3,3)
Do not delete
"^DD",355.93,355.93,.02,1,3,"%D",0)
^.101^2^2^3100722^^
"^DD",355.93,355.93,.02,1,3,"%D",1,0)
This trigger deletes the value of the STREET ADDRESS field if the type is
"^DD",355.93,355.93,.02,1,3,"%D",2,0)
no longer a facility type provider.
"^DD",355.93,355.93,.02,1,3,"CREATE VALUE")
NO EFFECT
"^DD",355.93,355.93,.02,1,3,"DELETE CONDITION")
OLD PROVIDER TYPE="FACILITY/GROUP"
"^DD",355.93,355.93,.02,1,3,"DELETE VALUE")
@
"^DD",355.93,355.93,.02,1,3,"DT")
3100720
"^DD",355.93,355.93,.02,1,3,"FIELD")
STREET ADDRESS
"^DD",355.93,355.93,.02,1,4,0)
^^TRIGGER^355.93^.06
"^DD",355.93,355.93,.02,1,4,1)
Q
"^DD",355.93,355.93,.02,1,4,2)
X ^DD(355.93,.02,1,4,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,6)=DIV,DIH=355.93,DIG=.06 D ^DICR
"^DD",355.93,355.93,.02,1,4,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$P($G(^DD(355.93,.02,0)),U,3) S X=$P($P(Y(1),$C(59)_X_":",2),$C(59))="FACILITY/GROUP"
"^DD",355.93,355.93,.02,1,4,3)
Do not delete
"^DD",355.93,355.93,.02,1,4,"%D",0)
^.101^2^2^3100722^^
"^DD",355.93,355.93,.02,1,4,"%D",1,0)
This trigger deletes the value of the CITY field if the type is 
"^DD",355.93,355.93,.02,1,4,"%D",2,0)
no longer a facility type provider.
"^DD",355.93,355.93,.02,1,4,"CREATE VALUE")
NO EFFECT
"^DD",355.93,355.93,.02,1,4,"DELETE CONDITION")
OLD PROVIDER TYPE="FACILITY/GROUP"
"^DD",355.93,355.93,.02,1,4,"DELETE VALUE")
@
"^DD",355.93,355.93,.02,1,4,"DT")
3100720
"^DD",355.93,355.93,.02,1,4,"FIELD")
CITY
"^DD",355.93,355.93,.02,1,5,0)
^^TRIGGER^355.93^.07
"^DD",355.93,355.93,.02,1,5,1)
Q
"^DD",355.93,355.93,.02,1,5,2)
X ^DD(355.93,.02,1,5,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,7)=DIV,DIH=355.93,DIG=.07 D ^DICR
"^DD",355.93,355.93,.02,1,5,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$P($G(^DD(355.93,.02,0)),U,3) S X=$P($P(Y(1),$C(59)_X_":",2),$C(59))="FACILITY/GROUP"
"^DD",355.93,355.93,.02,1,5,3)
Do not delete
"^DD",355.93,355.93,.02,1,5,"%D",0)
^.101^2^2^3100722^^
"^DD",355.93,355.93,.02,1,5,"%D",1,0)
This trigger deletes the value of the STATE field if the type is 
"^DD",355.93,355.93,.02,1,5,"%D",2,0)
no longer a facility type provider.
"^DD",355.93,355.93,.02,1,5,"CREATE VALUE")
NO EFFECT
"^DD",355.93,355.93,.02,1,5,"DELETE CONDITION")
OLD PROVIDER TYPE="FACILITY/GROUP"
"^DD",355.93,355.93,.02,1,5,"DELETE VALUE")
@
"^DD",355.93,355.93,.02,1,5,"DT")
3100720
"^DD",355.93,355.93,.02,1,5,"FIELD")
STATE
"^DD",355.93,355.93,.02,1,6,0)
^^TRIGGER^355.93^.08
"^DD",355.93,355.93,.02,1,6,1)
Q
"^DD",355.93,355.93,.02,1,6,2)
X ^DD(355.93,.02,1,6,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,8)=DIV,DIH=355.93,DIG=.08 D ^DICR
"^DD",355.93,355.93,.02,1,6,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$P($G(^DD(355.93,.02,0)),U,3) S X=$P($P(Y(1),$C(59)_X_":",2),$C(59))="FACILITY/GROUP"
"^DD",355.93,355.93,.02,1,6,3)
Do not delete
"^DD",355.93,355.93,.02,1,6,"%D",0)
^^2^2^3100722^
"^DD",355.93,355.93,.02,1,6,"%D",1,0)
This trigger deletes the value of the ZIP CODE field if the type is
"^DD",355.93,355.93,.02,1,6,"%D",2,0)
no longer a facility type provider.
"^DD",355.93,355.93,.02,1,6,"CREATE VALUE")
NO EFFECT
"^DD",355.93,355.93,.02,1,6,"DELETE CONDITION")
OLD PROVIDER TYPE="FACILITY/GROUP"
"^DD",355.93,355.93,.02,1,6,"DELETE VALUE")
@
"^DD",355.93,355.93,.02,1,6,"DT")
3100720
"^DD",355.93,355.93,.02,1,6,"FIELD")
ZIP 
"^DD",355.93,355.93,.02,1,7,0)
^^TRIGGER^355.93^.09
"^DD",355.93,355.93,.02,1,7,1)
Q
"^DD",355.93,355.93,.02,1,7,2)
X ^DD(355.93,.02,1,7,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,9)=DIV,DIH=355.93,DIG=.09 D ^DICR
"^DD",355.93,355.93,.02,1,7,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$P($G(^DD(355.93,.02,0)),U,3) S X=$P($P(Y(1),$C(59)_X_":",2),$C(59))="FACILITY/GROUP"
"^DD",355.93,355.93,.02,1,7,3)
Do not delete
"^DD",355.93,355.93,.02,1,7,"%D",0)
^.101^2^2^3100722^^
"^DD",355.93,355.93,.02,1,7,"%D",1,0)
This trigger deletes the value of the FACILITY DEFAULT ID NUMBER field if
"^DD",355.93,355.93,.02,1,7,"%D",2,0)
the type is no longer a facility type provider.
"^DD",355.93,355.93,.02,1,7,"CREATE VALUE")
NO EFFECT
"^DD",355.93,355.93,.02,1,7,"DELETE CONDITION")
OLD PROVIDER TYPE="FACILITY/GROUP"
"^DD",355.93,355.93,.02,1,7,"DELETE VALUE")
@
"^DD",355.93,355.93,.02,1,7,"DT")
3100720
"^DD",355.93,355.93,.02,1,7,"FIELD")
FACILITY DEFAULT ID NUMBER
"^DD",355.93,355.93,.02,1,8,0)
^^TRIGGER^355.93^.1
"^DD",355.93,355.93,.02,1,8,1)
Q
"^DD",355.93,355.93,.02,1,8,2)
X ^DD(355.93,.02,1,8,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,10)=DIV,DIH=355.93,DIG=.1 D ^DICR
"^DD",355.93,355.93,.02,1,8,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$P($G(^DD(355.93,.02,0)),U,3) S X=$P($P(Y(1),$C(59)_X_":",2),$C(59))="FACILITY/GROUP"
"^DD",355.93,355.93,.02,1,8,3)
Do not delete
"^DD",355.93,355.93,.02,1,8,"%D",0)
^^2^2^3100722^
"^DD",355.93,355.93,.02,1,8,"%D",1,0)
This trigger deletes the value of the STREET ADDRESS LINE 2 field if the
"^DD",355.93,355.93,.02,1,8,"%D",2,0)
provider type is no longer a facility type provider.
"^DD",355.93,355.93,.02,1,8,"CREATE VALUE")
NO EFFECT
"^DD",355.93,355.93,.02,1,8,"DELETE CONDITION")
OLD PROVIDER TYPE="FACILITY/GROUP"
"^DD",355.93,355.93,.02,1,8,"DELETE VALUE")
@
"^DD",355.93,355.93,.02,1,8,"DT")
3100720
"^DD",355.93,355.93,.02,1,8,"FIELD")
STREET ADDRESS LINE 2
"^DD",355.93,355.93,.02,1,9,0)
^^TRIGGER^355.93^.13
"^DD",355.93,355.93,.02,1,9,1)
X ^DD(355.93,.02,1,9,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV S X="16" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,13)=DIV,DIH=355.93,DIG=.13 D ^DICR
"^DD",355.93,355.93,.02,1,9,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=Y(0),X=X S X=X="1",Y(1)=$G(X) S X=$P(Y(2),U,9)]"",Y=X,X=Y(1),X=X&Y
"^DD",355.93,355.93,.02,1,9,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,13)=DIV,DIH=355.93,DIG=.13 D ^DICR
"^DD",355.93,355.93,.02,1,9,"%D",0)
^^3^3^3100722^
"^DD",355.93,355.93,.02,1,9,"%D",1,0)
This trigger sets the primary id qualifier to the default value of 16 if 
"^DD",355.93,355.93,.02,1,9,"%D",2,0)
the provider type is a facility and the FACILITY DEFAULT ID NUMBER is 
"^DD",355.93,355.93,.02,1,9,"%D",3,0)
not null.
"^DD",355.93,355.93,.02,1,9,"CREATE CONDITION")
INTERNAL(PROVIDER TYPE)="1"&(FACILITY DEFAULT ID NUMBER]"")
"^DD",355.93,355.93,.02,1,9,"CREATE VALUE")
"16"
"^DD",355.93,355.93,.02,1,9,"DELETE VALUE")
@
"^DD",355.93,355.93,.02,1,9,"DT")
3100720
"^DD",355.93,355.93,.02,1,9,"FIELD")
PRIMARY ID QUALIFIER
"^DD",355.93,355.93,.02,3)
Enter 1 or 2 to designate this entry as a facility or an individual.
"^DD",355.93,355.93,.02,5,1,0)
355.93^.01^2
"^DD",355.93,355.93,.02,21,0)
^^5^5^3100722^
"^DD",355.93,355.93,.02,21,1,0)
This field identifies the type of provider being defined.  Facility
"^DD",355.93,355.93,.02,21,2,0)
providers can be used to fill in the name and address of the non-VA
"^DD",355.93,355.93,.02,21,3,0)
facility where services were rendered (box 32 on the CMS-1500).  An
"^DD",355.93,355.93,.02,21,4,0)
individual provider can be selected as the rendering, attending,
"^DD",355.93,355.93,.02,21,5,0)
referring or operating provider on a bill.
"^DD",355.93,355.93,.02,"DT")
3100722
"^DD",355.93,355.93,.03,0)
CREDENTIALS^FX^^0;3^K:$L(X)>3!($L(X)<1) X I $D(X),$P($G(^IBA(355.93,DA,0)),U,2)'=2 K X
"^DD",355.93,355.93,.03,3)
Answer must be 1-3 characters in length.
"^DD",355.93,355.93,.03,5,1,0)
355.93^.02^1
"^DD",355.93,355.93,.03,21,0)
^.001^2^2^3001004^^^^
"^DD",355.93,355.93,.03,21,1,0)
This is the 1 to 3 digits that represents the credentials for this
"^DD",355.93,355.93,.03,21,2,0)
provider.  This field is only valid for INDIVIDUAL providers.
"^DD",355.93,355.93,.03,"DT")
3001005
"^DD",355.93,355.93,.04,0)
SPECIALTY^FX^^0;4^K:$L(X)>2!($L(X)<2) X I $D(X),$P($G(^IBA(355.93,DA,0)),U,2)'=2 K X
"^DD",355.93,355.93,.04,3)
Answer must be 2 characters in length.
"^DD",355.93,355.93,.04,5,1,0)
355.93^.02^2
"^DD",355.93,355.93,.04,21,0)
^.001^2^2^3000831^^^
"^DD",355.93,355.93,.04,21,1,0)
This is the 2 digits that represent the specialty for this provider.
"^DD",355.93,355.93,.04,21,2,0)
This field is only valid for INDIVIDUAL providers.
"^DD",355.93,355.93,.04,"DT")
3001005
"^DD",355.93,355.93,.05,0)
STREET ADDRESS^FX^^0;5^K:$L(X)>30!($L(X)<1) X I $D(X),$P($G(^IBA(355.93,DA,0)),U,2)'=1 K X
"^DD",355.93,355.93,.05,3)
Answer must be 1-30 characters in length.
"^DD",355.93,355.93,.05,5,1,0)
355.93^.02^3
"^DD",355.93,355.93,.05,21,0)
^.001^3^3^3000831^^^^
"^DD",355.93,355.93,.05,21,1,0)
This is the street address of the non-VA facility that rendered
"^DD",355.93,355.93,.05,21,2,0)
the care that is being billed by the VA.  It is only valid for FACILITY
"^DD",355.93,355.93,.05,21,3,0)
providers.
"^DD",355.93,355.93,.05,"DT")
3001005
"^DD",355.93,355.93,.06,0)
CITY^FX^^0;6^K:$L(X)>20!($L(X)<1) X I $D(X),$P($G(^IBA(355.93,DA,0)),U,2)'=1 K X
"^DD",355.93,355.93,.06,3)
Answer must be 1-20 characters in length.
"^DD",355.93,355.93,.06,5,1,0)
355.93^.02^4
"^DD",355.93,355.93,.06,21,0)
^.001^2^2^3000831^^
"^DD",355.93,355.93,.06,21,1,0)
This is the city of the non-VA facility that rendered the care that is
"^DD",355.93,355.93,.06,21,2,0)
being billed by the VA.  It is only valid for FACILITY providers.
"^DD",355.93,355.93,.06,"DT")
3001005
"^DD",355.93,355.93,.07,0)
STATE^P5'X^DIC(5,^0;7^I $D(X),$P($G(^IBA(355.93,DA,0)),U,2)'=1 K X
"^DD",355.93,355.93,.07,3)
Enter a valid state where the facility is located
"^DD",355.93,355.93,.07,5,1,0)
355.93^.02^5
"^DD",355.93,355.93,.07,21,0)
^.001^2^2^3000831^^
"^DD",355.93,355.93,.07,21,1,0)
This is the state of the non-VA facility that rendered the care that is
"^DD",355.93,355.93,.07,21,2,0)
being billed by the VA.  It is only valid for FACILITY providers.
"^DD",355.93,355.93,.07,"DT")
3001005
"^DD",355.93,355.93,.08,0)
ZIP CODE^FX^^0;8^K:$L(X)>10!($L(X)<5)!'((X?5N)!(X?5N1"-"4N)) X I $D(X),$P($G(^IBA(355.93,DA,0)),U,2)'=1 K X
"^DD",355.93,355.93,.08,3)
Answer must be 5-10 characters in length.
"^DD",355.93,355.93,.08,5,1,0)
355.93^.02^6
"^DD",355.93,355.93,.08,21,0)
^.001^2^2^3001004^^^^
"^DD",355.93,355.93,.08,21,1,0)
This is the zip code of the non-VA facility that rendered the care that
"^DD",355.93,355.93,.08,21,2,0)
is being billed by the VA.  It is only valid for FACILITY providers.
"^DD",355.93,355.93,.08,"DT")
3001005
"^DD",355.93,355.93,.09,0)
FACILITY DEFAULT ID NUMBER^FX^^0;9^K:$L(X)>10!($L(X)<1) X I $D(X),$P($G(^IBA(355.93,DA,0)),U,2)'=1 K X
"^DD",355.93,355.93,.09,1,0)
^.1^^-1
"^DD",355.93,355.93,.09,1,1,0)
^^TRIGGER^355.93^.13
"^DD",355.93,355.93,.09,1,1,1)
X ^DD(355.93,.09,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV S X="16" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,13)=DIV,DIH=355.93,DIG=.13 D ^DICR
"^DD",355.93,355.93,.09,1,1,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S X=X="1",Y(2)=$G(X) S X=Y(0)]"",Y=X,X=Y(2),X=X&Y
"^DD",355.93,355.93,.09,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,13)=DIV,DIH=355.93,DIG=.13 D ^DICR
"^DD",355.93,355.93,.09,1,1,"CREATE CONDITION")
INTERNAL(PROVIDER TYPE)="1"&(FACILITY DEFAULT ID NUMBER]"")
"^DD",355.93,355.93,.09,1,1,"CREATE VALUE")
"16"
"^DD",355.93,355.93,.09,1,1,"DELETE VALUE")
@
"^DD",355.93,355.93,.09,1,1,"DT")
3060314
"^DD",355.93,355.93,.09,1,1,"FIELD")
PRIMARY ID QUALIFIER
"^DD",355.93,355.93,.09,3)
Enter the Federal Tax ID of the outside facility.
"^DD",355.93,355.93,.09,5,1,0)
355.93^.02^7
"^DD",355.93,355.93,.09,21,0)
^^1^1^3060322^
"^DD",355.93,355.93,.09,21,1,0)
Enter the Federal Tax ID of the outside facility.
"^DD",355.93,355.93,.09,"DT")
3060328
"^DD",355.93,355.93,.1,0)
STREET ADDRESS LINE 2^FX^^0;10^K:$L(X)>30!($L(X)<1) X I $D(X),$P($G(^IBA(355.93,DA,0)),U,2)'=1 K X
"^DD",355.93,355.93,.1,3)
Answer must be 1-30 characters in length.
"^DD",355.93,355.93,.1,5,1,0)
355.93^.02^8
"^DD",355.93,355.93,.1,21,0)
^^3^3^3030821^
"^DD",355.93,355.93,.1,21,1,0)
This is line 2 of the street address of the non-VA facility that rendered
"^DD",355.93,355.93,.1,21,2,0)
the care that is being billed by the VA.  It is only valid for FACILITY
"^DD",355.93,355.93,.1,21,3,0)
providers.
"^DD",355.93,355.93,.1,"DT")
3100721
"^DD",355.93,355.93,.11,0)
X12 TYPE OF FACILITY^S^77:SERVICE LOCATION;FA:FACILITY;LI:INDEPENDENT LAB;TL:TESTING LAB;^0;11^Q
"^DD",355.93,355.93,.11,3)
Enter a code to describe the type of facility for professional claims. Type Facility (FA) will automatically be sent on institutional claims.
"^DD",355.93,355.93,.11,21,0)
^^4^4^3070619^
"^DD",355.93,355.93,.11,21,1,0)
This is the code for the type of facility as identified in the X12
"^DD",355.93,355.93,.11,21,2,0)
documents.  It is used  to describe the type of facility for
"^DD",355.93,355.93,.11,21,3,0)
professional claims. Facility (FA) will automatically be sent on
"^DD",355.93,355.93,.11,21,4,0)
institutional claims.
"^DD",355.93,355.93,.11,"DT")
3070619
"^DD",355.93,355.93,.12,0)
STATE LICENSE #^F^^0;12^K:$L(X)>30!($L(X)<1) X
"^DD",355.93,355.93,.12,3)
Answer must be 1-30 characters in length.
"^DD",355.93,355.93,.12,5,1,0)
355.93^.07^1
"^DD",355.93,355.93,.12,21,0)
^^4^4^3030825^
"^DD",355.93,355.93,.12,21,1,0)
This is the State license # for the non-VA provider. Note, there can
"^DD",355.93,355.93,.12,21,2,0)
be only 1 state license # on file for non-VA/other VA providers.
"^DD",355.93,355.93,.12,21,3,0)
Enter multiple entries for the provider if multiple state license
"^DD",355.93,355.93,.12,21,4,0)
numbers are required (one for each state).
"^DD",355.93,355.93,.12,"DT")
3030825
"^DD",355.93,355.93,.13,0)
PRIMARY ID QUALIFIER^*P355.97'^IBE(355.97,^0;13^S DIC("S")="I $P($G(^(1)),U,4)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",355.93,355.93,.13,3)
The only Qualifier allowed is the TAX ID.
"^DD",355.93,355.93,.13,5,1,0)
355.93^.09^1
"^DD",355.93,355.93,.13,5,2,0)
355.93^.02^9
"^DD",355.93,355.93,.13,12)
Only TAX ID allowed
"^DD",355.93,355.93,.13,12.1)
S DIC("S")="I $P($G(^(1)),U,4)"
"^DD",355.93,355.93,.13,21,0)
^^1^1^3060309^
"^DD",355.93,355.93,.13,21,1,0)
This is the Qualifier associated with the FACILITY DEFAULT ID NUMBER. 
"^DD",355.93,355.93,.13,"DT")
3060309
"^DD",355.93,355.93,.15,0)
MAMMOGRAPHY CERTIFICATION #^F^^0;15^K:$L(X)>15!($L(X)<3) X
"^DD",355.93,355.93,.15,3)
Enter the Mammography Certification Number for this facility.   Must be 3-15 characters.
"^DD",355.93,355.93,.15,21,0)
^^3^3^3060309^
"^DD",355.93,355.93,.15,21,1,0)
This is the mammography certification number for the non-VA facility which
"^DD",355.93,355.93,.15,21,2,0)
is used as a default on the claim when mammography services are performed.
"^DD",355.93,355.93,.15,21,3,0)
It is required by some insurance companies.
"^DD",355.93,355.93,.15,"DT")
3060309
"^DD",355.93,355.93,.16,0)
LICENSE STATE^P5'^DIC(5,^0;16^Q
"^DD",355.93,355.93,.16,3)
Enter the state which issued the license of the individual or facility.
"^DD",355.93,355.93,.16,21,0)
^^3^3^3111108^
"^DD",355.93,355.93,.16,21,1,0)
This is the state which issued the STATE LICENSE #(#.12) field 
"^DD",355.93,355.93,.16,21,2,0)
of the non-VA individual or facility that rendered the care that is being 
"^DD",355.93,355.93,.16,21,3,0)
billed by the VA.
"^DD",355.93,355.93,.16,"DT")
3111108
"^DD",355.93,355.93,1.01,0)
CONTACT NAME^F^^1;1^K:$L(X)>30!($L(X)<3) X
"^DD",355.93,355.93,1.01,.1)
Contact Name
"^DD",355.93,355.93,1.01,3)
Enter the Contact Person (3-30 characters) at this Lab/Facility (Last Name,First Name).
"^DD",355.93,355.93,1.01,21,0)
^.001^2^2^3101012^^^^
"^DD",355.93,355.93,1.01,21,1,0)
This is the name of the contact person at this Lab/Facility 
"^DD",355.93,355.93,1.01,21,2,0)
(Last Name, First Name).
"^DD",355.93,355.93,1.01,"DT")
3100915
"^DD",355.93,355.93,1.02,0)
CONTACT PHONE NUMBER^F^^1;2^K:$L(X)>15!($L(X)<3) X
"^DD",355.93,355.93,1.02,.1)
Contact Phone Number
"^DD",355.93,355.93,1.02,1,0)
^.1
"^DD",355.93,355.93,1.02,1,1,0)
^^TRIGGER^355.93^1.03
"^DD",355.93,355.93,1.02,1,1,1)
Q
"^DD",355.93,355.93,1.02,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(355.93,D0,1)):^(1),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),1)),DIV=X S $P(^(1),U,3)=DIV,DIH=355.93,DIG=1.03 D ^DICR
"^DD",355.93,355.93,1.02,1,1,"%D",0)
^.101^1^1^3100915^^^^
"^DD",355.93,355.93,1.02,1,1,"%D",1,0)
If Contact Phone is deleted, extension will be deleted also.
"^DD",355.93,355.93,1.02,1,1,"CREATE VALUE")
NO EFFECT
"^DD",355.93,355.93,1.02,1,1,"DELETE VALUE")
S X=""
"^DD",355.93,355.93,1.02,1,1,"DT")
3100810
"^DD",355.93,355.93,1.02,1,1,"FIELD")
CONTACT PHONE EXTENSION
"^DD",355.93,355.93,1.02,3)
Enter the area code and phone number (3-15 characters) for the contact person at this Lab/Facility (nnnnnnnnnn or nnn-nnn-nnnn).  Required if Contact Name is present.
"^DD",355.93,355.93,1.02,21,0)
^.001^2^2^3101013^^^^
"^DD",355.93,355.93,1.02,21,1,0)
This is the area code and phone number of the contact person at
"^DD",355.93,355.93,1.02,21,2,0)
 this facility.
"^DD",355.93,355.93,1.02,"AUDIT")
n
"^DD",355.93,355.93,1.02,"DT")
3100915
"^DD",355.93,355.93,1.03,0)
CONTACT PHONE EXTENSION^NJ10,0^^1;3^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",355.93,355.93,1.03,.1)
Contact Phone Extension
"^DD",355.93,355.93,1.03,3)
Type a number between 0 and 9999999999, 0 decimal digits.
"^DD",355.93,355.93,1.03,5,1,0)
355.93^1.02^1
"^DD",355.93,355.93,1.03,21,0)
^.001^2^2^3110215^^^^
"^DD",355.93,355.93,1.03,21,1,0)
This is the phone extension of the contact person at this facility,
"^DD",355.93,355.93,1.03,21,2,0)
if known.
"^DD",355.93,355.93,1.03,"AUDIT")
n
"^DD",355.93,355.93,1.03,"DT")
3110215
"^DD",355.93,355.93,40,0)
DATE/TIME OF LAST NPI CHANGE^355.9301DA^^NPISTATUS;0
"^DD",355.93,355.93,41.01,0)
NPI^FX^^0;14^N IBOLDNPI S IBOLDNPI=$P($G(^IBA(355.93,DA,0)),U,14) K:$L(X)>10!($L(X)<10)!'$$CHKDGT^XUSNPI(X)!$$NPIUSED^IBCEP81(X,IBOLDNPI,DA,$S(X=IBOLDNPI:2,1:0),"XUSNPIMTL") X
"^DD",355.93,355.93,41.01,1,0)
^.1
"^DD",355.93,355.93,41.01,1,1,0)
355.93^NPI
"^DD",355.93,355.93,41.01,1,1,1)
S ^IBA(355.93,"NPI",$E(X,1,30),DA)=""
"^DD",355.93,355.93,41.01,1,1,2)
K ^IBA(355.93,"NPI",$E(X,1,30),DA)
"^DD",355.93,355.93,41.01,1,1,"%D",0)
^^1^1^3060914^
"^DD",355.93,355.93,41.01,1,1,"%D",1,0)
This cross reference holds a list of the active NPIs in this file.
"^DD",355.93,355.93,41.01,1,1,"DT")
3060728
"^DD",355.93,355.93,41.01,1,2,0)
355.93^NPIHISTORY
"^DD",355.93,355.93,41.01,1,2,1)
S ^IBA(355.93,"NPIHISTORY",$E(X,1,30),DA)=""
"^DD",355.93,355.93,41.01,1,2,2)
K ^IBA(355.93,"NPIHISTORY",$E(X,1,30),DA)
"^DD",355.93,355.93,41.01,1,2,3)
An entry into the NPI History cross reference should not be deleted
"^DD",355.93,355.93,41.01,1,2,"%D",0)
^.101^2^2^3060914^^
"^DD",355.93,355.93,41.01,1,2,"%D",1,0)
This cross reference holds the entire history of the NPIs used in the
"^DD",355.93,355.93,41.01,1,2,"%D",2,0)
file.
"^DD",355.93,355.93,41.01,1,2,"DT")
3060914
"^DD",355.93,355.93,41.01,3)
Answer must be 10 characters in length and a valid unique NPI number.
"^DD",355.93,355.93,41.01,21,0)
^.001^2^2^3060728^^
"^DD",355.93,355.93,41.01,21,1,0)
Unique National Provider Identifier.  A unique integer assigned to a
"^DD",355.93,355.93,41.01,21,2,0)
provider by CMS.  This field contains the current NPI for this provider.
"^DD",355.93,355.93,41.01,"DT")
3080512
"^DD",355.93,355.93,42,0)
TAXONOMY CODE^355.9342IP^^TAXONOMY;0
"^DD",355.93,355.93,50,0)
DATE/TIME LAST FB UPDATE^355.935DA^^4;0
"^DD",355.93,355.93,50,21,0)
^^2^2^3120530^
"^DD",355.93,355.93,50,21,1,0)
This multiple tracks updates to this file that are made by the FEE 
"^DD",355.93,355.93,50,21,2,0)
BASIS PAID TO IB background job.
"^DD",355.93,355.93,51,0)
DATE/TIME ALLOW FB UPDATE^355.9351DA^^3;0
"^DD",355.93,355.93,51,21,0)
^^3^3^3120605^
"^DD",355.93,355.93,51,21,1,0)
This multiple stores information that the Fee Basis interface uses to 
"^DD",355.93,355.93,51,21,2,0)
control whether updates to this record should be allowed. Historical
"^DD",355.93,355.93,51,21,3,0)
information is saved, and the most recent entry is used by the interface.
"^DD",355.93,355.9301,0)
DATE/TIME OF LAST NPI CHANGE SUB-FIELD^^.04^4
"^DD",355.93,355.9301,0,"DT")
3061218
"^DD",355.93,355.9301,0,"IX","B",355.9301,.01)

"^DD",355.93,355.9301,0,"IX","C",355.9301,.03)

"^DD",355.93,355.9301,0,"IX","NPISTATUS",355.9301,.02)

"^DD",355.93,355.9301,0,"NM","DATE/TIME OF LAST NPI CHANGE")

"^DD",355.93,355.9301,0,"UP")
355.93
"^DD",355.93,355.9301,.01,0)
DATE/TIME OF LAST NPI CHANGE^D^^0;1^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",355.93,355.9301,.01,1,0)
^.1
"^DD",355.93,355.9301,.01,1,1,0)
355.9301^B
"^DD",355.93,355.9301,.01,1,1,1)
S ^IBA(355.93,DA(1),"NPISTATUS","B",$E(X,1,30),DA)=""
"^DD",355.93,355.9301,.01,1,1,2)
K ^IBA(355.93,DA(1),"NPISTATUS","B",$E(X,1,30),DA)
"^DD",355.93,355.9301,.01,3)
Enter the date/time of the last change to this NPI.
"^DD",355.93,355.9301,.01,21,0)
^^1^1^3061218^
"^DD",355.93,355.9301,.01,21,1,0)
This is the date and time of the last change to the NPI value.
"^DD",355.93,355.9301,.01,"DT")
3061218
"^DD",355.93,355.9301,.02,0)
STATUS^S^1:ACTIVE;0:INACTIVE;^0;2^Q
"^DD",355.93,355.9301,.02,1,0)
^.1
"^DD",355.93,355.9301,.02,1,1,0)
355.9301^NPISTATUS
"^DD",355.93,355.9301,.02,1,1,1)
S ^IBA(355.93,DA(1),"NPISTATUS","NPISTATUS",$E(X,1,30),DA)=""
"^DD",355.93,355.9301,.02,1,1,2)
K ^IBA(355.93,DA(1),"NPISTATUS","NPISTATUS",$E(X,1,30),DA)
"^DD",355.93,355.9301,.02,1,1,"%D",0)
^^1^1^3061218^
"^DD",355.93,355.9301,.02,1,1,"%D",1,0)
This cross reference is for identifying active, inactive, or deleted NPIs.
"^DD",355.93,355.9301,.02,1,1,"DT")
3061218
"^DD",355.93,355.9301,.02,3)
Enter a 1 for 'ACTIVE', 0 for 'INACTIVE'
"^DD",355.93,355.9301,.02,21,0)
^.001^4^4^3070511^^^^
"^DD",355.93,355.9301,.02,21,1,0)
The Status of an NPI is either 'ACTIVE' or 'INACTIVE'.
"^DD",355.93,355.9301,.02,21,2,0)
If 'ACTIVE', then the NPI will be accessible by end-users to document a
"^DD",355.93,355.9301,.02,21,3,0)
particular provider. If 'INACTIVE', then the NPI will only be accessible
"^DD",355.93,355.9301,.02,21,4,0)
by the application to display legacy data.
"^DD",355.93,355.9301,.02,"DT")
3061218
"^DD",355.93,355.9301,.03,0)
NPI^FX^^0;3^K:$L(X)>10!($L(X)<10)!('$$CHKDGT^XUSNPI(X)) X
"^DD",355.93,355.9301,.03,1,0)
^.1
"^DD",355.93,355.9301,.03,1,1,0)
355.9301^C
"^DD",355.93,355.9301,.03,1,1,1)
S ^IBA(355.93,DA(1),"NPISTATUS","C",$E(X,1,30),DA)=""
"^DD",355.93,355.9301,.03,1,1,2)
K ^IBA(355.93,DA(1),"NPISTATUS","C",$E(X,1,30),DA)
"^DD",355.93,355.9301,.03,1,1,"%D",0)
^^3^3^3061218^
"^DD",355.93,355.9301,.03,1,1,"%D",1,0)
This x-ref (along with the NPI42 whole file x-ref) is used by Kernel when 
"^DD",355.93,355.9301,.03,1,1,"%D",2,0)
checking for existing NPI entries in this file before allowing them to be 
"^DD",355.93,355.9301,.03,1,1,"%D",3,0)
used in files 200 (NEW PERSON) or 4 (INSTITUTION).
"^DD",355.93,355.9301,.03,1,1,"DT")
3061218
"^DD",355.93,355.9301,.03,3)
Answer must be 10 characters in length.
"^DD",355.93,355.9301,.03,21,0)
^^5^5^3061218^
"^DD",355.93,355.9301,.03,21,1,0)
Unique National Provider Identifier. A unique integer assigned to 
"^DD",355.93,355.9301,.03,21,2,0)
providers by CMS. This field contains all of the NPIs associated with 
"^DD",355.93,355.9301,.03,21,3,0)
this provider. The current NPI will be set as active in the STATUS field 
"^DD",355.93,355.9301,.03,21,4,0)
of this multiple. All others will be set as inactive. There can only be 
"^DD",355.93,355.9301,.03,21,5,0)
one active NPI.
"^DD",355.93,355.9301,.03,"DT")
3061218
"^DD",355.93,355.9301,.04,0)
PERSON AFFECTING LAST CHANGE^P200'^VA(200,^0;4^Q
"^DD",355.93,355.9301,.04,3)
Enter the name of the person last changing this NPI.
"^DD",355.93,355.9301,.04,21,0)
^^1^1^3061218^
"^DD",355.93,355.9301,.04,21,1,0)
This is the name of the person who last changed the NPI.
"^DD",355.93,355.9301,.04,"DT")
3061218
"^DD",355.93,355.9342,0)
TAXONOMY CODE SUB-FIELD^^.03^3
"^DD",355.93,355.9342,0,"DT")
3060830
"^DD",355.93,355.9342,0,"ID","X12")

"^DD",355.93,355.9342,0,"IX","B",355.9342,.01)

"^DD",355.93,355.9342,0,"IX","D",355.9342,.02)

"^DD",355.93,355.9342,0,"NM","TAXONOMY CODE")

"^DD",355.93,355.9342,0,"UP")
355.93
"^DD",355.93,355.9342,.01,0)
TAXONOMY CODE^M*P8932.1'^USC(8932.1,^0;1^S DIC("S")="I $TR($P($G(^(90002)),U,2),""IN"",""21"")=$P(^IBA(355.93,DA(1),0),U,2)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",355.93,355.9342,.01,1,0)
^.1
"^DD",355.93,355.9342,.01,1,1,0)
355.9342^B
"^DD",355.93,355.9342,.01,1,1,1)
S ^IBA(355.93,DA(1),"TAXONOMY","B",$E(X,1,30),DA)=""
"^DD",355.93,355.9342,.01,1,1,2)
K ^IBA(355.93,DA(1),"TAXONOMY","B",$E(X,1,30),DA)
"^DD",355.93,355.9342,.01,3)
Enter the NUCC recognized taxonomy code
"^DD",355.93,355.9342,.01,12)
INDIVIDUAL/NON-INDIVIDUAL (FACILITY)
"^DD",355.93,355.9342,.01,12.1)
S DIC("S")="I $TR($P($G(^(90002)),U,2),""IN"",""21"")=$P(^IBA(355.93,DA(1),0),U,2)"
"^DD",355.93,355.9342,.01,21,0)
^.001^2^2^3060830^^^^
"^DD",355.93,355.9342,.01,21,1,0)
This multiple field holds the NUCC recognized taxonomy code for an 
"^DD",355.93,355.9342,.01,21,2,0)
individual or an organization.
"^DD",355.93,355.9342,.01,"DEL",1,0)
I 1 W *7,!,"TAXONOMY CODES SHOULD NOT BE DELETED. SET THE STATUS FLAG TO INACTIVE INSTEAD."
"^DD",355.93,355.9342,.01,"DT")
3060830
"^DD",355.93,355.9342,.02,0)
PRIMARY CODE^RS^1:YES;0:NO;^0;2^Q
"^DD",355.93,355.9342,.02,1,0)
^.1
"^DD",355.93,355.9342,.02,1,1,0)
355.9342^D^MUMPS
"^DD",355.93,355.9342,.02,1,1,1)
D XR^IBCEP82
"^DD",355.93,355.9342,.02,1,1,2)
D KXR^IBCEP82
"^DD",355.93,355.9342,.02,1,1,"%D",0)
^^2^2^3060613^
"^DD",355.93,355.9342,.02,1,1,"%D",1,0)
This x-ref is used to make sure that a maximum of one taxonomy is allowed 
"^DD",355.93,355.9342,.02,1,1,"%D",2,0)
to be marked as primary.
"^DD",355.93,355.9342,.02,1,1,"DT")
3060613
"^DD",355.93,355.9342,.02,3)
Enter a 1 if this is the provider's primary taxonomy code or a 0 for non-primary.
"^DD",355.93,355.9342,.02,21,0)
^.001^3^3^3060824^^
"^DD",355.93,355.9342,.02,21,1,0)
Only one code can be the primary taxonomy code for a provider.  When a 
"^DD",355.93,355.9342,.02,21,2,0)
specific taxonomy code is identified as the primary code then that 
"^DD",355.93,355.9342,.02,21,3,0)
code will be the default taxonomy code.
"^DD",355.93,355.9342,.02,"DT")
3060824
"^DD",355.93,355.9342,.03,0)
STATUS^RS^A:ACTIVE;I:INACTIVE;^0;3^Q
"^DD",355.93,355.9342,.03,1,0)
^.1
"^DD",355.93,355.9342,.03,1,1,0)
355.93^TAXSTATUS
"^DD",355.93,355.9342,.03,1,1,1)
S ^IBA(355.93,"TAXSTATUS",$E(X,1,30),DA(1),DA)=""
"^DD",355.93,355.9342,.03,1,1,2)
K ^IBA(355.93,"TAXSTATUS",$E(X,1,30),DA(1),DA)
"^DD",355.93,355.9342,.03,1,1,"DT")
3060501
"^DD",355.93,355.9342,.03,3)
Enter an 'A' for active code, or an 'I' for an inactive code.
"^DD",355.93,355.9342,.03,21,0)
^.001^5^5^3060824^^
"^DD",355.93,355.9342,.03,21,1,0)
If a taxonomy code listed for a provider is a currently active code (one
"^DD",355.93,355.9342,.03,21,2,0)
they use today), then the status should be marked with an 'A'.  At times a
"^DD",355.93,355.9342,.03,21,3,0)
provider will no longer use a taxonomy code.  This code will be marked
"^DD",355.93,355.9342,.03,21,4,0)
with an 'I' for inactive.  Codes should not be removed from a provider's
"^DD",355.93,355.9342,.03,21,5,0)
list.  They should be either active or inactive.
"^DD",355.93,355.9342,.03,"DT")
3060824
"^DD",355.93,355.935,0)
DATE/TIME LAST FB UPDATE SUB-FIELD^^.03^3
"^DD",355.93,355.935,0,"DT")
3120430
"^DD",355.93,355.935,0,"IX","B",355.935,.01)

"^DD",355.93,355.935,0,"NM","DATE/TIME LAST FB UPDATE")

"^DD",355.93,355.935,0,"UP")
355.93
"^DD",355.93,355.935,.01,0)
DATE/TIME LAST FB UPDATE^D^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",355.93,355.935,.01,1,0)
^.1
"^DD",355.93,355.935,.01,1,1,0)
355.935^B
"^DD",355.93,355.935,.01,1,1,1)
S ^IBA(355.93,DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",355.93,355.935,.01,1,1,2)
K ^IBA(355.93,DA(1),4,"B",$E(X,1,30),DA)
"^DD",355.93,355.935,.01,3)
Enter the date this record was modified by Fee Basis interface.
"^DD",355.93,355.935,.01,21,0)
^^2^2^3120530^
"^DD",355.93,355.935,.01,21,1,0)
This field tracks when updates were made by the Fee Basis Paid to IB 
"^DD",355.93,355.935,.01,21,2,0)
interface.
"^DD",355.93,355.935,.01,"DT")
3120530
"^DD",355.93,355.935,.02,0)
FB SUPERVISOR^P200'^VA(200,^0;2^Q
"^DD",355.93,355.935,.02,3)
Enter the Fee Basis Supervisor who certified the batch.
"^DD",355.93,355.935,.02,21,0)
^^2^2^3120530^
"^DD",355.93,355.935,.02,21,1,0)
This field identifies the Fee Basis Supervisor who released the batch
"^DD",355.93,355.935,.02,21,2,0)
that contained provider information added/updated to this record.
"^DD",355.93,355.935,.02,"DT")
3120530
"^DD",355.93,355.935,.03,0)
CREATED BY FB PAID TO IB^S^0:NO;1:YES;^0;3^Q
"^DD",355.93,355.935,.03,3)
Enter YES if FB PAID TO IB created this record.
"^DD",355.93,355.935,.03,21,0)
^^2^2^3120530^
"^DD",355.93,355.935,.03,21,1,0)
This field is set to YES if the FB PAID TO IB background job created 
"^DD",355.93,355.935,.03,21,2,0)
this record.
"^DD",355.93,355.935,.03,"DT")
3120530
"^DD",355.93,355.9351,0)
DATE/TIME ALLOW FB UPDATE SUB-FIELD^^.03^3
"^DD",355.93,355.9351,0,"DT")
3120530
"^DD",355.93,355.9351,0,"IX","B",355.9351,.01)

"^DD",355.93,355.9351,0,"NM","DATE/TIME ALLOW FB UPDATE")

"^DD",355.93,355.9351,0,"UP")
355.93
"^DD",355.93,355.9351,.01,0)
DATE/TIME ALLOW FB UPDATE^D^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",355.93,355.9351,.01,1,0)
^.1
"^DD",355.93,355.9351,.01,1,1,0)
355.9351^B
"^DD",355.93,355.9351,.01,1,1,1)
S ^IBA(355.93,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",355.93,355.9351,.01,1,1,2)
K ^IBA(355.93,DA(1),3,"B",$E(X,1,30),DA)
"^DD",355.93,355.9351,.01,3)
Enter the date/time the IB user toggled allow/disallow.
"^DD",355.93,355.9351,.01,21,0)
^^2^2^3120530^
"^DD",355.93,355.9351,.01,21,1,0)
This field tracks when an IB user chooses to allow/disallow updates to 
"^DD",355.93,355.9351,.01,21,2,0)
this record by FB PAID TO IB.
"^DD",355.93,355.9351,.01,"DT")
3120530
"^DD",355.93,355.9351,.02,0)
ALLOW UPDATES^S^0:NO;1:YES;^0;2^Q
"^DD",355.93,355.9351,.02,3)
Allow updates?
"^DD",355.93,355.9351,.02,21,0)
^^2^2^3120530^
"^DD",355.93,355.9351,.02,21,1,0)
This field notes whether the FB PAID TO IB option is allowed to update 
"^DD",355.93,355.9351,.02,21,2,0)
this record.
"^DD",355.93,355.9351,.02,"DT")
3120530
"^DD",355.93,355.9351,.03,0)
IB USER WHO CHANGED^P200'^VA(200,^0;3^Q
"^DD",355.93,355.9351,.03,3)
Enter the IB USER who changed the ALLOW UPDATES value.
"^DD",355.93,355.9351,.03,21,0)
^^2^2^3120530^
"^DD",355.93,355.9351,.03,21,1,0)
This field identifies the IB USER who changed the ALLOW UPDATES 
"^DD",355.93,355.9351,.03,21,2,0)
(#.02) value.
"^DD",355.93,355.9351,.03,"DT")
3120530
"^DIC",355.93,355.93,0)
IB NON/OTHER VA BILLING PROVIDER^355.93
"^DIC",355.93,355.93,0,"GL")
^IBA(355.93,
"^DIC",355.93,355.93,"%",0)
^1.005^^0
"^DIC",355.93,355.93,"%D",0)
^^4^4^3001214^^
"^DIC",355.93,355.93,"%D",1,0)
This file contains data for non-VA facilities that provide services for VA
"^DIC",355.93,355.93,"%D",2,0)
patients who have reimbursable insurance for these services.  VA pays for
"^DIC",355.93,355.93,"%D",3,0)
these services and in turn submits the charges to the insurance co for
"^DIC",355.93,355.93,"%D",4,0)
reimbursement.
"^DIC",355.93,"B","IB NON/OTHER VA BILLING PROVIDER",355.93)

"BLD",9141,6)
^444
**END**
**END**
