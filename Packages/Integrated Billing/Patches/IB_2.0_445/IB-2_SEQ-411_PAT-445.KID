Released IB*2*445 SEQ #411
Extracted from mail message
**KIDS**:IB*2.0*445^

**INSTALL NAME**
IB*2.0*445
"BLD",8548,0)
IB*2.0*445^INTEGRATED BILLING^0^3110104^y
"BLD",8548,1,0)
^^1^1^3101213^
"BLD",8548,1,1,0)
Reasonable Charges v3.7
"BLD",8548,4,0)
^9.64PA^^
"BLD",8548,6)
^396
"BLD",8548,6.3)
11
"BLD",8548,"ABPKG")
n
"BLD",8548,"INIT")
POST^IBYP445
"BLD",8548,"KRN",0)
^9.67PA^779.2^20
"BLD",8548,"KRN",.4,0)
.4
"BLD",8548,"KRN",.401,0)
.401
"BLD",8548,"KRN",.402,0)
.402
"BLD",8548,"KRN",.403,0)
.403
"BLD",8548,"KRN",.5,0)
.5
"BLD",8548,"KRN",.84,0)
.84
"BLD",8548,"KRN",3.6,0)
3.6
"BLD",8548,"KRN",3.8,0)
3.8
"BLD",8548,"KRN",9.2,0)
9.2
"BLD",8548,"KRN",9.8,0)
9.8
"BLD",8548,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",8548,"KRN",9.8,"NM",1,0)
IBCRHBRV^^0^B46372496
"BLD",8548,"KRN",9.8,"NM","B","IBCRHBRV",1)

"BLD",8548,"KRN",19,0)
19
"BLD",8548,"KRN",19,"NM",0)
^9.68A^^
"BLD",8548,"KRN",19.1,0)
19.1
"BLD",8548,"KRN",101,0)
101
"BLD",8548,"KRN",409.61,0)
409.61
"BLD",8548,"KRN",771,0)
771
"BLD",8548,"KRN",779.2,0)
779.2
"BLD",8548,"KRN",870,0)
870
"BLD",8548,"KRN",8989.51,0)
8989.51
"BLD",8548,"KRN",8989.52,0)
8989.52
"BLD",8548,"KRN",8994,0)
8994
"BLD",8548,"KRN","B",.4,.4)

"BLD",8548,"KRN","B",.401,.401)

"BLD",8548,"KRN","B",.402,.402)

"BLD",8548,"KRN","B",.403,.403)

"BLD",8548,"KRN","B",.5,.5)

"BLD",8548,"KRN","B",.84,.84)

"BLD",8548,"KRN","B",3.6,3.6)

"BLD",8548,"KRN","B",3.8,3.8)

"BLD",8548,"KRN","B",9.2,9.2)

"BLD",8548,"KRN","B",9.8,9.8)

"BLD",8548,"KRN","B",19,19)

"BLD",8548,"KRN","B",19.1,19.1)

"BLD",8548,"KRN","B",101,101)

"BLD",8548,"KRN","B",409.61,409.61)

"BLD",8548,"KRN","B",771,771)

"BLD",8548,"KRN","B",779.2,779.2)

"BLD",8548,"KRN","B",870,870)

"BLD",8548,"KRN","B",8989.51,8989.51)

"BLD",8548,"KRN","B",8989.52,8989.52)

"BLD",8548,"KRN","B",8994,8994)

"BLD",8548,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",8548,"QUES",0)
^9.62^^
"BLD",8548,"REQB",0)
^9.611^3^1
"BLD",8548,"REQB",3,0)
IB*2.0*439^2
"BLD",8548,"REQB","B","IB*2.0*439",3)

"INIT")
POST^IBYP445
"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
445^3110104
"PKG",200,22,1,"PAH",1,1,0)
^^1^1^3110104
"PKG",200,22,1,"PAH",1,1,1,0)
Reasonable Charges v3.7
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","IBCRHBRV")
0^1^B46372496^B46014449
"RTN","IBCRHBRV",1,0)
IBCRHBRV ;ALB/ARH - RATES: UPLOAD (RC) VERSION FUNCTIONS ; 14-FEB-01
"RTN","IBCRHBRV",2,0)
 ;;2.0;INTEGRATED BILLING;**148,169,245,270,285,298,325,334,355,360,365,382,390,408,412,423,427,439,445**;21-MAR-94;Build 11
"RTN","IBCRHBRV",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCRHBRV",4,0)
 ;
"RTN","IBCRHBRV",5,0)
 ; RC functions related to Version.  Update VLIST with new versions.  Update FTYPE if new types of files.
"RTN","IBCRHBRV",6,0)
 ;
"RTN","IBCRHBRV",7,0)
SELVERS() ; get version to upload from user
"RTN","IBCRHBRV",8,0)
 N DIR,DIRUT,DTOUT,DUOUT,IBVLIST,IBQUIT,IBVERS,IBI,IBJ,IBX,X,Y
"RTN","IBCRHBRV",9,0)
 ;
"RTN","IBCRHBRV",10,0)
 S IBVLIST=$$VERSTR(),IBQUIT=0,IBVERS=0
"RTN","IBCRHBRV",11,0)
 ;
"RTN","IBCRHBRV",12,0)
 W !!,"Select the version of Reasonable Charges to upload."
"RTN","IBCRHBRV",13,0)
 S DIR("?",1)="Enter the code from the list corresponding to the version of Reasonable Charges"
"RTN","IBCRHBRV",14,0)
 S DIR("?",2)="to upload.  There are no version 1.3, 2.2, or 2.10 (ten) RC charges." S DIR("?",3)=" "
"RTN","IBCRHBRV",15,0)
 S DIR("?",4)="Versions: "_IBVLIST S DIR("?",5)=" " S DIR("?")="Enter version number to upload."
"RTN","IBCRHBRV",16,0)
 ;
"RTN","IBCRHBRV",17,0)
 F IBI=1:1 D  I +IBQUIT Q
"RTN","IBCRHBRV",18,0)
 . W !!,?5,"Select one of the following:",!
"RTN","IBCRHBRV",19,0)
 . F IBJ=1:1 S IBX=$P(IBVLIST,",",IBJ) Q:'IBX  W !,?10,IBX,?20,"Reasonable Charges version ",IBX
"RTN","IBCRHBRV",20,0)
 . ;
"RTN","IBCRHBRV",21,0)
 . W ! S DIR("A")="Enter Version" S DIR(0)="FO^1:5" D ^DIR I $D(DIRUT) S IBQUIT=1
"RTN","IBCRHBRV",22,0)
 . I Y>0,(","_IBVLIST_",")[(","_Y_",") S IBVERS=Y,IBQUIT=1 W "  Reasonable Charges version ",IBVERS
"RTN","IBCRHBRV",23,0)
 ;
"RTN","IBCRHBRV",24,0)
 Q IBVERS
"RTN","IBCRHBRV",25,0)
 ;
"RTN","IBCRHBRV",26,0)
VERSION() ; return currently loaded version of RC files (1, 1.1, ...)
"RTN","IBCRHBRV",27,0)
 N IBX S IBX=$G(^XTMP("IBCR RC SITE","VERSION"))
"RTN","IBCRHBRV",28,0)
 Q IBX
"RTN","IBCRHBRV",29,0)
 ;
"RTN","IBCRHBRV",30,0)
VERSDT(VERS) ; return Effective Date of a version of RC files, either version passed in or currently loaded version
"RTN","IBCRHBRV",31,0)
 N IBI,LINE,IBX S IBX="" S VERS=+$G(VERS) I 'VERS S VERS=$$VERSION
"RTN","IBCRHBRV",32,0)
 I +VERS F IBI=1:1 S LINE=$P($T(VLIST+IBI),";;",2,99) Q:'LINE  I VERS=+LINE S IBX=$P(LINE,U,3)
"RTN","IBCRHBRV",33,0)
 Q IBX
"RTN","IBCRHBRV",34,0)
 ;
"RTN","IBCRHBRV",35,0)
VERSEDT(VERS) ; return Inactive Date of a version of RC files, either version passed in or currently loaded version
"RTN","IBCRHBRV",36,0)
 N IBI,LINE,IBX S IBX="" S VERS=+$G(VERS) I 'VERS S VERS=$$VERSION
"RTN","IBCRHBRV",37,0)
 I +VERS F IBI=1:1 S LINE=$P($T(VLIST+IBI),";;",2,99) Q:'LINE  I VERS=+LINE S IBX=$P(LINE,U,4)
"RTN","IBCRHBRV",38,0)
 Q IBX
"RTN","IBCRHBRV",39,0)
 ;
"RTN","IBCRHBRV",40,0)
VERSALL() ; return all RC versions and corresponding effective date 'VERS;EFFDT^VERS;EFFDT^...'
"RTN","IBCRHBRV",41,0)
 N IBI,LINE,IBX,IBC S IBX="",IBC=""
"RTN","IBCRHBRV",42,0)
 F IBI=1:1 S LINE=$P($T(VLIST+IBI),";;",2,99) Q:'LINE  S IBX=IBX_IBC_+LINE_";"_$P(LINE,U,3),IBC=U
"RTN","IBCRHBRV",43,0)
 Q IBX
"RTN","IBCRHBRV",44,0)
 ;
"RTN","IBCRHBRV",45,0)
VERSEND() ; return all RC versions and corresponding inactive date 'VERS;INACTIVE DT^VERS;INACTIVE DT^...'
"RTN","IBCRHBRV",46,0)
 N IBI,LINE,IBX,IBC S IBX="",IBC=""
"RTN","IBCRHBRV",47,0)
 F IBI=1:1 S LINE=$P($T(VLIST+IBI),";;",2,99) Q:'LINE  I $P(LINE,U,4) S IBX=IBX_IBC_+LINE_";"_$P(LINE,U,4),IBC=U
"RTN","IBCRHBRV",48,0)
 Q IBX
"RTN","IBCRHBRV",49,0)
 ;
"RTN","IBCRHBRV",50,0)
VERSITE(SITE) ; returns the list of versions loaded for a particular site
"RTN","IBCRHBRV",51,0)
 ; *** uses 99201 in the RC PHYSICIAN set to check which versions/dates are loaded
"RTN","IBCRHBRV",52,0)
 ; *** so 99201 must have a pro charge in all versions, if not it must be replaced with an item that does
"RTN","IBCRHBRV",53,0)
 N IBCS,IBXRF,IBITM,IBVERS,IBCSFN,IBI,IBV,IBX,IBY,IBC
"RTN","IBCRHBRV",54,0)
 S IBVERS=$$VERSALL,IBITM=99201
"RTN","IBCRHBRV",55,0)
 ;
"RTN","IBCRHBRV",56,0)
 I $G(SITE)'="" S IBCS="RC-PHYSICIAN" F  S IBCS=$O(^IBE(363.1,"B",IBCS)) Q:IBCS'["RC-PHYSICIAN"  D
"RTN","IBCRHBRV",57,0)
 . S IBV=$L(IBCS," ") I $P(IBCS," ",IBV)'=SITE Q
"RTN","IBCRHBRV",58,0)
 . S IBCSFN=$O(^IBE(363.1,"B",IBCS,0)) Q:'IBCSFN  S IBXRF="AIVDTS"_IBCSFN
"RTN","IBCRHBRV",59,0)
 . F IBI=1:1 S IBV=$P(IBVERS,U,IBI) Q:'IBV  I $O(^IBA(363.2,IBXRF,IBITM,-$P(IBV,";",2),0)) S IBY(+IBV)=""
"RTN","IBCRHBRV",60,0)
 ;
"RTN","IBCRHBRV",61,0)
 S (IBX,IBC)="" F IBI=1:1 S IBV=+$P(IBVERS,U,IBI) Q:'IBV  I $D(IBY(IBV)) S IBX=IBX_IBC_IBV S IBC=","
"RTN","IBCRHBRV",62,0)
 ;
"RTN","IBCRHBRV",63,0)
 Q IBX
"RTN","IBCRHBRV",64,0)
 ;
"RTN","IBCRHBRV",65,0)
MSGSITE(SITE) ; display a message indicating which versions are loaded for a site
"RTN","IBCRHBRV",66,0)
 N IBVERS Q:'$G(SITE)
"RTN","IBCRHBRV",67,0)
 S IBVERS=$$VERSITE(SITE)
"RTN","IBCRHBRV",68,0)
 I 'IBVERS W !!,?12,"There appear to be no RC charges already loaded for "_SITE_"."
"RTN","IBCRHBRV",69,0)
 I +IBVERS W !!,?12,"RC versions "_IBVERS_" appear to be already loaded for "_SITE_"."
"RTN","IBCRHBRV",70,0)
 Q
"RTN","IBCRHBRV",71,0)
 ;
"RTN","IBCRHBRV",72,0)
MSGVERS(SITE) ; check if versions are being loaded in the correct order, should be loaded in date order
"RTN","IBCRHBRV",73,0)
 ;   - if loading a version that has already been loaded for the site
"RTN","IBCRHBRV",74,0)
 ;   - if loading a version when any future versions have already been loaded for the site
"RTN","IBCRHBRV",75,0)
 ;   - if loading a version when the last version has not yet been loaded for the site
"RTN","IBCRHBRV",76,0)
 ; *** uses 99201 in the RC PHYSICIAN set to check which versions/dates are loaded
"RTN","IBCRHBRV",77,0)
 ; *** so 99201 must have a pro charge in all versions, if not it must be replaced with an item that does
"RTN","IBCRHBRV",78,0)
 N IBVERS,IBVDTC,IBVERSIN,IBVERSC,IBVERSO,IBI,VERSTR Q:'$G(SITE)
"RTN","IBCRHBRV",79,0)
 ;
"RTN","IBCRHBRV",80,0)
 S IBVERS=$$VERSION Q:'IBVERS  S IBVDTC=$$VERSDT,IBVERSIN=","_$$VERSITE(SITE)_",",IBVERSC=","_IBVERS_","
"RTN","IBCRHBRV",81,0)
 ;
"RTN","IBCRHBRV",82,0)
 ; check if loading a version that has already been loaded
"RTN","IBCRHBRV",83,0)
 I IBVERSIN[IBVERSC D
"RTN","IBCRHBRV",84,0)
 . W !!,?5,"*** It appears version RC v",IBVERS," has already been loaded for this site ***"
"RTN","IBCRHBRV",85,0)
 ;
"RTN","IBCRHBRV",86,0)
 ; check if loading a version when any future versions have already been loaded
"RTN","IBCRHBRV",87,0)
 S VERSTR=","_$$VERSTR()_",",VERSTR=$P(VERSTR,IBVERSC,2) ; all versions after current version
"RTN","IBCRHBRV",88,0)
 F IBI=1:1 S IBVERSO=$P(VERSTR,",",IBI) Q:'IBVERSO  I IBVERSIN[(","_IBVERSO_",")  D
"RTN","IBCRHBRV",89,0)
 . W !!,?5,">>> Currently trying to load RC v"_IBVERS_" but RC v"_IBVERSO_" appears to be already",!,?9,"loaded for this site.  The versions should be loaded in date order."
"RTN","IBCRHBRV",90,0)
 ;
"RTN","IBCRHBRV",91,0)
 ; check if loading a version when the last version has not yet been loaded
"RTN","IBCRHBRV",92,0)
 S VERSTR=","_$$VERSTR(1)_",",VERSTR=$P(VERSTR,IBVERSC,2) ; all versions before current version, reverse order
"RTN","IBCRHBRV",93,0)
 S IBVERSO=$P(VERSTR,",",1) I +IBVERSO,IBVERSIN'[(","_IBVERSO_",") D
"RTN","IBCRHBRV",94,0)
 . W !!,?5,"*** Currently trying to load RC v"_IBVERS_" but RC v"_IBVERSO_" does not appear to be",!,?9,"loaded for this site.  The versions should be loaded in date order."
"RTN","IBCRHBRV",95,0)
 . W !!,?5,">>> Continue only if there will never be a need to bill events before ",!,?9,$$FMTE^XLFDT(IBVDTC,2)," for this site.  If RC v"_IBVERSO_" will be needed for this site then",!,?9,"load it first."
"RTN","IBCRHBRV",96,0)
 ;
"RTN","IBCRHBRV",97,0)
 Q
"RTN","IBCRHBRV",98,0)
 ;
"RTN","IBCRHBRV",99,0)
VERSTR(RVRS) ; returns string containing list of all Reasonable Charges versions with charges, separated by ","
"RTN","IBCRHBRV",100,0)
 ; RVRS - if set, returns the list of versions in reverse order
"RTN","IBCRHBRV",101,0)
 N IBI,LINE,IBS,IBR,IBC,IBX  S (IBS,IBR,IBC,IBX)=""
"RTN","IBCRHBRV",102,0)
 F IBI=1:1 S LINE=$P($T(VLIST+IBI),";;",2,99) Q:'LINE  S IBS=IBS_IBC_+LINE,IBR=+LINE_IBC_IBR S IBC=","
"RTN","IBCRHBRV",103,0)
 S IBX=IBS I +$G(RVRS) S IBX=IBR
"RTN","IBCRHBRV",104,0)
 Q IBX
"RTN","IBCRHBRV",105,0)
 ;
"RTN","IBCRHBRV",106,0)
 ;
"RTN","IBCRHBRV",107,0)
 ;
"RTN","IBCRHBRV",108,0)
 ;
"RTN","IBCRHBRV",109,0)
 ;
"RTN","IBCRHBRV",110,0)
 ; File Names:  'IBRCyymmx.TXT'   w/ yymm - year month of version release (except v1)
"RTN","IBCRHBRV",111,0)
 ;              'IBRCyymm', file version identifier prefix, from VLIST text version description
"RTN","IBCRHBRV",112,0)
 ;              x=A-I/F, single character file identifier, from FTYPE text file description
"RTN","IBCRHBRV",113,0)
 ;
"RTN","IBCRHBRV",114,0)
FILES(IBFILES,VERS) ; returns array of source Host Files and data for version requested, pass IBFILES by reference
"RTN","IBCRHBRV",115,0)
 N IBI,LINE,IBTYPE,IBFILE,IBNAME,IBDESC S VERS=+$G(VERS) I 'VERS S VERS=1
"RTN","IBCRHBRV",116,0)
 ;
"RTN","IBCRHBRV",117,0)
 ; get requested versions data
"RTN","IBCRHBRV",118,0)
 F IBI=1:1 S LINE=$P($T(VLIST+IBI),";;",2,99) Q:'LINE  I VERS=+LINE S IBTYPE=$P(LINE,U,2),IBFILE=$P(LINE,U,5) Q
"RTN","IBCRHBRV",119,0)
 ;
"RTN","IBCRHBRV",120,0)
 ; get requested versions files
"RTN","IBCRHBRV",121,0)
 I +$G(IBTYPE) F IBI=1:1 S LINE=$P($T(@("FT"_IBTYPE)+IBI),";;",2,99) Q:LINE=""  D
"RTN","IBCRHBRV",122,0)
 . S IBNAME=IBFILE_$P(LINE,":",1)_".TXT",IBDESC="RC v"_+VERS_" "_$P(LINE,":",2,99)
"RTN","IBCRHBRV",123,0)
 . S IBFILES(IBNAME)=IBDESC
"RTN","IBCRHBRV",124,0)
 Q
"RTN","IBCRHBRV",125,0)
 ;
"RTN","IBCRHBRV",126,0)
 ;
"RTN","IBCRHBRV",127,0)
 ; versions and their critical data, add new versions here
"RTN","IBCRHBRV",128,0)
VLIST ; version ^ file type/version ^ effective date ^ inactive date ^ file prefix
"RTN","IBCRHBRV",129,0)
 ;;1.0^1^2990901^3001101^IBRCV
"RTN","IBCRHBRV",130,0)
 ;;1.1^1^3001102^3010507^IBRC0011
"RTN","IBCRHBRV",131,0)
 ;;1.2^1^3010508^3030428^IBRC0105
"RTN","IBCRHBRV",132,0)
 ;;1.4^1^3030429^3031218^IBRC0304
"RTN","IBCRHBRV",133,0)
 ;;2.0^2^3031219^3040414^IBRC0312
"RTN","IBCRHBRV",134,0)
 ;;2.1^2^3040415^3041231^IBRC0404
"RTN","IBCRHBRV",135,0)
 ;;2.3^2^3050101^3050410^IBRC0501
"RTN","IBCRHBRV",136,0)
 ;;2.4^2^3050411^3050930^IBRC0504
"RTN","IBCRHBRV",137,0)
 ;;2.5^2^3051001^3051231^IBRC0510
"RTN","IBCRHBRV",138,0)
 ;;2.6^2^3060101^3060824^IBRC0601
"RTN","IBCRHBRV",139,0)
 ;;2.7^2^3060825^3060930^IBRC0608
"RTN","IBCRHBRV",140,0)
 ;;2.8^2^3061001^3061231^IBRC0610
"RTN","IBCRHBRV",141,0)
 ;;2.9^2^3070101^3070930^IBRC0701
"RTN","IBCRHBRV",142,0)
 ;;2.11^2^3071001^3071231^IBRC0710
"RTN","IBCRHBRV",143,0)
 ;;3.1^2^3080101^3080930^IBRC0801
"RTN","IBCRHBRV",144,0)
 ;;3.2^2^3081001^3081231^IBRC0810
"RTN","IBCRHBRV",145,0)
 ;;3.3^2^3090101^3090930^IBRC0901
"RTN","IBCRHBRV",146,0)
 ;;3.4^2^3091001^3091231^IBRC0910
"RTN","IBCRHBRV",147,0)
 ;;3.5^2^3100101^3100930^IBRC1001
"RTN","IBCRHBRV",148,0)
 ;;3.6^2^3101001^3101231^IBRC1010
"RTN","IBCRHBRV",149,0)
 ;;3.7^2^3110101^^IBRC1101
"RTN","IBCRHBRV",150,0)
 ;;
"RTN","IBCRHBRV",151,0)
 ; 
"RTN","IBCRHBRV",152,0)
 ; 
"RTN","IBCRHBRV",153,0)
 ; 
"RTN","IBCRHBRV",154,0)
 ; 
"RTN","IBCRHBRV",155,0)
 ; 
"RTN","IBCRHBRV",156,0)
 ; 
"RTN","IBCRHBRV",157,0)
 ; 
"RTN","IBCRHBRV",158,0)
FTYPE ; file type/versions and relevant data
"RTN","IBCRHBRV",159,0)
 ; file identifer is used with XTMP subscript 'IBCR RC ' and routine label to parse file
"RTN","IBCRHBRV",160,0)
 ; file identifier : file name/description ^ file identifier ^ number of columns (for v2+)
"RTN","IBCRHBRV",161,0)
 ;
"RTN","IBCRHBRV",162,0)
FT1 ; Reasonable Charge File Type 1 files
"RTN","IBCRHBRV",163,0)
 ;;A:Inpatient Facility Charges^A
"RTN","IBCRHBRV",164,0)
 ;;B:Inpatient Facility Area Factors^B
"RTN","IBCRHBRV",165,0)
 ;;C:Outpatient Facility Charges^C
"RTN","IBCRHBRV",166,0)
 ;;D:Outpatient Facility Area Factors^D
"RTN","IBCRHBRV",167,0)
 ;;E:Physician Charges E^E
"RTN","IBCRHBRV",168,0)
 ;;F:Physician Charges F^F
"RTN","IBCRHBRV",169,0)
 ;;G:Physician Charges G^G
"RTN","IBCRHBRV",170,0)
 ;;H:Physician Area Factors^H
"RTN","IBCRHBRV",171,0)
 ;;I:Physician Unit Area Factors^I
"RTN","IBCRHBRV",172,0)
 ;;
"RTN","IBCRHBRV",173,0)
 ;
"RTN","IBCRHBRV",174,0)
FT2 ; Reasonable Charges File Type 2 files
"RTN","IBCRHBRV",175,0)
 ;;A:Inpatient Facility Charges^A^10
"RTN","IBCRHBRV",176,0)
 ;;B:Outpatient Facility Charges^B^14
"RTN","IBCRHBRV",177,0)
 ;;C:Professional Charges^C^23
"RTN","IBCRHBRV",178,0)
 ;;D:Service Category Codes^D^4
"RTN","IBCRHBRV",179,0)
 ;;E:Area Factors^E^41
"RTN","IBCRHBRV",180,0)
 ;;F:VA Sites and Zip Codes^F^4
"RTN","IBCRHBRV",181,0)
 ;;
"RTN","IBYP445")
0^^B8376590^n/a
"RTN","IBYP445",1,0)
IBYP445 ;ALB/CXW - IB*2.0*445 POST INIT: REASONABLE CHARGES V3.7 ; 6-DEC-2010
"RTN","IBYP445",2,0)
 ;;2.0;INTEGRATED BILLING;**445**;21-MAR-94;Build 11
"RTN","IBYP445",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBYP445",4,0)
 ;
"RTN","IBYP445",5,0)
 ;
"RTN","IBYP445",6,0)
 Q
"RTN","IBYP445",7,0)
 ;
"RTN","IBYP445",8,0)
POST ;
"RTN","IBYP445",9,0)
 N IBA
"RTN","IBYP445",10,0)
 S IBA(1)="",IBA(2)="    Reasonable Charges v3.7 Post-Install .....",IBA(3)="" D MES^XPDUTL(.IBA) K IBA
"RTN","IBYP445",11,0)
 ;
"RTN","IBYP445",12,0)
 D CHGINA("") ; inactivate all RC charges in #363.2
"RTN","IBYP445",13,0)
 ;
"RTN","IBYP445",14,0)
 S IBA(1)="",IBA(2)="    Reasonable Charges v3.7 Post-Install Complete",IBA(3)="" D MES^XPDUTL(.IBA) K IBA
"RTN","IBYP445",15,0)
 ;
"RTN","IBYP445",16,0)
 Q
"RTN","IBYP445",17,0)
 ;
"RTN","IBYP445",18,0)
 ;
"RTN","IBYP445",19,0)
 ;
"RTN","IBYP445",20,0)
CHGINA(VERS) ; inactive charges from previous versions of Reasonable Charges
"RTN","IBYP445",21,0)
 ; VERS = version to begin inactivations with (1, 1.1, 1.2, ...)
"RTN","IBYP445",22,0)
 ; - Inactive date added is the first RC Version Inactive date after the effective date of the charge
"RTN","IBYP445",23,0)
 ; - if the charge already has an inactive date less than the Version Inactive Date then no change is made
"RTN","IBYP445",24,0)
 ;
"RTN","IBYP445",25,0)
 N IBA,IBI,IBX,IBSTART,IBENDATE,IBCS,IBCS0,IBBR0,IBXRF,IBITM,IBNEF,IBCI,IBCI0,IBCIEF,IBCIIA,IBNEWIA
"RTN","IBYP445",26,0)
 N DD,DO,DLAYGO,DIC,DIE,DA,DR,X,Y,IBCNT S IBCNT=0
"RTN","IBYP445",27,0)
 ;
"RTN","IBYP445",28,0)
 S IBA(1)="      >> Inactivating Existing Reasonable Charges, Please Wait..." D MES^XPDUTL(.IBA) K IBA
"RTN","IBYP445",29,0)
 ;
"RTN","IBYP445",30,0)
 S IBSTART="" I $G(VERS)'="" S IBSTART=$$VERSDT^IBCRHBRV(VERS)
"RTN","IBYP445",31,0)
 S IBENDATE=$$VERSEND^IBCRHBRV
"RTN","IBYP445",32,0)
 ;
"RTN","IBYP445",33,0)
 S IBCS=0 F  S IBCS=$O(^IBE(363.1,IBCS)) Q:'IBCS  D
"RTN","IBYP445",34,0)
 . S IBCS0=$G(^IBE(363.1,IBCS,0)) Q:IBCS0=""
"RTN","IBYP445",35,0)
 . S IBBR0=$G(^IBE(363.3,+$P(IBCS0,U,2),0)) I $E(IBBR0,1,3)'="RC " Q
"RTN","IBYP445",36,0)
 . ;
"RTN","IBYP445",37,0)
 . S IBXRF="AIVDTS"_IBCS
"RTN","IBYP445",38,0)
 . S IBITM=0 F  S IBITM=$O(^IBA(363.2,IBXRF,IBITM)) Q:'IBITM  D
"RTN","IBYP445",39,0)
 .. S IBNEF="" F  S IBNEF=$O(^IBA(363.2,IBXRF,IBITM,IBNEF)) Q:IBNEF=""  Q:-IBNEF<IBSTART  D
"RTN","IBYP445",40,0)
 ... ;
"RTN","IBYP445",41,0)
 ... S IBCI=0 F  S IBCI=$O(^IBA(363.2,IBXRF,IBITM,IBNEF,IBCI)) Q:'IBCI  D
"RTN","IBYP445",42,0)
 .... S IBCI0=$G(^IBA(363.2,IBCI,0)) Q:IBCI0=""
"RTN","IBYP445",43,0)
 .... S IBCIEF=$P(IBCI0,U,3),IBCIIA=$P(IBCI0,U,4),IBNEWIA=""
"RTN","IBYP445",44,0)
 .... ;
"RTN","IBYP445",45,0)
 .... F IBI=2:1 S IBX=+$P(IBENDATE,";",IBI) S IBNEWIA=IBX Q:'IBX  Q:IBCIEF'>IBX
"RTN","IBYP445",46,0)
 .... ;
"RTN","IBYP445",47,0)
 .... I 'IBNEWIA Q
"RTN","IBYP445",48,0)
 .... I +IBCIIA,IBCIIA'>IBNEWIA Q
"RTN","IBYP445",49,0)
 .... ;
"RTN","IBYP445",50,0)
 .... S DR=".04////"_+IBNEWIA,DIE="^IBA(363.2,",DA=+IBCI D ^DIE K DIE,DIC,DA,DR,X,Y S IBCNT=IBCNT+1
"RTN","IBYP445",51,0)
 ;
"RTN","IBYP445",52,0)
 S IBA(1)="         Done.  "_IBCNT_" existing charges inactivated " D MES^XPDUTL(.IBA) K IBA
"RTN","IBYP445",53,0)
 Q
"RTN","IBYP445",54,0)
 ;
"RTN","IBYP445",55,0)
 ;
"RTN","IBYP445",56,0)
 ;
"RTN","IBYP445",57,0)
MCCRUTL(X,P) ; returns IFN of item in 399.1 if Name is found and piece P is true
"RTN","IBYP445",58,0)
 N IBX,IBY S IBY=""
"RTN","IBYP445",59,0)
 I $G(X)'="" S IBX=0 F  S IBX=$O(^DGCR(399.1,"B",X,IBX)) Q:'IBX  I $P($G(^DGCR(399.1,IBX,0)),U,+$G(P)) S IBY=IBX
"RTN","IBYP445",60,0)
 Q IBY
"RTN","IBYP445",61,0)
 ;
"RTN","IBYP445",62,0)
MSG(X) ;
"RTN","IBYP445",63,0)
 N IBX S IBX=$O(IBA(999999),-1) S:'IBX IBX=1 S IBX=IBX+1
"RTN","IBYP445",64,0)
 S IBA(IBX)=$G(X)
"RTN","IBYP445",65,0)
 Q
"VER")
8.0^22.0
"BLD",8548,6)
^411
**END**
**END**
