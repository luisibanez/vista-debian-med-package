Released IB*2*458 SEQ #454
Extracted from mail message
**KIDS**:IB*2.0*458^

**INSTALL NAME**
IB*2.0*458
"BLD",8537,0)
IB*2.0*458^INTEGRATED BILLING^0^3130422^y
"BLD",8537,1,0)
^^1^1^3130201^
"BLD",8537,1,1,0)
Reasonable Charges Billing Enhancements 2013.
"BLD",8537,4,0)
^9.64PA^356.2^2
"BLD",8537,4,356.2,0)
356.2
"BLD",8537,4,356.2,2,0)
^9.641^356.2^1
"BLD",8537,4,356.2,2,356.2,0)
INSURANCE REVIEW  (File-top level)
"BLD",8537,4,356.2,2,356.2,1,0)
^9.6411^.02^6
"BLD",8537,4,356.2,2,356.2,1,.02,0)
TRACKING ID
"BLD",8537,4,356.2,2,356.2,1,.09,0)
*CALL REFERENCE NUMBER
"BLD",8537,4,356.2,2,356.2,1,.28,0)
*AUTHORIZATION NUMBER
"BLD",8537,4,356.2,2,356.2,1,.29,0)
FINAL OUTCOME OF APPEAL
"BLD",8537,4,356.2,2,356.2,1,2.01,0)
CALL REFERENCE NUMBER
"BLD",8537,4,356.2,2,356.2,1,2.02,0)
AUTHORIZATION NUMBER
"BLD",8537,4,356.2,222)
y^n^p^^^^n^^n
"BLD",8537,4,356.2,224)

"BLD",8537,4,356.26,0)
356.26
"BLD",8537,4,356.26,222)
y^n^f^^^^n
"BLD",8537,4,"APDD",356.2,356.2)

"BLD",8537,4,"APDD",356.2,356.2,.02)

"BLD",8537,4,"APDD",356.2,356.2,.09)

"BLD",8537,4,"APDD",356.2,356.2,.28)

"BLD",8537,4,"APDD",356.2,356.2,.29)

"BLD",8537,4,"APDD",356.2,356.2,2.01)

"BLD",8537,4,"APDD",356.2,356.2,2.02)

"BLD",8537,4,"B",356.2,356.2)

"BLD",8537,4,"B",356.26,356.26)

"BLD",8537,6.3)
4
"BLD",8537,"INI")
PRE^IBYP458
"BLD",8537,"INID")
^n^n
"BLD",8537,"INIT")
POST^IBYP458
"BLD",8537,"KRN",0)
^9.67PA^779.2^20
"BLD",8537,"KRN",.4,0)
.4
"BLD",8537,"KRN",.401,0)
.401
"BLD",8537,"KRN",.402,0)
.402
"BLD",8537,"KRN",.402,"NM",0)
^9.68A^6^6
"BLD",8537,"KRN",.402,"NM",1,0)
IBT ACTION INFO    FILE #356.2^356.2^0
"BLD",8537,"KRN",.402,"NM",2,0)
IBT ADD APPEAL    FILE #356.2^356.2^0
"BLD",8537,"KRN",.402,"NM",3,0)
IBT CONTACT INFO    FILE #356.2^356.2^0
"BLD",8537,"KRN",.402,"NM",4,0)
IBT FINAL OUTCOME    FILE #356.2^356.2^0
"BLD",8537,"KRN",.402,"NM",5,0)
IBT INS VERIFICATION    FILE #356.2^356.2^0
"BLD",8537,"KRN",.402,"NM",6,0)
IBT QUICK EDIT    FILE #356.2^356.2^0
"BLD",8537,"KRN",.402,"NM","B","IBT ACTION INFO    FILE #356.2",1)

"BLD",8537,"KRN",.402,"NM","B","IBT ADD APPEAL    FILE #356.2",2)

"BLD",8537,"KRN",.402,"NM","B","IBT CONTACT INFO    FILE #356.2",3)

"BLD",8537,"KRN",.402,"NM","B","IBT FINAL OUTCOME    FILE #356.2",4)

"BLD",8537,"KRN",.402,"NM","B","IBT INS VERIFICATION    FILE #356.2",5)

"BLD",8537,"KRN",.402,"NM","B","IBT QUICK EDIT    FILE #356.2",6)

"BLD",8537,"KRN",.403,0)
.403
"BLD",8537,"KRN",.5,0)
.5
"BLD",8537,"KRN",.84,0)
.84
"BLD",8537,"KRN",3.6,0)
3.6
"BLD",8537,"KRN",3.8,0)
3.8
"BLD",8537,"KRN",9.2,0)
9.2
"BLD",8537,"KRN",9.8,0)
9.8
"BLD",8537,"KRN",9.8,"NM",0)
^9.68A^35^35
"BLD",8537,"KRN",9.8,"NM",1,0)
IBCC1^^0^B55298346
"BLD",8537,"KRN",9.8,"NM",2,0)
IBCD2^^0^B27978767
"BLD",8537,"KRN",9.8,"NM",3,0)
IBCNSP0^^0^B34211643
"BLD",8537,"KRN",9.8,"NM",4,0)
IBCRCI^^0^B10399804
"BLD",8537,"KRN",9.8,"NM",5,0)
IBCRHBS3^^0^B26470229
"BLD",8537,"KRN",9.8,"NM",6,0)
IBCRHRS^^0^B166827262
"BLD",8537,"KRN",9.8,"NM",7,0)
IBCSCH^^0^B49539365
"BLD",8537,"KRN",9.8,"NM",8,0)
IBCSCH1^^0^B35678936
"BLD",8537,"KRN",9.8,"NM",9,0)
IBJDB21^^0^B73370335
"BLD",8537,"KRN",9.8,"NM",10,0)
IBJTRA1^^0^B10892306
"BLD",8537,"KRN",9.8,"NM",11,0)
IBOTRR^^0^B13485669
"BLD",8537,"KRN",9.8,"NM",12,0)
IBTOBI^^0^B26303932
"BLD",8537,"KRN",9.8,"NM",13,0)
IBTOBI2^^0^B20308448
"BLD",8537,"KRN",9.8,"NM",14,0)
IBTOBI3^^0^B15563291
"BLD",8537,"KRN",9.8,"NM",15,0)
IBTODD^^0^B34396486
"BLD",8537,"KRN",9.8,"NM",16,0)
IBTODD1^^0^B28302876
"BLD",8537,"KRN",9.8,"NM",17,0)
IBTODD2^^0^B10971727
"BLD",8537,"KRN",9.8,"NM",18,0)
IBTRC^^0^B27777656
"BLD",8537,"KRN",9.8,"NM",19,0)
IBTRC3^^0^B8006910
"BLD",8537,"KRN",9.8,"NM",20,0)
IBTRCD^^0^B25352762
"BLD",8537,"KRN",9.8,"NM",21,0)
IBTRCD0^^0^B16113018
"BLD",8537,"KRN",9.8,"NM",22,0)
IBTRCD1^^0^B27554841
"BLD",8537,"KRN",9.8,"NM",23,0)
IBTRD^^0^B26257163
"BLD",8537,"KRN",9.8,"NM",24,0)
IBTRDD^^0^B7262514
"BLD",8537,"KRN",9.8,"NM",25,0)
IBTRE^^0^B25778020
"BLD",8537,"KRN",9.8,"NM",26,0)
IBTRED^^0^B24448632
"BLD",8537,"KRN",9.8,"NM",27,0)
IBTRED0^^0^B23670458
"BLD",8537,"KRN",9.8,"NM",28,0)
IBTRR^^0^B10506706
"BLD",8537,"KRN",9.8,"NM",29,0)
IBTRC1^^0^B23066031
"BLD",8537,"KRN",9.8,"NM",30,0)
IBTRR1^^0^B38596413
"BLD",8537,"KRN",9.8,"NM",31,0)
IBTRV^^0^B29049324
"BLD",8537,"KRN",9.8,"NM",32,0)
IBTRVD^^0^B7748942
"BLD",8537,"KRN",9.8,"NM",33,0)
IBTRVD0^^0^B23753223
"BLD",8537,"KRN",9.8,"NM",34,0)
IBYP458^^0^B51260890
"BLD",8537,"KRN",9.8,"NM",35,0)
IBTRED1^^0^B10155477
"BLD",8537,"KRN",9.8,"NM","B","IBCC1",1)

"BLD",8537,"KRN",9.8,"NM","B","IBCD2",2)

"BLD",8537,"KRN",9.8,"NM","B","IBCNSP0",3)

"BLD",8537,"KRN",9.8,"NM","B","IBCRCI",4)

"BLD",8537,"KRN",9.8,"NM","B","IBCRHBS3",5)

"BLD",8537,"KRN",9.8,"NM","B","IBCRHRS",6)

"BLD",8537,"KRN",9.8,"NM","B","IBCSCH",7)

"BLD",8537,"KRN",9.8,"NM","B","IBCSCH1",8)

"BLD",8537,"KRN",9.8,"NM","B","IBJDB21",9)

"BLD",8537,"KRN",9.8,"NM","B","IBJTRA1",10)

"BLD",8537,"KRN",9.8,"NM","B","IBOTRR",11)

"BLD",8537,"KRN",9.8,"NM","B","IBTOBI",12)

"BLD",8537,"KRN",9.8,"NM","B","IBTOBI2",13)

"BLD",8537,"KRN",9.8,"NM","B","IBTOBI3",14)

"BLD",8537,"KRN",9.8,"NM","B","IBTODD",15)

"BLD",8537,"KRN",9.8,"NM","B","IBTODD1",16)

"BLD",8537,"KRN",9.8,"NM","B","IBTODD2",17)

"BLD",8537,"KRN",9.8,"NM","B","IBTRC",18)

"BLD",8537,"KRN",9.8,"NM","B","IBTRC1",29)

"BLD",8537,"KRN",9.8,"NM","B","IBTRC3",19)

"BLD",8537,"KRN",9.8,"NM","B","IBTRCD",20)

"BLD",8537,"KRN",9.8,"NM","B","IBTRCD0",21)

"BLD",8537,"KRN",9.8,"NM","B","IBTRCD1",22)

"BLD",8537,"KRN",9.8,"NM","B","IBTRD",23)

"BLD",8537,"KRN",9.8,"NM","B","IBTRDD",24)

"BLD",8537,"KRN",9.8,"NM","B","IBTRE",25)

"BLD",8537,"KRN",9.8,"NM","B","IBTRED",26)

"BLD",8537,"KRN",9.8,"NM","B","IBTRED0",27)

"BLD",8537,"KRN",9.8,"NM","B","IBTRED1",35)

"BLD",8537,"KRN",9.8,"NM","B","IBTRR",28)

"BLD",8537,"KRN",9.8,"NM","B","IBTRR1",30)

"BLD",8537,"KRN",9.8,"NM","B","IBTRV",31)

"BLD",8537,"KRN",9.8,"NM","B","IBTRVD",32)

"BLD",8537,"KRN",9.8,"NM","B","IBTRVD0",33)

"BLD",8537,"KRN",9.8,"NM","B","IBYP458",34)

"BLD",8537,"KRN",19,0)
19
"BLD",8537,"KRN",19,"NM",0)
^9.68A^4^4
"BLD",8537,"KRN",19,"NM",1,0)
IB OUTPUT ROI EXPIRED^^0
"BLD",8537,"KRN",19,"NM",2,0)
IBCR RC FACILITY TYPE^^0
"BLD",8537,"KRN",19,"NM",3,0)
IB OUTPUT MANAGEMENT REPORTS^^2
"BLD",8537,"KRN",19,"NM",4,0)
IBCR CHARGE MASTER IRM MENU^^2
"BLD",8537,"KRN",19,"NM","B","IB OUTPUT MANAGEMENT REPORTS",3)

"BLD",8537,"KRN",19,"NM","B","IB OUTPUT ROI EXPIRED",1)

"BLD",8537,"KRN",19,"NM","B","IBCR CHARGE MASTER IRM MENU",4)

"BLD",8537,"KRN",19,"NM","B","IBCR RC FACILITY TYPE",2)

"BLD",8537,"KRN",19.1,0)
19.1
"BLD",8537,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",8537,"KRN",19.1,"NM",1,0)
IB ROI EDIT^^0
"BLD",8537,"KRN",19.1,"NM","B","IB ROI EDIT",1)

"BLD",8537,"KRN",101,0)
101
"BLD",8537,"KRN",101,"NM",0)
^9.68A^8^8
"BLD",8537,"KRN",101,"NM",1,0)
IBTRR  MENU^^0
"BLD",8537,"KRN",101,"NM",2,0)
IBTRR ROI ADD^^0
"BLD",8537,"KRN",101,"NM",3,0)
IBTRR ROI DELETE^^0
"BLD",8537,"KRN",101,"NM",4,0)
IBTRR ROI EDIT^^0
"BLD",8537,"KRN",101,"NM",5,0)
IBTRR ROI REVOKE^^0
"BLD",8537,"KRN",101,"NM",6,0)
IBTRE ROI CONSENT^^0
"BLD",8537,"KRN",101,"NM",7,0)
IBTRE  MENU^^2
"BLD",8537,"KRN",101,"NM",8,0)
IBCNS EXIT^^4^
"BLD",8537,"KRN",101,"NM","B","IBCNS EXIT",8)

"BLD",8537,"KRN",101,"NM","B","IBTRE  MENU",7)

"BLD",8537,"KRN",101,"NM","B","IBTRE ROI CONSENT",6)

"BLD",8537,"KRN",101,"NM","B","IBTRR  MENU",1)

"BLD",8537,"KRN",101,"NM","B","IBTRR ROI ADD",2)

"BLD",8537,"KRN",101,"NM","B","IBTRR ROI DELETE",3)

"BLD",8537,"KRN",101,"NM","B","IBTRR ROI EDIT",4)

"BLD",8537,"KRN",101,"NM","B","IBTRR ROI REVOKE",5)

"BLD",8537,"KRN",409.61,0)
409.61
"BLD",8537,"KRN",409.61,"NM",0)
^9.68A^1^1
"BLD",8537,"KRN",409.61,"NM",1,0)
IBT ROI SPECIAL CONSENT^^0
"BLD",8537,"KRN",409.61,"NM","B","IBT ROI SPECIAL CONSENT",1)

"BLD",8537,"KRN",771,0)
771
"BLD",8537,"KRN",779.2,0)
779.2
"BLD",8537,"KRN",870,0)
870
"BLD",8537,"KRN",8989.51,0)
8989.51
"BLD",8537,"KRN",8989.52,0)
8989.52
"BLD",8537,"KRN",8994,0)
8994
"BLD",8537,"KRN","B",.4,.4)

"BLD",8537,"KRN","B",.401,.401)

"BLD",8537,"KRN","B",.402,.402)

"BLD",8537,"KRN","B",.403,.403)

"BLD",8537,"KRN","B",.5,.5)

"BLD",8537,"KRN","B",.84,.84)

"BLD",8537,"KRN","B",3.6,3.6)

"BLD",8537,"KRN","B",3.8,3.8)

"BLD",8537,"KRN","B",9.2,9.2)

"BLD",8537,"KRN","B",9.8,9.8)

"BLD",8537,"KRN","B",19,19)

"BLD",8537,"KRN","B",19.1,19.1)

"BLD",8537,"KRN","B",101,101)

"BLD",8537,"KRN","B",409.61,409.61)

"BLD",8537,"KRN","B",771,771)

"BLD",8537,"KRN","B",779.2,779.2)

"BLD",8537,"KRN","B",870,870)

"BLD",8537,"KRN","B",8989.51,8989.51)

"BLD",8537,"KRN","B",8989.52,8989.52)

"BLD",8537,"KRN","B",8994,8994)

"BLD",8537,"QUES",0)
^9.62^^
"BLD",8537,"REQB",0)
^9.611^2^2
"BLD",8537,"REQB",1,0)
IB*2.0*447^2
"BLD",8537,"REQB",2,0)
IB*2.0*452^2
"BLD",8537,"REQB","B","IB*2.0*447",1)

"BLD",8537,"REQB","B","IB*2.0*452",2)

"FIA",356.2)
INSURANCE REVIEW
"FIA",356.2,0)
^IBT(356.2,
"FIA",356.2,0,0)
356.2ID
"FIA",356.2,0,1)
y^n^p^^^^n^^n
"FIA",356.2,0,10)

"FIA",356.2,0,11)

"FIA",356.2,0,"RLRO")

"FIA",356.2,0,"VR")
2.0^IB
"FIA",356.2,356.2)
1
"FIA",356.2,356.2,.02)

"FIA",356.2,356.2,.09)

"FIA",356.2,356.2,.28)

"FIA",356.2,356.2,.29)

"FIA",356.2,356.2,2.01)

"FIA",356.2,356.2,2.02)

"FIA",356.26)
CLAIMS TRACKING ROI CONSENT
"FIA",356.26,0)
^IBT(356.26,
"FIA",356.26,0,0)
356.26
"FIA",356.26,0,1)
y^n^f^^^^n
"FIA",356.26,0,10)

"FIA",356.26,0,11)

"FIA",356.26,0,"RLRO")

"FIA",356.26,0,"VR")
2.0^IB
"FIA",356.26,356.26)
0
"INI")
PRE^IBYP458
"INIT")
POST^IBYP458
"KRN",.402,1263,-1)
0^6
"KRN",.402,1263,0)
IBT QUICK EDIT^3121229.1328^@^356.2^^@^3130422
"KRN",.402,1263,"DIAB",1,1,356.212,0)
ALL
"KRN",.402,1263,"DIAB",1,1,356.213,0)
ALL
"KRN",.402,1263,"DIAB",1,1,356.214,0)
ALL
"KRN",.402,1263,"DIAB",2,0,356.2,6)
.08:
"KRN",.402,1263,"DR",1,356.2)
S DIE("NO^")="BACKOUTOK";.01;.04;I $$TCODE^IBTRC(DA)=70 S Y="@100";I $P(^IBT(356.2,DA,0),U,2) S Y="@200";@100;.05;@200;S IBTLST=$$LAST^IBTRC3($P(^IBT(356.2,DA,0),"^",2),DA);
"KRN",.402,1263,"DR",1,356.2,1)
N DFN S DFN=$P(^IBT(356.2,DA,0),U,5) I DFN W ! D DISP^IBCNS W !;1.05//^S X=$$HIPD^IBTRC3(DA,$G(IBTLST));S IBTLST=$$LAST^IBTRC3($P(^IBT(356.2,DA,0),"^",2),DA);I $$TCODE^IBTRC(DA)=70 S Y="@250";.06//^S X=$$PC^IBTRC3(DA,$G(IBTLST));
"KRN",.402,1263,"DR",1,356.2,2)
@250;.17//^S X=$$MC^IBTRC3(DA,$G(IBTLST));I $P(^IBT(356.2,DA,0),U,17)'=1 S Y="@170";.07//^S X=$$CP^IBTRC3(DA,$G(IBTLST));@170;2.01;I $$TCODE^IBTRC(DA)>35 S Y="@300";D HELP^IBTUTL3(DA);.11;
"KRN",.402,1263,"DR",1,356.2,3)
N IBY S IBY=$P($G(^IBE(356.7,+$P(^IBT(356.2,DA,0),U,11),0)),U,3) S Y=$S(IBY:"@"_IBY,1:"@350");@10;1.08;I X S Y="@11";.12;.13;@11;.14;2.02//^S X=$$AN^IBTRC3(DA,$G(IBTLST));S Y="@300";@20;1.07;I X S Y="@21";.15;.16;@21;12;S Y="@300";
"KRN",.402,1263,"DR",1,356.2,4)
@30;13;S Y="@300";@40;.2;S Y="@300";@50;.21;@300;@350;N IBTCOD S IBTCOD=$$TCODE^IBTRC(DA) S Y=$S(IBTCOD=50:"@355",IBTCOD=55:"@355",IBTCOD=60:"@356",1:"@400");@355;.26;.11;
"KRN",.402,1263,"DR",1,356.2,5)
N IBY S IBY=$P($G(^IBE(356.7,+$P(^IBT(356.2,DA,0),U,11),0)),U,3) S:IBY=20 Y="@400";2.02//^S X=$$AN^IBTRC3(DA,$G(IBTLST));S Y="@400";@356;.23;.1;I X'=3 S Y="@41";.29;I X=2 S Y="@42";2.02;14;@41;.25;@42;
"KRN",.402,1263,"DR",1,356.2,6)
I '$P(^IBT(356.2,DA,0),U,8) S Y="@400";^36^DIC(36,^^S I(0,0)=D0 S Y(1)=$S($D(^IBT(356.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S D(0)=+X S X=$S(D(0)>0:D(0),1:"");@400;11;.19;.24;
"KRN",.402,1263,"DR",2,36)
.147;.141;.142;.143;.144;.145;.146;
"KRN",.402,1263,"DR",2,356.212)
.01
"KRN",.402,1263,"DR",2,356.213)
.01:.02
"KRN",.402,1263,"DR",2,356.214)
.01:.02
"KRN",.402,1265,-1)
0^3
"KRN",.402,1265,0)
IBT CONTACT INFO^3121229.1528^@^356.2^^@^3130410
"KRN",.402,1265,"DR",1,356.2)
S IBTLST=$$LAST^IBTRC3($P(^IBT(356.2,DA,0),"^",2),DA);.01;I $P(^IBT(356.2,DA,0),U,2) S Y="@200";.05;@200;.06//^S X=$$PC^IBTRC3(DA,$G(IBTLST));.17//^S X=$$MC^IBTRC3(DA,$G(IBTLST));I $P(^IBT(356.2,DA,0),U,17)'=1 S Y="@170";
"KRN",.402,1265,"DR",1,356.2,1)
.07//^S X=$$CP^IBTRC3(DA,$G(IBTLST));@170;2.01;
"KRN",.402,1267,-1)
0^1
"KRN",.402,1267,0)
IBT ACTION INFO^3121229.1223^@^356.2^^@^3130422
"KRN",.402,1267,"DIAB",1,1,356.212,0)
ALL
"KRN",.402,1267,"DIAB",1,1,356.213,0)
ALL
"KRN",.402,1267,"DIAB",1,1,356.214,0)
ALL
"KRN",.402,1267,"DR",1,356.2)
S IBTLST=$$LAST^IBTRC3($P(^IBT(356.2,DA,0),"^",2),DA);.04;I $$TCODE^IBTRC(DA)>35 S Y="@300";D HELP^IBTUTL3(DA);.11;N IBY S IBY=$P($G(^IBE(356.7,+$P(^IBT(356.2,DA,0),U,11),0)),U,3) S Y=$S(IBY:"@"_IBY,1:"@350");@10;1.08;
"KRN",.402,1267,"DR",1,356.2,1)
I X S Y="@11";.12;.13;@11;.14;2.02//^S X=$$AN^IBTRC3(DA,$G(IBTLST));S Y="@300";@20;1.07;I X S Y="@21";.15;.16;@21;12;S Y="@300";@30;13;S Y="@300";@40;.2;S Y="@300";@50;.21;@300;@350;
"KRN",.402,1267,"DR",1,356.2,2)
N IBTCOD S IBTCOD=$$TCODE^IBTRC(DA) S Y=$S(IBTCOD=50:"@355",IBTCOD=55:"@355",IBTCOD=60:"@356",1:"@400");@355;.26;.11;N IBY S IBY=$P($G(^IBE(356.7,+$P(^IBT(356.2,DA,0),U,11),0)),U,3) S:IBY=20 Y="@400";
"KRN",.402,1267,"DR",1,356.2,3)
2.02//^S X=$$AN^IBTRC3(DA,$G(IBTLST));S Y="@400";@356;.23;.1;I X'=3 S Y="@41";.29;I X=2 S Y="@42";2.02;14;@41;.25;@42;@400;11;.19;.24;
"KRN",.402,1267,"DR",2,356.212)
.01
"KRN",.402,1267,"DR",2,356.213)
.01:.02
"KRN",.402,1267,"DR",2,356.214)
.01:.02
"KRN",.402,1273,-1)
0^2
"KRN",.402,1273,0)
IBT ADD APPEAL^3121229.1448^@^356.2^^@^3130328
"KRN",.402,1273,"DIAB",1,1,356.214,0)
ALL
"KRN",.402,1273,"DR",1,356.2)
I '$G(IBPARNT) S Y="@999";I '$G(IBCDFN) S Y="@999";.18////^S X=IBPARNT;1.05////^S X=IBCDFN;@999;.04;.23;.1;I X'=3 S Y="@200";.29;I X=2 S Y="@300";2.02;14;@200;.25;@300;11;.19;.24;@900;
"KRN",.402,1273,"DR",2,356.214)
.01:.02
"KRN",.402,1275,-1)
0^4
"KRN",.402,1275,0)
IBT FINAL OUTCOME^3121229.1548^@^356.2^^@^3130321
"KRN",.402,1275,"DIAB",1,1,356.214,0)
ALL
"KRN",.402,1275,"DR",1,356.2)
.29;I X=2 S Y="@999";2.02;14;@999;
"KRN",.402,1275,"DR",2,356.214)
.01:.02
"KRN",.402,1306,-1)
0^5
"KRN",.402,1306,0)
IBT INS VERIFICATION^3121229.1603^@^356.2^^@^3130407
"KRN",.402,1306,"DIAB",4,0,356.2,0)
TRACKING ID:
"KRN",.402,1306,"DR",1,356.2)
S DIE("NO^")="BACKOUTOK";.01;I $$TCODE^IBTRC(DA)'=85 S Y="@999";^356^IBT(356,^^S I(0,0)=D0 S Y(1)=$S($D(^IBT(356.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S D(0)=+X S X=$S(D(0)>0:D(0),1:"");1.05////^S X=$G(IBCDFN);
"KRN",.402,1306,"DR",1,356.2,1)
S IBTLST=$$LAST^IBTRC3($P(^IBT(356.2,DA,0),"^",2),DA);.06//^S X=$$PC^IBTRC3(DA,$G(IBTLST));.17//^S X=$$MC^IBTRC3(DA,$G(IBTLST));I $P(^IBT(356.2,DA,0),U,17)'=1 S Y="@170";.07//^S X=$$CP^IBTRC3(DA,$G(IBTLST));@170;2.01;2.02;11;
"KRN",.402,1306,"DR",1,356.2,2)
.19///^S X=10;@999;
"KRN",.402,1306,"DR",2,356)
.31;1.07;
"KRN",19,3374,-1)
2^3
"KRN",19,3374,0)
IB OUTPUT MANAGEMENT REPORTS^Management Reports (Billing) Menu^^M^66476^^^^^^^200
"KRN",19,3374,10,0)
^19.01IP^19^19
"KRN",19,3374,10,19,0)
13003^ROI
"KRN",19,3374,10,19,"^")
IB OUTPUT ROI EXPIRED
"KRN",19,3374,"U")
MANAGEMENT REPORTS (BILLING) M
"KRN",19,5548,-1)
2^4
"KRN",19,5548,0)
IBCR CHARGE MASTER IRM MENU^Charge Master IRM Menu^^M^10882^^^^^^^200
"KRN",19,5548,10,0)
^19.01IP^3^3
"KRN",19,5548,10,3,0)
13002^^
"KRN",19,5548,10,3,"^")
IBCR RC FACILITY TYPE
"KRN",19,5548,"U")
CHARGE MASTER IRM MENU
"KRN",19,13002,-1)
0^2
"KRN",19,13002,0)
IBCR RC FACILITY TYPE^RC Change Facility Type^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,13002,1,0)
^^2^2^3130130^
"KRN",19,13002,1,1,0)
This option allows the Facility Type of currently loaded Reasonable
"KRN",19,13002,1,2,0)
Charges to be changed on a specified date.
"KRN",19,13002,25)
OPTION^IBCRHRS
"KRN",19,13002,"U")
RC CHANGE FACILITY TYPE
"KRN",19,13003,-1)
0^1
"KRN",19,13003,0)
IB OUTPUT ROI EXPIRED^ROI Expired Consent^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,13003,1,0)
^^1^1^3130201^
"KRN",19,13003,1,1,0)
Report of patients with ROI consent that expires in a date range.
"KRN",19,13003,25)
IBOTRR
"KRN",19,13003,"U")
ROI EXPIRED CONSENT
"KRN",19.1,601,-1)
0^1
"KRN",19.1,601,0)
IB ROI EDIT^BILLING ROI EDIT KEY
"KRN",19.1,601,1,0)
^^2^2^3130110^
"KRN",19.1,601,1,1,0)
Assigned to billing personnel that should be allowed to add or edit 
"KRN",19.1,601,1,2,0)
Release of Information (ROI) Special Consents.
"KRN",101,927,-1)
4^8
"KRN",101,927,0)
IBCNS EXIT
"KRN",101,958,-1)
2^7
"KRN",101,958,0)
IBTRE  MENU^Claims Tracked Editor Menu^^M^10882^^^^^^^200
"KRN",101,958,10,0)
^101.01PA^18^18
"KRN",101,958,10,13,0)
927^EX^41^
"KRN",101,958,10,13,"^")
IBCNS EXIT
"KRN",101,958,10,18,0)
4933^RO^39^
"KRN",101,958,10,18,"^")
IBTRE ROI CONSENT
"KRN",101,4928,-1)
0^2
"KRN",101,4928,0)
IBTRR ROI ADD^Add ROI Consent^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4928,20)
D AA^IBTRR1
"KRN",101,4928,99)
62831,58144
"KRN",101,4929,-1)
0^4
"KRN",101,4929,0)
IBTRR ROI EDIT^Edit ROI^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4929,20)
D EA^IBTRR1
"KRN",101,4929,99)
62831,58373
"KRN",101,4930,-1)
0^5
"KRN",101,4930,0)
IBTRR ROI REVOKE^Revoke ROI^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4930,20)
D RA^IBTRR1
"KRN",101,4930,99)
62831,58445
"KRN",101,4931,-1)
0^3
"KRN",101,4931,0)
IBTRR ROI DELETE^Delete ROI^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4931,20)
D DA^IBTRR1
"KRN",101,4931,99)
62831,58559
"KRN",101,4932,-1)
0^1
"KRN",101,4932,0)
IBTRR  MENU^ROI Consent Menu^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4932,4)
26^4
"KRN",101,4932,10,0)
^101.01PA^5^5
"KRN",101,4932,10,1,0)
4928^AR^11^
"KRN",101,4932,10,1,"^")
IBTRR ROI ADD
"KRN",101,4932,10,2,0)
4931^DR^12^
"KRN",101,4932,10,2,"^")
IBTRR ROI DELETE
"KRN",101,4932,10,3,0)
4929^ER^21^
"KRN",101,4932,10,3,"^")
IBTRR ROI EDIT
"KRN",101,4932,10,4,0)
4930^RV^31^
"KRN",101,4932,10,4,"^")
IBTRR ROI REVOKE
"KRN",101,4932,10,5,0)
927^EX^22^
"KRN",101,4932,10,5,"^")
IBCNS EXIT
"KRN",101,4932,15)
I $G(IBFASTXT)=1 S VALMBCK="Q"
"KRN",101,4932,20)

"KRN",101,4932,26)
D SHOW^VALM
"KRN",101,4932,28)
Select Action: 
"KRN",101,4932,99)
62831,62689
"KRN",101,4933,-1)
0^6
"KRN",101,4933,0)
IBTRE ROI CONSENT^ROI Consent^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4933,20)
D OP^IBTRR1
"KRN",101,4933,99)
62831,64098
"KRN",409.61,1175,-1)
0^1
"KRN",409.61,1175,0)
IBT ROI SPECIAL CONSENT^1^^132^5^20^1^1^ROI Entry^IBTRR  MENU^ROI Special Consent^1^^1
"KRN",409.61,1175,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,1175,"ARRAY")
 ^TMP("IBTRR",$J)
"KRN",409.61,1175,"COL",0)
^409.621^6^6
"KRN",409.61,1175,"COL",1,0)
NUMBER^1^4
"KRN",409.61,1175,"COL",2,0)
EFFECTIVE^5^9^Effective
"KRN",409.61,1175,"COL",3,0)
EXPIRE^15^9^Expires^^1
"KRN",409.61,1175,"COL",4,0)
CONDITION^25^34^Special Condition^^
"KRN",409.61,1175,"COL",5,0)
STATUS^60^8^Status
"KRN",409.61,1175,"COL",6,0)
COMMENTS^69^60^Comments
"KRN",409.61,1175,"COL","AIDENT",1,3)

"KRN",409.61,1175,"COL","B","COMMENTS",6)

"KRN",409.61,1175,"COL","B","CONDITION",4)

"KRN",409.61,1175,"COL","B","EFFECTIVE",2)

"KRN",409.61,1175,"COL","B","EXPIRE",3)

"KRN",409.61,1175,"COL","B","NUMBER",1)

"KRN",409.61,1175,"COL","B","STATUS",5)

"KRN",409.61,1175,"FNL")
D EXIT^IBTRR
"KRN",409.61,1175,"HDR")
D HDR^IBTRR
"KRN",409.61,1175,"HLP")
D HELP^IBTRR
"KRN",409.61,1175,"INIT")
D INIT^IBTRR
"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;LME1^XPDIA1;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^2^1
"PKG",200,20,2,0)
2^^IBAXDR
"PKG",200,20,2,1)

"PKG",200,20,"B",2,2)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321
"PKG",200,22,1,"PAH",1,0)
458^3130422
"PKG",200,22,1,"PAH",1,1,0)
^^1^1^3130422
"PKG",200,22,1,"PAH",1,1,1,0)
Reasonable Charges Billing Enhancements 2013.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
35
"RTN","IBCC1")
0^1^B55298346^B54745451
"RTN","IBCC1",1,0)
IBCC1 ;ALB/MJB - CANCEL THIRD PARTY BILL ;10-OCT-94
"RTN","IBCC1",2,0)
 ;;2.0;INTEGRATED BILLING;**19,95,160,159,320,347,377,399,452,458**;21-MAR-94;Build 4
"RTN","IBCC1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCC1",4,0)
 ;
"RTN","IBCC1",5,0)
RNB ; -- Add a reason not billable to claims tracking
"RTN","IBCC1",6,0)
 N X,Y,DIC,DIE,I,J,DA,DR,IBTYP,IBTRE,IB,IBAPPT,IBDT,IBTALK,IBCODE,IBTRED,IBTSAV,FILL,IBRX,IBDATA,IBD,IBDT,IBQUIT,IBPRO,IBDD
"RTN","IBCC1",7,0)
 N ZT,TCNT,CNT
"RTN","IBCC1",8,0)
 Q:'$G(IBIFN)
"RTN","IBCC1",9,0)
 S IB(0)=$G(^DGCR(399,IBIFN,0)),IBTYP=$P(IB(0),"^",5),IBQUIT=0
"RTN","IBCC1",10,0)
 I '$D(DFN) S DFN=$P(IB(0),"^",2)
"RTN","IBCC1",11,0)
 KILL ^TMP($J,"IBCC1")
"RTN","IBCC1",12,0)
 ;
"RTN","IBCC1",13,0)
 ; -- is inpt find entry in dgpm, then in ibt(356, s da=ibtre then edit
"RTN","IBCC1",14,0)
INPT I IBTYP<3 D
"RTN","IBCC1",15,0)
 .S DATE=$P(IB(0),"^",3),DFN=$P(IB(0),"^",2)
"RTN","IBCC1",16,0)
 .S DGPM=$O(^DGPM("APTT1",DFN,DATE,0)) ; double check for asih
"RTN","IBCC1",17,0)
 .I DGPM S (IBTRE,IBTSAV)=$O(^IBT(356,"AD",DGPM,0))
"RTN","IBCC1",18,0)
 .I $G(IBTRE) D CTSET(IBTRE)
"RTN","IBCC1",19,0)
 .Q:IBQUIT
"RTN","IBCC1",20,0)
 .;
"RTN","IBCC1",21,0)
 .; -- alternate inpt method
"RTN","IBCC1",22,0)
 .S IBCODE=$O(^IBE(356.6,"ACODE",1,0))
"RTN","IBCC1",23,0)
 .S DATE=$P(IB(0),"^",3),DFN=$P(IB(0),"^",2)
"RTN","IBCC1",24,0)
 .S IBDT=(DATE-.25) F  S IBDT=$O(^IBT(356,"APTY",DFN,IBCODE,IBDT)) Q:'IBDT!(IBDT>(DATE+.24))  D
"RTN","IBCC1",25,0)
 ..S IBTRE=0 F  S IBTRE=$O(^IBT(356,"APTY",DFN,IBCODE,IBDT,IBTRE)) Q:IBTRE=""!(IBQUIT)  D:$G(IBTSAV)'=IBTRE CTSET(IBTRE)
"RTN","IBCC1",26,0)
 .Q
"RTN","IBCC1",27,0)
 ;
"RTN","IBCC1",28,0)
OPT ; -- is opt-find entries in IBT(356, for opt dates and then edit
"RTN","IBCC1",29,0)
 I IBTYP>2 S IBCODE=$O(^IBE(356.6,"ACODE",2,0)) D
"RTN","IBCC1",30,0)
 .S IBAPPT=0 F  S IBAPPT=$O(^DGCR(399,IBIFN,"OP",IBAPPT)) Q:'IBAPPT!(IBQUIT)  D
"RTN","IBCC1",31,0)
 ..S IBDT=(IBAPPT-.01) F  S IBDT=$O(^IBT(356,"APTY",DFN,IBCODE,IBDT)) Q:'IBDT!(IBDT>(IBAPPT+.24))  D
"RTN","IBCC1",32,0)
 ...S IBTRE=0 F  S IBTRE=$O(^IBT(356,"APTY",DFN,IBCODE,IBDT,IBTRE)) Q:IBTRE=""!(IBQUIT)  D CTSET(IBTRE)
"RTN","IBCC1",33,0)
 .Q
"RTN","IBCC1",34,0)
 ;
"RTN","IBCC1",35,0)
RX ; -- find rx's on bill
"RTN","IBCC1",36,0)
 S IBDD=0 F  S IBDD=$O(^IBA(362.4,"AIFN"_IBIFN,IBDD)) Q:'IBDD  S IBD=0 F  S IBD=$O(^IBA(362.4,"AIFN"_IBIFN,IBDD,IBD)) Q:'IBD!(IBQUIT)  D
"RTN","IBCC1",37,0)
 .S IBDATA=$G(^IBA(362.4,IBD,0)),IBRX=$P(IBDATA,"^",5),IBDT=$P(IBDATA,"^",3)
"RTN","IBCC1",38,0)
 .I '$G(IBRX) S DIC=52,DIC(0)="BO",X=$P(IBDATA,"^",1) D DIC^PSODI(52,.DIC,X) S IBRX=+Y K DIC,X,Y Q:IBRX=-1
"RTN","IBCC1",39,0)
 .S FILL="" F  S FILL=$O(^IBT(356,"ARXFL",IBRX,FILL)) Q:FILL=""!(IBQUIT)  D
"RTN","IBCC1",40,0)
 ..S IBTRE=0 F  S IBTRE=$O(^IBT(356,"ARXFL",IBRX,FILL,IBTRE)) Q:'IBTRE!(IBQUIT)  I $P(^IBT(356,+IBTRE,0),"^",6)=IBDT D CTSET(IBTRE)
"RTN","IBCC1",41,0)
 ;
"RTN","IBCC1",42,0)
PRO ; -- find prosthetics on bill
"RTN","IBCC1",43,0)
 S IBDD=0 F  S IBDD=$O(^IBA(362.5,"AIFN"_IBIFN,IBDD)) Q:'IBDD  S IBD=0 F  S IBD=$O(^IBA(362.5,"AIFN"_IBIFN,IBDD,IBD)) Q:'IBD!(IBQUIT)  D
"RTN","IBCC1",44,0)
 .S IBDATA=$G(^IBA(362.5,IBD,0)),IBPRO=$P(IBDATA,"^",4)
"RTN","IBCC1",45,0)
 .Q:'$G(IBPRO)
"RTN","IBCC1",46,0)
 .S IBTRE=0 F  S IBTRE=$O(^IBT(356,"APRO",+IBPRO,IBTRE)) Q:'IBTRE!(IBQUIT)  D CTSET(IBTRE)
"RTN","IBCC1",47,0)
 ;
"RTN","IBCC1",48,0)
 ; ----- Finished with the gathering of the CT data entries -----
"RTN","IBCC1",49,0)
 ;
"RTN","IBCC1",50,0)
 ; count up the total number of CT entries recorded in the scratch global
"RTN","IBCC1",51,0)
 S ZT="",TCNT=0
"RTN","IBCC1",52,0)
 F  S ZT=$O(^TMP($J,"IBCC1",ZT)) Q:ZT=""  S IBTRE=0 F  S IBTRE=$O(^TMP($J,"IBCC1",ZT,IBTRE)) Q:'IBTRE  S TCNT=TCNT+1
"RTN","IBCC1",53,0)
 ;
"RTN","IBCC1",54,0)
 ; loop thru all of the associated CT entries and call the RNBEDIT procedure for each one
"RTN","IBCC1",55,0)
 S ZT="",CNT=0 I $D(IBNOCANC) S IBNOCANC=TCNT
"RTN","IBCC1",56,0)
 F  S ZT=$O(^TMP($J,"IBCC1",ZT)) Q:ZT=""!IBQUIT  D  Q:IBQUIT
"RTN","IBCC1",57,0)
 . S IBTRE=0 F  S IBTRE=$O(^TMP($J,"IBCC1",ZT,IBTRE)) Q:'IBTRE!IBQUIT  S CNT=CNT+1 D RNBEDIT(IBTRE,ZT,TCNT,CNT)
"RTN","IBCC1",58,0)
 . Q
"RTN","IBCC1",59,0)
 ;
"RTN","IBCC1",60,0)
 ; clean-up the scratch global when completed
"RTN","IBCC1",61,0)
 KILL ^TMP($J,"IBCC1")
"RTN","IBCC1",62,0)
 Q
"RTN","IBCC1",63,0)
 ;
"RTN","IBCC1",64,0)
CTSET(IBTRE) ; procedure to store this CT entry in the scratch global
"RTN","IBCC1",65,0)
 Q:'$G(IBTRE)
"RTN","IBCC1",66,0)
 S ^TMP($J,"IBCC1",$$TYPE(IBTRE),IBTRE)=""
"RTN","IBCC1",67,0)
CTSETX ;
"RTN","IBCC1",68,0)
 Q
"RTN","IBCC1",69,0)
 ;
"RTN","IBCC1",70,0)
RNBEDIT(IBTRE,CTTYPE,TCNT,CNT) ; CT entry display and capture RNB data and additional comment data
"RTN","IBCC1",71,0)
 Q:IBQUIT
"RTN","IBCC1",72,0)
 I '$D(IBTALK) D
"RTN","IBCC1",73,0)
 . N CTZ
"RTN","IBCC1",74,0)
 . I '$D(IBNOCANC) D
"RTN","IBCC1",75,0)
 .. W !!,"Since you have canceled this bill, you may enter a Reason Not Billable and"
"RTN","IBCC1",76,0)
 .. W !,"an Additional Comment into Claims Tracking."
"RTN","IBCC1",77,0)
 .. W !,"This will take the care off of the UNBILLED lists."
"RTN","IBCC1",78,0)
 . I TCNT=1 S CTZ="Note:  There is 1 associated Claims Tracking entry."
"RTN","IBCC1",79,0)
 . E  S CTZ="Note:  There are "_TCNT_" associated Claims Tracking entries."
"RTN","IBCC1",80,0)
 . W !!,CTZ
"RTN","IBCC1",81,0)
 . Q
"RTN","IBCC1",82,0)
 ;
"RTN","IBCC1",83,0)
 S IBTALK=1
"RTN","IBCC1",84,0)
 ;
"RTN","IBCC1",85,0)
 N %,IBTRED,IBTRED1
"RTN","IBCC1",86,0)
 ;
"RTN","IBCC1",87,0)
 S IBTRED=$G(^IBT(356,IBTRE,0))
"RTN","IBCC1",88,0)
 S IBTRED1=$G(^IBT(356,IBTRE,1))
"RTN","IBCC1",89,0)
 ;
"RTN","IBCC1",90,0)
 W !!,"Claims Tracking Entry [",CNT," of ",TCNT,"]"
"RTN","IBCC1",91,0)
 W !?7,"Entry ID#: ",+IBTRED
"RTN","IBCC1",92,0)
 W !?12,"Type: ",$$EXPAND^IBTRE(356,.18,$P(IBTRED,U,18))
"RTN","IBCC1",93,0)
 ;
"RTN","IBCC1",94,0)
 I CTTYPE=1 D     ; inpatient admission or scheduled admission
"RTN","IBCC1",95,0)
 . W !?2,"Admission Date: ",$$FMTE^XLFDT($P(IBTRED,U,6),"1P")
"RTN","IBCC1",96,0)
 . Q
"RTN","IBCC1",97,0)
 ;
"RTN","IBCC1",98,0)
 I CTTYPE=2 D     ; outpatient visit
"RTN","IBCC1",99,0)
 . N IBOE,IBOE0
"RTN","IBCC1",100,0)
 . W !?6,"Visit Date: ",$$FMTE^XLFDT($P(IBTRED,U,6),"1P")
"RTN","IBCC1",101,0)
 . S IBOE=+$P(IBTRED,U,4),IBOE0=$$SCE^IBSDU(IBOE)
"RTN","IBCC1",102,0)
 . W !?10,"Clinic: ",$$GET1^DIQ(44,+$P(IBOE0,U,4)_",",.01)
"RTN","IBCC1",103,0)
 . Q
"RTN","IBCC1",104,0)
 ;
"RTN","IBCC1",105,0)
 I CTTYPE=3 D     ; prescription refill
"RTN","IBCC1",106,0)
 . N PSONTALK,PSOTMP,X,IBECME
"RTN","IBCC1",107,0)
 . S PSONTALK=1
"RTN","IBCC1",108,0)
 . S X=+$P(IBTRED,U,8)_U_+$P(IBTRED,U,10) D EN^PSOCPVW
"RTN","IBCC1",109,0)
 . ;if refill was deleted and EN^PSOCPVW doesn't return any data use IB API
"RTN","IBCC1",110,0)
 . I '$D(PSOTMP) D PSOCPVW^IBNCPDPC(+$P(IBTRED,U,2),+$P(IBTRED,U,8),.PSOTMP)
"RTN","IBCC1",111,0)
 . S IBECME=$P($$CLAIM^BPSBUTL(+$P(IBTRED,U,8),+$P(IBTRED,U,10)),U,6)   ; ecme#  DBIA 4719
"RTN","IBCC1",112,0)
 . W !?3,"Prescription#: ",$G(PSOTMP(52,+$P(IBTRED,U,8),.01,"E"))
"RTN","IBCC1",113,0)
 . I IBECME W !?11,"ECME#: ",IBECME    ; IB*2*452
"RTN","IBCC1",114,0)
 . I '$P(IBTRED,U,10) W !?7,"Fill Date: ",$$FMTE^XLFDT($P(IBTRED,U,6),"1P")
"RTN","IBCC1",115,0)
 . I $P(IBTRED,U,10) W !?5,"Refill Date: ",$$FMTE^XLFDT($P(IBTRED,U,6),"1P")
"RTN","IBCC1",116,0)
 . W !?12,"Drug: ",$G(PSOTMP(52,+$P(IBTRED,U,8),6,"E"))
"RTN","IBCC1",117,0)
 . Q
"RTN","IBCC1",118,0)
 ;
"RTN","IBCC1",119,0)
 I CTTYPE=4 D     ; prosthetic item
"RTN","IBCC1",120,0)
 . N IBDA,IBRMPR
"RTN","IBCC1",121,0)
 . S IBDA=$P(IBTRED,U,9)
"RTN","IBCC1",122,0)
 . D PRODATA^IBTUTL1(IBDA)
"RTN","IBCC1",123,0)
 . W !?3,"Delivery Date: ",$$FMTE^XLFDT($P(IBTRED,U,6),"1P")
"RTN","IBCC1",124,0)
 . W !?12,"Item: ",$G(IBRMPR(660,+IBDA,4,"E"))
"RTN","IBCC1",125,0)
 . W !?5,"Description: ",$G(IBRMPR(660,+IBDA,24,"E"))
"RTN","IBCC1",126,0)
 . Q
"RTN","IBCC1",127,0)
 ;
"RTN","IBCC1",128,0)
 I $G(IBMCSRNB)'="",$P(IBTRED,U,19) W !," Note:  A Reason Not Billable has been previously entered",!?8,"for this Claims Tracking record."
"RTN","IBCC1",129,0)
 I $G(IBMCSCAC)'="",$P(IBTRED1,U,8)'="" W !," Note:  An Additional Comment has been previously entered",!?8,"for this Claims Tracking record."
"RTN","IBCC1",130,0)
 ;
"RTN","IBCC1",131,0)
 S DA=IBTRE,DIE="^IBT(356,",DR=".19"
"RTN","IBCC1",132,0)
 I $G(IBMCSRNB)'="" S DR=".19//"_$P(IBMCSRNB,U,2)    ; IB*320 MCS cancel - reason not billable
"RTN","IBCC1",133,0)
 I $G(IBMCSCAC)'="" S DR=DR_";1.08//^S X=IBMCSCAC"   ; IB*377 MCS cancel - additional comment
"RTN","IBCC1",134,0)
 I $G(IBMCSCAC)="" S DR=DR_";1.08"                   ; IB*377 additional comment field SRS 3.3.2.1
"RTN","IBCC1",135,0)
 D ^DIE
"RTN","IBCC1",136,0)
 ;
"RTN","IBCC1",137,0)
 ; - if the RNB or additional comment changed, update the user and date/time last edited
"RTN","IBCC1",138,0)
 I $P(IBTRED,U,19)'=$P($G(^IBT(356,IBTRE,0)),U,19)!($P(IBTRED1,U,8)'=$P($G(^IBT(356,IBTRE,1)),U,8)) D NOW^%DTC S DR="1.03///"_%_";1.04////"_DUZ D ^DIE
"RTN","IBCC1",139,0)
 ;
"RTN","IBCC1",140,0)
 ; $D(Y) indicates an up-arrow exit from the DIE call (??)
"RTN","IBCC1",141,0)
 I $D(Y) S DFN=+$P(^IBT(356,IBTRE,0),"^",2) D FIND^IBOHCT(DFN,IBTRE) S IBQUIT=1
"RTN","IBCC1",142,0)
 ;
"RTN","IBCC1",143,0)
 D RNBC(IBTRE)
"RTN","IBCC1",144,0)
 Q
"RTN","IBCC1",145,0)
 ;
"RTN","IBCC1",146,0)
TYPE(Z) ; function to get the type of claims tracking entry
"RTN","IBCC1",147,0)
 ; Z is the ien to file 356
"RTN","IBCC1",148,0)
 Q +$P($G(^IBE(356.6,+$P($G(^IBT(356,+Z,0)),U,18),0)),U,3)
"RTN","IBCC1",149,0)
 ;
"RTN","IBCC1",150,0)
 ;
"RTN","IBCC1",151,0)
RNBC(IBTRN) ; check comments (#356,1.08), certain RNBs have certain Additional Comments requirements
"RTN","IBCC1",152,0)
 N IBRNB,IBCOMM,DR,DA,DIE,DIC,DIR,D0,X,Y,DIRUT,DUOUT Q:'$G(IBTRN)
"RTN","IBCC1",153,0)
 S IBRNB=+$P($G(^IBT(356,+IBTRN,0)),U,19),IBRNB=$P($G(^IBE(356.8,+IBRNB,0)),U,1) Q:IBRNB=""
"RTN","IBCC1",154,0)
 S IBCOMM=$P($G(^IBT(356,+IBTRN,1)),U,8)
"RTN","IBCC1",155,0)
 ;
"RTN","IBCC1",156,0)
 I IBRNB="OTHER",$L(IBCOMM)<15 D  ; Require Additional Comments at least 15 characters
"RTN","IBCC1",157,0)
 . W !!,"The RNB of OTHER requires a Comment of at least 15 characters",!
"RTN","IBCC1",158,0)
 . S DR="S Y=""@6"";.19;I X'=999 S Y=0;@6;1.08;I $L(X)<15 W !,""Length of 15 characters required"" S Y=""@6"""
"RTN","IBCC1",159,0)
 . S DA=IBTRN,DIE="^IBT(356," D ^DIE I $G(IBMCSCAC)'="" S IBMCSCAC=$P($G(^IBT(356,IBTRN,1)),U,8)
"RTN","IBCC1",160,0)
 ;
"RTN","IBCC1",161,0)
 I IBRNB="GLOBAL SURGERY",IBCOMM'["Global Surgery: " D  ; Add Global Surgery Date to Additional Comments
"RTN","IBCC1",162,0)
 . W !!,"For the RNB of GLOBAL SURGERY, add the related Surgery Date to the CT comments:",!,IBCOMM,!
"RTN","IBCC1",163,0)
 . S DIR(0)="DAO",DIR("A")="Enter Surgery Date: " D ^DIR Q:Y'?7N  W !
"RTN","IBCC1",164,0)
 . S IBCOMM="Global Surgery: "_$$FMTE^XLFDT(Y,2)_" "_IBCOMM,IBCOMM=$E(IBCOMM,1,80)
"RTN","IBCC1",165,0)
 . S DA=IBTRN,DIE="^IBT(356,",DR="1.08///^S X=IBCOMM" D ^DIE S DR="S Y=""@6"";.19;@6;1.08" D ^DIE
"RTN","IBCC1",166,0)
 Q
"RTN","IBCD2")
0^2^B27978767^B27925323
"RTN","IBCD2",1,0)
IBCD2 ;ALB/ARH - AUTOMATED BILLER (CREATE - SETUP/GATHER DATA FIELDS) ; 8/6/93
"RTN","IBCD2",2,0)
 ;;2.0;INTEGRATED BILLING;**4,55,91,106,384,458**;21-MAR-94;Build 4
"RTN","IBCD2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCD2",4,0)
 ;
"RTN","IBCD2",5,0)
FIND ;
"RTN","IBCD2",6,0)
 S IBX=$$CHKSYS^IBCD4 I 'IBX D TERR(0,0,$P(IBX,U,2)) G EXIT
"RTN","IBCD2",7,0)
 S IBS="IBC0" F  S IBS=$O(^TMP(IBS)) Q:IBS=""  S IBX=$E(IBS,4,99) Q:$E(IBS,1,3)'="IBC"!'+IBX  D
"RTN","IBCD2",8,0)
 . N IBQUERY
"RTN","IBCD2",9,0)
 . S IBDFN=0 F  S IBDFN=$O(^TMP(IBS,$J,IBDFN)) Q:'IBDFN  D
"RTN","IBCD2",10,0)
 .. S IBSTDT="" F  S IBSTDT=$O(^TMP(IBS,$J,IBDFN,IBSTDT)) Q:IBSTDT=""  D  I $D(IBCT)>9 D CREATE(.IBQUERY)
"RTN","IBCD2",11,0)
 ... K IBCT S IBTRN=0 F  S IBTRN=$O(^TMP(IBS,$J,IBDFN,IBSTDT,IBTRN)) Q:'IBTRN  S IBCT(IBTRN)="",IBTF=^TMP(IBS,$J,IBDFN,IBSTDT,IBTRN)
"RTN","IBCD2",12,0)
 .I $G(IBQUERY) D CLOSE^IBSDU(IBQUERY)
"RTN","IBCD2",13,0)
EXIT K IBS,IBDFN,IBSTDT,IBCT,IBTRN,IBTF,IBX,X,DFN
"RTN","IBCD2",14,0)
 Q
"RTN","IBCD2",15,0)
 ;
"RTN","IBCD2",16,0)
CREATE(IBQUERY) ;set up a bill,  required: IBCT(IBTRN),IBDFN,IBSTDT
"RTN","IBCD2",17,0)
 ; IBQUERY, if defined, will be used to activate the outpt visit QUERY
"RTN","IBCD2",18,0)
 Q:$D(IBCT)<9  K IB
"RTN","IBCD2",19,0)
 S IBSP=$G(^IBE(350.9,1,1)),IBDIV=$P(IBSP,U,25),IBTRN=+$O(IBCT(0))
"RTN","IBCD2",20,0)
 S IBTRND=$G(^IBT(356,IBTRN,0)) I 'IBTRND D TERR(+IBTRN,0,"Claims Tracking Record not found or not complete.") G QUIT
"RTN","IBCD2",21,0)
 S IBTYPE=$P(IBTRND,U,18) S IBX=$$CHK I 'IBX D TERR(+IBTRN,0,$P(IBX,U,2)) G QUIT
"RTN","IBCD2",22,0)
 ;
"RTN","IBCD2",23,0)
 S IBX=$$ARSET I 'IBX D TERR(IBTRN,0,$P(IBX,U,2)) G QUIT
"RTN","IBCD2",24,0)
 S IBIFN=+IBX,IB(.01)=$P(IBX,U,2),IB(.17)=$P(IBX,U,3),IB(.2)=1,IB(.22)=IBDIV
"RTN","IBCD2",25,0)
 S (IB(.02),DFN)=IBDFN,IB(.06)=IBTF
"RTN","IBCD2",26,0)
 S IB(.07)=$O(^DGCR(399.3,"B","REIMBURSABLE INS.",0)) I 'IB(.07) S IB(.07)=8
"RTN","IBCD2",27,0)
 S IBX=$O(^IBT(356.2,"ATRTP",IBTRN,1,"")) I +IBX S IB(163)=$E($P($G(^IBT(356.2,IBX,2)),U,2),1,18) ;pre-cert #
"RTN","IBCD2",28,0)
 ;
"RTN","IBCD2",29,0)
 S IBX=$P($G(^IBE(356.6,+IBTYPE,0)),U,1)
"RTN","IBCD2",30,0)
 I IBX="INPATIENT ADMISSION" D INPT^IBCD5 G CONT
"RTN","IBCD2",31,0)
 I IBX="PRESCRIPTION REFILL" D RXRF G CONT
"RTN","IBCD2",32,0)
 I IBX="OUTPATIENT VISIT" D OUTPT G CONT
"RTN","IBCD2",33,0)
 G QUIT
"RTN","IBCD2",34,0)
 ;
"RTN","IBCD2",35,0)
CONT S IBX=$$BDT^IBCU3(IBDFN,IB(.03)) S IB(.17)=$S(+IBX:IBX,1:IBIFN) ; continuing episode of care
"RTN","IBCD2",36,0)
 ;Note if a primary bill is found for an outpatient bill then it allows them to choose the bill during bill creation,  .17 is not editable on the screens
"RTN","IBCD2",37,0)
 S IB(.18)=$$SC^IBCU3(IBDFN) ; SC at time of care
"RTN","IBCD2",38,0)
 ;
"RTN","IBCD2",39,0)
 ; Note: variable IBQUERY used in this call to ^IBCD3
"RTN","IBCD2",40,0)
 D EN^IBCD3(.IBQUERY) ; create bill
"RTN","IBCD2",41,0)
 ;
"RTN","IBCD2",42,0)
 S IBTRN=0 F  S IBTRN=$O(IBCT(IBTRN)) Q:'IBTRN  D
"RTN","IBCD2",43,0)
 . D TERR(IBTRN,IBIFN,"") ; bill created
"RTN","IBCD2",44,0)
 . I ",2,3,"'[+$G(IB(.06)) D TEABD(IBTRN,0) ; remove eabd for final bills
"RTN","IBCD2",45,0)
 . D TBILL(IBTRN,IBIFN) ; set index for bill and event (356.399)
"RTN","IBCD2",46,0)
 . I $O(IB(43,0)),$$NABSCT^IBCU81(IBTRN) D TERR(IBTRN,IBIFN,"Stop/Clinic flagged to be ignored by auto biller but another visit is billed on same date.")
"RTN","IBCD2",47,0)
 . I $O(IB(43,0)),$$NBOE^IBCU81(+$P($G(^IBT(356,+IBTRN,0)),U,4)) D TERR(IBTRN,IBIFN,"Visit flagged as SC in source file but has no RNB.")
"RTN","IBCD2",48,0)
 ;
"RTN","IBCD2",49,0)
 S IBTRN=$O(IBCT(IBTRN)) Q:'IBTRN  D
"RTN","IBCD2",50,0)
 . I $G(IB(.05))>2,$G(IB(.27))=1,+$G(^DGCR(399,IBIFN,"MP")),'$O(^DGCR(399,IBIFN,"RC",0)) D TERR(IBTRN,IBIFN,"This RC Opt bill appears to have no institutional charges but may have professional charges.")
"RTN","IBCD2",51,0)
 ;
"RTN","IBCD2",52,0)
 S X=$$PRCDIV^IBCU71(IBIFN) ; reset bill division from site default to first procedures division
"RTN","IBCD2",53,0)
 ;
"RTN","IBCD2",54,0)
QUIT K X,Y,IBX,IBY,IBSP,IBDIV,IBTRN,IBTRND,IBTYPE,IB
"RTN","IBCD2",55,0)
 Q
"RTN","IBCD2",56,0)
 ;
"RTN","IBCD2",57,0)
OUTPT S IB(.04)=$S(+$P($G(^DG(40.8,+IBDIV,0)),U,3):7,1:1) ;division outpatient only or hospital
"RTN","IBCD2",58,0)
 S IB(.05)=3,IB(.06)=1,IB(.09)=4
"RTN","IBCD2",59,0)
 ;event dt is date of first visit, stmt from is first visit dt, stmt to is last visit dt on bill
"RTN","IBCD2",60,0)
 S (IB(.03),IB(151))=9999999,IB(152)=""
"RTN","IBCD2",61,0)
 S IBTRNX=0 F  S IBTRNX=$O(IBCT(IBTRNX)) Q:'IBTRNX  S IBX=$P($G(^IBT(356,IBTRNX,0)),U,6)\1 D
"RTN","IBCD2",62,0)
 . S IB(43,+IBX)="" S:IB(152)<IBX IB(152)=IBX F IBI=.03,151 I IB(IBI)>IBX S IB(IBI)=IBX
"RTN","IBCD2",63,0)
 I +$$BILLRATE^IBCRU3(+$G(IB(.07)),IB(.05),IB(.03),"RC") S IB(.27)=1 ; reasonable charges institutional bill
"RTN","IBCD2",64,0)
 K IBI,IBX,IBTRNX
"RTN","IBCD2",65,0)
 Q
"RTN","IBCD2",66,0)
RXRF S IB(.04)=$S(+$P($G(^DG(40.8,+IBDIV,0)),U,3):7,1:1) ;division outpatient only or hospital
"RTN","IBCD2",67,0)
 S IB(.05)=3,IB(.06)=1
"RTN","IBCD2",68,0)
 ;event dt is date of first visit, stmt from is first visit dt, stmt to is last visit dt on bill
"RTN","IBCD2",69,0)
 S (IB(.03),IB(151))=9999999,IB(152)=""
"RTN","IBCD2",70,0)
 S IBTRNX=0 F  S IBTRNX=$O(IBCT(IBTRNX)) Q:'IBTRNX  S IBRX=$G(^IBT(356,IBTRNX,0)) D
"RTN","IBCD2",71,0)
 . S IBX=$$RXRF^IBCD4(+$P(IBRX,U,8),+$P(IBRX,U,10)),IB(362.4,+$P(IBRX,U,8),+$P(IBRX,U,10))=IBX,IBX=$P(IBX,U,4)
"RTN","IBCD2",72,0)
 . S:IB(152)<IBX IB(152)=IBX F IBI=.03,151 I IB(IBI)>IBX S IB(IBI)=IBX
"RTN","IBCD2",73,0)
 . I $P(IBRX,U,31)>1 D  ;special consent roi
"RTN","IBCD2",74,0)
 .. S IB(155)=1,IB(157)=0 ; is dx sensitive
"RTN","IBCD2",75,0)
 .. I $P(IBRX,U,31)=2 S IB(157)=1 ; ROI obtained
"RTN","IBCD2",76,0)
 K IBI,IBX,IBTRNX,IBRX
"RTN","IBCD2",77,0)
 Q
"RTN","IBCD2",78,0)
 ;
"RTN","IBCD2",79,0)
ARSET() ; set up entry for new bill in AR returns IFN, bill number
"RTN","IBCD2",80,0)
 ;otherwise "0^error meaasge"
"RTN","IBCD2",81,0)
 N X S X="0^Can not set up bill in AR."
"RTN","IBCD2",82,0)
 S PRCASV("SER")=$P($G(^IBE(350.9,1,1)),U,14),PRCASV("SITE")=+$P($$SITE^VASITE,U,3)
"RTN","IBCD2",83,0)
 D SETUP^PRCASVC3
"RTN","IBCD2",84,0)
 I $P(PRCASV("ARBIL"),U)=-1 S X="0^"_$P(PRCASV("ARBIL"),U,2)_" - "_$$ETXT^IBEFUNC($P(PRCASV("ARBIL"),U,2)) G ARSETQ
"RTN","IBCD2",85,0)
 I $P(PRCASV("ARREC"),U)=-1 S X="0^"_$P(PRCASV("ARREC"),U,2)_" - "_$$ETXT^IBEFUNC($P(PRCASV("ARREC"),U,2)) G ARSETQ
"RTN","IBCD2",86,0)
 S X=PRCASV("ARREC")_U_$P(PRCASV("ARBIL"),"-",2)
"RTN","IBCD2",87,0)
ARSETQ K PRCASV
"RTN","IBCD2",88,0)
 Q X
"RTN","IBCD2",89,0)
 ;
"RTN","IBCD2",90,0)
CHK() ;other checks
"RTN","IBCD2",91,0)
 N X S X=1 I $G(^DPT(+$G(IBDFN),0))="" S X="0^Patient information lacking."
"RTN","IBCD2",92,0)
 Q X
"RTN","IBCD2",93,0)
 ;
"RTN","IBCD2",94,0)
TEABD(TRN,IBDT) ;
"RTN","IBCD2",95,0)
 S IBDT=+$G(IBDT),^TMP("IBEABD",$J,+TRN,+IBDT)=""
"RTN","IBCD2",96,0)
 Q
"RTN","IBCD2",97,0)
TERR(TRN,IFN,ER) ;
"RTN","IBCD2",98,0)
 N X S TRN=+$G(TRN),IFN=+$G(IFN),X=+$G(^TMP("IBCE",$J,DT,TRN,IFN))+1
"RTN","IBCD2",99,0)
 S ^TMP("IBCE",$J,DT,TRN,IFN,X)=$G(ER),^TMP("IBCE",$J,DT,TRN,IFN)=X
"RTN","IBCD2",100,0)
 Q
"RTN","IBCD2",101,0)
TBILL(TRN,IFN) ;
"RTN","IBCD2",102,0)
 I '$D(^IBT(356,+$G(TRN),0))!('$D(^DGCR(399,+$G(IFN),0))) Q
"RTN","IBCD2",103,0)
 S ^TMP("IBILL",$J,TRN,IFN)=""
"RTN","IBCD2",104,0)
 Q
"RTN","IBCNSP0")
0^3^B34211643^B33972429
"RTN","IBCNSP0",1,0)
IBCNSP0 ;ALB/AAS - INSURANCE MANAGEMENT - EXPANDED POLICY ;05-MAR-1993
"RTN","IBCNSP0",2,0)
 ;;2.0;INTEGRATED BILLING;**28,43,52,85,93,103,137,229,251,363,371,399,438,458**;21-MAR-94;Build 4
"RTN","IBCNSP0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNSP0",4,0)
 ;
"RTN","IBCNSP0",5,0)
 ;
"RTN","IBCNSP0",6,0)
CONTACT ; -- Insurance Contact Information
"RTN","IBCNSP0",7,0)
 N OFFSET,START
"RTN","IBCNSP0",8,0)
 ;
"RTN","IBCNSP0",9,0)
 ; The start of this section is designed to start on the same line
"RTN","IBCNSP0",10,0)
 ; as the User Information section (see VER^IBCNSP01).
"RTN","IBCNSP0",11,0)
 ;
"RTN","IBCNSP0",12,0)
 S START=$O(^TMP("IBCNSVP",$J,""),-1)-8
"RTN","IBCNSP0",13,0)
 S IB1ST("CONTACT")=START
"RTN","IBCNSP0",14,0)
 S OFFSET=42
"RTN","IBCNSP0",15,0)
 N IBTRC,IBTRCD,IBTCOD,IBCREFN
"RTN","IBCNSP0",16,0)
 S IBTCOD=$O(^IBE(356.11,"ACODE",85,0))
"RTN","IBCNSP0",17,0)
 ;
"RTN","IBCNSP0",18,0)
 S IBTRC=0,IBTRCD="",IBCREFN=""
"RTN","IBCNSP0",19,0)
 F  S IBTRC=$O(^IBT(356.2,"D",DFN,IBTRC)) Q:'IBTRC  D
"RTN","IBCNSP0",20,0)
 .Q:$P($G(^IBT(356.2,+IBTRC,1)),"^",5)'=IBCDFN  ; must be same policy
"RTN","IBCNSP0",21,0)
 .Q:$P($G(^IBT(356.2,+IBTRC,0)),"^",4)'=IBTCOD  ; must be ins. ver. type
"RTN","IBCNSP0",22,0)
 .S IBTRCD=$G(^IBT(356.2,+IBTRC,0)),IBCREFN=$P($G(^IBT(356.2,+IBTRC,2)),U,1)
"RTN","IBCNSP0",23,0)
 ;
"RTN","IBCNSP0",24,0)
 D SET(START,OFFSET," Insurance Contact (last) ",IORVON,IORVOFF)
"RTN","IBCNSP0",25,0)
 D SET(START+1,OFFSET," Person Contacted: "_$$EXPAND^IBTRE(356.2,.06,$P(IBTRCD,"^",6)))
"RTN","IBCNSP0",26,0)
 D SET(START+2,OFFSET,"Method of Contact: "_$$EXPAND^IBTRE(356.2,.17,$P(IBTRCD,"^",17)))
"RTN","IBCNSP0",27,0)
 D SET(START+3,OFFSET,"  Contact's Phone: "_$$EXPAND^IBTRE(356.2,.07,$P(IBTRCD,"^",7)))
"RTN","IBCNSP0",28,0)
 D SET(START+4,OFFSET,"    Call Ref. No.: "_$E(IBCREFN,1,19)_$S($L(IBCREFN)>19:"*",1:""))
"RTN","IBCNSP0",29,0)
 D SET(START+5,OFFSET,"     Contact Date: "_$$EXPAND^IBTRE(356.2,.01,$P(IBTRCD,"^")))
"RTN","IBCNSP0",30,0)
 ; no blank lines here because the User Information section is on the
"RTN","IBCNSP0",31,0)
 ; left and it is bigger than this section
"RTN","IBCNSP0",32,0)
 Q
"RTN","IBCNSP0",33,0)
 ;
"RTN","IBCNSP0",34,0)
POLICY ; -- Policy Region
"RTN","IBCNSP0",35,0)
 ; -- if pointer to policy file exists get data from policy file
"RTN","IBCNSP0",36,0)
 N OFFSET,START,IBP,IBX,IBPLNID,IBPLNNM,IBPLNNA,IBPLNLA
"RTN","IBCNSP0",37,0)
 S (IBPLNID,IBPLNNM,IBPLNNA,IBPLNLA)=""
"RTN","IBCNSP0",38,0)
 S START=1,OFFSET=2
"RTN","IBCNSP0",39,0)
 D GPLAN(+IBCPOLD2)
"RTN","IBCNSP0",40,0)
 D SET(START,OFFSET," Plan Information ",IORVON,IORVOFF)
"RTN","IBCNSP0",41,0)
 D SET(START+1,OFFSET,"   Is Group Plan: "_$S($P(IBCPOLD,"^",2)=1:"YES",1:"NO"))
"RTN","IBCNSP0",42,0)
 D SET(START+2,OFFSET,"      Group Name: "_$P(IBCPOLD,"^",3))
"RTN","IBCNSP0",43,0)
 D SET(START+3,OFFSET,"    Group Number: "_$P(IBCPOLD,"^",4))
"RTN","IBCNSP0",44,0)
 D SET(START+4,OFFSET,"             BIN: "_$P(IBCPOLD2,"^",2)) ;;Daou/EEN
"RTN","IBCNSP0",45,0)
 D SET(START+5,OFFSET,"             PCN: "_$P(IBCPOLD2,"^",3)) ;;04/09/04
"RTN","IBCNSP0",46,0)
 D SET(START+6,OFFSET,"    Type of Plan: "_$E($P($G(^IBE(355.1,+$P(IBCPOLD,"^",9),0)),"^"),1,23))
"RTN","IBCNSP0",47,0)
 S IBX=7
"RTN","IBCNSP0",48,0)
 I $P(IBCPOLD,U,14)]"" D
"RTN","IBCNSP0",49,0)
 . D SET(START+IBX,OFFSET,"   Plan Category: "_$$EXPAND^IBTRE(355.3,.14,$P(IBCPOLD,"^",14))) S IBX=IBX+1
"RTN","IBCNSP0",50,0)
 I $P(IBCPOLD,U,15)]"" D
"RTN","IBCNSP0",51,0)
 . D SET(START+IBX,OFFSET," Electronic Type: "_$$EXPAND^IBTRE(355.3,.15,$P(IBCPOLD,"^",15))) S IBX=IBX+1
"RTN","IBCNSP0",52,0)
 D SET(START+IBX,OFFSET,"  Plan Filing TF: "_$P(IBCPOLD,"^",13)_$S($P(IBCPOLD,U,16):" ("_$$FTFN^IBCNSU31(IBCPOL)_")",1:"")) S IBX=IBX+1
"RTN","IBCNSP0",53,0)
 ;
"RTN","IBCNSP0",54,0)
 D SET(START+IBX,OFFSET,"      ePharmacy Plan ID: "_IBPLNID) S IBX=IBX+1
"RTN","IBCNSP0",55,0)
 D SET(START+IBX,OFFSET,"    ePharmacy Plan Name: "_IBPLNNM) S IBX=IBX+1
"RTN","IBCNSP0",56,0)
 D SET(START+IBX,OFFSET,"  ePharmacy Natl Status: "_IBPLNNA) S IBX=IBX+1
"RTN","IBCNSP0",57,0)
 D SET(START+IBX,OFFSET," ePharmacy Local Status: "_IBPLNLA) S IBX=IBX+1
"RTN","IBCNSP0",58,0)
 ;
"RTN","IBCNSP0",59,0)
 ; -- in case pointer is missing
"RTN","IBCNSP0",60,0)
 I '$G(^IBA(355.3,+$P(IBCDFND,"^",18),0)) D
"RTN","IBCNSP0",61,0)
 .D SET(START+1,OFFSET,"Insurance Number: "_$P(IBCDFND,"^",2))
"RTN","IBCNSP0",62,0)
 .D SET(START+2,OFFSET,"      Group Name: "_$P(IBCDFND,"^",15))
"RTN","IBCNSP0",63,0)
 .D SET(START+3,OFFSET,"    Group Number: "_$P(IBCDFND,"^",3))
"RTN","IBCNSP0",64,0)
 .Q
"RTN","IBCNSP0",65,0)
 Q
"RTN","IBCNSP0",66,0)
 ;
"RTN","IBCNSP0",67,0)
INS ; -- Insurance Co. Region
"RTN","IBCNSP0",68,0)
 N OFFSET,START,IBADD,IBCDFNDA,IBCDFNDB
"RTN","IBCNSP0",69,0)
 S START=1,OFFSET=45
"RTN","IBCNSP0",70,0)
 D SET(START,OFFSET," Insurance Company ",IORVON,IORVOFF)
"RTN","IBCNSP0",71,0)
 D SET(START+1,OFFSET,"   Company: "_$P($G(^DIC(36,+IBCDFND,0)),"^"))
"RTN","IBCNSP0",72,0)
 S IBCDFNDA=$G(^DIC(36,+IBCDFND,.11)),IBCDFNDB=$G(^(.13))
"RTN","IBCNSP0",73,0)
 G:IBCDFNDA="" INSQ
"RTN","IBCNSP0",74,0)
 D SET(START+2,OFFSET,"    Street: "_$P(IBCDFNDA,"^")) S IBADD=1
"RTN","IBCNSP0",75,0)
 I $P(IBCDFNDA,"^",2)'="" D SET(START+3,OFFSET,"  Street 2: "_$P(IBCDFNDA,"^",2)) S IBADD=2
"RTN","IBCNSP0",76,0)
 I $P(IBCDFNDA,"^",3)'="" D SET(START+4,OFFSET,"  Street 3: "_$P(IBCDFNDA,"^",3)) S IBADD=3
"RTN","IBCNSP0",77,0)
 D SET(START+2+IBADD,OFFSET,"City/State: "_$E($P(IBCDFNDA,"^",4),1,15)_$S($P(IBCDFNDA,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCDFNDA,"^",5),0)),"^",2)_" "_$E($P(IBCDFNDA,"^",6),1,5))
"RTN","IBCNSP0",78,0)
 D SET(START+3+IBADD,OFFSET,"Billing Ph: "_$P(IBCDFNDB,"^",2))
"RTN","IBCNSP0",79,0)
 D SET(START+4+IBADD,OFFSET,"Precert Ph: "_$$PHONE^IBCNSC01(IBCDFNDB))
"RTN","IBCNSP0",80,0)
 ;
"RTN","IBCNSP0",81,0)
INSQ Q
"RTN","IBCNSP0",82,0)
 ;
"RTN","IBCNSP0",83,0)
SPON ; -- Sponsor (Insured Person) Region
"RTN","IBCNSP0",84,0)
 N IBC3,IBZIP,START,OFFSET,IBA,DA,DR,DIC,DIQ
"RTN","IBCNSP0",85,0)
 S IBC3=$G(^DPT(DFN,.312,IBCDFN,3))
"RTN","IBCNSP0",86,0)
 S DA=+$P(IBC3,"^",2),DR=.01,DIQ(0)="E",DIC="^DIC(23,",DIQ="IBA" D EN^DIQ1
"RTN","IBCNSP0",87,0)
 S START=$O(^TMP("IBCNSVP",$J,""),-1)+1,OFFSET=4
"RTN","IBCNSP0",88,0)
 D SET(START,OFFSET," Insured Person's Information (use Subscriber Update Action) ",IORVON,IORVOFF)
"RTN","IBCNSP0",89,0)
 D SET(START+1,OFFSET,"    Insured's DOB: "_$$DAT3^IBOUTL($P(IBC3,"^")))
"RTN","IBCNSP0",90,0)
 D SET(START+2,OFFSET,"    Insured's Sex: "_$$EXTERNAL^DILFD(2.312,3.12,,$P(IBC3,U,12)))
"RTN","IBCNSP0",91,0)
 D SET(START+3,OFFSET," Insured's Branch: "_$G(IBA(23,DA,.01,"E")))
"RTN","IBCNSP0",92,0)
 D SET(START+4,OFFSET,"   Insured's Rank: "_$P(IBC3,"^",3))
"RTN","IBCNSP0",93,0)
 ;
"RTN","IBCNSP0",94,0)
 S OFFSET=43
"RTN","IBCNSP0",95,0)
 S Y=$P(IBC3,"^",10) D ZIPOUT^VAFADDR S IBZIP=Y
"RTN","IBCNSP0",96,0)
 D SET(START+1,OFFSET," Str 1: "_$P(IBC3,"^",6))
"RTN","IBCNSP0",97,0)
 D SET(START+2,OFFSET," Str 2: "_$P(IBC3,"^",7))
"RTN","IBCNSP0",98,0)
 D SET(START+3,OFFSET,"  City: "_$P(IBC3,"^",8))
"RTN","IBCNSP0",99,0)
 D SET(START+4,OFFSET,"St/Zip: "_$P($G(^DIC(5,+$P(IBC3,"^",9),0)),"^",2)_"  "_IBZIP)
"RTN","IBCNSP0",100,0)
 D SET(START+5,OFFSET,"SubDiv: "_$P(IBC3,"^",14))
"RTN","IBCNSP0",101,0)
 D SET(START+6,OFFSET," Cntry: "_$P(IBC3,"^",13))
"RTN","IBCNSP0",102,0)
 D SET(START+7,OFFSET," Phone: "_$P(IBC3,"^",11))
"RTN","IBCNSP0",103,0)
 ;
"RTN","IBCNSP0",104,0)
 ; blank lines at end of section
"RTN","IBCNSP0",105,0)
 D SET(START+6,2," ")
"RTN","IBCNSP0",106,0)
 D SET(START+7,2," ")
"RTN","IBCNSP0",107,0)
 Q
"RTN","IBCNSP0",108,0)
 ;
"RTN","IBCNSP0",109,0)
BLANK(LINE) ; -- Build blank line
"RTN","IBCNSP0",110,0)
 D SET^VALM10(.LINE,$J("",80))
"RTN","IBCNSP0",111,0)
 Q
"RTN","IBCNSP0",112,0)
 ;
"RTN","IBCNSP0",113,0)
SET(LINE,COL,TEXT,ON,OFF) ; -- set display info in array
"RTN","IBCNSP0",114,0)
 D:'$D(@VALMAR@(LINE,0)) BLANK(.LINE)
"RTN","IBCNSP0",115,0)
 D SET^VALM10(.LINE,$$SETSTR^VALM1(.TEXT,@VALMAR@(LINE,0),.COL,$L(TEXT)))
"RTN","IBCNSP0",116,0)
 D:$G(ON)]""!($G(OFF)]"") CNTRL^VALM10(.LINE,.COL,$L(TEXT),$G(ON),$G(OFF))
"RTN","IBCNSP0",117,0)
 W:'(LINE#5) "."
"RTN","IBCNSP0",118,0)
 Q
"RTN","IBCNSP0",119,0)
 ;
"RTN","IBCNSP0",120,0)
GPLAN(IBPLDA) ; get data from PLAN file (#366.03) related to the
"RTN","IBCNSP0",121,0)
 ; GROUP INSURANCE PLAN file (#355.3) and the INSURANCE COMPANY file (#36)
"RTN","IBCNSP0",122,0)
 ; that is associated with the PATIENT
"RTN","IBCNSP0",123,0)
 ; input - IBPLDA - ien of the PLAN file (#366.03)
"RTN","IBCNSP0",124,0)
 N IBPLN0,IBAIEN,IBAPIEN,IBAP0
"RTN","IBCNSP0",125,0)
 S IBPLN0=$G(^IBCNR(366.03,IBPLDA,0)) ;; Q:'$P(IBPLN0,"^",3) ;quit if payer not defined 
"RTN","IBCNSP0",126,0)
 S IBPLNID=$P(IBPLN0,"^"),IBPLNNM=$P(IBPLN0,"^",2)
"RTN","IBCNSP0",127,0)
 S IBAIEN=$O(^IBCNR(366.13,"B","E-PHARM","")) Q:'IBAIEN
"RTN","IBCNSP0",128,0)
 S IBAPIEN=$O(^IBCNR(366.03,IBPLDA,3,"B",IBAIEN,"")) Q:'IBAPIEN
"RTN","IBCNSP0",129,0)
 S IBAP0=$G(^IBCNR(366.03,IBPLDA,3,IBAPIEN,0))
"RTN","IBCNSP0",130,0)
 S IBPLNNA=$S($P(IBAP0,"^",2)=0:"NOT ACTIVE",1:"ACTIVE")
"RTN","IBCNSP0",131,0)
 S IBPLNLA=$S($P(IBAP0,"^",3)=0:"NOT ACTIVE",1:"ACTIVE")
"RTN","IBCNSP0",132,0)
 Q
"RTN","IBCNSP0",133,0)
 ;
"RTN","IBCNSP0",134,0)
 ;IBCNSP0
"RTN","IBCRCI")
0^4^B10399804^B9964623
"RTN","IBCRCI",1,0)
IBCRCI ;ALB/ARH - RATES: CALCULATION ITEM/EVENT COST FNCTNS ; 22-MAY-96
"RTN","IBCRCI",2,0)
 ;;2.0;INTEGRATED BILLING;**52,106,245,458**;21-MAR-94;Build 4
"RTN","IBCRCI",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCRCI",4,0)
 ;
"RTN","IBCRCI",5,0)
 ;       standard callable functions to get item charge/cost
"RTN","IBCRCI",6,0)
 ;
"RTN","IBCRCI",7,0)
 ; notice that each function works for all Charge Methods and both types of Sets (Item/Event)
"RTN","IBCRCI",8,0)
 ; - if the Charge Set is based on event then the event charge will be calculated (item passed will not be used)
"RTN","IBCRCI",9,0)
 ; - the charges are the unit charges so UNIT should only be defined (or not 1) if the Charge Method is Quantity
"RTN","IBCRCI",10,0)
 ;
"RTN","IBCRCI",11,0)
ITCHG(CS,ITEM,EVDT,MOD) ; returns total base unit charge for a specific charge set, item/event and date
"RTN","IBCRCI",12,0)
 ; works for both types of Charge Set (Item and Event) and all Charge Methods
"RTN","IBCRCI",13,0)
 ; does not factor in division, units or rate schedule adjustment
"RTN","IBCRCI",14,0)
 ; if charges for the Set are based on event rather than item, will get active events, ITEM is not required/used
"RTN","IBCRCI",15,0)
 ; Input:  CS = Charge Set ifn, ITEM = billable item pointer, MOD = cpt modifier
"RTN","IBCRCI",16,0)
 ; Output: total item charge on EVDT ^ effective date of charge ^ total base charge
"RTN","IBCRCI",17,0)
 ;
"RTN","IBCRCI",18,0)
 N IBX,IBITMARR,IBCHGARR,IBITEM,IBI,IBLN,IBCHG,IBCHGB,IBCI,IBEFDT S IBX=0,EVDT=$G(EVDT)\1
"RTN","IBCRCI",19,0)
 I '$D(^IBE(363.1,+$G(CS),0))!(EVDT'?7N) G ITCHGQ
"RTN","IBCRCI",20,0)
 I +$G(ITEM),'$$ITBICHK^IBCRU2(+CS,+ITEM) G ITCHGQ
"RTN","IBCRCI",21,0)
 ;
"RTN","IBCRCI",22,0)
 I $$CSITMS^IBCRCU1(CS)=2 D CSALL^IBCRCU1(CS,EVDT,.IBITMARR)
"RTN","IBCRCI",23,0)
 I +$G(ITEM),'$G(IBITMARR) S IBITMARR=EVDT,IBITMARR(ITEM)=""
"RTN","IBCRCI",24,0)
 I '$G(IBITMARR) G ITCHGQ
"RTN","IBCRCI",25,0)
 ;
"RTN","IBCRCI",26,0)
 S (IBCHG,IBCHGB,IBCI,IBITEM)=0 F  S IBITEM=$O(IBITMARR(IBITEM)) Q:'IBITEM  D
"RTN","IBCRCI",27,0)
 . D ITMCHG^IBCRCC(CS,IBITEM,EVDT,$G(MOD),.IBCHGARR)
"RTN","IBCRCI",28,0)
 . S IBI=0 F  S IBI=$O(IBCHGARR(IBI)) Q:'IBI  D
"RTN","IBCRCI",29,0)
 .. S IBLN=IBCHGARR(IBI) S IBCHG=IBCHG+$P(IBLN,U,3),IBCI=+IBLN,IBCHGB=IBCHGB+$P(IBLN,U,4)
"RTN","IBCRCI",30,0)
 ;
"RTN","IBCRCI",31,0)
 I +IBCI S IBEFDT=$P($G(^IBA(363.2,+IBCI,0)),U,3)
"RTN","IBCRCI",32,0)
 I +IBCHG S IBX=+$FN(+IBCHG,"",2)_U_$G(IBEFDT) I +IBCHGB S IBX=IBX_U_+$FN(+IBCHGB,"",2)
"RTN","IBCRCI",33,0)
 ;
"RTN","IBCRCI",34,0)
ITCHGQ Q IBX
"RTN","IBCRCI",35,0)
 ;
"RTN","IBCRCI",36,0)
ITCOST(RS,CS,ITEM,EVDT,MOD,DIV,UNIT) ; returns total adjusted unit cost/charge for a specific schedule/set, item/event, date
"RTN","IBCRCI",37,0)
 ; this is the actual cost of one item/event, does factor in division, units and rate schedule adjustment
"RTN","IBCRCI",38,0)
 ; units should be 1 or undefined unless the Charge Method of the rate is Quantity/Miles/Minutes/Hours
"RTN","IBCRCI",39,0)
 ; if the Charge Set is region specific, Division passed must be within that region or no charge
"RTN","IBCRCI",40,0)
 ; Input:  CS = Charge Set ifn, ITEM = billable item pointer, MOD = cpt modifier, UNIT = 1 unless Quantity
"RTN","IBCRCI",41,0)
 ; Output: total adjusted item charge/cost on EVDT ^ effective date of charge
"RTN","IBCRCI",42,0)
 ;
"RTN","IBCRCI",43,0)
 N IBCOST,IBBCOST,IBDT S IBCOST=0,EVDT=$G(EVDT)\1,UNIT=$S(+$G(UNIT):UNIT,1:1)
"RTN","IBCRCI",44,0)
 I '$D(^IBE(363.1,+$G(CS),0))!(EVDT'?7N) G ITCOSTQ
"RTN","IBCRCI",45,0)
 I $$CSDV^IBCRU3(CS,+$G(DIV))<0 G ITCOSTQ
"RTN","IBCRCI",46,0)
 S UNIT=$$CPTUNITS^IBCRCU1(CS,UNIT)
"RTN","IBCRCI",47,0)
 ;
"RTN","IBCRCI",48,0)
 S IBCOST=$$ITCHG(CS,$G(ITEM),EVDT,$G(MOD)),IBDT=$P(IBCOST,U,2),IBBCOST=$P(IBCOST,U,3)
"RTN","IBCRCI",49,0)
 S IBCOST=+IBCOST*UNIT
"RTN","IBCRCI",50,0)
 I +IBBCOST S IBCOST=IBCOST+IBBCOST
"RTN","IBCRCI",51,0)
 I +$G(RS) S IBCOST=+$$RATECHG^IBCRCC(RS,+IBCOST,EVDT)
"RTN","IBCRCI",52,0)
 I +IBCOST S IBCOST=+$FN(+IBCOST,"",2)_U_IBDT
"RTN","IBCRCI",53,0)
 ;
"RTN","IBCRCI",54,0)
ITCOSTQ Q IBCOST
"RTN","IBCRCI",55,0)
 ;
"RTN","IBCRCI",56,0)
BICOST(RT,BT,EVDT,BE,ITEM,MOD,DIV,UNIT,CT,BLBS) ; returns the total unit cost of a particular item/event for a specific Rate Type and Bill Type, i.e. payer
"RTN","IBCRCI",57,0)
 ; this includes all cost for the item and payer, which may include more than one charge set or rate schedule
"RTN","IBCRCI",58,0)
 ; ITEM is not required if it is an Event CS, BE is required only as a screen for a specific event, if desired
"RTN","IBCRCI",59,0)
 ;
"RTN","IBCRCI",60,0)
 N IBX,IBY,IBCOST,IBDT,IBARR,IBRS,IBCS S (IBX,IBCOST)=0,IBDT=""
"RTN","IBCRCI",61,0)
 I $G(BE)'=""!(+$G(ITEM)) D RT^IBCRU3($G(RT),$G(BT),$G(EVDT),.IBARR,$G(BE),$G(CT))
"RTN","IBCRCI",62,0)
 ;
"RTN","IBCRCI",63,0)
 S IBRS=0 F  S IBRS=$O(IBARR(IBRS)) Q:'IBRS  D
"RTN","IBCRCI",64,0)
 . S IBCS=0 F  S IBCS=$O(IBARR(IBRS,IBCS)) Q:'IBCS  I +IBARR(IBRS,IBCS) D
"RTN","IBCRCI",65,0)
 .. I $G(BE)="INPATIENT DRG",'$$CHGICU^IBCRBC2(IBCS,+$G(BLBS)) Q
"RTN","IBCRCI",66,0)
 .. S IBY=$$ITCOST(IBRS,IBCS,$G(ITEM),$G(EVDT),$G(MOD),$G(DIV),$G(UNIT)) I +$P(IBY,U,2)>IBDT S IBDT=+$P(IBY,U,2)
"RTN","IBCRCI",67,0)
 .. S IBCOST=+IBCOST+IBY
"RTN","IBCRCI",68,0)
 S IBX=IBCOST_U_IBDT
"RTN","IBCRCI",69,0)
 Q IBX
"RTN","IBCRCI",70,0)
 ;
"RTN","IBCRCI",71,0)
BILLCOST(IBIFN,EVDT,BE,ITEM,MOD,UNIT) ; returns total cost of a particular item or event for a specific bill
"RTN","IBCRCI",72,0)
 ; cost may include more than one set or schedule charge if the item/event is defined for more than one set
"RTN","IBCRCI",73,0)
 ; or schedule assigned to the rate type/event type of the bill
"RTN","IBCRCI",74,0)
 ;
"RTN","IBCRCI",75,0)
 N IBX,IB0,IBRT,IBBT S IBX=0,IB0=$G(^DGCR(399,+$G(IBIFN),0)),IBRT=+$P(IB0,U,7),IBBT=$P(IB0,U,5)
"RTN","IBCRCI",76,0)
 I IB0'="" S IBX=$$BICOST(IBRT,IBBT,$G(EVDT),$G(BE),$G(ITEM),$G(MOD),$P(IB0,U,22),$G(UNIT),$P(IB0,U,27))
"RTN","IBCRCI",77,0)
 Q IBX
"RTN","IBCRHBS3")
0^5^B26470229^B26475049
"RTN","IBCRHBS3",1,0)
IBCRHBS3 ;ALB/ARH - RATES: UPLOAD HOST FILES (RC 2+) PARSE ; 10-OCT-03
"RTN","IBCRHBS3",2,0)
 ;;2.0;INTEGRATED BILLING;**245,458**;21-MAR-94;Build 4
"RTN","IBCRHBS3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCRHBS3",4,0)
 ;
"RTN","IBCRHBS3",5,0)
 ; IBFILE, IBFLINE, COLUMNS required and VERS expected on entry
"RTN","IBCRHBS3",6,0)
 ; Parse lines from the Host Files and place them in XTMP.  
"RTN","IBCRHBS3",7,0)
 ; Direct copy of fields, number of fields and placement not changed, but cleaned up (spaces, $, commas removed)
"RTN","IBCRHBS3",8,0)
 ;
"RTN","IBCRHBS3",9,0)
A ; Inpatient Facility DRG Charges:  process a single line, parse out into individual fields and store in XTMP
"RTN","IBCRHBS3",10,0)
 ;
"RTN","IBCRHBS3",11,0)
 N LINE,IBI,IBPIECE,IBITYPE,IBCODE,IBXTMP,IBXIFN S IBXTMP="IBCR RC A" I ('$G(COLUMNS))!($G(IBFLINE)="") Q
"RTN","IBCRHBS3",12,0)
 ;
"RTN","IBCRHBS3",13,0)
 S LINE="" F IBI=1:1:COLUMNS S IBPIECE=$$P(IBFLINE,IBI),IBPIECE=$$STRIP(IBPIECE) S LINE=LINE_IBPIECE_U
"RTN","IBCRHBS3",14,0)
 ;
"RTN","IBCRHBS3",15,0)
 S IBITYPE=$P(LINE,U,2) I IBITYPE'="DRG",IBITYPE'="SNF" Q
"RTN","IBCRHBS3",16,0)
 S IBCODE=$P(LINE,U,1) I IBCODE'?3N Q
"RTN","IBCRHBS3",17,0)
 ;
"RTN","IBCRHBS3",18,0)
 S IBXIFN=$$SET(IBFILE,IBXTMP,LINE)
"RTN","IBCRHBS3",19,0)
 ;
"RTN","IBCRHBS3",20,0)
 Q
"RTN","IBCRHBS3",21,0)
 ;
"RTN","IBCRHBS3",22,0)
B ; Outpatient Facility CPT Charges:  process a single line, parse out into individual fields and store in XTMP
"RTN","IBCRHBS3",23,0)
 ;
"RTN","IBCRHBS3",24,0)
 N LINE,IBI,IBPIECE,IBITYPE,IBCODE,IBXTMP,IBXIFN S IBXTMP="IBCR RC B" I ('$G(COLUMNS))!($G(IBFLINE)="") Q
"RTN","IBCRHBS3",25,0)
 ;
"RTN","IBCRHBS3",26,0)
 S LINE="" F IBI=1:1:COLUMNS S IBPIECE=$$P(IBFLINE,IBI),IBPIECE=$$STRIP(IBPIECE) S LINE=LINE_IBPIECE_U
"RTN","IBCRHBS3",27,0)
 ;
"RTN","IBCRHBS3",28,0)
 S IBITYPE=$P(LINE,U,2) I IBITYPE'="CPT",IBITYPE'="HCPCS",IBITYPE'="PHOSP" Q
"RTN","IBCRHBS3",29,0)
 S IBCODE=$P(LINE,U,1) I IBCODE'?5UN Q
"RTN","IBCRHBS3",30,0)
 ;
"RTN","IBCRHBS3",31,0)
 S IBXIFN=$$SET(IBFILE,IBXTMP,LINE,IBCODE)
"RTN","IBCRHBS3",32,0)
 ;
"RTN","IBCRHBS3",33,0)
 Q
"RTN","IBCRHBS3",34,0)
 ;
"RTN","IBCRHBS3",35,0)
C ; Physician CPT Charges:  process a single line, parse out into individual fields and store in XTMP
"RTN","IBCRHBS3",36,0)
 ;
"RTN","IBCRHBS3",37,0)
 N LINE,IBI,IBPIECE,IBITYPE,IBCODE,IBXTMP,IBXIFN S IBXTMP="IBCR RC C" I ('$G(COLUMNS))!($G(IBFLINE)="") Q
"RTN","IBCRHBS3",38,0)
 ;
"RTN","IBCRHBS3",39,0)
 S LINE="" F IBI=1:1:COLUMNS S IBPIECE=$$P(IBFLINE,IBI),IBPIECE=$$STRIP(IBPIECE) S LINE=LINE_IBPIECE_U
"RTN","IBCRHBS3",40,0)
 ;
"RTN","IBCRHBS3",41,0)
 S IBITYPE=$P(LINE,U,2) I IBITYPE'="CPT",IBITYPE'="HCPCS" Q
"RTN","IBCRHBS3",42,0)
 S IBCODE=$P(LINE,U,1) I IBCODE'?5UN Q
"RTN","IBCRHBS3",43,0)
 ;
"RTN","IBCRHBS3",44,0)
 S IBXIFN=$$SET(IBFILE,IBXTMP,LINE,IBCODE)
"RTN","IBCRHBS3",45,0)
 ;
"RTN","IBCRHBS3",46,0)
 Q
"RTN","IBCRHBS3",47,0)
 ;
"RTN","IBCRHBS3",48,0)
D ; Service Category Codes:  process a single line, parse out into individual fields and store in XTMP
"RTN","IBCRHBS3",49,0)
 ;
"RTN","IBCRHBS3",50,0)
 N LINE,IBI,IBPIECE,IBCODE,IBXTMP,IBXIFN S IBXTMP="IBCR RC D" I ('$G(COLUMNS))!($G(IBFLINE)="") Q
"RTN","IBCRHBS3",51,0)
 ;
"RTN","IBCRHBS3",52,0)
 S LINE="" F IBI=1:1:COLUMNS S IBPIECE=$$P(IBFLINE,IBI),IBPIECE=$$STRIP(IBPIECE) S LINE=LINE_IBPIECE_U
"RTN","IBCRHBS3",53,0)
 ;
"RTN","IBCRHBS3",54,0)
 S IBCODE=$P(LINE,U,1) I 'IBCODE Q
"RTN","IBCRHBS3",55,0)
 ;
"RTN","IBCRHBS3",56,0)
 S IBXIFN=$$SET(IBFILE,IBXTMP,LINE,IBCODE)
"RTN","IBCRHBS3",57,0)
 ;
"RTN","IBCRHBS3",58,0)
 Q
"RTN","IBCRHBS3",59,0)
 ;
"RTN","IBCRHBS3",60,0)
E ; Area Factors:  process a single line, parse out into individual fields and store in XTMP
"RTN","IBCRHBS3",61,0)
 ;
"RTN","IBCRHBS3",62,0)
 N LINE,IBI,IBPIECE,IBZIP,IBXTMP,IBXIFN S IBXTMP="IBCR RC E" I ('$G(COLUMNS))!($G(IBFLINE)="") Q
"RTN","IBCRHBS3",63,0)
 ;
"RTN","IBCRHBS3",64,0)
 S LINE="" F IBI=1:1:COLUMNS S IBPIECE=$$P(IBFLINE,IBI),IBPIECE=$$STRIP(IBPIECE) S LINE=LINE_IBPIECE_U
"RTN","IBCRHBS3",65,0)
 ;
"RTN","IBCRHBS3",66,0)
 S IBZIP=$P(LINE,U,1) I IBZIP'?3N Q
"RTN","IBCRHBS3",67,0)
 ;
"RTN","IBCRHBS3",68,0)
 S IBXIFN=$$SET(IBFILE,IBXTMP,LINE,IBZIP) D SETSITE(IBZIP)
"RTN","IBCRHBS3",69,0)
 ;
"RTN","IBCRHBS3",70,0)
 Q
"RTN","IBCRHBS3",71,0)
 ;
"RTN","IBCRHBS3",72,0)
F ; Zip Codes and Sites:  process a single line, parse out into individual fields and store in XTMP
"RTN","IBCRHBS3",73,0)
 ;
"RTN","IBCRHBS3",74,0)
 N LINE,IBSITE,IBZIP,IBNM,IBSTYPE,IBXTMP,IBXIFN S IBXTMP="IBCR RC F" I ('$G(COLUMNS))!($G(IBFLINE)="") Q
"RTN","IBCRHBS3",75,0)
 ;
"RTN","IBCRHBS3",76,0)
 S IBSITE=$$P(IBFLINE,1),IBSITE=$$STRIP(IBSITE) I IBSITE'?3N0.4UN Q  ; division number
"RTN","IBCRHBS3",77,0)
 S IBNM=$$P(IBFLINE,2) ; facility name
"RTN","IBCRHBS3",78,0)
 S IBZIP=$$P(IBFLINE,3),IBZIP=$$STRIP(IBZIP) I IBZIP'?3N Q  ; 3-digit zip code
"RTN","IBCRHBS3",79,0)
 S IBSTYPE=$$P(IBFLINE,4),IBSTYPE=$$STRIP(IBSTYPE) I 'IBSTYPE Q  ; facility type
"RTN","IBCRHBS3",80,0)
 ;
"RTN","IBCRHBS3",81,0)
 S LINE=IBSITE_U_IBNM_U_IBZIP_U_IBSTYPE
"RTN","IBCRHBS3",82,0)
 ;
"RTN","IBCRHBS3",83,0)
 S IBXIFN=$$SET(IBFILE,IBXTMP,LINE,IBZIP) D SETSITE(IBZIP,IBSITE,IBNM,IBSTYPE)
"RTN","IBCRHBS3",84,0)
 ;
"RTN","IBCRHBS3",85,0)
 Q
"RTN","IBCRHBS3",86,0)
 ;
"RTN","IBCRHBS3",87,0)
 ;
"RTN","IBCRHBS3",88,0)
 ;
"RTN","IBCRHBS3",89,0)
SETHDR(IBFILE,IBXRF1) ; set up header for XTMP file
"RTN","IBCRHBS3",90,0)
 ;
"RTN","IBCRHBS3",91,0)
 N IBX S IBX=IBFILE_" RC v"_$G(VERS)_" Host File Upload, "_$P($$HTE^XLFDT($H,2),":",1,2)_" by "_$P($G(^VA(200,+$G(DUZ),0)),U,1)
"RTN","IBCRHBS3",92,0)
 S ^XTMP(IBXRF1,0)=$$FMADD^XLFDT(DT,2)_U_DT_U_IBX_U_0_U_0
"RTN","IBCRHBS3",93,0)
 I IBXRF1="IBCR RC SITE" S ^XTMP(IBXRF1,"VERSION")=$G(VERS),^XTMP(IBXRF1,"VERSION INACTIVE")=$$VERSEDT^IBCRHBRV($G(VERS))
"RTN","IBCRHBS3",94,0)
 Q
"RTN","IBCRHBS3",95,0)
 ;
"RTN","IBCRHBS3",96,0)
SET(IBFILE,IBXRF1,LINE,ACROSS) ; set data parsed from host file to XTMP
"RTN","IBCRHBS3",97,0)
 N IBX,IBK
"RTN","IBCRHBS3",98,0)
 S IBX=$G(^XTMP(IBXRF1,0)) I IBX="" D SETHDR(IBFILE,IBXRF1)
"RTN","IBCRHBS3",99,0)
 S IBK=+$P(IBX,U,5)+1,$P(^XTMP(IBXRF1,0),U,5)=IBK
"RTN","IBCRHBS3",100,0)
 S ^XTMP(IBXRF1,IBK)=LINE
"RTN","IBCRHBS3",101,0)
 ;
"RTN","IBCRHBS3",102,0)
 I $G(ACROSS)'="" S ^XTMP(IBXRF1,"A",ACROSS,IBK)=""
"RTN","IBCRHBS3",103,0)
 Q IBK
"RTN","IBCRHBS3",104,0)
 ;
"RTN","IBCRHBS3",105,0)
 ;
"RTN","IBCRHBS3",106,0)
SETSITE(ZIP,SITE,NAME,TYPE) ; set up site entries and cross references
"RTN","IBCRHBS3",107,0)
 ; the Area Factor File (E) has entries not associated with a VA site, Site/Zip file (F) only has valid VA sites
"RTN","IBCRHBS3",108,0)
 ; therefore there are many zip codes (E) with no assigned division but that must be available for selection
"RTN","IBCRHBS3",109,0)
 ; these unassigned zip codes are passed in with only Zip defined, 
"RTN","IBCRHBS3",110,0)
 ; a temporary Division Number '9yyXy' and Name 'ZIP Code ZZZ' is created, Type is blank to be set by user
"RTN","IBCRHBS3",111,0)
 ; if the zip is '000' then these are the Nation wide charges and the corresponding Division Number/Name is used
"RTN","IBCRHBS3",112,0)
 N IBXRF1,LINE,IBXIFN
"RTN","IBCRHBS3",113,0)
 ;
"RTN","IBCRHBS3",114,0)
 I ZIP="000" S SITE="999",NAME="NATIONWIDE AVERAGE",TYPE=""
"RTN","IBCRHBS3",115,0)
 I $G(SITE)="" S SITE="9"_$E(ZIP,1,2)_"X"_$E(ZIP,3),NAME="ZIP Code "_ZIP,TYPE=""
"RTN","IBCRHBS3",116,0)
 I $O(^XTMP("IBCR RC SITE","C",SITE_" ",0)) W !!,"Site Error: Dupicate Site Numbers: ",SITE
"RTN","IBCRHBS3",117,0)
 ;
"RTN","IBCRHBS3",118,0)
 S IBXRF1="IBCR RC SITE"
"RTN","IBCRHBS3",119,0)
 S LINE=SITE_U_NAME_U_ZIP_U_TYPE
"RTN","IBCRHBS3",120,0)
 ;
"RTN","IBCRHBS3",121,0)
 S IBXIFN=$$SET(IBXRF1,IBXRF1,LINE)
"RTN","IBCRHBS3",122,0)
 ;
"RTN","IBCRHBS3",123,0)
 I $G(NAME)'="" S ^XTMP(IBXRF1,"B",NAME,IBXIFN)=""
"RTN","IBCRHBS3",124,0)
 I $G(ZIP)'="" S ZIP="ZC "_ZIP S ^XTMP(IBXRF1,"B",ZIP,IBXIFN)=""
"RTN","IBCRHBS3",125,0)
 I $G(SITE)'="" S SITE=SITE_" " S ^XTMP(IBXRF1,"B",SITE,IBXIFN)="",^XTMP(IBXRF1,"C",SITE,IBXIFN)=""
"RTN","IBCRHBS3",126,0)
 ;
"RTN","IBCRHBS3",127,0)
 Q
"RTN","IBCRHBS3",128,0)
 ;
"RTN","IBCRHBS3",129,0)
 ;
"RTN","IBCRHBS3",130,0)
STRIP(IBVAL) ; strip blanks, $, and commas
"RTN","IBCRHBS3",131,0)
 N IBI,IBY,IBX S IBY=""
"RTN","IBCRHBS3",132,0)
 F IBI=1:1:200 S IBX=$E(IBVAL,IBI) Q:IBX=""  I IBX'=" ",IBX'=",",IBX'="$" S IBY=IBY_IBX
"RTN","IBCRHBS3",133,0)
 Q IBY
"RTN","IBCRHBS3",134,0)
 ;
"RTN","IBCRHBS3",135,0)
 ;
"RTN","IBCRHBS3",136,0)
P(LINE,P) ; parse the line and return the piece requested (replaces $P since may be two dilimiters)
"RTN","IBCRHBS3",137,0)
 ; the pieces are delimited by a comma, any piece that includes a comma within the text is surrounded by quotes
"RTN","IBCRHBS3",138,0)
 N I,U1,U2,PC S U1=",",U2="""",PC=""
"RTN","IBCRHBS3",139,0)
 ;
"RTN","IBCRHBS3",140,0)
 F I=1:1:P D
"RTN","IBCRHBS3",141,0)
 . I $E(LINE)=U2 S LINE=$E(LINE,2,9999),PC=$P(LINE,U2,1),LINE=$P(LINE,U2_U1,2,9999) Q
"RTN","IBCRHBS3",142,0)
 . ;
"RTN","IBCRHBS3",143,0)
 . S PC=$P(LINE,U1,1),LINE=$P(LINE,U1,2,9999)
"RTN","IBCRHBS3",144,0)
 ;
"RTN","IBCRHBS3",145,0)
 Q PC
"RTN","IBCRHRS")
0^6^B166827262^n/a
"RTN","IBCRHRS",1,0)
IBCRHRS ;ALB/ARH - RATES: UPLOAD (RC) CHANGE SITE TYPE OPTION ; 25-JAN-13
"RTN","IBCRHRS",2,0)
 ;;2.0;INTEGRATED BILLING;**458**;21-MAR-94;Build 4
"RTN","IBCRHRS",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCRHRS",4,0)
 ;
"RTN","IBCRHRS",5,0)
 ; Option that allows the user to change a divisions Facility Charge Type
"RTN","IBCRHRS",6,0)
 ; only allows the currently released version to be changed
"RTN","IBCRHRS",7,0)
 ;
"RTN","IBCRHRS",8,0)
OPTION ; Option entry Change Reasonable Charge Facility Type
"RTN","IBCRHRS",9,0)
 N IBVERS,IBVERSDT,IBCMRG,IBHFRG,IBNWFT,IBNWDT,IBXRF1,IBDS,IBDONE S IBDONE=0 S IBDS="",$P(IBDS,"=",IOM+1)=""
"RTN","IBCRHRS",10,0)
 ;
"RTN","IBCRHRS",11,0)
 W !!,"Change Reasonable Charges Facility Type:",!
"RTN","IBCRHRS",12,0)
 W !,"This option allows the Facility Type of currently loaded Reasonable Charges"
"RTN","IBCRHRS",13,0)
 W !,"to be changed on a specified date.  A Non-Provider Based Freestanding site"
"RTN","IBCRHRS",14,0)
 W !,"with only Professional charges may be changed to a Provider Based site with"
"RTN","IBCRHRS",15,0)
 W !,"both Institutional and Professional charges.",!
"RTN","IBCRHRS",16,0)
 W !,"This option will complete the following steps:"
"RTN","IBCRHRS",17,0)
 W !,"1.  Uploads the current version of Reasonable Charges."
"RTN","IBCRHRS",18,0)
 W !,"2.  Request the Region/Division to change, the new type and effective date."
"RTN","IBCRHRS",19,0)
 W !,"3.  Calculate the charges for the Region with the new type and effective date."
"RTN","IBCRHRS",20,0)
 W !,"4.  Request confirmation then update the permanent files in the Charge Master:"
"RTN","IBCRHRS",21,0)
 W !,"    inactivate the currently loaded charges for the region, update the "
"RTN","IBCRHRS",22,0)
 W !,"    Region's Type, and load the new charges into the Charge Master.",!
"RTN","IBCRHRS",23,0)
 W !,"Only CBO can approve a Facility Type change for a division.  "
"RTN","IBCRHRS",24,0)
 W !,"Approval from CBO must be received before using this option to change charges.",!
"RTN","IBCRHRS",25,0)
 S DIR(0)="Y",DIR("A")="Approval Received to Change a Divisions Facility Type, Continue" D ^DIR K DIR,X I Y'=1 Q
"RTN","IBCRHRS",26,0)
 ;
"RTN","IBCRHRS",27,0)
 ;
"RTN","IBCRHRS",28,0)
 S IBVERS=+$$VERSTR^IBCRHBRV(1) I 'IBVERS G OPTIONQ ; get the current version
"RTN","IBCRHRS",29,0)
 S IBVERSDT=+$$VERSDT^IBCRHBRV(IBVERS) I 'IBVERSDT G OPTIONQ ; get effective date of current version
"RTN","IBCRHRS",30,0)
 ;
"RTN","IBCRHRS",31,0)
 W !,IBDS,!,"*** Set-Up process:",!
"RTN","IBCRHRS",32,0)
 ;
"RTN","IBCRHRS",33,0)
 D XTMPKL ; delete any existing upload files in XTMP
"RTN","IBCRHRS",34,0)
 I '$$XTMPHL(IBVERS) G OPTIONQ ; load current version load files into XTMP
"RTN","IBCRHRS",35,0)
 ;
"RTN","IBCRHRS",36,0)
 W !,IBDS,!,"*** Get specifications from user and check the change is valid",!
"RTN","IBCRHRS",37,0)
 ;
"RTN","IBCRHRS",38,0)
 S IBCMRG=$$ASKCMRG I 'IBCMRG G OPTIONQ ; get CM Billing Region from user (#363.31)
"RTN","IBCRHRS",39,0)
 S IBHFRG=$$GETHFRG(IBCMRG) I 'IBHFRG G OPTIONQ ; get HF Billing Region from Host Site File
"RTN","IBCRHRS",40,0)
 S IBNWFT=$$ASKNWFT(IBHFRG) I 'IBNWFT G OPTIONQ ; get the new Charge Type for the Billing Region
"RTN","IBCRHRS",41,0)
 S IBNWDT=$$ASKNWDT I 'IBNWDT G OPTIONQ ; get the effective date of the change from the user
"RTN","IBCRHRS",42,0)
 I '$$CHECK(IBVERS,IBVERSDT,IBNWDT,IBCMRG,IBHFRG,IBNWFT) G OPTIONQ
"RTN","IBCRHRS",43,0)
 ;
"RTN","IBCRHRS",44,0)
 W !,IBDS,!,"*** Calculate charges and update effective date based on user entry",!
"RTN","IBCRHRS",45,0)
 ;
"RTN","IBCRHRS",46,0)
 S $P(IBHFRG,U,5)=IBNWFT
"RTN","IBCRHRS",47,0)
 D CALCRC^IBCRHBS5(IBHFRG) ; calculate site charges with new type, create XTMP files
"RTN","IBCRHRS",48,0)
 I '$$XTMPDT(IBVERSDT,IBNWDT) G OPTIONQ ; update calculated charges dates in XTMP
"RTN","IBCRHRS",49,0)
 ;
"RTN","IBCRHRS",50,0)
 W !,IBDS,!,"*** Confirm Request to Update Charge Master",!
"RTN","IBCRHRS",51,0)
 ;
"RTN","IBCRHRS",52,0)
 I '$$ASKFNL(IBCMRG,IBNWDT,IBNWFT) G OPTIONQ ; get final confirmation for change from user
"RTN","IBCRHRS",53,0)
 ;
"RTN","IBCRHRS",54,0)
 W !,IBDS,!,"*** Complete Request - Update Charge Master",!
"RTN","IBCRHRS",55,0)
 ;
"RTN","IBCRHRS",56,0)
 I '$$CMINDT(IBCMRG,IBVERSDT,IBNWDT) G OPTIONQ ; inactivate existing charges in Charge Master
"RTN","IBCRHRS",57,0)
 S IBDONE=1
"RTN","IBCRHRS",58,0)
 D CMRGFT(IBCMRG,IBNWFT) ; update Facility Type in Charge Master
"RTN","IBCRHRS",59,0)
 D CMLOAD ; load the modifified charges into Charge Master
"RTN","IBCRHRS",60,0)
 ;
"RTN","IBCRHRS",61,0)
OPTIONQ ;
"RTN","IBCRHRS",62,0)
 D XTMPKL ; delete any existing upload files in XTMP
"RTN","IBCRHRS",63,0)
 ;
"RTN","IBCRHRS",64,0)
 I +IBDONE W !,IBDS,!,"*** Process Complete, Charge Master Charges Updated.",!
"RTN","IBCRHRS",65,0)
 I 'IBDONE W !,IBDS,!,"*** Process Ended, No Permanent Changes.",!
"RTN","IBCRHRS",66,0)
 Q
"RTN","IBCRHRS",67,0)
 ;
"RTN","IBCRHRS",68,0)
 ;
"RTN","IBCRHRS",69,0)
XTMPKL ; delete any existing RC Upload Files in XTMP
"RTN","IBCRHRS",70,0)
 N IBX
"RTN","IBCRHRS",71,0)
 W !,"Removing any existing temporary Upload files: ",!
"RTN","IBCRHRS",72,0)
 S IBX="IBCR RC" F  S IBX=$O(^XTMP(IBX)) Q:IBX'["IBCR RC"  K ^XTMP(IBX) W "."
"RTN","IBCRHRS",73,0)
 S IBX="IBCR UPLOAD RC" F  S IBX=$O(^XTMP(IBX)) Q:IBX'["IBCR UPLOAD RC"  K ^XTMP(IBX) W "."
"RTN","IBCRHRS",74,0)
 Q
"RTN","IBCRHRS",75,0)
 ;
"RTN","IBCRHRS",76,0)
XTMPHL(VERS) ; load version of RC Host Files IBCR RC into XTMP (IBCRHBS1)
"RTN","IBCRHRS",77,0)
 N IBPATH,IBFILES,IBFILE,IBNODE,IBOK S IBOK=0 I '$G(VERS) G XTMPHLQ
"RTN","IBCRHRS",78,0)
 ;
"RTN","IBCRHRS",79,0)
 W !!,"Upload National Reasonable Charges v"_VERS_" Host Files to temporary local files:",!
"RTN","IBCRHRS",80,0)
 S IBPATH=$$PATH^IBCRHBS1 I IBPATH<0 G XTMPHLQ ; get path/directory
"RTN","IBCRHRS",81,0)
 D FILES^IBCRHBRV(.IBFILES,VERS) ; get list of files to be loaded
"RTN","IBCRHRS",82,0)
 I '$$FNDHOST^IBCRHBS1(.IBFILES,IBPATH) G XTMPHLQ ; check host files are available/found
"RTN","IBCRHRS",83,0)
 ;
"RTN","IBCRHRS",84,0)
 W !,"Loading National Reasonable Charges v"_VERS_" Host Files into temporary local file:"
"RTN","IBCRHRS",85,0)
 S IBOK=1,IBFILE="" F  S IBFILE=$O(IBFILES(IBFILE)) Q:IBFILE=""  D  I 'IBOK Q
"RTN","IBCRHRS",86,0)
 . S IBNODE=IBFILES(IBFILE)
"RTN","IBCRHRS",87,0)
 . I $$LOAD^IBCRHBS2(IBPATH,IBFILE,$P(IBNODE,U,1),$P(IBNODE,U,2),VERS,$P(IBNODE,U,3)) Q
"RTN","IBCRHRS",88,0)
 . W !!,"   Error while processing host file, can not continue!",!! S IBOK=0
"RTN","IBCRHRS",89,0)
 I +IBOK W !!,"Upload of Reasonable Charges v"_VERS_" Host Files Complete.",!
"RTN","IBCRHRS",90,0)
 ;
"RTN","IBCRHRS",91,0)
XTMPHLQ Q IBOK
"RTN","IBCRHRS",92,0)
 ;
"RTN","IBCRHRS",93,0)
XTMPDT(VSDT,NWDT) ; update calculated charges IBCR UPLOAD effective date in XTMP, returns count changed
"RTN","IBCRHRS",94,0)
 N IBXRF1,IBSUB,IBX,IBLN,IBCNT S IBXRF1=0,IBCNT=0
"RTN","IBCRHRS",95,0)
 I ($G(VSDT)'?7N)!($G(NWDT)'?7N) G XTMPDTQ
"RTN","IBCRHRS",96,0)
 ;
"RTN","IBCRHRS",97,0)
 S IBSUB="IBCR UPLOAD RC" S IBXRF1=$O(^XTMP(IBSUB)) I IBXRF1'[IBSUB G XTMPDTQ
"RTN","IBCRHRS",98,0)
 ;
"RTN","IBCRHRS",99,0)
 W !!,"Changing Effective Date from ",$$FMTE^XLFDT(VSDT,2)," to ",$$FMTE^XLFDT(NWDT,2)," in Host Files."
"RTN","IBCRHRS",100,0)
 W !!,"Host Files ",IBXRF1,?55,"Count = ",$P($G(^XTMP(IBXRF1,0)),U,4),!
"RTN","IBCRHRS",101,0)
 ;
"RTN","IBCRHRS",102,0)
 ; loop through XTMP calculated charges and update the effective date
"RTN","IBCRHRS",103,0)
 S IBSUB="" F  S IBSUB=$O(^XTMP(IBXRF1,IBSUB)) Q:IBSUB=""  D
"RTN","IBCRHRS",104,0)
 . S IBX=0 F  S IBX=$O(^XTMP(IBXRF1,IBSUB,IBX)) Q:'IBX  D
"RTN","IBCRHRS",105,0)
 .. S IBLN=$G(^XTMP(IBXRF1,IBSUB,IBX))
"RTN","IBCRHRS",106,0)
 .. I +$P(IBLN,U,3),+$P(IBLN,U,3)<NWDT Q
"RTN","IBCRHRS",107,0)
 .. ;
"RTN","IBCRHRS",108,0)
 .. I $P(IBLN,U,2)=VSDT S $P(IBLN,U,2)=NWDT,^XTMP(IBXRF1,IBSUB,IBX)=IBLN S IBCNT=IBCNT+1
"RTN","IBCRHRS",109,0)
 . I +IBCNT W !,IBSUB,?25,IBCNT
"RTN","IBCRHRS",110,0)
 ;
"RTN","IBCRHRS",111,0)
XTMPDTQ I IBCNT'=$P($G(^XTMP(IBXRF1,0)),U,4) S IBCNT=0 W !!,"Error: All dates not changed, can not continue!",!
"RTN","IBCRHRS",112,0)
 Q IBCNT
"RTN","IBCRHRS",113,0)
 ;
"RTN","IBCRHRS",114,0)
 ;
"RTN","IBCRHRS",115,0)
CMINDT(CMRG,VSDT,NWDT) ; inactivate existing charges for selected Billing Region in Charge Master (#363.2)
"RTN","IBCRHRS",116,0)
 N IBCNT,IBINACT,IBCS,IBCS0,IBBR0,IBXRF,IBITM,IBCI,IBCI0,IBCHG,DD,DO,DLAYGO,DIC,DIE,DA,DR,X,Y S IBCNT=0
"RTN","IBCRHRS",117,0)
 I ($G(VSDT)'?7N)!($G(NWDT)'?7N) G CMINDTQ
"RTN","IBCRHRS",118,0)
 I $G(^IBE(363.31,+$G(CMRG),0))'["RC " G CMINDTQ
"RTN","IBCRHRS",119,0)
 ;
"RTN","IBCRHRS",120,0)
 S IBINACT=$$FMADD^XLFDT(NWDT,-1)
"RTN","IBCRHRS",121,0)
 ;
"RTN","IBCRHRS",122,0)
 W !!,"Inactivating ",$P(CMRG,U,2)," existing charges on ",$$FMTE^XLFDT(IBINACT,2),":",!,"Please wait...",!
"RTN","IBCRHRS",123,0)
 ;
"RTN","IBCRHRS",124,0)
 S IBCS=0 F  S IBCS=$O(^IBE(363.1,IBCS)) Q:'IBCS  D
"RTN","IBCRHRS",125,0)
 . S IBCS0=$G(^IBE(363.1,IBCS,0)) I $P(IBCS0,U,7)'=+CMRG Q
"RTN","IBCRHRS",126,0)
 . S IBBR0=$G(^IBE(363.3,+$P(IBCS0,U,2),0)) I $E(IBBR0,1,3)'="RC " Q
"RTN","IBCRHRS",127,0)
 . ;
"RTN","IBCRHRS",128,0)
 . S IBXRF="AIVDTS"_IBCS,IBCHG=0
"RTN","IBCRHRS",129,0)
 . S IBITM=0 F  S IBITM=$O(^IBA(363.2,IBXRF,IBITM)) Q:'IBITM  D
"RTN","IBCRHRS",130,0)
 .. S IBCI=0 F  S IBCI=$O(^IBA(363.2,IBXRF,IBITM,-VSDT,IBCI)) Q:'IBCI  D
"RTN","IBCRHRS",131,0)
 ... S IBCI0=$G(^IBA(363.2,IBCI,0))
"RTN","IBCRHRS",132,0)
 ... I +$P(IBCI0,U,4),IBINACT>+$P(IBCI0,U,4) Q
"RTN","IBCRHRS",133,0)
 ... ;
"RTN","IBCRHRS",134,0)
 ... S DR=".04///"_+IBINACT,DIE="^IBA(363.2,",DA=+IBCI D ^DIE K DIC,X,Y S IBCNT=IBCNT+1,IBCHG=1
"RTN","IBCRHRS",135,0)
 . I +IBCHG W !,$P(IBCS0,U,1),?35,IBCNT
"RTN","IBCRHRS",136,0)
 ;
"RTN","IBCRHRS",137,0)
CMINDTQ I 'IBCNT W !!,"Unable to Inactivate current charges, can not continue!",!
"RTN","IBCRHRS",138,0)
 Q IBCNT
"RTN","IBCRHRS",139,0)
 ;
"RTN","IBCRHRS",140,0)
CMRGFT(CMRG,NWFT) ; change the Billing Regions Facility Type in the Charge Master (#363.31,.03)
"RTN","IBCRHRS",141,0)
 N IBX,DD,DO,DLAYGO,DIC,DIE,DA,DR,X,Y S NWFT=+$G(NWFT)
"RTN","IBCRHRS",142,0)
 S IBX=+$P($G(^IBE(363.31,+$G(CMRG),0)),U,3)
"RTN","IBCRHRS",143,0)
 W !!,"Changing Billing Regions Facility Type: "
"RTN","IBCRHRS",144,0)
 ;
"RTN","IBCRHRS",145,0)
 I +IBX,+NWFT,IBX'=NWFT S DR=".03///"_NWFT,DIE="^IBE(363.31,",DA=+CMRG D ^DIE
"RTN","IBCRHRS",146,0)
 ;
"RTN","IBCRHRS",147,0)
 W !,"Billing Region ",$P($G(CMRG),U,2)," changed from ",IBX," to ",NWFT
"RTN","IBCRHRS",148,0)
 Q
"RTN","IBCRHRS",149,0)
 ;
"RTN","IBCRHRS",150,0)
CMLOAD ; load charges into Charge Master
"RTN","IBCRHRS",151,0)
 ; queuing is not allowed to ensure the modified files are used and 
"RTN","IBCRHRS",152,0)
 ; process completes fully.
"RTN","IBCRHRS",153,0)
 ;
"RTN","IBCRHRS",154,0)
 N ADD W !!,"Load modified charges into Charge Master:",!
"RTN","IBCRHRS",155,0)
 ;
"RTN","IBCRHRS",156,0)
 ; get the device
"RTN","IBCRHRS",157,0)
 W !,"Report requires 120 columns.  Queuing not allowed to ensure process completes."
"RTN","IBCRHRS",158,0)
 S %ZIS="M",%ZIS("A")="OUTPUT DEVICE: " D ^%ZIS I POP QUIT
"RTN","IBCRHRS",159,0)
 ;
"RTN","IBCRHRS",160,0)
 S ADD=1 D RPT^IBCRHO
"RTN","IBCRHRS",161,0)
 Q
"RTN","IBCRHRS",162,0)
 ;
"RTN","IBCRHRS",163,0)
 ;
"RTN","IBCRHRS",164,0)
ASKCMRG() ; ask user for Billing Region (#363.31), return Billing Region ifn ^ name ^ div/site ^ id/zip ^ chg type
"RTN","IBCRHRS",165,0)
 N IBRG,IBDV,IBX,IBY,DIC,X,Y
"RTN","IBCRHRS",166,0)
 W !,"Enter the Division to change the Reasonable Charges Facility Type:",!
"RTN","IBCRHRS",167,0)
 S DIC("S")="I $E(^(0),1,3)=""RC """
"RTN","IBCRHRS",168,0)
 S DIC="^IBE(363.31,",DIC(0)="AEMNQZ",DIC("A")="Select DIVISION/REGION: " D ^DIC I Y<1 S Y=0
"RTN","IBCRHRS",169,0)
 I +Y S Y=Y_U_$P(Y(0)," ",2)_U_$P(Y(0),U,2,3)
"RTN","IBCRHRS",170,0)
 ;
"RTN","IBCRHRS",171,0)
 I +Y D
"RTN","IBCRHRS",172,0)
 . W !!,"Billing Region: ",$P(Y,U,2),?50,"3-Zip: ",$P(Y,U,4),?65,"Type: ",$P(Y,U,5)
"RTN","IBCRHRS",173,0)
 . W !,"Division: " S IBRG=+Y,IBY=0 F  S IBY=$O(^IBE(363.31,IBRG,11,IBY)) Q:'IBY  D
"RTN","IBCRHRS",174,0)
 .. S IBDV=$G(^IBE(363.31,IBRG,11,IBY,0)) Q:'IBDV  S IBX=$G(^DG(40.8,+IBDV,0)) W ?16,$P(IBX,U,2),?24,$P(IBX,U,1),!
"RTN","IBCRHRS",175,0)
 Q Y
"RTN","IBCRHRS",176,0)
 ;
"RTN","IBCRHRS",177,0)
GETHFRG(CMRG) ; get the Host File Site of Region selection, return IBCR RC SITE ifn ^ div/site ^ site name ^ id/zip ^ chg type
"RTN","IBCRHRS",178,0)
 N IBX,IBS,IBY S IBX=0
"RTN","IBCRHRS",179,0)
 S IBS=$P($G(CMRG)," ",2)_" "
"RTN","IBCRHRS",180,0)
 S IBY=$O(^XTMP("IBCR RC SITE","B",IBS,0)),IBS=$G(^XTMP("IBCR RC SITE",+IBY))
"RTN","IBCRHRS",181,0)
 I +IBY,IBS'="" S IBX=IBY_U_IBS
"RTN","IBCRHRS",182,0)
 ;
"RTN","IBCRHRS",183,0)
 I 'IBX W !!,"Error:  Site ",$P($G(CMRG)," ",2)," not found in Host Files, can not continue!",!!
"RTN","IBCRHRS",184,0)
 Q IBX
"RTN","IBCRHRS",185,0)
 ;
"RTN","IBCRHRS",186,0)
ASKNWFT(HFRG) ; determine/confirm from user the Facility Type Change based on the current Host File setting
"RTN","IBCRHRS",187,0)
 N IBT,IBN,IBX,DIR,X,Y S IBX=0 S HFRG=$G(HFRG)
"RTN","IBCRHRS",188,0)
 S IBT=+$P(HFRG,U,5),IBN=$P(HFRG,U,2)_" - "_$P(HFRG,U,3)
"RTN","IBCRHRS",189,0)
 ;
"RTN","IBCRHRS",190,0)
 ; if currently Provider Based (1 or 2) then ask to confirm the change to Freestanding (3)
"RTN","IBCRHRS",191,0)
 I (IBT=1)!(IBT=2) D
"RTN","IBCRHRS",192,0)
 . W !!,IBN," is currently Provider Based ",$S(IBT=1:"INPT/SFN/OPT (1)",1:"Outpatient Only (2)"),!
"RTN","IBCRHRS",193,0)
 . S DIR("?")="Must change the Provider Type otherwise do not use this option."
"RTN","IBCRHRS",194,0)
 . S DIR("A")="Do you want to change this site to Freestanding (3)"
"RTN","IBCRHRS",195,0)
 . S DIR(0)="YO" D ^DIR I Y=1 S IBX=3
"RTN","IBCRHRS",196,0)
 ;
"RTN","IBCRHRS",197,0)
 ; if currently Freestanding (3) then ask if change to Provider Based Inpatient (1) or Outpatient (2)
"RTN","IBCRHRS",198,0)
 I IBT=3 D
"RTN","IBCRHRS",199,0)
 . W !!,IBN," is currently Non-Provider Based Freestanding (3)",!
"RTN","IBCRHRS",200,0)
 . S DIR("?")="Must change the Provider Type otherwise do not use this option."
"RTN","IBCRHRS",201,0)
 . S DIR("?",1)="Enter 'I' if Inpatient, SNF and Outpatient charges are required for the site."
"RTN","IBCRHRS",202,0)
 . S DIR("?",2)="Enter 'O' if Outpatient Only charges are required for the site."
"RTN","IBCRHRS",203,0)
 . S DIR("A")="Site will be changed to Provider Based, select Type"
"RTN","IBCRHRS",204,0)
 . S DIR(0)="SO^1:Inpatient/SNF/Outpatient;2:Outpatient" D ^DIR I Y>0 S IBX=+Y
"RTN","IBCRHRS",205,0)
 ;
"RTN","IBCRHRS",206,0)
 Q IBX
"RTN","IBCRHRS",207,0)
 ;
"RTN","IBCRHRS",208,0)
ASKNWDT() ; ask the user for the effective date of the change, return date or 0
"RTN","IBCRHRS",209,0)
 N DIR,X,Y W !
"RTN","IBCRHRS",210,0)
 S DIR("?")="The date the new charges will become effective."
"RTN","IBCRHRS",211,0)
 S DIR("?",1)="Enter the Effective Date of the Facility Type change."
"RTN","IBCRHRS",212,0)
 S DIR("?",2)="This is the date the new charges become available."
"RTN","IBCRHRS",213,0)
 S DIR("?",3)="The old charges (existing) will be inactivated one day before this date."
"RTN","IBCRHRS",214,0)
 S DIR("A")="Effective Date of Facility Type Change"
"RTN","IBCRHRS",215,0)
 S DIR(0)="DO^::AEX" D ^DIR I Y'?7N S Y=0
"RTN","IBCRHRS",216,0)
 Q Y
"RTN","IBCRHRS",217,0)
 ;
"RTN","IBCRHRS",218,0)
 ;
"RTN","IBCRHRS",219,0)
ASKFNL(CMRG,NWDT,NWFT) ; ask user if they really want to make the change, return true if yes
"RTN","IBCRHRS",220,0)
 N DIR,IBRG,IBDV,IBX,IBY,IBOK,X,Y S IBOK=0
"RTN","IBCRHRS",221,0)
 W !,"You have requested current charges for the following Region and Division "
"RTN","IBCRHRS",222,0)
 W !,"be changed from ",$S(NWFT'=3:"Freestanding",1:"Provider Based")," to ",$S(NWFT=3:"Freestanding",1:"Provider Based"),":",!
"RTN","IBCRHRS",223,0)
 ;
"RTN","IBCRHRS",224,0)
 W !,"Billing Region: ",$P(CMRG,U,2),?50,"3-Zip: ",$P(CMRG,U,4),?65,"Type: ",$P(CMRG,U,5)
"RTN","IBCRHRS",225,0)
 W !,"Division: " S IBRG=+CMRG,IBY=0 F  S IBY=$O(^IBE(363.31,IBRG,11,IBY)) Q:'IBY  D
"RTN","IBCRHRS",226,0)
 . S IBDV=$G(^IBE(363.31,IBRG,11,IBY,0)) Q:'IBDV  S IBX=$G(^DG(40.8,+IBDV,0)) W ?16,$P(IBX,U,2),?24,$P(IBX,U,1),!
"RTN","IBCRHRS",227,0)
 ;
"RTN","IBCRHRS",228,0)
 W !!,"Currently loaded ",$S(NWFT'=3:"Freestanding",1:"Provider Based")," charges will be inactivated as of ",$$FMTE^XLFDT($$FMADD^XLFDT(NWDT,-1),2)
"RTN","IBCRHRS",229,0)
 W !,"New ",$S(NWFT=3:"Freestanding",1:"Provider Based")," charges will be loaded with an effective date of ",$$FMTE^XLFDT(NWDT,2),!
"RTN","IBCRHRS",230,0)
 ;
"RTN","IBCRHRS",231,0)
 S DIR("?")="No permanent changes have been made, enter Yes to complete the changes."
"RTN","IBCRHRS",232,0)
 S DIR("A")="Do you want to complete these changes and update your stored charges"
"RTN","IBCRHRS",233,0)
 S DIR(0)="YO" D ^DIR I Y=1 S IBOK=1
"RTN","IBCRHRS",234,0)
 ;
"RTN","IBCRHRS",235,0)
 Q IBOK
"RTN","IBCRHRS",236,0)
 ;
"RTN","IBCRHRS",237,0)
 ;
"RTN","IBCRHRS",238,0)
CHECK(VERS,VSDT,NWDT,CMRG,HFRG,NWFT) ; check the inputs to determine if change is ok
"RTN","IBCRHRS",239,0)
 N IBX,IBC,IBRG,IBDS,IBOK S IBOK=1 S IBDS="",$P(IBDS,"=",IOM+1)="" W !,IBDS,!
"RTN","IBCRHRS",240,0)
 ;
"RTN","IBCRHRS",241,0)
 I VERS'=$$VERSION^IBCRHBRV D  S IBOK=0 G CHECKQ
"RTN","IBCRHRS",242,0)
 . W !,"Error: Version of Host Files loaded is not the current RC version "_VERS_".",!
"RTN","IBCRHRS",243,0)
 ;
"RTN","IBCRHRS",244,0)
 I $P(CMRG,U,3)'=$P(HFRG,U,2) D  S IBOK=0 G CHECKQ
"RTN","IBCRHRS",245,0)
 . W !,"Error: Site Number does not match in Host File and Charge Master"
"RTN","IBCRHRS",246,0)
 . W !,"       for selected Region.  Data inconsistency unresolved.",!
"RTN","IBCRHRS",247,0)
 ;
"RTN","IBCRHRS",248,0)
 I $P(CMRG,U,4)'=$P(HFRG,U,4) D  S IBOK=0 G CHECKQ
"RTN","IBCRHRS",249,0)
 . W !,"Error: Identifier 3-digit zip does not match in Host File and Charge Master"
"RTN","IBCRHRS",250,0)
 . W !,"       for selected Region.  Data inconsistency unresolved.",!
"RTN","IBCRHRS",251,0)
 ;
"RTN","IBCRHRS",252,0)
 I $P(CMRG,U,5)'=$P(HFRG,U,5) D  S IBOK=0 G CHECKQ
"RTN","IBCRHRS",253,0)
 . W !,"Error: Facility Type does not match in Host File and Charge Master"
"RTN","IBCRHRS",254,0)
 . W !,"       for selected Region.  Data inconsistency unresolved.",!
"RTN","IBCRHRS",255,0)
 ;
"RTN","IBCRHRS",256,0)
 I NWFT=$P(HFRG,U,5) D  S IBOK=0 G CHECKQ
"RTN","IBCRHRS",257,0)
 . W !,"Error: Host File Facility Type is the same as the selected Facility Type."
"RTN","IBCRHRS",258,0)
 . W !,"       This would result in no change to the charges.",!
"RTN","IBCRHRS",259,0)
 ;
"RTN","IBCRHRS",260,0)
 I NWFT<3,$P(HFRG,U,5)<3 D  S IBOK=0 G CHECKQ
"RTN","IBCRHRS",261,0)
 . W !,"Error: Host File Facility Type and Selected Facility Type are both"
"RTN","IBCRHRS",262,0)
 . W !,"       Provider Based.  This would result in no change to the charges.",!
"RTN","IBCRHRS",263,0)
 ;
"RTN","IBCRHRS",264,0)
 I NWDT'>VSDT D  S IBOK=0 G CHECKQ
"RTN","IBCRHRS",265,0)
 . W !,"Error: Date entered ",$$FMTE^XLFDT(NWDT,2)," is before v",VERS," effective date ",$$FMTE^XLFDT(VSDT,2),"."
"RTN","IBCRHRS",266,0)
 . W !,"       This option may only be used to change the Facility Type of the"
"RTN","IBCRHRS",267,0)
 . W !,"       current version charges after they are effective.  Use the regular"
"RTN","IBCRHRS",268,0)
 . W !,"       Upload to change charges on ",$$FMTE^XLFDT(VSDT,2),".",!
"RTN","IBCRHRS",269,0)
 ;
"RTN","IBCRHRS",270,0)
 S IBC=","_$$VERSITE^IBCRHBRV($P(HFRG,U,2))_",",IBX=","_VERS_","
"RTN","IBCRHRS",271,0)
 I IBC'[IBX D  S IBOK=0 G CHECKQ
"RTN","IBCRHRS",272,0)
 . W !,"Error: Selected Billing Region ",$P(CMRG,U,2)
"RTN","IBCRHRS",273,0)
 . W !,"       does not have the current version ",VERS," of Reasonable Charges installed."
"RTN","IBCRHRS",274,0)
 . W !,"       This option may only be used to change the current version charges."
"RTN","IBCRHRS",275,0)
 . W !,"       Use the regular Upload option to change charges from previous versions.",!
"RTN","IBCRHRS",276,0)
 ;
"RTN","IBCRHRS",277,0)
 S IBRG=+CMRG,IBC=0,IBX=0 F  S IBX=$O(^IBE(363.31,IBRG,11,IBX)) Q:'IBX  S IBC=IBC+1
"RTN","IBCRHRS",278,0)
 I IBC>1 D  S IBOK=0 G CHECKQ
"RTN","IBCRHRS",279,0)
 . W !,"Error: Selected Billing Region ",$P(CMRG,U,2)
"RTN","IBCRHRS",280,0)
 . W !,"       has more than one Division assigned.  Changing the Facility Type"
"RTN","IBCRHRS",281,0)
 . W !,"       may only be applied to one Division.  The extra Divisions need"
"RTN","IBCRHRS",282,0)
 . W !,"       to be removed from the Billing Region and charges loaded specifically"
"RTN","IBCRHRS",283,0)
 . W !,"       for those sites, usually at least two past versions.",!
"RTN","IBCRHRS",284,0)
 ;
"RTN","IBCRHRS",285,0)
CHECKQ Q IBOK
"RTN","IBCSCH")
0^7^B49539365^B48120299
"RTN","IBCSCH",1,0)
IBCSCH ;ALB/MJB - MCCR HELP ROUTINE ;03 JUN 88 15:25
"RTN","IBCSCH",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,106,124,138,51,148,137,161,245,232,287,348,349,374,371,395,400,432,447,458**;21-MAR-94;Build 4
"RTN","IBCSCH",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSCH",4,0)
 ;
"RTN","IBCSCH",5,0)
 ;MAP TO DGCRSCH
"RTN","IBCSCH",6,0)
 ;
"RTN","IBCSCH",7,0)
 N I,C,IBSCNNZ,IBQ,IBPRNT,Z S IBSCNNZ=$$UP^XLFSTR($G(IBSCNN)),IBQ=0
"RTN","IBCSCH",8,0)
 I '$D(IBPAR) D  Q:IBQ
"RTN","IBCSCH",9,0)
 . I $F(".?1500.?HCFA.","."_$G(IBSCNNZ)_"."),$$FT^IBCEF(IBIFN)=2 S IBQ=1,IBPRNT=2 D BL24(IBIFN,0) Q
"RTN","IBCSCH",10,0)
 . I $G(IBSCNNZ)="?SC" S IBQ=1 D DISPSC(IBIFN) Q
"RTN","IBCSCH",11,0)
 . I $G(IBSCNNZ)="?INS" S IBQ=1 D INSDSPL(IBIFN) Q
"RTN","IBCSCH",12,0)
 . I $G(IBSCNNZ)="?INX" S IBQ=1 D INSDSPLX(IBIFN) Q
"RTN","IBCSCH",13,0)
 . I $G(IBSCNNZ)="?PRV" S IBQ=1 D DISPROPT(IBIFN) Q
"RTN","IBCSCH",14,0)
 . I $G(IBSCNNZ)="?CHG" S IBQ=1 D DISPCHG^IBCRBH1(IBIFN) Q
"RTN","IBCSCH",15,0)
 . I $G(IBSCNNZ)="?PRC" S IBQ=1 D DISPPRC^IBCSCH1(IBIFN) Q
"RTN","IBCSCH",16,0)
 . I $G(IBSCNNZ)="?CPT" S IBQ=1 D BCPTCHG^IBCRBH2(IBIFN) Q
"RTN","IBCSCH",17,0)
 . I $G(IBSCNNZ)="?INC" S IBQ=1 D EDIT^IBCBB(IBIFN) Q
"RTN","IBCSCH",18,0)
 . I $G(IBSCNNZ)="?CLA",$$CK0^IBCIUT1() S IBQ=1 D CLA^IBCISC(IBIFN) Q
"RTN","IBCSCH",19,0)
 . I $G(IBSCNNZ)="?MRA",$$MCRONBIL^IBEFUNC(IBIFN),$T(SCR^IBCEMVU)'="" S IBQ=1 D SCR^IBCEMVU(IBIFN) Q
"RTN","IBCSCH",20,0)
 . I $G(IBSCNNZ)="?ID" S IBQ=1 D DISPID^IBCEF74(IBIFN) Q
"RTN","IBCSCH",21,0)
 . I $G(IBSCNNZ)="?RX" S IBQ=1 D DISPRX^IBCSCH1(IBIFN) Q
"RTN","IBCSCH",22,0)
 . I $G(IBSCNNZ)="?RNB" S IBQ=1 D EDITRNB^IBCSCH1(IBIFN) Q
"RTN","IBCSCH",23,0)
 . Q
"RTN","IBCSCH",24,0)
 ;
"RTN","IBCSCH",25,0)
 S IBH("HELP")="" D ^IBCSCU,H^IBCSCU K IBH("HELP") W !,"Enter '^' to stop the display ",$S(IBV:"",1:"and edit "),"of data,"
"RTN","IBCSCH",26,0)
 W:'$D(IBPAR) " '^N' to jump to screen #N (see",!,"listing below), <RET> to continue on to the next available screen" I IBV W "." G M
"RTN","IBCSCH",27,0)
 W " or enter",!,"the field group number(s) you wish to edit using commas and dashes as",!,"delimiters.  Those groups enclosed in brackets ""[]"" are editable while those"
"RTN","IBCSCH",28,0)
 W !,"enclosed in arrows ""<>"" are not."
"RTN","IBCSCH",29,0)
 G:$D(IBPAR) M1
"RTN","IBCSCH",30,0)
M W "  Special help screens:"
"RTN","IBCSCH",31,0)
 W !,?5,"Enter '?SC' to view SC Status and Rated Disabilities."
"RTN","IBCSCH",32,0)
 W !,?5,"Enter '?INS' to view the patients insurance policies."
"RTN","IBCSCH",33,0)
 W !,?5,"Enter '?INX' to view the patients insurance policies with comments."
"RTN","IBCSCH",34,0)
 W !,?5,"Enter '?PRV' to view provider specific information."
"RTN","IBCSCH",35,0)
 W !,?5,"Enter '?PRC' to view all procedures on the bill and related data."
"RTN","IBCSCH",36,0)
 W !,?5,"Enter '?CHG' to view all items on the bill with potential charges."
"RTN","IBCSCH",37,0)
 W !,?5,"Enter '?CPT' to view all charges for selected CPT codes and bill type."
"RTN","IBCSCH",38,0)
 I $$FT^IBCEF(IBIFN)=2 W !,?5,"Enter '?1500' to view how block 24 will print on a CMS-1500."
"RTN","IBCSCH",39,0)
 W !,?5,"Enter '?INC' to execute the edits & view the bill inconsistencies."
"RTN","IBCSCH",40,0)
 I $$CK0^IBCIUT1() W !?5,"Enter '?CLA' to view the ClaimsManager options."
"RTN","IBCSCH",41,0)
 I $$MCRONBIL^IBEFUNC(IBIFN) W !?5,"Enter '?MRA' to view Medicare Remittance Advice EOB's on file."
"RTN","IBCSCH",42,0)
 W !,?5,"Enter '?ID' to view all IDs to be electronically transmitted on this claim."
"RTN","IBCSCH",43,0)
 W !,?5,"Enter '?RX' to view all prescriptions on this claim."
"RTN","IBCSCH",44,0)
 W !,?5,"Enter '?RNB' to enter an RNB for bill associated Claims Tracking entries."
"RTN","IBCSCH",45,0)
 ;
"RTN","IBCSCH",46,0)
 D S W ! F I=$Y:1:20 W !
"RTN","IBCSCH",47,0)
 S Z="PRESS <RETURN> KEY" X IBWW W " to RETURN to SCREEN ",+IBSR
"RTN","IBCSCH",48,0)
 R X:DTIME
"RTN","IBCSCH",49,0)
 Q
"RTN","IBCSCH",50,0)
 ;
"RTN","IBCSCH",51,0)
M1 N I,Z S Z="DATA GROUPS ON PARAMETER SCREEN" W !! X IBWW D @(IBSR1_IBSR) D W W ! F I=$Y:1:20 W !
"RTN","IBCSCH",52,0)
 S Z="PRESS <RETURN> KEY" X IBWW W " to RETURN to PARAMETER SCREEN"
"RTN","IBCSCH",53,0)
 R X:DTIME
"RTN","IBCSCH",54,0)
 Q
"RTN","IBCSCH",55,0)
 ;
"RTN","IBCSCH",56,0)
 ;
"RTN","IBCSCH",57,0)
PAR S X="Fed Tax #, BC/BS #, MAS Svc Pointer^Bill Signer, Billing Supervisor^Security Parameters, Outpatient CPT parameters ^Remarks, Mailgroups^Agent Cashier Address/Phone" Q
"RTN","IBCSCH",58,0)
 ;
"RTN","IBCSCH",59,0)
S ; display the available screen data
"RTN","IBCSCH",60,0)
 N C,I,Z,J W ! S Z="AVAILABLE SCREENS" X IBWW
"RTN","IBCSCH",61,0)
 ; Start IB*2.0*447 BI
"RTN","IBCSCH",62,0)
 ;S X="Demographic^Employment^Payer^Inpatient Event^Outpatient Event^Inpatient Billing - General^Outpatient Billing - General^Billing - Claim Information^Locally Defined^Billing - Specific"
"RTN","IBCSCH",63,0)
 S X="Demographic^Employment^Payer^Inpatient Event^Outpatient Event^Inpatient Billing - General^Outpatient Billing - General^Billing - Claim Information^Ambulance^Billing - Specific^Locally Defined"
"RTN","IBCSCH",64,0)
 ; End IB*2.0*447 BI
"RTN","IBCSCH",65,0)
 S C=0 F I=1:1 S J=$P(X,"^",I) Q:J=""  I '$E(IBVV,I) S C=C+1,Z="^"_I,IBW=(C#2) W:'(C#2) ?41 X IBWW S Z=$S(I?1N:" ",1:" ")_J_" Data" W Z
"RTN","IBCSCH",66,0)
 Q
"RTN","IBCSCH",67,0)
 ;
"RTN","IBCSCH",68,0)
W ;
"RTN","IBCSCH",69,0)
 N I,J,Z
"RTN","IBCSCH",70,0)
 F I=1:1 S J=$P(X,"^",I) Q:J=""  S Z=I,IBW=(I#2) W:'(I#2) ?42 X IBWW W " "_J
"RTN","IBCSCH",71,0)
 W:'(I-1)#2 ! Q
"RTN","IBCSCH",72,0)
 Q
"RTN","IBCSCH",73,0)
 ;IBCSCH
"RTN","IBCSCH",74,0)
 ;
"RTN","IBCSCH",75,0)
 ;
"RTN","IBCSCH",76,0)
BL24(IBIFN,IBNOSHOW) ; display block 24 of CMS-1500
"RTN","IBCSCH",77,0)
 ; IBNOSHOW = 1 for not to show error/warning text line
"RTN","IBCSCH",78,0)
 N X,Y,DIR,IBPG,IBLN,IBCOL,IBX,IBQ,IBLC,IBLIN,IBPFORM,IBD,IBC1,Z,Z0,IBXDATA,IBXSAVE,IBNXPG
"RTN","IBCSCH",79,0)
 K ^TMP("IBXSAVE",$J)
"RTN","IBCSCH",80,0)
 S IBQ=0,IBLC=9 Q:'$G(IBIFN)  K ^TMP("IBXDISP",$J)
"RTN","IBCSCH",81,0)
 ;
"RTN","IBCSCH",82,0)
 S IBLIN=$$BOX24D^IBCEF11()
"RTN","IBCSCH",83,0)
 S IBPFORM=$S($P($G(^IBE(353,2,2)),U,8):$P(^(2),U,8),1:2)
"RTN","IBCSCH",84,0)
 S IBX=$$BILLN^IBCEFG0(0,"1^99",IBLIN,+IBIFN,IBPFORM)
"RTN","IBCSCH",85,0)
 ;
"RTN","IBCSCH",86,0)
 W @IOF,!,"Example of diagnoses, procedures and charges printing on the CMS-1500"
"RTN","IBCSCH",87,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",88,0)
 ;
"RTN","IBCSCH",89,0)
 ; box 19 - lines 36-37
"RTN","IBCSCH",90,0)
 F Z=+IBLIN,IBLIN+1 I $D(^TMP("IBXDISP",$J,1,Z)) S Z0=$G(^TMP("IBXDISP",$J,1,Z,+$O(^TMP("IBXDISP",$J,1,Z,20),-1))) I Z0'="" S:Z=+IBLIN Z0="BOX 19 DATA: "_Z0 W !,Z0
"RTN","IBCSCH",91,0)
 ;
"RTN","IBCSCH",92,0)
 ; box 21 - lines 39-41
"RTN","IBCSCH",93,0)
 W !,"21. diagnosis"
"RTN","IBCSCH",94,0)
 I $D(^TMP("IBXDISP",$J,2,IBLIN+3)) W ?16,"(1st 4 only)"
"RTN","IBCSCH",95,0)
 W !,?5,"1. ",$G(^TMP("IBXDISP",$J,1,IBLIN+3,3)),?25,"3. ",$G(^TMP("IBXDISP",$J,1,IBLIN+3,30))
"RTN","IBCSCH",96,0)
 W !,?5,"2. ",$G(^TMP("IBXDISP",$J,1,IBLIN+5,3)),?25,"4. ",$G(^TMP("IBXDISP",$J,1,IBLIN+5,30))
"RTN","IBCSCH",97,0)
 ;
"RTN","IBCSCH",98,0)
 ; box 24 - lines 44-55
"RTN","IBCSCH",99,0)
 D PG
"RTN","IBCSCH",100,0)
 S IBPG=0 F  S IBPG=$O(^TMP("IBXDISP",$J,IBPG)) Q:'IBPG  D  Q:IBQ
"RTN","IBCSCH",101,0)
 . I '$D(^TMP("IBXDISP",$J,IBPG,IBLIN+9)) Q   ; no line's on this page
"RTN","IBCSCH",102,0)
 . F IBLN=IBLIN+8:1:+$P(IBLIN,U,2) S IBCOL=$O(^TMP("IBXDISP",$J,IBPG,IBLN,0)) Q:'IBCOL&'$O(^TMP("IBXDISP",$J,IBPG,IBLN))  S IBLC=IBLC+1 I IBCOL D  Q:IBQ
"RTN","IBCSCH",103,0)
 .. S IBCOL=0,IBC1=1 F  S IBCOL=$O(^TMP("IBXDISP",$J,IBPG,IBLN,IBCOL)) Q:'IBCOL  I $TR($G(^(IBCOL))," ")'="" D
"RTN","IBCSCH",104,0)
 ... W:IBC1 ! S IBC1=0 W ?(IBCOL-1),$G(^TMP("IBXDISP",$J,IBPG,IBLN,IBCOL))
"RTN","IBCSCH",105,0)
 . S IBNXPG=$O(^TMP("IBXDISP",$J,IBPG))   ; next page
"RTN","IBCSCH",106,0)
 . I 'IBQ,IBNXPG,$D(^TMP("IBXDISP",$J,IBNXPG,IBLIN+9)) S IBLIN=$$BOX24D^IBCEF11(),IBQ=$$PAUSE^IBCSCH1(IBLC) Q:IBQ  S IBLC=9 W @IOF D PG
"RTN","IBCSCH",107,0)
 . Q
"RTN","IBCSCH",108,0)
 ;
"RTN","IBCSCH",109,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",110,0)
 I 'IBPG,'IBQ S IBQ=$$PAUSE^IBCSCH1(IBLC)
"RTN","IBCSCH",111,0)
 K ^TMP("IBXDISP",$J),^TMP("IBXSAVE",$J)
"RTN","IBCSCH",112,0)
 Q
"RTN","IBCSCH",113,0)
 ;
"RTN","IBCSCH",114,0)
PG ; Display box 24 letters at top of charge list
"RTN","IBCSCH",115,0)
 W !,"24. A             B  C    D                 E         F     G H I    J"
"RTN","IBCSCH",116,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",117,0)
 Q
"RTN","IBCSCH",118,0)
 ;
"RTN","IBCSCH",119,0)
INSDSPL(IBIFN) ; Display patient's policies
"RTN","IBCSCH",120,0)
 N DIR,X,Y,IBX,DFN,IBDTIN,IBCOVEXT W @IOF
"RTN","IBCSCH",121,0)
 S IBX=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IBX,U,2),IBDTIN=$P(IBX,U,3),IBCOVEXT=1
"RTN","IBCSCH",122,0)
 I +DFN D DISPDT^IBCNS W ! S DIR("A")="Press RETURN to continue",DIR(0)="E" D ^DIR K DIR
"RTN","IBCSCH",123,0)
 Q
"RTN","IBCSCH",124,0)
 ;
"RTN","IBCSCH",125,0)
INSDSPLX(IBIFN) ; Display patient's policies extended (?INX)
"RTN","IBCSCH",126,0)
 N IBX,DFN,IBDATE S IBX=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IBX,U,2),IBDATE=$P(IBX,U,3) D DISP^IBCNS3(DFN,IBDATE,123)
"RTN","IBCSCH",127,0)
 Q
"RTN","IBCSCH",128,0)
 ;
"RTN","IBCSCH",129,0)
DISPSC(IBIFN) ; display patients SC Status and Rated Disabilities
"RTN","IBCSCH",130,0)
 N IB0,DFN,IBSC,IBX,VAEL,VAERR
"RTN","IBCSCH",131,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IB0,U,2),IBSC=$P(IB0,U,18)
"RTN","IBCSCH",132,0)
 W !,@IOF,!,"SC Status and Rated Disabilities for ",$P($G(^DPT(+$G(DFN),0)),U,1)
"RTN","IBCSCH",133,0)
 W !,"--------------------------------------------------------------------------------",!
"RTN","IBCSCH",134,0)
 I +$G(IBIFN) W !," SC At Time Of Care: ",$S(IBSC=1:"Yes",IBSC=0:"No",1:"")
"RTN","IBCSCH",135,0)
 I +$G(DFN) D ELIG^VADPT D DIS^DGRPDB
"RTN","IBCSCH",136,0)
 W !!,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",137,0)
 S IBX=$$PAUSE^IBCSCH1(19)
"RTN","IBCSCH",138,0)
 Q
"RTN","IBCSCH",139,0)
 ;
"RTN","IBCSCH",140,0)
DISPROPT(IBIFN) ; prompt for VA or Non-VA provider.
"RTN","IBCSCH",141,0)
 N X,Y,DIR
"RTN","IBCSCH",142,0)
 S DIR(0)="SAO^V:VA PROVIDER;N:NON-VA PROVIDER",DIR("A")="(V)A or (N)on-VA Provider: ",DIR("B")="V"
"RTN","IBCSCH",143,0)
 D ^DIR
"RTN","IBCSCH",144,0)
 I Y="V" D DISPPRV^IBCSCH2(IBIFN) Q
"RTN","IBCSCH",145,0)
 I Y="N" D DISPNVA^IBCSCH2(IBIFN)
"RTN","IBCSCH",146,0)
 Q
"RTN","IBCSCH",147,0)
 ;
"RTN","IBCSCH1")
0^8^B35678936^B30182718
"RTN","IBCSCH1",1,0)
IBCSCH1 ;ALB/MRL - BILLING HELPS (CONTINUED) ; 01 JUN 88 12:00
"RTN","IBCSCH1",2,0)
 ;;2.0;INTEGRATED BILLING;**106,125,51,245,266,395,458**;21-MAR-94;Build 4
"RTN","IBCSCH1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSCH1",4,0)
 ;
"RTN","IBCSCH1",5,0)
 ;MAP TO DGCRSCH1
"RTN","IBCSCH1",6,0)
 ;
"RTN","IBCSCH1",7,0)
1 W !!,"DO YOU WISH TO ADD/EDIT INSURANCE COMPANY DATA FOR THIS PATIENT" S %=2 D YN^DICN S IBADI=$S(%=1!(%=-1):%,1:0)
"RTN","IBCSCH1",8,0)
 I '% W !!?4,"YES - And I'll prompt you so that you may add insurance data to the PATIENT",!?9,"file for this patient.",!?4,"NO  - To bypass this editing of the PATIENT file." G 1
"RTN","IBCSCH1",9,0)
 Q
"RTN","IBCSCH1",10,0)
 ;
"RTN","IBCSCH1",11,0)
2 W !!,"If you updated insurance information for any policy which is already specified",!,"as either a PRIMARY, SECONDARY or TERIARY for this billing episode, you will"
"RTN","IBCSCH1",12,0)
 W !,"need to press the <RETURN> key through the following prompts in order to insure",!,"that these new values are properly stored.  If you fail to do so, i.e.,"
"RTN","IBCSCH1",13,0)
 W !,"enter an up-arrow, the new values will not be stored as part of this billing",!,"record." Q
"RTN","IBCSCH1",14,0)
3 I '$D(IBIFN),$D(DA) S IBIFN=DA
"RTN","IBCSCH1",15,0)
 W !,"If a procedure is linked as a prescription to a rev code, it cannot be deleted",!
"RTN","IBCSCH1",16,0)
 W:$P(^DGCR(399,IBIFN,0),"^",5)<3 !!?4," - Enter the alphanumeric designation of your choice from",!?7,"the display (e.g. 'A1') to input one of the codes shown",!?7,"above into this billing record."
"RTN","IBCSCH1",17,0)
 I $P(^IBE(350.9,1,1),U,15)'=1 G 4
"RTN","IBCSCH1",18,0)
 S DGCODMET=$P(^DGCR(399,IBIFN,0),"^",9),DGCODMET=$S(DGCODMET=9:"ICD",DGCODMET="":"",1:"CPT")
"RTN","IBCSCH1",19,0)
 W !!?4," - Enter the name or code number of an ",$S($D(IBPY):"ICD DIAGNOSIS ",1:DGCODMET_" PROCEDURE "),"CODE",!?7,"not displayed above to input a ",$S($D(IBPY):"DIAGNOSIS",1:"PROCEDURE")," code"
"RTN","IBCSCH1",20,0)
 I $P(^DGCR(399,IBIFN,0),"^",5)>2 W "." G 4
"RTN","IBCSCH1",21,0)
 W " not found",!?7,"in the PTF record into this billing record, or '??' for ",!?7,"a list of all ",$S($D(IBPY):"ICD DIAGNOSIS ",1:DGCODMET_" PROCEDURE "),"CODES."
"RTN","IBCSCH1",22,0)
4 W !!?4," - Enter <RETURN> to accept the default ",$S($D(IBPY):"DIAGNOSIS ",1:"PROCEDURE "),"code, or",!?7,"'^' to abort.",!!
"RTN","IBCSCH1",23,0)
 K DGCODMET
"RTN","IBCSCH1",24,0)
 Q
"RTN","IBCSCH1",25,0)
 ;
"RTN","IBCSCH1",26,0)
DISPPRC(IBIFN) ; display procedures
"RTN","IBCSCH1",27,0)
 N IBHDR,IBHDR1,IBD,IBN,IBI,IBX,IBQ,IBLN,IBPR,IBPRD,IBDT,IBDV,IBCL,IBPV,IBLC,PRCARR,IBMOD,IBSUS,IBDATE
"RTN","IBCSCH1",28,0)
 S IBQ=0
"RTN","IBCSCH1",29,0)
 ;
"RTN","IBCSCH1",30,0)
 I '$O(^DGCR(399,+$G(IBIFN),"CP",0)) W !!?5,"No Codes Entered!",! D PAUSE^VALM1 Q
"RTN","IBCSCH1",31,0)
 ;
"RTN","IBCSCH1",32,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN)
"RTN","IBCSCH1",33,0)
 S IBHDR="W @IOF,!,""Procedures Assigned to this Bill"",!,""Code"",?10,""Procedure"",?35,""PO"",?38,""Date"",?48,""Div"",?55,""Clinic"",?68,""Provider"" X IBHDR1"
"RTN","IBCSCH1",34,0)
 S IBHDR1="W !,""--------------------------------------------------------------------------------"" S IBLC=2"
"RTN","IBCSCH1",35,0)
 ;
"RTN","IBCSCH1",36,0)
 X IBHDR D PRCDT^IBCU71(+IBIFN,.PRCARR)
"RTN","IBCSCH1",37,0)
 S IBD="" F  S IBD=$O(PRCARR(IBD)) Q:IBD=""  D  Q:IBQ
"RTN","IBCSCH1",38,0)
 . S IBN="" F  S IBN=$O(PRCARR(IBD,IBN)) Q:IBN=""  D  Q:IBQ
"RTN","IBCSCH1",39,0)
 .. S IBI=0 F  S IBI=$O(PRCARR(IBD,IBN,IBI)) Q:'IBI  D  I IBLC>19 S IBQ=$$PAUSE(IBLC) Q:IBQ  X IBHDR
"RTN","IBCSCH1",40,0)
 ... S IBLN=$G(PRCARR(IBD,IBN,IBI)),(IBPR,IBPRD,IBDT,IBDV,IBCL,IBPV,IBSUS)="",IBLC=IBLC+1
"RTN","IBCSCH1",41,0)
 ... S IBX=$$PRCNM($P(IBLN,U,1),IBD),IBPR=$P(IBX,U,1),IBPRD=$P(IBX,U,2)
"RTN","IBCSCH1",42,0)
 ... S IBDT=$P(IBLN,U,2),IBDT=$E(IBDT,4,5)_"/"_$E(IBDT,6,7)_"/"_$E(IBDT,2,3)
"RTN","IBCSCH1",43,0)
 ... I +$P(IBLN,U,6) S IBDV=$P($G(^DG(40.8,+$P(IBLN,U,6),0)),U,2)
"RTN","IBCSCH1",44,0)
 ... I +$P(IBLN,U,7) S IBCL=$P($G(^SC(+$P(IBLN,U,7),0)),U,1)
"RTN","IBCSCH1",45,0)
 ... I +$P(IBLN,U,18) S IBPV=$P($G(^VA(200,+$P(IBLN,U,18),0)),U,1)
"RTN","IBCSCH1",46,0)
 ... I +$P(IBLN,U,16) S IBSUS=$P(IBLN,U,16)_"mn"
"RTN","IBCSCH1",47,0)
 ... I +$P(IBLN,U,21) S IBSUS=$P(IBLN,U,21)_"ml"
"RTN","IBCSCH1",48,0)
 ... I +$P(IBLN,U,22) S IBSUS=$P(IBLN,U,22)_"hr"
"RTN","IBCSCH1",49,0)
 ... ;
"RTN","IBCSCH1",50,0)
 ... W !,$E(IBPR,1,6),?7,$E(IBPRD,1,20),?29,IBSUS,?35,$P(IBLN,U,4),?38,IBDT,?48,IBDV,?55,$E(IBCL,1,11),?68,$E(IBPV,1,12)
"RTN","IBCSCH1",51,0)
 ... S IBX=$$MODLST^IBEFUNC2($$GETMOD^IBEFUNC(IBIFN,IBI),1,.IBX,IBD)
"RTN","IBCSCH1",52,0)
 ... I IBX'="" F IBMOD=1:1:$L(IBX,",") W !,?10,$P(IBX,",",IBMOD),?15,$P($G(IBX(1)),",",IBMOD) S IBLC=IBLC+1
"RTN","IBCSCH1",53,0)
 I 'IBI,'IBQ S IBQ=$$PAUSE(IBLC)
"RTN","IBCSCH1",54,0)
 Q
"RTN","IBCSCH1",55,0)
 ;
"RTN","IBCSCH1",56,0)
PRCNM(PRC,EFDT) ; return procedure name, input first piece of CP node -
"RTN","IBCSCH1",57,0)
 ;                                        (in variable pointer format)
"RTN","IBCSCH1",58,0)
 ; output: code ^ name
"RTN","IBCSCH1",59,0)
 N IBNM
"RTN","IBCSCH1",60,0)
 S IBNM=$$PRCD^IBCEF1($G(PRC),1,$G(EFDT))
"RTN","IBCSCH1",61,0)
 I $TR(IBNM,U)="" D
"RTN","IBCSCH1",62,0)
 . S IBNM="NO ENTRY FOUND^"
"RTN","IBCSCH1",63,0)
 E  D
"RTN","IBCSCH1",64,0)
 . S IBNM=$P(IBNM,U,2,3)
"RTN","IBCSCH1",65,0)
 Q IBNM
"RTN","IBCSCH1",66,0)
 ;
"RTN","IBCSCH1",67,0)
PAUSE(CNT) ;
"RTN","IBCSCH1",68,0)
 N IBI F IBI=CNT:1:20 W !
"RTN","IBCSCH1",69,0)
 N DIR,DUOUT,DTOUT,DIRUT,IBX,X,Y S IBX=0,DIR(0)="E" D ^DIR K DIR I $D(DIRUT) S IBX=1
"RTN","IBCSCH1",70,0)
 Q IBX
"RTN","IBCSCH1",71,0)
 ;
"RTN","IBCSCH1",72,0)
DISPRX(IBIFN) ; display prescriptions
"RTN","IBCSCH1",73,0)
 N IBHDR,IBHDR1,IBX,IBZ,IBRXL,IBNPI,IBRX,IBQ,IBORG
"RTN","IBCSCH1",74,0)
 S IBQ=0
"RTN","IBCSCH1",75,0)
 ;
"RTN","IBCSCH1",76,0)
 I '$O(^IBA(362.4,"AIFN"_IBIFN,0)) W !!?5,"No Prescriptions Entered!",! D PAUSE^VALM1 Q
"RTN","IBCSCH1",77,0)
 ;
"RTN","IBCSCH1",78,0)
 ; get NPIs
"RTN","IBCSCH1",79,0)
 S IBX=$$RXSITE^IBCEF73A(IBIFN,.IBRXL)
"RTN","IBCSCH1",80,0)
 ;
"RTN","IBCSCH1",81,0)
 S IBHDR="W @IOF,!,""Prescriptions Assigned to this Bill"" X IBHDR1"
"RTN","IBCSCH1",82,0)
 S IBHDR1="W !,""--------------------------------------------------------------------------------"" "
"RTN","IBCSCH1",83,0)
 ;
"RTN","IBCSCH1",84,0)
 X IBHDR
"RTN","IBCSCH1",85,0)
 S IBRX=0 F  S IBRX=$O(^IBA(362.4,"AIFN"_IBIFN,IBRX)) Q:'IBRX!(IBQ)  S IBX=0 F  S IBX=$O(^IBA(362.4,"AIFN"_IBIFN,IBRX,IBX)) Q:'IBX!(IBQ)  D
"RTN","IBCSCH1",86,0)
 . S IBZ=$G(^IBA(362.4,IBX,0))
"RTN","IBCSCH1",87,0)
 . W !?5,"RX #: ",$P(IBZ,"^")
"RTN","IBCSCH1",88,0)
 . W ?50,"DATE: ",$$FMTE^XLFDT($P(IBZ,"^",3))
"RTN","IBCSCH1",89,0)
 . W !?5,"DRUG: ",$$EXTERNAL^DILFD(362.4,.04,"",$P(IBZ,"^",4))
"RTN","IBCSCH1",90,0)
 . W ?50,"NDC: ",$P(IBZ,"^",8)
"RTN","IBCSCH1",91,0)
 . W !?5,"DAYS SUPPLY: ",$P(IBZ,"^",6)
"RTN","IBCSCH1",92,0)
 . W ?50,"QUANTITY: ",$P(IBZ,"^",7)
"RTN","IBCSCH1",93,0)
 . S IBORG=$G(IBRXL(+$P(IBZ,"^",5),+$P(IBZ,"^",3)))
"RTN","IBCSCH1",94,0)
 . ; ia #4532
"RTN","IBCSCH1",95,0)
 . S IBNPI=$S(IBORG:$P($$NPI^XUSNPI("Organization_ID",IBORG),U),1:"")
"RTN","IBCSCH1",96,0)
 . W !?5,"NPI INSTITUTION: ",$S(IBORG:$$EXTERNAL^DILFD(350.9,.02,"",IBORG),1:"")
"RTN","IBCSCH1",97,0)
 . W ?50,"RX NPI: ",$S(IBNPI>0:IBNPI,1:"")
"RTN","IBCSCH1",98,0)
 . W !?5,"PROVIDER: ",$S($P(IBZ,"^",5):$$RXAPI1^IBNCPUT1($P(IBZ,"^",5),4),1:""),!
"RTN","IBCSCH1",99,0)
 . I $Y+7>IOSL S IBQ=$$PAUSE(0)
"RTN","IBCSCH1",100,0)
 D PAUSE^VALM1
"RTN","IBCSCH1",101,0)
 ;
"RTN","IBCSCH1",102,0)
 Q
"RTN","IBCSCH1",103,0)
 ;
"RTN","IBCSCH1",104,0)
EDITRNB(IBIFN) ; add/edit RNB and Comments for CT entries associated with bill,  ?RNB Help function
"RTN","IBCSCH1",105,0)
 ; sets IBNOCANC indicating bill not cancelled, function sets it to number of associated CT entries
"RTN","IBCSCH1",106,0)
 N IBNOCANC S IBNOCANC=0 I '$G(IBIFN) Q
"RTN","IBCSCH1",107,0)
 W @IOF,!,"Reason Not Billable for Claims Tracking Entries associated with this Bill:",!,$TR($J(" ",74)," ","-")
"RTN","IBCSCH1",108,0)
 W !!,"Episodes not fully billed may have a Reason Not Billable entered on the Claims",!,"Tracking entry.  Only enter an RNB if the episode is not fully billed.",!
"RTN","IBCSCH1",109,0)
 ;
"RTN","IBCSCH1",110,0)
 D ^IBCC1 I '$G(IBNOCANC) W !!,"No associated Claims Tracking entries found.",!!
"RTN","IBCSCH1",111,0)
 ;
"RTN","IBCSCH1",112,0)
 D PAUSE(19)
"RTN","IBCSCH1",113,0)
 Q
"RTN","IBJDB21")
0^9^B73370335^B68099575
"RTN","IBJDB21",1,0)
IBJDB21 ;ALB/RB - REASONS NOT BILLABLE REPORT (COMPILE) ;19-JUN-00
"RTN","IBJDB21",2,0)
 ;;2.0;INTEGRATED BILLING;**123,159,185,399,437,458**;21-MAR-94;Build 4
"RTN","IBJDB21",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBJDB21",4,0)
 ;
"RTN","IBJDB21",5,0)
EN ; - Entry point from IBJDB2.
"RTN","IBJDB21",6,0)
 K ^TMP("IBJDB2",$J),IB,IBE,ENCTYP,EPIEN,IBADMDT,RELBILL
"RTN","IBJDB21",7,0)
 I '$G(IBXTRACT) D
"RTN","IBJDB21",8,0)
 . F X=1:1:4 I IBSEL[X S IBE(X)=IBEPS(X) ; Set episodes for report.
"RTN","IBJDB21",9,0)
 ;
"RTN","IBJDB21",10,0)
 ; - Print the header line for the Excel spreadsheet
"RTN","IBJDB21",11,0)
 I $G(IBEXCEL) D PHDL
"RTN","IBJDB21",12,0)
 ;
"RTN","IBJDB21",13,0)
 ; - Compile reason not billable (RNB) data for episode.
"RTN","IBJDB21",14,0)
 S IBRNB=0 F  S IBRNB=$S(IBSRNB'="A":$O(IBSRNB(IBRNB)),1:$O(^IBE(356.8,IBRNB))) Q:'IBRNB  D
"RTN","IBJDB21",15,0)
 .S IB0=0 F  S IB0=$O(^IBT(356,"AR",IBRNB,IB0)) Q:'IB0  D
"RTN","IBJDB21",16,0)
 ..S IBN0=$G(^IBT(356,IB0,0)),IBN1=$G(^IBT(356,IB0,1)) Q:'IBN0!('IBN1)
"RTN","IBJDB21",17,0)
 ..S IBEP=+$P(IBN0,U,18) I IBSEL'[IBEP Q  ; Get episode.
"RTN","IBJDB21",18,0)
 ..S (IBRNB1,IBSORT1)=$P($G(^IBE(356.8,IBRNB,0)),U)
"RTN","IBJDB21",19,0)
 ..;
"RTN","IBJDB21",20,0)
 ..; - Get valid date entered/episode date and amount for report.
"RTN","IBJDB21",21,0)
 ..S IBEPD=+$P(IBN0,U,6)\1,IBDEN=+IBN1\1
"RTN","IBJDB21",22,0)
 ..S IBDT=$S($E(IBD)="D":IBDEN,1:IBEPD)
"RTN","IBJDB21",23,0)
 ..Q:IBDT<IBBDT!(IBDT>IBEDT)
"RTN","IBJDB21",24,0)
 ..S IBAMT=$$AMOUNT(IBEP,IB0)
"RTN","IBJDB21",25,0)
 ..;
"RTN","IBJDB21",26,0)
 ..; - Get division, if necessary.
"RTN","IBJDB21",27,0)
 ..I IBSD D  Q:'VAUTD&('$D(VAUTD(IBDIV)))
"RTN","IBJDB21",28,0)
 ...S IBDIV=$$DIV^IBJD1(IB0)
"RTN","IBJDB21",29,0)
 ..E  S IBDIV=$S($G(IBEXCEL):+$$PRIM^VASITE(),1:0)
"RTN","IBJDB21",30,0)
 ..;
"RTN","IBJDB21",31,0)
 ..; - Provider & Specialty
"RTN","IBJDB21",32,0)
 ..S (IBPRV,IBSPC)="",IBQT=0
"RTN","IBJDB21",33,0)
 ..I IBEP=1!(IBEP=2) D  I IBQT Q
"RTN","IBJDB21",34,0)
 ...S IBPRSP=$$PRVSPC(IBEP,IB0)
"RTN","IBJDB21",35,0)
 ...I IBSPRV'="A",'$D(IBSPRV(+IBPRSP)) S IBQT=1 Q
"RTN","IBJDB21",36,0)
 ...I IBEP=1,IBSISP'="A",'$D(IBSISP(+$P(IBPRSP,U,3))) S IBQT=1 Q
"RTN","IBJDB21",37,0)
 ...I IBEP=2,IBSOSP'="A",'$D(IBSOSP(+$P(IBPRSP,U,3))) S IBQT=1 Q
"RTN","IBJDB21",38,0)
 ...S IBPRV=$S($P(IBPRSP,U,2)'="":$P(IBPRSP,U,2),1:"** UNKNOWN **")
"RTN","IBJDB21",39,0)
 ...S IBSPC=$S($P(IBPRSP,U,4)'="":$P(IBPRSP,U,4),1:"** UNKNOWN **")
"RTN","IBJDB21",40,0)
 ..;
"RTN","IBJDB21",41,0)
 ..; - Get remaining data for detailed report.
"RTN","IBJDB21",42,0)
 ..S DFN=+$P(IBN0,U,2)
"RTN","IBJDB21",43,0)
 ..D DEM^VADPT S IBPT=$E(VADM(1),1,25),IBSSN=$P(VADM(2),U)
"RTN","IBJDB21",44,0)
 ..S DIC="^VA(200,",DA=+$P(IBN1,U,4),DR=".01",DIQ="IBCLK" D EN^DIQ1
"RTN","IBJDB21",45,0)
 ..S IBCLK=$E($G(IBCLK(200,DA,.01)),1,20)
"RTN","IBJDB21",46,0)
 ..I ($P(IBN0,U,18)=2)&($$EXTERNAL^DILFD(356,.19,"",$P(IBN0,U,19))["72 HOUR RULE") D
"RTN","IBJDB21",47,0)
 ...S IBADMDT=$$ADMDT^IBTUTL5(DFN,$P(IBN0,U,6))
"RTN","IBJDB21",48,0)
 ..E  S IBADMDT=""
"RTN","IBJDB21",49,0)
 ..S ENCTYP=$P(^IBE(356.6,$P(IBN0,U,18),0),U,3) S EPDT=$E($P(IBN0,U,6),1,7)
"RTN","IBJDB21",50,0)
 ..S EPIEN=$S(ENCTYP=3:$P(IBN0,U,8),ENCTYP=4:$P(IBN0,U,9),1:"")
"RTN","IBJDB21",51,0)
 ..S RELBILL=$$RELBIL^IBTUTL5(EPIEN,EPDT,DFN,ENCTYP)
"RTN","IBJDB21",52,0)
 ..;
"RTN","IBJDB21",53,0)
 ..; - Get totals for summary.
"RTN","IBJDB21",54,0)
 ..I '$D(IB(IBDIV,IBEP,IBRNB)) S IB(IBDIV,IBEP,IBRNB)="0^0"
"RTN","IBJDB21",55,0)
 ..S $P(IB(IBDIV,IBEP,IBRNB),U)=$P(IB(IBDIV,IBEP,IBRNB),U)+1
"RTN","IBJDB21",56,0)
 ..S $P(IB(IBDIV,IBEP,IBRNB),U,2)=$P(IB(IBDIV,IBEP,IBRNB),U,2)+IBAMT
"RTN","IBJDB21",57,0)
 ..I IBRPT="S" Q
"RTN","IBJDB21",58,0)
 ..;
"RTN","IBJDB21",59,0)
 ..S IBSORT1=$S(IBSORT="P":IBPRV,IBSORT="S":IBSPC,1:IBSORT1)
"RTN","IBJDB21",60,0)
 ..S:IBSORT1="" IBSORT1=" "
"RTN","IBJDB21",61,0)
 ..;
"RTN","IBJDB21",62,0)
 ..I $G(IBEXCEL) D  Q
"RTN","IBJDB21",63,0)
 ...W !,$E($P($G(^DG(40.8,IBDIV,0)),U),1,25),U
"RTN","IBJDB21",64,0)
 ...W $S(IBEP<4:$E(IBE(IBEP)),1:"H"),U,IBPT,U,$E(IBSSN,6,10),U
"RTN","IBJDB21",65,0)
 ...W $E($$INS^IBJD1(+$P(IBN0,U,2),IBEPD),1,25),U
"RTN","IBJDB21",66,0)
 ...W $$DT^IBJD(IBEPD,1),U,$$DT^IBJD(IBDEN,1),U
"RTN","IBJDB21",67,0)
 ...W $$DT^IBJD($P(IBN1,U,3),1),U,IBCLK,U,IBADMDT,U,$E(IBRNB1,1,25),U
"RTN","IBJDB21",68,0)
 ...W $E(IBPRV,1,25),U,$E(IBSPC,1,25),U,IBAMT,U
"RTN","IBJDB21",69,0)
 ...I RELBILL>0 F X=2:1:$P(RELBILL,";",1)+1 W $P(RELBILL,";",X)_" "
"RTN","IBJDB21",70,0)
 ...I RELBILL<0 W ""
"RTN","IBJDB21",71,0)
 ...W U,$P(IBN1,U,8)
"RTN","IBJDB21",72,0)
 ..;
"RTN","IBJDB21",73,0)
 ..S X=IBEPD_U_IBDEN_U_$P(IBN1,U,3)_U_IBCLK_U_IBRNB1
"RTN","IBJDB21",74,0)
 ..S X=X_U_IBPRV_U_IBSPC_U_IBAMT_U_$E($P(IBN1,U,8),1,50)_U_IBADMDT_U_RELBILL
"RTN","IBJDB21",75,0)
 ..S ^TMP("IBJDB2",$J,IBDIV,IBEP,IBSORT1,IBPT_"@@"_$E(IBSSN,6,10))=$$INS^IBJD1(+$P(IBN0,U,2),IBEPD)
"RTN","IBJDB21",76,0)
 ..S ^TMP("IBJDB2",$J,IBDIV,IBEP,IBSORT1,IBPT_"@@"_$E(IBSSN,6,10),+IBN0)=X
"RTN","IBJDB21",77,0)
 ;
"RTN","IBJDB21",78,0)
 I '$G(IBEXCEL) D EN^IBJDB22 ; Print report(s).
"RTN","IBJDB21",79,0)
 ;
"RTN","IBJDB21",80,0)
ENQ K ^TMP("IBJDB2")
"RTN","IBJDB21",81,0)
 K DA,DIC,DIQ,DR,IB,IB0,IBAMT,IBCLK,IBDEN,IBDIV,IBDT,IBE,IBEP,IBEPD,IBI
"RTN","IBJDB21",82,0)
 K IBN0,IBN1,IBN2,IBPRSP,IBPRV,IBPT,IBQT,IBRNB,IBRNB1,IBSORT1,IBSPC
"RTN","IBJDB21",83,0)
 K IBSSN,VADM,X1,X2
"RTN","IBJDB21",84,0)
 Q
"RTN","IBJDB21",85,0)
 ;
"RTN","IBJDB21",86,0)
AMOUNT(EPS,CLM) ; Return the Amount not billed 
"RTN","IBJDB21",87,0)
 ; Input: EPS - Episode(1=Inpatient,2=Outpatient,3=Prosthet.,4=Prescr.)
"RTN","IBJDB21",88,0)
 ;        CLM - Pointer to Claim Tracking File (#356)
"RTN","IBJDB21",89,0)
 ;Output: AMOUNT not billed
"RTN","IBJDB21",90,0)
 ;
"RTN","IBJDB21",91,0)
 N ADM,ADMDT,AMOUNT,BLBS,BLDT,CPT,CPTLST,DA,DR,DCHD,DFN,DIC,DIQ,DIV,DRG,SPCLTY
"RTN","IBJDB21",92,0)
 N IBRX,ENC,ENCDT,EPDT,PFT,PRST,PTF,RIMB,VCPT,TTCST,X
"RTN","IBJDB21",93,0)
 ;
"RTN","IBJDB21",94,0)
 S AMOUNT=0,X=$G(^IBT(356,CLM,0))
"RTN","IBJDB21",95,0)
 S ENC=+$P(X,U,4)     ; Encounter    (Pointer to #409.68)
"RTN","IBJDB21",96,0)
 S ADM=+$P(X,U,5)     ; Admission    (Pointer to #405)
"RTN","IBJDB21",97,0)
 S PRST=+$P(X,U,9)    ; Prothetics   (Pointer to #660)
"RTN","IBJDB21",98,0)
 S EPDT=$P(X,U,6)     ; Episode Date (FM format)
"RTN","IBJDB21",99,0)
 S IBRX=+$P(X,U,8)
"RTN","IBJDB21",100,0)
 ;
"RTN","IBJDB21",101,0)
 ; - Assumes REIMBURSABLE INS. as the RATE TYPE
"RTN","IBJDB21",102,0)
 S RIMB=$O(^DGCR(399.3,"B","REIMBURSABLE INS.",0)) I 'RIMB S RIMB=8
"RTN","IBJDB21",103,0)
 ;
"RTN","IBJDB21",104,0)
 G @("AMT"_EPS)
"RTN","IBJDB21",105,0)
 ;
"RTN","IBJDB21",106,0)
AMT1 ; - Inpatient Charges
"RTN","IBJDB21",107,0)
 I 'ADM G QAMT
"RTN","IBJDB21",108,0)
 S X=$G(^DGPM(ADM,0)) G QAMT:X="" S PTF=$P(X,U,16) G QAMT:'PTF
"RTN","IBJDB21",109,0)
 S ADMDT=$P(X,U)\1,DFN=+$P(X,U,3)
"RTN","IBJDB21",110,0)
 I $P(X,U,17) S DCHD=$P($G(^DGPM(+$P(X,U,17),0)),U)\1
"RTN","IBJDB21",111,0)
 I '$G(DCHD) S DCHD=$$DT^XLFDT()
"RTN","IBJDB21",112,0)
 ;
"RTN","IBJDB21",113,0)
 K ^TMP($J,"IBCRC-PTF"),^TMP($J,"IBCRC-DIV"),^TMP($J,"IBCRC-INDT")
"RTN","IBJDB21",114,0)
 D PTF^IBCRBG(PTF) G QAMT:'$D(^TMP($J,"IBCRC-PTF"))
"RTN","IBJDB21",115,0)
 D PTFDV^IBCRBG(PTF) G QAMT:'$D(^TMP($J,"IBCRC-DIV"))
"RTN","IBJDB21",116,0)
 D BSLOS^IBCRBG(ADMDT,DCHD,1,ADM,0) G QAMT:'$D(^TMP($J,"IBCRC-INDT"))
"RTN","IBJDB21",117,0)
 ;
"RTN","IBJDB21",118,0)
 S BLDT=""
"RTN","IBJDB21",119,0)
 F  S BLDT=$O(^TMP($J,"IBCRC-INDT",BLDT)) Q:BLDT=""  D
"RTN","IBJDB21",120,0)
 .S X=^TMP($J,"IBCRC-INDT",BLDT)
"RTN","IBJDB21",121,0)
 .S BLBS=$P(X,U,2),DRG=$P(X,U,4),DIV=$P(X,U,5),SPCLTY=$P(X,U,6)
"RTN","IBJDB21",122,0)
 .;
"RTN","IBJDB21",123,0)
 .; - Tort Liable Charge (prior to 09/01/99)
"RTN","IBJDB21",124,0)
 .I BLDT<2990901 D  Q
"RTN","IBJDB21",125,0)
 ..S AMOUNT=AMOUNT+$$BICOST^IBCRCI(RIMB,1,BLDT,"INPATIENT BEDSECTION STAY",BLBS)
"RTN","IBJDB21",126,0)
 .;
"RTN","IBJDB21",127,0)
 .; - Reasonable Charges (on 09/01/99 or later)
"RTN","IBJDB21",128,0)
 .I $$NODRG^IBCRBG2(SPCLTY)["Observation" Q
"RTN","IBJDB21",129,0)
 .I $$NODRG^IBCRBG2(SPCLTY)["Nursing Home Care" D  Q
"RTN","IBJDB21",130,0)
 ..S BLBS=$$MCCRUTL^IBCRU1("SKILLED NURSING CARE",25)
"RTN","IBJDB21",131,0)
 ..S AMOUNT=AMOUNT+$$BICOST^IBCRCI(RIMB,1,BLDT,"INPATIENT BEDSECTION STAY",BLBS,"",DIV,"",1)
"RTN","IBJDB21",132,0)
 .;
"RTN","IBJDB21",133,0)
 .S BLBS=$$BSUPD^IBCRBG2(+SPCLTY,BLDT,1)
"RTN","IBJDB21",134,0)
 .S AMOUNT=AMOUNT+$$BICOST^IBCRCI(RIMB,1,BLDT,"INPATIENT DRG",DRG,"",DIV,"",1,BLBS)
"RTN","IBJDB21",135,0)
 ;
"RTN","IBJDB21",136,0)
 ; - Add the Professional Average Amount per Episode (Reason.Chg only)
"RTN","IBJDB21",137,0)
 I EPDT'<2990901 S AMOUNT=AMOUNT+$$AVG(EPDT)
"RTN","IBJDB21",138,0)
 ;
"RTN","IBJDB21",139,0)
 ; - Subtract the amount billed for this Episode
"RTN","IBJDB21",140,0)
 S AMOUNT=AMOUNT-$$CLAMT(DFN,EPDT,1)
"RTN","IBJDB21",141,0)
 ;
"RTN","IBJDB21",142,0)
 K ^TMP($J,"IBCRC-PTF"),^TMP($J,"IBCRC-DIV"),^TMP($J,"IBCRC-INDT")
"RTN","IBJDB21",143,0)
 ;
"RTN","IBJDB21",144,0)
 G QAMT
"RTN","IBJDB21",145,0)
 ;
"RTN","IBJDB21",146,0)
AMT2 ; - Outpatient Charges
"RTN","IBJDB21",147,0)
 S X=$$GETOE^SDOE(ENC),ENCDT=+$P(X,U),DFN=+$P(X,U,2),DIV=$P(X,U,11)
"RTN","IBJDB21",148,0)
 ;
"RTN","IBJDB21",149,0)
 ; - Tort Liable Charge (prior to 09/01/99)
"RTN","IBJDB21",150,0)
 I ENCDT<2990901 D  G QAMT
"RTN","IBJDB21",151,0)
 . S AMOUNT=+$$BICOST^IBCRCI(RIMB,3,ENCDT,"OUTPATIENT VISIT DATE")
"RTN","IBJDB21",152,0)
 ;
"RTN","IBJDB21",153,0)
 S AMOUNT=$$OPT^IBTUTL5(ENC,EPDT) G QAMT
"RTN","IBJDB21",154,0)
 ;
"RTN","IBJDB21",155,0)
AMT3 ; Prosthetic Charges
"RTN","IBJDB21",156,0)
 S AMOUNT=$$PRSAMT^IBTUTL5(EPDT,PRST) G:AMOUNT=0 QAMT
"RTN","IBJDB21",157,0)
 ;
"RTN","IBJDB21",158,0)
 S DIC="^RMPR(660,",DA=PRST,DR="14",DIQ="TTCST" D EN^DIQ1
"RTN","IBJDB21",159,0)
 S AMOUNT=+$G(TTCST(660,DA,14))
"RTN","IBJDB21",160,0)
 G QAMT
"RTN","IBJDB21",161,0)
 ;
"RTN","IBJDB21",162,0)
AMT4 ; - Prescription Charges 
"RTN","IBJDB21",163,0)
 ;
"RTN","IBJDB21",164,0)
 ; Protect Rx internal entry # before RXAMT call switches to RX number
"RTN","IBJDB21",165,0)
 N IBRXIEN S IBRXIEN=IBRX
"RTN","IBJDB21",166,0)
 ;
"RTN","IBJDB21",167,0)
 ; - Tort Liable Charge & Reasonable Charge (same source)
"RTN","IBJDB21",168,0)
 S AMOUNT=$$RXAMT^IBTUTL5(EPDT,IBRX) G:AMOUNT=0 QAMT
"RTN","IBJDB21",169,0)
 ;
"RTN","IBJDB21",170,0)
 ; Patch 437 update to call charge master with enough information
"RTN","IBJDB21",171,0)
 ; to lookup actual cost of prescription 
"RTN","IBJDB21",172,0)
 ;
"RTN","IBJDB21",173,0)
 N IBBI,IBRSNEW
"RTN","IBJDB21",174,0)
 ;
"RTN","IBJDB21",175,0)
 ; check charge master for the type of billing--VA Cost or not
"RTN","IBJDB21",176,0)
 S IBBI=$$EVNTITM^IBCRU3(+RIMB,3,"PRESCRIPTION FILL",EPDT,.IBRSNEW)
"RTN","IBJDB21",177,0)
 ;
"RTN","IBJDB21",178,0)
 S DFN=$$FILE^IBRXUTL(IBRXIEN,2)
"RTN","IBJDB21",179,0)
 I $G(DFN)>0&(IBBI["VA COST") D
"RTN","IBJDB21",180,0)
 .  N IBQTY,IBCOST,IBRFNUM,IBSUBND,IBFEE,IBRXNODE
"RTN","IBJDB21",181,0)
 .;  if this is a refill look up the refill info for cost and quantity
"RTN","IBJDB21",182,0)
 .  S IBRFNUM=$$RFLNUM^IBRXUTL(IBRXIEN,EPDT,"")
"RTN","IBJDB21",183,0)
 .  I IBRFNUM>0 D
"RTN","IBJDB21",184,0)
 ..    S IBSUBND=$$ZEROSUB^IBRXUTL(DFN,IBRXIEN,IBRFNUM)
"RTN","IBJDB21",185,0)
 ..    S IBQTY=$P($G(IBSUBND),U,4)
"RTN","IBJDB21",186,0)
 ..    S IBCOST=$P($G(IBSUBND),U,11)
"RTN","IBJDB21",187,0)
 .;
"RTN","IBJDB21",188,0)
 .;  if this was an original fill look up zero node for Rx info 
"RTN","IBJDB21",189,0)
 .  E  D
"RTN","IBJDB21",190,0)
 ..    S IBRXNODE=$$RXZERO^IBRXUTL(DFN,IBRXIEN)
"RTN","IBJDB21",191,0)
 .     S IBQTY=$P($G(IBRXNODE),U,7)
"RTN","IBJDB21",192,0)
 .     S IBCOST=$P($G(IBRXNODE),U,17)
"RTN","IBJDB21",193,0)
 .;
"RTN","IBJDB21",194,0)
 .  S IBRSNEW=+$O(IBRSNEW($P(IBBI,";"),0))
"RTN","IBJDB21",195,0)
 .  S AMOUNT=$J(+$$RATECHG^IBCRCC(+IBRSNEW,IBQTY*IBCOST,EPDT,.IBFEE),0,2)
"RTN","IBJDB21",196,0)
 E  D
"RTN","IBJDB21",197,0)
 .  S AMOUNT=+$$BICOST^IBCRCI(RIMB,3,EPDT,"PRESCRIPTION FILL")
"RTN","IBJDB21",198,0)
 ;
"RTN","IBJDB21",199,0)
 ;
"RTN","IBJDB21",200,0)
QAMT I AMOUNT<0 S AMOUNT=0
"RTN","IBJDB21",201,0)
 Q AMOUNT
"RTN","IBJDB21",202,0)
 ;
"RTN","IBJDB21",203,0)
CLAMT(DFN,EPDT,PT) ; Returns the Total Amount of Claims for Patient/Episode
"RTN","IBJDB21",204,0)
 ;
"RTN","IBJDB21",205,0)
 ; Input:  DFN - Pointer to the Patient File #2
"RTN","IBJDB21",206,0)
 ;        EPDT - Episode Date
"RTN","IBJDB21",207,0)
 ;          PT - 0=Outpatient, 1=Inpatient
"RTN","IBJDB21",208,0)
 ;
"RTN","IBJDB21",209,0)
 N CLAMT,CLM,DAY,IBD,X
"RTN","IBJDB21",210,0)
 S CLAMT=0,DAY=EPDT-1,CLM=""
"RTN","IBJDB21",211,0)
 F  S CLM=$O(^DGCR(399,"C",DFN,CLM)) Q:'CLM  D
"RTN","IBJDB21",212,0)
 .S X=$G(^DGCR(399,CLM,0))
"RTN","IBJDB21",213,0)
 .I $P($P(X,U,3),".")=$P(EPDT,".") D
"RTN","IBJDB21",214,0)
 ..S IBD=$$CKBIL^IBTUBOU(CLM,PT) Q:IBD=""
"RTN","IBJDB21",215,0)
 ..I '$P(IBD,U,3) Q  ; Not authorized
"RTN","IBJDB21",216,0)
 ..S CLAMT=CLAMT+$G(^DGCR(399,CLM,"U1"))
"RTN","IBJDB21",217,0)
 ;
"RTN","IBJDB21",218,0)
QCLAMT Q CLAMT
"RTN","IBJDB21",219,0)
 ;
"RTN","IBJDB21",220,0)
AVG(EPDT) ; Returns the Average Amount of Inpatient Professional per
"RTN","IBJDB21",221,0)
 ;         Number of Episodes for the previous 12 months
"RTN","IBJDB21",222,0)
 N AVG,M,Z
"RTN","IBJDB21",223,0)
 S AVG=0,M=EPDT\100*100
"RTN","IBJDB21",224,0)
 I '$D(^IBE(356.19,M,1)) S M=$O(^IBE(356.19,M),-1) I 'M G QAVG
"RTN","IBJDB21",225,0)
 S Z=$G(^IBE(356.19,M,1)) I $P(Z,U,12) S AVG=$P(Z,U,11)/$P(Z,U,12)
"RTN","IBJDB21",226,0)
QAVG Q $J(AVG,0,2)
"RTN","IBJDB21",227,0)
 ;
"RTN","IBJDB21",228,0)
PRVSPC(EPS,CLM) ; Return the Provider and the Specialty
"RTN","IBJDB21",229,0)
 ;  Input: EPS - Episode(1 = Inpatient OR 2 = Outpatient)
"RTN","IBJDB21",230,0)
 ;         CLM - Pointer to Claim Tracking File (#356)
"RTN","IBJDB21",231,0)
 ; Output: Provider Code (Pointer to #200) ^ Provider Name ^
"RTN","IBJDB21",232,0)
 ;         Specialty Code (Pointer to #40.7 or #45.7) ^ Specialty Name
"RTN","IBJDB21",233,0)
 ;
"RTN","IBJDB21",234,0)
 N ADM,DFN,ENC,PRI,PRS,PRV,PRVLST,SPC,STP,X,VAIN,VAINDT
"RTN","IBJDB21",235,0)
 ;
"RTN","IBJDB21",236,0)
 S X=$G(^IBT(356,CLM,0))
"RTN","IBJDB21",237,0)
 S DFN=$P(X,U,2),ENC=$P(X,U,4),ADM=$P(X,U,5),PRS=$P(X,U,8)
"RTN","IBJDB21",238,0)
 ;
"RTN","IBJDB21",239,0)
 S (PRV,SPC)="^"
"RTN","IBJDB21",240,0)
 I EPS=1,ADM D  G QPS  ; Inpatient
"RTN","IBJDB21",241,0)
 .S X=$G(^DGPM(ADM,0)),VAINDT=$P(X,U)\1 I 'VAINDT Q
"RTN","IBJDB21",242,0)
 .D INP^VADPT S PRV=$G(VAIN(11)),SPC=$G(VAIN(3))
"RTN","IBJDB21",243,0)
 .S:PRV="" PRV="^" S:SPC="" SPC="^"
"RTN","IBJDB21",244,0)
 ;
"RTN","IBJDB21",245,0)
 I EPS=2,ENC D  G QPS  ; Outpatient
"RTN","IBJDB21",246,0)
 .D GETPRV^SDOE(ENC,"PRVLST")
"RTN","IBJDB21",247,0)
 .S (X,PRI)=""
"RTN","IBJDB21",248,0)
 .F  S X=$O(PRVLST(X),-1) Q:X=""!PRI  D
"RTN","IBJDB21",249,0)
 ..N IBX S PRV=+PRVLST(X)
"RTN","IBJDB21",250,0)
 ..I $P(PRVLST(X),U,4)="P" S PRI=1 ; Primary provider
"RTN","IBJDB21",251,0)
 ..I PRV S PRV=PRV_U_$P($G(^VA(200,+PRV,0)),U)
"RTN","IBJDB21",252,0)
 ..S IBX=$$GETOE^SDOE(ENC),STP=$P(IBX,U,3)
"RTN","IBJDB21",253,0)
 ..I STP'="" S SPC=STP_U_$P($G(^DIC(40.7,STP,0)),U)
"RTN","IBJDB21",254,0)
 ;
"RTN","IBJDB21",255,0)
QPS Q (PRV_U_SPC)
"RTN","IBJDB21",256,0)
 ;
"RTN","IBJDB21",257,0)
PHDL ; - Print the header line for the Excel spreadsheet
"RTN","IBJDB21",258,0)
 N X
"RTN","IBJDB21",259,0)
 S X="Division^Svc^Patient^SSN^Insurance^Episode Dt^Dt Entered^Dt Lst Edit^"
"RTN","IBJDB21",260,0)
 S X=X_"Lst Edited By^Next Admission^RNB Cat^Provider^Specialty^Entry Amt^Related Bills^Comments"
"RTN","IBJDB21",261,0)
 W !,X
"RTN","IBJDB21",262,0)
 Q
"RTN","IBJTRA1")
0^10^B10892306^B10800443
"RTN","IBJTRA1",1,0)
IBJTRA1 ;ALB/AAS,ARH - TPI CT INSURANCE COMMUNICATIONS BUILD ; 4/1/95
"RTN","IBJTRA1",2,0)
 ;;2.0;INTEGRATED BILLING;**39,91,347,389,458**;21-MAR-94;Build 4
"RTN","IBJTRA1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBJTRA1",4,0)
 ;
"RTN","IBJTRA1",5,0)
 ; copyed from IBTRC with modifications to show reviews for multiple events
"RTN","IBJTRA1",6,0)
 ;
"RTN","IBJTRA1",7,0)
 ;
"RTN","IBJTRA1",8,0)
BLD ; -- Build list of Insurance contacts, including reviews, appeals, and denials
"RTN","IBJTRA1",9,0)
 K ^TMP("IBJTRA",$J),^TMP("IBJTRADX",$J),IBJTA1,IBJTA2
"RTN","IBJTRA1",10,0)
 N X,IBI,IBJ,J,IBTRC,IBTRCD,IBTRCD1,IBJTEVNT,IBCNT,IBTRN,IBTRND,IBETYP,IBBEG
"RTN","IBJTRA1",11,0)
 S VALMSG=$$MSG^IBTUTL3(DFN)
"RTN","IBJTRA1",12,0)
 S (IBTRC,IBCNT,VALMCNT)=0,IBI=""
"RTN","IBJTRA1",13,0)
 D IFNTRN^IBJTU5(IBIFN,.IBJTA1,.IBJTA2)
"RTN","IBJTRA1",14,0)
 I 'IBJTA1 S IBCNT=1 D SET1(" ") S IBCNT=2 D SET1("No Claims Tracking Entries.") G BLDQ
"RTN","IBJTRA1",15,0)
 S IBJ=0 F  S IBJ=$O(IBJTA2(IBJ)) Q:'IBJ  S IBTRN=IBJTA2(IBJ) D
"RTN","IBJTRA1",16,0)
 .S IBTRND=$G(^IBT(356,IBTRN,0))
"RTN","IBJTRA1",17,0)
 .S IBJTEVNT="    "_$$EVNT(IBTRND)
"RTN","IBJTRA1",18,0)
 .F  S IBI=$O(^IBT(356.2,"ATIDT",IBTRN,IBI)) Q:'IBI  S IBTRC=0 F  S IBTRC=$O(^IBT(356.2,"ATIDT",IBTRN,IBI,IBTRC)) Q:'IBTRC  D
"RTN","IBJTRA1",19,0)
 ..S IBTRCD=$G(^IBT(356.2,+IBTRC,0))
"RTN","IBJTRA1",20,0)
 ..S IBTRCD1=$G(^IBT(356.2,+IBTRC,1))
"RTN","IBJTRA1",21,0)
 ..Q:'+$P(IBTRCD,"^",19)  ;quit if inactive
"RTN","IBJTRA1",22,0)
 ..S IBCNT=IBCNT+1
"RTN","IBJTRA1",23,0)
 ..I IBJTEVNT'="" D SET(" ",0),SET(IBJTEVNT,0) S IBJTEVNT=""
"RTN","IBJTRA1",24,0)
 ..S IBETYP=$G(^IBE(356.11,+$P(IBTRCD,"^",4),0))
"RTN","IBJTRA1",25,0)
 ..W "."
"RTN","IBJTRA1",26,0)
 ..S X=""
"RTN","IBJTRA1",27,0)
 ..S X=$$SETFLD^VALM1(IBCNT,X,"NUMBER")
"RTN","IBJTRA1",28,0)
 ..S X=$$SETFLD^VALM1($P($$DAT1^IBOUTL(+IBTRCD,"2P")," "),X,"DATE")
"RTN","IBJTRA1",29,0)
 ..S X=$$SETFLD^VALM1($P($G(^DIC(36,+$P(IBTRCD,"^",8),0)),"^"),X,"INS CO")
"RTN","IBJTRA1",30,0)
 ..S X=$$SETFLD^VALM1($$EXPAND^IBTRE(356.2,.11,$P(IBTRCD,"^",11)),X,"ACTION")
"RTN","IBJTRA1",31,0)
 ..;
"RTN","IBJTRA1",32,0)
 ..S X=$$SETFLD^VALM1($P(IBETYP,"^",3),X,"TYPE")
"RTN","IBJTRA1",33,0)
 ..S X=$$SETFLD^VALM1($$AUTHN^IBTRC(IBTRC,10),X,"PRE-CERT")
"RTN","IBJTRA1",34,0)
 ..I $P(IBTRCD,"^",13) S X=$$SETFLD^VALM1($J($$DAY^IBTUTL3($P(IBTRCD,"^",12),$P(IBTRCD,"^",13),IBTRN),3),X,"DAYS")
"RTN","IBJTRA1",35,0)
 ..I $P($G(^IBE(356.7,+$P(IBTRCD,"^",11),0)),"^",3)=20 S X=$$SETFLD^VALM1($J($$DAY^IBTUTL3($P(IBTRCD,"^",15),$P(IBTRCD,"^",16),IBTRN),3),X,"DAYS")
"RTN","IBJTRA1",36,0)
 ..I $P(IBTRCD1,"^",7)!($P(IBTRCD1,"^",8)) S X=$$SETFLD^VALM1("ALL",X,"DAYS")
"RTN","IBJTRA1",37,0)
 ..S X=$$SETFLD^VALM1($P(IBTRCD,"^",6),X,"CONTACT")
"RTN","IBJTRA1",38,0)
 ..S X=$$SETFLD^VALM1($P(IBTRCD,"^",7),X,"PHONE")
"RTN","IBJTRA1",39,0)
 ..S X=$$SETFLD^VALM1($$CREFN^IBTRC(IBTRC,12),X,"REF NO")
"RTN","IBJTRA1",40,0)
 ..I $P(IBETYP,"^",2)=60!($P(IBETYP,"^",2)=65) D APPEAL^IBTRC3
"RTN","IBJTRA1",41,0)
 ..D SET(X,1)
"RTN","IBJTRA1",42,0)
 I 'IBCNT S IBCNT=1 D SET1(" ") S IBCNT=2 D SET1("No Insurance Reviews for Episodes on this Bill.") G BLDQ
"RTN","IBJTRA1",43,0)
BLDQ K IBJTA1,IBJTA2
"RTN","IBJTRA1",44,0)
 Q
"RTN","IBJTRA1",45,0)
 ;
"RTN","IBJTRA1",46,0)
SET1(X) ; set array (no selection)
"RTN","IBJTRA1",47,0)
 S VALMCNT=VALMCNT+1
"RTN","IBJTRA1",48,0)
 S ^TMP("IBJTRA",$J,VALMCNT,0)=X
"RTN","IBJTRA1",49,0)
 Q
"RTN","IBJTRA1",50,0)
 ;
"RTN","IBJTRA1",51,0)
SET(X,Y) ; -- set arrays
"RTN","IBJTRA1",52,0)
 S VALMCNT=VALMCNT+1
"RTN","IBJTRA1",53,0)
 S ^TMP("IBJTRA",$J,VALMCNT,0)=X
"RTN","IBJTRA1",54,0)
 S ^TMP("IBJTRA",$J,"IDX",VALMCNT,IBCNT)=""
"RTN","IBJTRA1",55,0)
 I +$G(Y) S ^TMP("IBJTRADX",$J,IBCNT)=VALMCNT_"^"_IBTRC
"RTN","IBJTRA1",56,0)
 Q
"RTN","IBJTRA1",57,0)
 ;
"RTN","IBJTRA1",58,0)
EVNT(IBTRND) ; return line for display on event
"RTN","IBJTRA1",59,0)
 N X,Y,IBTYP S X="" I $G(IBTRND)="" G EVNTQ
"RTN","IBJTRA1",60,0)
 S IBTYP=+$P(IBTRND,U,18)
"RTN","IBJTRA1",61,0)
 S X=$$EXSET^IBJU1(IBTYP,356,.18)
"RTN","IBJTRA1",62,0)
 I IBTYP=2 S X=X_" of "_$P($G(^DIC(40.7,+$$SCE^IBSDU(+$P(IBTRND,U,4),3),0)),U,1)
"RTN","IBJTRA1",63,0)
 I IBTYP=3 S X=X_" of "_$P($$PIN^IBCSC5B(+$P(IBTRND,U,9)),U,2)
"RTN","IBJTRA1",64,0)
 I IBTYP=4 S X=X_" of "_$$FILE^IBRXUTL(+$P(IBTRND,U,8),.01)
"RTN","IBJTRA1",65,0)
 S X=X_" on "_$$DAT1^IBOUTL($P(IBTRND,U,6),"2P")
"RTN","IBJTRA1",66,0)
EVNTQ Q X
"RTN","IBOTRR")
0^11^B13485669^n/a
"RTN","IBOTRR",1,0)
IBOTRR ;ALB/ARH - ROI EXPIRING REPORT ; 08-JAN-2013
"RTN","IBOTRR",2,0)
 ;;2.0;INTEGRATED BILLING;**458**;21-MAR-94;Build 4
"RTN","IBOTRR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBOTRR",4,0)
 ;
"RTN","IBOTRR",5,0)
EN ;get parameters then run the report
"RTN","IBOTRR",6,0)
 D HOME^%ZIS N DIR,DIRUT,DUOUT,X,Y,IBBDT,IBEDT,IBEXCEL
"RTN","IBOTRR",7,0)
 W !!,"ROI Special Consent Report - Find ROIs about to expire",!
"RTN","IBOTRR",8,0)
 ;
"RTN","IBOTRR",9,0)
 D DATE^IBOUTL I IBBDT=""!(IBEDT="") Q
"RTN","IBOTRR",10,0)
 ;
"RTN","IBOTRR",11,0)
 W !!,"ROI's that expire between "_$$FMTE^XLFDT(IBBDT,2)_" and "_$$FMTE^XLFDT(IBEDT,2)_" will be included on the report.",!
"RTN","IBOTRR",12,0)
 ;
"RTN","IBOTRR",13,0)
 ; Determine whether to gather data for Excel report
"RTN","IBOTRR",14,0)
 S DIR("?")="Enter Yes to capture the report on the screen for transfer to Excel."
"RTN","IBOTRR",15,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="Do you want to capture report data for an Excel document" D ^DIR K DIR I $D(DIRUT) G EXIT
"RTN","IBOTRR",16,0)
 S IBEXCEL=0 I Y=1 S IBEXCEL=1 W !,"Enter '0;80;999' at the 'DEVICE:' prompt.",!
"RTN","IBOTRR",17,0)
 ;
"RTN","IBOTRR",18,0)
DEV ;get the device
"RTN","IBOTRR",19,0)
 S %ZIS="QM",%ZIS("A")="OUTPUT DEVICE: " D ^%ZIS G:POP EXIT
"RTN","IBOTRR",20,0)
 I $D(IO("Q")) S ZTRTN="RPT^IBOTRR",ZTSAVE("IB*")="",ZTDESC="IB ROI Expires" D ^%ZTLOAD K IO("Q") G EXIT
"RTN","IBOTRR",21,0)
 U IO
"RTN","IBOTRR",22,0)
 ;
"RTN","IBOTRR",23,0)
RPT ;find, save, and print the data that satisfies the search parameters
"RTN","IBOTRR",24,0)
 ;entry point for tasked jobs
"RTN","IBOTRR",25,0)
 ;
"RTN","IBOTRR",26,0)
 K ^TMP($J,"IBOTRR")
"RTN","IBOTRR",27,0)
 ;
"RTN","IBOTRR",28,0)
 D SORT,PRINT
"RTN","IBOTRR",29,0)
 ;
"RTN","IBOTRR",30,0)
EXIT ;clean up and quit
"RTN","IBOTRR",31,0)
 K ^TMP($J,"IBOTRR") Q:$D(ZTQUEUED)
"RTN","IBOTRR",32,0)
 D ^%ZISC
"RTN","IBOTRR",33,0)
 Q
"RTN","IBOTRR",34,0)
 ;
"RTN","IBOTRR",35,0)
SORT ; sort report - get all ROIs that will expire in Patient and Effective Date order
"RTN","IBOTRR",36,0)
 N DFN,IBRFN,IBR0,IBPAT,IBB,IBE K ^TMP($J,"IBOTRR")
"RTN","IBOTRR",37,0)
 ;
"RTN","IBOTRR",38,0)
 S DFN=0 F  S DFN=$O(^IBT(356.26,"C",DFN)) Q:'DFN  D
"RTN","IBOTRR",39,0)
 .S IBRFN=0 F  S IBRFN=$O(^IBT(356.26,"C",DFN,IBRFN)) Q:'IBRFN  D
"RTN","IBOTRR",40,0)
 .. S IBR0=$G(^IBT(356.26,IBRFN,0))
"RTN","IBOTRR",41,0)
 .. S IBB=+$P(IBR0,U,4),IBE=+$P(IBR0,U,5),IBPAT=$P($G(^DPT(+$P(IBR0,U,2),0)),U,1)
"RTN","IBOTRR",42,0)
 .. ;
"RTN","IBOTRR",43,0)
 .. I IBE'<IBBDT,IBE'>IBEDT S ^TMP($J,"IBOTRR",IBPAT,$P(IBR0,U,4),IBRFN)=""
"RTN","IBOTRR",44,0)
 ;
"RTN","IBOTRR",45,0)
 Q
"RTN","IBOTRR",46,0)
 ;
"RTN","IBOTRR",47,0)
PRINT ;print the report from the temp sort file to the appropriate device
"RTN","IBOTRR",48,0)
 N IBPGN,IBLN,IBQUIT,IBPAT,IBB,IBRFN,IBR0
"RTN","IBOTRR",49,0)
 S IBPGN=0,IBQUIT=0 D HDR Q:IBQUIT
"RTN","IBOTRR",50,0)
 ;
"RTN","IBOTRR",51,0)
 S IBPAT="" F  S IBPAT=$O(^TMP($J,"IBOTRR",IBPAT)) Q:IBPAT=""  D  Q:IBQUIT
"RTN","IBOTRR",52,0)
 . S IBB="" F  S IBB=$O(^TMP($J,"IBOTRR",IBPAT,IBB)) Q:IBB=""  D  Q:IBQUIT
"RTN","IBOTRR",53,0)
 .. S IBRFN=0 F  S IBRFN=$O(^TMP($J,"IBOTRR",IBPAT,IBB,IBRFN)) Q:'IBRFN  D  Q:$$LNCHK(2)
"RTN","IBOTRR",54,0)
 ... S IBR0=$G(^IBT(356.26,IBRFN,0))
"RTN","IBOTRR",55,0)
 ... I +$G(IBEXCEL) W !,IBPAT,U,$$FMTE^XLFDT($P(IBR0,U,4)),U,$$FMTE^XLFDT($P(IBR0,U,5)) S IBLN=1 Q
"RTN","IBOTRR",56,0)
 ... W !,IBPAT,?36,$$FMTE^XLFDT($P(IBR0,U,4)),?53,$$FMTE^XLFDT($P(IBR0,U,5)) S IBLN=IBLN+1
"RTN","IBOTRR",57,0)
 ;
"RTN","IBOTRR",58,0)
 I 'IBQUIT D PAUSE
"RTN","IBOTRR",59,0)
 Q
"RTN","IBOTRR",60,0)
LNCHK(LNS) ; check if new page is needed
"RTN","IBOTRR",61,0)
 I 'IBQUIT,IBLN>(IOSL-LNS) D PAUSE I 'IBQUIT D HDR
"RTN","IBOTRR",62,0)
 Q IBQUIT
"RTN","IBOTRR",63,0)
 ;
"RTN","IBOTRR",64,0)
HDR ;print the report header
"RTN","IBOTRR",65,0)
 N IBNOW,IBI
"RTN","IBOTRR",66,0)
 I +$G(IBEXCEL) W !,"Patient^Effective^Expires" S IBLN=1 Q
"RTN","IBOTRR",67,0)
 ;
"RTN","IBOTRR",68,0)
 S IBQUIT=$$STOP Q:IBQUIT  S IBPGN=IBPGN+1,IBLN=7
"RTN","IBOTRR",69,0)
 S IBNOW=$$FMTE^XLFDT($$NOW^XLFDT,2),IBNOW=$P(IBNOW,"@",1)_"  "_$P($P(IBNOW,"@",2),":",1,2)
"RTN","IBOTRR",70,0)
 I IBPGN>1!($E(IOST,1,2)["C-") W @IOF
"RTN","IBOTRR",71,0)
 ;
"RTN","IBOTRR",72,0)
 W !,"ROI Special Consent To Expire ",$$FMTE^XLFDT(IBBDT)," - ",$$FMTE^XLFDT(IBEDT),?(IOM-30),IBNOW,?(IOM-8),"PAGE ",IBPGN,!
"RTN","IBOTRR",73,0)
 W !,"Patient",?36,"Effective",?53,"Expires",!
"RTN","IBOTRR",74,0)
 S IBI="",$P(IBI,"-",IOM+1)="" W IBI
"RTN","IBOTRR",75,0)
 Q
"RTN","IBOTRR",76,0)
 ;
"RTN","IBOTRR",77,0)
PAUSE ;pause at end of screen if beeing displayed on a terminal
"RTN","IBOTRR",78,0)
 Q:$E(IOST,1,2)'["C-"  N DIR,DUOUT,DTOUT,DIRUT W !
"RTN","IBOTRR",79,0)
 S DIR(0)="E" D ^DIR K DIR
"RTN","IBOTRR",80,0)
 I $D(DUOUT)!($D(DIRUT)) S IBQUIT=1
"RTN","IBOTRR",81,0)
 Q
"RTN","IBOTRR",82,0)
 ;
"RTN","IBOTRR",83,0)
STOP() ;determine if user has requested the queued report to stop
"RTN","IBOTRR",84,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !,"***TASK STOPPED BY USER***"
"RTN","IBOTRR",85,0)
 Q +$G(ZTSTOP)
"RTN","IBTOBI")
0^12^B26303932^B26516930
"RTN","IBTOBI",1,0)
IBTOBI ;ALB/AAS - CLAIMS TRACKING BILLING INFORMATION PRINT ;27-OCT-93
"RTN","IBTOBI",2,0)
 ;;2.0;INTEGRATED BILLING;**91,160,199,309,276,458**;21-MAR-94;Build 4
"RTN","IBTOBI",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTOBI",4,0)
 ;
"RTN","IBTOBI",5,0)
% I '$D(DT) D DT^DICRW
"RTN","IBTOBI",6,0)
 W !!,"Bill Preparation Report for a Single Visit"
"RTN","IBTOBI",7,0)
 D END
"RTN","IBTOBI",8,0)
 ;
"RTN","IBTOBI",9,0)
PAT ; -- Select patient
"RTN","IBTOBI",10,0)
 W !!
"RTN","IBTOBI",11,0)
 S DIC="^DPT(",DIC(0)="AEQM"
"RTN","IBTOBI",12,0)
 N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBTOBI",13,0)
 D ^DIC K DIC I +Y<1 G END
"RTN","IBTOBI",14,0)
 S DFN=+Y
"RTN","IBTOBI",15,0)
 ;
"RTN","IBTOBI",16,0)
VSIT ;
"RTN","IBTOBI",17,0)
 ; -- get claims tracking visit entry
"RTN","IBTOBI",18,0)
 D TRAC^IBTRV K IBY
"RTN","IBTOBI",19,0)
 I '$G(IBTRN) G END
"RTN","IBTOBI",20,0)
 ;
"RTN","IBTOBI",21,0)
DEV ; -- select device, run option
"RTN","IBTOBI",22,0)
 W !
"RTN","IBTOBI",23,0)
 S %ZIS="QM" D ^%ZIS G:POP END
"RTN","IBTOBI",24,0)
 I $D(IO("Q")) S ZTRTN="DQ^IBTOBI",ZTSAVE("IB*")="",ZTSAVE("DFN")="",ZTDESC="IB - Bill Preparation Report" D ^%ZTLOAD K IO("Q"),ZTSK D HOME^%ZIS G PAT
"RTN","IBTOBI",25,0)
 ;
"RTN","IBTOBI",26,0)
 U IO
"RTN","IBTOBI",27,0)
 D ONE,END G PAT
"RTN","IBTOBI",28,0)
 Q
"RTN","IBTOBI",29,0)
DQ ; -- task man entry point
"RTN","IBTOBI",30,0)
 D ONE
"RTN","IBTOBI",31,0)
 ;
"RTN","IBTOBI",32,0)
END ; -- Clean up
"RTN","IBTOBI",33,0)
 W !
"RTN","IBTOBI",34,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBTOBI",35,0)
 D ^%ZISC
"RTN","IBTOBI",36,0)
 K I,J,X,Y,DFN,%ZIS,VA,IBTRN,IBTRND,IBTRND1,IBPAG,IBHDT,IBDISDT,IBETYP,IBQUIT,IBTAG,DIRUT,DUOUT,IBCNT,IBI,IBJ,IBNAR,IBTNOD,IBTRCD1,IBTRTP,IBDA
"RTN","IBTOBI",37,0)
 D KVAR^VADPT
"RTN","IBTOBI",38,0)
 Q
"RTN","IBTOBI",39,0)
ONE ; -- print one billing report from ct
"RTN","IBTOBI",40,0)
 S IBPAG=0,IBHDT=$$HTE^XLFDT($H,1),IBQUIT=0
"RTN","IBTOBI",41,0)
 D PID^VADPT
"RTN","IBTOBI",42,0)
 S IBTRND=$G(^IBT(356,+IBTRN,0)),IBTRND1=$G(^(1))
"RTN","IBTOBI",43,0)
 S IBETYP=$G(^IBE(356.6,+$P(IBTRND,"^",18),0))
"RTN","IBTOBI",44,0)
 D HDR,SECT1,^IBTOBI1
"RTN","IBTOBI",45,0)
 Q
"RTN","IBTOBI",46,0)
 ;
"RTN","IBTOBI",47,0)
HDR ; -- Print header for billing report
"RTN","IBTOBI",48,0)
 Q:IBQUIT
"RTN","IBTOBI",49,0)
 I '$D(VA("PID")) N I,J D PID^VADPT
"RTN","IBTOBI",50,0)
 I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
"RTN","IBTOBI",51,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
"RTN","IBTOBI",52,0)
 S IBPAG=IBPAG+1
"RTN","IBTOBI",53,0)
 W !,$S($D(IBCTHDR):IBCTHDR,1:"Bill Preparation Report"),?(IOM-33),"Page ",IBPAG,"  ",IBHDT
"RTN","IBTOBI",54,0)
 W !!,$E($P($G(^DPT(DFN,0)),"^"),1,25),?28,VA("PID"),?50,"DOB: ",$$FMTE^XLFDT($P($G(^DPT(DFN,0)),"^",3),1)
"RTN","IBTOBI",55,0)
 W !,$$EXPAND^IBTRE(356,.18,$P(IBTRND,"^",18))," on ",$$FMTE^XLFDT($P(IBTRND,"^",6),1)
"RTN","IBTOBI",56,0)
 W !,$TR($J(" ",IOM)," ","-")
"RTN","IBTOBI",57,0)
 Q
"RTN","IBTOBI",58,0)
 ;
"RTN","IBTOBI",59,0)
SECT1 ; -- Section 1 - Visit info Region / misc billing info
"RTN","IBTOBI",60,0)
 N IBD
"RTN","IBTOBI",61,0)
 W !," Visit Information "
"RTN","IBTOBI",62,0)
 S IBD(1,1)="    Visit Type: "_$P(IBETYP,"^")
"RTN","IBTOBI",63,0)
 S X=$P(IBETYP,"^",3) I 'X W !,"No Visit Selected" Q
"RTN","IBTOBI",64,0)
 D @X
"RTN","IBTOBI",65,0)
 D MBI
"RTN","IBTOBI",66,0)
 S I=0 F  S I=$O(IBD(I)) Q:'I  W !,$G(IBD(I,1)),?44,$E($G(IBD(I,2)),1,36)
"RTN","IBTOBI",67,0)
 W !?4,$TR($J(" ",IOM-8)," ","-"),!
"RTN","IBTOBI",68,0)
 Q
"RTN","IBTOBI",69,0)
1 ; -- visit region for admission or scheduled admission
"RTN","IBTOBI",70,0)
 S IBDISDT=""
"RTN","IBTOBI",71,0)
 I $P($G(^DGPM(+$P(IBTRND,"^",5),0)),"^",17) S VAINDT=+$G(^DGPM(+$P(IBTRND,"^",5),0)),IBDISDT=+$G(^DGPM(+$P($G(^DGPM(+$P(IBTRND,"^",5),0)),"^",17),0))
"RTN","IBTOBI",72,0)
 I '$D(VAIN) S VA200="" D INP^VADPT
"RTN","IBTOBI",73,0)
 I VAIN(7)="" S Y=$P(IBTRND,"^",6) D D^DIQ S $P(VAIN(7),"^",2)=Y
"RTN","IBTOBI",74,0)
 S IBD(2,1)="Admission Date: "_$P(VAIN(7),"^",2)
"RTN","IBTOBI",75,0)
 S IBD(3,1)="          Ward: "_$P(VAIN(4),"^",2)
"RTN","IBTOBI",76,0)
 S IBD(4,1)="     Specialty: "_$P(VAIN(3),"^",2)
"RTN","IBTOBI",77,0)
 S IBD(5,1)="Discharge Date: "_$$FMTE^XLFDT(IBDISDT,1)
"RTN","IBTOBI",78,0)
 Q
"RTN","IBTOBI",79,0)
2 ; -- visit region for  outpatient care
"RTN","IBTOBI",80,0)
 N IBOE,IBOE0
"RTN","IBTOBI",81,0)
 S IBOE=$P(IBTRND,"^",4),IBOE0=$$SCE^IBSDU(+IBOE)
"RTN","IBTOBI",82,0)
 S IBD(2,1)="    Visit Date: "_$$DAT1^IBOUTL($P(IBTRND,"^",6),"2P")
"RTN","IBTOBI",83,0)
 I +IBOE<1 S IBD(3,1)="  No Outpatient Encounter Found" Q
"RTN","IBTOBI",84,0)
 S IBD(3,1)="        Clinic: "_$P($G(^SC(+$P(IBOE0,U,4),0)),"^")
"RTN","IBTOBI",85,0)
 S IBD(4,1)="  Appt. Status: "_$$EXPAND^IBTRE(409.68,.12,$P(IBOE0,U,12))
"RTN","IBTOBI",86,0)
 S IBD(5,1)="    Appt. Type: "_$$EXPAND^IBTRE(409.68,.1,$P(IBOE0,U,10))
"RTN","IBTOBI",87,0)
 S IBD(6,1)="  Special Cond: "_$$ENCL^IBTRED(IBOE)
"RTN","IBTOBI",88,0)
 Q
"RTN","IBTOBI",89,0)
 ;
"RTN","IBTOBI",90,0)
3 ; -- visit region for rx refill
"RTN","IBTOBI",91,0)
 N PSONTALK,PSOTMP,PSORXN,PSOFILL
"RTN","IBTOBI",92,0)
 S PSONTALK=1 ;PSORXN=+$P(IBTRND,"^",8),PSOFILL=+$P(IBTRND,"^",10)
"RTN","IBTOBI",93,0)
 S X=+$P(IBTRND,"^",8)_"^"_+$P(IBTRND,"^",10) D EN^PSOCPVW
"RTN","IBTOBI",94,0)
 ;if refill was deleted and EN^PSOCPVW doesn't return any data use IB API
"RTN","IBTOBI",95,0)
 I '$D(PSOTMP) D PSOCPVW^IBNCPDPC(+$P(IBTRND,"^",2),+$P(IBTRND,"^",8),.PSOTMP)
"RTN","IBTOBI",96,0)
 S IBD(2,1)="Prescription #: "_$G(PSOTMP(52,+$P(IBTRND,"^",8),.01,"E"))
"RTN","IBTOBI",97,0)
 I $P(IBTRND,"^",10)=0 S IBD(3,1)="     Fill Date: "_$$FMTE^XLFDT(+$P(IBTRND,"^",6))
"RTN","IBTOBI",98,0)
 I +$P(IBTRND,"^",10) S IBD(3,1)="   Refill Date: "_$$FMTE^XLFDT(+$P(IBTRND,"^",6))
"RTN","IBTOBI",99,0)
 S IBD(4,1)="          Drug: "_$G(PSOTMP(52,+$P(IBTRND,"^",8),6,"E"))
"RTN","IBTOBI",100,0)
 S IBD(5,1)="      Quantity: "_$J($G(PSOTMP(52,+$P(IBTRND,"^",8),7,"E")),8)
"RTN","IBTOBI",101,0)
 S IBD(6,1)="   Days Supply: "_$J($G(PSOTMP(52,+$P(IBTRND,"^",8),8,"E")),8)
"RTN","IBTOBI",102,0)
 S IBD(7,1)="          NDC#: "_$$GETNDC^PSONDCUT(+$P(IBTRND,"^",8),$P(IBTRND,"^",10))
"RTN","IBTOBI",103,0)
 S IBD(8,1)="     Physician: "_$G(PSOTMP(52,+$P(IBTRND,"^",8),4,"E"))
"RTN","IBTOBI",104,0)
 Q
"RTN","IBTOBI",105,0)
 ;
"RTN","IBTOBI",106,0)
4 ; -- Visit region for prosthetics
"RTN","IBTOBI",107,0)
 D 4^IBTOBI4
"RTN","IBTOBI",108,0)
 Q
"RTN","IBTOBI",109,0)
 ;
"RTN","IBTOBI",110,0)
MBI ; -- Misc. billing info
"RTN","IBTOBI",111,0)
 S IBD(1,2)=" Visit Billable: "_$S('$P(IBTRND,"^",19):"YES",1:"NO-"_$$EXPAND^IBTRE(356,.19,$P(IBTRND,"^",19)))
"RTN","IBTOBI",112,0)
 S IBD(2,2)=" Second Opinion: "_$S('$P(IBTRND,"^",14):"NOT REQUIRED",1:$S('$P(IBTRND,"^",15):"REQUIRED-NOT OBTAINED",1:"OBTAINED"))
"RTN","IBTOBI",113,0)
 S IBD(3,2)=" Auto Bill Date: "_$$FMTE^XLFDT($P(IBTRND,"^",17),1)
"RTN","IBTOBI",114,0)
 S IBD(4,2)="Special Consent: ROI "_$S('$P(IBTRND,"^",31):"NOT DETERMINED",1:$$ROIEVT^IBTRR1(IBTRN))
"RTN","IBTOBI",115,0)
 S IBD(5,2)="Special Billing: "_$$EXPAND^IBTRE(356,.12,$P(IBTRND,"^",12))
"RTN","IBTOBI",116,0)
 Q
"RTN","IBTOBI",117,0)
 ;
"RTN","IBTOBI2")
0^13^B20308448^B19691453
"RTN","IBTOBI2",1,0)
IBTOBI2 ;ALB/AAS - CLAIMS TRACKING BILLING INFORMATION PRINT ;27-OCT-93
"RTN","IBTOBI2",2,0)
 ;;2.0;INTEGRATED BILLING;**210,458**;21-MAR-94;Build 4
"RTN","IBTOBI2",3,0)
 ;
"RTN","IBTOBI2",4,0)
IR ; -- print insurance review information
"RTN","IBTOBI2",5,0)
 Q:'$O(^IBT(356.2,"C",+IBTRN,0))  ; -no reivews
"RTN","IBTOBI2",6,0)
 I ($Y+11)>IOSL D HDR^IBTOBI Q:IBQUIT
"RTN","IBTOBI2",7,0)
 W !,"  Insurance Review Information "
"RTN","IBTOBI2",8,0)
 N I,J,IBII,IBTRC,IBTRCD,IBACTION,TCODE
"RTN","IBTOBI2",9,0)
 S IBII="" F  S IBII=$O(^IBT(356.2,"ATIDT",IBTRN,IBII)) Q:'IBII!(IBQUIT)  S IBTRC=0 F  S IBTRC=$O(^IBT(356.2,"ATIDT",IBTRN,IBII,IBTRC)) Q:'IBTRC!(IBQUIT)  D
"RTN","IBTOBI2",10,0)
 .N IBJ,IBD
"RTN","IBTOBI2",11,0)
 .D IR1
"RTN","IBTOBI2",12,0)
 .D IR2
"RTN","IBTOBI2",13,0)
 .S IBJ=0 F  S IBJ=$O(IBD(IBJ)) Q:'IBJ  W !,$E($G(IBD(IBJ,1)),1,39),?40,$E($G(IBD(IBJ,2)),1,39)
"RTN","IBTOBI2",14,0)
 .D COMM2(IBTRC) Q:IBQUIT
"RTN","IBTOBI2",15,0)
 .W !?30,"-----------------------------------"
"RTN","IBTOBI2",16,0)
 .I ($Y+11)>IOSL D HDR^IBTOBI Q:IBQUIT
"RTN","IBTOBI2",17,0)
 W:'IBQUIT !?4,$TR($J(" ",IOM-8)," ","-"),!
"RTN","IBTOBI2",18,0)
 Q
"RTN","IBTOBI2",19,0)
 ;
"RTN","IBTOBI2",20,0)
IR1 ; -- print one review
"RTN","IBTOBI2",21,0)
 S IBTRCD=$G(^IBT(356.2,+IBTRC,0)),IBTRCD1=$G(^(1))
"RTN","IBTOBI2",22,0)
 S IBD(1,1)="    Type Review: "_$$EXPAND^IBTRE(356.2,.04,$P(IBTRCD,"^",4))
"RTN","IBTOBI2",23,0)
 S TCODE=$$TCODE^IBTRC(IBTRC) I TCODE D @TCODE
"RTN","IBTOBI2",24,0)
 Q
"RTN","IBTOBI2",25,0)
10 ; -- pre-cert contact
"RTN","IBTOBI2",26,0)
15 ; -- admission review
"RTN","IBTOBI2",27,0)
20 ; -- urgent/emergent ins. contact
"RTN","IBTOBI2",28,0)
25 ; -- snf/nhcu review
"RTN","IBTOBI2",29,0)
30 ; -- continued stay contact
"RTN","IBTOBI2",30,0)
35 ; -- inpt retrospective review
"RTN","IBTOBI2",31,0)
 S IBD(2,1)="         Action: "_$$EXPAND^IBTRE(356.2,.11,$P(IBTRCD,"^",11))
"RTN","IBTOBI2",32,0)
 S IBACTION=$P($G(^IBE(356.7,+$P(IBTRCD,"^",11),0)),"^",3)
"RTN","IBTOBI2",33,0)
 S IBACTION=IBACTION+100 D @IBACTION
"RTN","IBTOBI2",34,0)
 Q
"RTN","IBTOBI2",35,0)
 ;
"RTN","IBTOBI2",36,0)
40 ; -- Discharge contact
"RTN","IBTOBI2",37,0)
100 ; -- No type of action
"RTN","IBTOBI2",38,0)
 Q
"RTN","IBTOBI2",39,0)
50 ; -- outpatient treatment
"RTN","IBTOBI2",40,0)
55 ; -- opt retrospective review
"RTN","IBTOBI2",41,0)
 S IBD(2,1)="  Opt Treatment: "_$$EXPAND^IBTRE(356.2,.26,$P(IBTRCD,"^",26))
"RTN","IBTOBI2",42,0)
 S IBD(3,1)="         Action: "_$$EXPAND^IBTRE(356.2,.11,$P(IBTRCD,"^",11))
"RTN","IBTOBI2",43,0)
 S IBD(4,1)="   Auth. Number: "_$$AUTHN^IBTRC(IBTRC,20)
"RTN","IBTOBI2",44,0)
 Q
"RTN","IBTOBI2",45,0)
60 ; -- Appeal
"RTN","IBTOBI2",46,0)
65 ; -- Nth appeal
"RTN","IBTOBI2",47,0)
 S IBD(2,1)="    Appeal Type: "_$$EXPAND^IBTRE(356.2,.23,$P(IBTRCD,"^",23))
"RTN","IBTOBI2",48,0)
 S IBD(3,1)="    Case Status: "_$$EXPAND^IBTRE(356.2,.1,$P(IBTRCD,"^",10))
"RTN","IBTOBI2",49,0)
 S IBD(4,1)="No Days Pending: "_$$EXPAND^IBTRE(356.2,.25,$P(IBTRCD,"^",25))
"RTN","IBTOBI2",50,0)
 S IBD(5,1)="  Final Outcome: "_$$EXPAND^IBTRE(356.2,.29,$P(IBTRCD,"^",29))
"RTN","IBTOBI2",51,0)
 Q
"RTN","IBTOBI2",52,0)
70 ; -- Patient
"RTN","IBTOBI2",53,0)
80 ; -- Other
"RTN","IBTOBI2",54,0)
85 ; -- Insurance verification
"RTN","IBTOBI2",55,0)
90 ;
"RTN","IBTOBI2",56,0)
 Q
"RTN","IBTOBI2",57,0)
 ;
"RTN","IBTOBI2",58,0)
110 ; -- approval actions
"RTN","IBTOBI2",59,0)
 S IBD(3,1)="Authorized From: "_$S($P(IBTRCD1,"^",8):"ENTIRE VISIT",1:$$DAT1^IBOUTL($P(IBTRCD,"^",12)))
"RTN","IBTOBI2",60,0)
 S IBD(4,1)="  Authorized To: "_$S($P(IBTRCD1,"^",8):"ENTIRE VISIT",1:$$DAT1^IBOUTL($P(IBTRCD,"^",13)))
"RTN","IBTOBI2",61,0)
 S IBD(5,1)="Authorized Diag: "_$$DIAG^IBTRE6($P(IBTRCD,"^",14),1,$$TRNDATE^IBACSV($G(IBTRN)))
"RTN","IBTOBI2",62,0)
 S IBD(6,1)="   Auth. Number: "_$$AUTHN^IBTRC(IBTRC,20)
"RTN","IBTOBI2",63,0)
 Q
"RTN","IBTOBI2",64,0)
120 ; -- denial actions
"RTN","IBTOBI2",65,0)
 S IBD(3,1)="    Denied From: "_$S($P(IBTRCD1,"^",7):"ENTIRE VISIT",1:$$DAT1^IBOUTL($P(IBTRCD,"^",15)))
"RTN","IBTOBI2",66,0)
 S IBD(4,1)="      Denied To: "_$S($P(IBTRCD1,"^",7):"ENTIRE VISIT",1:$$DAT1^IBOUTL($P(IBTRCD,"^",16)))
"RTN","IBTOBI2",67,0)
 S IBI=0,IBD=4 F  S IBI=$O(^IBT(356.2,IBTRC,12,IBI)) Q:'IBI  D
"RTN","IBTOBI2",68,0)
 .S IBD=IBD+1
"RTN","IBTOBI2",69,0)
 .S IBD(IBD,1)=" Denial Reasons: "_$$EXPAND^IBTRE(356.212,.01,+$G(^IBT(356.2,IBTRC,12,IBI,0)))
"RTN","IBTOBI2",70,0)
 Q
"RTN","IBTOBI2",71,0)
130 ; -- penalty
"RTN","IBTOBI2",72,0)
 S IBI=0,IBD=2 F  S IBI=$O(^IBT(356.2,IBTRC,13,IBI)) Q:'IBI  D
"RTN","IBTOBI2",73,0)
 .S IBD=IBD+1
"RTN","IBTOBI2",74,0)
 .S IBD(IBD,1)="        Penalty: "_$$EXPAND^IBTRE(356.213,.01,+$G(^IBT(356.2,IBTRC,13,IBI,0)))
"RTN","IBTOBI2",75,0)
 Q
"RTN","IBTOBI2",76,0)
140 ; -- case pending
"RTN","IBTOBI2",77,0)
 S IBD(3,1)="   Case Pending: "_$$EXPAND^IBTRE(356.2,.2,$P(IBTRCD,"^",20))
"RTN","IBTOBI2",78,0)
 Q
"RTN","IBTOBI2",79,0)
150 ; -- no coverage
"RTN","IBTOBI2",80,0)
 S IBD(3,1)="    No Coverage: "_$$EXPAND^IBTRE(356.2,.21,$P(IBTRCD,"^",21))
"RTN","IBTOBI2",81,0)
 Q
"RTN","IBTOBI2",82,0)
 ;
"RTN","IBTOBI2",83,0)
IR2 ; -- contact information
"RTN","IBTOBI2",84,0)
 ;N IBCDFN,IBCPOL
"RTN","IBTOBI2",85,0)
 ;S IBCDFN=$P(IBTRCD1,"^",5),IBCPOL=$P(^DPT(DFN,.312,IBCDFN,0),"^",18)
"RTN","IBTOBI2",86,0)
 S IBD(1,2)="     Review Date: "_$E($$DAT1^IBOUTL(+IBTRCD,"2P"),1,20)
"RTN","IBTOBI2",87,0)
 S IBD(2,2)="   Insurance Co.: "_$E($P($G(^DIC(36,+$G(^DPT(DFN,.312,+$P(IBTRCD1,"^",5),0)),0)),"^"),1,20)
"RTN","IBTOBI2",88,0)
 S IBD(3,2)="Person Contacted: "_$E($P(IBTRCD,"^",6),1,20)
"RTN","IBTOBI2",89,0)
 S IBD(4,2)="  Contact Method: "_$E($$EXPAND^IBTRE(356.2,.17,$P(IBTRCD,"^",17)),1,20)
"RTN","IBTOBI2",90,0)
 S IBD(5,2)="Call Ref. Number: "_$$CREFN^IBTRC(IBTRC,20)
"RTN","IBTOBI2",91,0)
 S IBD(6,2)="          Status: "_$E($$EXPAND^IBTRE(356.2,.19,$P(IBTRCD,"^",19)),1,20)
"RTN","IBTOBI2",92,0)
 S IBD(7,2)="  Last Edited By: "_$E($$EXPAND^IBTRE(356.2,1.04,$P($G(^IBT(356.2,+$G(IBTRC),1)),"^",4)),1,20)
"RTN","IBTOBI2",93,0)
 I '$P(IBTRCD,"^",2) S IBD(2,2)="Patient Contacted: "_$E($P($G(^DPT(+$P(IBTRCD,"^",5),0)),"^"),1,20)
"RTN","IBTOBI2",94,0)
 Q
"RTN","IBTOBI2",95,0)
 ;
"RTN","IBTOBI2",96,0)
COMM2(DA) ; -- print comments from ins. reviews.
"RTN","IBTOBI2",97,0)
 W !,"Comment: "
"RTN","IBTOBI2",98,0)
 Q:'$D(^IBT(356.2,DA,11))
"RTN","IBTOBI2",99,0)
 K ^UTILITY($J,"W")
"RTN","IBTOBI2",100,0)
 S DIWL=10,DIWR=IOM-12,DIWF="W"
"RTN","IBTOBI2",101,0)
 S IBJ=0 F  S IBJ=$O(^IBT(356.2,DA,11,IBJ)) Q:'IBJ  S X=^(IBJ,0) D ^DIWP I IOSL<($Y+4) Q:IBQUIT  D HDR^IBTOBI
"RTN","IBTOBI2",102,0)
 Q:IBQUIT
"RTN","IBTOBI2",103,0)
 D ^DIWW
"RTN","IBTOBI2",104,0)
 K ^UTILITY($J,"W")
"RTN","IBTOBI2",105,0)
 Q
"RTN","IBTOBI3")
0^14^B15563291^B15138454
"RTN","IBTOBI3",1,0)
IBTOBI3 ;ALB/AAS - CLAIMS TRACKING BILLING INFORMATION PRINT ; 27-OCT-93
"RTN","IBTOBI3",2,0)
 ;;2.0;INTEGRATED BILLING;**40,56,458**;21-MAR-94;Build 4
"RTN","IBTOBI3",3,0)
 ;
"RTN","IBTOBI3",4,0)
HR ; -- print hospital review information
"RTN","IBTOBI3",5,0)
 Q:'$O(^IBT(356.1,"C",+IBTRN,0))  ; -no reivews
"RTN","IBTOBI3",6,0)
 I ($Y+11)>IOSL D HDR^IBTOBI Q:IBQUIT
"RTN","IBTOBI3",7,0)
 W !,"  Hospital Review Information "
"RTN","IBTOBI3",8,0)
 N I,J,IBII,IBTRV,IBTRVD
"RTN","IBTOBI3",9,0)
 S IBII="" F  S IBII=$O(^IBT(356.1,"ATIDT",IBTRN,IBII)) Q:'IBII!(IBQUIT)  S IBTRV=0 F  S IBTRV=$O(^IBT(356.1,"ATIDT",IBTRN,IBII,IBTRV)) Q:'IBTRV!(IBQUIT)  D
"RTN","IBTOBI3",10,0)
 .N IBD
"RTN","IBTOBI3",11,0)
 .D HR1
"RTN","IBTOBI3",12,0)
 .D HR2
"RTN","IBTOBI3",13,0)
 .; Patch #40
"RTN","IBTOBI3",14,0)
 .D UNIT
"RTN","IBTOBI3",15,0)
 .S IBJ=0 F  S IBJ=$O(IBD(IBJ)) Q:'IBJ  W !,$E($G(IBD(IBJ,1)),1,40),?40,$E($G(IBD(IBJ,2)),1,39)
"RTN","IBTOBI3",16,0)
 .D COMM1(IBTRV) Q:IBQUIT
"RTN","IBTOBI3",17,0)
 .W !?30,"-----------------------------------"
"RTN","IBTOBI3",18,0)
 .I ($Y+11)>IOSL D HDR^IBTOBI Q:IBQUIT
"RTN","IBTOBI3",19,0)
 W:'IBQUIT !?4,$TR($J(" ",IOM-8)," ","-"),!
"RTN","IBTOBI3",20,0)
 Q
"RTN","IBTOBI3",21,0)
 ;
"RTN","IBTOBI3",22,0)
HR1 ; -- print one review
"RTN","IBTOBI3",23,0)
 S IBTRVD=$G(^IBT(356.1,+IBTRV,0))
"RTN","IBTOBI3",24,0)
 S IBTRTP=$P($G(^IBE(356.11,+$P($G(^IBT(356.1,IBTRV,0)),"^",22),0)),"^",2)
"RTN","IBTOBI3",25,0)
 D @IBTRTP
"RTN","IBTOBI3",26,0)
 Q
"RTN","IBTOBI3",27,0)
10 ; -- precert review
"RTN","IBTOBI3",28,0)
15 ; -- admission review
"RTN","IBTOBI3",29,0)
20 ; -- urgent adm. review
"RTN","IBTOBI3",30,0)
25 ; -- snf/nhcu review
"RTN","IBTOBI3",31,0)
35 ; -- inpt retrospective review
"RTN","IBTOBI3",32,0)
 S IBD(1,2)=" Severity of Ill: "_$$SI^IBTRVD0($P(IBTRVD,"^",4))
"RTN","IBTOBI3",33,0)
 S IBD(2,2)="Intensity of Svc: "_$$SI^IBTRVD0($P(IBTRVD,"^",5))
"RTN","IBTOBI3",34,0)
 S IBD(3,2)="    Criteria Met: "_$$EXPAND^IBTRE(356.1,.06,$P(IBTRVD,"^",6))
"RTN","IBTOBI3",35,0)
 S IBD(4,2)=" Prov. Intervwed: "_$$EXPAND^IBTRE(356.1,.1,$P(IBTRVD,"^",10))
"RTN","IBTOBI3",36,0)
 S IBD(5,2)=" Dec. Influenced: "_$$EXPAND^IBTRE(356.1,.11,$P(IBTRVD,"^",11))
"RTN","IBTOBI3",37,0)
 S IBD=5
"RTN","IBTOBI3",38,0)
 S IBNAR=0 F  S IBNAR=+$O(^IBT(356.1,+IBTRV,12,IBNAR)) Q:'IBNAR  D
"RTN","IBTOBI3",39,0)
 .S IBNARD=$G(^IBT(356.1,+IBTRV,12,IBNAR,0))
"RTN","IBTOBI3",40,0)
 .S IBD=IBD+1
"RTN","IBTOBI3",41,0)
 .S IBD(IBD,2)="Non-Acute Reason: "_$P($G(^IBE(356.4,+IBNARD,0)),"^",2)_" - "_$P(^(0),"^")
"RTN","IBTOBI3",42,0)
 Q
"RTN","IBTOBI3",43,0)
30 ; -- concurrent review
"RTN","IBTOBI3",44,0)
 S IBD(1,2)="   Day of Review: "_$J($P(IBTRVD,"^",3),2)
"RTN","IBTOBI3",45,0)
 S IBD(2,2)=" Severity of Ill: "_$$SI^IBTRVD0($P(IBTRVD,"^",4))
"RTN","IBTOBI3",46,0)
 S IBD(3,2)="Intensity of Svc: "_$$SI^IBTRVD0($P(IBTRVD,"^",5))
"RTN","IBTOBI3",47,0)
 S IBD(4,2)="Dschg Screen Met: "_$$EXPAND^IBTRE(356.1,.12,$P(IBTRVD,"^",12))
"RTN","IBTOBI3",48,0)
 S IBD(5,2)="Acute Care Dschg: "_$$EXPAND^IBTRE(356.1,1.17,$P($G(^IBT(356.1,+IBTRV,1)),"^",17))
"RTN","IBTOBI3",49,0)
 S IBD=5
"RTN","IBTOBI3",50,0)
 S IBNAR=0 F  S IBNAR=+$O(^IBT(356.1,+IBTRV,13,IBNAR)) Q:'IBNAR  D
"RTN","IBTOBI3",51,0)
 .S IBNARD=$G(^IBT(356.1,+IBTRV,13,IBNAR,0))
"RTN","IBTOBI3",52,0)
 .S IBD=IBD+1
"RTN","IBTOBI3",53,0)
 .S IBD(IBD,2)="Non-Acute Reason: "_$P($G(^IBE(356.4,+IBNARD,0)),"^",2)_" - "_$P(^(0),"^")
"RTN","IBTOBI3",54,0)
 Q
"RTN","IBTOBI3",55,0)
40 ; -- discharge review
"RTN","IBTOBI3",56,0)
 S IBD(1,2)="Discharge Screen: "_$$SI^IBTRVD0($P(IBTRVD,"^",12))
"RTN","IBTOBI3",57,0)
 S IBD=1
"RTN","IBTOBI3",58,0)
 Q
"RTN","IBTOBI3",59,0)
 ;
"RTN","IBTOBI3",60,0)
50 ;
"RTN","IBTOBI3",61,0)
55 ;
"RTN","IBTOBI3",62,0)
60 ;
"RTN","IBTOBI3",63,0)
65 ;
"RTN","IBTOBI3",64,0)
70 ;
"RTN","IBTOBI3",65,0)
80 ;
"RTN","IBTOBI3",66,0)
85 ;
"RTN","IBTOBI3",67,0)
90 ;
"RTN","IBTOBI3",68,0)
 S IBD=0
"RTN","IBTOBI3",69,0)
 Q
"RTN","IBTOBI3",70,0)
 ;
"RTN","IBTOBI3",71,0)
UNIT ; -- Special unit information
"RTN","IBTOBI3",72,0)
 I '$D(IBD) S IBD=0
"RTN","IBTOBI3",73,0)
 I IBTRTP=40 S IBD(IBD+1,2)="  D/C Screen Met: "_$$SI^IBTRVD0($P(IBTRVD,"^",13)) Q
"RTN","IBTOBI3",74,0)
 ; Patch #40
"RTN","IBTOBI3",75,0)
 S IBD(IBD+1,2)=" Special Unit SI: "_$$SI^IBTRVD0($P(IBTRVD,"^",8))
"RTN","IBTOBI3",76,0)
 S IBD(IBD+2,2)=" Special Unit IS: "_$$SI^IBTRVD0($P(IBTRVD,"^",9))
"RTN","IBTOBI3",77,0)
 Q
"RTN","IBTOBI3",78,0)
 ;
"RTN","IBTOBI3",79,0)
HR2 ; -- contact information
"RTN","IBTOBI3",80,0)
 S IBD(1,1)="     Review Date: "_$$DAT1^IBOUTL(+IBTRVD,"2P")
"RTN","IBTOBI3",81,0)
 S IBD(2,1)="     Review Type: "_$P($G(^IBE(356.11,+$P(IBTRVD,"^",22),0)),"^",1)
"RTN","IBTOBI3",82,0)
 S IBD(3,1)="       Specialty: "_$P($G(^DIC(45.7,+$P(IBTRVD,"^",7),0)),"^")
"RTN","IBTOBI3",83,0)
 S IBD(4,1)="     Methodology: "_$$EXPAND^IBTRE(356.1,.23,$P(IBTRVD,"^",23))
"RTN","IBTOBI3",84,0)
 S IBD(5,1)="          Status: "_$$EXPAND^IBTRE(356.1,.21,$P(IBTRVD,"^",21))
"RTN","IBTOBI3",85,0)
 S IBD(6,1)="  Last Edited By: "_$E($$EXPAND^IBTRE(356.1,1.04,$P($G(^IBT(356.1,+$G(IBTRV),1)),"^",4)),1,20)
"RTN","IBTOBI3",86,0)
 S IBD(7,1)="Next Review Date: "_$$DAT1^IBOUTL($P(IBTRVD,"^",20))
"RTN","IBTOBI3",87,0)
 Q
"RTN","IBTOBI3",88,0)
 ;
"RTN","IBTOBI3",89,0)
COMM1(DA) ; -- print comments from ins. reviews.
"RTN","IBTOBI3",90,0)
 W !,"Comment: "
"RTN","IBTOBI3",91,0)
 K ^UTILITY($J,"W")
"RTN","IBTOBI3",92,0)
 S DIWL=10,DIWR=IOM-12,DIWF="W"
"RTN","IBTOBI3",93,0)
 S IBJ=0 F  S IBJ=$O(^IBT(356.1,DA,11,IBJ)) Q:'IBJ  S X=^(IBJ,0) D ^DIWP  I IOSL<($Y+4) Q:IBQUIT  D HDR^IBTOBI
"RTN","IBTOBI3",94,0)
 Q:IBQUIT
"RTN","IBTOBI3",95,0)
 D ^DIWW
"RTN","IBTOBI3",96,0)
 Q
"RTN","IBTODD")
0^15^B34396486^B21565676
"RTN","IBTODD",1,0)
IBTODD ;ALB/AAS - CLAIMS TRACKING DENIED DAYS REPORT ; 27-OCT-93
"RTN","IBTODD",2,0)
 ;;2.0;INTEGRATED BILLING;**32,458**;21-MAR-94;Build 4
"RTN","IBTODD",3,0)
 ;
"RTN","IBTODD",4,0)
% I '$D(DT) D DT^DICRW
"RTN","IBTODD",5,0)
 W !!,"Denied Days Report",!!
"RTN","IBTODD",6,0)
 ;
"RTN","IBTODD",7,0)
 S IBSORT="P",IBSELECT="1,2,3,4,"
"RTN","IBTODD",8,0)
 N DIR
"RTN","IBTODD",9,0)
 S DIR("?")="Answer YES if you only want to print a summary or answer NO if you want a detailed listing plus the summary."
"RTN","IBTODD",10,0)
 S DIR(0)="Y",DIR("A")="Print Summary Only",DIR("B")="YES" D ^DIR K DIR
"RTN","IBTODD",11,0)
 I $D(DIRUT) G END
"RTN","IBTODD",12,0)
 S IBSUM=Y
"RTN","IBTODD",13,0)
 G:IBSUM DATE
"RTN","IBTODD",14,0)
 ;
"RTN","IBTODD",15,0)
 ; -- ask what types of care to include
"RTN","IBTODD",16,0)
 D TYPE^IBTODD2 I IBSELECT<1 G END
"RTN","IBTODD",17,0)
 ;
"RTN","IBTODD",18,0)
 ; -- ask how they want inpatient sorted
"RTN","IBTODD",19,0)
 I IBSELECT[1 D SORT^IBTODD2 I IBSORT<0 G END
"RTN","IBTODD",20,0)
 ;
"RTN","IBTODD",21,0)
DATE ; -- select date range
"RTN","IBTODD",22,0)
 W ! D DATE^IBOUTL
"RTN","IBTODD",23,0)
 I IBBDT=""!(IBEDT="") G END
"RTN","IBTODD",24,0)
 ;
"RTN","IBTODD",25,0)
DEV ; -- select device, run option
"RTN","IBTODD",26,0)
 W !
"RTN","IBTODD",27,0)
 I 'IBSUM W !!,"You will need a 132 column printer for this report!",!
"RTN","IBTODD",28,0)
 S %ZIS="QM" D ^%ZIS G:POP END
"RTN","IBTODD",29,0)
 I $D(IO("Q")) S ZTRTN="DQ^IBTODD",ZTSAVE("IB*")="",ZTDESC="IB - Denied Days Report" D ^%ZTLOAD K IO("Q"),ZTSK D HOME^%ZIS G END
"RTN","IBTODD",30,0)
 ;
"RTN","IBTODD",31,0)
 U IO
"RTN","IBTODD",32,0)
 D DQ G END
"RTN","IBTODD",33,0)
 Q
"RTN","IBTODD",34,0)
 ;
"RTN","IBTODD",35,0)
END ; -- Clean up
"RTN","IBTODD",36,0)
 W ! K ^TMP($J,"IBTODD")
"RTN","IBTODD",37,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBTODD",38,0)
 D ^%ZISC
"RTN","IBTODD",39,0)
 K I,J,X,X2,Y,DFN,%ZIS,DGPM,VA,IBI,IBJ,IBTRN,IBTRND,IBTRND1,IBPAG,IBHDT,IBDISDT,IBETYP,IBQUIT,IBTAG,IBTRC,IBTRCD,IBDEN,IBDAY,IBTALL,IBADM,IBDISCH,IBMAX
"RTN","IBTODD",40,0)
 K IBAPL,IBBBS,IBBDT,IBC,IBCDT,IBCNT,IBDT,IBD,IBDATA,IBEDT,IBNAM,IBPRIM,IBPROV,IBRATE,IBSECN,IBSERV,IBSORT,IBSPEC,IBSUM,IBSUBT,IBTOTL,IBCNTO,IBEVNTYP,IBISV,IBSELECT
"RTN","IBTODD",41,0)
 D KVAR^VADPT
"RTN","IBTODD",42,0)
 Q
"RTN","IBTODD",43,0)
DQ ; -- entry print from taskman
"RTN","IBTODD",44,0)
 K ^TMP($J,"IBTODD") F I=1:1 S J=$P(IBSELECT,",",I) Q:'J  S ^TMP($J,"IBTODD",J)=""
"RTN","IBTODD",45,0)
 S X=132 X ^%ZOSF("RM")
"RTN","IBTODD",46,0)
 S IBPAG=0,IBHDT=$$HTE^XLFDT($H,1),IBQUIT=0
"RTN","IBTODD",47,0)
 S IBDEN=$O(^IBE(356.7,"ACODE",20,0))
"RTN","IBTODD",48,0)
 D BLD,PRINT^IBTODD1
"RTN","IBTODD",49,0)
 I $D(ZTQUEUED) G END
"RTN","IBTODD",50,0)
 Q
"RTN","IBTODD",51,0)
 ;
"RTN","IBTODD",52,0)
BLD ; -- sort through data and build array to print from
"RTN","IBTODD",53,0)
 ;
"RTN","IBTODD",54,0)
 S IBTRC=0
"RTN","IBTODD",55,0)
 F  S IBTRC=$O(^IBT(356.2,"ACT",IBDEN,IBTRC)) Q:'IBTRC  D
"RTN","IBTODD",56,0)
 .N IBDAY S IBTRCD=$G(^IBT(356.2,+IBTRC,0))
"RTN","IBTODD",57,0)
 .S IBTRN=$P(IBTRCD,"^",2),IBTRND=$G(^IBT(356,+IBTRN,0))
"RTN","IBTODD",58,0)
 .Q:'$P(IBTRCD,"^",19)  ; review is inactive
"RTN","IBTODD",59,0)
 .Q:'$P(IBTRND,"^",20)  ; parent CT entry is inactive
"RTN","IBTODD",60,0)
 .S IBEVNTYP=$P(IBTRND,U,18) S:IBEVNTYP=5 IBEVNTYP=1
"RTN","IBTODD",61,0)
 . ;
"RTN","IBTODD",62,0)
 .I IBEVNTYP=1,IBSELECT[1 D  Q
"RTN","IBTODD",63,0)
 ..S IBDDB=$P(IBTRCD,"^",15),IBDDE=$P(IBTRCD,"^",16)
"RTN","IBTODD",64,0)
 ..S IBTALL=$P($G(^IBT(356.2,+IBTRC,1)),"^",7)
"RTN","IBTODD",65,0)
 ..S IBLOSI=$$LOS(IBTRN) ; admissions length of stay
"RTN","IBTODD",66,0)
 ..I IBDDB,IBDDE Q:(IBDDB>IBEDT)!(IBDDE<IBBDT)  D
"RTN","IBTODD",67,0)
 ...I IBDDB<IBBDT S IBDDB=IBBDT ; chk days denied in correct range
"RTN","IBTODD",68,0)
 ...I IBDDE>IBEDT S IBDDE=IBEDT
"RTN","IBTODD",69,0)
 ...S IBDAY=$$FMDIFF^XLFDT(IBDDE,IBDDB)+1 ; cals total denied days
"RTN","IBTODD",70,0)
 ..; if no days denied "to" and "from" and episode in range
"RTN","IBTODD",71,0)
 ..I (IBTALL),('$D(IBDAY)) S IBCDT=$$CDT^IBTODD1(IBTRN) D STRIP Q:('+IBCDT!(+IBCDT>IBEDT))  D
"RTN","IBTODD",72,0)
 ...;Q:'$P(IBTRND,U,5)  ; quit if no link between ct and dgpm
"RTN","IBTODD",73,0)
 ...I '$P(IBCDT,U,2) S $P(IBCDT,U,2)=$$FMADD^XLFDT($P(IBCDT,U,1),1) ; unlinked all to event dt+1 los
"RTN","IBTODD",74,0)
 ...; if the care date is >the report range there is no discharge add 1
"RTN","IBTODD",75,0)
 ...I '$P(IBCDT,U,2)!($P(IBCDT,U,2)>IBEDT) S $P(IBCDT,U,2)=$$FMADD^XLFDT(IBEDT,1)
"RTN","IBTODD",76,0)
 ...I +IBCDT<IBBDT S $P(IBCDT,U,1)=IBBDT
"RTN","IBTODD",77,0)
 ...S IBDAY=$$FMDIFF^XLFDT($P(IBCDT,U,2),$P(IBCDT,U,1))
"RTN","IBTODD",78,0)
 ..I IBLOSI=1,IBDAY=0 S IBDAY=1 ; get one day stays
"RTN","IBTODD",79,0)
 ..Q:$G(IBDAY)<1
"RTN","IBTODD",80,0)
 ..S DFN=$P(IBTRCD,"^",5),IBNAM=$P($G(^DPT(+DFN,0)),"^") Q:IBNAM=""
"RTN","IBTODD",81,0)
 ..S IBD=$$PROV(DFN,IBTRCD,IBTRND,IBTALL),IBPROV=+IBD,IBSPEC=$P(IBD,"^",2),IBSERV=$P(IBD,"^",3)
"RTN","IBTODD",82,0)
 ..;S IBBBS=$$BBS^IBTOSUM1($P(IBD,"^",2))
"RTN","IBTODD",83,0)
 ..;S IBRATE=$$RATE^IBTOSUM1(IBBBS,+IBTRCD)
"RTN","IBTODD",84,0)
 ..S IBRATE=$$AMOUNT^IBJDB21(1,IBTRN) ; get events charge
"RTN","IBTODD",85,0)
 ..I +IBLOSI,+IBRATE S IBRATE=(IBRATE/IBLOSI)*IBDAY ; calculate amount for days denied
"RTN","IBTODD",86,0)
 ..D SET
"RTN","IBTODD",87,0)
 .;
"RTN","IBTODD",88,0)
 .I IBEVNTYP'=1,IBSELECT[IBEVNTYP D  Q
"RTN","IBTODD",89,0)
 ..S IBDDB=$P(IBTRND,"^",6)
"RTN","IBTODD",90,0)
 ..Q:(IBDDB<IBBDT)!(IBDDB>IBEDT)
"RTN","IBTODD",91,0)
 ..S DFN=$P(IBTRCD,"^",5),IBNAM=$P($G(^DPT(+DFN,0)),"^") Q:IBNAM=""
"RTN","IBTODD",92,0)
 ..S IBPROV=0,IBSPEC=0,IBSERV=$S(IBEVNTYP=2:"OUTPATIENT",IBEVNTYP=3:"PROSTHETICS",IBEVNTYP=4:"PRESCRIPTION",1:"UNKNOWN")
"RTN","IBTODD",93,0)
 ..S IBDAY=1,IBRATE=$$AMOUNT^IBJDB21(IBEVNTYP,IBTRN) ; get events charge
"RTN","IBTODD",94,0)
 ..D SET
"RTN","IBTODD",95,0)
 K IBTRN,IBTRND,IBTRCD,DFN,IBDDB,IBDDE,IBCDT,IBLOSI
"RTN","IBTODD",96,0)
 Q
"RTN","IBTODD",97,0)
 ;
"RTN","IBTODD",98,0)
SET ; -- set array to print from
"RTN","IBTODD",99,0)
 ; -- ^tmp($j,"ibtodd",evnt typ,primary sort,secondary sort,ibtrc)=DFN ^ attending ^ treating specialty ^ service ^  ^ billing rate^ no. days denied
"RTN","IBTODD",100,0)
 S IBPRIM=$S(IBSORT="P":IBNAM,IBSORT="A":IBPROV,1:IBSERV)
"RTN","IBTODD",101,0)
 S IBSECN=$S(IBSORT="P":IBPROV,1:IBNAM)
"RTN","IBTODD",102,0)
 I IBEVNTYP'=1 S IBPRIM=IBNAM,IBSECN=IBDDB
"RTN","IBTODD",103,0)
 S:IBPRIM="" IBPRIM="UNKNOWN" S:IBSECN="" IBSECN="UNKNOWN"
"RTN","IBTODD",104,0)
 S ^TMP($J,"IBTODD",IBEVNTYP,IBPRIM,IBSECN,IBTRC)=DFN_"^"_IBPROV_"^"_IBSPEC_"^"_IBSERV_"^^"_IBRATE_"^"_IBDAY
"RTN","IBTODD",105,0)
 Q
"RTN","IBTODD",106,0)
 ;
"RTN","IBTODD",107,0)
PROV(DFN,IBTRCD,IBTRND,IBTALL) ; Find attending/serv/spec during the denied period
"RTN","IBTODD",108,0)
 ;  Input:    DFN  --  Pointer to the patient in file #2
"RTN","IBTODD",109,0)
 ;         IBTRCD  --  Zeroth node of insurance review in file #356.2
"RTN","IBTODD",110,0)
 ;         IBTRND  --  Zeroth node of parent CT entry in file #356
"RTN","IBTODD",111,0)
 ;         IBTALL  --  1=> deny entire admission
"RTN","IBTODD",112,0)
 ; Output:  1^2^3, where   1 => pointer to attending in file #200
"RTN","IBTODD",113,0)
 ;                         2 => pointer to treating spec. in file #45.7
"RTN","IBTODD",114,0)
 ;                         3 => service abbr. code
"RTN","IBTODD",115,0)
 ;
"RTN","IBTODD",116,0)
 N I,J,X,Y,DGPM,IBD,VA200,VAIN,VAIP,VAERR
"RTN","IBTODD",117,0)
 ;
"RTN","IBTODD",118,0)
 ; - determine date/time to calculate attending/serv/spec
"RTN","IBTODD",119,0)
 S DGPM=+$P(IBTRND,"^",5),IBD=+$G(^DGPM(DGPM,0))
"RTN","IBTODD",120,0)
 S:'IBD IBD=$P(IBTRND,"^",6)
"RTN","IBTODD",121,0)
 I IBTALL S Y=IBD
"RTN","IBTODD",122,0)
 I 'IBTALL D
"RTN","IBTODD",123,0)
 .I $P(IBTRCD,"^",16)>$P(IBTRCD,"^",15) S Y=$P(IBTRCD,"^",15)_.2359 Q
"RTN","IBTODD",124,0)
 .I $P(IBTRCD,"^",15)=(IBD\1) S Y=IBD Q
"RTN","IBTODD",125,0)
 .S VAIP("D")=$P(IBTRCD,"^",15) D IN5^VADPT
"RTN","IBTODD",126,0)
 .I +VAIP(16,1)\1=$P(IBTRCD,"^",15) S Y=+VAIP(16,1) Q
"RTN","IBTODD",127,0)
 .S Y=$P(IBTRCD,"^",15)
"RTN","IBTODD",128,0)
 S VA200="",VAINDT=Y D INP^VADPT
"RTN","IBTODD",129,0)
 ;
"RTN","IBTODD",130,0)
 S X=+VAIN(11)
"RTN","IBTODD",131,0)
 S Y=$G(^IBT(356.94,+$O(^IBT(356.94,"ATP",+DGPM,1,0)),0))
"RTN","IBTODD",132,0)
 S:$P(Y,"^",3) X=$P(Y,"^",3)
"RTN","IBTODD",133,0)
PROVQ Q X_"^"_+VAIN(3)_"^"_$P($G(^DIC(42.4,+$P($G(^DIC(45.7,+$G(VAIN(3)),0)),"^",2),0)),"^",3)
"RTN","IBTODD",134,0)
 ;
"RTN","IBTODD",135,0)
STRIP ; -- strip time from dates (if report run same day time could produce incorrect results)
"RTN","IBTODD",136,0)
 S $P(IBCDT,U,1)=$P(IBCDT,".",1),$P(IBCDT,U,2)=$P($P(IBCDT,U,2),".",1) Q
"RTN","IBTODD",137,0)
 ;
"RTN","IBTODD",138,0)
LOS(IBTRN) ; compute admissions length of stay
"RTN","IBTODD",139,0)
 N X,Y,DGPM,BEG,END,LOS S X=$G(^IBT(356,+$G(IBTRN),0)),LOS=0,Y=0
"RTN","IBTODD",140,0)
 I $P(X,"^",5) S DGPM=$G(^DGPM($P(X,"^",5),0)) D
"RTN","IBTODD",141,0)
 . S BEG=+DGPM,END=DT
"RTN","IBTODD",142,0)
 . I $P(DGPM,"^",17) S END=+$G(^DGPM($P(DGPM,"^",17),0))
"RTN","IBTODD",143,0)
 . S LOS=$$FMDIFF^XLFDT(END,BEG)
"RTN","IBTODD",144,0)
 . I (BEG\1)=(END\1) S LOS=1
"RTN","IBTODD",145,0)
 I +LOS S Y=+LOS
"RTN","IBTODD",146,0)
 Q Y
"RTN","IBTODD1")
0^16^B28302876^B16606516
"RTN","IBTODD1",1,0)
IBTODD1 ;ALB/AAS - CLAIMS TRACKING DENIED DAYS REPORT ; 27-OCT-93
"RTN","IBTODD1",2,0)
 ;;2.0;INTEGRATED BILLING;**32,458**;21-MAR-94;Build 4
"RTN","IBTODD1",3,0)
 ;
"RTN","IBTODD1",4,0)
% I '$D(DT) D DT^DICRW
"RTN","IBTODD1",5,0)
PRINT ; -- print data
"RTN","IBTODD1",6,0)
 ; -- ^tmp($j,"ibtodd",event type,primary sort,secondary sort,ibtrc)=DFN ^ attending ^ treating specialty ^ service ^ ^ billing rate
"RTN","IBTODD1",7,0)
 ;
"RTN","IBTODD1",8,0)
 K IBCNT,IBEVNTYP,IBCNTO
"RTN","IBTODD1",9,0)
 ;
"RTN","IBTODD1",10,0)
 S IBEVNTYP=0 F  S IBEVNTYP=$O(^TMP($J,"IBTODD",IBEVNTYP)) Q:'IBEVNTYP!(IBQUIT)  D
"RTN","IBTODD1",11,0)
 .I 'IBSUM D HDR
"RTN","IBTODD1",12,0)
 .I 'IBSUM,$O(^TMP($J,"IBTODD",IBEVNTYP,""))="" W !!,"No Denials Found in Date Range." Q
"RTN","IBTODD1",13,0)
 .S IBI="",IBISV=""
"RTN","IBTODD1",14,0)
 .F  S IBI=$O(^TMP($J,"IBTODD",IBEVNTYP,IBI)) Q:IBI=""!(IBQUIT)  D
"RTN","IBTODD1",15,0)
 ..I IBSORT'="P",IBISV'=IBI D SUBT^IBTODD2
"RTN","IBTODD1",16,0)
 ..S IBISV=IBI D SUBH^IBTODD2(IBI) Q:IBQUIT
"RTN","IBTODD1",17,0)
 ..S IBJ="" F  S IBJ=$O(^TMP($J,"IBTODD",IBEVNTYP,IBI,IBJ)) Q:IBJ=""!(IBQUIT)  D
"RTN","IBTODD1",18,0)
 ...S IBTRC=""
"RTN","IBTODD1",19,0)
 ...F  S IBTRC=$O(^TMP($J,"IBTODD",IBEVNTYP,IBI,IBJ,IBTRC)) Q:IBTRC=""!(IBQUIT)  S IBDATA=^(IBTRC) D ONE
"RTN","IBTODD1",20,0)
 .I 'IBSUM D SUBT^IBTODD2
"RTN","IBTODD1",21,0)
 ;
"RTN","IBTODD1",22,0)
 I IBQUIT G PRINTQ
"RTN","IBTODD1",23,0)
 D SUM^IBTODD2
"RTN","IBTODD1",24,0)
 ;
"RTN","IBTODD1",25,0)
PRINTQ Q
"RTN","IBTODD1",26,0)
 ;
"RTN","IBTODD1",27,0)
ONE ; -- print one entry
"RTN","IBTODD1",28,0)
 ; -- ^tmp($j,"ibtodd",event type,primary sort,secondary sort,ibtrc)=DFN ^ attending ^ treating specialty ^ service ^ ^ billing rate
"RTN","IBTODD1",29,0)
 ;
"RTN","IBTODD1",30,0)
 S IBAPL=$$APPEAL(IBTRC)
"RTN","IBTODD1",31,0)
 D CNTS
"RTN","IBTODD1",32,0)
 S IBTALL=+$P($G(^IBT(356.2,+IBTRC,1)),"^",7) ;entire admission denied
"RTN","IBTODD1",33,0)
 Q:IBSUM
"RTN","IBTODD1",34,0)
 ;
"RTN","IBTODD1",35,0)
 I IOSL<($Y+6) D HDR,SUBH^IBTODD2(IBI)
"RTN","IBTODD1",36,0)
 S DFN=+IBDATA D PID^VADPT
"RTN","IBTODD1",37,0)
 S IBTRCD=$G(^IBT(356.2,+IBTRC,0))
"RTN","IBTODD1",38,0)
 I IBEVNTYP'=1 G LO
"RTN","IBTODD1",39,0)
 ;
"RTN","IBTODD1",40,0)
L1 W !,$E($P(^DPT(DFN,0),"^"),1,19),?22,VA("BID")
"RTN","IBTODD1",41,0)
 S IBCDT=$$CDT($P(IBTRCD,"^",2))
"RTN","IBTODD1",42,0)
 W ?28,$$DAT1^IBOUTL(+IBCDT\1) W:$P(IBCDT,"^",2) " to"
"RTN","IBTODD1",43,0)
 W ?40,$J($P(IBDATA,"^",2),8)
"RTN","IBTODD1",44,0)
 I IBTALL W ?54,"ALL"
"RTN","IBTODD1",45,0)
 I 'IBTALL W ?54,$$DAT1^IBOUTL($P(IBTRCD,"^",15),"2P") W:$P(IBTRCD,"^",16) " to"
"RTN","IBTODD1",46,0)
 I IBTALL!('$P(IBTRCD,"^",16)) W " (",$P(IBDATA,"^",7),")"
"RTN","IBTODD1",47,0)
 K IBDEN,IBC S IBDEN=0,IBC=0
"RTN","IBTODD1",48,0)
 F  S IBDEN=$O(^IBT(356.2,+IBTRC,12,IBDEN)) Q:'IBDEN  S IBC=IBC+1,IBC(IBC)=^(IBDEN,0)
"RTN","IBTODD1",49,0)
 W:$G(IBC(1)) ?68,$E($$EXPAND^IBTRE(356.212,.01,+IBC(1)),1,25)
"RTN","IBTODD1",50,0)
 W ?98,$S(+$P(IBAPL,"^",2):"YES",1:"NO")
"RTN","IBTODD1",51,0)
 W ?103,$J(+IBAPL,8)
"RTN","IBTODD1",52,0)
 W ?116,$E($$EXPAND^IBTRE(42.4,3,$P(IBDATA,"^",4)),1,4) W:$P(IBDATA,"^",4)="" "UNKN"
"RTN","IBTODD1",53,0)
 W ?120,$$CHRG(+$P(IBDATA,"^",6))
"RTN","IBTODD1",54,0)
 ;
"RTN","IBTODD1",55,0)
 ;
"RTN","IBTODD1",56,0)
L2 W !?28,$$DAT1^IBOUTL($P(IBCDT,"^",2)\1,"2P")
"RTN","IBTODD1",57,0)
 W ?54,$$DAT1^IBOUTL($P(IBTRCD,"^",16),"2P")
"RTN","IBTODD1",58,0)
 I 'IBTALL,$P(IBTRCD,"^",16) W " (",$P(IBDATA,"^",7),")"
"RTN","IBTODD1",59,0)
 W ?68,$E($$EXPAND^IBTRE(356.212,.01,$G(IBC(2))),1,25)
"RTN","IBTODD1",60,0)
 ;
"RTN","IBTODD1",61,0)
 I $O(IBC(2)) S IBDEN=2 F  S IBDEN=$O(IBC(IBDEN)) Q:'IBDEN  W !?70,$E($$EXPAND^IBTRE(356.212,.01,$G(IBC(IBDEN))),1,25)
"RTN","IBTODD1",62,0)
ONEQ W !
"RTN","IBTODD1",63,0)
 Q
"RTN","IBTODD1",64,0)
 ;
"RTN","IBTODD1",65,0)
LO ; -- print one line for non-inpatient
"RTN","IBTODD1",66,0)
 W !,$E($P(^DPT(DFN,0),"^"),1,19),?22,VA("BID")
"RTN","IBTODD1",67,0)
 S IBCDT=$P($G(^IBT(356,+$P(IBTRCD,U,2),0)),U,6)
"RTN","IBTODD1",68,0)
 W ?28,$$FMTE^XLFDT(+IBCDT,2)
"RTN","IBTODD1",69,0)
 W ?50,$P(IBTRCD,"^",26)
"RTN","IBTODD1",70,0)
 W ?78,$S(+$P(IBAPL,"^",2):"YES",1:"NO")
"RTN","IBTODD1",71,0)
 W ?88,$S(+IBAPL:"YES",1:"NO")
"RTN","IBTODD1",72,0)
 W ?98,$$CHRG(+$P(IBDATA,"^",6))
"RTN","IBTODD1",73,0)
 Q
"RTN","IBTODD1",74,0)
 ;
"RTN","IBTODD1",75,0)
 ;
"RTN","IBTODD1",76,0)
CNTS ; -- develop summary data
"RTN","IBTODD1",77,0)
 S IBSERV=$P(IBDATA,"^",4)
"RTN","IBTODD1",78,0)
 I IBSERV="" S IBSERV="UNKNOWN"
"RTN","IBTODD1",79,0)
 S IBSUBT=$G(IBSUBT)+$P(IBDATA,"^",7)
"RTN","IBTODD1",80,0)
 ;
"RTN","IBTODD1",81,0)
 I IBEVNTYP=1 D
"RTN","IBTODD1",82,0)
 .S:'$D(IBCNT(IBSERV)) IBCNT(IBSERV)=""
"RTN","IBTODD1",83,0)
 .S $P(IBCNT(IBSERV),"^")=$P(IBCNT(IBSERV),"^")+$P(IBDATA,"^",7)
"RTN","IBTODD1",84,0)
 .S $P(IBCNT(IBSERV),"^",2)=$P(IBCNT(IBSERV),"^",2)+$P(IBDATA,"^",6)
"RTN","IBTODD1",85,0)
 .S $P(IBCNT(IBSERV),"^",3)=$P(IBCNT(IBSERV),"^",3)+1
"RTN","IBTODD1",86,0)
 .S $P(IBCNT(IBSERV),"^",4)=$P(IBCNT(IBSERV),"^",4)+$G(IBAPL)
"RTN","IBTODD1",87,0)
 .;S:$P(IBCNT(IBSERV),"^",6)<$P(IBDATA,"^",6) $P(IBCNT(IBSERV),"^",6)=$P(IBDATA,"^",6)
"RTN","IBTODD1",88,0)
 .S IBTOTL=$G(IBTOTL)+$P(IBDATA,"^",7)
"RTN","IBTODD1",89,0)
 ;
"RTN","IBTODD1",90,0)
 I IBEVNTYP'=1 D
"RTN","IBTODD1",91,0)
 .S:'$D(IBCNTO(IBSERV)) IBCNTO(IBSERV)=""
"RTN","IBTODD1",92,0)
 .S $P(IBCNTO(IBSERV),"^",2)=$P(IBCNTO(IBSERV),"^",2)+$P(IBDATA,"^",6)
"RTN","IBTODD1",93,0)
 .S $P(IBCNTO(IBSERV),"^",3)=$P(IBCNTO(IBSERV),"^",3)+1
"RTN","IBTODD1",94,0)
 .S $P(IBCNTO(IBSERV),"^",4)=$P(IBCNTO(IBSERV),"^",4)+$P($G(IBAPL),U,2)
"RTN","IBTODD1",95,0)
 .S $P(IBCNTO(IBSERV),"^",5)=$P(IBCNTO(IBSERV),"^",5)+$G(IBAPL)
"RTN","IBTODD1",96,0)
 Q
"RTN","IBTODD1",97,0)
 ;
"RTN","IBTODD1",98,0)
HDR ; -- Print header for billing report
"RTN","IBTODD1",99,0)
 Q:IBQUIT  N IBEVO S IBEVO=$P($G(^IBE(356.6,+IBEVNTYP,0))," ",1)
"RTN","IBTODD1",100,0)
 I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
"RTN","IBTODD1",101,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
"RTN","IBTODD1",102,0)
 S IBPAG=IBPAG+1
"RTN","IBTODD1",103,0)
 W !,"MCCR/UR DENIED DAYS "_IBEVO_" Denials Dated ",$$FMTE^XLFDT(IBBDT),$S(IBBDT'=IBEDT:" to "_$$FMTE^XLFDT(IBEDT),1:""),"  "
"RTN","IBTODD1",104,0)
 W ?(IOM-33),"Page ",IBPAG,"  ",IBHDT
"RTN","IBTODD1",105,0)
 I $G(IBEVNTYP)'=1 G HDRO
"RTN","IBTODD1",106,0)
 W !!,?28,"Dates of",?54,"Dates",?103,"Days Approved"
"RTN","IBTODD1",107,0)
 W !,"Patient",?22,"PtID",?28,"Care",?40,"Attending",?54,"Denied",?68,"Denial Reason",?94,"Appealed",?105,"on Appeal",?116,"SRVS",?125,"Amount"
"RTN","IBTODD1",108,0)
 W !,$TR($J(" ",IOM)," ","-")
"RTN","IBTODD1",109,0)
 Q
"RTN","IBTODD1",110,0)
 ;
"RTN","IBTODD1",111,0)
HDRO ; -- Print Header for non-Inpatient denials
"RTN","IBTODD1",112,0)
 W !!,"Patient",?22,"PtID",?28,"Episode Date",?50,"Outpatient Treatment",?75,"Appealed",?85,"Approved",?103,"Amount"
"RTN","IBTODD1",113,0)
 W !,$TR($J(" ",IOM)," ","-")
"RTN","IBTODD1",114,0)
 Q
"RTN","IBTODD1",115,0)
 ;
"RTN","IBTODD1",116,0)
CDT(IBTRN) ; -- compute dates of care
"RTN","IBTODD1",117,0)
 N X,Y S X=$G(^IBT(356,+IBTRN,0)),Y=""
"RTN","IBTODD1",118,0)
 I $P(X,"^",5) S DGPM=$G(^DGPM($P(X,"^",5),0)) D
"RTN","IBTODD1",119,0)
 .S Y=+DGPM
"RTN","IBTODD1",120,0)
 .I $P(DGPM,"^",17) S Y=Y_"^"_+$G(^DGPM($P(DGPM,"^",17),0))
"RTN","IBTODD1",121,0)
 I 'Y S Y=$P(X,"^",6)
"RTN","IBTODD1",122,0)
 Q Y
"RTN","IBTODD1",123,0)
 ;
"RTN","IBTODD1",124,0)
APPEAL(IBTRC) ; -- Find appeals
"RTN","IBTODD1",125,0)
 N X,Y,IBAPEAL,IBTRN,IBTRSV S (Y,X)=0
"RTN","IBTODD1",126,0)
 S IBTRSV=IBTRC
"RTN","IBTODD1",127,0)
 S IBTRC=0 F  S IBTRC=$O(^IBT(356.2,"AP",+IBTRSV,IBTRC)) Q:'IBTRC  S Y=1,X=X+$$AP(IBTRC)
"RTN","IBTODD1",128,0)
 ;
"RTN","IBTODD1",129,0)
 Q X_"^"_Y
"RTN","IBTODD1",130,0)
 ;
"RTN","IBTODD1",131,0)
AP(IBTRC) ; -- count days approved
"RTN","IBTODD1",132,0)
 N X,Y,Z,AP,EV
"RTN","IBTODD1",133,0)
 S (X,Z)=0
"RTN","IBTODD1",134,0)
 S AP=$G(^IBT(356.2,+IBTRC,0)),EV=+$P($G(^IBT(356,+$P(AP,U,2),0)),U,18)
"RTN","IBTODD1",135,0)
 I EV>1,EV<5,+$P(AP,U,29),+$P(AP,U,29)'=2 S Z=1
"RTN","IBTODD1",136,0)
 I 'Z F  S X=$O(^IBT(356.2,+IBTRC,14,X)) Q:'X  S Y=$G(^(X,0)),Z=Z+$$FMDIFF^XLFDT($P(Y,"^",2),+Y)+1
"RTN","IBTODD1",137,0)
 Q Z
"RTN","IBTODD1",138,0)
 ;
"RTN","IBTODD1",139,0)
CHRG(D) ; return charge for output
"RTN","IBTODD1",140,0)
 N X,X2 S X=+$G(D),X2="0$" D COMMA^%DTC
"RTN","IBTODD1",141,0)
 Q X
"RTN","IBTODD2")
0^17^B10971727^B6204334
"RTN","IBTODD2",1,0)
IBTODD2 ;ALB/AAS - CLAIMS TRACKING DENIED DAYS REPORT ; 13-JUN-95
"RTN","IBTODD2",2,0)
 ;;2.0;INTEGRATED BILLING;**32,458**;21-MAR-94;Build 4
"RTN","IBTODD2",3,0)
 ;
"RTN","IBTODD2",4,0)
SUM ; -- Print summary report
"RTN","IBTODD2",5,0)
 Q:IBQUIT
"RTN","IBTODD2",6,0)
 I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
"RTN","IBTODD2",7,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
"RTN","IBTODD2",8,0)
 S IBPAG=IBPAG+1
"RTN","IBTODD2",9,0)
 W !,"MCCR/UR DENIED DAYS Summary Report for Reviews Dated ",$$FMTE^XLFDT(IBBDT),$S(IBBDT'=IBEDT:" to "_$$FMTE^XLFDT(IBEDT),1:""),"  "
"RTN","IBTODD2",10,0)
 W ?(IOM-33),"Page ",IBPAG,"  ",IBHDT
"RTN","IBTODD2",11,0)
 ;
"RTN","IBTODD2",12,0)
 I $O(^TMP($J,"IBTODD",""))="" W !!,"No Denials Found in Date Range." G SUMQ
"RTN","IBTODD2",13,0)
 ;
"RTN","IBTODD2",14,0)
 I $O(IBCNT(""))'="" D
"RTN","IBTODD2",15,0)
 .W !!,?35,"Number",?50,"Days",?65,"Amount",?80,"Days won"
"RTN","IBTODD2",16,0)
 .W !,"Service",?35,"Denials",?50,"Denied",?65,"Denied",?80,"on Appeal"
"RTN","IBTODD2",17,0)
 .W !,$TR($J(" ",IOM)," ","-")
"RTN","IBTODD2",18,0)
 .;
"RTN","IBTODD2",19,0)
 .S IBSERV="" F  S IBSERV=$O(IBCNT(IBSERV)) Q:IBSERV=""  D
"RTN","IBTODD2",20,0)
 ..W !,$$EXPAND^IBTRE(42.4,3,IBSERV) I IBSERV="UNKNOWN" W IBSERV
"RTN","IBTODD2",21,0)
 ..W ?32,$J($P(IBCNT(IBSERV),"^",3),8)
"RTN","IBTODD2",22,0)
 ..W ?46,$J(+IBCNT(IBSERV),8)
"RTN","IBTODD2",23,0)
 ..S X=$P(IBCNT(IBSERV),"^",2),X2="0$" D COMMA^%DTC W ?60,X
"RTN","IBTODD2",24,0)
 ..W ?81,$J($P(IBCNT(IBSERV),"^",4),6)
"RTN","IBTODD2",25,0)
 ..;S X=$P(IBCNT(IBSERV),"^",6),X2="0$" D COMMA^%DTC W ?95,X
"RTN","IBTODD2",26,0)
 .;
"RTN","IBTODD2",27,0)
 .W !?48,"--------",!,?48,$J(IBTOTL,6)
"RTN","IBTODD2",28,0)
 ;
"RTN","IBTODD2",29,0)
 I $O(IBCNTO(""))'="" D
"RTN","IBTODD2",30,0)
 .W !!,?35,"Number",?65,"Amount",?91,"Appeals"
"RTN","IBTODD2",31,0)
 .W !,"Service",?35,"Denials",?65,"Denied",?81,"Appealed",?91,"Approved"
"RTN","IBTODD2",32,0)
 .W !,$TR($J(" ",IOM)," ","-")
"RTN","IBTODD2",33,0)
 .;
"RTN","IBTODD2",34,0)
 .S IBSERV="" F  S IBSERV=$O(IBCNTO(IBSERV)) Q:IBSERV=""  D
"RTN","IBTODD2",35,0)
 ..W !,IBSERV
"RTN","IBTODD2",36,0)
 ..W ?32,$J($P(IBCNTO(IBSERV),"^",3),8)
"RTN","IBTODD2",37,0)
 ..S X=$P(IBCNTO(IBSERV),"^",2),X2="0$" D COMMA^%DTC W ?60,X
"RTN","IBTODD2",38,0)
 ..W ?81,$J($P(IBCNTO(IBSERV),"^",4),6)
"RTN","IBTODD2",39,0)
 ..W ?91,$J($P(IBCNTO(IBSERV),"^",5),6)
"RTN","IBTODD2",40,0)
SUMQ ;
"RTN","IBTODD2",41,0)
 Q
"RTN","IBTODD2",42,0)
 ;
"RTN","IBTODD2",43,0)
 ;
"RTN","IBTODD2",44,0)
SUBH(Z) ; -- write sub header for report
"RTN","IBTODD2",45,0)
 ;    input z = subheader data
"RTN","IBTODD2",46,0)
 ;    requires ibsort = how report is sorted
"RTN","IBTODD2",47,0)
 I IOSL<($Y+8) D HDR^IBTODD1 Q:IBQUIT
"RTN","IBTODD2",48,0)
 N X,Y S X=""
"RTN","IBTODD2",49,0)
 Q:IBSORT="P"  ; no sub header if sorting by patient
"RTN","IBTODD2",50,0)
 Q:IBEVNTYP'=1  ; no sub header if not inpatient
"RTN","IBTODD2",51,0)
 I IBSORT="S" S Y=$$EXPAND^IBTRE(42.4,3,IBI) S X="Service: "_$S(Y'="":Y,1:IBI)
"RTN","IBTODD2",52,0)
 I IBSORT="A" S X="Attending: "_IBI
"RTN","IBTODD2",53,0)
 I $L(X) W !!?15,X
"RTN","IBTODD2",54,0)
 Q
"RTN","IBTODD2",55,0)
 ;
"RTN","IBTODD2",56,0)
SUBT ; -- write out sub totals, initialize variable
"RTN","IBTODD2",57,0)
 I '$G(IBSUBT) G SUBTQ
"RTN","IBTODD2",58,0)
 W !?54,"------",!,?54,$J(IBSUBT,6)
"RTN","IBTODD2",59,0)
SUBTQ S IBSUBT=0
"RTN","IBTODD2",60,0)
 Q
"RTN","IBTODD2",61,0)
 ;
"RTN","IBTODD2",62,0)
 ;
"RTN","IBTODD2",63,0)
SORT ; Ask for sort criteria.
"RTN","IBTODD2",64,0)
 W !!
"RTN","IBTODD2",65,0)
 S DIR(0)="SOBA^P:PATIENT;A:ATTENDING;S:SERVICE"
"RTN","IBTODD2",66,0)
 S DIR("A")="Print Report By [P]atient  [A]ttending  [S]ervice: "
"RTN","IBTODD2",67,0)
 S DIR("B")="P"
"RTN","IBTODD2",68,0)
 S DIR("?",1)="This report may be prepared by either Patient, Attending, or Service."
"RTN","IBTODD2",69,0)
 S DIR("?",2)=""
"RTN","IBTODD2",70,0)
 S DIR("?",3)=""
"RTN","IBTODD2",71,0)
 S DIR("?",4)=""
"RTN","IBTODD2",72,0)
 S DIR("?",5)=""
"RTN","IBTODD2",73,0)
 S DIR("?",6)=""
"RTN","IBTODD2",74,0)
 S DIR("?",7)=""
"RTN","IBTODD2",75,0)
 S DIR("?",8)="  "
"RTN","IBTODD2",76,0)
 S DIR("?")=""
"RTN","IBTODD2",77,0)
 D ^DIR K DIR
"RTN","IBTODD2",78,0)
 S IBSORT=Y I "PAS"'[Y!($D(DIRUT)) S IBSORT=-1
"RTN","IBTODD2",79,0)
 Q
"RTN","IBTODD2",80,0)
 ;
"RTN","IBTODD2",81,0)
TYPE ; Ask for the Type of Care to include, IBSELECT defined on exit
"RTN","IBTODD2",82,0)
 N IBPRT,IBEPS
"RTN","IBTODD2",83,0)
 S IBPRT="Choose denials for which types of care to print:"
"RTN","IBTODD2",84,0)
 S IBEPS(1)="INPATIENT",IBEPS(2)="OUTPATIENT",IBEPS(3)="PROSTHETICS",IBEPS(4)="PHARMACY",IBEPS(5)="ALL DENIALS"
"RTN","IBTODD2",85,0)
 S IBSELECT=$$MLTP^IBJD(IBPRT,.IBEPS,1)
"RTN","IBTODD2",86,0)
 Q
"RTN","IBTRC")
0^18^B27777656^B25152146
"RTN","IBTRC",1,0)
IBTRC ;ALB/AAS - CLAIMS TRACKING INSURANCE REVIEWS ; 27-JUN-1993
"RTN","IBTRC",2,0)
 ;;2.0;INTEGRATED BILLING;**458**;21-MAR-94;Build 4
"RTN","IBTRC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRC",4,0)
 ;
"RTN","IBTRC",5,0)
% ;
"RTN","IBTRC",6,0)
EN ; -- main entry point for IBT COMMUNICATIONS EDITOR from menu's
"RTN","IBTRC",7,0)
 I '$D(DT) D DT^DICRW
"RTN","IBTRC",8,0)
 K XQORS,VALMEVL,IBTRN,IBTRND,IBCNT,DFN,IBTRC,IBTRV,IBTRD,IBCNS,IBCDFN,IBFASTXT,VALMQUIT,VA,VAIN,VAERR
"RTN","IBTRC",9,0)
 ;I '$D(IBTRN) D EN^IBTRE Q
"RTN","IBTRC",10,0)
 D PAT^IBCNSM I $D(VALMQUIT) G ENQ
"RTN","IBTRC",11,0)
 D TRAC^IBTRV I $D(VALMQUIT) G ENQ
"RTN","IBTRC",12,0)
 I '$G(IBTRPRF) S IBTRPRF="12"
"RTN","IBTRC",13,0)
 D EN^VALM("IBT COMMUNICATIONS EDITOR")
"RTN","IBTRC",14,0)
ENQ K XQORS,VALMEVL,IBTRN,IBTRND,IBCNT,DFN,IBTRC,IBTRV,IBTRD,IBCNS,IBCDFN,IBFASTXT,VALMQUIT,IBTRPRF,VA,VAIN,VAERR,X,Y,I,J,IBETYP
"RTN","IBTRC",15,0)
 K IBAMT,IBAPR,IBADG,IBDA,IBDGCR,IBDGCRU1,IBDV,IBETYP,IBETYPD,IBI,IBICD,IBLCNT,IBSEL,IBT,IBTEXT,IBTNOD,IBTSAV,VAUTD
"RTN","IBTRC",16,0)
 K IBAPEAL,IBCDFN,IBCNT,IBDEN,IBDENIAL,IBDENIAL,IBPARNT,IBPEN,IBPENAL,IBTCOD,IBTRDD,IBTRSV,IBTYPE,VAINDT,VA,VALMBCK,OFFSET,I1,I3,IBNEW,IBDENT,IBOE,Z1,T,SDCNT
"RTN","IBTRC",17,0)
 D KVAR^VADPT
"RTN","IBTRC",18,0)
 Q
"RTN","IBTRC",19,0)
 ;
"RTN","IBTRC",20,0)
HDR ; -- header code
"RTN","IBTRC",21,0)
 D PID^VADPT N IBXR
"RTN","IBTRC",22,0)
 S VALMHDR(1)="Insurance Review Entries for: "_$$PT^IBTUTL1(DFN)
"RTN","IBTRC",23,0)
 S IBXR=$$ROIEVT^IBTRR1(IBTRN) I IBXR'="" S VALMHDR(1)=VALMHDR(1)_$J(" ",(60-$L(VALMHDR(1))))_"ROI: "_IBXR
"RTN","IBTRC",24,0)
 S VALMHDR(2)="                         for: "_$$EXPAND^IBTRE(356,.18,$P(IBTRND,"^",18))_" on "_$$DAT1^IBOUTL($P(IBTRND,"^",6),"2P")
"RTN","IBTRC",25,0)
 Q
"RTN","IBTRC",26,0)
 ;
"RTN","IBTRC",27,0)
INIT ; -- init variables and list array
"RTN","IBTRC",28,0)
 S U="^",VALMCNT=0,VALMBG=1
"RTN","IBTRC",29,0)
 K ^TMP("IBTRC",$J),^TMP("IBTRCDX",$J)
"RTN","IBTRC",30,0)
 K I,X,XQORNOD,DA,DR,DIE,DNM,DQ
"RTN","IBTRC",31,0)
 S IBTRND=$G(^IBT(356,IBTRN,0))
"RTN","IBTRC",32,0)
 D BLD
"RTN","IBTRC",33,0)
 Q
"RTN","IBTRC",34,0)
 ;
"RTN","IBTRC",35,0)
BLD ; -- Build list of Insurnace contacts
"RTN","IBTRC",36,0)
 K ^TMP("IBTRC",$J),^TMP("IBTRCDX",$J)
"RTN","IBTRC",37,0)
 N IBI,J,IBTRC,IBTRCD,IBTRCD1
"RTN","IBTRC",38,0)
 S VALMSG=$$MSG^IBTUTL3(DFN)
"RTN","IBTRC",39,0)
 S (IBTRC,IBCNT,VALMCNT)=0,IBI=""
"RTN","IBTRC",40,0)
 F  S IBI=$O(^IBT(356.2,"ATIDT",IBTRN,IBI)) Q:'IBI  S IBTRC=0 F  S IBTRC=$O(^IBT(356.2,"ATIDT",IBTRN,IBI,IBTRC)) Q:'IBTRC  D
"RTN","IBTRC",41,0)
 .S IBTRCD=$G(^IBT(356.2,+IBTRC,0))
"RTN","IBTRC",42,0)
 .S IBTRCD1=$G(^IBT(356.2,+IBTRC,1))
"RTN","IBTRC",43,0)
 .Q:'+$P(IBTRCD,"^",19)  ;quit if inactive
"RTN","IBTRC",44,0)
 .S IBCNT=IBCNT+1
"RTN","IBTRC",45,0)
 .S IBETYP=$G(^IBE(356.11,+$P(IBTRCD,"^",4),0))
"RTN","IBTRC",46,0)
 .W "."
"RTN","IBTRC",47,0)
 .S X=""
"RTN","IBTRC",48,0)
 .S X=$$SETFLD^VALM1(IBCNT,X,"NUMBER")
"RTN","IBTRC",49,0)
 .S X=$$SETFLD^VALM1($P($$DAT1^IBOUTL(+IBTRCD,"2P")," "),X,"DATE")
"RTN","IBTRC",50,0)
 .S X=$$SETFLD^VALM1($P($G(^DIC(36,+$P(IBTRCD,"^",8),0)),"^"),X,"INS CO")
"RTN","IBTRC",51,0)
 .S X=$$SETFLD^VALM1($$EXPAND^IBTRE(356.2,.11,$P(IBTRCD,"^",11)),X,"ACTION")
"RTN","IBTRC",52,0)
 .;
"RTN","IBTRC",53,0)
 .S X=$$SETFLD^VALM1($P(IBETYP,"^",3),X,"TYPE")
"RTN","IBTRC",54,0)
 .S X=$$SETFLD^VALM1($$AUTHN(IBTRC,10),X,"PRE-CERT")
"RTN","IBTRC",55,0)
 .I $P(IBTRCD,"^",13) S X=$$SETFLD^VALM1($J($$DAY^IBTUTL3($P(IBTRCD,"^",12),$P(IBTRCD,"^",13),IBTRN),3),X,"DAYS")
"RTN","IBTRC",56,0)
 .I $P($G(^IBE(356.7,+$P(IBTRCD,"^",11),0)),"^",3)=20 S X=$$SETFLD^VALM1($J($$DAY^IBTUTL3($P(IBTRCD,"^",15),$P(IBTRCD,"^",16),IBTRN),3),X,"DAYS")
"RTN","IBTRC",57,0)
 .I $P(IBTRCD1,"^",7)!($P(IBTRCD1,"^",8)) S X=$$SETFLD^VALM1("ALL",X,"DAYS")
"RTN","IBTRC",58,0)
 .S X=$$SETFLD^VALM1($P(IBTRCD,"^",6),X,"CONTACT")
"RTN","IBTRC",59,0)
 .S X=$$SETFLD^VALM1($P(IBTRCD,"^",7),X,"PHONE")
"RTN","IBTRC",60,0)
 .S X=$$SETFLD^VALM1($$CREFN(IBTRC,12),X,"REF NO")
"RTN","IBTRC",61,0)
 .I $P(IBETYP,"^",2)=60!($P(IBETYP,"^",2)=65) D APPEAL^IBTRC3
"RTN","IBTRC",62,0)
 .D SET(X)
"RTN","IBTRC",63,0)
 Q
"RTN","IBTRC",64,0)
 ;
"RTN","IBTRC",65,0)
SET(X) ; -- set arrays
"RTN","IBTRC",66,0)
 S VALMCNT=VALMCNT+1
"RTN","IBTRC",67,0)
 S ^TMP("IBTRC",$J,VALMCNT,0)=X
"RTN","IBTRC",68,0)
 S ^TMP("IBTRC",$J,"IDX",VALMCNT,IBCNT)=""
"RTN","IBTRC",69,0)
 S ^TMP("IBTRCDX",$J,IBCNT)=VALMCNT_"^"_IBTRC
"RTN","IBTRC",70,0)
 Q
"RTN","IBTRC",71,0)
HELP ; -- help code
"RTN","IBTRC",72,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBTRC",73,0)
 Q
"RTN","IBTRC",74,0)
 ;
"RTN","IBTRC",75,0)
EXIT ; -- exit code
"RTN","IBTRC",76,0)
 K ^TMP("IBTRC",$J),^TMP("IBTRCDX",$J)
"RTN","IBTRC",77,0)
 K IBTRC
"RTN","IBTRC",78,0)
 D CLEAN^VALM10
"RTN","IBTRC",79,0)
 Q
"RTN","IBTRC",80,0)
 ;
"RTN","IBTRC",81,0)
AUTHN(IBTRC,LNG) ; -- return autorization number (356.2, 2.02) - length and append *
"RTN","IBTRC",82,0)
 N X S X=$P($G(^IBT(356.2,+$G(IBTRC),2)),"^",2) I +$G(LNG),$L(X)>LNG S X=$E(X,1,(LNG-1))_"*"
"RTN","IBTRC",83,0)
 Q X
"RTN","IBTRC",84,0)
 ;
"RTN","IBTRC",85,0)
CREFN(IBTRC,LNG) ; -- return call reference number (356.2, 2.01) - length and append *
"RTN","IBTRC",86,0)
 N X S X=$P($G(^IBT(356.2,+$G(IBTRC),2)),"^",1) I +$G(LNG),$L(X)>LNG S X=$E(X,1,(LNG-1))_"*"
"RTN","IBTRC",87,0)
 Q X
"RTN","IBTRC",88,0)
 ;
"RTN","IBTRC",89,0)
 ;
"RTN","IBTRC",90,0)
TYPE(IBTRC) ; -- compute default type of contact
"RTN","IBTRC",91,0)
 N TYPE,IBTRTP,IBTRN,IBSCHED
"RTN","IBTRC",92,0)
 S TYPE=""
"RTN","IBTRC",93,0)
 I '$P($G(^IBT(356.2,IBTRC,0)),"^",2) S TYPE=70 G TYPEQ ;no tracking id default is patient
"RTN","IBTRC",94,0)
 S IBTRN=$P($G(^IBT(356.2,IBTRC,0)),"^",2),IBTRTP=$$TRTP^IBTRE1(IBTRN)
"RTN","IBTRC",95,0)
 ;
"RTN","IBTRC",96,0)
 ; -- if from a review
"RTN","IBTRC",97,0)
 I $G(IBTRV) S TYPE=$$TRTP^IBTRV(IBTRV) G TYPEQ ; if from review use review type
"RTN","IBTRC",98,0)
 I IBTRTP>1 S TYPE=50 G TYPEQ ; outpatient
"RTN","IBTRC",99,0)
 S IBSCHED=$S($P($G(^DGPM(+$P($G(^IBT(356,IBTRN,0)),U,5),0)),U,25):10,1:20)
"RTN","IBTRC",100,0)
 I '$O(^IBT(356.2,"ATRTP",IBTRN,0)) S TYPE=IBSCHED G TYPEQ ; default for first is urgent admission
"RTN","IBTRC",101,0)
 S TYPE=30 ; default is continued stay
"RTN","IBTRC",102,0)
 ;
"RTN","IBTRC",103,0)
TYPEQ Q $P($G(^IBE(356.11,+$O(^IBE(356.11,"ACODE",+TYPE,0)),0)),"^")
"RTN","IBTRC",104,0)
 ;
"RTN","IBTRC",105,0)
TCODE(IBTRC) ; -- return type code for entry
"RTN","IBTRC",106,0)
 Q $P($G(^IBE(356.11,+$P($G(^IBT(356.2,+$G(IBTRC),0)),"^",4),0)),"^",2)
"RTN","IBTRC",107,0)
 ;
"RTN","IBTRC",108,0)
CONTCT(DA,Y) ; -- screen for type of contact
"RTN","IBTRC",109,0)
 ; -- called by dic(s) on lookup of type of contact field in 356.2
"RTN","IBTRC",110,0)
 ;
"RTN","IBTRC",111,0)
 ;"I ($P(^(0),U,2)>60&('$P(^IBT(356.2,DA,0),U,2)))!($P(^(0),U,2))"
"RTN","IBTRC",112,0)
 N IBOK,TCODE S IBOK=1
"RTN","IBTRC",113,0)
 S TCODE=$P(^(0),U,2)
"RTN","IBTRC",114,0)
 I TCODE=85 S IBOK=0 G CONTQ ;insurance verification from ins menu only
"RTN","IBTRC",115,0)
 I TCODE=15 S IBOK=0 G CONTQ ;Admission review only for hosp reviews
"RTN","IBTRC",116,0)
 I '$P($G(^IBT(356.2,DA,0)),U,2),TCODE<70 S IBOK=0 G CONTQ ;no tracking id, only patient or other
"RTN","IBTRC",117,0)
 I TCODE=60,'$P($G(^IBT(356.2,DA,0)),U,18) S IBOK=0 G CONTQ ;appeals must have an associated parent denial
"RTN","IBTRC",118,0)
 S IBTRTP=$$TRTP^IBTRE1($P($G(^IBT(356.2,DA,0)),U,2))
"RTN","IBTRC",119,0)
 I IBTRTP>1,TCODE<50 S IBOK=0 ; not inpatient care, not inpt codes
"RTN","IBTRC",120,0)
CONTQ Q IBOK
"RTN","IBTRC1")
0^29^B23066031^B21805821
"RTN","IBTRC1",1,0)
IBTRC1 ;ALB/AAS - CLAIMS TRACKING -  INSURANCE ACTIONS ACTIONS ; 14-JUL-93
"RTN","IBTRC1",2,0)
 ;;2.0;INTEGRATED BILLING;**458**;21-MAR-94;Build 4
"RTN","IBTRC1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRC1",4,0)
 ;
"RTN","IBTRC1",5,0)
% G EN^IBTRC
"RTN","IBTRC1",6,0)
 ;
"RTN","IBTRC1",7,0)
AI ; -- Add ins. Action entry
"RTN","IBTRC1",8,0)
 N X,Y,I,J,DA,DR,DIC,DIE,DR,DD,DO,IBQUIT,IBTRCDT,DIR,DIRUT,DUOUT
"RTN","IBTRC1",9,0)
 ;
"RTN","IBTRC1",10,0)
 ; -- select date
"RTN","IBTRC1",11,0)
 S DIR(0)="356.2,.01",DIR("A")="Select Insurance Review or Contact Date",DIR("B")="NOW"
"RTN","IBTRC1",12,0)
 D ^DIR K DIR
"RTN","IBTRC1",13,0)
 I $D(DIRUT)!($D(DUOUT))!(+Y<1) G AIQ
"RTN","IBTRC1",14,0)
 S IBTRCDT=+Y
"RTN","IBTRC1",15,0)
 ;
"RTN","IBTRC1",16,0)
 ; -- if not tracking id allow selecting
"RTN","IBTRC1",17,0)
 I '$G(IBTRN) D
"RTN","IBTRC1",18,0)
 .S DIC="^IBT(356,",DIC(0)="AEQ",D="ADFN"_DFN
"RTN","IBTRC1",19,0)
 .D IX^DIC K DIC
"RTN","IBTRC1",20,0)
 .I +Y>1 S IBTRN=+Y
"RTN","IBTRC1",21,0)
 ;
"RTN","IBTRC1",22,0)
 ; -- add entry
"RTN","IBTRC1",23,0)
 D COM^IBTUTL3(IBTRCDT,$G(IBTRN),"",$G(IBTRV))
"RTN","IBTRC1",24,0)
 ;
"RTN","IBTRC1",25,0)
 ; -- edit based on type/action
"RTN","IBTRC1",26,0)
 D QE1
"RTN","IBTRC1",27,0)
 D BLD^IBTRC
"RTN","IBTRC1",28,0)
 S VALMBCK="R"
"RTN","IBTRC1",29,0)
AIQ Q
"RTN","IBTRC1",30,0)
 ;
"RTN","IBTRC1",31,0)
DT ; -- Delete Insurance Action entry
"RTN","IBTRC1",32,0)
 I '$D(^XUSEC("IB CLAIMS SUPERVISOR",DUZ)) D SORRY^IBTRE1 G DTQ
"RTN","IBTRC1",33,0)
 N I,J,IBXX,DIR,DIRUT,VALMY
"RTN","IBTRC1",34,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBTRC1",35,0)
 I $D(VALMY) D FULL^VALM1 S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX!$D(DIRUT)  D
"RTN","IBTRC1",36,0)
 .S IBTRC=$P($G(^TMP("IBTRCDX",$J,+$O(^TMP("IBTRC",$J,"IDX",IBXX,0)))),"^",2)
"RTN","IBTRC1",37,0)
 .I $O(^IBT(356.2,"AP",IBTRC,0)) W !,"Must first delete appeals associated with Denials" D PAUSE^VALM1 Q
"RTN","IBTRC1",38,0)
 .;
"RTN","IBTRC1",39,0)
 .W ! S DIR(0)="Y",DIR("B")="NO",DIR("A")="Are You Sure you want to delete entry #"_IBXX
"RTN","IBTRC1",40,0)
 .D ^DIR I Y'=1 W !,"Entry #",IBXX," not Deleted!" Q
"RTN","IBTRC1",41,0)
 .D DP1
"RTN","IBTRC1",42,0)
 .Q
"RTN","IBTRC1",43,0)
DTQ D BLD^IBTRC
"RTN","IBTRC1",44,0)
 S VALMBCK="R" Q
"RTN","IBTRC1",45,0)
 ;
"RTN","IBTRC1",46,0)
DP1 ; -- actual deletion
"RTN","IBTRC1",47,0)
 N DA,DIC,DIK
"RTN","IBTRC1",48,0)
 ;
"RTN","IBTRC1",49,0)
 ; -- delete reviews, communications,
"RTN","IBTRC1",50,0)
 S DA=IBTRC,DIK="^IBT(356.2," D ^DIK
"RTN","IBTRC1",51,0)
 W !,"Entry ",IBXX," Deleted!"
"RTN","IBTRC1",52,0)
 Q
"RTN","IBTRC1",53,0)
 ;
"RTN","IBTRC1",54,0)
QE ; -- Quick edit Review entry
"RTN","IBTRC1",55,0)
 N I,J,IBXX,VALMY
"RTN","IBTRC1",56,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBTRC1",57,0)
 I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
"RTN","IBTRC1",58,0)
 .S IBTRC=$P($G(^TMP("IBTRCDX",$J,+$O(^TMP("IBTRC",$J,"IDX",IBXX,0)))),"^",2)
"RTN","IBTRC1",59,0)
 .D QE1
"RTN","IBTRC1",60,0)
QEQ S VALMBCK="R"
"RTN","IBTRC1",61,0)
 D BLD^IBTRC
"RTN","IBTRC1",62,0)
 Q
"RTN","IBTRC1",63,0)
 ;
"RTN","IBTRC1",64,0)
QE1 N X,Y,DA,DR,DIC,DIE,IBSEL,IBTLST
"RTN","IBTRC1",65,0)
 D EDIT^IBTRCD1("[IBT QUICK EDIT]",1)
"RTN","IBTRC1",66,0)
 Q
"RTN","IBTRC1",67,0)
 I $$TRTP^IBTRE1(IBTRN)<3 D  ;clinical info only on inpt/outpt
"RTN","IBTRC1",68,0)
 .; -- diagnosis edit
"RTN","IBTRC1",69,0)
 .D EN^IBTRE3(IBTRN) Q:$G(IBSEL)["^"
"RTN","IBTRC1",70,0)
 .;
"RTN","IBTRC1",71,0)
 .; -- procedure edit / only inpt. / outpt use add/edit
"RTN","IBTRC1",72,0)
 .I $$TRTP^IBTRE1(IBTRN)<2 D EN^IBTRE4(IBTRN) Q:$G(IBSEL)["^"
"RTN","IBTRC1",73,0)
 .;
"RTN","IBTRC1",74,0)
 .; -- provider edit
"RTN","IBTRC1",75,0)
 .D EN^IBTRE5(IBTRN)
"RTN","IBTRC1",76,0)
 Q
"RTN","IBTRC1",77,0)
 ;
"RTN","IBTRC1",78,0)
NX(IBTMPNM) ; -- Go to next template
"RTN","IBTRC1",79,0)
 ; -- Input template name
"RTN","IBTRC1",80,0)
 N I,J,IBXXC,VALMY
"RTN","IBTRC1",81,0)
 S IBTSAV("IBTRN")=IBTRN
"RTN","IBTRC1",82,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBTRC1",83,0)
 I $D(VALMY) S IBXXC=0 F  S IBXXC=$O(VALMY(IBXXC)) Q:'IBXXC  D
"RTN","IBTRC1",84,0)
 .S IBTRC=$P($G(^TMP("IBTRCDX",$J,+$O(^TMP("IBTRC",$J,"IDX",IBXXC,0)))),"^",2)
"RTN","IBTRC1",85,0)
 .D EN^VALM(IBTMPNM)
"RTN","IBTRC1",86,0)
 .K IBAMT,IBAPR,IBADG,IBDA,IBDGCR,IBDGCRU1,IBDV,IBETYP,IBETYPD,IBI,IBICD,IBLCNT,IBSEL,IBT,IBTEXT,IBTNOD,VAUTD
"RTN","IBTRC1",87,0)
 .K IBAPEAL,IBCDFN,IBCNT,IBDEN,IBDENIAL,IBDENIAL,IBPARNT,IBPEN,IBPENAL,IBTCOD,IBTRDD,IBTRSV,IBTYPE,VAINDT,VA
"RTN","IBTRC1",88,0)
 .D KVAR^VADPT
"RTN","IBTRC1",89,0)
 .Q
"RTN","IBTRC1",90,0)
 S IBTRN=$G(IBTSAV("IBTRN"))
"RTN","IBTRC1",91,0)
 I '$D(IBFASTXT) D BLD^IBTRC
"RTN","IBTRC1",92,0)
 S VALMBCK="R"
"RTN","IBTRC1",93,0)
 Q
"RTN","IBTRC1",94,0)
 ;
"RTN","IBTRC1",95,0)
EDIT(IBTEMP) ; -- Edit entries
"RTN","IBTRC1",96,0)
 N I,J,IBXX,VALMY
"RTN","IBTRC1",97,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBTRC1",98,0)
 I $D(VALMY) D FULL^VALM1 S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
"RTN","IBTRC1",99,0)
 .S IBTRC=$P($G(^TMP("IBTRCDX",$J,+$O(^TMP("IBTRC",$J,"IDX",IBXX,0)))),"^",2)
"RTN","IBTRC1",100,0)
 .W !!,"Editing Entry #",IBXX,!
"RTN","IBTRC1",101,0)
 .D EDIT^IBTRCD1(IBTEMP,1)
"RTN","IBTRC1",102,0)
 S VALMBCK="R"
"RTN","IBTRC1",103,0)
 D BLD^IBTRC
"RTN","IBTRC1",104,0)
 Q
"RTN","IBTRC1",105,0)
 ;
"RTN","IBTRC1",106,0)
PRECRT(IBTRN,LNG) ; -- find precert number for a tracking entry
"RTN","IBTRC1",107,0)
 ; -- input ibtrn = internal entry of tracking id.
"RTN","IBTRC1",108,0)
 ;
"RTN","IBTRC1",109,0)
 S PRECERT=""
"RTN","IBTRC1",110,0)
 I '$G(IBTRN) G PRECQ
"RTN","IBTRC1",111,0)
 S PRECERT=$O(^IBT(356.2,"APRE",IBTRN,0))
"RTN","IBTRC1",112,0)
 I +$G(LNG),$L(PRECERT)>LNG S PRECERT=$E(PRECERT,1,(LNG-1))_"*"
"RTN","IBTRC1",113,0)
PRECQ Q PRECERT
"RTN","IBTRC1",114,0)
 ;
"RTN","IBTRC1",115,0)
SHOWSC ; -- display sc conditions
"RTN","IBTRC1",116,0)
 N VAEL,TAB,IBTRCSC
"RTN","IBTRC1",117,0)
 D FULL^VALM1
"RTN","IBTRC1",118,0)
 D ELIG^VADPT
"RTN","IBTRC1",119,0)
 W !!,"Patient: ",$$PT^IBTUTL1(DFN)
"RTN","IBTRC1",120,0)
 I 'VAEL(3) W !,"Patient Not Service Connected",!! G SHOWQ
"RTN","IBTRC1",121,0)
 W !,?5,"Service Connected Percent: "_+$P(VAEL(3),"^",2)_"%"
"RTN","IBTRC1",122,0)
 S TAB=5,IBTRCSC=1 D SC^IBTOAT2
"RTN","IBTRC1",123,0)
SHOWQ D PAUSE^VALM1
"RTN","IBTRC1",124,0)
 S VALMBCK="R"
"RTN","IBTRC1",125,0)
 Q
"RTN","IBTRC1",126,0)
 ;
"RTN","IBTRC1",127,0)
CP ; -- change patient from within insurance reviews
"RTN","IBTRC1",128,0)
 N VALMQUIT,IBDFN,IBTRNOLD,IBY
"RTN","IBTRC1",129,0)
 D FULL^VALM1
"RTN","IBTRC1",130,0)
 S IBDFN=DFN D PAT^IBCNSM
"RTN","IBTRC1",131,0)
 I $D(VALMQUIT) S DFN=IBDFN
"RTN","IBTRC1",132,0)
 S IBTRNOLD=IBTRN K IBTRN
"RTN","IBTRC1",133,0)
 D TRAC^IBTRV
"RTN","IBTRC1",134,0)
 I '$G(IBTRN) S DFN=IBDFN,IBTRN=IBTRNOLD
"RTN","IBTRC1",135,0)
 S IBTRND=$G(^IBT(356,+IBTRN,0))
"RTN","IBTRC1",136,0)
 D BLD^IBTRC,HDR^IBTRC
"RTN","IBTRC1",137,0)
 S VALMBCK="R"
"RTN","IBTRC1",138,0)
CPQ Q
"RTN","IBTRC1",139,0)
 ;
"RTN","IBTRC1",140,0)
SCREEN(ACODE,CTYPE) ; -- screen for action field of file 356.2
"RTN","IBTRC1",141,0)
 ; -- called by input transform
"RTN","IBTRC1",142,0)
 ;    input  ACODE = piece 3 (action code) of entry being screen in 356.7
"RTN","IBTRC1",143,0)
 ;           CTYPE = type of review, pointer to 356.11
"RTN","IBTRC1",144,0)
 ;
"RTN","IBTRC1",145,0)
 S CTYPE=$P($G(^IBE(356.11,+CTYPE,0)),"^",2) I 'CTYPE Q 1
"RTN","IBTRC1",146,0)
 Q $S(CTYPE=10:1,CTYPE=20:1,CTYPE=25:1,CTYPE=30:1,CTYPE=35:1,CTYPE=50&(ACODE<30):1,CTYPE=55&(ACODE<30):1,1:0)
"RTN","IBTRC1",147,0)
 ;Q $S(CTYPE=10:1,CTYPE=20:1,CTYPE=30:1,CTYPE=50&(ACODE<30):1,1:0)
"RTN","IBTRC1",148,0)
 ;Q $S(CTYPE=1:1,CTYPE=2&(ACODE'=30):1,CTYPE=3:1,CTYPE=5&(ACODE<30):1,1:0)
"RTN","IBTRC3")
0^19^B8006910^B8308715
"RTN","IBTRC3",1,0)
IBTRC3 ;ALB/AAS - CLAIMS TRAINING INS. REV DEFAULTS ; 29-SEP-93
"RTN","IBTRC3",2,0)
 ;;2.0;INTEGRATED BILLING;**458**;21-MAR-94;Build 4
"RTN","IBTRC3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRC3",4,0)
 ;
"RTN","IBTRC3",5,0)
LAST(IBTRN,IBTRC) ; -- return last insurance review
"RTN","IBTRC3",6,0)
 ; -- Input  IBTRN  = claims tracking id
"RTN","IBTRC3",7,0)
 ;           IBTRC  = ins. review being edited (option)
"RTN","IBTRC3",8,0)
 ;                    (if hip is defined for ibtrc will use last review
"RTN","IBTRC3",9,0)
 ;                     for that policy)
"RTN","IBTRC3",10,0)
 ;
"RTN","IBTRC3",11,0)
 N X,Y,IBHIP,IBQUIT
"RTN","IBTRC3",12,0)
 S Y="",IBQUIT=0
"RTN","IBTRC3",13,0)
 I '$G(IBTRN) G LASTQ
"RTN","IBTRC3",14,0)
 S IBHIP=$P($G(^IBT(356.2,+$G(IBTRC),1)),"^",5)
"RTN","IBTRC3",15,0)
 S X=-$G(^IBT(356.2,+IBTRC,0)) F  S X=$O(^IBT(356.2,"ATIDT",IBTRN,X)) Q:'X!(IBQUIT)  D
"RTN","IBTRC3",16,0)
 .S Y="" F  S Y=$O(^IBT(356.2,"ATIDT",IBTRN,X,Y)) Q:'Y!('IBHIP)  D  Q:IBQUIT
"RTN","IBTRC3",17,0)
 ..I $P($G(^IBT(356.2,+Y,1)),"^",5)=IBHIP S IBQUIT=1 Q
"RTN","IBTRC3",18,0)
LASTQ Q $S(+Y<1:"",Y:Y,1:"")
"RTN","IBTRC3",19,0)
 ;
"RTN","IBTRC3",20,0)
HIP(IBTRC) ; -- compute default health insurance policy for claims tracking
"RTN","IBTRC3",21,0)
 ; -- called by trigger on patient field (.05) of file 356.2
"RTN","IBTRC3",22,0)
 ; -- output pointer to subfile (2.312)^insurnace co name
"RTN","IBTRC3",23,0)
 N X,IBDD,IBINDT,DFN
"RTN","IBTRC3",24,0)
 S X=""
"RTN","IBTRC3",25,0)
 S DFN=$P($G(^IBT(356.2,+$G(IBTRC),0)),"^",5)
"RTN","IBTRC3",26,0)
 G:'DFN HIPQ
"RTN","IBTRC3",27,0)
 S IBINDT=$S($P($G(^IBT(356,+$P($G(^IBT(356.2,+IBTRC,0)),U,2),0)),U,6):$P(^(0),U,6),1:DT)
"RTN","IBTRC3",28,0)
 D ALL^IBCNS1(DFN,"IBDD",1,IBINDT)
"RTN","IBTRC3",29,0)
 I $G(IBDD(0))=1 S X=+$O(IBDD(0))
"RTN","IBTRC3",30,0)
 ;
"RTN","IBTRC3",31,0)
 ; -- if more than one look for primary
"RTN","IBTRC3",32,0)
 I 'X,$G(IBDD(0))>1 D
"RTN","IBTRC3",33,0)
 .S IBX=0
"RTN","IBTRC3",34,0)
 .F  S IBX=$O(IBDD(IBX)) Q:'IBX  I $P($G(IBDD(IBX,0)),"^",20)=1 S X=IBX Q
"RTN","IBTRC3",35,0)
 I X S X=X_"^"_$P($G(^DIC(36,+$G(IBDD(X,0)),0)),"^")
"RTN","IBTRC3",36,0)
HIPQ Q X
"RTN","IBTRC3",37,0)
 ;
"RTN","IBTRC3",38,0)
HIPD(DA,IBTLST) ; -- compute default health insurance policy from last review
"RTN","IBTRC3",39,0)
 ; -- called from input templates
"RTN","IBTRC3",40,0)
 ;    input da     = current entry being edited
"RTN","IBTRC3",41,0)
 ;          ibtlst = last entry for this review as determine by $$LAST
"RTN","IBTRC3",42,0)
 ;
"RTN","IBTRC3",43,0)
 N X,DFN
"RTN","IBTRC3",44,0)
 S X="" I $P($G(^IBT(356.2,DA,1)),"^",5) G HIPDQ
"RTN","IBTRC3",45,0)
 G:'$G(IBTLST) HIPDQ
"RTN","IBTRC3",46,0)
 S X=$P($G(^IBT(356.2,+IBTLST,1)),"^",5),DFN=$P(^(0),"^",5)
"RTN","IBTRC3",47,0)
HIPDQ Q $S(+X<1:"",1:$P($G(^DIC(36,+$G(^DPT(DFN,.312,X,0)),0)),"^",1))
"RTN","IBTRC3",48,0)
 ;
"RTN","IBTRC3",49,0)
PC(DA,IBTLST) ; -- compute default person contacted from last review
"RTN","IBTRC3",50,0)
 ; -- called from input templates
"RTN","IBTRC3",51,0)
 ;    input da     = current entry being edited
"RTN","IBTRC3",52,0)
 ;          ibtlst = last entry for this review as determine by $$LAST
"RTN","IBTRC3",53,0)
 ;
"RTN","IBTRC3",54,0)
 Q $P($G(^IBT(356.2,+$G(IBTLST),0)),"^",6)
"RTN","IBTRC3",55,0)
 ;
"RTN","IBTRC3",56,0)
MC(DA,IBTLST) ; -- compute default method of contact from last review
"RTN","IBTRC3",57,0)
 ; -- called from input templates
"RTN","IBTRC3",58,0)
 ;    input da     = current entry being edited
"RTN","IBTRC3",59,0)
 ;
"RTN","IBTRC3",60,0)
 ;          ibtlst = last entry for this review as determine by $$LAST
"RTN","IBTRC3",61,0)
 ;
"RTN","IBTRC3",62,0)
 N X
"RTN","IBTRC3",63,0)
 S X=$P($G(^IBT(356.2,+$G(IBTLST),0)),"^",17)
"RTN","IBTRC3",64,0)
 Q $S(+X>0:$$EXPAND^IBTRE(356.2,.17,X),1:"PHONE")
"RTN","IBTRC3",65,0)
 ;
"RTN","IBTRC3",66,0)
CP(DA,IBTLST) ; -- compute default contact phone number from last review
"RTN","IBTRC3",67,0)
 ; -- called from input templates
"RTN","IBTRC3",68,0)
 ;    input da     = current entry being edited
"RTN","IBTRC3",69,0)
 ;          ibtlst = last entry for this review as determine by $$LAST
"RTN","IBTRC3",70,0)
 ;
"RTN","IBTRC3",71,0)
 Q $P($G(^IBT(356.2,+$G(IBTLST),0)),"^",7)
"RTN","IBTRC3",72,0)
 ;
"RTN","IBTRC3",73,0)
AN(DA,IBTLST) ; -- compute default authorization number policy (call ref default removed with *458)
"RTN","IBTRC3",74,0)
 ; -- called from input templates
"RTN","IBTRC3",75,0)
 ;    input da     = current entry being edited
"RTN","IBTRC3",76,0)
 ;          ibtlst = last entry for this review as determine by $$LAST
"RTN","IBTRC3",77,0)
 ;
"RTN","IBTRC3",78,0)
 Q $P($G(^IBT(356.2,+$G(IBTLST),2)),"^",2)
"RTN","IBTRC3",79,0)
 ;N X
"RTN","IBTRC3",80,0)
 ;S X=$P(^IBT(356.2,DA,0),"^",9)
"RTN","IBTRC3",81,0)
 ;Q $E($S($L(X):X,1:$P($G(^IBT(356.2,+$G(IBTLST),0)),"^",28)),1,10)
"RTN","IBTRC3",82,0)
 ;
"RTN","IBTRC3",83,0)
APPEAL ; -- called from IBTRC, needed more room to compute
"RTN","IBTRC3",84,0)
 ;    info if an appeal
"RTN","IBTRC3",85,0)
 N DAYS S DAYS=""
"RTN","IBTRC3",86,0)
 S X=$$SETFLD^VALM1($$EXPAND^IBTRE(356.2,.29,$P(IBTRCD,"^",29)),X,"ACTION")
"RTN","IBTRC3",87,0)
 S DAYS=$P(IBTRCD,"^",25) I $P(IBTRCD,"^",29)=1,$P(IBTRCD,"^",10)=3,$O(^IBT(356.2,+IBTRC,14,0)) S DAYS=$$AP^IBTODD1(IBTRC)
"RTN","IBTRC3",88,0)
 S X=$$SETFLD^VALM1($J(DAYS,3),X,"DAYS")
"RTN","IBTRC3",89,0)
 S X=$$SETFLD^VALM1($$TPE(),X,"TYPE")
"RTN","IBTRC3",90,0)
 Q
"RTN","IBTRC3",91,0)
 ;
"RTN","IBTRC3",92,0)
TPE() ; -- add appeal type to type of action
"RTN","IBTRC3",93,0)
 N X
"RTN","IBTRC3",94,0)
 S X=$P(IBETYP,"^",3)
"RTN","IBTRC3",95,0)
 I $P(IBTRCD,"^",23) S X=X_"-"_$S($P(IBTRCD,"^",23)=1:"Clin",$P(IBTRCD,"^",23)=2:"Admin",1:"")
"RTN","IBTRC3",96,0)
 Q X
"RTN","IBTRCD")
0^20^B25352762^B24519897
"RTN","IBTRCD",1,0)
IBTRCD ;ALB/AAS - CLAIMS TRACKING - EXPAND CONTACTS SCREEN ; 02-JUL-1993
"RTN","IBTRCD",2,0)
 ;;2.0;INTEGRATED BILLING;**210,458**;21-MAR-94;Build 4
"RTN","IBTRCD",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRCD",4,0)
 ;
"RTN","IBTRCD",5,0)
% ;
"RTN","IBTRCD",6,0)
EN ; -- main entry point for IBT EXPAND/EDIT COMMUNICATIONS
"RTN","IBTRCD",7,0)
 I '$D(DT) D DT^DICRW
"RTN","IBTRCD",8,0)
 K XQORS,VALMEVL,IBTRC,IBTRD,IBTRV,IBTRN,DFN
"RTN","IBTRCD",9,0)
 I '$G(IBTRC) G EN^IBTRC
"RTN","IBTRCD",10,0)
 D EN^VALM("IBT EXPAND/EDIT COMMUNICATIONS")
"RTN","IBTRCD",11,0)
 Q
"RTN","IBTRCD",12,0)
 ;
"RTN","IBTRCD",13,0)
HDR ; -- header code
"RTN","IBTRCD",14,0)
 D PID^VADPT N IBXR
"RTN","IBTRCD",15,0)
 S VALMHDR(1)="Expanded Insurance Reviews for: "_$$PT^IBTUTL1(DFN)
"RTN","IBTRCD",16,0)
 S IBXR=$$ROIEVT^IBTRR1(IBTRN) I IBXR'="" S VALMHDR(1)=VALMHDR(1)_$J(" ",(60-$L(VALMHDR(1))))_"ROI: "_IBXR
"RTN","IBTRCD",17,0)
 S VALMHDR(2)="                           for: "_$$EXPAND^IBTRE(356,.18,$P(IBTRND,"^",18))_" on "_$$DAT1^IBOUTL($P(IBTRND,"^",6),"2P")
"RTN","IBTRCD",18,0)
 Q
"RTN","IBTRCD",19,0)
 ;
"RTN","IBTRCD",20,0)
INIT ; -- init variables and list array
"RTN","IBTRCD",21,0)
 N IBTRCD,IBTRCD1
"RTN","IBTRCD",22,0)
 K VALMQUIT
"RTN","IBTRCD",23,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBTRCD",24,0)
 D BLD,HDR
"RTN","IBTRCD",25,0)
 Q
"RTN","IBTRCD",26,0)
 ;
"RTN","IBTRCD",27,0)
BLD ; -- build display
"RTN","IBTRCD",28,0)
 K ^TMP("IBTRCD",$J),^TMP("IBTRCDDX",$J)
"RTN","IBTRCD",29,0)
 D KILL^VALM10()
"RTN","IBTRCD",30,0)
 S IBTRCD=$G(^IBT(356.2,IBTRC,0)),IBTRCD1=$G(^IBT(356.2,IBTRC,1))
"RTN","IBTRCD",31,0)
 S IBTRND=$G(^IBT(356,IBTRN,0))
"RTN","IBTRCD",32,0)
 F I=1:1:27 D BLANK^IBTRED(.I)
"RTN","IBTRCD",33,0)
 S VALMCNT=27
"RTN","IBTRCD",34,0)
 D ACTION,EN^IBTRCD0
"RTN","IBTRCD",35,0)
 Q
"RTN","IBTRCD",36,0)
 ;
"RTN","IBTRCD",37,0)
 ;
"RTN","IBTRCD",38,0)
ACTION ; -- Ins. Action infomation display
"RTN","IBTRCD",39,0)
 N OFFSET,START,TCODE,IBACTION,IBLCNT
"RTN","IBTRCD",40,0)
 S START=1,OFFSET=45,IBLCNT=0
"RTN","IBTRCD",41,0)
 D SET^IBCNSP(START,OFFSET," Action Information ",IORVON,IORVOFF)
"RTN","IBTRCD",42,0)
 D SET^IBCNSP(START+1,OFFSET,"   Type Contact: "_$$EXPAND^IBTRE(356.2,.04,$P(IBTRCD,"^",4)))
"RTN","IBTRCD",43,0)
 S TCODE=$$TCODE^IBTRC(IBTRC) I TCODE D @TCODE
"RTN","IBTRCD",44,0)
 Q
"RTN","IBTRCD",45,0)
10 ; -- pre-cert contact
"RTN","IBTRCD",46,0)
15 ; -- admission review
"RTN","IBTRCD",47,0)
20 ; -- urgent/emergent ins. contact
"RTN","IBTRCD",48,0)
25 ; -- snf/nhcu review
"RTN","IBTRCD",49,0)
30 ; -- continued stay contact
"RTN","IBTRCD",50,0)
35 ; -- inpt retrospective review
"RTN","IBTRCD",51,0)
 S IBLCNT=2
"RTN","IBTRCD",52,0)
 D SET^IBCNSP(START+IBLCNT,OFFSET,"         Action: "_$$EXPAND^IBTRE(356.2,.11,$P(IBTRCD,"^",11)))
"RTN","IBTRCD",53,0)
 S IBACTION=$P($G(^IBE(356.7,+$P(IBTRCD,"^",11),0)),"^",3)
"RTN","IBTRCD",54,0)
 S IBACTION=IBACTION+100 D @IBACTION
"RTN","IBTRCD",55,0)
 S IBLCNT=IBLCNT+1
"RTN","IBTRCD",56,0)
 Q
"RTN","IBTRCD",57,0)
 ;
"RTN","IBTRCD",58,0)
40 ; -- Discharge contact
"RTN","IBTRCD",59,0)
100 ; -- No type of action
"RTN","IBTRCD",60,0)
 Q
"RTN","IBTRCD",61,0)
50 ; -- outpatient treatment
"RTN","IBTRCD",62,0)
55 ; -- opt retrospective review
"RTN","IBTRCD",63,0)
 S IBLCNT=2
"RTN","IBTRCD",64,0)
 D SET^IBCNSP(START+IBLCNT,OFFSET," Opt Treatment: "_$$EXPAND^IBTRE(356.2,.26,$P(IBTRCD,"^",26)))
"RTN","IBTRCD",65,0)
 S IBLCNT=IBLCNT+1
"RTN","IBTRCD",66,0)
 D SET^IBCNSP(START+IBLCNT,OFFSET,"         Action: "_$$EXPAND^IBTRE(356.2,.11,$P(IBTRCD,"^",11)))
"RTN","IBTRCD",67,0)
 S IBLCNT=IBLCNT+1
"RTN","IBTRCD",68,0)
 D SET^IBCNSP(START+IBLCNT,OFFSET,"   Auth. Number: "_$$AUTHN^IBTRC(IBTRC,18))
"RTN","IBTRCD",69,0)
 ;D SET^IBCNSP(START+IBLCNT,OFFSET,"Treatment Auth: "_$$EXPAND^IBTRE(356.2,.27,$P(IBTRCD,"^",27)))
"RTN","IBTRCD",70,0)
 Q
"RTN","IBTRCD",71,0)
60 ; -- Appeal
"RTN","IBTRCD",72,0)
65 ; -- Nth appeal
"RTN","IBTRCD",73,0)
 D SET^IBCNSP(START+2,OFFSET,"    Appeal Type: "_$$EXPAND^IBTRE(356.2,.23,$P(IBTRCD,"^",23)))
"RTN","IBTRCD",74,0)
 D SET^IBCNSP(START+3,OFFSET,"    Case Status: "_$$EXPAND^IBTRE(356.2,.1,$P(IBTRCD,"^",10)))
"RTN","IBTRCD",75,0)
 D SET^IBCNSP(START+4,OFFSET,"No Days Pending: "_$$EXPAND^IBTRE(356.2,.25,$P(IBTRCD,"^",25)))
"RTN","IBTRCD",76,0)
 D SET^IBCNSP(START+5,OFFSET,"  Final Outcome: "_$$EXPAND^IBTRE(356.2,.29,$P(IBTRCD,"^",29)))
"RTN","IBTRCD",77,0)
 Q
"RTN","IBTRCD",78,0)
70 ; -- Patient
"RTN","IBTRCD",79,0)
80 ; -- Other
"RTN","IBTRCD",80,0)
85 ; -- Insurance verification
"RTN","IBTRCD",81,0)
 Q
"RTN","IBTRCD",82,0)
 ;
"RTN","IBTRCD",83,0)
110 ; -- approval actions
"RTN","IBTRCD",84,0)
 S IBLCNT=IBLCNT+1
"RTN","IBTRCD",85,0)
 D SET^IBCNSP(START+IBLCNT,OFFSET,"Authorized From: "_$S($P(IBTRCD1,"^",8):"ENTIRE VISIT",1:$$DAT1^IBOUTL($P(IBTRCD,"^",12))))
"RTN","IBTRCD",86,0)
 S IBLCNT=IBLCNT+1
"RTN","IBTRCD",87,0)
 D SET^IBCNSP(START+IBLCNT,OFFSET,"  Authorized To: "_$S($P(IBTRCD1,"^",8):"ENTIRE VISIT",1:$$DAT1^IBOUTL($P(IBTRCD,"^",13))))
"RTN","IBTRCD",88,0)
 S IBLCNT=IBLCNT+1
"RTN","IBTRCD",89,0)
 D SET^IBCNSP(START+IBLCNT,OFFSET,"Authorized Diag: "_$$DIAG^IBTRE6($P(IBTRCD,"^",14),1,$$TRNDATE^IBACSV($G(IBTRN))))
"RTN","IBTRCD",90,0)
 S IBLCNT=IBLCNT+1
"RTN","IBTRCD",91,0)
 D SET^IBCNSP(START+IBLCNT,OFFSET,"   Auth. Number: "_$$AUTHN^IBTRC(IBTRC,18))
"RTN","IBTRCD",92,0)
 Q
"RTN","IBTRCD",93,0)
120 ; -- denial actions
"RTN","IBTRCD",94,0)
 S IBLCNT=IBLCNT+1
"RTN","IBTRCD",95,0)
 D SET^IBCNSP(START+IBLCNT,OFFSET,"    Denied From: "_$S($P(IBTRCD1,"^",7):"ENTIRE VISIT",1:$$DAT1^IBOUTL($P(IBTRCD,"^",15))))
"RTN","IBTRCD",96,0)
 S IBLCNT=IBLCNT+1
"RTN","IBTRCD",97,0)
 D SET^IBCNSP(START+IBLCNT,OFFSET,"      Denied To: "_$S($P(IBTRCD1,"^",7):"ENTIRE VISIT",1:$$DAT1^IBOUTL($P(IBTRCD,"^",16))))
"RTN","IBTRCD",98,0)
 S IBI=0 F  S IBI=$O(^IBT(356.2,IBTRC,12,IBI)) Q:'IBI!(IBLCNT>6)  D
"RTN","IBTRCD",99,0)
 .S IBLCNT=IBLCNT+1
"RTN","IBTRCD",100,0)
 .D SET^IBCNSP(START+IBLCNT,OFFSET," Denial Reasons: "_$$EXPAND^IBTRE(356.212,.01,+$G(^IBT(356.2,IBTRC,12,IBI,0))))
"RTN","IBTRCD",101,0)
 Q
"RTN","IBTRCD",102,0)
130 ; -- penalty
"RTN","IBTRCD",103,0)
 S IBI=0 F  S IBI=$O(^IBT(356.2,IBTRC,13,IBI)) Q:'IBI!(IBLCNT>6)  D
"RTN","IBTRCD",104,0)
 .S IBLCNT=IBLCNT+1
"RTN","IBTRCD",105,0)
 .D SET^IBCNSP(START+IBLCNT,OFFSET,"        Penalty: "_$$EXPAND^IBTRE(356.213,.01,+$G(^IBT(356.2,IBTRC,13,IBI,0))))
"RTN","IBTRCD",106,0)
 Q
"RTN","IBTRCD",107,0)
140 ; -- case pending
"RTN","IBTRCD",108,0)
 S IBLCNT=IBLCNT+1
"RTN","IBTRCD",109,0)
 D SET^IBCNSP(START+IBLCNT,OFFSET,"   Case Pending: "_$$EXPAND^IBTRE(356.2,.2,$P(IBTRCD,"^",20)))
"RTN","IBTRCD",110,0)
 Q
"RTN","IBTRCD",111,0)
150 ; -- no coverage
"RTN","IBTRCD",112,0)
 S IBLCNT=IBLCNT+1
"RTN","IBTRCD",113,0)
 D SET^IBCNSP(START+IBLCNT,OFFSET,"    No Coverage: "_$$EXPAND^IBTRE(356.2,.21,$P(IBTRCD,"^",21)))
"RTN","IBTRCD",114,0)
 Q
"RTN","IBTRCD",115,0)
 ;
"RTN","IBTRCD",116,0)
 ;
"RTN","IBTRCD",117,0)
HELP ; -- help code
"RTN","IBTRCD",118,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBTRCD",119,0)
 Q
"RTN","IBTRCD",120,0)
 ;
"RTN","IBTRCD",121,0)
EXIT ; -- exit code
"RTN","IBTRCD",122,0)
 K VALMQUIT,IBTRC,IBTRCD,IBTRCD1
"RTN","IBTRCD",123,0)
 K ^TMP("IBTRCD",$J),^TMP("IBTRCDDX",$J)
"RTN","IBTRCD",124,0)
 D CLEAN^VALM10,FULL^VALM1
"RTN","IBTRCD",125,0)
 Q
"RTN","IBTRCD0")
0^21^B16113018^B16086108
"RTN","IBTRCD0",1,0)
IBTRCD0 ;ALB/AAS - CLAIMS TRACKING - EXPAND CONTACTS SCREEN - CONT ; 02-JUL-1993
"RTN","IBTRCD0",2,0)
 ;;2.0;INTEGRATED BILLING;**458**;21-MAR-94;Build 4
"RTN","IBTRCD0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRCD0",4,0)
 ;
"RTN","IBTRCD0",5,0)
% ;
"RTN","IBTRCD0",6,0)
EN D CONT,APPEAL,INS,COMM,USER
"RTN","IBTRCD0",7,0)
 Q
"RTN","IBTRCD0",8,0)
 ;
"RTN","IBTRCD0",9,0)
CONT ; -- Contact infomation display
"RTN","IBTRCD0",10,0)
 N OFFSET,START
"RTN","IBTRCD0",11,0)
 S START=1,OFFSET=2
"RTN","IBTRCD0",12,0)
CON1 D SET^IBCNSP(START,OFFSET," Contact Information ",IORVON,IORVOFF)
"RTN","IBTRCD0",13,0)
 D SET^IBCNSP(START+1,OFFSET,"    Contact Date: "_$$DAT1^IBOUTL(+IBTRCD,"2P"))
"RTN","IBTRCD0",14,0)
 D SET^IBCNSP(START+2,OFFSET,"Person Contacted: "_$E($P(IBTRCD,"^",6),1,20))
"RTN","IBTRCD0",15,0)
 D SET^IBCNSP(START+3,OFFSET,"  Contact Method: "_$$EXPAND^IBTRE(356.2,.17,$P(IBTRCD,"^",17)))
"RTN","IBTRCD0",16,0)
 D SET^IBCNSP(START+4,OFFSET,"Call Ref. Number: "_$$CREFN^IBTRC(+$G(IBTRC),18))
"RTN","IBTRCD0",17,0)
 D SET^IBCNSP(START+5,OFFSET,"     Review Date: "_$$DAT1^IBOUTL($P(IBTRCD,"^",24)))
"RTN","IBTRCD0",18,0)
 I '$P(IBTRCD,"^",2) D SET^IBCNSP(START+2,OFFSET,"Patient Contacted: "_$P($G(^DPT(+$P(IBTRCD,"^",5),0)),"^"))
"RTN","IBTRCD0",19,0)
 Q
"RTN","IBTRCD0",20,0)
 ;
"RTN","IBTRCD0",21,0)
APPEAL ; -- Appeals address infomation display
"RTN","IBTRCD0",22,0)
 N OFFSET,START
"RTN","IBTRCD0",23,0)
 S START=15,OFFSET=2
"RTN","IBTRCD0",24,0)
AP1 D SET^IBCNSP(START,OFFSET," Appeal Address Information ",IORVON,IORVOFF)
"RTN","IBTRCD0",25,0)
 D SET^IBCNSP(START+1,OFFSET,"  Ins. Co. Name: "_$E($P($G(^DIC(36,+$P(IBTRCD,"^",8),0)),"^"),1,24))
"RTN","IBTRCD0",26,0)
 N APLAD S APLAD=$G(^DIC(36,+$P(IBTRCD,"^",8),.14))
"RTN","IBTRCD0",27,0)
 D SET^IBCNSP(START+2,OFFSET," Alternate Name: "_$P(APLAD,"^",7))
"RTN","IBTRCD0",28,0)
 D SET^IBCNSP(START+3,OFFSET,"  Street line 1: "_$P(APLAD,"^",1))
"RTN","IBTRCD0",29,0)
 D SET^IBCNSP(START+4,OFFSET,"  Street line 2: "_$P(APLAD,"^",2))
"RTN","IBTRCD0",30,0)
 D SET^IBCNSP(START+5,OFFSET,"  Street line 3: "_$P(APLAD,"^",3))
"RTN","IBTRCD0",31,0)
 D SET^IBCNSP(START+6,OFFSET," City/State/Zip: "_$P(APLAD,"^",4)_$S($P(APLAD,"^",4)]"":", ",1:"")_$P($G(^DIC(5,+$P(APLAD,"^",5),0)),"^",2)_"  "_$P(APLAD,"^",6))
"RTN","IBTRCD0",32,0)
 Q
"RTN","IBTRCD0",33,0)
 ;
"RTN","IBTRCD0",34,0)
INS ; -- Ins. Co. infomation display
"RTN","IBTRCD0",35,0)
 N OFFSET,START,IBCDFND,IBPHONE
"RTN","IBTRCD0",36,0)
 S START=9,OFFSET=2
"RTN","IBTRCD0",37,0)
ENINS ; -- entry point, must set start and offset
"RTN","IBTRCD0",38,0)
 D SET^IBCNSP(START,OFFSET+25," Insurance Policy Information ",IORVON,IORVOFF)
"RTN","IBTRCD0",39,0)
 D SET^IBCNSP(START+1,OFFSET,"   Ins. Co. Name: "_$E($P($G(^DIC(36,+$P(IBTRCD,"^",8),0)),"^"),1,24))
"RTN","IBTRCD0",40,0)
 S IBCDFND=$G(^DPT(DFN,.312,+$P(IBTRCD1,"^",5),0))
"RTN","IBTRCD0",41,0)
 D SET^IBCNSP(START+2,OFFSET,"    Group Number: "_$$GRP^IBCNS($P(IBCDFND,"^",18)))
"RTN","IBTRCD0",42,0)
 D SET^IBCNSP(START+3,OFFSET," Whose Insurance: "_$$EXPAND^IBTRE(2.312,6,$P(IBCDFND,"^",6)))
"RTN","IBTRCD0",43,0)
 S IBPHONE=$G(^DIC(36,+$P(IBTRCD,"^",8),.13))
"RTN","IBTRCD0",44,0)
 S IBPHONE=$S($P(IBPHONE,"^",3)'="":$P(IBPHONE,"^",3),1:$P(IBPHONE,"^"))
"RTN","IBTRCD0",45,0)
 D SET^IBCNSP(START+4,OFFSET,"  Pre-Cert Phone: "_IBPHONE)
"RTN","IBTRCD0",46,0)
 D INS1
"RTN","IBTRCD0",47,0)
 Q
"RTN","IBTRCD0",48,0)
INS1 ; -- second site of Ins. info
"RTN","IBTRCD0",49,0)
 S OFFSET=45
"RTN","IBTRCD0",50,0)
 D SET^IBCNSP(START+1,OFFSET,"Subscriber Name: "_$P(IBCDFND,"^",17))
"RTN","IBTRCD0",51,0)
 D SET^IBCNSP(START+2,OFFSET,"  Subscriber ID: "_$P(IBCDFND,"^",2))
"RTN","IBTRCD0",52,0)
 D SET^IBCNSP(START+3,OFFSET," Effective Date: "_$$DAT1^IBOUTL($P(IBCDFND,"^",8),"2P"))
"RTN","IBTRCD0",53,0)
 D SET^IBCNSP(START+4,OFFSET,"Expiration Date: "_$$DAT1^IBOUTL($P(IBCDFND,"^",4),"2P"))
"RTN","IBTRCD0",54,0)
 Q
"RTN","IBTRCD0",55,0)
 ;
"RTN","IBTRCD0",56,0)
USER ; -- display user information
"RTN","IBTRCD0",57,0)
 N OFFSET,START
"RTN","IBTRCD0",58,0)
 S START=15,OFFSET=45
"RTN","IBTRCD0",59,0)
USER1 D SET^IBCNSP(START,OFFSET," User Information ",IORVON,IORVOFF)
"RTN","IBTRCD0",60,0)
 D SET^IBCNSP(START+1,OFFSET,"    Entered By: "_$P($G(^VA(200,+$P(IBTRCD1,"^",2),0)),"^"))
"RTN","IBTRCD0",61,0)
 D SET^IBCNSP(START+2,OFFSET,"    Entered On: "_$$DAT1^IBOUTL(+$P(IBTRCD1,"^"),"2P"))
"RTN","IBTRCD0",62,0)
 D SET^IBCNSP(START+3,OFFSET,"Last Edited By: "_$P($G(^VA(200,+$P(IBTRCD1,"^",4),0)),"^"))
"RTN","IBTRCD0",63,0)
 D SET^IBCNSP(START+4,OFFSET,"Last Edited On: "_$$DAT1^IBOUTL(+$P(IBTRCD1,"^",3),"2P"))
"RTN","IBTRCD0",64,0)
 Q
"RTN","IBTRCD0",65,0)
 ;
"RTN","IBTRCD0",66,0)
COMM ; -- Comment display
"RTN","IBTRCD0",67,0)
 N OFFSET,START,I,IBLCNT
"RTN","IBTRCD0",68,0)
 S START=23,OFFSET=2
"RTN","IBTRCD0",69,0)
COM1 D SET^IBCNSP(START,OFFSET," Comments ",IORVON,IORVOFF)
"RTN","IBTRCD0",70,0)
 S (IBLCNT,IBI)=0 F  S IBI=$O(^IBT(356.2,IBTRC,11,IBI)) Q:IBI<1  D
"RTN","IBTRCD0",71,0)
 .S IBLCNT=IBLCNT+1
"RTN","IBTRCD0",72,0)
 .D SET^IBCNSP(START+IBLCNT,OFFSET,"  "_$E($G(^IBT(356.2,IBTRC,11,IBI,0)),1,80))
"RTN","IBTRCD0",73,0)
 D SC
"RTN","IBTRCD0",74,0)
 Q
"RTN","IBTRCD0",75,0)
 ;
"RTN","IBTRCD0",76,0)
SC ; -- Service connected conditions
"RTN","IBTRCD0",77,0)
 S START=START+2+IBLCNT,OFFSET=2,IBCNT=0,IBLCNT=0
"RTN","IBTRCD0",78,0)
 D SC1^IBTRED01
"RTN","IBTRCD0",79,0)
 Q
"RTN","IBTRCD1")
0^22^B27554841^B26536590
"RTN","IBTRCD1",1,0)
IBTRCD1 ;ALB/AAS/BGA - CLAIMS TRACKING INS ACTION EDIT ;11/8/06 9:34am
"RTN","IBTRCD1",2,0)
 ;;2.0;INTEGRATED BILLING;**10,359,413,458**;21-MAR-94;Build 4
"RTN","IBTRCD1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRCD1",4,0)
 ;
"RTN","IBTRCD1",5,0)
% G ^IBTRC
"RTN","IBTRCD1",6,0)
 ;
"RTN","IBTRCD1",7,0)
QE ; -- Quick edit
"RTN","IBTRCD1",8,0)
 N IBXX,VALMY,DA,DR,DIC,DIE
"RTN","IBTRCD1",9,0)
 D QE1^IBTRC1
"RTN","IBTRCD1",10,0)
 D BLD^IBTRCD
"RTN","IBTRCD1",11,0)
 S VALMBCK="R"
"RTN","IBTRCD1",12,0)
 Q
"RTN","IBTRCD1",13,0)
 ;
"RTN","IBTRCD1",14,0)
NX(IBTMPNM,BLD) ; -- edit next template
"RTN","IBTRCD1",15,0)
 N IBXX,VALMY
"RTN","IBTRCD1",16,0)
 D EN^VALM(IBTMPNM)
"RTN","IBTRCD1",17,0)
 I '$D(IBFASTXT) D:'$G(BLD) BLD^IBTRCD
"RTN","IBTRCD1",18,0)
 I IBTMPNM="IBCNS VIEW PAT INS" D:$G(BLD)=1 BLD^IBTRE ;REBUILD LIST
"RTN","IBTRCD1",19,0)
 S VALMBCK="R"
"RTN","IBTRCD1",20,0)
 Q
"RTN","IBTRCD1",21,0)
 ;
"RTN","IBTRCD1",22,0)
EDIT(DR,BLD) ; -- edit entry point for claims tracking reviews
"RTN","IBTRCD1",23,0)
 ; -- Input   IBTEMP = template name or dr string
"RTN","IBTRCD1",24,0)
 ;               BLD = any non-zero value if calling routine is doing own
"RTN","IBTRCD1",25,0)
 ;                      rebuild
"RTN","IBTRCD1",26,0)
 ;
"RTN","IBTRCD1",27,0)
 N IBDIF,DA,DIC,DIE,DIR,X,Y,IBTLST
"RTN","IBTRCD1",28,0)
 D FULL^VALM1 W !
"RTN","IBTRCD1",29,0)
 D SAVE
"RTN","IBTRCD1",30,0)
 S DIE="^IBT(356.2,",DA=IBTRC
"RTN","IBTRCD1",31,0)
 L +^IBT(356.2,+IBTRC):5 I '$T D LOCKED G EDITQ
"RTN","IBTRCD1",32,0)
 D ^DIE K DA,DR,DIC,DIE
"RTN","IBTRCD1",33,0)
 I '$D(IBCON) D CON K IBCON
"RTN","IBTRCD1",34,0)
 D COMP
"RTN","IBTRCD1",35,0)
 I IBDIF=1 D UPDATE
"RTN","IBTRCD1",36,0)
 L -^IBT(356.2,+IBTRC)
"RTN","IBTRCD1",37,0)
 D BLD^IBTRCD:'$G(BLD)
"RTN","IBTRCD1",38,0)
EDITQ K ^TMP($J,"IBT")
"RTN","IBTRCD1",39,0)
 S VALMBCK="R"
"RTN","IBTRCD1",40,0)
 Q
"RTN","IBTRCD1",41,0)
 ;
"RTN","IBTRCD1",42,0)
SAVE ; -- Save the global before editing
"RTN","IBTRCD1",43,0)
 K ^TMP($J,"IBT")
"RTN","IBTRCD1",44,0)
 S ^TMP($J,"IBT",356.2,IBTRC,0)=$G(^IBT(356.2,IBTRC,0))
"RTN","IBTRCD1",45,0)
 S ^TMP($J,"IBT",356.2,IBTRC,1)=$G(^IBT(356.2,IBTRC,1))
"RTN","IBTRCD1",46,0)
 S ^TMP($J,"IBT",356.2,IBTRC,2)=$G(^IBT(356.2,IBTRC,2))
"RTN","IBTRCD1",47,0)
 S ^TMP($J,"IBT",356.2,IBTRC,11,0)=$G(^IBT(356.2,IBTRC,11,0))
"RTN","IBTRCD1",48,0)
 S ^TMP($J,"IBT",356.2,IBTRC,12,0)=$G(^IBT(356.2,IBTRC,12,0))
"RTN","IBTRCD1",49,0)
 S ^TMP($J,"IBT",356.2,IBTRC,13,0)=$G(^IBT(356.2,IBTRC,13,0))
"RTN","IBTRCD1",50,0)
 Q
"RTN","IBTRCD1",51,0)
 ;
"RTN","IBTRCD1",52,0)
COMP ; -- Compare before editing with globals
"RTN","IBTRCD1",53,0)
 S IBDIF=0
"RTN","IBTRCD1",54,0)
 I $G(^IBT(356.2,IBTRC,0))'=$G(^TMP($J,"IBT",356.2,IBTRC,0)) S IBDIF=1 Q
"RTN","IBTRCD1",55,0)
 I $G(^IBT(356.2,IBTRC,1))'=$G(^TMP($J,"IBT",356.2,IBTRC,1)) S IBDIF=1 Q
"RTN","IBTRCD1",56,0)
 I $G(^IBT(356.2,IBTRC,2))'=$G(^TMP($J,"IBT",356.2,IBTRC,2)) S IBDIF=1 Q
"RTN","IBTRCD1",57,0)
 I $G(^IBT(356.2,IBTRC,11,0))'=$G(^TMP($J,"IBT",356.2,IBTRC,11,0)) S IBDIF=1 Q
"RTN","IBTRCD1",58,0)
 I $G(^IBT(356.2,IBTRC,12,0))'=$G(^TMP($J,"IBT",356.2,IBTRC,12,0)) S IBDIF=1 Q
"RTN","IBTRCD1",59,0)
 I $G(^IBT(356.2,IBTRC,13,0))'=$G(^TMP($J,"IBT",356.2,IBTRC,13,0)) S IBDIF=1 Q
"RTN","IBTRCD1",60,0)
 Q
"RTN","IBTRCD1",61,0)
 ;
"RTN","IBTRCD1",62,0)
UPDATE ; -- enter date and user if editing has taken place
"RTN","IBTRCD1",63,0)
 ;    entry locked during edit lock not needed here
"RTN","IBTRCD1",64,0)
 S DIE="^IBT(356.2,",DA=IBTRC
"RTN","IBTRCD1",65,0)
 S DR="1.03///NOW;1.04////"_DUZ
"RTN","IBTRCD1",66,0)
 D ^DIE K DA,DR,DIC,DIE
"RTN","IBTRCD1",67,0)
 Q
"RTN","IBTRCD1",68,0)
 ;
"RTN","IBTRCD1",69,0)
LOCKED ; -- write locked message
"RTN","IBTRCD1",70,0)
 Q:$D(ZTQUEUED)
"RTN","IBTRCD1",71,0)
 ;Suppress Writes & PAUSE^VALM1 call when used via ICB interface
"RTN","IBTRCD1",72,0)
 Q:$G(IBSUPRES)>0
"RTN","IBTRCD1",73,0)
 W !!,"Sorry, another user currently editing this entry."
"RTN","IBTRCD1",74,0)
 W !,"Try again later."
"RTN","IBTRCD1",75,0)
 D PAUSE^VALM1
"RTN","IBTRCD1",76,0)
 Q
"RTN","IBTRCD1",77,0)
 ;
"RTN","IBTRCD1",78,0)
CON ; -- consistency checker for insurance reviews
"RTN","IBTRCD1",79,0)
 N I,J,X,Y,DA,DR,DIC,DIE,IBI,IBDEL,IBACTION
"RTN","IBTRCD1",80,0)
 S IBCON=1 Q:'$D(^IBT(356.2,IBTRC,0))
"RTN","IBTRCD1",81,0)
 S IBACTION=$P($G(^IBE(356.7,+$P(^IBT(356.2,IBTRC,0),"^",11),0)),"^",3)
"RTN","IBTRCD1",82,0)
 I $G(IBACTION)="" S IBACTION=99
"RTN","IBTRCD1",83,0)
 ;
"RTN","IBTRCD1",84,0)
 ; -- if action and type the same okay, check nxt rv. dates
"RTN","IBTRCD1",85,0)
 I $P($G(^IBT(356.2,IBTRC,0)),"^",4)=$P($G(^TMP($J,"IBT",356.2,IBTRC,0)),"^",4),$P($G(^IBT(356.2,IBTRC,0)),"^",11)=$P($G(^TMP($J,"IBT",356.2,IBTRC,0)),"^",11) G NXRV
"RTN","IBTRCD1",86,0)
 ;
"RTN","IBTRCD1",87,0)
 ; -- if action different
"RTN","IBTRCD1",88,0)
 I $P($G(^TMP($J,"IBT",356.2,IBTRC,0)),"^",11)="" Q  ; no previous action
"RTN","IBTRCD1",89,0)
 I $P($G(^IBT(356.2,IBTRC,0)),"^",11)'=$P($G(^TMP($J,"IBT",356.2,IBTRC,0)),"^",11) D
"RTN","IBTRCD1",90,0)
 .S DR=$P($T(@(IBACTION)),";;",2,99)
"RTN","IBTRCD1",91,0)
 .I DR'="" D EDIT(DR,1)
"RTN","IBTRCD1",92,0)
 .I IBACTION'=10 S $P(^IBT(356.2,IBTRC,0),"^",12,13)="^"
"RTN","IBTRCD1",93,0)
 .I IBACTION'=20 S $P(^IBT(356.2,IBTRC,0),"^",15,16)="^"
"RTN","IBTRCD1",94,0)
 .W !,"WARNING: I detected you changed the Action on this review and deleted",!,"data associated with the previous action." H 3
"RTN","IBTRCD1",95,0)
 .Q
"RTN","IBTRCD1",96,0)
 ; -- if not denial and denial reasons delete
"RTN","IBTRCD1",97,0)
 I $O(^IBT(356.2,IBTRC,12,0)),$G(IBACTION)'=20 D
"RTN","IBTRCD1",98,0)
 .S IBI=0 F  S IBI=$O(^IBT(356.2,IBTRC,12,IBI)) Q:'IBI  S DA=IBI,DA(1)=IBTRC,DIK="^IBT(356.2,"_IBTRC_",12," D ^DIK
"RTN","IBTRCD1",99,0)
 ;
"RTN","IBTRCD1",100,0)
 ; -- if not penalty and penalty reasons delete
"RTN","IBTRCD1",101,0)
 I $O(^IBT(356.2,IBTRC,13,0)),$G(IBACTION)'=30 D
"RTN","IBTRCD1",102,0)
 .S IBI=0 F  S IBI=$O(^IBT(356.2,IBTRC,13,IBI)) Q:'IBI  S DA=IBI,DA(1)=IBTRC,DIK="^IBT(356.2,"_IBTRC_",13," D ^DIK
"RTN","IBTRCD1",103,0)
 .Q
"RTN","IBTRCD1",104,0)
 ;
"RTN","IBTRCD1",105,0)
NXRV ; -- check Next Review Dates
"RTN","IBTRCD1",106,0)
 N IBI0,IBIX
"RTN","IBTRCD1",107,0)
 I '$D(IBTRN) N IBTRN S IBTRN=$P($G(^IBT(356.2,+$G(IBTRC),0)),"^",2)
"RTN","IBTRCD1",108,0)
 Q:'$G(IBTRN)
"RTN","IBTRCD1",109,0)
 S IBI=0 F  S IBI=$O(^IBT(356.2,"C",IBTRN,IBI)) Q:'IBI  D
"RTN","IBTRCD1",110,0)
 .I $P($G(^IBT(356.2,IBI,0)),"^",24) D
"RTN","IBTRCD1",111,0)
 ..S IBI0=$G(^(0))
"RTN","IBTRCD1",112,0)
 ..S IBI(IBI)=$$DAT1^IBOUTL($P(IBI0,U,24))_"^"_$P($G(^DIC(36,+$P(IBI0,U,8),0)),U,1)_"^"_$P($G(^IBE(356.11,+$P(IBI0,U,4),0)),U,3)
"RTN","IBTRCD1",113,0)
 ..Q
"RTN","IBTRCD1",114,0)
 .Q
"RTN","IBTRCD1",115,0)
 I $O(IBI(0)) D ASKDEL I IBDEL D
"RTN","IBTRCD1",116,0)
 .I $P(^IBT(356.2,IBTRC,0),U,24)!$O(IBI(+$O(IBI(0)))) D
"RTN","IBTRCD1",117,0)
 ..W !!,?3,"WARNING: This patient has the following multiple Next Review Dates: "
"RTN","IBTRCD1",118,0)
 ..W !!!,?5,"REVIEW",?18,"INSURANCE COMPANY",?45,"TYPE OF CONTACT",?65,"NEXT REV. DATE"
"RTN","IBTRCD1",119,0)
 ..W !,?5,$TR($J(" ",IOM-5)," ","=")
"RTN","IBTRCD1",120,0)
 ..S IBIX=0 F  S IBIX=$O(IBI(IBIX)) Q:'IBIX  D
"RTN","IBTRCD1",121,0)
 ...W !,?5,$$DAT1^IBOUTL(+^IBT(356.2,IBIX,0)),?18,$E($P(IBI(IBIX),U,2),1,23),?45,$P(IBI(IBIX),U,3),?65,$P(IBI(IBIX),U,1)
"RTN","IBTRCD1",122,0)
 ...Q
"RTN","IBTRCD1",123,0)
 ..W !,?5,$TR($J(" ",IOM-5)," ","=") S DIR("A")="Press RETURN to continue" D PAUSE^IBOUTL Q
"RTN","IBTRCD1",124,0)
 Q
"RTN","IBTRCD1",125,0)
 ;
"RTN","IBTRCD1",126,0)
ASKDEL ; -- ask if okay to delete next review dates
"RTN","IBTRCD1",127,0)
 S IBDEL=1
"RTN","IBTRCD1",128,0)
 Q
"RTN","IBTRCD1",129,0)
 ;
"RTN","IBTRCD1",130,0)
10 ;;1.07///@;.2///@;.21///@
"RTN","IBTRCD1",131,0)
20 ;;.14///@;1.08///@;.2///@;21///@;2.02///@
"RTN","IBTRCD1",132,0)
30 ;;.14///@;1.07///@;1.08///@;.2///@;21///@;2.02///@
"RTN","IBTRCD1",133,0)
40 ;;.14///@;1.07///@;1.08///@;21///@;2.02///@
"RTN","IBTRCD1",134,0)
50 ;;.14///@;1.07///@;1.08///@;.2///@;2.02///@
"RTN","IBTRCD1",135,0)
99 ;;.14///@;1.07///@;1.08///@;.2///@;21///@;2.02///@
"RTN","IBTRD")
0^23^B26257163^B25402753
"RTN","IBTRD",1,0)
IBTRD ;ALB/AAS - CLAIMS TRACKING - DENIAL/ APPEALS ; 10-AUG-1993
"RTN","IBTRD",2,0)
 ;;2.0;INTEGRATED BILLING;**1,199,458**;21-MAR-94;Build 4
"RTN","IBTRD",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRD",4,0)
 ;
"RTN","IBTRD",5,0)
% ;
"RTN","IBTRD",6,0)
EN ; -- main entry point for IBT APPEAL/DENAIL EDITOR
"RTN","IBTRD",7,0)
 I '$D(DT) D DT^DICRW
"RTN","IBTRD",8,0)
 K XQORS,VALMEVL,IBTRD,DFN,IBCNS,IBTRN,IBTRV,IBTRC,IBFASTXT,VALMQUIT
"RTN","IBTRD",9,0)
 D ASK
"RTN","IBTRD",10,0)
 G:$D(VALMQUIT) ENQ
"RTN","IBTRD",11,0)
 I IBTRD["DPT(" S IBTYPE="P",DFN=+IBTRD D EN^VALM("IBT APPEAL/DENIAL EDITOR") G ENQ
"RTN","IBTRD",12,0)
 I IBTRD["DIC(" S IBTYPE="I",IBCNS=+IBTRD D EN^VALM("IBT APPEAL/DENIAL INS EDITOR")
"RTN","IBTRD",13,0)
ENQ K XQORS,VALMEVL,IBTRD,DFN,IBCNS,IBTRN,IBTRV,IBTRC,IBFASTXT,VALMQUIT
"RTN","IBTRD",14,0)
 K IBAMT,IBAPR,IBADG,IBDA,IBDGCR,IBDGCRU1,IBDV,IBETYP,IBETYPD,IBI,IBICD,IBLCNT,IBSEL,IBT,IBTEXT,IBTNOD,IBTSAV,VAUTD
"RTN","IBTRD",15,0)
 K IBAPEAL,IBCDFN,IBCNT,IBDEN,IBDENIAL,IBDENIAL,IBPARNT,IBPEN,IBPENAL,IBTCOD,IBTRDD,IBTRSV,IBTYPE,VAINDT,VA,VALMBCK,OFFSET,I1,I3,IBNEW,IBDENT,IBOE,Z1,T,SDCNT
"RTN","IBTRD",16,0)
 D KVAR^VADPT
"RTN","IBTRD",17,0)
 Q
"RTN","IBTRD",18,0)
 ;
"RTN","IBTRD",19,0)
HDR ; -- header code
"RTN","IBTRD",20,0)
 I $G(IBTYPE)="P" D HDRP
"RTN","IBTRD",21,0)
 I $G(IBTYPE)="I" D HDRI
"RTN","IBTRD",22,0)
 Q
"RTN","IBTRD",23,0)
 ;
"RTN","IBTRD",24,0)
HDRI ; -- header code for by ins. co.
"RTN","IBTRD",25,0)
 S VALMHDR(1)="Denials and Appeals for: "_$P(^DIC(36,+IBCNS,0),"^")
"RTN","IBTRD",26,0)
 S VALMHDR(2)=" "
"RTN","IBTRD",27,0)
 Q
"RTN","IBTRD",28,0)
 ;
"RTN","IBTRD",29,0)
HDRP ; -- header code for by pat.
"RTN","IBTRD",30,0)
 D PID^VADPT N IBXR
"RTN","IBTRD",31,0)
 S VALMHDR(1)="Denials and Appeals for: "_$$PT^IBTUTL1(DFN)
"RTN","IBTRD",32,0)
 S IBXR=$$ROIPAT^IBTRR1(DFN,DT) I IBXR'="" S VALMHDR(1)=VALMHDR(1)_$J(" ",(70-$L(VALMHDR(1))))_"ROI: "_IBXR
"RTN","IBTRD",33,0)
 S VALMHDR(2)=" "
"RTN","IBTRD",34,0)
 Q
"RTN","IBTRD",35,0)
 ;
"RTN","IBTRD",36,0)
INIT ; -- init variables and list array
"RTN","IBTRD",37,0)
 S U="^",VALMCNT=0,VALMBG=1
"RTN","IBTRD",38,0)
 K ^TMP("IBTRC",$J),^TMP("IBTRCDX",$J)
"RTN","IBTRD",39,0)
 K I,X,XQORNOD,DA,DR,DIE,DNM,DQ,IBTRC
"RTN","IBTRD",40,0)
 I '$G(IBTRD),$G(DFN) S IBTRD=DFN_";DPT("
"RTN","IBTRD",41,0)
 I '$G(IBTRD) S VALMQUIT=""
"RTN","IBTRD",42,0)
 S IBTRSV=""
"RTN","IBTRD",43,0)
 Q:$D(VALMQUIT)
"RTN","IBTRD",44,0)
 ;
"RTN","IBTRD",45,0)
BLD ; -- build list
"RTN","IBTRD",46,0)
 K ^TMP("IBTRD",$J),^TMP("IBTRDDX",$J)
"RTN","IBTRD",47,0)
 N IBI,J,IBTRC,IBTRCD,IBTRCD1,IBTRN
"RTN","IBTRD",48,0)
 I IBTRD["DPT(" S IBTYPE="P",DFN=+IBTRD D BLDP
"RTN","IBTRD",49,0)
 I IBTRD["DIC(" S IBTYPE="I",IBCNS=+IBTRD D BLDI
"RTN","IBTRD",50,0)
 Q
"RTN","IBTRD",51,0)
 ;
"RTN","IBTRD",52,0)
BLDI ; -- Build list of appeals/denials by ins. co.
"RTN","IBTRD",53,0)
 D HDRI
"RTN","IBTRD",54,0)
 S (IBTRC,IBCNT,VALMCNT)=0
"RTN","IBTRD",55,0)
 S IBDEN=$O(^IBE(356.7,"ACODE",20,0))
"RTN","IBTRD",56,0)
 S IBTRC=0 F  S IBTRC=$O(^IBT(356.2,"AIACT",IBCNS,IBDEN,IBTRC)) Q:'IBTRC  D 1
"RTN","IBTRD",57,0)
 S IBPEN=$O(^IBE(356.7,"ACODE",30,0))
"RTN","IBTRD",58,0)
 S IBTRC=0 F  S IBTRC=$O(^IBT(356.2,"AIACT",IBCNS,IBPEN,IBTRC)) Q:'IBTRC  D 1
"RTN","IBTRD",59,0)
 Q
"RTN","IBTRD",60,0)
 ;
"RTN","IBTRD",61,0)
BLDP ; -- Build list of appeals/denials by patient
"RTN","IBTRD",62,0)
 D HDRP
"RTN","IBTRD",63,0)
 S (IBTRC,IBCNT,VALMCNT)=0
"RTN","IBTRD",64,0)
 S VALMSG=$$MSG^IBTUTL3(DFN)
"RTN","IBTRD",65,0)
 S IBDEN=$O(^IBE(356.7,"ACODE",20,0))
"RTN","IBTRD",66,0)
 S IBTRC=0 F  S IBTRC=$O(^IBT(356.2,"APACT",DFN,IBDEN,IBTRC)) Q:'IBTRC  D 1
"RTN","IBTRD",67,0)
 S IBPEN=$O(^IBE(356.7,"ACODE",30,0))
"RTN","IBTRD",68,0)
 S IBTRC=0 F  S IBTRC=$O(^IBT(356.2,"APACT",DFN,IBPEN,IBTRC)) Q:'IBTRC  D 1
"RTN","IBTRD",69,0)
 Q
"RTN","IBTRD",70,0)
1 ; -- first add denial, then add appeal
"RTN","IBTRD",71,0)
 S IBTRN=$P(^IBT(356.2,+IBTRC,0),"^",2)
"RTN","IBTRD",72,0)
 S IBTRSV=+IBTRC
"RTN","IBTRD",73,0)
 D 2
"RTN","IBTRD",74,0)
 N IBTRC,IBTRCD,IBTRCD1
"RTN","IBTRD",75,0)
 S IBAPEAL=$O(^IBE(356.11,"ACODE",60,0)) ; find appeals
"RTN","IBTRD",76,0)
 S IBTRC=0 F  S IBTRC=$O(^IBT(356.2,"AP",IBTRSV,IBTRC)) Q:'IBTRC  D 2
"RTN","IBTRD",77,0)
 ;
"RTN","IBTRD",78,0)
 Q
"RTN","IBTRD",79,0)
2 ; -- add items to list
"RTN","IBTRD",80,0)
 S IBTRCD=$G(^IBT(356.2,+IBTRC,0))
"RTN","IBTRD",81,0)
 S IBTRCD1=$G(^IBT(356.2,+IBTRC,1))
"RTN","IBTRD",82,0)
 Q:'+$P(IBTRCD,"^",19)  ;quit if inactive
"RTN","IBTRD",83,0)
 ;
"RTN","IBTRD",84,0)
 ; -- if not the denial, must be from parent
"RTN","IBTRD",85,0)
 I IBTRC'=IBTRSV&($P(IBTRCD,"^",18)'=IBTRSV) Q
"RTN","IBTRD",86,0)
 ;
"RTN","IBTRD",87,0)
 S IBCNT=IBCNT+1
"RTN","IBTRD",88,0)
 W "."
"RTN","IBTRD",89,0)
 I IBTYPE="I" S DFN=$P(IBTRCD,"^",5) D PID^VADPT
"RTN","IBTRD",90,0)
 S X=""
"RTN","IBTRD",91,0)
 S X=$$SETFLD^VALM1(IBCNT,X,"NUMBER")
"RTN","IBTRD",92,0)
 ;
"RTN","IBTRD",93,0)
 I IBTYPE="I" D
"RTN","IBTRD",94,0)
 .S X=$$SETFLD^VALM1($P(^DPT(DFN,0),"^"),X,"PATIENT")
"RTN","IBTRD",95,0)
 .S X=$$SETFLD^VALM1(VA("BID"),X,"ID")
"RTN","IBTRD",96,0)
 ;
"RTN","IBTRD",97,0)
 I IBTYPE="P" D
"RTN","IBTRD",98,0)
 .S X=$$SETFLD^VALM1($P($G(^DIC(36,+$P(IBTRCD,"^",8),0)),"^"),X,"INS CO")
"RTN","IBTRD",99,0)
 .S X=$$SETFLD^VALM1($$GRP^IBCNS(+$P($G(^DPT(DFN,.312,+$P(IBTRCD1,"^",5),0)),"^",18)),X,"POLICY")
"RTN","IBTRD",100,0)
 ;
"RTN","IBTRD",101,0)
 S X=$$SETFLD^VALM1($P($$DAT1^IBOUTL(+IBTRCD,"2P")," "),X,"DATE")
"RTN","IBTRD",102,0)
 I $P(IBTRCD,"^",11) S X=$$SETFLD^VALM1($$EXPAND^IBTRE(356.2,.11,$P(IBTRCD,"^",11)),X,"ACTION")
"RTN","IBTRD",103,0)
 I $P(IBTRCD,"^",11)="" S X=$$SETFLD^VALM1($P($G(^IBE(356.11,+$P(IBTRCD,"^",4),0)),"^",3),X,"ACTION")
"RTN","IBTRD",104,0)
 ;
"RTN","IBTRD",105,0)
 S X=$$SETFLD^VALM1($P($G(^IBE(356.6,+$P(^IBT(356,+IBTRN,0),"^",18),0)),"^",2),X,"EVENT")
"RTN","IBTRD",106,0)
 S X=$$SETFLD^VALM1($$DAT1^IBOUTL(+$P(^IBT(356,+IBTRN,0),"^",6),"2P"),X,"EV DATE")
"RTN","IBTRD",107,0)
 S X=$$SETFLD^VALM1($$EXPAND^IBTRE(356.2,.04,$P(IBTRCD,"^",4)),X,"TYPE")
"RTN","IBTRD",108,0)
 S X=$$SETFLD^VALM1($J($$DAY^IBTUTL3($P(IBTRCD,"^",15),$P(IBTRCD,"^",16),IBTRN),3),X,"DAYS")
"RTN","IBTRD",109,0)
 S X=$$SETFLD^VALM1($$EXPAND^IBTRE(356,.31,$P(^IBT(356,IBTRN,0),"^",31)),X,"ROI")
"RTN","IBTRD",110,0)
 S X=$$SETFLD^VALM1($P(IBTRCD,"^",6),X,"CONTACT")
"RTN","IBTRD",111,0)
 S X=$$SETFLD^VALM1($P(IBTRCD,"^",7),X,"PHONE")
"RTN","IBTRD",112,0)
 S X=$$SETFLD^VALM1($$CREFN^IBTRC(IBTRC,15),X,"REF NO")
"RTN","IBTRD",113,0)
 D SET(X)
"RTN","IBTRD",114,0)
 Q
"RTN","IBTRD",115,0)
 ;
"RTN","IBTRD",116,0)
SET(X) ; -- set arrays
"RTN","IBTRD",117,0)
 S VALMCNT=VALMCNT+1
"RTN","IBTRD",118,0)
 S ^TMP("IBTRD",$J,VALMCNT,0)=X
"RTN","IBTRD",119,0)
 S ^TMP("IBTRD",$J,"IDX",VALMCNT,IBCNT)=""
"RTN","IBTRD",120,0)
 S ^TMP("IBTRDDX",$J,IBCNT)=VALMCNT_"^"_IBTRC
"RTN","IBTRD",121,0)
 Q
"RTN","IBTRD",122,0)
HELP ; -- help code
"RTN","IBTRD",123,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBTRD",124,0)
 Q
"RTN","IBTRD",125,0)
 ;
"RTN","IBTRD",126,0)
EXIT ; -- exit code
"RTN","IBTRD",127,0)
 K ^TMP("IBTRD",$J),^TMP("IBTRDDX",$J),IBTRD
"RTN","IBTRD",128,0)
 D CLEAN^VALM10
"RTN","IBTRD",129,0)
 Q
"RTN","IBTRD",130,0)
 ;
"RTN","IBTRD",131,0)
ASK ; -- ask for patient or ins. co.
"RTN","IBTRD",132,0)
 N DIR
"RTN","IBTRD",133,0)
 S DIR(0)="350.9,4.02",DIR("A")="Select Patient Name or Insurance Co."
"RTN","IBTRD",134,0)
 N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBTRD",135,0)
 D ^DIR K DIR I $D(DIRUT) S VALMQUIT="" G ASKQ
"RTN","IBTRD",136,0)
 S IBTRD=Y
"RTN","IBTRD",137,0)
 I +IBTRD<1 S VALMQUIT=""
"RTN","IBTRD",138,0)
ASKQ Q
"RTN","IBTRDD")
0^24^B7262514^B7193344
"RTN","IBTRDD",1,0)
IBTRDD ;ALB/AAS - CLAIMS TRACKING, EXPANDED APPEALS - DENIALS ; 02-JUL-1993
"RTN","IBTRDD",2,0)
 ;;2.0;INTEGRATED BILLING;**458**;21-MAR-94;Build 4
"RTN","IBTRDD",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRDD",4,0)
 ;
"RTN","IBTRDD",5,0)
% ;
"RTN","IBTRDD",6,0)
EN ; -- main entry point for IBT EXPAND/EDIT DENIALS
"RTN","IBTRDD",7,0)
 I '$D(DT) D DT^DICRW
"RTN","IBTRDD",8,0)
 K XQORS,VALMEVL
"RTN","IBTRDD",9,0)
 I '$G(IBTRC) G EN^IBTRD
"RTN","IBTRDD",10,0)
 D EN^VALM("IBT EXPAND/EDIT DENIALS")
"RTN","IBTRDD",11,0)
 Q
"RTN","IBTRDD",12,0)
 ;
"RTN","IBTRDD",13,0)
HDR ; -- header code
"RTN","IBTRDD",14,0)
 D PID^VADPT N IBXR
"RTN","IBTRDD",15,0)
 S VALMHDR(1)="Expanded Appeal/Denial for: "_$$PT^IBTUTL1(DFN)
"RTN","IBTRDD",16,0)
 S IBXR=$$ROIEVT^IBTRR1(IBTRN) I IBXR'="" S VALMHDR(1)=VALMHDR(1)_$J(" ",(60-$L(VALMHDR(1))))_"ROI: "_IBXR
"RTN","IBTRDD",17,0)
 S VALMHDR(2)="                       for: "_$$EXPAND^IBTRE(356,.18,$P(IBTRND,"^",18))_" on "_$$DAT1^IBOUTL($P(IBTRND,"^",6),2)
"RTN","IBTRDD",18,0)
 Q
"RTN","IBTRDD",19,0)
 ;
"RTN","IBTRDD",20,0)
INIT ; -- init variables and list array
"RTN","IBTRDD",21,0)
 N IBTRCD,IBTRCD1,IBTRN,IBTRND,DFN
"RTN","IBTRDD",22,0)
 K VALMQUIT
"RTN","IBTRDD",23,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBTRDD",24,0)
 D BLD,HDR
"RTN","IBTRDD",25,0)
 Q
"RTN","IBTRDD",26,0)
 ;
"RTN","IBTRDD",27,0)
BLD ; -- build display
"RTN","IBTRDD",28,0)
 K ^TMP("IBTRDD",$J),^TMP("IBTRDDX",$J)
"RTN","IBTRDD",29,0)
 D KILL^VALM10()
"RTN","IBTRDD",30,0)
 S IBTRCD=$G(^IBT(356.2,+IBTRC,0)),IBTRCD1=$G(^(1))
"RTN","IBTRDD",31,0)
 S IBTRN=$P(IBTRCD,"^",2),DFN=$P(IBTRCD,"^",5)
"RTN","IBTRDD",32,0)
 S IBTRND=$G(^IBT(356,+IBTRN,0))
"RTN","IBTRDD",33,0)
 F I=1:1:30 D BLANK^IBTRED(.I)
"RTN","IBTRDD",34,0)
 S VALMCNT=30
"RTN","IBTRDD",35,0)
 S VAINDT=+IBTRCD+.24
"RTN","IBTRDD",36,0)
 S VA200="" D INP^VADPT
"RTN","IBTRDD",37,0)
 D ACTION^IBTRCD,VISIT,CLIN,INS,USER,APADD,COMM,CONT
"RTN","IBTRDD",38,0)
 Q
"RTN","IBTRDD",39,0)
 ;
"RTN","IBTRDD",40,0)
COMM ; -- comment display
"RTN","IBTRDD",41,0)
 N OFFEST,START
"RTN","IBTRDD",42,0)
 S START=31,OFFSET=2
"RTN","IBTRDD",43,0)
 D COM1^IBTRCD0
"RTN","IBTRDD",44,0)
 Q
"RTN","IBTRDD",45,0)
 ;
"RTN","IBTRDD",46,0)
CONT ; -- contact info display
"RTN","IBTRDD",47,0)
 N OFFEST,START
"RTN","IBTRDD",48,0)
 S START=23,OFFSET=45
"RTN","IBTRDD",49,0)
 D CON1^IBTRCD0
"RTN","IBTRDD",50,0)
 Q
"RTN","IBTRDD",51,0)
 ;
"RTN","IBTRDD",52,0)
HIST ; --history display
"RTN","IBTRDD",53,0)
 N OFFEST,START
"RTN","IBTRDD",54,0)
 S START=31,OFFSET=2
"RTN","IBTRDD",55,0)
 ;
"RTN","IBTRDD",56,0)
 Q
"RTN","IBTRDD",57,0)
 ;
"RTN","IBTRDD",58,0)
CLIN ; -- clinical data display
"RTN","IBTRDD",59,0)
 N OFFSET,START
"RTN","IBTRDD",60,0)
 S START=9,OFFSET=2
"RTN","IBTRDD",61,0)
 D CLIN1^IBTRED0
"RTN","IBTRDD",62,0)
 Q
"RTN","IBTRDD",63,0)
 ;
"RTN","IBTRDD",64,0)
APADD ; -- Appeals Address Display
"RTN","IBTRDD",65,0)
 N OFFSET,START
"RTN","IBTRDD",66,0)
 S START=9,OFFSET=45
"RTN","IBTRDD",67,0)
 D AP1^IBTRCD0
"RTN","IBTRDD",68,0)
 Q
"RTN","IBTRDD",69,0)
 ;
"RTN","IBTRDD",70,0)
USER ; -- User display
"RTN","IBTRDD",71,0)
 N OFFSET,START
"RTN","IBTRDD",72,0)
 S START=23,OFFSET=2
"RTN","IBTRDD",73,0)
 D USER1^IBTRCD0
"RTN","IBTRDD",74,0)
 Q
"RTN","IBTRDD",75,0)
 ;
"RTN","IBTRDD",76,0)
INS ; -- Ins. Co. Display
"RTN","IBTRDD",77,0)
 N OFFSET,START,IBCDFND,IBPHONE
"RTN","IBTRDD",78,0)
 S START=17,OFFSET=2
"RTN","IBTRDD",79,0)
 D ENINS^IBTRCD0
"RTN","IBTRDD",80,0)
 Q
"RTN","IBTRDD",81,0)
 ;
"RTN","IBTRDD",82,0)
VISIT ; -- Visit information
"RTN","IBTRDD",83,0)
 N OFFSET,START,VAIN,VAINDT,IBETYP
"RTN","IBTRDD",84,0)
 ;S VAINDT=+IBTRCD+.24
"RTN","IBTRDD",85,0)
 ;D INP^VADPT
"RTN","IBTRDD",86,0)
 S START=1,OFFSET=2
"RTN","IBTRDD",87,0)
 S IBETYP=$G(^IBE(356.6,+$P(IBTRND,"^",18),0))
"RTN","IBTRDD",88,0)
 D VISIT^IBTRED
"RTN","IBTRDD",89,0)
 I $D(VAIN(11)) D SET^IBCNSP(START+5,OFFSET,"     Attending: "_$P(VAIN(11),"^",2))
"RTN","IBTRDD",90,0)
 Q
"RTN","IBTRDD",91,0)
 ;
"RTN","IBTRDD",92,0)
HELP ; -- help code
"RTN","IBTRDD",93,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBTRDD",94,0)
 Q
"RTN","IBTRDD",95,0)
 ;
"RTN","IBTRDD",96,0)
EXIT ; -- exit code
"RTN","IBTRDD",97,0)
 K VALMQUIT,IBTRC,IBTRCD,IBTRCD1
"RTN","IBTRDD",98,0)
 K ^TMP("IBTRDD",$J),^TMP("IBTRDDX",$J)
"RTN","IBTRDD",99,0)
 D CLEAN^VALM10,FULL^VALM1
"RTN","IBTRDD",100,0)
 Q
"RTN","IBTRE")
0^25^B25778020^B25125140
"RTN","IBTRE",1,0)
IBTRE ;ALB/AAS - CLAIMS TRACKING EDITOR ;27-JUN-1993
"RTN","IBTRE",2,0)
 ;;2.0;INTEGRATED BILLING;**122,51,276,458**;21-MAR-94;Build 4
"RTN","IBTRE",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRE",4,0)
 ;
"RTN","IBTRE",5,0)
% ; -- main entry point for IBT CLAIMS TRACKING EDIT
"RTN","IBTRE",6,0)
EN ;
"RTN","IBTRE",7,0)
 I '$D(DT) D DT^DICRW
"RTN","IBTRE",8,0)
 K XQORS,VALMEVL,DFN,IBTRN,IBTRV,IBTRC,IBTRD,IBCNS,IBCDFN,IBFASTXT,VA,VAERR,VA200,IBCNT,IBI,IBTBDT,IBTEDT,IBUR,VAIN,VAEL
"RTN","IBTRE",9,0)
 D EN^VALM("IBT CLAIMS TRACKING EDITOR")
"RTN","IBTRE",10,0)
ENQ K IBFASTXT,IBSCP,IBOTB,XQORS,VALMEVL,DFN,IBTRN,IBTRV,IBTRC,IBTRD,IBCNS,IBCDFN,VA,VAERR,VA200,IBCNT,IBI,IBTBDT,IBTEDT,IBUR,IBTRPRF,VAEL,VAIN,PRECERT,IBAMNT,IBDGCR,IBDGCRU1,IBETYP,IBETYPD,IBLCNT,IBTEXT,IBTRND,X,Y,Z,IBTMPNM
"RTN","IBTRE",11,0)
 K IBAPEAL,IBCDFN,IBCNT,IBDEN,IBDENIAL,IBDENIAL,IBPARNT,IBPEN,IBPENAL,IBTCOD,IBTRDD,IBTRSV,IBTYPE,VAINDT,VA,VALMBCK,OFFSET,I1,I3,IBNEW,IBDENT,IBOE,Z1,T,SDCNT
"RTN","IBTRE",12,0)
 Q
"RTN","IBTRE",13,0)
 ;
"RTN","IBTRE",14,0)
HDR ; -- header code
"RTN","IBTRE",15,0)
 D PID^VADPT N IBXR
"RTN","IBTRE",16,0)
 S VALMHDR(1)="Claims Tracking Entries for: "_$E($P($G(^DPT(DFN,0)),"^"),1,20)_" "_$E($G(^(0)),1)_VA("BID")
"RTN","IBTRE",17,0)
 S IBXR=$$ROIPAT^IBTRR1(DFN,DT) I IBXR'="" S VALMHDR(1)=VALMHDR(1)_$J(" ",(70-$L(VALMHDR(1))))_"ROI: "_IBXR
"RTN","IBTRE",18,0)
 S VALMHDR(2)="    for Visits beginning on: "_$$DAT1^IBOUTL(IBTBDT)_" to "_$$DAT1^IBOUTL(IBTEDT)
"RTN","IBTRE",19,0)
 Q
"RTN","IBTRE",20,0)
 ;
"RTN","IBTRE",21,0)
INIT ; -- init variables and list array
"RTN","IBTRE",22,0)
 S U="^",VALMCNT=0,VALMBG=1
"RTN","IBTRE",23,0)
 K ^TMP("IBTRE",$J),^TMP("IBTREDX",$J)
"RTN","IBTRE",24,0)
 K I,X,XQORNOD,DA,DR,DIE,DNM,DQ,IBTEDT,IBTBDT
"RTN","IBTRE",25,0)
 D PAT^IBCNSM I $D(VALMQUIT) G INITQ
"RTN","IBTRE",26,0)
 S IBTBDT=$$FMADD^XLFDT(DT,-365) ; default start date 1 year in past
"RTN","IBTRE",27,0)
 S IBTEDT=$$FMADD^XLFDT(DT,14) ;default end date is 7 days in future.
"RTN","IBTRE",28,0)
 D BLD
"RTN","IBTRE",29,0)
INITQ Q
"RTN","IBTRE",30,0)
 ;
"RTN","IBTRE",31,0)
BLD ; -- Build list of tracking entries
"RTN","IBTRE",32,0)
 K ^TMP("IBTRE",$J),^TMP("IBTREDX",$J)
"RTN","IBTRE",33,0)
 N IBII,J,IBTRN,IBTRND,IBTRND1,VAIN,IBCUR,IBSAV,IBSCP
"RTN","IBTRE",34,0)
 S IBCNT=0,VALMCNT=0
"RTN","IBTRE",35,0)
 I '$G(IBTRPRF) S IBTRPRF=123
"RTN","IBTRE",36,0)
 I IBTRPRF<10 S X=$S(IBTRPRF=1:"IBTRE  HR MENU",IBTRPRF=2:"IBTRE  IR MENU",IBTRPRF=3:"IBTRE  BI MENU",1:"IBTRE  MENU") D PROT^IBTRPR(X)
"RTN","IBTRE",37,0)
 S VALMSG=$$MSG^IBTUTL3(DFN)
"RTN","IBTRE",38,0)
 K VAINDT S VA200="" D INP^VADPT I VAIN(1) D
"RTN","IBTRE",39,0)
 .S IBTRN=$O(^IBT(356,"AD",+VAIN(1),0)),IBCUR="*"
"RTN","IBTRE",40,0)
 .D:IBTRN 1
"RTN","IBTRE",41,0)
 .S IBSAV=IBTRN
"RTN","IBTRE",42,0)
 .S VALMSG=$G(VALMSG)_"    *=Current Admission "
"RTN","IBTRE",43,0)
 .K VAIN,VA200,VAINDT
"RTN","IBTRE",44,0)
 .Q
"RTN","IBTRE",45,0)
 ;
"RTN","IBTRE",46,0)
 S IBCUR="",IBI=-(IBTEDT+.24)
"RTN","IBTRE",47,0)
 F  S IBI=$O(^IBT(356,"APTDT",DFN,IBI)) Q:IBI=""!(IBI>(-IBTBDT+.0001))  S IBTRN=0 F  S IBTRN=$O(^IBT(356,"APTDT",DFN,IBI,IBTRN)) Q:'IBTRN  D 1
"RTN","IBTRE",48,0)
BLDQ Q
"RTN","IBTRE",49,0)
 ;
"RTN","IBTRE",50,0)
1 ; -- build the entry
"RTN","IBTRE",51,0)
 Q:$G(IBSAV)=IBTRN
"RTN","IBTRE",52,0)
 W "."
"RTN","IBTRE",53,0)
 S IBTRND=$G(^IBT(356,IBTRN,0)),IBTRND1=$G(^(1)) ; tracking data
"RTN","IBTRE",54,0)
 Q:+$P(IBTRND,"^",20)<1  ; quit if inactive
"RTN","IBTRE",55,0)
 S IBCNT=IBCNT+1
"RTN","IBTRE",56,0)
 S X=""
"RTN","IBTRE",57,0)
 S X=$$SETFLD^VALM1(IBCNT,X,"NUMBER")
"RTN","IBTRE",58,0)
 S X=$$SETFLD^VALM1(IBCUR_$P($G(^IBE(356.6,+$P(IBTRND,"^",18),0)),"^",2),X,"TYPE")
"RTN","IBTRE",59,0)
 S X=$$SETFLD^VALM1($$DAT1^IBOUTL($P(IBTRND,"^",6),2),X,"DATE")
"RTN","IBTRE",60,0)
 S X=$$SETFLD^VALM1($$EXPAND(356,.24,$P(IBTRND,"^",24)),X,"INSUR")
"RTN","IBTRE",61,0)
 S IBUR="" S:$P(IBTRND,"^",25) IBUR="R" S:$P(IBTRND,"^",26) IBUR=IBUR_"S" S:$P(IBTRND,"^",27) IBUR=IBUR_"L"
"RTN","IBTRE",62,0)
 S X=$$SETFLD^VALM1(IBUR,X,"UR")
"RTN","IBTRE",63,0)
 S X=$$SETFLD^VALM1($S(+$P(IBTRND,"^",19):"NO",1:"YES"_$$ECME(+$P(IBTRND,"^",11),1)),X,"BILLABLE")
"RTN","IBTRE",64,0)
 S X=$$SETFLD^VALM1($$ROIEVT^IBTRR1(IBTRN,1),X,"ROI")
"RTN","IBTRE",65,0)
 S X=$$SETFLD^VALM1($$ADMDIAG^IBTRE6(IBTRN),X,"DIAGNOSIS")
"RTN","IBTRE",66,0)
 S X=$$SETFLD^VALM1($S($P(IBTRND,"^",7)=3:"YES",1:"NO"),X,"URGENT")
"RTN","IBTRE",67,0)
 S X=$$SETFLD^VALM1($$DAY(IBTRN),X,"DAYS")
"RTN","IBTRE",68,0)
 S X=$$SETFLD^VALM1($P($G(^DGCR(399,+$P(IBTRND,"^",11),0)),U),X,"INITIAL")
"RTN","IBTRE",69,0)
 S X=$$SETFLD^VALM1($$PRECRT^IBTRC1(IBTRN,12),X,"PRECERT")
"RTN","IBTRE",70,0)
 S X=$$SETFLD^VALM1($E($$EXPAND(356,.12,$P(IBTRND,"^",12)),1,14),X,"SPECIAL")
"RTN","IBTRE",71,0)
 I $G(VAIN(4)) S X=$$SETFLD^VALM1($P(VAIN(4),"^",2),X,"WARD")
"RTN","IBTRE",72,0)
 D SET(X)
"RTN","IBTRE",73,0)
BQ Q
"RTN","IBTRE",74,0)
 ;
"RTN","IBTRE",75,0)
HELP ; -- help code
"RTN","IBTRE",76,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBTRE",77,0)
 Q
"RTN","IBTRE",78,0)
 ;
"RTN","IBTRE",79,0)
EXIT ; -- exit code
"RTN","IBTRE",80,0)
 K ^TMP("IBTRE",$J),^TMP("IBTREDX",$J)
"RTN","IBTRE",81,0)
 K DFN
"RTN","IBTRE",82,0)
 D FULL^VALM1,CLEAN^VALM10
"RTN","IBTRE",83,0)
 Q
"RTN","IBTRE",84,0)
 ;
"RTN","IBTRE",85,0)
SET(X) ; -- set arrays
"RTN","IBTRE",86,0)
 S VALMCNT=VALMCNT+1
"RTN","IBTRE",87,0)
 S ^TMP("IBTRE",$J,VALMCNT,0)=X
"RTN","IBTRE",88,0)
 S ^TMP("IBTRE",$J,"IDX",VALMCNT,IBCNT)=""
"RTN","IBTRE",89,0)
 S ^TMP("IBTREDX",$J,IBCNT)=VALMCNT_"^"_IBTRN
"RTN","IBTRE",90,0)
 Q
"RTN","IBTRE",91,0)
 ;
"RTN","IBTRE",92,0)
EXPAND(FILE,FIELD,VALUE) ; -- return special conditions
"RTN","IBTRE",93,0)
 N Y
"RTN","IBTRE",94,0)
 S Y=VALUE
"RTN","IBTRE",95,0)
 I 'FILE!('FIELD)!(VALUE="") G EXPQ
"RTN","IBTRE",96,0)
 S Y=$$EXTERNAL^DILFD(FILE,FIELD,,VALUE)
"RTN","IBTRE",97,0)
 K ^TMP("DIERR",$J)
"RTN","IBTRE",98,0)
EXPQ Q Y
"RTN","IBTRE",99,0)
 ;
"RTN","IBTRE",100,0)
DAY(X) ; -- compute number of days approved for tracking id
"RTN","IBTRE",101,0)
 N IBI,IBTRC,IBTRCD,IBDAY,IBCDT,IBMAX
"RTN","IBTRE",102,0)
 ;
"RTN","IBTRE",103,0)
 S (IBI,IBDAY)=0 F  S IBI=$O(^IBT(356.2,"C",IBTRN,IBI)) Q:'IBI  D  Q:IBDAY="ALL"
"RTN","IBTRE",104,0)
 .S IBTRCD=$G(^IBT(356.2,+IBI,0))
"RTN","IBTRE",105,0)
 .I $P(IBTRCD,"^",19)'=10 Q  ;review status must be complete
"RTN","IBTRE",106,0)
 .I $P($G(^IBE(356.7,+$P(IBTRCD,"^",11),0)),"^",3)'=10 Q  ;must be an approval
"RTN","IBTRE",107,0)
 .I $P($G(^IBT(356.2,+IBI,1)),"^",8) S IBDAY="ALL" Q
"RTN","IBTRE",108,0)
 .S IBDAY=IBDAY+$$DAY^IBTUTL3($P(IBTRCD,"^",12),$P(IBTRCD,"^",13),IBTRN)
"RTN","IBTRE",109,0)
 I $P(^IBT(356,IBTRN,0),"^",5)  S IBCDT=$$CDT^IBTODD1(IBTRN) I +IBCDT,$P(IBCDT,"^",2) S IBMAX=$$FMDIFF^XLFDT($P(IBCDT,"^",2),+IBCDT)
"RTN","IBTRE",110,0)
 I $G(IBMAX),IBDAY>IBMAX S IBDAY=IBMAX
"RTN","IBTRE",111,0)
 Q IBDAY
"RTN","IBTRE",112,0)
 ;
"RTN","IBTRE",113,0)
ECME(IBBIL,IBNCAN) ;ECME flag
"RTN","IBTRE",114,0)
 I 'IBBIL Q ""
"RTN","IBTRE",115,0)
 I $P($G(^DGCR(399,IBBIL,"M1")),U,8)="" Q ""
"RTN","IBTRE",116,0)
 I $G(IBNCAN),$P($G(^DGCR(399,IBBIL,0)),U,13)=7 Q ""  ; cancelled
"RTN","IBTRE",117,0)
 Q "e"
"RTN","IBTRED")
0^26^B24448632^B24360829
"RTN","IBTRED",1,0)
IBTRED ;ALB/AAS - EXPAND/EDIT CLAIMS TRACKING ENTRY ;01-JUL-1993
"RTN","IBTRED",2,0)
 ;;2.0;INTEGRATED BILLING;**71,91,160,247,309,276,339,363,458**;21-MAR-94;Build 4
"RTN","IBTRED",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRED",4,0)
 ;
"RTN","IBTRED",5,0)
% ;
"RTN","IBTRED",6,0)
EN ; -- main entry point for IBT EXPAND/EDIT TRACKING
"RTN","IBTRED",7,0)
 I '$D(DT) D DT^DICRW
"RTN","IBTRED",8,0)
 K XQORS,VALMEVL,DFN,IBTRN,IBTRV,IBTRC,IBTRD
"RTN","IBTRED",9,0)
 I '$G(IBTRN) G EN^IBTRE Q  ; entry from programmer mode
"RTN","IBTRED",10,0)
 D EN^VALM("IBT EXPAND/EDIT TRACKING")
"RTN","IBTRED",11,0)
 K IBFASTXT
"RTN","IBTRED",12,0)
 Q
"RTN","IBTRED",13,0)
 ;
"RTN","IBTRED",14,0)
HDR ; -- header code
"RTN","IBTRED",15,0)
 D PID^VADPT N IBXR
"RTN","IBTRED",16,0)
 S VALMHDR(1)="Expanded Claims Tracking Info for: "_$E($P($G(^DPT(DFN,0)),"^"),1,20)_" "_$E($G(^(0)),1)_VA("BID")
"RTN","IBTRED",17,0)
 S IBXR=$$ROIEVT^IBTRR1(IBTRN) I IBXR'="" S VALMHDR(1)=VALMHDR(1)_$J(" ",(60-$L(VALMHDR(1))))_"ROI: "_IBXR
"RTN","IBTRED",18,0)
 S VALMHDR(2)="                              For: "_$$ETYP(IBTRN)
"RTN","IBTRED",19,0)
 Q
"RTN","IBTRED",20,0)
 ;
"RTN","IBTRED",21,0)
INIT ; -- init variables and list array
"RTN","IBTRED",22,0)
 K VALMQUIT
"RTN","IBTRED",23,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBTRED",24,0)
 D BLD,HDR
"RTN","IBTRED",25,0)
 Q
"RTN","IBTRED",26,0)
 ;
"RTN","IBTRED",27,0)
BLD ; -- list builder
"RTN","IBTRED",28,0)
 N IBTRND,IBTRND1,IBTRND2,IBETYP
"RTN","IBTRED",29,0)
 K ^TMP("IBTRED",$J)
"RTN","IBTRED",30,0)
 F I=1:1:30 D BLANK(.I)
"RTN","IBTRED",31,0)
 I '$G(IBTRPRF) S IBTRPRF=123
"RTN","IBTRED",32,0)
 I IBTRPRF<10 S X=$S(IBTRPRF=1:"IBTRED  HR MENU",IBTRPRF=2:"IBTRED  IR MENU",IBTRPRF=3:"IBTRED  BI MENU",1:"IBTRED  MENU") D PROT^IBTRPR(X)
"RTN","IBTRED",33,0)
 D KILL^VALM10()
"RTN","IBTRED",34,0)
 S IBTRND=$G(^IBT(356,IBTRN,0)),IBTRND1=$G(^(1))
"RTN","IBTRED",35,0)
 S IBETYP=$G(^IBE(356.6,+$P(IBTRND,"^",18),0))
"RTN","IBTRED",36,0)
 S VALMCNT=30
"RTN","IBTRED",37,0)
 D VISIT D ^IBTRED0,^IBTRED01
"RTN","IBTRED",38,0)
 Q
"RTN","IBTRED",39,0)
 ;
"RTN","IBTRED",40,0)
VISIT ; -- Visit info Region
"RTN","IBTRED",41,0)
 N OFFSET,START,IBOE,IBOE0
"RTN","IBTRED",42,0)
 S START=1,OFFSET=2
"RTN","IBTRED",43,0)
 D SET^IBCNSP(START,OFFSET," Visit Information ",IORVON,IORVOFF)
"RTN","IBTRED",44,0)
 D SET^IBCNSP(START+1,OFFSET,"    Visit Type: "_$P(IBETYP,"^"))
"RTN","IBTRED",45,0)
 I '$D(IBETYP) N IBETYP S IBETYP=$G(^IBE(356.6,+$P(IBTRND,"^",18),0))
"RTN","IBTRED",46,0)
 S X=$P(IBETYP,"^",3) D @X
"RTN","IBTRED",47,0)
 Q
"RTN","IBTRED",48,0)
1 ; -- visit region for admission or scheduled admission
"RTN","IBTRED",49,0)
 I $P($G(^DGPM(+$P(IBTRND,"^",5),0)),"^",17) S VAINDT=+$G(^DGPM(+$P(IBTRND,"^",5),0))
"RTN","IBTRED",50,0)
 I '$D(VAIN) S VA200="" D INP^VADPT
"RTN","IBTRED",51,0)
 I VAIN(7)="" S Y=$P(IBTRND,"^",6) D D^DIQ S $P(VAIN(7),"^",2)=Y
"RTN","IBTRED",52,0)
 D SET^IBCNSP(START+2,OFFSET,"Admission Date: "_$P(VAIN(7),"^",2))
"RTN","IBTRED",53,0)
 D SET^IBCNSP(START+3,OFFSET,"          Ward: "_$P(VAIN(4),"^",2))
"RTN","IBTRED",54,0)
 D SET^IBCNSP(START+4,OFFSET,"     Specialty: "_$P(VAIN(3),"^",2))
"RTN","IBTRED",55,0)
 Q
"RTN","IBTRED",56,0)
2 ; -- visit region for  outpatient care
"RTN","IBTRED",57,0)
 S IBOE=$P(IBTRND,"^",4),IBOE0=$$SCE^IBSDU(+IBOE)
"RTN","IBTRED",58,0)
 D SET^IBCNSP(START+2,OFFSET,"    Visit Date: "_$$DAT1^IBOUTL($P(IBTRND,"^",6),"2P"))
"RTN","IBTRED",59,0)
 I +IBOE<1 D  Q
"RTN","IBTRED",60,0)
 .D SET^IBCNSP(START+3,OFFSET,"  No Outpatient Encounter Found") Q
"RTN","IBTRED",61,0)
 D SET^IBCNSP(START+3,OFFSET,"        Clinic: "_$P($G(^SC(+$P(IBOE0,"^",4),0)),"^"))
"RTN","IBTRED",62,0)
 D SET^IBCNSP(START+4,OFFSET,"  Appt. Status: "_$$EXPAND^IBTRE(409.68,.12,$P(IBOE0,"^",12)))
"RTN","IBTRED",63,0)
 D SET^IBCNSP(START+5,OFFSET,"    Appt. Type: "_$$EXPAND^IBTRE(409.68,.1,$P(IBOE0,"^",10)))
"RTN","IBTRED",64,0)
 D SET^IBCNSP(START+6,OFFSET,"  Special Cond: "_$$ENCL(IBOE))
"RTN","IBTRED",65,0)
 Q
"RTN","IBTRED",66,0)
 ;
"RTN","IBTRED",67,0)
3 ; -- visit region for rx refill
"RTN","IBTRED",68,0)
 N PSONTALK,PSOTMP,PSOQTY
"RTN","IBTRED",69,0)
 S PSONTALK=1 ;PSORXN=+$P(IBTRND,"^",8),PSOFILL=+$P(IBTRND,"^",10)
"RTN","IBTRED",70,0)
 S X=+$P(IBTRND,"^",8)_"^"_+$P(IBTRND,"^",10) D EN^PSOCPVW
"RTN","IBTRED",71,0)
 ;if refill was deleted and EN^PSOCPVW doesn't return any data use IB API
"RTN","IBTRED",72,0)
 I '$D(PSOTMP) D PSOCPVW^IBNCPDPC(+$P(IBTRND,"^",2),+$P(IBTRND,"^",8),.PSOTMP)
"RTN","IBTRED",73,0)
 S PSOQTY=$$NCPDPQTY^PSSBPSUT(+$$RXAPI1^IBNCPUT1(+$P(IBTRND,"^",8),6,"I"),PSOTMP(52,+$P(IBTRND,"^",8),7,"E"))
"RTN","IBTRED",74,0)
 D SET^IBCNSP(START+2,OFFSET,"Prescription #: "_$G(PSOTMP(52,+$P(IBTRND,"^",8),.01,"E")))
"RTN","IBTRED",75,0)
 ;I $P(IBTRND,"^",10)=0 D SET^IBCNSP(START+3,OFFSET,"     Fill Date: "_$G(PSOTMP(52,+$P(IBTRND,"^",8),22,"E")))
"RTN","IBTRED",76,0)
 ;I +$P(IBTRND,"^",10) D SET^IBCNSP(START+3,OFFSET,"   Refill Date: "_$G(PSOTMP(52.1,+$P(IBTRND,"^",10),.01,"E")))
"RTN","IBTRED",77,0)
 I $P(IBTRND,"^",10)=0 D SET^IBCNSP(START+3,OFFSET,"     Fill Date: "_$$FMTE^XLFDT(+$P(IBTRND,"^",6)))
"RTN","IBTRED",78,0)
 I +$P(IBTRND,"^",10) D SET^IBCNSP(START+3,OFFSET,"   Refill Date: "_$$FMTE^XLFDT(+$P(IBTRND,"^",6)))
"RTN","IBTRED",79,0)
 D SET^IBCNSP(START+4,OFFSET,"          Drug: "_$G(PSOTMP(52,+$P(IBTRND,"^",8),6,"E")))
"RTN","IBTRED",80,0)
 D SET^IBCNSP(START+5,OFFSET,"   Rx Quantity: "_$J($G(PSOTMP(52,+$P(IBTRND,"^",8),7,"E")),8))
"RTN","IBTRED",81,0)
 D SET^IBCNSP(START+6,OFFSET," Bill Quantity:  "_$J($P(PSOQTY,"^"),11)_" "_$P(PSOQTY,"^",2))
"RTN","IBTRED",82,0)
 D SET^IBCNSP(START+7,OFFSET,"   Days Supply: "_$J($G(PSOTMP(52,+$P(IBTRND,"^",8),8,"E")),8))
"RTN","IBTRED",83,0)
 D SET^IBCNSP(START+8,OFFSET,"          NDC#: "_$$GETNDC^PSONDCUT(+$P(IBTRND,"^",8),$P(IBTRND,"^",10)))
"RTN","IBTRED",84,0)
 D SET^IBCNSP(START+9,OFFSET,"     Physician: "_$G(PSOTMP(52,+$P(IBTRND,"^",8),4,"E")))
"RTN","IBTRED",85,0)
 Q
"RTN","IBTRED",86,0)
 ;
"RTN","IBTRED",87,0)
4 ; -- Visit region for prosthetics
"RTN","IBTRED",88,0)
 D 4^IBTRED01
"RTN","IBTRED",89,0)
 Q
"RTN","IBTRED",90,0)
 ;
"RTN","IBTRED",91,0)
HELP ; -- help code
"RTN","IBTRED",92,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBTRED",93,0)
 Q
"RTN","IBTRED",94,0)
 ;
"RTN","IBTRED",95,0)
EXIT ; -- exit code
"RTN","IBTRED",96,0)
 K VALMQUIT,IBTRN
"RTN","IBTRED",97,0)
 D CLEAN^VALM10,FULL^VALM1
"RTN","IBTRED",98,0)
 Q
"RTN","IBTRED",99,0)
 ;
"RTN","IBTRED",100,0)
BLANK(LINE) ; -- Build blank line
"RTN","IBTRED",101,0)
 D SET^VALM10(.LINE,$J("",80))
"RTN","IBTRED",102,0)
 Q
"RTN","IBTRED",103,0)
 ;
"RTN","IBTRED",104,0)
ETYP(IBTRN) ; -- Expand type of epidose and date
"RTN","IBTRED",105,0)
 N IBY S IBY=""
"RTN","IBTRED",106,0)
 S IBTRND=$G(^IBT(356,+IBTRN,0)) I IBTRND="" G ETYPQ
"RTN","IBTRED",107,0)
 S IBETYPD=$G(^IBE(356.6,+$P(IBTRND,"^",18),0))
"RTN","IBTRED",108,0)
 I IBETYPD="" G ETYPQ
"RTN","IBTRED",109,0)
 S IBY=$P(IBETYPD,"^")_" on "_$$DAT1^IBOUTL($P(IBTRND,"^",6),"2P")
"RTN","IBTRED",110,0)
ETYPQ Q IBY
"RTN","IBTRED",111,0)
 ;
"RTN","IBTRED",112,0)
ENCL(IBOE) ; -- output format of classifications
"RTN","IBTRED",113,0)
 N I,X,IBCL,IBCL1 S IBCL=""
"RTN","IBTRED",114,0)
 I '$G(IBOE) G ENCLQ
"RTN","IBTRED",115,0)
 S IBCL1=$$ENCL^IBAMTS2(+IBOE)
"RTN","IBTRED",116,0)
 F I=1:1:8 S X=$P(IBCL1,"^",I) S:X IBCL=IBCL_$S(I=1:"AO",I=2:"IR",I=3:"SC",I=4:"SWA",I=5:"MST",I=6:"HNC",I=7:"CV",I=8:"SHAD",1:"")_"  "
"RTN","IBTRED",117,0)
ENCLQ Q IBCL
"RTN","IBTRED",118,0)
 ;
"RTN","IBTRED0")
0^27^B23670458^B23652054
"RTN","IBTRED0",1,0)
IBTRED0 ;ALB/AAS - EXPAND/EDIT CLAIMS TRACKING ENTRY - CONT. ;01-JUL-1993
"RTN","IBTRED0",2,0)
 ;;2.0;INTEGRATED BILLING;**160,210,317,276,458**;21-MAR-94;Build 4
"RTN","IBTRED0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRED0",4,0)
 ;
"RTN","IBTRED0",5,0)
% I '$G(IBTRN)!($G(IORVON)="") G ^IBTRED
"RTN","IBTRED0",6,0)
 D CLIN,BILL,PRE
"RTN","IBTRED0",7,0)
 Q
"RTN","IBTRED0",8,0)
 ;
"RTN","IBTRED0",9,0)
CLIN ; -- clinical data region
"RTN","IBTRED0",10,0)
 N OFFSET,START,IBICD
"RTN","IBTRED0",11,0)
 S START=7,OFFSET=2
"RTN","IBTRED0",12,0)
 ;
"RTN","IBTRED0",13,0)
CLIN1 N IBETYP S IBETYP=$$TRTP^IBTRE1(IBTRN) I 'IBETYP!(IBETYP>2) Q
"RTN","IBTRED0",14,0)
 D SET^IBCNSP(START,OFFSET," Clinical Information ",IORVON,IORVOFF)
"RTN","IBTRED0",15,0)
 I "12"[IBETYP D @IBETYP
"RTN","IBTRED0",16,0)
 Q
"RTN","IBTRED0",17,0)
 ;
"RTN","IBTRED0",18,0)
1 ; -- inpatient clinical data
"RTN","IBTRED0",19,0)
 ;D SET^IBCNSP(START+1,OFFSET,"      Provider: "_$E($P($G(VAIN(2)),"^",2),1,15))
"RTN","IBTRED0",20,0)
 D SET^IBCNSP(START+1,OFFSET,"      Provider: "_$E($$APROV^IBTRE6(IBTRN),1,15))
"RTN","IBTRED0",21,0)
 D SET^IBCNSP(START+2,OFFSET,"Admitting Diag: "_$E($$ADMDIAG^IBTRE6(IBTRN),1,23))
"RTN","IBTRED0",22,0)
 D SET^IBCNSP(START+3,OFFSET,"  Primary Diag: "_$E($$PDIAG^IBTRE6(IBTRN),1,23))
"RTN","IBTRED0",23,0)
 D LISTP^IBTRE6(IBTRN,.IBICD)
"RTN","IBTRED0",24,0)
 D SET^IBCNSP(START+4,OFFSET," 1st Procedure: "_$E($$PROC^IBTRE6(+$G(IBICD(1)),1),1,23))
"RTN","IBTRED0",25,0)
 D SET^IBCNSP(START+5,OFFSET," 2nd Procedure: "_$E($$PROC^IBTRE6(+$G(IBICD(2)),1),1,23))
"RTN","IBTRED0",26,0)
 Q
"RTN","IBTRED0",27,0)
 ;
"RTN","IBTRED0",28,0)
2 ; -- outpatient clinic data
"RTN","IBTRED0",29,0)
 N IBDATE ; Date of service for CSV
"RTN","IBTRED0",30,0)
 S IBDATE=$$TRNDATE^IBACSV(IBTRN)
"RTN","IBTRED0",31,0)
 S IBOE=$P(IBTRND,"^",4)
"RTN","IBTRED0",32,0)
 I +IBOE<1 D SET^IBCNSP(START+1,OFFSET,"  No Outpatient Encounter Found") Q
"RTN","IBTRED0",33,0)
 N SDDXY,SDPRY D SET^SDCO3(+IBOE) S IBPCNT=SDCNT D SET^SDCO4(IBOE) S IBDCNT=SDCNT
"RTN","IBTRED0",34,0)
 D SET^IBCNSP(START+1,OFFSET,"      Provider: "_$E($P($G(^VA(200,+$P($G(SDPRY(1)),"^",2),0)),"^"),1,23)) ;sdd(409.44
"RTN","IBTRED0",35,0)
 D SET^IBCNSP(START+2,OFFSET,"      Provider: "_$E($P($G(^VA(200,+$P($G(SDPRY(2)),"^",2),0)),"^"),1,23)) ;sdd(409.44
"RTN","IBTRED0",36,0)
 D SET^IBCNSP(START+3,OFFSET,"     Diagnosis: "_$E($$DIAG^IBTRE6(+$P($G(SDDXY(1)),"^",2),1,IBDATE),1,23)) ;sdd(409.43
"RTN","IBTRED0",37,0)
 D SET^IBCNSP(START+4,OFFSET,"     Diagnosis: "_$E($$DIAG^IBTRE6(+$P($G(SDDXY(2)),"^",2),1,IBDATE),1,23)) ;sdd(409.43
"RTN","IBTRED0",38,0)
 D SET^IBCNSP(START+5,OFFSET,"  Special Cond: "_$$ENCL^IBTRED(IBOE))
"RTN","IBTRED0",39,0)
 Q
"RTN","IBTRED0",40,0)
 ;
"RTN","IBTRED0",41,0)
BILL ; -- billing information region
"RTN","IBTRED0",42,0)
 N OFFSET,START,IBBIL,IBECME,IBECMEN,IBCOMM
"RTN","IBTRED0",43,0)
 S START=15,OFFSET=2
"RTN","IBTRED0",44,0)
 S IBBIL=+$P(IBTRND,"^",11)
"RTN","IBTRED0",45,0)
 S IBDGCR=$G(^DGCR(399,IBBIL,0)),IBDGCRU1=$G(^("U1"))
"RTN","IBTRED0",46,0)
 S IBECMEN=$P($P($G(^DGCR(399,IBBIL,"M1")),U,8),";") ;ecme#
"RTN","IBTRED0",47,0)
 S IBECME=''IBECMEN
"RTN","IBTRED0",48,0)
 S IBAMNT=$$BILLD^IBTRED1(IBTRN)
"RTN","IBTRED0",49,0)
 D SET^IBCNSP(START,OFFSET+20," Billing Information ",IORVON,IORVOFF)
"RTN","IBTRED0",50,0)
 D SET^IBCNSP(START+1,OFFSET,"    Episode Billable: "_$S(+$P(IBTRND,"^",19):"NO",1:"YES"))
"RTN","IBTRED0",51,0)
 D SET^IBCNSP(START+2,OFFSET," Non-Billable Reason: "_$E($P($G(^IBE(356.8,+$P(IBTRND,"^",19),0)),"^"),1,20))
"RTN","IBTRED0",52,0)
 D SET^IBCNSP(START+3,OFFSET,"      Next Bill Date: "_$$DAT1^IBOUTL($P(IBTRND,"^",17)))
"RTN","IBTRED0",53,0)
 D SET^IBCNSP(START+4,OFFSET,"Work. Comp/OWCP/Tort: "_$E($$EXPAND^IBTRE(356,.12,$P(IBTRND,"^",12)),1,14))
"RTN","IBTRED0",54,0)
 D SET^IBCNSP(START+5,OFFSET,"        Initial Bill: "_$P(IBDGCR,"^")_$S(IBECME:"e",1:""))
"RTN","IBTRED0",55,0)
 I IBECME D SET^IBCNSP(START+6,OFFSET,"         ECME Number: "_IBECMEN)
"RTN","IBTRED0",56,0)
 D SET^IBCNSP(START+6+IBECME,OFFSET,"         Bill Status: "_$E($$EXPAND^IBTRE(399,.13,$P(IBDGCR,"^",13)),1,14))
"RTN","IBTRED0",57,0)
 ;S IBCOMM="" I +$P(IBTRND,"^",19) ; removed 'IF' for displaying the comment
"RTN","IBTRED0",58,0)
 S IBCOMM=$E($P(IBTRND1,"^",8),1,60)
"RTN","IBTRED0",59,0)
 I IBCOMM'="" D SET^IBCNSP(START+7+IBECME,OFFSET,"  Additional Comment: "_IBCOMM)
"RTN","IBTRED0",60,0)
 I $P($G(^IBT(356,IBTRN,3,0)),"^",3) D
"RTN","IBTRED0",61,0)
 . N IBX,IBY
"RTN","IBTRED0",62,0)
 . S IBY="",IBX=0 F  S IBX=$O(^IBT(356,IBTRN,3,IBX)) Q:'IBX  S IBY($P($G(^IBT(356.85,+$G(^IBT(356,IBTRN,3,IBX,0)),0)),"^"))=""
"RTN","IBTRED0",63,0)
 . S IBX="" F  S IBX=$O(IBY(IBX)) Q:IBX=""  S IBY=IBY_$S($L(IBY):", ",1:"")_IBX
"RTN","IBTRED0",64,0)
 . D SET^IBCNSP(START+($S(+$P(IBTRND,"^",19):8,1:7)),OFFSET,"   Billable Findings: "_IBY)
"RTN","IBTRED0",65,0)
 D BILL1
"RTN","IBTRED0",66,0)
 Q
"RTN","IBTRED0",67,0)
 ;
"RTN","IBTRED0",68,0)
BILL1 ; -- other side of billing info
"RTN","IBTRED0",69,0)
 N OFFSET,START
"RTN","IBTRED0",70,0)
 S START=15,OFFSET=45
"RTN","IBTRED0",71,0)
 D SET^IBCNSP(START+1,OFFSET,"       Total Charges: $ "_$J($P(IBAMNT,"^"),8))
"RTN","IBTRED0",72,0)
 D SET^IBCNSP(START+2,OFFSET,"Estimated Recv (Pri): $ "_$J($P(IBTRND,"^",21),8))
"RTN","IBTRED0",73,0)
 D SET^IBCNSP(START+3,OFFSET,"Estimated Recv (Sec): $ "_$J($P(IBTRND,"^",22),8))
"RTN","IBTRED0",74,0)
 D SET^IBCNSP(START+4,OFFSET,"Estimated Recv (ter): $ "_$J($P(IBTRND,"^",23),8))
"RTN","IBTRED0",75,0)
 D SET^IBCNSP(START+5,OFFSET,"  Means Test Charges: $ "_$J($P(IBTRND,"^",28),8))
"RTN","IBTRED0",76,0)
 D SET^IBCNSP(START+6,OFFSET,"         Amount Paid: $ "_$J($P(IBAMNT,"^",2),8))
"RTN","IBTRED0",77,0)
 Q
"RTN","IBTRED0",78,0)
 ;
"RTN","IBTRED0",79,0)
PRE ; -- pre-certification region
"RTN","IBTRED0",80,0)
 N OFFSET,START,IBTRC,IBTRCD
"RTN","IBTRED0",81,0)
 ;S START=15,OFFSET=45
"RTN","IBTRED0",82,0)
 S START=1,OFFSET=45
"RTN","IBTRED0",83,0)
 D SET^IBCNSP(START,OFFSET," Treatment Authorization Info ",IORVON,IORVOFF)
"RTN","IBTRED0",84,0)
 D SET^IBCNSP(START+1,OFFSET,"Authorization #: "_$$PRECRT^IBTRC1(IBTRN,18))
"RTN","IBTRED0",85,0)
 D SET^IBCNSP(START+2,OFFSET,"      No. Days Approved: "_$J($$DAY^IBTRE(IBTRN),3))
"RTN","IBTRED0",86,0)
 D SET^IBCNSP(START+3,OFFSET,"Second Opinion Required: "_$$EXPAND^IBTRE(356,.14,$P(IBTRND,"^",14)))
"RTN","IBTRED0",87,0)
 D SET^IBCNSP(START+4,OFFSET,"Second Opinion Obtained: "_$$EXPAND^IBTRE(356,.15,$P(IBTRND,"^",15)))
"RTN","IBTRED0",88,0)
 Q
"RTN","IBTRED0",89,0)
 ;
"RTN","IBTRED0",90,0)
SPCOND(IBTRN) ; -- see if sc or other special condition for patient
"RTN","IBTRED0",91,0)
 ; -- if inpt. look in ptf. if opt look opt encounter file
"RTN","IBTRED0",92,0)
 ;
"RTN","IBTRED0",93,0)
 Q ""
"RTN","IBTRED1")
0^35^B10155477^B10085901
"RTN","IBTRED1",1,0)
IBTRED1 ;ALB/AAS - CLAIMS TRACKING EDIT ; 06-JUL-93
"RTN","IBTRED1",2,0)
 ;;2.0;INTEGRATED BILLING;**458**;21-MAR-94;Build 4
"RTN","IBTRED1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRED1",4,0)
 ;
"RTN","IBTRED1",5,0)
% G ^IBTRE
"RTN","IBTRED1",6,0)
 ;
"RTN","IBTRED1",7,0)
NX(IBTMPNM) ; -- edit next template
"RTN","IBTRED1",8,0)
 N IBXX,VALMY,IBTRV,IBTRC
"RTN","IBTRED1",9,0)
 D EN^VALM(IBTMPNM)
"RTN","IBTRED1",10,0)
 I '$D(IBFASTXT) D BLD^IBTRED
"RTN","IBTRED1",11,0)
 S VALMBCK="R"
"RTN","IBTRED1",12,0)
 Q
"RTN","IBTRED1",13,0)
 ;
"RTN","IBTRED1",14,0)
EDIT(IBTEMP,BLD) ; -- edit entry point for claims tracking
"RTN","IBTRED1",15,0)
 ; -- Input   IBTEMP = template name or dr string
"RTN","IBTRED1",16,0)
 ;               BLD = any non-zero value if calling routine is doing own
"RTN","IBTRED1",17,0)
 ;                      rebuild
"RTN","IBTRED1",18,0)
 ;
"RTN","IBTRED1",19,0)
 D FULL^VALM1 W !
"RTN","IBTRED1",20,0)
 L +^IBT(356,+IBTRN):5 I '$T D LOCKED^IBTRCD1 G EDITQ
"RTN","IBTRED1",21,0)
 D SAVE
"RTN","IBTRED1",22,0)
 S DIE="^IBT(356,",DA=IBTRN
"RTN","IBTRED1",23,0)
 S DR=IBTEMP
"RTN","IBTRED1",24,0)
 D ^DIE K DA,DR,DIC,DIE
"RTN","IBTRED1",25,0)
 D COMP
"RTN","IBTRED1",26,0)
 I IBDIF=1 D UPDATE I '$G(BLD) D HDR^IBTRED,BLD^IBTRED
"RTN","IBTRED1",27,0)
 L -^IBT(356,+IBTRN)
"RTN","IBTRED1",28,0)
EDITQ K ^TMP($J,"IBT")
"RTN","IBTRED1",29,0)
 S VALMBCK="R"
"RTN","IBTRED1",30,0)
 Q
"RTN","IBTRED1",31,0)
 ;
"RTN","IBTRED1",32,0)
SAVE ; -- Save the global before editing
"RTN","IBTRED1",33,0)
 K ^TMP($J,"IBT")
"RTN","IBTRED1",34,0)
 S ^TMP($J,"IBT",356,IBTRN,0)=$G(^IBT(356,IBTRN,0))
"RTN","IBTRED1",35,0)
 S ^TMP($J,"IBT",356,IBTRN,1)=$G(^IBT(356,IBTRN,1))
"RTN","IBTRED1",36,0)
 Q
"RTN","IBTRED1",37,0)
 ;
"RTN","IBTRED1",38,0)
COMP ; -- Compare before editing with globals
"RTN","IBTRED1",39,0)
 S IBDIF=0
"RTN","IBTRED1",40,0)
 I $G(^IBT(356,IBTRN,0))'=$G(^TMP($J,"IBT",356,IBTRN,0)) S IBDIF=1
"RTN","IBTRED1",41,0)
 I $G(^IBT(356,IBTRN,1))'=$G(^TMP($J,"IBT",356,IBTRN,1)) S IBDIF=1
"RTN","IBTRED1",42,0)
 Q
"RTN","IBTRED1",43,0)
 ;
"RTN","IBTRED1",44,0)
UPDATE ; -- enter date and user if editing has taken place
"RTN","IBTRED1",45,0)
 ;    entry locked by edit, locks not needed here
"RTN","IBTRED1",46,0)
 S DIE="^IBT(356,",DA=IBTRN
"RTN","IBTRED1",47,0)
 S DR="1.03///NOW;1.04////"_DUZ
"RTN","IBTRED1",48,0)
 D ^DIE K DA,DR,DIC,DIE
"RTN","IBTRED1",49,0)
 Q
"RTN","IBTRED1",50,0)
 ;
"RTN","IBTRED1",51,0)
DICS(Y) ; -- called by input transform and screen logic for type of diagnois
"RTN","IBTRED1",52,0)
 N IBY
"RTN","IBTRED1",53,0)
 S IBY=0
"RTN","IBTRED1",54,0)
 I Y=2 S IBY=1 G DICSQ
"RTN","IBTRED1",55,0)
 I Y=1 I '$D(^IBT(356.9,"ATP",+$P($G(^IBT(356.9,DA,0)),U,2),1))!($O(^IBT(356.9,"ATP",+$P($G(^IBT(356.9,DA,0)),U,2),1,0))=DA) S IBY=1
"RTN","IBTRED1",56,0)
 I Y=3 I '$D(^IBT(356.9,"ATP",+$P($G(^IBT(356.9,DA,0)),U,2),3))!($O(^IBT(356.9,"ATP",+$P($G(^IBT(356.9,DA,0)),U,2),3,0))=DA) S IBY=1
"RTN","IBTRED1",57,0)
 ;I Y=3 I '$D(^IBT(356.9,"ADG",+$P($G(^IBT(356.9,DA,0)),U,2),+^(0)))!($O(^IBT(356.9,"ADG",+$P($G(^IBT(356.9,DA,0)),U,2),+^(0),0))=DA) S IBY=1
"RTN","IBTRED1",58,0)
DICSQ Q IBY
"RTN","IBTRED1",59,0)
 ;
"RTN","IBTRED1",60,0)
BILLD(IBTRN) ; -- compute total amount billed and received for this visit
"RTN","IBTRED1",61,0)
 ; -- output total amount billed (minus offset) ^ total amount recieved
"RTN","IBTRED1",62,0)
 N X,Y,Z,IBY,IBZ
"RTN","IBTRED1",63,0)
 S (IBY,IBZ)=0
"RTN","IBTRED1",64,0)
 I '$G(IBTRN) G BILLDQ
"RTN","IBTRED1",65,0)
 ;
"RTN","IBTRED1",66,0)
 S (X,Y,Z)=0 F  S X=$O(^IBT(356.399,"ACB",IBTRN,X)) Q:X=""  D COMPUT
"RTN","IBTRED1",67,0)
 ;
"RTN","IBTRED1",68,0)
 I 'IBY,'IBZ D  ;look to 399 if no ct pointer
"RTN","IBTRED1",69,0)
 .N DGPM,IBEVDT
"RTN","IBTRED1",70,0)
 .S IBEVDT=$P(^IBT(356,+IBTRN,0),"^",6)
"RTN","IBTRED1",71,0)
 .;inpatient
"RTN","IBTRED1",72,0)
 .S DGPM=$P(^IBT(356,+IBTRN,0),"^",5) I DGPM D
"RTN","IBTRED1",73,0)
 ..S (X,Y,Z)=0 F  S X=$O(^DGCR(399,"D",IBEVDT,X)) Q:'X  D COMPUT
"RTN","IBTRED1",74,0)
 .;
"RTN","IBTRED1",75,0)
 .;outpatient
"RTN","IBTRED1",76,0)
 .I $P($G(^IBE(356.6,+$P(^IBT(356,+IBTRN,0),"^",18),0)),"^",8)=2 D
"RTN","IBTRED1",77,0)
 ..S IBEVDT=+$P(IBEVDT,"."),DFN=$P(^IBT(356,+IBTRN,0),"^",2)
"RTN","IBTRED1",78,0)
 ..S (X,Y,Z)=0 F  S X=$O(^DGCR(399,"AOPV",DFN,IBEVDT,X)) Q:'X  D COMPUT
"RTN","IBTRED1",79,0)
 ..;I IBY S IBY=IBY_" (May include multiple visit dates)"
"RTN","IBTRED1",80,0)
 ;
"RTN","IBTRED1",81,0)
BILLDQ I 'IBY,$P(^IBT(356,+IBTRN,0),"^",29) S IBY=$P(^IBT(356,+IBTRN,0),"^",29)_" (Estimated)"
"RTN","IBTRED1",82,0)
 Q $G(IBY)_"^"_+$G(IBZ)
"RTN","IBTRED1",83,0)
 ;
"RTN","IBTRED1",84,0)
COMPUT ; -- add up the numbers
"RTN","IBTRED1",85,0)
 Q:$P($G(^DGCR(399,X,"S")),"^",17)
"RTN","IBTRED1",86,0)
 S Y=$P($G(^DGCR(399,X,"U1")),"^",1)-$P($G(^("U1")),"^",2)
"RTN","IBTRED1",87,0)
 I Y>0 S IBY=IBY+Y
"RTN","IBTRED1",88,0)
 S Z=$$TPR^PRCAFN(X)
"RTN","IBTRED1",89,0)
 I Z>0 S IBZ=IBZ+Y
"RTN","IBTRED1",90,0)
 Q
"RTN","IBTRR")
0^28^B10506706^n/a
"RTN","IBTRR",1,0)
IBTRR ;ALB/ARH - CLAIMS TRACKING - ROI SPECIAL CONSENT SCREEN ; 08-JAN-2013
"RTN","IBTRR",2,0)
 ;;2.0;INTEGRATED BILLING;**458**;21-MAR-94;Build 4
"RTN","IBTRR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRR",4,0)
 ;
"RTN","IBTRR",5,0)
EN ; -- main entry point for IBT ROI SPECIAL CONSENT
"RTN","IBTRR",6,0)
 D EN^VALM("IBT ROI SPECIAL CONSENT")
"RTN","IBTRR",7,0)
 Q
"RTN","IBTRR",8,0)
 ;
"RTN","IBTRR",9,0)
HDR ; -- header code
"RTN","IBTRR",10,0)
 S VALMHDR(1)="ROI Special Consent Entries for: "_$P($G(^DPT(+$G(DFN),0)),"^")
"RTN","IBTRR",11,0)
 S VALMHDR(2)=" "
"RTN","IBTRR",12,0)
 Q
"RTN","IBTRR",13,0)
 ;
"RTN","IBTRR",14,0)
INIT ; -- init variables and list array
"RTN","IBTRR",15,0)
 K ^TMP("IBTRR",$J),^TMP("IBTRRX",$J),^TMP($J,"IBTRR")
"RTN","IBTRR",16,0)
 I '$G(DFN) D PAT^IBCNSM I $D(VALMQUIT) Q
"RTN","IBTRR",17,0)
 D BLD
"RTN","IBTRR",18,0)
 Q
"RTN","IBTRR",19,0)
 ;
"RTN","IBTRR",20,0)
HELP ; -- help code
"RTN","IBTRR",21,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBTRR",22,0)
 Q
"RTN","IBTRR",23,0)
 ;
"RTN","IBTRR",24,0)
EXIT ; -- exit code
"RTN","IBTRR",25,0)
 K ^TMP("IBTRR",$J),^TMP("IBTRRX",$J),^TMP($J,"IBTRR")
"RTN","IBTRR",26,0)
 D CLEAR^VALM1,CLEAN^VALM10
"RTN","IBTRR",27,0)
 Q
"RTN","IBTRR",28,0)
 ;
"RTN","IBTRR",29,0)
 ;
"RTN","IBTRR",30,0)
BLD ; build list of ROI Special Concents for a Patient by Active, Effective Date and Condition
"RTN","IBTRR",31,0)
 N IBCNT,IBRFN,IBR0,IBACT,IBS1,IBS2,IBS3 K ^TMP("IBTRR",$J),^TMP("IBTRRX",$J),^TMP($J,"IBTRR")
"RTN","IBTRR",32,0)
 S VALMCNT=0,IBCNT=0
"RTN","IBTRR",33,0)
 ;
"RTN","IBTRR",34,0)
 ; get patient records in reverse effective date then condition order
"RTN","IBTRR",35,0)
 S IBRFN=0 F  S IBRFN=$O(^IBT(356.26,"C",DFN,IBRFN)) Q:'IBRFN  D
"RTN","IBTRR",36,0)
 . S IBR0=$G(^IBT(356.26,IBRFN,0)) S IBACT=$$ACTIVE(IBRFN,DT) I 'IBACT S IBACT=9
"RTN","IBTRR",37,0)
 . S ^TMP($J,"IBTRR",IBACT,-$P(IBR0,U,4),+$P(IBR0,U,3),IBRFN)=""
"RTN","IBTRR",38,0)
 ;
"RTN","IBTRR",39,0)
 ; set up array for list manager display
"RTN","IBTRR",40,0)
 S IBS1="" F  S IBS1=$O(^TMP($J,"IBTRR",IBS1)) Q:IBS1=""  D
"RTN","IBTRR",41,0)
 . S IBS2="" F  S IBS2=$O(^TMP($J,"IBTRR",IBS1,IBS2)) Q:IBS2=""  D
"RTN","IBTRR",42,0)
 .. S IBS3="" F  S IBS3=$O(^TMP($J,"IBTRR",IBS1,IBS2,IBS3)) Q:IBS3=""  D
"RTN","IBTRR",43,0)
 ... S IBRFN=0 F  S IBRFN=$O(^TMP($J,"IBTRR",IBS1,IBS2,IBS3,IBRFN)) Q:'IBRFN  D
"RTN","IBTRR",44,0)
 .... D LINE(IBRFN)
"RTN","IBTRR",45,0)
 ;
"RTN","IBTRR",46,0)
 I '$D(^TMP($J,"IBTRR")) D SET(" ",0),SET("No ROI Special Consents for this Patient",0)
"RTN","IBTRR",47,0)
 Q
"RTN","IBTRR",48,0)
 ;
"RTN","IBTRR",49,0)
LINE(IBRFN) ; add one ROI entry to screen list
"RTN","IBTRR",50,0)
 N IBR0,IBX,IBY S IBX="" Q:'$G(IBRFN)
"RTN","IBTRR",51,0)
 S IBCNT=IBCNT+1 S IBR0=$G(^IBT(356.26,IBRFN,0))
"RTN","IBTRR",52,0)
 ;
"RTN","IBTRR",53,0)
 S IBY=IBCNT,IBX=$$SETFLD^VALM1(IBY,IBX,"NUMBER")
"RTN","IBTRR",54,0)
 S IBY=$$DATE($P(IBR0,U,4)),IBX=$$SETFLD^VALM1(IBY,IBX,"EFFECTIVE")
"RTN","IBTRR",55,0)
 S IBY=$$DATE($P(IBR0,U,5)),IBX=$$SETFLD^VALM1(IBY,IBX,"EXPIRE")
"RTN","IBTRR",56,0)
 S IBY=$$EXPAND^IBTRE(356.26,.03,$P(IBR0,U,3)),IBX=$$SETFLD^VALM1(IBY,IBX,"CONDITION")
"RTN","IBTRR",57,0)
 S IBY=$$STATUS(IBRFN,DT),IBX=$$SETFLD^VALM1(IBY,IBX,"STATUS")
"RTN","IBTRR",58,0)
 S IBY=$G(^IBT(356.26,IBRFN,2)),IBX=$$SETFLD^VALM1(IBY,IBX,"COMMENTS")
"RTN","IBTRR",59,0)
 D SET(IBX,IBCNT)
"RTN","IBTRR",60,0)
 Q
"RTN","IBTRR",61,0)
 ;
"RTN","IBTRR",62,0)
SET(X,CNT) ; set list manager screen array lines
"RTN","IBTRR",63,0)
 S VALMCNT=VALMCNT+1
"RTN","IBTRR",64,0)
 S ^TMP("IBTRR",$J,VALMCNT,0)=X Q:'CNT
"RTN","IBTRR",65,0)
 S ^TMP("IBTRR",$J,"IDX",VALMCNT,+CNT)=""
"RTN","IBTRR",66,0)
 S ^TMP("IBTRRX",$J,CNT)=VALMCNT_U_IBRFN
"RTN","IBTRR",67,0)
 Q
"RTN","IBTRR",68,0)
 ;
"RTN","IBTRR",69,0)
DATE(X) ; date in external format
"RTN","IBTRR",70,0)
 N Y S Y="" I $G(X)?7N.E S Y=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBTRR",71,0)
 Q Y
"RTN","IBTRR",72,0)
 ;
"RTN","IBTRR",73,0)
STATUS(IBRFN,DATE) ; return entries status: active or inactive/revoked on date
"RTN","IBTRR",74,0)
 N X,Y S X=""
"RTN","IBTRR",75,0)
 I +$G(IBRFN) S X="INACTIVE"
"RTN","IBTRR",76,0)
 I +$P($G(^IBT(356.26,+$G(IBRFN),0)),U,6) S X="REVOKED"
"RTN","IBTRR",77,0)
 I +$$ACTIVE(+$G(IBRFN),$G(DATE)) S X="ACTIVE"
"RTN","IBTRR",78,0)
 Q X
"RTN","IBTRR",79,0)
 ;
"RTN","IBTRR",80,0)
ACTIVE(IBRFN,DATE) ; return True if ROI entry is Active on date
"RTN","IBTRR",81,0)
 N X,IBR0 S X=0 S DATE=$G(DATE)\1 I DATE'?7N S DATE=DT
"RTN","IBTRR",82,0)
 S IBR0=$G(^IBT(356.26,+$G(IBRFN),0))
"RTN","IBTRR",83,0)
 I IBR0'="",DATE'<$P(IBR0,U,4),DATE'>$P(IBR0,U,5) S X=1
"RTN","IBTRR",84,0)
 Q X
"RTN","IBTRR1")
0^30^B38596413^n/a
"RTN","IBTRR1",1,0)
IBTRR1 ;ALB/ARH - CLAIMS TRACKING - ROI SPECIAL CONSENT ACTIONS ; 08-JAN-2013
"RTN","IBTRR1",2,0)
 ;;2.0;INTEGRATED BILLING;**458**;21-MAR-94;Build 4
"RTN","IBTRR1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRR1",4,0)
 ;
"RTN","IBTRR1",5,0)
AA ; Protocol Action:  Add an ROI Special Consent
"RTN","IBTRR1",6,0)
 I '$D(^XUSEC("IB ROI EDIT",DUZ)) W !!,"IB ROI EDIT Key Required to Add an ROI" H 2 S VALMBCK="R" Q
"RTN","IBTRR1",7,0)
 D FULL^VALM1
"RTN","IBTRR1",8,0)
 ;
"RTN","IBTRR1",9,0)
 D ADD I +$G(IBRFN) D EDIT
"RTN","IBTRR1",10,0)
 ;
"RTN","IBTRR1",11,0)
 D BLD^IBTRR
"RTN","IBTRR1",12,0)
 S VALMBCK="R"
"RTN","IBTRR1",13,0)
 Q
"RTN","IBTRR1",14,0)
 ;
"RTN","IBTRR1",15,0)
EA ; Protocol Action:  Edit an ROI Special Consent
"RTN","IBTRR1",16,0)
 I '$D(^XUSEC("IB ROI EDIT",DUZ)) W !!,"IB ROI EDIT Key Required to Edit an ROI" H 2 S VALMBCK="R" Q
"RTN","IBTRR1",17,0)
 D FULL^VALM1
"RTN","IBTRR1",18,0)
 ;
"RTN","IBTRR1",19,0)
 N VALMY,I,J,IBXXR,IBRFN
"RTN","IBTRR1",20,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBTRR1",21,0)
 I $D(VALMY) S IBXXR=0 F  S IBXXR=$O(VALMY(IBXXR)) Q:'IBXXR  D
"RTN","IBTRR1",22,0)
 . S IBRFN=$P($G(^TMP("IBTRRX",$J,+$O(^TMP("IBTRR",$J,"IDX",IBXXR,0)))),U,2)
"RTN","IBTRR1",23,0)
 . D ROIDSP(IBRFN)
"RTN","IBTRR1",24,0)
 . D EDIT
"RTN","IBTRR1",25,0)
 ;
"RTN","IBTRR1",26,0)
 D BLD^IBTRR
"RTN","IBTRR1",27,0)
 S VALMBCK="R"
"RTN","IBTRR1",28,0)
 Q
"RTN","IBTRR1",29,0)
 ;
"RTN","IBTRR1",30,0)
RA ; Protocol Action:  Revoke an ROI Special Consent
"RTN","IBTRR1",31,0)
 I '$D(^XUSEC("IB ROI EDIT",DUZ)) W !!,"IB ROI EDIT Key Required to Revoke an ROI" H 2 S VALMBCK="R" Q
"RTN","IBTRR1",32,0)
 D FULL^VALM1
"RTN","IBTRR1",33,0)
 ;
"RTN","IBTRR1",34,0)
 N VALMY,I,J,IBXXR,IBRFN
"RTN","IBTRR1",35,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBTRR1",36,0)
 I $D(VALMY) S IBXXR=0 F  S IBXXR=$O(VALMY(IBXXR)) Q:'IBXXR  D
"RTN","IBTRR1",37,0)
 . S IBRFN=$P($G(^TMP("IBTRRX",$J,+$O(^TMP("IBTRR",$J,"IDX",IBXXR,0)))),U,2)
"RTN","IBTRR1",38,0)
 . D ROIDSP(IBRFN)
"RTN","IBTRR1",39,0)
 . D REVOKE
"RTN","IBTRR1",40,0)
 ;
"RTN","IBTRR1",41,0)
 D BLD^IBTRR
"RTN","IBTRR1",42,0)
 S VALMBCK="R"
"RTN","IBTRR1",43,0)
 Q
"RTN","IBTRR1",44,0)
 ;
"RTN","IBTRR1",45,0)
DA ; Protocol Action:  Delete an ROI Special Consent
"RTN","IBTRR1",46,0)
 I '$D(^XUSEC("IB ROI EDIT",DUZ)) W !!,"IB ROI EDIT Key Required to Delete an ROI" H 2 S VALMBCK="R" Q
"RTN","IBTRR1",47,0)
 D FULL^VALM1
"RTN","IBTRR1",48,0)
 ;
"RTN","IBTRR1",49,0)
 N VALMY,I,J,IBXXR,IBRFN
"RTN","IBTRR1",50,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBTRR1",51,0)
 I $D(VALMY) S IBXXR=0 F  S IBXXR=$O(VALMY(IBXXR)) Q:'IBXXR  D
"RTN","IBTRR1",52,0)
 . S IBRFN=$P($G(^TMP("IBTRRX",$J,+$O(^TMP("IBTRR",$J,"IDX",IBXXR,0)))),U,2)
"RTN","IBTRR1",53,0)
 . D ROIDSP(IBRFN)
"RTN","IBTRR1",54,0)
 . D DELETE
"RTN","IBTRR1",55,0)
 ;
"RTN","IBTRR1",56,0)
 D BLD^IBTRR
"RTN","IBTRR1",57,0)
 S VALMBCK="R"
"RTN","IBTRR1",58,0)
 Q
"RTN","IBTRR1",59,0)
 ;
"RTN","IBTRR1",60,0)
OP ; Protocol Action:  Open ROI Screen - called from CT Editor IBTRE ROI CONSENT
"RTN","IBTRR1",61,0)
 D EN^IBTRR D HDR^IBTRE,BLD^IBTRE S VALMBCK="R"
"RTN","IBTRR1",62,0)
 Q
"RTN","IBTRR1",63,0)
 ;
"RTN","IBTRR1",64,0)
 ;
"RTN","IBTRR1",65,0)
ADD ; add a new ROI Special Consent entry, IBRFN set on exit (record incomplete)
"RTN","IBTRR1",66,0)
 N DD,DO,DA,DR,D0,DIR,DIC,DIE,DLAYGO,X,Y,VALMQUIT S IBRFN=0 W !
"RTN","IBTRR1",67,0)
 ;
"RTN","IBTRR1",68,0)
 I '$G(DFN) D PAT^IBCNSM W !! I '$D(DFN) Q
"RTN","IBTRR1",69,0)
 ;
"RTN","IBTRR1",70,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="Add a New ROI Special Consent" D ^DIR I Y'=1 Q
"RTN","IBTRR1",71,0)
 ;
"RTN","IBTRR1",72,0)
 W !!,"A New ROI Special Consent has been added for: ",$P($G(^DPT(+DFN,0)),U,1),!
"RTN","IBTRR1",73,0)
 ;
"RTN","IBTRR1",74,0)
 S X=$P(^IBT(356.26,0),U,3)+1
"RTN","IBTRR1",75,0)
 S DIC="^IBT(356.26,",DIC(0)="L",DLAYGO=356.26
"RTN","IBTRR1",76,0)
 S DIC("DR")=".02////"_DFN_";1.01///NOW;1.02////"_DUZ_";1.03///NOW;1.04////"_DUZ
"RTN","IBTRR1",77,0)
 D FILE^DICN K DIC,DIE,DLAYGO I Y>0 S IBRFN=+Y
"RTN","IBTRR1",78,0)
 ;
"RTN","IBTRR1",79,0)
 Q
"RTN","IBTRR1",80,0)
 ;
"RTN","IBTRR1",81,0)
EDIT ; edit an ROI Special Consent entry, IBRFN must be set on entry
"RTN","IBTRR1",82,0)
 N DIC,DIE,DR,DA,D0,IBROIBG,IBDIFF,X,Y
"RTN","IBTRR1",83,0)
 ;
"RTN","IBTRR1",84,0)
 I '$D(^IBT(356.26,+$G(IBRFN),0)) Q
"RTN","IBTRR1",85,0)
 D SAVE
"RTN","IBTRR1",86,0)
 ;
"RTN","IBTRR1",87,0)
 S DIE="^IBT(356.26,",DA=+IBRFN,DIE("NO^")="BACK"
"RTN","IBTRR1",88,0)
 S DR=".03;@1;.04;S IBROIBG=X;.05;I X<IBROIBG W !!,""Expiraton date must not be before the Effective Date!"",! S Y=""@1"";2.01"
"RTN","IBTRR1",89,0)
 D ^DIE
"RTN","IBTRR1",90,0)
 ;
"RTN","IBTRR1",91,0)
 D COMP I IBDIFF D UPDATE
"RTN","IBTRR1",92,0)
 K ^TMP($J,"IBTRRS",356.26)
"RTN","IBTRR1",93,0)
 Q
"RTN","IBTRR1",94,0)
 ;
"RTN","IBTRR1",95,0)
REVOKE ; revoke an ROI entry, IBRFN must be defined
"RTN","IBTRR1",96,0)
 N DIC,DIE,DR,DA,D0,IBDIFF,X,Y
"RTN","IBTRR1",97,0)
 ;
"RTN","IBTRR1",98,0)
 I '$D(^IBT(356.26,+$G(IBRFN),0)) Q
"RTN","IBTRR1",99,0)
 D SAVE
"RTN","IBTRR1",100,0)
 ;
"RTN","IBTRR1",101,0)
 S DIE="^IBT(356.26,",DA=+IBRFN,DIE("NO^")="BACK"
"RTN","IBTRR1",102,0)
 S DR=".06;I X'=1 S Y=""@1"";W !!,""Update the Expiration Date with the Date the revocation becomes effective."",!;.05;@1"
"RTN","IBTRR1",103,0)
 D ^DIE
"RTN","IBTRR1",104,0)
 ;
"RTN","IBTRR1",105,0)
 D COMP I IBDIFF D UPDATE
"RTN","IBTRR1",106,0)
 K ^TMP($J,"IBTRRS",356.26)
"RTN","IBTRR1",107,0)
 Q
"RTN","IBTRR1",108,0)
 ;
"RTN","IBTRR1",109,0)
DELETE ; delete and ROI entry, IBRFN must be defined
"RTN","IBTRR1",110,0)
 N DIR,DIK,DA,DIRUT,X,Y
"RTN","IBTRR1",111,0)
 ;
"RTN","IBTRR1",112,0)
 I '$D(^IBT(356.26,+$G(IBRFN),0)) Q
"RTN","IBTRR1",113,0)
 ;
"RTN","IBTRR1",114,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="Delete this ROI Special Consent" D ^DIR I Y'=1 W "  Not Deleted!" Q
"RTN","IBTRR1",115,0)
 ;
"RTN","IBTRR1",116,0)
 I Y=1 S DA=IBRFN,DIK="^IBT(356.26," D ^DIK W "  Entry Deleted!"
"RTN","IBTRR1",117,0)
 ;
"RTN","IBTRR1",118,0)
 Q
"RTN","IBTRR1",119,0)
 ;
"RTN","IBTRR1",120,0)
 ;
"RTN","IBTRR1",121,0)
SAVE ; save entry before editing
"RTN","IBTRR1",122,0)
 K ^TMP($J,"IBTRRS",356.26)
"RTN","IBTRR1",123,0)
 S ^TMP($J,"IBTRRS",356.26,IBRFN,0)=$G(^IBT(356.26,+IBRFN,0))
"RTN","IBTRR1",124,0)
 S ^TMP($J,"IBTRRS",356.26,IBRFN,1)=$G(^IBT(356.26,+IBRFN,1))
"RTN","IBTRR1",125,0)
 S ^TMP($J,"IBTRRS",356.26,IBRFN,2)=$G(^IBT(356.26,+IBRFN,2))
"RTN","IBTRR1",126,0)
 Q
"RTN","IBTRR1",127,0)
 ;
"RTN","IBTRR1",128,0)
COMP ; compare before editing global with current global entry
"RTN","IBTRR1",129,0)
 S IBDIFF=0
"RTN","IBTRR1",130,0)
 I $G(^IBT(356.26,+IBRFN,0))'=$G(^TMP($J,"IBTRRS",356.26,IBRFN,0)) S IBDIFF=1
"RTN","IBTRR1",131,0)
 I $G(^IBT(356.26,+IBRFN,1))'=$G(^TMP($J,"IBTRRS",356.26,IBRFN,1)) S IBDIFF=1
"RTN","IBTRR1",132,0)
 I $G(^IBT(356.26,+IBRFN,2))'=$G(^TMP($J,"IBTRRS",356.26,IBRFN,2)) S IBDIFF=1
"RTN","IBTRR1",133,0)
 Q
"RTN","IBTRR1",134,0)
 ;
"RTN","IBTRR1",135,0)
UPDATE ; update last edited fields for entry
"RTN","IBTRR1",136,0)
 N DIC,DIE,DR,DA,D0,X,Y
"RTN","IBTRR1",137,0)
 S DIE="^IBT(356.26,",DA=+IBRFN,DR="1.03///NOW;1.04////"_DUZ D ^DIE
"RTN","IBTRR1",138,0)
 Q
"RTN","IBTRR1",139,0)
 ;
"RTN","IBTRR1",140,0)
 ;
"RTN","IBTRR1",141,0)
ROIDSP(IBRFN) ; display an ROI entry
"RTN","IBTRR1",142,0)
 N IBR0,IBR1,IBR2,IBDS S IBDS="",$P(IBDS,"-",IOM+1)=""
"RTN","IBTRR1",143,0)
 S IBR0=$G(^IBT(356.26,+$G(IBRFN),0)) Q:IBR0=""
"RTN","IBTRR1",144,0)
 S IBR1=$G(^IBT(356.26,IBRFN,1)),IBR2=$G(^IBT(356.26,IBRFN,2))
"RTN","IBTRR1",145,0)
 ;
"RTN","IBTRR1",146,0)
 W !!,IBDS,!,"ROI Special Consent for ",$P($G(^DPT(+$P(IBR0,U,2),0)),U,1),":"
"RTN","IBTRR1",147,0)
 W !!,$$EXPAND^IBTRE(356.26,.03,$P(IBR0,U,3)),?37,$$DATE^IBTRR($P(IBR0,U,4))," - ",$$DATE^IBTRR($P(IBR0,U,5))
"RTN","IBTRR1",148,0)
 W ?60,$S(+$$ACTIVE^IBTRR(IBRFN,DT):"ACTIVE",1:"INACTIVE"),?70,$S(+$P(IBR0,U,6):"REVOKED",1:"")
"RTN","IBTRR1",149,0)
 W !!,"Comment: ",IBR2
"RTN","IBTRR1",150,0)
 W !!,"Entered by:   ",$E($$EXPAND^IBTRE(356.26,1.02,$P(IBR1,U,2)),1,21),?37,"Last Edited By:   ",$E($$EXPAND^IBTRE(356.26,1.04,$P(IBR1,U,4)),1,21)
"RTN","IBTRR1",151,0)
 W !,"Date Entered: ",$$FMTE^XLFDT($P(IBR1,U,1)),?37,"Date Last Edited: ",$$FMTE^XLFDT($P(IBR1,U,3)),!,IBDS,!
"RTN","IBTRR1",152,0)
 Q
"RTN","IBTRR1",153,0)
 ;
"RTN","IBTRR1",154,0)
 ;
"RTN","IBTRR1",155,0)
ROIPAT(DFN,DATE) ; return Indicators of Conditions Active for Patient on Date (LM Patient List header)
"RTN","IBTRR1",156,0)
 ; outputs alpha characters of sensitive conditions with active ROI
"RTN","IBTRR1",157,0)
 N IBX,IBY,IBZ,IBRFN,IBR0 S (IBX,IBY,IBZ)="" S DFN=+$G(DFN) S DATE=$G(DATE)\1 I DATE'?7N S DATE=DT
"RTN","IBTRR1",158,0)
 ;
"RTN","IBTRR1",159,0)
 S IBRFN=0 F  S IBRFN=$O(^IBT(356.26,"C",DFN,IBRFN)) Q:'IBRFN  D
"RTN","IBTRR1",160,0)
 . S IBR0=$G(^IBT(356.26,IBRFN,0))
"RTN","IBTRR1",161,0)
 . I IBR0'="",DATE'<$P(IBR0,U,4),DATE'>$P(IBR0,U,5) S IBY(+$P(IBR0,U,3))=""
"RTN","IBTRR1",162,0)
 S IBZ="" F IBY=1:1:4 I $D(IBY(IBY)) S IBZ=IBZ_IBY
"RTN","IBTRR1",163,0)
 S IBX=$TR(IBZ,"1234","DAHS")
"RTN","IBTRR1",164,0)
 Q IBX
"RTN","IBTRR1",165,0)
 ;
"RTN","IBTRR1",166,0)
ROIEVT(IBTRN,SHRT) ; return ROI Consent and Indicators for a specific CT Event and Date (LM Event Detail)
"RTN","IBTRR1",167,0)
 ; outputs CT entries ROI Consent and alpha characters of sensitive conditions with active ROI
"RTN","IBTRR1",168,0)
 ; 
"RTN","IBTRR1",169,0)
 N IBX,IBY,IBTRN0,IBRSC S IBX="" S IBTRN0=$G(^IBT(356,+$G(IBTRN),0)),IBRSC=$P(IBTRN0,U,31)
"RTN","IBTRR1",170,0)
 I +IBRSC S IBX=$$EXPAND^IBTRE(356,.31,IBRSC)_" "
"RTN","IBTRR1",171,0)
 I +IBRSC=2 S IBY=$$ROIPAT(+$P(IBTRN0,U,2),+$P(IBTRN0,U,6)) I IBY'="" S:$G(SHRT) IBX=$E(IBX,1,6) S IBX=IBX_"("_IBY_")"
"RTN","IBTRR1",172,0)
 Q IBX
"RTN","IBTRV")
0^31^B29049324^B28763805
"RTN","IBTRV",1,0)
IBTRV ;ALB/AAS - CLAIMS TRACKING REVIEWS (UR) ; 27-JUN-1993
"RTN","IBTRV",2,0)
 ;;2.0;INTEGRATED BILLING;**40,121,124,250,277,458**;21-MAR-94;Build 4
"RTN","IBTRV",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRV",4,0)
 ;
"RTN","IBTRV",5,0)
% ;
"RTN","IBTRV",6,0)
EN ; -- main entry point for IBT REVIEW EDITOR from menu's
"RTN","IBTRV",7,0)
 ;
"RTN","IBTRV",8,0)
 I '$D(DT) D DT^DICRW
"RTN","IBTRV",9,0)
 K XQORS,VALMEVL,IBTRV,IBTRN,DFN,IBTRC,IBTRD,IBFASTXT,VALMQUIT
"RTN","IBTRV",10,0)
 G:$D(VALMQUIT) ENQ
"RTN","IBTRV",11,0)
 D PAT^IBCNSM I $D(VALMQUIT) G ENQ
"RTN","IBTRV",12,0)
 D TRAC I $D(VALMQUIT) G ENQ
"RTN","IBTRV",13,0)
 I '$G(IBTRPRF) S IBTRPRF="12"
"RTN","IBTRV",14,0)
 D EN^VALM("IBT REVIEW EDITOR")
"RTN","IBTRV",15,0)
ENQ K XQORS,VALMEVL,IBTRV,IBTRN,DFN,IBTRC,IBTRD,IBFASTXT,VALMQUIT,IBI,IBICD,IBTRND,VA,VAERR,VA200,VAINDT,X,Y,IBTRPRF,IBCNT,VALMBCK,OFFSET,I1,I3,IBNEW,IBDENT,IBOE,Z1,T,SDCNT
"RTN","IBTRV",16,0)
 K IBAMT,IBAPR,IBADG,IBDA,IBDGCR,IBDGCRU1,IBDV,IBETYP,IBETYPD,IBI,IBICD,IBLCNT,IBSEL,IBT,IBTEXT,IBTNOD,IBTSAV,VAUTD
"RTN","IBTRV",17,0)
 K IBAPEAL,IBCDFN,IBCNT,IBDEN,IBDENIAL,IBDENIAL,IBPARNT,IBPEN,IBPENAL,IBTCOD,IBTRDD,IBTRSV,IBTYPE,VAINDT,VA
"RTN","IBTRV",18,0)
 D KVAR^VADPT
"RTN","IBTRV",19,0)
 Q
"RTN","IBTRV",20,0)
 ;
"RTN","IBTRV",21,0)
HDR ; -- header code
"RTN","IBTRV",22,0)
 D PID^VADPT N IBXR
"RTN","IBTRV",23,0)
 S VALMHDR(1)=" Hospital Review Entries for: "_$$PT^IBTUTL1(DFN)
"RTN","IBTRV",24,0)
 S IBXR=$$ROIEVT^IBTRR1(IBTRN) I IBXR'="" S VALMHDR(1)=VALMHDR(1)_$J(" ",(60-$L(VALMHDR(1))))_"ROI: "_IBXR
"RTN","IBTRV",25,0)
 S VALMHDR(2)="                         for: "_$$EXPAND^IBTRE(356,.18,$P(IBTRND,"^",18))_" on "_$$DAT1^IBOUTL($P(IBTRND,"^",6),"2P")
"RTN","IBTRV",26,0)
 Q
"RTN","IBTRV",27,0)
 ;
"RTN","IBTRV",28,0)
INIT ; -- init variables and list array
"RTN","IBTRV",29,0)
 S U="^",VALMCNT=0,VALMBG=1
"RTN","IBTRV",30,0)
 K ^TMP("IBTRV",$J),^TMP("IBTRVDX",$J),I,X,XQORNOD,DA,DR,DIE,DNM,DQ
"RTN","IBTRV",31,0)
 S IBTRND=$G(^IBT(356,+IBTRN,0)) D BLD Q
"RTN","IBTRV",32,0)
 ;
"RTN","IBTRV",33,0)
BLD ; -- Build list of Reviews
"RTN","IBTRV",34,0)
 K ^TMP("IBTRV",$J),^TMP("IBTRVDX",$J)
"RTN","IBTRV",35,0)
 N IBI,J,IBTRV,IBTRVD,IBUR
"RTN","IBTRV",36,0)
 S IBUR=$$IBUR(IBTRN)
"RTN","IBTRV",37,0)
 I IBUR'="" S VALMSG=IBUR
"RTN","IBTRV",38,0)
 S (IBTRV,IBCNT,VALMCNT)=0,IBI=""
"RTN","IBTRV",39,0)
 F  S IBI=$O(^IBT(356.1,"ATIDT",+IBTRN,IBI)) Q:'IBI  S IBTRV=0 F  S IBTRV=$O(^IBT(356.1,"ATIDT",IBTRN,IBI,IBTRV)) Q:'IBTRV  D
"RTN","IBTRV",40,0)
 .W "."
"RTN","IBTRV",41,0)
 .S IBTRVD=$G(^IBT(356.1,+IBTRV,0))
"RTN","IBTRV",42,0)
 .Q:'+$P(IBTRVD,"^",21)  ;quit if inactive
"RTN","IBTRV",43,0)
 .N VAIN,VAINDT S VAINDT=$$VNDT(IBTRV) D INP^VADPT
"RTN","IBTRV",44,0)
 .I VAIN(4)="" S VAINDT=$P(IBTRND,"^",6) D INP^VADPT
"RTN","IBTRV",45,0)
 .S IBCNT=IBCNT+1
"RTN","IBTRV",46,0)
 .S X=""
"RTN","IBTRV",47,0)
 .S X=$$SETFLD^VALM1(IBCNT,X,"NUMBER")
"RTN","IBTRV",48,0)
 .S X=$$SETFLD^VALM1($$DAT1^IBOUTL(+IBTRVD,2),X,"RV DATE")
"RTN","IBTRV",49,0)
 .;S X=$$SETFLD^VALM1($P($G(^IBE(356.11,+$P(IBTRVD,"^",22),0)),"^"),X,"TYPE")
"RTN","IBTRV",50,0)
 .S X=$$SETFLD^VALM1($P($G(^IBE(356.11,+$P(IBTRVD,"^",22),0)),"^",3),X,"TYPE")
"RTN","IBTRV",51,0)
 .S X=$$SETFLD^VALM1($E($$EXPAND^IBTRE(356.1,.21,$P(IBTRVD,"^",21)),1,8),X,"STATUS")
"RTN","IBTRV",52,0)
 .S X=$$SETFLD^VALM1($P($G(^DIC(45.7,+$P(IBTRVD,"^",7),0)),"^"),X,"SPEC")
"RTN","IBTRV",53,0)
 .S X=$$SETFLD^VALM1($J($P(IBTRVD,"^",3),2),X,"DAY")
"RTN","IBTRV",54,0)
 .S X=$$SETFLD^VALM1($$DAT1^IBOUTL($P(IBTRVD,"^",20),2),X,"NEXT")
"RTN","IBTRV",55,0)
 .S X=$$SETFLD^VALM1($P(VAIN(4),"^",2),X,"WARD")
"RTN","IBTRV",56,0)
 .S X=$$SETFLD^VALM1(VAIN(5),X,"BED")
"RTN","IBTRV",57,0)
 .S X=$$SETFLD^VALM1(IBUR,X,"RV REASON")
"RTN","IBTRV",58,0)
 .D SET(X)
"RTN","IBTRV",59,0)
 Q
"RTN","IBTRV",60,0)
 ;
"RTN","IBTRV",61,0)
SET(X) ; -- set arrays
"RTN","IBTRV",62,0)
 S VALMCNT=VALMCNT+1
"RTN","IBTRV",63,0)
 S ^TMP("IBTRV",$J,VALMCNT,0)=X
"RTN","IBTRV",64,0)
 S ^TMP("IBTRV",$J,"IDX",VALMCNT,IBCNT)=""
"RTN","IBTRV",65,0)
 S ^TMP("IBTRVDX",$J,IBCNT)=VALMCNT_"^"_IBTRV
"RTN","IBTRV",66,0)
 Q
"RTN","IBTRV",67,0)
HELP ; -- help code
"RTN","IBTRV",68,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBTRV",69,0)
 Q
"RTN","IBTRV",70,0)
 ;
"RTN","IBTRV",71,0)
EXIT ; -- exit code
"RTN","IBTRV",72,0)
 K ^TMP("IBTRV",$J),^TMP("IBTRVDX",$J)
"RTN","IBTRV",73,0)
 K IBTRV D CLEAN^VALM10 Q
"RTN","IBTRV",74,0)
 ;
"RTN","IBTRV",75,0)
TRAC ; -- Select tracking entry
"RTN","IBTRV",76,0)
 N X,Y,DIC,IBDFLT
"RTN","IBTRV",77,0)
 I '$D(DFN) S VALMQUIT="" G TRACQ
"RTN","IBTRV",78,0)
 ;S DIC("A")="Select VISIT: ",D="ADFN"_DFN
"RTN","IBTRV",79,0)
 ;S DIC("S")="I $P(^(0),U,20)"
"RTN","IBTRV",80,0)
 ;; Patch 40 custom look.
"RTN","IBTRV",81,0)
 ;S DIC("W")="S IBX=^(0) D PRINT^IBTRE20"
"RTN","IBTRV",82,0)
 ;S DIC="^IBT(356,",DIC(0)="EQS",X="???" D IX^DIC
"RTN","IBTRV",83,0)
 ;
"RTN","IBTRV",84,0)
 S IBDFLT=$$DEFV(DFN)
"RTN","IBTRV",85,0)
 D LIST(DFN,IBDFLT)
"RTN","IBTRV",86,0)
 ;
"RTN","IBTRV",87,0)
 S DIC("A")="Select VISIT: "
"RTN","IBTRV",88,0)
 S DIC("S")="I $P(^(0),U,2)=DFN,$P(^(0),U,20)"
"RTN","IBTRV",89,0)
 S DIC="^IBT(356,",DIC(0)="AEQNM"
"RTN","IBTRV",90,0)
 I IBDFLT S DIC("B")=IBDFLT
"RTN","IBTRV",91,0)
 ; -- return IBY = Y as returned by dic
"RTN","IBTRV",92,0)
 D ^DIC S IBY=Y I +Y<1 S VALMQUIT="" G TRACQ
"RTN","IBTRV",93,0)
 S IBTRN=+Y
"RTN","IBTRV",94,0)
TRACQ Q
"RTN","IBTRV",95,0)
 ;
"RTN","IBTRV",96,0)
DEFV(DFN) ; -- compute default visit for patient
"RTN","IBTRV",97,0)
 N X,IBA,IBJ,IBX,IBY S X=""
"RTN","IBTRV",98,0)
 I '+$G(DFN) G DEFVQ
"RTN","IBTRV",99,0)
 I '$O(^IBT(356,"C",DFN,0)) G DEFVQ
"RTN","IBTRV",100,0)
 ; -- default = current inpt
"RTN","IBTRV",101,0)
 S IBA=+$G(^DPT(DFN,.105)),X="" I IBA S X=$P($G(^IBT(356,+$O(^IBT(356,"AD",+IBA,0)),0)),"^") I X G DEFVQ
"RTN","IBTRV",102,0)
 ;
"RTN","IBTRV",103,0)
 S IBX=0 F  S IBX=$O(^IBT(356,"ADFN"_DFN,IBX)) Q:'IBX  S IBY=$O(^IBT(356,"ADFN"_DFN,IBX,0)) I $P($G(^IBT(356,+IBY,0)),"^",20) D
"RTN","IBTRV",104,0)
 .I $P(^IBT(356,+IBY,0),"^",32),'$P(^(0),"^",5) S X=IBX
"RTN","IBTRV",105,0)
 .S IBJ=IBX
"RTN","IBTRV",106,0)
 I X G DEFVQ
"RTN","IBTRV",107,0)
 ;
"RTN","IBTRV",108,0)
 S IBX=0 F  S IBX=$O(^IBT(356,"ADM",DFN,IBX)) Q:'IBX  S IBY=$O(^IBT(356,"ADM",DFN,IBX,0)) D
"RTN","IBTRV",109,0)
 .I $P($G(^IBT(356,+IBY,0)),"^",20) S X=$P(^(0),"^")
"RTN","IBTRV",110,0)
 G:$L(X) DEFVQ
"RTN","IBTRV",111,0)
 S X=$G(IBJ)
"RTN","IBTRV",112,0)
 ;
"RTN","IBTRV",113,0)
DEFVQ Q X
"RTN","IBTRV",114,0)
VNDT(X) ; -- compute vaindt for call to inp^vadtp
"RTN","IBTRV",115,0)
 ; -- Input  x = internal entry of review
"RTN","IBTRV",116,0)
 N Y S Y=""
"RTN","IBTRV",117,0)
 S Y=+$G(^IBT(356.1,+$G(X),0)) S:$$TRTP(+$G(X))'=40 Y=Y+.24
"RTN","IBTRV",118,0)
 Q Y
"RTN","IBTRV",119,0)
 ;
"RTN","IBTRV",120,0)
TRTP(X) ; -- Compute Review type code
"RTN","IBTRV",121,0)
 ;    Input x = internal entry of review
"RTN","IBTRV",122,0)
 ;    output  = code for review from 356.11
"RTN","IBTRV",123,0)
 Q $P($G(^IBE(356.11,+$P($G(^IBT(356.1,+$G(X),0)),"^",22),0)),"^",2)
"RTN","IBTRV",124,0)
 ;
"RTN","IBTRV",125,0)
IBUR(IBTRN) ; -- reason for review
"RTN","IBTRV",126,0)
 N IBUR,IBTRND
"RTN","IBTRV",127,0)
 S IBUR="",IBTRND=$G(^IBT(356,+$G(IBTRN),0))
"RTN","IBTRV",128,0)
 S:$P(IBTRND,"^",25) IBUR="Random Sample" S:$P(IBTRND,"^",26) IBUR=IBUR_$S(IBUR="":"",1:"/")_$$EXPAND^IBTRE(356,.26,$P(IBTRND,"^",26))
"RTN","IBTRV",129,0)
 S:$P(IBTRND,"^",27) IBUR=IBUR_$S(IBUR="":"",1:"/")_"Local Addition"
"RTN","IBTRV",130,0)
 Q IBUR
"RTN","IBTRV",131,0)
 ;
"RTN","IBTRV",132,0)
LIST(DFN,DFLT) ; list 1 screen of most recent CT entries
"RTN","IBTRV",133,0)
 Q:'$G(DFN)  N IBX,IBY,IBA,IBCNT S IBCNT=0
"RTN","IBTRV",134,0)
 ;
"RTN","IBTRV",135,0)
 W !!,"Choose from:"
"RTN","IBTRV",136,0)
 S IBY="" F  S IBY=$O(^IBT(356,"C",DFN,IBY),-1) Q:'IBY  D  Q:IBCNT>17
"RTN","IBTRV",137,0)
 . I +$P($G(^IBT(356,+IBY,0)),U,20) S IBCNT=IBCNT+1,IBA(IBY)=""
"RTN","IBTRV",138,0)
 I '$O(IBA("")) W !,"   There are no Claims Tracking entries for this patient."
"RTN","IBTRV",139,0)
 I +IBY,+$O(^IBT(356,"C",DFN,IBY),-1) W !,"   ..."
"RTN","IBTRV",140,0)
 ;
"RTN","IBTRV",141,0)
 S IBY="" F  S IBY=$O(IBA(IBY)) Q:'IBY  S IBX=$G(^IBT(356,IBY,0)) W !,?3,$P(IBX,U,1) D PRINT^IBTRE20
"RTN","IBTRV",142,0)
 ;
"RTN","IBTRV",143,0)
 I $G(DFLT)'="" S IBY=+$O(^IBT(356,"B",DFLT,0)) I +IBY S IBX=$G(^IBT(356,+IBY,0)) W !!,?3,$P(IBX,U,1) D PRINT^IBTRE20
"RTN","IBTRV",144,0)
 W !
"RTN","IBTRV",145,0)
 Q
"RTN","IBTRVD")
0^32^B7748942^B7583123
"RTN","IBTRVD",1,0)
IBTRVD ;ALB/AAS - CLAIMS TRACKING - EXPANDED REVIEW SCREEN;02-JUL-1993
"RTN","IBTRVD",2,0)
 ;;2.0;INTEGRATED BILLING;**266,458**;21-MAR-94;Build 4
"RTN","IBTRVD",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRVD",4,0)
% ;
"RTN","IBTRVD",5,0)
EN ; -- main entry point for IBT EXPAND/EDIT REVIEW from menus
"RTN","IBTRVD",6,0)
 K XQORS,VALMEVL,IBTRV,IBTRN,DFN,IBTRC,IBTRD
"RTN","IBTRVD",7,0)
 I '$D(IBTRV) G ^IBTRV
"RTN","IBTRVD",8,0)
 D EN^VALM("IBT EXPAND/EDIT REVIEW")
"RTN","IBTRVD",9,0)
 Q
"RTN","IBTRVD",10,0)
 ;
"RTN","IBTRVD",11,0)
HDR ; -- header code
"RTN","IBTRVD",12,0)
 D PID^VADPT N IBXR
"RTN","IBTRVD",13,0)
 S VALMHDR(1)="Expanded Review for: "_$$PT^IBTUTL1(DFN)
"RTN","IBTRVD",14,0)
 S IBXR=$$ROIEVT^IBTRR1(IBTRN) I IBXR'="" S VALMHDR(1)=VALMHDR(1)_$J(" ",(60-$L(VALMHDR(1))))_"ROI: "_IBXR
"RTN","IBTRVD",15,0)
 S VALMHDR(2)="                for: "_$P($G(^IBE(356.11,+$P(IBTRVD,"^",22),0)),"^")_" on "_$$DAT1^IBOUTL(+IBTRVD)
"RTN","IBTRVD",16,0)
 Q
"RTN","IBTRVD",17,0)
 ;
"RTN","IBTRVD",18,0)
INIT ; -- init variables and list array
"RTN","IBTRVD",19,0)
 N IBTRND,IBTRVD,IBTRVD1,IBTRTP,VAIN,VAINDT
"RTN","IBTRVD",20,0)
 K VALMQUIT
"RTN","IBTRVD",21,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBTRVD",22,0)
 D BLD,HDR
"RTN","IBTRVD",23,0)
 Q
"RTN","IBTRVD",24,0)
 ;
"RTN","IBTRVD",25,0)
BLD ; -- build dispaly
"RTN","IBTRVD",26,0)
 K ^TMP("IBTRVD",$J),^TMP("IBTRVDDX",$J)
"RTN","IBTRVD",27,0)
 S IBTRND=$G(^IBT(356,IBTRN,0))
"RTN","IBTRVD",28,0)
 S IBTRVD=$G(^IBT(356.1,+IBTRV,0))
"RTN","IBTRVD",29,0)
 S IBTRVD1=$G(^IBT(356.1,+IBTRV,1))
"RTN","IBTRVD",30,0)
 S IBTRTP=$$TRTP^IBTRV(IBTRV)
"RTN","IBTRVD",31,0)
 F I=1:1:28 D BLANK^IBTRED(.I)
"RTN","IBTRVD",32,0)
 D KILL^VALM10()
"RTN","IBTRVD",33,0)
 S VALMCNT=28
"RTN","IBTRVD",34,0)
 D ^IBTRVD0,COMMENT,CLIN
"RTN","IBTRVD",35,0)
 Q
"RTN","IBTRVD",36,0)
 ;
"RTN","IBTRVD",37,0)
 ;
"RTN","IBTRVD",38,0)
CLIN ; -- Clinical info plus DRG/los information
"RTN","IBTRVD",39,0)
 N OFFSET,START,DGPM,IBDT,IBDR
"RTN","IBTRVD",40,0)
 S START=17,OFFSET=45
"RTN","IBTRVD",41,0)
 ;D SET^IBCNSP(START,OFFSET," Clinical Information ",IORVON,IORVOFF)
"RTN","IBTRVD",42,0)
 D CLIN1^IBTRED0
"RTN","IBTRVD",43,0)
 Q:$$TRTP^IBTRE1(IBTRN)>1
"RTN","IBTRVD",44,0)
 S DGPM=+$P(^IBT(356,IBTRN,0),"^",5)
"RTN","IBTRVD",45,0)
 S IBDT=0 F  S IBDT=$O(^IBT(356.93,"AMVD",+DGPM,IBDT)) Q:'IBDT  S IBDR=$O(^IBT(356.93,"AMVD",+DGPM,IBDT,0))
"RTN","IBTRVD",46,0)
 S IBDR=$G(^IBT(356.93,+$G(IBDR),0))
"RTN","IBTRVD",47,0)
 D SET^IBCNSP(START+6,OFFSET,"   Interim DRG: "_$S(+IBDR:+IBDR_" - "_$$DRGTD^IBACSV(+IBDR,$P(IBDR,"^",3))_" on "_$$DAT1^IBOUTL($P(IBDR,"^",3)),1:""))
"RTN","IBTRVD",48,0)
 D SET^IBCNSP(START+7,OFFSET," Estimate ALOS: "_$S(+IBDR:$J($P(IBDR,"^",4),6,1),1:""))
"RTN","IBTRVD",49,0)
 D SET^IBCNSP(START+8,OFFSET,"Days Remaining: "_$S(+IBDR:$J($P(IBDR,"^",5),6),1:""))
"RTN","IBTRVD",50,0)
 Q
"RTN","IBTRVD",51,0)
 ;
"RTN","IBTRVD",52,0)
COMMENT ; -- Display Comment
"RTN","IBTRVD",53,0)
 N OFFSET,START,I,IBLCNT
"RTN","IBTRVD",54,0)
 S START=27,OFFSET=2
"RTN","IBTRVD",55,0)
 D SET^IBCNSP(START,OFFSET," Review Comments ",IORVON,IORVOFF)
"RTN","IBTRVD",56,0)
 S (IBLCNT,IBI)=0 F  S IBI=$O(^IBT(356.1,IBTRV,11,IBI)) Q:IBI<1  D
"RTN","IBTRVD",57,0)
 .S IBLCNT=IBLCNT+1
"RTN","IBTRVD",58,0)
 .D SET^IBCNSP(START+IBLCNT,OFFSET,"  "_$E($G(^IBT(356.1,IBTRV,11,IBI,0)),1,80))
"RTN","IBTRVD",59,0)
 Q
"RTN","IBTRVD",60,0)
 ;
"RTN","IBTRVD",61,0)
HELP ; -- help code
"RTN","IBTRVD",62,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBTRVD",63,0)
 Q
"RTN","IBTRVD",64,0)
 ;
"RTN","IBTRVD",65,0)
EXIT ; -- exit code
"RTN","IBTRVD",66,0)
 K VALMQUIT,IBTRV
"RTN","IBTRVD",67,0)
 D CLEAN^VALM10,FULL^VALM1
"RTN","IBTRVD",68,0)
 Q
"RTN","IBTRVD0")
0^33^B23753223^B23418245
"RTN","IBTRVD0",1,0)
IBTRVD0 ;ALB/AAS - CLAIMS TRACKING - EXPANDED REVIEW SCREEN ; 02-JUL-1993
"RTN","IBTRVD0",2,0)
 ;;2.0;INTEGRATED BILLING;**58,458**;21-MAR-94;Build 4
"RTN","IBTRVD0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRVD0",4,0)
 ;
"RTN","IBTRVD0",5,0)
% I '$G(IBTRV) G ^IBTRV
"RTN","IBTRVD0",6,0)
 D VISIT,REVIEW,STATUS,CRITER
"RTN","IBTRVD0",7,0)
 Q
"RTN","IBTRVD0",8,0)
 ;
"RTN","IBTRVD0",9,0)
VISIT ; -- Visit information
"RTN","IBTRVD0",10,0)
 N OFFSET,START,VAIN,VAINDT,IBETYP
"RTN","IBTRVD0",11,0)
 S VAINDT=$$VNDT^IBTRV(IBTRV)
"RTN","IBTRVD0",12,0)
 S VA200="" D INP^VADPT
"RTN","IBTRVD0",13,0)
 S IBETYP=$G(^IBE(356.6,+$P(IBTRND,"^",18),0))
"RTN","IBTRVD0",14,0)
 S START=1,OFFSET=2
"RTN","IBTRVD0",15,0)
 D VISIT^IBTRED
"RTN","IBTRVD0",16,0)
 Q
"RTN","IBTRVD0",17,0)
 ;
"RTN","IBTRVD0",18,0)
REVIEW ; -- Review Information
"RTN","IBTRVD0",19,0)
 N OFFSET,START,IBI,IBTRC,IBTRCD
"RTN","IBTRVD0",20,0)
 S START=1,OFFSET=45
"RTN","IBTRVD0",21,0)
 ; -- get related review information
"RTN","IBTRVD0",22,0)
 S (IBTRC,IBI)=0 F  S IBI=$O(^IBT(356.2,"AD",IBTRV,IBI)) Q:'IBI  S IBTRC=IBI
"RTN","IBTRVD0",23,0)
 S IBTRCD=$G(^IBT(356.2,+IBTRC,0))
"RTN","IBTRVD0",24,0)
 D SET^IBCNSP(START,OFFSET," Review Information ",IORVON,IORVOFF)
"RTN","IBTRVD0",25,0)
 D SET^IBCNSP(START+1,OFFSET,"    Review Type: "_$P($G(^IBE(356.11,+$P(IBTRVD,"^",22),0)),"^",1))
"RTN","IBTRVD0",26,0)
 D SET^IBCNSP(START+2,OFFSET,"    Review Date: "_$$DAT1^IBOUTL(+IBTRVD,"2P"))
"RTN","IBTRVD0",27,0)
 D SET^IBCNSP(START+3,OFFSET,"      Specialty: "_$P($G(^DIC(45.7,+$P(IBTRVD,"^",7),0)),"^"))
"RTN","IBTRVD0",28,0)
 D SET^IBCNSP(START+4,OFFSET,"    Methodology: "_$$EXPAND^IBTRE(356.1,.23,$P(IBTRVD,"^",23)))
"RTN","IBTRVD0",29,0)
 D SET^IBCNSP(START+5,OFFSET,"    Ins. Action: "_$P($G(^IBE(356.7,+$P(IBTRCD,"^",11),0)),"^"))
"RTN","IBTRVD0",30,0)
 Q
"RTN","IBTRVD0",31,0)
 ;
"RTN","IBTRVD0",32,0)
UNIT ; -- Special unit information
"RTN","IBTRVD0",33,0)
 ;  for patch 58 and the 1995 interqual criteria, this entry to display
"RTN","IBTRVD0",34,0)
 ;  the special unit information is no longer used
"RTN","IBTRVD0",35,0)
 N OFFSET,START
"RTN","IBTRVD0",36,0)
 S START=8,OFFSET=45
"RTN","IBTRVD0",37,0)
 D SET^IBCNSP(START,OFFSET," Special Unit Information ",IORVON,IORVOFF)
"RTN","IBTRVD0",38,0)
 I IBTRTP=40 D SET^IBCNSP(START+1,OFFSET," D/C Screen Met: "_$$SI($P(IBTRVD,"^",13))) Q
"RTN","IBTRVD0",39,0)
 D SET^IBCNSP(START+1,OFFSET,"Special Unit SI: "_$$SI($P(IBTRVD,"^",8)))
"RTN","IBTRVD0",40,0)
 D SET^IBCNSP(START+2,OFFSET,"Special Unit IS: "_$$SI($P(IBTRVD,"^",9)))
"RTN","IBTRVD0",41,0)
 Q
"RTN","IBTRVD0",42,0)
 ;
"RTN","IBTRVD0",43,0)
STATUS ; -- Status/user information
"RTN","IBTRVD0",44,0)
 N OFFSET,START
"RTN","IBTRVD0",45,0)
 S START=17,OFFSET=2
"RTN","IBTRVD0",46,0)
 D SET^IBCNSP(START,OFFSET," Status Information ",IORVON,IORVOFF)
"RTN","IBTRVD0",47,0)
 D SET^IBCNSP(START+1,OFFSET,"   Review Status: "_$$EXPAND^IBTRE(356.1,.21,$P(IBTRVD,"^",21)))
"RTN","IBTRVD0",48,0)
 D SET^IBCNSP(START+2,OFFSET,"      Entered by: "_$P($G(^VA(200,+$P(IBTRVD1,"^",2),0)),"^"))
"RTN","IBTRVD0",49,0)
 D SET^IBCNSP(START+3,OFFSET,"      Entered on: "_$$DAT1^IBOUTL($P(IBTRVD1,"^",1),"2P"))
"RTN","IBTRVD0",50,0)
 D SET^IBCNSP(START+4,OFFSET,"    Completed by: "_$P($G(^VA(200,+$P(IBTRVD1,"^",4),0)),"^"))
"RTN","IBTRVD0",51,0)
 D SET^IBCNSP(START+5,OFFSET,"    Completed on: "_$$DAT1^IBOUTL($P(IBTRVD1,"^",3),"2P"))
"RTN","IBTRVD0",52,0)
 I $P(IBTRVD,"^",21)<3 D SET^IBCNSP(START+6,OFFSET,"Next Review Date: "_$$DAT1^IBOUTL($P(IBTRVD,"^",20),"2P")) G STATQ
"RTN","IBTRVD0",53,0)
STATQ Q
"RTN","IBTRVD0",54,0)
 ;
"RTN","IBTRVD0",55,0)
CRITER ; -- Criteria information
"RTN","IBTRVD0",56,0)
 N OFFSET,START,IBD,IBNAR,IBNARD
"RTN","IBTRVD0",57,0)
 S START=8,OFFSET=2
"RTN","IBTRVD0",58,0)
 D SET^IBCNSP(START,OFFSET," Criteria Information ",IORVON,IORVOFF)
"RTN","IBTRVD0",59,0)
 I IBTRTP D @IBTRTP
"RTN","IBTRVD0",60,0)
 Q
"RTN","IBTRVD0",61,0)
10 ; -- precert review
"RTN","IBTRVD0",62,0)
15 ; -- admission review
"RTN","IBTRVD0",63,0)
20 ; -- urgent adm. review
"RTN","IBTRVD0",64,0)
25 ;
"RTN","IBTRVD0",65,0)
35 ;
"RTN","IBTRVD0",66,0)
50 ;
"RTN","IBTRVD0",67,0)
55 ;
"RTN","IBTRVD0",68,0)
60 ;
"RTN","IBTRVD0",69,0)
65 ;
"RTN","IBTRVD0",70,0)
70 ;
"RTN","IBTRVD0",71,0)
80 ;
"RTN","IBTRVD0",72,0)
85 ;
"RTN","IBTRVD0",73,0)
90 ;
"RTN","IBTRVD0",74,0)
100 ;
"RTN","IBTRVD0",75,0)
 ;
"RTN","IBTRVD0",76,0)
 D SET^IBCNSP(START+1,OFFSET," Severity of Ill: "_$E($$SI($P(IBTRVD,"^",4)),1,22))
"RTN","IBTRVD0",77,0)
 D SET^IBCNSP(START+2,OFFSET,"Intensity of Svc: "_$E($$SI($P(IBTRVD,"^",5)),1,22))
"RTN","IBTRVD0",78,0)
 D SET^IBCNSP(START+3,OFFSET,"    Criteria Met: "_$$EXPAND^IBTRE(356.1,.06,$P(IBTRVD,"^",6)))
"RTN","IBTRVD0",79,0)
 D SET^IBCNSP(START+4,OFFSET," Prov. Intervwed: "_$$EXPAND^IBTRE(356.1,.1,$P(IBTRVD,"^",10)))
"RTN","IBTRVD0",80,0)
 D SET^IBCNSP(START+5,OFFSET," Dec. Influenced: "_$$EXPAND^IBTRE(356.1,.11,$P(IBTRVD,"^",11)))
"RTN","IBTRVD0",81,0)
 D SET^IBCNSP(START+6,OFFSET,"Non-Acute Reason: ")
"RTN","IBTRVD0",82,0)
 S IBD=5
"RTN","IBTRVD0",83,0)
 ;
"RTN","IBTRVD0",84,0)
 S IBNAR=0 F  S IBNAR=$O(^IBT(356.1,+IBTRV,12,IBNAR)) Q:'IBNAR  D
"RTN","IBTRVD0",85,0)
 .S IBNARD=$G(^IBT(356.1,+IBTRV,12,IBNAR,0))
"RTN","IBTRVD0",86,0)
 .S IBD=IBD+1 Q:IBD>8
"RTN","IBTRVD0",87,0)
 .D SET^IBCNSP(START+IBD,OFFSET,"Non-Acute Reason: "_$P($G(^IBE(356.4,+IBNARD,0)),"^",2)_" - "_$P($G(^(0)),"^"))
"RTN","IBTRVD0",88,0)
 Q
"RTN","IBTRVD0",89,0)
 ;
"RTN","IBTRVD0",90,0)
30 ; -- concurrent review
"RTN","IBTRVD0",91,0)
 D SET^IBCNSP(START+1,OFFSET,"    Day of Review: "_$J($P(IBTRVD,"^",3),2))
"RTN","IBTRVD0",92,0)
 D SET^IBCNSP(START+2,OFFSET,"  Severity of Ill: "_$E($$SI($P(IBTRVD,"^",4)),1,22))
"RTN","IBTRVD0",93,0)
 D SET^IBCNSP(START+3,OFFSET," Intensity of Svc: "_$E($$SI($P(IBTRVD,"^",5)),1,22))
"RTN","IBTRVD0",94,0)
 D SET^IBCNSP(START+4,OFFSET," Dschg Screen Met: "_$E($$SI($P(IBTRVD,"^",12)),1,22))
"RTN","IBTRVD0",95,0)
 D SET^IBCNSP(START+5,OFFSET," Acute Care Dschg: "_$$EXPAND^IBTRE(356.1,1.17,$P(IBTRVD1,"^",17)))
"RTN","IBTRVD0",96,0)
 D SET^IBCNSP(START+6,OFFSET," Non-Acute Reason: ")
"RTN","IBTRVD0",97,0)
 S IBD=5
"RTN","IBTRVD0",98,0)
 ;
"RTN","IBTRVD0",99,0)
 S IBNAR=0 F  S IBNAR=$O(^IBT(356.1,+IBTRV,13,IBNAR)) Q:'IBNAR  D
"RTN","IBTRVD0",100,0)
 .S IBNARD=$G(^IBT(356.1,+IBTRV,13,IBNAR,0))
"RTN","IBTRVD0",101,0)
 .S IBD=IBD+1 Q:IBD>8
"RTN","IBTRVD0",102,0)
 .D SET^IBCNSP(START+IBD,OFFSET," Non-Acute Reason: "_$P($G(^IBE(356.4,+IBNARD,0)),"^",2)_" - "_$P($G(^(0)),"^"))
"RTN","IBTRVD0",103,0)
 Q
"RTN","IBTRVD0",104,0)
40 ; -- discharge review
"RTN","IBTRVD0",105,0)
 D SET^IBCNSP(START+1,OFFSET,"Discharge Screen: "_$$SI($P(IBTRVD,"^",12)))
"RTN","IBTRVD0",106,0)
 Q
"RTN","IBTRVD0",107,0)
 ;
"RTN","IBTRVD0",108,0)
SI(X) ; -- output the name value of a si/is
"RTN","IBTRVD0",109,0)
 ;    input the pointer to 356.3
"RTN","IBTRVD0",110,0)
 N Y S Y=$G(^IBE(356.3,+$G(X),0))
"RTN","IBTRVD0",111,0)
 ;  Q $P($G(^IBE(356.3,+$G(X),0)),"^")
"RTN","IBTRVD0",112,0)
 Q $P(Y,"^",3)_$S(Y'="":" - ",1:"")_$P(Y,"^")
"RTN","IBYP458")
0^34^B51260890^n/a
"RTN","IBYP458",1,0)
IBYP458 ;ALB/ARH - IB*2.0*458 POST INIT: RCBE III UPDATE ; 16-OCT-2012
"RTN","IBYP458",2,0)
 ;;2.0;INTEGRATED BILLING;**458**;21-MAR-94;Build 4
"RTN","IBYP458",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBYP458",4,0)
 ;
"RTN","IBYP458",5,0)
 Q
"RTN","IBYP458",6,0)
PRE ; RCBE III (VF #2) PRE-INSTALL
"RTN","IBYP458",7,0)
 ; clean up, delete APRE1 xref (#1) on Insurance Review Authorization Number field (#356.2,.28)
"RTN","IBYP458",8,0)
 ;
"RTN","IBYP458",9,0)
 N IBA S IBA(2)="     IB*2*458 Pre-Install .....",IBA(1)=" " D MES^XPDUTL(.IBA) K IBA
"RTN","IBYP458",10,0)
 ;
"RTN","IBYP458",11,0)
 D DELIX^DDMOD(356.2,.28,1)
"RTN","IBYP458",12,0)
 S IBA(2)="     >> ^DD(356.2,.28) cross-reference #1 deleted",IBA(1)=" "
"RTN","IBYP458",13,0)
 S IBA(3)="        Insurance Review (#356.2) Authorization Number (.28) xref APRE1" D MES^XPDUTL(.IBA) K IBA
"RTN","IBYP458",14,0)
 ;
"RTN","IBYP458",15,0)
 S IBA(2)="     IB*2*458 Pre-Install Complete",(IBA(1),IBA(3))=" " D MES^XPDUTL(.IBA) K IBA
"RTN","IBYP458",16,0)
 Q
"RTN","IBYP458",17,0)
 ;
"RTN","IBYP458",18,0)
 ;
"RTN","IBYP458",19,0)
POST ; RCBE III (VF #2) POST-INSTALL
"RTN","IBYP458",20,0)
 ;
"RTN","IBYP458",21,0)
 N IBA S IBA(2)="     IB*2*458 Post-Install .....",IBA(1)=" " D MES^XPDUTL(.IBA) K IBA
"RTN","IBYP458",22,0)
 ;
"RTN","IBYP458",23,0)
 D CTRT ; Add 3 Claims Tracking Review Types, New (#356.11)
"RTN","IBYP458",24,0)
 D CTDR ; Add 3 Claims Tracking Denial Reasons, New (#356.21)
"RTN","IBYP458",25,0)
 ;
"RTN","IBYP458",26,0)
 D RNBN ; Add 14 RNBs, new (#356.8)
"RTN","IBYP458",27,0)
 D RNBE ; Edit 1 RNB, change name (#356.8)
"RTN","IBYP458",28,0)
 ;
"RTN","IBYP458",29,0)
 D MOVE ; Copy Insurance Review (#356.2) Authorization and Call Reference Number Data
"RTN","IBYP458",30,0)
 ;
"RTN","IBYP458",31,0)
 S IBA(2)="     IB*2*458 Post-Install Complete",(IBA(1),IBA(3))=" " D MES^XPDUTL(.IBA) K IBA
"RTN","IBYP458",32,0)
 Q
"RTN","IBYP458",33,0)
 ;
"RTN","IBYP458",34,0)
 ;
"RTN","IBYP458",35,0)
CTRT ; Add New Claims Tracking Review Types (#356.11)
"RTN","IBYP458",36,0)
 N IBI,IBRIEN,IBLN,IBNM,IBCTRT,IBTOT,IBTNC,IBTCH,DIE,DIC,DR,DA,DD,DO,X,Y,DLAYGO,DINUM
"RTN","IBYP458",37,0)
 S (IBTOT,IBTNC,IBTCH)=0 S DLAYGO=356.11
"RTN","IBYP458",38,0)
 ;
"RTN","IBYP458",39,0)
 D MSG("Add 3 Claims Tracking Review Types, New (#356.11) ...",1)
"RTN","IBYP458",40,0)
 ;
"RTN","IBYP458",41,0)
 F IBI=1:1 S IBLN=$P($T(NRT11+IBI),";;",2,999) Q:'IBLN  D
"RTN","IBYP458",42,0)
 . ;
"RTN","IBYP458",43,0)
 . S IBNM=$P(IBLN,U,4) S IBCTRT=$O(^IBE(356.11,"B",IBNM,0))
"RTN","IBYP458",44,0)
 . F IBRIEN=11:1 I '$D(^IBE(356.11,IBRIEN,0)) Q
"RTN","IBYP458",45,0)
 . ;
"RTN","IBYP458",46,0)
 . S IBTOT=IBTOT+1 I +IBCTRT S IBTNC=IBTNC+1 Q
"RTN","IBYP458",47,0)
 . ;
"RTN","IBYP458",48,0)
 . S DIC="^IBE(356.11," S DIC("DR")=".02////"_$P(IBLN,U,2)_";.03////"_$P(IBLN,U,3)
"RTN","IBYP458",49,0)
 . S DIC(0)="L",X=IBNM,DINUM=IBRIEN D FILE^DICN K DIC I 'Y D MSG(IBNM_" Not Added, ERROR ****") Q
"RTN","IBYP458",50,0)
 . S IBTCH=IBTCH+1 D MSG(IBNM_" added")
"RTN","IBYP458",51,0)
 ;
"RTN","IBYP458",52,0)
 I 'IBTCH D MSG("No Change: "_IBTNC_" of "_IBTOT_" New Review Types Already Exist")
"RTN","IBYP458",53,0)
 I +IBTCH D MSG("Updated: "_IBTCH_" of "_IBTOT_" New Review Types Added"_$$LN(IBTNC,"Already Exist"),2)
"RTN","IBYP458",54,0)
 Q
"RTN","IBYP458",55,0)
 ;
"RTN","IBYP458",56,0)
 ;
"RTN","IBYP458",57,0)
CTDR ; Add New Claims Tracking Denial Reasons (#356.21)
"RTN","IBYP458",58,0)
 N IBI,IBRIEN,IBLN,IBNM,IBCTDR,IBTOT,IBTNC,IBTCH,DIE,DIC,DR,DA,DD,DO,X,Y,DLAYGO,DINUM
"RTN","IBYP458",59,0)
 S (IBTOT,IBTNC,IBTCH)=0 S DLAYGO=356.21
"RTN","IBYP458",60,0)
 ;
"RTN","IBYP458",61,0)
 D MSG("Add 3 Claims Tracking Denial Reasons, New (#356.21) ...",1)
"RTN","IBYP458",62,0)
 ;
"RTN","IBYP458",63,0)
 F IBI=1:1 S IBLN=$P($T(NDR21+IBI),";;",2,999) Q:'IBLN  D
"RTN","IBYP458",64,0)
 . ;
"RTN","IBYP458",65,0)
 . S IBNM=$P(IBLN,U,3) S IBCTDR=$O(^IBE(356.21,"B",$E(IBNM,1,30),0))
"RTN","IBYP458",66,0)
 . F IBRIEN=8:1 I '$D(^IBE(356.21,IBRIEN,0)) Q
"RTN","IBYP458",67,0)
 . ;
"RTN","IBYP458",68,0)
 . S IBTOT=IBTOT+1 I +IBCTDR S IBTNC=IBTNC+1 Q
"RTN","IBYP458",69,0)
 . ;
"RTN","IBYP458",70,0)
 . S DIC="^IBE(356.21," S DIC("DR")=".02////"_$P(IBLN,U,2)
"RTN","IBYP458",71,0)
 . S DIC(0)="L",X=IBNM,DINUM=IBRIEN D FILE^DICN K DIC I 'Y D MSG(IBNM_" Not Added, ERROR ****") Q
"RTN","IBYP458",72,0)
 . S IBTCH=IBTCH+1 D MSG(IBNM_" added")
"RTN","IBYP458",73,0)
 ;
"RTN","IBYP458",74,0)
 I 'IBTCH D MSG("No Change: "_IBTNC_" of "_IBTOT_" New Denial Reasons Already Exist")
"RTN","IBYP458",75,0)
 I +IBTCH D MSG("Updated: "_IBTCH_" of "_IBTOT_" New Denial Reasons Added"_$$LN(IBTNC,"Already Exist"),2)
"RTN","IBYP458",76,0)
 Q
"RTN","IBYP458",77,0)
 ;
"RTN","IBYP458",78,0)
 ;
"RTN","IBYP458",79,0)
RNBE ; Edit Reasons Not Billable:  Rename one existing RNB (356.8,.01)
"RTN","IBYP458",80,0)
 N DIE,DIC,DA,DR,X,Y,IBI,IBLN,IBOLD,IBNEW,IBRNB,IBTOT,IBTNC,IBTNF,IBTCH S (IBTOT,IBTNC,IBTNF,IBTCH)=0
"RTN","IBYP458",81,0)
 ;
"RTN","IBYP458",82,0)
 D MSG("Change 1 Reasons Not Billable (RNB), Name (#356.8, .01) ...",1)
"RTN","IBYP458",83,0)
 ;
"RTN","IBYP458",84,0)
 F IBI=1:1 S IBLN=$P($T(ERNB8+IBI),";;",2,999) Q:'IBLN  D
"RTN","IBYP458",85,0)
 . S IBOLD=$P(IBLN,U,2),IBNEW=$P(IBLN,U,3) S IBRNB=$O(^IBE(356.8,"B",IBOLD,0))
"RTN","IBYP458",86,0)
 . ;
"RTN","IBYP458",87,0)
 . S IBTOT=IBTOT+1
"RTN","IBYP458",88,0)
 . I $O(^IBE(356.8,"B",IBNEW,0)) S IBTNC=IBTNC+1 Q
"RTN","IBYP458",89,0)
 . I 'IBRNB S IBTNF=IBTNF+1 D MSG(IBOLD_" not found, Error") Q
"RTN","IBYP458",90,0)
 . ;
"RTN","IBYP458",91,0)
 . N DIE,DIC,X,Y S DA=+IBRNB,DR=".01///"_IBNEW S DIE="^IBE(356.8," D ^DIE K DA,DR
"RTN","IBYP458",92,0)
 . S IBTCH=IBTCH+1 D MSG(IBOLD_" changed to "_IBNEW)
"RTN","IBYP458",93,0)
 ;
"RTN","IBYP458",94,0)
 I 'IBTCH D MSG("No Change: "_IBTNC_" of "_IBTOT_" RNB Names Already Changed"_$$LN(IBTNF,"Not Found"))
"RTN","IBYP458",95,0)
 I +IBTCH D MSG("Updated: "_IBTCH_" of "_IBTOT_" RNB Names Updated"_$$LN(IBTNC,"Already Changed")_$$LN(IBTNF,"Not Found"),2)
"RTN","IBYP458",96,0)
 Q
"RTN","IBYP458",97,0)
 ;
"RTN","IBYP458",98,0)
 ;
"RTN","IBYP458",99,0)
RNBN ; Add New Reasons Not Billable (#356.8)
"RTN","IBYP458",100,0)
 N IBI,IBRIEN,IBLN,IBNM,IBRNB,IBTOT,IBTNC,IBTCH,DIE,DIC,DR,DA,DD,DO,X,Y,DLAYGO,DINUM
"RTN","IBYP458",101,0)
 S (IBTOT,IBTNC,IBTCH)=0 S DLAYGO=356.8
"RTN","IBYP458",102,0)
 ;
"RTN","IBYP458",103,0)
 D MSG("Add 14 Reasons Not Billable (RNB), New (#356.8) ...",1)
"RTN","IBYP458",104,0)
 ;
"RTN","IBYP458",105,0)
 F IBI=1:1 S IBLN=$P($T(NRNB8+IBI),";;",2,999) Q:'IBLN  D
"RTN","IBYP458",106,0)
 . ;
"RTN","IBYP458",107,0)
 . S IBNM=$P(IBLN,U,5) S IBRNB=$O(^IBE(356.8,"B",IBNM,0))
"RTN","IBYP458",108,0)
 . F IBRIEN=100:1 I '$D(^IBE(356.8,IBRIEN,0)) Q
"RTN","IBYP458",109,0)
 . ;
"RTN","IBYP458",110,0)
 . S IBTOT=IBTOT+1 I +IBRNB S IBTNC=IBTNC+1 Q
"RTN","IBYP458",111,0)
 . ;
"RTN","IBYP458",112,0)
 . S DIC="^IBE(356.8," S DIC("DR")=".02////"_$P(IBLN,U,2)_";.03////"_$P(IBLN,U,3)_";.04///"_$P(IBLN,U,4)
"RTN","IBYP458",113,0)
 . S DIC(0)="L",X=IBNM,DINUM=IBRIEN D FILE^DICN K DIC I 'Y D MSG(IBNM_" Not Added, ERROR ****") Q
"RTN","IBYP458",114,0)
 . S IBTCH=IBTCH+1 D MSG(IBNM_" added")
"RTN","IBYP458",115,0)
 ;
"RTN","IBYP458",116,0)
 I 'IBTCH D MSG("No Change: "_IBTNC_" of "_IBTOT_" New RNBs Already Exist")
"RTN","IBYP458",117,0)
 I +IBTCH D MSG("Updated: "_IBTCH_" of "_IBTOT_" New RNBs Added"_$$LN(IBTNC,"Already Exist"),2)
"RTN","IBYP458",118,0)
 Q
"RTN","IBYP458",119,0)
 ;
"RTN","IBYP458",120,0)
 ;
"RTN","IBYP458",121,0)
MOVE ; Move Insurance Review (#356.2) Call Reference and Authorization Number Data 
"RTN","IBYP458",122,0)
 ; from old fields/location (.09, .28) to new fields/location (2.01, 2.02)
"RTN","IBYP458",123,0)
 N IBTRC,IBTRC0,IBTRC2,IBCOLD,IBAOLD,IBCC1,IBCC2,IBAC1,IBAC2,DIE,DIC,DA,DR,X,Y
"RTN","IBYP458",124,0)
 S (IBCC1,IBCC2,IBAC1,IBAC2)=0
"RTN","IBYP458",125,0)
 ; 
"RTN","IBYP458",126,0)
 D MSG("Copy Insurance Review (#356.2) Data to New Field Locations ...",1)
"RTN","IBYP458",127,0)
 D MSG("Searching file for data to copy, "_+$P($G(^IBT(356.2,0)),U,4)_" entries, please wait ...")
"RTN","IBYP458",128,0)
 ;
"RTN","IBYP458",129,0)
 S IBTRC=0 F  S IBTRC=$O(^IBT(356.2,IBTRC)) Q:'IBTRC  D
"RTN","IBYP458",130,0)
 . S IBTRC0=$G(^IBT(356.2,IBTRC,0)),IBCOLD=$P(IBTRC0,U,9),IBAOLD=$P(IBTRC0,U,28)
"RTN","IBYP458",131,0)
 . S IBTRC2=$G(^IBT(356.2,IBTRC,2)),DR=""
"RTN","IBYP458",132,0)
 . ;
"RTN","IBYP458",133,0)
 . I IBCOLD'="" S IBCC1=IBCC1+1 I $P(IBTRC2,U,1)="" S DR=DR_"2.01////^S X=IBCOLD;" S IBCC2=IBCC2+1
"RTN","IBYP458",134,0)
 . I IBAOLD'="" S IBAC1=IBAC1+1 I $P(IBTRC2,U,2)="" S DR=DR_"2.02////^S X=IBAOLD" S IBAC2=IBAC2+1
"RTN","IBYP458",135,0)
 . ;
"RTN","IBYP458",136,0)
 . I DR'="" S DIE="^IBT(356.2,",DA=IBTRC D ^DIE K DIE,DIC,DA,DR
"RTN","IBYP458",137,0)
 ;
"RTN","IBYP458",138,0)
 D MSG(IBCC1_" Call Reference Numbers found (.09), "_IBCC2_" copied (2.01)",2)
"RTN","IBYP458",139,0)
 D MSG(IBAC1_" Authorization Numbers found (.28), "_IBAC2_" copied (2.02)")
"RTN","IBYP458",140,0)
 Q
"RTN","IBYP458",141,0)
 ;
"RTN","IBYP458",142,0)
 ;
"RTN","IBYP458",143,0)
 ;
"RTN","IBYP458",144,0)
MSG(X,Y) ; set lines into patch install message, X is message, Y is line type (1-header, 2-result line)
"RTN","IBYP458",145,0)
 N CNT,IBA S CNT=1,IBA(1)="        " I +$G(Y) S CNT=2,IBA(2)=IBA(1) I +$G(Y)=1 S IBA(2)="     >> "
"RTN","IBYP458",146,0)
 S IBA(CNT)=IBA(CNT)_$G(X) D MES^XPDUTL(.IBA) K IBA
"RTN","IBYP458",147,0)
 Q
"RTN","IBYP458",148,0)
 ;
"RTN","IBYP458",149,0)
LN(NUM,TXT) Q $S('$G(NUM):"",1:", "_$G(NUM)_" "_$G(TXT))
"RTN","IBYP458",150,0)
 ;
"RTN","IBYP458",151,0)
 ;
"RTN","IBYP458",152,0)
 ;
"RTN","IBYP458",153,0)
NRT11 ; Add New Review Types (#356.11):  number ^ CODE (.02) ^ ABBREVIATION (.03) ^ NAME (.01)
"RTN","IBYP458",154,0)
 ;;1^25^SNF/NHCU^SNF/NHCU REVIEW
"RTN","IBYP458",155,0)
 ;;2^35^RETRO INPT^INPT RETROSPECTIVE REVIEW
"RTN","IBYP458",156,0)
 ;;3^55^RETRO OPT^OPT RETROSPECTIVE REVIEW
"RTN","IBYP458",157,0)
 ;;
"RTN","IBYP458",158,0)
 ;
"RTN","IBYP458",159,0)
NDR21 ; Add New Denial Reasons (#356.21):  number ^ ABBREVIATION (.02) ^ NAME (.01)
"RTN","IBYP458",160,0)
 ;;1^DELAY TX^DELAY IN TREATMENT/SERVICE
"RTN","IBYP458",161,0)
 ;;2^OBS^OBSERVATION IS MORE APPROPRIATE
"RTN","IBYP458",162,0)
 ;;3^ALT LOC^ALTERNATE LEVEL OF CARE IS MORE APPROPRIATE
"RTN","IBYP458",163,0)
 ;;
"RTN","IBYP458",164,0)
 ;
"RTN","IBYP458",165,0)
ERNB8 ; Edit RNB name (#356.8):  number ^ OLD NAME (.01) ^ NEW NAME (.01)
"RTN","IBYP458",166,0)
 ;;1^NPI/TAXONOMY ISSUES^NPI/TAXONOMY/PPN ISSUES
"RTN","IBYP458",167,0)
 ;;
"RTN","IBYP458",168,0)
 ;
"RTN","IBYP458",169,0)
NRNB8 ; Add New RNBs (#356.8):   number ^ ECME FLAG (0/1) (.02) ^ ECME PAPER FLAG (0/1) (.03) ^ CODE (.04) ^ NAME (.01)
"RTN","IBYP458",170,0)
 ;;1^^^MC20^APPT CANCELLED/PT NOT SEEN
"RTN","IBYP458",171,0)
 ;;2^^^MC21^SEEN BY PROVIDER ON SAME DAY
"RTN","IBYP458",172,0)
 ;;3^^^MC22^NON-BILLABLE DME/PROSTHETIC
"RTN","IBYP458",173,0)
 ;;4^^^MC23^NON-BILLABLE PROCEDURE
"RTN","IBYP458",174,0)
 ;;5^1^0^MC24^EMPLOYEE HEALTH
"RTN","IBYP458",175,0)
 ;;6^^^MC25^ENCOUNTER DURING INPT STAY
"RTN","IBYP458",176,0)
 ;;7^^^CV22^NO PROSTHETIC COVERAGE
"RTN","IBYP458",177,0)
 ;;8^^^CV23^NON-COVERED DIAGNOSIS
"RTN","IBYP458",178,0)
 ;;9^^^CV24^NON-COVERED ROUTINE CARE
"RTN","IBYP458",179,0)
 ;;10^1^0^CV25^HDHP PLAN NOT BILLED
"RTN","IBYP458",180,0)
 ;;11^^^CV26^NOT RELATED TO WC/TORT/NF
"RTN","IBYP458",181,0)
 ;;12^1^0^CV27^TRICARE PT SEEN AS VETERAN
"RTN","IBYP458",182,0)
 ;;13^^^BL08^COMBINED CHARGES
"RTN","IBYP458",183,0)
 ;;14^^^BL09^UNBUNDLED SERVICE
"RTN","IBYP458",184,0)
 ;;
"VER")
8.0^22.0
"^DD",356.2,356.2,.02,0)
TRACKING ID^P356'^IBT(356,^0;2^Q
"^DD",356.2,356.2,.02,1,0)
^.1
"^DD",356.2,356.2,.02,1,1,0)
356.2^C
"^DD",356.2,356.2,.02,1,1,1)
S ^IBT(356.2,"C",$E(X,1,30),DA)=""
"^DD",356.2,356.2,.02,1,1,2)
K ^IBT(356.2,"C",$E(X,1,30),DA)
"^DD",356.2,356.2,.02,1,1,"DT")
2930702
"^DD",356.2,356.2,.02,1,2,0)
356.2^ATRP^MUMPS
"^DD",356.2,356.2,.02,1,2,1)
S:$P(^IBT(356.2,DA,0),"^",4) ^IBT(356.2,"ATRTP",X,+$P(^(0),"^",4),DA)=""
"^DD",356.2,356.2,.02,1,2,2)
K ^IBT(356.2,"ATRTP",X,+$P(^IBT(356.2,DA,0),"^",4),DA)
"^DD",356.2,356.2,.02,1,2,"%D",0)
^^1^1^2930712^
"^DD",356.2,356.2,.02,1,2,"%D",1,0)
Index of all communications by tracking id and type.
"^DD",356.2,356.2,.02,1,2,"DT")
2930712
"^DD",356.2,356.2,.02,1,3,0)
356.2^ATIDT1^MUMPS
"^DD",356.2,356.2,.02,1,3,1)
S:$P(^IBT(356.2,DA,0),U) ^IBT(356.2,"ATIDT",X,-$P(^(0),U),DA)=""
"^DD",356.2,356.2,.02,1,3,2)
K ^IBT(356.2,"ATIDT",X,-$P(^IBT(356.2,DA,0),U),DA)
"^DD",356.2,356.2,.02,1,3,"%D",0)
^^2^2^2930728^^
"^DD",356.2,356.2,.02,1,3,"%D",1,0)
Cross-Reference of all entries by tracking ID and by inverse date so can
"^DD",356.2,356.2,.02,1,3,"%D",2,0)
list most recent first.
"^DD",356.2,356.2,.02,1,3,"DT")
2930728
"^DD",356.2,356.2,.02,1,4,0)
356.2^APRE^MUMPS
"^DD",356.2,356.2,.02,1,4,1)
S:$P($G(^IBT(356.2,DA,2)),U,2)'="" ^IBT(356.2,"APRE",X,$P(^(2),U,2),DA)=""
"^DD",356.2,356.2,.02,1,4,2)
K:$P($G(^IBT(356.2,DA,2)),U,2)'="" ^IBT(356.2,"APRE",X,$P(^(2),U,2),DA)
"^DD",356.2,356.2,.02,1,4,"%D",0)
^.101^3^3^3130320^^^^
"^DD",356.2,356.2,.02,1,4,"%D",1,0)
Cross-Reference of all pre-cert numbers by tracking ID.  This is used to
"^DD",356.2,356.2,.02,1,4,"%D",2,0)
display the Pre-cert number in the claims tracking screens and the
"^DD",356.2,356.2,.02,1,4,"%D",3,0)
Review edit screens.
"^DD",356.2,356.2,.02,1,4,"DT")
3130320
"^DD",356.2,356.2,.02,21,0)
^^3^3^2930806^
"^DD",356.2,356.2,.02,21,1,0)
This is the Claims Tracking entry that was the primary episode of care
"^DD",356.2,356.2,.02,21,2,0)
that caused this contact.  Generally contacts are associated with
"^DD",356.2,356.2,.02,21,3,0)
an episode of care but occasionally they are not.
"^DD",356.2,356.2,.02,"DT")
3130320
"^DD",356.2,356.2,.09,0)
*CALL REFERENCE NUMBER^F^^0;9^K:$L(X)>15!($L(X)<3) X
"^DD",356.2,356.2,.09,3)
Answer must be 3-15 characters in length.
"^DD",356.2,356.2,.09,21,0)
^.001^5^5^3121228^^^^
"^DD",356.2,356.2,.09,21,1,0)
If the company you called gave you a reference number for the call
"^DD",356.2,356.2,.09,21,2,0)
then enter that reference number here.  Many companies will issue
"^DD",356.2,356.2,.09,21,3,0)
reference numbers so that they can track their calls and allow
"^DD",356.2,356.2,.09,21,4,0)
reference back to them by others.
"^DD",356.2,356.2,.09,21,5,0)
This field has been replaced by 2.01 and marked for deletion by IB*2*458.
"^DD",356.2,356.2,.09,"DT")
3121228
"^DD",356.2,356.2,.28,0)
*AUTHORIZATION NUMBER^F^^0;28^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>18!($L(X)<3) X
"^DD",356.2,356.2,.28,1,0)
^.1^^0
"^DD",356.2,356.2,.28,3)
Answer must be 3-18 characters in length.
"^DD",356.2,356.2,.28,21,0)
6^.001^7^7^3130422^^
"^DD",356.2,356.2,.28,21,1,0)
Enter the treatment authorization number that the insurance company gave
"^DD",356.2,356.2,.28,21,2,0)
you during this contact.
"^DD",356.2,356.2,.28,21,3,0)
 
"^DD",356.2,356.2,.28,21,4,0)
The data in this field if it exists will be considered the Treatment
"^DD",356.2,356.2,.28,21,5,0)
Authorization code for this care and will automatically used by the
"^DD",356.2,356.2,.28,21,6,0)
billing module.  This field has been replaced by 2.02 and marked 
"^DD",356.2,356.2,.28,21,7,0)
for deletion by IB*2*458.
"^DD",356.2,356.2,.28,"DT")
3130422
"^DD",356.2,356.2,.29,0)
FINAL OUTCOME OF APPEAL^S^1:APPROVED;2:DENIED;3:PARTIAL APPROVAL;^0;29^Q
"^DD",356.2,356.2,.29,3)
What was the final outcome of this appeal?
"^DD",356.2,356.2,.29,21,0)
^.001^5^5^3130129^^^^
"^DD",356.2,356.2,.29,21,1,0)
Enter the final outcome of this appeal.  Did the insurance company
"^DD",356.2,356.2,.29,21,2,0)
approve, partially approve or deny this appeal?
"^DD",356.2,356.2,.29,21,3,0)
 
"^DD",356.2,356.2,.29,21,4,0)
If the appeal was approved or partially approved you may enter the
"^DD",356.2,356.2,.29,21,5,0)
dates that it was approved for.
"^DD",356.2,356.2,.29,"DT")
2930825
"^DD",356.2,356.2,2.01,0)
CALL REFERENCE NUMBER^F^^2;1^K:$L(X)>35!($L(X)<3) X
"^DD",356.2,356.2,2.01,3)
Answer must be 3-35 characters in length.
"^DD",356.2,356.2,2.01,21,0)
^^4^4^3121228^
"^DD",356.2,356.2,2.01,21,1,0)
If the company you called gave you a reference number for the call
"^DD",356.2,356.2,2.01,21,2,0)
then enter that reference number here.  Many companies will issue
"^DD",356.2,356.2,2.01,21,3,0)
reference numbers so that they can track their calls and allow
"^DD",356.2,356.2,2.01,21,4,0)
reference back to them by others.
"^DD",356.2,356.2,2.01,"DT")
3121228
"^DD",356.2,356.2,2.02,0)
AUTHORIZATION NUMBER^F^^2;2^K:$L(X)>35!($L(X)<3) X
"^DD",356.2,356.2,2.02,1,0)
^.1
"^DD",356.2,356.2,2.02,1,1,0)
356.2^APRE1^MUMPS
"^DD",356.2,356.2,2.02,1,1,1)
S:$P(^IBT(356.2,DA,0),U,2) ^IBT(356.2,"APRE",+$P(^(0),U,2),X,DA)=""
"^DD",356.2,356.2,2.02,1,1,2)
K ^IBT(356.2,"APRE",+$P(^IBT(356.2,DA,0),U,2),X,DA)
"^DD",356.2,356.2,2.02,1,1,"%D",0)
^^1^1^3121228^
"^DD",356.2,356.2,2.02,1,1,"%D",1,0)
Cross-reference of pre-cert numbers by tracking id.
"^DD",356.2,356.2,2.02,1,1,"DT")
3121228
"^DD",356.2,356.2,2.02,3)
Answer must be 3-35 characters in length.
"^DD",356.2,356.2,2.02,21,0)
^.001^6^6^3130129^^
"^DD",356.2,356.2,2.02,21,1,0)
Enter the treatment authorization number that the insurance company gave
"^DD",356.2,356.2,2.02,21,2,0)
you during this contact.
"^DD",356.2,356.2,2.02,21,3,0)
 
"^DD",356.2,356.2,2.02,21,4,0)
The data in this field, if it exists, will be considered the Treatment
"^DD",356.2,356.2,2.02,21,5,0)
Authorization code for this care and will automatically be used by the
"^DD",356.2,356.2,2.02,21,6,0)
billing module.
"^DD",356.2,356.2,2.02,"DT")
3121228
"^DD",356.26,356.26,0)
FIELD^^2.01^11
"^DD",356.26,356.26,0,"DDA")
N
"^DD",356.26,356.26,0,"DT")
3130107
"^DD",356.26,356.26,0,"IX","B",356.26,.01)

"^DD",356.26,356.26,0,"IX","C",356.26,.02)

"^DD",356.26,356.26,0,"NM","CLAIMS TRACKING ROI CONSENT")

"^DD",356.26,356.26,.01,0)
ROI ENTRY^RNJ9,0^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",356.26,356.26,.01,1,0)
^.1
"^DD",356.26,356.26,.01,1,1,0)
356.26^B
"^DD",356.26,356.26,.01,1,1,1)
S ^IBT(356.26,"B",$E(X,1,30),DA)=""
"^DD",356.26,356.26,.01,1,1,2)
K ^IBT(356.26,"B",$E(X,1,30),DA)
"^DD",356.26,356.26,.01,3)
Type a number between 1 and 999999999, 0 decimal digits.
"^DD",356.26,356.26,.01,21,0)
^.001^1^1^3130108^^^
"^DD",356.26,356.26,.01,21,1,0)
This is the ROI Special Consent unique identifier.
"^DD",356.26,356.26,.01,"DT")
3130107
"^DD",356.26,356.26,.02,0)
PATIENT^RP2'^DPT(^0;2^Q
"^DD",356.26,356.26,.02,1,0)
^.1
"^DD",356.26,356.26,.02,1,1,0)
356.26^C
"^DD",356.26,356.26,.02,1,1,1)
S ^IBT(356.26,"C",$E(X,1,30),DA)=""
"^DD",356.26,356.26,.02,1,1,2)
K ^IBT(356.26,"C",$E(X,1,30),DA)
"^DD",356.26,356.26,.02,1,1,3)
DO NOT DELETE
"^DD",356.26,356.26,.02,1,1,"%D",0)
^^1^1^3130108^
"^DD",356.26,356.26,.02,1,1,"%D",1,0)
Cross reference of ROI consent by Patient.
"^DD",356.26,356.26,.02,1,1,"DT")
3130108
"^DD",356.26,356.26,.02,3)
Enter the Patient associated with this ROI consent.
"^DD",356.26,356.26,.02,21,0)
^^2^2^3130107^
"^DD",356.26,356.26,.02,21,1,0)
This is the patient that gave consent to release information related a 
"^DD",356.26,356.26,.02,21,2,0)
sensitive condition.
"^DD",356.26,356.26,.02,"DT")
3130108
"^DD",356.26,356.26,.03,0)
SENSITIVE CONDITION^RS^1:DRUG ABUSE;2:ALCOHOLISM/ALCOHOL ABUSE;3:TESTING FOR OR INFECTION WITH HIV;4:SICKLE CELL ANEMIA;^0;3^Q
"^DD",356.26,356.26,.03,3)
Enter the Sensitive Condition associated with this ROI consent.
"^DD",356.26,356.26,.03,21,0)
^.001^2^2^3130109^^
"^DD",356.26,356.26,.03,21,1,0)
This is the sensitive condition the patient has given consent for 
"^DD",356.26,356.26,.03,21,2,0)
release of information.
"^DD",356.26,356.26,.03,"DT")
3130107
"^DD",356.26,356.26,.04,0)
EFFECTIVE DATE^RD^^0;4^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",356.26,356.26,.04,3)
Enter the date this ROI consent becomes effective.
"^DD",356.26,356.26,.04,21,0)
^.001^1^1^3130107^^^
"^DD",356.26,356.26,.04,21,1,0)
This is the effective or begin date of this ROI consent.
"^DD",356.26,356.26,.04,"DT")
3130107
"^DD",356.26,356.26,.05,0)
EXPIRATION DATE^RD^^0;5^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",356.26,356.26,.05,3)
Enter the date this ROI consent expires.
"^DD",356.26,356.26,.05,21,0)
^.001^1^1^3130107^^
"^DD",356.26,356.26,.05,21,1,0)
This is the expiration or end date of this ROI consent.
"^DD",356.26,356.26,.05,"DT")
3130107
"^DD",356.26,356.26,.06,0)
REVOKED^S^1:YES;^0;6^Q
"^DD",356.26,356.26,.06,3)
Enter Yes if this ROI consent has been revoked.
"^DD",356.26,356.26,.06,21,0)
^.001^5^5^3130114^^^^
"^DD",356.26,356.26,.06,21,1,0)
This indicates if the patient has revoked the release of information 
"^DD",356.26,356.26,.06,21,2,0)
consent for this sensitive condition.  This field does not override 
"^DD",356.26,356.26,.06,21,3,0)
the effective and expiration dates.  When a consent is revoked the 
"^DD",356.26,356.26,.06,21,4,0)
expiration date should be updated to the date the revocation takes 
"^DD",356.26,356.26,.06,21,5,0)
effect.
"^DD",356.26,356.26,.06,"DT")
3130107
"^DD",356.26,356.26,1.01,0)
DATE ENTERED^D^^1;1^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",356.26,356.26,1.01,3)
Enter the date this ROI consent was added.
"^DD",356.26,356.26,1.01,21,0)
^.001^1^1^3130107^^^
"^DD",356.26,356.26,1.01,21,1,0)
This is the date/time this ROI consent record was created.
"^DD",356.26,356.26,1.01,"DT")
3130107
"^DD",356.26,356.26,1.02,0)
ENTERED BY^P200'^VA(200,^1;2^Q
"^DD",356.26,356.26,1.02,3)
Enter the person that added this ROI.
"^DD",356.26,356.26,1.02,21,0)
^^1^1^3130107^
"^DD",356.26,356.26,1.02,21,1,0)
This is the user that created this ROI consent record.
"^DD",356.26,356.26,1.02,"DT")
3130107
"^DD",356.26,356.26,1.03,0)
DATE LAST EDITED^D^^1;3^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",356.26,356.26,1.03,3)
Enter the date this ROI record was last edited.
"^DD",356.26,356.26,1.03,21,0)
^.001^1^1^3130108^^^
"^DD",356.26,356.26,1.03,21,1,0)
This is the date/time this ROI record was last updated or edited.
"^DD",356.26,356.26,1.03,"DT")
3130323
"^DD",356.26,356.26,1.04,0)
LAST EDITED BY^P200'^VA(200,^1;4^Q
"^DD",356.26,356.26,1.04,3)
Enter the person that last edited this ROI record.
"^DD",356.26,356.26,1.04,21,0)
^.001^1^1^3130108^^
"^DD",356.26,356.26,1.04,21,1,0)
This is the user that last updated or edited this ROI record.
"^DD",356.26,356.26,1.04,"DT")
3130323
"^DD",356.26,356.26,2.01,0)
COMMENT^F^^2;1^K:$L(X)>60!($L(X)<3) X
"^DD",356.26,356.26,2.01,3)
Answer must be 3-60 characters in length.
"^DD",356.26,356.26,2.01,21,0)
^.001^2^2^3130107^^
"^DD",356.26,356.26,2.01,21,1,0)
Enter a comment related to this ROI consent record, including the 
"^DD",356.26,356.26,2.01,21,2,0)
Insurance Companies the ROI covers.
"^DD",356.26,356.26,2.01,"DT")
3130107
"^DIC",356.26,356.26,0)
CLAIMS TRACKING ROI CONSENT^356.26
"^DIC",356.26,356.26,0,"GL")
^IBT(356.26,
"^DIC",356.26,356.26,"%D",0)
^1.001^4^4^3130201^^^^
"^DIC",356.26,356.26,"%D",1,0)
This file contains the Release of Information (ROI) Special Consents 
"^DIC",356.26,356.26,"%D",2,0)
obtained from patients for sensitive conditions.
"^DIC",356.26,356.26,"%D",3,0)
 
"^DIC",356.26,356.26,"%D",4,0)
Per VHA Directive 2004-038, this file definition should not be modified.
"^DIC",356.26,"B","CLAIMS TRACKING ROI CONSENT",356.26)

"BLD",8537,6)
^454
**END**
**END**
