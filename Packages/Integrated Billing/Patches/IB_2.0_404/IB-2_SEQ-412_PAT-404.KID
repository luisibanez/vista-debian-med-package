Released IB*2*404 SEQ #412
Extracted from mail message
**KIDS**:IB*2.0*404^

**INSTALL NAME**
IB*2.0*404
"BLD",7653,0)
IB*2.0*404^INTEGRATED BILLING^0^3100304^y
"BLD",7653,1,0)
^^4^4^3100304^
"BLD",7653,1,1,0)
This patch will a include change to routine IBBFAPI (Insurance API 
"BLD",7653,1,2,0)
$$INSUR^IBBAPI) and IBBDOC to add two new additional fields from 
"BLD",7653,1,3,0)
Insurance Company file (#36). These fields are the STREET ADDRESS [LINE 
"BLD",7653,1,4,0)
2] and STREET ADDRESS [LINE 3].
"BLD",7653,4,0)
^9.64PA^^
"BLD",7653,6.3)
6
"BLD",7653,"KRN",0)
^9.67PA^8989.52^19
"BLD",7653,"KRN",.4,0)
.4
"BLD",7653,"KRN",.401,0)
.401
"BLD",7653,"KRN",.402,0)
.402
"BLD",7653,"KRN",.403,0)
.403
"BLD",7653,"KRN",.5,0)
.5
"BLD",7653,"KRN",.84,0)
.84
"BLD",7653,"KRN",3.6,0)
3.6
"BLD",7653,"KRN",3.8,0)
3.8
"BLD",7653,"KRN",3.8,"NM",0)
^9.68A^^0
"BLD",7653,"KRN",9.2,0)
9.2
"BLD",7653,"KRN",9.8,0)
9.8
"BLD",7653,"KRN",9.8,"NM",0)
^9.68A^16^2
"BLD",7653,"KRN",9.8,"NM",15,0)
IBBDOC^^0^B683097
"BLD",7653,"KRN",9.8,"NM",16,0)
IBBFAPI^^0^B43623282
"BLD",7653,"KRN",9.8,"NM","B","IBBDOC",15)

"BLD",7653,"KRN",9.8,"NM","B","IBBFAPI",16)

"BLD",7653,"KRN",19,0)
19
"BLD",7653,"KRN",19,"NM",0)
^9.68A^^0
"BLD",7653,"KRN",19.1,0)
19.1
"BLD",7653,"KRN",19.1,"NM",0)
^9.68A^^0
"BLD",7653,"KRN",101,0)
101
"BLD",7653,"KRN",101,"NM",0)
^9.68A^^0
"BLD",7653,"KRN",409.61,0)
409.61
"BLD",7653,"KRN",771,0)
771
"BLD",7653,"KRN",771,"NM",0)
^9.68A^^0
"BLD",7653,"KRN",870,0)
870
"BLD",7653,"KRN",8989.51,0)
8989.51
"BLD",7653,"KRN",8989.52,0)
8989.52
"BLD",7653,"KRN",8994,0)
8994
"BLD",7653,"KRN","B",.4,.4)

"BLD",7653,"KRN","B",.401,.401)

"BLD",7653,"KRN","B",.402,.402)

"BLD",7653,"KRN","B",.403,.403)

"BLD",7653,"KRN","B",.5,.5)

"BLD",7653,"KRN","B",.84,.84)

"BLD",7653,"KRN","B",3.6,3.6)

"BLD",7653,"KRN","B",3.8,3.8)

"BLD",7653,"KRN","B",9.2,9.2)

"BLD",7653,"KRN","B",9.8,9.8)

"BLD",7653,"KRN","B",19,19)

"BLD",7653,"KRN","B",19.1,19.1)

"BLD",7653,"KRN","B",101,101)

"BLD",7653,"KRN","B",409.61,409.61)

"BLD",7653,"KRN","B",771,771)

"BLD",7653,"KRN","B",870,870)

"BLD",7653,"KRN","B",8989.51,8989.51)

"BLD",7653,"KRN","B",8989.52,8989.52)

"BLD",7653,"KRN","B",8994,8994)

"BLD",7653,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",7653,"QUES",0)
^9.62^^
"BLD",7653,"REQB",0)
^9.611^6^6
"BLD",7653,"REQB",1,0)
IB*2.0*267^2
"BLD",7653,"REQB",2,0)
IB*2.0*297^2
"BLD",7653,"REQB",3,0)
IB*2.0*249^2
"BLD",7653,"REQB",4,0)
IB*2.0*317^2
"BLD",7653,"REQB",5,0)
IB*2.0*361^2
"BLD",7653,"REQB",6,0)
IB*2.0*384^2
"BLD",7653,"REQB","B","IB*2.0*249",3)

"BLD",7653,"REQB","B","IB*2.0*267",1)

"BLD",7653,"REQB","B","IB*2.0*297",2)

"BLD",7653,"REQB","B","IB*2.0*317",4)

"BLD",7653,"REQB","B","IB*2.0*361",5)

"BLD",7653,"REQB","B","IB*2.0*384",6)

"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
404^3100304
"PKG",200,22,1,"PAH",1,1,0)
^^4^4^3100304
"PKG",200,22,1,"PAH",1,1,1,0)
This patch will a include change to routine IBBFAPI (Insurance API 
"PKG",200,22,1,"PAH",1,1,2,0)
$$INSUR^IBBAPI) and IBBDOC to add two new additional fields from 
"PKG",200,22,1,"PAH",1,1,3,0)
Insurance Company file (#36). These fields are the STREET ADDRESS [LINE 
"PKG",200,22,1,"PAH",1,1,4,0)
2] and STREET ADDRESS [LINE 3].
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","IBBDOC")
0^15^B683097^B683097
"RTN","IBBDOC",1,0)
IBBDOC ;OAK/ELZ - APIS FOR OTHER PACKAGES FOR PFSS - DOCUMENT ;5-AUG-2004
"RTN","IBBDOC",2,0)
 ;;2.0;INTEGRATED BILLING;**267,260,286,361,384,404**;21-MAR-94;Build 6
"RTN","IBBDOC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBBDOC",4,0)
 ;
"RTN","IBBDOC",5,0)
 ; Documents the calls to the routine IBBAPI.
"RTN","IBBDOC",6,0)
 ;
"RTN","IBBDOC",7,0)
INSUR ;(DFN,IBDT,IBSTAT,IBR,IBFLDS)
"RTN","IBBDOC",8,0)
 ; Function to return patient insurance information
"RTN","IBBDOC",9,0)
 ; --Input:
"RTN","IBBDOC",10,0)
 ;   DFN    = patient
"RTN","IBBDOC",11,0)
 ;   IBDT   = date insured (optional - default is today's date)
"RTN","IBBDOC",12,0)
 ;   IBSTAT = Insurance Status filter (combinable based on groups below)
"RTN","IBBDOC",13,0)
 ;      Group 1
"RTN","IBBDOC",14,0)
 ;          A = Inactive included (Default is active only)
"RTN","IBBDOC",15,0)
 ;      Group 2
"RTN","IBBDOC",16,0)
 ;          R = Not reimbursable included (Default is reimbursable only)
"RTN","IBBDOC",17,0)
 ;          B = Indemnity included (Default is not included)
"RTN","IBBDOC",18,0)
 ;      Group 3
"RTN","IBBDOC",19,0)
 ;          P = Prescription coverage required (Default is all coverages)
"RTN","IBBDOC",20,0)
 ;          O = Outpatient coverage required (Default is all coverages)
"RTN","IBBDOC",21,0)
 ;          I = Inpatient coverage only (Default is all coverages)
"RTN","IBBDOC",22,0)
 ;          E = e-Pharmacy billable coverage required, i.e. should have 
"RTN","IBBDOC",23,0)
 ;            Pharmacy coverage and be able to process e-claims (Default 
"RTN","IBBDOC",24,0)
 ;            is all coverages)
"RTN","IBBDOC",25,0)
 ;
"RTN","IBBDOC",26,0)
 ;   IBR    = Array to return insurance information - passed by reference
"RTN","IBBDOC",27,0)
 ;   IBFLDS = List of fields to return (1-24) in a comma separated list or "*" for all
"RTN","IBBDOC",28,0)
 ;
"RTN","IBBDOC",29,0)
 ; --Output:
"RTN","IBBDOC",30,0)
 ;   -1     = error occurred (error message passed back in
"RTN","IBBDOC",31,0)
 ;            IBR("IBBAPI","INSUR","ERROR",x) where x is error number
"RTN","IBBDOC",32,0)
 ;            between 101 & 111
"RTN","IBBDOC",33,0)
 ;    0     = No insurance found based on parameters
"RTN","IBBDOC",34,0)
 ;    1     = Insurance found
"RTN","IBBDOC",35,0)
 ;
"RTN","IBBDOC",36,0)
 ;
"RTN","IBBDOC",37,0)
CIDC  ; (DFN)
"RTN","IBBDOC",38,0)
 ; Input:    DFN for the patient in question.
"RTN","IBBDOC",39,0)
 ; Output:   1 = Ask CIDC questions for the specified patient
"RTN","IBBDOC",40,0)
 ;           0 = Don't ask CIDC questions for the specified patient
"RTN","IBBDOC",41,0)
 ;
"RTN","IBBDOC",42,0)
 ; The API will evaluate both a CIDC switch and the patient's insurance
"RTN","IBBDOC",43,0)
 ; to determine if the CIDC questions should be asked.
"RTN","IBBDOC",44,0)
 ;
"RTN","IBBDOC",45,0)
 ; The switch will have three internal values:
"RTN","IBBDOC",46,0)
 ;    0 = Don't ask any patients
"RTN","IBBDOC",47,0)
 ;    1 = Ask for patients only with active billable insurance
"RTN","IBBDOC",48,0)
 ;    2 = Ask for all patients
"RTN","IBBDOC",49,0)
 ;
"RTN","IBBDOC",50,0)
 ;
"RTN","IBBDOC",51,0)
SWSTAT ; ()
"RTN","IBBDOC",52,0)
 ; Returns the current status of the PFSS On/Off Switch
"RTN","IBBDOC",53,0)
 ;
"RTN","IBBDOC",54,0)
 ; Output:   <switch_status>^<status_date/time>
"RTN","IBBDOC",55,0)
 ; 
"RTN","IBBDOC",56,0)
 ; <switch_status> will be one of the following:
"RTN","IBBDOC",57,0)
 ;    0 = OFF
"RTN","IBBDOC",58,0)
 ;    1 = ON
"RTN","IBBDOC",59,0)
 ;
"RTN","IBBDOC",60,0)
GETACCT ; (IBBDFN,IBBARFN,IBBEVENT,IBBAPLR,IBBPV1,IBBPV2,IBBPR1,IBBDG1,IBBZCL,IBBDIV,IBBRAIEN,IBBSURG)
"RTN","IBBDOC",61,0)
 ; Pass data to IBB for account/visit (ADT) messaging.
"RTN","IBBDOC",62,0)
 ;
"RTN","IBBDOC",63,0)
 ; Input:
"RTN","IBBDOC",64,0)
 ; IBBDFN   = Patient; IEN to file #2 [required]
"RTN","IBBDOC",65,0)
 ; IBBARFN  = Account Reference; 
"RTN","IBBDOC",66,0)
 ;            IEN to file #375 or null [required]
"RTN","IBBDOC",67,0)
 ; IBBEVENT = HL7 Event Code; e.g., "A04" [required]
"RTN","IBBDOC",68,0)
 ; IBBAPLR  = Calling Application; 
"RTN","IBBDOC",69,0)
 ;            <routine> or <tag>_;_<routine> 
"RTN","IBBDOC",70,0)
 ; IBBPV1   = array for PV1 segment data [required]
"RTN","IBBDOC",71,0)
 ;   IBBPV1(2)  - Patient Class (O=Outpatient;I=Inpatient)
"RTN","IBBDOC",72,0)
 ;   IBBPV1(3)  - IEN to file #44, or "FEE BASIS"
"RTN","IBBDOC",73,0)
 ;   IBBPV1(4)  - Appointment Type; IEN to file #409.1
"RTN","IBBDOC",74,0)
 ;   IBBPV1(7)  - Attending Physician; IEN to file #200
"RTN","IBBDOC",75,0)
 ;   IBBVP1(9)  - Consulting Physician; IEN to file #200
"RTN","IBBDOC",76,0)
 ;   IBBPV1(10) - Purpose of Visit; 
"RTN","IBBDOC",77,0)
 ;                (Scheduling: 1=C&P;2=10-10;3=SV;4=UV)
"RTN","IBBDOC",78,0)
 ;   IBBPV1(17) - Admitting Physician or Surgeon; 
"RTN","IBBDOC",79,0)
 ;                IEN to file #200
"RTN","IBBDOC",80,0)
 ;   IBBPV1(18) - Primary Stop Code; IEN to file #40.7
"RTN","IBBDOC",81,0)
 ;   IBBPV1(25) - Check-In Date/Time (Scheduling)
"RTN","IBBDOC",82,0)
 ;   IBBPV1(41) - Credit Stop Code; IEN to file #40.7
"RTN","IBBDOC",83,0)
 ;   IBBPV1(44) - Admit Date/Time
"RTN","IBBDOC",84,0)
 ;   IBBPV1(45) - Check-Out Date/Time (Scheduling)
"RTN","IBBDOC",85,0)
 ;   IBBPV1(50) - Prescription #; IEN to file #52 (Pharmacy)
"RTN","IBBDOC",86,0)
 ;   IBBPV1(52) - Other Provider; IEN to file #200
"RTN","IBBDOC",87,0)
 ; IBBPV2   = array for PV2 segment data
"RTN","IBBDOC",88,0)
 ;   IBBPV2(7)  - Eligibility of Visit; IEN to file #8.1
"RTN","IBBDOC",89,0)
 ;   IBBPV2(8)  - Expected Admit/Visit Date/Time
"RTN","IBBDOC",90,0)
 ;   IBBPV2(24) - Appointment Status; 
"RTN","IBBDOC",91,0)
 ;                (Scheduling:
"RTN","IBBDOC",92,0)
 ;                 R=Scheduled/Kept;I=Inpatient;
"RTN","IBBDOC",93,0)
 ;                 NS=No-Show;NSR=No-Show, Rescheduled;
"RTN","IBBDOC",94,0)
 ;                 CP=Cancelled by Patient;
"RTN","IBBDOC",95,0)
 ;                 CPR=Cancelled by Patient, Rescheduled;
"RTN","IBBDOC",96,0)
 ;                 CC=Cancelled by Clinic;
"RTN","IBBDOC",97,0)
 ;                 CCR=Cancelled by Clinic, Rescheduled;
"RTN","IBBDOC",98,0)
 ;                 NT=No Action Taken)
"RTN","IBBDOC",99,0)
 ;   IBBPV2(46) - Date Appointment Made (Scheduling)
"RTN","IBBDOC",100,0)
 ; IBBPR1   = array for PR1 segment data
"RTN","IBBDOC",101,0)
 ;   IBBPR1(3)  - Procedure; IEN to file #81
"RTN","IBBDOC",102,0)
 ;   IBBPR1(4)  - Procedure; free text
"RTN","IBBDOC",103,0)
 ;   IBBPR1(5)  - Procedure Date/Time
"RTN","IBBDOC",104,0)
 ;   IBBPR1(6)  - Functional Type;
"RTN","IBBDOC",105,0)
 ;                (Prosthetics: 
"RTN","IBBDOC",106,0)
 ;                 O=Home Oxygen;P=Purchasing;
"RTN","IBBDOC",107,0)
 ;                 I=Stock Issue)
"RTN","IBBDOC",108,0)
 ;                (Radiology: 
"RTN","IBBDOC",109,0)
 ;                 ANI=Angio/Neuro/Interventional;
"RTN","IBBDOC",110,0)
 ;                 CARD=Cardiology Studies;CT=CT Scan;
"RTN","IBBDOC",111,0)
 ;                 RAD=General Radiology;
"RTN","IBBDOC",112,0)
 ;                 MRI=Magnetic Resonance Imaging;
"RTN","IBBDOC",113,0)
 ;                 MAM=Mammography;NM=Nuclear Medicine;
"RTN","IBBDOC",114,0)
 ;                 US=Ultrasound;VAS=Vascular Lab)
"RTN","IBBDOC",115,0)
 ;   IBBPR1(11) - Surgeon; IEN to file #200
"RTN","IBBDOC",116,0)
 ;   IBBPR1(16) - <modifier>;<modifier>;<modifier>;... 
"RTN","IBBDOC",117,0)
 ;                where each <modifier> is an IEN to file #81.3
"RTN","IBBDOC",118,0)
 ; IBBDG1   = array for DG1 segment data
"RTN","IBBDOC",119,0)
 ;   IBBDG1(n,3) - Diagnosis; IEN to file #80
"RTN","IBBDOC",120,0)
 ;   IBBDG1(1,4) - Diagnosis; free text; only one allowed
"RTN","IBBDOC",121,0)
 ;   IBBDG1(n,6) - Diagnosis Type; (A=Admitting;
"RTN","IBBDOC",122,0)
 ;                                  W=Working;
"RTN","IBBDOC",123,0)
 ;                                  D=Discharge;
"RTN","IBBDOC",124,0)
 ;                                  F=Final)
"RTN","IBBDOC",125,0)
 ; IBBZCL   = array for ZCL segment data
"RTN","IBBDOC",126,0)
 ;   IBBZCL(n,2) - Classification Type; 
"RTN","IBBDOC",127,0)
 ;                 (1=AO;2=IR;3=SC;4=EC;5=MST;6=HNC;
"RTN","IBBDOC",128,0)
 ;                  7=CV;8=SHAD)
"RTN","IBBDOC",129,0)
 ;   IBBZCL(n,3) - Classification Value; (1=YES;0=NO)
"RTN","IBBDOC",130,0)
 ; IBBDIV   = IEN to file #40.8
"RTN","IBBDOC",131,0)
 ; IBBRAIEN = IEN to file #75.1
"RTN","IBBDOC",132,0)
 ; IBBSURG  = array for special Surgery data
"RTN","IBBDOC",133,0)
 ;   IBBSURG(1) - Surgical Case #; IEN to file #130
"RTN","IBBDOC",134,0)
 ;   IBBSURG(2) - Surgical Specialty; IEN to file #45.3
"RTN","IBBDOC",135,0)
 ;
"RTN","IBBDOC",136,0)
 ; Returns the pointer to the PFSS ACCOUNT file (#375) where 
"RTN","IBBDOC",137,0)
 ; all application input data is stored.
"RTN","IBBDOC",138,0)
 ;
"RTN","IBBDOC",139,0)
 ; Output:  IEN to file #375, or 0, if unsuccessful
"RTN","IBBDOC",140,0)
 ; 
"RTN","IBBDOC",141,0)
GETCHGID ; ()
"RTN","IBBDOC",142,0)
 ; Returns a Unique Charge ID.
"RTN","IBBDOC",143,0)
 ;
"RTN","IBBDOC",144,0)
 ; Output: 1 + current value of field #2 of file #372.
"RTN","IBBDOC",145,0)
 ;
"RTN","IBBDOC",146,0)
CHARGE ; (IBBDFN,IBBARFN,IBBCTYPE,IBBUCID,IBBFT1,IBBPR1,IBBDG1,IBBZCL,IBBRXE,IBBORIEN,IBBPROS)
"RTN","IBBDOC",147,0)
 ; Pass data to IBB for charge (DFT) messaging.
"RTN","IBBDOC",148,0)
 ;
"RTN","IBBDOC",149,0)
 ; Input:
"RTN","IBBDOC",150,0)
 ; IBBDFN   = Patient; IEN to file #2 [required]
"RTN","IBBDOC",151,0)
 ; IBBARFN  = Account Reference; IEN to file #375 [required]
"RTN","IBBDOC",152,0)
 ; IBBCTYPE = Charge Type; (CG=debit;CD=credit) [required]
"RTN","IBBDOC",153,0)
 ; IBBUCID  = Unique Charge ID [required]
"RTN","IBBDOC",154,0)
 ; IBBFT1   = array for FT1 segment data [required]
"RTN","IBBDOC",155,0)
 ;   IBBFT1(4)  - Transaction Date/Time
"RTN","IBBDOC",156,0)
 ;   IBBFT1(7)  - Pharmacy Service Code
"RTN","IBBDOC",157,0)
 ;   IBBFT1(10) - Transaction Quantity
"RTN","IBBDOC",158,0)
 ;   IBBFT1(13) - Department Code
"RTN","IBBDOC",159,0)
 ;   IBBFT1(16) - Patient Location; IEN to file #44
"RTN","IBBDOC",160,0)
 ;   IBBFT1(18) - Patient Status; (Pharmacy: 1=Rx Copay Exempt;
"RTN","IBBDOC",161,0)
 ;                                           0=Not Exempt)
"RTN","IBBDOC",162,0)
 ;   IBBFT1(20) - Rendering Provider; IEN to file #200
"RTN","IBBDOC",163,0)
 ;   IBBFT1(21) - Ordering Provider; IEN to file #200
"RTN","IBBDOC",164,0)
 ;   IBBFT1(22) - Unit Cost
"RTN","IBBDOC",165,0)
 ;   IBBFT1(29) - <NDC>;<generic_name>
"RTN","IBBDOC",166,0)
 ;   IBBFT1(31) - Transaction Type; 
"RTN","IBBDOC",167,0)
 ;                (Pharmacy: 1=PSO NSC Rx Copay;
"RTN","IBBDOC",168,0)
 ;                           2=PSO SC Rx Copay;
"RTN","IBBDOC",169,0)
 ;                           3=PSO NSC Rx Copay Cancel
"RTN","IBBDOC",170,0)
 ;                           4=PSO NSC Rx Copay Update
"RTN","IBBDOC",171,0)
 ;                           5=PSO SC Rx Copay Cancel
"RTN","IBBDOC",172,0)
 ;                           6=PSO SC Rx Copay Update)
"RTN","IBBDOC",173,0)
 ; IBBPR1   = array for PR1 segment data;
"RTN","IBBDOC",174,0)
 ;            (required except Pharmacy)
"RTN","IBBDOC",175,0)
 ;   IBBPR1(3)    - Procedure; IEN to file #81
"RTN","IBBDOC",176,0)
 ;   IBBPR1(4)    - Procedure; free text
"RTN","IBBDOC",177,0)
 ;   IBBPR1(5)    - Procedure Date/Time
"RTN","IBBDOC",178,0)
 ;   IBBPR1(6)    - Functional Type; 
"RTN","IBBDOC",179,0)
 ;                  (Prosthetics: O=Home Oxygen;
"RTN","IBBDOC",180,0)
 ;                                P=Purchasing;
"RTN","IBBDOC",181,0)
 ;                                I=Stock Issue)
"RTN","IBBDOC",182,0)
 ;   IBBPR1(11,1) - Surgeon; IEN to file #200
"RTN","IBBDOC",183,0)
 ;   IBBPR1(11,2) - Attending Surgeon; IEN to file #200
"RTN","IBBDOC",184,0)
 ;   IBBPR1(16)   - <modifier>;<modifier>;<modifier>;...;
"RTN","IBBDOC",185,0)
 ;                  each <modifier> is an IEN to file #81.3
"RTN","IBBDOC",186,0)
 ; IBBDG1   = array for DG1 segment data
"RTN","IBBDOC",187,0)
 ;   IBBDG1(n,3) - Diagnosis; IEN to file #80
"RTN","IBBDOC",188,0)
 ;   IBBDG1(n,6) - Diagnosis Type; (A=Admitting;W=Working;
"RTN","IBBDOC",189,0)
 ;                                  D=Discharge;F=Final)
"RTN","IBBDOC",190,0)
 ; IBBZCL   = array for ZCL segment data
"RTN","IBBDOC",191,0)
 ;   IBBZCL(n,2) - Classification Type; 
"RTN","IBBDOC",192,0)
 ;                 (1=AO;2=IR;3=SC;4=EC;5=MST;
"RTN","IBBDOC",193,0)
 ;                  6=HNC;7=CV;8=SHAD)
"RTN","IBBDOC",194,0)
 ;   IBBZCL(n,3) - Classification Value; (1=YES;0=NO)
"RTN","IBBDOC",195,0)
 ; IBBRXE   = data for RXE segment data (Pharmacy only)
"RTN","IBBDOC",196,0)
 ;   IBBRXE(1)  - <quantity>_;_<days_supply>
"RTN","IBBDOC",197,0)
 ;   IBBRXE(17) - Refills Dispensed
"RTN","IBBDOC",198,0)
 ;   IBBRXE(18) - Release Date/Time
"RTN","IBBDOC",199,0)
 ;   IBBRXE(31) - DEA, Special Handling codes
"RTN","IBBDOC",200,0)
 ; IBBPROS  = array for special Prosthetics data
"RTN","IBBDOC",201,0)
 ;   IBBPROS(1) - Vendor; IEN to file #440
"RTN","IBBDOC",202,0)
 ;   IBBPROS(2) - OBL#
"RTN","IBBDOC",203,0)
 ;
"RTN","IBBDOC",204,0)
 ; Returns success indicator.
"RTN","IBBDOC",205,0)
 ;
"RTN","IBBDOC",206,0)
 ; Output: 1, if successful; 0 otherwise
"RTN","IBBDOC",207,0)
 ;
"RTN","IBBDOC",208,0)
SETACCT ; (IBBDFN,HLMTIENS)
"RTN","IBBDOC",209,0)
 ; Store visit/account # from external billing system in PFSS
"RTN","IBBDOC",210,0)
 ; ACCOUNT record; the file #375 record is found based on data
"RTN","IBBDOC",211,0)
 ; contained in the HL7 message referenced by HLMTIENS.
"RTN","IBBDOC",212,0)
 ; Most of the ADT messages involved originate in VistA and 
"RTN","IBBDOC",213,0)
 ; are returned by the external billing system with visit#
"RTN","IBBDOC",214,0)
 ; attached.
"RTN","IBBDOC",215,0)
 ; Some ADT-A01 messages originate in the external billing
"RTN","IBBDOC",216,0)
 ; system; these cause a new record to be created in file #375.
"RTN","IBBDOC",217,0)
 ; 
"RTN","IBBDOC",218,0)
 ; Input:
"RTN","IBBDOC",219,0)
 ; IBBDFN   = Patient; IEN to file #2 [required]
"RTN","IBBDOC",220,0)
 ; HLMTIENS = HL7 Message (standard VistA HL7 variable); 
"RTN","IBBDOC",221,0)
 ;            IEN to file #773 [required]
"RTN","IBBDOC",222,0)
 ;
"RTN","IBBDOC",223,0)
 ; Returns PFSS Account Reference.
"RTN","IBBDOC",224,0)
 ;
"RTN","IBBDOC",225,0)
 ; Output: IEN to file #375
"RTN","IBBDOC",226,0)
 ;
"RTN","IBBDOC",227,0)
EXTNUM ; (IBBDFN,IBBARFN)
"RTN","IBBDOC",228,0)
 ; Obtain the visit/account # of the external billing system
"RTN","IBBDOC",229,0)
 ; that has been associated with the PFSS ACCOUNT file (#375)
"RTN","IBBDOC",230,0)
 ; record.
"RTN","IBBDOC",231,0)
 ; 
"RTN","IBBDOC",232,0)
 ; Input:
"RTN","IBBDOC",233,0)
 ; IBBDFN   = Patient; IEN to file #2 [required]
"RTN","IBBDOC",234,0)
 ; IBBARFN  = Account Reference; IEN to file #375 [required]
"RTN","IBBDOC",235,0)
 ;
"RTN","IBBDOC",236,0)
 ; Returns the value of field #.02 from the file #375 record.
"RTN","IBBDOC",237,0)
 ;
"RTN","IBBDOC",238,0)
 ; Output: external visit/account #, or 0, if unsuccessful
"RTN","IBBDOC",239,0)
 ;
"RTN","IBBFAPI")
0^16^B43623282^B42412028
"RTN","IBBFAPI",1,0)
IBBFAPI ;OAK/ELZ - FOR OTHER PACKAGES TO QUERY INSURANCE INFO ;2/18/10 3:42pm
"RTN","IBBFAPI",2,0)
 ;;2.0;INTEGRATED BILLING;**267,297,249,317,361,384,404**;21-MAR-94;Build 6
"RTN","IBBFAPI",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBBFAPI",4,0)
 ;
"RTN","IBBFAPI",5,0)
 ; -- see IBBDOC for API documentation
"RTN","IBBFAPI",6,0)
 ;    no applications should call here directly
"RTN","IBBFAPI",7,0)
INSUR(DFN,IBDT,IBSTAT,IBR,IBFLDS) ; Return Patient Insurance Information
"RTN","IBBFAPI",8,0)
 ;
"RTN","IBBFAPI",9,0)
 N ERROR,ERRORT,FCNT,IBPLN,ICNT,INSP,N,N1,NOK,PASS,PASS1,X,%
"RTN","IBBFAPI",10,0)
 K ERRORT D ERRORLD
"RTN","IBBFAPI",11,0)
 S NOK=-1
"RTN","IBBFAPI",12,0)
 S DFN=$G(DFN)
"RTN","IBBFAPI",13,0)
 S IBSTAT=$G(IBSTAT)
"RTN","IBBFAPI",14,0)
 S IBDT=$P($G(IBDT),".")
"RTN","IBBFAPI",15,0)
 S IBFLDS=$G(IBFLDS)
"RTN","IBBFAPI",16,0)
 I IBDT,IBSTAT["A" S ERROR=107 D ERROR Q NOK
"RTN","IBBFAPI",17,0)
 S (ERROR,PASS)=0 K IBR
"RTN","IBBFAPI",18,0)
 I 'DFN S ERROR=102 D ERROR Q NOK
"RTN","IBBFAPI",19,0)
 I '$D(^DPT(DFN)) S ERROR=106 D ERROR Q NOK
"RTN","IBBFAPI",20,0)
 I IBDT]"",IBDT'?7N S ERROR=104 D ERROR Q NOK
"RTN","IBBFAPI",21,0)
 I +IBDT=0 D NOW^%DTC S IBDT=$P(%,".",1)
"RTN","IBBFAPI",22,0)
 I IBSTAT]"" N Y F X=1:1:$L(IBSTAT) S Y=$E(IBSTAT,X) I '$F("^A^R^P^O^I^B^E^",(U_Y_U)) S ERROR=105 D ERROR Q
"RTN","IBBFAPI",23,0)
 I ERROR=105 Q NOK
"RTN","IBBFAPI",24,0)
 I IBFLDS]"",IBFLDS'="*" N Y F X=1:1:$L(IBFLDS,",") D
"RTN","IBBFAPI",25,0)
 . S Y=$P(IBFLDS,",",X)
"RTN","IBBFAPI",26,0)
 . I Y'?1N.N S ERROR=103
"RTN","IBBFAPI",27,0)
 . I Y?1N.N,(Y<1)!(Y>24) S ERROR=103
"RTN","IBBFAPI",28,0)
 I ERROR=103 D ERROR Q NOK
"RTN","IBBFAPI",29,0)
 K IBR
"RTN","IBBFAPI",30,0)
 ; set buffer file flag
"RTN","IBBFAPI",31,0)
 S (X,IBR("BUFFER"))=0 F  S X=$O(^IBA(355.33,"C",DFN,X)) Q:'X  S IBR("BUFFER")=IBR("BUFFER")+1
"RTN","IBBFAPI",32,0)
 ; if ePharmacy requested then don't do Rx coverage, will do that elsewhere,
"RTN","IBBFAPI",33,0)
 ; if E then no generic P allowed!!!  E will limit the P check even more.
"RTN","IBBFAPI",34,0)
 I IBSTAT["E" S IBSTAT=$TR(IBSTAT,"P","")
"RTN","IBBFAPI",35,0)
 S (ICNT,N)=0 F  S N=$O(^DPT(DFN,.312,N)) Q:'N  I $D(^(N,0)) D
"RTN","IBBFAPI",36,0)
 . S X=^DPT(DFN,.312,N,0)
"RTN","IBBFAPI",37,0)
 . N X1
"RTN","IBBFAPI",38,0)
 . S X1=$G(^DIC(36,+X,0)) I X1="" Q  ; no insurance company entry
"RTN","IBBFAPI",39,0)
 . S INSP=$P(X,U,1),IBPLN=$P(X,U,18)
"RTN","IBBFAPI",40,0)
 . I IBSTAT'["R",$P(X1,U,2)="N" Q  ; does not reimburse
"RTN","IBBFAPI",41,0)
 . I IBSTAT'["B",$$INDEM^IBCNS1(X) Q  ; indemnity policy
"RTN","IBBFAPI",42,0)
 . S PASS1=0
"RTN","IBBFAPI",43,0)
 . I IBSTAT'["A" D
"RTN","IBBFAPI",44,0)
 . . I $P(X,U,8),IBDT<$P(X,U,8) S PASS1=1 Q  ;effective after care date
"RTN","IBBFAPI",45,0)
 . . I $P(X,U,4),IBDT>$P(X,U,4) S PASS1=1 Q  ;terminated before care date
"RTN","IBBFAPI",46,0)
 . . I $P($G(^IBA(355.3,+$P(X,U,18),0)),U,11) S PASS1=1 Q  ;inactive plan
"RTN","IBBFAPI",47,0)
 . . I $P(X1,U,5) S PASS1=1 Q  ; inactive insurance company
"RTN","IBBFAPI",48,0)
 . Q:PASS1
"RTN","IBBFAPI",49,0)
 . S ICNT=ICNT+1
"RTN","IBBFAPI",50,0)
 . S FCNT=$S(IBFLDS="*":24,1:$L(IBFLDS,",")) ; number of fields to pull
"RTN","IBBFAPI",51,0)
 . S IBR("IBBAPI","INSUR",ICNT)=""
"RTN","IBBFAPI",52,0)
 . I IBFLDS'="" F N1=1:1:FCNT D
"RTN","IBBFAPI",53,0)
 . . N RET,RETVAL
"RTN","IBBFAPI",54,0)
 . . S RET=$S(IBFLDS="*":N1,1:$P(IBFLDS,",",N1)),RETVAL="" I RET?1N.N,RET>0,RET<25 D @RET S IBR("IBBAPI","INSUR",ICNT,RET)=RETVAL
"RTN","IBBFAPI",55,0)
 . I IBSTAT["P"!(IBSTAT["O")!(IBSTAT["I")!(IBSTAT["E") D  I PASS1=0 K IBR("IBBAPI","INSUR",ICNT) S ICNT=ICNT-1
"RTN","IBBFAPI",56,0)
 . . S PASS1=0 Q:IBPLN=""
"RTN","IBBFAPI",57,0)
 . . I IBSTAT["P",+$$PLCOV(IBPLN,IBDT,"PHARMACY")>0 S PASS1=1
"RTN","IBBFAPI",58,0)
 . . I IBSTAT["O",+$$PLCOV(IBPLN,IBDT,"OUTPATIENT")>0 S PASS1=1
"RTN","IBBFAPI",59,0)
 . . I IBSTAT["I",+$$PLCOV(IBPLN,IBDT,"INPATIENT")>0 S PASS1=1
"RTN","IBBFAPI",60,0)
 . . I IBSTAT["E",+$$PLCOV(IBPLN,IBDT,"PHARMACY")>0,$$EPHARM(IBPLN) S PASS1=1
"RTN","IBBFAPI",61,0)
 I $D(IBR("IBBAPI","INSUR")),$O(IBR("IBBAPI","INSUR",0))'="ERROR" S PASS=1 F X=1:1 Q:'$D(IBR("IBBAPI","INSUR",X))  K:'$O(IBR("IBBAPI","INSUR",X,"")) IBR("IBBAPI","INSUR",X)
"RTN","IBBFAPI",62,0)
 Q PASS
"RTN","IBBFAPI",63,0)
ERRORLD ;  load error array
"RTN","IBBFAPI",64,0)
 F X=1:1:9 S ERRORT(X+100)=$P($T(ERRORLD1+X),";;",2)
"RTN","IBBFAPI",65,0)
 Q
"RTN","IBBFAPI",66,0)
 ;
"RTN","IBBFAPI",67,0)
ERRORLD1 ; error messages
"RTN","IBBFAPI",68,0)
 ;;DATABASE IS UNAVAILABLE
"RTN","IBBFAPI",69,0)
 ;;PATIENT ID IS REQUIRED
"RTN","IBBFAPI",70,0)
 ;;INVALID FIELD LIST
"RTN","IBBFAPI",71,0)
 ;;INVALID EFFECTIVE DATE
"RTN","IBBFAPI",72,0)
 ;;INVALID INSURANCE STATUS FILTER
"RTN","IBBFAPI",73,0)
 ;;INVALID PATIENT ID
"RTN","IBBFAPI",74,0)
 ;;INVALID COMBINATION, YOU CANNOT USE ""A"" WITH A DATE
"RTN","IBBFAPI",75,0)
 ;;DATA SOURCE IS NOT DEFINED
"RTN","IBBFAPI",76,0)
 ;;NO DATA ELEMENTS TO STORE
"RTN","IBBFAPI",77,0)
 ;;
"RTN","IBBFAPI",78,0)
ERROR ;
"RTN","IBBFAPI",79,0)
 K IBR S IBR("IBBAPI","INSUR","ERROR",ERROR)=ERRORT(ERROR)
"RTN","IBBFAPI",80,0)
 Q
"RTN","IBBFAPI",81,0)
 ;
"RTN","IBBFAPI",82,0)
1 ; Ins. Comp. name
"RTN","IBBFAPI",83,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",.01,"I")_U_$$GET1^DIQ(2.312,N_","_DFN_",",.01)
"RTN","IBBFAPI",84,0)
 Q
"RTN","IBBFAPI",85,0)
2 ; Ins. Comp. Street Address Line 1
"RTN","IBBFAPI",86,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.111)
"RTN","IBBFAPI",87,0)
 Q
"RTN","IBBFAPI",88,0)
3 ; Ins. Comp. City
"RTN","IBBFAPI",89,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.114)
"RTN","IBBFAPI",90,0)
 Q
"RTN","IBBFAPI",91,0)
4 ; Ins. Comp. State
"RTN","IBBFAPI",92,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.115,"I") S:RETVAL RETVAL=RETVAL_U_$$GET1^DIQ(36,INSP_",",.115)
"RTN","IBBFAPI",93,0)
 Q
"RTN","IBBFAPI",94,0)
5 ; Ins. Comp. Zip
"RTN","IBBFAPI",95,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.116)
"RTN","IBBFAPI",96,0)
 Q
"RTN","IBBFAPI",97,0)
6 ; Ins. Comp. Phone
"RTN","IBBFAPI",98,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.131)
"RTN","IBBFAPI",99,0)
 Q
"RTN","IBBFAPI",100,0)
7 ; Coordination of Benefits
"RTN","IBBFAPI",101,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",.2,"I")_U_$$GET1^DIQ(2.312,N_","_DFN_",",.2)
"RTN","IBBFAPI",102,0)
 I RETVAL="^" S RETVAL=""
"RTN","IBBFAPI",103,0)
 Q
"RTN","IBBFAPI",104,0)
8 ; Policy Name
"RTN","IBBFAPI",105,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",.18,"I") S:RETVAL RETVAL=RETVAL_U_$$GET1^DIQ(355.3,RETVAL,.03)
"RTN","IBBFAPI",106,0)
 Q
"RTN","IBBFAPI",107,0)
9 ; Policy Reimbursable?
"RTN","IBBFAPI",108,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",1,"I")
"RTN","IBBFAPI",109,0)
 S RETVAL=$S(RETVAL="Y":"1^YES",RETVAL="*":"1^YES",RETVAL="**":"1^YES",RETVAL="":"1^YES",1:"0^NO")
"RTN","IBBFAPI",110,0)
 Q
"RTN","IBBFAPI",111,0)
10 ; Policy Effective Date
"RTN","IBBFAPI",112,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",8,"I")
"RTN","IBBFAPI",113,0)
 Q
"RTN","IBBFAPI",114,0)
11 ; Policy Expiration Date
"RTN","IBBFAPI",115,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",3,"I")
"RTN","IBBFAPI",116,0)
 Q
"RTN","IBBFAPI",117,0)
12 ; Subscriber Relationship
"RTN","IBBFAPI",118,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",16,"I")
"RTN","IBBFAPI",119,0)
 S RETVAL=$S(RETVAL="01":"P^PATIENT",RETVAL="02":"S^SPOUSE",RETVAL:"O^OTHER",1:"")
"RTN","IBBFAPI",120,0)
 Q
"RTN","IBBFAPI",121,0)
13 ; Subscriber Name
"RTN","IBBFAPI",122,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",17)
"RTN","IBBFAPI",123,0)
 Q
"RTN","IBBFAPI",124,0)
14  ; Subscriber ID
"RTN","IBBFAPI",125,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",1)
"RTN","IBBFAPI",126,0)
 Q
"RTN","IBBFAPI",127,0)
15 ; Pharmacy Coverage?
"RTN","IBBFAPI",128,0)
 N IBCOV
"RTN","IBBFAPI",129,0)
 S IBCOV=$$PLCOV(IBPLN,IBDT,"PHARMACY")
"RTN","IBBFAPI",130,0)
 S RETVAL=$S(+IBCOV=0:"0^NO",1:"1^YES")
"RTN","IBBFAPI",131,0)
 Q
"RTN","IBBFAPI",132,0)
16 ; Outpatient Coverage?
"RTN","IBBFAPI",133,0)
 N IBCOV
"RTN","IBBFAPI",134,0)
 S IBCOV=$$PLCOV(IBPLN,IBDT,"OUTPATIENT")
"RTN","IBBFAPI",135,0)
 S RETVAL=$S(+IBCOV=0:"0^NO",1:"1^YES")
"RTN","IBBFAPI",136,0)
 Q
"RTN","IBBFAPI",137,0)
17 ; Inpatient Coverage?
"RTN","IBBFAPI",138,0)
 N IBCOV
"RTN","IBBFAPI",139,0)
 S IBCOV=$$PLCOV(IBPLN,IBDT,"INPATIENT")
"RTN","IBBFAPI",140,0)
 S RETVAL=$S(+IBCOV=0:"0^NO",1:"1^YES")
"RTN","IBBFAPI",141,0)
 Q
"RTN","IBBFAPI",142,0)
18 ; Group Number
"RTN","IBBFAPI",143,0)
 S RETVAL=$$GET1^DIQ(355.3,$$GET1^DIQ(2.312,N_","_DFN_",",.18,"I")_",",.04)
"RTN","IBBFAPI",144,0)
 Q
"RTN","IBBFAPI",145,0)
 ;
"RTN","IBBFAPI",146,0)
19 ; Patient Relationship to Subscriber
"RTN","IBBFAPI",147,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",16,"I") S:RETVAL RETVAL=RETVAL_U_$$GET1^DIQ(2.312,N_","_DFN_",",16)
"RTN","IBBFAPI",148,0)
 Q
"RTN","IBBFAPI",149,0)
 ;
"RTN","IBBFAPI",150,0)
20 ; VA Advantage and Tricare plan
"RTN","IBBFAPI",151,0)
 S RETVAL=0  ; VA Advantage to be determined at a later date
"RTN","IBBFAPI",152,0)
 N PLN,TYP1,TYP2,RETVAL1
"RTN","IBBFAPI",153,0)
 S PLN=$$GET1^DIQ(2.312,N_","_DFN_",",.18,"I")
"RTN","IBBFAPI",154,0)
 S TYP1=$$GET1^DIQ(355.3,PLN_",",.09,"I")
"RTN","IBBFAPI",155,0)
 S TYP2=$$GET1^DIQ(355.1,TYP1_",",.03,"I")
"RTN","IBBFAPI",156,0)
 S RETVAL1=$S(TYP2=7:1,1:0)  ; determine if Tricare plan
"RTN","IBBFAPI",157,0)
 S RETVAL=RETVAL_U_RETVAL1
"RTN","IBBFAPI",158,0)
 Q
"RTN","IBBFAPI",159,0)
 ;
"RTN","IBBFAPI",160,0)
21 ; Plan Type
"RTN","IBBFAPI",161,0)
 N PLN,TYP1
"RTN","IBBFAPI",162,0)
 S PLN=$$GET1^DIQ(2.312,N_","_DFN_",",.18,"I")
"RTN","IBBFAPI",163,0)
 S TYP1=$$GET1^DIQ(355.3,PLN_",",.09,"I")
"RTN","IBBFAPI",164,0)
 S RETVAL=$S(TYP1:TYP1_U_$$GET1^DIQ(355.1,TYP1_",",.01,"I"),1:"")
"RTN","IBBFAPI",165,0)
 Q
"RTN","IBBFAPI",166,0)
 ;
"RTN","IBBFAPI",167,0)
22 ; Subscriber Sex
"RTN","IBBFAPI",168,0)
 D 12
"RTN","IBBFAPI",169,0)
 I $E(RETVAL)="P" S RETVAL=$$GET1^DIQ(2,DFN_",",.02,"I") S:$L(RETVAL) RETVAL=RETVAL_U_$$GET1^DIQ(2,DFN_",",.02)
"RTN","IBBFAPI",170,0)
 E  S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",3.12,"I") S:$L(RETVAL) RETVAL=RETVAL_U_$$GET1^DIQ(2.312,N_","_DFN_",",3.12)
"RTN","IBBFAPI",171,0)
 Q
"RTN","IBBFAPI",172,0)
 ;
"RTN","IBBFAPI",173,0)
23 ; Ins. Company Street Address Line 2
"RTN","IBBFAPI",174,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.112)
"RTN","IBBFAPI",175,0)
 Q
"RTN","IBBFAPI",176,0)
 ;
"RTN","IBBFAPI",177,0)
24 ; Ins. Company Street Address Line 3
"RTN","IBBFAPI",178,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.113)
"RTN","IBBFAPI",179,0)
 Q
"RTN","IBBFAPI",180,0)
 ;
"RTN","IBBFAPI",181,0)
PLCOV(IBPL,IBVDT,IBCAT) ; Determine if a specific plan covers a category of coverage as of a date
"RTN","IBBFAPI",182,0)
 ; IBPL - pointer to file 355.3 group insurance plan (req)
"RTN","IBBFAPI",183,0)
 ; IBVDT - fileman format visit date (req)
"RTN","IBBFAPI",184,0)
 ; IBCAT -  pointer to file 355.31 limitation of coverage category (req)
"RTN","IBBFAPI",185,0)
 N CATLIM,X,Y
"RTN","IBBFAPI",186,0)
 I '$G(IBPL)!('$G(IBVDT))!('$L($G(IBCAT))) Q 0
"RTN","IBBFAPI",187,0)
 S X=0
"RTN","IBBFAPI",188,0)
 S IBCAT=$O(^IBE(355.31,"B",IBCAT,"")) G:IBCAT="" PLCOVQ
"RTN","IBBFAPI",189,0)
 S CATLIM=$O(^IBA(355.32,"APCD",IBPL,IBCAT,+$O(^IBA(355.32,"APCD",IBPL,IBCAT,-(IBVDT+1))),""))
"RTN","IBBFAPI",190,0)
 S X=$S(CATLIM="":1,1:+$P($G(^IBA(355.32,CATLIM,0)),U,4))
"RTN","IBBFAPI",191,0)
PLCOVQ Q X
"RTN","IBBFAPI",192,0)
 ;
"RTN","IBBFAPI",193,0)
EPHARM(IBPL) ; return if a plan is epharmacy billable
"RTN","IBBFAPI",194,0)
 N IBPIEN,IBOK,IBY
"RTN","IBBFAPI",195,0)
 S IBOK=1
"RTN","IBBFAPI",196,0)
 S IBPIEN=+$G(^IBA(355.3,+IBPL,6))
"RTN","IBBFAPI",197,0)
 I 'IBPIEN S IBOK=0 G EPHARMQ
"RTN","IBBFAPI",198,0)
 D STCHK^IBCNRU1(IBPIEN,.IBY)
"RTN","IBBFAPI",199,0)
 I $E($G(IBY(1)))'="A" S IBOK=0
"RTN","IBBFAPI",200,0)
EPHARMQ ;
"RTN","IBBFAPI",201,0)
 Q IBOK
"RTN","IBBFAPI",202,0)
 ;
"VER")
8.0^22.0
"BLD",7653,6)
^412
**END**
**END**
