Released IB*2*433 SEQ #415
Extracted from mail message
**KIDS**:IB*2.0*433^

**INSTALL NAME**
IB*2.0*433
"BLD",7702,0)
IB*2.0*433^INTEGRATED BILLING^0^3110425^y
"BLD",7702,1,0)
^^1^1^3100716^
"BLD",7702,1,1,0)
E-billing Iteration 4, Enhancement 6:  Preserve Claim Number
"BLD",7702,4,0)
^9.64PA^399^1
"BLD",7702,4,399,0)
399
"BLD",7702,4,399,2,0)
^9.641^399^1
"BLD",7702,4,399,2,399,0)
BILL/CLAIMS  (File-top level)
"BLD",7702,4,399,2,399,1,0)
^9.6411^.01^1
"BLD",7702,4,399,2,399,1,.01,0)
BILL NUMBER
"BLD",7702,4,399,222)
y^y^p^^^^n^^n
"BLD",7702,4,399,224)

"BLD",7702,4,"APDD",399,399)

"BLD",7702,4,"APDD",399,399,.01)

"BLD",7702,4,"B",399,399)

"BLD",7702,6)
10^
"BLD",7702,6.3)
36
"BLD",7702,"ABPKG")
n
"BLD",7702,"KRN",0)
^9.67PA^779.2^20
"BLD",7702,"KRN",.4,0)
.4
"BLD",7702,"KRN",.401,0)
.401
"BLD",7702,"KRN",.402,0)
.402
"BLD",7702,"KRN",.402,"NM",0)
^9.68A^^0
"BLD",7702,"KRN",.403,0)
.403
"BLD",7702,"KRN",.5,0)
.5
"BLD",7702,"KRN",.84,0)
.84
"BLD",7702,"KRN",3.6,0)
3.6
"BLD",7702,"KRN",3.8,0)
3.8
"BLD",7702,"KRN",9.2,0)
9.2
"BLD",7702,"KRN",9.8,0)
9.8
"BLD",7702,"KRN",9.8,"NM",0)
^9.68A^10^10
"BLD",7702,"KRN",9.8,"NM",1,0)
IBCCC^^0^B19833336
"BLD",7702,"KRN",9.8,"NM",2,0)
IBCC^^0^B55278048
"BLD",7702,"KRN",9.8,"NM",3,0)
IBCCC1^^0^B10538987
"BLD",7702,"KRN",9.8,"NM",4,0)
IBCCC2^^0^B69917469
"BLD",7702,"KRN",9.8,"NM",5,0)
IBCECSA4^^0^B60720503
"BLD",7702,"KRN",9.8,"NM",6,0)
IBCECOB2^^0^B78530862
"BLD",7702,"KRN",9.8,"NM",7,0)
IBOLK^^0^B18563160
"BLD",7702,"KRN",9.8,"NM",8,0)
IBOA31^^0^B15589530
"BLD",7702,"KRN",9.8,"NM",9,0)
IBOA32^^0^B6792943
"BLD",7702,"KRN",9.8,"NM",10,0)
IBCNQ^^0^B25510710
"BLD",7702,"KRN",9.8,"NM","B","IBCC",2)

"BLD",7702,"KRN",9.8,"NM","B","IBCCC",1)

"BLD",7702,"KRN",9.8,"NM","B","IBCCC1",3)

"BLD",7702,"KRN",9.8,"NM","B","IBCCC2",4)

"BLD",7702,"KRN",9.8,"NM","B","IBCECOB2",6)

"BLD",7702,"KRN",9.8,"NM","B","IBCECSA4",5)

"BLD",7702,"KRN",9.8,"NM","B","IBCNQ",10)

"BLD",7702,"KRN",9.8,"NM","B","IBOA31",8)

"BLD",7702,"KRN",9.8,"NM","B","IBOA32",9)

"BLD",7702,"KRN",9.8,"NM","B","IBOLK",7)

"BLD",7702,"KRN",19,0)
19
"BLD",7702,"KRN",19,"NM",0)
^9.68A^3^3
"BLD",7702,"KRN",19,"NM",1,0)
IB CORRECT REJECTED/DENIED^^0
"BLD",7702,"KRN",19,"NM",2,0)
IB THIRD PARTY BILLING MENU^^2
"BLD",7702,"KRN",19,"NM",3,0)
IB COPY AND CANCEL^^0
"BLD",7702,"KRN",19,"NM","B","IB COPY AND CANCEL",3)

"BLD",7702,"KRN",19,"NM","B","IB CORRECT REJECTED/DENIED",1)

"BLD",7702,"KRN",19,"NM","B","IB THIRD PARTY BILLING MENU",2)

"BLD",7702,"KRN",19.1,0)
19.1
"BLD",7702,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",7702,"KRN",19.1,"NM",1,0)
IB CLON^^0
"BLD",7702,"KRN",19.1,"NM","B","IB CLON",1)

"BLD",7702,"KRN",101,0)
101
"BLD",7702,"KRN",101,"NM",0)
^9.68A^5^5
"BLD",7702,"KRN",101,"NM",1,0)
IBCEM CORRECT REJECTED/DENIED BILL^^0
"BLD",7702,"KRN",101,"NM",2,0)
IBCEM COB MANAGEMENT^^2
"BLD",7702,"KRN",101,"NM",3,0)
IBCEM CSA CORRECT REJECTED/DENIED BILL^^0
"BLD",7702,"KRN",101,"NM",4,0)
IBCEM CSA MSG MENU^^2
"BLD",7702,"KRN",101,"NM",5,0)
IBCEM CSA COPY/CANCEL BILL^^1^
"BLD",7702,"KRN",101,"NM","B","IBCEM COB MANAGEMENT",2)

"BLD",7702,"KRN",101,"NM","B","IBCEM CORRECT REJECTED/DENIED BILL",1)

"BLD",7702,"KRN",101,"NM","B","IBCEM CSA COPY/CANCEL BILL",5)

"BLD",7702,"KRN",101,"NM","B","IBCEM CSA CORRECT REJECTED/DENIED BILL",3)

"BLD",7702,"KRN",101,"NM","B","IBCEM CSA MSG MENU",4)

"BLD",7702,"KRN",409.61,0)
409.61
"BLD",7702,"KRN",409.61,"NM",0)
^9.68A^1^1
"BLD",7702,"KRN",409.61,"NM",1,0)
IBCEM MRA MANAGEMENT^^0
"BLD",7702,"KRN",409.61,"NM","B","IBCEM MRA MANAGEMENT",1)

"BLD",7702,"KRN",771,0)
771
"BLD",7702,"KRN",779.2,0)
779.2
"BLD",7702,"KRN",870,0)
870
"BLD",7702,"KRN",8989.51,0)
8989.51
"BLD",7702,"KRN",8989.52,0)
8989.52
"BLD",7702,"KRN",8994,0)
8994
"BLD",7702,"KRN","B",.4,.4)

"BLD",7702,"KRN","B",.401,.401)

"BLD",7702,"KRN","B",.402,.402)

"BLD",7702,"KRN","B",.403,.403)

"BLD",7702,"KRN","B",.5,.5)

"BLD",7702,"KRN","B",.84,.84)

"BLD",7702,"KRN","B",3.6,3.6)

"BLD",7702,"KRN","B",3.8,3.8)

"BLD",7702,"KRN","B",9.2,9.2)

"BLD",7702,"KRN","B",9.8,9.8)

"BLD",7702,"KRN","B",19,19)

"BLD",7702,"KRN","B",19.1,19.1)

"BLD",7702,"KRN","B",101,101)

"BLD",7702,"KRN","B",409.61,409.61)

"BLD",7702,"KRN","B",771,771)

"BLD",7702,"KRN","B",779.2,779.2)

"BLD",7702,"KRN","B",870,870)

"BLD",7702,"KRN","B",8989.51,8989.51)

"BLD",7702,"KRN","B",8989.52,8989.52)

"BLD",7702,"KRN","B",8994,8994)

"BLD",7702,"QDEF")
^^^^NO^^^^YES^^NO
"BLD",7702,"QUES",0)
^9.62^^
"BLD",7702,"REQB",0)
^9.611^6^6
"BLD",7702,"REQB",1,0)
PRCA*4.5*270^2
"BLD",7702,"REQB",2,0)
IB*2.0*420^2
"BLD",7702,"REQB",3,0)
IB*2.0*347^2
"BLD",7702,"REQB",4,0)
IB*2.0*358^2
"BLD",7702,"REQB",5,0)
IB*2.0*400^2
"BLD",7702,"REQB",6,0)
IB*2.0*377^2
"BLD",7702,"REQB","B","IB*2.0*347",3)

"BLD",7702,"REQB","B","IB*2.0*358",4)

"BLD",7702,"REQB","B","IB*2.0*377",6)

"BLD",7702,"REQB","B","IB*2.0*400",5)

"BLD",7702,"REQB","B","IB*2.0*420",2)

"BLD",7702,"REQB","B","PRCA*4.5*270",1)

"FIA",399)
BILL/CLAIMS
"FIA",399,0)
^DGCR(399,
"FIA",399,0,0)
399I
"FIA",399,0,1)
y^y^p^^^^n^^n
"FIA",399,0,10)

"FIA",399,0,11)

"FIA",399,0,"RLRO")

"FIA",399,0,"VR")
2.0^IB
"FIA",399,399)
1
"FIA",399,399,.01)

"KRN",19,2248,-1)
0^3
"KRN",19,2248,0)
IB COPY AND CANCEL^Copy and Cancel^^R^^IB CLON^^^^^^INTEGRATED BILLING
"KRN",19,2248,1,0)
^^2^2^2940413^^^^
"KRN",19,2248,1,1,0)
This option will allow cancelling a bill and then will create an exact
"KRN",19,2248,1,2,0)
duplicate bill except its status will be ENTERED/NOT REVIEWED.
"KRN",19,2248,25)
IBCCC
"KRN",19,2248,"U")
COPY AND CANCEL
"KRN",19,3372,-1)
2^2
"KRN",19,3372,0)
IB THIRD PARTY BILLING MENU^Third Party Billing Menu^^M^10882^^^^^^^200
"KRN",19,3372,10,0)
^19.01IP^20^20
"KRN",19,3372,10,4,0)
2248^CLON
"KRN",19,3372,10,4,"^")
IB COPY AND CANCEL
"KRN",19,3372,10,20,0)
12611^CRD
"KRN",19,3372,10,20,"^")
IB CORRECT REJECTED/DENIED
"KRN",19,3372,"U")
THIRD PARTY BILLING MENU
"KRN",19,12611,-1)
0^1
"KRN",19,12611,0)
IB CORRECT REJECTED/DENIED^Correct Rejected/Denied Bill^^R^^IB AUTHORIZE^^^^^^INTEGRATED BILLING
"KRN",19,12611,1,0)
^^2^2^3100604^
"KRN",19,12611,1,1,0)
This option will allow correcting a rejected or denied bill which has
"KRN",19,12611,1,2,0)
not had any payments posted to it.
"KRN",19,12611,25)
CRD^IBCCC
"KRN",19,12611,"U")
CORRECT REJECTED/DENIED BILL
"KRN",19.1,541,-1)
0^1
"KRN",19.1,541,0)
IB CLON^^^n
"KRN",101,3486,-1)
2^2
"KRN",101,3486,0)
IBCEM COB MANAGEMENT^^^M^123458750^^^^^^^200
"KRN",101,3486,10,0)
^101.01PA^27^27
"KRN",101,3486,10,27,0)
4672^CR^45^
"KRN",101,3486,10,27,"^")
IBCEM CORRECT REJECTED/DENIED BILL
"KRN",101,3506,-1)
2^4
"KRN",101,3506,0)
IBCEM CSA MSG MENU^Select Message Menu^^M^123458750^^^^^^^200
"KRN",101,3506,10,0)
^101.01PA^18^17
"KRN",101,3506,10,18,0)
4671^^10^
"KRN",101,3506,10,18,"^")
IBCEM CSA CORRECT REJECTED/DENIED BILL
"KRN",101,4671,-1)
0^3
"KRN",101,4671,0)
IBCEM CSA CORRECT REJECTED/DENIED BILL^Correct Bill^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4671,1,0)
^101.06^2^2^3100607^^
"KRN",101,4671,1,1,0)
This action allows a user to correct a rejected or denied bill that has
"KRN",101,4671,1,2,0)
been returned to the site.
"KRN",101,4671,15)
I '$D(IOUON) D ENS^%ZISS
"KRN",101,4671,20)
D CRD^IBCECSA4
"KRN",101,4671,99)
62168,49544
"KRN",101,4672,-1)
0^1
"KRN",101,4672,0)
IBCEM CORRECT REJECTED/DENIED BILL^Correct Bill^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4672,1,0)
^101.06^2^2^3100805^^^
"KRN",101,4672,1,1,0)
This action allows a user to correct a rejected or denied bill that 
"KRN",101,4672,1,2,0)
has been returned to the site.
"KRN",101,4672,4)
^^^CRD
"KRN",101,4672,15)
I '$D(IOUON) D ENS^%ZISS
"KRN",101,4672,20)
D CRD^IBCECOB2
"KRN",101,4672,99)
62168,49544
"KRN",101,4722,-1)
1^5
"KRN",101,4722,0)
IBCEM CSA COPY/CANCEL BILL
"KRN",409.61,1027,-1)
0^1
"KRN",409.61,1027,0)
IBCEM MRA MANAGEMENT^1^^80^4^17^1^1^MRA/EOB^IBCEM COB MANAGEMENT^MRA Management WorkList^1^^1
"KRN",409.61,1027,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,1027,"ARRAY")
 ^TMP("IBCECOB",$J)
"KRN",409.61,1027,"COL",0)
^409.621^14^7
"KRN",409.61,1027,"COL",1,0)
BILL^5^12^Bill #^^
"KRN",409.61,1027,"COL",2,0)
SERVICE^18^8^Svc Date^^
"KRN",409.61,1027,"COL",9,0)
NUMBER^1^4^^^
"KRN",409.61,1027,"COL",10,0)
PATNM^27^23^Patient Name        SSN
"KRN",409.61,1027,"COL",12,0)
BTYPE^72^9^Care/Form
"KRN",409.61,1027,"COL",13,0)
PTRESP^51^9^  Pt Resp
"KRN",409.61,1027,"COL",14,0)
IBAMT^61^9^ Bill Amt
"KRN",409.61,1027,"COL","B","BILL",1)

"KRN",409.61,1027,"COL","B","BTYPE",12)

"KRN",409.61,1027,"COL","B","IBAMT",14)

"KRN",409.61,1027,"COL","B","NUMBER",9)

"KRN",409.61,1027,"COL","B","PATNM",10)

"KRN",409.61,1027,"COL","B","PTRESP",13)

"KRN",409.61,1027,"COL","B","SERVICE",2)

"KRN",409.61,1027,"EXP")
D EXP^IBCECOB
"KRN",409.61,1027,"FNL")
D EXIT^IBCECOB
"KRN",409.61,1027,"HDR")
D HDR^IBCECOB
"KRN",409.61,1027,"HLP")
D HELP^IBCECOB
"KRN",409.61,1027,"INIT")
D INIT^IBCECOB
"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;LME1^XPDIA1;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^2^1
"PKG",200,20,2,0)
2^^IBAXDR
"PKG",200,20,2,1)

"PKG",200,20,"B",2,2)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321
"PKG",200,22,1,"PAH",1,0)
433^3110425^123458750
"PKG",200,22,1,"PAH",1,1,0)
^^1^1^3110425
"PKG",200,22,1,"PAH",1,1,1,0)
E-billing Iteration 4, Enhancement 6:  Preserve Claim Number
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
10
"RTN","IBCC")
0^2^B55278048^B36322352
"RTN","IBCC",1,0)
IBCC ;ALB/MJB - CANCEL THIRD PARTY BILL ;14 JUN 88  10:12
"RTN","IBCC",2,0)
 ;;2.0;INTEGRATED BILLING;**2,19,77,80,51,142,137,161,199,241,155,276,320,358,433**;21-MAR-94;Build 36
"RTN","IBCC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCC",4,0)
 ;
"RTN","IBCC",5,0)
 ;MAP TO DGCRC
"RTN","IBCC",6,0)
 ;
"RTN","IBCC",7,0)
 I '$D(IBCAN) S IBCAN=1
"RTN","IBCC",8,0)
ASK ;
"RTN","IBCC",9,0)
 ;***
"RTN","IBCC",10,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBCC" D T1^%ZOSV ;stop rt clock
"RTN","IBCC",11,0)
 ;S XRTL=$ZU(0),XRTN="IBCC-1" D T0^%ZOSV ;start rt clock
"RTN","IBCC",12,0)
 ;
"RTN","IBCC",13,0)
 ; If called at entry point PROCESS, variable IBNOASK will exist.
"RTN","IBCC",14,0)
 ; First time through, IBNOASK=1
"RTN","IBCC",15,0)
 ; Second time through, IBNOASK=2 and it will quit
"RTN","IBCC",16,0)
 I $G(IBNOASK)=2 G Q
"RTN","IBCC",17,0)
 I $G(IBNOASK)=1 S IBNOASK=2
"RTN","IBCC",18,0)
 ;
"RTN","IBCC",19,0)
 G Q:$G(IBCE("EDI"))
"RTN","IBCC",20,0)
 D Q
"RTN","IBCC",21,0)
 S IBQUIT=0
"RTN","IBCC",22,0)
 N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBCC",23,0)
 I '$G(IBNOASK) S DIC="^DGCR(399,",DIC(0)="AEMQZ",DIC("A")="Enter BILL NUMBER or Patient NAME: " W !! D ^DIC I Y<1 S IBQUIT=1 G Q1
"RTN","IBCC",24,0)
 K IB364
"RTN","IBCC",25,0)
NOPTF ; Note if IB364 is >0 it will be used as the ien to update in file 364
"RTN","IBCC",26,0)
 N DA,I
"RTN","IBCC",27,0)
 I '$G(IBNOASK) S IBIFN=+$G(Y)
"RTN","IBCC",28,0)
 I '$G(IBIFN) G ASK
"RTN","IBCC",29,0)
 I IBCAN>1 D NOPTF^IBCB2 I 'IBAC1 D NOPTF1^IBCB2 G ASK
"RTN","IBCC",30,0)
 ;
"RTN","IBCC",31,0)
 I $G(IBCNCRD)=1,$P($P($G(^DGCR(399,IBIFN,0)),U),"-",2)>98 D  Q
"RTN","IBCC",32,0)
 .W !!,"Please note that you have exceeded the maximum number of iterations (99) for this claim."
"RTN","IBCC",33,0)
 .W "Copy and cancel (CLON) must be used to correct this bill."
"RTN","IBCC",34,0)
 .S IBQUIT=1 H 3
"RTN","IBCC",35,0)
 ; Check if bill has been referred to Counsel
"RTN","IBCC",36,0)
 I $P($G(^PRCA(430,IBIFN,6)),U,4) D  G ASK
"RTN","IBCC",37,0)
 . W !,"This bill has been referred to Regional Counsel and cannot be 'CANCELLED' in"
"RTN","IBCC",38,0)
 . W !,"Integrated Billing.  Please use the option 'TP Referred Follow-up'"
"RTN","IBCC",39,0)
 . W !,"[PRCA RC ACTION MENU] in Accounts Receivable to request that Regional"
"RTN","IBCC",40,0)
 . W !,"Counsel return the bill to your facility."
"RTN","IBCC",41,0)
 . Q
"RTN","IBCC",42,0)
 ;
"RTN","IBCC",43,0)
 F I=0,"S","U1" S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCC",44,0)
 S IBSTAT=$P(IB(0),U,13)
"RTN","IBCC",45,0)
 ; New messages for CRD option IB*2.0*433  IA#5630
"RTN","IBCC",46,0)
 I $G(IBCNCRD)=1,IBSTAT'=2,'$$ACCK^PRCAACC(IBIFN) D  Q
"RTN","IBCC",47,0)
 .W !!,"This option cannot be used to correct some Billing Rate Types (Example: TRICARE)"
"RTN","IBCC",48,0)
 .W "Copy and cancel (CLON) must be used to correct this bill."
"RTN","IBCC",49,0)
 .S IBQUIT=1 H 3
"RTN","IBCC",50,0)
 ;
"RTN","IBCC",51,0)
 ; Restrict access to this process for REQUEST MRA bills
"RTN","IBCC",52,0)
 I IBSTAT=2,'$G(IBCE("EDI")),$$MRAWL^IBCEMU2(IBIFN) D  G ASK
"RTN","IBCC",53,0)
 . W !!?4,"This bill is in a status of REQUEST MRA and it does appear on the"
"RTN","IBCC",54,0)
 . W !?4,"MRA Management Work List.  Please use the 'MRA Management Menu' options"
"RTN","IBCC",55,0)
 . W !?4,"for all processing related to this bill."
"RTN","IBCC",56,0)
 . Q
"RTN","IBCC",57,0)
 ;
"RTN","IBCC",58,0)
 ; Check if this is a paper claim. If not, check for split EOB.  If split, don't allow CRD unless more than 1 EOB has been returned
"RTN","IBCC",59,0)
 I $G(IBCNCRD)=1,$P($G(^DGCR(399,IBIFN,"TX")),U,8)'=1,$$SPLTMRA^IBCEMU1(IBIFN)=1 D  Q
"RTN","IBCC",60,0)
 .W !!,"There is a split EOB associated with this claim.  You cannot use this option to Correct this claim until the second EOB has been received."
"RTN","IBCC",61,0)
 .S IBQUIT=1 H 3
"RTN","IBCC",62,0)
 .Q
"RTN","IBCC",63,0)
 ;
"RTN","IBCC",64,0)
 ; Warning message if in a REQUEST MRA status with no MRA on file
"RTN","IBCC",65,0)
 I IBSTAT=2,'$$MRACNT^IBCEMU1(IBIFN) D
"RTN","IBCC",66,0)
 . N REJ
"RTN","IBCC",67,0)
 . D TXSTS^IBCEMU2(IBIFN,,.REJ)
"RTN","IBCC",68,0)
 . W *7,!!?4,"Warning!  This bill is in a status of REQUEST MRA."
"RTN","IBCC",69,0)
 . W !?4,"No MRAs have been received"
"RTN","IBCC",70,0)
 . I REJ W ", but the most recent transmission of this",!?4,"MRA request bill was rejected."
"RTN","IBCC",71,0)
 . I 'REJ W " and there are no rejection messages on file",!?4,"for the most recent transmission of this MRA request bill."
"RTN","IBCC",72,0)
 . Q
"RTN","IBCC",73,0)
 ;
"RTN","IBCC",74,0)
 I IBCAN=2,IB("S")]"",+$P(IB("S"),U,16),$P(IB("S"),U,17)]"" D  G 1
"RTN","IBCC",75,0)
 . W !!,"This bill was cancelled on " S Y=$P(IB("S"),U,17) X ^DD("DD") W Y," by ",$S($P(IB("S"),U,18)']"":IBU,$D(^VA(200,$P(IB("S"),U,18),0)):$P(^(0),U,1),1:IBU),"."
"RTN","IBCC",76,0)
 . S IBQUIT=1
"RTN","IBCC",77,0)
 ; Notify if a payment has been posted to this bill before cancel
"RTN","IBCC",78,0)
 N PRCABILL
"RTN","IBCC",79,0)
 S PRCABILL=$$TPR^PRCAFN(IBIFN)
"RTN","IBCC",80,0)
 I PRCABILL=-1 W !!,"Please note: PRCA was unable to determine if a payment has been posted." I $G(IBCNCRD)=1 W !,"Copy and cancel (CLON) must be used to correct this bill." S IBQUIT=1 H 3 Q
"RTN","IBCC",81,0)
 I PRCABILL>0 W !!,"Please note a PAYMENT of **$"_$$TPR^PRCAFN(IBIFN)_"** has been POSTED to this bill."
"RTN","IBCC",82,0)
 ; New message for CRD option
"RTN","IBCC",83,0)
 I $G(IBCNCRD)=1,PRCABILL>0 W !,"Copy and cancel (CLON) must be used to correct this bill." S IBQUIT=1 H 3 Q
"RTN","IBCC",84,0)
 ;
"RTN","IBCC",85,0)
 ; If bill was created via Electronic claims process then notify
"RTN","IBCC",86,0)
 ; user that cancellation should occur using ECME package
"RTN","IBCC",87,0)
 I $$GET1^DIQ(399,IBIFN_",",460)]"" D  G:'Y ASK
"RTN","IBCC",88,0)
 . W !!!?5,"This bill was created by the"
"RTN","IBCC",89,0)
 . W !?5,"Electronic Claims Management Engine (ECME)."
"RTN","IBCC",90,0)
 . W !?5,"Cancellation needs to occur in the ECME package by"
"RTN","IBCC",91,0)
 . W !?5,"submitting a REVERSAL to the Payer.",!!
"RTN","IBCC",92,0)
 . K DIR S DIR("A",1)="Has a REVERSAL for this e-Claim already been",DIR("A")="submitted to the payer via the ECME package (Y/N)",DIR(0)="Y",DIR("B")="NO" D ^DIR
"RTN","IBCC",93,0)
 . I Y=0 W !!,"<PLEASE SUBMIT A REVERSAL USING THE APPROPRIATE OPTION IN THE ECME PACKAGE>",$C(7)
"RTN","IBCC",94,0)
 ;
"RTN","IBCC",95,0)
CHK ;
"RTN","IBCC",96,0)
 ; if user came from CLON, make sure they know about the new CRD option
"RTN","IBCC",97,0)
 I $G(IBCNCOPY)=1 D
"RTN","IBCC",98,0)
 .W !!,*7,"Warning: This option should NOT be used to correct Rejected/Denied claims. It"
"RTN","IBCC",99,0)
 .W !,"should ONLY be used to correct DENIED claims which have payments posted against"
"RTN","IBCC",100,0)
 .W !,"them and claims with certain Billing Rate Types (Example: TRICARE)."
"RTN","IBCC",101,0)
 ;
"RTN","IBCC",102,0)
 S (IBCCCC,IBQUIT)=0 I '$G(IBCEAUTO),'$G(IBMCSCAN) W !!,"ARE YOU SURE YOU WANT TO CANCEL THIS BILL" S %=2 D YN^DICN G:%=0 HELP I %'=1 S IBQUIT=1 G NO
"RTN","IBCC",103,0)
 ;
"RTN","IBCC",104,0)
 I '$G(IBCEAUTO) W !!,"LAST CHANCE TO CHANGE YOUR MIND..."
"RTN","IBCC",105,0)
 S DIE=399,DA=IBIFN,DIE("NO^")=""
"RTN","IBCC",106,0)
 S DR="16;S:'X Y=0;19;S IBCCCC=1;"
"RTN","IBCC",107,0)
 I $G(IBCEAUTO) S DR="16////1;19////EDI/MRA TURNED OFF;S IBCCCC=1;"
"RTN","IBCC",108,0)
 ;
"RTN","IBCC",109,0)
 ; esg - 8/23/06 - IB*2*358 - fix semi-colon in free text field
"RTN","IBCC",110,0)
 I $G(IBMCSRSC)'="" S DR="16;S:'X Y=0;19//^S X=IBMCSRSC;S IBCCCC=1;"
"RTN","IBCC",111,0)
 D ^DIE K DIE,DR
"RTN","IBCC",112,0)
 ;
"RTN","IBCC",113,0)
NO I 'IBCCCC W !!,"<NO ACTION TAKEN>",*7 S IBQUIT=1 G ASK:IBCAN<2,Q
"RTN","IBCC",114,0)
 S IBCCR=$P($G(^DGCR(399,IBIFN,"S")),U,19)
"RTN","IBCC",115,0)
 ; update claim # with new iteration
"RTN","IBCC",116,0)
 D:$G(IBCNCRD)=1 CRD
"RTN","IBCC",117,0)
 W !!,"...Bill has been cancelled..." D BULL^IBCBULL,BSTAT^IBCDC(IBIFN),PRIOR^IBCCC2(IBIFN)
"RTN","IBCC",118,0)
 ;
"RTN","IBCC",119,0)
 ; cancelling in ingenix claimsmanager if ingenix is running
"RTN","IBCC",120,0)
 ; clean-up of variables is OK if not coming in from ListMan screen
"RTN","IBCC",121,0)
 I $$CM^IBCIUT1(IBIFN) S IBCISNT=4 D ST2^IBCIST I '$G(IBCICNCL) K IBCISNT,IBCISTAT,IBCIREDT,IBCIERR
"RTN","IBCC",122,0)
 ;
"RTN","IBCC",123,0)
 S IBEDI=$G(IB364)
"RTN","IBCC",124,0)
 I 'IBEDI S IBEDI=+$$LAST364^IBCEF4(IBIFN)
"RTN","IBCC",125,0)
 I IBEDI D UPDEDI^IBCEM(IBEDI,"C") ;Update EDI files, if needed
"RTN","IBCC",126,0)
 ;
"RTN","IBCC",127,0)
 F I="S","U1" S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCC",128,0)
 S PRCASV("ARREC")=IBIFN,PRCASV("AMT")=$S(IB("U1")']"":0,1:$P(IB("U1"),"^")),PRCASV("DATE")=$P(IB("S"),"^",17),PRCASV("BY")=$P(IB("S"),"^",18)
"RTN","IBCC",129,0)
 S PRCASV("COMMENT")=$S($P(IB("S"),U,19)]"":$P(IB("S"),U,19),$P(^IBE(350.9,1,2),"^",7)]"":$P(^(2),"^",7),1:"BILL CANCELLED IN MAS")
"RTN","IBCC",130,0)
 S PRCASV("BY")=$S($P(IB("S"),U,18)]"":$P(IB("S"),U,18),1:"")
"RTN","IBCC",131,0)
 ; IA#3374/IB*2.0*433 Pass the CRD flag so FMS knows to send a cancel record before the new E record is sent
"RTN","IBCC",132,0)
 ;S X=$$CANCEL^RCBEIB($G(PRCASV("ARREC")),$G(PRCASV("DATE")),$G(PRCASV("BY")),$G(PRCASV("AMT")),$G(PRCASV("COMMENT")))
"RTN","IBCC",133,0)
 S PRCASV("ARCRD")=$G(IBCNCRD)
"RTN","IBCC",134,0)
 S X=$$CANCEL^RCBEIB($G(PRCASV("ARREC")),$G(PRCASV("DATE")),$G(PRCASV("BY")),$G(PRCASV("AMT")),$G(PRCASV("COMMENT")),$G(PRCASV("ARCRD")))
"RTN","IBCC",135,0)
 W !,$S(X:">> The receivable associated with the claim was cancelled.",1:">> The receivable associated with the claim was not cancelled.")
"RTN","IBCC",136,0)
 I $P(X,U,2)]"" W !,">>> ",$P(X,U,2) ; The reason why the claim can not be cancelled.
"RTN","IBCC",137,0)
 I IBCAN<2 D RNB^IBCC1 ;assign a reason not billable
"RTN","IBCC",138,0)
 G ASK:IBCAN<2,Q
"RTN","IBCC",139,0)
 ;
"RTN","IBCC",140,0)
HELP W !,?3,"Answer 'YES' or 'Y' if you wish to cancel this bill.",!,?3,"Answer 'NO' or 'N' if you want to abort." G CHK
"RTN","IBCC",141,0)
 Q
"RTN","IBCC",142,0)
1 I $P(IB(0),U,13)=1 W !,"This record was re-opened on " S Y=$P(IB(0),U,14) X ^DD("DD") W Y,"." G CHK
"RTN","IBCC",143,0)
 G ASK
"RTN","IBCC",144,0)
Q1 K:IBCAN=1 IBQUIT K IBCAN
"RTN","IBCC",145,0)
Q K %,IBEPAR,IBSTAT,IBARST,IBAC1,IB,DFN,IBX,IBZ,DIC,DIE,DR,PRCASV,PRCASVC,X,Y,IBEDI
"RTN","IBCC",146,0)
 ;***
"RTN","IBCC",147,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBCC" D T1^%ZOSV ;stop rt clock
"RTN","IBCC",148,0)
 Q
"RTN","IBCC",149,0)
CRD ; entry to point to add iteration # to claim
"RTN","IBCC",150,0)
 N IBFDA
"RTN","IBCC",151,0)
 S IBITN=$$ITN^IBCCC(IBIFN)
"RTN","IBCC",152,0)
 S IBFDA(399,IBIFN_",",.01)=IBITN
"RTN","IBCC",153,0)
 D FILE^DIE("","IBFDA")
"RTN","IBCC",154,0)
 ; this will re-open the claim, so reset to cancelled
"RTN","IBCC",155,0)
 S DIE=399,DA=IBIFN
"RTN","IBCC",156,0)
 S DR="16////1"
"RTN","IBCC",157,0)
 D ^DIE K DIE,DR
"RTN","IBCC",158,0)
 Q
"RTN","IBCC",159,0)
 ;
"RTN","IBCC",160,0)
PROCESS(IBIFN,IBCAN) ;
"RTN","IBCC",161,0)
 ; Entry point when the bill number is already known.  Use this when
"RTN","IBCC",162,0)
 ; you just want to try to cancel this bill and this bill only.
"RTN","IBCC",163,0)
 ; Input:
"RTN","IBCC",164,0)
 ;   IBIFN - Internal bill# (Required)
"RTN","IBCC",165,0)
 ;   IBCAN - Cancel Flag (optional, defaults to 1 if not included)
"RTN","IBCC",166,0)
 ;
"RTN","IBCC",167,0)
 NEW IBNOASK
"RTN","IBCC",168,0)
 S IBNOASK=1
"RTN","IBCC",169,0)
 S IBCAN=$G(IBCAN,1)
"RTN","IBCC",170,0)
 G ASK
"RTN","IBCC",171,0)
 ;
"RTN","IBCC",172,0)
 ;IBCC
"RTN","IBCCC")
0^1^B19833336^B14623718
"RTN","IBCCC",1,0)
IBCCC ;ALB/AAS - CANCEL AND CLONE A BILL ;25-JAN-90
"RTN","IBCCC",2,0)
 ;;2.0;INTEGRATED BILLING;**80,109,106,51,320,433**;21-MAR-94;Build 36
"RTN","IBCCC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCCC",4,0)
 ;
"RTN","IBCCC",5,0)
 ;MAP TO DGCRCC
"RTN","IBCCC",6,0)
 ;
"RTN","IBCCC",7,0)
 ;STEP 1 - cancel bill
"RTN","IBCCC",8,0)
 ;STEP 1.5 - entry to clone previously cancelled bill.  (must be cancel)
"RTN","IBCCC",9,0)
 ;STEP 2 - build array of IBIDS call screen that asks ok
"RTN","IBCCC",10,0)
 ;STEP 3 - pass stub entry to ar
"RTN","IBCCC",11,0)
 ;STEP 4 - store stub data in MCCR then x-ref
"RTN","IBCCC",12,0)
 ;STEP 4.5 - store claim clone info on "S1" node.
"RTN","IBCCC",13,0)
 ;STEP 5 - get remainder of data to move and store in MCCR then x-ref
"RTN","IBCCC",14,0)
 ;STEP 6 - go to screens, come out to IBB1 
"RTN","IBCCC",15,0)
EN ;
"RTN","IBCCC",16,0)
 N IBBCF,IBBCT,IBBCB,IBCCR,IBDBC,IBCNCOPY
"RTN","IBCCC",17,0)
 S IBDBC=DT    ;date claim was cloned
"RTN","IBCCC",18,0)
 S IBBCB=DUZ   ;user-id of person cloning the claim.
"RTN","IBCCC",19,0)
 S IBCNCOPY=1 ; flag indicating this function is entered as the copy/cancel option
"RTN","IBCCC",20,0)
 ;
"RTN","IBCCC",21,0)
STEP1 I $G(IBCE("EDI"))>1 G END1
"RTN","IBCCC",22,0)
 S IBCAN=2,IBQUIT=0,IBAC=6,IBU="UNSPECIFIED"
"RTN","IBCCC",23,0)
 I '$G(IBCE("EDI")) D ASK^IBCC
"RTN","IBCCC",24,0)
 I $G(IBCE("EDI"))=1 S IB364="" D NOPTF^IBCC
"RTN","IBCCC",25,0)
 G:IBQUIT END1
"RTN","IBCCC",26,0)
 I 'IBCCCC!('$D(IBIFN)) G STEP1:'$G(IBCE("EDI")),END1
"RTN","IBCCC",27,0)
 I $G(IBCE("EDI")) S IBCE("EDI")=2
"RTN","IBCCC",28,0)
EN1 ;
"RTN","IBCCC",29,0)
STEP1P5 I '$D(IBIFN) S IBCAN=2,IBQUIT=0,IBAC=6 W !,"Copy Previously Cancelled Bill.",!! S DIC="^DGCR(399,",DIC("S")="I $P(^(0),U,13)=7",DIC(0)="AEMQZ",DIC("A")="Enter BILL NUMBER or Patient NAME: " D ^DIC G:Y<1 END S IBIFN=+Y
"RTN","IBCCC",30,0)
 ;
"RTN","IBCCC",31,0)
 S IBBCF=IBIFN    ;this is the claim we are copying FROM
"RTN","IBCCC",32,0)
 S IBIDS(.15)=IBIFN K IBIFN
"RTN","IBCCC",33,0)
STEP2 S IBND0=^DGCR(399,IBIDS(.15),0) I $D(^("U")) S IBNDU=^("U")
"RTN","IBCCC",34,0)
 ; *** Note - all these fields should also be included in WHERE^IBCCC1
"RTN","IBCCC",35,0)
 F I=2:1:12 S:$P(IBND0,"^",I)]"" IBIDS(I/100)=$P(IBND0,"^",I)
"RTN","IBCCC",36,0)
 F I=16:1:19,21:1:27 S:$P(IBND0,"^",I)]"" IBIDS(I/100)=$P(IBND0,"^",I)
"RTN","IBCCC",37,0)
 F I=151,152,155 S IBIDS(I)=$P(IBNDU,"^",(I-150))
"RTN","IBCCC",38,0)
 S IBIDS(159.5)=$P(IBNDU,U,20)
"RTN","IBCCC",39,0)
 ; ***
"RTN","IBCCC",40,0)
 D HOME^%ZIS
"RTN","IBCCC",41,0)
 S DFN=IBIDS(.02) D DEM^VADPT
"RTN","IBCCC",42,0)
 I +$G(IBCTCOPY)!$G(IBCE("EDI")) G STEP3
"RTN","IBCCC",43,0)
 D ^IBCA1
"RTN","IBCCC",44,0)
ASK S IBYN=0 W !!,"IS THE ABOVE INFORMATION CORRECT AS SHOWN" S %=1 D YN^DICN G END:%=2,STEP3:%=1 I % G END
"RTN","IBCCC",45,0)
 W !!?4,"YES - If this information is correct as shown and you wish to file the bill.",!?4,"NO  - If you wish to change this information prior to filing."
"RTN","IBCCC",46,0)
 W !?4,"'^' - Enter the up-arrow character to DELETE this Bill at this time." G ASK
"RTN","IBCCC",47,0)
 ;
"RTN","IBCCC",48,0)
STEP3 ;
"RTN","IBCCC",49,0)
 S PRCASV("SER")=$P($G(^IBE(350.9,1,1)),"^",14)
"RTN","IBCCC",50,0)
 S PRCASV("SITE")=$P($$SITE^VASITE,"^",3),IBNWBL="",PRCASV("ARCRD")=$G(IBCNCRD)
"RTN","IBCCC",51,0)
 ; IA#386 & 1992  If user came from CRD option, need to pass old bill # and claim ien, as well as new iteration number
"RTN","IBCCC",52,0)
 I $G(IBCNCRD)=1 S PRCASV("ARREC")=IBBCF,PRCASV("ARBIL")=PRCASV("SITE")_"-"_$P(IBITN,"-"),PRCASV("ARITN")=PRCASV("SITE")_"-"_IBITN
"RTN","IBCCC",53,0)
 W !,"Passing bill to Accounts Receivable Module..." D SETUP^PRCASVC3 I $S($P(PRCASV("ARREC"),"^")=-1:1,$P(PRCASV("ARBIL"),"^")=-1:1,1:0) W *7,"  ",$P(PRCASV("ARREC"),"^",2),$P(PRCASV("ARBIL"),"^",2) G END
"RTN","IBCCC",54,0)
 S IBIDS(.01)=$P(PRCASV("ARBIL"),"-",2),IBIDS(.17)=$S($D(IBIDS(.17)):IBIDS(.17),1:PRCASV("ARREC"))
"RTN","IBCCC",55,0)
 I '$G(IBCE("EDI")) W !,"Billing Record #",IBIDS(.01)," being established for '",VADM(1),"'..." S IBIDS(.02)=DFN,IBHV("IBIFN")=$S($G(IBIFN):IBIFN,1:$G(IBIDS(.15)))
"RTN","IBCCC",56,0)
 G ^IBCCC1 ;go to step4
"RTN","IBCCC",57,0)
 Q
"RTN","IBCCC",58,0)
 ;
"RTN","IBCCC",59,0)
END W !!,"No Billing Record Set up.  You must manually enter the bill."
"RTN","IBCCC",60,0)
END1 K %,%DT,IBCAN,IBAC,IBND0,IBNDU,IBYN,IBCCCC,IBIFN,IB,IBA,IBNWBL,IBBT,IBIDS,IBU,I,J,VA,VADM,X,X1,X2,X3,X4,D,Y
"RTN","IBCCC",61,0)
 ;I '$G(IBQUIT),$S(+$G(IBCNCOPY):1,1:'$G(IBCE("EDI"))) G STEP1
"RTN","IBCCC",62,0)
 I '$G(IBQUIT),$S(+$G(IBCNCOPY)!(+$G(IBCNCRD)):1,1:'$G(IBCE("EDI"))) G STEP1
"RTN","IBCCC",63,0)
 K IBQUIT,IBCNCOPY,IBCNCRD
"RTN","IBCCC",64,0)
 Q
"RTN","IBCCC",65,0)
 ;
"RTN","IBCCC",66,0)
ITN(IBX) ; determine iteration # for rejected or denied claim
"RTN","IBCCC",67,0)
 N IBCF,IBCL
"RTN","IBCCC",68,0)
 S IBCF=$P($G(^DGCR(399,IBX,"S1")),U,2)
"RTN","IBCCC",69,0)
 ; if this claim has never been cloned, iteration # is -01
"RTN","IBCCC",70,0)
 Q:IBCF="" $P($G(^DGCR(399,IBX,0)),U)_"-01"
"RTN","IBCCC",71,0)
 S IBCL=$P($G(^DGCR(399,IBCF,0)),U)
"RTN","IBCCC",72,0)
 ; if claim was a CLON 1st and now a CORRECT, this is the 1st iteration
"RTN","IBCCC",73,0)
 I $P(IBCL,"-")'=$P($P($G(^DGCR(399,IBX,0)),U),"-") Q $P($G(^DGCR(399,IBX,0)),U)_"-01"
"RTN","IBCCC",74,0)
 ; to determine iteration#, need to incriment from claim that was cloned from
"RTN","IBCCC",75,0)
 S IBITN=$P(IBCL,"-",2),IBITN=IBITN+1 I $L(IBITN)=1 S IBITN="0"_IBITN
"RTN","IBCCC",76,0)
 Q $P(IBCL,"-")_"-"_IBITN
"RTN","IBCCC",77,0)
 ;
"RTN","IBCCC",78,0)
CRD ; new entry point if user comes from CRD option instead of CLON  
"RTN","IBCCC",79,0)
 N IBBCF,IBBCT,IBBCB,IBCCR,IBDBC,IBCNCRD,IBITN
"RTN","IBCCC",80,0)
 S IBDBC=DT    ;date claim was cloned
"RTN","IBCCC",81,0)
 S IBBCB=DUZ   ;user-id of person cloning the claim.
"RTN","IBCCC",82,0)
 S IBCNCRD=1 ; flag indicating this function is entered as the CRD option
"RTN","IBCCC",83,0)
 G STEP1
"RTN","IBCCC",84,0)
 Q
"RTN","IBCCC",85,0)
 ;
"RTN","IBCCC1")
0^3^B10538987^B9524084
"RTN","IBCCC1",1,0)
IBCCC1 ;ALB/AAS - CANCEL AND CLONE A BILL - CONTINUED ;25-JAN-90
"RTN","IBCCC1",2,0)
 ;;2.0;INTEGRATED BILLING;**80,109,106,51,320,358,433**;21-MAR-94;Build 36
"RTN","IBCCC1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCCC1",4,0)
 ;
"RTN","IBCCC1",5,0)
 ;MAP TO DGCRCC1
"RTN","IBCCC1",6,0)
 ;
"RTN","IBCCC1",7,0)
 ;STEP 1 - cancel bill
"RTN","IBCCC1",8,0)
 ;STEP 1.5 - entry to clone previously cancelled bill.  (must be cancell)
"RTN","IBCCC1",9,0)
 ;STEP 2 - build array of IBIDS call screen that asks ok
"RTN","IBCCC1",10,0)
 ;STEP 3 - pass stub entry to ar
"RTN","IBCCC1",11,0)
 ;STEP 4 - store stub data in MCCR then x-ref
"RTN","IBCCC1",12,0)
 ;STEP 4.5 - store claim clone info on "S1" node.
"RTN","IBCCC1",13,0)
 ;STEP 5 - get remainder of data to move and store in MCCR then x-ref
"RTN","IBCCC1",14,0)
 ;STEP 6 - go to screens, come out to IBB1 or something like that
"RTN","IBCCC1",15,0)
 ;
"RTN","IBCCC1",16,0)
STEP4 S X=$P($T(WHERE),";;",2) F I=0:0 S I=$O(IBIDS(I)) Q:'I  S X1=$P($E(X,$F(X,I)+1,999),";",1),$P(IBDR($P(X1,"^",1)),"^",$P(X1,"^",2))=IBIDS(I)
"RTN","IBCCC1",17,0)
 S IBIFN=PRCASV("ARREC") F I=0,"C","M","M1","S","U","U1" I $D(IBDR(I)) S ^DGCR(399,IBIFN,I)=IBDR(I)
"RTN","IBCCC1",18,0)
 D  ; Protect variables;index entry;replace FT if copy/clone and it chngs
"RTN","IBCCC1",19,0)
 . N IBHOLD,DIE,DR,DA,X,Y
"RTN","IBCCC1",20,0)
 . S IBHOLD("FT")=$P($G(^DGCR(399,IBIFN,0)),U,19)
"RTN","IBCCC1",21,0)
 . S $P(^DGCR(399,0),"^",3)=IBIFN,$P(^(0),"^",4)=$P(^(0),"^",4)+1 W !,"Cross-referencing new billing entry..." D INDEX^IBCCC2
"RTN","IBCCC1",22,0)
 .; I $G(IBCNCOPY),IBHOLD("FT"),IBHOLD("FT")'=$P($G(^DGCR(399,IBIFN,0)),U,19) S DA=IBIFN,DIE="^DGCR(399,",DR=".19////"_IBHOLD("FT") D ^DIE
"RTN","IBCCC1",23,0)
 . I $G(IBCNCOPY)!$G(IBCNCRD),IBHOLD("FT"),IBHOLD("FT")'=$P($G(^DGCR(399,IBIFN,0)),U,19) S DA=IBIFN,DIE="^DGCR(399,",DR=".19////"_IBHOLD("FT") D ^DIE
"RTN","IBCCC1",24,0)
 S IBYN=1 W !!,*7,"Billing Record #",$P(^DGCR(399,+IBIFN,0),"^",1)," established for '",VADM(1),"'..."
"RTN","IBCCC1",25,0)
 S:$G(IBCE("EDI")) IBCE("EDI","NEW")=IBIFN
"RTN","IBCCC1",26,0)
 I $G(IBCE("EDI"))!($G(IBCTCOPY)=1) S IBHV("IBIFN1")=IBIFN ; New bill #
"RTN","IBCCC1",27,0)
 S IBBCT=IBIFN   ;bill the old claim was cloned TO.
"RTN","IBCCC1",28,0)
END K %,%DT,IB,IBA,IBNWBL,IBBT,IBIDS,I,J,VADM,X,X1,X2,X3,X4,Y
"RTN","IBCCC1",29,0)
 ;
"RTN","IBCCC1",30,0)
STEP4P5 ;added in patch 320
"RTN","IBCCC1",31,0)
 ;first, put the TO data on the FROM bill
"RTN","IBCCC1",32,0)
 ; Skip if not a CLON or CRD claim
"RTN","IBCCC1",33,0)
 ;
"RTN","IBCCC1",34,0)
 I '$G(IBCNCOPY)&('$G(IBCNCRD)) G STEP45X
"RTN","IBCCC1",35,0)
 S DIE="^DGCR(399,",DA=IBBCF,DR="29////"_$G(IBBCT) D ^DIE
"RTN","IBCCC1",36,0)
 S DIE="^DGCR(399,",DA=IBBCF,DR="31////"_$G(IBDBC) D ^DIE
"RTN","IBCCC1",37,0)
 S DIE="^DGCR(399,",DA=IBBCF,DR="32////"_$G(IBBCB) D ^DIE
"RTN","IBCCC1",38,0)
 ;
"RTN","IBCCC1",39,0)
 ; esg - 8/23/06 - IB*2*358 - fix semi-colon in free text field
"RTN","IBCCC1",40,0)
 S DIE="^DGCR(399,",DA=IBBCF,DR="33////^S X=$G(IBCCR)" D ^DIE
"RTN","IBCCC1",41,0)
 ;
"RTN","IBCCC1",42,0)
 ;now, put the FROM data on the TO bill
"RTN","IBCCC1",43,0)
 ;
"RTN","IBCCC1",44,0)
 S DIE="^DGCR(399,",DA=IBBCT,DR="30////"_$G(IBBCF) D ^DIE
"RTN","IBCCC1",45,0)
 ;
"RTN","IBCCC1",46,0)
STEP45X G ^IBCCC2 ;go to step 5
"RTN","IBCCC1",47,0)
 ;
"RTN","IBCCC1",48,0)
XREF F IBI1=0:0 S IBI1=$O(^DD(399,IBI,1,IBI1)) Q:'IBI1  I $D(^DD(399,IBI,1,IBI1,1)) S DA=IBIFN,X=IBIDS(IBI) I X]"" X ^DD(399,IBI,1,IBI1,1)
"RTN","IBCCC1",49,0)
 Q
"RTN","IBCCC1",50,0)
 ;
"RTN","IBCCC1",51,0)
WHERE ;;.01^0^1;.02^0^2;.03^0^3;.04^0^4;.05^0^5;.06^0^6;.07^0^7;.08^0^8;.09^0^9;.11^0^11;.12^0^12;.17^0^17;.18^0^18;.19^0^19;.15^0^15;.16^0^16;.21^0^21;.22^0^22;.23^0^23;.24^0^24;.25^0^25;.26^0^26;.27^0^27;151^U^1;152^U^2;155^U^5;159.5^U^20;
"RTN","IBCCC1",52,0)
 ;
"RTN","IBCCC2")
0^4^B69917469^B68853950
"RTN","IBCCC2",1,0)
IBCCC2 ;ALB/AAS - CANCEL AND CLONE A BILL - CONTINUED ;6/6/03 9:56am
"RTN","IBCCC2",2,0)
 ;;2.0;INTEGRATED BILLING;**80,106,124,138,51,151,137,161,182,211,245,155,296,320,348,349,371,400,433**;21-MAR-94;Build 36
"RTN","IBCCC2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCCC2",4,0)
 ;
"RTN","IBCCC2",5,0)
 ;MAP TO DGCRCC2
"RTN","IBCCC2",6,0)
 ;
"RTN","IBCCC2",7,0)
 ;STEP 5 - get remainder of data to move and store in MCCR then x-ref
"RTN","IBCCC2",8,0)
 ;STEP 6 - go to screens, come out to IBB1 or something like that
"RTN","IBCCC2",9,0)
 ;
"RTN","IBCCC2",10,0)
STEP5 S IBIFN1=$P(^DGCR(399,IBIFN,0),"^",15) G END:$S(IBIFN1="":1,'$D(^DGCR(399,IBIFN1,0)):1,1:0)
"RTN","IBCCC2",11,0)
 ;
"RTN","IBCCC2",12,0)
 ;move pure data nodes
"RTN","IBCCC2",13,0)
 F I="I1","I2","I3","M1" I $D(^DGCR(399,IBIFN1,I)) S ^DGCR(399,IBIFN,I)=^DGCR(399,IBIFN1,I)
"RTN","IBCCC2",14,0)
 ;
"RTN","IBCCC2",15,0)
 ;move top level data node. ;Do not move 'TX' node
"RTN","IBCCC2",16,0)
 F I="U","U1","U2","U3","UF2","UF3","UF31","C","M" I $D(^DGCR(399,IBIFN1,I)) S IBND(I)=^(I) D @I
"RTN","IBCCC2",17,0)
 ;
"RTN","IBCCC2",18,0)
 ;move multiple level data
"RTN","IBCCC2",19,0)
 F I="CC","OC","OP","OT","RC","CP","CV","PRV" I $D(^DGCR(399,IBIFN1,I,0)) D @I
"RTN","IBCCC2",20,0)
 ;
"RTN","IBCCC2",21,0)
 D FTPRV^IBCEU5(IBIFN) ; Ask change prov type if form type not the same
"RTN","IBCCC2",22,0)
 D COBCHG(IBIFN,,.IBCOB)
"RTN","IBCCC2",23,0)
 ;
"RTN","IBCCC2",24,0)
 D ^IBCCC3 ; copy table files (362.3)
"RTN","IBCCC2",25,0)
 ;
"RTN","IBCCC2",26,0)
 S I=$G(^DGCR(399,IBIFN1,0)) I $P(I,U,13)=7,$P(I,U,20)=1 D COPYB^IBCDC(IBIFN1,IBIFN) ; update auto bill files
"RTN","IBCCC2",27,0)
 D PRIOR(IBIFN) ; add new bill to previous bills in series, primary/secondary
"RTN","IBCCC2",28,0)
 I +$G(IBCTCOPY) N IBAUTO S IBAUTO=1 D PROC^IBCU7A(IBIFN),BILL^IBCRBC(IBIFN),CPTMOD26^IBCU73(IBIFN) D RECALL^DILFD(399,IBIFN_",",DUZ) G END
"RTN","IBCCC2",29,0)
 ;
"RTN","IBCCC2",30,0)
STEP6 N IBGOEND
"RTN","IBCCC2",31,0)
 ; need to kill CRD flag prior to going back into billing screen in case claim is copied for corresponding claim
"RTN","IBCCC2",32,0)
 K IBCNCRD
"RTN","IBCCC2",33,0)
 I '$G(IBCE("EDI"))!$G(IBCE("EDI","NEW")),'$G(IBCEAUTO) D IBSCEDT G END:$G(IBGOEND)
"RTN","IBCCC2",34,0)
 ;
"RTN","IBCCC2",35,0)
 ;
"RTN","IBCCC2",36,0)
END K DFN,IB,IBA,IBA2,IBAD,IBADD1,IBBNO,IBCAN,IBCCC,IBDA,IBDPT,IBDR,IBDT,IBI,IBI1,IBIDS,IBIFN,IBIFN1,IBND,IBQUIT,IBU,IBUN,IBARST,IBCOB,IBCNCOPY,IBCBCOPY,IBCNCRD,IBKEY
"RTN","IBCCC2",37,0)
 K IBV,IBV1,IBW,IBWW,IBYN,IBZZ,PRCASV,PRCAERCD,PRCAERR,PRCASVC,PRCAT,IBBT,IBCH,IBNDS,IBOA,IBREV,IBX,DGXRF1,VAEL,VAERR,IBAC,IBCCC,IBDD1,IBIN,DGREV,DGREV00,DGREVHDR,IBCHK
"RTN","IBCCC2",38,0)
 K IBBS,IBLS,DGPCM,IBIP,IBND0,IBNDU,IBO,IBPTF,IBST,IBUC,IBDD,D,%,%DT,DIC,VA,VADM,X,X1,X2,X3,X4,Y,I,J,K,DGRVRCAL,DDH,DGACTDT,DGAMNT,DGBR,DGBRN,DGBSI,DGBSLOS,IBA1,IBOD,IBINS,IBN,IBPROC,DGFUNC,DGIFN
"RTN","IBCCC2",39,0)
 Q
"RTN","IBCCC2",40,0)
 ;
"RTN","IBCCC2",41,0)
 ;
"RTN","IBCCC2",42,0)
IBSCEDT ; call the IB bill edit screens and validate the data
"RTN","IBCCC2",43,0)
 N IBV,IBPAR,IBAC,IBHV,IBH,IBCIREDT
"RTN","IBCCC2",44,0)
 D RECALL^DILFD(399,IBIFN_",",DUZ)
"RTN","IBCCC2",45,0)
ST1 S IBV=0 D ^IBCSCU,^IBCSC1 I $G(IBPOPOUT) S IBGOEND=1 G IBSCX
"RTN","IBCCC2",46,0)
 S IBAC=1
"RTN","IBCCC2",47,0)
 D ^IBCB1
"RTN","IBCCC2",48,0)
 I $G(IBCIREDT) G ST1
"RTN","IBCCC2",49,0)
IBSCX ;
"RTN","IBCCC2",50,0)
 Q
"RTN","IBCCC2",51,0)
 ;
"RTN","IBCCC2",52,0)
 ;
"RTN","IBCCC2",53,0)
U F J=3,4,6:1:17,20 I $P(IBND("U"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U"),"^",J)=$P(IBND("U"),"^",J)
"RTN","IBCCC2",54,0)
 Q
"RTN","IBCCC2",55,0)
U1 F J=1:1:3,15 I $P(IBND("U1"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U1"),"^",J)=$P(IBND("U1"),"^",J)
"RTN","IBCCC2",56,0)
 Q
"RTN","IBCCC2",57,0)
U2 F J=1:1:19 I $P(IBND("U2"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U2"),"^",J)=$P(IBND("U2"),"^",J)
"RTN","IBCCC2",58,0)
 Q
"RTN","IBCCC2",59,0)
U3 F J=1:1:11 I $P(IBND("U3"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U3"),"^",J)=$P(IBND("U3"),"^",J)
"RTN","IBCCC2",60,0)
 Q
"RTN","IBCCC2",61,0)
UF2 F J=1,3 I $P(IBND("UF2"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF2"),"^",J)=$P(IBND("UF2"),"^",J)
"RTN","IBCCC2",62,0)
 Q
"RTN","IBCCC2",63,0)
UF3 F J=4:1:6 I $P(IBND("UF3"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF3"),"^",J)=$P(IBND("UF3"),"^",J)
"RTN","IBCCC2",64,0)
 Q
"RTN","IBCCC2",65,0)
UF31 F J=3 I $P(IBND("UF31"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF31"),"^",J)=$P(IBND("UF31"),"^",J)
"RTN","IBCCC2",66,0)
 Q
"RTN","IBCCC2",67,0)
C F J=10 I $P(IBND("C"),"^",J)]"" S $P(^DGCR(399,IBIFN,"C"),"^",J)=$P(IBND("C"),"^",J)
"RTN","IBCCC2",68,0)
 I '$D(^DGCR(399,IBIFN1,"CP")) D CP1
"RTN","IBCCC2",69,0)
 Q
"RTN","IBCCC2",70,0)
M F J=1:1:9,11:1:14 I $P(IBND("M"),"^",J)]"" S $P(^DGCR(399,IBIFN,"M"),"^",J)=$P(IBND("M"),"^",J)
"RTN","IBCCC2",71,0)
 Q
"RTN","IBCCC2",72,0)
CC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",73,0)
 S IBDD=399.04 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",74,0)
OP S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",75,0)
 S IBDD=399.043 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",76,0)
 Q
"RTN","IBCCC2",77,0)
OC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",78,0)
 S IBDD=399.041 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",79,0)
 Q
"RTN","IBCCC2",80,0)
OT S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",81,0)
 S IBDD=399.048 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",82,0)
 Q
"RTN","IBCCC2",83,0)
CV ; Don't copy value codes from inpatient inst to inpatient prof bills
"RTN","IBCCC2",84,0)
 I $$FT^IBCEF(IBIFN1)'=2,$$FT^IBCEF(IBIFN)=2 Q
"RTN","IBCCC2",85,0)
 S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",86,0)
 S IBDD=399.047 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",87,0)
 Q
"RTN","IBCCC2",88,0)
RC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",89,0)
 S IBDD=399.042 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S IBND("RC")=^(0) F K=1:1:15 S $P(^DGCR(399,IBIFN,I,J,0),"^",K)=$P(IBND("RC"),"^",K),X=$P(IBND("RC"),"^",K)
"RTN","IBCCC2",90,0)
 Q
"RTN","IBCCC2",91,0)
CP S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",92,0)
 I +$G(IBNOCPT) Q
"RTN","IBCCC2",93,0)
 S IBDD=399.0304 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S IBND("CP")=^(0),IBND("CP-AUX")=$G(^("AUX")) D
"RTN","IBCCC2",94,0)
 . F K=1:1:7,9:1:14,16:1:22 S $P(^DGCR(399,IBIFN,I,J,0),"^",K)=$P(IBND("CP"),"^",K)
"RTN","IBCCC2",95,0)
 . ; esg - 11/2/06 - IB*2*348 - 50.09 field was added - AUX piece [9]
"RTN","IBCCC2",96,0)
 . I IBND("CP-AUX")'="" F K=1:1:9 S $P(^DGCR(399,IBIFN,I,J,"AUX"),"^",K)=$P(IBND("CP-AUX"),"^",K)
"RTN","IBCCC2",97,0)
 . I $D(^DGCR(399,IBIFN1,I,J,"MOD",0)) S ^DGCR(399,IBIFN,I,J,"MOD",0)=^DGCR(399,IBIFN1,I,J,"MOD",0) D
"RTN","IBCCC2",98,0)
 .. S K=0 F  S K=$O(^DGCR(399,IBIFN1,I,J,"MOD",K)) Q:'K  D
"RTN","IBCCC2",99,0)
 ... I $G(IBNOTC),$P($$MOD^ICPTMOD(+$P($G(^DGCR(399,IBIFN1,I,J,"MOD",K,0)),U,2),"I"),U,2)="TC" Q  ; Don't copy TC modifier from inst to prof bill
"RTN","IBCCC2",100,0)
 ... S ^DGCR(399,IBIFN,I,J,"MOD",K,0)=^DGCR(399,IBIFN1,I,J,"MOD",K,0)
"RTN","IBCCC2",101,0)
CP1 S IBCOD=$P($G(^DGCR(399,IBIFN,0)),"^",9) Q:IBCOD=""!('$D(^DGCR(399,IBIFN1,"C")))
"RTN","IBCCC2",102,0)
 I IBCOD=9 F DGI=4,5,6 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICD0(",DGPROCDT=$P(^("C"),"^",DGI+7) D FILE
"RTN","IBCCC2",103,0)
 I IBCOD=4 F DGI=1,2,3 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICPT(",DGPROCDT=$P(^("C"),"^",DGI+10) D FILE
"RTN","IBCCC2",104,0)
 I IBCOD=5 F DGI=7,8,9 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICPT(",DGPROCDT=$P(^("C"),"^",DGI+4) D FILE
"RTN","IBCCC2",105,0)
 Q
"RTN","IBCCC2",106,0)
 ;
"RTN","IBCCC2",107,0)
PRV S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",108,0)
 N Z,Z0
"RTN","IBCCC2",109,0)
 S Z=$P($G(^DGCR(399,IBIFN,0)),U,19),Z0=$P($G(^DGCR(399,IBIFN1,0)),U,19)
"RTN","IBCCC2",110,0)
 S IBDD=399.0222 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) D
"RTN","IBCCC2",111,0)
 . S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",112,0)
 . I Z'=Z0,$S(X=3:Z0=3,X=4:Z0=2,1:0) S $P(^DGCR(399,IBIFN,I,J,0),U)=(Z0+1)
"RTN","IBCCC2",113,0)
 Q
"RTN","IBCCC2",114,0)
 ;
"RTN","IBCCC2",115,0)
COB S J=0 F  S J=$O(IBCOB(I,J)) Q:'J  S $P(^DGCR(399,IBIFN,I),U,J)=IBCOB(I,J)
"RTN","IBCCC2",116,0)
 Q
"RTN","IBCCC2",117,0)
 ;
"RTN","IBCCC2",118,0)
FILE N DIC,DIE,DR,DA,X,Y,DLAYGO,DD,DO
"RTN","IBCCC2",119,0)
 I '$D(^DGCR(399,IBIFN,"CP",0)) S DIC("P")=$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCCC2",120,0)
 S DIC(0)="L",DLAYGO=399,DA(1)=IBIFN,DIC="^DGCR(399,"_DA(1)_",""CP""," Q:X=""  D FILE^DICN K DO,DD Q:+Y<1  S DA=+Y
"RTN","IBCCC2",121,0)
 S DIE="^DGCR(399,"_DA(1)_",""CP"",",DR="1///"_DGPROCDT D ^DIE
"RTN","IBCCC2",122,0)
 K DGPROCDT
"RTN","IBCCC2",123,0)
 Q
"RTN","IBCCC2",124,0)
 ;
"RTN","IBCCC2",125,0)
INDEX ;index entire file (set logic)
"RTN","IBCCC2",126,0)
 S DIK="^DGCR(399,",DA=IBIFN D IX1^DIK K DA,DIK
"RTN","IBCCC2",127,0)
 Q
"RTN","IBCCC2",128,0)
 ;
"RTN","IBCCC2",129,0)
PRIOR(IBIFN) ; set Secondary/Tertiary Bill #s on prior bills, if the bill is cancelled remove it from prior bills
"RTN","IBCCC2",130,0)
 N IBSEQ,IBSEQN,IBM1,I,IBIFN1
"RTN","IBCCC2",131,0)
 S IBSEQ=$$COB^IBCEF(IBIFN)
"RTN","IBCCC2",132,0)
 S IBSEQN=$S(IBSEQ="S":6,IBSEQ="T":7,1:"") Q:'IBSEQN
"RTN","IBCCC2",133,0)
 ;
"RTN","IBCCC2",134,0)
 S IBM1=$G(^DGCR(399,IBIFN,"M1")) I +$P(^DGCR(399,IBIFN,0),U,13)=7 S IBIFN=""
"RTN","IBCCC2",135,0)
 F I=5,6 I I<IBSEQN  S IBIFN1=+$P(IBM1,U,I) I +IBIFN1,$D(^DGCR(399,+IBIFN1,0)) S $P(^DGCR(399,IBIFN1,"M1"),U,IBSEQN)=IBIFN
"RTN","IBCCC2",136,0)
 Q
"RTN","IBCCC2",137,0)
 ;
"RTN","IBCCC2",138,0)
COBCHG(IBIFN,IBINS,IBCOB) ; Make changes for a new COB payer for bill
"RTN","IBCCC2",139,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCCC2",140,0)
 ; IBINS = ien of bill's current insurance (optional)
"RTN","IBCCC2",141,0)
 ; IBCOB = array subscripted by node,piece of COB data field change
"RTN","IBCCC2",142,0)
 ;
"RTN","IBCCC2",143,0)
 N I,IBFRMTYP,IBTAXLST
"RTN","IBCCC2",144,0)
 ; Subtract the Prior Payments from the bill's Offset (these are re-added by triggers)
"RTN","IBCCC2",145,0)
 F I=4,5,6  S $P(^DGCR(399,IBIFN,"U1"),U,2)=$P($G(^DGCR(399,IBIFN,"U1")),U,2)-$P($G(^DGCR(399,IBIFN,"U2")),U,I)
"RTN","IBCCC2",146,0)
 ;
"RTN","IBCCC2",147,0)
 I $G(IBINS),$$MCRWNR^IBEFUNC(IBINS) D
"RTN","IBCCC2",148,0)
 . ;MCRWNR is current insurance ... move payer only
"RTN","IBCCC2",149,0)
 . N IBCOBN,IBX
"RTN","IBCCC2",150,0)
 . S IBCOBN=$$COBN^IBCEF(IBIFN)
"RTN","IBCCC2",151,0)
 . S IBCOB(0,21)=$P("S^T^",U,IBCOBN)
"RTN","IBCCC2",152,0)
 . S IBCOB("M1",IBCOBN+4)=IBIFN
"RTN","IBCCC2",153,0)
 . S IBCOB("TX",1)="",IBCOB("TX",2)=""
"RTN","IBCCC2",154,0)
 . S IBX=$$REQMRA^IBEFUNC(IBIFN)
"RTN","IBCCC2",155,0)
 . I IBX=0 S IBCOB("TX",5)=0                         ; MRA not needed
"RTN","IBCCC2",156,0)
 . I IBX["R" S IBCOB("TX",5)="A"                     ; MRA skipped
"RTN","IBCCC2",157,0)
 . I IBX=1,$$CHK^IBCEMU1(IBIFN) S IBCOB("TX",5)="C"  ; MRA on file
"RTN","IBCCC2",158,0)
 . I $G(IBPRCOB) S IBCOB("TX",5)="C"                 ; MRA being proc'd
"RTN","IBCCC2",159,0)
 . D PRIOR(IBIFN)
"RTN","IBCCC2",160,0)
 . Q
"RTN","IBCCC2",161,0)
 ;
"RTN","IBCCC2",162,0)
 ;reset fields for next Sequence Payer
"RTN","IBCCC2",163,0)
 F I=0,"M1","U2","TX" I $D(IBCOB(I)) D COB
"RTN","IBCCC2",164,0)
 ;
"RTN","IBCCC2",165,0)
 ; IB*2.0*211
"RTN","IBCCC2",166,0)
 ; save off Form Type
"RTN","IBCCC2",167,0)
 S IBFRMTYP=$P($G(^DGCR(399,IBIFN,0)),U,19)
"RTN","IBCCC2",168,0)
 ; Save off Taxonomies for providers.
"RTN","IBCCC2",169,0)
 S I=0 F  S I=$O(^DGCR(399,IBIFN,"PRV",I)) Q:'I  S IBTAXLST(I)=$P($G(^DGCR(399,IBIFN,"PRV",I,0)),U,15)
"RTN","IBCCC2",170,0)
 ;
"RTN","IBCCC2",171,0)
 ; fire xrefs set logic
"RTN","IBCCC2",172,0)
 D INDEX
"RTN","IBCCC2",173,0)
 ;
"RTN","IBCCC2",174,0)
 ; Restore Form Type if changed, but don't restore Form Type if
"RTN","IBCCC2",175,0)
 ;   creating CMS-1500 claim from CTCOPY1^IBCCCB
"RTN","IBCCC2",176,0)
 I $G(IBCTCOPY)'=1,IBFRMTYP'=$P($G(^DGCR(399,IBIFN,0)),U,19) N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR=".19////"_IBFRMTYP D ^DIE
"RTN","IBCCC2",177,0)
 ;
"RTN","IBCCC2",178,0)
 ; Restore Claim MRA Status field since triggers in fields 101 & 102
"RTN","IBCCC2",179,0)
 ;   will overwrite the correct value when processing the MRA/EOB.
"RTN","IBCCC2",180,0)
 ; If we're processing the MRA/EOB, then a valid MRA has been received.
"RTN","IBCCC2",181,0)
 I $G(IBPRCOB) N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR="24////C" D ^DIE
"RTN","IBCCC2",182,0)
 ;
"RTN","IBCCC2",183,0)
 ; Only if cloning, then restore Taxonomies in fields 243 and 244 and 252.
"RTN","IBCCC2",184,0)
 I '$G(IBINS),'$G(IBPRCOB) D
"RTN","IBCCC2",185,0)
 . S I=$P($G(IBND("U3")),U,2)
"RTN","IBCCC2",186,0)
 . I I'=$P($G(^DGCR(399,IBIFN,"U3")),U,2) D
"RTN","IBCCC2",187,0)
 .. N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR="243////"_$S(I'="":I,1:"@") D ^DIE
"RTN","IBCCC2",188,0)
 . ;
"RTN","IBCCC2",189,0)
 . S I=$P($G(IBND("U3")),U,3)
"RTN","IBCCC2",190,0)
 . I I'=$P($G(^DGCR(399,IBIFN,"U3")),U,3) D
"RTN","IBCCC2",191,0)
 .. N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR="244////"_$S(I'="":I,1:"@") D ^DIE
"RTN","IBCCC2",192,0)
 . ;
"RTN","IBCCC2",193,0)
 . S I=$P($G(IBND("U3")),U,11)
"RTN","IBCCC2",194,0)
 . I I'=$P($G(^DGCR(399,IBIFN,"U3")),U,11) D
"RTN","IBCCC2",195,0)
 .. N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR="252////"_$S(I'="":I,1:"@") D ^DIE
"RTN","IBCCC2",196,0)
 . Q
"RTN","IBCCC2",197,0)
 ;
"RTN","IBCCC2",198,0)
 ; Restore Taxonomies in field .15 in sub-file 399.0222.
"RTN","IBCCC2",199,0)
 S IBTAXLST=0 F  S IBTAXLST=$O(IBTAXLST(IBTAXLST)) Q:'IBTAXLST  D
"RTN","IBCCC2",200,0)
 . S I=IBTAXLST(IBTAXLST)
"RTN","IBCCC2",201,0)
 . I I=$P($G(^DGCR(399,IBIFN,"PRV",IBTAXLST,0)),U,15) Q  ; No change
"RTN","IBCCC2",202,0)
 . N DA,DIE,DR
"RTN","IBCCC2",203,0)
 . S DA(1)=IBIFN,DA=IBTAXLST
"RTN","IBCCC2",204,0)
 . S DIE="^DGCR(399,"_DA(1)_",""PRV"",",DR=".15////"_$S(I'="":I,1:"@")
"RTN","IBCCC2",205,0)
 . D ^DIE
"RTN","IBCCC2",206,0)
 . Q
"RTN","IBCCC2",207,0)
 ;
"RTN","IBCCC2",208,0)
 K IBCOB("TX")
"RTN","IBCCC2",209,0)
 Q
"RTN","IBCCC2",210,0)
 ;
"RTN","IBCECOB2")
0^6^B78530862^B72912246
"RTN","IBCECOB2",1,0)
IBCECOB2 ;ALB/CXW - IB COB MANAGEMENT SCREEN ;16-JUN-1999
"RTN","IBCECOB2",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155,433**;21-MAR-1994;Build 36
"RTN","IBCECOB2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCECOB2",4,0)
 ;
"RTN","IBCECOB2",5,0)
EDI ;history detail display
"RTN","IBCECOB2",6,0)
 N IBIFN,IBDA
"RTN","IBCECOB2",7,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",8,0)
 S IBDA=+$O(IBDA(0)),IBIFN=+$G(IBDA(IBDA))
"RTN","IBCECOB2",9,0)
 D EDI1(IBIFN)
"RTN","IBCECOB2",10,0)
 S VALMBCK="R"
"RTN","IBCECOB2",11,0)
 Q
"RTN","IBCECOB2",12,0)
 ;
"RTN","IBCECOB2",13,0)
EDI1(IBIFN) ;
"RTN","IBCECOB2",14,0)
 N DFN
"RTN","IBCECOB2",15,0)
 Q:'IBIFN
"RTN","IBCECOB2",16,0)
 S DFN=$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCECOB2",17,0)
 D EN^VALM("IBJT EDI STATUS")
"RTN","IBCECOB2",18,0)
 K:$D(IBFASTXT) IBFASTXT
"RTN","IBCECOB2",19,0)
 Q
"RTN","IBCECOB2",20,0)
 ;
"RTN","IBCECOB2",21,0)
EDI2(IBIFN) ;
"RTN","IBCECOB2",22,0)
 N DFN
"RTN","IBCECOB2",23,0)
 Q:'IBIFN
"RTN","IBCECOB2",24,0)
 S DFN=$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCECOB2",25,0)
 D EN^VALM("IBJT EDI STATUS ALONE")
"RTN","IBCECOB2",26,0)
 K:$D(IBFASTXT) IBFASTXT
"RTN","IBCECOB2",27,0)
 Q
"RTN","IBCECOB2",28,0)
 ;
"RTN","IBCECOB2",29,0)
CSA ;claims status awaiting resolution
"RTN","IBCECOB2",30,0)
 N IBDAX
"RTN","IBCECOB2",31,0)
 D EN^IBCECSA
"RTN","IBCECOB2",32,0)
 I $D(IBFASTXT) K IBFASTXT
"RTN","IBCECOB2",33,0)
 S VALMBCK="R"
"RTN","IBCECOB2",34,0)
 Q
"RTN","IBCECOB2",35,0)
 ;
"RTN","IBCECOB2",36,0)
RVEOB ;Review EOB
"RTN","IBCECOB2",37,0)
 D FULL^VALM1 W !
"RTN","IBCECOB2",38,0)
 N IBDA,IBIFN,IBCMT,IBSEL
"RTN","IBCECOB2",39,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",40,0)
 S IBSEL=+$O(IBDA(0))
"RTN","IBCECOB2",41,0)
 S IBDA=$G(IBDA(IBSEL))
"RTN","IBCECOB2",42,0)
 S IBIFN=$P(IBDA,U),IBDA=$P(IBDA,U,3)
"RTN","IBCECOB2",43,0)
 I 'IBIFN G VEOBQ
"RTN","IBCECOB2",44,0)
 S IBCMT=$G(^TMP("IBCECOB1",$J,IBSEL))
"RTN","IBCECOB2",45,0)
 I IBCMT'="" D EN^VALM("IBCEM MRA REVIEW")
"RTN","IBCECOB2",46,0)
VEOBQ K ^TMP("IBCECOC",$J)
"RTN","IBCECOB2",47,0)
 S VALMBCK="R"
"RTN","IBCECOB2",48,0)
 Q
"RTN","IBCECOB2",49,0)
 ;
"RTN","IBCECOB2",50,0)
TPJI ;Third Party joint Inquiry
"RTN","IBCECOB2",51,0)
 N IBDA,IBIFN
"RTN","IBCECOB2",52,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",53,0)
 S IBDA=+$O(IBDA(0)),IBIFN=+$G(IBDA(IBDA))
"RTN","IBCECOB2",54,0)
 I IBDA="" G TPJIQ
"RTN","IBCECOB2",55,0)
 D TPJI1(IBIFN)
"RTN","IBCECOB2",56,0)
TPJIQ S VALMBCK="R"
"RTN","IBCECOB2",57,0)
 Q
"RTN","IBCECOB2",58,0)
 ;
"RTN","IBCECOB2",59,0)
TPJI1(IBIFN) ;
"RTN","IBCECOB2",60,0)
 N DFN,IBNOTPJI
"RTN","IBCECOB2",61,0)
 Q:'IBIFN
"RTN","IBCECOB2",62,0)
 S DFN=$P($G(^DGCR(399,IBIFN,0)),U,2),IBNOTPJI=1
"RTN","IBCECOB2",63,0)
 D EN^VALM("IBJT CLAIM INFO")
"RTN","IBCECOB2",64,0)
 K:$D(IBFASTXT) IBFASTXT
"RTN","IBCECOB2",65,0)
 Q
"RTN","IBCECOB2",66,0)
 ;
"RTN","IBCECOB2",67,0)
PBILL ;Print bill
"RTN","IBCECOB2",68,0)
 N IBIFN,IBDA,IBRESUB
"RTN","IBCECOB2",69,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",70,0)
 S IBDA=$O(IBDA(0)),IBIFN=+$G(IBDA(+IBDA))
"RTN","IBCECOB2",71,0)
 I IBDA="" G PBOUT
"RTN","IBCECOB2",72,0)
 S IBRESUB=$$RESUB^IBCECSA4(IBIFN,1,"P")
"RTN","IBCECOB2",73,0)
 I IBRESUB'>0 W !,*7,"This is not a transmittable bill or review not needed" D PAUSE^VALM1 G PBOUT
"RTN","IBCECOB2",74,0)
 I IBRESUB=2 D  G PBOUT
"RTN","IBCECOB2",75,0)
 . N IB364
"RTN","IBCECOB2",76,0)
 . S IB364=+$P($G(IBDA(IBDA)),U,2)
"RTN","IBCECOB2",77,0)
 . D PRINT1^IBCEM03(IBIFN,.IBDA,IB364)
"RTN","IBCECOB2",78,0)
 D PBILL1(IBIFN)
"RTN","IBCECOB2",79,0)
PBOUT S VALMBCK="R"
"RTN","IBCECOB2",80,0)
 Q
"RTN","IBCECOB2",81,0)
 ;
"RTN","IBCECOB2",82,0)
PMRA ;Print MRA
"RTN","IBCECOB2",83,0)
 N IBIFN,IBDA
"RTN","IBCECOB2",84,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",85,0)
 S IBDA=$O(IBDA(0)),IBIFN=+$G(IBDA(+IBDA))
"RTN","IBCECOB2",86,0)
 G:'IBIFN PRMQ
"RTN","IBCECOB2",87,0)
 D MRA^IBCEMRAA(.IBIFN)
"RTN","IBCECOB2",88,0)
PRMQ S VALMBCK="R"
"RTN","IBCECOB2",89,0)
 Q
"RTN","IBCECOB2",90,0)
PBILL1(IBIFN) ;
"RTN","IBCECOB2",91,0)
 N IBAC1,IBAC,DFN
"RTN","IBCECOB2",92,0)
 Q:'IBIFN
"RTN","IBCECOB2",93,0)
 S DFN=$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCECOB2",94,0)
 S IBAC=4,IBAC1=1
"RTN","IBCECOB2",95,0)
 D 4^IBCB1
"RTN","IBCECOB2",96,0)
 D FULL^VALM1,PAUSE^VALM1
"RTN","IBCECOB2",97,0)
 Q
"RTN","IBCECOB2",98,0)
 ;
"RTN","IBCECOB2",99,0)
CANCEL ;Cancel bill
"RTN","IBCECOB2",100,0)
 ; IBDA(IBDA)=IBIFN^IB364^ien of 361.1^user selection seq^user name~duz#
"RTN","IBCECOB2",101,0)
 ;
"RTN","IBCECOB2",102,0)
 N IBIFN,IBDA,IB364,IBEOBIFN
"RTN","IBCECOB2",103,0)
 ;
"RTN","IBCECOB2",104,0)
 ; Check for security key
"RTN","IBCECOB2",105,0)
 I '$$KCHK^XUSRB("IB AUTHORIZE") D  G CANCELQ
"RTN","IBCECOB2",106,0)
 . D FULL^VALM1 S VALMBCK="R"
"RTN","IBCECOB2",107,0)
 . W !!?5,"You don't hold the proper security key to access this function."
"RTN","IBCECOB2",108,0)
 . W !?5,"The necessary key is IB AUTHORIZE.  Please see your manager."
"RTN","IBCECOB2",109,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",110,0)
 . Q
"RTN","IBCECOB2",111,0)
 ;
"RTN","IBCECOB2",112,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",113,0)
 S IBDA=$O(IBDA(0)),IBIFN=+$G(IBDA(+IBDA)),IB364=$P($G(IBDA(+IBDA)),U,2)
"RTN","IBCECOB2",114,0)
 S IBEOBIFN=$P($G(IBDA(+IBDA)),U,3)
"RTN","IBCECOB2",115,0)
 I IBDA D
"RTN","IBCECOB2",116,0)
 . I '$$LOCK^IBCEU0(361.1,IBEOBIFN) Q
"RTN","IBCECOB2",117,0)
 . D CANCEL^IBCEM3(.IBDA,IBIFN,IB364)
"RTN","IBCECOB2",118,0)
 . D UNLOCK^IBCEU0(361.1,IBEOBIFN)
"RTN","IBCECOB2",119,0)
 S VALMBCK="R"
"RTN","IBCECOB2",120,0)
 I $G(IBDA)'="" D BLD^IBCECOB1
"RTN","IBCECOB2",121,0)
CANCELQ Q
"RTN","IBCECOB2",122,0)
 ;
"RTN","IBCECOB2",123,0)
CRD ; Correct Rejected/Denied claim protocol action
"RTN","IBCECOB2",124,0)
 N IBCNCRD
"RTN","IBCECOB2",125,0)
 S IBCNCRD=1
"RTN","IBCECOB2",126,0)
CLONE ; 'Copy/cancel bill' protocol action
"RTN","IBCECOB2",127,0)
 N IBDA,IBQ,IBEOBIFN,IBKEY
"RTN","IBCECOB2",128,0)
 ;
"RTN","IBCECOB2",129,0)
 ; Check for security key
"RTN","IBCECOB2",130,0)
 ;I '$$KCHK^XUSRB("IB AUTHORIZE") D  G CLONEQ
"RTN","IBCECOB2",131,0)
 S IBKEY=$S($G(IBCNCRD)=1:"IB AUTHORIZE",1:"IB CLON")
"RTN","IBCECOB2",132,0)
 I '$$KCHK^XUSRB(IBKEY) D  G CLONEQ
"RTN","IBCECOB2",133,0)
 . D FULL^VALM1 S VALMBCK="R"
"RTN","IBCECOB2",134,0)
 . ;W !!?5,"You don't hold the proper security key to access this function."
"RTN","IBCECOB2",135,0)
 . ;W !?5,"The necessary key is IB AUTHORIZE.  Please see your manager."
"RTN","IBCECOB2",136,0)
 . W !!?5,"You must hold the "_IBKEY_" security key to access this function."
"RTN","IBCECOB2",137,0)
 . W !?5,"Please see your manager."
"RTN","IBCECOB2",138,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",139,0)
 . Q
"RTN","IBCECOB2",140,0)
 ;
"RTN","IBCECOB2",141,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",142,0)
 S IBDA=$O(IBDA(""))
"RTN","IBCECOB2",143,0)
 I IBDA="" G CLONEQ
"RTN","IBCECOB2",144,0)
 S IBEOBIFN=$P($G(IBDA(+IBDA)),U,3)
"RTN","IBCECOB2",145,0)
 I '$$LOCK^IBCEU0(361.1,IBEOBIFN) G CLONEQ
"RTN","IBCECOB2",146,0)
 D COPYCLON(+$G(IBDA(IBDA)),$P($G(IBDA(+IBDA)),U,2),.IBQ)
"RTN","IBCECOB2",147,0)
 D UNLOCK^IBCEU0(361.1,IBEOBIFN)
"RTN","IBCECOB2",148,0)
CLONEQ ;
"RTN","IBCECOB2",149,0)
 S VALMBCK="R"
"RTN","IBCECOB2",150,0)
 D:$G(IBQ)'="" BLD^IBCECOB1
"RTN","IBCECOB2",151,0)
 Q
"RTN","IBCECOB2",152,0)
 ;
"RTN","IBCECOB2",153,0)
COPYCLON(IBIFN,IB364,IBQ) ; Generic entry point for clone a bill from EDI processing
"RTN","IBCECOB2",154,0)
 ; IBIFN = original bill ien
"RTN","IBCECOB2",155,0)
 ; IB364 = the ien of the transmission bill entry in file 364
"RTN","IBCECOB2",156,0)
 ; IBQ = If bill is not cancelled, this is returned as null
"RTN","IBCECOB2",157,0)
 ;        - pass by reference -
"RTN","IBCECOB2",158,0)
 ;
"RTN","IBCECOB2",159,0)
 N IBQUIT,IBCCCC,IBHV,Y,IBCAN,IBCE,IBDA,IBCNCOPY
"RTN","IBCECOB2",160,0)
 ;I '$$CANCKS^IBCEM3("CC",IBIFN) S IBQ="" G CCQ
"RTN","IBCECOB2",161,0)
 I $G(IBCNCRD)'=1,'$$CANCKS^IBCEM3("CC",IBIFN) S IBQ="" G CCQ
"RTN","IBCECOB2",162,0)
 ;
"RTN","IBCECOB2",163,0)
 ;S IBCAN=2,IBCE("EDI")=1,Y=IBIFN,IBCCCC=0,IBHV("IBIFN")=IBIFN,IBHV("IBIFN1")="",IBCNCOPY=1
"RTN","IBCECOB2",164,0)
 S IBCAN=2,IBCE("EDI")=1,Y=IBIFN,IBCCCC=0,IBHV("IBIFN")=IBIFN,IBHV("IBIFN1")=""
"RTN","IBCECOB2",165,0)
 I $G(IBCNCRD)'=1 S IBCNCOPY=1 D ^IBCCC
"RTN","IBCECOB2",166,0)
 I $G(IBCNCRD)=1 D CRD^IBCCC
"RTN","IBCECOB2",167,0)
 ;D ^IBCCC
"RTN","IBCECOB2",168,0)
 S IBIFN=IBHV("IBIFN")
"RTN","IBCECOB2",169,0)
 K IBCE("EDI") S IBQ=1
"RTN","IBCECOB2",170,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)'=7 S IBQ=""
"RTN","IBCECOB2",171,0)
 I IBHV("IBIFN1") D
"RTN","IBCECOB2",172,0)
 . N IBU
"RTN","IBCECOB2",173,0)
 . S IBU="R"
"RTN","IBCECOB2",174,0)
 . S IBNIEN=+IBHV("IBIFN1")
"RTN","IBCECOB2",175,0)
 . I "23"'[$P($G(^DGCR(399,+IBHV("IBIFN1"),0)),U,13) D
"RTN","IBCECOB2",176,0)
 .. W:'$G(IBCEAUTO) !,*7,"Please note: the new bill was not AUTHORIZED.",!,"It can only be accessed now via the normal, non-EDI functions.",!,"Status of new bill is ",$$EXPAND^IBTRE(399,.13,$P(^DGCR(399,IBHV("IBIFN1"),0),U,13)) S IBU="C"
"RTN","IBCECOB2",177,0)
 . D UPDEDI^IBCEM(IB364,IBU)
"RTN","IBCECOB2",178,0)
 ;
"RTN","IBCECOB2",179,0)
 I '$G(IBCEAUTO) D PAUSE^VALM1
"RTN","IBCECOB2",180,0)
CCQ Q
"RTN","IBCECOB2",181,0)
 ;
"RTN","IBCECOB2",182,0)
PRO ; Copy for secondary/tertiary bill
"RTN","IBCECOB2",183,0)
 N VALMY,IBDA,Z,IBIFN,IBIFNH,IB364,IBCE
"RTN","IBCECOB2",184,0)
 I '$P($G(^IBE(350.9,1,8)),U,12) D  G PROQ
"RTN","IBCECOB2",185,0)
 . D FULL^VALM1
"RTN","IBCECOB2",186,0)
 . W !!?5,"MRA's may not be processed at this time."
"RTN","IBCECOB2",187,0)
 . W !?5,"The IB site parameter ""Allow MRA Processing?"" is set to NO."
"RTN","IBCECOB2",188,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",189,0)
 . Q
"RTN","IBCECOB2",190,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",191,0)
 S Z=$O(IBDA(0)),Z=$G(IBDA(+Z)) G:'Z PROQ
"RTN","IBCECOB2",192,0)
 S IBIFN=$P(Z,U),IB364=$P(Z,U,2),IBDA=$P(Z,U,3),IBIFNH=IBIFN
"RTN","IBCECOB2",193,0)
 I 'IBIFN G PROQ
"RTN","IBCECOB2",194,0)
 I '$$LOCK^IBCEU0(361.1,IBDA) G PROQ
"RTN","IBCECOB2",195,0)
 D COBCOPY(IBIFN,IB364,2,IBDA,"BLD^IBCECOB1")
"RTN","IBCECOB2",196,0)
 D UNLOCK^IBCEU0(361.1,IBDA)
"RTN","IBCECOB2",197,0)
PROQ S VALMBCK="R"
"RTN","IBCECOB2",198,0)
 Q
"RTN","IBCECOB2",199,0)
 ;
"RTN","IBCECOB2",200,0)
COBCOPY(IBIFN,IB364,IBFROM,IBIEN,IBBLD) ; Generic entry point for EDI COB copy
"RTN","IBCECOB2",201,0)
 ; IBIFN = original bill ien
"RTN","IBCECOB2",202,0)
 ; IB364 = the ien of the transmission bill entry in file 364
"RTN","IBCECOB2",203,0)
 ; IBFROM = 1 if called from CSA, 2 if called from COB/EOB processing
"RTN","IBCECOB2",204,0)
 ; IBIEN = entry in 361 (IBFROM=1) or 361.1 (IBFROM=2) being processed
"RTN","IBCECOB2",205,0)
 ; IBBLD = the name of the entrypoint that will rebuild the display
"RTN","IBCECOB2",206,0)
 ;
"RTN","IBCECOB2",207,0)
 N IBCBASK,IBCBCOPY,IBCAN,IBIFNH,IBNSTAT,IBOSTAT,IBPRCOB,IBSECHK,IBLMVAR,IBAC,IBMRAIEN,IBDA,IBAUTO
"RTN","IBCECOB2",208,0)
 N IBCOB,IBCOBIL,IBCOBN,IBINS,IBINSN,IBINSOLD,IBMRAIO,IBMRAO,IBNMOLD,IBQUIT
"RTN","IBCECOB2",209,0)
 S (IBCBASK,IBCBCOPY,IBCAN,IBAUTO)=1,(IBPRCOB,IBSECHK)=0,(IBMRAIEN,IBDA)=IBIEN
"RTN","IBCECOB2",210,0)
 I 'IB364!'IBIFN W !,"Transmission record is missing for this bill" D PAUSE^VALM1 G COBCOPX
"RTN","IBCECOB2",211,0)
 ;
"RTN","IBCECOB2",212,0)
 S IBIFNH=IBIFN
"RTN","IBCECOB2",213,0)
 I IBFROM=2 S IBPRCOB=1
"RTN","IBCECOB2",214,0)
 ;
"RTN","IBCECOB2",215,0)
 I $$PREOBTOT^IBCEU0(IBIFN)'>0 D  G COBCOPX
"RTN","IBCECOB2",216,0)
 . D FULL^VALM1
"RTN","IBCECOB2",217,0)
 . W !!?5,"There is no patient responsibility for this claim."
"RTN","IBCECOB2",218,0)
 . W !?5,"This claim may not be processed."
"RTN","IBCECOB2",219,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",220,0)
 . Q
"RTN","IBCECOB2",221,0)
 ;
"RTN","IBCECOB2",222,0)
 I $P($G(^IBM(361.1,IBDA,0)),U,16)="1.5" D  G COBCOPX
"RTN","IBCECOB2",223,0)
 . W !!,"This claim has already been processed as a secondary claim."
"RTN","IBCECOB2",224,0)
 . W !,"You will need to complete the authorization process for this claim."
"RTN","IBCECOB2",225,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",226,0)
 . D AUTH
"RTN","IBCECOB2",227,0)
 . Q
"RTN","IBCECOB2",228,0)
 ;
"RTN","IBCECOB2",229,0)
 ; Get out if no next payer
"RTN","IBCECOB2",230,0)
 I '$P($G(^DGCR(399,IBIFN,"I"_($$COBN^IBCEF(IBIFN)+1))),U,1) D  G COBCOPX
"RTN","IBCECOB2",231,0)
 . W !,"There is no next payer for this bill"
"RTN","IBCECOB2",232,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",233,0)
 . Q
"RTN","IBCECOB2",234,0)
 ;
"RTN","IBCECOB2",235,0)
 D DSPRB^IBCCCB0(IBIFN)        ; display related bills
"RTN","IBCECOB2",236,0)
 S IBCE("EDI")=1
"RTN","IBCECOB2",237,0)
 D CHKB^IBCCCB                 ; process COB, create secondary bill
"RTN","IBCECOB2",238,0)
 S IBIFN=IBIFNH
"RTN","IBCECOB2",239,0)
 I IBSECHK G COBCOPX
"RTN","IBCECOB2",240,0)
 S IBV=1 D VIEW^IBCB2          ; display billing screens
"RTN","IBCECOB2",241,0)
 D AUTH                        ; authorize bill
"RTN","IBCECOB2",242,0)
COBCOPX ;
"RTN","IBCECOB2",243,0)
 Q
"RTN","IBCECOB2",244,0)
 ;
"RTN","IBCECOB2",245,0)
AUTH ; procedure to authorize the claim and refresh the screen
"RTN","IBCECOB2",246,0)
 K ^UTILITY($J) S IBAC=1,IBQUIT=0 D 3^IBCB1
"RTN","IBCECOB2",247,0)
 I '$D(IOUON)!'$D(IORVON) D ENS^%ZISS
"RTN","IBCECOB2",248,0)
 I $P($G(^IBM(361.1,IBMRAIEN,0)),U,16)=3 D UPDEDI^IBCEM(IB364,"Z")
"RTN","IBCECOB2",249,0)
 I $G(IBBLD)'="" D @IBBLD
"RTN","IBCECOB2",250,0)
 D PAUSE^VALM1
"RTN","IBCECOB2",251,0)
AUTHX ;
"RTN","IBCECOB2",252,0)
 Q
"RTN","IBCECOB2",253,0)
 ;
"RTN","IBCECOB2",254,0)
RES ;Resubmit bill by print
"RTN","IBCECOB2",255,0)
 N IBDA,IBIFN,IB364
"RTN","IBCECOB2",256,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",257,0)
 S IBDA=+$O(IBDA(0)),IBIFN=+$G(IBDA(+IBDA)),IB364=+$P($G(IBDA(IBDA)),U,2)
"RTN","IBCECOB2",258,0)
 I 'IBIFN G RESQ
"RTN","IBCECOB2",259,0)
 D PRINT1^IBCEM03(IBIFN,.IBDA,IB364)
"RTN","IBCECOB2",260,0)
 D PAUSE^VALM1
"RTN","IBCECOB2",261,0)
 I $G(IBDA)'="" D BLD^IBCECOB1
"RTN","IBCECOB2",262,0)
RESQ S VALMBCK="R"
"RTN","IBCECOB2",263,0)
 Q
"RTN","IBCECOB2",264,0)
 ;
"RTN","IBCECOB2",265,0)
EBI ;View an unauthorized transmitted bill
"RTN","IBCECOB2",266,0)
 N IBFLG,IBDA,IBIFN,IB364,DFN
"RTN","IBCECOB2",267,0)
 K ^TMP($J,"IBBILL")
"RTN","IBCECOB2",268,0)
 D FULL^VALM1
"RTN","IBCECOB2",269,0)
 ;
"RTN","IBCECOB2",270,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",271,0)
 S IBDA=+$O(IBDA(""))
"RTN","IBCECOB2",272,0)
 S IBIFN=+$G(IBDA(IBDA)),IB364=+$P($G(IBDA(IBDA)),U,2),DFN=$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCECOB2",273,0)
 G:'IBIFN EDITQ
"RTN","IBCECOB2",274,0)
 S IBV=1 D VIEW^IBCB2
"RTN","IBCECOB2",275,0)
 I '$D(IOUON)!'$D(IORVON) D ENS^%ZISS
"RTN","IBCECOB2",276,0)
 D BLD^IBCECOB1
"RTN","IBCECOB2",277,0)
EDITQ S VALMBCK="R"
"RTN","IBCECOB2",278,0)
 Q
"RTN","IBCECOB2",279,0)
 ;
"RTN","IBCECOB2",280,0)
SEL(IBDA,ONE) ; Select entry(s) from list
"RTN","IBCECOB2",281,0)
 ; IBDA = array returned if selections made
"RTN","IBCECOB2",282,0)
 ;    IBDA(n)=ien of bill selected (file 399)
"RTN","IBCECOB2",283,0)
 ; ONE = if set to 1, only one selection can be made at a time
"RTN","IBCECOB2",284,0)
 N IB
"RTN","IBCECOB2",285,0)
 K IBDA
"RTN","IBCECOB2",286,0)
 D FULL^VALM1
"RTN","IBCECOB2",287,0)
 D EN^VALM2($G(XQORNOD(0)),$S('$G(ONE):"",1:"S"))
"RTN","IBCECOB2",288,0)
 S IBDA=0 F  S IBDA=$O(VALMY(IBDA)) Q:'IBDA  S IBDA(IBDA)=$P($G(^TMP("IBCECOB",$J,+IBDA)),U,2,6)
"RTN","IBCECOB2",289,0)
 Q
"RTN","IBCECOB2",290,0)
 ;
"RTN","IBCECOB2",291,0)
EXIT ; Exit out of COB
"RTN","IBCECOB2",292,0)
 D FASTEXIT^IBCEFG4
"RTN","IBCECOB2",293,0)
 I $G(IBFASTXT)=1 S IBFASTXT=5
"RTN","IBCECOB2",294,0)
 Q
"RTN","IBCECOB2",295,0)
 ;
"RTN","IBCECSA4")
0^5^B60720503^B57240644
"RTN","IBCECSA4",1,0)
IBCECSA4 ;ALB/CXW - IB CLAIMS STATUS AWAITING RESOLUTION SCREEN ;5-AUG-1999
"RTN","IBCECSA4",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155,320,371,433**;21-MAR-1994;Build 36
"RTN","IBCECSA4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCECSA4",4,0)
 ;
"RTN","IBCECSA4",5,0)
SMSG ;select message
"RTN","IBCECSA4",6,0)
 N IBCOM,IBX,IBDAX,IBA
"RTN","IBCECSA4",7,0)
 D SEL(.IBDAX,1)
"RTN","IBCECSA4",8,0)
 I $O(IBDAX(""))="" G SMSGQ
"RTN","IBCECSA4",9,0)
 S IBDAX=+$O(IBDAX(0)),IBA=$G(IBDAX(IBDAX))
"RTN","IBCECSA4",10,0)
 S IBX=$G(^TMP("IBCECSB",$J,$P(IBA,U,3),$P(IBA,U,4),$P(IBA,U,6),$P(IBA,U,2)))
"RTN","IBCECSA4",11,0)
 I IBX'="" D
"RTN","IBCECSA4",12,0)
 . Q:'$$LOCK^IBCEU0(361,$P(IBA,U,2))
"RTN","IBCECSA4",13,0)
 . D EN^VALM("IBCEM CSA MSG")
"RTN","IBCECSA4",14,0)
 . D UNLOCK^IBCEU0(361,$P(IBA,U,2))
"RTN","IBCECSA4",15,0)
SMSGQ S VALMBCK="R"
"RTN","IBCECSA4",16,0)
 I $G(IBFASTXT) S VALMBCK="Q" K IBDAX
"RTN","IBCECSA4",17,0)
 D:$O(IBDAX(0)) BLD^IBCECSA1
"RTN","IBCECSA4",18,0)
 Q
"RTN","IBCECSA4",19,0)
 ;
"RTN","IBCECSA4",20,0)
COB ; COB management link from CSA
"RTN","IBCECSA4",21,0)
 N IBA,IBX
"RTN","IBCECSA4",22,0)
 ;IBX,IBA are killed during cancel execution
"RTN","IBCECSA4",23,0)
 D FULL^VALM1
"RTN","IBCECSA4",24,0)
 D EN^IBCECOB
"RTN","IBCECSA4",25,0)
 I $D(IBFASTXT) K IBFASTXT
"RTN","IBCECSA4",26,0)
 S VALMBCK="R"
"RTN","IBCECSA4",27,0)
 Q
"RTN","IBCECSA4",28,0)
 ;
"RTN","IBCECSA4",29,0)
EDI ;History detail display
"RTN","IBCECSA4",30,0)
 N IBIFN,IBX,IBA
"RTN","IBCECSA4",31,0)
 D FULL^VALM1
"RTN","IBCECSA4",32,0)
 S IBDAX=$O(IBDAX(0)),IBIFN=+$G(IBDAX(IBDAX))
"RTN","IBCECSA4",33,0)
 D EDI2^IBCECOB2(IBIFN)
"RTN","IBCECSA4",34,0)
 S VALMBCK="R"
"RTN","IBCECSA4",35,0)
 Q
"RTN","IBCECSA4",36,0)
EOB ;View an EOB
"RTN","IBCECSA4",37,0)
 N IBIFN,IBA,IBX
"RTN","IBCECSA4",38,0)
 D FULL^VALM1
"RTN","IBCECSA4",39,0)
 S IBDAX=$O(IBDAX(0)),IBIFN=+$G(IBDAX(IBDAX))
"RTN","IBCECSA4",40,0)
 D EN^VALM("IBCEM VIEW EOB")
"RTN","IBCECSA4",41,0)
 Q
"RTN","IBCECSA4",42,0)
 ;
"RTN","IBCECSA4",43,0)
TPJI ;Third Party joint Inquiry
"RTN","IBCECSA4",44,0)
 N IBIFN,IBX,IBA
"RTN","IBCECSA4",45,0)
 D FULL^VALM1
"RTN","IBCECSA4",46,0)
 S IBDAX=$O(IBDAX(0)),IBIFN=+$G(IBDAX(IBDAX))
"RTN","IBCECSA4",47,0)
 D TPJI1^IBCECOB2(IBIFN)
"RTN","IBCECSA4",48,0)
 S VALMBCK="R"
"RTN","IBCECSA4",49,0)
 Q
"RTN","IBCECSA4",50,0)
 ;
"RTN","IBCECSA4",51,0)
PBILL ;Print bill - not for resubmit
"RTN","IBCECSA4",52,0)
 ; IB*320 - allow action for MRA request claims
"RTN","IBCECSA4",53,0)
 N IBIFN,IBX,IBA,IBRESUB
"RTN","IBCECSA4",54,0)
 D FULL^VALM1
"RTN","IBCECSA4",55,0)
 S IBDAX=$O(IBDAX(0)),IBIFN=+$G(IBDAX(+IBDAX))
"RTN","IBCECSA4",56,0)
 I "234"'[$P($G(^DGCR(399,IBIFN,0)),U,13) W !!,"Bill status must be REQUEST MRA, AUTHORIZED or PRNT/TX to print the bill." D PAUSE^VALM1 G PB1
"RTN","IBCECSA4",57,0)
 ;
"RTN","IBCECSA4",58,0)
 ; don't update review status for MRA's
"RTN","IBCECSA4",59,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)=2 S IBRESUB=1
"RTN","IBCECSA4",60,0)
 E  S IBRESUB=$$RESUB(IBIFN,1,"PX")
"RTN","IBCECSA4",61,0)
 I IBRESUB'>0 W !,*7,"This is not a transmittable bill or review not needed" D PAUSE^VALM1 G PB1
"RTN","IBCECSA4",62,0)
 I IBRESUB=2 D  G PB1
"RTN","IBCECSA4",63,0)
 . N IB364
"RTN","IBCECSA4",64,0)
 . S IB364=+$P($G(IBDAX(IBDAX)),U,5)
"RTN","IBCECSA4",65,0)
 . D PRINT1^IBCEM03(IBIFN,.IBDAX,IB364)
"RTN","IBCECSA4",66,0)
 D PBILL1^IBCECOB2(IBIFN)
"RTN","IBCECSA4",67,0)
PB1 ;
"RTN","IBCECSA4",68,0)
 S VALMBCK="R"
"RTN","IBCECSA4",69,0)
 Q
"RTN","IBCECSA4",70,0)
 ;
"RTN","IBCECSA4",71,0)
CANCEL ;Cancel bill
"RTN","IBCECSA4",72,0)
 N IBIFN,IB364,IBX,IBA,MRACHK
"RTN","IBCECSA4",73,0)
 ; IBX,IBA will be killed during execution - need to protect them
"RTN","IBCECSA4",74,0)
 D FULL^VALM1
"RTN","IBCECSA4",75,0)
 S IBDAX=$O(IBDAX(0)),IBIFN=+$G(IBDAX(+IBDAX))
"RTN","IBCECSA4",76,0)
 ; Check for security key
"RTN","IBCECSA4",77,0)
 I '$$KCHK^XUSRB("IB AUTHORIZE") D  G CANCELQ
"RTN","IBCECSA4",78,0)
 . W !!?5,"You don't hold the proper security key to access this function."
"RTN","IBCECSA4",79,0)
 . W !?5,"The necessary key is IB AUTHORIZE.  Please see your manager."
"RTN","IBCECSA4",80,0)
 . D PAUSE^VALM1
"RTN","IBCECSA4",81,0)
 . Q
"RTN","IBCECSA4",82,0)
 D MRACHK I MRACHK G CANCELQ
"RTN","IBCECSA4",83,0)
 S IB364=+$P($G(IBDAX(IBDAX)),U,5)
"RTN","IBCECSA4",84,0)
 D CANCEL^IBCEM3(.IBDAX,IBIFN,IB364)
"RTN","IBCECSA4",85,0)
CANCELQ S VALMBCK="R"
"RTN","IBCECSA4",86,0)
 Q
"RTN","IBCECSA4",87,0)
 ;
"RTN","IBCECSA4",88,0)
CRD ; enter here if correcting a bill
"RTN","IBCECSA4",89,0)
 N IBCNCRD
"RTN","IBCECSA4",90,0)
 S IBCNCRD=1
"RTN","IBCECSA4",91,0)
CLONE ;'Copy/cancel bill' protocol action
"RTN","IBCECSA4",92,0)
 N IBX,IBA,IB364,MRACHK,IBIFN,IBKEY
"RTN","IBCECSA4",93,0)
 ; IBX,IBA will be killed during execution - need to protect them
"RTN","IBCECSA4",94,0)
 D FULL^VALM1
"RTN","IBCECSA4",95,0)
 S IBDAX=$O(IBDAX("")),IBIFN=+$P($G(IBDAX(IBDAX)),U)
"RTN","IBCECSA4",96,0)
 I IBDAX="" G CLONEQ
"RTN","IBCECSA4",97,0)
 ; Check for security key
"RTN","IBCECSA4",98,0)
 S IBKEY=$S($G(IBCNCRD)=1:"IB AUTHORIZE",1:"IB CLON")
"RTN","IBCECSA4",99,0)
 ;I '$$KCHK^XUSRB("IB AUTHORIZE") D  G CLONEQ
"RTN","IBCECSA4",100,0)
 I '$$KCHK^XUSRB(IBKEY) D  G CLONEQ
"RTN","IBCECSA4",101,0)
 . ;W !!?5,"You don't hold the proper security key to access this function."
"RTN","IBCECSA4",102,0)
 . ;W !?5,"The necessary key is IB AUTHORIZE.  Please see your manager."
"RTN","IBCECSA4",103,0)
 . W !!?5,"You must hold the "_IBKEY_" security key to access this function."
"RTN","IBCECSA4",104,0)
 . W !?5,"Please see your manager."
"RTN","IBCECSA4",105,0)
 . D PAUSE^VALM1
"RTN","IBCECSA4",106,0)
 . Q
"RTN","IBCECSA4",107,0)
 D MRACHK I MRACHK G CLONEQ
"RTN","IBCECSA4",108,0)
 S IB364=+$P($G(IBDAX(IBDAX)),U,5)
"RTN","IBCECSA4",109,0)
 D COPYCLON^IBCECOB2(+$G(IBDAX(IBDAX)),IB364,.IBDAX)
"RTN","IBCECSA4",110,0)
CLONEQ S VALMBCK="R"
"RTN","IBCECSA4",111,0)
 Q
"RTN","IBCECSA4",112,0)
 ;
"RTN","IBCECSA4",113,0)
PRO ; Copy for secondary/tertiary bill
"RTN","IBCECSA4",114,0)
 N IBIFNH,IBIFN,IB364,IBX,IBA,Z,IBCBASK,IBCBCOPY,IBCAN
"RTN","IBCECSA4",115,0)
 D FULL^VALM1
"RTN","IBCECSA4",116,0)
 ;IBDAX - array from selection of message
"RTN","IBCECSA4",117,0)
 S IBA=$G(IBDAX(+$G(IBDAX)))
"RTN","IBCECSA4",118,0)
 G:'IBA PROQ
"RTN","IBCECSA4",119,0)
 S IBX=$G(^TMP("IBCECSB",$J,$P(IBA,U,3),$P(IBA,U,4),$P(IBA,U,6),$P(IBA,U,2))),IBIFN=$P(IBA,U)
"RTN","IBCECSA4",120,0)
 S IB364=+$P(IBA,U,5)
"RTN","IBCECSA4",121,0)
 G:'IBIFN PROQ
"RTN","IBCECSA4",122,0)
 ;
"RTN","IBCECSA4",123,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)=2 D  G PROQ
"RTN","IBCECSA4",124,0)
 . W !!?4,"This bill is in a status of REQUEST MRA."
"RTN","IBCECSA4",125,0)
 . I $$CHK^IBCEMU1(IBIFN) W !?4,"MRA EOBs must be processed from the MRA management worklist."
"RTN","IBCECSA4",126,0)
 . E  W !?4,"There are no MRA EOBs on file."
"RTN","IBCECSA4",127,0)
 . D PAUSE^VALM1
"RTN","IBCECSA4",128,0)
 . Q
"RTN","IBCECSA4",129,0)
 ;
"RTN","IBCECSA4",130,0)
 D COBCOPY^IBCECOB2(IBIFN,IB364,1,$P(IBA,U,2),"INIT^IBCECSA2")
"RTN","IBCECSA4",131,0)
PROQ S VALMBCK="R"
"RTN","IBCECSA4",132,0)
 Q
"RTN","IBCECSA4",133,0)
 ;
"RTN","IBCECSA4",134,0)
RES ;Resubmit bill by print
"RTN","IBCECSA4",135,0)
 N IBTMP,IB364,IBIFN,IBX,IBA
"RTN","IBCECSA4",136,0)
 D FULL^VALM1
"RTN","IBCECSA4",137,0)
 S (IBTMP,IBDAX)=$O(IBDAX(0)),IBTMP(IBTMP)=IBDAX(IBDAX)
"RTN","IBCECSA4",138,0)
 S IBIFN=$P($G(IBDAX(+IBDAX)),U)
"RTN","IBCECSA4",139,0)
 S IB364=+$P($G(IBDAX(IBDAX)),U,5)
"RTN","IBCECSA4",140,0)
 I IBIFN D PRINT1^IBCEM03(IBIFN,.IBDAX,IB364),PAUSE^VALM1,INIT^IBCECSA2
"RTN","IBCECSA4",141,0)
 S IBDAX(IBTMP)=IBTMP(IBTMP)
"RTN","IBCECSA4",142,0)
 S VALMBCK="R"
"RTN","IBCECSA4",143,0)
 Q
"RTN","IBCECSA4",144,0)
 ;
"RTN","IBCECSA4",145,0)
EBI ;Edit bill
"RTN","IBCECSA4",146,0)
 N IBFLG,IBIFN,IB364,IBX,IBA
"RTN","IBCECSA4",147,0)
 K ^TMP($J,"IBBILL")
"RTN","IBCECSA4",148,0)
 D FULL^VALM1
"RTN","IBCECSA4",149,0)
 S IBDAX=$O(IBDAX(""))
"RTN","IBCECSA4",150,0)
 I IBDAX="" G EDITQ
"RTN","IBCECSA4",151,0)
 S IBIFN=$P(IBDAX(IBDAX),U)
"RTN","IBCECSA4",152,0)
 S IBFLG=1 D  I IBFLG S IBDAX="" D PAUSE^VALM1 G EDITQ
"RTN","IBCECSA4",153,0)
 . I $P($G(^DGCR(399,IBIFN,0)),U,13)>2 W !,*7,"An authorized bill can not be edited." Q
"RTN","IBCECSA4",154,0)
 . I '$D(^XUSEC("IB EDIT",DUZ)) W !,*7,"You are not authorized to edit a bill" Q
"RTN","IBCECSA4",155,0)
 . S IBFLG=0
"RTN","IBCECSA4",156,0)
 S IBIFN=+$G(IBDAX(IBDAX))
"RTN","IBCECSA4",157,0)
 S IB364=+$P($G(IBDAX(IBDAX)),U,5)
"RTN","IBCECSA4",158,0)
 D EBILL^IBCEM3(.IBDAX,IBIFN,IB364)
"RTN","IBCECSA4",159,0)
EDITQ S VALMBCK="R"
"RTN","IBCECSA4",160,0)
 Q
"RTN","IBCECSA4",161,0)
 ;
"RTN","IBCECSA4",162,0)
SEL(IBDA,ONE) ; Select entry(s) from list
"RTN","IBCECSA4",163,0)
 ; IBDA = array returned if selections made
"RTN","IBCECSA4",164,0)
 ;    IBDAX(n)=ien of bill selected (file 399)
"RTN","IBCECSA4",165,0)
 ; ONE = if set to 1, only one selection can be made at a time
"RTN","IBCECSA4",166,0)
 N IB
"RTN","IBCECSA4",167,0)
 K IBDA
"RTN","IBCECSA4",168,0)
 D EN^VALM2($G(XQORNOD(0)),$S('$G(ONE):"",1:"S"))
"RTN","IBCECSA4",169,0)
 S IBDA=0 F  S IBDA=$O(VALMY(IBDA)) Q:'IBDA  D
"RTN","IBCECSA4",170,0)
 . S IBDA(IBDA)=$P($G(^TMP("IBCECSA",$J,IBDA)),U,2,7)
"RTN","IBCECSA4",171,0)
 Q
"RTN","IBCECSA4",172,0)
 ;
"RTN","IBCECSA4",173,0)
RESUB(IBIFN,TXMT,IBFUNC,IBTBA) ; Function asks if resubmit as resolution to a
"RTN","IBCECSA4",174,0)
 ;   message is the intention
"RTN","IBCECSA4",175,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCECSA4",176,0)
 ; TXMT = flag if = 1, assume it's transmittable, don't have to check
"RTN","IBCECSA4",177,0)
 ; IBFUNC = code to say where the code is called from
"RTN","IBCECSA4",178,0)
 ;  'E'=edit/authorize  'P'=print 'PX'= print/not to resubmit  'C'=cancel
"RTN","IBCECSA4",179,0)
 ; IBTBA = transmit bill array returned to calling routine.  Optional
"RTN","IBCECSA4",180,0)
 ;    parameter to be passed by reference.
"RTN","IBCECSA4",181,0)
 ;    IBTBA(364ptr)=""
"RTN","IBCECSA4",182,0)
 ;
"RTN","IBCECSA4",183,0)
 ; Returns:
"RTN","IBCECSA4",184,0)
 ; -1 = ^ or timeout at prompt
"RTN","IBCECSA4",185,0)
 ;  0 = not a transmittable bill or review not needed
"RTN","IBCECSA4",186,0)
 ;  1 = don't update the review status (user choice)
"RTN","IBCECSA4",187,0)
 ;  2 = Yes, update the review status (user choice), or resubmit by print
"RTN","IBCECSA4",188,0)
 ;
"RTN","IBCECSA4",189,0)
 NEW DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT,STAT
"RTN","IBCECSA4",190,0)
 KILL IBTBA
"RTN","IBCECSA4",191,0)
 I '$G(TXMT),'$$TXMT^IBCEF4(IBIFN) S Y=0 G RESUB1   ; not transmittable
"RTN","IBCECSA4",192,0)
 ;
"RTN","IBCECSA4",193,0)
 ; Check for any messages or EOB's needing review
"RTN","IBCECSA4",194,0)
 S STAT=$$STATUS^IBCEF4(IBIFN)
"RTN","IBCECSA4",195,0)
 I '$TR(STAT,U) S Y=0 G RESUB1                ; no unreviewed items
"RTN","IBCECSA4",196,0)
 I $P(STAT,U,1) S IBTBA($P(STAT,U,1))=""      ; 364 ien for 361 data
"RTN","IBCECSA4",197,0)
 I $P(STAT,U,2) S IBTBA($P(STAT,U,2))=""      ; 364 ien for 361.1 data
"RTN","IBCECSA4",198,0)
 ;
"RTN","IBCECSA4",199,0)
 I IBFUNC'="P" D
"RTN","IBCECSA4",200,0)
 . S DIR(0)="YA",DIR("A",1)="",DIR("A",2)="This bill is in need of review due to receipt of a status msg or EOB",DIR("A")="OK to update the review status to 'REVIEW COMPLETE' based on this action?: ",DIR("B")="NO"
"RTN","IBCECSA4",201,0)
 . S DIR("?",1)="You have just "_$S(IBFUNC="E":"requested re-transmission of",IBFUNC="C":"cancelled",1:"")_" the bill"
"RTN","IBCECSA4",202,0)
 . S DIR("?",2)="You can update the review status of the unreviewed message to ",DIR("?",3)=" 'REVIEW COMPLETE' if you say YES here"
"RTN","IBCECSA4",203,0)
 . S DIR("?")="Press ENTER to continue "
"RTN","IBCECSA4",204,0)
 . D ^DIR K DIR
"RTN","IBCECSA4",205,0)
 . I $D(DTOUT)!$D(DUOUT) S Y=-1 Q
"RTN","IBCECSA4",206,0)
 . S Y=Y+1
"RTN","IBCECSA4",207,0)
 E  D
"RTN","IBCECSA4",208,0)
 . W !,"The review status of this message will be updated to 'REVIEW COMPLETE'",!,"  based on this action"
"RTN","IBCECSA4",209,0)
 . S Y=2
"RTN","IBCECSA4",210,0)
 ;
"RTN","IBCECSA4",211,0)
RESUB1 Q +Y
"RTN","IBCECSA4",212,0)
 ;
"RTN","IBCECSA4",213,0)
RETXMT ;
"RTN","IBCECSA4",214,0)
 N IB364,IBIFN
"RTN","IBCECSA4",215,0)
 D FULL^VALM1
"RTN","IBCECSA4",216,0)
 S IBDAX=$O(IBDAX(0)),IB364=+$P($G(IBDAX(IBDAX)),U,5),IBIFN=+$P($G(IBDAX(IBDAX)),U)
"RTN","IBCECSA4",217,0)
 I 'IB364!('IBIFN) G RETXMTQ
"RTN","IBCECSA4",218,0)
 D MRACHK I MRACHK G RETXMTQ
"RTN","IBCECSA4",219,0)
 D RESUB^IBCE(IB364)
"RTN","IBCECSA4",220,0)
RETXMTQ S VALMBCK="R"
"RTN","IBCECSA4",221,0)
 Q
"RTN","IBCECSA4",222,0)
 ;
"RTN","IBCECSA4",223,0)
MRACHK ; Restrict access to process REQUEST MRA claims
"RTN","IBCECSA4",224,0)
 S MRACHK=0
"RTN","IBCECSA4",225,0)
 ; At least one MRA EOB appears on the MRA management worklist
"RTN","IBCECSA4",226,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)=2,$$MRAWL^IBCEMU2(IBIFN) S MRACHK=1 D  D PAUSE^VALM1
"RTN","IBCECSA4",227,0)
 . W !,?4,"This bill is in a status of REQUEST MRA and it does appear on"
"RTN","IBCECSA4",228,0)
 . W !,?4,"the MRA Management Worklist.  Please use the MRA Management Menu"
"RTN","IBCECSA4",229,0)
 . W !,?4,"options for all processing related to this bill."
"RTN","IBCECSA4",230,0)
 Q
"RTN","IBCNQ")
0^10^B25510710^B25492974
"RTN","IBCNQ",1,0)
IBCNQ ;ALB/MJB - MCCR PATIENT BILLING INQUIRY ;13 JUN 88 13:52
"RTN","IBCNQ",2,0)
 ;;2.0;INTEGRATED BILLING;**51,320,377,433**;21-MAR-94;Build 36
"RTN","IBCNQ",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNQ",4,0)
 ;
"RTN","IBCNQ",5,0)
 ;MAP TO DGCRNQ
"RTN","IBCNQ",6,0)
 ;
"RTN","IBCNQ",7,0)
 D HOME^%ZIS
"RTN","IBCNQ",8,0)
ASKPAT S DIC="^DGCR(399,",DIC(0)="AEMQZ",DIC("A")="Enter BILL NUMBER or PATIENT NAME: " W !! D ^DIC G:X=""!(X["^") Q
"RTN","IBCNQ",9,0)
 ;
"RTN","IBCNQ",10,0)
 S IBIFN=+Y,IBQUIT=0,IBAC=7
"RTN","IBCNQ",11,0)
VIEW ;
"RTN","IBCNQ",12,0)
 ;***
"RTN","IBCNQ",13,0)
 F I=0,"S","U","U1" S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCNQ",14,0)
 S DFN=$P(IB(0),"^",2),IBSTAT=$P(IB(0),"^",13),IBBNO=$$BN^PRCAFN(IBIFN),IBPAGE=0 S:IBBNO=-1 IBBNO=$S($D(IBIL):IBIL,1:$P(IB(0),"^"))
"RTN","IBCNQ",15,0)
 ;
"RTN","IBCNQ",16,0)
 D NOW^%DTC S Y=$E(%,1,12) D D^DIQ S IBNOW=Y,IBPT=$$PT^IBEFUNC(DFN) D HDR1
"RTN","IBCNQ",17,0)
 ;
"RTN","IBCNQ",18,0)
 S IBUN="UNSPECIFIED",IBUK="UNKNOWN USER"
"RTN","IBCNQ",19,0)
 W !,"Bill Status",?15,": ",$S(IBSTAT=1:"ENTERED/NOT REVIEWED",IBSTAT=2:"MRA REQUESTED",IBSTAT=3:"AUTHORIZED",IBSTAT=4:"PRINTED/TRANSMITTED",IBSTAT=7:"CANCELLED",1:IBUN)," - RECORD IS ",$S(IBSTAT=1:"",1:"UN"),"EDITABLE"
"RTN","IBCNQ",20,0)
 W !,"Rate Type",?15,": ",$S($P(IB(0),"^",7)="":IBUN,'$D(^DGCR(399.3,$P(IB(0),"^",7),0)):IBUN,1:$P(^DGCR(399.3,$P(IB(0),"^",7),0),"^"))
"RTN","IBCNQ",21,0)
 W:+$P(^IBE(350.9,1,1),"^",22) !,"Form Type",?15,": ",$S($P($G(^IBE(353,+$P(IB(0),"^",19),0)),"^")]"":$P(^(0),"^"),1:IBUN)
"RTN","IBCNQ",22,0)
 W:IBSTAT=7 !,"Reason Canceled",?15,": ",$S($P(IB("S"),"^",19)]"":$P(IB("S"),"^",19),1:IBUN)
"RTN","IBCNQ",23,0)
 I $$INPAT^IBCEF(IBIFN) S Y=$P(IB(0),"^",3) D D^DIQ W !!,"Admission Date : ",Y
"RTN","IBCNQ",24,0)
 E  D OPDATE
"RTN","IBCNQ",25,0)
 W !!,"Charges",?15,": " S X=$P(IB("U1"),U,1),X2="2$" D:X]"" COMMA^%DTC W $S(X]"":X,1:IBUN)
"RTN","IBCNQ",26,0)
 I $P(IB("U1"),U,2)]"" W !,"LESS Offset",?15,": " S X=$P(IB("U1"),U,2),X2="2$" D COMMA^%DTC W X,"   [",$P(IB("U1"),U,3),"]",!,"Bill Total",?15,": " S X=($P(IB("U1"),U,1)-$P(IB("U1"),U,2)),X2="2$" D COMMA^%DTC W X
"RTN","IBCNQ",27,0)
 S X=$$TPR^PRCAFN(IBIFN) I X>0 S X2="2$" D COMMA^%DTC W !,"Amount Paid",?15,": ",X
"RTN","IBCNQ",28,0)
 S X=$$STA^PRCAFN(IBIFN) I X>0 W !,"AR Status",?15,": ",$P(X,"^",2)
"RTN","IBCNQ",29,0)
 I $P(IB("U"),U)]"" S Y=$P(IB("U"),U) D D^DIQ W !!,"Statement From",?15,": ",Y S Y=$P(IB("U"),"^",2) D D^DIQ W !,"Statement To",?15,": ",Y,!
"RTN","IBCNQ",30,0)
 I $P(IB("U"),U)']"" W !!,"Statement From",?15,": ",IBUN,!,"Statement To",?15,": ",IBUN,!
"RTN","IBCNQ",31,0)
 D DISP I IBQUIT Q:IBAC[8  G Q
"RTN","IBCNQ",32,0)
 I IBSTAT<5 D NOPTF^IBCB2 I 'IBAC1 D:$Y>(IOSL-6) HDR Q:IBQUIT&(IBAC[8)  G Q:IBQUIT D NOPTF1^IBCB2
"RTN","IBCNQ",33,0)
 D PAUSE,^IBOLK1:$G(IBFULL)&('IBQUIT) Q:IBAC[8  ; Called from Outpatient Visit Date Inquiry
"RTN","IBCNQ",34,0)
 G Q:IBQUIT,ASKPAT
"RTN","IBCNQ",35,0)
 ;
"RTN","IBCNQ",36,0)
DISP ; The variable IBAC must be defined as input to this sub-routine.
"RTN","IBCNQ",37,0)
 G:'$D(IBAC) DISPQ
"RTN","IBCNQ",38,0)
 S IBUN="UNSPECIFIED",IBUK="UNKNOWN USER"
"RTN","IBCNQ",39,0)
 I IB("S")']"" W !,"Past actions of this billing record unspecified." G DISPQ
"RTN","IBCNQ",40,0)
 S IBX="Entered^^^^^^MRA Requested^^^Authorized^^First Printed^^Last Printed^^^Cancelled"
"RTN","IBCNQ",41,0)
 F I=1,7,10,12,14,17 I $P(IB("S"),U,I)]"" D:IBAC[7&($Y>(IOSL-4)) HDR Q:$S(IBAC'[7:0,1:IBQUIT)  D DISP1
"RTN","IBCNQ",42,0)
 ;
"RTN","IBCNQ",43,0)
 ;Patch 320 - Added call to retrieve claim clone history.
"RTN","IBCNQ",44,0)
 N IBCCR,IBCURR,IBNEXT,IBBCH,IBINDENT
"RTN","IBCNQ",45,0)
 S IBINDENT=0
"RTN","IBCNQ",46,0)
 D EN^IBCCR(IBIFN,.IBCCR)   ; utility to pull cloning history
"RTN","IBCNQ",47,0)
 ;
"RTN","IBCNQ",48,0)
 ; attempt to go one claim forward from the current claim
"RTN","IBCNQ",49,0)
 S IBCURR="IBCCR("_+$P(IB("S"),U,1)_","_IBIFN_")"
"RTN","IBCNQ",50,0)
 S IBNEXT=$Q(@IBCURR)
"RTN","IBCNQ",51,0)
 I IBNEXT'="" D
"RTN","IBCNQ",52,0)
 . N IBX S IBX=@IBNEXT
"RTN","IBCNQ",53,0)
 . W !,"Copied"
"RTN","IBCNQ",54,0)
 . W ?15,": ",$$FMTE^XLFDT($P(IBX,U,1),"1Z")_" by "_$P(IBX,U,3)
"RTN","IBCNQ",55,0)
 . W !,"Copied To",?15,": ",$P(IBX,U,2)
"RTN","IBCNQ",56,0)
 . S IBINDENT=1
"RTN","IBCNQ",57,0)
 . Q
"RTN","IBCNQ",58,0)
 ;
"RTN","IBCNQ",59,0)
 ; now go backwards for claim cloning history all the way back
"RTN","IBCNQ",60,0)
 S IBBCH=IBCURR
"RTN","IBCNQ",61,0)
 F  S IBBCH=$Q(@IBBCH,-1) Q:IBBCH=""  D
"RTN","IBCNQ",62,0)
 . N IBX,TS1,TS2 S IBX=@IBBCH
"RTN","IBCNQ",63,0)
 . I IBINDENT S TS1=4,TS2=19     ; set tab stops
"RTN","IBCNQ",64,0)
 . E  S TS1=0,TS2=15
"RTN","IBCNQ",65,0)
 . W !?TS1,"Copied",?TS2,": "
"RTN","IBCNQ",66,0)
 . W $$FMTE^XLFDT($P(IBX,U,1),"1Z")_" by "_$P(IBX,U,3)
"RTN","IBCNQ",67,0)
 . W !?TS1,"Copied From",?TS2,": ",$P(IBX,U,2)
"RTN","IBCNQ",68,0)
 . W !?TS1,"Reason Copied",?TS2,": ",$P(IBX,U,4)
"RTN","IBCNQ",69,0)
 . S IBINDENT=1
"RTN","IBCNQ",70,0)
 . Q
"RTN","IBCNQ",71,0)
 ;
"RTN","IBCNQ",72,0)
 I $D(^DGCR(399,IBIFN,"R","AC",1)) S IB=0 F I=0:0 S IB=$O(^DGCR(399,IBIFN,"R","AC",1,IB)) Q:'IB  D:IBAC[7&($Y>(IOSL-4)) HDR Q:$S(IBAC'[7:0,1:IBQUIT)  W !,"Returned to AR : " D RETN
"RTN","IBCNQ",73,0)
DISPQ Q
"RTN","IBCNQ",74,0)
 ;
"RTN","IBCNQ",75,0)
DISP1 W !,$P(IBX,U,I) S Y=$P(IB("S"),U,I) D D^DIQ W ?15,": ",Y,?28," by " S IBN=$P(IB("S"),U,(I+1)) W $S(IBN']"":IBUK,$D(^VA(200,IBN,0)):$P(^(0),U,1),1:IBUK)
"RTN","IBCNQ",76,0)
 Q
"RTN","IBCNQ",77,0)
 ;
"RTN","IBCNQ",78,0)
Q K DFN,IB,IBAC,IBBNO,IBN,IBNOW,IBPAGE,IBPT,IBU,IBQUIT,IBUK,IBUN,IBX,IBSTAT,IBAC1,IBIFN,IBOPD,DIC,X,X2,Y
"RTN","IBCNQ",79,0)
 Q
"RTN","IBCNQ",80,0)
 ;
"RTN","IBCNQ",81,0)
RETN I $D(^DGCR(399,IBIFN,"R",IB,0)) S IBN=^(0),Y=$P($P(IBN,"^"),".") D D^DIQ W Y,?28," by " S IBN=$P(IBN,"^",2) I IBN]"",$D(^VA(200,IBN,0)) W $P(^VA(200,IBN,0),"^")
"RTN","IBCNQ",82,0)
 Q
"RTN","IBCNQ",83,0)
 ;
"RTN","IBCNQ",84,0)
HDR D PAUSE Q:IBQUIT
"RTN","IBCNQ",85,0)
HDR1 S L="",$P(L,"=",80)="",IBPAGE=IBPAGE+1
"RTN","IBCNQ",86,0)
 W:$E(IOST,1,2)["C-"!(IBPAGE>1) @IOF
"RTN","IBCNQ",87,0)
 ;W $E($P(IBPT,"^"),1,20),"   ",$P(IBPT,"^",2),?38,IBBNO,?51,IBNOW,?72,"PAGE: ",IBPAGE,!,L
"RTN","IBCNQ",88,0)
 W $E($P(IBPT,"^"),1,20),"  ",$P(IBPT,"^",2),?36,IBBNO,?51,IBNOW,?72,"PAGE: ",IBPAGE,!,L
"RTN","IBCNQ",89,0)
 K L Q
"RTN","IBCNQ",90,0)
 ;
"RTN","IBCNQ",91,0)
OPDATE ; List Outpatient Visit Dates.
"RTN","IBCNQ",92,0)
 Q:'$O(^DGCR(399,IBIFN,"OP",0))
"RTN","IBCNQ",93,0)
 W !!,"OP Visit Dates :" S IBOPD=0
"RTN","IBCNQ",94,0)
 F I=1:1 S IBOPD=$O(^DGCR(399,IBIFN,"OP",IBOPD)) Q:'IBOPD  D
"RTN","IBCNQ",95,0)
 . W:'((I-1)#4)&(I>1) !
"RTN","IBCNQ",96,0)
 . S Y=IBOPD D D^DIQ W ?($S(I#4:I#4,1:4)*14+3),Y
"RTN","IBCNQ",97,0)
 Q
"RTN","IBCNQ",98,0)
 ;
"RTN","IBCNQ",99,0)
PAUSE Q:$E(IOST,1,2)'="C-"
"RTN","IBCNQ",100,0)
 F I=$Y:1:(IOSL-3) W !
"RTN","IBCNQ",101,0)
 S DIR(0)="E" D ^DIR K DIR I $D(DIRUT)!($D(DUOUT)) S IBQUIT=1 K DIRUT,DTOUT,DUOUT
"RTN","IBCNQ",102,0)
 Q
"RTN","IBOA31")
0^8^B15589530^B15171767
"RTN","IBOA31",1,0)
IBOA31 ;ALB/AAS - PRINT ALL BILLS FOR A PATIENT ;04/18/90
"RTN","IBOA31",2,0)
 ;;2.0; INTEGRATED BILLING ;**95,199,433**;21-MAR-94;Build 36
"RTN","IBOA31",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBOA31",4,0)
 ;
"RTN","IBOA31",5,0)
 ;MAP TO DGCRA31
"RTN","IBOA31",6,0)
EN ;
"RTN","IBOA31",7,0)
 ;***
"RTN","IBOA31",8,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBOA31" D T1^%ZOSV ;stop rt clock
"RTN","IBOA31",9,0)
 ;S XRTL=$ZU(0),XRTN="IBOA31-1" D T0^%ZOSV ;start rt clock
"RTN","IBOA31",10,0)
 N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBOA31",11,0)
 S DIC="^DPT(",DIC(0)="AEQMN" D ^DIC K DIC Q:Y<1  S DFN=+Y
"RTN","IBOA31",12,0)
 S DIR(0)="Y",DIR("A")="Include Pharmacy Co-Pay charges on this report",DIR("B")="NO"
"RTN","IBOA31",13,0)
 S DIR("?",1)="    Enter:  'Y'  -  To include Pharmacy Co-pay charges on this report"
"RTN","IBOA31",14,0)
 S DIR("?",2)="            'N'  -  To exclude Pharmacy Co-pay charges on this report"
"RTN","IBOA31",15,0)
 S DIR("?")="            '^'  -  To select a new patient"
"RTN","IBOA31",16,0)
 D ^DIR K DIR G:$D(DIRUT) END S IBIBRX=Y
"RTN","IBOA31",17,0)
 W !,"You will need a 132 column printer for this report."
"RTN","IBOA31",18,0)
 S %ZIS="QM" D ^%ZIS G:POP ENQ
"RTN","IBOA31",19,0)
 I $D(IO("Q")) K IO("Q") D  G ENQ
"RTN","IBOA31",20,0)
 .S ZTDESC="IB - PRINT ALL BILLS FOR A PATIENT",ZTRTN="DQ^IBOA31",ZTSAVE("DFN")="",ZTSAVE("IB*")=""
"RTN","IBOA31",21,0)
 .D ^%ZTLOAD K ZTSK D HOME^%ZIS
"RTN","IBOA31",22,0)
 ;
"RTN","IBOA31",23,0)
 ;***
"RTN","IBOA31",24,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBOA31" D T1^%ZOSV ;stop rt clock
"RTN","IBOA31",25,0)
DQ ;
"RTN","IBOA31",26,0)
 ;***
"RTN","IBOA31",27,0)
 ;S XRTL=$ZU(0),XRTN="IBOA31-2" D T0^%ZOSV ;start rt clock
"RTN","IBOA31",28,0)
 U IO S IBPAG=0 D NOW^%DTC S Y=% X ^DD("DD") S IBNOW=Y,$P(IBLINE,"-",IOM+1)=""
"RTN","IBOA31",29,0)
 S IBQUIT=0,IBN=$$PT^IBEFUNC(DFN) D UTIL^IBCA3,UTIL^IBOA32
"RTN","IBOA31",30,0)
 I '$D(^UTILITY($J)) W !,"No Bills On File for ",$P(IBN,"^"),"  SSN: ",$P(IBN,"^",2),"." G ENQ
"RTN","IBOA31",31,0)
 D HDR1 S (IBDT,IBIFN)=""
"RTN","IBOA31",32,0)
 ; - loop through all bills
"RTN","IBOA31",33,0)
 F  S IBDT=$O(^UTILITY($J,IBDT)) Q:IBDT=""!(IBQUIT)  D
"RTN","IBOA31",34,0)
 . F  S IBIFN=$O(^UTILITY($J,IBDT,IBIFN)) Q:IBIFN=""!(IBQUIT)  D @($S($E(IBIFN,$L(IBIFN))="X":"^IBOA32",1:"ONE"))
"RTN","IBOA31",35,0)
 D:'IBQUIT PAUSE
"RTN","IBOA31",36,0)
ENQ W ! G END
"RTN","IBOA31",37,0)
 ;
"RTN","IBOA31",38,0)
ONE D GVAR^IBCBB
"RTN","IBOA31",39,0)
 D:($Y>(IOSL-5)) HDR Q:IBQUIT
"RTN","IBOA31",40,0)
 W !,IBBNO,?12,$$DAT1^IBOUTL($P(IBNDS,"^",12)),?21,$P($G(^DGCR(399.3,+IBAT,0)),"^")
"RTN","IBOA31",41,0)
 W ?41,$S(IBCL=1:"INPATIENT",IBCL=2:"HUMANIT. (INPT)",IBCL=3:"OUTPATIENT",IBCL=4:"HUMANIT. (OPT)",1:""),?56
"RTN","IBOA31",42,0)
 F I=$S(IBCL<3!('$O(^DGCR(399,IBIFN,"OP",0))):IBEVDT,1:$O(^DGCR(399,IBIFN,"OP",0))),IBFDT,IBTDT W $S(I]"":$$DAT1^IBOUTL(I)_"  ",1:"          ")
"RTN","IBOA31",43,0)
 S X=+$$TPR^PRCAFN(IBIFN) W $J($S(X<0:0,1:X),8,2)
"RTN","IBOA31",44,0)
 W ?95,$S(IBST=1:"ENTERED/NOT REV.",IBST=2:"REVIEWED",IBST=3:"AUTHORIZED",IBST=4:"PRINTED",IBST=7:"CANCELLED",1:"")
"RTN","IBOA31",45,0)
 W ?112,$P("NON-PAYMENT/ZERO^ADMIT - DISCHARGE^INTERIM - FIRST^INTERIM - CONTINUING^INTERIM - LAST^LATE CHARGE(S) ONLY^ADJUSTMENT OF PRIOR^REPLACEMENT OF PRIOR","^",(IBTF+1))
"RTN","IBOA31",46,0)
 ; - print remaining outpatient visit dates
"RTN","IBOA31",47,0)
 S IBOPD=$O(^DGCR(399,IBIFN,"OP",0)) Q:'IBOPD
"RTN","IBOA31",48,0)
 F  S IBOPD=$O(^DGCR(399,IBIFN,"OP",IBOPD)) Q:'IBOPD  D  Q:IBQUIT
"RTN","IBOA31",49,0)
 . D:($Y>(IOSL-5)) HDR Q:IBQUIT  W !?56,$$DAT1^IBOUTL(IBOPD)
"RTN","IBOA31",50,0)
 Q
"RTN","IBOA31",51,0)
 ;
"RTN","IBOA31",52,0)
HDR I $E(IOST,1,2)["C-" D PAUSE Q:IBQUIT
"RTN","IBOA31",53,0)
HDR1 S IBPAG=IBPAG+1 W:$E(IOST,1,2)["C-"!(IBPAG>1) @IOF
"RTN","IBOA31",54,0)
 W "List of all Bills for ",$P(IBN,"^"),"  SSN: ",$P(IBN,"^",2),"  ",?(IOM-31),IBNOW,"  PAGE ",IBPAG
"RTN","IBOA31",55,0)
 W !,"BILL",?13,"DATE",?57,"DATE OF",?65,"STATEMENT  STATEMENT  AMOUNT"
"RTN","IBOA31",56,0)
 W !,"NO.         PRINTED  ACTION/RATE TYPE   CLASSIFICATION    CARE   "
"RTN","IBOA31",57,0)
 W $S(IBIBRX=1:"FR/FL DT   TO/RL DT",1:"FROM DATE   TO DATE")
"RTN","IBOA31",58,0)
 W "  COLLECTED STATUS          TIMEFRAME OF BILL"
"RTN","IBOA31",59,0)
 W !,IBLINE
"RTN","IBOA31",60,0)
 W:IBIBRX !,?55,"'*' = outpt visit on same day as Rx fill date",!,IBLINE
"RTN","IBOA31",61,0)
 Q
"RTN","IBOA31",62,0)
 ;
"RTN","IBOA31",63,0)
PAUSE S IBX1="" R:$E(IOST,1,2)["C-" !!!,"Enter ""^"" to quit, or return to continue",IBX1:DTIME S IBQUIT=$S(IBX1["^":1,1:0) Q
"RTN","IBOA31",64,0)
 ;
"RTN","IBOA31",65,0)
END K ^UTILITY($J)
"RTN","IBOA31",66,0)
 ;***
"RTN","IBOA31",67,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBOA31" D T1^%ZOSV ;stop rt clock
"RTN","IBOA31",68,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBOA31",69,0)
 D END^IBCBB1
"RTN","IBOA31",70,0)
 K IBIFN1,IBQUIT,IBX1,IBDT,IBCNT,IBN,DFN,IBIFN,IBLINE,IBNOW,IBPAG,IBOPD,IBIBRX,DIRUT,DUOUT,DTOUT,X,Y
"RTN","IBOA31",71,0)
 K IBRDT,IBRF,IBRX
"RTN","IBOA31",72,0)
 D ^%ZISC G EN
"RTN","IBOA32")
0^9^B6792943^B6461221
"RTN","IBOA32",1,0)
IBOA32 ;ALB/CPM - PRINT ALL BILLS FOR A PATIENT (CON'T) ;28-JAN-92
"RTN","IBOA32",2,0)
 ;;2.0; INTEGRATED BILLING ;**7,95,347,433**;21-MAR-94;Build 36
"RTN","IBOA32",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBOA32",4,0)
 ;
"RTN","IBOA32",5,0)
 ;MAP TO DGCRA32
"RTN","IBOA32",6,0)
 ;
"RTN","IBOA32",7,0)
 ; Print out IB Actions onto the list.
"RTN","IBOA32",8,0)
 D:($Y>(IOSL-5)) HDR^IBOA31 Q:IBQUIT
"RTN","IBOA32",9,0)
 N IBND,IBND1,X,IBX,IENS,IBRXN,IBRX,IBRF,IBRDT
"RTN","IBOA32",10,0)
 S IBND=$G(^IB($E(IBIFN,1,$L(IBIFN)-1),0)),IBND1=$G(^(1))
"RTN","IBOA32",11,0)
 S (IBRXN,IBRX,IBRF,IBRDT,IBX)=0
"RTN","IBOA32",12,0)
 I $P(IBND,"^",4)["52:" S IBRXN=$P($P(IBND,"^",4),":",2),IBRX=$P($P(IBND,"^",8),"-"),IBRF=$P($P(IBND,"^",4),":",3)
"RTN","IBOA32",13,0)
 I IBRF>0 S IBRDT=$$SUBFILE^IBRXUTL(+IBRXN,IBRF,52,.01)
"RTN","IBOA32",14,0)
 E  S IBRDT=$$FILE^IBRXUTL(+IBRXN,22),IBX=$$APPT^IBCU3(IBRDT,DFN)
"RTN","IBOA32",15,0)
 W !,$S($P(IBND,"^",11)]"":$P($P(IBND,"^",11),"-",2),$P(IBND,"^",5)=99:"",$P(IBND,"^",5)=10:"",1:"Pending")
"RTN","IBOA32",16,0)
 W ?12,$$DAT1^IBOUTL($S($P(IBND,"^",11)="":"",$P(IBND,"^",5)>2&($P(IBND,"^",5)'=99):$P(IBND1,"^",4)\1,1:""))
"RTN","IBOA32",17,0)
 S X=$P($P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^")," ",2,99)
"RTN","IBOA32",18,0)
 W ?21,$E($P(X," ",1,$L(X," ")-1),1,17)
"RTN","IBOA32",19,0)
 W ?41,$S($P(IBND,"^",4)["350:":$E($P(IBND,"^",8),1,14),$P(IBND,"^",3)<7:"Rx:"_IBRX_$S(IBRF>0:"("_IBRF_")",1:""),$P(IBND1,"^",5):"CHAMPVA SUBSIST",1:"AUT MEANS TEST")
"RTN","IBOA32",20,0)
 W:IBX=1 ?55,"*"
"RTN","IBOA32",21,0)
 W ?56,$$DAT1^IBOUTL(-IBDT)
"RTN","IBOA32",22,0)
 W ?66,$$DAT1^IBOUTL($S(IBRXN>0:IBRDT,$P(IBND,"^",14):$P(IBND,"^",14),1:$P(IBND1,"^",2)\1))
"RTN","IBOA32",23,0)
 W ?75,$$DAT1^IBOUTL($S($P(IBND,"^",15):$P(IBND,"^",15),1:$P(IBND1,"^",2)\1))
"RTN","IBOA32",24,0)
 W ?91,"N/A",?95,$E($P($G(^IBE(350.21,+$P(IBND,"^",5),0)),"^",2),1,17)
"RTN","IBOA32",25,0)
 Q
"RTN","IBOA32",26,0)
 ;
"RTN","IBOA32",27,0)
UTIL ; Gather all IB Actions for a patient.
"RTN","IBOA32",28,0)
 N DATE,IBN,X,A,B,C,D,E,IBNX
"RTN","IBOA32",29,0)
 S IBN=0 F  S IBN=$O(^IB("C",DFN,IBN)) Q:'IBN  S X=$G(^IB(IBN,0)) D:X
"RTN","IBOA32",30,0)
 . I 'IBIBRX,$E($G(^IBE(350.1,+$P(X,"^",3),0)),1,3)="PSO" Q
"RTN","IBOA32",31,0)
 . Q:$P(X,"^",8)["ADMISSION"
"RTN","IBOA32",32,0)
 . Q:'$D(^IB("APDT",IBN))
"RTN","IBOA32",33,0)
 . S (C,D)="",C=$O(^IB("APDT",IBN,C)),D=$O(^IB("APDT",IBN,C,D))
"RTN","IBOA32",34,0)
 . S E=$P($G(^IB(D,0)),U,3)
"RTN","IBOA32",35,0)
 . S A=$P($G(^IBE(350.1,E,0)),U,5)
"RTN","IBOA32",36,0)
 . S IBNX=$S(A=2:$P($Q(^IB("APDT",IBN,C,D)),")",1),A=3:$P($Q(^IB("APDT",IBN,C,D)),")",1),1:IBN)
"RTN","IBOA32",37,0)
 . I (A=2)!(A=3) D
"RTN","IBOA32",38,0)
 .. I IBNX["[""" S IBNX="^"_$P(IBNX,"]",2)
"RTN","IBOA32",39,0)
 . I $P(IBNX,",",4)>0 S IBNX=$P(IBNX,",",4)
"RTN","IBOA32",40,0)
 . S DATE=$P($G(^IB(+$P(X,"^",16),0)),"^",17)
"RTN","IBOA32",41,0)
 . S:'DATE DATE=$P($G(^IB(IBNX,1)),"^",5)
"RTN","IBOA32",42,0)
 . S:'DATE DATE=$P($G(^IB(IBNX,1)),"^",2)\1
"RTN","IBOA32",43,0)
 . S:DATE ^UTILITY($J,-DATE,IBNX_"X")=""
"RTN","IBOA32",44,0)
 Q
"RTN","IBOLK")
0^7^B18563160^B17698535
"RTN","IBOLK",1,0)
IBOLK ;ALB/AAS - INTEGRATED BILLING - DISPLAY BY BILL NUMBER ;6-MAR-91
"RTN","IBOLK",2,0)
 ;;2.0; INTEGRATED BILLING ;**199,420,433**;21-MAR-94;Build 36
"RTN","IBOLK",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBOLK",4,0)
 ;
"RTN","IBOLK",5,0)
% ;
"RTN","IBOLK",6,0)
 ;***
"RTN","IBOLK",7,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBOLK" D T1^%ZOSV ;stop rt clock
"RTN","IBOLK",8,0)
 ;S XRTL=$ZU(0),XRTN="IBOLK-1" D T0^%ZOSV ;start rt clock
"RTN","IBOLK",9,0)
 N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBOLK",10,0)
 S DIC("A")="Select CHARGE ID or PATIENT NAME: ",DIC="^PRCA(430,",DIC(0)="AEQM" D ^DIC K DIC G END1:+Y<1 S IBIL=$P(Y,"^",2)
"RTN","IBOLK",11,0)
 ; user needs to be able to look-up any iteration ie. K600111 or K600111-01
"RTN","IBOLK",12,0)
 ;S IBIFN=$O(^DGCR(399,"B",$P(IBIL,"-",2),0))
"RTN","IBOLK",13,0)
 S IBIFN=$O(^DGCR(399,"B",$P(IBIL,"-",2,3),0))
"RTN","IBOLK",14,0)
 I '$D(^IB("ABIL",IBIL)),'IBIFN W !!,"Billing has no Record of this Charge ID.",! G %
"RTN","IBOLK",15,0)
 ;
"RTN","IBOLK",16,0)
BRIEF R !,"(B)rief or (F)ull Inquiry: B// ",X:DTIME G:X="^"!('$T) END1 S:X="" X="B" S X=$E(X)
"RTN","IBOLK",17,0)
 I "BFbf"'[X D  G BRIEF
"RTN","IBOLK",18,0)
 . W !!?5,"Enter: '<CR>'  -  To select the Brief Inquiry."
"RTN","IBOLK",19,0)
 . W !?12,"'F'     -  To select the Full Inquiry.  This option will"
"RTN","IBOLK",20,0)
 . W !?23,"include the Address Inquiry, and more detailed"
"RTN","IBOLK",21,0)
 . W !?23,"information for Pharmacy Co-Pay bills."
"RTN","IBOLK",22,0)
 . W !?12,"'^'     -  To quit this option.",!
"RTN","IBOLK",23,0)
 W $S("Bb"[X:"   BRIEF",1:"   FULL") S IBFULL="Ff"[X
"RTN","IBOLK",24,0)
 I IBIFN S IBAC=8,IBQUIT=0
"RTN","IBOLK",25,0)
 ;
"RTN","IBOLK",26,0)
DEV W ! S %ZIS="QM",%ZIS("A")="Output Device: " D ^%ZIS G:POP END
"RTN","IBOLK",27,0)
 I $D(IO("Q")) D  D ^%ZTLOAD K IO("Q") D HOME^%ZIS W ! G %
"RTN","IBOLK",28,0)
 . S ZTDESC="IB Print Actions by Bill Number"
"RTN","IBOLK",29,0)
 . S ZTRTN=$S(IBIFN:"VIEW^IBCNQ",1:"EN^IBOLK")
"RTN","IBOLK",30,0)
 . S ZTSAVE("IBFULL")="",ZTSAVE("IBIL")="",ZTSAVE("IBIFN")=""
"RTN","IBOLK",31,0)
 . I IBIFN F I="IBAC","IBQUIT" S ZTSAVE(I)=""
"RTN","IBOLK",32,0)
 ;
"RTN","IBOLK",33,0)
 U IO
"RTN","IBOLK",34,0)
 ;***
"RTN","IBOLK",35,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBOLK" D T1^%ZOSV ;stop rt clock
"RTN","IBOLK",36,0)
 I 'IBIFN D EN G %
"RTN","IBOLK",37,0)
 D VIEW^IBCNQ,Q^IBCNQ,END1 G %
"RTN","IBOLK",38,0)
 ;
"RTN","IBOLK",39,0)
EN ;  -Entry to display IB Action data for an AR Bill number
"RTN","IBOLK",40,0)
 ;  -Input   IBIL = external form of bill number, ie 500-K10001
"RTN","IBOLK",41,0)
 ;           IBFULL = 1 for full profile logic, 0 for brief description
"RTN","IBOLK",42,0)
 ;***
"RTN","IBOLK",43,0)
 ;S XRTL=$ZU(0),XRTN="IBOLK-2" D T0^%ZOSV ;start rt clock
"RTN","IBOLK",44,0)
 S IBN=$O(^IB("ABIL",IBIL,"")) G:'$D(^IB(IBN,0)) ENQ
"RTN","IBOLK",45,0)
 S IBTOTL=0,IBQUIT="",IBPAG=0 D NOW^%DTC S IBHDT=$$DAT2^IBOUTL($E(%,1,12)) D HDR
"RTN","IBOLK",46,0)
 ;
"RTN","IBOLK",47,0)
 S IBN="" F IBI=0:0 S IBN=$O(^IB("ABIL",IBIL,IBN)) Q:'IBN  I $D(^IB(IBN,0)) D LINE Q:IBQUIT
"RTN","IBOLK",48,0)
 I 'IBQUIT D TOTAL,PAUSE,^IBOLK1:IBFULL&('IBQUIT)
"RTN","IBOLK",49,0)
ENQ D END Q
"RTN","IBOLK",50,0)
 ;
"RTN","IBOLK",51,0)
LINE ;  -find data for one line, write line, accumulate totals
"RTN","IBOLK",52,0)
 I '$D(IBTRAN),$Y>(IOSL-5) D PAUSE Q:IBQUIT  D HDR1
"RTN","IBOLK",53,0)
 S IBND=^IB(IBN,0),IBND1=$G(^(1))
"RTN","IBOLK",54,0)
 I IBFULL,$D(^IBE(350.1,+$P(IBND,"^",3),30)),+$P(IBND,"^",4)=52 W ! S X1=$P($P($P(IBND,"^",4),";",1),":",2),X2=$P($P($P(IBND,"^",4),";",2),":",2),X=X1_"^"_$S(X2:X2,1:0) X ^(30)
"RTN","IBOLK",55,0)
 S IBTYP=$G(^IBE(350.1,+$P(IBND,"^",3),0)),IBSEQNO=$P(IBTYP,"^",5)
"RTN","IBOLK",56,0)
 W ! S Y=$P($P(IBND1,"^",2),".",1) D DT^DIQ
"RTN","IBOLK",57,0)
 W ?15,$E($P($P(IBTYP,"^")," ",2,99),1,20),?37,$E($P(IBND,"^",8),1,20),?60,$J($P(IBND,"^",6),5)
"RTN","IBOLK",58,0)
 S IBCHRG=$P(IBND,"^",7) I IBSEQNO=2 S IBCHRG=(-IBCHRG) ;cancel types are decrease adjustments
"RTN","IBOLK",59,0)
 S X=IBCHRG,X2="2$",X3=10 D COMMA^%DTC W ?69,X
"RTN","IBOLK",60,0)
 S IBTOTL=IBTOTL+IBCHRG
"RTN","IBOLK",61,0)
 I $P(IBND,"^",10),IBSEQNO=2 W !,?5,"Charge Removal Reason: ",$S($D(^IBE(350.3,$P(IBND,"^",10),0)):$P(^(0),"^"),1:"UNKNOWN")
"RTN","IBOLK",62,0)
 Q
"RTN","IBOLK",63,0)
 ;
"RTN","IBOLK",64,0)
HDR S IBND=^IB(IBN,0),DFN=+$P(IBND,"^",2),IBNAME=$$PT^IBEFUNC(DFN)
"RTN","IBOLK",65,0)
HDR1 S IBPAG=IBPAG+1 I $E(IOST,1,2)["C-"!(IBPAG>1) W @IOF,*13
"RTN","IBOLK",66,0)
 ;W $E($P(IBNAME,"^"),1,20),"   ",$P(IBNAME,"^",2),?38,IBIL,?51,IBHDT,?72,"PAGE: ",IBPAG
"RTN","IBOLK",67,0)
 W $E($P(IBNAME,"^"),1,20),"  ",$P(IBNAME,"^",2),?36,IBIL,?51,IBHDT,?72,"PAGE: ",IBPAG
"RTN","IBOLK",68,0)
 D DISP^IBARXEU(DFN,DT,2) W !
"RTN","IBOLK",69,0)
 W:'IBFULL !,"DATE",?15,"CHARGE TYPE",?37,"BRIEF DESCRIPTION",?62,"UNITS",?73,"CHARGE"
"RTN","IBOLK",70,0)
 S IBLINE="",$P(IBLINE,"=",IOM)="" W !,IBLINE K IBLINE
"RTN","IBOLK",71,0)
 Q
"RTN","IBOLK",72,0)
 ;
"RTN","IBOLK",73,0)
TOTAL W !?67,"------------" S X=IBTOTL,X2="2$",X3=12 D COMMA^%DTC
"RTN","IBOLK",74,0)
 W !,?67,X
"RTN","IBOLK",75,0)
 Q
"RTN","IBOLK",76,0)
 ;
"RTN","IBOLK",77,0)
PAUSE Q:$E(IOST,1,2)'["C-"
"RTN","IBOLK",78,0)
 F IBJ=$Y:1:(IOSL-4) W !
"RTN","IBOLK",79,0)
 S DIR(0)="E" D ^DIR K DIR I $D(DIRUT)!($D(DUOUT)) S IBQUIT=1 K DIRUT,DTOUT,DUOUT
"RTN","IBOLK",80,0)
 Q
"RTN","IBOLK",81,0)
 ;
"RTN","IBOLK",82,0)
END1 K IBFULL
"RTN","IBOLK",83,0)
END W !
"RTN","IBOLK",84,0)
 ;***
"RTN","IBOLK",85,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBOLK" D T1^%ZOSV ;stop rt clock
"RTN","IBOLK",86,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBOLK",87,0)
 K X,X2,X3,Y,DFN,IBIFN,IBAC,I,IB,IBIL,IBI,IBJ,IBNAME,IBLINE,IBN,IBND,IBND1,IBCHRG,IBSEQNO,IBTYP,IBTOTL,ZTSK,IBHDT,IBPAG,IBQUIT,DN,D0,DUOUT,DTOUT,VA,VADM,VAERR
"RTN","IBOLK",88,0)
 D ^%ZISC
"RTN","IBOLK",89,0)
 Q
"RTN","IBOLK",90,0)
 ;
"RTN","IBOLK",91,0)
ENF ;  -entry point for AR to print full profile for IB actions for
"RTN","IBOLK",92,0)
 ;   an ar transaction number.
"RTN","IBOLK",93,0)
 ;  -input   x = ar transaction number ($p(^ib(ibn,0),u,12)
"RTN","IBOLK",94,0)
 ;
"RTN","IBOLK",95,0)
 S IBFULL=1
"RTN","IBOLK",96,0)
 ;
"RTN","IBOLK",97,0)
ENB ;  -entry point for AR to print brief profile for IB actions for
"RTN","IBOLK",98,0)
 ;   an ar transaction number.
"RTN","IBOLK",99,0)
 ;  -input   x = ar transaction number
"RTN","IBOLK",100,0)
 ;
"RTN","IBOLK",101,0)
 S IBTOTL=0,IBPAG=0,IBQUIT="" S:'$D(IBFULL) IBFULL=0
"RTN","IBOLK",102,0)
 S IBTRAN=X
"RTN","IBOLK",103,0)
 S IBN="" F  S IBN=$O(^IB("AT",IBTRAN,IBN)) Q:IBN=""  D LINE
"RTN","IBOLK",104,0)
 K D0,DN,X,X2,X3,Y,IBFULL,IBTOTL,IBPAG,IBQUIT,IBTRAN,IBN,IBND,IBND1,IBSEQNO,IBTYP,IBCHRG
"RTN","IBOLK",105,0)
 Q
"VER")
8.0^22.0
"^DD",399,399,.01,0)
BILL NUMBER^FXI^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:X'?.ANP X I $D(X) K:$E(X)=" " X I $D(X) K:$L(X)>10!($L(X)<7) X
"^DD",399,399,.01,1,0)
^.1
"^DD",399,399,.01,1,1,0)
399^B
"^DD",399,399,.01,1,1,1)
S ^DGCR(399,"B",$E(X,1,30),DA)=""
"^DD",399,399,.01,1,1,2)
K ^DGCR(399,"B",$E(X,1,30),DA)
"^DD",399,399,.01,1,3,0)
^^TRIGGER^399^1
"^DD",399,399,.01,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,1)="" I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC X ^DD(399,.01,1,3,1.4)
"^DD",399,399,.01,1,3,1.4)
S DIH=$G(^DGCR(399,DIV(0),"S")),DIV=X S $P(^("S"),U,1)=DIV,DIH=399,DIG=1 D ^DICR
"^DD",399,399,.01,1,3,2)
Q
"^DD",399,399,.01,1,3,"CREATE CONDITION")
DATE ENTERED=""
"^DD",399,399,.01,1,3,"CREATE VALUE")
TODAY
"^DD",399,399,.01,1,3,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.01,1,3,"DT")
3040614
"^DD",399,399,.01,1,3,"FIELD")
#1
"^DD",399,399,.01,1,4,0)
^^TRIGGER^399^2
"^DD",399,399,.01,1,4,1)
X ^DD(399,.01,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=$S(($D(DUZ)#2):DUZ,1:"") X ^DD(399,.01,1,4,1.4)
"^DD",399,399,.01,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,2),X=X S X=X=""
"^DD",399,399,.01,1,4,1.4)
S DIH=$G(^DGCR(399,DIV(0),"S")),DIV=X S $P(^("S"),U,2)=DIV,DIH=399,DIG=2 D ^DICR
"^DD",399,399,.01,1,4,2)
Q
"^DD",399,399,.01,1,4,"CREATE CONDITION")
INTERNAL(#2)=""
"^DD",399,399,.01,1,4,"CREATE VALUE")
S X=$S(($D(DUZ)#2):DUZ,1:"")
"^DD",399,399,.01,1,4,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.01,1,4,"DT")
3040614
"^DD",399,399,.01,1,4,"FIELD")
#2
"^DD",399,399,.01,1,5,0)
^^TRIGGER^399^164
"^DD",399,399,.01,1,5,1)
X ^DD(399,.01,1,5,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P(Y(1),U,14),X=X S DIU=X K Y S X=DIV S X=$S($D(^IBE(350.9,1,1)):$P(^(1),U,6),1:"") X ^DD(399,.01,1,5,1.4)
"^DD",399,399,.01,1,5,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P(Y(1),U,14)=""
"^DD",399,399,.01,1,5,1.4)
S DIH=$G(^DGCR(399,DIV(0),"U")),DIV=X S $P(^("U"),U,14)=DIV,DIH=399,DIG=164 D ^DICR
"^DD",399,399,.01,1,5,2)
Q
"^DD",399,399,.01,1,5,"%D",0)
^^2^2^3040614^
"^DD",399,399,.01,1,5,"%D",1,0)
This will automatically store the default BC/BS PROVIDER # from the
"^DD",399,399,.01,1,5,"%D",2,0)
IB SITE PARAMETERS file into the BC/BS PROVIDER # field for this bill.
"^DD",399,399,.01,1,5,"CREATE CONDITION")
#164=""
"^DD",399,399,.01,1,5,"CREATE VALUE")
S X=$S($D(^IBE(350.9,1,1)):$P(^(1),U,6),1:"")
"^DD",399,399,.01,1,5,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.01,1,5,"DT")
3040614
"^DD",399,399,.01,1,5,"FIELD")
#164
"^DD",399,399,.01,1,6,0)
^^TRIGGER^399^.13
"^DD",399,399,.01,1,6,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV S X=1 S DIH=$G(^DGCR(399,DIV(0),0)),DIV=X S $P(^(0),U,13)=DIV,DIH=399,DIG=.13 D ^DICR
"^DD",399,399,.01,1,6,2)
Q
"^DD",399,399,.01,1,6,"CREATE VALUE")
S X=1
"^DD",399,399,.01,1,6,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.01,1,6,"DT")
3040614
"^DD",399,399,.01,1,6,"FIELD")
#.13
"^DD",399,399,.01,1,7,0)
^^TRIGGER^399^.19
"^DD",399,399,.01,1,7,1)
X ^DD(399,.01,1,7,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,19),X=X S DIU=X K Y S X=DIV S X=3 S DIH=$G(^DGCR(399,DIV(0),0)),DIV=X S $P(^(0),U,19)=DIV,DIH=399,DIG=.19 D ^DICR
"^DD",399,399,.01,1,7,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P($G(^IBE(353,+$P(Y(1),U,19),0)),U)=""
"^DD",399,399,.01,1,7,2)
Q
"^DD",399,399,.01,1,7,3)
DO NOT DELETE
"^DD",399,399,.01,1,7,"%D",0)
^^1^1^3060927^
"^DD",399,399,.01,1,7,"%D",1,0)
Sets the bill's form type to a 3 (UB) when the bill is created.
"^DD",399,399,.01,1,7,"CREATE CONDITION")
FORM TYPE=""
"^DD",399,399,.01,1,7,"CREATE VALUE")
S X=3
"^DD",399,399,.01,1,7,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.01,1,7,"DT")
3060927
"^DD",399,399,.01,1,7,"FIELD")
FORM TYPE
"^DD",399,399,.01,3)
Enter the unique bill number for this billing episode [7-10 characters].
"^DD",399,399,.01,4)

"^DD",399,399,.01,21,0)
^.001^7^7^3100712^^^^
"^DD",399,399,.01,21,1,0)
This is the unique bill number assigned to this billing episode.
"^DD",399,399,.01,21,2,0)
The bill numbers are determined from entries in the AR BILL NUMBER file.
"^DD",399,399,.01,21,3,0)
New bill numbers consist of 7 characters (Example: K000001).  Bill
"^DD",399,399,.01,21,4,0)
numbers for bills that have been cancelled in Integrated Billing (IB)
"^DD",399,399,.01,21,5,0)
during the process of correcting errors in the original bill, consist
"^DD",399,399,.01,21,6,0)
of 10 characters, the original bill plus a hyphen and an incremental  
"^DD",399,399,.01,21,7,0)
number (Example: K000001-01).
"^DD",399,399,.01,"DT")
3100714
"BLD",7702,6)
^415
**END**
**END**
