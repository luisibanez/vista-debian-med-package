Released IB*2*437 SEQ #409
Extracted from mail message
**KIDS**:IB*2.0*437^

**INSTALL NAME**
IB*2.0*437
"BLD",8171,0)
IB*2.0*437^INTEGRATED BILLING^0^3110127^y
"BLD",8171,1,0)
^^6^6^3100817^^^^
"BLD",8171,1,1,0)
Add Third Party Pharmacy Prescription administrative fee charge to the
"BLD",8171,1,2,0)
patient bill with the following only Rate Type names of Rate Type File #399.3:
"BLD",8171,1,3,0)
   Reimbursable Ins.
"BLD",8171,1,4,0)
   No Fault Ins.
"BLD",8171,1,5,0)
   Tort Feasor
"BLD",8171,1,6,0)
   Workers' Comp.
"BLD",8171,4,0)
^9.64PA^^0
"BLD",8171,6.3)
11
"BLD",8171,"ABNS",0)
^9.66A^^
"BLD",8171,"ABPKG")
n
"BLD",8171,"INIT")
POSTINS^IB20P437
"BLD",8171,"KRN",0)
^9.67PA^779.2^20
"BLD",8171,"KRN",.4,0)
.4
"BLD",8171,"KRN",.401,0)
.401
"BLD",8171,"KRN",.402,0)
.402
"BLD",8171,"KRN",.403,0)
.403
"BLD",8171,"KRN",.5,0)
.5
"BLD",8171,"KRN",.84,0)
.84
"BLD",8171,"KRN",3.6,0)
3.6
"BLD",8171,"KRN",3.8,0)
3.8
"BLD",8171,"KRN",9.2,0)
9.2
"BLD",8171,"KRN",9.8,0)
9.8
"BLD",8171,"KRN",9.8,"NM",0)
^9.68A^7^6
"BLD",8171,"KRN",9.8,"NM",1,0)
IBNCPDP1^^0^B104141348
"BLD",8171,"KRN",9.8,"NM",3,0)
IB20P437^^0^B1253003
"BLD",8171,"KRN",9.8,"NM",4,0)
IB3PSOU^^0^B19316373
"BLD",8171,"KRN",9.8,"NM",5,0)
IBNCPDPU^^0^B73774762
"BLD",8171,"KRN",9.8,"NM",6,0)
IBTUBO2^^0^B33667876
"BLD",8171,"KRN",9.8,"NM",7,0)
IBJDB21^^0^B68099575
"BLD",8171,"KRN",9.8,"NM","B","IB20P437",3)

"BLD",8171,"KRN",9.8,"NM","B","IB3PSOU",4)

"BLD",8171,"KRN",9.8,"NM","B","IBJDB21",7)

"BLD",8171,"KRN",9.8,"NM","B","IBNCPDP1",1)

"BLD",8171,"KRN",9.8,"NM","B","IBNCPDPU",5)

"BLD",8171,"KRN",9.8,"NM","B","IBTUBO2",6)

"BLD",8171,"KRN",19,0)
19
"BLD",8171,"KRN",19.1,0)
19.1
"BLD",8171,"KRN",101,0)
101
"BLD",8171,"KRN",409.61,0)
409.61
"BLD",8171,"KRN",771,0)
771
"BLD",8171,"KRN",779.2,0)
779.2
"BLD",8171,"KRN",870,0)
870
"BLD",8171,"KRN",8989.51,0)
8989.51
"BLD",8171,"KRN",8989.52,0)
8989.52
"BLD",8171,"KRN",8994,0)
8994
"BLD",8171,"KRN","B",.4,.4)

"BLD",8171,"KRN","B",.401,.401)

"BLD",8171,"KRN","B",.402,.402)

"BLD",8171,"KRN","B",.403,.403)

"BLD",8171,"KRN","B",.5,.5)

"BLD",8171,"KRN","B",.84,.84)

"BLD",8171,"KRN","B",3.6,3.6)

"BLD",8171,"KRN","B",3.8,3.8)

"BLD",8171,"KRN","B",9.2,9.2)

"BLD",8171,"KRN","B",9.8,9.8)

"BLD",8171,"KRN","B",19,19)

"BLD",8171,"KRN","B",19.1,19.1)

"BLD",8171,"KRN","B",101,101)

"BLD",8171,"KRN","B",409.61,409.61)

"BLD",8171,"KRN","B",771,771)

"BLD",8171,"KRN","B",779.2,779.2)

"BLD",8171,"KRN","B",870,870)

"BLD",8171,"KRN","B",8989.51,8989.51)

"BLD",8171,"KRN","B",8989.52,8989.52)

"BLD",8171,"KRN","B",8994,8994)

"BLD",8171,"QUES",0)
^9.62^^
"BLD",8171,"REQB",0)
^9.611^2^2
"BLD",8171,"REQB",1,0)
IB*2.0*411^2
"BLD",8171,"REQB",2,0)
IB*2.0*434^2
"BLD",8171,"REQB","B","IB*2.0*411",1)

"BLD",8171,"REQB","B","IB*2.0*434",2)

"INIT")
POSTINS^IB20P437
"MBREQ")
0
"PKG",49,-1)
1^1
"PKG",49,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",49,20,0)
^9.402P^1^1
"PKG",49,20,1,0)
2^^IBAXDR
"PKG",49,20,1,1)

"PKG",49,20,"B",2,1)

"PKG",49,22,0)
^9.49I^1^1
"PKG",49,22,1,0)
2.0^2940321^2960627
"PKG",49,22,1,"PAH",1,0)
437^3110127
"PKG",49,22,1,"PAH",1,1,0)
^^6^6^3110127
"PKG",49,22,1,"PAH",1,1,1,0)
Add Third Party Pharmacy Prescription administrative fee charge to the
"PKG",49,22,1,"PAH",1,1,2,0)
patient bill with the following only Rate Type names of Rate Type File #399.3:
"PKG",49,22,1,"PAH",1,1,3,0)
   Reimbursable Ins.
"PKG",49,22,1,"PAH",1,1,4,0)
   No Fault Ins.
"PKG",49,22,1,"PAH",1,1,5,0)
   Tort Feasor
"PKG",49,22,1,"PAH",1,1,6,0)
   Workers' Comp.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","IB20P437")
0^3^B1253003^n/a
"RTN","IB20P437",1,0)
IB20P437 ;WOIFO/PLT-Patch IB*2.0*437 Environment Check/Pre/Post Initial ;8/17/10  10:21
"RTN","IB20P437",2,0)
 ;;2.0;INTEGRATED BILLING;**437**;21-MAR-94;Build 11
"RTN","IB20P437",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IB20P437",4,0)
 QUIT  ;invalid entry
"RTN","IB20P437",5,0)
 ;
"RTN","IB20P437",6,0)
ENVCHK ;environment check of patch installation
"RTN","IB20P437",7,0)
 ;reserved, not in use
"RTN","IB20P437",8,0)
 QUIT
"RTN","IB20P437",9,0)
 ;
"RTN","IB20P437",10,0)
PREINS ;pre-install of patche installation
"RTN","IB20P437",11,0)
 ;reserved, not in use
"RTN","IB20P437",12,0)
 QUIT
"RTN","IB20P437",13,0)
 ;
"RTN","IB20P437",14,0)
POSTINS ;post-install of patch installation
"RTN","IB20P437",15,0)
 N IBRATY,IBEFFDT,IBADFE,IBDISP,IBADJUST
"RTN","IB20P437",16,0)
 D MES^XPDUTL("Patch Post-Install starts.")
"RTN","IB20P437",17,0)
 ;update out-patient pharmacy admini/disp fee & adj change in file#363
"RTN","IB20P437",18,0)
 ;set default values
"RTN","IB20P437",19,0)
 S IBRATY="",IBEFFDT="03/18/2011",IBADFE="",IBDISP="11.40"
"RTN","IB20P437",20,0)
 S IBADJUST=""
"RTN","IB20P437",21,0)
 I IBADJUST="" S IBADJUST="S X=X+"_(+IBDISP+IBADFE)
"RTN","IB20P437",22,0)
 ;ibraty=rate type name of file #399.3^rate type name^rate type name...
"RTN","IB20P437",23,0)
 ;   ="" for all-reimburs ins., no fault ins., tort feasor, works' comp.
"RTN","IB20P437",24,0)
 ;ibeffdt=effective external date (mm/dd/yyyy)
"RTN","IB20P437",25,0)
 ;ibadfe=administrative fee (ddd.cc)
"RTN","IB20P437",26,0)
 ;ibdisp=dispensing fee (ddd.cc)
"RTN","IB20P437",27,0)
 ;ibadjust=adjustment mumps code
"RTN","IB20P437",28,0)
 D ENT^IB3PSOU(IBRATY,IBEFFDT,IBADFE,IBDISP,IBADJUST)
"RTN","IB20P437",29,0)
 D MES^XPDUTL("Patch Post-Install is done!")
"RTN","IB20P437",30,0)
 QUIT
"RTN","IB20P437",31,0)
 ;
"RTN","IB3PSOU")
0^4^B19316373^n/a
"RTN","IB3PSOU",1,0)
IB3PSOU ;WOIFO/PLT-Outpatient Pharmacy Administrative Fee Change Update ;8/17/10  10:24
"RTN","IB3PSOU",2,0)
 ;;2.0;INTEGRATED BILLING;**437**;21-MAR-94;Build 11
"RTN","IB3PSOU",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IB3PSOU",4,0)
 QUIT  ;invalid entry
"RTN","IB3PSOU",5,0)
 ; Procedure updates rate schedules for default rate types or types
"RTN","IB3PSOU",6,0)
 ; specified in IBRATY by inactivating currently active rate
"RTN","IB3PSOU",7,0)
 ; schedules with date (IBDFFDT-1 ) that contain either RX Cost or
"RTN","IB3PSOU",8,0)
 ; TL Fill charge sets.  Procedure adds new rate schedules for the
"RTN","IB3PSOU",9,0)
 ; rate types defined, setting the activation date to IBDFFDT and
"RTN","IB3PSOU",10,0)
 ; updating any defined Fees or adjustment.  When rate schedules
"RTN","IB3PSOU",11,0)
 ; updated by this procedure also contain additional charge sets
"RTN","IB3PSOU",12,0)
 ; other than RX Cost or TL Fill then a separate rate schedule is
"RTN","IB3PSOU",13,0)
 ; created with those additional charge sets and the original fees
"RTN","IB3PSOU",14,0)
 ; and adjustments are maintained.
"RTN","IB3PSOU",15,0)
 ;
"RTN","IB3PSOU",16,0)
 ; Default Rate Types:  REIMBURSABLE INS., NO FAULT INS., TORT 
"RTN","IB3PSOU",17,0)
 ; FEASOR, WORKERS' COMP.
"RTN","IB3PSOU",18,0)
 ;
"RTN","IB3PSOU",19,0)
 ;Input parameters:
"RTN","IB3PSOU",20,0)
 ;
"RTN","IB3PSOU",21,0)
 ;  IBRATY:  (optional) rate type names separated by ^.  If defined
"RTN","IB3PSOU",22,0)
 ;           use these rate types instead of default types.
"RTN","IB3PSOU",23,0)
 ;  IBDFFDT: (required)  Effective date in form mm/dd/yyyy for new rate 
"RTN","IB3PSOU",24,0)
 ;           schedules.
"RTN","IB3PSOU",25,0)
 ;  IBADFE:  (optional)    not currently in use.
"RTN","IB3PSOU",26,0)
 ;  IBDISP:  (required) Dispense Fee: to contain the new annual 
"RTN","IB3PSOU",27,0)
 ;           administrative fee for rate schedules.
"RTN","IB3PSOU",28,0)
 ;  IBADJUST: (optional) if defined must be MUMPS code to define a
"RTN","IB3PSOU",29,0)
 ; unique adjustment to the rate schedule.  If not defined default
"RTN","IB3PSOU",30,0)
 ; adjustment is S X = X + $G(IBADFE) + $G(IBDISP)
"RTN","IB3PSOU",31,0)
 ;
"RTN","IB3PSOU",32,0)
 ;ibraty=rate type name of file #399.3^rate type name^rate type name...
"RTN","IB3PSOU",33,0)
 ;   =""for all-reimbursable ins., no fault ins., tort feasor, works' comp.
"RTN","IB3PSOU",34,0)
 ;ibeffdt=effective external date (mm/dd/yyyy)
"RTN","IB3PSOU",35,0)
 ;ibadfe=administrative fee (ddd.cc)
"RTN","IB3PSOU",36,0)
 ;ibdisp=dispensing fee (ddd.cc)
"RTN","IB3PSOU",37,0)
 ;ibadjust=adjustment mumps code
"RTN","IB3PSOU",38,0)
ENT(IBRATY,IBEFFDT,IBADFE,IBDISP,IBADJUST) ;update admin/disp fee and adjustment of file #363
"RTN","IB3PSOU",39,0)
 N A,B,X,Y,IBA,IBB,IBC,IBINADT,IBRFRC,IBRCOST
"RTN","IB3PSOU",40,0)
 S:IBRATY="" IBRATY="REIMBURSABLE INS.^NO FAULT INS.^WORKERS' COMP.^TORT FEASOR"
"RTN","IB3PSOU",41,0)
 S IBRATY="^"_IBRATY_"^"
"RTN","IB3PSOU",42,0)
 S X=IBEFFDT D ^%DT S IBEFFDT=Y,IBINADT=$$FMADD^XLFDT(IBEFFDT,-1)
"RTN","IB3PSOU",43,0)
 ;get iens of 'tl-rx fill' and 'rx cost' of charge set file #363.1
"RTN","IB3PSOU",44,0)
 S (IBRFRC,IBRCOST)="^" F A="TL-RX FILL","RX COST" S B=0 F B=$O(^IBE(363.1,"B",A,B)) QUIT:'B  S IBRFRC=IBRFRC_B_"^" S:A="RX COST" IBRCOST=IBRCOST_B_"^"
"RTN","IB3PSOU",45,0)
 ;loop through charge set iens of 'ti-rx til' and'rx cost' in ibrfrc
"RTN","IB3PSOU",46,0)
 F IBA=2:1 S IBB=$P(IBRFRC,U,IBA) QUIT:'IBB  D
"RTN","IB3PSOU",47,0)
 . N IBIEN,IBRTNM
"RTN","IB3PSOU",48,0)
 . ;find rate schedule with no inactive date, effective date<ibeffdt, rate type contained in ibraty
"RTN","IB3PSOU",49,0)
 . S IBIEN=0 F  S IBIEN=$O(^IBE(363,"C",IBB,IBIEN)) QUIT:'IBIEN  S A=^IBE(363,IBIEN,0),IBRTNM=$P(^DGCR(399.3,$P(A,U,2),0),U) I '$P(A,U,6),$P(A,U,5)<IBEFFDT,$P(A,U,2),IBRATY[("^"_IBRTNM_"^") D
"RTN","IB3PSOU",50,0)
 .. ;copy-to new entry, and copy-to new entry again if the copy-from entry has charge set other than 'tr-rf fill' and 'rx cost'
"RTN","IB3PSOU",51,0)
 .. S IBC=$$COPY(IBIEN,"") S:IBC IBC=$$COPY(IBIEN,1)
"RTN","IB3PSOU",52,0)
 .. ;inactivate the copy-from entry.
"RTN","IB3PSOU",53,0)
 .. D INACT(IBIEN)
"RTN","IB3PSOU",54,0)
 .. QUIT
"RTN","IB3PSOU",55,0)
 . QUIT
"RTN","IB3PSOU",56,0)
 QUIT
"RTN","IB3PSOU",57,0)
 ;
"RTN","IB3PSOU",58,0)
 ;
"RTN","IB3PSOU",59,0)
 ;ibien=the ien of the copy-from rate schedule file #363
"RTN","IB3PSOU",60,0)
 ;ibc="" copy and update adm, disp, adj including only charge sets for 'tr-rf fill' and 'rx cost'
"RTN","IB3PSOU",61,0)
 ;   =1 copy and no update including all other charge set only
"RTN","IB3PSOU",62,0)
COPY(IBIEN,IBC) ;extrinsic function ="" or 1
"RTN","IB3PSOU",63,0)
 N IBD,IBE,IBNIEN,IBRS0,IBRS1,IBRS10,IBRS11,IBRSCS
"RTN","IB3PSOU",64,0)
 ;copy-to a new entry from ibien containing charge set iba
"RTN","IB3PSOU",65,0)
 S IBRS0=^IBE(363,IBIEN,0),IBRS1=$G(^(1)),IBRS10=$G(^(10)),IBRS11=$G(^(11)) D  QUIT:'$G(IBNIEN)
"RTN","IB3PSOU",66,0)
 . ;add new entry of file #363
"RTN","IB3PSOU",67,0)
 . N DO,DIC,DA,X,DINUM,Y,DTOUT,DUOUT
"RTN","IB3PSOU",68,0)
 . N DIE,DA,DR
"RTN","IB3PSOU",69,0)
 . S DIC="^IBE(363,",DIC(0)="F",X=$P(IBRS0,U)
"RTN","IB3PSOU",70,0)
 . ;copy data fields with new administration fee
"RTN","IB3PSOU",71,0)
 . S DIC("DR")=".02////"_$P(IBRS0,U,2)_";.03////"_$P(IBRS0,U,3)_";.04////"_$P(IBRS0,U,4)_";.05////"_IBEFFDT
"RTN","IB3PSOU",72,0)
 . ;reserve adm, disp values
"RTN","IB3PSOU",73,0)
 . I IBC S DIC("DR")=DIC("DR")_";1.01////"_$P(IBRS1,U)_";1.02////"_$P(IBRS1,U,2)
"RTN","IB3PSOU",74,0)
 . ;update adm, disp values
"RTN","IB3PSOU",75,0)
 . I 'IBC S DIC("DR")=DIC("DR")_";1.01////"_$G(IBDISP)_";1.02////"_$G(IBADFE)
"RTN","IB3PSOU",76,0)
 . D FILE^DICN I Y<0 D MES^XPDUTL("The Rate Schedule "_X_" update failed") QUIT
"RTN","IB3PSOU",77,0)
 . S IBNIEN=+Y
"RTN","IB3PSOU",78,0)
 . ;set adjustment value
"RTN","IB3PSOU",79,0)
 . S DIE="^IBE(363,",DA=IBNIEN,DR="10////"_$S('IBC:$G(IBADJUST),1:IBRS10)
"RTN","IB3PSOU",80,0)
 . D ^DIE
"RTN","IB3PSOU",81,0)
 . QUIT
"RTN","IB3PSOU",82,0)
 ;copy/edit charge set multiple.
"RTN","IB3PSOU",83,0)
 S IBRSCS=0 F  S IBRSCS=$O(^IBE(363,IBIEN,11,IBRSCS)) QUIT:'IBRSCS  S IBD=^(IBRSCS,0) D
"RTN","IB3PSOU",84,0)
 . N DO,DIC,DA,X,DINUM,Y,DTOUT,DUOUT
"RTN","IB3PSOU",85,0)
 . I IBC,IBRFRC[("^"_$P(IBD,U)_"^") QUIT
"RTN","IB3PSOU",86,0)
 . I 'IBC,IBRFRC'[("^"_$P(IBD,U)_"^") S IBE=1 QUIT
"RTN","IB3PSOU",87,0)
 . ;change charge set 'tr-rf fill' to 'rx cost'
"RTN","IB3PSOU",88,0)
 . I 'IBC,IBRCOST'[("^"_$P(IBD,U)_"^") S $P(IBD,U)=$P(IBRCOST,U,2),$P(IBD,U,2)=1
"RTN","IB3PSOU",89,0)
 . ;not 'rx cost' the auto add is null
"RTN","IB3PSOU",90,0)
 . S:IBC $P(IBD,U,2)=""
"RTN","IB3PSOU",91,0)
 . S DIC="^IBE(363,"_IBNIEN_",11,",DIC(0)="F",DA(1)=IBNIEN,X=$P(IBD,U),DINUM=IBRSCS,DIC("DR")=".02////"_$P(IBD,U,2)
"RTN","IB3PSOU",92,0)
 . D FILE^DICN I Y<0 D MES^XPDUTL("The Rate Schedule "_$P(IBRS0,U)_"'s Charge Set "_X_" update failed")
"RTN","IB3PSOU",93,0)
 . QUIT
"RTN","IB3PSOU",94,0)
 QUIT $G(IBE)
"RTN","IB3PSOU",95,0)
 ;
"RTN","IB3PSOU",96,0)
 ;ibien=the ien of the file #363
"RTN","IB3PSOU",97,0)
INACT(IBIEN) ;inactivate the copy-from rate schedule
"RTN","IB3PSOU",98,0)
 N D,D0,DI,DIC,DQ,DIE,DA,DR,DTOUT
"RTN","IB3PSOU",99,0)
 S DIE="^IBE(363,",DA=IBIEN,DR=".06////"_IBINADT D ^DIE
"RTN","IB3PSOU",100,0)
 QUIT
"RTN","IB3PSOU",101,0)
 ;
"RTN","IBJDB21")
0^7^B68099575^B54088092
"RTN","IBJDB21",1,0)
IBJDB21 ;ALB/RB - REASONS NOT BILLABLE REPORT (COMPILE) ;19-JUN-00
"RTN","IBJDB21",2,0)
 ;;2.0;INTEGRATED BILLING;**123,159,185,399,437**;21-MAR-94;Build 11
"RTN","IBJDB21",3,0)
 ;
"RTN","IBJDB21",4,0)
EN ; - Entry point from IBJDB2.
"RTN","IBJDB21",5,0)
 K ^TMP("IBJDB2",$J),IB,IBE,ENCTYP,EPIEN,IBADMDT,RELBILL
"RTN","IBJDB21",6,0)
 I '$G(IBXTRACT) D
"RTN","IBJDB21",7,0)
 . F X=1:1:4 I IBSEL[X S IBE(X)=IBEPS(X) ; Set episodes for report.
"RTN","IBJDB21",8,0)
 ;
"RTN","IBJDB21",9,0)
 ; - Print the header line for the Excel spreadsheet
"RTN","IBJDB21",10,0)
 I $G(IBEXCEL) D PHDL
"RTN","IBJDB21",11,0)
 ;
"RTN","IBJDB21",12,0)
 ; - Compile reason not billable (RNB) data for episode.
"RTN","IBJDB21",13,0)
 S IBRNB=0 F  S IBRNB=$S(IBSRNB'="A":$O(IBSRNB(IBRNB)),1:$O(^IBE(356.8,IBRNB))) Q:'IBRNB  D
"RTN","IBJDB21",14,0)
 .S IB0=0 F  S IB0=$O(^IBT(356,"AR",IBRNB,IB0)) Q:'IB0  D
"RTN","IBJDB21",15,0)
 ..S IBN0=$G(^IBT(356,IB0,0)),IBN1=$G(^IBT(356,IB0,1)) Q:'IBN0!('IBN1)
"RTN","IBJDB21",16,0)
 ..S IBEP=+$P(IBN0,U,18) I IBSEL'[IBEP Q  ; Get episode.
"RTN","IBJDB21",17,0)
 ..S (IBRNB1,IBSORT1)=$P($G(^IBE(356.8,IBRNB,0)),U)
"RTN","IBJDB21",18,0)
 ..;
"RTN","IBJDB21",19,0)
 ..; - Get valid date entered/episode date and amount for report.
"RTN","IBJDB21",20,0)
 ..S IBEPD=+$P(IBN0,U,6)\1,IBDEN=+IBN1\1
"RTN","IBJDB21",21,0)
 ..S IBDT=$S($E(IBD)="D":IBDEN,1:IBEPD)
"RTN","IBJDB21",22,0)
 ..Q:IBDT<IBBDT!(IBDT>IBEDT)
"RTN","IBJDB21",23,0)
 ..S IBAMT=$$AMOUNT(IBEP,IB0)
"RTN","IBJDB21",24,0)
 ..;
"RTN","IBJDB21",25,0)
 ..; - Get division, if necessary.
"RTN","IBJDB21",26,0)
 ..I IBSD D  Q:'VAUTD&('$D(VAUTD(IBDIV)))
"RTN","IBJDB21",27,0)
 ...S IBDIV=$$DIV^IBJD1(IB0)
"RTN","IBJDB21",28,0)
 ..E  S IBDIV=$S($G(IBEXCEL):+$$PRIM^VASITE(),1:0)
"RTN","IBJDB21",29,0)
 ..;
"RTN","IBJDB21",30,0)
 ..; - Provider & Specialty
"RTN","IBJDB21",31,0)
 ..S (IBPRV,IBSPC)="",IBQT=0
"RTN","IBJDB21",32,0)
 ..I IBEP=1!(IBEP=2) D  I IBQT Q
"RTN","IBJDB21",33,0)
 ...S IBPRSP=$$PRVSPC(IBEP,IB0)
"RTN","IBJDB21",34,0)
 ...I IBSPRV'="A",'$D(IBSPRV(+IBPRSP)) S IBQT=1 Q
"RTN","IBJDB21",35,0)
 ...I IBEP=1,IBSISP'="A",'$D(IBSISP(+$P(IBPRSP,U,3))) S IBQT=1 Q
"RTN","IBJDB21",36,0)
 ...I IBEP=2,IBSOSP'="A",'$D(IBSOSP(+$P(IBPRSP,U,3))) S IBQT=1 Q
"RTN","IBJDB21",37,0)
 ...S IBPRV=$S($P(IBPRSP,U,2)'="":$P(IBPRSP,U,2),1:"** UNKNOWN **")
"RTN","IBJDB21",38,0)
 ...S IBSPC=$S($P(IBPRSP,U,4)'="":$P(IBPRSP,U,4),1:"** UNKNOWN **")
"RTN","IBJDB21",39,0)
 ..;
"RTN","IBJDB21",40,0)
 ..; - Get remaining data for detailed report.
"RTN","IBJDB21",41,0)
 ..S DFN=+$P(IBN0,U,2)
"RTN","IBJDB21",42,0)
 ..D DEM^VADPT S IBPT=$E(VADM(1),1,25),IBSSN=$P(VADM(2),U)
"RTN","IBJDB21",43,0)
 ..S DIC="^VA(200,",DA=+$P(IBN1,U,4),DR=".01",DIQ="IBCLK" D EN^DIQ1
"RTN","IBJDB21",44,0)
 ..S IBCLK=$E($G(IBCLK(200,DA,.01)),1,20)
"RTN","IBJDB21",45,0)
 ..I ($P(IBN0,U,18)=2)&($$EXTERNAL^DILFD(356,.19,"",$P(IBN0,U,19))["72 HOUR RULE") D
"RTN","IBJDB21",46,0)
 ...S IBADMDT=$$ADMDT^IBTUTL5(DFN,$P(IBN0,U,6))
"RTN","IBJDB21",47,0)
 ..E  S IBADMDT=""
"RTN","IBJDB21",48,0)
 ..S ENCTYP=$P(^IBE(356.6,$P(IBN0,U,18),0),U,3) S EPDT=$E($P(IBN0,U,6),1,7)
"RTN","IBJDB21",49,0)
 ..S EPIEN=$S(ENCTYP=3:$P(IBN0,U,8),ENCTYP=4:$P(IBN0,U,9),1:"")
"RTN","IBJDB21",50,0)
 ..S RELBILL=$$RELBIL^IBTUTL5(EPIEN,EPDT,DFN,ENCTYP)
"RTN","IBJDB21",51,0)
 ..;
"RTN","IBJDB21",52,0)
 ..; - Get totals for summary.
"RTN","IBJDB21",53,0)
 ..I '$D(IB(IBDIV,IBEP,IBRNB)) S IB(IBDIV,IBEP,IBRNB)="0^0"
"RTN","IBJDB21",54,0)
 ..S $P(IB(IBDIV,IBEP,IBRNB),U)=$P(IB(IBDIV,IBEP,IBRNB),U)+1
"RTN","IBJDB21",55,0)
 ..S $P(IB(IBDIV,IBEP,IBRNB),U,2)=$P(IB(IBDIV,IBEP,IBRNB),U,2)+IBAMT
"RTN","IBJDB21",56,0)
 ..I IBRPT="S" Q
"RTN","IBJDB21",57,0)
 ..;
"RTN","IBJDB21",58,0)
 ..S IBSORT1=$S(IBSORT="P":IBPRV,IBSORT="S":IBSPC,1:IBSORT1)
"RTN","IBJDB21",59,0)
 ..S:IBSORT1="" IBSORT1=" "
"RTN","IBJDB21",60,0)
 ..;
"RTN","IBJDB21",61,0)
 ..I $G(IBEXCEL) D  Q
"RTN","IBJDB21",62,0)
 ...W !,$E($P($G(^DG(40.8,IBDIV,0)),U),1,25),U
"RTN","IBJDB21",63,0)
 ...W $S(IBEP<4:$E(IBE(IBEP)),1:"H"),U,IBPT,U,$E(IBSSN,6,10),U
"RTN","IBJDB21",64,0)
 ...W $E($$INS^IBJD1(+$P(IBN0,U,2),IBEPD),1,25),U
"RTN","IBJDB21",65,0)
 ...W $$DT^IBJD(IBEPD,1),U,$$DT^IBJD(IBDEN,1),U
"RTN","IBJDB21",66,0)
 ...W $$DT^IBJD($P(IBN1,U,3),1),U,IBCLK,U,IBADMDT,U,$E(IBRNB1,1,25),U
"RTN","IBJDB21",67,0)
 ...W $E(IBPRV,1,25),U,$E(IBSPC,1,25),U,IBAMT,U
"RTN","IBJDB21",68,0)
 ...I RELBILL>0 F X=2:1:$P(RELBILL,";",1)+1 W $P(RELBILL,";",X)_" "
"RTN","IBJDB21",69,0)
 ...I RELBILL<0 W ""
"RTN","IBJDB21",70,0)
 ...W U,$P(IBN1,U,8)
"RTN","IBJDB21",71,0)
 ..;
"RTN","IBJDB21",72,0)
 ..S X=IBEPD_U_IBDEN_U_$P(IBN1,U,3)_U_IBCLK_U_IBRNB1
"RTN","IBJDB21",73,0)
 ..S X=X_U_IBPRV_U_IBSPC_U_IBAMT_U_$E($P(IBN1,U,8),1,50)_U_IBADMDT_U_RELBILL
"RTN","IBJDB21",74,0)
 ..S ^TMP("IBJDB2",$J,IBDIV,IBEP,IBSORT1,IBPT_"@@"_$E(IBSSN,6,10))=$$INS^IBJD1(+$P(IBN0,U,2),IBEPD)
"RTN","IBJDB21",75,0)
 ..S ^TMP("IBJDB2",$J,IBDIV,IBEP,IBSORT1,IBPT_"@@"_$E(IBSSN,6,10),+IBN0)=X
"RTN","IBJDB21",76,0)
 ;
"RTN","IBJDB21",77,0)
 I '$G(IBEXCEL) D EN^IBJDB22 ; Print report(s).
"RTN","IBJDB21",78,0)
 ;
"RTN","IBJDB21",79,0)
ENQ K ^TMP("IBJDB2")
"RTN","IBJDB21",80,0)
 K DA,DIC,DIQ,DR,IB,IB0,IBAMT,IBCLK,IBDEN,IBDIV,IBDT,IBE,IBEP,IBEPD,IBI
"RTN","IBJDB21",81,0)
 K IBN0,IBN1,IBN2,IBPRSP,IBPRV,IBPT,IBQT,IBRNB,IBRNB1,IBSORT1,IBSPC
"RTN","IBJDB21",82,0)
 K IBSSN,VADM,X1,X2
"RTN","IBJDB21",83,0)
 Q
"RTN","IBJDB21",84,0)
 ;
"RTN","IBJDB21",85,0)
AMOUNT(EPS,CLM) ; Return the Amount not billed 
"RTN","IBJDB21",86,0)
 ; Input: EPS - Episode(1=Inpatient,2=Outpatient,3=Prosthet.,4=Prescr.)
"RTN","IBJDB21",87,0)
 ;        CLM - Pointer to Claim Tracking File (#356)
"RTN","IBJDB21",88,0)
 ;Output: AMOUNT not billed
"RTN","IBJDB21",89,0)
 ;
"RTN","IBJDB21",90,0)
 N ADM,ADMDT,AMOUNT,BLBS,BLDT,CPT,CPTLST,DA,DR,DCHD,DFN,DIC,DIQ,DIV,DRG
"RTN","IBJDB21",91,0)
 N IBRX,ENC,ENCDT,EPDT,PFT,PRST,PTF,RIMB,VCPT,TTCST,X
"RTN","IBJDB21",92,0)
 ;
"RTN","IBJDB21",93,0)
 S AMOUNT=0,X=$G(^IBT(356,CLM,0))
"RTN","IBJDB21",94,0)
 S ENC=+$P(X,U,4)     ; Encounter    (Pointer to #409.68)
"RTN","IBJDB21",95,0)
 S ADM=+$P(X,U,5)     ; Admission    (Pointer to #405)
"RTN","IBJDB21",96,0)
 S PRST=+$P(X,U,9)    ; Prothetics   (Pointer to #660)
"RTN","IBJDB21",97,0)
 S EPDT=$P(X,U,6)     ; Episode Date (FM format)
"RTN","IBJDB21",98,0)
 S IBRX=+$P(X,U,8)
"RTN","IBJDB21",99,0)
 ;
"RTN","IBJDB21",100,0)
 ; - Assumes REIMBURSABLE INS. as the RATE TYPE
"RTN","IBJDB21",101,0)
 S RIMB=$O(^DGCR(399.3,"B","REIMBURSABLE INS.",0)) I 'RIMB S RIMB=8
"RTN","IBJDB21",102,0)
 ;
"RTN","IBJDB21",103,0)
 G @("AMT"_EPS)
"RTN","IBJDB21",104,0)
 ;
"RTN","IBJDB21",105,0)
AMT1 ; - Inpatient Charges
"RTN","IBJDB21",106,0)
 I 'ADM G QAMT
"RTN","IBJDB21",107,0)
 S X=$G(^DGPM(ADM,0)) G QAMT:X="" S PTF=$P(X,U,16) G QAMT:'PTF
"RTN","IBJDB21",108,0)
 S ADMDT=$P(X,U)\1,DFN=+$P(X,U,3)
"RTN","IBJDB21",109,0)
 I $P(X,U,17) S DCHD=$P($G(^DGPM(+$P(X,U,17),0)),U)\1
"RTN","IBJDB21",110,0)
 I '$G(DCHD) S DCHD=$$DT^XLFDT()
"RTN","IBJDB21",111,0)
 ;
"RTN","IBJDB21",112,0)
 K ^TMP($J,"IBCRC-PTF"),^TMP($J,"IBCRC-DIV"),^TMP($J,"IBCRC-INDT")
"RTN","IBJDB21",113,0)
 D PTF^IBCRBG(PTF) G QAMT:'$D(^TMP($J,"IBCRC-PTF"))
"RTN","IBJDB21",114,0)
 D PTFDV^IBCRBG(PTF) G QAMT:'$D(^TMP($J,"IBCRC-DIV"))
"RTN","IBJDB21",115,0)
 D BSLOS^IBCRBG(ADMDT,DCHD,1,ADM,0) G QAMT:'$D(^TMP($J,"IBCRC-INDT"))
"RTN","IBJDB21",116,0)
 ;
"RTN","IBJDB21",117,0)
 S BLDT=""
"RTN","IBJDB21",118,0)
 F  S BLDT=$O(^TMP($J,"IBCRC-INDT",BLDT)) Q:BLDT=""  D
"RTN","IBJDB21",119,0)
 .S X=^TMP($J,"IBCRC-INDT",BLDT)
"RTN","IBJDB21",120,0)
 .S BLBS=$P(X,U,2),DRG=$P(X,U,4),DIV=$P(X,U,5)
"RTN","IBJDB21",121,0)
 .;
"RTN","IBJDB21",122,0)
 .; - Tort Liable Charge (prior to 09/01/99)
"RTN","IBJDB21",123,0)
 .I BLDT<2990901 D  Q
"RTN","IBJDB21",124,0)
 ..S AMOUNT=AMOUNT+$$BICOST^IBCRCI(RIMB,1,BLDT,"INPATIENT BEDSECTION STAY",BLBS)
"RTN","IBJDB21",125,0)
 .;
"RTN","IBJDB21",126,0)
 .; - Reasonable Charges (on 09/01/99 or later)
"RTN","IBJDB21",127,0)
 .S AMOUNT=AMOUNT+$$BICOST^IBCRCI(RIMB,1,BLDT,"INPATIENT DRG",DRG,"",DIV,"",1)
"RTN","IBJDB21",128,0)
 ;
"RTN","IBJDB21",129,0)
 ; - Add the Professional Average Amount per Episode (Reason.Chg only)
"RTN","IBJDB21",130,0)
 I EPDT'<2990901 S AMOUNT=AMOUNT+$$AVG(EPDT)
"RTN","IBJDB21",131,0)
 ;
"RTN","IBJDB21",132,0)
 ; - Subtract the amount billed for this Episode
"RTN","IBJDB21",133,0)
 S AMOUNT=AMOUNT-$$CLAMT(DFN,EPDT,1)
"RTN","IBJDB21",134,0)
 ;
"RTN","IBJDB21",135,0)
 K ^TMP($J,"IBCRC-PTF"),^TMP($J,"IBCRC-DIV"),^TMP($J,"IBCRC-INDT")
"RTN","IBJDB21",136,0)
 ;
"RTN","IBJDB21",137,0)
 G QAMT
"RTN","IBJDB21",138,0)
 ;
"RTN","IBJDB21",139,0)
AMT2 ; - Outpatient Charges
"RTN","IBJDB21",140,0)
 S X=$$GETOE^SDOE(ENC),ENCDT=+$P(X,U),DFN=+$P(X,U,2),DIV=$P(X,U,11)
"RTN","IBJDB21",141,0)
 ;
"RTN","IBJDB21",142,0)
 ; - Tort Liable Charge (prior to 09/01/99)
"RTN","IBJDB21",143,0)
 I ENCDT<2990901 D  G QAMT
"RTN","IBJDB21",144,0)
 . S AMOUNT=+$$BICOST^IBCRCI(RIMB,3,ENCDT,"OUTPATIENT VISIT DATE")
"RTN","IBJDB21",145,0)
 ;
"RTN","IBJDB21",146,0)
 S AMOUNT=$$OPT^IBTUTL5(ENC,EPDT) G QAMT
"RTN","IBJDB21",147,0)
 ;
"RTN","IBJDB21",148,0)
AMT3 ; Prosthetic Charges
"RTN","IBJDB21",149,0)
 S AMOUNT=$$PRSAMT^IBTUTL5(EPDT,PRST) G:AMOUNT=0 QAMT
"RTN","IBJDB21",150,0)
 ;
"RTN","IBJDB21",151,0)
 S DIC="^RMPR(660,",DA=PRST,DR="14",DIQ="TTCST" D EN^DIQ1
"RTN","IBJDB21",152,0)
 S AMOUNT=+$G(TTCST(660,DA,14))
"RTN","IBJDB21",153,0)
 G QAMT
"RTN","IBJDB21",154,0)
 ;
"RTN","IBJDB21",155,0)
AMT4 ; - Prescription Charges 
"RTN","IBJDB21",156,0)
 ;
"RTN","IBJDB21",157,0)
 ; Protect Rx internal entry # before RXAMT call switches to RX number
"RTN","IBJDB21",158,0)
 N IBRXIEN S IBRXIEN=IBRX
"RTN","IBJDB21",159,0)
 ;
"RTN","IBJDB21",160,0)
 ; - Tort Liable Charge & Reasonable Charge (same source)
"RTN","IBJDB21",161,0)
 S AMOUNT=$$RXAMT^IBTUTL5(EPDT,IBRX) G:AMOUNT=0 QAMT
"RTN","IBJDB21",162,0)
 ;
"RTN","IBJDB21",163,0)
 ; Patch 437 update to call charge master with enough information
"RTN","IBJDB21",164,0)
 ; to lookup actual cost of prescription 
"RTN","IBJDB21",165,0)
 ;
"RTN","IBJDB21",166,0)
 N IBBI,IBRSNEW
"RTN","IBJDB21",167,0)
 ;
"RTN","IBJDB21",168,0)
 ; check charge master for the type of billing--VA Cost or not
"RTN","IBJDB21",169,0)
 S IBBI=$$EVNTITM^IBCRU3(+RIMB,3,"PRESCRIPTION FILL",EPDT,.IBRSNEW)
"RTN","IBJDB21",170,0)
 ;
"RTN","IBJDB21",171,0)
 S DFN=$$FILE^IBRXUTL(IBRXIEN,2)
"RTN","IBJDB21",172,0)
 I $G(DFN)>0&(IBBI["VA COST") D
"RTN","IBJDB21",173,0)
 .  N IBQTY,IBCOST,IBRFNUM,IBSUBND,IBFEE,IBRXNODE
"RTN","IBJDB21",174,0)
 .;  if this is a refill look up the refill info for cost and quantity
"RTN","IBJDB21",175,0)
 .  S IBRFNUM=$$RFLNUM^IBRXUTL(IBRXIEN,EPDT,"")
"RTN","IBJDB21",176,0)
 .  I IBRFNUM>0 D
"RTN","IBJDB21",177,0)
 ..    S IBSUBND=$$ZEROSUB^IBRXUTL(DFN,IBRXIEN,IBRFNUM)
"RTN","IBJDB21",178,0)
 ..    S IBQTY=$P($G(IBSUBND),U,4)
"RTN","IBJDB21",179,0)
 ..    S IBCOST=$P($G(IBSUBND),U,11)
"RTN","IBJDB21",180,0)
 .;
"RTN","IBJDB21",181,0)
 .;  if this was an original fill look up zero node for Rx info 
"RTN","IBJDB21",182,0)
 .  E  D
"RTN","IBJDB21",183,0)
 ..    S IBRXNODE=$$RXZERO^IBRXUTL(DFN,IBRXIEN)
"RTN","IBJDB21",184,0)
 .     S IBQTY=$P($G(IBRXNODE),U,7)
"RTN","IBJDB21",185,0)
 .     S IBCOST=$P($G(IBRXNODE),U,17)
"RTN","IBJDB21",186,0)
 .;
"RTN","IBJDB21",187,0)
 .  S IBRSNEW=+$O(IBRSNEW($P(IBBI,";"),0))
"RTN","IBJDB21",188,0)
 .  S AMOUNT=$J(+$$RATECHG^IBCRCC(+IBRSNEW,IBQTY*IBCOST,EPDT,.IBFEE),0,2)
"RTN","IBJDB21",189,0)
 E  D
"RTN","IBJDB21",190,0)
 .  S AMOUNT=+$$BICOST^IBCRCI(RIMB,3,EPDT,"PRESCRIPTION FILL")
"RTN","IBJDB21",191,0)
 ;
"RTN","IBJDB21",192,0)
 ;
"RTN","IBJDB21",193,0)
QAMT I AMOUNT<0 S AMOUNT=0
"RTN","IBJDB21",194,0)
 Q AMOUNT
"RTN","IBJDB21",195,0)
 ;
"RTN","IBJDB21",196,0)
CLAMT(DFN,EPDT,PT) ; Returns the Total Amount of Claims for Patient/Episode
"RTN","IBJDB21",197,0)
 ;
"RTN","IBJDB21",198,0)
 ; Input:  DFN - Pointer to the Patient File #2
"RTN","IBJDB21",199,0)
 ;        EPDT - Episode Date
"RTN","IBJDB21",200,0)
 ;          PT - 0=Outpatient, 1=Inpatient
"RTN","IBJDB21",201,0)
 ;
"RTN","IBJDB21",202,0)
 N CLAMT,CLM,DAY,IBD,X
"RTN","IBJDB21",203,0)
 S CLAMT=0,DAY=EPDT-1,CLM=""
"RTN","IBJDB21",204,0)
 F  S CLM=$O(^DGCR(399,"C",DFN,CLM)) Q:'CLM  D
"RTN","IBJDB21",205,0)
 .S X=$G(^DGCR(399,CLM,0))
"RTN","IBJDB21",206,0)
 .I $P($P(X,U,3),".")=$P(EPDT,".") D
"RTN","IBJDB21",207,0)
 ..S IBD=$$CKBIL^IBTUBOU(CLM,PT) Q:IBD=""
"RTN","IBJDB21",208,0)
 ..I '$P(IBD,U,3) Q  ; Not authorized
"RTN","IBJDB21",209,0)
 ..S CLAMT=CLAMT+$G(^DGCR(399,CLM,"U1"))
"RTN","IBJDB21",210,0)
 ;
"RTN","IBJDB21",211,0)
QCLAMT Q CLAMT
"RTN","IBJDB21",212,0)
 ;
"RTN","IBJDB21",213,0)
AVG(EPDT) ; Returns the Average Amount of Inpatient Professional per
"RTN","IBJDB21",214,0)
 ;         Number of Episodes for the previous 12 months
"RTN","IBJDB21",215,0)
 N AVG,M,Z
"RTN","IBJDB21",216,0)
 S AVG=0,M=EPDT\100*100
"RTN","IBJDB21",217,0)
 I '$D(^IBE(356.19,M,1)) S M=$O(^IBE(356.19,M),-1) I 'M G QAVG
"RTN","IBJDB21",218,0)
 S Z=$G(^IBE(356.19,M,1)) I $P(Z,U,12) S AVG=$P(Z,U,11)/$P(Z,U,12)
"RTN","IBJDB21",219,0)
QAVG Q $J(AVG,0,2)
"RTN","IBJDB21",220,0)
 ;
"RTN","IBJDB21",221,0)
PRVSPC(EPS,CLM) ; Return the Provider and the Specialty
"RTN","IBJDB21",222,0)
 ;  Input: EPS - Episode(1 = Inpatient OR 2 = Outpatient)
"RTN","IBJDB21",223,0)
 ;         CLM - Pointer to Claim Tracking File (#356)
"RTN","IBJDB21",224,0)
 ; Output: Provider Code (Pointer to #200) ^ Provider Name ^
"RTN","IBJDB21",225,0)
 ;         Specialty Code (Pointer to #40.7 or #45.7) ^ Specialty Name
"RTN","IBJDB21",226,0)
 ;
"RTN","IBJDB21",227,0)
 N ADM,DFN,ENC,PRI,PRS,PRV,PRVLST,SPC,STP,X,VAIN,VAINDT
"RTN","IBJDB21",228,0)
 ;
"RTN","IBJDB21",229,0)
 S X=$G(^IBT(356,CLM,0))
"RTN","IBJDB21",230,0)
 S DFN=$P(X,U,2),ENC=$P(X,U,4),ADM=$P(X,U,5),PRS=$P(X,U,8)
"RTN","IBJDB21",231,0)
 ;
"RTN","IBJDB21",232,0)
 S (PRV,SPC)="^"
"RTN","IBJDB21",233,0)
 I EPS=1,ADM D  G QPS  ; Inpatient
"RTN","IBJDB21",234,0)
 .S X=$G(^DGPM(ADM,0)),VAINDT=$P(X,U)\1 I 'VAINDT Q
"RTN","IBJDB21",235,0)
 .D INP^VADPT S PRV=$G(VAIN(11)),SPC=$G(VAIN(3))
"RTN","IBJDB21",236,0)
 .S:PRV="" PRV="^" S:SPC="" SPC="^"
"RTN","IBJDB21",237,0)
 ;
"RTN","IBJDB21",238,0)
 I EPS=2,ENC D  G QPS  ; Outpatient
"RTN","IBJDB21",239,0)
 .D GETPRV^SDOE(ENC,"PRVLST")
"RTN","IBJDB21",240,0)
 .S (X,PRI)=""
"RTN","IBJDB21",241,0)
 .F  S X=$O(PRVLST(X),-1) Q:X=""!PRI  D
"RTN","IBJDB21",242,0)
 ..N IBX S PRV=+PRVLST(X)
"RTN","IBJDB21",243,0)
 ..I $P(PRVLST(X),U,4)="P" S PRI=1 ; Primary provider
"RTN","IBJDB21",244,0)
 ..I PRV S PRV=PRV_U_$P($G(^VA(200,+PRV,0)),U)
"RTN","IBJDB21",245,0)
 ..S IBX=$$GETOE^SDOE(ENC),STP=$P(IBX,U,3)
"RTN","IBJDB21",246,0)
 ..I STP'="" S SPC=STP_U_$P($G(^DIC(40.7,STP,0)),U)
"RTN","IBJDB21",247,0)
 ;
"RTN","IBJDB21",248,0)
QPS Q (PRV_U_SPC)
"RTN","IBJDB21",249,0)
 ;
"RTN","IBJDB21",250,0)
PHDL ; - Print the header line for the Excel spreadsheet
"RTN","IBJDB21",251,0)
 N X
"RTN","IBJDB21",252,0)
 S X="Division^Svc^Patient^SSN^Insurance^Episode Dt^Dt Entered^Dt Lst Edit^"
"RTN","IBJDB21",253,0)
 S X=X_"Lst Edited By^Next Admission^RNB Cat^Provider^Specialty^Entry Amt^Related Bills^Comments"
"RTN","IBJDB21",254,0)
 W !,X
"RTN","IBJDB21",255,0)
 Q
"RTN","IBNCPDP1")
0^1^B104141348^B104112032
"RTN","IBNCPDP1",1,0)
IBNCPDP1 ;OAK/ELZ - PROCESSING FOR NEW RX REQUESTS ;5/22/08  15:24
"RTN","IBNCPDP1",2,0)
 ;;2.0;INTEGRATED BILLING;**223,276,339,363,383,405,384,411,434,437**;21-MAR-94;Build 11
"RTN","IBNCPDP1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBNCPDP1",4,0)
 ;
"RTN","IBNCPDP1",5,0)
 ;
"RTN","IBNCPDP1",6,0)
RX(DFN,IBD) ; pharmacy package call, passing in IBD by ref
"RTN","IBNCPDP1",7,0)
 ; this is called by PSO for all prescriptions issued, return is
"RTN","IBNCPDP1",8,0)
 ; a response to bill ECME or not with array for billing data elements
"RTN","IBNCPDP1",9,0)
 ;warning: back-billing flag:
"RTN","IBNCPDP1",10,0)
 ;if passed IBSCRES(IBRXN,IBFIL)=1
"RTN","IBNCPDP1",11,0)
 ; - then the SC Determination is just done by the IB clerk (billable)
"RTN","IBNCPDP1",12,0)
 ; IBD("PLAN") - is specified only if RX API is called for billing determination for 2ndary claim.
"RTN","IBNCPDP1",13,0)
 ;
"RTN","IBNCPDP1",14,0)
 ;clean up the list of non-answered SC/Env.indicators questions and INS
"RTN","IBNCPDP1",15,0)
 K IBD("SC/EI NO ANSW"),IBD("INS")
"RTN","IBNCPDP1",16,0)
 ;
"RTN","IBNCPDP1",17,0)
 N IBTRKR,IBARR,IBADT,IBRXN,IBFIL,IBTRKRN,IBRMARK,IBANY,IBX,IBT,IBINS,IBSAVE
"RTN","IBNCPDP1",18,0)
 N IBFEE,IBEABD,IBBI,IBIT,IBPRICE,IBRS,IBRT,IBTRN,IBCHG,IBERMSG,IBRXPOL,IBCNT,IBRES,IBNEEDS
"RTN","IBNCPDP1",19,0)
 ;
"RTN","IBNCPDP1",20,0)
 I '$G(DFN) S IBRES="0^No DFN" G RXQ
"RTN","IBNCPDP1",21,0)
 S IBRXN=+$G(IBD("IEN")) I 'IBRXN S IBRES="0^No Rx IEN" G RXQ
"RTN","IBNCPDP1",22,0)
 S IBFIL=+$G(IBD("FILL NUMBER"),-1) I IBFIL<0 S IBRES="0^No fill number" G RXQ
"RTN","IBNCPDP1",23,0)
 S IBD("QTY")=+$G(IBD("QTY")) I 'IBD("QTY") S IBRES="0^No Quantity" G RXQ
"RTN","IBNCPDP1",24,0)
 ;
"RTN","IBNCPDP1",25,0)
 S IBRES="0^Error"
"RTN","IBNCPDP1",26,0)
 S (IBEABD,IBADT)=+$G(IBD("FILL DATE"),DT)
"RTN","IBNCPDP1",27,0)
 ;
"RTN","IBNCPDP1",28,0)
 ; -- look up insurance for patient
"RTN","IBNCPDP1",29,0)
 D ALL^IBCNS1(DFN,"IBINS",1,IBADT,1)
"RTN","IBNCPDP1",30,0)
 ;
"RTN","IBNCPDP1",31,0)
 ; -- determine rate type
"RTN","IBNCPDP1",32,0)
 D
"RTN","IBNCPDP1",33,0)
 . I $G(IBD("RTYPE")),$G(IBD("PLAN")) S IBRT=+IBD("RTYPE") D  Q  ;Rate type was selected by the user for secondary or primary claims entered manually
"RTN","IBNCPDP1",34,0)
 . . S IBRT=IBRT_U_$$COSTTYP^IBNCPUT3(+IBD("RTYPE"),IBADT)
"RTN","IBNCPDP1",35,0)
 . S IBRT=$$RT^IBNCPDPU(DFN,IBADT,.IBINS)
"RTN","IBNCPDP1",36,0)
 ;
"RTN","IBNCPDP1",37,0)
 ; -- Gather claims tracking information if it exists
"RTN","IBNCPDP1",38,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBNCPDP1",39,0)
 ; date can't be before parameters
"RTN","IBNCPDP1",40,0)
 S $P(IBTRKR,U)=$S('$P(IBTRKR,U,4):0,+IBTRKR&(IBADT<+IBTRKR):0,1:IBADT)
"RTN","IBNCPDP1",41,0)
 ; already in claims tracking
"RTN","IBNCPDP1",42,0)
 S IBTRKRN=+$O(^IBT(356,"ARXFL",IBRXN,IBFIL,0))
"RTN","IBNCPDP1",43,0)
 ;
"RTN","IBNCPDP1",44,0)
 ; -- Check for TRICARE Inpatient - esg 8/5/10 IB*2*434
"RTN","IBNCPDP1",45,0)
 I $P(IBRT,U,3)="T",$$INP(DFN,IBRXN,IBFIL) D  G RXQ
"RTN","IBNCPDP1",46,0)
 . S IBRMARK="TRICARE INPATIENT/DISCHARGE"            ; reason not billable
"RTN","IBNCPDP1",47,0)
 . D CT                                               ; update/add claims tracking entry
"RTN","IBNCPDP1",48,0)
 . S IBRES=0_U_IBRMARK                                ; not ECME billable
"RTN","IBNCPDP1",49,0)
 . Q
"RTN","IBNCPDP1",50,0)
 ;
"RTN","IBNCPDP1",51,0)
 ;for secondary billing - skip claim tracking functionality
"RTN","IBNCPDP1",52,0)
 G:$G(IBD("RXCOB"))>1 SETINSUR
"RTN","IBNCPDP1",53,0)
 ;
"RTN","IBNCPDP1",54,0)
 ; -- claims tracking info
"RTN","IBNCPDP1",55,0)
 I IBTRKRN,$$PAPERBIL^IBNCPNB(IBTRKRN) S IBRES="0^Existing IB Bill in CT",IBD("NO ECME INSURANCE")=1 G RXQ
"RTN","IBNCPDP1",56,0)
 ; already billed as Tricare
"RTN","IBNCPDP1",57,0)
 I $D(^IBA(351.5,"B",IBRXN_";"_IBFIL)) S IBRES="0^Already billed under prior Tricare process",IBD("NO ECME INSURANCE")=1 G RXQ
"RTN","IBNCPDP1",58,0)
 ;
"RTN","IBNCPDP1",59,0)
 ; -- no pharmacy coverage, update ct if applicable, quit
"RTN","IBNCPDP1",60,0)
 I '$$PTCOV^IBCNSU3(DFN,IBADT,"PHARMACY",.IBANY) S IBRMARK=$S($G(IBANY):"SERVICE NOT COVERED",1:"NOT INSURED") D:$P(IBTRKR,U,4)=2 CT S IBRES="0^"_IBRMARK,IBD("NO ECME INSURANCE")=1 G RXQ
"RTN","IBNCPDP1",61,0)
 ;
"RTN","IBNCPDP1",62,0)
 ;  -- check for DEA SPECIAL HDLG
"RTN","IBNCPDP1",63,0)
 S IBDEA=$$DEA^IBNCPDP($G(IBD("DEA")),.IBRMARK) I 'IBDEA S IBRES=IBDEA D CT G RXQ
"RTN","IBNCPDP1",64,0)
 ;
"RTN","IBNCPDP1",65,0)
 ;retrieve indicators from file #52 and overwrite the indicators in IBD array
"RTN","IBNCPDP1",66,0)
 D GETINDIC^IBNCPUT2(+IBD("IEN"),.IBD)
"RTN","IBNCPDP1",67,0)
 ; -- process patient exemptions if any (if not already resolved)
"RTN","IBNCPDP1",68,0)
 I $G(IBD("SC/EI OVR"))'=1 D CL^SDCO21(DFN,IBADT,"",.IBARR)
"RTN","IBNCPDP1",69,0)
 ; check out exemptions
"RTN","IBNCPDP1",70,0)
 S IBNEEDS=0 ;flag will be set to 1 if at least one of the questions wasn't answered
"RTN","IBNCPDP1",71,0)
 I $G(IBD("SC/EI OVR"))'=1 I $D(IBARR)>9 F IBX=2:1 S IBT=$P($T(EXEMPT+IBX),";;",2) Q:IBT=""  D:$D(IBARR(+IBT))
"RTN","IBNCPDP1",72,0)
 . I $G(IBD($P(IBT,U,2)))=0 Q
"RTN","IBNCPDP1",73,0)
 . I $G(IBD($P(IBT,U,2))) S IBRMARK=$P(IBT,U,3) Q
"RTN","IBNCPDP1",74,0)
 . I '$G(IBSCRES(IBRXN,IBFIL)) S IBNEEDS=1 D
"RTN","IBNCPDP1",75,0)
 . . S IBD("SC/EI NO ANSW")=$S($G(IBD("SC/EI NO ANSW"))="":$P(IBT,U,2),1:$G(IBD("SC/EI NO ANSW"))_","_$P(IBT,U,2))
"RTN","IBNCPDP1",76,0)
 I '$D(IBRMARK),IBNEEDS=1 S IBRMARK="NEEDS SC DETERMINATION"
"RTN","IBNCPDP1",77,0)
 I $D(IBRMARK) D CT S IBRES="0^"_IBRMARK G RXQ
"RTN","IBNCPDP1",78,0)
 ; Clean-up the NEEDS SC DETERMINATION record if resolved
"RTN","IBNCPDP1",79,0)
 ; And check if it is non-billable in CT
"RTN","IBNCPDP1",80,0)
 I IBTRKRN D
"RTN","IBNCPDP1",81,0)
 . N IBNBR,IBNBRT
"RTN","IBNCPDP1",82,0)
 . S IBNBR=$P($G(^IBT(356,+IBTRKRN,0)),U,19) Q:'IBNBR
"RTN","IBNCPDP1",83,0)
 . S IBNBRT=$P($G(^IBE(356.8,IBNBR,0)),U) Q:IBNBRT=""
"RTN","IBNCPDP1",84,0)
 . ; if refill was deleted (not RX) and now the refill is re-entered
"RTN","IBNCPDP1",85,0)
 . ;use $$RXSTATUS^IBNCPRR instead of $G(^PSRX(IBRXN,"STA"))
"RTN","IBNCPDP1",86,0)
 . I IBNBRT="PRESCRIPTION DELETED",$$RXSTATUS^IBNCPRR(DFN,IBRXN)'=13 D  Q
"RTN","IBNCPDP1",87,0)
 . . N DIE,DA,DR
"RTN","IBNCPDP1",88,0)
 . . ; clean up REASON NOT BILLABLE and ADDITIONAL COMMENT
"RTN","IBNCPDP1",89,0)
 . . S DIE="^IBT(356,",DA=+IBTRKRN,DR=".19////@;1.08////@" D ^DIE
"RTN","IBNCPDP1",90,0)
 . ; Clean up NBR if released
"RTN","IBNCPDP1",91,0)
 . I IBNBRT="PRESCRIPTION NOT RELEASED" D:$G(IBD("RELEASE DATE"))  Q
"RTN","IBNCPDP1",92,0)
 . . N DIE,DA,DR
"RTN","IBNCPDP1",93,0)
 . . S DIE="^IBT(356,",DA=+IBTRKRN,DR=".19////@" D ^DIE
"RTN","IBNCPDP1",94,0)
 . ; Clean up 'Needs SC determ'
"RTN","IBNCPDP1",95,0)
 . I IBNBRT="NEEDS SC DETERMINATION" D  Q
"RTN","IBNCPDP1",96,0)
 . . N DIE,DA,DR
"RTN","IBNCPDP1",97,0)
 . . S DIE="^IBT(356,",DA=+IBTRKRN,DR=".19////@" D ^DIE
"RTN","IBNCPDP1",98,0)
 . S IBRMARK=IBNBRT
"RTN","IBNCPDP1",99,0)
 I $D(IBRMARK) S IBRES="0^Non-Billable in CT: "_IBRMARK G RXQ
"RTN","IBNCPDP1",100,0)
 ;
"RTN","IBNCPDP1",101,0)
SETINSUR ; -- setup insurance data for patient
"RTN","IBNCPDP1",102,0)
 ; Note: if more than one insurance with the same COB then the latest insurance occurance overrides the first one(s)
"RTN","IBNCPDP1",103,0)
 ; Exmp:
"RTN","IBNCPDP1",104,0)
 ; IBINS("S",1,1)=""
"RTN","IBNCPDP1",105,0)
 ; IBINS("S",1,3)="" <<--- this will be primary
"RTN","IBNCPDP1",106,0)
 ;
"RTN","IBNCPDP1",107,0)
 K IBERMSG    ; Error message
"RTN","IBNCPDP1",108,0)
 K IBRXPOL    ; Array of Rx policies found
"RTN","IBNCPDP1",109,0)
 S IBX=0 F  S IBX=$O(IBINS("S",IBX)) Q:'IBX  D
"RTN","IBNCPDP1",110,0)
 . S IBT=0 F  S IBT=$O(IBINS("S",IBX,IBT)) Q:'IBT  D
"RTN","IBNCPDP1",111,0)
 .. N IBDAT,IBPL,IBINSN,IBPIEN,IBY,IBZ
"RTN","IBNCPDP1",112,0)
 .. S IBZ=$G(IBINS(IBT,0)) Q:IBZ=""
"RTN","IBNCPDP1",113,0)
 .. S IBPL=$P(IBZ,U,18) ; plan
"RTN","IBNCPDP1",114,0)
 .. Q:'IBPL
"RTN","IBNCPDP1",115,0)
 .. Q:'$$PLCOV^IBCNSU3(IBPL,IBADT,3)  ; not a pharmacy plan
"RTN","IBNCPDP1",116,0)
 .. ;
"RTN","IBNCPDP1",117,0)
 .. I $G(IBD("PLAN")) Q:IBPL'=$G(IBD("PLAN"))  ;skip other plans if we call RX API for a specific plan (IBD("PLAN"))
"RTN","IBNCPDP1",118,0)
 .. ;
"RTN","IBNCPDP1",119,0)
 .. I '$G(IBD("PLAN")) I '$D(IBD("INS")),$P(IBRT,"^",3)="V",($P($G(^IBE(355.1,+$P($G(^IBA(355.3,+IBPL,0)),"^",9),0)),"^")["TRICARE"!($P($G(^(0)),"^")="CHAMPVA")) K IBINS Q  ;Tricare/ChampVa coverage for a Vet
"RTN","IBNCPDP1",120,0)
 .. ;
"RTN","IBNCPDP1",121,0)
 .. ; at this point we have found an Rx policy.  We'll count these up later by IBX.
"RTN","IBNCPDP1",122,0)
 .. S IBRXPOL(IBX,IBT)=""
"RTN","IBNCPDP1",123,0)
 .. ;
"RTN","IBNCPDP1",124,0)
 .. S IBINSN=$P($G(^DIC(36,+$G(^IBA(355.3,+IBPL,0)),0)),U) ; ins name
"RTN","IBNCPDP1",125,0)
 .. S IBPIEN=+$G(^IBA(355.3,+IBPL,6))
"RTN","IBNCPDP1",126,0)
 .. I 'IBPIEN S IBERMSG(IBX)="Plan not linked to the Payer" Q  ; Not linked
"RTN","IBNCPDP1",127,0)
 .. D STCHK^IBCNRU1(IBPIEN,.IBY)
"RTN","IBNCPDP1",128,0)
 .. I $E($G(IBY(1)))'="A" S IBERMSG(IBX)=$$ERMSG^IBNCPNB($P($G(IBY(6)),",")) Q  ; not active
"RTN","IBNCPDP1",129,0)
 .. ;
"RTN","IBNCPDP1",130,0)
 .. ; at this point we have a valid policy for this IBX
"RTN","IBNCPDP1",131,0)
 .. S IBERMSG(IBX)=""          ; no error message
"RTN","IBNCPDP1",132,0)
 .. S IBDAT=IBPL ; Plan IEN
"RTN","IBNCPDP1",133,0)
 .. S $P(IBDAT,U,2)=$G(IBY(2)) ; BIN
"RTN","IBNCPDP1",134,0)
 .. S $P(IBDAT,U,3)=$G(IBY(3)) ; PCN
"RTN","IBNCPDP1",135,0)
 .. S $P(IBDAT,U,4)=$P($G(^BPSF(9002313.92,+$P($G(IBY(5)),",",1),0)),U) ; Payer Sheet B1
"RTN","IBNCPDP1",136,0)
 .. S $P(IBDAT,U,5)=$P($G(IBINS(IBT,355.3)),U,4) ; Group ID
"RTN","IBNCPDP1",137,0)
 .. S $P(IBDAT,U,6)=$P(IBZ,U,2) ; Cardholder ID
"RTN","IBNCPDP1",138,0)
 .. S $P(IBDAT,U,7)=$P(IBZ,U,16) ; Patient Relationship Code
"RTN","IBNCPDP1",139,0)
 .. S $P(IBDAT,U,8)=$P($P($P(IBZ,U,17),",",2)," ") ; Cardholder First Name
"RTN","IBNCPDP1",140,0)
 .. S $P(IBDAT,U,9)=$P($P(IBZ,U,17),",") ; Cardholder Last Name
"RTN","IBNCPDP1",141,0)
 .. S $P(IBDAT,U,10)=$P($G(^DIC(36,+IBZ,.11)),U,5) ; State
"RTN","IBNCPDP1",142,0)
 .. S $P(IBDAT,U,11)=$P($G(^BPSF(9002313.92,+$P($G(IBY(5)),",",2),0)),U) ; Payer Sheet B2
"RTN","IBNCPDP1",143,0)
 .. S $P(IBDAT,U,12)=$P($G(^BPSF(9002313.92,+$P($G(IBY(5)),",",3),0)),U) ; Payer Sheet B3
"RTN","IBNCPDP1",144,0)
 .. S $P(IBDAT,U,13)=$G(IBY(4)) ; Software/Vendor Cert ID
"RTN","IBNCPDP1",145,0)
 .. S $P(IBDAT,U,14)=IBINSN ; Ins Name
"RTN","IBNCPDP1",146,0)
 .. S IBD("INS",IBX,1)=IBDAT
"RTN","IBNCPDP1",147,0)
 .. ;
"RTN","IBNCPDP1",148,0)
 .. S IBDAT=$P($G(IBINS(IBT,355.3)),"^",3) ;group name
"RTN","IBNCPDP1",149,0)
 .. S $P(IBDAT,U,2)=$$PHONE^IBNCPDP6(+IBZ) ;ins co ph 3
"RTN","IBNCPDP1",150,0)
 .. S $P(IBDAT,U,3)=$$GET1^DIQ(366.03,IBPIEN_",",.01) ;plan ID
"RTN","IBNCPDP1",151,0)
 .. S $P(IBDAT,U,4)=$S($P($G(^IBE(355.1,+$P($G(IBINS(IBT,355.3)),"^",9),0)),"^")="TRICARE":"T",1:"V") ; plan type
"RTN","IBNCPDP1",152,0)
 .. S $P(IBDAT,U,5)=+$G(^IBA(355.3,+IBPL,0)) ; insurance co ien
"RTN","IBNCPDP1",153,0)
 .. S $P(IBDAT,U,6)=$P(IBZ,U,20) ;(#.2) COB field of the (#.3121) insurance Type multiple of the Patient file (#2)
"RTN","IBNCPDP1",154,0)
 .. S IBD("INS",IBX,3)=IBDAT
"RTN","IBNCPDP1",155,0)
 .. Q
"RTN","IBNCPDP1",156,0)
 . Q
"RTN","IBNCPDP1",157,0)
 ;
"RTN","IBNCPDP1",158,0)
 ; Count the number of pharmacy insurance policies by IBX found up above
"RTN","IBNCPDP1",159,0)
 S IBX=0 F IBCNT=0:1 S IBX=$O(IBRXPOL(IBX)) Q:'IBX
"RTN","IBNCPDP1",160,0)
 ;
"RTN","IBNCPDP1",161,0)
 ; Determine the value of the IBX variable here.  This is basically the COB sequence# to be used.
"RTN","IBNCPDP1",162,0)
 ; If there is only 1 pharmacy policy or no pharmacy policies, then set IBX in this manner
"RTN","IBNCPDP1",163,0)
 I IBCNT'>1 D
"RTN","IBNCPDP1",164,0)
 . I $D(IBD("INS")) S IBX=+$O(IBD("INS",0))     ; use the only one in this array
"RTN","IBNCPDP1",165,0)
 . I '$D(IBD("INS")) S IBX=+$O(IBERMSG(0))      ; the only one here (or 0)
"RTN","IBNCPDP1",166,0)
 . Q
"RTN","IBNCPDP1",167,0)
 ;
"RTN","IBNCPDP1",168,0)
 ; If there are multiple pharmacy policies on file, then the COB field in the pt. policy must be used correctly
"RTN","IBNCPDP1",169,0)
 ;   and primary insurance must be at #1
"RTN","IBNCPDP1",170,0)
 I IBCNT>1 S IBX=1
"RTN","IBNCPDP1",171,0)
 ;
"RTN","IBNCPDP1",172,0)
 ; In all cases, if this variable is set, then use it
"RTN","IBNCPDP1",173,0)
 I $G(IBD("RXCOB"))>1 S IBX=$G(IBD("RXCOB"))
"RTN","IBNCPDP1",174,0)
 ;
"RTN","IBNCPDP1",175,0)
 ; Check insurance at IBX
"RTN","IBNCPDP1",176,0)
 I '$D(IBD("INS",IBX)),$G(IBERMSG(IBX))'="" S IBRES="0^Not ECME billable: "_IBERMSG(IBX),IBD("NO ECME INSURANCE")=1 G RXQ
"RTN","IBNCPDP1",177,0)
 I '$D(IBD("INS",IBX)) S IBRES="0^No Insurance ECME billable",IBD("NO ECME INSURANCE")=1 G RXQ
"RTN","IBNCPDP1",178,0)
 ;
"RTN","IBNCPDP1",179,0)
 ;for secondary billing - skip ROI functionality
"RTN","IBNCPDP1",180,0)
 G:$G(IBD("RXCOB"))>1 RATEPRIC
"RTN","IBNCPDP1",181,0)
 ; -- check drug for sensitive dx special handling code and ROI on file
"RTN","IBNCPDP1",182,0)
 I IBD("DEA")["U",$D(IBD("INS",1,3)) D  G:$D(IBRMARK) RXQ
"RTN","IBNCPDP1",183,0)
 . I '$$ROI^IBNCPDR4(DFN,$G(IBD("DRUG")),+$P($G(IBD("INS",1,3)),U,5),$G(IBD("FILL DATE"))) D  Q
"RTN","IBNCPDP1",184,0)
 .. S IBRMARK="REFUSES TO SIGN RELEASE (ROI)"
"RTN","IBNCPDP1",185,0)
 .. D CT
"RTN","IBNCPDP1",186,0)
 .. S IBRES="0^NOT BILLABLE, NO ROI - NO ACTIVE ROI ON FILE"
"RTN","IBNCPDP1",187,0)
 . D ROICLN^IBNCPDR4(IBTRKRN,IBRXN,IBFIL) K:$G(IBRMARK)="REFUSES TO SIGN RELEASE (ROI)" IBRMARK
"RTN","IBNCPDP1",188,0)
 ;
"RTN","IBNCPDP1",189,0)
RATEPRIC ;
"RTN","IBNCPDP1",190,0)
 ; determine rates/prices to use
"RTN","IBNCPDP1",191,0)
 I 'IBRT D CT S IBRES="0^Cannot determine Rate type" G RXQ
"RTN","IBNCPDP1",192,0)
 S IBBI=$$EVNTITM^IBCRU3(+IBRT,3,"PRESCRIPTION FILL",IBADT,.IBRS)
"RTN","IBNCPDP1",193,0)
 I 'IBBI,$P(IBBI,";")'="VA COST" D CT S IBRES="0^Cannot find Billable Item" G RXQ
"RTN","IBNCPDP1",194,0)
 ;1;BEDSECTION;1^
"RTN","IBNCPDP1",195,0)
 ;IBRS(1,18,5)=
"RTN","IBNCPDP1",196,0)
 S IBRS=+$O(IBRS($P(IBBI,";"),0))
"RTN","IBNCPDP1",197,0)
 S IBIT=$$ITPTR^IBCRU2($P(IBBI,";"),$S($P(IBRT,U,2)="A":$$NDC^IBNCPNB($G(IBD("NDC"))),1:"PRESCRIPTION"))
"RTN","IBNCPDP1",198,0)
 I 'IBIT,$P(IBRT,U,2)'="C" D CT S IBRES="0^Cannot find Item Pointer" G RXQ
"RTN","IBNCPDP1",199,0)
 ;8
"RTN","IBNCPDP1",200,0)
 S IBPRICE=+$$BICOST^IBCRCI(+IBRT,3,IBADT,"PRESCRIPTION FILL",+IBIT,,,$S($P(IBRT,U,2)="A":IBD("QTY"),1:1))
"RTN","IBNCPDP1",201,0)
 ;36^2991001
"RTN","IBNCPDP1",202,0)
 ;
"RTN","IBNCPDP1",203,0)
 ; get fees if any, ignore return, don't care about price, just need fees
"RTN","IBNCPDP1",204,0)
 S IBCHG=$$RATECHG^IBCRCC(+IBRS,$S($P(IBRT,U,2)'="C":1,1:IBD("QTY")*IBD("COST")),IBADT,.IBFEE)
"RTN","IBNCPDP1",205,0)
 I $P(IBRT,U,2)="C" S IBPRICE=+IBCHG
"RTN","IBNCPDP1",206,0)
 ;
"RTN","IBNCPDP1",207,0)
 I 'IBPRICE D CT S IBRES="0^Cannot find price for Item" G RXQ
"RTN","IBNCPDP1",208,0)
 ;
"RTN","IBNCPDP1",209,0)
 S IBPRICE=(+$G(IBFEE))_U_$S($P(IBRT,U,2)="A":"01",$P(IBRT,U,2)="C":"05",1:"07")_U_$S($P(IBRT,U,2)="C":IBD("QTY")*IBD("COST")+$G(IBFEE),$P(IBRT,U,2)="A":IBPRICE-$G(IBFEE)-$P($G(IBFEE),U,2),1:IBPRICE)_U_IBPRICE_U_(+$P($G(IBFEE),U,2))
"RTN","IBNCPDP1",210,0)
 S IBX=0 F  S IBX=$O(IBD("INS",IBX)) Q:IBX<1  S IBD("INS",IBX,2)=IBPRICE
"RTN","IBNCPDP1",211,0)
 ;
"RTN","IBNCPDP1",212,0)
 ;Check for non-covered drugs
"RTN","IBNCPDP1",213,0)
 S IBRES=$$CHCK^IBNCDNC(.IBD) I IBRES]"" S IBRMARK=$P(IBRES,U,2) D CT G RXQ
"RTN","IBNCPDP1",214,0)
 ;
"RTN","IBNCPDP1",215,0)
 S IBRES=$S($D(IBRMARK):"0^"_IBRMARK,1:1)
"RTN","IBNCPDP1",216,0)
 I IBRES,'$G(IBD("RELEASE DATE")) S IBRMARK="PRESCRIPTION NOT RELEASED"
"RTN","IBNCPDP1",217,0)
 ;
"RTN","IBNCPDP1",218,0)
 D CT
"RTN","IBNCPDP1",219,0)
 ;
"RTN","IBNCPDP1",220,0)
RXQ S $P(IBRES,"^",3)=$S($L($P($G(IBRT),"^",3)):$P(IBRT,"^",3),1:"V")
"RTN","IBNCPDP1",221,0)
 I IBRES D START^IBNCPDP6(IBRXN_";"_IBFIL,$P(IBRES,"^",3),+IBRT)
"RTN","IBNCPDP1",222,0)
 D LOG^IBNCPDP2("BILLABLE STATUS CHECK",IBRES)
"RTN","IBNCPDP1",223,0)
 Q IBRES
"RTN","IBNCPDP1",224,0)
 ;
"RTN","IBNCPDP1",225,0)
 ;
"RTN","IBNCPDP1",226,0)
CT ; files in claims tracking
"RTN","IBNCPDP1",227,0)
 Q:$G(IBD("RXCOB"))>1  ;Claim Tracking is updated only for the primary payer (payer sequence =1)
"RTN","IBNCPDP1",228,0)
 ;If null then the payer sequence = Primary is assumed
"RTN","IBNCPDP1",229,0)
 I IBTRKR D CT^IBNCPDPU(DFN,IBRXN,IBFIL,IBADT,$G(IBRMARK))
"RTN","IBNCPDP1",230,0)
 Q
"RTN","IBNCPDP1",231,0)
 ;
"RTN","IBNCPDP1",232,0)
INP(DFN,IBRXN,IBFIL) ; Is this an inpatient, NON-BILLABLE Rx as of the Issue Date?    esg 8/5/10 - IB*2*434
"RTN","IBNCPDP1",233,0)
 N INP,VAHOW,VAROOT,IBRXINP,VAIP,IBRXISUE,IBMW
"RTN","IBNCPDP1",234,0)
 S INP=0
"RTN","IBNCPDP1",235,0)
 ;
"RTN","IBNCPDP1",236,0)
 S VAROOT="IBRXINP"
"RTN","IBNCPDP1",237,0)
 S IBRXISUE=$$FILE^IBRXUTL(IBRXN,1)\1   ; Rx Issue Date (Field# 1)
"RTN","IBNCPDP1",238,0)
 I 'IBRXISUE S IBRXISUE=DT
"RTN","IBNCPDP1",239,0)
 S VAIP("D")=IBRXISUE        ; if pt was an inpatient at any time during this day
"RTN","IBNCPDP1",240,0)
 D IN5^VADPT                 ; DBIA 10061 - inpatient episode API
"RTN","IBNCPDP1",241,0)
 I '$G(IBRXINP(1)) G INPX    ; not an inpatient on this day
"RTN","IBNCPDP1",242,0)
 ;
"RTN","IBNCPDP1",243,0)
 ; check Rx issue date = discharge date. This is billable so get out (esg 9/13/10)
"RTN","IBNCPDP1",244,0)
 I IBRXISUE=(+$G(IBRXINP(17,1))\1) G INPX
"RTN","IBNCPDP1",245,0)
 ;
"RTN","IBNCPDP1",246,0)
 ; if Rx/fill is MAIL, then this is billable so get out (esg 9/13/10)
"RTN","IBNCPDP1",247,0)
 I IBFIL S IBMW=$$SUBFILE^IBRXUTL(IBRXN,IBFIL,52,2)    ; 52.1,2 MAIL/WINDOW field
"RTN","IBNCPDP1",248,0)
 I 'IBFIL S IBMW=$$FILE^IBRXUTL(IBRXN,11)              ; 52,11 MAIL/WINDOW field
"RTN","IBNCPDP1",249,0)
 I IBMW="M" G INPX
"RTN","IBNCPDP1",250,0)
 ;
"RTN","IBNCPDP1",251,0)
 ; inpatient and non-billable
"RTN","IBNCPDP1",252,0)
 S INP=1
"RTN","IBNCPDP1",253,0)
INPX ;
"RTN","IBNCPDP1",254,0)
 Q INP
"RTN","IBNCPDP1",255,0)
 ;
"RTN","IBNCPDP1",256,0)
EXEMPT ; exemption reasons
"RTN","IBNCPDP1",257,0)
 ; variable from SD call ^ variable from PSO ^ reason not billable
"RTN","IBNCPDP1",258,0)
 ;;1^AO^AGENT ORANGE
"RTN","IBNCPDP1",259,0)
 ;;2^IR^IONIZING RADIATION
"RTN","IBNCPDP1",260,0)
 ;;3^SC^SC TREATMENT
"RTN","IBNCPDP1",261,0)
 ;;4^SWA^SOUTHWEST ASIA
"RTN","IBNCPDP1",262,0)
 ;;5^MST^MILITARY SEXUAL TRAUMA
"RTN","IBNCPDP1",263,0)
 ;;6^HNC^HEAD/NECK CANCER
"RTN","IBNCPDP1",264,0)
 ;;7^CV^COMBAT VETERAN
"RTN","IBNCPDP1",265,0)
 ;;8^SHAD^PROJECT 112/SHAD
"RTN","IBNCPDP1",266,0)
 ;;
"RTN","IBNCPDP1",267,0)
 ;
"RTN","IBNCPDPU")
0^5^B73774762^B71731167
"RTN","IBNCPDPU",1,0)
IBNCPDPU ;OAK/ELZ - UTILITIES FOR NCPCP ;5/22/08  15:24
"RTN","IBNCPDPU",2,0)
 ;;2.0;INTEGRATED BILLING;**223,276,347,383,405,384,437**;21-MAR-94;Build 11
"RTN","IBNCPDPU",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBNCPDPU",4,0)
 ;
"RTN","IBNCPDPU",5,0)
 ;IA 4702
"RTN","IBNCPDPU",6,0)
 ;
"RTN","IBNCPDPU",7,0)
 ;
"RTN","IBNCPDPU",8,0)
CT(DFN,IBRXN,IBFIL,IBADT,IBRMARK) ; files in claims tracking
"RTN","IBNCPDPU",9,0)
 ; Input:
"RTN","IBNCPDPU",10,0)
 ;  DFN - Patient IEN
"RTN","IBNCPDPU",11,0)
 ;  IBRXN - Rx IEN
"RTN","IBNCPDPU",12,0)
 ;  IBFIL - Fill#
"RTN","IBNCPDPU",13,0)
 ;  IBADT - Fill Date
"RTN","IBNCPDPU",14,0)
 ;  IBRMARK - Non-billable Reason (.01 from 356.8)
"RTN","IBNCPDPU",15,0)
 ;
"RTN","IBNCPDPU",16,0)
 N DIE,DR,DA,IBRXTYP,IBEABD
"RTN","IBNCPDPU",17,0)
  ; Check that the Fill Date is current
"RTN","IBNCPDPU",18,0)
 I IBTRKRN,$G(IBADT),($G(IBADT)'=$P(^IBT(356,IBTRKRN,0),U,6)) D
"RTN","IBNCPDPU",19,0)
 . S DIE="^IBT(356,",DA=IBTRKRN,DR=".06////"_IBADT D ^DIE
"RTN","IBNCPDPU",20,0)
 I IBTRKRN D:$D(IBRMARK)  Q
"RTN","IBNCPDPU",21,0)
 . S DIE="^IBT(356,",DA=IBTRKRN,DR=".19///"_IBRMARK
"RTN","IBNCPDPU",22,0)
 . D ^DIE
"RTN","IBNCPDPU",23,0)
 ; event type pointer for rx billing
"RTN","IBNCPDPU",24,0)
 S IBRXTYP=$O(^IBE(356.6,"AC",4,0))
"RTN","IBNCPDPU",25,0)
 ; earliest auto-billing date
"RTN","IBNCPDPU",26,0)
 S IBEABD=$$EABD^IBTUTL(IBRXTYP,$$FMADD^XLFDT(IBADT,60))
"RTN","IBNCPDPU",27,0)
 ; space out earliest auto bill date
"RTN","IBNCPDPU",28,0)
 ;
"RTN","IBNCPDPU",29,0)
 ; ROI check
"RTN","IBNCPDPU",30,0)
 N IBSCROI,IBDRUG,IBDEA,IBRXDATA
"RTN","IBNCPDPU",31,0)
 S IBRXDATA=$$RXZERO^IBRXUTL(DFN,IBRXN)
"RTN","IBNCPDPU",32,0)
 S IBDRUG=$P(IBRXDATA,"^",6)
"RTN","IBNCPDPU",33,0)
 D ZERO^IBRXUTL(IBDRUG)
"RTN","IBNCPDPU",34,0)
 S IBDEA=$G(^TMP($J,"IBDRUG",+IBDRUG,3))
"RTN","IBNCPDPU",35,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBNCPDPU",36,0)
 I $G(IBDEA)["U" D
"RTN","IBNCPDPU",37,0)
 . N IBINS,IBFLG,IBINSP
"RTN","IBNCPDPU",38,0)
 . D ALL^IBCNS1(DFN,"IBINS",1,IBADT,1)
"RTN","IBNCPDPU",39,0)
 . S IBINSP=$O(IBINS("S",1,99),-1) Q:IBINSP=""
"RTN","IBNCPDPU",40,0)
 . S IBFLG=$$ROI^IBNCPDR4(DFN,$G(IBDRUG),+$G(IBINS(IBINSP,"0")),$G(IBADT))
"RTN","IBNCPDPU",41,0)
 . I 'IBFLG,$G(IBRMARK)="" S IBRMARK="REFUSES TO SIGN RELEASE (ROI)"
"RTN","IBNCPDPU",42,0)
 . I 'IBFLG S IBSCROI=3
"RTN","IBNCPDPU",43,0)
 . I IBFLG S IBSCROI=2
"RTN","IBNCPDPU",44,0)
 ;
"RTN","IBNCPDPU",45,0)
 D REFILL^IBTUTL1(DFN,IBRXTYP,IBADT,IBRXN,IBFIL,$G(IBRMARK),IBEABD,$G(IBSCROI))
"RTN","IBNCPDPU",46,0)
 Q
"RTN","IBNCPDPU",47,0)
 ;
"RTN","IBNCPDPU",48,0)
 ;NDC relocated to IBNCPNB
"RTN","IBNCPDPU",49,0)
 ;
"RTN","IBNCPDPU",50,0)
FILL(X,LEN) ; Zero-fill, right justified.
"RTN","IBNCPDPU",51,0)
 N Y
"RTN","IBNCPDPU",52,0)
 S:'$G(LEN) LEN=1
"RTN","IBNCPDPU",53,0)
 S Y=$E($G(X),1,LEN)
"RTN","IBNCPDPU",54,0)
 F  Q:$L(Y)>(LEN-1)  S Y="0"_Y
"RTN","IBNCPDPU",55,0)
 Q Y
"RTN","IBNCPDPU",56,0)
 ;
"RTN","IBNCPDPU",57,0)
PLANN(DFN,IBX,IBADT) ; returns the ien in the insurance multiple for the given plan
"RTN","IBNCPDPU",58,0)
 ; /patient privided.
"RTN","IBNCPDPU",59,0)
 ;   ien in multiple^insurance co ien
"RTN","IBNCPDPU",60,0)
 N IBPOL,IBY,IBR
"RTN","IBNCPDPU",61,0)
 S IBR=""
"RTN","IBNCPDPU",62,0)
 D ALL^IBCNS1(DFN,"IBPOL",3,IBADT)
"RTN","IBNCPDPU",63,0)
 S IBY=0 F  S IBY=$O(IBPOL(IBY)) Q:IBY<1!(IBR)  I $P(IBPOL(IBY,0),"^",18)=IBX S IBR=$P(IBPOL(IBY,0),"^")_"^"_IBY
"RTN","IBNCPDPU",64,0)
 Q IBR
"RTN","IBNCPDPU",65,0)
 ;
"RTN","IBNCPDPU",66,0)
RT(DFN,IBDT,IBINS,IBN) ; returns rate type to use for bill
"RTN","IBNCPDPU",67,0)
 ; pass in insurance by ref and which insurance entry to use
"RTN","IBNCPDPU",68,0)
 ; if '$d(ibn) then it loops through to find the first one
"RTN","IBNCPDPU",69,0)
 ; format is RT (ien) ^ Rate Type (Tort or Awp or Cost) ^ Eligibility Basis (V=vet, T=tricare)
"RTN","IBNCPDPU",70,0)
 N VAEL,VAERR,IBPT,IBRT,IBX,IBE,IBI,IBRET,IBRS
"RTN","IBNCPDPU",71,0)
 D ELIG^VADPT
"RTN","IBNCPDPU",72,0)
 ;
"RTN","IBNCPDPU",73,0)
 ; if primary elig is vet type, use reimbursable
"RTN","IBNCPDPU",74,0)
 S IBPT=$P($G(^DIC(8,+VAEL(1),0)),"^",5) ; = N:NON-VETERAN;Y:VETERAN
"RTN","IBNCPDPU",75,0)
 I IBPT="Y" D  Q IBRT_U_$S($G(IBRET)="VA COST":"C^V",1:"T^V")
"RTN","IBNCPDPU",76,0)
 .   S IBRT=$O(^DGCR(399.3,"B","REIMBURSABLE INS.",0))
"RTN","IBNCPDPU",77,0)
 .   S IBRT=$S(IBRT:IBRT,1:8)
"RTN","IBNCPDPU",78,0)
 .   I $G(IBDT) S IBRET=$P($$EVNTITM^IBCRU3(IBRT,3,"PRESCRIPTION FILL",IBDT,.IBRS),";",1)
"RTN","IBNCPDPU",79,0)
 ;
"RTN","IBNCPDPU",80,0)
 ; if patient is only Tricare elig and only Tricare ins bill for Tricare
"RTN","IBNCPDPU",81,0)
 ; ia #'s 427 & 2516
"RTN","IBNCPDPU",82,0)
 ;  -  determine eligibilities
"RTN","IBNCPDPU",83,0)
 S IBE=$P($G(^DIC(8.1,+$P($G(^DIC(8,+VAEL(1),0)),"^",9),0)),"^"),IBE($S(IBE="TRICARE"!(IBE="SHARING AGREEMENT"):"T",IBE="CHAMPVA":"C",1:"O"))=""
"RTN","IBNCPDPU",84,0)
 S IBX=0 F  S IBX=$O(VAEL(1,IBX)) Q:'IBX  S IBE=$P($G(^DIC(8.1,+$P($G(^DIC(8,+VAEL(1,IBX),0)),"^",9),0)),"^") S IBE($S(IBE="TRICARE"!(IBE="SHARING AGREEMENT"):"T",IBE="CHAMPVA":"C",1:"O"))=""
"RTN","IBNCPDPU",85,0)
 ;  -  determine insurance policies
"RTN","IBNCPDPU",86,0)
 S IBX=0 F  S IBX=$O(IBINS(IBX)) Q:'IBX  S IBI=$P($G(^IBE(355.1,+$P($G(IBINS(IBX,355.3)),"^",9),0)),"^") S IBI($S(IBI="TRICARE":"T",IBI="CHAMPVA":"C",1:"O"))=""
"RTN","IBNCPDPU",87,0)
 ;  -  tricare?
"RTN","IBNCPDPU",88,0)
 I $D(IBE("T")),'$D(IBE("O")),'$D(IBE("C")),$D(IBI("T")),'$D(IBI("O")),'$D(IBI("C")) S IBRT=$O(^DGCR(399.3,"B","TRICARE",0)) Q:IBRT IBRT_"^C^T"
"RTN","IBNCPDPU",89,0)
 ;
"RTN","IBNCPDPU",90,0)
 Q $S($D(IBRT):IBRT,1:"0^unable to determine rate type")
"RTN","IBNCPDPU",91,0)
 ;
"RTN","IBNCPDPU",92,0)
 ;
"RTN","IBNCPDPU",93,0)
 ; ********* temp code for tricare/champus ************** not currently used
"RTN","IBNCPDPU",94,0)
 ; if primary elig is TRICARE/CHAMPUS use one of the champus', depending
"RTN","IBNCPDPU",95,0)
 ; on insurance coverage
"RTN","IBNCPDPU",96,0)
 I $P($G(^DIC(8.1,+$P($G(^DIC(8,+VAEL(3),0)),"^",9),0)),"^")="TRICARE/CHAMPUS" S IBRT=$$UINS("CHAMPUS",.IBINS,.IBN)
"RTN","IBNCPDPU",97,0)
 ;
"RTN","IBNCPDPU",98,0)
 ; if primary elig is CHAMPVA use one of the champva's, depending
"RTN","IBNCPDPU",99,0)
 ; on insurance coverage
"RTN","IBNCPDPU",100,0)
 I $P($G(^DIC(8.1,+$P($G(^DIC(8,+VAEL(3),0)),"^",9),0)),"^")="CHAMPVA" S IBRT=$$UINS("CHAMPVA",.IBINS,.IBN)
"RTN","IBNCPDPU",101,0)
 ;
"RTN","IBNCPDPU",102,0)
 Q $S($D(IBRT):IBRT,1:"0^unable to determine rate type")
"RTN","IBNCPDPU",103,0)
 ;
"RTN","IBNCPDPU",104,0)
 ;
"RTN","IBNCPDPU",105,0)
UINS(IBT,IBINS,IBN) ; in the case of tricare or champva you may have to use
"RTN","IBNCPDPU",106,0)
 ; insurance different rate types insted of the actual tricare or champva
"RTN","IBNCPDPU",107,0)
 N IBRT
"RTN","IBNCPDPU",108,0)
 S IBN=+$G(IBN,$O(IBINS("S",+$O(IBINS("S",0)),0)))
"RTN","IBNCPDPU",109,0)
 I $P($G(^IBE(355.1,+$P($G(IBINS(IBN,355.3)),"^",9),0)),"^")=IBT S IBRT=$O(^DGCR(399.3,"B",IBT,0)),IBRT=$S(IBRT:IBRT_"^"_$S(IBT="CHAMPUS":"A",1:"C"),1:"0^"_IBT_" Rate type not found")
"RTN","IBNCPDPU",110,0)
 I '$D(IBRT) S IBRT=$O(^DGCR(399.3,"B",IBT_" REIMB. INS.",0)),IBRT=$S(IBRT:IBRT_"^"_$S(IBT="CHAMPUS":"A",1:"C"),1:"0^"_IBT_" REIMB. INS. Rate type not found")
"RTN","IBNCPDPU",111,0)
 Q IBRT
"RTN","IBNCPDPU",112,0)
 ;
"RTN","IBNCPDPU",113,0)
BS() ; returns the mccr utility to use
"RTN","IBNCPDPU",114,0)
 N IBX
"RTN","IBNCPDPU",115,0)
 S IBX=0 F  S IBX=$O(^DGCR(399.1,"B","PRESCRIPTION",IBX)) Q:IBX<1  I $P($G(^DGCR(399.1,+$G(IBX),0)),U,5) Q
"RTN","IBNCPDPU",116,0)
 Q IBX
"RTN","IBNCPDPU",117,0)
 ;
"RTN","IBNCPDPU",118,0)
 ; Match IB Bill by the 7-digit ECME number
"RTN","IBNCPDPU",119,0)
RXBIL(IBINP,IBERR) ; Matching NCPDP payments
"RTN","IBNCPDPU",120,0)
 ;Input:
"RTN","IBNCPDPU",121,0)
 ;   IBINP("ECME") - the 7-digit ECME number (Reference Number)
"RTN","IBNCPDPU",122,0)
 ;   IBINP("FILLDT")  - the Rx fill date, YYYYMMDD or FileMan format
"RTN","IBNCPDPU",123,0)
 ;   IBINP("PNM") (optional) - the patient's last name
"RTN","IBNCPDPU",124,0)
 ;Returns:
"RTN","IBNCPDPU",125,0)
 ;   IBERR (by ref) - the error code, or null string if found
"RTN","IBNCPDPU",126,0)
 ;   $$RXBIL - IB Bill IEN, or 0 if not matched
"RTN","IBNCPDPU",127,0)
 N IBKEY,IBECME,BILLDA,IBFOUND,IBMATCH,IBDAT,IBPNAME
"RTN","IBNCPDPU",128,0)
 S IBERR=""
"RTN","IBNCPDPU",129,0)
 S IBECME=$G(IBINP("ECME"))
"RTN","IBNCPDPU",130,0)
 I IBECME'?1.7N S IBERR="Invalid ECME number" Q 0
"RTN","IBNCPDPU",131,0)
 S IBDAT=$G(IBINP("FILLDT")) ; Rx fill date
"RTN","IBNCPDPU",132,0)
 I IBDAT?8N S IBDAT=($E(IBDAT,1,4)-1700)_$E(IBDAT,5,8) ; conv date to FM format
"RTN","IBNCPDPU",133,0)
 I IBDAT'?7N Q $$RXBILND(IBECME)  ; date is not correct or null
"RTN","IBNCPDPU",134,0)
 S IBPNAME=$G(IBINP("PNM")) ; patient's name (optional)
"RTN","IBNCPDPU",135,0)
 S IBKEY=+IBECME_";"_IBDAT ; The ECME Number (BC ID)
"RTN","IBNCPDPU",136,0)
 S BILLDA="",IBFOUND=0,IBMATCH=0
"RTN","IBNCPDPU",137,0)
 ; Search backward
"RTN","IBNCPDPU",138,0)
 F  S BILLDA=$O(^DGCR(399,"AG",IBKEY,BILLDA),-1) Q:BILLDA=""  D  Q:IBFOUND
"RTN","IBNCPDPU",139,0)
 . I 'BILLDA Q  ; IEN must be numeric
"RTN","IBNCPDPU",140,0)
 . I '$D(^DGCR(399,BILLDA,0)) Q  ; Corrupted index
"RTN","IBNCPDPU",141,0)
 . S IBMATCH=1
"RTN","IBNCPDPU",142,0)
 . I IBPNAME'="" I '$$TXMATCH($P(IBPNAME,","),$P($G(^DPT(+$P(^DGCR(399,BILLDA,0),U,2),0)),","),8) Q  ; Patient name doesn't match
"RTN","IBNCPDPU",143,0)
 . S IBFOUND=1
"RTN","IBNCPDPU",144,0)
 I 'BILLDA S IBERR=$S(IBMATCH:"Patient's name does not match",1:"Matching bill not found") ; not matched
"RTN","IBNCPDPU",145,0)
 Q +BILLDA
"RTN","IBNCPDPU",146,0)
 ;
"RTN","IBNCPDPU",147,0)
RXBILND(IBECME) ;Match the bill with no date
"RTN","IBNCPDPU",148,0)
 N IBKEY,IBBC,BILLDA,IBY,IBCUT
"RTN","IBNCPDPU",149,0)
 S IBKEY=+IBECME_";"
"RTN","IBNCPDPU",150,0)
 S IBCUT=$$FMADD^XLFDT(DT,-180) ; only 180 days in the past
"RTN","IBNCPDPU",151,0)
 S BILLDA=0
"RTN","IBNCPDPU",152,0)
 ; Search PRNT/TX forward
"RTN","IBNCPDPU",153,0)
 S IBBC=IBKEY_IBCUT
"RTN","IBNCPDPU",154,0)
 F  S IBBC=$O(^DGCR(399,"AG",IBBC)) Q:IBBC'[IBKEY  D  Q:BILLDA
"RTN","IBNCPDPU",155,0)
 . S IBY="" F  S IBY=$O(^DGCR(399,"AG",IBBC,IBY)) Q:'IBY  D  Q:BILLDA
"RTN","IBNCPDPU",156,0)
 .. I $P($G(^DGCR(399,+IBY,0)),U,13)'=4 Q  ; not PRNT/TX
"RTN","IBNCPDPU",157,0)
 .. S BILLDA=+IBY
"RTN","IBNCPDPU",158,0)
 I BILLDA Q BILLDA
"RTN","IBNCPDPU",159,0)
 ; Search ANY backward
"RTN","IBNCPDPU",160,0)
 S IBBC=IBKEY_"8000000"
"RTN","IBNCPDPU",161,0)
 F  S IBBC=$O(^DGCR(399,"AG",IBBC),-1) Q:IBBC'[IBKEY  Q:$P(IBBC,";",2)<IBCUT  D  Q:BILLDA
"RTN","IBNCPDPU",162,0)
 . S IBY="" F  S IBY=$O(^DGCR(399,"AG",IBBC,IBY),-1) Q:IBY=""  D  Q:BILLDA
"RTN","IBNCPDPU",163,0)
 .. ;I $P($G(^DGCR(399,+IBY,0)),U,13)'=7 Q  ; not CANCELLED
"RTN","IBNCPDPU",164,0)
 .. S BILLDA=+IBY
"RTN","IBNCPDPU",165,0)
 Q BILLDA
"RTN","IBNCPDPU",166,0)
 ;
"RTN","IBNCPDPU",167,0)
 ;Check matching of two strings - case insensitive, no spaces etc.
"RTN","IBNCPDPU",168,0)
TXMATCH(IBTXT1,IBTXT2,IBMAX) ;
"RTN","IBNCPDPU",169,0)
 N IBTR1,IBTR2,IBT1,IBT2
"RTN","IBNCPDPU",170,0)
 ;Checking only first IBMAX characters (long names may be trancated
"RTN","IBNCPDPU",171,0)
 S IBTR1="ABCDEFGHIJKLMNOPQRSTUVWXYZ:;"",'._()<>/\|@#$%&*-=!`~ "
"RTN","IBNCPDPU",172,0)
 S IBTR2="abcdefghijklmnopqrstuvwxyz"
"RTN","IBNCPDPU",173,0)
 S IBT1=$E($TR(IBTXT1,IBTR1,IBTR2),1,IBMAX)
"RTN","IBNCPDPU",174,0)
 S IBT2=$E($TR(IBTXT2,IBTR1,IBTR2),1,IBMAX)
"RTN","IBNCPDPU",175,0)
 Q IBT1=IBT2
"RTN","IBNCPDPU",176,0)
 ;
"RTN","IBNCPDPU",177,0)
ECMEBIL(DFN,IBADT) ; Is the pat ECME Billable (pharmacy coverage only)
"RTN","IBNCPDPU",178,0)
 ; DFN - ptr to the patient
"RTN","IBNCPDPU",179,0)
 ; IBADT  - the date
"RTN","IBNCPDPU",180,0)
 N IBANY,IBERMSG,IBX,IBINS,IBT,IBZ,IBRES,IBCAT,IBCOV,IBPCOV
"RTN","IBNCPDPU",181,0)
 S IBRES=0 ; Not ECME Billable by default
"RTN","IBNCPDPU",182,0)
 S (IBCOV,IBPCOV)=0
"RTN","IBNCPDPU",183,0)
 ; -- look up ins with Rx
"RTN","IBNCPDPU",184,0)
 D ALL^IBCNS1(DFN,"IBINS",1,IBADT,1)
"RTN","IBNCPDPU",185,0)
 S IBERMSG="" ; Error message
"RTN","IBNCPDPU",186,0)
 S IBCAT=$O(^IBE(355.31,"B","PHARMACY",0))
"RTN","IBNCPDPU",187,0)
 S IBX=0 F  S IBX=$O(IBINS("S",IBX)) Q:'IBX  D  Q:IBRES
"RTN","IBNCPDPU",188,0)
 . S IBT=0 F  S IBT=$O(IBINS("S",IBX,IBT)) Q:'IBT  D  Q:IBRES
"RTN","IBNCPDPU",189,0)
 . . N IBZ,IBPIEN,IBY,IBPL
"RTN","IBNCPDPU",190,0)
 . . S IBZ=$G(IBINS(IBT,0))
"RTN","IBNCPDPU",191,0)
 . . S IBPL=+$P(IBZ,U,18) Q:'IBPL
"RTN","IBNCPDPU",192,0)
 . . S IBCOV=1 ; covered
"RTN","IBNCPDPU",193,0)
 . . I '$$PLCOV^IBCNSU3(IBPL,IBADT,IBCAT) Q
"RTN","IBNCPDPU",194,0)
 . . S IBPCOV=1
"RTN","IBNCPDPU",195,0)
 . . S IBPIEN=+$G(^IBA(355.3,IBPL,6))
"RTN","IBNCPDPU",196,0)
 . . I 'IBPIEN S IBERMSG="Plan not linked to the Payer" Q  ; Not linked
"RTN","IBNCPDPU",197,0)
 . . D STCHK^IBCNRU1(IBPIEN,.IBY)
"RTN","IBNCPDPU",198,0)
 . . I $E($G(IBY(1)))'="A" S:IBERMSG="" IBERMSG=$$ERMSG^IBNCPNB($P($G(IBY(6)),",")) Q
"RTN","IBNCPDPU",199,0)
 . . S IBRES=1
"RTN","IBNCPDPU",200,0)
 I 'IBCOV Q "0^Not Insured"
"RTN","IBNCPDPU",201,0)
 I 'IBPCOV Q "0^No Pharmacy Coverage"
"RTN","IBNCPDPU",202,0)
 I 'IBRES,IBERMSG'="" Q "0^"_IBERMSG
"RTN","IBNCPDPU",203,0)
 I 'IBRES Q "0^No Insurance ECME billable"
"RTN","IBNCPDPU",204,0)
 ;
"RTN","IBNCPDPU",205,0)
 Q IBRES
"RTN","IBNCPDPU",206,0)
 ;
"RTN","IBNCPDPU",207,0)
SUBMIT(IBRX,IBFIL) ; Submit the Rx claim through ECME
"RTN","IBNCPDPU",208,0)
 ; IBRX - RX ien in file #52
"RTN","IBNCPDPU",209,0)
 ; IBFIL - Fill No (0 for orig fill)
"RTN","IBNCPDPU",210,0)
 N IBDT,IBNDC,IBX
"RTN","IBNCPDPU",211,0)
 I '$G(IBRX)!('$D(IBFIL)) Q "0^Invalid parameters."
"RTN","IBNCPDPU",212,0)
 S IBDT=$S('IBFIL:$$FILE^IBRXUTL(IBRX,22),1:$$SUBFILE^IBRXUTL(IBRX,IBFIL,52,.01))
"RTN","IBNCPDPU",213,0)
 S IBX=$$EN^BPSNCPDP(+IBRX,+IBFIL,IBDT,"BB")
"RTN","IBNCPDPU",214,0)
 I +IBX=0 D ECMEACT^PSOBPSU1(+IBRX,+IBFIL,"Claim submitted to 3rd party payer: IB BACK BILLING")
"RTN","IBNCPDPU",215,0)
 Q IBX
"RTN","IBNCPDPU",216,0)
 ;
"RTN","IBNCPDPU",217,0)
REASON(IBX,EXACT) ; Close Claim Reasons
"RTN","IBNCPDPU",218,0)
 Q $P($G(^IBE(356.8,+IBX,0)),U) ; non-billable reason
"RTN","IBNCPDPU",219,0)
 ;
"RTN","IBNCPDPU",220,0)
NABP(IBIFN) ;NABP Number
"RTN","IBNCPDPU",221,0)
 N IBY,IBTRKN,IBRX,IBFIL,IBZ,IBNABP
"RTN","IBNCPDPU",222,0)
 S IBY=+$O(^IBT(356.399,"C",IBIFN,0)) I 'IBY Q ""
"RTN","IBNCPDPU",223,0)
 S IBTRKN=$P($G(^IBT(356.399,IBY,0)),U) I 'IBTRKN Q ""
"RTN","IBNCPDPU",224,0)
 S IBZ=$G(^IBT(356,IBTRKN,0)) I IBZ="" Q ""
"RTN","IBNCPDPU",225,0)
 S IBRX=$P(IBZ,U,8)
"RTN","IBNCPDPU",226,0)
 S IBFIL=$P(IBZ,U,10)
"RTN","IBNCPDPU",227,0)
 S IBNABP=$$NABP^BPSBUTL(IBRX,IBFIL)
"RTN","IBNCPDPU",228,0)
 Q $S(IBNABP=0:"",1:IBNABP)
"RTN","IBNCPDPU",229,0)
 ;
"RTN","IBNCPDPU",230,0)
 ; Get the K-bill# from CT
"RTN","IBNCPDPU",231,0)
BILL(IBRX,IBFIL) ;
"RTN","IBNCPDPU",232,0)
 N IBTRKN,IBIFN
"RTN","IBNCPDPU",233,0)
 S IBTRKN=+$O(^IBT(356,"ARXFL",+$G(IBRX),+$G(IBFIL),""))
"RTN","IBNCPDPU",234,0)
 S IBIFN=+$P($G(^IBT(356,IBTRKN,0)),U,11)
"RTN","IBNCPDPU",235,0)
 Q $P($G(^DGCR(399,IBIFN,0)),U)
"RTN","IBNCPDPU",236,0)
 ;
"RTN","IBNCPDPU",237,0)
REJECT(IBECME,IBDATE) ; Is the e-claim rejected?
"RTN","IBNCPDPU",238,0)
 N IBINP,IBTRKRN,IBY
"RTN","IBNCPDPU",239,0)
 I IBECME'?1.7N Q 0
"RTN","IBNCPDPU",240,0)
 ;S IBINP("ECME")=IBECME
"RTN","IBNCPDPU",241,0)
 ;S IBINP("FILLDT")=IBDATE
"RTN","IBNCPDPU",242,0)
 ;I $$RXBIL(.IBINP) Q 0  ; bill exists
"RTN","IBNCPDPU",243,0)
 S IBTRKRN=+$O(^IBT(356,"AE",IBECME,0)) I 'IBTRKRN Q 0
"RTN","IBNCPDPU",244,0)
 S IBY=$G(^IBT(356,IBTRKRN,1))
"RTN","IBNCPDPU",245,0)
 I $P(IBY,U,11)>0 Q 1  ; Rejected or closed
"RTN","IBNCPDPU",246,0)
 Q 0
"RTN","IBNCPDPU",247,0)
 ;
"RTN","IBNCPDPU",248,0)
 ;
"RTN","IBNCPDPU",249,0)
 ;IBNCPDPU
"RTN","IBTUBO2")
0^6^B33667876^B26175280
"RTN","IBTUBO2",1,0)
IBTUBO2 ;ALB/AAS - UNBILLED AMOUNTS - GENERATE UNBILLED REPORTS ;03 Aug 2004  8:21 AM
"RTN","IBTUBO2",2,0)
 ;;2.0;INTEGRATED BILLING;**19,31,32,91,123,159,192,155,309,347,437**;21-MAR-94;Build 11
"RTN","IBTUBO2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTUBO2",4,0)
 ;
"RTN","IBTUBO2",5,0)
INPT(DGPM) ; - Check if inpatient episode has bills or final bill; if not,
"RTN","IBTUBO2",6,0)
 ;   ^TMP($J,"IBTUB-INPT",NAME@@DFN,DATE,IBX)=bill status
"RTN","IBTUBO2",7,0)
 ;   ^TMP($J,"IBTUB-INPT_MRA",NAME@@DFN,DATE,IBX)=1 if MRA request
"RTN","IBTUBO2",8,0)
 ;   *Pre-set variables: DFN=patient IEN, DGPM=pointer to file #405,
"RTN","IBTUBO2",9,0)
 ;                       IBDT=event date, IBRT=bill rate,
"RTN","IBTUBO2",10,0)
 ;                       IBEDT=reporting period date
"RTN","IBTUBO2",11,0)
 I '$G(DFN)!('$G(DGPM))!('$G(IBDT))!('$G(IBRT)) G INPTQ
"RTN","IBTUBO2",12,0)
 N IBIP,IBDATA,IBNAME,IBNCF,IBXX,X,Y,IBMRA
"RTN","IBTUBO2",13,0)
 S IBNAME=$P($G(^DPT(DFN,0)),U)
"RTN","IBTUBO2",14,0)
 I $D(^TMP($J,"IBTUB-INPT",IBNAME_"@@"_DFN,IBDT)) G INPTQ
"RTN","IBTUBO2",15,0)
 I $P($G(^DGPM(DGPM,0)),U,11) G INPTQ ;      Admitted for SC condition.
"RTN","IBTUBO2",16,0)
 I $$SC^IBTUBOU($P($G(^DGPM(DGPM,0)),U,16)) G INPTQ ; Check PTF for SC.
"RTN","IBTUBO2",17,0)
 S (IBIP(1),IBIP(2))=0 ; Set claim flags.
"RTN","IBTUBO2",18,0)
 ;
"RTN","IBTUBO2",19,0)
 ; - Check patient's claims.
"RTN","IBTUBO2",20,0)
 S (IBNCF,X)=0
"RTN","IBTUBO2",21,0)
 F  S X=$O(^DGCR(399,"C",DFN,X)) Q:'X  D  Q:IBIP(1)&(IBIP(2))
"RTN","IBTUBO2",22,0)
 . S IBDATA=$$CKBIL^IBTUBOU(X,1) Q:IBDATA=""
"RTN","IBTUBO2",23,0)
 . ;
"RTN","IBTUBO2",24,0)
 . ; The admission date on the bill is different from the Event date.
"RTN","IBTUBO2",25,0)
 . I $P(IBDATA,U,5)'=$P(IBDT,".") Q
"RTN","IBTUBO2",26,0)
 . S IBNCF=IBNCF+1 ; Increment the number of bills on file for episode
"RTN","IBTUBO2",27,0)
 . ;
"RTN","IBTUBO2",28,0)
 . ; If Compile/Store & Not authorized before reporting period - Quit.
"RTN","IBTUBO2",29,0)
 . I $G(IBCOMP),$S($P(IBDATA,U,2)'=2:$P(IBDATA,U,3),1:$P(IBDATA,U,6))>IBEDT Q
"RTN","IBTUBO2",30,0)
 . ;
"RTN","IBTUBO2",31,0)
 . S IBIP($P(IBDATA,U,4))=$S($P(IBDATA,U,2)'=2:1,1:2) ;   Episode billed for inst/prof bill type
"RTN","IBTUBO2",32,0)
 ;
"RTN","IBTUBO2",33,0)
 I IBIP(1)=1 G:IBIP(2)=1!(IBDT<2990901) INPTQ ; Episode is billed.
"RTN","IBTUBO2",34,0)
 ;
"RTN","IBTUBO2",35,0)
 ; - Add to episodes missing inst./prof. bills.
"RTN","IBTUBO2",36,0)
 S (IBXX,IBMRA)=""
"RTN","IBTUBO2",37,0)
 ;
"RTN","IBTUBO2",38,0)
 I IBIP(1)'=1 D
"RTN","IBTUBO2",39,0)
 . I 'IBIP(1) S IBUNB("EPISM-I")=IBUNB("EPISM-I")+1 S:IBDET IBXX="I"
"RTN","IBTUBO2",40,0)
 . I $G(IBXTRACT) S IB(1)=IB(1)+1 ; For DM extract.
"RTN","IBTUBO2",41,0)
 . I IBIP(1)=2 S IBUNB("EPISM-I-MRA")=IBUNB("EPISM-I-MRA")+1 S:IBDET IBMRA="I"
"RTN","IBTUBO2",42,0)
 ;
"RTN","IBTUBO2",43,0)
 I IBIP(2)'=1,IBDT'<2990901 D
"RTN","IBTUBO2",44,0)
 . I 'IBIP(2) S IBUNB("EPISM-P")=IBUNB("EPISM-P")+1 S:IBDET IBXX=$S(IBXX="I":"I,P",1:"P")
"RTN","IBTUBO2",45,0)
 . I $G(IBXTRACT) S IB(3)=IB(3)+1 ; For DM extract.
"RTN","IBTUBO2",46,0)
 . I IBIP(2)=2 S IBUNB("EPISM-P-MRA")=IBUNB("EPISM-P-MRA")+1 S:IBDET IBMRA=$S(IBMRA="I":"I,P",1:"P")
"RTN","IBTUBO2",47,0)
 ;
"RTN","IBTUBO2",48,0)
 I $S('IBIP(1):1,'IBIP(2):1,1:0) S IBUNB("EPISM-A")=IBUNB("EPISM-A")+1  ; Number of Admissions missing claims
"RTN","IBTUBO2",49,0)
 S:IBIP(1)=2!(IBIP(2)=2) IBUNB("EPISM-A-MRA")=IBUNB("EPISM-A-MRA")+1
"RTN","IBTUBO2",50,0)
 I $G(IBXTRACT) S IB(5)=IB(5)+1 ; For DM extract.
"RTN","IBTUBO2",51,0)
 ;
"RTN","IBTUBO2",52,0)
 I '$G(IBINMRA),IBIP(1)=2 G:IBIP(2)=1 INPTQ
"RTN","IBTUBO2",53,0)
 I '$G(IBINMRA),IBIP(2)=2 G:IBIP(1)=1 INPTQ
"RTN","IBTUBO2",54,0)
 ;
"RTN","IBTUBO2",55,0)
 ; - Set global for report.
"RTN","IBTUBO2",56,0)
 I $S($G(IBINMRA):1,1:IBXX'="") S ^TMP($J,"IBTUB-INPT",IBNAME_"@@"_DFN,IBDT,IBX)=IBNCF_U_IBXX_U_U_U_$$HOSP^IBTUBOU(DGPM)
"RTN","IBTUBO2",57,0)
 I IBMRA'="",$G(IBINMRA) S ^TMP($J,"IBTUB-INPT_MRA",IBNAME_"@@"_DFN,IBDT,IBX)=1_U_IBMRA
"RTN","IBTUBO2",58,0)
 ;
"RTN","IBTUBO2",59,0)
INPTQ Q
"RTN","IBTUBO2",60,0)
 ;
"RTN","IBTUBO2",61,0)
RX(IBRX) ; - Check if prescription has been billed; if not,
"RTN","IBTUBO2",62,0)
 ;   ^TMP($J,"IBTUB-RX",NAME@@DFN,DATE@RX#,IBX)=bill status^drug name^
"RTN","IBTUBO2",63,0)
 ;                                            original fill date
"RTN","IBTUBO2",64,0)
 ;   ^TMP($J,"IBTUB-RX_MRA",NAME@@DFN,DATE@RX#,IBX)=1 if req MRA
"RTN","IBTUBO2",65,0)
 ;
"RTN","IBTUBO2",66,0)
 ;   *Pre-set variables: DFN=patient IEN, IBDT=refill date,
"RTN","IBTUBO2",67,0)
 ;                       IBRT=bill rate, IBRX=pointer to file #52,
"RTN","IBTUBO2",68,0)
 ;                       IBEDT=reporting period date
"RTN","IBTUBO2",69,0)
 I '$G(DFN)!('$G(IBDT))!('$G(IBRT))!('$G(IBRX)) G RXQ
"RTN","IBTUBO2",70,0)
 N IBDATA,IBDAY,IBDRX,IBFL,IBFLG,IBOFD,IBNAME,IBND,IBNO,IBNCF,RX,X,RXDT,IBMRA,IBCO
"RTN","IBTUBO2",71,0)
 ;
"RTN","IBTUBO2",72,0)
 ; - Be sure prescription has an RX#.
"RTN","IBTUBO2",73,0)
 S IBND=$$RXZERO^IBRXUTL(DFN,IBRX),IBNO=$P(IBND,U) G:IBNO="" RXQ
"RTN","IBTUBO2",74,0)
 ;
"RTN","IBTUBO2",75,0)
 ; - Retrieve the Prescription Original Fill Date
"RTN","IBTUBO2",76,0)
 S IBOFD=$$FILE^IBRXUTL(IBRX,22)\1
"RTN","IBTUBO2",77,0)
 ;
"RTN","IBTUBO2",78,0)
 S IBDAY=$E(IBDT,1,7),IBDRX=IBDAY_"@@"_IBNO,IBNAME=$P($G(^DPT(DFN,0)),U)
"RTN","IBTUBO2",79,0)
 ;
"RTN","IBTUBO2",80,0)
 ; - Be sure that this fill was not already marked as unbilled.
"RTN","IBTUBO2",81,0)
 I $D(^TMP($J,"IBTUB-RX",IBNAME_"@@"_DFN,IBDRX,IBX)) G RXQ
"RTN","IBTUBO2",82,0)
 ;
"RTN","IBTUBO2",83,0)
 ; - Look at all fills of the prescription that are on a claim.
"RTN","IBTUBO2",84,0)
 S (IBFL,X)="",(IBFLG,IBNCF,IBNCF(0),IBMRA)=0
"RTN","IBTUBO2",85,0)
 F  S X=$O(^IBA(362.4,"B",IBNO,X)) Q:'X  D  Q:IBFL
"RTN","IBTUBO2",86,0)
 . S RX=$G(^IBA(362.4,X,0)),RXDT=$P(RX,U,3)\1
"RTN","IBTUBO2",87,0)
 . I RXDT=IBOFD S IBFLG=1  ; Original Fill Date Billed?
"RTN","IBTUBO2",88,0)
 . I RXDT'=IBDAY Q  ; RX refill and claim refill dates not the same.
"RTN","IBTUBO2",89,0)
 . ;
"RTN","IBTUBO2",90,0)
 . ; - Skip bill if not authorized (and not meeting other criteria).
"RTN","IBTUBO2",91,0)
 . S IBDATA=$$CKBIL^IBTUBOU($P(RX,U,2)) Q:IBDATA=""
"RTN","IBTUBO2",92,0)
 . S IBNCF=IBNCF+1 ; Increment the number of bills on file for the episode
"RTN","IBTUBO2",93,0)
 . ; If Compile/Store & Not authorized before reporting period - Quit.
"RTN","IBTUBO2",94,0)
 . I $G(IBCOMP),$S($P(IBDATA,U,2)'=2:$P(IBDATA,U,3),1:$P(IBDATA,U,6))>IBEDT S IBNONMRA=0 Q
"RTN","IBTUBO2",95,0)
 . S:$P(IBDATA,U,2)'=2 IBFL=1,IBMRA=0 ; at least 1 non-MRA bill exists
"RTN","IBTUBO2",96,0)
 . S:$P(IBDATA,U,2)=2 IBMRA=1 ; at least 1 MRA bill exists
"RTN","IBTUBO2",97,0)
 . ;
"RTN","IBTUBO2",98,0)
 ;
"RTN","IBTUBO2",99,0)
 I IBFL G RXQ ; Refill has been billed.
"RTN","IBTUBO2",100,0)
 ;
"RTN","IBTUBO2",101,0)
RX1 ; - Calculate unbilled amounts.
"RTN","IBTUBO2",102,0)
 S:'IBMRA IBUNB("PRESCRP")=IBUNB("PRESCRP")+1
"RTN","IBTUBO2",103,0)
 I IBMRA S IBUNB("PRESCRP-MRA")=IBUNB("PRESCRP-MRA")+1
"RTN","IBTUBO2",104,0)
 ;
"RTN","IBTUBO2",105,0)
 ; Patch 437 update to call charge master with enough information
"RTN","IBTUBO2",106,0)
 ; to lookup actual cost of prescription 
"RTN","IBTUBO2",107,0)
 ;
"RTN","IBTUBO2",108,0)
 N IBBI,IBRSNEW,IBQTY,IBCOST,IBRFNUM,IBSUBND,IBFEE
"RTN","IBTUBO2",109,0)
 ;
"RTN","IBTUBO2",110,0)
 ; check charge master for the type of billing--VA Cost or not
"RTN","IBTUBO2",111,0)
 S IBBI=$$EVNTITM^IBCRU3(+IBRT,3,"PRESCRIPTION FILL",IBDAY,.IBRSNEW)
"RTN","IBTUBO2",112,0)
 ;
"RTN","IBTUBO2",113,0)
 I IBBI["VA COST" D
"RTN","IBTUBO2",114,0)
 .;  if this is a refill look up the refill info for cost and quantity
"RTN","IBTUBO2",115,0)
 .  S IBRFNUM=$$RFLNUM^IBRXUTL(IBRX,IBDAY,"")
"RTN","IBTUBO2",116,0)
 .  I IBRFNUM>0 D
"RTN","IBTUBO2",117,0)
 ..    S IBSUBND=$$ZEROSUB^IBRXUTL(DFN,IBRX,IBRFNUM)
"RTN","IBTUBO2",118,0)
 ..    S IBQTY=$P($G(IBSUBND),U,4)
"RTN","IBTUBO2",119,0)
 ..    S IBCOST=$P($G(IBSUBND),U,11)
"RTN","IBTUBO2",120,0)
 .;
"RTN","IBTUBO2",121,0)
 .;  if this was an original fill use the Rx info already in IBND
"RTN","IBTUBO2",122,0)
 .  I $G(IBQTY)'>0 S IBQTY=$P($G(IBND),U,7)
"RTN","IBTUBO2",123,0)
 .  I $G(IBCOST)'>0 S IBCOST=$P($G(IBND),U,17)
"RTN","IBTUBO2",124,0)
 .;
"RTN","IBTUBO2",125,0)
 .  S IBRSNEW=+$O(IBRSNEW($P(IBBI,";"),0))
"RTN","IBTUBO2",126,0)
 .  S IBCO=$J($$RATECHG^IBCRCC(+IBRSNEW,IBQTY*IBCOST,IBDAY,.IBFEE),0,2)
"RTN","IBTUBO2",127,0)
 E  D
"RTN","IBTUBO2",128,0)
 .  S IBCO=$$BICOST^IBCRCI(IBRT,3,IBDAY,"PRESCRIPTION FILL")
"RTN","IBTUBO2",129,0)
 ;
"RTN","IBTUBO2",130,0)
 S:'IBMRA IBUNB("UNBILRX")=IBUNB("UNBILRX")+IBCO
"RTN","IBTUBO2",131,0)
 I IBMRA S IBUNB("UNBILRX-MRA")=IBUNB("UNBILRX-MRA")+IBCO
"RTN","IBTUBO2",132,0)
 I $G(IBXTRACT) D  ; For DM extract.
"RTN","IBTUBO2",133,0)
 . S IB(17)=IB(17)+1
"RTN","IBTUBO2",134,0)
 . S IB(18)=IB(18)+IBCO
"RTN","IBTUBO2",135,0)
 ;
"RTN","IBTUBO2",136,0)
 ; - Set global for report.
"RTN","IBTUBO2",137,0)
 D ZERO^IBRXUTL(+$P(IBND,U,6))
"RTN","IBTUBO2",138,0)
 I $S($G(IBINMRA):1,1:'IBMRA) S ^TMP($J,"IBTUB-RX",IBNAME_"@@"_DFN,IBDRX,IBX)=IBNCF_U_$P($G(^VA(200,+$P(IBND,U,4),0)),U)_U_$$FILE^IBRXUTL(IBRX,22)_U_U_IBFLG_U_$G(^TMP($J,"IBDRUG",+$P(IBND,U,6),.01))
"RTN","IBTUBO2",139,0)
 I IBMRA,$G(IBINMRA) S ^TMP($J,"IBTUB-RX_MRA",IBNAME_"@@"_DFN,IBDRX,IBX)=1
"RTN","IBTUBO2",140,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBTUBO2",141,0)
 ;
"RTN","IBTUBO2",142,0)
RXQ Q
"VER")
8.0^22.0
"BLD",8171,6)
^409
**END**
**END**
