Released DG*5.3*837 SEQ #752
Extracted from mail message
**KIDS**:DG*5.3*837^

**INSTALL NAME**
DG*5.3*837
"BLD",2851,0)
DG*5.3*837^REGISTRATION^0^3120316^y
"BLD",2851,1,0)
^^4^4^3120110^
"BLD",2851,1,1,0)
MESSAGING ENHANCEMENTS FOR NEW FIELDS
"BLD",2851,1,2,0)
 
"BLD",2851,1,3,0)
Refer to patch DG*5.3*837 in the FORUM Patch Module for a complete
"BLD",2851,1,4,0)
description.
"BLD",2851,4,0)
^9.64PA^2^2
"BLD",2851,4,2,0)
2
"BLD",2851,4,2,2,0)
^9.641^2^1
"BLD",2851,4,2,2,2,0)
PATIENT  (File-top level)
"BLD",2851,4,2,2,2,1,0)
^9.6411^991.09^2
"BLD",2851,4,2,2,2,1,991.08,0)
TEMPORARY ID NUMBER
"BLD",2851,4,2,2,2,1,991.09,0)
FOREIGN ID NUMBER
"BLD",2851,4,2,222)
y^n^p^^^^n^^n
"BLD",2851,4,2,224)

"BLD",2851,4,391.91,0)
391.91
"BLD",2851,4,391.91,2,0)
^9.641^391.9101^2
"BLD",2851,4,391.91,2,391.91,0)
TREATING FACILITY LIST  (File-top level)
"BLD",2851,4,391.91,2,391.91,1,0)
^9.6411^.08^5
"BLD",2851,4,391.91,2,391.91,1,.08,0)
ROI SIGNED INDICATOR
"BLD",2851,4,391.91,2,391.91,1,1,0)
*ASSIGNING AUTHORITY
"BLD",2851,4,391.91,2,391.91,1,10,0)
ASSIGNING AUTHORITY
"BLD",2851,4,391.91,2,391.91,1,11,0)
SOURCE ID
"BLD",2851,4,391.91,2,391.91,1,12,0)
IDENTIFIER STATUS
"BLD",2851,4,391.91,2,391.9101,0)
*SOURCE ID  (sub-file)
"BLD",2851,4,391.91,2,391.9101,1,0)
^9.6411^1^2
"BLD",2851,4,391.91,2,391.9101,1,.01,0)
*SOURCE ID
"BLD",2851,4,391.91,2,391.9101,1,1,0)
*IDENTIFIER STATUS
"BLD",2851,4,391.91,222)
y^y^p^^^^n^^n
"BLD",2851,4,391.91,224)

"BLD",2851,4,"APDD",2,2)

"BLD",2851,4,"APDD",2,2,991.08)

"BLD",2851,4,"APDD",2,2,991.09)

"BLD",2851,4,"APDD",391.91,391.91)

"BLD",2851,4,"APDD",391.91,391.91,.08)

"BLD",2851,4,"APDD",391.91,391.91,1)

"BLD",2851,4,"APDD",391.91,391.91,10)

"BLD",2851,4,"APDD",391.91,391.91,11)

"BLD",2851,4,"APDD",391.91,391.91,12)

"BLD",2851,4,"APDD",391.91,391.9101)

"BLD",2851,4,"APDD",391.91,391.9101,.01)

"BLD",2851,4,"APDD",391.91,391.9101,1)

"BLD",2851,4,"B",2,2)

"BLD",2851,4,"B",391.91,391.91)

"BLD",2851,6.3)
5
"BLD",2851,"ABPKG")
n
"BLD",2851,"INI")
DG837PRE
"BLD",2851,"INID")
^^y
"BLD",2851,"INIT")
DG837PST
"BLD",2851,"KRN",0)
^9.67PA^779.2^20
"BLD",2851,"KRN",.4,0)
.4
"BLD",2851,"KRN",.401,0)
.401
"BLD",2851,"KRN",.402,0)
.402
"BLD",2851,"KRN",.403,0)
.403
"BLD",2851,"KRN",.5,0)
.5
"BLD",2851,"KRN",.84,0)
.84
"BLD",2851,"KRN",3.6,0)
3.6
"BLD",2851,"KRN",3.8,0)
3.8
"BLD",2851,"KRN",9.2,0)
9.2
"BLD",2851,"KRN",9.8,0)
9.8
"BLD",2851,"KRN",9.8,"NM",0)
^9.68A^7^7
"BLD",2851,"KRN",9.8,"NM",1,0)
VAFCTFIN^^0^B87975194
"BLD",2851,"KRN",9.8,"NM",2,0)
VAFCTFU^^0^B65013803
"BLD",2851,"KRN",9.8,"NM",3,0)
DG837PST^^0^B63071273
"BLD",2851,"KRN",9.8,"NM",4,0)
VAFCPTED^^0^B15564397
"BLD",2851,"KRN",9.8,"NM",5,0)
DG837PRE^^0^B900068
"BLD",2851,"KRN",9.8,"NM",6,0)
VAFCPDAT^^0^B40842331
"BLD",2851,"KRN",9.8,"NM",7,0)
VAFCQRY1^^0^B75122287
"BLD",2851,"KRN",9.8,"NM","B","DG837PRE",5)

"BLD",2851,"KRN",9.8,"NM","B","DG837PST",3)

"BLD",2851,"KRN",9.8,"NM","B","VAFCPDAT",6)

"BLD",2851,"KRN",9.8,"NM","B","VAFCPTED",4)

"BLD",2851,"KRN",9.8,"NM","B","VAFCQRY1",7)

"BLD",2851,"KRN",9.8,"NM","B","VAFCTFIN",1)

"BLD",2851,"KRN",9.8,"NM","B","VAFCTFU",2)

"BLD",2851,"KRN",19,0)
19
"BLD",2851,"KRN",19.1,0)
19.1
"BLD",2851,"KRN",101,0)
101
"BLD",2851,"KRN",409.61,0)
409.61
"BLD",2851,"KRN",771,0)
771
"BLD",2851,"KRN",779.2,0)
779.2
"BLD",2851,"KRN",870,0)
870
"BLD",2851,"KRN",8989.51,0)
8989.51
"BLD",2851,"KRN",8989.52,0)
8989.52
"BLD",2851,"KRN",8994,0)
8994
"BLD",2851,"KRN","B",.4,.4)

"BLD",2851,"KRN","B",.401,.401)

"BLD",2851,"KRN","B",.402,.402)

"BLD",2851,"KRN","B",.403,.403)

"BLD",2851,"KRN","B",.5,.5)

"BLD",2851,"KRN","B",.84,.84)

"BLD",2851,"KRN","B",3.6,3.6)

"BLD",2851,"KRN","B",3.8,3.8)

"BLD",2851,"KRN","B",9.2,9.2)

"BLD",2851,"KRN","B",9.8,9.8)

"BLD",2851,"KRN","B",19,19)

"BLD",2851,"KRN","B",19.1,19.1)

"BLD",2851,"KRN","B",101,101)

"BLD",2851,"KRN","B",409.61,409.61)

"BLD",2851,"KRN","B",771,771)

"BLD",2851,"KRN","B",779.2,779.2)

"BLD",2851,"KRN","B",870,870)

"BLD",2851,"KRN","B",8989.51,8989.51)

"BLD",2851,"KRN","B",8989.52,8989.52)

"BLD",2851,"KRN","B",8994,8994)

"BLD",2851,"QDEF")
^^^^^^^^^^YES
"BLD",2851,"QUES",0)
^9.62^^
"BLD",2851,"REQB",0)
^9.611^4^4
"BLD",2851,"REQB",1,0)
DG*5.3*707^2
"BLD",2851,"REQB",2,0)
DG*5.3*712^2
"BLD",2851,"REQB",3,0)
DG*5.3*756^2
"BLD",2851,"REQB",4,0)
DG*5.3*821^2
"BLD",2851,"REQB","B","DG*5.3*707",1)

"BLD",2851,"REQB","B","DG*5.3*712",2)

"BLD",2851,"REQB","B","DG*5.3*756",3)

"BLD",2851,"REQB","B","DG*5.3*821",4)

"FIA",2)
PATIENT
"FIA",2,0)
^DPT(
"FIA",2,0,0)
2I
"FIA",2,0,1)
y^n^p^^^^n^^n
"FIA",2,0,10)

"FIA",2,0,11)

"FIA",2,0,"RLRO")

"FIA",2,0,"VR")
5.3^DG
"FIA",2,2)
1
"FIA",2,2,991.08)

"FIA",2,2,991.09)

"FIA",391.91)
TREATING FACILITY LIST
"FIA",391.91,0)
^DGCN(391.91,
"FIA",391.91,0,0)
391.91IP
"FIA",391.91,0,1)
y^y^p^^^^n^^n
"FIA",391.91,0,10)

"FIA",391.91,0,11)

"FIA",391.91,0,"RLRO")

"FIA",391.91,0,"VR")
5.3^DG
"FIA",391.91,391.91)
1
"FIA",391.91,391.91,.08)

"FIA",391.91,391.91,1)

"FIA",391.91,391.91,10)

"FIA",391.91,391.91,11)

"FIA",391.91,391.91,12)

"FIA",391.91,391.91,20)

"FIA",391.91,391.9101)
1
"FIA",391.91,391.9101,.01)

"FIA",391.91,391.9101,1)

"INI")
DG837PRE
"INIT")
DG837PST
"IX",391.91,391.91,"AE",0)
391.91^AE^Lookup using all identifier fields.^MU^^F^IR^W^391.9101^^^^^S
"IX",391.91,391.91,"AE",.1,0)
^^3^3^3100726^
"IX",391.91,391.91,"AE",.1,1,0)
This cross-reference will facilitate finding a specific unique identifier 
"IX",391.91,391.91,"AE",.1,2,0)
by SOURCE ID at the sub-file level and INSTITUTION, SOURCE ID TYPE, and 
"IX",391.91,391.91,"AE",.1,3,0)
ASSIGNING AUTHORITY.
"IX",391.91,391.91,"AE",1)
S ^DGCN(391.91,"AID",$E(X(1),1,150),X(2),X(3),X(4),DA(1),DA)=""
"IX",391.91,391.91,"AE",2)
K ^DGCN(391.91,"AID",$E(X(1),1,150),X(2),X(3),X(4),DA(1),DA)
"IX",391.91,391.91,"AE",2.5)
K ^DGCN(391.91,"AID")
"IX",391.91,391.91,"AE",11.1,0)
^.114IA^4^4
"IX",391.91,391.91,"AE",11.1,1,0)
1^F^391.9101^.01^150^1^F
"IX",391.91,391.91,"AE",11.1,2,0)
2^C^^^^2
"IX",391.91,391.91,"AE",11.1,2,1.5)
S X=$P(^DGCN(391.91,DA(1),0),"^",2)
"IX",391.91,391.91,"AE",11.1,3,0)
3^C^^^^3
"IX",391.91,391.91,"AE",11.1,3,1.5)
S X=$P(^DGCN(391.91,DA(1),0),"^",9)
"IX",391.91,391.91,"AE",11.1,4,0)
4^C^^^10^4
"IX",391.91,391.91,"AE",11.1,4,1.5)
S X=$P(^DGCN(391.91,DA(1),0),"^",10)
"IX",391.91,391.91,"AF",0)
391.91^AF^Lookup by SOURCE ID and ASSIGNING AUTHORITY.^MU^^F^IR^W^391.9101^^^^^S
"IX",391.91,391.91,"AF",.1,0)
^^4^4^3100726^
"IX",391.91,391.91,"AF",.1,1,0)
This cross-reference will facilitate finding a specific unique identifier 
"IX",391.91,391.91,"AF",.1,2,0)
by SOURCE ID at the sub-file level and ASSIGNING AUTHORITY when only 
"IX",391.91,391.91,"AF",.1,3,0)
those data fields are present, for example for a National Health 
"IX",391.91,391.91,"AF",.1,4,0)
Information Exchange (NHIE) location.
"IX",391.91,391.91,"AF",1)
S ^DGCN(391.91,"AID2",$E(X(1),1,150),X(2),DA(1),DA)=""
"IX",391.91,391.91,"AF",2)
K ^DGCN(391.91,"AID2",$E(X(1),1,150),X(2),DA(1),DA)
"IX",391.91,391.91,"AF",2.5)
K ^DGCN(391.91,"AID2")
"IX",391.91,391.91,"AF",11.1,0)
^.114IA^2^2
"IX",391.91,391.91,"AF",11.1,1,0)
1^F^391.9101^.01^150^1^F
"IX",391.91,391.91,"AF",11.1,2,0)
2^C^^^10^2
"IX",391.91,391.91,"AF",11.1,2,1.5)
S X=$P(^DGCN(391.91,DA(1),0),"^",10)
"IX",391.91,391.91,"AID",0)
391.91^AID^Find entry using all identifier fields.^R^^R^IR^I^391.91^^^^^S
"IX",391.91,391.91,"AID",.1,0)
^^2^2^3100726^
"IX",391.91,391.91,"AID",.1,1,0)
This cross-reference will facilitate finding a specific unique identifier 
"IX",391.91,391.91,"AID",.1,2,0)
by PATIENT, INSTITUTION, SOURCE ID TYPE, and ASSIGNING AUTHORITY.
"IX",391.91,391.91,"AID",1)
S ^DGCN(391.91,"AID",$E(X(1),1,150),X(2),X(3),$E(X(4),1,10),DA)=""
"IX",391.91,391.91,"AID",2)
K ^DGCN(391.91,"AID",$E(X(1),1,150),X(2),X(3),$E(X(4),1,10),DA)
"IX",391.91,391.91,"AID",2.5)
K ^DGCN(391.91,"AID")
"IX",391.91,391.91,"AID",11.1,0)
^.114IA^4^4
"IX",391.91,391.91,"AID",11.1,1,0)
1^F^391.91^.01^150^1^F
"IX",391.91,391.91,"AID",11.1,2,0)
2^F^391.91^.02^^2^F
"IX",391.91,391.91,"AID",11.1,3,0)
3^F^391.91^.09^^3^F
"IX",391.91,391.91,"AID",11.1,3,3)

"IX",391.91,391.91,"AID",11.1,4,0)
4^F^391.91^1^10^4^F
"IX",391.91,391.91,"AID2",0)
391.91^AID2^Lookup by PATIENT and ASSIGNING AUTHORITY.^R^^R^IR^I^391.91^^^^^S
"IX",391.91,391.91,"AID2",.1,0)
^^4^4^3100726^
"IX",391.91,391.91,"AID2",.1,1,0)
This cross-reference will facilitate finding a specific unique identifier 
"IX",391.91,391.91,"AID2",.1,2,0)
by PATIENT and ASSIGNING AUTHORITY when only those data fields are 
"IX",391.91,391.91,"AID2",.1,3,0)
present, for example for a National Health Information Exchange (NHIE) 
"IX",391.91,391.91,"AID2",.1,4,0)
location.
"IX",391.91,391.91,"AID2",1)
S ^DGCN(391.91,"AID2",$E(X(1),1,150),$E(X(2),1,10),DA)=""
"IX",391.91,391.91,"AID2",2)
K ^DGCN(391.91,"AID2",$E(X(1),1,150),$E(X(2),1,10),DA)
"IX",391.91,391.91,"AID2",2.5)
K ^DGCN(391.91,"AID2")
"IX",391.91,391.91,"AID2",11.1,0)
^.114IA^2^2
"IX",391.91,391.91,"AID2",11.1,1,0)
1^F^391.91^.01^150^1^F
"IX",391.91,391.91,"AID2",11.1,2,0)
2^F^391.91^1^10^2^F
"IX",391.91,391.91,"AKEY",0)
391.91^AKEY^Find entry using all identifier fields.^R^^R^IR^I^391.91^^^^^S
"IX",391.91,391.91,"AKEY",.1,0)
^^2^2^3111102^
"IX",391.91,391.91,"AKEY",.1,1,0)
This cross-reference will facilitate finding a specific unique identifier 
"IX",391.91,391.91,"AKEY",.1,2,0)
by PATIENT, INSTITUTION, SOURCE ID TYPE, and ASSIGNING AUTHORITY.
"IX",391.91,391.91,"AKEY",1)
S ^DGCN(391.91,"AKEY",$E(X(1),1,150),X(2),X(3),$E(X(4),1,70),DA)=""
"IX",391.91,391.91,"AKEY",2)
K ^DGCN(391.91,"AKEY",$E(X(1),1,150),X(2),X(3),$E(X(4),1,70),DA)
"IX",391.91,391.91,"AKEY",2.5)
K ^DGCN(391.91,"AKEY")
"IX",391.91,391.91,"AKEY",11.1,0)
^.114IA^4^4
"IX",391.91,391.91,"AKEY",11.1,1,0)
1^F^391.91^.01^150^1^F
"IX",391.91,391.91,"AKEY",11.1,1,3)

"IX",391.91,391.91,"AKEY",11.1,2,0)
2^F^391.91^.02^^2^F
"IX",391.91,391.91,"AKEY",11.1,2,3)

"IX",391.91,391.91,"AKEY",11.1,3,0)
3^F^391.91^.09^^3^F
"IX",391.91,391.91,"AKEY",11.1,3,3)

"IX",391.91,391.91,"AKEY",11.1,4,0)
4^F^391.91^10^70^4^F
"IX",391.91,391.91,"AKEY",11.1,4,3)

"IX",391.91,391.91,"AKEY2",0)
391.91^AKEY2^Lookup by PATIENT and ASSIGNING AUTHORITY.^R^^R^IR^I^391.91^^^^^S
"IX",391.91,391.91,"AKEY2",.1,0)
^^4^4^3111102^
"IX",391.91,391.91,"AKEY2",.1,1,0)
This cross-reference will facilitate finding a specific unique identifier 
"IX",391.91,391.91,"AKEY2",.1,2,0)
by PATIENT and ASSIGNING AUTHORITY when only those data fields are 
"IX",391.91,391.91,"AKEY2",.1,3,0)
present, for example for a National Health Information Exchange (NHIE) 
"IX",391.91,391.91,"AKEY2",.1,4,0)
location.
"IX",391.91,391.91,"AKEY2",1)
S ^DGCN(391.91,"AKEY2",$E(X(1),1,150),$E(X(2),1,70),DA)=""
"IX",391.91,391.91,"AKEY2",2)
K ^DGCN(391.91,"AKEY2",$E(X(1),1,150),$E(X(2),1,70),DA)
"IX",391.91,391.91,"AKEY2",2.5)
K ^DGCN(391.91,"AKEY2")
"IX",391.91,391.91,"AKEY2",11.1,0)
^.114IA^2^2
"IX",391.91,391.91,"AKEY2",11.1,1,0)
1^F^391.91^.01^150^1^F
"IX",391.91,391.91,"AKEY2",11.1,1,3)

"IX",391.91,391.91,"AKEY2",11.1,2,0)
2^F^391.91^10^70^2^F
"IX",391.91,391.91,"AKEY2",11.1,2,3)

"IX",391.91,391.91,"ASCR",0)
391.91^ASCR^X-REF on SOURCE ID and STATION NUMBER of SOURCE ID^MU^^F^IR^W^391.9101^^^^^A
"IX",391.91,391.91,"ASCR",.1,0)
^^2^2^3100108^
"IX",391.91,391.91,"ASCR",.1,1,0)
The ASCR cross-reference will be used to determine the INSTITUTION 
"IX",391.91,391.91,"ASCR",.1,2,0)
associated with the SOURCE ID.
"IX",391.91,391.91,"ASCR",1)
S ^DGCN(391.91,"ASCR",X(1),X(2),DA(1))=""
"IX",391.91,391.91,"ASCR",2)
K ^DGCN(391.91,"ASCR",X(1),X(2),DA(1))
"IX",391.91,391.91,"ASCR",2.5)
K ^DGCN(391.91,"ASCR")
"IX",391.91,391.91,"ASCR",11.1,0)
^.114IA^2^2
"IX",391.91,391.91,"ASCR",11.1,1,0)
1^F^391.9101^.01^^1^F
"IX",391.91,391.91,"ASCR",11.1,2,0)
2^C^^^^2^F
"IX",391.91,391.91,"ASCR",11.1,2,1.5)
S X=$P(^DGCN(391.91,DA(1),0),"^",2)
"IX",391.91,391.91,"ASID",0)
391.91^ASID^X-REF on SOURCE ID and INSTITUTION^R^^R^IR^I^391.91^^^^^S
"IX",391.91,391.91,"ASID",.1,0)
^^2^2^3111102^
"IX",391.91,391.91,"ASID",.1,1,0)
The ASID cross-reference will be used to determine the INSTITUTION 
"IX",391.91,391.91,"ASID",.1,2,0)
associated with the SOURCE ID.
"IX",391.91,391.91,"ASID",1)
S ^DGCN(391.91,"ASID",$E(X(1),1,150),X(2),DA)=""
"IX",391.91,391.91,"ASID",2)
K ^DGCN(391.91,"ASID",$E(X(1),1,150),X(2),DA)
"IX",391.91,391.91,"ASID",2.5)
K ^DGCN(391.91,"ASID")
"IX",391.91,391.91,"ASID",11.1,0)
^.114IA^2^2
"IX",391.91,391.91,"ASID",11.1,1,0)
1^F^391.91^11^150^1^F
"IX",391.91,391.91,"ASID",11.1,1,3)

"IX",391.91,391.91,"ASID",11.1,2,0)
2^F^391.91^.02^^2^F
"IX",391.91,391.91,"ASID",11.1,2,3)

"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813^2970721^12541
"PKG",5,22,1,"PAH",1,0)
837^3120316
"PKG",5,22,1,"PAH",1,1,0)
^^4^4^3120316
"PKG",5,22,1,"PAH",1,1,1,0)
MESSAGING ENHANCEMENTS FOR NEW FIELDS
"PKG",5,22,1,"PAH",1,1,2,0)
 
"PKG",5,22,1,"PAH",1,1,3,0)
Refer to patch DG*5.3*837 in the FORUM Patch Module for a complete
"PKG",5,22,1,"PAH",1,1,4,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","DG837PRE")
0^5^B900068^n/a
"RTN","DG837PRE",1,0)
DG837PRE ;BIR/PTD-PATCH DG*5.3*837 PRE-INSTALLATION ROUTINE ;12/7/2011
"RTN","DG837PRE",2,0)
 ;;5.3;Registration;**837**;Aug 13, 1993;Build 5
"RTN","DG837PRE",3,0)
 ;
"RTN","DG837PRE",4,0)
EN ;MVI_791 (ptd) Delete the DD definition for the IN-PERSON PROOFED
"RTN","DG837PRE",5,0)
 ;(#.08) field in the TREATING FACILITY LIST (#391.91) file.
"RTN","DG837PRE",6,0)
 ;KIDS will bring in DDs for the new ROI SIGNED INDICATOR (#.08) field.
"RTN","DG837PRE",7,0)
 ;If DG*5.3*837 already installed, don't need to do this again
"RTN","DG837PRE",8,0)
 I $$PATCH^XPDUTL("DG*5.3*837") Q
"RTN","DG837PRE",9,0)
 ;
"RTN","DG837PRE",10,0)
 D BMES^XPDUTL(">>> Deleting the DDs for the IN-PERSON PROOFED (#.08) field")
"RTN","DG837PRE",11,0)
 D MES^XPDUTL("    in the TREATING FACILITY LIST (#391.91) file.")
"RTN","DG837PRE",12,0)
 ;
"RTN","DG837PRE",13,0)
 S DIK="^DD(391.91,",DA=.08,DA(1)=391.91
"RTN","DG837PRE",14,0)
 D ^DIK
"RTN","DG837PRE",15,0)
 K DA,DIK
"RTN","DG837PRE",16,0)
 ;
"RTN","DG837PRE",17,0)
 D BMES^XPDUTL("    Pre-install routine completed successfully.")
"RTN","DG837PRE",18,0)
 Q
"RTN","DG837PRE",19,0)
 ;
"RTN","DG837PST")
0^3^B63071273^n/a
"RTN","DG837PST",1,0)
DG837PST ;BIR/PTD/ELZ/CKN-PATCH DG*5.3*837 POST INSTALLATION ROUTINE ; 1/3/12 1:30pm
"RTN","DG837PST",2,0)
 ;;5.3;Registration;**837**;Aug 13, 1993;Build 5
"RTN","DG837PST",3,0)
 ;
"RTN","DG837PST",4,0)
 D IDFLD,ALIAS
"RTN","DG837PST",5,0)
 D EP  ;MVI_791 - Conversion process for TF file #391.91
"RTN","DG837PST",6,0)
 Q
"RTN","DG837PST",7,0)
 ;
"RTN","DG837PST",8,0)
IDFLD ;MVI_876 (ptd) - Turn on Audit for the new DoD identification fields
"RTN","DG837PST",9,0)
 ;Do not run module if patch DG*5.3*837 previously installed.
"RTN","DG837PST",10,0)
 I $$PATCH^XPDUTL("DG*5.3*837") Q
"RTN","DG837PST",11,0)
 N FLDNUM
"RTN","DG837PST",12,0)
 S FLDNUM=991.08 D TURNON^DIAUTL(2,FLDNUM)
"RTN","DG837PST",13,0)
 D BMES^XPDUTL("The TEMPORARY ID NUMBER #"_FLDNUM_" field in the PATIENT file is set to AUDIT.")
"RTN","DG837PST",14,0)
 S FLDNUM=991.09 D TURNON^DIAUTL(2,FLDNUM)
"RTN","DG837PST",15,0)
 D BMES^XPDUTL("The FOREIGN ID NUMBER #"_FLDNUM_" field in the PATIENT file is set to AUDIT.")
"RTN","DG837PST",16,0)
 Q
"RTN","DG837PST",17,0)
 ;
"RTN","DG837PST",18,0)
ALIAS ;MVI_805 (elz) - clean up Alias multiple in patient (#2) file.
"RTN","DG837PST",19,0)
 ;Do not run module if patch DG*5.3*837 previously installed.
"RTN","DG837PST",20,0)
 I $$PATCH^XPDUTL("DG*5.3*837") Q
"RTN","DG837PST",21,0)
AGAIN ;Line tag to be called if module needs to be run again.
"RTN","DG837PST",22,0)
 N DGNM,DFN,DGX,FDA,DGERR
"RTN","DG837PST",23,0)
 D BMES^XPDUTL("Cleaning up duplicate Alias PATIENT file entries.")
"RTN","DG837PST",24,0)
 K ^TMP("DG837PST",$J)
"RTN","DG837PST",25,0)
 S DGNM="" F  S DGNM=$O(^DPT("B",DGNM)) Q:DGNM=""  S DFN=0 F  S DFN=$O(^DPT("B",DGNM,DFN)) Q:'DFN  I $O(^DPT("B",DGNM,DFN,0)) S ^TMP("DG837PST",$J,DFN)=""
"RTN","DG837PST",26,0)
 S DFN=0 F  S DFN=$O(^TMP("DG837PST",$J,DFN)) Q:'DFN  D
"RTN","DG837PST",27,0)
 . N DGALIAS
"RTN","DG837PST",28,0)
 . S DGX=0 F  S DGX=$O(^DPT(DFN,.01,DGX)) Q:'DGX  D
"RTN","DG837PST",29,0)
 .. S DGALIAS=$P($G(^DPT(DFN,.01,DGX,0)),"^",1,2) Q:DGALIAS=""
"RTN","DG837PST",30,0)
 .. I '$D(DGALIAS(DGALIAS)) S DGALIAS(DGALIAS)="" Q
"RTN","DG837PST",31,0)
 .. S FDA(2.01,DGX_","_DFN_",",.01)="@" D FILE^DIE("E","FDA","DGERR")
"RTN","DG837PST",32,0)
 .. I $G(DGERR("DIERR",1,"TEXT",1))'=""  D BMES^XPDUTL("ERROR: DFN"_DFN_" "_DGERR("DIERR",1,"TEXT",1))
"RTN","DG837PST",33,0)
 D BMES^XPDUTL("Done cleaning up Duplicate Alias entries.")
"RTN","DG837PST",34,0)
 K ^TMP("DG837PST",$J)
"RTN","DG837PST",35,0)
 Q
"RTN","DG837PST",36,0)
 ;
"RTN","DG837PST",37,0)
EP ;MVI_791 (ckn) - Post install routine entry point for TF conversion process
"RTN","DG837PST",38,0)
 N RESTART
"RTN","DG837PST",39,0)
 S RESTART=0
"RTN","DG837PST",40,0)
 I '$$CHECK() Q
"RTN","DG837PST",41,0)
 D QUE
"RTN","DG837PST",42,0)
 Q
"RTN","DG837PST",43,0)
QUE ;Queue the process
"RTN","DG837PST",44,0)
 N ZTRTN,ZTDESC,ZTSK
"RTN","DG837PST",45,0)
 S ZTRTN="PROCESS^DG837PST",ZTDESC="DG837PST - CONVERSION PROCESS TREATING FACILITY FILE"
"RTN","DG837PST",46,0)
 S ZTIO="",ZTDTH=$H
"RTN","DG837PST",47,0)
 D ^%ZTLOAD
"RTN","DG837PST",48,0)
 I $D(ZTSK) S ^XTMP("DG837PST","@@","TASK")=ZTSK
"RTN","DG837PST",49,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","DG837PST",50,0)
 Q
"RTN","DG837PST",51,0)
CHECK() ;Initial check
"RTN","DG837PST",52,0)
 D BMES^XPDUTL("Post install conversion process to update TREATING FACILITY FILE #391.91")
"RTN","DG837PST",53,0)
 N INITSTRT
"RTN","DG837PST",54,0)
 I '$D(^XTMP("DG837PST","@@","PROCESS INIT STARTED")) S (^XTMP("DG837PST","@@","PROCESS INIT STARTED"),^XTMP("DG837PST","@@","PROCESS STARTED"))=$$NOW^XLFDT() D BMES^XPDUTL("<<Process Started>>") Q 1
"RTN","DG837PST",55,0)
 I $D(^XTMP("DG837PST","@@","PROCESS COMPLETED")) D BMES^XPDUTL("<<Process is already completed>>")
"RTN","DG837PST",56,0)
 I $D(^XTMP("DG837PST","@@","PROCESS STOPPED")) D BMES^XPDUTL("<<Process stopped in previous run>>")
"RTN","DG837PST",57,0)
 I 'RESTART Q 0
"RTN","DG837PST",58,0)
 W ! S DIR(0)="Y",DIR("B")="Yes",DIR("A")="Do you want to complete the rerun" D ^DIR K DIR
"RTN","DG837PST",59,0)
 I '+Y Q 0
"RTN","DG837PST",60,0)
 S INITSTRT=$G(^XTMP("DG837PST","@@","PROCESS INIT STARTED"))
"RTN","DG837PST",61,0)
 K ^XTMP("DG837PST","@@")
"RTN","DG837PST",62,0)
 S ^XTMP("DG837PST","@@","PROCESS INIT STARTED")=$G(INITSTRT)
"RTN","DG837PST",63,0)
 S ^XTMP("DG837PST","@@","PROCESS STARTED")=$$NOW^XLFDT()
"RTN","DG837PST",64,0)
 D BMES^XPDUTL("<<Process Started>>") Q 1
"RTN","DG837PST",65,0)
PROCESS ;
"RTN","DG837PST",66,0)
 N TFIEN,MIEN,QFLG,X,X1,X2,FDA,FDAIEN,SNODE0,NODE0
"RTN","DG837PST",67,0)
 S QFLG=0
"RTN","DG837PST",68,0)
 S X1=DT,X2=60 D C^%DTC
"RTN","DG837PST",69,0)
 S ^XTMP("DG837PST","@@","TOTAL RECORDS")=$P($G(^DGCN(391.91,0)),"^",4)
"RTN","DG837PST",70,0)
 S ^XTMP("DG837PST",0)=X_"^"_$$DT^XLFDT_"^DG*5.3*837 - POST INSTALL - CONVERSION PROCESS IN TREATING FACILITY FILE"
"RTN","DG837PST",71,0)
 S TFIEN=+$G(^XTMP("DG837PST","@@","CURRENT IEN"))
"RTN","DG837PST",72,0)
 F  S TFIEN=$O(^DGCN(391.91,TFIEN)) Q:+TFIEN=0!(QFLG)  D
"RTN","DG837PST",73,0)
 . I $D(^XTMP("DG837PST","@@","FORCE STOP")) S QFLG=1 Q
"RTN","DG837PST",74,0)
 . S ^XTMP("DG837PST","@@","CURRENT IEN")=TFIEN
"RTN","DG837PST",75,0)
 . I $O(^DGCN(391.91,TFIEN,1,0))="" D
"RTN","DG837PST",76,0)
 . . N TMPST
"RTN","DG837PST",77,0)
 . . S TMPST=$P($G(^DGCN(391.91,TFIEN,0)),"^",2)
"RTN","DG837PST",78,0)
 . . I $E($$STA^XUAF4(TMPST),1,4)="200N" D  Q
"RTN","DG837PST",79,0)
 . . . N FDA
"RTN","DG837PST",80,0)
 . . . I $P($G(^DGCN(391.91,TFIEN,2)),"^")'="" S FDA(1,391.91,+TFIEN_",",10)=$P($G(^DGCN(391.91,TFIEN,2)),"^")
"RTN","DG837PST",81,0)
 . . . I $P($G(^DGCN(391.91,TFIEN,0)),"^",9)="" S FDA(1,391.91,+TFIEN_",",.09)="NI"
"RTN","DG837PST",82,0)
 . . . D FILE^DIE("K","FDA(1)","ERR")
"RTN","DG837PST",83,0)
 . . . K FDA
"RTN","DG837PST",84,0)
 . . I ($E($$STA^XUAF4(TMPST),1,4)'="200N")&(($$STA^XUAF4(TMPST)=200)!($$GET1^DIQ(4,TMPST_",",13)="OTHER")!($$GET1^DIQ(4,TMPST_",",13)="VAMC")) D
"RTN","DG837PST",85,0)
 . . . N FDA
"RTN","DG837PST",86,0)
 . . . S FDA(1,391.91,+TFIEN_",",.09)="PI",FDA(1,391.91,+TFIEN_",",10)="USVHA"
"RTN","DG837PST",87,0)
 . . . D FILE^DIE("K","FDA(1)","ERR")
"RTN","DG837PST",88,0)
 . . . K FDA
"RTN","DG837PST",89,0)
 . I $D(^DGCN(391.91,TFIEN,1)) D
"RTN","DG837PST",90,0)
 . . S MIEN=0 S MIEN=$O(^DGCN(391.91,TFIEN,1,MIEN)) Q:+MIEN=0
"RTN","DG837PST",91,0)
 . . S SNODE0=$G(^DGCN(391.91,TFIEN,1,MIEN,0))
"RTN","DG837PST",92,0)
 . . S FDA(1,391.91,+TFIEN_",",11)=$P(SNODE0,"^")  ;Source ID
"RTN","DG837PST",93,0)
 . . S FDA(1,391.91,+TFIEN_",",12)=$P(SNODE0,"^",2)  ;Identifier Status
"RTN","DG837PST",94,0)
 . . D FILE^DIE("K","FDA(1)","ERR")
"RTN","DG837PST",95,0)
 . . K FDA
"RTN","DG837PST",96,0)
 . . I $O(^DGCN(391.91,TFIEN,1,MIEN))="" Q  ;No more entries in multiple file
"RTN","DG837PST",97,0)
 . . ; For rest of the entries in multiple file, create new record.
"RTN","DG837PST",98,0)
 . . S NODE0=$G(^DGCN(391.91,TFIEN,0)),TMPST=$P(NODE0,"^",2)
"RTN","DG837PST",99,0)
 . . S FDA(1,391.91,"+1,",.01)=$P($G(NODE0),"^",1)
"RTN","DG837PST",100,0)
 . . S FDA(1,391.91,"+1,",.02)=$P($G(NODE0),"^",2)
"RTN","DG837PST",101,0)
 . . S FDA(1,391.91,"+1,",.03)=$P($G(NODE0),"^",3)
"RTN","DG837PST",102,0)
 . . S FDA(1,391.91,"+1,",.07)=$P($G(NODE0),"^",7)
"RTN","DG837PST",103,0)
 . . S FDA(1,391.91,"+1,",.08)=$P($G(NODE0),"^",8)
"RTN","DG837PST",104,0)
 . . S FDA(1,391.91,"+1,",.09)=$P($G(NODE0),"^",9)
"RTN","DG837PST",105,0)
 . . I $E($$STA^XUAF4(TMPST),1,4)="200N" S FDA(1,391.91,"+1,",10)="",FDA(1,391.91,"+1,",.09)="NI"
"RTN","DG837PST",106,0)
 . . I ($E($$STA^XUAF4(TMPST),1,4)'="200N")&(($$STA^XUAF4(TMPST)=200)!($$GET1^DIQ(4,TMPST_",",13)="OTHER")!($$GET1^DIQ(4,TMPST_",",13)="VAMC")) D
"RTN","DG837PST",107,0)
 . . . S FDA(1,391.91,"+1,",.09)="PI",FDA(1,391.91,"+1,",10)="USVHA"
"RTN","DG837PST",108,0)
 . . F  S MIEN=$O(^DGCN(391.91,TFIEN,1,MIEN)) Q:+MIEN=0  D
"RTN","DG837PST",109,0)
 . . . N FDAIEN S SNODE0=$G(^DGCN(391.91,TFIEN,1,MIEN,0))
"RTN","DG837PST",110,0)
 . . . S FDA(1,391.91,"+1,",11)=$P($G(SNODE0),"^")
"RTN","DG837PST",111,0)
 . . . S FDA(1,391.91,"+1,",12)=$P($G(SNODE0),"^",2)
"RTN","DG837PST",112,0)
 . . . D UPDATE^DIE("S","FDA(1)","FDAIEN","ERR")
"RTN","DG837PST",113,0)
 . . K FDA,FDAIEN
"RTN","DG837PST",114,0)
 . S DIK="^DGCN(391.91,"_TFIEN_",1,",DA(1)=TFIEN
"RTN","DG837PST",115,0)
 . S DA=0 F  S DA=$O(^DGCN(391.91,TFIEN,1,DA)) Q:+DA=0  D ^DIK
"RTN","DG837PST",116,0)
 . K DIK,DA
"RTN","DG837PST",117,0)
 I QFLG S ^XTMP("DG837PST","@@","PROCESS STOPPED")=$$NOW^XLFDT() Q
"RTN","DG837PST",118,0)
 S ^XTMP("DG837PST","@@","PROCESS COMPLETED")=$$NOW^XLFDT()
"RTN","DG837PST",119,0)
 D MAIL
"RTN","DG837PST",120,0)
 D DELDD ;Delete old fields once conversion process is done.
"RTN","DG837PST",121,0)
 Q
"RTN","DG837PST",122,0)
MAIL ;Send Mail message
"RTN","DG837PST",123,0)
 N PATCH,SITE,STATN,SITENM,MSG,XMDUZ,XMSUB,XMTEXT,XMY
"RTN","DG837PST",124,0)
 S PATCH="DG*5.3*837"
"RTN","DG837PST",125,0)
 S SITE=$$SITE^VASITE,STATN=$P($G(SITE),"^",3),SITENM=$P($G(SITE),"^",2)
"RTN","DG837PST",126,0)
 S (XMY(DUZ),XMY(.5))="",XMY("CHINTAN.NAIK@VA.GOV")="",XMY("PAULETTE.DAVIS@VA.GOV")="",XMY("CHRISTINE.CHESNEY@VA.GOV")=""
"RTN","DG837PST",127,0)
 S XMDUZ="MPI PATCH MONITOR",XMTEXT="MSG("
"RTN","DG837PST",128,0)
 S XMSUB="DG*5.3*837 - Conversion process completed for site: "_STATN
"RTN","DG837PST",129,0)
 S MSG(1)="The DG*5.3*837 post-init conversion process for TREATING FACILITY LIST (#391.91) file completed successfully."
"RTN","DG837PST",130,0)
 S MSG(1.5)=""
"RTN","DG837PST",131,0)
 S MSG(2)="Patch: "_PATCH
"RTN","DG837PST",132,0)
 S MSG(3)="Task: "_$G(^XTMP("DG837PST","@@","TASK"))
"RTN","DG837PST",133,0)
 S MSG(4)=""
"RTN","DG837PST",134,0)
 S MSG(5)="Site Station #: "_STATN
"RTN","DG837PST",135,0)
 S MSG(6)="Site Name: "_SITENM
"RTN","DG837PST",136,0)
 S MSG(7)=""
"RTN","DG837PST",137,0)
 S MSG(8)="Process Started at: "_$$FMTE^XLFDT($G(^XTMP("DG837PST","@@","PROCESS INIT STARTED")),"5P")
"RTN","DG837PST",138,0)
 S MSG(8.5)=""
"RTN","DG837PST",139,0)
 S MSG(9)="Process Completed at: "_$$FMTE^XLFDT($G(^XTMP("DG837PST","@@","PROCESS COMPLETED")),"5P")
"RTN","DG837PST",140,0)
 S MSG(9.5)=""
"RTN","DG837PST",141,0)
 S MSG(10)="Total Records in TREATING FACILITY LIST file (#391.91): "_^XTMP("DG837PST","@@","TOTAL RECORDS")
"RTN","DG837PST",142,0)
 D ^XMD
"RTN","DG837PST",143,0)
 Q
"RTN","DG837PST",144,0)
STRTAGN ;Re run of process in case of process is stopped
"RTN","DG837PST",145,0)
 N RESTART
"RTN","DG837PST",146,0)
 S RESTART=1
"RTN","DG837PST",147,0)
 I '$$CHECK() Q
"RTN","DG837PST",148,0)
 D QUE
"RTN","DG837PST",149,0)
 Q
"RTN","DG837PST",150,0)
STOP ;Stop the process
"RTN","DG837PST",151,0)
 W !!,"Stop process"
"RTN","DG837PST",152,0)
 I '$D(^XTMP("DG837PST","@@","PROCESS STARTED")) W !,"<< No process is currently running >>" Q
"RTN","DG837PST",153,0)
 I $D(^XTMP("DG837PST","@@","PROCESS COMPLETED")) W !,"<< Process already completed >>" Q
"RTN","DG837PST",154,0)
 W !!,"Process is currently running."
"RTN","DG837PST",155,0)
 W ! S DIR(0)="Y",DIR("B")="Yes",DIR("A")="Do you want to stop this process" D ^DIR K DIR
"RTN","DG837PST",156,0)
 I +Y S ^XTMP("DG837PST","@@","FORCE STOP")=1
"RTN","DG837PST",157,0)
 K DIR,Y
"RTN","DG837PST",158,0)
 Q
"RTN","DG837PST",159,0)
 ;
"RTN","DG837PST",160,0)
DELDD ;MVI_791 (ptd) - Delete obsolete fields in #391.91 file and 391.92.
"RTN","DG837PST",161,0)
 ;This code should only be called after the conversion
"RTN","DG837PST",162,0)
 ;routine has moved the data from the obsolete fields
"RTN","DG837PST",163,0)
 ;to the new fields and deleted the data.
"RTN","DG837PST",164,0)
 ;
"RTN","DG837PST",165,0)
 ;Delete these fields from the TREATING FACILITY LIST #391.91 file:
"RTN","DG837PST",166,0)
 ;   ASSIGNING AUTHORITY (#1) field, and
"RTN","DG837PST",167,0)
 ;   SOURCE ID (#20) subfile 391.9101, which includes the
"RTN","DG837PST",168,0)
 ;   SOURCE ID(#.01) and IDENTIFIER STATUS (#1) fields
"RTN","DG837PST",169,0)
 ;and delete the obsolete VAFC ASSIGNING AUTHORITY (#391.92) file.
"RTN","DG837PST",170,0)
 ;
"RTN","DG837PST",171,0)
 ;
"RTN","DG837PST",172,0)
 D BMES^XPDUTL("Removing obsolete fields from the TREATING FACILITY LIST #391.91 file.")
"RTN","DG837PST",173,0)
 ;Delete DD definition for the ASSIGNING AUTHORITY (#1)
"RTN","DG837PST",174,0)
 ;field in the TREATING FACILITY LIST (#391.91) file.
"RTN","DG837PST",175,0)
 ;
"RTN","DG837PST",176,0)
 S DIK="^DD(391.91,",DA=1,DA(1)=391.91
"RTN","DG837PST",177,0)
 D ^DIK
"RTN","DG837PST",178,0)
 K DA,DIK
"RTN","DG837PST",179,0)
 D BMES^XPDUTL(">>> Obsolete ASSIGNING AUTHORITY #1 field has been deleted.")
"RTN","DG837PST",180,0)
 ;
"RTN","DG837PST",181,0)
 ;Remove SOURCE ID (#391.9101) sub-file in the TREATING FACILITY
"RTN","DG837PST",182,0)
 ;LIST (#391.91) file.  S=subfile.
"RTN","DG837PST",183,0)
 I $$VFILE^DILFD(391.9101)=1 D  ;If sub-file exists, delete it.
"RTN","DG837PST",184,0)
 .S DIU=391.9101,DIU(0)="S"
"RTN","DG837PST",185,0)
 .D EN^DIU2
"RTN","DG837PST",186,0)
 .K DIU
"RTN","DG837PST",187,0)
 .D BMES^XPDUTL(">>> Obsolete SOURCE ID #391.9101 sub-file has been deleted.")
"RTN","DG837PST",188,0)
 ;
"RTN","DG837PST",189,0)
 ;Remove VAFC ASSIGNING AUTHORITY (#391.92) file; D=delete data
"RTN","DG837PST",190,0)
 I $$VFILE^DILFD(391.92)=1 D  ;If file exists, delete it.
"RTN","DG837PST",191,0)
 .D BMES^XPDUTL("Removing obsolete VAFC ASSIGNING AUTHORITY #391.92 file.")
"RTN","DG837PST",192,0)
 .S DIU="^DGCN(391.92,",DIU(0)="D"
"RTN","DG837PST",193,0)
 .D EN^DIU2
"RTN","DG837PST",194,0)
 .K DIU
"RTN","DG837PST",195,0)
 .D BMES^XPDUTL(">>> Obsolete VAFC ASSIGNING AUTHORITY #391.92 file has been deleted.")
"RTN","DG837PST",196,0)
 Q
"RTN","DG837PST",197,0)
 ;
"RTN","VAFCPDAT")
0^6^B40842331^B39036052
"RTN","VAFCPDAT",1,0)
VAFCPDAT ;BIR/CML/ALS-DISPLAY MPI/PD INFORMATION FOR SELECTED PATIENT ;10/24/02  13:13
"RTN","VAFCPDAT",2,0)
 ;;5.3;Registration;**333,414,474,505,707,712,837**;Aug 13, 1993;Build 5
"RTN","VAFCPDAT",3,0)
 ;Registration has IA #3299 for MPI/PD to call START^VAFCPDAT
"RTN","VAFCPDAT",4,0)
 ;
"RTN","VAFCPDAT",5,0)
 ;variable DFN is not NEWed or KILLed in this routine as that variable is passed in
"RTN","VAFCPDAT",6,0)
 ;
"RTN","VAFCPDAT",7,0)
MAIN ; Entry point with device call
"RTN","VAFCPDAT",8,0)
 S NOTRPC=1
"RTN","VAFCPDAT",9,0)
 K ZTSAVE S ZTSAVE("DFN")=""
"RTN","VAFCPDAT",10,0)
 D EN^XUTMDEVQ("START^VAFCPDAT","Print MPI/PD Patient Data",.ZTSAVE)
"RTN","VAFCPDAT",11,0)
 K NOTRPC
"RTN","VAFCPDAT",12,0)
 Q
"RTN","VAFCPDAT",13,0)
 ;
"RTN","VAFCPDAT",14,0)
START ;Entry point without device call, used for RPC calls
"RTN","VAFCPDAT",15,0)
 S $P(LN,"=",80)="",$P(LN2,"=",60)="",QFLG=0
"RTN","VAFCPDAT",16,0)
 D NOW^%DTC S HDT=$$FMTE^XLFDT($E(%,1,12))
"RTN","VAFCPDAT",17,0)
 S SITE=$$SITE^VASITE(),SITENAM=$P(SITE,"^",2),SITENUM=$P(SITE,"^",3),SITEIEN=$P(SITE,"^")
"RTN","VAFCPDAT",18,0)
 I +DFN<0 D  Q
"RTN","VAFCPDAT",19,0)
 .I $D(NOTRPC) W @IOF,!," "
"RTN","VAFCPDAT",20,0)
 .W !,"ICN ",$G(ICN)," does not exist at ",SITENAM,"."
"RTN","VAFCPDAT",21,0)
 .W !,"Search date: ",HDT,!,LN
"RTN","VAFCPDAT",22,0)
 S DIC=2,DR=".01;.02;.03;.09;.111;.112;.113;.114;.115;.1112;.131;.313;.351;994;.0907;.0906;.121",DA=DFN,DIQ(0)="EI",DIQ="DNODE"  ;**707,712
"RTN","VAFCPDAT",23,0)
 N NAME,SSN,DOB,SEX,CLAIM,DOD,ICN,STR1,STR2,STR3,CTY,ST,ZIP,PHN,MBI,SSNVER,PREAS,BAI,TIN,FIN  ;**707,712,837
"RTN","VAFCPDAT",24,0)
 D EN^DIQ1 K DIC,DR,DA,DIQ
"RTN","VAFCPDAT",25,0)
 S NAME=$G(DNODE(2,DFN,.01,"E")),SSN=$G(DNODE(2,DFN,.09,"E"))
"RTN","VAFCPDAT",26,0)
 S DOB=$$FMTE^XLFDT($G(DNODE(2,DFN,.03,"I")))
"RTN","VAFCPDAT",27,0)
 S MBI=$G(DNODE(2,DFN,994,"I")),MBI=$S(MBI="Y":"YES",MBI="N":"NO",1:"NULL")  ;**707
"RTN","VAFCPDAT",28,0)
 S SEX=$G(DNODE(2,DFN,.02,"E")),DOD=$G(DNODE(2,DFN,.351,"E"))
"RTN","VAFCPDAT",29,0)
 S CLAIM=$G(DNODE(2,DFN,.313,"E")) S:CLAIM="" CLAIM="None"
"RTN","VAFCPDAT",30,0)
 S BAI=$G(DNODE(2,DFN,.121,"E"))  ;**712
"RTN","VAFCPDAT",31,0)
 S STR1=$G(DNODE(2,DFN,.111,"E")),STR2=$G(DNODE(2,DFN,.112,"E")),STR3=$G(DNODE(2,DFN,.113,"E"))
"RTN","VAFCPDAT",32,0)
 S CTY=$G(DNODE(2,DFN,.114,"E")),ST=$G(DNODE(2,DFN,.115,"E")),ZIP=$G(DNODE(2,DFN,.1112,"E"))
"RTN","VAFCPDAT",33,0)
 S PHN=$G(DNODE(2,DFN,.131,"E"))
"RTN","VAFCPDAT",34,0)
 S SSNVER=$G(DNODE(2,DFN,.0907,"E"))  ;**707
"RTN","VAFCPDAT",35,0)
 S PREAS=$G(DNODE(2,DFN,.0906,"E"))  ;**707
"RTN","VAFCPDAT",36,0)
 S MNODE=$$MPINODE^MPIFAPI(DFN) I +MNODE=-1 S MNODE="^^^^^^^^"
"RTN","VAFCPDAT",37,0)
 S (ICN,SCN,SCORE,SCRDT,DIFF,TIN,FIN)=""   ;**837, MVI_883
"RTN","VAFCPDAT",38,0)
 S ICN=$P($G(MNODE),"^") S:ICN="" ICN="None"
"RTN","VAFCPDAT",39,0)
 ;S CMOR=$$GET1^DIQ(4,+$P($G(MNODE),"^",3)_",",.01) S:CMOR="" CMOR="None"    ;removed for **837, MVI_918
"RTN","VAFCPDAT",40,0)
 I $E(ICN,1,3)=SITENUM S GOT=0 D
"RTN","VAFCPDAT",41,0)
 . I $P($G(MNODE),"^",4)=""!('$D(^DPT("AICNL",1,DFN))) S ICN=ICN_"**"
"RTN","VAFCPDAT",42,0)
 S TIN=$P($G(MNODE),"^",8),FIN=$P($G(MNODE),"^",9)   ;**837, MVI_883
"RTN","VAFCPDAT",43,0)
 ;
"RTN","VAFCPDAT",44,0)
 I $D(NOTRPC) W @IOF,!
"RTN","VAFCPDAT",45,0)
 W !,"MPI/PD Data for: ",NAME,"  (DFN #",DFN,")"
"RTN","VAFCPDAT",46,0)
 ; check for patient sensitivity and user security
"RTN","VAFCPDAT",47,0)
 N RESULT,RGSENS,SENSTV,DA,DR,DIC,DIQ,VAFCSEN
"RTN","VAFCPDAT",48,0)
 D PTSEC^DGSEC4(.RESULT,DFN,0,"MPI/PD Patient Inquiry^MPI/PD Patient Inquiry")
"RTN","VAFCPDAT",49,0)
 I RESULT(1)=-1 W !!,"Access denied: Required parameters not defined" G QUIT
"RTN","VAFCPDAT",50,0)
 I RESULT(1)>0 W ?50,"***PATIENT MARKED SENSITIVE***"
"RTN","VAFCPDAT",51,0)
 I RESULT(1)=3 W !!,"Access not allowed on your own PATIENT (#2) file entry" G QUIT
"RTN","VAFCPDAT",52,0)
 I RESULT(1)=4 W !!,"Access denied: Your SSN is not defined" G QUIT
"RTN","VAFCPDAT",53,0)
 I RESULT(1)<3 D
"RTN","VAFCPDAT",54,0)
 . I RESULT(1)=1 D NOTICE^DGSEC4(.VAFCSEN,DFN,"RPC - VAFC REMOTE PDAT FROM THE MPI^MPI/PD Patient Inquiry (Remote)",2) ;IA #3027
"RTN","VAFCPDAT",55,0)
 . I RESULT(1)=2 D NOTICE^DGSEC4(.VAFCSEN,DFN,"RPC - VAFC REMOTE PDAT FROM THE MPI^MPI/PD Patient Inquiry (Remote)",3) ;IA #3027
"RTN","VAFCPDAT",56,0)
 W !,"Printed ",HDT," at ",SITENAM,!,LN
"RTN","VAFCPDAT",57,0)
 S $Y=$Y+1
"RTN","VAFCPDAT",58,0)
 ;next 7 lines modified for **707
"RTN","VAFCPDAT",59,0)
 W !,"ICN    : ",ICN  ;CMOR removed  **837, MVI_918
"RTN","VAFCPDAT",60,0)
 W !,"SSN    : ",SSN
"RTN","VAFCPDAT",61,0)
 I SSNVER]"" W !?9,"SSN Verification Status: ",SSNVER
"RTN","VAFCPDAT",62,0)
 I SSNVER="",PREAS]"" W !?9,"Pseudo SSN Reason: ",PREAS
"RTN","VAFCPDAT",63,0)
 I SSNVER]"",PREAS]"" W !?9,"Pseudo SSN Reason      : ",PREAS
"RTN","VAFCPDAT",64,0)
 W !,"Sex    : ",SEX
"RTN","VAFCPDAT",65,0)
 W !,"Claim #: ",CLAIM
"RTN","VAFCPDAT",66,0)
 W !,"Date of Birth: ",DOB
"RTN","VAFCPDAT",67,0)
 I DOD]"" W !,"Date of Death: ",DOD
"RTN","VAFCPDAT",68,0)
 I MBI]"" W !,"Multiple Birth Indicator: ",MBI  ;**707
"RTN","VAFCPDAT",69,0)
 I TIN]"" W !,"DoD Temporary ID Number : ",TIN  ;**837, MVI_883
"RTN","VAFCPDAT",70,0)
 I FIN]"" W !,"DoD Foreign ID Number   : ",FIN  ;**837, MVI_883
"RTN","VAFCPDAT",71,0)
 W !,"Address:" I BAI'="" W " (Bad Address Indicator: ",BAI,")"
"RTN","VAFCPDAT",72,0)
 I STR1'="" W !?9,STR1
"RTN","VAFCPDAT",73,0)
 I STR2'="" W !?9,STR2
"RTN","VAFCPDAT",74,0)
 I STR3'="" W !?9,STR3
"RTN","VAFCPDAT",75,0)
 I CTY'="" W !?9,$E(CTY,1,20)_", "_$G(ST)_" "_$G(ZIP)
"RTN","VAFCPDAT",76,0)
 I PHN'="" W !,"Phone #: ",PHN
"RTN","VAFCPDAT",77,0)
 I $G(IOSL)<30&($E(IOST,1,2)="C-") D
"RTN","VAFCPDAT",78,0)
 .I $Y>23 D
"RTN","VAFCPDAT",79,0)
 ..S DIR(0)="E" D  D ^DIR K DIR I 'Y S QFLG=1
"RTN","VAFCPDAT",80,0)
 ...S SS=22-$Y F JJ=1:1:SS W !
"RTN","VAFCPDAT",81,0)
 ..S $Y=0
"RTN","VAFCPDAT",82,0)
 I QFLG=1 G QUIT
"RTN","VAFCPDAT",83,0)
 ;
"RTN","VAFCPDAT",84,0)
TF ;List Treating Facilities for this patient
"RTN","VAFCPDAT",85,0)
 D TFHDR
"RTN","VAFCPDAT",86,0)
 K TFARR
"RTN","VAFCPDAT",87,0)
 S TF=0 F  S TF=$O(^DGCN(391.91,"APAT",DFN,TF)) Q:'TF  D
"RTN","VAFCPDAT",88,0)
 .S TFIEN=$O(^DGCN(391.91,"APAT",DFN,TF,0))
"RTN","VAFCPDAT",89,0)
 . S DIC="^DGCN(391.91,",DR=".02;.03;.07",DA=TFIEN,DIQ(0)="EI",DIQ="TFDATA"
"RTN","VAFCPDAT",90,0)
 . D EN^DIQ1 K DIC,DA,DR,DIQ
"RTN","VAFCPDAT",91,0)
 . S INST="",STATION=""
"RTN","VAFCPDAT",92,0)
 . S INST=$G(TFDATA(391.91,TFIEN,.02,"I"))
"RTN","VAFCPDAT",93,0)
 . I INST'="" D
"RTN","VAFCPDAT",94,0)
 .. S DIC=4,DR="99",DA=INST,DIQ(0)="E",DIQ="STA"
"RTN","VAFCPDAT",95,0)
 .. D EN^DIQ1 K DIC,DA,DR,DIQ
"RTN","VAFCPDAT",96,0)
 .. S STATION=$G(STA(4,INST,99,"E"))
"RTN","VAFCPDAT",97,0)
 . S TFNM=$G(TFDATA(391.91,TFIEN,.02,"E"))
"RTN","VAFCPDAT",98,0)
 . S LSTDT=$G(TFDATA(391.91,TFIEN,.03,"I")) S:LSTDT="" LSTDT="none found"
"RTN","VAFCPDAT",99,0)
 . S LSTSORT=9999999
"RTN","VAFCPDAT",100,0)
 . I +LSTDT S LSTSORT=9999999-LSTDT,LSTDT=$$FMTE^XLFDT($E(LSTDT,1,12))
"RTN","VAFCPDAT",101,0)
 . S REACODE=$G(TFDATA(391.91,TFIEN,.07,"E")) S REASON="none found"
"RTN","VAFCPDAT",102,0)
 . I REACODE'="" D
"RTN","VAFCPDAT",103,0)
 .. S DIC="^VAT(391.72,",DIC(0)="Z",X=REACODE D ^DIC K DIC,X
"RTN","VAFCPDAT",104,0)
 .. S REASON=$P($G(Y(0)),"^",4)
"RTN","VAFCPDAT",105,0)
 . S TFARR(LSTSORT,TFNM)=TFIEN_"^"_REASON_"^"_$G(STATION)_"^"_LSTDT
"RTN","VAFCPDAT",106,0)
 I '$D(TFARR) W !,"No Treating Facilities found." G SUB
"RTN","VAFCPDAT",107,0)
 S LSTSORT=0 F  S LSTSORT=$O(TFARR(LSTSORT)) Q:'LSTSORT  D  G:QFLG QUIT
"RTN","VAFCPDAT",108,0)
 .S TFNM="" F  S TFNM=$O(TFARR(LSTSORT,TFNM)) Q:TFNM=""  D  Q:QFLG
"RTN","VAFCPDAT",109,0)
 ..S REASON=$P(TFARR(LSTSORT,TFNM),"^",2)
"RTN","VAFCPDAT",110,0)
 ..S STATION=$P(TFARR(LSTSORT,TFNM),"^",3)
"RTN","VAFCPDAT",111,0)
 ..S LSTDT=$P(TFARR(LSTSORT,TFNM),"^",4)
"RTN","VAFCPDAT",112,0)
 ..I $Y+3>IOSL&($E(IOST,1,2)="C-") D  Q:QFLG
"RTN","VAFCPDAT",113,0)
 ...S LNQ=22 D SS Q:QFLG
"RTN","VAFCPDAT",114,0)
 ...W @IOF,!,"MPI/PD data for: ",NAME,"  (DFN #",DFN,")",!,LN2 D TFHDR
"RTN","VAFCPDAT",115,0)
 ..W !,$E(TFNM,1,20),?22,$G(STATION),?32,LSTDT,?54,REASON
"RTN","VAFCPDAT",116,0)
SUB ;removed listing of subscribers for RG*1.0*23
"RTN","VAFCPDAT",117,0)
HIS ;find ICN history
"RTN","VAFCPDAT",118,0)
 I '$O(^DPT(DFN,"MPIFHIS",0)) G CONT
"RTN","VAFCPDAT",119,0)
 ;
"RTN","VAFCPDAT",120,0)
 I $Y+4>IOSL&($E(IOST,1,2)="C-") D  G:QFLG QUIT
"RTN","VAFCPDAT",121,0)
 .S LNQ=22 D SS Q:QFLG
"RTN","VAFCPDAT",122,0)
 .W @IOF,!,"MPI/PD data for: ",NAME,"  (DFN #",DFN,")",!,LN2
"RTN","VAFCPDAT",123,0)
 D ICNHDR
"RTN","VAFCPDAT",124,0)
 S HIS=0 F  S HIS=$O(^DPT(DFN,"MPIFHIS",HIS)) Q:'HIS  D  G:QFLG QUIT
"RTN","VAFCPDAT",125,0)
 .S DIC=2,DR="992",DR(2.0992)=".01;3",DA=DFN,DA(2.0992)=HIS
"RTN","VAFCPDAT",126,0)
 .S DIQ(0)="E",DIQ="HISNODE"
"RTN","VAFCPDAT",127,0)
 .D EN^DIQ1 K DIC,DA,DR,DIQ
"RTN","VAFCPDAT",128,0)
 .S HISICN=$G(HISNODE(2.0992,HIS,.01,"E"))
"RTN","VAFCPDAT",129,0)
 .S HISDT=$G(HISNODE(2.0992,HIS,3,"E"))
"RTN","VAFCPDAT",130,0)
 .I $Y+3>IOSL&($E(IOST,1,2)="C-") D  Q:QFLG
"RTN","VAFCPDAT",131,0)
 ..S LNQ=22 D SS Q:QFLG
"RTN","VAFCPDAT",132,0)
 ..W @IOF,!,"MPI/PD data for: ",NAME,"  (DFN #",DFN,")",!,LN2 D ICNHDR
"RTN","VAFCPDAT",133,0)
 .W !,HISICN I HISDT]"" W "  - changed ",HISDT
"RTN","VAFCPDAT",134,0)
 ;
"RTN","VAFCPDAT",135,0)
CONT ;Continue to VAFCPDT2 for extended data
"RTN","VAFCPDAT",136,0)
 ;D CMORHIS^VAFCPDT2  
"RTN","VAFCPDAT",137,0)
 ;CMOR History removed, called changed to EXT^VAFCPDT2  **837, MVI_918
"RTN","VAFCPDAT",138,0)
 D EXT^VAFCPDT2
"RTN","VAFCPDAT",139,0)
DONE ;
"RTN","VAFCPDAT",140,0)
 I QFLG G QUIT
"RTN","VAFCPDAT",141,0)
 I ($E(IOST,1,2)="C-") S LNQ=24 D SS
"RTN","VAFCPDAT",142,0)
 ;
"RTN","VAFCPDAT",143,0)
QUIT ;
"RTN","VAFCPDAT",144,0)
 K %,CMOR,DIC,DIR,DIRUT,DNODE,GOT,HDT,HIS,HISDT,HISICN,JJ,LIEN,LINST
"RTN","VAFCPDAT",145,0)
 K LN,LSTDT,MNODE,REACODE,REASON,SCN,SCORE,SITE,SITEIEN,SITENAM,SITENUM
"RTN","VAFCPDAT",146,0)
 K SS,SUBN,SUBARR,TERM,TERMDT,TF,TFARR,TFDATA,TFIEN,TFNM,Y,D,CHG,CHGNODE
"RTN","VAFCPDAT",147,0)
 K HISNODE,DIFF,INST,RGDFN,SCRDT,STATION,STA,LN2,NAME,LSTSORT,LNQ,QFLG,MBI
"RTN","VAFCPDAT",148,0)
 Q
"RTN","VAFCPDAT",149,0)
TFHDR ;
"RTN","VAFCPDAT",150,0)
 W !!,"Treating Facilities:",?22,"Station:",?32,"DT Last Treated",?54,"Event Reason"
"RTN","VAFCPDAT",151,0)
 W !,"--------------------",?22,"--------",?32,"---------------",?54,"------------"
"RTN","VAFCPDAT",152,0)
 Q
"RTN","VAFCPDAT",153,0)
ICNHDR  W !!,"ICN History:",!,"------------"
"RTN","VAFCPDAT",154,0)
 Q
"RTN","VAFCPDAT",155,0)
 ;
"RTN","VAFCPDAT",156,0)
SS S DIR(0)="E" D  D ^DIR K DIR I 'Y S QFLG=1
"RTN","VAFCPDAT",157,0)
 .S SS=LNQ-$Y F JJ=1:1:SS W !
"RTN","VAFCPDAT",158,0)
 Q
"RTN","VAFCPTED")
0^4^B15564397^B12372310
"RTN","VAFCPTED",1,0)
VAFCPTED ;ISA/RJS,Zoltan-EDIT EXISTING PATIENT ;12/12/2011 14:10
"RTN","VAFCPTED",2,0)
 ;;5.3;Registration;**149,333,756,837**;Aug 13, 1993;Build 5
"RTN","VAFCPTED",3,0)
EDIT(DGDFN,ARRAY,STRNGDR) ;-- Edits existing patient
"RTN","VAFCPTED",4,0)
 ;Input:
"RTN","VAFCPTED",5,0)
 ;  DGDFN - IEN in the PATIENT (#2) file
"RTN","VAFCPTED",6,0)
 ;  ARRAY - Array containing fields to be edited.
"RTN","VAFCPTED",7,0)
 ;          Ex. ARRAY(.111)="123 STREET" or ARRAY(2,.111)="123...
"RTN","VAFCPTED",8,0)
 ;  STRNGDR - String of delimited PATIENT (#2) file fields in the order 
"RTN","VAFCPTED",9,0)
 ;            in which the fields will be processed by DIE.
"RTN","VAFCPTED",10,0)
 ;            Ex. ".01;.03;.05..."
"RTN","VAFCPTED",11,0)
 ;Output:
"RTN","VAFCPTED",12,0)
 ;  No output
"RTN","VAFCPTED",13,0)
 ;
"RTN","VAFCPTED",14,0)
 S U="^"
"RTN","VAFCPTED",15,0)
 N LOCKFLE,FLD,ZTQUEUED,DIQUIET,OLDZIP,VAFCX,STRNG
"RTN","VAFCPTED",16,0)
 S (ZTQUEUED,DIQUIET)=1
"RTN","VAFCPTED",17,0)
 L +^DPT(DGDFN):60
"RTN","VAFCPTED",18,0)
 S LOCKFLE=$T ; Need to remember whether the lock went through.
"RTN","VAFCPTED",19,0)
 I $L($G(@ARRAY@(.1112)))=5 D
"RTN","VAFCPTED",20,0)
 . ; This section prevents a 5-digit ZIP from replacing
"RTN","VAFCPTED",21,0)
 . ; an otherwise equivalent ZIP+4.
"RTN","VAFCPTED",22,0)
 . S OLDZIP=$$GET1^DIQ(2,DGDFN_",",.1112,"I")
"RTN","VAFCPTED",23,0)
 . I $E(OLDZIP,1,5)=@ARRAY@(.1112) S @ARRAY@(.1112)=OLDZIP
"RTN","VAFCPTED",24,0)
 ;process the given PATIENT file DR string in the given order
"RTN","VAFCPTED",25,0)
 S STRNG=STRNGDR F VAFCX=1:1 Q:STRNG=""  S FLD=$P(STRNGDR,";",VAFCX) S STRNG=$P(STRNGDR,";",VAFCX+1,$L(STRNGDR,";")) D LOAD
"RTN","VAFCPTED",26,0)
 ;
"RTN","VAFCPTED",27,0)
 ; **837, MVI_882 start
"RTN","VAFCPTED",28,0)
 S FLD("TEMP")=""
"RTN","VAFCPTED",29,0)
 F  S FLD("TEMP")=$O(@ARRAY@(FLD("TEMP"))) Q:'FLD("TEMP")  D
"RTN","VAFCPTED",30,0)
 . I $G(@ARRAY@(FLD("TEMP")))]"",STRNGDR'[FLD("TEMP") D
"RTN","VAFCPTED",31,0)
 . ; update TIN and/or FIN if it is missing in variable STRNGDR
"RTN","VAFCPTED",32,0)
 . I FLD("TEMP")=991.08!(FLD("TEMP")=991.09) S FLD=FLD("TEMP") D LOAD
"RTN","VAFCPTED",33,0)
 ; **837, MVI_882 end
"RTN","VAFCPTED",34,0)
 ;Do Address Bulletin if incoming Address does not equal existing
"RTN","VAFCPTED",35,0)
 ;Address - removed bulletin with patch DG*5.3*333
"RTN","VAFCPTED",36,0)
 ;
"RTN","VAFCPTED",37,0)
 ;I $D(@ARRAY@(.111))!$D(@ARRAY@(.112))!$D(@ARRAY@(.113))!$D(@ARRAY@(.114))!$D(@ARRAY@(.115))!$D(@ARRAY@(.117))!$D(@ARRAY@(.1112)) D  ;**333
"RTN","VAFCPTED",38,0)
 ;. D ADDRESS^RGRSBULL(DGDFN,$G(@ARRAY@(.01)),$G(@ARRAY@(.111)),$G(@ARRAY@(.112)),$G(@ARRAY@(.113)),@ARRAY@("SENDING SITE"),$G(@ARRAY@(.114)),$G(@ARRAY@(.117)),$G(@ARRAY@(.115)),$G(@ARRAY@(.1112)))
"RTN","VAFCPTED",39,0)
 ;
"RTN","VAFCPTED",40,0)
 I LOCKFLE L -^DPT(DGDFN)
"RTN","VAFCPTED",41,0)
 ;
"RTN","VAFCPTED",42,0)
 K DIE,DA
"RTN","VAFCPTED",43,0)
 Q
"RTN","VAFCPTED",44,0)
 ;
"RTN","VAFCPTED",45,0)
LOAD ; -- Loads fields to patient file
"RTN","VAFCPTED",46,0)
 N DR,DIE
"RTN","VAFCPTED",47,0)
 ;**756 check if updating ALIAS
"RTN","VAFCPTED",48,0)
 I FLD=1 D ALIAS Q
"RTN","VAFCPTED",49,0)
 S DA=DGDFN,DIE="^DPT("
"RTN","VAFCPTED",50,0)
 I $G(@ARRAY@(FLD))="" Q
"RTN","VAFCPTED",51,0)
 I $G(@ARRAY@(FLD))["@" S @ARRAY@(FLD)="@"
"RTN","VAFCPTED",52,0)
 ;GENERATE BULLETIN FOR CONDITION BELOW ?
"RTN","VAFCPTED",53,0)
 I $G(@ARRAY@(FLD))[U Q
"RTN","VAFCPTED",54,0)
 S DR=FLD_"///^S X=$G(@ARRAY@(FLD))"
"RTN","VAFCPTED",55,0)
 D ^DIE
"RTN","VAFCPTED",56,0)
 Q
"RTN","VAFCPTED",57,0)
 ;
"RTN","VAFCPTED",58,0)
ALIAS ; update Alias multiple **756
"RTN","VAFCPTED",59,0)
 ;allow the synchronizing of the Alias multiple with the data passed in the array
"RTN","VAFCPTED",60,0)
 ;array(1,x)=name (last, first middle suffix format)^ssn
"RTN","VAFCPTED",61,0)
 N HAVE,I,MIEN,ADD,DONE,FDA,MPIFERR,DEL,ALIAS,CNT,DGALIAS
"RTN","VAFCPTED",62,0)
 M HAVE=^DPT(DGDFN,.01)
"RTN","VAFCPTED",63,0)
 S CNT=0
"RTN","VAFCPTED",64,0)
 ;see if any need to be added
"RTN","VAFCPTED",65,0)
 S I=0 F  S I=$O(@ARRAY@(1,I)) Q:'I  D  ;loop through incoming data
"RTN","VAFCPTED",66,0)
 . S ADD=1,(DONE,MIEN)=0 F  S MIEN=$O(HAVE(MIEN)) Q:'MIEN  D  I DONE Q  ;loop through existing data
"RTN","VAFCPTED",67,0)
 ..I $P(@ARRAY@(1,I),"^",1,2)=$P($G(HAVE(MIEN,0)),"^",1,2) S ADD=0,DONE=1 Q  ;compare to existing data to see if already in subfile, if not then
"RTN","VAFCPTED",68,0)
 .I ADD S ALIAS=@ARRAY@(1,I) D  ;add new entry to subfile
"RTN","VAFCPTED",69,0)
 ..S FDA(2.01,"+"_I_","_DGDFN_",",.01)=$P(@ARRAY@(1,I),"^")
"RTN","VAFCPTED",70,0)
 ..S FDA(2.01,"+"_I_","_DGDFN_",",1)=$P(@ARRAY@(1,I),"^",2)
"RTN","VAFCPTED",71,0)
 I $D(FDA) D UPDATE^DIE("E","FDA",,"MPIFERR") I $G(MPIFERR("DIERR",1,"TEXT",1))'="" S RGER="-1^"_MPIFERR("DIERR",1,"TEXT",1)
"RTN","VAFCPTED",72,0)
 ;delete entries
"RTN","VAFCPTED",73,0)
 K FDA,MPIFERR
"RTN","VAFCPTED",74,0)
 S MIEN=0 F  S MIEN=$O(HAVE(MIEN)) Q:'MIEN  D  ;loop through existing data
"RTN","VAFCPTED",75,0)
 . ; **837,MVI_805 check for duplicates (name + ssn combination)
"RTN","VAFCPTED",76,0)
 . S HAVE=$P($G(HAVE(MIEN,0)),"^",1,2)
"RTN","VAFCPTED",77,0)
 . X $S(HAVE="":"",$D(DGALIAS(HAVE)):"S FDA(2.01,MIEN_"",""_DGDFN_"","",.01)=""@"" Q",1:"S DGALIAS(HAVE)=HAVE")
"RTN","VAFCPTED",78,0)
 . ;
"RTN","VAFCPTED",79,0)
 . S DEL=1,(DONE,I)=0 F  S I=$O(@ARRAY@(1,I)) Q:'I  D  I DONE Q  ;loop through incoming data
"RTN","VAFCPTED",80,0)
 . . I HAVE=$P(@ARRAY@(1,I),"^",1,2) S DEL=0,DONE=1 Q  ;compare to existing data to see if data should be deleted
"RTN","VAFCPTED",81,0)
 . I DEL S FDA(2.01,MIEN_","_DGDFN_",",.01)="@" ;existing entry to delete
"RTN","VAFCPTED",82,0)
 I $D(FDA) D FILE^DIE("E","FDA","MPIERR") I $G(MPIFERR("DIERR",1,"TEXT",1))'=""  S RGER="-1^"_MPIFERR("DIERR",1,"TEXT",1) ;delete entry
"RTN","VAFCPTED",83,0)
 Q
"RTN","VAFCQRY1")
0^7^B75122287^B65006931
"RTN","VAFCQRY1",1,0)
VAFCQRY1 ;BIR/DLR-Query for patient demographics ;22 Dec 2011  12:11 PM
"RTN","VAFCQRY1",2,0)
 ;;5.3;Registration;**428,474,477,575,627,648,698,711,707,837**;Aug 13, 1993;Build 5
"RTN","VAFCQRY1",3,0)
 ;
"RTN","VAFCQRY1",4,0)
 ;Reference to $$GETDFNS^MPIF002 supported by IA #3634.
"RTN","VAFCQRY1",5,0)
 ;
"RTN","VAFCQRY1",6,0)
BLDPID(DFN,CNT,SEQ,PID,HL,ERR) ;build PID from File #2
"RTN","VAFCQRY1",7,0)
 ; Variable list
"RTN","VAFCQRY1",8,0)
 ;  DFN - internal PATIENT (#2) number
"RTN","VAFCQRY1",9,0)
 ;  CNT - value to be place in PID seq#1 (SET ID)
"RTN","VAFCQRY1",10,0)
 ;  SEQ - variable consisting of sequence numbers delimited by commas
"RTN","VAFCQRY1",11,0)
 ;        that will be used to build the message (default is ALL)
"RTN","VAFCQRY1",12,0)
 ;  PID (passed by reference) - array location to place PID segment
"RTN","VAFCQRY1",13,0)
 ;        result, the array can have existing values when passed.
"RTN","VAFCQRY1",14,0)
 ;   HL - array that contains the necessary HL variables (init^hlsub)
"RTN","VAFCQRY1",15,0)
 ;  ERR - array that is used to return an error
"RTN","VAFCQRY1",16,0)
 ;
"RTN","VAFCQRY1",17,0)
 N VAFCMN,VAFCMMN,SITE,VAFCZN,SSN,SITE,APID,HIST,HISTDT,VAFCHMN,NXT,NXTC,COMP,REP,SUBCOMP,STATE,CITY,CLAIM,HLECH,HLFS,HLQ,STATEIEN,SARY,LVL,LNGTH,X,STN,SITA,HLES
"RTN","VAFCQRY1",18,0)
 I '$D(SEQ) S SEQ="ALL"
"RTN","VAFCQRY1",19,0)
 I SEQ="" S SEQ="ALL"
"RTN","VAFCQRY1",20,0)
 I SEQ'="ALL" D
"RTN","VAFCQRY1",21,0)
 .; setting up temp array to hold fields to be included in message
"RTN","VAFCQRY1",22,0)
 .N POS,EN S POS=1 F  S EN=$P(SEQ,",",POS) Q:EN=""  S SARY(EN)="",POS=POS+1
"RTN","VAFCQRY1",23,0)
 S HLECH=HL("ECH"),HLFS=HL("FS"),HLQ=HL("Q"),(COMP,HL("COMP"))=$E(HL("ECH"),1)
"RTN","VAFCQRY1",24,0)
 S (SUBCOMP,HL("SUBCOMP"))=$E(HL("ECH"),4),(REP,HL("REP"))=$E(HL("ECH"),2),HLES=$E(HL("ECH"),3)
"RTN","VAFCQRY1",25,0)
 ;get Patient File MPI node
"RTN","VAFCQRY1",26,0)
 S VAFCMN=""
"RTN","VAFCQRY1",27,0)
 N X S X="MPIFAPI" X ^%ZOSF("TEST") I $T S VAFCMN=$$MPINODE^MPIFAPI(DFN)
"RTN","VAFCQRY1",28,0)
 I +VAFCMN<0 S VAFCMN=""
"RTN","VAFCQRY1",29,0)
 S VAFCZN=^DPT(DFN,0),SSN=$P(^DPT(DFN,0),"^",9)
"RTN","VAFCQRY1",30,0)
 N VAFCA,VAFCA1 D GETS^DIQ(2,DFN_",","1*","E","VAFCA") ;**698 GETTING ALIAS INFO
"RTN","VAFCQRY1",31,0)
 ;** 707 reformat alias information to include ALIAS SSN in PID-3 with a location reference to the name in PID-5
"RTN","VAFCQRY1",32,0)
 I $D(VAFCA) N CT,ENT S CT=0,ENT="" F  S ENT=$O(VAFCA(2.01,ENT)) Q:ENT=""  D
"RTN","VAFCQRY1",33,0)
 .S CT=CT+1
"RTN","VAFCQRY1",34,0)
 .S VAFCA1(CT,"NAME")=$G(VAFCA(2.01,ENT,.01,"E"))
"RTN","VAFCQRY1",35,0)
 .;I $G(VAFCA(2.01,ENT,1,"E"))'="" S VAFCA1("SSN")="",VAFCA1(CT,"SSN")=$G(VAFCA(2.01,ENT,1,"E"))
"RTN","VAFCQRY1",36,0)
 .S VAFCA1(CT,"SSN")=$G(VAFCA(2.01,ENT,1,"E"))
"RTN","VAFCQRY1",37,0)
 S SITE=$$SITE^VASITE,STN=$P($$SITE^VASITE,"^",3)
"RTN","VAFCQRY1",38,0)
 N TMP F TMP=1:1:31 S APID(TMP)=""
"RTN","VAFCQRY1",39,0)
 S APID(2)=CNT
"RTN","VAFCQRY1",40,0)
 ;list of fields used for backwards compatibility with HDR
"RTN","VAFCQRY1",41,0)
 I $D(SARY(2))!(SEQ="ALL") I VAFCMN'="" S APID(3)=$P(VAFCMN,"^")_"V"_$P(VAFCMN,"^",2)  ;Patient ID
"RTN","VAFCQRY1",42,0)
 ;repeat patient ID list including ICN (NI),SSN (SS),CLAIM# (PN) AND DFN (PI)
"RTN","VAFCQRY1",43,0)
 I $D(SARY(3))!(SEQ="ALL") D
"RTN","VAFCQRY1",44,0)
 .S APID(4)=""
"RTN","VAFCQRY1",45,0)
 .;National Identifier (ICN)
"RTN","VAFCQRY1",46,0)
 .I VAFCMN'="",+VAFCMN>0 D
"RTN","VAFCQRY1",47,0)
 ..I $E($P(VAFCMN,"^"),1,3)=STN S SITA=STN
"RTN","VAFCQRY1",48,0)
 ..I $E($P(VAFCMN,"^"),1,3)'=STN S SITA="200M" ; **707 update assigning authority for national ICNs to 200M for MPI
"RTN","VAFCQRY1",49,0)
 ..S APID(4)=$P(VAFCMN,"^")_"V"_$P(VAFCMN,"^",2)_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"NI"_COMP_"VA FACILITY ID"_SUBCOMP_SITA_SUBCOMP_"L" D
"RTN","VAFCQRY1",50,0)
 ..;Assumption that if this is a local ICN at this point send the message with an expiration date of today, so that it will be treated as a deprecated ID and stored on the MPI as such
"RTN","VAFCQRY1",51,0)
 ..I $E($P(VAFCMN,"^"),1,3)=$P($$SITE^VASITE,"^",3) S APID(4)=APID(4)_COMP_COMP_$$HLDATE^HLFNC(DT,"DT") ;**707 TO ONLY SEND DATE NO TIME
"RTN","VAFCQRY1",52,0)
 .I $G(SSN)'="" S APID(4)=APID(4)_$S(APID(4)'="":REP,1:"")_SSN_COMP_COMP_COMP_"USSSA"_SUBCOMP_SUBCOMP_"0363"_COMP_"SS"_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L"
"RTN","VAFCQRY1",53,0)
 .S NXTC=0,LVL=0 ;**837,MVI_879: Move here, so that LVL gets set before pulling in TIN and FIN
"RTN","VAFCQRY1",54,0)
 .;**837,MVI_879: Get TIN and FIN from Patient file and put in PID-3
"RTN","VAFCQRY1",55,0)
 .N TIN,FIN,REF
"RTN","VAFCQRY1",56,0)
 .S TIN=$P(VAFCMN,"^",8),FIN=$P(VAFCMN,"^",9),REF=$NA(APID(4))
"RTN","VAFCQRY1",57,0)
 .D ADDLINE($S(TIN="":HLQ,1:TIN)_COMP_COMP_COMP_"USDOD"_SUBCOMP_SUBCOMP_"0363"_COMP_"TIN"_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L",.LVL,REF,REP)
"RTN","VAFCQRY1",58,0)
 .D ADDLINE($S(FIN="":HLQ,1:FIN)_COMP_COMP_COMP_"USDOD"_SUBCOMP_SUBCOMP_"0363"_COMP_"FIN"_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L",.LVL,REF,REP)
"RTN","VAFCQRY1",59,0)
 .I $G(DFN)'="" D
"RTN","VAFCQRY1",60,0)
 ..D ADDLINE(DFN_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"PI"_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L",.LVL,REF,REP)
"RTN","VAFCQRY1",61,0)
 ..;CLAIM# **707 moved dfn and claim number up here since Alias SSN could be many
"RTN","VAFCQRY1",62,0)
 ..I $D(^DPT(DFN,.31)) S CLAIM=$P(^DPT(DFN,.31),"^",3) I +CLAIM>0 D ADDLINE(CLAIM_COMP_COMP_COMP_"USVBA"_SUBCOMP_SUBCOMP_"0363"_COMP_"PN"_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L",.LVL,REF,REP)
"RTN","VAFCQRY1",63,0)
 .I $D(VAFCA1) D
"RTN","VAFCQRY1",64,0)
 ..;Have Alias SSNs
"RTN","VAFCQRY1",65,0)
 ..S CT=0 F  S CT=$O(VAFCA1(CT)) Q:+CT<1  D
"RTN","VAFCQRY1",66,0)
 ...S NXT=$S($G(VAFCA1(CT,"SSN"))="":HL("Q"),1:$G(VAFCA1(CT,"SSN")))_COMP_COMP_COMP_"USSSA"_SUBCOMP_SUBCOMP_"0363"_COMP_"SS"_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L"_COMP_COMP_$$HLDATE^HLFNC(DT,"DT")
"RTN","VAFCQRY1",67,0)
 ...I LVL=0 D
"RTN","VAFCQRY1",68,0)
 ....I $L(APID(4)_NXT)'>244 S APID(4)=APID(4)_REP_NXT Q
"RTN","VAFCQRY1",69,0)
 ....I $L(APID(4)_NXT)>244 S LVL=1 S LNGTH=244-$L(APID(4)),APID(4)=APID(4)_REP_$E(NXT,1,LNGTH) S LNGTH=LNGTH+1,NXT=$E(NXT,LNGTH,$L(NXT)),NXTC=1
"RTN","VAFCQRY1",70,0)
 ...I LVL>0 D
"RTN","VAFCQRY1",71,0)
 ....I $L($G(APID(4,LVL))_NXT)'>245 S APID(4,LVL)=$G(APID(4,LVL))_$S(NXTC=0:REP,1:"")_NXT Q
"RTN","VAFCQRY1",72,0)
 ....I $L($G(APID(4,LVL))_NXT)>245 S LNGTH=244-$L(APID(4,LVL)),APID(4,LVL)=APID(4,LVL)_REP_$E(NXT,1,LNGTH) S LNGTH=LNGTH+1,NXT=$E(NXT,LNGTH,$L(NXT)) S LVL=LVL+1 S APID(4,LVL)=NXT
"RTN","VAFCQRY1",73,0)
 ...I NXTC=1 S NXTC=0
"RTN","VAFCQRY1",74,0)
 .I $D(^DPT(DFN,"MPIFHIS")) N HIST S HIST=0  F  S HIST=$O(^DPT(DFN,"MPIFHIS",HIST)) Q:'HIST  S VAFCHMN=^DPT(DFN,"MPIFHIS",HIST,0) S HISTDT=$P(VAFCHMN,"^",4) D
"RTN","VAFCQRY1",75,0)
 ..;**477 due to a timing issue if checksum and D/T of deprication of ICN is not present hang two seconds and try again if still not able to get ICN set D/T to DT
"RTN","VAFCQRY1",76,0)
 ..I $G(HISTDT)="" H 2 S VAFCHMN=^DPT(DFN,"MPIFHIS",HIST,0) S HISTDT=$P(VAFCHMN,"^",4) I HISTDT="" S HISTDT=DT
"RTN","VAFCQRY1",77,0)
 ..I APID(4)'="" D
"RTN","VAFCQRY1",78,0)
 ...I $E($P(VAFCHMN,"^"),1,3)=STN S SITA=STN
"RTN","VAFCQRY1",79,0)
 ...I $E($P(VAFCHMN,"^"),1,3)'=STN S SITA="200M" ; **707 update assigning authority for national ICNs to 200M for MPI
"RTN","VAFCQRY1",80,0)
 ...S NXT=$P(VAFCHMN,"^")_"V"_$P(VAFCHMN,"^",2)_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"NI"_COMP_"VA FACILITY ID"_SUBCOMP_SITA_SUBCOMP_"L"_COMP_COMP_$$HLDATE^HLFNC(HISTDT,"DT") ;**648 only send date not time
"RTN","VAFCQRY1",81,0)
 ...I LVL=0 D
"RTN","VAFCQRY1",82,0)
 ....I $L(APID(4)_NXT)'>244 S APID(4)=APID(4)_REP_NXT Q
"RTN","VAFCQRY1",83,0)
 ....I $L(APID(4)_NXT)>244 S LVL=1 S LNGTH=244-$L(APID(4)),APID(4)=APID(4)_REP_$E(NXT,1,LNGTH) S LNGTH=LNGTH+1,NXT=$E(NXT,LNGTH,$L(NXT)),NXTC=1
"RTN","VAFCQRY1",84,0)
 ...I LVL>0 D
"RTN","VAFCQRY1",85,0)
 ....I $L($G(APID(4,LVL))_NXT)'>245 S APID(4,LVL)=$G(APID(4,LVL))_$S(NXTC=0:REP,1:"")_NXT Q
"RTN","VAFCQRY1",86,0)
 ....I $L($G(APID(4,LVL))_NXT)>245 S LNGTH=244-$L(APID(4,LVL)),APID(4,LVL)=APID(4,LVL)_REP_$E(NXT,1,LNGTH) S LNGTH=LNGTH+1,NXT=$E(NXT,LNGTH,$L(NXT)) S LVL=LVL+1 S APID(4,LVL)=NXT
"RTN","VAFCQRY1",87,0)
 ..I NXTC=1 S NXTC=0
"RTN","VAFCQRY1",88,0)
 ..I APID(4)="" D
"RTN","VAFCQRY1",89,0)
 ...I $E($P(VAFCHMN,"^"),1,3)=STN S SITA=STN
"RTN","VAFCQRY1",90,0)
 ...I $E($P(VAFCHMN,"^"),1,3)'=STN S SITA="200M"
"RTN","VAFCQRY1",91,0)
 ...S APID(4)=$P(VAFCHMN,"^")_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"NI"_COMP_"VA FACILITY ID"_SUBCOMP_SITA_SUBCOMP_"L"_COMP_COMP_$$HLDATE^HLFNC(HISTDT,"DT") ;**707 ONLY DATE NOT TIME
"RTN","VAFCQRY1",92,0)
NAMEPID ;patient name (last^first^middle^suffix^prefix^^"L" for legal)
"RTN","VAFCQRY1",93,0)
 I $D(SARY(5))!(SEQ="ALL") D
"RTN","VAFCQRY1",94,0)
 .;**711 code REMOVED PREFIX due to issues with existing PATIENT Name Standardization functionality
"RTN","VAFCQRY1",95,0)
 .N X S X=$P(VAFCZN,"^") D NAME^VAFCPID2(DFN,.X) S APID(6)=$$HLNAME^XLFNAME(X,"",$E(HL("ECH"),1)) I $P(APID(6),$E(HL("ECH"),1),7)'="L" S $P(APID(6),$E(HL("ECH"),1),7)="L"
"RTN","VAFCQRY1",96,0)
ALIAS .;patient alias (last^first^middle^suffice^prefix^^"A" for alias - can be multiple)
"RTN","VAFCQRY1",97,0)
 .N ALIAS,ALIEN,LVL6,NXTC,LNGTH S NXTC=0,LVL6=0
"RTN","VAFCQRY1",98,0)
 .I $D(VAFCA1) S ALIEN=0 F  S ALIEN=$O(VAFCA1(ALIEN)) Q:'ALIEN  D
"RTN","VAFCQRY1",99,0)
 ..S ALIAS=$$HLNAME^XLFNAME(VAFCA1(ALIEN,"NAME"),"",$E(HL("ECH"),1))
"RTN","VAFCQRY1",100,0)
 ..Q:ALIAS=""
"RTN","VAFCQRY1",101,0)
 ..S $P(ALIAS,$E(HL("ECH"),1),7)="A"
"RTN","VAFCQRY1",102,0)
 ..I LVL6=0 D
"RTN","VAFCQRY1",103,0)
 ...I $L(APID(6)_ALIAS)'>244 S APID(6)=APID(6)_REP_ALIAS Q
"RTN","VAFCQRY1",104,0)
 ...I $L(APID(6)_ALIAS)>244 S LVL6=1 S LNGTH=244-$L(APID(6)),APID(6)=APID(6)_REP_$E(ALIAS,1,LNGTH) S LNGTH=LNGTH+1,ALIAS=$E(ALIAS,LNGTH,$L(ALIAS)),NXTC=1
"RTN","VAFCQRY1",105,0)
 ..I LVL6>0 D
"RTN","VAFCQRY1",106,0)
 ...I $L($G(APID(6,LVL6))_ALIAS)'>245 S APID(6,LVL6)=$G(APID(6,LVL6))_$S(NXTC=0:REP,1:"")_ALIAS Q
"RTN","VAFCQRY1",107,0)
 ...I $L($G(APID(6,LVL6))_ALIAS)>245 S LNGTH=244-$L(APID(6,LVL6)),APID(6,LVL6)=APID(6,LVL6)_REP_$E(ALIAS,1,LNGTH) S LNGTH=LNGTH+1,ALIAS=$E(ALIAS,LNGTH,$L(ALIAS)) S LVL6=LVL6+1 S APID(6,LVL6)=ALIAS
"RTN","VAFCQRY1",108,0)
 ..I NXTC=1 S NXTC=0
"RTN","VAFCQRY1",109,0)
 . I APID(6)="" S APID(6)=HL("Q")
"RTN","VAFCQRY1",110,0)
MOTHER ;mother's maiden name  (last^first^middle^suffix^prefix^^"M" for maiden name)
"RTN","VAFCQRY1",111,0)
 I $D(SARY(6))!(SEQ="ALL") D
"RTN","VAFCQRY1",112,0)
 .S APID(7)=HL("Q")
"RTN","VAFCQRY1",113,0)
 .I $D(^DPT(DFN,.24)) S VAFCMMN=$P(^DPT(DFN,.24),"^",3) D
"RTN","VAFCQRY1",114,0)
 ..S APID(7)=$$HLNAME^XLFNAME(VAFCMMN,"",$E(HL("ECH"),1)) I APID(7)="" S APID(7)=HL("Q")
"RTN","VAFCQRY1",115,0)
 ..I $P(APID(7),$E(HL("ECH"),1),7)'="M" S $P(APID(7),$E(HL("ECH"),1),7)="M"
"RTN","VAFCQRY1",116,0)
 .I APID(7)="" S APID(7)=HL("Q")
"RTN","VAFCQRY1",117,0)
 I $D(SARY(7))!(SEQ="ALL") S APID(8)=$$HLDATE^HLFNC($P(VAFCZN,"^",3)) I APID(8)="" S APID(8)=HL("Q") ;date/time of birth
"RTN","VAFCQRY1",118,0)
 I $D(SARY(8))!(SEQ="ALL") S APID(9)=$P(VAFCZN,"^",2) I APID(9)="" S APID(9)=HL("Q") ;sex
"RTN","VAFCQRY1",119,0)
 ;place of birth city and state
"RTN","VAFCQRY1",120,0)
 ;split into 2 routines **707
"RTN","VAFCQRY1",121,0)
 D CONT^VAFCQRY3(DFN,.APID,.PID,.HL,HLES,.SARY,SEQ,.ERR,REP,COMP,SSN,VAFCMN)
"RTN","VAFCQRY1",122,0)
 D KVA^VADPT
"RTN","VAFCQRY1",123,0)
 Q
"RTN","VAFCQRY1",124,0)
HL7TXT(HL7STRG,HL,HLES) ; Replace occurrences of embedded HL7 delimiters with
"RTN","VAFCQRY1",125,0)
 ; HL7 escape sequence
"RTN","VAFCQRY1",126,0)
 ;
"RTN","VAFCQRY1",127,0)
 ; Inputs: HL7STRG - Data string to be checked
"RTN","VAFCQRY1",128,0)
 ;        HL("ECH") - HL7 delimiter string
"RTN","VAFCQRY1",129,0)
 ;              Delimiters MUST be in the following order,
"RTN","VAFCQRY1",130,0)
 ;              Escape, Field, Component, Repeat, Subcomponent
"RTN","VAFCQRY1",131,0)
 ;              Example: \^~|&
"RTN","VAFCQRY1",132,0)
 ;
"RTN","VAFCQRY1",133,0)
 ; Output: HL7XTRG - Data string with escape sequence added (if needed)
"RTN","VAFCQRY1",134,0)
 ;
"RTN","VAFCQRY1",135,0)
 N OCHR,RCHR,RCHRI,TYPE,I,HLES2
"RTN","VAFCQRY1",136,0)
 ;
"RTN","VAFCQRY1",137,0)
 I $G(HL("COMP"))="" S HL("COMP")=$E(HL("ECH"),1),HL("REP")=$E(HL("ECH"),2),HL("SUBCOMP")=$E(HL("ECH"),4)
"RTN","VAFCQRY1",138,0)
 ; Set HL7 escape char
"RTN","VAFCQRY1",139,0)
 S HLES2=HLES_HL("FS")_HL("COMP")_HL("REP")_HL("SUBCOMP")
"RTN","VAFCQRY1",140,0)
 ;
"RTN","VAFCQRY1",141,0)
 ; Search for occurrence of each delimiter and replace it with "\<type>\"
"RTN","VAFCQRY1",142,0)
 F TYPE="E","F","C","R","S" D
"RTN","VAFCQRY1",143,0)
 . S RCHRI=$S(TYPE="E":1,TYPE="F":2,TYPE="C":3,TYPE="R":4,TYPE="S":5)
"RTN","VAFCQRY1",144,0)
 . ;
"RTN","VAFCQRY1",145,0)
 . ; OCHR=original char, RCHR=replacement char
"RTN","VAFCQRY1",146,0)
 . S OCHR=$E(HLES2,RCHRI),RCHR=$E("EFSRT",RCHRI) Q:'$F(HL7STRG,OCHR)
"RTN","VAFCQRY1",147,0)
 . F I=1:1 Q:$E(HL7STRG,I)=""  I $E(HL7STRG,I)=OCHR S HL7STRG=$E(HL7STRG,1,I-1)_HLES_RCHR_HLES_$E(HL7STRG,I+1,999),I=I+2
"RTN","VAFCQRY1",148,0)
 Q
"RTN","VAFCQRY1",149,0)
 ;
"RTN","VAFCQRY1",150,0)
ADDLINE(NXT,LVL,REF,REP) ; Prepend REP to NXT and add it to the @REF
"RTN","VAFCQRY1",151,0)
 ; array, starting at subscript LVL. If appending NXT causes the node
"RTN","VAFCQRY1",152,0)
 ; to exceed 245 chars in length, add as much of NXT as possible to the
"RTN","VAFCQRY1",153,0)
 ; current level, and the remaining at the next level.
"RTN","VAFCQRY1",154,0)
 ; In:
"RTN","VAFCQRY1",155,0)
 ;   NXT = string to add to the @REF array
"RTN","VAFCQRY1",156,0)
 ;  .LVL = current subscript level (passed by referenced)
"RTN","VAFCQRY1",157,0)
 ;   REF = array reference string
"RTN","VAFCQRY1",158,0)
 ;   REP = repetition character (e.g., |)
"RTN","VAFCQRY1",159,0)
 ; **837,MVI_879: Created this subroutine to aid in adding TIN and FIN to PID-3.
"RTN","VAFCQRY1",160,0)
 N LNGTH,CURREF
"RTN","VAFCQRY1",161,0)
 S:$G(LVL)<1 LVL=0
"RTN","VAFCQRY1",162,0)
 S CURREF=$S(LVL=0:REF,1:$NA(@REF@(LVL)))
"RTN","VAFCQRY1",163,0)
 I LVL>0!($G(@CURREF)]"") S NXT=REP_NXT
"RTN","VAFCQRY1",164,0)
 I $L($G(@CURREF))+$L(NXT)'>245 S @CURREF=$G(@CURREF)_NXT
"RTN","VAFCQRY1",165,0)
 E  S LNGTH=245-$L(@CURREF),@CURREF=@CURREF_$E(NXT,1,LNGTH),LVL=LVL+1,@REF@(LVL)=$E(NXT,LNGTH+1,$L(NXT))
"RTN","VAFCQRY1",166,0)
 Q
"RTN","VAFCTFIN")
0^1^B87975194^B33860243
"RTN","VAFCTFIN",1,0)
VAFCTFIN ;BIR/DR-TREATING FACILTIY MFU PROCESSING ROUTINE ; 1/13/12 5:47pm
"RTN","VAFCTFIN",2,0)
 ;;5.3;Registration;**428,474,520,639,707,800,821,837**;Aug 13, 1993;Build 5
"RTN","VAFCTFIN",3,0)
 ;Reference to EXC, START, and STOP^RGHLLOG supported by IA #2796
"RTN","VAFCTFIN",4,0)
 ;
"RTN","VAFCTFIN",5,0)
IN ;This entry point is used to process the Treating Facility Master File Update Message.
"RTN","VAFCTFIN",6,0)
 ;It is called by the VAFC MFN-M05 CLIENT processing routine when a MFN
"RTN","VAFCTFIN",7,0)
 ;message is received.
"RTN","VAFCTFIN",8,0)
 ;There are no inputs or outputs
"RTN","VAFCTFIN",9,0)
 ;
"RTN","VAFCTFIN",10,0)
 ;Initial check whether incoming MFN message is old format or new. If it is old format, go to old routine (VAFCOFIN) to process.  **821
"RTN","VAFCTFIN",11,0)
 I HL("MTN")="MFK" D RSP Q
"RTN","VAFCTFIN",12,0)
 N VAFC,SG,MSG
"RTN","VAFCTFIN",13,0)
 F VAFCI=1:1 X HLNEXT Q:HLQUIT'>0  I $E(HLNODE,1,3)="MFE" S MSG=HLNODE
"RTN","VAFCTFIN",14,0)
 I $P($G(MSG),"^",3)'["-" D IN^VAFCOFIN Q
"RTN","VAFCTFIN",15,0)
 K VAFCI,HLNODE,SG,HLQUIT,HLDONE,MSG
"RTN","VAFCTFIN",16,0)
 S HLQUIT=0
"RTN","VAFCTFIN",17,0)
 ;
"RTN","VAFCTFIN",18,0)
 N VAFC,STATN,VAFCI,MSG,SG,VAFCARR,PDFN,INST,MFUPT,PDLT,TFIEN
"RTN","VAFCTFIN",19,0)
 N ICN,MFI,MFE,MFA,HLCOMP,CNT,X,VAFCERR,VAFCX,VAFCJ
"RTN","VAFCTFIN",20,0)
 ;quit if Master Patient Index (MPI) is not installed
"RTN","VAFCTFIN",21,0)
 S X="MPIF001" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFIN",22,0)
 S X="MPIFQ0" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFIN",23,0)
 S X="RGRSBUL1" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFIN",24,0)
 S X="RGRSBULL" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFIN",25,0)
INIT ;Process in the Treating Facility MFN msg
"RTN","VAFCTFIN",26,0)
 ;**837 - MVI_791 (ckn)
"RTN","VAFCTFIN",27,0)
 ;F VAFCI=1:1 X HLNEXT Q:HLQUIT'>0  S (MSG,VAFC(VAFCI))=HLNODE,SG=$E(HLNODE,1,3) D:SG?2A1(1A,1N) PICK
"RTN","VAFCTFIN",28,0)
 F VAFCI=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","VAFCTFIN",29,0)
 .K MSG S MSG=HLNODE
"RTN","VAFCTFIN",30,0)
 .S VAFCJ=0 F  S VAFCJ=$O(HLNODE(VAFCJ)) Q:'VAFCJ  S MSG(VAFCJ)=HLNODE(VAFCJ)
"RTN","VAFCTFIN",31,0)
 .S SG=$E(HLNODE,1,3)
"RTN","VAFCTFIN",32,0)
 .I SG="MFE" D MFE(.MSG) Q
"RTN","VAFCTFIN",33,0)
 .D PICK
"RTN","VAFCTFIN",34,0)
 ;reconcil the inbound TF list from the MPI to the local TF list
"RTN","VAFCTFIN",35,0)
 D RECONCIL
"RTN","VAFCTFIN",36,0)
 ;create response message
"RTN","VAFCTFIN",37,0)
 S CNT=1
"RTN","VAFCTFIN",38,0)
 S HLA("HLA",1)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_HL("FS") S CNT=CNT+1
"RTN","VAFCTFIN",39,0)
 S HLA("HLA",CNT)=MFI S CNT=CNT+1
"RTN","VAFCTFIN",40,0)
 ;S VAFCX=0 F  S VAFCX=$O(MFE(VAFCX)) Q:'VAFCX  S HLA("HLA",CNT)=MFE(VAFCX),CNT=CNT+1,HLA("HLA",CNT)=MFA(VAFCX),CNT=CNT+1
"RTN","VAFCTFIN",41,0)
 ;S VAFCX=0 F  S VAFCX=$O(MFE(VAFCX)) Q:'VAFCX  D
"RTN","VAFCTFIN",42,0)
 ;. S VAFCN=0 F  S VAFCN=$O(MFE(VAFCX,VAFCN)) Q:'VAFCN  D
"RTN","VAFCTFIN",43,0)
 ;.. S HLA("HLA",CNT)=MFE(VAFCX,VAFCN),CNT=CNT+1,HLA("HLA",CNT)=MFA(VAFCX,VAFCN),CNT=CNT+1
"RTN","VAFCTFIN",44,0)
 ;**837 - MVI_791 (ckn)
"RTN","VAFCTFIN",45,0)
 S VAFCX=0 F  S VAFCX=$O(MFE(VAFCX)) Q:'VAFCX  D
"RTN","VAFCTFIN",46,0)
 . S VAFCN=0 F  S VAFCN=$O(MFE(VAFCX,VAFCN)) Q:'VAFCN  D
"RTN","VAFCTFIN",47,0)
 .. S ZCNT=0 F  S ZCNT=$O(MFE(VAFCX,VAFCN,ZCNT)) Q:'ZCNT  D
"RTN","VAFCTFIN",48,0)
 ... I ZCNT=1 S HLA("HLA",CNT)=MFE(VAFCX,VAFCN,ZCNT)
"RTN","VAFCTFIN",49,0)
 ... I ZCNT>1 S HLA("HLA",CNT,ZCNT-1)=MFE(VAFCX,VAFCN,ZCNT)
"RTN","VAFCTFIN",50,0)
 ...; S HLA("HLA",CNT)=MFE(VAFCX,VAFCN,ZCNT),CNT=CNT+1
"RTN","VAFCTFIN",51,0)
 .. S CNT=CNT+1
"RTN","VAFCTFIN",52,0)
 .. S HLA("HLA",CNT)=MFA(VAFCX,VAFCN),CNT=CNT+1
"RTN","VAFCTFIN",53,0)
 ;generate an application level ack (MFK) identifying the status of the adds/edits/deletes of TF's passed in
"RTN","VAFCTFIN",54,0)
 D ROUTE
"RTN","VAFCTFIN",55,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.VAFCERR,"",.HLP)
"RTN","VAFCTFIN",56,0)
 Q
"RTN","VAFCTFIN",57,0)
PICK ;check routine for segment entry point
"RTN","VAFCTFIN",58,0)
 I $T(@SG)]"" D @SG
"RTN","VAFCTFIN",59,0)
 I $T(@SG)="" Q
"RTN","VAFCTFIN",60,0)
 Q
"RTN","VAFCTFIN",61,0)
MSH ;;MSH
"RTN","VAFCTFIN",62,0)
 ;process the MSH segment
"RTN","VAFCTFIN",63,0)
 S (HLFS,HL("FS"))=$E(MSG,4),(HLECH,HL("ECH"))=$E(MSG,5,8)
"RTN","VAFCTFIN",64,0)
 S HLCOMP=$E(HL("ECH"),1)
"RTN","VAFCTFIN",65,0)
 S VAFCARR("SENDING SITE")=$P(MSG,HL("FS"),4)
"RTN","VAFCTFIN",66,0)
 Q
"RTN","VAFCTFIN",67,0)
EVN ;;EVN
"RTN","VAFCTFIN",68,0)
 ;process the EVN segment
"RTN","VAFCTFIN",69,0)
 S STATN=+$$SITE^VASITE()_"^"_$$FMDATE^HLFNC($P(MSG,HL("FS"),3))
"RTN","VAFCTFIN",70,0)
 Q
"RTN","VAFCTFIN",71,0)
PID ;;PID
"RTN","VAFCTFIN",72,0)
 ;process the PID segment
"RTN","VAFCTFIN",73,0)
 S PDFN=+$P(MSG,HL("FS"),4)
"RTN","VAFCTFIN",74,0)
 Q
"RTN","VAFCTFIN",75,0)
MFI ;;MFI
"RTN","VAFCTFIN",76,0)
 ;process the MFI segment
"RTN","VAFCTFIN",77,0)
 S MFI=MSG
"RTN","VAFCTFIN",78,0)
 S MFUPT=$P(MSG,HL("FS"),4)
"RTN","VAFCTFIN",79,0)
 S VAFCARR("CMOR")=$P($P(MSG,HL("FS"),8),$E(HL("ECH"),1))
"RTN","VAFCTFIN",80,0)
 Q
"RTN","VAFCTFIN",81,0)
MFE(MSG) ;;MFE
"RTN","VAFCTFIN",82,0)
 ;process the MFE segment
"RTN","VAFCTFIN",83,0)
 N HLCOMP,NXTSGMT,TYPE,REP,MFE4,DFNATST,IDENSTAT
"RTN","VAFCTFIN",84,0)
 ;**837 - MVI_791 (ckn)
"RTN","VAFCTFIN",85,0)
 N LNGTH,SUBCOMP,TMFE,SEQ,SEQ1,X,NXT,Y,LNGTH2,LNGTH1
"RTN","VAFCTFIN",86,0)
 N LASTID,IDCNT,X,IDS,ACNT,AA,IDTYP,AATYP,MCNT,MFE5
"RTN","VAFCTFIN",87,0)
 S HLCOMP=$E(HL("ECH"),1),REP=$E(HL("ECH"),2),SUBCOMP=$E(HL("ECH"),4)
"RTN","VAFCTFIN",88,0)
 S LNGTH=$L(MSG,HL("FS")) F SEQ=1:1:LNGTH S TMFE(SEQ)=$P(MSG,HL("FS"),SEQ)
"RTN","VAFCTFIN",89,0)
 S SEQ1=1,X=0 F  S X=$O(MSG(X)) Q:'X  S LNGTH=$L(MSG(X),HL("FS")) D
"RTN","VAFCTFIN",90,0)
 . F Y=1:1:LNGTH S:Y'=1 SEQ=SEQ+1 D
"RTN","VAFCTFIN",91,0)
 .. S NXT=$P(MSG(X),HL("FS"),Y) D
"RTN","VAFCTFIN",92,0)
 ... I $L($G(TMFE(SEQ)))=245 D  Q
"RTN","VAFCTFIN",93,0)
 .... I $L(NXT_$G(TMFE(SEQ,SEQ1)))>245 S LNGTH1=$L(TMFE(SEQ,SEQ1)) S LNGTH2=245-LNGTH1,TMFE(SEQ,SEQ1)=$G(TMFE(SEQ,SEQ1))_$E(NXT,1,LNGTH2),LNGTH2=LNGTH2+1,NXT=$E(NXT,LNGTH2,$L(NXT)),SEQ1=SEQ1+1
"RTN","VAFCTFIN",94,0)
 .... I $L(NXT_$G(TMFE(SEQ,SEQ1)))'>245 S TMFE(SEQ,SEQ1)=$G(TMFE(SEQ,SEQ1))_NXT
"RTN","VAFCTFIN",95,0)
 ... I $L(NXT_$G(TMFE(SEQ)))>245 S LNGTH1=$L($G(TMFE(SEQ))) S LNGTH2=245-LNGTH1,TMFE(SEQ)=$G(TMFE(SEQ))_$E(NXT,1,LNGTH2),LNGTH2=LNGTH2+1,NXT=$E(NXT,LNGTH2,$L(NXT)) S TMFE(SEQ,SEQ1)=NXT
"RTN","VAFCTFIN",96,0)
 ... I $L(NXT_$G(TMFE(SEQ)))'>245 S TMFE(SEQ)=$G(TMFE(SEQ))_NXT Q
"RTN","VAFCTFIN",97,0)
 S MFE5=$G(TMFE(5))
"RTN","VAFCTFIN",98,0)
 S LASTID=$L(MFE5,REP),IDCNT=1,ACNT=0
"RTN","VAFCTFIN",99,0)
 F X=1:1:LASTID S ACNT=ACNT+1,IDS(ACNT)=$P(MFE5,REP,X) D
"RTN","VAFCTFIN",100,0)
 .;if this is the last entry check for an extension of the message and reset the key variables
"RTN","VAFCTFIN",101,0)
 .I X=LASTID I $D(TMFE(5,IDCNT)) D
"RTN","VAFCTFIN",102,0)
 ..S IDS(ACNT)=IDS(ACNT)_$P(TMFE(5,IDCNT),REP)
"RTN","VAFCTFIN",103,0)
 ..S MFE5=$P(TMFE(5,IDCNT),REP,2,99) I MFE5="" Q
"RTN","VAFCTFIN",104,0)
 ..S IDCNT=IDCNT+1,X=0,LASTID=$L(MFE5,REP)
"RTN","VAFCTFIN",105,0)
 S PDLT=$$FMDATE^HLFNC($G(TMFE(4)))
"RTN","VAFCTFIN",106,0)
 S INST=$P($G(TMFE(3)),"-")
"RTN","VAFCTFIN",107,0)
 S ZCNT=$P($G(TMFE(3)),"-",2)
"RTN","VAFCTFIN",108,0)
 S TYPE=$G(TMFE(2))
"RTN","VAFCTFIN",109,0)
 S IDENSTAT=$S(TYPE="MDC":"H",1:"A")
"RTN","VAFCTFIN",110,0)
 S ICN=$P($G(IDS(1)),HLCOMP)
"RTN","VAFCTFIN",111,0)
 S AATYP=$P($P($G(IDS(2)),HLCOMP,4),SUBCOMP,3)
"RTN","VAFCTFIN",112,0)
 S AA=$S(AATYP="ISO":$P($P($G(IDS(2)),HLCOMP,4),SUBCOMP,2),1:$P($P($G(IDS(2)),HLCOMP,4),SUBCOMP))
"RTN","VAFCTFIN",113,0)
 S IDTYP=$P($G(IDS(2)),HLCOMP,5)
"RTN","VAFCTFIN",114,0)
 ;We do not have facility to map ID type from OID in VistA so default "NI" value to Id type if site is 200N*
"RTN","VAFCTFIN",115,0)
 I $E(INST,1,4)="200N",AATYP="ISO" S IDTYP="NI"
"RTN","VAFCTFIN",116,0)
 S DFNATST=$P($G(IDS(2)),HLCOMP)
"RTN","VAFCTFIN",117,0)
 S MFE(INST,ZCNT,1)=MSG
"RTN","VAFCTFIN",118,0)
 I $D(MSG(1)) D
"RTN","VAFCTFIN",119,0)
 .S MCNT=0 F  S MCNT=$O(MSG(MCNT)) Q:+MCNT=0  S MFE(INST,ZCNT,MCNT+1)=MSG(MCNT)
"RTN","VAFCTFIN",120,0)
 S MFI(ICN,INST,ZCNT)=PDLT_"^^"_TYPE_"^^^^"_DFNATST_"^"_IDENSTAT_"^"_AA_"^"_IDTYP
"RTN","VAFCTFIN",121,0)
 Q
"RTN","VAFCTFIN",122,0)
ZET ;;ZET
"RTN","VAFCTFIN",123,0)
 ;process Patient's Date Last Treated Event Type, ZET segment
"RTN","VAFCTFIN",124,0)
 N PDLTET,IPP
"RTN","VAFCTFIN",125,0)
 S PDLTET=$P(MSG,HL("FS"),2)
"RTN","VAFCTFIN",126,0)
 S $P(MFI(ICN,INST,ZCNT),"^",2)=PDLTET
"RTN","VAFCTFIN",127,0)
 ;DG*5.3*800 - Process In-Person Proofed
"RTN","VAFCTFIN",128,0)
 S IPP=$P(MSG,HL("FS"),3) ;In-Person Proofed
"RTN","VAFCTFIN",129,0)
 S $P(MFI(ICN,INST,ZCNT),"^",6)=IPP
"RTN","VAFCTFIN",130,0)
 Q
"RTN","VAFCTFIN",131,0)
RSP ;response process logic entry point
"RTN","VAFCTFIN",132,0)
 Q
"RTN","VAFCTFIN",133,0)
ROUTE ;routing logic entry point
"RTN","VAFCTFIN",134,0)
 N MPI
"RTN","VAFCTFIN",135,0)
 S MPI=$$MPILINK^MPIFAPI() D
"RTN","VAFCTFIN",136,0)
 .I $P($G(MPI),U)'=-1 S HLL("LINKS",1)="VAFC MFN-M05 CLIENT"_"^"_MPI
"RTN","VAFCTFIN",137,0)
 .I $P($G(MPI),U)=-1 D
"RTN","VAFCTFIN",138,0)
 .. N RGLOG D START^RGHLLOG(HLMTIEN,"","")
"RTN","VAFCTFIN",139,0)
 .. D EXC^RGHLLOG(224,"No MPI link identified in CIRN SITE PARAMETER file (#991.8)",$G(PDFN))
"RTN","VAFCTFIN",140,0)
 .. D STOP^RGHLLOG(0)
"RTN","VAFCTFIN",141,0)
 Q
"RTN","VAFCTFIN",142,0)
TEST ;
"RTN","VAFCTFIN",143,0)
 W $$REPROC^HLUTIL(39266,"D IN^VAFCTFIN")
"RTN","VAFCTFIN",144,0)
 Q
"RTN","VAFCTFIN",145,0)
RECONCIL ;
"RTN","VAFCTFIN",146,0)
 N DFN,MFIC,VAFCX,VAFCY,TFL,CNFLT,LOCCMOR,VAFCTYPE,VAFCN,IDSTAT,SID
"RTN","VAFCTFIN",147,0)
 S CNFLT=0
"RTN","VAFCTFIN",148,0)
 S DFN=$$GETDFN^MPIF001(ICN)
"RTN","VAFCTFIN",149,0)
 I DFN'>0 S CNFLT=1_"^"_$P($G(DFN),"^",2)
"RTN","VAFCTFIN",150,0)
 I MFUPT="REP" I +CNFLT=0 D TFL^VAFCTFU1(.TFL,DFN) S VAFCX=0 F  S VAFCX=$O(TFL(VAFCX)) Q:'VAFCX  D
"RTN","VAFCTFIN",151,0)
 .; S MFIC($P(TFL(VAFCX),"^"))=TFL(VAFCX) I '$D(MFI(ICN,$P(TFL(VAFCX),"^"))) D DEL(ICN,$P(TFL(VAFCX),"^"))
"RTN","VAFCTFIN",152,0)
 . N EXTFIEN,STIEN,STEXT
"RTN","VAFCTFIN",153,0)
 . S MFIC($P(TFL(VAFCX),"^"))=TFL(VAFCX),STIEN=$$LKUP^XUAF4($P(TFL(VAFCX),"^")),STEXT=$P(TFL(VAFCX),"^")
"RTN","VAFCTFIN",154,0)
 . S EXTFIEN=0 F  S EXTFIEN=$O(^DGCN(391.91,"APAT",DFN,STIEN,EXTFIEN)) Q:+EXTFIEN=0  D
"RTN","VAFCTFIN",155,0)
 . . N NODE0,NODE2,EXIDTYP,EXAA,EXSID,EXIDST,ZCNT,MATCH
"RTN","VAFCTFIN",156,0)
 . .; Existing AA, ID type, Source ID, Identifier Status
"RTN","VAFCTFIN",157,0)
 . . S NODE0=$G(^DGCN(391.91,EXTFIEN,0)),NODE2=$G(^DGCN(391.91,EXTFIEN,2))
"RTN","VAFCTFIN",158,0)
 . . S EXIDTYP=$P(NODE0,"^",9),EXAA=$P(NODE2,"^"),EXSID=$P(NODE2,"^",2),EXIDST=$P(NODE2,"^",3)
"RTN","VAFCTFIN",159,0)
 . . ;Loop through MFI (incoming data) and compare the values
"RTN","VAFCTFIN",160,0)
 . . S ZCNT=0,MATCH=0 F  S ZCNT=$O(MFI(ICN,STEXT,ZCNT)) Q:+ZCNT=0!(MATCH)  D
"RTN","VAFCTFIN",161,0)
 . . . N TMPNODE,INIDST,INAA,INIDTYP,INSID
"RTN","VAFCTFIN",162,0)
 . . . S TMPNODE=$G(MFI(ICN,STEXT,ZCNT))
"RTN","VAFCTFIN",163,0)
 . . . S INSID=$P(TMPNODE,"^",7),INIDST=$P(TMPNODE,"^",8),INAA=$P(TMPNODE,"^",9),INIDTYP=$P(TMPNODE,"^",10)
"RTN","VAFCTFIN",164,0)
 . . . I INSID=EXSID,INIDST=EXIDST,INAA=EXAA,INIDTYP=EXIDTYP S MATCH=1 Q
"RTN","VAFCTFIN",165,0)
 . . . I 'MATCH,$E(STEXT,1,4)="200N" D  ;For 200N* only check Source ID and Idtype if no match for all matching criteria
"RTN","VAFCTFIN",166,0)
 . . . . I INSID=EXSID,INIDTYP=EXIDTYP S MATCH=1
"RTN","VAFCTFIN",167,0)
 . . I 'MATCH S DELTFARR(EXTFIEN)=""
"RTN","VAFCTFIN",168,0)
 . I $D(DELTFARR) S DTIEN=0 F  S DTIEN=$O(DELTFARR(DTIEN)) Q:+DTIEN=0  D DEL(ICN,STEXT,DTIEN)
"RTN","VAFCTFIN",169,0)
 . K DELTFARR
"RTN","VAFCTFIN",170,0)
 ;VAFCX=ICN and VAFCY=INSTITUTION
"RTN","VAFCTFIN",171,0)
 S VAFCX=0 F  S VAFCX=$O(MFI(VAFCX)) Q:'VAFCX  D
"RTN","VAFCTFIN",172,0)
 . S VAFCY=0 F  S VAFCY=$O(MFI(VAFCX,VAFCY)) Q:'VAFCY  D
"RTN","VAFCTFIN",173,0)
 .. S VAFCN=0 F  S VAFCN=$O(MFI(VAFCX,VAFCY,VAFCN)) Q:'VAFCN  D
"RTN","VAFCTFIN",174,0)
 ... S VAFCTYPE=$P(MFI(VAFCX,VAFCY,VAFCN),"^",3)
"RTN","VAFCTFIN",175,0)
 ... S SID=$P(MFI(VAFCX,VAFCY,VAFCN),"^",7)
"RTN","VAFCTFIN",176,0)
 ... S IDSTAT=$P(MFI(VAFCX,VAFCY,VAFCN),"^",8)
"RTN","VAFCTFIN",177,0)
 ...;**837 - MVI_791 (ckn)
"RTN","VAFCTFIN",178,0)
 ... S AA=$P(MFI(VAFCX,VAFCY,VAFCN),"^",9),IDTYP=$P(MFI(VAFCX,VAFCY,VAFCN),"^",10)
"RTN","VAFCTFIN",179,0)
 ... I +CNFLT=1 D
"RTN","VAFCTFIN",180,0)
 ....S MFA(VAFCY,VAFCN)="MFA"_HL("FS")_VAFCTYPE_HL("FS")_VAFCY_"-"_VAFCN_HL("FS")_$$HLDATE^HLFNC($$NOW^XLFDT)_HL("FS")_"U"_HLCOMP_$S(VAFCTYPE="MDL":"Delete of ",1:"Update of ")
"RTN","VAFCTFIN",181,0)
 ....S MFA(VAFCY,VAFCN)=$G(MFA(VAFCY,VAFCN))_VAFCY_" Failed at "_$P($$SITE^VASITE,"^",3)_" due to "_$P(CNFLT,"^",2)
"RTN","VAFCTFIN",182,0)
 ... I +CNFLT=0 I VAFCTYPE="MAD"!(VAFCTYPE="MUP")!(VAFCTYPE="MDC") D ADDUPD(DFN,VAFCY,$P(MFI(VAFCX,VAFCY,VAFCN),"^"),$P(MFI(VAFCX,VAFCY,VAFCN),"^",2),$P(MFI(VAFCX,VAFCY,VAFCN),"^",6),$G(SID),$G(IDSTAT),VAFCN,VAFCTYPE,AA,IDTYP)
"RTN","VAFCTFIN",183,0)
 ...; I +CNFLT=0 I VAFCTYPE="MDL" D DEL(ICN,VAFCY,VAFCN)
"RTN","VAFCTFIN",184,0)
 ... I +CNFLT=0 I VAFCTYPE="MDL" D
"RTN","VAFCTFIN",185,0)
 .... N EXTFIEN,STIEN
"RTN","VAFCTFIN",186,0)
 .... S STIEN=$$LKUP^XUAF4(VAFCY)
"RTN","VAFCTFIN",187,0)
 .... S EXTFIEN=0 F  S EXTFIEN=$O(^DGCN(391.91,"APAT",DFN,STIEN,EXTFIEN)) Q:+EXTFIEN=0  D
"RTN","VAFCTFIN",188,0)
 ..... N NODE0,NODE2,EXIDTYP,EXAA,EXSID,EXIDST
"RTN","VAFCTFIN",189,0)
 .....; Existing AA, ID type, Source ID, Identifier Status
"RTN","VAFCTFIN",190,0)
 ..... S NODE0=$G(^DGCN(391.91,EXTFIEN,0)),NODE2=$G(^DGCN(391.91,EXTFIEN,2))
"RTN","VAFCTFIN",191,0)
 ..... S EXIDTYP=$P(NODE0,"^",9),EXAA=$P(NODE2,"^"),EXSID=$P(NODE2,"^",2),EXIDST=$P(NODE2,"^",3)
"RTN","VAFCTFIN",192,0)
 ..... I EXIDTYP=IDTYP,EXAA=AA,EXSID=SID,EXIDST=IDSTAT D DEL(ICN,VAFCY,EXTFIEN) Q
"RTN","VAFCTFIN",193,0)
 ..... I $E(VAFCY,1,4)="200N" D  ;Check only Source iD and IdType for 200N*
"RTN","VAFCTFIN",194,0)
 ...... I EXIDTYP=IDTYP,EXSID=SID D DEL(ICN,VAFCY,EXTFIEN)
"RTN","VAFCTFIN",195,0)
 Q
"RTN","VAFCTFIN",196,0)
ADDUPD(DFN,INST,PDLT,PDLRTET,IPP,DFNATST,IDENSTAT,ZCNT,VAFCTYPE,AA,IDTYP) ;add or update TF entry
"RTN","VAFCTFIN",197,0)
 N ERROR,STA
"RTN","VAFCTFIN",198,0)
 S STA=INST
"RTN","VAFCTFIN",199,0)
 S INST=$$LKUP^XUAF4(INST)
"RTN","VAFCTFIN",200,0)
 I INST=0 S ERROR(STA)="Update of "_STA_" Failed at "_$P($$SITE^VASITE,"^",3)_" due to unknown Institution IEN "_INST_" passed into TF update."
"RTN","VAFCTFIN",201,0)
 I '$D(ERROR(STA)) D FILE^VAFCTFU(DFN,INST_"^"_$G(PDLT)_"^"_$G(PDLRTET),1,1,.ERROR,$G(IPP),DFNATST,IDENSTAT,AA,IDTYP)
"RTN","VAFCTFIN",202,0)
 S MFA(STA,ZCNT)="MFA"_HL("FS")_VAFCTYPE_HL("FS")_STA_"-"_ZCNT_HL("FS")_$$HLDATE^HLFNC($$NOW^XLFDT)_HL("FS")
"RTN","VAFCTFIN",203,0)
 I '$D(ERROR(STA)) S MFA(STA,ZCNT)=MFA(STA,ZCNT)_"S"
"RTN","VAFCTFIN",204,0)
 I $D(ERROR(STA)) S MFA(STA,ZCNT)=MFA(STA,ZCNT)_"U"_HLCOMP_ERROR(STA)_HL("FS")
"RTN","VAFCTFIN",205,0)
 Q
"RTN","VAFCTFIN",206,0)
DEL(ICN,INST,DTIEN) ;delete a TF entry
"RTN","VAFCTFIN",207,0)
 N ERROR,STA
"RTN","VAFCTFIN",208,0)
 S STA=INST
"RTN","VAFCTFIN",209,0)
 S INST=$$LKUP^XUAF4(INST)
"RTN","VAFCTFIN",210,0)
 S ERROR=$$DELETETF^VAFCTFU(ICN,INST,DTIEN)
"RTN","VAFCTFIN",211,0)
 ;**821 - No need to send MFA for entries that are deleted locally
"RTN","VAFCTFIN",212,0)
 ;S MFA(STA,ZCNT)="MFA"_HL("FS")_"MDL"_HL("FS")_STA_"-"_ZCNT_HL("FS")_$$HLDATE^HLFNC($$NOW^XLFDT)_HL("FS")
"RTN","VAFCTFIN",213,0)
 ;I +ERROR'=1 S MFA(STA,ZCNT)=MFA(STA,ZCNT)_"S"
"RTN","VAFCTFIN",214,0)
 ;I +ERROR=1 S MFA(STA,ZCNT)=MFA(STA,ZCNT)_"U"_HLCOMP_"Delete Failed: "_$P(ERROR,"^",2)
"RTN","VAFCTFIN",215,0)
 Q
"RTN","VAFCTFU")
0^2^B65013803^B52095428
"RTN","VAFCTFU",1,0)
VAFCTFU ;ALB/JLU-UTILITIES FOR THE TREATING FACILITY FILE 391.91 ; 2/23/12 1:29pm
"RTN","VAFCTFU",2,0)
 ;;5.3;Registration;**149,240,261,255,316,392,440,428,474,520,697,800,821,837**;Aug 13, 1993;Build 5
"RTN","VAFCTFU",3,0)
 ;
"RTN","VAFCTFU",4,0)
 ;Reference to EXC^RGHLLOG and STOP^RGHLLOG supported by IA #2796
"RTN","VAFCTFU",5,0)
 ;Reference to $$UPDATE^ MPIFAPI supported by IA #2706
"RTN","VAFCTFU",6,0)
 ;
"RTN","VAFCTFU",7,0)
 ;CHKSUB & GETSCN line tags removed, patch DG*5.3*697
"RTN","VAFCTFU",8,0)
 ;Subscriptions are no longer used and errors are being
"RTN","VAFCTFU",9,0)
 ;generated when attempting to add a subscription.
"RTN","VAFCTFU",10,0)
 ;
"RTN","VAFCTFU",11,0)
FILETF(PAT,INST) ;programmer entry point.
"RTN","VAFCTFU",12,0)
 ;INPUT   PAT - This is the patient's ICN
"RTN","VAFCTFU",13,0)
 ;       INST - This is the IEN of the institution or Treating Facility
"RTN","VAFCTFU",14,0)
 ;it also contains the date of treatment in FM format.  It is to be
"RTN","VAFCTFU",15,0)
 ;stored in an array structure to allow for multiple treating
"RTN","VAFCTFU",16,0)
 ;facilities.
"RTN","VAFCTFU",17,0)
 ;  EX.   X(1)=500^2960101
"RTN","VAFCTFU",18,0)
 ;        x(2)=425^2960202
"RTN","VAFCTFU",19,0)
 ;
"RTN","VAFCTFU",20,0)
 ;OUTPUT  0 (ZERO) If no errors
"RTN","VAFCTFU",21,0)
 ;        1^error description if there was an error.
"RTN","VAFCTFU",22,0)
 ;
"RTN","VAFCTFU",23,0)
 N PDFN,LP,VAFCER,X
"RTN","VAFCTFU",24,0)
 S VAFCER=0
"RTN","VAFCTFU",25,0)
 I '$G(PAT)!('$D(INST)) S VAFCER="1^Parameter missing." G FILETFQ
"RTN","VAFCTFU",26,0)
 I $D(@INST)<10 S VAFCER="1^Institution array not populated." G FILETFQ
"RTN","VAFCTFU",27,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T G FILETFQ
"RTN","VAFCTFU",28,0)
 S PDFN=$$GETDFN^MPIF001(PAT)
"RTN","VAFCTFU",29,0)
 I PDFN<0 S VAFCER="1^No patient DFN." G FILETFQ
"RTN","VAFCTFU",30,0)
 N FSTRG
"RTN","VAFCTFU",31,0)
 F LP=0:0 S LP=$O(@INST@(LP)) Q:'LP  D FILE(PDFN,@INST@(LP))
"RTN","VAFCTFU",32,0)
 ;
"RTN","VAFCTFU",33,0)
FILETFQ Q VAFCER
"RTN","VAFCTFU",34,0)
 ;
"RTN","VAFCTFU",35,0)
 ; both the SET & QUERYTF subroutines have been moved to VAFCTFU1 as
"RTN","VAFCTFU",36,0)
 ; the result of DG*5.3*261  *261 gjc@120899
"RTN","VAFCTFU",37,0)
 ;
"RTN","VAFCTFU",38,0)
FILE(PDFN,FSTRG,TICN,VAFCSLT,ERROR,IPP,SOURCEID,IDENSTAT,AA,IDTYP) ;this module files the individual entry
"RTN","VAFCTFU",39,0)
 ;PDFN is the patient's DFN
"RTN","VAFCTFU",40,0)
 ;FSTRG = institution or treating facility^Date of treatment^Event reason
"RTN","VAFCTFU",41,0)
 ;TICN - if 1 suppress add entries to ADT HL7 PIVOT (#391.71) file
"RTN","VAFCTFU",42,0)
 ;VAFCSLT - (optional) if 1 suppress exception logging and return error in the ERROR array
"RTN","VAFCTFU",43,0)
 ;ERROR - (optional) 
"RTN","VAFCTFU",44,0)
 ;Ex  500^2960202^A1
"RTN","VAFCTFU",45,0)
 ;
"RTN","VAFCTFU",46,0)
 N X,Y,TMPFLG
"RTN","VAFCTFU",47,0)
 I $G(VAFCSLT)="" S VAFCSLT=0
"RTN","VAFCTFU",48,0)
 S X="MPIF001" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFU",49,0)
 S X="MPIFQ0" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFU",50,0)
 N TFIEN,PDLT,FAC,EVNTR,VAFCER,CMOR,ICN,STA,ECNT
"RTN","VAFCTFU",51,0)
 S ECNT=1
"RTN","VAFCTFU",52,0)
 S FAC=$P(FSTRG,U,1),PDLT=$P(FSTRG,U,2),EVNTR=$P(FSTRG,U,3)
"RTN","VAFCTFU",53,0)
 S STA=$$STA^XUAF4(FAC)
"RTN","VAFCTFU",54,0)
 ;
"RTN","VAFCTFU",55,0)
 I '$$FIND1^DIC(4,"","MX","`"_FAC) D  Q
"RTN","VAFCTFU",56,0)
 . I 'VAFCSLT D EXC^RGHLLOG(212,"Msg#"_$G(HL("MID"))_" unknown Institution IEN "_FAC_" passed into TF update.",PDFN) D STOP^RGHLLOG(1) Q
"RTN","VAFCTFU",57,0)
 . I VAFCSLT S ERROR(STA)="Update of "_STA_" Failed at "_$P($$SITE^VASITE,"^",3)_" due to unknown Institution IEN "_FAC_" passed into TF update."
"RTN","VAFCTFU",58,0)
 I PDLT'="" K %DT S %DT="T" S X=PDLT D ^%DT K %DT I Y<0 S VAFCER="1^Not a FM date." D  Q
"RTN","VAFCTFU",59,0)
 .I 'VAFCSLT D EXC^RGHLLOG(212,"TF updated in msg#"_$G(HL("MID"))_" for Institution IEN "_FAC_" but with invalid date "_PDLT_" for DFN "_PDFN,PDFN)
"RTN","VAFCTFU",60,0)
 .I VAFCSLT S ERROR(STA)="Update of "_STA_" Failed at "_$P($$SITE^VASITE,"^",3)_" due to invalid date "_PDLT_" for DFN "_PDFN
"RTN","VAFCTFU",61,0)
 ;Quit if incoming values are null for Source ID, AA, ID Type and Identifier Status. We do not want to create or update entry.
"RTN","VAFCTFU",62,0)
 I $G(SOURCEID)="",$G(IDENSTAT)="",$G(AA)="",$G(IDTYP)="" Q
"RTN","VAFCTFU",63,0)
 ;removed code for adding local ICN's
"RTN","VAFCTFU",64,0)
 S ICN=+$$MPINODE^MPIFAPI(PDFN)
"RTN","VAFCTFU",65,0)
 ;**837 - MVI_791 (ckn) - Loop through all existing entries for TF to decide to update or add after comparing incoming values.
"RTN","VAFCTFU",66,0)
 ;S TFIEN=$O(^DGCN(391.91,"APAT",PDFN,FAC,0)) D
"RTN","VAFCTFU",67,0)
 S TMPFLG=0
"RTN","VAFCTFU",68,0)
 S TFIEN=0 F  S TFIEN=$O(^DGCN(391.91,"APAT",PDFN,FAC,TFIEN)) Q:+TFIEN=0!(TMPFLG)  D
"RTN","VAFCTFU",69,0)
 .;TFIEN is used in other places so quit after adding new entry
"RTN","VAFCTFU",70,0)
 .;**837 - MVI_791 (ckn)
"RTN","VAFCTFU",71,0)
 .I 'TFIEN Q
"RTN","VAFCTFU",72,0)
 .N TMPAA,TMPIDTYP,TMPSID,TMPIDST
"RTN","VAFCTFU",73,0)
 .;GET EXISTING FIELDS TO COMPARE WITH INCOMING VALUES
"RTN","VAFCTFU",74,0)
 .S TMPAA=$P($G(^DGCN(391.91,TFIEN,2)),"^") ;Existing Assigning Authority
"RTN","VAFCTFU",75,0)
 .S TMPIDTYP=$P($G(^DGCN(391.91,TFIEN,0)),"^",9) ;Existing IDtype
"RTN","VAFCTFU",76,0)
 .S TMPSID=$P($G(^DGCN(391.91,TFIEN,2)),"^",2) ;Existing Source ID
"RTN","VAFCTFU",77,0)
 .S TMPIDST=$P($G(^DGCN(391.91,TFIEN,2)),"^",3) ;Existing Identifier Status
"RTN","VAFCTFU",78,0)
 .;NOW COMPARE INCOMING FIELDS AND EXISTING FIELDS TO DETERMINE UNIQUE ENTRY
"RTN","VAFCTFU",79,0)
 .I TMPAA=$G(AA),TMPIDTYP=$G(IDTYP),TMPSID=$G(SOURCEID),TMPIDST=$G(IDENSTAT) S TMPFLG=1
"RTN","VAFCTFU",80,0)
 .I TMPFLG D FILEDIT(TFIEN,PDLT,PDFN,FAC,EVNTR,VAFCSLT,.ERROR,$G(IPP),$G(SOURCEID),$G(IDENSTAT),$G(AA),$G(IDTYP))
"RTN","VAFCTFU",81,0)
 I 'TMPFLG D FILENEW(PDFN,FAC,PDLT,EVNTR,VAFCSLT,.ERROR,$G(IPP),$G(SOURCEID),$G(IDENSTAT),AA,IDTYP) Q
"RTN","VAFCTFU",82,0)
 ;look to see if CMOR is in TF list if not add
"RTN","VAFCTFU",83,0)
 ;S CMOR=$$GETVCCI^MPIF001(PDFN)
"RTN","VAFCTFU",84,0)
 ;S CMOR=$$LKUP^XUAF4(CMOR) ; **520 REMOVED +
"RTN","VAFCTFU",85,0)
 ;check to see if CMOR exist if not add it
"RTN","VAFCTFU",86,0)
 ;MVI-791 (ckn) - no need to check for CMOR and add new
"RTN","VAFCTFU",87,0)
 ;I +$G(CMOR)>0 D:'$D(^DGCN(391.91,"APAT",PDFN,CMOR)) FILENEW^VAFCTFU(PDFN,CMOR)
"RTN","VAFCTFU",88,0)
 ;create the entry in the pivot to broadcast the MFU.
"RTN","VAFCTFU",89,0)
 ; Note: we will not broadcast to the MFU if the TFL record
"RTN","VAFCTFU",90,0)
 ; has an event reason. See comments in FILEDIT. *261 gjc@120199
"RTN","VAFCTFU",91,0)
 I $G(TICN)'=1,$P($$SEND^VAFHUTL,"^",2)>0 D SETSND(PDFN)
"RTN","VAFCTFU",92,0)
FILEQ Q
"RTN","VAFCTFU",93,0)
 ;
"RTN","VAFCTFU",94,0)
FILENEW(PDFN,FAC,PDLT,EVNTR,VAFCSLT,ERROR,IPP,SOURCEID,IDENSTAT,AA,IDTYP) ;
"RTN","VAFCTFU",95,0)
 N DGSENFLG ;**240 added y
"RTN","VAFCTFU",96,0)
 K DD,DO,DIC,DA,RESULT
"RTN","VAFCTFU",97,0)
 S DGSENFLG=""
"RTN","VAFCTFU",98,0)
 N FDA,FDAIEN,ERR S ERR=""
"RTN","VAFCTFU",99,0)
 I $G(EVNTR)'="" D CHK^DIE(391.91,.07,"",EVNTR,.RESULT) I +RESULT>0 S EVNTR=RESULT
"RTN","VAFCTFU",100,0)
 S FDA(1,391.91,"+1,",.01)=PDFN
"RTN","VAFCTFU",101,0)
 S FDA(1,391.91,"+1,",.02)=FAC
"RTN","VAFCTFU",102,0)
 S FDA(1,391.91,"+1,",.03)=$G(PDLT)
"RTN","VAFCTFU",103,0)
 S FDA(1,391.91,"+1,",.07)=$G(EVNTR)
"RTN","VAFCTFU",104,0)
 S FDA(1,391.91,"+1,",.08)=$G(IPP)
"RTN","VAFCTFU",105,0)
 ;**837 - MVI_791 (ckn)
"RTN","VAFCTFU",106,0)
 S FDA(1,391.91,"+1,",10)=$G(AA) ;Assigning Authority
"RTN","VAFCTFU",107,0)
 S FDA(1,391.91,"+1,",.09)=$G(IDTYP) ;Source Id Type
"RTN","VAFCTFU",108,0)
 S FDA(1,391.91,"+1,",11)=$G(SOURCEID) ;Source ID
"RTN","VAFCTFU",109,0)
 S FDA(1,391.91,"+1,",12)=$G(IDENSTAT) ;Identifier Status
"RTN","VAFCTFU",110,0)
 L +^DGCN(391.91,0):30
"RTN","VAFCTFU",111,0)
 D UPDATE^DIE("","FDA(1)","FDAIEN","ERR") I $D(ERR("DIERR",1)) S ERROR(STA)="Add of "_STA_" Failed at "_$P($$SITE^VASITE,"^",3)_" due to "_$G(ERR("DIERR",1,"TEXT",1))
"RTN","VAFCTFU",112,0)
 ;**837 (ckn) - MVI_791 - No more Source ID multiple
"RTN","VAFCTFU",113,0)
 ;I $G(SOURCEID)'="",$G(FDAIEN(1))'="" D UPDSID(PDFN,FAC,SOURCEID,IDENSTAT,FDAIEN(1))  ;Update SourceID multiple
"RTN","VAFCTFU",114,0)
 ;removed code to add a subscription
"RTN","VAFCTFU",115,0)
 L -^DGCN(391.91,0)
"RTN","VAFCTFU",116,0)
 K DIC,DD,DO,DA
"RTN","VAFCTFU",117,0)
 Q
"RTN","VAFCTFU",118,0)
 ;
"RTN","VAFCTFU",119,0)
UPDSID(PDFN,FAC,SID,IDSTAT,TFIEN) ;Update sourceid multiple
"RTN","VAFCTFU",120,0)
 N FDA,DGENDA,FILE,IENS
"RTN","VAFCTFU",121,0)
 S FILE=391.9101
"RTN","VAFCTFU",122,0)
 I $D(^DGCN(391.91,TFIEN,1,"B",SID)) D  Q  ;Update existing sub record
"RTN","VAFCTFU",123,0)
 . S DGENDA=$O(^DGCN(391.91,TFIEN,1,"B",SID,0))
"RTN","VAFCTFU",124,0)
 . S DGENDA(1)=TFIEN,IENS=$$IENS^DILF(.DGENDA)
"RTN","VAFCTFU",125,0)
 . S FDA(FILE,IENS,.01)=SID,FDA(FILE,IENS,1)=IDSTAT
"RTN","VAFCTFU",126,0)
 . D FILE^DIE("K","FDA","ERRORS(1)")
"RTN","VAFCTFU",127,0)
 ;add new sub record
"RTN","VAFCTFU",128,0)
 S DGENDA="+1",DGENDA(1)=TFIEN,IENS=$$IENS^DILF(.DGENDA)
"RTN","VAFCTFU",129,0)
 S FDA(FILE,IENS,.01)=SID,FDA(FILE,IENS,1)=IDSTAT
"RTN","VAFCTFU",130,0)
 D UPDATE^DIE("","FDA","IENA","ERRORS(1)")
"RTN","VAFCTFU",131,0)
 Q
"RTN","VAFCTFU",132,0)
SETSND(PDFN) ;sets the pivot file entry to send MFU
"RTN","VAFCTFU",133,0)
 ;
"RTN","VAFCTFU",134,0)
 N ANS,X
"RTN","VAFCTFU",135,0)
 S X="MPIF001" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFU",136,0)
 ; check if other facilities other than CMOR in TF list
"RTN","VAFCTFU",137,0)
 N SIT,CMOR,STOP
"RTN","VAFCTFU",138,0)
 S CMOR=$$GETVCCI^MPIF001(PDFN)
"RTN","VAFCTFU",139,0)
 S CMOR=$$LKUP^XUAF4(CMOR) ; **520 REMOVED +
"RTN","VAFCTFU",140,0)
 I CMOR=$P($$SITE^VASITE,"^") D
"RTN","VAFCTFU",141,0)
 .S SIT=0
"RTN","VAFCTFU",142,0)
 .S SIT=$O(^DGCN(391.91,"APAT",PDFN,SIT))
"RTN","VAFCTFU",143,0)
 .I SIT=CMOR S SIT=$O(^DGCN(391.91,"APAT",PDFN,SIT)) I SIT="" S STOP=""
"RTN","VAFCTFU",144,0)
 I $D(STOP) QUIT
"RTN","VAFCTFU",145,0)
 S ANS=$$PIVNW^VAFHPIVT(PDFN,DT,5,PDFN_";DPT(")
"RTN","VAFCTFU",146,0)
 I 'ANS QUIT
"RTN","VAFCTFU",147,0)
 D XMITFLAG^VAFCDD01(0,+ANS,0)
"RTN","VAFCTFU",148,0)
SETSNDQ Q
"RTN","VAFCTFU",149,0)
 ;
"RTN","VAFCTFU",150,0)
FILEDIT(TFIEN,PDLT,PDFN,FAC,EVNTR,VAFCSLT,ERROR,IPP,SOURCEID,IDENSTAT,AA,IDTYP) ;
"RTN","VAFCTFU",151,0)
 N DGSENFLG,FDA,FDAIEN,ERR,RESULT S DGSENFLG="",ERR=""
"RTN","VAFCTFU",152,0)
 I $G(PDLT)'=""!($G(IPP)'="")!($G(AA)'="")!($G(IDTYP)'="")!($G(SOURCEID)'="")!($G(IDENSTAT)'="") D
"RTN","VAFCTFU",153,0)
 .S TFIEN(0)=$G(^DGCN(391.91,TFIEN,0))
"RTN","VAFCTFU",154,0)
 .I $G(EVNTR)'="" D CHK^DIE(391.91,.07,"",EVNTR,.RESULT) I +RESULT>0 S EVNTR=RESULT
"RTN","VAFCTFU",155,0)
 .I $G(PDLT)'="" S FDA(1,391.91,+TFIEN_",",.03)=$G(PDLT)
"RTN","VAFCTFU",156,0)
 .S FDA(1,391.91,+TFIEN_",",.07)=$G(EVNTR)
"RTN","VAFCTFU",157,0)
 .I $G(IPP)'="" S FDA(1,391.91,+TFIEN_",",.08)=$G(IPP)
"RTN","VAFCTFU",158,0)
 .;**837 - MVI_791 (ckn)
"RTN","VAFCTFU",159,0)
 .I $G(AA)'="" S FDA(1,391.91,+TFIEN_",",10)=$G(AA)
"RTN","VAFCTFU",160,0)
 .I $G(IDTYP)'="" S FDA(1,391.91,+TFIEN_",",.09)=$G(IDTYP)
"RTN","VAFCTFU",161,0)
 .I $G(SOURCEID)'="" S FDA(1,391.91,+TFIEN_",",11)=$G(SOURCEID)
"RTN","VAFCTFU",162,0)
 .I $G(IDENSTAT)'="" S FDA(1,391.91,+TFIEN_",",12)=$G(IDENSTAT)
"RTN","VAFCTFU",163,0)
 .D FILE^DIE("K","FDA(1)","ERR") I VAFCSLT I $D(ERR("DIERR",1)) S ERROR(STA)="Edit of "_STA_" Failed at "_$P($$SITE^VASITE,"^",3)_" due to "_$G(ERR("DIERR",1,"TEXT",1))
"RTN","VAFCTFU",164,0)
 ;**837 - MVI_791 (ckn) - no more updates to multiples
"RTN","VAFCTFU",165,0)
 ;I $G(SOURCEID)'="" D UPDSID(PDFN,FAC,SOURCEID,IDENSTAT,TFIEN)
"RTN","VAFCTFU",166,0)
 ;remove code to add a subscription
"RTN","VAFCTFU",167,0)
 Q
"RTN","VAFCTFU",168,0)
 ;
"RTN","VAFCTFU",169,0)
DELETETF(PAT,INST,DTIEN) ;deletion entry point
"RTN","VAFCTFU",170,0)
 ;This entry point is used to delete a single Treating Facility from
"RTN","VAFCTFU",171,0)
 ;the Treating Facility list.
"RTN","VAFCTFU",172,0)
 ;**837 - MVI_791 (ckn) - Now we will have multiple entries in TF file so it is determined which entry to be deleted before calling this api. Hence, Treating Facility IEN is passed in. Unused code is commented out.
"RTN","VAFCTFU",173,0)
 ;INPUT  PAT - the ICN of the patient.
"RTN","VAFCTFU",174,0)
 ;       INST - the IEN of the institution to be deleted.
"RTN","VAFCTFU",175,0)
 ;       DTIEN - the IEN of Treating Facility file
"RTN","VAFCTFU",176,0)
 ;OUTPUT  0 (zero) - If no errors
"RTN","VAFCTFU",177,0)
 ;        1^error description if there was a problem
"RTN","VAFCTFU",178,0)
 ;
"RTN","VAFCTFU",179,0)
 ;**837 v4 MVI 791 (ckn) - check if DTIEN is passed
"RTN","VAFCTFU",180,0)
 I $G(DTIEN)="" Q "-1^DTIEN - IEN of Treating Facility not defined"
"RTN","VAFCTFU",181,0)
 N VAFCER,PDFN,TFIEN,X,VAFCSCN,LINK,VAFCLLN,IEN
"RTN","VAFCTFU",182,0)
 S VAFCER=0
"RTN","VAFCTFU",183,0)
 I '$G(PAT)!('$G(INST)) S VAFCER="1^Parameter missing." S ERROR(INST)="212"_"^"_$G(HL("MID"))_"^"_"Delete Failed: "_$P(VAFCER,"^") G DELTFQ
"RTN","VAFCTFU",184,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T G FILETFQ
"RTN","VAFCTFU",185,0)
 S PDFN=$$GETDFN^MPIF001(+PAT)
"RTN","VAFCTFU",186,0)
 I PDFN<0 S VAFCER="1^No patient DFN." G FILETFQ
"RTN","VAFCTFU",187,0)
 I '$$FIND1^DIC(4,"","MX","`"_INST) S VAFCER="1^Not an Institution IEN." G DELTFQ
"RTN","VAFCTFU",188,0)
 I '$D(^DGCN(391.91,DTIEN)) S VAFCER="1^Could not find Treating Facility." G DELTFQ
"RTN","VAFCTFU",189,0)
 D DELETE(DTIEN)
"RTN","VAFCTFU",190,0)
 I $D(^DGCN(391.91,DTIEN)) S VAFCER="1^DIK failed to delete entry" G DELTFQ
"RTN","VAFCTFU",191,0)
 ;terminate the subscription if there is one
"RTN","VAFCTFU",192,0)
 S VAFCSCN=+$P($$MPINODE^MPIFAPI(PDFN),"^",5) I +$G(VAFCSCN)>0 D
"RTN","VAFCTFU",193,0)
 .;get logical link
"RTN","VAFCTFU",194,0)
 . D LINK^HLUTIL3(INST,.LINK) S VAFCLLN=$O(LINK(0)) I +$G(VAFCLLN)>0 S VAFCLLN=LINK(VAFCLLN) D UPD^HLSUB(VAFCSCN,VAFCLLN,0,,$$NOW^XLFDT,,.HLER)
"RTN","VAFCTFU",195,0)
 ;**837 - MVI_791 (ckn) - no need to retire pdr anymore as it is not used
"RTN","VAFCTFU",196,0)
 ;D RETPDR^VAFCEHU2(PDFN,INST) ;**474 retire pdr when deleting tf
"RTN","VAFCTFU",197,0)
DELTFQ Q VAFCER
"RTN","VAFCTFU",198,0)
 ;
"RTN","VAFCTFU",199,0)
DELETE(TFIEN) ;the actual deletion code
"RTN","VAFCTFU",200,0)
 ;
"RTN","VAFCTFU",201,0)
 K DIK,DA
"RTN","VAFCTFU",202,0)
 S DIK="^DGCN(391.91,"
"RTN","VAFCTFU",203,0)
 S DA=TFIEN
"RTN","VAFCTFU",204,0)
 D ^DIK K DIK,DA
"RTN","VAFCTFU",205,0)
 Q
"RTN","VAFCTFU",206,0)
 ;
"RTN","VAFCTFU",207,0)
DELALLTF(PAT) ;Entry point to delete all Treating Facilities for a single
"RTN","VAFCTFU",208,0)
 ;patient.
"RTN","VAFCTFU",209,0)
 ;INPUT  PAT - The patient's ICN
"RTN","VAFCTFU",210,0)
 ;OUTPUT 0 (zero) - If no errors
"RTN","VAFCTFU",211,0)
 ;       1^error description if an error
"RTN","VAFCTFU",212,0)
 ;
"RTN","VAFCTFU",213,0)
 N VAFCER,PDFN,LP,TFIEN,X
"RTN","VAFCTFU",214,0)
 S VAFCER=0
"RTN","VAFCTFU",215,0)
 I '$G(PAT) Q "1^Parameter missing."
"RTN","VAFCTFU",216,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T Q 0
"RTN","VAFCTFU",217,0)
 S PDFN=$$GETDFN^MPIF001(PAT)
"RTN","VAFCTFU",218,0)
 I PDFN<0 Q "1^No patient DFN."
"RTN","VAFCTFU",219,0)
 F LP=0:0 S LP=$O(^DGCN(391.91,"APAT",PDFN,LP)) Q:LP'>0  D
"RTN","VAFCTFU",220,0)
 . S TFIEN=0
"RTN","VAFCTFU",221,0)
 . F  S TFIEN=$O(^DGCN(391.91,"APAT",PDFN,LP,TFIEN)) Q:TFIEN'>0  D DELETE(TFIEN)
"RTN","VAFCTFU",222,0)
 ;
"RTN","VAFCTFU",223,0)
 Q VAFCER
"RTN","VAFCTFU",224,0)
 ;
"UP",391.91,391.9101,-1)
391.91^1
"UP",391.91,391.9101,0)
391.9101
"VER")
8.0^22.0
"^DD",2,2,991.08,0)
TEMPORARY ID NUMBER^Fa^^MPI;8^K:$L(X)>9!($L(X)<9) X
"^DD",2,2,991.08,.1)
Temporary Identification Number (TIN)
"^DD",2,2,991.08,3)
Enter the patient's Department of Defense 9-digit Temporary ID Number.
"^DD",2,2,991.08,21,0)
^.001^6^6^3111206^^^^
"^DD",2,2,991.08,21,1,0)
The Department of Defense (DoD) Defense Eligibility Enrollment Reporting 
"^DD",2,2,991.08,21,2,0)
System (DEERS) uses a Temporary Identification Number for individuals 
"^DD",2,2,991.08,21,3,0)
(e.g., babies) who do not have or have not provided a Social Security 
"^DD",2,2,991.08,21,4,0)
Number (SSN) when the record is added to DEERS.  It is used for military 
"^DD",2,2,991.08,21,5,0)
dependents only.  This DoD TEMPORARY ID NUMBER will be used by the Master 
"^DD",2,2,991.08,21,6,0)
Veteran Index to support the linking of patient records across VA and DoD.
"^DD",2,2,991.08,"AUDIT")
y
"^DD",2,2,991.08,"DT")
3111206
"^DD",2,2,991.09,0)
FOREIGN ID NUMBER^Fa^^MPI;9^K:$L(X)>9!($L(X)<9) X
"^DD",2,2,991.09,.1)
Foreign Identification Number (FIN)
"^DD",2,2,991.09,3)
Enter the patient's Department of Defense 9-digit Foreign ID Number.
"^DD",2,2,991.09,21,0)
^.001^6^6^3111206^^^
"^DD",2,2,991.09,21,1,0)
The Department of Defense (DoD) Defense Eligibility Enrollment Reporting 
"^DD",2,2,991.09,21,2,0)
System (DEERS) uses a Foreign Identification Number for foreign military 
"^DD",2,2,991.09,21,3,0)
and foreign nationals when the record is added to DEERS.  This DoD 
"^DD",2,2,991.09,21,4,0)
FOREIGN ID NUMBER will be used by the Master Veteran Index to support the 
"^DD",2,2,991.09,21,5,0)
linking of patient records without a given Social Security Number (SSN) 
"^DD",2,2,991.09,21,6,0)
across VA and DoD.
"^DD",2,2,991.09,"AUDIT")
y
"^DD",2,2,991.09,"DT")
3111206
"^DD",391.91,391.91,.08,0)
ROI SIGNED INDICATOR^S^1:YES;0:NO;^0;8^Q
"^DD",391.91,391.91,.08,.1)
Release of Information Signed Indicator
"^DD",391.91,391.91,.08,3)
Enter YES when the Release of Information has been submitted to MHV.
"^DD",391.91,391.91,.08,21,0)
^^12^12^3111207^
"^DD",391.91,391.91,.08,21,1,0)
The MyHealtheVet (MHV) application allows veterans to create an online 
"^DD",391.91,391.91,.08,21,2,0)
account.  Once created, the veteran can choose to share the information 
"^DD",391.91,391.91,.08,21,3,0)
in their personal health record with all their health care providers, 
"^DD",391.91,391.91,.08,21,4,0)
inside and outside the VA.
"^DD",391.91,391.91,.08,21,5,0)
  
"^DD",391.91,391.91,.08,21,6,0)
A registered MHV user completes a remote proofing process with MHV and 
"^DD",391.91,391.91,.08,21,7,0)
when that process is finalized, an update message is sent to the Master 
"^DD",391.91,391.91,.08,21,8,0)
Veteran Index (MVI) to set the ROI SIGNED INDICATOR field to YES.  MVI, 
"^DD",391.91,391.91,.08,21,9,0)
in turn, updates this same field on VistA.  This allows the MHV system to 
"^DD",391.91,391.91,.08,21,10,0)
be viewed via CPRS Remote Data Views and/or VistAWeb, providing the 
"^DD",391.91,391.91,.08,21,11,0)
ability to view the electronic medical record using the on-line 
"^DD",391.91,391.91,.08,21,12,0)
MyHealtheVet web portal.
"^DD",391.91,391.91,.08,"DT")
3111207
"^DD",391.91,391.91,1,0)
*ASSIGNING AUTHORITY^P391.92'^DGCN(391.92,^0;10^Q
"^DD",391.91,391.91,1,.1)
*Assigning Authority
"^DD",391.91,391.91,1,3)
Enter the ASSIGNING AUTHORITY for this entry.
"^DD",391.91,391.91,1,21,0)
^.001^10^10^3111101^^
"^DD",391.91,391.91,1,21,1,0)
*Marked for deletion 10/28/11.
"^DD",391.91,391.91,1,21,2,0)
ASSIGNING AUTHORITY is the entity that established the identification 
"^DD",391.91,391.91,1,21,3,0)
number for the PATIENT entry.  This field is a pointer to the VAFC 
"^DD",391.91,391.91,1,21,4,0)
ASSIGNING AUTHORITY (#391.92) file, which is based on the Health Level 
"^DD",391.91,391.91,1,21,5,0)
Seven (HL7) standardized table 0363.
"^DD",391.91,391.91,1,21,6,0)
  
"^DD",391.91,391.91,1,21,7,0)
The ASSIGNING AUTHORITY selected will determine if messaging identifiers
"^DD",391.91,391.91,1,21,8,0)
should be in HL7 v3.0 format for National Health Information Network use
"^DD",391.91,391.91,1,21,9,0)
or in HL7 v2.4 format for Non-Patient use in the future or existing
"^DD",391.91,391.91,1,21,10,0)
PATIENT records.
"^DD",391.91,391.91,1,"AUDIT")
n
"^DD",391.91,391.91,1,"DT")
3111101
"^DD",391.91,391.91,10,0)
ASSIGNING AUTHORITY^Fa^^2;1^K:$L(X)>70!($L(X)<1) X
"^DD",391.91,391.91,10,.1)
Assigning Authority
"^DD",391.91,391.91,10,3)
ASSIGNING AUTHORITY must be 1-70 characters in length.
"^DD",391.91,391.91,10,21,0)
^.001^9^9^3111031^^
"^DD",391.91,391.91,10,21,1,0)
ASSIGNING AUTHORITY stores a portion of the data used to assemble fully 
"^DD",391.91,391.91,10,21,2,0)
qualified identifiers used for either the HL7 v2.4 or v3.0 standard.  It 
"^DD",391.91,391.91,10,21,3,0)
is based on the Health Level Seven (HL7) standardized table 0363 and 
"^DD",391.91,391.91,10,21,4,0)
contains the universal ID subcomponent of the assigning authority 
"^DD",391.91,391.91,10,21,5,0)
component in the standard PID-3 identifier.
"^DD",391.91,391.91,10,21,6,0)
  
"^DD",391.91,391.91,10,21,7,0)
The fully qualified HL7 identifier is composed of the PATIENT (#.01), 
"^DD",391.91,391.91,10,21,8,0)
INSTITUTION (#.02), SOURCE ID (#11), ASSIGNING AUTHORITY (#10), and 
"^DD",391.91,391.91,10,21,9,0)
SOURCE ID TYPE (#.09), which constitute a unique entry.
"^DD",391.91,391.91,10,"AUDIT")
y
"^DD",391.91,391.91,10,"DT")
3111102
"^DD",391.91,391.91,11,0)
SOURCE ID^Fa^^2;2^K:$L(X)>150!($L(X)<1) X
"^DD",391.91,391.91,11,.1)
SourceID
"^DD",391.91,391.91,11,3)
Answer must be 1-150 characters in length.
"^DD",391.91,391.91,11,21,0)
^.001^9^9^3111031^^
"^DD",391.91,391.91,11,21,1,0)
SOURCE ID is the unique system assigned identifier at the identified 
"^DD",391.91,391.91,11,21,2,0)
facility for the patient record.  The value of SOURCE ID varies, 
"^DD",391.91,391.91,11,21,3,0)
depending on the source facility.
"^DD",391.91,391.91,11,21,4,0)
  
"^DD",391.91,391.91,11,21,5,0)
If SOURCE ID is from the Master Patient Index, the value is the 
"^DD",391.91,391.91,11,21,6,0)
Integration Control Number (ICN).  If SOURCE ID is from the Department of 
"^DD",391.91,391.91,11,21,7,0)
Defense (DoD), the value is the Electronic Data Interchange Personal 
"^DD",391.91,391.91,11,21,8,0)
Identifier (EDIPI), which is their equivalent of an ICN.  In the future, 
"^DD",391.91,391.91,11,21,9,0)
SOURCE ID may come from other sources due to additional initiatives.
"^DD",391.91,391.91,11,"AUDIT")
y
"^DD",391.91,391.91,11,"DT")
3111102
"^DD",391.91,391.91,12,0)
IDENTIFIER STATUS^S^A:Active;H:Merged;^2;3^Q
"^DD",391.91,391.91,12,.1)
Identifier Status
"^DD",391.91,391.91,12,3)
Enter the status for this SourceID.
"^DD",391.91,391.91,12,21,0)
^^11^11^3111031^
"^DD",391.91,391.91,12,21,1,0)
The IDENTIFIER STATUS field supports joint VA/DoD medical centers, 
"^DD",391.91,391.91,12,21,2,0)
Veteran's Record Management (VRM), and Virtual Lifetime Electronic Record 
"^DD",391.91,391.91,12,21,3,0)
(VLER) initiatives.  This field allows the capture of the resolved 
"^DD",391.91,391.91,12,21,4,0)
duplicate events and exposes the related identifier and identifier status 
"^DD",391.91,391.91,12,21,5,0)
to the consuming applications.
"^DD",391.91,391.91,12,21,6,0)
     
"^DD",391.91,391.91,12,21,7,0)
A value of "A" indicates that the patient record is an active record on 
"^DD",391.91,391.91,12,21,8,0)
the identifying system (e.g., VAMC or DoD).  A value of "H" indicates 
"^DD",391.91,391.91,12,21,9,0)
that the patient record was identified as part of a duplicate pair, has 
"^DD",391.91,391.91,12,21,10,0)
been merged, and is no longer active on the identifying system (e.g., 
"^DD",391.91,391.91,12,21,11,0)
VAMC or DoD).
"^DD",391.91,391.91,12,"DT")
3111031
"^DD",391.91,391.91,20,0)
*SOURCE ID^391.9101A^^1;0
"^DD",391.91,391.91,20,21,0)
^^14^14^3111101^
"^DD",391.91,391.91,20,21,1,0)
*Marked for deletion 10/28/11.
"^DD",391.91,391.91,20,21,2,0)
SOURCE ID is the unique system assigned identifier at the identified 
"^DD",391.91,391.91,20,21,3,0)
facility for the patient record.  The value of SOURCE ID varies, 
"^DD",391.91,391.91,20,21,4,0)
depending on the source facility.
"^DD",391.91,391.91,20,21,5,0)
  
"^DD",391.91,391.91,20,21,6,0)
If SOURCE ID is from the Master Patient Index, the value is the 
"^DD",391.91,391.91,20,21,7,0)
Integration Control Number (ICN).  If SOURCE ID is from the Department of 
"^DD",391.91,391.91,20,21,8,0)
Defense (DoD), the value is the Electronic Data Interchange Personal 
"^DD",391.91,391.91,20,21,9,0)
Identifier (EDIPI), which is their equivalent of an ICN.  In the future, 
"^DD",391.91,391.91,20,21,10,0)
SOURCE ID may come from other sources due to additional initiatives.
"^DD",391.91,391.91,20,21,11,0)
  
"^DD",391.91,391.91,20,21,12,0)
SOURCE ID is a multiple because a patient seen at disparate systems 
"^DD",391.91,391.91,20,21,13,0)
(e.g., VAMC and DoD) may have a different identifier on each system which 
"^DD",391.91,391.91,20,21,14,0)
is unique to that system.
"^DD",391.91,391.91,20,"DT")
3111101
"^DD",391.91,391.9101,0)
*SOURCE ID SUB-FIELD^^1^2
"^DD",391.91,391.9101,0,"NM","*SOURCE ID")

"^DD",391.91,391.9101,.01,0)
*SOURCE ID^F^^0;1^K:$L(X)>150!($L(X)<1) X
"^DD",391.91,391.9101,.01,.1)
*SourceID
"^DD",391.91,391.9101,.01,1,0)
^.1
"^DD",391.91,391.9101,.01,1,1,0)
391.9101^B
"^DD",391.91,391.9101,.01,1,1,1)
S ^DGCN(391.91,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",391.91,391.9101,.01,1,1,2)
K ^DGCN(391.91,DA(1),1,"B",$E(X,1,30),DA)
"^DD",391.91,391.9101,.01,3)
Answer must be 1-150 characters in length.
"^DD",391.91,391.9101,.01,21,0)
^^14^14^3111101^
"^DD",391.91,391.9101,.01,21,1,0)
*Marked for deletion 10/28/11.
"^DD",391.91,391.9101,.01,21,2,0)
SOURCE ID is the unique system assigned identifier at the identified 
"^DD",391.91,391.9101,.01,21,3,0)
facility for the patient record.  The value of SOURCE ID varies, 
"^DD",391.91,391.9101,.01,21,4,0)
depending on the source facility.
"^DD",391.91,391.9101,.01,21,5,0)
  
"^DD",391.91,391.9101,.01,21,6,0)
If SOURCE ID is from the Master Patient Index, the value is the 
"^DD",391.91,391.9101,.01,21,7,0)
Integration Control Number (ICN).  If SOURCE ID is from the Department of 
"^DD",391.91,391.9101,.01,21,8,0)
Defense (DoD), the value is the Electronic Data Interchange Personal 
"^DD",391.91,391.9101,.01,21,9,0)
Identifier (EDIPI), which is their equivalent of an ICN.  In the future, 
"^DD",391.91,391.9101,.01,21,10,0)
SOURCE ID may come from other sources due to additional initiatives.
"^DD",391.91,391.9101,.01,21,11,0)
  
"^DD",391.91,391.9101,.01,21,12,0)
SOURCE ID is a multiple because a patient seen at disparate systems 
"^DD",391.91,391.9101,.01,21,13,0)
(e.g., VAMC and DoD) may have a different identifier on each system which 
"^DD",391.91,391.9101,.01,21,14,0)
is unique to that system.
"^DD",391.91,391.9101,.01,"AUDIT")
n
"^DD",391.91,391.9101,.01,"DT")
3111101
"^DD",391.91,391.9101,1,0)
*IDENTIFIER STATUS^S^A:Active;H:Merged;^0;2^Q
"^DD",391.91,391.9101,1,.1)
*Identifier Status
"^DD",391.91,391.9101,1,3)
Enter the status for this SourceID.
"^DD",391.91,391.9101,1,21,0)
^^12^12^3111101^
"^DD",391.91,391.9101,1,21,1,0)
*Marked for deletion 10/28/11.
"^DD",391.91,391.9101,1,21,2,0)
The IDENTIFIER STATUS field supports the upcoming Joint VA/DoD Medical 
"^DD",391.91,391.9101,1,21,3,0)
Center, Veteran's Record Management (VRM), and Virtual Lifetime 
"^DD",391.91,391.9101,1,21,4,0)
Electronic Record (VLER) initiatives.  This field allows the capture of 
"^DD",391.91,391.9101,1,21,5,0)
the resolved duplicate events and exposes the related identifier and 
"^DD",391.91,391.9101,1,21,6,0)
identifier status to the consuming applications.
"^DD",391.91,391.9101,1,21,7,0)
  
"^DD",391.91,391.9101,1,21,8,0)
A value of "A" indicates that the patient record is an active record on 
"^DD",391.91,391.9101,1,21,9,0)
the identifying system (e.g., VAMC or DoD).
"^DD",391.91,391.9101,1,21,10,0)
A value of "H" indicates that the patient record was identified as part 
"^DD",391.91,391.9101,1,21,11,0)
of a duplicate pair, has been merged, and is no longer active on the 
"^DD",391.91,391.9101,1,21,12,0)
identifying system (e.g., VAMC or DoD).
"^DD",391.91,391.9101,1,"DT")
3111101
"BLD",2851,6)
^752
**END**
**END**
