Released DG*5.3*863 SEQ #768
Extracted from mail message
**KIDS**:DG*5.3*863^

**INSTALL NAME**
DG*5.3*863
"BLD",2975,0)
DG*5.3*863^REGISTRATION^0^3130529^y
"BLD",2975,1,0)
^^3^3^3130416^
"BLD",2975,1,1,0)
MASTER VETERAN INDEX VISTA ISSUES - ITERATION 10
"BLD",2975,1,2,0)
Refer to patch DG*5.3*863 in the FORUM Patch Module for a complete
"BLD",2975,1,3,0)
description.
"BLD",2975,4,0)
^9.64PA^^
"BLD",2975,6.3)
2
"BLD",2975,"ABPKG")
n
"BLD",2975,"KRN",0)
^9.67PA^779.2^20
"BLD",2975,"KRN",.4,0)
.4
"BLD",2975,"KRN",.401,0)
.401
"BLD",2975,"KRN",.402,0)
.402
"BLD",2975,"KRN",.403,0)
.403
"BLD",2975,"KRN",.5,0)
.5
"BLD",2975,"KRN",.84,0)
.84
"BLD",2975,"KRN",3.6,0)
3.6
"BLD",2975,"KRN",3.8,0)
3.8
"BLD",2975,"KRN",9.2,0)
9.2
"BLD",2975,"KRN",9.8,0)
9.8
"BLD",2975,"KRN",9.8,"NM",0)
^9.68A^8^8
"BLD",2975,"KRN",9.8,"NM",1,0)
VAFCPDAT^^0^B50668087
"BLD",2975,"KRN",9.8,"NM",2,0)
VAFCQRY^^0^B14904724
"BLD",2975,"KRN",9.8,"NM",3,0)
DGDEATH^^0^B40455285
"BLD",2975,"KRN",9.8,"NM",4,0)
DGRPD1^^0^B7833358
"BLD",2975,"KRN",9.8,"NM",5,0)
VAFCAUD^^0^B36673248
"BLD",2975,"KRN",9.8,"NM",6,0)
VAFCTFU2^^0^B47004597
"BLD",2975,"KRN",9.8,"NM",7,0)
VAFCTFIN^^0^B88224954
"BLD",2975,"KRN",9.8,"NM",8,0)
VAFCTFU3^^0^B10715994
"BLD",2975,"KRN",9.8,"NM","B","DGDEATH",3)

"BLD",2975,"KRN",9.8,"NM","B","DGRPD1",4)

"BLD",2975,"KRN",9.8,"NM","B","VAFCAUD",5)

"BLD",2975,"KRN",9.8,"NM","B","VAFCPDAT",1)

"BLD",2975,"KRN",9.8,"NM","B","VAFCQRY",2)

"BLD",2975,"KRN",9.8,"NM","B","VAFCTFIN",7)

"BLD",2975,"KRN",9.8,"NM","B","VAFCTFU2",6)

"BLD",2975,"KRN",9.8,"NM","B","VAFCTFU3",8)

"BLD",2975,"KRN",19,0)
19
"BLD",2975,"KRN",19.1,0)
19.1
"BLD",2975,"KRN",101,0)
101
"BLD",2975,"KRN",409.61,0)
409.61
"BLD",2975,"KRN",771,0)
771
"BLD",2975,"KRN",779.2,0)
779.2
"BLD",2975,"KRN",870,0)
870
"BLD",2975,"KRN",8989.51,0)
8989.51
"BLD",2975,"KRN",8989.52,0)
8989.52
"BLD",2975,"KRN",8994,0)
8994
"BLD",2975,"KRN","B",.4,.4)

"BLD",2975,"KRN","B",.401,.401)

"BLD",2975,"KRN","B",.402,.402)

"BLD",2975,"KRN","B",.403,.403)

"BLD",2975,"KRN","B",.5,.5)

"BLD",2975,"KRN","B",.84,.84)

"BLD",2975,"KRN","B",3.6,3.6)

"BLD",2975,"KRN","B",3.8,3.8)

"BLD",2975,"KRN","B",9.2,9.2)

"BLD",2975,"KRN","B",9.8,9.8)

"BLD",2975,"KRN","B",19,19)

"BLD",2975,"KRN","B",19.1,19.1)

"BLD",2975,"KRN","B",101,101)

"BLD",2975,"KRN","B",409.61,409.61)

"BLD",2975,"KRN","B",771,771)

"BLD",2975,"KRN","B",779.2,779.2)

"BLD",2975,"KRN","B",870,870)

"BLD",2975,"KRN","B",8989.51,8989.51)

"BLD",2975,"KRN","B",8989.52,8989.52)

"BLD",2975,"KRN","B",8994,8994)

"BLD",2975,"QDEF")
^^^^^^^^^^YES
"BLD",2975,"QUES",0)
^9.62^^
"BLD",2975,"REQB",0)
^9.611^5^4
"BLD",2975,"REQB",1,0)
DG*5.3*688^2
"BLD",2975,"REQB",3,0)
DG*5.3*772^2
"BLD",2975,"REQB",4,0)
DG*5.3*837^2
"BLD",2975,"REQB",5,0)
DG*5.3*856^2
"BLD",2975,"REQB","B","DG*5.3*688",1)

"BLD",2975,"REQB","B","DG*5.3*772",3)

"BLD",2975,"REQB","B","DG*5.3*837",4)

"BLD",2975,"REQB","B","DG*5.3*856",5)

"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813^2970721^12541
"PKG",5,22,1,"PAH",1,0)
863^3130529
"PKG",5,22,1,"PAH",1,1,0)
^^3^3^3130529
"PKG",5,22,1,"PAH",1,1,1,0)
MASTER VETERAN INDEX VISTA ISSUES - ITERATION 10
"PKG",5,22,1,"PAH",1,1,2,0)
Refer to patch DG*5.3*863 in the FORUM Patch Module for a complete
"PKG",5,22,1,"PAH",1,1,3,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","DGDEATH")
0^3^B40455285^B40831841
"RTN","DGDEATH",1,0)
DGDEATH ;ALB/MRL/PJR-PROCESS DECEASED PATIENTS ; 10/27/04 9:45pm
"RTN","DGDEATH",2,0)
 ;;5.3;Registration;**45,84,101,149,392,545,595,568,563,725,772,863**;Aug 13, 1993;Build 2
"RTN","DGDEATH",3,0)
 ;
"RTN","DGDEATH",4,0)
GET N DGMTI,DATA
"RTN","DGDEATH",5,0)
 S DGDTHEN="" W !! S DIC="^DPT(",DIC(0)="AEQMZ" D ^DIC G Q:Y'>0 S (DA,DFN)=+Y
"RTN","DGDEATH",6,0)
 S DGDOLD=$G(^DPT(DFN,.35))
"RTN","DGDEATH",7,0)
 I $D(^DPT(DFN,.1)) W !?3,"Patient is currently in-house.  Discharge him with a discharge type of DEATH." G GET
"RTN","DGDEATH",8,0)
 I $S($D(^DPT(DFN,.35)):^(.35),1:"") F DGY=0:0 S DGY=$O(^DGPM("ATID1",DFN,DGY)) Q:'DGY  S DGDA=$O(^(DGY,0)) I $D(^DGPM(+DGDA,0)),$P(^(0),"^",17)]"" S DGXX=$P(^(0),"^",17),DGXX=^DGPM(DGXX,0) I "^12^38^"[("^"_$P(DGXX,"^",18)_"^") G DIS
"RTN","DGDEATH",9,0)
 D NOW^%DTC S DGNOW=%
"RTN","DGDEATH",10,0)
 S ^TMP("DEATH",$J)=1
"RTN","DGDEATH",11,0)
 K A W ! S DIE=DIC,DR=".351" D ^DIE
"RTN","DGDEATH",12,0)
 I '$D(^DPT(DFN,.35)) K ^TMP("DEATH",$J) G GET
"RTN","DGDEATH",13,0)
 S DGDNEW=^DPT(DFN,.35)
"RTN","DGDEATH",14,0)
 I $P(DGDNEW,"^",1)="",$P(DGDNEW,"^",2)'="" S DR=".352////@" D ^DIE
"RTN","DGDEATH",15,0)
 I $P(DGDNEW,"^",1)="" K ^TMP("DEATH",$J) G GET
"RTN","DGDEATH",16,0)
SN I $P(DGDNEW,"^",1)'="" S DR=".353" D ^DIE I $P($G(^DPT(DFN,.35)),"^",3)']"" D SNDISP G SN
"RTN","DGDEATH",17,0)
 I DGDOLD'=DGDNEW D DISCHRGE
"RTN","DGDEATH",18,0)
 I $P(DGDOLD,"^",1)'=$P(DGDNEW,"^",1) D XFR
"RTN","DGDEATH",19,0)
 K ^TMP("DEATH",$J) G GET
"RTN","DGDEATH",20,0)
 ;
"RTN","DGDEATH",21,0)
DIS W !,"Patient has a discharge type of Death",!,"Edit the discharge",!
"RTN","DGDEATH",22,0)
Q K A,DA,DFN,DGDA,DIC,DIE,DR,DGXX,DGY,DGDTHEN,DGDOLD,DGDNEW,DGDONOT Q
"RTN","DGDEATH",23,0)
XFR ; called from set x-ref of field .351 of file 2
"RTN","DGDEATH",24,0)
 N DGPCMM,DGFAPT,DGFAPTI,DGFAPT1
"RTN","DGDEATH",25,0)
 Q:'$D(DFN)
"RTN","DGDEATH",26,0)
 K DGTEXT D ^DGPATV S DGDEATH=$$GET1^DIQ(2,DFN,.351,"I"),XMSUB="PATIENT HAS EXPIRED",DGCT=0
"RTN","DGDEATH",27,0)
 D DEMOG
"RTN","DGDEATH",28,0)
 S DGT=X-.0001,(Y,DGDDT)=X,DG1="" D:DGT]"" ^DGPMSTAT
"RTN","DGDEATH",29,0)
 S Y=$$FMTE^XLFDT(Y),Y=$S(Y]"":Y,1:"UNKNOWN")
"RTN","DGDEATH",30,0)
 S DGDONOT=0 D APTT3
"RTN","DGDEATH",31,0)
 D LINE("")
"RTN","DGDEATH",32,0)
 D LINE("      Date/Time of Death: "_DEATHVAL_$S(DGDONOT:"",'DG1:"",$D(DGDTHEN):"",1:"  (While an inpatient)"))
"RTN","DGDEATH",33,0)
 D LINE("")
"RTN","DGDEATH",34,0)
 I '$D(ADM),DG1,$D(^DGPM(+DGA1,0)) S ADM=+^DGPM($P(^(0),"^",14),0)
"RTN","DGDEATH",35,0)
 S Y=$$FMTE^XLFDT($S($D(ADM):ADM,1:""))
"RTN","DGDEATH",36,0)
 D LINE($S($D(DGDTHEN):"",DG1:"     Admission Date/Time: "_Y_$S((DGDDT-ADM)<1:"  (Within 24 hours of hospitalization)",1:""),1:""))
"RTN","DGDEATH",37,0)
 D LINE("")
"RTN","DGDEATH",38,0)
 S DGX=$P($G(^DGPM(+$G(DGA1),0)),"^",6),DGX=$P($G(^DIC(42,+DGX,0)),U,1)
"RTN","DGDEATH",39,0)
 D LINE($S($D(DGDTHEN):"",('DG1):"",$D(DGA1):"             Admitted To: "_$S(DGX]"":DGX,1:"UNKNOWN"),1:"")) K DGX
"RTN","DGDEATH",40,0)
 D LINE("")
"RTN","DGDEATH",41,0)
 I DG1&'$D(DGDTHEN) D 
"RTN","DGDEATH",42,0)
 . D LINE($S($D(DGXFR0):"           Last Transfer: "_$S($D(^DIC(42,+$P(DGXFR0,"^",6),0)):$P(^(0),"^"),1:"UNKNOWN"),1:""))
"RTN","DGDEATH",43,0)
 . D LINE("")
"RTN","DGDEATH",44,0)
F N DGARRAY,SDCNT S DGFAPT=DGDEATH,DGFAPTI=""
"RTN","DGDEATH",45,0)
 S DGARRAY("FLDS")=3,DGARRAY(4)=DFN,DGARRAY("SORT")="P",DGARRAY(1)=DT,DGARRAY(3)="I;R"
"RTN","DGDEATH",46,0)
 S SDCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DGDEATH",47,0)
 ;
"RTN","DGDEATH",48,0)
 I SDCNT>0 F  S DGFAPT=$O(^TMP($J,"SDAMA301",DFN,DGFAPT)) Q:'DGFAPT  S DGFAPT1=$G(^TMP($J,"SDAMA301",DFN,DGFAPT)) Q:DGFAPT1']""  D  Q:DGFAPTI
"RTN","DGDEATH",49,0)
 .I $P($P(DGFAPT1,U,3),";")'["C" D LINE("NOTE: Patient has future appointments scheduled!!") S DGFAPTI=1
"RTN","DGDEATH",50,0)
 S DGSCHAD=0 D SA I DGSCHAD D LINE("NOTE: Patient had scheduled admissions which have been cancelled!!")
"RTN","DGDEATH",51,0)
 I 'DGVETS D LINE("Patient is a NON-VETERAN."_$S($D(^DIC(21,+$P($G(^DPT(DFN,.32)),"^",3),0)):"  ["_$P(^(0),"^",1)_"]",1:""))
"RTN","DGDEATH",52,0)
 S DGPCMM=$$PCMMXMY^SCAPMC25(1,DFN,,,0) ;creates xmy array
"RTN","DGDEATH",53,0)
 S DGCT=$$PCMAIL^SCMCMM(DFN,"DGTEXT",DT)
"RTN","DGDEATH",54,0)
Q1 S DGB=1 D ^DGBUL S X=DGDEATH
"RTN","DGDEATH",55,0)
 K DGDEATH,DGSCHAD,DGI,Y,DGDDT,^TMP($J,"SDAMA301") D KILL^DGPATV K ADM,DG1,DGA1,DGCT,DGT,DGXX,DGY,Z Q
"RTN","DGDEATH",56,0)
SA F DGI=0:0 S DGI=$O(^DGS(41.1,"B",DFN,DGI)) Q:'DGI  I $D(^DGS(41.1,DGI,0)),($P(^(0),"^",13)']""),($P(^(0),"^",17)']"") S $P(^(0),"^",13)=DGDEATH,$P(^(0),"^",14)=+DUZ,$P(^(0),"^",15)=1,$P(^(0),"^",16)=2,DGSCHAD=1
"RTN","DGDEATH",57,0)
 Q
"RTN","DGDEATH",58,0)
 ;
"RTN","DGDEATH",59,0)
DEL ; delete death bulletin
"RTN","DGDEATH",60,0)
 N DGPCMM,DELBY,DELTM,DTHINFO
"RTN","DGDEATH",61,0)
 S DFN=+$G(DA) I '$D(^DPT(DFN,0)) Q  ; no patient node
"RTN","DGDEATH",62,0)
 I +$G(^DPT(DFN,.35)) Q  ; not deletion
"RTN","DGDEATH",63,0)
 S DGDEATH=X,XMSUB="Patient Death has been Deleted",DGCT=0
"RTN","DGDEATH",64,0)
 D ^DGPATV
"RTN","DGDEATH",65,0)
 D LINE("The date of death for the following patient has been deleted.")
"RTN","DGDEATH",66,0)
 D LINE("")
"RTN","DGDEATH",67,0)
 D DEMOG
"RTN","DGDEATH",68,0)
 D LINE("")
"RTN","DGDEATH",69,0)
 S DGPCMM=$$PCMMXMY^SCAPMC25(1,DFN,,,0) ;creates xmy array
"RTN","DGDEATH",70,0)
 S DGCT=$$PCMAIL^SCMCMM(DFN,"DGTEXT",DT)
"RTN","DGDEATH",71,0)
 S DGB=1 D ^DGBUL S X=DGDEATH
"RTN","DGDEATH",72,0)
 K DGCT,DGDEATH D KILL^DGPATV
"RTN","DGDEATH",73,0)
 Q
"RTN","DGDEATH",74,0)
 ;
"RTN","DGDEATH",75,0)
DEMOG ; list main demographics
"RTN","DGDEATH",76,0)
 D LINE("                    NAME: "_DGNAME)
"RTN","DGDEATH",77,0)
 D LINE("                     SSN: "_$P(SSN,"^",2))
"RTN","DGDEATH",78,0)
 D LINE("                     DOB: "_$P(DOB,"^",2))
"RTN","DGDEATH",79,0)
 I DGVETS D
"RTN","DGDEATH",80,0)
 . N DGX
"RTN","DGDEATH",81,0)
 . S DGX=$G(^DPT(DFN,.31))
"RTN","DGDEATH",82,0)
 . S DGLOCATN=$$FIND1^DIC(4,"","MX","`"_+$P(DGX,U,4)),DGLOCATN=$S(+DGLOCATN>0:$P($$NS^XUAF4(DGLOCATN),U),1:"NOT LISTED")
"RTN","DGDEATH",83,0)
 . D LINE("   CLAIM FOLDER LOCATION: "_$S($D(DGLOCATN):DGLOCATN,1:"NOT LISTED"))
"RTN","DGDEATH",84,0)
 . D LINE("            CLAIM NUMBER: "_$S($P(DGX,"^",3)]"":$P(DGX,"^",3),1:"NOT LISTED"))
"RTN","DGDEATH",85,0)
 ;D LINE("   COORDINATING MASTER OF RECORD: "_DGCMOR)  ;**863 - MVI_2351 (ptd)
"RTN","DGDEATH",86,0)
 D GETS^DIQ(2,DFN_",",".351;.353;.354;.355","E","DTHINFO")
"RTN","DGDEATH",87,0)
 S DEATHVAL=$G(DTHINFO(2,DFN_",",.351,"E"))
"RTN","DGDEATH",88,0)
 S DEATHVAL=$$FMTE^XLFDT(DEATHVAL),DEATHVAL=$S(DEATHVAL]"":DEATHVAL,1:"UNKNOWN")
"RTN","DGDEATH",89,0)
 S SOURCE=$G(DTHINFO(2,DFN_",",.353,"E"))
"RTN","DGDEATH",90,0)
 S DELTM=$G(DTHINFO(2,DFN_",",.354,"E"))
"RTN","DGDEATH",91,0)
 S DELBY=$G(DTHINFO(2,DFN_",",.355,"E"))
"RTN","DGDEATH",92,0)
 D LINE("")
"RTN","DGDEATH",93,0)
 D LINE("             LAST EDITED BY: "_DELBY)
"RTN","DGDEATH",94,0)
 D LINE("    DATE/TIME LAST MODIFIED: "_DELTM)
"RTN","DGDEATH",95,0)
 D LINE("     SOURCE OF NOTIFICATION: "_$S(SOURCE="":"UNDEFINED",1:SOURCE))
"RTN","DGDEATH",96,0)
 ;K DEATHVAL,SOURCE,DELTM,DELBY
"RTN","DGDEATH",97,0)
 Q
"RTN","DGDEATH",98,0)
 ;
"RTN","DGDEATH",99,0)
LINE(X) ; add line contained in X to array
"RTN","DGDEATH",100,0)
 S DGCT=DGCT+1
"RTN","DGDEATH",101,0)
 S DGTEXT(DGCT,0)=X
"RTN","DGDEATH",102,0)
 Q
"RTN","DGDEATH",103,0)
DSBULL ;
"RTN","DGDEATH",104,0)
 ;
"RTN","DGDEATH",105,0)
 I $G(IVMDODUP)=1 Q
"RTN","DGDEATH",106,0)
 S DFN=DA
"RTN","DGDEATH",107,0)
 I $D(DGPMDA) D  Q
"RTN","DGDEATH",108,0)
 .S DISTYPE=$P($G(^DGPM(DGPMDA,0)),"^",18)
"RTN","DGDEATH",109,0)
 .I $G(^DG(405.2,DISTYPE,0))["DEATH" D
"RTN","DGDEATH",110,0)
 ..S FDA(2,DFN_",",.353)=1 D FILE^DIE(,"FDA","BWFERR")
"RTN","DGDEATH",111,0)
 ..D DISCHRGE,XFR
"RTN","DGDEATH",112,0)
 I $D(^TMP("DEATH",$J)) Q
"RTN","DGDEATH",113,0)
 D DISCHRGE,XFR
"RTN","DGDEATH",114,0)
 Q
"RTN","DGDEATH",115,0)
DKBULL ;
"RTN","DGDEATH",116,0)
 S DFN=DA
"RTN","DGDEATH",117,0)
 S FDA(2,DFN_",",.353)="@"
"RTN","DGDEATH",118,0)
 I $D(^TMP("DEATH",$J)) S FDA(2,DFN_",",.355)=DUZ
"RTN","DGDEATH",119,0)
 D FILE^DIE(,"FDA",)
"RTN","DGDEATH",120,0)
 D DEL
"RTN","DGDEATH",121,0)
 Q
"RTN","DGDEATH",122,0)
DISCHRGE ;
"RTN","DGDEATH",123,0)
 ; If the patient is being discharged, determine values needed for 
"RTN","DGDEATH",124,0)
 ; Source of Notification and Date/Time last entered.
"RTN","DGDEATH",125,0)
 ;
"RTN","DGDEATH",126,0)
 I '$D(DGNOW) S DGNOW=$$HTFM^XLFDT($H)
"RTN","DGDEATH",127,0)
 I $G(DGDAUTO)'=1 S FDA(2,DFN_",",.354)=DGNOW
"RTN","DGDEATH",128,0)
 S FDA(2,DFN_",",.355)=DUZ
"RTN","DGDEATH",129,0)
 D FILE^DIE(,"FDA",)
"RTN","DGDEATH",130,0)
 Q
"RTN","DGDEATH",131,0)
APTT3 ;Check to exclude "While an Inpatient" from DOD Bulletin
"RTN","DGDEATH",132,0)
 ; Input:  DFN  Output: DGDONOT
"RTN","DGDEATH",133,0)
 N DATE,XIEN,TYPE,XDOD,YES
"RTN","DGDEATH",134,0)
 S DGDONOT=0
"RTN","DGDEATH",135,0)
 S XDOD=$P($G(^DPT(DFN,.35)),"^",1) I 'XDOD Q
"RTN","DGDEATH",136,0)
 S XDOD=$P(XDOD,".",1),YES=0,TYPE=""
"RTN","DGDEATH",137,0)
 I '$D(^DGPM("APTT3",DFN)) Q
"RTN","DGDEATH",138,0)
 S DATE=$O(^DGPM("APTT3",DFN,XDOD)) I 'DATE Q
"RTN","DGDEATH",139,0)
 I $P(DATE,".",1)=XDOD S YES=1
"RTN","DGDEATH",140,0)
 I ($P(DATE,".",1)-1)=XDOD S YES=1
"RTN","DGDEATH",141,0)
 S XIEN=$O(^DGPM("APTT3",DFN,DATE,"")) I 'XIEN Q
"RTN","DGDEATH",142,0)
 S TYPE=$P($G(^DGPM(XIEN,0)),"^",4)
"RTN","DGDEATH",143,0)
 I YES,'((TYPE=27)!(TYPE=32)) S DGDONOT=1
"RTN","DGDEATH",144,0)
 Q
"RTN","DGDEATH",145,0)
SNDISP ; Source of Notification display choices
"RTN","DGDEATH",146,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,DGLIST,DGLNAME,I,X,Y
"RTN","DGDEATH",147,0)
 S DGLIST=$P($G(^DD(2,.353,0)),"^",3)
"RTN","DGDEATH",148,0)
 S Y=6
"RTN","DGDEATH",149,0)
 S DIR("?",1)=" "
"RTN","DGDEATH",150,0)
 S DIR("?",2)=" This is a required response. Please select from the following:"
"RTN","DGDEATH",151,0)
 S DIR("?",3)=" Entering '^' will take you back to the Source of Notification prompt"
"RTN","DGDEATH",152,0)
 S DIR("?",4)=" "
"RTN","DGDEATH",153,0)
 S DIR("?",5)=" "
"RTN","DGDEATH",154,0)
 F X=1:1 S DGLNAME=$P(DGLIST,";",X) Q:DGLNAME']""  S DIR("?",Y)="      "_$P(DGLNAME,":",1)_"      "_$P(DGLNAME,":",2) S Y=Y+1
"RTN","DGDEATH",155,0)
 S DIR("?",Y)=" "
"RTN","DGDEATH",156,0)
 F I=1:1 Q:'$D(DIR("?",I))  W !,DIR("?",I)
"RTN","DGDEATH",157,0)
 Q
"RTN","DGRPD1")
0^4^B7833358^B8127087
"RTN","DGRPD1",1,0)
DGRPD1 ;BPFO/JRC/BAJ - PATIENT INQUIRY (NEW) ; 8/15/08 11:35am
"RTN","DGRPD1",2,0)
 ;;5.3;Registration;**703,730,688,863**;Aug 13, 1993;Build 2
"RTN","DGRPD1",3,0)
 ; DG*5.3*688 BAJ
"RTN","DGRPD1",4,0)
 ; tags HDR & OKLINE moved as is from DGRPD for size considerations
"RTN","DGRPD1",5,0)
 Q
"RTN","DGRPD1",6,0)
EC ;display emergency contact information
"RTN","DGRPD1",7,0)
 N DGEC1,DGEC2
"RTN","DGRPD1",8,0)
 Q:'$G(DFN)
"RTN","DGRPD1",9,0)
 S VAOA("A")=1,VAROOT="DGEC1"  D OAD^VADPT ; Get Primary EC
"RTN","DGRPD1",10,0)
 S VAOA("A")=4,VAROOT="DGEC2"  D OAD^VADPT ; Get Secondary EC
"RTN","DGRPD1",11,0)
 I DGEC1(9)]"" D
"RTN","DGRPD1",12,0)
 . W !,"Emergency Contact Information:"
"RTN","DGRPD1",13,0)
 . ;Contacts name and realtionship
"RTN","DGRPD1",14,0)
 . W !?5,"E-Cont.: ",DGEC1(9)
"RTN","DGRPD1",15,0)
 . I DGEC2(9)]"" W ?40,"E2-Cont.: ",DGEC2(9)
"RTN","DGRPD1",16,0)
 . W !,"Relationship: ",DGEC1(10)
"RTN","DGRPD1",17,0)
 . I DGEC2(9)]"" W ?36,"Relationship: ",DGEC2(10)
"RTN","DGRPD1",18,0)
 . ;ECs address lines 1, 2 and 3
"RTN","DGRPD1",19,0)
 . I DGEC1(1)]"" W !?14,DGEC1(1)
"RTN","DGRPD1",20,0)
 . I DGEC1(1)']"",DGEC2(1)]"" W !
"RTN","DGRPD1",21,0)
 . I DGEC2(1)]"" W ?50,DGEC2(1)
"RTN","DGRPD1",22,0)
 . I DGEC1(2)]"" W !?14,DGEC1(2)
"RTN","DGRPD1",23,0)
 . I DGEC1(2)']"",DGEC2(2)]"" W !
"RTN","DGRPD1",24,0)
 . I DGEC2(2)]"" W ?50,DGEC2(2)
"RTN","DGRPD1",25,0)
 . I DGEC1(3)]"" W !?14,DGEC1(3)
"RTN","DGRPD1",26,0)
 . I DGEC1(3)']"",DGEC2(3)]"" W !
"RTN","DGRPD1",27,0)
 . I DGEC2(3)]"" W ?50,DGEC2(3)
"RTN","DGRPD1",28,0)
 . ;Emergency Contact 1 City, State an Zip+4
"RTN","DGRPD1",29,0)
 . I DGEC1(4)]"" D
"RTN","DGRPD1",30,0)
 . . W !?14,DGEC1(4)
"RTN","DGRPD1",31,0)
 . . I DGEC1(5)]"" W ", "_$$GET1^DIQ(5,+DGEC1(5),1)
"RTN","DGRPD1",32,0)
 . . W "  ",$P(DGEC1(11),"^",2)
"RTN","DGRPD1",33,0)
 . ;Emergency Contact 2 City State and Zip+4
"RTN","DGRPD1",34,0)
 . I DGEC2(4)]"" D
"RTN","DGRPD1",35,0)
 . . I DGEC1(4)']"" W !
"RTN","DGRPD1",36,0)
 . . W ?50,DGEC2(4)
"RTN","DGRPD1",37,0)
 . . I DGEC2(5)]"" W ", "_$$GET1^DIQ(5,+DGEC2(5),1)
"RTN","DGRPD1",38,0)
 . . W "  ",$P(DGEC2(11),"^",2)
"RTN","DGRPD1",39,0)
 .;Home and work phones
"RTN","DGRPD1",40,0)
 . W !,?7,"Phone: ",$S(DGEC1(8)]"":DGEC1(8),1:"UNSPECIFIED")
"RTN","DGRPD1",41,0)
 . I DGEC2(9)]"" W ?43,"Phone: ",$S(DGEC2(8)]"":DGEC2(8),1:"UNSPECIFIED")
"RTN","DGRPD1",42,0)
 . W !?2,"Work Phone: ",$S($P(^DPT(DFN,.33),U,11)]"":$P(^DPT(DFN,.33),U,11),1:"UNSPECIFIED")
"RTN","DGRPD1",43,0)
 . I DGEC2(9)]"" W ?38,"Work Phone: ",$S($P(^DPT(DFN,.331),U,11)]"":$P(^DPT(DFN,.331),U,11),1:"UNSPECIFIED")
"RTN","DGRPD1",44,0)
 D KVAR^VADPT
"RTN","DGRPD1",45,0)
 Q
"RTN","DGRPD1",46,0)
 ;
"RTN","DGRPD1",47,0)
CATDIS ;
"RTN","DGRPD1",48,0)
 ;displays catastrophic disabity review date if there is one
"RTN","DGRPD1",49,0)
 N DGCDIS
"RTN","DGRPD1",50,0)
 Q:'$G(DFN)
"RTN","DGRPD1",51,0)
 I $$GET^DGENCDA(DFN,.DGCDIS) D
"RTN","DGRPD1",52,0)
 .Q:'DGCDIS("REVDTE")
"RTN","DGRPD1",53,0)
 .W !!,"Catastrophically Disabled Review Date: ",$$FMTE^XLFDT(DGCDIS("REVDTE"),1)
"RTN","DGRPD1",54,0)
 Q
"RTN","DGRPD1",55,0)
HDR I '$D(IOF) S IOP="HOME" D ^%ZIS K IOP
"RTN","DGRPD1",56,0)
 ;MPI/PD CHANGE
"RTN","DGRPD1",57,0)
 W @IOF,!,$P(VADM(1),"^",1),?40,$P(VADM(2),"^",2),?65,$P(VADM(3),"^",2) S X="",$P(X,"=",78)="" W !,X,! Q  ;**863 - MVI_2351 (ptd)
"RTN","DGRPD1",58,0)
 ;END MPI/PD CHANGE
"RTN","DGRPD1",59,0)
OKLINE(DGLINE) ;DOES PAUSE/HEADER IF $Y EXCEEDS DGLINE
"RTN","DGRPD1",60,0)
 ;
"RTN","DGRPD1",61,0)
 ;IN:   DGLINE --MAX LINE COUNT W/O PAUSE
"RTN","DGRPD1",62,0)
 ;OUT:  DGLINE[RETURNED] -- 0 IF TIMEOUT/UP ARROW
"RTN","DGRPD1",63,0)
 ;      DGRPOUT[SET]     -- 1 IF "
"RTN","DGRPD1",64,0)
 N X,Y  ;**286** MLR 09/25/00  Newing X & Y variables prior to ^DIR
"RTN","DGRPD1",65,0)
 I $G(IOST)["P-" Q DGLINE ; if printer, quit
"RTN","DGRPD1",66,0)
 I $Y>DGLINE N DIR S DIR(0)="E" D ^DIR D:Y HDR I 'Y S DGRPOUT=1,DGLINE=0
"RTN","DGRPD1",67,0)
 Q DGLINE
"RTN","DGRPD1",68,0)
 ;
"RTN","VAFCAUD")
0^5^B36673248^B27488177
"RTN","VAFCAUD",1,0)
VAFCAUD ;BIR/CML-MPI/PD AUDIT FILE PRINT FOR A SPECIFIED PATIENT ;20 May 2013  2:25 PM
"RTN","VAFCAUD",2,0)
 ;;5.3;Registration;**477,712,863**;Aug 13, 1993;Build 2
"RTN","VAFCAUD",3,0)
 ;Reference to ^DIA(2 and data derived from the AUDIT file (#1.1)
"RTN","VAFCAUD",4,0)
 ;is supported by IA #2097 and #2602.
"RTN","VAFCAUD",5,0)
 ;Reference to ^ORD(101 supported by IA #2596
"RTN","VAFCAUD",6,0)
 S QFLG=1
"RTN","VAFCAUD",7,0)
 S RPCFLG=0 ;is this from an rpc call
"RTN","VAFCAUD",8,0)
BEGIN ;
"RTN","VAFCAUD",9,0)
 W !!,"This option prints information from the AUDIT file (#1.1) for a"
"RTN","VAFCAUD",10,0)
 W !,"selected patient and date range."
"RTN","VAFCAUD",11,0)
 W !!,"For the PATIENT file (#2) entry selected, the report prints the"
"RTN","VAFCAUD",12,0)
 W !,"patient name and DFN, date/time the field was edited, the user who"
"RTN","VAFCAUD",13,0)
 W !,"made the change, the field edited, the old value, and the new value."
"RTN","VAFCAUD",14,0)
 W !,"The option or protocol (if available) will also be displayed."
"RTN","VAFCAUD",15,0)
 D ASK1
"RTN","VAFCAUD",16,0)
 I $G(VAFCDFN) D ASK2
"RTN","VAFCAUD",17,0)
 I $G(VAFCBDT),$G(VAFCEDT) D DEV
"RTN","VAFCAUD",18,0)
 G QUIT
"RTN","VAFCAUD",19,0)
 ;
"RTN","VAFCAUD",20,0)
ASK1 ;Ask for PATIENT
"RTN","VAFCAUD",21,0)
 W !
"RTN","VAFCAUD",22,0)
 S DIC="^DPT(",DIC(0)="QEAM",DIC("A")="Select PATIENT: " D ^DIC K DIC Q:Y<0  S VAFCDFN=+Y
"RTN","VAFCAUD",23,0)
 ;
"RTN","VAFCAUD",24,0)
DSP ;Display if audit data is available - **863 MVI_2039 (cml) new subroutine added to pick up audit data for multiple subfields
"RTN","VAFCAUD",25,0)
 S (GOT,EARLY,EARLYM)=0,EARLYDT=""
"RTN","VAFCAUD",26,0)
 S PTNM=$P(^DPT(VAFCDFN,0),"^")
"RTN","VAFCAUD",27,0)
 ;check top level audits
"RTN","VAFCAUD",28,0)
 S IEN=0 F  S IEN=$O(^DIA(2,"B",VAFCDFN,IEN)) Q:'IEN  D
"RTN","VAFCAUD",29,0)
 .I $D(^DIA(2,IEN,0)) S EDITDT=$P(^(0),"^",2),GOT=1 S:EARLY=0 EARLY=EDITDT S:EDITDT<EARLY EARLY=EDITDT
"RTN","VAFCAUD",30,0)
 ;check multiple level
"RTN","VAFCAUD",31,0)
 S DFNMULT=VAFCDFN_",0" F  S DFNMULT=$O(^DIA(2,"B",DFNMULT)) Q:DFNMULT=""  Q:$P(DFNMULT,",")'=VAFCDFN  I $D(^DIA(2,"B",DFNMULT)) D
"RTN","VAFCAUD",32,0)
 .S IEN=0 F  S IEN=$O(^DIA(2,"B",DFNMULT,IEN)) Q:'IEN  I $D(^DIA(2,IEN,0)) S EDITDT=$P(^(0),"^",2),GOT=1 S:EARLYM=0 EARLYM=EDITDT S:EDITDT<EARLYM EARLYM=EDITDT
"RTN","VAFCAUD",33,0)
 ;
"RTN","VAFCAUD",34,0)
 I 'GOT W !!,"There is no audit data available for any date for ",PTNM,"." G ASK1
"RTN","VAFCAUD",35,0)
 I EARLYM=0,EARLY>0 S EARLYDT=EARLY
"RTN","VAFCAUD",36,0)
 I EARLY=0,EARLYM>0 S EARLYDT=EARLYM
"RTN","VAFCAUD",37,0)
 I EARLY>0,EARLYM>EARLY S EARLYDT=EARLY
"RTN","VAFCAUD",38,0)
 I EARLYM>0,EARLY>EARLYM S EARLYDT=EARLYM
"RTN","VAFCAUD",39,0)
 W !!,"The earliest audit data is "_$$FMTE^XLFDT(EARLYDT)_"."
"RTN","VAFCAUD",40,0)
 Q
"RTN","VAFCAUD",41,0)
 ;
"RTN","VAFCAUD",42,0)
ASK2 ;Ask for Date Range
"RTN","VAFCAUD",43,0)
 ;I '$D(VAFCDFN)&($D(DFN)) S VAFCDFN=DFN
"RTN","VAFCAUD",44,0)
 W !!,"Enter date range for data to be included in report."
"RTN","VAFCAUD",45,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","VAFCAUD",46,0)
 S DIR(0)="DAO^:DT:EPX",DIR("A")="Beginning Date:  " D ^DIR K DIR Q:$D(DIRUT)  S VAFCBDT=Y
"RTN","VAFCAUD",47,0)
 S DIR(0)="DAO^"_VAFCBDT_":DT:EPX",DIR("A")="Ending Date:  " D ^DIR K DIR Q:$D(DIRUT)  S VAFCEDT=Y
"RTN","VAFCAUD",48,0)
 Q
"RTN","VAFCAUD",49,0)
 ;
"RTN","VAFCAUD",50,0)
DEV W !!,"The right margin for this report is 80.",!!
"RTN","VAFCAUD",51,0)
 S ZTSAVE("VAFCBDT")="",ZTSAVE("VAFCEDT")="",ZTSAVE("VAFCDFN")=""
"RTN","VAFCAUD",52,0)
 D EN^XUTMDEVQ("START^VAFCAUD(VAFCDFN,VAFCBDT,VAFCEDT,RPCFLG)","MPI/PD - Print AUDIT File Data for a Specific Patient",.ZTSAVE) I 'POP Q
"RTN","VAFCAUD",53,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","VAFCAUD",54,0)
 G QUIT
"RTN","VAFCAUD",55,0)
 ;
"RTN","VAFCAUD",56,0)
START(VAFCDFN,VAFCBDT,VAFCEDT,RPCFLG) ;
"RTN","VAFCAUD",57,0)
 N IEN
"RTN","VAFCAUD",58,0)
 K ^TMP("VAFCAUD",$J)
"RTN","VAFCAUD",59,0)
 ;
"RTN","VAFCAUD",60,0)
LOOP ;Loop on "B" xref of the AUDIT file
"RTN","VAFCAUD",61,0)
 S STOP=VAFCEDT+1
"RTN","VAFCAUD",62,0)
 S IEN=0 F  S IEN=$O(^DIA(2,"B",VAFCDFN,IEN)) Q:'IEN  D
"RTN","VAFCAUD",63,0)
 .I $D(^DIA(2,IEN,0)) S EDITDT=$P(^(0),U,2) I EDITDT>VAFCBDT,EDITDT<STOP D
"RTN","VAFCAUD",64,0)
 ..S ^TMP("VAFCAUD",$J,EDITDT,IEN)=""
"RTN","VAFCAUD",65,0)
 ;
"RTN","VAFCAUD",66,0)
 ;find any audit data for audited fields that are multiples  - **863 MVI_2039 (cml)
"RTN","VAFCAUD",67,0)
 S DFNMULT=VAFCDFN_",0" F  S DFNMULT=$O(^DIA(2,"B",DFNMULT)) Q:DFNMULT=""  Q:$P(DFNMULT,",")'=VAFCDFN  I $D(^DIA(2,"B",DFNMULT)) D
"RTN","VAFCAUD",68,0)
 .S IEN=0 F  S IEN=$O(^DIA(2,"B",DFNMULT,IEN)) Q:'IEN  D
"RTN","VAFCAUD",69,0)
 ..I $D(^DIA(2,IEN,0)) S EDITDT=$P(^(0),"^",2) I EDITDT>VAFCBDT,EDITDT<STOP S ^TMP("VAFCAUD",$J,EDITDT,IEN)=""
"RTN","VAFCAUD",70,0)
 ; ****863 MVI_2039 (cml) changes stop here
"RTN","VAFCAUD",71,0)
 ;
"RTN","VAFCAUD",72,0)
PRT ;Print report
"RTN","VAFCAUD",73,0)
 S (PG,QFLG)=0,U="^",$P(LN,"-",81)="",SITE=$P($$SITE^VASITE(),U,2)
"RTN","VAFCAUD",74,0)
 S PVAFCBDT=$$FMTE^XLFDT(VAFCBDT),PVAFCEDT=$$FMTE^XLFDT(VAFCEDT)
"RTN","VAFCAUD",75,0)
 D NOW^%DTC S HDT=$$FMTE^XLFDT($E(%,1,12))
"RTN","VAFCAUD",76,0)
 D HDR
"RTN","VAFCAUD",77,0)
 I '$O(^TMP("VAFCAUD",$J,0)) W !!,"No audit data found in this date range for this patient." Q
"RTN","VAFCAUD",78,0)
 S EDITDT=0 F  S EDITDT=$O(^TMP("VAFCAUD",$J,EDITDT)) Q:QFLG  Q:'EDITDT  D
"RTN","VAFCAUD",79,0)
 .S IEN=0 F  S IEN=$O(^TMP("VAFCAUD",$J,EDITDT,IEN)) Q:QFLG  Q:'IEN  D
"RTN","VAFCAUD",80,0)
 ..S PRTDT=$$FMTE^XLFDT($E(EDITDT,1,12))
"RTN","VAFCAUD",81,0)
 ..S IEN0=^DIA(2,IEN,0)
"RTN","VAFCAUD",82,0)
 ..S FILE=2,FIELD=$P(IEN0,"^",3) I FIELD["," S FILE=+$P($G(^DD(2,$P(FIELD,","),0)),"^",2) Q:'FILE  S FIELD=$P(FIELD,",",2)   ;**863 MVI_2039 (cml)
"RTN","VAFCAUD",83,0)
 ..K VAFCARR1 D FIELD^DID(FILE,FIELD,"","LABEL","VAFCARR1")   ;**712, **863 MVI_2039 (cml)
"RTN","VAFCAUD",84,0)
 ..S FLD=$G(VAFCARR1("LABEL")) Q:FLD=""
"RTN","VAFCAUD",85,0)
 ..S USER=$P(IEN0,U,4)
"RTN","VAFCAUD",86,0)
 ..I 'USER S USER="UNKNOWN"
"RTN","VAFCAUD",87,0)
 ..I USER'="UNKNOWN" S DIC="^VA(200,",DIC(0)="MZO",X="`"_USER D ^DIC S USER=$P(Y,"^",2)
"RTN","VAFCAUD",88,0)
 ..S OLD=$G(^DIA(2,IEN,2)) I OLD']"" S OLD="<no previous value>"
"RTN","VAFCAUD",89,0)
 ..S NEW=$G(^DIA(2,IEN,3)) I NEW']"" S NEW="<no current value>"
"RTN","VAFCAUD",90,0)
 ..K OPTDA1,OPTDA2,VAFCOPTN,OPTNM I $G(^DIA(2,IEN,4.1)) D
"RTN","VAFCAUD",91,0)
 ...S OPTDA1=+$P(^DIA(2,IEN,4.1),"^")
"RTN","VAFCAUD",92,0)
 ...I OPTDA1 S DIC=19,DR=".01",DA=OPTDA1,DIQ(0)="EI",DIQ="VAFCOPTN" D EN^DIQ1 K DIC,DR,DA,DIQ S VAFCOPTN=$G(VAFCOPTN(19,OPTDA1,.01,"E"))
"RTN","VAFCAUD",93,0)
 ...S OPTDA2=$P(^DIA(2,IEN,4.1),"^",2)
"RTN","VAFCAUD",94,0)
 ...I $P(OPTDA2,";",2)="ORD(101," S DIC=101,DR=".01",DA=+OPTDA2,DIQ(0)="EI",DIQ="VAFCOPTN" D EN^DIQ1 K DIC,DR,DA,DIQ S OPTNM=$G(VAFCOPTN(101,+OPTDA2,.01,"E")) Q
"RTN","VAFCAUD",95,0)
 ...I +OPTDA2 S DIC=19,DR=".01",DA=+OPTDA2,DIQ(0)="EI",DIQ="VAFCOPTN" D EN^DIQ1 K DIC,DR,DA,DIQ S OPTNM=$G(VAFCOPTN(19,+OPTDA2,.01,"E")) Q
"RTN","VAFCAUD",96,0)
 ..I 'RPCFLG D:$Y+4>IOSL HDR Q:QFLG
"RTN","VAFCAUD",97,0)
 ..W !,PRTDT,?20,FLD,?51,USER,!?20,OLD," / ",NEW
"RTN","VAFCAUD",98,0)
 ..I $G(VAFCOPTN)'="" W !?3,VAFCOPTN
"RTN","VAFCAUD",99,0)
 ..I $G(OPTNM)'="" W:$G(VAFCOPTN)="" !?3 W "/",$G(OPTNM)
"RTN","VAFCAUD",100,0)
 ..W !
"RTN","VAFCAUD",101,0)
 Q
"RTN","VAFCAUD",102,0)
 ;
"RTN","VAFCAUD",103,0)
QUIT ;
"RTN","VAFCAUD",104,0)
 I '$G(RPCFLG),$E(IOST,1,2)="C-"&('$G(QFLG)) S DIR(0)="E" D  D ^DIR K DIR
"RTN","VAFCAUD",105,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","VAFCAUD",106,0)
 I '$G(RPCFLG) D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","VAFCAUD",107,0)
 K ^TMP("VAFCAUD",$J)
"RTN","VAFCAUD",108,0)
 K %,%I,C,VAFCDFN,EDITDT,FLD,HDT,IEN,IEN0,JJ,LN,NEW,OLD,OPTDA1,OPTDA2,VAFCOPTN,OPTNM,PG,PVAFCBDT,PVAFCEDT,PRTDT,POP
"RTN","VAFCAUD",109,0)
 K QFLG,VAFCARR1,VAFCBDT,VAFCEDT,RPCFLG,SITE,SS,STOP,USER,X,Y,ZTSK
"RTN","VAFCAUD",110,0)
 K SUB,FILE,FIELD,QQ,DFNMULT,EARLY,EARLYDT,EARLYM,GOT,PTNM   ;**712, **863 MVI_2039 (cml)
"RTN","VAFCAUD",111,0)
 Q
"RTN","VAFCAUD",112,0)
 ;
"RTN","VAFCAUD",113,0)
HDR ;HEADER
"RTN","VAFCAUD",114,0)
 I 'RPCFLG I $E(IOST,1,2)="C-" S SS=22-$Y F JJ=1:1:SS W !
"RTN","VAFCAUD",115,0)
 I 'RPCFLG I $E(IOST,1,2)="C-",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","VAFCAUD",116,0)
 S PG=PG+1
"RTN","VAFCAUD",117,0)
 I 'RPCFLG W:$Y!($E(IOST,1,2)="C-") @IOF
"RTN","VAFCAUD",118,0)
 W !,"PATIENT AUDIT LIST at ",SITE," on ",HDT,?70,"Page: ",PG
"RTN","VAFCAUD",119,0)
 W !,"Patient: ",$P(^DPT(VAFCDFN,0),U)," (DFN #",VAFCDFN,")"
"RTN","VAFCAUD",120,0)
 W !,"Date Range: ",PVAFCBDT," to ",PVAFCEDT
"RTN","VAFCAUD",121,0)
 W !!,"Date/Time Edited",?20,"Field Edited",?51,"Edited By"
"RTN","VAFCAUD",122,0)
 W !?20,"Old Value / New Value",!?3,"Option/Protocol",!,LN
"RTN","VAFCAUD",123,0)
 Q
"RTN","VAFCPDAT")
0^1^B50668087^B40842331
"RTN","VAFCPDAT",1,0)
VAFCPDAT ;BIR/CML/ALS-DISPLAY MPI/PD INFORMATION FOR SELECTED PATIENT ;10/24/02  13:13
"RTN","VAFCPDAT",2,0)
 ;;5.3;Registration;**333,414,474,505,707,712,837,863**;Aug 13, 1993;Build 2
"RTN","VAFCPDAT",3,0)
 ;Registration has IA #3299 for MPI/PD to call START^VAFCPDAT
"RTN","VAFCPDAT",4,0)
 ;
"RTN","VAFCPDAT",5,0)
 ;variable DFN is not NEWed or KILLed in this routine as that variable is passed in
"RTN","VAFCPDAT",6,0)
 ;
"RTN","VAFCPDAT",7,0)
MAIN ; Entry point with device call
"RTN","VAFCPDAT",8,0)
 S NOTRPC=1
"RTN","VAFCPDAT",9,0)
 K ZTSAVE S ZTSAVE("DFN")=""
"RTN","VAFCPDAT",10,0)
 D EN^XUTMDEVQ("START^VAFCPDAT","Print MPI/PD Patient Data",.ZTSAVE)
"RTN","VAFCPDAT",11,0)
 K NOTRPC
"RTN","VAFCPDAT",12,0)
 Q
"RTN","VAFCPDAT",13,0)
 ;
"RTN","VAFCPDAT",14,0)
START ;Entry point without device call, used for RPC calls
"RTN","VAFCPDAT",15,0)
 N X S X="MPIF001" X ^%ZOSF("TEST") I '$T W !,"MPI not installed." G QUIT  ;**863 - MVI_2351 (ptd)
"RTN","VAFCPDAT",16,0)
 S $P(LN,"=",80)="",$P(LN2,"=",60)="",QFLG=0
"RTN","VAFCPDAT",17,0)
 D NOW^%DTC S HDT=$$FMTE^XLFDT($E(%,1,12))
"RTN","VAFCPDAT",18,0)
 S SITE=$$SITE^VASITE(),SITENAM=$P(SITE,"^",2),SITENUM=$P(SITE,"^",3),SITEIEN=$P(SITE,"^")
"RTN","VAFCPDAT",19,0)
 I +DFN<0 D  Q
"RTN","VAFCPDAT",20,0)
 .I $D(NOTRPC) W @IOF,!," "
"RTN","VAFCPDAT",21,0)
 .W !,"ICN ",$G(ICN)," does not exist at ",SITENAM,"."
"RTN","VAFCPDAT",22,0)
 .W !,"Search date: ",HDT,!,LN
"RTN","VAFCPDAT",23,0)
 S DIC=2,DR=".01;.02;.03;.09;.111;.112;.113;.114;.115;.1112;.131;.313;.351;994;.0907;.0906;.121;.1171;.1172;.1173",DA=DFN,DIQ(0)="EI",DIQ="DNODE"  ;**707,712,863
"RTN","VAFCPDAT",24,0)
 N NAME,SSN,DOB,SEX,CLAIM,DOD,ICN,STR1,STR2,STR3,CTY,ST,ZIP,PHN,MBI,SSNVER,PREAS,BAI,TIN,FIN,COUNTRY,CCODE,CNAME,PROVINCE,POSTCODE ;**707,712,837,863
"RTN","VAFCPDAT",25,0)
 D EN^DIQ1 K DIC,DR,DA,DIQ
"RTN","VAFCPDAT",26,0)
 S NAME=$G(DNODE(2,DFN,.01,"E")),SSN=$G(DNODE(2,DFN,.09,"E"))
"RTN","VAFCPDAT",27,0)
 S DOB=$$FMTE^XLFDT($G(DNODE(2,DFN,.03,"I")))
"RTN","VAFCPDAT",28,0)
 S MBI=$G(DNODE(2,DFN,994,"I")),MBI=$S(MBI="Y":"YES",MBI="N":"NO",1:"NULL")  ;**707
"RTN","VAFCPDAT",29,0)
 S SEX=$G(DNODE(2,DFN,.02,"E")),DOD=$G(DNODE(2,DFN,.351,"E"))
"RTN","VAFCPDAT",30,0)
 S CLAIM=$G(DNODE(2,DFN,.313,"E")) S:CLAIM="" CLAIM="None"
"RTN","VAFCPDAT",31,0)
 S BAI=$G(DNODE(2,DFN,.121,"E"))  ;**712
"RTN","VAFCPDAT",32,0)
 S STR1=$G(DNODE(2,DFN,.111,"E")),STR2=$G(DNODE(2,DFN,.112,"E")),STR3=$G(DNODE(2,DFN,.113,"E"))
"RTN","VAFCPDAT",33,0)
 S CTY=$G(DNODE(2,DFN,.114,"E")),ST=$G(DNODE(2,DFN,.115,"E")),ZIP=$G(DNODE(2,DFN,.1112,"E"))
"RTN","VAFCPDAT",34,0)
 S COUNTRY=$G(DNODE(2,DFN,.1173,"I")),(CCODE,CNAME)="" I COUNTRY]"" S CCODE=$$GET1^DIQ(779.004,+COUNTRY_",",.01),CNAME=$$GET1^DIQ(779.004,+COUNTRY_",",1.3)  ;**863 - MVI_1902 (ptd)
"RTN","VAFCPDAT",35,0)
 S PROVINCE=$G(DNODE(2,DFN,.1171,"E")),POSTCODE=$G(DNODE(2,DFN,.1172,"E"))
"RTN","VAFCPDAT",36,0)
 S PHN=$G(DNODE(2,DFN,.131,"E"))
"RTN","VAFCPDAT",37,0)
 S SSNVER=$G(DNODE(2,DFN,.0907,"E"))  ;**707
"RTN","VAFCPDAT",38,0)
 S PREAS=$G(DNODE(2,DFN,.0906,"E"))  ;**707
"RTN","VAFCPDAT",39,0)
 S MNODE=$$MPINODE^MPIFAPI(DFN) I +MNODE=-1 S MNODE="^^^^^^^^"
"RTN","VAFCPDAT",40,0)
 S (ICN,SCN,SCORE,SCRDT,DIFF,TIN,FIN)=""   ;**837, MVI_883
"RTN","VAFCPDAT",41,0)
 S ICN=$$GETICN^MPIF001(DFN) S:(+ICN=-1) ICN="None" ;**863 - MVI_2351 (ptd)
"RTN","VAFCPDAT",42,0)
 ;S CMOR=$$GET1^DIQ(4,+$P($G(MNODE),"^",3)_",",.01) S:CMOR="" CMOR="None"    ;removed for **837, MVI_918
"RTN","VAFCPDAT",43,0)
 I $E(ICN,1,3)=SITENUM S GOT=0 D
"RTN","VAFCPDAT",44,0)
 . I $P($G(MNODE),"^",4)=""!('$D(^DPT("AICNL",1,DFN))) S ICN=ICN_"**"
"RTN","VAFCPDAT",45,0)
 S TIN=$P($G(MNODE),"^",8),FIN=$P($G(MNODE),"^",9)   ;**837, MVI_883
"RTN","VAFCPDAT",46,0)
 ;
"RTN","VAFCPDAT",47,0)
 I $D(NOTRPC) W @IOF,!
"RTN","VAFCPDAT",48,0)
 W !,"MPI/PD Data for: ",NAME,"  (DFN #",DFN,")"
"RTN","VAFCPDAT",49,0)
 ; check for patient sensitivity and user security
"RTN","VAFCPDAT",50,0)
 N RESULT,RGSENS,SENSTV,DA,DR,DIC,DIQ,VAFCSEN
"RTN","VAFCPDAT",51,0)
 D PTSEC^DGSEC4(.RESULT,DFN,0,"MPI/PD Patient Inquiry^MPI/PD Patient Inquiry")
"RTN","VAFCPDAT",52,0)
 I RESULT(1)=-1 W !!,"Access denied: Required parameters not defined" G QUIT
"RTN","VAFCPDAT",53,0)
 I RESULT(1)>0 W ?50,"***PATIENT MARKED SENSITIVE***"
"RTN","VAFCPDAT",54,0)
 I RESULT(1)=3 W !!,"Access not allowed on your own PATIENT (#2) file entry" G QUIT
"RTN","VAFCPDAT",55,0)
 I RESULT(1)=4 W !!,"Access denied: Your SSN is not defined" G QUIT
"RTN","VAFCPDAT",56,0)
 I RESULT(1)<3 D
"RTN","VAFCPDAT",57,0)
 . I RESULT(1)=1 D NOTICE^DGSEC4(.VAFCSEN,DFN,"RPC - VAFC REMOTE PDAT FROM THE MPI^MPI/PD Patient Inquiry (Remote)",2) ;IA #3027
"RTN","VAFCPDAT",58,0)
 . I RESULT(1)=2 D NOTICE^DGSEC4(.VAFCSEN,DFN,"RPC - VAFC REMOTE PDAT FROM THE MPI^MPI/PD Patient Inquiry (Remote)",3) ;IA #3027
"RTN","VAFCPDAT",59,0)
 W !,"Printed ",HDT," at ",SITENAM,!,LN
"RTN","VAFCPDAT",60,0)
 S $Y=$Y+1
"RTN","VAFCPDAT",61,0)
 ;next 7 lines modified for **707
"RTN","VAFCPDAT",62,0)
 W !,"ICN    : ",ICN  ;CMOR removed  **837, MVI_918
"RTN","VAFCPDAT",63,0)
 W !,"SSN    : ",SSN
"RTN","VAFCPDAT",64,0)
 I SSNVER]"" W !?9,"SSN Verification Status: ",SSNVER
"RTN","VAFCPDAT",65,0)
 I SSNVER="",PREAS]"" W !?9,"Pseudo SSN Reason: ",PREAS
"RTN","VAFCPDAT",66,0)
 I SSNVER]"",PREAS]"" W !?9,"Pseudo SSN Reason      : ",PREAS
"RTN","VAFCPDAT",67,0)
 W !,"Sex    : ",SEX
"RTN","VAFCPDAT",68,0)
 W !,"Claim #: ",CLAIM
"RTN","VAFCPDAT",69,0)
 W !,"Date of Birth: ",DOB
"RTN","VAFCPDAT",70,0)
 I DOD]"" W !,"Date of Death: ",DOD
"RTN","VAFCPDAT",71,0)
 I MBI]"" W !,"Multiple Birth Indicator: ",MBI  ;**707
"RTN","VAFCPDAT",72,0)
 I TIN]"" W !,"DoD Temporary ID Number : ",TIN  ;**837, MVI_883
"RTN","VAFCPDAT",73,0)
 I FIN]"" W !,"DoD Foreign ID Number   : ",FIN  ;**837, MVI_883
"RTN","VAFCPDAT",74,0)
 W !,"Address:" I BAI'="" W " (Bad Address Indicator: ",BAI,")"
"RTN","VAFCPDAT",75,0)
 I STR1'="" W !?9,STR1
"RTN","VAFCPDAT",76,0)
 I STR2'="" W !?9,STR2
"RTN","VAFCPDAT",77,0)
 I STR3'="" W !?9,STR3
"RTN","VAFCPDAT",78,0)
 I COUNTRY=""!(CCODE="USA") D   ;USA Address  **863 - MVI_1902 (ptd)
"RTN","VAFCPDAT",79,0)
 .I CTY]"" W !?9,$E(CTY,1,20)_", "_$G(ST)_" "_$G(ZIP)
"RTN","VAFCPDAT",80,0)
 I COUNTRY]"",CCODE'="USA" D   ;Foreign Address
"RTN","VAFCPDAT",81,0)
 .I CTY]""!(PROVINCE]"")!(POSTCODE]"") D
"RTN","VAFCPDAT",82,0)
 ..I PROVINCE]"" W !?9,CTY_", "_PROVINCE_" ("_CNAME_")  "_POSTCODE
"RTN","VAFCPDAT",83,0)
 ..I PROVINCE="" W !?9,CTY_", "_"("_CNAME_")  "_POSTCODE
"RTN","VAFCPDAT",84,0)
 I PHN'="" W !,"Phone #: ",PHN
"RTN","VAFCPDAT",85,0)
 I $G(IOSL)<30&($E(IOST,1,2)="C-") D
"RTN","VAFCPDAT",86,0)
 .I $Y>23 D
"RTN","VAFCPDAT",87,0)
 ..S DIR(0)="E" D  D ^DIR K DIR I 'Y S QFLG=1
"RTN","VAFCPDAT",88,0)
 ...S SS=22-$Y F JJ=1:1:SS W !
"RTN","VAFCPDAT",89,0)
 ..S $Y=0
"RTN","VAFCPDAT",90,0)
 I QFLG=1 G QUIT
"RTN","VAFCPDAT",91,0)
 ;
"RTN","VAFCPDAT",92,0)
TF ;List Treating Facilities for this patient
"RTN","VAFCPDAT",93,0)
 D TFHDR
"RTN","VAFCPDAT",94,0)
 K TFARR
"RTN","VAFCPDAT",95,0)
 S TF=0 F  S TF=$O(^DGCN(391.91,"APAT",DFN,TF)) Q:'TF  D
"RTN","VAFCPDAT",96,0)
 .S TFIEN=$O(^DGCN(391.91,"APAT",DFN,TF,0))
"RTN","VAFCPDAT",97,0)
 . S DIC="^DGCN(391.91,",DR=".02;.03;.07",DA=TFIEN,DIQ(0)="EI",DIQ="TFDATA"
"RTN","VAFCPDAT",98,0)
 . D EN^DIQ1 K DIC,DA,DR,DIQ
"RTN","VAFCPDAT",99,0)
 . S INST="",STATION=""
"RTN","VAFCPDAT",100,0)
 . S INST=$G(TFDATA(391.91,TFIEN,.02,"I"))
"RTN","VAFCPDAT",101,0)
 . I INST'="" D
"RTN","VAFCPDAT",102,0)
 .. S DIC=4,DR="99",DA=INST,DIQ(0)="E",DIQ="STA"
"RTN","VAFCPDAT",103,0)
 .. D EN^DIQ1 K DIC,DA,DR,DIQ
"RTN","VAFCPDAT",104,0)
 .. S STATION=$G(STA(4,INST,99,"E"))
"RTN","VAFCPDAT",105,0)
 . S TFNM=$G(TFDATA(391.91,TFIEN,.02,"E"))
"RTN","VAFCPDAT",106,0)
 . S LSTDT=$G(TFDATA(391.91,TFIEN,.03,"I")) S:LSTDT="" LSTDT="none found"
"RTN","VAFCPDAT",107,0)
 . S LSTSORT=9999999
"RTN","VAFCPDAT",108,0)
 . I +LSTDT S LSTSORT=9999999-LSTDT,LSTDT=$$FMTE^XLFDT($E(LSTDT,1,12))
"RTN","VAFCPDAT",109,0)
 . S REACODE=$G(TFDATA(391.91,TFIEN,.07,"E")) S REASON="none found"
"RTN","VAFCPDAT",110,0)
 . I REACODE'="" D
"RTN","VAFCPDAT",111,0)
 .. S DIC="^VAT(391.72,",DIC(0)="Z",X=REACODE D ^DIC K DIC,X
"RTN","VAFCPDAT",112,0)
 .. S REASON=$P($G(Y(0)),"^",4)
"RTN","VAFCPDAT",113,0)
 . S TFARR(LSTSORT,TFNM)=TFIEN_"^"_REASON_"^"_$G(STATION)_"^"_LSTDT
"RTN","VAFCPDAT",114,0)
 I '$D(TFARR) W !,"No Treating Facilities found." G SUB
"RTN","VAFCPDAT",115,0)
 S LSTSORT=0 F  S LSTSORT=$O(TFARR(LSTSORT)) Q:'LSTSORT  D  G:QFLG QUIT
"RTN","VAFCPDAT",116,0)
 .S TFNM="" F  S TFNM=$O(TFARR(LSTSORT,TFNM)) Q:TFNM=""  D  Q:QFLG
"RTN","VAFCPDAT",117,0)
 ..S REASON=$P(TFARR(LSTSORT,TFNM),"^",2)
"RTN","VAFCPDAT",118,0)
 ..S STATION=$P(TFARR(LSTSORT,TFNM),"^",3)
"RTN","VAFCPDAT",119,0)
 ..S LSTDT=$P(TFARR(LSTSORT,TFNM),"^",4)
"RTN","VAFCPDAT",120,0)
 ..I $Y+3>IOSL&($E(IOST,1,2)="C-") D  Q:QFLG
"RTN","VAFCPDAT",121,0)
 ...S LNQ=22 D SS Q:QFLG
"RTN","VAFCPDAT",122,0)
 ...W @IOF,!,"MPI/PD data for: ",NAME,"  (DFN #",DFN,")",!,LN2 D TFHDR
"RTN","VAFCPDAT",123,0)
 ..W !,$E(TFNM,1,20),?22,$G(STATION),?32,LSTDT,?54,REASON
"RTN","VAFCPDAT",124,0)
SUB ;removed listing of subscribers for RG*1.0*23
"RTN","VAFCPDAT",125,0)
HIS ;find ICN history
"RTN","VAFCPDAT",126,0)
 I '$O(^DPT(DFN,"MPIFHIS",0)) G CONT
"RTN","VAFCPDAT",127,0)
 ;
"RTN","VAFCPDAT",128,0)
 I $Y+4>IOSL&($E(IOST,1,2)="C-") D  G:QFLG QUIT
"RTN","VAFCPDAT",129,0)
 .S LNQ=22 D SS Q:QFLG
"RTN","VAFCPDAT",130,0)
 .W @IOF,!,"MPI/PD data for: ",NAME,"  (DFN #",DFN,")",!,LN2
"RTN","VAFCPDAT",131,0)
 D ICNHDR
"RTN","VAFCPDAT",132,0)
 S HIS=0 F  S HIS=$O(^DPT(DFN,"MPIFHIS",HIS)) Q:'HIS  D  G:QFLG QUIT
"RTN","VAFCPDAT",133,0)
 .S DIC=2,DR="992",DR(2.0992)=".01;1;3",DA=DFN,DA(2.0992)=HIS ;**863 - MVI_2351 (ptd)
"RTN","VAFCPDAT",134,0)
 .S DIQ(0)="E",DIQ="HISNODE"
"RTN","VAFCPDAT",135,0)
 .D EN^DIQ1 K DIC,DA,DR,DIQ
"RTN","VAFCPDAT",136,0)
 .S HISICN=$G(HISNODE(2.0992,HIS,.01,"E"))
"RTN","VAFCPDAT",137,0)
 .S HISCHK=$G(HISNODE(2.0992,HIS,1,"E")) ;**863 - MVI_2351 (ptd) history checksum
"RTN","VAFCPDAT",138,0)
 .S HFULLICN=HISICN_$S(HISCHK]"":"V"_HISCHK,1:"") ;**863 - MVI_2351 (ptd) History full ICN
"RTN","VAFCPDAT",139,0)
 .S HISDT=$G(HISNODE(2.0992,HIS,3,"E"))
"RTN","VAFCPDAT",140,0)
 .I $Y+3>IOSL&($E(IOST,1,2)="C-") D  Q:QFLG
"RTN","VAFCPDAT",141,0)
 ..S LNQ=22 D SS Q:QFLG
"RTN","VAFCPDAT",142,0)
 ..W @IOF,!,"MPI/PD data for: ",NAME,"  (DFN #",DFN,")",!,LN2 D ICNHDR
"RTN","VAFCPDAT",143,0)
 .W !,HFULLICN I HISDT]"" W "  - changed ",HISDT ;**863 - MVI_2351 (ptd)
"RTN","VAFCPDAT",144,0)
 ;
"RTN","VAFCPDAT",145,0)
CONT ;Continue to VAFCPDT2 for extended data
"RTN","VAFCPDAT",146,0)
 ;D CMORHIS^VAFCPDT2  
"RTN","VAFCPDAT",147,0)
 ;CMOR History removed, called changed to EXT^VAFCPDT2  **837, MVI_918
"RTN","VAFCPDAT",148,0)
 D EXT^VAFCPDT2
"RTN","VAFCPDAT",149,0)
DONE ;
"RTN","VAFCPDAT",150,0)
 I QFLG G QUIT
"RTN","VAFCPDAT",151,0)
 I ($E(IOST,1,2)="C-") S LNQ=24 D SS
"RTN","VAFCPDAT",152,0)
 ;
"RTN","VAFCPDAT",153,0)
QUIT ;
"RTN","VAFCPDAT",154,0)
 K %,CMOR,DIC,DIR,DIRUT,DNODE,GOT,HDT,HFULLICN,HIS,HISCHK,HISDT,HISICN,JJ,LIEN
"RTN","VAFCPDAT",155,0)
 K LINST,LN,LSTDT,MNODE,REACODE,REASON,SCN,SCORE,SITE,SITEIEN,SITENAM,SITENUM
"RTN","VAFCPDAT",156,0)
 K SS,SUBN,SUBARR,TERM,TERMDT,TF,TFARR,TFDATA,TFIEN,TFNM,Y,D,CHG,CHGNODE
"RTN","VAFCPDAT",157,0)
 K HISNODE,DIFF,INST,RGDFN,SCRDT,STATION,STA,LN2,NAME,LSTSORT,LNQ,QFLG,MBI
"RTN","VAFCPDAT",158,0)
 Q
"RTN","VAFCPDAT",159,0)
TFHDR ;
"RTN","VAFCPDAT",160,0)
 W !!,"Treating Facilities:",?22,"Station:",?32,"DT Last Treated",?54,"Event Reason"
"RTN","VAFCPDAT",161,0)
 W !,"--------------------",?22,"--------",?32,"---------------",?54,"------------"
"RTN","VAFCPDAT",162,0)
 Q
"RTN","VAFCPDAT",163,0)
ICNHDR  W !!,"ICN History:",!,"------------"
"RTN","VAFCPDAT",164,0)
 Q
"RTN","VAFCPDAT",165,0)
 ;
"RTN","VAFCPDAT",166,0)
SS S DIR(0)="E" D  D ^DIR K DIR I 'Y S QFLG=1
"RTN","VAFCPDAT",167,0)
 .S SS=LNQ-$Y F JJ=1:1:SS W !
"RTN","VAFCPDAT",168,0)
 Q
"RTN","VAFCQRY")
0^2^B14904724^B12975534
"RTN","VAFCQRY",1,0)
VAFCQRY ;BIR/DLR-Query for patient demographics ;10/18/2000
"RTN","VAFCQRY",2,0)
 ;;5.3;Registration;**428,575,627,707,863**;Aug 13, 1993;Build 2
"RTN","VAFCQRY",3,0)
 ;   
"RTN","VAFCQRY",4,0)
IN ;process in the patient query
"RTN","VAFCQRY",5,0)
 N IEN,HLA,VAFCCNT,ICN,CLAIM,SG,VAFCER,VAFC,DFN,STATE,CITY,SUBCOMP,COMP,REP,LVL,LVL2,VAFC,SSN,SAVEDFN
"RTN","VAFCQRY",6,0)
 S VAFCCNT=1,VAFCER=1
"RTN","VAFCQRY",7,0)
 F VAFC=1:1 X HLNEXT Q:HLQUIT'>0  S SG=$E(HLNODE,1,3) D:$T(@SG)]"" @SG
"RTN","VAFCQRY",8,0)
 S SAVEDFN=$G(DFN)
"RTN","VAFCQRY",9,0)
 D CHKID^VAFCQRY2(.ICN,.SSN,.DFN)
"RTN","VAFCQRY",10,0)
 I $G(DFN)'>0 D
"RTN","VAFCQRY",11,0)
 . ;**863 MVI_2352 if merged send back merged record info for update
"RTN","VAFCQRY",12,0)
 . I SAVEDFN,$D(^DPT(SAVEDFN,-9)) D  Q
"RTN","VAFCQRY",13,0)
 .. N DFN,ICN
"RTN","VAFCQRY",14,0)
 .. S DFN=^DPT(SAVEDFN,-9),ICN=$$GETICN^MPIF001(+DFN)
"RTN","VAFCQRY",15,0)
 .. S VAFCER="-1^New Primary record "_DFN_" at site with ICN "_ICN
"RTN","VAFCQRY",16,0)
 . S VAFCER="-1^Unknown ICN#"_$G(ICN)_" and SSN#"_$G(SSN)
"RTN","VAFCQRY",17,0)
 S ^TMP("HLA",$J,VAFCCNT)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_HL("FS")_$S(+$G(VAFCER)'>0:$P(VAFCER,"^",2),1:""),VAFCCNT=VAFCCNT+1
"RTN","VAFCQRY",18,0)
 S ^TMP("HLA",$J,VAFCCNT)=VAFCQRD,VAFCCNT=VAFCCNT+1
"RTN","VAFCQRY",19,0)
 I $G(VAFCER)>0 D BLDRSP(DFN,.VAFCCNT)
"RTN","VAFCQRY",20,0)
 D LINK^HLUTIL3(SITE,.VAFC) S IEN=$O(VAFC(0)) S HLL("LINKS",1)="^"_VAFC(IEN)
"RTN","VAFCQRY",21,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"GM",1,.HLRESLTA,"",.HL)
"RTN","VAFCQRY",22,0)
 K VAFCER,VAFCID,COMP,SITE,VAFCFS,VAFCRCV,VAFCQRD,^TMP("HLA",$J)
"RTN","VAFCQRY",23,0)
 Q
"RTN","VAFCQRY",24,0)
RESP ;Response processing initiated from the MPI.
"RTN","VAFCQRY",25,0)
 Q
"RTN","VAFCQRY",26,0)
ROUTE ;Routine logic initiated from the MPI.
"RTN","VAFCQRY",27,0)
 Q
"RTN","VAFCQRY",28,0)
BLDRSP(DFN,VAFCCNT) ;
"RTN","VAFCQRY",29,0)
 N EVN,PID,PD1,SEQ,ERR,CNT,X,PV2,RADE,LABE,PRES
"RTN","VAFCQRY",30,0)
 ;construct EVN (for TF Event Type AND Last Treatment Date)
"RTN","VAFCQRY",31,0)
 S SEQ="1,2" D BLDEVN(DFN,.SEQ,.EVN,.HL,"A19",.ERR) S ^TMP("HLA",$J,VAFCCNT)=EVN(1) S VAFCCNT=VAFCCNT+1
"RTN","VAFCQRY",32,0)
 ;construct PID
"RTN","VAFCQRY",33,0)
 S SEQ="ALL" D BLDPID(DFN,1,.SEQ,.PID,.HL,.ERR) S ^TMP("HLA",$J,VAFCCNT)=PID(1) S X=1,CNT=1 F  S X=$O(PID(X)) Q:'X  I $D(PID(X)) S ^TMP("HLA",$J,VAFCCNT,CNT)=PID(X),CNT=CNT+1
"RTN","VAFCQRY",34,0)
 S VAFCCNT=VAFCCNT+1
"RTN","VAFCQRY",35,0)
 ;construct PD1 **707
"RTN","VAFCQRY",36,0)
 ;S SEQ="3" D BLDPD1(DFN,.SEQ,.PD1,.HL,.ERR) S ^TMP("HLA",$J,VAFCCNT)=PD1(1)
"RTN","VAFCQRY",37,0)
 S PD1=$$PD1^VAFCSB I PD1'="" S ^TMP("HLA",$J,VAFCCNT)=PD1,VAFCCNT=VAFCCNT+1 ;**707
"RTN","VAFCQRY",38,0)
 S PV1=$$PV1^VAFCSB I PV1'="" S ^TMP("HLA",$J,VAFCCNT)=PV1,VAFCCNT=VAFCCNT+1 ;**707
"RTN","VAFCQRY",39,0)
 S PV2=$$PV2^VAFCSB I PV2'="" S ^TMP("HLA",$J,VAFCCNT)=PV2,VAFCCNT=VAFCCNT+1 ;**707
"RTN","VAFCQRY",40,0)
 S PRES=$$PHARA^VAFCSB I PRES'="" S ^TMP("HLA",$J,VAFCCNT)=PRES,VAFCCNT=VAFCCNT+1 ;**707
"RTN","VAFCQRY",41,0)
 S LABE=$$LABE^VAFCSB I LABE'="" S ^TMP("HLA",$J,VAFCCNT)=LABE,VAFCCNT=VAFCCNT+1 ;**707
"RTN","VAFCQRY",42,0)
 S RADE=$$RADE^VAFCSB I RADE'="" S ^TMP("HLA",$J,VAFCCNT)=RADE,VAFCCNT=VAFCCNT+1 ;**707
"RTN","VAFCQRY",43,0)
 ;** PATCH 575
"RTN","VAFCQRY",44,0)
 ;construct ZPD segment
"RTN","VAFCQRY",45,0)
 S SEQ="1,17,21,34" ;**707 Added 1, 21 and 34 to ZPD fields
"RTN","VAFCQRY",46,0)
 S ^TMP("HLA",$J,VAFCCNT)=$$EN1^VAFHLZPD(DFN,SEQ)
"RTN","VAFCQRY",47,0)
 S VAFCCNT=VAFCCNT+1
"RTN","VAFCQRY",48,0)
 Q
"RTN","VAFCQRY",49,0)
MSH ;process MSH segment
"RTN","VAFCQRY",50,0)
 S VAFCFS=HL("FS")
"RTN","VAFCQRY",51,0)
 S HLQ=HL("Q"),HLFS=HL("FS"),HLECH=HL("ECH")
"RTN","VAFCQRY",52,0)
 S VAFCID=HL("MID")
"RTN","VAFCQRY",53,0)
 S COMP=$E(HL("ECH"),1)
"RTN","VAFCQRY",54,0)
 S REP=$E(HL("ECH"),2)
"RTN","VAFCQRY",55,0)
 S SUBCOMP=$E(HL("ECH"),4)
"RTN","VAFCQRY",56,0)
 S SITE=$$LKUP^XUAF4($P($P(HLNODE,HL("FS"),4),COMP))
"RTN","VAFCQRY",57,0)
 Q
"RTN","VAFCQRY",58,0)
QRD ;process QRD segment
"RTN","VAFCQRY",59,0)
 N QRD,X,IDS,WSF,ID,QRDAA,QRDNTC
"RTN","VAFCQRY",60,0)
 S VAFCQRD=HLNODE
"RTN","VAFCQRY",61,0)
 S VAFCRCV=$P(VAFCQRD,HL("FS"),5)
"RTN","VAFCQRY",62,0)
 S IDS=$P(VAFCQRD,HL("FS"),9)
"RTN","VAFCQRY",63,0)
 F X=1:1:$L(IDS,REP) S WSF=$P(IDS,REP,X) D
"RTN","VAFCQRY",64,0)
 . ;get id, assigning authority, and name type code
"RTN","VAFCQRY",65,0)
 . S ID=$P(WSF,COMP),QRDAA=$P($P(WSF,COMP,9),SUBCOMP),QRDNTC=$P(WSF,COMP,10)
"RTN","VAFCQRY",66,0)
 . ;check assigning authority(0363) AND name type code(0203)
"RTN","VAFCQRY",67,0)
 . I QRDAA="USVHA" D
"RTN","VAFCQRY",68,0)
 .. I QRDNTC="NI" S ICN=ID  ;National unique individual identifier
"RTN","VAFCQRY",69,0)
 .. I QRDNTC="PI" S DFN=ID  ;Patient internal identifier
"RTN","VAFCQRY",70,0)
 . I QRDAA="USSSA" D
"RTN","VAFCQRY",71,0)
 .. I QRDNTC="SS" S SSN=ID  ;Social Security number
"RTN","VAFCQRY",72,0)
 Q
"RTN","VAFCQRY",73,0)
BLDEVN(DFN,SEQ,EVN,HL,EVR,ERR) ;build EVN for TF last treatment date and event reason
"RTN","VAFCQRY",74,0)
 ; At this point only sequence one and two are supported
"RTN","VAFCQRY",75,0)
 ; Variable list
"RTN","VAFCQRY",76,0)
 ;  DFN - internal PATIENT (#2) number
"RTN","VAFCQRY",77,0)
 ;  SEQ - variable consisting of sequence numbers delimited by commas
"RTN","VAFCQRY",78,0)
 ;        that will be used to build the message
"RTN","VAFCQRY",79,0)
 ;  EVN (passed by reference) - array location to place EVN segment result, the array can have existing values when passed.
"RTN","VAFCQRY",80,0)
 ;   HL - array that contains the necessary HL variables (init^hlsub)
"RTN","VAFCQRY",81,0)
 ;  EVR - event reason that triggered this message
"RTN","VAFCQRY",82,0)
 ;  ERR - array that is used to return an error
"RTN","VAFCQRY",83,0)
 ;
"RTN","VAFCQRY",84,0)
 D BLDEVN^VAFCQRY2(DFN,SEQ,.EVN,.HL,EVR,.ERR)
"RTN","VAFCQRY",85,0)
 Q
"RTN","VAFCQRY",86,0)
BLDPD1(DFN,SEQ,PD1,HL,ERR) ;
"RTN","VAFCQRY",87,0)
 ; At this point only sequence 3 is supported
"RTN","VAFCQRY",88,0)
 ; Variable list
"RTN","VAFCQRY",89,0)
 ;  DFN - internal PATIENT (#2) number
"RTN","VAFCQRY",90,0)
 ;  SEQ - variable consisting of sequence numbers delimited by commas
"RTN","VAFCQRY",91,0)
 ;        that will be used to build the message
"RTN","VAFCQRY",92,0)
 ;  PD1 (passed by reference) - array location to place PD1 segment result, the array can have existing values when passed.
"RTN","VAFCQRY",93,0)
 ;   HL - array that contains the necessary HL variables (init^hlsub)
"RTN","VAFCQRY",94,0)
 ;  ERR - array that is used to return an error
"RTN","VAFCQRY",95,0)
 ;
"RTN","VAFCQRY",96,0)
 D BLDPD1^VAFCQRY2(DFN,SEQ,.PD1,.HL,.ERR)
"RTN","VAFCQRY",97,0)
 Q
"RTN","VAFCQRY",98,0)
BLDPID(DFN,CNT,SEQ,PID,HL,ERR) ;build PID from File #2
"RTN","VAFCQRY",99,0)
 ;The required sequences 3 and 5 will be returned and at this point
"RTN","VAFCQRY",100,0)
 ;sequences 1-3,5-8,10-14,16,17,19,22-24 and 29 are supported
"RTN","VAFCQRY",101,0)
 ;
"RTN","VAFCQRY",102,0)
 ; At this point only sequence one and two are supported
"RTN","VAFCQRY",103,0)
 ; Variable list
"RTN","VAFCQRY",104,0)
 ;  DFN - internal PATIENT (#2) number
"RTN","VAFCQRY",105,0)
 ;  CNT - value to be place in PID seq#1 (SET ID)
"RTN","VAFCQRY",106,0)
 ;  SEQ - variable consisting of sequence numbers delimited by commas
"RTN","VAFCQRY",107,0)
 ;        that will be used to build the message
"RTN","VAFCQRY",108,0)
 ;  PID (passed by reference) - array location to place PID segment
"RTN","VAFCQRY",109,0)
 ;        result, the array can have existing values when passed.
"RTN","VAFCQRY",110,0)
 ;   HL - array that contains the necessary HL variables (init^hlsub)
"RTN","VAFCQRY",111,0)
 ;  ERR - array that is used to return an error
"RTN","VAFCQRY",112,0)
 ;
"RTN","VAFCQRY",113,0)
 ;if this is a mismatch a null or """" should be passed in, so that
"RTN","VAFCQRY",114,0)
 ;the ICN will be removed at the site
"RTN","VAFCQRY",115,0)
 ;
"RTN","VAFCQRY",116,0)
 D BLDPID^VAFCQRY1(DFN,CNT,SEQ,.PID,.HL,.ERR)
"RTN","VAFCQRY",117,0)
 Q
"RTN","VAFCTFIN")
0^7^B88224954^B87975194
"RTN","VAFCTFIN",1,0)
VAFCTFIN ;BIR/DR-TREATING FACILTIY MFU PROCESSING ROUTINE ; 1/13/12 5:47pm
"RTN","VAFCTFIN",2,0)
 ;;5.3;Registration;**428,474,520,639,707,800,821,837,863**;Aug 13, 1993;Build 2
"RTN","VAFCTFIN",3,0)
 ;Reference to EXC, START, and STOP^RGHLLOG supported by IA #2796
"RTN","VAFCTFIN",4,0)
 ;
"RTN","VAFCTFIN",5,0)
IN ;This entry point is used to process the Treating Facility Master File Update Message.
"RTN","VAFCTFIN",6,0)
 ;It is called by the VAFC MFN-M05 CLIENT processing routine when a MFN
"RTN","VAFCTFIN",7,0)
 ;message is received.
"RTN","VAFCTFIN",8,0)
 ;There are no inputs or outputs
"RTN","VAFCTFIN",9,0)
 ;
"RTN","VAFCTFIN",10,0)
 ;Initial check whether incoming MFN message is old format or new. If it is old format, go to old routine (VAFCOFIN) to process.  **821
"RTN","VAFCTFIN",11,0)
 I HL("MTN")="MFK" D RSP Q
"RTN","VAFCTFIN",12,0)
 N VAFC,SG,MSG
"RTN","VAFCTFIN",13,0)
 F VAFCI=1:1 X HLNEXT Q:HLQUIT'>0  I $E(HLNODE,1,3)="MFE" S MSG=HLNODE
"RTN","VAFCTFIN",14,0)
 I $P($G(MSG),"^",3)'["-" D IN^VAFCOFIN Q
"RTN","VAFCTFIN",15,0)
 K VAFCI,HLNODE,SG,HLQUIT,HLDONE,MSG
"RTN","VAFCTFIN",16,0)
 S HLQUIT=0
"RTN","VAFCTFIN",17,0)
 ;
"RTN","VAFCTFIN",18,0)
 N VAFC,STATN,VAFCI,MSG,SG,VAFCARR,PDFN,INST,MFUPT,PDLT,TFIEN
"RTN","VAFCTFIN",19,0)
 N ICN,MFI,MFE,MFA,HLCOMP,CNT,X,VAFCERR,VAFCX,VAFCJ
"RTN","VAFCTFIN",20,0)
 ;quit if Master Patient Index (MPI) is not installed
"RTN","VAFCTFIN",21,0)
 S X="MPIF001" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFIN",22,0)
 S X="MPIFQ0" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFIN",23,0)
 S X="RGRSBUL1" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFIN",24,0)
 S X="RGRSBULL" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFIN",25,0)
INIT ;Process in the Treating Facility MFN msg
"RTN","VAFCTFIN",26,0)
 ;**837 - MVI_791 (ckn)
"RTN","VAFCTFIN",27,0)
 ;F VAFCI=1:1 X HLNEXT Q:HLQUIT'>0  S (MSG,VAFC(VAFCI))=HLNODE,SG=$E(HLNODE,1,3) D:SG?2A1(1A,1N) PICK
"RTN","VAFCTFIN",28,0)
 F VAFCI=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","VAFCTFIN",29,0)
 .K MSG S MSG=HLNODE
"RTN","VAFCTFIN",30,0)
 .S VAFCJ=0 F  S VAFCJ=$O(HLNODE(VAFCJ)) Q:'VAFCJ  S MSG(VAFCJ)=HLNODE(VAFCJ)
"RTN","VAFCTFIN",31,0)
 .S SG=$E(HLNODE,1,3)
"RTN","VAFCTFIN",32,0)
 .I SG="MFE" D MFE(.MSG) Q
"RTN","VAFCTFIN",33,0)
 .D PICK
"RTN","VAFCTFIN",34,0)
 ;reconcil the inbound TF list from the MPI to the local TF list
"RTN","VAFCTFIN",35,0)
 D RECONCIL
"RTN","VAFCTFIN",36,0)
 ;create response message
"RTN","VAFCTFIN",37,0)
 S CNT=1
"RTN","VAFCTFIN",38,0)
 S HLA("HLA",1)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_HL("FS") S CNT=CNT+1
"RTN","VAFCTFIN",39,0)
 S HLA("HLA",CNT)=MFI S CNT=CNT+1
"RTN","VAFCTFIN",40,0)
 ;S VAFCX=0 F  S VAFCX=$O(MFE(VAFCX)) Q:'VAFCX  S HLA("HLA",CNT)=MFE(VAFCX),CNT=CNT+1,HLA("HLA",CNT)=MFA(VAFCX),CNT=CNT+1
"RTN","VAFCTFIN",41,0)
 ;S VAFCX=0 F  S VAFCX=$O(MFE(VAFCX)) Q:'VAFCX  D
"RTN","VAFCTFIN",42,0)
 ;. S VAFCN=0 F  S VAFCN=$O(MFE(VAFCX,VAFCN)) Q:'VAFCN  D
"RTN","VAFCTFIN",43,0)
 ;.. S HLA("HLA",CNT)=MFE(VAFCX,VAFCN),CNT=CNT+1,HLA("HLA",CNT)=MFA(VAFCX,VAFCN),CNT=CNT+1
"RTN","VAFCTFIN",44,0)
 ;**837 - MVI_791 (ckn)
"RTN","VAFCTFIN",45,0)
 S VAFCX=0 F  S VAFCX=$O(MFE(VAFCX)) Q:'VAFCX  D
"RTN","VAFCTFIN",46,0)
 . S VAFCN=0 F  S VAFCN=$O(MFE(VAFCX,VAFCN)) Q:'VAFCN  D
"RTN","VAFCTFIN",47,0)
 .. S ZCNT=0 F  S ZCNT=$O(MFE(VAFCX,VAFCN,ZCNT)) Q:'ZCNT  D
"RTN","VAFCTFIN",48,0)
 ... I ZCNT=1 S HLA("HLA",CNT)=MFE(VAFCX,VAFCN,ZCNT)
"RTN","VAFCTFIN",49,0)
 ... I ZCNT>1 S HLA("HLA",CNT,ZCNT-1)=MFE(VAFCX,VAFCN,ZCNT)
"RTN","VAFCTFIN",50,0)
 ...; S HLA("HLA",CNT)=MFE(VAFCX,VAFCN,ZCNT),CNT=CNT+1
"RTN","VAFCTFIN",51,0)
 .. S CNT=CNT+1
"RTN","VAFCTFIN",52,0)
 .. S HLA("HLA",CNT)=MFA(VAFCX,VAFCN),CNT=CNT+1
"RTN","VAFCTFIN",53,0)
 ;generate an application level ack (MFK) identifying the status of the adds/edits/deletes of TF's passed in
"RTN","VAFCTFIN",54,0)
 D ROUTE
"RTN","VAFCTFIN",55,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.VAFCERR,"",.HLP)
"RTN","VAFCTFIN",56,0)
 Q
"RTN","VAFCTFIN",57,0)
PICK ;check routine for segment entry point
"RTN","VAFCTFIN",58,0)
 I $T(@SG)]"" D @SG
"RTN","VAFCTFIN",59,0)
 I $T(@SG)="" Q
"RTN","VAFCTFIN",60,0)
 Q
"RTN","VAFCTFIN",61,0)
MSH ;;MSH
"RTN","VAFCTFIN",62,0)
 ;process the MSH segment
"RTN","VAFCTFIN",63,0)
 S (HLFS,HL("FS"))=$E(MSG,4),(HLECH,HL("ECH"))=$E(MSG,5,8)
"RTN","VAFCTFIN",64,0)
 S HLCOMP=$E(HL("ECH"),1)
"RTN","VAFCTFIN",65,0)
 S VAFCARR("SENDING SITE")=$P(MSG,HL("FS"),4)
"RTN","VAFCTFIN",66,0)
 Q
"RTN","VAFCTFIN",67,0)
EVN ;;EVN
"RTN","VAFCTFIN",68,0)
 ;process the EVN segment
"RTN","VAFCTFIN",69,0)
 S STATN=+$$SITE^VASITE()_"^"_$$FMDATE^HLFNC($P(MSG,HL("FS"),3))
"RTN","VAFCTFIN",70,0)
 Q
"RTN","VAFCTFIN",71,0)
PID ;;PID
"RTN","VAFCTFIN",72,0)
 ;process the PID segment
"RTN","VAFCTFIN",73,0)
 S PDFN=+$P(MSG,HL("FS"),4)
"RTN","VAFCTFIN",74,0)
 Q
"RTN","VAFCTFIN",75,0)
MFI ;;MFI
"RTN","VAFCTFIN",76,0)
 ;process the MFI segment
"RTN","VAFCTFIN",77,0)
 S MFI=MSG
"RTN","VAFCTFIN",78,0)
 S MFUPT=$P(MSG,HL("FS"),4)
"RTN","VAFCTFIN",79,0)
 S VAFCARR("CMOR")=$P($P(MSG,HL("FS"),8),$E(HL("ECH"),1))
"RTN","VAFCTFIN",80,0)
 Q
"RTN","VAFCTFIN",81,0)
MFE(MSG) ;;MFE
"RTN","VAFCTFIN",82,0)
 ;process the MFE segment
"RTN","VAFCTFIN",83,0)
 N HLCOMP,NXTSGMT,TYPE,REP,MFE4,DFNATST,IDENSTAT
"RTN","VAFCTFIN",84,0)
 ;**837 - MVI_791 (ckn)
"RTN","VAFCTFIN",85,0)
 N LNGTH,SUBCOMP,TMFE,SEQ,SEQ1,X,NXT,Y,LNGTH2,LNGTH1
"RTN","VAFCTFIN",86,0)
 N LASTID,IDCNT,X,IDS,ACNT,AA,IDTYP,AATYP,MCNT,MFE5
"RTN","VAFCTFIN",87,0)
 S HLCOMP=$E(HL("ECH"),1),REP=$E(HL("ECH"),2),SUBCOMP=$E(HL("ECH"),4)
"RTN","VAFCTFIN",88,0)
 S LNGTH=$L(MSG,HL("FS")) F SEQ=1:1:LNGTH S TMFE(SEQ)=$P(MSG,HL("FS"),SEQ)
"RTN","VAFCTFIN",89,0)
 S SEQ1=1,X=0 F  S X=$O(MSG(X)) Q:'X  S LNGTH=$L(MSG(X),HL("FS")) D
"RTN","VAFCTFIN",90,0)
 . F Y=1:1:LNGTH S:Y'=1 SEQ=SEQ+1 D
"RTN","VAFCTFIN",91,0)
 .. S NXT=$P(MSG(X),HL("FS"),Y) D
"RTN","VAFCTFIN",92,0)
 ... I $L($G(TMFE(SEQ)))=245 D  Q
"RTN","VAFCTFIN",93,0)
 .... I $L(NXT_$G(TMFE(SEQ,SEQ1)))>245 S LNGTH1=$L(TMFE(SEQ,SEQ1)) S LNGTH2=245-LNGTH1,TMFE(SEQ,SEQ1)=$G(TMFE(SEQ,SEQ1))_$E(NXT,1,LNGTH2),LNGTH2=LNGTH2+1,NXT=$E(NXT,LNGTH2,$L(NXT)),SEQ1=SEQ1+1
"RTN","VAFCTFIN",94,0)
 .... I $L(NXT_$G(TMFE(SEQ,SEQ1)))'>245 S TMFE(SEQ,SEQ1)=$G(TMFE(SEQ,SEQ1))_NXT
"RTN","VAFCTFIN",95,0)
 ... I $L(NXT_$G(TMFE(SEQ)))>245 S LNGTH1=$L($G(TMFE(SEQ))) S LNGTH2=245-LNGTH1,TMFE(SEQ)=$G(TMFE(SEQ))_$E(NXT,1,LNGTH2),LNGTH2=LNGTH2+1,NXT=$E(NXT,LNGTH2,$L(NXT)) S TMFE(SEQ,SEQ1)=NXT
"RTN","VAFCTFIN",96,0)
 ... I $L(NXT_$G(TMFE(SEQ)))'>245 S TMFE(SEQ)=$G(TMFE(SEQ))_NXT Q
"RTN","VAFCTFIN",97,0)
 S MFE5=$G(TMFE(5))
"RTN","VAFCTFIN",98,0)
 S LASTID=$L(MFE5,REP),IDCNT=1,ACNT=0
"RTN","VAFCTFIN",99,0)
 F X=1:1:LASTID S ACNT=ACNT+1,IDS(ACNT)=$P(MFE5,REP,X) D
"RTN","VAFCTFIN",100,0)
 .;if this is the last entry check for an extension of the message and reset the key variables
"RTN","VAFCTFIN",101,0)
 .I X=LASTID I $D(TMFE(5,IDCNT)) D
"RTN","VAFCTFIN",102,0)
 ..S IDS(ACNT)=IDS(ACNT)_$P(TMFE(5,IDCNT),REP)
"RTN","VAFCTFIN",103,0)
 ..S MFE5=$P(TMFE(5,IDCNT),REP,2,99) I MFE5="" Q
"RTN","VAFCTFIN",104,0)
 ..S IDCNT=IDCNT+1,X=0,LASTID=$L(MFE5,REP)
"RTN","VAFCTFIN",105,0)
 S PDLT=$$FMDATE^HLFNC($G(TMFE(4)))
"RTN","VAFCTFIN",106,0)
 S INST=$P($G(TMFE(3)),"-")
"RTN","VAFCTFIN",107,0)
 S ZCNT=$P($G(TMFE(3)),"-",2)
"RTN","VAFCTFIN",108,0)
 S TYPE=$G(TMFE(2))
"RTN","VAFCTFIN",109,0)
 S IDENSTAT=$S(TYPE="MDC":"H",1:"A")
"RTN","VAFCTFIN",110,0)
 S ICN=$P($G(IDS(1)),HLCOMP)
"RTN","VAFCTFIN",111,0)
 S AATYP=$P($P($G(IDS(2)),HLCOMP,4),SUBCOMP,3)
"RTN","VAFCTFIN",112,0)
 S AA=$S(AATYP="ISO":$P($P($G(IDS(2)),HLCOMP,4),SUBCOMP,2),1:$P($P($G(IDS(2)),HLCOMP,4),SUBCOMP))
"RTN","VAFCTFIN",113,0)
 S IDTYP=$P($G(IDS(2)),HLCOMP,5)
"RTN","VAFCTFIN",114,0)
 ;We do not have facility to map ID type from OID in VistA so default "NI" value to Id type if site is 200N*
"RTN","VAFCTFIN",115,0)
 I $E(INST,1,4)="200N",AATYP="ISO" S IDTYP="NI"
"RTN","VAFCTFIN",116,0)
 S DFNATST=$P($G(IDS(2)),HLCOMP)
"RTN","VAFCTFIN",117,0)
 S MFE(INST,ZCNT,1)=MSG
"RTN","VAFCTFIN",118,0)
 I $D(MSG(1)) D
"RTN","VAFCTFIN",119,0)
 .S MCNT=0 F  S MCNT=$O(MSG(MCNT)) Q:+MCNT=0  S MFE(INST,ZCNT,MCNT+1)=MSG(MCNT)
"RTN","VAFCTFIN",120,0)
 S MFI(ICN,INST,ZCNT)=PDLT_"^^"_TYPE_"^^^^"_DFNATST_"^"_IDENSTAT_"^"_AA_"^"_IDTYP
"RTN","VAFCTFIN",121,0)
 Q
"RTN","VAFCTFIN",122,0)
ZET ;;ZET
"RTN","VAFCTFIN",123,0)
 ;process Patient's Date Last Treated Event Type, ZET segment
"RTN","VAFCTFIN",124,0)
 N PDLTET,IPP
"RTN","VAFCTFIN",125,0)
 S PDLTET=$P(MSG,HL("FS"),2)
"RTN","VAFCTFIN",126,0)
 S $P(MFI(ICN,INST,ZCNT),"^",2)=PDLTET
"RTN","VAFCTFIN",127,0)
 ;DG*5.3*800 - Process In-Person Proofed
"RTN","VAFCTFIN",128,0)
 S IPP=$P(MSG,HL("FS"),3) ;In-Person Proofed
"RTN","VAFCTFIN",129,0)
 S $P(MFI(ICN,INST,ZCNT),"^",6)=IPP
"RTN","VAFCTFIN",130,0)
 Q
"RTN","VAFCTFIN",131,0)
RSP ;response process logic entry point
"RTN","VAFCTFIN",132,0)
 Q
"RTN","VAFCTFIN",133,0)
ROUTE ;routing logic entry point
"RTN","VAFCTFIN",134,0)
 N MPI
"RTN","VAFCTFIN",135,0)
 S MPI=$$MPILINK^MPIFAPI() D
"RTN","VAFCTFIN",136,0)
 .I $P($G(MPI),U)'=-1 S HLL("LINKS",1)="VAFC MFN-M05 CLIENT"_"^"_MPI
"RTN","VAFCTFIN",137,0)
 .I $P($G(MPI),U)=-1 D
"RTN","VAFCTFIN",138,0)
 .. N RGLOG D START^RGHLLOG(HLMTIEN,"","")
"RTN","VAFCTFIN",139,0)
 .. D EXC^RGHLLOG(224,"No MPI link identified in CIRN SITE PARAMETER file (#991.8)",$G(PDFN))
"RTN","VAFCTFIN",140,0)
 .. D STOP^RGHLLOG(0)
"RTN","VAFCTFIN",141,0)
 Q
"RTN","VAFCTFIN",142,0)
TEST ;
"RTN","VAFCTFIN",143,0)
 W $$REPROC^HLUTIL(39266,"D IN^VAFCTFIN")
"RTN","VAFCTFIN",144,0)
 Q
"RTN","VAFCTFIN",145,0)
RECONCIL ;
"RTN","VAFCTFIN",146,0)
 N DFN,MFIC,VAFCX,VAFCY,TFL,CNFLT,LOCCMOR,VAFCTYPE,VAFCN,IDSTAT,SID
"RTN","VAFCTFIN",147,0)
 S CNFLT=0
"RTN","VAFCTFIN",148,0)
 S DFN=$$GETDFN^MPIF001(ICN)
"RTN","VAFCTFIN",149,0)
 I DFN'>0 S CNFLT=1_"^"_$P($G(DFN),"^",2)
"RTN","VAFCTFIN",150,0)
 ;CHANGED TFL^VAFCTFU1 to TFL^VAFCTFU3 to get ALL tf entries
"RTN","VAFCTFIN",151,0)
 I MFUPT="REP" I +CNFLT=0 D TFL^VAFCTFU3(.TFL,DFN) S VAFCX=0 F  S VAFCX=$O(TFL(VAFCX)) Q:'VAFCX  D
"RTN","VAFCTFIN",152,0)
 .; S MFIC($P(TFL(VAFCX),"^"))=TFL(VAFCX) I '$D(MFI(ICN,$P(TFL(VAFCX),"^"))) D DEL(ICN,$P(TFL(VAFCX),"^"))
"RTN","VAFCTFIN",153,0)
 . N EXTFIEN,STIEN,STEXT
"RTN","VAFCTFIN",154,0)
 . S MFIC($P(TFL(VAFCX),"^"))=TFL(VAFCX),STIEN=$$LKUP^XUAF4($P(TFL(VAFCX),"^")),STEXT=$P(TFL(VAFCX),"^")
"RTN","VAFCTFIN",155,0)
 . S EXTFIEN=0 F  S EXTFIEN=$O(^DGCN(391.91,"APAT",DFN,STIEN,EXTFIEN)) Q:+EXTFIEN=0  D
"RTN","VAFCTFIN",156,0)
 . . N NODE0,NODE2,EXIDTYP,EXAA,EXSID,EXIDST,ZCNT,MATCH
"RTN","VAFCTFIN",157,0)
 . .; Existing AA, ID type, Source ID, Identifier Status
"RTN","VAFCTFIN",158,0)
 . . S NODE0=$G(^DGCN(391.91,EXTFIEN,0)),NODE2=$G(^DGCN(391.91,EXTFIEN,2))
"RTN","VAFCTFIN",159,0)
 . . S EXIDTYP=$P(NODE0,"^",9),EXAA=$P(NODE2,"^"),EXSID=$P(NODE2,"^",2),EXIDST=$P(NODE2,"^",3)
"RTN","VAFCTFIN",160,0)
 . . ;Loop through MFI (incoming data) and compare the values
"RTN","VAFCTFIN",161,0)
 . . S ZCNT=0,MATCH=0 F  S ZCNT=$O(MFI(ICN,STEXT,ZCNT)) Q:+ZCNT=0!(MATCH)  D
"RTN","VAFCTFIN",162,0)
 . . . N TMPNODE,INIDST,INAA,INIDTYP,INSID
"RTN","VAFCTFIN",163,0)
 . . . S TMPNODE=$G(MFI(ICN,STEXT,ZCNT))
"RTN","VAFCTFIN",164,0)
 . . . S INSID=$P(TMPNODE,"^",7),INIDST=$P(TMPNODE,"^",8),INAA=$P(TMPNODE,"^",9),INIDTYP=$P(TMPNODE,"^",10)
"RTN","VAFCTFIN",165,0)
 . . . I INSID=EXSID,INIDST=EXIDST,INAA=EXAA,INIDTYP=EXIDTYP S MATCH=1 Q
"RTN","VAFCTFIN",166,0)
 . . . I 'MATCH,$E(STEXT,1,4)="200N" D  ;For 200N* only check Source ID and Idtype if no match for all matching criteria
"RTN","VAFCTFIN",167,0)
 . . . . I INSID=EXSID,INIDTYP=EXIDTYP S MATCH=1
"RTN","VAFCTFIN",168,0)
 . . I 'MATCH S DELTFARR(EXTFIEN)=""
"RTN","VAFCTFIN",169,0)
 . I $D(DELTFARR) S DTIEN=0 F  S DTIEN=$O(DELTFARR(DTIEN)) Q:+DTIEN=0  D DEL(ICN,STEXT,DTIEN)
"RTN","VAFCTFIN",170,0)
 . K DELTFARR
"RTN","VAFCTFIN",171,0)
 ;VAFCX=ICN and VAFCY=INSTITUTION
"RTN","VAFCTFIN",172,0)
 S VAFCX=0 F  S VAFCX=$O(MFI(VAFCX)) Q:'VAFCX  D
"RTN","VAFCTFIN",173,0)
 . S VAFCY=0 F  S VAFCY=$O(MFI(VAFCX,VAFCY)) Q:'VAFCY  D
"RTN","VAFCTFIN",174,0)
 .. S VAFCN=0 F  S VAFCN=$O(MFI(VAFCX,VAFCY,VAFCN)) Q:'VAFCN  D
"RTN","VAFCTFIN",175,0)
 ... S VAFCTYPE=$P(MFI(VAFCX,VAFCY,VAFCN),"^",3)
"RTN","VAFCTFIN",176,0)
 ... S SID=$P(MFI(VAFCX,VAFCY,VAFCN),"^",7)
"RTN","VAFCTFIN",177,0)
 ... S IDSTAT=$P(MFI(VAFCX,VAFCY,VAFCN),"^",8)
"RTN","VAFCTFIN",178,0)
 ...;**837 - MVI_791 (ckn)
"RTN","VAFCTFIN",179,0)
 ... S AA=$P(MFI(VAFCX,VAFCY,VAFCN),"^",9),IDTYP=$P(MFI(VAFCX,VAFCY,VAFCN),"^",10)
"RTN","VAFCTFIN",180,0)
 ... I +CNFLT=1 D
"RTN","VAFCTFIN",181,0)
 ....S MFA(VAFCY,VAFCN)="MFA"_HL("FS")_VAFCTYPE_HL("FS")_VAFCY_"-"_VAFCN_HL("FS")_$$HLDATE^HLFNC($$NOW^XLFDT)_HL("FS")_"U"_HLCOMP_$S(VAFCTYPE="MDL":"Delete of ",1:"Update of ")
"RTN","VAFCTFIN",182,0)
 ....S MFA(VAFCY,VAFCN)=$G(MFA(VAFCY,VAFCN))_VAFCY_" Failed at "_$P($$SITE^VASITE,"^",3)_" due to "_$P(CNFLT,"^",2)
"RTN","VAFCTFIN",183,0)
 ... I +CNFLT=0 I VAFCTYPE="MAD"!(VAFCTYPE="MUP")!(VAFCTYPE="MDC") D ADDUPD(DFN,VAFCY,$P(MFI(VAFCX,VAFCY,VAFCN),"^"),$P(MFI(VAFCX,VAFCY,VAFCN),"^",2),$P(MFI(VAFCX,VAFCY,VAFCN),"^",6),$G(SID),$G(IDSTAT),VAFCN,VAFCTYPE,AA,IDTYP)
"RTN","VAFCTFIN",184,0)
 ...; I +CNFLT=0 I VAFCTYPE="MDL" D DEL(ICN,VAFCY,VAFCN)
"RTN","VAFCTFIN",185,0)
 ... I +CNFLT=0 I VAFCTYPE="MDL" D
"RTN","VAFCTFIN",186,0)
 .... N EXTFIEN,STIEN
"RTN","VAFCTFIN",187,0)
 .... S STIEN=$$LKUP^XUAF4(VAFCY)
"RTN","VAFCTFIN",188,0)
 .... S EXTFIEN=0 F  S EXTFIEN=$O(^DGCN(391.91,"APAT",DFN,STIEN,EXTFIEN)) Q:+EXTFIEN=0  D
"RTN","VAFCTFIN",189,0)
 ..... N NODE0,NODE2,EXIDTYP,EXAA,EXSID,EXIDST
"RTN","VAFCTFIN",190,0)
 .....; Existing AA, ID type, Source ID, Identifier Status
"RTN","VAFCTFIN",191,0)
 ..... S NODE0=$G(^DGCN(391.91,EXTFIEN,0)),NODE2=$G(^DGCN(391.91,EXTFIEN,2))
"RTN","VAFCTFIN",192,0)
 ..... S EXIDTYP=$P(NODE0,"^",9),EXAA=$P(NODE2,"^"),EXSID=$P(NODE2,"^",2),EXIDST=$P(NODE2,"^",3)
"RTN","VAFCTFIN",193,0)
 ..... I EXIDTYP=IDTYP,EXAA=AA,EXSID=SID,EXIDST=IDSTAT D DEL(ICN,VAFCY,EXTFIEN) Q
"RTN","VAFCTFIN",194,0)
 ..... I $E(VAFCY,1,4)="200N" D  ;Check only Source iD and IdType for 200N*
"RTN","VAFCTFIN",195,0)
 ...... I EXIDTYP=IDTYP,EXSID=SID D DEL(ICN,VAFCY,EXTFIEN)
"RTN","VAFCTFIN",196,0)
 Q
"RTN","VAFCTFIN",197,0)
ADDUPD(DFN,INST,PDLT,PDLRTET,IPP,DFNATST,IDENSTAT,ZCNT,VAFCTYPE,AA,IDTYP) ;add or update TF entry
"RTN","VAFCTFIN",198,0)
 N ERROR,STA
"RTN","VAFCTFIN",199,0)
 S STA=INST
"RTN","VAFCTFIN",200,0)
 S INST=$$LKUP^XUAF4(INST)
"RTN","VAFCTFIN",201,0)
 I INST=0 S ERROR(STA)="Update of "_STA_" Failed at "_$P($$SITE^VASITE,"^",3)_" due to unknown Institution IEN "_INST_" passed into TF update."
"RTN","VAFCTFIN",202,0)
 I '$D(ERROR(STA)) D FILE^VAFCTFU(DFN,INST_"^"_$G(PDLT)_"^"_$G(PDLRTET),1,1,.ERROR,$G(IPP),DFNATST,IDENSTAT,AA,IDTYP)
"RTN","VAFCTFIN",203,0)
 S MFA(STA,ZCNT)="MFA"_HL("FS")_VAFCTYPE_HL("FS")_STA_"-"_ZCNT_HL("FS")_$$HLDATE^HLFNC($$NOW^XLFDT)_HL("FS")
"RTN","VAFCTFIN",204,0)
 I '$D(ERROR(STA)) S MFA(STA,ZCNT)=MFA(STA,ZCNT)_"S"
"RTN","VAFCTFIN",205,0)
 I $D(ERROR(STA)) S MFA(STA,ZCNT)=MFA(STA,ZCNT)_"U"_HLCOMP_ERROR(STA)_HL("FS")
"RTN","VAFCTFIN",206,0)
 Q
"RTN","VAFCTFIN",207,0)
DEL(ICN,INST,DTIEN) ;delete a TF entry
"RTN","VAFCTFIN",208,0)
 N ERROR,STA
"RTN","VAFCTFIN",209,0)
 S STA=INST
"RTN","VAFCTFIN",210,0)
 S INST=$$LKUP^XUAF4(INST)
"RTN","VAFCTFIN",211,0)
 S ERROR=$$DELETETF^VAFCTFU(ICN,INST,DTIEN)
"RTN","VAFCTFIN",212,0)
 ;**821 - No need to send MFA for entries that are deleted locally
"RTN","VAFCTFIN",213,0)
 ;S MFA(STA,ZCNT)="MFA"_HL("FS")_"MDL"_HL("FS")_STA_"-"_ZCNT_HL("FS")_$$HLDATE^HLFNC($$NOW^XLFDT)_HL("FS")
"RTN","VAFCTFIN",214,0)
 ;I +ERROR'=1 S MFA(STA,ZCNT)=MFA(STA,ZCNT)_"S"
"RTN","VAFCTFIN",215,0)
 ;I +ERROR=1 S MFA(STA,ZCNT)=MFA(STA,ZCNT)_"U"_HLCOMP_"Delete Failed: "_$P(ERROR,"^",2)
"RTN","VAFCTFIN",216,0)
 Q
"RTN","VAFCTFU2")
0^6^B47004597^B47326411
"RTN","VAFCTFU2",1,0)
VAFCTFU2 ;BHM/CMC,CKN-Utilities for the Treating Facility file 391.91, CONTINUED ; 5/23/12 6:25pm
"RTN","VAFCTFU2",2,0)
 ;;5.3;Registration;**821,856,863**;Aug 13, 1993;Build 2
"RTN","VAFCTFU2",3,0)
TFL(LIST,PT) ;for this PT [patient] (either DFN, ICN or EDIPI) return the list of treating facilities
"RTN","VAFCTFU2",4,0)
 ; CALLED FROM RPC VAFC LOCAL GET CORRESPONDINGIDS
"RTN","VAFCTFU2",5,0)
 ; PT values -->
"RTN","VAFCTFU2",6,0)
 ;ICN example:   1008520438V882204^NI^USVHA^200M
"RTN","VAFCTFU2",7,0)
 ;DFN example:   100000511^PI^USVHA^500
"RTN","VAFCTFU2",8,0)
 ;EDIPI example: 852043888^NI^USDOD^200DOD
"RTN","VAFCTFU2",9,0)
 ; 
"RTN","VAFCTFU2",10,0)
 ; Return:
"RTN","VAFCTFU2",11,0)
 ; This will return the ICN and the list of treating facilities in the following.
"RTN","VAFCTFU2",12,0)
 ;
"RTN","VAFCTFU2",13,0)
 ;   format:
"RTN","VAFCTFU2",14,0)
 ;   Id^IdType^AssigningAuthority^AssigningFacility^IdStatus
"RTN","VAFCTFU2",15,0)
 ;
"RTN","VAFCTFU2",16,0)
 ;   Examples:
"RTN","VAFCTFU2",17,0)
 ;   RESULT(1)="1011232151V598646^NI^200M^A"
"RTN","VAFCTFU2",18,0)
 ;   RESULT(2)="7168937^PI^USVHA^500^A"
"RTN","VAFCTFU2",19,0)
 ;   RESULT(3)="852043888^NI^USDOD^200DOD^A"
"RTN","VAFCTFU2",20,0)
 ;
"RTN","VAFCTFU2",21,0)
 N X,ICN,DA,DR,VAFCTFU1,DIC,DIQ,VAFC,DFN,EDIPI,ASSIGN,ID,SITE,TYPE
"RTN","VAFCTFU2",22,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T S LIST(1)="-1^MPI Not Installed" Q
"RTN","VAFCTFU2",23,0)
 ; clear "return" variable
"RTN","VAFCTFU2",24,0)
 K LIST
"RTN","VAFCTFU2",25,0)
 ; what do we have
"RTN","VAFCTFU2",26,0)
 S TYPE=$P(PT,"^",2),SITE=$P(PT,"^",4),ID=$P(PT,"^"),ASSIGN=$P(PT,"^",3)
"RTN","VAFCTFU2",27,0)
 ; check input data
"RTN","VAFCTFU2",28,0)
 I ID']"" S LIST(1)="-1^Id is not defined." Q
"RTN","VAFCTFU2",29,0)
 I TYPE'="NI",TYPE'="PI" S LIST(1)="-1^Invalid Id Type." Q
"RTN","VAFCTFU2",30,0)
 I ASSIGN'="USVHA",ASSIGN'="USDOD" S LIST(1)="-1^Invalid Assigning Authority." Q
"RTN","VAFCTFU2",31,0)
 I SITE']"" S LIST(1)="-1^Missing Assigning Facility." Q
"RTN","VAFCTFU2",32,0)
 ; find the ien for the station number
"RTN","VAFCTFU2",33,0)
 S SITEIEN=$O(^DIC(4,"D",SITE,0))
"RTN","VAFCTFU2",34,0)
 I 'SITEIEN S LIST(1)="-1^Assigning Facility is not defined in database." Q
"RTN","VAFCTFU2",35,0)
 ;
"RTN","VAFCTFU2",36,0)
 I TYPE="PI",ASSIGN="USVHA" S DFN=ID
"RTN","VAFCTFU2",37,0)
 I TYPE="NI",ASSIGN="USVHA",SITE="200M" S ICN=ID
"RTN","VAFCTFU2",38,0)
 I TYPE="NI",ASSIGN="USDOD",SITE="200DOD" S EDIPI=ID
"RTN","VAFCTFU2",39,0)
 I $D(ICN) S DFN=$$GETDFN^MPIF001(ICN) D  Q:$D(LIST(1))
"RTN","VAFCTFU2",40,0)
 . I +DFN<0 S LIST(1)="-1^ICN is not known" Q
"RTN","VAFCTFU2",41,0)
 . S SITEIEN=$$IEN^XUAF4($P($$SITE^VASITE,"^",3))
"RTN","VAFCTFU2",42,0)
 ;
"RTN","VAFCTFU2",43,0)
 I $D(DFN) S ICN=$$GETICN^MPIF001(DFN)
"RTN","VAFCTFU2",44,0)
 ; DFN should be defined, but ICN may not.
"RTN","VAFCTFU2",45,0)
 ; I $D(EDIPI) S ICN=$$GETICN(EDIPI)
"RTN","VAFCTFU2",46,0)
 ; check EDIPI
"RTN","VAFCTFU2",47,0)
 ;I $D(EDIPI),'$D(^DGCN(391.91,"ASCR",EDIPI,SITEIEN)) D  Q
"RTN","VAFCTFU2",48,0)
 ;. S LIST(1)="-1^EDIPI Record is unknown at this facility"
"RTN","VAFCTFU2",49,0)
 ;I $D(EDIPI),$D(^DGCN(391.91,"ASCR",EDIPI,SITEIEN)) D
"RTN","VAFCTFU2",50,0)
 ;.S EN=$O(^DGCN(391.91,"ASCR",EDIPI,SITEIEN,0))
"RTN","VAFCTFU2",51,0)
 ;.S DFN=$P($G(^DGCN(391.91,EN,0)),"^")
"RTN","VAFCTFU2",52,0)
 ;**856 MVI 1371 (ckn)
"RTN","VAFCTFU2",53,0)
 ;Use new xref AISS appropriately to retrieve DFN from EDIPI
"RTN","VAFCTFU2",54,0)
 I $D(EDIPI)=""!(ASSIGN="")!(TYPE="")!(SITEIEN="") S LIST(1)="-1^Insufficient data" Q
"RTN","VAFCTFU2",55,0)
 I $D(EDIPI),'$D(^DGCN(391.91,"AISS",EDIPI,ASSIGN,TYPE,SITEIEN)) D  Q
"RTN","VAFCTFU2",56,0)
 . S LIST(1)="-1^EDIPI Record is unknown at this facility"
"RTN","VAFCTFU2",57,0)
 I $D(EDIPI),$D(^DGCN(391.91,"AISS",EDIPI,ASSIGN,TYPE,SITEIEN)) D
"RTN","VAFCTFU2",58,0)
 .S EN=$O(^DGCN(391.91,"AISS",EDIPI,ASSIGN,TYPE,SITEIEN,0))
"RTN","VAFCTFU2",59,0)
 .S DFN=$P($G(^DGCN(391.91,EN,0)),"^")
"RTN","VAFCTFU2",60,0)
 ;
"RTN","VAFCTFU2",61,0)
 ; if ICN is not defined, it is OK, but DFN should be defined
"RTN","VAFCTFU2",62,0)
 ; I $G(ICN)<0 S LIST(1)=ICN Q
"RTN","VAFCTFU2",63,0)
 ; bad input, such as Id^NI^USVHA^123
"RTN","VAFCTFU2",64,0)
 I '$G(DFN) S LIST(1)="-1^Invalid input" Q
"RTN","VAFCTFU2",65,0)
 ; check DFN and Site to be matching an entry in file #391.91
"RTN","VAFCTFU2",66,0)
 I '$O(^DGCN(391.91,"APAT",DFN,SITEIEN,0)) D  Q
"RTN","VAFCTFU2",67,0)
 . S LIST(1)="-1^Id as '"_ID_"'"_" is not in database"
"RTN","VAFCTFU2",68,0)
 ; DFN should be defined, but ICN may not.
"RTN","VAFCTFU2",69,0)
 S X=$$QUERYTF($P($G(ICN),"V"),"LIST")
"RTN","VAFCTFU2",70,0)
 I $P(X,U)="1" S LIST(1)="-1"_U_$P(X,U,2) Q
"RTN","VAFCTFU2",71,0)
 ;S DR=".01;13;99",DIC=4,DIQ(0)="E",DIQ="VAFCTFU2"
"RTN","VAFCTFU2",72,0)
 ;F VAFC=0:0 S VAFC=$O(LIST(VAFC)) Q:VAFC=""  D
"RTN","VAFCTFU2",73,0)
 ;.K VAFCTFU2
"RTN","VAFCTFU2",74,0)
 ;.S DA=+LIST(VAFC)
"RTN","VAFCTFU2",75,0)
 ;.D EN^DIQ1
"RTN","VAFCTFU2",76,0)
 ;.S LIST(VAFC)=VAFCTFU2(4,+LIST(VAFC),99,"E")_"^"_VAFCTFU2(4,+LIST(VAFC),.01,"E")_"^"_$P(LIST(VAFC),"^",2)_"^"_$P(LIST(VAFC),"^",3)_"^"_VAFCTFU2(4,+LIST(VAFC),13,"E")_"^"_$P(LIST(VAFC),"^",4)
"RTN","VAFCTFU2",77,0)
 Q
"RTN","VAFCTFU2",78,0)
GETICN(EDIPI) ;return the ICN when EDIPI is passed
"RTN","VAFCTFU2",79,0)
 N EN,DFN,ICN,IEN
"RTN","VAFCTFU2",80,0)
 S IEN=$$IEN^XUAF4("200DOD")
"RTN","VAFCTFU2",81,0)
 I 'IEN Q "-1^Unknown Assigning Facility."
"RTN","VAFCTFU2",82,0)
 I '$D(^DGCN(391.91,"ASCR",EDIPI,IEN)) Q "-1^EDIPI Record is unknown at this facility"
"RTN","VAFCTFU2",83,0)
 I $D(^DGCN(391.91,"ASCR",EDIPI,IEN)) D
"RTN","VAFCTFU2",84,0)
 .S EN=$O(^DGCN(391.91,"ASCR",EDIPI,$$IEN^XUAF4("200DOD"),""))
"RTN","VAFCTFU2",85,0)
 .S DFN=$P($G(^DGCN(391.91,EN,0)),"^")
"RTN","VAFCTFU2",86,0)
 .I DFN'="" S ICN=$$GETICN^MPIF001(DFN)
"RTN","VAFCTFU2",87,0)
 .I DFN="" S ICN="-1^No Site Record associated with this entry"
"RTN","VAFCTFU2",88,0)
 Q ICN
"RTN","VAFCTFU2",89,0)
 ;
"RTN","VAFCTFU2",90,0)
SET(TFIEN,ARY,CTR) ;This sets the array with the treating facility list.
"RTN","VAFCTFU2",91,0)
 ;  Ex  ARY(1)=<ID> ^ <ID TYPE> ^ <Assigning Authority> ^ <Assigning Facility> ^ <ID Status>
"RTN","VAFCTFU2",92,0)
 N DGCN,INSTIEN,LSTA,SOURCE,EN,NODE,SDFN,STATUS,SITEN,ID,IDTYPE,SITE,ASSAUTH,FOUND,NODE0,NODE2
"RTN","VAFCTFU2",93,0)
 S DGCN(0)=$G(^DGCN(391.91,TFIEN,0)),SITEN=""
"RTN","VAFCTFU2",94,0)
 ;** FROM DG*5.3*800 - (ckn) - Quit if IPP field is not set for 200MH record - removed in **863 MVI 2544
"RTN","VAFCTFU2",95,0)
 S INSTIEN=$P($G(DGCN(0)),"^",2),LSTA=$$STA^XUAF4(INSTIEN)
"RTN","VAFCTFU2",96,0)
 ;I $E(LSTA,1,5)="200MH",$P($G(DGCN(0)),"^",8)'=1 Q  ;include all MHV records MVI 2544 **863
"RTN","VAFCTFU2",97,0)
 S ID=$P(DGCN(0),"^"),SITE=$P(DGCN(0),"^",2) I SITE'="" S SITEN=$$STA^XUAF4(SITE)
"RTN","VAFCTFU2",98,0)
 ;S IDTYPE="PI"
"RTN","VAFCTFU2",99,0)
 ;I SITEN="200DOD"!(SITEN["200N") S IDTYPE="NI"
"RTN","VAFCTFU2",100,0)
 ;S ASSAUTH="USVHA"
"RTN","VAFCTFU2",101,0)
 ;I SITEN="200DOD" S ASSAUTH="USDOD"
"RTN","VAFCTFU2",102,0)
 ; GET SOURCE ID AND SOURCE STATUS - CAN BE MORE THAN ONE
"RTN","VAFCTFU2",103,0)
 ;^DGCN(391.91,14842,0)=7169806^17942
"RTN","VAFCTFU2",104,0)
 ;^DGCN(391.91,14842,1,0)=^391.9101A^2^2
"RTN","VAFCTFU2",105,0)
 ;^DGCN(391.91,14842,1,1,0)=1^A
"RTN","VAFCTFU2",106,0)
 ;^DGCN(391.91,14842,1,2,0)=2^H
"RTN","VAFCTFU2",107,0)
 ;^DGCN(391.91,14842,1,"B",1,1)=
"RTN","VAFCTFU2",108,0)
 ;^DGCN(391.91,14842,1,"B",2,2)=
"RTN","VAFCTFU2",109,0)
 ;^DGCN(391.91,1708,0)=7169806^500^3081204.152808^^^^1
"RTN","VAFCTFU2",110,0)
 ;^DGCN(391.91,1708,1,0)=^391.9101A^1^1
"RTN","VAFCTFU2",111,0)
 ;^DGCN(391.91,1708,1,1,0)=27^H
"RTN","VAFCTFU2",112,0)
 ;^DGCN(391.91,1708,1,"B",27,1)=
"RTN","VAFCTFU2",113,0)
 ;**856 - MVI 1371 (ckn)
"RTN","VAFCTFU2",114,0)
 ;After DG*5.3*837 - TREATING FACILITY LIST file #391.91 does not
"RTN","VAFCTFU2",115,0)
 ;store Source Id value in SOURCE ID multiple field. This field is
"RTN","VAFCTFU2",116,0)
 ;is moved to top level. We no longer need to loop through SOURNCE ID
"RTN","VAFCTFU2",117,0)
 ;multiple to get the values.
"RTN","VAFCTFU2",118,0)
 ;S SOURCE="",FOUND=0
"RTN","VAFCTFU2",119,0)
 ;I $D(^DGCN(391.91,TFIEN,1)) D
"RTN","VAFCTFU2",120,0)
 ;.S EN=0 F  S EN=$O(^DGCN(391.91,TFIEN,1,EN)) Q:EN=""  D
"RTN","VAFCTFU2",121,0)
 ;..;S NODE=$G(^DGCN(391.91,TFIEN,1,EN,0))
"RTN","VAFCTFU2",122,0)
 S NODE0=$G(^DGCN(391.91,TFIEN,0))
"RTN","VAFCTFU2",123,0)
 S NODE2=$G(^DGCN(391.91,TFIEN,2))
"RTN","VAFCTFU2",124,0)
 S SDFN=$P(NODE2,"^",2),STATUS=$P(NODE2,"^",3),IDTYPE=$P(NODE0,"^",9)
"RTN","VAFCTFU2",125,0)
 S ASSAUTH=$P(NODE2,"^")
"RTN","VAFCTFU2",126,0)
 I SITEN="200DOD"!(SITEN["200N") S IDTYPE="NI"
"RTN","VAFCTFU2",127,0)
 I SITEN="200DOD" S ASSAUTH="USDOD"
"RTN","VAFCTFU2",128,0)
 I IDTYPE="" S IDTYPE="PI"
"RTN","VAFCTFU2",129,0)
 I ASSAUTH="" S ASSAUTH="USVHA"
"RTN","VAFCTFU2",130,0)
 I SITEN["200N"&(IDTYPE="NI")&(ASSAUTH="USVHA") S ASSAUTH=""
"RTN","VAFCTFU2",131,0)
 ;S SDFN=$P(NODE,"^"),STATUS=$P(NODE,"^",2)
"RTN","VAFCTFU2",132,0)
 I SDFN'="" S CTR=CTR+1,@ARY@(CTR)=SDFN_"^"_IDTYPE_"^"_ASSAUTH_"^"_SITEN_"^"_STATUS,FOUND=1
"RTN","VAFCTFU2",133,0)
 ;I FOUND=0 S CTR=CTR+1,@ARY@(CTR)=""_"^"_IDTYPE_"^"_ASSAUTH_"^"_SITEN
"RTN","VAFCTFU2",134,0)
 Q
"RTN","VAFCTFU2",135,0)
 ;
"RTN","VAFCTFU2",136,0)
QUERYTF(PAT,ARY) ;a query for Treating Facility.
"RTN","VAFCTFU2",137,0)
 ;INPUT   PAT - The patient's ICN
"RTN","VAFCTFU2",138,0)
 ;        ARY - The array in which to return the Treating facility info.
"RTN","VAFCTFU2",139,0)
 ;OUTPUT  A list of the Treating Facilities in the array provided from
"RTN","VAFCTFU2",140,0)
 ;        the parameter.  It will be in the structure of x(1), x(2) etc.
"RTN","VAFCTFU2",141,0)
 ;  Ex  X(1)=<ID> ^ <ID TYPE> ^ <Assigning Authority> ^ <Assigning Facility> ^ <ID Status>
"RTN","VAFCTFU2",142,0)
 ;
"RTN","VAFCTFU2",143,0)
 ;    This is also a function call.  If there is an error then a 
"RTN","VAFCTFU2",144,0)
 ;    1^error description will be returned. 
"RTN","VAFCTFU2",145,0)
 ;
"RTN","VAFCTFU2",146,0)
 ;  *** If no data is found the array will not be populated and
"RTN","VAFCTFU2",147,0)
 ;  a 1^error description will be returned.
"RTN","VAFCTFU2",148,0)
 ;
"RTN","VAFCTFU2",149,0)
 N PDFN,VAFCER,LP,CTR
"RTN","VAFCTFU2",150,0)
 ;
"RTN","VAFCTFU2",151,0)
 ; ICN is not required, comment out
"RTN","VAFCTFU2",152,0)
 ; I '$G(PAT)!('$D(ARY)) S VAFCER="1^Parameter missing." G QUERYTFQ
"RTN","VAFCTFU2",153,0)
 I ('$D(ARY)) S VAFCER="1^Parameter missing." G QUERYTFQ
"RTN","VAFCTFU2",154,0)
 S VAFCER=0,CTR=1
"RTN","VAFCTFU2",155,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T G QUERYTFQ
"RTN","VAFCTFU2",156,0)
 ; ICN is not required, comment out
"RTN","VAFCTFU2",157,0)
 ; S PDFN=$$GETDFN^MPIF001(PAT)
"RTN","VAFCTFU2",158,0)
 ; I PDFN<0 S VAFCER="1^No patient DFN." G QUERYTFQ
"RTN","VAFCTFU2",159,0)
 S PDFN=$G(DFN)
"RTN","VAFCTFU2",160,0)
 I '$G(PDFN) S VAFCER="1^DFN is not defined." G QUERYTFQ
"RTN","VAFCTFU2",161,0)
 ;SET FIRST ENTRY TO BE THE ICN - FULL ICN - PAT IS NOT THE ICN
"RTN","VAFCTFU2",162,0)
 S @ARY@(CTR)=$$GETICN^MPIF001(PDFN)_"^NI^USVHA^200M^A"
"RTN","VAFCTFU2",163,0)
 ;**856 - MVI 1371 (ckn)
"RTN","VAFCTFU2",164,0)
 ;Loop through all TFIENs for site
"RTN","VAFCTFU2",165,0)
 ;F LP=0:0 S LP=$O(^DGCN(391.91,"APAT",PDFN,LP)) Q:'LP  S TFIEN=$O(^(LP,"")) D SET(TFIEN,ARY,.CTR)
"RTN","VAFCTFU2",166,0)
 F LP=0:0 S LP=$O(^DGCN(391.91,"APAT",PDFN,LP)) Q:'LP  D
"RTN","VAFCTFU2",167,0)
 .S TFIEN=0 F  S TFIEN=$O(^DGCN(391.91,"APAT",PDFN,LP,TFIEN)) Q:'TFIEN  D
"RTN","VAFCTFU2",168,0)
 ..D SET(TFIEN,ARY,.CTR)
"RTN","VAFCTFU2",169,0)
 I $D(@ARY)'>9 S VAFCER="1^Could not find Treating Facilities"
"RTN","VAFCTFU2",170,0)
QUERYTFQ Q VAFCER
"RTN","VAFCTFU2",171,0)
 ;
"RTN","VAFCTFU2",172,0)
NEWTF(RESULT,DFN,EDIPI) ;
"RTN","VAFCTFU2",173,0)
 ; for MPIC_2019
"RTN","VAFCTFU2",174,0)
 ; called from RPC: VAFC NEW NC TREATING FACILITY
"RTN","VAFCTFU2",175,0)
 ; Input:
"RTN","VAFCTFU2",176,0)
 ;   DFN: Vista Patient Identifier will be the PATIENT file (#2) IEN (aka DFN)
"RTN","VAFCTFU2",177,0)
 ;        example of DFN="7168937"
"RTN","VAFCTFU2",178,0)
 ;
"RTN","VAFCTFU2",179,0)
 ;   EDIPI: The DOD Identifier will be EDIPI data with the
"RTN","VAFCTFU2",180,0)
 ;          following format:
"RTN","VAFCTFU2",181,0)
 ;          Id^IdType^AssigningAuthority^AssigningFacility
"RTN","VAFCTFU2",182,0)
 ;          example:  852043888^NI^USDOD^200DOD
"RTN","VAFCTFU2",183,0)
 ;
"RTN","VAFCTFU2",184,0)
 ; Return:
"RTN","VAFCTFU2",185,0)
 ; This will return a list of treating facilities in the following.
"RTN","VAFCTFU2",186,0)
 ;
"RTN","VAFCTFU2",187,0)
 ;   format:
"RTN","VAFCTFU2",188,0)
 ;   Id^IdType^AssigningAuthority^AssigningFacility^IdStatus[^NEW]
"RTN","VAFCTFU2",189,0)
 ;
"RTN","VAFCTFU2",190,0)
 ;   Examples:
"RTN","VAFCTFU2",191,0)
 ;   RESULT(1)="7168937^PI^USVHA^500^A"
"RTN","VAFCTFU2",192,0)
 ;   RESULT(2)="85204388^NI^USDOD^200DOD^A^NEW"
"RTN","VAFCTFU2",193,0)
 ;     Note: If there is data in the 6th piece of the RESULT(<number>),
"RTN","VAFCTFU2",194,0)
 ;       with data value as "NEW", then it means that the entry was
"RTN","VAFCTFU2",195,0)
 ;       newly created in the TREATING FACILITY LIST (#391.91) file
"RTN","VAFCTFU2",196,0)
 ;       by this RPC call.
"RTN","VAFCTFU2",197,0)
 ;
"RTN","VAFCTFU2",198,0)
 N X,TYPE,SITE,ID,ASSIGN,PTDFN,LP,CTR,NCTFIEN,ERROR,II
"RTN","VAFCTFU2",199,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T S RESULT(1)="-1^MPI Not Installed" Q
"RTN","VAFCTFU2",200,0)
 ; clear "return" variable
"RTN","VAFCTFU2",201,0)
 K RESULT
"RTN","VAFCTFU2",202,0)
 ; input parameters
"RTN","VAFCTFU2",203,0)
 S PTDFN=$G(DFN)
"RTN","VAFCTFU2",204,0)
 I 'PTDFN S RESULT(1)="-1^Invalid DFN:"""_PTDFN_"""" Q
"RTN","VAFCTFU2",205,0)
 ; check the field #.01 data in patient entry
"RTN","VAFCTFU2",206,0)
 I $P($G(^DPT(PTDFN,0)),"^")']"" D  Q
"RTN","VAFCTFU2",207,0)
 . S RESULT(1)="-1^No patient in database for the DFN:"_PTDFN
"RTN","VAFCTFU2",208,0)
 ;
"RTN","VAFCTFU2",209,0)
 S ID=$P(EDIPI,"^"),TYPE=$P(EDIPI,"^",2),ASSIGN=$P(EDIPI,"^",3)
"RTN","VAFCTFU2",210,0)
 S SITE=$P(EDIPI,"^",4)
"RTN","VAFCTFU2",211,0)
 ;
"RTN","VAFCTFU2",212,0)
 I ID']"" S RESULT(1)="-1^Id is not defined." Q
"RTN","VAFCTFU2",213,0)
 I TYPE'="NI" S RESULT(1)="-1^Invalid Id Type." Q
"RTN","VAFCTFU2",214,0)
 I ASSIGN'="USDOD" S RESULT(1)="-1^Invalid Assigning Authority." Q
"RTN","VAFCTFU2",215,0)
 I SITE'="200DOD" S RESULT(1)="-1^Invalid Assigning Facility." Q
"RTN","VAFCTFU2",216,0)
 S SITEIEN=$O(^DIC(4,"D","200DOD",0))
"RTN","VAFCTFU2",217,0)
 I 'SITEIEN S RESULT(1)="-1^Assigning Facility is not defined in database." Q
"RTN","VAFCTFU2",218,0)
 ;
"RTN","VAFCTFU2",219,0)
 ; get ien of file #391.91
"RTN","VAFCTFU2",220,0)
 S NCTFIEN=$O(^DGCN(391.91,"APAT",PTDFN,SITEIEN,0))
"RTN","VAFCTFU2",221,0)
 ;
"RTN","VAFCTFU2",222,0)
 ; Assigning Facility as "200DOD" of the patient is already existed
"RTN","VAFCTFU2",223,0)
 ; in file #391.91
"RTN","VAFCTFU2",224,0)
 S CTR=0
"RTN","VAFCTFU2",225,0)
 I NCTFIEN D  Q
"RTN","VAFCTFU2",226,0)
 . N TFIEN
"RTN","VAFCTFU2",227,0)
 . F LP=0:0 S LP=$O(^DGCN(391.91,"APAT",PTDFN,LP)) Q:'LP  S TFIEN=$O(^(LP,0)) D
"RTN","VAFCTFU2",228,0)
 .. Q:'TFIEN
"RTN","VAFCTFU2",229,0)
 .. ; retrieve entry in file #391.91
"RTN","VAFCTFU2",230,0)
 .. D SET(TFIEN,"RESULT",.CTR)
"RTN","VAFCTFU2",231,0)
 ;
"RTN","VAFCTFU2",232,0)
 ; add new entry to file #391.91
"RTN","VAFCTFU2",233,0)
 D FILENEW^VAFCTFU(PTDFN,SITEIEN,"","","",.ERROR,"",ID,"A")
"RTN","VAFCTFU2",234,0)
 I $D(ERROR(SITEIEN)) D  Q
"RTN","VAFCTFU2",235,0)
 . S RESULT(1)="-1^"_$G(ERROR(SITEIEN))
"RTN","VAFCTFU2",236,0)
 ;
"RTN","VAFCTFU2",237,0)
 ; for Cache client/server model in case that there is a delay for
"RTN","VAFCTFU2",238,0)
 ; retrieving the new created entry.
"RTN","VAFCTFU2",239,0)
 F II=1:1:5 Q:$O(^DGCN(391.91,"APAT",PTDFN,SITEIEN,0))  H II
"RTN","VAFCTFU2",240,0)
 ; retrieving the results
"RTN","VAFCTFU2",241,0)
 F LP=0:0 S LP=$O(^DGCN(391.91,"APAT",PTDFN,LP)) Q:'LP  S TFIEN=$O(^(LP,0)) D
"RTN","VAFCTFU2",242,0)
 . Q:'TFIEN
"RTN","VAFCTFU2",243,0)
 . ; retrieve entry in file #391.91
"RTN","VAFCTFU2",244,0)
 . D SET(TFIEN,"RESULT",.CTR)
"RTN","VAFCTFU2",245,0)
 . I $P($G(RESULT(CTR)),"^",3)="USDOD" S RESULT(CTR)=RESULT(CTR)_"^NEW"
"RTN","VAFCTFU2",246,0)
 Q
"RTN","VAFCTFU2",247,0)
 ;
"RTN","VAFCTFU3")
0^8^B10715994^n/a
"RTN","VAFCTFU3",1,0)
VAFCTFU3 ;BHM/RGY-Utilities for the Treating Facility file 391.91, CONTINUED ; 5/2/13
"RTN","VAFCTFU3",2,0)
 ;;5.3;Registration;**863**;Aug 13, 1993;Build 2
"RTN","VAFCTFU3",3,0)
TFL(LIST,DFN) ;for dfn get list of treating facilities 
"RTN","VAFCTFU3",4,0)
 ;NO SCREENS, to include ALL TF entries, including entries without DFN
"RTN","VAFCTFU3",5,0)
 ;cloned from VAFCTFU1
"RTN","VAFCTFU3",6,0)
 NEW X,ICN,DA,DR,VAFCTFU3,DIC,DIQ,VAFC
"RTN","VAFCTFU3",7,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T S LIST(1)="-1^MPI Not Installed" Q
"RTN","VAFCTFU3",8,0)
 S DR=".01;13;99",DIC=4,DIQ(0)="E",DIQ="VAFCTFU3" ;**448
"RTN","VAFCTFU3",9,0)
 S ICN=$$GETICN^MPIF001(DFN)
"RTN","VAFCTFU3",10,0)
 I ICN<0 S LIST(1)=ICN Q
"RTN","VAFCTFU3",11,0)
 S X=$$QUERYTF($P(ICN,"V"),"LIST",0)
"RTN","VAFCTFU3",12,0)
 I $P(X,U)="1" S LIST(1)="-1"_U_$P(X,U,2) Q
"RTN","VAFCTFU3",13,0)
 F VAFC=0:0 S VAFC=$O(LIST(VAFC)) Q:VAFC=""  D
"RTN","VAFCTFU3",14,0)
 .K VAFCTFU3
"RTN","VAFCTFU3",15,0)
 .S DA=+LIST(VAFC)
"RTN","VAFCTFU3",16,0)
 .D EN^DIQ1
"RTN","VAFCTFU3",17,0)
 .S LIST(VAFC)=VAFCTFU3(4,+LIST(VAFC),99,"E")_"^"_VAFCTFU3(4,+LIST(VAFC),.01,"E")_"^"_$P(LIST(VAFC),"^",2)_"^"_$P(LIST(VAFC),"^",3)_"^"_VAFCTFU3(4,+LIST(VAFC),13,"E") ;**448
"RTN","VAFCTFU3",18,0)
 .Q
"RTN","VAFCTFU3",19,0)
 Q
"RTN","VAFCTFU3",20,0)
 ;
"RTN","VAFCTFU3",21,0)
SET(TFIEN,ARY,CTR) ;This sets the array with the treating facility list.
"RTN","VAFCTFU3",22,0)
 ; Returns: treating facility ^ treatment date ^ event reason (if any)
"RTN","VAFCTFU3",23,0)
 ; *261 gjc@120899 (formerly part of VAFCTFU prior to DG*5.3*261)
"RTN","VAFCTFU3",24,0)
 N DGCN,INSTIEN,LSTA S DGCN(0)=$G(^DGCN(391.91,TFIEN,0))
"RTN","VAFCTFU3",25,0)
 S INSTIEN=$P($G(DGCN(0)),"^",2),LSTA=$$STA^XUAF4(INSTIEN)
"RTN","VAFCTFU3",26,0)
 S CTR=CTR+1,@ARY@(CTR)=$P(DGCN(0),U,2,3)_U_$P(DGCN(0),U,7)
"RTN","VAFCTFU3",27,0)
 Q
"RTN","VAFCTFU3",28,0)
 ;
"RTN","VAFCTFU3",29,0)
QUERYTF(PAT,ARY,INDX) ;a query for Treating Facility.
"RTN","VAFCTFU3",30,0)
 ;INPUT   PAT - The patient's ICN
"RTN","VAFCTFU3",31,0)
 ;        ARY - The array in which to return the Treating facility info.
"RTN","VAFCTFU3",32,0)
 ;        INDX (optional) - the index to $O through.  APAT for patient
"RTN","VAFCTFU3",33,0)
 ;        information linked to treating facilities, AEVN for patient
"RTN","VAFCTFU3",34,0)
 ;        info linked with an event reason.  INDX=1 if AEVN is used,
"RTN","VAFCTFU3",35,0)
 ;        else APAT is used. *261 gjc@120399
"RTN","VAFCTFU3",36,0)
 ;
"RTN","VAFCTFU3",37,0)
 ;OUTPUT  A list of the Treating Facilities in the array provided from
"RTN","VAFCTFU3",38,0)
 ;        the parameter.  It will be in the structure of x(1), x(2) etc.
"RTN","VAFCTFU3",39,0)
 ;  Ex  X(1)=500^2960101^ptr to ADT/HL7 Event Reason file (if exists)
"RTN","VAFCTFU3",40,0)
 ;    Where the first piece is the IEN of the institution, the second
"RTN","VAFCTFU3",41,0)
 ;    piece is the current date on record for that institution and the
"RTN","VAFCTFU3",42,0)
 ;    third piece is the event reason (if it exists).  Note: A04 & A08
"RTN","VAFCTFU3",43,0)
 ;    events do not file an event reason when adding to the TREATING
"RTN","VAFCTFU3",44,0)
 ;    FACILITY LIST (#391.91) file, thus returning null in the third
"RTN","VAFCTFU3",45,0)
 ;    piece. *261 gjc@120199
"RTN","VAFCTFU3",46,0)
 ;
"RTN","VAFCTFU3",47,0)
 ;    This is also a function call.  If there is an error then a 
"RTN","VAFCTFU3",48,0)
 ;    1^error description will be returned. 
"RTN","VAFCTFU3",49,0)
 ;
"RTN","VAFCTFU3",50,0)
 ;  *** If no data is found the array will not be populated and
"RTN","VAFCTFU3",51,0)
 ;  a 1^error description will be returned.
"RTN","VAFCTFU3",52,0)
 ;
"RTN","VAFCTFU3",53,0)
 N PDFN,VAFCER,LP,CTR,ZTFIEN,ZDLT,ZTDLT
"RTN","VAFCTFU3",54,0)
 I '$G(PAT)!('$D(ARY)) S VAFCER="1^Parameter missing." G QUERYTFQ
"RTN","VAFCTFU3",55,0)
 S VAFCER=0,CTR=0,INDX=$G(INDX)
"RTN","VAFCTFU3",56,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T G QUERYTFQ
"RTN","VAFCTFU3",57,0)
 S PDFN=$$GETDFN^MPIF001(PAT)
"RTN","VAFCTFU3",58,0)
 I PDFN<0 S VAFCER="1^No patient DFN." G QUERYTFQ
"RTN","VAFCTFU3",59,0)
 ; determine the index to $O through, based on the value of INDX
"RTN","VAFCTFU3",60,0)
 ;I 'INDX F LP=0:0 S LP=$O(^DGCN(391.91,"APAT",PDFN,LP)) Q:'LP  S TFIEN=$O(^(LP,"")) D SET(TFIEN,ARY,.CTR)
"RTN","VAFCTFU3",61,0)
 ;**856 - MVI 1371 (ckn)
"RTN","VAFCTFU3",62,0)
 ;Now that Treating Facility file can have multiple entries for
"RTN","VAFCTFU3",63,0)
 ;one site, enhanced the code to loop through all TFIENs for each SITE
"RTN","VAFCTFU3",64,0)
 ;and return the record which have latest Date Last Treated. If none
"RTN","VAFCTFU3",65,0)
 ;of the entries have DLT populated, return the first record for site.
"RTN","VAFCTFU3",66,0)
 I 'INDX F LP=0:0 S LP=$O(^DGCN(391.91,"APAT",PDFN,LP)) Q:'LP  D
"RTN","VAFCTFU3",67,0)
 .S ZTDLT=0,ZTFIEN=$O(^DGCN(391.91,"APAT",PDFN,LP,"")) Q:'ZTFIEN
"RTN","VAFCTFU3",68,0)
 .S TFIEN=0 F  S TFIEN=$O(^DGCN(391.91,"APAT",PDFN,LP,TFIEN)) Q:'TFIEN  D
"RTN","VAFCTFU3",69,0)
 ..S ZDLT=$P(^DGCN(391.91,TFIEN,0),"^",3) ;Date last treated
"RTN","VAFCTFU3",70,0)
 ..I ZDLT>ZTDLT S ZTDLT=ZDLT,ZTFIEN=TFIEN
"RTN","VAFCTFU3",71,0)
 .D SET(ZTFIEN,ARY,.CTR)
"RTN","VAFCTFU3",72,0)
 I INDX S LP=0 F  S LP=$O(^DGCN(391.91,"AEVN",PDFN,LP)) Q:'LP  D
"RTN","VAFCTFU3",73,0)
 .; please note the following: the AEVN xref is subscripted by pat. dfn
"RTN","VAFCTFU3",74,0)
 .; event reason ptr, and the ien of the TFL file.  It is possible
"RTN","VAFCTFU3",75,0)
 .; that a patient may have numerous admission/discharges at different
"RTN","VAFCTFU3",76,0)
 .; treating facilities, thus the looping through the TFIEN (TFL ien)
"RTN","VAFCTFU3",77,0)
 .; subscript. *261 gjc@120399
"RTN","VAFCTFU3",78,0)
 .S TFIEN=0 F  S TFIEN=$O(^DGCN(391.91,"AEVN",PDFN,LP,TFIEN)) Q:'TFIEN  D SET(TFIEN,ARY,.CTR)
"RTN","VAFCTFU3",79,0)
 .Q
"RTN","VAFCTFU3",80,0)
 I $D(@ARY)'>9 S VAFCER="1^Could not find Treating Facilities"
"RTN","VAFCTFU3",81,0)
QUERYTFQ Q VAFCER
"VER")
8.0^22.0
"BLD",2975,6)
^768
**END**
**END**
