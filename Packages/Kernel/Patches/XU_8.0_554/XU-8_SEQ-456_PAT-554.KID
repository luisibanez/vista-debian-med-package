Released XU*8*554 SEQ #456
Extracted from mail message
**KIDS**:XU*8.0*554^

**INSTALL NAME**
XU*8.0*554
"BLD",1333,0)
XU*8.0*554^KERNEL^0^3110309^y
"BLD",1333,1,0)
^^2^2^3110202^
"BLD",1333,1,1,0)
See the Patch Module on FORUM for a description.
"BLD",1333,1,2,0)

"BLD",1333,4,0)
^9.64PA^8989.3^1
"BLD",1333,4,8989.3,0)
8989.3
"BLD",1333,4,8989.3,2,0)
^9.641^8989.3^1
"BLD",1333,4,8989.3,2,8989.3,0)
KERNEL SYSTEM PARAMETERS  (File-top level)
"BLD",1333,4,8989.3,2,8989.3,1,0)
^9.6411^.07^1
"BLD",1333,4,8989.3,2,8989.3,1,.07,0)
LOCAL TMP
"BLD",1333,4,8989.3,222)
y^y^p^^^^n^^n
"BLD",1333,4,8989.3,224)

"BLD",1333,4,"APDD",8989.3,8989.3)

"BLD",1333,4,"APDD",8989.3,8989.3,.07)

"BLD",1333,4,"B",8989.3,8989.3)

"BLD",1333,6.3)
4
"BLD",1333,"INIT")
POST^XU8P554
"BLD",1333,"KRN",0)
^9.67PA^9002226^21
"BLD",1333,"KRN",.4,0)
.4
"BLD",1333,"KRN",.401,0)
.401
"BLD",1333,"KRN",.402,0)
.402
"BLD",1333,"KRN",.403,0)
.403
"BLD",1333,"KRN",.5,0)
.5
"BLD",1333,"KRN",.84,0)
.84
"BLD",1333,"KRN",3.6,0)
3.6
"BLD",1333,"KRN",3.8,0)
3.8
"BLD",1333,"KRN",9.2,0)
9.2
"BLD",1333,"KRN",9.8,0)
9.8
"BLD",1333,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",1333,"KRN",9.8,"NM",1,0)
XUTMHR^^0^B30318359
"BLD",1333,"KRN",9.8,"NM",2,0)
XQ82^^0^B12833341
"BLD",1333,"KRN",9.8,"NM","B","XQ82",2)

"BLD",1333,"KRN",9.8,"NM","B","XUTMHR",1)

"BLD",1333,"KRN",19,0)
19
"BLD",1333,"KRN",19,"NM",0)
^9.68A^^0
"BLD",1333,"KRN",19.1,0)
19.1
"BLD",1333,"KRN",101,0)
101
"BLD",1333,"KRN",409.61,0)
409.61
"BLD",1333,"KRN",771,0)
771
"BLD",1333,"KRN",779.2,0)
779.2
"BLD",1333,"KRN",870,0)
870
"BLD",1333,"KRN",8989.51,0)
8989.51
"BLD",1333,"KRN",8989.52,0)
8989.52
"BLD",1333,"KRN",8994,0)
8994
"BLD",1333,"KRN",9002226,0)
9002226
"BLD",1333,"KRN","B",.4,.4)

"BLD",1333,"KRN","B",.401,.401)

"BLD",1333,"KRN","B",.402,.402)

"BLD",1333,"KRN","B",.403,.403)

"BLD",1333,"KRN","B",.5,.5)

"BLD",1333,"KRN","B",.84,.84)

"BLD",1333,"KRN","B",3.6,3.6)

"BLD",1333,"KRN","B",3.8,3.8)

"BLD",1333,"KRN","B",9.2,9.2)

"BLD",1333,"KRN","B",9.8,9.8)

"BLD",1333,"KRN","B",19,19)

"BLD",1333,"KRN","B",19.1,19.1)

"BLD",1333,"KRN","B",101,101)

"BLD",1333,"KRN","B",409.61,409.61)

"BLD",1333,"KRN","B",771,771)

"BLD",1333,"KRN","B",779.2,779.2)

"BLD",1333,"KRN","B",870,870)

"BLD",1333,"KRN","B",8989.51,8989.51)

"BLD",1333,"KRN","B",8989.52,8989.52)

"BLD",1333,"KRN","B",8994,8994)

"BLD",1333,"KRN","B",9002226,9002226)

"BLD",1333,"QUES",0)
^9.62^^
"BLD",1333,"REQB",0)
^9.611^2^2
"BLD",1333,"REQB",1,0)
XU*8.0*534^1
"BLD",1333,"REQB",2,0)
XU*8.0*542^1
"BLD",1333,"REQB","B","XU*8.0*534",1)

"BLD",1333,"REQB","B","XU*8.0*542",2)

"FIA",8989.3)
KERNEL SYSTEM PARAMETERS
"FIA",8989.3,0)
^XTV(8989.3,
"FIA",8989.3,0,0)
8989.3P
"FIA",8989.3,0,1)
y^y^p^^^^n^^n
"FIA",8989.3,0,10)

"FIA",8989.3,0,11)

"FIA",8989.3,0,"RLRO")

"FIA",8989.3,0,"VR")
8.0^XU
"FIA",8989.3,8989.3)
1
"FIA",8989.3,8989.3,.07)

"INIT")
POST^XU8P554
"MBREQ")
0
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^200^1
"PKG",3,20,200,0)
200^^XDRM200N
"PKG",3,20,200,1)

"PKG",3,20,"B",200,200)

"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3090706^3090706^6
"PKG",3,22,1,"PAH",1,0)
554^3110309
"PKG",3,22,1,"PAH",1,1,0)
^^2^2^3110309
"PKG",3,22,1,"PAH",1,1,1,0)
See the Patch Module on FORUM for a description.
"PKG",3,22,1,"PAH",1,1,2,0)

"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","XQ82")
0^2^B12833341^B11169630
"RTN","XQ82",1,0)
XQ82 ;SF-ISC.SEA/JLI - CLEAN OLD $JOB DATA OUT OF XUTL("XQ", & OTHERS ;11/30/10  08:34
"RTN","XQ82",2,0)
 ;;8.0;KERNEL;**59,67,157,258,312,353,542,554**;Jul 10, 1995;Build 4
"RTN","XQ82",3,0)
 ;Make sure that can run from a DCL script
"RTN","XQ82",4,0)
 N A,X,%DT,Y,J,K,DDATE,HDATE,HJOB,HPID3,XQOS,XQVND
"RTN","XQ82",5,0)
 S U="^",DT=$$DT^XLFDT
"RTN","XQ82",6,0)
 S HDATE=$H-7 ;Get seven days ago in $H days
"RTN","XQ82",7,0)
 S DDATE=$$HTFM^XLFDT(HDATE) ;Get seven days ago in FM format
"RTN","XQ82",8,0)
 S XQVND=^%ZOSF("OS"),XQOS=$$OS^%ZOSV,HPID3=$$CNV^XLFUTL($J,16)
"RTN","XQ82",9,0)
 S HJOB=$J,DILOCKTM=$G(DILOCKTM,+$G(^DD("DILOCKTM"),1))
"RTN","XQ82",10,0)
 ;Do work as a set of sub routines
"RTN","XQ82",11,0)
 D L0,L1,L2,L3,L4,L5,L6,L7,L8
"RTN","XQ82",12,0)
EXIT ;
"RTN","XQ82",13,0)
 Q
"RTN","XQ82",14,0)
 ;We keep track of jobs by putting data in ^XUTL("XQ",$J).
"RTN","XQ82",15,0)
 ;Sign-on time is in ^($J,0) points to sign-on log.
"RTN","XQ82",16,0)
 ;Holds the Menu stack.
"RTN","XQ82",17,0)
 ;For any entry in user stack '^XUTL("XQ",$J)' w/ date older than 7 days or w/o zero node
"RTN","XQ82",18,0)
 ;kill XUTL("XQ",n) and corresponding UTILITY(n), TMP(n), & XUTL(n) nodes.
"RTN","XQ82",19,0)
 ;Long running jobs should call TOUCH^XUSCLEAN once a day to update KEEPALIVE.
"RTN","XQ82",20,0)
L0 N %T S J=0
"RTN","XQ82",21,0)
 F  S J=$O(^XUTL("XQ",J)) Q:J'>0  I $S('$D(^(J,0)):1,1:^(0)<DDATE) D
"RTN","XQ82",22,0)
 . I '$D(^XUTL("XQ",J,0)) K ^XUTL("XQ",J) Q  ;Missing zero node
"RTN","XQ82",23,0)
 . I $G(^XUTL("XQ",J,"KEEPALIVE"))>HDATE Q  ;For long running jobs
"RTN","XQ82",24,0)
 . I $D(^XUTL("XQ",J,"ZTSKNUM")) L +^%ZTSCH("TASK",^XUTL("XQ",J,"ZTSKNUM")):DILOCKTM Q:'$T  L -^%ZTSCH("TASK",^XUTL("XQ",J,"ZTSKNUM"))
"RTN","XQ82",25,0)
 . K ^XUTL("XQ",J),^UTILITY(J),^TMP(J),^XUTL(J)
"RTN","XQ82",26,0)
 . Q
"RTN","XQ82",27,0)
 Q:'$$CHECK  ;Check if we should skip pass 2.
"RTN","XQ82",28,0)
 ;Now to check again for DEAD jobs on local node
"RTN","XQ82",29,0)
 F J=0:0 S J=$O(^XUTL("XQ",J)) Q:J'>0  D
"RTN","XQ82",30,0)
 . I $$DEAD(J) K ^XUTL("XQ",J),^UTILITY(J),^TMP(J),^XUTL(J)
"RTN","XQ82",31,0)
 Q
"RTN","XQ82",32,0)
 ;
"RTN","XQ82",33,0)
 ;Loop thru UTILITY and look for nodes w/o corresponding XUTL("XQ",n)
"RTN","XQ82",34,0)
L1 S A="" F  S A=$O(^UTILITY(A)) Q:A=""  D
"RTN","XQ82",35,0)
 . I A>0,'$D(^XUTL("XQ",A)) K ^UTILITY(A) Q  ;UTILITY($J) w/o XUTL("XQ",$J) node.
"RTN","XQ82",36,0)
 . Q:A>0  Q:"^ROU^GLO^LRLTR^"[("^"_A_"^")
"RTN","XQ82",37,0)
 . F J=0:0 S J=$O(^UTILITY(A,J)) Q:J'>0  I '$D(^XUTL("XQ",J)) K ^UTILITY(A,J) ;Remove UTILITY(namespace,$J) w/o XUTL("XQ",$J)
"RTN","XQ82",38,0)
 . Q
"RTN","XQ82",39,0)
 Q
"RTN","XQ82",40,0)
 ;
"RTN","XQ82",41,0)
 ;Loop thru TMP and look for nodes w/o corresponding XUTL("XQ",n)
"RTN","XQ82",42,0)
L2 S A="" F  S A=$O(^TMP(A)) Q:A=""  D
"RTN","XQ82",43,0)
 . I A>0,'$D(^XUTL("XQ",A)) K ^TMP(A) Q  ;TMP($J) w/o XUTL("XQ",$J) node.
"RTN","XQ82",44,0)
 . Q:A>0  ;Q:"^ROU^GLO^LRLTR^"[("^"_A_"^")
"RTN","XQ82",45,0)
 . F J=0:0 S J=$O(^TMP(A,J)) Q:J'>0  I '$D(^XUTL("XQ",J)) K ^TMP(A,J) ;Remove TMP(namespace,$J) w/o XUTL("XQ",$J)
"RTN","XQ82",46,0)
 . Q
"RTN","XQ82",47,0)
 Q
"RTN","XQ82",48,0)
 ;
"RTN","XQ82",49,0)
L3 ;Now to cleanup the XTMP global w/ XTMP(namespace,0)<DT
"RTN","XQ82",50,0)
 S A="" F  S A=$O(^XTMP(A)) Q:A=""  S J=$G(^XTMP(A,0)) I J<DT K ^XTMP(A)
"RTN","XQ82",51,0)
 Q
"RTN","XQ82",52,0)
 ;
"RTN","XQ82",53,0)
L4 ;Now go thru and clean old ^XUSEC(0,"CUR",duz,sign-on) nodes.
"RTN","XQ82",54,0)
 D L51("CUR")
"RTN","XQ82",55,0)
 Q
"RTN","XQ82",56,0)
 ;
"RTN","XQ82",57,0)
L5 ;Now go through and clean old ^XUSEC(0,"AS*" nodes.
"RTN","XQ82",58,0)
 D L51("AS1"),L51("AS2")
"RTN","XQ82",59,0)
 Q
"RTN","XQ82",60,0)
 ;
"RTN","XQ82",61,0)
L6 ;Clean out old build nodes from ^XUTL
"RTN","XQ82",62,0)
 S K=""
"RTN","XQ82",63,0)
 F  S K=$O(^XUTL("XQO",K)) Q:K=""  D
"RTN","XQ82",64,0)
 . I $D(^XUTL("XQO",K,"^BUILD")),($P($H,",",2)-^("^BUILD")>1800)!(^("^BUILD")>$P($H,",",2)) K ^("^BUILD")
"RTN","XQ82",65,0)
 Q
"RTN","XQ82",66,0)
 ;
"RTN","XQ82",67,0)
L7 ;Kill ^DISV for TERMINATED or DISUSER Users.
"RTN","XQ82",68,0)
 N DA,USER
"RTN","XQ82",69,0)
 S DA="",U="^"
"RTN","XQ82",70,0)
 F  S DA=$O(^DISV(DA)) Q:DA=""  S USER=$$ACTIVE^XUSER(DA) I '(+USER) K ^DISV(DA)
"RTN","XQ82",71,0)
 Q
"RTN","XQ82",72,0)
 ;
"RTN","XQ82",73,0)
L8 ;Loop top level of ^XUTL
"RTN","XQ82",74,0)
 S A=0
"RTN","XQ82",75,0)
 F  S A=$O(^XUTL(A)) Q:'A  I '$D(^XUTL("XQ",A)) K ^XUTL(A)
"RTN","XQ82",76,0)
 Q
"RTN","XQ82",77,0)
 ;
"RTN","XQ82",78,0)
L51(NDX) ;Clean old Sign-on log entries from X-ref
"RTN","XQ82",79,0)
 N I,J,FDA,NOW,ERR,IEN
"RTN","XQ82",80,0)
 S I="",NOW=$$NOW^XLFDT
"RTN","XQ82",81,0)
 F  S I=$O(^XUSEC(0,NDX,I)) Q:I=""  F J=0:0 S J=$O(^XUSEC(0,NDX,I,J)) Q:(J'>0)  D
"RTN","XQ82",82,0)
 . ;Look at every entry in the X-ref, check for data record
"RTN","XQ82",83,0)
 . I $D(^XUSEC(0,J,0))[0 K ^XUSEC(0,NDX,I,J) Q  ;No data record.
"RTN","XQ82",84,0)
 . Q:J'<DDATE  ;Keep for now
"RTN","XQ82",85,0)
 . S FDA(3.081,J_",",3)=NOW,FDA(3.081,J_",",16)=1 D UPDATE^DIE("","FDA","IEN","ERR")
"RTN","XQ82",86,0)
 . K FDA,IEN,ERR
"RTN","XQ82",87,0)
 . Q
"RTN","XQ82",88,0)
 Q
"RTN","XQ82",89,0)
 ;
"RTN","XQ82",90,0)
DEAD(X1) ;Check if X1 is a PID and DEAD
"RTN","XQ82",91,0)
 ;Return 1 if should clean, 0 to skip
"RTN","XQ82",92,0)
 I X1\1'=X1 Q 0
"RTN","XQ82",93,0)
 ;a PID on VMS has a part that is fixed, not so under Linux so the following line was dropped.
"RTN","XQ82",94,0)
 I XQOS="VMS",$E($$CNV^XLFUTL(X1,16),1,3)'=$E(HPID3,1,3) Q 0
"RTN","XQ82",95,0)
 ;We should only come here
"RTN","XQ82",96,0)
 ;is X1 a PID on this node and is PID active?..
"RTN","XQ82",97,0)
 I $D(^$JOB(X1))=0 Q 1 ; Job is DEAD
"RTN","XQ82",98,0)
 Q 0
"RTN","XQ82",99,0)
 ;
"RTN","XQ82",100,0)
CHECK() ;Check that we have the right enviroment to do pass 2
"RTN","XQ82",101,0)
 ;GTM must be on one big box.
"RTN","XQ82",102,0)
 I XQVND["GT.M" Q 0
"RTN","XQ82",103,0)
 ;Are we on Cache, ^$JOB is supported.
"RTN","XQ82",104,0)
 ;Get value of LOCAL TMP (.07) to see if ^TMP, ^UTILITY and ^XUTL("XQ" are local.
"RTN","XQ82",105,0)
 I XQVND["OpenM" Q +$P($G(^XTV(8989.3,1,0)),"^",7) ;p554
"RTN","XQ82",106,0)
 Q 0
"RTN","XQ82",107,0)
 ;
"RTN","XU8P554")
0^^B381642^n/a
"RTN","XU8P554",1,0)
XU8P554 ;O-OIFO/GMB-Check field .07 in file 8989.3 ;3/9/2011
"RTN","XU8P554",2,0)
 ;;8.0;KERNEL;**554**;Jul 10, 1995;Build 4
"RTN","XU8P554",3,0)
 Q
"RTN","XU8P554",4,0)
 ;
"RTN","XU8P554",5,0)
POST ; Post-Init
"RTN","XU8P554",6,0)
 D BMES^XPDUTL("Beginning Post-Installation...")
"RTN","XU8P554",7,0)
 I "^^0^1^"'[(U_$P(^XTV(8989.3,1,0),U,7)_U) S $P(^(0),U,7)=""
"RTN","XU8P554",8,0)
 D BMES^XPDUTL("Finished Post-Installation.")
"RTN","XU8P554",9,0)
 Q
"RTN","XUTMHR")
0^1^B30318359^B29133359
"RTN","XUTMHR",1,0)
XUTMHR ;ISF/RWF - Taskman Hourly checkup routine. ;10/20/10  17:13
"RTN","XUTMHR",2,0)
 ;;8.0;KERNEL;**446,534,554**;Jul 10, 1995;Build 4
"RTN","XUTMHR",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XUTMHR",4,0)
 Q
"RTN","XUTMHR",5,0)
 ;
"RTN","XUTMHR",6,0)
HOUR ;Work to do each hour
"RTN","XUTMHR",7,0)
 D SCAN ;Look for scheduled task that have dropped there schedule.
"RTN","XUTMHR",8,0)
 D DEVREJ() ;Check for tasks re-scheduled for unavailable device.
"RTN","XUTMHR",9,0)
 Q
"RTN","XUTMHR",10,0)
 ;
"RTN","XUTMHR",11,0)
SCAN ;Scan the Scheduled Tasks file.  Merge with XUTMCS sometime.
"RTN","XUTMHR",12,0)
 N D0,OLD,NOW,X,X1,X2,Z0,Z4,Z5,TK
"RTN","XUTMHR",13,0)
 ;Make NOW 10 minute in the past
"RTN","XUTMHR",14,0)
 S U="^",D0=0,NOW=$$HTFM^XLFDT($$HADD^XLFDT($H,,,-10)),OLD=$$HTFM^XLFDT($H-1)
"RTN","XUTMHR",15,0)
 F  S D0=$O(^DIC(19.2,D0)) Q:'D0  D  L -^DIC(19.2,D0)
"RTN","XUTMHR",16,0)
 . L +^DIC(19.2,D0):2 I '$T Q
"RTN","XUTMHR",17,0)
 . S X=$G(^DIC(19.2,D0,0)),X1=+$G(^(1)) ;X1 is the task #.
"RTN","XUTMHR",18,0)
 . ;Check that the Option still exists.
"RTN","XUTMHR",19,0)
 . I '($D(^DIC(19,+X,0))#2) D REMOVE(D0) Q
"RTN","XUTMHR",20,0)
 . I $P(X,U,2)="" Q  ;No Scheduled time.
"RTN","XUTMHR",21,0)
 . ;Lock the Task
"RTN","XUTMHR",22,0)
 . L +^%ZTSK(X1):5 I $T D  L -^%ZTSK(X1)
"RTN","XUTMHR",23,0)
 . . ;I $P(X,U,9)["S" Q  ;Start-up.
"RTN","XUTMHR",24,0)
 . . I $P(X,U,2)>NOW,$D(^%ZTSK(X1)) Q  ;Scheduled for future
"RTN","XUTMHR",25,0)
 . . ;ToDo Check if Device OK.
"RTN","XUTMHR",26,0)
 . . I X1,'$D(^%ZTSK(X1)) D FIX(D0,X) Q  ;%ZTSK entry missing
"RTN","XUTMHR",27,0)
 . . S TK=$G(^%ZTSK(X1,0))
"RTN","XUTMHR",28,0)
 . . I $P(X,U,2)>OLD,$L($P(X,U,6)) D FIX(D0,X,$P(TK,U,3)) Q  ;
"RTN","XUTMHR",29,0)
 . . Q
"RTN","XUTMHR",30,0)
 . Q
"RTN","XUTMHR",31,0)
 S ZTREQ="@"
"RTN","XUTMHR",32,0)
 Q
"RTN","XUTMHR",33,0)
 ;
"RTN","XUTMHR",34,0)
FIX(DA,X,USER) ;Reschedule
"RTN","XUTMHR",35,0)
 N FDA,IEN,Y,DUZ
"RTN","XUTMHR",36,0)
 S Y=$$APFIND^XUSAP("TASKMAN,PROXY USER")
"RTN","XUTMHR",37,0)
 S DUZ=$S($G(USER):USER,Y>0:Y,1:.5)
"RTN","XUTMHR",38,0)
 S Y=$$SCH^XLFDT($P(X,U,6),$P(X,U,2),1),IEN=DA_"," Q:'Y
"RTN","XUTMHR",39,0)
 S FDA(19.2,IEN,2)=Y
"RTN","XUTMHR",40,0)
 D FILE^DIE("K","FDA")
"RTN","XUTMHR",41,0)
 Q
"RTN","XUTMHR",42,0)
 ;
"RTN","XUTMHR",43,0)
REMOVE(DA) ;Remove if pointed to option is missing
"RTN","XUTMHR",44,0)
 N DIK
"RTN","XUTMHR",45,0)
 S DIK="^DIC(19.2," D ^DIK
"RTN","XUTMHR",46,0)
 Q
"RTN","XUTMHR",47,0)
 ;
"RTN","XUTMHR",48,0)
DEVREJ(SKIP) ;Rejected Device cleanup
"RTN","XUTMHR",49,0)
 N ZTSK,ZTDTH,CNT,VOL,Y,TRY,X,Z,XMB,XMY
"RTN","XUTMHR",50,0)
 D GETENV^%ZOSV S VOL=$P(Y,U,2),Y=$O(^%ZIS(14.5,"B",VOL,0)) Q:'Y
"RTN","XUTMHR",51,0)
 S TRY=$P(^%ZIS(14.5,Y,0),U,12),SKIP=$G(SKIP) Q:'TRY
"RTN","XUTMHR",52,0)
 S ZTDTH=0
"RTN","XUTMHR",53,0)
 F  S ZTDTH=$O(^%ZTSCH(ZTDTH)),ZTSK=0 Q:'ZTDTH  F  S ZTSK=$O(^%ZTSCH(ZTDTH,ZTSK)) Q:'ZTSK  D
"RTN","XUTMHR",54,0)
 . L +^%ZTSK(ZTSK):5 Q:'$T  D  ;Catch next time. p554
"RTN","XUTMHR",55,0)
 . . Q:'$D(^%ZTSK(ZTSK,0))
"RTN","XUTMHR",56,0)
 . . S Z=^%ZTSK(ZTSK,0),Y=$G(^%ZTSK(ZTSK,.2)),X=$P(Y,U,8)
"RTN","XUTMHR",57,0)
 . . I X>TRY D UNSCH(ZTSK,$P(Z,U,3),$S($L($P(Y,U,6)):$P(Y,U,6),1:$P(Y,U)),SKIP)
"RTN","XUTMHR",58,0)
 . . Q
"RTN","XUTMHR",59,0)
 . L -^%ZTSK(ZTSK)
"RTN","XUTMHR",60,0)
 . Q
"RTN","XUTMHR",61,0)
 Q
"RTN","XUTMHR",62,0)
 ;
"RTN","XUTMHR",63,0)
UNSCH(ZTSK,DZ,DEV,SKIP) ;Unschedule Task and send alert
"RTN","XUTMHR",64,0)
 N XQA,XQAMSG,XQADATA,XQAROU
"RTN","XUTMHR",65,0)
 D DQ^%ZTLOAD
"RTN","XUTMHR",66,0)
 S XQA(DZ)="",XQAMSG="Your task #"_ZTSK_" was unscheduled, because it could not get device "_DEV,XQADATA=ZTSK,XQAROU="XQA^XUTMUTL"
"RTN","XUTMHR",67,0)
 I 'SKIP D SETUP^XQALERT Q
"RTN","XUTMHR",68,0)
 W !,XQAMSG
"RTN","XUTMHR",69,0)
 Q
"RTN","XUTMHR",70,0)
 ;
"RTN","XUTMHR",71,0)
EN(ZTQPARAM) ;So can job it to run.
"RTN","XUTMHR",72,0)
 ;
"RTN","XUTMHR",73,0)
SNAP ;Snapshot ZTMON data into the TASKMAN SNAPSHOT file.
"RTN","XUTMHR",74,0)
 S U="^"
"RTN","XUTMHR",75,0)
 N %,FDA,I2,I3,IEN,NOWH3,R2,R3,SI,X,ZT1,ZT2,ZT3,ZT4,ZT5,ZTC,ZTC2,ZTQ1,ZTQ2
"RTN","XUTMHR",76,0)
 S ZTQPARAM=$G(ZTQPARAM,"60,60") ;Default run for 60 minutes, snap every minute
"RTN","XUTMHR",77,0)
 S ZTQ1=+ZTQPARAM*60 ;Convert minutes to seconds.
"RTN","XUTMHR",78,0)
 S:ZTQ1>480 ZTQ1=480 ;Max 8 hours
"RTN","XUTMHR",79,0)
 S ZTQ2=+$P(ZTQPARAM,",",2)
"RTN","XUTMHR",80,0)
 S ZTQ2=$S(ZTQ2<2:2,ZTQ2>ZTQ1:ZTQ1,1:ZTQ2) ;See in bounds
"RTN","XUTMHR",81,0)
 ;
"RTN","XUTMHR",82,0)
 F  D SN2 S ZTQ1=ZTQ1-ZTQ2 Q:'ZTQ1  H ZTQ2
"RTN","XUTMHR",83,0)
 Q
"RTN","XUTMHR",84,0)
 ;
"RTN","XUTMHR",85,0)
SN2 ;Do the snapshot
"RTN","XUTMHR",86,0)
 K IEN,FDA,%,R2,R3,SI,I2,I3
"RTN","XUTMHR",87,0)
 S IEN="+1,",NOWH3=$$H3^%ZTM($H)
"RTN","XUTMHR",88,0)
 S FDA(14.72,IEN,.01)=$$NOW^XLFDT
"RTN","XUTMHR",89,0)
 S FDA(14.72,IEN,2)=$$TM^ZTLOAD
"RTN","XUTMHR",90,0)
 S ZT1="",ZT2=0,SI=101,R2=14.72101
"RTN","XUTMHR",91,0)
 ;Get the Manager status data
"RTN","XUTMHR",92,0)
 F  S ZT1=$O(^%ZTSCH("STATUS",ZT1)) Q:ZT1=""  S X=^(ZT1) D
"RTN","XUTMHR",93,0)
 . S ZT2=ZT2+1,I2="+"_SI_","_IEN,SI=SI+1
"RTN","XUTMHR",94,0)
 . S FDA(R2,I2,.01)=ZT1,FDA(R2,I2,2)=$P(X,U),FDA(R2,I2,3)=$P(X,U,2)
"RTN","XUTMHR",95,0)
 . S FDA(R2,I2,4)=$P(X,U,3),FDA(R2,I2,5)=$P(X,U,4)
"RTN","XUTMHR",96,0)
 . Q
"RTN","XUTMHR",97,0)
 S FDA(14.72,IEN,3)=ZT2
"RTN","XUTMHR",98,0)
 ;Check and get the LOAD Balance data
"RTN","XUTMHR",99,0)
 S %=$G(^%ZTSCH("LOAD")),FDA(14.72,IEN,4)=$P(%,U),FDA(14.72,IEN,5)=$P(%,U,2)
"RTN","XUTMHR",100,0)
 ;S ZT1=$O(^%ZTSCH(1)),FDA(14.72,IEN,8)=$$LATE(ZT1,NOWH3)
"RTN","XUTMHR",101,0)
 S ZT1=1,ZT2=0,ZT3=0,ZTC=0,ZTC2=0,ZT5=0
"RTN","XUTMHR",102,0)
 ;Look at the task schedule list
"RTN","XUTMHR",103,0)
 ;ZT3 late amount, ZT5 is current time late, ZTC2 is count of late tasks.
"RTN","XUTMHR",104,0)
 F  S ZT1=$O(^%ZTSCH(ZT1)),ZT2=0 Q:'ZT1  S ZT5=$$LATE(ZT1,NOWH3) S:'ZT3 ZT3=ZT5 D
"RTN","XUTMHR",105,0)
 . F  S ZT2=$O(^%ZTSCH(ZT1,ZT2)) Q:'ZT2  S ZTC=ZTC+1 S:ZT5 ZTC2=ZTC2+1
"RTN","XUTMHR",106,0)
 S FDA(14.72,IEN,7)=ZTC,FDA(14.72,IEN,8)=ZT3,FDA(14.72,IEN,9)=ZTC2
"RTN","XUTMHR",107,0)
 ;Look at the IO list
"RTN","XUTMHR",108,0)
 S ZT1="",ZTC=0
"RTN","XUTMHR",109,0)
 F  S ZT1=$O(^%ZTSCH("IO",ZT1)) Q:ZT1=""  S:$O(^%ZTSCH("IO",ZT1,0)) ZTC=ZTC+1
"RTN","XUTMHR",110,0)
 S FDA(14.72,IEN,10)=ZTC
"RTN","XUTMHR",111,0)
 S ZT1="",ZT2=0,ZT3=0,ZT4=0,ZTC=0
"RTN","XUTMHR",112,0)
 F  S ZT1=$O(^%ZTSCH("IO",ZT1)),ZT2=0 Q:'ZT1  F  S ZT2=$O(^%ZTSCH("IO",ZT1,ZT2)),ZT3=0 Q:'ZT2  S:'ZT4 ZT4=ZT2 F  S ZT3=$O(^%ZTSCH("IO",ZT1,ZT2,ZT3)) Q:ZT3=""  S ZTC=ZTC+1
"RTN","XUTMHR",113,0)
 S FDA(14.72,IEN,11)=ZTC,FDA(14.72,IEN,12)=ZT4
"RTN","XUTMHR",114,0)
 ;Look at the JOB list
"RTN","XUTMHR",115,0)
 S ZT1=0,ZT2=0,ZT3=0,ZTC=0
"RTN","XUTMHR",116,0)
 F  S ZT1=$O(^%ZTSCH("JOB",ZT1)),ZT2=0 Q:'ZT1  F  S ZT2=$O(^%ZTSCH("JOB",ZT1,ZT2)) Q:'ZT2  S ZTC=ZTC+1
"RTN","XUTMHR",117,0)
 ;Look at the C list
"RTN","XUTMHR",118,0)
 S ZT1="",ZT2=0,ZT3=0
"RTN","XUTMHR",119,0)
 F  S ZT1=$O(^%ZTSCH("C",ZT1)),ZT2=0 Q:ZT1=""  F  S ZT2=$O(^%ZTSCH("C",ZT1,ZT2)),ZT3=0 Q:ZT2=""  F  S ZT3=$O(^%ZTSCH("C",ZT1,ZT2,ZT3)) Q:ZT3=""  S ZTC=ZTC+1
"RTN","XUTMHR",120,0)
 S FDA(14.72,IEN,15)=ZTC
"RTN","XUTMHR",121,0)
 S FDA(14.72,IEN,16)=$$LATE($O(^%ZTSCH("JOB",1)),NOWH3)
"RTN","XUTMHR",122,0)
 ;Look at the running Task list
"RTN","XUTMHR",123,0)
 S ZT1=0,ZT2=0,ZT3=0,ZTC=0
"RTN","XUTMHR",124,0)
 F  S ZT1=$O(^%ZTSCH("TASK",ZT1)) Q:'ZT1  S ZTC=ZTC+1
"RTN","XUTMHR",125,0)
 S FDA(14.72,IEN,20)=ZTC
"RTN","XUTMHR",126,0)
 ;Look at the SUB-Managers
"RTN","XUTMHR",127,0)
 S ZT1=0,ZT2=0,ZT3=0,ZTC=0,R3=14.72201,SI=201
"RTN","XUTMHR",128,0)
 F  S ZT1=$O(^%ZTSCH("SUB",ZT1)),ZT2=0 Q:'$L(ZT1)  F  S ZT2=$O(^%ZTSCH("SUB",ZT1,ZT2)) Q:'ZT2  S X=^(ZT2) D
"RTN","XUTMHR",129,0)
 . S ZTC=ZTC+1,I3="+"_SI_","_IEN,SI=SI+1
"RTN","XUTMHR",130,0)
 . S FDA(R3,I3,.01)=ZT2,FDA(R3,I3,2)=$P(X,U),FDA(R3,I3,3)=$P(X,U,2),FDA(R3,I3,4)=$P(X,U,3),FDA(R3,I3,5)=ZT1
"RTN","XUTMHR",131,0)
 . Q
"RTN","XUTMHR",132,0)
 S FDA(14.72,IEN,19)=ZTC
"RTN","XUTMHR",133,0)
 S FDA(14.72,IEN,22)=$$ACTJ^%ZOSV() ;Total jobs
"RTN","XUTMHR",134,0)
 ;Now save the data.
"RTN","XUTMHR",135,0)
 L +^%ZIS(14.72,0):10 D UPDATE^DIE("S","FDA") L -^%ZIS(14.72,0)
"RTN","XUTMHR",136,0)
 I $D(^TMP("DIERR",$J)) D ^%ZTER
"RTN","XUTMHR",137,0)
 Q
"RTN","XUTMHR",138,0)
 ;
"RTN","XUTMHR",139,0)
LATE(T1,NOW) ;Return if a H3 time is Late
"RTN","XUTMHR",140,0)
 S:T1["," T1=$$H3^%ZTM(T1)
"RTN","XUTMHR",141,0)
 Q $S(T1<1:0,T1<NOW:NOW-T1,1:0)
"VER")
8.0^22.0
"^DD",8989.3,8989.3,.07,0)
LOCAL TMP^S^0:No;1:Yes;^0;7^Q
"^DD",8989.3,8989.3,.07,3)
Are ^TMP, ^UTILITY, & ^XUTL("XQ") local to each node in a multi-node system as in Cache?
"^DD",8989.3,8989.3,.07,21,0)
^.001^4^4^3110309^^^^
"^DD",8989.3,8989.3,.07,21,1,0)
Set this field to Yes if ^TMP, ^UTILITY, and ^XUTL("XQ") are local to 
"^DD",8989.3,8989.3,.07,21,2,0)
each node in a multi-node system as in Cache. Set it to No if everything
"^DD",8989.3,8989.3,.07,21,3,0)
is clustered together.
"^DD",8989.3,8989.3,.07,21,4,0)

"^DD",8989.3,8989.3,.07,"DT")
3101110
"BLD",1333,6)
^456
**END**
**END**
