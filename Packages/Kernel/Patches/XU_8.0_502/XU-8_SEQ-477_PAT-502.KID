Released XU*8*502 SEQ #477
Extracted from mail message
**KIDS**:XU*8.0*502^

**INSTALL NAME**
XU*8.0*502
"BLD",6427,0)
XU*8.0*502^KERNEL^0^3120702^y
"BLD",6427,4,0)
^9.64PA^4.001^2
"BLD",6427,4,4.001,0)
4.001
"BLD",6427,4,4.001,2,0)
^9.641^4.001^1
"BLD",6427,4,4.001,2,4.001,0)
MASTER FILE PARAMETERS  (File-top level)
"BLD",6427,4,4.001,2,4.001,1,0)
^9.6411^.09^2
"BLD",6427,4,4.001,2,4.001,1,.08,0)
SORT BY
"BLD",6427,4,4.001,2,4.001,1,.09,0)
FILTER BY
"BLD",6427,4,4.001,222)
y^y^p^^^^n^^n
"BLD",6427,4,4.001,224)

"BLD",6427,4,4.005,0)
4.005
"BLD",6427,4,4.005,2,0)
^9.641^4.005^1
"BLD",6427,4,4.005,2,4.005,0)
MD5 Signature  (File-top level)
"BLD",6427,4,4.005,2,4.005,1,0)
^9.6411^8^2
"BLD",6427,4,4.005,2,4.005,1,7,0)
SORT BY
"BLD",6427,4,4.005,2,4.005,1,8,0)
FILTER BY
"BLD",6427,4,4.005,222)
y^y^p^^^^n^^n
"BLD",6427,4,4.005,224)

"BLD",6427,4,"APDD",4.001,4.001)

"BLD",6427,4,"APDD",4.001,4.001,.08)

"BLD",6427,4,"APDD",4.001,4.001,.09)

"BLD",6427,4,"APDD",4.005,4.005)

"BLD",6427,4,"APDD",4.005,4.005,7)

"BLD",6427,4,"APDD",4.005,4.005,8)

"BLD",6427,4,"B",4.001,4.001)

"BLD",6427,4,"B",4.005,4.005)

"BLD",6427,6.3)
17
"BLD",6427,"ABPKG")
n
"BLD",6427,"INIT")
MAIN^XUMF502P
"BLD",6427,"KRN",0)
^9.67PA^779.2^20
"BLD",6427,"KRN",.4,0)
.4
"BLD",6427,"KRN",.401,0)
.401
"BLD",6427,"KRN",.402,0)
.402
"BLD",6427,"KRN",.403,0)
.403
"BLD",6427,"KRN",.5,0)
.5
"BLD",6427,"KRN",.84,0)
.84
"BLD",6427,"KRN",3.6,0)
3.6
"BLD",6427,"KRN",3.8,0)
3.8
"BLD",6427,"KRN",9.2,0)
9.2
"BLD",6427,"KRN",9.8,0)
9.8
"BLD",6427,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",6427,"KRN",9.8,"NM",1,0)
XUMF502P^^0^B16782812
"BLD",6427,"KRN",9.8,"NM",2,0)
XUMF5I^^0^B96778215
"BLD",6427,"KRN",9.8,"NM",3,0)
XUMFQR^^0^B53643395
"BLD",6427,"KRN",9.8,"NM",4,0)
XUMF502^^0^B4789792
"BLD",6427,"KRN",9.8,"NM","B","XUMF502",4)

"BLD",6427,"KRN",9.8,"NM","B","XUMF502P",1)

"BLD",6427,"KRN",9.8,"NM","B","XUMF5I",2)

"BLD",6427,"KRN",9.8,"NM","B","XUMFQR",3)

"BLD",6427,"KRN",19,0)
19
"BLD",6427,"KRN",19,"NM",0)
^9.68A^^
"BLD",6427,"KRN",19.1,0)
19.1
"BLD",6427,"KRN",101,0)
101
"BLD",6427,"KRN",409.61,0)
409.61
"BLD",6427,"KRN",771,0)
771
"BLD",6427,"KRN",779.2,0)
779.2
"BLD",6427,"KRN",870,0)
870
"BLD",6427,"KRN",8989.51,0)
8989.51
"BLD",6427,"KRN",8989.52,0)
8989.52
"BLD",6427,"KRN",8994,0)
8994
"BLD",6427,"KRN","B",.4,.4)

"BLD",6427,"KRN","B",.401,.401)

"BLD",6427,"KRN","B",.402,.402)

"BLD",6427,"KRN","B",.403,.403)

"BLD",6427,"KRN","B",.5,.5)

"BLD",6427,"KRN","B",.84,.84)

"BLD",6427,"KRN","B",3.6,3.6)

"BLD",6427,"KRN","B",3.8,3.8)

"BLD",6427,"KRN","B",9.2,9.2)

"BLD",6427,"KRN","B",9.8,9.8)

"BLD",6427,"KRN","B",19,19)

"BLD",6427,"KRN","B",19.1,19.1)

"BLD",6427,"KRN","B",101,101)

"BLD",6427,"KRN","B",409.61,409.61)

"BLD",6427,"KRN","B",771,771)

"BLD",6427,"KRN","B",779.2,779.2)

"BLD",6427,"KRN","B",870,870)

"BLD",6427,"KRN","B",8989.51,8989.51)

"BLD",6427,"KRN","B",8989.52,8989.52)

"BLD",6427,"KRN","B",8994,8994)

"BLD",6427,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",6427,"QUES",0)
^9.62^^
"BLD",6427,"REQB",0)
^9.611^1^1
"BLD",6427,"REQB",1,0)
XU*8.0*407^2
"BLD",6427,"REQB","B","XU*8.0*407",1)

"FIA",4.001)
MASTER FILE PARAMETERS
"FIA",4.001,0)
^DIC(4.001,
"FIA",4.001,0,0)
4.001P
"FIA",4.001,0,1)
y^y^p^^^^n^^n
"FIA",4.001,0,10)

"FIA",4.001,0,11)

"FIA",4.001,0,"RLRO")

"FIA",4.001,0,"VR")
8.0^XU
"FIA",4.001,4.001)
1
"FIA",4.001,4.001,.08)

"FIA",4.001,4.001,.09)

"FIA",4.005)
MD5 Signature
"FIA",4.005,0)
^DIC(4.005,
"FIA",4.005,0,0)
4.005
"FIA",4.005,0,1)
y^y^p^^^^n^^n
"FIA",4.005,0,10)

"FIA",4.005,0,11)

"FIA",4.005,0,"RLRO")

"FIA",4.005,0,"VR")
8.0^XU
"FIA",4.005,4.005)
1
"FIA",4.005,4.005,7)

"FIA",4.005,4.005,8)

"INIT")
MAIN^XUMF502P
"MBREQ")
0
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3040115^2960606^1
"PKG",3,22,1,"PAH",1,0)
502^3120702^11
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","XUMF502")
0^4^B4789792^n/a
"RTN","XUMF502",1,0)
XUMF502 ;RAM - XUMF502 ;04/15/02 ;9/10/08  11:55
"RTN","XUMF502",2,0)
 ;;8.0;KERNEL;**502**;Jul 10, 1995;Build 17
"RTN","XUMF502",3,0)
 ;
"RTN","XUMF502",4,0)
 Q
"RTN","XUMF502",5,0)
 ;
"RTN","XUMF502",6,0)
 ;
"RTN","XUMF502",7,0)
MFE ;
"RTN","XUMF502",8,0)
 ;
"RTN","XUMF502",9,0)
 N X,Y
"RTN","XUMF502",10,0)
 ;
"RTN","XUMF502",11,0)
 S IEN=$O(^LEX(757.33,"B",VUID,0))
"RTN","XUMF502",12,0)
 ;
"RTN","XUMF502",13,0)
 Q:IEN
"RTN","XUMF502",14,0)
 ;
"RTN","XUMF502",15,0)
 D CHK^DIE(757.33,.01,,VUID,.X)
"RTN","XUMF502",16,0)
 I X="^" S ERROR="1^validation error 757.33 MAPPINGS FILE map ID= "_VUID Q
"RTN","XUMF502",17,0)
 K DIC S DIC=757.33,DIC(0)="F" D FILE^DICN K DIC
"RTN","XUMF502",18,0)
 I Y="-1" S ERROR="1^error 757.33 MAPPINGS FILE map ID= "_VUID Q
"RTN","XUMF502",19,0)
 S IEN=+Y,RECORD("NEW")=1
"RTN","XUMF502",20,0)
 ;
"RTN","XUMF502",21,0)
 Q
"RTN","XUMF502",22,0)
 ;
"RTN","XUMF502",23,0)
ZRT ;
"RTN","XUMF502",24,0)
 ;
"RTN","XUMF502",25,0)
 I $G(NAME)="EffectiveDate" D STATUS Q
"RTN","XUMF502",26,0)
 I $G(NAME)="MapDefinition" D MAPDEF Q
"RTN","XUMF502",27,0)
 ;
"RTN","XUMF502",28,0)
 Q
"RTN","XUMF502",29,0)
 ;
"RTN","XUMF502",30,0)
STATUS ;
"RTN","XUMF502",31,0)
 ;
"RTN","XUMF502",32,0)
 I $D(FDA) D UPDATE^XUMF1H K FDA
"RTN","XUMF502",33,0)
 ;
"RTN","XUMF502",34,0)
 N VALUE,FDA
"RTN","XUMF502",35,0)
 ;
"RTN","XUMF502",36,0)
 S VALUE=$$UNESC^XUMF0($P(HLNODE,HLFS,3),.HL)
"RTN","XUMF502",37,0)
 S VALUE=$$DTYP^XUMFXP(VALUE,"DT",HLCS,0,"L")
"RTN","XUMF502",38,0)
 ;
"RTN","XUMF502",39,0)
 ;S IEN1=$O(^LEX(757.33,2485,2,99999),-1),IEN1=IEN1+1
"RTN","XUMF502",40,0)
 ;
"RTN","XUMF502",41,0)
 K FDA
"RTN","XUMF502",42,0)
 S FDA(757.333,"?+1,"_IEN_",",.01)=VALUE
"RTN","XUMF502",43,0)
 ;
"RTN","XUMF502",44,0)
 X HLNEXT I HLQUIT'>0 S ERROR="1^status error" Q
"RTN","XUMF502",45,0)
 ;
"RTN","XUMF502",46,0)
 I $P(HLNODE,HLFS,2)'="Active" S ERROR="1^status error" Q
"RTN","XUMF502",47,0)
 S VALUE=$$UNESC^XUMF0($P(HLNODE,HLFS,3),.HL)
"RTN","XUMF502",48,0)
 S VALUE=$$DTYP^XUMFXP(VALUE,"ST",HLCS,0)
"RTN","XUMF502",49,0)
 ;
"RTN","XUMF502",50,0)
 S FDA(757.333,"?+1,"_IEN_",",1)=$S(VALUE:"ACTIVE",1:"INACTIVE")
"RTN","XUMF502",51,0)
 ;
"RTN","XUMF502",52,0)
 D UPDATE^DIE("E","FDA",,"ERR")
"RTN","XUMF502",53,0)
 I $D(ERR) D  Q
"RTN","XUMF502",54,0)
 .S ERROR="1^status update error"
"RTN","XUMF502",55,0)
 .D EM^XUMF1H(ERROR,.ERR) K ERR
"RTN","XUMF502",56,0)
 ;
"RTN","XUMF502",57,0)
 S OUT=1
"RTN","XUMF502",58,0)
 ;
"RTN","XUMF502",59,0)
 Q
"RTN","XUMF502",60,0)
 ;
"RTN","XUMF502",61,0)
MAPDEF ;
"RTN","XUMF502",62,0)
 ;
"RTN","XUMF502",63,0)
 N VALUE,IENS
"RTN","XUMF502",64,0)
 ;
"RTN","XUMF502",65,0)
 S IENS=IEN_","
"RTN","XUMF502",66,0)
 S VALUE=$$UNESC^XUMF0($P(HLNODE,HLFS,3),.HL)
"RTN","XUMF502",67,0)
 S VALUE=$O(^LEX(757.32,"C",VALUE,0))
"RTN","XUMF502",68,0)
 S FDA(IFN,IENS,.02)=VALUE
"RTN","XUMF502",69,0)
 S OUT=1
"RTN","XUMF502",70,0)
 ;
"RTN","XUMF502",71,0)
 Q
"RTN","XUMF502",72,0)
 ;
"RTN","XUMF502",73,0)
STAT() ;
"RTN","XUMF502",74,0)
 ;
"RTN","XUMF502",75,0)
 N X
"RTN","XUMF502",76,0)
 S X=$O(^LEX(757.33,IEN,2,999),-1) Q:'X ""
"RTN","XUMF502",77,0)
 Q $P($G(^LEX(757.33,IEN,2,X,0)),U,2)
"RTN","XUMF502",78,0)
 ;
"RTN","XUMF502P")
0^1^B16782812^n/a
"RTN","XUMF502P",1,0)
XUMF502P ;OIFO-BP/RAM - Master File Parameters Mappings ;8/11/09  06:39
"RTN","XUMF502P",2,0)
 ;;8.0;KERNEL;**502**;Jul 10, 1995;Build 17
"RTN","XUMF502P",3,0)
 ;Per VHA Directive 10-92-142, this routine should not be modified
"RTN","XUMF502P",4,0)
 ;
"RTN","XUMF502P",5,0)
 Q
"RTN","XUMF502P",6,0)
 ;
"RTN","XUMF502P",7,0)
MAIN ; -- Entry point
"RTN","XUMF502P",8,0)
 ;
"RTN","XUMF502P",9,0)
 ;Q:'$D(^DD(757.33))
"RTN","XUMF502P",10,0)
 ;
"RTN","XUMF502P",11,0)
 N FDA,IENS,FIELD,ERR,SEQ,XUMF,X
"RTN","XUMF502P",12,0)
 ;
"RTN","XUMF502P",13,0)
 S XUMF=1,IEN=757.33
"RTN","XUMF502P",14,0)
 ;
"RTN","XUMF502P",15,0)
 D ZERO,CLEAN,NODES,MD5,EXIT
"RTN","XUMF502P",16,0)
 ;
"RTN","XUMF502P",17,0)
 Q
"RTN","XUMF502P",18,0)
 ;
"RTN","XUMF502P",19,0)
ZERO ; -- zero node
"RTN","XUMF502P",20,0)
 ;
"RTN","XUMF502P",21,0)
 N DIC,DA,X,DINUM,Y
"RTN","XUMF502P",22,0)
 ;
"RTN","XUMF502P",23,0)
 K DIC S DIC="^DIC(4.001,",X=IEN,DINUM=X,DIC(0)="F" D FILE^DICN K DIC
"RTN","XUMF502P",24,0)
 S IENS=IEN_","
"RTN","XUMF502P",25,0)
 ;S FDA(4.001,IENS,.01)=757.33
"RTN","XUMF502P",26,0)
 S FDA(4.001,IENS,.03)="Mappings"
"RTN","XUMF502P",27,0)
 S FDA(4.001,IENS,.07)="Mappings"
"RTN","XUMF502P",28,0)
 S FDA(4.001,IENS,.08)="B"
"RTN","XUMF502P",29,0)
 S FDA(4.001,IENS,.09)="MapDefinition"
"RTN","XUMF502P",30,0)
 S FDA(4.001,IENS,4)="D MFE^XUMF502"
"RTN","XUMF502P",31,0)
 S FDA(4.001,IENS,5)="D ZRT^XUMF502"
"RTN","XUMF502P",32,0)
 ;S FDA(4.001,IENS,2)="D MFSUP^HDISVF09(,$G(ERROR))"
"RTN","XUMF502P",33,0)
 ;
"RTN","XUMF502P",34,0)
 D UPDATE^DIE("E","FDA",,"ERR")
"RTN","XUMF502P",35,0)
 I $D(ERR) D
"RTN","XUMF502P",36,0)
 .D EM("UPDATE ZERO error",.ERR)
"RTN","XUMF502P",37,0)
 .K ERR
"RTN","XUMF502P",38,0)
 ;
"RTN","XUMF502P",39,0)
 Q
"RTN","XUMF502P",40,0)
 ;
"RTN","XUMF502P",41,0)
CLEAN ; -- clean out SEQUENCE
"RTN","XUMF502P",42,0)
 ;
"RTN","XUMF502P",43,0)
 K FDA
"RTN","XUMF502P",44,0)
 S SEQ=0
"RTN","XUMF502P",45,0)
 F  S SEQ=$O(^DIC(4.001,IEN,1,SEQ)) Q:'SEQ  D
"RTN","XUMF502P",46,0)
 .S IENS=SEQ_","_IEN_","
"RTN","XUMF502P",47,0)
 .S FDA(4.011,IENS,.01)="@"
"RTN","XUMF502P",48,0)
 ;
"RTN","XUMF502P",49,0)
 D FILE^DIE("E","FDA")
"RTN","XUMF502P",50,0)
 ;
"RTN","XUMF502P",51,0)
 Q
"RTN","XUMF502P",52,0)
 ;
"RTN","XUMF502P",53,0)
NODES ; -- SEQUENCE
"RTN","XUMF502P",54,0)
 ;
"RTN","XUMF502P",55,0)
 K FDA
"RTN","XUMF502P",56,0)
 S IENS="+1,"_IEN_","
"RTN","XUMF502P",57,0)
 S FDA(4.011,IENS,.01)="MapDefinition"
"RTN","XUMF502P",58,0)
 S FDA(4.011,IENS,.02)=.02
"RTN","XUMF502P",59,0)
 S FDA(4.011,IENS,.15)=1,FDA(4.011,IENS,.13)="VUID"
"RTN","XUMF502P",60,0)
 ;
"RTN","XUMF502P",61,0)
 S IENS="+2,"_IEN_","
"RTN","XUMF502P",62,0)
 S FDA(4.011,IENS,.01)="SourceCode"
"RTN","XUMF502P",63,0)
 S FDA(4.011,IENS,.02)=1
"RTN","XUMF502P",64,0)
 S FDA(4.011,IENS,.15)=2
"RTN","XUMF502P",65,0)
 ;
"RTN","XUMF502P",66,0)
 S IENS="+3,"_IEN_","
"RTN","XUMF502P",67,0)
 S FDA(4.011,IENS,.01)="TargetCode"
"RTN","XUMF502P",68,0)
 S FDA(4.011,IENS,.02)=2
"RTN","XUMF502P",69,0)
 S FDA(4.011,IENS,.15)=3
"RTN","XUMF502P",70,0)
 ;
"RTN","XUMF502P",71,0)
 S IENS="+4,"_IEN_","
"RTN","XUMF502P",72,0)
 S FDA(4.011,IENS,.01)="Order"
"RTN","XUMF502P",73,0)
 S FDA(4.011,IENS,.02)=4
"RTN","XUMF502P",74,0)
 S FDA(4.011,IENS,.15)=4
"RTN","XUMF502P",75,0)
 ;
"RTN","XUMF502P",76,0)
 S IENS="+5,"_IEN_","
"RTN","XUMF502P",77,0)
 S FDA(4.011,IENS,.01)="Status"
"RTN","XUMF502P",78,0)
 S FDA(4.011,IENS,.02)=.01
"RTN","XUMF502P",79,0)
 S FDA(4.011,IENS,.04)=757.333
"RTN","XUMF502P",80,0)
 S FDA(4.011,IENS,.06)="Status"
"RTN","XUMF502P",81,0)
 S FDA(4.011,IENS,.15)=5
"RTN","XUMF502P",82,0)
 ;
"RTN","XUMF502P",83,0)
 ;S IENS="+6,"_IEN_","
"RTN","XUMF502P",84,0)
 ;S FDA(4.011,IENS,.01)="Status"
"RTN","XUMF502P",85,0)
 ;S FDA(4.011,IENS,.02)=.02
"RTN","XUMF502P",86,0)
 ;S FDA(4.011,IENS,.04)=757.333
"RTN","XUMF502P",87,0)
 ;S FDA(4.011,IENS,.06)="EffectiveDate"
"RTN","XUMF502P",88,0)
 ;S FDA(4.011,IENS,.15)=6
"RTN","XUMF502P",89,0)
 ;
"RTN","XUMF502P",90,0)
 D UPDATE^DIE("E","FDA",,"ERR")
"RTN","XUMF502P",91,0)
 I $D(ERR) D
"RTN","XUMF502P",92,0)
 .D EM("UPDATE NODES error",.ERR)
"RTN","XUMF502P",93,0)
 .K ERR
"RTN","XUMF502P",94,0)
 ;
"RTN","XUMF502P",95,0)
 Q
"RTN","XUMF502P",96,0)
 ;
"RTN","XUMF502P",97,0)
MD5 ; -- MD5
"RTN","XUMF502P",98,0)
 ;
"RTN","XUMF502P",99,0)
 N IENS1
"RTN","XUMF502P",100,0)
 ;
"RTN","XUMF502P",101,0)
 S IEN=$O(^DIC(4.005,"B","Mappings",0))
"RTN","XUMF502P",102,0)
 ;
"RTN","XUMF502P",103,0)
 I 'IEN D  Q:'IEN
"RTN","XUMF502P",104,0)
 .K FDA
"RTN","XUMF502P",105,0)
 .S FDA(4.005,"+1,",.01)="Mappings"
"RTN","XUMF502P",106,0)
 .;
"RTN","XUMF502P",107,0)
 .D UPDATE^DIE("E","FDA",,"ERR")
"RTN","XUMF502P",108,0)
 .I $D(ERR) D
"RTN","XUMF502P",109,0)
 ..D EM("UPDATE MD5 error",.ERR)
"RTN","XUMF502P",110,0)
 ..K ERR
"RTN","XUMF502P",111,0)
 .S IEN=$O(^DIC(4.005,"B","Mappings",0))
"RTN","XUMF502P",112,0)
 ;
"RTN","XUMF502P",113,0)
 S IENS=IEN_","
"RTN","XUMF502P",114,0)
 ;
"RTN","XUMF502P",115,0)
 K FDA
"RTN","XUMF502P",116,0)
 S SEQ=0
"RTN","XUMF502P",117,0)
 F  S SEQ=$O(^DIC(4.005,IEN,1,SEQ)) Q:'SEQ  D
"RTN","XUMF502P",118,0)
 .S IENS1=SEQ_","_IEN_","
"RTN","XUMF502P",119,0)
 .S FDA(4.0051,IENS1,.01)="@"
"RTN","XUMF502P",120,0)
 D FILE^DIE("E","FDA","ERR")
"RTN","XUMF502P",121,0)
 ;
"RTN","XUMF502P",122,0)
 K FDA
"RTN","XUMF502P",123,0)
 S IENS1="+1,"_IENS
"RTN","XUMF502P",124,0)
 S FDA(4.0051,IENS1,.01)=757.33
"RTN","XUMF502P",125,0)
 D UPDATE^DIE("E","FDA",,"ERR")
"RTN","XUMF502P",126,0)
 I $D(ERR) D
"RTN","XUMF502P",127,0)
 .D EM("UPDATE MD5 1 error",.ERR)
"RTN","XUMF502P",128,0)
 .K ERR
"RTN","XUMF502P",129,0)
 ;
"RTN","XUMF502P",130,0)
 S IENS1=757.33_","_IENS
"RTN","XUMF502P",131,0)
 ;
"RTN","XUMF502P",132,0)
 K FDA
"RTN","XUMF502P",133,0)
 S FDA(4.00511,"+1,"_IENS1,.01)=.01
"RTN","XUMF502P",134,0)
 S FDA(4.00511,"+1,"_IENS1,1)=10
"RTN","XUMF502P",135,0)
 S FDA(4.00511,"+2,"_IENS1,.01)=1
"RTN","XUMF502P",136,0)
 S FDA(4.00511,"+2,"_IENS1,1)=20
"RTN","XUMF502P",137,0)
 S FDA(4.00511,"+3,"_IENS1,.01)=2
"RTN","XUMF502P",138,0)
 S FDA(4.00511,"+3,"_IENS1,1)=30
"RTN","XUMF502P",139,0)
 S FDA(4.00511,"+4,"_IENS1,.01)=4
"RTN","XUMF502P",140,0)
 S FDA(4.00511,"+4,"_IENS1,1)=40
"RTN","XUMF502P",141,0)
 ;
"RTN","XUMF502P",142,0)
 D UPDATE^DIE("E","FDA",,"ERR")
"RTN","XUMF502P",143,0)
 I $D(ERR) D
"RTN","XUMF502P",144,0)
 .D EM("UPDATE MD5 2 error",.ERR)
"RTN","XUMF502P",145,0)
 .K ERR
"RTN","XUMF502P",146,0)
 ;
"RTN","XUMF502P",147,0)
 K FDA
"RTN","XUMF502P",148,0)
 S FDA(4.005,IENS,7)="B"
"RTN","XUMF502P",149,0)
 S FDA(4.005,IENS,8)=".02"
"RTN","XUMF502P",150,0)
 D UPDATE^DIE("E","FDA",,"ERR")
"RTN","XUMF502P",151,0)
 I $D(ERR) D
"RTN","XUMF502P",152,0)
 .D EM("UPDATE MD5 3 error",.ERR)
"RTN","XUMF502P",153,0)
 .K ERR
"RTN","XUMF502P",154,0)
 ;
"RTN","XUMF502P",155,0)
EXIT ; -- cleanup, and quit
"RTN","XUMF502P",156,0)
 ;
"RTN","XUMF502P",157,0)
 Q
"RTN","XUMF502P",158,0)
 ;
"RTN","XUMF502P",159,0)
EM(ERROR,ERR,XMSUB,XMY) ; -- error message
"RTN","XUMF502P",160,0)
 ;
"RTN","XUMF502P",161,0)
 N X,XMTEXT
"RTN","XUMF502P",162,0)
 ;
"RTN","XUMF502P",163,0)
 D MSG^DIALOG("AM",.X,80,,"ERR")
"RTN","XUMF502P",164,0)
 ;
"RTN","XUMF502P",165,0)
 S X(.1)="HL7 message ID: "_$G(HL("MID"))
"RTN","XUMF502P",166,0)
 S X(.2)="",X(.3)=$G(ERROR),X(.4)=""
"RTN","XUMF502P",167,0)
 S:$G(XMSUB)="" XMSUB="MFS ERROR"
"RTN","XUMF502P",168,0)
 S XMY("G.XUMF ERROR")="",XMDUZ=.5
"RTN","XUMF502P",169,0)
 ;S XMY("G.XUMF TEST")="",XMDUZ=.5
"RTN","XUMF502P",170,0)
 S XMTEXT="X("
"RTN","XUMF502P",171,0)
 ;
"RTN","XUMF502P",172,0)
 D ^XMD
"RTN","XUMF502P",173,0)
 ;
"RTN","XUMF502P",174,0)
 Q
"RTN","XUMF502P",175,0)
 ;
"RTN","XUMF5I")
0^2^B96778215^B74082492
"RTN","XUMF5I",1,0)
XUMF5I ;ISS/PAVEL - XUMF5 MD5 Hash Entry point ;5/19/06  06:15
"RTN","XUMF5I",2,0)
 ;;8.0;KERNEL;**383,407,502**;July 10, 1995;Build 17
"RTN","XUMF5I",3,0)
 ;
"RTN","XUMF5I",4,0)
 ;MD5 based on info from 4.005 SORT BY VUID or USER DEFINED SORTING
"RTN","XUMF5I",5,0)
 ;
"RTN","XUMF5I",6,0)
 Q
"RTN","XUMF5I",7,0)
EN(X0,MODE,IENCOUNT)  ;entry point to get MD5 algorithm
"RTN","XUMF5I",8,0)
 ; Lookup uses AMASTERVUID for files and B x-ref for subfiles....
"RTN","XUMF5I",9,0)
 ;
"RTN","XUMF5I",10,0)
 ; X0 = IEN or name of entry from 4.005 file
"RTN","XUMF5I",11,0)
 ; MODE = 0 regular mode.. last HASH value returned in Apl. ACK.
"RTN","XUMF5I",12,0)
 ;        1 debugging mode.. all values + hash codess returned in Apl ACK
"RTN","XUMF5I",13,0)
 ;        1.1 debugging mode.. all values (no hash codes) returned in Apl ACK
"RTN","XUMF5I",14,0)
 ;        2 debugging mode.. all fields values, all hash values, all hash codes returned in Apl. ACK.
"RTN","XUMF5I",15,0)
 ; IENCOUNT  = maximum entries for MD5 hash.. if NULL.. all entries counted...        
"RTN","XUMF5I",16,0)
 ; FILTER = value of filter field defined in file 4.005, field 8. Passed in by HL7 message (X0).
"RTN","XUMF5I",17,0)
 ;
"RTN","XUMF5I",18,0)
 ; TMP(sequence, def entry IEN, file/subfile #, field #)=""
"RTN","XUMF5I",19,0)
 ; TMP1(,"1,120.82,2,",2)="INTERNAL"
"RTN","XUMF5I",20,0)
 ; TMP2(FILE #,FIELD #)=""  if internal value requested...
"RTN","XUMF5I",21,0)
 N X,Y,X1,X2,X3,X20,X201,X1NEW,X2NEW,X2OLD,X0NAME,XP,H,CNT,CNTT,CNHT,XMD5,XDATE,XXP
"RTN","XUMF5I",22,0)
 N DIC,ERR,ROOT,ROOTX,ROOTB,ROOTB0,POINTER,JUMP,START,TMP,TMP1,TMP2,TMP3,TMP4,TMP5,TMP6,TMP7,TMP8,FDA,VERSION
"RTN","XUMF5I",23,0)
 N SLEV,LEV,IENS,VAL,VALUE,SORT,SORT1,EXITMD5,FILTER,FILTER1,FILTER2,ACTFIL,SORTXREF,SORTACT,MAPFLG,VAR,VAR0,VAR1,VAR2,VAR3
"RTN","XUMF5I",24,0)
 N A,B,C,D,ABCD
"RTN","XUMF5I",25,0)
 S:X0["~" FILTER=$P(X0,"~",2),ACTFIL=$P(X0,"~",3),X0=$P(X0,"~",1) ;parse out file name/IEN and filter value if it exists
"RTN","XUMF5I",26,0)
 D INIT^XUMF5II S X1=0,VAR="",VAR0=0,MAPFLG=0
"RTN","XUMF5I",27,0)
 S VAR1=99.99,VAR2="99.991*",VAR3=99.991 ; fields for files other than Mappings
"RTN","XUMF5I",28,0)
 F  S VAR=$O(^DIC(4.005,"B",VAR)) Q:VAR=""  D
"RTN","XUMF5I",29,0)
 .I VAR="Mappings" S VAR0=0,VAR0=$O(^DIC(4.005,"B",VAR,VAR0))
"RTN","XUMF5I",30,0)
 .I VAR0=X0 S VAR1=.01,VAR2="3*",VAR3=3,MAPFLG=1 ; fields for Mapping file
"RTN","XUMF5I",31,0)
 S FILTER1=$$GET1^DIQ(4.005,X0,8)
"RTN","XUMF5I",32,0)
 S SORTXREF=$$GET1^DIQ(4.005,X0,7)
"RTN","XUMF5I",33,0)
2 F  S X1=$O(TMP(X1)) Q:'$$NEXTB1(LEV)!EXITMD5  S:'X1 X1=SLEV(LEV),X2OLD=0  S X2=$O(TMP(X1,X0,0)) Q:'X2  D
"RTN","XUMF5I",34,0)
 .S (XP,JUMP)=0,XXP=$O(TMP(X1,X0,X2,0))
"RTN","XUMF5I",35,0)
 .;************ File/subfile has changed ************
"RTN","XUMF5I",36,0)
 .D:X2'=X2OLD
"RTN","XUMF5I",37,0)
 ..;K ^TMP("UNIQUE",$J)
"RTN","XUMF5I",38,0)
 ..;
"RTN","XUMF5I",39,0)
 ..;************ File Level & Start ************
"RTN","XUMF5I",40,0)
 ..I $D(^DIC(X2)),START D  Q
"RTN","XUMF5I",41,0)
 ...S START=0,SLEV(1)=X1,X2OLD(1)=X2
"RTN","XUMF5I",42,0)
 ...K ROOT,ROOTB,ROOTB0,X02,X021,TMP1
"RTN","XUMF5I",43,0)
 ...S LEV=1,IENS=""
"RTN","XUMF5I",44,0)
 ...D GETONE(LEV,X2)
"RTN","XUMF5I",45,0)
 ..;
"RTN","XUMF5I",46,0)
 ..;************ Going Up ************
"RTN","XUMF5I",47,0)
 ..I $G(^DD(X2OLD,0,"UP"))=X2 D  Q
"RTN","XUMF5I",48,0)
 ...K ^TMP("UNIQUE",$J,X2OLD)
"RTN","XUMF5I",49,0)
 ...I $$NEXTB(LEV,X2OLD) S JUMP=2 Q
"RTN","XUMF5I",50,0)
 ...K ROOT(LEV),ROOTB(LEV),ROOTB0(LEV),X20(LEV),X201(LEV),TMP1(LEV),X2OLD(LEV)
"RTN","XUMF5I",51,0)
 ...S LEV=LEV-1,IENS=$P(IENS,",",$L(IENS,",")-LEV,9999),X2=X2OLD(LEV)
"RTN","XUMF5I",52,0)
 ..Q:JUMP
"RTN","XUMF5I",53,0)
 ..;
"RTN","XUMF5I",54,0)
 ..;************ Going DOWN ************
"RTN","XUMF5I",55,0)
 ..I $G(^DD(X2,0,"UP"))=X2OLD D  Q
"RTN","XUMF5I",56,0)
 ...S LEV=LEV+1,SLEV(LEV)=X1,X2OLD(LEV)=X2
"RTN","XUMF5I",57,0)
 ...D GETONE(LEV,X2)
"RTN","XUMF5I",58,0)
 ..;
"RTN","XUMF5I",59,0)
 ..;************ Same Level other multiple... ************
"RTN","XUMF5I",60,0)
 ..I $G(^DD(X2,0,"UP"))=$G(^DD(X2OLD,0,"UP")),+$G(^DD(X2OLD,0,"UP")),+$G(^DD(X2,0,"UP")) D  Q
"RTN","XUMF5I",61,0)
 ...I $$NEXTB(LEV,X2OLD) S JUMP=2 Q
"RTN","XUMF5I",62,0)
 ...K ROOT(LEV),ROOTB(LEV),ROOTB0(LEV),X20(LEV),X201(LEV),TMP1(LEV),X2OLD(LEV)
"RTN","XUMF5I",63,0)
 ...S IENS=$P(IENS,",",$L(IENS,",")-LEV+1,9999) ;B:'$L(IENS)
"RTN","XUMF5I",64,0)
 ...S SLEV(LEV)=X1
"RTN","XUMF5I",65,0)
 ...S X2OLD(LEV)=X2
"RTN","XUMF5I",66,0)
 ...;S X2=X2OLD
"RTN","XUMF5I",67,0)
 ...D GETONE(LEV,X2)
"RTN","XUMF5I",68,0)
 ..Q:JUMP
"RTN","XUMF5I",69,0)
 ..;
"RTN","XUMF5I",70,0)
 ..;************ New File not start... ************
"RTN","XUMF5I",71,0)
 ..I $D(^DIC(X2)) D  Q
"RTN","XUMF5I",72,0)
 ...S:'$D(X2NEW) X2NEW=X2,X1NEW=X1
"RTN","XUMF5I",73,0)
 ...I $$NEXTB(LEV,X2OLD(LEV)) S JUMP=2 Q
"RTN","XUMF5I",74,0)
 ...K ROOT(LEV),ROOTB(LEV),ROOTB0(LEV),X20(LEV),X201(LEV),TMP1(LEV),SLEV(LEV),X2OLD(LEV)
"RTN","XUMF5I",75,0)
 ...S IENS=$P(IENS,",",$L(IENS,",")-LEV+1,9999) ;B:'$L(IENS)
"RTN","XUMF5I",76,0)
 ...I LEV=1 S (X1,SLEV(1))=X1NEW,(X2,X2OLD(1))=X2NEW K X1NEW,X2NEW D GETONE(LEV,X2) Q  ;;;;;;;;GET TO THE BOTTOM LEVEL = 1 NOT ANY OTHRER'S B X-REF
"RTN","XUMF5I",77,0)
 ...S LEV=LEV-1,X1=SLEV(LEV)-1,X2=+$G(X2OLD(LEV-1)),XP=1
"RTN","XUMF5I",78,0)
 ..;
"RTN","XUMF5I",79,0)
 ..;************ Last sequence number ************
"RTN","XUMF5I",80,0)
 ..I X2OLD=0 D  Q
"RTN","XUMF5I",81,0)
21 ...I $$NEXTB(LEV,X2) S JUMP=2 Q
"RTN","XUMF5I",82,0)
 ...K ROOT(LEV),ROOTB(LEV),ROOTB0(LEV),X20(LEV),X201(LEV),TMP1(LEV),X2OLD(LEV)
"RTN","XUMF5I",83,0)
 ...Q:LEV=1
"RTN","XUMF5I",84,0)
 ...S LEV=LEV-1,IENS=$P(IENS,",",$L(IENS,",")-LEV,9999),X2=X2OLD(LEV) ;,X1=SLEV(LEV)-1,XP=1
"RTN","XUMF5I",85,0)
 ...G 21
"RTN","XUMF5I",86,0)
 ..Q
"RTN","XUMF5I",87,0)
 ..;
"RTN","XUMF5I",88,0)
 .S X2OLD=X2
"RTN","XUMF5I",89,0)
 .Q:JUMP
"RTN","XUMF5I",90,0)
 .;************ Get value & MD5 ************
"RTN","XUMF5I",91,0)
 .S X3=$O(TMP(X1+XP,X0,X2,0)) Q:'X3
"RTN","XUMF5I",92,0)
 .S VAL=$S($L(IENS):$G(TMP1(LEV,X2,IENS,X3)),1:"")
"RTN","XUMF5I",93,0)
 .Q:'$L(VAL)
"RTN","XUMF5I",94,0)
 .D:$O(TMP1(LEV,X2,IENS,X3,0))
"RTN","XUMF5I",95,0)
 ..N X4 S X4=0,VAL="" F  S X4=$O(TMP1(LEV,X2,IENS,X3,X4)) Q:'X4  S VAL=VAL_$G(TMP1(LEV,X2,IENS,X3,X4))
"RTN","XUMF5I",96,0)
 .;Filter out non-matching entries if a filter exists
"RTN","XUMF5I",97,0)
 .Q:'$$FILTER()
"RTN","XUMF5I",98,0)
 .;If value set as uniqueue and already exist dont take it into MD5
"RTN","XUMF5I",99,0)
 .Q:'$L(VAL)
"RTN","XUMF5I",100,0)
 .I $G(TMP5(X2,X3)) Q:$D(^TMP("UNIQUE",$J,X2,X3,VAL))  S ^TMP("UNIQUE",$J,X2,X3,VAL)=""
"RTN","XUMF5I",101,0)
 .D
"RTN","XUMF5I",102,0)
 ..N X,TMP,I
"RTN","XUMF5I",103,0)
 ..I X3=VAR1,$D(^DIC(X2)) S CNTT=CNTT+1 I $G(IENCOUNT),CNTT>IENCOUNT S EXITMD5=1,CNTT=CNTT-1 Q
"RTN","XUMF5I",104,0)
 ..D:MODE>1.99 SETACK("File #: "_X2_" Field #: "_X3_" Value: "_VAL_" IENS: "_IENS)
"RTN","XUMF5I",105,0)
 ..S CNT=$G(CNT)+1
"RTN","XUMF5I",106,0)
 ..S VALUE=VALUE_VAL
"RTN","XUMF5I",107,0)
211 ..Q:$L(VALUE)<65
"RTN","XUMF5I",108,0)
 ..S X=$E(VALUE,65,$L(VALUE)),VALUE=$E(VALUE,1,64)
"RTN","XUMF5I",109,0)
 ..D:MODE
"RTN","XUMF5I",110,0)
 ...D SETACK($S(MODE=1.1:"",1:"Value: ")_VALUE)
"RTN","XUMF5I",111,0)
 ...D:MODE'=1.1 SETACK("HASH:  "_$$MAIN^XUMF5BYT($$HEX^XUMF5AU($$MD5E^XUMF5AU(ABCD,VALUE,0,CNHT+1*64))))
"RTN","XUMF5I",112,0)
 ..S ABCD=$$MD5E^XUMF5AU(ABCD,VALUE,1)
"RTN","XUMF5I",113,0)
 ..S VALUE=X,CNHT=CNHT+1
"RTN","XUMF5I",114,0)
 ..G 211
"RTN","XUMF5I",115,0)
 .Q
"RTN","XUMF5I",116,0)
 G END^XUMF5II
"RTN","XUMF5I",117,0)
 Q
"RTN","XUMF5I",118,0)
GETONE(LEV,X2)     ;GET DATA
"RTN","XUMF5I",119,0)
 S ROOT(LEV)=$$ROOT^DILFD(X2,"1,"_IENS,,"ERR")
"RTN","XUMF5I",120,0)
 Q:'$L(ROOT(LEV))
"RTN","XUMF5I",121,0)
 I $D(ERR) D  Q
"RTN","XUMF5I",122,0)
 .S ERROR="1^MD5 ROOT retrieval error, File/Subfile #: "_X2_" IENS: 1,"_IENS,EXITMD5=1,JUMP=2
"RTN","XUMF5I",123,0)
 .D EM^XUMFX("file DIE call error message in RDT",.ERR)
"RTN","XUMF5I",124,0)
 .K ERR
"RTN","XUMF5I",125,0)
 I SORTXREF'="" S:'$D(@(ROOT(LEV)_""""_SORTXREF_""""_")")) SORTXREF=""
"RTN","XUMF5I",126,0)
 S ROOTX(LEV)=ROOT(LEV)_"X201(LEV))" ;FOR LOOKUP OF ENTRIES
"RTN","XUMF5I",127,0)
 S SORT1="",SORT="B" ; S:$D(^DIC(X2)) SORT="AMASTERVUID",SORT1="1,"
"RTN","XUMF5I",128,0)
 I $D(^DIC(X2)) D
"RTN","XUMF5I",129,0)
 .S SORT="AMASTERVUID",SORT1="1,"
"RTN","XUMF5I",130,0)
 .I (SORTXREF'="") S SORT1="",SORT=SORTXREF
"RTN","XUMF5I",131,0)
 S ROOTB(LEV)=ROOT(LEV)_""""_SORT_""",X20(LEV))"
"RTN","XUMF5I",132,0)
 S X20(LEV)="",ROOTB0(LEV)=ROOT(LEV)_""""_SORT_""",X20(LEV),"_SORT1_"X201(LEV))"
"RTN","XUMF5I",133,0)
 S:SORT="B" POINTER=$G(TMP7(X2,XXP)) ;Pointer = pointer to file #
"RTN","XUMF5I",134,0)
 I SORT="B",+POINTER D  ;Handle pointer type of subfile...
"RTN","XUMF5I",135,0)
 .N BB S POINTER=$E(POINTER,2,$L(POINTER))
"RTN","XUMF5I",136,0)
 .; ^TMP("PROOT",$J,Subfile #,IEN from up level,"Name sorted",IEN level)=""
"RTN","XUMF5I",137,0)
 .; ^TMP("PROOT",$J,Subfile #,IEN from up level,X20(LEV),X201(LEV))=""
"RTN","XUMF5I",138,0)
 .K ^TMP("PROOT",$J,X2)
"RTN","XUMF5I",139,0)
 .;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
"RTN","XUMF5I",140,0)
 .S X201(LEV)=0 F  S X201(LEV)=$O(@(ROOTX(LEV)))  Q:'X201(LEV)  D
"RTN","XUMF5I",141,0)
 ..I $G(TMP4(X2,XXP)) D  ; If  sort By VUID
"RTN","XUMF5I",142,0)
 ...S BB=$$GET1^DIQ(X2,X201(LEV)_","_IENS,XXP,"I")     ;BB=IEN of poited to field
"RTN","XUMF5I",143,0)
 ...S:BB BB=$$GET1^DIQ(TMP4(X2,XXP),BB_",",VAR1,"E")  ;BB=VUID
"RTN","XUMF5I",144,0)
 ..E  S BB=$$GET1^DIQ(X2,X201(LEV)_","_IENS,XXP,"E")   ; Else sort by .01    BB= .01
"RTN","XUMF5I",145,0)
 ..S:$L(BB) ^TMP("PROOT",$J,X2,BB,X201(LEV))=""
"RTN","XUMF5I",146,0)
 .;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
"RTN","XUMF5I",147,0)
 .S ROOTB(LEV)="^TMP(""PROOT"",$J,"_X2_",X20(LEV))"
"RTN","XUMF5I",148,0)
 .S ROOTB0(LEV)="^TMP(""PROOT"",$J,"_X2_",X20(LEV),X201(LEV))"
"RTN","XUMF5I",149,0)
 I SORT="B",LEV=2,X2=+$P(^DD(X2OLD(1),VAR3,0),U,2) D  ;Handle Effective Date/Status multiple... only last date taken to HASH... TERMSTATUS
"RTN","XUMF5I",150,0)
 .K ^TMP("PROOT",$J,X2)
"RTN","XUMF5I",151,0)
 .S X20(LEV)=$O(@(ROOTB(LEV)),-1) ;Get last date..
"RTN","XUMF5I",152,0)
 .Q:'$L(X20(LEV))  ;No Data in Effective Date Multiple.
"RTN","XUMF5I",153,0)
 .S X201(LEV)=0,X201(LEV)=+$O(@ROOTB0(LEV))
"RTN","XUMF5I",154,0)
 .Q:'X201(LEV)
"RTN","XUMF5I",155,0)
 .S ROOTB(LEV)="^TMP(""PROOT"",$J,"_X2_",X20(LEV))"
"RTN","XUMF5I",156,0)
 .S ROOTB0(LEV)="^TMP(""PROOT"",$J,"_X2_",X20(LEV),X201(LEV))"
"RTN","XUMF5I",157,0)
 .S ^TMP("PROOT",$J,X2,X20(LEV),X201(LEV))=""
"RTN","XUMF5I",158,0)
 S X20(LEV)=""
"RTN","XUMF5I",159,0)
 I SORTXREF'="" S X20(LEV)=0,X201(LEV)=0
"RTN","XUMF5I",160,0)
GET1 I SORTXREF="" S X20(LEV)=$O(@(ROOTB(LEV))) Q:'$L(X20(LEV))  S X201(LEV)=0,X201(LEV)=$O(@(ROOTB0(LEV)))
"RTN","XUMF5I",161,0)
 I SORTXREF'="" S TMP8=$Q(@(ROOTB0(LEV))),X20(LEV)=$P(TMP8,",",3),X201(LEV)=+$P(TMP8,",",4) Q:'$L(X20(LEV))
"RTN","XUMF5I",162,0)
 I (SORTXREF'=""),'$O(@(ROOTB0(LEV))),('$L($O(@(ROOTB(LEV))))),'$$ACTALL() S EXITMD5=1 Q
"RTN","XUMF5I",163,0)
 I $D(^DIC(X2)),'$$ACTIVE(X2,X201(LEV)_","_IENS) G GET1 ;If not active entry.. skip it..  
"RTN","XUMF5I",164,0)
 S IENS=X201(LEV)_","_IENS
"RTN","XUMF5I",165,0)
 Q:'X201(LEV)
"RTN","XUMF5I",166,0)
 D GETSIE(X2,IENS,LEV)
"RTN","XUMF5I",167,0)
 Q
"RTN","XUMF5I",168,0)
NEXTB(LEV,X2X)      ;Get next IEN from xref on current level.. if exist
"RTN","XUMF5I",169,0)
 ;Is there other entry at current level to be proceeded..  ?? get next "B" x-ref set old X2 = NEW X2 and go to loop
"RTN","XUMF5I",170,0)
 Q:'$D(X20(LEV)) 0
"RTN","XUMF5I",171,0)
N1 Q:'$L(X20(LEV)) 0
"RTN","XUMF5I",172,0)
 I LEV=1,'($O(@(ROOTB0(LEV)))!$L($O(@(ROOTB(LEV))))) S EXITMD5=1 Q 1
"RTN","XUMF5I",173,0)
 Q:'($O(@(ROOTB0(LEV)))!$L($O(@(ROOTB(LEV))))) 0
"RTN","XUMF5I",174,0)
 S:X201(LEV) X201(LEV)=$O(@(ROOTB0(LEV))) ;Try get new IEN fron B-xref
"RTN","XUMF5I",175,0)
 I 'X201(LEV) S X20(LEV)=$O(@(ROOTB(LEV))),X201(LEV)=0 S:$L(X20(LEV)) X201(LEV)=$O(@(ROOTB0(LEV)))
"RTN","XUMF5I",176,0)
 Q:'X201(LEV) 0
"RTN","XUMF5I",177,0)
 I $D(^DIC(X2X)),'$$ACTIVE(X2X,X201(LEV)_","_$P(IENS,",",2,99)) G N1 ;If not active entry.. skip it..
"RTN","XUMF5I",178,0)
 S $P(IENS,",",1)=X201(LEV)
"RTN","XUMF5I",179,0)
 S X2=X2X
"RTN","XUMF5I",180,0)
 D GETSIE(X2,IENS,LEV)
"RTN","XUMF5I",181,0)
 S X1=SLEV(LEV)-1,XP=1
"RTN","XUMF5I",182,0)
 Q 1
"RTN","XUMF5I",183,0)
NEXTB1(LEV)     ;See if some other entries in x-ref at any level exist...  no variable is set.
"RTN","XUMF5I",184,0)
 ;
"RTN","XUMF5I",185,0)
 Q:X1 1
"RTN","XUMF5I",186,0)
3 Q:LEV=0 0
"RTN","XUMF5I",187,0)
 I LEV>1,'$L($G(X20(LEV))) G 4
"RTN","XUMF5I",188,0)
 I LEV=1,'$L($G(X20(LEV))) Q 0
"RTN","XUMF5I",189,0)
 I LEV=1,'($O(@(ROOTB0(LEV)))!$L($O(@(ROOTB(LEV))))) Q 0
"RTN","XUMF5I",190,0)
 I LEV=1,'$$ACTALL() Q 0
"RTN","XUMF5I",191,0)
 I X201(LEV),$O(@(ROOTB0(LEV))) Q 1
"RTN","XUMF5I",192,0)
 Q:$L($O(@(ROOTB(LEV)))) 1
"RTN","XUMF5I",193,0)
 Q:LEV=1 0
"RTN","XUMF5I",194,0)
4 S LEV=LEV-1 G 3
"RTN","XUMF5I",195,0)
 Q
"RTN","XUMF5I",196,0)
SETACK(X,MODE)      ;SET APPL. Acknowledgment + WRIGHT ?? 
"RTN","XUMF5I",197,0)
 W X,!
"RTN","XUMF5I",198,0)
 S:$G(MODE) ^TMP("XUMF ERROR",$J,XMD5,$O(^TMP("XUMF ERROR",$J,XMD5,9999999999999),-1)+1)=X
"RTN","XUMF5I",199,0)
 Q
"RTN","XUMF5I",200,0)
UP(X) ;Upercase conversion    
"RTN","XUMF5I",201,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","XUMF5I",202,0)
ACTIVE(FILE,IEN)        ;GET 1 = Active 0 = Inactive
"RTN","XUMF5I",203,0)
 I $G(ACTFIL) Q 1
"RTN","XUMF5I",204,0)
 N TMP,BB,X,X1,X2,XT,XX
"RTN","XUMF5I",205,0)
 D GETS^DIQ(FILE,IEN,VAR2,"I","TMP","ERR")
"RTN","XUMF5I",206,0)
 S (XT,XX)=0,X="TMP"
"RTN","XUMF5I",207,0)
 F  S X=$Q(@(X)) Q:'$L(X)  D
"RTN","XUMF5I",208,0)
 .S X1=$G(@(X)),X=$Q(@(X)),X2=$G(@(X)) S:X1>XT XT=X1,XX=+X2
"RTN","XUMF5I",209,0)
 .I MAPFLG=1 S X=$Q(@(X))
"RTN","XUMF5I",210,0)
 Q XX
"RTN","XUMF5I",211,0)
GETSIE(X2,IENS,LEV)     ;GET Internal/External values + replace pointed field .01 with VUID
"RTN","XUMF5I",212,0)
 K TMP1(LEV) D GETS^DIQ(X2,IENS,"*","","TMP1(LEV)")
"RTN","XUMF5I",213,0)
 D:$D(TMP2(X2))!$D(TMP4(X2))
"RTN","XUMF5I",214,0)
 .N TMP3,I
"RTN","XUMF5I",215,0)
 .D GETS^DIQ(X2,IENS,"*","I","TMP3")
"RTN","XUMF5I",216,0)
 .S I="" F  S I=$O(TMP2(X2,I)) Q:'I  S:$D(TMP1(LEV,X2,IENS,I)) TMP1(LEV,X2,IENS,I)=TMP3(X2,IENS,I,"I")
"RTN","XUMF5I",217,0)
 .;+++++++++++++++ Replace pointed .01 field with VUID if indicate so in 4.005
"RTN","XUMF5I",218,0)
 .S I="" F  S I=$O(TMP4(X2,I)) Q:'I  S:$D(TMP1(LEV,X2,IENS,I)) TMP1(LEV,X2,IENS,I)=$$GET1^DIQ(TMP4(X2,I),TMP3(X2,IENS,I,"I")_",",VAR1)
"RTN","XUMF5I",219,0)
 Q
"RTN","XUMF5I",220,0)
ACTALL() ;See if there is some active entry on the file....
"RTN","XUMF5I",221,0)
 I $G(SORTACT) Q 1
"RTN","XUMF5I",222,0)
 N X1,X2,ACT
"RTN","XUMF5I",223,0)
 S ACT=0,X1=X20(1),X2=X201(1)
"RTN","XUMF5I",224,0)
 S:X20(1) X20(1)=X20(1)-.01
"RTN","XUMF5I",225,0)
 I SORTXREF="" F  S X20(1)=$O(@(ROOTB(1))) Q:(X20(1)="")!ACT  F  S X201(1)=$O(@(ROOTB0(1))) Q:X201(1)=""  I $$ACTIVE(X2OLD(1),X201(1)) S ACT=1 Q
"RTN","XUMF5I",226,0)
 I SORTXREF'="" D
"RTN","XUMF5I",227,0)
 .S X20(1)=""
"RTN","XUMF5I",228,0)
 .F  S X20(1)=$O(@(ROOTB(1))) Q:(X20(1)="")!ACT  S X201(1)="" F  S X201(1)=$O(@(ROOTB0(1))) Q:X201(1)=""  I $$ACTIVE(X2OLD(1),X201(1)) S ACT=1,SORTACT=1 Q
"RTN","XUMF5I",229,0)
 S X20(1)=X1,X201(1)=X2
"RTN","XUMF5I",230,0)
 Q ACT
"RTN","XUMF5I",231,0)
FILTER() ;if filter value passed in via HL7 message, verify it matches file/field value
"RTN","XUMF5I",232,0)
 ; FILTER = VALUE IN HL7 MESSAGE
"RTN","XUMF5I",233,0)
 ; FILTER1 = FIELD NUMBER IN 4.005
"RTN","XUMF5I",234,0)
 ; FILTER2 = VALUE OF FIELD IN REFERENCED FILE
"RTN","XUMF5I",235,0)
 ; If reference file is "Mappings", resolve pointer of 757.33 field .02 to 757.32 field 5 and compare
"RTN","XUMF5I",236,0)
 I '$D(FILTER) Q 1
"RTN","XUMF5I",237,0)
 I MAPFLG D
"RTN","XUMF5I",238,0)
 .S FILTER2=$$GET1^DIQ(X2OLD(1),X201(1),FILTER1,"I")
"RTN","XUMF5I",239,0)
 .S FILTER2=$$GET1^DIQ(757.32,FILTER2,5)
"RTN","XUMF5I",240,0)
 I 'MAPFLG S FILTER2=$$GET1^DIQ(X2,X201(1),FILTER1)
"RTN","XUMF5I",241,0)
 I ($G(FILTER2)'=$G(FILTER)) Q 0
"RTN","XUMF5I",242,0)
 Q 1
"RTN","XUMFQR")
0^3^B53643395^B34910260
"RTN","XUMFQR",1,0)
XUMFQR ;ISS/RAM - Master File Query Response ;06/28/00
"RTN","XUMFQR",2,0)
 ;;8.0;KERNEL;**407,502**;Jul 10, 1995;Build 17
"RTN","XUMFQR",3,0)
 ;
"RTN","XUMFQR",4,0)
 Q
"RTN","XUMFQR",5,0)
 ;
"RTN","XUMFQR",6,0)
MAIN ; -- main
"RTN","XUMFQR",7,0)
 ;
"RTN","XUMFQR",8,0)
 N FIELD1,IDX,IDX1,NAME1,SUBFILE1,DATA1,IEN1,TYP1,MKEY,MKEY1,TYP,VUID,VUID1
"RTN","XUMFQR",9,0)
 N MFI,SEQ,NAME,QRD,SEQ,SUBFILE,IEN,CNT,DATA,ERROR,SORTBY,FILTERBY,FILTER,ERRCNT
"RTN","XUMFQR",10,0)
 ;
"RTN","XUMFQR",11,0)
 D INIT,PROCESS,MFR,SEND,EXIT
"RTN","XUMFQR",12,0)
 ;
"RTN","XUMFQR",13,0)
 Q
"RTN","XUMFQR",14,0)
 ;
"RTN","XUMFQR",15,0)
INIT ; -- initialize
"RTN","XUMFQR",16,0)
 ;
"RTN","XUMFQR",17,0)
 K ^TMP("HLA",$J)
"RTN","XUMFQR",18,0)
 ;
"RTN","XUMFQR",19,0)
 S ERROR=0,CNT=1,ERRCNT=0
"RTN","XUMFQR",20,0)
 ;
"RTN","XUMFQR",21,0)
 S HLFS=HL("FS"),HLCS=$E(HL("ECH")),HLSCS=$E(HL("ECH"),4)
"RTN","XUMFQR",22,0)
 ;
"RTN","XUMFQR",23,0)
 Q
"RTN","XUMFQR",24,0)
 ;
"RTN","XUMFQR",25,0)
PROCESS ; -- pull message text
"RTN","XUMFQR",26,0)
 ;
"RTN","XUMFQR",27,0)
 F  X HLNEXT Q:HLQUIT'>0  D
"RTN","XUMFQR",28,0)
 .Q:$P(HLNODE,HLFS)=""
"RTN","XUMFQR",29,0)
 .Q:"^MSH^MSA^QRD^"'[(U_$P(HLNODE,HLFS)_U)
"RTN","XUMFQR",30,0)
 .D @($P(HLNODE,HLFS))
"RTN","XUMFQR",31,0)
 ;
"RTN","XUMFQR",32,0)
 Q
"RTN","XUMFQR",33,0)
 ;
"RTN","XUMFQR",34,0)
MSH ; -- MSH segment
"RTN","XUMFQR",35,0)
 ;
"RTN","XUMFQR",36,0)
 Q
"RTN","XUMFQR",37,0)
 ;
"RTN","XUMFQR",38,0)
QRD ; -- QRD segment
"RTN","XUMFQR",39,0)
 ;
"RTN","XUMFQR",40,0)
 Q:ERROR
"RTN","XUMFQR",41,0)
 ;
"RTN","XUMFQR",42,0)
 S MFI=$P(HLNODE,HLFS,10),FILTER=$P(MFI,HLCS,2),MFI=$P(MFI,HLCS)
"RTN","XUMFQR",43,0)
 I MFI="" S ERROR="1^MFI not resolved HLNODE: "_$TR(HLNODE,HLFS,"#") Q
"RTN","XUMFQR",44,0)
 S IFN=$O(^DIC(4.001,"MFID",MFI,0))
"RTN","XUMFQR",45,0)
 I 'IFN S ERROR="1^IFN not resolved HLNODE: "_$TR(HLNODE,HLFS,"#") Q
"RTN","XUMFQR",46,0)
 I '$$VFILE^DILFD(IFN) S ERROR="1^invalid file number" Q
"RTN","XUMFQR",47,0)
 S DATA=$G(^DIC(4.001,+IFN,0)),SORTBY=$P(DATA,U,8),FILTERBY=$P(DATA,U,9)
"RTN","XUMFQR",48,0)
 ;
"RTN","XUMFQR",49,0)
 ; -- get root of file
"RTN","XUMFQR",50,0)
 S ROOT=$$ROOT^DILFD(IFN,,1)
"RTN","XUMFQR",51,0)
 ;
"RTN","XUMFQR",52,0)
 S QRD=HLNODE
"RTN","XUMFQR",53,0)
 ;
"RTN","XUMFQR",54,0)
 Q
"RTN","XUMFQR",55,0)
 ;
"RTN","XUMFQR",56,0)
MFR ; -- response
"RTN","XUMFQR",57,0)
 ;
"RTN","XUMFQR",58,0)
 D MSA,QRD1,MFI,MFE
"RTN","XUMFQR",59,0)
 ;
"RTN","XUMFQR",60,0)
 Q
"RTN","XUMFQR",61,0)
 ;
"RTN","XUMFQR",62,0)
MSA ; -- Acknowledgement
"RTN","XUMFQR",63,0)
 ;
"RTN","XUMFQR",64,0)
 N X
"RTN","XUMFQR",65,0)
 S X="MSA"_HLFS_$S(ERROR:"AE",1:"AA")_HLFS_HL("MID")_HLFS_$P(ERROR,U,2)
"RTN","XUMFQR",66,0)
 S ^TMP("HLA",$J,CNT)=X
"RTN","XUMFQR",67,0)
 S CNT=CNT+1
"RTN","XUMFQR",68,0)
 ;
"RTN","XUMFQR",69,0)
 Q
"RTN","XUMFQR",70,0)
 ;
"RTN","XUMFQR",71,0)
QRD1 ; -- query definition segment
"RTN","XUMFQR",72,0)
 ;
"RTN","XUMFQR",73,0)
 Q:ERROR
"RTN","XUMFQR",74,0)
 ;
"RTN","XUMFQR",75,0)
 S ^TMP("HLA",$J,CNT)=$G(QRD)
"RTN","XUMFQR",76,0)
 S CNT=CNT+1
"RTN","XUMFQR",77,0)
 ;
"RTN","XUMFQR",78,0)
 Q
"RTN","XUMFQR",79,0)
 ;
"RTN","XUMFQR",80,0)
MFI ; master file identifier segment
"RTN","XUMFQR",81,0)
 ;
"RTN","XUMFQR",82,0)
 Q:ERROR
"RTN","XUMFQR",83,0)
 ;
"RTN","XUMFQR",84,0)
 S ^TMP("HLA",$J,CNT)=$$MFI^XUMFMFI(MFI,"Standard Terminology","MUP",$$NOW^XLFDT,$$NOW^XLFDT,"NE")
"RTN","XUMFQR",85,0)
 S CNT=CNT+1
"RTN","XUMFQR",86,0)
 ;
"RTN","XUMFQR",87,0)
 Q
"RTN","XUMFQR",88,0)
 ;
"RTN","XUMFQR",89,0)
MFE ; master file entry segment
"RTN","XUMFQR",90,0)
 ;
"RTN","XUMFQR",91,0)
 Q:ERROR
"RTN","XUMFQR",92,0)
 ;
"RTN","XUMFQR",93,0)
 S VUID=0 F  S VUID=$O(@ROOT@($S(SORTBY'="":SORTBY,1:"AMASTERVUID"),VUID)) Q:'VUID  D  Q:ERROR
"RTN","XUMFQR",94,0)
 .I SORTBY="" S IEN=$O(@ROOT@("AMASTERVUID",VUID,1,0)) Q:'IEN
"RTN","XUMFQR",95,0)
 .I SORTBY'="" S IEN=$O(@ROOT@(SORTBY,VUID,0)) Q:'IEN
"RTN","XUMFQR",96,0)
 .;
"RTN","XUMFQR",97,0)
 .I FILTER'="" D  Q:VALUE'=FILTER
"RTN","XUMFQR",98,0)
 ..S DATA=$G(^DIC(4.001,+IFN,0)),FILTERBY=$P(DATA,U,9)
"RTN","XUMFQR",99,0)
 ..I FILTERBY="" S VALUE="ERROR" Q  ;add error processing
"RTN","XUMFQR",100,0)
 ..S IDX=$O(^DIC(4.001,+IFN,1,"B",FILTERBY,0))
"RTN","XUMFQR",101,0)
 ..S DATA=$G(^DIC(4.001,+IFN,1,+IDX,0)),FIELD=$P(DATA,U,2)
"RTN","XUMFQR",102,0)
 ..S TYP=$P(DATA,U,3),TYP=$$GET1^DIQ(771.4,(+TYP_","),.01)
"RTN","XUMFQR",103,0)
 ..S VUID1=$P(DATA,U,13)
"RTN","XUMFQR",104,0)
 ..S VALUE=$$VVAL(IFN,IEN_",",FIELD,$G(VUID1),TYP)
"RTN","XUMFQR",105,0)
 .;
"RTN","XUMFQR",106,0)
 .S ^TMP("HLA",$J,CNT)=$$MFE^XUMFMFE("MUP","",$$NOW^XLFDT,MFI_"@"_VUID)
"RTN","XUMFQR",107,0)
 .S CNT=CNT+1
"RTN","XUMFQR",108,0)
 .D ZRT
"RTN","XUMFQR",109,0)
 ;
"RTN","XUMFQR",110,0)
 Q
"RTN","XUMFQR",111,0)
 ;
"RTN","XUMFQR",112,0)
ZRT ; data segments
"RTN","XUMFQR",113,0)
 ;
"RTN","XUMFQR",114,0)
 Q:ERROR
"RTN","XUMFQR",115,0)
 ;
"RTN","XUMFQR",116,0)
 S SEQ=0
"RTN","XUMFQR",117,0)
 F  S SEQ=$O(^DIC(4.001,IFN,1,"ASEQ",SEQ)) Q:'SEQ  D
"RTN","XUMFQR",118,0)
 .S IDX=$O(^DIC(4.001,IFN,1,"ASEQ",SEQ,0)) Q:'IDX
"RTN","XUMFQR",119,0)
 .S DATA=$G(^DIC(4.001,+IFN,1,+IDX,0)),NAME=$P(DATA,U)
"RTN","XUMFQR",120,0)
 .S TYP=$P(DATA,U,3),TYP=$$GET1^DIQ(771.4,(+TYP_","),.01)
"RTN","XUMFQR",121,0)
 .S FIELD=$P(DATA,U,2),SUBFILE=$P(DATA,U,4),MKEY=$P(DATA,U,6)
"RTN","XUMFQR",122,0)
 .S VUID1=$P(DATA,U,13),WP=$P(DATA,U,16)
"RTN","XUMFQR",123,0)
 .;
"RTN","XUMFQR",124,0)
 .I NAME="Status" D  Q
"RTN","XUMFQR",125,0)
 ..S:IFN'=757.33 ^TMP("HLA",$J,CNT)="ZRT"_HLFS_NAME_HLFS_(+$P($$GETSTAT^XTID(IFN,,IEN_","),U))
"RTN","XUMFQR",126,0)
 ..S:IFN=757.33 ^TMP("HLA",$J,CNT)="ZRT"_HLFS_NAME_HLFS_$$STAT^XUMF502
"RTN","XUMFQR",127,0)
 ..S CNT=CNT+1
"RTN","XUMFQR",128,0)
 .;
"RTN","XUMFQR",129,0)
 .I WP D WP Q
"RTN","XUMFQR",130,0)
 .;
"RTN","XUMFQR",131,0)
 .I SUBFILE D SUBFILE Q
"RTN","XUMFQR",132,0)
 .;
"RTN","XUMFQR",133,0)
 .S VALUE=$$VALUE(IFN,IEN_",",FIELD,VUID1,TYP) ;Q:VALUE=""
"RTN","XUMFQR",134,0)
 .;
"RTN","XUMFQR",135,0)
 .S ^TMP("HLA",$J,CNT)="ZRT"_HLFS_NAME_HLFS_VALUE
"RTN","XUMFQR",136,0)
 .S CNT=CNT+1
"RTN","XUMFQR",137,0)
 ;
"RTN","XUMFQR",138,0)
 Q
"RTN","XUMFQR",139,0)
 ;
"RTN","XUMFQR",140,0)
SUBFILE ;
"RTN","XUMFQR",141,0)
 ;
"RTN","XUMFQR",142,0)
 Q:ERROR
"RTN","XUMFQR",143,0)
 ;
"RTN","XUMFQR",144,0)
 I NAME="Status" D  Q
"RTN","XUMFQR",145,0)
 .S:IFN'=757.33 ^TMP("HLA",$J,CNT)="ZRT"_HLFS_NAME_HLFS_+$$GETSTAT^XTID(IFN,,IEN_",")
"RTN","XUMFQR",146,0)
 .S:IFN=757.33 ^TMP("HLA",$J,CNT)="ZRT"_HLFS_NAME_HLFS_$$STAT^XUMF502
"RTN","XUMFQR",147,0)
 .S CNT=CNT+1
"RTN","XUMFQR",148,0)
 ;
"RTN","XUMFQR",149,0)
 N ROOT
"RTN","XUMFQR",150,0)
 ;
"RTN","XUMFQR",151,0)
 S ROOT=$$ROOT^DILFD(SUBFILE,(","_IEN_","),1)
"RTN","XUMFQR",152,0)
 ;
"RTN","XUMFQR",153,0)
 I MKEY="" S ERROR="1^null lookup column parameter for subfile: "_SUBFILE Q
"RTN","XUMFQR",154,0)
 ;
"RTN","XUMFQR",155,0)
 S IEN1=0
"RTN","XUMFQR",156,0)
 F  S IEN1=$O(@ROOT@(IEN1)) Q:'IEN1  D  Q:ERROR
"RTN","XUMFQR",157,0)
 .;
"RTN","XUMFQR",158,0)
 .I $D(^DIC(4.001,IFN,1,IDX,1,"ASEQ1")) D SUBREC Q
"RTN","XUMFQR",159,0)
 .;
"RTN","XUMFQR",160,0)
 .S VALUE=$$VALUE(SUBFILE,IEN1_","_IEN_",",FIELD,VUID1,TYP) ;Q:VALUE=""
"RTN","XUMFQR",161,0)
 .;
"RTN","XUMFQR",162,0)
 .S ^TMP("HLA",$J,CNT)="ZRT"_HLFS_NAME_HLFS_VALUE
"RTN","XUMFQR",163,0)
 .S CNT=CNT+1
"RTN","XUMFQR",164,0)
 ;
"RTN","XUMFQR",165,0)
 Q
"RTN","XUMFQR",166,0)
 ;
"RTN","XUMFQR",167,0)
SUBREC ; -- sub-records
"RTN","XUMFQR",168,0)
 ;
"RTN","XUMFQR",169,0)
 Q:ERROR
"RTN","XUMFQR",170,0)
 ;
"RTN","XUMFQR",171,0)
 N SEQ1,FIELD1,NAME1,VUID2,TYP2
"RTN","XUMFQR",172,0)
 ;
"RTN","XUMFQR",173,0)
 S SEQ1=0
"RTN","XUMFQR",174,0)
 F  S SEQ1=$O(^DIC(4.001,IFN,1,IDX,1,"ASEQ1",SEQ1)) Q:'SEQ1  D  Q:ERROR
"RTN","XUMFQR",175,0)
 .S IDX1=$O(^DIC(4.001,IFN,1,IDX,1,"ASEQ1",SEQ1,0))
"RTN","XUMFQR",176,0)
 .;
"RTN","XUMFQR",177,0)
 .S NAME1=$P(^DIC(4.001,IFN,1,IDX,1,IDX1,0),U,2)
"RTN","XUMFQR",178,0)
 .I NAME1="" S ERROR="1^subrecord sequence name missing SUBFILE : "_SUBFILE Q
"RTN","XUMFQR",179,0)
 .S FIELD1=$P(^DIC(4.001,IFN,1,IDX,1,IDX1,0),U,3)
"RTN","XUMFQR",180,0)
 .I FIELD1="" S ERROR="1^subrecord sequence number missing SUBFILE : "_SUBFILE Q
"RTN","XUMFQR",181,0)
 .S VUID2=$P(^DIC(4.001,IFN,1,IDX,1,IDX1,0),U,4)
"RTN","XUMFQR",182,0)
 .S TYP2=$P(^DIC(4.001,IFN,1,IDX,1,IDX1,0),U,5)
"RTN","XUMFQR",183,0)
 .;
"RTN","XUMFQR",184,0)
 .S VALUE=$$VALUE(SUBFILE,IEN1_","_IEN_",",FIELD1,VUID2,TYP2) ;Q:VALUE=""
"RTN","XUMFQR",185,0)
 .;
"RTN","XUMFQR",186,0)
 .S ^TMP("HLA",$J,CNT)="ZRT"_HLFS_NAME1_HLFS_VALUE
"RTN","XUMFQR",187,0)
 .S CNT=CNT+1
"RTN","XUMFQR",188,0)
 ;
"RTN","XUMFQR",189,0)
 Q
"RTN","XUMFQR",190,0)
 ;
"RTN","XUMFQR",191,0)
SEND ; -- send HL7 message
"RTN","XUMFQR",192,0)
 ;
"RTN","XUMFQR",193,0)
 S HLP("PRIORITY")="I"
"RTN","XUMFQR",194,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"GM",1,.HLRESLT)
"RTN","XUMFQR",195,0)
 ;
"RTN","XUMFQR",196,0)
 ; check for error
"RTN","XUMFQR",197,0)
 I ($P($G(HLRESLT),U,3)'="") D  Q
"RTN","XUMFQR",198,0)
 .S ERROR=1_U_$P(HLRESLT,HLFS,3)_U_$P(HLRESLT,HLFS,2)_U_$P(HLRESLT,U)
"RTN","XUMFQR",199,0)
 ;
"RTN","XUMFQR",200,0)
 ; successful call, message ID returned
"RTN","XUMFQR",201,0)
 S ERROR="0^"_$P($G(HLRESLT),U,1)
"RTN","XUMFQR",202,0)
 ;
"RTN","XUMFQR",203,0)
 Q
"RTN","XUMFQR",204,0)
 ;
"RTN","XUMFQR",205,0)
EXIT ; -- exit
"RTN","XUMFQR",206,0)
 ;
"RTN","XUMFQR",207,0)
 D CLEAN^DILF
"RTN","XUMFQR",208,0)
 ;
"RTN","XUMFQR",209,0)
 K ^TMP("HLA",$J)
"RTN","XUMFQR",210,0)
 ;
"RTN","XUMFQR",211,0)
 Q
"RTN","XUMFQR",212,0)
 ;
"RTN","XUMFQR",213,0)
WP ;
"RTN","XUMFQR",214,0)
 ;
"RTN","XUMFQR",215,0)
 N WP,I,J
"RTN","XUMFQR",216,0)
 ;
"RTN","XUMFQR",217,0)
 S I=$$GET1^DIQ(IFN,IEN_",",FIELD,,"WP")
"RTN","XUMFQR",218,0)
 ;
"RTN","XUMFQR",219,0)
 Q:'$D(WP)
"RTN","XUMFQR",220,0)
 ;
"RTN","XUMFQR",221,0)
 S ^TMP("HLA",$J,CNT)="ZRT"_HLFS_NAME_HLFS_$G(WP(1))
"RTN","XUMFQR",222,0)
 ;
"RTN","XUMFQR",223,0)
 S I=1,J=1
"RTN","XUMFQR",224,0)
 F  S I=$O(WP(I)) Q:'I  D
"RTN","XUMFQR",225,0)
 .S ^TMP("HLA",$J,CNT,J)=WP(I)
"RTN","XUMFQR",226,0)
 .S J=J+1
"RTN","XUMFQR",227,0)
 ;
"RTN","XUMFQR",228,0)
 S CNT=CNT+1
"RTN","XUMFQR",229,0)
 ;
"RTN","XUMFQR",230,0)
 Q
"RTN","XUMFQR",231,0)
 ;
"RTN","XUMFQR",232,0)
ESC(VALUE) ;
"RTN","XUMFQR",233,0)
 ;
"RTN","XUMFQR",234,0)
 I VALUE["^" F  Q:VALUE'["^"  D
"RTN","XUMFQR",235,0)
 .S VALUE=$P(VALUE,"^")_"\F\"_$P(VALUE,"^",2,9999)
"RTN","XUMFQR",236,0)
 I VALUE["&" F  Q:VALUE'["&"  D
"RTN","XUMFQR",237,0)
 .S VALUE=$P(VALUE,"&")_"\T\"_$P(VALUE,"&",2,9999)
"RTN","XUMFQR",238,0)
 ;
"RTN","XUMFQR",239,0)
 Q VALUE
"RTN","XUMFQR",240,0)
 ;
"RTN","XUMFQR",241,0)
VVAL(IFN,IENS,FIELD,VUID,TYP) ;
"RTN","XUMFQR",242,0)
 ;
"RTN","XUMFQR",243,0)
 Q:IFN="" "" Q:FIELD="" "" Q:IENS="" ""
"RTN","XUMFQR",244,0)
 ;
"RTN","XUMFQR",245,0)
 S:$G(TYP)="" TYP="ST"
"RTN","XUMFQR",246,0)
 S VUID=$S($G(VUID)'="":":99.99",1:"")
"RTN","XUMFQR",247,0)
 I IFN=757.33,$G(VUID)'="" S VUID=":5"
"RTN","XUMFQR",248,0)
 ;
"RTN","XUMFQR",249,0)
 S VALUE=$$GET1^DIQ(IFN,IENS,FIELD_VUID) Q:VALUE="" ""
"RTN","XUMFQR",250,0)
 ;S VALUE=$$GET1^DIQ(IFN,IENS,FIELD) Q:VALUE="" ""
"RTN","XUMFQR",251,0)
 S VALUE=$$DTYP^XUMFP(VALUE,TYP,HLCS,1)
"RTN","XUMFQR",252,0)
 S VALUE=$$ESC(VALUE)
"RTN","XUMFQR",253,0)
 ;
"RTN","XUMFQR",254,0)
 ;I IFN=757.32,FIELD=.02 Q $$MAPDEF
"RTN","XUMFQR",255,0)
 ;
"RTN","XUMFQR",256,0)
 ;Q $$VAL^XUMF0(IFN,FIELD,VUID,VALUE,IENS)
"RTN","XUMFQR",257,0)
 ;
"RTN","XUMFQR",258,0)
 Q VALUE
"RTN","XUMFQR",259,0)
 ;
"RTN","XUMFQR",260,0)
VALUE(IFN,IENS,FIELD,VUID,TYP) ;
"RTN","XUMFQR",261,0)
 ;
"RTN","XUMFQR",262,0)
 Q:IFN="" "" Q:FIELD="" "" Q:IENS="" ""
"RTN","XUMFQR",263,0)
 ;
"RTN","XUMFQR",264,0)
 S:$G(TYP)="" TYP="ST"
"RTN","XUMFQR",265,0)
 ;
"RTN","XUMFQR",266,0)
 S VALUE=$$GET1^DIQ(IFN,IENS,FIELD) Q:VALUE="" ""
"RTN","XUMFQR",267,0)
 S VALUE=$$DTYP^XUMFP(VALUE,TYP,HLCS,1)
"RTN","XUMFQR",268,0)
 S VALUE=$$ESC(VALUE)
"RTN","XUMFQR",269,0)
 ;
"RTN","XUMFQR",270,0)
 I IFN=757.33,FIELD=.02 Q $$MAPDEF
"RTN","XUMFQR",271,0)
 ;
"RTN","XUMFQR",272,0)
 Q VALUE
"RTN","XUMFQR",273,0)
 ;
"RTN","XUMFQR",274,0)
MAPDEF() ;
"RTN","XUMFQR",275,0)
 ;
"RTN","XUMFQR",276,0)
 N X,Y
"RTN","XUMFQR",277,0)
 S X=$O(^LEX(757.32,"B",VALUE,0)) Q:'X 0
"RTN","XUMFQR",278,0)
 S Y=$G(^LEX(757.32,X,2))
"RTN","XUMFQR",279,0)
 Q $P(Y,U,3)
"RTN","XUMFQR",280,0)
 ;
"VER")
8.0^22.0
"^DD",4.001,4.001,.08,0)
SORT BY^F^^0;8^K:$L(X)>20!($L(X)<1) X
"^DD",4.001,4.001,.08,3)
Answer must be 1-20 characters in length.
"^DD",4.001,4.001,.08,21,0)
^^2^2^3080617^
"^DD",4.001,4.001,.08,21,1,0)
The default sort by field is VUID.  Only supply alternate sort by
"^DD",4.001,4.001,.08,21,2,0)
field in the case of no VUID such as files like mappings.
"^DD",4.001,4.001,.08,"DT")
3080617
"^DD",4.001,4.001,.09,0)
FILTER BY^F^^0;9^K:$L(X)>40!($L(X)<1) X
"^DD",4.001,4.001,.09,3)
Answer must be 1-40 characters in length.
"^DD",4.001,4.001,.09,21,0)
^^1^1^3080617^
"^DD",4.001,4.001,.09,21,1,0)
You can specify a query filter by field (column description.) 
"^DD",4.001,4.001,.09,"DT")
3080617
"^DD",4.005,4.005,7,0)
SORT BY^F^^0;3^K:$L(X)>20!($L(X)<1) X
"^DD",4.005,4.005,7,3)
Answer must be 1-20 characters in length.
"^DD",4.005,4.005,7,21,0)
^^9^9^3080625^
"^DD",4.005,4.005,7,21,1,0)
This field determines the sorting of records for MD5 checksum 
"^DD",4.005,4.005,7,21,2,0)
calculation.  It defaults to VUID order.  Enter the name of a field 
"^DD",4.005,4.005,7,21,3,0)
cross-reference in order to sort by that field.  The cross-reference
"^DD",4.005,4.005,7,21,4,0)
must exist in the target file.  If the cross-reference name does not
"^DD",4.005,4.005,7,21,5,0)
exist, it will default to VUID order.  The field cross-referenced must
"^DD",4.005,4.005,7,21,6,0)
not be a multiple.
"^DD",4.005,4.005,7,21,7,0)
 
"^DD",4.005,4.005,7,21,8,0)
To sort by the .01 field, enter "B" without the quotes.  This will sort 
"^DD",4.005,4.005,7,21,9,0)
by the "B" cross reference, which is always the .01 field.
"^DD",4.005,4.005,7,"DT")
3080624
"^DD",4.005,4.005,8,0)
FILTER BY^F^^0;4^K:$L(X)>40!($L(X)<1) X
"^DD",4.005,4.005,8,3)
Answer must be 1-40 characters in length.
"^DD",4.005,4.005,8,21,0)
^^2^2^3080624^
"^DD",4.005,4.005,8,21,1,0)
You can specify a query filter by field.  Enter the field number to 
"^DD",4.005,4.005,8,21,2,0)
filter by.
"^DD",4.005,4.005,8,"DT")
3080624
"BLD",6427,6)
^477
**END**
**END**
