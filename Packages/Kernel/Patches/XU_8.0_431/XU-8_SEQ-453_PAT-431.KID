Released XU*8*431 SEQ #453
Extracted from mail message
**KIDS**:XU*8.0*431^

**INSTALL NAME**
XU*8.0*431
"BLD",969,0)
XU*8.0*431^KERNEL^0^3110310^y^^
"BLD",969,1,0)
^^2^2^3080303^^
"BLD",969,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"BLD",969,1,2,0)
XU*8*431  Error Trap Summary.
"BLD",969,4,0)
^9.64PA^3.075^3
"BLD",969,4,3.075,0)
3.075
"BLD",969,4,3.075,2,0)
^9.641^3.0751^1
"BLD",969,4,3.075,2,3.0751,0)
ERROR NUMBER  (sub-file)
"BLD",969,4,3.075,2,3.0751,1,0)
^9.6411^4.04^1
"BLD",969,4,3.075,2,3.0751,1,4.04,0)
UCI~VOL~NODE~BOX
"BLD",969,4,3.075,222)
y^n^p^^^^n^^n
"BLD",969,4,3.075,224)

"BLD",969,4,3.077,0)
3.077
"BLD",969,4,3.077,222)
y^y^f^^^^n
"BLD",969,4,8989.3,0)
8989.3
"BLD",969,4,8989.3,2,0)
^9.641^8989.3^1
"BLD",969,4,8989.3,2,8989.3,0)
KERNEL SYSTEM PARAMETERS  (File-top level)
"BLD",969,4,8989.3,2,8989.3,1,0)
^9.6411^520.4^4
"BLD",969,4,8989.3,2,8989.3,1,520.1,0)
ERROR LIMIT
"BLD",969,4,8989.3,2,8989.3,1,520.2,0)
SEND ERROR SUMMARY
"BLD",969,4,8989.3,2,8989.3,1,520.3,0)
KEEP ERROR TRAP
"BLD",969,4,8989.3,2,8989.3,1,520.4,0)
KEEP ERROR SUMMARY
"BLD",969,4,8989.3,222)
y^n^p^^^^n^^n
"BLD",969,4,8989.3,224)

"BLD",969,4,"APDD",3.075,3.0751)

"BLD",969,4,"APDD",3.075,3.0751,4.04)

"BLD",969,4,"APDD",8989.3,8989.3)

"BLD",969,4,"APDD",8989.3,8989.3,520.1)

"BLD",969,4,"APDD",8989.3,8989.3,520.2)

"BLD",969,4,"APDD",8989.3,8989.3,520.3)

"BLD",969,4,"APDD",8989.3,8989.3,520.4)

"BLD",969,4,"B",3.075,3.075)

"BLD",969,4,"B",3.077,3.077)

"BLD",969,4,"B",8989.3,8989.3)

"BLD",969,6)
19^
"BLD",969,6.3)
35
"BLD",969,"ABNS",0)
^9.66A^^0
"BLD",969,"ABPKG")
n^y^
"BLD",969,"INI")

"BLD",969,"INID")
^n
"BLD",969,"INIT")
POST^XTERSUM1
"BLD",969,"KRN",0)
^9.67PA^8989.52^19
"BLD",969,"KRN",.4,0)
.4
"BLD",969,"KRN",.4,"NM",0)
^9.68A^2^2
"BLD",969,"KRN",.4,"NM",1,0)
XTER SUMMARY MOVE    FILE #3.077^3.077^0
"BLD",969,"KRN",.4,"NM",2,0)
XTER ERROR SUMMARY    FILE #3.077^3.077^0
"BLD",969,"KRN",.4,"NM","B","XTER ERROR SUMMARY    FILE #3.077",2)

"BLD",969,"KRN",.4,"NM","B","XTER SUMMARY MOVE    FILE #3.077",1)

"BLD",969,"KRN",.401,0)
.401
"BLD",969,"KRN",.401,"NM",0)
^9.68A^^
"BLD",969,"KRN",.402,0)
.402
"BLD",969,"KRN",.402,"NM",0)
^9.68A^^
"BLD",969,"KRN",.403,0)
.403
"BLD",969,"KRN",.403,"NM",0)
^9.68A^1^1
"BLD",969,"KRN",.403,"NM",1,0)
XUER EDIT PARAMS    FILE #8989.3^8989.3^0
"BLD",969,"KRN",.403,"NM","B","XUER EDIT PARAMS    FILE #8989.3",1)

"BLD",969,"KRN",.5,0)
.5
"BLD",969,"KRN",.84,0)
.84
"BLD",969,"KRN",3.6,0)
3.6
"BLD",969,"KRN",3.8,0)
3.8
"BLD",969,"KRN",3.8,"NM",0)
^9.68A^2^2
"BLD",969,"KRN",3.8,"NM",1,0)
XTER SUMMARY LOAD^^0
"BLD",969,"KRN",3.8,"NM",2,0)
XTER SUMMARY ERROR^^0
"BLD",969,"KRN",3.8,"NM","B","XTER SUMMARY ERROR",2)

"BLD",969,"KRN",3.8,"NM","B","XTER SUMMARY LOAD",1)

"BLD",969,"KRN",9.2,0)
9.2
"BLD",969,"KRN",9.8,0)
9.8
"BLD",969,"KRN",9.8,"NM",0)
^9.68A^8^8
"BLD",969,"KRN",9.8,"NM",1,0)
XTERSUM^^0^B48040361
"BLD",969,"KRN",9.8,"NM",2,0)
XTERSUM1^^0^B11333211
"BLD",969,"KRN",9.8,"NM",3,0)
ZTER^^0^B51850002
"BLD",969,"KRN",9.8,"NM",4,0)
XTERSUM3^^0^B11921916
"BLD",969,"KRN",9.8,"NM",5,0)
XTERPUR^^0^B10067761
"BLD",969,"KRN",9.8,"NM",6,0)
XTER1^^0^B28754239
"BLD",969,"KRN",9.8,"NM",7,0)
XTER1A^^0^B27283149
"BLD",969,"KRN",9.8,"NM",8,0)
XTERSUM4^^0^B4445199
"BLD",969,"KRN",9.8,"NM","B","XTER1",6)

"BLD",969,"KRN",9.8,"NM","B","XTER1A",7)

"BLD",969,"KRN",9.8,"NM","B","XTERPUR",5)

"BLD",969,"KRN",9.8,"NM","B","XTERSUM",1)

"BLD",969,"KRN",9.8,"NM","B","XTERSUM1",2)

"BLD",969,"KRN",9.8,"NM","B","XTERSUM3",4)

"BLD",969,"KRN",9.8,"NM","B","XTERSUM4",8)

"BLD",969,"KRN",9.8,"NM","B","ZTER",3)

"BLD",969,"KRN",19,0)
19
"BLD",969,"KRN",19,"NM",0)
^9.68A^15^10
"BLD",969,"KRN",19,"NM",5,0)
XUER PURGE ERROR SUMMARY^^0
"BLD",969,"KRN",19,"NM",6,0)
XUER NOTE^^0
"BLD",969,"KRN",19,"NM",8,0)
XUER UPDATE DEMAND/BATCH^^0
"BLD",969,"KRN",19,"NM",9,0)
XUERRS^^2
"BLD",969,"KRN",19,"NM",10,0)
XUER SUMMARY^^0
"BLD",969,"KRN",19,"NM",11,0)
XUER SUMMARY MOST RECENT^^0
"BLD",969,"KRN",19,"NM",12,0)
XUER SUMMARY INQUIRE^^0
"BLD",969,"KRN",19,"NM",13,0)
XUER SUMMARY TOP^^0
"BLD",969,"KRN",19,"NM",14,0)
XUER EDIT PARAMS^^0
"BLD",969,"KRN",19,"NM",15,0)
XUKERNEL^^2
"BLD",969,"KRN",19,"NM","B","XUER EDIT PARAMS",14)

"BLD",969,"KRN",19,"NM","B","XUER NOTE",6)

"BLD",969,"KRN",19,"NM","B","XUER PURGE ERROR SUMMARY",5)

"BLD",969,"KRN",19,"NM","B","XUER SUMMARY",10)

"BLD",969,"KRN",19,"NM","B","XUER SUMMARY INQUIRE",12)

"BLD",969,"KRN",19,"NM","B","XUER SUMMARY MOST RECENT",11)

"BLD",969,"KRN",19,"NM","B","XUER SUMMARY TOP",13)

"BLD",969,"KRN",19,"NM","B","XUER UPDATE DEMAND/BATCH",8)

"BLD",969,"KRN",19,"NM","B","XUERRS",9)

"BLD",969,"KRN",19,"NM","B","XUKERNEL",15)

"BLD",969,"KRN",19.1,0)
19.1
"BLD",969,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",969,"KRN",101,0)
101
"BLD",969,"KRN",409.61,0)
409.61
"BLD",969,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",969,"KRN",771,0)
771
"BLD",969,"KRN",870,0)
870
"BLD",969,"KRN",8989.51,0)
8989.51
"BLD",969,"KRN",8989.52,0)
8989.52
"BLD",969,"KRN",8994,0)
8994
"BLD",969,"KRN","B",.4,.4)

"BLD",969,"KRN","B",.401,.401)

"BLD",969,"KRN","B",.402,.402)

"BLD",969,"KRN","B",.403,.403)

"BLD",969,"KRN","B",.5,.5)

"BLD",969,"KRN","B",.84,.84)

"BLD",969,"KRN","B",3.6,3.6)

"BLD",969,"KRN","B",3.8,3.8)

"BLD",969,"KRN","B",9.2,9.2)

"BLD",969,"KRN","B",9.8,9.8)

"BLD",969,"KRN","B",19,19)

"BLD",969,"KRN","B",19.1,19.1)

"BLD",969,"KRN","B",101,101)

"BLD",969,"KRN","B",409.61,409.61)

"BLD",969,"KRN","B",771,771)

"BLD",969,"KRN","B",870,870)

"BLD",969,"KRN","B",8989.51,8989.51)

"BLD",969,"KRN","B",8989.52,8989.52)

"BLD",969,"KRN","B",8994,8994)

"BLD",969,"QUES",0)
^9.62^^
"BLD",969,"REQB",0)
^9.611^2^2
"BLD",969,"REQB",1,0)
XU*8.0*455^2
"BLD",969,"REQB",2,0)
XU*8.0*243^0
"BLD",969,"REQB","B","XU*8.0*243",2)

"BLD",969,"REQB","B","XU*8.0*455",1)

"FIA",3.075)
ERROR LOG
"FIA",3.075,0)
^%ZTER(1,
"FIA",3.075,0,0)
3.075
"FIA",3.075,0,1)
y^n^p^^^^n^^n
"FIA",3.075,0,10)

"FIA",3.075,0,11)

"FIA",3.075,0,"RLRO")

"FIA",3.075,0,"VR")
8.0^XU
"FIA",3.075,3.075)
1
"FIA",3.075,3.0751)
1
"FIA",3.075,3.0751,4.04)

"FIA",3.077)
ERROR TRAP SUMMARY
"FIA",3.077,0)
^%ZTER(3.077,
"FIA",3.077,0,0)
3.077
"FIA",3.077,0,1)
y^y^f^^^^n
"FIA",3.077,0,10)

"FIA",3.077,0,11)

"FIA",3.077,0,"RLRO")

"FIA",3.077,0,"VR")
8.0^XU
"FIA",3.077,3.077)
0
"FIA",3.077,3.07701)
0
"FIA",3.077,3.07702)
0
"FIA",3.077,3.077031)
0
"FIA",3.077,3.0775)
0
"FIA",8989.3)
KERNEL SYSTEM PARAMETERS
"FIA",8989.3,0)
^XTV(8989.3,
"FIA",8989.3,0,0)
8989.3P
"FIA",8989.3,0,1)
y^n^p^^^^n^^n
"FIA",8989.3,0,10)

"FIA",8989.3,0,11)

"FIA",8989.3,0,"RLRO")

"FIA",8989.3,0,"VR")
8.0^XU
"FIA",8989.3,8989.3)
1
"FIA",8989.3,8989.3,520.1)

"FIA",8989.3,8989.3,520.2)

"FIA",8989.3,8989.3,520.3)

"FIA",8989.3,8989.3,520.4)

"INIT")
POST^XTERSUM1
"KRN",.4,187,-1)
0^1
"KRN",.4,187,0)
XTER SUMMARY MOVE^3071031^@^3.077^^@^3071031^1
"KRN",.4,187,1,0)
^.41^2^2
"KRN",.4,187,1,1,0)
3.077^1^^^^3071031^
"KRN",.4,187,1,1,"F",0)
^.411^7^7
"KRN",.4,187,1,1,"F",1,0)
.01
"KRN",.4,187,1,1,"F",2,0)
1
"KRN",.4,187,1,1,"F",3,0)
2
"KRN",.4,187,1,1,"F",4,0)
3
"KRN",.4,187,1,1,"F",5,0)
6
"KRN",.4,187,1,1,"F",6,0)
7
"KRN",.4,187,1,1,"F",7,0)
20
"KRN",.4,187,1,2,0)
3.07701^2^3.077^3^ERROR EVENTS^3071031^
"KRN",.4,187,1,2,"F",0)
^.411^6^6
"KRN",.4,187,1,2,"F",1,0)
.01
"KRN",.4,187,1,2,"F",2,0)
1
"KRN",.4,187,1,2,"F",3,0)
2
"KRN",.4,187,1,2,"F",4,0)
3
"KRN",.4,187,1,2,"F",5,0)
6
"KRN",.4,187,1,2,"F",6,0)
13
"KRN",.4,187,1,"B",3.077,1)

"KRN",.4,187,1,"B",3.07701,2)

"KRN",.4,187,"F",2)
S DIFGT="XTER SUMMARY MOVE",DIFGBFN=3.077 D FG^DIFGB;X
"KRN",.4,194,-1)
0^2
"KRN",.4,194,0)
XTER ERROR SUMMARY^3080227.1336^^3.077^^@^3100527
"KRN",.4,194,"DXS",1,9.2)
S DIP(1)=$S($D(^%ZTER(3.077,D0,0)):^(0),1:"") S X=$P(DIP(1),U,1),DIP(2)=$G(X),DIP(3)=$G(X) S X=126,X=$C(X),DIP(4)=$G(X),DIP(5)=$G(X) S X=94,X=$C(X)
"KRN",.4,194,"DXS",2,9.2)
S DIP(1)=$S($D(^%ZTER(3.077,D0,3)):^(3),1:"") S X=$P(DIP(1),U,1),DIP(2)=$G(X),DIP(3)=$G(X) S X=126,X=$C(X),DIP(4)=$G(X),DIP(5)=$G(X) S X=94,X=$C(X)
"KRN",.4,194,"DXS",3,9.2)
S DIP(1)=$S($D(^%ZTER(3.077,D0,6)):^(6),1:"") S X=$E(DIP(1),1,245),DIP(2)=$G(X),DIP(3)=$G(X) S X=126,X=$C(X),DIP(4)=$G(X),DIP(5)=$G(X) S X=94,X=$C(X)
"KRN",.4,194,"F",1)
3~2~X DXS(1,9.2) S X1=DIP(4) S X2=DIP(2) S X=$TR(X2,X1,X) W X K DIP;L45;C3;"Error Text";Z;"TRANSLATE(ERROR TEXT,$C(126),$C(94))"~
"KRN",.4,194,"F",2)
X DXS(2,9.2) S X1=DIP(4) S X2=DIP(2) S X=$TR(X2,X1,X) W X K DIP;C3;L79;"Last Global";Z;"TRANSLATE(#6,$C(126),$C(94))"~
"KRN",.4,194,"F",3)
X DXS(3,9.2) S X1=DIP(4) S X2=DIP(2) S X=$TR(X2,X1,X) W X K DIP;C3;L240;"Stack List";Z;"TRANSLATE(#7,$C(126),$C(94))"~
"KRN",.4,194,"H")
ERROR TRAP SUMMARY LIST
"KRN",.4,194,"IOM")
80
"KRN",.4,194,"LAST")

"KRN",.4,194,"ROU")
^XUCT
"KRN",.4,194,"ROUOLD")
XUCT
"KRN",.403,71,-1)
0^1
"KRN",.403,71,0)
XUER EDIT PARAMS^@^@^^3100527.1114^^^8989.3^0^0^1
"KRN",.403,71,40,0)
^.4031I^1^1
"KRN",.403,71,40,1,0)
1^^1,1
"KRN",.403,71,40,1,1)
Page 1
"KRN",.403,71,40,1,40,0)
^.4032IP^314^1
"KRN",.403,71,40,1,40,314,0)
XUER EDIT BLOCK1^1^1,1^e
"KRN",.404,314,0)
XUER EDIT BLOCK1^8989.3
"KRN",.404,314,40,0)
^.4044I^5^5
"KRN",.404,314,40,1,0)
1^ERROR LIMIT^3
"KRN",.404,314,40,1,1)
520.1
"KRN",.404,314,40,1,2)
4,34^4^4,21
"KRN",.404,314,40,1,11)
D HLP^DDSUTL("The number of times to log the same Error each day.")
"KRN",.404,314,40,2,0)
2^SEND ERROR SUMMARY^3
"KRN",.404,314,40,2,1)
520.2
"KRN",.404,314,40,2,2)
5,34^3^5,14
"KRN",.404,314,40,2,11)
D HLP^DDSUTL("Send Error Summary to FORUM")
"KRN",.404,314,40,3,0)
3^Days to KEEP ERROR TRAP^3
"KRN",.404,314,40,3,1)
520.3
"KRN",.404,314,40,3,2)
6,34^5^6,9
"KRN",.404,314,40,3,11)
D HLP^DDSUTL("Number of days back to keep Errors")
"KRN",.404,314,40,4,0)
4^Days to KEEP ERROR SUMMARY^3
"KRN",.404,314,40,4,1)
520.4
"KRN",.404,314,40,4,2)
7,34^5^7,6
"KRN",.404,314,40,5,0)
5^Error Trap Parameters^1
"KRN",.404,314,40,5,2)
^^2,26
"KRN",3.8,71,-1)
0^1
"KRN",3.8,71,0)
XTER SUMMARY LOAD^PU^n^^^^
"KRN",3.8,71,2,0)
^3.801^4^4^3101019^^^
"KRN",3.8,71,2,1,0)
This mail group gets FileGrams from the XTERSUM3 routine.
"KRN",3.8,71,2,2,0)
These are summary snapshots of the error trap being send to a 
"KRN",3.8,71,2,3,0)
consolidation site, FORUM.VA.GOV for VA sites.
"KRN",3.8,71,2,4,0)
Could also go to EELS or other places.
"KRN",3.8,71,3)

"KRN",3.8,75,-1)
0^2
"KRN",3.8,75,0)
XTER SUMMARY ERROR^PU^y^^^^
"KRN",3.8,75,2,0)
^^2^2^3080403^
"KRN",3.8,75,2,1,0)
This is the group that should get a copy of the message, when the loading
"KRN",3.8,75,2,2,0)
of an Error Summary messages gets an error.
"KRN",3.8,75,3)

"KRN",19,149,-1)
2^15
"KRN",19,149,0)
XUKERNEL^Kernel Management Menu^^M^.5^^^^^^^^y
"KRN",19,149,10,0)
^19.01IP^13^13
"KRN",19,149,10,13,0)
1518
"KRN",19,149,10,13,"^")
XUER EDIT PARAMS
"KRN",19,149,"U")
KERNEL MANAGEMENT MENU
"KRN",19,192,-1)
2^9
"KRN",19,192,0)
XUERRS^Error Processing^^M^.5^^^^^^^^y
"KRN",19,192,10,0)
^19.01IP^8^8
"KRN",19,192,10,8,0)
1363^SUM
"KRN",19,192,10,8,"^")
XUER SUMMARY
"KRN",19,192,"U")
ERROR PROCESSING
"KRN",19,1232,-1)
0^8
"KRN",19,1232,0)
XUER UPDATE DEMAND/BATCH^Update Error Trap Summary^^R^^^^^^^^KERNEL^y
"KRN",19,1232,1,0)
^^5^5^3071217^
"KRN",19,1232,1,1,0)
This option is used to run by demand or by batch to update the Error 
"KRN",19,1232,1,2,0)
Trap Summary global from the current Error Trap.  This will only proccess 
"KRN",19,1232,1,3,0)
the errors for the current day. DO ADD^XTERSUM to add error from the last
"KRN",19,1232,1,4,0)
30 days.
"KRN",19,1232,1,5,0)
See the code to reach back even further.  
"KRN",19,1232,25)
TODAY^XTERSUM
"KRN",19,1232,30)
%ZTER(3.077,
"KRN",19,1232,200.9)
y
"KRN",19,1232,"U")
UPDATE ERROR TRAP SUMMARY^ERROR TRAP SUMMARY UPDATE
"KRN",19,1234,-1)
0^6
"KRN",19,1234,0)
XUER NOTE^Annotate an Error^^E^^^^^^^y^^y
"KRN",19,1234,1,0)
^19.06^2^2^3000524^^^
"KRN",19,1234,1,1,0)
This option should provide a means of letting a programmer annotate an
"KRN",19,1234,1,2,0)
error which has been logged automatically.
"KRN",19,1234,30)
%ZTER(3.077,
"KRN",19,1234,31)
AEMQL
"KRN",19,1234,50)
%ZTER(3.077,
"KRN",19,1234,51)
30
"KRN",19,1234,52)
[XTER NOTES]
"KRN",19,1234,80)
XTERSUM(
"KRN",19,1234,81)
[XTER NOTES]
"KRN",19,1234,"U")
ANNOTATE AN ERROR
"KRN",19,1346,-1)
0^5
"KRN",19,1346,0)
XUER PURGE ERROR SUMMARY^Purge Error Trap Summary^^R^^^^^^^^KERNEL^n
"KRN",19,1346,1,0)
^^3^3^3100329^
"KRN",19,1346,1,1,0)
This option should be scheduled weekly or monthly to purge the error 
"KRN",19,1346,1,2,0)
summary of old errors.  It only purges entries where the last error was 
"KRN",19,1346,1,3,0)
over 90 days ago.
"KRN",19,1346,25)
PURGE^XTERSUM1
"KRN",19,1346,200.9)
y
"KRN",19,1346,"U")
PURGE ERROR TRAP SUMMARY
"KRN",19,1358,-1)
0^11
"KRN",19,1358,0)
XUER SUMMARY MOST RECENT^Summary Most Recent Errors^^P^^^^^^^^KERNEL^y
"KRN",19,1358,1,0)
^^1^1^3080227^
"KRN",19,1358,1,1,0)
This option displays the most recent errors in the Error Summary.
"KRN",19,1358,60)
%ZTER(3.077,
"KRN",19,1358,61)
1
"KRN",19,1358,62)
0
"KRN",19,1358,63)
[XTER ERROR SUMMARY]
"KRN",19,1358,64)
-2,3
"KRN",19,1358,65)
TODAY-1,
"KRN",19,1358,66)
,
"KRN",19,1358,68)
1
"KRN",19,1358,"U")
SUMMARY MOST RECENT ERRORS
"KRN",19,1363,-1)
0^10
"KRN",19,1363,0)
XUER SUMMARY^Error Summary Menu^^M^^^^^^^^^y
"KRN",19,1363,1,0)
^^1^1^3080303^
"KRN",19,1363,1,1,0)
This is the menu to hold the Error Summary options.
"KRN",19,1363,10,0)
^19.01IP^6^6
"KRN",19,1363,10,1,0)
1358^
"KRN",19,1363,10,1,"^")
XUER SUMMARY MOST RECENT
"KRN",19,1363,10,2,0)
1234^
"KRN",19,1363,10,2,"^")
XUER NOTE
"KRN",19,1363,10,3,0)
1346^
"KRN",19,1363,10,3,"^")
XUER PURGE ERROR SUMMARY
"KRN",19,1363,10,4,0)
1232^
"KRN",19,1363,10,4,"^")
XUER UPDATE DEMAND/BATCH
"KRN",19,1363,10,5,0)
1364
"KRN",19,1363,10,5,"^")
XUER SUMMARY INQUIRE
"KRN",19,1363,10,6,0)
1517^
"KRN",19,1363,10,6,"^")
XUER SUMMARY TOP
"KRN",19,1363,99)
62138,35048
"KRN",19,1363,"U")
ERROR SUMMARY MENU
"KRN",19,1364,-1)
0^12
"KRN",19,1364,0)
XUER SUMMARY INQUIRE^Inquire Error Summary^^I^^^^^^^^^y
"KRN",19,1364,1,0)
^^1^1^3080303^
"KRN",19,1364,1,1,0)
This option gives an Inquire in to the Error Summary file.
"KRN",19,1364,30)
%ZTER(3.077,
"KRN",19,1364,31)
AEMQ
"KRN",19,1364,63)
[CAPTIONED]
"KRN",19,1364,70)
HOME
"KRN",19,1364,80)
%ZTER(3.077,
"KRN",19,1364,83)
Y
"KRN",19,1364,"U")
INQUIRE ERROR SUMMARY
"KRN",19,1517,-1)
0^13
"KRN",19,1517,0)
XUER SUMMARY TOP^Top Errors^^R^^^^^^^^KERNEL^y
"KRN",19,1517,1,0)
^^2^2^3100525^
"KRN",19,1517,1,1,0)
This option runs a report of the top errors and prints a graph of when 
"KRN",19,1517,1,2,0)
they occur.
"KRN",19,1517,25)
SHOW^XTERSUM4
"KRN",19,1517,"U")
TOP ERRORS
"KRN",19,1518,-1)
0^14
"KRN",19,1518,0)
XUER EDIT PARAMS^Error Trap Param Edit^^C^^^^^^^^^y
"KRN",19,1518,1,0)
^19.06^2^2^3100614^^^^
"KRN",19,1518,1,1,0)
This option allows the editing of Error Trap parameters in the Kernel 
"KRN",19,1518,1,2,0)
System Parameters file.
"KRN",19,1518,30)
XTV(8989.3,
"KRN",19,1518,31)
AMEQ
"KRN",19,1518,33)
`1
"KRN",19,1518,40)
[XUER EDIT PARAMS]
"KRN",19,1518,41)
8989.3
"KRN",19,1518,43)
1
"KRN",19,1518,"U")
ERROR TRAP PARAM EDIT
"MBREQ")
0
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",8,.403)
.403;8;;;EDEOUT^DIFROMSO(.403,DA,"",XPDA);FPRE^DIFROMSI(.403,"",XPDA);EPRE^DIFROMSI(.403,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.403,DA,"",XPDA);DEL^DIFROMSK(.403,"",%)
"ORD",8,.403,0)
FORM
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^200^1
"PKG",3,20,200,0)
200^^XDRM200N
"PKG",3,20,200,1)

"PKG",3,20,"B",200,200)

"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3090706^3090706^6
"PKG",3,22,1,"PAH",1,0)
431^3110310^82
"PKG",3,22,1,"PAH",1,1,0)
^^2^2^3110310
"PKG",3,22,1,"PAH",1,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"PKG",3,22,1,"PAH",1,1,2,0)
XU*8*431  Error Trap Summary.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","XTER1")
0^6^B28754239^B27359936
"RTN","XTER1",1,0)
XTER1 ;ISC-SF.SEA/JLI - Kernel Error Trap Display ;09/27/10  15:31
"RTN","XTER1",2,0)
 ;;8.0;KERNEL;**8,392,431**;Jul 10, 1995;Build 35
"RTN","XTER1",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XTER1",4,0)
 S XTDV1=0
"RTN","XTER1",5,0)
WRT S XTOUT=0 S:'$D(XTBLNK) $P(XTBLNK," ",133)=" " S:'$D(C) C=0 K:C=0 ^TMP($J,"XTER")
"RTN","XTER1",6,0)
 D DV
"RTN","XTER1",7,0)
 I '$D(%XTZLIN) S %XTY=$P(%XTZE,","),%XTX=$P(%XTY,"^") S:%XTX[">" %XTX=$P(%XTX,">",2)
"RTN","XTER1",8,0)
 I '$D(%XTZLIN),%XTX'="" S X=$P($P(%XTY,"^",2),":") I X'="" X ^%ZOSF("TEST") I $T D
"RTN","XTER1",9,0)
 . N XCNP,DIF
"RTN","XTER1",10,0)
 . S XCNP=0,DIF="^TMP($J,""XTER1""," X ^%ZOSF("LOAD") S %XTY=$P(%XTX,"+",1) D
"RTN","XTER1",11,0)
 . . I %XTY'="" F X=0:0 S X=$O(^TMP($J,"XTER1",X)) Q:X'>0  I $P(^(X,0)," ")=%XTY S X=X+$P(%XTX,"+",2),%XTZLIN=^TMP($J,"XTER1",X,0) Q
"RTN","XTER1",12,0)
 . . I %XTY="" S X=+$P(%XTX,"+",2) Q:X'>0  S %XTZLIN=^TMP($J,"XTER1",X,0)
"RTN","XTER1",13,0)
 S:'$D(%XTZLIN) %XTZLIN="" K ^TMP($J,"XTER1")
"RTN","XTER1",14,0)
 I %XTZLIN'="" D ADD(""),ADD(%XTZLIN)
"RTN","XTER1",15,0)
 ;I '$D(^%ZTER(1,%XTZDAT,1,%XTZNUM,"ZV","B")) F XTI=0:0 S XTI=$O(^%ZTER(1,%XTZDAT,1,%XTZNUM,"ZV",XTI)) Q:XTI'>0  S XTSYM=^(XTI,0),^%ZTER(1,%XTZDAT,1,%XTZNUM,"ZV","B",XTSYM,XTI)=""
"RTN","XTER1",16,0)
 I '$D(^%ZTER(1,%XTZDAT,1,%XTZNUM,"ZV","B")) D  ;p431
"RTN","XTER1",17,0)
 . F XTI=0:0 S XTI=$O(^%ZTER(1,%XTZDAT,1,%XTZNUM,"ZV",XTI)) Q:XTI'>0  S XTSYM=$P(^(XTI,0),"(") S:'$D(^%ZTER(1,%XTZDAT,1,%XTZNUM,"ZV","B",XTSYM)) ^(XTSYM,XTI)=""
"RTN","XTER1",18,0)
 ;I IO'=IO(0) S XTDV1=0 D DV ;p431
"RTN","XTER1",19,0)
 D:'$G(XTMES)&'$G(XTPRNT) WRITER^XTER1A
"RTN","XTER1",20,0)
 I IO'="",IO'=IO(0)!$G(XTPRNT) U IO W:$E($G(IOST))="C" @IOF S X="^L" G WRTA
"RTN","XTER1",21,0)
 I $G(XTMES) S X="^L" G WRTA
"RTN","XTER1",22,0)
 ;
"RTN","XTER1",23,0)
 K ^TMP($J,"XTER") S C=0
"RTN","XTER1",24,0)
 R !!,"Which symbol? > ",XTX:DTIME S:'$T!(XTX="") XTX="^"
"RTN","XTER1",25,0)
 S:$E(XTX,1)="^" XTX=$TR(XTX,"ilmpqr","ILMPQR") ;uppercase
"RTN","XTER1",26,0)
 G XTERR^XTER:XTX>0!(XTX="^"),END^XTER:XTX="^Q",MESG^XTER1A:XTX="^M",PRNT^XTER1A:XTX="^P" S X=XTX,XTX="",XTOUT=0
"RTN","XTER1",27,0)
 I X="^I" D EN^XTER1B G WRT
"RTN","XTER1",28,0)
 I X["?" S XTF="1,2,10,7,13,14,15,8,9" D HELP^XTER G WRT
"RTN","XTER1",29,0)
 I X="$" S XTDV1=0 D DV G WRT
"RTN","XTER1",30,0)
 I X="^R" G RESTOR^XTER2
"RTN","XTER1",31,0)
 ;
"RTN","XTER1",32,0)
WRTA ;Show All (^L)
"RTN","XTER1",33,0)
 D WRT1 S:'$D(XTX) XTX=""
"RTN","XTER1",34,0)
 Q:$G(XTMES)!$G(XTPRNT)  G:IO=IO(0)&(XTX'="^Q")&(XTX'="^q") WRT
"RTN","XTER1",35,0)
 U IO(0) G END^XTER:XTX="^Q"!(XTX="^q"),XTERR^XTER
"RTN","XTER1",36,0)
 ;
"RTN","XTER1",37,0)
WRT1 ;
"RTN","XTER1",38,0)
 S:'$D(IOSL) IOSL=24 D ADD(""),ADD("")
"RTN","XTER1",39,0)
 S XTSYM=$S(X="^L":"",1:X),%XTYL=IOSL-4,XTI=0,XTC=1,X="",XTA=XTSYM,XTA=$S(XTA="":"",1:$E(XTA,1,$L(XTA)-1)_$C($A($E(XTA,$L(XTA)))-1)_"z")
"RTN","XTER1",40,0)
 ;Find start by order thru B X-ref for Symbols, XTA=var name, XTB=var value
"RTN","XTER1",41,0)
WF S:'%XTYL %XTYL=IOSL-4
"RTN","XTER1",42,0)
 ;S (XTA,XTA1)=$O(^%ZTER(1,%XTZDAT,1,%XTZNUM,"ZV","B",XTA)) S XTI=$S(XTSYM="":1,XTA'="":$O(^(XTA,0)),1:0)
"RTN","XTER1",43,0)
 S XTA=$O(^%ZTER(1,%XTZDAT,1,%XTZNUM,"ZV","B",XTA)) S XTI=$S(XTSYM="":1,XTA'="":$O(^(XTA,0)),1:0) ;p431
"RTN","XTER1",44,0)
 I XTA=""!(XTSYM'=""&($E(XTA,1,$L(XTSYM))'=XTSYM)) D:XTSYM'=""&XTC ADD("No such symbol") D:'$G(XTPRNT) MORE^XTER1A Q
"RTN","XTER1",45,0)
 S (XTA,XTA1)=^%ZTER(1,%XTZDAT,1,%XTZNUM,"ZV",XTI,0) ;p431
"RTN","XTER1",46,0)
 D WV
"RTN","XTER1",47,0)
 ;Show the rest in order
"RTN","XTER1",48,0)
 F  S XTI=$O(^%ZTER(1,%XTZDAT,1,%XTZNUM,"ZV",XTI)) Q:'XTI!(XTOUT)  S (XTA,XTA1)=^(XTI,0) Q:$E(XTA,1,$L(XTSYM))'=XTSYM  D WV
"RTN","XTER1",49,0)
 Q
"RTN","XTER1",50,0)
WV ;Write a variable
"RTN","XTER1",51,0)
 S:'%XTYL %XTYL=IOSL-4
"RTN","XTER1",52,0)
 S XTB=$S($D(^%ZTER(1,%XTZDAT,1,%XTZNUM,"ZV",XTI,"D")):^("D"),1:"***  WARNING: this value was NOT recorded due to an ERROR WITHIN the TRAP ***")
"RTN","XTER1",53,0)
 ;Check for long variables
"RTN","XTER1",54,0)
 S XTL=$G(^%ZTER(1,%XTZDAT,1,%XTZNUM,"ZV",XTI,"L")) I XTL>255 D ADD("**The following variables length is "_XTL_", only displaying first 255.**")
"RTN","XTER1",55,0)
 S XTC=0 S:'$G(XTMES)&'$G(XTPRNT) %XTYL=%XTYL-1
"RTN","XTER1",56,0)
 D:'%XTYL MORE^XTER1A Q:XTOUT  D:'%XTYL ADD("")
"RTN","XTER1",57,0)
 S XTA1=XTA1_"=" K XTC1 I XTB?.PUNL,XTB'["\" S XTA1=XTA1_XTB,XTC1=""
"RTN","XTER1",58,0)
 ;Change control char to \027 format
"RTN","XTER1",59,0)
 I '$D(XTC1) S XTC1="" I $P(XTA1," ",2)="" F XTK=1:1 S XTZ=$E(XTB,XTK) Q:XTZ=""  S XTC1=XTC1_$S(XTZ'?1C:XTZ,1:"\"_$E($A(XTZ)+1000,2,4)) I XTZ="\" S XTC1=XTC1_"\"
"RTN","XTER1",60,0)
 D SET D:XTL>255 ADD("**")
"RTN","XTER1",61,0)
 Q
"RTN","XTER1",62,0)
 ;
"RTN","XTER1",63,0)
SET ;
"RTN","XTER1",64,0)
 I ($L(XTA1)+$L(XTC1))<246 S XTA1=XTA1_XTC1,XTC1="" D ADD(XTA1) Q
"RTN","XTER1",65,0)
 I $L(XTA1)>245 D ADD($E(XTA1,1,245)) S XTA1=$E(XTA1,246,$L(XTA1)) G SET
"RTN","XTER1",66,0)
 I $L(XTA1)>0 D ADD(XTA1_$E(XTC1,1,(245-$L(XTA1)))) S XTC1=$E(XTC1,(245-$L(XTA1)+1),$L(XTC1)) G SET
"RTN","XTER1",67,0)
 D ADD($E(XTC1,1,245)) S XTC1=$E(XTC1,246,$L(XTC1)) G SET
"RTN","XTER1",68,0)
 Q
"RTN","XTER1",69,0)
 ;
"RTN","XTER1",70,0)
ADD(STR) ;Add STR to TMP global
"RTN","XTER1",71,0)
 S C=C+1,^TMP($J,"XTER",C)=STR
"RTN","XTER1",72,0)
 Q
"RTN","XTER1",73,0)
 ;Header info
"RTN","XTER1",74,0)
DV I $D(XTDV1),XTDV1=1 G DV1
"RTN","XTER1",75,0)
 K %XTZLIN
"RTN","XTER1",76,0)
 S %XTZE=^%ZTER(1,%XTZDAT,1,%XTZNUM,"ZE"),%XTJOB=$G(^("J")),%XTIO=$G(^("I")),%XTZH=$G(^("ZH")),%XTZH1=$G(^("H")),%XTZGR=$G(^("GR")) S:$D(^("LINE")) %XTZLIN=^("LINE")
"RTN","XTER1",77,0)
 I %XTZH1>0 S %H=%XTZH1 D YMD^%DTC S Y=X_% D DD^%DT S $P(%XTZH1,"^",2)=$P(Y,"@",1)_" "_$P(Y,"@",2)
"RTN","XTER1",78,0)
 F %XTI=1:1:9 S %XTZH(%XTI)=$P(%XTZH,"^",%XTI)
"RTN","XTER1",79,0)
 S %XTZH(3)=$P(%XTZH1,U,2)
"RTN","XTER1",80,0)
 S %XTUCI=$P(%XTJOB,U,4)
"RTN","XTER1",81,0)
 ;Build output
"RTN","XTER1",82,0)
 S X="Process ID:  "_$P(%XTJOB,U,5)_"  ("_$P(%XTJOB,U)_")",X=X_$E(XTBLNK,1,40-$L(X))_%XTZH(3)
"RTN","XTER1",83,0)
 D ADD(""),ADD(X)
"RTN","XTER1",84,0)
 S %XTZ="Username\Process Name\UCI/VOL\\$ZA\$ZB\Current $IO\Current $ZIO\CPU time\Page Faults\Direct I/O\Buffered I/O"
"RTN","XTER1",85,0)
 S %XTZ(1)=$P(%XTJOB,U,3),%XTZ(2)=$P(%XTJOB,U,2),%XTZ(3)=$S(%XTUCI]"":"["_%XTUCI_"]",1:"")
"RTN","XTER1",86,0)
 S %XTZ(4)="",%XTZ(5)=$J($P(%XTIO,U,2),3),%XTZ(6)=$J($P(%XTIO,U,3),3)
"RTN","XTER1",87,0)
 S %XTZ(7)=$P(%XTIO,U),%XTZ(8)=$P(%XTIO,U,4,99),%XTZ(9)=$J(%XTZH(1),6)
"RTN","XTER1",88,0)
 S %XTZ(10)=$J(%XTZH(4),10),%XTZ(11)=$J(%XTZH(7),10),%XTZ(12)=$J(%XTZH(8),10)
"RTN","XTER1",89,0)
 F %XTI=1:1:12 D
"RTN","XTER1",90,0)
 . I %XTI#2 S X=""
"RTN","XTER1",91,0)
 . S:%XTZ(%XTI)'?." " X=X_$P(%XTZ,"\",%XTI)_": "_%XTZ(%XTI) S:%XTI#2 X=$E(X_$E(XTBLNK,1,40),1,40)
"RTN","XTER1",92,0)
 . I '(%XTI#2),X'?." " D ADD(""),ADD(X)
"RTN","XTER1",93,0)
 . Q
"RTN","XTER1",94,0)
DV1 S XTDV1=1 D ADD(""),ADD("$ZE= "_%XTZE)
"RTN","XTER1",95,0)
 D:%XTZGR'="" ADD(""),ADD("Last Global Ref: "_%XTZGR) ;p431
"RTN","XTER1",96,0)
 K X I $D(^%ZTER(1,%XTZDAT,1,%XTZNUM,"ZE2")) S X=^("ZE2")
"RTN","XTER1",97,0)
 I $D(X) D ADD(""),ADD("%ZTER encountered an error while logging this error -- "),ADD("This may have caused some LOCAL VARIABLES to be lost."),ADD("This error was: "_X)
"RTN","XTER1",98,0)
 Q
"RTN","XTER1",99,0)
 ;
"RTN","XTER1A")
0^7^B27283149^B25511369
"RTN","XTER1A",1,0)
XTER1A ;ISC-SF.SEA/JLI - VA error reporting ;05/20/10  15:53
"RTN","XTER1A",2,0)
 ;;8.0;KERNEL;**63,112,120,431**;Jul 10, 1995;Build 35
"RTN","XTER1A",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XTER1A",4,0)
TWO ;Print two of each error
"RTN","XTER1A",5,0)
 S XTNUM=2
"RTN","XTER1A",6,0)
ONE ;Print one of each error
"RTN","XTER1A",7,0)
 S:'$D(XTNUM) XTNUM=1
"RTN","XTER1A",8,0)
 S:'$D(XTNDATE) XTNDATE=$H-1 I '$D(ZTQUEUED) S XTNDAT1=$$HTFM^XLFDT(XTNDATE),XTNDAT2=XTNDAT1 G INT^XTER1A1
"RTN","XTER1A",9,0)
 K ^TMP($J,"XTER1A") D LISTN,LIST
"RTN","XTER1A",10,0)
EXIT K XTNUM,XTNDATE,XTERN,XTERX,X,N,N1,Y,C,XTOUT,Z,I,XTER1AX,XTER1AN,XTER1AN1,%XTZDAT,%XTZNUM,XTMES,XTDV1,XTMES,XTPRNT
"RTN","XTER1A",11,0)
 Q
"RTN","XTER1A",12,0)
LISTN ;Sort errors
"RTN","XTER1A",13,0)
 F XTERN=0:0 S XTERN=$O(^%ZTER(1,XTNDATE,1,XTERN)) Q:XTERN'>0  I $D(^(XTERN,"ZE")) S XTERX=$E(^("ZE"),1,30),X=^("ZE") D
"RTN","XTER1A",14,0)
 .S N1=0 F N=0:0 S N=$O(^TMP($J,"XTER1A",XTERX,N)) Q:N=""  S N1=N I ^(N)=X Q
"RTN","XTER1A",15,0)
 .I N="" S ^TMP($J,"XTER1A",XTERX,N1+1)=X,^(N1+1,"CNT")=1,^(1)=XTNDATE_U_XTERN
"RTN","XTER1A",16,0)
 .E  S ^("CNT")=^TMP($J,"XTER1A",XTERX,N,"CNT")+1 I ^("CNT")'>XTNUM S Y=^("CNT"),^(Y)=XTNDATE_U_XTERN
"RTN","XTER1A",17,0)
 .Q
"RTN","XTER1A",18,0)
 Q
"RTN","XTER1A",19,0)
LIST ;
"RTN","XTER1A",20,0)
 S XTERX="",C=0,XTOUT=0 K ^TMP($J,"XTER")
"RTN","XTER1A",21,0)
 ;List count of errors
"RTN","XTER1A",22,0)
 F  S XTERX=$O(^TMP($J,"XTER1A",XTERX)) Q:XTERX=""  F N=0:0 S N=$O(^TMP($J,"XTER1A",XTERX,N)) Q:N'>0  D
"RTN","XTER1A",23,0)
 .S X=^TMP($J,"XTER1A",XTERX,N) D ADD(""),ADD("") S Z=$J(^TMP($J,"XTER1A",XTERX,N,"CNT"),8)_"  "
"RTN","XTER1A",24,0)
 .F I=1:60 S Y=$E(X,I,I+59) Q:Y=""  D ADD(Z_Y) S Z="         "
"RTN","XTER1A",25,0)
 .Q
"RTN","XTER1A",26,0)
 ;List errors
"RTN","XTER1A",27,0)
 S XTER1AX="" F  S XTER1AX=$O(^TMP($J,"XTER1A",XTER1AX)) Q:XTER1AX=""  F XTER1AN=0:0 S XTER1AN=$O(^TMP($J,"XTER1A",XTER1AX,XTER1AN)) Q:XTER1AN'>0  D
"RTN","XTER1A",28,0)
 .F XTER1AN1=0:0 S XTER1AN1=$O(^TMP($J,"XTER1A",XTER1AX,XTER1AN,XTER1AN1)) Q:XTER1AN1'>0  S X=^(XTER1AN1) D
"RTN","XTER1A",29,0)
 ..D ADD("|PAGE|") S %XTZDAT=+X,%XTZNUM=$P(X,U,2),XTDV1=0 S XTMES=1 D WRT^XTER1
"RTN","XTER1A",30,0)
 D:IO=""&$D(^TMP($J,"XTER")) MESSG D:IO'="" WRITER
"RTN","XTER1A",31,0)
 K ^TMP($J,"XTER") S C=0 I IO'="" U IO D ^%ZISC
"RTN","XTER1A",32,0)
 Q
"RTN","XTER1A",33,0)
 ;
"RTN","XTER1A",34,0)
MESG ;Send to a Mail message
"RTN","XTER1A",35,0)
 N DWPK,DWLW,DIC K ^TMP($J,"XTER"),^TMP($J,"XTER1")
"RTN","XTER1A",36,0)
 W @IOF,!!,"Enter any comments to precede the error listing:"
"RTN","XTER1A",37,0)
 S DWPK=1,DWLW=75,DIC="^TMP($J,""XTER1"",",DIWESUB="Comments" D EN^DIWE
"RTN","XTER1A",38,0)
 S C=0 W ! F I=0:0 S I=$O(^TMP($J,"XTER1",I)) Q:I'>0  S C=I,^TMP($J,"XTER",I)=^TMP($J,"XTER1",I,0)
"RTN","XTER1A",39,0)
 S XTMES=1,XTDV1=0 D WRT^XTER1 D:C>0 MESSG
"RTN","XTER1A",40,0)
 S C=0,XTX="" K XTMES,^TMP($J,"XTER"),^TMP($J,"XTER1")
"RTN","XTER1A",41,0)
 G XTERR^XTER
"RTN","XTER1A",42,0)
 ;
"RTN","XTER1A",43,0)
PRNT ;Send to Printer
"RTN","XTER1A",44,0)
 K ^TMP($J,"XTER"),ZTIO,XTDV1
"RTN","XTER1A",45,0)
 S C=0,%ZIS="MQ" D ^%ZIS I POP D HOME^%ZIS G WRT^XTER1
"RTN","XTER1A",46,0)
 I $D(IO("Q")) D  S XTX="" G XTERR^XTER
"RTN","XTER1A",47,0)
 . K IO("Q") S ZTRTN="DQPRNT^XTER1A",ZTSAVE("%XTZDAT")="",ZTSAVE("%XTZNUM")="",ZTDESC="XTER1A-PRINT OF ERROR" D ^%ZTLOAD K ZTSK D HOME^%ZIS
"RTN","XTER1A",48,0)
 ;
"RTN","XTER1A",49,0)
DQPRNT S XTPRNT=1,XTOUT=0 D WRT^XTER1 U IO D:C>0 WRITER
"RTN","XTER1A",50,0)
 K ^TMP($J,"XTER"),XTX,XTPRNT S C=0 D ^%ZISC I $D(ZTQUEUED) Q
"RTN","XTER1A",51,0)
 G XTERR^XTER
"RTN","XTER1A",52,0)
 ;
"RTN","XTER1A",53,0)
WRITER ;Write global
"RTN","XTER1A",54,0)
 F %=0:0 S %=$O(^TMP($J,"XTER",%)) Q:%'>0  W:((IOSL-$Y)'>4&$G(XTPRNT)) @IOF S %1=$S($D(^(%))=1:^(%),1:^(%,0)) D
"RTN","XTER1A",55,0)
 .I $E(%1,1,6)="|PAGE|" W @IOF S %1=$E(%1,7,$L(%1)) Q:%1=""
"RTN","XTER1A",56,0)
 .I $E(%1,1,4)="@IOF" W @IOF S %1=$E(%1,5,$L(%1)) Q:%1=""
"RTN","XTER1A",57,0)
 .F  Q:%1=""  W !,$E(%1,1,IOM) S %1=$E(%1,IOM+1,$L(%1))
"RTN","XTER1A",58,0)
 K %,%1
"RTN","XTER1A",59,0)
 Q
"RTN","XTER1A",60,0)
MESSG ;Global to Message
"RTN","XTER1A",61,0)
 S XMY(DUZ)="",XMDUZ=.5 I '$D(ZTQUEUED) K XMY,XMDUZ
"RTN","XTER1A",62,0)
 S XMTEXT="^TMP($J,""XTER"",",XMSUB="ERROR - "_$E(%XTZE,1,40) F  Q:XMSUB'[U  S XMSUB=$P(XMSUB,U)_"~U~"_$P(XMSUB,U,2,99)
"RTN","XTER1A",63,0)
 D ^XMD K XMY,XMTEXT,XMSUB
"RTN","XTER1A",64,0)
 Q
"RTN","XTER1A",65,0)
 ;
"RTN","XTER1A",66,0)
ADD(STR) ;Add STR to TMP global
"RTN","XTER1A",67,0)
 S C=C+1,^TMP($J,"XTER",C)=STR
"RTN","XTER1A",68,0)
 Q
"RTN","XTER1A",69,0)
 ;
"RTN","XTER1A",70,0)
MORE Q:$G(XTMES)  N DIR,DTOUT,DIRUT,DUOUT
"RTN","XTER1A",71,0)
 S XTOUT=0,XTX="" D WRITER K ^TMP($J,"XTER") S C=0
"RTN","XTER1A",72,0)
 I '$D(ZTQUEUED),'$G(XTPRNT),$G(IOST)["C-" D
"RTN","XTER1A",73,0)
 . S:($D(X)#2) XTMORE=X S DIR(0)="FO^0:50",DIR("A")="     Enter '^' to quit listing, <RETURN> to continue..."
"RTN","XTER1A",74,0)
 . D ^DIR K DIR S:$D(DTOUT) X="^" S XTX=X S:$D(XTMORE) X=XTMORE K XTMORE
"RTN","XTER1A",75,0)
 I $D(XTX),$E(XTX)="^" S XTOUT=1 Q
"RTN","XTER1A",76,0)
 I $G(XTPRNT) W @IOF
"RTN","XTER1A",77,0)
 Q
"RTN","XTER1A",78,0)
 ;
"RTN","XTER1A",79,0)
LST S X=" ",XTQ="" N XTXT,XBLNK S $P(XBLNK," ",80)=" "
"RTN","XTER1A",80,0)
T1 S X=$O(^%ZTER(1,%XTZDAT,1,X),-1) R XTQ:0 Q:XTQ'=""  G T2:X'>0,T1:'($D(^(X,"ZE"))#2) S XTP=^("ZE"),XTS=""
"RTN","XTER1A",81,0)
 F  S XTS=$O(^TMP($J,"XTERSCR",XTS)) Q:XTS=""  I XTP[XTS,XTD S XTD=XTD+1 G T1
"RTN","XTER1A",82,0)
 ;
"RTN","XTER1A",83,0)
 I '(X#20) S %XTERRX=X D MORE Q:XTOUT  Q:XTX>0  D T3 S X=%XTERRX
"RTN","XTER1A",84,0)
 I ^%ZTER(1,%XTZDAT,1,X,"ZE")["," S %XTERR=$P($P(^("ZE"),",",4),"-",4),%XTERR=$P($P(^("ZE"),",",2),"-",3)_$S(%XTERR="":"",1:"(")_%XTERR_$S(%XTERR="":"",1:")") S XTXT=$J(X,3)_")  "_"<"_%XTERR_">"_$P(^("ZE"),",",1)_" "
"RTN","XTER1A",85,0)
 I ^%ZTER(1,%XTZDAT,1,X,"ZE")'["," S XTXT=$J(X,3)_")  "_^("ZE")
"RTN","XTER1A",86,0)
 S %XTZNUM=X,%="" I $D(^%ZTER(1,%XTZDAT,1,%XTZNUM,"H")) S %H=^("H") D YMD^%DTC S %=$P(%,".",2)_"000000",%=$E(%,1,2)_":"_$E(%,3,4)_":"_$E(%,5,6)
"RTN","XTER1A",87,0)
 S X=%XTZNUM S XTXT=$S($L(XTXT)>38:XTXT,1:$E(XTXT_XBLNK,1,38))_%
"RTN","XTER1A",88,0)
 S XTXT=XTXT_"  "_$P($S('$D(^%ZTER(1,%XTZDAT,1,X,"J")):"",1:^("J")),U,4)_"  "_$J($P($S('$D(^("J")):"",1:^("J")),U,5),7)_"  "_$P($S('$D(^("I")):"",1:^("I")),U)
"RTN","XTER1A",89,0)
 S XTXT=$S($L(XTXT)>51:XTXT,1:$E(XTXT_XBLNK,1,51))_$P(XTP,"\",7)
"RTN","XTER1A",90,0)
 S XTXT=$S($L(XTXT)>59:XTXT,1:$E(XTXT_XBLNK,1,60))_$P(XTP,"\",3) S XTXT=$S($L(XTXT)>65:XTXT,1:$E(XTXT_XBLNK,1,65))_$P(XTP,"\",4) W !,$E(XTXT,1,79) G T1
"RTN","XTER1A",91,0)
T2 I XTD W !!,$S(XTD-1:XTD-1,1:"No")," screened error",$S(XTD-1>1:"s",1:""),!
"RTN","XTER1A",92,0)
 D MORE
"RTN","XTER1A",93,0)
 Q
"RTN","XTER1A",94,0)
T3 W !!,?11,"$ZE",?41,"Time",?49,"UCI,VOL",?61,"$J",?69,"$I",!
"RTN","XTER1A",95,0)
 Q
"RTN","XTER1A",96,0)
INTRACT ;
"RTN","XTER1A",97,0)
 G INTRACT^XTER1A1
"RTN","XTERPUR")
0^5^B10067761^B10460045
"RTN","XTERPUR",1,0)
XTERPUR ;ISC-SF.SEA/JLI - DELETE ENTRIES FROM ERROR TRAP ;02/11/11
"RTN","XTERPUR",2,0)
 ;;8.0;KERNEL;**243,431**;Jul 10, 1995;Build 35
"RTN","XTERPUR",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XTERPUR",4,0)
 N I,X,XTDAT,XTDAT1,%DT
"RTN","XTERPUR",5,0)
EN1 W !!,"To Remove ALL entries except the last N days, simply enter the number N at the"
"RTN","XTERPUR",6,0)
 W !,"prompt.    OTHERWISE, enter return at the first prompt, and a DATE at the"
"RTN","XTERPUR",7,0)
 W !,"second prompt.  If no ending date is entered at the third prompt, then only"
"RTN","XTERPUR",8,0)
 W !,"the date specified will be deleted.  If an ending date is entered that range",!,"of dates INCLUSIVE will be deleted from the error log.",!!
"RTN","XTERPUR",9,0)
 ;
"RTN","XTERPUR",10,0)
 W !!,"Number of days to leave in error trap: " R X:DTIME Q:'$T!(X[U)  I X'="",X'=+X W:$E(X)'="?" $C(7),"  ??" W !?5,"Enter a number (zero or greater) of days to be left in the Error Log.",!,"A RETURN will result in a request for dates" G EN1
"RTN","XTERPUR",11,0)
 I X=+X S X=$H-X D KRANGE(1,X) W !!?10,"DONE" D COUNT Q
"RTN","XTERPUR",12,0)
 ;
"RTN","XTERPUR",13,0)
EN2 R !,"Starting Date to DELETE ERRORS from: ",X:DTIME Q:'$T!(X[U)!(X="")  S %DT="EQXP" D ^%DT G:Y'>0 EN2 S XTDAT=Y
"RTN","XTERPUR",14,0)
 R !,"Ending Date to DELETE ERRORS to: ",X:DTIME I '$T!(X[U) W $C(7),"  ??" Q
"RTN","XTERPUR",15,0)
 S:X="" X=XTDAT,%DT="QXP" D ^%DT G:Y'>0 EN2 S XTDAT1=Y
"RTN","XTERPUR",16,0)
 S XTDAT=$$FMTH^XLFDT(XTDAT),XTDAT1=$$FMTH^XLFDT(XTDAT1) I XTDAT1<XTDAT W $C(7)," ??  CAN NOT BE EARLIER" Q
"RTN","XTERPUR",17,0)
 D KRANGE(XTDAT,XTDAT1),COUNT
"RTN","XTERPUR",18,0)
 Q
"RTN","XTERPUR",19,0)
 ;
"RTN","XTERPUR",20,0)
COUNT ;Update FM zero node counts
"RTN","XTERPUR",21,0)
 N I,X,XTDAT
"RTN","XTERPUR",22,0)
 S X=0,XTDAT=0 F I=0:0 S I=$O(^%ZTER(1,I)) Q:I'>0  S X=X+1,XTDAT=I
"RTN","XTERPUR",23,0)
 S $P(^%ZTER(1,0),U,3,4)=$S(X'>0:"",1:XTDAT_U_X)
"RTN","XTERPUR",24,0)
 F XTDAT=0:0 S XTDAT=$O(^%ZTER(1,"B",XTDAT)) Q:XTDAT'>0  I '$D(^%ZTER(1,XTDAT)) K ^%ZTER(1,"B",XTDAT)
"RTN","XTERPUR",25,0)
 Q
"RTN","XTERPUR",26,0)
TYPE ;To purge a type of error.
"RTN","XTERPUR",27,0)
 N %DT,XTDAT,XTSTR,IX,Y,CNT
"RTN","XTERPUR",28,0)
 S %DT="AEX" D ^%DT Q:Y'>1  S XTDAT=+$$FMTH^XLFDT(Y)
"RTN","XTERPUR",29,0)
 R !,"ERROR STRING TO LOOK FOR: ",XTSTR:DTIME
"RTN","XTERPUR",30,0)
 Q:'$L(XTSTR)
"RTN","XTERPUR",31,0)
 S CNT=0 W !
"RTN","XTERPUR",32,0)
 F IX=0:0 S IX=$O(^%ZTER(1,XTDAT,1,IX)) Q:IX'>0  D
"RTN","XTERPUR",33,0)
 . I $G(^(IX,"ZE"))[XTSTR K ^%ZTER(1,XTDAT,1,IX) W "-" Q
"RTN","XTERPUR",34,0)
 . W "." S CNT=CNT+1 Q
"RTN","XTERPUR",35,0)
 ;Full reference of ^(IX,"ZE") is ^%ZTER(1,XTDAT,1,IX,"ZE")
"RTN","XTERPUR",36,0)
 S $P(^%ZTER(1,XTDAT,0),"^",2)=CNT ;Reset count
"RTN","XTERPUR",37,0)
 Q
"RTN","XTERPUR",38,0)
AUTO ;Auto clean of error over ZTQPARAM days ago.
"RTN","XTERPUR",39,0)
 N XTDT,XUSX
"RTN","XTERPUR",40,0)
 S XUSX=$P($G(^XTV(8989.3,1,"ZTER")),U,3)
"RTN","XTERPUR",41,0)
 ;S:$G(ZTQPARAM)<1 ZTQPARAM=7
"RTN","XTERPUR",42,0)
 S:$G(XUSX)<1 XUSX=7
"RTN","XTERPUR",43,0)
 ;S XTDT=$P($G(^XTV(8989.3,1,"ZTER"),"^^7"),U,3),XTDT=$H-$S(XTDT>ZTQPARAM:XTDT,1:ZTQPARAM)
"RTN","XTERPUR",44,0)
 S XTDT=$P($G(^XTV(8989.3,1,"ZTER"),"^^7"),U,3),XTDT=$H-$S(XTDT>XUSX:XTDT,1:XUSX)
"RTN","XTERPUR",45,0)
 D KRANGE(1,XTDT),PURGE^XTERSUM1
"RTN","XTERPUR",46,0)
 Q
"RTN","XTERPUR",47,0)
 ;
"RTN","XTERPUR",48,0)
KRANGE(XTST,XTDAT) ;Kill error trap before this date
"RTN","XTERPUR",49,0)
 N XTDH
"RTN","XTERPUR",50,0)
 I (XTDAT>$H)!('XTDAT) Q
"RTN","XTERPUR",51,0)
 S XTDH=+$G(XTST,1)-1
"RTN","XTERPUR",52,0)
 F  S XTDH=$O(^%ZTER(1,XTDH)) Q:(XTDH'>0)!(XTDH'<XTDAT)  D KILLDAY(XTDH)
"RTN","XTERPUR",53,0)
 Q
"RTN","XTERPUR",54,0)
KILLDAY(%H) ;Kill all errors on one day
"RTN","XTERPUR",55,0)
 ;L +^%ZTER(1):60 K ^%ZTER(1,%H),^%ZTER(1,"B",%H) L -^%ZTER(1)
"RTN","XTERPUR",56,0)
 N DIK,DA
"RTN","XTERPUR",57,0)
 L +^%ZTER(1,%H):60 S DIK="^%ZTER(1,",DA=%H D ^DIK L -^%ZTER(1,%H)
"RTN","XTERPUR",58,0)
 Q
"RTN","XTERPUR",59,0)
 ;
"RTN","XTERSUM")
0^1^B48040361^n/a
"RTN","XTERSUM",1,0)
XTERSUM ;ISF/RCR,RWF - Error Trap Summary Utilities ;03/25/09  11:12
"RTN","XTERSUM",2,0)
 ;;8.0;KERNEL;**431**;Jul 10, 1995;Build 35
"RTN","XTERSUM",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XTERSUM",4,0)
 QUIT
"RTN","XTERSUM",5,0)
 ;     ; All code is accessed by alternate entry points.
"RTN","XTERSUM",6,0)
 ; >D ADD^XTERSUM  ; Will gather the latest Error Traps and drop into FM
"RTN","XTERSUM",7,0)
 ; >D SCAN^XTERSUM("T-30","NOW","UNDEF") - Generate Selected Error
"RTN","XTERSUM",8,0)
 ;        Argument list for Start Date (def:first date on file),
"RTN","XTERSUM",9,0)
 ;        Stop Date (def:last date recorded for an error),
"RTN","XTERSUM",10,0)
 ;        An optional select string (def:"")
"RTN","XTERSUM",11,0)
 ; Alternate Entry Point to invoke the collection from the error trap.
"RTN","XTERSUM",12,0)
 ; Requires no inputs and defaults to thiry days ago, now, and no
"RTN","XTERSUM",13,0)
 ;  selection criteria (everything is selected to be added).
"RTN","XTERSUM",14,0)
ALL ; Include all errors in the history - Probably only run at a New Site.
"RTN","XTERSUM",15,0)
 D SCAN("t-900","NOW","")
"RTN","XTERSUM",16,0)
 QUIT
"RTN","XTERSUM",17,0)
 ;  =========
"RTN","XTERSUM",18,0)
 ; Actually, now the invocation can be shortened to D SCAN^XTERSUM("T-30")
"RTN","XTERSUM",19,0)
ADD ; Include all errors in the last 30 days
"RTN","XTERSUM",20,0)
 D SCAN("t-30","NOW","")
"RTN","XTERSUM",21,0)
 QUIT
"RTN","XTERSUM",22,0)
 ;  =========
"RTN","XTERSUM",23,0)
TODAY ;  Just do Today.  Was added when there was concern for performance
"RTN","XTERSUM",24,0)
 D SCAN("t","NOW","")
"RTN","XTERSUM",25,0)
 QUIT
"RTN","XTERSUM",26,0)
 ;  =========
"RTN","XTERSUM",27,0)
 ; Call as >D REL^XTERSUM("t-1")
"RTN","XTERSUM",28,0)
REL(X) ; Process from the starting time/date (in X) and NOW.
"RTN","XTERSUM",29,0)
 D SCAN($G(X,"T"),"NOW","")
"RTN","XTERSUM",30,0)
 QUIT
"RTN","XTERSUM",31,0)
 ;  =========
"RTN","XTERSUM",32,0)
 ;
"RTN","XTERSUM",33,0)
 ; %D1, %D2 Optional Start (%D1) and End (%D2) Dates
"RTN","XTERSUM",34,0)
 ; %TY  - Optional Type of Error to Scan For and Return
"RTN","XTERSUM",35,0)
 ; Sample Call: D SCAN^XTERSUM("T-3","NOW","UNDEF")
"RTN","XTERSUM",36,0)
SCAN(%D1,%D2,%TY) ; Alternative Entry Point for Demand Runs
"RTN","XTERSUM",37,0)
 S %D1=$G(%D1),%D2=$G(%D2),%TY=$G(%TY)
"RTN","XTERSUM",38,0)
 S:'$L(%D1) %D1=$O(^%ZTER(1,0)) S:'$L(%D2) %D2="NOW"
"RTN","XTERSUM",39,0)
 N %AR,%EN,%LOC,%ZE1,%ZE2,%K,%K1,%K2,%RT,%T1,%T2,%Y1,%Y2
"RTN","XTERSUM",40,0)
 N %CD,%GR,%H,%I,%J,%ST,%ZE,%ZH,%TS,%EC,%MC,%PL
"RTN","XTERSUM",41,0)
 N %DUZ,%VTQUED,%XQY,%XQY0,%XUENV,%XWBTBF,%XWBTBUF,%ZTSK,%ZTQUED
"RTN","XTERSUM",42,0)
 S U="^"
"RTN","XTERSUM",43,0)
 S %LOC="9999"
"RTN","XTERSUM",44,0)
 S %K=$$LOCATE^XTERSUM1()
"RTN","XTERSUM",45,0)
 I $L(%K)  S %LOC=%K
"RTN","XTERSUM",46,0)
 S %Y1=$$DEFDAT^XTERSUM1(%D1,"")
"RTN","XTERSUM",47,0)
 S %Y2=$$DEFDAT^XTERSUM1(%D2,"NOW")
"RTN","XTERSUM",48,0)
 S %K1=$P(%Y1,"^",2),%T1=$P(%Y1,"^",3)
"RTN","XTERSUM",49,0)
 S %K2=$P(%Y2,"^",2),%T2=$P(%Y2,"^",3)
"RTN","XTERSUM",50,0)
 S %K=%K1
"RTN","XTERSUM",51,0)
 F  D  S %K=$O(^%ZTER(1,%K))           Q:%K>%K2    Q:%K'?1.7N
"RTN","XTERSUM",52,0)
 . S %EN=0
"RTN","XTERSUM",53,0)
 . F   S %EN=$O(^%ZTER(1,%K,1,%EN))     Q:%EN'?1.N  D
"RTN","XTERSUM",54,0)
 . . D:$$GETER(%EN,%TY)  ; Load the new Error
"RTN","XTERSUM",55,0)
 . . . N D0
"RTN","XTERSUM",56,0)
 . . . D COMPILE ;      ; Set the Extracted Values into the Output Array
"RTN","XTERSUM",57,0)
 . . . S D0=$$INCR(%ZE) ; Create a new record in ^%ZTER(3.077,
"RTN","XTERSUM",58,0)
 . . . D:D0
"RTN","XTERSUM",59,0)
 . . . . L +^%ZTER(3.077,D0):5 ; Small Lock Window, Grab, Do, Release
"RTN","XTERSUM",60,0)
 . . . . D PLACERR ;      ; To build the XTERSUM Record
"RTN","XTERSUM",61,0)
 . . . . L -^%ZTER(3.077,D0)
"RTN","XTERSUM",62,0)
 . . . .QUIT
"RTN","XTERSUM",63,0)
 . . .QUIT
"RTN","XTERSUM",64,0)
 . .QUIT
"RTN","XTERSUM",65,0)
 .QUIT
"RTN","XTERSUM",66,0)
 ;See if need to Send summary to consolidation site.
"RTN","XTERSUM",67,0)
 I $P($G(^XTV(8989.3,1,"ZTER")),U,2) D SEND^XTERSUM3
"RTN","XTERSUM",68,0)
 QUIT
"RTN","XTERSUM",69,0)
 ;  =========
"RTN","XTERSUM",70,0)
 ; Need to get %D1 and %D2 into Fileman Standard Time/Date
"RTN","XTERSUM",71,0)
 ; Then Verify the %TYpe for Identification, "" is default.
"RTN","XTERSUM",72,0)
 ;  Search ^%ZTER(1,+$H,1,%EN,"GR")    ; Last Global Reference,
"RTN","XTERSUM",73,0)
 ;  Search ^%ZTER(1,+$H,1,%EN,"H")     ; Date/Time Stamp of the Error,
"RTN","XTERSUM",74,0)
 ;  Search ^%ZTER(1,+$H,1,%EN,"I")     ; The Current Device Used,
"RTN","XTERSUM",75,0)
 ;  Search ^%ZTER(1,+$H,1,%EN,"LINE")  ; Last Line of Code
"RTN","XTERSUM",76,0)
 ;  Search ^%ZTER(1,+$H,1,%EN,"ZE")    ; Error Encountered
"RTN","XTERSUM",77,0)
 ;  Search ^%ZTER(1,+$H,1,%EN,"ZK")    ; System Time and Utilization Sig.
"RTN","XTERSUM",78,0)
 ;  Scan for the "ZV" for %STACK to trace the activity? (Later)
"RTN","XTERSUM",79,0)
 ; Inputs
"RTN","XTERSUM",80,0)
 ;  %K  - Which Day's Errors to Examine, SYMBOL TABLE
"RTN","XTERSUM",81,0)
 ;  D0  - %EN, points to the error for the day in %K
"RTN","XTERSUM",82,0)
 ;  %SR - Search String = %TY.   Usually Null
"RTN","XTERSUM",83,0)
 ; Outputs
"RTN","XTERSUM",84,0)
 ;  %TS Returned as 1 = Success, and 0 = Failed to find the search string
"RTN","XTERSUM",85,0)
 ;  %CD = Code with Error
"RTN","XTERSUM",86,0)
 ;  %GR = Last Global Reference
"RTN","XTERSUM",87,0)
 ;  %H  = Horolog date and time that the Error Occurred
"RTN","XTERSUM",88,0)
 ;  %I  = Current Device Used
"RTN","XTERSUM",89,0)
 ;  %J  = Job Identifier
"RTN","XTERSUM",90,0)
 ;  %ST = Stack Frames
"RTN","XTERSUM",91,0)
 ;  %ZE = Error Description
"RTN","XTERSUM",92,0)
 ;  %ZH = System time and Utilization Signature
"RTN","XTERSUM",93,0)
 ; ................
"RTN","XTERSUM",94,0)
GETER(K1,%SR) ; Extract the data needed for the next Error Analysis
"RTN","XTERSUM",95,0)
 N %TS
"RTN","XTERSUM",96,0)
 S %CD=$G(^%ZTER(1,%K,1,K1,"LINE"))
"RTN","XTERSUM",97,0)
 S %GR=$TR($G(^%ZTER(1,%K,1,K1,"GR")),"^","~")
"RTN","XTERSUM",98,0)
 S %H=$G(^%ZTER(1,%K,1,K1,"H"))
"RTN","XTERSUM",99,0)
 S %I=$G(^%ZTER(1,%K,1,K1,"I"))
"RTN","XTERSUM",100,0)
 S %J=$G(^%ZTER(1,%K,1,K1,"J"))
"RTN","XTERSUM",101,0)
 S %ZE=$G(^%ZTER(1,%K,1,K1,"ZE"))
"RTN","XTERSUM",102,0)
 S %ZH=$TR($G(^%ZTER(1,%K,1,K1,"ZH")),"^",",")
"RTN","XTERSUM",103,0)
 S %ST=$TR($$GETSTK(%K,K1),"^","~")
"RTN","XTERSUM",104,0)
 S %TS=(%ZH_%CD[%SR) ; Separate because of String Length Problem
"RTN","XTERSUM",105,0)
 S:%H %H=$$HTFM^XLFDT(%H)
"RTN","XTERSUM",106,0)
 S %TS=%TS!(%GR_%H_%I_%J[%SR)
"RTN","XTERSUM",107,0)
 S %TS=%TS!(%ST[%SR)
"RTN","XTERSUM",108,0)
 I '%TS   K %CD,%GR,%H,%I,%J,%ST
"RTN","XTERSUM",109,0)
 QUIT %TS
"RTN","XTERSUM",110,0)
 ;  =========
"RTN","XTERSUM",111,0)
COMPILE ; Compile the information from ^%ZTER into the Output Array, %AR
"RTN","XTERSUM",112,0)
 N A,B,C1,C2,C3,C4,D
"RTN","XTERSUM",113,0)
 S A=$TR($E($P(%ZE,", ",1,2),1,63),"^","~")
"RTN","XTERSUM",114,0)
 ; For Cache, Strip Out the Name of the Routine and Label
"RTN","XTERSUM",115,0)
 S:A["<"&($P(A,"<",2)[">") A=$P(A,">",2)_", "_$P(A,">")_">"
"RTN","XTERSUM",116,0)
 Q:A=""
"RTN","XTERSUM",117,0)
 ;
"RTN","XTERSUM",118,0)
 S B="",D=0
"RTN","XTERSUM",119,0)
 S D=$O(^%ZTER(3.077,"B",$E(A,1,30),""))
"RTN","XTERSUM",120,0)
 S:D B=$G(^%ZTER(3.077,D,0))
"RTN","XTERSUM",121,0)
 S C1=$P(B,"^"),C2=$P(B,"^",2),C3=$P(B,"^",3),C4=$P(B,"^",4)
"RTN","XTERSUM",122,0)
 S:C2="" C2=%H
"RTN","XTERSUM",123,0)
 S:C2>%H C2=%H
"RTN","XTERSUM",124,0)
 S:C3="" C3=%H
"RTN","XTERSUM",125,0)
 S:C3<%H C3=%H
"RTN","XTERSUM",126,0)
 S:C4="" C4=$P($P(%ZE,":"),"^",2)
"RTN","XTERSUM",127,0)
 S:C4="" C4="[Unknown Xecute]"
"RTN","XTERSUM",128,0)
 S %AR(0)=C1_U_C2_U_C3_U_C4
"RTN","XTERSUM",129,0)
 S %AR(2)=%CD ;line
"RTN","XTERSUM",130,0)
 S %AR(3)=%GR ;global
"RTN","XTERSUM",131,0)
 S %AR(6)=%ST ;stack
"RTN","XTERSUM",132,0)
 QUIT
"RTN","XTERSUM",133,0)
 ;  =========
"RTN","XTERSUM",134,0)
 ; All of the parts are known at this point, now we need to find out
"RTN","XTERSUM",135,0)
 ;  if they are already recorded.  Call FMT to get the error in a standard
"RTN","XTERSUM",136,0)
 ;  format.
"RTN","XTERSUM",137,0)
INCR(V) ; Build a New Record in ^%ZTER(3.077,
"RTN","XTERSUM",138,0)
 N C,D0,RTN,T,DO,DD,DIC,X,Y
"RTN","XTERSUM",139,0)
 I $G(V)=""     Q 0   ; Input Value missing
"RTN","XTERSUM",140,0)
 ;
"RTN","XTERSUM",141,0)
 S V=$$FMT(V) ;Get V in standard form
"RTN","XTERSUM",142,0)
 S RTN=$P($G(%AR(0)),"^",4)
"RTN","XTERSUM",143,0)
 S:RTN="" RTN="[No RTN]"  ;  Error is in an Execute, so no routine
"RTN","XTERSUM",144,0)
 S D0=$O(^%ZTER(3.077,"B",$E(V,1,30),""))
"RTN","XTERSUM",145,0)
 ;  Need a 0 in D0 to create a new entry (New Error in New Location)
"RTN","XTERSUM",146,0)
 ;          in this file (3.077)
"RTN","XTERSUM",147,0)
 D:'D0
"RTN","XTERSUM",148,0)
 . S $P(%AR(0),U)=V
"RTN","XTERSUM",149,0)
 . L +^%ZTER(3.077,0):15
"RTN","XTERSUM",150,0)
 . S DIC="^%ZTER(3.077,",DIC(0)="FL",X=V
"RTN","XTERSUM",151,0)
 . D FILE^DICN S D0=+Y
"RTN","XTERSUM",152,0)
 . L -^%ZTER(3.077,0)
"RTN","XTERSUM",153,0)
 . QUIT
"RTN","XTERSUM",154,0)
 ;%ZTER placed the .01, See if need to set the rest of the data
"RTN","XTERSUM",155,0)
 D:'$D(^%ZTER(3.077,D0,2))
"RTN","XTERSUM",156,0)
 . S ^%ZTER(3.077,D0,0)=%AR(0)
"RTN","XTERSUM",157,0)
 . S ^%ZTER(3.077,D0,1,0)="^3.07701^^"
"RTN","XTERSUM",158,0)
 . S ^%ZTER(3.077,D0,2)=%AR(2)
"RTN","XTERSUM",159,0)
 . S ^%ZTER(3.077,D0,3)=%AR(3)
"RTN","XTERSUM",160,0)
 . S:$G(%AR(6))'="" ^%ZTER(3.077,D0,6)=%AR(6)
"RTN","XTERSUM",161,0)
 . D XREF(D0)
"RTN","XTERSUM",162,0)
 .QUIT
"RTN","XTERSUM",163,0)
 QUIT D0
"RTN","XTERSUM",164,0)
 ;
"RTN","XTERSUM",165,0)
XREF(DA) ;Set other X-refs because %ZTER set the entry
"RTN","XTERSUM",166,0)
 N DIK,D0
"RTN","XTERSUM",167,0)
 S DIK="^%ZTER(3.077,",DIK(1)=.01 D EN1^DIK
"RTN","XTERSUM",168,0)
 Q
"RTN","XTERSUM",169,0)
 ;  =========
"RTN","XTERSUM",170,0)
 ; First, we need to fix the various errors that are generated and make
"RTN","XTERSUM",171,0)
 ;  sure that they are consistant with our standard error representations.
"RTN","XTERSUM",172,0)
 ; Some additional work might be needed here to reflect the differences of
"RTN","XTERSUM",173,0)
 ;  other MUMPS implementations which do not follow the DSM error format.
"RTN","XTERSUM",174,0)
FMT(V) ;Format the error string
"RTN","XTERSUM",175,0)
 S V=$$FMT^%ZTER(V)
"RTN","XTERSUM",176,0)
 S V=$TR($E($P(V,", ",1,2),1,63),"^","~")
"RTN","XTERSUM",177,0)
 ; Adjustment for Cache  - MTZ/RCR 23MAR2005
"RTN","XTERSUM",178,0)
 ; Move the error description
"RTN","XTERSUM",179,0)
 ;I V["<"&($P(V,"<",2)[">") S V=$P(V,">",2)_", "_$P(V,">")_">"
"RTN","XTERSUM",180,0)
 Q V
"RTN","XTERSUM",181,0)
 ;  =========
"RTN","XTERSUM",182,0)
 ; Inputs are collected from the Error Trap
"RTN","XTERSUM",183,0)
 ; Everything has been collected; Now Create the SubRecord in
"RTN","XTERSUM",184,0)
 ;  ^%ZTER(3.077, But first check to see if the entity has not already
"RTN","XTERSUM",185,0)
 ;  been collected.  If found;
"RTN","XTERSUM",186,0)
 ;  Returns the subIEN for the entity (D1 level).
"RTN","XTERSUM",187,0)
 ;  If NOT found, Return 0
"RTN","XTERSUM",188,0)
PLACERR ;
"RTN","XTERSUM",189,0)
 N %L,D1,KEY,T,T1,T2
"RTN","XTERSUM",190,0)
 S T=$G(^%ZTER(3.077,D0,0))
"RTN","XTERSUM",191,0)
 S KEY=%K_":"_%LOC ;_":"_%EN
"RTN","XTERSUM",192,0)
 S D1=$O(^%ZTER(3.077,D0,1,"B",KEY,""))
"RTN","XTERSUM",193,0)
 D:'D1  ; Skip if already created
"RTN","XTERSUM",194,0)
 . S:'$D(^%ZTER(3.077,D0,1,0)) ^%ZTER(3.077,D0,1,0)="^3.07701^"
"RTN","XTERSUM",195,0)
 . S D1=$P(^%ZTER(3.077,D0,1,0),U,3)+1
"RTN","XTERSUM",196,0)
 . S $P(^%ZTER(3.077,D0,1,0),U,3,4)=D1_U_D1
"RTN","XTERSUM",197,0)
 . S ^%ZTER(3.077,D0,1,"B",KEY,D1)=""
"RTN","XTERSUM",198,0)
 . S ^%ZTER(3.077,D0,1,D1,0)=KEY_U_%H_U_%ZH_U_$G(%DUZ)
"RTN","XTERSUM",199,0)
 . S:%CD'=$G(^%ZTER(3.077,D0,2)) ^%ZTER(3.077,D0,1,D1,1)=%CD ;line
"RTN","XTERSUM",200,0)
 . S:%GR'=$G(^%ZTER(3.077,D0,3)) ^%ZTER(3.077,D0,1,D1,2)=%GR ;global
"RTN","XTERSUM",201,0)
 . F  S %L=$L(%XUENV,"^")  Q:%L=3  D
"RTN","XTERSUM",202,0)
 . . S %XUENV=$P(%XUENV,"^",1,3)
"RTN","XTERSUM",203,0)
 . . I %L<3   S $P(%XUENV,U,3)="[?]"
"RTN","XTERSUM",204,0)
 . .QUIT
"RTN","XTERSUM",205,0)
 . I "^^[?]"[%XUENV  S %XUENV="^^"
"RTN","XTERSUM",206,0)
 . S ^%ZTER(3.077,D0,1,D1,3)=%DUZ_U_%XQY_U_%XQY0_U_%ZTSK_U_%XUENV_U_%XWBTBF
"RTN","XTERSUM",207,0)
 . S:%ST'=$G(^%ZTER(3.077,D0,6)) ^%ZTER(3.077,D0,1,D1,6)=%ST ;stack
"RTN","XTERSUM",208,0)
 . S %AR(0)=$G(%AR(0))
"RTN","XTERSUM",209,0)
 . S T1=$P(T,U,2,4),T2=$P($G(%AR(0)),U,2,4)
"RTN","XTERSUM",210,0)
 . S:T1'=T2 $P(^%ZTER(3.077,D0,0),U,2,4)=T2
"RTN","XTERSUM",211,0)
 .QUIT
"RTN","XTERSUM",212,0)
 QUIT
"RTN","XTERSUM",213,0)
 ;  =========
"RTN","XTERSUM",214,0)
 ; Build a data structure to reflect the Stack and the code at
"RTN","XTERSUM",215,0)
 ;  different stack levels of the error trap capture.  Store in
"RTN","XTERSUM",216,0)
 ;  the %ST string for transfer to the record.
"RTN","XTERSUM",217,0)
 ; While scanning the symbols, pick up the following symbols if
"RTN","XTERSUM",218,0)
 ;  available; from symbol table;
"RTN","XTERSUM",219,0)
 ;  Output
"RTN","XTERSUM",220,0)
 ;  %DUZ    << DUZ     = The User Identifier
"RTN","XTERSUM",221,0)
 ;  %ZTSK   << ZTSK    = The TASK Pointer being performed
"RTN","XTERSUM",222,0)
 ;  %XQY    << XQY     = The OPTION being performed
"RTN","XTERSUM",223,0)
 ;  %XQY0   << XQY0    = The Name of the OPTION
"RTN","XTERSUM",224,0)
 ;  %ZTQUED << ZTQUEUED  = 0 means Submanager, .5 Subman in Cleanup
"RTN","XTERSUM",225,0)
 ;                          other number = Task Being Performed.
"RTN","XTERSUM",226,0)
 ;  %XUENV  << XUENV   = Operational Environment and CPU of the Problem
"RTN","XTERSUM",227,0)
 ;     piece 1 = Global Volume
"RTN","XTERSUM",228,0)
 ;     piece 2 = Routine Volume
"RTN","XTERSUM",229,0)
 ;     piece 3 = CPU Used
"RTN","XTERSUM",230,0)
 ; %XWBTBUF << XWBTBUF = RPC Broker Action
"RTN","XTERSUM",231,0)
GETSTK(X1,X2) ; Build the Stack String
"RTN","XTERSUM",232,0)
 N BF,BFD,ST,T,T0,V0
"RTN","XTERSUM",233,0)
 S (V0,T0)=0,ST=""
"RTN","XTERSUM",234,0)
 S (%DUZ,%VTQUED,%XQY,%XQY0,%XWBTBF,%ZTSK)="",%XUENV="^^"
"RTN","XTERSUM",235,0)
 F   S V0=$O(^%ZTER(1,X1,1,X2,"ZV",V0))   Q:V0'>0   D
"RTN","XTERSUM",236,0)
 . S BF=$G(^(V0,0))
"RTN","XTERSUM",237,0)
 . S BFD=$G(^("D"))
"RTN","XTERSUM",238,0)
 . D:BF["$STACK("
"RTN","XTERSUM",239,0)
 . . I BF[",""ECODE"")"   S %EC=BFD  Q
"RTN","XTERSUM",240,0)
 . . I BF[",""MCODE"")"   S %MC=BFD  Q
"RTN","XTERSUM",241,0)
 . . I BF[",""PLACE"")"   D          Q
"RTN","XTERSUM",242,0)
 . . . S %PL=BFD
"RTN","XTERSUM",243,0)
 . . . S %PL=$P(%PL," ")_":"_$E($P(%PL," ",2),2,999)
"RTN","XTERSUM",244,0)
 . . . S:%EC'="" %PL="*"_%PL
"RTN","XTERSUM",245,0)
 . . . S ST=ST_">"_%PL
"RTN","XTERSUM",246,0)
 . . . S:$L(ST)>240 ST=$P(ST,">",1,5)_"> ... >"_$P(ST,">",8,999)
"RTN","XTERSUM",247,0)
 . . .QUIT
"RTN","XTERSUM",248,0)
 . .QUIT
"RTN","XTERSUM",249,0)
 . I BF="DUZ"      S %DUZ=BFD Q
"RTN","XTERSUM",250,0)
 . I BF="ZTQUED"   S %ZTQUED=BFD Q
"RTN","XTERSUM",251,0)
 . I BF="XQY"      S %XQY=BFD Q
"RTN","XTERSUM",252,0)
 . I BF="XQY0"     S %XQY0=$P(BFD,U,2) Q
"RTN","XTERSUM",253,0)
 . I BF="XUENV"    S %XUENV=$P(BFD,U,1,3) Q
"RTN","XTERSUM",254,0)
 . I BF="XWBTBUF"  S %XWBTBUF=$P(BFD,U) Q
"RTN","XTERSUM",255,0)
 . I BF="ZTSK"     S %ZTSK=BFD Q
"RTN","XTERSUM",256,0)
 .QUIT
"RTN","XTERSUM",257,0)
 QUIT "["_$E(ST,2,999)_"]"
"RTN","XTERSUM",258,0)
 ;  =========
"RTN","XTERSUM",259,0)
 ;
"RTN","XTERSUM",260,0)
 ; Check the Cross References for the expected data
"RTN","XTERSUM",261,0)
 ;  But first check to see if the entity has not already been collected.
"RTN","XTERSUM",262,0)
 ;  If FOUND,       Returns the IEN for the entity.
"RTN","XTERSUM",263,0)
 ;  If Not fOUND,   Return 0.
"RTN","XTERSUM",264,0)
 ;  Need a 0 to create a new entry in this file (3.077)
"RTN","XTERSUM",265,0)
CHKXRF(XX,K1,K2) ;
"RTN","XTERSUM",266,0)
 N KEY
"RTN","XTERSUM",267,0)
 S KEY=+$G(K2)
"RTN","XTERSUM",268,0)
 S:XX="" XX="B"
"RTN","XTERSUM",269,0)
 S K1=$G(K1)
"RTN","XTERSUM",270,0)
 I K1="" Q 0 ; Bad Second Argument
"RTN","XTERSUM",271,0)
 ;
"RTN","XTERSUM",272,0)
 I '$D(^%ZTER(3.077,XX,K1,KEY)) S KEY=$O(^%ZTER(3.077,XX,K1,KEY))
"RTN","XTERSUM",273,0)
 S:KEY="" KEY=0
"RTN","XTERSUM",274,0)
 QUIT KEY
"RTN","XTERSUM",275,0)
 ;  =========
"RTN","XTERSUM1")
0^2^B11333211^n/a
"RTN","XTERSUM1",1,0)
XTERSUM1 ;ISF/RCR,RWF - Error Trap Summary Utilities ;08/25/10  14:23
"RTN","XTERSUM1",2,0)
 ;;8.0;KERNEL;**431**;Jul 10, 1995;Build 35
"RTN","XTERSUM1",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XTERSUM1",4,0)
 Q
"RTN","XTERSUM1",5,0)
 ;Utilities for XTERSUM
"RTN","XTERSUM1",6,0)
 ;No public entry points in this routine.
"RTN","XTERSUM1",7,0)
 ;  =========
"RTN","XTERSUM1",8,0)
 ; The one input is the $H day to list the errors for.  Defaults to today
"RTN","XTERSUM1",9,0)
TSTSTK(%H) ; Use this entry point to test the GETSTK entry point
"RTN","XTERSUM1",10,0)
 N I,J,U,X
"RTN","XTERSUM1",11,0)
 S U="^"
"RTN","XTERSUM1",12,0)
 S %H=$G(%H,$H)
"RTN","XTERSUM1",13,0)
 ;S:%H="" %H=+$H
"RTN","XTERSUM1",14,0)
 F I=1:1 S X=$J(I,3)_":"_$$GETSTK^XTERSUM(%H,I)  Q:X[":[]"   D
"RTN","XTERSUM1",15,0)
 . W !
"RTN","XTERSUM1",16,0)
 . F J=1:80:$L(X) W $E(X,J,J+79),!
"RTN","XTERSUM1",17,0)
 .QUIT
"RTN","XTERSUM1",18,0)
 QUIT
"RTN","XTERSUM1",19,0)
 ;  =========
"RTN","XTERSUM1",20,0)
LOCATE() ; Return the Environment and CPU Name
"RTN","XTERSUM1",21,0)
 N CPU,NM,Y
"RTN","XTERSUM1",22,0)
 S U="^"
"RTN","XTERSUM1",23,0)
 D GETENV^%ZOSV
"RTN","XTERSUM1",24,0)
 S CPU=$P(Y,U,3)
"RTN","XTERSUM1",25,0)
 S NM=$P(Y,U,4)
"RTN","XTERSUM1",26,0)
 S NM=$TR($P(NM,CPU),":",";")_";"_CPU
"RTN","XTERSUM1",27,0)
 I NM="" S NM=$$KSP^XUPARAM("INST")
"RTN","XTERSUM1",28,0)
 QUIT NM
"RTN","XTERSUM1",29,0)
 ;  =========
"RTN","XTERSUM1",30,0)
 ; >W $$DEFDAT^XTERSUM1("T"[,"NOW"]) - Generate FileMan Date for
"RTN","XTERSUM1",31,0)
 ;     Process Returns>>YYMMDD.HHMMSS^$TR($H,",","^")^DOW
"RTN","XTERSUM1",32,0)
 ;     Good for dates  and times which span 1868 through 2699.  If the
"RTN","XTERSUM1",33,0)
 ;     upper date becomes a problem, I promise to come back and modify
"RTN","XTERSUM1",34,0)
 ;     the code.
"RTN","XTERSUM1",35,0)
 ;  X - Incoming date specifier
"RTN","XTERSUM1",36,0)
 ;  Y - The Return Value
"RTN","XTERSUM1",37,0)
 ;  Z - Optional Default
"RTN","XTERSUM1",38,0)
DEFDAT(X,Z) ; Find the Default Date
"RTN","XTERSUM1",39,0)
 N %DT,%H,%T,%Y,Y
"RTN","XTERSUM1",40,0)
 S X=$G(X)
"RTN","XTERSUM1",41,0)
 S Z=$G(Z) ;1410000 = 31Dec, 1840 @ 235959+.00000001
"RTN","XTERSUM1",42,0)
 S:X="" X=Z
"RTN","XTERSUM1",43,0)
 S:X="" X=$H
"RTN","XTERSUM1",44,0)
 I X>10000,X<1410000 S X=$$HTFM^XLFDT(X) ;   Library Function
"RTN","XTERSUM1",45,0)
 S %DT="TS" ; Time in Seconds
"RTN","XTERSUM1",46,0)
 D ^%DT
"RTN","XTERSUM1",47,0)
 D:Y
"RTN","XTERSUM1",48,0)
 . S X=Y
"RTN","XTERSUM1",49,0)
 . D H^%DTC
"RTN","XTERSUM1",50,0)
 . QUIT
"RTN","XTERSUM1",51,0)
 QUIT Y_"^"_%H_"^"_%T_"^"_%Y
"RTN","XTERSUM1",52,0)
 ;  =========
"RTN","XTERSUM1",53,0)
 ;
"RTN","XTERSUM1",54,0)
PURGE ;Clean-up the Error Summary data
"RTN","XTERSUM1",55,0)
 N DT30,DT90,DH90,XTDAT,X,IX1,IX2,DA,DIK
"RTN","XTERSUM1",56,0)
 S X=$P($G(^XTV(8989.3,1,"ZTER")),U,4),X=$S('X:90,1:X) ;Get keep days
"RTN","XTERSUM1",57,0)
 S DT30=$$HTFM^XLFDT($H-30),DH90=$H-X,DT90=$$HTFM^XLFDT(DH90)
"RTN","XTERSUM1",58,0)
 S IX1=0
"RTN","XTERSUM1",59,0)
 ;Remove entry if last seen > 90 days ago.  Remove Error Event > 30 days ago.
"RTN","XTERSUM1",60,0)
 F  S IX1=$O(^%ZTER(3.077,IX1)),IX2=0 Q:'IX1  S X=$G(^(IX1,0)) D
"RTN","XTERSUM1",61,0)
 . I $P(X,U)="" S DA=IX1,DIK="^%ZTER(3.077," D ^DIK Q  ;Missing error
"RTN","XTERSUM1",62,0)
 . S X=$P(X,U,3) I X,X<DT90 S DA=IX1,DIK="^%ZTER(3.077," D ^DIK Q
"RTN","XTERSUM1",63,0)
 . ;If no last seen date give it one.
"RTN","XTERSUM1",64,0)
 . I X="" S $P(^%ZTER(3.077,IX1,0),U,3)=$$HTFM^XLFDT($H)
"RTN","XTERSUM1",65,0)
 . F  S IX2=$O(^%ZTER(3.077,IX1,1,IX2)) Q:'IX2  S X=$G(^(IX2,0)) D
"RTN","XTERSUM1",66,0)
 . . I $P(X,U,2)>DT30 Q  ;Keep Error events for 30 days
"RTN","XTERSUM1",67,0)
 . . S DA=IX2,DA(1)=IX1,DIK="^%ZTER(3.077,DA(1),1," D ^DIK K DA
"RTN","XTERSUM1",68,0)
 . . Q
"RTN","XTERSUM1",69,0)
 . S IX2=0 ;Remove Frequency Distribution
"RTN","XTERSUM1",70,0)
 . F  S IX2=$O(^%ZTER(3.077,IX1,4,IX2)) Q:'IX2  I IX2<DH90 S DA=IX2,DA(1)=IX1,DIK="^%ZTER(3.077,DA(1),4," D ^DIK K DA
"RTN","XTERSUM1",71,0)
 . Q
"RTN","XTERSUM1",72,0)
 Q
"RTN","XTERSUM1",73,0)
 ;
"RTN","XTERSUM1",74,0)
POST ;Post-init for patch XU*8*431
"RTN","XTERSUM1",75,0)
 N FDA,%D,%S,SCR,ZTOS,IEN,%ZT
"RTN","XTERSUM1",76,0)
 S FDA(8989.3,"1,",520.1)=10,FDA(8989.3,"1,",520.2)=0 ;Give site defaults
"RTN","XTERSUM1",77,0)
 S FDA(8989.3,"1,",520.3)=7,FDA(8989.3,"1,",520.4)=90 ;More defaults
"RTN","XTERSUM1",78,0)
 D FILE^DIE("","FDA")
"RTN","XTERSUM1",79,0)
 D PATCH^ZTMGRSET(431)
"RTN","XTERSUM1",80,0)
 I $E($RE(^XMB("NETNAME")),1,6)="VOG.AV" D VA ;Only setup for VA sites.
"RTN","XTERSUM1",81,0)
 ;Get a baseline of the last 30 days.
"RTN","XTERSUM1",82,0)
 D ADD^XTERSUM
"RTN","XTERSUM1",83,0)
 Q
"RTN","XTERSUM1",84,0)
 ;
"RTN","XTERSUM1",85,0)
VA ;
"RTN","XTERSUM1",86,0)
 S IEN=$$FIND1^DIC(3.8,,"X","XTER SUMMARY LOAD")_","
"RTN","XTERSUM1",87,0)
 Q:IEN'>0
"RTN","XTERSUM1",88,0)
 S FDA(3.812,"?+1,"_IEN,.01)="S.XTER SUMMARY LOAD@FORUM.VA.GOV"
"RTN","XTERSUM1",89,0)
 D UPDATE^DIE("","FDA") I $D(^TMP("DIERR",$J)) S %ZT($NA(^TMP("DIERR",$J)))="" D ^%ZTER
"RTN","XTERSUM1",90,0)
 K FDA S FDA(8989.3,"1,",520.2)=1
"RTN","XTERSUM1",91,0)
 D UPDATE^DIE("","FDA") I $D(^TMP("DIERR",$J)) S %ZT($NA(^TMP("DIERR",$J)))="" D ^%ZTER
"RTN","XTERSUM1",92,0)
 Q
"RTN","XTERSUM3")
0^4^B11921916^n/a
"RTN","XTERSUM3",1,0)
XTERSUM3 ;ISF/RWF - Transport and save Error summaries ;03/10/11
"RTN","XTERSUM3",2,0)
 ;;8.0;KERNEL;**431**;Jul 10, 1995;Build 35
"RTN","XTERSUM3",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XTERSUM3",4,0)
 Q
"RTN","XTERSUM3",5,0)
 ;
"RTN","XTERSUM3",6,0)
SEND ;Send summary to consolidation site.
"RTN","XTERSUM3",7,0)
 N XMZ,XMY,XMTEXT,XTI,XT1,XT2,XT3,XTFG,FDA,XTNOW
"RTN","XTERSUM3",8,0)
 Q:'$P(^XTV(8989.3,1,"ZTER"),U,2)  ;Check if we should send
"RTN","XTERSUM3",9,0)
 S XT1=0,XTNOW=$$NOW^XLFDT
"RTN","XTERSUM3",10,0)
 L +^%ZTER(3.077,0):15 E  Q  ;Quit if don't get lock
"RTN","XTERSUM3",11,0)
 F  S XT1=$O(^%ZTER(3.077,XT1)) Q:'XT1  D
"RTN","XTERSUM3",12,0)
 . S XT2=$G(^(XT1,0)) I $P(XT2,"^",1)="" D REMOVE(XT1) Q
"RTN","XTERSUM3",13,0)
 . I $P(XT2,U,7)<$P(XT2,U,3) D SND1(XT1) ;Send if UPLOAD < MOST RECENT
"RTN","XTERSUM3",14,0)
 L -^%ZTER(3.077,0)
"RTN","XTERSUM3",15,0)
 Q
"RTN","XTERSUM3",16,0)
 ;
"RTN","XTERSUM3",17,0)
SND1(XT1) ;Send one entry
"RTN","XTERSUM3",18,0)
 N XTX,IEN K ^TMP($J),FDA
"RTN","XTERSUM3",19,0)
 D ADD("$DATA"),ADD("~~ERROR TRAP SUMMARY^3.077"),ADD("$FILE:3.077")
"RTN","XTERSUM3",20,0)
 S IEN=XT1_","
"RTN","XTERSUM3",21,0)
 D GETS^DIQ(3.077,IEN,".01;1;2;3;6;20;7","IN","XTX") ;Fields to get
"RTN","XTERSUM3",22,0)
 S XTI=0
"RTN","XTERSUM3",23,0)
 F  S XTI=$O(XTX(3.077,IEN,XTI)) Q:'XTI  D ADD("~"_XTI_":"_XTX(3.077,IEN,XTI,"I"))
"RTN","XTERSUM3",24,0)
 S XT2=0
"RTN","XTERSUM3",25,0)
 F  S XT2=$O(^%ZTER(3.077,XT1,1,XT2)) Q:'XT2  D
"RTN","XTERSUM3",26,0)
 . I $P(^%ZTER(3.077,XT1,1,XT2,0),U,5) Q
"RTN","XTERSUM3",27,0)
 . K XTX S IEN=XT2_","_XT1_","
"RTN","XTERSUM3",28,0)
 . D GETS^DIQ(3.07701,IEN,".01;1;2;3;13;6","IN","XTX")
"RTN","XTERSUM3",29,0)
 . S FDA(3.07701,IEN,19)=1 ;Mark as sent.
"RTN","XTERSUM3",30,0)
 . S XTI=0 D ADD("$SUB:3.07701")
"RTN","XTERSUM3",31,0)
 . F  S XTI=$O(XTX(3.07701,IEN,XTI)) Q:'XTI  D ADD("~"_XTI_":"_XTX(3.07701,IEN,XTI,"I"))
"RTN","XTERSUM3",32,0)
 . D ADD("$END")
"RTN","XTERSUM3",33,0)
 . Q
"RTN","XTERSUM3",34,0)
 D ADD("$SAVE")
"RTN","XTERSUM3",35,0)
 S FDA(3.077,XT1_",",8)=XTNOW D FILE^DIE("K","FDA") ;Mark as sent.
"RTN","XTERSUM3",36,0)
 Q:'$O(^TMP($J,0))
"RTN","XTERSUM3",37,0)
 N XMDUZ,XMSUB,XMTEXT,XMY,XMSTRIP,XMMG,XMZ
"RTN","XTERSUM3",38,0)
 S XMTEXT="^TMP($J,",XMSUB="ERROR SUMMARY - "_XTNOW
"RTN","XTERSUM3",39,0)
 S XMY("G.XTER SUMMARY LOAD")=""
"RTN","XTERSUM3",40,0)
 D ^XMD
"RTN","XTERSUM3",41,0)
 Q
"RTN","XTERSUM3",42,0)
 ;
"RTN","XTERSUM3",43,0)
ADD(TXT) ;
"RTN","XTERSUM3",44,0)
 S C=$G(^TMP($J)),C=C+1,^TMP($J)=C,^TMP($J,C,0)=TXT
"RTN","XTERSUM3",45,0)
 Q
"RTN","XTERSUM3",46,0)
 ;
"RTN","XTERSUM3",47,0)
 ;This is the server code.
"RTN","XTERSUM3",48,0)
LOAD ;Load Summary
"RTN","XTERSUM3",49,0)
 N XT1,XT2,XT3,FDA,XTF,XTE,XI1,XI2,XTS,XTER,DONE
"RTN","XTERSUM3",50,0)
 S XMER=0,XT1=0,DONE=0,XI1=1,XI2=1,XTS=0
"RTN","XTERSUM3",51,0)
 X XMREC I XMRG'="$DATA" D FORWARD(XMZ) Q  ;Not correct start.
"RTN","XTERSUM3",52,0)
 X XMREC I $E(XMRG,1,4)'="~~ER" D FORWARD(XMZ) Q
"RTN","XTERSUM3",53,0)
 F  X XMREC Q:XMER  D  Q:DONE  ;XMRG has line from msg
"RTN","XTERSUM3",54,0)
 . I $E(XMRG,1,5)="$FILE" S XTF=+$P(XMRG,":",2),XTS=0 Q
"RTN","XTERSUM3",55,0)
 . I $E(XMRG,1,4)="$SUB" S XTF=+$P(XMRG,":",2),XTS=1,XI2=XI2+1 Q
"RTN","XTERSUM3",56,0)
 . I $E(XMRG,1)="~",$L($P(XMRG,":",2)) S FDA(XTF,$$IEN(XI1,XI2,XTS),+$P(XMRG,"~",2))=$P(XMRG,":",2,99) Q
"RTN","XTERSUM3",57,0)
 . I $E(XMRG,1,5)="$SAVE" S DONE=1 Q
"RTN","XTERSUM3",58,0)
 . I $E(XMRG,1,4)="$END" S XTS=0 Q
"RTN","XTERSUM3",59,0)
 . Q
"RTN","XTERSUM3",60,0)
 S XT1=$G(FDA(3.077,$$IEN(1,,0),.01)),XT2=0 S:$L(XT1) XT2=$O(^%ZTER(3.077,"B",XT1,0)) ;See if error allready record.
"RTN","XTERSUM3",61,0)
 I XT2 K FDA(3.077,$$IEN(1,,0),1) ;Remove First seen so don't over write
"RTN","XTERSUM3",62,0)
 I $D(FDA)>2 D UPDATE^DIE("","FDA","XTE","XTER") I $D(XTER) D FORWARD(XMZ)
"RTN","XTERSUM3",63,0)
 Q
"RTN","XTERSUM3",64,0)
 ;
"RTN","XTERSUM3",65,0)
IEN(V1,V2,V3) ;Build an ien
"RTN","XTERSUM3",66,0)
 Q $S('V3:"?+"_V1_",",1:"?+"_V2_",?+"_V1_",")
"RTN","XTERSUM3",67,0)
 ;
"RTN","XTERSUM3",68,0)
FORWARD(XMZ) ;Forward to group to look at error
"RTN","XTERSUM3",69,0)
 N XMY,XMDUZ
"RTN","XTERSUM3",70,0)
 S XMY("G.XTER SUMMARY ERROR")=""
"RTN","XTERSUM3",71,0)
 D ENT1^XMD
"RTN","XTERSUM3",72,0)
 Q
"RTN","XTERSUM3",73,0)
 ;
"RTN","XTERSUM3",74,0)
REMOVE(XTA) ;Remove a dangling count record
"RTN","XTERSUM3",75,0)
 N XTB
"RTN","XTERSUM3",76,0)
 K ^%ZTER(3.077,XTA)
"RTN","XTERSUM3",77,0)
 S XTB=""
"RTN","XTERSUM3",78,0)
 F  S XTB=$O(^%ZTER(3.077,"B",XTB)) Q:XTB=""  I $D(^%ZTER(3.077,"B",XTB,XTA)) K ^%ZTER(3.077,"B",XTB)
"RTN","XTERSUM3",79,0)
 Q
"RTN","XTERSUM3",80,0)
 ;
"RTN","XTERSUM3",81,0)
TESTL ;
"RTN","XTERSUM3",82,0)
 N XMCNT,XMER,XMREC,XMRG
"RTN","XTERSUM3",83,0)
 R !,"Msg#: ",XMZ:DTIME Q:'XMZ
"RTN","XTERSUM3",84,0)
 S XMCNT=.9,XMER=0
"RTN","XTERSUM3",85,0)
 S XMREC="S XMCNT=$O(^XMB(3.9,XMZ,2,XMCNT)) S:'XMCNT XMER=1 Q:XMER  S XMRG=^(XMCNT,0)"
"RTN","XTERSUM3",86,0)
 D LOAD
"RTN","XTERSUM3",87,0)
 Q
"RTN","XTERSUM4")
0^8^B4445199^n/a
"RTN","XTERSUM4",1,0)
XTERSUM4 ;ISF/RWF - Find error frequece ;05/27/10  14:25
"RTN","XTERSUM4",2,0)
 ;;8.0;KERNEL;**431**;;Build 35
"RTN","XTERSUM4",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XTERSUM4",4,0)
 Q
"RTN","XTERSUM4",5,0)
 ;
"RTN","XTERSUM4",6,0)
SHOW ;Show the top error
"RTN","XTERSUM4",7,0)
 N DIR,XTERMAX,DIRUT,DTOUT,DUOUT,ZTSAVE
"RTN","XTERSUM4",8,0)
 S DIR(0)="N^1:999",DIR("A")="Number of Errors to show",DIR("B")=5
"RTN","XTERSUM4",9,0)
 D ^DIR Q:$D(DIRUT)
"RTN","XTERSUM4",10,0)
 S XTERMAX=Y,ZTSAVE("XTERMAX")=""
"RTN","XTERSUM4",11,0)
 D EN^XUTMDEVQ("DQ^XTERSUM4","Top Errors",.ZTSAVE)
"RTN","XTERSUM4",12,0)
 Q
"RTN","XTERSUM4",13,0)
 ;
"RTN","XTERSUM4",14,0)
DQ N X,D0,TOP,MAX,I
"RTN","XTERSUM4",15,0)
 S D0=0,U="^",MAX=$G(XTERMAX,5)
"RTN","XTERSUM4",16,0)
 F  S D0=$O(^%ZTER(3.077,D0)) Q:'D0  D CHECK(D0,.TOP)
"RTN","XTERSUM4",17,0)
 S I="A",C=1
"RTN","XTERSUM4",18,0)
 W "Top ",MAX," Most Common Errors",?45,$$HTE^XLFDT($H),!
"RTN","XTERSUM4",19,0)
 F  S I=$O(TOP(I),-1),J="" Q:('I)!(C>MAX)  F  S J=$O(TOP(I,J),-1)  Q:('J)!(C>MAX)  S C=C+1,D0=J D SHOW1(D0)
"RTN","XTERSUM4",20,0)
 Q
"RTN","XTERSUM4",21,0)
 ;
"RTN","XTERSUM4",22,0)
CHECK(D0,TOP) ;
"RTN","XTERSUM4",23,0)
 N I,X,AR
"RTN","XTERSUM4",24,0)
 S X=$$SUMALL(D0,.AR),TOP(X,D0)=0
"RTN","XTERSUM4",25,0)
 Q
"RTN","XTERSUM4",26,0)
 ;
"RTN","XTERSUM4",27,0)
SHOW1(D0) ;Show 1 error
"RTN","XTERSUM4",28,0)
 N X,AR,I,J
"RTN","XTERSUM4",29,0)
 I $Y+10>IOSL D WAIT Q:$D(DIRUT)  W @IOF
"RTN","XTERSUM4",30,0)
 S X=^%ZTER(3.077,D0,0)
"RTN","XTERSUM4",31,0)
 W !!,"Error: ",$P(X,U,1),?45,"Total Count: ",$$SUMALL(D0,.AR)
"RTN","XTERSUM4",32,0)
 W !,"First Seen: ",$$FMTE^XLFDT($P(X,U,2)),?45,"Last Seen: ",$$FMTE^XLFDT($P(X,U,3))
"RTN","XTERSUM4",33,0)
 Q:$D(AR)<10
"RTN","XTERSUM4",34,0)
 W !,"Distribution over ",+AR," days"
"RTN","XTERSUM4",35,0)
 S RANGE=""
"RTN","XTERSUM4",36,0)
 F J=3:-1:0 W !,?5,$S(J:J*10,1:">0")," " F I=1:1:24 W $S('AR(I):" ",AR(I)'<(J*10):"x",1:" ")
"RTN","XTERSUM4",37,0)
 W !,"  Time: 1--4---8--12--16--20--24"
"RTN","XTERSUM4",38,0)
 Q
"RTN","XTERSUM4",39,0)
 ;
"RTN","XTERSUM4",40,0)
SUMALL(IEN,RET) ;Check one error
"RTN","XTERSUM4",41,0)
 N H,TOTAL,CNT,T,I,X
"RTN","XTERSUM4",42,0)
 S H=0,TOTAL=0,CNT=0
"RTN","XTERSUM4",43,0)
 F  S H=$O(^%ZTER(3.077,IEN,4,H)) Q:'H  S TOTAL=TOTAL+$$SUM1(.RET,IEN,H),CNT=CNT+1
"RTN","XTERSUM4",44,0)
 S RET=CNT
"RTN","XTERSUM4",45,0)
 Q TOTAL
"RTN","XTERSUM4",46,0)
 ;
"RTN","XTERSUM4",47,0)
SUM1(RET,IEN,H) ;Sum over one day, return array
"RTN","XTERSUM4",48,0)
 ;New at caller
"RTN","XTERSUM4",49,0)
 S X=$G(^%ZTER(3.077,IEN,4,H,0)),T=0
"RTN","XTERSUM4",50,0)
 I $L(X) F I=1:1:24 S RET(I)=$G(RET(I))+$P(X,"~",I),T=T+$P(X,"~",I)
"RTN","XTERSUM4",51,0)
 Q T
"RTN","XTERSUM4",52,0)
 ;
"RTN","XTERSUM4",53,0)
WAIT ;Wait at end of page
"RTN","XTERSUM4",54,0)
 Q:$E(IOST,1)="P"
"RTN","XTERSUM4",55,0)
 N DIR
"RTN","XTERSUM4",56,0)
 S DIR(0)="E" D ^DIR
"RTN","XTERSUM4",57,0)
 Q
"RTN","ZTER")
0^3^B51850002^B38379004
"RTN","ZTER",1,0)
%ZTER ; ISC-SF.SEA/JLI - KERNEL ERROR TRAP TO LOG ERRORS ;05/06/10  17:17
"RTN","ZTER",2,0)
 ;;8.0;KERNEL;**8,18,32,24,36,63,73,79,86,112,118,162,275,392,455,431**;JUL 10, 1995;Build 35
"RTN","ZTER",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ZTER",4,0)
 S ^TMP("$ZE",$J,1)=$$LGR^%ZOSV
"RTN","ZTER",5,0)
 S ^TMP("$ZE",$J,0)=$$EC^%ZOSV
"RTN","ZTER",6,0)
 S ^TMP("$ZE",$J,2)=$ETRAP,$ETRAP="D ERR^%ZTER"
"RTN","ZTER",7,0)
 S ^TMP("$ZE",$J,3)=$ZA_"~#~"_$ZB
"RTN","ZTER",8,0)
 I (^TMP("$ZE",$J,0)["-ALLOC,")!(^TMP("$ZE",$J,0)["<STORE>")!(^TMP("$ZE",$J,0)["-MEMORY") D
"RTN","ZTER",9,0)
 . I '$D(XUALLOC) D
"RTN","ZTER",10,0)
 . . K (%ZTERLGR,DUZ,DT,DISYS,IO,IOBS,IOF,IOM,ION,IOSL,IOST,IOT,IOS,IOXY,U,XRTL,XQVOL,XQY,XQY0,XQDIC,XQPSM,XQPT,XQAUDIT,XQXFLG,ZTSTOP,ZTQUEUED,ZTREQ,DA,D0,DI,DIC,DIE)
"RTN","ZTER",11,0)
 . S %ZTER13A="ALLOC"
"RTN","ZTER",12,0)
Z1 K XUALLOC
"RTN","ZTER",13,0)
 S %ZTERZE=^TMP("$ZE",$J,0),%ZT("^XUTL(""XQ"",$J)")="" S:'$D(%ZTERLGR) %ZTERLGR=^TMP("$ZE",$J,1)
"RTN","ZTER",14,0)
 G:$$SCREEN(%ZTERZE,1) EXIT ;Let site screen errors, count don't show
"RTN","ZTER",15,0)
 ;Get a record.
"RTN","ZTER",16,0)
 S %ZTERH1=+$H L +^%ZTER(1,%ZTERH1,0):15
"RTN","ZTER",17,0)
 S %ZTER11N=$P($G(^%ZTER(1,%ZTERH1,1,0)),"^",3)
"RTN","ZTER",18,0)
 ;S %ZTER11N=$P($G(^%ZTER(1,%ZTERH1,0)),"^",2)+1,^%ZTER(1,%ZTERH1,0)=%ZTERH1_"^"_%ZTER11N,^(1,0)="^3.0751^"_%ZTER11N_"^"_%ZTER11N
"RTN","ZTER",19,0)
Z2 S %ZTER11N=%ZTER11N+1 G:$D(^%ZTER(1,%ZTERH1,1,%ZTER11N,0)) Z2
"RTN","ZTER",20,0)
 S %ZTER11C=$P($G(^%ZTER(1,%ZTERH1,0)),"^",2)+1
"RTN","ZTER",21,0)
 S ^%ZTER(1,%ZTERH1,0)=%ZTERH1_"^"_%ZTER11C,^%ZTER(1,%ZTERH1,1,0)="^3.0751^"_%ZTER11N_"^"_%ZTER11C
"RTN","ZTER",22,0)
 I %ZTER11N=1 S ^%ZTER(1,0)="ERROR LOG^3.075^"_%ZTERH1_"^"_($P(^%ZTER(1,0),"^",4)+1)
"RTN","ZTER",23,0)
 S %ZTERRT=$NA(^%ZTER(1,%ZTERH1,1,%ZTER11N))
"RTN","ZTER",24,0)
 S @%ZTERRT@(0)=%ZTER11N_"^"_$G(%ZTERAPP),^("ZE")=%ZTERZE S:$D(%ZTERLGR) ^("GR")=%ZTERLGR K %ZTERLGR ;p431
"RTN","ZTER",25,0)
 L -^%ZTER(1,%ZTERH1,0)
"RTN","ZTER",26,0)
 K %ZTER12A,%ZTER12B,%ZTER11C
"RTN","ZTER",27,0)
 ;Save $ZA and $ZB
"RTN","ZTER",28,0)
 S %ZTER12A=$$ENC($P(^TMP("$ZE",$J,3),"~#~",1)),%ZTER12B=$$ENC($P(^TMP("$ZE",$J,3),"~#~",2))
"RTN","ZTER",29,0)
 S %ZTER11I=$$UCI()
"RTN","ZTER",30,0)
 S @%ZTERRT@("H")=$H,^("J")=$J_"^^^"_%ZTER11I_"^"_$J
"RTN","ZTER",31,0)
 S @%ZTERRT@("I")=$I_"^"_%ZTER12A_"^"_%ZTER12B_"^"_$G(IO("ZIO"))_"^"_$X_"^"_$Y_"^"_$P
"RTN","ZTER",32,0)
 S %ZTERROR=$$ETXT
"RTN","ZTER",33,0)
 S %ZTERCNT=0
"RTN","ZTER",34,0)
 D STACK^%ZTER1 ;Save Special Variables
"RTN","ZTER",35,0)
 D SAVE("$X $Y",$X_" "_$Y)
"RTN","ZTER",36,0)
 I ^%ZOSF("OS")["OpenM" D
"RTN","ZTER",37,0)
 . D SAVE("$ZU(56,2)",$ZU(56,2))
"RTN","ZTER",38,0)
 . I $ZV["VMS" S $P(@%ZTERRT@("J"),"^",2,3)=$ZF("GETJPI",$J,"PRCNAM")_"^"_$ZF("GETJPI",$J,"USERNAME")
"RTN","ZTER",39,0)
 D SAVE("$ZV",$ZV)
"RTN","ZTER",40,0)
 ;End Special Variables
"RTN","ZTER",41,0)
 I ^%ZOSF("OS")["VAX DSM" K %ZTER11A,%ZTER11B D VXD^%ZTER1 I 1
"RTN","ZTER",42,0)
 E  D
"RTN","ZTER",43,0)
 . S %ZTERVAR="%"
"RTN","ZTER",44,0)
 . F  D VAR:$D(@%ZTERVAR)#2,SUBS:$D(@%ZTERVAR)>9 S %ZTERVAR=$O(@%ZTERVAR) Q:%ZTERVAR=""
"RTN","ZTER",45,0)
 D GLOB
"RTN","ZTER",46,0)
 S:%ZTERCNT>0 @%ZTERRT@("ZV",0)="^3.0752^"_%ZTERCNT_"^"_%ZTERCNT
"RTN","ZTER",47,0)
 S:'$D(^%ZTER(1,"B",%ZTERH1)) ^(%ZTERH1,%ZTERH1)=""
"RTN","ZTER",48,0)
 S ^%ZTER(1,%ZTERH1,1,"B",%ZTER11N,%ZTER11N)=""
"RTN","ZTER",49,0)
LIN ;Find the line of the error
"RTN","ZTER",50,0)
 S %ZTERY=$P(%ZTERZE,","),%ZTERX=$P(%ZTERY,"^") S:%ZTERX[">" %ZTERX=$P(%ZTERX,">",2)
"RTN","ZTER",51,0)
 I %ZTERX'="" D
"RTN","ZTER",52,0)
 . N X,XCNP,DIF K ^TMP($J,"XTER1")
"RTN","ZTER",53,0)
 . S X=$P($P(%ZTERY,"^",2),":") Q:X=""  X ^%ZOSF("TEST") Q:'$T
"RTN","ZTER",54,0)
 . S XCNP=0,DIF="^TMP($J,""XTER1""," X ^%ZOSF("LOAD") S %ZTERY=$P(%ZTERX,"+",1)
"RTN","ZTER",55,0)
 . I %ZTERY'="" F X=0:0 S X=$O(^TMP($J,"XTER1",X)) Q:X'>0  I $P(^(X,0)," ")=%ZTERY S X=X+$P(%ZTERX,"+",2),%ZTZLIN=$G(^TMP($J,"XTER1",X,0)) Q
"RTN","ZTER",56,0)
 . I %ZTERY="" S X=+$P(%ZTERX,"+",2) Q:X'>0  S %ZTZLIN=$G(^TMP($J,"XTER1",X,0))
"RTN","ZTER",57,0)
 K ^TMP($J,"XTER1")
"RTN","ZTER",58,0)
 S:$D(%ZTZLIN) @%ZTERRT@("LINE")=%ZTZLIN K %ZTZLIN
"RTN","ZTER",59,0)
 I %ZTERROR'="",$D(^%ZTER(2,"B",%ZTERROR)) S %ZTERROR=%ZTERROR_"^"_$P(^%ZTER(2,+$O(^(%ZTERROR,0)),0),"^",2)
"RTN","ZTER",60,0)
EXIT ;
"RTN","ZTER",61,0)
 D ECNT ;Update the Error Count in the Summary
"RTN","ZTER",62,0)
 I $G(%ZTER13A)["ALLOC" HALT  ;Don't allow job to go on.
"RTN","ZTER",63,0)
 S $EC="",$ET=$G(^TMP("$ZE",$J,2))
"RTN","ZTER",64,0)
 K ^TMP("$ZE",$J)
"RTN","ZTER",65,0)
 K %ZTER11A,%ZTER11B,%ZTER11D,%ZTER11H,%ZTER11I,%ZTER11L,%ZTER11N,%ZTER11Q,%ZTER11S,%ZTER11Z,%ZTER111,%ZTER112
"RTN","ZTER",66,0)
 K %ZTER12A,%ZTER12B,%ZTER13A,%ZTERVAP,%ZTERVAR,%ZTERSUB,%ZTERROR,%ZTERZE
"RTN","ZTER",67,0)
 K %ZTERRT,%ZTERH1,%ZTERCNT,%ZTERX,%ZTERY,%ZT
"RTN","ZTER",68,0)
 H 1 ;Slow down process
"RTN","ZTER",69,0)
 Q
"RTN","ZTER",70,0)
 ;
"RTN","ZTER",71,0)
VAR I "%ZTER"'=$E(%ZTERVAR,1,5) D SAVE(%ZTERVAR,@%ZTERVAR) Q
"RTN","ZTER",72,0)
 Q
"RTN","ZTER",73,0)
 ;
"RTN","ZTER",74,0)
SAVE(%ZTERN,%ZTERV) ;Save name and value into global, use special variables
"RTN","ZTER",75,0)
 S %ZTERCNT=%ZTERCNT+1,@%ZTERRT@("ZV",%ZTERCNT,0)=%ZTERN
"RTN","ZTER",76,0)
 I $L(%ZTERV)<256 S @%ZTERRT@("ZV",%ZTERCNT,"D")=%ZTERV Q
"RTN","ZTER",77,0)
 ;Variable too long for global node
"RTN","ZTER",78,0)
 S @%ZTERRT@("ZV",%ZTERCNT,"D")=$E(%ZTERV,1,255),^("L")=$L(%ZTERV)
"RTN","ZTER",79,0)
 N %ZTERI
"RTN","ZTER",80,0)
 F %ZTERI=1:1 S %ZTERV=$E(%ZTERV,256,$L(%ZTERV)) Q:'$L(%ZTERV)  S @%ZTERRT@("ZV",%ZTERCNT,"D",%ZTERI)=$E(%ZTERV,1,255)
"RTN","ZTER",81,0)
 Q
"RTN","ZTER",82,0)
 ;
"RTN","ZTER",83,0)
SUBS ;Save sub-nodes
"RTN","ZTER",84,0)
 S %ZTER11S="" Q:"%ZT("=$E(%ZTERVAR,1,4)  Q:",%ZTER11S,%ZTER11L,"[(","_%ZTERVAR_",")
"RTN","ZTER",85,0)
 S %ZTERVAP=%ZTERVAR_"(",%ZTERSUB="%ZTER11S)"
"RTN","ZTER",86,0)
 S %ZTER11S=%ZTERVAR
"RTN","ZTER",87,0)
 F  S %ZTER11S=$Q(@%ZTER11S) Q:%ZTER11S=""  D SAVE(%ZTER11S,@%ZTER11S)
"RTN","ZTER",88,0)
 Q
"RTN","ZTER",89,0)
 ;
"RTN","ZTER",90,0)
GLOB ; save off a list of global subtrees, %ZT is passed in subscripted by name
"RTN","ZTER",91,0)
 ; %ZTERCNT passed in to count the nodes we traverse
"RTN","ZTER",92,0)
 ; %ZTERNOD the nodes through which we $QUERY
"RTN","ZTER",93,0)
 ; %ZTERNAM the names of the global subtrees we're saving
"RTN","ZTER",94,0)
 ; %ZTEROPN is %ZTERNAM, evaluated, without close paren for $PIECEing
"RTN","ZTER",95,0)
 N %ZTERNOD,%ZTERNAM,%ZTEROPN
"RTN","ZTER",96,0)
 S %ZTERNAM="" ; the names of the global subtrees we're saving
"RTN","ZTER",97,0)
 F  S %ZTERNAM=$O(%ZT(%ZTERNAM)) Q:%ZTERNAM=""  D
"RTN","ZTER",98,0)
 . S %ZTERNOD=$NA(@%ZTERNAM) ; fully evaluate all the subscripts (incl. $J)
"RTN","ZTER",99,0)
 . S %ZTEROPN=$E(%ZTERNOD,1,$L(%ZTERNOD)-1) ; save %ZTERNOD w/o close paren
"RTN","ZTER",100,0)
 . ;S %ZTERSUB=$QL(%ZTERNOD) ; how many subscripts in the subtree root's name
"RTN","ZTER",101,0)
 . F  S %ZTERNOD=$Q(@%ZTERNOD) Q:%ZTERNOD=""  Q:%ZTERNOD'[%ZTEROPN  D  ; traverse subtree
"RTN","ZTER",102,0)
 . . S %ZTERCNT=%ZTERCNT+1 ; count each node
"RTN","ZTER",103,0)
 . . S @%ZTERRT@("ZV",%ZTERCNT,0)=$P(%ZTERNAM,")")_$P(%ZTERNOD,%ZTEROPN,2) ; unevaluated name
"RTN","ZTER",104,0)
 . . S @%ZTERRT@("ZV",%ZTERCNT,"D")=$G(@%ZTERNOD) ; value of node
"RTN","ZTER",105,0)
 Q
"RTN","ZTER",106,0)
 ;
"RTN","ZTER",107,0)
ETXT() ;Return the Text of the error
"RTN","ZTER",108,0)
 Q $S(%ZTERZE["%DSM-E":$P($P(%ZTERZE,"%DSM-E-",2),","),1:$P($P(%ZTERZE,"<",2),">"))
"RTN","ZTER",109,0)
 ;
"RTN","ZTER",110,0)
ENC(%ZT1) ;Encode a string with control char in \027 format
"RTN","ZTER",111,0)
 N %ZTI,%ZTB,%ZTC S %ZTB=""
"RTN","ZTER",112,0)
 F %ZTI=1:1:$L(%ZT1) S %ZTC=$E(%ZT1,%ZTI),%ZTB=%ZTB_$S(%ZTC'?1C:%ZTC,1:"\"_$E($A(%ZTC)+1000,2,4))_","
"RTN","ZTER",113,0)
 Q $E(%ZTB,1,$L(%ZTB)-1)
"RTN","ZTER",114,0)
 ;
"RTN","ZTER",115,0)
UCI() ;Return the UCI, Changed to Box:Volume p431
"RTN","ZTER",116,0)
 N Y S Y=""
"RTN","ZTER",117,0)
 D GETENV^%ZOSV S Y=$P(Y,"^",4)
"RTN","ZTER",118,0)
 Q Y
"RTN","ZTER",119,0)
 ;
"RTN","ZTER",120,0)
APPERROR(%ZTERNM) ;Caller gives name to Error. p431
"RTN","ZTER",121,0)
 S ^TMP("$ZE",$J,1)=$$LGR^%ZOSV
"RTN","ZTER",122,0)
 S ^TMP("$ZE",$J,0)=%ZTERNM
"RTN","ZTER",123,0)
 S ^TMP("$ZE",$J,2)=$ETRAP,$ETRAP="D ERR^%ZTER"
"RTN","ZTER",124,0)
 S ^TMP("$ZE",$J,3)=$ZA_"~#~"_$ZB
"RTN","ZTER",125,0)
 S %ZTERAPP=1
"RTN","ZTER",126,0)
 G Z1
"RTN","ZTER",127,0)
 ;
"RTN","ZTER",128,0)
ERR ;Handle an error in %ZTER
"RTN","ZTER",129,0)
 I $D(%ZTERH1),$D(%ZTER11N) S ^%ZTER(1,%ZTERH1,1,%ZTER11N,"ZE2")="%ZTER error: "_$ECODE
"RTN","ZTER",130,0)
 ;Should ^TMP("$ZE",$J) be killed here
"RTN","ZTER",131,0)
 HALT
"RTN","ZTER",132,0)
 ;
"RTN","ZTER",133,0)
ECNT ;Add to the error count
"RTN","ZTER",134,0)
 S %ZTER11A=$$FMT(%ZTERZE),%ZTER11N=0
"RTN","ZTER",135,0)
 I $L(%ZTER11A) L +^%ZTER(3.077,0):15 D  L -^%ZTER(3.077,0)
"RTN","ZTER",136,0)
 . S %ZTER11N=$O(^%ZTER(3.077,"B",$E(%ZTER11A,1,30),0))
"RTN","ZTER",137,0)
 . I '%ZTER11N F  Q:%ZTER11N  D
"RTN","ZTER",138,0)
 . . S %ZTER11N=$P($G(^%ZTER(3.077,0)),"^",3)+1,$P(^(0),"^",2,4)="3.077^"_%ZTER11N_"^"_%ZTER11N
"RTN","ZTER",139,0)
 . . I $D(^%ZTER(3.077,%ZTER11N,0)) S %ZTER11N=0 Q
"RTN","ZTER",140,0)
 . . S ^%ZTER(3.077,%ZTER11N,0)=%ZTER11A,^%ZTER(3.077,"B",$E(%ZTER11A,1,30),%ZTER11N)=""
"RTN","ZTER",141,0)
 . . Q
"RTN","ZTER",142,0)
 . I '$D(^%ZTER(3.077,%ZTER11N,4,0)) S ^(0)="^3.0775"
"RTN","ZTER",143,0)
 . S %ZTER11H=$H,%ZTER11S=($P(%ZTER11H,",",2)\3600)+1,%ZTER11H=+%ZTER11H
"RTN","ZTER",144,0)
 . S $P(^%ZTER(3.077,%ZTER11N,4,%ZTER11H,0),"~",%ZTER11S)=$P($G(^%ZTER(3.077,%ZTER11N,4,%ZTER11H,0)),"~",%ZTER11S)+1
"RTN","ZTER",145,0)
 . Q
"RTN","ZTER",146,0)
 Q
"RTN","ZTER",147,0)
 ;
"RTN","ZTER",148,0)
 ;Output format 'Tag+offset^Routine, <error code>'
"RTN","ZTER",149,0)
FMT(%ZTE) ;Format the error text
"RTN","ZTER",150,0)
 I $E(%ZTE,1,2)="<>" S %ZTE=$E(%ZTE,3,999)
"RTN","ZTER",151,0)
 S %ZTE=$TR(%ZTE,"^","~")
"RTN","ZTER",152,0)
 I %ZTE["<"&($P(%ZTE,"<",2)[">") S %ZTE=$P($P(%ZTE,">",2)," ")_", "_$P(%ZTE,">")_">"
"RTN","ZTER",153,0)
 Q %ZTE
"RTN","ZTER",154,0)
 ;
"RTN","ZTER",155,0)
SCREEN(ERR,%ZT3) ;Screen out certain errors.
"RTN","ZTER",156,0)
 N %ZTA,%ZTE,%ZTI,%ZTJ,%ZTH,%ZTR S:'$D(ERR) ERR=$$EC^%ZOSV
"RTN","ZTER",157,0)
 I '$L(ERR) Q 0 ;Record
"RTN","ZTER",158,0)
 ;Set error text format
"RTN","ZTER",159,0)
 S %ZTH=+$H,%ZTE=$$FMT(ERR)
"RTN","ZTER",160,0)
 ;Find error in summary
"RTN","ZTER",161,0)
 S %ZTI=$O(^%ZTER(3.077,"B",%ZTE,0)),%ZTR=$G(^%ZTER(3.077,+%ZTI,4,%ZTH,0)),%ZTJ=0
"RTN","ZTER",162,0)
 F %ZTA=1:1:24 S %ZTJ=%ZTJ+$P(%ZTR,"~",%ZTA)
"RTN","ZTER",163,0)
 ;Check the limit on the number of errors to record.
"RTN","ZTER",164,0)
 I %ZTJ'<(+$P($G(^XTV(8989.3,1,"ZTER"),"10"),"^",1)) Q 1 ;Don't record
"RTN","ZTER",165,0)
 ;Check error screens
"RTN","ZTER",166,0)
 S %ZTE="",%ZTI=0
"RTN","ZTER",167,0)
 ;See if error is in list.
"RTN","ZTER",168,0)
 F %ZTJ=2,1 D  Q:%ZTI>0
"RTN","ZTER",169,0)
 . F %ZTI=0:0 S %ZTI=$O(^%ZTER(2,"AC",%ZTJ,%ZTI)) Q:%ZTI=""  S %ZTE=$S($G(^%ZTER(2,%ZTI,2))]"":^(2),1:$P(^(0),"^")) Q:ERR[%ZTE
"RTN","ZTER",170,0)
 . Q
"RTN","ZTER",171,0)
 ;Next see if we should count the error
"RTN","ZTER",172,0)
 I %ZTI>0 S %ZTE=$G(^%ZTER(2,%ZTI,0)) D  Q $P(%ZTE,"^",3)=2 ;See if we skip the recording of the error.
"RTN","ZTER",173,0)
 . Q:(%ZTJ=1)&('$G(%ZT3))
"RTN","ZTER",174,0)
 . I $P(%ZTE,"^",4) L +^%ZTER(2,%ZTI):10 S ^(3)=$G(^%ZTER(2,%ZTI,3))+1 L -^%ZTER(2,%ZTI)
"RTN","ZTER",175,0)
 . Q
"RTN","ZTER",176,0)
 Q 0 ;record error
"RTN","ZTER",177,0)
 ;
"RTN","ZTER",178,0)
UNWIND ;Unwind stack for new error trap. Called by app code.
"RTN","ZTER",179,0)
 S $ECODE="" S $ETRAP="D UNW^%ZTER Q:'$QUIT  Q -9" S $ECODE=",U1,"
"RTN","ZTER",180,0)
UNW Q:$ESTACK>1  S $ECODE="" Q
"RTN","ZTER",181,0)
 ;
"RTN","ZTER",182,0)
NEWERR() ;Does this OS support the M95 error trapping
"RTN","ZTER",183,0)
 Q 1 ;All current M system now support 95 error trapping
"RTN","ZTER",184,0)
 ;
"RTN","ZTER",185,0)
ABORT ;Pop the stack all the way.
"RTN","ZTER",186,0)
 S $ETRAP="Q:$ST>1  S $ECODE="""" Q"
"RTN","ZTER",187,0)
 Q
"RTN","ZTER",188,0)
 ;
"RTN","ZTER",189,0)
POST ;Do the post-init
"UP",3.075,3.0751,-1)
3.075^1
"UP",3.075,3.0751,0)
3.0751
"VER")
8.0^22.0
"^DD",3.075,3.0751,4.04,0)
UCI~VOL~NODE~BOX^F^^J;4^K:$L(X)>30!($L(X)<1) X
"^DD",3.075,3.0751,4.04,3)
This is the value from GETENV^%ZOSV.
"^DD",3.075,3.0751,4.04,21,0)
^^3^3^3090812^
"^DD",3.075,3.0751,4.04,21,1,0)
 
"^DD",3.075,3.0751,4.04,21,2,0)
This field contains the value from GETENV^%ZOSV in which the job was
"^DD",3.075,3.0751,4.04,21,3,0)
running at the time the error was generated.
"^DD",3.075,3.0751,4.04,"DT")
3090812
"^DD",3.077,3.077,0)
FIELD^^8^14
"^DD",3.077,3.077,0,"DDA")
N
"^DD",3.077,3.077,0,"DT")
3080403
"^DD",3.077,3.077,0,"IX","B",3.077,.01)

"^DD",3.077,3.077,0,"IX","C",3.077,.01)

"^DD",3.077,3.077,0,"IX","D",3.07701,1)

"^DD",3.077,3.077,0,"IX","USER",3.07701,11)

"^DD",3.077,3.077,0,"NM","ERROR TRAP SUMMARY")

"^DD",3.077,3.077,0,"VRPK")
XU
"^DD",3.077,3.077,.01,0)
ERROR TEXT^RF^^0;1^K:$L(X)>60!($L(X)<3)!'(X'[U) X
"^DD",3.077,3.077,.01,.1)
ERR TXT
"^DD",3.077,3.077,.01,1,0)
^.1
"^DD",3.077,3.077,.01,1,1,0)
3.077^B
"^DD",3.077,3.077,.01,1,1,1)
S ^%ZTER(3.077,"B",$E(X,1,30),DA)=""
"^DD",3.077,3.077,.01,1,1,2)
K ^%ZTER(3.077,"B",$E(X,1,30),DA)
"^DD",3.077,3.077,.01,1,2,0)
3.077^C^KWIC
"^DD",3.077,3.077,.01,1,2,1)
S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I ",~<>():;"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2,^DD("KWIC")'[I S ^%ZTER(3.077,"C",I,DA)=""
"^DD",3.077,3.077,.01,1,2,2)
S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I ",~<>():;"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2 K ^%ZTER(3.077,"C",I,DA)
"^DD",3.077,3.077,.01,1,2,3)
Used to make lookup easy
"^DD",3.077,3.077,.01,1,2,"DT")
3071031
"^DD",3.077,3.077,.01,3)
Answer must be 3-60 characters in length
"^DD",3.077,3.077,.01,21,0)
^^5^5^3080305^
"^DD",3.077,3.077,.01,21,1,0)
This is the text captured with the error.  It is a means of providing
"^DD",3.077,3.077,.01,21,2,0)
a common key for the errors to be clustered under.  Each one will has
"^DD",3.077,3.077,.01,21,3,0)
a series of characteristics which will be captured for later analysis
"^DD",3.077,3.077,.01,21,4,0)
even after the error has been purged off of the ^%ZTER global.  The
"^DD",3.077,3.077,.01,21,5,0)
first date and time is stored as will be the most recent occurrence.
"^DD",3.077,3.077,.01,23,0)
^.001^3^3^3060912^^
"^DD",3.077,3.077,.01,23,1,0)
This string will be parsed off of the $ZE sting.  If the string is not
"^DD",3.077,3.077,.01,23,2,0)
there, then an "[Unknown Xecute]" will be created to store these 
"^DD",3.077,3.077,.01,23,3,0)
cases.
"^DD",3.077,3.077,.01,"DT")
3080305
"^DD",3.077,3.077,1,0)
FIRST DATE/TIME^D^^0;2^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",3.077,3.077,1,21,0)
^^3^3^3080305^
"^DD",3.077,3.077,1,21,1,0)
This is the first date and time that the error has occurred.  It is of
"^DD",3.077,3.077,1,21,2,0)
historic importance and can be used to find the causative event of the 
"^DD",3.077,3.077,1,21,3,0)
error that is being reported.
"^DD",3.077,3.077,1,"DT")
3080305
"^DD",3.077,3.077,2,0)
MOST RECENT DATE/TIME^D^^0;3^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",3.077,3.077,2,3)

"^DD",3.077,3.077,2,21,0)
^^3^3^3090324^
"^DD",3.077,3.077,2,21,1,0)
This is the most recent time that the situation has happened.  It is 
"^DD",3.077,3.077,2,21,2,0)
important in that it is the most likely to still be in the error trap
"^DD",3.077,3.077,2,21,3,0)
global, ^%ZTER.
"^DD",3.077,3.077,2,23,0)
^^4^4^3080305^
"^DD",3.077,3.077,2,23,1,0)
As this gets updated, the date is compared with the date/time stored here.
"^DD",3.077,3.077,2,23,2,0)
This will help to identify any items which may need to be accessioned into
"^DD",3.077,3.077,2,23,3,0)
this summary.  It may also be used to help purge any errors which have not
"^DD",3.077,3.077,2,23,4,0)
been active in a long time (and perhaps is now obsolete code).
"^DD",3.077,3.077,2,"DT")
3090324
"^DD",3.077,3.077,3,0)
ROUTINE NAME^F^^0;4^K:$L(X)>20!($L(X)<2) X
"^DD",3.077,3.077,3,1,0)
^.1^^0
"^DD",3.077,3.077,3,3)
Answer must be 2-20 characters in length.
"^DD",3.077,3.077,3,21,0)
^^5^5^3080305^
"^DD",3.077,3.077,3,21,1,0)
This is the name of the routine in question.  It will be parsed out of the 
"^DD",3.077,3.077,3,21,2,0)
error string in .01.  This will make the errors much easier to cluster
"^DD",3.077,3.077,3,21,3,0)
around the causitive routine.  This may actually be amended from the 
"^DD",3.077,3.077,3,21,4,0)
error string presentation if the causative program is found to be 
"^DD",3.077,3.077,3,21,5,0)
different.
"^DD",3.077,3.077,3,"DT")
3080305
"^DD",3.077,3.077,3.1,0)
APPLICATION^P9.4'^DIC(9.4,^0;5^Q
"^DD",3.077,3.077,3.1,21,0)
^.001^4^4^3080305^^^
"^DD",3.077,3.077,3.1,21,1,0)
This field will help to identify who are the responsible parties for this
"^DD",3.077,3.077,3.1,21,2,0)
problem.  Eventually, as a package is identified, the primaries and 
"^DD",3.077,3.077,3.1,21,3,0)
secondaries will be notified of the problem automatically as the problem
"^DD",3.077,3.077,3.1,21,4,0)
happens.
"^DD",3.077,3.077,3.1,23,0)
^^6^6^3080305^
"^DD",3.077,3.077,3.1,23,1,0)
This is a pointer to the Package File.  Each package should indicate 
"^DD",3.077,3.077,3.1,23,2,0)
a mail group that tracks the responsible parties for this specific
"^DD",3.077,3.077,3.1,23,3,0)
package.  This should include any IRM primary and secondary folks as well
"^DD",3.077,3.077,3.1,23,4,0)
as any ADPAC personnel in the specific area of concern with this
"^DD",3.077,3.077,3.1,23,5,0)
package.  The groups should be self-enrolling and be able to receive the 
"^DD",3.077,3.077,3.1,23,6,0)
generated email that will be batched for the errors of the day.
"^DD",3.077,3.077,3.1,"DT")
3080305
"^DD",3.077,3.077,4,0)
FREQUENCY^NJ8,0^^0;6^K:+X'=X!(X>99999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",3.077,3.077,4,3)
Type a Number between 1 and 99999999, 0 Decimal Digits
"^DD",3.077,3.077,4,21,0)
^^3^3^3071023^
"^DD",3.077,3.077,4,21,1,0)
This is the number of times that the error has been encountered, ever.
"^DD",3.077,3.077,4,21,2,0)
See FREQUENCY DISTRIBUTION below for how the error is occurring 
"^DD",3.077,3.077,4,21,3,0)
during the run of the day.
"^DD",3.077,3.077,4,"DT")
3071023
"^DD",3.077,3.077,5,0)
FREQUENCY DISTRIBUTION^3.0775A^^4;0
"^DD",3.077,3.077,5,"DT")
3071023
"^DD",3.077,3.077,6,0)
LAST GLOBAL^F^^3;1^K:$L(X)>240!($L(X)<2) X
"^DD",3.077,3.077,6,3)
Answer must be 2-240 characters in length.
"^DD",3.077,3.077,6,21,0)
^^3^3^2991217^
"^DD",3.077,3.077,6,21,1,0)
This is the last global referenced with the first such error recorded.
"^DD",3.077,3.077,6,21,2,0)
If subsequent errors are recorded, and have different globals listed,
"^DD",3.077,3.077,6,21,3,0)
they will be recorded in the following detail under ERROR EVENTS.
"^DD",3.077,3.077,6,"DT")
2991217
"^DD",3.077,3.077,7,0)
STACK LIST^F^^6;E1,245^K:$L(X)>245!($L(X)<3) X
"^DD",3.077,3.077,7,3)
Answer must be 3-245 characters in length
"^DD",3.077,3.077,7,9)
@
"^DD",3.077,3.077,7,21,0)
^^2^2^2991229^
"^DD",3.077,3.077,7,21,1,0)
This is generated from the GETSTK^XTERSUM function call.  It is the chain
"^DD",3.077,3.077,7,21,2,0)
of calling levels which were accessed to bring about the error.
"^DD",3.077,3.077,7,"DT")
3071031
"^DD",3.077,3.077,8,0)
UPLOADED DATE/TIME^D^^0;7^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",3.077,3.077,8,3)
(No range limit on date)
"^DD",3.077,3.077,8,21,0)
^^4^4^3080403^
"^DD",3.077,3.077,8,21,1,0)
This field holds the date/time that the Error Summary was set to a 
"^DD",3.077,3.077,8,21,2,0)
consolidation site.
"^DD",3.077,3.077,8,21,3,0)
A message will be sent if this field in empty or less than the "Last 
"^DD",3.077,3.077,8,21,4,0)
seen" field.
"^DD",3.077,3.077,8,"DT")
3080403
"^DD",3.077,3.077,10,0)
ERROR EVENTS^3.07701^^1;0
"^DD",3.077,3.077,10,21,0)
^^5^5^3080305^
"^DD",3.077,3.077,10,21,1,0)
This is the $H date and the Sequence number of this error on that $H date.
"^DD",3.077,3.077,10,21,2,0)
It provides an easy way to scan quickly historic occurrences of these 
"^DD",3.077,3.077,10,21,3,0)
errors.  Long period failures will become more evident when they 
"^DD",3.077,3.077,10,21,4,0)
start showing up as reoccurring situations which will need to be dealt
"^DD",3.077,3.077,10,21,5,0)
with.
"^DD",3.077,3.077,10,23,0)
^^2^2^2991229^^
"^DD",3.077,3.077,10,23,1,0)
This will be pulled from the $H day subscript in ^%ZTER( and the sequence 
"^DD",3.077,3.077,10,23,2,0)
number which provides the error profile.  It will look like; 58054:3
"^DD",3.077,3.077,20,0)
LINE OF CODE^F^^2;E1,245^K:$L(X)>245!($L(X)<3) X
"^DD",3.077,3.077,20,3)
Answer must be 3-245 characters in length
"^DD",3.077,3.077,20,9)
@
"^DD",3.077,3.077,20,21,0)
^^3^3^3080305^
"^DD",3.077,3.077,20,21,1,0)
This is the original line of code which caused this problem.  It should be
"^DD",3.077,3.077,20,21,2,0)
the same for all occurrences, but may reflect other failures on the same 
"^DD",3.077,3.077,20,21,3,0)
line.
"^DD",3.077,3.077,20,"DT")
3080305
"^DD",3.077,3.077,30,0)
DISCUSSION^3.07702^^30;0
"^DD",3.077,3.077,31,0)
SUPPORT PERSONNEL^3.077031PA^^31;0
"^DD",3.077,3.07701,0)
ERROR EVENTS SUB-FIELD^^.01^16
"^DD",3.077,3.07701,0,"DT")
3071101
"^DD",3.077,3.07701,0,"IX","B",3.07701,.01)

"^DD",3.077,3.07701,0,"NM","ERROR EVENTS")

"^DD",3.077,3.07701,0,"UP")
3.077
"^DD",3.077,3.07701,.01,0)
ERROR EVENTS^MF^^0;1^K:$L(X)>30!($L(X)<2)!'(X?5.6N1":"1.E) X
"^DD",3.077,3.07701,.01,1,0)
^.1
"^DD",3.077,3.07701,.01,1,1,0)
3.07701^B
"^DD",3.077,3.07701,.01,1,1,1)
S ^%ZTER(3.077,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",3.077,3.07701,.01,1,1,2)
K ^%ZTER(3.077,DA(1),1,"B",$E(X,1,30),DA)
"^DD",3.077,3.07701,.01,3)
Answer must be 2-30 characters in length
"^DD",3.077,3.07701,.01,21,0)
^^5^5^3080305^
"^DD",3.077,3.07701,.01,21,1,0)
This is the list of captured errors of this type in the form of +$H:NN
"^DD",3.077,3.07701,.01,21,2,0)
where $H is the +$Horolog day count, and NN is the sequence number 
"^DD",3.077,3.07701,.01,21,3,0)
that records the nnth error for that day.  So if the error is still 
"^DD",3.077,3.07701,.01,21,4,0)
available, then, the details can be collected.  This scheme will ensure 
"^DD",3.077,3.07701,.01,21,5,0)
that each occurrence is unique.
"^DD",3.077,3.07701,.01,"DT")
3080305
"^DD",3.077,3.07701,1,0)
DATE/TIME OF ERROR^D^^0;2^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",3.077,3.07701,1,1,0)
^.1
"^DD",3.077,3.07701,1,1,1,0)
3.077^D
"^DD",3.077,3.07701,1,1,1,1)
S ^%ZTER(3.077,"D",$E(X,1,30),DA(1),DA)=""
"^DD",3.077,3.07701,1,1,1,2)
K ^%ZTER(3.077,"D",$E(X,1,30),DA(1),DA)
"^DD",3.077,3.07701,1,1,1,"%D",0)
^^2^2^2991231^
"^DD",3.077,3.07701,1,1,1,"%D",1,0)
This cross reference gives the time frames of these events and makes it
"^DD",3.077,3.07701,1,1,1,"%D",2,0)
easier to reconstruct the chain of events.
"^DD",3.077,3.07701,1,1,1,"DT")
2991231
"^DD",3.077,3.07701,1,21,0)
^^2^2^3080305^
"^DD",3.077,3.07701,1,21,1,0)
This is the date and time as described in the error report, but converted 
"^DD",3.077,3.07701,1,21,2,0)
to FileMan format.
"^DD",3.077,3.07701,1,"DT")
3080305
"^DD",3.077,3.07701,2,0)
LINE IF DIFFERENT^F^^1;E1,245^K:$L(X)>245!($L(X)<3) X
"^DD",3.077,3.07701,2,3)
Answer must be 3-245 characters in length
"^DD",3.077,3.07701,2,9)
@
"^DD",3.077,3.07701,2,21,0)
^^1^1^2991229^
"^DD",3.077,3.07701,2,21,1,0)
This is the offending line of code as captured by the interpreter.
"^DD",3.077,3.07701,2,"DT")
3071031
"^DD",3.077,3.07701,3,0)
LAST GLOBAL IF DIFFERENT^F^^2;1^K:$L(X)>240!($L(X)<2) X
"^DD",3.077,3.07701,3,3)
Answer must be 2-240 characters in length.
"^DD",3.077,3.07701,3,"DT")
2991217
"^DD",3.077,3.07701,4,0)
$ZHOROLOG DETAIL^F^^0;3^K:$L(X)>40!($L(X)<1) X
"^DD",3.077,3.07701,4,3)
Answer must be 1-40 characters in length
"^DD",3.077,3.07701,4,"DT")
3071031
"^DD",3.077,3.07701,5,0)
USER DUZ^F^^0;4^K:$L(X)>12!($L(X)<1)!'(X!(X?1.12N)) X
"^DD",3.077,3.07701,5,3)
Answer must be 1-12 characters in length.
"^DD",3.077,3.07701,5,21,0)
^^2^2^2991230^^^^
"^DD",3.077,3.07701,5,21,1,0)
This is the user who experienced the problem.  This will make it easier
"^DD",3.077,3.07701,5,21,2,0)
for us to check if this is a needs problem or a training problem.
"^DD",3.077,3.07701,5,23,0)
^^4^4^2991230^^^
"^DD",3.077,3.07701,5,23,1,0)
This and the rest of this record are loaded from the Error Trap, ^%ZTER(1,.
"^DD",3.077,3.07701,5,23,2,0)
The routine to do this transformation and consolidation is XTERSUM.  It
"^DD",3.077,3.07701,5,23,3,0)
is in the name space reserved by Chris Richardson and was built during his
"^DD",3.077,3.07701,5,23,4,0)
time at the San Diego  VA in La Jolla.
"^DD",3.077,3.07701,5,"DT")
2991230
"^DD",3.077,3.07701,6,0)
STACK PATH^F^^6;1^K:$L(X)>250!($L(X)<2) X
"^DD",3.077,3.07701,6,3)
Answer must be 2-250 characters in length.
"^DD",3.077,3.07701,6,21,0)
^^12^12^3090324^
"^DD",3.077,3.07701,6,21,1,0)
This is the path by which the error level of execution was accessed.
"^DD",3.077,3.07701,6,21,2,0)
It is a series of segments, each representing a level of execution in
"^DD",3.077,3.07701,6,21,3,0)
the model as it was being performed.  Occasionally this list of segments
"^DD",3.077,3.07701,6,21,4,0)
will exceed the string length so some judicious exiting has been done
"^DD",3.077,3.07701,6,21,5,0)
to keep the stack list manageable.  Should the list need to be trimmed,
"^DD",3.077,3.07701,6,21,6,0)
segments will be taken out of the middle of the stack to accommodate the
"^DD",3.077,3.07701,6,21,7,0)
string limits.  These omissions are marked with an ellipsis "..." where
"^DD",3.077,3.07701,6,21,8,0)
a segment or segments have been deleted.
"^DD",3.077,3.07701,6,21,9,0)
  A segment looks like this;
"^DD",3.077,3.07701,6,21,10,0)
  LABEL[+offset]^RTN:command step
"^DD",3.077,3.07701,6,21,11,0)
  The set of segments is wrapped in square brackets and stored in its
"^DD",3.077,3.07701,6,21,12,0)
entirety in the event node for comparison with other events.
"^DD",3.077,3.07701,6,"DT")
3090324
"^DD",3.077,3.07701,11,0)
USER NAME^P200'^VA(200,^3;1^Q
"^DD",3.077,3.07701,11,1,0)
^.1
"^DD",3.077,3.07701,11,1,1,0)
3.077^USER
"^DD",3.077,3.07701,11,1,1,1)
S ^%ZTER(3.077,"USER",$E(X,1,30),DA(1),DA)=""
"^DD",3.077,3.07701,11,1,1,2)
K ^%ZTER(3.077,"USER",$E(X,1,30),DA(1),DA)
"^DD",3.077,3.07701,11,1,1,"%D",0)
^^1^1^3000329^
"^DD",3.077,3.07701,11,1,1,"%D",1,0)
This allows the lookup by Users.
"^DD",3.077,3.07701,11,1,1,"DT")
3000329
"^DD",3.077,3.07701,11,21,0)
^^1^1^3090324^
"^DD",3.077,3.07701,11,21,1,0)
User Pointer who was on when the error occurred.
"^DD",3.077,3.07701,11,"DT")
3090324
"^DD",3.077,3.07701,12,0)
OPTION USED^P19'^DIC(19,^3;2^Q
"^DD",3.077,3.07701,12,21,0)
^^2^2^2991223^
"^DD",3.077,3.07701,12,21,1,0)
This is the POINTER to the Option File that was being used at the time
"^DD",3.077,3.07701,12,21,2,0)
of the error.
"^DD",3.077,3.07701,12,"DT")
2991223
"^DD",3.077,3.07701,13,0)
OPTION NAME^F^^3;3^K:$L(X)>30!($L(X)<2) X
"^DD",3.077,3.07701,13,3)
Answer must be 2-30 characters in length.
"^DD",3.077,3.07701,13,21,0)
^^1^1^2991223^
"^DD",3.077,3.07701,13,21,1,0)
This is the name of the option pointed to in field 2.
"^DD",3.077,3.07701,13,"DT")
2991223
"^DD",3.077,3.07701,14,0)
TASK REFERENCED^P14.4'^%ZTSK(^3;4^Q
"^DD",3.077,3.07701,14,21,0)
^^1^1^2991223^
"^DD",3.077,3.07701,14,21,1,0)
This is the task being performed (if it was a task).
"^DD",3.077,3.07701,14,"DT")
2991223
"^DD",3.077,3.07701,15,0)
GLOBAL VOLUME^F^^3;5^K:$L(X)>8!($L(X)<2) X
"^DD",3.077,3.07701,15,3)
Answer must be 2-8 characters in length
"^DD",3.077,3.07701,15,21,0)
^^1^1^2991223^
"^DD",3.077,3.07701,15,21,1,0)
This is the Global Volumes being accessed when the task started.
"^DD",3.077,3.07701,15,"DT")
3071031
"^DD",3.077,3.07701,16,0)
ROUTINE VOLUME^F^^3;6^K:$L(X)>8!($L(X)<2) X
"^DD",3.077,3.07701,16,3)
Answer must be 2-8 characters in length
"^DD",3.077,3.07701,16,21,0)
^^1^1^3080305^
"^DD",3.077,3.07701,16,21,1,0)
This is the Routine Set being used when the Error Occurred.
"^DD",3.077,3.07701,16,23,0)
^^1^1^2991223^
"^DD",3.077,3.07701,16,23,1,0)
This and the surrounding variables came from the Error Trap and XUENV.
"^DD",3.077,3.07701,16,"DT")
3080305
"^DD",3.077,3.07701,17,0)
HOST CPU^F^^3;7^K:$L(X)>8!($L(X)<2) X
"^DD",3.077,3.07701,17,3)
Answer must be 2-8 characters in length
"^DD",3.077,3.07701,17,21,0)
^^1^1^2991223^
"^DD",3.077,3.07701,17,21,1,0)
This is the Name of the CPU the program was running on. 
"^DD",3.077,3.07701,17,"DT")
3071031
"^DD",3.077,3.07701,18,0)
RPC BROKER STATE^F^^3;8^K:$L(X)>40!($L(X)<2) X
"^DD",3.077,3.07701,18,3)
Answer must be 2-40 characters in length.
"^DD",3.077,3.07701,18,21,0)
^^1^1^2991223^
"^DD",3.077,3.07701,18,21,1,0)
This is the description of the Broker Task being performed.
"^DD",3.077,3.07701,18,"DT")
2991223
"^DD",3.077,3.07701,19,0)
UPLOADED^S^0:No;1:Yes;^0;5^Q
"^DD",3.077,3.07701,19,21,0)
^^1^1^3090326^
"^DD",3.077,3.07701,19,21,1,0)
This field tells if this error has been reported to a central repository.
"^DD",3.077,3.07701,19,"DT")
3090326
"^DD",3.077,3.07702,0)
DISCUSSION SUB-FIELD^^.01^1
"^DD",3.077,3.07702,0,"DT")
3000329
"^DD",3.077,3.07702,0,"NM","DISCUSSION")

"^DD",3.077,3.07702,0,"UP")
3.077
"^DD",3.077,3.07702,.01,0)
DISCUSSION^W^^0;1^Q
"^DD",3.077,3.07702,.01,21,0)
^^2^2^3000329^
"^DD",3.077,3.07702,.01,21,1,0)
This is the set of notes used to track special handling or corrective 
"^DD",3.077,3.07702,.01,21,2,0)
actions taken to solve the problem.
"^DD",3.077,3.07702,.01,"DT")
3000329
"^DD",3.077,3.077031,0)
SUPPORT PERSONNEL SUB-FIELD^^2^3
"^DD",3.077,3.077031,0,"DT")
3000329
"^DD",3.077,3.077031,0,"IX","B",3.077031,.01)

"^DD",3.077,3.077031,0,"NM","SUPPORT PERSONNEL")

"^DD",3.077,3.077031,0,"UP")
3.077
"^DD",3.077,3.077031,.01,0)
SUPPORT PERSONNEL^P200'^VA(200,^0;1^Q
"^DD",3.077,3.077031,.01,1,0)
^.1
"^DD",3.077,3.077031,.01,1,1,0)
3.077031^B
"^DD",3.077,3.077031,.01,1,1,1)
S ^%ZTER(3.077,DA(1),31,"B",$E(X,1,30),DA)=""
"^DD",3.077,3.077031,.01,1,1,2)
K ^%ZTER(3.077,DA(1),31,"B",$E(X,1,30),DA)
"^DD",3.077,3.077031,.01,21,0)
^.001^2^2^3000329^^
"^DD",3.077,3.077031,.01,21,1,0)
This is the person assigned to deal with the problem.  The date assigned 
"^DD",3.077,3.077031,.01,21,2,0)
will be a companion data item to this information.
"^DD",3.077,3.077031,.01,23,0)
^^2^2^3000329^
"^DD",3.077,3.077031,.01,23,1,0)
The chain of support folks should be easy to follow and track who is 
"^DD",3.077,3.077031,.01,23,2,0)
working on a specific problem.
"^DD",3.077,3.077031,.01,"DT")
3000329
"^DD",3.077,3.077031,1,0)
WHEN ASSIGNED^D^^0;2^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",3.077,3.077031,1,21,0)
^.001^1^1^3000329^^
"^DD",3.077,3.077031,1,21,1,0)
This is the date that the SW Engineer was assigned the problem.
"^DD",3.077,3.077031,1,"DT")
3000329
"^DD",3.077,3.077031,2,0)
LAST ACTIVITY DATE^D^^0;3^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",3.077,3.077031,2,3)

"^DD",3.077,3.077031,2,21,0)
^^1^1^3000329^
"^DD",3.077,3.077031,2,21,1,0)
This is the date and time of the last operation on this problem.
"^DD",3.077,3.077031,2,"DT")
3000329
"^DD",3.077,3.0775,0)
FREQUENCY DISTRIBUTION SUB-FIELD^^.001^2
"^DD",3.077,3.0775,0,"DT")
3071101
"^DD",3.077,3.0775,0,"NM","FREQUENCY DISTRIBUTION")

"^DD",3.077,3.0775,0,"UP")
3.077
"^DD",3.077,3.0775,.001,0)
HOROLOG DATE^NJ6,0O^^ ^K:+X'=X!(X>999999)!(X<10000)!(X?.E1"."1.N) X
"^DD",3.077,3.0775,.001,2)
S Y(0)=Y S Y=$$HTE^XLFDT(Y)
"^DD",3.077,3.0775,.001,2.1)
S Y=$$HTE^XLFDT(Y)
"^DD",3.077,3.0775,.001,3)
Type a number between 10000 and 999999, 0 Decimal Digits
"^DD",3.077,3.0775,.001,"DT")
3071101
"^DD",3.077,3.0775,.01,0)
FREQUENCY DISTRIBUTION^FX^^0;1^K X
"^DD",3.077,3.0775,.01,1,0)
^.1^^0
"^DD",3.077,3.0775,.01,3)
Type a Frequency Distribution, 3 to 100 characters
"^DD",3.077,3.0775,.01,9)
^
"^DD",3.077,3.0775,.01,"DT")
3071218
"^DD",8989.3,8989.3,520.1,0)
ERROR LIMIT^NJ4,0^^ZTER;1^K:+X'=X!(X>1000)!(X<1)!(X?.E1"."1N.N) X
"^DD",8989.3,8989.3,520.1,3)
Type a Number between 1 and 1000, 0 Decimal Digits
"^DD",8989.3,8989.3,520.1,21,0)
^^5^5^3071218^
"^DD",8989.3,8989.3,520.1,21,1,0)
This field holds the maximum number of a particular error to be recorded
"^DD",8989.3,8989.3,520.1,21,2,0)
on one day. The count will continue in the ERROR SUMMARY file (#3.077)
"^DD",8989.3,8989.3,520.1,21,3,0)
field FREQUENCY (#4) even though the error is not recorded in the error
"^DD",8989.3,8989.3,520.1,21,4,0)
trap.  It is used in the $$SCREEN^%ZTER logic to tell the error trap to
"^DD",8989.3,8989.3,520.1,21,5,0)
skip recording the error.
"^DD",8989.3,8989.3,520.1,"DT")
3071218
"^DD",8989.3,8989.3,520.2,0)
SEND ERROR SUMMARY^S^0:No;1:Yes;^ZTER;2^Q
"^DD",8989.3,8989.3,520.2,21,0)
^^5^5^3090805^
"^DD",8989.3,8989.3,520.2,21,1,0)
This field controls if the error summary routine sends a record to a 
"^DD",8989.3,8989.3,520.2,21,2,0)
consolidating facility when it has finished running.
"^DD",8989.3,8989.3,520.2,21,3,0)
The mail message is sent to the mail group XTER SUMMARY LOAD.
"^DD",8989.3,8989.3,520.2,21,4,0)
In the VA this will include the remote entry 
"^DD",8989.3,8989.3,520.2,21,5,0)
G.XTER SUMMARY LOAD@FORUM.VA.GOV.
"^DD",8989.3,8989.3,520.2,"DT")
3090805
"^DD",8989.3,8989.3,520.3,0)
KEEP ERROR TRAP^NJ5,0^^ZTER;3^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",8989.3,8989.3,520.3,3)
Type a number between 1 and 99999. Days to keep detail Error Trap.
"^DD",8989.3,8989.3,520.3,21,0)
^^3^3^3100527^
"^DD",8989.3,8989.3,520.3,21,1,0)
This field holds the number of days to keep the entries in the Detail
"^DD",8989.3,8989.3,520.3,21,2,0)
Error Trap.
"^DD",8989.3,8989.3,520.3,21,3,0)
Defaults to 7 if left blank.
"^DD",8989.3,8989.3,520.3,"DT")
3100527
"^DD",8989.3,8989.3,520.4,0)
KEEP ERROR SUMMARY^NJ5,0^^ZTER;4^K:+X'=X!(X>99999)!(X<7)!(X?.E1"."1N.N) X
"^DD",8989.3,8989.3,520.4,3)
Type a number between 7 and 99999. Days to keep the Error Summary.
"^DD",8989.3,8989.3,520.4,21,0)
^^2^2^3100527^
"^DD",8989.3,8989.3,520.4,21,1,0)
This field holds the number of days to keep the entries in the Error
"^DD",8989.3,8989.3,520.4,21,2,0)
Trap Summary since they were last seen. Defaults to 90 if left blank.
"^DD",8989.3,8989.3,520.4,"DT")
3100527
"^DIC",3.077,3.077,0)
ERROR TRAP SUMMARY^3.077
"^DIC",3.077,3.077,0,"GL")
^%ZTER(3.077,
"^DIC",3.077,3.077,"%D",0)
^1.001^4^4^3060912^^^
"^DIC",3.077,3.077,"%D",1,0)
This is a tool for capturing the VistA errors at each site.  These
"^DIC",3.077,3.077,"%D",2,0)
findings can be used locally and pushed to a central repository to
"^DIC",3.077,3.077,"%D",3,0)
help to prioritize the efforts to seal up the hot spots in the 
"^DIC",3.077,3.077,"%D",4,0)
applications.
"^DIC",3.077,"B","ERROR TRAP SUMMARY",3.077)

"BLD",969,6)
^453
**END**
**END**
