Released XU*8*596 SEQ #480
Extracted from mail message
**KIDS**:XU*8.0*596^

**INSTALL NAME**
XU*8.0*596
"BLD",1415,0)
XU*8.0*596^KERNEL^0^3120127^y
"BLD",1415,4,0)
^9.64PA^^
"BLD",1415,6.3)
1
"BLD",1415,"ABPKG")
n
"BLD",1415,"KRN",0)
^9.67PA^9002226^21
"BLD",1415,"KRN",.4,0)
.4
"BLD",1415,"KRN",.401,0)
.401
"BLD",1415,"KRN",.402,0)
.402
"BLD",1415,"KRN",.403,0)
.403
"BLD",1415,"KRN",.5,0)
.5
"BLD",1415,"KRN",.84,0)
.84
"BLD",1415,"KRN",3.6,0)
3.6
"BLD",1415,"KRN",3.8,0)
3.8
"BLD",1415,"KRN",9.2,0)
9.2
"BLD",1415,"KRN",9.8,0)
9.8
"BLD",1415,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",1415,"KRN",9.8,"NM",1,0)
XUSRB4^^0^B18063785
"BLD",1415,"KRN",9.8,"NM","B","XUSRB4",1)

"BLD",1415,"KRN",19,0)
19
"BLD",1415,"KRN",19.1,0)
19.1
"BLD",1415,"KRN",101,0)
101
"BLD",1415,"KRN",409.61,0)
409.61
"BLD",1415,"KRN",771,0)
771
"BLD",1415,"KRN",779.2,0)
779.2
"BLD",1415,"KRN",870,0)
870
"BLD",1415,"KRN",8989.51,0)
8989.51
"BLD",1415,"KRN",8989.52,0)
8989.52
"BLD",1415,"KRN",8994,0)
8994
"BLD",1415,"KRN",9002226,0)
9002226
"BLD",1415,"KRN","B",.4,.4)

"BLD",1415,"KRN","B",.401,.401)

"BLD",1415,"KRN","B",.402,.402)

"BLD",1415,"KRN","B",.403,.403)

"BLD",1415,"KRN","B",.5,.5)

"BLD",1415,"KRN","B",.84,.84)

"BLD",1415,"KRN","B",3.6,3.6)

"BLD",1415,"KRN","B",3.8,3.8)

"BLD",1415,"KRN","B",9.2,9.2)

"BLD",1415,"KRN","B",9.8,9.8)

"BLD",1415,"KRN","B",19,19)

"BLD",1415,"KRN","B",19.1,19.1)

"BLD",1415,"KRN","B",101,101)

"BLD",1415,"KRN","B",409.61,409.61)

"BLD",1415,"KRN","B",771,771)

"BLD",1415,"KRN","B",779.2,779.2)

"BLD",1415,"KRN","B",870,870)

"BLD",1415,"KRN","B",8989.51,8989.51)

"BLD",1415,"KRN","B",8989.52,8989.52)

"BLD",1415,"KRN","B",8994,8994)

"BLD",1415,"KRN","B",9002226,9002226)

"BLD",1415,"QUES",0)
^9.62^^
"BLD",1415,"REQB",0)
^9.611^^
"MBREQ")
0
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^0
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3090706^3090706^6
"PKG",3,22,1,"PAH",1,0)
596^3120127
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","XUSRB4")
0^1^B18063785^B17078784
"RTN","XUSRB4",1,0)
XUSRB4 ;ISF/RWF - Build a temporary sign-on token ;10/12/11  14:53
"RTN","XUSRB4",2,0)
 ;;8.0;KERNEL;**150,337,395,419,437,499,523,573,596**;Jul 10, 1995;Build 1
"RTN","XUSRB4",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified
"RTN","XUSRB4",4,0)
 Q
"RTN","XUSRB4",5,0)
 ;
"RTN","XUSRB4",6,0)
ASH(RET) ;rpc. Auto Signon Handle
"RTN","XUSRB4",7,0)
 N HDL
"RTN","XUSRB4",8,0)
 S HDL=$$HANDLE("XWBAS",1),RET="~1"_HDL
"RTN","XUSRB4",9,0)
 ;Now place user info in it.
"RTN","XUSRB4",10,0)
 D TOK(HDL)
"RTN","XUSRB4",11,0)
 Q
"RTN","XUSRB4",12,0)
 ;
"RTN","XUSRB4",13,0)
CCOW(RET) ;rpc. CCOW Auto Signon Handle
"RTN","XUSRB4",14,0)
 N HDL,HDL2,X
"RTN","XUSRB4",15,0)
 S RET(0)="NO PROXY USER",RET(1)="ERROR"
"RTN","XUSRB4",16,0)
 I $$USERTYPE^XUSAP(DUZ,"APPLICATION PROXY") Q  ;No Proxy
"RTN","XUSRB4",17,0)
 I $$USERTYPE^XUSAP(DUZ,"CONNECTOR PROXY") Q  ;No Proxy
"RTN","XUSRB4",18,0)
 S X=$$ACTIVE^XUSER(DUZ) I 'X S RET(0)=X Q  ;User must be active
"RTN","XUSRB4",19,0)
 S HDL=$$HANDLE("XWBCCW",1)
"RTN","XUSRB4",20,0)
 ;Return RET(0) the CCOW token, RET(1) the domain name and the Station #
"RTN","XUSRB4",21,0)
 S RET(0)="~2"_$$LOW^XLFSTR(HDL),RET(1)=$G(^XMB("NETNAME"))_"^"_$$STA^XUAF4(DUZ(2))
"RTN","XUSRB4",22,0)
 ;Now place user info in it.
"RTN","XUSRB4",23,0)
 D TOK(HDL)
"RTN","XUSRB4",24,0)
 S ^XUTL("XQ",$J,"HDL")=HDL ;Save handle with job
"RTN","XUSRB4",25,0)
 Q
"RTN","XUSRB4",26,0)
 ;
"RTN","XUSRB4",27,0)
HANDLE(NS,LT) ;Return a unique handle into ^XTMP (ef. sup)
"RTN","XUSRB4",28,0)
 ;NS is the namespace, LT is the Handle Lifetime in days
"RTN","XUSRB4",29,0)
 N %H,A,J,HL
"RTN","XUSRB4",30,0)
 I $G(NS)="" Q "" ;Return null if no namespace
"RTN","XUSRB4",31,0)
 S LT=$G(LT,1) S:LT>7 LT=7 ;Default to 1
"RTN","XUSRB4",32,0)
 S %H=$H,J=NS_($J#2048)_"-"_(%H#7*86400+$P(%H,",",2))_"_",A=$R(10)
"RTN","XUSRB4",33,0)
 F  S HL=J_A,A=A+1 L +^XTMP(HL):1 I $T Q:'$D(^XTMP(HL))  L -^XTMP(HL)
"RTN","XUSRB4",34,0)
 S ^XTMP(HL,0)=$$HTFM^XLFDT(%H+LT)_"^"_$$DT^XLFDT()
"RTN","XUSRB4",35,0)
 ;L -^XTMP(HL) Leave the unLock to tha caller
"RTN","XUSRB4",36,0)
 Q HL
"RTN","XUSRB4",37,0)
 ;
"RTN","XUSRB4",38,0)
TOK(H) ;Store a Token
"RTN","XUSRB4",39,0)
 ;H is handle into XTMP
"RTN","XUSRB4",40,0)
 N J,T,R,%
"RTN","XUSRB4",41,0)
 S T=$$H3^%ZTM($H)
"RTN","XUSRB4",42,0)
 S R=$J_"|"_T_"|"_$G(DUZ)_"|"_H
"RTN","XUSRB4",43,0)
 S ^XTMP(H,"D",0)="|"_$$ENCRYP^XUSRB1(R)_"|"
"RTN","XUSRB4",44,0)
 S ^XTMP(H,"D2")=$G(DUZ(2))
"RTN","XUSRB4",45,0)
 S %=$G(IO("IP")) I $L(%),%'?1.3N1P1.3N1P1.3N1P1.3N S %=$P($$ADDRESS^XLFNSLK(%),",")
"RTN","XUSRB4",46,0)
 S ^XTMP(H,"D3")=%
"RTN","XUSRB4",47,0)
 S ^XTMP(H,"CLNM")=$G(IO("CLNM"))
"RTN","XUSRB4",48,0)
 S ^XTMP(H,"JOB",$J)=$G(IO("IP"))
"RTN","XUSRB4",49,0)
 S ^XTMP(H,"STATUS")="0^New",^("CNT")=0
"RTN","XUSRB4",50,0)
 L -^XTMP(H) ;Clear Lock
"RTN","XUSRB4",51,0)
 Q
"RTN","XUSRB4",52,0)
 ;
"RTN","XUSRB4",53,0)
REMOVE(HL) ;Remove (kill) a Handle. p523
"RTN","XUSRB4",54,0)
 I $L($G(HL)) K ^XTMP(HL)
"RTN","XUSRB4",55,0)
 Q
"RTN","XUSRB4",56,0)
 ;
"RTN","XUSRB4",57,0)
CHKASH(HL) ;rpc. Check a Auto Signon Handle
"RTN","XUSRB4",58,0)
 N HDL,RET,FDA,IEN S HDL=$E(HL,3,999)
"RTN","XUSRB4",59,0)
 S RET=$$CHECK(HDL)
"RTN","XUSRB4",60,0)
 I RET>0 D
"RTN","XUSRB4",61,0)
 . S DUZ("ASH")=1,IEN=DUZ_","
"RTN","XUSRB4",62,0)
 . I $$GET1^DIQ(200,IEN,7,"I") S FDA(200,DUZ_",",7)=0 D FILE^DIE("K","FDA") ;rwf 403
"RTN","XUSRB4",63,0)
 D REMOVE(HDL) ;Token only good for one try.
"RTN","XUSRB4",64,0)
 Q RET
"RTN","XUSRB4",65,0)
 ;
"RTN","XUSRB4",66,0)
CHKCCOW(HL) ;rpc. Check a CCOW Auto Signon Handle
"RTN","XUSRB4",67,0)
 N HDL,RET,T
"RTN","XUSRB4",68,0)
 S HDL=$$UP^XLFSTR($E(HL,3,999)),T=$P($G(^XTV(8989.3,1,30),5400),U)
"RTN","XUSRB4",69,0)
 S RET=$$CHECK(HDL,T)
"RTN","XUSRB4",70,0)
 I RET>0 D
"RTN","XUSRB4",71,0)
 . ;This CCOW Token good for more that one try.
"RTN","XUSRB4",72,0)
 . S ^XTMP(HDL,"JOB",$J)=$G(IO("IP"))
"RTN","XUSRB4",73,0)
 . S ^XTMP(HDL,"STATUS")=(^XTMP(HDL,"STATUS")+1)_"^Active"
"RTN","XUSRB4",74,0)
 . S ^XUTL("XQ",$J,"HDL")=HDL ;Save handle with job
"RTN","XUSRB4",75,0)
 . S DUZ("CCOW")=1 ;Flag a CCOW sign-on.
"RTN","XUSRB4",76,0)
 Q RET
"RTN","XUSRB4",77,0)
 ;
"RTN","XUSRB4",78,0)
CHECK(HL,TOUT) ;Check a Token
"RTN","XUSRB4",79,0)
 N %,J,D,L,M,S,T,CLNM
"RTN","XUSRB4",80,0)
 S S=$G(^XTMP(HL,0)) I '$L(S) Q "0^Bad Handle"
"RTN","XUSRB4",81,0)
 S S=$G(^XTMP(HL,"D",0)) I '$L(S) Q "0^Bad Handle" ;Now have real token
"RTN","XUSRB4",82,0)
 I $E(S)'="|" Q "0^Bad Token"
"RTN","XUSRB4",83,0)
 S S=$$DECRYP^XUSRB1($E(S,2,$L(S)-1)) I S="" Q "0^Bad Token"
"RTN","XUSRB4",84,0)
 S J=$P(S,"|"),T=$P(S,"|",2),D=$P(S,"|",3),M=$P(S,"|",4)
"RTN","XUSRB4",85,0)
 ;Check token time
"RTN","XUSRB4",86,0)
 S %=$$H3^%ZTM($H),TOUT=$G(TOUT,90) ; P573 changed 20 to 90 JLI
"RTN","XUSRB4",87,0)
 I T+TOUT<% D REMOVE(HL) Q "0^Token Expired" ;Token good for TOUT or 90 seconds
"RTN","XUSRB4",88,0)
 ;Check job
"RTN","XUSRB4",89,0)
 ;Check that token has handle
"RTN","XUSRB4",90,0)
 I M'=HL Q "0^Bad Token"
"RTN","XUSRB4",91,0)
 ;Check User
"RTN","XUSRB4",92,0)
 I $G(^VA(200,D,0))="" Q "0^Bad User"
"RTN","XUSRB4",93,0)
 ;Do IP check
"RTN","XUSRB4",94,0)
 S %=$G(IO("IP")),T=0,CLNM=""
"RTN","XUSRB4",95,0)
 I $L(%),%'?1.3N1P1.3N1P1.3N1P1.3N S CLNM=%,%=$P($$ADDRESS^XLFNSLK(%),",")
"RTN","XUSRB4",96,0)
 S CLNM=$S($L($G(IO("CLNM"))):IO("CLNM"),$L(CLNM):CLNM,1:"") ;p499
"RTN","XUSRB4",97,0)
 I $L($G(^XTMP(HL,"D3"))),^XTMP(HL,"D3")=% S T=1
"RTN","XUSRB4",98,0)
 I 'T,$L(CLNM),$G(^XTMP(HL,"CLNM"))=IO("CLNM") S T=1
"RTN","XUSRB4",99,0)
 I 'T,$$LOW^XLFSTR($S($L($G(IO("ZIO"))):IO("ZIO"),1:$G(IO)))[$P($G(^XTMP(HL,"CLNM")),".") S T=1  ;ram p596
"RTN","XUSRB4",100,0)
 I 'T Q "0^Different IP" ;p499
"RTN","XUSRB4",101,0)
 I $D(^XTMP(HL,"D2")),D>0 S DUZ(2)=^XTMP(HL,"D2")
"RTN","XUSRB4",102,0)
 D USER^XUS(D)
"RTN","XUSRB4",103,0)
 Q D
"RTN","XUSRB4",104,0)
 ;
"RTN","XUSRB4",105,0)
 ;
"RTN","XUSRB4",106,0)
CCOWPC(RET) ;Return ap
"RTN","XUSRB4",107,0)
 N I,XU4
"RTN","XUSRB4",108,0)
 S RET(0)="" I '$$BROKER^XWBLIB Q
"RTN","XUSRB4",109,0)
 D GETLST^XPAR(.XU4,"SYS","XUS CCOW VAULT PARAM","Q")
"RTN","XUSRB4",110,0)
 F I=0,1 S RET(I)=$P($G(XU4(I+1)),"^",2,99)
"RTN","XUSRB4",111,0)
 Q
"RTN","XUSRB4",112,0)
 ;
"RTN","XUSRB4",113,0)
 ;p500
"RTN","XUSRB4",114,0)
CCOWIP(RET,CLIENTIP) ;rpc. CCOW Auto Signon Handle for middle tiered application servers
"RTN","XUSRB4",115,0)
 N %
"RTN","XUSRB4",116,0)
 S %=$G(IO("IP")) ; save original
"RTN","XUSRB4",117,0)
 ; get actual ip address instead of localhost address if possible
"RTN","XUSRB4",118,0)
 S IO("IP")=$S($G(CLIENTIP)="127.0.0.1":%,$G(CLIENTIP)="":%,1:$G(CLIENTIP))
"RTN","XUSRB4",119,0)
 D CCOW(.RET)
"RTN","XUSRB4",120,0)
 S IO("IP")=% ; revert to original
"RTN","XUSRB4",121,0)
 Q
"RTN","XUSRB4",122,0)
 ;
"VER")
8.0^22.0
"BLD",1415,6)
^480
**END**
**END**
