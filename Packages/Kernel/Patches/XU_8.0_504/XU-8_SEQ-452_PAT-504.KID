Released XU*8*504 SEQ #452
Extracted from mail message
**KIDS**:XU*8.0*504^

**INSTALL NAME**
XU*8.0*504
"BLD",1103,0)
XU*8.0*504^KERNEL^0^3091027^y
"BLD",1103,1,0)
^^2^2^3091027^^^^
"BLD",1103,1,1,0)
See patch XU*8*504 in the National Patch Module for complete
"BLD",1103,1,2,0)
information on this patch.
"BLD",1103,4,0)
^9.64PA^^
"BLD",1103,6.3)
5
"BLD",1103,"INIT")
POST^XU8P504
"BLD",1103,"KRN",0)
^9.67PA^779.2^20
"BLD",1103,"KRN",.4,0)
.4
"BLD",1103,"KRN",.401,0)
.401
"BLD",1103,"KRN",.402,0)
.402
"BLD",1103,"KRN",.403,0)
.403
"BLD",1103,"KRN",.5,0)
.5
"BLD",1103,"KRN",.84,0)
.84
"BLD",1103,"KRN",3.6,0)
3.6
"BLD",1103,"KRN",3.8,0)
3.8
"BLD",1103,"KRN",9.2,0)
9.2
"BLD",1103,"KRN",9.8,0)
9.8
"BLD",1103,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",1103,"KRN",9.8,"NM",1,0)
XUSKAAJ1^^0^B1687417
"BLD",1103,"KRN",9.8,"NM","B","XUSKAAJ1",1)

"BLD",1103,"KRN",19,0)
19
"BLD",1103,"KRN",19,"NM",0)
^9.68A^3^3
"BLD",1103,"KRN",19,"NM",1,0)
XUCOMMAND^^2
"BLD",1103,"KRN",19,"NM",2,0)
XUS KAAJEE PROXY LOGON^^0
"BLD",1103,"KRN",19,"NM",3,0)
XUS KAAJEE WEB LOGON^^0
"BLD",1103,"KRN",19,"NM","B","XUCOMMAND",1)

"BLD",1103,"KRN",19,"NM","B","XUS KAAJEE PROXY LOGON",2)

"BLD",1103,"KRN",19,"NM","B","XUS KAAJEE WEB LOGON",3)

"BLD",1103,"KRN",19.1,0)
19.1
"BLD",1103,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",1103,"KRN",19.1,"NM",1,0)
XUKAAJEE_SAMPLE^^0
"BLD",1103,"KRN",19.1,"NM","B","XUKAAJEE_SAMPLE",1)

"BLD",1103,"KRN",101,0)
101
"BLD",1103,"KRN",409.61,0)
409.61
"BLD",1103,"KRN",771,0)
771
"BLD",1103,"KRN",779.2,0)
779.2
"BLD",1103,"KRN",870,0)
870
"BLD",1103,"KRN",8989.51,0)
8989.51
"BLD",1103,"KRN",8989.52,0)
8989.52
"BLD",1103,"KRN",8994,0)
8994
"BLD",1103,"KRN",8994,"NM",0)
^9.68A^2^2
"BLD",1103,"KRN",8994,"NM",1,0)
XUS KAAJEE GET CCOW TOKEN^^0
"BLD",1103,"KRN",8994,"NM",2,0)
XUS KAAJEE GET USER VIA PROXY^^0
"BLD",1103,"KRN",8994,"NM","B","XUS KAAJEE GET CCOW TOKEN",1)

"BLD",1103,"KRN",8994,"NM","B","XUS KAAJEE GET USER VIA PROXY",2)

"BLD",1103,"KRN","B",.4,.4)

"BLD",1103,"KRN","B",.401,.401)

"BLD",1103,"KRN","B",.402,.402)

"BLD",1103,"KRN","B",.403,.403)

"BLD",1103,"KRN","B",.5,.5)

"BLD",1103,"KRN","B",.84,.84)

"BLD",1103,"KRN","B",3.6,3.6)

"BLD",1103,"KRN","B",3.8,3.8)

"BLD",1103,"KRN","B",9.2,9.2)

"BLD",1103,"KRN","B",9.8,9.8)

"BLD",1103,"KRN","B",19,19)

"BLD",1103,"KRN","B",19.1,19.1)

"BLD",1103,"KRN","B",101,101)

"BLD",1103,"KRN","B",409.61,409.61)

"BLD",1103,"KRN","B",771,771)

"BLD",1103,"KRN","B",779.2,779.2)

"BLD",1103,"KRN","B",870,870)

"BLD",1103,"KRN","B",8989.51,8989.51)

"BLD",1103,"KRN","B",8989.52,8989.52)

"BLD",1103,"KRN","B",8994,8994)

"BLD",1103,"QUES",0)
^9.62^^
"BLD",1103,"REQB",0)
^9.611^^0
"INIT")
POST^XU8P504
"KRN",19,2,-1)
2^1
"KRN",19,2,0)
XUCOMMAND^SYSTEM COMMAND OPTIONS^^M^2^^^^^^^^y^
"KRN",19,2,10,0)
^19.01IP^17^14
"KRN",19,2,10,14,0)
976
"KRN",19,2,10,14,"^")
XUS KAAJEE WEB LOGON
"KRN",19,2,"U")
SYSTEM COMMAND OPTIONS
"KRN",19,976,-1)
0^3
"KRN",19,976,0)
XUS KAAJEE WEB LOGON^KAAJEE BROKER CONTEXT^^B^^^^^^^^KERNEL
"KRN",19,976,99.1)
59801,31367
"KRN",19,976,"RPC",0)
^19.05P^6^5
"KRN",19,976,"RPC",3,0)
XUS KAAJEE GET USER INFO
"KRN",19,976,"RPC",4,0)
XUS KAAJEE LOGOUT
"KRN",19,976,"RPC",5,0)
XUS ALLKEYS
"KRN",19,976,"RPC",6,0)
XUS KAAJEE GET CCOW TOKEN
"KRN",19,976,"U")
KAAJEE BROKER CONTEXT
"KRN",19,1253,-1)
0^2
"KRN",19,1253,0)
XUS KAAJEE PROXY LOGON^KAAJEE PROXY BROKER CONTEXT^^B^^^^^^^^KERNEL
"KRN",19,1253,1,0)
^^1^1^3070618^
"KRN",19,1253,1,1,0)
KAAJEE Application User Broker Context
"KRN",19,1253,"RPC",0)
^19.05P^3^1
"KRN",19,1253,"RPC",3,0)
XUS KAAJEE GET USER VIA PROXY
"KRN",19,1253,"U")
KAAJEE PROXY BROKER CONTEXT
"KRN",19.1,98,-1)
0^1
"KRN",19.1,98,0)
XUKAAJEE_SAMPLE^KAAJEE SAMPLE WEB APPLICATION^^^1
"KRN",19.1,98,1,0)
^^1^1^3070611^
"KRN",19.1,98,1,1,0)
This key is required to access the KAAJEE Sample Web Application.
"KRN",8994,212,-1)
0^2
"KRN",8994,212,0)
XUS KAAJEE GET USER VIA PROXY^USERINFO^XUSKAAJ1^2^^^^^^^1
"KRN",8994,212,1,0)
^8994.01^2^2^3080730^^
"KRN",8994,212,1,1,0)
Returns a variety of information needed for KAAJEE logon based on the 
"KRN",8994,212,1,2,0)
ccow token
"KRN",8994,212,2,0)
^8994.02A^3^3
"KRN",8994,212,2,1,0)
CLIENT-IP^1^^1^1
"KRN",8994,212,2,1,1,0)
^^3^3^3080730^
"KRN",8994,212,2,1,1,1,0)
IP address of the client workstation used for logging (signon log) and IP 
"KRN",8994,212,2,1,1,2,0)
blocking (failed access attempts).  Also, this IP address is used to 
"KRN",8994,212,2,1,1,3,0)
validate ccow token submitted.
"KRN",8994,212,2,2,0)
SERVER-NM^1^^1^2
"KRN",8994,212,2,2,1,0)
^^2^2^3080730^
"KRN",8994,212,2,2,1,1,0)
Identifying name for the calling application or server used for logging 
"KRN",8994,212,2,2,1,2,0)
(signon log)
"KRN",8994,212,2,3,0)
CCOWTOK^1^^1^3
"KRN",8994,212,2,3,1,0)
^8994.021^1^1^3080730^^
"KRN",8994,212,2,3,1,1,0)
Value of ccow token passed.
"KRN",8994,212,2,"B","CCOWTOK",3)

"KRN",8994,212,2,"B","CLIENT-IP",1)

"KRN",8994,212,2,"B","SERVER-NM",2)

"KRN",8994,212,2,"PARAMSEQ",1,1)

"KRN",8994,212,2,"PARAMSEQ",2,2)

"KRN",8994,212,2,"PARAMSEQ",3,3)

"KRN",8994,212,3,0)
^^20^20^3080730^
"KRN",8994,212,3,1,0)
output is the same as the RPC named XUS FATKAAT GET USER INFO.
"KRN",8994,212,3,2,0)
  
"KRN",8994,212,3,3,0)
OUTPUT:
"KRN",8994,212,3,4,0)
 Result(0) is the users DUZ.
"KRN",8994,212,3,5,0)
 Result(1) is the user name from the .01 field.
"KRN",8994,212,3,6,0)
 Result(2) is the users full name from the name standard file.
"KRN",8994,212,3,7,0)
 Result(3) is the FAMILY (LAST) NAME
"KRN",8994,212,3,8,0)
 Result(4) is the GIVEN (FIRST) NAME
"KRN",8994,212,3,9,0)
 Result(5) is the MIDDLE NAME
"KRN",8994,212,3,10,0)
 Result(6) is the PREFIX
"KRN",8994,212,3,11,0)
 Result(7) is the SUFFIX
"KRN",8994,212,3,12,0)
 Result(8) is the DEGREE
"KRN",8994,212,3,13,0)
 Result(9) is station # of the division that the user is working in.
"KRN",8994,212,3,14,0)
 Result(10) is the station # of the parent facility for the login division
"KRN",8994,212,3,15,0)
 Result(11) is the station # from the KSP site parameters, the parent
"KRN",8994,212,3,16,0)
 "computer system" 
"KRN",8994,212,3,17,0)
 Result(12) is the signon log entry IEN 
"KRN",8994,212,3,18,0)
 Result(13) = # of permissible divisions 
"KRN",8994,212,3,19,0)
 Result(14-n) are the permissible divisions for user login, in the format:
"KRN",8994,212,3,20,0)
 IEN of file 4^Station Name^Station Number^default? (1 or 0)
"KRN",8994,213,-1)
0^1
"KRN",8994,213,0)
XUS KAAJEE GET CCOW TOKEN^CCOWIP^XUSKAAJ1^2^R^^^^^^1
"KRN",8994,213,1,0)
^8994.01^1^1^3080731^^
"KRN",8994,213,1,1,0)
This RPC gets a token to save in the CCOW context to aid in sign-on
"KRN",8994,213,2,0)
^8994.02A^1^1
"KRN",8994,213,2,1,0)
IP-ADDRESS^1^30^0^1
"KRN",8994,213,2,1,1,0)
^^4^4^3080731^
"KRN",8994,213,2,1,1,1,0)
This value represents the IP address of the workstation.  Useful for J2EE
"KRN",8994,213,2,1,1,2,0)
applications that connect to VistA via the application server. If present,
"KRN",8994,213,2,1,1,3,0)
this value will be used when associating a CCOW token to the IP
"KRN",8994,213,2,1,1,4,0)
address of the client workstation
"KRN",8994,213,2,"B","IP-ADDRESS",1)

"KRN",8994,213,2,"PARAMSEQ",1,1)

"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^0
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3090706^3090706^6
"PKG",3,22,1,"PAH",1,0)
504^3091027
"PKG",3,22,1,"PAH",1,1,0)
^^2^2^3091027
"PKG",3,22,1,"PAH",1,1,1,0)
See patch XU*8*504 in the National Patch Module for complete
"PKG",3,22,1,"PAH",1,1,2,0)
information on this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","XU8P504")
0^^B2414286^n/a
"RTN","XU8P504",1,0)
XU8P504 ;OOIFO/AC - POST-INIT ROUTINE TO ADD KAAJEE PROXY IN FILE 200. ;10/19/2009
"RTN","XU8P504",2,0)
 ;;8.0;KERNEL;**504**;Jul 10, 1995;Build 5
"RTN","XU8P504",3,0)
 QUIT
"RTN","XU8P504",4,0)
POST ;Post-install entry point to add Application Proxy
"RTN","XU8P504",5,0)
 N XUNAME,XUFMAC,XUOPT,XUVPID,Y,R
"RTN","XU8P504",6,0)
 D MES^XPDUTL("Begin post-install routine: POST^XU8P504...")
"RTN","XU8P504",7,0)
 D MES^XPDUTL("Begin creating Application Proxy:  KAAJEE,PROXY in NEW PERSON file(#200)...")
"RTN","XU8P504",8,0)
 S XUNAME="KAAJEE,PROXY"
"RTN","XU8P504",9,0)
 S XUFMAC="#"
"RTN","XU8P504",10,0)
 S XUOPT="XUS KAAJEE PROXY LOGON"
"RTN","XU8P504",11,0)
 ;S VPID=????????  VPID TO BE ESTABLISHED WHEN CLOSER TO RELEASE
"RTN","XU8P504",12,0)
 S R=$$CREATE^XUSAP(XUNAME,XUFMAC,XUOPT,""),Y=+R
"RTN","XU8P504",13,0)
 ;Uncomment out next line and replace previous line with next line after VPID is obtain for KAAJEE,PROXY:
"RTN","XU8P504",14,0)
 ;S Y=$$CREATE^XUSAP(XUNAME,XUFMAC,XUOPT,XUVPID)
"RTN","XU8P504",15,0)
 D MES^XPDUTL($S(Y=-1:"Post-install failed to add Application Proxy: KAAJEE,PROXY...",Y=0:"KAAJEE,PROXY already exists...",1:"KAAJEE,PROXY has been added to NEW PERSON file(#200)..."))
"RTN","XU8P504",16,0)
 D MES^XPDUTL("Post-install finished...")
"RTN","XU8P504",17,0)
 Q
"RTN","XUSKAAJ1")
0^1^B1687417^n/a
"RTN","XUSKAAJ1",1,0)
XUSKAAJ1 ;; ISF/JLG - KAAJEE Utilities ;10/19/2009
"RTN","XUSKAAJ1",2,0)
 ;;8.0;KERNEL;**504**;Jul 10, 1995;Build 5
"RTN","XUSKAAJ1",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified
"RTN","XUSKAAJ1",4,0)
 ;;
"RTN","XUSKAAJ1",5,0)
 QUIT
"RTN","XUSKAAJ1",6,0)
 ;
"RTN","XUSKAAJ1",7,0)
 ; ------------------------------------------------------------------------
"RTN","XUSKAAJ1",8,0)
 ;   SSO/UC KAAJEE RPCs
"RTN","XUSKAAJ1",9,0)
 ; ------------------------------------------------------------------------
"RTN","XUSKAAJ1",10,0)
 ;
"RTN","XUSKAAJ1",11,0)
CCOWIP(RET,CLIENTIP) ;rpc. CCOW Auto Signon Handle for middle tiered application servers
"RTN","XUSKAAJ1",12,0)
 N XUIOIP
"RTN","XUSKAAJ1",13,0)
 S XUIOIP=$G(IO("IP")) ; save original
"RTN","XUSKAAJ1",14,0)
 ; get actual ip address instead of localhost address if possible
"RTN","XUSKAAJ1",15,0)
 S IO("IP")=$S($G(CLIENTIP)="127.0.0.1":XUIOIP,$G(CLIENTIP)="":XUIOIP,1:$G(CLIENTIP))
"RTN","XUSKAAJ1",16,0)
 D CCOW^XUSRB4(.RET)
"RTN","XUSKAAJ1",17,0)
 S IO("IP")=XUIOIP ; revert to original
"RTN","XUSKAAJ1",18,0)
 Q
"RTN","XUSKAAJ1",19,0)
 ;
"RTN","XUSKAAJ1",20,0)
USERINFO(RET,CLIENTIP,SERVERNM,CCOWTOK) ; rpc, called by XUS KAAJEE GET USER INFO VIA PROXY
"RTN","XUSKAAJ1",21,0)
 ;
"RTN","XUSKAAJ1",22,0)
 N %,DUZ,XUF
"RTN","XUSKAAJ1",23,0)
 S XUF=$G(XUF,0)
"RTN","XUSKAAJ1",24,0)
 S %=$G(IO("IP")) ; save original
"RTN","XUSKAAJ1",25,0)
 ; get actual ip address instead of localhost address if possible
"RTN","XUSKAAJ1",26,0)
 S IO("IP")=$S($G(CLIENTIP)="127.0.0.1":%,$G(CLIENTIP)="":%,1:$G(CLIENTIP))
"RTN","XUSKAAJ1",27,0)
 S DUZ=$$CHECKAV^XUS($$DECRYP^XUSRB1(CCOWTOK))
"RTN","XUSKAAJ1",28,0)
 S IO("IP")=% ; revert to original
"RTN","XUSKAAJ1",29,0)
 D USERINFO^XUSKAAJ(.RET,CLIENTIP,SERVERNM)
"RTN","XUSKAAJ1",30,0)
 Q
"RTN","XUSKAAJ1",31,0)
 ;
"VER")
8.0^22.0
"BLD",1103,6)
^452
**END**
**END**
