Released XU*8*551 SEQ #448
Extracted from mail message
**KIDS**:XU*8.0*551^

**INSTALL NAME**
XU*8.0*551
"BLD",2810,0)
XU*8.0*551^KERNEL^0^3100924^y
"BLD",2810,1,0)
^^3^3^3100907^
"BLD",2810,1,1,0)
SUPPORT FOR NON-PATIENT IDENTITY MANAGMENT
"BLD",2810,1,2,0)
Refer to patch XU*8.0*551 in the FORUM Patch Module for a complete
"BLD",2810,1,3,0)
description.
"BLD",2810,4,0)
^9.64PA^200^2
"BLD",2810,4,200,0)
200
"BLD",2810,4,200,2,0)
^9.641^200.06^2
"BLD",2810,4,200,2,200,0)
NEW PERSON  (File-top level)
"BLD",2810,4,200,2,200,1,0)
^9.6411^902^16
"BLD",2810,4,200,2,200,1,.01,0)
NAME
"BLD",2810,4,200,2,200,1,.111,0)
STREET ADDRESS 1
"BLD",2810,4,200,2,200,1,.112,0)
STREET ADDRESS 2
"BLD",2810,4,200,2,200,1,.113,0)
STREET ADDRESS 3
"BLD",2810,4,200,2,200,1,.114,0)
CITY
"BLD",2810,4,200,2,200,1,.115,0)
STATE
"BLD",2810,4,200,2,200,1,.116,0)
ZIP CODE
"BLD",2810,4,200,2,200,1,.131,0)
PHONE (HOME)
"BLD",2810,4,200,2,200,1,4,0)
SEX
"BLD",2810,4,200,2,200,1,5,0)
DOB
"BLD",2810,4,200,2,200,1,9,0)
SSN
"BLD",2810,4,200,2,200,1,41.99,0)
NPI
"BLD",2810,4,200,2,200,1,53.2,0)
DEA#
"BLD",2810,4,200,2,200,1,900,0)
Enumeration Initiated
"BLD",2810,4,200,2,200,1,901,0)
Enumeration Completed
"BLD",2810,4,200,2,200,1,902,0)
Requires Transmission
"BLD",2810,4,200,2,200.06,0)
VISITED FROM  (sub-file)
"BLD",2810,4,200,2,200.06,1,0)
^9.6411^2^2
"BLD",2810,4,200,2,200.06,1,.01,0)
VISITED FROM
"BLD",2810,4,200,2,200.06,1,2,0)
DUZ AT HOME SITE
"BLD",2810,4,200,222)
y^n^p^^^^n^^n
"BLD",2810,4,200,224)

"BLD",2810,4,8989.3,0)
8989.3
"BLD",2810,4,8989.3,2,0)
^9.641^8989.3^1
"BLD",2810,4,8989.3,2,8989.3,0)
KERNEL SYSTEM PARAMETERS  (File-top level)
"BLD",2810,4,8989.3,2,8989.3,1,0)
^9.6411^903^4
"BLD",2810,4,8989.3,2,8989.3,1,900,0)
New Person Enumeration Started
"BLD",2810,4,8989.3,2,8989.3,1,901,0)
PAID Enumeration Started
"BLD",2810,4,8989.3,2,8989.3,1,902,0)
New Person Enumeration Finish
"BLD",2810,4,8989.3,2,8989.3,1,903,0)
PAID Enumeration Finish
"BLD",2810,4,8989.3,222)
y^n^p^^^^n^^n
"BLD",2810,4,8989.3,224)

"BLD",2810,4,"APDD",200,200)

"BLD",2810,4,"APDD",200,200,.01)

"BLD",2810,4,"APDD",200,200,.111)

"BLD",2810,4,"APDD",200,200,.112)

"BLD",2810,4,"APDD",200,200,.113)

"BLD",2810,4,"APDD",200,200,.114)

"BLD",2810,4,"APDD",200,200,.115)

"BLD",2810,4,"APDD",200,200,.116)

"BLD",2810,4,"APDD",200,200,.131)

"BLD",2810,4,"APDD",200,200,4)

"BLD",2810,4,"APDD",200,200,5)

"BLD",2810,4,"APDD",200,200,9)

"BLD",2810,4,"APDD",200,200,41.99)

"BLD",2810,4,"APDD",200,200,53.2)

"BLD",2810,4,"APDD",200,200,900)

"BLD",2810,4,"APDD",200,200,901)

"BLD",2810,4,"APDD",200,200,902)

"BLD",2810,4,"APDD",200,200.06)

"BLD",2810,4,"APDD",200,200.06,.01)

"BLD",2810,4,"APDD",200,200.06,2)

"BLD",2810,4,"APDD",8989.3,8989.3)

"BLD",2810,4,"APDD",8989.3,8989.3,900)

"BLD",2810,4,"APDD",8989.3,8989.3,901)

"BLD",2810,4,"APDD",8989.3,8989.3,902)

"BLD",2810,4,"APDD",8989.3,8989.3,903)

"BLD",2810,4,"B",200,200)

"BLD",2810,4,"B",8989.3,8989.3)

"BLD",2810,6.3)
2
"BLD",2810,"KRN",0)
^9.67PA^779.2^20
"BLD",2810,"KRN",.4,0)
.4
"BLD",2810,"KRN",.401,0)
.401
"BLD",2810,"KRN",.402,0)
.402
"BLD",2810,"KRN",.403,0)
.403
"BLD",2810,"KRN",.5,0)
.5
"BLD",2810,"KRN",.84,0)
.84
"BLD",2810,"KRN",3.6,0)
3.6
"BLD",2810,"KRN",3.8,0)
3.8
"BLD",2810,"KRN",9.2,0)
9.2
"BLD",2810,"KRN",9.8,0)
9.8
"BLD",2810,"KRN",9.8,"NM",0)
^9.68A^7^7
"BLD",2810,"KRN",9.8,"NM",1,0)
XUMPI^^0^B198383
"BLD",2810,"KRN",9.8,"NM",2,0)
XUPSSTF^^0^B26190804
"BLD",2810,"KRN",9.8,"NM",3,0)
XUPSGS^^0^B37121734
"BLD",2810,"KRN",9.8,"NM",4,0)
XUPSHL7B^^0^B2863425
"BLD",2810,"KRN",9.8,"NM",5,0)
XUPSORG^^0^B2758347
"BLD",2810,"KRN",9.8,"NM",6,0)
XUPSPRA^^0^B921249
"BLD",2810,"KRN",9.8,"NM",7,0)
XUPSB01^^0^B40618948
"BLD",2810,"KRN",9.8,"NM","B","XUMPI",1)

"BLD",2810,"KRN",9.8,"NM","B","XUPSB01",7)

"BLD",2810,"KRN",9.8,"NM","B","XUPSGS",3)

"BLD",2810,"KRN",9.8,"NM","B","XUPSHL7B",4)

"BLD",2810,"KRN",9.8,"NM","B","XUPSORG",5)

"BLD",2810,"KRN",9.8,"NM","B","XUPSPRA",6)

"BLD",2810,"KRN",9.8,"NM","B","XUPSSTF",2)

"BLD",2810,"KRN",19,0)
19
"BLD",2810,"KRN",19.1,0)
19.1
"BLD",2810,"KRN",101,0)
101
"BLD",2810,"KRN",101,"NM",0)
^9.68A^8^8
"BLD",2810,"KRN",101,"NM",1,0)
XUPS B01 CLIENT^^0
"BLD",2810,"KRN",101,"NM",2,0)
XUPS B01 SERVER HLO MPI^^0
"BLD",2810,"KRN",101,"NM",3,0)
XUPS B01 SERVER^^0
"BLD",2810,"KRN",101,"NM",4,0)
XUPS B01 CLIENT HLO MPI^^0
"BLD",2810,"KRN",101,"NM",5,0)
XUPS B02 CLIENT HLO MPI^^0
"BLD",2810,"KRN",101,"NM",6,0)
XUPS B02 CLIENT^^0
"BLD",2810,"KRN",101,"NM",7,0)
XUPS B02 SERVER HLO MPI^^0
"BLD",2810,"KRN",101,"NM",8,0)
XUPS B02 SERVER^^0
"BLD",2810,"KRN",101,"NM","B","XUPS B01 CLIENT",1)

"BLD",2810,"KRN",101,"NM","B","XUPS B01 CLIENT HLO MPI",4)

"BLD",2810,"KRN",101,"NM","B","XUPS B01 SERVER",3)

"BLD",2810,"KRN",101,"NM","B","XUPS B01 SERVER HLO MPI",2)

"BLD",2810,"KRN",101,"NM","B","XUPS B02 CLIENT",6)

"BLD",2810,"KRN",101,"NM","B","XUPS B02 CLIENT HLO MPI",5)

"BLD",2810,"KRN",101,"NM","B","XUPS B02 SERVER",8)

"BLD",2810,"KRN",101,"NM","B","XUPS B02 SERVER HLO MPI",7)

"BLD",2810,"KRN",409.61,0)
409.61
"BLD",2810,"KRN",771,0)
771
"BLD",2810,"KRN",771,"NM",0)
^9.68A^1^1
"BLD",2810,"KRN",771,"NM",1,0)
XUPS APP^^0
"BLD",2810,"KRN",771,"NM","B","XUPS APP",1)

"BLD",2810,"KRN",779.2,0)
779.2
"BLD",2810,"KRN",779.2,"NM",0)
^9.68A^1^1
"BLD",2810,"KRN",779.2,"NM",1,0)
XUPS APP^^0
"BLD",2810,"KRN",779.2,"NM","B","XUPS APP",1)

"BLD",2810,"KRN",870,0)
870
"BLD",2810,"KRN",8989.51,0)
8989.51
"BLD",2810,"KRN",8989.52,0)
8989.52
"BLD",2810,"KRN",8994,0)
8994
"BLD",2810,"KRN","B",.4,.4)

"BLD",2810,"KRN","B",.401,.401)

"BLD",2810,"KRN","B",.402,.402)

"BLD",2810,"KRN","B",.403,.403)

"BLD",2810,"KRN","B",.5,.5)

"BLD",2810,"KRN","B",.84,.84)

"BLD",2810,"KRN","B",3.6,3.6)

"BLD",2810,"KRN","B",3.8,3.8)

"BLD",2810,"KRN","B",9.2,9.2)

"BLD",2810,"KRN","B",9.8,9.8)

"BLD",2810,"KRN","B",19,19)

"BLD",2810,"KRN","B",19.1,19.1)

"BLD",2810,"KRN","B",101,101)

"BLD",2810,"KRN","B",409.61,409.61)

"BLD",2810,"KRN","B",771,771)

"BLD",2810,"KRN","B",779.2,779.2)

"BLD",2810,"KRN","B",870,870)

"BLD",2810,"KRN","B",8989.51,8989.51)

"BLD",2810,"KRN","B",8989.52,8989.52)

"BLD",2810,"KRN","B",8994,8994)

"BLD",2810,"QUES",0)
^9.62^^
"BLD",2810,"REQB",0)
^9.611^^
"FIA",200)
NEW PERSON
"FIA",200,0)
^VA(200,
"FIA",200,0,0)
200Is
"FIA",200,0,1)
y^n^p^^^^n^^n
"FIA",200,0,10)

"FIA",200,0,11)

"FIA",200,0,"RLRO")

"FIA",200,0,"VR")
8.0^XU
"FIA",200,200)
1
"FIA",200,200,.01)

"FIA",200,200,.111)

"FIA",200,200,.112)

"FIA",200,200,.113)

"FIA",200,200,.114)

"FIA",200,200,.115)

"FIA",200,200,.116)

"FIA",200,200,.131)

"FIA",200,200,4)

"FIA",200,200,5)

"FIA",200,200,9)

"FIA",200,200,41.99)

"FIA",200,200,53.2)

"FIA",200,200,900)

"FIA",200,200,901)

"FIA",200,200,902)

"FIA",200,200,8910)

"FIA",200,200.06)
1
"FIA",200,200.06,.01)

"FIA",200,200.06,2)

"FIA",8989.3)
KERNEL SYSTEM PARAMETERS
"FIA",8989.3,0)
^XTV(8989.3,
"FIA",8989.3,0,0)
8989.3P
"FIA",8989.3,0,1)
y^n^p^^^^n^^n
"FIA",8989.3,0,10)

"FIA",8989.3,0,11)

"FIA",8989.3,0,"RLRO")

"FIA",8989.3,0,"VR")
8.0^XU
"FIA",8989.3,8989.3)
1
"FIA",8989.3,8989.3,900)

"FIA",8989.3,8989.3,901)

"FIA",8989.3,8989.3,902)

"FIA",8989.3,8989.3,903)

"IX",200,200,"ANAME",0)
200^ANAME^Update the corresponding entry in the Name Components file.^MU^^F^IR^I^200^^^^^A
"IX",200,200,"ANAME",.1,0)
^^13^13^2991228^
"IX",200,200,"ANAME",.1,1,0)
This MUMPS cross-reference keeps the Name field in the New Person file in
"IX",200,200,"ANAME",.1,2,0)
synch with the corresponding entry in the Name Components file (#20).
"IX",200,200,"ANAME",.1,3,0)
 
"IX",200,200,"ANAME",.1,4,0)
The XUNOTRIG flag controls whether this cross-reference is executed. The
"IX",200,200,"ANAME",.1,5,0)
form XUEXISTING USER and the XUNEW USER forms both set the XUNOTRIG flag,
"IX",200,200,"ANAME",.1,6,0)
because the forms themselves contain the logic necessary to keep the two
"IX",200,200,"ANAME",.1,7,0)
files in synch.
"IX",200,200,"ANAME",.1,8,0)
 
"IX",200,200,"ANAME",.1,9,0)
XUITNAME is set by the XUEXISTING USER and XUNEW USER forms and is checked
"IX",200,200,"ANAME",.1,10,0)
by the input transform on the .01 field. If XUITNAME is set, the input
"IX",200,200,"ANAME",.1,11,0)
transform returns in the XLFNC array the component parts of the name. This
"IX",200,200,"ANAME",.1,12,0)
MUMPS cross-reference can then get the name components from the XLFNC
"IX",200,200,"ANAME",.1,13,0)
array to populate the Name Components file.
"IX",200,200,"ANAME",1)
I '$G(XUNOTRIG),X2(1)]"" N XUNOTRIG,XUPVAL S XUNOTRIG=1,XUPVAL=$P($G(^VA(200,DA,3.1)),U) K:'$D(XUITNAME) XLFNC S:$D(XLFNC)<2 XLFNC=X2(1) D UPDCOMP^XLFNAME2(200,DA,.01,.XLFNC,10.1,XUPVAL) K XLFNC,XUITNAME
"IX",200,200,"ANAME",2)
I '$G(XUNOTRIG),X2(1)="" N XUNOTRIG S XUNOTRIG=1 D DELCOMP^XLFNAME2(200,DA,.01)
"IX",200,200,"ANAME",11.1,0)
^.114IA^1^1
"IX",200,200,"ANAME",11.1,1,0)
1^F^200^.01^^1^F
"IX",200,200,"ATR",0)
200^ATR^This index keeps track of records for which clinical trainee data is edited.^MU^^R^IR^I^200^^^^^S
"IX",200,200,"ATR",.1,0)
^^20^20^3040927^
"IX",200,200,"ATR",.1,1,0)
This new-style cross-reference has as cross-reference values all the 
"IX",200,200,"ATR",.1,2,0)
fields in the NEW PERSON file that are being tracked by the Office of 
"IX",200,200,"ATR",.1,3,0)
Academic Affiliations for rollup into a centralized database. When any of
"IX",200,200,"ATR",.1,4,0)
the fields are edited, the cross-reference logic will set an index entry
"IX",200,200,"ATR",.1,5,0)
that corresponds to the edited record. The index entries will look like
"IX",200,200,"ATR",.1,6,0)
this:
"IX",200,200,"ATR",.1,7,0)
 
"IX",200,200,"ATR",.1,8,0)
  ^VA(200,"ATR",ien) = FM internal date
"IX",200,200,"ATR",.1,9,0)
 
"IX",200,200,"ATR",.1,10,0)
"ATR" stands for "ATRainee." 
"IX",200,200,"ATR",.1,11,0)
 
"IX",200,200,"ATR",.1,12,0)
None of the field-type cross-reference values are used as subscripts in
"IX",200,200,"ATR",.1,13,0)
the index, since we are only interested in recording the IENs of the
"IX",200,200,"ATR",.1,14,0)
records that are edited and the date the index entry is set. A separate
"IX",200,200,"ATR",.1,15,0)
queuable option will loop through the entries in this index, and send via
"IX",200,200,"ATR",.1,16,0)
HL7 messages the clinical trainee data of each record to the Office of
"IX",200,200,"ATR",.1,17,0)
Academic Affiliations.
"IX",200,200,"ATR",.1,18,0)
 
"IX",200,200,"ATR",.1,19,0)
Note that the index will only be set if the person is a Clinical Trainee,
"IX",200,200,"ATR",.1,20,0)
that is, if the PROGRAM OF STUDY (#12.2) field is filled in.
"IX",200,200,"ATR",1)
S ^VA(200,"ATR",DA)=$G(DT)
"IX",200,200,"ATR",1.4)
S X=X1(11)!X2(11)
"IX",200,200,"ATR",2)
K ^VA(200,"ATR",DA)
"IX",200,200,"ATR",2.4)

"IX",200,200,"ATR",2.5)
K ^VA(200,"ATR")
"IX",200,200,"ATR",11.1,0)
^.114IA^21^19
"IX",200,200,"ATR",11.1,2,0)
1^F^200^.01^^^
"IX",200,200,"ATR",11.1,3,0)
2^F^200^.111^^^
"IX",200,200,"ATR",11.1,4,0)
3^F^200^.112^^^
"IX",200,200,"ATR",11.1,5,0)
4^F^200^.113^^^
"IX",200,200,"ATR",11.1,6,0)
5^F^200^.114^^^
"IX",200,200,"ATR",11.1,7,0)
6^F^200^.115^^^^
"IX",200,200,"ATR",11.1,8,0)
7^F^200^.116^^^
"IX",200,200,"ATR",11.1,9,0)
8^F^200^9^^^
"IX",200,200,"ATR",11.1,10,0)
9^F^200^.151^^^
"IX",200,200,"ATR",11.1,11,0)
10^F^200^12.1^^^
"IX",200,200,"ATR",11.1,12,0)
11^F^200^12.2^^^
"IX",200,200,"ATR",11.1,13,0)
12^F^200^12.3^^^^
"IX",200,200,"ATR",11.1,14,0)
13^F^200^29^^^
"IX",200,200,"ATR",11.1,15,0)
14^F^200^8^^^
"IX",200,200,"ATR",11.1,17,0)
16^F^200^5^^^
"IX",200,200,"ATR",11.1,18,0)
17^F^200^12.4^^^
"IX",200,200,"ATR",11.1,19,0)
18^F^200^12.6^^^F
"IX",200,200,"ATR",11.1,20,0)
19^F^200^12.7^^^F
"IX",200,200,"ATR",11.1,21,0)
20^F^200^12.8^^^F
"IX",200,200,"AUSER",0)
200^AUSER^Build cross reference of active users^MU^^R^IR^I^200^^^^^S
"IX",200,200,"AUSER",.1,0)
^^4^4^3060606
"IX",200,200,"AUSER",.1,1,0)
This is a cross reference of CPRS Active USERs (AUSER):
"IX",200,200,"AUSER",.1,2,0)
 
"IX",200,200,"AUSER",.1,3,0)
 The cross reference is in the format:
"IX",200,200,"AUSER",.1,4,0)
 ^VA(200,"AUSER",<NAME(#.01) value>,IEN)=""
"IX",200,200,"AUSER",1)
I DA'<1,$$PROVIDER^XUSER(DA),X(1)]"",X(3)<1 S ^VA(200,"AUSER",X(1),DA)="" Q
"IX",200,200,"AUSER",1.4)
Q
"IX",200,200,"AUSER",2)
I ((DA'<1&X1(1)'=X2(1))!(DA'<1&X2(2)="")) K ^VA(200,"AUSER",X1(1),DA)
"IX",200,200,"AUSER",2.4)
Q
"IX",200,200,"AUSER",2.5)
K ^VA(200,"AUSER")
"IX",200,200,"AUSER",11.1,0)
^.114IA^3^3
"IX",200,200,"AUSER",11.1,1,0)
1^F^200^.01^^^F
"IX",200,200,"AUSER",11.1,2,0)
2^F^200^2^^^F
"IX",200,200,"AUSER",11.1,3,0)
3^F^200^7^^^F
"IX",200,200,"AVISIT",0)
200^AVISIT^This is a regular index of the remote DUZ and Station number.^R^^R^IR^W^200.06^^^^^S
"IX",200,200,"AVISIT",1)
S ^VA(200,"AVISIT",$E(X(1),1,30),$E(X(2),1,15),DA(1),DA)=""
"IX",200,200,"AVISIT",2)
K ^VA(200,"AVISIT",$E(X(1),1,30),$E(X(2),1,15),DA(1),DA)
"IX",200,200,"AVISIT",2.5)
K ^VA(200,"AVISIT")
"IX",200,200,"AVISIT",11.1,0)
^.114IA^2^2
"IX",200,200,"AVISIT",11.1,1,0)
1^F^200.06^.01^30^1^F
"IX",200,200,"AVISIT",11.1,2,0)
2^F^200.06^2^15^2^F
"IX",200,200,"AXUHUI",0)
200^AXUHUI^Hui Project Top File Xref^MU^^R^^I^200^^^^^A
"IX",200,200,"AXUHUI",.1,0)
^^8^8^3020528^
"IX",200,200,"AXUHUI",.1,1,0)
This new style cross-reference is on non-multiple fields that the Hui
"IX",200,200,"AXUHUI",.1,2,0)
project want to monitor for a change in value (Patch XU*8*236). The
"IX",200,200,"AXUHUI",.1,3,0)
following fields are being monitored in order:
"IX",200,200,"AXUHUI",.1,4,0)
 
"IX",200,200,"AXUHUI",.1,5,0)
 .01 (NAME)
"IX",200,200,"AXUHUI",.1,6,0)
 9.2 (TERMINATION DATE)
"IX",200,200,"AXUHUI",.1,7,0)
 5 (DOB)
"IX",200,200,"AXUHUI",.1,8,0)
 9 (SSN) 
"IX",200,200,"AXUHUI",1)
D HUI^XUHUI("","XUHUI FIELD CHANGE EVENT","","AXUHUI") Q
"IX",200,200,"AXUHUI",2)
Q
"IX",200,200,"AXUHUI",2.5)
Q
"IX",200,200,"AXUHUI",11.1,0)
^.114IA^4^4
"IX",200,200,"AXUHUI",11.1,1,0)
1^F^200^.01^^^F
"IX",200,200,"AXUHUI",11.1,2,0)
2^F^200^9.2^^^F
"IX",200,200,"AXUHUI",11.1,3,0)
3^F^200^5^^^F
"IX",200,200,"AXUHUI",11.1,4,0)
4^F^200^9^^^F
"IX",200,200,"B",0)
200^B^Regular "B" index on .01 field with transform, length 35.^R^^F^IR^I^200^^^^^LS
"IX",200,200,"B",1)
S ^VA(200,"B",$E(X,1,35),DA)=""
"IX",200,200,"B",2)
K ^VA(200,"B",$E(X,1,35),DA)
"IX",200,200,"B",2.5)
K ^VA(200,"B")
"IX",200,200,"B",11.1,0)
^.114IA^1^1
"IX",200,200,"B",11.1,1,0)
1^F^200^.01^35^1^F
"IX",200,200,"B",11.1,1,4)
N XLFNAME S XLFNAME=X S X=$$FORMAT^XLFNAME7(.XLFNAME,3,35,,0)
"KRN",101,2158,-1)
0^3
"KRN",101,2158,0)
XUPS B01 SERVER^PMU B01 event server for Person service^^E^^^^^^^^KERNEL
"KRN",101,2158,1,0)
^^2^2^3100811^
"KRN",101,2158,1,1,0)
Provides PMU B01 HL7 messages to the Person Service based on adds to the
"KRN",101,2158,1,2,0)
New Person file.
"KRN",101,2158,99)
61307,42848
"KRN",101,2158,770)
XUPS APP^^PMU^B01^^^^AL^AL^2.4^ACK^^i
"KRN",101,2158,772)
Q
"KRN",101,2158,773)
^^^
"KRN",101,2158,775,0)
^101.0775PA^1^1
"KRN",101,2158,775,1,0)
2159
"KRN",101,2158,775,1,"^")
XUPS B01 CLIENT
"KRN",101,2159,-1)
0^1
"KRN",101,2159,0)
XUPS B01 CLIENT^B01 CLIENT FOR PERSON SERVICE^^S^^^^^^^^KERNEL
"KRN",101,2159,99)
61307,42848
"KRN",101,2159,770)
^XUPS APP^PMU^B01^^^^^^2.4^ACK^^i
"KRN",101,2159,771)

"KRN",101,2159,773)
1^1^^
"KRN",101,2159,774)

"KRN",101,2160,-1)
0^6
"KRN",101,2160,0)
XUPS B02 CLIENT^B02 CLIENT FOR PERSON SERVICE^^S^^^^^^^^KERNEL
"KRN",101,2160,99)
61307,42848
"KRN",101,2160,770)
^XUPS APP^PMU^B02^^^^^^2.4^ACK^^i
"KRN",101,2160,771)

"KRN",101,2160,773)
1^1
"KRN",101,2161,-1)
0^8
"KRN",101,2161,0)
XUPS B02 SERVER^PMU B02 event server for Person Service^^E^^^^^^^^KERNEL
"KRN",101,2161,1,0)
^101.06^2^2^3100811^^
"KRN",101,2161,1,1,0)
Provides PMU B02 HL7 messages to the Person Service based on modifications 
"KRN",101,2161,1,2,0)
to the New Person file.
"KRN",101,2161,99)
61307,42848
"KRN",101,2161,770)
XUPS APP^^PMU^B02^^^^AL^AL^2.4^ACK^^i
"KRN",101,2161,772)

"KRN",101,2161,773)
1^1
"KRN",101,2161,775,0)
^101.0775PA^1^1
"KRN",101,2161,775,1,0)
2160
"KRN",101,2161,775,1,"^")
XUPS B02 CLIENT
"KRN",101,2164,-1)
0^2
"KRN",101,2164,0)
XUPS B01 SERVER HLO MPI^XUPS B01 SERVER HLO MPI^^E^^^^^^^^KERNEL
"KRN",101,2164,1,0)
^^2^2^3100811^
"KRN",101,2164,1,1,0)
This is the Server protocol that will be used to serve PMU-B01 Add Person
"KRN",101,2164,1,2,0)
messages to MPI to get the person enumerated
"KRN",101,2164,99)
61949,49986
"KRN",101,2164,770)
XUPS APP^^PMU^B01^^^^AL^AL^2.4^
"KRN",101,2164,772)
D B01AP^XUPSB01
"KRN",101,2164,775,0)
^101.0775PA^1^1
"KRN",101,2164,775,1,0)
2165
"KRN",101,2164,775,1,"^")
XUPS B01 CLIENT HLO MPI
"KRN",101,2165,-1)
0^4
"KRN",101,2165,0)
XUPS B01 CLIENT HLO MPI^XUPS B01 CLIENT HLO MPI^^S^^^^^^^^KERNEL
"KRN",101,2165,1,0)
^^2^2^3100811^
"KRN",101,2165,1,1,0)
This is the CLIENT protocol that will be used to serve PMU-B01 Add 
"KRN",101,2165,1,2,0)
Person messages to MPI to get this person enumerated
"KRN",101,2165,99)
61949,49971
"KRN",101,2165,770)
^XUPS APP^^B01^^^MPIVA^^^^ACK
"KRN",101,2165,771)
Q
"KRN",101,2165,773)
1^1
"KRN",101,2165,774)
Q
"KRN",101,2166,-1)
0^5
"KRN",101,2166,0)
XUPS B02 CLIENT HLO MPI^XUPS BO2 CLIENT HLO MPI^^S^^^^^^^^KERNEL
"KRN",101,2166,1,0)
^^2^2^3100811^
"KRN",101,2166,1,1,0)
This is the CLIENT protocol that will be used to serve PMU-B02 Update
"KRN",101,2166,1,2,0)
Person messages to MPI                                      
"KRN",101,2166,99)
61949,50007
"KRN",101,2166,770)
^XUPS APP^^B02^^^MPIVA^^^^ACK
"KRN",101,2166,771)
Q
"KRN",101,2166,773)
1^1
"KRN",101,2166,774)
Q
"KRN",101,2167,-1)
0^7
"KRN",101,2167,0)
XUPS B02 SERVER HLO MPI^XUPS B02 SERVER HLO MPI^^E^^^^^^^^KERNEL
"KRN",101,2167,1,0)
^^2^2^3100811^
"KRN",101,2167,1,1,0)
 This is the SERVER protocol that will be used to serve PMU-B02
"KRN",101,2167,1,2,0)
 UPDATE Person messages to MPI
"KRN",101,2167,99)
61949,50023
"KRN",101,2167,770)
XUPS APP^^PMU^B02^^^^AL^AL^2.4^
"KRN",101,2167,771)

"KRN",101,2167,772)
D B02AP^XUPSB01
"KRN",101,2167,775,0)
^101.0775PA^1^1
"KRN",101,2167,775,1,0)
2166
"KRN",101,2167,775,1,"^")
XUPS B02 CLIENT HLO MPI
"KRN",771,120,-1)
0^1
"KRN",771,120,0)
XUPS APP^a^^^^^USA
"KRN",779.2,1,-1)
0^1
"KRN",779.2,1,0)
XUPS APP
"KRN",779.2,1,1,0)
^779.21I^4^4
"KRN",779.2,1,1,1,0)
PMU^B01^XUPS B01 B02
"KRN",779.2,1,1,2,0)
PMU^B02^XUPS B01 B02
"KRN",779.2,1,1,3,0)
ACK^B01^XUPS B01 B02^B01AP^XUPSB01^2.4
"KRN",779.2,1,1,4,0)
ACK^B02^XUPS B01 B02^B02AP^XUPSB01^2.4
"KRN",779.2,1,1,"B","ACK",3)

"KRN",779.2,1,1,"B","ACK",4)

"KRN",779.2,1,1,"B","PMU",1)

"KRN",779.2,1,1,"B","PMU",2)

"KRN",779.2,1,1,"C","PMU","B01",1)

"KRN",779.2,1,1,"C","PMU","B02",2)

"KRN",779.2,1,1,"D","ACK","B01",2.4,3)

"KRN",779.2,1,1,"D","ACK","B02",2.4,4)

"KRN",779.2,1,2)
KERNEL
"MBREQ")
0
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1;;HLAPDEL^XPDIA1(%)
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",22,779.2)
779.2;22;1;;HLOAP^XPDTA1;;HLOE^XPDIA1;;;
"ORD",22,779.2,0)
HLO APPLICATION REGISTRY
"PKG",138,-1)
1^1
"PKG",138,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",138,20,0)
^9.402P^2^1
"PKG",138,20,2,0)
2^^RGDRM03
"PKG",138,20,"B",2,2)

"PKG",138,22,0)
^9.49I^1^1
"PKG",138,22,1,0)
8.0^2950703^2951127^12541
"PKG",138,22,1,"PAH",1,0)
551^3100924
"PKG",138,22,1,"PAH",1,1,0)
^^3^3^3100924
"PKG",138,22,1,"PAH",1,1,1,0)
SUPPORT FOR NON-PATIENT IDENTITY MANAGMENT
"PKG",138,22,1,"PAH",1,1,2,0)
Refer to patch XU*8.0*551 in the FORUM Patch Module for a complete
"PKG",138,22,1,"PAH",1,1,3,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","XUMPI")
0^1^B198383^n/a
"RTN","XUMPI",1,0)
XUMPI ;ALB/CMC-TRIGGER X-REF ON NEW PERSON FIELDS FOR MPI ;8/5/2010
"RTN","XUMPI",2,0)
 ;;8.0;KERNEL;**551**;Jul 10, 1995;Build 2
"RTN","XUMPI",3,0)
 ;
"RTN","XUMPI",4,0)
XREF(DA) ;TRIGGER TO SET THE REQUIRES TRANSMISSION FIELD if the NEW PERSON Enumeration process has started
"RTN","XUMPI",5,0)
 ;8989.3,900    New Person Enumeration Started MPI;1 DATE
"RTN","XUMPI",6,0)
 N IEN,FDA,XUERR
"RTN","XUMPI",7,0)
 S IEN=$O(^XTV(8989.3,0))
"RTN","XUMPI",8,0)
 Q:$P($G(^XTV(8989.3,IEN,"MPI")),"^",1)=""
"RTN","XUMPI",9,0)
 ;enumeration has started so set the Requires Transmission field in NEW PERSON for this Record
"RTN","XUMPI",10,0)
 S FDA(200,DA_",",902)="Y"
"RTN","XUMPI",11,0)
 D FILE^DIE("E","FDA","XUERR")
"RTN","XUMPI",12,0)
 ;what to do if can't set the field???
"RTN","XUMPI",13,0)
 Q 
"RTN","XUPSB01")
0^7^B40618948^n/a
"RTN","XUPSB01",1,0)
XUPSB01 ;ALB/CMC - B01/B02 BUILDER ;2 Sep 2010  5:25 PM
"RTN","XUPSB01",2,0)
 ;;8.0;KERNEL;**551**;Jul 10, 1995;Build 2
"RTN","XUPSB01",3,0)
 ;
"RTN","XUPSB01",4,0)
BLD(CONTEXT,NPIEN,PIEN) ;BUILD AND SEND B01 OR B02 MSG
"RTN","XUPSB01",5,0)
 ;CONTEXT - is ADD or UPDATE depending on the event
"RTN","XUPSB01",6,0)
 ;NPIEN - is the internal entry number of the record in file 200
"RTN","XUPSB01",7,0)
 ;PIEN  - is the internal entry number of the record in file 450
"RTN","XUPSB01",8,0)
 ;
"RTN","XUPSB01",9,0)
TASK ;
"RTN","XUPSB01",10,0)
 I CONTEXT="UPDATE",$G(NPIEN)'="" D INIT^HLFNC2("XUPS B02 SERVER",.HL) S XUPS="XUPS B02 SERVER HLO MPI",XUPSIEN=NPIEN
"RTN","XUPSB01",11,0)
 I CONTEXT="ADD",$G(NPIEN)'="" D INIT^HLFNC2("XUPS B01 SERVER",.HL) S XUPS="XUPS B01 SERVER HLO MPI",XUPSIEN=NPIEN
"RTN","XUPSB01",12,0)
 I CONTEXT="ADD",$G(PIEN)'="" D INIT^HLFNC2("PRS B01 SERVER",.HL) S XUPS="PRS B01 SERVER HLO MPI",XUPSIEN=PIEN
"RTN","XUPSB01",13,0)
 I CONTEXT="UPDATE",$G(PIEN)'="" D INIT^HLFNC2("PRS B02 SERVER",.HL) S XUPS="PRS B02 SERVER HLO MPI",XUPSIEN=PIEN
"RTN","XUPSB01",14,0)
 I $O(HL(""))="" Q "-1^"_$P(HL,"^",2)
"RTN","XUPSB01",15,0)
 N HLECH,HLFS,COMP,REP,SUBCOMP,ERR,STF,XUORG,PRA,HLA,TIEN
"RTN","XUPSB01",16,0)
 S HLECH=HL("ECH"),HLFS=HL("FS"),COMP=$E(HL("ECH"),1),REP=$E(HL("ECH"),2),SUBCOMP=$E(HL("ECH"),4)
"RTN","XUPSB01",17,0)
 S ERR=""
"RTN","XUPSB01",18,0)
 ;
"RTN","XUPSB01",19,0)
 I $G(NPIEN)'="" D
"RTN","XUPSB01",20,0)
 .;BUILD FOR NEW PERSON
"RTN","XUPSB01",21,0)
 .S EVN="EVN"_HL("FS")_HL("FS")_$$HLDATE^HLFNC(DT)_HL("FS")_HL("FS")
"RTN","XUPSB01",22,0)
 .D EN^XUPSSTF(NPIEN,"2,3,4,5,6,10,11",.HL,.STF,.STFC) Q:+STF=-1
"RTN","XUPSB01",23,0)
 .D EN^XUPSORG(NPIEN,.HL,.XUORG) Q:+$G(XUORG)=-1
"RTN","XUPSB01",24,0)
 .S PRA=$$EN^XUPSPRA(NPIEN,"6",.HL) Q:+PRA=-1
"RTN","XUPSB01",25,0)
 .S HLA("HLS",1)=EVN
"RTN","XUPSB01",26,0)
 .S HLA("HLS",2)=STF
"RTN","XUPSB01",27,0)
 .I $D(STFC) D
"RTN","XUPSB01",28,0)
 ..;STFC HAS THE REST OF THE STF SEGMENT
"RTN","XUPSB01",29,0)
 ..S STFCNT=1,STFIEN=0
"RTN","XUPSB01",30,0)
 ..F  S STFIEN=$O(STFC(STFIEN)) Q:'STFIEN  D
"RTN","XUPSB01",31,0)
 ...S HLA("HLS",2,STFCNT)=STFC(STFIEN)
"RTN","XUPSB01",32,0)
 .S HLA("HLS",3)=PRA,CNT=4
"RTN","XUPSB01",33,0)
 .N TMP S TMP=0 F  S TMP=$O(XUORG(TMP)) Q:TMP=""  S HLA("HLS",CNT)=XUORG(TMP),CNT=CNT+1
"RTN","XUPSB01",34,0)
 ;
"RTN","XUPSB01",35,0)
 I $G(PIEN)'="" D
"RTN","XUPSB01",36,0)
 .;BUILD FOR PAID EMPLOYEE
"RTN","XUPSB01",37,0)
 .S EVN="EVN"_HL("FS")_HL("FS")_$$HLDATE^HLFNC(DT)_HL("FS")_HL("FS")
"RTN","XUPSB01",38,0)
 .S STF=$$STF^PRSMPI(PIEN,.HL,"2,3,5,6,10,11") Q:+STF=-1
"RTN","XUPSB01",39,0)
 .S HLA("HLS",1)=EVN
"RTN","XUPSB01",40,0)
 .S HLA("HLS",2)=STF
"RTN","XUPSB01",41,0)
 ;
"RTN","XUPSB01",42,0)
 I $D(HLA("HLS")) D
"RTN","XUPSB01",43,0)
 .;SEND VIA HLO
"RTN","XUPSB01",44,0)
 .;LINK IS HARD SET IN PROTOCOL AT THIS POINT
"RTN","XUPSB01",45,0)
 .S TIEN=XUPSIEN
"RTN","XUPSB01",46,0)
 .I $L(TIEN)<3 S TIEN=0_TIEN I $L(TIEN)<3 S TIEN=0_TIEN
"RTN","XUPSB01",47,0)
 .S HLP("SEQUENCE QUEUE")="XUPS B01 B02 "_$E(TIEN,$L(TIEN)-3,$L(TIEN))
"RTN","XUPSB01",48,0)
 .S HLP("QUEUE")="XUPS B01 B02 "_$E(TIEN,$L(TIEN)-3,$L(TIEN))
"RTN","XUPSB01",49,0)
 .I '$$PATCH^XPDUTL("HL*1.6*134") S HLRESLT=$$EN^HLOCNRT(XUPS,"LM",.HLP)
"RTN","XUPSB01",50,0)
 .I $$PATCH^XPDUTL("HL*1.6*134") S HLRESLT=$$EN^HLOCNRT(XUPS,"LM",.HLP,"",.MHLOMSG)
"RTN","XUPSB01",51,0)
 .D KILL^HLTRANS
"RTN","XUPSB01",52,0)
 Q
"RTN","XUPSB01",53,0)
 ;
"RTN","XUPSB01",54,0)
B01AP ;APP ACK PROCEES FOR B01 for NEW PERSON
"RTN","XUPSB01",55,0)
 ;PARSE BACK TO ORIGINAL MESSAGE TO GET 'WHO' we are triggering B02 for
"RTN","XUPSB01",56,0)
 I '$$STARTMSG^HLOPRS(.HLMSTATE,HLMSGIEN,.HDR) D  Q  ;COULDN'T GET MESSAGE, DO WHAT?
"RTN","XUPSB01",57,0)
 .;NOT SURE WHAT WE ARE DOING HERE
"RTN","XUPSB01",58,0)
 ; can successfully get message
"RTN","XUPSB01",59,0)
 S HL("ETN")=HDR("EVENT"),HL("Q")="""""",HL("FS")=HDR("FIELD SEPARATOR")
"RTN","XUPSB01",60,0)
 S HL("SFN")=HDR("SENDING FACILITY",1)_HDR("COMPONENT SEPARATOR")_HDR("SENDING FACILITY",2)_HDR("COMPONENT SEPARATOR")_HDR("SENDING FACILITY",3)
"RTN","XUPSB01",61,0)
 S HL("ECH")=HDR("COMPONENT SEPARATOR")_HDR("REPETITION SEPARATOR")_HDR("ESCAPE CHARACTER")_HDR("SUBCOMPONENT SEPARATOR")
"RTN","XUPSB01",62,0)
 F  Q:'$$HLNEXT^HLOMSG(.HLMSTATE,.SEG)  D
"RTN","XUPSB01",63,0)
 .S SG=$E(SEG(1),1,3)
"RTN","XUPSB01",64,0)
 .I SG="MSA" S MSG=SEG(1) D MSA(.MSG,.ARRAY,.HL,.HDR)
"RTN","XUPSB01",65,0)
 ;set the new enumeration competed date/time field
"RTN","XUPSB01",66,0)
 ;
"RTN","XUPSB01",67,0)
 Q
"RTN","XUPSB01",68,0)
MSA(MSG,ARRAY,HL,HDR) ;
"RTN","XUPSB01",69,0)
 N EXIT,ACKID,TMP,SEG,SG,HDR2,HLMST2,ERR,RSLT,ARRAY2,MSG2,ERROR,TMP,ARR,RES,FIND,WHO,TXT
"RTN","XUPSB01",70,0)
 S EXIT=0,ACKID=$G(HLMSGIEN) K HLMST2
"RTN","XUPSB01",71,0)
 S TMP=$$STARTMSG^HLOPRS(.HLMST2,HLMSTATE("ACK TO IEN"),.HDR2)
"RTN","XUPSB01",72,0)
 S HL("ETN")=HDR2("EVENT"),HL("Q")="""""",HL("FS")=HDR2("FIELD SEPARATOR")
"RTN","XUPSB01",73,0)
 S HL("SFN")=HDR2("RECEIVING FACILITY",1)_HDR2("COMPONENT SEPARATOR")_HDR2("RECEIVING FACILITY",2)_HDR2("COMPONENT SEPARATOR")_HDR2("RECEIVING FACILITY",3)  ;WHO THE MESSAGE WENT TO ORIGINALLY
"RTN","XUPSB01",74,0)
 S HL("ECH")=HDR2("COMPONENT SEPARATOR")_HDR2("REPETITION SEPARATOR")_HDR2("ESCAPE CHARACTER")_HDR2("SUBCOMPONENT SEPARATOR")
"RTN","XUPSB01",75,0)
 N SEQ2,LASTID,IDCNT,IDS,CNT,ACNT,ID,NPIEN,PIEN
"RTN","XUPSB01",76,0)
 S NPIEN="",PIEN=""
"RTN","XUPSB01",77,0)
 I TMP D
"RTN","XUPSB01",78,0)
 .F  Q:'$$HLNEXT^HLOMSG(.HLMST2,.SEG)  D
"RTN","XUPSB01",79,0)
 ..S SG=$E(SEG(1),1,3)
"RTN","XUPSB01",80,0)
 ..I SG="STF" D
"RTN","XUPSB01",81,0)
 ...;NEED SEQ 2 fields
"RTN","XUPSB01",82,0)
 ...S SEQ2=$P(SG,HDR("FIELD SEPARATOR"),3)
"RTN","XUPSB01",83,0)
 ...S IDCNT=1,IDS="" F  S IDS=$P(SEQ2,HDR("REPETITION SEPARATOR"),IDCNT) Q:IDS=""  D
"RTN","XUPSB01",84,0)
 ....S IEN=$P(IDS,HDR("COMPONENT SEPARATOR"),1)
"RTN","XUPSB01",85,0)
 ....S AA=$P($P(IDS,HDR("COMPONENT SEPARATOR"),4),HDR("SUBCOMPONENT SEPARATOR"),1)
"RTN","XUPSB01",86,0)
 ....S TYPE=$P(IDS,HDR("COMPONENT SEPARATOR"),5)
"RTN","XUPSB01",87,0)
 ....S FAC=$P($P(IDS,HDR("COMPONENT SEPARATOR"),6),HDR("SUBCOMPONENT SEPARATOR"),2)
"RTN","XUPSB01",88,0)
 ....I AA="USVHA",TYPE="PN" S NPIEN=IEN
"RTN","XUPSB01",89,0)
 ....I AA="USVHA",TYPE="EI" S PIEN=IEN
"RTN","XUPSB01",90,0)
 ....S IDCNT=IDCNT+1
"RTN","XUPSB01",91,0)
 .;
"RTN","XUPSB01",92,0)
 .I $P(MSG,HDR("FIELD SEPARATOR"),2)'="AA" D
"RTN","XUPSB01",93,0)
 ..;NOT A SUCCESSFULLY PROCESSED MSG -- NOT AA -- LOG EXCEPTION?
"RTN","XUPSB01",94,0)
 .I $P(MSG,HDR("FIELD SEPARATOR"),2)="AA" D
"RTN","XUPSB01",95,0)
 ..;SET enumeration complete date/time field
"RTN","XUPSB01",96,0)
 ..;which file? 200 or 450
"RTN","XUPSB01",97,0)
 ..I $G(NPIEN)'="",HDR("SENDING APPLICATION")["XUPS" D
"RTN","XUPSB01",98,0)
 ...;FILE 200
"RTN","XUPSB01",99,0)
 ...D NOW^%DTC
"RTN","XUPSB01",100,0)
 ...S FDA(200,NPIEN_",",901)=%
"RTN","XUPSB01",101,0)
 ...D FILE^DIE("E","FDA","PRSERR")
"RTN","XUPSB01",102,0)
 ..I $G(PIEN)'="",HDR("SENDING APPLICATION")["PRS" D
"RTN","XUPSB01",103,0)
 ...;FILE 450
"RTN","XUPSB01",104,0)
 ...D NOW^%DTC
"RTN","XUPSB01",105,0)
 ...S FDA(450,PIEN_",",901)=%
"RTN","XUPSB01",106,0)
 ...D FILE^DIE("E","FDA","PRSERR")
"RTN","XUPSB01",107,0)
 ..;trigger PMU-B02 update message (task)
"RTN","XUPSB01",108,0)
 ..S ZTSAVE("CONTEXT")="UPDATE"
"RTN","XUPSB01",109,0)
 ..I HDR("SENDING APPLICATION")["XUPS" S ZTSAVE("NPIEN")=NPIEN
"RTN","XUPSB01",110,0)
 ..I HDR("SENDING APPLICATION")["PRSMPI" S ZTSAVE("PIEN")=PIEN
"RTN","XUPSB01",111,0)
 ..S ZTRTN="TASK^XUPSB01",ZTDESC="B02 HLO to MPI for NPIEN= "_$G(ZTSAVE("NPIEN"))_" PIEN= "_$G(ZTSAVE("PIEN"))
"RTN","XUPSB01",112,0)
 ..S ZTIO="",ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,0,0,1,0)
"RTN","XUPSB01",113,0)
 ..D ^%ZTLOAD
"RTN","XUPSB01",114,0)
 ..K ZTRTN,ZTDESC,ZTIO,ZTSAVE,ZTDTH,ZTREQ
"RTN","XUPSB01",115,0)
 ;
"RTN","XUPSB01",116,0)
 Q
"RTN","XUPSB01",117,0)
 ;
"RTN","XUPSB01",118,0)
B02AP ;APP ACK PROCESS FOR B02 for NEW PERSON
"RTN","XUPSB01",119,0)
 ;nothing needed at this point
"RTN","XUPSB01",120,0)
 Q
"RTN","XUPSB01",121,0)
 ;
"RTN","XUPSB01",122,0)
STF(SG,HDR) ;STF TESTER
"RTN","XUPSB01",123,0)
 ;NEED SEQ 2 fields
"RTN","XUPSB01",124,0)
 S SEQ2=$P(SG,HDR("FIELD SEPARATOR"),3)
"RTN","XUPSB01",125,0)
 S IDCNT=1,IDS="" F  S IDS=$P(SEQ2,HDR("REPETITION SEPARATOR"),IDCNT) Q:IDS=""  D
"RTN","XUPSB01",126,0)
 .S IEN=$P(IDS,HDR("COMPONENT SEPARATOR"),1)
"RTN","XUPSB01",127,0)
 .S AA=$P($P(IDS,HDR("COMPONENT SEPARATOR"),4),HDR("SUBCOMPONENT SEPARATOR"),1)
"RTN","XUPSB01",128,0)
 .S TYPE=$P(IDS,HDR("COMPONENT SEPARATOR"),5)
"RTN","XUPSB01",129,0)
 .S FAC=$P($P(IDS,HDR("COMPONENT SEPARATOR"),6),HDR("SUBCOMPONENT SEPARATOR"),2)
"RTN","XUPSB01",130,0)
 .I AA="USVHA",TYPE="PN" S NPIEN=IEN
"RTN","XUPSB01",131,0)
 .I AA="USVHA",TYPE="EI" S PIEN=IEN
"RTN","XUPSB01",132,0)
 .S IDCNT=IDCNT+1
"RTN","XUPSB01",133,0)
 ;
"RTN","XUPSB01",134,0)
 ;SET enumeration complete date/time field
"RTN","XUPSB01",135,0)
 ;which file? 200 or 450
"RTN","XUPSB01",136,0)
UP I $G(NPIEN)'="",HDR("SENDING APPLICATION")="XUPS APP" D
"RTN","XUPSB01",137,0)
 .;FILE 200
"RTN","XUPSB01",138,0)
 .D NOW^%DTC
"RTN","XUPSB01",139,0)
 .S FDA(200,NPIEN_",",901)=%
"RTN","XUPSB01",140,0)
 .D FILE^DIE("E","FDA","PRSERR")
"RTN","XUPSB01",141,0)
 I $G(PIEN)'="",HDR("SENDING APPLICATION")="PRSMPI APP" D
"RTN","XUPSB01",142,0)
 .;FILE 450
"RTN","XUPSB01",143,0)
 .D NOW^%DTC
"RTN","XUPSB01",144,0)
 .S FDA(450,PIEN_",",901)=%
"RTN","XUPSB01",145,0)
 .D FILE^DIE("E","FDA","PRSERR")
"RTN","XUPSB01",146,0)
 ;trigger PMU-B02 update message (task)
"RTN","XUPSB01",147,0)
 S ZTSAVE("CONTEXT")="UPDATE"
"RTN","XUPSB01",148,0)
 I HDR("SENDING APPLICATION")="XUPS APP" S ZTSAVE("NPIEN")=NPIEN
"RTN","XUPSB01",149,0)
 I HDR("SENDING APPLICATION")="PRSMPI APP" S ZTSAVE("PIEN")=PIEN
"RTN","XUPSB01",150,0)
 S ZTRTN="TASK^XUPSB01",ZTDESC="B02 HLO to MPI for NPIEN= "_$G(ZTSAVE("NPIEN"))_" PIEN= "_$G(ZTSAVE("PIEN"))
"RTN","XUPSB01",151,0)
 S ZTIO="",ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,0,0,1,0)
"RTN","XUPSB01",152,0)
 D ^%ZTLOAD
"RTN","XUPSB01",153,0)
 ;K ZTRTN,ZTDESC,ZTIO,ZTSAVE,ZTDTH,ZTREQ
"RTN","XUPSB01",154,0)
 Q
"RTN","XUPSGS")
0^3^B37121734^n/a
"RTN","XUPSGS",1,0)
XUPSGS ;ALB/CMC - GET, COMPARE/SET FOR FILE 200;DEC 31 2008
"RTN","XUPSGS",2,0)
 ;;8.0;KERNEL;**551**;Jul 10, 1995;Build 2
"RTN","XUPSGS",3,0)
 ;
"RTN","XUPSGS",4,0)
 Q
"RTN","XUPSGS",5,0)
GET(EN,ARRAY) ;GET DATA FROM FILE 200 AND SET INTO ARRAY
"RTN","XUPSGS",6,0)
 ;EN is the internal entry for the person in file 200
"RTN","XUPSGS",7,0)
 ;returned is 0 or -1^error message
"RTN","XUPSGS",8,0)
 ;if returned value is 0 then ARRAY will also be defined with the data values
"RTN","XUPSGS",9,0)
 N CNT,COR,NAME2,NAME
"RTN","XUPSGS",10,0)
 I 'EN S ERROR="-1^Invalid parameter - no correlation ien passed." Q ERROR
"RTN","XUPSGS",11,0)
 M COR(EN)=^VA(200,EN)
"RTN","XUPSGS",12,0)
 I '$D(COR(EN)) S ERROR="-1^Correlation doesn't exist." Q ERROR
"RTN","XUPSGS",13,0)
 S ARRAY("SourceSystemIEN")=$P($$SITE^VASITE(),"^") ;facility ien
"RTN","XUPSGS",14,0)
 S ARRAY("SourceSystemID")=$P($$SITE^VASITE(),"^",3) ;facility station number
"RTN","XUPSGS",15,0)
 S ARRAY("SourceID")=EN ;duz
"RTN","XUPSGS",16,0)
 S NAME2=$P(COR(EN,0),"^")
"RTN","XUPSGS",17,0)
 S NAME=$$HLNAME^XLFNAME(.NAME2,"","^")
"RTN","XUPSGS",18,0)
 S ARRAY("Surname")=$P(NAME,"^") ;surname
"RTN","XUPSGS",19,0)
 S ARRAY("FirstName")=$P(NAME,"^",2) ;first name
"RTN","XUPSGS",20,0)
 S ARRAY("MiddleName")=$P(NAME,"^",3) ;middle name
"RTN","XUPSGS",21,0)
 S ARRAY("Prefix")=$$GET1^DIQ(200,EN,"NAME COMPONENTS:PREFIX") ;prefix NOT PART OF .01, get from components file
"RTN","XUPSGS",22,0)
 S ARRAY("Suffix")=$P(NAME,"^",4) ;suffix
"RTN","XUPSGS",23,0)
 S ARRAY("DOB")=$P($G(COR(EN,1)),"^",3) ;dob
"RTN","XUPSGS",24,0)
 S ARRAY("Gender")=$P($G(COR(EN,1)),"^",2) ;gender
"RTN","XUPSGS",25,0)
 S ARRAY("SSN")=$P($G(COR(EN,1)),"^",9) ;ssn
"RTN","XUPSGS",26,0)
 S ARRAY("ResAddL1")=$P($G(COR(EN,.11)),"^") ;street line 1
"RTN","XUPSGS",27,0)
 S ARRAY("ResAddL2")=$P($G(COR(EN,.11)),"^",2) ;street line 2
"RTN","XUPSGS",28,0)
 S ARRAY("ResAddL3")=$P($G(COR(EN,.11)),"^",3) ;street line 3
"RTN","XUPSGS",29,0)
 S ARRAY("ResAddCity")=$P($G(COR(EN,.11)),"^",4) ;city
"RTN","XUPSGS",30,0)
 S ARRAY("ResAddState")=$P($G(^DIC(5,+$P($G(COR(EN,.11)),"^",5),0)),"^",2) ;state
"RTN","XUPSGS",31,0)
 S ARRAY("ResAddZip4")=$P($G(COR(EN,.11)),"^",6) ;zip
"RTN","XUPSGS",32,0)
 S ARRAY("ResPhone")=$P($G(COR(EN,.13)),"^") ;HOME phone number
"RTN","XUPSGS",33,0)
 S ARRAY("NPI")=$P($G(^VA(200,EN,"NPI")),"^") ;NPI
"RTN","XUPSGS",34,0)
 S ARRAY("PAID")=$P($G(^VA(200,EN,450)),"^") ;PAID FILE IEN
"RTN","XUPSGS",35,0)
 S ARRAY("EnumerateStart")=$P($G(^VA(200,EN,"MPI")),"^") ;Enumeration Initiated
"RTN","XUPSGS",36,0)
 S ARRAY("EnumerateComp")=$P($G(^VA(200,EN,"MPI")),"^",2) ;Enumeration Completed
"RTN","XUPSGS",37,0)
 Q 0
"RTN","XUPSGS",38,0)
 ;
"RTN","XUPSGS",39,0)
UPD(EN,ARRAY,ERROR) ;update New Person entry EN
"RTN","XUPSGS",40,0)
 ;  Input: EN is the IEN in file 200 to be updated
"RTN","XUPSGS",41,0)
 ;  ARRAY is an array with the values to be updated
"RTN","XUPSGS",42,0)
 ;  ERROR is an array that will return any error messages for any field that fails to update
"RTN","XUPSGS",43,0)
 ;  Returns:  -1^error text if unsuccessful
"RTN","XUPSGS",44,0)
 ;            0 if OK - doesn't mean ERROR isn't defined
"RTN","XUPSGS",45,0)
 ;
"RTN","XUPSGS",46,0)
 N CNT,COR,ECNT,FDA,FLDCNT,IDCNT,IEN,MIEN,NAMEDIT,MPIERR,RET,TFUPDATE
"RTN","XUPSGS",47,0)
 K ERROR ;clean up in case someone passed it in
"RTN","XUPSGS",48,0)
 I 'EN S ERROR="-1^Invalid parameter - no ien passed." Q ERROR
"RTN","XUPSGS",49,0)
 ;
"RTN","XUPSGS",50,0)
 L +^VA(200,EN):600 ;lock New Person file entry
"RTN","XUPSGS",51,0)
 ;
"RTN","XUPSGS",52,0)
 M COR(EN)=^VA(200,EN) ;get current New Person file data
"RTN","XUPSGS",53,0)
 ;
"RTN","XUPSGS",54,0)
 D BLDFDA(.ARRAY,.COR,.FDA) ;build the fda array to update NEW PERSON file entry
"RTN","XUPSGS",55,0)
 ;
"RTN","XUPSGS",56,0)
 I $D(FDA) D FILE^DIE("E","FDA","XUERR") I $D(XUERR("DIERR")) D LOGERR(.XUERR)
"RTN","XUPSGS",57,0)
 ;file correlation data and capture any text of errors
"RTN","XUPSGS",58,0)
 I $G(ECNT),(ECNT=FLDCNT) S ERROR="-1^Unable to begin updating field(s) in correlation for ien # "_IEN_"." L -^VA(200,EN) Q ERROR ;if no edits occurred then return error condition
"RTN","XUPSGS",59,0)
 ;
"RTN","XUPSGS",60,0)
 L -^VA(200,EN) ;unlock New Person file entry
"RTN","XUPSGS",61,0)
 ;
"RTN","XUPSGS",62,0)
 Q 0 ;no problems updating New Person file entry
"RTN","XUPSGS",63,0)
 ;
"RTN","XUPSGS",64,0)
LOGERR(XUERR) ;build error array from fileman's error array
"RTN","XUPSGS",65,0)
 N ECNT,E
"RTN","XUPSGS",66,0)
 S ECNT=1,E=0
"RTN","XUPSGS",67,0)
 F  S E=$O(XUERR("DIERR",E)) Q:'E  I $D(XUERR("DIERR",1,"TEXT",1)) S ECNT=ECNT+1,ERROR(ECNT)=$G(XUERR("DIERR",E,"TEXT",1)) ;capture text of errors
"RTN","XUPSGS",68,0)
 Q
"RTN","XUPSGS",69,0)
 ;
"RTN","XUPSGS",70,0)
BLDFDA(NEWCOR,COR,FDA)   ;build the FDA array to create the correlation
"RTN","XUPSGS",71,0)
 ;will only create FDA if existing data is different from updated data
"RTN","XUPSGS",72,0)
 K FDA
"RTN","XUPSGS",73,0)
 ;
"RTN","XUPSGS",74,0)
 I $G(NEWCOR("Surname")) S NEWCOR("NAME")=$G(NEWCOR("Surname"))_","_$G(NEWCOR("FirstName"))_" "_$G(NEWCOR("MiddleName"))_" "_$G(NEWCOR("Suffix")) D
"RTN","XUPSGS",75,0)
 .I $G(NEWCOR("NAME"))'="",$G(NEWCOR("NAME"))'=$P($G(COR(EN,0)),"^") S FDA(200,EN_",",.01)=NEWCOR("NAME")
"RTN","XUPSGS",76,0)
 ;
"RTN","XUPSGS",77,0)
 I $G(NEWCOR("DOB"))'="",(NEWCOR("DOB")'=$P($G(COR(EN,1)),"^",3)),$S(NEWCOR("DOB")="@"&($P($G(COR(EN,1)),"^",3)=""):0,1:1) D
"RTN","XUPSGS",78,0)
 .S FDA(200,EN_",",5)=$$FMTE^XLFDT(NEWCOR("DOB")) ;dob
"RTN","XUPSGS",79,0)
 ;
"RTN","XUPSGS",80,0)
 I $G(NEWCOR("Gender"))'="",(NEWCOR("Gender")'=$P($G(COR(EN,1)),"^",2)),$S(NEWCOR("Gender")="@"&($P($G(COR(EN,1)),"^",2)=""):0,1:1) D
"RTN","XUPSGS",81,0)
 .S FDA(200,EN_",",4)=NEWCOR("Gender") ;gender
"RTN","XUPSGS",82,0)
 ;
"RTN","XUPSGS",83,0)
 I $G(NEWCOR("SSN"))'="",(NEWCOR("SSN")'=$P($G(COR(EN,1)),"^",9)),$S(NEWCOR("SSN")="@"&($P($G(COR(EN,1)),"^",9)=""):0,1:1) D
"RTN","XUPSGS",84,0)
 .S FDA(200,EN_",",9)=NEWCOR("SSN") ;ssn
"RTN","XUPSGS",85,0)
 ;
"RTN","XUPSGS",86,0)
 I $G(NEWCOR("ResAddL1"))'="",(NEWCOR("ResAddL1")'=$P($G(COR(EN,.11)),"^")),$S(NEWCOR("ResAddL1")="@"&($P($G(COR(EN,.11)),"^")=""):0,1:1) D
"RTN","XUPSGS",87,0)
 .S FDA(200,EN_",",.111)=NEWCOR("ResAddL1") ;street line 1
"RTN","XUPSGS",88,0)
 I $G(NEWCOR("ResAddL2"))'="",(NEWCOR("ResAddL2")'=$P($G(COR(EN,.11)),"^",2)),$S(NEWCOR("ResAddL2")="@"&($P($G(COR(EN,.11)),"^",2)=""):0,1:1) D
"RTN","XUPSGS",89,0)
 .S FDA(200,EN_",",.112)=NEWCOR("ResAddL2") ;street line 2
"RTN","XUPSGS",90,0)
 I $G(NEWCOR("ResAddL3"))'="",(NEWCOR("ResAddL3")'=$P($G(COR(EN,.11)),"^",3)),$S(NEWCOR("ResAddL3")="@"&($P($G(COR(EN,.11)),"^",3)=""):0,1:1) D
"RTN","XUPSGS",91,0)
 .S FDA(200,IEN_",",.113)=NEWCOR("ResAddL3") ;street line 3
"RTN","XUPSGS",92,0)
 I $G(NEWCOR("ResAddCity"))'="",(NEWCOR("ResAddCity")'=$P($G(COR(EN,.11)),"^",4)),$S(NEWCOR("ResAddCity")="@"&($P($G(COR(EN,.11)),"^",4)=""):0,1:1) D
"RTN","XUPSGS",93,0)
 .S FDA(200,EN_",",.114)=NEWCOR("ResAddCity") ;city
"RTN","XUPSGS",94,0)
 I $G(NEWCOR("ResAddState"))'="",(NEWCOR("ResAddState")'=$P($G(^DIC(5,+$P($G(COR(EN,.11)),"^",5),0)),"^",2)),$S(NEWCOR("ResAddState")="@"&($P($G(COR(EN,.11)),"^",5)=""):0,1:1) D
"RTN","XUPSGS",95,0)
 .N RESSTIEN S RESSTIEN=NEWCOR("ResAddState"),RESSTIEN=$S(RESSTIEN="@":"@",RESSTIEN="FG":$O(^DIC(5,"B","FOREIGN COUNTRY",0)),RESSTIEN="OT":$O(^DIC(5,"B","OTHER",0)),RESSTIEN="EU":$O(^DIC(5,"B","EUROPE",0)),1:$O(^DIC(5,"C",RESSTIEN,0)))
"RTN","XUPSGS",96,0)
 .S FDA(200,EN_",",.115)=$S(RESSTIEN="@":"@",1:"`"_RESSTIEN) ;state
"RTN","XUPSGS",97,0)
 I $G(NEWCOR("ResAddZip4"))'="",(NEWCOR("ResAddZip4")'=$P($G(COR(EN,.11)),"^",6)),$S(NEWCOR("ResAddZip4")="@"&($P($G(COR(EN,.11)),"^",6)=""):0,1:1) D
"RTN","XUPSGS",98,0)
 .S FDA(200,EN_",",.116)=NEWCOR("ResAddZip4") ;zip
"RTN","XUPSGS",99,0)
 ;
"RTN","XUPSGS",100,0)
 I $G(NEWCOR("ResPhone"))'="",(NEWCOR("ResPhone")'=$P($G(COR(EN,.13)),"^")),$S(NEWCOR("ResPhone")="@"&($P($G(COR(EN,.13)),"^")=""):0,1:1) D
"RTN","XUPSGS",101,0)
 .S FDA(200,EN_",",.131)=NEWCOR("ResPhone") ;phone number
"RTN","XUPSGS",102,0)
 Q
"RTN","XUPSHL7B")
0^4^B2863425^n/a
"RTN","XUPSHL7B",1,0)
XUPSHL7B ;ALB/CMC - SEGMENT BUILDING UTILTIES ;8/9/2010
"RTN","XUPSHL7B",2,0)
 ;;8.0;KERNEL;**551**;Jul 10, 1995;Build 2
"RTN","XUPSHL7B",3,0)
 ;
"RTN","XUPSHL7B",4,0)
 ;Copied from VAFHLU - 9/5/2008 BPFO/JRP
"RTN","XUPSHL7B",5,0)
 ;
"RTN","XUPSHL7B",6,0)
 Q
"RTN","XUPSHL7B",7,0)
MAKEIT(SEGNAME,SEGARR,FIRST245,ADTLNODE)        ;Make segment
"RTN","XUPSHL7B",8,0)
 ;Input  : SEGNAME - Name of segment being built
"RTN","XUPSHL7B",9,0)
 ;         SEGARR - Array continue segment data
"RTN","XUPSHL7B",10,0)
 ;           SEGARR(X) = Value for sequence N
"RTN","XUPSHL7B",11,0)
 ;           SEGARR(X,Y) = Repetition Y of sequence X
"RTN","XUPSHL7B",12,0)
 ;           SEGARR(X,Y,Z) = Component Z of repetition Y of sequence X
"RTN","XUPSHL7B",13,0)
 ;           SEGARR(X,Y,Z,A) = Subcomponent A of component Z of
"RTN","XUPSHL7B",14,0)
 ;                             repetition Y of sequence X
"RTN","XUPSHL7B",15,0)
 ;         FIRST245 - Variable to return first 245 characters of segment in
"RTN","XUPSHL7B",16,0)
 ;         ADTLNODE - Array for continuation nodes
"RTN","XUPSHL7B",17,0)
 ;Assumed: HL7 encoding chars (output of INIT^HLFNC2 or INIT^HLTRANS)
"RTN","XUPSHL7B",18,0)
 ;Output : FIRST245 = First 245 characters of segment
"RTN","XUPSHL7B",19,0)
 ;         ADTLNODE(1..n) = Continuation of segment
"RTN","XUPSHL7B",20,0)
 ;Notes  : Validity & existance of input is assumed
"RTN","XUPSHL7B",21,0)
 ;       : Assumes no single element contained in SEGARR is greater
"RTN","XUPSHL7B",22,0)
 ;         than 245 characters
"RTN","XUPSHL7B",23,0)
 ;       : Continuation nodes are added at element boundaries
"RTN","XUPSHL7B",24,0)
 ;
"RTN","XUPSHL7B",25,0)
 ;Declare variables
"RTN","XUPSHL7B",26,0)
 N SUB1,SUB2,SUB3,SUB4,CS,RS,FS,SS,OUTREF,X,X1,Y
"RTN","XUPSHL7B",27,0)
 K FIRST245,ADTLNODE
"RTN","XUPSHL7B",28,0)
 ;Get HL7 separators (attempts to use HL() array)
"RTN","XUPSHL7B",29,0)
 S FS=$S($D(HL("FS")):HL("FS"),1:HLFS)
"RTN","XUPSHL7B",30,0)
 S X=$S($D(HL("ECH")):HL("ECH"),1:HLECH)
"RTN","XUPSHL7B",31,0)
 S CS=$E(X,1),RS=$E(X,2),SS=$E(X,4)
"RTN","XUPSHL7B",32,0)
 ;Build output
"RTN","XUPSHL7B",33,0)
 S OUTREF=$NA(FIRST245)
"RTN","XUPSHL7B",34,0)
 S @OUTREF=SEGNAME
"RTN","XUPSHL7B",35,0)
 I '$O(SEGARR(0)) S X="",Y=FS D ADD Q
"RTN","XUPSHL7B",36,0)
 F SUB1=1:1:$O(SEGARR(""),-1) D
"RTN","XUPSHL7B",37,0)
 .S X=$G(SEGARR(SUB1)),Y=FS D ADD
"RTN","XUPSHL7B",38,0)
 .F SUB2=1:1:$O(SEGARR(SUB1,""),-1) D
"RTN","XUPSHL7B",39,0)
 ..S X=$G(SEGARR(SUB1,SUB2)),Y=$S(SUB2=1:"",1:RS) D ADD
"RTN","XUPSHL7B",40,0)
 ..F SUB3=1:1:$O(SEGARR(SUB1,SUB2,""),-1) D
"RTN","XUPSHL7B",41,0)
 ...S X=$G(SEGARR(SUB1,SUB2,SUB3)),Y=$S(SUB3=1:"",1:CS) D ADD
"RTN","XUPSHL7B",42,0)
 ...F SUB4=1:1:$O(SEGARR(SUB1,SUB2,SUB3,""),-1) D
"RTN","XUPSHL7B",43,0)
 ....S X=$G(SEGARR(SUB1,SUB2,SUB3,SUB4)),Y=$S(SUB4=1:"",1:SS) D ADD
"RTN","XUPSHL7B",44,0)
 Q
"RTN","XUPSHL7B",45,0)
ADD ;Add to output - account for continuation node
"RTN","XUPSHL7B",46,0)
 I ($L(@OUTREF)+$L(X)+1)>245 D
"RTN","XUPSHL7B",47,0)
 .S X1=1+$O(ADTLNODE(""),-1)
"RTN","XUPSHL7B",48,0)
 .S OUTREF=$NA(ADTLNODE(X1))
"RTN","XUPSHL7B",49,0)
 .S @OUTREF=""
"RTN","XUPSHL7B",50,0)
 S @OUTREF=@OUTREF_Y_X
"RTN","XUPSHL7B",51,0)
 Q
"RTN","XUPSORG")
0^5^B2758347^n/a
"RTN","XUPSORG",1,0)
XUPSORG ;ALB/CMC - Build ORG segment;Aug 6, 2010
"RTN","XUPSORG",2,0)
 ;;8.0;KERNEL;**551**;Jul 10, 1995;Build 2
"RTN","XUPSORG",3,0)
EN(XUDUZ,HL,XUORG) ; ORG SEGMENT FOR VISITOR FIELDS 1 AND 5
"RTN","XUPSORG",4,0)
 ;INPUT:  XUDUZ - IEN in file 200
"RTN","XUPSORG",5,0)
 ;HL array variables
"RTN","XUPSORG",6,0)
 ;OUTPUT: XUORG CONTAINING ORG SEGMENT(S)
"RTN","XUPSORG",7,0)
 ;XUORG=-1^ERROR MESSAGE IF CAN'T BUILD ORG SEGMENT
"RTN","XUPSORG",8,0)
 N NUM
"RTN","XUPSORG",9,0)
 K XUORG
"RTN","XUPSORG",10,0)
 I XUDUZ=""!('$D(HL)) S XUORG="-1^MISSING PARAMETERS" G QUIT ;missing parameter
"RTN","XUPSORG",11,0)
 ;
"RTN","XUPSORG",12,0)
 S NUM=1
"RTN","XUPSORG",13,0)
 I '$D(^VA(200,XUDUZ,8910)) S $P(XUORG(NUM),HL("FS"),1)="ORG"_HL("FS")_NUM_HL("FS") G QUIT
"RTN","XUPSORG",14,0)
 ;have visitor records
"RTN","XUPSORG",15,0)
 N IEN,COMP,SUBCOMP,VIS,NODE
"RTN","XUPSORG",16,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4)
"RTN","XUPSORG",17,0)
 S IEN=0 F  S IEN=$O(^VA(200,XUDUZ,8910,IEN)) Q:'IEN  D
"RTN","XUPSORG",18,0)
 .S NODE=$G(^VA(200,XUDUZ,8910,IEN,0))
"RTN","XUPSORG",19,0)
 .;VISITOR DATA WILL BE: 
"RTN","XUPSORG",20,0)
 .;DUZ AT HOME SITE (0;3)^<CHECK DIGIT>^<CHECK DIGIT SCHEME>^ASSIGNING AUTHORTY^ID TYPE CODE^
"RTN","XUPSORG",21,0)
 .;ASSIGNING FACILITY^EFFECTIVE DATE^EXPIRATION DATE (TODAY)
"RTN","XUPSORG",22,0)
 .S $P(XUORG(NUM),HL("FS"),1)="ORG"_HL("FS")_NUM_HL("FS")
"RTN","XUPSORG",23,0)
 .S VIS=$P(NODE,"^",3)_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"PN"_COMP
"RTN","XUPSORG",24,0)
 .S VIS=VIS_"VA FACILITY ID"_SUBCOMP_$P(NODE,"^")_SUBCOMP_"L"_COMP_COMP
"RTN","XUPSORG",25,0)
 .S $P(XUORG(NUM),HL("FS"),6)=VIS
"RTN","XUPSORG",26,0)
 .S NUM=NUM+1
"RTN","XUPSORG",27,0)
QUIT Q
"RTN","XUPSPRA")
0^6^B921249^n/a
"RTN","XUPSPRA",1,0)
XUPSPRA ;ALB/CMC - Build PRA segment;Aug 6, 2010
"RTN","XUPSPRA",2,0)
 ;;8.0;KERNEL;**551**;Jul 10, 1995;Build 2
"RTN","XUPSPRA",3,0)
EN(XUPSIEN,XUPSSTR,HL) ;
"RTN","XUPSPRA",4,0)
 ;XUPSIEN - New Person Internal Entry Number
"RTN","XUPSPRA",5,0)
 ;XUPSSTR - sequence numbers which should be used, only field 6 for DEA# at this point used
"RTN","XUPSPRA",6,0)
 ;HL - hl7 array variables
"RTN","XUPSPRA",7,0)
 ;RETURN:  PRA segment returned or -1^error message
"RTN","XUPSPRA",8,0)
 ;
"RTN","XUPSPRA",9,0)
 N XUPSREC,NUM
"RTN","XUPSPRA",10,0)
 I XUPSIEN=""!(XUPSSTR="")!('$D(HL)) S XUPSREC="-1^Missing Parameters" G QUIT ;missing parameter
"RTN","XUPSPRA",11,0)
 S $P(XUPSREC,HL("FS"),1)="PRA" ;sequence 1 set to segment type
"RTN","XUPSPRA",12,0)
 ;DEA# FIELD 6
"RTN","XUPSPRA",13,0)
 S NUM=$P($G(^VA(200,XUPSIEN,"PS")),"^",2)
"RTN","XUPSPRA",14,0)
 I NUM="" S NUM=HL("Q")
"RTN","XUPSPRA",15,0)
 S $P(XUPSREC,HL("FS"),7)=NUM
"RTN","XUPSPRA",16,0)
QUIT Q XUPSREC
"RTN","XUPSSTF")
0^2^B26190804^n/a
"RTN","XUPSSTF",1,0)
XUPSSTF ;ALB/CMC - Build STF segment;Aug, 6 2010
"RTN","XUPSSTF",2,0)
 ;;8.0;KERNEL;**551**;Jul 10, 1995;Build 2
"RTN","XUPSSTF",3,0)
 ;
"RTN","XUPSSTF",4,0)
 Q
"RTN","XUPSSTF",5,0)
EN(XUPSIEN,XUPSSTR,HL,XUPSREC,XUPSSTF) ; -- entry point
"RTN","XUPSSTF",6,0)
 ;Input:
"RTN","XUPSSTF",7,0)
 ;XUPSIEN - New Person Internal Entry Number
"RTN","XUPSSTF",8,0)
 ;XUPSSTR - sequence numbers which should be used (2,3,4,5,6,10,11)
"RTN","XUPSSTF",9,0)
 ;HL - HL array variables from INIT call
"RTN","XUPSSTF",10,0)
 ;Output:
"RTN","XUPSSTF",11,0)
 ;XUPSREC - First 245 characters
"RTN","XUPSSTF",12,0)
 ;XUPSSTF(1..n)=continuation nodes if results > 245 characters
"RTN","XUPSSTF",13,0)
 ;
"RTN","XUPSSTF",14,0)
 N XUPSSUB1,XUPSSUB2,XUPSSUB3,XUPSSUB4,XUPSSSN,XUPSDOB,XUPSPH
"RTN","XUPSSTF",15,0)
 N XUPSNO,XUPSSEX,XUPSNAMC,XUPSNAME,XUPSNAM1,XUPSREP,XUPSVID,XUPSCAT,XUPSNPI,TADDR
"RTN","XUPSSTF",16,0)
 N DA,DIE,DR,XUPSNAM2,XUPSVER,XUPSADD,XUPSADDR,XUPSADD1,XUPSADD2,XUPSI,XUPSSEG,HLFS,COMP,SUBCOMP
"RTN","XUPSSTF",17,0)
 ;
"RTN","XUPSSTF",18,0)
 I '$D(HL) S XUPSREC="-1^missing HL variables" Q
"RTN","XUPSSTF",19,0)
 S HLFS=HL("FS"),COMP=$E(HL("ECH")),HLES=$E(HL("ECH"),2),SUBCOMP=$E(HL("ECH"),4)
"RTN","XUPSSTF",20,0)
 N ARRAY,TMP
"RTN","XUPSSTF",21,0)
 S TMP=$$GET^XUPSGS(XUPSIEN,.ARRAY)
"RTN","XUPSSTF",22,0)
 I '$D(ARRAY) S XUPSREC="-1^No entry" Q
"RTN","XUPSSTF",23,0)
 ;SEQUENCE 2
"RTN","XUPSSTF",24,0)
 N XUPSRCTR
"RTN","XUPSSTF",25,0)
 I XUPSSTR["2," D
"RTN","XUPSSTF",26,0)
 .S (XUPSSUB1,XUPSSUB2,XUPSSUB3)=""
"RTN","XUPSSTF",27,0)
 .S XUPSRCTR=0
"RTN","XUPSSTF",28,0)
 .;DUZ
"RTN","XUPSSTF",29,0)
 .S XUPSSUB1=XUPSIEN_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"PN"_COMP
"RTN","XUPSSTF",30,0)
 .S XUPSSUB1=XUPSSUB1_"VA FACILITY ID"_SUBCOMP_$P($$SITE^VASITE(),"^",3)_SUBCOMP_"L"_COMP_COMP
"RTN","XUPSSTF",31,0)
 .S XUPSRCTR=XUPSRCTR+1
"RTN","XUPSSTF",32,0)
 .S XUPSSEG(2,XUPSRCTR)=XUPSSUB1
"RTN","XUPSSTF",33,0)
 .;SSN
"RTN","XUPSSTF",34,0)
 .S XUPSSUB2=$S(ARRAY("SSN")]"":ARRAY("SSN"),1:HL("Q"))_COMP_COMP_COMP_"USSSA"_SUBCOMP_SUBCOMP_"0363"_COMP_"SS"
"RTN","XUPSSTF",35,0)
 .S XUPSSUB2=XUPSSUB2_COMP_"VA FACILITY ID"_SUBCOMP_$P($$SITE^VASITE(),"^",3)_SUBCOMP_"L"
"RTN","XUPSSTF",36,0)
 .S XUPSRCTR=XUPSRCTR+1
"RTN","XUPSSTF",37,0)
 .S XUPSSEG(2,XUPSRCTR)=XUPSSUB2
"RTN","XUPSSTF",38,0)
 .;NPI
"RTN","XUPSSTF",39,0)
 .S $P(XUPSSUB3,COMP,1)=$S(ARRAY("NPI")]"":ARRAY("NPI"),1:HL("Q"))_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"
"RTN","XUPSSTF",40,0)
 .S XUPSSUB3=XUPSSUB3_COMP_"NPI"_COMP_"VA FACILITY ID"_SUBCOMP_$P($$SITE^VASITE(),"^",3)_SUBCOMP_"L"
"RTN","XUPSSTF",41,0)
 .S XUPSRCTR=XUPSRCTR+1
"RTN","XUPSSTF",42,0)
 .S XUPSSEG(2,XUPSRCTR)=XUPSSUB3
"RTN","XUPSSTF",43,0)
 .;Pointer to PAID
"RTN","XUPSSTF",44,0)
 .S $P(XUPSSUB4,COMP,1)=$S(ARRAY("PAID")]"":ARRAY("PAID"),1:HL("Q"))_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"
"RTN","XUPSSTF",45,0)
 .S XUPSSUB4=XUPSSUB4_COMP_"EI"_COMP_"VA FACILITY ID"_SUBCOMP_$P($$SITE^VASITE(),"^",3)_SUBCOMP_"L"
"RTN","XUPSSTF",46,0)
 .S XUPSRCTR=XUPSRCTR+1
"RTN","XUPSSTF",47,0)
 .S XUPSSEG(2,XUPSRCTR)=XUPSSUB4
"RTN","XUPSSTF",48,0)
 ;NAME
"RTN","XUPSSTF",49,0)
 I XUPSSTR["3," D  ;get name data
"RTN","XUPSSTF",50,0)
 .;patient name last^first^middle^suffix^prefix^^"L" for legal
"RTN","XUPSSTF",51,0)
 .S XUPSSEG(3)=$S(ARRAY("Surname")'="":ARRAY("Surname"),1:HL("Q"))_COMP_$S($G(ARRAY("FirstName"))'="":$G(ARRAY("FirstName")),1:HL("Q"))_COMP
"RTN","XUPSSTF",52,0)
 .S XUPSSEG(3)=XUPSSEG(3)_$S($G(ARRAY("MiddleName"))'="":$G(ARRAY("MiddleName")),1:HL("Q"))_COMP_$S($G(ARRAY("Suffix"))'="":$G(ARRAY("Suffix")),1:HL("Q"))_COMP
"RTN","XUPSSTF",53,0)
 .S XUPSSEG(3)=XUPSSEG(3)_$S($G(ARRAY("Prefix"))'="":$G(ARRAY("Prefix")),1:HL("Q"))_COMP_COMP_"L"
"RTN","XUPSSTF",54,0)
 ;SEX
"RTN","XUPSSTF",55,0)
 I XUPSSTR["5," D  ;get sex
"RTN","XUPSSTF",56,0)
 .S XUPSSEG(5)=$S($G(ARRAY("Gender"))'="":$G(ARRAY("Gender")),1:HL("Q"))
"RTN","XUPSSTF",57,0)
 ;DOB
"RTN","XUPSSTF",58,0)
 I XUPSSTR["6," D  ;get dob
"RTN","XUPSSTF",59,0)
 .S XUPSSEG(6)=$S($G(ARRAY("DOB"))'="":$$HLDATE^HLFNC($G(ARRAY("DOB"))),1:HL("Q"))
"RTN","XUPSSTF",60,0)
 ;Home Phone #
"RTN","XUPSSTF",61,0)
 I XUPSSTR[",10" D
"RTN","XUPSSTF",62,0)
 .I $G(ARRAY("ResPhone"))]"" S XUPSPH=$$HLPHONE^HLFNC($G(ARRAY("ResPhone"))) D HL7TXT(.XUPSPH,.HL,HLES) ;convert HL characters
"RTN","XUPSSTF",63,0)
 .I $G(ARRAY("ResPhone"))="" S XUPSPH=HL("Q")
"RTN","XUPSSTF",64,0)
 .;PRN for Home Phone Number.
"RTN","XUPSSTF",65,0)
 .S $P(XUPSPH,COMP,2)="PRN",$P(XUPSPH,COMP,3)="PH"
"RTN","XUPSSTF",66,0)
 .S XUPSSEG(10)=XUPSPH
"RTN","XUPSSTF",67,0)
 ;Address
"RTN","XUPSSTF",68,0)
 I XUPSSTR[",11" D
"RTN","XUPSSTF",69,0)
 .N XUPSA,HL7STRG
"RTN","XUPSSTF",70,0)
 .S HL7STRG=$G(ARRAY("ResAddL1"))
"RTN","XUPSSTF",71,0)
 .I HL7STRG'="" D HL7TXT(.HL7STRG,.HL,HLES)
"RTN","XUPSSTF",72,0)
 .S $P(TADDR,COMP)=$S($G(HL7STRG)'="":HL7STRG,1:HL("Q"))
"RTN","XUPSSTF",73,0)
 .S HL7STRG=$G(ARRAY("ResAddL2")) D HL7TXT(.HL7STRG,.HL,HLES)
"RTN","XUPSSTF",74,0)
 .S $P(TADDR,COMP,2)=$S($G(HL7STRG)'="":HL7STRG,1:HL("Q"))
"RTN","XUPSSTF",75,0)
 .S HL7STRG=$G(ARRAY("ResAddCity")) D HL7TXT(.HL7STRG,.HL,HLES)
"RTN","XUPSSTF",76,0)
 .S $P(TADDR,COMP,3)=$S($G(HL7STRG)'="":HL7STRG,1:HL("Q"))
"RTN","XUPSSTF",77,0)
 .S $P(TADDR,COMP,4)=$S($G(ARRAY("ResAddState"))'="":$G(ARRAY("ResAddState")),1:HL("Q"))
"RTN","XUPSSTF",78,0)
 .S $P(TADDR,COMP,5)=$S($G(ARRAY("ResAddZip4"))'="":ARRAY("ResAddZip4"),1:HL("Q"))
"RTN","XUPSSTF",79,0)
 .S HL7STRG=$G(ARRAY("ResAddL3")) D HL7TXT(.HL7STRG,.HL,HLES)
"RTN","XUPSSTF",80,0)
 .S $P(TADDR,COMP,8)=$S($G(HL7STRG)'="":HL7STRG,1:HL("Q"))
"RTN","XUPSSTF",81,0)
 .;Country set to null - not used by PSIM
"RTN","XUPSSTF",82,0)
 .S $P(TADDR,COMP,6)=""
"RTN","XUPSSTF",83,0)
 .;Address type set to P for permanent
"RTN","XUPSSTF",84,0)
 .S $P(TADDR,COMP,7)="P"
"RTN","XUPSSTF",85,0)
 .S XUPSSEG(11)=TADDR
"RTN","XUPSSTF",86,0)
 ;
"RTN","XUPSSTF",87,0)
 D MAKEIT^XUPSHL7B("STF",.XUPSSEG,.XUPSREC,.XUPSSTF)
"RTN","XUPSSTF",88,0)
 Q
"RTN","XUPSSTF",89,0)
 ;
"RTN","XUPSSTF",90,0)
HL7TXT(HL7STRG,HL,HLES) ; Replace occurrences of embedded HL7 delimiters with
"RTN","XUPSSTF",91,0)
 ; HL7 escape sequence
"RTN","XUPSSTF",92,0)
 ;
"RTN","XUPSSTF",93,0)
 ; Inputs: HL7STRG - Data string to be checked
"RTN","XUPSSTF",94,0)
 ;        HL("ECH") - HL7 delimiter string
"RTN","XUPSSTF",95,0)
 ;      Delimiters MUST be in the following order,
"RTN","XUPSSTF",96,0)
 ;      Escape, Field, Component, Repeat, Subcomponent
"RTN","XUPSSTF",97,0)
 ;      Example: \^~|&
"RTN","XUPSSTF",98,0)
 ;
"RTN","XUPSSTF",99,0)
 ; Output: HL7XTRG - Data string with escape sequence added (if needed)
"RTN","XUPSSTF",100,0)
 ;
"RTN","XUPSSTF",101,0)
 N OCHR,RCHR,RCHRI,TYPE,I,HLES2
"RTN","XUPSSTF",102,0)
 ;
"RTN","XUPSSTF",103,0)
 I $G(HL("COMP"))="" S HL("COMP")=$E(HL("ECH"),1),HL("REP")=$E(HL("ECH"),2),HL("SUBCOMP")=$E(HL("ECH"),4)
"RTN","XUPSSTF",104,0)
 ; Set HL7 escape char
"RTN","XUPSSTF",105,0)
 S HLES2=HLES_HL("FS")_HL("COMP")_HL("REP")_HL("SUBCOMP")
"RTN","XUPSSTF",106,0)
 ;
"RTN","XUPSSTF",107,0)
 ; Search for occurrence of each delimiter and replace it with "\<type>\"
"RTN","XUPSSTF",108,0)
 F TYPE="E","F","C","R","S" D
"RTN","XUPSSTF",109,0)
 . S RCHRI=$S(TYPE="E":1,TYPE="F":2,TYPE="C":3,TYPE="R":4,TYPE="S":5)
"RTN","XUPSSTF",110,0)
 . ;
"RTN","XUPSSTF",111,0)
 . ; OCHR=original char, RCHR=replacement char
"RTN","XUPSSTF",112,0)
 . S OCHR=$E(HLES2,RCHRI),RCHR=$E("EFSRT",RCHRI) Q:'$F(HL7STRG,OCHR)
"RTN","XUPSSTF",113,0)
 . F I=1:1 Q:$E(HL7STRG,I)=""  I $E(HL7STRG,I)=OCHR S HL7STRG=$E(HL7STRG,1,I-1)_HLES_RCHR_HLES_$E(HL7STRG,I+1,999),I=I+2
"RTN","XUPSSTF",114,0)
 Q
"UP",200,200.06,-1)
200^8910
"UP",200,200.06,0)
200.06
"VER")
8.0^22.0
"^DD",200,200,.01,0)
NAME^RFX^^0;1^K XLFNC K:($L(X,",")'=2) X I $D(X) S XLFNC=X,(X,XLFNC)=$$FORMAT^XLFNAME7(.XLFNC,3,35,,,,,2) K:$L(X)>35!($L(X)<3)!($L(X,",")'=2)!(X'?1.E1","1.E) X,XLFNC K:'$G(XUITNAME) XLFNC
"^DD",200,200,.01,.1)

"^DD",200,200,.01,1,0)
^.1
"^DD",200,200,.01,1,1,0)
200^B
"^DD",200,200,.01,1,1,1)
S ^VA(200,"B",$E(X,1,30),DA)=""
"^DD",200,200,.01,1,1,2)
K ^VA(200,"B",$E(X,1,30),DA)
"^DD",200,200,.01,1,2,0)
200^AE^MUMPS
"^DD",200,200,.01,1,2,1)
S X1=$P($G(^VA(200,DA,1)),"^",8) I X1="" S $P(^VA(200,DA,1),"^",7,8)=DT_"^"_DUZ
"^DD",200,200,.01,1,2,2)
Q
"^DD",200,200,.01,1,2,3)
Stuffing Creator and date
"^DD",200,200,.01,1,2,"%D",0)
^^1^1^2990617^^
"^DD",200,200,.01,1,2,"%D",1,0)
This X-ref stuffs the DATE ENTERED and CREATOR fields on a new entry.
"^DD",200,200,.01,1,2,"DT")
2990617
"^DD",200,200,.01,1,3,0)
200^AMPI01^MUMPS
"^DD",200,200,.01,1,3,1)
D XREF^XUMPI(DA)
"^DD",200,200,.01,1,3,2)
D XREF^XUMPI(DA)
"^DD",200,200,.01,1,3,"%D",0)
^^4^4^3100903^
"^DD",200,200,.01,1,3,"%D",1,0)
This cross reference sets the Requires Transmission (#902) field if the
"^DD",200,200,.01,1,3,"%D",2,0)
enumeration process has begun for this file.  Setting that field will
"^DD",200,200,.01,1,3,"%D",3,0)
result in a VPID being assigned or an update message being sent to the MPI
"^DD",200,200,.01,1,3,"%D",4,0)
for this change in data.
"^DD",200,200,.01,1,3,"DT")
3100805
"^DD",200,200,.01,1,5,0)
200^BS5^MUMPS
"^DD",200,200,.01,1,5,1)
Q:$P($G(^VA(200,DA,1)),U,9)']""  S ^VA(200,"BS5",$E(X,1)_$E($P(^(1),U,9),6,9),DA)=""
"^DD",200,200,.01,1,5,2)
Q:$P($G(^VA(200,DA,1)),U,9)']""  K ^VA(200,"BS5",$E(X,1)_$E($P(^(1),U,9),6,9),DA)
"^DD",200,200,.01,1,5,3)
Special BS5 lookup X-ref
"^DD",200,200,.01,1,5,"%D",0)
^^3^3^2990617^^
"^DD",200,200,.01,1,5,"%D",1,0)
This X-ref builds the 'BS5' X-ref on name changes.
"^DD",200,200,.01,1,5,"%D",2,0)
The BS5 is the first letter of the last name concatinated with the last
"^DD",200,200,.01,1,5,"%D",3,0)
four digits of the SSN.
"^DD",200,200,.01,1,8,0)
200^AG^MUMPS
"^DD",200,200,.01,1,8,1)
F X1=0:0 S X1=$O(^VA(200,"AB",X1)) Q:X1'>0  I $D(^VA(200,"AB",X1,DA)),$S($D(^DIC(19.1,X1,0)):$P(^(0),U,3)["l",1:0) S X2=^(0),^VA(200,"AK."_$P(X2,U),X,DA)=""
"^DD",200,200,.01,1,8,2)
S X1="AK." F X2=0:0 S X1=$O(^VA(200,X1)) Q:$E(X1,3)'="."  K ^VA(200,X1,X,DA)
"^DD",200,200,.01,1,8,3)
Updates the AK.key special lookup X-ref.
"^DD",200,200,.01,1,8,"%D",0)
^^1^1^2920513^
"^DD",200,200,.01,1,8,"%D",1,0)
Builds the AK.key special lookup X-ref when there is a name change.
"^DD",200,200,.01,1,8,"DT")
2890929
"^DD",200,200,.01,1,9,0)
200^ASX^MUMPS
"^DD",200,200,.01,1,9,1)
S ^VA(200,"ASX",$$EN^XUA4A71(X),DA)=""
"^DD",200,200,.01,1,9,2)
K ^VA(200,"ASX",$$EN^XUA4A71(X),DA)
"^DD",200,200,.01,1,9,3)
LAYGO SOUNDEX X-REF
"^DD",200,200,.01,1,9,"%D",0)
^^3^3^2920513^^
"^DD",200,200,.01,1,9,"%D",1,0)
This builds a soundex X-ref so that a check for simular names can be
"^DD",200,200,.01,1,9,"%D",2,0)
done at the time of LAYGOing to the file.
"^DD",200,200,.01,1,9,"%D",3,0)
It calls XUA4A71 to convert X. The LAYGO test calls XUA4A7.
"^DD",200,200,.01,1,9,"DT")
2920117
"^DD",200,200,.01,1,10,0)
^^BULLETIN MESSAGE
"^DD",200,200,.01,1,10,1)
S Y(0)=X,D0=DA K XMB,XMY S XMB(1)=Y(0),XMB="XMNEWUSER" D ^XMB:$D(^XMB(3.6,"B",XMB)) K Y,XMB
"^DD",200,200,.01,1,10,2)
Q
"^DD",200,200,.01,1,10,3)
New User Bulletin
"^DD",200,200,.01,1,10,"%D",0)
^^1^1^3000719^
"^DD",200,200,.01,1,10,"%D",1,0)
This bulletin is sent whenever a new user is added to the New Person file.
"^DD",200,200,.01,1,10,"CREATE PARAMETER #1")
NAME
"^DD",200,200,.01,1,10,"CREATE VALUE")
XMNEWUSER
"^DD",200,200,.01,1,10,"DELETE VALUE")
NO EFFECT
"^DD",200,200,.01,1,10,"DT")
3000719
"^DD",200,200,.01,1,11,0)
^^TRIGGER^46.11^.02
"^DD",200,200,.01,1,11,1)
Q
"^DD",200,200,.01,1,11,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$P($G(^DG(43,1,"HL7")),U,4)=1 I X S X=DIV X ^DD(200,.01,1,11,89.2) S Y(101)=$S($D(^DGRU(46.11,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S DIU=X K Y S X=DIV S X=X X ^DD(200,.01,1,11,2.4)
"^DD",200,200,.01,1,11,2.4)
S DIH=$S($D(^DGRU(46.11,DIV(0),0)):^(0),1:""),DIV=X I $D(^(0)) S $P(^(0),U,2)=DIV,DIH=46.11,DIG=.02 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",200,200,.01,1,11,89.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^VA(200,D0,0)):^(0),1:"") S X=$P(Y(1),U,1),X=X S X=X K DIC S DIC="^DGRU(46.11,",DIC(0)="NMFL",X=""""_X_"""" D ^DIC S (D,D0,DIV(0))=+Y
"^DD",200,200,.01,1,11,"%D",0)
^^2^2^2991018^
"^DD",200,200,.01,1,11,"%D",1,0)
Trigger the Name field before it was changed into the RAI MDS MONITOR
"^DD",200,200,.01,1,11,"%D",2,0)
file whenever the Name field of the New Person file is added or changed.
"^DD",200,200,.01,1,11,"CREATE VALUE")
NO EFFECT
"^DD",200,200,.01,1,11,"DELETE CONDITION")
S X=$P($G(^DG(43,1,"HL7")),U,4)=1
"^DD",200,200,.01,1,11,"DELETE VALUE")
OLD NAME
"^DD",200,200,.01,1,11,"DIC")
LOOKUP
"^DD",200,200,.01,1,11,"DT")
2991018
"^DD",200,200,.01,1,11,"FIELD")
NAME:RAI MDS MONITOR:#.02
"^DD",200,200,.01,1,12,0)
^^TRIGGER^46.11^.03
"^DD",200,200,.01,1,12,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$P($G(^DG(43,1,"HL7")),U,4)=1 I X S X=DIV X ^DD(200,.01,1,12,89.2) S Y(101)=$S($D(^DGRU(46.11,D0,0)):^(0),1:"") S X=$P(Y(101),U,3) S D0=I(0,0) S DIU=X K Y S X=DIV S X=200 X ^DD(200,.01,1,12,1.4)
"^DD",200,200,.01,1,12,1.4)
S DIH=$S($D(^DGRU(46.11,DIV(0),0)):^(0),1:""),DIV=X I $D(^(0)) S $P(^(0),U,3)=DIV,DIH=46.11,DIG=.03 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",200,200,.01,1,12,2)
Q
"^DD",200,200,.01,1,12,89.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^VA(200,D0,0)):^(0),1:"") S X=$P(Y(1),U,1),X=X S X=X K DIC S DIC="^DGRU(46.11,",DIC(0)="NMFL" D ^DIC S (D,D0,DIV(0))=+Y
"^DD",200,200,.01,1,12,"%D",0)
^^2^2^2991018^
"^DD",200,200,.01,1,12,"%D",1,0)
Trigger the New Person file number (#200) into the RAI MDS MONITOR
"^DD",200,200,.01,1,12,"%D",2,0)
file whenever the New Person name field is added or changed.
"^DD",200,200,.01,1,12,"CREATE CONDITION")
S X=$P($G(^DG(43,1,"HL7")),U,4)=1
"^DD",200,200,.01,1,12,"CREATE VALUE")
S X=200
"^DD",200,200,.01,1,12,"DELETE VALUE")
NO EFFECT
"^DD",200,200,.01,1,12,"DIC")
LOOKUP
"^DD",200,200,.01,1,12,"DT")
2991018
"^DD",200,200,.01,1,12,"FIELD")
NAME:RAI MDS MONITOR:#.03
"^DD",200,200,.01,1,13,0)
^^TRIGGER^46.11^.04
"^DD",200,200,.01,1,13,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$P($G(^DG(43,1,"HL7")),U,4)=1 I X S X=DIV X ^DD(200,.01,1,13,89.2) S Y(101)=$S($D(^DGRU(46.11,D0,0)):^(0),1:"") S X=$P(Y(101),U,4) S D0=I(0,0) S DIU=X K Y S X=DIV S X=DA X ^DD(200,.01,1,13,1.4)
"^DD",200,200,.01,1,13,1.4)
S DIH=$S($D(^DGRU(46.11,DIV(0),0)):^(0),1:""),DIV=X I $D(^(0)) S $P(^(0),U,4)=DIV,DIH=46.11,DIG=.04 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",200,200,.01,1,13,2)
Q
"^DD",200,200,.01,1,13,89.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^VA(200,D0,0)):^(0),1:"") S X=$P(Y(1),U,1),X=X S X=X K DIC S DIC="^DGRU(46.11,",DIC(0)="NMF" D ^DIC S (D,D0,DIV(0))=+Y
"^DD",200,200,.01,1,13,"%D",0)
^^2^2^2991018^
"^DD",200,200,.01,1,13,"%D",1,0)
Trigger the internal entry number of the entry which was changed or added
"^DD",200,200,.01,1,13,"%D",2,0)
in the New Person file, into the RAI MDS MONITOR file.
"^DD",200,200,.01,1,13,"CREATE CONDITION")
S X=$P($G(^DG(43,1,"HL7")),U,4)=1
"^DD",200,200,.01,1,13,"CREATE VALUE")
S X=DA
"^DD",200,200,.01,1,13,"DELETE VALUE")
NO EFFECT
"^DD",200,200,.01,1,13,"DIC")
LOOKUP
"^DD",200,200,.01,1,13,"DT")
2991018
"^DD",200,200,.01,1,13,"FIELD")
NAME:RAI MDS MONITOR:#.04
"^DD",200,200,.01,3)
Answer must be 3-35 upper-case characters in length, and be in the format Family(Last),Given(First) Middle Suffix. Enter '??' for more help.
"^DD",200,200,.01,21,0)
^^6^6^3040421^
"^DD",200,200,.01,21,1,0)
Enter only data that is actually part of the person's name. Do not
"^DD",200,200,.01,21,2,0)
include extra titles, identification, flags, local information, etc.
"^DD",200,200,.01,21,3,0)
Enter the person's name in 'LAST,FIRST MIDDLE SUFFIX' format.
"^DD",200,200,.01,21,4,0)
This value must be 3-35 characters in length and may contain only
"^DD",200,200,.01,21,5,0)
uppercase alpha characters, spaces, apostrophes, hyphens and one comma.
"^DD",200,200,.01,21,6,0)
All other characters and parenthetical text will be removed.
"^DD",200,200,.01,"AUDIT")
n
"^DD",200,200,.01,"AX")

"^DD",200,200,.01,"DEL",1,0)
I 1 W *7,"  PERSONS CAN'T BE DELETED!!"
"^DD",200,200,.01,"DT")
3100805
"^DD",200,200,.01,"LAYGO",1,0)
D LAYGO^XUA4A7
"^DD",200,200,.111,0)
STREET ADDRESS 1^F^^.11;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>50!($L(X)<2) X
"^DD",200,200,.111,1,0)
^.1
"^DD",200,200,.111,1,1,0)
200^AMPI111^MUMPS
"^DD",200,200,.111,1,1,1)
D XREF^XUMPI(DA)
"^DD",200,200,.111,1,1,2)
D XREF^XUMPI(DA)
"^DD",200,200,.111,1,1,"%D",0)
^^4^4^3100903^
"^DD",200,200,.111,1,1,"%D",1,0)
This cross reference sets the Requires Transmission (#902) field if the
"^DD",200,200,.111,1,1,"%D",2,0)
enumeration process has begun for this file.  Setting that field will
"^DD",200,200,.111,1,1,"%D",3,0)
result in a VPID being assigned or an update message being sent to the MPI
"^DD",200,200,.111,1,1,"%D",4,0)
for this change in data.
"^DD",200,200,.111,1,1,"DT")
3100805
"^DD",200,200,.111,3)
ANSWER MUST BE 2-50 CHARACTERS IN LENGTH
"^DD",200,200,.111,21,0)
^^2^2^2920513^^^^
"^DD",200,200,.111,21,1,0)
This is the first line of the street address of the permanent
"^DD",200,200,.111,21,2,0)
 address of the new person.
"^DD",200,200,.111,"DT")
3100805
"^DD",200,200,.112,0)
STREET ADDRESS 2^F^^.11;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>50!($L(X)<2) X
"^DD",200,200,.112,1,0)
^.1
"^DD",200,200,.112,1,1,0)
200^AMPI112^MUMPS
"^DD",200,200,.112,1,1,1)
D XREF^XUMPI(DA)
"^DD",200,200,.112,1,1,2)
D XREF^XUMPI(DA)
"^DD",200,200,.112,1,1,"%D",0)
^^4^4^3100903^
"^DD",200,200,.112,1,1,"%D",1,0)
This cross reference sets the Requires Transmission (#902) field if the
"^DD",200,200,.112,1,1,"%D",2,0)
enumeration process has begun for this file.  Setting that field will
"^DD",200,200,.112,1,1,"%D",3,0)
result in a VPID being assigned or an update message being sent to the MPI
"^DD",200,200,.112,1,1,"%D",4,0)
for this change in data.
"^DD",200,200,.112,1,1,"DT")
3100805
"^DD",200,200,.112,3)
ANSWER MUST BE 2-50 CHARACTERS IN LENGTH
"^DD",200,200,.112,21,0)
^^2^2^2920513^^^^
"^DD",200,200,.112,21,1,0)
 This is the second line of the street address of the permanent
"^DD",200,200,.112,21,2,0)
address of the new person.
"^DD",200,200,.112,"DT")
3100805
"^DD",200,200,.113,0)
STREET ADDRESS 3^F^^.11;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>50!($L(X)<2) X
"^DD",200,200,.113,1,0)
^.1
"^DD",200,200,.113,1,1,0)
200^AMPI113^MUMPS
"^DD",200,200,.113,1,1,1)
D XREF^XUMPI(DA)
"^DD",200,200,.113,1,1,2)
D XREF^XUMPI(DA)
"^DD",200,200,.113,1,1,"%D",0)
^^4^4^3100903^
"^DD",200,200,.113,1,1,"%D",1,0)
This cross reference sets the Requires Transmission (#902) field if the
"^DD",200,200,.113,1,1,"%D",2,0)
enumeration process has begun for this file.  Setting that field will
"^DD",200,200,.113,1,1,"%D",3,0)
result in a VPID being assigned or an update message being sent to the MPI
"^DD",200,200,.113,1,1,"%D",4,0)
for this change in data.
"^DD",200,200,.113,1,1,"DT")
3100805
"^DD",200,200,.113,3)
ANSWER MUST BE 2-50 CHARACTERS IN LENGTH
"^DD",200,200,.113,21,0)
^^2^2^2920513^^^^
"^DD",200,200,.113,21,1,0)
This is the third line of the street address of the permanent
"^DD",200,200,.113,21,2,0)
address of the new person.
"^DD",200,200,.113,"DT")
3100805
"^DD",200,200,.114,0)
CITY^F^^.11;4^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>30!($L(X)<2) X
"^DD",200,200,.114,1,0)
^.1
"^DD",200,200,.114,1,1,0)
200^AMPI114^MUMPS
"^DD",200,200,.114,1,1,1)
D XREF^XUMPI(DA)
"^DD",200,200,.114,1,1,2)
D XREF^XUMPI(DA)
"^DD",200,200,.114,1,1,"%D",0)
^^4^4^3100903^
"^DD",200,200,.114,1,1,"%D",1,0)
This cross reference sets the Requires Transmission (#902) field if the
"^DD",200,200,.114,1,1,"%D",2,0)
enumeration process has begun for this file.  Setting that field will
"^DD",200,200,.114,1,1,"%D",3,0)
result in a VPID being assigned or an update message being sent to the MPI
"^DD",200,200,.114,1,1,"%D",4,0)
for this change in data.
"^DD",200,200,.114,1,1,"DT")
3100805
"^DD",200,200,.114,3)
ANSWER MUST BE 2-30 CHARACTERS IN LENGTH
"^DD",200,200,.114,21,0)
^^2^2^2920513^^^^
"^DD",200,200,.114,21,1,0)
This is the city of the permanent address of
"^DD",200,200,.114,21,2,0)
the new person.
"^DD",200,200,.114,"DT")
3100805
"^DD",200,200,.115,0)
STATE^P5'^DIC(5,^.11;5^Q
"^DD",200,200,.115,1,0)
^.1
"^DD",200,200,.115,1,1,0)
200^AMPI115^MUMPS
"^DD",200,200,.115,1,1,1)
D XREF^XUMPI(DA)
"^DD",200,200,.115,1,1,2)
D XREF^XUMPI(DA)
"^DD",200,200,.115,1,1,"%D",0)
^^4^4^3100903^
"^DD",200,200,.115,1,1,"%D",1,0)
This cross reference sets the Requires Transmission (#902) field if the
"^DD",200,200,.115,1,1,"%D",2,0)
enumeration process has begun for this file.  Setting that field will
"^DD",200,200,.115,1,1,"%D",3,0)
result in a VPID being assigned or an update message being sent to the MPI
"^DD",200,200,.115,1,1,"%D",4,0)
for this change in data.
"^DD",200,200,.115,1,1,"DT")
3100805
"^DD",200,200,.115,21,0)
^^2^2^2920513^^^^
"^DD",200,200,.115,21,1,0)
This is the state of the permanent address of
"^DD",200,200,.115,21,2,0)
the new person.
"^DD",200,200,.115,"DT")
3100805
"^DD",200,200,.116,0)
ZIP CODE^F^^.11;6^K:$L(X)>10!($L(X)<5)!'(X?5N!(X?5N1"-"4N)) X
"^DD",200,200,.116,1,0)
^.1
"^DD",200,200,.116,1,1,0)
200^AMPI116^MUMPS
"^DD",200,200,.116,1,1,1)
D XREF^XUMPI(DA)
"^DD",200,200,.116,1,1,2)
D XREF^XUMPI(DA)
"^DD",200,200,.116,1,1,"%D",0)
^^4^4^3100903^
"^DD",200,200,.116,1,1,"%D",1,0)
This cross reference sets the Requires Transmission (#902) field if the
"^DD",200,200,.116,1,1,"%D",2,0)
enumeration process has begun for this file.  Setting that field will
"^DD",200,200,.116,1,1,"%D",3,0)
result in a VPID being assigned or an update message being sent to the MPI
"^DD",200,200,.116,1,1,"%D",4,0)
for this change in data.
"^DD",200,200,.116,1,1,"DT")
3100805
"^DD",200,200,.116,3)
Answer with ZIP CODE or ZIP+4.
"^DD",200,200,.116,21,0)
^^2^2^2920513^^^^
"^DD",200,200,.116,21,1,0)
This is the postal ZIP code of the
"^DD",200,200,.116,21,2,0)
permanent address of the new person.
"^DD",200,200,.116,"DT")
3100805
"^DD",200,200,.131,0)
PHONE (HOME)^F^^.13;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>20!($L(X)<4)!'(X?4.20NP) X
"^DD",200,200,.131,1,0)
^.1
"^DD",200,200,.131,1,1,0)
200^AMPI131^MUMPS
"^DD",200,200,.131,1,1,1)
D XREF^XUMPI(DA)
"^DD",200,200,.131,1,1,2)
D XREF^XUMPI(DA)
"^DD",200,200,.131,1,1,"%D",0)
^^4^4^3100903^
"^DD",200,200,.131,1,1,"%D",1,0)
This cross reference sets the Requires Transmission (#902) field if the
"^DD",200,200,.131,1,1,"%D",2,0)
enumeration process has begun for this file.  Setting that field will
"^DD",200,200,.131,1,1,"%D",3,0)
result in a VPID being assigned or an update message being sent to the MPI
"^DD",200,200,.131,1,1,"%D",4,0)
for this change in data.
"^DD",200,200,.131,1,1,"DT")
3100805
"^DD",200,200,.131,3)
Answer must be 4-20 characters in length. Only numeric/punctuation characters will be allowed.
"^DD",200,200,.131,21,0)
^^1^1^3021212^^^^
"^DD",200,200,.131,21,1,0)
This is the telephone number for the new person.
"^DD",200,200,.131,"DT")
3100805
"^DD",200,200,4,0)
SEX^S^M:MALE;F:FEMALE;^1;2^Q
"^DD",200,200,4,1,0)
^.1
"^DD",200,200,4,1,1,0)
200^AMPI4^MUMPS
"^DD",200,200,4,1,1,1)
D XREF^XUMPI(DA)
"^DD",200,200,4,1,1,2)
D XREF^XUMPI(DA)
"^DD",200,200,4,1,1,"%D",0)
^^4^4^3100903^
"^DD",200,200,4,1,1,"%D",1,0)
This cross reference sets the Requires Transmission (#902) field if the
"^DD",200,200,4,1,1,"%D",2,0)
enumeration process has begun for this file.  Setting that field will
"^DD",200,200,4,1,1,"%D",3,0)
result in a VPID being assigned or an update message being sent to the MPI
"^DD",200,200,4,1,1,"%D",4,0)
for this change in data.
"^DD",200,200,4,1,1,"DT")
3100805
"^DD",200,200,4,21,0)
^^1^1^2920513^^
"^DD",200,200,4,21,1,0)
This is the gender for the new person.
"^DD",200,200,4,"DT")
3100805
"^DD",200,200,5,0)
DOB^D^^1;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",200,200,5,1,0)
^.1
"^DD",200,200,5,1,1,0)
200^AMPI5^MUMPS
"^DD",200,200,5,1,1,1)
D XREF^XUMPI(DA)
"^DD",200,200,5,1,1,2)
D XREF^XUMPI(DA)
"^DD",200,200,5,1,1,"%D",0)
^^4^4^3100903^
"^DD",200,200,5,1,1,"%D",1,0)
This cross reference sets the Requires Transmission (#902) field if the
"^DD",200,200,5,1,1,"%D",2,0)
enumeration process has begun for this file.  Setting that field will
"^DD",200,200,5,1,1,"%D",3,0)
result in a VPID being assigned or an update message being sent to the MPI
"^DD",200,200,5,1,1,"%D",4,0)
for this change in data.
"^DD",200,200,5,1,1,"DT")
3100805
"^DD",200,200,5,21,0)
^^1^1^2920513^^
"^DD",200,200,5,21,1,0)
This is the date of birth of the new person.
"^DD",200,200,5,"DT")
3100805
"^DD",200,200,9,0)
SSN^FX^^1;9^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>9!($L(X)<9)!'(X?9N) X I $D(X) S Y=$O(^VA(200,"SSN",X,0)) I Y>0,$D(^VA(200,Y,0)) S DDH=2,DDH(1,"T")="",DDH(2,"T")="  Already used by "_$P(^(0),"^",1) K X Q
"^DD",200,200,9,1,0)
^.1
"^DD",200,200,9,1,1,0)
200^BS55^MUMPS
"^DD",200,200,9,1,1,1)
S ^VA(200,"BS5",$E(^VA(200,DA,0),1)_$E(X,6,9),DA)=""
"^DD",200,200,9,1,1,2)
K ^VA(200,"BS5",$E(^VA(200,DA,0),1)_$E(X,6,9),DA)
"^DD",200,200,9,1,1,"%D",0)
^^2^2^2920513^
"^DD",200,200,9,1,1,"%D",1,0)
This is the 'BS5' X-ref on the SSN field.
"^DD",200,200,9,1,1,"%D",2,0)
See the 'BS5' X-ref on the name field.
"^DD",200,200,9,1,2,0)
200^SSN
"^DD",200,200,9,1,2,1)
S ^VA(200,"SSN",$E(X,1,30),DA)=""
"^DD",200,200,9,1,2,2)
K ^VA(200,"SSN",$E(X,1,30),DA)
"^DD",200,200,9,1,3,0)
200^AMPI9^MUMPS
"^DD",200,200,9,1,3,1)
D XREF^XUMPI(DA)
"^DD",200,200,9,1,3,2)
D XREF^XUMPI(DA)
"^DD",200,200,9,1,3,"%D",0)
^^4^4^3100903^
"^DD",200,200,9,1,3,"%D",1,0)
This cross reference sets the Requires Transmission (#902) field if the
"^DD",200,200,9,1,3,"%D",2,0)
enumeration process has begun for this file.  Setting that field will
"^DD",200,200,9,1,3,"%D",3,0)
result in a VPID being assigned or an update message being sent to the MPI
"^DD",200,200,9,1,3,"%D",4,0)
for this change in data.
"^DD",200,200,9,1,3,"DT")
3100805
"^DD",200,200,9,1,4,0)
200^BS^MUMPS
"^DD",200,200,9,1,4,1)
S ^VA(200,"BS",$E(X,6,9),DA)=""
"^DD",200,200,9,1,4,2)
K ^VA(200,"BS",$E(X,6,9),DA)
"^DD",200,200,9,1,4,"%D",0)
^^1^1^2920513^
"^DD",200,200,9,1,4,"%D",1,0)
This is a X-ref of the last 4 of the SSN.
"^DD",200,200,9,1,5,0)
200^AJ^MUMPS
"^DD",200,200,9,1,5,1)
S %=X,X="PRSD450" X ^%ZOSF("TEST") K X I $T S X=% D SET450^PRSD450
"^DD",200,200,9,1,5,2)
S %=X,X="PRSD450" X ^%ZOSF("TEST") K X I $T S X=% D KILL450^PRSD450
"^DD",200,200,9,1,5,"%D",0)
^^3^3^2950428^^^^
"^DD",200,200,9,1,5,"%D",1,0)
This cross-reference will set or kill the NEW PERSON pointer in the PAID
"^DD",200,200,9,1,5,"%D",2,0)
EMPLOYEE file and the PAID EMPLOYEE pointer in the NEW PERSON file whenever
"^DD",200,200,9,1,5,"%D",3,0)
the SSN value is changed or deleted.
"^DD",200,200,9,1,5,"DT")
2950426
"^DD",200,200,9,3)
ANSWER MUST BE 9 CHARACTERS IN LENGTH
"^DD",200,200,9,21,0)
^^1^1^2920513^^
"^DD",200,200,9,21,1,0)
This is the social security number of the new person.
"^DD",200,200,9,"DT")
3100805
"^DD",200,200,41.99,0)
NPI^FX^^NPI;1^K:'($$CHKDGT^XUSNPIE1(X,DA,"Individual_ID")) X
"^DD",200,200,41.99,1,0)
^.1
"^DD",200,200,41.99,1,1,0)
200^ANPI
"^DD",200,200,41.99,1,1,1)
S ^VA(200,"ANPI",$E(X,1,30),DA)=""
"^DD",200,200,41.99,1,1,2)
K ^VA(200,"ANPI",$E(X,1,30),DA)
"^DD",200,200,41.99,1,1,"%D",0)
^^1^1^3060301^
"^DD",200,200,41.99,1,1,"%D",1,0)
File entries by NPI.
"^DD",200,200,41.99,1,1,"DT")
3060301
"^DD",200,200,41.99,1,2,0)
200^AMPI4199^MUMPS
"^DD",200,200,41.99,1,2,1)
D XREF^XUMPI(DA)
"^DD",200,200,41.99,1,2,2)
D XREF^XUMPI(DA)
"^DD",200,200,41.99,1,2,"%D",0)
^^4^4^3100903^
"^DD",200,200,41.99,1,2,"%D",1,0)
This cross reference sets the Requires Transmission (#902) field if the
"^DD",200,200,41.99,1,2,"%D",2,0)
enumeration process has begun for this file.  Setting that field will
"^DD",200,200,41.99,1,2,"%D",3,0)
result in a VPID being assigned or an update message being sent to the MPI
"^DD",200,200,41.99,1,2,"%D",4,0)
for this change in data.
"^DD",200,200,41.99,1,2,"DT")
3100805
"^DD",200,200,41.99,3)
Answer must be 10 digit value assigned by Centers for Medicare and Medicaid Services (CMS).
"^DD",200,200,41.99,21,0)
^^6^6^3070918^
"^DD",200,200,41.99,21,1,0)
Each VHA Billable Practitioner should have applied for the NPI through
"^DD",200,200,41.99,21,2,0)
CMS' National Plan and Provider Enumeration System (NPPES).  NPI
"^DD",200,200,41.99,21,3,0)
Confirmation Letters are sent by CMS and indicate the NPI assigned.
"^DD",200,200,41.99,21,4,0)
Practitioners may present their NPI Confirmation Letter as a source
"^DD",200,200,41.99,21,5,0)
document to verify the accuracy of the NPI or you may contact your Local
"^DD",200,200,41.99,21,6,0)
NPI Maintenance Team Leader for assistance.
"^DD",200,200,41.99,"DT")
3100805
"^DD",200,200,53.2,0)
DEA#^FX^^PS;2^K:'$$VALDEA^XUSER2(X) X
"^DD",200,200,53.2,1,0)
^.1
"^DD",200,200,53.2,1,1,0)
200^PS1
"^DD",200,200,53.2,1,1,1)
S ^VA(200,"PS1",$E(X,1,30),DA)=""
"^DD",200,200,53.2,1,1,2)
K ^VA(200,"PS1",$E(X,1,30),DA)
"^DD",200,200,53.2,1,1,3)
Lookup providers by their DEA number
"^DD",200,200,53.2,1,1,"%D",0)
^^1^1^2931208^^
"^DD",200,200,53.2,1,1,"%D",1,0)
This was 'APS1' before.  Also used to stop duplicate numbers.
"^DD",200,200,53.2,1,1,"DT")
2930924
"^DD",200,200,53.2,1,2,0)
200^AMPI532^MUMPS
"^DD",200,200,53.2,1,2,1)
D XREF^XUMPI(DA)
"^DD",200,200,53.2,1,2,2)
D XREF^XUMPI(DA)
"^DD",200,200,53.2,1,2,"%D",0)
^^4^4^3100903^
"^DD",200,200,53.2,1,2,"%D",1,0)
This cross reference sets the Requires Transmission (#902) field if the
"^DD",200,200,53.2,1,2,"%D",2,0)
enumeration process has begun for this file.  Setting that field will
"^DD",200,200,53.2,1,2,"%D",3,0)
result in a VPID being assigned or an update message being sent to the MPI
"^DD",200,200,53.2,1,2,"%D",4,0)
for this change in data.
"^DD",200,200,53.2,1,2,"DT")
3100805
"^DD",200,200,53.2,3)
Enter the DEA number 2 letters 7 numbers.
"^DD",200,200,53.2,4)
W:$X>5 ! W ?5,"Enter the DEA number as two upper case letters followed by 7 digits",!,?5,"e.g. AA1234567.  Each provider must have a unique number.",!
"^DD",200,200,53.2,20,0)
^.3LA^1^1
"^DD",200,200,53.2,20,1,0)
PS
"^DD",200,200,53.2,20,2,0)
PSO
"^DD",200,200,53.2,21,0)
^^3^3^3021223^
"^DD",200,200,53.2,21,1,0)
This field is used to enter the drug enforcement agency (DEA) number.
"^DD",200,200,53.2,21,2,0)
Enter the DEA number as two upper case letters followed by 7 digits.
"^DD",200,200,53.2,21,3,0)
e.g. AA1234567.  Each provider must have a unique number.
"^DD",200,200,53.2,23,0)
^^21^21^3021223^
"^DD",200,200,53.2,23,1,0)
This is the algorithm for DEA # checking.
"^DD",200,200,53.2,23,2,0)

"^DD",200,200,53.2,23,3,0)
The first letter for practitioners (physicians, dentists, veterinarians,
"^DD",200,200,53.2,23,4,0)
pharmacies etc.) is either an "A" or "B"
"^DD",200,200,53.2,23,5,0)
 
"^DD",200,200,53.2,23,6,0)
The second letter should be the first letter of the practitioner's last
"^DD",200,200,53.2,23,7,0)
name.  Sometimes this does not match if the registrant changed their name 
"^DD",200,200,53.2,23,8,0)
or the DEA did not get it correct the first time.
"^DD",200,200,53.2,23,9,0)
 
"^DD",200,200,53.2,23,10,0)
The check digit algorithm is as follows:
"^DD",200,200,53.2,23,11,0)
 
"^DD",200,200,53.2,23,12,0)
AS1234563
"^DD",200,200,53.2,23,13,0)
 
"^DD",200,200,53.2,23,14,0)
1 + 3 + 5 =   9
"^DD",200,200,53.2,23,15,0)
2 + 4 + 6 = 12 x 2 = 24
"^DD",200,200,53.2,23,16,0)
 
"^DD",200,200,53.2,23,17,0)
9 + 24 = 33
"^DD",200,200,53.2,23,18,0)
 
"^DD",200,200,53.2,23,19,0)
The last digit of the total must equal the check digit (the last
"^DD",200,200,53.2,23,20,0)
digit of the DEA number).
"^DD",200,200,53.2,23,21,0)
(33#10)=$E("AS1234563",9)
"^DD",200,200,53.2,"DT")
3100805
"^DD",200,200,900,0)
Enumeration Initiated^D^^MPI;1^S %DT="ETX" D ^%DT S X=Y K:X<1 X
"^DD",200,200,900,3)
(No range limit on date)
"^DD",200,200,900,21,0)
^^2^2^3100903^
"^DD",200,200,900,21,1,0)
This field notes the date/time the VPID enumeration attempt was 
"^DD",200,200,900,21,2,0)
initiated.
"^DD",200,200,900,"DT")
3100903
"^DD",200,200,901,0)
Enumeration Completed^D^^MPI;2^S %DT="ETX" D ^%DT S X=Y K:X<1 X
"^DD",200,200,901,3)
(No range limit on date)
"^DD",200,200,901,21,0)
^^1^1^3100903^
"^DD",200,200,901,21,1,0)
This field notes the date/time the VPID assignment was completed.
"^DD",200,200,901,"DT")
3100903
"^DD",200,200,902,0)
Requires Transmission^S^Y:Yes;^MPI;3^Q
"^DD",200,200,902,1,0)
^.1
"^DD",200,200,902,1,1,0)
200^AXMIT^MUMPS
"^DD",200,200,902,1,1,1)
I X="Y",$P($G(^XTV(8989.3,1,"MPI")),"^",3)'="" S ^VA(200,"AXMIT",DA)=""
"^DD",200,200,902,1,1,2)
I X="" K ^VA(200,"AXMIT",DA)
"^DD",200,200,902,1,1,"%D",0)
^.101^3^3^3100907^^
"^DD",200,200,902,1,1,"%D",1,0)
This cross reference will be set to note that this record was just added
"^DD",200,200,902,1,1,"%D",2,0)
to this file and needs a VPID or that this record had a field that MPI is
"^DD",200,200,902,1,1,"%D",3,0)
monitoring edited and needs to be sent to the MPI.
"^DD",200,200,902,1,1,"DT")
3100907
"^DD",200,200,902,21,0)
^^21^21^3100907^
"^DD",200,200,902,21,1,0)
This field is used to note that this record was just added to this file, 
"^DD",200,200,902,21,2,0)
or that an edit was made to the fields that MPI cares about capturing and 
"^DD",200,200,902,21,3,0)
a VPID needs to be assigned or an update message needs to be sent.
"^DD",200,200,902,21,4,0)
 
"^DD",200,200,902,21,5,0)
Fields being monitored for change are:
"^DD",200,200,902,21,6,0)
 
"^DD",200,200,902,21,7,0)
 .01           NAME 
"^DD",200,200,902,21,8,0)
 .111          STREET ADDRESS 1 
"^DD",200,200,902,21,9,0)
 .112          STREET ADDRESS 2 
"^DD",200,200,902,21,10,0)
 .113          STREET ADDRESS 3 
"^DD",200,200,902,21,11,0)
 .114          CITY 
"^DD",200,200,902,21,12,0)
 .115          STATE 
"^DD",200,200,902,21,13,0)
 .116          ZIP CODE 
"^DD",200,200,902,21,14,0)
 .131          PHONE (HOME) 
"^DD",200,200,902,21,15,0)
 4             SEX 
"^DD",200,200,902,21,16,0)
 5             DOB 
"^DD",200,200,902,21,17,0)
 9             SSN 
"^DD",200,200,902,21,18,0)
 41.99         NPI 
"^DD",200,200,902,21,19,0)
 53.2          DEA# 
"^DD",200,200,902,21,20,0)
 200.06,.01    VISITED FROM 
"^DD",200,200,902,21,21,0)
 200.06,2      DUZ AT HOME SITE
"^DD",200,200,902,"DT")
3100907
"^DD",200,200,8910,0)
VISITED FROM^200.06A^^8910;0
"^DD",200,200,8910,21,0)
^^8^8^3000208^
"^DD",200,200,8910,21,1,0)
This subfile stores the information that travels along with visitors using
"^DD",200,200,8910,21,2,0)
the CPRS Foreign Views software to look at medical data of a patient which
"^DD",200,200,8910,21,3,0)
resides on a system where the visitor may not have valid access or verify
"^DD",200,200,8910,21,4,0)
codes.  When that person name and Social Security Number is put into the
"^DD",200,200,8910,21,5,0)
visited system's New Person File this multiple is updated to provide the
"^DD",200,200,8910,21,6,0)
ability to trace the visitors back to the system from which they are
"^DD",200,200,8910,21,7,0)
visiting.  This field (.01) stores the number of the site where the
"^DD",200,200,8910,21,8,0)
visitor was authenticated.
"^DD",200,200.06,0)
VISITED FROM SUB-FIELD^^5^6
"^DD",200,200.06,0,"NM","VISITED FROM")

"^DD",200,200.06,.01,0)
VISITED FROM^F^^0;1^K:$L(X)>30!($L(X)<1) X
"^DD",200,200.06,.01,1,0)
^.1
"^DD",200,200.06,.01,1,1,0)
200.06^B
"^DD",200,200.06,.01,1,1,1)
S ^VA(200,DA(1),8910,"B",$E(X,1,30),DA)=""
"^DD",200,200.06,.01,1,1,2)
K ^VA(200,DA(1),8910,"B",$E(X,1,30),DA)
"^DD",200,200.06,.01,1,2,0)
200^AMPIV01^MUMPS
"^DD",200,200.06,.01,1,2,1)
D XREF^XUMPI(DA)
"^DD",200,200.06,.01,1,2,2)
D XREF^XUMPI(DA)
"^DD",200,200.06,.01,1,2,"%D",0)
^^4^4^3100903^
"^DD",200,200.06,.01,1,2,"%D",1,0)
This cross reference sets the Requires Transmission (#902) field if the
"^DD",200,200.06,.01,1,2,"%D",2,0)
enumeration process has begun for this file.  Setting that field will
"^DD",200,200.06,.01,1,2,"%D",3,0)
result in a VPID being assigned or an update message being sent to the MPI
"^DD",200,200.06,.01,1,2,"%D",4,0)
for this change in data.
"^DD",200,200.06,.01,1,2,"DT")
3100805
"^DD",200,200.06,.01,3)
This is the numerical designation of the user's home site
"^DD",200,200.06,.01,21,0)
^^3^3^3000208^
"^DD",200,200.06,.01,21,1,0)
This field holds the official Station Number ID of the remote site that
"^DD",200,200.06,.01,21,2,0)
did the user authentication. This may be the site that caused this user to
"^DD",200,200.06,.01,21,3,0)
be added to the NPF.
"^DD",200,200.06,.01,"DT")
3100805
"^DD",200,200.06,2,0)
DUZ AT HOME SITE^NJ12,0^^0;3^K:+X'=X!(X>999999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",200,200.06,2,1,0)
^.1
"^DD",200,200.06,2,1,1,0)
200^AMPIV3^MUMPS
"^DD",200,200.06,2,1,1,1)
D XREF^XUMPI(DA)
"^DD",200,200.06,2,1,1,2)
D XREF^XUMPI(DA)
"^DD",200,200.06,2,1,1,"%D",0)
^^4^4^3100903^
"^DD",200,200.06,2,1,1,"%D",1,0)
This cross reference sets the Requires Transmission (#902) field if the
"^DD",200,200.06,2,1,1,"%D",2,0)
enumeration process has begun for this file.  Setting that field will
"^DD",200,200.06,2,1,1,"%D",3,0)
result in a VPID being assigned or an update message being sent to the MPI
"^DD",200,200.06,2,1,1,"%D",4,0)
for this change in data.
"^DD",200,200.06,2,1,1,"DT")
3100805
"^DD",200,200.06,2,3)
Please enter the New Person File IEN at the home site
"^DD",200,200.06,2,21,0)
^^2^2^3000126^
"^DD",200,200.06,2,21,1,0)
This field contains the internal entry number in the New Person File at
"^DD",200,200.06,2,21,2,0)
the site where this visitor was authenticated.
"^DD",200,200.06,2,"DT")
3100805
"^DD",8989.3,8989.3,900,0)
New Person Enumeration Started^D^^MPI;1^S %DT="ETX" D ^%DT S X=Y K:X<1 X
"^DD",8989.3,8989.3,900,.1)
New Person file Enumeration Start Date
"^DD",8989.3,8989.3,900,3)
(No range limit on date)
"^DD",8989.3,8989.3,900,21,0)
^^2^2^3100804^
"^DD",8989.3,8989.3,900,21,1,0)
This field will note when the New Person File (#200) began the VPID 
"^DD",8989.3,8989.3,900,21,2,0)
Enumeration Process.
"^DD",8989.3,8989.3,900,"DT")
3100804
"^DD",8989.3,8989.3,901,0)
PAID Enumeration Started^D^^MPI;2^S %DT="ETX" D ^%DT S X=Y K:X<1 X
"^DD",8989.3,8989.3,901,.1)
PAID Employee File Enumeration Started
"^DD",8989.3,8989.3,901,3)
(No range limit on date)
"^DD",8989.3,8989.3,901,21,0)
^^2^2^3100804^
"^DD",8989.3,8989.3,901,21,1,0)
This field will note when the PAID EMPLOYEE (#450) file began the VPID 
"^DD",8989.3,8989.3,901,21,2,0)
Enumeration Process.
"^DD",8989.3,8989.3,901,"DT")
3100804
"^DD",8989.3,8989.3,902,0)
New Person Enumeration Finish^D^^MPI;3^S %DT="ETX" D ^%DT S X=Y K:X<1 X
"^DD",8989.3,8989.3,902,.1)
New Person Enumeration Finish Date
"^DD",8989.3,8989.3,902,3)
(No range limit on date)
"^DD",8989.3,8989.3,902,21,0)
^^2^2^3100804^
"^DD",8989.3,8989.3,902,21,1,0)
This field will note when the New Person (#200) file completed the VPID
"^DD",8989.3,8989.3,902,21,2,0)
Enumeration Process.
"^DD",8989.3,8989.3,902,"DT")
3100804
"^DD",8989.3,8989.3,903,0)
PAID Enumeration Finish^D^^MPI;4^S %DT="ETX" D ^%DT S X=Y K:X<1 X
"^DD",8989.3,8989.3,903,.1)
PAID Enumeration Finished
"^DD",8989.3,8989.3,903,3)
(No range limit on date)
"^DD",8989.3,8989.3,903,21,0)
^^2^2^3100804^
"^DD",8989.3,8989.3,903,21,1,0)
This field will note when the PAID EMPLOYEE (#450) file completed the VPID
"^DD",8989.3,8989.3,903,21,2,0)
Enumeration Process.
"^DD",8989.3,8989.3,903,"DT")
3100804
"BLD",2810,6)
^448
**END**
**END**
