Released XU*8*522 SEQ #493
Extracted from mail message
**KIDS**:XU*8.0*522^

**INSTALL NAME**
XU*8.0*522
"BLD",1219,0)
XU*8.0*522^KERNEL^0^3121226^y
"BLD",1219,1,0)
^^2^2^3121204^
"BLD",1219,1,1,0)
See the patch module on Forum for the description.
"BLD",1219,1,2,0)
XU*8*522
"BLD",1219,4,0)
^9.64PA^^0
"BLD",1219,6.3)
10
"BLD",1219,"INID")
^n
"BLD",1219,"INIT")
XUP522
"BLD",1219,"KRN",0)
^9.67PA^9002226^21
"BLD",1219,"KRN",.4,0)
.4
"BLD",1219,"KRN",.401,0)
.401
"BLD",1219,"KRN",.402,0)
.402
"BLD",1219,"KRN",.403,0)
.403
"BLD",1219,"KRN",.5,0)
.5
"BLD",1219,"KRN",.84,0)
.84
"BLD",1219,"KRN",3.6,0)
3.6
"BLD",1219,"KRN",3.8,0)
3.8
"BLD",1219,"KRN",9.2,0)
9.2
"BLD",1219,"KRN",9.8,0)
9.8
"BLD",1219,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",1219,"KRN",9.8,"NM",1,0)
XUSBSE1^^0^B88363702
"BLD",1219,"KRN",9.8,"NM","B","XUSBSE1",1)

"BLD",1219,"KRN",19,0)
19
"BLD",1219,"KRN",19.1,0)
19.1
"BLD",1219,"KRN",101,0)
101
"BLD",1219,"KRN",409.61,0)
409.61
"BLD",1219,"KRN",771,0)
771
"BLD",1219,"KRN",779.2,0)
779.2
"BLD",1219,"KRN",870,0)
870
"BLD",1219,"KRN",8989.51,0)
8989.51
"BLD",1219,"KRN",8989.51,"NM",0)
^9.68A^1^1
"BLD",1219,"KRN",8989.51,"NM",1,0)
XU522^^0
"BLD",1219,"KRN",8989.51,"NM","B","XU522",1)

"BLD",1219,"KRN",8989.52,0)
8989.52
"BLD",1219,"KRN",8994,0)
8994
"BLD",1219,"KRN",9002226,0)
9002226
"BLD",1219,"KRN","B",.4,.4)

"BLD",1219,"KRN","B",.401,.401)

"BLD",1219,"KRN","B",.402,.402)

"BLD",1219,"KRN","B",.403,.403)

"BLD",1219,"KRN","B",.5,.5)

"BLD",1219,"KRN","B",.84,.84)

"BLD",1219,"KRN","B",3.6,3.6)

"BLD",1219,"KRN","B",3.8,3.8)

"BLD",1219,"KRN","B",9.2,9.2)

"BLD",1219,"KRN","B",9.8,9.8)

"BLD",1219,"KRN","B",19,19)

"BLD",1219,"KRN","B",19.1,19.1)

"BLD",1219,"KRN","B",101,101)

"BLD",1219,"KRN","B",409.61,409.61)

"BLD",1219,"KRN","B",771,771)

"BLD",1219,"KRN","B",779.2,779.2)

"BLD",1219,"KRN","B",870,870)

"BLD",1219,"KRN","B",8989.51,8989.51)

"BLD",1219,"KRN","B",8989.52,8989.52)

"BLD",1219,"KRN","B",8994,8994)

"BLD",1219,"KRN","B",9002226,9002226)

"BLD",1219,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",1219,"QUES",0)
^9.62^^
"BLD",1219,"REQB",0)
^9.611^6^6
"BLD",1219,"REQB",1,0)
XU*8.0*404^2
"BLD",1219,"REQB",2,0)
XWB*1.1*45^2
"BLD",1219,"REQB",3,0)
XU*8.0*439^2
"BLD",1219,"REQB",4,0)
XU*8.0*523^2
"BLD",1219,"REQB",5,0)
XWB*1.1*53^2
"BLD",1219,"REQB",6,0)
XU*8.0*595^2
"BLD",1219,"REQB","B","XU*8.0*404",1)

"BLD",1219,"REQB","B","XU*8.0*439",3)

"BLD",1219,"REQB","B","XU*8.0*523",4)

"BLD",1219,"REQB","B","XU*8.0*595",6)

"BLD",1219,"REQB","B","XWB*1.1*45",2)

"BLD",1219,"REQB","B","XWB*1.1*53",5)

"INIT")
XUP522
"KRN",8989.51,314,-1)
0^1
"KRN",8989.51,314,0)
XU522^Patch 522 Switch^0^^CAPRI status
"KRN",8989.51,314,1)
S^Y:Yes, disable;E:disable and trap attempts;N:No, do not disable;L:do not disable but trap attempts^Determines whether old-style (less secure) CAPRI logins are permitted and logged
"KRN",8989.51,314,6)

"KRN",8989.51,314,20,0)
^^4^4^3120601^
"KRN",8989.51,314,20,1,0)
Enter Y (YES) to disable old-style CAPRI logins (default).
"KRN",8989.51,314,20,2,0)
Enter E (ERROR) to disable old-style CAPRI logins and trap attempts.
"KRN",8989.51,314,20,3,0)
Enter N (NO) to leave old-style CAPRI logins enabled.
"KRN",8989.51,314,20,4,0)
Enter L (DEBUG) to leave old-style CAPRI logins enabled but trap attempts.
"KRN",8989.51,314,30,0)
^8989.513I^1^1
"KRN",8989.51,314,30,1,0)
1^4.2
"MBREQ")
0
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^0
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3090706^3090706^6
"PKG",3,22,1,"PAH",1,0)
522^3121226^20
"PKG",3,22,1,"PAH",1,1,0)
^^2^2^3121226
"PKG",3,22,1,"PAH",1,1,1,0)
See the patch module on Forum for the description.
"PKG",3,22,1,"PAH",1,1,2,0)
XU*8*522
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","XUP522")
0^^B1027638^n/a
"RTN","XUP522",1,0)
XUP522 ;JLI/FO-OAK-POST INSTALL FOR XU*8*522 TO SET PARAMETER XU522 ;12/04/12  11:50
"RTN","XUP522",2,0)
 ;;8.0;KERNEL;**522**;Jul 10, 1995;Build 10
"RTN","XUP522",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified
"RTN","XUP522",4,0)
 ;
"RTN","XUP522",5,0)
EN ;
"RTN","XUP522",6,0)
 N PAR,ENT,INST,VAL,ERR,I
"RTN","XUP522",7,0)
 S PAR=$O(^XTV(8989.51,"B","XU522",0))
"RTN","XUP522",8,0)
 D GETENT^XPAREDIT(.ENT,PAR_"^XU522",0)
"RTN","XUP522",9,0)
 S INST=1,VAL="N"
"RTN","XUP522",10,0)
 D EN^XPAR(ENT,PAR,INST,VAL,.ERR)
"RTN","XUP522",11,0)
 I $D(ERR),$G(ERR)'=0 W:($D(ERR)#2) !!,ERR F I=0:0 S I=$O(ERR(I)) Q:I'>0  W !,ERR(I)
"RTN","XUP522",12,0)
 I $D(ERR),$G(ERR)'=0 W !!,"WARNING - The XU522 parameter needs to be set correctly" Q
"RTN","XUP522",13,0)
 W !,"XU522 parameter is set to 'do not disable'"
"RTN","XUP522",14,0)
 Q
"RTN","XUSBSE1")
0^1^B88363702^B82678942
"RTN","XUSBSE1",1,0)
XUSBSE1 ;JLI/OAK-OIFO - MODIFICATIONS FOR BSE ;06/01/12  10:13
"RTN","XUSBSE1",2,0)
 ;;8.0;KERNEL;**404,439,523,595,522**;Jul 10, 1995;Build 10
"RTN","XUSBSE1",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","XUSBSE1",4,0)
 ;
"RTN","XUSBSE1",5,0)
 ; SETVISIT - returns a BSE token
"RTN","XUSBSE1",6,0)
SETVISIT(RES) ; .RPC
"RTN","XUSBSE1",7,0)
 N TOKEN,O
"RTN","XUSBSE1",8,0)
 S TOKEN=$$HANDLE^XUSRB4("XUSBSE",1)
"RTN","XUSBSE1",9,0)
 S ^XTMP(TOKEN,1)=$$ENCRYP^XUSRB1($$GET^XUESSO1(DUZ))
"RTN","XUSBSE1",10,0)
 S ^XTMP(TOKEN,3)=+$H ;Set expiration day
"RTN","XUSBSE1",11,0)
 L -^XTMP(TOKEN) ;Lock set in $$HANDLE
"RTN","XUSBSE1",12,0)
 S RES=TOKEN
"RTN","XUSBSE1",13,0)
 Q
"RTN","XUSBSE1",14,0)
 ;
"RTN","XUSBSE1",15,0)
 ; GETVISIT - returns demographics for user indicated by TOKEN
"RTN","XUSBSE1",16,0)
 ;   output - RES - passed by reference, contains global location on return
"RTN","XUSBSE1",17,0)
 ;   input  - TOKEN - token value returned by remote site
"RTN","XUSBSE1",18,0)
GETVISIT(RES,TOKEN) ; .RPC
"RTN","XUSBSE1",19,0)
 N O,X
"RTN","XUSBSE1",20,0)
 S RES="",O=0
"RTN","XUSBSE1",21,0)
 ; shouldn't come in with a null token ; JLI 091218
"RTN","XUSBSE1",22,0)
 I TOKEN="" S X=$$LOGERR("BSE NULL TOKEN") Q  ; JLI 091218, p595 changed to function call
"RTN","XUSBSE1",23,0)
 ;Check expiration time, and if it has passed.
"RTN","XUSBSE1",24,0)
 L +^XTMP(TOKEN):10 I '$T Q  ; If ^XTMP is purged, token context will be lost
"RTN","XUSBSE1",25,0)
 I ($G(^XTMP(TOKEN,3))-$H) K ^XTMP(TOKEN)
"RTN","XUSBSE1",26,0)
 S RES=$G(^XTMP(TOKEN,1)) S:$L(RES) RES=$$DECRYP^XUSRB1(RES)
"RTN","XUSBSE1",27,0)
 L -^XTMP(TOKEN)
"RTN","XUSBSE1",28,0)
 S:'$L(RES) X=$$LOGERR("BSE LOGIN ERROR") ;p595
"RTN","XUSBSE1",29,0)
 Q
"RTN","XUSBSE1",30,0)
 ;
"RTN","XUSBSE1",31,0)
OLDCAPRI(XWBUSRNM) ;The old CAPRI code, disable with system parameter XU522.
"RTN","XUSBSE1",32,0)
 ; Return 1 if a valid user, else 0.
"RTN","XUSBSE1",33,0)
 ; ZEXCEPT: XTMUNIT,ZZUTPVAL - Variables set for unit testing
"RTN","XUSBSE1",34,0)
 N XVAL,XOPTION,XVAL522
"RTN","XUSBSE1",35,0)
 I '$D(XTMUNIT) D
"RTN","XUSBSE1",36,0)
 .S XVAL522=$$GET^XPAR("SYS","XU522",1,"Q")  ;p522 system parameter XU522 controls CAPRI login disabling, logging
"RTN","XUSBSE1",37,0)
 E  D
"RTN","XUSBSE1",38,0)
 .S XVAL522=ZZUTPVAL
"RTN","XUSBSE1",39,0)
 D:(XVAL522="E"!(XVAL522="L")) APPERROR^%ZTER("OLDCAPRI LOGIN ATTEMPT")  ;p522 record CAPRI login attempt if XU522 = E or L
"RTN","XUSBSE1",40,0)
 Q:(XVAL522'="L")&(XVAL522'="N") 0  ;p522 fully activate BSE unless param XU522 = N or L
"RTN","XUSBSE1",41,0)
 ;
"RTN","XUSBSE1",42,0)
 S XVAL=$$PUT^XUESSO1($P(XWBUSRNM,U,3,99)) ; Sign in as Visitor
"RTN","XUSBSE1",43,0)
 I XVAL D
"RTN","XUSBSE1",44,0)
 . S XOPTION=$$FIND1^DIC(19,"","X","DVBA CAPRI GUI")
"RTN","XUSBSE1",45,0)
 . D SETCNTXT(XOPTION) S DTIME=$$DTIME^XUP(DUZ),DUZ("REMAPP")="^Old CAPRI"
"RTN","XUSBSE1",46,0)
 Q $S(XVAL>0:1,1:0)
"RTN","XUSBSE1",47,0)
 ;
"RTN","XUSBSE1",48,0)
 ; CHKUSER - determines if a BSE sign-on is valid
"RTN","XUSBSE1",49,0)
 ;   INPUTSTR - input - String of characters from client
"RTN","XUSBSE1",50,0)
 ;   return value - 1 if a valid user, else 0
"RTN","XUSBSE1",51,0)
 ; called from XUSRB
"RTN","XUSBSE1",52,0)
CHKUSER(INPUTSTR) ;
"RTN","XUSBSE1",53,0)
 N X,XUCODE,XUENTRY,XUSTR,XUTOKEN
"RTN","XUSBSE1",54,0)
 ; ZEXCEPT: XUREMAPP - global variable naming the REMOTE APPLICATION in use
"RTN","XUSBSE1",55,0)
 ; ZEXCEPT: DTIME - Kernel exemption
"RTN","XUSBSE1",56,0)
 I +INPUTSTR=-31,INPUTSTR["DVBA_" Q $$OLDCAPRI(INPUTSTR)
"RTN","XUSBSE1",57,0)
 I +INPUTSTR'=-35 S X=$$LOGERR("BSE LOGIN ERROR") Q 0  ;p595
"RTN","XUSBSE1",58,0)
 S INPUTSTR=$P(INPUTSTR,U,2,99)
"RTN","XUSBSE1",59,0)
 K ^TMP("XUSBSE1",$J)
"RTN","XUSBSE1",60,0)
 S XUCODE=$$DECRYP^XUSRB1(INPUTSTR) ;TMP
"RTN","XUSBSE1",61,0)
 S XUCODE=$$EN^XUSHSH($P(XUCODE,U))
"RTN","XUSBSE1",62,0)
 S XUENTRY=$$FIND1^DIC(8994.5,"","X",XUCODE,"ACODE") D:XUENTRY>0
"RTN","XUSBSE1",63,0)
 . S DUZ("REMAPP")=XUENTRY_U_$$GET1^DIQ(8994.5,XUENTRY_",",.01)
"RTN","XUSBSE1",64,0)
 . S XUTOKEN=$P($$DECRYP^XUSRB1(INPUTSTR),U,2)
"RTN","XUSBSE1",65,0)
 . S XUSTR=$P($$DECRYP^XUSRB1(INPUTSTR),U,3,4)
"RTN","XUSBSE1",66,0)
 . S XUENTRY=$$BSEUSER(XUENTRY,XUTOKEN,XUSTR)
"RTN","XUSBSE1",67,0)
 . Q
"RTN","XUSBSE1",68,0)
 S DTIME=$$DTIME^XUP(DUZ) ;p523
"RTN","XUSBSE1",69,0)
 S:(XUENTRY'>0) X=$$LOGERR("BSE LOGIN ERROR") ;p595
"RTN","XUSBSE1",70,0)
 Q $S(XUENTRY'>0:0,1:XUENTRY)
"RTN","XUSBSE1",71,0)
 ;
"RTN","XUSBSE1",72,0)
 ; BSEUSER - returns internal entry number for authenicated user or 0
"RTN","XUSBSE1",73,0)
 ;   ENTRY - input - internal entry number in REMOTE APPLICATION file
"RTN","XUSBSE1",74,0)
 ;   TOKEN - input - token from authenticaing site
"RTN","XUSBSE1",75,0)
 ;   STR   - input - remainder of input string (2 pieces)
"RTN","XUSBSE1",76,0)
BSEUSER(ENTRY,TOKEN,STR) ;
"RTN","XUSBSE1",77,0)
 N X,XUIEN,XUCONTXT,XUDEMOG,XCNT,XVAL,ARRAY
"RTN","XUSBSE1",78,0)
 ; ZEXCEPT: XWBSEC - Kernel exemption
"RTN","XUSBSE1",79,0)
 S XUIEN=0,XUDEMOG=""
"RTN","XUSBSE1",80,0)
 S XCNT=0 F  S XCNT=$O(^XWB(8994.5,ENTRY,1,XCNT)) Q:XCNT'>0  S XVAL=^(XCNT,0) D  Q:XUDEMOG'=""
"RTN","XUSBSE1",81,0)
 . ; CODE TO HANDLE CONNECTION TYPE AND CONNECTIONS
"RTN","XUSBSE1",82,0)
 . I $P(XVAL,U)="M" S XUDEMOG=$$M2M($P(XVAL,U,3),$P(XVAL,U,2),TOKEN) D CLOSE^XWBM2MC() Q
"RTN","XUSBSE1",83,0)
 . I $P(XVAL,U)="R" S XUDEMOG=$$XWB($P(XVAL,U,3),$P(XVAL,U,2),TOKEN) Q
"RTN","XUSBSE1",84,0)
 . I $P(XVAL,U)="H" S XUDEMOG=$$POST1^XUSBSE2(.ARRAY,$P(XVAL,U,3),$P(XVAL,U,2),$P(XVAL,U,4),"xVAL="_TOKEN) Q
"RTN","XUSBSE1",85,0)
 . I $P(XVAL,U)="S" S XUDEMOG=$$HOME(TOKEN,XVAL,STR) Q  ;p522 station-based authentication, STR contains station number and port
"RTN","XUSBSE1",86,0)
 . Q
"RTN","XUSBSE1",87,0)
 ; if invalid set XWBSEC so an error is reported in the GUI application
"RTN","XUSBSE1",88,0)
 I +XUDEMOG=-1 S XWBSEC="BSE ERROR - "_$P(XUDEMOG,"^",2)
"RTN","XUSBSE1",89,0)
 I $L(XUDEMOG,"^")>2 D
"RTN","XUSBSE1",90,0)
 . S XUCONTXT=$P($G(^XWB(8994.5,ENTRY,0)),U,2)
"RTN","XUSBSE1",91,0)
 . S XUIEN=$$SETUP(XUDEMOG,XUCONTXT)
"RTN","XUSBSE1",92,0)
 S:(XUIEN'>0) X=$$LOGERR("BSE LOGIN ERROR") ;p595
"RTN","XUSBSE1",93,0)
 Q $S(XUIEN'>0:0,1:XUIEN)
"RTN","XUSBSE1",94,0)
 ;
"RTN","XUSBSE1",95,0)
XWB(SERVER,PORT,TOKEN) ;Special Broker service
"RTN","XUSBSE1",96,0)
 N DEMOSTR,IO,XWBTDEV,XWBRBUF
"RTN","XUSBSE1",97,0)
 Q $$CALLBSE^XWBTCPM2(SERVER,PORT,TOKEN)
"RTN","XUSBSE1",98,0)
 ;
"RTN","XUSBSE1",99,0)
M2M(SERVER,PORT,TOKEN) ;
"RTN","XUSBSE1",100,0)
 N DEMOGSTR,XWBCRLFL,RETRNVAL,XUSBSARR
"RTN","XUSBSE1",101,0)
 S DEMOGSTR=""
"RTN","XUSBSE1",102,0)
 N XWBSTAT,XWBPARMS,XWBTDEV,XWBNULL
"RTN","XUSBSE1",103,0)
 S XWBPARMS("ADDRESS")=SERVER,XWBPARMS("PORT")=PORT
"RTN","XUSBSE1",104,0)
 S XWBPARMS("RETRIES")=3 ;Retries 3 times to open
"RTN","XUSBSE1",105,0)
 ;
"RTN","XUSBSE1",106,0)
 I '$$OPEN^XWBRL(.XWBPARMS) Q "NO OPEN"
"RTN","XUSBSE1",107,0)
 S XWBPARMS("URI")="XUS GET VISITOR"
"RTN","XUSBSE1",108,0)
 D CLEARP^XWBM2MEZ
"RTN","XUSBSE1",109,0)
 D SETPARAM^XWBM2MEZ(1,"STRING",TOKEN)
"RTN","XUSBSE1",110,0)
 S XWBPARMS("URI")="XUS GET VISITOR"
"RTN","XUSBSE1",111,0)
 S XWBPARMS("RESULTS")=$NA(^TMP("XUSBSE1",$J))
"RTN","XUSBSE1",112,0)
 S XWBCRLFL=0
"RTN","XUSBSE1",113,0)
 D REQUEST^XWBRPCC(.XWBPARMS)
"RTN","XUSBSE1",114,0)
 I XWBCRLFL S RETRNVAL="XWBCRLFL IS TRUE" G M2MEXIT ; S @M2MLOC="XWBCRLFL IS TRUE" Q  ; Q 0
"RTN","XUSBSE1",115,0)
 ;
"RTN","XUSBSE1",116,0)
 I '$$EXECUTE^XWBVLC(.XWBPARMS) S RETRNVAL="FAILURE ON EXECUTE" G M2MEXIT ; S @M2MLOC="failure on execute" Q  ;Run RPC and place raw XML results in ^TMP("XWBM2MVLC"
"RTN","XUSBSE1",117,0)
 D PARSE^XWBRPC(.XWBPARMS,"XUSBSARR") ;Parse out raw XML and place results in ^TMP("XWBM2MRPC"
"RTN","XUSBSE1",118,0)
 S RETRNVAL=$G(XUSBSARR(1))
"RTN","XUSBSE1",119,0)
M2MEXIT ;
"RTN","XUSBSE1",120,0)
 D CLOSE^XWBM2MEZ
"RTN","XUSBSE1",121,0)
 Q RETRNVAL
"RTN","XUSBSE1",122,0)
 ;
"RTN","XUSBSE1",123,0)
 ; HOME - return value = string of demographic characteristics
"RTN","XUSBSE1",124,0)
 ;   input SERVER - server address
"RTN","XUSBSE1",125,0)
 ;   input PORT   - port number for connection
"RTN","XUSBSE1",126,0)
 ;   input TOKEN  - token to identify user to authenticating server
"RTN","XUSBSE1",127,0)
 ;   input BSE    - Parts 3 and 4 of string passed in.
"RTN","XUSBSE1",128,0)
 ;   input RAD    - Data from Remote application file.
"RTN","XUSBSE1",129,0)
HOME(TOKEN,RAD,BSE) ;Call home for token.
"RTN","XUSBSE1",130,0)
 N X,XUESSO,PORT,STN,IP
"RTN","XUSBSE1",131,0)
 D:$G(XWBDEBUG) LOG^XWBDLOG("ENTERED HOME BSE: "_BSE) ; JLI 091007 DEBUG
"RTN","XUSBSE1",132,0)
 Q:$P(RAD,U,2)'=-1 "" ;Not setup right
"RTN","XUSBSE1",133,0)
 ;Set Station #, port from passed in data
"RTN","XUSBSE1",134,0)
 S STN=$P(BSE,U),PORT=$P(BSE,U,2),XUESSO=""
"RTN","XUSBSE1",135,0)
 S IP=$$IPFLOC(STN) S:'$L(IP) IP=$$SITESVC(STN) I '$L(IP) S XUESSO="-1^ADDRESS FOR STN "_STN_" NOT FOUND" S X=$$LOGERR("BSE LOGIN ERROR") ;p595
"RTN","XUSBSE1",136,0)
 D:$G(XWBDEBUG) LOG^XWBDLOG("HOME BSE IP: "_IP_" PORT:"_PORT)
"RTN","XUSBSE1",137,0)
 I $L(IP) S XUESSO=$$CALLBSE^XWBTCPM2(IP,PORT,TOKEN,STN)
"RTN","XUSBSE1",138,0)
 D:$G(XWBDEBUG) LOG^XWBDLOG("LEAVING HOME XUESSO: "_XUESSO)
"RTN","XUSBSE1",139,0)
 I XUESSO="Didn't open connection." S XUESSO="-1^COULD NOT CONNECT TO STN "_STN_" USING PORT "_PORT
"RTN","XUSBSE1",140,0)
 I XUESSO="No Response" S XUESSO="-1^BSE TOKEN EXPIRED"
"RTN","XUSBSE1",141,0)
 Q XUESSO
"RTN","XUSBSE1",142,0)
 ;
"RTN","XUSBSE1",143,0)
IPFLOC(L) ;Get the addess from the station number/HL LOGICAL LINK file
"RTN","XUSBSE1",144,0)
 N XUSBSE,I,RET,ADD,IP,STNPRNT
"RTN","XUSBSE1",145,0)
 ; next line added to handle IP input directly
"RTN","XUSBSE1",146,0)
 D:$G(XWBDEBUG) LOG^XWBDLOG("L IN IPFLOC: "_L)
"RTN","XUSBSE1",147,0)
 I L?1.3N1"."1.3N1"."1.3N1"."1.3N Q L ; JLI 091007
"RTN","XUSBSE1",148,0)
 S STNPRNT=$P($$PRNT^XUAF4(L),U,2) S:'+STNPRNT STNPRNT=L ;p595 try conv subdiv to parent stn
"RTN","XUSBSE1",149,0)
 D FIND^DIC(870,,".03;.08","X",STNPRNT,,"C",,,"XUSBSE") ;p595 IA# 5449 "C" index lookup
"RTN","XUSBSE1",150,0)
 Q:+$G(XUSBSE("DILIST",0))=0 ""
"RTN","XUSBSE1",151,0)
 S I=0,ADD="",IP=""
"RTN","XUSBSE1",152,0)
 F  S I=$O(XUSBSE("DILIST","ID",I)) Q:'I  D  Q:IP
"RTN","XUSBSE1",153,0)
 . ;New DNS field
"RTN","XUSBSE1",154,0)
 . S ADD=XUSBSE("DILIST","ID",I,.08) I $L(ADD) D  Q:IP'=""
"RTN","XUSBSE1",155,0)
 . . I ADD?1.3N1"."1.3N1"."1.3N1"."1.3N S IP=ADD Q
"RTN","XUSBSE1",156,0)
 . . S IP=$$ADDRESS^XLFNSLK(ADD)
"RTN","XUSBSE1",157,0)
 . . Q
"RTN","XUSBSE1",158,0)
 . ;Mail Domain
"RTN","XUSBSE1",159,0)
 . S ADD=XUSBSE("DILIST","ID",I,.03) I $L(ADD) D  Q:IP'=""
"RTN","XUSBSE1",160,0)
 . . I ADD?1.3N1"."1.3N1"."1.3N1"."1.3N S IP=ADD Q
"RTN","XUSBSE1",161,0)
 . . S IP=$$ADDRESS^XLFNSLK("VISTA."_ADD) S:IP="" IP=$$ADDRESS^XLFNSLK(ADD)
"RTN","XUSBSE1",162,0)
 . . Q
"RTN","XUSBSE1",163,0)
 Q IP
"RTN","XUSBSE1",164,0)
 ;
"RTN","XUSBSE1",165,0)
SITESVC(STNNUM) ;p595 Get IP from the stn# from VISTASITESERVICE
"RTN","XUSBSE1",166,0)
 N IP,STNPRNT
"RTN","XUSBSE1",167,0)
 S STNPRNT=$P($$PRNT^XUAF4(STNNUM),U,2) S:'+STNPRNT STNPRNT=STNNUM ;p595 try conv subdiv to parent stn
"RTN","XUSBSE1",168,0)
 S IP=$$WEBADDRS(STNPRNT) I IP'?1.3N1"."1.3N1"."1.3N1"."1.3N S IP=$$ADDRESS^XLFNSLK(IP) ;p595
"RTN","XUSBSE1",169,0)
 Q IP
"RTN","XUSBSE1",170,0)
 ;
"RTN","XUSBSE1",171,0)
WEBADDRS(STNNUM) ;
"RTN","XUSBSE1",172,0)
 N IP,URL,XUSBSE,RESULTS,I,X,POP
"RTN","XUSBSE1",173,0)
 D FIND^DIC(2005.2,,"1","MO","VISTASITESERVICE",,,,,"XUSBSE")
"RTN","XUSBSE1",174,0)
 S URL=$G(XUSBSE("DILIST","ID",1,1))
"RTN","XUSBSE1",175,0)
 D EN1^XUSBSE2(URL_"/getSite?siteID="_STNNUM,.RESULTS)
"RTN","XUSBSE1",176,0)
 S X="" F I=1:1 Q:'$D(RESULTS(I))  I RESULTS(I)["hostname>" S X=$P($P(RESULTS(I),"<hostname>",2),"</hostname>") Q
"RTN","XUSBSE1",177,0)
 Q X
"RTN","XUSBSE1",178,0)
 ;
"RTN","XUSBSE1",179,0)
 ; SETUP - setup user as visitor, add context option
"RTN","XUSBSE1",180,0)
 ; return value = internal entry number for user, or 0
"RTN","XUSBSE1",181,0)
 ;   input XUDEMOG  - string of demographic characteristics
"RTN","XUSBSE1",182,0)
 ;   input XUCONTXT - context option to be given to user
"RTN","XUSBSE1",183,0)
SETUP(XUDEMOG,XUCONTXT) ;
"RTN","XUSBSE1",184,0)
 I '$$PUT^XUESSO1(XUDEMOG) Q 0
"RTN","XUSBSE1",185,0)
 I $G(DUZ)'>0 Q 0
"RTN","XUSBSE1",186,0)
 D SETCNTXT(XUCONTXT)
"RTN","XUSBSE1",187,0)
 Q DUZ
"RTN","XUSBSE1",188,0)
 ;
"RTN","XUSBSE1",189,0)
SETCNTXT(XOPT) ;
"RTN","XUSBSE1",190,0)
 N OPT,XUCONTXT,X
"RTN","XUSBSE1",191,0)
 S XUCONTXT="`"_XOPT
"RTN","XUSBSE1",192,0)
 I $$FIND1^DIC(19,"","X",XUCONTXT)'>0 S X=$$LOGERR("BSE LOGIN ERROR") Q  ; context option not in option file
"RTN","XUSBSE1",193,0)
 ;Have to use $D because of screen in 200.03 keeps FIND1^DIC from working.
"RTN","XUSBSE1",194,0)
 I '$D(^VA(200,DUZ,203,"B",XOPT)) D
"RTN","XUSBSE1",195,0)
 . ; Have to give the user a delegated option
"RTN","XUSBSE1",196,0)
 . N XARR S XARR(200.19,"+1,"_DUZ_",",.01)=XUCONTXT
"RTN","XUSBSE1",197,0)
 . D UPDATE^DIE("E","XARR")
"RTN","XUSBSE1",198,0)
 . ; And now she can give himself the context option
"RTN","XUSBSE1",199,0)
 . K XARR S XARR(200.03,"+1,"_DUZ_",",.01)=XUCONTXT
"RTN","XUSBSE1",200,0)
 . D UPDATE^DIE("E","XARR") ; Give context option as a secondary menu item
"RTN","XUSBSE1",201,0)
 . S ^XUTL("XQ",$J,"DUZ(BSE)")=XUCONTXT
"RTN","XUSBSE1",202,0)
 . ; But now we have to remove the delegated option
"RTN","XUSBSE1",203,0)
 . S OPT=$$FIND1^DIC(200.19,","_DUZ_",","X",XUCONTXT)
"RTN","XUSBSE1",204,0)
 . I OPT>0 D
"RTN","XUSBSE1",205,0)
 . . K XARR S XARR(200.19,(OPT_","_DUZ_","),.01)="@"
"RTN","XUSBSE1",206,0)
 . . D FILE^DIE("E","XARR")
"RTN","XUSBSE1",207,0)
 . . Q
"RTN","XUSBSE1",208,0)
 . Q
"RTN","XUSBSE1",209,0)
 Q
"RTN","XUSBSE1",210,0)
 ;
"RTN","XUSBSE1",211,0)
STNTEST ; tests station#-to-IP conversion (IPFLOC,WEBADDRS) used by HOME station#-based callback
"RTN","XUSBSE1",212,0)
 N XUSLSTI,XUSLSTV,XUSSTN,XUSIP1,XUSIP2,XUSBSE
"RTN","XUSBSE1",213,0)
 W !,"Broker Security Enhancement (BSE) Station Number-to-IP conversion test (for BSE"
"RTN","XUSBSE1",214,0)
 W !,"callbacks to home system). Note: it's not necessarily wrong if results differ"
"RTN","XUSBSE1",215,0)
 W !,"or are blank. 2 methods' results are listed: HL LOGICAL LINK/VISTASITESERVICE"
"RTN","XUSBSE1",216,0)
 ;
"RTN","XUSBSE1",217,0)
 D FIND^DIC(2005.2,,"1","MO","VISTASITESERVICE",,,,,"XUSBSE")
"RTN","XUSBSE1",218,0)
 W !!," local VISTASITESERVICE server:",!," ",$G(XUSBSE("DILIST","ID",1,1)),"",!
"RTN","XUSBSE1",219,0)
 ;
"RTN","XUSBSE1",220,0)
 K ^TMP($J,"XUSBSE1")
"RTN","XUSBSE1",221,0)
 DO LIST^DIC(4,,"@;.01;11;99;101","IP",,,,"D",,,$NA(^TMP($J,"XUSBSE1")))
"RTN","XUSBSE1",222,0)
 S XUSLSTI=0 F  S XUSLSTI=$O(^TMP($J,"XUSBSE1","DILIST",XUSLSTI)) Q:'+XUSLSTI  D
"RTN","XUSBSE1",223,0)
 . S XUSLSTV=^TMP($J,"XUSBSE1","DILIST",XUSLSTI,0)
"RTN","XUSBSE1",224,0)
 . Q:+$P(XUSLSTV,U,5)
"RTN","XUSBSE1",225,0)
 . S XUSSTN=$P(XUSLSTV,U,4) Q:'$$TF^XUAF4(XUSSTN)
"RTN","XUSBSE1",226,0)
 . S XUSIP1=$$IPFLOC(XUSSTN),XUSIP2=$$SITESVC(XUSSTN)
"RTN","XUSBSE1",227,0)
 . W !,XUSSTN,?8,"(",$P(XUSLSTV,U,2),"): " I $L(XUSIP1)!$L(XUSIP2) W $S($L(XUSIP1):XUSIP1,1:"blank"),"/",$S($L(XUSIP2):XUSIP2,1:"blank") I $L(XUSIP1),$L(XUSIP2),(XUSIP1'=XUSIP2) W " ***DIFFERENT***"
"RTN","XUSBSE1",228,0)
 K ^TMP($J,"XUSBSE1")
"RTN","XUSBSE1",229,0)
 Q
"RTN","XUSBSE1",230,0)
LOGERR(XUSETXT) ; log an error in error trap for failed login attempts ; p595
"RTN","XUSBSE1",231,0)
 ; XUSETXT is the error subject line $ZE
"RTN","XUSBSE1",232,0)
 ; The function returns 0 if the error was screened, and 1 if an error was trapped
"RTN","XUSBSE1",233,0)
 N XUSAPP
"RTN","XUSBSE1",234,0)
 ; ZEXCEPT: XWBSEC - Kernel exemption
"RTN","XUSBSE1",235,0)
 ; ZEXCEPT: XUDEMOG - Kernel exemption
"RTN","XUSBSE1",236,0)
 S XUSAPP=$P($G(DUZ("REMAPP")),U,2)
"RTN","XUSBSE1",237,0)
 I $P($G(XUDEMOG),U,2)="BSE TOKEN EXPIRED" Q 0  ; screen out "TOKEN EXPIRED" errors
"RTN","XUSBSE1",238,0)
 I $G(XWBSEC)="BSE ERROR - BSE TOKEN EXPIRED" Q 0  ; screen out "TOKEN EXPIRED" errors
"RTN","XUSBSE1",239,0)
 I XUSAPP'="" S XUSETXT=XUSETXT_" ("_XUSAPP_")"
"RTN","XUSBSE1",240,0)
 D APPERROR^%ZTER($E(XUSETXT,1,32))
"RTN","XUSBSE1",241,0)
 Q 1
"VER")
8.0^22.0
"BLD",1219,6)
^493
**END**
**END**
