Released XU*8*574 SEQ #469
Extracted from mail message
**KIDS**:XU*8.0*574^

**INSTALL NAME**
XU*8.0*574
"BLD",1372,0)
XU*8.0*574^KERNEL^0^3120201^y
"BLD",1372,1,0)
^^6^6^3110804^
"BLD",1372,1,1,0)
This patch changes the minimum verify code lenght for service accounts
"BLD",1372,1,2,0)
(User Class = CONNECTOR PROXY) from 8 to 12 characters.
"BLD",1372,1,3,0)
 
"BLD",1372,1,4,0)
It also provides a new report as two options (inquire-style and
"BLD",1372,1,5,0)
report-style). The report provides details about connector proxy 
"BLD",1372,1,6,0)
service accounts to help with account management.
"BLD",1372,4,0)
^9.64PA^^
"BLD",1372,6.3)
5
"BLD",1372,"ABPKG")
n
"BLD",1372,"KRN",0)
^9.67PA^9002226^21
"BLD",1372,"KRN",.4,0)
.4
"BLD",1372,"KRN",.401,0)
.401
"BLD",1372,"KRN",.402,0)
.402
"BLD",1372,"KRN",.403,0)
.403
"BLD",1372,"KRN",.5,0)
.5
"BLD",1372,"KRN",.84,0)
.84
"BLD",1372,"KRN",3.6,0)
3.6
"BLD",1372,"KRN",3.8,0)
3.8
"BLD",1372,"KRN",9.2,0)
9.2
"BLD",1372,"KRN",9.8,0)
9.8
"BLD",1372,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",1372,"KRN",9.8,"NM",1,0)
XUSAP1^^0^B170068636
"BLD",1372,"KRN",9.8,"NM",2,0)
XUS2^^0^B54810517
"BLD",1372,"KRN",9.8,"NM",3,0)
XUS4^^0^B6220372
"BLD",1372,"KRN",9.8,"NM","B","XUS2",2)

"BLD",1372,"KRN",9.8,"NM","B","XUS4",3)

"BLD",1372,"KRN",9.8,"NM","B","XUSAP1",1)

"BLD",1372,"KRN",19,0)
19
"BLD",1372,"KRN",19,"NM",0)
^9.68A^3^3
"BLD",1372,"KRN",19,"NM",1,0)
XUSAP PROXY CONN DETAIL ALL^^0
"BLD",1372,"KRN",19,"NM",2,0)
XUSAP PROXY CONN DETAIL INQ^^0
"BLD",1372,"KRN",19,"NM",3,0)
XUOPTUSER^^2
"BLD",1372,"KRN",19,"NM","B","XUOPTUSER",3)

"BLD",1372,"KRN",19,"NM","B","XUSAP PROXY CONN DETAIL ALL",1)

"BLD",1372,"KRN",19,"NM","B","XUSAP PROXY CONN DETAIL INQ",2)

"BLD",1372,"KRN",19.1,0)
19.1
"BLD",1372,"KRN",101,0)
101
"BLD",1372,"KRN",409.61,0)
409.61
"BLD",1372,"KRN",771,0)
771
"BLD",1372,"KRN",779.2,0)
779.2
"BLD",1372,"KRN",870,0)
870
"BLD",1372,"KRN",8989.51,0)
8989.51
"BLD",1372,"KRN",8989.52,0)
8989.52
"BLD",1372,"KRN",8994,0)
8994
"BLD",1372,"KRN",9002226,0)
9002226
"BLD",1372,"KRN","B",.4,.4)

"BLD",1372,"KRN","B",.401,.401)

"BLD",1372,"KRN","B",.402,.402)

"BLD",1372,"KRN","B",.403,.403)

"BLD",1372,"KRN","B",.5,.5)

"BLD",1372,"KRN","B",.84,.84)

"BLD",1372,"KRN","B",3.6,3.6)

"BLD",1372,"KRN","B",3.8,3.8)

"BLD",1372,"KRN","B",9.2,9.2)

"BLD",1372,"KRN","B",9.8,9.8)

"BLD",1372,"KRN","B",19,19)

"BLD",1372,"KRN","B",19.1,19.1)

"BLD",1372,"KRN","B",101,101)

"BLD",1372,"KRN","B",409.61,409.61)

"BLD",1372,"KRN","B",771,771)

"BLD",1372,"KRN","B",779.2,779.2)

"BLD",1372,"KRN","B",870,870)

"BLD",1372,"KRN","B",8989.51,8989.51)

"BLD",1372,"KRN","B",8989.52,8989.52)

"BLD",1372,"KRN","B",8994,8994)

"BLD",1372,"KRN","B",9002226,9002226)

"BLD",1372,"QDEF")
^^^^YES^^^^NO^^NO
"BLD",1372,"QUES",0)
^9.62^^
"BLD",1372,"REQB",0)
^9.611^^0
"KRN",19,148,-1)
2^3
"KRN",19,148,0)
XUOPTUSER^User Management Menu^^M^.5^^^^^^^3^y
"KRN",19,148,10,0)
^19.01IP^9^9
"KRN",19,148,10,8,0)
1557
"KRN",19,148,10,8,"^")
XUSAP PROXY CONN DETAIL INQ
"KRN",19,148,10,9,0)
1556
"KRN",19,148,10,9,"^")
XUSAP PROXY CONN DETAIL ALL
"KRN",19,148,"U")
USER MANAGEMENT MENU
"KRN",19,1556,-1)
0^1
"KRN",19,1556,0)
XUSAP PROXY CONN DETAIL ALL^Proxy (Connector) Detail Report^^R^^^^^^^^KERNEL^y
"KRN",19,1556,1,0)
^19.06^60^60^3120124^^
"KRN",19,1556,1,1,0)
This option provides information about Connector Proxy accounts for the 
"KRN",19,1556,1,2,0)
purposes of:
"KRN",19,1556,1,3,0)
1) Monitoring compliance with the 3-year mandate (per VA Handbook 6500)
"KRN",19,1556,1,4,0)
   to expire/change verify codes for service accounts;
"KRN",19,1556,1,5,0)
2) Reporting any mis-configured connector proxy accounts;
"KRN",19,1556,1,6,0)
3) Listing account activity to help determine whether accounts are 
"KRN",19,1556,1,7,0)
   active, and are being accessed from which remote locations.
"KRN",19,1556,1,8,0)
 
"KRN",19,1556,1,9,0)
When running the report, the following options determine how much 
"KRN",19,1556,1,10,0)
additional content is listed for each account:
"KRN",19,1556,1,11,0)
- Check/display connector proxy fields? YES/NO (checks for mis-configured
"KRN",19,1556,1,12,0)
  accounts)
"KRN",19,1556,1,13,0)
- Scan sign-on log for connector proxy activity? YES/NO (lists account
"KRN",19,1556,1,14,0)
  activity)
"KRN",19,1556,1,15,0)
 
"KRN",19,1556,1,16,0)
Possible categorizations for whether accounts are reported as "Compliant 
"KRN",19,1556,1,17,0)
w/3-year Service Account Mandate?" are:
"KRN",19,1556,1,18,0)
- YES (account is complaint) 
"KRN",19,1556,1,19,0)
- *** NO <---- MUST FIX *** 
"KRN",19,1556,1,20,0)
  (date created and date verify code last changed > 3 years in the past)
"KRN",19,1556,1,21,0)
- No, but user not active. 
"KRN",19,1556,1,22,0)
- UNABLE TO DETERMINE 
"KRN",19,1556,1,23,0)
  (until patch XU*8.0*574, date verify code last changed for Connector
"KRN",19,1556,1,24,0)
  Proxy accounts was incorrectly recorded as 4/10/2005)
"KRN",19,1556,1,25,0)
- unable to det. but not active.
"KRN",19,1556,1,26,0)
 
"KRN",19,1556,1,27,0)
If an account's Date Verify Code Last Changed is listed as "(changed but 
"KRN",19,1556,1,28,0)
date not recorded)", that means the "fake" 4/10/2005" date is present, 
"KRN",19,1556,1,29,0)
and unless the account was created within the last 3 years, it is 
"KRN",19,1556,1,30,0)
impossible to determine if the account is in compliance with the 3-year 
"KRN",19,1556,1,31,0)
mandate.
"KRN",19,1556,1,32,0)
 
"KRN",19,1556,1,33,0)
Also, if there is a value in the XUS Logon Attempt Count field, that 
"KRN",19,1556,1,34,0)
value is displayed, as it could indicate a remote system attempting to 
"KRN",19,1556,1,35,0)
connect and failing with an invalid verify code.
"KRN",19,1556,1,36,0)
 
"KRN",19,1556,1,37,0)
If the option to "Check/display connector proxy fields?" is selected, the 
"KRN",19,1556,1,38,0)
following checks are performed:
"KRN",19,1556,1,39,0)
- Warnings: (any field listed in the warning section should not be 
"KRN",19,1556,1,40,0)
  populated. However, before changing, consult the National Help Desk or 
"KRN",19,1556,1,41,0)
  Customer Support as some applications may (currently) be depending 
"KRN",19,1556,1,42,0)
  (incorrectly) on a mis-configured connector configuration. 
"KRN",19,1556,1,43,0)
- Values for other fields allowed/expected: (field normally populated for
"KRN",19,1556,1,44,0)
  connector proxies)
"KRN",19,1556,1,45,0)
- Other Fields Populated (not expected fields, but not problematic either)
"KRN",19,1556,1,46,0)
- Other Multiples Populated (not expected, but not problematic either)
"KRN",19,1556,1,47,0)
 
"KRN",19,1556,1,48,0)
If the option to "Scan sign-on log for connector proxy activity?" is 
"KRN",19,1556,1,49,0)
selected, the report will scan the sign-on log for all signon activity 
"KRN",19,1556,1,50,0)
associated with the account. Any activity found is displayed, organized 
"KRN",19,1556,1,51,0)
by client IP address, and within IP address, by date of sign-on. The 
"KRN",19,1556,1,52,0)
purpose of this report section is to help a site determine which accounts 
"KRN",19,1556,1,53,0)
are active, and which external systems (by IP address) are logging onto 
"KRN",19,1556,1,54,0)
the site with the specified account. This may help determine which remote 
"KRN",19,1556,1,55,0)
applications a change to the account (such as verify code change) might 
"KRN",19,1556,1,56,0)
impact, and may also help a site determine whether too many remote 
"KRN",19,1556,1,57,0)
applications/data centers are using the same account (which could result 
"KRN",19,1556,1,58,0)
in a more widespread service disruption if an account must be changed). 
"KRN",19,1556,1,59,0)
 
"KRN",19,1556,1,60,0)
This option can be scheduled.
"KRN",19,1556,25)
ENALL^XUSAP1
"KRN",19,1556,200.9)
y
"KRN",19,1556,"U")
PROXY (CONNECTOR) DETAIL REPOR
"KRN",19,1557,-1)
0^2
"KRN",19,1557,0)
XUSAP PROXY CONN DETAIL INQ^Proxy (Connector) Inquire^^R^^^^^^^^KERNEL^y
"KRN",19,1557,1,0)
^^58^58^3120103^
"KRN",19,1557,1,1,0)
This option provides information about Connector Proxy accounts for the 
"KRN",19,1557,1,2,0)
purposes of:
"KRN",19,1557,1,3,0)
1) Monitoring compliance with the 3-year mandate (per VA Handbook 6500)
"KRN",19,1557,1,4,0)
   to expire/change verify codes for service accounts;
"KRN",19,1557,1,5,0)
2) Reporting any mis-configured connector proxy accounts;
"KRN",19,1557,1,6,0)
3) Listing account activity to help determine whether accounts are 
"KRN",19,1557,1,7,0)
   active, and are being accessed from which remote locations.
"KRN",19,1557,1,8,0)
 
"KRN",19,1557,1,9,0)
When running the report, the following options determine how much 
"KRN",19,1557,1,10,0)
additional content is listed for each account:
"KRN",19,1557,1,11,0)
- Check/display connector proxy fields? YES/NO (checks for mis-configured
"KRN",19,1557,1,12,0)
  accounts)
"KRN",19,1557,1,13,0)
- Scan sign-on log for connector proxy activity? YES/NO (lists account
"KRN",19,1557,1,14,0)
  activity)
"KRN",19,1557,1,15,0)
 
"KRN",19,1557,1,16,0)
Possible categorizations for whether accounts are reported as "Compliant 
"KRN",19,1557,1,17,0)
w/3-year Service Account Mandate?" are:
"KRN",19,1557,1,18,0)
- YES (account is complaint) 
"KRN",19,1557,1,19,0)
- *** NO <---- MUST FIX *** 
"KRN",19,1557,1,20,0)
  (date created and date verify code last changed > 3 years in the past)
"KRN",19,1557,1,21,0)
- No, but user not active. 
"KRN",19,1557,1,22,0)
- UNABLE TO DETERMINE 
"KRN",19,1557,1,23,0)
  (until patch XU*8.0*574, date verify code last changed for Connector
"KRN",19,1557,1,24,0)
  Proxy accounts was incorrectly recorded as 4/10/2005)
"KRN",19,1557,1,25,0)
- unable to det. but not active.
"KRN",19,1557,1,26,0)
 
"KRN",19,1557,1,27,0)
If an account's Date Verify Code Last Changed is listed as "(changed but 
"KRN",19,1557,1,28,0)
date not recorded)", that means the "fake" 4/10/2005" date is present, 
"KRN",19,1557,1,29,0)
and unless the account was created within the last 3 years, it is 
"KRN",19,1557,1,30,0)
impossible to determine if the account is in compliance with the 3-year 
"KRN",19,1557,1,31,0)
mandate.
"KRN",19,1557,1,32,0)
 
"KRN",19,1557,1,33,0)
Also, if there is a value in the XUS Logon Attempt Count field, that 
"KRN",19,1557,1,34,0)
value is displayed, as it could indicate a remote system attempting to 
"KRN",19,1557,1,35,0)
connect and failing with an invalid verify code.
"KRN",19,1557,1,36,0)
 
"KRN",19,1557,1,37,0)
If the option to "Check/display connector proxy fields?" is selected, the 
"KRN",19,1557,1,38,0)
following checks are performed:
"KRN",19,1557,1,39,0)
- Warnings: (any field listed in the warning section should not be 
"KRN",19,1557,1,40,0)
  populated. However, before changing, consult the National Help Desk or 
"KRN",19,1557,1,41,0)
  Customer Support as some applications may (currently) be depending 
"KRN",19,1557,1,42,0)
  (incorrectly) on a mis-configured connector configuration. 
"KRN",19,1557,1,43,0)
- Values for other fields allowed/expected: (field normally populated for
"KRN",19,1557,1,44,0)
  connector proxies)
"KRN",19,1557,1,45,0)
- Other Fields Populated (not expected fields, but not problematic either)
"KRN",19,1557,1,46,0)
- Other Multiples Populated (not expected, but not problematic either)
"KRN",19,1557,1,47,0)
 
"KRN",19,1557,1,48,0)
If the option to "Scan sign-on log for connector proxy activity?" is 
"KRN",19,1557,1,49,0)
selected, the report will scan the sign-on log for all signon activity 
"KRN",19,1557,1,50,0)
associated with the account. Any activity found is displayed, organized 
"KRN",19,1557,1,51,0)
by client IP address, and within IP address, by date of sign-on. The 
"KRN",19,1557,1,52,0)
purpose of this report section is to help a site determine which accounts 
"KRN",19,1557,1,53,0)
are active, and which external systems (by IP address) are logging onto 
"KRN",19,1557,1,54,0)
the site with the specified account. This may help determine which remote 
"KRN",19,1557,1,55,0)
applications a change to the account (such as verify code change) might 
"KRN",19,1557,1,56,0)
impact, and may also help a site determine whether too many remote 
"KRN",19,1557,1,57,0)
applications/data centers are using the same account (which could result 
"KRN",19,1557,1,58,0)
in a more widespread service disruption if an account must be changed). 
"KRN",19,1557,25)
EN1^XUSAP1
"KRN",19,1557,"U")
PROXY (CONNECTOR) INQUIRE
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^0
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3090706^3090706^6
"PKG",3,22,1,"PAH",1,0)
574^3120201
"PKG",3,22,1,"PAH",1,1,0)
^^6^6^3120201
"PKG",3,22,1,"PAH",1,1,1,0)
This patch changes the minimum verify code lenght for service accounts
"PKG",3,22,1,"PAH",1,1,2,0)
(User Class = CONNECTOR PROXY) from 8 to 12 characters.
"PKG",3,22,1,"PAH",1,1,3,0)
 
"PKG",3,22,1,"PAH",1,1,4,0)
It also provides a new report as two options (inquire-style and
"PKG",3,22,1,"PAH",1,1,5,0)
report-style). The report provides details about connector proxy 
"PKG",3,22,1,"PAH",1,1,6,0)
service accounts to help with account management.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","XUS2")
0^2^B54810517^B48747049
"RTN","XUS2",1,0)
XUS2 ;SF/RWF - TO CHECK OR RETURN USER ATTRIBUTES ;2/1/2012
"RTN","XUS2",2,0)
 ;;8.0;KERNEL;**59,180,313,419,437,574**;Jul 10, 1995;Build 5
"RTN","XUS2",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified
"RTN","XUS2",4,0)
 Q
"RTN","XUS2",5,0)
 ;
"RTN","XUS2",6,0)
ACCED ; ACCESS CODE EDIT from DD
"RTN","XUS2",7,0)
 I "Nn"[$E(X,1) S X="" Q
"RTN","XUS2",8,0)
 I "Yy"'[$E(X,1) K X Q
"RTN","XUS2",9,0)
 N DIR,DIR0,XUAUTO,XUK
"RTN","XUS2",10,0)
 S XUAUTO=($P($G(^XTV(8989.3,1,3)),U,1)="y"),XUH=""
"RTN","XUS2",11,0)
AC1 D CLR,AAUTO:XUAUTO,AASK:'XUAUTO G OUT:$D(DIRUT) D REASK G OUT:$D(DIRUT),AC1:'XUK D CLR,AST(XUH)
"RTN","XUS2",12,0)
 G OUT
"RTN","XUS2",13,0)
 ;
"RTN","XUS2",14,0)
AASK ;Ask for Access code
"RTN","XUS2",15,0)
 N X,XUU,XUEX X ^%ZOSF("EOFF")
"RTN","XUS2",16,0)
 S XUEX=0
"RTN","XUS2",17,0)
 F  D AASK1 Q:XUEX!($D(DIRUT))
"RTN","XUS2",18,0)
 Q
"RTN","XUS2",19,0)
 ;
"RTN","XUS2",20,0)
AASK1 ;
"RTN","XUS2",21,0)
 W "Enter a new ACCESS CODE <Hidden>: " D GET Q:$D(DIRUT)
"RTN","XUS2",22,0)
 I X="@" D DEL D:Y'=1 DIRUT S XUH="",XUEX=1 Q
"RTN","XUS2",23,0)
 I X[$C(34)!(X[";")!(X["^")!(X[":")!(X'?.UNP)!($L(X)>20)!($L(X)<6)!(X="MAIL-BOX") D CLR W $C(7),$$AVHLPTXT(1) D AHELP Q
"RTN","XUS2",24,0)
 I 'XUAUTO,((X?6.20A)!(X?6.20N)) D CLR W $C(7),$$AVHLPTXT(1),! Q
"RTN","XUS2",25,0)
 S XUU=X,X=$$EN^XUSHSH(X),XUH=X,XMB(1)=$O(^VA(200,"A",XUH,0)) I XMB(1),XMB(1)'=DA S XMB="XUS ACCESS CODE VIOLATION",XMB(1)=$P(^VA(200,XMB(1),0),"^"),XMDUN="Security" D ^XMB
"RTN","XUS2",26,0)
 I $D(^VA(200,"AOLD",XUH))!$D(^VA(200,"A",XUH)) D CLR W $C(7),"This has been used previously as an ACCESS CODE.",! Q
"RTN","XUS2",27,0)
 S XUEX=1 ;Now we can quit
"RTN","XUS2",28,0)
 Q
"RTN","XUS2",29,0)
 ;
"RTN","XUS2",30,0)
REASK S XUK=1 Q:XUH=""  D CLR X ^%ZOSF("EOFF")
"RTN","XUS2",31,0)
 F XUK=3:-1:1 W "Please re-type the new code to show that I have it right: " D GET G:$D(DIRUT) DIRUT D ^XUSHSH Q:(XUH=X)  D CLR W "This doesn't match.  Try again!",!,$C(7)
"RTN","XUS2",32,0)
 S:XUH'=X XUK=0
"RTN","XUS2",33,0)
 Q
"RTN","XUS2",34,0)
 ;
"RTN","XUS2",35,0)
AST(XUH) ;Change ACCESS CODE and index.
"RTN","XUS2",36,0)
 W "OK, Access code has been changed!"
"RTN","XUS2",37,0)
 N FDA,IEN,ERR
"RTN","XUS2",38,0)
 S IEN=DA_","
"RTN","XUS2",39,0)
 S FDA(200,IEN,2)=XUH D FILE^DIE("","FDA","ERR")
"RTN","XUS2",40,0)
 W !,"The VERIFY CODE has been deleted as a security measure.",!,"You will need to enter a new VERIFY code so the user can sign-on.",$C(7)
"RTN","XUS2",41,0)
 D VST("",1)
"RTN","XUS2",42,0)
 I $D(^XMB(3.7,DA,0))[0 S Y=DA D NEW^XM ;Make sure has a Mailbox
"RTN","XUS2",43,0)
 Q
"RTN","XUS2",44,0)
 ;
"RTN","XUS2",45,0)
GET ;Get the user input and convert case.
"RTN","XUS2",46,0)
 S X=$$ACCEPT^XUS I (X["^")!('$L(X)) D DIRUT
"RTN","XUS2",47,0)
 S X=$$UP^XLFSTR(X)
"RTN","XUS2",48,0)
 Q
"RTN","XUS2",49,0)
 ;
"RTN","XUS2",50,0)
DIRUT S DIRUT=1
"RTN","XUS2",51,0)
 Q
"RTN","XUS2",52,0)
 ;
"RTN","XUS2",53,0)
CLR ;New line or Clear screenman area
"RTN","XUS2",54,0)
 I '$D(DDS) W ! Q
"RTN","XUS2",55,0)
 N DX,DY
"RTN","XUS2",56,0)
 D CLRMSG^DDS S DX=0,DY=DDSHBX+1 X IOXY
"RTN","XUS2",57,0)
 Q
"RTN","XUS2",58,0)
 ;
"RTN","XUS2",59,0)
NEWCODE D REASK I XUK W !,"OK, remember this code for next time!"
"RTN","XUS2",60,0)
 G OUT
"RTN","XUS2",61,0)
 ;
"RTN","XUS2",62,0)
CVC ;From XUS1
"RTN","XUS2",63,0)
 N DA,X
"RTN","XUS2",64,0)
 S DA=DUZ,X="Y"
"RTN","XUS2",65,0)
 W !,"You must change your VERIFY CODE at this time."
"RTN","XUS2",66,0)
 ;Fall into next code
"RTN","XUS2",67,0)
VERED ; VERIFY CODE EDIT From DD
"RTN","XUS2",68,0)
 N DIR,DIR0,XUAUTO,XUSVCMIN,XUSVCACCT S XUSVCACCT=$$SVCACCT(DA),XUSVCMIN=$S(+XUSVCACCT:12,1:8)
"RTN","XUS2",69,0)
 I "Nn"[$E(X,1) S X="" Q
"RTN","XUS2",70,0)
 I "Yy"'[$E(X,1) K X Q
"RTN","XUS2",71,0)
 S XUH="",XUAUTO=($P($G(^XTV(8989.3,1,3)),U,3)="y") S:DUZ=DA XUAUTO="n" ;Auto only for admin
"RTN","XUS2",72,0)
VC1 D CLR,VASK:'XUAUTO,VAUTO:XUAUTO G OUT:$D(DIRUT) D REASK G OUT:$D(DIRUT),VC1:'XUK D CLR,VST(XUH,1)
"RTN","XUS2",73,0)
 D CALL^XUSERP(DA,2)
"RTN","XUS2",74,0)
 G OUT
"RTN","XUS2",75,0)
 ;
"RTN","XUS2",76,0)
VASK ;Ask for Verify Code
"RTN","XUS2",77,0)
 N X,XUU X ^%ZOSF("EOFF") G:'$$CHKCUR() DIRUT D CLR
"RTN","XUS2",78,0)
VASK1 W "Enter a new VERIFY CODE: " D GET Q:$D(DIRUT)
"RTN","XUS2",79,0)
 I '$D(XUNC),(X="@") D DEL G:Y'=1 DIRUT S XUH="" Q
"RTN","XUS2",80,0)
 D CLR S XUU=X,X=$$EN^XUSHSH(X),XUH=X,Y=$$VCHK(XUU,XUH) I +Y W $C(7),$P(Y,U,2,9),! D:+Y=1 VHELP G VASK1
"RTN","XUS2",81,0)
 Q
"RTN","XUS2",82,0)
 ;
"RTN","XUS2",83,0)
VCHK(S,EC) ;Call with String and Encrypted versions
"RTN","XUS2",84,0)
 ;Updated per VHA directive 6210 Strong Passwords
"RTN","XUS2",85,0)
 N PUNC,NA,XUPAT S PUNC="~`!@#$%&*()_-+=|\{}[]'<>,.?/"
"RTN","XUS2",86,0)
 S NA("FILE")=200,NA("FIELD")=.01,NA("IENS")=DA_",",NA=$$HLNAME^XLFNAME(.NA),XUPAT=XUSVCMIN_".20"
"RTN","XUS2",87,0)
 I ($L(S)<XUSVCMIN)!($L(S)>20)!(S'?.UNP)!(S[";")!(S["^")!(S[":") Q "1^"_$$AVHLPTXT
"RTN","XUS2",88,0)
 I (S?@(XUPAT_"A"))!(S?@(XUPAT_"N"))!(S?@(XUPAT_"P"))!(S?@(XUPAT_"AN"))!(S?@(XUPAT_"AP"))!(S?@(XUPAT_"NP")) Q "2^VERIFY CODE must be a mix of alpha and numerics and punctuation."
"RTN","XUS2",89,0)
 I $D(^VA(200,DA,.1)),EC=$P(^(.1),U,2) Q "3^This code is the same as the current one."
"RTN","XUS2",90,0)
 I $D(^VA(200,DA,"VOLD",EC)) Q "4^This has been used previously as the VERIFY CODE."
"RTN","XUS2",91,0)
 I EC=$P(^VA(200,DA,0),U,3) Q "5^VERIFY CODE must be different than the ACCESS CODE."
"RTN","XUS2",92,0)
 I S[$P(NA,"^")!(S[$P(NA,"^",2)) Q "6^Name cannot be part of code."
"RTN","XUS2",93,0)
 Q 0
"RTN","XUS2",94,0)
 ;
"RTN","XUS2",95,0)
VST(XUH,%) ;
"RTN","XUS2",96,0)
 W:$L(XUH)&% !,"OK, Verify code has been changed!"
"RTN","XUS2",97,0)
 N FDA,IEN,ERR S IEN=DA_","
"RTN","XUS2",98,0)
 S:XUH="" XUH="@" ;11.2 get triggerd
"RTN","XUS2",99,0)
 S FDA(200,IEN,11)=XUH D FILE^DIE("","FDA","ERR")
"RTN","XUS2",100,0)
 I $D(ERR) D ^%ZTER
"RTN","XUS2",101,0)
 I (DUZ'=(+IEN))&$$SVCACCT(+IEN)&(XUH'="@") D  ;override trigger of 11.2 by 11 for svc accts
"RTN","XUS2",102,0)
 .K FDA,ERR S FDA(200,IEN,11.2)=$H D FILE^DIE("","FDA","ERR")
"RTN","XUS2",103,0)
 .I $D(ERR) D ^%ZTER
"RTN","XUS2",104,0)
 S:DA=DUZ DUZ("NEWCODE")=XUH Q
"RTN","XUS2",105,0)
 ;
"RTN","XUS2",106,0)
DEL ;
"RTN","XUS2",107,0)
 X ^%ZOSF("EON") W $C(7) S DIR(0)="Y",DIR("A")="Sure you want to delete" D ^DIR I Y'=1 W:$X>55 !?9 W $C(7),"  <Nothing Deleted>"
"RTN","XUS2",108,0)
 Q
"RTN","XUS2",109,0)
 ;
"RTN","XUS2",110,0)
AAUTO ;Auto-get Access codes
"RTN","XUS2",111,0)
 N XUK,Y
"RTN","XUS2",112,0)
 X ^%ZOSF("EON") F XUK=1:1:3 D AGEN Q:(Y=1)!($D(DIRUT))
"RTN","XUS2",113,0)
 Q
"RTN","XUS2",114,0)
 ;
"RTN","XUS2",115,0)
AGEN ;Generate a ACCESS code
"RTN","XUS2",116,0)
 S XUU=$$AC^XUS4 S (X,XUH)=$$EN^XUSHSH(XUU) I $D(^VA(200,"A",X))!$D(^VA(200,"AOLD",X)) G AGEN
"RTN","XUS2",117,0)
 D CLR W "The new ACCESS CODE is: ",XUU,"   This is ",XUK," of 3 tries."
"RTN","XUS2",118,0)
 D YN
"RTN","XUS2",119,0)
 Q
"RTN","XUS2",120,0)
 ;
"RTN","XUS2",121,0)
AHELP S XUU=$$AC^XUS4 S X=$$EN^XUSHSH(XUU) I $D(^VA(200,"A",X))!$D(^VA(200,"AOLD",X)) G AHELP
"RTN","XUS2",122,0)
 W !,"Here is an example of an acceptable Access Code: ",XUU,!
"RTN","XUS2",123,0)
 Q
"RTN","XUS2",124,0)
 ;
"RTN","XUS2",125,0)
VHELP S XUU=$$VC^XUS4 S X=$$EN^XUSHSH(XUU) I ($P($G(^VA(200,DA,0)),U,3)=X)!$D(^VA(200,DA,"VOLD",X)) G VHELP
"RTN","XUS2",126,0)
 W !,"Here is an example of an acceptable Verify Code: ",XUU,!
"RTN","XUS2",127,0)
 Q
"RTN","XUS2",128,0)
 ;
"RTN","XUS2",129,0)
VAUTO ;Auto-get Access codes
"RTN","XUS2",130,0)
 N XUK
"RTN","XUS2",131,0)
 X ^%ZOSF("EON") F XUK=1:1:3 D VGEN Q:(Y=1)!($D(DIRUT))
"RTN","XUS2",132,0)
 Q
"RTN","XUS2",133,0)
 ;
"RTN","XUS2",134,0)
VGEN ;Generate a VERIFY code
"RTN","XUS2",135,0)
 S XUU=$$VC^XUS4 S (X,XUH)=$$EN^XUSHSH(XUU) I ($P($G(^VA(200,DA,0)),U,3)=X)!$D(^VA(200,DA,"VOLD",X)) G VGEN
"RTN","XUS2",136,0)
 D CLR W "The new VERIFY CODE is: ",XUU,"   This is ",XUK," of 3 tries."
"RTN","XUS2",137,0)
 D YN
"RTN","XUS2",138,0)
 Q
"RTN","XUS2",139,0)
YN ;Ask if want to keep
"RTN","XUS2",140,0)
 N DIR
"RTN","XUS2",141,0)
 S Y=1,DIR(0)="YA",DIR("A")=" Do you want to keep this one? ",DIR("B")="YES",DIR("?",1)="If you don't like this code, we can auto-generate another.",DIR("?")="Remember you only get 3 tries!"
"RTN","XUS2",142,0)
 S:XUK=3 DIR("A")="This is your final choice. "_DIR("A")
"RTN","XUS2",143,0)
 D ^DIR Q:(Y=1)!$D(DIRUT)  I XUK=2 W !,"O.K. You'll have to keep the next one!",! H 2
"RTN","XUS2",144,0)
 I (XUK=3)&(Y'=1) W !,"Lets stop and you can try later." H 3 D DIRUT
"RTN","XUS2",145,0)
 D CLR
"RTN","XUS2",146,0)
 Q
"RTN","XUS2",147,0)
 ;
"RTN","XUS2",148,0)
OUT ;
"RTN","XUS2",149,0)
 K DUOUT S:$D(DIRUT) DUOUT=1
"RTN","XUS2",150,0)
 X ^%ZOSF("EON") W !
"RTN","XUS2",151,0)
 K DIR,DIRUT,XUKO,XUAUTO,XUU,XUH,XUK,XUI S X=""
"RTN","XUS2",152,0)
 Q
"RTN","XUS2",153,0)
 ;
"RTN","XUS2",154,0)
CHKCUR() ;Check user knows current code, Return 1 if OK to continue
"RTN","XUS2",155,0)
 Q:DA'=DUZ 1 ;Only ask user
"RTN","XUS2",156,0)
 Q:$P($G(^VA(200,DA,.1)),U,2)="" 1 ;Must have an old one
"RTN","XUS2",157,0)
 S XUK=0 D CLR
"RTN","XUS2",158,0)
CHK1 W "Please enter your CURRENT verify code: " D GET Q:$D(DIRUT) 0
"RTN","XUS2",159,0)
 I $P(^VA(200,DA,.1),U,2)=$$EN^XUSHSH(X) Q 1
"RTN","XUS2",160,0)
 D CLR W "Sorry that is not correct!",!
"RTN","XUS2",161,0)
 S XUK=XUK+1 G:XUK<3 CHK1
"RTN","XUS2",162,0)
 Q 0
"RTN","XUS2",163,0)
 ;
"RTN","XUS2",164,0)
BRCVC(XV1,XV2) ;Broker change VC, return 0 if good, '1^msg' if bad.
"RTN","XUS2",165,0)
 N XUU,XUH,XUSVCMIN S XUSVCMIN=8
"RTN","XUS2",166,0)
 Q:$G(DUZ)'>0 "1^Bad DUZ" S DA=DUZ,XUH=$$EN^XUSHSH(XV2)
"RTN","XUS2",167,0)
 I $P($G(^VA(200,DUZ,.1)),"^",2)'=$$EN^XUSHSH(XV1) Q "1^Sorry that isn't the correct current code"
"RTN","XUS2",168,0)
 S Y=$$VCHK(XV2,XUH) Q:Y Y
"RTN","XUS2",169,0)
 D VST(XUH,0),CALL^XUSERP(DA,2)
"RTN","XUS2",170,0)
 Q 0
"RTN","XUS2",171,0)
 ;
"RTN","XUS2",172,0)
SVCACCT(XUSDUZ) ;return 1^CONNECTOR PROXY if CP svc acct; 0 if not svc acct
"RTN","XUS2",173,0)
 Q:$$ISUSERCP^XUSAP1(XUSDUZ) "1^CONNECTOR PROXY"
"RTN","XUS2",174,0)
 Q 0
"RTN","XUS2",175,0)
 ;
"RTN","XUS2",176,0)
AVHLPTXT(%) ;
"RTN","XUS2",177,0)
 Q "Enter "_$S($G(%):"6-20",+$G(XUSVCMIN):XUSVCMIN_"-20",1:"8-20")_" characters mixed alphanumeric and punctuation (except '^', ';', ':')"
"RTN","XUS2",178,0)
 ;
"RTN","XUS2",179,0)
 ;Left over code, Don't think it is called anymore.
"RTN","XUS2",180,0)
 G XUS2^XUVERIFY ;All check or return user attributes moved to XUVERIFY
"RTN","XUS2",181,0)
USER G USER^XUVERIFY
"RTN","XUS2",182,0)
EDIT G EDIT^XUVERIFY
"RTN","XUS4")
0^3^B6220372^B4758816
"RTN","XUS4",1,0)
XUS4 ;SEA/FDS - ACCESS CODE GENERATOR ;2/1/2012  08:45
"RTN","XUS4",2,0)
 ;;8.0;KERNEL;**180,574**;Jul 10, 1995;Build 5
"RTN","XUS4",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified
"RTN","XUS4",4,0)
S G 2 ;Change to select auto generate style.
"RTN","XUS4",5,0)
 ;
"RTN","XUS4",6,0)
1 S XUG=$R(4)+5,XUL=0,XUA="" F XUW=0:0 S XUD=XUG-XUL Q:XUD=0  S:XUD=5 XUD=$R(2)+2 S:XUD>5 XUD=$R(3)+2 D A
"RTN","XUS4",7,0)
 S %=$R(1000),XUW=$R(2),XUU=$S(XUW=0:XUA_%,XUW=1:%_XUA) K XUA,%,XUX3,XUW,XUG,XUL,XUD Q
"RTN","XUS4",8,0)
A S XUL=XUL+XUD S:XUD=2 XUC="TC1",XUV="TV1" S:XUD=4 XUC="TC2",XUV="TV2" I XUD=3 S XUW=$R(2) S:XUW=0 XUC="TC1",XUV="TV2" S:XUW=1 XUC="TC2",XUV="TV1"
"RTN","XUS4",9,0)
 S XUA=XUA_$P($T(@XUC),";",($R($P($T(@XUC),";",3))+4))_$P($T(@XUV),";",($R($P($T(@XUV),";",3))+4)) Q
"RTN","XUS4",10,0)
TC1 ;;16;B;D;F;L;H;J;K;M;N;P;R;S;T;V;W;Z
"RTN","XUS4",11,0)
TC2 ;;26;CH;PH;SH;TH;WH;BL;CL;FL;GL;KL;PL;BR;CR;DR;FR;GR;KR;PR;TR;SC;SK;SM;SN;SP;ST;SW
"RTN","XUS4",12,0)
TV1 ;;6;A;E;I;O;U;Y
"RTN","XUS4",13,0)
TV2 ;;51;EA;OA;AE;EE;IE;OE;UE;AF;EF;IF;OF;UF;AH;EH;IH;OH;UH;AI;EI;OI;UI;AL;EL;IL;OL;UL;AM;EM;IM;OM;UM;AN;EN;IN;ON;UN;OO;AR;ER;IR;OR;UR;AS;ES;IS;OS;US;OU;AY;EY;OY
"RTN","XUS4",14,0)
 ;
"RTN","XUS4",15,0)
AC() ;Do 2
"RTN","XUS4",16,0)
 N XUU,% D 2 Q XUU
"RTN","XUS4",17,0)
2 ;Generate 3.4 alpha 3.4 numeric, random order
"RTN","XUS4",18,0)
 S XUU="",%=$P($H,",",2)#10
"RTN","XUS4",19,0)
 D @$S(%>6:"A2(1),N2(0)",1:"N2(1),A2(0)") K %
"RTN","XUS4",20,0)
 Q
"RTN","XUS4",21,0)
VC() ;Generate a 8 char alpha, numeric, punctuation
"RTN","XUS4",22,0)
 ; INPUT VAR XUSVCMIN: if defined and =12, generated code will be length 12
"RTN","XUS4",23,0)
 N XUU,%,%1
"RTN","XUS4",24,0)
 S XUU="",%1=$P($H,",",2)#12
"RTN","XUS4",25,0)
 D @$S(%1<3:"P2,A2(1),N2(0)",%1<6:"A2(1),P2,N2(0)",%1<9:"A2(0),P2,N2(1)",1:"N2(1),A2(0),P2")
"RTN","XUS4",26,0)
 D:($G(XUSVCMIN)=12) A2(1) ;make length 12 for svc accts
"RTN","XUS4",27,0)
 Q XUU
"RTN","XUS4",28,0)
 ;
"RTN","XUS4",29,0)
A2(F) S %=$R(100000000)+100000000,XUU=XUU_$C($E(%,2,3)#26+65)_$C($E(%,4,5)#26+65)_$C($E(%,6,7)#26+65)_$S(F:$C($E(%,8,9)#26+65),1:"") Q
"RTN","XUS4",30,0)
N2(F) S XUU=XUU_$E($R(100000)+100000,3,$S(F:6,1:5)) Q
"RTN","XUS4",31,0)
P2 S XUU=XUU_$S($G(XUSVCACCT)="1^CONNECTOR PROXY":$E("~`!@#$%*()_-+=|\{}[],.?/",$R(24)+1),1:$E("~`!@#$%&*()_-+=|\{}[]'<>,.?/",$R(28)+1)) Q  ;no XML sp. chars for VL
"RTN","XUSAP1")
0^1^B170068636^n/a
"RTN","XUSAP1",1,0)
XUSAP1 ;OAK/KC - Connector Proxy Reports ;2/1/2012
"RTN","XUSAP1",2,0)
 ;;8.0;KERNEL;**574**;Jul 10, 1995;Build 5
"RTN","XUSAP1",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XUSAP1",4,0)
 Q
"RTN","XUSAP1",5,0)
 ; Option File entry points:
"RTN","XUSAP1",6,0)
 ;    EN1^XUSAP1: prompt user to select 1 connector proxy to display
"RTN","XUSAP1",7,0)
 ;  ENALL^XUSAP1: prompt user to display all connector proxies (can be scheduled)
"RTN","XUSAP1",8,0)
 ;
"RTN","XUSAP1",9,0)
EN1 ;option entry point w/dialog to select 1 CP entry; calls task entry point
"RTN","XUSAP1",10,0)
 N XUSCPSAV,XUSCPDUZ,DIC,X,Y,XUSCPSCANLOG,XUSCPSCANFLD
"RTN","XUSAP1",11,0)
 I '$$GETCPIEN W !!,"ABORTING! 'CONNECTOR PROXY' USER CLASS UNDEFINED." Q
"RTN","XUSAP1",12,0)
 ;select CP entry to print
"RTN","XUSAP1",13,0)
 S DIC="^VA(200,",DIC(0)="AEMQZ",DIC("S")="I $$ISUSERCP^XUSAP1(Y)" D ^DIC Q:Y'>0
"RTN","XUSAP1",14,0)
 S XUSCPDUZ=+Y,XUSCPSAV("XUSCPDUZ")=""
"RTN","XUSAP1",15,0)
 K Y D ASKFLD Q:Y[U!(Y="")  S XUSCPSCANFLD=+Y,XUSCPSAV("XUSCPSCANFLD")=""
"RTN","XUSAP1",16,0)
 K Y D ASKLOG Q:Y[U!(Y="")  S XUSCPSCANLOG=+Y,XUSCPSAV("XUSCPSCANLOG")=""
"RTN","XUSAP1",17,0)
 D EN^XUTMDEVQ("Q1^XUSAP1","Connector Proxy Display",.XUSCPSAV)
"RTN","XUSAP1",18,0)
 Q
"RTN","XUSAP1",19,0)
 ;
"RTN","XUSAP1",20,0)
ENALL ;schedulable option entry point w/dialog to print all CPs; calls task entry point
"RTN","XUSAP1",21,0)
 N XUSCPSAV,XUSCPSCANLOG,XUSCPSCANFLD
"RTN","XUSAP1",22,0)
 I '$$GETCPIEN W !!,"Connector Proxy Report ABORTING! 'CONNECTOR PROXY' USER CLASS UNDEFINED." Q
"RTN","XUSAP1",23,0)
 I $D(ZTQUEUED) S (XUSCPSCANLOG,XUSCPSCANFLD)=1 G QALL ; can run as scheduled option
"RTN","XUSAP1",24,0)
 K Y D ASKFLD Q:Y[U!(Y="")  S XUSCPSCANFLD=+Y,XUSCPSAV("XUSCPSCANFLD")=""
"RTN","XUSAP1",25,0)
 K Y D ASKLOG Q:Y[U!(Y="")  S XUSCPSCANLOG=+Y,XUSCPSAV("XUSCPSCANLOG")=""
"RTN","XUSAP1",26,0)
 D EN^XUTMDEVQ("QALL^XUSAP1","Connector Proxy Report",.XUSCPSAV)
"RTN","XUSAP1",27,0)
 Q
"RTN","XUSAP1",28,0)
 ;
"RTN","XUSAP1",29,0)
ASKLOG ;ask if want to scan sign-on log too
"RTN","XUSAP1",30,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","XUSAP1",31,0)
 S DIR(0)="YO",DIR("B")="No"
"RTN","XUSAP1",32,0)
 S DIR("A")="Scan sign-on log for connector proxy activity"
"RTN","XUSAP1",33,0)
 S DIR("?")="Scanning the sign-on log will consume additional time before report completion."
"RTN","XUSAP1",34,0)
 D ^DIR Q
"RTN","XUSAP1",35,0)
 ;
"RTN","XUSAP1",36,0)
ASKFLD ;ask if want to analyze options
"RTN","XUSAP1",37,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","XUSAP1",38,0)
 S DIR(0)="YO",DIR("B")="Yes"
"RTN","XUSAP1",39,0)
 S DIR("A")="Check/display connector proxy fields"
"RTN","XUSAP1",40,0)
 S DIR("?")="More output will be contained in the report if connector proxy fields are checked/displayed."
"RTN","XUSAP1",41,0)
 D ^DIR Q
"RTN","XUSAP1",42,0)
 ;
"RTN","XUSAP1",43,0)
Q1 ;EN^XUTMDEVQ entry point, print 1
"RTN","XUSAP1",44,0)
 ;input values: 
"RTN","XUSAP1",45,0)
 ; XUSCPDUZ (conn proxy DUZ)
"RTN","XUSAP1",46,0)
 ; XUSCPSCANFLD (whether to scan NP flds in CP entries)
"RTN","XUSAP1",47,0)
 ; XUSCPSCANLOG (whether to scan sign-on log)
"RTN","XUSAP1",48,0)
 N XUSCPRNT,XUSCPDT,XUSCPSAEXP,XUSCPACTIVE,XUSCPQ,XUSCPLST,XUSCPOKFLDS,XUSCPWARNFLDS,XUSCPINACFLDS
"RTN","XUSAP1",49,0)
 S XUSCPACTIVE=$$ACTIVE^XUSER(XUSCPDUZ)
"RTN","XUSAP1",50,0)
 D VARSETUP
"RTN","XUSAP1",51,0)
 I +$G(XUSCPSCANLOG) S XUSCPLST($P(XUSCPACTIVE,U),XUSCPDUZ)=$P(XUSCPACTIVE,U,2) D SCANLOG
"RTN","XUSAP1",52,0)
 W:$E(IOST,1,2)="C-" @IOF D HDR,BLURB
"RTN","XUSAP1",53,0)
 D P(XUSCPACTIVE,XUSCPDUZ)
"RTN","XUSAP1",54,0)
 K ^TMP($J,"XUSCP"),^TMP($J,"XUSCPLOG") Q
"RTN","XUSAP1",55,0)
 ;
"RTN","XUSAP1",56,0)
QALL ;EN^XUTMDEVQ entry point, print all
"RTN","XUSAP1",57,0)
 ;input values (EN^XUTMDEVQ):
"RTN","XUSAP1",58,0)
 ; XUSCPSCANFLD (whether to scan NP flds in CP entries)
"RTN","XUSAP1",59,0)
 ; XUSCPSCANLOG (whether to scan sign-on log)
"RTN","XUSAP1",60,0)
 N XUSCPRNT,XUSCPDT,XUSCPSAEXP,XUSCPACTIVE,XUSCPQ,XUSCPLST,XUSCPOKFLDS,XUSCPWARNFLDS,XUSCPINACFLDS
"RTN","XUSAP1",61,0)
 D VARSETUP
"RTN","XUSAP1",62,0)
 ;gather DUZ list of CPs in XUSCPLST
"RTN","XUSAP1",63,0)
 D DUZLIST Q:+$G(ZTSTOP)
"RTN","XUSAP1",64,0)
 D:+$G(XUSCPSCANLOG) SCANLOG Q:+$G(ZTSTOP)
"RTN","XUSAP1",65,0)
 W:$E(IOST,1,2)="C-" @IOF D HDR,BLURB ;header for page 1
"RTN","XUSAP1",66,0)
 ;loop through/sort by active, then inactive, CP DUZ list users, print detail if requested
"RTN","XUSAP1",67,0)
 F XUSCPACTIVE=1,0  Q:+$G(XUSCPQ)  D
"RTN","XUSAP1",68,0)
 .S XUSCPDUZ=0 F  S XUSCPDUZ=$O(XUSCPLST(XUSCPACTIVE,XUSCPDUZ))  Q:('XUSCPDUZ)!+$G(XUSCPQ)  D P(XUSCPACTIVE,XUSCPDUZ)
"RTN","XUSAP1",69,0)
 K ^TMP($J,"XUSCP"),^TMP($J,"XUSCPLOG") Q
"RTN","XUSAP1",70,0)
 ;
"RTN","XUSAP1",71,0)
VARSETUP ;set up date,print,field list vars
"RTN","XUSAP1",72,0)
 S XUSCPDT=$$HTFM^XLFDT($H),XUSCPSAEXP=1095 ;current date, + service acct expiry in days
"RTN","XUSAP1",73,0)
 S XUSCPRNT("DT EXT")=$$FMTE^XLFDT(XUSCPDT,"1PM")
"RTN","XUSAP1",74,0)
 S $P(XUSCPRNT("UL"),"-",IOM)="",$P(XUSCPRNT("EQ"),"=",IOM)="",XUSCPRNT("PG")=1
"RTN","XUSAP1",75,0)
 D ADDFLDS("WARNFLDS",.XUSCPWARNFLDS) ;get fields processed in warning sections
"RTN","XUSAP1",76,0)
 D ADDFLDS("OKFLDS",.XUSCPOKFLDS) ;get "ok to be populated" field list
"RTN","XUSAP1",77,0)
 D ADDFLDS("INACFLDS",.XUSCPINACFLDS) ;get "ok for inactive user field list
"RTN","XUSAP1",78,0)
 Q
"RTN","XUSAP1",79,0)
 ;
"RTN","XUSAP1",80,0)
P(XUSCPACTIVE,XUSCPDUZ) ;print/display a CP entry
"RTN","XUSAP1",81,0)
 ;input values: XUSCPDUZ, + VARSET values
"RTN","XUSAP1",82,0)
 N XUSCPERR,I,J,XUSCPSTR
"RTN","XUSAP1",83,0)
 I $$S^%ZTLOAD() S (XUSCPQ,ZTSTOP)=1 Q
"RTN","XUSAP1",84,0)
 K ^TMP($J,"XUSCP")
"RTN","XUSAP1",85,0)
 I $$HDRCHK(4) S XUSCPQ=1 Q
"RTN","XUSAP1",86,0)
 D GETS^DIQ(200,XUSCPDUZ,"**","EINR","^TMP($J,""XUSCP"")","XUSCPERR") ;get populated fields int/ext
"RTN","XUSAP1",87,0)
 I $D(XUSCPERR) D  Q
"RTN","XUSAP1",88,0)
 .W !," >>>>Error(s) processing Connector Proxy DUZ "_XUSCPDUZ_": "
"RTN","XUSAP1",89,0)
 .S I=0 F  S I=$O(XUSCPERR("DIERR",I)) Q:'I!(+$G(XUSCPQ))  D
"RTN","XUSAP1",90,0)
 ..S J=0 F  S J=$O(XUSCPERR("DIERR",I,"TEXT",J)) Q:'J!(+$G(XUSCPQ))  D
"RTN","XUSAP1",91,0)
 ...W !," >>>>"_$G(XUSCPERR("DIERR",I))_" "_$G(XUSCPERR("DIERR",I,"TEXT",J)),!
"RTN","XUSAP1",92,0)
 ...I $$HDRCHK(4) S XUSCPQ=1 Q
"RTN","XUSAP1",93,0)
 ;
"RTN","XUSAP1",94,0)
 S XUSCPSTR="Name: '"_$$NAME^XUSER(XUSCPDUZ)_"'"
"RTN","XUSAP1",95,0)
 W !,XUSCPRNT("EQ"),!,XUSCPSTR,$$RJ^XLFSTR(" Active: "_$S(+XUSCPACTIVE:"YES",1:"NO"),IOM-$L(XUSCPSTR)-1," ")
"RTN","XUSAP1",96,0)
 I '+XUSCPACTIVE,$L($G(XUSCPLST(XUSCPACTIVE,XUSCPDUZ))) W !,$$RJ^XLFSTR("("_XUSCPLST(XUSCPACTIVE,XUSCPDUZ)_")",IOM-1," ")
"RTN","XUSAP1",97,0)
 W !,XUSCPRNT("EQ")
"RTN","XUSAP1",98,0)
 I $$HDRCHK(4) S XUSCPQ=1 Q
"RTN","XUSAP1",99,0)
 ;
"RTN","XUSAP1",100,0)
 D PCREDCHK S:$$HDRCHK(4) XUSCPQ=1 Q:+$G(XUSCPQ)
"RTN","XUSAP1",101,0)
 I +$G(XUSCPSCANFLD) D  Q:+$G(XUSCPQ)
"RTN","XUSAP1",102,0)
 .D PWARN S:$$HDRCHK(4) XUSCPQ=1 Q:+$G(XUSCPQ)
"RTN","XUSAP1",103,0)
 .D POKFLDS S:$$HDRCHK(4) XUSCPQ=1 Q:+$G(XUSCPQ)
"RTN","XUSAP1",104,0)
 .D PBADFLDS S:$$HDRCHK(4) XUSCPQ=1 Q:+$G(XUSCPQ)
"RTN","XUSAP1",105,0)
 .D PBADMULT S:$$HDRCHK(4) XUSCPQ=1  Q:+$G(XUSCPQ)
"RTN","XUSAP1",106,0)
 D:+$G(XUSCPSCANLOG) PSCANLOG S:$$HDRCHK(4) XUSCPQ=1  Q:+$G(XUSCPQ)
"RTN","XUSAP1",107,0)
 W !
"RTN","XUSAP1",108,0)
 Q
"RTN","XUSAP1",109,0)
 ;
"RTN","XUSAP1",110,0)
PCREDCHK ;display credential date checks
"RTN","XUSAP1",111,0)
 ;input values: ^TMP($J,"XUSCP"), XUSCPDUZ, XUSCPDT
"RTN","XUSAP1",112,0)
 N XUSCPDIFFDE,XUSCPDIFFVC,XUSCPOLDTIME,XUSCPDC
"RTN","XUSAP1",113,0)
 S XUSCPOLDTIME="2950710.000101"
"RTN","XUSAP1",114,0)
 ;check time since v/c last changed, WARN > 3 yrs
"RTN","XUSAP1",115,0)
 ;if DATE VERIFY CODE LAST CHANGED="60000,1" then no date on record.
"RTN","XUSAP1",116,0)
 S XUSCPDC=$G(^TMP($J,"XUSCP",200,XUSCPDUZ_",","DATE VERIFY CODE LAST CHANGED","I")) S:$L(XUSCPDC) XUSCPDC=$$HTFM^XLFDT(XUSCPDC,1) ; convert $H to FM
"RTN","XUSAP1",117,0)
 S XUSCPDIFFDE=$$FMDIFF^XLFDT(XUSCPDT,$G(^TMP($J,"XUSCP",200,XUSCPDUZ_",","DATE ENTERED","I"),XUSCPOLDTIME))
"RTN","XUSAP1",118,0)
 S XUSCPDIFFVC=$$FMDIFF^XLFDT(XUSCPDT,$G(XUSCPDC,XUSCPOLDTIME))
"RTN","XUSAP1",119,0)
 I $$HDRCHK(4) S XUSCPQ=1 Q
"RTN","XUSAP1",120,0)
 W !,"   Compliant w/3-year Service Account Mandate? " D
"RTN","XUSAP1",121,0)
 .I (XUSCPDIFFDE<XUSCPSAEXP)!(XUSCPDIFFVC<XUSCPSAEXP) W "YES" Q  ;one or both dates within exp
"RTN","XUSAP1",122,0)
 .;both dates exp, verify code date is real OR if fake, there are no VOLD nodes
"RTN","XUSAP1",123,0)
 .I ('($G(^TMP($J,"XUSCP",200,XUSCPDUZ_",","DATE VERIFY CODE LAST CHANGED","I"))="60000,1"))!('$D(^VA(200,XUSCPDUZ,"VOLD"))) W $S(XUSCPACTIVE:"*** NO <---- MUST FIX ***",1:"No, but user not active.") Q
"RTN","XUSAP1",124,0)
 .W $S(XUSCPACTIVE:"UNABLE TO DETERMINE",1:"unable to det. but not active.") Q  ;fake verify code date AND VOLD nodes, so can't tell
"RTN","XUSAP1",125,0)
 W !,"   Date User Created: "_$G(^TMP($J,"XUSCP",200,XUSCPDUZ_",","DATE ENTERED","E"))
"RTN","XUSAP1",126,0)
 I $$HDRCHK(4) S XUSCPQ=1 Q
"RTN","XUSAP1",127,0)
 W !,"   Date Verify Code Last Changed: "
"RTN","XUSAP1",128,0)
 W $S('$L($G(^TMP($J,"XUSCP",200,XUSCPDUZ_",","DATE VERIFY CODE LAST CHANGED","I"))):"never",$G(^("I"))'="60000,1":$G(^("E")),$D(^VA(200,XUSCPDUZ,"VOLD")):"(changed but date not recorded)",1:"never")
"RTN","XUSAP1",129,0)
 ; if XUS Logon Attempt Count > 0, strongly indicates verify code-related login problem(s) from 1 or more adapters
"RTN","XUSAP1",130,0)
 I +$G(^TMP($J,"XUSCP",200,XUSCPDUZ_",","XUS Logon Attempt Count","E")) W !,"   >>>Failed Logon Attempts: "_^("E")
"RTN","XUSAP1",131,0)
 Q
"RTN","XUSAP1",132,0)
 ;
"RTN","XUSAP1",133,0)
PWARN ;display warning for primary menus, other user classes defined, FM access code
"RTN","XUSAP1",134,0)
 N XUSCPWRN,XUSCPMUL
"RTN","XUSAP1",135,0)
 S:$L($G(^TMP($J,"XUSCP",200,XUSCPDUZ_",","PRIMARY MENU OPTION","E"))) XUSCPWRN("PRIMARY")=^("E")
"RTN","XUSAP1",136,0)
 S:$L($G(^TMP($J,"XUSCP",200,XUSCPDUZ_",","SSN","E"))) XUSCPWRN("SSN")="<masked>"
"RTN","XUSAP1",137,0)
 I $D(^TMP($J,"XUSCP",200,XUSCPDUZ_",","FILE MANAGER ACCESS CODE")) S XUSCPWRN("FILE MANAGER ACCESS CODE")=""
"RTN","XUSAP1",138,0)
 S XUSCPMUL="" F  S XUSCPMUL=$O(^TMP($J,"XUSCP",200.07,XUSCPMUL)) Q:XUSCPMUL']""  D
"RTN","XUSAP1",139,0)
 .I ^TMP($J,"XUSCP",200.07,XUSCPMUL,"User Class","I")'=$$GETCPIEN S XUSCPWRN("USC")=""
"RTN","XUSAP1",140,0)
 I $D(XUSCPWRN) W !!," Warning(s):",!," -----------" D  Q:+$G(XUSCPQ)!+$G(XUSCPQ)
"RTN","XUSAP1",141,0)
 .I $D(XUSCPWRN("PRIMARY")) W !,"   Primary Menu defined (SHOULDN'T BE!): ",XUSCPWRN("PRIMARY")
"RTN","XUSAP1",142,0)
 .I $D(XUSCPWRN("SSN")) W !,"   SSN defined (SHOULDN'T BE!): ",XUSCPWRN("SSN")
"RTN","XUSAP1",143,0)
 .I $$HDRCHK(4) S XUSCPQ=1 Q
"RTN","XUSAP1",144,0)
 .I $D(XUSCPWRN("USC")) W !,"   Non-CP User Classes defined (SHOULDN'T BE!): " D  Q:+$G(XUSCPQ)
"RTN","XUSAP1",145,0)
 ..S XUSCPMUL="" F  S XUSCPMUL=$O(^TMP($J,"XUSCP",200.07,XUSCPMUL)) Q:XUSCPMUL']""!+$G(XUSCPQ)  D
"RTN","XUSAP1",146,0)
 ...Q:^TMP($J,"XUSCP",200.07,XUSCPMUL,"User Class","I")=$$GETCPIEN
"RTN","XUSAP1",147,0)
 ...W !,"   - "_^TMP($J,"XUSCP",200.07,XUSCPMUL,"User Class","E")
"RTN","XUSAP1",148,0)
 ...I $$HDRCHK(4) S XUSCPQ=1 Q
"RTN","XUSAP1",149,0)
 .I $D(XUSCPWRN("FILE MANAGER ACCESS CODE")) W !,"   File Manager Access Code is defined (SHOULDN'T BE!): "_^TMP($J,"XUSCP",200,XUSCPDUZ_",","FILE MANAGER ACCESS CODE","E")
"RTN","XUSAP1",150,0)
 Q
"RTN","XUSAP1",151,0)
 ;
"RTN","XUSAP1",152,0)
POKFLDS ;display values of allowed fields
"RTN","XUSAP1",153,0)
 N XUSCPFLD
"RTN","XUSAP1",154,0)
 W !!," Values for other fields allowed/expected to be Populated:"
"RTN","XUSAP1",155,0)
 W !," ----------------------------------------------------------"
"RTN","XUSAP1",156,0)
 I $$HDRCHK(4) S XUSCPQ=1 Q
"RTN","XUSAP1",157,0)
 S XUSCPFLD="" F  S XUSCPFLD=$O(XUSCPOKFLDS(XUSCPFLD)) Q:'$L(XUSCPFLD)!(+$G(XUSCPQ))  D PFLD
"RTN","XUSAP1",158,0)
 I 'XUSCPACTIVE S XUSCPFLD="" F  S XUSCPFLD=$O(XUSCPINACFLDS(XUSCPFLD)) Q:'$L(XUSCPFLD)!(+$G(XUSCPQ))  D PFLD
"RTN","XUSAP1",159,0)
 Q
"RTN","XUSAP1",160,0)
 ;
"RTN","XUSAP1",161,0)
PFLD ; output a field
"RTN","XUSAP1",162,0)
 ;input XUSCPFLD,XUSCPDUZ,^TMP values
"RTN","XUSAP1",163,0)
 Q:'$D(^TMP($J,"XUSCP",200,XUSCPDUZ_",",XUSCPFLD,"I"))  ; skip empty fields
"RTN","XUSAP1",164,0)
 W !,"  "_$$RJ^XLFSTR(XUSCPFLD,29)_": "
"RTN","XUSAP1",165,0)
 W $S(XUSCPFLD="NAME COMPONENTS":"entry# "_$G(^TMP($J,"XUSCP",200,XUSCPDUZ_",",XUSCPFLD,"I")),1:$G(^TMP($J,"XUSCP",200,XUSCPDUZ_",",XUSCPFLD,"E")))
"RTN","XUSAP1",166,0)
 I $$HDRCHK(4) S XUSCPQ=1 Q
"RTN","XUSAP1",167,0)
 Q
"RTN","XUSAP1",168,0)
 ;
"RTN","XUSAP1",169,0)
PBADFLDS ;display any unexpected (not part of CP template) top-level fields populated
"RTN","XUSAP1",170,0)
 N XUSCPFLD,XUSCPCNT
"RTN","XUSAP1",171,0)
 S XUSCPFLD="",XUSCPCNT=0 F  S XUSCPFLD=$O(^TMP($J,"XUSCP",200,XUSCPDUZ_",",XUSCPFLD)) Q:XUSCPFLD']""!(+$G(XUSCPQ))  D
"RTN","XUSAP1",172,0)
 .Q:$D(XUSCPOKFLDS(XUSCPFLD))!$D(XUSCPWARNFLDS(XUSCPFLD))
"RTN","XUSAP1",173,0)
 .Q:$D(XUSCPINACFLDS(XUSCPFLD))&'XUSCPACTIVE
"RTN","XUSAP1",174,0)
 .S XUSCPCNT=XUSCPCNT+1 I XUSCPCNT=1 D  Q:+$G(XUSCPQ)
"RTN","XUSAP1",175,0)
 ..W !!," Other Fields Populated:"
"RTN","XUSAP1",176,0)
 ..W !," -----------------------"
"RTN","XUSAP1",177,0)
 ..I $$HDRCHK(4) S XUSCPQ=1 Q
"RTN","XUSAP1",178,0)
 .Q:+$G(XUSCPQ)
"RTN","XUSAP1",179,0)
 .D PFLD
"RTN","XUSAP1",180,0)
 Q
"RTN","XUSAP1",181,0)
 ;
"RTN","XUSAP1",182,0)
PBADMULT ;display any unexpected multiples; skip those already processed:
"RTN","XUSAP1",183,0)
 ;- 200.07 user class
"RTN","XUSAP1",184,0)
 N XUSCPMUL,XUSCPFLD,XUSCPFILE,XUSCPCNT
"RTN","XUSAP1",185,0)
 S (XUSCPFILE,XUSCPCNT)=0 F  S XUSCPFILE=$O(^TMP($J,"XUSCP",XUSCPFILE)) Q:'XUSCPFILE!+$G(XUSCPQ)  D
"RTN","XUSAP1",186,0)
 .Q:XUSCPFILE=200!(XUSCPFILE="200.07")
"RTN","XUSAP1",187,0)
 .S XUSCPCNT=XUSCPCNT+1 D:XUSCPCNT=1
"RTN","XUSAP1",188,0)
 ..W !!," Other Multiples Populated:"
"RTN","XUSAP1",189,0)
 ..W !," ---------------------------"
"RTN","XUSAP1",190,0)
 .W !," ",XUSCPFILE,": ",$P($G(^DD(XUSCPFILE,0)),U)
"RTN","XUSAP1",191,0)
 .S XUSCPMUL="" F  S XUSCPMUL=$O(^TMP($J,"XUSCP",XUSCPFILE,XUSCPMUL)) Q:XUSCPMUL']""!+$G(XUSCPQ)  D
"RTN","XUSAP1",192,0)
 ..S XUSCPFLD="" F  S XUSCPFLD=$O(^TMP($J,"XUSCP",XUSCPFILE,XUSCPMUL,XUSCPFLD)) Q:XUSCPFLD']""!(+$G(XUSCPQ))  D
"RTN","XUSAP1",193,0)
 ...W !,"  "_$$RJ^XLFSTR(XUSCPFLD,29)_": "_$G(^TMP($J,"XUSCP",XUSCPFILE,XUSCPMUL,XUSCPFLD,"E"))
"RTN","XUSAP1",194,0)
 ...I $$HDRCHK(4) S XUSCPQ=1 Q
"RTN","XUSAP1",195,0)
 Q
"RTN","XUSAP1",196,0)
 ;
"RTN","XUSAP1",197,0)
PSCANLOG ; output signon activity for this CP user found in SCANLOG pass
"RTN","XUSAP1",198,0)
 N XUSCPIP,XUSCPSIGNON,XUSCPTOT
"RTN","XUSAP1",199,0)
 ;input: ^TMP($J,"XUSCPLOG",XUSCPDUZ),XUSCPDUZ
"RTN","XUSAP1",200,0)
 W !!," Connector Proxy Activity (Sign-On Log):"
"RTN","XUSAP1",201,0)
 W !," --------------------------------------"
"RTN","XUSAP1",202,0)
 I $$HDRCHK(4) S XUSCPQ=1 Q
"RTN","XUSAP1",203,0)
 I '$D(^TMP($J,"XUSCPLOG",XUSCPDUZ)) W !," no signon activity found" Q
"RTN","XUSAP1",204,0)
 S XUSCPIP="" F  S XUSCPIP=$O(^TMP($J,"XUSCPLOG",XUSCPDUZ,XUSCPIP)) Q:'+XUSCPIP!+$G(XUSCPQ)  D
"RTN","XUSAP1",205,0)
 .W !,"  IP address "_XUSCPIP_": "
"RTN","XUSAP1",206,0)
 .W !,"     - Total active connections (current): ",+$G(^TMP($J,"XUSCPLOG",XUSCPDUZ,XUSCPIP,"CUR"))
"RTN","XUSAP1",207,0)
 .I $$HDRCHK(4) S XUSCPQ=1 Q
"RTN","XUSAP1",208,0)
 .S (XUSCPSIGNON,XUSCPTOT)=0 F  S XUSCPSIGNON=$O(^TMP($J,"XUSCPLOG",XUSCPDUZ,XUSCPIP,XUSCPSIGNON)) Q:'+XUSCPSIGNON!+$G(XUSCPQ)  D
"RTN","XUSAP1",209,0)
 ..S XUSCPTOT=XUSCPTOT+$G(^TMP($J,"XUSCPLOG",XUSCPDUZ,XUSCPIP,XUSCPSIGNON))
"RTN","XUSAP1",210,0)
 .W !,"     - Total logons recorded in sign-on log: "_XUSCPTOT
"RTN","XUSAP1",211,0)
 .W !,"     - Total logons by date: "
"RTN","XUSAP1",212,0)
 .I $$HDRCHK(4) S XUSCPQ=1 Q
"RTN","XUSAP1",213,0)
 .S XUSCPSIGNON=0 F  S XUSCPSIGNON=$O(^TMP($J,"XUSCPLOG",XUSCPDUZ,XUSCPIP,XUSCPSIGNON)) Q:'+XUSCPSIGNON!+$G(XUSCPQ)  D
"RTN","XUSAP1",214,0)
 ..W !,"        > "_$$FMTE^XLFDT(XUSCPSIGNON)_": "_^TMP($J,"XUSCPLOG",XUSCPDUZ,XUSCPIP,XUSCPSIGNON)
"RTN","XUSAP1",215,0)
 ..I $$HDRCHK(4) S XUSCPQ=1 Q
"RTN","XUSAP1",216,0)
 Q
"RTN","XUSAP1",217,0)
 ;
"RTN","XUSAP1",218,0)
DUZLIST ;loop thru file 200, return list of CP user class DUZs in XUSCPLST in format:
"RTN","XUSAP1",219,0)
 ;XUSCPLST(0 or 1,DUZ)=reason/description active/inactive
"RTN","XUSAP1",220,0)
 ;0=inactive user, 1=active
"RTN","XUSAP1",221,0)
 N XUSCPIEN,XUSCPACTIVE,XUSCPLOOPC,XUSCPQC
"RTN","XUSAP1",222,0)
 ;get CP user class IEN
"RTN","XUSAP1",223,0)
 S XUSCPIEN=$$GETCPIEN I 'XUSCPIEN W !!,"ABORTING! 'CONNECTOR PROXY' USER CLASS UNDEFINED." Q
"RTN","XUSAP1",224,0)
 ;loop thru 200 for connector proxy users (USC3 xref)
"RTN","XUSAP1",225,0)
 S XUSCPQC=100
"RTN","XUSAP1",226,0)
 S (XUSCPDUZ,XUSCPLOOPC)=0 F  S XUSCPDUZ=$O(^VA(200,XUSCPDUZ)) Q:'XUSCPDUZ!+$G(XUSCPQ)  D
"RTN","XUSAP1",227,0)
 .S XUSCPLOOPC=XUSCPLOOPC+1 I '+(XUSCPLOOPC#XUSCPQC) I $$S^%ZTLOAD() S (XUSCPQ,ZTSTOP)=1 Q
"RTN","XUSAP1",228,0)
 .I $D(^VA(200,XUSCPDUZ,"USC3")) D
"RTN","XUSAP1",229,0)
 ..Q:'$$ISUSERCP(XUSCPDUZ)
"RTN","XUSAP1",230,0)
 ..S XUSCPACTIVE=$$ACTIVE^XUSER(XUSCPDUZ)
"RTN","XUSAP1",231,0)
 ..S XUSCPLST($P(XUSCPACTIVE,U),XUSCPDUZ)=$P(XUSCPACTIVE,U,2)
"RTN","XUSAP1",232,0)
 Q
"RTN","XUSAP1",233,0)
 ;
"RTN","XUSAP1",234,0)
ISUSERCP(XUSCPDUZ) ;return 1 if any of DUZ's user classes are CP, 0 if not
"RTN","XUSAP1",235,0)
 N XUSCP200P07IEN,XUSCP201IEN,XUSCPRET,XUSCPIEN
"RTN","XUSAP1",236,0)
 S XUSCPRET=0
"RTN","XUSAP1",237,0)
 I $D(^VA(200,XUSCPDUZ,"USC3")) D
"RTN","XUSAP1",238,0)
 .;loop thru DUZ's user class multiple/look for CP
"RTN","XUSAP1",239,0)
 .S XUSCP200P07IEN=0,XUSCPIEN=$$GETCPIEN
"RTN","XUSAP1",240,0)
 .F  S XUSCP200P07IEN=$O(^VA(200,XUSCPDUZ,"USC3",XUSCP200P07IEN)) Q:'XUSCP200P07IEN!$D(XUSCPLST(XUSCPDUZ))  D
"RTN","XUSAP1",241,0)
 ..;get IEN of user class, check if CONNECTOR PROXY
"RTN","XUSAP1",242,0)
 ..S XUSCP201IEN=$P(^VA(200,XUSCPDUZ,"USC3",XUSCP200P07IEN,0),U)
"RTN","XUSAP1",243,0)
 ..S:(XUSCP201IEN=XUSCPIEN) XUSCPRET=1 ;user has CP user class
"RTN","XUSAP1",244,0)
 Q XUSCPRET
"RTN","XUSAP1",245,0)
 ;
"RTN","XUSAP1",246,0)
GETCPIEN() ;return CP IEN from User Class file
"RTN","XUSAP1",247,0)
 Q +$O(^VA(201,"B","CONNECTOR PROXY",""))
"RTN","XUSAP1",248,0)
 ;
"RTN","XUSAP1",249,0)
HDR ;
"RTN","XUSAP1",250,0)
 W "CONNECTOR PROXY REPORT: ",XUSCPRNT("DT EXT"),?70,$$RJ^XLFSTR("PAGE "_XUSCPRNT("PG"),9),!,XUSCPRNT("UL"),!
"RTN","XUSAP1",251,0)
 Q
"RTN","XUSAP1",252,0)
 ;
"RTN","XUSAP1",253,0)
BLURB ;
"RTN","XUSAP1",254,0)
 W !,">>>Always contact the National Help Desk or Customer Support, to determine"
"RTN","XUSAP1",255,0)
 W !,"the best fix (and be alerted to known issues) for ANY problem listed below.",!
"RTN","XUSAP1",256,0)
 W !?10,"Coordinate all account changes with affected remote"
"RTN","XUSAP1",257,0)
 W !?15,"application to prevent service disruptions.",!
"RTN","XUSAP1",258,0)
 Q
"RTN","XUSAP1",259,0)
 ;
"RTN","XUSAP1",260,0)
HDRCHK(Y) ;Y=excess lines, return 1 to exit
"RTN","XUSAP1",261,0)
 ;return 0 to continue
"RTN","XUSAP1",262,0)
 Q:+$G(XUSCPQ) 1
"RTN","XUSAP1",263,0)
 Q:$Y<(IOSL-Y) 0
"RTN","XUSAP1",264,0)
 I $E(IOST,1,2)="C-" D  Q:'Y 1
"RTN","XUSAP1",265,0)
 .N DIR,I,J,K,X
"RTN","XUSAP1",266,0)
 .S DIR(0)="E" D ^DIR
"RTN","XUSAP1",267,0)
 S XUSCPRNT("PG")=XUSCPRNT("PG")+1
"RTN","XUSAP1",268,0)
 W @IOF D HDR
"RTN","XUSAP1",269,0)
 Q 0
"RTN","XUSAP1",270,0)
 ;
"RTN","XUSAP1",271,0)
SCANLOG ;loop thru sign-on log for connector proxy activity, save results in ^TMP($J,"XUSCPLOG")
"RTN","XUSAP1",272,0)
 N XUSCPSEC0,XUSCPSIGNON,XUSCPSECDUZ,XUSCPIP,XUSCPCUR,XUSCPLOOPC,XUSCPQ,XUSCPQC
"RTN","XUSAP1",273,0)
 ;input: XUSCPLST(ACTIVE,DUZ) list of CPs
"RTN","XUSAP1",274,0)
 ;search each ^XUSEC(0, date/time) 0-node
"RTN","XUSAP1",275,0)
 SET (XUSCPSIGNON,XUSCPLOOPC)=0,XUSCPQC=100
"RTN","XUSAP1",276,0)
 F  SET XUSCPSIGNON=$O(^XUSEC(0,XUSCPSIGNON)) Q:'+XUSCPSIGNON!+$G(XUSCPQ)  D
"RTN","XUSAP1",277,0)
 .S XUSCPLOOPC=XUSCPLOOPC+1 I '+(XUSCPLOOPC#XUSCPQC) I $$S^%ZTLOAD() S (XUSCPQ,ZTSTOP)=1 Q
"RTN","XUSAP1",278,0)
 .S XUSCPSEC0=^XUSEC(0,XUSCPSIGNON,0),XUSCPSECDUZ=$P(XUSCPSEC0,U) ; get XUSEC 0 node, DUZ
"RTN","XUSAP1",279,0)
 .I +XUSCPSECDUZ,($D(XUSCPLST(0,XUSCPSECDUZ))!$D(XUSCPLST(1,XUSCPSECDUZ))) D  ; check if DUZ in CP list
"RTN","XUSAP1",280,0)
 ..S XUSCPIP=$P(XUSCPSEC0,U,11) S:XUSCPIP']"" XUSCPIP="unknown" ; get IP from XUSEC
"RTN","XUSAP1",281,0)
 ..S XUSCPCUR=$D(^XUSEC(0,"CUR",XUSCPSECDUZ,XUSCPDT)) ; check if job currently logged on
"RTN","XUSAP1",282,0)
 ..;increment logon count per IP per day
"RTN","XUSAP1",283,0)
 ..S ^TMP($J,"XUSCPLOG",XUSCPSECDUZ,XUSCPIP,$P(XUSCPSIGNON,"."))=+$G(^TMP($J,"XUSCPLOG",XUSCPSECDUZ,XUSCPIP,$P(XUSCPSIGNON,".")))+1
"RTN","XUSAP1",284,0)
 ..I $D(^XUSEC(0,"CUR",XUSCPSECDUZ,XUSCPSIGNON)) D  ;increment currently signed on count
"RTN","XUSAP1",285,0)
 ...S ^TMP($J,"XUSCPLOG",XUSCPSECDUZ,XUSCPIP,"CUR")=+$G(^TMP($J,"XUSCPLOG",XUSCPSECDUZ,XUSCPIP,"CUR"))+1
"RTN","XUSAP1",286,0)
 Q
"RTN","XUSAP1",287,0)
 ;
"RTN","XUSAP1",288,0)
ADDFLDS(XUSCPTAG,XUSCPARR) ;return list of fields in .XUSCPARR(fieldname)
"RTN","XUSAP1",289,0)
 ; XUSCPTAG: tag to read field names from
"RTN","XUSAP1",290,0)
 ; .XUSCPARR: array to populate (pass as .param)
"RTN","XUSAP1",291,0)
 N I,XUSCPFLD
"RTN","XUSAP1",292,0)
 F I=1:1  S XUSCPFLD=$P($T(@XUSCPTAG+I),";;",2) Q:'$L(XUSCPFLD)  D
"RTN","XUSAP1",293,0)
 .S XUSCPARR(XUSCPFLD)=""
"RTN","XUSAP1",294,0)
 Q
"RTN","XUSAP1",295,0)
 ;
"RTN","XUSAP1",296,0)
OKFLDS ;top-level fields OK/expected to be populated
"RTN","XUSAP1",297,0)
 ;;ACCESS CODE
"RTN","XUSAP1",298,0)
 ;;CREATOR
"RTN","XUSAP1",299,0)
 ;;DISUSER
"RTN","XUSAP1",300,0)
 ;;Entry Last Edit Date
"RTN","XUSAP1",301,0)
 ;;LAST SIGN-ON DATE/TIME
"RTN","XUSAP1",302,0)
 ;;MULTIPLE SIGN-ON
"RTN","XUSAP1",303,0)
 ;;NAME
"RTN","XUSAP1",304,0)
 ;;NAME COMPONENTS
"RTN","XUSAP1",305,0)
 ;;PROVIDER KEY
"RTN","XUSAP1",306,0)
 ;;SERVICE/SECTION
"RTN","XUSAP1",307,0)
 ;;SIGNATURE BLOCK PRINTED NAME
"RTN","XUSAP1",308,0)
 ;;TIMESTAMP
"RTN","XUSAP1",309,0)
 ;;VERIFY CODE
"RTN","XUSAP1",310,0)
 ;;VERIFY CODE never expires
"RTN","XUSAP1",311,0)
 ;;XUS Active User
"RTN","XUSAP1",312,0)
 ;
"RTN","XUSAP1",313,0)
INACFLDS ;fields OK to populate for an INACTIVE user
"RTN","XUSAP1",314,0)
 ;;TERMINATION DATE
"RTN","XUSAP1",315,0)
 ;
"RTN","XUSAP1",316,0)
WARNFLDS ;field checked in WARNING section
"RTN","XUSAP1",317,0)
 ;;DATE ACCESS CODE LAST CHANGED
"RTN","XUSAP1",318,0)
 ;;DATE VERIFY CODE LAST CHANGED
"RTN","XUSAP1",319,0)
 ;;DATE ENTERED
"RTN","XUSAP1",320,0)
 ;;FILE MANAGER ACCESS CODE
"RTN","XUSAP1",321,0)
 ;;SSN
"RTN","XUSAP1",322,0)
 ;;XUS Logon Attempt Count
"VER")
8.0^22.0
"BLD",1372,6)
^469
**END**
**END**
