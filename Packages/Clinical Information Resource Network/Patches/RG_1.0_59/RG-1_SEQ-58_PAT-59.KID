Released RG*1*59 SEQ #58
Extracted from mail message
**KIDS**:RG*1.0*59^

**INSTALL NAME**
RG*1.0*59
"BLD",2889,0)
RG*1.0*59^CLINICAL INFO RESOURCE NETWORK^0^3120111^y
"BLD",2889,1,0)
^^4^4^3120105^
"BLD",2889,1,1,0)
MESSAGING ENHANCEMENTS FOR NEW FIELDS
"BLD",2889,1,2,0)
 
"BLD",2889,1,3,0)
Refer to patch RG*1*59 in the FORUM Patch Module for a complete
"BLD",2889,1,4,0)
description.
"BLD",2889,4,0)
^9.64PA^^
"BLD",2889,6.3)
1
"BLD",2889,"ABPKG")
n
"BLD",2889,"KRN",0)
^9.67PA^779.2^20
"BLD",2889,"KRN",.4,0)
.4
"BLD",2889,"KRN",.401,0)
.401
"BLD",2889,"KRN",.402,0)
.402
"BLD",2889,"KRN",.403,0)
.403
"BLD",2889,"KRN",.5,0)
.5
"BLD",2889,"KRN",.84,0)
.84
"BLD",2889,"KRN",3.6,0)
3.6
"BLD",2889,"KRN",3.8,0)
3.8
"BLD",2889,"KRN",9.2,0)
9.2
"BLD",2889,"KRN",9.8,0)
9.8
"BLD",2889,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",2889,"KRN",9.8,"NM",1,0)
RGHLLOG^^0^B30413623
"BLD",2889,"KRN",9.8,"NM",2,0)
RGADTP3^^0^B13484715
"BLD",2889,"KRN",9.8,"NM",3,0)
RGADTP1^^0^B41160023
"BLD",2889,"KRN",9.8,"NM",4,0)
RGADTP2^^0^B57266100
"BLD",2889,"KRN",9.8,"NM",5,0)
RGADTP^^0^B82380142
"BLD",2889,"KRN",9.8,"NM","B","RGADTP",5)

"BLD",2889,"KRN",9.8,"NM","B","RGADTP1",3)

"BLD",2889,"KRN",9.8,"NM","B","RGADTP2",4)

"BLD",2889,"KRN",9.8,"NM","B","RGADTP3",2)

"BLD",2889,"KRN",9.8,"NM","B","RGHLLOG",1)

"BLD",2889,"KRN",19,0)
19
"BLD",2889,"KRN",19.1,0)
19.1
"BLD",2889,"KRN",101,0)
101
"BLD",2889,"KRN",409.61,0)
409.61
"BLD",2889,"KRN",771,0)
771
"BLD",2889,"KRN",779.2,0)
779.2
"BLD",2889,"KRN",870,0)
870
"BLD",2889,"KRN",8989.51,0)
8989.51
"BLD",2889,"KRN",8989.52,0)
8989.52
"BLD",2889,"KRN",8994,0)
8994
"BLD",2889,"KRN","B",.4,.4)

"BLD",2889,"KRN","B",.401,.401)

"BLD",2889,"KRN","B",.402,.402)

"BLD",2889,"KRN","B",.403,.403)

"BLD",2889,"KRN","B",.5,.5)

"BLD",2889,"KRN","B",.84,.84)

"BLD",2889,"KRN","B",3.6,3.6)

"BLD",2889,"KRN","B",3.8,3.8)

"BLD",2889,"KRN","B",9.2,9.2)

"BLD",2889,"KRN","B",9.8,9.8)

"BLD",2889,"KRN","B",19,19)

"BLD",2889,"KRN","B",19.1,19.1)

"BLD",2889,"KRN","B",101,101)

"BLD",2889,"KRN","B",409.61,409.61)

"BLD",2889,"KRN","B",771,771)

"BLD",2889,"KRN","B",779.2,779.2)

"BLD",2889,"KRN","B",870,870)

"BLD",2889,"KRN","B",8989.51,8989.51)

"BLD",2889,"KRN","B",8989.52,8989.52)

"BLD",2889,"KRN","B",8994,8994)

"BLD",2889,"QUES",0)
^9.62^^
"BLD",2889,"REQB",0)
^9.611^5^5
"BLD",2889,"REQB",1,0)
RG*1.0*47^2
"BLD",2889,"REQB",2,0)
RG*1.0*48^2
"BLD",2889,"REQB",3,0)
RG*1.0*57^2
"BLD",2889,"REQB",4,0)
RG*1.0*58^2
"BLD",2889,"REQB",5,0)
DG*5.3*837^2
"BLD",2889,"REQB","B","DG*5.3*837",5)

"BLD",2889,"REQB","B","RG*1.0*47",1)

"BLD",2889,"REQB","B","RG*1.0*48",2)

"BLD",2889,"REQB","B","RG*1.0*57",3)

"BLD",2889,"REQB","B","RG*1.0*58",4)

"MBREQ")
0
"PKG",272,-1)
1^1
"PKG",272,0)
CLINICAL INFO RESOURCE NETWORK^RG^CIRN
"PKG",272,20,0)
^9.402P^^0
"PKG",272,22,0)
^9.49I^1^1
"PKG",272,22,1,0)
1.0^2990430^2990601^12555
"PKG",272,22,1,"PAH",1,0)
59^3120111
"PKG",272,22,1,"PAH",1,1,0)
^^4^4^3120111
"PKG",272,22,1,"PAH",1,1,1,0)
MESSAGING ENHANCEMENTS FOR NEW FIELDS
"PKG",272,22,1,"PAH",1,1,2,0)
 
"PKG",272,22,1,"PAH",1,1,3,0)
Refer to patch RG*1*59 in the FORUM Patch Module for a complete
"PKG",272,22,1,"PAH",1,1,4,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","RGADTP")
0^5^B82380142^B77748334
"RTN","RGADTP",1,0)
RGADTP ;BIR/DLR-ADT PROCESSOR TO RETRIGGER A08 or A04 MESSAGES WITH AL/AL (COMMIT/APPLICATION) ACKNOWLEDGEMENTS ;22 Dec 2011  5:08 PM
"RTN","RGADTP",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**26,27,20,34,35,40,45,44,47,59**;30 Apr 99;Build 1
"RTN","RGADTP",3,0)
 ;
"RTN","RGADTP",4,0)
 ;Reference to BLDEVN^VAFCQRY and BLDPID^VAFCQRY supported by IA #3630
"RTN","RGADTP",5,0)
 ;Reference to EN1^VAFHLZEL is supported by IA #752
"RTN","RGADTP",6,0)
 ;Reference to Patient file (#2) PREFERRED FACILITY (#27.02) is supported by IA #1850
"RTN","RGADTP",7,0)
 ;Reference to $$PV2, $$PHARA, $$LABE, $$RADE ^VAFCSB is supported by IA #4921
"RTN","RGADTP",8,0)
 ;
"RTN","RGADTP",9,0)
INIT ;
"RTN","RGADTP",10,0)
 N RGER,RGSITE,ARRAY,MSH,RGLOCAL,RGEVNT,REP,DIC,DR,DIE,DA,DLAYGO
"RTN","RGADTP",11,0)
 S RGER=""
"RTN","RGADTP",12,0)
 D IN
"RTN","RGADTP",13,0)
 D PROCIN
"RTN","RGADTP",14,0)
 D GENACK
"RTN","RGADTP",15,0)
 Q
"RTN","RGADTP",16,0)
PROC ;processing entry point
"RTN","RGADTP",17,0)
 N HLA,RGADT,PV1,DIC,ARRAY,RGEVNT,RGLOCAL,REP,ICN,RGSITE
"RTN","RGADTP",18,0)
 S RGEVNT=HL("ETN")
"RTN","RGADTP",19,0)
 I $G(HL("MID"))'="" S RGADT=HL("MID")
"RTN","RGADTP",20,0)
 I $G(HL("MID"))="" S RGADT=999
"RTN","RGADTP",21,0)
 D IN
"RTN","RGADTP",22,0)
 S ICN=$G(ARRAY("ICN"))
"RTN","RGADTP",23,0)
 I +$G(ICN)<1 Q  ;quit if no ICN
"RTN","RGADTP",24,0)
 I $E($G(ICN),1,3)=$P($$SITE^VASITE,"^",3) Q  ;quit if ICN is a local
"RTN","RGADTP",25,0)
 S ZTSAVE("DFN")="",ZTSAVE("RGEVNT")="",ZTSAVE("HLA(""HLS"",")="",ZTRTN="SEND^RGADTPC",ZTDESC="Sending HL7 Patient Update...",ZTIO="RG QUEUE",ZTDTH=$H D ^%ZTLOAD
"RTN","RGADTP",26,0)
 K ZTSAVE,ZTRTN,ZTDESC,ZTIO,ZTDTH
"RTN","RGADTP",27,0)
 Q
"RTN","RGADTP",28,0)
IN ;Process in the ADT A04/A08 (routing logic)
"RTN","RGADTP",29,0)
 N RGI,MSG,RG,SG,DFN,EVN,SITE,RGC,RGJ,DIC,PV1,PID,COMP,ENT,EN,THLA,LAB,RAD,PHARM,TMP
"RTN","RGADTP",30,0)
 S ENT=1,REP=$E(HL("ECH"),2),COMP=$E(HL("ECH"),1)
"RTN","RGADTP",31,0)
 ;set local flag to indicate the processing of an outbound for reformatting
"RTN","RGADTP",32,0)
 I $P($G(HL("SAF")),COMP)=$P($$SITE^VASITE,"^",3) S RGLOCAL=1
"RTN","RGADTP",33,0)
 I $P($G(HL("SAF")),COMP)'=$P($$SITE^VASITE,"^",3) S RGLOCAL=0
"RTN","RGADTP",34,0)
 S RGC=$E($G(HL("ECH")),1)
"RTN","RGADTP",35,0)
 F RGI=1:1 X HLNEXT Q:HLQUIT'>0  S MSG=HLNODE,SG=$E(HLNODE,1,3) D
"RTN","RGADTP",36,0)
 .S RGJ=0 F  S RGJ=$O(HLNODE(RGJ)) Q:'RGJ  S MSG(RGJ)=HLNODE(RGJ)
"RTN","RGADTP",37,0)
 .D:SG?2A1(1A,1N) PICK
"RTN","RGADTP",38,0)
 ;if message MSH sending facility matches the PID assigning authority update
"RTN","RGADTP",39,0)
 S ENT=0,EN=1 F  S ENT=$O(THLA("HLS",ENT)) Q:ENT=""  D
"RTN","RGADTP",40,0)
 .S HLA("HLS",EN)=THLA("HLS",ENT),EN=EN+1
"RTN","RGADTP",41,0)
 .I $E($G(THLA("HLS",ENT)),1,3)="PID"!($E($G(THLA("HLS",ENT)),1,3)="ZEL") D
"RTN","RGADTP",42,0)
 ..;**47 handle if ZEL is over 245 as well
"RTN","RGADTP",43,0)
 ..I $O(THLA("HLS",ENT,""))'="" D
"RTN","RGADTP",44,0)
 ...S CNT="" F  S CNT=$O(THLA("HLS",ENT,CNT)) Q:CNT=""  S HLA("HLS",EN-1,CNT)=THLA("HLS",ENT,CNT)
"RTN","RGADTP",45,0)
 .I $E($G(THLA("HLS",ENT)),1,3)="PV1" I RGLOCAL S TMP=$$PV2B I TMP'="" S HLA("HLS",EN)=$$PV2B,EN=EN+1  ;**47
"RTN","RGADTP",46,0)
 .I $E($G(THLA("HLS",ENT)),1,3)="ZPD" I RGLOCAL D
"RTN","RGADTP",47,0)
 ..S RAD=$$RADE I RAD'="" S HLA("HLS",EN)=RAD,EN=EN+1
"RTN","RGADTP",48,0)
 ..S LAB=$$LABE I LAB'="" S HLA("HLS",EN)=LAB,EN=EN+1
"RTN","RGADTP",49,0)
 ..S PHARM=$$PHARA I PHARM'="" S HLA("HLS",EN)=PHARM,EN=EN+1
"RTN","RGADTP",50,0)
 ..S OLD=$$OLD I OLD'="" S HLA("HLS",EN)=OLD,EN=EN+1 ;**59,MVI_914: Pass OLDER RECORD in OBX if flagged as such
"RTN","RGADTP",51,0)
QUIT Q
"RTN","RGADTP",52,0)
ROUTE ;
"RTN","RGADTP",53,0)
 N RGERR
"RTN","RGADTP",54,0)
 I $G(RGEVNT)="" S RGEVNT=$G(HL("ETN"))
"RTN","RGADTP",55,0)
 N MPI S MPI=$$MPILINK^MPIFAPI() D
"RTN","RGADTP",56,0)
 .I $P($G(MPI),U)'=-1 S HLL("LINKS",1)="RG ADT-"_HL("ETN")_" 2.4 CLIENT^"_MPI
"RTN","RGADTP",57,0)
 .I $P($G(MPI),U)=-1 D
"RTN","RGADTP",58,0)
 ..N RGLOG,RGMTXT D START^RGHLLOG(HLMTIEN,"","") S RGMTXT="for DFN#"_$G(DFN)
"RTN","RGADTP",59,0)
 ..D EXC^RGHLLOG(224,"No MPI link identified"_RGMTXT,$G(DFN)) S RGERR=1
"RTN","RGADTP",60,0)
 I $G(RGERR)'=1 S ^XTMP("RG"_HL("ETN")_"%"_DFN,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"RG"_HL("ETN")_" msg to MPI for DFN "_DFN S ^XTMP("RG"_HL("ETN")_"%"_DFN,"MPI",0)="A"
"RTN","RGADTP",61,0)
 Q
"RTN","RGADTP",62,0)
RESP ;
"RTN","RGADTP",63,0)
 N RGER,RGSITE,ARRAY,MSH,RGLOCAL,RGEVNT,RGI,MSG,RG,SG,DFN,EVN,SITE,RGC,RGJ,DIC,PV1,PID
"RTN","RGADTP",64,0)
 D IN
"RTN","RGADTP",65,0)
 Q
"RTN","RGADTP",66,0)
PICK ;check routine for segment entry point
"RTN","RGADTP",67,0)
 I $T(@SG)]"" D @SG
"RTN","RGADTP",68,0)
 I $T(@SG)="" Q
"RTN","RGADTP",69,0)
 Q
"RTN","RGADTP",70,0)
MSA ;process the MSA segment
"RTN","RGADTP",71,0)
 N ARRAY,CNT,DFN,EXIT,HLCOMP,RGAA,RGERR,RGEVNT,RGMSG,RETURN,RGX,RGY,RGCODE
"RTN","RGADTP",72,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",73,0)
 S RGAA=MSG,EXIT=0,RGCODE=$P(RGAA,HL("FS"),2),RGMSG=$P(RGAA,HL("FS"),3),RGERR=$P(RGAA,HL("FS"),4),RGMSG=$$MSG^HLCSUTL(RGMSG,"RETURN(1)") K RGMSG
"RTN","RGADTP",74,0)
 S CNT=1,RGX=0 F  S RGX=$O(RETURN(1,RGX)) Q:'RGX!(EXIT=1)  D
"RTN","RGADTP",75,0)
 .I RETURN(1,RGX)'="" D
"RTN","RGADTP",76,0)
 ..I $D(RGMSG) S RGMSG(CNT)=RETURN(1,RGX),CNT=CNT+1
"RTN","RGADTP",77,0)
 ..I '$D(RGMSG) S RGMSG=RETURN(1,RGX),RGY=RGX
"RTN","RGADTP",78,0)
 .I RETURN(1,RGX)="" D  S CNT=1 K RGMSG
"RTN","RGADTP",79,0)
 ..I $E(RETURN(1,RGY),1,3)="MSH" D MSH
"RTN","RGADTP",80,0)
 ..I $E(RETURN(1,RGY),1,3)="PID" D PIDP^RGADTP1(.RGMSG,.ARRAY,.HL) S EXIT=1
"RTN","RGADTP",81,0)
 S DFN=$G(ARRAY("DFN"))
"RTN","RGADTP",82,0)
 ;**45 Log Exception ONLY if AR is returned in MSA segment
"RTN","RGADTP",83,0)
 I RGCODE="AR" D
"RTN","RGADTP",84,0)
 .D START^RGHLLOG(HLMTIEN,"","")
"RTN","RGADTP",85,0)
 .D EXC^RGHLLOG(234,RGERR,DFN) ;**44
"RTN","RGADTP",86,0)
 .D STOP^RGHLLOG(0)
"RTN","RGADTP",87,0)
 K:$G(DFN)>0 ^XTMP("MPIF OLD RECORDS",DFN) ;**59,MVI_914: Delete the old record designation
"RTN","RGADTP",88,0)
 I $D(^XTMP("RG"_HL("ETN")_"%"_DFN,0)) K ^XTMP("RG"_HL("ETN")_"%"_DFN)
"RTN","RGADTP",89,0)
 Q
"RTN","RGADTP",90,0)
MSH ;
"RTN","RGADTP",91,0)
 S MSH=1
"RTN","RGADTP",92,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",93,0)
 I 'RGLOCAL S RGC=$E(HL("ECH"),1)
"RTN","RGADTP",94,0)
 S RGSITE=$P($P(MSG,HL("FS"),4),RGC),RGEVNT=$P($P(MSG,HL("FS"),9),RGC,2)
"RTN","RGADTP",95,0)
 Q
"RTN","RGADTP",96,0)
PV2 ;processor of PV2 segment ;**47
"RTN","RGADTP",97,0)
 Q
"RTN","RGADTP",98,0)
PV2B() ;builder of PV2 segment ;**47
"RTN","RGADTP",99,0)
 N RET S RET=""
"RTN","RGADTP",100,0)
 I 'RGLOCAL Q RET
"RTN","RGADTP",101,0)
 N X S X="VAFCSB" X ^%ZOSF("TEST") Q:'$T RET
"RTN","RGADTP",102,0)
 ;**45 VAFCSB coming in with DG*5.3*707
"RTN","RGADTP",103,0)
 Q $$PV2^VAFCSB
"RTN","RGADTP",104,0)
PHARA() ;build obx to show active prescriptions
"RTN","RGADTP",105,0)
 N RET S RET=""
"RTN","RGADTP",106,0)
 I 'RGLOCAL Q RET
"RTN","RGADTP",107,0)
 I '$$PATCH^XPDUTL("PSS*1.0*101") Q RET
"RTN","RGADTP",108,0)
 N X S X="VAFCSB" X ^%ZOSF("TEST") Q:'$T RET
"RTN","RGADTP",109,0)
 ;**45 VAFCSB coming in with DG*5.3*707
"RTN","RGADTP",110,0)
 Q $$PHARA^VAFCSB
"RTN","RGADTP",111,0)
LABE() ;BUILD OBX FOR LAST LAB TEST DATE
"RTN","RGADTP",112,0)
 N RET S RET=""
"RTN","RGADTP",113,0)
 I 'RGLOCAL Q RET
"RTN","RGADTP",114,0)
 I '$$PATCH^XPDUTL("LR*5.2*295") Q RET
"RTN","RGADTP",115,0)
 N X S X="VAFCSB" X ^%ZOSF("TEST") Q:'$T RET
"RTN","RGADTP",116,0)
 ;**45 VAFCSB coming in with DG*5.3*707
"RTN","RGADTP",117,0)
 Q $$LABE^VAFCSB
"RTN","RGADTP",118,0)
RADE() ;BUILD OBX FOR LAST RADIOLOGY TEST DATE
"RTN","RGADTP",119,0)
 N RET S RET=""
"RTN","RGADTP",120,0)
 I 'RGLOCAL Q RET
"RTN","RGADTP",121,0)
 I '$$PATCH^XPDUTL("RA*5.0*76") Q RET
"RTN","RGADTP",122,0)
 N X S X="VAFCSB" X ^%ZOSF("TEST") Q:'$T RET
"RTN","RGADTP",123,0)
 ;**45 VAFCSB coming in with DG*5.3*707
"RTN","RGADTP",124,0)
 Q $$RADE^VAFCSB
"RTN","RGADTP",125,0)
EVN ;;
"RTN","RGADTP",126,0)
 N CNT,ERR S EVN=RGI
"RTN","RGADTP",127,0)
 I RGLOCAL S (EVN(1),THLA("HLS",ENT))=MSG,ENT=ENT+1
"RTN","RGADTP",128,0)
 I 'RGLOCAL D
"RTN","RGADTP",129,0)
 .S ARRAY("EVR")=$P(MSG,HL("FS"),2),ARRAY("DLT")=$$FMDATE^HLFNC($P(MSG,HL("FS"),3))
"RTN","RGADTP",130,0)
 .S ARRAY("EVNAME")=$$FMNAME^XLFNAME($P(MSG,HL("FS"),2),"",$E(HL("ECH"),1)),ARRAY("SENDING SITE")=$P(MSG,HL("FS"),8)
"RTN","RGADTP",131,0)
 Q
"RTN","RGADTP",132,0)
EVNP ;
"RTN","RGADTP",133,0)
 N EVNX
"RTN","RGADTP",134,0)
 I $G(DFN)'="" D BLDEVN^VAFCQRY(DFN,"1,2,4,5,6,7",.EVN,.HL,$G(HL("ETN")),.ERR) S CNT=0,EVNX=0 F  S EVNX=$O(EVN(EVNX)) Q:'EVNX  D
"RTN","RGADTP",135,0)
 .I CNT>0 S THLA("HLS",EVN,CNT)=EVN(EVNX),CNT=CNT+1
"RTN","RGADTP",136,0)
 .I CNT'>0 S THLA("HLS",EVN)=EVN(EVNX),CNT=CNT+1
"RTN","RGADTP",137,0)
 Q
"RTN","RGADTP",138,0)
PID ;;
"RTN","RGADTP",139,0)
 N CNT,PIDX
"RTN","RGADTP",140,0)
 I RGLOCAL D
"RTN","RGADTP",141,0)
 .N HLCOMP S HLCOMP=$E(HL("ECH"),1),THLA("HLS",ENT)=MSG,DFN=$P($P(MSG,HL("FS"),4),HLCOMP) ;**45 REMOVED +
"RTN","RGADTP",142,0)
 .D EVNP
"RTN","RGADTP",143,0)
 .D BLDPID^VAFCQRY(DFN,1,"ALL",.PID,.HL)
"RTN","RGADTP",144,0)
 .;get ICN value in the PID segment
"RTN","RGADTP",145,0)
 .S ARRAY("ICN")=+$P($P(PID(1),HL("FS"),4),HLCOMP)
"RTN","RGADTP",146,0)
 .S CNT=0,PIDX=0 F  S PIDX=$O(PID(PIDX)) Q:'PIDX  D
"RTN","RGADTP",147,0)
 ..I CNT>0 S THLA("HLS",ENT,CNT)=PID(PIDX),CNT=CNT+1
"RTN","RGADTP",148,0)
 ..I CNT'>0 S THLA("HLS",ENT)=PID(PIDX),CNT=CNT+1
"RTN","RGADTP",149,0)
 .S ENT=ENT+1
"RTN","RGADTP",150,0)
 I 'RGLOCAL D PIDP^RGADTP1(.MSG,.ARRAY,.HL)
"RTN","RGADTP",151,0)
 Q
"RTN","RGADTP",152,0)
PD1 ;SET PD1 SEQ 3 TO BE PREFERRED FACILITY INSTEAD OF CMOR PATCH **45
"RTN","RGADTP",153,0)
 N PD1
"RTN","RGADTP",154,0)
 I RGLOCAL D
"RTN","RGADTP",155,0)
 .;S PD1=$$PD1^VAFCSB
"RTN","RGADTP",156,0)
 .;I PD1'="" S THLA("HLS",ENT)=PD1,ENT=ENT+1
"RTN","RGADTP",157,0)
 I 'RGLOCAL S (ARRAY(991.03),ARRAY("CMOR"))=$P($P(MSG,HL("FS"),4),RGC) ;PUTTING BACK TO DO NEED FOR PATCH 40 ON MPI SIDE
"RTN","RGADTP",158,0)
 ;- NO LONGER DEALING WITH CMOR
"RTN","RGADTP",159,0)
 Q
"RTN","RGADTP",160,0)
PV1 ;;
"RTN","RGADTP",161,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",162,0)
 Q
"RTN","RGADTP",163,0)
OBX ;;
"RTN","RGADTP",164,0)
 N COMP,SSNV S COMP=$E(HL("ECH"),1)
"RTN","RGADTP",165,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",166,0)
 I 'RGLOCAL D:$$FREE^RGRSPARS($P($P(MSG,HL("FS"),4),RGC,2))="SECURITY LEVEL"
"RTN","RGADTP",167,0)
 .S ARRAY("SENSITIVITY")=$$SENSTIVE^RGRSPARS($P(MSG,HL("FS"),6),COMP),ARRAY("SENSITIVITY DATE")=$$FREE^RGRSPARS($$FMDATE^HLFNC($P(MSG,HL("FS"),15)))
"RTN","RGADTP",168,0)
 .S ARRAY("SENSITIVITY USER")=$$FREE^RGRSPARS($P($P(MSG,HL("FS"),17),RGC,2))_","_$$FREE^RGRSPARS($P($P(MSG,HL("FS"),17),RGC,3))
"RTN","RGADTP",169,0)
 ;**45 Get SSN VERIFICATION STATUS out of OBX if message is from the MPI
"RTN","RGADTP",170,0)
 ;I 'RGLOCAL,$P(HL("SFN"),COMP)="200M" I $P($P(MSG,HL("FS"),4),RGC)="SSN VERIFICATION STATUS" S SSNV=$P($P(MSG,HL("FS"),6),RGC,2),ARRAY(.0907)=$S(SSNV="VERIFIED":4,SSNV="INVALID":2,1:"@")
"RTN","RGADTP",171,0)
 ;**47 use SSN Verification status code and not words since they have changed since this code was first written
"RTN","RGADTP",172,0)
 ;only update values to valid or invalid other statuses aren't stored in VistA
"RTN","RGADTP",173,0)
 I 'RGLOCAL,$P(HL("SFN"),COMP)="200M" I $P($P(MSG,HL("FS"),4),RGC)="SSN VERIFICATION STATUS" S SSNV=$P($P(MSG,HL("FS"),6),RGC,1),ARRAY(.0907)=$S(SSNV=4:4,SSNV=2:2,1:"@")
"RTN","RGADTP",174,0)
 Q
"RTN","RGADTP",175,0)
ZPD ;;
"RTN","RGADTP",176,0)
 I RGLOCAL S THLA("HLS",ENT)=$$EN1^VAFHLZPD(DFN,"1,17,21,34"),ENT=ENT+1 ;**45 to build new ZPD
"RTN","RGADTP",177,0)
 I 'RGLOCAL S ARRAY(.0906)=$P(MSG,HL("FS"),35) I ARRAY(.0906)=HL("Q") S ARRAY(.0906)="@" ;**45 Pull out pseudo ssn reason
"RTN","RGADTP",178,0)
 Q
"RTN","RGADTP",179,0)
ZSP ;;
"RTN","RGADTP",180,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",181,0)
 I 'RGLOCAL S ARRAY(.301)=$$YESNO^RGRSPARS($P(MSG,HL("FS"),3)),ARRAY(.302)=$$FREE^RGRSPARS($P(MSG,HL("FS"),4)),ARRAY(.323)=$$POS^RGRSPARS($P(MSG,HL("FS"),5))
"RTN","RGADTP",182,0)
 Q
"RTN","RGADTP",183,0)
ZEL ;;
"RTN","RGADTP",184,0)
 I RGLOCAL D
"RTN","RGADTP",185,0)
 .;**40 to rebuild ZEL segment
"RTN","RGADTP",186,0)
 .I '$D(DFN) S THLA("HLS",ENT)=MSG,ENT=ENT+1 Q  ;don't know DFN pass back original ZEL segment
"RTN","RGADTP",187,0)
 .N VAFZEL D EN1^VAFHLZEL(DFN,"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22",2,.VAFZEL) ;build a complete ZEL segment
"RTN","RGADTP",188,0)
 .;need to take into account may be more than 1 array entry and that each entry could go over 245 so there would be another subscript
"RTN","RGADTP",189,0)
 .N CNT,ZELX S (CNT,ZELX)=0 F  S ZELX=$O(VAFZEL(ZELX)) Q:'ZELX  D
"RTN","RGADTP",190,0)
 ..I CNT>0 S THLA("HLS",ENT,CNT)=VAFZEL(ZELX),CNT=CNT+1
"RTN","RGADTP",191,0)
 ..I CNT'>0 S THLA("HLS",ENT)=VAFZEL(ZELX),ENT=ENT+1
"RTN","RGADTP",192,0)
 I 'RGLOCAL D
"RTN","RGADTP",193,0)
 . S ARRAY(.361)=$$ELIG^RGRSPARS($P(MSG,HL("FS"),3)),ARRAY(.3612)=$$FREE^RGRSPARS($P(MSG,HL("FS"),12))
"RTN","RGADTP",194,0)
 . S ARRAY(.3615)=$$FREE^RGRSPARS($P(MSG,HL("FS"),14)),ARRAY(391)=$$TYPE^RGRSPARS($P(MSG,HL("FS"),10)),ARRAY(1901)=$$VETERAN^RGRSPARS($P(MSG,HL("FS"),9))
"RTN","RGADTP",195,0)
 Q
"RTN","RGADTP",196,0)
ZCT ;;
"RTN","RGADTP",197,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",198,0)
 I 'RGLOCAL S ARRAY(.211)=$$FREE^RGRSPARS($P(MSG,HL("FS"),4)),ARRAY(.219)=$$FREE^RGRSPARS($P(MSG,HL("FS"),7))
"RTN","RGADTP",199,0)
 Q
"RTN","RGADTP",200,0)
ZEM ;;
"RTN","RGADTP",201,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",202,0)
 I 'RGLOCAL S ARRAY(.31115)=$$EMP^RGRSPARS($P(MSG,HL("FS"),4))
"RTN","RGADTP",203,0)
 Q
"RTN","RGADTP",204,0)
ZFF ;;
"RTN","RGADTP",205,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",206,0)
 I 'RGLOCAL S ARRAY("FLD")=$P(MSG,HL("FS"),3)
"RTN","RGADTP",207,0)
 Q
"RTN","RGADTP",208,0)
PROCIN ;
"RTN","RGADTP",209,0)
 D PROCIN^RGADTP2(.ARRAY,.RGLOCAL,.RGER,.DFN,.HL)
"RTN","RGADTP",210,0)
 Q
"RTN","RGADTP",211,0)
GENACK ;
"RTN","RGADTP",212,0)
 N RGCNT,IEN,RG
"RTN","RGADTP",213,0)
 I $G(ARRAY("DFN"))'>0 S RGER="-1^Unknown ICN#"_$G(ARRAY("ICN"))_" and SSN#"_$G(ARRAY(.09))
"RTN","RGADTP",214,0)
 S RGCNT=1,HLA("HLA",RGCNT)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_HL("FS")_$S(+$G(RGER)<0:$P(RGER,"^",2,3),1:""),RGCNT=RGCNT+1
"RTN","RGADTP",215,0)
 S RGSITE=$$LKUP^XUAF4(RGSITE)
"RTN","RGADTP",216,0)
 D LINK^HLUTIL3(RGSITE,.RG) S IEN=$O(RG(0)) S HLL("LINKS",1)="^"_RG(IEN)
"RTN","RGADTP",217,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.HLRESLTA,"",.HL)
"RTN","RGADTP",218,0)
 K HLA
"RTN","RGADTP",219,0)
 Q
"RTN","RGADTP",220,0)
RSP ;
"RTN","RGADTP",221,0)
 Q
"RTN","RGADTP",222,0)
OLD() ; Return OBX segment to flag a record as "old"
"RTN","RGADTP",223,0)
 ;**59,MVI_914: New subroutine
"RTN","RGADTP",224,0)
 Q $S($D(^XTMP("MPIF OLD RECORDS",DFN))#2:"OBX"_HL("FS")_HL("FS")_"CE"_HL("FS")_"OLDER RECORD"_HL("FS")_HL("FS")_"Y",1:"")
"RTN","RGADTP1")
0^3^B41160023^B39482051
"RTN","RGADTP1",1,0)
RGADTP1 ;BIR/DLR-ADT PROCESSOR TO RETRIGGER A08 or A04 MESSAGES WITH AL/AL (COMMIT/APPLICATION) ACKNOWLEDGEMENTS - CONTINUED ;15 Dec 2011  1:44 PM
"RTN","RGADTP1",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**26,27,42,45,44,47,48,59**;30 Apr 99;Build 1
"RTN","RGADTP1",3,0)
PIDP(MSG,ARRAY,HL) ;process PID segment
"RTN","RGADTP1",4,0)
 N ID,IDS,PIDAA,PIDNTC
"RTN","RGADTP1",5,0)
 ;Since PID can be over 245 characters loop through setting a PID ARRAY
"RTN","RGADTP1",6,0)
 ;sequenced PID(1)="PID"... PID(4 or 5) can be over 245 characters so
"RTN","RGADTP1",7,0)
 ;it will also loop and place it in PID(4,1...
"RTN","RGADTP1",8,0)
 ;
"RTN","RGADTP1",9,0)
 ; Input variables
"RTN","RGADTP1",10,0)
 ;   assumes that MSG or MSG(I) will contain the PID segment
"RTN","RGADTP1",11,0)
 ; Output ARRAY ARRAY will contain the following subscripts
"RTN","RGADTP1",12,0)
 ;   SSN - patient SSN
"RTN","RGADTP1",13,0)
 ;   ICN - patient ICN
"RTN","RGADTP1",14,0)
 ;   DFN - sites local identifier
"RTN","RGADTP1",15,0)
 ;   MPISSITE - authoritative source (station# of sending site)
"RTN","RGADTP1",16,0)
 ;   SEX - patient's SEX
"RTN","RGADTP1",17,0)
 ;   MPIDOB - Date of Birth
"RTN","RGADTP1",18,0)
 ;   NAME,SURNAME,FIRST,MIDDLE,PREFIX,and SUFFIX - Patient Name
"RTN","RGADTP1",19,0)
 ;   MMN - Mother's maiden name
"RTN","RGADTP1",20,0)
 ;   POBCITY, POBSTATE - Place of birth city and state
"RTN","RGADTP1",21,0)
 ;
"RTN","RGADTP1",22,0)
 N PID,MPIJ,LNGTH,LNGTH1,PID1,SEQ,SEQ1,COMP,SUBCOMP,REP,HLECH,X,Y,CNT,NXT,ID,IDS,PIDAA,PIDNTC,NAME,LNGTH2,PIDSITE,PIDXDT,HLECH,HLFS
"RTN","RGADTP1",23,0)
 S HLFS=HL("FS"),HLECH=HL("ECH")
"RTN","RGADTP1",24,0)
 S ARRAY("DFN")="",ARRAY("ICN")="",ARRAY("CLAIMN")="",ARRAY("SSN")="",ARRAY("ALIAS")=""
"RTN","RGADTP1",25,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4),REP=$E(HL("ECH"),2)
"RTN","RGADTP1",26,0)
 S LNGTH=$L(MSG,HL("FS")) F SEQ=1:1:LNGTH S PID(SEQ)=$P(MSG,HL("FS"),SEQ)
"RTN","RGADTP1",27,0)
 S SEQ1=1,X=0 F  S X=$O(MSG(X)) Q:'X  S LNGTH=$L(MSG(X),HL("FS")) D
"RTN","RGADTP1",28,0)
 . F Y=1:1:LNGTH S:Y'=1 SEQ=SEQ+1 D
"RTN","RGADTP1",29,0)
 .. S NXT=$P(MSG(X),HL("FS"),Y) D
"RTN","RGADTP1",30,0)
 ... I $L($G(PID(SEQ)))=245 D  Q
"RTN","RGADTP1",31,0)
 .... I $L(NXT_$G(PID(SEQ,SEQ1)))>245 S LNGTH1=$L(PID(SEQ,SEQ1)) S LNGTH2=245-LNGTH1,PID(SEQ,SEQ1)=$G(PID(SEQ,SEQ1))_$E(NXT,1,LNGTH2),LNGTH2=LNGTH2+1,NXT=$E(NXT,LNGTH2,$L(NXT)),SEQ1=SEQ1+1
"RTN","RGADTP1",32,0)
 .... I $L(NXT_$G(PID(SEQ,SEQ1)))'>245 S PID(SEQ,SEQ1)=$G(PID(SEQ,SEQ1))_NXT
"RTN","RGADTP1",33,0)
 ... I $L(NXT_$G(PID(SEQ)))>245 S LNGTH1=$L($G(PID(SEQ))) S LNGTH2=245-LNGTH1,PID(SEQ)=$G(PID(SEQ))_$E(NXT,1,LNGTH2),LNGTH2=LNGTH2+1,NXT=$E(NXT,LNGTH2,$L(NXT)) S PID(SEQ,SEQ1)=NXT
"RTN","RGADTP1",34,0)
 ... I $L(NXT_$G(PID(SEQ)))'>245 S PID(SEQ)=$G(PID(SEQ))_NXT Q
"RTN","RGADTP1",35,0)
 ;get PID-3 Patient Identifier List (three ids should be returned ICN, SSN, and DFN)
"RTN","RGADTP1",36,0)
 N LASTID,IDCNT,CNT,ACNT
"RTN","RGADTP1",37,0)
 S IDS=PID(4)
"RTN","RGADTP1",38,0)
 S LASTID=$L(IDS,REP),IDCNT=1,IDS=PID(4),CNT=1,ACNT=1
"RTN","RGADTP1",39,0)
 F X=1:1:LASTID S ID=$P(IDS,REP,X) D
"RTN","RGADTP1",40,0)
 . ;if this is the last entry check for an extension of the message and reset the key variables
"RTN","RGADTP1",41,0)
 . I X=LASTID I $D(PID(4,IDCNT)) S ID=ID_$P(PID(4,IDCNT),REP),IDS=$P(PID(4,IDCNT),REP,2,99),IDCNT=IDCNT+1,X=0,LASTID=$L(IDS,REP)
"RTN","RGADTP1",42,0)
 . ;get id, assigning authority, and name type code
"RTN","RGADTP1",43,0)
 . S PIDAA=$P($P(ID,COMP,4),SUBCOMP),PIDNTC=$P(ID,COMP,5),PIDSITE=$P($P(ID,COMP,6),SUBCOMP,2),PIDXDT=$P(ID,COMP,8)
"RTN","RGADTP1",44,0)
 . S ID=$P(ID,COMP)
"RTN","RGADTP1",45,0)
 . ;Q:ID="" **48
"RTN","RGADTP1",46,0)
 . ;check assigning authority(0363) AND name type code(0203)
"RTN","RGADTP1",47,0)
 . I PIDAA="USVHA" D
"RTN","RGADTP1",48,0)
 .. I PIDNTC="NI" D
"RTN","RGADTP1",49,0)
 ... I $G(PIDXDT)="" S ARRAY("ICN")=ID,ARRAY("MPISSITE")=PIDSITE,ARRAY(991.02)=$P(ID,"V",2)  ;National unique individual identifier
"RTN","RGADTP1",50,0)
 ... I $G(PIDXDT)'="" S ARRAY("OID",CNT)=ID_"^"_PIDAA_"^"_PIDSITE_"^"_PIDXDT,CNT=CNT+1  ;Deprecated National unique individual identifier
"RTN","RGADTP1",51,0)
 .. I PIDNTC="PI" S ARRAY("DFN")=ID,ARRAY("DFNLOC")=PIDSITE  ;Patient internal identifier
"RTN","RGADTP1",52,0)
 . I PIDAA="USSSA" D
"RTN","RGADTP1",53,0)
 .. I PIDNTC="SS",PIDXDT="" S ARRAY("SSN")=ID I ID=HL("Q") S ARRAY("SSN")="@"  ;Social Security number **44 (new) look out for alias ssns
"RTN","RGADTP1",54,0)
 .. I PIDNTC="SS",PIDXDT'="" S $P(ARRAY("ALIAS",ACNT),"^",2)=ID,ACNT=ACNT+1 ;**48 store alias ssn
"RTN","RGADTP1",55,0)
 .. ;**47 includes HL("Q") check
"RTN","RGADTP1",56,0)
 . I PIDAA="USVBA" D
"RTN","RGADTP1",57,0)
 .. I PIDNTC="PN" S ARRAY("CLAIMN")=ID  ;VBA CLAIM#
"RTN","RGADTP1",58,0)
 . ;**59,MVI_880: Get TIN and FIN values
"RTN","RGADTP1",59,0)
 . I PIDAA="USDOD" D
"RTN","RGADTP1",60,0)
 .. I PIDNTC="TIN" S ARRAY("TIN")=$S(ID=HL("Q"):"@",1:ID)
"RTN","RGADTP1",61,0)
 .. E  I PIDNTC="FIN" S ARRAY("FIN")=$S(ID=HL("Q"):"@",1:ID)
"RTN","RGADTP1",62,0)
 ;get PID-4 alternate ID (ICN History)
"RTN","RGADTP1",63,0)
 I $G(PID(5))'="" D
"RTN","RGADTP1",64,0)
 . S CNT=1
"RTN","RGADTP1",65,0)
 . F X=1:1:$L(PID(5),REP) S ARRAY("OID",CNT)=$P(PID(5),REP,X),CNT=CNT+1
"RTN","RGADTP1",66,0)
 . S Y=0 F  S Y=$O(PID(5,Y)) Q:'Y  D
"RTN","RGADTP1",67,0)
 .. S ARRAY("OID",CNT-1)=ARRAY("OID",CNT-1)_$P(PID(5,Y),REP)
"RTN","RGADTP1",68,0)
 .. F X=2:1:$L(PID(5,Y),REP) S ARRAY("OID",CNT)=$P(PID(5,Y),REP,X),CNT=CNT+1
"RTN","RGADTP1",69,0)
 . S X=0 F  S X=$O(ARRAY("OID",X)) Q:'X  D
"RTN","RGADTP1",70,0)
 .. N ID,AA,AL S ID=$P(ARRAY("OID",X),COMP),AA=$P($P(ARRAY("OID",X),COMP,4),SUBCOMP,1),AL=$P($P(ARRAY("OID",X),COMP,6),SUBCOMP,2) S AL=$$IEN^XUAF4(AL)
"RTN","RGADTP1",71,0)
 .. S ARRAY("OID",X)=ID_"^"_AA_"^"_AL
"RTN","RGADTP1",72,0)
 ;get PID-5 Patient Name
"RTN","RGADTP1",73,0)
 N KK,JJ,TMPJ,IDCNT2 S IDCNT=1
"RTN","RGADTP1",74,0)
 I $G(PID(6))'="" F IDCNT2=1:1:$L(PID(6),REP) S NAME=$P(PID(6),REP,IDCNT2) D
"RTN","RGADTP1",75,0)
 .I $P(NAME,COMP,7)="L" S ARRAY("SURNAME")=$P(NAME,COMP),ARRAY("FIRST")=$P(NAME,COMP,2),ARRAY("MIDDLE")=$P(NAME,COMP,3),ARRAY("PREFIX")=$P(NAME,COMP,4),ARRAY("SUFFIX")=$P(NAME,COMP,5),ARRAY("NAME")=$$FMNAME^HLFNC($P(NAME,COMP,1,6)) Q
"RTN","RGADTP1",76,0)
 .I $P(NAME,COMP,7)="A" S $P(ARRAY("ALIAS",IDCNT),"^")=$$FMNAME^HLFNC($P(NAME,COMP,1,6)),IDCNT=IDCNT+1 Q  ;**48 ALIAS NAMES?
"RTN","RGADTP1",77,0)
 .;**48 alias could send PID(6) to second subscript level
"RTN","RGADTP1",78,0)
 .S KK=$O(PID(6,"")) I KK'="" S PID(6,KK)=$P(PID(6),REP,IDCNT2)_PID(6,KK)
"RTN","RGADTP1",79,0)
 .S JJ=0 F  S JJ=$O(PID(6,JJ)) Q:'JJ  D
"RTN","RGADTP1",80,0)
 ..I JJ'=KK S PID(6,JJ)=$P(PID(6,$O(PID(6,JJ),-1)),REP,TMPJ)_PID(6,JJ)
"RTN","RGADTP1",81,0)
 ..F TMPJ=1:1:$L(PID(6,JJ),REP) S NAME=$P(PID(6,JJ),REP,TMPJ) D
"RTN","RGADTP1",82,0)
 ...I $P(NAME,COMP,7)="A" S $P(ARRAY("ALIAS",IDCNT),"^")=$$FMNAME^HLFNC($P(NAME,COMP,1,6)),IDCNT=IDCNT+1
"RTN","RGADTP1",83,0)
 ;get PID-6 Mother's maiden name
"RTN","RGADTP1",84,0)
 S ARRAY("MMN")=$P($G(PID(7)),COMP,1,5) D
"RTN","RGADTP1",85,0)
 . I $P(ARRAY("MMN"),COMP)'=HL("Q") S HLECH=HL("ECH") S ARRAY("MMN")=$$FREE^RGRSPARS($$FMNAME^HLFNC(ARRAY("MMN"))) Q
"RTN","RGADTP1",86,0)
 . I $P(ARRAY("MMN"),COMP)=HL("Q") S ARRAY("MMN")=$$FREE^RGRSPARS($P(ARRAY("MMN"),COMP))
"RTN","RGADTP1",87,0)
 ;get PID-7 Date of Birth
"RTN","RGADTP1",88,0)
 ;**47 taking HL("Q") into account
"RTN","RGADTP1",89,0)
 I $G(PID(8))=HL("Q") S PID(8)="@",ARRAY("MPIDOB")="@"
"RTN","RGADTP1",90,0)
 I $G(PID(8))'="@" S ARRAY("MPIDOB")=$$FMDATE^HLFNC($G(PID(8)))
"RTN","RGADTP1",91,0)
 ;get PID-8 Sex
"RTN","RGADTP1",92,0)
 ;**47 taking HL("Q") into account
"RTN","RGADTP1",93,0)
 I $G(PID(9))=HL("Q") S PID(9)="@"
"RTN","RGADTP1",94,0)
 S ARRAY("SEX")=$G(PID(9))
"RTN","RGADTP1",95,0)
 ;get PID-11-3 ADDRESS BOTH "P"rimary and "N" Place of
"RTN","RGADTP1",96,0)
 S CNT=1
"RTN","RGADTP1",97,0)
 N ADRTYPE,ADDR
"RTN","RGADTP1",98,0)
 F X=1:1:$L(PID(12),REP) D
"RTN","RGADTP1",99,0)
 . S ADDR=$P(PID(12),REP,X),ADRTYPE=$P(ADDR,COMP,7)
"RTN","RGADTP1",100,0)
 . I ADRTYPE="P" D
"RTN","RGADTP1",101,0)
 .. S ADDR=$$FREE^RGRSPARS(ADDR)
"RTN","RGADTP1",102,0)
 .. S ARRAY(.111)=$$FREE^RGRSPARS($P(ADDR,COMP,1))  ;addr [1]
"RTN","RGADTP1",103,0)
 .. S ARRAY(.112)=$$FREE^RGRSPARS($P(ADDR,COMP,2))  ;addr [2]
"RTN","RGADTP1",104,0)
 .. S ARRAY(.113)=$$FREE^RGRSPARS($P(ADDR,COMP,8))  ;addr [3]
"RTN","RGADTP1",105,0)
 .. S ARRAY(.114)=$$FREE^RGRSPARS($P(ADDR,COMP,3))  ;city
"RTN","RGADTP1",106,0)
 .. S ARRAY(.115)=$$STATE^RGRSPARS($P(ADDR,COMP,4))  ;state
"RTN","RGADTP1",107,0)
 .. S ARRAY(.1112)=$$FREE^RGRSPARS($P(ADDR,COMP,5))  ;zip+4
"RTN","RGADTP1",108,0)
 .. N CNTYCODE S CNTYCODE=PID(13)  ;county code
"RTN","RGADTP1",109,0)
 .. S ARRAY(.117)=$$COUNTY^RGRSPARS(ARRAY(.115),CNTYCODE)
"RTN","RGADTP1",110,0)
 .. S ARRAY(.131)=$$FREE^RGRSPARS(PID(14))
"RTN","RGADTP1",111,0)
 .. S ARRAY(.132)=$$FREE^RGRSPARS(PID(15))
"RTN","RGADTP1",112,0)
 . I ADRTYPE="N" D
"RTN","RGADTP1",113,0)
 .. S ARRAY("POBCITY")=$$FREE^RGRSPARS($P(ADDR,COMP,3))  ;POB city
"RTN","RGADTP1",114,0)
 .. S ARRAY("POBSTATE")=$$STATE^RGRSPARS($P(ADDR,COMP,4))  ;POB state
"RTN","RGADTP1",115,0)
 ;marital status
"RTN","RGADTP1",116,0)
 S ARRAY(.05)=$$MARITAL^RGRSPARS(PID(17))
"RTN","RGADTP1",117,0)
 ;multiple birth indicator **47
"RTN","RGADTP1",118,0)
 S ARRAY("MBI")=$G(PID(25)) I ARRAY("MBI")=HL("Q") S ARRAY("MBI")="@" ;**47 to get MBI and setup as yes/no field change to @ if HL("Q")
"RTN","RGADTP1",119,0)
 ;;REMOVED FROM PATCH 45 DUE TO NEEDING DG707
"RTN","RGADTP1",120,0)
 ;religious preference
"RTN","RGADTP1",121,0)
 S ARRAY(.08)=$$RELIG^RGRSPARS(PID(18))
"RTN","RGADTP1",122,0)
 ;address
"RTN","RGADTP1",123,0)
 ;get PID-29 Date of Death
"RTN","RGADTP1",124,0)
 S ARRAY("MPIDOD")=$$FREE^RGRSPARS($$FMDATE^HLFNC($G(PID(30)))),ARRAY(.351)=ARRAY("MPIDOD")
"RTN","RGADTP1",125,0)
 Q
"RTN","RGADTP2")
0^4^B57266100^B54208943
"RTN","RGADTP2",1,0)
RGADTP2 ;BIR/DLR-ADT PROCESSOR TO RETRIGGER A08 or A04 MESSAGES WITH AL/AL (COMMIT/APPLICATION) ACKNOWLEDGEMENTS - CONTINUED ;23 Dec 2011  1:40 PM
"RTN","RGADTP2",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**27,20,45,44,47,48,49,52,54,58,59**;30 Apr 99;Build 1
"RTN","RGADTP2",3,0)
DBIA ;
"RTN","RGADTP2",4,0)
 ;Reference to $$ADD^VAFCEHU1 supported by IA #2753
"RTN","RGADTP2",5,0)
 ;Reference to EDIT^VAFCPTED supported by IA #2784
"RTN","RGADTP2",6,0)
 Q
"RTN","RGADTP2",7,0)
PROCIN(ARRAY,RGLOCAL,RGER,DFN,HL) ;
"RTN","RGADTP2",8,0)
 N RGRSDFN,OTHSITE,NODE,ICN,CMORIEN,CMOR,SENSTVTY,RMTDOD,LOCDOD,VAFCA,VAFCA08,HERE,BOGUS,ARAY,REP ;**58,MPIC_2416: Remove CMORDISP from list. It is no longer used.
"RTN","RGADTP2",9,0)
 S REP=$E(HL("ECH"),2)
"RTN","RGADTP2",10,0)
 S HERE=$P($$SITE^VASITE,"^",3)
"RTN","RGADTP2",11,0)
 ;if sending site is your site quit
"RTN","RGADTP2",12,0)
 Q:$G(ARRAY("MPISSITE"))=$G(HERE)
"RTN","RGADTP2",13,0)
 S ARRAY(.097)=$P($$NOW^XLFDT,".")
"RTN","RGADTP2",14,0)
 I $G(ARRAY("ICN"))'="" D
"RTN","RGADTP2",15,0)
 .S RGRSDFN=$$GETDFN^MPIF001(+ARRAY("ICN")) I +RGRSDFN<1 S RGER=RGRSDFN_" ICN#"_$G(ARRAY("ICN")) Q  ;quit and return error msg
"RTN","RGADTP2",16,0)
 .S OTHSITE=ARRAY("SENDING SITE") ;**40 REMOVED THE PLUS TO KEEP SUFFIX ON STATION# & CHANGED THE SITE TO BE SENDING SITE INSTEAD OF AUTHORITATIVE SOURCE
"RTN","RGADTP2",17,0)
 I $G(RGRSDFN)="" S RGRSDFN=$G(DFN)
"RTN","RGADTP2",18,0)
 I $G(RGRSDFN)="" S RGER="-1^DFN not defined"
"RTN","RGADTP2",19,0)
 Q:$G(RGER)
"RTN","RGADTP2",20,0)
 I $G(OTHSITE)="" S OTHSITE=""
"RTN","RGADTP2",21,0)
 S NODE=$$MPINODE^MPIFAPI(RGRSDFN)
"RTN","RGADTP2",22,0)
 S ICN=$P(NODE,"^")
"RTN","RGADTP2",23,0)
 S CMORIEN=$P(NODE,"^",3)
"RTN","RGADTP2",24,0)
 ;
"RTN","RGADTP2",25,0)
 ;**58,MPIC_2416: If there is no CMOR for the patient, set CMOR to "".
"RTN","RGADTP2",26,0)
 ;  Prevents SUBSCRIPT error that occurs if "" is passed to $$NS^XUAF4.
"RTN","RGADTP2",27,0)
 S CMOR=$S(CMORIEN:$P($$NS^XUAF4(CMORIEN),"^",2),1:"")
"RTN","RGADTP2",28,0)
 ;
"RTN","RGADTP2",29,0)
 ;If patient is Sensitive at other site but not here send bulletin
"RTN","RGADTP2",30,0)
 I $G(ARRAY("SENSITIVITY"))'="" S SENSTVTY=$G(ARRAY("SENSITIVITY")) D
"RTN","RGADTP2",31,0)
 .N NAME S NAME=ARRAY("NAME")
"RTN","RGADTP2",32,0)
 .I '$$SENSTIVE^RGRSENS(RGRSDFN),SENSTVTY D
"RTN","RGADTP2",33,0)
 ..S ARAY("SSN")=ARRAY("SSN"),ARAY("SENDING SITE")=ARRAY("SENDING SITE")
"RTN","RGADTP2",34,0)
 ..S ARAY("SENSITIVITY USER")=ARRAY("SENSITIVITY USER"),ARAY("SENSITIVITY DATE")=ARRAY("SENSITIVITY DATE")
"RTN","RGADTP2",35,0)
 ..D SENSTIVE^RGRSBUL1(RGRSDFN,"ARAY",NAME)
"RTN","RGADTP2",36,0)
 ;
"RTN","RGADTP2",37,0)
 ;MPIC_772 - **52; Commented out Remote Date of Death Indicated section.
"RTN","RGADTP2",38,0)
 ;If patient has DATE OF DEATH (DOD) at remote site send bulletin
"RTN","RGADTP2",39,0)
 ;Ignore time if present with date.
"RTN","RGADTP2",40,0)
 ;S RMTDOD=$G(ARRAY("MPIDOD")),RMTDOD=$P(RMTDOD,".")
"RTN","RGADTP2",41,0)
 ;S DFN=RGRSDFN D DEM^VADPT
"RTN","RGADTP2",42,0)
 ;S LOCDOD=$P($P(VADM(6),"^"),".")
"RTN","RGADTP2",43,0)
 ;If there is a remote DOD but no local DOD  OR if remote DOD is different from local DOD, send bulletin
"RTN","RGADTP2",44,0)
 ;I RMTDOD D
"RTN","RGADTP2",45,0)
 ;.N NAME S NAME=ARRAY("NAME"),ARAY("SSN")=ARRAY("SSN"),ARAY("SENDING SITE")=ARRAY("SENDING SITE")
"RTN","RGADTP2",46,0)
 ;.D RMTDOD^RGRSBUL1(RGRSDFN,"ARAY",NAME,RMTDOD,LOCDOD)
"RTN","RGADTP2",47,0)
 ;K VADM
"RTN","RGADTP2",48,0)
 ;
"RTN","RGADTP2",49,0)
NOTLOC I 'RGLOCAL D
"RTN","RGADTP2",50,0)
 .;if sending site is not the CMOR AND NOT THE MPI - log update into PDR if differences exist **45 ADDED MPI
"RTN","RGADTP2",51,0)
 .I (OTHSITE)'=(CMOR)&(OTHSITE'="200M") D  Q
"RTN","RGADTP2",52,0)
 ..S VAFCA=$P($$NOW^XLFDT,".")_"^"_$$NOW^XLFDT_"^"_$G(ARRAY("SENDING SITE"))_"^"_RGRSDFN
"RTN","RGADTP2",53,0)
 ..S ARRAY(.01)=$$FREE^RGRSPARS(ARRAY("NAME")),ARRAY(.03)=$$FREE^RGRSPARS($G(ARRAY("MPIDOB")))
"RTN","RGADTP2",54,0)
 ..S ARRAY(.09)=$$FREE^RGRSPARS($G(ARRAY("SSN"))),ARRAY(.02)=$$SEX^RGRSPARS($G(ARRAY("SEX")))
"RTN","RGADTP2",55,0)
 ..S ARRAY(.2403)=$$FREE^RGRSPARS($G(ARRAY("MMN"))),ARRAY(991.01)=$P($G(ARRAY("ICN")),"V")
"RTN","RGADTP2",56,0)
 ..N ARAY M ARAY(2)=ARRAY
"RTN","RGADTP2",57,0)
 ..S VAFCA08=1  ;S BOGUS=$$ADD^VAFCEHU1(VAFCA,"ARAY") comment out by RG*1*49
"RTN","RGADTP2",58,0)
 .;if sending site is the CMOR OR MPI - synchronize data **45 ADDED MPI AND SSNV TO UPDATED FIELDS
"RTN","RGADTP2",59,0)
 .I (OTHSITE)=(CMOR)!(OTHSITE="200M") D
"RTN","RGADTP2",60,0)
 ..I HL("ETN")="A31",$G(RGRSDFN)>0 K ^XTMP("MPIF OLD RECORDS",RGRSDFN) ;**59,MVI_914: Delete the old record designation
"RTN","RGADTP2",61,0)
 ..;**44 is there an outstanding edit in the ADT/HL7 PIVOT file for this patient for an identity element
"RTN","RGADTP2",62,0)
 ..S RGER=$$CHKPVT^RGADTP3(.ARRAY) Q:+RGER<0
"RTN","RGADTP2",63,0)
 ..N DR,ARAY2 S RGER=""
"RTN","RGADTP2",64,0)
 .. ; **59, MVI_881 changes the following two lines for 4th parameter to be 'ARAY'
"RTN","RGADTP2",65,0)
 .. ; D DIFF^RGADTP3(.ARRAY,RGRSDFN,.DR,.ARRAY) ;**47
"RTN","RGADTP2",66,0)
 .. D DIFF^RGADTP3(.ARRAY,RGRSDFN,.DR,.ARAY) ;**59, MVI_881
"RTN","RGADTP2",67,0)
 ..I DR'="" D
"RTN","RGADTP2",68,0)
 ...S VAFCA08=1,ARAY(2,.01)=ARRAY("NAME"),ARAY(2,.03)=$G(ARRAY("MPIDOB"))
"RTN","RGADTP2",69,0)
 ...I ARRAY("SSN")'="" S ARAY(2,.09)=$G(ARRAY("SSN")) ;**45 only set SSN to update if it isn't null
"RTN","RGADTP2",70,0)
 ...S ARAY(2,.02)=$G(ARRAY("SEX")),ARAY(2,.2403)=$G(ARRAY("MMN")),ARAY(2,994)=$G(ARRAY("MBI"))
"RTN","RGADTP2",71,0)
 ...;**48 ONLY SET SSN VERIFICATION STATUS AND PSEUDO SSN REASON IF SSN UPDATE WAS SUCCESSFUL
"RTN","RGADTP2",72,0)
 ...I $D(ARRAY("ALIAS")) M ARAY(2,1)=ARRAY("ALIAS") ;**48 ADD ALIAS TO MIX
"RTN","RGADTP2",73,0)
 ...D EDIT^VAFCPTED(RGRSDFN,"ARAY(2)",DR)
"RTN","RGADTP2",74,0)
 ...;check to see if edits were successful, if not set RGER="why it failed"
"RTN","RGADTP2",75,0)
 ...N NAME,SSN,PDOB,SEX,MMN,OLDNAME,OLDHLNAM,OLDMMN,OLDHLMMN,HLNAME,HLMMN,SSNV,MBI
"RTN","RGADTP2",76,0)
 ...S NAME=$$GET1^DIQ(2,+RGRSDFN_",",.01,"I"),PDOB=$$GET1^DIQ(2,+RGRSDFN_",",.03,"I")
"RTN","RGADTP2",77,0)
 ...S SSN=$$GET1^DIQ(2,+RGRSDFN_",",.09,"I"),SEX=$$GET1^DIQ(2,+RGRSDFN_",",.02,"I")
"RTN","RGADTP2",78,0)
 ...S MMN=$$GET1^DIQ(2,+RGRSDFN_",",.2403,"I"),MBI=$$GET1^DIQ(2,+RGRSDFN_",",994,"I")
"RTN","RGADTP2",79,0)
 ...D STDNAME^XLFNAME(.NAME,"F",.OLDNAME) S HLNAME=ARRAY("NAME") D STDNAME^XLFNAME(.HLNAME,"F",.OLDHLNAM)
"RTN","RGADTP2",80,0)
 ...I NAME'=$G(HLNAME) S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"Name field failure"
"RTN","RGADTP2",81,0)
 ...I PDOB'=$G(ARRAY("MPIDOB")) S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"DOB field failure"
"RTN","RGADTP2",82,0)
 ...;**48
"RTN","RGADTP2",83,0)
 ...I SSN["P" D
"RTN","RGADTP2",84,0)
 ....;if pseudo SSN reason field has been added to the DD then attempt to set it
"RTN","RGADTP2",85,0)
 ....N PS,ERROR,LABEL D FIELD^DID(2,.0906,"","LABEL","LABEL","ERROR") I '$D(ERROR("DIERR"))&$D(LABEL("LABEL")) D
"RTN","RGADTP2",86,0)
 .....S ARAY2(2,.0906)=$G(ARRAY(.0906)),DR=".0906;" D EDIT^VAFCPTED(RGRSDFN,"ARAY2(2)",DR)
"RTN","RGADTP2",87,0)
 .....S PS=$$GET1^DIQ(2,+RGRSDFN_",",.0906,"I")
"RTN","RGADTP2",88,0)
 .....I PS=""&(ARAY2(2,.0906)="@") Q
"RTN","RGADTP2",89,0)
 .....I PS'=ARAY2(2,.0906) S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"Pseudo SSN Reason field failure"
"RTN","RGADTP2",90,0)
 .....I PS=ARAY2(2,.0906) D
"RTN","RGADTP2",91,0)
 ......K ARAY2 N ERROR,LABEL D FIELD^DID(2,.0907,"","LABEL","LABEL","ERROR") I '$D(ERROR("DIERR"))&$D(LABEL("LABEL")) D
"RTN","RGADTP2",92,0)
 ......S ARAY2(2,.0907)=$G(ARRAY(.0907)),DR=".0907;" D EDIT^VAFCPTED(RGRSDFN,"ARAY2(2)",DR)
"RTN","RGADTP2",93,0)
 ......S SSNV=$$GET1^DIQ(2,+RGRSDFN_",",.0907,"I")
"RTN","RGADTP2",94,0)
 ......S:$G(ARRAY(.0907))="@" ARRAY(.0907)="" I SSNV'=$G(ARRAY(.0907)) S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"SSN VERIFICATION field failure"
"RTN","RGADTP2",95,0)
 ...I $G(ARRAY("SSN"))'="",$G(ARRAY("SSN"))'="@",SSN'=$G(ARRAY("SSN")) D
"RTN","RGADTP2",96,0)
 ....;**54 mpic_1556 added array("ssn")'="@"
"RTN","RGADTP2",97,0)
 ....I $G(ARRAY("SSN"))="P",SSN["P" Q  ;**47 NEEDED TO CREATE PSEUDO AND DID
"RTN","RGADTP2",98,0)
 ....S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"SSN field failure" ;**45 only check if SSN is sent isn't null
"RTN","RGADTP2",99,0)
 ...I SSN=$G(ARRAY("SSN")) D
"RTN","RGADTP2",100,0)
 ....;if SSN VERIFICATION STATUS field has been added to the DD then attempt to set it
"RTN","RGADTP2",101,0)
 ....K ARAY2 N ERROR,LABEL D FIELD^DID(2,.0907,"","LABEL","LABEL","ERROR") I '$D(ERROR("DIERR"))&$D(LABEL("LABEL")) D
"RTN","RGADTP2",102,0)
 .....S ARAY2(2,.0907)=$G(ARRAY(.0907)) S DR=".0907;" D EDIT^VAFCPTED(RGRSDFN,"ARAY2(2)",DR)
"RTN","RGADTP2",103,0)
 .....S SSNV=$$GET1^DIQ(2,+RGRSDFN_",",.0907,"I")
"RTN","RGADTP2",104,0)
 .....S:$G(ARRAY(.0907))="@" ARRAY(.0907)="" I SSNV'=$G(ARRAY(.0907)) S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"SSN VERIFICATION field failure"
"RTN","RGADTP2",105,0)
 .....I SSNV'="" D
"RTN","RGADTP2",106,0)
 ......N PS,ERROR,LABEL D FIELD^DID(2,.0906,"","LABEL","LABEL","ERROR") I '$D(ERROR("DIERR"))&$D(LABEL("LABEL")) D
"RTN","RGADTP2",107,0)
 ......S ARAY2(2,.0906)=$G(ARRAY(.0906)) S DR=".0906;" D EDIT^VAFCPTED(RGRSDFN,"ARAY2(2)",DR)
"RTN","RGADTP2",108,0)
 ......S PS=$$GET1^DIQ(2,+RGRSDFN_",",.0906,"I")
"RTN","RGADTP2",109,0)
 ......I PS=""&(ARAY2(2,.0906)="@") Q
"RTN","RGADTP2",110,0)
 ......S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"Pseudo SSN Reason field failure"
"RTN","RGADTP2",111,0)
 ...;**54 Need to see if should delete pseudo ssn reason if SSN isn't a pseudo and there is a pseudo reason, delete it.
"RTN","RGADTP2",112,0)
 ...I SSN'["P" N PS,ERROR,LABEL D FIELD^DID(2,.0906,"","LABEL","LABEL","ERROR") I '$D(ERROR("DIERR"))&$D(LABEL("LABEL")) D
"RTN","RGADTP2",113,0)
 ....S PS=$$GET1^DIQ(2,+RGRSDFN_",",.0906,"I")
"RTN","RGADTP2",114,0)
 ....I PS'=""  S ARAY2(2,.0906)="@",DR=".0906;" D EDIT^VAFCPTED(RGRSDFN,"ARAY2(2)",DR)
"RTN","RGADTP2",115,0)
 ...I SEX'=$G(ARRAY("SEX")) S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"SEX field failure"
"RTN","RGADTP2",116,0)
 ...D STDNAME^XLFNAME(.MMN,"F",.OLDMMN) S HLMMN=ARRAY("MMN") D STDNAME^XLFNAME(.HLMMN,"F",.OLDHLMMN)
"RTN","RGADTP2",117,0)
 ...I MMN'=$G(HLMMN) S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"MOTHER'S MAIDEN NAME field failure"
"RTN","RGADTP2",118,0)
 ...;**REMOVED MBI FROM PATCH 45 PUT BACK IN **47
"RTN","RGADTP2",119,0)
 ...I MBI'=$G(ARRAY("MBI")) D
"RTN","RGADTP2",120,0)
 ....Q:MBI=""&($G(ARRAY("MBI"))="@")  ;**47 "" AND @ ARE THE SAME
"RTN","RGADTP2",121,0)
 ....S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"MULTIPLE BIRTH INDICATOR field failure"
"RTN","RGADTP2",122,0)
 ...;send the updated fields to the MPI to synch site with MPI
"RTN","RGADTP2",123,0)
 ...I HL("ETN")'="A31" S ZTSAVE("DFN")="",ZTRTN="MPISYN^RGADTPC",ZTDESC="Sending Synchronized Patient Data to MPI...",ZTIO="RG QUEUE",ZTDTH=$H D ^%ZTLOAD
"RTN","RGADTP2",124,0)
 ...;**45 ^ don't trigger A31 sync message if A31 was being processed-- ack to a31 will sync id elements on MPI
"RTN","RGADTP2",125,0)
 Q
"RTN","RGADTP3")
0^2^B13484715^B11058020
"RTN","RGADTP3",1,0)
RGADTP3 ;BIR/CMC-RGADTP2 - CONTINUED ;12/09/2011  11:13
"RTN","RGADTP3",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**48,59**;30 Apr 99;Build 1
"RTN","RGADTP3",3,0)
 ;
"RTN","RGADTP3",4,0)
 ;MOVED CHKPVT AND DIFF FROM RGADTP2 DUE TO ROUTINE SIZE ISSUE
"RTN","RGADTP3",5,0)
 Q
"RTN","RGADTP3",6,0)
CHKPVT(ARRAY) ;CHECKS TO SEE IF OUTSTANDING IDENTITY EDIT IS WAITING TO BE SENT IN THE ADT/HL7 PIVOT FILE
"RTN","RGADTP3",7,0)
 ;**44 CREATED - ARRAY CONTAINS THE ARRAY ELEMENTS NEEDED TO FIND THE PATIENT IN THE ADT/HL7 PIVOT FILE
"RTN","RGADTP3",8,0)
 ;RETURNED IS -1^EDIT PENDING IN PIVOT FILE OR 0 IF THERE ISN'T ONE
"RTN","RGADTP3",9,0)
 I '$D(^VAT(391.71,"C",ARRAY("DFN"))) Q 0
"RTN","RGADTP3",10,0)
 N PIV,FIELDS
"RTN","RGADTP3",11,0)
 S PIV=$O(^VAT(391.71,"C",ARRAY("DFN"),"A"),-1) ;get last entry in the pivot file for this patient
"RTN","RGADTP3",12,0)
 I '$D(^VAT(391.71,"AXMIT",4,PIV))&('$D(^VAT(391.71,"AXMIT",3,PIV))) Q 0
"RTN","RGADTP3",13,0)
 S FIELDS=$$GET1^DIQ(391.71,PIV_",",2.1,"I")
"RTN","RGADTP3",14,0)
 I FIELDS[".01;"!(FIELDS[".02;")!(FIELDS[".03;")!(FIELDS[".09;")!(FIELDS[".0906;")!(FIELDS[".2403;")!(FIELDS["994;") Q "-1^DFN "_ARRAY("DFN")_":  Edits made to identity fields waiting to come to MPI, MPI update not processed as of yet."
"RTN","RGADTP3",15,0)
 Q 0
"RTN","RGADTP3",16,0)
 ;
"RTN","RGADTP3",17,0)
DIFF(ARRAY,RGRSDFN,DR,ARAY) ; are there fields to update? **47
"RTN","RGADTP3",18,0)
 N NAME,SSN,PDOB,SEX,MMN,OLDNAME,OLDHLNAM,OLDMMN,OLDHLMMN,HLNAME,HLMMN,SSNV,MBI,PSNR
"RTN","RGADTP3",19,0)
 S DR="",NAME=$$GET1^DIQ(2,+RGRSDFN_",",.01,"I"),HLNAME=ARRAY("NAME")
"RTN","RGADTP3",20,0)
 ;**48 remove name standardization check
"RTN","RGADTP3",21,0)
 ;D STDNAME^XLFNAME(.NAME,"F",.OLDNAME) S HLNAME=ARRAY("NAME") D STDNAME^XLFNAME(.HLNAME,"F",.OLDHLNAM)
"RTN","RGADTP3",22,0)
 I NAME'=$G(HLNAME) S DR=DR_".01;",ARAY(2,.01)=ARRAY("NAME")
"RTN","RGADTP3",23,0)
 S PDOB=$$GET1^DIQ(2,+RGRSDFN_",",.03,"I") I PDOB'=ARRAY("MPIDOB") S DR=DR_".03;",ARAY(2,.03)=ARRAY("MPIDOB")
"RTN","RGADTP3",24,0)
 S SSN=$$GET1^DIQ(2,+RGRSDFN_",",.09,"I") D
"RTN","RGADTP3",25,0)
 .I SSN["P",ARRAY("SSN")=""!(ARRAY("SSN")="@") Q
"RTN","RGADTP3",26,0)
 .; ^ treat pseudos and null/@ as the same
"RTN","RGADTP3",27,0)
 .; **47 if incoming SSN value is null/@ and existing SSN isn't a pseudo create a new pseudo SSN
"RTN","RGADTP3",28,0)
 .I SSN'["P" I ARRAY("SSN")="@"!(ARRAY("SSN")="") S ARRAY("SSN")="P"
"RTN","RGADTP3",29,0)
 .I SSN'=ARRAY("SSN"),ARRAY("SSN")'="" S DR=DR_".09;",ARAY(2,.09)=ARRAY("SSN")
"RTN","RGADTP3",30,0)
 S SEX=$$GET1^DIQ(2,+RGRSDFN_",",.02,"I") D
"RTN","RGADTP3",31,0)
 .I SEX=""&(ARRAY("SEX")="@") Q
"RTN","RGADTP3",32,0)
 .; ^ treat null and @ as same
"RTN","RGADTP3",33,0)
 .I SEX'=ARRAY("SEX") S DR=DR_".02;",ARAY(2,.02)=ARRAY("SEX")
"RTN","RGADTP3",34,0)
 S SSNV=$$GET1^DIQ(2,+RGRSDFN_",",.0907,"I") I SSNV="" S SSNV="@"
"RTN","RGADTP3",35,0)
 ;if SSN VERIFICATION STATUS field has been added to the DD then attempt to set it
"RTN","RGADTP3",36,0)
 N ERROR,LABEL D FIELD^DID(2,.0907,"","LABEL","LABEL","ERROR") I '$D(ERROR("DIERR"))&$D(LABEL("LABEL")) D
"RTN","RGADTP3",37,0)
 .I SSNV'=ARRAY(.0907) S ARAY(2,.0907)=$G(ARRAY(.0907)),DR=DR_".0907;"
"RTN","RGADTP3",38,0)
 S PSNR=$$GET1^DIQ(2,+RGRSDFN_",",.0906,"I") I PSNR="" S PSNR="@"
"RTN","RGADTP3",39,0)
 ;if Pseudo SSN Reason field has been added to the DD then attempt to set it
"RTN","RGADTP3",40,0)
 N ERROR,LABEL D FIELD^DID(2,.0906,"","LABEL","LABEL","ERROR") I '$D(ERROR("DIERR"))&$D(LABEL("LABEL")) D
"RTN","RGADTP3",41,0)
 .I PSNR'=ARRAY(.0906) S ARAY(2,.0906)=$G(ARRAY(.0906)),DR=DR_".0906;"
"RTN","RGADTP3",42,0)
 ; **59, MVI_881 start
"RTN","RGADTP3",43,0)
 ; S MBI=$$GET1^DIQ(2,+RGRSDFN_",",994,"I") I MBI="" S MBI="@"
"RTN","RGADTP3",44,0)
 ; I MBI="@"&(ARRAY("MBI")="") Q
"RTN","RGADTP3",45,0)
 ; ^ treat @ and null as the same
"RTN","RGADTP3",46,0)
 ; I MBI'=ARRAY("MBI") S DR=DR_"994;",ARAY(2,994)=ARRAY("MBI")
"RTN","RGADTP3",47,0)
 ; S MMN=$$GET1^DIQ(2,+RGRSDFN_",",.2403,"I") I MMN="" S MMN="@"
"RTN","RGADTP3",48,0)
 ; D STDNAME^XLFNAME(.MMN,"F",.OLDMMN) S HLMMN=ARRAY("MMN") D STDNAME^XLFNAME(.HLMMN,"F",.OLDHLMMN)
"RTN","RGADTP3",49,0)
 ; I MMN="@"&($G(HLMMN)="") Q
"RTN","RGADTP3",50,0)
 ; ^ treat @ and null as same
"RTN","RGADTP3",51,0)
 ; I MMN'=$G(HLMMN) S DR=DR_".2403;",ARAY(2,.2403)=ARRAY("MMN")
"RTN","RGADTP3",52,0)
 I $G(ARRAY("MBI"))'="" D
"RTN","RGADTP3",53,0)
 . S MBI=$$GET1^DIQ(2,+RGRSDFN_",",994,"I") S:MBI="" MBI="@"
"RTN","RGADTP3",54,0)
 . ; ^ treat @ and null as the same
"RTN","RGADTP3",55,0)
 . I MBI'=ARRAY("MBI") S DR=DR_"994;",ARAY(2,994)=ARRAY("MBI")
"RTN","RGADTP3",56,0)
 S HLMMN=$G(ARRAY("MMN"))
"RTN","RGADTP3",57,0)
 I HLMMN'="" D
"RTN","RGADTP3",58,0)
 . S MMN=$$GET1^DIQ(2,+RGRSDFN_",",.2403,"I") S:MMN="" MMN="@"
"RTN","RGADTP3",59,0)
 . I MMN'="@" D STDNAME^XLFNAME(.MMN,"F",.OLDMMN)
"RTN","RGADTP3",60,0)
 . I HLMMN'="@" D STDNAME^XLFNAME(.HLMMN,"F",.OLDHLMMN)
"RTN","RGADTP3",61,0)
 . ; ^ treat @ and null as same
"RTN","RGADTP3",62,0)
 . I MMN'=HLMMN S DR=DR_".2403;",ARAY(2,.2403)=ARRAY("MMN")
"RTN","RGADTP3",63,0)
 ; update TIN and FIN fields
"RTN","RGADTP3",64,0)
 N TIN,FIN
"RTN","RGADTP3",65,0)
 I $G(ARRAY("TIN"))'="" D
"RTN","RGADTP3",66,0)
 . S TIN=$$GET1^DIQ(2,+RGRSDFN_",",991.08,"I") S:TIN="" TIN="@"
"RTN","RGADTP3",67,0)
 . I TIN'=ARRAY("TIN") S DR=DR_"991.08;",ARAY(2,991.08)=ARRAY("TIN")
"RTN","RGADTP3",68,0)
 I $G(ARRAY("FIN"))'="" D
"RTN","RGADTP3",69,0)
 . S FIN=$$GET1^DIQ(2,+RGRSDFN_",",991.09,"I") S:FIN="" FIN="@"
"RTN","RGADTP3",70,0)
 . I FIN'=ARRAY("FIN") S DR=DR_"991.09;",ARAY(2,991.09)=ARRAY("FIN")
"RTN","RGADTP3",71,0)
 ; **59, MVI_881 end
"RTN","RGADTP3",72,0)
 I $D(ARRAY("ALIAS")) S DR=DR_"1;"
"RTN","RGADTP3",73,0)
 Q
"RTN","RGHLLOG")
0^1^B30413623^B24264633
"RTN","RGHLLOG",1,0)
RGHLLOG ;CAIRO/DKM-LOG MESSAGE PROCESSING INFO ;09/04/98
"RTN","RGHLLOG",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**1,3,11,13,18,19,25,45,52,57,59**;30 Apr 99;Build 1
"RTN","RGHLLOG",3,0)
 ;
"RTN","RGHLLOG",4,0)
 ;Reference to ^HLMA("C" supported by IA #3244
"RTN","RGHLLOG",5,0)
 ;=================================================================
"RTN","RGHLLOG",6,0)
 ; Log information about message processing and exceptions
"RTN","RGHLLOG",7,0)
 ; in CIRN HL7 Exception Log file.
"RTN","RGHLLOG",8,0)
 ;=================================================================
"RTN","RGHLLOG",9,0)
 ; Start time for run log
"RTN","RGHLLOG",10,0)
START(RGMSG,RGDC,RGPARAM) ;
"RTN","RGHLLOG",11,0)
 ;This entry point starts the log process in the CIRN HL7 EXCEPTION LOG
"RTN","RGHLLOG",12,0)
 ;file (#991.1), if the (#6) MINIMAL EXCEPTION LOGGING? field in
"RTN","RGHLLOG",13,0)
 ;File #990.8 is set to 0.
"RTN","RGHLLOG",14,0)
 ; Input: Required
"RTN","RGHLLOG",15,0)
 ;   RGMSG - IEN of message entry in File #773, usually HLMTIEN
"RTN","RGHLLOG",16,0)
 ;        Optional
"RTN","RGHLLOG",17,0)
 ;   RGDC - Event Class, associated with an entry in File #
"RTN","RGHLLOG",18,0)
 ;   RGPARAM - reprocessing routine
"RTN","RGHLLOG",19,0)
 S U="^"
"RTN","RGHLLOG",20,0)
 K RGLOG
"RTN","RGHLLOG",21,0)
 S RGLOG(3)=$G(RGMSG),RGLOG(5)=$G(RGDC),RGLOG(4)=$G(RGPARAM),RGLOG(1)=$$NOW^XLFDT
"RTN","RGHLLOG",22,0)
 I '$P(^RGSITE("COR",1,0),U,8) S RGLOG=$$CREATE
"RTN","RGHLLOG",23,0)
 Q
"RTN","RGHLLOG",24,0)
 ; Create a log entry
"RTN","RGHLLOG",25,0)
CREATE() Q:$G(RGLOG) RGLOG
"RTN","RGHLLOG",26,0)
 L +^RGHL7(991.1,0):10
"RTN","RGHLLOG",27,0)
 S RGLOG=$O(^RGHL7(991.1,$C(32)),-1)+1
"RTN","RGHLLOG",28,0)
 S:$G(RGLOG(1))="" RGLOG(1)=$$NOW^XLFDT
"RTN","RGHLLOG",29,0)
 S RGLOG(3)=$S($G(RGLOG(3))=0:0,$G(HL("MID"))="":"",1:$$IEN773($G(HL("MID"))))
"RTN","RGHLLOG",30,0)
 S (DA,X)=RGLOG,DIC="^RGHL7(991.1,",DIC(0)="L",DLAYGO=991.1,DIC("DR")="1///"_$G(RGLOG(1))_";3////"_$G(RGLOG(3))_";5///"_$G(RGLOG(5))_";4////"_$G(RGLOG(4)) K DD,DO D FILE^DICN K DIC,DA,X,DLAYGO
"RTN","RGHLLOG",31,0)
 L -^RGHL7(991.1,0)
"RTN","RGHLLOG",32,0)
 Q RGLOG
"RTN","RGHLLOG",33,0)
 ; Log time run completed
"RTN","RGHLLOG",34,0)
STOP(RGQUIT) ;
"RTN","RGHLLOG",35,0)
 ;This entry point completes the logging process
"RTN","RGHLLOG",36,0)
 ; Input: required
"RTN","RGHLLOG",37,0)
 ;    RGQUIT - 0 for success and 1 for failure
"RTN","RGHLLOG",38,0)
 ;
"RTN","RGHLLOG",39,0)
 Q:'$G(RGLOG)
"RTN","RGHLLOG",40,0)
 L +^RGHL7(991.1,RGLOG):10
"RTN","RGHLLOG",41,0)
 S DIE="^RGHL7(991.1,",DR="1.5///NOW;1.6///^S X=$G(RGQUIT)",DA=RGLOG D ^DIE K DIE,DA,DR
"RTN","RGHLLOG",42,0)
 L -^RGHL7(991.1,RGLOG)
"RTN","RGHLLOG",43,0)
 K RGLOG,RGQUIT,X,Y,DIC,DIE
"RTN","RGHLLOG",44,0)
 Q
"RTN","RGHLLOG",45,0)
 ; Log unclassified exception (old entry point)
"RTN","RGHLLOG",46,0)
ERR(RGERR,RGSEV) ;
"RTN","RGHLLOG",47,0)
 D EXC(18,RGERR)
"RTN","RGHLLOG",48,0)
 S RGQUIT=$G(RGQUIT)!$G(RGSEV)
"RTN","RGHLLOG",49,0)
 Q
"RTN","RGHLLOG",50,0)
 ; Log an exception
"RTN","RGHLLOG",51,0)
EXC(RGEXC,RGERR,RGDFN,MSGID,STATNUM) ;
"RTN","RGHLLOG",52,0)
 ;This entry point logs exceptions in the CIRN HL7 EXCEPTION LOG
"RTN","RGHLLOG",53,0)
 ;file (#991.1)
"RTN","RGHLLOG",54,0)
 ; Input: Required
"RTN","RGHLLOG",55,0)
 ;   RGEXC - Exception type in File #991.11
"RTN","RGHLLOG",56,0)
 ;   RGERR - Supplemental text
"RTN","RGHLLOG",57,0)
 ;        Optional
"RTN","RGHLLOG",58,0)
 ;   RGDFN - IEN in the PATIENT file (#2)
"RTN","RGHLLOG",59,0)
 ;   MSGID - message id of the HL7 message where the exception was encountered (optional)
"RTN","RGHLLOG",60,0)
 ;   STATNUM - station # of site that encountered the error (optional) - if not defined then the local site is assumed, using $$SITE^VASITE
"RTN","RGHLLOG",61,0)
 ;
"RTN","RGHLLOG",62,0)
 I (RGEXC=215)!(RGEXC=216)!(RGEXC=217) Q  ;**52 until MPIFBT3 call eliminates these exception types
"RTN","RGHLLOG",63,0)
 ;I (RGEXC=215)!(RGEXC=216)!(RGEXC=217) Q  ;**52 until MPIFBT3 call eliminates these exception types;**57 done in MPIF*1*52
"RTN","RGHLLOG",64,0)
 I RGEXC=234 N ACTPVR S ACTPVR=1 D  I ACTPVR=0 Q  ;**59 MVI_778 Do not log duplicate PVR (234) exception for patient if active one in CIRN HL7 EXCEPTION LOG (#991.1) file.
"RTN","RGHLLOG",65,0)
 .N PVRIEN,PVRIEN2 S PVRIEN=0
"RTN","RGHLLOG",66,0)
 .;Examine PVR (234) exception type, for patient - RGDFN
"RTN","RGHLLOG",67,0)
 .F  S PVRIEN=$O(^RGHL7(991.1,"ADFN",234,RGDFN,PVRIEN)) Q:'PVRIEN  Q:ACTPVR=0  D
"RTN","RGHLLOG",68,0)
 ..S PVRIEN2=0
"RTN","RGHLLOG",69,0)
 ..F  S PVRIEN2=$O(^RGHL7(991.1,"ADFN",234,RGDFN,PVRIEN,PVRIEN2)) Q:'PVRIEN2  Q:ACTPVR=0  D
"RTN","RGHLLOG",70,0)
 ...;Is there an active exception in CIRN HL7 EXCEPTION LOG (#991.1) file?
"RTN","RGHLLOG",71,0)
 ...S ACTPVR=$P($G(^RGHL7(991.1,PVRIEN,1,PVRIEN2,0)),"^",5) I ACTPVR=0 Q
"RTN","RGHLLOG",72,0)
 ;
"RTN","RGHLLOG",73,0)
 I $L($G(HL("MID"))) Q:$$INVEXC(HL("MID"))  ; is the exception valid?
"RTN","RGHLLOG",74,0)
 N RGI,RGZ
"RTN","RGHLLOG",75,0)
 S U="^"
"RTN","RGHLLOG",76,0)
 S:RGEXC[U RGERR=$P(RGEXC,U,2,999),RGEXC=+RGEXC
"RTN","RGHLLOG",77,0)
 S:RGEXC'=+RGEXC RGERR=RGEXC,RGEXC=18
"RTN","RGHLLOG",78,0)
 S:'$D(^RGHL7(991.11,RGEXC)) RGEXC=18
"RTN","RGHLLOG",79,0)
 L +^RGHL7(991.11,RGEXC):10
"RTN","RGHLLOG",80,0)
 S RGZ=$G(^RGHL7(991.11,RGEXC,0))
"RTN","RGHLLOG",81,0)
 S:$L(RGZ) $P(^RGHL7(991.11,RGEXC,0),U,5)=$P(RGZ,U,5)+1
"RTN","RGHLLOG",82,0)
 S:$P(RGZ,U,2)>1 RGQUIT=1
"RTN","RGHLLOG",83,0)
 L -^RGHL7(991.11,RGEXC)
"RTN","RGHLLOG",84,0)
 S RGLOG=$$CREATE
"RTN","RGHLLOG",85,0)
 L +^RGHL7(991.1,RGLOG):10
"RTN","RGHLLOG",86,0)
 S RGI=$O(^RGHL7(991.1,RGLOG,1,$C(32)),-1)+1
"RTN","RGHLLOG",87,0)
 S RGERR=$E($G(RGERR),1,250)
"RTN","RGHLLOG",88,0)
 S DIC="^RGHL7(991.1,"_RGLOG_",1,"
"RTN","RGHLLOG",89,0)
 S X=RGI,DA(1)=RGLOG,DIC(0)="FL",DLAYGO=991.12,DIC("P")=$P(^DD(991.1,2,0),"^",2)
"RTN","RGHLLOG",90,0)
 D ^DIC
"RTN","RGHLLOG",91,0)
 S DIE=DIC
"RTN","RGHLLOG",92,0)
 K DIC,DA,DR,DLAYGO
"RTN","RGHLLOG",93,0)
 S STAT=0
"RTN","RGHLLOG",94,0)
 S DIC="3.8",DIC(0)="Z",X="MPIF EXCEPTIONS" D ^DIC K DIC
"RTN","RGHLLOG",95,0)
 S RGMG=$P($G(Y),"^",1)
"RTN","RGHLLOG",96,0)
 I $P(^RGHL7(991.11,RGEXC,0),U,4)=RGMG S STAT=1
"RTN","RGHLLOG",97,0)
 S DA(1)=RGLOG,DA=RGI,DR="2///"_$G(RGEXC)_";3///"_$S($G(RGDFN):"`"_RGDFN,1:"")_";6///"_$G(STAT)_";10///"_$G(RGERR)
"RTN","RGHLLOG",98,0)
 D ^DIE K DIE,DA,DR
"RTN","RGHLLOG",99,0)
 L -^RGHL7(991.1,RGLOG)
"RTN","RGHLLOG",100,0)
 S RGI=$P(RGZ,U,3),RGZ=$P(RGZ,U,4)
"RTN","RGHLLOG",101,0)
 ;
"RTN","RGHLLOG",102,0)
 ;If the action type is for the MPI Exception Handler, send exception to the handler and quit
"RTN","RGHLLOG",103,0)
 I (RGI=3) D SENDMPI^RGHLLOG1($G(RGEXC),$G(RGERR),$G(RGDFN),$G(MSGID),$G(STATNUM)) Q
"RTN","RGHLLOG",104,0)
 ;
"RTN","RGHLLOG",105,0)
 Q:'RGI!'RGZ
"RTN","RGHLLOG",106,0)
 ;quit and don't send messages for exception types that are now being
"RTN","RGHLLOG",107,0)
 ;handled through the MPI/PD Exception Handling option.
"RTN","RGHLLOG",108,0)
 Q:RGEXC=234  ;**52 MPIC_772 remove 215, 216 & 217;**57 MPIC_1893 remove 218
"RTN","RGHLLOG",109,0)
 S DIC="^XMB(3.8,",DIC(0)="NZ",X="`"_RGZ D ^DIC K DIC Q:+Y<1  S RGZ=$P(Y,U,2) K Y
"RTN","RGHLLOG",110,0)
 Q:RGZ=""!$P($G(^RGSITE("COR",1,0)),U,7)
"RTN","RGHLLOG",111,0)
 S RGERR=$$SHORT(RGEXC,RGERR),RGZ="G."_RGZ
"RTN","RGHLLOG",112,0)
 I RGI=2 D ALERT^RGRSUTL2(RGERR,RGZ) Q
"RTN","RGHLLOG",113,0)
 D MAIL^RGRSUTL2(RGERR,RGZ,"MPI/PD Exception: "_$$SHORT(RGEXC),"MPI/PD exception notification")
"RTN","RGHLLOG",114,0)
 Q
"RTN","RGHLLOG",115,0)
 ;
"RTN","RGHLLOG",116,0)
INVEXC(RGMID) ; determine if this exception needs to be sent to MPI/PD
"RTN","RGHLLOG",117,0)
 ; personnel via FORUM. Return 1 to avoid messaging to FORUM, else 0.
"RTN","RGHLLOG",118,0)
 ; IA#:3244 is applied in this functionality
"RTN","RGHLLOG",119,0)
 N RGFLG,RGIEN S RGFLG=1
"RTN","RGHLLOG",120,0)
 S RGIEN=$$IEN773(RGMID) Q:'RGIEN RGFLG
"RTN","RGHLLOG",121,0)
 S RGIEN("SND")=$$GET1^DIQ(773,RGIEN_",",13)
"RTN","RGHLLOG",122,0)
 S RGIEN("REC")=$$GET1^DIQ(773,RGIEN_",",14)
"RTN","RGHLLOG",123,0)
 ; check the sending application (fld:13, 0;11) & the receiving
"RTN","RGHLLOG",124,0)
 ; application (fld:14, 0;12) to see if they are related to the MPI/PD
"RTN","RGHLLOG",125,0)
 ; project.
"RTN","RGHLLOG",126,0)
 I RGIEN("SND")]""!(RGIEN("REC")]"") D  Q RGFLG
"RTN","RGHLLOG",127,0)
 .S RGFLG=$$APP(RGIEN("SND")) Q:'RGFLG
"RTN","RGHLLOG",128,0)
 .S RGFLG=$$APP(RGIEN("REC"))
"RTN","RGHLLOG",129,0)
 .Q
"RTN","RGHLLOG",130,0)
 ; Only if the sending/receiving applications cannot be determined from
"RTN","RGHLLOG",131,0)
 ; the data in their respective fields, do I check the MSH multiple for
"RTN","RGHLLOG",132,0)
 ; the MSH segment. I identify the sending/receiving application from
"RTN","RGHLLOG",133,0)
 ; this segment. 
"RTN","RGHLLOG",134,0)
 E  D
"RTN","RGHLLOG",135,0)
 .N RG,RG1,RGMSH,RGFS
"RTN","RGHLLOG",136,0)
 .D GETS^DIQ(773,RGIEN_",",200,,"RGMSH") ;check MSH mult for snd/rec app
"RTN","RGHLLOG",137,0)
 .Q:'($D(RGMSH)\10)  ; no data in "MSH" multiple for file 773
"RTN","RGHLLOG",138,0)
 .S RGIEN=RGIEN_",",RG="RGMSH(773,"""_RGIEN_""","_200_")"
"RTN","RGHLLOG",139,0)
 .S RG1=0 F  S RG1=$O(@RG@(RG1)) Q:RG1'>0  D  Q:$E($G(@RG@(RG1)),1,3)="MSH"
"RTN","RGHLLOG",140,0)
 ..I $E($G(@RG@(RG1)),1,3)="MSH" D
"RTN","RGHLLOG",141,0)
 ...S RG(0)=$G(@RG@(RG1)),RGFS=$E(RG(0),4)
"RTN","RGHLLOG",142,0)
 ...S:$P(RG(0),RGFS,3)]"" RGFLG=$$APP($P(RG(0),RGFS,3)) Q:'RGFLG
"RTN","RGHLLOG",143,0)
 ...S:$P(RG(0),RGFS,5)]"" RGFLG=$$APP($P(RG(0),RGFS,5))
"RTN","RGHLLOG",144,0)
 ...Q
"RTN","RGHLLOG",145,0)
 ..Q
"RTN","RGHLLOG",146,0)
 .Q
"RTN","RGHLLOG",147,0)
 Q RGFLG
"RTN","RGHLLOG",148,0)
APP(X) ; check if the sending/receiving application is relevant to the
"RTN","RGHLLOG",149,0)
 ; MPI/PD team.  Returns 1 if a non-relevant namespace, else 0
"RTN","RGHLLOG",150,0)
 I $E(X,1,2)="RG"!($E(X,1,2)="VA")!($E(X,1,3)="MPI") Q 0
"RTN","RGHLLOG",151,0)
 Q 1
"RTN","RGHLLOG",152,0)
 ;
"RTN","RGHLLOG",153,0)
IEN773(RGMID) ; find the ien of the record in the HL7 MESSAGE ADMINISTRATION
"RTN","RGHLLOG",154,0)
 ; (#773) file based on the Message ID.  Input: Message ID
"RTN","RGHLLOG",155,0)
 ; Output: null, no record in 773, else 773 record ien.  IA#: 3244
"RTN","RGHLLOG",156,0)
 Q:$G(RGMID)="" ""
"RTN","RGHLLOG",157,0)
 Q $O(^HLMA("C",RGMID,0))
"RTN","RGHLLOG",158,0)
 ;
"RTN","RGHLLOG",159,0)
SHORT(RGEXC,RGTXT) ;
"RTN","RGHLLOG",160,0)
 ; Retrieve short text description of exception
"RTN","RGHLLOG",161,0)
 Q $G(^RGHL7(991.11,+RGEXC,10))_$S($G(RGTXT)="":"",1:": "_RGTXT)
"RTN","RGHLLOG",162,0)
 ;
"VER")
8.0^22.0
"BLD",2889,6)
^58
**END**
**END**
