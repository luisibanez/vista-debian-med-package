Released PSU*4*18 SEQ #16
Extracted from mail message
**KIDS**:PSU*4.0*18^

**INSTALL NAME**
PSU*4.0*18
"BLD",8597,0)
PSU*4.0*18^PHARMACY BENEFITS MANAGEMENT^0^3110330^y
"BLD",8597,1,0)
^^9^9^3110110^
"BLD",8597,1,1,0)
When a user runs PSU PBM MANUAL reports for a large timeframe. This would 
"BLD",8597,1,2,0)
cause the XTMP global to fill up in some cases and prevent users from 
"BLD",8597,1,3,0)
logging into CPRS.
"BLD",8597,1,4,0)
 
"BLD",8597,1,5,0)
Controlled substances are showing up as being linked incorrectly to an 
"BLD",8597,1,6,0)
outpatient clinic.
"BLD",8597,1,7,0)
 
"BLD",8597,1,8,0)
Integrated facilities are not correctly distinguished between in 
"BLD",8597,1,9,0)
national reports.
"BLD",8597,4,0)
^9.64PA^^
"BLD",8597,6.3)
7
"BLD",8597,"ABPKG")
n
"BLD",8597,"INIT")

"BLD",8597,"KRN",0)
^9.67PA^779.2^20
"BLD",8597,"KRN",.4,0)
.4
"BLD",8597,"KRN",.401,0)
.401
"BLD",8597,"KRN",.402,0)
.402
"BLD",8597,"KRN",.403,0)
.403
"BLD",8597,"KRN",.5,0)
.5
"BLD",8597,"KRN",.84,0)
.84
"BLD",8597,"KRN",3.6,0)
3.6
"BLD",8597,"KRN",3.8,0)
3.8
"BLD",8597,"KRN",9.2,0)
9.2
"BLD",8597,"KRN",9.8,0)
9.8
"BLD",8597,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",8597,"KRN",9.8,"NM",1,0)
PSUCP1^^0^B93655899
"BLD",8597,"KRN",9.8,"NM",2,0)
PSUPR2^^0^B62683282
"BLD",8597,"KRN",9.8,"NM",3,0)
PSULRHL1^^0^B46135990
"BLD",8597,"KRN",9.8,"NM",4,0)
PSULRHL2^^0^B36346912
"BLD",8597,"KRN",9.8,"NM",5,0)
PSULRHL3^^0^B37954984
"BLD",8597,"KRN",9.8,"NM","B","PSUCP1",1)

"BLD",8597,"KRN",9.8,"NM","B","PSULRHL1",3)

"BLD",8597,"KRN",9.8,"NM","B","PSULRHL2",4)

"BLD",8597,"KRN",9.8,"NM","B","PSULRHL3",5)

"BLD",8597,"KRN",9.8,"NM","B","PSUPR2",2)

"BLD",8597,"KRN",19,0)
19
"BLD",8597,"KRN",19.1,0)
19.1
"BLD",8597,"KRN",101,0)
101
"BLD",8597,"KRN",409.61,0)
409.61
"BLD",8597,"KRN",771,0)
771
"BLD",8597,"KRN",779.2,0)
779.2
"BLD",8597,"KRN",870,0)
870
"BLD",8597,"KRN",8989.51,0)
8989.51
"BLD",8597,"KRN",8989.52,0)
8989.52
"BLD",8597,"KRN",8994,0)
8994
"BLD",8597,"KRN","B",.4,.4)

"BLD",8597,"KRN","B",.401,.401)

"BLD",8597,"KRN","B",.402,.402)

"BLD",8597,"KRN","B",.403,.403)

"BLD",8597,"KRN","B",.5,.5)

"BLD",8597,"KRN","B",.84,.84)

"BLD",8597,"KRN","B",3.6,3.6)

"BLD",8597,"KRN","B",3.8,3.8)

"BLD",8597,"KRN","B",9.2,9.2)

"BLD",8597,"KRN","B",9.8,9.8)

"BLD",8597,"KRN","B",19,19)

"BLD",8597,"KRN","B",19.1,19.1)

"BLD",8597,"KRN","B",101,101)

"BLD",8597,"KRN","B",409.61,409.61)

"BLD",8597,"KRN","B",771,771)

"BLD",8597,"KRN","B",779.2,779.2)

"BLD",8597,"KRN","B",870,870)

"BLD",8597,"KRN","B",8989.51,8989.51)

"BLD",8597,"KRN","B",8989.52,8989.52)

"BLD",8597,"KRN","B",8994,8994)

"BLD",8597,"QUES",0)
^9.62^^
"BLD",8597,"REQB",0)
^9.611^4^4
"BLD",8597,"REQB",1,0)
PSU*4.0*13^2
"BLD",8597,"REQB",2,0)
PSU*4.0*16^2
"BLD",8597,"REQB",3,0)
PSU*4.0*17^2
"BLD",8597,"REQB",4,0)
PSU*4.0*15^2
"BLD",8597,"REQB","B","PSU*4.0*13",1)

"BLD",8597,"REQB","B","PSU*4.0*15",4)

"BLD",8597,"REQB","B","PSU*4.0*16",2)

"BLD",8597,"REQB","B","PSU*4.0*17",3)

"MBREQ")
0
"PKG",358,-1)
1^1
"PKG",358,0)
PHARMACY BENEFITS MANAGEMENT^PSU^PHARMACY BENEFITS MANAGEMENT
"PKG",358,20,0)
^9.402P^^
"PKG",358,22,0)
^9.49I^1^1
"PKG",358,22,1,0)
4.0^3050622^3050722^33273
"PKG",358,22,1,"PAH",1,0)
18^3110330
"PKG",358,22,1,"PAH",1,1,0)
^^9^9^3110330
"PKG",358,22,1,"PAH",1,1,1,0)
When a user runs PSU PBM MANUAL reports for a large timeframe. This would 
"PKG",358,22,1,"PAH",1,1,2,0)
cause the XTMP global to fill up in some cases and prevent users from 
"PKG",358,22,1,"PAH",1,1,3,0)
logging into CPRS.
"PKG",358,22,1,"PAH",1,1,4,0)
 
"PKG",358,22,1,"PAH",1,1,5,0)
Controlled substances are showing up as being linked incorrectly to an 
"PKG",358,22,1,"PAH",1,1,6,0)
outpatient clinic.
"PKG",358,22,1,"PAH",1,1,7,0)
 
"PKG",358,22,1,"PAH",1,1,8,0)
Integrated facilities are not correctly distinguished between in 
"PKG",358,22,1,"PAH",1,1,9,0)
national reports.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","PSUCP1")
0^1^B93655899^B88326755
"RTN","PSUCP1",1,0)
PSUCP1 ;BIR/TJH,PDW - PBM - CONTROL POINT, MANUAL ENTRY ; 1/10/11 8:08am
"RTN","PSUCP1",2,0)
 ;;4.0;PHARMACY BENEFITS MANAGEMENT;**15,18**;MARCH, 2005;Build 7
"RTN","PSUCP1",3,0)
 ;
"RTN","PSUCP1",4,0)
 ;DBIA's
"RTN","PSUCP1",5,0)
 ; Reference to file #4   supported by DBIA 10090
"RTN","PSUCP1",6,0)
 ; Reference to file #4.3 supported by DBIA 10091
"RTN","PSUCP1",7,0)
 ; 
"RTN","PSUCP1",8,0)
EN ; start here
"RTN","PSUCP1",9,0)
 D PSUHDR ; display option explanation
"RTN","PSUCP1",10,0)
 S PSUERR=0
"RTN","PSUCP1",11,0)
 S X=$$VALI^PSUTL(4.3,1,217),PSUSNDR=+$$VAL^PSUTL(4,X,99)
"RTN","PSUCP1",12,0)
ASK ; ask type of report desired
"RTN","PSUCP1",13,0)
 S DIR("?",1)="If this is the monthly report that will be sent to the PBM section"
"RTN","PSUCP1",14,0)
 S DIR("?",2)="for inclusion into the master file, answer with a 'Y' for YES."
"RTN","PSUCP1",15,0)
 S DIR("?",3)="If this is not the monthly report or you want to specify a date range"
"RTN","PSUCP1",16,0)
 S DIR("?")="then enter 'N' for NO."
"RTN","PSUCP1",17,0)
 S DIR("A")="Is this the monthly report",DIR(0)="YO"
"RTN","PSUCP1",18,0)
 D ^DIR K DIR W !
"RTN","PSUCP1",19,0)
 G ERR:(Y="^")!(Y="")!($D(DTOUT))
"RTN","PSUCP1",20,0)
 K DTOUT
"RTN","PSUCP1",21,0)
 S PSUAM=Y,ERC=0
"RTN","PSUCP1",22,0)
DATES ; do this if user entered N, wants date range
"RTN","PSUCP1",23,0)
 I 'PSUAM D
"RTN","PSUCP1",24,0)
 .K PSUMNTH
"RTN","PSUCP1",25,0)
 .S %DT(0)=2880000,%DT="AEPX",%DT("A")="Select Start Date: "
"RTN","PSUCP1",26,0)
 .D ^%DT K %DT W !
"RTN","PSUCP1",27,0)
 .I +Y'>0 S ERC=1 Q  ; condition 1, exit.
"RTN","PSUCP1",28,0)
 .S PSUSDT=+Y
"RTN","PSUCP1",29,0)
 .S %DT(0)=2880000,%DT="AEPX",%DT("A")="  Select End Date: "
"RTN","PSUCP1",30,0)
 .D ^%DT K %DT W !
"RTN","PSUCP1",31,0)
 .I +Y'>0 S ERC=1 Q  ; condition 1, exit.
"RTN","PSUCP1",32,0)
 .S PSUEDT=+Y
"RTN","PSUCP1",33,0)
 .I PSUEDT'>PSUSDT D  Q
"RTN","PSUCP1",34,0)
 ..W !!,"The end date of the search must be greater than the start date.",!
"RTN","PSUCP1",35,0)
 ..K PSUSDT,PSUEDT
"RTN","PSUCP1",36,0)
 ..S ERC=2 ; condition 2, ask dates again
"RTN","PSUCP1",37,0)
 .I PSUSDT>DT!(PSUEDT>DT) D  Q
"RTN","PSUCP1",38,0)
 ..W !!,"Searches cannot be executed for future dates.",!
"RTN","PSUCP1",39,0)
 ..K PSUSDT,PSUEDT
"RTN","PSUCP1",40,0)
 ..S ERC=2 ; condition 2, ask dates again
"RTN","PSUCP1",41,0)
 .;PSU*4*18 Warn if range > 93 days.
"RTN","PSUCP1",42,0)
 .N X1,X2,X,% S X1=PSUEDT,X2=PSUSDT D ^%DTC I X>93 D  Q
"RTN","PSUCP1",43,0)
 ..W !!,"WARNING you have chosen a range greater than 93 days."
"RTN","PSUCP1",44,0)
 ..W !,"This could potentially create a very large amount of data."
"RTN","PSUCP1",45,0)
 ..W !,"This may result in system problems."
"RTN","PSUCP1",46,0)
 ..W !!,"Are you sure you want to continue"
"RTN","PSUCP1",47,0)
 ..D YN^DICN W ! I %'=1 S ERC=2
"RTN","PSUCP1",48,0)
 I ERC=1 G ERR
"RTN","PSUCP1",49,0)
 I ERC=2 S ERC=0 G DATES
"RTN","PSUCP1",50,0)
 ;
"RTN","PSUCP1",51,0)
PSUMON ; do this if user asked for monthly report
"RTN","PSUCP1",52,0)
 I PSUAM D
"RTN","PSUCP1",53,0)
 .S PSUMNTH=1
"RTN","PSUCP1",54,0)
 .S %DT(0)=2880000,%DT="MAEP",%DT("A")="Select Month/Year: " K DTOUT,X,Y
"RTN","PSUCP1",55,0)
 .D ^%DT K %DT W !
"RTN","PSUCP1",56,0)
 .S ERC=$S($D(DTOUT):1,X="^":1,X="^^":3,+Y'>0:1,1:0)
"RTN","PSUCP1",57,0)
 .Q:ERC  ; check error condition
"RTN","PSUCP1",58,0)
 .I Y>DT!($E(Y,1,5)=$E(DT,1,5)) D  Q:ERC
"RTN","PSUCP1",59,0)
 ..W !!,"PBM statistical data can only be compiled for months that have already passed.",!
"RTN","PSUCP1",60,0)
 ..K Y
"RTN","PSUCP1",61,0)
 ..S ERC=2 ; condition 2, ask month again
"RTN","PSUCP1",62,0)
 .I $E(Y,4,5)="00" D  Q:ERC
"RTN","PSUCP1",63,0)
 ..W !!,"Oops, you forgot to enter a month.  Try again, please."
"RTN","PSUCP1",64,0)
 ..K Y
"RTN","PSUCP1",65,0)
 ..S ERC=2
"RTN","PSUCP1",66,0)
 .S PSUSDT=$E(Y,1,5)_"01",MNUM=$E(Y,4,5)
"RTN","PSUCP1",67,0)
 .S PSUMTH=$E(Y,1,5)    ;leap year correction
"RTN","PSUCP1",68,0)
 .S PSULY=$$LEAPYR^PSUCP(PSUMTH)    ;leap year correction
"RTN","PSUCP1",69,0)
 .S PSUEDT=$E(Y,1,5)_$S(MNUM["02":$S(PSULY:"29",1:"28"),MNUM="04":"30",MNUM="06":"30",MNUM="09":"30",MNUM="11":"30",1:31)   ;leap year correction
"RTN","PSUCP1",70,0)
 .;S PSUEDT=$E(Y,1,5)_$S(MNUM="02":"29",MNUM="04":"30",MNUM="06":"30",MNUM="09":"30",MNUM="11":"30",1:31)
"RTN","PSUCP1",71,0)
 ;
"RTN","PSUCP1",72,0)
 ;
"RTN","PSUCP1",73,0)
 G ERR:ERC=1,ASK:ERC=3
"RTN","PSUCP1",74,0)
 I ERC=2 S ERC=0 G PSUMON ; erroneous input, try again
"RTN","PSUCP1",75,0)
 S ^XTMP("PSU_"_PSUJOB,"PSUMONTH")=$E(PSUSDT,1,5)
"RTN","PSUCP1",76,0)
 ;
"RTN","PSUCP1",77,0)
SETDT ; set month name variables
"RTN","PSUCP1",78,0)
 S X=PSUSDT D DATE S PSUMON1=Y
"RTN","PSUCP1",79,0)
 S X=PSUEDT D DATE S PSUMON2=Y
"RTN","PSUCP1",80,0)
 S X=$E(PSUSDT,1,5)_"00" D DATE S PSUMON=$E(PSUSDT,1,5)
"RTN","PSUCP1",81,0)
 S ^XTMP("PSU_"_PSUJOB,"PSUMONTH")=PSUMON
"RTN","PSUCP1",82,0)
 K X,X1
"RTN","PSUCP1",83,0)
 ;
"RTN","PSUCP1",84,0)
SELF ; include self and PSU PBM mailgroup
"RTN","PSUCP1",85,0)
 S PSUPBMG=0
"RTN","PSUCP1",86,0)
 S PSUDUZ=0
"RTN","PSUCP1",87,0)
 S DIR("A")="Do you want a copy of this report sent to you in a MailMan message"
"RTN","PSUCP1",88,0)
 S DIR("?")="Please answer with a 'Y' or 'N'."
"RTN","PSUCP1",89,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","PSUCP1",90,0)
 D ^DIR K DIR,DIRUT,DIROUT,DUOUT,DTOUT W !
"RTN","PSUCP1",91,0)
 G ERR:Y="",ERR:Y="^",DATES:Y["^^"
"RTN","PSUCP1",92,0)
 I Y S PSUDUZ=DUZ,^XTMP("PSU_"_PSUJOB,"PSUFLAG1")="",^XTMP("PSU_"_PSUJOB,"PSUFLAG2")="",PSUFLAG1=1,PSUFLAG2=1
"RTN","PSUCP1",93,0)
 I 'Y S ^XTMP("PSU_"_PSUJOB,"PSUFLAG3")="",PSUFLAG3=1
"RTN","PSUCP1",94,0)
 I Y S PSUPBMG=1  ;Send copy to PSU PBM mail group
"RTN","PSUCP1",95,0)
 ;
"RTN","PSUCP1",96,0)
MASTER ; if monthly, should it be added to master file
"RTN","PSUCP1",97,0)
 S (PSUMASF,Y)=0
"RTN","PSUCP1",98,0)
 I PSUAM D
"RTN","PSUCP1",99,0)
 .S DIR("A")="Send this to the PBM section for addition to the master file"
"RTN","PSUCP1",100,0)
 .S DIR("?")="Please answer with a 'Y' or 'N'."
"RTN","PSUCP1",101,0)
 .S DIR(0)="YO",DIR("B")="NO"
"RTN","PSUCP1",102,0)
 .D ^DIR K DIR,DIRUT,DIROUT,DUOUT,DTOUT W !
"RTN","PSUCP1",103,0)
 G ERR:Y="",ERR:Y="^",SELF:Y["^^"
"RTN","PSUCP1",104,0)
 I Y S PSUMASF=1
"RTN","PSUCP1",105,0)
 ;
"RTN","PSUCP1",106,0)
MODULE ; display and select module(s)
"RTN","PSUCP1",107,0)
 D OPTS^PSUCP ; set up PSUA array with option info
"RTN","PSUCP1",108,0)
 W !!,"Select one or more of the following:",!
"RTN","PSUCP1",109,0)
 F I=1:1:12 W !,I,".",?5,PSUA(I,"M")
"RTN","PSUCP1",110,0)
 W !!,"Laboratory data and a Patient Demographic summary report will be automatically"
"RTN","PSUCP1",111,0)
 W !,"generated if IVs, Unit Dose, or Prescription extracts are chosen."
"RTN","PSUCP1",112,0)
 W !,"You may select all of the modules by entering 'A' for ALL or by using '1:12'."
"RTN","PSUCP1",113,0)
 W !!,"The Provider Data report may take an extended amount of time to run."
"RTN","PSUCP1",114,0)
 W !,"It is recommended that it be run during off peak hours."
"RTN","PSUCP1",115,0)
MODP ; module selection prompt
"RTN","PSUCP1",116,0)
 W !!,"Select the code(s) associated with the data requested: "
"RTN","PSUCP1",117,0)
 R X:DTIME E  G ERR
"RTN","PSUCP1",118,0)
 I X["^" G ERR:X="^",MASTER:PSUAM,SELF
"RTN","PSUCP1",119,0)
 I X="" W "  <??>",$C(7) S X="?"
"RTN","PSUCP1",120,0)
 ;
"RTN","PSUCP1",121,0)
 ;
"RTN","PSUCP1",122,0)
 ;I X["7" D  G MODULE
"RTN","PSUCP1",123,0)
 ;.W !!,"Lab may not be selected directly.  It will be automatically included when"
"RTN","PSUCP1",124,0)
 ;.W !,"options 1, 2 or 4 are part of the selection."
"RTN","PSUCP1",125,0)
 S:"Aa"[$E(X) X="1:12"
"RTN","PSUCP1",126,0)
MODHLP I X["?" D  G MODULE:X["??",MODP
"RTN","PSUCP1",127,0)
 .W !!,"Enter:  A single code number to print just that report."
"RTN","PSUCP1",128,0)
 .W !,?8,"A range of code numbers.  Example:  1:3"
"RTN","PSUCP1",129,0)
 .W !,?8,"Multiple code numbers separated by commas.  Example:  2,4,5"
"RTN","PSUCP1",130,0)
 .W !,?8,"The letter A to select ALL reports."
"RTN","PSUCP1",131,0)
 .W !,?8,"A single up-arrow ( ^ ) to exit now without running any reports."
"RTN","PSUCP1",132,0)
 .W !,?8,"Double up-arrow  ( ^^ ) to go back to a previous prompt.",!
"RTN","PSUCP1",133,0)
 S X=$TR(X,"-;_><.A","::::::")
"RTN","PSUCP1",134,0)
 K PSUMOD
"RTN","PSUCP1",135,0)
 F PII=1:1:$L(X,",") D
"RTN","PSUCP1",136,0)
 .S X1=$P(X,",",PII)
"RTN","PSUCP1",137,0)
 .Q:X1=""
"RTN","PSUCP1",138,0)
 .I X1[":" D  Q
"RTN","PSUCP1",139,0)
 ..S XBEG=$P(X1,":",1),XEND=$P(X1,":",2)
"RTN","PSUCP1",140,0)
 ..I (XBEG="")!(XEND="") Q
"RTN","PSUCP1",141,0)
 ..F PJJ=XBEG:1:XEND S PSUMOD(PJJ)=""
"RTN","PSUCP1",142,0)
 ..K PJJ,XBEG,XEND
"RTN","PSUCP1",143,0)
 .S PSUMOD(X1)=""
"RTN","PSUCP1",144,0)
 S (X,ERC)=0 F  S X=$O(PSUMOD(X)) Q:X=""  I '$D(PSUA(X)) S ERC=1 Q
"RTN","PSUCP1",145,0)
 I ERC W !!,"<INVALID CHOICE - ",X,", TRY AGAIN>",$C(7) G MODP
"RTN","PSUCP1",146,0)
 I '$D(PSUMOD) W !!,"No choices were made." S X="?" G MODHLP
"RTN","PSUCP1",147,0)
 ;
"RTN","PSUCP1",148,0)
 F PII=1,2,4 I $D(PSUMOD(PII)) S PSUMOD(13)="" ; add Lab if IV,UD or OP
"RTN","PSUCP1",149,0)
 ;
"RTN","PSUCP1",150,0)
 W !!,"You have selected: "
"RTN","PSUCP1",151,0)
 S X="",PSUOPTS="" F  S X=$O(PSUMOD(X)) Q:X=""  W ?20,X," - ",PSUA(X,"M"),! S PSUOPTS=PSUOPTS_X_","
"RTN","PSUCP1",152,0)
 I $D(PSUMOD(1))!$D(PSUMOD(2))!$D(PSUMOD(4)) D
"RTN","PSUCP1",153,0)
 . W ?20,"Patient Demographic Summary" W !
"RTN","PSUCP1",154,0)
 S PSUOPTS=$E(PSUOPTS,1,$L(PSUOPTS)-1) ; remove trailing comma
"RTN","PSUCP1",155,0)
 ;
"RTN","PSUCP1",156,0)
 ;Set flag for combined AMIS summary report.
"RTN","PSUCP1",157,0)
 I (PSUOPTS["1,2,3,4")&(PSUOPTS[6) S ^XTMP("PSU_"_PSUJOB,"CBAMIS")=""
"RTN","PSUCP1",158,0)
 ;
"RTN","PSUCP1",159,0)
RPT ; select report type - full report or summary only
"RTN","PSUCP1",160,0)
 N PSUGO
"RTN","PSUCP1",161,0)
 D:PSUOPTS'=11&(PSUOPTS'=12)        ; no summary for VITALS/IMMS OR AA**
"RTN","PSUCP1",162,0)
 . S DIR("A")="Print Summary Only"
"RTN","PSUCP1",163,0)
 . S DIR("?",1)="Please answer with a 'Y' or 'N'."
"RTN","PSUCP1",164,0)
 . S DIR("?")="Answer Yes and only the summary report will be generated."
"RTN","PSUCP1",165,0)
 . S DIR(0)="YO",DIR("B")="NO"
"RTN","PSUCP1",166,0)
 . D ^DIR K DIR,DIRUT,DIROUT,DUOUT,DTOUT W !
"RTN","PSUCP1",167,0)
 . ;PSU*4*15
"RTN","PSUCP1",168,0)
 . I (Y["^") S:Y="^" PSUGO=1 S:Y["^^" PSUGO=2 Q
"RTN","PSUCP1",169,0)
 . S PSUSMRY=$S(Y:1,1:0)
"RTN","PSUCP1",170,0)
 G ERR:$G(PSUGO)=1,MODULE:$G(PSUGO)=2
"RTN","PSUCP1",171,0)
 S:PSUOPTS=11!(PSUOPTS=12) PSUSMRY=0
"RTN","PSUCP1",172,0)
 ;
"RTN","PSUCP1",173,0)
 ;
"RTN","PSUCP1",174,0)
BCKGND ; always run as a background job
"RTN","PSUCP1",175,0)
 W !!,"This report will automatically run as a background job."
"RTN","PSUCP1",176,0)
 ; ask time to queue
"RTN","PSUCP1",177,0)
 S DIR("?",1)="You can start the program now or queue it to start later."
"RTN","PSUCP1",178,0)
 S DIR("?",2)="Past date/time is not allowed.  Future dates up to 10 days are allowed."
"RTN","PSUCP1",179,0)
 S DIR("?")="Enter an appropriate date and time or press <Enter> to start now."
"RTN","PSUCP1",180,0)
 S %DT="RX",X="NOW+10" D ^%DT
"RTN","PSUCP1",181,0)
 S DIR("A")="REQUESTED TIME TO RUN: ",DIR(0)="DAO^NOW:"_Y_":EFRX"
"RTN","PSUCP1",182,0)
 S DIR("B")="NOW"
"RTN","PSUCP1",183,0)
 D ^DIR K DIR W !
"RTN","PSUCP1",184,0)
 G ERR:(Y="^")!(Y="")!($D(DTOUT))
"RTN","PSUCP1",185,0)
 K DTOUT
"RTN","PSUCP1",186,0)
 S PSUDTH=Y
"RTN","PSUCP1",187,0)
 ;
"RTN","PSUCP1",188,0)
DEVICE ;
"RTN","PSUCP1",189,0)
 S PSUIOP="",PSUPOP=1
"RTN","PSUCP1",190,0)
 I 'PSUDUZ D  G ERR:POP
"RTN","PSUCP1",191,0)
 . I PSUOPTS=11!(PSUOPTS=12) W !,"HARDCOPIES NOT AVAILABLE FOR THIS OPTION" S POP=1 Q
"RTN","PSUCP1",192,0)
 .S PSUIO=ION_";"_IOST_";"_IOM_";"_IOSL
"RTN","PSUCP1",193,0)
 .S %ZIS="N0",%ZIS("B")="",%ZIS("A")="Select 132 column device: "
"RTN","PSUCP1",194,0)
 .D ^%ZIS K %ZIS
"RTN","PSUCP1",195,0)
 .I POP!($E(IOST)="C"),$G(PSUFQ) D  I PSUPOP S POP=1 Q
"RTN","PSUCP1",196,0)
 ..W !!,"You have not selected an appropriate print device."
"RTN","PSUCP1",197,0)
 ..W !,"Enter 'C' to continue data compilation and send mail messages"
"RTN","PSUCP1",198,0)
 ..W !,"          but not print any hardcopy."
"RTN","PSUCP1",199,0)
 ..W !,"Enter '^' to abort this whole option now."
"RTN","PSUCP1",200,0)
 ..F  R !,"-> ",PSUX:DTIME Q:"C^"[$E(PSUX)  W "  ??"
"RTN","PSUCP1",201,0)
 ..S PSUPOP=$S(PSUX="C":0,1:1)
"RTN","PSUCP1",202,0)
 .S PSUIOP=$S('PSUPOP:"",1:ION_";"_IOST_";"_IOM_";"_IOSL) ; save printer parameters
"RTN","PSUCP1",203,0)
 .D RESETVAR^%ZIS ; restore terminal parameters
"RTN","PSUCP1",204,0)
EXIT ; exit point for normal finish
"RTN","PSUCP1",205,0)
 ;
"RTN","PSUCP1",206,0)
 Q  ; return to calling routine, ^PSUCP
"RTN","PSUCP1",207,0)
 ;
"RTN","PSUCP1",208,0)
PSUHDR ;Display header
"RTN","PSUCP1",209,0)
 W !!,"The Pharmacy Benefits Management (PBM) report will extract"
"RTN","PSUCP1",210,0)
 W !,"statistics from one or more of the following files:",!
"RTN","PSUCP1",211,0)
 W !,"1. Pharmacy Patient IV Sub-file       File # 55.01"
"RTN","PSUCP1",212,0)
 W !,"2. Pharmacy Patient UD Sub-file       File # 55.06"
"RTN","PSUCP1",213,0)
 W !,"3. AR/WS Stats                        File # 58.5"
"RTN","PSUCP1",214,0)
 W !,"4. Prescription                       File # 52"
"RTN","PSUCP1",215,0)
 W !,"5. Procurement                        File # 58.811,# 58.81"
"RTN","PSUCP1",216,0)
 W !,"6. Controlled Substances              File # 58.81"
"RTN","PSUCP1",217,0)
 W !,"7. Patient Demographics               File # 2"
"RTN","PSUCP1",218,0)
 W !,"8. Outpatient Visits                  File # 9000010,# 9000010.07"
"RTN","PSUCP1",219,0)
 W !,"9. Inpatient PTF Record               File # 45"
"RTN","PSUCP1",220,0)
 W !,"10. Provider Data                     File # 200,# 7,# 49,# 8932.1"
"RTN","PSUCP1",221,0)
 W !,"11. Allergy/Adverse Event             File # 120.8,# 120.85"
"RTN","PSUCP1",222,0)
 W !,"12. Vitals/Immunization Record        File # 120.5,# 9999999.14"
"RTN","PSUCP1",223,0)
 W !,"13. Laboratory                        File # 60,# 63"
"RTN","PSUCP1",224,0)
 ;
"RTN","PSUCP1",225,0)
 W !!,"This data can be collected for ALL of the files listed or for one or"
"RTN","PSUCP1",226,0)
 W !,"more specific files.  A summary of data or a detailed report by drug"
"RTN","PSUCP1",227,0)
 W !,"can be delivered to you in a mail message or in a hard copy report.",!!
"RTN","PSUCP1",228,0)
 Q
"RTN","PSUCP1",229,0)
 ;
"RTN","PSUCP1",230,0)
DATE ;Date conversion
"RTN","PSUCP1",231,0)
 S Y=X X ^DD("DD") S:Y="" Y="Unknown"
"RTN","PSUCP1",232,0)
 Q
"RTN","PSUCP1",233,0)
 ;
"RTN","PSUCP1",234,0)
ERR ; Exit point following erroneous input or ^
"RTN","PSUCP1",235,0)
 K ERC,MNUM,MOD,PII,PSUA,PSUAM,PSUDUZ,PSUEDT,PSUPBMG,PSUMASF,PSUPBMG,PSUMNTH,PSUMOD
"RTN","PSUCP1",236,0)
 ;K PSUMON,PSUMON1,PSUMON2,PSUOPTS,PSUSDT,PSUSMRY,X1
"RTN","PSUCP1",237,0)
 K PSUMON1,PSUMON2,PSUOPTS,PSUSDT,PSUSMRY,X1
"RTN","PSUCP1",238,0)
 S PSUERR=1
"RTN","PSUCP1",239,0)
 Q
"RTN","PSUCP1",240,0)
 ;
"RTN","PSULRHL1")
0^3^B46135990^B40583556
"RTN","PSULRHL1",1,0)
PSULRHL1 ;HCIOFO/BH/RDC - Process real time HL7 Lab messages ; 1/10/11 8:10am
"RTN","PSULRHL1",2,0)
 ;;4.0;PHARMACY BENEFITS MANAGEMENT;**3,11,16,18**;MARCH, 2005;Build 7
"RTN","PSULRHL1",3,0)
 ;
"RTN","PSULRHL1",4,0)
 ; DBIA 3565 to subscribe to the LR7O ALL EVSEND RESULTS protocol
"RTN","PSULRHL1",5,0)
 ; DBIA 998 to dig through ^DPT(i,"LR" go get the ien to file #63
"RTN","PSULRHL1",6,0)
 ; DBIA 91-A to dig through ^LAB(60 to get the name of the test
"RTN","PSULRHL1",7,0)
 ; DBIA 3630 to call the HL7 PID builder
"RTN","PSULRHL1",8,0)
 ; DBIA 4727 to call EN^HLOCNRT
"RTN","PSULRHL1",9,0)
 ; DBIA 3646 to call API: $$EMPL^DGSEC4
"RTN","PSULRHL1",10,0)
 ; DBIA 4658 to call API: $$TSTRES^LRRPU
"RTN","PSULRHL1",11,0)
 ;
"RTN","PSULRHL1",12,0)
 ; This program is called when a lab test is verified. If it is for a
"RTN","PSULRHL1",13,0)
 ; chemistry test, and patient is a Veteran, an HL7 message will
"RTN","PSULRHL1",14,0)
 ; be created and sent to the national PBM Lab database.
"RTN","PSULRHL1",15,0)
 ;
"RTN","PSULRHL1",16,0)
 ;
"RTN","PSULRHL1",17,0)
HL7 ; Entry point for PBM processing - triggered by lab protocol 
"RTN","PSULRHL1",18,0)
 ; LR7O ALL EVSEND RESULTS.
"RTN","PSULRHL1",19,0)
 ;
"RTN","PSULRHL1",20,0)
 ;*18 Added PSUDIV
"RTN","PSULRHL1",21,0)
 N ARR,FIRST,LRDFN,PSUEXT,PSUHLFS,PSUHLECH,PSUHLCS,PSUDIV
"RTN","PSULRHL1",22,0)
 ;
"RTN","PSULRHL1",23,0)
 ;  OREMSG is the pointer reference to the global that contains the
"RTN","PSULRHL1",24,0)
 ;  lab data and is passed in by the LR7O ALL EVSEND RESULTS protocol.
"RTN","PSULRHL1",25,0)
 ;  
"RTN","PSULRHL1",26,0)
 I '$D(@OREMSG) Q
"RTN","PSULRHL1",27,0)
 ;
"RTN","PSULRHL1",28,0)
 ; Get Lab parameters
"RTN","PSULRHL1",29,0)
 ;
"RTN","PSULRHL1",30,0)
 D INIT^HLFNC2("PSU-SITE-DRIVER",.PSUHL)
"RTN","PSULRHL1",31,0)
 ;
"RTN","PSULRHL1",32,0)
 ; Set up CS delimeter for the Pharmacy message
"RTN","PSULRHL1",33,0)
 ;
"RTN","PSULRHL1",34,0)
 S PSUHL("CS")=$E(PSUHL("ECH"),1)
"RTN","PSULRHL1",35,0)
 ;
"RTN","PSULRHL1",36,0)
 ; Set up segment processing parameters 
"RTN","PSULRHL1",37,0)
 ;
"RTN","PSULRHL1",38,0)
 S PSUEXT("PSUBUF")=$NA(^TMP("HLS",$J))
"RTN","PSULRHL1",39,0)
 S PSUEXT("PSUPTR")=0
"RTN","PSULRHL1",40,0)
 ;
"RTN","PSULRHL1",41,0)
 ; Get the delimiters that the passed in lab data is using
"RTN","PSULRHL1",42,0)
 ;
"RTN","PSULRHL1",43,0)
 D PARAMS
"RTN","PSULRHL1",44,0)
 S PSUHLECH=$G(ARR("PSUHLECH"),"^~\&")
"RTN","PSULRHL1",45,0)
 S PSUHLCS=$E(PSUHLECH,1)
"RTN","PSULRHL1",46,0)
 ;
"RTN","PSULRHL1",47,0)
 ; Quit if no DFN
"RTN","PSULRHL1",48,0)
 ;
"RTN","PSULRHL1",49,0)
 I '$D(ARR) Q
"RTN","PSULRHL1",50,0)
 I ARR("DFN")=0!(ARR("DFN")="") Q
"RTN","PSULRHL1",51,0)
 ;
"RTN","PSULRHL1",52,0)
 ; *16 - Quit if patient is an employee & Non-Veteran 
"RTN","PSULRHL1",53,0)
 ;
"RTN","PSULRHL1",54,0)
 N DFN,VAEL S DFN=ARR("DFN") D ELIG^VADPT
"RTN","PSULRHL1",55,0)
 I $$EMPL^DGSEC4(DFN,"PS"),'VAEL(4) Q
"RTN","PSULRHL1",56,0)
 ;
"RTN","PSULRHL1",57,0)
 ; Get Lab's equivalent of a DFN (LRDFN)
"RTN","PSULRHL1",58,0)
 ;
"RTN","PSULRHL1",59,0)
 S LRDFN=$P(^DPT(ARR("DFN"),"LR"),"^")  ; DBIA 998 to get file #63 ien
"RTN","PSULRHL1",60,0)
 ;
"RTN","PSULRHL1",61,0)
 ; Loop through the lab data 
"RTN","PSULRHL1",62,0)
 ;
"RTN","PSULRHL1",63,0)
 S FIRST=1
"RTN","PSULRHL1",64,0)
 D LOOP
"RTN","PSULRHL1",65,0)
 ;
"RTN","PSULRHL1",66,0)
 ; Generate an HL7 if data exists to be sent
"RTN","PSULRHL1",67,0)
 ;
"RTN","PSULRHL1",68,0)
 I 'FIRST D GENERATE
"RTN","PSULRHL1",69,0)
 ;
"RTN","PSULRHL1",70,0)
 K PSUHL,ERR,OPTNS,ERR
"RTN","PSULRHL1",71,0)
 ;
"RTN","PSULRHL1",72,0)
 Q
"RTN","PSULRHL1",73,0)
 ;
"RTN","PSULRHL1",74,0)
LOOP ;
"RTN","PSULRHL1",75,0)
 N CNT,LRIDT,LRSS,PREV1,PREV2,QUIT1,QUIT2,REC,REC1,REC2,SEG,SEG1,SEG2,STR1
"RTN","PSULRHL1",76,0)
 K ^TMP("HLS",$J)
"RTN","PSULRHL1",77,0)
 S CNT=0
"RTN","PSULRHL1",78,0)
 F  Q:CNT=""  S CNT=$O(@OREMSG@(CNT)) Q:'CNT  D
"RTN","PSULRHL1",79,0)
 . S REC=@OREMSG@(CNT)
"RTN","PSULRHL1",80,0)
 . S REC=$$STRING(REC,CNT)
"RTN","PSULRHL1",81,0)
 . S SEG=$P(REC,PSUHLFS,1)
"RTN","PSULRHL1",82,0)
 . I SEG'="ORC" Q
"RTN","PSULRHL1",83,0)
 . S STR1=$P(REC,PSUHLFS,4)
"RTN","PSULRHL1",84,0)
 . S STR1=$P(STR1,PSUHLCS,1)
"RTN","PSULRHL1",85,0)
 . S LRSS=$P(STR1,";",4)
"RTN","PSULRHL1",86,0)
 . ;
"RTN","PSULRHL1",87,0)
 . ; Quit if data is not for Chemistry
"RTN","PSULRHL1",88,0)
 . ;
"RTN","PSULRHL1",89,0)
 . I LRSS'="CH" Q
"RTN","PSULRHL1",90,0)
 . S LRIDT=$P(STR1,";",5)
"RTN","PSULRHL1",91,0)
 . S QUIT1=0
"RTN","PSULRHL1",92,0)
 . F  Q:QUIT1!(CNT="")  S PREV1=CNT,CNT=$O(@OREMSG@(CNT)) Q:'CNT  D
"RTN","PSULRHL1",93,0)
 . . S REC1=@OREMSG@(CNT)
"RTN","PSULRHL1",94,0)
 . . S REC1=$$STRING(REC1,CNT)
"RTN","PSULRHL1",95,0)
 . . S SEG1=$P(REC1,PSUHLFS,1)
"RTN","PSULRHL1",96,0)
 . . I SEG1="ORC" S CNT=PREV1,QUIT1=1 Q
"RTN","PSULRHL1",97,0)
 . . I SEG1'="OBR" Q
"RTN","PSULRHL1",98,0)
 . . ; If this is the first OBR being processed i.e. this is valid 
"RTN","PSULRHL1",99,0)
 . . ; chemistry data set the PID segment
"RTN","PSULRHL1",100,0)
 . . ;*18 Include ORC segment
"RTN","PSULRHL1",101,0)
 . . I FIRST D PID,ORC S FIRST=0
"RTN","PSULRHL1",102,0)
 . . D OBR(REC1)
"RTN","PSULRHL1",103,0)
 . . S QUIT2=0
"RTN","PSULRHL1",104,0)
 . . F  Q:QUIT2  S PREV2=CNT,CNT=$O(@OREMSG@(CNT)) Q:'CNT  D
"RTN","PSULRHL1",105,0)
 . . . S REC2=@OREMSG@(CNT)
"RTN","PSULRHL1",106,0)
 . . . S REC2=$$STRING(REC2,CNT)
"RTN","PSULRHL1",107,0)
 . . . S SEG2=$P(REC2,PSUHLFS,1)
"RTN","PSULRHL1",108,0)
 . . . I SEG2="OBR"!(SEG2="ORC") S CNT=PREV2,QUIT2=1 Q
"RTN","PSULRHL1",109,0)
 . . . I SEG2'="OBX" Q
"RTN","PSULRHL1",110,0)
 . . . D OBX(REC2)
"RTN","PSULRHL1",111,0)
 Q
"RTN","PSULRHL1",112,0)
 ;
"RTN","PSULRHL1",113,0)
PID ;  Create the PID segment using the standard builder
"RTN","PSULRHL1",114,0)
 ;
"RTN","PSULRHL1",115,0)
 N K1,NEWSEG,SEG
"RTN","PSULRHL1",116,0)
 S SEG="SEG"
"RTN","PSULRHL1",117,0)
 D BLDPID^VAFCQRY(ARR("DFN"),1,"1,2,3",.SEG,.PSUHL,.ERR)
"RTN","PSULRHL1",118,0)
 ;
"RTN","PSULRHL1",119,0)
 ; Loop through the returned array just in case the data is spread over
"RTN","PSULRHL1",120,0)
 ; more than one node
"RTN","PSULRHL1",121,0)
 ;
"RTN","PSULRHL1",122,0)
 S K1="",NEWSEG=""
"RTN","PSULRHL1",123,0)
 F  S K1=$O(SEG(K1)) Q:'K1  D
"RTN","PSULRHL1",124,0)
 . S NEWSEG=NEWSEG_SEG(K1)
"RTN","PSULRHL1",125,0)
 ;
"RTN","PSULRHL1",126,0)
 ; Set the data string into the PBM HL7 array
"RTN","PSULRHL1",127,0)
 ;
"RTN","PSULRHL1",128,0)
 D SETSEG(NEWSEG)
"RTN","PSULRHL1",129,0)
 ;
"RTN","PSULRHL1",130,0)
 Q
"RTN","PSULRHL1",131,0)
 ;
"RTN","PSULRHL1",132,0)
ORC ; ORC needed to send Station Number. PSU*4*18
"RTN","PSULRHL1",133,0)
 N ORCSEG,STATION,SEG
"RTN","PSULRHL1",134,0)
 S ORCSEG="ORC"
"RTN","PSULRHL1",135,0)
 ;
"RTN","PSULRHL1",136,0)
 ; Retrieve station number using the division #
"RTN","PSULRHL1",137,0)
 S STATION=$$GET1^DIQ(4,$G(PSUDIV),99)
"RTN","PSULRHL1",138,0)
 ;
"RTN","PSULRHL1",139,0)
 S $P(SEG,PSUHL("CS"),14)=STATION
"RTN","PSULRHL1",140,0)
 S $P(ORCSEG,PSUHL("FS"),11)=SEG
"RTN","PSULRHL1",141,0)
 ;
"RTN","PSULRHL1",142,0)
 ; Put the string into the PBM HL7 global
"RTN","PSULRHL1",143,0)
 ;
"RTN","PSULRHL1",144,0)
 D SETSEG(ORCSEG)
"RTN","PSULRHL1",145,0)
 ;
"RTN","PSULRHL1",146,0)
 Q
"RTN","PSULRHL1",147,0)
 ;
"RTN","PSULRHL1",148,0)
OBR(REC) ;  Re-forms lab OBR to only send required data
"RTN","PSULRHL1",149,0)
 ;
"RTN","PSULRHL1",150,0)
 N OBRSEG,SITE,SPECDATE
"RTN","PSULRHL1",151,0)
 S OBRSEG="OBR"
"RTN","PSULRHL1",152,0)
 S SPECDATE=$P(REC,PSUHLFS,8)
"RTN","PSULRHL1",153,0)
 S SITE=$P(REC,PSUHLFS,16)
"RTN","PSULRHL1",154,0)
 S SITE=$TR(SITE,PSUHLCS,PSUHL("CS"))
"RTN","PSULRHL1",155,0)
 ;
"RTN","PSULRHL1",156,0)
 ; Create new OBR Segment and pass to SETSEG
"RTN","PSULRHL1",157,0)
 ;
"RTN","PSULRHL1",158,0)
 S $P(OBRSEG,PSUHL("FS"),8)=SPECDATE
"RTN","PSULRHL1",159,0)
 S $P(OBRSEG,PSUHL("FS"),16)=SITE
"RTN","PSULRHL1",160,0)
 ;
"RTN","PSULRHL1",161,0)
 ; Set the data string into the PBM HL7 array
"RTN","PSULRHL1",162,0)
 ;
"RTN","PSULRHL1",163,0)
 D SETSEG(OBRSEG)
"RTN","PSULRHL1",164,0)
 ;
"RTN","PSULRHL1",165,0)
 Q
"RTN","PSULRHL1",166,0)
 ;
"RTN","PSULRHL1",167,0)
OBX(REC) ;  Reforms lab OBX to only send the data needed
"RTN","PSULRHL1",168,0)
 N CODES,HRANGE,LABS,LNAME,LR60,LRANGE,LRDN,LOINC,LOINCS,P2,P3,P12,RANGE,RES,RESULTS,SEG,UNITS
"RTN","PSULRHL1",169,0)
 ;
"RTN","PSULRHL1",170,0)
 S P2=$P(REC,PSUHLFS,2)
"RTN","PSULRHL1",171,0)
 S P3=$P(REC,PSUHLFS,3)
"RTN","PSULRHL1",172,0)
 S P12=$P(REC,PSUHLFS,12)
"RTN","PSULRHL1",173,0)
 S RESULTS=$P(REC,PSUHLFS,6)
"RTN","PSULRHL1",174,0)
 S UNITS=$P(REC,PSUHLFS,7)
"RTN","PSULRHL1",175,0)
 S LABS=$TR($P(REC,PSUHLFS,4),"~","_")
"RTN","PSULRHL1",176,0)
 S LR60=$P(LABS,"^",4)
"RTN","PSULRHL1",177,0)
 I LR60']"" Q
"RTN","PSULRHL1",178,0)
 S LRDN=$G(^LAB(60,LR60,0))
"RTN","PSULRHL1",179,0)
 S LRDN=$P($P(LRDN,"^",5),";",2)   ;  DBIA 91 for data name
"RTN","PSULRHL1",180,0)
 ;
"RTN","PSULRHL1",181,0)
 ; Make the call to LRRPU to get the LOINC code for this test
"RTN","PSULRHL1",182,0)
 ;
"RTN","PSULRHL1",183,0)
 I LRDN']"" Q
"RTN","PSULRHL1",184,0)
 S RES=$$TSTRES^LRRPU(LRDFN,LRSS,LRIDT,LRDN,LR60,1)
"RTN","PSULRHL1",185,0)
 ;
"RTN","PSULRHL1",186,0)
 S CODES=$P(RES,U,8),LOINCS=$P(CODES,"!",3)
"RTN","PSULRHL1",187,0)
 S LOINC=$P(LOINCS,";",1),LNAME=$P(LOINCS,";",2)
"RTN","PSULRHL1",188,0)
 S LRANGE=$P(RES,U,3),HRANGE=$P(RES,U,4)
"RTN","PSULRHL1",189,0)
 S RANGE=LRANGE_"-"_HRANGE I RANGE="-" S RANGE=""
"RTN","PSULRHL1",190,0)
 ;
"RTN","PSULRHL1",191,0)
 ; Use the Pharmacy HL7 delimeters
"RTN","PSULRHL1",192,0)
 ;
"RTN","PSULRHL1",193,0)
 S LABS=$TR(LABS,PSUHLCS,PSUHL("CS"))
"RTN","PSULRHL1",194,0)
 ;
"RTN","PSULRHL1",195,0)
 ; Add LOINC to the list of Labs if it exists
"RTN","PSULRHL1",196,0)
 ;
"RTN","PSULRHL1",197,0)
 I LOINC'="" D
"RTN","PSULRHL1",198,0)
 . ;
"RTN","PSULRHL1",199,0)
 . ; Append the LOINC data using the pharmacy delimiters
"RTN","PSULRHL1",200,0)
 . S LABS=LABS_PSUHL("CS")_LOINC_PSUHL("CS")_LNAME_PSUHL("CS")_"99LN"
"RTN","PSULRHL1",201,0)
 ;
"RTN","PSULRHL1",202,0)
 ; Put the data in the string
"RTN","PSULRHL1",203,0)
 ;
"RTN","PSULRHL1",204,0)
 S SEG="OBX"
"RTN","PSULRHL1",205,0)
 S $P(SEG,PSUHL("FS"),2)=P2
"RTN","PSULRHL1",206,0)
 S $P(SEG,PSUHL("FS"),3)=P3
"RTN","PSULRHL1",207,0)
 S $P(SEG,PSUHL("FS"),4)=LABS
"RTN","PSULRHL1",208,0)
 S $P(SEG,PSUHL("FS"),6)=RESULTS
"RTN","PSULRHL1",209,0)
 S $P(SEG,PSUHL("FS"),7)=UNITS
"RTN","PSULRHL1",210,0)
 S $P(SEG,PSUHL("FS"),8)=RANGE
"RTN","PSULRHL1",211,0)
 S $P(SEG,PSUHL("FS"),12)=P12
"RTN","PSULRHL1",212,0)
 ;
"RTN","PSULRHL1",213,0)
 ; Put the string into the PBM HL7 global
"RTN","PSULRHL1",214,0)
 ;
"RTN","PSULRHL1",215,0)
 D SETSEG(SEG)
"RTN","PSULRHL1",216,0)
 ;
"RTN","PSULRHL1",217,0)
 Q
"RTN","PSULRHL1",218,0)
 ;
"RTN","PSULRHL1",219,0)
STRING(HLSTR,CNT) ;  Loops through sub nodes to create a full data string
"RTN","PSULRHL1",220,0)
 N J
"RTN","PSULRHL1",221,0)
 S J=""
"RTN","PSULRHL1",222,0)
 F  S J=$O(@OREMSG@(CNT,J))  Q:J=""  S HLSTR=HLSTR_@OREMSG@(CNT,J)
"RTN","PSULRHL1",223,0)
 Q HLSTR
"RTN","PSULRHL1",224,0)
 ;
"RTN","PSULRHL1",225,0)
PARAMS ; Get the delimiters used in the lab data
"RTN","PSULRHL1",226,0)
 ;
"RTN","PSULRHL1",227,0)
 N CNT,ID,QUIT,REC,RES
"RTN","PSULRHL1",228,0)
 K ARR
"RTN","PSULRHL1",229,0)
 S (QUIT,CNT)=0,RES=""
"RTN","PSULRHL1",230,0)
 F  S CNT=$O(@OREMSG@(CNT)) Q:'CNT!(QUIT=2)  D
"RTN","PSULRHL1",231,0)
 . S REC=@OREMSG@(CNT)
"RTN","PSULRHL1",232,0)
 . I $E(REC,1,3)="MSH" D  Q
"RTN","PSULRHL1",233,0)
 . . S PSUHLFS=$E(REC,4,4)
"RTN","PSULRHL1",234,0)
 . . S PSUDIV=$P(REC,PSUHLFS,4) ;Get Division # PSU*18
"RTN","PSULRHL1",235,0)
 . . S ARR("PSUHLECH")=$P(REC,PSUHLFS,2),QUIT=QUIT+1
"RTN","PSULRHL1",236,0)
 . I $P(REC,PSUHLFS,1)="PID" D  Q
"RTN","PSULRHL1",237,0)
 . . S ARR("DFN")=$P(REC,PSUHLFS,4)
"RTN","PSULRHL1",238,0)
 . . S QUIT=QUIT+1
"RTN","PSULRHL1",239,0)
 Q
"RTN","PSULRHL1",240,0)
 ;
"RTN","PSULRHL1",241,0)
GENERATE ; Generate HL7 message
"RTN","PSULRHL1",242,0)
 ;
"RTN","PSULRHL1",243,0)
 ; D GENERATE^HLMA("PSU-SITE-DRIVER","GM",1,.RESULT,"",.OPTNS)
"RTN","PSULRHL1",244,0)
 S OPTNS("QUEUE")="PBM LAB"
"RTN","PSULRHL1",245,0)
 S RESULT=$$EN^HLOCNRT("PSU-SITE-DRIVER","GM",.OPTNS)
"RTN","PSULRHL1",246,0)
 I +RESULT'=RESULT D
"RTN","PSULRHL1",247,0)
 . S ^XTMP("PBM/HLO",DT,$J)=RESULT
"RTN","PSULRHL1",248,0)
 K ^TMP("HLS",$J)
"RTN","PSULRHL1",249,0)
 Q
"RTN","PSULRHL1",250,0)
 ;
"RTN","PSULRHL1",251,0)
 ;
"RTN","PSULRHL1",252,0)
SETSEG(SEG) ;
"RTN","PSULRHL1",253,0)
 ;
"RTN","PSULRHL1",254,0)
 ;***** STORES THE SEGMENT INTO THE ^TMP("HLS",$J) BUFFER
"RTN","PSULRHL1",255,0)
 ;
"RTN","PSULRHL1",256,0)
 ; SEG           HL7 segment
"RTN","PSULRHL1",257,0)
 ;
"RTN","PSULRHL1",258,0)
 ; The SETSEG procedure stores the HL7 segment into the
"RTN","PSULRHL1",259,0)
 ; standard HL7 buffer ^TMP("HLS",$J). The <TAB>, <CR> and <LF>
"RTN","PSULRHL1",260,0)
 ; characters are replaced with spaces. Long segments are split among 
"RTN","PSULRHL1",261,0)
 ; sub-nodes of the main segment node.
"RTN","PSULRHL1",262,0)
 ;
"RTN","PSULRHL1",263,0)
 ; The PSUEXT array must be initialized before
"RTN","PSULRHL1",264,0)
 ; calling this function.
"RTN","PSULRHL1",265,0)
 ;
"RTN","PSULRHL1",266,0)
 N I1,I2,MAXLEN,NODE,PTR,PTR1,SID,SL
"RTN","PSULRHL1",267,0)
 S NODE=PSUEXT("PSUBUF"),PTR=$G(PSUEXT("PSUPTR"))+1
"RTN","PSULRHL1",268,0)
 S SL=$L(SEG),MAXLEN=245  K @NODE@(PTR)
"RTN","PSULRHL1",269,0)
 ;--- Store the segment
"RTN","PSULRHL1",270,0)
 S @NODE@(PTR)=$TR($E(SEG,1,MAXLEN),$C(9,10,13),"   ")
"RTN","PSULRHL1",271,0)
 ;
"RTN","PSULRHL1",272,0)
 ;--- Split the segment into sub-nodes if necessary
"RTN","PSULRHL1",273,0)
 D:SL>MAXLEN
"RTN","PSULRHL1",274,0)
 . S I2=MAXLEN
"RTN","PSULRHL1",275,0)
 . F PTR1=1:1  S I1=I2+1,I2=I1+MAXLEN-1  Q:I1>SL  D
"RTN","PSULRHL1",276,0)
 . . S @NODE@(PTR,PTR1)=$TR($E(SEG,I1,I2),$C(9,10,13),"   ")
"RTN","PSULRHL1",277,0)
 ;--- Save the pointer
"RTN","PSULRHL1",278,0)
 S PSUEXT("PSUPTR")=PTR
"RTN","PSULRHL1",279,0)
 Q
"RTN","PSULRHL2")
0^4^B36346912^B33793695
"RTN","PSULRHL2",1,0)
PSULRHL2 ;HCIOFO/BH - File real time HL7 messages ; 3/30/11 10:14am
"RTN","PSULRHL2",2,0)
 ;;4.0;PHARMACY BENEFITS MANAGEMENT;**3,17,18**;MARCH, 2005;Build 7
"RTN","PSULRHL2",3,0)
 ;
"RTN","PSULRHL2",4,0)
FILE Q  ;  quit for HLO - ALA
"RTN","PSULRHL2",5,0)
 ;
"RTN","PSULRHL2",6,0)
 ; * THIS CODE IS NEVER TO BE INVOKED AT A SITE!!! ***
"RTN","PSULRHL2",7,0)
 ; * IT SHOULD ONLY BE INSTALLED ON THE CMOP-NAT SERVER ***
"RTN","PSULRHL2",8,0)
 ;
"RTN","PSULRHL2",9,0)
 Q
"RTN","PSULRHL2",10,0)
 ;
"RTN","PSULRHL2",11,0)
 ;***** parses then files the incoming HL7 message into the message
"RTN","PSULRHL2",12,0)
 ;      global
"RTN","PSULRHL2",13,0)
 ;
"RTN","PSULRHL2",14,0)
 ;***** The following are present upon entry to this label
"RTN","PSULRHL2",15,0)
 ;
"RTN","PSULRHL2",16,0)
 ; HLNEXT   M Code you can use to execute a $O through the segments of 
"RTN","PSULRHL2",17,0)
 ;          a message
"RTN","PSULRHL2",18,0)
 ; 
"RTN","PSULRHL2",19,0)
 ; HLNODE   The current segment in the message (initally set to null)
"RTN","PSULRHL2",20,0)
 ;
"RTN","PSULRHL2",21,0)
 ; HLQUIT   If not greater than zero, indicates there are no more 
"RTN","PSULRHL2",22,0)
 ;          segments to $O through
"RTN","PSULRHL2",23,0)
 ;
"RTN","PSULRHL2",24,0)
 ;*****
"RTN","PSULRHL2",25,0)
 ;
"RTN","PSULRHL2",26,0)
 N FAC,HLCS,HLCSS,HLECH,HLFILE,HLFS,I,I2,ID,IEN,J2
"RTN","PSULRHL2",27,0)
 K HLFILE,X2
"RTN","PSULRHL2",28,0)
 ;
"RTN","PSULRHL2",29,0)
 F I2=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","PSULRHL2",30,0)
 . S HLFILE(I2)=HLNODE,J2=0
"RTN","PSULRHL2",31,0)
 . F  S J2=$O(HLNODE(J2))  Q:'J2  S HLFILE(I2,J2)=HLNODE(J2)
"RTN","PSULRHL2",32,0)
 ;
"RTN","PSULRHL2",33,0)
 S HLFILE="HLFILE"
"RTN","PSULRHL2",34,0)
 ;
"RTN","PSULRHL2",35,0)
 I $D(@(HLFILE))<10 Q
"RTN","PSULRHL2",36,0)
 ;
"RTN","PSULRHL2",37,0)
 ;
"RTN","PSULRHL2",38,0)
 I '$$PARAMS() Q
"RTN","PSULRHL2",39,0)
 ;
"RTN","PSULRHL2",40,0)
 S IEN=$$DEMO() I 'IEN Q
"RTN","PSULRHL2",41,0)
 ;
"RTN","PSULRHL2",42,0)
 D WRITE(IEN)
"RTN","PSULRHL2",43,0)
 ;
"RTN","PSULRHL2",44,0)
 K X2,HLFILE
"RTN","PSULRHL2",45,0)
 Q
"RTN","PSULRHL2",46,0)
 ;
"RTN","PSULRHL2",47,0)
 ;
"RTN","PSULRHL2",48,0)
WRITE(IEN) ;--- Find the OBR/OBX segments
"RTN","PSULRHL2",49,0)
 ;
"RTN","PSULRHL2",50,0)
 N I,IEN1,IEN2,J,J1,PREV,QUIT,STR,STR1
"RTN","PSULRHL2",51,0)
 S I=0
"RTN","PSULRHL2",52,0)
 F  S I=$O(@HLFILE@(I)) Q:I=""  D
"RTN","PSULRHL2",53,0)
 . S STR=@HLFILE@(I)
"RTN","PSULRHL2",54,0)
 . S J=""
"RTN","PSULRHL2",55,0)
 . F  S J=$O(@HLFILE@(I,J))  Q:J=""  S STR=STR_@HLFILE@(I,J)
"RTN","PSULRHL2",56,0)
 . I $E(STR,1,3)="OBR" D
"RTN","PSULRHL2",57,0)
 . . S IEN1=$$OBR(STR,IEN)
"RTN","PSULRHL2",58,0)
 . . I 'IEN1 Q
"RTN","PSULRHL2",59,0)
 . . S QUIT=0
"RTN","PSULRHL2",60,0)
 . . F  Q:QUIT  S PREV=I,I=$O(@HLFILE@(I)) Q:I=""  D
"RTN","PSULRHL2",61,0)
 . . . S STR1=@HLFILE@(I)
"RTN","PSULRHL2",62,0)
 . . . S J1=""
"RTN","PSULRHL2",63,0)
 . . . F  S J1=$O(@HLFILE@(I,J1))  Q:J1=""  S STR1=STR1_@HLFILE@(I,J1)
"RTN","PSULRHL2",64,0)
 . . . I $E(STR1,1,3)'="OBX" S QUIT=1 Q 
"RTN","PSULRHL2",65,0)
 . . . D OBX(STR1,IEN,IEN1)
"RTN","PSULRHL2",66,0)
 . . S I=PREV
"RTN","PSULRHL2",67,0)
 Q
"RTN","PSULRHL2",68,0)
 ;
"RTN","PSULRHL2",69,0)
 ;
"RTN","PSULRHL2",70,0)
ERROR(CODE,FAC,MESSAGE) ; Files any errors found within the processing
"RTN","PSULRHL2",71,0)
 ;
"RTN","PSULRHL2",72,0)
 ;  Input:        
"RTN","PSULRHL2",73,0)
 ;
"RTN","PSULRHL2",74,0)
 ;  CODE     Error Code
"RTN","PSULRHL2",75,0)
 ;  FAC      Facility number
"RTN","PSULRHL2",76,0)
 ;  MESSAGE  Optional parameter to help illustrate the error
"RTN","PSULRHL2",77,0)
 ;
"RTN","PSULRHL2",78,0)
 ;
"RTN","PSULRHL2",79,0)
 N ARR,FDA,STR
"RTN","PSULRHL2",80,0)
 I CODE=1 S STR=DT_": No patient DFN in the HL7 message ID: "_MESSAGE_" - Facility: "_FAC
"RTN","PSULRHL2",81,0)
 ;
"RTN","PSULRHL2",82,0)
 I CODE=2 S STR=DT_": Fileman Update did not work for message ID: "_MESSAGE_" -  Facility: "_FAC
"RTN","PSULRHL2",83,0)
 ;
"RTN","PSULRHL2",84,0)
 I CODE=3 S STR=DT_": Could not update the OBR segment in message ID "_MESSAGE
"RTN","PSULRHL2",85,0)
 ;
"RTN","PSULRHL2",86,0)
 I CODE=4 S STR=DT_": Could not update the OBX segment in message ID "_MESSAGE
"RTN","PSULRHL2",87,0)
 ;
"RTN","PSULRHL2",88,0)
 S FDA(99999,"+1,",.01)=FAC
"RTN","PSULRHL2",89,0)
 S FDA(99999,"+1,",2)=STR
"RTN","PSULRHL2",90,0)
 D UPDATE^DIE("","FDA",)
"RTN","PSULRHL2",91,0)
 Q
"RTN","PSULRHL2",92,0)
 ;
"RTN","PSULRHL2",93,0)
 ;
"RTN","PSULRHL2",94,0)
OBX(STR1,IEN,IEN1) ; Extracts required OBX fields and files into 
"RTN","PSULRHL2",95,0)
 ;                 the global
"RTN","PSULRHL2",96,0)
 ;
"RTN","PSULRHL2",97,0)
 N FDA2,IENS,INDEX,LABS,LOCAL,LOINCC,LOINCNME,MSG2,NLTCODE,NLTNAME,OUT2,RANGE,RESULT,UNITS,VALUE
"RTN","PSULRHL2",98,0)
 ;
"RTN","PSULRHL2",99,0)
 S LABS=$P(STR1,HLFS,4)
"RTN","PSULRHL2",100,0)
 F INDEX=3,6,9 D
"RTN","PSULRHL2",101,0)
 . S VALUE=$P(LABS,HLCS,INDEX)
"RTN","PSULRHL2",102,0)
 . I VALUE="99LRT" D
"RTN","PSULRHL2",103,0)
 . . S LOCAL=$P(LABS,HLCS,INDEX-1)
"RTN","PSULRHL2",104,0)
 . I VALUE="99NLT" D
"RTN","PSULRHL2",105,0)
 . . S NLTCODE=$P(LABS,HLCS,INDEX-2)
"RTN","PSULRHL2",106,0)
 . . S NLTNAME=$P(LABS,HLCS,INDEX-1)
"RTN","PSULRHL2",107,0)
 . I VALUE="99LN" D
"RTN","PSULRHL2",108,0)
 . . S LOINCC=$P(LABS,HLCS,INDEX-2)
"RTN","PSULRHL2",109,0)
 . . S LOINCNME=$P(LABS,HLCS,INDEX-1)
"RTN","PSULRHL2",110,0)
 ;
"RTN","PSULRHL2",111,0)
 S RESULT=$P(STR1,HLFS,6)
"RTN","PSULRHL2",112,0)
 I $G(RESULTS)="" Q
"RTN","PSULRHL2",113,0)
 S UNITS=$P(STR1,HLFS,7)
"RTN","PSULRHL2",114,0)
 S RANGE=$P(STR1,HLFS,8)
"RTN","PSULRHL2",115,0)
 ;
"RTN","PSULRHL2",116,0)
 S IENS="+1,"_IEN1_","_IEN_","
"RTN","PSULRHL2",117,0)
 S FDA2(99999.11,IENS,.01)=RESULT
"RTN","PSULRHL2",118,0)
 S FDA2(99999.11,IENS,.02)=$G(NLTCODE)
"RTN","PSULRHL2",119,0)
 S FDA2(99999.11,IENS,.03)=$G(NLTNAME)
"RTN","PSULRHL2",120,0)
 S FDA2(99999.11,IENS,.04)=$G(LOINCC)
"RTN","PSULRHL2",121,0)
 S FDA2(99999.11,IENS,.05)=$G(LOINCNME)
"RTN","PSULRHL2",122,0)
 S FDA2(99999.11,IENS,.06)=$G(LOCAL)
"RTN","PSULRHL2",123,0)
 S FDA2(99999.11,IENS,2.01)=UNITS
"RTN","PSULRHL2",124,0)
 S FDA2(99999.11,IENS,2.02)=RANGE
"RTN","PSULRHL2",125,0)
 D UPDATE^DIE("","FDA2","OUT2","MSG2")
"RTN","PSULRHL2",126,0)
 ;
"RTN","PSULRHL2",127,0)
 ;I $D(MSG2) S ^TMP("PSUTEST",$J)=MSG2 D ERROR(4,FAC,ID_" IENs: "_IENS)
"RTN","PSULRHL2",128,0)
 I $D(MSG2) D ERROR(4,FAC,ID_" IENs: "_IENS)
"RTN","PSULRHL2",129,0)
 ;
"RTN","PSULRHL2",130,0)
 Q
"RTN","PSULRHL2",131,0)
 ;
"RTN","PSULRHL2",132,0)
 ;
"RTN","PSULRHL2",133,0)
 ;
"RTN","PSULRHL2",134,0)
OBR(STR,IEN) ; Extracts required OBR fields and files into the global
"RTN","PSULRHL2",135,0)
 N DD,FDA1,MM,MSG1,OUT1,SPEC,SPECDATE,YY
"RTN","PSULRHL2",136,0)
 S SPECDATE=+$P(STR,HLFS,8)
"RTN","PSULRHL2",137,0)
 S MM=$E(SPECDATE,5,6),DD=$E(SPECDATE,7,8),YY=$E(SPECDATE,3,4)
"RTN","PSULRHL2",138,0)
 S YY=$S($E(YY,1,1)=0:"3",1:"2")_YY,SPECDATE=YY_MM_DD
"RTN","PSULRHL2",139,0)
 S SPEC=$P(STR,HLFS,16)
"RTN","PSULRHL2",140,0)
 ;
"RTN","PSULRHL2",141,0)
 S FDA1(99999.01,"+1,"_IEN_",",.01)=SPEC
"RTN","PSULRHL2",142,0)
 S FDA1(99999.01,"+1,"_IEN_",",.02)=SPECDATE
"RTN","PSULRHL2",143,0)
 D UPDATE^DIE("","FDA1","OUT1","MSG1")
"RTN","PSULRHL2",144,0)
 ;
"RTN","PSULRHL2",145,0)
 I $D(MSG1) D ERROR(3,FAC,ID_" IENs: "_IEN) Q 0
"RTN","PSULRHL2",146,0)
 ;
"RTN","PSULRHL2",147,0)
 Q OUT1(1)
"RTN","PSULRHL2",148,0)
 ;
"RTN","PSULRHL2",149,0)
 ;
"RTN","PSULRHL2",150,0)
PARAMS() ; Get HL7 Parameters and facility # from the MSH segment
"RTN","PSULRHL2",151,0)
 N CNT,J2,QUIT,REC
"RTN","PSULRHL2",152,0)
 S (QUIT,CNT)=0
"RTN","PSULRHL2",153,0)
 F  S CNT=$O(@HLFILE@(CNT)) Q:'CNT!(QUIT)  D
"RTN","PSULRHL2",154,0)
 . S REC=@HLFILE@(CNT)
"RTN","PSULRHL2",155,0)
 . S J2=""
"RTN","PSULRHL2",156,0)
 . F  S J2=$O(@HLFILE@(CNT,J2))  Q:J2=""  S REC=REC_@HLFILE@(CNT,J2)
"RTN","PSULRHL2",157,0)
 . I $E(REC,1,3)="MSH" D  Q
"RTN","PSULRHL2",158,0)
 . . S HLFS=$E(REC,4,4)
"RTN","PSULRHL2",159,0)
 . . S HLECH=$P(REC,HLFS,2)
"RTN","PSULRHL2",160,0)
 . . S HLCS=$E(HLECH,1,1)
"RTN","PSULRHL2",161,0)
 . . S HLCSS=$E(HLECH,2,2)
"RTN","PSULRHL2",162,0)
 . . S FAC=$P(REC,HLFS,4),FAC=$P(FAC,HLCS,1)
"RTN","PSULRHL2",163,0)
 . . S ID=$P(REC,HLFS,10)
"RTN","PSULRHL2",164,0)
 . . S QUIT=1
"RTN","PSULRHL2",165,0)
 I $G(FAC)="" Q 0
"RTN","PSULRHL2",166,0)
 Q 1
"RTN","PSULRHL2",167,0)
 ;
"RTN","PSULRHL2",168,0)
DEMO() ; Get the demographic data and file a zero node entry in the 
"RTN","PSULRHL2",169,0)
 ; message global
"RTN","PSULRHL2",170,0)
 ;
"RTN","PSULRHL2",171,0)
 N CNT,DFN,END,FDA,I,ICN,IDSTR,J3,MSG,OUT,QPID,QORC,QUIT,REC,SUB,SSN,STA5A
"RTN","PSULRHL2",172,0)
 S (ICN,SSN,DFN,STA5A)=""
"RTN","PSULRHL2",173,0)
 S (QPID,QORC,QUIT,CNT)=0
"RTN","PSULRHL2",174,0)
 F  S CNT=$O(@HLFILE@(CNT)) Q:'CNT!(QUIT)  D
"RTN","PSULRHL2",175,0)
 . S REC=@HLFILE@(CNT)
"RTN","PSULRHL2",176,0)
 . S J3=""
"RTN","PSULRHL2",177,0)
 . F  S J3=$O(@HLFILE@(CNT,J3))  Q:J3=""  S REC=REC_@HLFILE@(CNT,J3)
"RTN","PSULRHL2",178,0)
 . I $E(REC,1,3)="PID" D  Q
"RTN","PSULRHL2",179,0)
 . . S IDSTR=$P(REC,HLFS,4),END=0
"RTN","PSULRHL2",180,0)
 . . ;
"RTN","PSULRHL2",181,0)
 . . F I=1:1  Q:END  D
"RTN","PSULRHL2",182,0)
 . . . S SUB=$P(IDSTR,HLCSS,I)
"RTN","PSULRHL2",183,0)
 . . . I SUB="" S END=1 Q
"RTN","PSULRHL2",184,0)
 . . . I $P(SUB,HLCS,5)="NI" D
"RTN","PSULRHL2",185,0)
 . . . . I $P(SUB,HLCS,8)'="" Q
"RTN","PSULRHL2",186,0)
 . . . . S ICN=$P(SUB,HLCS,1),ICN=$P(ICN,"V",1)
"RTN","PSULRHL2",187,0)
 . . . . ; 
"RTN","PSULRHL2",188,0)
 . . . . ;PSU*4*17 Don't overwrite SSN with ""
"RTN","PSULRHL2",189,0)
 . . . I $P(SUB,HLCS,5)="SS" D
"RTN","PSULRHL2",190,0)
 . . . . S SSN=$S($G(SSN):SSN,1:$P(SUB,HLCS,1))
"RTN","PSULRHL2",191,0)
 . . . . ;
"RTN","PSULRHL2",192,0)
 . . . I $P(SUB,HLCS,5)="PI" D
"RTN","PSULRHL2",193,0)
 . . . . S DFN=$P(SUB,HLCS,1)
"RTN","PSULRHL2",194,0)
 . . S QPID=1
"RTN","PSULRHL2",195,0)
 . ;*18 Get Station#
"RTN","PSULRHL2",196,0)
 . I $E(REC,1,3)="ORC" D
"RTN","PSULRHL2",197,0)
 . . S STA5A=$P(REC,HLFS,11),STA5A=$P(STA5A,HLCS,14),QORC=1
"RTN","PSULRHL2",198,0)
 . I QPID,QORC S QUIT=1
"RTN","PSULRHL2",199,0)
 ;
"RTN","PSULRHL2",200,0)
 I DFN="" D ERROR(1,FAC,ID) Q 0
"RTN","PSULRHL2",201,0)
 ;
"RTN","PSULRHL2",202,0)
 K FDA,OUT,MSG
"RTN","PSULRHL2",203,0)
 ;
"RTN","PSULRHL2",204,0)
 S FDA(99999,"+1,",.02)=DFN
"RTN","PSULRHL2",205,0)
 S FDA(99999,"+1,",.04)=ICN
"RTN","PSULRHL2",206,0)
 S FDA(99999,"+1,",.05)=SSN
"RTN","PSULRHL2",207,0)
 S FDA(99999,"+1,",.06)=STA5A
"RTN","PSULRHL2",208,0)
 S FDA(99999,"+1,",.01)=FAC
"RTN","PSULRHL2",209,0)
 D UPDATE^DIE("","FDA","OUT","MSG")
"RTN","PSULRHL2",210,0)
 ;
"RTN","PSULRHL2",211,0)
 I $D(MSG) D ERROR(2,FAC,ID) Q 0
"RTN","PSULRHL2",212,0)
 ;
"RTN","PSULRHL2",213,0)
 Q OUT(1)
"RTN","PSULRHL2",214,0)
 ;
"RTN","PSULRHL2",215,0)
 ;
"RTN","PSULRHL2",216,0)
 Q
"RTN","PSULRHL2",217,0)
 ;
"RTN","PSULRHL2",218,0)
 ;
"RTN","PSULRHL3")
0^5^B37954984^B37733711
"RTN","PSULRHL3",1,0)
PSULRHL3 ;HCIOFO/BH - Daily file procesing ; 1/20/11 3:03pm
"RTN","PSULRHL3",2,0)
 ;;4.0;PHARMACY BENEFITS MANAGEMENT;**3,18**;MARCH, 2005;Build 7
"RTN","PSULRHL3",3,0)
 ;
"RTN","PSULRHL3",4,0)
 ; ** THIS ROUTINE SHOULD NEVER BE INSTALLED AT A SITE ***
"RTN","PSULRHL3",5,0)
 ; ** THIS ROUTINE IS ONLY TO BE RUN ON THE CMOP-NAT SERVER ***
"RTN","PSULRHL3",6,0)
 ;
"RTN","PSULRHL3",7,0)
 Q
"RTN","PSULRHL3",8,0)
 ;
"RTN","PSULRHL3",9,0)
PROCESS ; This process loops through the file containing parsed HL7 data.
"RTN","PSULRHL3",10,0)
 ; This process runs each day and collects up to the previous days data.
"RTN","PSULRHL3",11,0)
 ; The data is ordered by facility.  All the data for the facility for
"RTN","PSULRHL3",12,0)
 ; for up to the previous day gets filed into one flat file for PBM to
"RTN","PSULRHL3",13,0)
 ; process.   A pre-init sub routine CULL loops through all x-refs that 
"RTN","PSULRHL3",14,0)
 ; indicate processed data for facility and date and culls the data and
"RTN","PSULRHL3",15,0)
 ; removes the FD x-ref.
"RTN","PSULRHL3",16,0)
 ; 
"RTN","PSULRHL3",17,0)
 ;
"RTN","PSULRHL3",18,0)
 D CULL
"RTN","PSULRHL3",19,0)
 ;
"RTN","PSULRHL3",20,0)
 ;
"RTN","PSULRHL3",21,0)
 N DFN,EDATE,FACILITY,FILE,IEN,OPEN,OUTDIR,PSUDTE,QUIT,RDATE,RC,SDATE,TEMP,X,X1,X2
"RTN","PSULRHL3",22,0)
 ;
"RTN","PSULRHL3",23,0)
 ; End date for search
"RTN","PSULRHL3",24,0)
 D NOW^%DTC S TEMP=%,EDATE=$P(TEMP,".",1)
"RTN","PSULRHL3",25,0)
 ; Run date i.e. going to process data up to yesterday 
"RTN","PSULRHL3",26,0)
 S X1=$P(TEMP,".",1),X2="-1" D C^%DTC S RDATE=$P(X,".",1)
"RTN","PSULRHL3",27,0)
 ;
"RTN","PSULRHL3",28,0)
 ;
"RTN","PSULRHL3",29,0)
 S FACILITY="",(QUIT,OPEN)=0
"RTN","PSULRHL3",30,0)
 ;
"RTN","PSULRHL3",31,0)
 F  S FACILITY=$O(^DIZ(99999,"FDP",FACILITY)) Q:'FACILITY!(QUIT)  D
"RTN","PSULRHL3",32,0)
 . ;
"RTN","PSULRHL3",33,0)
 . I $D(^DIZ(99999,"FD",FACILITY,RDATE)) D  Q
"RTN","PSULRHL3",34,0)
 . . D ERROR(3,FACILITY,RDATE) Q
"RTN","PSULRHL3",35,0)
 . ; New facility so close any open files.
"RTN","PSULRHL3",36,0)
 . I OPEN D CLOSE S OPEN=0
"RTN","PSULRHL3",37,0)
 . S DATE="0"
"RTN","PSULRHL3",38,0)
 . F  S DATE=$O(^DIZ(99999,"FDP",FACILITY,DATE)) Q:'DATE!(DATE'<EDATE)!(QUIT)  D
"RTN","PSULRHL3",39,0)
 . . ;
"RTN","PSULRHL3",40,0)
 . . S DFN=""
"RTN","PSULRHL3",41,0)
 . . F  S DFN=$O(^DIZ(99999,"FDP",FACILITY,DATE,DFN)) Q:'DFN!(QUIT)  D
"RTN","PSULRHL3",42,0)
 . . . S IEN=""
"RTN","PSULRHL3",43,0)
 . . . F  S IEN=$O(^DIZ(99999,"FDP",FACILITY,DATE,DFN,IEN)) Q:'IEN!(QUIT)  D
"RTN","PSULRHL3",44,0)
 . . . . I 'OPEN D  Q:'RC
"RTN","PSULRHL3",45,0)
 . . . . . S RC=$$OPEN()
"RTN","PSULRHL3",46,0)
 . . . . . I 'RC S QUIT=1 Q
"RTN","PSULRHL3",47,0)
 . . . . . S OPEN=1
"RTN","PSULRHL3",48,0)
 . . . . D FILE
"RTN","PSULRHL3",49,0)
 I OPEN D CLOSE
"RTN","PSULRHL3",50,0)
 Q
"RTN","PSULRHL3",51,0)
 ;
"RTN","PSULRHL3",52,0)
 ;
"RTN","PSULRHL3",53,0)
OPEN() ; Open the output directory
"RTN","PSULRHL3",54,0)
 N DST,POP,SRC
"RTN","PSULRHL3",55,0)
 S FILE=FACILITY_DT_".DAT"
"RTN","PSULRHL3",56,0)
 ;S OUTDIR="W:\PBM\National-PBM"
"RTN","PSULRHL3",57,0)
 S OUTDIR="USER$:[PBM.LAB]"
"RTN","PSULRHL3",58,0)
 ;
"RTN","PSULRHL3",59,0)
 K DST,SRC
"RTN","PSULRHL3",60,0)
 S SRC(FILE)=""
"RTN","PSULRHL3",61,0)
 I $$LIST^%ZISH(OUTDIR,"SRC","DST") D ERROR(2,FACILITY,FILE) Q 0
"RTN","PSULRHL3",62,0)
 ;
"RTN","PSULRHL3",63,0)
 D OPEN^%ZISH("HL7FILE",OUTDIR,FILE,"W")
"RTN","PSULRHL3",64,0)
 I $G(POP) D ERROR(1,FACILITY,OUTDIR_FILE) Q 0
"RTN","PSULRHL3",65,0)
 ;
"RTN","PSULRHL3",66,0)
 Q 1
"RTN","PSULRHL3",67,0)
 ;
"RTN","PSULRHL3",68,0)
CLOSE ; Set Cross ref indicating that facilities data for the day got 
"RTN","PSULRHL3",69,0)
 ; processed, and close the output file.
"RTN","PSULRHL3",70,0)
 N FDA
"RTN","PSULRHL3",71,0)
 K FDA
"RTN","PSULRHL3",72,0)
 S FDA(99999,"+1,",.01)=$E(FILE,1,3)
"RTN","PSULRHL3",73,0)
 S FDA(99999,"+1,",.03)=RDATE
"RTN","PSULRHL3",74,0)
 D UPDATE^DIE("","FDA",)
"RTN","PSULRHL3",75,0)
 D CLOSE^%ZISH("HL7FILE")
"RTN","PSULRHL3",76,0)
 Q
"RTN","PSULRHL3",77,0)
 ;
"RTN","PSULRHL3",78,0)
FILE ; File the lab data to the output file in the following single string format.
"RTN","PSULRHL3",79,0)
 ;
"RTN","PSULRHL3",80,0)
 ;  PSU*4*18 Add use of STA5A
"RTN","PSULRHL3",81,0)
 ;  PAT|Facility|ICN|SSN|DFN|Date/Time Specimen Collected|STA5A|Site/Specimen|Local Lab Number^Local Lab Name|
"RTN","PSULRHL3",82,0)
 ;  NLT Code^NLT Name|LOINC Code^LOINC Name|Result|Units|Low Range|High Range|
"RTN","PSULRHL3",83,0)
 ;
"RTN","PSULRHL3",84,0)
 ;
"RTN","PSULRHL3",85,0)
 N CNT,CR,DFN,FAC,HRANGE,ICN,LABA,LABB,LABC,LNCODE,LNNAME,LOCALLAB
"RTN","PSULRHL3",86,0)
 N LRANGE,NLTCODE,NLTNAME,RANGE,REC,RESIEN,RESREC,RESREC1,RESULT,SPEC
"RTN","PSULRHL3",87,0)
 N SPECDATE,SPECREC,SPECIEN,SSN,STR,STR1,TEST,UNITS,STA5A
"RTN","PSULRHL3",88,0)
 ;
"RTN","PSULRHL3",89,0)
 U IO
"RTN","PSULRHL3",90,0)
 S REC=^DIZ(99999,IEN,0)
"RTN","PSULRHL3",91,0)
 S SSN=$P(REC,U,5),ICN=$P(REC,U,4),FAC=$P(REC,U,1),DFN=$P(REC,U,2),STA5A=$P(REC,U,6)
"RTN","PSULRHL3",92,0)
 ;
"RTN","PSULRHL3",93,0)
 S SPECIEN=0
"RTN","PSULRHL3",94,0)
 F  S SPECIEN=$O(^DIZ(99999,IEN,1,SPECIEN)) Q:'SPECIEN  D
"RTN","PSULRHL3",95,0)
 . ; Do not file if Specimen has no results
"RTN","PSULRHL3",96,0)
 . S TEST=0
"RTN","PSULRHL3",97,0)
 . S TEST=$O(^DIZ(99999,IEN,1,SPECIEN,1,TEST)) Q:'TEST
"RTN","PSULRHL3",98,0)
 . S SPECREC=^DIZ(99999,IEN,1,SPECIEN,0)
"RTN","PSULRHL3",99,0)
 . S SPEC=$P(SPECREC,U,1),SPECDATE=$P(SPECREC,U,2)
"RTN","PSULRHL3",100,0)
 . S STR="PAT|"_FAC_"|"_ICN_"|"_SSN_"|"_DFN_"|"_SPECDATE_"|"_STA5A_"|"_SPEC
"RTN","PSULRHL3",101,0)
 . ;W STR
"RTN","PSULRHL3",102,0)
 . S RESIEN=0
"RTN","PSULRHL3",103,0)
 . ;S CNT=0
"RTN","PSULRHL3",104,0)
 . F  S RESIEN=$O(^DIZ(99999,IEN,1,SPECIEN,1,RESIEN)) Q:'RESIEN  D
"RTN","PSULRHL3",105,0)
 . . S RESREC=^DIZ(99999,IEN,1,SPECIEN,1,RESIEN,0)
"RTN","PSULRHL3",106,0)
 . . S RESREC1=^DIZ(99999,IEN,1,SPECIEN,1,RESIEN,2)
"RTN","PSULRHL3",107,0)
 . . ;S CNT=CNT+1
"RTN","PSULRHL3",108,0)
 . . S LOCALLAB=$P(RESREC,U,6),NLTCODE=$P(RESREC,U,2)
"RTN","PSULRHL3",109,0)
 . . S NLTNAME=$P(RESREC,U,3),LNNAME=$P(RESREC,U,5)
"RTN","PSULRHL3",110,0)
 . . S LNCODE=$P(RESREC,U,4),RESULT=$P(RESREC,U,1)
"RTN","PSULRHL3",111,0)
 . . S UNITS=$P(RESREC1,U,1),RANGE=$P(RESREC1,U,2)
"RTN","PSULRHL3",112,0)
 . . ; Most of the time High and Low range are separated by a "-"
"RTN","PSULRHL3",113,0)
 . . I RANGE["-" D
"RTN","PSULRHL3",114,0)
 . . . S LRANGE=$P(RANGE,"-",1),HRANGE=$P(RANGE,"-",2)
"RTN","PSULRHL3",115,0)
 . . I RANGE'["-" D
"RTN","PSULRHL3",116,0)
 . . . S LRANGE=RANGE,HRANGE=""
"RTN","PSULRHL3",117,0)
 . . S LABA="|^"_LOCALLAB_"|"_NLTCODE_"^"_NLTNAME_"|"_LNCODE_"^"_LNNAME_"|"
"RTN","PSULRHL3",118,0)
 . . ;
"RTN","PSULRHL3",119,0)
 . . S LABB=RESULT_"|"_UNITS_"|"
"RTN","PSULRHL3",120,0)
 . . ;
"RTN","PSULRHL3",121,0)
 . . S LABC=LRANGE_"|"_HRANGE_"|"
"RTN","PSULRHL3",122,0)
 . . W STR_LABA_LABB_LABC,!
"RTN","PSULRHL3",123,0)
 Q
"RTN","PSULRHL3",124,0)
 ;
"RTN","PSULRHL3",125,0)
ERROR(CODE,FAC,MESSAGE) ; Error processing
"RTN","PSULRHL3",126,0)
 N ARR,STR
"RTN","PSULRHL3",127,0)
 I CODE=1 S STR=DT_": Cannot open output file "_MESSAGE
"RTN","PSULRHL3",128,0)
 I CODE=2 S STR=DT_": File name already exists in the output directory "_MESSAGE
"RTN","PSULRHL3",129,0)
 I CODE=3 D
"RTN","PSULRHL3",130,0)
 . S MESSAGE=$E(MESSAGE,4,5)_"/"_$E(MESSAGE,6,7)_"/"_$E(MESSAGE,2,3)
"RTN","PSULRHL3",131,0)
 . S STR=DT_": Trying to process records for Facility #"_FAC_" for the date of "_MESSAGE_" that  have already been processed."
"RTN","PSULRHL3",132,0)
 S FDA(99999,"+1,",.01)=FAC
"RTN","PSULRHL3",133,0)
 S FDA(99999,"+1,",2)=STR
"RTN","PSULRHL3",134,0)
 D UPDATE^DIE("","FDA",)
"RTN","PSULRHL3",135,0)
 Q
"RTN","PSULRHL3",136,0)
 ;
"RTN","PSULRHL3",137,0)
 ;
"RTN","PSULRHL3",138,0)
CULL ;  Cull all entries for a facility that have been processed on or before the date in FD x-ref
"RTN","PSULRHL3",139,0)
 N A,B,DFN,DELLIEN,FAC,IDATE,IEN,PDATE
"RTN","PSULRHL3",140,0)
 S FAC="0"
"RTN","PSULRHL3",141,0)
 F  S FAC=$O(^DIZ(99999,"FD",FAC)) Q:'FAC  D
"RTN","PSULRHL3",142,0)
 . S PDATE=0
"RTN","PSULRHL3",143,0)
 . F  S PDATE=$O(^DIZ(99999,"FD",FAC,PDATE)) Q:'PDATE  D
"RTN","PSULRHL3",144,0)
 . . S IDATE=0
"RTN","PSULRHL3",145,0)
 . . ;  Remove entry with FD x-ref
"RTN","PSULRHL3",146,0)
 . . S DELLIEN=0
"RTN","PSULRHL3",147,0)
 . . S DELLIEN=$O(^DIZ(99999,"FD",FAC,PDATE,DELLIEN))
"RTN","PSULRHL3",148,0)
 . . K B
"RTN","PSULRHL3",149,0)
 . . S B(99999,DELLIEN_",",.01)="@" D FILE^DIE(,"B")
"RTN","PSULRHL3",150,0)
 . . ;
"RTN","PSULRHL3",151,0)
 . . F  S IDATE=$O(^DIZ(99999,"FDP",FAC,IDATE)) Q:'IDATE!($P(IDATE,".",1)>PDATE)  D
"RTN","PSULRHL3",152,0)
 . . . S DFN=0
"RTN","PSULRHL3",153,0)
 . . . F  S DFN=$O(^DIZ(99999,"FDP",FAC,IDATE,DFN)) Q:'DFN  D
"RTN","PSULRHL3",154,0)
 . . . . S IEN=0
"RTN","PSULRHL3",155,0)
 . . . . F  S IEN=$O(^DIZ(99999,"FDP",FAC,IDATE,DFN,IEN)) Q:'IEN  D
"RTN","PSULRHL3",156,0)
 . . . . . K A
"RTN","PSULRHL3",157,0)
 . . . . . S A(99999,IEN_",",.01)="@" D FILE^DIE(,"A")
"RTN","PSULRHL3",158,0)
 Q
"RTN","PSULRHL3",159,0)
 ;
"RTN","PSULRHL3",160,0)
 ;
"RTN","PSULRHL3",161,0)
ERORDSP ; Display errors
"RTN","PSULRHL3",162,0)
 ;
"RTN","PSULRHL3",163,0)
 N DATE,DONE,EDATE,FAC,IEN,PG
"RTN","PSULRHL3",164,0)
 S PG=0,DATE=$E(DT,4,5)_"/"_$E(DT,6,7)_"/"_$E(DT,2,3)
"RTN","PSULRHL3",165,0)
 D HEAD
"RTN","PSULRHL3",166,0)
 I '$D(^DIZ(99999,"FDE")) W "No Error's to report." H 4 Q
"RTN","PSULRHL3",167,0)
 ;
"RTN","PSULRHL3",168,0)
 ;
"RTN","PSULRHL3",169,0)
 S FAC="0"
"RTN","PSULRHL3",170,0)
 F  S FAC=$O(^DIZ(99999,"FDE",FAC)) Q:'FAC  D
"RTN","PSULRHL3",171,0)
 . ;
"RTN","PSULRHL3",172,0)
 . S EDATE=0
"RTN","PSULRHL3",173,0)
 . F  S EDATE=$O(^DIZ(99999,"FDE",FAC,EDATE)) Q:'EDATE  D
"RTN","PSULRHL3",174,0)
 . . S IEN=0
"RTN","PSULRHL3",175,0)
 . . F  S IEN=$O(^DIZ(99999,"FDE",FAC,EDATE,IEN)) Q:'IEN  D
"RTN","PSULRHL3",176,0)
 . . . S MSG=^DIZ(99999,IEN,2)
"RTN","PSULRHL3",177,0)
 . . . I ($Y+4>IOSL) D PRTC Q:$D(DONE)  D HEAD
"RTN","PSULRHL3",178,0)
 . . . W !,"  "_MSG,!
"RTN","PSULRHL3",179,0)
 Q
"RTN","PSULRHL3",180,0)
 ;
"RTN","PSULRHL3",181,0)
HEAD ;
"RTN","PSULRHL3",182,0)
 W:$Y>0 @IOF S PG=PG+1
"RTN","PSULRHL3",183,0)
 W "  "_DATE,?71,"Page ",PG,!!
"RTN","PSULRHL3",184,0)
 W "  Error log for PBM III national database processing.",!
"RTN","PSULRHL3",185,0)
 W "  ---------------------------------------------------",!
"RTN","PSULRHL3",186,0)
 Q
"RTN","PSULRHL3",187,0)
 ;
"RTN","PSULRHL3",188,0)
PRTC ;press return to continue prompt
"RTN","PSULRHL3",189,0)
 Q:$E(IOST,1,2)'="C-"!($D(IO("S")))
"RTN","PSULRHL3",190,0)
 K DIR W ! S DIR(0)="E" D ^DIR K DIR I 'Y S DONE=1
"RTN","PSULRHL3",191,0)
 Q
"RTN","PSULRHL3",192,0)
 ;
"RTN","PSULRHL3",193,0)
 ;
"RTN","PSUPR2")
0^2^B62683282^B62008793
"RTN","PSUPR2",1,0)
PSUPR2 ;BIR/PDW - Procurement extract from file 58.811 ; 1/10/11 7:20am
"RTN","PSUPR2",2,0)
 ;;4.0;PHARMACY BENEFITS MANAGEMENT;**13,18**;MARCH, 2005;Build 7
"RTN","PSUPR2",3,0)
 ;DBIAs
"RTN","PSUPR2",4,0)
 ; Reference to file #58.811 supported by DBIA 2521
"RTN","PSUPR2",5,0)
 ; Reference to file #51.5   supported by DBIA 1931
"RTN","PSUPR2",6,0)
 ; Reference to file #50     supported by DBIA 221
"RTN","PSUPR2",7,0)
 ; Reference to file #58.8   supported by DBIA 2519
"RTN","PSUPR2",8,0)
 ; Reference to file #42     supported by DBIA 2440
"RTN","PSUPR2",9,0)
 ; Reference to file #40.8   supported by DBIA 2438
"RTN","PSUPR2",10,0)
 ; Reference to file #59.5   supported by DBIA 2499
"RTN","PSUPR2",11,0)
 ; Reference to file #59     supported by DBIA 2510
"RTN","PSUPR2",12,0)
 ;
"RTN","PSUPR2",13,0)
EN ;
"RTN","PSUPR2",14,0)
 S PSUEND=PSUEDT
"RTN","PSUPR2",15,0)
 S PSUEDT=PSUEDT\1+.24
"RTN","PSUPR2",16,0)
 S:'$D(PSUPRJOB) PSUPRJOB=$J
"RTN","PSUPR2",17,0)
 S:'$D(PSUPRSUB) PSUPRSUB="PSUPR_"_$J
"RTN","PSUPR2",18,0)
 I '$D(^XTMP(PSUPRSUB)) D
"RTN","PSUPR2",19,0)
 . S ^XTMP(PSUPRSUB,"RECORDS",0)=""
"RTN","PSUPR2",20,0)
 . S X1=DT,X2=6 D C^%DTC
"RTN","PSUPR2",21,0)
 . S ^XTMP(PSUPRSUB,0)=X_"^"_DT_"^ PBMS Procurement Extraction"
"RTN","PSUPR2",22,0)
 ;
"RTN","PSUPR2",23,0)
 S PSUARJOB=PSUPRJOB,PSUARSUB="PSUAR_"_PSUARJOB
"RTN","PSUPR2",24,0)
 D MAP
"RTN","PSUPR2",25,0)
 ;
"RTN","PSUPR2",26,0)
 ;   check for Drug Accountability
"RTN","PSUPR2",27,0)
 S X=$$VERSION^XPDUTL("DRUG ACCOUNTABILITY")
"RTN","PSUPR2",28,0)
 I 'X Q  ; not installed
"RTN","PSUPR2",29,0)
 ;
"RTN","PSUPR2",30,0)
 S X1=PSUSDT,X2=-45 ;backup by 45 days per revision
"RTN","PSUPR2",31,0)
 D C^%DTC
"RTN","PSUPR2",32,0)
 S PSUDT=X
"RTN","PSUPR2",33,0)
 ;    loop thru invoice date field xref
"RTN","PSUPR2",34,0)
 F  S PSUDT=$O(^PSD(58.811,"ADATE",PSUDT)) Q:PSUDT>PSUEDT  Q:PSUDT'>0  D
"RTN","PSUPR2",35,0)
 .  S PSUORDA=0 F  S PSUORDA=$O(^PSD(58.811,"ADATE",PSUDT,PSUORDA)) Q:PSUORDA'>0  D
"RTN","PSUPR2",36,0)
 .. S PSUINVDA=0 F  S PSUINVDA=$O(^PSD(58.811,"ADATE",PSUDT,PSUORDA,PSUINVDA)) Q:PSUINVDA'>0  D INVOICE
"RTN","PSUPR2",37,0)
 Q
"RTN","PSUPR2",38,0)
 ;
"RTN","PSUPR2",39,0)
INVOICE ;EP process an invoice within an order
"RTN","PSUPR2",40,0)
 N PSUSTAT
"RTN","PSUPR2",41,0)
 S PSUSTAT=$$VALI^PSUTL(58.8112,"PSUORDA,PSUINVDA",2)
"RTN","PSUPR2",42,0)
 I PSUSTAT'="C" Q  ;     3.2.6.1
"RTN","PSUPR2",43,0)
 N PSUORD
"RTN","PSUPR2",44,0)
 D GETS^PSUTL(58.811,PSUORDA,".01;1","PSUORD")
"RTN","PSUPR2",45,0)
 ;
"RTN","PSUPR2",46,0)
 S PSUINV=""
"RTN","PSUPR2",47,0)
 N PSURDT,PSUIVNUM
"RTN","PSUPR2",48,0)
 D GETS^PSUTL(58.8112,"PSUORDA,PSUINVDA",".01;1;2;3;4;7;8;13","PSUINV","I")
"RTN","PSUPR2",49,0)
 D MOVEI^PSUTL("PSUINV")
"RTN","PSUPR2",50,0)
 S PSURDT=PSUINV(8)
"RTN","PSUPR2",51,0)
 S PSUIVNUM=PSUINV(.01)
"RTN","PSUPR2",52,0)
 ;
"RTN","PSUPR2",53,0)
 ;*18 Clear out Division for each invoice.
"RTN","PSUPR2",54,0)
 S PSUDIV=""
"RTN","PSUPR2",55,0)
 I $G(PSUINV(4)) D DIV
"RTN","PSUPR2",56,0)
 I $L(PSUDIV) S PSUDIVI=""
"RTN","PSUPR2",57,0)
 E  S PSUDIV=PSUSNDR,PSUDIVI="H"
"RTN","PSUPR2",58,0)
 ;
"RTN","PSUPR2",59,0)
 ;
"RTN","PSUPR2",60,0)
 K ^TMP($J,"PSUMIT") ;   array for multiple items
"RTN","PSUPR2",61,0)
 D GETM^PSUTL(58.8112,"PSUORDA,PSUINVDA","5*^1;2;3;4;7;13;14;15","^TMP($J,""PSUMIT"")","I")
"RTN","PSUPR2",62,0)
 I '$D(^TMP($J,"PSUMIT")) Q  ;
"RTN","PSUPR2",63,0)
 D MOVEMI^PSUTL("^TMP($J,""PSUMIT"")")
"RTN","PSUPR2",64,0)
 ;
"RTN","PSUPR2",65,0)
 S PSUITDA=0 F  S PSUITDA=$O(^TMP($J,"PSUMIT",PSUITDA)) Q:PSUITDA'>0  D ITEM
"RTN","PSUPR2",66,0)
 Q
"RTN","PSUPR2",67,0)
ITEM ;EP  process one item within the invoice
"RTN","PSUPR2",68,0)
 N PSUIT ;  array for one item
"RTN","PSUPR2",69,0)
 M PSUIT=^TMP($J,"PSUMIT",PSUITDA)
"RTN","PSUPR2",70,0)
 ;
"RTN","PSUPR2",71,0)
 I (PSUIT(7)<PSUSDT) Q
"RTN","PSUPR2",72,0)
 I (PSUIT(7)>PSUEDT) Q
"RTN","PSUPR2",73,0)
 ;     pull adjustments   3.2.6.2.8
"RTN","PSUPR2",74,0)
 N PSUMADJ
"RTN","PSUPR2",75,0)
 D GETM^PSUTL(58.81125,"PSUORDA,PSUINVDA,PSUITDA","9*^.01;5","PSUMADJ","I")
"RTN","PSUPR2",76,0)
 I $D(PSUMADJ) D MOVEMI^PSUTL("PSUMADJ")
"RTN","PSUPR2",77,0)
 ;
"RTN","PSUPR2",78,0)
 ;
"RTN","PSUPR2",79,0)
 ;      Review/Process Adjustments
"RTN","PSUPR2",80,0)
 I $D(PSUMADJ) S PSUADJDA=0 F  S PSUADJDA=$O(PSUMADJ(PSUADJDA)) Q:PSUADJDA'>0  D
"RTN","PSUPR2",81,0)
 . N PSUADJ
"RTN","PSUPR2",82,0)
 . M PSUADJ=PSUMADJ(PSUADJDA)
"RTN","PSUPR2",83,0)
 . ;
"RTN","PSUPR2",84,0)
 . I PSUADJ(.01)="D" S PSUIT(1)=PSUADJ(5)  ; 3.2.6.2.8    Drug or Supply 
"RTN","PSUPR2",85,0)
 . I PSUADJ(.01)="O" S PSUIT(3)=PSUADJ(5)  ; 3.2.6.2.11   OrderUnits
"RTN","PSUPR2",86,0)
 . I PSUADJ(.01)="P" S PSUIT(4)=PSUADJ(5)  ; 3.2.6.2.12   Price
"RTN","PSUPR2",87,0)
 . I PSUADJ(.01)="Q" S PSUIT(2)=PSUIT(2)+PSUADJ(5) ; 3.2.6.2.10 Quantity
"RTN","PSUPR2",88,0)
 . Q
"RTN","PSUPR2",89,0)
 ;
"RTN","PSUPR2",90,0)
 I 'PSUIT(2) Q  ; per Lina 10/7/98  if qty = 0 don't send record
"RTN","PSUPR2",91,0)
 ;    work on the order unit PSUIT(3)
"RTN","PSUPR2",92,0)
 I '$D(PSUADJ),+PSUIT(3)=0 S PSUIT(3)="" ; per Lina
"RTN","PSUPR2",93,0)
 I PSUIT(3) S PSUIT(3)=$$VAL^PSUTL(51.5,PSUIT(3),.01) ; 3.2.6.2.11
"RTN","PSUPR2",94,0)
 ;
"RTN","PSUPR2",95,0)
 ;    further process item fields  3.2.6.2.9 +
"RTN","PSUPR2",96,0)
 ;
"RTN","PSUPR2",97,0)
 ;    look for/ construct Dispense Units per Order Unit
"RTN","PSUPR2",98,0)
 ;    Store in PSUIT(9999)  3.2.6.2.13
"RTN","PSUPR2",99,0)
 ;  Get Related Drug Fields 3.2.6.2.9
"RTN","PSUPR2",100,0)
 ;
"RTN","PSUPR2",101,0)
 N PSUDRUG
"RTN","PSUPR2",102,0)
 S PSUDRDA=0
"RTN","PSUPR2",103,0)
 ;  if PSUIT(1) is a supply item the following will not be computed
"RTN","PSUPR2",104,0)
 I PSUIT(1)=+PSUIT(1) D
"RTN","PSUPR2",105,0)
 . S PSUDRDA=PSUIT(1)
"RTN","PSUPR2",106,0)
 . ;S PSUARJOB=PSUPRJOB,PSUARSUB="PSUAR_"_PSUARJOB
"RTN","PSUPR2",107,0)
 . D GETS^PSUTL(50,PSUDRDA,".01;2;13;25;14.5;21;31","PSUDRUG","I")
"RTN","PSUPR2",108,0)
 . D MOVEI^PSUTL("PSUDRUG")
"RTN","PSUPR2",109,0)
 . S PSUIT(1)=PSUDRUG(.01)                          ; Generic Name
"RTN","PSUPR2",110,0)
 . S:PSUDRUG(21)="" PSUDRUG(21)="Unknown VA Product Name"
"RTN","PSUPR2",111,0)
 . S:PSUDRUG(31)="" PSUDRUG(31)="No NDC"
"RTN","PSUPR2",112,0)
 ;   further process fields
"RTN","PSUPR2",113,0)
 ;   fill in drug fields for supply items
"RTN","PSUPR2",114,0)
 I 'PSUDRDA D
"RTN","PSUPR2",115,0)
 . S PSUDRUG(.01)="Unknown Generic Name"
"RTN","PSUPR2",116,0)
 . S PSUDRUG(21)="Unknown VA Product Name"
"RTN","PSUPR2",117,0)
 . S PSUDRUG(31)="No NDC"
"RTN","PSUPR2",118,0)
 ;
"RTN","PSUPR2",119,0)
 ; NDC
"RTN","PSUPR2",120,0)
 I PSUIT(13)="" S PSUIT(13)=$G(PSUDRUG(31)) S:PSUIT(13)="" PSUIT(13)="No NDC"
"RTN","PSUPR2",121,0)
 ;
"RTN","PSUPR2",122,0)
 ;      dispense units per order unit 3.2.6.2.13
"RTN","PSUPR2",123,0)
 ;
"RTN","PSUPR2",124,0)
 S PSUIT(9999)=0
"RTN","PSUPR2",125,0)
 I $L(PSUIT(13)),$G(PSUDRDA) D
"RTN","PSUPR2",126,0)
 . S X=$O(^PSDRUG("C",PSUIT(13),PSUDRDA,""))
"RTN","PSUPR2",127,0)
 . I X S PSUIT(9999)=$$VALI^PSUTL(50.1,"PSUDRDA,X","403")
"RTN","PSUPR2",128,0)
 ;
"RTN","PSUPR2",129,0)
 I '$D(PSUADJ),'PSUIT(9999) S PSUIT(9999)="" ; per Lina
"RTN","PSUPR2",130,0)
 ;
"RTN","PSUPR2",131,0)
 ;PSU*4*13 Comment out To prevent XINDEX from complaining about
"RTN","PSUPR2",132,0)
 ; ^PSUPR7 (CoreFLS remnance)
"RTN","PSUPR2",133,0)
 ;Create "RECORDS" global for CoreFLS data
"RTN","PSUPR2",134,0)
 ;I $D(PSUFLSFG) S PSUA="" D
"RTN","PSUPR2",135,0)
 ;.F  S PSUA=$O(^XTMP(PSUPRSUB,"PSUFLS",PSUA)) Q:PSUA=""  D SIMPL^PSUPR7
"RTN","PSUPR2",136,0)
 ;
"RTN","PSUPR2",137,0)
 ;   Construct record and store into ^XTMP(PSUPRSUB,"RECORDS",PSUDIV,LC)
"RTN","PSUPR2",138,0)
 S PSUR=$$RECORD()
"RTN","PSUPR2",139,0)
 ;   Store Records by Division
"RTN","PSUPR2",140,0)
 S PSULC=+$O(^XTMP(PSUPRSUB,"RECORDS",PSUDIV,""),-1)
"RTN","PSUPR2",141,0)
 S PSULC=PSULC+1
"RTN","PSUPR2",142,0)
 S ^XTMP(PSUPRSUB,"RECORDS",PSUDIV,PSULC)=PSUR
"RTN","PSUPR2",143,0)
 Q
"RTN","PSUPR2",144,0)
 ;
"RTN","PSUPR2",145,0)
RECORD() ;EP Assemble record
"RTN","PSUPR2",146,0)
 N PSUR
"RTN","PSUPR2",147,0)
 S PSUR(2)=$G(PSUDIV)
"RTN","PSUPR2",148,0)
 S PSUR(3)=$G(PSUDIVI)
"RTN","PSUPR2",149,0)
 S PSUR(4)=PSUIT(7)\1      ; 3.2.6.2.2
"RTN","PSUPR2",150,0)
 S PSUR(5)=$G(PSUDRUG(21)) ; 3.2.6.2.9
"RTN","PSUPR2",151,0)
 S PSUR(6)=$G(PSUDRUG(2))  ;  ""
"RTN","PSUPR2",152,0)
 S PSUR(7)=PSUIT(1)     ; 3.2.6.2.8
"RTN","PSUPR2",153,0)
 S PSUR(9)=PSUIT(13)    ; 3.2.6.2.9
"RTN","PSUPR2",154,0)
 S PSUR(10)=PSUIT(14)    ;    ""
"RTN","PSUPR2",155,0)
 S PSUR(11)=PSUIT(15)    ;    ""
"RTN","PSUPR2",156,0)
 S PSUR(12)=$G(PSUDRUG(14.5)) ; ""
"RTN","PSUPR2",157,0)
 S PSUR(13)=PSUIT(3)     ; 3.2.6.2.11
"RTN","PSUPR2",158,0)
 S PSUR(16)=PSUIT(9999)  ; 3.2.6.2.13
"RTN","PSUPR2",159,0)
 S PSUR(17)=PSUIT(2)     ; 3.2.6.2.10
"RTN","PSUPR2",160,0)
 S PSUR(18)=PSUIT(4)     ; 3.2.6.2.12
"RTN","PSUPR2",161,0)
 S PSUR(19)=PSUR(17)*PSUR(18) ; 3.2.6.2.14
"RTN","PSUPR2",162,0)
 S PSUR(20)=PSUORD(1)    ; 3.2.6.2.5
"RTN","PSUPR2",163,0)
 S PSUR(21)=PSUINV(.01)  ; 3.2.6.2.6
"RTN","PSUPR2",164,0)
 S PSUR(22)=""
"RTN","PSUPR2",165,0)
 S PSUR=""
"RTN","PSUPR2",166,0)
 S I=0 F  S I=$O(PSUR(I)) Q:I'>0  S PSUR(I)=$TR(PSUR(I),"^","'")
"RTN","PSUPR2",167,0)
 S I=0 F  S I=$O(PSUR(I)) Q:I'>0  S $P(PSUR,U,I)=PSUR(I)
"RTN","PSUPR2",168,0)
 S PSUR=PSUR_U
"RTN","PSUPR2",169,0)
 Q PSUR
"RTN","PSUPR2",170,0)
 ;
"RTN","PSUPR2",171,0)
DIV ;Find division or outpatient site
"RTN","PSUPR2",172,0)
 ;
"RTN","PSUPR2",173,0)
 S PSUDIV=""
"RTN","PSUPR2",174,0)
 N MAPLOCI
"RTN","PSUPR2",175,0)
 D GETM^PSUTL(59.7,1,"90.03*^.01;.02;.03","MAPLOCI","I")
"RTN","PSUPR2",176,0)
 D MOVEMI^PSUTL("MAPLOCI")
"RTN","PSUPR2",177,0)
 ;
"RTN","PSUPR2",178,0)
 I $G(MAPLOCI(PSUINV(4),.01)) D
"RTN","PSUPR2",179,0)
 .S X=$G(MAPLOCI(PSUINV(4),.02)) I X S PSUDIV=$$VALI^PSUTL(40.8,X,1)
"RTN","PSUPR2",180,0)
 .S X=$G(MAPLOCI(PSUINV(4),.03)) I X S PSUDIV=$$VALI^PSUTL(59,X,.06)
"RTN","PSUPR2",181,0)
 I '$G(MAPLOCI(PSUINV(4),.01)) D
"RTN","PSUPR2",182,0)
 .S PSUDIV=PSUSNDR
"RTN","PSUPR2",183,0)
 .S PSUDIVI="H"
"RTN","PSUPR2",184,0)
 Q
"RTN","PSUPR2",185,0)
 ;
"RTN","PSUPR2",186,0)
 ;
"RTN","PSUPR2",187,0)
MAP ;Find out whether a Narcotics Area of Use (NAOU) or a DA Pharmacy
"RTN","PSUPR2",188,0)
 ;Location is mapped to a division or outpatient site.  If it is not
"RTN","PSUPR2",189,0)
 ;mapped, store the NAME and INACTIVATION DAT (if applicable) in a
"RTN","PSUPR2",190,0)
 ;global to be mailed to the user.
"RTN","PSUPR2",191,0)
 ;
"RTN","PSUPR2",192,0)
 K NAOU,DAPH
"RTN","PSUPR2",193,0)
 K MAPLOCI,MAPLOC
"RTN","PSUPR2",194,0)
 S PSUNAM=0            ;This is the name of the NAOU or DA PHARMACY
"RTN","PSUPR2",195,0)
 ;
"RTN","PSUPR2",196,0)
 F  S PSUNAM=$O(^PSD(58.8,"B",PSUNAM)) Q:PSUNAM=""  D
"RTN","PSUPR2",197,0)
 .S IEN=0
"RTN","PSUPR2",198,0)
 .F  S IEN=$O(^PSD(58.8,"B",PSUNAM,IEN)) Q:IEN=""  D
"RTN","PSUPR2",199,0)
 ..D GETS^PSUTL(58.8,IEN,".01;1;4","NAOU(IEN)")
"RTN","PSUPR2",200,0)
 ..I NAOU(IEN,1)="PRIMARY" M DAPH(IEN)=NAOU(IEN) K NAOU(IEN)
"RTN","PSUPR2",201,0)
 ..D MAP1
"RTN","PSUPR2",202,0)
 ;
"RTN","PSUPR2",203,0)
 Q
"RTN","PSUPR2",204,0)
 ;
"RTN","PSUPR2",205,0)
MAP1 ;MAP continued. This subroutine takes the IEN from file 58.8 and looks
"RTN","PSUPR2",206,0)
 ;to see if it is in file 59.7, field 90.02 or 90.03.
"RTN","PSUPR2",207,0)
 ;
"RTN","PSUPR2",208,0)
 ;If it is in 90.02, and field 4 from 58.8 is NOT "P", and there is
"RTN","PSUPR2",209,0)
 ;no value in subfield .02 or .03, then an NAOU has not been mapped.
"RTN","PSUPR2",210,0)
 ;
"RTN","PSUPR2",211,0)
 ;If it is in 90.03, and field 4 from 58.8 IS a "P", and there is
"RTN","PSUPR2",212,0)
 ;no value in subfield .02 or .03, then a DA PHARMACY location has not
"RTN","PSUPR2",213,0)
 ;been mapped.
"RTN","PSUPR2",214,0)
 ;
"RTN","PSUPR2",215,0)
 ;Keep only the entries that are NOT mapped
"RTN","PSUPR2",216,0)
 ;
"RTN","PSUPR2",217,0)
 N PSUDA
"RTN","PSUPR2",218,0)
 ;
"RTN","PSUPR2",219,0)
 ;Look for unmapped NAOU's
"RTN","PSUPR2",220,0)
 ;I $G(NAOU(IEN),1) D
"RTN","PSUPR2",221,0)
 I $G(^PS(59.7,1,90.02,IEN,0)) D
"RTN","PSUPR2",222,0)
 .D GETM^PSUTL(59.7,1,"90.02*^.01;.02;.03","MAPLOCI")
"RTN","PSUPR2",223,0)
 .S PSUDA=0
"RTN","PSUPR2",224,0)
 .F  S PSUDA=$O(MAPLOCI(PSUDA)) Q:PSUDA=""  D
"RTN","PSUPR2",225,0)
 ..I MAPLOCI(PSUDA,.02)'="" K NAOU(PSUDA)
"RTN","PSUPR2",226,0)
 ..I MAPLOCI(PSUDA,.03)'="" K NAOU(PSUDA)
"RTN","PSUPR2",227,0)
 M ^XTMP(PSUARSUB,"NAOU")=NAOU          ;only unmapped NAOU locations.
"RTN","PSUPR2",228,0)
 ;
"RTN","PSUPR2",229,0)
 ;
"RTN","PSUPR2",230,0)
 ;Look for unmapped DA PHARM
"RTN","PSUPR2",231,0)
 I $G(^PS(59.7,1,90.03,IEN,0)) D
"RTN","PSUPR2",232,0)
 .D GETM^PSUTL(59.7,1,"90.03*^.01;.02;.03","MAPLOC")
"RTN","PSUPR2",233,0)
 .S PSUDA=0
"RTN","PSUPR2",234,0)
 .F  S PSUDA=$O(MAPLOC(PSUDA)) Q:PSUDA=""  D
"RTN","PSUPR2",235,0)
 ..;PSU*4*13 Correct Problm DA Pharm Report
"RTN","PSUPR2",236,0)
 ..I $G(MAPLOC(PSUDA,.02))'="" K DAPH(PSUDA)
"RTN","PSUPR2",237,0)
 ..I $G(MAPLOC(PSUDA,.03))'="" K DAPH(PSUDA)
"RTN","PSUPR2",238,0)
 M ^XTMP(PSUARSUB,"DAPH")=DAPH      ;only unmapped DA PHARM locations.
"RTN","PSUPR2",239,0)
 Q
"RTN","PSUPR2",240,0)
 ;
"RTN","PSUPR2",241,0)
WRD() ;EP    Process for ward;
"RTN","PSUPR2",242,0)
 N PSUWD,PSUWDDA,PSUDIV
"RTN","PSUPR2",243,0)
 S PSUDIV=""
"RTN","PSUPR2",244,0)
 D GETM^PSUTL(58.8,PSULOC,"21*^.01","PSUWD","I")
"RTN","PSUPR2",245,0)
 D MOVEMI^PSUTL("PSUWD")
"RTN","PSUPR2",246,0)
 ; loop ward pointers
"RTN","PSUPR2",247,0)
 S PSUWDDA=0
"RTN","PSUPR2",248,0)
 F  S PSUWDDA=$O(PSUWD(PSUWDDA)) Q:PSUWDDA'>0  D  Q:$L(PSUDIV)
"RTN","PSUPR2",249,0)
 . S X=$$VALI^PSUTL(42,PSUWDDA,.015)
"RTN","PSUPR2",250,0)
 . Q:'X
"RTN","PSUPR2",251,0)
 . S X=$$VALI^PSUTL(40.8,X,1)
"RTN","PSUPR2",252,0)
 . I $L(X) S PSUDIV=X
"RTN","PSUPR2",253,0)
 ; return value of PSUDIV "" or = facility number
"RTN","PSUPR2",254,0)
 Q PSUDIV
"RTN","PSUPR2",255,0)
 ;
"RTN","PSUPR2",256,0)
INP() ;EP  Process for Inpatient
"RTN","PSUPR2",257,0)
 ; within package call to AR/WS that pulls/builds Inpatient AOU Site
"RTN","PSUPR2",258,0)
 ; uses IEN Value to AOU STATs file 58.5
"RTN","PSUPR2",259,0)
 N PSUARSUB,PSUARJOB
"RTN","PSUPR2",260,0)
 S PSULOCA=$$VALI^PSUTL(58.8,PSULOC,2)
"RTN","PSUPR2",261,0)
 N PSULOC
"RTN","PSUPR2",262,0)
 S PSUARSUB=PSUPRSUB,PSUARJOB=PSUPRJOB
"RTN","PSUPR2",263,0)
 S X=$$DIV^PSUAR1(PSULOCA,PSUDT) ;returns "NULL" if none found
"RTN","PSUPR2",264,0)
 S:X="NULL" X=""
"RTN","PSUPR2",265,0)
 Q X
"RTN","PSUPR2",266,0)
 ;
"RTN","PSUPR2",267,0)
IV() ;EP  Process,PSUIVDA for IV
"RTN","PSUPR2",268,0)
 ; PSULOC IEN  pharmacy location in file 58.8 (DRUG ACCOUNTABILITY)
"RTN","PSUPR2",269,0)
 N PSUIV,PSUDIV
"RTN","PSUPR2",270,0)
 S PSUDIV=""
"RTN","PSUPR2",271,0)
 D GETM^PSUTL(58.8,PSULOC,"31*^.01","PSUIV","I")
"RTN","PSUPR2",272,0)
 D MOVEMI^PSUTL("PSUIV")
"RTN","PSUPR2",273,0)
 S PSUIVDA=0
"RTN","PSUPR2",274,0)
 F  S PSUIVDA=$O(PSUIV(PSUIVDA)) Q:PSUIVDA'>0  D  Q:$L(PSUDIV)
"RTN","PSUPR2",275,0)
 . S X=$$VALI^PSUTL(59.5,PSUIVDA,.02)
"RTN","PSUPR2",276,0)
 . I X S X=$$VALI^PSUTL(40.8,X,1)
"RTN","PSUPR2",277,0)
 . I $L(X) S PSUDIV=X
"RTN","PSUPR2",278,0)
 ;
"RTN","PSUPR2",279,0)
 Q PSUDIV
"RTN","PSUPR2",280,0)
 ;
"RTN","PSUPR2",281,0)
OUT() ;EP  Process for Outpatient
"RTN","PSUPR2",282,0)
 S X=$$VALI^PSUTL(58.8,PSULOC,20)
"RTN","PSUPR2",283,0)
 I X S X=$$VALI^PSUTL(59,X,.06)
"RTN","PSUPR2",284,0)
 Q X
"RTN","PSUPR2",285,0)
 ;
"VER")
8.0^22.0
"BLD",8597,6)
^16
**END**
**END**
