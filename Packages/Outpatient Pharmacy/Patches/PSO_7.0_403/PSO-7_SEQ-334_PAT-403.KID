Released PSO*7*403 SEQ #334
Extracted from mail message
**KIDS**:PSO*7.0*403^

**INSTALL NAME**
PSO*7.0*403
"BLD",8801,0)
PSO*7.0*403^OUTPATIENT PHARMACY^0^3120309^y
"BLD",8801,1,0)
^^1^1^3120224^
"BLD",8801,1,1,0)
HIPAA 5010 MAINTENANCE
"BLD",8801,4,0)
^9.64PA^^
"BLD",8801,6.3)
9
"BLD",8801,"ABPKG")
n
"BLD",8801,"KRN",0)
^9.67PA^779.2^20
"BLD",8801,"KRN",.4,0)
.4
"BLD",8801,"KRN",.401,0)
.401
"BLD",8801,"KRN",.402,0)
.402
"BLD",8801,"KRN",.403,0)
.403
"BLD",8801,"KRN",.5,0)
.5
"BLD",8801,"KRN",.84,0)
.84
"BLD",8801,"KRN",3.6,0)
3.6
"BLD",8801,"KRN",3.8,0)
3.8
"BLD",8801,"KRN",9.2,0)
9.2
"BLD",8801,"KRN",9.8,0)
9.8
"BLD",8801,"KRN",9.8,"NM",0)
^9.68A^11^11
"BLD",8801,"KRN",9.8,"NM",1,0)
PSOREJU1^^0^B89732614
"BLD",8801,"KRN",9.8,"NM",2,0)
PSOREJU2^^0^B50173477
"BLD",8801,"KRN",9.8,"NM",3,0)
PSOREJP1^^0^B163331229
"BLD",8801,"KRN",9.8,"NM",4,0)
PSOREJUT^^0^B78935434
"BLD",8801,"KRN",9.8,"NM",5,0)
PSOBPSU1^^0^B72006346
"BLD",8801,"KRN",9.8,"NM",6,0)
PSOREJP3^^0^B113483777
"BLD",8801,"KRN",9.8,"NM",7,0)
PSOREJP2^^0^B119855234
"BLD",8801,"KRN",9.8,"NM",8,0)
PSORXED^^0^B74971866
"BLD",8801,"KRN",9.8,"NM",9,0)
PSOSUPOE^^0^B75793355
"BLD",8801,"KRN",9.8,"NM",10,0)
PSOBPSUT^^0^B55980584
"BLD",8801,"KRN",9.8,"NM",11,0)
PSORXL1^^0^B53111526
"BLD",8801,"KRN",9.8,"NM","B","PSOBPSU1",5)

"BLD",8801,"KRN",9.8,"NM","B","PSOBPSUT",10)

"BLD",8801,"KRN",9.8,"NM","B","PSOREJP1",3)

"BLD",8801,"KRN",9.8,"NM","B","PSOREJP2",7)

"BLD",8801,"KRN",9.8,"NM","B","PSOREJP3",6)

"BLD",8801,"KRN",9.8,"NM","B","PSOREJU1",1)

"BLD",8801,"KRN",9.8,"NM","B","PSOREJU2",2)

"BLD",8801,"KRN",9.8,"NM","B","PSOREJUT",4)

"BLD",8801,"KRN",9.8,"NM","B","PSORXED",8)

"BLD",8801,"KRN",9.8,"NM","B","PSORXL1",11)

"BLD",8801,"KRN",9.8,"NM","B","PSOSUPOE",9)

"BLD",8801,"KRN",19,0)
19
"BLD",8801,"KRN",19,"NM",0)
^9.68A^^
"BLD",8801,"KRN",19.1,0)
19.1
"BLD",8801,"KRN",101,0)
101
"BLD",8801,"KRN",409.61,0)
409.61
"BLD",8801,"KRN",771,0)
771
"BLD",8801,"KRN",779.2,0)
779.2
"BLD",8801,"KRN",870,0)
870
"BLD",8801,"KRN",8989.51,0)
8989.51
"BLD",8801,"KRN",8989.52,0)
8989.52
"BLD",8801,"KRN",8994,0)
8994
"BLD",8801,"KRN","B",.4,.4)

"BLD",8801,"KRN","B",.401,.401)

"BLD",8801,"KRN","B",.402,.402)

"BLD",8801,"KRN","B",.403,.403)

"BLD",8801,"KRN","B",.5,.5)

"BLD",8801,"KRN","B",.84,.84)

"BLD",8801,"KRN","B",3.6,3.6)

"BLD",8801,"KRN","B",3.8,3.8)

"BLD",8801,"KRN","B",9.2,9.2)

"BLD",8801,"KRN","B",9.8,9.8)

"BLD",8801,"KRN","B",19,19)

"BLD",8801,"KRN","B",19.1,19.1)

"BLD",8801,"KRN","B",101,101)

"BLD",8801,"KRN","B",409.61,409.61)

"BLD",8801,"KRN","B",771,771)

"BLD",8801,"KRN","B",779.2,779.2)

"BLD",8801,"KRN","B",870,870)

"BLD",8801,"KRN","B",8989.51,8989.51)

"BLD",8801,"KRN","B",8989.52,8989.52)

"BLD",8801,"KRN","B",8994,8994)

"BLD",8801,"QUES",0)
^9.62^^
"BLD",8801,"REQB",0)
^9.611^1^1
"BLD",8801,"REQB",1,0)
PSO*7.0*385^1
"BLD",8801,"REQB","B","PSO*7.0*385",1)

"MBREQ")
0
"PKG",206,-1)
1^1
"PKG",206,0)
OUTPATIENT PHARMACY^PSO^OUTPATIENT LABELS, PROFILE, INVENTORY, PRESCRIPTIONS
"PKG",206,20,0)
^9.402P^^
"PKG",206,22,0)
^9.49I^1^1
"PKG",206,22,1,0)
7.0^3021122^3021202^66481
"PKG",206,22,1,"PAH",1,0)
403^3120309
"PKG",206,22,1,"PAH",1,1,0)
^^1^1^3120309
"PKG",206,22,1,"PAH",1,1,1,0)
HIPAA 5010 MAINTENANCE
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
11
"RTN","PSOBPSU1")
0^5^B72006346^B62482822
"RTN","PSOBPSU1",1,0)
PSOBPSU1 ;BIRM/MFR - BPS (ECME) Utilities 1 ;10/15/04
"RTN","PSOBPSU1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,260,281,287,303,289,290,358,359,385,403**;DEC 1997;Build 9
"RTN","PSOBPSU1",3,0)
 ;Reference to $$EN^BPSNCPDP supported by IA 4415 & 4304
"RTN","PSOBPSU1",4,0)
 ;References to $$NDCFMT^PSSNDCUT,$$GETNDC^PSSNDCUT supported by IA 4707
"RTN","PSOBPSU1",5,0)
 ;References to $$ECMEON^BPSUTIL,$$CMOPON^BPSUTIL supported by IA 4410
"RTN","PSOBPSU1",6,0)
 ;References to $$STORESP^IBNCPDP supported by IA 4299
"RTN","PSOBPSU1",7,0)
 ;Reference to $$CLAIM^BPSBUTL supported by IA 4719
"RTN","PSOBPSU1",8,0)
 ;
"RTN","PSOBPSU1",9,0)
ECMESND(RX,RFL,DATE,FROM,NDC,CMOP,RVTX,OVRC,CNDC,RESP,IGSW,ALTX,CLA,PA,RXCOB) ; - Sends Rx Release 
"RTN","PSOBPSU1",10,0)
 ;information to ECME/IB and updates NDC in the files 50 & 52; DBIA4304
"RTN","PSOBPSU1",11,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSU1",12,0)
 ;       (o) RFL  - Refill #  (Default: most recent)
"RTN","PSOBPSU1",13,0)
 ;       (o) DATE - Date of Service
"RTN","PSOBPSU1",14,0)
 ;       (r) FROM - Function within OP (See BWHERE param. in EN^BPSNCPDP api)
"RTN","PSOBPSU1",15,0)
 ;       (o) NDC  - NDC Number (If not passed, will be retrieved from DRUG file)
"RTN","PSOBPSU1",16,0)
 ;       (o) CMOP - CMOP Rx (1-YES/0-NO) (Default: 0)
"RTN","PSOBPSU1",17,0)
 ;       (o) RVTX - REVERSE text (e.g., RX EDIT, RX RELEASE-NDC CHANGE, etc)
"RTN","PSOBPSU1",18,0)
 ;       (o) OVRC - Three sets of 3 NCPDP override codes separated by "~".  Each piece of the set 
"RTN","PSOBPSU1",19,0)
 ;                  is delimited by an "^"
"RTN","PSOBPSU1",20,0)
 ;                  Piece 1: NCPDP Reason for Service Code for overriding DUR REJECTS
"RTN","PSOBPSU1",21,0)
 ;                  Piece 2: NCPDP Professional Service Code for overriding DUR REJECTS
"RTN","PSOBPSU1",22,0)
 ;                  Piece 3: NCPDP Result of Service Code for overriding DUR REJECTS
"RTN","PSOBPSU1",23,0)
 ;       (o) CNDC - Changed NDC? 1 - Yes / 0 - No (Default: NO)
"RTN","PSOBPSU1",24,0)
 ;       (o) IGSW - Ignore Switches (Master and CMOP)? 1 - Yes / 0 - No (Default: NO)
"RTN","PSOBPSU1",25,0)
 ;       (o) ALTX - Alternative Text to be placed in the Rx ECME Activity Log
"RTN","PSOBPSU1",26,0)
 ;       (o) CLA  - NCPDP Clarification Code(s) for overriding DUR/RTS REJECTS
"RTN","PSOBPSU1",27,0)
 ;       (o) PA   - NCPDP Prior Authorization Type and Number (separated by "^")
"RTN","PSOBPSU1",28,0)
 ;       (o) RXCOB- Payer Sequence
"RTN","PSOBPSU1",29,0)
 ;Output:    RESP - Response from $$EN^BPSNCPDP api
"RTN","PSOBPSU1",30,0)
 ;
"RTN","PSOBPSU1",31,0)
 N ACT,NDCACT,DA,PSOELIG,ACT1,SMA
"RTN","PSOBPSU1",32,0)
 I '$D(RFL) S RFL=$$LSTRFL(RX)
"RTN","PSOBPSU1",33,0)
 ; - ECME is not turned ON for the Rx's Division
"RTN","PSOBPSU1",34,0)
 I '$G(IGSW),'$$ECMEON^BPSUTIL($$RXSITE^PSOBPSUT(RX,RFL)) S RESP="-1^ECME SWITCH OFF" Q
"RTN","PSOBPSU1",35,0)
 ; - ECME CMOP is not turned ON for the Rx's Division
"RTN","PSOBPSU1",36,0)
 I '$G(IGSW),$G(CMOP),'$$CMOPON^BPSUTIL($$RXSITE^PSOBPSUT(RX,RFL)) S RESP="-1^CMOP SWITCH OFF" Q
"RTN","PSOBPSU1",37,0)
 ; - Saving the NDC to be displayed on the ECME Act Log
"RTN","PSOBPSU1",38,0)
 I $G(CNDC) D
"RTN","PSOBPSU1",39,0)
 . I $G(NDC)'="" S NDCACT=NDC Q
"RTN","PSOBPSU1",40,0)
 . S NDCACT=$$GETNDC^PSONDCUT(RX,RFL)
"RTN","PSOBPSU1",41,0)
 I $$NDCFMT^PSSNDCUT($G(NDC))="" D
"RTN","PSOBPSU1",42,0)
 . S NDC=$$GETNDC^PSSNDCUT($$GET1^DIQ(52,RX,6,"I"),$$RXSITE^PSOBPSUT(RX,RFL),+$G(CMOP))
"RTN","PSOBPSU1",43,0)
 . I $G(NDC)'="" D SAVNDC^PSONDCUT(RX,RFL,NDC,+$G(CMOP),1)
"RTN","PSOBPSU1",44,0)
 S PPDU="",PPDU=$$GPPDU^PSONDCUT(RX,RFL,NDC,,1,FROM) K PPDU
"RTN","PSOBPSU1",45,0)
 ;
"RTN","PSOBPSU1",46,0)
 ; Determine if this has multiple overrides from the SMA action of the reject worklist
"RTN","PSOBPSU1",47,0)
 S SMA=0
"RTN","PSOBPSU1",48,0)
 I $G(OVRC)]"",$G(CLA)]"" S SMA=1
"RTN","PSOBPSU1",49,0)
 I $G(OVRC)]"",$G(PA)]"" S SMA=1
"RTN","PSOBPSU1",50,0)
 I $G(CLA)]"",$G(PA)]"" S SMA=1
"RTN","PSOBPSU1",51,0)
 ;
"RTN","PSOBPSU1",52,0)
 ; - Creating ECME Act Log in file 52
"RTN","PSOBPSU1",53,0)
 S ACT="" I $$STATUS^PSOBPSUT(RX,RFL)="E PAYABLE" S ACT="Rev/Resubmit"
"RTN","PSOBPSU1",54,0)
 S ACT=ACT_" ECME:"
"RTN","PSOBPSU1",55,0)
 ;
"RTN","PSOBPSU1",56,0)
 ; - Marked any 'unresolved' REJECTS as 'resolved' (Reason: 1 - Claim re-submitted)
"RTN","PSOBPSU1",57,0)
 N CLSCOM
"RTN","PSOBPSU1",58,0)
 I 'SMA D
"RTN","PSOBPSU1",59,0)
 . I $P($G(OVRC),"~")'="" S CLSCOM="DUR Override Codes "_$TR($P(OVRC,"~"),"^","/")_" submitted."
"RTN","PSOBPSU1",60,0)
 . I $G(CLA)'="" S CLSCOM="Clarification Code(s) "_CLA_" submitted."
"RTN","PSOBPSU1",61,0)
 . I $G(PA)'="" S CLSCOM="Prior Authorization Code ("_$P(PA,"^")_"/"_$P(PA,"^",2)_") submitted."
"RTN","PSOBPSU1",62,0)
 D CLSALL^PSOREJUT(RX,RFL,DUZ,1,$G(CLSCOM),$P($G(OVRC),"~",1),$P($G(OVRC),"~",2),$P($G(OVRC),"~",3),$G(CLA),$G(PA))
"RTN","PSOBPSU1",63,0)
 ; - Call to ECME (NEWing STAT because ECME was overwriting it - Important variable for CMOP release PSXVND)
"RTN","PSOBPSU1",64,0)
 N STAT
"RTN","PSOBPSU1",65,0)
 I $G(RVTX)="",FROM="ED" S RVTX="RX EDITED"
"RTN","PSOBPSU1",66,0)
 S RESP=$$EN^BPSNCPDP(RX,RFL,$$DOS(RX,RFL,.DATE),FROM,NDC,$G(RVTX),$G(OVRC),,$G(CLA),$G(PA),$G(RXCOB))
"RTN","PSOBPSU1",67,0)
 I $$STATUS^PSOBPSUT(RX,RFL)="E PAYABLE" D SAVNDC^PSONDCUT(RX,RFL,NDC,+$G(CMOP),1,FROM)
"RTN","PSOBPSU1",68,0)
 ;
"RTN","PSOBPSU1",69,0)
 ; - Reseting the Re-transmission flag
"RTN","PSOBPSU1",70,0)
 D RETRXF^PSOREJU2(RX,RFL,0)
"RTN","PSOBPSU1",71,0)
 ; Storing eligibility flag
"RTN","PSOBPSU1",72,0)
 S PSOELIG=$P(RESP,"^",3) D:PSOELIG'="" ELIG^PSOBPSU2(RX,RFL,PSOELIG)
"RTN","PSOBPSU1",73,0)
 ;
"RTN","PSOBPSU1",74,0)
 ;7/8/2010; bld ; added for tricare bypass/override audit file
"RTN","PSOBPSU1",75,0)
 I $P(RESP,"^",2)="TRICARE INPATIENT/DISCHARGE"!($P(RESP,"^",2)="CHAMPVA INPATIENT/DISCHARGE") D
"RTN","PSOBPSU1",76,0)
 .D EN^PSOBORP2(RX,RFL,RESP)
"RTN","PSOBPSU1",77,0)
 ;
"RTN","PSOBPSU1",78,0)
 ; If from SMA action, split message across multiple log entries
"RTN","PSOBPSU1",79,0)
 ; The last entry will be filed in the code that follows this section as we append other data
"RTN","PSOBPSU1",80,0)
 ;   to the last message.
"RTN","PSOBPSU1",81,0)
 I SMA,+RESP'=2,+RESP'=6,+RESP'=10 D
"RTN","PSOBPSU1",82,0)
 . N MSG
"RTN","PSOBPSU1",83,0)
 . ; If there are DUR overrides, create the message and file it since this will never be the last message
"RTN","PSOBPSU1",84,0)
 . I $G(OVRC)]"" D
"RTN","PSOBPSU1",85,0)
 .. S MSG=ACT_"REJECT WORKLIST-DUR OVERRIDE CODES("_$TR(OVRC,"^","/")_")"
"RTN","PSOBPSU1",86,0)
 .. D RXACT^PSOBPSU2(RX,RFL,MSG,"M",DUZ)
"RTN","PSOBPSU1",87,0)
 . ; If there are Clarification codes, create the message
"RTN","PSOBPSU1",88,0)
 . ; Only file it if we also have a Prior Auth message.
"RTN","PSOBPSU1",89,0)
 . ; Otherwise more data will be added to it and it will be filed below.
"RTN","PSOBPSU1",90,0)
 . I $G(CLA)]"" D
"RTN","PSOBPSU1",91,0)
 .. S MSG=ACT_"REJECT WORKLIST-(CLARIF. CODE="_CLA_")"
"RTN","PSOBPSU1",92,0)
 .. I $G(PA)]"" D RXACT^PSOBPSU2(RX,RFL,MSG,"M",DUZ)
"RTN","PSOBPSU1",93,0)
 . ; If there are Prior Auth overrides, create the message.
"RTN","PSOBPSU1",94,0)
 . ; More data will be added to it and it will be filed below.
"RTN","PSOBPSU1",95,0)
 . I $G(PA)]"" D
"RTN","PSOBPSU1",96,0)
 .. S ALTX="REJECT WORKLIST-(PRIOR AUTH.="_$TR(PA,"^","/")_")"
"RTN","PSOBPSU1",97,0)
 ;
"RTN","PSOBPSU1",98,0)
 ; - Logging ECME Act Log to file 52
"RTN","PSOBPSU1",99,0)
 I $G(ALTX)="" D
"RTN","PSOBPSU1",100,0)
 . N X,ROUTE S (ROUTE,X)=""
"RTN","PSOBPSU1",101,0)
 . S ROUTE=$S(FROM="RF":$$GET1^DIQ(52.1,RFL_","_RX_",",2),FROM="OF":$$GET1^DIQ(52,RX_",",11),1:"")
"RTN","PSOBPSU1",102,0)
 . S:FROM="OF" X=ROUTE_" FILL(NDC:"_$$GETNDC^PSONDCUT(RX,RFL)_")"
"RTN","PSOBPSU1",103,0)
 . S:FROM="RF" X=ROUTE_" REFILL(NDC:"_$$GETNDC^PSONDCUT(RX,RFL)_")"
"RTN","PSOBPSU1",104,0)
 . S:FROM="RN" X="RX RENEWED(NDC:"_$$GETNDC^PSONDCUT(RX,RFL)_")"
"RTN","PSOBPSU1",105,0)
 . S:FROM="PL" X="PRINTED FROM SUSPENSE(NDC:"_$$GETNDC^PSONDCUT(RX,RFL)_")"
"RTN","PSOBPSU1",106,0)
 . S:FROM="PE"!(FROM="PP") X="PULLED FROM SUSPENSE(NDC:"_$$GETNDC^PSONDCUT(RX,RFL)_")"
"RTN","PSOBPSU1",107,0)
 . S:FROM="PC" X="CMOP TRANSMISSION(NDC:"_$$GETNDC^PSONDCUT(RX,RFL)_")"
"RTN","PSOBPSU1",108,0)
 . S:FROM="RRL"!(FROM="CRRL") X="RELEASED RX PREVIOUSLY REVERSED"
"RTN","PSOBPSU1",109,0)
 . S:FROM="ED" X="RX EDITED"
"RTN","PSOBPSU1",110,0)
 . S:$G(RVTX)'="" X=RVTX
"RTN","PSOBPSU1",111,0)
 . I 'SMA,$G(OVRC)'="" S X="DUR OVERRIDE CODES("_$TR(OVRC,"^","/")_")"
"RTN","PSOBPSU1",112,0)
 . S:$G(CNDC) X=X_"(NDC:"_NDCACT_")" S ACT=ACT_X
"RTN","PSOBPSU1",113,0)
 . S ACT=ACT_$$STS(RX,RFL,RESP)
"RTN","PSOBPSU1",114,0)
 I $G(ALTX)'="" S ACT=ACT_ALTX_$$STS(RX,RFL,RESP)
"RTN","PSOBPSU1",115,0)
 I +RESP=2 S ACT="Not ECME Billable: "_$P(RESP,"^",2)
"RTN","PSOBPSU1",116,0)
 I +RESP=6 S ACT=$P(RESP,"^",2)
"RTN","PSOBPSU1",117,0)
 I +RESP=10 S ACT="ECME reversed/NOT re-submitted: "_$P(RESP,"^",2)
"RTN","PSOBPSU1",118,0)
 S:PSOELIG="T" ACT="TRICARE-"_ACT
"RTN","PSOBPSU1",119,0)
 S:PSOELIG="C" ACT="CHAMPVA-"_ACT
"RTN","PSOBPSU1",120,0)
 S ACT1=""
"RTN","PSOBPSU1",121,0)
 I $P(RESP,"^",6),$P(RESP,"^",7)'=""  S ACT1="-"_$S($P(RESP,"^",6)="2":"s",$P(RESP,"^",6)="3":"t",1:"p")_$P(RESP,"^",7)
"RTN","PSOBPSU1",122,0)
 S ACT=$E(ACT_ACT1,1,75)
"RTN","PSOBPSU1",123,0)
 D RXACT^PSOBPSU2(RX,RFL,ACT,"M",DUZ)
"RTN","PSOBPSU1",124,0)
 D ELOG^PSOBPSU2(RESP)  ;-Logs an ECME Act Log if Rx Qty is different than Billing Qty
"RTN","PSOBPSU1",125,0)
 I PSOELIG="T",$P(RESP,"^",2)'="TRICARE INPATIENT/DISCHARGE" D TRICCHK^PSOREJU3(RX,RFL,RESP,FROM,$G(RVTX))
"RTN","PSOBPSU1",126,0)
 I PSOELIG="C",$P(RESP,"^",2)'="CHAMPVA INPATIENT/DISCHARGE" D TRICCHK^PSOREJU3(RX,RFL,RESP,FROM,$G(RVTX))
"RTN","PSOBPSU1",127,0)
 Q
"RTN","PSOBPSU1",128,0)
 ;
"RTN","PSOBPSU1",129,0)
REVERSE(RX,RFL,FROM,RSN,RTXT,IGRL,NDC) ; - Reverse a claim and close all OPEN/UNRESOLVED Rejects
"RTN","PSOBPSU1",130,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSU1",131,0)
 ;       (o) RFL  - Refill #  (Default: most recent)
"RTN","PSOBPSU1",132,0)
 ;       (r) FROM - Function within OP (See BWHERE param. in EN^BPSNCPDP api)
"RTN","PSOBPSU1",133,0)
 ;       (o) RSN  - Close Reason (2:RX ON HOLD;4: RX RETURNED TO STOCK,5:RX DELETED,etc...)
"RTN","PSOBPSU1",134,0)
 ;       (o) RTXT - Close Reason TEXT (Usually no passed if RSN is passed)
"RTN","PSOBPSU1",135,0)
 ;       (o) IGRL - Ignore RELEASE DATE, reverse anyway  
"RTN","PSOBPSU1",136,0)
 ;       (o) NDC  - NDC number related to the reversal (Note: might be an invalid NDC)
"RTN","PSOBPSU1",137,0)
 I '$D(RFL) S RFL=$$LSTRFL(RX)
"RTN","PSOBPSU1",138,0)
 N PSOET S PSOET=$$PSOET^PSOREJP3(RX,RFL)   ;cnf, PSO*7.0*358
"RTN","PSOBPSU1",139,0)
 I 'PSOET,$$STATUS^PSOBPSUT(RX,RFL)="" Q    ;cnf, PSO*7.0*358, add PSOET check, allow reversal for TRICARE non-billable reject
"RTN","PSOBPSU1",140,0)
 N RESP,STS,ACT,STAT,DA,STATUS,NOACT,REVECME S RSN=+$G(RSN),RTXT=$G(RTXT),REVECME=1
"RTN","PSOBPSU1",141,0)
 I RTXT="",RSN D
"RTN","PSOBPSU1",142,0)
 . S:RSN=2 RTXT="RX PLACED ON HOLD" S:RSN=3 RTXT="RX SUSPENDED" S:RSN=4 RTXT="RX RETURNED TO STOCK"
"RTN","PSOBPSU1",143,0)
 . S:RSN=5 RTXT="RX DELETED" S:RSN=7 RTXT="RX DISCONTINUED" S:RSN=8 RTXT="RX EDITED"
"RTN","PSOBPSU1",144,0)
 D CLSALL^PSOREJUT(RX,RFL,DUZ,RSN,RTXT)
"RTN","PSOBPSU1",145,0)
 I '$G(IGRL),$$RXRLDT^PSOBPSUT(RX,RFL) Q
"RTN","PSOBPSU1",146,0)
 ; - Reseting the Re-transmission flag if Rx is being suspended
"RTN","PSOBPSU1",147,0)
 I RSN=3!($$GET1^DIQ(52,RX,100,"I")=5) D RETRXF^PSOREJU2(RX,RFL,1)
"RTN","PSOBPSU1",148,0)
 S STATUS=$$STATUS^PSOBPSUT(RX,RFL),NOACT=0
"RTN","PSOBPSU1",149,0)
 I STATUS'="E PAYABLE",STATUS'="IN PROGRESS",STATUS'="E REVERSAL REJECTED",STATUS'="E REVERSAL STRANDED",STATUS'="E DUPLICATE" S NOACT=1
"RTN","PSOBPSU1",150,0)
 ; Only perform ECME reversal for a released CMOP if rx/fill is Discontinued.
"RTN","PSOBPSU1",151,0)
 I FROM="DC",$$CMOP^PSOBPSUT(RX,RFL) S REVECME=0
"RTN","PSOBPSU1",152,0)
 I REVECME S RESP=$$EN^BPSNCPDP(RX,RFL,$$DOS(RX,RFL),FROM,$$GETNDC^PSONDCUT(RX,RFL),RTXT)
"RTN","PSOBPSU1",153,0)
 N PSOTRIC S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(RX,RFL,PSOTRIC)
"RTN","PSOBPSU1",154,0)
 ; - Logging ECME Act Log
"RTN","PSOBPSU1",155,0)
 I '$G(NOACT),REVECME D
"RTN","PSOBPSU1",156,0)
 . S ACT=$S(PSOTRIC=1:"TRICARE ",PSOTRIC=2:"CHAMPVA ",1:"")_"Reversal sent to ECME: "_RTXT_$S($G(NDC)'="":" ("_NDC_")",1:"")_$$STS(RX,RFL,+RESP)
"RTN","PSOBPSU1",157,0)
 . D RXACT^PSOBPSU2(RX,RFL,ACT,"M",DUZ)
"RTN","PSOBPSU1",158,0)
 Q
"RTN","PSOBPSU1",159,0)
 ;
"RTN","PSOBPSU1",160,0)
DOS(RX,RFL,DATE) ; Return the Date Of Service for ECME
"RTN","PSOBPSU1",161,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSU1",162,0)
 ;       (o) RFL  - Refill #  (Default: most recent)
"RTN","PSOBPSU1",163,0)
 ;       (o) DATE - Possible Date Of Service
"RTN","PSOBPSU1",164,0)
 ;Output:    DOS  - Actual Date Of Service
"RTN","PSOBPSU1",165,0)
 I '$D(RFL) S RFL=$$LSTRFL(RX)
"RTN","PSOBPSU1",166,0)
 ; - Retrieving RELEASE DATE from file 52 if DATE not passed in
"RTN","PSOBPSU1",167,0)
 I $G(DATE)="" S DATE=$$RXRLDT^PSOBPSUT(RX,RFL)
"RTN","PSOBPSU1",168,0)
 ; - If no date or future date, use today's date
"RTN","PSOBPSU1",169,0)
 I DATE>DT!'DATE S DATE=$$DT^XLFDT
"RTN","PSOBPSU1",170,0)
 Q (DATE\1)
"RTN","PSOBPSU1",171,0)
 ;
"RTN","PSOBPSU1",172,0)
RELEASE(RX,RFL,USR) ; - Notifies IB that the Rx was RELEASED
"RTN","PSOBPSU1",173,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSU1",174,0)
 ;       (o) RFL  - Refill # (Default: most recent)
"RTN","PSOBPSU1",175,0)
 ;       (o) USR  - User responsible for releasing the Rx (Default: .5 - Postmaster)
"RTN","PSOBPSU1",176,0)
 N IBAR,RXAR,RFAR,PSOIBN
"RTN","PSOBPSU1",177,0)
 S:'$D(RFL) RFL=$$LSTRFL(RX)
"RTN","PSOBPSU1",178,0)
 S:'$D(USR) USR=.5
"RTN","PSOBPSU1",179,0)
 D GETS^DIQ(52,RX_",",".01;2;6;7;8;22","I","RXAR")
"RTN","PSOBPSU1",180,0)
 S DFN=+$G(RXAR(52,RX_",",2,"I"))
"RTN","PSOBPSU1",181,0)
 S IBAR("PRESCRIPTION")=RX,IBAR("RX NO")=$G(RXAR(52,RX_",",.01,"I"))
"RTN","PSOBPSU1",182,0)
 S IBAR("CLAIMID")=$P($$CLAIM^BPSBUTL(RX,RFL),U,6)
"RTN","PSOBPSU1",183,0)
 S IBAR("USER")=USR
"RTN","PSOBPSU1",184,0)
 S IBAR("DRUG")=RXAR(52,RX_",",6,"I"),IBAR("NDC")=$$GETNDC^PSONDCUT(RX,RFL)
"RTN","PSOBPSU1",185,0)
 S IBAR("FILL NUMBER")=RFL,IBAR("DOS")=$$DOS(RX,RFL),IBAR("RELEASE DATE")=$$RXRLDT^PSOBPSUT(RX,RFL)
"RTN","PSOBPSU1",186,0)
 S IBAR("QTY")=$G(RXAR(52,RX_",",7,"I")),IBAR("DAYS SUPPLY")=$G(RXAR(52,RX_",",8,"I"))
"RTN","PSOBPSU1",187,0)
 I RFL D
"RTN","PSOBPSU1",188,0)
 . D GETS^DIQ(52.1,RFL_","_RX_",",".01;1;1.1","I","RFAR")
"RTN","PSOBPSU1",189,0)
 . S IBAR("QTY")=$G(RFAR(52.1,RFL_","_RX_",",1,"I"))
"RTN","PSOBPSU1",190,0)
 . S IBAR("DAYS SUPPLY")=$G(RFAR(52.1,RFL_","_RX_",",1.1,"I"))
"RTN","PSOBPSU1",191,0)
 S IBAR("STATUS")="RELEASED"
"RTN","PSOBPSU1",192,0)
 S PSOIBN=$$STORESP^IBNCPDP(DFN,.IBAR)
"RTN","PSOBPSU1",193,0)
 Q
"RTN","PSOBPSU1",194,0)
 ;
"RTN","PSOBPSU1",195,0)
LSTRFL(RX) ;  - Returns the latest fill for the Rx
"RTN","PSOBPSU1",196,0)
 ; Input: (r) RX     - Rx IEN (#52)
"RTN","PSOBPSU1",197,0)
 ;Output:     LSTRFL - Most recent refill #
"RTN","PSOBPSU1",198,0)
 N I,LSTRFL
"RTN","PSOBPSU1",199,0)
 S (I,LSTRFL)=0 F  S I=$O(^PSRX(RX,1,I)) Q:'I  S LSTRFL=I
"RTN","PSOBPSU1",200,0)
 Q LSTRFL
"RTN","PSOBPSU1",201,0)
 ;
"RTN","PSOBPSU1",202,0)
ECMEACT(RX,RFL,COMM,USR) ; - Add an Act to the ECME Act Log (FILE 52)
"RTN","PSOBPSU1",203,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSU1",204,0)
 ;       (o) RFL  - Refill #  (Default: most recent)
"RTN","PSOBPSU1",205,0)
 ;       (r) COMM - Comments (up to 75 characters)
"RTN","PSOBPSU1",206,0)
 ;       (o) USR  - User logging the comments (Default: DUZ)
"RTN","PSOBPSU1",207,0)
 S:'$D(RFL) RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSU1",208,0)
 D RXACT^PSOBPSU2(RX,RFL,COMM,"M",+$G(USR))
"RTN","PSOBPSU1",209,0)
 Q
"RTN","PSOBPSU1",210,0)
 ;
"RTN","PSOBPSU1",211,0)
STS(RX,RFL,RSP) ; Adds the Status to the ECME Act Log according to Rx/fill claim status Response
"RTN","PSOBPSU1",212,0)
 N STS
"RTN","PSOBPSU1",213,0)
 S STS=$S($$STATUS^PSOBPSUT(RX,RFL)'="IN PROGRESS"&($$STATUS^PSOBPSUT(RX,RFL)'=""):"-"_$$STATUS^PSOBPSUT(RX,RFL),1:"")
"RTN","PSOBPSU1",214,0)
 S:+RSP=1 STS="-NO SUBMISSION THROUGH ECME" S:+RSP=3 STS="-NO REVERSAL NEEDED" S:+RSP=4 STS="-NOT PROCESSED"
"RTN","PSOBPSU1",215,0)
 S:+RSP=5 STS="-SOFTWARE ERROR"_$S($P($G(RESP),"^",2)'="":" ("_$P(RESP,"^",2)_")",1:"")
"RTN","PSOBPSU1",216,0)
 I +RSP=2,$$STATUS^PSOBPSUT(RX,RFL)'="" S STS="-NOT BILLABLE:"_$S(PSOELIG="T":"TRICARE",PSOELIG="C":"CHAMPVA",1:"")_":"_$P(RSP,"^",2)
"RTN","PSOBPSU1",217,0)
 Q STS
"RTN","PSOBPSUT")
0^10^B55980584^B56402434
"RTN","PSOBPSUT",1,0)
PSOBPSUT ;BIRM/MFR - BPS (ECME) Utilities ;07 Jun 2005  8:39 PM
"RTN","PSOBPSUT",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,247,260,281,287,289,358,385,403**;DEC 1997;Build 9
"RTN","PSOBPSUT",3,0)
 ;Reference to $$ECMEON^BPSUTIL supported by IA 4410
"RTN","PSOBPSUT",4,0)
 ;Reference to IBSEND^BPSECMP2 supported by IA 4411
"RTN","PSOBPSUT",5,0)
 ;Reference to $$STATUS^BPSOSRX supported by IA 4412
"RTN","PSOBPSUT",6,0)
 ;Reference to $$NDCFMT^PSSNDCUT supported by IA 4707
"RTN","PSOBPSUT",7,0)
 ;Reference to $$CLAIM^BPSBUTL supported by IA 4719
"RTN","PSOBPSUT",8,0)
 ;Reference to ^PS(55 supported by IA 2228
"RTN","PSOBPSUT",9,0)
 ;Reference to ^PSDRUG( supported by IA 221
"RTN","PSOBPSUT",10,0)
 ;Reference to ^PSDRUG("AQ" supported by IA 3165
"RTN","PSOBPSUT",11,0)
 ;
"RTN","PSOBPSUT",12,0)
ECME(RX) ; Returns "e" if Rx/Refill is Electronically Billable (3rd party)
"RTN","PSOBPSUT",13,0)
 Q $S($$STATUS^BPSOSRX(RX,$$LSTRFL^PSOBPSU1(RX))'="":"e",1:"")
"RTN","PSOBPSUT",14,0)
 ;
"RTN","PSOBPSUT",15,0)
STATUS(RX,RFL) ; Returns the Rx's ECME Status (calls STATUS^BPSOSRX)
"RTN","PSOBPSUT",16,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",17,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOBPSUT",18,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",19,0)
 Q $P($$STATUS^BPSOSRX(RX,RFL),"^")
"RTN","PSOBPSUT",20,0)
 ;
"RTN","PSOBPSUT",21,0)
SUBMIT(RX,RFL,IGRL,IGCMP) ; Returns whether the Rx should be submitted to ECME at the moment or not
"RTN","PSOBPSUT",22,0)
 ; Input:  (r) RX   - Rx IEN (#52)
"RTN","PSOBPSUT",23,0)
 ;         (o) RFL  - Refill # (Def.: most recent)
"RTN","PSOBPSUT",24,0)
 ;         (o) IGRL - Ignore Release Date? (1-YES/0-NO) (Def.: 0 - NO)
"RTN","PSOBPSUT",25,0)
 ;         (o) IGCMP- Ignore CMOP/Suspense check? (1-YES/0-NO) (Def.: 0 - NO)
"RTN","PSOBPSUT",26,0)
 ;
"RTN","PSOBPSUT",27,0)
 ; - Get the REFILL # (multiple IEN)
"RTN","PSOBPSUT",28,0)
 N STATUS
"RTN","PSOBPSUT",29,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",30,0)
 ; - Not the latest fill for the prescription
"RTN","PSOBPSUT",31,0)
 I RFL'=$$LSTRFL^PSOBPSU1(RX) Q 0
"RTN","PSOBPSUT",32,0)
 ; - Status not ACTIVE, DISCONTINUED, or EXPIRED
"RTN","PSOBPSUT",33,0)
 S STATUS=$$GET1^DIQ(52,RX,100,"I")
"RTN","PSOBPSUT",34,0)
 I ",0,11,12,14,15,"'[(","_STATUS_",") Q 0
"RTN","PSOBPSUT",35,0)
 ; Will suspend for CMOP
"RTN","PSOBPSUT",36,0)
 I '$G(IGCMP),$$CMOP(RX,RFL) Q 0
"RTN","PSOBPSUT",37,0)
 ; - ECME turned OFF for Rx's site
"RTN","PSOBPSUT",38,0)
 I '$$ECMEON^BPSUTIL($$RXSITE(RX,RFL)) Q 0
"RTN","PSOBPSUT",39,0)
 ; - Rx is RELEASED - Do not submit
"RTN","PSOBPSUT",40,0)
 I '$G(IGRL),$$RXRLDT(RX,RFL) Q 0
"RTN","PSOBPSUT",41,0)
 ; - Future Fill/AUTO SUSPENSE ON - will suspend
"RTN","PSOBPSUT",42,0)
 I '$G(IGCMP),$$RXFLDT(RX,RFL)>DT,$$GET1^DIQ(59,$$RXSITE(RX,RFL),.16,"I") Q 0
"RTN","PSOBPSUT",43,0)
 Q 1
"RTN","PSOBPSUT",44,0)
 ;
"RTN","PSOBPSUT",45,0)
CMOP(RX,RFL) ; Returns if the Rx will be a CMOP Rx or not
"RTN","PSOBPSUT",46,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",47,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOBPSUT",48,0)
 ; Output: 1 - CMOP / 0 - NON-CMOP
"RTN","PSOBPSUT",49,0)
 ;
"RTN","PSOBPSUT",50,0)
 N DFN,CMOP,MAIL,MAILEXP,DRUG,WARNS,STATUS,MW,A
"RTN","PSOBPSUT",51,0)
 ; Get the REFILL # (multiple IEN)
"RTN","PSOBPSUT",52,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",53,0)
 ; MAIL=MAIL Code, MAILEXP=Mail Code Expiration Date
"RTN","PSOBPSUT",54,0)
 S CMOP=0
"RTN","PSOBPSUT",55,0)
 S DFN=$$GET1^DIQ(52,RX,2,"I"),MAIL=$$GET1^DIQ(55,DFN,.03,"I"),MAILEXP=$$GET1^DIQ(55,DFN,.05,"I")
"RTN","PSOBPSUT",56,0)
 I MAIL>1,MAILEXP=""!(MAILEXP>DT) G QCMOP
"RTN","PSOBPSUT",57,0)
 ; Get drug IEN and check DRUG if CMOP  ,$S($G(MAILEXP)=""!($G(MAILEXP)>DT):1,1:0)
"RTN","PSOBPSUT",58,0)
 S DRUG=$$GET1^DIQ(52,RX,6,"I") G QCMOP:'DRUG,QCMOP:'$D(^PSDRUG("AQ",DRUG))
"RTN","PSOBPSUT",59,0)
 ; Not marked for O.P.
"RTN","PSOBPSUT",60,0)
 I $$GET1^DIQ(50,DRUG,63)'["O" G QCMOP
"RTN","PSOBPSUT",61,0)
 ; Drug Warning >11
"RTN","PSOBPSUT",62,0)
 S WARNS=$$GET1^DIQ(50,DRUG,8) I $L(WARNS)>11 G QCMOP
"RTN","PSOBPSUT",63,0)
 ; If tradename
"RTN","PSOBPSUT",64,0)
 I $$GET1^DIQ(52,RX,6.5)'="" G QCMOP
"RTN","PSOBPSUT",65,0)
 ; If Cancelled, Expired, Deleted, Hold
"RTN","PSOBPSUT",66,0)
 S STATUS=$$GET1^DIQ(52,RX,100,"I") I (STATUS>9&(",14,15,"'[(","_STATUS_",")))!(STATUS=4)!(STATUS=3) G QCMOP
"RTN","PSOBPSUT",67,0)
 ; Rx RELEASED
"RTN","PSOBPSUT",68,0)
 I $$RXRLDT^PSOBPSUT(RX,RFL) G QCMOP
"RTN","PSOBPSUT",69,0)
 ; MAIL/WINDOW
"RTN","PSOBPSUT",70,0)
 S MW=$S('RFL:$$GET1^DIQ(52,RX,11,"I"),1:$$GET1^DIQ(52.1,RFL_","_RX,2,"I"))
"RTN","PSOBPSUT",71,0)
 ; IF WINDOW/ORIGINAL/FUTURE FILL SETS MW = MAIL
"RTN","PSOBPSUT",72,0)
 I MW="W",$$RXFLDT^PSOBPSUT(RX,RFL)>DT S MW="M"
"RTN","PSOBPSUT",73,0)
 ; If not MAIL
"RTN","PSOBPSUT",74,0)
 I MW'="M" G QCMOP
"RTN","PSOBPSUT",75,0)
 S CMOP=1
"RTN","PSOBPSUT",76,0)
 ;
"RTN","PSOBPSUT",77,0)
QCMOP Q CMOP
"RTN","PSOBPSUT",78,0)
 ;
"RTN","PSOBPSUT",79,0)
RXRLDT(RX,RFL) ; Returns the Rx Release Date
"RTN","PSOBPSUT",80,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",81,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOBPSUT",82,0)
 ;        
"RTN","PSOBPSUT",83,0)
 ; Output:  RXRLDT - Rx Release Date
"RTN","PSOBPSUT",84,0)
 N RXRLDT
"RTN","PSOBPSUT",85,0)
 I '$G(RX) Q ""
"RTN","PSOBPSUT",86,0)
 S RXRLDT=$$GET1^DIQ(52,RX,31,"I")
"RTN","PSOBPSUT",87,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",88,0)
 I RFL S RXRLDT=$$GET1^DIQ(52.1,RFL_","_RX,17,"I")
"RTN","PSOBPSUT",89,0)
 Q RXRLDT
"RTN","PSOBPSUT",90,0)
 ;
"RTN","PSOBPSUT",91,0)
RXFLDT(RX,RFL) ; Returns the Rx Fill Date
"RTN","PSOBPSUT",92,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",93,0)
 ;         (o) RFL - Refill # (Default: most recent)      
"RTN","PSOBPSUT",94,0)
 ; Output:  RXFLDT - Rx Fill Date
"RTN","PSOBPSUT",95,0)
 N RXFLDT
"RTN","PSOBPSUT",96,0)
 I '$G(RX) Q ""
"RTN","PSOBPSUT",97,0)
 S RXFLDT=$$GET1^DIQ(52,RX,22,"I")
"RTN","PSOBPSUT",98,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",99,0)
 I RFL S RXFLDT=$$GET1^DIQ(52.1,RFL_","_RX,.01,"I")
"RTN","PSOBPSUT",100,0)
 Q RXFLDT
"RTN","PSOBPSUT",101,0)
 ;
"RTN","PSOBPSUT",102,0)
RXSUDT(RX,RFL) ; Returns the prescription/fill Suspense Date for the RX/Reject passed in
"RTN","PSOBPSUT",103,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSUT",104,0)
 ;       (o) RFL  - Refill IEN (#52.1)
"RTN","PSOBPSUT",105,0)
 ;Output: SUSPENSE DATE (External format) or <NULL>, if not suspended
"RTN","PSOBPSUT",106,0)
 ;
"RTN","PSOBPSUT",107,0)
 I $G(^PSRX(RX,"STA"))'=5 Q ""
"RTN","PSOBPSUT",108,0)
 N SURX,SURFL
"RTN","PSOBPSUT",109,0)
 S SURX=$O(^PS(52.5,"B",RX,0)) I 'SURX Q ""
"RTN","PSOBPSUT",110,0)
 I $$GET1^DIQ(52.5,SURX,.05,"I") Q ""
"RTN","PSOBPSUT",111,0)
 S SURFL=+$$GET1^DIQ(52.5,SURX,9) I RFL'=SURFL Q ""
"RTN","PSOBPSUT",112,0)
 Q $$GET1^DIQ(52.5,SURX,.02,"I")
"RTN","PSOBPSUT",113,0)
 ;
"RTN","PSOBPSUT",114,0)
RXSITE(RX,RFL) ; Returns the Rx DIVISION
"RTN","PSOBPSUT",115,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",116,0)
 ;         (o) RFL - Refill #
"RTN","PSOBPSUT",117,0)
 ; Output:  SITE - Rx Fill Date
"RTN","PSOBPSUT",118,0)
 ;        
"RTN","PSOBPSUT",119,0)
 N SITE
"RTN","PSOBPSUT",120,0)
 I '$G(RX) Q ""
"RTN","PSOBPSUT",121,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",122,0)
 I RFL S SITE=$$GET1^DIQ(52.1,RFL_","_RX,8,"I")
"RTN","PSOBPSUT",123,0)
 I 'RFL!'$G(SITE) S SITE=$$GET1^DIQ(52,RX,20,"I")
"RTN","PSOBPSUT",124,0)
 Q SITE
"RTN","PSOBPSUT",125,0)
 ;
"RTN","PSOBPSUT",126,0)
MANREL(RX,RFL,PID) ; ePharmacy Manual Rx Release
"RTN","PSOBPSUT",127,0)
 ;Input: (r) RX  - Rx IEN (#52)
"RTN","PSOBPSUT",128,0)
 ;       (o) RFL - Refill # (Default: most recent)
"RTN","PSOBPSUT",129,0)
 ;       (o) PID - Displays PID/Drug/Rx in the NDC prompts
"RTN","PSOBPSUT",130,0)
 ;Output: "" (null - OK to Release) OR "^" (User entered "^", or no valid NDC on file for ePharmacy Rx)
"RTN","PSOBPSUT",131,0)
 ;       
"RTN","PSOBPSUT",132,0)
 N ACTION
"RTN","PSOBPSUT",133,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",134,0)
 ; Check for unresolved TRICARE/CHAMPVA non-billable reject code, PSO*7*358
"RTN","PSOBPSUT",135,0)
 I $$PSOET^PSOREJP3(RX,RFL) W ! Q "^"
"RTN","PSOBPSUT",136,0)
 ; Checking for REJECTS before proceeding to Rx Release
"RTN","PSOBPSUT",137,0)
 I $$FIND^PSOREJUT(RX,RFL) D  I ACTION="Q"!(ACTION="^") W ! Q "^"
"RTN","PSOBPSUT",138,0)
 . S ACTION=$$HDLG^PSOREJU1(RX,RFL,"79,88","ED","OIQ","Q")
"RTN","PSOBPSUT",139,0)
 ; - ePharmacy switch is OFF
"RTN","PSOBPSUT",140,0)
 I '$$ECMEON^BPSUTIL($$RXSITE^PSOBPSUT(RX,RFL)) Q ""
"RTN","PSOBPSUT",141,0)
 ; - Not an ePharmacy Rx
"RTN","PSOBPSUT",142,0)
 I $$STATUS^PSOBPSUT(RX,RFL)="" Q ""
"RTN","PSOBPSUT",143,0)
 I '$D(PSOTRIC) N PSOTRIC S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(RX,RFL,PSOTRIC)
"RTN","PSOBPSUT",144,0)
 ; - NDC editing before Rx release
"RTN","PSOBPSUT",145,0)
 S ACTION=$$CHGNDC^PSONDCUT(RX,RFL,$G(PID))
"RTN","PSOBPSUT",146,0)
 I ACTION="^"!(ACTION=2) D  Q "^"
"RTN","PSOBPSUT",147,0)
 . W:ACTION="^" !!,$C(7),"A valid NDC must be entered before the Release function can be completed.",! H 1
"RTN","PSOBPSUT",148,0)
 . I $G(PSOTRIC) D:ACTION=2 TRIC
"RTN","PSOBPSUT",149,0)
 ; - Checking for OPEN/UNRESOLVED 3rd. Party Payer Rejects (After possible NDC edit)
"RTN","PSOBPSUT",150,0)
 I $$FIND^PSOREJUT(RX,RFL) D  I ACTION="Q"!(ACTION="^") W ! Q "^"
"RTN","PSOBPSUT",151,0)
 . S ACTION=$$HDLG^PSOREJU1(RX,RFL,"79,88","ED","OIQ","Q")
"RTN","PSOBPSUT",152,0)
 I $G(PSOTRIC),$$STATUS^PSOBPSUT(RX,RFL)["IN PROGRESS" D TRIC Q "^"
"RTN","PSOBPSUT",153,0)
 Q ""
"RTN","PSOBPSUT",154,0)
 ;
"RTN","PSOBPSUT",155,0)
TRIC ;
"RTN","PSOBPSUT",156,0)
 W !!,$C(7),$S(PSOTRIC=1:"TRICARE",1:"CHAMPVA")_" Rx remains in 'IN PROGRESS' status for ECME, and cannot be released.",! H 1
"RTN","PSOBPSUT",157,0)
 Q
"RTN","PSOBPSUT",158,0)
 ;
"RTN","PSOBPSUT",159,0)
AUTOREL(RX,RFL,RLDT,NDC,SRC,STS,HNG) ; Sends Rx Release information to ECME/IB and updates NDC
"RTN","PSOBPSUT",160,0)
 ;                                 in the DRUG/PRESCRIPTION files
"RTN","PSOBPSUT",161,0)
 ;Input: (r) RX  - Rx IEN (#52)
"RTN","PSOBPSUT",162,0)
 ;       (o) RFL - Refill #  (Default: most recent)
"RTN","PSOBPSUT",163,0)
 ;       (r) RLDT- Release Date
"RTN","PSOBPSUT",164,0)
 ;       (r) NDC - NDC Number (Must be 11 digits)
"RTN","PSOBPSUT",165,0)
 ;       (o) SRC - SOURCE: "C" - CMOP / "A" - OPAI
"RTN","PSOBPSUT",166,0)
 ;       (o) STS - Status: (S)uccessful/(U)nsuccessful Release (Default: "S" - Successful)
"RTN","PSOBPSUT",167,0)
 ;       (o) HNG - HANG time after resubmission and before checking the status of the claim (Default: 0)
"RTN","PSOBPSUT",168,0)
 ;       
"RTN","PSOBPSUT",169,0)
 N RXNDC,SITE
"RTN","PSOBPSUT",170,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",171,0)
 S:'$D(STS) STS="S" S:'$D(SRC) SRC="" S HNG=+$G(HNG)
"RTN","PSOBPSUT",172,0)
 S RXNDC=$$GETNDC^PSONDCUT(RX,RFL)
"RTN","PSOBPSUT",173,0)
 ; - Saves the NDC from CMOP/Automated Dispensing Machine in the Prescription file
"RTN","PSOBPSUT",174,0)
 I $$NDCFMT^PSSNDCUT(NDC)'="" D SAVNDC^PSONDCUT(RX,RFL,$$NDCFMT^PSSNDCUT(NDC),$S(SRC="C":1,1:0))
"RTN","PSOBPSUT",175,0)
 ; - Not an ePharmacy Rx
"RTN","PSOBPSUT",176,0)
 I $$STATUS^PSOBPSUT(RX,RFL)="" Q ""
"RTN","PSOBPSUT",177,0)
 ; - Unsuccessful Release 
"RTN","PSOBPSUT",178,0)
 I STS="U" D  Q
"RTN","PSOBPSUT",179,0)
 . D REVERSE^PSOBPSU1(RX,RFL,"CRLX",,"UNSUCCESSFUL "_$S(SRC="C":"CMOP",1:"EXT INTERFACE")_" RELEASE",1)
"RTN","PSOBPSUT",180,0)
 ; - Notifying IB of a Rx RELEASE event 
"RTN","PSOBPSUT",181,0)
 D RELEASE^PSOBPSU1(RX,RFL)
"RTN","PSOBPSUT",182,0)
 ; - Invalid NDC from Automated Dispensing Machine
"RTN","PSOBPSUT",183,0)
 I SRC="A",$$NDCFMT^PSSNDCUT(NDC)="" D  Q
"RTN","PSOBPSUT",184,0)
 . D REVERSE^PSOBPSU1(RX,RFL,"CRLR",,"INVALID EXT INTERFACE NDC",1,NDC)
"RTN","PSOBPSUT",185,0)
 ; - Invalid NDC number for CMOP
"RTN","PSOBPSUT",186,0)
 I SRC="C",$$NDCFMT^PSSNDCUT(NDC)="" D  Q
"RTN","PSOBPSUT",187,0)
 . D REVERSE^PSOBPSU1(RX,RFL,"CRLR",,"INVALID CMOP NDC",1,NDC)
"RTN","PSOBPSUT",188,0)
 ; - If NDC not equal RXNDC, issue reversal and submit new claim
"RTN","PSOBPSUT",189,0)
 I SRC="A",$$NDCFMT^PSSNDCUT(NDC)'=RXNDC D  Q
"RTN","PSOBPSUT",190,0)
 . D ECMESND^PSOBPSU1(RX,RFL,RLDT,"CRLB",$$NDCFMT^PSSNDCUT(NDC),,"AUTO RELEASE",,1,,1),UPDFL^PSOBPSU2(RX,RFL,RLDT)
"RTN","PSOBPSUT",191,0)
 . H HNG
"RTN","PSOBPSUT",192,0)
 . ; - If new claim returned PAYABLE, save new NDC in the DRUG/PRESCRIPTION files
"RTN","PSOBPSUT",193,0)
 . I $$STATUS^PSOBPSUT(RX,RFL)="E PAYABLE" D SAVNDC^PSONDCUT(RX,RFL,$$NDCFMT^PSSNDCUT(NDC),0,1)
"RTN","PSOBPSUT",194,0)
 ; - If NDC not equal RXNDC, issue reversal and submit new claim
"RTN","PSOBPSUT",195,0)
 I SRC="C",$$NDCFMT^PSSNDCUT(NDC)'=RXNDC D  Q
"RTN","PSOBPSUT",196,0)
 . ; - Reverse/Resubmit with correct NDC
"RTN","PSOBPSUT",197,0)
 . D ECMESND^PSOBPSU1(RX,RFL,RLDT,"CRLB",$$NDCFMT^PSSNDCUT(NDC),1,"CMOP RELEASE",,1,,1),UPDFL^PSOBPSU2(RX,RFL,RLDT)
"RTN","PSOBPSUT",198,0)
 . ; - Wait for a response from the Payer for the submission above
"RTN","PSOBPSUT",199,0)
 . H HNG
"RTN","PSOBPSUT",200,0)
 . ; - If new claim returned PAYABLE, save new NDC in the DRUG/PRESCRIPTION files
"RTN","PSOBPSUT",201,0)
 . I $$STATUS^PSOBPSUT(RX,RFL)="E PAYABLE" D SAVNDC^PSONDCUT(RX,RFL,$$NDCFMT^PSSNDCUT(NDC),1,1)
"RTN","PSOBPSUT",202,0)
 ; - Calls ECME api responsible for notifying IB to create a BILL
"RTN","PSOBPSUT",203,0)
 D IBSEND(RX,RFL,1)
"RTN","PSOBPSUT",204,0)
 Q
"RTN","PSOBPSUT",205,0)
 ;
"RTN","PSOBPSUT",206,0)
IBSEND(RX,RFL,AUTO) ; Rx Release
"RTN","PSOBPSUT",207,0)
 ; Create Release Event
"RTN","PSOBPSUT",208,0)
 ; Calls ECME, if needed
"RTN","PSOBPSUT",209,0)
 ; If Payable or Duplicate, calls IB to create a bill
"RTN","PSOBPSUT",210,0)
 ;
"RTN","PSOBPSUT",211,0)
 ;Input: (r) RX  - Rx IEN (#52)
"RTN","PSOBPSUT",212,0)
 ;       (o) RFL - Refill #  (Default: most recent)
"RTN","PSOBPSUT",213,0)
 ;       (o) AUTO - Called by Auto Release Process
"RTN","PSOBPSUT",214,0)
 ;
"RTN","PSOBPSUT",215,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",216,0)
 ; - ECME turned OFF for Rx's site
"RTN","PSOBPSUT",217,0)
 I '$$ECMEON^BPSUTIL($$RXSITE^PSOBPSUT(RX,RFL)) Q
"RTN","PSOBPSUT",218,0)
 N STATUS
"RTN","PSOBPSUT",219,0)
 S STATUS=$$STATUS(RX,RFL)
"RTN","PSOBPSUT",220,0)
 ; - Not an ePharmacy Rx
"RTN","PSOBPSUT",221,0)
 I STATUS="" Q ""
"RTN","PSOBPSUT",222,0)
 ; - Notifying IB of a Rx RELEASE event 
"RTN","PSOBPSUT",223,0)
 ; - Do not call for auto release process as it has already been done
"RTN","PSOBPSUT",224,0)
 S AUTO=+$G(AUTO)
"RTN","PSOBPSUT",225,0)
 I 'AUTO D RELEASE^PSOBPSU1(RX,RFL,DUZ)
"RTN","PSOBPSUT",226,0)
 ; - If the previous ECME claim was reversed or incomplete, re-submit the claim to the payer
"RTN","PSOBPSUT",227,0)
 I (STATUS="E REVERSAL ACCEPTED")!(STATUS="IN PROGRESS") D  Q
"RTN","PSOBPSUT",228,0)
 . D ECMESND^PSOBPSU1(RX,RFL,$$RXRLDT^PSOBPSUT(RX,RFL),$S(AUTO:"C",1:"")_"RRL")
"RTN","PSOBPSUT",229,0)
 ; - Notifying ECME of a BILLING event 
"RTN","PSOBPSUT",230,0)
 I STATUS="E PAYABLE"!(STATUS="E DUPLICATE") D  Q
"RTN","PSOBPSUT",231,0)
 . N PSOCLAIM S PSOCLAIM=$$CLAIM^BPSBUTL(RX,RFL)
"RTN","PSOBPSUT",232,0)
 . D IBSEND^BPSECMP2($P(PSOCLAIM,"^",2),$P(PSOCLAIM,"^",3),"BILL",DUZ)
"RTN","PSOBPSUT",233,0)
 Q
"RTN","PSOBPSUT",234,0)
 ;
"RTN","PSOBPSUT",235,0)
RETRX(RX,RFL) ; - Re-transmit a claim for the prescription/fill?
"RTN","PSOBPSUT",236,0)
 ;Input: (r) RX  - Rx IEN (#52)
"RTN","PSOBPSUT",237,0)
 ;       (o) RFL - Refill # (Default: most recent)
"RTN","PSOBPSUT",238,0)
 ;Output: 1 - Re-transmit  /  0 - Don't re-transmit
"RTN","PSOBPSUT",239,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",240,0)
 I RFL Q +$$GET1^DIQ(52.1,RFL_","_RX,82,"I")
"RTN","PSOBPSUT",241,0)
 Q +$$GET1^DIQ(52,RX,82,"I")
"RTN","PSOREJP1")
0^3^B163331229^B160842921
"RTN","PSOREJP1",1,0)
PSOREJP1 ;BIRM/MFR - Third Party Reject Display Screen ;04/29/05
"RTN","PSOREJP1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,247,260,281,287,289,290,358,359,385,403**;DEC 1997;Build 9
"RTN","PSOREJP1",3,0)
 ;Reference to File 9002313.93 - BPS NCPDP REJECT CODES supported by IA 4720
"RTN","PSOREJP1",4,0)
 ;Reference to ^PS(59.7 supported by IA 694
"RTN","PSOREJP1",5,0)
 ;Reference to ^PSDRUG("AQ" supported by IA 3165
"RTN","PSOREJP1",6,0)
 ;Reference to File 9002313.25 supported by IA 5064
"RTN","PSOREJP1",7,0)
 ;Reference to BPSNCPD3 supported by IA 4560
"RTN","PSOREJP1",8,0)
 ;Reference to ^BPSVRX supported by IA 5723
"RTN","PSOREJP1",9,0)
 ;
"RTN","PSOREJP1",10,0)
EN(RX,REJ,CHANGE) ; Entry point
"RTN","PSOREJP1",11,0)
 ;
"RTN","PSOREJP1",12,0)
 ; - DO NOT change the IF logic below as both of them might get executed (intentional)
"RTN","PSOREJP1",13,0)
 N FILL,LASTLN,PSOTRIC,PSOCODE,PSOTCODE
"RTN","PSOREJP1",14,0)
 S FILL=+$$GET1^DIQ(52.25,REJ_","_RX,5)
"RTN","PSOREJP1",15,0)
 S PSOTRIC="",PSOTRIC=$$TRIC(RX,FILL,PSOTRIC),PSOCODE=$$GET1^DIQ(52.25,REJ_","_RX,.01)
"RTN","PSOREJP1",16,0)
 S PSOTCODE=0 S:PSOCODE'=79&(PSOCODE'=88)&(PSOTRIC) PSOTCODE=1
"RTN","PSOREJP1",17,0)
 I $$CLOSED(RX,REJ) D EN^VALM("PSO REJECT DISPLAY - RESOLVED")
"RTN","PSOREJP1",18,0)
 I '$$CLOSED(RX,REJ)&(PSOTRIC) D EN^VALM("PSO REJECT TRICARE")   ;cnf, PSO*7*358, replace PSOTCODE with PSOTRIC
"RTN","PSOREJP1",19,0)
 I '$$CLOSED(RX,REJ)&('PSOTCODE)&('PSOTRIC) D EN^VALM("PSO REJECT DISPLAY")   ;cnf, PSO*7*358, add PSOTRIC check
"RTN","PSOREJP1",20,0)
 D FULL^VALM1
"RTN","PSOREJP1",21,0)
 Q
"RTN","PSOREJP1",22,0)
 ;
"RTN","PSOREJP1",23,0)
HDR ; - Builds the Header section
"RTN","PSOREJP1",24,0)
 N LINE1,LINE2,X
"RTN","PSOREJP1",25,0)
 S VALMHDR(1)=$$DVINFO^PSOREJU2(RX,FILL,1),VALMHDR(2)=$$PTINFO^PSOREJU2(RX,1)
"RTN","PSOREJP1",26,0)
 ;cnf, PSO*7*358, add REJ to parameter list for RXINFO^PSOREJP3
"RTN","PSOREJP1",27,0)
 S VALMHDR(3)=$$RXINFO^PSOREJP3(RX,FILL,1),VALMHDR(4)=$$RXINFO^PSOREJP3(RX,FILL,2,REJ)
"RTN","PSOREJP1",28,0)
 Q
"RTN","PSOREJP1",29,0)
 ;
"RTN","PSOREJP1",30,0)
TRIC(RX,RFL,PSOTRIC) ; - Return 1 for TRICARE, 2 for CHAMPVA or 0 (zero) for not TRICARE or CHAMPVA
"RTN","PSOREJP1",31,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJP1",32,0)
 S PSOTRIC="",PSOTRIC=$S(RFL=0&($$GET1^DIQ(52,RX_",",85,"I")="T"):1,$$GET1^DIQ(52.1,RFL_","_RX_",",85,"I")="T":1,RFL=0&($$GET1^DIQ(52,RX_",",85,"I")="C"):2,$$GET1^DIQ(52.1,RFL_","_RX_",",85,"I")="C":2,1:0)
"RTN","PSOREJP1",33,0)
 Q PSOTRIC
"RTN","PSOREJP1",34,0)
 ;
"RTN","PSOREJP1",35,0)
ELIGDISP(RX,RFL) ; Return either CHAMPVA or TRICARE for display
"RTN","PSOREJP1",36,0)
 ; purposes, or null if neither
"RTN","PSOREJP1",37,0)
 N PSOELIG
"RTN","PSOREJP1",38,0)
 S PSOELIG=$$TRIC(RX,RFL)
"RTN","PSOREJP1",39,0)
 Q $S(PSOELIG=1:"TRICARE",PSOELIG=2:"CHAMPVA",1:"")
"RTN","PSOREJP1",40,0)
 ;
"RTN","PSOREJP1",41,0)
INIT ; Builds the Body section
"RTN","PSOREJP1",42,0)
 N DATA,LINE
"RTN","PSOREJP1",43,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJP1",44,0)
 S PSOTRIC="",PSOTRIC=$$TRIC(RX,RFL,PSOTRIC)
"RTN","PSOREJP1",45,0)
 I '$$CLOSED(RX,REJ)&(PSOTRIC) S VALM("TITLE")="Reject Information ("_$$ELIGDISP(RX,RFL)_")"
"RTN","PSOREJP1",46,0)
 F I=1:1:$G(LASTLN) D RESTORE^VALM10(I)
"RTN","PSOREJP1",47,0)
 K ^TMP("PSOREJP1",$J) S VALMCNT=0,LINE=0
"RTN","PSOREJP1",48,0)
 D GET^PSOREJU2(RX,FILL,.DATA,REJ,1)
"RTN","PSOREJP1",49,0)
 D REJ                   ; Display the REJECT Information
"RTN","PSOREJP1",50,0)
 D OTH                   ; Display the Other Rejects Information
"RTN","PSOREJP1",51,0)
 D COM^PSOREJP3          ; Display the Comment
"RTN","PSOREJP1",52,0)
 D INS                   ; Display the Insurance Information
"RTN","PSOREJP1",53,0)
 D CLS                   ; Display the Resolution Information
"RTN","PSOREJP1",54,0)
 S VALMCNT=LINE
"RTN","PSOREJP1",55,0)
 Q
"RTN","PSOREJP1",56,0)
 ;
"RTN","PSOREJP1",57,0)
REJ ; - DUR Information
"RTN","PSOREJP1",58,0)
 N TYPE,PFLDT,TREJ,TDATA,PSOTRIC,PSOET S TDATA=""
"RTN","PSOREJP1",59,0)
 S PSOTRIC="",PSOTRIC=$$TRIC(RX,FILL,PSOTRIC)
"RTN","PSOREJP1",60,0)
 D SETLN("REJECT Information"_$S($G(PSOTRIC)=1:" (TRICARE)",$G(PSOTRIC)=2:" (CHAMPVA)",1:""),1,1)
"RTN","PSOREJP1",61,0)
 S TYPE=$S($G(DATA(REJ,"CODE"))=79:"79 - REFILL TOO SOON",1:"")
"RTN","PSOREJP1",62,0)
 I TYPE="" S TYPE=DATA(REJ,"CODE")_" - "_$E($$EXP(DATA(REJ,"CODE")),1,23)_"-"
"RTN","PSOREJP1",63,0)
 D SETLN("Reject Type    : "_TYPE_" received on "_$$FMTE^XLFDT($G(DATA(REJ,"DATE/TIME"))),,,18)
"RTN","PSOREJP1",64,0)
 ;cnf, PSO*7*358, if TRICARE/CHAMPVA non-billable then reset Status line
"RTN","PSOREJP1",65,0)
 S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP1",66,0)
 I PSOET D SETLN("Status         : NO CLAIM SUBMITTED")
"RTN","PSOREJP1",67,0)
 I 'PSOET D SETLN("Reject Status  : "_$G(DATA(REJ,"STATUS"))_" - "_$$STATUS^PSOBPSUT(RX,FILL),,,18)
"RTN","PSOREJP1",68,0)
 D SET("PAYER MESSAGE",63)
"RTN","PSOREJP1",69,0)
 D SET("REASON",63)
"RTN","PSOREJP1",70,0)
 S PFLDT=$$FMTE^XLFDT($G(DATA(REJ,"PLAN PREVIOUS FILL DATE")))
"RTN","PSOREJP1",71,0)
 D SET("DUR TEXT",63,$S(PFLDT="":1,1:0))
"RTN","PSOREJP1",72,0)
 I PFLDT'="" D SETLN("Last Fill Date : "_PFLDT_" (from payer)",,1,18)
"RTN","PSOREJP1",73,0)
 Q
"RTN","PSOREJP1",74,0)
 ;
"RTN","PSOREJP1",75,0)
OTH ; - Other Rejects Information
"RTN","PSOREJP1",76,0)
 N LST,I,RJC,J,LAST
"RTN","PSOREJP1",77,0)
 S LST=$G(DATA(REJ,"OTHER REJECTS")) I LST="" Q
"RTN","PSOREJP1",78,0)
 D SETLN()
"RTN","PSOREJP1",79,0)
 D SETLN("OTHER REJECTS",1,1)
"RTN","PSOREJP1",80,0)
 F I=1:1:$L(LST,",") S RJC=$P(LST,",",I) D
"RTN","PSOREJP1",81,0)
 . S LAST=1 F J=(I+1):1:$L(LST,",") I $P(LST,",",J)'="" S LAST=0 Q
"RTN","PSOREJP1",82,0)
 . I RJC'="" D SETLN(RJC_" - "_$$EXP(RJC),,$S(LAST:1,1:0),6)
"RTN","PSOREJP1",83,0)
 Q
"RTN","PSOREJP1",84,0)
 ;
"RTN","PSOREJP1",85,0)
INS ; - Insurance Information
"RTN","PSOREJP1",86,0)
 D SETLN()
"RTN","PSOREJP1",87,0)
 D SETLN("INSURANCE Information",1,1)
"RTN","PSOREJP1",88,0)
 N PSOINS,PSOINS1,I
"RTN","PSOREJP1",89,0)
 S PSOINS=$G(DATA(REJ,"INSURANCE NAME"))
"RTN","PSOREJP1",90,0)
 F I=1:1:(50-($L(PSOINS)+18)) S PSOINS=PSOINS_" "
"RTN","PSOREJP1",91,0)
 S PSOINS1=$G(DATA(REJ,"COB"))
"RTN","PSOREJP1",92,0)
 I PSOINS1="SECONDARY" S PSOINS=PSOINS_"Coord. Of Benefits: "_PSOINS1
"RTN","PSOREJP1",93,0)
 D SETLN("Insurance      : "_PSOINS,,,18)
"RTN","PSOREJP1",94,0)
 D SETLN("Contact        : "_$G(DATA(REJ,"PLAN CONTACT")),,,18)
"RTN","PSOREJP1",95,0)
 D SETLN("BIN            : "_$G(DATA(REJ,"BIN")),,,18)
"RTN","PSOREJP1",96,0)
 D SETLN("Group Number   : "_$G(DATA(REJ,"GROUP NUMBER")),,,18)
"RTN","PSOREJP1",97,0)
 D SETLN("Cardholder ID  : "_$G(DATA(REJ,"CARDHOLDER ID")),,1,18)
"RTN","PSOREJP1",98,0)
 Q
"RTN","PSOREJP1",99,0)
 ;
"RTN","PSOREJP1",100,0)
CLS ; - Resolution Information
"RTN","PSOREJP1",101,0)
 N X
"RTN","PSOREJP1",102,0)
 I '$$CLOSED(RX,REJ) Q
"RTN","PSOREJP1",103,0)
 D SETLN()
"RTN","PSOREJP1",104,0)
 D SETLN("RESOLUTION Information",1,1)
"RTN","PSOREJP1",105,0)
 D SETLN("Resolved By    : "_$G(DATA(REJ,"CLOSED BY")),,,18)
"RTN","PSOREJP1",106,0)
 D SETLN("Date/Time      : "_$G(DATA(REJ,"CLOSED DATE/TIME")),,,18)
"RTN","PSOREJP1",107,0)
 I $G(DATA(REJ,"CLOSE COMMENTS"))'="" D SET("CLOSE COMMENTS",63)
"RTN","PSOREJP1",108,0)
 I $G(DATA(REJ,"COD1"))'="" D SETLN("Reason for Svc : "_$$OVRX^PSOREJU1(1,$G(DATA(REJ,"COD1"))),,,18)
"RTN","PSOREJP1",109,0)
 I $G(DATA(REJ,"COD2"))'="" D SETLN("Profes. Svc    : "_$$OVRX^PSOREJU1(2,$G(DATA(REJ,"COD2"))),,,18)
"RTN","PSOREJP1",110,0)
 I $G(DATA(REJ,"COD3"))'="" D SETLN("Result of Svc  : "_$$OVRX^PSOREJU1(3,$G(DATA(REJ,"COD3"))),,,18)
"RTN","PSOREJP1",111,0)
 I $G(DATA(REJ,"CLA CODE"))'="" D
"RTN","PSOREJP1",112,0)
 . N CLAPNTR S CLAPNTR=$$GET1^DIQ(52.25,REJ_","_RX_",",24,"I")
"RTN","PSOREJP1",113,0)
 . S X=DATA(REJ,"CLA CODE")_" - "_$$GET1^DIQ(9002313.25,CLAPNTR,".02")
"RTN","PSOREJP1",114,0)
 . D SETLN("Clarific. Code : "_X,,,18)
"RTN","PSOREJP1",115,0)
 I $G(DATA(REJ,"PRIOR AUTH TYPE"))'="" D
"RTN","PSOREJP1",116,0)
 . S X=$$GET1^DIQ(52.25,REJ_","_RX,25,"I")_" - "_(DATA(REJ,"PRIOR AUTH TYPE"))
"RTN","PSOREJP1",117,0)
 . D SETLN("Prior Auth.Type: "_X,,,18),SETLN("Prior Auth. #  : "_DATA(REJ,"PRIOR AUTH NUMBER"),,,18)
"RTN","PSOREJP1",118,0)
 D SETLN("Reason         : "_$G(DATA(REJ,"CLOSE REASON")),,1,18)
"RTN","PSOREJP1",119,0)
 Q
"RTN","PSOREJP1",120,0)
 ;
"RTN","PSOREJP1",121,0)
 ;
"RTN","PSOREJP1",122,0)
SET(FIELD,L,UND) ; Sets the lines for fields that require text wrapping
"RTN","PSOREJP1",123,0)
 N TXT,T
"RTN","PSOREJP1",124,0)
 S TXT=DATA(REJ,FIELD) I $L(TXT)'>L D SETLN($$LABEL(FIELD)_TXT,,$S($G(UND):1,1:0),80-L) Q
"RTN","PSOREJP1",125,0)
 F I=1:1 Q:TXT=""  D
"RTN","PSOREJP1",126,0)
 . I I=1 D SETLN($$LABEL(FIELD)_$E(TXT,1,L),,,80-L) S TXT=$E(TXT,L+1,999) Q
"RTN","PSOREJP1",127,0)
 . S T="",$E(T,81-L)=$E(TXT,1,L) D SETLN(T,,$S($E(TXT,L+1,999)=""&$G(UND):1,1:0),80-L) S TXT=$E(TXT,L+1,999)
"RTN","PSOREJP1",128,0)
 Q
"RTN","PSOREJP1",129,0)
 ;
"RTN","PSOREJP1",130,0)
LABEL(FIELD) ; Sets the label for the field
"RTN","PSOREJP1",131,0)
 I FIELD="REASON" Q "Reason Code    : "
"RTN","PSOREJP1",132,0)
 I FIELD="PAYER MESSAGE" Q "Payer Addl Msg : "
"RTN","PSOREJP1",133,0)
 I FIELD="DUR TEXT" Q $S(+$$ISDUR^PSOREJP5(RX,REJ):"+DUR Text      : ",1:"DUR Text       : ")
"RTN","PSOREJP1",134,0)
 I FIELD="CLOSE COMMENTS" Q "Comments       : "
"RTN","PSOREJP1",135,0)
 Q ""
"RTN","PSOREJP1",136,0)
 ;
"RTN","PSOREJP1",137,0)
VIEW ; - Rx View hidden action
"RTN","PSOREJP1",138,0)
 N VALMCNT,TITLE
"RTN","PSOREJP1",139,0)
 I $G(PSOBACK) D  Q
"RTN","PSOREJP1",140,0)
 . S VALMSG="Not available through Backdoor!",VALMBCK="R"
"RTN","PSOREJP1",141,0)
 S TITLE=VALM("TITLE")
"RTN","PSOREJP1",142,0)
 ;
"RTN","PSOREJP1",143,0)
 ; - DO structure used to avoid losing variables RX,FILL,REJ,LINE,TITLE
"RTN","PSOREJP1",144,0)
 DO
"RTN","PSOREJP1",145,0)
 . N PSOVDA,DA,PS
"RTN","PSOREJP1",146,0)
 . S (PSOVDA,DA)=RX,PS="REJECT"
"RTN","PSOREJP1",147,0)
 . N RX,REJ,FILL,LINE,TITLE D DP^PSORXVW
"RTN","PSOREJP1",148,0)
 ;
"RTN","PSOREJP1",149,0)
 S VALMBCK="R",VALM("TITLE")=TITLE
"RTN","PSOREJP1",150,0)
 Q
"RTN","PSOREJP1",151,0)
 ;
"RTN","PSOREJP1",152,0)
EDT ; - Rx Edit hidden action
"RTN","PSOREJP1",153,0)
 N VALMCNT,TITLE
"RTN","PSOREJP1",154,0)
 I $G(PSOBACK) D  Q
"RTN","PSOREJP1",155,0)
 . S VALMSG="Not available through Backdoor!",VALMBCK="R"
"RTN","PSOREJP1",156,0)
 S TITLE=VALM("TITLE")
"RTN","PSOREJP1",157,0)
 ;
"RTN","PSOREJP1",158,0)
 ; - DO structure used to avoid losing variables RX,FILL,REJ,LINE,TITLE
"RTN","PSOREJP1",159,0)
 DO
"RTN","PSOREJP1",160,0)
 . N PSOSITE,ORN,PSOPAR,PSOLIST
"RTN","PSOREJP1",161,0)
 . S PSOSITE=$$RXSITE^PSOBPSUT(RX,FILL),ORN=RX
"RTN","PSOREJP1",162,0)
 . S PSOPAR=$G(^PS(59,PSOSITE,1)),PSOLIST(1)=ORN_","
"RTN","PSOREJP1",163,0)
 . N RX,REJ,FILL,LINE,TITLE D EPH^PSORXEDT
"RTN","PSOREJP1",164,0)
 ;
"RTN","PSOREJP1",165,0)
 K VALMBCK I $$CLOSED(RX,REJ),$D(PSOSTFLT),PSOSTFLT="U" S CHANGE=1 Q
"RTN","PSOREJP1",166,0)
 S VALMBCK="R",VALM("TITLE")=TITLE
"RTN","PSOREJP1",167,0)
 Q
"RTN","PSOREJP1",168,0)
 ;
"RTN","PSOREJP1",169,0)
OVR ; - Override a REJECT action
"RTN","PSOREJP1",170,0)
 N PSOET
"RTN","PSOREJP1",171,0)
 I $$CLOSED(RX,REJ,1) Q
"RTN","PSOREJP1",172,0)
 ;cnf, PSO*7*358
"RTN","PSOREJP1",173,0)
 S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP1",174,0)
 I PSOET S VALMSG="OVR not allowed for "_$$ELIGDISP^PSOREJP1(RX,FILL)_" Non-Billable claim.",VALMBCK="R" Q
"RTN","PSOREJP1",175,0)
 N COD1,COD2,COD3
"RTN","PSOREJP1",176,0)
 D FULL^VALM1 W !
"RTN","PSOREJP1",177,0)
 S COD1=$$OVRCOD^PSOREJU1(1,$$GET1^DIQ(52.25,REJ_","_RX,14)) I COD1="^"!(COD1="") S VALMBCK="R" Q
"RTN","PSOREJP1",178,0)
 S COD2=$$OVRCOD^PSOREJU1(2) I COD2="^" S VALMBCK="R" Q
"RTN","PSOREJP1",179,0)
 S COD3=$$OVRCOD^PSOREJU1(3) I COD3="^" S VALMBCK="R" Q
"RTN","PSOREJP1",180,0)
 D OVRDSP^PSOREJU1(COD1_"^"_COD2_"^"_COD3)
"RTN","PSOREJP1",181,0)
 D SEND^PSOREJP3(COD1_"^"_COD2_"^"_COD3)
"RTN","PSOREJP1",182,0)
 Q
"RTN","PSOREJP1",183,0)
 ;
"RTN","PSOREJP1",184,0)
RES ; - Re-submit a claim action
"RTN","PSOREJP1",185,0)
 N PSOET
"RTN","PSOREJP1",186,0)
 I $$CLOSED(RX,REJ,1) Q
"RTN","PSOREJP1",187,0)
 ;cnf, PSO*7*358
"RTN","PSOREJP1",188,0)
 S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP1",189,0)
 I PSOET S VALMSG="RES not allowed for "_$$ELIGDISP^PSOREJP1(RX,FILL)_" Non-Billable claim.",VALMBCK="R" Q
"RTN","PSOREJP1",190,0)
 D FULL^VALM1 W !
"RTN","PSOREJP1",191,0)
 D SEND^PSOREJP3()
"RTN","PSOREJP1",192,0)
 Q
"RTN","PSOREJP1",193,0)
 ;
"RTN","PSOREJP1",194,0)
CLA ; - Submit Clarification Code
"RTN","PSOREJP1",195,0)
 N CLA,PSOET
"RTN","PSOREJP1",196,0)
 I $$CLOSED(RX,REJ,1) Q
"RTN","PSOREJP1",197,0)
 ;cnf, PSO*7*358
"RTN","PSOREJP1",198,0)
 S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP1",199,0)
 I PSOET S VALMSG="CLA not allowed for "_$$ELIGDISP^PSOREJP1(RX,FILL)_" Non-Billable claim.",VALMBCK="R" Q
"RTN","PSOREJP1",200,0)
 D FULL^VALM1 W !
"RTN","PSOREJP1",201,0)
 ; Prompt for the Submission Clarification Codes (up to three)
"RTN","PSOREJP1",202,0)
 S CLA=$$CLA^PSOREJU1() I CLA="^"!(CLA="") S VALMBCK="R" Q
"RTN","PSOREJP1",203,0)
 W ! D SEND^PSOREJP3(,CLA)
"RTN","PSOREJP1",204,0)
 Q
"RTN","PSOREJP1",205,0)
 ;
"RTN","PSOREJP1",206,0)
PA ; - Submit Prior Authorization
"RTN","PSOREJP1",207,0)
 N PA,PSOET
"RTN","PSOREJP1",208,0)
 I $$CLOSED(RX,REJ,1) Q
"RTN","PSOREJP1",209,0)
 ;cnf, PSO*7*358
"RTN","PSOREJP1",210,0)
 S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP1",211,0)
 I PSOET S VALMSG="PA not allowed for "_$$ELIGDISP^PSOREJP1(RX,FILL)_" Non-Billable claim.",VALMBCK="R" Q
"RTN","PSOREJP1",212,0)
 D FULL^VALM1 W !
"RTN","PSOREJP1",213,0)
 ; Prompt for Prior Auth fields
"RTN","PSOREJP1",214,0)
 S PA=$$PA^PSOREJU2() I PA="^" S VALMBCK="R" Q
"RTN","PSOREJP1",215,0)
 W ! D SEND^PSOREJP3(,,PA)
"RTN","PSOREJP1",216,0)
 Q
"RTN","PSOREJP1",217,0)
 ;
"RTN","PSOREJP1",218,0)
MP ; - Patient Medication Profile
"RTN","PSOREJP1",219,0)
 I $G(PSOBACK) D  Q
"RTN","PSOREJP1",220,0)
 . S VALMSG="Not available through Backdoor!",VALMBCK="R"
"RTN","PSOREJP1",221,0)
 N SITE,PATIENT
"RTN","PSOREJP1",222,0)
 D FULL^VALM1 W !
"RTN","PSOREJP1",223,0)
 S SITE=+$$RXSITE^PSOBPSUT(RX,FILL) S:$G(PSOSITE) SITE=PSOSITE
"RTN","PSOREJP1",224,0)
 S PATIENT=+$$GET1^DIQ(52,RX,2,"I")
"RTN","PSOREJP1",225,0)
 D LST^PSOPMP0(SITE,PATIENT) S VALMBCK="R"
"RTN","PSOREJP1",226,0)
 Q
"RTN","PSOREJP1",227,0)
 ;
"RTN","PSOREJP1",228,0)
EXIT ;
"RTN","PSOREJP1",229,0)
 K ^TMP("PSOREJP1",$J)
"RTN","PSOREJP1",230,0)
 Q
"RTN","PSOREJP1",231,0)
 ;
"RTN","PSOREJP1",232,0)
SETLN(TEXT,REV,UND,HIG) ; Sets a line to be displayed in the Body section
"RTN","PSOREJP1",233,0)
 N X
"RTN","PSOREJP1",234,0)
 S:$G(TEXT)="" $E(TEXT,80)=""
"RTN","PSOREJP1",235,0)
 S:$L(TEXT)>80 TEXT=$E(TEXT,1,80)
"RTN","PSOREJP1",236,0)
 S LINE=LINE+1,^TMP("PSOREJP1",$J,LINE,0)=$G(TEXT)
"RTN","PSOREJP1",237,0)
 ;
"RTN","PSOREJP1",238,0)
 I LINE>$G(LASTLN) D SAVE^VALM10(LINE) S LASTLN=LINE
"RTN","PSOREJP1",239,0)
 ;
"RTN","PSOREJP1",240,0)
 I $G(REV) D  Q
"RTN","PSOREJP1",241,0)
 . D CNTRL^VALM10(LINE,1,$L(TEXT),IORVON,IOINORM)
"RTN","PSOREJP1",242,0)
 . I $G(UND) D CNTRL^VALM10(LINE,$L(TEXT)+1,80,IOUON,IOINORM)
"RTN","PSOREJP1",243,0)
 I $G(UND) D CNTRL^VALM10(LINE,1,80,IOUON,IOINORM)
"RTN","PSOREJP1",244,0)
 I $G(HIG) D
"RTN","PSOREJP1",245,0)
 . D CNTRL^VALM10(LINE,HIG,80,IOINHI_$S($G(UND):IOUON,1:""),IOINORM)
"RTN","PSOREJP1",246,0)
 Q
"RTN","PSOREJP1",247,0)
HELP ;
"RTN","PSOREJP1",248,0)
 Q
"RTN","PSOREJP1",249,0)
 ;
"RTN","PSOREJP1",250,0)
CLOSED(RX,REJ,MSG) ; Returns whether the REJECT is RESOLVED or NOT
"RTN","PSOREJP1",251,0)
 I $$GET1^DIQ(52.25,REJ_","_RX,10,"I") D:$G(MSG)  Q 1
"RTN","PSOREJP1",252,0)
 . S VALMSG="This Reject is marked resolved!",VALMBCK="R" W $C(7)
"RTN","PSOREJP1",253,0)
 Q 0
"RTN","PSOREJP1",254,0)
 ;
"RTN","PSOREJP1",255,0)
REOPN(RX,REJ) ; Returns whether the REJECT was RE-OPENED or NOT
"RTN","PSOREJP1",256,0)
 Q $S($$GET1^DIQ(52.25,REJ_","_RX,23)="":0,1:1)
"RTN","PSOREJP1",257,0)
 ;
"RTN","PSOREJP1",258,0)
EXP(CODE) ; - Returns the explanation field (.02) for a reject code
"RTN","PSOREJP1",259,0)
 ;  Input:  (r) CODE - .01 field (Code) value from file 9002313.93
"RTN","PSOREJP1",260,0)
 ; Output: .02 field (Explanation) value from file 9002313.93
"RTN","PSOREJP1",261,0)
 N DIC,X,Y
"RTN","PSOREJP1",262,0)
 S DIC=9002313.93,DIC(0)="Z",X=CODE D ^DIC
"RTN","PSOREJP1",263,0)
 Q $P($G(Y(0)),"^",2)
"RTN","PSOREJP1",264,0)
 ;
"RTN","PSOREJP1",265,0)
OUT(RX) ; - Supported call by outside PROTOCOLs to act on specific REJECTs
"RTN","PSOREJP1",266,0)
 N I,RFL,DATA,REJ,PSOBACK,VALMCNT,RXN
"RTN","PSOREJP1",267,0)
 I '$D(^XUSEC("PSORPH",DUZ)) D  Q
"RTN","PSOREJP1",268,0)
 . S VALMSG="PSORPH key required to use the REJ action.",VALMBCK="R"
"RTN","PSOREJP1",269,0)
 I $G(PS)="REJECT" D
"RTN","PSOREJP1",270,0)
 . S VALMSG="REJ action is not available at this point.",VALMBCK="R"
"RTN","PSOREJP1",271,0)
 S PSOBACK=1
"RTN","PSOREJP1",272,0)
 S (RFL,I)=0 F I=1:1 Q:'$D(^PSRX(RX,1,I))  S RFL=I
"RTN","PSOREJP1",273,0)
 S X=$$FIND^PSOREJUT(RX,RFL,.DATA) S REJ=$O(DATA(""))
"RTN","PSOREJP1",274,0)
 I '$G(REJ) S VALMSG="Invalid selection!",VALMBCK="R" Q
"RTN","PSOREJP1",275,0)
 D EN(RX,REJ) S VALMBCK="R"
"RTN","PSOREJP1",276,0)
 Q
"RTN","PSOREJP1",277,0)
 ;
"RTN","PSOREJP1",278,0)
SMA ;Submit multiple actions
"RTN","PSOREJP1",279,0)
 N CLA,I,OVR,OVRSTR,PA,REJIEN,DUR,RSC,DURIEN
"RTN","PSOREJP1",280,0)
 I $$CLOSED(RX,REJ,1) Q
"RTN","PSOREJP1",281,0)
 S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP1",282,0)
 I PSOET S VALMSG="SMA not allowed for "_$$ELIGDISP^PSOREJP1(RX,FILL)_" Non-Billable claim.",VALMBCK="R" Q
"RTN","PSOREJP1",283,0)
 D FULL^VALM1 W !
"RTN","PSOREJP1",284,0)
 S DURIEN=$P($G(^PSRX(RX,"REJ",REJ,0)),U,11)
"RTN","PSOREJP1",285,0)
 D DURRESP^BPSNCPD3(DURIEN,.DUR) ; Reference to BPSNCPD3 supported by IA 4560
"RTN","PSOREJP1",286,0)
 ;
"RTN","PSOREJP1",287,0)
 ; Prompt for Prior Auth fields
"RTN","PSOREJP1",288,0)
 S PA=$$PA^PSOREJU2
"RTN","PSOREJP1",289,0)
 I PA="^" S VALMBCK="R" Q  ;User terminated or did not answer
"RTN","PSOREJP1",290,0)
 ;
"RTN","PSOREJP1",291,0)
 ; Prompt for submission clarification codes (up to three)
"RTN","PSOREJP1",292,0)
 W !
"RTN","PSOREJP1",293,0)
 S CLA=$$CLA^PSOREJU1
"RTN","PSOREJP1",294,0)
 I CLA="^" S VALMBCK="R" Q  ;User terminated or did not answer
"RTN","PSOREJP1",295,0)
 ;
"RTN","PSOREJP1",296,0)
 ; Prompt for DUR Overrides (up to three)
"RTN","PSOREJP1",297,0)
 S OVRSTR="",REJIEN=0 F I=1:1:3 D  Q:OVR="^"!(OVR="")  S $P(OVRSTR,"~",I)=OVR
"RTN","PSOREJP1",298,0)
 . I REJIEN]"" S REJIEN=$O(DUR(1,"DUR PPS",REJIEN))
"RTN","PSOREJP1",299,0)
 . S RSC="" I +REJIEN S RSC=$P($G(DUR(1,"DUR PPS",REJIEN,"REASON FOR SERVICE CODE"))," ",1)
"RTN","PSOREJP1",300,0)
 . S OVR=$$SMAOVR^PSOREJU1(RSC)
"RTN","PSOREJP1",301,0)
 I OVR="^" S VALMBCK="R" Q  ;User exited or timed-out
"RTN","PSOREJP1",302,0)
 ;
"RTN","PSOREJP1",303,0)
 W !!,?6,"RECAP:"
"RTN","PSOREJP1",304,0)
 W !,?6,"Prior Authorization Type       : ",$P(PA,"^"),"  ",$$DSC^PSOREJU1(9002313.26,$P(PA,"^"),.02)
"RTN","PSOREJP1",305,0)
 W !,?6,"Prior Authorization Number     : ",$P(PA,"^",2)
"RTN","PSOREJP1",306,0)
 W !,?6,"Submission Clarification Code 1: ",$P(CLA,"~",1),"  ",$$DSC^PSOREJU1(9002313.25,$P(CLA,"~",1),.02)
"RTN","PSOREJP1",307,0)
 I $P(CLA,"~",2)]"" W !,?6,"Submission Clarification Code 2: ",$P(CLA,"~",2),"  ",$$DSC^PSOREJU1(9002313.25,$P(CLA,"~",2),.02)
"RTN","PSOREJP1",308,0)
 I $P(CLA,"~",3)]"" W !,?6,"Submission Clarification Code 3: ",$P(CLA,"~",3),"  ",$$DSC^PSOREJU1(9002313.25,$P(CLA,"~",3),.02)
"RTN","PSOREJP1",309,0)
 W !,?6,"Reason for Service Code 1      : ",$P($P(OVRSTR,"~",1),U,1),"  ",$$DSC^PSOREJU1(9002313.23,$P($P(OVRSTR,"~",1),U,1),1)
"RTN","PSOREJP1",310,0)
 W !,?6,"Professional Service Code 1    : ",$P($P(OVRSTR,"~",1),U,2),"  ",$$DSC^PSOREJU1(9002313.21,$P($P(OVRSTR,"~",1),U,2),1)
"RTN","PSOREJP1",311,0)
 W !,?6,"Result of Service Code 1       : ",$P($P(OVRSTR,"~",1),U,3),"  ",$$DSC^PSOREJU1(9002313.22,$P($P(OVRSTR,"~",1),U,3),1)
"RTN","PSOREJP1",312,0)
 I $P($P(OVRSTR,"~",2),U,1)]"" W !,?6,"Reason for Service Code 2      : ",$P($P(OVRSTR,"~",2),U,1),"  ",$$DSC^PSOREJU1(9002313.23,$P($P(OVRSTR,"~",2),U,1),1)
"RTN","PSOREJP1",313,0)
 I $P($P(OVRSTR,"~",2),U,2)]"" W !,?6,"Professional Service Code 2    : ",$P($P(OVRSTR,"~",2),U,2),"  ",$$DSC^PSOREJU1(9002313.21,$P($P(OVRSTR,"~",2),U,2),1)
"RTN","PSOREJP1",314,0)
 I $P($P(OVRSTR,"~",2),U,3)]"" W !,?6,"Result of Service Code 2       : ",$P($P(OVRSTR,"~",2),U,3),"  ",$$DSC^PSOREJU1(9002313.22,$P($P(OVRSTR,"~",2),U,3),1)
"RTN","PSOREJP1",315,0)
 I $P($P(OVRSTR,"~",3),U,1)]"" W !,?6,"Reason for Service Code 3      : ",$P($P(OVRSTR,"~",3),U,1),"  ",$$DSC^PSOREJU1(9002313.23,$P($P(OVRSTR,"~",3),U,1),1)
"RTN","PSOREJP1",316,0)
 I $P($P(OVRSTR,"~",3),U,2)]"" W !,?6,"Professional Service Code 3    : ",$P($P(OVRSTR,"~",3),U,2),"  ",$$DSC^PSOREJU1(9002313.21,$P($P(OVRSTR,"~",3),U,2),1)
"RTN","PSOREJP1",317,0)
 I $P($P(OVRSTR,"~",3),U,3)]"" W !,?6,"Result of Service Code 3       : ",$P($P(OVRSTR,"~",3),U,3),"  ",$$DSC^PSOREJU1(9002313.22,$P($P(OVRSTR,"~",3),U,3),1)
"RTN","PSOREJP1",318,0)
 W ! D SEND^PSOREJP3(OVRSTR,CLA,PA)
"RTN","PSOREJP1",319,0)
 Q
"RTN","PSOREJP1",320,0)
 ;
"RTN","PSOREJP1",321,0)
VRX ; View ePharmacy Prescription - invoked from the Reject Information screen
"RTN","PSOREJP1",322,0)
 N BPSVRX
"RTN","PSOREJP1",323,0)
 D FULL^VALM1
"RTN","PSOREJP1",324,0)
 S BPSVRX("RXIEN")=$G(RX)
"RTN","PSOREJP1",325,0)
 S BPSVRX("FILL#")=$G(FILL)
"RTN","PSOREJP1",326,0)
 D ^BPSVRX    ; DBIA #5723
"RTN","PSOREJP1",327,0)
 S VALMBCK="R"
"RTN","PSOREJP1",328,0)
 Q
"RTN","PSOREJP1",329,0)
 ;
"RTN","PSOREJP1",330,0)
VER ; View ePharmacy Prescription - invoked from the Rx view hidden action of Medication Profile
"RTN","PSOREJP1",331,0)
 N BPSVRX
"RTN","PSOREJP1",332,0)
 K ^TMP("BPSVRX-PSO VIEW RX",$J)
"RTN","PSOREJP1",333,0)
 D FULL^VALM1
"RTN","PSOREJP1",334,0)
 ;
"RTN","PSOREJP1",335,0)
 ; save the current PSO Rx display array and header
"RTN","PSOREJP1",336,0)
 M ^TMP("BPSVRX-PSO VIEW RX",$J,"PSOHDR")=^TMP("PSOHDR",$J)
"RTN","PSOREJP1",337,0)
 M ^TMP("BPSVRX-PSO VIEW RX",$J,"PSOAL")=^TMP("PSOAL",$J)
"RTN","PSOREJP1",338,0)
 ;
"RTN","PSOREJP1",339,0)
 S BPSVRX("RXIEN")=$G(RXN)    ; Rx ien ptr file 52
"RTN","PSOREJP1",340,0)
 D ^BPSVRX    ; DBIA #5723
"RTN","PSOREJP1",341,0)
 ;
"RTN","PSOREJP1",342,0)
 ; restore the PSO Rx display array and header upon return
"RTN","PSOREJP1",343,0)
 I '$D(^TMP("PSOHDR",$J)) M ^TMP("PSOHDR",$J)=^TMP("BPSVRX-PSO VIEW RX",$J,"PSOHDR")
"RTN","PSOREJP1",344,0)
 I '$D(^TMP("PSOAL",$J)) M ^TMP("PSOAL",$J)=^TMP("BPSVRX-PSO VIEW RX",$J,"PSOAL")
"RTN","PSOREJP1",345,0)
 ;
"RTN","PSOREJP1",346,0)
 S VALMBCK="R"
"RTN","PSOREJP1",347,0)
 K ^TMP("BPSVRX-PSO VIEW RX",$J)
"RTN","PSOREJP1",348,0)
 Q
"RTN","PSOREJP1",349,0)
 ;
"RTN","PSOREJP2")
0^7^B119855234^B107773405
"RTN","PSOREJP2",1,0)
PSOREJP2 ;BIRM/MFR - Third Party Rejects View/Process ;04/28/05
"RTN","PSOREJP2",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,247,260,287,289,358,385,403**;DEC 1997;Build 9
"RTN","PSOREJP2",3,0)
 ;Reference to ^PSSLOCK supported by IA #2789
"RTN","PSOREJP2",4,0)
 ;Reference to GETDAT^BPSBUTL supported by IA #4719
"RTN","PSOREJP2",5,0)
 ;Reference to ^PS(55 supported by IA #2228
"RTN","PSOREJP2",6,0)
 ;
"RTN","PSOREJP2",7,0)
 N PSORJSRT,PSOPTFLT,PSODRFLT,PSORXFLT,PSOBYFLD,PSOSTFLT,DIR,DIRUT,DUOUT,DTOUT
"RTN","PSOREJP2",8,0)
 N PSOINFLT,PSODTRNG,PSOINGRP,PSOTRITG,PSOCVATG
"RTN","PSOREJP2",9,0)
 S PSORJASC=1,PSOINGRP=0,PSOTRITG=1,PSOCVATG=1
"RTN","PSOREJP2",10,0)
 ;
"RTN","PSOREJP2",11,0)
 ; - Division/Site selection
"RTN","PSOREJP2",12,0)
 D SEL^PSOREJU1("DIVISION","^PS(59,",.PSOREJST,$$GET1^DIQ(59,+$G(PSOSITE),.01)) I $G(PSOREJST)="^" G EXIT
"RTN","PSOREJP2",13,0)
 ;
"RTN","PSOREJP2",14,0)
 ; - Date range selection
"RTN","PSOREJP2",15,0)
 W ! S PSODTRNG=$$DTRNG("T-90","T") I PSODTRNG="^" G EXIT
"RTN","PSOREJP2",16,0)
 ;
"RTN","PSOREJP2",17,0)
SEL ; - Field Selection (Patient/Drug/Rx)
"RTN","PSOREJP2",18,0)
 S DIR(0)="S^P:PATIENT;D:DRUG;R:Rx;I:INSURANCE",DIR("B")="P"
"RTN","PSOREJP2",19,0)
 S DIR("A")="By (P)atient, (D)rug, (R)x or (I)nsurance" D ^DIR I $D(DIRUT) G EXIT
"RTN","PSOREJP2",20,0)
 S PSOBYFLD=Y,DIR("B")=""
"RTN","PSOREJP2",21,0)
 ;
"RTN","PSOREJP2",22,0)
 I PSOBYFLD="P" D  I $G(PSOPTFLT)="^" G SEL
"RTN","PSOREJP2",23,0)
 . S (PSODRFLT,PSORXFLT,PSOINFLT)="ALL",PSORJSRT="DR"
"RTN","PSOREJP2",24,0)
 . D SEL^PSOREJU1("PATIENT","^DPT(",.PSOPTFLT)
"RTN","PSOREJP2",25,0)
 ;
"RTN","PSOREJP2",26,0)
 I PSOBYFLD="D" D  I $G(PSODRFLT)="^" G SEL
"RTN","PSOREJP2",27,0)
 . S (PSOPTFLT,PSORXFLT,PSOINFLT)="ALL",PSORJSRT="PA"
"RTN","PSOREJP2",28,0)
 . D SEL^PSOREJU1("DRUG","^PSDRUG(",.PSODRFLT)
"RTN","PSOREJP2",29,0)
 ;
"RTN","PSOREJP2",30,0)
 I PSOBYFLD="R" D  I $D(DUOUT)!$D(DTOUT)!'$G(PSORXFLT) G SEL
"RTN","PSOREJP2",31,0)
 . S (PSOPTFLT,PSODRFLT,PSOINFLT)="ALL",PSORJSRT="PA"
"RTN","PSOREJP2",32,0)
 . N DIC,Y,X,OK K PSOSTFLT,PSORXFLT
"RTN","PSOREJP2",33,0)
 . S DIC=52,DIC(0)="QEZA",DIC("A")="PRESCRIPTION: "
"RTN","PSOREJP2",34,0)
 . F  W ! D ^DIC D  Q:$G(OK) 
"RTN","PSOREJP2",35,0)
 . . I $D(DUOUT)!$D(DTOUT)!(X="") S OK=1 Q
"RTN","PSOREJP2",36,0)
 . . I '$O(^PSRX(+Y,"REJ",0)) D  Q
"RTN","PSOREJP2",37,0)
 . . . W !?40,"Prescription does not have rejects!",$C(7)
"RTN","PSOREJP2",38,0)
 . . S PSORXFLT=+Y,OK=1
"RTN","PSOREJP2",39,0)
 ;
"RTN","PSOREJP2",40,0)
 I PSOBYFLD="I" D  I $O(PSOINFLT(""))="" G SEL
"RTN","PSOREJP2",41,0)
 . S (PSOPTFLT,PSODRFLT,PSORXFLT)="ALL",PSORJSRT="PA"
"RTN","PSOREJP2",42,0)
 . N DIR,Y,X,OK K PSOINFLT W !
"RTN","PSOREJP2",43,0)
 . S DIR("A",1)="Enter the whole or part of the Insurance Company"
"RTN","PSOREJP2",44,0)
 . S DIR("A",2)="name for which you want to view/process REJECTS."
"RTN","PSOREJP2",45,0)
 . S DIR("A",3)=""
"RTN","PSOREJP2",46,0)
 . S DIR(0)="FO^3:30",DIR("A")="  INSURANCE"
"RTN","PSOREJP2",47,0)
 . F  D ^DIR D  Q:$G(OK) 
"RTN","PSOREJP2",48,0)
 . . I $D(DIRUT)!(X="") S OK=1 Q
"RTN","PSOREJP2",49,0)
 . . S PSOINFLT(X)="" K DIR("A") S DIR("A")="ANOTHER ONE"
"RTN","PSOREJP2",50,0)
 ;
"RTN","PSOREJP2",51,0)
 ; - Status Selection (UNRESOLVED or RESOLVED)
"RTN","PSOREJP2",52,0)
 I $G(PSOSTFLT)="" D  I $D(DIRUT) G EXIT
"RTN","PSOREJP2",53,0)
 . S DIR(0)="S^U:UNRESOLVED;R:RESOLVED;B:BOTH",DIR("B")="B"
"RTN","PSOREJP2",54,0)
 . S DIR("A")="(U)NRESOLVED, (R)RESOLVED or (B)OTH REJECT statuses" D ^DIR
"RTN","PSOREJP2",55,0)
 . S PSOSTFLT=Y
"RTN","PSOREJP2",56,0)
 ;
"RTN","PSOREJP2",57,0)
 D LST^PSOREJP0("VP")
"RTN","PSOREJP2",58,0)
 ;
"RTN","PSOREJP2",59,0)
EXIT Q
"RTN","PSOREJP2",60,0)
 ;
"RTN","PSOREJP2",61,0)
CLO      ; - Ignore a REJECT hidden action
"RTN","PSOREJP2",62,0)
 N PSOTRIC,X,PSOET
"RTN","PSOREJP2",63,0)
 ;
"RTN","PSOREJP2",64,0)
 I '$D(FILL) S FILL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJP2",65,0)
 S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(RX,FILL,PSOTRIC)
"RTN","PSOREJP2",66,0)
 ;
"RTN","PSOREJP2",67,0)
 ;reference to ^XUSEC( supported by IA 10076
"RTN","PSOREJP2",68,0)
 ;bld, PSO*7*358
"RTN","PSOREJP2",69,0)
 I PSOTRIC,'$D(^XUSEC("PSO TRICARE/CHAMPVA",DUZ)) S VALMSG="Action Requires <PSO TRICARE/CHAMPVA> security key",VALMBCK="R" Q
"RTN","PSOREJP2",70,0)
 ;if TRICARE or CHAMPVA and user has security key, prompt to continue or not
"RTN","PSOREJP2",71,0)
 ;
"RTN","PSOREJP2",72,0)
 ;
"RTN","PSOREJP2",73,0)
 I PSOTRIC,'$$CONT^PSOREJU1() S VALMBCK="R" Q
"RTN","PSOREJP2",74,0)
 ;
"RTN","PSOREJP2",75,0)
 I $$CLOSED^PSOREJP1(RX,REJ) D  Q
"RTN","PSOREJP2",76,0)
 . S VALMSG="This Reject is marked resolved!",VALMBCK="R"
"RTN","PSOREJP2",77,0)
 N DIR,COM
"RTN","PSOREJP2",78,0)
 D FULL^VALM1
"RTN","PSOREJP2",79,0)
 I '$$SIG^PSOREJU1() S VALMBCK="R" Q
"RTN","PSOREJP2",80,0)
 W !
"RTN","PSOREJP2",81,0)
 S:PSOTRIC COM=$$TCOM^PSOREJP3(RX,FILL) S:'PSOTRIC COM=$$COM^PSOREJU1()
"RTN","PSOREJP2",82,0)
 I COM="^" S VALMBCK="R" Q
"RTN","PSOREJP2",83,0)
 W !
"RTN","PSOREJP2",84,0)
 S DIR(0)="Y",DIR("A")="     Confirm? ",DIR("B")="NO"
"RTN","PSOREJP2",85,0)
 S DIR("A",1)="     When you confirm this REJECT will be marked RESOLVED."
"RTN","PSOREJP2",86,0)
 S DIR("A",2)=" "
"RTN","PSOREJP2",87,0)
 D ^DIR I $G(Y)=0!$D(DIRUT) S VALMBCK="R" Q
"RTN","PSOREJP2",88,0)
 W ?40,"[Closing..." D CLOSE^PSOREJUT(RX,FILL,REJ,DUZ,6,COM,"","","","","",1) W "OK]",!,$C(7) H 1
"RTN","PSOREJP2",89,0)
 I $D(PSOSTFLT),PSOSTFLT'="B" S CHANGE=1
"RTN","PSOREJP2",90,0)
 ;
"RTN","PSOREJP2",91,0)
 I $$PTLBL(RX,FILL) D PRINT^PSOREJP3(RX,FILL)
"RTN","PSOREJP2",92,0)
 I PSOTRIC D
"RTN","PSOREJP2",93,0)
 .S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP2",94,0)
 .D AUDIT^PSOTRI(RX,FILL,,COM,$S(PSOET:"N",1:"R"),$S(PSOTRIC=1:"T",PSOTRIC=2:"C",1:""))
"RTN","PSOREJP2",95,0)
 ;
"RTN","PSOREJP2",96,0)
 Q
"RTN","PSOREJP2",97,0)
 ;
"RTN","PSOREJP2",98,0)
OPN ; - Re-open a Closed/Resolved Reject
"RTN","PSOREJP2",99,0)
 I '$$CLOSED^PSOREJP1(RX,REJ) D  Q
"RTN","PSOREJP2",100,0)
 . S VALMSG="This Reject is NOT marked resolved!",VALMBCK="R"
"RTN","PSOREJP2",101,0)
 ;cnf, PSO*7*358, check for discontinued and not released
"RTN","PSOREJP2",102,0)
 ;  12 - DISCONTINUED
"RTN","PSOREJP2",103,0)
 ;  14 - DISCONTINUED BY PROVIDER
"RTN","PSOREJP2",104,0)
 ;  15 - DISCONTINUED (EDIT)
"RTN","PSOREJP2",105,0)
 N DCSTAT,PSOREL
"RTN","PSOREJP2",106,0)
 S DCSTAT=$$GET1^DIQ(52,RX,100,"I")
"RTN","PSOREJP2",107,0)
 S PSOREL=0 D
"RTN","PSOREJP2",108,0)
 . I 'FILL S PSOREL=+$$GET1^DIQ(52,RX,31,"I")
"RTN","PSOREJP2",109,0)
 . I FILL S PSOREL=+$$GET1^DIQ(52.1,FILL_","_RX,17,"I")
"RTN","PSOREJP2",110,0)
 I 'PSOREL,"/12/14/15/"[("/"_DCSTAT_"/") S VALMSG="Discontinued Rx has not been released.",VALMBCK="R" Q
"RTN","PSOREJP2",111,0)
 N DIR,COM,REJDATA,NEWDATA,X,REOPEN
"RTN","PSOREJP2",112,0)
 D FULL^VALM1
"RTN","PSOREJP2",113,0)
 I '$$SIG^PSOREJU1() S VALMBCK="R" Q
"RTN","PSOREJP2",114,0)
 W !
"RTN","PSOREJP2",115,0)
 S DIR(0)="Y",DIR("A")="     Confirm",DIR("B")="NO"
"RTN","PSOREJP2",116,0)
 S DIR("A",1)="     When you confirm this REJECT will be marked UNRESOLVED."
"RTN","PSOREJP2",117,0)
 S DIR("A",2)=" "
"RTN","PSOREJP2",118,0)
 D ^DIR I $G(Y)=0!$D(DIRUT) S VALMBCK="R" Q
"RTN","PSOREJP2",119,0)
 ;
"RTN","PSOREJP2",120,0)
 W ?40,"[Re-opening..."
"RTN","PSOREJP2",121,0)
 K REJDATA D GET^PSOREJU2(RX,FILL,.REJDATA,REJ,1) D SETOPN^PSOREJU2(RX,REJ)
"RTN","PSOREJP2",122,0)
 K NEWDATA M NEWDATA=REJDATA(REJ) S NEWDATA("PHARMACIST")=DUZ
"RTN","PSOREJP2",123,0)
 S REOPEN=1 D SAVE^PSOREJUT(RX,FILL,.NEWDATA,REOPEN)
"RTN","PSOREJP2",124,0)
 I $G(NEWDATA("REJECT IEN")),$D(REJDATA(REJ,"COMMENTS")) D
"RTN","PSOREJP2",125,0)
 . S COM=0 F  S COM=$O(REJDATA(REJ,"COMMENTS",COM)) Q:'COM  D
"RTN","PSOREJP2",126,0)
 . . S X(1)=REJDATA(REJ,"COMMENTS",COM,"COMMENTS")
"RTN","PSOREJP2",127,0)
 . . S X(2)=REJDATA(REJ,"COMMENTS",COM,"DATE/TIME")
"RTN","PSOREJP2",128,0)
 . . S X(3)=REJDATA(REJ,"COMMENTS",COM,"USER")
"RTN","PSOREJP2",129,0)
 . . D SAVECOM^PSOREJP3(RX,NEWDATA("REJECT IEN"),X(1),X(2),X(3))
"RTN","PSOREJP2",130,0)
 D RETRXF^PSOREJU2(RX,FILL,0)
"RTN","PSOREJP2",131,0)
 W "OK]",!,$C(7) H 1
"RTN","PSOREJP2",132,0)
 S CHANGE=1
"RTN","PSOREJP2",133,0)
 Q
"RTN","PSOREJP2",134,0)
 ;
"RTN","PSOREJP2",135,0)
SDC ; - Suspense Date Calculation
"RTN","PSOREJP2",136,0)
 D CHG(1)
"RTN","PSOREJP2",137,0)
 Q
"RTN","PSOREJP2",138,0)
 ;
"RTN","PSOREJP2",139,0)
CSD ;CSD - Change Suspense Date action entry point
"RTN","PSOREJP2",140,0)
 D CHG(0)
"RTN","PSOREJP2",141,0)
 Q
"RTN","PSOREJP2",142,0)
 ;
"RTN","PSOREJP2",143,0)
CHG(SDC) ; - Change Suspense Date action
"RTN","PSOREJP2",144,0)
 ;Local:
"RTN","PSOREJP2",145,0)
 ;  SDC - indicates if the suspense date is being manually changed or calculated. 
"RTN","PSOREJP2",146,0)
 ;  RX  - RX IEN
"RTN","PSOREJP2",147,0)
 ;  REJ - Reject indicator
"RTN","PSOREJP2",148,0)
 ;
"RTN","PSOREJP2",149,0)
 I '$G(SDC) S SDC=0
"RTN","PSOREJP2",150,0)
 I $$CLOSED^PSOREJP1(RX,REJ) D  Q
"RTN","PSOREJP2",151,0)
 . S VALMSG="This Reject is marked resolved!",VALMBCK="R" W $C(7)
"RTN","PSOREJP2",152,0)
 ;
"RTN","PSOREJP2",153,0)
 N SUSDT,PSOMSG,Y,SUSRX,%DT,DA,DIE,DR,ISSDT,EXPDT,PSOMSG,CUTDT,FILDT,RFL,COB
"RTN","PSOREJP2",154,0)
 ;
"RTN","PSOREJP2",155,0)
 S RFL=+$$GET1^DIQ(52.25,REJ_","_RX,5),SUSDT=$$RXSUDT^PSOBPSUT(RX,RFL)
"RTN","PSOREJP2",156,0)
 I RFL>0 S FILDT=$$GET1^DIQ(52.1,RFL_","_RX,.01,"I")
"RTN","PSOREJP2",157,0)
 E  S FILDT=$$GET1^DIQ(52,RX,22,"I")
"RTN","PSOREJP2",158,0)
 I SUSDT="" S VALMSG="Prescription is not suspended!",VALMBCK="R" W $C(7) Q
"RTN","PSOREJP2",159,0)
 I $$RXRLDT^PSOBPSUT(RX,RFL) S VALMSG="Prescription has been released already!",VALMBCK="R" W $C(7) Q
"RTN","PSOREJP2",160,0)
 ;cnf, PSO*7*358, add PSOET logic for TRICARE/CHAMPVA non-billable
"RTN","PSOREJP2",161,0)
 S PSOET=$$PSOET^PSOREJP3(RX,RFL)
"RTN","PSOREJP2",162,0)
 I PSOET S VALMSG=$S(SDC=1:"SDC",1:"CSD")_" not allowed for "_$$ELIGDISP^PSOREJP1(RX,RFL)_" Non-Billable claim.",VALMBCK="R" Q
"RTN","PSOREJP2",163,0)
 ;
"RTN","PSOREJP2",164,0)
 D PSOL^PSSLOCK(RX) I '$G(PSOMSG) S VALMSG=$P(PSOMSG,"^",2),VALMBCK="R" W $C(7) Q
"RTN","PSOREJP2",165,0)
 ;
"RTN","PSOREJP2",166,0)
 S ISSDT=$$GET1^DIQ(52,RX,1,"I"),EXPDT=$$GET1^DIQ(52,RX,26,"I")
"RTN","PSOREJP2",167,0)
 S SUSRX=$O(^PS(52.5,"B",RX,0))
"RTN","PSOREJP2",168,0)
 ;
"RTN","PSOREJP2",169,0)
 D FULL^VALM1
"RTN","PSOREJP2",170,0)
 I SDC D  I SUSDT=0 D PSOUL^PSSLOCK(RX) S VALMBCK="R" Q
"RTN","PSOREJP2",171,0)
 . S COB=$$GET1^DIQ(52.25,REJ_","_RX,27,"I")
"RTN","PSOREJP2",172,0)
 . I 'COB S COB=1
"RTN","PSOREJP2",173,0)
 . S SUSDT=$$CALCSD(RX,RFL,COB)
"RTN","PSOREJP2",174,0)
 ;
"RTN","PSOREJP2",175,0)
SUDT ; Asks for the new Suspense Date
"RTN","PSOREJP2",176,0)
 N X1,X2
"RTN","PSOREJP2",177,0)
 S X1=FILDT,X2=89 D C^%DTC S CUTDT=X
"RTN","PSOREJP2",178,0)
 S %DT("B")=$$FMTE^XLFDT(SUSDT),%DT="EA",%DT("A")=$S(SDC:"NEW ",1:"")_"SUSPENSE DATE: "
"RTN","PSOREJP2",179,0)
 W ! D ^%DT I Y<0!($D(DTOUT)) D PSOUL^PSSLOCK(RX) S VALMBCK="R" I (SDC) W !,"ACTION NOT TAKEN!" Q
"RTN","PSOREJP2",180,0)
 I Y<ISSDT D  G SUDT
"RTN","PSOREJP2",181,0)
 . W !!?5,"Suspense Date cannot be before Issue Date: ",$$FMTE^XLFDT(ISSDT),".",$C(7)
"RTN","PSOREJP2",182,0)
 I Y>EXPDT D  G SUDT
"RTN","PSOREJP2",183,0)
 . W !!?5,"Suspense Date cannot be after Expiration Date: ",$$FMTE^XLFDT(EXPDT),".",$C(7)
"RTN","PSOREJP2",184,0)
 I Y>CUTDT D  G SUDT
"RTN","PSOREJP2",185,0)
 . W !!?5,"Suspense Date cannot be after fill date plus 90 days: "_$$FMTE^XLFDT(CUTDT),".",$C(7)
"RTN","PSOREJP2",186,0)
 S SUSDT=Y
"RTN","PSOREJP2",187,0)
 ;
"RTN","PSOREJP2",188,0)
 N DIR,DIRUT W !
"RTN","PSOREJP2",189,0)
 S DIR("A",1)="     When you confirm, this REJECT will be marked resolved. A"
"RTN","PSOREJP2",190,0)
 S DIR("A",2)="     new claim will be re-submitted to the 3rd party payer"
"RTN","PSOREJP2",191,0)
 I $$GET1^DIQ(52.5,SUSRX,3)="" D
"RTN","PSOREJP2",192,0)
 . I SUSDT>DT D
"RTN","PSOREJP2",193,0)
 . . S DIR("A",3)="     when the prescription label for this fill is printed"
"RTN","PSOREJP2",194,0)
 . . S DIR("A",4)="     from suspense on "_$$FMTE^XLFDT(SUSDT)_"."
"RTN","PSOREJP2",195,0)
 . . S DIR("A",5)=" "
"RTN","PSOREJP2",196,0)
 . . S DIR("A",6)="     Note: THE LABEL FOR THIS PRESCRIPTION FILL WILL NOT BE"
"RTN","PSOREJP2",197,0)
 . . S DIR("A",7)="           PRINTED LOCAL FROM SUSPENSE BEFORE "_$$FMTE^XLFDT(SUSDT)_"."
"RTN","PSOREJP2",198,0)
 . E  D
"RTN","PSOREJP2",199,0)
 . . S DIR("A",3)="     the next time local labels are printed from suspense."
"RTN","PSOREJP2",200,0)
 E  D
"RTN","PSOREJP2",201,0)
 . I SUSDT>DT D
"RTN","PSOREJP2",202,0)
 . . S DIR("A",3)="     when the prescription is transmitted to CMOP on "
"RTN","PSOREJP2",203,0)
 . . S DIR("A",4)="     "_$$FMTE^XLFDT(SUSDT)_"."
"RTN","PSOREJP2",204,0)
 . . S DIR("A",5)=" "
"RTN","PSOREJP2",205,0)
 . . S DIR("A",6)="     Note: THIS PRESCRIPTION FILL WILL NOT BE TRANSMITTED TO"
"RTN","PSOREJP2",206,0)
 . . S DIR("A",7)="           CMOP BEFORE "_$$FMTE^XLFDT(SUSDT)_"."
"RTN","PSOREJP2",207,0)
 . E  D
"RTN","PSOREJP2",208,0)
 . . S DIR("A",3)="     when this prescription fill is transmitted to CMOP on"
"RTN","PSOREJP2",209,0)
 . . S DIR("A",4)="     the next CMOP transmission."
"RTN","PSOREJP2",210,0)
    ;
"RTN","PSOREJP2",211,0)
 S DIR("A",$O(DIR("A",""),-1)+1)=" "
"RTN","PSOREJP2",212,0)
 S DIR(0)="Y",DIR("A")="     Confirm? ",DIR("B")="YES"
"RTN","PSOREJP2",213,0)
 D ^DIR I $G(Y)=0!$D(DIRUT) S VALMBCK="R" D PSOUL^PSSLOCK(RX) Q
"RTN","PSOREJP2",214,0)
 ;
"RTN","PSOREJP2",215,0)
 ; - Suspense/Fill Date updates
"RTN","PSOREJP2",216,0)
 I SUSDT'=$$RXSUDT^PSOBPSUT(RX,RFL) D
"RTN","PSOREJP2",217,0)
 . N DA,DIE,DR,PSOX,SFN,INDT,DEAD
"RTN","PSOREJP2",218,0)
 . S DA=SUSRX,DIE="^PS(52.5,",DR=".02///"_SUSDT D ^DIE
"RTN","PSOREJP2",219,0)
 . S SFN=SUSRX,DEAD=0,INDT=SUSDT D CHANGE^PSOSUCH1(RX,RFL)
"RTN","PSOREJP2",220,0)
 ;
"RTN","PSOREJP2",221,0)
 ; - Flagging the prescription to be re-submitted to ECME on the next CMOP/Print from Suspense
"RTN","PSOREJP2",222,0)
 D RETRXF^PSOREJU2(RX,RFL,1)
"RTN","PSOREJP2",223,0)
 W ?40,"[Closing..."
"RTN","PSOREJP2",224,0)
 D CLOSE^PSOREJUT(RX,RFL,REJ,DUZ,8,"Fill Date changed to "_$$FMTE^XLFDT(SUSDT)_". A new claim will be re-submitted on this date.")
"RTN","PSOREJP2",225,0)
 W "OK]",!,$C(7) H 1 I $D(PSOSTFLT),PSOSTFLT'="B" S CHANGE=1
"RTN","PSOREJP2",226,0)
 D PSOUL^PSSLOCK(RX)
"RTN","PSOREJP2",227,0)
 Q
"RTN","PSOREJP2",228,0)
 ;
"RTN","PSOREJP2",229,0)
PTLBL(RX,RFL) ; Returns whether the user should be prompted for 'Print Label?' or not
"RTN","PSOREJP2",230,0)
 N PTLBL,CMP,LBL,REPRINT
"RTN","PSOREJP2",231,0)
 N PSOTRIC S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(RX,RFL,.PSOTRIC)
"RTN","PSOREJP2",232,0)
 I $$FIND^PSOREJUT(RX,RFL) Q 0       ; Has OPEN/UNRESOLVED 3rd pary payer reject
"RTN","PSOREJP2",233,0)
 I $$GET1^DIQ(52,RX,100,"I") Q 0     ; Rx status not ACTIVE
"RTN","PSOREJP2",234,0)
 I $$RXRLDT^PSOBPSUT(RX,RFL),'PSOTRIC Q 0     ; Rx Released
"RTN","PSOREJP2",235,0)
 ; - CMOP Rx fill?
"RTN","PSOREJP2",236,0)
 S PTLBL=1,CMP=0
"RTN","PSOREJP2",237,0)
 F  S CMP=$O(^PSRX(RX,4,CMP)) Q:'CMP  D  Q:'PTLBL
"RTN","PSOREJP2",238,0)
 . I +$$GET1^DIQ(52.01,CMP_","_RX,2,"I")=RFL S PTLBL=0
"RTN","PSOREJP2",239,0)
 I 'PTLBL Q 0
"RTN","PSOREJP2",240,0)
 ; - Label already printed for Rx fill?
"RTN","PSOREJP2",241,0)
 S LBL=0
"RTN","PSOREJP2",242,0)
 F  S LBL=$O(^PSRX(RX,"L",LBL)) Q:'LBL  D  Q:'PTLBL
"RTN","PSOREJP2",243,0)
 . I +$$GET1^DIQ(52.032,LBL_","_RX,1,"I")'=RFL Q
"RTN","PSOREJP2",244,0)
 . I $G(PSOTRIC)&($$RXRLDT^PSOBPSUT(RX,RFL)) S REPRINT=1 Q
"RTN","PSOREJP2",245,0)
 . I $$GET1^DIQ(52.032,LBL_","_RX,4,"I") Q
"RTN","PSOREJP2",246,0)
 . I $$GET1^DIQ(52.032,LBL_","_RX,2)["INTERACTION" Q
"RTN","PSOREJP2",247,0)
 . S PTLBL=0
"RTN","PSOREJP2",248,0)
 ;
"RTN","PSOREJP2",249,0)
 I PTLBL D
"RTN","PSOREJP2",250,0)
 . N DIR,DIRUT,Y
"RTN","PSOREJP2",251,0)
 . W ! S DIR(0)="Y",DIR("A")=$S('$G(REPRINT):"Print Label",1:"Reprint Label"),DIR("B")="YES"
"RTN","PSOREJP2",252,0)
 . D ^DIR I $G(Y)=0!$D(DIRUT) S PTLBL=0 Q
"RTN","PSOREJP2",253,0)
 ;
"RTN","PSOREJP2",254,0)
 Q PTLBL
"RTN","PSOREJP2",255,0)
 ;
"RTN","PSOREJP2",256,0)
DTRNG(BGN,END) ; Date Range Selection
"RTN","PSOREJP2",257,0)
 ;Input: (o) BGN - Default Begin Date 
"RTN","PSOREJP2",258,0)
 ;       (o) END - Default End Date 
"RTN","PSOREJP2",259,0)
 ;
"RTN","PSOREJP2",260,0)
 N %DT,DTOUT,DUOUT,DTRNG,X,Y
"RTN","PSOREJP2",261,0)
 S DTRNG=""
"RTN","PSOREJP2",262,0)
 S %DT="AEST",%DT("A")="BEGIN REJECT DATE: ",%DT("B")=$G(BGN) K:$G(BGN)="" %DT("B") D ^%DT
"RTN","PSOREJP2",263,0)
 I $G(DUOUT)!$G(DTOUT)!($G(Y)=-1) Q "^"
"RTN","PSOREJP2",264,0)
 S $P(DTRNG,U)=Y
"RTN","PSOREJP2",265,0)
 ;
"RTN","PSOREJP2",266,0)
 W ! K %DT
"RTN","PSOREJP2",267,0)
 S %DT="AEST",%DT("A")="END REJECT DATE: ",%DT("B")=$G(END),%DT(0)=Y K:$G(END)="" %DT("B") D ^%DT
"RTN","PSOREJP2",268,0)
 I $G(DUOUT)!$G(DTOUT)!($G(Y)=-1) Q "^"
"RTN","PSOREJP2",269,0)
 ;
"RTN","PSOREJP2",270,0)
 ;Define Entry
"RTN","PSOREJP2",271,0)
 S $P(DTRNG,U,2)=Y
"RTN","PSOREJP2",272,0)
 ;
"RTN","PSOREJP2",273,0)
 Q DTRNG
"RTN","PSOREJP2",274,0)
 ;
"RTN","PSOREJP2",275,0)
CALCSD(RX,FIL,COB) ;
"RTN","PSOREJP2",276,0)
 ; CALCSD - Prompt the user for Last Date of Service, Last Days Supply and
"RTN","PSOREJP2",277,0)
 ;   then calculate the suspense date based on these input.
"RTN","PSOREJP2",278,0)
 ; Input
"RTN","PSOREJP2",279,0)
 ;   RX - Prescription IEN
"RTN","PSOREJP2",280,0)
 ;   FIL - Fill Number
"RTN","PSOREJP2",281,0)
 ;   COB - Coordination of Benefits
"RTN","PSOREJP2",282,0)
 ; Return
"RTN","PSOREJP2",283,0)
 ;   The calculated suspense date  
"RTN","PSOREJP2",284,0)
 ;
"RTN","PSOREJP2",285,0)
 N DIR,X,Y,DUOUT,DTOUT,DIRUT,DIROUT,LDOS,LDSUP,LDS
"RTN","PSOREJP2",286,0)
 I '$G(RX) Q 0
"RTN","PSOREJP2",287,0)
 I $G(FIL)="" Q 0
"RTN","PSOREJP2",288,0)
 I '$G(COB) S COB=1
"RTN","PSOREJP2",289,0)
 ;
"RTN","PSOREJP2",290,0)
 ; For the original fill, get the default DOS/Days Supply by getting most recent DOS from 
"RTN","PSOREJP2",291,0)
 ;   the other RXs within the last 120 days for the same patient and drug
"RTN","PSOREJP2",292,0)
 ; Reference to ^PS(55 supported by IA #2228
"RTN","PSOREJP2",293,0)
 S LDOS="",LDS=""
"RTN","PSOREJP2",294,0)
 I FIL=0 D
"RTN","PSOREJP2",295,0)
 . N PAT,DRUG,EXPDT,RX1,DRUG1,FL,X1,X2
"RTN","PSOREJP2",296,0)
 . S PAT=$P($G(^PSRX(RX,0)),U,2),DRUG=$P($G(^PSRX(RX,0)),U,6)
"RTN","PSOREJP2",297,0)
 . I 'PAT!'DRUG Q
"RTN","PSOREJP2",298,0)
 . S EXPDT=$$FMADD^XLFDT(DT,-121)
"RTN","PSOREJP2",299,0)
 . F  S EXPDT=$O(^PS(55,PAT,"P","A",EXPDT)) Q:'EXPDT  D
"RTN","PSOREJP2",300,0)
 .. S RX1="" F  S RX1=$O(^PS(55,PAT,"P","A",EXPDT,RX1)) Q:'RX1  I RX'=RX1 D
"RTN","PSOREJP2",301,0)
 ... S DRUG1=$P($G(^PSRX(+RX1,0)),U,6)
"RTN","PSOREJP2",302,0)
 ... I DRUG'=DRUG1 Q
"RTN","PSOREJP2",303,0)
 ... S FL=$$LSTRFL^PSOBPSU1(RX1),X1="",X2=""
"RTN","PSOREJP2",304,0)
 ... D GETDAT^BPSBUTL(RX1,FL,1,.X1,.X2) ;IA #4719
"RTN","PSOREJP2",305,0)
 ... I X1>LDOS S LDOS=X1,LDS=X2
"RTN","PSOREJP2",306,0)
 ;
"RTN","PSOREJP2",307,0)
 ; For a refill, get the default DOS and Days Supply from the earlier fill number
"RTN","PSOREJP2",308,0)
 I FIL>0 D 
"RTN","PSOREJP2",309,0)
 . N FL
"RTN","PSOREJP2",310,0)
 . S FL=+$O(^PSRX(RX,1,FIL),-1)
"RTN","PSOREJP2",311,0)
 . D GETDAT^BPSBUTL(RX,FL,COB,.LDOS,.LDS) ;IA #4719
"RTN","PSOREJP2",312,0)
 ;
"RTN","PSOREJP2",313,0)
 ; Prompt for Last DOS
"RTN","PSOREJP2",314,0)
 S DIR(0)="D",DIR("A")="LAST DATE OF SERVICE"
"RTN","PSOREJP2",315,0)
 I LDOS S DIR("B")=$$FMTE^XLFDT($G(LDOS))
"RTN","PSOREJP2",316,0)
 D ^DIR
"RTN","PSOREJP2",317,0)
 I $D(DIRUT) W !,"ACTION NOT TAKEN!" Q 0
"RTN","PSOREJP2",318,0)
 S LDOS=Y W "  ("_$$FMTE^XLFDT($G(LDOS))_")"
"RTN","PSOREJP2",319,0)
 ;
"RTN","PSOREJP2",320,0)
 ; Convert Last Days Supply from NCPDP format to numeric and prompt
"RTN","PSOREJP2",321,0)
 S LDSUP=$E($G(LDS),3,5)
"RTN","PSOREJP2",322,0)
 K DIR
"RTN","PSOREJP2",323,0)
 S DIR(0)="N",DIR("A")="LAST DAYS SUPPLY"
"RTN","PSOREJP2",324,0)
 I LDSUP]"" S DIR("B")=+LDSUP
"RTN","PSOREJP2",325,0)
 D ^DIR
"RTN","PSOREJP2",326,0)
 I $D(DIRUT) W !,"ACTION NOT TAKEN!" Q 0
"RTN","PSOREJP2",327,0)
 ;
"RTN","PSOREJP2",328,0)
 ; Calculate the suspense date to be Last DOS plus 3/4 of the Last Days Supply
"RTN","PSOREJP2",329,0)
 ; Fractions are rounded up
"RTN","PSOREJP2",330,0)
 S LDSUP=Y*.75
"RTN","PSOREJP2",331,0)
 S:LDSUP["." LDSUP=(LDSUP+1)\1
"RTN","PSOREJP2",332,0)
 Q $$FMADD^XLFDT(LDOS,LDSUP)
"RTN","PSOREJP3")
0^6^B113483777^B113373176
"RTN","PSOREJP3",1,0)
PSOREJP3 ;ALB/SS - Third Party Reject Display Screen - Comments ;10/27/06
"RTN","PSOREJP3",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**260,287,289,290,358,359,385,403**;DEC 1997;Build 9
"RTN","PSOREJP3",3,0)
 ;
"RTN","PSOREJP3",4,0)
COM ; Builds the Comments section in the Reject Display Screen
"RTN","PSOREJP3",5,0)
 I +$O(^PSRX(RX,"REJ",REJ,"COM",0))=0 Q
"RTN","PSOREJP3",6,0)
 D SETLN^PSOREJP1()
"RTN","PSOREJP3",7,0)
 D SETLN^PSOREJP1("COMMENTS",1,1)
"RTN","PSOREJP3",8,0)
 N DIWL,DIWR,LNCNT,MAXLN,PSL
"RTN","PSOREJP3",9,0)
 N I,X,PSI,Y,LAST,PSOCOM,TXTLN
"RTN","PSOREJP3",10,0)
 S PSI=999999
"RTN","PSOREJP3",11,0)
 F  S PSI=$O(^PSRX(RX,"REJ",REJ,"COM",PSI),-1) Q:+PSI=0  D
"RTN","PSOREJP3",12,0)
 . S PSCOM=$$GET1^DIQ(52.2551,PSI_","_REJ_","_RX,.01)_" - "
"RTN","PSOREJP3",13,0)
 . S PSCOM=PSCOM_$$GET1^DIQ(52.2551,PSI_","_REJ_","_RX,2)
"RTN","PSOREJP3",14,0)
 . S PSCOM=PSCOM_" ("_$$GET1^DIQ(52.2551,PSI_","_REJ_","_RX,1)_")"
"RTN","PSOREJP3",15,0)
 . ;display comment
"RTN","PSOREJP3",16,0)
 . K ^UTILITY($J,"W") S X=PSCOM,DIWL=1,DIWR=78 D ^DIWP
"RTN","PSOREJP3",17,0)
 . F PSL=1:1 Q:('$D(^UTILITY($J,"W",1,PSL,0)))  D
"RTN","PSOREJP3",18,0)
 . . S LAST=0 I '$D(^UTILITY($J,"W",1,PSL+1)),'$O(^PSRX(RX,"REJ",REJ,"COM",PSI),-1) S LAST=1
"RTN","PSOREJP3",19,0)
 . . S TXTLN=$G(^UTILITY($J,"W",1,PSL,0))
"RTN","PSOREJP3",20,0)
 . . D SETLN^PSOREJP1($S(PSL=1:"- ",1:"  ")_TXTLN,0,$S(LAST:1,1:0),1)
"RTN","PSOREJP3",21,0)
 K ^UTILITY($J,"W")
"RTN","PSOREJP3",22,0)
 Q
"RTN","PSOREJP3",23,0)
 ;
"RTN","PSOREJP3",24,0)
ADDCOM ; - Add comment worklist action
"RTN","PSOREJP3",25,0)
 N PSCOM
"RTN","PSOREJP3",26,0)
 D FULL^VALM1
"RTN","PSOREJP3",27,0)
 S PSCOM=$$COMMENT("Comment: ",150)
"RTN","PSOREJP3",28,0)
 I $L(PSCOM)>0,PSCOM'["^" D
"RTN","PSOREJP3",29,0)
 . D SAVECOM(RX,REJ,PSCOM) ;save the comment
"RTN","PSOREJP3",30,0)
 . D INIT^PSOREJP1 ;update screen
"RTN","PSOREJP3",31,0)
 S VALMBCK="R"
"RTN","PSOREJP3",32,0)
 Q
"RTN","PSOREJP3",33,0)
 ;
"RTN","PSOREJP3",34,0)
 ;Enter a comment
"RTN","PSOREJP3",35,0)
 ;PSOTR  -prompt string
"RTN","PSOREJP3",36,0)
 ;PSMLEN -maxlen
"RTN","PSOREJP3",37,0)
 ;returns:
"RTN","PSOREJP3",38,0)
 ; "^" - if user chose to quit 
"RTN","PSOREJP3",39,0)
 ; "" - nothing entered or input has been discarded
"RTN","PSOREJP3",40,0)
 ; otherwise - comment's text
"RTN","PSOREJP3",41,0)
COMMENT(PSOTR,PSMLEN) ;*/
"RTN","PSOREJP3",42,0)
 N DIR,DTOUT,DUOUT,PSQ
"RTN","PSOREJP3",43,0)
 I '$D(PSOTR) S PSOTR="Comment "
"RTN","PSOREJP3",44,0)
 I '$D(PSMLEN) S PSMLEN=150
"RTN","PSOREJP3",45,0)
 S DIR(0)="FA^1:150"
"RTN","PSOREJP3",46,0)
 S DIR("A")=PSOTR
"RTN","PSOREJP3",47,0)
 S DIR("?")="Enter a free text comment up to 150 characters long."
"RTN","PSOREJP3",48,0)
 S PSQ=0
"RTN","PSOREJP3",49,0)
 F  D  Q:+PSQ'=0
"RTN","PSOREJP3",50,0)
 . W ! D ^DIR
"RTN","PSOREJP3",51,0)
 . I $D(DUOUT)!($D(DTOUT)) S PSQ=-1 Q
"RTN","PSOREJP3",52,0)
 . I $L(Y)'>PSMLEN S PSQ=1 Q
"RTN","PSOREJP3",53,0)
 . W !!,"Enter a free text comment up to 150 characters long.",!
"RTN","PSOREJP3",54,0)
 . S DIR("B")=$E(Y,1,PSMLEN)
"RTN","PSOREJP3",55,0)
 Q:PSQ<0 "^"
"RTN","PSOREJP3",56,0)
 Q:$L(Y)=0 ""
"RTN","PSOREJP3",57,0)
 S PSQ=$$YESNO("Confirm","YES")
"RTN","PSOREJP3",58,0)
 I PSQ=-1 Q "^"
"RTN","PSOREJP3",59,0)
 I PSQ=0 Q ""
"RTN","PSOREJP3",60,0)
 Q Y
"RTN","PSOREJP3",61,0)
 ;
"RTN","PSOREJP3",62,0)
 ; Ask
"RTN","PSOREJP3",63,0)
 ; Input:
"RTN","PSOREJP3",64,0)
 ;  PSQSTR - question
"RTN","PSOREJP3",65,0)
 ;  PSDFL - default answer
"RTN","PSOREJP3",66,0)
 ; Output: 
"RTN","PSOREJP3",67,0)
 ; 1 YES
"RTN","PSOREJP3",68,0)
 ; 0 NO
"RTN","PSOREJP3",69,0)
 ; -1 if cancelled
"RTN","PSOREJP3",70,0)
YESNO(PSQSTR,PSDFL) ; Default - YES
"RTN","PSOREJP3",71,0)
 N DIR,Y,DUOUT
"RTN","PSOREJP3",72,0)
 S DIR(0)="Y"
"RTN","PSOREJP3",73,0)
 S DIR("A")=PSQSTR
"RTN","PSOREJP3",74,0)
 S:$L($G(PSDFL)) DIR("B")=PSDFL
"RTN","PSOREJP3",75,0)
 W ! D ^DIR
"RTN","PSOREJP3",76,0)
 Q $S($G(DUOUT)!$G(DUOUT)!(Y="^"):-1,1:Y)
"RTN","PSOREJP3",77,0)
 ;
"RTN","PSOREJP3",78,0)
 ;Save comment
"RTN","PSOREJP3",79,0)
SAVECOM(PSRXIEN,PSREJIEN,PSCOMNT,DATETIME,USER) ;
"RTN","PSOREJP3",80,0)
 N PSREC,PSDA,PSERR
"RTN","PSOREJP3",81,0)
 I '$G(DATETIME) D NOW^%DTC S DATETIME=%
"RTN","PSOREJP3",82,0)
 I '$G(USER) S USER=DUZ
"RTN","PSOREJP3",83,0)
 D INSITEM(52.2551,PSRXIEN,PSREJIEN,DATETIME)
"RTN","PSOREJP3",84,0)
 S PSREC=$O(^PSRX(PSRXIEN,"REJ",PSREJIEN,"COM","B",DATETIME,0))
"RTN","PSOREJP3",85,0)
 I PSREC>0 D
"RTN","PSOREJP3",86,0)
 . S PSDA(52.2551,PSREC_","_PSREJIEN_","_PSRXIEN_",",1)=USER
"RTN","PSOREJP3",87,0)
 . S PSDA(52.2551,PSREC_","_PSREJIEN_","_PSRXIEN_",",2)=$G(PSCOMNT)
"RTN","PSOREJP3",88,0)
 . D FILE^DIE("","PSDA","PSERR")
"RTN","PSOREJP3",89,0)
 Q
"RTN","PSOREJP3",90,0)
 ;
"RTN","PSOREJP3",91,0)
 ;/**
"RTN","PSOREJP3",92,0)
 ;PSSFILE - subfile# (52.2551) for comment
"RTN","PSOREJP3",93,0)
 ;PSIEN - ien for file in which the new subfile entry will be inserted
"RTN","PSOREJP3",94,0)
 ;PSVAL01 - .01 value for the new entry
"RTN","PSOREJP3",95,0)
INSITEM(PSSFILE,PSIEN0,PSIEN1,PSVAL01) ;*/
"RTN","PSOREJP3",96,0)
 N PSSSI,PSIENS,PSFDA,PSER
"RTN","PSOREJP3",97,0)
 S PSIENS="+1,"_PSIEN1_","_PSIEN0_","
"RTN","PSOREJP3",98,0)
 S PSFDA(PSSFILE,PSIENS,.01)=PSVAL01
"RTN","PSOREJP3",99,0)
 D UPDATE^DIE("","PSFDA","PSSSI","PSER")
"RTN","PSOREJP3",100,0)
 I $D(PSER) D BMES^XPDUTL(PSER("DIERR",1,"TEXT",1))
"RTN","PSOREJP3",101,0)
 Q
"RTN","PSOREJP3",102,0)
 ;
"RTN","PSOREJP3",103,0)
PRINT(RX,RFL) ; Print Label for specific Rx/Fill
"RTN","PSOREJP3",104,0)
 I '$G(RX) Q
"RTN","PSOREJP3",105,0)
 I $G(RFL)="" Q
"RTN","PSOREJP3",106,0)
 ;
"RTN","PSOREJP3",107,0)
 ; Some of these variables are used by LBL^PSOLSET but they are newed here
"RTN","PSOREJP3",108,0)
 N PPL,PSOSITE,PSOPAR,PSOSYS,PSOBARS,PSOBAR0,PSOBAR1,PSOIOS,PSOBFLAG,PSOCLBL
"RTN","PSOREJP3",109,0)
 N PSOQUIT,PSOPIOST,PSOLTEST,PSOTLBL,PSORXT
"RTN","PSOREJP3",110,0)
 N DFN,PDUZ,RXFL,REPRINT,REJLBL,DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","PSOREJP3",111,0)
 N %ZIS,IOP,POP,ZTSK,ZTRTN,ZTIO,ZTDESC,ZTSAVE,ZTDTH,VAR
"RTN","PSOREJP3",112,0)
 ;
"RTN","PSOREJP3",113,0)
 ; Set the default label printer.  We need to new it so we don't change the value that was
"RTN","PSOREJP3",114,0)
 ;   set by PSOLSET when the user first logged into OP so need to do a bit of work to new it and  
"RTN","PSOREJP3",115,0)
 ;   reset it before the call to LBL^PSOLSET.
"RTN","PSOREJP3",116,0)
 I $G(PSOLAP)]"" S PSOTLBL=PSOLAP N PSOLAP S PSOLAP=PSOTLBL,PSOCLBL=1
"RTN","PSOREJP3",117,0)
 E  N PSOLAP S PSOCLBL=""
"RTN","PSOREJP3",118,0)
 ;
"RTN","PSOREJP3",119,0)
 ; Check if a label has already been printed and set REPRINT flag.
"RTN","PSOREJP3",120,0)
 S REJLBL=0 F  S REJLBL=$O(^PSRX(RX,"L",REJLBL)) Q:'REJLBL  I +$$GET1^DIQ(52.032,REJLBL_","_RX,1,"I")=RFL S REPRINT=1 Q
"RTN","PSOREJP3",121,0)
 ;
"RTN","PSOREJP3",122,0)
 ; Define required variables
"RTN","PSOREJP3",123,0)
 S PSOSITE=+$$RXSITE^PSOBPSUT(RX,RFL),PSOPAR=$G(^PS(59,PSOSITE,1))
"RTN","PSOREJP3",124,0)
 S DFN=$$GET1^DIQ(52,RX,2,"I"),PDUZ=DUZ,PSOSYS=$G(^PS(59.7,1,40.1))
"RTN","PSOREJP3",125,0)
 S PPL=RX I RFL S RXFL(RX)=RFL
"RTN","PSOREJP3",126,0)
 ;
"RTN","PSOREJP3",127,0)
 ; Get label print device and check alignment
"RTN","PSOREJP3",128,0)
 W ! S PSOBFLAG=1 D LBL^PSOLSET I $G(PSOQUIT) Q
"RTN","PSOREJP3",129,0)
 I $G(PSOLAP)="" W $C(7),!!,"No printer defined" K DIR S DIR(0)="E",DIR("A")="Enter RETURN to continue" D ^DIR Q
"RTN","PSOREJP3",130,0)
 ;
"RTN","PSOREJP3",131,0)
 ; Call %ZIS to get device characteristics w/o reopening the printer. 
"RTN","PSOREJP3",132,0)
 ; We need to do this to check if queuing is forced for this device
"RTN","PSOREJP3",133,0)
 ; Not checking the POP variable.  If we don't get the device here, we will fall through to the 
"RTN","PSOREJP3",134,0)
 ;   foreground process and try again
"RTN","PSOREJP3",135,0)
 S IOP=PSOLAP,%ZIS="QN" D ^%ZIS
"RTN","PSOREJP3",136,0)
 ;
"RTN","PSOREJP3",137,0)
 ; If background printer, queue the job
"RTN","PSOREJP3",138,0)
 I $D(IO("Q")) D  Q
"RTN","PSOREJP3",139,0)
 . S ZTRTN="DQ^PSOLBL",ZTDTH=$H,ZTIO=PSOLAP
"RTN","PSOREJP3",140,0)
 . F VAR="PSOSYS","DFN","PSOPAR","PDUZ","PCOMX","PSOLAP","PPL","PSOSITE","RXY","PSOSUSPR","PSOBARS","PSOBAR1","PSOBAR0","PSODELE","PSOPULL","PSTAT","PSODBQ","PSOEXREP","PSOTREP","REPRINT" S:$D(@VAR) ZTSAVE(VAR)=""
"RTN","PSOREJP3",141,0)
 . S ZTSAVE("PSORX(")="",ZTSAVE("RXRP(")="",ZTSAVE("RXPR(")="",ZTSAVE("RXRS(")="",ZTSAVE("RXFL(")="",ZTSAVE("PCOMH(")=""
"RTN","PSOREJP3",142,0)
 . S ZTDESC="OUTPATIENT PHARMACY REJECT WORKLIST LABEL PRINT"
"RTN","PSOREJP3",143,0)
 . D ^%ZISC,^%ZTLOAD
"RTN","PSOREJP3",144,0)
 . W !!,"Label ",$S('$D(ZTSK):"NOT ",1:""),"queued to print",! I '$D(ZTSK) W $C(7) K DIR S DIR(0)="E",DIR("A")="Enter RETURN to continue" D ^DIR
"RTN","PSOREJP3",145,0)
 ;
"RTN","PSOREJP3",146,0)
 ; If we gotten this far, open the device and print the label in the foreground
"RTN","PSOREJP3",147,0)
 ; We also need to preserve the PSORX array, which gets killed by DQ^PSOLBL
"RTN","PSOREJP3",148,0)
 K %ZIS S IOP=PSOLAP D ^%ZIS
"RTN","PSOREJP3",149,0)
 I POP D ^%ZISC W $C(7),!!,"Printer is busy - NO label printed" K DIR S DIR(0)="E",DIR("A")="Enter RETURN to continue" D ^DIR Q
"RTN","PSOREJP3",150,0)
 K PSORXT M PSORXT=PSORX
"RTN","PSOREJP3",151,0)
 D DQ^PSOLBL,^%ZISC
"RTN","PSOREJP3",152,0)
 K PSORX M PSORX=PSORXT
"RTN","PSOREJP3",153,0)
 Q
"RTN","PSOREJP3",154,0)
 ;
"RTN","PSOREJP3",155,0)
RXINFO(RX,FILL,LINE,REJ) ; Returns header displayable Rx Information
"RTN","PSOREJP3",156,0)
 N TXT,RXINFO,LBL,CMOP,DRG,PSOET
"RTN","PSOREJP3",157,0)
 I LINE=1 D
"RTN","PSOREJP3",158,0)
 . S RXINFO="Rx#      : "_$$GET1^DIQ(52,RX,.01)_"/"_FILL
"RTN","PSOREJP3",159,0)
 . ;cnf, PSO*7*358, add PSOET logic for TRICARE/CHAMPVA non-billable
"RTN","PSOREJP3",160,0)
 . S PSOET=$$PSOET(RX,FILL)
"RTN","PSOREJP3",161,0)
 . S $E(RXINFO,27)="ECME#: "_$S(PSOET:"",1:$$ECMENUM^PSOBPSU2(RX,FILL))
"RTN","PSOREJP3",162,0)
 . S $E(RXINFO,49)="Date of Service: "_$S(PSOET:"",1:$$FMTE^XLFDT($$DOS^PSOBPSU1(RX,FILL)))
"RTN","PSOREJP3",163,0)
 I LINE=2 D
"RTN","PSOREJP3",164,0)
 . S DRG=$$GET1^DIQ(52,RX,6,"I"),CMOP=$S($D(^PSDRUG("AQ",DRG)):1,1:0)
"RTN","PSOREJP3",165,0)
 . S RXINFO=$S(CMOP:"CMOP ",1:"")_"Drug",$E(RXINFO,10)=": "_$E($$GET1^DIQ(52,RX,6),1,43)
"RTN","PSOREJP3",166,0)
 . S $E(RXINFO,56)="NDC Code: "_$$GETNDC^PSONDCUT(RX,FILL)
"RTN","PSOREJP3",167,0)
 Q $G(RXINFO)
"RTN","PSOREJP3",168,0)
 ;
"RTN","PSOREJP3",169,0)
FILL ;Fill payable TRICARE or CHAMPVA Rx
"RTN","PSOREJP3",170,0)
 N COM,OPNREJ,OPNREJ2,OPNREJ3,DCSTAT,PSOREL
"RTN","PSOREJP3",171,0)
 S:'$G(PSOTRIC) PSOTRIC=$$TRIC^PSOREJP1(RX,FILL,PSOTRIC)  ;cnf, PSO*7*358, add line
"RTN","PSOREJP3",172,0)
 ;cnf, PSO*7*358, don't allow option if TRICARE/CHAMPVA and released, PSOREL is set to the release date
"RTN","PSOREJP3",173,0)
 S PSOREL=0 I PSOTRIC D
"RTN","PSOREJP3",174,0)
 . I 'FILL S PSOREL=+$$GET1^DIQ(52,RX,31,"I")
"RTN","PSOREJP3",175,0)
 . I FILL S PSOREL=+$$GET1^DIQ(52.1,FILL_","_RX,17,"I")
"RTN","PSOREJP3",176,0)
 I PSOREL S VALMSG="Released Rxs may not be filled.",VALMBCK="R" Q
"RTN","PSOREJP3",177,0)
 ;cnf, PSO*7*358, don't allow option if prescription has been discontinued
"RTN","PSOREJP3",178,0)
 ;  12 - DISCONTINUED
"RTN","PSOREJP3",179,0)
 ;  14 - DISCONTINUED BY PROVIDER
"RTN","PSOREJP3",180,0)
 ;  15 - DISCONTINUED (EDIT)
"RTN","PSOREJP3",181,0)
 S DCSTAT=$$GET1^DIQ(52,RX,100,"I")
"RTN","PSOREJP3",182,0)
 I "/12/14/15/"[("/"_DCSTAT_"/") S VALMSG="Discontinued Rxs may not be filled.",VALMBCK="R" Q
"RTN","PSOREJP3",183,0)
 D FULL^VALM1
"RTN","PSOREJP3",184,0)
 I $$CLOSED^PSOREJP1(RX,REJ) D  Q
"RTN","PSOREJP3",185,0)
 . S VALMSG="This Reject is marked resolved!",VALMBCK="R"
"RTN","PSOREJP3",186,0)
 ;cnf, PSO*7*358
"RTN","PSOREJP3",187,0)
 S COM=""
"RTN","PSOREJP3",188,0)
 I 'PSOTRIC&($$STATUS^PSOBPSUT(RX,FILL)'["PAYABLE") S VALMSG="Only Rxs with an E PAYABLE status may be filled.",VALMBCK="R" Q
"RTN","PSOREJP3",189,0)
 I PSOTRIC&($$STATUS^PSOBPSUT(RX,FILL)'["PAYABLE") D FILLTR I $L($G(VALMSG)_$G(VALMBCK)) Q  ;cnf, PSO*7*358
"RTN","PSOREJP3",190,0)
 S:COM="" COM="AUTOMATICALLY CLOSED"  ;cnf, PSO*7*358, add condition
"RTN","PSOREJP3",191,0)
 S (OPNREJ,OPNREJ2,OPNREJ3)=""
"RTN","PSOREJP3",192,0)
 S OPNREJ2=0 F  S OPNREJ2=$O(^PSRX(RX,"REJ",OPNREJ2)) Q:OPNREJ2=""!(OPNREJ2'?1N.N)  S OPNREJ=OPNREJ_","_OPNREJ2
"RTN","PSOREJP3",193,0)
 S OPNREJ=$E(OPNREJ,2,999),OPNREJ2=""
"RTN","PSOREJP3",194,0)
 W !?20,"[Closing all rejections for prescription "_$$GET1^DIQ(52,RX,".01")_":"
"RTN","PSOREJP3",195,0)
 F I=1:1 S OPNREJ2=$P(OPNREJ,",",I) Q:OPNREJ2=""  D
"RTN","PSOREJP3",196,0)
 . S OPNREJ3="",OPNREJ3=$$GET1^DIQ(52.25,OPNREJ2_","_RX,".01")
"RTN","PSOREJP3",197,0)
 . W !?25,OPNREJ3_" - "_$$GET1^DIQ(9002313.93,OPNREJ3,".02")_"..."
"RTN","PSOREJP3",198,0)
 . D CLOSE^PSOREJUT(RX,FILL,OPNREJ2,DUZ,6,COM) W "OK]",!,$C(7) H 1
"RTN","PSOREJP3",199,0)
 I $$PTLBL^PSOREJP2(RX,FILL) D PRINT(RX,FILL)
"RTN","PSOREJP3",200,0)
 S CHANGE=1   ;cnf, PSO*7*358, remove S VALMBCK="R" so user goes back to selection list
"RTN","PSOREJP3",201,0)
 Q
"RTN","PSOREJP3",202,0)
 ;
"RTN","PSOREJP3",203,0)
PSOCOB(RX,FILL,REJ) ; Returns RXCOB indicator for Worklist
"RTN","PSOREJP3",204,0)
 N DATA1
"RTN","PSOREJP3",205,0)
 D GET^PSOREJU2(RX,FILL,.DATA1,REJ,1)
"RTN","PSOREJP3",206,0)
 I $G(DATA1(REJ,"COB"))="PRIMARY"  Q 1
"RTN","PSOREJP3",207,0)
 I $G(DATA1(REJ,"COB"))=""  Q 1
"RTN","PSOREJP3",208,0)
 Q 2
"RTN","PSOREJP3",209,0)
 ;
"RTN","PSOREJP3",210,0)
DC ;Discontinue TRICARE Rx
"RTN","PSOREJP3",211,0)
 N ACTION S ACTION="D"
"RTN","PSOREJP3",212,0)
 D FULL^VALM1
"RTN","PSOREJP3",213,0)
 S ACTION=$$DC^PSOREJU1(RX,ACTION)
"RTN","PSOREJP3",214,0)
 I ACTION="Q"!(ACTION="^") S VALMSG="NO ACTION TAKEN.",VALMBCK="R" Q
"RTN","PSOREJP3",215,0)
 S CHANGE=1
"RTN","PSOREJP3",216,0)
 Q
"RTN","PSOREJP3",217,0)
 ;
"RTN","PSOREJP3",218,0)
FILLTR ;TRICARE/CHAMPVA specific logic  ;cnf, PSO*7*358
"RTN","PSOREJP3",219,0)
 ;COM is not new'd so the variable can be used in FILL tag
"RTN","PSOREJP3",220,0)
 N CONT,PSOET,PSQSTR
"RTN","PSOREJP3",221,0)
 ;
"RTN","PSOREJP3",222,0)
FILLTR2 ;Use for looping if user enters ^ in required comment field  ;cnf, PSO*7*358
"RTN","PSOREJP3",223,0)
 ;
"RTN","PSOREJP3",224,0)
 ;if TRICARE/CHAMPVA, not payable, and no security key, quit
"RTN","PSOREJP3",225,0)
 ;reference to ^XUSEC( supported by IA 10076
"RTN","PSOREJP3",226,0)
 I '$D(^XUSEC("PSO TRICARE/CHAMPVA",DUZ)) S VALMSG="Action Requires <PSO TRICARE/CHAMPVA> security key",VALMBCK="R" Q
"RTN","PSOREJP3",227,0)
 ;
"RTN","PSOREJP3",228,0)
 ;if TRICARE/CHAMPVA, not payable, and user has security key, prompt to continue or not
"RTN","PSOREJP3",229,0)
 S PSQSTR="You are bypassing claims processing. Do you wish to continue"
"RTN","PSOREJP3",230,0)
 S CONT=$$YESNO(PSQSTR,"No")
"RTN","PSOREJP3",231,0)
 I (CONT=-1)!('CONT) S VALMSG="NO ACTION TAKEN.",VALMBCK="R" Q
"RTN","PSOREJP3",232,0)
 ;
"RTN","PSOREJP3",233,0)
 ;check for valid electronic signature
"RTN","PSOREJP3",234,0)
 I '$$SIG^PSOREJU1() S VALMBCK="R" Q                               ;quit if no valid electronic signature
"RTN","PSOREJP3",235,0)
 ;
"RTN","PSOREJP3",236,0)
 ;prompt user for required TRICARE/CHAMPVA Justification
"RTN","PSOREJP3",237,0)
 S COM=$$TCOM(RX,FILL) G:COM="^" FILLTR2                    ;loop back to "continue?" question if ^ entry
"RTN","PSOREJP3",238,0)
 ;
"RTN","PSOREJP3",239,0)
 ;audit log
"RTN","PSOREJP3",240,0)
 S PSOET=$$PSOET(RX,FILL)
"RTN","PSOREJP3",241,0)
 D AUDIT^PSOTRI(RX,FILL,,COM,$S(PSOET:"N",1:"R"),$S($G(PSOTRIC)=1:"T",$G(PSOTRIC)=2:"C",1:""))
"RTN","PSOREJP3",242,0)
 Q
"RTN","PSOREJP3",243,0)
 ;
"RTN","PSOREJP3",244,0)
TCOM(RX,RFL) ; - Ask for TRICARE or CHAMPVA Justification
"RTN","PSOREJP3",245,0)
 N COM,DIR,DIRUT,X
"RTN","PSOREJP3",246,0)
 W ! S DIR(0)="F^3:100" S DIR("A")=$$ELIGDISP^PSOREJP1(RX,RFL)_" Justification" D ^DIR
"RTN","PSOREJP3",247,0)
 S COM=X I $D(DIRUT) S COM="^"
"RTN","PSOREJP3",248,0)
 Q COM
"RTN","PSOREJP3",249,0)
 ;
"RTN","PSOREJP3",250,0)
PSOET(RX,FILL) ; Returns flag for TRICARE or CHAMPVA non-billable and no claim submitted
"RTN","PSOREJP3",251,0)
 ; Return 1 if rejection code is eT or eC (pseudo-reject code)
"RTN","PSOREJP3",252,0)
 ;        0 otherwise
"RTN","PSOREJP3",253,0)
 ;
"RTN","PSOREJP3",254,0)
 I '$G(RX) Q 0
"RTN","PSOREJP3",255,0)
 N X,TRIREJCD
"RTN","PSOREJP3",256,0)
 S X=0
"RTN","PSOREJP3",257,0)
 S TRIREJCD=$T(TRIREJCD+1),TRIREJCD=$P(TRIREJCD,";;",2)
"RTN","PSOREJP3",258,0)
 S X=$$FIND^PSOREJUT(RX,$G(FILL),,TRIREJCD)
"RTN","PSOREJP3",259,0)
 Q X
"RTN","PSOREJP3",260,0)
 ;
"RTN","PSOREJP3",261,0)
TRIREJCD ;TRICARE or CHAMPVA Reject Code, non-billable Rx   ;cnf, PSO*7*358
"RTN","PSOREJP3",262,0)
 ;;eT,eC;;TRICARE or CHAMPVA pseudo reject codes referenced in ^PSOREJP3, ^PSOREJU4
"RTN","PSOREJP3",263,0)
 Q
"RTN","PSOREJP3",264,0)
 ;
"RTN","PSOREJP3",265,0)
SEND(OVRCOD,CLA,PA) ; - Sends Claim to ECME and closes Reject
"RTN","PSOREJP3",266,0)
 N DIR,RESP,ALTXT,COM,SMA
"RTN","PSOREJP3",267,0)
 S DIR(0)="Y",DIR("A")="     Confirm",DIR("B")="YES"
"RTN","PSOREJP3",268,0)
 S DIR("A",1)="     When you confirm, a new claim will be submitted for"
"RTN","PSOREJP3",269,0)
 S DIR("A",2)="     the prescription and this REJECT will be marked"
"RTN","PSOREJP3",270,0)
 S DIR("A",3)="     resolved."
"RTN","PSOREJP3",271,0)
 S DIR("A",4)=" "
"RTN","PSOREJP3",272,0)
 W ! D ^DIR I $G(Y)=0!$D(DIRUT) S VALMBCK="R" Q
"RTN","PSOREJP3",273,0)
 S SMA=0 I $G(OVRCOD)]"",$G(CLA)]"",$G(PA)]"" S SMA=1
"RTN","PSOREJP3",274,0)
 S ALTXT=""
"RTN","PSOREJP3",275,0)
 I 'SMA D
"RTN","PSOREJP3",276,0)
 . S ALTXT="REJECT WORKLIST"
"RTN","PSOREJP3",277,0)
 . S:$G(OVRCOD)'="" ALTXT=ALTXT_"-DUR OVERRIDE CODES("_$TR(OVRCOD,"^","/")_")"
"RTN","PSOREJP3",278,0)
 . S:$G(CLA)]"" ALTXT=ALTXT_"-(CLARIF. CODE="_CLA_")"
"RTN","PSOREJP3",279,0)
 . S:$G(PA)]"" ALTXT=ALTXT_"-(PRIOR AUTH.="_$TR(PA,"^","/")_")"
"RTN","PSOREJP3",280,0)
 D ECMESND^PSOBPSU1(RX,FILL,,"ED",$$GETNDC^PSONDCUT(RX,FILL),,,$G(OVRCOD),,.RESP,,ALTXT,$G(CLA),$G(PA),$$PSOCOB^PSOREJP3(RX,FILL,REJ))
"RTN","PSOREJP3",281,0)
 I $G(RESP) D  Q
"RTN","PSOREJP3",282,0)
 . W !!?10,"Claim could not be submitted. Please try again later!"
"RTN","PSOREJP3",283,0)
 . W !,?10,"Reason: ",$S($P(RESP,"^",2)="":"UNKNOWN",1:$P(RESP,"^",2)),$C(7) H 2
"RTN","PSOREJP3",284,0)
 I $$PTLBL^PSOREJP2(RX,FILL) D PRINT(RX,FILL)
"RTN","PSOREJP3",285,0)
 N PSOTRIC S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(RX,FILL,PSOTRIC)
"RTN","PSOREJP3",286,0)
 I $$GET1^DIQ(52,RX,100,"I")=5&(PSOTRIC) D
"RTN","PSOREJP3",287,0)
 . Q:$$STATUS^PSOBPSUT(RX,FILL)'["PAYABLE"
"RTN","PSOREJP3",288,0)
 . N XXX S XXX=""
"RTN","PSOREJP3",289,0)
 . W !,"This prescription can be pulled early from suspense or the label will print"
"RTN","PSOREJP3",290,0)
 . W !,"when PRINT FROM SUSPENSE occurs.",!
"RTN","PSOREJP3",291,0)
 . R !,"Press enter to continue... ",XXX:60
"RTN","PSOREJP3",292,0)
 I $D(PSOSTFLT),PSOSTFLT'="B" S CHANGE=1
"RTN","PSOREJP3",293,0)
 Q
"RTN","PSOREJU1")
0^1^B89732614^B85284158
"RTN","PSOREJU1",1,0)
PSOREJU1 ;BIRM/MFR - BPS (ECME) - Clinical Rejects Utilities (1) ;10/15/04
"RTN","PSOREJU1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,247,260,287,289,358,359,385,403**;DEC 1997;Build 9
"RTN","PSOREJU1",3,0)
 ;Reference to File 9002313.21 - BPS NCPDP PROFESSIONAL SERVICE CODE supported by IA 4712
"RTN","PSOREJU1",4,0)
 ;Reference to File 9002313.22 - BPS NCPDP RESULT OF SERVICE CODE supported by IA 4713
"RTN","PSOREJU1",5,0)
 ;Reference to File 9002313.23 - BPS NCPDP REASON FOR SERVICE CODE supported by IA 4714
"RTN","PSOREJU1",6,0)
 ;Reference to File 9002313.25 - BPS NCPDP SUBMISSION CLARIFICATION CODE supported by IA 5064
"RTN","PSOREJU1",7,0)
 ;Reference to File 9002313.26 - BPS NCPDP PRIOR AUTHORIZATION TYPE CODE supported by IA 5585 
"RTN","PSOREJU1",8,0)
 ;Reference to File 200 - NEW PERSON supported by IA 10060
"RTN","PSOREJU1",9,0)
 ;Reference to SIG^XUSESIG supported by IA 10050
"RTN","PSOREJU1",10,0)
 ;
"RTN","PSOREJU1",11,0)
ACTION(RX,REJ,OPTS,DEF) ;
"RTN","PSOREJU1",12,0)
 ; Input:  (r) RX   - Rx IEN (#52) 
"RTN","PSOREJU1",13,0)
 ;         (r) REJ  - REJECT ID (IEN)
"RTN","PSOREJU1",14,0)
 ;         (r) OPTS - Available options ("QIDO" for QUIT/IGNORE/DISCONTINUE/OVERRIDE)
"RTN","PSOREJU1",15,0)
 ;         (o) DEF  - Default Option ("O", "I" or "Q")
"RTN","PSOREJU1",16,0)
 ; Output: ACTION: "I^Comments" - Ignore Reject
"RTN","PSOREJU1",17,0)
 ;                 "O^COD1^COD2^COD3" - Override with the Override codes COD1(Prof.),COD2(Reason) and COD3(Result)
"RTN","PSOREJU1",18,0)
 ;                 "D" - Discontinue
"RTN","PSOREJU1",19,0)
 ;                 "Q" - Quit
"RTN","PSOREJU1",20,0)
 ;                 "^" - Up-arrow entered or timed out
"RTN","PSOREJU1",21,0)
 ;
"RTN","PSOREJU1",22,0)
 N ACTION,COM,OVR,X,DIR,DIRUT,Y
"RTN","PSOREJU1",23,0)
 ;         
"RTN","PSOREJU1",24,0)
 I '$G(RX)!'$G(REJ) Q
"RTN","PSOREJU1",25,0)
 I '$G(PSONBILL) Q:'$D(^PSRX(RX,"REJ",REJ))
"RTN","PSOREJU1",26,0)
 ;
"RTN","PSOREJU1",27,0)
 ; - Display DUR/79 REJECT information
"RTN","PSOREJU1",28,0)
 D DISPLAY^PSOREJU3(RX,REJ)
"RTN","PSOREJU1",29,0)
 ;
"RTN","PSOREJU1",30,0)
ASK K ACTION,DIR,DIRUT
"RTN","PSOREJU1",31,0)
 S DIR(0)="SO^",DIR("A")=""
"RTN","PSOREJU1",32,0)
 S:(OPTS["O") DIR(0)=DIR(0)_"O:(O)VERRIDE - RESUBMIT WITH OVERRIDE CODES;",DIR("A")=DIR("A")_"(O)verride,"
"RTN","PSOREJU1",33,0)
 S:(OPTS["I") DIR(0)=DIR(0)_"I:(I)GNORE - FILL Rx WITHOUT CLAIM SUBMISSION;",DIR("A")=DIR("A")_"(I)gnore,"
"RTN","PSOREJU1",34,0)
 S:(OPTS["D") DIR(0)=DIR(0)_"D:(D)iscontinue - DO NOT FILL PRESCRIPTION;",DIR("A")=DIR("A")_"(D)iscontinue,"
"RTN","PSOREJU1",35,0)
 S:(OPTS["Q") DIR(0)=DIR(0)_"Q:(Q)UIT - SEND TO WORKLIST (REQUIRES INTERVENTION);",DIR("A")=DIR("A")_"(Q)uit,"
"RTN","PSOREJU1",36,0)
 S $E(DIR(0),$L(DIR(0)))="",$E(DIR("A"),$L(DIR("A")))="",DIR("??")="^D HELP^PSOREJU2("""_OPTS_""")"
"RTN","PSOREJU1",37,0)
 S:$G(DEF)'="" DIR("B")=DEF D ^DIR I $D(DIRUT) W ! Q "Q"
"RTN","PSOREJU1",38,0)
 ;
"RTN","PSOREJU1",39,0)
 ; - STOP/QUIT Action
"RTN","PSOREJU1",40,0)
 S ACTION=Y I ACTION="Q" Q ACTION
"RTN","PSOREJU1",41,0)
 ;
"RTN","PSOREJU1",42,0)
 ; - IGNORE Action 
"RTN","PSOREJU1",43,0)
 K DIR,DIRUT,X
"RTN","PSOREJU1",44,0)
 ;
"RTN","PSOREJU1",45,0)
 ;PSO*7.0*358, add logic for TRICARE/CHAMPVA ignore
"RTN","PSOREJU1",46,0)
 I PSOTRIC,ACTION="I",'$$CONT W $C(7),!," ACTION NOT TAKEN!",! H 1 G ASK
"RTN","PSOREJU1",47,0)
 ;
"RTN","PSOREJU1",48,0)
 I ACTION="I" S:'PSOTRIC COM=$$COM() S:PSOTRIC COM=$$TCOM^PSOREJP3(RX,RFL) G ASK:COM="^" G ASK:'$$SIG() S ACTION=ACTION_"^"_COM
"RTN","PSOREJU1",49,0)
 ;
"RTN","PSOREJU1",50,0)
 ; - OVERRIDE Action
"RTN","PSOREJU1",51,0)
 I ACTION="O" D  G ASK:OVR="^"
"RTN","PSOREJU1",52,0)
 . S OVR=$$OVR() S ACTION=ACTION_"^"_OVR
"RTN","PSOREJU1",53,0)
 ;
"RTN","PSOREJU1",54,0)
DC1 ;Discontinue
"RTN","PSOREJU1",55,0)
 I ACTION="D" S ACTION=$$DC(RX,ACTION) I $D(DIRUT) S ACTION="D" D DISPLAY^PSOREJU3(RX,REJ) G ASK
"RTN","PSOREJU1",56,0)
 ;
"RTN","PSOREJU1",57,0)
 Q ACTION
"RTN","PSOREJU1",58,0)
 ;
"RTN","PSOREJU1",59,0)
DC(RX,ACTION) ; - Discontinue inside and outside call
"RTN","PSOREJU1",60,0)
 N RXN,MSG,REA,DA,PSCAN,RXNUM
"RTN","PSOREJU1",61,0)
 S DA=RX,RXNUM=""
"RTN","PSOREJU1",62,0)
 ; Variable PSOTRIC is used by NOOR^PSOCAN4 to determine the default for the nature of order prompt
"RTN","PSOREJU1",63,0)
 I '$D(PSOTRIC) N PSOTRIC S PSOTRIC=$$TRIC^PSOREJP1(RX)
"RTN","PSOREJU1",64,0)
 D NOOR^PSOCAN4 I $D(DIRUT) W $C(7)," ACTION NOT TAKEN!",! H 1 S PSORX("DFLG")=1,ACTION="Q" Q ACTION
"RTN","PSOREJU1",65,0)
 D REQ^PSOCAN4 I $D(DIRUT) W $C(7)," ACTION NOT TAKEN!",! H 1 S PSORX("DFLG")=1,ACTION="Q" Q ACTION
"RTN","PSOREJU1",66,0)
 S REA="C",RXNUM=$P(^PSRX(DA,0),"^")
"RTN","PSOREJU1",67,0)
 S MSG="Discontinued "_$S($G(PSOFDR):" from Reject Processing Screen",1:"")
"RTN","PSOREJU1",68,0)
 S PSCAN(RXNUM)=DA_"^C"
"RTN","PSOREJU1",69,0)
 D CAN^PSOCAN
"RTN","PSOREJU1",70,0)
 ;
"RTN","PSOREJU1",71,0)
 ; DMB-12/12/2011 - Removed setting PSOQFLAG.  Also fixed $$GET1 to use internal IEN.  I am not sure
"RTN","PSOREJU1",72,0)
 ; if these next two lines are even needed. It especially seems a bit premature at this point to
"RTN","PSOREJU1",73,0)
 ; remove the RX from the label list when the Rx probably hasn't been added yet.  In addition, PSORXL
"RTN","PSOREJU1",74,0)
 ; has code to remove discontinued RXs from the label list (using the ECME^PSORXL1 call).
"RTN","PSOREJU1",75,0)
 S PSOLST(1)=52_"^"_DA_"^"_$$GET1^DIQ(52,DA,100),ORN=1
"RTN","PSOREJU1",76,0)
 N PSOCKDC S PSOCKDC=1 D ECME^PSORXL1 I '$G(PPL) S PPL=""  ;remove rx from label print
"RTN","PSOREJU1",77,0)
 Q ACTION
"RTN","PSOREJU1",78,0)
 ;
"RTN","PSOREJU1",79,0)
CONT() ;- Ask to continue for bypassing claims processing  ;PSO*7.0*358
"RTN","PSOREJU1",80,0)
 N DIR,DIRUT,Y
"RTN","PSOREJU1",81,0)
 S DIR(0)="Y",DIR("A")="You are bypassing claims processing. Do you wish to continue",DIR("B")="NO"
"RTN","PSOREJU1",82,0)
 D ^DIR I $D(DIRUT) S Y=0
"RTN","PSOREJU1",83,0)
 Q $G(Y)
"RTN","PSOREJU1",84,0)
 ;
"RTN","PSOREJU1",85,0)
SIG() ; - Get electronic signature
"RTN","PSOREJU1",86,0)
 N CODE,X,X1,Y
"RTN","PSOREJU1",87,0)
 S CODE=$P($G(^VA(200,DUZ,20)),U,4),Y=0 I '$L(CODE) D  Q Y
"RTN","PSOREJU1",88,0)
 . W $C(7),!,"You do not have an electronic signature code."
"RTN","PSOREJU1",89,0)
 . W !,"Please contact your IRM office." H 2
"RTN","PSOREJU1",90,0)
 D SIG^XUSESIG S Y=(X1'="")
"RTN","PSOREJU1",91,0)
 Q Y
"RTN","PSOREJU1",92,0)
 ;
"RTN","PSOREJU1",93,0)
COM() ; - Ask for CLOSE comments
"RTN","PSOREJU1",94,0)
 K COM,DIR,DIRUT,X
"RTN","PSOREJU1",95,0)
 W ! S DIR(0)="F^3:100" S DIR("A")="Comments" D ^DIR
"RTN","PSOREJU1",96,0)
 S COM=X I $D(DIRUT) S COM="^"
"RTN","PSOREJU1",97,0)
 Q COM
"RTN","PSOREJU1",98,0)
 ;
"RTN","PSOREJU1",99,0)
OVR() ; - Ask for OVERRIDE codes
"RTN","PSOREJU1",100,0)
 ; Called by ASK above (Reject Notification Screen)
"RTN","PSOREJU1",101,0)
 N COD1,COD2,COD3,DIR,DIRUT W !
"RTN","PSOREJU1",102,0)
 S COD1=$$OVRCOD(1,$$GET1^DIQ(52.25,REJ_","_RX,14)) I COD1="^"!(COD1="") Q "^"
"RTN","PSOREJU1",103,0)
 S COD2=$$OVRCOD(2) I COD2="^" Q COD2
"RTN","PSOREJU1",104,0)
 S COD3=$$OVRCOD(3) I COD3="^" Q COD3
"RTN","PSOREJU1",105,0)
 ;
"RTN","PSOREJU1",106,0)
 D OVRDSP^PSOREJU1(COD1_"^"_COD2_"^"_COD3) W !
"RTN","PSOREJU1",107,0)
 ;
"RTN","PSOREJU1",108,0)
 S DIR(0)="Y",DIR("A")="     Confirm? ",DIR("B")="YES"
"RTN","PSOREJU1",109,0)
 D ^DIR I $G(Y)=0!$D(DIRUT) Q "^"
"RTN","PSOREJU1",110,0)
 ;
"RTN","PSOREJU1",111,0)
 Q (COD1_"^"_COD2_"^"_COD3)
"RTN","PSOREJU1",112,0)
 ;
"RTN","PSOREJU1",113,0)
OVRDSP(LST) ; - Display the Override Codes
"RTN","PSOREJU1",114,0)
 N I W !
"RTN","PSOREJU1",115,0)
 F I=1:1:3 D
"RTN","PSOREJU1",116,0)
 . W !?5,$S(I=1:"Reason for Service Code  : ",I=2:"Professional Service Code: ",1:"Result of Service Code   : ")
"RTN","PSOREJU1",117,0)
 . W $E($$OVRX(I,$P(LST,"^",I)),1,48)
"RTN","PSOREJU1",118,0)
 Q
"RTN","PSOREJU1",119,0)
 ;
"RTN","PSOREJU1",120,0)
CLA() ; - Ask for up to 3 Clarification Codes
"RTN","PSOREJU1",121,0)
 ; Called by SMA^PSOREJP1 (SMA action) and CLA^PSOREJP1 (CLA action)
"RTN","PSOREJU1",122,0)
 N DIC,X,Y,PSOSCC,DTOUT,DUOUT,PSOQ,PSOI,I,DUP
"RTN","PSOREJU1",123,0)
 S DIC(0)="QEAM",DIC=9002313.25,PSOQ=0,PSOSCC=""
"RTN","PSOREJU1",124,0)
 F PSOI=1:1:3 Q:PSOQ  S DIC("A")="Submission Clarification Code "_PSOI_": " D CLADIC
"RTN","PSOREJU1",125,0)
 Q $S(PSOQ=1:"^",1:PSOSCC)
"RTN","PSOREJU1",126,0)
 ;
"RTN","PSOREJU1",127,0)
CLADIC ;
"RTN","PSOREJU1",128,0)
 ; DIC variables, PSOI, PSOSCC, and DUP newed and set by CLA
"RTN","PSOREJU1",129,0)
 D ^DIC
"RTN","PSOREJU1",130,0)
 I ($D(DUOUT))!($D(DTOUT)) S PSOQ=1 Q
"RTN","PSOREJU1",131,0)
 I Y=-1 S PSOQ=2 Q
"RTN","PSOREJU1",132,0)
 S DUP=0
"RTN","PSOREJU1",133,0)
 F I=1:1:PSOI I $P(PSOSCC,"~",I)=$P(Y,U,2) S DUP=1 Q
"RTN","PSOREJU1",134,0)
 I DUP=1 W "  Duplicates not allowed",! G CLADIC
"RTN","PSOREJU1",135,0)
 S $P(PSOSCC,"~",PSOI)=$P(Y,U,2)
"RTN","PSOREJU1",136,0)
 Q
"RTN","PSOREJU1",137,0)
 ;
"RTN","PSOREJU1",138,0)
HDLG(RX,RFL,CODES,FROM,OPTS,DEF) ; - REJECT Handling
"RTN","PSOREJU1",139,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOREJU1",140,0)
 ;       (o) RFL  - Refill # (Default: most recent)
"RTN","PSOREJU1",141,0)
 ;       (r) CODES - List of REJECT CODES to be handled separated by commas (default is "79,88")
"RTN","PSOREJU1",142,0)
 ;       (r) FROM  - Same values as BWHERE param. in the EN^BPSNCPDP api
"RTN","PSOREJU1",143,0)
 ;       (r) OPTS  - Available options ("IOQ" for IGNORE/OVERRIDE/QUIT)
"RTN","PSOREJU1",144,0)
 ;       (o) DEF   - Default Option ("O", "I" or "Q")
"RTN","PSOREJU1",145,0)
 ;Output: ACTION   - "O"-Override, "I"-Ignore,"Q"-Quit,"D"-Discontinue,"^"-Up-arrow entered
"RTN","PSOREJU1",146,0)
 ;       
"RTN","PSOREJU1",147,0)
 N REJDATA,NEWDATA,ACTION,REJ,RESP,RESPI,REJI,PSOTRIC,RESPREJ,REJIEN
"RTN","PSOREJU1",148,0)
 S ACTION=""
"RTN","PSOREJU1",149,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJU1",150,0)
 ;
"RTN","PSOREJU1",151,0)
 ; Get all open/unresolved rejects
"RTN","PSOREJU1",152,0)
 I '$$FIND^PSOREJUT(RX,RFL,.REJDATA) Q ACTION
"RTN","PSOREJU1",153,0)
 ;
"RTN","PSOREJU1",154,0)
 ; Check for TRICARE/CHAMPVA and quit if no open rejects
"RTN","PSOREJU1",155,0)
 S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(RX,RFL,PSOTRIC) I PSOTRIC D
"RTN","PSOREJU1",156,0)
 . S (REJIEN,CODES)=""
"RTN","PSOREJU1",157,0)
 . ; Set CODES with all open reject codes for RX/Fill returned from $$FIND
"RTN","PSOREJU1",158,0)
 . F  S REJIEN=$O(REJDATA(REJIEN)) Q:REJIEN=""  S CODES=REJDATA(REJIEN,"CODE")_","_CODES
"RTN","PSOREJU1",159,0)
 . ; Strip the last comma off CODES
"RTN","PSOREJU1",160,0)
 . I $E(CODES,$L(CODES))="," S CODES=$E(CODES,1,$L(CODES)-1)
"RTN","PSOREJU1",161,0)
 . ; Set action prompt.
"RTN","PSOREJU1",162,0)
 . S OPTS=$S(CODES["88"!(CODES["79"):"ODQ",1:"DQ"),DEF="Q"
"RTN","PSOREJU1",163,0)
 . ; Include the Ignore action prompt if user holds key.
"RTN","PSOREJU1",164,0)
 . I $D(^XUSEC("PSO TRICARE/CHAMPVA",DUZ)) S OPTS=OPTS_"I"
"RTN","PSOREJU1",165,0)
 ;
"RTN","PSOREJU1",166,0)
 ; In progress TRICARE/CHAMPVA Rx not allowed to be filled
"RTN","PSOREJU1",167,0)
 I PSOTRIC,$$STATUS^PSOBPSUT(RX,RFL)["IN PROGRESS" D TRICCHK^PSOREJU3(RX,RFL,"",FROM) Q ACTION
"RTN","PSOREJU1",168,0)
 ;
"RTN","PSOREJU1",169,0)
 ; Check for open rejects that match CODES
"RTN","PSOREJU1",170,0)
 I '$$FIND^PSOREJUT(RX,RFL,.REJDATA,CODES) Q ACTION
"RTN","PSOREJU1",171,0)
 ;
"RTN","PSOREJU1",172,0)
 ; Get reject for last response, if multiple responses exist.
"RTN","PSOREJU1",173,0)
 S REJ=$O(REJDATA(""))
"RTN","PSOREJU1",174,0)
 S ACTION=$$ACTION(RX,REJ,OPTS,$G(DEF))
"RTN","PSOREJU1",175,0)
 ; Loop through each REJECT IEN and perform action
"RTN","PSOREJU1",176,0)
 S REJI="" F  S REJI=$O(REJDATA(REJI)) Q:REJI=""  D
"RTN","PSOREJU1",177,0)
 . I $P(ACTION,"^")="I" D CLOSE^PSOREJUT(RX,RFL,REJI,DUZ,6,$P(ACTION,"^",2),"","","","","",1) D AUDIT^PSOTRI(RX,RFL,,$P(ACTION,"^",2),$S($$PSOET^PSOREJP3(RX,RFL):"N",1:"R"),$S(PSOTRIC=1:"T",PSOTRIC=2:"C",1:""))
"RTN","PSOREJU1",178,0)
 . I $P(ACTION,"^")="O" D CLOSE^PSOREJUT(RX,RFL,REJI,DUZ,1,,$P(ACTION,"^",2,4))
"RTN","PSOREJU1",179,0)
 . I $P(ACTION,"^")="D" D CLOSE^PSOREJUT(RX,RFL,REJI,DUZ,7,,$P(ACTION,"^",2))
"RTN","PSOREJU1",180,0)
 ; Resubmit claim if overriding
"RTN","PSOREJU1",181,0)
 I $P(ACTION,"^")="O" D
"RTN","PSOREJU1",182,0)
 . D ECMESND^PSOBPSU1(RX,RFL,,FROM,$$GETNDC^PSONDCUT(RX,RFL),,,$P(ACTION,"^",2,4),,.RESP)
"RTN","PSOREJU1",183,0)
 . I $G(RESP) D  Q
"RTN","PSOREJU1",184,0)
 . . W !!?10,"Claim could not be submitted. Please try again later!"
"RTN","PSOREJU1",185,0)
 . . W !,?10,"Reason: ",$S($P(RESP,"^",2)="":"UNKNOWN",1:$P(RESP,"^",2)),$C(7)
"RTN","PSOREJU1",186,0)
 . ; Check for same reject code that got us here and prompt for action if we got it again
"RTN","PSOREJU1",187,0)
 . K NEWDATA I $$FIND^PSOREJUT(RX,RFL,.NEWDATA,REJDATA(REJ,"CODE")) D  I ACTION="Q"!(ACTION="^") Q
"RTN","PSOREJU1",188,0)
 . . S ACTION=$$ACTION(RX,$O(NEWDATA("")),OPTS,$G(DEF)) I ACTION="Q"!(ACTION="^") Q
"RTN","PSOREJU1",189,0)
 . . I $P(ACTION,"^")="I" D CLOSE^PSOREJUT(RX,RFL,REJ,DUZ,6,$P(ACTION,"^",2),"","","","","",1)
"RTN","PSOREJU1",190,0)
 . . I $P(ACTION,"^")="O" D CLOSE^PSOREJUT(RX,RFL,REJ,DUZ,1,,$P(ACTION,"^",2,4))
"RTN","PSOREJU1",191,0)
 Q ACTION
"RTN","PSOREJU1",192,0)
 ;
"RTN","PSOREJU1",193,0)
OVRX(TYPE,CODE) ; - Returns the extended code/description of the NCPDP DUR override codes
"RTN","PSOREJU1",194,0)
 ; Input: (r) TYPE  - 1 (REASON FOR SERVICE), 2 (PROFESSIONAL SERVICE) or 3 (RESULT OF SERVICE)
"RTN","PSOREJU1",195,0)
 ;        (r) CODE  - Table IEN
"RTN","PSOREJU1",196,0)
 ; Output: "CODE - DESCRIPTION"
"RTN","PSOREJU1",197,0)
 N FILE,DIC,X,Y
"RTN","PSOREJU1",198,0)
 S FILE=9002313+$S(TYPE=1:.23,TYPE=2:.21,1:.22)
"RTN","PSOREJU1",199,0)
 S DIC=FILE,X=CODE D ^DIC
"RTN","PSOREJU1",200,0)
 I TYPE=1 Q CODE_" - "_$$GET1^DIQ(9002313.23,+Y,1)
"RTN","PSOREJU1",201,0)
 I TYPE=2 Q CODE_" - "_$$GET1^DIQ(9002313.21,+Y,1)
"RTN","PSOREJU1",202,0)
 I TYPE=3 Q CODE_" - "_$$GET1^DIQ(9002313.22,+Y,1)
"RTN","PSOREJU1",203,0)
 Q ""
"RTN","PSOREJU1",204,0)
 ;
"RTN","PSOREJU1",205,0)
 ;
"RTN","PSOREJU1",206,0)
OVRCOD(TYPE,VALUE) ; - Prompt for NCPDP Override Codes
"RTN","PSOREJU1",207,0)
 ; Called by OVR above (reject notification screen), OVR^PSOREJP1 (OVR action)
"RTN","PSOREJU1",208,0)
 ;   and SMA^PSOREJP1 (SMA action)
"RTN","PSOREJU1",209,0)
 N DIC,DTOUT,DUOUT,FILE,PRPT,X,Y
"RTN","PSOREJU1",210,0)
 I TYPE=1 S FILE=9002313.23,PRPT="Reason for Service Code  : "
"RTN","PSOREJU1",211,0)
 I TYPE=2 S FILE=9002313.21,PRPT="Professional Service Code: "
"RTN","PSOREJU1",212,0)
 I TYPE=3 S FILE=9002313.22,PRPT="Result of Service Code   : "
"RTN","PSOREJU1",213,0)
 S DIC=FILE,DIC(0)="AQE",DIC("A")=PRPT
"RTN","PSOREJU1",214,0)
 I $G(VALUE)'="" S DIC("B")=VALUE
"RTN","PSOREJU1",215,0)
 D ^DIC
"RTN","PSOREJU1",216,0)
 I $D(DTOUT)!$D(DUOUT) Q "^"
"RTN","PSOREJU1",217,0)
 ; At second and third prompts of the set, user entering no data is like exiting the option
"RTN","PSOREJU1",218,0)
 I TYPE'=1,Y<0 Q "^"
"RTN","PSOREJU1",219,0)
 Q $P(Y,"^",2)
"RTN","PSOREJU1",220,0)
 ;
"RTN","PSOREJU1",221,0)
SEL(FIELD,FILE,ARRAY,DEFAULT) ; - Provides field selection (one, multiple or ALL)
"RTN","PSOREJU1",222,0)
 N DIC,DTOUT,DUOUT,QT,Y,X
"RTN","PSOREJU1",223,0)
 W !!,"You may select a single or multiple "_FIELD_"S,"
"RTN","PSOREJU1",224,0)
 W !,"or enter ^ALL to select all "_FIELD_"S.",!
"RTN","PSOREJU1",225,0)
 K ARRAY S DIC=FILE,DIC(0)="QEZAM",DIC("A")=FIELD_": "
"RTN","PSOREJU1",226,0)
 I $G(DEFAULT)'="" S DIC("B")=DEFAULT
"RTN","PSOREJU1",227,0)
 F  D ^DIC Q:X=""  D  Q:$G(QT)
"RTN","PSOREJU1",228,0)
 . I $$UP^XLFSTR(X)="^ALL" K ARRAY S ARRAY="ALL",QT=1 Q
"RTN","PSOREJU1",229,0)
 . I $D(DTOUT)!$D(DUOUT) K ARRAY S ARRAY="^",QT=1 Q
"RTN","PSOREJU1",230,0)
 . W "   ",$P(Y,"^",2),$S($D(ARRAY(+Y)):"       (already selected)",1:"")
"RTN","PSOREJU1",231,0)
 . W ! S ARRAY(+Y)="",DIC("A")="ANOTHER ONE: " K DIC("B")
"RTN","PSOREJU1",232,0)
 I '$D(ARRAY) S ARRAY="^"
"RTN","PSOREJU1",233,0)
 Q
"RTN","PSOREJU1",234,0)
 ;
"RTN","PSOREJU1",235,0)
LMREJ(RX,RFL,MSG,BCK) ; Used by ListManager hidden actions to detect unresolved 3rd Party Rejects
"RTN","PSOREJU1",236,0)
 ;Input:  (r) RX   - Rx IEN (#52)
"RTN","PSOREJU1",237,0)
 ;        (o) RFL  - Refill # (Default: most recent)
"RTN","PSOREJU1",238,0)
 ;Output: (o) MSG  - Usually this will be used to set VALMSG variable, which should be passed in by ref.
"RTN","PSOREJU1",239,0)
 ;        (o) BCK  - This will be used to set VALMBCK variable, which should be passed in by ref.
"RTN","PSOREJU1",240,0)
 ;
"RTN","PSOREJU1",241,0)
 I '$D(^PSRX(+RX)) Q 0
"RTN","PSOREJU1",242,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJU1",243,0)
 I $$FIND^PSOREJUT(RX,RFL) D  Q 1
"RTN","PSOREJU1",244,0)
 . S MSG="NOT ALLOWED! Rx has OPEN 3rd Party Payer Reject.",BCK="R" W $C(7),$C(7)
"RTN","PSOREJU1",245,0)
 Q 0
"RTN","PSOREJU1",246,0)
 ;
"RTN","PSOREJU1",247,0)
DUP(RX,RSP,CLOSED) ; Checks if REJECT has already been logged in the PRESCRIPTION file
"RTN","PSOREJU1",248,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOREJU1",249,0)
 ;         (o) RSP - Response IEN
"RTN","PSOREJU1",250,0)
 ;         (o) CLOSED - If CLOSED=1 and Reject is closed, then do not count as duplicate
"RTN","PSOREJU1",251,0)
 ; Output:     DUP - 1: Already logged (duplicate) 
"RTN","PSOREJU1",252,0)
 ;                   0: Not yet logged on PRESCRIPTION file
"RTN","PSOREJU1",253,0)
 N DUP,IDX
"RTN","PSOREJU1",254,0)
 I $G(CLOSED)="" S CLOSED=0
"RTN","PSOREJU1",255,0)
 S (DUP,IDX)=0
"RTN","PSOREJU1",256,0)
 F  S IDX=$O(^PSRX(RX,"REJ",IDX)) Q:'IDX  D  Q:DUP
"RTN","PSOREJU1",257,0)
 . I +RSP=+$$GET1^DIQ(52.25,IDX_","_RX,16,"I") S DUP=1
"RTN","PSOREJU1",258,0)
 . I CLOSED=1,+$$GET1^DIQ(52.25,IDX_","_RX,9,"I")=1 S DUP=0
"RTN","PSOREJU1",259,0)
 Q DUP
"RTN","PSOREJU1",260,0)
 ;
"RTN","PSOREJU1",261,0)
OTH(CODE,LST) ; Removes the current Reject code from the list
"RTN","PSOREJU1",262,0)
 ; Input:  (r) CODE  - Current Reject Code (79 or 88)
"RTN","PSOREJU1",263,0)
 ;         (o) LST   - List of all Reject codes with response (comma separated)
"RTN","PSOREJU1",264,0)
 ; Output:     OTH   - List of OTHER Reject codes (w/out 79 or 88)
"RTN","PSOREJU1",265,0)
 ;
"RTN","PSOREJU1",266,0)
 N I,OTH
"RTN","PSOREJU1",267,0)
 F I=1:1:$L(LST,",") D
"RTN","PSOREJU1",268,0)
 . I $P(LST,",",I),$P(LST,",",I)'=CODE S OTH=$G(OTH)_","_$P(LST,",",I)
"RTN","PSOREJU1",269,0)
 S $E(OTH)=""
"RTN","PSOREJU1",270,0)
 Q OTH
"RTN","PSOREJU1",271,0)
 ;
"RTN","PSOREJU1",272,0)
DAT(DAT) ; - External Date
"RTN","PSOREJU1",273,0)
 S X=$$HL7TFM^XLFDT(DAT) I X<0 Q ""
"RTN","PSOREJU1",274,0)
 Q X
"RTN","PSOREJU1",275,0)
 ;
"RTN","PSOREJU1",276,0)
CLEAN(STR) ; Remove blanks from the end of a string and replaces ";" with ","
"RTN","PSOREJU1",277,0)
 N LEN F LEN=$L(STR):-1:1 Q:$E(STR,LEN)'=" "
"RTN","PSOREJU1",278,0)
 S STR=$TR(STR,";",",")
"RTN","PSOREJU1",279,0)
 Q $E(STR,1,LEN)
"RTN","PSOREJU1",280,0)
 ;
"RTN","PSOREJU1",281,0)
DSC(FILE,VALUE,FIELD) ;Look up code descriptions
"RTN","PSOREJU1",282,0)
 N IEN
"RTN","PSOREJU1",283,0)
 I '$G(FILE)!($G(VALUE)="")!('$G(FIELD)) Q ""
"RTN","PSOREJU1",284,0)
 I '$D(^BPS(FILE)) Q ""
"RTN","PSOREJU1",285,0)
 I '$D(^BPS(FILE,"B",VALUE)) Q ""
"RTN","PSOREJU1",286,0)
 S IEN=$O(^BPS(FILE,"B",VALUE,"")) I '$D(^BPS(FILE,IEN)) Q ""
"RTN","PSOREJU1",287,0)
 Q $$GET1^DIQ(FILE,IEN,FIELD)
"RTN","PSOREJU1",288,0)
 ;
"RTN","PSOREJU1",289,0)
SMAOVR(RSC) ; - Ask for OVERRIDE codes
"RTN","PSOREJU1",290,0)
 ; Called by SMA^PSOREJP1 (SMA action)
"RTN","PSOREJU1",291,0)
 ;
"RTN","PSOREJU1",292,0)
 ; INPUT: RSC - Reason for Service code
"RTN","PSOREJU1",293,0)
 ;
"RTN","PSOREJU1",294,0)
 N COD1,COD2,COD3 W !
"RTN","PSOREJU1",295,0)
 S COD1=$$OVRCOD(1,$G(RSC)) I COD1="^"!(COD1="") Q COD1
"RTN","PSOREJU1",296,0)
 S COD2=$$OVRCOD(2) I COD2="^" Q "^"
"RTN","PSOREJU1",297,0)
 S COD3=$$OVRCOD(3) I COD3="^" Q "^"
"RTN","PSOREJU1",298,0)
 Q (COD1_U_COD2_U_COD3)
"RTN","PSOREJU2")
0^2^B50173477^B50124980
"RTN","PSOREJU2",1,0)
PSOREJU2 ;BIRM/MFR - BPS (ECME) - Clinical Rejects Utilities (1) ;10/15/04
"RTN","PSOREJU2",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,260,287,341,290,358,359,385,403**;DEC 1997;Build 9
"RTN","PSOREJU2",3,0)
 ;Reference to $$NABP^BPSBUTL supported by IA 4719
"RTN","PSOREJU2",4,0)
 ;Reference to File 9002313.23 - BPS NCPDP REASON FOR SERVICE CODE supported by IA 4714
"RTN","PSOREJU2",5,0)
 ;
"RTN","PSOREJU2",6,0)
GET(RX,RFL,REJDATA,REJID,OKCL,CODE) ;
"RTN","PSOREJU2",7,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOREJU2",8,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOREJU2",9,0)
 ;         (r) REJDATA(REJECT IEN,FIELD) - Array where these Reject fields will be returned:
"RTN","PSOREJU2",10,0)
 ;                       "BIN" - Payer BIN number
"RTN","PSOREJU2",11,0)
 ;                       "CODE" - Reject Code (79 or 88)
"RTN","PSOREJU2",12,0)
 ;                       "DATE/TIME" - DATE/TIME Reject was detected
"RTN","PSOREJU2",13,0)
 ;                       "PAYER MESSAGE" - Message returned by the payer
"RTN","PSOREJU2",14,0)
 ;                       "REASON" - Reject Reason description (from payer)
"RTN","PSOREJU2",15,0)
 ;                       "INSURANCE NAME" - Patient's Insurance Company Name
"RTN","PSOREJU2",16,0)
 ;                       "COB" - Coordination of Benefits
"RTN","PSOREJU2",17,0)
 ;                       "GROUP NAME" - Patient's Insurance Group Name
"RTN","PSOREJU2",18,0)
 ;                       "GROUP NUMBER" - Patient's Insurance Group Number
"RTN","PSOREJU2",19,0)
 ;                       "CARDHOLDER ID" - Patient's Insurance Cardholder ID
"RTN","PSOREJU2",20,0)
 ;                       "PLAN CONTACT" - Plan's Contact (eg., "1-800-...")
"RTN","PSOREJU2",21,0)
 ;                       "PLAN PREVIOUS FILL DATE" - Last time Rx was paid by payer
"RTN","PSOREJU2",22,0)
 ;                       "STATUS" - REJECTS status ("OPEN/UNRESOLVED" or "CLOSED/RESOLVED")
"RTN","PSOREJU2",23,0)
 ;                       "DUR TEXT" - Payer's DUR description
"RTN","PSOREJU2",24,0)
 ;                       "DUR ADD MSG TEXT" - Payer's DUR additional description
"RTN","PSOREJU2",25,0)
 ;                       "OTHER REJECTS" - Other Rejects on the same response
"RTN","PSOREJU2",26,0)
 ;                       "REASON SVC CODE" - Reason for Service Code
"RTN","PSOREJU2",27,0)
 ;                  If REJECT is closed, the following fields will be returned:
"RTN","PSOREJU2",28,0)
 ;                       "CLA CODE" - Clarification Code submitted
"RTN","PSOREJU2",29,0)
 ;                       "PRIOR AUTH TYPE" - Prior Authorization Type
"RTN","PSOREJU2",30,0)
 ;                       "PRIOR AUTH NUMBER" - Prior Authorization Type
"RTN","PSOREJU2",31,0)
 ;                       "CLOSED DATE/TIME" - DATE/TIME Reject was closed
"RTN","PSOREJU2",32,0)
 ;                       "CLOSED BY" - Name of the user responsible for closing Reject
"RTN","PSOREJU2",33,0)
 ;                       "CLOSE REASON" - Reason for closing Reject (text)
"RTN","PSOREJU2",34,0)
 ;                       "CLOSE COMMENTS" - User entered comments at close
"RTN","PSOREJU2",35,0)
 ;         (o) REJID - REJECT IEN in the PRESCRIPTION file for retrieve this REJECT
"RTN","PSOREJU2",36,0)
 ;         (o) OKCL - If set to 1, CLOSED REJECTs will also be returned
"RTN","PSOREJU2",37,0)
 ;         (o) CODE - Only REJECTs with this CODE should be returned
"RTN","PSOREJU2",38,0)
 ;
"RTN","PSOREJU2",39,0)
 N REJS,ARRAY,REJFLD,IDX,COM,Z
"RTN","PSOREJU2",40,0)
 ;
"RTN","PSOREJU2",41,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJU2",42,0)
 ;
"RTN","PSOREJU2",43,0)
 K REJDATA
"RTN","PSOREJU2",44,0)
 I '$O(^PSRX(RX,"REJ",0)) Q
"RTN","PSOREJU2",45,0)
 ;
"RTN","PSOREJU2",46,0)
 K REJS S RFL=+$G(RFL)
"RTN","PSOREJU2",47,0)
 I $G(REJID) D
"RTN","PSOREJU2",48,0)
 . I +$P($G(^PSRX(RX,"REJ",REJID,0)),"^",4)'=RFL Q
"RTN","PSOREJU2",49,0)
 . I '$G(OKCL),$P($G(^PSRX(RX,"REJ",REJID,0)),"^",5) Q
"RTN","PSOREJU2",50,0)
 . S REJS(REJID)=""
"RTN","PSOREJU2",51,0)
 E  D
"RTN","PSOREJU2",52,0)
 . S IDX=999
"RTN","PSOREJU2",53,0)
 . F  S IDX=$O(^PSRX(RX,"REJ",IDX),-1) Q:'IDX  D
"RTN","PSOREJU2",54,0)
 . . I +$P($G(^PSRX(RX,"REJ",IDX,0)),"^",4)'=RFL Q
"RTN","PSOREJU2",55,0)
 . . I '$G(OKCL),$P($G(^PSRX(RX,"REJ",IDX,0)),"^",5) Q
"RTN","PSOREJU2",56,0)
 . . S REJS(IDX)=""
"RTN","PSOREJU2",57,0)
 I '$D(REJS) Q
"RTN","PSOREJU2",58,0)
 ;
"RTN","PSOREJU2",59,0)
 S IDX=0
"RTN","PSOREJU2",60,0)
 F  S IDX=$O(REJS(IDX)) Q:'IDX  D
"RTN","PSOREJU2",61,0)
 . K ARRAY D GETS^DIQ(52.25,IDX_","_RX_",","*","","ARRAY")
"RTN","PSOREJU2",62,0)
 . K REJFLD M REJFLD=ARRAY(52.25,IDX_","_RX_",")
"RTN","PSOREJU2",63,0)
 . I $G(CODE)'="",REJFLD(.01)'=CODE Q   ;cnf, PSO*7.0*358, add check for '=""
"RTN","PSOREJU2",64,0)
 . S REJDATA(IDX,"CODE")=$G(REJFLD(.01))
"RTN","PSOREJU2",65,0)
 . S REJDATA(IDX,"DATE/TIME")=$G(REJFLD(1))
"RTN","PSOREJU2",66,0)
 . S REJDATA(IDX,"PAYER MESSAGE")=$G(REJFLD(2))
"RTN","PSOREJU2",67,0)
 . S REJDATA(IDX,"REASON")=$G(REJFLD(3))
"RTN","PSOREJU2",68,0)
 . S REJDATA(IDX,"PHARMACIST")=$G(REJFLD(4))
"RTN","PSOREJU2",69,0)
 . S REJDATA(IDX,"INSURANCE NAME")=$G(REJFLD(20))
"RTN","PSOREJU2",70,0)
 . S REJDATA(IDX,"COB")=$G(REJFLD(27))
"RTN","PSOREJU2",71,0)
 . S REJDATA(IDX,"GROUP NAME")=$G(REJFLD(6))
"RTN","PSOREJU2",72,0)
 . S REJDATA(IDX,"GROUP NUMBER")=$G(REJFLD(21))
"RTN","PSOREJU2",73,0)
 . S REJDATA(IDX,"BIN")=$G(REJFLD(29))
"RTN","PSOREJU2",74,0)
 . S REJDATA(IDX,"CARDHOLDER ID")=$G(REJFLD(22))
"RTN","PSOREJU2",75,0)
 . S REJDATA(IDX,"PLAN CONTACT")=$G(REJFLD(7))
"RTN","PSOREJU2",76,0)
 . S REJDATA(IDX,"PLAN PREVIOUS FILL DATE")=$G(REJFLD(8))
"RTN","PSOREJU2",77,0)
 . S REJDATA(IDX,"STATUS")=$G(REJFLD(9))
"RTN","PSOREJU2",78,0)
 . S REJDATA(IDX,"OTHER REJECTS")=$G(REJFLD(17))
"RTN","PSOREJU2",79,0)
 . S REJDATA(IDX,"DUR TEXT")=$G(REJFLD(18))
"RTN","PSOREJU2",80,0)
 . S REJDATA(IDX,"DUR ADD MSG TEXT")=$G(REJFLD(28))
"RTN","PSOREJU2",81,0)
 . S REJDATA(IDX,"REASON SVC CODE")=$G(REJFLD(14))
"RTN","PSOREJU2",82,0)
 . S REJDATA(IDX,"RESPONSE IEN")=$G(REJFLD(16))
"RTN","PSOREJU2",83,0)
 . I '$G(OKCL) Q
"RTN","PSOREJU2",84,0)
 . S REJDATA(IDX,"CLOSED DATE/TIME")=$G(REJFLD(10))
"RTN","PSOREJU2",85,0)
 . S REJDATA(IDX,"CLOSED BY")=$G(REJFLD(11))
"RTN","PSOREJU2",86,0)
 . S REJDATA(IDX,"CLOSE REASON")=$G(REJFLD(12))
"RTN","PSOREJU2",87,0)
 . S REJDATA(IDX,"CLOSE COMMENTS")=$G(REJFLD(13))
"RTN","PSOREJU2",88,0)
 . S REJDATA(IDX,"COD1")=$G(REJFLD(14))
"RTN","PSOREJU2",89,0)
 . S REJDATA(IDX,"COD2")=$G(REJFLD(15))
"RTN","PSOREJU2",90,0)
 . S REJDATA(IDX,"COD3")=$G(REJFLD(19))
"RTN","PSOREJU2",91,0)
 . S REJDATA(IDX,"CLA CODE")=$G(REJFLD(24))
"RTN","PSOREJU2",92,0)
 . S REJDATA(IDX,"PRIOR AUTH TYPE")=$G(REJFLD(25))
"RTN","PSOREJU2",93,0)
 . S REJDATA(IDX,"PRIOR AUTH NUMBER")=$G(REJFLD(26))
"RTN","PSOREJU2",94,0)
 . S COM=0 F  S COM=$O(^PSRX(RX,"REJ",IDX,"COM",COM)) Q:'COM  D
"RTN","PSOREJU2",95,0)
 . . S Z=^PSRX(RX,"REJ",IDX,"COM",COM,0)
"RTN","PSOREJU2",96,0)
 . . S REJDATA(IDX,"COMMENTS",COM,"DATE/TIME")=$P(Z,"^")
"RTN","PSOREJU2",97,0)
 . . S REJDATA(IDX,"COMMENTS",COM,"USER")=$P(Z,"^",2)
"RTN","PSOREJU2",98,0)
 . . S REJDATA(IDX,"COMMENTS",COM,"COMMENTS")=$P(Z,"^",3)
"RTN","PSOREJU2",99,0)
 Q
"RTN","PSOREJU2",100,0)
 ;
"RTN","PSOREJU2",101,0)
HELP(OPTS) ; Display the Help Text for the DUR handling options (OVERRIDE/IGNORE/STOP/QUIT)
"RTN","PSOREJU2",102,0)
 ;
"RTN","PSOREJU2",103,0)
 I OPTS["O" D
"RTN","PSOREJU2",104,0)
 . W !?1,"(O)verride - This option will provide the prompts for the code sets needed to"
"RTN","PSOREJU2",105,0)
 . W !?1,"             override this reject and get a payable 3rd party claim. Before"
"RTN","PSOREJU2",106,0)
 . W !?1,"             you select this option, you may need to call the 3rd party payer"
"RTN","PSOREJU2",107,0)
 . W !?1,"             to determine which code sets are needed to override a particular"
"RTN","PSOREJU2",108,0)
 . W !?1,"             reject. Once the proper override is accepted the label will print"
"RTN","PSOREJU2",109,0)
 . W !?1,"             and the prescription can be filled."
"RTN","PSOREJU2",110,0)
 ;
"RTN","PSOREJU2",111,0)
 I OPTS["I" D
"RTN","PSOREJU2",112,0)
 . W !?1,"(I)gnore   - Choosing Ignore will by-pass 3rd party processing and will allow"
"RTN","PSOREJU2",113,0)
 . W !?1,"             you to print a label and fill the prescription. This essentially"
"RTN","PSOREJU2",114,0)
 . W !?1,"             ignores the clinical safety issues suggested by the 3rd party"
"RTN","PSOREJU2",115,0)
 . W !?1,"             payer and will NOT result in a payable claim."
"RTN","PSOREJU2",116,0)
 ;           
"RTN","PSOREJU2",117,0)
 I OPTS["Q" D
"RTN","PSOREJU2",118,0)
 . W !?1,"(Q)uit     - Choosing Quit will postpone the processing of this prescription"
"RTN","PSOREJU2",119,0)
 . W !?1,"             until this 3rd party reject is resolved. A label will not be"
"RTN","PSOREJU2",120,0)
 . W !?1,"             printed for this prescription and it can not be filled/dispensed"
"RTN","PSOREJU2",121,0)
 . W !?1,"             until this reject is resolved. Rejects can be resolved through"
"RTN","PSOREJU2",122,0)
 . W !?1,"             the Worklist option under the ePharmacy menu."
"RTN","PSOREJU2",123,0)
 Q
"RTN","PSOREJU2",124,0)
 ;
"RTN","PSOREJU2",125,0)
DVINFO(RX,RFL,LM) ; Returns header displayable Division Information
"RTN","PSOREJU2",126,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOREJU2",127,0)
 ;       (o) RFL  - Refill # (Default: most recent)
"RTN","PSOREJU2",128,0)
 ;       (o) LM   - ListManager format? (1 - Yes / 0 - No) - Default: 0
"RTN","PSOREJU2",129,0)
 N TXT,DVINFO,NCPNPI
"RTN","PSOREJU2",130,0)
 S DVINFO="Division : "_$$GET1^DIQ(59,+$$RXSITE^PSOBPSUT(RX,RFL),.01)
"RTN","PSOREJU2",131,0)
 S NCPNPI=$P($$NABP^BPSBUTL(RX,RFL)," ")
"RTN","PSOREJU2",132,0)
 S $E(DVINFO,$S($G(LM):58,1:51))=$S($L(NCPNPI)=7:"NCPDP",1:"  NPI")_"#: "_NCPNPI
"RTN","PSOREJU2",133,0)
 Q DVINFO
"RTN","PSOREJU2",134,0)
 ;
"RTN","PSOREJU2",135,0)
PTINFO(RX,LM) ; Returns header displayable Patient Information
"RTN","PSOREJU2",136,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOREJU2",137,0)
 ;       (o) LM   - ListManager format? (1 - Yes / 0 - No) - Default: 0
"RTN","PSOREJU2",138,0)
 N DFN,VADM,PTINFO,SSN4
"RTN","PSOREJU2",139,0)
 S DFN=$$GET1^DIQ(52,RX,2,"I") D DEM^VADPT S SSN4=$P($G(VADM(2)),"^",2)
"RTN","PSOREJU2",140,0)
 S PTINFO="Patient  : "_$E($G(VADM(1)),1,$S($G(LM):24,1:20))_"("_$E(SSN4,$L(SSN4)-3,$L(SSN4))_")"
"RTN","PSOREJU2",141,0)
 S PTINFO=PTINFO_"  Sex: "_$P($G(VADM(5)),"^")
"RTN","PSOREJU2",142,0)
 S $E(PTINFO,$S($G(LM):61,1:54))="DOB: "_$P($G(VADM(3)),"^",2)_"("_$P($G(VADM(4)),"^")_")"
"RTN","PSOREJU2",143,0)
 Q PTINFO
"RTN","PSOREJU2",144,0)
 ;
"RTN","PSOREJU2",145,0)
RETRXF(RX,RFL,ONOFF) ; - Set/Reset the Re-transmission flag
"RTN","PSOREJU2",146,0)
 ;Input: (r) RX    - Rx IEN (#52)
"RTN","PSOREJU2",147,0)
 ;       (r) RFL   - Refill IEN (#52.1)
"RTN","PSOREJU2",148,0)
 ;       (o) ONOFF - Turn flag ON or OFF (1 - ON / 0 - OFF) (Default: OFF) 
"RTN","PSOREJU2",149,0)
 I RFL>0,'$D(^PSRX(RX,1,RFL,0)) QUIT
"RTN","PSOREJU2",150,0)
 N DA,DIE,DR
"RTN","PSOREJU2",151,0)
 S DR="82///"_$S($G(ONOFF):"YES",1:"@")
"RTN","PSOREJU2",152,0)
 I 'RFL S DA=RX,DIE="^PSRX("
"RTN","PSOREJU2",153,0)
 I RFL S DA(1)=RX,DA=RFL,DIE="^PSRX("_RX_",1,"
"RTN","PSOREJU2",154,0)
 D ^DIE
"RTN","PSOREJU2",155,0)
 Q
"RTN","PSOREJU2",156,0)
 ;
"RTN","PSOREJU2",157,0)
REASON(TXT) ; Extracts the Reason for service code from the REASON text field
"RTN","PSOREJU2",158,0)
 ; Input: (r) TXT  - Reason text (e.g., NN Reason for Service Code Text)
"RTN","PSOREJU2",159,0)
 ;Output:   REASON - NN (if on valid and on file (#9002313.23), null otherwise)
"RTN","PSOREJU2",160,0)
 N REASON,DIC,X,Y
"RTN","PSOREJU2",161,0)
 S REASON=$P(TXT," ") I $L(REASON)'=2 Q ""
"RTN","PSOREJU2",162,0)
 S DIC=9002313.23,X=REASON D ^DIC I Y<0 Q ""
"RTN","PSOREJU2",163,0)
 Q REASON
"RTN","PSOREJU2",164,0)
 ;
"RTN","PSOREJU2",165,0)
SETOPN(RX,REJ) ; - Set the Reject RE-OPENED flag to YES
"RTN","PSOREJU2",166,0)
 ;Input: (r) RX    - Rx IEN (#52)
"RTN","PSOREJU2",167,0)
 ;       (r) REJ   - Reject IEN (#52.25)
"RTN","PSOREJU2",168,0)
 ;       
"RTN","PSOREJU2",169,0)
 I '$D(^PSRX(RX,"REJ",REJ)) Q
"RTN","PSOREJU2",170,0)
 N DIE,DA,DR
"RTN","PSOREJU2",171,0)
 S DIE="^PSRX("_RX_",""REJ"",",DA(1)=RX,DA=REJ,DR="23///YES" D ^DIE
"RTN","PSOREJU2",172,0)
 Q
"RTN","PSOREJU2",173,0)
 ;
"RTN","PSOREJU2",174,0)
PRT(FIELD,P,L) ; Sets the lines for fields that require text wrapping
"RTN","PSOREJU2",175,0)
 ;Input: FIELD - Subscript name from the DATA(REJ,FIELD) array
"RTN","PSOREJU2",176,0)
 ;         P   - Position where the content should be printed
"RTN","PSOREJU2",177,0)
 ;         L   - Lenght of the text on each line
"RTN","PSOREJU2",178,0)
 N TXT,I
"RTN","PSOREJU2",179,0)
 S TXT=DATA(REJ,FIELD) I $L(TXT)'>L W ?P,TXT Q
"RTN","PSOREJU2",180,0)
 F I=1:1 Q:TXT=""  D
"RTN","PSOREJU2",181,0)
 . I I=1 W ?P,$E(TXT,1,L),! S TXT=$E(TXT,L+1,999) Q
"RTN","PSOREJU2",182,0)
 . W ?P,$E(TXT,1,L) S TXT=$E(TXT,L+1,999) W:TXT'="" !
"RTN","PSOREJU2",183,0)
 Q
"RTN","PSOREJU2",184,0)
 ;
"RTN","PSOREJU2",185,0)
PA() ; - Ask for Prior Authorization Type and Number
"RTN","PSOREJU2",186,0)
 ; Called by PA^PSOREJP1 (PA acton) and SMA^PSOREJP1 (SMA action)
"RTN","PSOREJU2",187,0)
 ;
"RTN","PSOREJU2",188,0)
 ;Output:(PAT^PAN) PAT - Prior Authorization Type
"RTN","PSOREJU2",189,0)
 ;                 (See DD File #9002313.26 for possible values)
"RTN","PSOREJU2",190,0)
 ;                 PAN - Prior Authorization Number (11 digits)
"RTN","PSOREJU2",191,0)
 ;        
"RTN","PSOREJU2",192,0)
 N DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,PAN,PAT,X,Y
"RTN","PSOREJU2",193,0)
 S DIC("B")=0
"RTN","PSOREJU2",194,0)
 S DIC(0)="QEAM",DIC=9002313.26,DIC("A")="Prior Authorization Type: "
"RTN","PSOREJU2",195,0)
 D ^DIC
"RTN","PSOREJU2",196,0)
 I ($D(DUOUT))!($D(DTOUT))!(Y=-1) Q "^"  ;Check for "^" or timeout
"RTN","PSOREJU2",197,0)
 S PAT=$P(Y,U,2)
"RTN","PSOREJU2",198,0)
 ;
"RTN","PSOREJU2",199,0)
 K DIR,DIC,X,Y
"RTN","PSOREJU2",200,0)
 S DIR(0)="52.25,26",DIR("A")="Prior Authorization Number"
"RTN","PSOREJU2",201,0)
 S DIR("?")="^D PANHLP^PSOREJU2",DIR("??")=""
"RTN","PSOREJU2",202,0)
 D ^DIR I (Y["^")!$D(DTOUT) Q "^"
"RTN","PSOREJU2",203,0)
 S PAN=Y
"RTN","PSOREJU2",204,0)
 Q (PAT_"^"_PAN)
"RTN","PSOREJU2",205,0)
 ;
"RTN","PSOREJU2",206,0)
PANHLP ; Prior Authorization Number Help
"RTN","PSOREJU2",207,0)
 W "OR you may leave it blank if the claim does not require a number."
"RTN","PSOREJU2",208,0)
 Q
"RTN","PSOREJUT")
0^4^B78935434^B76046787
"RTN","PSOREJUT",1,0)
PSOREJUT ;BIRM/MFR - BPS (ECME) - Clinical Rejects Utilities ;06/07/05
"RTN","PSOREJUT",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,247,260,287,289,290,358,359,385,403**;DEC 1997;Build 9
"RTN","PSOREJUT",3,0)
 ;Reference to DUR1^BPSNCPD3 supported by IA 4560
"RTN","PSOREJUT",4,0)
 ;Reference to $$ADDCOMM^BPSBUTL supported by IA 4719
"RTN","PSOREJUT",5,0)
 ;
"RTN","PSOREJUT",6,0)
SAVE(RX,RFL,REJ,REOPEN) ; - Saves DUR Information in the file 52
"RTN","PSOREJUT",7,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOREJUT",8,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOREJUT",9,0)
 ;         (o) REOPEN - value of 1 means claim being reopened; null or no value passed means reopen claim functionality not being used
"RTN","PSOREJUT",10,0)
 ;         (r) REJ - Array containing information about the REJECT on the following subscripts:
"RTN","PSOREJUT",11,0)
 ;                   "BIN" - BIN Number
"RTN","PSOREJUT",12,0)
 ;                   "CODE"   - Reject Code (79 or 88)
"RTN","PSOREJUT",13,0)
 ;                   "DATE/TIME"   - Date/Time Reject Detected
"RTN","PSOREJUT",14,0)
 ;                   "PAYER MESSAGE" - Message returned by Payer (up to 140 chars long)
"RTN","PSOREJUT",15,0)
 ;                   "REASON" - Reject Reason (up to 100 chars long)
"RTN","PSOREJUT",16,0)
 ;                   "DUR TEXT" - Payer's DUR description
"RTN","PSOREJUT",17,0)
 ;                   "DUR ADD MSG TEXT" - Payer's DUR additional message text description
"RTN","PSOREJUT",18,0)
 ;                   "INSURANCE NAME" - Patient's Insurance Company Name
"RTN","PSOREJUT",19,0)
 ;                   "GROUP NAME" - Patient's Insurance Group Name
"RTN","PSOREJUT",20,0)
 ;                   "GROUP NUMBER" - Patient's Insurance Group Number
"RTN","PSOREJUT",21,0)
 ;                   "CARDHOLDER ID" - Patient's Insurance Cardholder ID
"RTN","PSOREJUT",22,0)
 ;                   "COB" - Coordination of Benefits
"RTN","PSOREJUT",23,0)
 ;                   "PLAN CONTACT" - Patient's Insurance Plan Contact (1-800)
"RTN","PSOREJUT",24,0)
 ;                   "PREVIOUS FILL" - Plan's Previous Fill Date
"RTN","PSOREJUT",25,0)
 ;                   "OTHER REJECTS" - Other Rejects with same Response
"RTN","PSOREJUT",26,0)
 ;                   "PHARMACIST" - Pharmacist DUZ
"RTN","PSOREJUT",27,0)
 ;                   "RESPONSE IEN" - Pointer to the RESPONSE file in ECME
"RTN","PSOREJUT",28,0)
 ;                   "REASON SVC CODE" - Reason for Service Code (pointer to BPS NCPDP REASON FOR SERVICE CODE)
"RTN","PSOREJUT",29,0)
 ;                   "RE-OPENED" - Re-Open Flag
"RTN","PSOREJUT",30,0)
 ;Output: REJ("REJECT IEN")
"RTN","PSOREJUT",31,0)
 N %,DIC,DR,DA,X,DINUM,DD,DO,DLAYGO
"RTN","PSOREJUT",32,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJUT",33,0)
 I '$G(PSODIV) S PSODIV=$$RXSITE^PSOBPSUT(RX,RFL)
"RTN","PSOREJUT",34,0)
 S REJ("BIN")=$E($G(REJ("BIN")),1,6)
"RTN","PSOREJUT",35,0)
 S REJ("CODE")=$G(REJ("CODE"))
"RTN","PSOREJUT",36,0)
 I REJ("CODE")'=79&(REJ("CODE")'=88)&('$G(PSOTRIC))&('$G(REOPEN)) S ERR="",ERR=$$EVAL^PSOREJU4(PSODIV,REJ("CODE"),$G(OPECC),.ERR) Q:'+ERR
"RTN","PSOREJUT",37,0)
 S REJ("PAYER MESSAGE")=$E($G(REJ("PAYER MESSAGE")),1,140),REJ("REASON")=$E($G(REJ("REASON")),1,100)
"RTN","PSOREJUT",38,0)
 S REJ("DUR TEXT")=$E($G(REJ("DUR TEXT")),1,100),REJ("DUR ADD MSG TEXT")=$E($G(REJ("DUR ADD MSG TEXT")),1,100),REJ("GROUP NAME")=$E($G(REJ("GROUP NAME")),1,30)
"RTN","PSOREJUT",39,0)
 S REJ("INSURANCE NAME")=$E($G(REJ("INSURANCE NAME")),1,30),REJ("PLAN CONTACT")=$E($G(REJ("PLAN CONTACT")),1,30)
"RTN","PSOREJUT",40,0)
 S REJ("GROUP NUMBER")=$E($G(REJ("GROUP NUMBER")),1,30),REJ("OTHER REJECTS")=$E($G(REJ("OTHER REJECTS")),1,15)
"RTN","PSOREJUT",41,0)
 S REJ("CARDHOLDER ID")=$E($G(REJ("CARDHOLDER ID")),1,20),REJ("COB")=$G(REJ("COB"))
"RTN","PSOREJUT",42,0)
 I $G(REJ("DATE/TIME"))="" D NOW^%DTC S REJ("DATE/TIME")=%
"RTN","PSOREJUT",43,0)
 S DIC="^PSRX("_RX_",""REJ"",",DA(1)=RX,DIC(0)=""
"RTN","PSOREJUT",44,0)
 S X=$G(REJ("CODE")),DINUM=$O(^PSRX(RX,"REJ",9999),-1)+1
"RTN","PSOREJUT",45,0)
 S DIC("DR")="1///"_$G(REJ("DATE/TIME"))_";2///"_REJ("PAYER MESSAGE")_";3///"_REJ("REASON")_";4////"_$G(REJ("PHARMACIST"))_";5///"_RFL
"RTN","PSOREJUT",46,0)
 S DIC("DR")=DIC("DR")_";6///"_REJ("GROUP NAME")_";7///"_REJ("PLAN CONTACT")_";8///"_$G(REJ("PREVIOUS FILL"))
"RTN","PSOREJUT",47,0)
 S DIC("DR")=DIC("DR")_";9///0;14///"_$G(REJ("REASON SVC CODE"))_";16///"_$G(REJ("RESPONSE IEN"))
"RTN","PSOREJUT",48,0)
 S DIC("DR")=DIC("DR")_";17///"_$G(REJ("OTHER REJECTS"))_";18///"_REJ("DUR TEXT")_";20///"_REJ("INSURANCE NAME")
"RTN","PSOREJUT",49,0)
 S DIC("DR")=DIC("DR")_";21///"_REJ("GROUP NUMBER")_";22///"_REJ("CARDHOLDER ID")_";23///"_$G(REJ("RE-OPENED"))
"RTN","PSOREJUT",50,0)
 S DIC("DR")=DIC("DR")_";27///"_REJ("COB")
"RTN","PSOREJUT",51,0)
 S DIC("DR")=DIC("DR")_";28///"_REJ("DUR ADD MSG TEXT")
"RTN","PSOREJUT",52,0)
 S DIC("DR")=DIC("DR")_";29///"_REJ("BIN")
"RTN","PSOREJUT",53,0)
 F  L +^PSRX(RX):5 Q:$T  H 15
"RTN","PSOREJUT",54,0)
 K DD,DO D FILE^DICN K DD,DO S REJ("REJECT IEN")=+Y
"RTN","PSOREJUT",55,0)
 S REJ("OVERRIDE MSG")=$G(DATA("OVERRIDE MSG"))
"RTN","PSOREJUT",56,0)
 I REJ("OVERRIDE MSG")'="" D SAVECOM^PSOREJP3(RX,REJ("REJECT IEN"),REJ("OVERRIDE MSG"),$G(REJ("DATE/TIME")),$G(DUZ))
"RTN","PSOREJUT",57,0)
 K ERR
"RTN","PSOREJUT",58,0)
 L -^PSRX(RX)
"RTN","PSOREJUT",59,0)
 Q
"RTN","PSOREJUT",60,0)
 ; 
"RTN","PSOREJUT",61,0)
CLSALL(RX,RFL,USR,REA,COM,COD1,COD2,COD3,CLA,PA) ; Close/Resolve All Rejects
"RTN","PSOREJUT",62,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOREJUT",63,0)
 ;       (o) RFL  - Refill # (Default: most recent)
"RTN","PSOREJUT",64,0)
 ;       (o) USR  - User DUZ responsible for closing all rejects
"RTN","PSOREJUT",65,0)
 ;       (r) REA  - Close REASON code
"RTN","PSOREJUT",66,0)
 ;       (o) COM  - Close COMMENTS
"RTN","PSOREJUT",67,0)
 ;       (o) COD1 - First set of DUR overrides (Reason Code^Professional Code^Result Code)
"RTN","PSOREJUT",68,0)
 ;       (o) COD2 - Second set of DUR overrides (Reason Code^Professional Code^Result Code)
"RTN","PSOREJUT",69,0)
 ;       (o) COD3 - Third set of DUR overrides (Reason Code^Professional Code^Result Code)
"RTN","PSOREJUT",70,0)
 ;       (o) CLA  - NCPDP Clarification Code for overriding RTS and DUR REJECTS
"RTN","PSOREJUT",71,0)
 ;       (o) PA   - NCPDP Prior Authorization Type and Number (separated by "^")
"RTN","PSOREJUT",72,0)
 N REJ,REJDATA,DIE,DR,DA
"RTN","PSOREJUT",73,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJUT",74,0)
 ; - Closing OPEN/UNRESOLVED rejects
"RTN","PSOREJUT",75,0)
 I $$FIND(RX,RFL,.REJDATA) D
"RTN","PSOREJUT",76,0)
 . S REJ="" F  S REJ=$O(REJDATA(REJ)) Q:'REJ  D
"RTN","PSOREJUT",77,0)
 . . D CLOSE(RX,RFL,REJ,USR,REA,$G(COM),$G(COD1),$G(COD2),$G(COD3),$G(CLA),$G(PA))
"RTN","PSOREJUT",78,0)
 Q
"RTN","PSOREJUT",79,0)
 ;
"RTN","PSOREJUT",80,0)
CLOSE(RX,RFL,REJ,USR,REA,COM,COD1,COD2,COD3,CLA,PA,IGNR) ; - Mark a DUR/REFILL TOO SOON reject RESOLVED
"RTN","PSOREJUT",81,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOREJUT",82,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOREJUT",83,0)
 ;         (r) REJ - REJECT ID (IEN)
"RTN","PSOREJUT",84,0)
 ;         (o) USR - User (file #200 IEN) responsible for closing the REJECT
"RTN","PSOREJUT",85,0)
 ;         (r) REA - Reason for closing the REJECT:
"RTN","PSOREJUT",86,0)
 ;                       1:CLAIM RE-SUBMITTED
"RTN","PSOREJUT",87,0)
 ;                       2:RX ON HOLD
"RTN","PSOREJUT",88,0)
 ;                       3:RX SUSPENDED
"RTN","PSOREJUT",89,0)
 ;                       4:RX RETURNED TO STOCK
"RTN","PSOREJUT",90,0)
 ;                       5:RX DELETED
"RTN","PSOREJUT",91,0)
 ;                       6:OVERRIDEN W/OUT RE-SUBMISSION
"RTN","PSOREJUT",92,0)
 ;                       7:DISCONTINUED
"RTN","PSOREJUT",93,0)
 ;                       8:RX EDIT
"RTN","PSOREJUT",94,0)
 ;                      99:OTHER
"RTN","PSOREJUT",95,0)
 ;         (o) COM  - Close comments manually entered by the user
"RTN","PSOREJUT",96,0)
 ;         (o) COD1 - First set of DUR overrides (Reason Code^Professional Code^Result Code)
"RTN","PSOREJUT",97,0)
 ;         (o) COD2 - Second set of DUR overrides (Reason Code^Professional Code^Result Code)
"RTN","PSOREJUT",98,0)
 ;         (o) COD3 - Third set of DUR overrides (Reason Code^Professional Code^Result Code)
"RTN","PSOREJUT",99,0)
 ;         (o) CLA  - NCPDP Clarification Code for overriding RTS and DUR REJECTS
"RTN","PSOREJUT",100,0)
 ;         (o) PA   - NCPDP Prior Authorization Type and Number (separated by "^")
"RTN","PSOREJUT",101,0)
 ;         (o) IGNR - Ignore Flag; 1=IGNORE, 0=NOT IGNORE
"RTN","PSOREJUT",102,0)
 ;
"RTN","PSOREJUT",103,0)
 I '$G(RX)!'$G(REJ) Q
"RTN","PSOREJUT",104,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJUT",105,0)
 I '$D(^PSRX(RX,"REJ",REJ)) Q
"RTN","PSOREJUT",106,0)
 I $$GET1^DIQ(52.25,REJ_","_RX,5)'=+$G(RFL) Q
"RTN","PSOREJUT",107,0)
 S:'$G(REA) REA=99 S COM=$TR($G(COM),";^",",,")
"RTN","PSOREJUT",108,0)
 N DQ,DA,DIE,DR,X,Y,REJCOM,I,SMACOM,SMA
"RTN","PSOREJUT",109,0)
 D NOW^%DTC
"RTN","PSOREJUT",110,0)
 S REJCOM="AUTOMATICALLY CLOSED" I REA'=1 S REJCOM=COM
"RTN","PSOREJUT",111,0)
 S DA(1)=RX,DA=REJ,DIE="^PSRX("_RX_",""REJ"","
"RTN","PSOREJUT",112,0)
 S DR="9///1;10///"_%_";11////"_$G(USR)_";12///"_REA_";13///"_REJCOM_";14///"_$P($G(COD1),"^")_";15///"_$P($G(COD1),"^",2)
"RTN","PSOREJUT",113,0)
 S DR=DR_";19///"_$P($G(COD1),"^",3)_";24///"_$G(CLA)_";25///"_$P($G(PA),"^")_";26///"_$P($G(PA),"^",2)
"RTN","PSOREJUT",114,0)
 D ^DIE
"RTN","PSOREJUT",115,0)
 ; Quit if this is a "eT" (non-billable TRICARE) or "eC" (non-billable CHAMPVA)
"RTN","PSOREJUT",116,0)
 Q:$$PSOET^PSOREJP3(RX,RFL)
"RTN","PSOREJUT",117,0)
 ;
"RTN","PSOREJUT",118,0)
 ; Add comment to the ECME User Screen
"RTN","PSOREJUT",119,0)
 ; First check if this is has more than one override value from the SMA action of the reject worklist
"RTN","PSOREJUT",120,0)
 ; If it is, we will need to enter multiple comments
"RTN","PSOREJUT",121,0)
 S SMA=0
"RTN","PSOREJUT",122,0)
 I $G(COD1)]"",$G(CLA)]"" S SMA=1
"RTN","PSOREJUT",123,0)
 I $G(COD1)]"",$G(PA)]"" S SMA=1
"RTN","PSOREJUT",124,0)
 I $G(CLA)]"",$G(PA)]"" S SMA=1
"RTN","PSOREJUT",125,0)
 I SMA D  Q
"RTN","PSOREJUT",126,0)
 . I $G(COD1)]"" D
"RTN","PSOREJUT",127,0)
 .. S SMACOM=$TR("DUR Override Codes "_$G(COD1)_"~"_$G(COD2)_"~"_$G(COD3)_" submitted.","^","/")
"RTN","PSOREJUT",128,0)
 .. S X=$$ADDCOMM^BPSBUTL(RX,RFL,SMACOM)
"RTN","PSOREJUT",129,0)
 . I $G(CLA)]"" D
"RTN","PSOREJUT",130,0)
 .. S SMACOM="Clarification Code(s) "_CLA_" submitted."
"RTN","PSOREJUT",131,0)
 .. S X=$$ADDCOMM^BPSBUTL(RX,RFL,SMACOM)
"RTN","PSOREJUT",132,0)
 . I $G(PA)]"" D
"RTN","PSOREJUT",133,0)
 .. S SMACOM="Prior Authorization Code ("_$P(PA,"^")_"/"_$P(PA,"^",2)_") submitted."
"RTN","PSOREJUT",134,0)
 .. S X=$$ADDCOMM^BPSBUTL(RX,RFL,SMACOM)
"RTN","PSOREJUT",135,0)
 . S SMACOM="Multiple actions taken to resolve. See comments for details."
"RTN","PSOREJUT",136,0)
 . S X=$$ADDCOMM^BPSBUTL(RX,RFL,SMACOM)
"RTN","PSOREJUT",137,0)
 ;
"RTN","PSOREJUT",138,0)
 ; If not SMA, fall through to here and enter one comment
"RTN","PSOREJUT",139,0)
 ; If IGNR flag is set, add that to the comment string before sending
"RTN","PSOREJUT",140,0)
 S X=$$ADDCOMM^BPSBUTL(RX,RFL,$S($G(IGNR):"IGNORED - ",1:"")_COM)
"RTN","PSOREJUT",141,0)
 Q
"RTN","PSOREJUT",142,0)
 ;
"RTN","PSOREJUT",143,0)
FIND(RX,RFL,REJDATA,CODE) ; - Returns whether a Rx/fill contains UNRESOLVED rejects
"RTN","PSOREJUT",144,0)
 ; Input: (r) RX - Rx IEN (#52) 
"RTN","PSOREJUT",145,0)
 ; (o) RFL - Refill # (If not passed, look original and all refills)
"RTN","PSOREJUT",146,0)
 ; (o) CODE - Can be null, a specific Reject Code(s) to be checked or multiple codes separated by comma's
"RTN","PSOREJUT",147,0)
 ; Output: 1 - Rx contains unresolved Rejects 
"RTN","PSOREJUT",148,0)
 ; 0 - Rx does not contain unresolved Rejects
"RTN","PSOREJUT",149,0)
 ; .REJDATA - Array containing the Reject(s) data (see 
"RTN","PSOREJUT",150,0)
 ; GET^PSOREJU2 for fields documentation)
"RTN","PSOREJUT",151,0)
 N RCODE,I,REJS
"RTN","PSOREJUT",152,0)
 S REJS=0,RCODE=""
"RTN","PSOREJUT",153,0)
 K REJDATA
"RTN","PSOREJUT",154,0)
 I $G(RFL),$$STATUS^PSOBPSUT(RX,RFL)="" Q 0
"RTN","PSOREJUT",155,0)
 I $G(CODE)]"",CODE["," S REJS=$$MULTI^PSOREJU4(RX,$G(RFL),.REJDATA,$G(CODE),REJS) G FEND
"RTN","PSOREJUT",156,0)
 S REJS=$$SINGLE^PSOREJU4(RX,$G(RFL),.REJDATA,$G(CODE),REJS)
"RTN","PSOREJUT",157,0)
FEND ;
"RTN","PSOREJUT",158,0)
 Q $S(REJS:1,1:0)
"RTN","PSOREJUT",159,0)
 ;
"RTN","PSOREJUT",160,0)
SYNC(RX,RFL,USR,RXCOB) ;
"RTN","PSOREJUT",161,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOREJUT",162,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOREJUT",163,0)
 ;         (o) USR - User using the system when this routine is called
"RTN","PSOREJUT",164,0)
 ;         (o) RXCOB - Coordination of Benefits code
"RTN","PSOREJUT",165,0)
 I '$G(RXCOB) S RXCOB=1
"RTN","PSOREJUT",166,0)
 N REJ,REJS,REJLST,I,IDX,CODE,DATA,TXT,PSOTRIC,ERR,PSODIV,OPECC,OVREJ,ESH
"RTN","PSOREJUT",167,0)
 L +^PSRX("REJ",RX):0 Q:'$T
"RTN","PSOREJUT",168,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJUT",169,0)
 S PSODIV=$$RXSITE^PSOBPSUT(RX,RFL)
"RTN","PSOREJUT",170,0)
 D DUR1^BPSNCPD3(RX,RFL,.REJ,"",RXCOB)
"RTN","PSOREJUT",171,0)
 S PSOTRIC="" S:$G(REJ(1,"ELIGBLT"))="T" PSOTRIC=1 S:$G(REJ(1,"ELIGBLT"))="C" PSOTRIC=2 S:PSOTRIC="" PSOTRIC=$$TRIC^PSOREJP1(RX,RFL,.PSOTRIC)
"RTN","PSOREJUT",172,0)
 K REJS S (OPECC,IDX,ERR)=""
"RTN","PSOREJUT",173,0)
 F  S IDX=$O(REJ(IDX)) Q:IDX=""  S TXT=$G(REJ(IDX,"REJ CODE LST")) D
"RTN","PSOREJUT",174,0)
 . F I=1:1:$L(TXT,",") S CODE=$P(TXT,",",I),OVREJ="" D
"RTN","PSOREJUT",175,0)
 . . I CODE="" Q
"RTN","PSOREJUT",176,0)
 . . I ",M6,M8,99,NN,"[(","_CODE_",") S ESH="",ESH=$$DUR^PSOBPSU2(RX,RFL) Q:'ESH&('PSOTRIC)
"RTN","PSOREJUT",177,0)
 . . I CODE'="79"&(CODE'="88")&('$G(PSOTRIC)) S ERR=$$EVAL^PSOREJU4(PSODIV,CODE,OPECC,.ERR) Q:'+ERR
"RTN","PSOREJUT",178,0)
 . . S:+$G(ERR) OVREJ=1
"RTN","PSOREJUT",179,0)
 . . I $$DUP^PSOREJU1(RX,+$$CLEAN^PSOREJU1($G(REJ(IDX,"RESPONSE IEN")))) Q
"RTN","PSOREJUT",180,0)
 . . S REJS(IDX,CODE)=OVREJ
"RTN","PSOREJUT",181,0)
 I '$D(REJS) L -^PSRX("REJ",RX) Q
"RTN","PSOREJUT",182,0)
SYNC2 ;
"RTN","PSOREJUT",183,0)
 S (IDX,CODE)="" F  S IDX=$O(REJS(IDX)) Q:IDX=""  D
"RTN","PSOREJUT",184,0)
 . F  S CODE=$O(REJS(IDX,CODE)) Q:CODE=""  K DATA D
"RTN","PSOREJUT",185,0)
 . . I 'OPECC&(CODE'[79)&(CODE'[88) S DATA("OVERRIDE MSG")="Automatically transferred due to override for reject code."
"RTN","PSOREJUT",186,0)
 . . I OPECC&(CODE'[79)&(CODE'[88) S DATA("OVERRIDE MSG")="Transferred by "_$S(CODE["eT":"",CODE["eC":"",1:"OPECC.")   ;cnf,PSO*7.0*358
"RTN","PSOREJUT",187,0)
 . . I $D(COMMTXT) S:COMMTXT'="" DATA("OVERRIDE MSG")=DATA("OVERRIDE MSG")_" "_$$CLEAN^PSOREJU1($P(COMMTXT,":",2))
"RTN","PSOREJUT",188,0)
 . . S DATA("DUR TEXT")=$$CLEAN^PSOREJU1($G(REJ(IDX,"DUR FREE TEXT DESC")))
"RTN","PSOREJUT",189,0)
 . . S DATA("DUR ADD MSG TEXT")=$$CLEAN^PSOREJU1($G(REJ(IDX,"DUR ADD MSG TEXT")))
"RTN","PSOREJUT",190,0)
 . . ; In NCPDP D0, the Payer Additional Message is a repeating field and we want to display as much of the
"RTN","PSOREJUT",191,0)
 . . ;   data on the reject information screen as possible so we put the messages together up to the field
"RTN","PSOREJUT",192,0)
 . . ;   length of 140
"RTN","PSOREJUT",193,0)
 . . N CNT,MSG
"RTN","PSOREJUT",194,0)
 . . S CNT="",DATA("PAYER MESSAGE")=""
"RTN","PSOREJUT",195,0)
 . . F  S CNT=$O(REJ(IDX,"PAYER MESSAGE",CNT)) Q:CNT=""!($L(DATA("PAYER MESSAGE"))>140)  D
"RTN","PSOREJUT",196,0)
 . . . S MSG=$$CLEAN^PSOREJU1(REJ(IDX,"PAYER MESSAGE",CNT))
"RTN","PSOREJUT",197,0)
 . . . I MSG]"" S DATA("PAYER MESSAGE")=DATA("PAYER MESSAGE")_MSG_"  "
"RTN","PSOREJUT",198,0)
 . . ; Call CLEAN again to strip the extra trailing spaces we might have added
"RTN","PSOREJUT",199,0)
 . . S DATA("PAYER MESSAGE")=$$CLEAN^PSOREJU1(DATA("PAYER MESSAGE"))
"RTN","PSOREJUT",200,0)
 . . S DATA("CODE")=CODE,DATA("REASON")=$$CLEAN^PSOREJU1($G(REJ(IDX,"REASON")))
"RTN","PSOREJUT",201,0)
 . . S DATA("PHARMACIST")=$G(USR),DATA("INSURANCE NAME")=$$CLEAN^PSOREJU1($G(REJ(IDX,"INSURANCE NAME")))
"RTN","PSOREJUT",202,0)
 . . S DATA("GROUP NAME")=$$CLEAN^PSOREJU1($G(REJ(IDX,"GROUP NAME"))),DATA("GROUP NUMBER")=$$CLEAN^PSOREJU1($G(REJ(IDX,"GROUP NUMBER")))
"RTN","PSOREJUT",203,0)
 . . S DATA("CARDHOLDER ID")=$$CLEAN^PSOREJU1($G(REJ(IDX,"CARDHOLDER ID"))),DATA("PLAN CONTACT")=$$CLEAN^PSOREJU1($G(REJ(IDX,"PLAN CONTACT")))
"RTN","PSOREJUT",204,0)
 . . S DATA("PREVIOUS FILL")=$$CLEAN^PSOREJU1($$DAT^PSOREJU1($G(REJ(IDX,"PREVIOUS FILL DATE"))))
"RTN","PSOREJUT",205,0)
 . . S DATA("OTHER REJECTS")=$$CLEAN^PSOREJU1($$OTH^PSOREJU1(CODE,$G(REJ(IDX,"REJ CODE LST"))))
"RTN","PSOREJUT",206,0)
 . . S DATA("RESPONSE IEN")=+$$CLEAN^PSOREJU1($G(REJ(IDX,"RESPONSE IEN")))
"RTN","PSOREJUT",207,0)
 . . S DATA("REASON SVC CODE")=$$REASON^PSOREJU2($G(REJ(IDX,"REASON"))),DATA("COB")=IDX
"RTN","PSOREJUT",208,0)
 . . S DATA("MESSAGE")=$$CLEAN^PSOREJU1($G(REJ(IDX,"MESSAGE")))
"RTN","PSOREJUT",209,0)
 . . S DATA("DUR RESPONSE DATA")=$$CLEAN^PSOREJU1($G(REJ(IDX,"DUR RESPONSE DATA")))
"RTN","PSOREJUT",210,0)
 . . S DATA("BIN")=$$CLEAN^PSOREJU1($G(REJ(IDX,"BIN")))
"RTN","PSOREJUT",211,0)
 . . D SAVE(RX,RFL,.DATA)
"RTN","PSOREJUT",212,0)
 L -^PSRX("REJ",RX)
"RTN","PSOREJUT",213,0)
 Q
"RTN","PSORXED")
0^8^B74971866^B72082911
"RTN","PSORXED",1,0)
PSORXED ;IHS/DSD/JCM - edit rx utility ;8/18/10 3:16pm
"RTN","PSORXED",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**2,16,21,26,56,71,125,201,246,289,298,366,385,403**;DEC 1997;Build 9
"RTN","PSORXED",3,0)
 ;External reference to ^PSXEDIT supported by DBIA 2209
"RTN","PSORXED",4,0)
 ;External reference to ^DD(52 supported by DBIA 999
"RTN","PSORXED",5,0)
 ;External reference to ^PSDRUG supported by DBIA 221
"RTN","PSORXED",6,0)
 ;External reference to ^PS(55 supported by DBIA 2228
"RTN","PSORXED",7,0)
START ;this entry point is no longer used.
"RTN","PSORXED",8,0)
 ;D INIT,LKUP G:PSORXED("QFLG") END D PARSE,EOJ G START
"RTN","PSORXED",9,0)
END D EOJ
"RTN","PSORXED",10,0)
 Q
"RTN","PSORXED",11,0)
INIT S PSORXED("QFLG")=0 Q
"RTN","PSORXED",12,0)
LKUP ; this line of code is no longer used S PSONUM="RX",PSONUM("A")="EDIT",PSOQFLG=0 D EN1^PSONUM I PSOQFLG!($Q(PSOLIST)']"") S PSORXED("QFLG")=1
"RTN","PSORXED",13,0)
 K PSOQFLG Q
"RTN","PSORXED",14,0)
 ;
"RTN","PSORXED",15,0)
PARSE F PSORXED("LIST")=1:1 Q:'$D(PSOLIST(PSORXED("LIST")))!PSORXED("QFLG")  F PSORXED("I")=1:1:$L(PSOLIST(PSORXED("LIST"))) S PSORXED("IRXN")=$P(PSOLIST(PSORXED("LIST")),",",PSORXED("I")) D:+PSORXED("IRXN") PROCESS
"RTN","PSORXED",16,0)
 Q
"RTN","PSORXED",17,0)
PROCESS S PSORXED("DFLG")=0 G:$G(^PSRX(PSORXED("IRXN"),0))']"" PROCESSX
"RTN","PSORXED",18,0)
 ;*298 Track PI and Oth Lang PI
"RTN","PSORXED",19,0)
 S PSORXED("RX0")=^PSRX(PSORXED("IRXN"),0),PSORXED("RX2")=^(2),PSORXED("RX3")=^(3),PSOSIG=$G(^PSRX(PSORXED("IRXN"),"SIG")),PSODAYS=$P(PSORXED("RX0"),"^",8),PSOPINS=$G(^PSRX(PSORXED("IRXN"),"INS")),PSOOINS=$G(^PSRX(PSORXED("IRXN"),"INSS"))
"RTN","PSORXED",20,0)
 S (I,RFED,RFDT)=0 F  S I=$O(^PSRX(PSORXED("IRXN"),1,I)) Q:'I  S RFED=I,PSORXED("RX1")=^PSRX(PSORXED("IRXN"),1,I,0),RFDT=$P(^(0),"^"),PSODAYS=$P(^(0),"^",10) S:$P(^(0),"^",17) PSONEW("PROVIDER NAME")=$P(^VA(200,$P(^(0),"^",17),0),"^")
"RTN","PSORXED",21,0)
 S PSORXST=+$P($G(^PS(53,+$P(PSORXED("RX0"),"^",3),0)),"^",7) N DA S DA=PSORXED("IRXN") D EN^PSORXPR
"RTN","PSORXED",22,0)
 D CHECK G:PSORXED("DFLG") PROCESSX
"RTN","PSORXED",23,0)
 N X S X="PSXEDIT" X ^%ZOSF("TEST") K X I $T D ^PSXEDIT I $G(PSXOUT) K PSXOUT G L1
"RTN","PSORXED",24,0)
 D DIE^PSORXED1
"RTN","PSORXED",25,0)
L1 D LOG,POST
"RTN","PSORXED",26,0)
PROCESSX Q
"RTN","PSORXED",27,0)
CHECK Q  L +^PSRX(PSORXED("IRXN")):$S(+$G(^DD("DILOCKTM"))>0:+^DD("DILOCKTM"),1:3) I '$T W $C(7),!!,"Rx Number is Locked by Another User!",! S PSORXED("DFLG")=1 H 5 Q
"RTN","PSORXED",28,0)
 I $G(^PSDRUG($P(PSORXED("RX0"),"^",6),"I"))]"",^("I")<DT D  G CHECKX
"RTN","PSORXED",29,0)
 . W !,$C(7),"This drug has been inactivated. ",! S PSORXED("DFLG")=1 Q
"RTN","PSORXED",30,0)
 K PSPOP I $G(PSODIV),$P(PSORXED("RX2"),"^",9)'=PSOSITE S PSPRXN=PSORXED("IRXN") D CHK1^PSOUTLA I $G(PSPOP)=1 S PSORXED("DFLG")=1 G CHECKX
"RTN","PSORXED",31,0)
 ;
"RTN","PSORXED",32,0)
 I $P(^PSRX(PSORXED("IRXN"),"STA"),"^")=14!($P(^("STA"),"^")=15) S PSORXED("DFLG")=1 W !!,$C(7),"Discontinued prescriptions cannot be edited.",! G CHECKX
"RTN","PSORXED",33,0)
 I $D(^PS(52.4,"B",PSORXED("IRXN"))) S PSORXED("DFLG")=1 W !!,$C(7),"Non-verified prescriptions cannot be edited.",!
"RTN","PSORXED",34,0)
CHECKX K PSPOP,DIR,DTOUT,DUOUT,Y,X Q
"RTN","PSORXED",35,0)
LOG K PSFROM S DA=PSORXED("IRXN"),(PSRX0,RX0)=PSORXED("RX0"),QTY=$P(RX0,"^",7),QTY=QTY-$P(^PSRX(DA,0),"^",7) K ZD(DA) S:'$O(^PSRX(DA,1,0)) ZD(DA)=$P(^PSRX(DA,2),"^",2)
"RTN","PSORXED",36,0)
 N PSOTRIC S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(PSORXED("IRXN"),0,.PSOTRIC)
"RTN","PSORXED",37,0)
 S COM="" F I=3,4,5:1:13,17 I $P(PSRX0,"^",I)'=$P(^PSRX(DA,0),"^",I) S PSI=$S(I=13:1,1:I),COM=COM_$P(^DD(52,PSI,0),"^")_" ("_$P(PSRX0,"^",I)_"),"
"RTN","PSORXED",38,0)
 ;
"RTN","PSORXED",39,0)
 N PSOFILDAT S PSOFILDAT=0   ; fill date edit flag
"RTN","PSORXED",40,0)
 I $P(PSORXED("RX2"),"^",2)'=$P(^PSRX(DA,2),"^",2) S COM=COM_$P(^DD(52,22,0),"^")_" ("_$P(PSORXED("RX2"),"^",2)_"),",PSOFILDAT=1     ; set flag indicating the original fill date was edited
"RTN","PSORXED",41,0)
 I $P(PSORXED("RX3"),"^",7)'=$P(^PSRX(DA,3),"^",7) S COM=COM_$P(^DD(52,12,0),"^")_" ("_$P(PSORXED("RX3"),"^",7)_"),"
"RTN","PSORXED",42,0)
 I PSOSIG'=$P($G(^PSRX(DA,"SIG")),"^") S COM=COM_$P(^DD(52,10,0),"^")_" ("_PSOSIG_"),"
"RTN","PSORXED",43,0)
 ;*298 Track PI and Oth Lang PI
"RTN","PSORXED",44,0)
 I PSOPINS'=$G(^PSRX(DA,"INS")) S COM=COM_$P(^DD(52,114,0),"^")_" ("_PSOPINS_"),"
"RTN","PSORXED",45,0)
 I PSOOINS'=$G(^PSRX(DA,"INSS")) S COM=COM_$P(^DD(52,114.1,0),"^")_" ("_PSOOINS_"),"
"RTN","PSORXED",46,0)
 I PSOTRN'=$G(^PSRX(DA,"TN")) S COM=COM_$P(^DD(52,6.5,0),"^")_" ("_PSOTRN_"),"
"RTN","PSORXED",47,0)
 D FILL
"RTN","PSORXED",48,0)
 I PSOTRIC&('$$RXRLDT^PSOBPSUT(PSORXED("IRXN"),PSOEDITF)),COM="" D LBLCHK G LOGX ; labels for unreleased TRICARE/CHAMPVA resolved claims; when COM'="" label always printed
"RTN","PSORXED",49,0)
 I PSOTRIC&(COM="") D LBL D ASKL:PSOEDITL G:'PSOEDITL LOGX G LOG1
"RTN","PSORXED",50,0)
 G:COM="" LOGX K PSRX0 S X=$S($D(PSOCLC):PSOCLC,1:DUZ)
"RTN","PSORXED",51,0)
 D LBL D:$G(PSOEDITL)=2&($P($G(^PSRX(DA,"STA")),"^")'=5)&('$G(RXRP(DA)))&('$G(PSOSIGFL)) ASKL
"RTN","PSORXED",52,0)
 S K=1,D1=0 F Z=0:0 S Z=$O(^PSRX(DA,"A",Z)) Q:'Z  S D1=Z,K=K+1
"RTN","PSORXED",53,0)
 S D1=D1+1 S:'($D(^PSRX(DA,"A",0))#2) ^(0)="^52.3DA^^^" S ^(0)=$P(^(0),"^",1,2)_"^"_D1_"^"_K
"RTN","PSORXED",54,0)
 ;
"RTN","PSORXED",55,0)
 ;PSO*7*366
"RTN","PSORXED",56,0)
 D NOW^%DTC S ^PSRX(DA,"A",D1,0)=%_"^E^"_$G(DUZ)_"^0^"_COM
"RTN","PSORXED",57,0)
LOG1 ;
"RTN","PSORXED",58,0)
 I QTY,$P(^PSRX(DA,2),"^",13) S ^PSDRUG($P(^PSRX(DA,0),"^",6),660.1)=$S($D(^PSDRUG(+$P(^PSRX(DA,0),"^",6),660.1)):^(660.1)+QTY,1:QTY)
"RTN","PSORXED",59,0)
 S:$P(RX0,"^",6)'=$P(^PSRX(DA,0),"^",6) ^PSDRUG(+$P(^PSRX(DA,0),"^",6),660.1)=$S($D(^PSDRUG(+$P(RX0,"^",6),660.1)):^(660.1)+$P(RX0,"^",7),1:$P(RX0,"^",7))
"RTN","PSORXED",60,0)
 S RX0=^PSRX(DA,0),RX2=^(2),J=DA,OEXDT=+$P(RX2,"^",6) D ^PSOEXDT S NEXDT=+$P(RX2,"^",6) I OEXDT'=NEXDT D
"RTN","PSORXED",61,0)
 .K ^PSRX("AG",OEXDT,DA) S ^PSRX("AG",NEXDT,DA)=""
"RTN","PSORXED",62,0)
 .S D=+$P(RX0,"^",2) K ^PS(55,D,"P","A",OEXDT,DA) S ^PS(55,D,"P","A",NEXDT,DA)=""
"RTN","PSORXED",63,0)
 K D,OEXDT,NEXDT
"RTN","PSORXED",64,0)
 ; 
"RTN","PSORXED",65,0)
 ; Do not add RX to the label list when there are:
"RTN","PSORXED",66,0)
 ;   1) Unresolved DUR/Refill Too Soon rejects
"RTN","PSORXED",67,0)
 ;   2) Unresolved TRICARE/CHAMPVA rejects
"RTN","PSORXED",68,0)
 ;   3) TRICARE/CHAMPVA claims that are IN PROGRESS
"RTN","PSORXED",69,0)
 ; But if the Fill Date was modified then bypass these checks and allow to update the label list  - PSO*7*403
"RTN","PSORXED",70,0)
 I 'PSOFILDAT,$$ECMECHK^PSOREJU3(DA,$G(PSOEDITF)) G LOGX
"RTN","PSORXED",71,0)
 ;
"RTN","PSORXED",72,0)
 G:+$P(^PSRX(J,"STA"),"^")!($G(PSOEDITL)=1&('$G(PSOTRIC))) LOGX S RXFL(PSORXED("IRXN"))=$S($G(PSOEDITF):$G(PSOEDITF),1:0) I $G(PSORX("PSOL",1))']"" S PSORX("PSOL",1)=PSORXED("IRXN")_"," D SETRP G LOGX
"RTN","PSORXED",73,0)
 G:$G(PSOEDITL)=1&('$G(PSOTRIC)) LOGX
"RTN","PSORXED",74,0)
 ;
"RTN","PSORXED",75,0)
 F PSOX1=0:0 S PSOX1=$O(PSORX("PSOL",PSOX1)) Q:'PSOX1  S PSOX2=PSOX1
"RTN","PSORXED",76,0)
 I $L(PSORX("PSOL",PSOX2))+$L(PSORXED("IRXN"))<220 D  G LOGX
"RTN","PSORXED",77,0)
 .I PSORX("PSOL",PSOX2)'[PSORXED("IRXN")_"," S PSORX("PSOL",PSOX2)=PSORX("PSOL",PSOX2)_PSORXED("IRXN")_"," D SETRP
"RTN","PSORXED",78,0)
 E  I $G(PSORX("PSOL",PSOX2+1))'[PSORXED("IRXN")_"," S PSORX("PSOL",PSOX2+1)=PSORXED("IRXN")_"," D SETRP   ;;PSO*7*246
"RTN","PSORXED",79,0)
LOGX K PSOEDITF,PSOEDITR,PSOEDITL D:$G(RFED) ^PSORXED1
"RTN","PSORXED",80,0)
 Q
"RTN","PSORXED",81,0)
POST ; D NEXT D:$G(^PSRX(PSORXED("IRXN"),"IB"))]"" COPAY K PSODAYS,PSORXST
"RTN","PSORXED",82,0)
 D NEXT D COPAY K PSODAYS,PSORXST
"RTN","PSORXED",83,0)
 Q
"RTN","PSORXED",84,0)
COPAY S DA=PSORXED("IRXN") I 'RFD,PSODAYS'=+$P(^PSRX(DA,0),"^",8) I +$G(^PSRX(DA,"IB"))!($P($G(^PSRX(DA,"PFS")),"^",2)) D CPCK G RXST
"RTN","PSORXED",85,0)
 I RFD,+$G(^PSRX(DA,1,RFD,0)),PSODAYS'=$P($G(^PSRX(DA,1,RFD,0)),"^",10) I +$G(^PSRX(DA,"IB"))!($P($G(^PSRX(DA,1,RFD,"PFS")),"^",2)) D CPCK
"RTN","PSORXED",86,0)
RXST G:PSORXST=+$P($G(^PS(53,+$P(^PSRX(DA,0),"^",3),0)),"^",7) COPAYX
"RTN","PSORXED",87,0)
 W !,$C(7),"Patient Status field for this Rx has been changed from a ",$S(PSORXST=0:"COPAYMENT ELIGIBLE",PSORXST=1:"COPAYMENT EXEMPT",1:"")
"RTN","PSORXED",88,0)
 W !,"patient status."
"RTN","PSORXED",89,0)
 W "  The copay status for this Rx will be automatically adjusted."
"RTN","PSORXED",90,0)
 W !,"If action needs to be taken to adjust charges you MUST use the"
"RTN","PSORXED",91,0)
 W !,"Reset Copay Status/Cancel Charges option."
"RTN","PSORXED",92,0)
 W ! K DIR S DIR(0)="E",DIR("A")="Press Return to continue" D ^DIR K DIR
"RTN","PSORXED",93,0)
 I +$P($G(^PS(53,+$P(^PSRX(DA,0),"^",3),0)),"^",7)=1 D  ; SET TO NO COPAY AND AUDIT CHANGE
"RTN","PSORXED",94,0)
 . I '$D(^PSRX(DA,"IB")) S ^PSRX(DA,"IB")=""
"RTN","PSORXED",95,0)
 . S $P(^PSRX(DA,"IB"),"^",1)=""
"RTN","PSORXED",96,0)
 . S PSODA=DA
"RTN","PSORXED",97,0)
 . S PSOREF=RFD
"RTN","PSORXED",98,0)
 . S PSOCOMM="Rx Patient Status Change"
"RTN","PSORXED",99,0)
 . S PSOOLD="Copay"
"RTN","PSORXED",100,0)
 . S PSONW="No Copay"
"RTN","PSORXED",101,0)
 . S PREA="R"
"RTN","PSORXED",102,0)
 . D ACTLOG^PSOCPA
"RTN","PSORXED",103,0)
COPAYX K DA,PSODAYS,PSO,PSODA,PSOFLAG,PSORXST,RFD,PSOREF,PSOCOMM,PSOOLD,PSONW
"RTN","PSORXED",104,0)
 Q
"RTN","PSORXED",105,0)
CPCK ;update COPAY
"RTN","PSORXED",106,0)
 I 'RFD,'$D(^PSRX(DA,"PFS")) G CPCK1
"RTN","PSORXED",107,0)
 I RFD,'$D(^PSRX(DA,1,RFD,"PFS")) G CPCK1
"RTN","PSORXED",108,0)
 N PSOPFS S PSOPFS=$P($S('RFD:^PSRX(DA,"PFS"),1:^PSRX(DA,1,RFD,"PFS")),"^",1,2)
"RTN","PSORXED",109,0)
 I +$G(PSOPFS)>0&('$P($G(PSOPFS),"^",2)) K PSOPFS Q
"RTN","PSORXED",110,0)
 I +$G(PSOPFS)<1 K PSOPFS
"RTN","PSORXED",111,0)
 E  S PSOPFS="1^"_PSOPFS
"RTN","PSORXED",112,0)
CPCK1 N TYPE S PSO=2,PSODA=DA,PSOFLAG=1,PSOPAR7=$G(^PS(59,PSOSITE,"IB")),TYPE=RFD D RXED^PSOCPA K TYPE
"RTN","PSORXED",113,0)
 Q
"RTN","PSORXED",114,0)
NEXT D NEXT^PSOUTIL(.PSORXED) K DIE,DR,DA S DIE="^PSRX(",DA=PSORXED("IRXN")
"RTN","PSORXED",115,0)
 S DR="101///"_$P(PSORXED("RX3"),"^")_";102///"_$P(PSORXED("RX3"),"^",2) D ^DIE K DIE,DR,DA,X,Y
"RTN","PSORXED",116,0)
 Q
"RTN","PSORXED",117,0)
EOJ K PSOSIG,PSORXED,PSOLIST,END,PSRX0,PSOPINS,PSOOINS
"RTN","PSORXED",118,0)
 D EX^PSORXED1
"RTN","PSORXED",119,0)
 Q
"RTN","PSORXED",120,0)
FILL ;
"RTN","PSORXED",121,0)
 K PSOEDITF,PSOEDITR,PSOERF
"RTN","PSORXED",122,0)
 F PSOEZ=0:0 S PSOEZ=$O(^PSRX(DA,1,PSOEZ)) Q:'PSOEZ  S:$D(^PSRX(DA,1,PSOEZ,0)) PSOERF=PSOEZ
"RTN","PSORXED",123,0)
 S PSOEDITF=$S($G(PSOERF):+$G(PSOERF),1:0)
"RTN","PSORXED",124,0)
 I PSOEDITF S PSOEDITR=$S($P($G(^PSRX(DA,1,PSOEDITF,0)),"^",18):1,1:0) G FILLX
"RTN","PSORXED",125,0)
 S PSOEDITR=$S($P($G(^PSRX(DA,2)),"^",13):1,1:0)
"RTN","PSORXED",126,0)
FILLX K PSOERF,PSOEZ
"RTN","PSORXED",127,0)
 Q
"RTN","PSORXED",128,0)
LBL ;
"RTN","PSORXED",129,0)
 S PSOEDITL=0 N PSOECMES S PSOECMES="",PSOECMES=$$STATUS^PSOBPSUT(PSORXED("IRXN"),PSOEDITF)
"RTN","PSORXED",130,0)
 I PSOTRIC D  Q:'PSOEDITL
"RTN","PSORXED",131,0)
 . I PSOECMES["IN PROGRESS"!(PSOECMES["REJECTED") S PSOEDITL=0 Q
"RTN","PSORXED",132,0)
 . I $$FIND^PSOREJUT(PSORXED("IRXN"),PSOEDITF) S PSOEDITL=0 Q
"RTN","PSORXED",133,0)
 . I ",12,14,15,"[(","_$P($G(^PSRX(PSORXED("IRXN"),"STA")),"^")_",") S PSOEDITL=0 Q
"RTN","PSORXED",134,0)
 . I COM="" S:'$G(PSOEDITF)&$G(PSOEDITR) PSOEDITL=2 Q
"RTN","PSORXED",135,0)
 Q:PSOEDITL=2&($G(PSOTRIC))&(COM="")
"RTN","PSORXED",136,0)
 I COM["PROV"!(COM["QTY")!(COM["DAYS")!(COM["MAIL")!(COM["UNIT")!(COM["FILL DATE")!(COM["REMARKS") I COM'["STATUS",COM'["CLINIC",COM'["DRUG",COM'["REFILLS",COM'["ISSUE",COM'["SIG",COM'["TRADE" D  Q
"RTN","PSORXED",137,0)
 .I $G(PSOEDITF) S PSOEDITL=1 Q
"RTN","PSORXED",138,0)
 .I '$G(PSOEDITF),'$G(PSOEDITR),PSOTRIC S PSOEDITL=2 Q
"RTN","PSORXED",139,0)
 .I '$G(PSOEDITF),$G(PSOEDITR) S PSOEDITL=2
"RTN","PSORXED",140,0)
 I '$G(PSOEDITF),$G(PSOEDITR) S PSOEDITL=2 Q
"RTN","PSORXED",141,0)
 I '$G(PSOEDITF),'$G(PSOEDITR) S PSOEDITL=0 Q
"RTN","PSORXED",142,0)
 I $G(RXRP(DA)) S PSOEDITL=1 Q
"RTN","PSORXED",143,0)
 I '$G(RXRP(DA)),$G(PSOEDITR) S PSOEDITL=2 Q
"RTN","PSORXED",144,0)
 S PSOEDITL=0
"RTN","PSORXED",145,0)
 Q
"RTN","PSORXED",146,0)
LBLCHK ;
"RTN","PSORXED",147,0)
 I '$$RXRLDT^PSOBPSUT(PSORXED("IRXN"),PSOEDITF) D
"RTN","PSORXED",148,0)
 .I $$PTLBL^PSOREJP2(PSORXED("IRXN"),PSOEDITF) D PRINT^PSOREJP3(PSORXED("IRXN"),PSOEDITF)
"RTN","PSORXED",149,0)
 Q
"RTN","PSORXED",150,0)
ASKL ;
"RTN","PSORXED",151,0)
 W ! K DIR S DIR("?",1)="You have edited a fill that has already been released. Do you want to",DIR("?",2)="include this prescription as one of the prescriptions to be acted upon",DIR("?",3)="at the label prompt."
"RTN","PSORXED",152,0)
 S DIR("?")="Enter 'Yes' to generate a reprint label request."
"RTN","PSORXED",153,0)
 S DIR(0)="Y",DIR("A")="The last fill has been released, do you want a reprint label",DIR("B")="Y" D ^DIR K DIR I Y=1 S PSOEDITL=$S($G(PSOTRIC)&(Y'=1):1,1:0) Q
"RTN","PSORXED",154,0)
 S PSOEDITL=1
"RTN","PSORXED",155,0)
 Q
"RTN","PSORXED",156,0)
SETRP I $P($G(^PSRX(PSORXED("IRXN"),"STA")),"^")'=5,$G(PSOEDITL)=0 S RXRP(PSORXED("IRXN"))="1^^^1",VALMSG="Label will reprint due to Edit"
"RTN","PSORXED",157,0)
 Q
"RTN","PSORXL1")
0^11^B53111526^B52040688
"RTN","PSORXL1",1,0)
PSORXL1 ;BIR/SAB - action to be taken on prescriptions ;10/5/07 2:40pm
"RTN","PSORXL1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**36,46,148,260,274,287,289,358,251,385,403**;DEC 1997;Build 9
"RTN","PSORXL1",3,0)
 ;External reference to $$DS^PSSDSAPI supported by DBIA 5424
"RTN","PSORXL1",4,0)
S S SPPL="",PPL1=1 S:'$G(PPL) PPL=$G(PSORX("PSOL",PPL1)) G:$G(PPL)']"" D1
"RTN","PSORXL1",5,0)
S1 F PI=1:1 Q:$P(PPL,",",PI)=""  S DA=$P(PPL,",",PI) D
"RTN","PSORXL1",6,0)
 .S PSORFD1=0 F PSOX7=0:0 S PSOX7=$O(^PSRX(DA,1,PSOX7)) Q:'$G(PSOX7)  S (PSORFD1)=PSOX7
"RTN","PSORXL1",7,0)
 .I 'PSORFD1,$$DS^PSSDSAPI,($G(^PS(52.4,DA,1))>0)&('$D(^XUSEC("PSORPH",DUZ))) S SPPL=SPPL_DA_"," Q
"RTN","PSORXL1",8,0)
 .I 'PSORFD1,$P(^PSRX(DA,"STA"),"^")=4!($D(^PSRX(DA,"DRI"))&('$D(^XUSEC("PSORPH",DUZ)))) S SPPL=SPPL_DA_"," Q
"RTN","PSORXL1",9,0)
 .I $P(^PSRX(DA,"STA"),"^")<10,$P(^("STA"),"^")'=4 D SUS Q
"RTN","PSORXL1",10,0)
 .K PSORFD1,PSOX7
"RTN","PSORXL1",11,0)
 I $G(SPPL)]"" D  K DIR S DIR(0)="E",DIR("A")="Press Return to Continue" D ^DIR K DIR,DUOUT,DTOUT,DIRUT
"RTN","PSORXL1",12,0)
 .W !!,$C(7),"Drug Interaction Rx(s) and/or Dose Warning: " F I=1:1 Q:$P(SPPL,",",I)=""  W $P(^PSRX($P(SPPL,",",I),0),"^")_", "
"RTN","PSORXL1",13,0)
 .I $G(PSOLAP)=""!($G(PSOLAP)=$G(ION)) W !,"Label device must be selected for Drug Interaction or dose warning label!"
"RTN","PSORXL1",14,0)
 .S PPL=SPPL,DG=1 N PPL1 D Q^PSORXL K DG,SPPL
"RTN","PSORXL1",15,0)
 S SUSPT="SUSPENSE" G D1
"RTN","PSORXL1",16,0)
 Q
"RTN","PSORXL1",17,0)
SUS S ACT=1,RXN=DA,RX0=^PSRX(DA,0),SD=$S($G(ZD(DA)):$E(ZD(DA),1,7),1:$P(^(3),"^")),RXS=$O(^PS(52.5,"B",DA,0)) I RXS S RXCMOP=$P($G(^PS(52.5,RXS,0)),"^",7) D  Q:$G(DFLG)!($G(PSOWFLG))
"RTN","PSORXL1",18,0)
 .;checks to see if future fill exists
"RTN","PSORXL1",19,0)
 .S PSOWFLG=0 I '$G(RXPR(DA)),$P($G(^PS(52.5,RXS,"P")),"^")=0,$P($G(^PSRX(DA,"STA")),"^")=5 D SWARN Q:$G(PSOWFLG)
"RTN","PSORXL1",20,0)
 .K PSOWFLG I $G(RXPR(DA)),'$P($G(^PS(52.5,RXS,"P")),"^") D WARN Q:$G(DFLG)
"RTN","PSORXL1",21,0)
 .S DA=RXS,DIK="^PS(52.5," D ^DIK S DA=RXN I $P($G(^PSRX(RXN,"STA")),"^")=5 S $P(^("STA"),"^")=0
"RTN","PSORXL1",22,0)
 G:$G(RXRP(DA))!($G(RXPR(DA))) LOCK
"RTN","PSORXL1",23,0)
 I $G(PSXSYS) D SUS1^PSOCMOP I $G(XFLAG)=1 K XFLAG Q
"RTN","PSORXL1",24,0)
LOCK I $P($G(^PSRX(RXN,"STA")),"^")=3 G SUSQ
"RTN","PSORXL1",25,0)
 ; The PSOSITE variable will not be set by the code that processes the CMOP release message - PSO*7*403
"RTN","PSORXL1",26,0)
 I '$G(PSOSITE) N PSOSITE S PSOSITE=$$RXSITE^PSOBPSUT(RXN,$G(RXFL(RXN)))
"RTN","PSORXL1",27,0)
 S RXP=+$G(RXPR(DA)),DIC="^PS(52.5,",DIC(0)="L",X=RXN,DIC("DR")=".02///"_SD_";.03////"_$P(^PSRX(DA,0),"^",2)_";.04///M;.05///"_RXP_";.06////"_PSOSITE_";2///0" K DD,DO D FILE^DICN D  I +Y,'$G(RXP),$G(RXRP(RXN)) S $P(^PS(52.5,+Y,0),"^",12)=1
"RTN","PSORXL1",28,0)
 .K DD,DO I +Y,$G(PSOEXREP) S $P(^PS(52.5,+Y,0),"^",12)=1
"RTN","PSORXL1",29,0)
 .I +Y S $P(^PS(52.5,+Y,0),"^",13)=$G(RXFL(RXN))
"RTN","PSORXL1",30,0)
 S $P(^PSRX(RXN,"STA"),"^")=5,LFD=$E(SD,4,5)_"-"_$E(SD,6,7)_"-"_$E(SD,2,3) D ACT
"RTN","PSORXL1",31,0)
 W !!,$S(RXP:"Partial ",1:"")_"RX# ",$P(^PSRX(RXN,0),"^")_" has been suspended until "_LFD_"."
"RTN","PSORXL1",32,0)
 S VALMSG=$S(RXP:"Partial ",1:"")_"Rx# "_$P(^PSRX(RXN,0),"^")_" Has Been Suspended Until "_LFD_"."_$S($G(RXRP(RXN))&('$G(RXP)):" (Reprint)",1:"")
"RTN","PSORXL1",33,0)
 S COMM=$S(RXP:"Partial ",1:"")_"Rx# "_$P(^PSRX(RXN,0),"^")_" Has Been Suspended Until "_LFD_"."_$S($G(RXRP(RXN))&('$G(RXP)):" (Reprint)",1:"")
"RTN","PSORXL1",34,0)
 D:'$D(^TMP("PSORXN",$J,RXN)) EN^PSOHLSN1(RXN,"SC","ZS",COMM)
"RTN","PSORXL1",35,0)
 S:$D(^TMP("PSORXN",$J,RXN)) $P(^TMP("PSORXN",$J,RXN),"^",4)=COMM
"RTN","PSORXL1",36,0)
 ;
"RTN","PSORXL1",37,0)
 ; - If not a PARTIAL, reverse ECME Claim, if necessary
"RTN","PSORXL1",38,0)
 I '$G(RXFL(RXN)) S RXFL(RXN)=$$LSTRFL^PSOBPSU1(RXN)
"RTN","PSORXL1",39,0)
 I '$G(RXP),'$G(PSONPROG) D REVERSE^PSOBPSU1(RXN,,"DC",3)  ;PSONPROG - TRICARE or CHAMPVA in progress, don't reverse
"RTN","PSORXL1",40,0)
 K COMM
"RTN","PSORXL1",41,0)
SUSQ Q
"RTN","PSORXL1",42,0)
 ;PSO*7*274 always recalculate RXF
"RTN","PSORXL1",43,0)
ACT S RXF=0 F I=0:0 S I=$O(^PSRX(DA,1,I)) Q:'I  S RXF=I S:I>5 RXF=I+1
"RTN","PSORXL1",44,0)
 S IR=0 F FDA=0:0 S FDA=$O(^PSRX(DA,"A",FDA)) Q:'FDA  S IR=FDA
"RTN","PSORXL1",45,0)
 S IR=IR+1,^PSRX(DA,"A",0)="^52.3DA^"_IR_"^"_IR
"RTN","PSORXL1",46,0)
 D NOW^%DTC S ^PSRX(DA,"A",IR,0)=%_"^S^"_DUZ_"^"_RXF_"^"_$S(RXP:"Partial ",1:"")_"RX "_$S($G(RXRP(DA))&('$G(RXP)):"Reprint ",1:"")_"Placed on Suspense until "_LFD K RXF,I,FDA,DIC,DIE,DR,Y,X,%,%H,%I
"RTN","PSORXL1",47,0)
 Q
"RTN","PSORXL1",48,0)
D1 I $O(PSORX("PSOL",$G(PPL1))) S PPL1=$O(PSORX("PSOL",$G(PPL1))),PPL=PSORX("PSOL",PPL1) G S1
"RTN","PSORXL1",49,0)
 G:$D(RXRS) RXS^PSORXL
"RTN","PSORXL1",50,0)
 K LBL,PPL1,PPL,DIR,%DT,%,SD,COUNT,EXDT,L,PDUZ,REF,REPRINT,RFDATE,RFL1,RFLL,RXN,WARN,ZY,FLD,PI,ZD,ACT,X,Y,DIRUT,DUOUT,DTOUT,DIROUT,DFLG,RXPD,PSOWFLG
"RTN","PSORXL1",51,0)
 Q
"RTN","PSORXL1",52,0)
WARN W ! K DIR,DIRUT,DUOUT,DTOUT,DFLG S Y=$P(^PS(52.5,RXS,0),"^",2) X ^DD("DD") S RXPD=Y,DIR(0)="SA^S:SUSPEND;Q:QUEUE;E:EXIT"
"RTN","PSORXL1",53,0)
 S DIR("A",1)="Rx #"_$P(^PSRX(DA,0),"^")_" is suspended "_$S($G(RXCMOP)]"":"for CMOP ",1:"")_"until "_RXPD
"RTN","PSORXL1",54,0)
 I $G(RXCMOP)]"" D  G WARN1
"RTN","PSORXL1",55,0)
 .W !!,"A partial entered for this Rx cannot be suspended."
"RTN","PSORXL1",56,0)
 .W !,"You may pull this fill from suspense or print the label now.",!!
"RTN","PSORXL1",57,0)
 .S DIR("A",2)=" ",DIR("A",3)="   Do you want to Queue to print",DIR("A")="                or Exit: "
"RTN","PSORXL1",58,0)
 S DIR("A",2)=" ",DIR("A",3)="   Do you want to: Suspend Partial",DIR("A",4)="                   Queue to print",DIR("A")="                or Exit:  "
"RTN","PSORXL1",59,0)
WARN1 S DIR("B")="EXIT",DIR("?")="^D HLP^PSORXL1" D ^DIR K DIR
"RTN","PSORXL1",60,0)
 I Y="E"!($D(DIRUT))!(Y="S"&($G(RXCMOP)]"")) S DA(1)=DA,DA=RXPR(DA),DIK="^PSRX("_DA(1)_",""P""," D ^DIK S ^PSRX(DA(1),"TYPE")=0,DFLG=1 W $C(7)," Partial Removed!" Q
"RTN","PSORXL1",61,0)
 I Y="Q" S DPPL=PPL,HOLDPPL1=$G(PPL1),DPI=PI,RXLTOP=1 S PPL=$G(RXN)_"," S PSPARTXX=1 D Q^PSORXL K PSPARTXX S DFLG=1,PPL=DPPL,PI=DPI,PPL1=$G(HOLDPPL1) K HOLDPPL1,DPPL,DPPI,DPI,RXLTOP Q
"RTN","PSORXL1",62,0)
 Q
"RTN","PSORXL1",63,0)
HLP I $G(RXCMOP)']"" W !!,"If you choose to suspend this partial Rx, the current suspended fill will",!,"be replaced by the partial.  You may want to pull this fill early instead.",!
"RTN","PSORXL1",64,0)
 I $G(RXCMOP)]"" W !!,"You cannot suspend a partial when a CMOP fill is in suspense, because the partial will replace the CMOP fill in suspense."
"RTN","PSORXL1",65,0)
 W !,"If you choose to queue this partial, the label will printout on the previous",!,"selected label printer.",!
"RTN","PSORXL1",66,0)
 W !,"You may exit without printing or suspending this partial.  This will also delete",!,"the partial Rx entered."
"RTN","PSORXL1",67,0)
 Q
"RTN","PSORXL1",68,0)
SWARN ;
"RTN","PSORXL1",69,0)
 S PSORXLDA=$G(DA),PSORXZD=$P($G(^PS(52.5,RXS,0)),"^",2)
"RTN","PSORXL1",70,0)
 W $C(7),!!,"Rx "_$P($G(^PSRX(DA,0)),"^")_" is already suspended "_$S($G(RXCMOP)]"":"for CMOP ",1:"")_"until "_$E(PSORXZD,4,5)_"-"_$E(PSORXZD,6,7)_"-"_$E(PSORXZD,2,3)_"." K PSORXZD
"RTN","PSORXL1",71,0)
 W !,"By suspending this fill, the fill that is already suspended will be overwritten",!,"and a label will not print for that fill!",!
"RTN","PSORXL1",72,0)
 N PSORF,PSOTRIC D TRIC(DA)
"RTN","PSORXL1",73,0)
 I PSOTRIC,$$STATUS^PSOBPSUT(DA,PSORF)'["PAYABLE" S PSOQFLAG=1 Q
"RTN","PSORXL1",74,0)
 K DIR S DIR(0)="SA^Q:QUEUE;S:SUSPEND",DIR("B")="Q",DIR("A")="Do you want to Queue to print or Suspend Rx "_$P($G(^PSRX(DA,0)),"^")_": " D ^DIR K DIR
"RTN","PSORXL1",75,0)
 I $G(Y)="S" K RXFL(PSORXLDA) G SWARNQ
"RTN","PSORXL1",76,0)
 I $G(Y)="Q" D  G SWARNQ
"RTN","PSORXL1",77,0)
 . S PSOKSPPL=$G(PPL),PSOZXPPL=$G(PPL1),PSOZXPI=$G(PI),RXLTOP=1
"RTN","PSORXL1",78,0)
 . S PPL=$G(RXN)_"," D SWARS D Q^PSORXL S PSOWFLG=1,PPL=PSOKSPPL
"RTN","PSORXL1",79,0)
 . S PI=PSOZXPI,PPL1=PSOZXPPL K PSOKSPPL,PSOZXPPL,PSOZXPI,RXLTOP,RXFL(+$G(PSORXLDA))
"RTN","PSORXL1",80,0)
 W !!,"Nothing queued to print for Rx "_$P($G(^PSRX(PSORXLDA,0)),"^"),! S PSOWFLG=1
"RTN","PSORXL1",81,0)
SWARNQ ;
"RTN","PSORXL1",82,0)
 S DA=$G(PSORXLDA) K PSORXLDA
"RTN","PSORXL1",83,0)
 Q
"RTN","PSORXL1",84,0)
SWARS ;
"RTN","PSORXL1",85,0)
 S PSOZXFL(PSORXLDA)=+$P($G(^PS(52.5,+$G(RXS),0)),"^",13) I '$G(PSOZXFL(PSORXLDA)) K PSOZXFL Q
"RTN","PSORXL1",86,0)
 S PSOZXFPL=$P(PSOKSPPL,",",+$G(PI),99)
"RTN","PSORXL1",87,0)
 S PSOZXFPN=$L(PSOZXFPL,PPL)-1
"RTN","PSORXL1",88,0)
 I $G(PSOZXFL(PSORXLDA)),$G(PSOZXFPN) S RXFL(PSORXLDA)=$G(PSOZXFL(PSORXLDA))-$G(PSOZXFPN)
"RTN","PSORXL1",89,0)
 K PSOZXFL,PSOZXFPL,PSOZXFPN
"RTN","PSORXL1",90,0)
 Q
"RTN","PSORXL1",91,0)
TRIC(PSORX) ;
"RTN","PSORXL1",92,0)
 S PSORF=$$LSTRFL^PSOBPSU1(PSORX)
"RTN","PSORXL1",93,0)
 S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(PSORX,PSORF,.PSOTRIC)
"RTN","PSORXL1",94,0)
 Q
"RTN","PSORXL1",95,0)
ECME ; - Looks for DUR/79 REJECTS and send Mail Rx's to ECME that have not been SUSPENDED
"RTN","PSORXL1",96,0)
 N PSOI,PSOJ,PSORX,PSORF,PSOACT,BWH,PPLTMP,PSOSTA,PSOTRIC,ESTAT,EACTION
"RTN","PSORXL1",97,0)
 S PPLTMP=$G(PPL)
"RTN","PSORXL1",98,0)
 F PSOI=1:1 S PSORX=+$P($G(PPLTMP),",",PSOI) Q:'PSORX  D
"RTN","PSORXL1",99,0)
 . D TRIC(PSORX) S ESTAT=$P($$STATUS^PSOBPSUT(PSORX,PSORF),"^")
"RTN","PSORXL1",100,0)
 . I PSOTRIC S EACTION=$S(ESTAT["PAYABLE":1,ESTAT="":1,1:0)
"RTN","PSORXL1",101,0)
 . I $G(PSOCKDC) D  Q  ;PSOCKDC variable is set in PSORXL and is used to eliminate label print for DC'ed Rx's
"RTN","PSORXL1",102,0)
 . . S PSOSTA=$$GET1^DIQ(52,PSORX,100,"I") I PSOSTA=12!(PSOSTA=11),'$G(RXPR(PSORX)),$G(PPL) D RMV(PSORX,.PPL)
"RTN","PSORXL1",103,0)
 . I $G(RXPR(PSORX)) Q
"RTN","PSORXL1",104,0)
 . S PSOACT="",BWH=$S(PSORF:"RF",1:"OF")
"RTN","PSORXL1",105,0)
 . I $$FIND^PSOREJUT(PSORX,PSORF) D  I PSOACT="Q" D RMV(PSORX,.PPL) Q
"RTN","PSORXL1",106,0)
 . . S PSOACT=$$HDLG^PSOREJU1(PSORX,PSORF,"79,88",BWH,"OIQ","Q")
"RTN","PSORXL1",107,0)
 Q
"RTN","PSORXL1",108,0)
RMV(RX,PPL) ; Remove the Rx from the label print queue
"RTN","PSORXL1",109,0)
 N XPPL,I
"RTN","PSORXL1",110,0)
 S XPPL=PPL,PPL="" F I=1:1:$L(XPPL,",") I $P(XPPL,",",I)'="",$P(XPPL,",",I)'=RX S PPL=PPL_$P(XPPL,",",I)_","
"RTN","PSORXL1",111,0)
 I PPL="" K PPL
"RTN","PSORXL1",112,0)
 Q
"RTN","PSOSUPOE")
0^9^B75793355^B74892149
"RTN","PSOSUPOE",1,0)
PSOSUPOE ;BIR/RTR - Suspense pull via Listman ;3/1/96
"RTN","PSOSUPOE",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**8,21,27,34,130,148,281,287,289,358,385,403**;DEC 1997;Build 9
"RTN","PSOSUPOE",3,0)
 ;External references PSOL and PSOUL^PSSLOCK supported by DBIA 2789
"RTN","PSOSUPOE",4,0)
SEL I '$G(PSOCNT) S VALMSG="This patient has no Prescriptions!" S VALMBCK="" Q
"RTN","PSOSUPOE",5,0)
 N PSOGETF,PSOGET,PSOGETFN,ORD,ORN,MW,PDUZ,PSLST,PSOSQ,PSOSQRTE,PSOSQMTH,PSPOP,PSOX1,PSOX2,RXLTOP,RXREC,SFN,SORD,SORN,VALMCNT
"RTN","PSOSUPOE",6,0)
 K DIR,DUOUT,DTOUT S DIR("A")="Select Orders by number",DIR(0)="LO^1:"_PSOCNT D ^DIR K DIR I $D(DTOUT)!($D(DUOUT))!('Y) S VALMSG="Nothing pulled from suspense!",VALMBCK="" Q
"RTN","PSOSUPOE",7,0)
 S PSLST=Y
"RTN","PSOSUPOE",8,0)
SELQ D FULL^VALM1
"RTN","PSOSUPOE",9,0)
 K DIR S DIR("A")="Select routing for Rx(s)",DIR(0)="S^M:MAIL;W:WINDOW",DIR("B")="WINDOW" D ^DIR K DIR I Y["^"!($D(DTOUT))!($D(DUOUT)) G END
"RTN","PSOSUPOE",10,0)
 S PSOSQRTE=Y I $G(PSOSQRTE)="W",$P(PSOPAR,"^",12) K DIR S DIR(0)="FO^2:60",DIR("A")="METHOD OF PICK-UP" D ^DIR S PSOSQMTH=$G(Y) K DIR I Y["^"!($D(DTOUT))!($D(DUOUT)) G END
"RTN","PSOSUPOE",11,0)
 W ! K DIR S DIR(0)="Y",DIR("A")="Pull Rx(s) and delete from suspense",DIR("B")="YES" D  D ^DIR K DIR I Y'=1 G END
"RTN","PSOSUPOE",12,0)
 .S DIR("?",1)="Enter Yes to pull selected Rx(s) from suspense. Since(Rx(s) pulled early from",DIR("?",2)="suspense are not associated with a printed batch, these Rx(s) cannot be"
"RTN","PSOSUPOE",13,0)
 .S DIR("?",3)="reprinted from suspense using the 'Reprint batches from suspense' option.",DIR("?")="Therefore, any Rx(s) pulled early from suspense will be deleted from suspense."
"RTN","PSOSUPOE",14,0)
 Q:$G(PULLONE)
"RTN","PSOSUPOE",15,0)
 F SORD=1:1:$L(PSLST,",") Q:$P(PSLST,",",SORD)']""  S SORN=$P(PSLST,",",SORD) D:+PSOLST(SORN)=52 BEG
"RTN","PSOSUPOE",16,0)
 S VALMBCK="R"
"RTN","PSOSUPOE",17,0)
 I '$G(PSOSQ) S VALMSG="No Rx's pulled from suspense!"
"RTN","PSOSUPOE",18,0)
 Q
"RTN","PSOSUPOE",19,0)
BEG ;
"RTN","PSOSUPOE",20,0)
 S RXREC=$P(PSOLST(SORN),"^",2)
"RTN","PSOSUPOE",21,0)
BEGQ Q:'$D(^PSRX(+$G(RXREC),0))
"RTN","PSOSUPOE",22,0)
 D PSOL^PSSLOCK(RXREC) I '$G(PSOMSG) W !!,$S($P($G(PSOMSG),"^",2)'="":$P($G(PSOMSG),"^",2),1:"Another person is editing Rx "_$P($G(^PSRX(RXREC,0)),"^")),! K PSOMSG D DIR Q
"RTN","PSOSUPOE",23,0)
 K PSOMSG I $P($G(^PSRX(RXREC,"STA")),"^")'=5 W !!,"Rx# ",$P(^PSRX(RXREC,0),"^")," is not on Suspense!" D DIR,ULRX Q
"RTN","PSOSUPOE",24,0)
 S SFN=$O(^PS(52.5,"B",RXREC,0)) I 'SFN D DIR,ULRX Q
"RTN","PSOSUPOE",25,0)
 S PDUZ=DUZ I +$G(^PS(52.5,SFN,"P")) W !,">>> Rx #",$P(^PSRX(+$P(^(0),"^"),0),"^")," ALREADY PRINTED FROM SUSPENSE.",!,?5,"USE THE REPRINT OPTION TO REPRINT LABEL." D DIR,ULRX Q
"RTN","PSOSUPOE",26,0)
 I +$P($G(^PSRX(RXREC,2)),"^",6)<DT,+$P($G(^("STA")),"^")<11 D  S DIE=52,DA=RXREC,DR="100///11" D ^DIE S DA=SFN,DIK="^PS(52.5," D ^DIK K DIE,DA,DIK W !,"Rx # "_$P(^PSRX(RXREC,0),"^")_" has expired!" D DIR,ULRX Q
"RTN","PSOSUPOE",27,0)
 .N PSCOU,AAA,VVV,QQQ,PSOPRT,PSOEXPI D EX^PSOSUTL
"RTN","PSOSUPOE",28,0)
 I $D(RXRP(RXREC)) W !!,"A reprint has already been requested for Rx # ",$P($G(^PSRX(RXREC,0)),"^") D DIR,ULRX Q
"RTN","PSOSUPOE",29,0)
 I $D(RXPR(RXREC)) W !!,"A partial has already been requested for Rx # ",$P($G(^PSRX(RXREC,0)),"^") D DIR,ULRX Q
"RTN","PSOSUPOE",30,0)
 S PSPOP=0 I $G(PSODIV),$P($G(^PS(52.5,SFN,0)),"^",6)'=$G(PSOSITE) D CKDIV I $G(PSPOP) D DIR,ULRX Q
"RTN","PSOSUPOE",31,0)
 ;
"RTN","PSOSUPOE",32,0)
 ; Submitting Rx to ECME for 3rd Party Billing and checking the outcome
"RTN","PSOSUPOE",33,0)
 ; If there are unresolved DUR, Refill Too Soon, or TRICARE/CHAMPVA rejects, we will not add the RX to the
"RTN","PSOSUPOE",34,0)
 ;   list of RXs that are pulled from suspense
"RTN","PSOSUPOE",35,0)
 ; We also need to quit if the user discontinued from the reject notification screen as the RX Suspense record
"RTN","PSOSUPOE",36,0)
 ;   is deleted by a discontinue
"RTN","PSOSUPOE",37,0)
 N ACTION S ACTION=""
"RTN","PSOSUPOE",38,0)
 I '$D(RXPR(RXREC)) D  I ACTION="Q"!(ACTION="D") D ULRX Q
"RTN","PSOSUPOE",39,0)
 . N RFL S RFL=$G(RXFL(RXREC)) I RFL="" S RFL=$$LSTRFL^PSOBPSU1(RXREC)
"RTN","PSOSUPOE",40,0)
 . D ECMESND^PSOBPSU1(RXREC,RFL,,"PP")
"RTN","PSOSUPOE",41,0)
 . ; Quit if there is an unresolved TRICARE/CHAMPVA non-billable reject code, PSO*7*358
"RTN","PSOSUPOE",42,0)
 . I $$PSOET^PSOREJP3(RXREC,RFL) S ACTION="Q" W !!,"Pull early cannot be done for non-billable TRICARE/CHAMPVA Rx on the worklist" D DIR Q
"RTN","PSOSUPOE",43,0)
 . ; Check for unresolved rejects
"RTN","PSOSUPOE",44,0)
 . I $$FIND^PSOREJUT(RXREC,RFL) S ACTION=$$HDLG^PSOREJU1(RXREC,RFL,"79,88","PP","IOQ","Q")
"RTN","PSOSUPOE",45,0)
 . ; Check for TRICARE/CHAMPVA that are not complete
"RTN","PSOSUPOE",46,0)
 . I $$TRIC^PSOREJP1(RXREC,RFL),$P($$STATUS^PSOBPSUT(RXREC,RFL),U)="IN PROGRESS" S ACTION="Q" W !!,"Pull early cannot be done for IN PROGRESS TRICARE/CHAMPVA Rx" D DIR Q
"RTN","PSOSUPOE",47,0)
 ;
"RTN","PSOSUPOE",48,0)
 S:$P(^PS(52.5,SFN,0),"^",5) RXPR(RXREC)=$P(^(0),"^",5) S:$P(^PS(52.5,SFN,0),"^",12) RXRP(RXREC)=1
"RTN","PSOSUPOE",49,0)
 S RXFL(RXREC)=$P($G(^PS(52.5,SFN,0)),"^",13),RXRS(RXREC)=$G(PSODFN),RXLTOP=1
"RTN","PSOSUPOE",50,0)
 S RXRS(RXREC)=$G(RXRS(RXREC))_"^"_$S($P($G(^PS(52.5,SFN,0)),"^",4)="W":"W",1:"M")_"^"_$P($G(^PSRX(RXREC,"MP")),"^") S PSOGET="M" D GETMW
"RTN","PSOSUPOE",51,0)
 S RXRS(RXREC)=$G(RXRS(RXREC))_"^"_$G(PSOGETF)_"^"_$G(PSOGETFN)_"^"_$S($G(PSOGET)="W":"W",1:"M")
"RTN","PSOSUPOE",52,0)
 S $P(^PS(52.5,SFN,0),"^",4)=$G(PSOSQRTE) S MW=$G(PSOSQRTE) N RR,RFCNT D MAILS^PSOSUPAT I $D(PSOSQMTH) S $P(^PSRX(RXREC,"MP"),"^")=$G(PSOSQMTH)
"RTN","PSOSUPOE",53,0)
 S PSOSQ=1
"RTN","PSOSUPOE",54,0)
 ;
"RTN","PSOSUPOE",55,0)
 D ULRX K PSOGET,PSOGETF
"RTN","PSOSUPOE",56,0)
 Q
"RTN","PSOSUPOE",57,0)
WIND ;
"RTN","PSOSUPOE",58,0)
 N RRT,RRTT,XXXX,JJJJ,PSINTRX,RTETEST,PSOPSO,SSSS
"RTN","PSOSUPOE",59,0)
 S PBINGRTE=0,PSINTRX=RXREC
"RTN","PSOSUPOE",60,0)
 I $G(RXPR(RXREC)) S RTETEST=$P($G(^PSRX(RXREC,"P",RXPR(PSINTRX),0)),"^",2) S:RTETEST="W" PBINGRTE=1 Q
"RTN","PSOSUPOE",61,0)
 S PSOPSO=0 F SSSS=0:0 S SSSS=$O(^PSRX(PSINTRX,1,SSSS)) Q:'SSSS  S PSOPSO=SSSS
"RTN","PSOSUPOE",62,0)
 I 'PSOPSO S RTETEST=$P($G(^PSRX(PSINTRX,0)),"^",11) S:RTETEST="W" PBINGRTE=1 Q
"RTN","PSOSUPOE",63,0)
 I PSOPSO S RTETEST=$P($G(^PSRX(PSINTRX,1,PSOPSO,0)),"^",2) S:RTETEST="W" PBINGRTE=1 Q
"RTN","PSOSUPOE",64,0)
 Q
"RTN","PSOSUPOE",65,0)
DIR ;
"RTN","PSOSUPOE",66,0)
 W ! K DIR S DIR(0)="E",DIR("A")="Press Return to Continue" D ^DIR K DIR Q
"RTN","PSOSUPOE",67,0)
END S VALMSG="Nothing pulled from suspense!",VALMBCK="R" S:$G(PULLONE)=1 PULLONE=2 Q
"RTN","PSOSUPOE",68,0)
ADD ;Add Rx to SPSORX array
"RTN","PSOSUPOE",69,0)
 I $G(SPSORX("PSOL",1))']"" S SPSORX("PSOL",1)=RXREC_"," Q
"RTN","PSOSUPOE",70,0)
 F PSOX1=0:0 S PSOX1=$O(SPSORX("PSOL",PSOX1)) Q:'PSOX1  S PSOX2=PSOX1
"RTN","PSOSUPOE",71,0)
 I $L(SPSORX("PSOL",PSOX2))+$L(RXREC)<220 S SPSORX("PSOL",PSOX2)=SPSORX("PSOL",PSOX2)_RXREC_"," Q
"RTN","PSOSUPOE",72,0)
 S SPSORX("PSOL",PSOX2+1)=RXREC_","
"RTN","PSOSUPOE",73,0)
 Q
"RTN","PSOSUPOE",74,0)
BBADD ;
"RTN","PSOSUPOE",75,0)
 N PSOX1,PSOX2
"RTN","PSOSUPOE",76,0)
 I $G(BBRX(1))']"" S BBRX(1)=RXREC_"," Q
"RTN","PSOSUPOE",77,0)
 F PSOX1=0:0 S PSOX1=$O(BBRX(PSOX1)) Q:'PSOX1  S PSOX2=PSOX1
"RTN","PSOSUPOE",78,0)
 I $L(BBRX(PSOX2))+$L(RXREC)<220 S BBRX(PSOX2)=BBRX(PSOX2)_RXREC_"," Q
"RTN","PSOSUPOE",79,0)
 S BBRX(PSOX2+1)=RXREC_","
"RTN","PSOSUPOE",80,0)
 Q
"RTN","PSOSUPOE",81,0)
PPLADD ;
"RTN","PSOSUPOE",82,0)
 ; This function will move entries from the RXRS array (which has RXs that were pulled
"RTN","PSOSUPOE",83,0)
 ; from supense via the PP action on the Medication profile) to the list of RXs that
"RTN","PSOSUPOE",84,0)
 ; will get a label (PPL variable and possible PSORX array).
"RTN","PSOSUPOE",85,0)
 ;
"RTN","PSOSUPOE",86,0)
 ; Note that arrays RXRS and PSORX and variable PPL are pre-existing
"RTN","PSOSUPOE",87,0)
 ;
"RTN","PSOSUPOE",88,0)
 N SZZ,SPSOX1,SPSOX2,LSFN
"RTN","PSOSUPOE",89,0)
 I $G(PPL)'="",$E(PPL,$L(PPL))'="," S PPL=PPL_","
"RTN","PSOSUPOE",90,0)
 ;
"RTN","PSOSUPOE",91,0)
 ; Loop through entries in the RXRS array and process
"RTN","PSOSUPOE",92,0)
 S SZZ=0 F  S SZZ=$O(RXRS(SZZ)) Q:'SZZ  D
"RTN","PSOSUPOE",93,0)
 .;
"RTN","PSOSUPOE",94,0)
 .; Check if label already printed per the RX SUSPENSE file
"RTN","PSOSUPOE",95,0)
 .S LSFN=$O(^PS(52.5,"B",SZZ,0))
"RTN","PSOSUPOE",96,0)
 .Q:'$G(LSFN)
"RTN","PSOSUPOE",97,0)
 .Q:$G(^PS(52.5,LSFN,"P"))
"RTN","PSOSUPOE",98,0)
 .;
"RTN","PSOSUPOE",99,0)
 .; The following function checks for ECME conditions where we do not want a label
"RTN","PSOSUPOE",100,0)
 .; This is probably redundant as the RXRS array entry should not have been created if any of these
"RTN","PSOSUPOE",101,0)
 .;   conditions existed but things might have changed after the entry was created
"RTN","PSOSUPOE",102,0)
 .I $$ECMECHK^PSOREJU3(SZZ) Q
"RTN","PSOSUPOE",103,0)
 .;
"RTN","PSOSUPOE",104,0)
 .; Add to list of RXs that should get a label
"RTN","PSOSUPOE",105,0)
 .I $G(PPL)="" S PPL=SZZ_"," Q
"RTN","PSOSUPOE",106,0)
 .I $L(PPL)+$L(SZZ)<220 S PPL=PPL_SZZ_"," Q
"RTN","PSOSUPOE",107,0)
 .I $G(PSORX("PSOL",2))']"" S PSORX("PSOL",2)=SZZ_"," Q
"RTN","PSOSUPOE",108,0)
 .F SPSOX1=1:0 S SPSOX1=$O(PSORX("PSOL",SPSOX1)) Q:'SPSOX1  S SPSOX2=SPSOX1
"RTN","PSOSUPOE",109,0)
 .I $L(PSORX("PSOL",SPSOX2))+$L(SZZ)<220 S PSORX("PSOL",SPSOX2)=PSORX("PSOL",SPSOX2)_SZZ_"," Q
"RTN","PSOSUPOE",110,0)
 .S PSORX("PSOL",SPSOX2+1)=SZZ_","
"RTN","PSOSUPOE",111,0)
 Q
"RTN","PSOSUPOE",112,0)
CKDIV ;
"RTN","PSOSUPOE",113,0)
 I '$P($G(PSOSYS),"^",2) W !!?10,"Rx # ",$P(^PSRX(RXREC,0),"^")," is not a valid choice (Different Division)" S PSPOP=1 Q
"RTN","PSOSUPOE",114,0)
 I $P($G(PSOSYS),"^",3) W !!?10 K DIR S DIR("A")="Rx # "_$P(^PSRX(RXREC,0),"^")_" is from another division. OK to Pull",DIR(0)="Y",DIR("B")="YES" D ^DIR K DIR I $G(DIRUT)!('Y) S PSPOP=1
"RTN","PSOSUPOE",115,0)
 Q
"RTN","PSOSUPOE",116,0)
SELONE ;Pull one Rx through Listman
"RTN","PSOSUPOE",117,0)
 I $G(PSOBEDT) W $C(7),$C(7) S VALMSG="Invalid Action at this time !",VALMBCK="" Q
"RTN","PSOSUPOE",118,0)
 N ORD,MW,PDUZ,PSLST,PSOSQ,PSOSQRTE,PSOSQMTH,PSPOP,PSOX1,PSOX2,PULLONE,RXLTOP,RXREC,SFN,SORD,SORN,VALMCNT
"RTN","PSOSUPOE",119,0)
 S PULLONE=1
"RTN","PSOSUPOE",120,0)
 I +PSOLST(ORN)'=52 S VALMBCK="" Q
"RTN","PSOSUPOE",121,0)
 I +PSOLST(ORN)=52,$P($G(^PSRX($P(PSOLST(ORN),"^",2),"STA")),"^")'=5 S VALMSG="Rx is not on Suspense!",VALMBCK="" Q
"RTN","PSOSUPOE",122,0)
 I +PSOLST(ORN)=52,$D(RXRS($P(PSOLST(ORN),"^",2))) S VALMSG="Pull early has already been requested!",VALMBCK="" Q
"RTN","PSOSUPOE",123,0)
 N EHOLDQ,ESIEN,ERXIEN S ERXIEN=$P(PSOLST(ORN),"^",2),ESIEN="",ESIEN=$O(^PS(52.5,"B",ERXIEN,ESIEN))
"RTN","PSOSUPOE",124,0)
 I $G(ESIEN),$$GET1^DIQ(52.5,ESIEN,10)'="" D EHOLD Q:$G(EHOLDQ)
"RTN","PSOSUPOE",125,0)
 K EHOLDQ,ESIEN,ERXIEN
"RTN","PSOSUPOE",126,0)
 D SELQ I $G(PULLONE)=2 S VALMSG="Rx# "_$P($G(^PSRX($P(PSOLST(ORN),"^",2),0)),"^")_" not pulled from suspense!" Q
"RTN","PSOSUPOE",127,0)
 I +PSOLST(ORN)=52 S RXREC=$P(PSOLST(ORN),"^",2)
"RTN","PSOSUPOE",128,0)
 D BEGQ S VALMSG="Rx# "_$P($G(^PSRX(+$G(RXREC),0)),"^")_$S($G(PSOSQ):" pulled",1:" not pulled")_" from Suspense!"
"RTN","PSOSUPOE",129,0)
 S VALMBCK="R"
"RTN","PSOSUPOE",130,0)
 Q
"RTN","PSOSUPOE",131,0)
RESET ;
"RTN","PSOSUPOE",132,0)
 N RSDA,RXMW,RXMP,RXSP,RXR,DA,RXPSRX,RXFILL,RXFILLN
"RTN","PSOSUPOE",133,0)
 F RSDA=0:0 S RSDA=$O(RXRS(RSDA)) Q:'RSDA  D
"RTN","PSOSUPOE",134,0)
 .S RXSP=$O(^PS(52.5,"B",RSDA,0)) Q:'RXSP
"RTN","PSOSUPOE",135,0)
 .Q:'$D(^PS(52.5,RXSP,0))
"RTN","PSOSUPOE",136,0)
 .S RXMW=$S($P($G(RXRS(RSDA)),"^",2)="":"M",1:$P($G(RXRS(RSDA)),"^",2)),RXMP=$P($G(RXRS(RSDA)),"^",3),RXFILL=$P($G(RXRS(RSDA)),"^",4),RXFILLN=$P($G(RXRS(RSDA)),"^",5),RXPSRX=$S($P($G(RXRS(RSDA)),"^",6)="":"M",1:$P($G(RXRS(RSDA)),"^",6))
"RTN","PSOSUPOE",137,0)
 .I RXMW'="" S $P(^PS(52.5,RXSP,0),"^",4)=RXMW D
"RTN","PSOSUPOE",138,0)
 ..I RXFILL="P" D  Q
"RTN","PSOSUPOE",139,0)
 ...I $D(^PSRX(RSDA,"P",+$G(RXFILLN),0)) S $P(^PSRX(RSDA,"P",+$G(RXFILLN),0),"^",2)=$G(RXPSRX),$P(^PSRX(RSDA,"MP"),"^")=RXMP
"RTN","PSOSUPOE",140,0)
 ..I RXFILL="R",$G(RXFILLN) S DA(1)=RSDA,DA=RXFILLN,DIE="^PSRX("_DA(1)_",1,",DR="2////"_RXPSRX D ^DIE K DIE
"RTN","PSOSUPOE",141,0)
 ..I RXFILL="O" S DA=RSDA,DIE="^PSRX(",DR="11////"_RXPSRX D ^DIE K DIE
"RTN","PSOSUPOE",142,0)
 ..S $P(^PSRX(RSDA,"MP"),"^")=RXMP
"RTN","PSOSUPOE",143,0)
 Q
"RTN","PSOSUPOE",144,0)
GETMW ;
"RTN","PSOSUPOE",145,0)
 N GETPAR,GETRX,GETCNT
"RTN","PSOSUPOE",146,0)
 S PSOGETF="O",PSOGETFN=""
"RTN","PSOSUPOE",147,0)
 S GETPAR=$P($G(^PS(52.5,SFN,0)),"^",5)
"RTN","PSOSUPOE",148,0)
 I GETPAR S PSOGET=$P($G(^PSRX(RXREC,"P",GETPAR,0)),"^",2),PSOGETF="P",PSOGETFN=GETPAR Q
"RTN","PSOSUPOE",149,0)
 I '$O(^PSRX(RXREC,1,0)) S PSOGET=$P($G(^PSRX(RXREC,0)),"^",11) Q
"RTN","PSOSUPOE",150,0)
 S GETRX=0 F GETCNT=0:0 S GETCNT=$O(^PSRX(RXREC,1,GETCNT)) Q:'GETCNT  S GETRX=GETCNT
"RTN","PSOSUPOE",151,0)
 S PSOGET=$P($G(^PSRX(RXREC,1,+$G(GETRX),0)),"^",2),PSOGETF="R",PSOGETFN=+$G(GETRX)
"RTN","PSOSUPOE",152,0)
 Q
"RTN","PSOSUPOE",153,0)
ULRX ;
"RTN","PSOSUPOE",154,0)
 I '$G(RXREC) Q
"RTN","PSOSUPOE",155,0)
 D PSOUL^PSSLOCK(RXREC)
"RTN","PSOSUPOE",156,0)
 Q
"RTN","PSOSUPOE",157,0)
EHOLD ;
"RTN","PSOSUPOE",158,0)
 Q:'$G(ERXIEN)
"RTN","PSOSUPOE",159,0)
 Q:$$GET1^DIQ(52,ERXIEN,86)=""
"RTN","PSOSUPOE",160,0)
 D FULL^VALM1
"RTN","PSOSUPOE",161,0)
 W !,"This is an ePharmacy billable fill which is Suspended until "_$$GET1^DIQ(52.5,ESIEN,10)_", based"
"RTN","PSOSUPOE",162,0)
 W !,"on the 3/4 Days rule.",!
"RTN","PSOSUPOE",163,0)
 K DIR S EHOLDQ=0,DIR(0)="YA",DIR("A")="Do you wish to continue? "
"RTN","PSOSUPOE",164,0)
 D ^DIR I $D(DIRUT)!('Y) S EHOLDQ=1 K DIR
"RTN","PSOSUPOE",165,0)
 S VALMSG="No action taken.",VALMBCK="R"
"RTN","PSOSUPOE",166,0)
 Q
"RTN","PSOSUPOE",167,0)
 ;
"VER")
8.0^22.0
"BLD",8801,6)
^334
**END**
**END**
