Released PRS*4*136 SEQ #125
Extracted from mail message
**KIDS**:PRS*4.0*136^

**INSTALL NAME**
PRS*4.0*136
"BLD",9166,0)
PRS*4.0*136^PAID^0^3121004^y
"BLD",9166,1,0)
^^1^1^3121004^
"BLD",9166,1,1,0)
Pay period calculation does not extend past 2012 pay periods.
"BLD",9166,4,0)
^9.64PA^^
"BLD",9166,6.3)
2
"BLD",9166,"ABPKG")
n
"BLD",9166,"KRN",0)
^9.67PA^779.2^20
"BLD",9166,"KRN",.4,0)
.4
"BLD",9166,"KRN",.401,0)
.401
"BLD",9166,"KRN",.402,0)
.402
"BLD",9166,"KRN",.403,0)
.403
"BLD",9166,"KRN",.5,0)
.5
"BLD",9166,"KRN",.84,0)
.84
"BLD",9166,"KRN",3.6,0)
3.6
"BLD",9166,"KRN",3.8,0)
3.8
"BLD",9166,"KRN",9.2,0)
9.2
"BLD",9166,"KRN",9.8,0)
9.8
"BLD",9166,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",9166,"KRN",9.8,"NM",1,0)
PRSAPPU^^0^B38465710
"BLD",9166,"KRN",9.8,"NM","B","PRSAPPU",1)

"BLD",9166,"KRN",19,0)
19
"BLD",9166,"KRN",19.1,0)
19.1
"BLD",9166,"KRN",101,0)
101
"BLD",9166,"KRN",409.61,0)
409.61
"BLD",9166,"KRN",771,0)
771
"BLD",9166,"KRN",779.2,0)
779.2
"BLD",9166,"KRN",870,0)
870
"BLD",9166,"KRN",8989.51,0)
8989.51
"BLD",9166,"KRN",8989.52,0)
8989.52
"BLD",9166,"KRN",8994,0)
8994
"BLD",9166,"KRN","B",.4,.4)

"BLD",9166,"KRN","B",.401,.401)

"BLD",9166,"KRN","B",.402,.402)

"BLD",9166,"KRN","B",.403,.403)

"BLD",9166,"KRN","B",.5,.5)

"BLD",9166,"KRN","B",.84,.84)

"BLD",9166,"KRN","B",3.6,3.6)

"BLD",9166,"KRN","B",3.8,3.8)

"BLD",9166,"KRN","B",9.2,9.2)

"BLD",9166,"KRN","B",9.8,9.8)

"BLD",9166,"KRN","B",19,19)

"BLD",9166,"KRN","B",19.1,19.1)

"BLD",9166,"KRN","B",101,101)

"BLD",9166,"KRN","B",409.61,409.61)

"BLD",9166,"KRN","B",771,771)

"BLD",9166,"KRN","B",779.2,779.2)

"BLD",9166,"KRN","B",870,870)

"BLD",9166,"KRN","B",8989.51,8989.51)

"BLD",9166,"KRN","B",8989.52,8989.52)

"BLD",9166,"KRN","B",8994,8994)

"BLD",9166,"QUES",0)
^9.62^^
"BLD",9166,"REQB",0)
^9.611^1^1
"BLD",9166,"REQB",1,0)
PRS*4.0*35^2
"BLD",9166,"REQB","B","PRS*4.0*35",1)

"MBREQ")
0
"PKG",408,-1)
1^1
"PKG",408,0)
PAID^PRS^PAID
"PKG",408,20,0)
^9.402P^^
"PKG",408,22,0)
^9.49I^1^1
"PKG",408,22,1,0)
4.0^2950912^2960130
"PKG",408,22,1,"PAH",1,0)
136^3121004
"PKG",408,22,1,"PAH",1,1,0)
^^1^1^3121004
"PKG",408,22,1,"PAH",1,1,1,0)
Pay period calculation does not extend past 2012 pay periods.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","PRSAPPU")
0^1^B38465710^B37499229
"RTN","PRSAPPU",1,0)
PRSAPPU ; HISC/REL,WIRMFO/JAH - Calculate Pay Period; 22-JAN-1998
"RTN","PRSAPPU",2,0)
 ;;4.0;PAID;**19,22,35,136**;Sep 21, 1995;Build 2
"RTN","PRSAPPU",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","PRSAPPU",4,0)
 ;====================================================================
"RTN","PRSAPPU",5,0)
PP ;Calculate Pay Period from a FileMan date.
"RTN","PRSAPPU",6,0)
 ;
"RTN","PRSAPPU",7,0)
 ; Input :  D1 = FileMan Date
"RTN","PRSAPPU",8,0)
 ; Output : D1 - unchanged
"RTN","PRSAPPU",9,0)
 ;          PPI = internal entry of pay period if available else undef.
"RTN","PRSAPPU",10,0)
 ;          PPE = Pay period that D1 falls in, formatted yy-pp.
"RTN","PRSAPPU",11,0)
 ;          PP4Y = Pay period with 4 digit year: yyyy-pp.
"RTN","PRSAPPU",12,0)
 ;          DAY = Day # of D1 within PPE
"RTN","PRSAPPU",13,0)
 ;
"RTN","PRSAPPU",14,0)
 ;   1.  Get 1st day of leave year (X2) that the date D1 falls in.
"RTN","PRSAPPU",15,0)
 ;   2.  Reserve 2 and 4 digit year to build pay period.
"RTN","PRSAPPU",16,0)
 ;   3.  Find # of days between 1st day & D1 and divide by 14
"RTN","PRSAPPU",17,0)
 ;       to determine pay period #.  Mod to find day w/in pp.
"RTN","PRSAPPU",18,0)
 ;   4.  Build Pay period with year and pay period #.
"RTN","PRSAPPU",19,0)
 ;
"RTN","PRSAPPU",20,0)
 N Y,K,X1,X2,X
"RTN","PRSAPPU",21,0)
 ;
"RTN","PRSAPPU",22,0)
 S Y=$P($T(DAT),";;",2)
"RTN","PRSAPPU",23,0)
 F K=1:1:28 Q:D1<$P(Y,",",K)
"RTN","PRSAPPU",24,0)
 S X2=$P(Y,",",K-1)
"RTN","PRSAPPU",25,0)
 ;
"RTN","PRSAPPU",26,0)
 S PPE=$E(X2,2,3),PP4Y=$E(X2,1,3)+1700
"RTN","PRSAPPU",27,0)
 ;
"RTN","PRSAPPU",28,0)
 S X1=D1
"RTN","PRSAPPU",29,0)
 D ^%DTC
"RTN","PRSAPPU",30,0)
 S Y=X\14+1,DAY=X#14+1
"RTN","PRSAPPU",31,0)
 ;
"RTN","PRSAPPU",32,0)
 S PPE=PPE_"-"_$S(Y<10:"0"_Y,1:Y)
"RTN","PRSAPPU",33,0)
 S PPI=$O(^PRST(458,"B",PPE,0))
"RTN","PRSAPPU",34,0)
 S PP4Y=PP4Y_"-"_$P(PPE,"-",2)
"RTN","PRSAPPU",35,0)
 ;
"RTN","PRSAPPU",36,0)
 Q
"RTN","PRSAPPU",37,0)
 ;====================================================================
"RTN","PRSAPPU",38,0)
NX ; Calculate Date of 1st day of Pay Period.
"RTN","PRSAPPU",39,0)
 ;
"RTN","PRSAPPU",40,0)
 ; INPUT:   PPE = Pay Period formatted YY-PP.
"RTN","PRSAPPU",41,0)
 ; OUTPUT:  D1 = FileMan Date of 1st day of pay period.
"RTN","PRSAPPU",42,0)
 ;
"RTN","PRSAPPU",43,0)
 N Y,K,X1,X2
"RTN","PRSAPPU",44,0)
 ;
"RTN","PRSAPPU",45,0)
 S Y=$P($T(DAT),";;",2)
"RTN","PRSAPPU",46,0)
 F K=1:1:28 Q:$E($P(Y,",",K),2,3)=$E(PPE,1,2)
"RTN","PRSAPPU",47,0)
 S X1=$P(Y,",",K),X2=14*($E(PPE,4,5)-1) D C^%DTC
"RTN","PRSAPPU",48,0)
 S D1=X Q
"RTN","PRSAPPU",49,0)
 ;====================================================================
"RTN","PRSAPPU",50,0)
DTP ; Printable Date
"RTN","PRSAPPU",51,0)
 S %=X,Y=$J(+$E(X,6,7),2)_"-"_$P("Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec"," ",+$E(X,4,5))_"-"_$E(X,2,3)
"RTN","PRSAPPU",52,0)
 K % Q
"RTN","PRSAPPU",53,0)
 ;====================================================================
"RTN","PRSAPPU",54,0)
 ;These FileMan dates correspond to 1st day of pay period #1
"RTN","PRSAPPU",55,0)
 ;of respective years.
"RTN","PRSAPPU",56,0)
 ;
"RTN","PRSAPPU",57,0)
DAT ;;2910113,2920112,2930110,2940109,2950108,2960107,2970105,2980104,2990103,3000102,3010114,3020113,3030112,3040111,3050109,3060108,3070107,3080106,3090104,3100103,3110102,3120101,3130113,3140112,3150111,3160110,3170108,3180107
"RTN","PRSAPPU",58,0)
 ;
"RTN","PRSAPPU",59,0)
 ;====================================================================
"RTN","PRSAPPU",60,0)
PREP(CURP) ;given a pay period, return the previous pay period.
"RTN","PRSAPPU",61,0)
 ;  WARNING: This call only valid for years that are in the seed
"RTN","PRSAPPU",62,0)
 ;           range of the FileMan dates on the DAT^PRSAPPU line.
"RTN","PRSAPPU",63,0)
 ;           If pay period passed is out of this range then
"RTN","PRSAPPU",64,0)
 ;           0 is returned.
"RTN","PRSAPPU",65,0)
 ;
"RTN","PRSAPPU",66,0)
 ;Input:   CURP =  Pay period, passed in format YY-PP or YYYY-PP
"RTN","PRSAPPU",67,0)
 ;Output:  function returns previous pay period in YYYY-PP format.
"RTN","PRSAPPU",68,0)
 ;
"RTN","PRSAPPU",69,0)
 N PPE,PPI,D1,DAY,INYR,RANGE,FIRSTPP,INPP
"RTN","PRSAPPU",70,0)
 ;
"RTN","PRSAPPU",71,0)
 ;validate input - pay period and year
"RTN","PRSAPPU",72,0)
 ;
"RTN","PRSAPPU",73,0)
 Q:'$$VALIDPP(CURP) 0
"RTN","PRSAPPU",74,0)
 S INPP=$P(CURP,"-",2)
"RTN","PRSAPPU",75,0)
 S INYR=$P(CURP,"-")
"RTN","PRSAPPU",76,0)
 S INYR=$E(INYR,$L(INYR)-1,$L(INYR))
"RTN","PRSAPPU",77,0)
 S PPE=INYR_"-"_INPP
"RTN","PRSAPPU",78,0)
 ;
"RTN","PRSAPPU",79,0)
 ; Handle special case of 1ST PAY PERIOD iN the VALID RANGE
"RTN","PRSAPPU",80,0)
 S RANGE=$P($T(DAT),";;",2)
"RTN","PRSAPPU",81,0)
 S FIRSTPP=$E($P(RANGE,","),2,3)_"-01"
"RTN","PRSAPPU",82,0)
 Q:(PPE=FIRSTPP) $E($P(RANGE,","),1,3)+1700_"-26"
"RTN","PRSAPPU",83,0)
 ;
"RTN","PRSAPPU",84,0)
 ;Get 1st date of input pay period.
"RTN","PRSAPPU",85,0)
 ;
"RTN","PRSAPPU",86,0)
 D NX
"RTN","PRSAPPU",87,0)
 ;
"RTN","PRSAPPU",88,0)
 ;Subtract 14 days from current to get 1st day of previous pay period.
"RTN","PRSAPPU",89,0)
 S X1=D1,X2=-14 D C^%DTC S D1=X
"RTN","PRSAPPU",90,0)
 D PP
"RTN","PRSAPPU",91,0)
 Q PP4Y
"RTN","PRSAPPU",92,0)
 ;
"RTN","PRSAPPU",93,0)
 ;====================================================================
"RTN","PRSAPPU",94,0)
NXTPP(CURP) ;given a payperiod, return the NEXT payperiod. YYYY-PP
"RTN","PRSAPPU",95,0)
 ;  WARNING: This call only valid for years that are in the seed
"RTN","PRSAPPU",96,0)
 ;           range of the FileMan dates on the DAT^PRSAPPU line.
"RTN","PRSAPPU",97,0)
 ;           If pay period passed is out of this range then
"RTN","PRSAPPU",98,0)
 ;           0 is returned.
"RTN","PRSAPPU",99,0)
 ;
"RTN","PRSAPPU",100,0)
 ;Input:   CURP =  Pay period, passed in format YY-PP or YYYY-PP
"RTN","PRSAPPU",101,0)
 ;Output:  function returns previous pay period in YYYY-PP format.
"RTN","PRSAPPU",102,0)
 ;
"RTN","PRSAPPU",103,0)
 N PPE,PPI,D1,X1,X2,INPP,INYR,D1
"RTN","PRSAPPU",104,0)
 ;
"RTN","PRSAPPU",105,0)
 Q:'$$VALIDPP(CURP) 0
"RTN","PRSAPPU",106,0)
 ;
"RTN","PRSAPPU",107,0)
 ;Get 1st date of current pay period.
"RTN","PRSAPPU",108,0)
 S INPP=$P(CURP,"-",2)
"RTN","PRSAPPU",109,0)
 S INYR=$P(CURP,"-")
"RTN","PRSAPPU",110,0)
 S INYR=$E(INYR,$L(INYR)-1,$L(INYR))
"RTN","PRSAPPU",111,0)
 S PPE=INYR_"-"_INPP
"RTN","PRSAPPU",112,0)
 D NX
"RTN","PRSAPPU",113,0)
 ;
"RTN","PRSAPPU",114,0)
 ;Add 14 days to current to get 1st day of next pay period.
"RTN","PRSAPPU",115,0)
 S X1=D1,X2=14 D C^%DTC S D1=X
"RTN","PRSAPPU",116,0)
 D PP
"RTN","PRSAPPU",117,0)
 Q PP4Y
"RTN","PRSAPPU",118,0)
 ;====================================================================
"RTN","PRSAPPU",119,0)
VALIDPP(PP) ;Valid pay period must be in form YY-PP or YYYY-PP where
"RTN","PRSAPPU",120,0)
 ;        pp is pay periods 01-26 and
"RTN","PRSAPPU",121,0)
 ;        yy or yyyy are years in the FileMan dates at DAT^PRSAPPU
"RTN","PRSAPPU",122,0)
 ;
"RTN","PRSAPPU",123,0)
 N VALID,INVALID,VALYRS,RANGE,INCR,INPP,INYR,TESTYR
"RTN","PRSAPPU",124,0)
 S VALID=1,INVALID=0
"RTN","PRSAPPU",125,0)
 ;
"RTN","PRSAPPU",126,0)
 ;validate input - year and pay period
"RTN","PRSAPPU",127,0)
 ;
"RTN","PRSAPPU",128,0)
 S VALYRS=","
"RTN","PRSAPPU",129,0)
 S RANGE=$P($T(DAT),";;",2)
"RTN","PRSAPPU",130,0)
 F INCR=1:1:$L(RANGE,",") S VALYRS=VALYRS_$E($P(RANGE,",",INCR),2,3)_","
"RTN","PRSAPPU",131,0)
 S INYR=$P(PP,"-")
"RTN","PRSAPPU",132,0)
 I '(($L(INYR)=2)!($L(INYR)=4)) Q INVALID
"RTN","PRSAPPU",133,0)
 S INYR=$E(INYR,$L(INYR)-1,$L(INYR))
"RTN","PRSAPPU",134,0)
 S TESTYR=","_INYR_","
"RTN","PRSAPPU",135,0)
 I VALYRS'[TESTYR Q INVALID
"RTN","PRSAPPU",136,0)
 ;
"RTN","PRSAPPU",137,0)
 S INPP=$P(PP,"-",2)
"RTN","PRSAPPU",138,0)
 ;
"RTN","PRSAPPU",139,0)
 S VALPPS=",01,02,03,04,05,06,07,08,09,"
"RTN","PRSAPPU",140,0)
 S TESTINPP=","_INPP_","
"RTN","PRSAPPU",141,0)
 I '((VALPPS[TESTINPP)!((INPP>9)&(INPP<28))) Q INVALID
"RTN","PRSAPPU",142,0)
 ;
"RTN","PRSAPPU",143,0)
 ; pay period 27 is not always valid.
"RTN","PRSAPPU",144,0)
 ;
"RTN","PRSAPPU",145,0)
 I INPP=27 I $P($$NXTPP(INYR_"-26"),"-",2)'=27 Q INVALID
"RTN","PRSAPPU",146,0)
 Q VALID
"RTN","PRSAPPU",147,0)
 ;
"RTN","PRSAPPU",148,0)
 ;====================================================================
"RTN","PRSAPPU",149,0)
PPRANGE(STARTPP,ENDPP,STPP4Y,ENDPP4Y) ;get a pay period range from input.
"RTN","PRSAPPU",150,0)
 ;  INPUT: none
"RTN","PRSAPPU",151,0)
 ;  OUTPUT:  STARTPP = 1st pay period in range.  0 on abnormal exit.
"RTN","PRSAPPU",152,0)
 ;           ENDPP   = 2ND pay period in range.  0 on abnormal exit.
"RTN","PRSAPPU",153,0)
 ; 
"RTN","PRSAPPU",154,0)
 ; -Ask user to select beginning and ending pay periods from the 
"RTN","PRSAPPU",155,0)
 ;  pay periods that are on file.
"RTN","PRSAPPU",156,0)
 ; -Compare dates of 1st day of each of the input pay periods
"RTN","PRSAPPU",157,0)
 ;  to ensure that the beginning pay period input is LESS THAN OR = TO
"RTN","PRSAPPU",158,0)
 ;  the ending pay period input.
"RTN","PRSAPPU",159,0)
 ;
"RTN","PRSAPPU",160,0)
 N OUT,OK
"RTN","PRSAPPU",161,0)
 S (OUT,OK)=0
"RTN","PRSAPPU",162,0)
 ;
"RTN","PRSAPPU",163,0)
 F I=0:0 Q:(OK!OUT)  D
"RTN","PRSAPPU",164,0)
 .N DIC,FR,X,Y,TO,DAY,PPE,PPI,PP4Y,D1,STRTDAY1,ENDDAY1
"RTN","PRSAPPU",165,0)
 .S (STARTPP,ENDPP)=0
"RTN","PRSAPPU",166,0)
 .;
"RTN","PRSAPPU",167,0)
 .S D1=DT D PP S DIC("B")=$E($$PREP(PPE),3,7)
"RTN","PRSAPPU",168,0)
 .S DIC="^PRST(458,"
"RTN","PRSAPPU",169,0)
 .S DIC(0)="AEQZ",DIC("A")="Enter Beginning Pay Period: "
"RTN","PRSAPPU",170,0)
 .D ^DIC I $D(DTOUT)!$D(DUOUT)!(Y<0) S OUT=1
"RTN","PRSAPPU",171,0)
 .Q:OUT
"RTN","PRSAPPU",172,0)
 .S STARTPP=Y(0,0)
"RTN","PRSAPPU",173,0)
 .;
"RTN","PRSAPPU",174,0)
 .; ask user for 2nd pay period in range. Use default of
"RTN","PRSAPPU",175,0)
 .; the pay period they selected for the 1st pp.
"RTN","PRSAPPU",176,0)
 .;
"RTN","PRSAPPU",177,0)
 .S DIC("B")=STARTPP,DIC("A")="Enter Ending Pay Period: "
"RTN","PRSAPPU",178,0)
 .D ^DIC I $D(DTOUT)!$D(DUOUT) S OUT=1
"RTN","PRSAPPU",179,0)
 .Q:OUT
"RTN","PRSAPPU",180,0)
 .S ENDPP=Y(0,0)
"RTN","PRSAPPU",181,0)
 .;
"RTN","PRSAPPU",182,0)
 .;Get 1st day of selected pay periods. Compare the dates to ensure
"RTN","PRSAPPU",183,0)
 .;that a valid range has been entered.
"RTN","PRSAPPU",184,0)
 .;
"RTN","PRSAPPU",185,0)
 .S PPE=STARTPP D NX S STRTDAY1=D1
"RTN","PRSAPPU",186,0)
 .S PPE=ENDPP D NX S ENDDAY1=D1
"RTN","PRSAPPU",187,0)
 .I ENDDAY1-STRTDAY1<0 D
"RTN","PRSAPPU",188,0)
 .. W !,"Invalid pay period range."
"RTN","PRSAPPU",189,0)
 .. W !,"Ending pay period should be later than or equal to beginning pay period."
"RTN","PRSAPPU",190,0)
 .E  D
"RTN","PRSAPPU",191,0)
 ..  S D1=STRTDAY1 D PP^PRSAPPU S STPP4Y=PP4Y
"RTN","PRSAPPU",192,0)
 ..  S D1=ENDDAY1 D PP S ENDPP4Y=PP4Y
"RTN","PRSAPPU",193,0)
 ..  S OK=1
"RTN","PRSAPPU",194,0)
 I OUT S (STARTPP,ENDPP,ENDPP4Y,STPP4Y)=0
"RTN","PRSAPPU",195,0)
 ;
"RTN","PRSAPPU",196,0)
 Q
"RTN","PRSAPPU",197,0)
 ;==============================================================
"RTN","PRSAPPU",198,0)
IC(YY,FMT,FW,BDT) ;Infer Century from 2-digit year
"RTN","PRSAPPU",199,0)
 ; YY  - 2 digit year
"RTN","PRSAPPU",200,0)
 ; FMT - (optional) format of returned value (DEFAULT 3)
"RTN","PRSAPPU",201,0)
 ;       3 for YYY (fileman year .i.e. first numbers of fileman date)
"RTN","PRSAPPU",202,0)
 ;       4 for YYYY (standard year)
"RTN","PRSAPPU",203,0)
 ; FW  - (optional) # of future years from base in window (DEFAULT 20)
"RTN","PRSAPPU",204,0)
 ; BDT - (optional) base date (fileman) for sliding window (DEFAULT DT)
"RTN","PRSAPPU",205,0)
 ;
"RTN","PRSAPPU",206,0)
 N FMY
"RTN","PRSAPPU",207,0)
 I YY'?2N Q "" ; invalid 2-digit year - return null value
"RTN","PRSAPPU",208,0)
 I $G(FMT)'=3&($G(FMT)'=4) S FMT=3
"RTN","PRSAPPU",209,0)
 I $G(FW)'?1.2N S FW=20
"RTN","PRSAPPU",210,0)
 I $G(BDT)'?7N S BDT=DT
"RTN","PRSAPPU",211,0)
 I BDT'>1000000 Q "" ; invalid base date
"RTN","PRSAPPU",212,0)
 ; start with century of base date and adjust if necessary
"RTN","PRSAPPU",213,0)
 S FMY=$E(BDT)+$S($E(BDT,2,3)-YY>(99-FW):1,$E(BDT,2,3)-YY<-FW:-1,1:0)_YY
"RTN","PRSAPPU",214,0)
 Q $S(FMT=4:FMY+1700,1:FMY)
"RTN","PRSAPPU",215,0)
 ;
"RTN","PRSAPPU",216,0)
 ;PRSZ
"RTN","PRSAPPU",217,0)
 ;==============================================================
"RTN","PRSAPPU",218,0)
P35POST ;PRS*4.0*35 post install - execute set logic on new AB x-ref.
"RTN","PRSAPPU",219,0)
 ;
"RTN","PRSAPPU",220,0)
 I $$PATCH^XPDUTL("PRS*4.0*35") D MSSG(0) Q
"RTN","PRSAPPU",221,0)
 N FILE D MSSG(1) F FILE=458,459 D XREF4YR(FILE)
"RTN","PRSAPPU",222,0)
 Q
"RTN","PRSAPPU",223,0)
 ;==============================================================
"RTN","PRSAPPU",224,0)
MSSG(FLAG) ;PRS*4.0*35 - OUTPUT POST INSTALLATION MESSAGE.
"RTN","PRSAPPU",225,0)
 N MSSG
"RTN","PRSAPPU",226,0)
 I FLAG S MSSG="Updating AB cross reference in Files 458 and 459."
"RTN","PRSAPPU",227,0)
 E  S MSSG="AB X-ref NOT built. Built during earlier PRS*4.0*35 install."
"RTN","PRSAPPU",228,0)
 D MES^XPDUTL("      "_MSSG)
"RTN","PRSAPPU",229,0)
 Q
"RTN","PRSAPPU",230,0)
 ;==============================================================
"RTN","PRSAPPU",231,0)
XREF4YR(F) ;SET AB 4DIGIT YEAR XREF OF FILE 458 OR 459.
"RTN","PRSAPPU",232,0)
 ;
"RTN","PRSAPPU",233,0)
 Q:'((F=458)!(F=459))
"RTN","PRSAPPU",234,0)
 N DIK S DIK="^PRST("_F_",",DIK(1)=".01^AB" D ENALL^DIK
"RTN","PRSAPPU",235,0)
 Q
"VER")
8.0^22.0
"BLD",9166,6)
^125
**END**
**END**
