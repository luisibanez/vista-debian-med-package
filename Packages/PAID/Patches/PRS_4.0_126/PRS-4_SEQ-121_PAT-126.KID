Released PRS*4*126 SEQ #121
Extracted from mail message
**KIDS**:PRS*4.0*126^

**INSTALL NAME**
PRS*4.0*126
"BLD",8564,0)
PRS*4.0*126^PAID^0^3120217^y
"BLD",8564,4,0)
^9.64PA^457.3^10
"BLD",8564,4,450,0)
450
"BLD",8564,4,450,2,0)
^9.641^450.01^1
"BLD",8564,4,450,2,450.01,0)
USER PREFERENCES  (sub-file)
"BLD",8564,4,450,2,450.01,1,0)
^9.6411^^
"BLD",8564,4,450,222)
y^n^p^^^^n^^n
"BLD",8564,4,450,224)

"BLD",8564,4,451,0)
451
"BLD",8564,4,451,222)
y^y^f^^^^n
"BLD",8564,4,451.1,0)
451.1
"BLD",8564,4,451.1,222)
y^y^f^^n^^y^o^n
"BLD",8564,4,451.4,0)
451.4
"BLD",8564,4,451.4,222)
y^y^f^^n^^y^o^n
"BLD",8564,4,451.5,0)
451.5
"BLD",8564,4,451.5,222)
y^y^f^^n^^y^o^n
"BLD",8564,4,451.6,0)
451.6
"BLD",8564,4,451.6,222)
y^y^f^^n^^y^o^n
"BLD",8564,4,451.7,0)
451.7
"BLD",8564,4,451.7,222)
y^y^f^^^^n
"BLD",8564,4,455.5,0)
455.5
"BLD",8564,4,455.5,222)
y^y^f^^^^n
"BLD",8564,4,456,0)
456
"BLD",8564,4,456,222)
y^y^f^^^^n
"BLD",8564,4,457.3,0)
457.3
"BLD",8564,4,457.3,222)
n^n^f^^n^^y^o^n
"BLD",8564,4,"APDD",450,450.01)

"BLD",8564,4,"B",450,450)

"BLD",8564,4,"B",451,451)

"BLD",8564,4,"B",451.1,451.1)

"BLD",8564,4,"B",451.4,451.4)

"BLD",8564,4,"B",451.5,451.5)

"BLD",8564,4,"B",451.6,451.6)

"BLD",8564,4,"B",451.7,451.7)

"BLD",8564,4,"B",455.5,455.5)

"BLD",8564,4,"B",456,456)

"BLD",8564,4,"B",457.3,457.3)

"BLD",8564,6)
14^
"BLD",8564,6.3)
59
"BLD",8564,"ABPKG")
n
"BLD",8564,"INIT")
POST^PRSXP126
"BLD",8564,"KRN",0)
^9.67PA^779.2^20
"BLD",8564,"KRN",.4,0)
.4
"BLD",8564,"KRN",.4,"NM",0)
^9.68A^1^1
"BLD",8564,"KRN",.4,"NM",1,0)
PRSN POC DIVISION PARAMS    FILE #456^456^0
"BLD",8564,"KRN",.4,"NM","B","PRSN POC DIVISION PARAMS    FILE #456",1)

"BLD",8564,"KRN",.401,0)
.401
"BLD",8564,"KRN",.401,"NM",0)
^9.68A^^
"BLD",8564,"KRN",.402,0)
.402
"BLD",8564,"KRN",.403,0)
.403
"BLD",8564,"KRN",.403,"NM",0)
^9.68A^5^5
"BLD",8564,"KRN",.403,"NM",1,0)
PRSN DAILY TIME RECORDS A/E/D    FILE #451^451^0
"BLD",8564,"KRN",.403,"NM",2,0)
PRSN EDIT PAID PARAMETERS    FILE #456^456^0
"BLD",8564,"KRN",.403,"NM",3,0)
PRSN EDIT TL POC    FILE #455.5^455.5^0
"BLD",8564,"KRN",.403,"NM",4,0)
PRSA TL EDIT    FILE #455.5^455.5^0
"BLD",8564,"KRN",.403,"NM",5,0)
PRSA TL DISP    FILE #455.5^455.5^0
"BLD",8564,"KRN",.403,"NM","B","PRSA TL DISP    FILE #455.5",5)

"BLD",8564,"KRN",.403,"NM","B","PRSA TL EDIT    FILE #455.5",4)

"BLD",8564,"KRN",.403,"NM","B","PRSN DAILY TIME RECORDS A/E/D    FILE #451",1)

"BLD",8564,"KRN",.403,"NM","B","PRSN EDIT PAID PARAMETERS    FILE #456",2)

"BLD",8564,"KRN",.403,"NM","B","PRSN EDIT TL POC    FILE #455.5",3)

"BLD",8564,"KRN",.5,0)
.5
"BLD",8564,"KRN",.84,0)
.84
"BLD",8564,"KRN",3.6,0)
3.6
"BLD",8564,"KRN",3.8,0)
3.8
"BLD",8564,"KRN",9.2,0)
9.2
"BLD",8564,"KRN",9.8,0)
9.8
"BLD",8564,"KRN",9.8,"NM",0)
^9.68A^57^54
"BLD",8564,"KRN",9.8,"NM",1,0)
PRSN9A^^0^B5056202
"BLD",8564,"KRN",9.8,"NM",2,0)
PRSN9B^^0^B2702215
"BLD",8564,"KRN",9.8,"NM",3,0)
PRSNAA01^^0^B36883552
"BLD",8564,"KRN",9.8,"NM",4,0)
PRSNAC01^^0^B21805645
"BLD",8564,"KRN",9.8,"NM",5,0)
PRSNCAPE^^0^B32183609
"BLD",8564,"KRN",9.8,"NM",6,0)
PRSNCGP^^0^B68249177
"BLD",8564,"KRN",9.8,"NM",7,0)
PRSNCGR^^0^B81915244
"BLD",8564,"KRN",9.8,"NM",8,0)
PRSNCGR1^^0^B27388966
"BLD",8564,"KRN",9.8,"NM",10,0)
PRSNCR1^^0^B13036287
"BLD",8564,"KRN",9.8,"NM",11,0)
PRSNCTL^^0^B22429209
"BLD",8564,"KRN",9.8,"NM",12,0)
PRSNDPC1^^0^B17799830
"BLD",8564,"KRN",9.8,"NM",13,0)
PRSNEC^^0^B21101088
"BLD",8564,"KRN",9.8,"NM",14,0)
PRSNEE^^0^B48948621
"BLD",8564,"KRN",9.8,"NM",15,0)
PRSNEE0^^0^B21641621
"BLD",8564,"KRN",9.8,"NM",16,0)
PRSNEETP^^0^B12540787
"BLD",8564,"KRN",9.8,"NM",17,0)
PRSNRAD0^^0^B15054277
"BLD",8564,"KRN",9.8,"NM",18,0)
PRSNRAS0^^0^B17764881
"BLD",8564,"KRN",9.8,"NM",19,0)
PRSNRAS1^^0^B20833055
"BLD",8564,"KRN",9.8,"NM",20,0)
PRSNREV0^^0^B7575459
"BLD",8564,"KRN",9.8,"NM",21,0)
PRSNREV1^^0^B10461851
"BLD",8564,"KRN",9.8,"NM",22,0)
PRSNRIA^^0^B6940996
"BLD",8564,"KRN",9.8,"NM",23,0)
PRSNRMM^^0^B135301607
"BLD",8564,"KRN",9.8,"NM",24,0)
PRSNRMM1^^0^B24342033
"BLD",8564,"KRN",9.8,"NM",25,0)
PRSNRND0^^0^B8957328
"BLD",8564,"KRN",9.8,"NM",26,0)
PRSNRND1^^0^B16141742
"BLD",8564,"KRN",9.8,"NM",27,0)
PRSNRSM0^^0^B8857878
"BLD",8564,"KRN",9.8,"NM",28,0)
PRSNRSM1^^0^B16892606
"BLD",8564,"KRN",9.8,"NM",29,0)
PRSNRUT0^^0^B18653114
"BLD",8564,"KRN",9.8,"NM",30,0)
PRSNRUT1^^0^B6371966
"BLD",8564,"KRN",9.8,"NM",33,0)
PRSNUT01^^0^B37189173
"BLD",8564,"KRN",9.8,"NM",34,0)
PRSNUT02^^0^B66153406
"BLD",8564,"KRN",9.8,"NM",35,0)
PRSNUT03^^0^B67835037
"BLD",8564,"KRN",9.8,"NM",36,0)
PRSNUT04^^0^B45514733
"BLD",8564,"KRN",9.8,"NM",37,0)
PRSNUT05^^0^B12074969
"BLD",8564,"KRN",9.8,"NM",38,0)
PRSATIM^^0^B4486909
"BLD",8564,"KRN",9.8,"NM",39,0)
PRSU1A^^0^B13822383
"BLD",8564,"KRN",9.8,"NM",40,0)
PRSU1B^^0^B11305691
"BLD",8564,"KRN",9.8,"NM",41,0)
PRSU1B1^^0^B2203162
"BLD",8564,"KRN",9.8,"NM",42,0)
PRSADP1^^0^B11335770
"BLD",8564,"KRN",9.8,"NM",43,0)
PRSATP^^0^B32294391
"BLD",8564,"KRN",9.8,"NM",44,0)
PRSNRDN0^^0^B8776479
"BLD",8564,"KRN",9.8,"NM",45,0)
PRSNRDN1^^0^B13341348
"BLD",8564,"KRN",9.8,"NM",46,0)
PRSNRGD0^^0^B9210603
"BLD",8564,"KRN",9.8,"NM",47,0)
PRSNRGD1^^0^B5460196
"BLD",8564,"KRN",9.8,"NM",48,0)
PRSNRGS0^^0^B21962579
"BLD",8564,"KRN",9.8,"NM",49,0)
PRSNROLD^^0^B46388978
"BLD",8564,"KRN",9.8,"NM",50,0)
PRSNROLS^^0^B69836614
"BLD",8564,"KRN",9.8,"NM",51,0)
PRSXP126^^0^B2479075
"BLD",8564,"KRN",9.8,"NM",52,0)
PRSNRLS0^^0^B58835393
"BLD",8564,"KRN",9.8,"NM",53,0)
PRSNRLND^^0^B35575903
"BLD",8564,"KRN",9.8,"NM",54,0)
PRSPLVU^^0^B47621805
"BLD",8564,"KRN",9.8,"NM",55,0)
PRSNRUR^^0^B26480927
"BLD",8564,"KRN",9.8,"NM",56,0)
PRSNRLOS^^0^B105227218
"BLD",8564,"KRN",9.8,"NM",57,0)
PRSRTLPR^^0^B14710539
"BLD",8564,"KRN",9.8,"NM","B","PRSADP1",42)

"BLD",8564,"KRN",9.8,"NM","B","PRSATIM",38)

"BLD",8564,"KRN",9.8,"NM","B","PRSATP",43)

"BLD",8564,"KRN",9.8,"NM","B","PRSN9A",1)

"BLD",8564,"KRN",9.8,"NM","B","PRSN9B",2)

"BLD",8564,"KRN",9.8,"NM","B","PRSNAA01",3)

"BLD",8564,"KRN",9.8,"NM","B","PRSNAC01",4)

"BLD",8564,"KRN",9.8,"NM","B","PRSNCAPE",5)

"BLD",8564,"KRN",9.8,"NM","B","PRSNCGP",6)

"BLD",8564,"KRN",9.8,"NM","B","PRSNCGR",7)

"BLD",8564,"KRN",9.8,"NM","B","PRSNCGR1",8)

"BLD",8564,"KRN",9.8,"NM","B","PRSNCR1",10)

"BLD",8564,"KRN",9.8,"NM","B","PRSNCTL",11)

"BLD",8564,"KRN",9.8,"NM","B","PRSNDPC1",12)

"BLD",8564,"KRN",9.8,"NM","B","PRSNEC",13)

"BLD",8564,"KRN",9.8,"NM","B","PRSNEE",14)

"BLD",8564,"KRN",9.8,"NM","B","PRSNEE0",15)

"BLD",8564,"KRN",9.8,"NM","B","PRSNEETP",16)

"BLD",8564,"KRN",9.8,"NM","B","PRSNRAD0",17)

"BLD",8564,"KRN",9.8,"NM","B","PRSNRAS0",18)

"BLD",8564,"KRN",9.8,"NM","B","PRSNRAS1",19)

"BLD",8564,"KRN",9.8,"NM","B","PRSNRDN0",44)

"BLD",8564,"KRN",9.8,"NM","B","PRSNRDN1",45)

"BLD",8564,"KRN",9.8,"NM","B","PRSNREV0",20)

"BLD",8564,"KRN",9.8,"NM","B","PRSNREV1",21)

"BLD",8564,"KRN",9.8,"NM","B","PRSNRGD0",46)

"BLD",8564,"KRN",9.8,"NM","B","PRSNRGD1",47)

"BLD",8564,"KRN",9.8,"NM","B","PRSNRGS0",48)

"BLD",8564,"KRN",9.8,"NM","B","PRSNRIA",22)

"BLD",8564,"KRN",9.8,"NM","B","PRSNRLND",53)

"BLD",8564,"KRN",9.8,"NM","B","PRSNRLOS",56)

"BLD",8564,"KRN",9.8,"NM","B","PRSNRLS0",52)

"BLD",8564,"KRN",9.8,"NM","B","PRSNRMM",23)

"BLD",8564,"KRN",9.8,"NM","B","PRSNRMM1",24)

"BLD",8564,"KRN",9.8,"NM","B","PRSNRND0",25)

"BLD",8564,"KRN",9.8,"NM","B","PRSNRND1",26)

"BLD",8564,"KRN",9.8,"NM","B","PRSNROLD",49)

"BLD",8564,"KRN",9.8,"NM","B","PRSNROLS",50)

"BLD",8564,"KRN",9.8,"NM","B","PRSNRSM0",27)

"BLD",8564,"KRN",9.8,"NM","B","PRSNRSM1",28)

"BLD",8564,"KRN",9.8,"NM","B","PRSNRUR",55)

"BLD",8564,"KRN",9.8,"NM","B","PRSNRUT0",29)

"BLD",8564,"KRN",9.8,"NM","B","PRSNRUT1",30)

"BLD",8564,"KRN",9.8,"NM","B","PRSNUT01",33)

"BLD",8564,"KRN",9.8,"NM","B","PRSNUT02",34)

"BLD",8564,"KRN",9.8,"NM","B","PRSNUT03",35)

"BLD",8564,"KRN",9.8,"NM","B","PRSNUT04",36)

"BLD",8564,"KRN",9.8,"NM","B","PRSNUT05",37)

"BLD",8564,"KRN",9.8,"NM","B","PRSPLVU",54)

"BLD",8564,"KRN",9.8,"NM","B","PRSRTLPR",57)

"BLD",8564,"KRN",9.8,"NM","B","PRSU1A",39)

"BLD",8564,"KRN",9.8,"NM","B","PRSU1B",40)

"BLD",8564,"KRN",9.8,"NM","B","PRSU1B1",41)

"BLD",8564,"KRN",9.8,"NM","B","PRSXP126",51)

"BLD",8564,"KRN",19,0)
19
"BLD",8564,"KRN",19,"NM",0)
^9.68A^57^56
"BLD",8564,"KRN",19,"NM",1,0)
PRSN APPROV CORR POC^^0
"BLD",8564,"KRN",19,"NM",2,0)
PRSN APPROV POC PAYPD^^0
"BLD",8564,"KRN",19,"NM",3,0)
PRSN COORDINATOR MENU^^0
"BLD",8564,"KRN",19,"NM",4,0)
PRSN COORDINATOR REPORTS MENU^^0
"BLD",8564,"KRN",19,"NM",5,0)
PRSN CORRECT RELEASED POC DATA^^0
"BLD",8564,"KRN",19,"NM",6,0)
PRSN DAP REPORTS MENU^^0
"BLD",8564,"KRN",19,"NM",7,0)
PRSN DATA APPROVAL MENU^^0
"BLD",8564,"KRN",19,"NM",8,0)
PRSN DATA ENTRY MENU^^0
"BLD",8564,"KRN",19,"NM",9,0)
PRSN DEL POC RECORD^^0
"BLD",8564,"KRN",19,"NM",10,0)
PRSN DEP REPORTS MENU^^0
"BLD",8564,"KRN",19,"NM",11,0)
PRSN ENTER NURSE POC DATA^^0
"BLD",8564,"KRN",19,"NM",12,0)
PRSN NURSE MENU^^0
"BLD",8564,"KRN",19,"NM",14,0)
PRSN POC APPLICATION PARAMETER^^0
"BLD",8564,"KRN",19,"NM",15,0)
PRSN POC CORRECT RELEASE^^0
"BLD",8564,"KRN",19,"NM",16,0)
PRSN POC RELEASE^^0
"BLD",8564,"KRN",19,"NM",17,0)
PRSN POC TYPE OF TIME^^0
"BLD",8564,"KRN",19,"NM",18,0)
PRSN RET APPROVED POC RECORD^^0
"BLD",8564,"KRN",19,"NM",19,0)
PRSN SHOW POC SYSTEM SETUP^^0
"BLD",8564,"KRN",19,"NM",20,0)
PRSN SITE MAINTENANCE COORD^^0
"BLD",8564,"KRN",19,"NM",21,0)
PRSN TL POC^^0
"BLD",8564,"KRN",19,"NM",22,0)
PRSN TOGGLE TK POC POST^^0
"BLD",8564,"KRN",19,"NM",23,0)
PRSN VANOD EXTRACT^^0
"BLD",8564,"KRN",19,"NM",24,0)
PRSNR ACTIVITY BY GROUP-COORD^^0
"BLD",8564,"KRN",19,"NM",25,0)
PRSNR ACTIVITY BY GROUP-DAP^^0
"BLD",8564,"KRN",19,"NM",26,0)
PRSNR ACTIVITY BY GROUP-DEP^^0
"BLD",8564,"KRN",19,"NM",27,0)
PRSNR EDU VALIDATION-COORD^^0
"BLD",8564,"KRN",19,"NM",28,0)
PRSNR INDIV ACTIVITY-COORD^^0
"BLD",8564,"KRN",19,"NM",29,0)
PRSNR INDIV ACTIVITY-NURSE^^0
"BLD",8564,"KRN",19,"NM",30,0)
PRSNR INDIVIDUAL ACTIVITY-DAP^^0
"BLD",8564,"KRN",19,"NM",31,0)
PRSNR INDIVIDUAL ACTIVITY-DEP^^0
"BLD",8564,"KRN",19,"NM",32,0)
PRSNR MISMATCHES ETA POC-COORD^^0
"BLD",8564,"KRN",19,"NM",33,0)
PRSNR MISMATCHES ETA POC-DAP^^0
"BLD",8564,"KRN",19,"NM",34,0)
PRSNR MISMATCHES ETA POC-DEP^^0
"BLD",8564,"KRN",19,"NM",35,0)
PRSNR MISMATCHES ETA POC-NURSE^^0
"BLD",8564,"KRN",19,"NM",36,0)
PRSNR NONDIR CARE SUMM-COORD^^0
"BLD",8564,"KRN",19,"NM",37,0)
PRSNR NONDIR CARE SUMM-DAP^^0
"BLD",8564,"KRN",19,"NM",38,0)
PRSNR NURSE POSITION AND PAY^^0
"BLD",8564,"KRN",19,"NM",39,0)
PRSNR SKILL MIX GRP SUMM-COORD^^0
"BLD",8564,"KRN",19,"NM",40,0)
PRSNR SKILL MIX GRP SUMM-DAP^^0
"BLD",8564,"KRN",19,"NM",41,0)
PRSA TK MENU^^2
"BLD",8564,"KRN",19,"NM",42,0)
PRSRFI-PAID SYSTEM REPORTS^^2
"BLD",8564,"KRN",19,"NM",43,0)
PRSNR SUM DIR & NONDIR - COORD^^0
"BLD",8564,"KRN",19,"NM",44,0)
PRSNR SUM DIR & NONDIR - DAP^^0
"BLD",8564,"KRN",19,"NM",45,0)
PRSNR LOC OT DETAIL - COORD^^0
"BLD",8564,"KRN",19,"NM",46,0)
PRSNR LOC OT DETAIL - DAP^^0
"BLD",8564,"KRN",19,"NM",47,0)
PRSNR LOC OT SUM SKILL - COORD^^0
"BLD",8564,"KRN",19,"NM",48,0)
PRSNR LOC OT SUM SKILL - DAP^^0
"BLD",8564,"KRN",19,"NM",49,0)
PRSNR GROUP DETAIL - COORD^^0
"BLD",8564,"KRN",19,"NM",50,0)
PRSNR GROUP SUMMARY - COORD^^0
"BLD",8564,"KRN",19,"NM",51,0)
PRSN NURSES BY LOC/T&L^^0
"BLD",8564,"KRN",19,"NM",52,0)
PRSN COPY ETA TO POC^^0
"BLD",8564,"KRN",19,"NM",53,0)
PRSNR NURLOC ACTIVITY - COORD^^0
"BLD",8564,"KRN",19,"NM",54,0)
PRSNR NURLOC NONDIR - COORD^^0
"BLD",8564,"KRN",19,"NM",55,0)
PRSNR MISMATCHES BY T&L^^0
"BLD",8564,"KRN",19,"NM",56,0)
PRSNR UNAPPROVED POC TIME^^0
"BLD",8564,"KRN",19,"NM",57,0)
PRSNR NURLOC OT - COORD^^0
"BLD",8564,"KRN",19,"NM","B","PRSA TK MENU",41)

"BLD",8564,"KRN",19,"NM","B","PRSN APPROV CORR POC",1)

"BLD",8564,"KRN",19,"NM","B","PRSN APPROV POC PAYPD",2)

"BLD",8564,"KRN",19,"NM","B","PRSN COORDINATOR MENU",3)

"BLD",8564,"KRN",19,"NM","B","PRSN COORDINATOR REPORTS MENU",4)

"BLD",8564,"KRN",19,"NM","B","PRSN COPY ETA TO POC",52)

"BLD",8564,"KRN",19,"NM","B","PRSN CORRECT RELEASED POC DATA",5)

"BLD",8564,"KRN",19,"NM","B","PRSN DAP REPORTS MENU",6)

"BLD",8564,"KRN",19,"NM","B","PRSN DATA APPROVAL MENU",7)

"BLD",8564,"KRN",19,"NM","B","PRSN DATA ENTRY MENU",8)

"BLD",8564,"KRN",19,"NM","B","PRSN DEL POC RECORD",9)

"BLD",8564,"KRN",19,"NM","B","PRSN DEP REPORTS MENU",10)

"BLD",8564,"KRN",19,"NM","B","PRSN ENTER NURSE POC DATA",11)

"BLD",8564,"KRN",19,"NM","B","PRSN NURSE MENU",12)

"BLD",8564,"KRN",19,"NM","B","PRSN NURSES BY LOC/T&L",51)

"BLD",8564,"KRN",19,"NM","B","PRSN POC APPLICATION PARAMETER",14)

"BLD",8564,"KRN",19,"NM","B","PRSN POC CORRECT RELEASE",15)

"BLD",8564,"KRN",19,"NM","B","PRSN POC RELEASE",16)

"BLD",8564,"KRN",19,"NM","B","PRSN POC TYPE OF TIME",17)

"BLD",8564,"KRN",19,"NM","B","PRSN RET APPROVED POC RECORD",18)

"BLD",8564,"KRN",19,"NM","B","PRSN SHOW POC SYSTEM SETUP",19)

"BLD",8564,"KRN",19,"NM","B","PRSN SITE MAINTENANCE COORD",20)

"BLD",8564,"KRN",19,"NM","B","PRSN TL POC",21)

"BLD",8564,"KRN",19,"NM","B","PRSN TOGGLE TK POC POST",22)

"BLD",8564,"KRN",19,"NM","B","PRSN VANOD EXTRACT",23)

"BLD",8564,"KRN",19,"NM","B","PRSNR ACTIVITY BY GROUP-COORD",24)

"BLD",8564,"KRN",19,"NM","B","PRSNR ACTIVITY BY GROUP-DAP",25)

"BLD",8564,"KRN",19,"NM","B","PRSNR ACTIVITY BY GROUP-DEP",26)

"BLD",8564,"KRN",19,"NM","B","PRSNR EDU VALIDATION-COORD",27)

"BLD",8564,"KRN",19,"NM","B","PRSNR GROUP DETAIL - COORD",49)

"BLD",8564,"KRN",19,"NM","B","PRSNR GROUP SUMMARY - COORD",50)

"BLD",8564,"KRN",19,"NM","B","PRSNR INDIV ACTIVITY-COORD",28)

"BLD",8564,"KRN",19,"NM","B","PRSNR INDIV ACTIVITY-NURSE",29)

"BLD",8564,"KRN",19,"NM","B","PRSNR INDIVIDUAL ACTIVITY-DAP",30)

"BLD",8564,"KRN",19,"NM","B","PRSNR INDIVIDUAL ACTIVITY-DEP",31)

"BLD",8564,"KRN",19,"NM","B","PRSNR LOC OT DETAIL - COORD",45)

"BLD",8564,"KRN",19,"NM","B","PRSNR LOC OT DETAIL - DAP",46)

"BLD",8564,"KRN",19,"NM","B","PRSNR LOC OT SUM SKILL - COORD",47)

"BLD",8564,"KRN",19,"NM","B","PRSNR LOC OT SUM SKILL - DAP",48)

"BLD",8564,"KRN",19,"NM","B","PRSNR MISMATCHES BY T&L",55)

"BLD",8564,"KRN",19,"NM","B","PRSNR MISMATCHES ETA POC-COORD",32)

"BLD",8564,"KRN",19,"NM","B","PRSNR MISMATCHES ETA POC-DAP",33)

"BLD",8564,"KRN",19,"NM","B","PRSNR MISMATCHES ETA POC-DEP",34)

"BLD",8564,"KRN",19,"NM","B","PRSNR MISMATCHES ETA POC-NURSE",35)

"BLD",8564,"KRN",19,"NM","B","PRSNR NONDIR CARE SUMM-COORD",36)

"BLD",8564,"KRN",19,"NM","B","PRSNR NONDIR CARE SUMM-DAP",37)

"BLD",8564,"KRN",19,"NM","B","PRSNR NURLOC ACTIVITY - COORD",53)

"BLD",8564,"KRN",19,"NM","B","PRSNR NURLOC NONDIR - COORD",54)

"BLD",8564,"KRN",19,"NM","B","PRSNR NURLOC OT - COORD",57)

"BLD",8564,"KRN",19,"NM","B","PRSNR NURSE POSITION AND PAY",38)

"BLD",8564,"KRN",19,"NM","B","PRSNR SKILL MIX GRP SUMM-COORD",39)

"BLD",8564,"KRN",19,"NM","B","PRSNR SKILL MIX GRP SUMM-DAP",40)

"BLD",8564,"KRN",19,"NM","B","PRSNR SUM DIR & NONDIR - COORD",43)

"BLD",8564,"KRN",19,"NM","B","PRSNR SUM DIR & NONDIR - DAP",44)

"BLD",8564,"KRN",19,"NM","B","PRSNR UNAPPROVED POC TIME",56)

"BLD",8564,"KRN",19,"NM","B","PRSRFI-PAID SYSTEM REPORTS",42)

"BLD",8564,"KRN",19.1,0)
19.1
"BLD",8564,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",8564,"KRN",19.1,"NM",1,0)
PRSN DEP^^0
"BLD",8564,"KRN",19.1,"NM","B","PRSN DEP",1)

"BLD",8564,"KRN",101,0)
101
"BLD",8564,"KRN",409.61,0)
409.61
"BLD",8564,"KRN",771,0)
771
"BLD",8564,"KRN",779.2,0)
779.2
"BLD",8564,"KRN",870,0)
870
"BLD",8564,"KRN",8989.51,0)
8989.51
"BLD",8564,"KRN",8989.52,0)
8989.52
"BLD",8564,"KRN",8994,0)
8994
"BLD",8564,"KRN",8994,"NM",0)
^9.68A^2^2
"BLD",8564,"KRN",8994,"NM",1,0)
PRSN NURS LOCATION EXTRACTION^^0
"BLD",8564,"KRN",8994,"NM",2,0)
PRSN POC DAILY TIME EXTRACTION^^0
"BLD",8564,"KRN",8994,"NM","B","PRSN NURS LOCATION EXTRACTION",1)

"BLD",8564,"KRN",8994,"NM","B","PRSN POC DAILY TIME EXTRACTION",2)

"BLD",8564,"KRN","B",.4,.4)

"BLD",8564,"KRN","B",.401,.401)

"BLD",8564,"KRN","B",.402,.402)

"BLD",8564,"KRN","B",.403,.403)

"BLD",8564,"KRN","B",.5,.5)

"BLD",8564,"KRN","B",.84,.84)

"BLD",8564,"KRN","B",3.6,3.6)

"BLD",8564,"KRN","B",3.8,3.8)

"BLD",8564,"KRN","B",9.2,9.2)

"BLD",8564,"KRN","B",9.8,9.8)

"BLD",8564,"KRN","B",19,19)

"BLD",8564,"KRN","B",19.1,19.1)

"BLD",8564,"KRN","B",101,101)

"BLD",8564,"KRN","B",409.61,409.61)

"BLD",8564,"KRN","B",771,771)

"BLD",8564,"KRN","B",779.2,779.2)

"BLD",8564,"KRN","B",870,870)

"BLD",8564,"KRN","B",8989.51,8989.51)

"BLD",8564,"KRN","B",8989.52,8989.52)

"BLD",8564,"KRN","B",8994,8994)

"BLD",8564,"QDEF")
^^^^^^^^YES
"BLD",8564,"QUES",0)
^9.62^^
"BLD",8564,"REQB",0)
^9.611^4^4
"BLD",8564,"REQB",1,0)
PRS*4.0*114^1
"BLD",8564,"REQB",2,0)
PRS*4.0*112^1
"BLD",8564,"REQB",3,0)
PRS*4.0*100^1
"BLD",8564,"REQB",4,0)
NUR*4.0*43^1
"BLD",8564,"REQB","B","NUR*4.0*43",4)

"BLD",8564,"REQB","B","PRS*4.0*100",3)

"BLD",8564,"REQB","B","PRS*4.0*112",2)

"BLD",8564,"REQB","B","PRS*4.0*114",1)

"DATA",451.1,1,0)
* 61 0610 88^DIRECT CARE RN^RN STAFF, INPT ACUTE/INT^DC
"DATA",451.1,2,0)
* 61 0610 Q1^DIRECT CARE RN^RN STAFF, OUTPT^DC
"DATA",451.1,3,0)
* 61 0610 Q2^DIRECT CARE RN^RN STAFF, MIXED INPT/OUTPT^DC
"DATA",451.1,4,0)
* 61 0610 Q3^DIRECT CARE RN^RN TELEPHONE TRIAGE^DC
"DATA",451.1,5,0)
* 61 0610 Q4^DIRECT CARE RN^RN CLINICAL NURSE LEADER^DC
"DATA",451.1,6,0)
* 61 0610 Q5^DIRECT CARE RN^RN TRAVEL NURSE CORPS^DC
"DATA",451.1,7,0)
* 61 0610 Q6^DIRECT CARE RN^RN STAFF, INPT CLC CONTINUING CARE^DC
"DATA",451.1,8,0)
* 65 0620 *^DIRECT CARE LPN & LVN^^DC
"DATA",451.1,9,0)
* 66 0621 *^DIRECT CARE NURSING AIDES^^DC
"DATA",451.1,10,0)
8241 31 0640 *^DIRECT CARE HEALTH TECHS & AIDES^^DC
"DATA",451.1,11,0)
* 61 0610 M1^HOSPITAL SUPPORT RN^RN ADMISSIONS/DISCHARGE COORDINATOR^HS
"DATA",451.1,12,0)
* 61 0610 M2^HOSPITAL SUPPORT RN^RN CASE MANAGER/CARE COORDINATOR^HS
"DATA",451.1,13,0)
* 61 0610 M3^HOSPITAL SUPPORT RN^RN OEF-OIF CASE MANAGER^HS
"DATA",451.1,14,0)
* 61 0610 M4^HOSPITAL SUPPORT RN^RN FEDERAL RECOVERY COORDINATOR^HS
"DATA",451.1,15,0)
* 61 0610 S1^HOSPITAL SUPPORT RN^RN POLYTRAUMA REHAB LIAISON^HS
"DATA",451.1,16,0)
* 61 0610 85^HOSPITAL SUPPORT RN^RN EDUCATOR^HS
"DATA",451.1,17,0)
* 61 0610 74^HOSPITAL SUPPORT RN^RN INFECTION CONTROL^HS
"DATA",451.1,18,0)
* 61 0610 S2^HOSPITAL SUPPORT RN^RN INFORMATICS^HS
"DATA",451.1,19,0)
* 61 0610 77^HOSPITAL SUPPORT RN^RN RESEARCHER W/DOCTORATE^HS
"DATA",451.1,20,0)
* 61 0610 S3^HOSPITAL SUPPORT RN^RN PREVENTION/OCCUP HEALTH^HS
"DATA",451.1,21,0)
* 61 0610 J3^HOSPITAL SUPPORT RN^CLINICAL ANALYST^HS
"DATA",451.1,22,0)
* 61 0610 S4^HOSPITAL SUPPORT RN^RN WOUND CARE SPECIALIST^HS
"DATA",451.1,23,0)
* 61 0610 S5^HOSPITAL SUPPORT RN^RN IV THERAPY^HS
"DATA",451.1,24,0)
* 61 0610 S6^HOSPITAL SUPPORT RN^RN GEN CLIN CONSULTANT^HS
"DATA",451.1,25,0)
* 64 0610 75^NURSE PRACTITIONER^NP, PRIMARY CARE^AP
"DATA",451.1,26,0)
* 64 0610 N1^NURSE PRACTITIONER^NP, LTC^AP
"DATA",451.1,27,0)
* 64 0610 N2^NURSE PRACTITIONER^NP, WOMEN'S HEALTH^AP
"DATA",451.1,28,0)
* 64 0610 N3^NURSE PRACTITIONER^NP, POLYTRAUMA/REHAB^AP
"DATA",451.1,29,0)
* 64 0610 N4^NURSE PRACTITIONER^NP, MENTAL HEALTH/SUD^AP
"DATA",451.1,30,0)
* 64 0610 N5^NURSE PRACTITIONER^NP, OTHER^AP
"DATA",451.1,31,0)
* 67 0610 79^CLINICAL NURSE SPECIALIST^CNS, MED/SURG^AP
"DATA",451.1,32,0)
* 67 0610 N7^CLINICAL NURSE SPECIALIST^CNS, LTC/GERIATRICS^AP
"DATA",451.1,33,0)
* 67 0610 N8^CLINICAL NURSE SPECIALIST^CNS, MH/SUD^AP
"DATA",451.1,34,0)
* 61 0610 80^ADMINISTRATIVE RN^RN NURSE EXECUTIVE^AN
"DATA",451.1,35,0)
* 61 0610 82^ADMINISTRATIVE RN^RN SENIOR LEADERSHIP^AN
"DATA",451.1,36,0)
* 61 0610 71^ADMINISTRATIVE RN^NURSE RECRUITER^AN
"DATA",451.1,37,0)
* 61 0610 86^ADMINISTRATIVE RN^RN SHIFT SUPV^AN
"DATA",451.1,38,0)
* 61 0610 87^ADMINISTRATIVE RN^RN MGR/HEAD NURSE^AN
"DATA",451.1,39,0)
* 61 0610 J4^ADMINISTRATIVE RN^RN ASST MGR/PERM CHARGE^AN
"DATA",451.1,40,0)
* 61 0610 G6^ADMINISTRATIVE RN^RN PROG MGR/COORD^AN
"DATA",451.1,41,0)
* 61 0610 G8^ADMINISTRATIVE RN^RN PROG MGR, NATIONAL FED REC/OEF-OIF^AN
"DATA",451.1,42,0)
* 61 0610 89^ADMINISTRATIVE RN^RN VACO, OTHER^AN
"DATA",451.1,43,0)
* 61 0610 J5^ADMINISTRATIVE RN^RN VISN, OTHER^AN
"DATA",451.1,44,0)
* 61 0610 J6^ADMINISTRATIVE RN^RN PEER ADVOCATE^AN
"DATA",451.1,45,0)
* 61 0610 G7^ADMINISTRATIVE RN^RN ADMINISTRATIVE (OTHER)^AN
"DATA",451.1,46,0)
* 61 0610 G5^ADMINISTRATIVE RN^RN FACILITY ADMIN^AN
"DATA",451.1,47,0)
* 62 0610 F2^ADMINISTRATIVE NURSE TRAINEES^RN ADMINISTRATIVE TRAINEE^AT
"DATA",451.1,48,0)
8241 51 0699 *^STUDENT, TRAINEE, FACULTY^^AT
"DATA",451.1,49,0)
8241 51 0610 *^STUDENT, TRAINEE, FACULTY^^AT
"DATA",451.1,50,0)
8241 51 0620 *^STUDENT, TRAINEE, FACULTY^^AT
"DATA",451.1,51,0)
8241 51 0621 *^STUDENT, TRAINEE, FACULTY^^AT
"DATA",451.1,52,0)
8241 52 0699 *^STUDENT, TRAINEE, FACULTY^^AT
"DATA",451.1,53,0)
8241 52 0610 *^STUDENT, TRAINEE, FACULTY^^AT
"DATA",451.1,54,0)
8241 52 0620 *^STUDENT, TRAINEE, FACULTY^^AT
"DATA",451.1,55,0)
8241 52 0621 *^STUDENT, TRAINEE, FACULTY^^AT
"DATA",451.1,56,0)
8241 53 0699 *^STUDENT, TRAINEE, FACULTY^^AT
"DATA",451.1,57,0)
8241 53 0610 *^STUDENT, TRAINEE, FACULTY^^AT
"DATA",451.1,58,0)
8241 53 0620 *^STUDENT, TRAINEE, FACULTY^^AT
"DATA",451.1,59,0)
8241 53 0621 *^STUDENT, TRAINEE, FACULTY^^AT
"DATA",451.1,60,0)
8241 55 0699 *^STUDENT, TRAINEE, FACULTY^^AT
"DATA",451.1,61,0)
8241 55 0610 *^STUDENT, TRAINEE, FACULTY^^AT
"DATA",451.1,62,0)
8241 55 0620 *^STUDENT, TRAINEE, FACULTY^^AT
"DATA",451.1,63,0)
8241 55 0621 *^STUDENT, TRAINEE, FACULTY^^AT
"DATA",451.1,64,0)
8241 56 0699 *^STUDENT, TRAINEE, FACULTY^^AT
"DATA",451.1,65,0)
8241 56 0610 *^STUDENT, TRAINEE, FACULTY^^AT
"DATA",451.1,66,0)
8241 56 0620 *^STUDENT, TRAINEE, FACULTY^^AT
"DATA",451.1,67,0)
8241 56 0621 *^STUDENT, TRAINEE, FACULTY^^AT
"DATA",451.1,68,0)
8241 51 0610 T1^STUDENT, TRAINEE, FACULTY^NURSE ACADEMIC AFFILIATION TRAINEE^AT
"DATA",451.1,69,0)
8241 51 0610 K5^STUDENT, TRAINEE, FACULTY^NURSE FELLOW POST DOCTORAL^AT
"DATA",451.1,70,0)
8241 51 0610 T2^STUDENT, TRAINEE, FACULTY^NURSE FELLOW POST MASTERS^AT
"DATA",451.1,71,0)
8241 51 0610 K4^STUDENT, TRAINEE, FACULTY^NURSE FELLOW PRE DOCTORAL^AT
"DATA",451.1,72,0)
8241 61 0610 S7^STUDENT, TRAINEE, FACULTY^RN RESIDENT^AT
"DATA",451.1,73,0)
8241 61 0610 R6^STUDENT, TRAINEE, FACULTY^RN VANA FACULTY^AT
"DATA",451.4,1,0)
AA^AUTHORIZED ABSENCE
"DATA",451.4,1,9,0)
^451.49P^2^2
"DATA",451.4,1,9,1,0)
3^AA
"DATA",451.4,1,9,2,0)
4^CP
"DATA",451.4,2,0)
AD^ADOPTION
"DATA",451.4,2,9,0)
^451.49P^1^1
"DATA",451.4,2,9,1,0)
28^AD
"DATA",451.4,3,0)
AL^ANNUAL LEAVE
"DATA",451.4,3,9,0)
^451.49P^1^1
"DATA",451.4,3,9,1,0)
2^AL
"DATA",451.4,4,0)
CB^FAMILY CARE & BEREAVEMENT
"DATA",451.4,4,9,0)
^451.49P^1^1
"DATA",451.4,4,9,1,0)
27^CB
"DATA",451.4,5,0)
CU^COMP TIME/CREDITHRS USED
"DATA",451.4,5,9,0)
^451.49P^1^1
"DATA",451.4,5,9,1,0)
5^CU
"DATA",451.4,6,0)
DL^DONOR LEAVE
"DATA",451.4,6,9,0)
^451.49P^1^1
"DATA",451.4,6,9,1,0)
29^DL
"DATA",451.4,7,0)
RL^RESTORED ANNUAL LEAVE
"DATA",451.4,7,9,0)
^451.49P^1^1
"DATA",451.4,7,9,1,0)
11^RL
"DATA",451.4,8,0)
RS^RECESS
"DATA",451.4,8,9,0)
^451.49P^1^1
"DATA",451.4,8,9,1,0)
30^RS
"DATA",451.4,9,0)
HX^HOLIDAY EXCUSED
"DATA",451.4,9,9,0)
^451.49P^1^1
"DATA",451.4,9,9,1,0)
6^HX
"DATA",451.4,10,0)
ML^MILITARY LEAVE
"DATA",451.4,10,9,0)
^451.49P^1^1
"DATA",451.4,10,9,1,0)
8^ML
"DATA",451.4,11,0)
SL^SICK LEAVE
"DATA",451.4,11,9,0)
^451.49P^1^1
"DATA",451.4,11,9,1,0)
12^SL
"DATA",451.4,12,0)
WP^LEAVE WITHOUT PAY
"DATA",451.4,12,9,0)
^451.49P^1^1
"DATA",451.4,12,9,1,0)
15^WP
"DATA",451.4,13,0)
NL^NON-PAY ANNUAL LEAVE
"DATA",451.4,13,9,0)
^451.49P^1^1
"DATA",451.4,13,9,1,0)
22^NL
"DATA",451.4,14,0)
NP^NON-PAY
"DATA",451.4,14,9,0)
^451.49P^1^1
"DATA",451.4,14,9,1,0)
10^NP
"DATA",451.4,15,0)
WI^WORK INSIDE TOUR
"DATA",451.4,15,9,0)
^451.49P^1^1
"DATA",451.4,15,9,1,0)
31^WI
"DATA",451.4,16,0)
WO^WORK OUTSIDE TOUR
"DATA",451.4,16,9,0)
^451.49P^3^3
"DATA",451.4,16,9,1,0)
18^OT
"DATA",451.4,16,9,2,0)
16^CT
"DATA",451.4,16,9,3,0)
19^RG
"DATA",451.4,17,0)
TR^TRAINING (INSIDE TOUR)
"DATA",451.4,17,9,0)
^451.49P^1^1
"DATA",451.4,17,9,1,0)
20^TR
"DATA",451.4,18,0)
TV^TRAVEL (INSIDE TOUR)
"DATA",451.4,18,9,0)
^451.49P^1^1
"DATA",451.4,18,9,1,0)
21^TV
"DATA",451.4,19,0)
HW^HOLIDAY WORKED (INSIDE TOUR)
"DATA",451.4,19,9,0)
^451.49P^1^1
"DATA",451.4,19,9,1,0)
26^HW
"DATA",451.5,1,0)
ST^Sitter
"DATA",451.5,2,0)
LD^Light duty
"DATA",451.5,3,0)
OR^Orientation
"DATA",451.5,4,0)
ED^Onsite education
"DATA",451.5,5,0)
SI^Systems improvement
"DATA",451.5,6,0)
ND^Nondirect care other
"DATA",451.5,7,0)
DC^Direct care
"DATA",451.6,1,0)
HC^High Census/Acuity
"DATA",451.6,2,0)
EW^Extreme Weather
"DATA",451.6,3,0)
UL^Unplanned Leave
"DATA",451.6,4,0)
OP^Open Positions
"DATA",451.6,5,0)
SN^Sitter Needed
"DATA",451.6,6,0)
UP^Unpredicted Pt Care
"DATA",451.6,7,0)
AO^All Other
"DATA",457.3,2,0)
AL^ANNUAL LV^Annual Leave
"DATA",457.3,3,0)
AA^AUTH ABS^Authorized Absence
"DATA",457.3,4,0)
CP^COP^Continuation of Pay
"DATA",457.3,5,0)
CU^CT/CH USED^CompTime/CreditHrs Used
"DATA",457.3,6,0)
HX^HOL EX^Holiday Excused
"DATA",457.3,8,0)
ML^MIL LV^Military Leave
"DATA",457.3,10,0)
NP^NON PAY^Non-Pay
"DATA",457.3,11,0)
RL^RES ANN LV^Restored Annual Leave
"DATA",457.3,12,0)
SL^SICK LV^Sick Leave
"DATA",457.3,15,0)
WP^LWOP^Leave Without Pay
"DATA",457.3,16,0)
CT^CT/CH ERND^CompTime/CreditHrs Earned
"DATA",457.3,18,0)
OT^OVERTIME^Overtime
"DATA",457.3,19,0)
RG^REG TIME^Regular Scheduled Time
"DATA",457.3,20,0)
TR^TRAINING^Training
"DATA",457.3,21,0)
TV^TRAVEL^Travel
"DATA",457.3,22,0)
NL^N/P A/L^Non-Pay Annual Leave
"DATA",457.3,23,0)
ON^ON-CALL^On-Call
"DATA",457.3,24,0)
SB^STANDBY^Standby
"DATA",457.3,25,0)
UN^UNAVAIL^Unavailable
"DATA",457.3,26,0)
HW^HOL WK^Holiday Worked
"DATA",457.3,27,0)
CB^FAM CARE^Family Care & Bereavement
"DATA",457.3,28,0)
AD^ADOPT^Adoption
"DATA",457.3,29,0)
DL^DONOR LV^Donor Leave
"DATA",457.3,30,0)
RS^RECESS^Recess
"DATA",457.3,31,0)
WI^TOUR WORK^Work Inside Tour
"FIA",450)
PAID EMPLOYEE
"FIA",450,0)
^PRSPC(
"FIA",450,0,0)
450I
"FIA",450,0,1)
y^n^p^^^^n^^n
"FIA",450,0,10)

"FIA",450,0,11)

"FIA",450,0,"RLRO")

"FIA",450,0,"VR")
4.0^PRS
"FIA",450,450)
1
"FIA",450,450,7.5)

"FIA",450,450.01)
0
"FIA",451)
POC DAILY TIME RECORDS
"FIA",451,0)
^PRSN(451,
"FIA",451,0,0)
451
"FIA",451,0,1)
y^y^f^^^^n
"FIA",451,0,10)

"FIA",451,0,11)

"FIA",451,0,"RLRO")

"FIA",451,0,"VR")
4.0^PRS
"FIA",451,451)
0
"FIA",451,451.06)
0
"FIA",451,451.09)
0
"FIA",451,451.99)
0
"FIA",451,451.999)
0
"FIA",451,451.9999)
0
"FIA",451.1)
NURSE ROLE
"FIA",451.1,0)
^PRSN(451.1,
"FIA",451.1,0,0)
451.1I
"FIA",451.1,0,1)
y^y^f^^n^^y^o^n
"FIA",451.1,0,10)

"FIA",451.1,0,11)

"FIA",451.1,0,"RLRO")

"FIA",451.1,0,"VR")
4.0^PRS
"FIA",451.1,451.1)
0
"FIA",451.4)
POC TYPE OF TIME
"FIA",451.4,0)
^PRSN(451.4,
"FIA",451.4,0,0)
451.4I
"FIA",451.4,0,1)
y^y^f^^n^^y^o^n
"FIA",451.4,0,10)

"FIA",451.4,0,11)

"FIA",451.4,0,"RLRO")

"FIA",451.4,0,"VR")
4.0^PRS
"FIA",451.4,451.4)
0
"FIA",451.4,451.49)
0
"FIA",451.5)
TYPE OF WORK
"FIA",451.5,0)
^PRSN(451.5,
"FIA",451.5,0,0)
451.5I
"FIA",451.5,0,1)
y^y^f^^n^^y^o^n
"FIA",451.5,0,10)

"FIA",451.5,0,11)

"FIA",451.5,0,"RLRO")

"FIA",451.5,0,"VR")
4.0^PRS
"FIA",451.5,451.5)
0
"FIA",451.6)
REASON FOR OVERTIME
"FIA",451.6,0)
^PRSN(451.6,
"FIA",451.6,0,0)
451.6I
"FIA",451.6,0,1)
y^y^f^^n^^y^o^n
"FIA",451.6,0,10)

"FIA",451.6,0,11)

"FIA",451.6,0,"RLRO")

"FIA",451.6,0,"VR")
4.0^PRS
"FIA",451.6,451.6)
0
"FIA",451.7)
POC DAILY ACTIVITY EXTRACTION
"FIA",451.7,0)
^PRSN(451.7,
"FIA",451.7,0,0)
451.7
"FIA",451.7,0,1)
y^y^f^^^^n
"FIA",451.7,0,10)

"FIA",451.7,0,11)

"FIA",451.7,0,"RLRO")

"FIA",451.7,0,"VR")
4.0^PRS
"FIA",451.7,451.7)
0
"FIA",455.5)
T&L UNIT
"FIA",455.5,0)
^PRST(455.5,
"FIA",455.5,0,0)
455.5I
"FIA",455.5,0,1)
y^y^f^^^^n
"FIA",455.5,0,10)

"FIA",455.5,0,11)

"FIA",455.5,0,"RLRO")

"FIA",455.5,0,"VR")
4.0^PRS
"FIA",455.5,455.5)
0
"FIA",455.5,455.51)
0
"FIA",455.5,455.511)
0
"FIA",455.5,455.512)
0
"FIA",455.5,455.52)
0
"FIA",455.5,455.531)
0
"FIA",456)
PAID PARAMETERS
"FIA",456,0)
^PRST(456,
"FIA",456,0,0)
456P
"FIA",456,0,1)
y^y^f^^^^n
"FIA",456,0,10)

"FIA",456,0,11)

"FIA",456,0,"RLRO")

"FIA",456,0,"VR")
4.0^PRS
"FIA",456,456)
0
"FIA",456,456.05)
0
"FIA",457.3)
TYPE OF TIME
"FIA",457.3,0)
^PRST(457.3,
"FIA",457.3,0,0)
457.3I
"FIA",457.3,0,1)
n^n^f^^n^^y^o^n
"FIA",457.3,0,10)

"FIA",457.3,0,11)

"FIA",457.3,0,"RLRO")

"FIA",457.3,0,"VR")
4.0^PRS
"FIA",457.3,457.3)
0
"INIT")
POST^PRSXP126
"IX",451,451,"AA",0)
451^AA^The index is used to release POC Daily Time Records.^MU^^R^IR^W^451.09^^^^^S
"IX",451,451,"AA",.1,0)
^^2^2^3091029^
"IX",451,451,"AA",.1,1,0)
The Release Option will use this index to get the POC Daily
"IX",451,451,"AA",.1,2,0)
Time Records.
"IX",451,451,"AA",1)
S ^PRSN(451,"AA",X(2),DA(1),DA)=""
"IX",451,451,"AA",1.4)
S X=X(1)="A"
"IX",451,451,"AA",2)
K ^PRSN(451,"AA",X(2),DA(1),DA)
"IX",451,451,"AA",2.5)
K ^PRSN(451,"AA")
"IX",451,451,"AA",11.1,0)
^.114IA^2^2
"IX",451,451,"AA",11.1,1,0)
1^F^451.09^1^^1^F
"IX",451,451,"AA",11.1,2,0)
2^F^451.09^4^^2^F
"IX",451,451,"ACA",0)
451^ACA^X-REF contains all daily corrections to released pay periods.^MU^^F^IR^W^451.99^^^^^S
"IX",451,451,"ACA",.1,0)
^^3^3^3091104^
"IX",451,451,"ACA",.1,1,0)
Cross reference contains all approved daily corrections to POC records 
"IX",451,451,"ACA",.1,2,0)
for which the pay period has already been released.  The index is sorted 
"IX",451,451,"ACA",.1,3,0)
by Division, pay period, nurse and then day number.
"IX",451,451,"ACA",1)
S ^PRSN(451,"ACA",X(1),DA(2),DA(1),DA)=""
"IX",451,451,"ACA",1.4)
S X=X(2)="A"
"IX",451,451,"ACA",2)
K ^PRSN(451,"ACA",X(1),DA(2),DA(1),DA)
"IX",451,451,"ACA",2.5)
K ^PRSN(451,"ACA")
"IX",451,451,"ACA",11.1,0)
^.114IA^2^2
"IX",451,451,"ACA",11.1,1,0)
1^C^^^^1
"IX",451,451,"ACA",11.1,1,1.5)
S X=$P($G(^PRSN(451,DA(2),"E",DA(1),0)),U,5)
"IX",451,451,"ACA",11.1,2,0)
2^F^451.99^1^^2^F
"IX",451,451,"ACE",0)
451^ACE^x-ref contains entered daily corrections to released pay periods.^MU^^F^IR^W^451.99^^^^^S
"IX",451,451,"ACE",.1,0)
^^3^3^3091123^^
"IX",451,451,"ACE",.1,1,0)
Cross reference contains all "Entered" daily corrections to POC records 
"IX",451,451,"ACE",.1,2,0)
for which the pay period has already been released.  The index is sorted 
"IX",451,451,"ACE",.1,3,0)
by Division, pay period, nurse and then day number.
"IX",451,451,"ACE",1)
S ^PRSN(451,"ACE",X(1),DA(2),DA(1),DA)=""
"IX",451,451,"ACE",1.4)
S X=X(2)="E"
"IX",451,451,"ACE",2)
K ^PRSN(451,"ACE",X(1),DA(2),DA(1),DA)
"IX",451,451,"ACE",2.5)
K ^PRSN(451,"ACE")
"IX",451,451,"ACE",11.1,0)
^.114IA^2^2
"IX",451,451,"ACE",11.1,1,0)
1^C^^^^1
"IX",451,451,"ACE",11.1,1,1.5)
S X=$P($G(^PRSN(451,DA(2),"E",DA(1),0)),U,5)
"IX",451,451,"ACE",11.1,2,0)
2^F^451.99^1^^^F
"IX",451,451,"ACR",0)
451^ACR^x-ref contains all released corrections^MU^^F^IR^W^451.99^^^^^S
"IX",451,451,"ACR",.1,0)
^^3^3^3091104^
"IX",451,451,"ACR",.1,1,0)
Cross reference contains all "Released" daily corrections to POC records 
"IX",451,451,"ACR",.1,2,0)
for which the pay period has already been released.  The index is sorted 
"IX",451,451,"ACR",.1,3,0)
by Division, pay period, nurse and then day number.
"IX",451,451,"ACR",1)
S ^PRSN(451,"ACR",X(1),DA(2),DA(1),DA)=""
"IX",451,451,"ACR",1.4)
S X=X(2)="R"
"IX",451,451,"ACR",2)
K ^PRSN(451,"ACR",X(1),DA(2),DA(1),DA)
"IX",451,451,"ACR",2.5)
K ^PRSN(451,"ACR")
"IX",451,451,"ACR",11.1,0)
^.114IA^2^2
"IX",451,451,"ACR",11.1,1,0)
1^C^^^^1
"IX",451,451,"ACR",11.1,1,1.5)
S X=$P($G(^PRSN(451,DA(2),"E",DA(1),0)),U,5)
"IX",451,451,"ACR",11.1,2,0)
2^F^451.99^1^^2^F
"IX",451,451,"ACR",11.1,2,3)

"IX",451,451,"AE",0)
451^AE^This index is used to find all records for a nurse that need to be approved^MU^^F^IR^W^451.09^^^^^S
"IX",451,451,"AE",.1,0)
^^2^2^3091029^^
"IX",451,451,"AE",.1,1,0)
This is an index of all nurse POC records that have a pay period status 
"IX",451,451,"AE",.1,2,0)
of Entered and that need to be approved.
"IX",451,451,"AE",1)
S ^PRSN(451,"AE",DA,DA(1))=""
"IX",451,451,"AE",1.4)
S X=X(1)="E"
"IX",451,451,"AE",2)
K ^PRSN(451,"AE",DA,DA(1))
"IX",451,451,"AE",2.5)
K ^PRSN(451,"AE")
"IX",451,451,"AE",11.1,0)
^.114IA^1^1
"IX",451,451,"AE",11.1,1,0)
1^F^451.09^1^^1^F
"IX",451,451,"AE",11.1,1,3)

"IX",451,451,"AEP",0)
451^AEP^Unapproved time records by pay period^MU^^F^IR^W^451.09^^^^^S
"IX",451,451,"AEP",.1,0)
^^2^2^3120120^
"IX",451,451,"AEP",.1,1,0)
This is an index of all nurse POC records by pay period that have a pay
"IX",451,451,"AEP",.1,2,0)
period status of Entered and that need to be approved.
"IX",451,451,"AEP",1)
S ^PRSN(451,"AEP",DA(1),DA)=""
"IX",451,451,"AEP",1.4)
S X=X(1)="E"
"IX",451,451,"AEP",2)
K ^PRSN(451,"AEP",DA(1),DA)
"IX",451,451,"AEP",2.5)
K ^PRSN(451,"AEP")
"IX",451,451,"AEP",11.1,0)
^.114IA^1^1
"IX",451,451,"AEP",11.1,1,0)
1^F^451.09^1^^1^F
"IX",451,451,"AEP",11.1,1,3)

"IX",451,451,"ALN",0)
451^ALN^Location,Nurse,Pay Period,Day,Version,Time Segment^MU^^R^IR^W^451.9999^^^^^S
"IX",451,451,"ALN",1)
S ^PRSN(451,"ALN",X,DA(3),DA(4),DA(2),DA(1),DA)=""
"IX",451,451,"ALN",2)
K ^PRSN(451,"ALN",X,DA(3),DA(4),DA(2),DA(1),DA)
"IX",451,451,"ALN",2.5)
K ^PRSN(451,"ALN")
"IX",451,451,"ALN",11.1,0)
^.114IA^1^1
"IX",451,451,"ALN",11.1,1,0)
1^F^451.9999^4^^1^F
"IX",451,451,"ALN",11.1,1,3)

"IX",451,451,"AR",0)
451^AR^ALL RELEASED POC RECORDS^MU^^R^IR^W^451.09^^^^^S
"IX",451,451,"AR",.1,0)
^^1^1^3091029^
"IX",451,451,"AR",.1,1,0)
This index contains only POC records with a pay period status of released.
"IX",451,451,"AR",1)
S ^PRSN(451,"AR",X(2),DA(1),DA)=""
"IX",451,451,"AR",1.4)
S X=X(1)="R"
"IX",451,451,"AR",2)
K ^PRSN(451,"AR",X(2),DA(1),DA)
"IX",451,451,"AR",2.5)
K ^PRSN(451,"AR")
"IX",451,451,"AR",11.1,0)
^.114IA^2^2
"IX",451,451,"AR",11.1,1,0)
1^F^451.09^1^^1^F
"IX",451,451,"AR",11.1,1,3)

"IX",451,451,"AR",11.1,2,0)
2^F^451.09^4^^2^F
"IX",451,451,"AR",11.1,2,3)

"IX",451,451,"CS",0)
451^CS^Index of correction status of day # multiple of va nurse.^R^^F^IR^W^451.99^^^^^LS
"IX",451,451,"CS",.1,0)
^^1^1^3090608^
"IX",451,451,"CS",.1,1,0)
This index is used to approve and release all POC corrected data records.
"IX",451,451,"CS",1)
S ^PRSN(451,"CS",$E(X,1,5),DA(2),DA(1),DA)=""
"IX",451,451,"CS",1.4)
S X=",E,A,"[(","_X_",")
"IX",451,451,"CS",2)
K ^PRSN(451,"CS",$E(X,1,5),DA(2),DA(1),DA)
"IX",451,451,"CS",2.4)

"IX",451,451,"CS",2.5)
K ^PRSN(451,"CS")
"IX",451,451,"CS",11.1,0)
^.114IA^1^1
"IX",451,451,"CS",11.1,1,0)
1^F^451.99^1^5^1^F
"IX",451,451,"CS",11.1,1,3)

"IX",451,451.09,"AC",0)
451.09^AC^index allows sorting nurses by division for each pay period^R^^F^IR^I^451.09^^^^^S
"IX",451,451.09,"AC",.1,0)
^^3^3^3090826^
"IX",451,451.09,"AC",.1,1,0)
index will provide the ability to sort nurses by division within each pay 
"IX",451,451.09,"AC",.1,2,0)
period and make it possible to quickly find all nurses in a particular 
"IX",451,451.09,"AC",.1,3,0)
division.
"IX",451,451.09,"AC",1)
S ^PRSN(451,DA(1),"E","AC",X,DA)=""
"IX",451,451.09,"AC",2)
K ^PRSN(451,DA(1),"E","AC",X,DA)
"IX",451,451.09,"AC",2.5)
K ^PRSN(451,DA(1),"E","AC")
"IX",451,451.09,"AC",11.1,0)
^.114IA^1^1
"IX",451,451.09,"AC",11.1,1,0)
1^F^451.09^4^^1^F
"IX",451,451.09,"AC",11.1,1,3)

"IX",451.4,451.4,"C",0)
451.4^C^Index of ETA Type of Time Code for Lookup and Sorting^R^^F^IR^W^451.49^^^^^LS
"IX",451.4,451.4,"C",1)
S ^PRSN(451.4,"C",$E(X(1),1,30),$E(X(2),1,2),DA(1),DA)=""
"IX",451.4,451.4,"C",2)
K ^PRSN(451.4,"C",$E(X(1),1,30),$E(X(2),1,2),DA(1),DA)
"IX",451.4,451.4,"C",2.5)
K ^PRSN(451.4,"C")
"IX",451.4,451.4,"C",11.1,0)
^.114IA^2^2
"IX",451.4,451.4,"C",11.1,1,0)
1^F^451.49^1^30^1^F^
"IX",451.4,451.4,"C",11.1,1,3)

"IX",451.4,451.4,"C",11.1,2,0)
2^C^^^2^2^F
"IX",451.4,451.4,"C",11.1,2,1.5)
S X=$P(^PRSN(451.4,DA(1),0),U)
"IX",451.4,451.4,"C",11.1,2,3)

"IX",455.5,455.5,"AE",0)
455.5^AE^POC Data Entry Personnel^R^^F^IR^W^455.52^^^^^S
"IX",455.5,455.5,"AE",.1,0)
^^2^2^3090710^
"IX",455.5,455.5,"AE",.1,1,0)
This is a whole file index to sort POC DATA ENTRY PERSONNEL by the T&L
"IX",455.5,455.5,"AE",.1,2,0)
Units for which they are responsible.
"IX",455.5,455.5,"AE",1)
S ^PRST(455.5,"AE",X,DA(1),DA)=""
"IX",455.5,455.5,"AE",2)
K ^PRST(455.5,"AE",X,DA(1),DA)
"IX",455.5,455.5,"AE",2.5)
K ^PRST(455.5,"AE")
"IX",455.5,455.5,"AE",11.1,0)
^.114IA^1^1
"IX",455.5,455.5,"AE",11.1,1,0)
1^F^455.52^.01^^1^F
"IX",455.5,455.5,"AR",0)
455.5^AR^POC Data Approval Personnel^R^^F^IR^W^455.531^^^^^S
"IX",455.5,455.5,"AR",.1,0)
^^2^2^3090710^
"IX",455.5,455.5,"AR",.1,1,0)
This is a whole file index to sort POC DATA APPROVAL PERSONNEL by the T&L
"IX",455.5,455.5,"AR",.1,2,0)
Units for which they are responsible.
"IX",455.5,455.5,"AR",1)
S ^PRST(455.5,"AR",X,DA(1),DA)=""
"IX",455.5,455.5,"AR",2)
K ^PRST(455.5,"AR",X,DA(1),DA)
"IX",455.5,455.5,"AR",2.5)
K ^PRST(455.5,"AR")
"IX",455.5,455.5,"AR",11.1,0)
^.114IA^1^1
"IX",455.5,455.5,"AR",11.1,1,0)
1^F^455.531^.01^^1^F
"IX",456,456.05,"C",0)
456.05^C^Index provides a quick lookup of the access parameter for a given pay period^R^^R^IR^I^456.05^^^^^LS
"IX",456,456.05,"C",.1,0)
^^3^3^3090805^
"IX",456,456.05,"C",.1,1,0)
This index provides a lookup to determine what the access parameter was 
"IX",456,456.05,"C",.1,2,0)
set to for a given pay period.  Using reverse $Order from the pay period 
"IX",456,456.05,"C",.1,3,0)
of concern one can find the parameter setting that is in effect.
"IX",456,456.05,"C",1)
S ^PRST(456,DA(1),1,"C",$E(X(1),1,30),$E(X(2),1,1),DA)=""
"IX",456,456.05,"C",2)
K ^PRST(456,DA(1),1,"C",$E(X(1),1,30),$E(X(2),1,1),DA)
"IX",456,456.05,"C",2.5)
K ^PRST(456,DA(1),1,"C")
"IX",456,456.05,"C",11.1,0)
^.114IA^2^2
"IX",456,456.05,"C",11.1,1,0)
1^F^456.05^.01^30^1^F
"IX",456,456.05,"C",11.1,1,3)

"IX",456,456.05,"C",11.1,2,0)
2^F^456.05^1^1^2^F
"IX",456,456.05,"C",11.1,2,3)

"KRN",.4,2845,-1)
0^1
"KRN",.4,2845,0)
PRSN POC DIVISION PARAMS^3090820.1036^@^456^^@^3091211
"KRN",.4,2845,"DXS",1,9.2)
S I(0,0)=$G(D0),DIP(1)=$S($D(^PRST(456,D0,0)):^(0),1:""),D0=$P(DIP(1),U,1) S:'D0!'$D(^DIC(4,+D0,0)) D0=-1 S DIP(101)=$S($D(^DIC(4,D0,99)):^(99),1:"")
"KRN",.4,2845,"F",2)
0~.01~X DXS(1,9.2) S X=$P(DIP(101),U,1) S D0=I(0,0) W X K DIP;Z;"INSTITUTION:STATION"~5,.01~5,1~
"KRN",.4,2845,"H")
PAID PARAMETERS LIST
"KRN",.403,20,-1)
0^4
"KRN",.403,20,0)
PRSA TL EDIT^^^^2920207^^^455.5^0^0^1
"KRN",.403,20,40,0)
^.4031I^4^4
"KRN",.403,20,40,1,0)
1^^1,1^1^1^0
"KRN",.403,20,40,1,1)
Page 1
"KRN",.403,20,40,1,40,0)
^.4032PI^75^1
"KRN",.403,20,40,1,40,75,0)
PRSA TL DISP^1^1,1^e
"KRN",.403,20,40,2,0)
1.1^^11,10^^^1^15,70
"KRN",.403,20,40,2,1)
Subpage 1.1
"KRN",.403,20,40,2,40,0)
^.4032PI^76^1
"KRN",.403,20,40,2,40,76,0)
PRSA TL ED1^1^3,3^e
"KRN",.403,20,40,3,0)
1.2^^11,10^^^1^17,70
"KRN",.403,20,40,3,1)
Subpage 1.2
"KRN",.403,20,40,3,40,0)
^.4032PI^77^1
"KRN",.403,20,40,3,40,77,0)
PRSA TL ED2^1^3,3^e
"KRN",.403,20,40,4,0)
1.3^^13,10^^^1^17,70
"KRN",.403,20,40,4,1)
Subpage 1.3
"KRN",.403,20,40,4,40,0)
^.4032PI^88^1
"KRN",.403,20,40,4,40,88,0)
PRSA TL ED3^1^3,3^e
"KRN",.403,21,-1)
0^5
"KRN",.403,21,0)
PRSA TL DISP^^^^2920207^^^455.5^1^0^1
"KRN",.403,21,40,0)
^.4031I^1^1
"KRN",.403,21,40,1,0)
1^^1,1^^^0
"KRN",.403,21,40,1,1)
Page 1
"KRN",.403,21,40,1,40,0)
^.4032PI^75^1
"KRN",.403,21,40,1,40,75,0)
PRSA TL DISP^1^1,1^d
"KRN",.403,131,-1)
0^1
"KRN",.403,131,0)
PRSN DAILY TIME RECORDS A/E/D^@^@^^3090601.0925^^^451^0^0^1
"KRN",.403,131,12)

"KRN",.403,131,14)

"KRN",.403,131,15,0)
^^1^1^3091130^^^
"KRN",.403,131,15,1,0)
The Form is used to add/edit/delete POC data.
"KRN",.403,131,20)
D DATAVAL^PRSNEE0
"KRN",.403,131,40,0)
^.4031I^3^3
"KRN",.403,131,40,1,0)
1^^1,1
"KRN",.403,131,40,1,1)
Page 1
"KRN",.403,131,40,1,12)

"KRN",.403,131,40,1,40,0)
^.4032IP^489^2
"KRN",.403,131,40,1,40,488,0)
TIME SEGMENT^2^8,1^e
"KRN",.403,131,40,1,40,488,2)
10^AC^f^^^
"KRN",.403,131,40,1,40,488,11)

"KRN",.403,131,40,1,40,488,12)

"KRN",.403,131,40,1,40,489,0)
HEADER OPTION, PP & DATE ^1^1,1^e
"KRN",.403,131,40,1,40,489,11)

"KRN",.403,131,40,2,0)
1.1^^2,8^^^1^17,71
"KRN",.403,131,40,2,1)
Page 1.1^
"KRN",.403,131,40,2,11)

"KRN",.403,131,40,2,12)

"KRN",.403,131,40,2,15,0)
^^2^2^3091209^
"KRN",.403,131,40,2,15,1,0)
If the type of time is OT/CT/RG then this pop-out page will be invoked
"KRN",.403,131,40,2,15,2,0)
enter the Voluntary/Mandatory and the reason of OT/CT/RG.
"KRN",.403,131,40,2,40,0)
^.4032IP^500^2
"KRN",.403,131,40,2,40,492,0)
POC Type of Time^1^2,2^e
"KRN",.403,131,40,2,40,492,12)
S DDSBR=$S($$GET^DDSVAL(DIE,.DA,6)="":2,$$GET^DDSVAL(DIE,.DA,7)="":3,1:"")
"KRN",.403,131,40,2,40,500,0)
POC OT REASONS^2^6,2^e
"KRN",.403,131,40,3,0)
1.5^^8,21^^^1^15,75
"KRN",.403,131,40,3,1)
Page 1.5
"KRN",.403,131,40,3,15,0)
^^3^3^3091019^^
"KRN",.403,131,40,3,15,1,0)
If the primary tour or the secondary is a 2-day tour and the time segment 
"KRN",.403,131,40,3,15,2,0)
does not contain the mid-night then this pop-out page will be invoked for
"KRN",.403,131,40,3,15,3,0)
entering the day # of the start time.
"KRN",.403,131,40,3,40,0)
^.4032IP^494^1
"KRN",.403,131,40,3,40,494,0)
POC START TIME DAY #^1^2,2^e
"KRN",.403,132,-1)
0^2
"KRN",.403,132,0)
PRSN EDIT PAID PARAMETERS^@^@^^3090623.111^^^456^0^0^1
"KRN",.403,132,40,0)
^.4031I^2^2
"KRN",.403,132,40,1,0)
1^^1,1
"KRN",.403,132,40,1,1)
Page 1
"KRN",.403,132,40,1,40,0)
^.4032IP^491^2
"KRN",.403,132,40,1,40,490,0)
PRSN PAID PARAM HDR^1^1,1^d
"KRN",.403,132,40,1,40,491,0)
PRSN PAID PARAM EDIT^2^5,1^e
"KRN",.403,132,40,2,0)
1.1^^10,1^^^1^14,75
"KRN",.403,132,40,2,1)
Page 1.1^ACCESS TO NURSES FOR POC DATA,PRSN PAID PARAM EDIT,Page 1
"KRN",.403,132,40,2,15,0)
^^2^2^3090729^
"KRN",.403,132,40,2,15,1,0)
This pop up page is used to enter the EFFECTIVE PAY PERIOD (#1) for the 
"KRN",.403,132,40,2,15,2,0)
associated update to the ACCESS TO NURSES FOR POC DATA field (#.01).
"KRN",.403,132,40,2,40,0)
^.4032IP^493^1
"KRN",.403,132,40,2,40,493,0)
PRSN PAID PAY PD EDIT^1^1,1^e
"KRN",.403,133,-1)
0^3
"KRN",.403,133,0)
PRSN EDIT TL POC^@^@^^3091124.083^^^455.5^0^0^1
"KRN",.403,133,40,0)
^.4031I^1^1
"KRN",.403,133,40,1,0)
1^^1,1
"KRN",.403,133,40,1,1)
Page 1
"KRN",.403,133,40,1,40,0)
^.4032IP^495^1
"KRN",.403,133,40,1,40,495,0)
PRSN TL EDIT^1^1,1^e
"KRN",.404,75,0)
PRSA TL DISP^455.5^0
"KRN",.404,75,40,0)
^.4044I^13^13
"KRN",.404,75,40,1,0)
1^VA TIME & ATTENDANCE SYSTEM^1^
"KRN",.404,75,40,1,2)
^^2,27^
"KRN",.404,75,40,2,0)
2^TIME & LEAVE UNIT^1^
"KRN",.404,75,40,2,2)
^^3,32^
"KRN",.404,75,40,3,0)
3^CODE^3
"KRN",.404,75,40,3,1)
.01
"KRN",.404,75,40,3,2)
5,13^3^5,1
"KRN",.404,75,40,4,0)
4^NAME^3
"KRN",.404,75,40,4,1)
1
"KRN",.404,75,40,4,2)
6,13^20^6,1
"KRN",.404,75,40,5,0)
5^STATION #^3
"KRN",.404,75,40,5,1)
20
"KRN",.404,75,40,5,2)
7,13^3^7,1^1
"KRN",.404,75,40,5,3)
!M
"KRN",.404,75,40,5,3.1)
S Y=$G(^DD("SITE",1))
"KRN",.404,75,40,6,0)
6^SERVICE^3
"KRN",.404,75,40,6,1)
21
"KRN",.404,75,40,6,2)
8,13^30^8,1
"KRN",.404,75,40,7,0)
7^SECTION^3
"KRN",.404,75,40,7,1)
22
"KRN",.404,75,40,7,2)
8,59^20^8,50
"KRN",.404,75,40,8,0)
9^Select TIMEKEEPER^3
"KRN",.404,75,40,8,1)
10
"KRN",.404,75,40,8,2)
13,24^30^13,1
"KRN",.404,75,40,8,7)
^1.1
"KRN",.404,75,40,9,0)
10^Select SUPERVISOR^3
"KRN",.404,75,40,9,1)
11
"KRN",.404,75,40,9,2)
15,24^30^15,1
"KRN",.404,75,40,9,7)
^1.2
"KRN",.404,75,40,10,0)
11^Select OT/CT APPROVER^3
"KRN",.404,75,40,10,1)
12
"KRN",.404,75,40,10,2)
17,24^30^17,1
"KRN",.404,75,40,10,7)
^1.3
"KRN",.404,75,40,11,0)
8^Entitled Sat/Sun Premiums?^3
"KRN",.404,75,40,11,1)
23
"KRN",.404,75,40,11,2)
11,28^3^11,1^1
"KRN",.404,75,40,12,0)
7.5^Time SleepTime Begins^3
"KRN",.404,75,40,12,1)
24
"KRN",.404,75,40,12,2)
10,28^6^10,1
"KRN",.404,75,40,13,0)
12^DIVISION^3
"KRN",.404,75,40,13,1)
20.5
"KRN",.404,75,40,13,2)
7,59^30^7,49
"KRN",.404,76,0)
PRSA TL ED1^455.51
"KRN",.404,76,40,0)
^.4044I^1^1
"KRN",.404,76,40,1,0)
1^Timekeeper^3
"KRN",.404,76,40,1,1)
.01
"KRN",.404,76,40,1,2)
1,13^30^1,1
"KRN",.404,77,0)
PRSA TL ED2^455.511
"KRN",.404,77,40,0)
^.4044I^2^2
"KRN",.404,77,40,1,0)
1^Supervisor^3
"KRN",.404,77,40,1,1)
.01
"KRN",.404,77,40,1,2)
1,13^30^1,1
"KRN",.404,77,40,2,0)
2^T&L which Certifies Supervisor^3
"KRN",.404,77,40,2,1)
1
"KRN",.404,77,40,2,2)
3,33^3^3,1
"KRN",.404,77,40,2,4)
1
"KRN",.404,88,0)
PRSA TL ED3^455.512
"KRN",.404,88,40,0)
^.4044I^1^1
"KRN",.404,88,40,1,0)
1^OT/CT Approver^3
"KRN",.404,88,40,1,1)
.01
"KRN",.404,88,40,1,2)
1,17^30^1,1
"KRN",.404,488,0)
TIME SEGMENT^451.9999
"KRN",.404,488,11)
S:$O(PRSNPC(""))]"" DDSCHG=1
"KRN",.404,488,12)

"KRN",.404,488,40,0)
^.4044I^10^8
"KRN",.404,488,40,1,0)
1^^3
"KRN",.404,488,40,1,1)
.01
"KRN",.404,488,40,1,2)
1,2^6
"KRN",.404,488,40,1,4)
1^^^0
"KRN",.404,488,40,1,10)
S Y=$$MILSS^PRSNEE0(X,$$GET^DDSVAL(DIE,.DA,1),1) S:$P(Y,U,2)<2401&PRSNTM&($P(Y,U,2)'="") DDSSTACK=1.5
"KRN",.404,488,40,1,12)
S Z=$$GET^DDSVAL(DIE,.DA,8),Y=$$GET^DDSVAL(DIE,.DA,9) D HLP^DDSUTL("Military Time "_Z_" - "_Y)
"KRN",.404,488,40,1,13)
S Z=$$GET^DDSVAL(DIE,.DA,1),Y=$$MILSS^PRSNEE0(X,Z,1) D PUT^DDSVAL(DIE,.DA,8,$P(Y,U)),PUT^DDSVAL(DIE,.DA,9,$P(Y,U,2)),HLP^DDSUTL("Military Time "_$P(Y,U)_" - "_$P(Y,U,2))
"KRN",.404,488,40,1,14)
S Y=$$MILSS^PRSNEE0(X,$$GET^DDSVAL(DIE,.DA,1),1) I Y'<$P(Y,U,2) S DDSERROR=1 D HLP^DDSUTL("Stop time must be greater than start time")
"KRN",.404,488,40,2,0)
2^^3
"KRN",.404,488,40,2,1)
1
"KRN",.404,488,40,2,2)
1,10^6
"KRN",.404,488,40,2,4)
1
"KRN",.404,488,40,2,10)
S Y=$$MILSS^PRSNEE0($$GET^DDSVAL(DIE,.DA,.01),X,1) S:$P(Y,U,2)<2401&PRSNTM&($P(Y,U,2)'="") DDSSTACK=1.5
"KRN",.404,488,40,2,12)
S Z=$$GET^DDSVAL(DIE,.DA,8),Y=$$GET^DDSVAL(DIE,.DA,9) D HLP^DDSUTL("Military Time "_Z_" - "_Y)
"KRN",.404,488,40,2,13)
S Z=$$GET^DDSVAL(DIE,.DA,.01),Y=$$MILSS^PRSNEE0(Z,X,1) D PUT^DDSVAL(DIE,.DA,8,$P(Y,U)),PUT^DDSVAL(DIE,.DA,9,$P(Y,U,2)),HLP^DDSUTL("Military Time "_$P(Y,U)_" - "_$P(Y,U,2))
"KRN",.404,488,40,2,14)
S Y=$$MILSS^PRSNEE0($$GET^DDSVAL(DIE,.DA,.01),X,1) I Y'<$P(Y,U,2) S DDSERROR=1 D HLP^DDSUTL("Stop time must be greater than start time")
"KRN",.404,488,40,3,0)
3^^3
"KRN",.404,488,40,3,1)
3
"KRN",.404,488,40,3,2)
1,18^2
"KRN",.404,488,40,3,4)
1
"KRN",.404,488,40,3,10)
I X]"",",OT,CT,RG,"[X S DDSSTACK=1.1
"KRN",.404,488,40,3,11)
I X]"" S A=$$GET^DDSVAL(DIE,.DA,2) I A S Y=$$GET^DDSVAL(DIE,.DA,8),Z=$$GET^DDSVAL(DIE,.DA,9) I Z\100*60+(Z#100)-(Y\100*60+(Y#100))<A,PRSNTM!(Z'>2400)!(",OT,CT,RG,"[X) D HLP^DDSUTL("Meal Time is over Start/Stop Time.") S DDSBR=8
"KRN",.404,488,40,3,12)
I $$GET^DDSVAL(DIE,.DA,9)>2400,'PRSNTM,",OT,CT,RG,"'[X D HLP^DDSUTL("For 1-Day Tour, Stop Time in the Second Day Tour must have Type of Time OT/CT/RG.") S DDSBR=3
"KRN",.404,488,40,3,13)
I ",OT,CT,RG,"'[X D PUT^DDSVAL(DIE,.DA,6,""),PUT^DDSVAL(DIE,.DA,7,"") D:",HW,TR,TV,WI,"'[X PUT^DDSVAL(DIE,.DA,5,"")
"KRN",.404,488,40,6,0)
6^^3
"KRN",.404,488,40,6,1)
4
"KRN",.404,488,40,6,2)
1,48^13
"KRN",.404,488,40,6,4)
1
"KRN",.404,488,40,6,11)
S A=$$GET^DDSVAL(DIE,.DA,2) I A S Y=$$GET^DDSVAL(DIE,.DA,8),Z=$$GET^DDSVAL(DIE,.DA,9) I Z\100*60+(Z#100)-(Y\100*60+(Y#100))<A D HLP^DDSUTL("Meal Time is over Start/Stop Time.") S DDSBR=8
"KRN",.404,488,40,7,0)
7^^3
"KRN",.404,488,40,7,1)
5
"KRN",.404,488,40,7,2)
1,63^2
"KRN",.404,488,40,7,11)
D WORKTYPH^PRSNEE S A=$$GET^DDSVAL(DIE,.DA,3) I ",WI,OT,CT,RG,HW,TR,TV,"'[A S DDSBR=8
"KRN",.404,488,40,8,0)
8^^3
"KRN",.404,488,40,8,1)
2
"KRN",.404,488,40,8,2)
1,78^2
"KRN",.404,488,40,8,11)
I $$GET^DDSVAL(DIE,.DA,8)'<$$GET^DDSVAL(DIE,.DA,9) D HLP^DDSUTL("Start/Stop time in wrong order") S DDSBR=2
"KRN",.404,488,40,8,12)
S Y=$$GET^DDSVAL(DIE,.DA,9),Z=$$GET^DDSVAL(DIE,.DA,8) I Y\100*60+(Y#100)-(Z\100*60+(Z#100))<X D HLP^DDSUTL("Meal Time is over Start/Stop Time.") S DDSBR=8
"KRN",.404,488,40,8,13)
S Y=$$GET^DDSVAL(DIE,.DA,9),Z=$$GET^DDSVAL(DIE,.DA,8) D HLP^DDSUTL("This is the military time for Start/Stop Time "_Z_"-"_Y)
"KRN",.404,488,40,9,0)
4^^4
"KRN",.404,488,40,9,2)
1,20^26
"KRN",.404,488,40,9,30)
S Y={TYPE OF TIME:457.3:1}_"~"_{MANDATORY INDICATOR;I}_"~"_{REASON FOR OT/CT/RG:1} S:$P(Y,"~",2,3)="~" Y=$P(Y,"~") I Y'?.P S Y="-"_$TR(Y,"~","/")
"KRN",.404,488,40,10,0)
7.5^^4
"KRN",.404,488,40,10,2)
1,65^11
"KRN",.404,488,40,10,30)
S Y={TYPE OF WORK:WORK DESCRIPTION} I Y]"" S Y="-"_Y
"KRN",.404,489,0)
HEADER OPTION, PP & DATE ^451.999^
"KRN",.404,489,40,0)
^.4044I^20^18
"KRN",.404,489,40,1,0)
1^Option - ^1
"KRN",.404,489,40,1,2)
^^1,1
"KRN",.404,489,40,3,0)
3^Default Location= ^1
"KRN",.404,489,40,3,2)
^^4,1
"KRN",.404,489,40,4,0)
4^Tour=^1
"KRN",.404,489,40,4,2)
^^5,1
"KRN",.404,489,40,5,0)
5^ Start   Stop    Type of Time/OT-Mand?/Reason  Work Location  Work Type    Meal^1
"KRN",.404,489,40,5,2)
^^7,1
"KRN",.404,489,40,7,0)
2.2^SS#= ^1
"KRN",.404,489,40,7,2)
^^3,33
"KRN",.404,489,40,8,0)
2.5^T&L= ^1
"KRN",.404,489,40,8,2)
^^3,51
"KRN",.404,489,40,9,0)
4.5^POC Record Status= ^1
"KRN",.404,489,40,9,2)
^^4,51
"KRN",.404,489,40,10,0)
1.5^^4
"KRN",.404,489,40,10,2)
1,10^30
"KRN",.404,489,40,10,30)
S Y=$P($G(XQY0),U,2)
"KRN",.404,489,40,11,0)
1.7^For POC Date= ^1
"KRN",.404,489,40,11,2)
^^1,41
"KRN",.404,489,40,12,0)
1.8^^4
"KRN",.404,489,40,12,2)
1,55^25
"KRN",.404,489,40,12,30)
S Y=$P($G(PRSNPP),U,2)_" of PP "_$P($G(PRSNPP),U)
"KRN",.404,489,40,13,0)
2^^4
"KRN",.404,489,40,13,2)
3,1^30
"KRN",.404,489,40,13,30)
S Y=$P($G(PRSNID),U)
"KRN",.404,489,40,14,0)
2.3^^4
"KRN",.404,489,40,14,2)
3,38^11
"KRN",.404,489,40,14,30)
S Y=$P($G(PRSNID),U,4),Y=$E(Y)_"XX-XX-"_$E(Y,6,9)
"KRN",.404,489,40,15,0)
2.6^^4
"KRN",.404,489,40,15,2)
3,56^6
"KRN",.404,489,40,15,30)
S Y=$P($G(PRSNID),U,3)
"KRN",.404,489,40,16,0)
3.1^^4
"KRN",.404,489,40,16,2)
4,19^30
"KRN",.404,489,40,16,30)
S Y=$P($G(PRSNID),U,5)
"KRN",.404,489,40,17,0)
4.6^^4
"KRN",.404,489,40,17,2)
4,70^9
"KRN",.404,489,40,17,30)
S Y=$P($G(PRSNID),U,6)
"KRN",.404,489,40,18,0)
2.7^Station= ^1
"KRN",.404,489,40,18,2)
^^3,65
"KRN",.404,489,40,19,0)
2.8^^4
"KRN",.404,489,40,19,2)
3,74^6
"KRN",.404,489,40,19,30)
S Y=$P($G(PRSNID),U,2)
"KRN",.404,489,40,20,0)
4.1^^4
"KRN",.404,489,40,20,2)
5,7^72
"KRN",.404,489,40,20,30)
S Y=$G(PRSNTD)
"KRN",.404,490,0)
PRSN PAID PARAM HDR^456^
"KRN",.404,490,40,0)
^.4044I^2^2
"KRN",.404,490,40,1,0)
1^VA TIME & ATTENDANCE SYSTEM^1
"KRN",.404,490,40,1,2)
^^1,26
"KRN",.404,490,40,2,0)
2^PAID PARAMETERS SET-UP^1
"KRN",.404,490,40,2,2)
^^2,28
"KRN",.404,491,0)
PRSN PAID PARAM EDIT^456
"KRN",.404,491,40,0)
^.4044I^1^1
"KRN",.404,491,40,1,0)
1^INSTITUTION^3
"KRN",.404,491,40,1,1)
.01
"KRN",.404,491,40,1,2)
2,14^30^2,1
"KRN",.404,491,40,1,4)
1
"KRN",.404,492,0)
POC Type of Time^451.9999
"KRN",.404,492,40,0)
^.4044I^3^3
"KRN",.404,492,40,1,0)
1^TYPE OF TIME= ^3
"KRN",.404,492,40,1,1)
3
"KRN",.404,492,40,1,2)
1,17^30^1,1^1
"KRN",.404,492,40,1,4)
1^^^1
"KRN",.404,492,40,2,0)
2^MANDATORY INDICATOR^3
"KRN",.404,492,40,2,1)
6
"KRN",.404,492,40,2,2)
3,22^9^3,1
"KRN",.404,492,40,2,4)
1
"KRN",.404,492,40,2,10)
I X="" D HLP^DDSUTL("Mandatory Indicator is required") S DDSBR=2
"KRN",.404,492,40,3,0)
3^REASON FOR OT/CT/RG^3
"KRN",.404,492,40,3,1)
7
"KRN",.404,492,40,3,2)
4,22^30^4,1
"KRN",.404,492,40,3,4)
1
"KRN",.404,492,40,3,10)
I X="" D HLP^DDSUTL("Reason for OT/CT/RG is required") S DDSBR=3
"KRN",.404,493,0)
PRSN PAID PAY PD EDIT^456.05
"KRN",.404,493,40,0)
^.4044I^^0
"KRN",.404,494,0)
POC START TIME DAY #^451.9999
"KRN",.404,494,15,0)
^^1^1^3111215^
"KRN",.404,494,15,1,0)
The block is used to enter the start time day #.
"KRN",.404,494,40,0)
^.4044I^3^3
"KRN",.404,494,40,1,0)
1^START TIME=^3
"KRN",.404,494,40,1,1)
.01
"KRN",.404,494,40,1,2)
1,14^10^1,1^1
"KRN",.404,494,40,1,4)
1^^^1
"KRN",.404,494,40,2,0)
2^STOP TIME=^3
"KRN",.404,494,40,2,1)
1
"KRN",.404,494,40,2,2)
2,13^10^2,1^1
"KRN",.404,494,40,2,4)
1^^^1
"KRN",.404,494,40,3,0)
3^Tour Start Time on Day #^2
"KRN",.404,494,40,3,2)
4,27^1^4,1
"KRN",.404,494,40,3,3)
!M
"KRN",.404,494,40,3,3.1)
S Y=$$GET^DDSVAL(DIE,.DA,8),Y=$S(Y="":"",Y>2400:2,1:1)
"KRN",.404,494,40,3,4)
1
"KRN",.404,494,40,3,12)
S Y=$$MILSS^PRSNEE0($$GET^DDSVAL(DIE,.DA,.01),$$GET^DDSVAL(DIE,.DA,1),X) D PUT^DDSVAL(DIE,.DA,8,$P(Y,U)),PUT^DDSVAL(DIE,.DA,9,$P(Y,U,2))
"KRN",.404,494,40,3,20)
N
"KRN",.404,494,40,3,21,0)
^^2^2^3111215^
"KRN",.404,494,40,3,21,1,0)
Enter 1 if the tour start time of this session begins in Day 1.
"KRN",.404,494,40,3,21,2,0)
      2 if the tour start time of this session begins in Day 2.
"KRN",.404,494,40,3,22)
K:X'=1&(X'=2) X
"KRN",.404,495,0)
PRSN TL EDIT^455.5
"KRN",.404,495,15,0)
^^2^2^3091124^
"KRN",.404,495,15,1,0)
This form is used to enter and edit POC Entry and Approval personnel for 
"KRN",.404,495,15,2,0)
a T&L Unit.
"KRN",.404,495,40,0)
^.4044I^11^11
"KRN",.404,495,40,1,0)
1^VA TIME & ATTENDANCE SYSTEM^1
"KRN",.404,495,40,1,2)
^^2,28
"KRN",.404,495,40,2,0)
2^EDIT POC ENTRY & APPROVAL PERSONNEL^1
"KRN",.404,495,40,2,2)
^^3,24
"KRN",.404,495,40,3,0)
3^T&L UNIT^1
"KRN",.404,495,40,3,2)
^^4,36
"KRN",.404,495,40,4,0)
4^CODE=^3
"KRN",.404,495,40,4,1)
.01
"KRN",.404,495,40,4,2)
6,7^3^6,1^1
"KRN",.404,495,40,4,4)
1^^^1
"KRN",.404,495,40,5,0)
5^NAME=^3
"KRN",.404,495,40,5,1)
1
"KRN",.404,495,40,5,2)
7,7^20^7,1^1
"KRN",.404,495,40,5,4)
0^^^1
"KRN",.404,495,40,6,0)
6^STATION #=^3
"KRN",.404,495,40,6,1)
20
"KRN",.404,495,40,6,2)
8,12^3^8,1^1
"KRN",.404,495,40,6,3)
!M
"KRN",.404,495,40,6,3.1)
S Y=$G(^DD("SITE",1))
"KRN",.404,495,40,6,4)
1^^^1
"KRN",.404,495,40,7,0)
7^SERVICE=^3
"KRN",.404,495,40,7,1)
21
"KRN",.404,495,40,7,2)
9,10^30^9,1^1
"KRN",.404,495,40,7,4)
0^^^1
"KRN",.404,495,40,8,0)
8^DIVISION=^3
"KRN",.404,495,40,8,1)
20.5
"KRN",.404,495,40,8,2)
8,59^20^8,49^1
"KRN",.404,495,40,8,4)
0^^^1
"KRN",.404,495,40,9,0)
9^SECTION=^3
"KRN",.404,495,40,9,1)
22
"KRN",.404,495,40,9,2)
9,59^20^9,50^1
"KRN",.404,495,40,9,4)
0^^^1
"KRN",.404,495,40,10,0)
10^Select POC DATA ENTRY PERSONNEL^3
"KRN",.404,495,40,10,1)
30
"KRN",.404,495,40,10,2)
12,34^30^12,1
"KRN",.404,495,40,11,0)
11^Select POC DATA APPROVAL PERSONNEL^3
"KRN",.404,495,40,11,1)
31
"KRN",.404,495,40,11,2)
15,37^30^15,1
"KRN",.404,500,0)
POC OT REASONS^451.6
"KRN",.404,500,11)

"KRN",.404,500,40,0)
^.4044I^19^19
"KRN",.404,500,40,1,0)
1^^4
"KRN",.404,500,40,1,2)
2,1^30
"KRN",.404,500,40,1,30)
S REASCD="",REASTOP=0,Y=$$REASON^PRSNEE(.REASCD,.REASTOP)
"KRN",.404,500,40,2,0)
2^^4
"KRN",.404,500,40,2,2)
2,33^30
"KRN",.404,500,40,2,30)
S Y=$$REASON^PRSNEE(.REASCD,.REASTOP)
"KRN",.404,500,40,3,0)
3^^4
"KRN",.404,500,40,3,2)
3,1^30
"KRN",.404,500,40,3,30)
S Y=$$REASON^PRSNEE(.REASCD,.REASTOP)
"KRN",.404,500,40,4,0)
4^^4
"KRN",.404,500,40,4,2)
3,33^30
"KRN",.404,500,40,4,30)
S Y=$$REASON^PRSNEE(.REASCD,.REASTOP)
"KRN",.404,500,40,5,0)
5^^4
"KRN",.404,500,40,5,2)
4,1^30
"KRN",.404,500,40,5,30)
S Y=$$REASON^PRSNEE(.REASCD,.REASTOP)
"KRN",.404,500,40,6,0)
6^^4
"KRN",.404,500,40,6,2)
4,33^30
"KRN",.404,500,40,6,30)
S Y=$$REASON^PRSNEE(.REASCD,.REASTOP)
"KRN",.404,500,40,7,0)
7^^4
"KRN",.404,500,40,7,2)
5,1^30
"KRN",.404,500,40,7,30)
S Y=$$REASON^PRSNEE(.REASCD,.REASTOP)
"KRN",.404,500,40,8,0)
8^^4
"KRN",.404,500,40,8,2)
5,33^30
"KRN",.404,500,40,8,30)
S Y=$$REASON^PRSNEE(.REASCD,.REASTOP)
"KRN",.404,500,40,9,0)
9^^4
"KRN",.404,500,40,9,2)
6,1^30
"KRN",.404,500,40,9,30)
S Y=$$REASON^PRSNEE(.REASCD,.REASTOP)
"KRN",.404,500,40,10,0)
10^^4
"KRN",.404,500,40,10,2)
6,33^30
"KRN",.404,500,40,10,30)
S Y=$$REASON^PRSNEE(.REASCD,.REASTOP)
"KRN",.404,500,40,11,0)
11^^4
"KRN",.404,500,40,11,2)
7,1^30
"KRN",.404,500,40,11,30)
S Y=$$REASON^PRSNEE(.REASCD,.REASTOP)
"KRN",.404,500,40,12,0)
12^^4
"KRN",.404,500,40,12,2)
7,33^30
"KRN",.404,500,40,12,30)
S Y=$$REASON^PRSNEE(.REASCD,.REASTOP)
"KRN",.404,500,40,13,0)
13^^4
"KRN",.404,500,40,13,2)
8,1^30
"KRN",.404,500,40,13,30)
S Y=$$REASON^PRSNEE(.REASCD,.REASTOP)
"KRN",.404,500,40,14,0)
14^^4
"KRN",.404,500,40,14,2)
8,33^30
"KRN",.404,500,40,14,30)
S Y=$$REASON^PRSNEE(.REASCD,.REASTOP)
"KRN",.404,500,40,15,0)
15^^4
"KRN",.404,500,40,15,2)
9,1^30
"KRN",.404,500,40,15,30)
S Y=$$REASON^PRSNEE(.REASCD,.REASTOP)
"KRN",.404,500,40,16,0)
16^^4
"KRN",.404,500,40,16,2)
9,33^30
"KRN",.404,500,40,16,30)
S Y=$$REASON^PRSNEE(.REASCD,.REASTOP)
"KRN",.404,500,40,17,0)
17^^4
"KRN",.404,500,40,17,2)
10,1^30
"KRN",.404,500,40,17,30)
S Y=$$REASON^PRSNEE(.REASCD,.REASTOP)
"KRN",.404,500,40,18,0)
18^^4
"KRN",.404,500,40,18,2)
10,33^30
"KRN",.404,500,40,18,30)
S Y=$$REASON^PRSNEE(.REASCD,.REASTOP)
"KRN",.404,500,40,19,0)
19^---------Reason Codes---------  ---------Reason Codes---------^1
"KRN",.404,500,40,19,2)
^^1,1
"KRN",19,5860,-1)
2^41
"KRN",19,5860,0)
PRSA TK MENU^TimeKeeper Main Menu^^M^.5^^^^^^^^^1^
"KRN",19,5860,10,0)
^19.01IP^28^28
"KRN",19,5860,10,28,0)
13577^18
"KRN",19,5860,10,28,"^")
PRSN TOGGLE TK POC POST
"KRN",19,5860,"U")
TIMEKEEPER MAIN MENU
"KRN",19,6004,-1)
2^42
"KRN",19,6004,0)
PRSRFI-PAID SYSTEM REPORTS^Employee Reports^^M^100831^^^^^^^408
"KRN",19,6004,10,0)
^19.01IP^9^9
"KRN",19,6004,10,9,0)
13604^9
"KRN",19,6004,10,9,"^")
PRSNR NURSE POSITION AND PAY
"KRN",19,6004,"U")
EMPLOYEE REPORTS
"KRN",19,13573,-1)
0^17
"KRN",19,13573,0)
PRSN POC TYPE OF TIME^POC Type of Time^^E^^^^^^^^
"KRN",19,13573,1,0)
^19.06^1^1^3091216^^^^
"KRN",19,13573,1,1,0)
The option will Add/Edit the POC Type of Time dictionary.
"KRN",19,13573,30)
PRSN(451.4,
"KRN",19,13573,31)
AEQMZL
"KRN",19,13573,36)
B
"KRN",19,13573,50)
PRSN(451.4,
"KRN",19,13573,51)
.01;1:99
"KRN",19,13573,"U")
POC TYPE OF TIME
"KRN",19,13574,-1)
0^14
"KRN",19,13574,0)
PRSN POC APPLICATION PARAMETER^Edit POC Division Access Parameter^^R^^^^^^^^
"KRN",19,13574,1,0)
^^5^5^3091208^
"KRN",19,13574,1,1,0)
The option provides the VANOD site coordinator the ability to set the 
"KRN",19,13574,1,2,0)
access parameter for POC data to either T&L unit or Nursing 
"KRN",19,13574,1,3,0)
Location for each division.  This parameter will determine how data 
"KRN",19,13574,1,4,0)
entry personnel and data approval personnel access nurses for the 
"KRN",19,13574,1,5,0)
division.
"KRN",19,13574,25)
EN^PRSNCAPE
"KRN",19,13574,"U")
EDIT POC DIVISION ACCESS PARAM
"KRN",19,13575,-1)
0^8
"KRN",19,13575,0)
PRSN DATA ENTRY MENU^Nurse POC Data Entry Menu^^M^^^^^^^y^PAID
"KRN",19,13575,1,0)
^19.06^2^2^3091022^^^^
"KRN",19,13575,1,1,0)
This is the main menu for all the options that a Nurse Point of Care 
"KRN",19,13575,1,2,0)
(POC) Data Entry Personnel will need.
"KRN",19,13575,10,0)
^19.01IP^4^4
"KRN",19,13575,10,1,0)
13576^2^2
"KRN",19,13575,10,1,"^")
PRSN DEL POC RECORD
"KRN",19,13575,10,2,0)
13580^1^1
"KRN",19,13575,10,2,"^")
PRSN ENTER NURSE POC DATA
"KRN",19,13575,10,3,0)
13582^3
"KRN",19,13575,10,3,"^")
PRSN DEP REPORTS MENU
"KRN",19,13575,10,4,0)
13599^4
"KRN",19,13575,10,4,"^")
PRSN CORRECT RELEASED POC DATA
"KRN",19,13575,99)
62346,83287
"KRN",19,13575,"U")
NURSE POC DATA ENTRY MENU
"KRN",19,13576,-1)
0^9
"KRN",19,13576,0)
PRSN DEL POC RECORD^Delete Nurse POC Daily Time Record^^R^^^^^^^^
"KRN",19,13576,1,0)
^19.06^10^10^3091109^^
"KRN",19,13576,1,1,0)
This option allows data entry personnel to delete the following types of 
"KRN",19,13576,1,2,0)
records:
"KRN",19,13576,1,3,0)
 
"KRN",19,13576,1,4,0)
1. An entered Nurse POC Daily Time record that has never been approved or 
"KRN",19,13576,1,5,0)
released.
"KRN",19,13576,1,6,0)
2. A Nurse POC Daily Time record that is an unapproved correction to a 
"KRN",19,13576,1,7,0)
previously released record.
"KRN",19,13576,1,8,0)
 
"KRN",19,13576,1,9,0)
The system provides a message to the user as to the status of the
"KRN",19,13576,1,10,0)
deletion request.
"KRN",19,13576,25)
DELPOC^PRSNDPC1
"KRN",19,13576,"U")
DELETE NURSE POC DAILY TIME RE
"KRN",19,13577,-1)
0^22
"KRN",19,13577,0)
PRSN TOGGLE TK POC POST^Turn On/Off POC Data Entry from Timecard Posting^^R^^PRSN DEP^^^^^^
"KRN",19,13577,1,0)
^^7^7^3090724^
"KRN",19,13577,1,1,0)
This option is controlled by a security key-PRSN DEP.  When a 
"KRN",19,13577,1,2,0)
timekeeper is added to the POC DATA ENTRY PERSONNEL multiple in the T&L 
"KRN",19,13577,1,3,0)
unit file, then they will receive the SECURITY KEY that unlocks this menu 
"KRN",19,13577,1,4,0)
item from the TIMEKEEPER MAIN MENU.  The option will give them the 
"KRN",19,13577,1,5,0)
ability to TURN ON or TURN OFF the new functionality in the POST EMPLOYEE 
"KRN",19,13577,1,6,0)
time option, which takes a timekeeper directly to the POC Data Entry from 
"KRN",19,13577,1,7,0)
the POST EMPLOYEE TIME option.
"KRN",19,13577,25)
TOGGLE^PRSNEETP
"KRN",19,13577,"U")
TURN ON/OFF POC DATA ENTRY FRO
"KRN",19,13578,-1)
0^23
"KRN",19,13578,0)
PRSN VANOD EXTRACT^VANOD Kernel RPC^^B^^^^^^^^
"KRN",19,13578,1,0)
^^2^2^3090826^
"KRN",19,13578,1,1,0)
This option is required by the Kernel Broker to give access to the RPCs 
"KRN",19,13578,1,2,0)
used by the VA Nursing Outcomes Database (VANOD)
"KRN",19,13578,"RPC",0)
^19.05P^2^2
"KRN",19,13578,"RPC",1,0)
PRSN NURS LOCATION EXTRACTION
"KRN",19,13578,"RPC",2,0)
PRSN POC DAILY TIME EXTRACTION
"KRN",19,13578,"U")
VANOD KERNEL RPC
"KRN",19,13579,-1)
0^19
"KRN",19,13579,0)
PRSN SHOW POC SYSTEM SETUP^Show Nurse Count by Location and T&L Unit^^R^^^^^^^^
"KRN",19,13579,1,0)
^19.06^2^2^3100305^^^
"KRN",19,13579,1,1,0)
This option lists divisions and the locations in those divisions.  It 
"KRN",19,13579,1,2,0)
shows how many nurses from various T&Ls are assigned to those locations.
"KRN",19,13579,25)
SHOWSU^PRSNUT05
"KRN",19,13579,"U")
SHOW NURSE COUNT BY LOCATION A
"KRN",19,13580,-1)
0^11
"KRN",19,13580,0)
PRSN ENTER NURSE POC DATA^Enter Nurse POC Data^^R^^^^^^^^PAID
"KRN",19,13580,1,0)
^^2^2^3090923^
"KRN",19,13580,1,1,0)
This option is used to enter and edit nurse POC data for all of a 
"KRN",19,13580,1,2,0)
nurse's time and attendance activity.
"KRN",19,13580,25)
ENT^PRSNEE
"KRN",19,13580,"U")
ENTER NURSE POC DATA
"KRN",19,13581,-1)
0^26
"KRN",19,13581,0)
PRSNR ACTIVITY BY GROUP-DEP^Activity Report by Group^^R^^^^^^^^
"KRN",19,13581,1,0)
^19.06^3^3^3090930^^
"KRN",19,13581,1,1,0)
This report provides nursing point of care activity over a date range, by 
"KRN",19,13581,1,2,0)
location or T&L unit within a division.  The user can specify a detailed 
"KRN",19,13581,1,3,0)
or summary report.
"KRN",19,13581,25)
DEP^PRSNRAS0
"KRN",19,13581,"U")
ACTIVITY REPORT BY GROUP
"KRN",19,13582,-1)
0^10
"KRN",19,13582,0)
PRSN DEP REPORTS MENU^Reports^^M^^^^^^^^
"KRN",19,13582,1,0)
^19.06^2^2^3120123^^^^
"KRN",19,13582,1,1,0)
This menu contains all the reports available to the POC Data Entry 
"KRN",19,13582,1,2,0)
Personnel.
"KRN",19,13582,10,0)
^19.01IP^4^4
"KRN",19,13582,10,1,0)
13581^1
"KRN",19,13582,10,1,"^")
PRSNR ACTIVITY BY GROUP-DEP
"KRN",19,13582,10,2,0)
13584^2
"KRN",19,13582,10,2,"^")
PRSNR INDIVIDUAL ACTIVITY-DEP
"KRN",19,13582,10,3,0)
13596^3
"KRN",19,13582,10,3,"^")
PRSNR MISMATCHES ETA POC-DEP
"KRN",19,13582,10,4,0)
13664^4
"KRN",19,13582,10,4,"^")
PRSNR MISMATCHES BY T&L
"KRN",19,13582,99)
62479,36522
"KRN",19,13582,"U")
REPORTS
"KRN",19,13583,-1)
0^7
"KRN",19,13583,0)
PRSN DATA APPROVAL MENU^Nurse POC Data Approval Menu^^M^^^^^^^^
"KRN",19,13583,1,0)
^19.06^2^2^3091124^^^^
"KRN",19,13583,1,1,0)
This menu contains all the POC options and reports for the POC Data 
"KRN",19,13583,1,2,0)
Approval Personnel.
"KRN",19,13583,10,0)
^19.01IP^3^3
"KRN",19,13583,10,1,0)
13587^1^1
"KRN",19,13583,10,1,"^")
PRSN DAP REPORTS MENU
"KRN",19,13583,10,2,0)
13608^2^2
"KRN",19,13583,10,2,"^")
PRSN APPROV POC PAYPD
"KRN",19,13583,10,3,0)
13609^3^3
"KRN",19,13583,10,3,"^")
PRSN APPROV CORR POC
"KRN",19,13583,99)
62346,83287
"KRN",19,13583,"U")
NURSE POC DATA APPROVAL MENU
"KRN",19,13584,-1)
0^31
"KRN",19,13584,0)
PRSNR INDIVIDUAL ACTIVITY-DEP^Individual Activity Report^^R^^^^^^^^
"KRN",19,13584,1,0)
^^2^2^3090930^
"KRN",19,13584,1,1,0)
This report provides individual nursing point of care activity over a 
"KRN",19,13584,1,2,0)
date range, by location or T&L unit within a division.
"KRN",19,13584,25)
DEP^PRSNRIA
"KRN",19,13584,"U")
INDIVIDUAL ACTIVITY REPORT
"KRN",19,13585,-1)
0^25
"KRN",19,13585,0)
PRSNR ACTIVITY BY GROUP-DAP^Activity Report by Group^^R^^^^^^^^
"KRN",19,13585,1,0)
^19.06^3^3^3091029^^^
"KRN",19,13585,1,1,0)
This report provides nursing point of care activity over a date range, by
"KRN",19,13585,1,2,0)
location or T&L unit within a division.  The user can specify a detailed
"KRN",19,13585,1,3,0)
or summary report.
"KRN",19,13585,25)
DAP^PRSNRAS0
"KRN",19,13585,"U")
ACTIVITY REPORT BY GROUP
"KRN",19,13586,-1)
0^30
"KRN",19,13586,0)
PRSNR INDIVIDUAL ACTIVITY-DAP^Individual Activity Report^^R^^^^^^^^
"KRN",19,13586,1,0)
^19.06^2^2^3091007^^
"KRN",19,13586,1,1,0)
This report provides individual nursing point of care activity over a 
"KRN",19,13586,1,2,0)
date range, by location or T&L unit within a division.
"KRN",19,13586,25)
DAP^PRSNRIA
"KRN",19,13586,"U")
INDIVIDUAL ACTIVITY REPORT
"KRN",19,13587,-1)
0^6
"KRN",19,13587,0)
PRSN DAP REPORTS MENU^Reports^^M^^^^^^^^PAID
"KRN",19,13587,1,0)
^19.06^2^2^3120203^^^^
"KRN",19,13587,1,1,0)
This menu contains all the reports available to the POC Data Approval
"KRN",19,13587,1,2,0)
Personnel.
"KRN",19,13587,10,0)
^19.01IP^14^14
"KRN",19,13587,10,1,0)
13585^1
"KRN",19,13587,10,1,"^")
PRSNR ACTIVITY BY GROUP-DAP
"KRN",19,13587,10,2,0)
13586^2
"KRN",19,13587,10,2,"^")
PRSNR INDIVIDUAL ACTIVITY-DAP
"KRN",19,13587,10,3,0)
13595^3
"KRN",19,13587,10,3,"^")
PRSNR MISMATCHES ETA POC-DAP
"KRN",19,13587,10,4,0)
13600^4
"KRN",19,13587,10,4,"^")
PRSNR SKILL MIX GRP SUMM-DAP
"KRN",19,13587,10,5,0)
13606^5
"KRN",19,13587,10,5,"^")
PRSNR NONDIR CARE SUMM-DAP
"KRN",19,13587,10,6,0)
13627^6
"KRN",19,13587,10,6,"^")
PRSNR LOC OT DETAIL - DAP
"KRN",19,13587,10,7,0)
13629^7
"KRN",19,13587,10,7,"^")
PRSNR LOC OT SUM SKILL - DAP
"KRN",19,13587,10,8,0)
13625^8
"KRN",19,13587,10,8,"^")
PRSNR SUM DIR & NONDIR - DAP
"KRN",19,13587,10,9,0)
13598^9
"KRN",19,13587,10,9,"^")
PRSNR EDU VALIDATION-COORD
"KRN",19,13587,10,10,0)
13659^10
"KRN",19,13587,10,10,"^")
PRSNR NURLOC ACTIVITY - COORD
"KRN",19,13587,10,11,0)
13660^11
"KRN",19,13587,10,11,"^")
PRSNR NURLOC NONDIR - COORD
"KRN",19,13587,10,12,0)
13664^13
"KRN",19,13587,10,12,"^")
PRSNR MISMATCHES BY T&L
"KRN",19,13587,10,13,0)
13665^14
"KRN",19,13587,10,13,"^")
PRSNR UNAPPROVED POC TIME
"KRN",19,13587,10,14,0)
13666^12
"KRN",19,13587,10,14,"^")
PRSNR NURLOC OT - COORD
"KRN",19,13587,99)
62490,64277
"KRN",19,13587,"U")
REPORTS
"KRN",19,13588,-1)
0^4
"KRN",19,13588,0)
PRSN COORDINATOR REPORTS MENU^Reports^^M^^^^^^^^PAID^y
"KRN",19,13588,1,0)
^19.06^1^1^3120203^^^^
"KRN",19,13588,1,1,0)
This menu contains all the reports available to the POC Coordinator.
"KRN",19,13588,10,0)
^19.01IP^19^19
"KRN",19,13588,10,1,0)
13590^1
"KRN",19,13588,10,1,"^")
PRSNR ACTIVITY BY GROUP-COORD
"KRN",19,13588,10,2,0)
13591^2
"KRN",19,13588,10,2,"^")
PRSNR INDIV ACTIVITY-COORD
"KRN",19,13588,10,3,0)
13594^3
"KRN",19,13588,10,3,"^")
PRSNR MISMATCHES ETA POC-COORD
"KRN",19,13588,10,4,0)
13598^4
"KRN",19,13588,10,4,"^")
PRSNR EDU VALIDATION-COORD
"KRN",19,13588,10,7,0)
13605^6
"KRN",19,13588,10,7,"^")
PRSNR NONDIR CARE SUMM-COORD
"KRN",19,13588,10,8,0)
13624^7
"KRN",19,13588,10,8,"^")
PRSNR SUM DIR & NONDIR - COORD
"KRN",19,13588,10,9,0)
13601^8
"KRN",19,13588,10,9,"^")
PRSNR SKILL MIX GRP SUMM-COORD
"KRN",19,13588,10,10,0)
13604^5
"KRN",19,13588,10,10,"^")
PRSNR NURSE POSITION AND PAY
"KRN",19,13588,10,11,0)
13626^9
"KRN",19,13588,10,11,"^")
PRSNR LOC OT DETAIL - COORD
"KRN",19,13588,10,12,0)
13628^10
"KRN",19,13588,10,12,"^")
PRSNR LOC OT SUM SKILL - COORD
"KRN",19,13588,10,13,0)
13623^11
"KRN",19,13588,10,13,"^")
PRSNR GROUP DETAIL - COORD
"KRN",19,13588,10,14,0)
13622^12
"KRN",19,13588,10,14,"^")
PRSNR GROUP SUMMARY - COORD
"KRN",19,13588,10,15,0)
13659^13
"KRN",19,13588,10,15,"^")
PRSNR NURLOC ACTIVITY - COORD
"KRN",19,13588,10,16,0)
13660^14
"KRN",19,13588,10,16,"^")
PRSNR NURLOC NONDIR - COORD
"KRN",19,13588,10,17,0)
13664^16
"KRN",19,13588,10,17,"^")
PRSNR MISMATCHES BY T&L
"KRN",19,13588,10,18,0)
13665^17
"KRN",19,13588,10,18,"^")
PRSNR UNAPPROVED POC TIME
"KRN",19,13588,10,19,0)
13666^15
"KRN",19,13588,10,19,"^")
PRSNR NURLOC OT - COORD
"KRN",19,13588,99)
62490,64121
"KRN",19,13588,"U")
REPORTS
"KRN",19,13589,-1)
0^3
"KRN",19,13589,0)
PRSN COORDINATOR MENU^Nurse POC Coordinator Menu^^M^^^^^^^^
"KRN",19,13589,1,0)
^19.06^2^2^3111201^^^^
"KRN",19,13589,1,1,0)
This menu contains all the POC options and reports for the POC 
"KRN",19,13589,1,2,0)
Coordinator.
"KRN",19,13589,10,0)
^19.01IP^6^6
"KRN",19,13589,10,1,0)
13588^5^5
"KRN",19,13589,10,1,"^")
PRSN COORDINATOR REPORTS MENU
"KRN",19,13589,10,2,0)
13602^1^1
"KRN",19,13589,10,2,"^")
PRSN POC RELEASE
"KRN",19,13589,10,3,0)
13603^2^2
"KRN",19,13589,10,3,"^")
PRSN RET APPROVED POC RECORD
"KRN",19,13589,10,5,0)
13610^3^3
"KRN",19,13589,10,5,"^")
PRSN POC CORRECT RELEASE
"KRN",19,13589,10,6,0)
13611^4^4
"KRN",19,13589,10,6,"^")
PRSN SITE MAINTENANCE COORD
"KRN",19,13589,99)
62346,83287
"KRN",19,13589,99.1)
62481,37091
"KRN",19,13589,"U")
NURSE POC COORDINATOR MENU
"KRN",19,13590,-1)
0^24
"KRN",19,13590,0)
PRSNR ACTIVITY BY GROUP-COORD^Activity Report by Group^^R^^^^^^^^
"KRN",19,13590,1,0)
^19.06^3^3^3091119^^^
"KRN",19,13590,1,1,0)
This report provides nursing point of care activity over a date range, by 
"KRN",19,13590,1,2,0)
location or T&L unit within a division.  The user can specify a detailed 
"KRN",19,13590,1,3,0)
or summary report.
"KRN",19,13590,25)
COORD^PRSNRAS0
"KRN",19,13590,"U")
ACTIVITY REPORT BY GROUP
"KRN",19,13591,-1)
0^28
"KRN",19,13591,0)
PRSNR INDIV ACTIVITY-COORD^Individual Activity Report^^R^^^^^^^^
"KRN",19,13591,1,0)
^19.06^2^2^3091014^^
"KRN",19,13591,1,1,0)
This report provides individual nursing point of care activity over a 
"KRN",19,13591,1,2,0)
date range, by location or T&L unit within a division.
"KRN",19,13591,25)
COORD^PRSNRIA
"KRN",19,13591,"U")
INDIVIDUAL ACTIVITY REPORT
"KRN",19,13592,-1)
0^29
"KRN",19,13592,0)
PRSNR INDIV ACTIVITY-NURSE^Individual Activity Report^^R^^^^^^^^
"KRN",19,13592,1,0)
^^2^2^3091014^
"KRN",19,13592,1,1,0)
This report provides individual nursing point of care activity over a
"KRN",19,13592,1,2,0)
date range, by location or T&L unit within a division.
"KRN",19,13592,25)
NURSE^PRSNRIA
"KRN",19,13592,"U")
INDIVIDUAL ACTIVITY REPORT
"KRN",19,13593,-1)
0^12
"KRN",19,13593,0)
PRSN NURSE MENU^Nurse POC Staff Menu^^M^^^^^^^^
"KRN",19,13593,1,0)
^19.06^2^2^3100302^^^
"KRN",19,13593,1,1,0)
This menu contains all the POC options and reports for POC Nurse 
"KRN",19,13593,1,2,0)
Personnel.
"KRN",19,13593,10,0)
^19.01IP^2^2
"KRN",19,13593,10,1,0)
13592^1
"KRN",19,13593,10,1,"^")
PRSNR INDIV ACTIVITY-NURSE
"KRN",19,13593,10,2,0)
13597^2
"KRN",19,13593,10,2,"^")
PRSNR MISMATCHES ETA POC-NURSE
"KRN",19,13593,99)
62346,83287
"KRN",19,13593,"U")
NURSE POC STAFF MENU
"KRN",19,13594,-1)
0^32
"KRN",19,13594,0)
PRSNR MISMATCHES ETA POC-COORD^Mismatch Report-Point of Care vs. ETA Timecard^^R^^^^^^^^
"KRN",19,13594,1,0)
^^5^5^3100302^
"KRN",19,13594,1,1,0)
This option provides the site coordinator the ability to report any 
"KRN",19,13594,1,2,0)
mismatches between the ETA timecard and the Nurse's Point of Care (POC) 
"KRN",19,13594,1,3,0)
record.  Mismatches are reported when there is a discrepancy between 
"KRN",19,13594,1,4,0)
the two records for either the type of time or start and stop times for a 
"KRN",19,13594,1,5,0)
particular type of time.
"KRN",19,13594,25)
COORD^PRSNRMM1
"KRN",19,13594,"U")
MISMATCH REPORT-POINT OF CARE 
"KRN",19,13595,-1)
0^33
"KRN",19,13595,0)
PRSNR MISMATCHES ETA POC-DAP^Mismatch Report-Point of Care vs. ETA Timecard^^R^^^^^^^^
"KRN",19,13595,1,0)
^^5^5^3100302^
"KRN",19,13595,1,1,0)
This option provides POC data approval personnel the ability to report any
"KRN",19,13595,1,2,0)
mismatches between the ETA timecard and the Nurse's Point of Care (POC) 
"KRN",19,13595,1,3,0)
record.  Mismatches are reported when there is a discrepancy between the
"KRN",19,13595,1,4,0)
two records for either the type of time or start and stop times for a 
"KRN",19,13595,1,5,0)
particular type of time.
"KRN",19,13595,25)
DAP^PRSNRMM1
"KRN",19,13595,"U")
MISMATCH REPORT-POINT OF CARE 
"KRN",19,13596,-1)
0^34
"KRN",19,13596,0)
PRSNR MISMATCHES ETA POC-DEP^Mismatch Report-Point of Care vs. ETA Timecard^^R^^^^^^^^
"KRN",19,13596,1,0)
^^5^5^3100302^
"KRN",19,13596,1,1,0)
This option provides POC data entry personnel the ability to report any
"KRN",19,13596,1,2,0)
mismatches between the ETA timecard and the Nurse's Point of Care (POC) 
"KRN",19,13596,1,3,0)
record.  Mismatches are reported when there is a discrepancy between the
"KRN",19,13596,1,4,0)
two records for either the type of time or start and stop times for a 
"KRN",19,13596,1,5,0)
particular type of time.
"KRN",19,13596,25)
DEP^PRSNRMM1
"KRN",19,13596,"U")
MISMATCH REPORT-POINT OF CARE 
"KRN",19,13597,-1)
0^35
"KRN",19,13597,0)
PRSNR MISMATCHES ETA POC-NURSE^Mismatch Report-Point of Care vs. ETA Timecard^^R^^^^^^^^
"KRN",19,13597,1,0)
^^5^5^3100302^
"KRN",19,13597,1,1,0)
This option provides a nurse the ability to report any mismatches between
"KRN",19,13597,1,2,0)
their ETA timecard and their Nurse's Point of Care (POC) record.  
"KRN",19,13597,1,3,0)
Mismatches are reported when there is a discrepancy between the
"KRN",19,13597,1,4,0)
two records for either the type of time or start and stop times for a 
"KRN",19,13597,1,5,0)
particular type of time.
"KRN",19,13597,25)
NURSE^PRSNRMM1
"KRN",19,13597,"U")
MISMATCH REPORT-POINT OF CARE 
"KRN",19,13598,-1)
0^27
"KRN",19,13598,0)
PRSNR EDU VALIDATION-COORD^Nursing Education Validation^^R^^^^^^^^
"KRN",19,13598,1,0)
^^3^3^3091015^
"KRN",19,13598,1,1,0)
This report provides nursing job codes, roles, assignments,education 
"KRN",19,13598,1,2,0)
level and year degree earned over a date range, by location or T&L unit 
"KRN",19,13598,1,3,0)
within a division.
"KRN",19,13598,25)
COORD^PRSNREV0
"KRN",19,13598,"U")
NURSING EDUCATION VALIDATION
"KRN",19,13599,-1)
0^5
"KRN",19,13599,0)
PRSN CORRECT RELEASED POC DATA^Correct Released Nurse POC Data^^R^^^^^^^^PAID
"KRN",19,13599,1,0)
^^3^3^3091022^
"KRN",19,13599,1,1,0)
This option provides the functionality to enter correction to nurse POC 
"KRN",19,13599,1,2,0)
data for direct care nurses for a prior date that has already been 
"KRN",19,13599,1,3,0)
released to VANOD.
"KRN",19,13599,25)
ENT^PRSNEC
"KRN",19,13599,"U")
CORRECT RELEASED NURSE POC DAT
"KRN",19,13600,-1)
0^40
"KRN",19,13600,0)
PRSNR SKILL MIX GRP SUMM-DAP^Nurse Group Work Summary by Skill Mix^^R^^^^^^^^
"KRN",19,13600,1,0)
^19.06^2^2^3091029^^
"KRN",19,13600,1,1,0)
This report provides nursing group work summary by skill mix over a date 
"KRN",19,13600,1,2,0)
range, by default location or T&L unit within a division.
"KRN",19,13600,25)
DAP^PRSNRSM0
"KRN",19,13600,"U")
NURSE GROUP WORK SUMMARY BY SK
"KRN",19,13601,-1)
0^39
"KRN",19,13601,0)
PRSNR SKILL MIX GRP SUMM-COORD^Nurse Group Work Summary by Skill Mix^^R^^^^^^^^
"KRN",19,13601,1,0)
^^2^2^3091029^
"KRN",19,13601,1,1,0)
This report provides nursing group work summary by skill mix over a date
"KRN",19,13601,1,2,0)
range, by default location or T&L unit within a division.
"KRN",19,13601,25)
COORD^PRSNRSM0
"KRN",19,13601,"U")
NURSE GROUP WORK SUMMARY BY SK
"KRN",19,13602,-1)
0^16
"KRN",19,13602,0)
PRSN POC RELEASE^Release Pay Period POC Data for VANOD Extract^^R^^^^^^^^
"KRN",19,13602,1,0)
^19.06^7^7^3091103^^
"KRN",19,13602,1,1,0)
This option provides ability to review POC data for a pay period and 
"KRN",19,13602,1,2,0)
release that data for extraction to VANOD.  Select a single division or
"KRN",19,13602,1,3,0)
all divisions for release, and optionally view all POC/ETA mismatches for
"KRN",19,13602,1,4,0)
the selected release group.
"KRN",19,13602,1,5,0)
 
"KRN",19,13602,1,6,0)
The option transfers records from the POC Daily Time Records (#451) file
"KRN",19,13602,1,7,0)
to the POC Daily Activity Extraction (#451.7) file.
"KRN",19,13602,25)
RELEASE^PRSNCGR
"KRN",19,13602,"U")
RELEASE PAY PERIOD POC DATA FO
"KRN",19,13603,-1)
0^18
"KRN",19,13603,0)
PRSN RET APPROVED POC RECORD^Return Approved Nurse POC Daily Time Record^^R^^^^^^^^
"KRN",19,13603,1,0)
^^17^17^3111109^
"KRN",19,13603,1,1,0)
This option allows the ADPAC/VANOD Site Coordinator to return previously 
"KRN",19,13603,1,2,0)
approved POC time records for additional editing by data entry personnel.
"KRN",19,13603,1,3,0)
 
"KRN",19,13603,1,4,0)
The following types of records can be returned:
"KRN",19,13603,1,5,0)
1.  An Approved Nurse POC Daily Time record, that has never been Released.
"KRN",19,13603,1,6,0)
2.  An Approved Nurse POC Daily Time record that has been Released and 
"KRN",19,13603,1,7,0)
has subsequently been Corrected. 
"KRN",19,13603,1,8,0)
 
"KRN",19,13603,1,9,0)
When returning records of type 1 above, the system will change the status 
"KRN",19,13603,1,10,0)
of the Nurse POC Daily Time record for that nurse and date to POC record 
"KRN",19,13603,1,11,0)
exists and pay period status will be Open.  This will allow the POC Data 
"KRN",19,13603,1,12,0)
Entry Personnel to edit or delete any records during that pay period.
"KRN",19,13603,1,13,0)
 
"KRN",19,13603,1,14,0)
When returning records of type 2 above, the system will change the status 
"KRN",19,13603,1,15,0)
of the Nurse POC Daily Time record for that nurse and date to Corrected.  
"KRN",19,13603,1,16,0)
This will allow the POC Data Entry Personnel to edit or delete the 
"KRN",19,13603,1,17,0)
correction for that day.
"KRN",19,13603,25)
RETPOC^PRSNCR1
"KRN",19,13603,"U")
RETURN APPROVED NURSE POC DAIL
"KRN",19,13604,-1)
0^38
"KRN",19,13604,0)
PRSNR NURSE POSITION AND PAY^Nurse Position and Pay Information^^R^^^^^^^^PAID
"KRN",19,13604,1,0)
^19.06^4^4^3100305^^
"KRN",19,13604,1,1,0)
This report provides costing data of all active nurse staff.  The report
"KRN",19,13604,1,2,0)
includes Name, SSN (last 4), Skill Mix, BOC, OCC, Assignment Code, 
"KRN",19,13604,1,3,0)
CC, Nurse Role, Grade/Step, Next Step Due Date, Years of Service and 
"KRN",19,13604,1,4,0)
Salary.  Payroll personnel can run this report for any division.
"KRN",19,13604,25)
COORDNPP^PRSNREV0
"KRN",19,13604,"U")
NURSE POSITION AND PAY INFORMA
"KRN",19,13605,-1)
0^36
"KRN",19,13605,0)
PRSNR NONDIR CARE SUMM-COORD^Non-direct Care Summary by Skill Mix^^R^^^^^^^^
"KRN",19,13605,1,0)
^19.06^3^3^3091119^^^
"KRN",19,13605,1,1,0)
This report provides a summary of non direct care hours performed by 
"KRN",19,13605,1,2,0)
nurses and unlicensed personnel over a date range, by location or T&L 
"KRN",19,13605,1,3,0)
unit within a division.
"KRN",19,13605,25)
COORD^PRSNRND0
"KRN",19,13605,"U")
NON-DIRECT CARE SUMMARY BY SKI
"KRN",19,13606,-1)
0^37
"KRN",19,13606,0)
PRSNR NONDIR CARE SUMM-DAP^Nondirect Care Summary by Skillmix^^R^^^^^^^^
"KRN",19,13606,1,0)
^19.06^3^3^3091119^^
"KRN",19,13606,1,1,0)
This report provides a summary of non direct care hours performed by
"KRN",19,13606,1,2,0)
nurses and unlicensed personnel over a date range, by location or T&L
"KRN",19,13606,1,3,0)
unit within a division.
"KRN",19,13606,25)
DAP^PRSNRND0
"KRN",19,13606,"U")
NONDIRECT CARE SUMMARY BY SKIL
"KRN",19,13607,-1)
0^21
"KRN",19,13607,0)
PRSN TL POC^Edit Update T&L Unit POC Users^^R^^^^^^^^PAID^^
"KRN",19,13607,1,0)
^19.06^2^2^3091124^^^
"KRN",19,13607,1,1,0)
This option allows the PEV ADPAC to enter and edit POC Entry and Approval 
"KRN",19,13607,1,2,0)
personnel for a T&L Unit.
"KRN",19,13607,20)

"KRN",19,13607,25)
EDIT^PRSNCTL
"KRN",19,13607,"U")
EDIT UPDATE T&L UNIT POC USERS
"KRN",19,13608,-1)
0^2
"KRN",19,13608,0)
PRSN APPROV POC PAYPD^Approve Pay Period POC Records^^R^^^^^^^^
"KRN",19,13608,1,0)
^19.06^1^1^3110711^^
"KRN",19,13608,1,1,0)
This option is used to approve pay period Nurse POC records.
"KRN",19,13608,25)
EN^PRSNAA01
"KRN",19,13608,"U")
APPROVE PAY PERIOD POC RECORDS
"KRN",19,13609,-1)
0^1
"KRN",19,13609,0)
PRSN APPROV CORR POC^Approve Corrected Daily POC Records^^R^^^^^^^^
"KRN",19,13609,1,0)
^19.06^1^1^3110923^^^
"KRN",19,13609,1,1,0)
This option is used to approve corrected daily POC records.
"KRN",19,13609,25)
EN^PRSNAC01
"KRN",19,13609,"U")
APPROVE CORRECTED DAILY POC RE
"KRN",19,13610,-1)
0^15
"KRN",19,13610,0)
PRSN POC CORRECT RELEASE^Release Corrected POC Data for VANOD Extract^^R^^^^^^^^
"KRN",19,13610,1,0)
^^7^7^3091207^
"KRN",19,13610,1,1,0)
This option provides the VANOD Site Coordinator or designee the ability 
"KRN",19,13610,1,2,0)
to review and release POC data that has been released in the past and has 
"KRN",19,13610,1,3,0)
subsequently been corrected and approved.  The option releases all 
"KRN",19,13610,1,4,0)
records for the day that has been corrected and may release additional 
"KRN",19,13610,1,5,0)
days if they have been impacted by the correction.  E.g., a two day tour 
"KRN",19,13610,1,6,0)
that is corrected may impact the following day and that day would also 
"KRN",19,13610,1,7,0)
need to be rebuilt and released.
"KRN",19,13610,25)
CRELEASE^PRSNCGP
"KRN",19,13610,"U")
RELEASE CORRECTED POC DATA FOR
"KRN",19,13611,-1)
0^20
"KRN",19,13611,0)
PRSN SITE MAINTENANCE COORD^Package Maintenance^^M^^^^^^^^
"KRN",19,13611,1,0)
^19.06^1^1^3111201^^^^
"KRN",19,13611,1,1,0)
Menu option holding maintenance options for the VANOD site coordinator.
"KRN",19,13611,10,0)
^19.01IP^5^5
"KRN",19,13611,10,1,0)
13607^1^1
"KRN",19,13611,10,1,"^")
PRSN TL POC
"KRN",19,13611,10,2,0)
13574^2^2
"KRN",19,13611,10,2,"^")
PRSN POC APPLICATION PARAMETER
"KRN",19,13611,10,3,0)
13579^3
"KRN",19,13611,10,3,"^")
PRSN SHOW POC SYSTEM SETUP
"KRN",19,13611,10,4,0)
13650^4
"KRN",19,13611,10,4,"^")
PRSN NURSES BY LOC/T&L
"KRN",19,13611,10,5,0)
13658^5
"KRN",19,13611,10,5,"^")
PRSN COPY ETA TO POC
"KRN",19,13611,99)
62426,45302
"KRN",19,13611,"U")
PACKAGE MAINTENANCE
"KRN",19,13622,-1)
0^50
"KRN",19,13622,0)
PRSNR GROUP SUMMARY - COORD^Group Summary Report^^R^^^^^^^^PAID^y^
"KRN",19,13622,1,0)
^^2^2^3110811^
"KRN",19,13622,1,1,0)
This report provides the number of RNs, LPNs and UAPs 
"KRN",19,13622,1,2,0)
assigned to the selected locations.
"KRN",19,13622,20)

"KRN",19,13622,25)
COORD^PRSNRGS0
"KRN",19,13622,"U")
GROUP SUMMARY REPORT
"KRN",19,13623,-1)
0^49
"KRN",19,13623,0)
PRSNR GROUP DETAIL - COORD^Group Detail Report^^R^^^^^^^^PAID
"KRN",19,13623,1,0)
^^2^2^3110811^
"KRN",19,13623,1,1,0)
This report provides nurse assignment and FTEE sorted by
"KRN",19,13623,1,2,0)
occupation series code and last name
"KRN",19,13623,25)
COORD^PRSNRGD0
"KRN",19,13623,"U")
GROUP DETAIL REPORT
"KRN",19,13624,-1)
0^43
"KRN",19,13624,0)
PRSNR SUM DIR & NONDIR - COORD^Group Summary Direct & NonDirect^^R^^^^^^^^PAID
"KRN",19,13624,1,0)
^^1^1^3110811^
"KRN",19,13624,1,1,0)
This report provides a summary of type of work and hours per location.
"KRN",19,13624,25)
COORD^PRSNRDN0
"KRN",19,13624,"U")
GROUP SUMMARY DIRECT & NONDIRE
"KRN",19,13625,-1)
0^44
"KRN",19,13625,0)
PRSNR SUM DIR & NONDIR - DAP^Group Summary Direct & NonDirect^^R^^^^^^^^PAID
"KRN",19,13625,1,0)
^^1^1^3110811^
"KRN",19,13625,1,1,0)
This report provides a summary of type of work and hours per location.
"KRN",19,13625,25)
DAP^PRSNRDN0
"KRN",19,13625,"U")
GROUP SUMMARY DIRECT & NONDIRE
"KRN",19,13626,-1)
0^45
"KRN",19,13626,0)
PRSNR LOC OT DETAIL - COORD^Location Overtime Detail^^R^^^^^^^^PAID
"KRN",19,13626,1,0)
^^1^1^3110811^
"KRN",19,13626,1,1,0)
This report provides a detail listing of all overtime per location.
"KRN",19,13626,25)
COORD^PRSNROLD
"KRN",19,13626,"U")
LOCATION OVERTIME DETAIL
"KRN",19,13627,-1)
0^46
"KRN",19,13627,0)
PRSNR LOC OT DETAIL - DAP^Location Overtime Detail^^R^^^^^^^^PAID
"KRN",19,13627,1,0)
^^1^1^3110811^
"KRN",19,13627,1,1,0)
This report provides a detail listing of all overtime per location.
"KRN",19,13627,25)
DAP^PRSNROLD
"KRN",19,13627,"U")
LOCATION OVERTIME DETAIL
"KRN",19,13628,-1)
0^47
"KRN",19,13628,0)
PRSNR LOC OT SUM SKILL - COORD^Location Overtime Summary^^R^^^^^^^^PAID
"KRN",19,13628,1,0)
^^2^2^3110811^
"KRN",19,13628,1,1,0)
This report provides a summary of each skill mix by reason and mandatory
"KRN",19,13628,1,2,0)
overtime indicator.
"KRN",19,13628,25)
COORD^PRSNROLS
"KRN",19,13628,"U")
LOCATION OVERTIME SUMMARY
"KRN",19,13629,-1)
0^48
"KRN",19,13629,0)
PRSNR LOC OT SUM SKILL - DAP^Location Overtime Summary^^R^^^^^^^^PAID
"KRN",19,13629,1,0)
^^2^2^3110811^
"KRN",19,13629,1,1,0)
This report provides a summary of each skill mix by reason and mandatory
"KRN",19,13629,1,2,0)
overtime indicator.
"KRN",19,13629,25)
DAP^PRSNROLS
"KRN",19,13629,"U")
LOCATION OVERTIME SUMMARY
"KRN",19,13650,-1)
0^51
"KRN",19,13650,0)
PRSN NURSES BY LOC/T&L^Show Nurse Detail by Location or T&L Unit^^R^^^^^^^^
"KRN",19,13650,1,0)
^^2^2^3111024^
"KRN",19,13650,1,1,0)
This option lists Nurse details sorted by nurse location or T&L unit for 
"KRN",19,13650,1,2,0)
the selected division(s).
"KRN",19,13650,25)
ENTRYPNT^PRSNUT03
"KRN",19,13650,"U")
SHOW NURSE DETAIL BY LOCATION 
"KRN",19,13658,-1)
0^52
"KRN",19,13658,0)
PRSN COPY ETA TO POC^Copy ETA personnel to POC personnel^^R^^^^^^^^PAID
"KRN",19,13658,1,0)
^^4^4^3111201^
"KRN",19,13658,1,1,0)
This option will DELETE ALL existing POC data entry and approval 
"KRN",19,13658,1,2,0)
personnel. Then it will copy ETA timekeepers to POC data entry and ETA 
"KRN",19,13658,1,3,0)
supervisors to POC approval personnel. Employees with an * in front of 
"KRN",19,13658,1,4,0)
their name are separated and will NOT be copied.
"KRN",19,13658,25)
TL2PEV^PRSNCTL
"KRN",19,13658,"U")
COPY ETA PERSONNEL TO POC PERS
"KRN",19,13659,-1)
0^53
"KRN",19,13659,0)
PRSNR NURLOC ACTIVITY - COORD^All Activity at a Nurse Location^^R^^^^^^^^
"KRN",19,13659,1,0)
^^2^2^3111209^
"KRN",19,13659,1,1,0)
This report provides ALL activity performed at the requested nursing
"KRN",19,13659,1,2,0)
location(s) by any nurse irrespective of the nurse default location.
"KRN",19,13659,25)
COORD^PRSNRLS0
"KRN",19,13659,"U")
ALL ACTIVITY AT A NURSE LOCATI
"KRN",19,13660,-1)
0^54
"KRN",19,13660,0)
PRSNR NURLOC NONDIR - COORD^All Non Direct Activity at a Nurse Location^^R^^^^^^^^
"KRN",19,13660,1,0)
^^3^3^3111209^
"KRN",19,13660,1,1,0)
This report provides a summary of ALL non direct activity performed at the
"KRN",19,13660,1,2,0)
requested nursing location(s) by any nurse irrespective of the nurse
"KRN",19,13660,1,3,0)
default location.
"KRN",19,13660,25)
COORD^PRSNRLND
"KRN",19,13660,"U")
ALL NON DIRECT ACTIVITY AT A N
"KRN",19,13664,-1)
0^55
"KRN",19,13664,0)
PRSNR MISMATCHES BY T&L^Mismatch Report by T&L Unit^^R^^^^^^^^PAID
"KRN",19,13664,1,0)
^^5^5^3120123^
"KRN",19,13664,1,1,0)
This option provides POC personnel the ability to report any mismatches 
"KRN",19,13664,1,2,0)
between the ETA timecard and the Nurse's Point of Care (POC) record.  
"KRN",19,13664,1,3,0)
Mismatches are reported when there is a discrepancy between the two 
"KRN",19,13664,1,4,0)
records for either the type of time or start and stop times for a 
"KRN",19,13664,1,5,0)
particular type of time.
"KRN",19,13664,25)
TL^PRSNRMM1
"KRN",19,13664,"U")
MISMATCH REPORT BY T&L UNIT
"KRN",19,13665,-1)
0^56
"KRN",19,13665,0)
PRSNR UNAPPROVED POC TIME^Unapproved POC Time by Pay Period^^R^^^^^^^^PAID
"KRN",19,13665,1,0)
^19.06^3^3^3120123^^^
"KRN",19,13665,1,1,0)
This report lists all unapproved POC time for a given pay period, 
"KRN",19,13665,1,2,0)
including unapproved corrected time. A summary or detail report may be 
"KRN",19,13665,1,3,0)
chosen.
"KRN",19,13665,25)
EN^PRSNRUR
"KRN",19,13665,99)
62479,59701
"KRN",19,13665,"U")
UNAPPROVED POC TIME BY PAY PER
"KRN",19,13666,-1)
0^57
"KRN",19,13666,0)
PRSNR NURLOC OT - COORD^All Overtime at a Nurse Location^^R^^^^^^^^
"KRN",19,13666,1,0)
^^2^2^3120203^
"KRN",19,13666,1,1,0)
This report provides ALL overtime performed at the requested nursing
"KRN",19,13666,1,2,0)
location(s) by any nurse irrespective of the nurse default location.
"KRN",19,13666,25)
COORD^PRSNRLOS
"KRN",19,13666,"U")
ALL OVERTIME AT A NURSE LOCATI
"KRN",19.1,606,-1)
0^1
"KRN",19.1,606,0)
PRSN DEP^Nurse POC and TK Key^l^n^0
"KRN",19.1,606,1,0)
^19.11^4^4^3090824^^^
"KRN",19.1,606,1,1,0)
This Key allows a timekeeper access to the Toggle option so they can 
"KRN",19.1,606,1,2,0)
choose to enter POC data when they are posting timecards or not.  The key 
"KRN",19.1,606,1,3,0)
is given to timekeepers who are added to the POC Data Entry multiple in 
"KRN",19.1,606,1,4,0)
the T&L unit file.
"KRN",8994,1056,-1)
0^1
"KRN",8994,1056,0)
PRSN NURS LOCATION EXTRACTION^NURSLOC^PRSN9A^4^A^0^^1
"KRN",8994,1056,1,0)
^^21^21^3120105^
"KRN",8994,1056,1,1,0)
VANOD shall have the ability to extract data from the Nursing Location 
"KRN",8994,1056,1,2,0)
(file # 211.4).
"KRN",8994,1056,1,3,0)
 
"KRN",8994,1056,1,4,0)
For inpatient settings the location data can be used by VANOD as a map 
"KRN",8994,1056,1,5,0)
between nurse POC data and the patients for whom they provide care.  For 
"KRN",8994,1056,1,6,0)
other care settings the location data can be used to report an activity.
"KRN",8994,1056,1,7,0)
 
"KRN",8994,1056,1,8,0)
Input Parameter
"KRN",8994,1056,1,9,0)
 
"KRN",8994,1056,1,10,0)
Parameter 1:
"KRN",8994,1056,1,11,0)
The date is in format 'YYYYMMDD' is optional. If there is no
"KRN",8994,1056,1,12,0)
date then the defult date will be 'TODAY'. The Nursing Location output
"KRN",8994,1056,1,13,0)
provided in this RPC shall only include data for locations that are active
"KRN",8994,1056,1,14,0)
in any one of the day # of the Pay Period of the parameter date. If the
"KRN",8994,1056,1,15,0)
current date is between day 1 and day 11 of the pay period, the Nursing
"KRN",8994,1056,1,16,0)
Locations RPC shall return locations that were active for the prior pay
"KRN",8994,1056,1,17,0)
period with the data that currently resides in the NURS LOCATION file
"KRN",8994,1056,1,18,0)
(211.4).  If the current date is between day 12 and day 14 of the pay
"KRN",8994,1056,1,19,0)
period the Nursing Locations RPC shall return locations that are active
"KRN",8994,1056,1,20,0)
for the current pay period with the data that currently resides in the
"KRN",8994,1056,1,21,0)
NURS LOCATION file (211.4).
"KRN",8994,1056,2,0)
^8994.02A^1^1
"KRN",8994,1056,2,1,0)
PRSNDT^1^15^0^1
"KRN",8994,1056,2,1,1,0)
^^3^3^3120105^
"KRN",8994,1056,2,1,1,1,0)
The PRSNDT is, in date format 'YYYYMMDD', for extracting all NURS
"KRN",8994,1056,2,1,1,2,0)
LOCATIONS and their assocated Wards in File #211.4 that is active in any
"KRN",8994,1056,2,1,1,3,0)
one of the Day# (1-14) of the Pay Period of the PRSNDT.
"KRN",8994,1056,2,"B","PRSNDT",1)

"KRN",8994,1056,2,"PARAMSEQ",1,1)

"KRN",8994,1056,3,0)
^^32^32^3120105^
"KRN",8994,1056,3,1,0)
The PEV RPC shall provide a VistA temporary global array of records with 
"KRN",8994,1056,3,2,0)
the name provided with the input parameter 1.
"KRN",8994,1056,3,3,0)
 
"KRN",8994,1056,3,4,0)
Header Node
"KRN",8994,1056,3,5,0)
This global array shall have a header node with index 0.  The header node 
"KRN",8994,1056,3,6,0)
is a literal string with delimiter '^'.  Data returned in the header node 
"KRN",8994,1056,3,7,0)
is defined as follows:
"KRN",8994,1056,3,8,0)
 
"KRN",8994,1056,3,9,0)
Delimiter       Piece # Data Description
"KRN",8994,1056,3,10,0)
^       1       Site Name (STATION NUMBER) of VistA Database
"KRN",8994,1056,3,11,0)
^       2       Total Number of Records Extracted
"KRN",8994,1056,3,12,0)
 
"KRN",8994,1056,3,13,0)
Data Nodes
"KRN",8994,1056,3,14,0)
 
"KRN",8994,1056,3,15,0)
The output shall be an array of records indexed by sequence number 
"KRN",8994,1056,3,16,0)
beginning at 1.  Each record is a delimited literal string defined as 
"KRN",8994,1056,3,17,0)
follows:
"KRN",8994,1056,3,18,0)
 
"KRN",8994,1056,3,19,0)
Delimiter       Piece # Data Description
"KRN",8994,1056,3,20,0)
^       1       IEN of Nurse Location File #211.4
"KRN",8994,1056,3,21,0)
^       2       Record Type: L for Location, W for MAS Ward
"KRN",8994,1056,3,22,0)
^       3       IEN of Hospital Location File #44
"KRN",8994,1056,3,23,0)
^       4       Hospital Location Name
"KRN",8994,1056,3,24,0)
^       5       DIVISION (INSTITUTION FILE #4 IEN as defined in the 
"KRN",8994,1056,3,25,0)
                computed expression in .02 field of file 211.4)
"KRN",8994,1056,3,26,0)
^       6       INSTITUTION FILE NAME
"KRN",8994,1056,3,27,0)
^       7       Care Setting (I=inpatient/O=other)
"KRN",8994,1056,3,28,0)
^       8       Pt. Pop (VANOD Unit Type)
"KRN",8994,1056,3,29,0)
^       9       IEN of MAS Ward File (#42)
"KRN",8994,1056,3,30,0)
^       10      MAS Ward Name
"KRN",8994,1056,3,31,0)
^       11      DSS Department
"KRN",8994,1056,3,32,0)
^       12      Site Name (STATION NUMBER) of VistA Database
"KRN",8994,1057,-1)
0^2
"KRN",8994,1057,0)
PRSN POC DAILY TIME EXTRACTION^POCTIME^PRSN9B^4^A^0^^1
"KRN",8994,1057,1,0)
^8994.01^13^13^3111209^^^^
"KRN",8994,1057,1,1,0)
VANOD shall have the ability to extract data from the POC DAILY ACTIVITY
"KRN",8994,1057,1,2,0)
EXTRACTION File (#451.7).
"KRN",8994,1057,1,3,0)
 
"KRN",8994,1057,1,4,0)
Input Parameters: The PEV RPC Broker call shall be called with the
"KRN",8994,1057,1,5,0)
following input parameters.
"KRN",8994,1057,1,6,0)
 
"KRN",8994,1057,1,7,0)
Parameter 1:  Integer - records with a sequence number greater than
"KRN",8994,1057,1,8,0)
this value shall be returned, in sequence.  If you want to return 
"KRN",8994,1057,1,9,0)
records starting at the beginning of the file then a value of 0 should 
"KRN",8994,1057,1,10,0)
be sent as this parameter.  The number of records returned shall not
"KRN",8994,1057,1,11,0)
exceed the value passed in parameter 2.
"KRN",8994,1057,1,12,0)
 
"KRN",8994,1057,1,13,0)
Parameter 2:  Integer - Maximum number of records to be returned.
"KRN",8994,1057,2,0)
^8994.02A^4^2
"KRN",8994,1057,2,3,0)
PRSNSEQ^1^15^1^1
"KRN",8994,1057,2,3,1,0)
^^4^4^3090731^
"KRN",8994,1057,2,3,1,1,0)
Any records in POC DAILY ACTIVITY EXTRACTION File (#451.7) with a sequence
"KRN",8994,1057,2,3,1,2,0)
number greater than this value shall be returned, in sequence.  The number
"KRN",8994,1057,2,3,1,3,0)
of records returned shall not exceed the value passed in parameter
"KRN",8994,1057,2,3,1,4,0)
PRSNREC.
"KRN",8994,1057,2,4,0)
PRSNREC^1^15^1^2
"KRN",8994,1057,2,4,1,0)
^^1^1^3111209^
"KRN",8994,1057,2,4,1,1,0)
This is the Maximum number of records to be returned.
"KRN",8994,1057,2,"B","PRSNREC",4)

"KRN",8994,1057,2,"B","PRSNSEQ",3)

"KRN",8994,1057,2,"PARAMSEQ",1,3)

"KRN",8994,1057,2,"PARAMSEQ",2,4)

"KRN",8994,1057,3,0)
^^66^66^3111209^
"KRN",8994,1057,3,1,0)
The PEV RPC Broker call shall provide a VistA temporary global array of 
"KRN",8994,1057,3,2,0)
records with the name provided with the input parameter 1.
"KRN",8994,1057,3,3,0)
 
"KRN",8994,1057,3,4,0)
Header Node
"KRN",8994,1057,3,5,0)
This global array shall have a header node with index 0.  The header node 
"KRN",8994,1057,3,6,0)
is a literal string with delimiter  ^ .  Data returned in the header node 
"KRN",8994,1057,3,7,0)
is defined as follows:
"KRN",8994,1057,3,8,0)
 
"KRN",8994,1057,3,9,0)
Delimiter       Piece # Data Description
"KRN",8994,1057,3,10,0)
^       1       Site Name (STATION NUMBER) of VistA database
"KRN",8994,1057,3,11,0)
^       2       Sequence # of first record in returned data
"KRN",8994,1057,3,12,0)
^       3       Sequence # of last record returned
"KRN",8994,1057,3,13,0)
^       4       Total number of records returned
"KRN",8994,1057,3,14,0)
^       5       Sequence # of last record currently in Nurse POC 
"KRN",8994,1057,3,15,0)
                Extraction file (#541.7)
"KRN",8994,1057,3,16,0)
 
"KRN",8994,1057,3,17,0)
Data Nodes
"KRN",8994,1057,3,18,0)
The output shall be an array of records indexed by sequence number as 
"KRN",8994,1057,3,19,0)
defined by the input parameters.  Each record is a delimited literal 
"KRN",8994,1057,3,20,0)
string defined as follows:
"KRN",8994,1057,3,21,0)
 
"KRN",8994,1057,3,22,0)
Delimiter       Piece # Data Description
"KRN",8994,1057,3,23,0)
^       1       Sequence Number
"KRN",8994,1057,3,24,0)
^       2       Division IEN of Nurse Primary Location
"KRN",8994,1057,3,25,0)
^       3       Division IEN of Nurse Location Worked
"KRN",8994,1057,3,26,0)
^       4       Version Number (Sequence Number of Times of Reconciled) 
"KRN",8994,1057,3,27,0)
^       5       Nurse ID (SS# without  - )
"KRN",8994,1057,3,28,0)
^       6       IEN (Internal Entry Number) of File #450 Paid Employee
"KRN",8994,1057,3,29,0)
^       7       Time Record Date (YYYYMMDD)
"KRN",8994,1057,3,30,0)
^       8       Start Time (0000 - 2345)
"KRN",8994,1057,3,31,0)
^       9       Stop Time (0015 - 2400) (stop time must be greater start
"KRN",8994,1057,3,32,0)
                time)
"KRN",8994,1057,3,33,0)
^       10      Type of Time
"KRN",8994,1057,3,34,0)
^       11      Point of Care derived from  NURS LOCATION 211.4
"KRN",8994,1057,3,35,0)
^       12      Mandatory Overtime (M or V)
"KRN",8994,1057,3,36,0)
^       13      Reason for Overtime 
"KRN",8994,1057,3,37,0)
^       14      Types of Work
"KRN",8994,1057,3,38,0)
^       15      Release Date (CYYMMDD) 
"KRN",8994,1057,3,39,0)
^       16      Nurse T&L Unit at time of POC approval
"KRN",8994,1057,3,40,0)
 
"KRN",8994,1057,3,41,0)
Version Number (Piece 4)   Full Day Substitution
"KRN",8994,1057,3,42,0)
The records with highest version number are the most recently released 
"KRN",8994,1057,3,43,0)
data records.  Records with version number one are original records.  
"KRN",8994,1057,3,44,0)
Records with a version number greater than 1 are corrections to records 
"KRN",8994,1057,3,45,0)
that have been released previously.
"KRN",8994,1057,3,46,0)
The highest version number for a nurse and a date  is a replacement for 
"KRN",8994,1057,3,47,0)
all data for the earlier version of the data for that nurse on that date. 
"KRN",8994,1057,3,48,0)
(Full day substitution).
"KRN",8994,1057,3,49,0)
It may be necessary to provide VANOD with a correction to a day off where 
"KRN",8994,1057,3,50,0)
overtime was incorrectly reported and there was no activity on that day.  
"KRN",8994,1057,3,51,0)
The RPC shall return a record with identifiers but no activity data for 
"KRN",8994,1057,3,52,0)
that day (see sample record 28).
"KRN",8994,1057,3,53,0)
 
"KRN",8994,1057,3,54,0)
Seq#    Div.    Sta #   Version #       Nurse ID        Nurse IEN 450
"KRN",8994,1057,3,55,0)
FM Date   Start Time      Stop Time       Type of Time    Point of Care   
"KRN",8994,1057,3,56,0)
Mand.  OT       Reason for overtime     Type of Work
"KRN",8994,1057,3,57,0)
25      688     688     1               000-45-8452     13418
"KRN",8994,1057,3,58,0)
20091016  0700            1000            Tour Time       2841
"KRN",8994,1057,3,59,0)
26      7818    688     1               000-45-8452     13418
"KRN",8994,1057,3,60,0)
20091016  1000            1900            Tour Time       2841
"KRN",8994,1057,3,61,0)
                                        Sitter
"KRN",8994,1057,3,62,0)
27      7819    688     1               000-45-8452     13418
"KRN",8994,1057,3,63,0)
20091016  1900            2100            Overtime        1677
"KRN",8994,1057,3,64,0)
Mandatory
"KRN",8994,1057,3,65,0)
28      7736    688     2               000-22-9999     2088    
"KRN",8994,1057,3,66,0)
20090912  0700            1530            Tour Time       2841
"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",8,.403)
.403;8;;;EDEOUT^DIFROMSO(.403,DA,"",XPDA);FPRE^DIFROMSI(.403,"",XPDA);EPRE^DIFROMSI(.403,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.403,DA,"",XPDA);DEL^DIFROMSK(.403,"",%)
"ORD",8,.403,0)
FORM
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",408,-1)
1^1
"PKG",408,0)
PAID^PRS^PAID
"PKG",408,20,0)
^9.402P^^
"PKG",408,22,0)
^9.49I^1^1
"PKG",408,22,1,0)
4.0^2950912^2960130
"PKG",408,22,1,"PAH",1,0)
126^3120217^123457142
"PKG",408,22,1,"PAH",1,1,0)
^^19^19^3110912
"PKG",408,22,1,"PAH",1,1,1,0)
This patch primarily implements new functionality within VistA's
"PKG",408,22,1,"PAH",1,1,2,0)
Personnel and Accounting Integrated Data/ Enhanced Time and Attendance
"PKG",408,22,1,"PAH",1,1,3,0)
(PAID/ETA) software version 4.0 to provides appropriate
"PKG",408,22,1,"PAH",1,1,4,0)
data to VANOD (Veterans Affairs Nursing Outcomes Database) in accordance
"PKG",408,22,1,"PAH",1,1,5,0)
with Public Law 107-135 and the OIG Recommendation 4a (annual reporting
"PKG",408,22,1,"PAH",1,1,6,0)
requirement).  The patch also includes minor modifications to existing ETA
"PKG",408,22,1,"PAH",1,1,7,0)
functionality to support the collection of data for the VANOD.
"PKG",408,22,1,"PAH",1,1,8,0)
 
"PKG",408,22,1,"PAH",1,1,9,0)
This patch is dependent on the Nursing Service patch-NUR*4.0*43.  The 
"PKG",408,22,1,"PAH",1,1,10,0)
Nursing 
"PKG",408,22,1,"PAH",1,1,11,0)
service patch also supports the collection of data for the VANOD.  Patch 
"PKG",408,22,1,"PAH",1,1,12,0)
NUR*4.
"PKG",408,22,1,"PAH",1,1,13,0)
0*43 must be installed prior to patch PRS*4.0*126.
"PKG",408,22,1,"PAH",1,1,14,0)
 
"PKG",408,22,1,"PAH",1,1,15,0)
The patch implements functionality to gather and store information related
"PKG",408,22,1,"PAH",1,1,16,0)
to nurses providing direct patient care (as well as indirect care).  It
"PKG",408,22,1,"PAH",1,1,17,0)
provides functionality to enter, edit, update, review, certify and store
"PKG",408,22,1,"PAH",1,1,18,0)
this information.  The system provides the ability for a point to point 
"PKG",408,22,1,"PAH",1,1,19,0)
transfer of this information from each VistA instance to the VANOD.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
54
"RTN","PRSADP1")
0^42^B11335770^B11280993
"RTN","PRSADP1",1,0)
PRSADP1 ; HISC/REL,WIRMFO/JAH - Display Employee T&A Data ;AUG 07, 1997
"RTN","PRSADP1",2,0)
 ;;4.0;PAID;**22,114,126**;Sep 21, 1995;Build 59
"RTN","PRSADP1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSADP1",4,0)
 W:$E(IOST,1,2)="C-" @IOF W !?26,"VA TIME & ATTENDANCE SYSTEM"
"RTN","PRSADP1",5,0)
 W !?23,"EMPLOYEE TIME AND ATTENDANCE DATA" D HDR
"RTN","PRSADP1",6,0)
 W !!,?7,"Date",?21,"Scheduled Tour",?46,"Tour Exceptions"
"RTN","PRSADP1",7,0)
 W !?3,"------------------------------------------------------------------------",!
"RTN","PRSADP1",8,0)
F0 ; Display Frames
"RTN","PRSADP1",9,0)
 K Y1,Y2 S Y1=$G(^PRST(458,PPI,"E",DFN,"D",DAY,1)),Y2=$G(^(2)),Y3=$G(^(3)),Y4=$G(^(4)),TC=$P($G(^(0)),"^",2)
"RTN","PRSADP1",10,0)
 I Y1="" S Y1=$S(TC=1:"Day Off",TC=2:"Day Tour",TC=3!(TC=4):"Intermittent",1:"")
"RTN","PRSADP1",11,0)
 I " 1 3 4 "'[TC,$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,10)),"^",1)="" S Y2(1)="Unposted"
"RTN","PRSADP1",12,0)
 I TC=3,$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,10)),"^",4)=1 S Y2(1)="Day Worked"
"RTN","PRSADP1",13,0)
 W !?3,DTE S (L3,L4)=0 I Y1="",Y2="" S Y31="" G EX
"RTN","PRSADP1",14,0)
 D S1
"RTN","PRSADP1",15,0)
 F K=1:1 Q:'$D(Y1(K))&'$D(Y2(K))  W:K>1 ! W:$D(Y1(K)) ?21,Y1(K) W:$D(Y2(K)) ?45,$P(Y2(K),"^",1),?63,$P(Y2(K),"^",2)
"RTN","PRSADP1",16,0)
 W:Y3'="" !?10,Y3
"RTN","PRSADP1",17,0)
EX Q
"RTN","PRSADP1",18,0)
F1 ; Display Pay period for Certification
"RTN","PRSADP1",19,0)
 K Y1,Y2 S Y1=$G(^PRST(458,PPI,"E",DFN,"D",DAY,1)),Y2=$G(^(2)),Y3=$G(^(3)),Y4=$G(^(4)),TC=$P($G(^(0)),"^",2)
"RTN","PRSADP1",20,0)
 I Y1="" S Y1=$S(TC=1:"Day Off",TC=2:"Day Tour",TC=3!(TC=4):"Intermittent",1:"")
"RTN","PRSADP1",21,0)
 I " 1 3 4 "'[TC,$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,10)),"^",1)="" S Y2(1)="Unposted"
"RTN","PRSADP1",22,0)
 I TC=3,$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,10)),"^",4)=1 S Y2(1)="Day Worked"
"RTN","PRSADP1",23,0)
 W:'$D(PRSNTD) !?3,DTE S (L3,L4)=0 I Y1="",Y2="" S Y31="" G EX
"RTN","PRSADP1",24,0)
 D S1
"RTN","PRSADP1",25,0)
 Q
"RTN","PRSADP1",26,0)
S1 ; Set Schedule Array
"RTN","PRSADP1",27,0)
 S Y31=""
"RTN","PRSADP1",28,0)
 F L1=1:3:19 S A1=$P(Y1,"^",L1) Q:A1=""  D
"RTN","PRSADP1",29,0)
 .S L3=L3+1,Y1(L3)=A1 S:$P(Y1,"^",L1+1)'="" Y1(L3)=Y1(L3)_"-"_$P(Y1,"^",L1+1)
"RTN","PRSADP1",30,0)
 .S:Y31'="" Y31=Y31_", " S Y31=Y31_Y1(L3)
"RTN","PRSADP1",31,0)
 .I $P(Y1,"^",L1+2)'="" S L3=L3+1,Y1(L3)="  "_$P($G(^PRST(457.2,+$P(Y1,"^",L1+2),0)),"^",1)
"RTN","PRSADP1",32,0)
 .I  S Y31=Y31_" "_$P($G(^PRST(457.2,+$P(Y1,"^",L1+2),0)),"^",6)
"RTN","PRSADP1",33,0)
 .Q
"RTN","PRSADP1",34,0)
 G:Y4="" S2
"RTN","PRSADP1",35,0)
 F L1=1:3:19 S A1=$P(Y4,"^",L1) Q:A1=""  D
"RTN","PRSADP1",36,0)
 .S L3=L3+1,Y1(L3)=A1 S:$P(Y4,"^",L1+1)'="" Y1(L3)=Y1(L3)_"-"_$P(Y4,"^",L1+1)
"RTN","PRSADP1",37,0)
 .S:Y31'="" Y31=Y31_", " S Y31=Y31_Y1(L3)
"RTN","PRSADP1",38,0)
 .I $P(Y4,"^",L1+2)'="" S L3=L3+1,Y1(L3)="  "_$P($G(^PRST(457.2,+$P(Y4,"^",L1+2),0)),"^",1)
"RTN","PRSADP1",39,0)
 .I  S Y31=Y31_" "_$P($G(^PRST(457.2,+$P(Y1,"^",L1+2),0)),"^",6)
"RTN","PRSADP1",40,0)
 .Q
"RTN","PRSADP1",41,0)
S2 ; Set Worked Array
"RTN","PRSADP1",42,0)
 F L1=1:4:25 D  I A1="" G S3
"RTN","PRSADP1",43,0)
 .S A1=$P(Y2,"^",L1+2) Q:A1=""  S L4=L4+1
"RTN","PRSADP1",44,0)
 .S A2=$P(Y2,"^",L1) I A2'="" S Y2(L4)=A2_"-"_$P(Y2,"^",L1+1)
"RTN","PRSADP1",45,0)
 .S K=$O(^PRST(457.3,"B",A1,0)) S $P(Y2(L4),"^",2)=A1_" "_$P($G(^PRST(457.3,+K,0)),"^",2)
"RTN","PRSADP1",46,0)
 .I $P(Y2,"^",L1+3)'="" S L4=L4+1,Y2(L4)="  "_$P($G(^PRST(457.4,+$P(Y2,"^",L1+3),0)),"^",1)
"RTN","PRSADP1",47,0)
 .Q
"RTN","PRSADP1",48,0)
S3 Q
"RTN","PRSADP1",49,0)
HDR ; Display Employee Data
"RTN","PRSADP1",50,0)
 S C0=^PRSPC(DFN,0) W !!,$P(C0,"^",1) S X=$P(C0,"^",9)
"RTN","PRSADP1",51,0)
 I '$G(PRSTLV)!($G(PRSTLV)=1) W ?65,"XXX-XX-",$E(X,6,9)
"RTN","PRSADP1",52,0)
 I $G(PRSTLV)=2!($G(PRSTLV)=3) W ?65,$E(X),"XX-XX-",$E(X,6,9)
"RTN","PRSADP1",53,0)
 I $G(PRSTLV)=7 W ?65,$E(X,1,3)_"-"_$E(X,4,5)_"-"_$E(X,6,9)
"RTN","PRSADP1",54,0)
 W !!,"Station: ",$P(C0,"^",7),?30,"Normal Hours: ",$J($P(C0,"^",16),3),?65,"Duty Basis:",?77,$P(C0,"^",10)
"RTN","PRSADP1",55,0)
 W !,"T&L:     ",$P(C0,"^",8),?30,"Pay Plan:",?46,$P(C0,"^",21),?65,"Comp/Flex:",?77,$S(PPE'="":$P($G(^PRST(458,PPI,"E",DFN,0)),"^",6),1:$P($G(^PRSPC(DFN,1)),"^",7))
"RTN","PRSADP1",56,0)
 W ! W:PPE'="" "Pay Per: ",PPE W ?65,"FLSA:",?77,$P(C0,"^",12) Q
"RTN","PRSATIM")
0^38^B4486909^B4139617
"RTN","PRSATIM",1,0)
PRSATIM ;HISC/REL - Time Input Conversion ;01/21/05
"RTN","PRSATIM",2,0)
 ;;4.0;PAID;**69,70,71,93,100,126**;Sep 21, 1995;Build 59
"RTN","PRSATIM",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSATIM",4,0)
 S X=$TR(X,"adimnop","ADIMNOP")
"RTN","PRSATIM",5,0)
 S X=$S(X="M":"MID",X="N":"NOON",1:X)
"RTN","PRSATIM",6,0)
 I X?1"12".A S X=$S(X="12M":"MID",X="12N":"NOON",1:X)
"RTN","PRSATIM",7,0)
 I X?1.A S X=$S(X["MID":2400,X["NOON":1200,1:"")
"RTN","PRSATIM",8,0)
 S:$E(X,$L(X))="M" X=$E(X,1,$L(X)-1) S X1=$E(X,$L(X)) I X1?1U,"AP"'[X1 G ERR
"RTN","PRSATIM",9,0)
 S X1=$P(X,":",2) I X1'="",X1'?2N1.2U G ERR
"RTN","PRSATIM",10,0)
 I $L(X)>7 G ERR
"RTN","PRSATIM",11,0)
 I X'?4N,$S($L(+X)<3:+X,1:+X\100)>12 G ERR
"RTN","PRSATIM",12,0)
 S X=$P(X,":",1)_$P(X,":",2),X1=X
"RTN","PRSATIM",13,0)
 G:X?4N A I X'?1.4N1.2U G ERR
"RTN","PRSATIM",14,0)
 S:X<13 X=X*100 I X1["A" G:X>1259 ERR S X=$S(X=1200:2400,X>1159:X-1200,1:X)
"RTN","PRSATIM",15,0)
 E  I X<1200,X1["P"!(X<600) S X=X+1200 I X<1300 G ERR
"RTN","PRSATIM",16,0)
A I X>2400!('X&(X'="0000"))!(X#100>59) G ERR
"RTN","PRSATIM",17,0)
 S X1=+X I 'X1!(X1=1200)!(X1=2400) S X=$S(X1=1200:"NOON",1:"MID") G DNE
"RTN","PRSATIM",18,0)
 S X1=$S(X1>1259:X1-1200,1:X1),X1=$E("000",0,4-$L(X1))_X1_$S(X=2400:"A",X>1159:"P",1:"A")
"RTN","PRSATIM",19,0)
 I "00^15^30^45"'[$E(X1,3,4) G ERR
"RTN","PRSATIM",20,0)
 S X=$E(X1,1,2)_":"_$E(X1,3,5)
"RTN","PRSATIM",21,0)
DNE K X1 Q
"RTN","PRSATIM",22,0)
ERR K X,X1 Q
"RTN","PRSATIM",23,0)
CNV ; Convert Start/Stop to minutes
"RTN","PRSATIM",24,0)
 ; X=start_"^"_stop  Output: Y=start(min)_"^"_stop(min)
"RTN","PRSATIM",25,0)
 S CNX=X,X=$P(CNX,"^",1),Y=0 D MIL S Y=Y\100*60+(Y#100),$P(CNX,"^",1)=Y
"RTN","PRSATIM",26,0)
 S X=$P(CNX,"^",2),Y=1 D MIL S Y=Y\100*60+(Y#100)
"RTN","PRSATIM",27,0)
 S Y=$P(CNX,"^",1)_"^"_Y K CNX Q
"RTN","PRSATIM",28,0)
MIL ; Convert from AM/PM to 2400
"RTN","PRSATIM",29,0)
 ; X=time Y: 0=Mid=0,1=Mid=2400 Output: Y=time in 2400
"RTN","PRSATIM",30,0)
 I X="MID"!(X="NOON") S Y=$S(X="NOON":1200,Y:2400,1:0) Q
"RTN","PRSATIM",31,0)
 S Y=$P(X,":",1)_$P(X,":",2),Y=+Y Q:X["A"
"RTN","PRSATIM",32,0)
 S:Y<1200 Y=Y+1200 Q
"RTN","PRSATIM",33,0)
HLP ; Time Help
"RTN","PRSATIM",34,0)
 D EN^DDIOL("     Time may be entered as 8A or 8a, 8:00A, 8:15A, 8:15AM or military")
"RTN","PRSATIM",35,0)
 D EN^DDIOL("     time: 0800, 1300; or MID or 12M for midnight; NOON or 12N for noon.")
"RTN","PRSATIM",36,0)
 D EN^DDIOL("     Time must be in quarter hours; e.g., 8A or 8:15A or 8:30A or 8:45A."),EN^DDIOL(" ")
"RTN","PRSATIM",37,0)
 Q
"RTN","PRSATP")
0^43^B32294391^B31400754
"RTN","PRSATP",1,0)
PRSATP ;HISC/REL,WIRMFO/MGD/PLT - Timekeeper Post Time ;2/24/10
"RTN","PRSATP",2,0)
 ;;4.0;PAID;**22,57,69,92,102,93,112,126**;Sep 21, 1995;Build 59
"RTN","PRSATP",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSATP",4,0)
 ; input (from calling option)
"RTN","PRSATP",5,0)
 ;   PTPF - (optional) part-time physician flag, true (=1) when called
"RTN","PRSATP",6,0)
 ;          by the posting option for part-time physicians with a memo.
"RTN","PRSATP",7,0)
 ;
"RTN","PRSATP",8,0)
 N GLOB ; global reference for employee's time & attendance record.
"RTN","PRSATP",9,0)
 N PRSDT
"RTN","PRSATP",10,0)
 S PRSTLV=2 D ^PRSAUTL G:TLI<1 EX S %DT="X",X="T+3" D ^%DT
"RTN","PRSATP",11,0)
 S %DT="AEPX",%DT("A")="Posting Date: ",%DT("B")="T-1",%DT(0)=-Y W ! D ^%DT
"RTN","PRSATP",12,0)
 G:Y<1 EX S (PRSDT,D1)=Y S Y=$G(^PRST(458,"AD",D1)),PPI=$P(Y,"^",1),DAY=$P(Y,"^",2)
"RTN","PRSATP",13,0)
 I PPI="" W !!,$C(7),"Pay Period is Not Open Yet!" G EX
"RTN","PRSATP",14,0)
 S PPE=$P($G(^PRST(458,PPI,0)),"^",1),DTE=$P($G(^PRST(458,PPI,2)),"^",DAY),DTI=$P($G(^(1)),"^",DAY)
"RTN","PRSATP",15,0)
D2 W !!,"Would you like to edit the T & A RECORDs in alphabetical order" S %=1 D YN^DICN I % S LP=% G EX:%=-1,LOOP:%=1,NME
"RTN","PRSATP",16,0)
 W !!,"Answer YES if you want all RECORDs brought up for which no data"
"RTN","PRSATP",17,0)
 W !,"has been entered." G D2
"RTN","PRSATP",18,0)
 ;
"RTN","PRSATP",19,0)
 ;
"RTN","PRSATP",20,0)
LOOP ;
"RTN","PRSATP",21,0)
 S LP=1,NN=""
"RTN","PRSATP",22,0)
 F  S NN=$O(^PRSPC("ATL"_TLE,NN)) Q:NN=""  F DFN=0:0 S DFN=$O(^PRSPC("ATL"_TLE,NN,DFN)) Q:DFN<1  I $$PTPSCR(DFN,PRSDT,$G(PTPF)) S GLOB="" D POST D:GLOB]"" UNLOCK^PRSLIB00(GLOB),NURSEPOC^PRSNEETP(TLI,PPI,DFN,PRSDT) I 'LP G EX
"RTN","PRSATP",23,0)
 G EX
"RTN","PRSATP",24,0)
NME K DIC S DIC("A")="Select EMPLOYEE: ",DIC("S")="I $P(^(0),""^"",8)=TLE,$D(^PRST(458,PPI,""E"",+Y)),$$PTPSCR^PRSATP(+Y,PRSDT,$G(PTPF))",DIC(0)="AEQM",DIC="^PRSPC(",D="ATL"_TLE W ! D IX^DIC S DFN=+Y K DIC
"RTN","PRSATP",25,0)
 G:DFN<1 EX S GLOB="" D POST D:GLOB]"" UNLOCK^PRSLIB00(GLOB),NURSEPOC^PRSNEETP(TLI,PPI,DFN,PRSDT) G NME
"RTN","PRSATP",26,0)
POST S TC=$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),"^",2),TC2=$P($G(^(0)),"^",13)
"RTN","PRSATP",27,0)
 I 'TC Q:LP'=2  W !!?5,"This Employee has no tour entered for this date." Q
"RTN","PRSATP",28,0)
 I "T"'[$P($G(^PRST(458,PPI,"E",DFN,0)),"^",2) W:LP=2 $C(7),!!,"This Employee has already been sent to Payroll." Q
"RTN","PRSATP",29,0)
 S STAT=$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,10)),"^",1)
"RTN","PRSATP",30,0)
 I LP=1,"1 3 4"[TC!(STAT'="") Q
"RTN","PRSATP",31,0)
 ;
"RTN","PRSATP",32,0)
 ; check if ESR is approved when posting PT Phy with memo
"RTN","PRSATP",33,0)
 I $G(PTPF),$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,7)),U)=5 D  Q:'Y!$D(DIRUT)
"RTN","PRSATP",34,0)
 . W $C(7),!
"RTN","PRSATP",35,0)
 . W !,"This day was auto-posted from an approved Electronic Subsidiary Record (ESR)."
"RTN","PRSATP",36,0)
 . W !,"Normally, changes should be accomplished by having the T & L supervisor return"
"RTN","PRSATP",37,0)
 . W !,"the ESR day to the part-time physician for correction."
"RTN","PRSATP",38,0)
 . W !,"An exception to the above is when AWOL, On Suspension, or Non-Pay must be"
"RTN","PRSATP",39,0)
 . W !,"posted, since those can not be entered via the ESR.",!
"RTN","PRSATP",40,0)
 . S DIR(0)="Y"
"RTN","PRSATP",41,0)
 . S DIR("A")="Do you want to manually post this day on the timecard"
"RTN","PRSATP",42,0)
 . S DIR("B")="NO"
"RTN","PRSATP",43,0)
 . D ^DIR K DIR
"RTN","PRSATP",44,0)
 ;
"RTN","PRSATP",45,0)
 ; lock employee record for editing by timekeeper
"RTN","PRSATP",46,0)
 I '$$AVAILREC^PRSLIB00("TK",.GLOB,.STOP) S:LP=1&$G(STOP) LP=0 Q
"RTN","PRSATP",47,0)
 D ^PRSADP1,LP,^PRSATP2,^PRSAENT
"RTN","PRSATP",48,0)
 G P0:TC>4,P0:TC=2,P0:TC=3,P3:TC=4,P1
"RTN","PRSATP",49,0)
P0 R !!,"Did Employee Only Work Scheduled Tour? ",X:DTIME S:'$T X="^^" S:X["^^" LP=0 Q:X["^"  S X=$TR(X,"yesnor","YESNOR")
"RTN","PRSATP",50,0)
 S:X="" X="*" I $P("YES",X,1)'="",$P("NO",X,1)'="",X'="R" W $C(7),!?5," Answer YES or NO or R for Normal Posting with Remarks" G P0
"RTN","PRSATP",51,0)
 S X=$E(X,1) I "YR"'[X G P1
"RTN","PRSATP",52,0)
 S PTY=1 I STAT'="" K ^PRST(458,PPI,"E",DFN,"D",DAY,2),^(3)
"RTN","PRSATP",53,0)
 I TC=3 S $P(^PRST(458,PPI,"E",DFN,"D",DAY,2),"^",3)="RG",STAT="T"
"RTN","PRSATP",54,0)
 I STAT'="",$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),"^",12) D NOW^%DTC S NOW=%,TT="HW" D S0^PRSAPPH
"RTN","PRSATP",55,0)
 S LV="" D A2^PRSATP0:X="R" G UPD
"RTN","PRSATP",56,0)
P1 R !!,"Was Employee Absent the Entire Tour? ",X:DTIME S:'$T X="^" Q:X["^"  S X=$TR(X,"yesno","YESNO")
"RTN","PRSATP",57,0)
 S:X="" X="*" I $P("YES",X,1)'="",$P("NO",X,1)'="" W $C(7)," Answer YES or NO" G P1
"RTN","PRSATP",58,0)
 I X?1"Y".E D ^PRSATP0 Q:X["^"  G UPD
"RTN","PRSATP",59,0)
 I $E(ENT,1,2)["D" K ^PRST(458,PPI,"E",DFN,"D",DAY,2),^(3),^(10) Q
"RTN","PRSATP",60,0)
P3 S ZENT=$S($E(ENT,2)="H"&('$G(PTPF)):"RG ",$E(ENT,1,2)="00":"RG ",1:"")
"RTN","PRSATP",61,0)
 I TC=1 D OT S:$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),"^",12)&(AC="M2E") ZENT=ZENT_"HW " S ZENT=ZENT_"NP CP " G P31
"RTN","PRSATP",62,0)
 I TC=3!(TC=4) D LV S:$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),"^",12)&($E(ENT,22)) ZENT=ZENT_"HW " G P31
"RTN","PRSATP",63,0)
 D LV,OT S ZENT=ZENT_"TV TR " S:$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),"^",12) ZENT=ZENT_"HX HW "
"RTN","PRSATP",64,0)
P31 S DDSFILE=458,DDSFILE(1)=458.02,DA(2)=PPI,DA(1)=DFN,DA=DAY
"RTN","PRSATP",65,0)
 S Z=$G(^PRST(458,PPI,"E",DFN,"D",DAY,2)) K ZS
"RTN","PRSATP",66,0)
 S DR="[PRSA TP POST1]" D ^DDS K DS Q:'$D(ZS)
"RTN","PRSATP",67,0)
 I ZS'="" S ^PRST(458,PPI,"E",DFN,"D",DAY,2)=ZS,PTY=3 G UPD
"RTN","PRSATP",68,0)
 I $D(^PRST(458,PPI,"E",DFN,"D",DAY,2)) K ^(2),^(3),^(10)
"RTN","PRSATP",69,0)
 Q
"RTN","PRSATP",70,0)
UPD ; Update status
"RTN","PRSATP",71,0)
 D NOW^%DTC
"RTN","PRSATP",72,0)
 S $P(^PRST(458,PPI,"E",DFN,"D",DAY,10),"^",1,4)="T^"_DUZ_"^"_%_"^"_PTY
"RTN","PRSATP",73,0)
 N DAH,DBH,HOL,QUIT
"RTN","PRSATP",74,0)
 S (DAH,DBH,HOL,QUIT)=""
"RTN","PRSATP",75,0)
 ;
"RTN","PRSATP",76,0)
 ; Check to holiday encapsulated by a form a non-pay
"RTN","PRSATP",77,0)
 D HENCAP^PRSATP3(PPI,DFN,DAY,.DBH,.HOL,.DAH,.QUIT)
"RTN","PRSATP",78,0)
 Q:QUIT
"RTN","PRSATP",79,0)
 D UPDT^PRSATP3(DFN,DBH,HOL,DAH)
"RTN","PRSATP",80,0)
 K DAH,DBH,HOL,QUIT
"RTN","PRSATP",81,0)
 Q
"RTN","PRSATP",82,0)
LP W !!,"Enter '^' to bypass this employee." W:LP=1 " Enter '^^' to stop T&L editing." W ! Q
"RTN","PRSATP",83,0)
LV S Z1="30 31 31 31 32 33 28 35 35 30 36 37 38",Z2="AL SL CB AD NL WP CU AA DL RL NP CP HX"
"RTN","PRSATP",84,0)
 ;
"RTN","PRSATP",85,0)
 ; Check to see if the employee is entitled to Military Leave and add
"RTN","PRSATP",86,0)
 ; ML to list if they are.  Added to be compliant with Public Law
"RTN","PRSATP",87,0)
 ; 106-554.
"RTN","PRSATP",88,0)
 S:$E(ENT,34) Z1=Z1_" 34",Z2=Z2_" ML"
"RTN","PRSATP",89,0)
 ;9/3 month employee entitled RS with recess hours in file# 458.8
"RTN","PRSATP",90,0)
 S:$E(ENT,5)&$P($$RSHR^PRSU1B2(DFN,PPE),U,DAY>7+1) Z1=Z1_" 5",Z2=Z2_" RS"
"RTN","PRSATP",91,0)
 F K=1:1:$L(Z1," ") I $E(ENT,$P(Z1," ",K)) S ZENT=ZENT_$P(Z2," ",K)_" "
"RTN","PRSATP",92,0)
 QUIT
"RTN","PRSATP",93,0)
 ;
"RTN","PRSATP",94,0)
OT ; Get entitled out-of-tour types of time
"RTN","PRSATP",95,0)
 S Z1="12 28 26",Z2="OT CT ON" F K=1:1:3 I $E(ENT,$P(Z1," ",K)) S ZENT=ZENT_$P(Z2," ",K)_" " I ZENT'["UN" S ZENT=ZENT_"UN "
"RTN","PRSATP",96,0)
 I $E(ENT,29),'$E(ENT,26) S ZENT=ZENT_"SB " S:ZENT'["UN" ZENT=ZENT_"UN "
"RTN","PRSATP",97,0)
 ; Allow Stand By for employees w/ Prem Pay Ind = W or V
"RTN","PRSATP",98,0)
 I $E(ENT,29),$E(ENT,26),"^W^V^"[(U_PMP_U) S ZENT=ZENT_"SB " S:ZENT'["UN" ZENT=ZENT_"UN "
"RTN","PRSATP",99,0)
 Q
"RTN","PRSATP",100,0)
EX ;clean up lock global which is set in $$AVAILREC^PRSLIB00
"RTN","PRSATP",101,0)
 K ^TMP($J,"LOCK")
"RTN","PRSATP",102,0)
 ;generic cleanup
"RTN","PRSATP",103,0)
 G KILL^XUSCLEAN
"RTN","PRSATP",104,0)
 ;
"RTN","PRSATP",105,0)
PTPSCR(PRSIEN,PSTDT,PTPF) ; part-time physician screen extrinsic function
"RTN","PRSATP",106,0)
 ; input
"RTN","PRSATP",107,0)
 ;   PRSIEN - Employee IEN (file 450)
"RTN","PRSATP",108,0)
 ;   PSTDT  - Date being posted (FileMan internal)
"RTN","PRSATP",109,0)
 ;   PTPF   - (opt) Part-time physician flag, equals true (1) when screen
"RTN","PRSATP",110,0)
 ;            should only allow selection of part-time physician with
"RTN","PRSATP",111,0)
 ;            memo and false (null or 0) when screen should only
"RTN","PRSATP",112,0)
 ;            allow selection of employees that are not part-time
"RTN","PRSATP",113,0)
 ;            physicians with memo.
"RTN","PRSATP",114,0)
 ; result
"RTN","PRSATP",115,0)
 ;   returns a boolean value (1 or 0) or null
"RTN","PRSATP",116,0)
 ;     =1 if employee passed screen
"RTN","PRSATP",117,0)
 ;        (PTPF true and employee is PTP with memo) OR
"RTN","PRSATP",118,0)
 ;        (PTPF false and employee is not PTP with memo)
"RTN","PRSATP",119,0)
 ;     =0 if employee did not pass screen
"RTN","PRSATP",120,0)
 ;     =null value if required inputs were not provided
"RTN","PRSATP",121,0)
 ;
"RTN","PRSATP",122,0)
 N PRSRET,PTPM
"RTN","PRSATP",123,0)
 S PTPF=$G(PTPF)
"RTN","PRSATP",124,0)
 S PRSRET="" ; init return
"RTN","PRSATP",125,0)
 I PRSIEN,PSTDT D
"RTN","PRSATP",126,0)
 . ; determine if employee is PT physician with memo on the posting date
"RTN","PRSATP",127,0)
 . S PTPM=$S($$MIEN^PRSPUT1(PRSIEN,PSTDT)>0:1,1:0)
"RTN","PRSATP",128,0)
 . ; apply screen
"RTN","PRSATP",129,0)
 . S PRSRET=$S(PTPF&PTPM:1,'PTPF&'PTPM:1,1:0)
"RTN","PRSATP",130,0)
 ;
"RTN","PRSATP",131,0)
 Q PRSRET
"RTN","PRSATP",132,0)
 ;
"RTN","PRSATP",133,0)
 ;PRSATP
"RTN","PRSN9A")
0^1^B5056202^n/a
"RTN","PRSN9A",1,0)
PRSN9A ;;WOIFO/PLT - RPC Nurs Location Extraction ; 08/14/2009  7:56 AM
"RTN","PRSN9A",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSN9A",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSN9A",4,0)
 QUIT
"RTN","PRSN9A",5,0)
 ;
"RTN","PRSN9A",6,0)
 ;.ret - rpc return value with return value type: global array
"RTN","PRSN9A",7,0)
 ;prsndt - rpc parameter 1 with type: literal date in format yyyymmdd
"RTN","PRSN9A",8,0)
NURSLOC(RET,PRSNDT) ;remote procedure call- extract all active nurse locations
"RTN","PRSN9A",9,0)
 N PRSNA,PRSNB,PRSNC,PRSNE,PRSNF,PRSNSEQ,PRSNLOC,PRSNSITE,PRSNGLB
"RTN","PRSN9A",10,0)
 ;convert yyyymmdd to fileman date
"RTN","PRSN9A",11,0)
 S PRSNDT=PRSNDT-17000000
"RTN","PRSN9A",12,0)
 ;get active location of the date
"RTN","PRSN9A",13,0)
 ;prsnloc(ien of file# 211.4)=^1-location name, ^2-instituion name
"RTN","PRSN9A",14,0)
 ;^3-institution ien of file# 4 ^4-station # (field #99 of file #4)
"RTN","PRSN9A",15,0)
 K PRSNLOC D ACTIVLOC^PRSNUT01(.PRSNLOC,PRSNDT)
"RTN","PRSN9A",16,0)
 K ^TMP("PRSN",$J,"RPCLOC") S PRSNGLB=$NAME(^TMP("PRSN",$J,"RPCLOC"))
"RTN","PRSN9A",17,0)
 ;assembly records
"RTN","PRSN9A",18,0)
 S (PRSNSEQ,PRSNA)=0 F  S PRSNA=$O(PRSNLOC(PRSNA)) QUIT:'PRSNA  S PRSNB=PRSNLOC(PRSNA),PRSNC=$G(^NURSF(211.4,PRSNA,1)) D
"RTN","PRSN9A",19,0)
 . ;location records
"RTN","PRSN9A",20,0)
 . S PRSNLOC=+^NURSF(211.4,PRSNA,0)_"^"_$P(PRSNB,U)_"^"_$P(PRSNB,U,3)_"^"_$P(PRSNB,U,2)_"^"_$P(PRSNC,U,5)_"^"_$S($P(PRSNC,U,6):$P(^NURSF(212.8,$P(PRSNC,U,6),0),U),1:"")
"RTN","PRSN9A",21,0)
 . S $P(PRSNLOC,U,10)=$P(PRSNB,U,4)
"RTN","PRSN9A",22,0)
 . S PRSNSEQ=PRSNSEQ+1,@PRSNGLB@(PRSNSEQ)=PRSNA_"^L^"_PRSNLOC
"RTN","PRSN9A",23,0)
 . ;ward records in mas ward multiple field #3 of file 211.4
"RTN","PRSN9A",24,0)
 . S PRSNE=0 F  S PRSNE=$O(^NURSF(211.4,PRSNA,3,PRSNE)) QUIT:'PRSNE  S PRSNF=^(PRSNE,0) D
"RTN","PRSN9A",25,0)
 .. S:PRSNF $P(PRSNLOC,U,7,8)=+PRSNF_"^"_$P(^DIC(42,+PRSNF,0),U)
"RTN","PRSN9A",26,0)
 .. S PRSNSEQ=PRSNSEQ+1,@PRSNGLB@(PRSNSEQ)=PRSNA_"^W^"_PRSNLOC
"RTN","PRSN9A",27,0)
 .. QUIT
"RTN","PRSN9A",28,0)
 . QUIT
"RTN","PRSN9A",29,0)
 ;
"RTN","PRSN9A",30,0)
 ;set the header node
"RTN","PRSN9A",31,0)
 S PRSNSITE=$P($G(^XMB(1,1,"XUS")),"^",17),PRSNSITE=$S(+PRSNSITE>0:$P($G(^DIC(4,PRSNSITE,99)),"^",1),1:"")
"RTN","PRSN9A",32,0)
 S @PRSNGLB@(0)=PRSNSITE_"^"_PRSNSEQ
"RTN","PRSN9A",33,0)
 S RET=$NAME(^TMP("PRSN",$J,"RPCLOC"))
"RTN","PRSN9A",34,0)
 QUIT
"RTN","PRSN9A",35,0)
 ;
"RTN","PRSN9B")
0^2^B2702215^n/a
"RTN","PRSN9B",1,0)
PRSN9B ;;WOIFO/PLT - RPC POC Daily Time Extraction ; 08/14/2009  7:56 AM
"RTN","PRSN9B",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSN9B",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSN9B",4,0)
 QUIT
"RTN","PRSN9B",5,0)
 ;
"RTN","PRSN9B",6,0)
 ;.ret - rpc return value with return value type: global array
"RTN","PRSN9B",7,0)
 ;prsnseq - rpc parameter 1 with type: literal after sequence number requested in format nnnn...
"RTN","PRSN9B",8,0)
 ;prsnrec - rpc parameter 2 with type: literal number of records requested in format nnn...
"RTN","PRSN9B",9,0)
POCTIME(RET,PRSNSEQ,PRSNREC) ;remote procedure call - extract poc daily time records
"RTN","PRSN9B",10,0)
 N PRSNA,PRSNB,PRSNC,PRSNSITE,PRSNGLB,PRSNEND
"RTN","PRSN9B",11,0)
 ;get the current last record in file #451.7
"RTN","PRSN9B",12,0)
 S PRSNEND=$O(^PRSN(451.7,":"),-1)
"RTN","PRSN9B",13,0)
 K ^TMP("PRSN",$J,"RPCPOC") S PRSNGLB=$NAME(^TMP("PRSN",$J,"RPCPOC"))
"RTN","PRSN9B",14,0)
 ;start record after prsnseq
"RTN","PRSN9B",15,0)
 S PRSNA=PRSNSEQ,PRSNB=0 F  S PRSNA=$O(^PRSN(451.7,PRSNA)),PRSNB=PRSNB+1 QUIT:PRSNA>PRSNEND!(PRSNB>PRSNREC)!'PRSNA  S @PRSNGLB@(PRSNA)=^(PRSNA,0)
"RTN","PRSN9B",16,0)
 ;set the header node
"RTN","PRSN9B",17,0)
 S PRSNSITE=$P($G(^XMB(1,1,"XUS")),"^",17),PRSNSITE=$S(+PRSNSITE>0:$P($G(^DIC(4,PRSNSITE,99)),"^",1),1:"")
"RTN","PRSN9B",18,0)
 S PRSNA=$O(@PRSNGLB@(0)),PRSNC=$O(@PRSNGLB@(":"),-1),PRSNB=PRSNB-1
"RTN","PRSN9B",19,0)
 S @PRSNGLB@(0)=PRSNSITE_"^"_PRSNA_"^"_PRSNC_"^"_PRSNB_"^"_PRSNEND
"RTN","PRSN9B",20,0)
 S RET=$NAME(^TMP("PRSN",$J,"RPCPOC"))
"RTN","PRSN9B",21,0)
 QUIT
"RTN","PRSN9B",22,0)
 ;
"RTN","PRSNAA01")
0^3^B36883552^n/a
"RTN","PRSNAA01",1,0)
PRSNAA01 ;WOIFO/DWA - Pay period approval for Nurse POC records;10/5/2009
"RTN","PRSNAA01",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNAA01",3,0)
 ;;Per VHA Directive 2004-038,this routine should not be modified.
"RTN","PRSNAA01",4,0)
 Q
"RTN","PRSNAA01",5,0)
EN ; Entry point for approval of POC records for a pay period.
"RTN","PRSNAA01",6,0)
 N A,B,DAY,DAYREC,DIC,DIR,DIRUT,DSPFLG,GROUP,GRPIEN,GRPSC,I,IEN200
"RTN","PRSNAA01",7,0)
 N IEN450,NURSNM,PAYPD,PREVPD,PRSD,PRSFLG,PRSIEN,PRSPD,PRSPDE
"RTN","PRSNAA01",8,0)
 N PRSPDI,PRSPRM,PRSSTAT,STOP,REC,SEG
"RTN","PRSNAA01",9,0)
 K ^TMP($J,"PRSNAA")
"RTN","PRSNAA01",10,0)
 D ACCESS^PRSNUT02(.GROUP,"A",DT)
"RTN","PRSNAA01",11,0)
 I $P($G(GROUP(0)),U,2)="E" D  Q
"RTN","PRSNAA01",12,0)
 . W !!,"There are no groups assigned or selected."
"RTN","PRSNAA01",13,0)
 ;
"RTN","PRSNAA01",14,0)
 S PRSPRM=$P(GROUP(0),U,2)
"RTN","PRSNAA01",15,0)
 S STOP=0
"RTN","PRSNAA01",16,0)
 S GRPIEN=0,GRPIEN=$O(GROUP(GRPIEN))
"RTN","PRSNAA01",17,0)
 I PRSPRM="N" S GRPSC=$P(GROUP(GRPIEN),U,4)
"RTN","PRSNAA01",18,0)
 S PRSPDI=$G(^PRST(458,"AD",DT)) S:PRSPDI="" PRSPDI=$G(^PRST(458,"AD",$O(^PRST(458,"AD",":"),-1)))
"RTN","PRSNAA01",19,0)
 I $P(PRSPDI,U,2)<12 S PRSPDI=+PRSPDI-1
"RTN","PRSNAA01",20,0)
 E  S PRSPDI=+PRSPDI
"RTN","PRSNAA01",21,0)
 ;
"RTN","PRSNAA01",22,0)
 D PREV
"RTN","PRSNAA01",23,0)
 I PRSFLG D SETPPD
"RTN","PRSNAA01",24,0)
 I 'PRSFLG W "There are no POC records to approve for this "_$S(PRSPRM="N":"Nurse Location.",1:"T&L Unit.")
"RTN","PRSNAA01",25,0)
 ;
"RTN","PRSNAA01",26,0)
 D CLEANUP
"RTN","PRSNAA01",27,0)
 ;
"RTN","PRSNAA01",28,0)
 Q
"RTN","PRSNAA01",29,0)
 ;
"RTN","PRSNAA01",30,0)
SETPPD ; back up default of current pay period if it doesn't have any data
"RTN","PRSNAA01",31,0)
 S PRSPDI=$O(^TMP($J,"PRSNAA",PRSPDI+1),-1)
"RTN","PRSNAA01",32,0)
 ;
"RTN","PRSNAA01",33,0)
 N DIC,X,Y,DUOUT,DTOUT
"RTN","PRSNAA01",34,0)
 S DIC("B")=PRSPDI
"RTN","PRSNAA01",35,0)
 S DIC="^PRSN(451,",DIC(0)="AEQMZ"
"RTN","PRSNAA01",36,0)
 S DIC("A")="Select a Pay Period: "
"RTN","PRSNAA01",37,0)
 S DIC("S")="I +Y'>PRSPDI&($D(^TMP($J,""PRSNAA"",+Y)))"
"RTN","PRSNAA01",38,0)
 D ^DIC
"RTN","PRSNAA01",39,0)
 Q:$D(DUOUT)!$D(DTOUT)!(+$G(Y)'>0)
"RTN","PRSNAA01",40,0)
 S PRSPDE=$P(^PRST(458,+Y,0),U)
"RTN","PRSNAA01",41,0)
 ;
"RTN","PRSNAA01",42,0)
 ;no need to have separate approval subroutines because
"RTN","PRSNAA01",43,0)
 ;they have already been filtered by PREV subroutine
"RTN","PRSNAA01",44,0)
 ;just set date to selected date and process
"RTN","PRSNAA01",45,0)
 I +Y<PRSPDI S PRSPDI=+Y
"RTN","PRSNAA01",46,0)
 D APPREV
"RTN","PRSNAA01",47,0)
 ;
"RTN","PRSNAA01",48,0)
 Q
"RTN","PRSNAA01",49,0)
PREV ;
"RTN","PRSNAA01",50,0)
 N PREVPD,PRSNAM
"RTN","PRSNAA01",51,0)
 S (PRSFLG,PRSIEN,PRSSTAT)=0
"RTN","PRSNAA01",52,0)
 F  S PRSIEN=$O(^PRSN(451,"AE",PRSIEN)) Q:'PRSIEN  D
"RTN","PRSNAA01",53,0)
 .; if the access parameter matches the current nurses location or T&L unit, then display
"RTN","PRSNAA01",54,0)
 .;
"RTN","PRSNAA01",55,0)
 . S PREVPD=0
"RTN","PRSNAA01",56,0)
 . S PRSNAM=$P($G(^PRSPC(PRSIEN,0)),U)
"RTN","PRSNAA01",57,0)
 . I PRSNAM="" S PRSNAM=" "
"RTN","PRSNAA01",58,0)
 . N PML,TLI,TLE
"RTN","PRSNAA01",59,0)
 . S PML=+$$PRIMLOC^PRSNUT03($P($G(^PRSPC(PRSIEN,200)),U))
"RTN","PRSNAA01",60,0)
 . I PRSPRM="N"&(PML=+GROUP(GRPIEN)) D
"RTN","PRSNAA01",61,0)
 .. F  S PREVPD=$O(^PRSN(451,"AE",PRSIEN,PREVPD)) Q:'PREVPD!(PREVPD>PRSPDI)  D
"RTN","PRSNAA01",62,0)
 ... S ^TMP($J,"PRSNAA",PREVPD,PRSNAM,PRSIEN)="",PRSFLG=1
"RTN","PRSNAA01",63,0)
 . I PRSPRM="T" D
"RTN","PRSNAA01",64,0)
 .. S TLE=$P($G(^PRSPC(PRSIEN,0)),U,8)
"RTN","PRSNAA01",65,0)
 .. S TLI=$S(TLE="":"",1:$O(^PRST(455.5,"B",TLE,"")))
"RTN","PRSNAA01",66,0)
 .. F  S PREVPD=$O(^PRSN(451,"AE",PRSIEN,PREVPD)) Q:'PREVPD!(PREVPD>PRSPDI)  D
"RTN","PRSNAA01",67,0)
 ... ;separated employee, get T&L from archived time record
"RTN","PRSNAA01",68,0)
 ... I TLE="" D
"RTN","PRSNAA01",69,0)
 .... N PAYPRD
"RTN","PRSNAA01",70,0)
 .... S PAYPRD=$P($G(^PRST(458,PREVPD,0)),U)
"RTN","PRSNAA01",71,0)
 .... D CHECKTLE^PRSADP2(PAYPRD,PRSIEN,.TLE)
"RTN","PRSNAA01",72,0)
 .... S TLI=$S(TLE="":"",1:$O(^PRST(455.5,"B",TLE,"")))
"RTN","PRSNAA01",73,0)
 ... I TLI=+GROUP(GRPIEN) D
"RTN","PRSNAA01",74,0)
 .... S ^TMP($J,"PRSNAA",PREVPD,PRSNAM,PRSIEN)="",PRSFLG=1
"RTN","PRSNAA01",75,0)
 I PRSFLG D DSPREV
"RTN","PRSNAA01",76,0)
 W !!
"RTN","PRSNAA01",77,0)
 ;
"RTN","PRSNAA01",78,0)
 Q
"RTN","PRSNAA01",79,0)
 ;
"RTN","PRSNAA01",80,0)
DSPREV ;  Display previous pay period records
"RTN","PRSNAA01",81,0)
 ;
"RTN","PRSNAA01",82,0)
 W !!,"The following previous pay periods have unapproved POC records"
"RTN","PRSNAA01",83,0)
 W !,"in this "_$S(PRSPRM="N":"Nurse Location",1:"T&L Unit")_":",!!
"RTN","PRSNAA01",84,0)
 S PREVPD=0
"RTN","PRSNAA01",85,0)
 F  S PREVPD=$O(^TMP($J,"PRSNAA",PREVPD)) Q:'PREVPD  D
"RTN","PRSNAA01",86,0)
 . W "Pay period ",$P(^PRST(458,PREVPD,0),U),!
"RTN","PRSNAA01",87,0)
 ;
"RTN","PRSNAA01",88,0)
 Q
"RTN","PRSNAA01",89,0)
 ;
"RTN","PRSNAA01",90,0)
APPROV(PRSPD,PRSIEN) ; Complete approval process
"RTN","PRSNAA01",91,0)
 N DAY,DAYREC,REC,SEG,DSPFLG,Y
"RTN","PRSNAA01",92,0)
 S DSPFLG=0
"RTN","PRSNAA01",93,0)
 F DAY=1:1:14 D
"RTN","PRSNAA01",94,0)
 . K DAYREC
"RTN","PRSNAA01",95,0)
 . D L1^PRSNRUT1(.DAYREC,PRSPD,PRSIEN,DAY)
"RTN","PRSNAA01",96,0)
 . Q:'$O(DAYREC(0))
"RTN","PRSNAA01",97,0)
 . S SEG=0,DSPFLG=1
"RTN","PRSNAA01",98,0)
 . F  S SEG=$O(DAYREC(SEG)) Q:'SEG  D
"RTN","PRSNAA01",99,0)
 . . S REC(DAY,SEG)=DAYREC(SEG)
"RTN","PRSNAA01",100,0)
 . D SETREC(.REC,PRSPD)
"RTN","PRSNAA01",101,0)
 Q:'DSPFLG
"RTN","PRSNAA01",102,0)
 D DSPMM(PRSIEN,PRSPD)
"RTN","PRSNAA01",103,0)
 Q:STOP
"RTN","PRSNAA01",104,0)
 D HDR(PRSPD,PRSIEN)
"RTN","PRSNAA01",105,0)
 D DSPREC(.REC)
"RTN","PRSNAA01",106,0)
 Q:STOP
"RTN","PRSNAA01",107,0)
 D ACTION(PRSPD,PRSIEN)
"RTN","PRSNAA01",108,0)
 Q
"RTN","PRSNAA01",109,0)
 ;
"RTN","PRSNAA01",110,0)
APPREV ; Process previous pay periods
"RTN","PRSNAA01",111,0)
 N A,B,C
"RTN","PRSNAA01",112,0)
 ;
"RTN","PRSNAA01",113,0)
 S A=PRSPDI,B=""
"RTN","PRSNAA01",114,0)
 F  S B=$O(^TMP($J,"PRSNAA",A,B)) Q:(B="")!STOP  D
"RTN","PRSNAA01",115,0)
 . S C=""
"RTN","PRSNAA01",116,0)
 . F  S C=$O(^TMP($J,"PRSNAA",A,B,C)) Q:(C="")!STOP  D
"RTN","PRSNAA01",117,0)
 .. D APPROV(A,C)
"RTN","PRSNAA01",118,0)
 Q
"RTN","PRSNAA01",119,0)
 ;
"RTN","PRSNAA01",120,0)
SETREC(REC,PAYPD) ; Set up record for display
"RTN","PRSNAA01",121,0)
 ;
"RTN","PRSNAA01",122,0)
 N A,B
"RTN","PRSNAA01",123,0)
 S (A,B)=0
"RTN","PRSNAA01",124,0)
 F  S A=$O(REC(A)) Q:'A  D
"RTN","PRSNAA01",125,0)
 . F  S B=$O(REC(A,B)) Q:'B  D
"RTN","PRSNAA01",126,0)
 . . S:$P(REC(A,B),U,5)]""&($P(REC(A,B),U,5)?1.N) $P(REC(A,B),U,5)=$P($$ISACTIVE^PRSNUT01(DT,$P(REC(A,B),U,5)),U,2)
"RTN","PRSNAA01",127,0)
 . . S:$P(REC(A,B),U,6)]""&($P(REC(A,B),U,6)?1.N) $P(REC(A,B),U,6)=$P(^PRSN(451.5,$P(REC(A,B),U,6),0),U,2)
"RTN","PRSNAA01",128,0)
 . . S:$P(REC(A,B),U,8)]""&($P(REC(A,B),U,8)?1.N) $P(REC(A,B),U,8)=$P(^PRSN(451.6,$P(REC(A,B),U,8),0),U,2)
"RTN","PRSNAA01",129,0)
 . . QUIT
"RTN","PRSNAA01",130,0)
 . I $O(REC(A,0)) S $P(REC(A,$O(REC(A,0))),U,12)=$P(^PRST(458,PAYPD,2),U,A)
"RTN","PRSNAA01",131,0)
 . QUIT
"RTN","PRSNAA01",132,0)
 ;
"RTN","PRSNAA01",133,0)
 QUIT
"RTN","PRSNAA01",134,0)
 ;
"RTN","PRSNAA01",135,0)
DSPREC(REC) ; Display the record
"RTN","PRSNAA01",136,0)
 N A,B
"RTN","PRSNAA01",137,0)
 S (A,B)=0
"RTN","PRSNAA01",138,0)
 F  S A=$O(REC(A)) Q:'A  D  Q:STOP
"RTN","PRSNAA01",139,0)
 . F  S B=$O(REC(A,B)) Q:'B  D  Q:STOP
"RTN","PRSNAA01",140,0)
 . . W $P($P(REC(A,B),U,12)," "),?12,$P(REC(A,B),U),?21,$P(REC(A,B),U,3)
"RTN","PRSNAA01",141,0)
 . . W ?28,$P(REC(A,B),U,4),?38,$P($P(REC(A,B),U,5)," ")
"RTN","PRSNAA01",142,0)
 . . W ?51,$P($P(REC(A,B),U,6)," "),?64,$P($P(REC(A,B),U,8)," ")
"RTN","PRSNAA01",143,0)
 . . W ?77,$P(REC(A,B),U,7),!
"RTN","PRSNAA01",144,0)
 . . W $P($P(REC(A,B),U,12)," ",2,999),?12,$P(REC(A,B),U,2),?38
"RTN","PRSNAA01",145,0)
 . . W $P($P(REC(A,B),U,5)," ",2),?51,$P($P(REC(A,B),U,6)," ",2),?64
"RTN","PRSNAA01",146,0)
 . . W $P($P(REC(A,B),U,8)," ",2),!
"RTN","PRSNAA01",147,0)
 . . ;
"RTN","PRSNAA01",148,0)
 . . I (IOSL-6)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDR(PRSPD,PRSIEN) W !
"RTN","PRSNAA01",149,0)
 . W !
"RTN","PRSNAA01",150,0)
 ;
"RTN","PRSNAA01",151,0)
 Q
"RTN","PRSNAA01",152,0)
 ;
"RTN","PRSNAA01",153,0)
DSPMM(PRSIEN,PRSPD) ; Display mismatch report
"RTN","PRSNAA01",154,0)
 D PPMM^PRSNRMM(PRSIEN,PRSPD,,.STOP)
"RTN","PRSNAA01",155,0)
 Q:STOP
"RTN","PRSNAA01",156,0)
 W !!,?5,"Return to Approvals.",!
"RTN","PRSNAA01",157,0)
 S STOP=$$ASK^PRSLIB00(1)
"RTN","PRSNAA01",158,0)
 Q
"RTN","PRSNAA01",159,0)
 ;
"RTN","PRSNAA01",160,0)
ACTION(A,B) ; Approve or bypass current record
"RTN","PRSNAA01",161,0)
 N DIR,X,Y
"RTN","PRSNAA01",162,0)
 S PAYPD=A,PRSIEN=B
"RTN","PRSNAA01",163,0)
 S DIR("A")="Enter an 'A' to Approve or Return to Bypass: "
"RTN","PRSNAA01",164,0)
 S DIR(0)="SAO^A:Approve" D ^DIR ;K DIR
"RTN","PRSNAA01",165,0)
 I Y="" Q
"RTN","PRSNAA01",166,0)
 I $D(DIRUT) S STOP=1 Q
"RTN","PRSNAA01",167,0)
 I Y="A" D UPDTPOC^PRSNCGR1(PAYPD,PRSIEN,Y)
"RTN","PRSNAA01",168,0)
 ;
"RTN","PRSNAA01",169,0)
 Q
"RTN","PRSNAA01",170,0)
 ;
"RTN","PRSNAA01",171,0)
HDR(PAYPD,IEN450) ;
"RTN","PRSNAA01",172,0)
 ;
"RTN","PRSNAA01",173,0)
 S PRSPDE=$$GET1^DIQ(458,PAYPD,.01),PRSIEN=IEN450
"RTN","PRSNAA01",174,0)
 W:$E(IOST,1,2)="C-" @IOF
"RTN","PRSNAA01",175,0)
 W $$GET1^DIQ(450,PRSIEN,.01),?26,"Approve Pay Period POC Records"
"RTN","PRSNAA01",176,0)
 W ?66,"Pay Pd: ",PRSPDE,!!
"RTN","PRSNAA01",177,0)
 W "Date",?12,"Start/",?20,"Meal",?26,"Type of",?38,"Location",?51
"RTN","PRSNAA01",178,0)
 W "Type of",?66,"OT",?76,"OT",!
"RTN","PRSNAA01",179,0)
 W ?12,"Stop",?27,"Time",?52,"Work",?64,"Reason",?75,"Mand",!
"RTN","PRSNAA01",180,0)
 F I=1:1:80 W "-"
"RTN","PRSNAA01",181,0)
 ;
"RTN","PRSNAA01",182,0)
 Q
"RTN","PRSNAA01",183,0)
 ;
"RTN","PRSNAA01",184,0)
CLEANUP ;
"RTN","PRSNAA01",185,0)
 K PRSIEN,PRSPDI,PRSPDE,GROUP,GRPIEN,GRPSC,REC,NURSNM,IEN200
"RTN","PRSNAA01",186,0)
 K PRSFLG,DSPFLG,PREVPD,PRSPRM,PRSSTAT,PRSD,A,B,Y,X,DIC
"RTN","PRSNAA01",187,0)
 K ^TMP($J,"PRSNAA")
"RTN","PRSNAA01",188,0)
 Q
"RTN","PRSNAC01")
0^4^B21805645^n/a
"RTN","PRSNAC01",1,0)
PRSNAC01 ;WOIFO/DWA - Approval for Corrected Nurse POC records;10/5/2009
"RTN","PRSNAC01",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNAC01",3,0)
 ;;Per VHA Directive 2004-038,this routine should not be modified.
"RTN","PRSNAC01",4,0)
 Q
"RTN","PRSNAC01",5,0)
EN ; Entry point for approval of POC records for a pay period.
"RTN","PRSNAC01",6,0)
 N A,CHECK,IEN200,PRSD,PRSPPD,PRSIEN,PRSSN,POCREC,PRSVER,POCSEG
"RTN","PRSNAC01",7,0)
 N POCCNT,DIR,FOUND,GROUP,GRPIEN,GRPSC,GRPNM,I,LOC,POCP,POCC,REC
"RTN","PRSNAC01",8,0)
 N STOP,ZEROFND,PRSDAY,PRSDIV,PRSDIVE,PRSDIVI,PRSPRM
"RTN","PRSNAC01",9,0)
 S STOP=0
"RTN","PRSNAC01",10,0)
 D ACCESS^PRSNUT02(.GROUP,"A",DT)
"RTN","PRSNAC01",11,0)
 I $P($G(GROUP(0)),U,2)="E" D  Q
"RTN","PRSNAC01",12,0)
 . W !!,"There are no groups assigned or selected."
"RTN","PRSNAC01",13,0)
 ;
"RTN","PRSNAC01",14,0)
 S PRSPRM=$P(GROUP(0),U,2)
"RTN","PRSNAC01",15,0)
 S GRPNM=0,GRPNM=$O(GROUP(GRPNM))
"RTN","PRSNAC01",16,0)
 S GRPIEN=$P(GROUP(GRPNM),U)
"RTN","PRSNAC01",17,0)
 I PRSPRM="N" S GRPSC=$P(^NURSF(211.4,GRPIEN,0),U)
"RTN","PRSNAC01",18,0)
 S PRSDIVI=$P(GROUP(GRPNM),U,2)
"RTN","PRSNAC01",19,0)
 S PRSDIVE=$P(GROUP(GRPNM),U,3)
"RTN","PRSNAC01",20,0)
 ;
"RTN","PRSNAC01",21,0)
 D LOCCOR
"RTN","PRSNAC01",22,0)
 ;
"RTN","PRSNAC01",23,0)
 Q
"RTN","PRSNAC01",24,0)
 ;
"RTN","PRSNAC01",25,0)
 ;
"RTN","PRSNAC01",26,0)
LOCCOR ;
"RTN","PRSNAC01",27,0)
 S LOC=0
"RTN","PRSNAC01",28,0)
 F  S LOC=$O(GROUP(LOC)) Q:LOC=""  D
"RTN","PRSNAC01",29,0)
 . I PRSPRM="N" S CHECK(+GROUP(LOC))=""
"RTN","PRSNAC01",30,0)
 . I PRSPRM="T" S CHECK(LOC)=""
"RTN","PRSNAC01",31,0)
 S (PRSDIV,ZEROFND)=0
"RTN","PRSNAC01",32,0)
 F  S PRSDIV=$O(^PRSN(451,"ACE",PRSDIV)) Q:'PRSDIV  D  Q:STOP
"RTN","PRSNAC01",33,0)
 . S PRSPPD=0
"RTN","PRSNAC01",34,0)
 . F  S PRSPPD=$O(^PRSN(451,"ACE",PRSDIV,PRSPPD)) Q:'PRSPPD  D  Q:STOP
"RTN","PRSNAC01",35,0)
 . . S PRSIEN=0
"RTN","PRSNAC01",36,0)
 . . F  S PRSIEN=$O(^PRSN(451,"ACE",PRSDIV,PRSPPD,PRSIEN)) Q:'PRSIEN  D  Q:STOP
"RTN","PRSNAC01",37,0)
 . . . I PRSPRM="N" D GRPLOC
"RTN","PRSNAC01",38,0)
 . . . I PRSPRM="T" D TLLOC
"RTN","PRSNAC01",39,0)
 . . . Q:'FOUND
"RTN","PRSNAC01",40,0)
 . . . S PRSDAY=0
"RTN","PRSNAC01",41,0)
 . . . F  S PRSDAY=$O(^PRSN(451,"ACE",PRSDIV,PRSPPD,PRSIEN,PRSDAY)) Q:'PRSDAY  D  Q:STOP
"RTN","PRSNAC01",42,0)
 . . . . K POCP
"RTN","PRSNAC01",43,0)
 . . . . D L1^PRSNRUT1(.POCP,PRSPPD,PRSIEN,PRSDAY,"P"),SETREC(.POCP)
"RTN","PRSNAC01",44,0)
 . . . . K POCC
"RTN","PRSNAC01",45,0)
 . . . . D L1^PRSNRUT1(.POCC,PRSPPD,PRSIEN,PRSDAY,"C"),SETREC(.POCC)
"RTN","PRSNAC01",46,0)
 . . . . D DSPMM
"RTN","PRSNAC01",47,0)
 . . . . Q:STOP
"RTN","PRSNAC01",48,0)
 . . . . D DISPTM
"RTN","PRSNAC01",49,0)
 . . . . Q:STOP
"RTN","PRSNAC01",50,0)
 . . . . D ACTION
"RTN","PRSNAC01",51,0)
 ;
"RTN","PRSNAC01",52,0)
 I 'ZEROFND W !!,"There are no corrected records to approve.",!!
"RTN","PRSNAC01",53,0)
 ;
"RTN","PRSNAC01",54,0)
 Q
"RTN","PRSNAC01",55,0)
 ;
"RTN","PRSNAC01",56,0)
DISPTM ;Display the time records
"RTN","PRSNAC01",57,0)
 D HDR
"RTN","PRSNAC01",58,0)
 W !,?(80-26)/2,"** Previous Time Record **",!
"RTN","PRSNAC01",59,0)
 D DSPREC(.POCP)
"RTN","PRSNAC01",60,0)
 W !,?(80-26)/2,"** Current Time Record **",!
"RTN","PRSNAC01",61,0)
 D DSPREC(.POCC)
"RTN","PRSNAC01",62,0)
 Q
"RTN","PRSNAC01",63,0)
 ;
"RTN","PRSNAC01",64,0)
GRPLOC ; Find records for selected group
"RTN","PRSNAC01",65,0)
 S FOUND=0
"RTN","PRSNAC01",66,0)
 I $D(CHECK(+$$PRIMLOC^PRSNUT03(^PRSPC(PRSIEN,200)))) S (FOUND,ZEROFND)=1
"RTN","PRSNAC01",67,0)
 ;
"RTN","PRSNAC01",68,0)
 Q
"RTN","PRSNAC01",69,0)
 ;
"RTN","PRSNAC01",70,0)
TLLOC ; Find records for selected T&L Unit
"RTN","PRSNAC01",71,0)
 S FOUND=0
"RTN","PRSNAC01",72,0)
 N TLE
"RTN","PRSNAC01",73,0)
 S TLE=$P(^PRSPC(PRSIEN,0),U,8)
"RTN","PRSNAC01",74,0)
 ;separated employee, get T&L from archived time record
"RTN","PRSNAC01",75,0)
 I TLE="" D
"RTN","PRSNAC01",76,0)
 .N PAYPRD
"RTN","PRSNAC01",77,0)
 .S PAYPRD=$P($G(^PRST(458,PRSPPD,0)),U)
"RTN","PRSNAC01",78,0)
 .D CHECKTLE^PRSADP2(PAYPRD,PRSIEN,.TLE)
"RTN","PRSNAC01",79,0)
 .Q
"RTN","PRSNAC01",80,0)
 Q:TLE=""
"RTN","PRSNAC01",81,0)
 I $D(CHECK(TLE)) S (FOUND,ZEROFND)=1
"RTN","PRSNAC01",82,0)
 ;
"RTN","PRSNAC01",83,0)
 Q
"RTN","PRSNAC01",84,0)
 ;
"RTN","PRSNAC01",85,0)
SETREC(REC) ; Set up current record for display
"RTN","PRSNAC01",86,0)
 S A=0
"RTN","PRSNAC01",87,0)
 F  S A=$O(REC(A)) Q:'A  D
"RTN","PRSNAC01",88,0)
 . S PRSVER=$P(REC(A),U,11)
"RTN","PRSNAC01",89,0)
 . S:$P(REC(A),U,5)]""&($P(REC(A),U,5)?1.N) $P(REC(A),U,5)=$P($$ISACTIVE^PRSNUT01(DT,$P(REC(A),U,5)),U,2)
"RTN","PRSNAC01",90,0)
 . S:$P(REC(A),U,6)]""&($P(REC(A),U,6)?1.N) $P(REC(A),U,6)=$P(^PRSN(451.5,$P(REC(A),U,6),0),U,2)
"RTN","PRSNAC01",91,0)
 . S:$P(REC(A),U,8)]""&($P(REC(A),U,8)?1.N) $P(REC(A),U,8)=$P(^PRSN(451.6,$P(REC(A),U,8),0),U,2)
"RTN","PRSNAC01",92,0)
 . QUIT
"RTN","PRSNAC01",93,0)
 I $O(REC(0)) S $P(REC($O(REC(0))),U,12)=$P(^PRST(458,PRSPPD,2),U,PRSDAY)
"RTN","PRSNAC01",94,0)
 ;
"RTN","PRSNAC01",95,0)
 Q
"RTN","PRSNAC01",96,0)
 ;
"RTN","PRSNAC01",97,0)
DSPREC(REC) ;  Display current record
"RTN","PRSNAC01",98,0)
 N A
"RTN","PRSNAC01",99,0)
 S A=0
"RTN","PRSNAC01",100,0)
 ;I REC(0)=0 W ?(80-20)/2,"Time Record Deleted",!
"RTN","PRSNAC01",101,0)
 F  S A=$O(REC(A)) Q:'A  D  Q:STOP
"RTN","PRSNAC01",102,0)
 . W $P($P(REC(A),U,12)," "),?12,$P(REC(A),U),?21,$P(REC(A),U,3)
"RTN","PRSNAC01",103,0)
 . W ?28,$P(REC(A),U,4),?38,$P($P(REC(A),U,5)," ")
"RTN","PRSNAC01",104,0)
 . W ?51,$P($P(REC(A),U,6)," "),?64,$P($P(REC(A),U,8)," ")
"RTN","PRSNAC01",105,0)
 . W ?77,$P(REC(A),U,7),!
"RTN","PRSNAC01",106,0)
 . W $P($P(REC(A),U,12)," ",2,999),?12,$P(REC(A),U,2),?38
"RTN","PRSNAC01",107,0)
 . W $P($P(REC(A),U,5)," ",2),?51,$P($P(REC(A),U,6)," ",2),?64
"RTN","PRSNAC01",108,0)
 . W $P($P(REC(A),U,8)," ",2),!
"RTN","PRSNAC01",109,0)
 . ;
"RTN","PRSNAC01",110,0)
 . I (IOSL-6)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDR W !
"RTN","PRSNAC01",111,0)
 ;
"RTN","PRSNAC01",112,0)
 Q
"RTN","PRSNAC01",113,0)
 ;
"RTN","PRSNAC01",114,0)
DSPMM ;  Display the mismatch report before asking for approval
"RTN","PRSNAC01",115,0)
 D PPMM^PRSNRMM(PRSIEN,PRSPPD,,.STOP)
"RTN","PRSNAC01",116,0)
 Q:STOP
"RTN","PRSNAC01",117,0)
 W !!,?5,"Return to Approvals.",!
"RTN","PRSNAC01",118,0)
 S STOP=$$ASK^PRSLIB00(1)
"RTN","PRSNAC01",119,0)
 ;
"RTN","PRSNAC01",120,0)
 Q
"RTN","PRSNAC01",121,0)
 ;
"RTN","PRSNAC01",122,0)
ACTION ;  Approve or Bypass current record
"RTN","PRSNAC01",123,0)
 N DIR,X,Y
"RTN","PRSNAC01",124,0)
 S DIR("A")="Enter an 'A' to Approve or Return to Bypass: "
"RTN","PRSNAC01",125,0)
 S DIR(0)="SAO^A:Approve" D ^DIR
"RTN","PRSNAC01",126,0)
 I Y="" Q
"RTN","PRSNAC01",127,0)
 I Y["^" S STOP=1 Q
"RTN","PRSNAC01",128,0)
 I Y="A" D UPDTPOCD^PRSNCGP(PRSPPD,PRSIEN,PRSDAY,PRSVER,Y)
"RTN","PRSNAC01",129,0)
 ;
"RTN","PRSNAC01",130,0)
 Q
"RTN","PRSNAC01",131,0)
 ;
"RTN","PRSNAC01",132,0)
HDR ;  Header for display of records
"RTN","PRSNAC01",133,0)
 W:$E(IOST,1,2)="C-" @IOF
"RTN","PRSNAC01",134,0)
 W $P(^PRSPC(PRSIEN,0),U),?(80-28)/2,"Approve Corrected POC Record"
"RTN","PRSNAC01",135,0)
 W ?63,$S(PRSPRM="N":"Location: "_GRPNM,1:"T&L Unit: "_GRPNM),!
"RTN","PRSNAC01",136,0)
 W ?58,"SSN: ",$E($P(^PRSPC(PRSIEN,0),U,9)),"XXXXX",$E($P(^PRSPC(PRSIEN,0),U,9),6,9),!
"RTN","PRSNAC01",137,0)
 W "Date",?12,"Start/",?20,"Meal",?26,"Type of",?38,"Location",?51
"RTN","PRSNAC01",138,0)
 W "Type of",?66,"OT",?76,"OT",!
"RTN","PRSNAC01",139,0)
 W ?12,"Stop",?27,"Time",?52,"Work",?64,"Reason",?75,"Mand",!
"RTN","PRSNAC01",140,0)
 F I=1:1:80 W "-"
"RTN","PRSNAC01",141,0)
 ;
"RTN","PRSNAC01",142,0)
 ;
"RTN","PRSNAC01",143,0)
 Q
"RTN","PRSNCAPE")
0^5^B32183609^n/a
"RTN","PRSNCAPE",1,0)
PRSNCAPE ;WOIFO/DWA - PAID PARAMETER ENTER/EDIT ;07/30/09
"RTN","PRSNCAPE",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNCAPE",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSNCAPE",4,0)
 ;
"RTN","PRSNCAPE",5,0)
 Q
"RTN","PRSNCAPE",6,0)
 ;
"RTN","PRSNCAPE",7,0)
 ;  Key variables used in this routine:
"RTN","PRSNCAPE",8,0)
 ;
"RTN","PRSNCAPE",9,0)
 ;     PPI,PPE,PPST = Current pay period internal value, external
"RTN","PRSNCAPE",10,0)
 ;                    value and start date
"RTN","PRSNCAPE",11,0)
 ;     LPPE,LPST    = Last pay period external value and start date
"RTN","PRSNCAPE",12,0)
 ;     NPPE,NPST    = Next pay period external value and start date
"RTN","PRSNCAPE",13,0)
 ;
"RTN","PRSNCAPE",14,0)
 ;     IENS         = Internal entry number of selected institution
"RTN","PRSNCAPE",15,0)
 ;     IENS2        = External value of selected institution
"RTN","PRSNCAPE",16,0)
 ;
"RTN","PRSNCAPE",17,0)
 ;     PRSFDA       = A name spaced FileMan Data Array
"RTN","PRSNCAPE",18,0)
 ;     PAYPD        = External value of selected effective pay period
"RTN","PRSNCAPE",19,0)
 ;     PPDI         = Internal entry number of selected effective
"RTN","PRSNCAPE",20,0)
 ;                    pay period
"RTN","PRSNCAPE",21,0)
 ;
"RTN","PRSNCAPE",22,0)
 ;
"RTN","PRSNCAPE",23,0)
EN ; Entry point for PAID Application Parameter Edit
"RTN","PRSNCAPE",24,0)
 N OUT S OUT=0 D SHODIVAC(.OUT) Q:OUT
"RTN","PRSNCAPE",25,0)
 K DIC
"RTN","PRSNCAPE",26,0)
 N PPI,PPE,PPST,LPPE,LPST,NPPE,NPST,IENS,IENS2,PRSFDA,PAYPD,PPDI
"RTN","PRSNCAPE",27,0)
 N X1,X2,X,Y,ORIGPP,NAM,NAM2
"RTN","PRSNCAPE",28,0)
 S PPI=$P($G(^PRST(458,"AD",DT)),"^")
"RTN","PRSNCAPE",29,0)
 I 'PPI W !!,"Current Pay Period must be open for testing.  Quitting." Q
"RTN","PRSNCAPE",30,0)
 S PPE=$P(^PRST(458,PPI,0),"^")
"RTN","PRSNCAPE",31,0)
 S LPPE=$P(^PRST(458,PPI-1,0),"^")
"RTN","PRSNCAPE",32,0)
 S NPPE=$E($$NXTPP^PRSAPPU(PPE),3,7)
"RTN","PRSNCAPE",33,0)
 S PPST=$P(^PRST(458,PPI,1),"^")
"RTN","PRSNCAPE",34,0)
 S LPST=$P(^PRST(458,PPI-1,1),"^")
"RTN","PRSNCAPE",35,0)
 S X1=PPST,X2=14 D C^%DTC S NPST=X
"RTN","PRSNCAPE",36,0)
 D HDR
"RTN","PRSNCAPE",37,0)
 N DIC,X,Y,DUOUT,DTOUT,DLAYGO
"RTN","PRSNCAPE",38,0)
 S DIC="^PRST(456,",DIC(0)="ALEQMZ",DLAYGO=456,DIC("A")="Select Institution: "
"RTN","PRSNCAPE",39,0)
 D ^DIC
"RTN","PRSNCAPE",40,0)
 Q:$D(DUOUT)!$D(DTOUT)!(+Y'>0)
"RTN","PRSNCAPE",41,0)
 S IENS=+Y,IENS2=$P(Y,U,2)
"RTN","PRSNCAPE",42,0)
PPDS ; Set the effective pay period
"RTN","PRSNCAPE",43,0)
 S X=PPST D DTP^PRSAPPU
"RTN","PRSNCAPE",44,0)
 W !!!,"C = Current Pay Period beginning "_Y
"RTN","PRSNCAPE",45,0)
 S X=LPST D DTP^PRSAPPU
"RTN","PRSNCAPE",46,0)
 W !,"L = Last Pay Period beginning "_Y
"RTN","PRSNCAPE",47,0)
 S X=NPST D DTP^PRSAPPU
"RTN","PRSNCAPE",48,0)
 W !,"N = Next Pay Period beginning "_Y,!
"RTN","PRSNCAPE",49,0)
 N DIR,DIRUT,Y,PRSDT
"RTN","PRSNCAPE",50,0)
 S DIR(0)="SB^C:Current;N:Next;L:Last",DIR("A")="Select Effective Pay Period; Current, Next, Last"
"RTN","PRSNCAPE",51,0)
 D ^DIR K DIR Q:$D(DIRUT)
"RTN","PRSNCAPE",52,0)
 W !!
"RTN","PRSNCAPE",53,0)
 S PAYPD=$S(Y="C":PPE,Y="N":NPPE,1:LPPE)
"RTN","PRSNCAPE",54,0)
 ;
"RTN","PRSNCAPE",55,0)
 S PRSDT=$S(Y="C":PPST,Y="N":NPST,1:LPST)
"RTN","PRSNCAPE",56,0)
 ;
"RTN","PRSNCAPE",57,0)
 S PPDI=$O(^PRST(456,IENS,1,"B",PAYPD,0))
"RTN","PRSNCAPE",58,0)
 ;
"RTN","PRSNCAPE",59,0)
 S NAM=$$DIVACC^PRSNUT02(PRSDT,IENS2)
"RTN","PRSNCAPE",60,0)
 S ORIGPP=$P(NAM,U,2)
"RTN","PRSNCAPE",61,0)
 S NAM=$P(NAM,U)
"RTN","PRSNCAPE",62,0)
 S NAM2=$S(NAM="N":"T",1:"N")
"RTN","PRSNCAPE",63,0)
 ;
"RTN","PRSNCAPE",64,0)
 ; If no existing entry, set one up, otherwise Update existing entry
"RTN","PRSNCAPE",65,0)
 I PPDI'>0 D
"RTN","PRSNCAPE",66,0)
 .  D NA1
"RTN","PRSNCAPE",67,0)
 E  D
"RTN","PRSNCAPE",68,0)
 . W !!,"The Nurse Access Method for "_$$EXTERNAL^DILFD(456,.01,"",IENS2)_" pay period "_PAYPD_" is currently set to ",!,$$EXTERNAL^DILFD(456.05,1,"",NAM)_".  Do you wish to change it?",!!
"RTN","PRSNCAPE",69,0)
 . N DIR,Y,DIRUT
"RTN","PRSNCAPE",70,0)
 . S DIR(0)="Y",DIR("B")="Yes" D ^DIR K DIR Q:$D(DIRUT)
"RTN","PRSNCAPE",71,0)
 . I Y=0 W "   No changes made, quitting.",!! Q
"RTN","PRSNCAPE",72,0)
 . S NAM=NAM2
"RTN","PRSNCAPE",73,0)
 . S PRSFDA(456.05,PPDI_","_IENS_",",1)=NAM
"RTN","PRSNCAPE",74,0)
 . D FILE^DIE("","PRSFDA",""),MSG^DIALOG()
"RTN","PRSNCAPE",75,0)
 . W !!,"The Nurse Access Method for "_$$EXTERNAL^DILFD(456,.01,"",IENS2)_" has been successfully changed to ",!,$$EXTERNAL^DILFD(456.05,1,"",NAM)_" Effective Pay Period "_PAYPD_".",!!
"RTN","PRSNCAPE",76,0)
 . Q
"RTN","PRSNCAPE",77,0)
 Q
"RTN","PRSNCAPE",78,0)
 ;
"RTN","PRSNCAPE",79,0)
 ;
"RTN","PRSNCAPE",80,0)
NA1 ; Create a new sub-record and set nurse access parameter
"RTN","PRSNCAPE",81,0)
 ;
"RTN","PRSNCAPE",82,0)
 N STOP,PPDI
"RTN","PRSNCAPE",83,0)
 S STOP=0
"RTN","PRSNCAPE",84,0)
 N DIR,Y,DIRUT
"RTN","PRSNCAPE",85,0)
 I ORIGPP'="" D
"RTN","PRSNCAPE",86,0)
 .  W !!,"The Nurse Access Method for "_$$EXTERNAL^DILFD(456,.01,"",IENS2)_" pay period "_PAYPD_" is currently set to ",!,$$EXTERNAL^DILFD(456.05,1,"",NAM)_".  Do you wish to change it?",!! D
"RTN","PRSNCAPE",87,0)
 . S DIR(0)="Y",DIR("B")="Yes" D ^DIR K DIR Q:$D(DIRUT)
"RTN","PRSNCAPE",88,0)
 . I Y=0 W "   No changes made, quitting.",!! S STOP=1 Q
"RTN","PRSNCAPE",89,0)
 . S NAM=NAM2
"RTN","PRSNCAPE",90,0)
 E  D
"RTN","PRSNCAPE",91,0)
 . S DIR(0)="SB^N:Nurse Location;T:T&L Unit",DIR("A")="Select Nurse Access Method; Nurse Location or T&L Unit" D ^DIR K DIR Q:$D(DIRUT)
"RTN","PRSNCAPE",92,0)
 . S NAM=X
"RTN","PRSNCAPE",93,0)
 ;
"RTN","PRSNCAPE",94,0)
 Q:STOP
"RTN","PRSNCAPE",95,0)
 N PRSFDA,PRSIENS,PPDI
"RTN","PRSNCAPE",96,0)
 S PRSFDA(456.05,"+2,"_IENS_",",.01)=PAYPD
"RTN","PRSNCAPE",97,0)
 D UPDATE^DIE("","PRSFDA","PRSIENS"),MSG^DIALOG()
"RTN","PRSNCAPE",98,0)
 S PPDI=PRSIENS(2)
"RTN","PRSNCAPE",99,0)
 S PRSFDA(456.05,PPDI_","_IENS_",",1)=NAM
"RTN","PRSNCAPE",100,0)
 D FILE^DIE("","PRSFDA",""),MSG^DIALOG()
"RTN","PRSNCAPE",101,0)
 W !!,"The Nurse Access Method for "_$$EXTERNAL^DILFD(456,.01,"",IENS2)_" has been successfully set to ",!,$$EXTERNAL^DILFD(456.05,1,"",NAM)_" Effective Pay Period "_PAYPD_".",!!
"RTN","PRSNCAPE",102,0)
 Q
"RTN","PRSNCAPE",103,0)
 ;
"RTN","PRSNCAPE",104,0)
 ;
"RTN","PRSNCAPE",105,0)
 ;
"RTN","PRSNCAPE",106,0)
HDR ;
"RTN","PRSNCAPE",107,0)
 N L1,L2
"RTN","PRSNCAPE",108,0)
 I $E(IOST,1,2)="C-" W @IOF
"RTN","PRSNCAPE",109,0)
 S L1="VA TIME & ATTENDANCE SYSTEM",L2="PAID PARAMETERS ENTER/EDIT"
"RTN","PRSNCAPE",110,0)
 W ?((80-$L(L1))/2),L1,!,?((80-$L(L2))/2),L2,!!!!
"RTN","PRSNCAPE",111,0)
 Q
"RTN","PRSNCAPE",112,0)
 ;
"RTN","PRSNCAPE",113,0)
SHODIVAC(OUT) ; DISPLAY POC ACCESS (T&L/NURSE LOCATION) FOR ALL DIVISIONS
"RTN","PRSNCAPE",114,0)
 ;
"RTN","PRSNCAPE",115,0)
 N DIR,X,Y,DIRUT S DIR(0)="Y",DIR("A")="Show history" D ^DIR
"RTN","PRSNCAPE",116,0)
 Q:$D(DIRUT)
"RTN","PRSNCAPE",117,0)
 W @IOF
"RTN","PRSNCAPE",118,0)
 N HIST,CNT,DIVI
"RTN","PRSNCAPE",119,0)
 S HIST=Y
"RTN","PRSNCAPE",120,0)
 D SDHDR
"RTN","PRSNCAPE",121,0)
 S (CNT,DIVI)=0
"RTN","PRSNCAPE",122,0)
 F  S DIVI=$O(^PRST(456,"B",DIVI)) Q:DIVI'>0!OUT  D
"RTN","PRSNCAPE",123,0)
 .  S CNT=CNT+1
"RTN","PRSNCAPE",124,0)
 .  I CNT>1,HIST D SDHDR
"RTN","PRSNCAPE",125,0)
 .  S X=$P($$DIVACC^PRSNUT02(DT,DIVI),U)
"RTN","PRSNCAPE",126,0)
 .  W !
"RTN","PRSNCAPE",127,0)
 .  W $$EXTERNAL^DILFD(456,.01,"",DIVI)
"RTN","PRSNCAPE",128,0)
 .  N FIELDS,STATNUM
"RTN","PRSNCAPE",129,0)
 .  D GETS^DIQ(4,DIVI_",","99","E","FIELDS(",,)
"RTN","PRSNCAPE",130,0)
 .  S STATNUM=FIELDS(4,DIVI_",",99,"E")
"RTN","PRSNCAPE",131,0)
 .  W " (",STATNUM,")"
"RTN","PRSNCAPE",132,0)
 .  W ?32,$S(X="N":"Nurse Location",X="T":"T&L Unit",1:"None")
"RTN","PRSNCAPE",133,0)
 .  W ?55,"(Current)"
"RTN","PRSNCAPE",134,0)
 .  I HIST D ACCHIST(DIVI) W !!! S OUT=$$ASK^PRSLIB00()
"RTN","PRSNCAPE",135,0)
 I 'HIST W !!! S OUT=$$ASK^PRSLIB00()
"RTN","PRSNCAPE",136,0)
 Q
"RTN","PRSNCAPE",137,0)
ACCHIST(DIVI) ; SHOW HISTORY OF POC ACCESS (T&L/NURSE LOC) FOR A DIVISION
"RTN","PRSNCAPE",138,0)
 ;
"RTN","PRSNCAPE",139,0)
 N DPI,PPE,AP,PPE
"RTN","PRSNCAPE",140,0)
 S DPI=$O(^PRST(456,"B",DIVI,0))
"RTN","PRSNCAPE",141,0)
 Q:DPI'>0
"RTN","PRSNCAPE",142,0)
 S PPE=""
"RTN","PRSNCAPE",143,0)
 F  S PPE=$O(^PRST(456,DPI,1,"C",PPE)) Q:PPE=""  D
"RTN","PRSNCAPE",144,0)
 .  S AP=$O(^PRST(456,DPI,1,"C",PPE,""))
"RTN","PRSNCAPE",145,0)
 .  W !?32,$S(AP="N":"Nurse Location",1:"T&L Unit")
"RTN","PRSNCAPE",146,0)
 .  W ?57,PPE
"RTN","PRSNCAPE",147,0)
 Q
"RTN","PRSNCAPE",148,0)
SDHDR ; SHOW DIVISION HEADER
"RTN","PRSNCAPE",149,0)
 W @IOF,!!!
"RTN","PRSNCAPE",150,0)
 W !?30,"DATA ENTRY/APPROVAL",?55,"EFFECTIVE"
"RTN","PRSNCAPE",151,0)
 W !,"   DIVISION",?30,"ACCESS TO NURSE VIA",?55,"PAY PERIOD"
"RTN","PRSNCAPE",152,0)
 W !,"===============",?29,"======================",?54,"============"
"RTN","PRSNCAPE",153,0)
 Q
"RTN","PRSNCAPE",154,0)
 ;
"RTN","PRSNCGP")
0^6^B68249177^n/a
"RTN","PRSNCGP",1,0)
PRSNCGP ;WOIFO-JAH - Release POC Record corrections for VANOD;11/03/09
"RTN","PRSNCGP",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNCGP",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSNCGP",4,0)
 Q
"RTN","PRSNCGP",5,0)
 ;
"RTN","PRSNCGP",6,0)
CRELEASE ; Routine provides functionality to release corrected records for
"RTN","PRSNCGP",7,0)
 ; VANOD extraction. These are daily records with a CORRECTION STATUS
"RTN","PRSNCGP",8,0)
 ; of Approved for a Day
"RTN","PRSNCGP",9,0)
 ;
"RTN","PRSNCGP",10,0)
 ;    Prompt Coordinator for Divisions to release (one, many, all) 
"RTN","PRSNCGP",11,0)
 ;
"RTN","PRSNCGP",12,0)
 N PRSINST,PPI,PPS,MMR,INSTCC
"RTN","PRSNCGP",13,0)
 ;
"RTN","PRSNCGP",14,0)
 D GETDIV^PRSNCGR(.PRSINST) Q:PRSINST<0
"RTN","PRSNCGP",15,0)
 ;
"RTN","PRSNCGP",16,0)
 ; Check all pay periods with approved corrections to released records.
"RTN","PRSNCGP",17,0)
 ;
"RTN","PRSNCGP",18,0)
 D PRECHK(.INSTCC,.PRSINST)
"RTN","PRSNCGP",19,0)
 ;
"RTN","PRSNCGP",20,0)
 ; do prelimary report of record status
"RTN","PRSNCGP",21,0)
 ;
"RTN","PRSNCGP",22,0)
 D CNTREP(.INSTCC)
"RTN","PRSNCGP",23,0)
 Q:$G(INSTCC)=0
"RTN","PRSNCGP",24,0)
 ;
"RTN","PRSNCGP",25,0)
 S X=$$ASK^PRSLIB00() Q:X
"RTN","PRSNCGP",26,0)
 ;
"RTN","PRSNCGP",27,0)
 ;    prompt for mismatch report 
"RTN","PRSNCGP",28,0)
 ;
"RTN","PRSNCGP",29,0)
 S MMR=$$ASKMM^PRSNCGR() Q:MMR<0
"RTN","PRSNCGP",30,0)
 ;
"RTN","PRSNCGP",31,0)
 I MMR D
"RTN","PRSNCGP",32,0)
 . N %ZIS,POP,IOP
"RTN","PRSNCGP",33,0)
 . S %ZIS="MQ"
"RTN","PRSNCGP",34,0)
 . D ^%ZIS
"RTN","PRSNCGP",35,0)
 . Q:POP
"RTN","PRSNCGP",36,0)
 . I $D(IO("Q")) D
"RTN","PRSNCGP",37,0)
 .. K IO("Q")
"RTN","PRSNCGP",38,0)
 .. N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC
"RTN","PRSNCGP",39,0)
 .. S ZTDESC="PRSN POC/ETA MISMATCH REPORT FOR POC CORRECTIONS"
"RTN","PRSNCGP",40,0)
 .. S ZTRTN="MMREP^PRSNCGP"
"RTN","PRSNCGP",41,0)
 .. S ZTSAVE("PRSINST(")=""
"RTN","PRSNCGP",42,0)
 .. D ^%ZTLOAD
"RTN","PRSNCGP",43,0)
 .. I $D(ZTSK) S ZTREQ="@" W !,"Request "_ZTSK_" Queued."
"RTN","PRSNCGP",44,0)
 . E  D
"RTN","PRSNCGP",45,0)
 .. D MMREP
"RTN","PRSNCGP",46,0)
 ;
"RTN","PRSNCGP",47,0)
 I $$SUREQ^PRSNCGR() D
"RTN","PRSNCGP",48,0)
 . N %ZIS,POP,IOP
"RTN","PRSNCGP",49,0)
 . S %ZIS="MQ"
"RTN","PRSNCGP",50,0)
 . D ^%ZIS
"RTN","PRSNCGP",51,0)
 . Q:POP
"RTN","PRSNCGP",52,0)
 . I $D(IO("Q")) D
"RTN","PRSNCGP",53,0)
 .. K IO("Q")
"RTN","PRSNCGP",54,0)
 .. N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC
"RTN","PRSNCGP",55,0)
 .. N ZTDESC,ZTRTN,ZTSAVE
"RTN","PRSNCGP",56,0)
 .. S ZTDESC="PRSN POC/ETA MISMATCH REPORT"
"RTN","PRSNCGP",57,0)
 .. S ZTRTN="DRIVER^PRSNCGP"
"RTN","PRSNCGP",58,0)
 .. S ZTSAVE("PRSINST(")=""
"RTN","PRSNCGP",59,0)
 .. D ^%ZTLOAD
"RTN","PRSNCGP",60,0)
 .. I $D(ZTSK) S ZTREQ="@" W !,"Request "_ZTSK_" Queued."
"RTN","PRSNCGP",61,0)
 .E  D
"RTN","PRSNCGP",62,0)
 .. D DRIVER
"RTN","PRSNCGP",63,0)
 Q
"RTN","PRSNCGP",64,0)
DRIVER ;
"RTN","PRSNCGP",65,0)
 N REC,CNT,FIELD,SEGCNT,PC,CI,SN
"RTN","PRSNCGP",66,0)
 U IO
"RTN","PRSNCGP",67,0)
 S REC=0
"RTN","PRSNCGP",68,0)
 F  S REC=$O(PRSINST(REC)) Q:REC'>0  D
"RTN","PRSNCGP",69,0)
 .  S CI=+PRSINST(REC)
"RTN","PRSNCGP",70,0)
 .  D GETS^DIQ(4,CI_",","99","E","FIELD(",,)
"RTN","PRSNCGP",71,0)
 .  S SN=FIELD(4,CI_",",99,"E")
"RTN","PRSNCGP",72,0)
 .  S CNT(CI)="0^0"
"RTN","PRSNCGP",73,0)
 .;
"RTN","PRSNCGP",74,0)
 .;  loop thru Approved Daily Corrections index (sorted by Division,
"RTN","PRSNCGP",75,0)
 .;  pay period, nurse, day number)
"RTN","PRSNCGP",76,0)
 .;
"RTN","PRSNCGP",77,0)
 .  S (SEGCNT,PPI,RECCNT)=0
"RTN","PRSNCGP",78,0)
 .  F  S PPI=$O(^PRSN(451,"ACA",CI,PPI)) Q:PPI'>0  S PRSIEN=0 F  S PRSIEN=$O(^PRSN(451,"ACA",CI,PPI,PRSIEN)) Q:PRSIEN'>0  D
"RTN","PRSNCGP",79,0)
 ..    S $P(CNT(CI),U)=$P(CNT(CI),U)+1
"RTN","PRSNCGP",80,0)
 ..;
"RTN","PRSNCGP",81,0)
 ..; build node with days corrected
"RTN","PRSNCGP",82,0)
 ..;
"RTN","PRSNCGP",83,0)
 ..    K CDS
"RTN","PRSNCGP",84,0)
 ..    S I=0
"RTN","PRSNCGP",85,0)
 ..    F  S I=$O(^PRSN(451,"ACA",CI,PPI,PRSIEN,I)) Q:I'>0  D
"RTN","PRSNCGP",86,0)
 ...     S CDS(I)=""
"RTN","PRSNCGP",87,0)
 ..;
"RTN","PRSNCGP",88,0)
 ..;  get all records for the pay period
"RTN","PRSNCGP",89,0)
 ..;
"RTN","PRSNCGP",90,0)
 ..    K PC D EXTRECS^PRSNCGR(.PC,.RECCNT,PPI,PRSIEN)
"RTN","PRSNCGP",91,0)
 ..;
"RTN","PRSNCGP",92,0)
 ..;  trim days from PC that aren't impacted by corrections
"RTN","PRSNCGP",93,0)
 ..;
"RTN","PRSNCGP",94,0)
 ..   D TRIMPC(.PC,.CDS,PRSIEN)
"RTN","PRSNCGP",95,0)
 ..;
"RTN","PRSNCGP",96,0)
 ..; note that day 15 has data and we need to determine whether
"RTN","PRSNCGP",97,0)
 ..; to file that days correction after filing for this pp
"RTN","PRSNCGP",98,0)
 ..    S PCNX=0 I $D(PC(15)) S PCNX=1 K PC(15)
"RTN","PRSNCGP",99,0)
 ..;
"RTN","PRSNCGP",100,0)
 ..;   file all corrections in PC array 
"RTN","PRSNCGP",101,0)
 ..;
"RTN","PRSNCGP",102,0)
 ..    D FILEPP^PRSNCGR1(.PC,PRSIEN,PPI,CI,SN)
"RTN","PRSNCGP",103,0)
 ..;
"RTN","PRSNCGP",104,0)
 ..;   increment counter
"RTN","PRSNCGP",105,0)
 ..;
"RTN","PRSNCGP",106,0)
 ..    S $P(CNT(CI),U,2)=$P(CNT(CI),U,2)+$$PCCOUNT(.PC)
"RTN","PRSNCGP",107,0)
 ..;
"RTN","PRSNCGP",108,0)
 ..;  update daily POC record status from approved to released
"RTN","PRSNCGP",109,0)
 ..;
"RTN","PRSNCGP",110,0)
 ..    D UPDTPOC(.PC,PPI,PRSIEN,"R")
"RTN","PRSNCGP",111,0)
 ..;
"RTN","PRSNCGP",112,0)
 ..; File and update for day one of next pp, if necessary.
"RTN","PRSNCGP",113,0)
 ..; If there is correction data from a two day tour of current pay
"RTN","PRSNCGP",114,0)
 ..; period that impacts day 1 of next pay period and that pay
"RTN","PRSNCGP",115,0)
 ..; period has been released then we need to include any data
"RTN","PRSNCGP",116,0)
 ..; that is explicitly recorded on that day.  If there is also
"RTN","PRSNCGP",117,0)
 ..; a correction on that day or that pay period is not released
"RTN","PRSNCGP",118,0)
 ..; then we need do nothing as the release of that correction or pp
"RTN","PRSNCGP",119,0)
 ..; will pick up the two day tour spillover.
"RTN","PRSNCGP",120,0)
 ..;
"RTN","PRSNCGP",121,0)
 ..  S NXTPPSTA=$P($G(^PRSN(451,PPI+1,"E",PRSIEN,0)),U,2)
"RTN","PRSNCGP",122,0)
 ..  S NXTPPDAT=$D(^PRSN(451,PPI+1,"E",PRSIEN,"D",1,0))
"RTN","PRSNCGP",123,0)
 ..  S NXTPPCOR=$D(^PRSN(451,"ACA",CI,PPI+1,PRSIEN,1))
"RTN","PRSNCGP",124,0)
 ..    I PCNX,'NXTPPCOR,NXTPPSTA="R",NXTPPDAT D
"RTN","PRSNCGP",125,0)
 ...      K PC D EXTRECS^PRSNCGR(.PC,.SEGCNT,PPI+1,PRSIEN)
"RTN","PRSNCGP",126,0)
 ...;only need day one, so kill the rest
"RTN","PRSNCGP",127,0)
 ...      N I F I=0,2:1:15 K PC(I)
"RTN","PRSNCGP",128,0)
 ...      D FILEPP^PRSNCGR1(.PC,PRSIEN,PPI+1,CI,SN)
"RTN","PRSNCGP",129,0)
 ...      S $P(CNT(CI),U,2)=$P(CNT(CI),U,2)+$$PCCOUNT(.PC)
"RTN","PRSNCGP",130,0)
 ...      D UPDTPOC(.PC,PPI+1,PRSIEN,"R")
"RTN","PRSNCGP",131,0)
 D RESULTS(.CNT)
"RTN","PRSNCGP",132,0)
 ;
"RTN","PRSNCGP",133,0)
 D ^%ZISC
"RTN","PRSNCGP",134,0)
 Q
"RTN","PRSNCGP",135,0)
 ;
"RTN","PRSNCGP",136,0)
MMREP ;
"RTN","PRSNCGP",137,0)
 N REC,CNT,FIELD,SEGCNT,PC,PPI,CI,PG,OUT,SN
"RTN","PRSNCGP",138,0)
 U IO
"RTN","PRSNCGP",139,0)
 S (PG,REC,OUT)=0
"RTN","PRSNCGP",140,0)
 F  S REC=$O(PRSINST(REC)) Q:REC'>0!OUT  D
"RTN","PRSNCGP",141,0)
 .  S CI=+PRSINST(REC)
"RTN","PRSNCGP",142,0)
 .  D GETS^DIQ(4,CI_",","99","E","FIELD(",,)
"RTN","PRSNCGP",143,0)
 .  S SN=FIELD(4,CI_",",99,"E")
"RTN","PRSNCGP",144,0)
 .  S PRSIEN=0
"RTN","PRSNCGP",145,0)
 .  S PPI=0
"RTN","PRSNCGP",146,0)
 .  F  S PPI=$O(^PRSN(451,"ACA",CI,PPI)) Q:PPI'>0!OUT  D
"RTN","PRSNCGP",147,0)
 ..    S PRSIEN=0
"RTN","PRSNCGP",148,0)
 ..    F  S PRSIEN=$O(^PRSN(451,"ACA",CI,PPI,PRSIEN)) Q:PRSIEN'>0!OUT  D
"RTN","PRSNCGP",149,0)
 ...      D PPMM^PRSNRMM(PRSIEN,PPI,.PG,.OUT)
"RTN","PRSNCGP",150,0)
 ;
"RTN","PRSNCGP",151,0)
 D ^%ZISC
"RTN","PRSNCGP",152,0)
 Q
"RTN","PRSNCGP",153,0)
 ;
"RTN","PRSNCGP",154,0)
TRIMPC(PC,CDS,PRSIEN) ;Trim days from pay per array that are not either
"RTN","PRSNCGP",155,0)
 ; a corrected day or a day impacted by the correction
"RTN","PRSNCGP",156,0)
 ; i.e., we must resend days that have time from a corrected day
"RTN","PRSNCGP",157,0)
 ; that cross midnight into them.
"RTN","PRSNCGP",158,0)
 ;
"RTN","PRSNCGP",159,0)
 N PRSD,CORSPIL
"RTN","PRSNCGP",160,0)
 S PRSD=0
"RTN","PRSNCGP",161,0)
 F  S PRSD=$O(PC(PRSD)) Q:PRSD'>0  D
"RTN","PRSNCGP",162,0)
 .  S CORSPIL=0
"RTN","PRSNCGP",163,0)
 .;
"RTN","PRSNCGP",164,0)
 .; if prior day is a correction with spillover we must include today
"RTN","PRSNCGP",165,0)
 .;
"RTN","PRSNCGP",166,0)
 .  I $D(CDS(PRSD-1)),$$SPILLOVR($G(PC(PRSD-1)),PRSD-1) S CORSPIL=1
"RTN","PRSNCGP",167,0)
 .;
"RTN","PRSNCGP",168,0)
 .; kill days that aren't part of the correction set
"RTN","PRSNCGP",169,0)
 .;
"RTN","PRSNCGP",170,0)
 .  I '$D(CDS(PRSD))&('CORSPIL) K PC(PRSD)
"RTN","PRSNCGP",171,0)
 ; 
"RTN","PRSNCGP",172,0)
 Q
"RTN","PRSNCGP",173,0)
SPILLOVR(SEGS,I) ; return true if a segment on this day crosses midnight
"RTN","PRSNCGP",174,0)
 N SPILL,J
"RTN","PRSNCGP",175,0)
 S (SPILL,J)=0
"RTN","PRSNCGP",176,0)
 F  S J=$O(SEGS(I,J)) Q:J'>0!SPILL  D
"RTN","PRSNCGP",177,0)
 .  I $P(SEGS(I,J),U,10)>2400 S SPILL=1
"RTN","PRSNCGP",178,0)
 Q SPILL
"RTN","PRSNCGP",179,0)
 ;
"RTN","PRSNCGP",180,0)
PCCOUNT(ARRAY2D) ; COUNT records in 2D array with integer subscripts
"RTN","PRSNCGP",181,0)
 N I,J,CNT
"RTN","PRSNCGP",182,0)
 S (CNT,I)=0
"RTN","PRSNCGP",183,0)
 F  S I=$O(ARRAY2D(I)) Q:I'>0  D
"RTN","PRSNCGP",184,0)
 .  S J=0 F  S J=$O(ARRAY2D(I,J)) Q:J'>0  D
"RTN","PRSNCGP",185,0)
 ..   S CNT=CNT+1
"RTN","PRSNCGP",186,0)
 Q CNT
"RTN","PRSNCGP",187,0)
RESULTS(CNT) ; Print results of the Release
"RTN","PRSNCGP",188,0)
 N DIVI,DIVE,I,F,X,STNAME,STNUM
"RTN","PRSNCGP",189,0)
 W @IOF,!!,?14,"POC CORRECTED RECORDS RELEASED RESULTS"
"RTN","PRSNCGP",190,0)
 W !,?14,"======================================"
"RTN","PRSNCGP",191,0)
 W !!,?30,"TOTAL",?42,"TOTAL"
"RTN","PRSNCGP",192,0)
 W !,?4,"DIVISION",?30,"NURSES",?42,"RECORDS"
"RTN","PRSNCGP",193,0)
 W !,?4,"========",?30,"======",?42,"======="
"RTN","PRSNCGP",194,0)
 N I S I=0
"RTN","PRSNCGP",195,0)
 F  S I=$O(CNT(I)) Q:I'>0  D
"RTN","PRSNCGP",196,0)
 .  D GETS^DIQ(4,I_",",".01;99","EI","F(",,)
"RTN","PRSNCGP",197,0)
 .  S STNUM=F(4,I_",",99,"E"),STNAME=F(4,I_",",.01,"E")
"RTN","PRSNCGP",198,0)
 .  W !,?4,STNAME," (",STNUM,")",?30,$P(CNT(I),U),?44,$P(CNT(I),U,2)
"RTN","PRSNCGP",199,0)
 W !!! S X=$$ASK^PRSLIB00(1)
"RTN","PRSNCGP",200,0)
 Q
"RTN","PRSNCGP",201,0)
PRECHK(INSTCC,PRSINST) ; Count up corrections by division
"RTN","PRSNCGP",202,0)
 ;
"RTN","PRSNCGP",203,0)
 ;  INPUT:
"RTN","PRSNCGP",204,0)
 ;    PRSINST (required) array of institutions to check
"RTN","PRSNCGP",205,0)
 ;  OUTPUT:
"RTN","PRSNCGP",206,0)
 ;    INSTCC (returned by reference) Institution correction counts
"RTN","PRSNCGP",207,0)
 ;         e.g.,  INSTCC(500)=32 
"RTN","PRSNCGP",208,0)
 ;                INSTCC(16473)=10 
"RTN","PRSNCGP",209,0)
 ;         Where the node is the institution # and it is set equal
"RTN","PRSNCGP",210,0)
 ;         to the total number of corrections across all released
"RTN","PRSNCGP",211,0)
 ;         pay periods.
"RTN","PRSNCGP",212,0)
 ;
"RTN","PRSNCGP",213,0)
 N REC,CNT,FIELD,STOP
"RTN","PRSNCGP",214,0)
 ;
"RTN","PRSNCGP",215,0)
 S (INSTCC,I)=0
"RTN","PRSNCGP",216,0)
 F  S I=$O(PRSINST(I)) Q:I'>0  D
"RTN","PRSNCGP",217,0)
 .  S INSTCC(+PRSINST(I))=0
"RTN","PRSNCGP",218,0)
 ;
"RTN","PRSNCGP",219,0)
 S I=0
"RTN","PRSNCGP",220,0)
 F  S I=$O(INSTCC(I)) Q:I'>0  D
"RTN","PRSNCGP",221,0)
 .  S PPI=0
"RTN","PRSNCGP",222,0)
 .  F  S PPI=$O(^PRSN(451,"ACA",I,PPI)) Q:PPI'>0  D
"RTN","PRSNCGP",223,0)
 ..  S PRSIEN=0
"RTN","PRSNCGP",224,0)
 ..  F  S PRSIEN=$O(^PRSN(451,"ACA",I,PPI,PRSIEN)) Q:PRSIEN'>0  D
"RTN","PRSNCGP",225,0)
 ...    S INSTCC=INSTCC+1
"RTN","PRSNCGP",226,0)
 ...    S INSTCC(I)=INSTCC(I)+1
"RTN","PRSNCGP",227,0)
 Q
"RTN","PRSNCGP",228,0)
CNTREP(INSTCC) ;
"RTN","PRSNCGP",229,0)
 N I,STNUM,STNAME,X
"RTN","PRSNCGP",230,0)
 W @IOF,!!!,?20,"CORRECTION TOTALS BY DIVISION"
"RTN","PRSNCGP",231,0)
 W !,?20,"============================="
"RTN","PRSNCGP",232,0)
 ;
"RTN","PRSNCGP",233,0)
 W !!,"DIVISION",?30,"# OF DAILY"
"RTN","PRSNCGP",234,0)
 W !,?30,"DAILY CORRECTIONS"
"RTN","PRSNCGP",235,0)
 S I=0
"RTN","PRSNCGP",236,0)
 F  S I=$O(INSTCC(I)) Q:I'>0  D
"RTN","PRSNCGP",237,0)
 .  D GETS^DIQ(4,I_",",".01;99","EI","F(",,)
"RTN","PRSNCGP",238,0)
 .  S STNUM=F(4,I_",",99,"E"),STNAME=F(4,I_",",.01,"E")
"RTN","PRSNCGP",239,0)
 .  W !,?4,STNAME," (",STNUM,")"
"RTN","PRSNCGP",240,0)
 .  W ?30,$J(INSTCC(I),10,0)
"RTN","PRSNCGP",241,0)
 I $G(INSTCC)=0 D
"RTN","PRSNCGP",242,0)
 .  W !!,"  No approved corrections are ready for release."
"RTN","PRSNCGP",243,0)
 .  W !!! S X=$$ASK^PRSLIB00(1)
"RTN","PRSNCGP",244,0)
 Q
"RTN","PRSNCGP",245,0)
UPDTPOCD(PPI,PRSIEN,PRSD,PRSV,STATUS) ; update DAILY RECORD status for POC records
"RTN","PRSNCGP",246,0)
 ; INPUT :
"RTN","PRSNCGP",247,0)
 ;    PPI,PRSIEN,PRSD : Standard
"RTN","PRSNCGP",248,0)
 ;    PRSV : (optional) if STATUS is (A)pproved PRSV must be defined
"RTN","PRSNCGP",249,0)
 ;                      to the version number of the POC record
"RTN","PRSNCGP",250,0)
 ;    STATUS: (optional) : set to (A)pproved
"RTN","PRSNCGP",251,0)
 ;                                (R)eleased
"RTN","PRSNCGP",252,0)
 ;                                (E)ntered
"RTN","PRSNCGP",253,0)
 ;                                Null (remove status)
"RTN","PRSNCGP",254,0)
 ;
"RTN","PRSNCGP",255,0)
 N IENS,PRSFDA
"RTN","PRSNCGP",256,0)
 S IENS=PRSD_","_PRSIEN_","_PPI_","
"RTN","PRSNCGP",257,0)
 I STATUS="" S STATUS="@"
"RTN","PRSNCGP",258,0)
 S PRSFDA(451.99,IENS,1)=STATUS
"RTN","PRSNCGP",259,0)
 D UPDATE^DIE("","PRSFDA","IENS"),MSG^DIALOG()
"RTN","PRSNCGP",260,0)
 I STATUS="A"&(PRSV>0) D
"RTN","PRSNCGP",261,0)
 .;  update approver and date time of approval
"RTN","PRSNCGP",262,0)
 .  K IENS,PRSFDA N %
"RTN","PRSNCGP",263,0)
 .  S IENS=PRSV_","_PRSD_","_PRSIEN_","_PPI_","
"RTN","PRSNCGP",264,0)
 .  S PRSFDA(451.999,IENS,1)=DUZ
"RTN","PRSNCGP",265,0)
 .  D NOW^%DTC
"RTN","PRSNCGP",266,0)
 .  S PRSFDA(451.999,IENS,2)=%
"RTN","PRSNCGP",267,0)
 .  D UPDATE^DIE("","PRSFDA","IENS"),MSG^DIALOG()
"RTN","PRSNCGP",268,0)
 Q
"RTN","PRSNCGP",269,0)
UPDTPOC(PC,PPI,PRSIEN,STATUS) ; update POC daily record status
"RTN","PRSNCGP",270,0)
 N IENS,FDA
"RTN","PRSNCGP",271,0)
 S I=0
"RTN","PRSNCGP",272,0)
 F  S I=$O(PC(I)) Q:I'>0  D
"RTN","PRSNCGP",273,0)
 . S IENS=I_","_PRSIEN_","_PPI_","
"RTN","PRSNCGP",274,0)
 . S FDA(451.99,IENS,1)=STATUS
"RTN","PRSNCGP",275,0)
 D UPDATE^DIE("","FDA","IENS"),MSG^DIALOG()
"RTN","PRSNCGP",276,0)
 Q
"RTN","PRSNCGR")
0^7^B81915244^n/a
"RTN","PRSNCGR",1,0)
PRSNCGR ;WOIFO-JAH - Release POC Records for VANOD Extraction;10/16/09
"RTN","PRSNCGR",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNCGR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSNCGR",4,0)
 Q
"RTN","PRSNCGR",5,0)
 ;
"RTN","PRSNCGR",6,0)
RELEASE ; Routine provides functionality to release records for
"RTN","PRSNCGR",7,0)
 ; VANOD extraction.  I.e., search for POC records who's pay period
"RTN","PRSNCGR",8,0)
 ; status is approved and move those records to the extraction
"RTN","PRSNCGR",9,0)
 ; file.  Records in the POC file may cross midnight, but we will
"RTN","PRSNCGR",10,0)
 ; split those records at midnight and report the activity on the
"RTN","PRSNCGR",11,0)
 ; day on which it occured.
"RTN","PRSNCGR",12,0)
 ;
"RTN","PRSNCGR",13,0)
 ;    Prompt Coordinator for Divisions to release (one, many, all) 
"RTN","PRSNCGR",14,0)
 ;
"RTN","PRSNCGR",15,0)
 N PRSINST,PPI,PPS,MMR
"RTN","PRSNCGR",16,0)
 ;
"RTN","PRSNCGR",17,0)
 D GETDIV(.PRSINST) Q:PRSINST<0
"RTN","PRSNCGR",18,0)
 ;
"RTN","PRSNCGR",19,0)
 ; Check all pay periods with approved records which are 
"RTN","PRSNCGR",20,0)
 ; ready to be released.
"RTN","PRSNCGR",21,0)
 ;
"RTN","PRSNCGR",22,0)
 D PPRELCHK(.PPS,.PRSINST)
"RTN","PRSNCGR",23,0)
 ;
"RTN","PRSNCGR",24,0)
 ;    prompt for pay period
"RTN","PRSNCGR",25,0)
 ;
"RTN","PRSNCGR",26,0)
 S PPI=$$GETPP(.PPS) Q:PPI'>0
"RTN","PRSNCGR",27,0)
 ;
"RTN","PRSNCGR",28,0)
 ;
"RTN","PRSNCGR",29,0)
 ; do prelimary report of record status
"RTN","PRSNCGR",30,0)
 ;
"RTN","PRSNCGR",31,0)
 D CNTREP^PRSNCGR1(.PRSINST,PPI)
"RTN","PRSNCGR",32,0)
 ;
"RTN","PRSNCGR",33,0)
 I '$D(PPS("P",PPI)) D  Q
"RTN","PRSNCGR",34,0)
 .  W !!,"There are no records in pay period ",$P($G(^PRST(458,PPI,0)),U)," approved for release."
"RTN","PRSNCGR",35,0)
 .  W !! S X=$$ASK^PRSLIB00(1)
"RTN","PRSNCGR",36,0)
 ;
"RTN","PRSNCGR",37,0)
 ;    prompt for mismatch report 
"RTN","PRSNCGR",38,0)
 ;
"RTN","PRSNCGR",39,0)
 S MMR=$$ASKMM() Q:MMR<0
"RTN","PRSNCGR",40,0)
 ;
"RTN","PRSNCGR",41,0)
 I MMR D
"RTN","PRSNCGR",42,0)
 . N %ZIS,POP,IOP
"RTN","PRSNCGR",43,0)
 . S %ZIS="MQ"
"RTN","PRSNCGR",44,0)
 . D ^%ZIS
"RTN","PRSNCGR",45,0)
 . Q:POP
"RTN","PRSNCGR",46,0)
 . I $D(IO("Q")) D
"RTN","PRSNCGR",47,0)
 .. K IO("Q")
"RTN","PRSNCGR",48,0)
 .. N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC
"RTN","PRSNCGR",49,0)
 .. S ZTDESC="PRSN POC/ETA MISMATCH REPORT"
"RTN","PRSNCGR",50,0)
 .. S ZTRTN="MMREP^PRSNCGR"
"RTN","PRSNCGR",51,0)
 .. S ZTSAVE("PPI")=""
"RTN","PRSNCGR",52,0)
 .. S ZTSAVE("PRSINST(")=""
"RTN","PRSNCGR",53,0)
 .. D ^%ZTLOAD
"RTN","PRSNCGR",54,0)
 .. I $D(ZTSK) S ZTREQ="@" W !,"Request "_ZTSK_" Queued."
"RTN","PRSNCGR",55,0)
 . E  D
"RTN","PRSNCGR",56,0)
 .. D MMREP
"RTN","PRSNCGR",57,0)
 ;
"RTN","PRSNCGR",58,0)
 I $$SUREQ() D
"RTN","PRSNCGR",59,0)
 . N %ZIS,POP,IOP
"RTN","PRSNCGR",60,0)
 . S %ZIS="MQ"
"RTN","PRSNCGR",61,0)
 . D ^%ZIS
"RTN","PRSNCGR",62,0)
 . Q:POP
"RTN","PRSNCGR",63,0)
 . I $D(IO("Q")) D
"RTN","PRSNCGR",64,0)
 .. K IO("Q")
"RTN","PRSNCGR",65,0)
 .. N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC
"RTN","PRSNCGR",66,0)
 .. S ZTDESC="PRSN POC/ETA RELEASE REPORT"
"RTN","PRSNCGR",67,0)
 .. S ZTRTN="DRIVER^PRSNCGR"
"RTN","PRSNCGR",68,0)
 .. S ZTSAVE("PPI")=""
"RTN","PRSNCGR",69,0)
 .. S ZTSAVE("PRSINST(")=""
"RTN","PRSNCGR",70,0)
 .. D ^%ZTLOAD
"RTN","PRSNCGR",71,0)
 .. I $D(ZTSK) S ZTREQ="@" W !,"Request "_ZTSK_" Queued."
"RTN","PRSNCGR",72,0)
 . E  D
"RTN","PRSNCGR",73,0)
 .. D DRIVER
"RTN","PRSNCGR",74,0)
 Q
"RTN","PRSNCGR",75,0)
MMREP ;
"RTN","PRSNCGR",76,0)
 N REC,CNT,FIELD,SEGCNT,PC,OUT,PG,CI,SN
"RTN","PRSNCGR",77,0)
 U IO
"RTN","PRSNCGR",78,0)
 S (PG,REC,OUT)=0
"RTN","PRSNCGR",79,0)
 F  S REC=$O(PRSINST(REC)) Q:REC'>0!OUT  D
"RTN","PRSNCGR",80,0)
 .    S CI=+PRSINST(REC)
"RTN","PRSNCGR",81,0)
 .    D GETS^DIQ(4,CI_",","99","E","FIELD(",,)
"RTN","PRSNCGR",82,0)
 .    S SN=FIELD(4,CI_",",99,"E")
"RTN","PRSNCGR",83,0)
 .    S PRSIEN=0
"RTN","PRSNCGR",84,0)
 .    F  S PRSIEN=$O(^PRSN(451,"AA",CI,PPI,PRSIEN)) Q:PRSIEN'>0!OUT  D
"RTN","PRSNCGR",85,0)
 ..      D PPMM^PRSNRMM(PRSIEN,PPI,.PG,.OUT)
"RTN","PRSNCGR",86,0)
 D ^%ZISC
"RTN","PRSNCGR",87,0)
 Q
"RTN","PRSNCGR",88,0)
 ;
"RTN","PRSNCGR",89,0)
DRIVER ;
"RTN","PRSNCGR",90,0)
 N REC,CI,SN,CNT,PRSIEN,SEGCNT,PC
"RTN","PRSNCGR",91,0)
 U IO
"RTN","PRSNCGR",92,0)
 S REC=0
"RTN","PRSNCGR",93,0)
 F  S REC=$O(PRSINST(REC)) Q:REC'>0  D
"RTN","PRSNCGR",94,0)
 .  S CI=+PRSINST(REC)
"RTN","PRSNCGR",95,0)
 .  D GETS^DIQ(4,CI_",","99","E","FIELD(",,)
"RTN","PRSNCGR",96,0)
 .  S SN=FIELD(4,CI_",",99,"E")
"RTN","PRSNCGR",97,0)
 .  S CNT(CI)="0^0"
"RTN","PRSNCGR",98,0)
 .  S PRSIEN=0
"RTN","PRSNCGR",99,0)
 .  F  S PRSIEN=$O(^PRSN(451,"AA",CI,PPI,PRSIEN)) Q:PRSIEN'>0  D
"RTN","PRSNCGR",100,0)
 ..    S SEGCNT=0
"RTN","PRSNCGR",101,0)
 ..    S $P(CNT(CI),U)=$P(CNT(CI),U)+1
"RTN","PRSNCGR",102,0)
 ..    K PC D EXTRECS(.PC,.SEGCNT,PPI,PRSIEN)
"RTN","PRSNCGR",103,0)
 ..    D FILEPP^PRSNCGR1(.PC,PRSIEN,PPI,CI,SN)
"RTN","PRSNCGR",104,0)
 ..    S $P(CNT(CI),U,2)=$P(CNT(CI),U,2)+SEGCNT
"RTN","PRSNCGR",105,0)
 ..    D UPDTPOC^PRSNCGR1(PPI,PRSIEN,"R")
"RTN","PRSNCGR",106,0)
 .; if any records were released then update the release history for
"RTN","PRSNCGR",107,0)
 .; for this division
"RTN","PRSNCGR",108,0)
 .  I $P(CNT(CI),U,2)>0 D
"RTN","PRSNCGR",109,0)
 ..    D UPDTPP^PRSNCGR1(PPI,CI,$P(CNT(CI),U),$P(CNT(CI),U,2))
"RTN","PRSNCGR",110,0)
 D RESULTS(.CNT,PPI)
"RTN","PRSNCGR",111,0)
 ;
"RTN","PRSNCGR",112,0)
 D ^%ZISC
"RTN","PRSNCGR",113,0)
 Q
"RTN","PRSNCGR",114,0)
 ;
"RTN","PRSNCGR",115,0)
GETPP(PPS) ;prompt for and return pay period
"RTN","PRSNCGR",116,0)
 ; Use the following criteria:
"RTN","PRSNCGR",117,0)
 ;   1) pp must exist in 451
"RTN","PRSNCGR",118,0)
 ;   2) Default value is most recently ended pay period
"RTN","PRSNCGR",119,0)
 ;   3) selection of a pay period that has not ended is not allowed
"RTN","PRSNCGR",120,0)
 ;   4) Screen out pay periods with no approved data
"RTN","PRSNCGR",121,0)
 N DIC,DUOUT,DTOUT,X,Y,PPI,DEFPP,PPTEMP
"RTN","PRSNCGR",122,0)
 ;
"RTN","PRSNCGR",123,0)
 ; set default as most recent pay period with data but must be 
"RTN","PRSNCGR",124,0)
 ; earlier than current
"RTN","PRSNCGR",125,0)
 ;
"RTN","PRSNCGR",126,0)
 S PPTEMP=$G(^PRST(458,"AD",DT))
"RTN","PRSNCGR",127,0)
 S DEFPP=$O(PPS("P",PPTEMP),-1)
"RTN","PRSNCGR",128,0)
 S DIC("B")=DEFPP
"RTN","PRSNCGR",129,0)
 S DIC="^PRSN(451,",DIC(0)="AEQMZ"
"RTN","PRSNCGR",130,0)
 S DIC("A")="Select a Pay Period: "
"RTN","PRSNCGR",131,0)
 S DIC("S")="I +Y'>DEFPP&($D(PPS(""P"",+Y)))"
"RTN","PRSNCGR",132,0)
 D ^DIC
"RTN","PRSNCGR",133,0)
 I $D(DUOUT)!$D(DTOUT)!+$G(Y)'>0 Q 0
"RTN","PRSNCGR",134,0)
 Q +Y
"RTN","PRSNCGR",135,0)
 ;
"RTN","PRSNCGR",136,0)
GETDIV(PRSINST) ;
"RTN","PRSNCGR",137,0)
 N DIC,VAUTSTR,VAUTNI,VAUTVB,Y,CNT
"RTN","PRSNCGR",138,0)
 S DIC="^PRST(456,"
"RTN","PRSNCGR",139,0)
 S VAUTSTR="PAID Parameter Institution"
"RTN","PRSNCGR",140,0)
 S VAUTNI=2,VAUTVB="PRSINST"
"RTN","PRSNCGR",141,0)
 D FIRST^VAUTOMA
"RTN","PRSNCGR",142,0)
 I $G(Y)<0 S PRSINST=Y Q
"RTN","PRSNCGR",143,0)
 S (CNT,Y)=0
"RTN","PRSNCGR",144,0)
 ;
"RTN","PRSNCGR",145,0)
 ; all institutions selected, so loop through file to get them.
"RTN","PRSNCGR",146,0)
 I PRSINST D
"RTN","PRSNCGR",147,0)
 .  F  S Y=$O(^PRST(456,Y)) Q:Y'>0  D
"RTN","PRSNCGR",148,0)
 ..    S PRSINST(Y)=$G(^PRST(456,Y,0))
"RTN","PRSNCGR",149,0)
 ;
"RTN","PRSNCGR",150,0)
 ; Since the one, many or all call (VAUTOMA) doesn't explicitly return
"RTN","PRSNCGR",151,0)
 ; whether the user aborted the prompt, we need to check to see
"RTN","PRSNCGR",152,0)
 ; if there is anything in the selection array at this point
"RTN","PRSNCGR",153,0)
 ;  and return -1 if nothing was selected.
"RTN","PRSNCGR",154,0)
 ;
"RTN","PRSNCGR",155,0)
 S Y=0
"RTN","PRSNCGR",156,0)
 F  S Y=$O(PRSINST(Y)) Q:Y'>0  D
"RTN","PRSNCGR",157,0)
 .  S CNT=CNT+1
"RTN","PRSNCGR",158,0)
 I CNT'>0 S PRSINST=-1
"RTN","PRSNCGR",159,0)
 Q
"RTN","PRSNCGR",160,0)
 ;
"RTN","PRSNCGR",161,0)
ASKMM() ;
"RTN","PRSNCGR",162,0)
 W !!," Would you like to view the mismatch report"
"RTN","PRSNCGR",163,0)
 W !," for records to be released?"
"RTN","PRSNCGR",164,0)
 N DIR,DIRUT,X,Y S DIR(0)="Y",DIR("B")="N" D ^DIR
"RTN","PRSNCGR",165,0)
 I $D(DIRUT) S Y=-1
"RTN","PRSNCGR",166,0)
 Q Y
"RTN","PRSNCGR",167,0)
SUREQ() ;
"RTN","PRSNCGR",168,0)
 W !!," Are you sure you want to Release POC records?"
"RTN","PRSNCGR",169,0)
 N DIR,DIRUT,X,Y S DIR(0)="Y",DIR("B")="N" D ^DIR
"RTN","PRSNCGR",170,0)
 I $D(DIRUT) S Y=-1
"RTN","PRSNCGR",171,0)
 Q Y
"RTN","PRSNCGR",172,0)
 ;
"RTN","PRSNCGR",173,0)
EXTRECS(PC,SEGCNT,PPI,PRSIEN) ; get all POC activity for nurses pay period
"RTN","PRSNCGR",174,0)
 ;
"RTN","PRSNCGR",175,0)
 ;  INPUT:
"RTN","PRSNCGR",176,0)
 ;          PRSIEN - (required) nurse 450 IEN
"RTN","PRSNCGR",177,0)
 ;          PPI (required) pay period IEN
"RTN","PRSNCGR",178,0)
 ;  OUTPUT:
"RTN","PRSNCGR",179,0)
 ;          PC - Array of POC activity records formatted for
"RTN","PRSNCGR",180,0)
 ;             the extraction file.
"RTN","PRSNCGR",181,0)
 ;
"RTN","PRSNCGR",182,0)
 ; Note: any work from the 2nd Saturday night of the prior pay period is 
"RTN","PRSNCGR",183,0)
 ; returned in the zero node of PC, if that pp is either approved or
"RTN","PRSNCGR",184,0)
 ; released.
"RTN","PRSNCGR",185,0)
 ;
"RTN","PRSNCGR",186,0)
 ; In general.  Work from a two day tour is included on the node
"RTN","PRSNCGR",187,0)
 ; for that day.  I.e., two day tours are split at midnight.
"RTN","PRSNCGR",188,0)
 ; 
"RTN","PRSNCGR",189,0)
 N PRSD,POCD,T1,T2,SEG,SI,MT,T1N,T2N
"RTN","PRSNCGR",190,0)
 ;
"RTN","PRSNCGR",191,0)
 S SI=0
"RTN","PRSNCGR",192,0)
 K POCD
"RTN","PRSNCGR",193,0)
 ; If prior pp approved or released get any spillover from 2nd Sat.
"RTN","PRSNCGR",194,0)
 I "^A^R^"[(U_$P($G(^PRSN(451,PPI-1,"E",PRSIEN,0)),U,2)_U) D
"RTN","PRSNCGR",195,0)
 .  D L1^PRSNRUT1(.POCD,PPI-1,PRSIEN,14)
"RTN","PRSNCGR",196,0)
 .  S PRSD=0
"RTN","PRSNCGR",197,0)
 .  D SEGS
"RTN","PRSNCGR",198,0)
 ;
"RTN","PRSNCGR",199,0)
 F PRSD=1:1:14 D
"RTN","PRSNCGR",200,0)
 .  K POCD
"RTN","PRSNCGR",201,0)
 .  D L1^PRSNRUT1(.POCD,PPI,PRSIEN,PRSD)
"RTN","PRSNCGR",202,0)
 .  D SEGS
"RTN","PRSNCGR",203,0)
 ;
"RTN","PRSNCGR",204,0)
 ;   Don't extract day 14 from prior pay period
"RTN","PRSNCGR",205,0)
 K PC(0)
"RTN","PRSNCGR",206,0)
 ; we may end up with data in PC(15)--2 day tour on day 14 of current
"RTN","PRSNCGR",207,0)
 ; pp.  That should only be extracted for corrections and is handled
"RTN","PRSNCGR",208,0)
 ; by the release corrections logic
"RTN","PRSNCGR",209,0)
 Q
"RTN","PRSNCGR",210,0)
SEGS ;
"RTN","PRSNCGR",211,0)
 S SEG=0
"RTN","PRSNCGR",212,0)
 F  S SEG=$O(POCD(SEG)) Q:SEG'>0  D
"RTN","PRSNCGR",213,0)
 .;  T1 and T2 are start and stop times for each segment.
"RTN","PRSNCGR",214,0)
 .; 1st IF handles segments occuring entirely on 2nd day of a tour.
"RTN","PRSNCGR",215,0)
 .; 2nd if splits segments that cross midnight into segments on the day
"RTN","PRSNCGR",216,0)
 .; they occur and the ELSE DO handles segments entirely on 1st day.
"RTN","PRSNCGR",217,0)
 .;
"RTN","PRSNCGR",218,0)
 .    S (T1,T1N)=$P(POCD(SEG),U,9)
"RTN","PRSNCGR",219,0)
 .    S (T2,T2N)=$P(POCD(SEG),U,10)
"RTN","PRSNCGR",220,0)
 .    S MT=$P(POCD(SEG),U,3)
"RTN","PRSNCGR",221,0)
 .    I T1'<2400 D
"RTN","PRSNCGR",222,0)
 ..      S SI=SI+1
"RTN","PRSNCGR",223,0)
 ..      S PC(PRSD+1,SI)=POCD(SEG)
"RTN","PRSNCGR",224,0)
 ..      S T1N=T1-2400
"RTN","PRSNCGR",225,0)
 ..      S $P(PC(PRSD+1,SI),U,9)=T1N
"RTN","PRSNCGR",226,0)
 ..      S T2N=T2-2400
"RTN","PRSNCGR",227,0)
 ..      I MT S T2N=$$SUBMEAL(T1N,T2N,.MT)
"RTN","PRSNCGR",228,0)
 ..      S $P(PC(PRSD+1,SI),U,2)=$$EXTIME(T2N)
"RTN","PRSNCGR",229,0)
 ..      S $P(PC(PRSD+1,SI),U,3)=0
"RTN","PRSNCGR",230,0)
 ..      S $P(PC(PRSD+1,SI),U,10)=T2N
"RTN","PRSNCGR",231,0)
 .    E  D
"RTN","PRSNCGR",232,0)
 ..      I T2>2400 D
"RTN","PRSNCGR",233,0)
 ...        S SI=SI+1
"RTN","PRSNCGR",234,0)
 ...        S PC(PRSD,SI)=POCD(SEG)
"RTN","PRSNCGR",235,0)
 ...        S T2N=2400
"RTN","PRSNCGR",236,0)
 ...        I MT S T2N=$$SUBMEAL(T1N,T2N,.MT)
"RTN","PRSNCGR",237,0)
 ...        S $P(PC(PRSD,SI),U,2)=$$EXTIME(T2N)
"RTN","PRSNCGR",238,0)
 ...        S $P(PC(PRSD,SI),U,3)=0
"RTN","PRSNCGR",239,0)
 ...        S $P(PC(PRSD,SI),U,10)=T2N
"RTN","PRSNCGR",240,0)
 ...        S SI=SI+1
"RTN","PRSNCGR",241,0)
 ...        S PC(PRSD+1,SI)=POCD(SEG)
"RTN","PRSNCGR",242,0)
 ...        S T1N=0,T2N=T2-2400
"RTN","PRSNCGR",243,0)
 ...        S $P(PC(PRSD+1,SI),U)="MID"
"RTN","PRSNCGR",244,0)
 ...        S $P(PC(PRSD+1,SI),U,9)=T1N
"RTN","PRSNCGR",245,0)
 ...        I MT S T2N=$$SUBMEAL(T1N,T2N,.MT)
"RTN","PRSNCGR",246,0)
 ...        S $P(PC(PRSD+1,SI),U,2)=$$EXTIME(T2N)
"RTN","PRSNCGR",247,0)
 ...        S $P(PC(PRSD+1,SI),U,3)=0
"RTN","PRSNCGR",248,0)
 ...        S $P(PC(PRSD+1,SI),U,10)=T2N
"RTN","PRSNCGR",249,0)
 ..      E  D
"RTN","PRSNCGR",250,0)
 ...        S SI=SI+1
"RTN","PRSNCGR",251,0)
 ...        S PC(PRSD,SI)=POCD(SEG)
"RTN","PRSNCGR",252,0)
 ...        I MT S T2N=$$SUBMEAL(T1N,T2N,.MT)
"RTN","PRSNCGR",253,0)
 ...        S $P(PC(PRSD,SI),U,2)=$$EXTIME(T2N)
"RTN","PRSNCGR",254,0)
 ...        S $P(PC(PRSD,SI),U,3)=0
"RTN","PRSNCGR",255,0)
 ...        S $P(PC(PRSD,SI),U,10)=T2N
"RTN","PRSNCGR",256,0)
 S SEGCNT=SI
"RTN","PRSNCGR",257,0)
 Q
"RTN","PRSNCGR",258,0)
 ;
"RTN","PRSNCGR",259,0)
SUBMEAL(TIME1,TIME2,MEAL) ;
"RTN","PRSNCGR",260,0)
 ;
"RTN","PRSNCGR",261,0)
 ;MEAL should be passed with a . so that any partial meal application can be returned
"RTN","PRSNCGR",262,0)
 ;for processing on next segment on 2 day tours
"RTN","PRSNCGR",263,0)
 N TIME2N,MIN,MINDIF,MEALN
"RTN","PRSNCGR",264,0)
 S MINDIF=$$MINDIF(TIME1,TIME2)
"RTN","PRSNCGR",265,0)
 S MEALN=$S(MINDIF<MEAL:MINDIF,1:MEAL)
"RTN","PRSNCGR",266,0)
 S MEAL=MEAL-MEALN
"RTN","PRSNCGR",267,0)
 S MIN=TIME2#100
"RTN","PRSNCGR",268,0)
 I MIN'<MEALN S TIME2N=TIME2-MEALN Q TIME2N
"RTN","PRSNCGR",269,0)
 S TIME2N=TIME2-100+(60-MEALN)
"RTN","PRSNCGR",270,0)
 Q TIME2N
"RTN","PRSNCGR",271,0)
 ;
"RTN","PRSNCGR",272,0)
MINDIF(TIME1,TIME2) ;
"RTN","PRSNCGR",273,0)
 ;FIND THE NUMBER OF MINUTES BETWEEN TWO TIMES
"RTN","PRSNCGR",274,0)
 N MIN1,MIN2,MINDIF
"RTN","PRSNCGR",275,0)
 S MIN1=(TIME1\100*60)+(TIME1#100)
"RTN","PRSNCGR",276,0)
 S MIN2=(TIME2\100*60)+(TIME2#100)
"RTN","PRSNCGR",277,0)
 S MINDIF=MIN2-MIN1
"RTN","PRSNCGR",278,0)
 Q MINDIF
"RTN","PRSNCGR",279,0)
 ;
"RTN","PRSNCGR",280,0)
EXTIME(TIME) ;
"RTN","PRSNCGR",281,0)
 ;TIME IS IN MILTARY TIME
"RTN","PRSNCGR",282,0)
 ;outputs HH:MMA/P
"RTN","PRSNCGR",283,0)
 N EXTIME
"RTN","PRSNCGR",284,0)
 I 'TIME!(TIME=1200)!(TIME=2400) S EXTIME=$S(TIME=1200:"NOON",1:"MID") G EXTQ
"RTN","PRSNCGR",285,0)
 S EXTIME=$S(TIME>1259:TIME-1200,1:TIME),EXTIME=$E("000",1,4-$L(EXTIME))_EXTIME
"RTN","PRSNCGR",286,0)
 S EXTIME=$E(EXTIME,1,2)_":"_$E(EXTIME,3,4)_$S(TIME=2400:"A",TIME>1159:"P",1:"A")
"RTN","PRSNCGR",287,0)
 ;
"RTN","PRSNCGR",288,0)
EXTQ ;
"RTN","PRSNCGR",289,0)
 ;
"RTN","PRSNCGR",290,0)
 Q EXTIME
"RTN","PRSNCGR",291,0)
 ;
"RTN","PRSNCGR",292,0)
RESULTS(CNT,PPI) ; Print results of the Release
"RTN","PRSNCGR",293,0)
 N DIVI,DIVE,I,F,X,STNUM,STNAME
"RTN","PRSNCGR",294,0)
 W @IOF,!!,?14,"POC RECORDS RELEASED RESULTS FOR PAY PERIOD ",$P($G(^PRST(458,PPI,0)),U)
"RTN","PRSNCGR",295,0)
 W !,?14,"==========================================="
"RTN","PRSNCGR",296,0)
 W !!,?30,"TOTAL",?42,"TOTAL"
"RTN","PRSNCGR",297,0)
 W !,?4,"DIVISION",?30,"NURSES",?42,"RECORDS"
"RTN","PRSNCGR",298,0)
 W !,?4,"========",?30,"======",?42,"======="
"RTN","PRSNCGR",299,0)
 N I S I=0
"RTN","PRSNCGR",300,0)
 F  S I=$O(CNT(I)) Q:I'>0  D
"RTN","PRSNCGR",301,0)
 .  D GETS^DIQ(4,I_",",".01;99","EI","F(",,)
"RTN","PRSNCGR",302,0)
 .  S STNUM=F(4,I_",",99,"E"),STNAME=F(4,I_",",.01,"E")
"RTN","PRSNCGR",303,0)
 .  W !,?4,STNAME," (",STNUM,")",?30,$P(CNT(I),U),?44,$P(CNT(I),U,2)
"RTN","PRSNCGR",304,0)
 W !!! S X=$$ASK^PRSLIB00(1)
"RTN","PRSNCGR",305,0)
 Q
"RTN","PRSNCGR",306,0)
 ;
"RTN","PRSNCGR",307,0)
PPRELCHK(PPS,PRSINST,PPI) ; BUILD ARRAY OF PAY PERIODS WITH APPROVED DATA
"RTN","PRSNCGR",308,0)
 ; BY DIVISION
"RTN","PRSNCGR",309,0)
 ;
"RTN","PRSNCGR",310,0)
 ;  INPUT:
"RTN","PRSNCGR",311,0)
 ;    PRSINST (required) array of institutions to check
"RTN","PRSNCGR",312,0)
 ;    PPI (optional) if passed only that pay period will be checked
"RTN","PRSNCGR",313,0)
 ;         otherwise all pps will be checked
"RTN","PRSNCGR",314,0)
 ;  OUTPUT:
"RTN","PRSNCGR",315,0)
 ;    PPS (returned by reference) two part array. Portion w/subscript
"RTN","PRSNCGR",316,0)
 ;         "P" contains pay periods w/approved recs. for any of the 
"RTN","PRSNCGR",317,0)
 ;         divisions in PRSINST.  Subscipt "D" is division specific 
"RTN","PRSNCGR",318,0)
 ;         w/total approved records for each pay period.
"RTN","PRSNCGR",319,0)
 ;
"RTN","PRSNCGR",320,0)
 N REC,CNT,FIELD,STOP
"RTN","PRSNCGR",321,0)
 I $G(PPI)>0 D
"RTN","PRSNCGR",322,0)
 .   S STOP=PPI
"RTN","PRSNCGR",323,0)
 E  D
"RTN","PRSNCGR",324,0)
 .   S STOP=99999999
"RTN","PRSNCGR",325,0)
 S REC=0
"RTN","PRSNCGR",326,0)
 F  S REC=$O(PRSINST(REC)) Q:REC'>0  D
"RTN","PRSNCGR",327,0)
 .  S CI=+PRSINST(REC)
"RTN","PRSNCGR",328,0)
 .  S PPI=+$G(PPI)
"RTN","PRSNCGR",329,0)
 .  F  S PPI=$O(^PRSN(451,"AA",CI,PPI)) Q:PPI'>0!(PPI>STOP)  D
"RTN","PRSNCGR",330,0)
 ..    S PPS("D",CI,PPI)=0
"RTN","PRSNCGR",331,0)
 ..    S PPS("P",PPI)=""
"RTN","PRSNCGR",332,0)
 ..    S PRSIEN=0
"RTN","PRSNCGR",333,0)
 ..    F  S PRSIEN=$O(^PRSN(451,"AA",CI,PPI,PRSIEN)) Q:PRSIEN'>0  D
"RTN","PRSNCGR",334,0)
 ...      S PPS("D",CI,PPI)=PPS("D",CI,PPI)+1
"RTN","PRSNCGR",335,0)
 Q
"RTN","PRSNCGR1")
0^8^B27388966^n/a
"RTN","PRSNCGR1",1,0)
PRSNCGR1 ;WOIFO-JAH - Release POC Records for VANOD Extraction;10/16/09
"RTN","PRSNCGR1",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNCGR1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSNCGR1",4,0)
 Q
"RTN","PRSNCGR1",5,0)
 ;
"RTN","PRSNCGR1",6,0)
FILEPP(PC,PRSIEN,PPI,INST,STATN) ; file pay per activity records for Nurse to extraction AND update extraction version number in 451
"RTN","PRSNCGR1",7,0)
 ;
"RTN","PRSNCGR1",8,0)
 N PRSD,I,PRSFDA,PCDATA,X,X1,OTR,LOC,LOCDIV
"RTN","PRSNCGR1",9,0)
 S PRSD=0
"RTN","PRSNCGR1",10,0)
 F  S PRSD=$O(PC(PRSD)) Q:PRSD'>0!(PRSD>14)  D
"RTN","PRSNCGR1",11,0)
 .;
"RTN","PRSNCGR1",12,0)
 .;  increment version number for this day's extraction
"RTN","PRSNCGR1",13,0)
 .   D EXTVERS(.VNUM,PPI,PRSIEN,PRSD)
"RTN","PRSNCGR1",14,0)
 .;
"RTN","PRSNCGR1",15,0)
 .  S I=0
"RTN","PRSNCGR1",16,0)
 .  F  S I=$O(PC(PRSD,I)) Q:I'>0  D
"RTN","PRSNCGR1",17,0)
 ..   S PCDATA=PC(PRSD,I)
"RTN","PRSNCGR1",18,0)
 ..   K PRSFDA,IEN
"RTN","PRSNCGR1",19,0)
 ..   S LOC=$P(PCDATA,U,5)
"RTN","PRSNCGR1",20,0)
 ..   S LOCDIV=$S(LOC="":"",1:$P($$ISACTIVE^PRSNUT01("",LOC),U,4))
"RTN","PRSNCGR1",21,0)
 ..   S PRSFDA(451.7,"+1,",.01)=$P($G(^PRSN(451.7,0)),U,3)+1
"RTN","PRSNCGR1",22,0)
 ..   S PRSFDA(451.7,"+1,",1)=$G(INST)
"RTN","PRSNCGR1",23,0)
 ..   S PRSFDA(451.7,"+1,",2)=LOCDIV
"RTN","PRSNCGR1",24,0)
 ..   S PRSFDA(451.7,"+1,",3)=VNUM
"RTN","PRSNCGR1",25,0)
 ..   S PRSFDA(451.7,"+1,",4)=$P($G(^PRSPC(PRSIEN,0)),U,9)
"RTN","PRSNCGR1",26,0)
 ..   S PRSFDA(451.7,"+1,",5)=+PRSIEN
"RTN","PRSNCGR1",27,0)
 ..   S X=$P($G(^PRST(458,PPI,1)),U,PRSD)
"RTN","PRSNCGR1",28,0)
 ..   S X1=$E(X,1,3)+1700_$E(X,4,7)
"RTN","PRSNCGR1",29,0)
 ..   S PRSFDA(451.7,"+1,",6)=X1
"RTN","PRSNCGR1",30,0)
 ..   S PRSFDA(451.7,"+1,",7)=$P(PCDATA,U,9) ;           Start time
"RTN","PRSNCGR1",31,0)
 ..   S PRSFDA(451.7,"+1,",8)=$P(PCDATA,U,10) ;          Stop time
"RTN","PRSNCGR1",32,0)
 ..   S PRSFDA(451.7,"+1,",9)=$P(PCDATA,U,4) ;         POC type of time
"RTN","PRSNCGR1",33,0)
 ..   S PRSFDA(451.7,"+1,",10)=LOC ;        Point of care
"RTN","PRSNCGR1",34,0)
 ..   S PRSFDA(451.7,"+1,",11)=$P(PCDATA,U,7) ;        mand. ot?
"RTN","PRSNCGR1",35,0)
 ..;
"RTN","PRSNCGR1",36,0)
 ..   S OTR=$P(PCDATA,U,8)
"RTN","PRSNCGR1",37,0)
 ..   I OTR>0 S OTR=$P($G(^PRSN(451.6,OTR,0)),U) ;   OT reason
"RTN","PRSNCGR1",38,0)
 ..   S PRSFDA(451.7,"+1,",12)=OTR
"RTN","PRSNCGR1",39,0)
 ..;                                                 451.5 type of wrk
"RTN","PRSNCGR1",40,0)
 ..   S PRSFDA(451.7,"+1,",13)=$P($G(^PRSN(451.5,+$P(PCDATA,U,6),0)),U)
"RTN","PRSNCGR1",41,0)
 ..   S PRSFDA(451.7,"+1,",14)=DT ;                    release date
"RTN","PRSNCGR1",42,0)
 ..   S PRSFDA(451.7,"+1,",15)=$P(^PRSN(451,PPI,"E",PRSIEN,0),U,7) ; T&L WHEN APPROVED
"RTN","PRSNCGR1",43,0)
 ..   D UPDATE^DIE("","PRSFDA","IEN"),MSG^DIALOG()
"RTN","PRSNCGR1",44,0)
 Q
"RTN","PRSNCGR1",45,0)
 ;
"RTN","PRSNCGR1",46,0)
EXTVERS(VNUM,PPI,PRSIEN,PRSD) ; update extraction version in POC records file
"RTN","PRSNCGR1",47,0)
 ;
"RTN","PRSNCGR1",48,0)
 ;  RETURN: VNUM-the version number of the extraction for the 
"RTN","PRSNCGR1",49,0)
 ;               day (PRSD = 1-14) of the pay period.
"RTN","PRSNCGR1",50,0)
 ;
"RTN","PRSNCGR1",51,0)
 ; increment Extraction Version number.  If no data on node then
"RTN","PRSNCGR1",52,0)
 ; we are dealing with the initial extraction for 2nd day of a 
"RTN","PRSNCGR1",53,0)
 ; two day tour, so add a node and set version to 1. Subsequent
"RTN","PRSNCGR1",54,0)
 ; releases to day will then have the correct version number.
"RTN","PRSNCGR1",55,0)
 ;
"RTN","PRSNCGR1",56,0)
 K FDA,IENS
"RTN","PRSNCGR1",57,0)
 ;
"RTN","PRSNCGR1",58,0)
 I $D(^PRSN(451,PPI,"E",PRSIEN,"D",PRSD,0)) D
"RTN","PRSNCGR1",59,0)
 .  S IENS=PRSD_","_PRSIEN_","_PPI_","
"RTN","PRSNCGR1",60,0)
 .  S VNUM=1+$P($G(^PRSN(451,PPI,"E",PRSIEN,"D",PRSD,0)),U,3)
"RTN","PRSNCGR1",61,0)
 E  D
"RTN","PRSNCGR1",62,0)
 .  S IENS="+1,"_PRSIEN_","_PPI_","
"RTN","PRSNCGR1",63,0)
 .  S IENS(1)=PRSD
"RTN","PRSNCGR1",64,0)
 .  S VNUM=1
"RTN","PRSNCGR1",65,0)
 .  S FDA(451.99,IENS,.01)=PRSD
"RTN","PRSNCGR1",66,0)
 S FDA(451.99,IENS,2)=VNUM
"RTN","PRSNCGR1",67,0)
 ;
"RTN","PRSNCGR1",68,0)
 D UPDATE^DIE("","FDA","IENS"),MSG^DIALOG()
"RTN","PRSNCGR1",69,0)
 Q
"RTN","PRSNCGR1",70,0)
 ;
"RTN","PRSNCGR1",71,0)
UPDTPOC(PPI,PRSIEN,STATUS,RETURN) ; update pay period status for nurse POC records
"RTN","PRSNCGR1",72,0)
 ; INPUT:
"RTN","PRSNCGR1",73,0)
 ;   PPI, PRSIEN: Standard
"RTN","PRSNCGR1",74,0)
 ;   STATUS: POC pay period status (E)ntered, (A)pproved, (R)eleased
"RTN","PRSNCGR1",75,0)
 ;   RETURN: (optional) flag set to true to indicate the pay period
"RTN","PRSNCGR1",76,0)
 ;                      is being returned
"RTN","PRSNCGR1",77,0)
 N IENS,PRSFDA,PRIMLOC
"RTN","PRSNCGR1",78,0)
 S IENS=PRSIEN_","_PPI_","
"RTN","PRSNCGR1",79,0)
 S PRSFDA(451.09,IENS,1)=STATUS
"RTN","PRSNCGR1",80,0)
 I STATUS="A" D
"RTN","PRSNCGR1",81,0)
 .  S PRIMLOC=+$$PRIMLOC^PRSNUT03(+$G(^PRSPC(PRSIEN,200)))
"RTN","PRSNCGR1",82,0)
 .  S PRSFDA(451.09,IENS,4)=$P($$DIV^PRSNUT03("N",+PRIMLOC),U,3)
"RTN","PRSNCGR1",83,0)
 .  S PRSFDA(451.09,IENS,2)=DUZ
"RTN","PRSNCGR1",84,0)
 .  N %,X,%I,%H D NOW^%DTC
"RTN","PRSNCGR1",85,0)
 .  S PRSFDA(451.09,IENS,3)=%
"RTN","PRSNCGR1",86,0)
 .  S PRSFDA(451.09,IENS,5)=PRIMLOC
"RTN","PRSNCGR1",87,0)
 .  S PRSFDA(451.09,IENS,6)=$P($G(^PRSPC(PRSIEN,0)),U,8)
"RTN","PRSNCGR1",88,0)
 I STATUS="E"&$G(RETURN) D 
"RTN","PRSNCGR1",89,0)
 .  S PRSFDA(451.09,IENS,4)="@"
"RTN","PRSNCGR1",90,0)
 .  S PRSFDA(451.09,IENS,2)="@"
"RTN","PRSNCGR1",91,0)
 .  S PRSFDA(451.09,IENS,3)="@"
"RTN","PRSNCGR1",92,0)
 .  S PRSFDA(451.09,IENS,5)="@"
"RTN","PRSNCGR1",93,0)
 .  S PRSFDA(451.09,IENS,6)="@"
"RTN","PRSNCGR1",94,0)
 D UPDATE^DIE("","PRSFDA","IENS"),MSG^DIALOG()
"RTN","PRSNCGR1",95,0)
 Q
"RTN","PRSNCGR1",96,0)
UPDTPP(PPI,CI,NRSCNT,RECNT) ; update division release history for pay period
"RTN","PRSNCGR1",97,0)
 N IENS,PRSFDA
"RTN","PRSNCGR1",98,0)
 S IENS="+1,"_PPI_","
"RTN","PRSNCGR1",99,0)
 S PRSFDA(451.06,IENS,.01)=CI
"RTN","PRSNCGR1",100,0)
 S PRSFDA(451.06,IENS,1)=DUZ
"RTN","PRSNCGR1",101,0)
 N %,X,%I,%H D NOW^%DTC
"RTN","PRSNCGR1",102,0)
 S PRSFDA(451.06,IENS,2)=%
"RTN","PRSNCGR1",103,0)
 S PRSFDA(451.06,IENS,3)=NRSCNT
"RTN","PRSNCGR1",104,0)
 S PRSFDA(451.06,IENS,4)=RECNT
"RTN","PRSNCGR1",105,0)
 D UPDATE^DIE("","PRSFDA","IENS"),MSG^DIALOG()
"RTN","PRSNCGR1",106,0)
 Q
"RTN","PRSNCGR1",107,0)
 ;
"RTN","PRSNCGR1",108,0)
CNTREP(PRSINST,PPI) ;  Report on the record status for each division
"RTN","PRSNCGR1",109,0)
 ;
"RTN","PRSNCGR1",110,0)
 ;  INPUT: PRSINST- array of instituions
"RTN","PRSNCGR1",111,0)
 ;
"RTN","PRSNCGR1",112,0)
 N REC,PRECNT,FIELD,PC,DIV,CI,PRSIEN,PRIM,SN
"RTN","PRSNCGR1",113,0)
 S REC=0
"RTN","PRSNCGR1",114,0)
 F  S REC=$O(PRSINST(REC)) Q:REC'>0  D
"RTN","PRSNCGR1",115,0)
 .  S CI=+PRSINST(REC)
"RTN","PRSNCGR1",116,0)
 .  D GETS^DIQ(4,CI_",","99","E","FIELD(",,)
"RTN","PRSNCGR1",117,0)
 .  S SN=FIELD(4,CI_",",99,"E")
"RTN","PRSNCGR1",118,0)
 .  S PRECNT(CI)="0^0^0"
"RTN","PRSNCGR1",119,0)
 .;
"RTN","PRSNCGR1",120,0)
 .; count up entered records
"RTN","PRSNCGR1",121,0)
 .;
"RTN","PRSNCGR1",122,0)
 .  S PRSIEN=0
"RTN","PRSNCGR1",123,0)
 .  F  S PRSIEN=$O(^PRSN(451,"AE",PRSIEN)) Q:PRSIEN'>0  D
"RTN","PRSNCGR1",124,0)
 ..    S PRIM=$$PRIMLOC^PRSNUT03(+$G(^PRSPC(PRSIEN,200)))
"RTN","PRSNCGR1",125,0)
 ..    S DIV=$P($$ISACTIVE^PRSNUT01(DT,+PRIM),U,4)
"RTN","PRSNCGR1",126,0)
 ..    I (DIV=CI),($D(^PRSN(451,"AE",PRSIEN,PPI))) D
"RTN","PRSNCGR1",127,0)
 ...       S $P(PRECNT(CI),U)=$P(PRECNT(CI),U)+1
"RTN","PRSNCGR1",128,0)
 .;
"RTN","PRSNCGR1",129,0)
 .; count up approved records
"RTN","PRSNCGR1",130,0)
 .;
"RTN","PRSNCGR1",131,0)
 .  S PRSIEN=0
"RTN","PRSNCGR1",132,0)
 .  F  S PRSIEN=$O(^PRSN(451,"AA",CI,PPI,PRSIEN)) Q:PRSIEN'>0  D
"RTN","PRSNCGR1",133,0)
 ..    S $P(PRECNT(CI),U,2)=$P(PRECNT(CI),U,2)+1
"RTN","PRSNCGR1",134,0)
 .;
"RTN","PRSNCGR1",135,0)
 .; count up released records
"RTN","PRSNCGR1",136,0)
 .;
"RTN","PRSNCGR1",137,0)
 .  S PRSIEN=0
"RTN","PRSNCGR1",138,0)
 .  F  S PRSIEN=$O(^PRSN(451,"AR",CI,PPI,PRSIEN)) Q:PRSIEN'>0  D
"RTN","PRSNCGR1",139,0)
 ..    S $P(PRECNT(CI),U,3)=$P(PRECNT(CI),U,3)+1
"RTN","PRSNCGR1",140,0)
 ;
"RTN","PRSNCGR1",141,0)
 ; Display counts for the division
"RTN","PRSNCGR1",142,0)
 ;
"RTN","PRSNCGR1",143,0)
 W @IOF,!!!,?14,"Pay Period ",$P($G(^PRST(458,PPI,0)),U)," Statistics"
"RTN","PRSNCGR1",144,0)
 N DIVI,DIVE,I,F,X
"RTN","PRSNCGR1",145,0)
 W !,?14,"==============================="
"RTN","PRSNCGR1",146,0)
 W !!,?26,"NURSES POINT OF CARE PAY PERIOD RECORD STATUS"
"RTN","PRSNCGR1",147,0)
 W !,?4,"DIVISION",?41,"UNAPPROVED",?54,"APPROVED",?66,"RELEASED"
"RTN","PRSNCGR1",148,0)
 W !,?4,"========",?41,"==========",?54,"========",?66,"========"
"RTN","PRSNCGR1",149,0)
 N I,STNUM,STNAME S I=0
"RTN","PRSNCGR1",150,0)
 F  S I=$O(PRECNT(I)) Q:I'>0  D
"RTN","PRSNCGR1",151,0)
 .  D GETS^DIQ(4,I_",",".01;99","EI","F(",,)
"RTN","PRSNCGR1",152,0)
 .  S STNUM=F(4,I_",",99,"E"),STNAME=F(4,I_",",.01,"E")
"RTN","PRSNCGR1",153,0)
 .  W !,?4,STNAME," (",STNUM,")"
"RTN","PRSNCGR1",154,0)
 .  W ?42,$J($P(PRECNT(I),U),8)
"RTN","PRSNCGR1",155,0)
 .  W ?54,$J($P(PRECNT(I),U,2),8)
"RTN","PRSNCGR1",156,0)
 .  W ?66,$J($P(PRECNT(I),U,3),8)
"RTN","PRSNCGR1",157,0)
 Q
"RTN","PRSNCR1")
0^10^B13036287^n/a
"RTN","PRSNCR1",1,0)
PRSNCR1 ;WOIFO/DAM - Return Approved POC Record;10/28/09
"RTN","PRSNCR1",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNCR1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","PRSNCR1",4,0)
 Q
"RTN","PRSNCR1",5,0)
RETPOC ; called from option Return Approved Nurse POC Daily Time Record
"RTN","PRSNCR1",6,0)
 N GROUP,PRSIEN,VALUE,CANRET
"RTN","PRSNCR1",7,0)
 D PIKGROUP^PRSNUT04(.GROUP,"",0)
"RTN","PRSNCR1",8,0)
 ; quit if any error during group selection
"RTN","PRSNCR1",9,0)
 I $P($G(GROUP(0)),U,2)="E" W !!,?4,$P(GROUP(0),U,3) S X=$$ASK^PRSLIB00(1) Q
"RTN","PRSNCR1",10,0)
 S VALUE=+GROUP($O(GROUP(0)))
"RTN","PRSNCR1",11,0)
 Q:VALUE'>0
"RTN","PRSNCR1",12,0)
 ;
"RTN","PRSNCR1",13,0)
 ; Select Nurse
"RTN","PRSNCR1",14,0)
 ;
"RTN","PRSNCR1",15,0)
 S PRSIEN=+$$PICKNURS^PRSNUT03($P(GROUP(0),U,2),VALUE)
"RTN","PRSNCR1",16,0)
 Q:+PRSIEN'>0
"RTN","PRSNCR1",17,0)
 ;
"RTN","PRSNCR1",18,0)
 ; Allow user to select a date and reprompt if record is not valid
"RTN","PRSNCR1",19,0)
 ; for return
"RTN","PRSNCR1",20,0)
 ;
"RTN","PRSNCR1",21,0)
 N %DT,Y,X,OUT
"RTN","PRSNCR1",22,0)
 S (CANRET,OUT)=0
"RTN","PRSNCR1",23,0)
 S %DT="A"
"RTN","PRSNCR1",24,0)
 F  D  Q:CANRET!OUT
"RTN","PRSNCR1",25,0)
 .  D ^%DT
"RTN","PRSNCR1",26,0)
 .  I $G(X)[U!($G(X)="")!(Y'>0) S OUT=1 Q
"RTN","PRSNCR1",27,0)
 .  S PRSDT=Y
"RTN","PRSNCR1",28,0)
 .  S PRSDTDAT=$G(^PRST(458,"AD",PRSDT))
"RTN","PRSNCR1",29,0)
 .  S PPI=$P(PRSDTDAT,U),PRSD=$P(PRSDTDAT,U,2)
"RTN","PRSNCR1",30,0)
 .  I (PRSD'>0)!(PPI'>0) W " ?? ",$C(7),"ETA Timecard record does not exist for that date." Q
"RTN","PRSNCR1",31,0)
 .  S CANRET=$$CANRET(PRSIEN,PRSDT,PRSD,PPI)
"RTN","PRSNCR1",32,0)
 .  I 'CANRET W " ?? ",$C(7),$P(CANRET,U,3)
"RTN","PRSNCR1",33,0)
 Q:OUT!('CANRET)
"RTN","PRSNCR1",34,0)
 ;
"RTN","PRSNCR1",35,0)
 D POCDSPLY^PRSNRUT0(PRSIEN,PRSDT,PRSDT)
"RTN","PRSNCR1",36,0)
 ;
"RTN","PRSNCR1",37,0)
 ; Confirm that the user does want to return the record
"RTN","PRSNCR1",38,0)
 ;
"RTN","PRSNCR1",39,0)
 N DIR,X,Y,DIRUT
"RTN","PRSNCR1",40,0)
 S DIR(0)="Y"
"RTN","PRSNCR1",41,0)
 S DIR("B")="YES"
"RTN","PRSNCR1",42,0)
 S DIR("A",1)="Are you sure you want to return this Nurse's"
"RTN","PRSNCR1",43,0)
 S DIR("A")=$S($P(CANRET,U,2)="R":"daily record",1:"entire pay period")_" for editing"
"RTN","PRSNCR1",44,0)
 S DIR("?")="Accept the default YES or enter NO"
"RTN","PRSNCR1",45,0)
 D ^DIR
"RTN","PRSNCR1",46,0)
 Q:$D(DIRUT)!'$G(Y)
"RTN","PRSNCR1",47,0)
 ;
"RTN","PRSNCR1",48,0)
 ; Lookup Record
"RTN","PRSNCR1",49,0)
 ;
"RTN","PRSNCR1",50,0)
 ; Confirm return or display a status message that record can't be returned.
"RTN","PRSNCR1",51,0)
 ; Display Record on that date?
"RTN","PRSNCR1",52,0)
 ;
"RTN","PRSNCR1",53,0)
 ;  if pp status is R then it must be a return of a daily correction
"RTN","PRSNCR1",54,0)
 ;  otherwise we return the whole pay period.
"RTN","PRSNCR1",55,0)
 ;
"RTN","PRSNCR1",56,0)
 I $P(CANRET,U,2)="R" D
"RTN","PRSNCR1",57,0)
 .  D UPDTPOCD^PRSNCGP(PPI,PRSIEN,PRSD,"","E")
"RTN","PRSNCR1",58,0)
 .  W !,"POC daily record successfully returned."
"RTN","PRSNCR1",59,0)
 E  D
"RTN","PRSNCR1",60,0)
 .  D UPDTPOC^PRSNCGR1(PPI,PRSIEN,"E",1)
"RTN","PRSNCR1",61,0)
 .  W !,"POC pay period successfully returned."
"RTN","PRSNCR1",62,0)
 ;
"RTN","PRSNCR1",63,0)
 Q
"RTN","PRSNCR1",64,0)
 ;
"RTN","PRSNCR1",65,0)
CANRET(PRSIEN,PRSDT,PRSD,PPI) ; Return true if the record on the specified date
"RTN","PRSNCR1",66,0)
 ; is allowed to be deleted, otherwise return an error message.
"RTN","PRSNCR1",67,0)
 ;
"RTN","PRSNCR1",68,0)
 N CANRET,PRSDTDAT,PDAYSTAT,PPSTAT
"RTN","PRSNCR1",69,0)
 S CANRET=0
"RTN","PRSNCR1",70,0)
 ;
"RTN","PRSNCR1",71,0)
 ;
"RTN","PRSNCR1",72,0)
 ;  check does record exist
"RTN","PRSNCR1",73,0)
 ;
"RTN","PRSNCR1",74,0)
 I '+$G(^PRSN(451,PPI,"E",PRSIEN,"D",PRSD,0)) D  Q CANRET
"RTN","PRSNCR1",75,0)
 .  S CANRET="0^^POC record does not exist for that date."
"RTN","PRSNCR1",76,0)
 ;
"RTN","PRSNCR1",77,0)
 ;  if pay period status is only (A)pproved then this pay 
"RTN","PRSNCR1",78,0)
 ;  pay period record has never been released and can be
"RTN","PRSNCR1",79,0)
 ;  returned
"RTN","PRSNCR1",80,0)
 ;
"RTN","PRSNCR1",81,0)
 S PPSTAT=$P($G(^PRSN(451,PPI,"E",PRSIEN,0)),U,2)
"RTN","PRSNCR1",82,0)
 I PPSTAT="A" S CANRET="1"_U_PPSTAT_U Q CANRET
"RTN","PRSNCR1",83,0)
 ;
"RTN","PRSNCR1",84,0)
 I PPSTAT="E" D  Q CANRET
"RTN","PRSNCR1",85,0)
 .  S CANRET="0"_U_PPSTAT_U_"POC record status is Entered.  It does not need to be returned.  It is currently available for editing."
"RTN","PRSNCR1",86,0)
 ;
"RTN","PRSNCR1",87,0)
 ; If pay period status is released we need to check the status
"RTN","PRSNCR1",88,0)
 ; of individual days to determine if Coordinator can return
"RTN","PRSNCR1",89,0)
 ;
"RTN","PRSNCR1",90,0)
 S PDAYSTAT=$P($G(^PRSN(451,PPI,"E",PRSIEN,"D",PRSD,0)),U,2)
"RTN","PRSNCR1",91,0)
 ;
"RTN","PRSNCR1",92,0)
 I PDAYSTAT="" D  Q CANRET
"RTN","PRSNCR1",93,0)
 . S CANRET="0"_U_PPSTAT_U_"Record does not need to be returned.  It is currently available for editing."
"RTN","PRSNCR1",94,0)
 ;
"RTN","PRSNCR1",95,0)
 ; status A can be returned, otherwise it's Entered or Released
"RTN","PRSNCR1",96,0)
 ; and can already be edited or deleted or approved.
"RTN","PRSNCR1",97,0)
 ;
"RTN","PRSNCR1",98,0)
 I PDAYSTAT="A" D
"RTN","PRSNCR1",99,0)
 .  S CANRET="1"_U_PPSTAT_U
"RTN","PRSNCR1",100,0)
 E  D
"RTN","PRSNCR1",101,0)
 .  S CANRET="0"_U_PPSTAT_U_"POC record status is "_$S(PDAYSTAT="E":"Entered",1:"Released")_". It is currently available for editing."
"RTN","PRSNCR1",102,0)
 ;
"RTN","PRSNCR1",103,0)
 ;
"RTN","PRSNCR1",104,0)
 Q CANRET
"RTN","PRSNCR1",105,0)
 ;
"RTN","PRSNCTL")
0^11^B22429209^n/a
"RTN","PRSNCTL",1,0)
PRSNCTL ;WOIFO/DWA - Edit T&L Unit POC Entry and Approval Personnel ;11/24/09
"RTN","PRSNCTL",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNCTL",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSNCTL",4,0)
 Q
"RTN","PRSNCTL",5,0)
 ;
"RTN","PRSNCTL",6,0)
EDIT ; Enter/Edit POC Entry and Approval Personnel for a T&L Unit
"RTN","PRSNCTL",7,0)
 N TEMPLATE,STOP S STOP=0
"RTN","PRSNCTL",8,0)
 S TEMPLATE="[PRSN EDIT TL POC]"
"RTN","PRSNCTL",9,0)
 F  D  Q:STOP>0
"RTN","PRSNCTL",10,0)
 . D MAIN(.STOP,TEMPLATE)
"RTN","PRSNCTL",11,0)
 ;
"RTN","PRSNCTL",12,0)
 Q
"RTN","PRSNCTL",13,0)
 ;
"RTN","PRSNCTL",14,0)
DISP ; Display T&L Unit
"RTN","PRSNCTL",15,0)
 N TEMPLATE,STOP S STOP=0
"RTN","PRSNCTL",16,0)
 S TEMPLATE="[PRSA TL DISP]"
"RTN","PRSNCTL",17,0)
 F  D  Q:STOP>0
"RTN","PRSNCTL",18,0)
 . D MAIN(.STOP,TEMPLATE)
"RTN","PRSNCTL",19,0)
 ;
"RTN","PRSNCTL",20,0)
 Q
"RTN","PRSNCTL",21,0)
 ;
"RTN","PRSNCTL",22,0)
MAIN(STOP,T) ;
"RTN","PRSNCTL",23,0)
 N TLI,DA,DDSFILE,DR,DS
"RTN","PRSNCTL",24,0)
 S STOP=0
"RTN","PRSNCTL",25,0)
 S TLI=$$INIT()
"RTN","PRSNCTL",26,0)
 I TLI'>0 S STOP=1 Q
"RTN","PRSNCTL",27,0)
 S DA=+TLI,DDSFILE=455.5,DR=T
"RTN","PRSNCTL",28,0)
 D ^DDS K DS
"RTN","PRSNCTL",29,0)
 Q
"RTN","PRSNCTL",30,0)
 ;
"RTN","PRSNCTL",31,0)
INIT() ;
"RTN","PRSNCTL",32,0)
 D HDR
"RTN","PRSNCTL",33,0)
 N DIC,X,Y,DUOUT,DTOUT
"RTN","PRSNCTL",34,0)
 S DIC="^PRST(455.5,",DIC(0)="AEQLM",DIC("A")="Select T&L Unit: " D ^DIC K DIC
"RTN","PRSNCTL",35,0)
 I $D(DUOUT)!$D(DTOUT)!(Y'>0) Q 0
"RTN","PRSNCTL",36,0)
 Q Y
"RTN","PRSNCTL",37,0)
 ;
"RTN","PRSNCTL",38,0)
HDR ; Header
"RTN","PRSNCTL",39,0)
 W:$E(IOST,1,2)="C-" @IOF
"RTN","PRSNCTL",40,0)
 W !,?26,"VA TIME & ATTENDANCE SYSTEM",!
"RTN","PRSNCTL",41,0)
 W ?24,"EDIT POC ENTRY & APPROVAL PERSONNEL",!
"RTN","PRSNCTL",42,0)
 W ?36,"T&L UNIT",!!!
"RTN","PRSNCTL",43,0)
 ;
"RTN","PRSNCTL",44,0)
 Q
"RTN","PRSNCTL",45,0)
 ;
"RTN","PRSNCTL",46,0)
TL2PEV ;OVERWRITE T&L TIMEKEEPERS AND SUPERVISORS TO PEV DATA ENTRY AND
"RTN","PRSNCTL",47,0)
 ;APPROVERS
"RTN","PRSNCTL",48,0)
 ;
"RTN","PRSNCTL",49,0)
 ;Prompt for T&L unit
"RTN","PRSNCTL",50,0)
 ;
"RTN","PRSNCTL",51,0)
 N DIC,X,Y,DUOUT,DTOUT
"RTN","PRSNCTL",52,0)
 S DIC="^PRST(455.5,",DIC(0)="AEQM",DIC("A")="Select T&L Unit: "
"RTN","PRSNCTL",53,0)
 D ^DIC
"RTN","PRSNCTL",54,0)
 Q:$D(DUOUT)!$D(DTOUT)!Y'>0
"RTN","PRSNCTL",55,0)
 N TLIEN,ENIEN,SUIEN,APIEN,TKIEN,IENS,IEN,FDA,J,STOP,IEN450
"RTN","PRSNCTL",56,0)
 S TLIEN=+Y
"RTN","PRSNCTL",57,0)
 ;
"RTN","PRSNCTL",58,0)
 D HDR2
"RTN","PRSNCTL",59,0)
 S (ENIEN,SUIEN,APIEN,TKIEN,STOP)=0
"RTN","PRSNCTL",60,0)
 F  D  Q:STOP
"RTN","PRSNCTL",61,0)
 .S:TKIEN'="" TKIEN=$O(^PRST(455.5,TLIEN,"T","B",TKIEN))
"RTN","PRSNCTL",62,0)
 .S:ENIEN'="" ENIEN=$O(^PRST(455.5,TLIEN,2,"B",ENIEN))
"RTN","PRSNCTL",63,0)
 .I TKIEN="",ENIEN="" S STOP=1 Q
"RTN","PRSNCTL",64,0)
 .W !
"RTN","PRSNCTL",65,0)
 .I TKIEN'="" W $S($$SEP(TKIEN)="Y":"*",1:" "),$P($G(^VA(200,TKIEN,0)),U)
"RTN","PRSNCTL",66,0)
 .I ENIEN'="" W ?40,$S($$SEP(ENIEN)="Y":"*",1:" "),$P($G(^VA(200,ENIEN,0)),U)
"RTN","PRSNCTL",67,0)
 ;
"RTN","PRSNCTL",68,0)
 D HDR3
"RTN","PRSNCTL",69,0)
 S (ENIEN,SUIEN,APIEN,TKIEN,STOP)=0
"RTN","PRSNCTL",70,0)
 F  D  Q:STOP
"RTN","PRSNCTL",71,0)
 .S:SUIEN'="" SUIEN=$O(^PRST(455.5,TLIEN,"S","B",SUIEN))
"RTN","PRSNCTL",72,0)
 .S:APIEN'="" APIEN=$O(^PRST(455.5,TLIEN,3,"B",APIEN))
"RTN","PRSNCTL",73,0)
 .I SUIEN="",APIEN="" S STOP=1 Q
"RTN","PRSNCTL",74,0)
 .W !
"RTN","PRSNCTL",75,0)
 .I SUIEN'="" W $S($$SEP(SUIEN)="Y":"*",1:" "),$P($G(^VA(200,SUIEN,0)),U)
"RTN","PRSNCTL",76,0)
 .I APIEN'="" W ?40,$S($$SEP(APIEN)="Y":"*",1:" "),$P($G(^VA(200,APIEN,0)),U)
"RTN","PRSNCTL",77,0)
 ;
"RTN","PRSNCTL",78,0)
 W !
"RTN","PRSNCTL",79,0)
 ;
"RTN","PRSNCTL",80,0)
 N DIR,Y,DIRUT,CONT
"RTN","PRSNCTL",81,0)
 S DIR(0)="Y",DIR("B")="No",DIR("A")="Do you want to proceed"
"RTN","PRSNCTL",82,0)
 S DIR("A",1)="Continuing with this process will DELETE ALL existing"
"RTN","PRSNCTL",83,0)
 S DIR("A",2)="POC data entry and approval personnel. Then it will copy"
"RTN","PRSNCTL",84,0)
 S DIR("A",3)="ETA timekeepers to POC data entry and ETA supervisors to"
"RTN","PRSNCTL",85,0)
 S DIR("A",4)="POC approval personnel. Employees with an * in front of their"
"RTN","PRSNCTL",86,0)
 S DIR("A",5)="name are separated and will NOT be copied."
"RTN","PRSNCTL",87,0)
 D ^DIR
"RTN","PRSNCTL",88,0)
 S CONT=$S(Y=1:1,1:0)
"RTN","PRSNCTL",89,0)
 I 'CONT W !,"Aborted..." Q
"RTN","PRSNCTL",90,0)
 ;
"RTN","PRSNCTL",91,0)
 ;Kill off POC entry
"RTN","PRSNCTL",92,0)
 ;
"RTN","PRSNCTL",93,0)
 K FDA
"RTN","PRSNCTL",94,0)
 S IEN=0
"RTN","PRSNCTL",95,0)
 F  S IEN=$O(^PRST(455.5,TLIEN,2,IEN)) Q:IEN'>0  D
"RTN","PRSNCTL",96,0)
 . S FDA(455.52,IEN_","_TLIEN_",",.01)="@"
"RTN","PRSNCTL",97,0)
 I $D(FDA) D FILE^DIE("","FDA"),MSG^DIALOG()
"RTN","PRSNCTL",98,0)
 ;
"RTN","PRSNCTL",99,0)
 ;Kill off POC approvers
"RTN","PRSNCTL",100,0)
 ;
"RTN","PRSNCTL",101,0)
 K FDA
"RTN","PRSNCTL",102,0)
  S IEN=0
"RTN","PRSNCTL",103,0)
  F  S IEN=$O(^PRST(455.5,TLIEN,3,IEN)) Q:IEN'>0  D
"RTN","PRSNCTL",104,0)
 . S FDA(455.531,IEN_","_TLIEN_",",.01)="@"
"RTN","PRSNCTL",105,0)
 I $D(FDA) D FILE^DIE("","FDA"),MSG^DIALOG()
"RTN","PRSNCTL",106,0)
 ;
"RTN","PRSNCTL",107,0)
 ;Update POC Entry with timekeepers
"RTN","PRSNCTL",108,0)
 S (TKIEN,J)=0
"RTN","PRSNCTL",109,0)
 K FDA,IENS
"RTN","PRSNCTL",110,0)
 F  S TKIEN=$O(^PRST(455.5,TLIEN,"T","B",TKIEN)) Q:TKIEN'>0  D
"RTN","PRSNCTL",111,0)
 . ;check for separation
"RTN","PRSNCTL",112,0)
 . S SEPFLAG=$$SEP(TKIEN)
"RTN","PRSNCTL",113,0)
 . Q:SEPFLAG="Y"
"RTN","PRSNCTL",114,0)
 . S J=J+1
"RTN","PRSNCTL",115,0)
 . S IENS(J)=J
"RTN","PRSNCTL",116,0)
 . S FDA(455.52,"+"_J_","_TLIEN_",",.01)=TKIEN
"RTN","PRSNCTL",117,0)
 I $D(FDA) D UPDATE^DIE("","FDA","IENS"),MSG^DIALOG()
"RTN","PRSNCTL",118,0)
 ;
"RTN","PRSNCTL",119,0)
 ;Update POC Approvers with supervisors
"RTN","PRSNCTL",120,0)
 ;
"RTN","PRSNCTL",121,0)
 S (SUIEN,J)=0
"RTN","PRSNCTL",122,0)
 K FDA,IENS
"RTN","PRSNCTL",123,0)
 S SUIEN=0
"RTN","PRSNCTL",124,0)
 F  S SUIEN=$O(^PRST(455.5,TLIEN,"S","B",SUIEN)) Q:SUIEN'>0  D
"RTN","PRSNCTL",125,0)
 . ;check for separation
"RTN","PRSNCTL",126,0)
 . S SEPFLAG=$$SEP(SUIEN)
"RTN","PRSNCTL",127,0)
 . Q:SEPFLAG="Y"
"RTN","PRSNCTL",128,0)
 . S J=J+1
"RTN","PRSNCTL",129,0)
 . S IENS(J)=J
"RTN","PRSNCTL",130,0)
 . S FDA(455.531,"+"_J_","_TLIEN_",",.01)=SUIEN
"RTN","PRSNCTL",131,0)
 I $D(FDA) D UPDATE^DIE("","FDA","IENS"),MSG^DIALOG()
"RTN","PRSNCTL",132,0)
 W !,"Copied..."
"RTN","PRSNCTL",133,0)
 Q
"RTN","PRSNCTL",134,0)
 ;
"RTN","PRSNCTL",135,0)
SEP(IEN200) ;
"RTN","PRSNCTL",136,0)
 ; missing paid ien treated same as separated employee for this process
"RTN","PRSNCTL",137,0)
 N IEN450,SEPFLAG
"RTN","PRSNCTL",138,0)
 S SEPFLAG=""
"RTN","PRSNCTL",139,0)
 S IEN450=$G(^VA(200,IEN200,450))
"RTN","PRSNCTL",140,0)
 I 'IEN450 S SEPFLAG="Y" Q SEPFLAG
"RTN","PRSNCTL",141,0)
 S SEPFLAG=$P($G(^PRSPC(IEN450,1)),U,33)
"RTN","PRSNCTL",142,0)
 Q SEPFLAG
"RTN","PRSNCTL",143,0)
 ;
"RTN","PRSNCTL",144,0)
HDR2 ; Header
"RTN","PRSNCTL",145,0)
 W !,"ETA TIMEKEEPER",?40,"POC DATA ENTRY"
"RTN","PRSNCTL",146,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","PRSNCTL",147,0)
 Q
"RTN","PRSNCTL",148,0)
 ;
"RTN","PRSNCTL",149,0)
HDR3 ;
"RTN","PRSNCTL",150,0)
 W !!,"ETA SUPERVISOR",?40,"POC APPROVAL"
"RTN","PRSNCTL",151,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","PRSNCTL",152,0)
 Q
"RTN","PRSNDPC1")
0^12^B17799830^n/a
"RTN","PRSNDPC1",1,0)
PRSNDPC1 ;WOIFO/DAM - Delete POC Records;10/28/09
"RTN","PRSNDPC1",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNDPC1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","PRSNDPC1",4,0)
 Q
"RTN","PRSNDPC1",5,0)
DELPOC ; called from option Delete Nurse POC Daily Time Record
"RTN","PRSNDPC1",6,0)
 N GROUP,PRSIEN,VALUE,CANDEL
"RTN","PRSNDPC1",7,0)
 D ACCESS^PRSNUT02(.GROUP,"E",DT,0)
"RTN","PRSNDPC1",8,0)
 ; quit if any error during group selection
"RTN","PRSNDPC1",9,0)
 I $P($G(GROUP(0)),U,2)="E" W !!,?4,$P(GROUP(0),U,3) S X=$$ASK^PRSLIB00(1) Q
"RTN","PRSNDPC1",10,0)
 S VALUE=+GROUP($O(GROUP(0)))
"RTN","PRSNDPC1",11,0)
 Q:VALUE'>0
"RTN","PRSNDPC1",12,0)
 ;
"RTN","PRSNDPC1",13,0)
 ; Select Nurse
"RTN","PRSNDPC1",14,0)
 ;
"RTN","PRSNDPC1",15,0)
 S PRSIEN=+$$PICKNURS^PRSNUT03($P(GROUP(0),U,2),VALUE)
"RTN","PRSNDPC1",16,0)
 ;
"RTN","PRSNDPC1",17,0)
 ; Allow user to select a date and reprompt if record is not valid
"RTN","PRSNDPC1",18,0)
 ; for deletion
"RTN","PRSNDPC1",19,0)
 ;
"RTN","PRSNDPC1",20,0)
 N %DT,Y,X,OUT
"RTN","PRSNDPC1",21,0)
 S (CANDEL,OUT)=0
"RTN","PRSNDPC1",22,0)
 S %DT="A"
"RTN","PRSNDPC1",23,0)
 F  D  Q:CANDEL!OUT
"RTN","PRSNDPC1",24,0)
 .  D ^%DT
"RTN","PRSNDPC1",25,0)
 .  I $G(X)[U!($G(X)="")!(Y'>0) S OUT=1 Q
"RTN","PRSNDPC1",26,0)
 .  S PRSDT=Y
"RTN","PRSNDPC1",27,0)
 .  S PRSDTDAT=$G(^PRST(458,"AD",PRSDT))
"RTN","PRSNDPC1",28,0)
 .  S PPI=$P(PRSDTDAT,U),PRSD=$P(PRSDTDAT,U,2)
"RTN","PRSNDPC1",29,0)
 .  I (PRSD'>0)!(PPI'>0) W " ?? ",$C(7),"ETA Timecard record does not exist for that date." Q
"RTN","PRSNDPC1",30,0)
 .  S PRSNVER=$O(^PRSN(451,PPI,"E",PRSIEN,"D",PRSD,"V",999),-1)
"RTN","PRSNDPC1",31,0)
 .  S CANDEL=$$CANDEL(PRSIEN,PRSDT,PRSD,PPI,PRSNVER)
"RTN","PRSNDPC1",32,0)
 .  I 'CANDEL W " ?? ",$C(7),$P(CANDEL,U,2)
"RTN","PRSNDPC1",33,0)
 Q:OUT!('CANDEL)
"RTN","PRSNDPC1",34,0)
 ;
"RTN","PRSNDPC1",35,0)
 D POCDSPLY^PRSNRUT0(PRSIEN,PRSDT,PRSDT)
"RTN","PRSNDPC1",36,0)
 ;
"RTN","PRSNDPC1",37,0)
 ; Confirm that the user does want to Delete the record
"RTN","PRSNDPC1",38,0)
 ;
"RTN","PRSNDPC1",39,0)
 N DIR,X,Y,DIRUT
"RTN","PRSNDPC1",40,0)
 S DIR(0)="Y"
"RTN","PRSNDPC1",41,0)
 S DIR("B")="YES"
"RTN","PRSNDPC1",42,0)
 S DIR("A")="Are you sure you want to Delete this record"
"RTN","PRSNDPC1",43,0)
 S DIR("?")="Accept the default YES or enter NO"
"RTN","PRSNDPC1",44,0)
 D ^DIR
"RTN","PRSNDPC1",45,0)
 Q:$D(DIRUT)!'$G(Y)
"RTN","PRSNDPC1",46,0)
 ;
"RTN","PRSNDPC1",47,0)
 ; Lookup Record
"RTN","PRSNDPC1",48,0)
 ;
"RTN","PRSNDPC1",49,0)
 ; Confirm deletion or status message that record can't be deleted
"RTN","PRSNDPC1",50,0)
 ; Display Record on that date?
"RTN","PRSNDPC1",51,0)
 ;
"RTN","PRSNDPC1",52,0)
 ;
"RTN","PRSNDPC1",53,0)
 I $$EDVDEL(PRSIEN,PRSD,PPI,PRSNVER) D
"RTN","PRSNDPC1",54,0)
 .   W !,"POC record successfully deleted."
"RTN","PRSNDPC1",55,0)
 E  D
"RTN","PRSNDPC1",56,0)
 .   W !,"Could not delete POC record."
"RTN","PRSNDPC1",57,0)
 ;
"RTN","PRSNDPC1",58,0)
 Q
"RTN","PRSNDPC1",59,0)
EDVDEL(PRSIEN,PRSD,PPI,PRSNVER) ;  DELETE RECORD FUNCTION
"RTN","PRSNDPC1",60,0)
 ; RETURNS 1 IF RECORD IS DELETED OTHERWISE 0
"RTN","PRSNDPC1",61,0)
 ;
"RTN","PRSNDPC1",62,0)
 N PRSNA,X,RETURN
"RTN","PRSNDPC1",63,0)
 S RETURN=0
"RTN","PRSNDPC1",64,0)
 Q:'PRSNVER RETURN
"RTN","PRSNDPC1",65,0)
 I PRSNVER>1 D
"RTN","PRSNDPC1",66,0)
 .  S PRSNA="451;;"_PPI_"~451.09;;"_PRSIEN_"~451.99;;"_PRSD_"~451.999;^PRSN(451,PPI,""E"",PRSIEN,""D"",PRSD,""V"",;"_PRSNVER
"RTN","PRSNDPC1",67,0)
 .;  if version is 2 set daily record status back to null (no correction)
"RTN","PRSNDPC1",68,0)
 .;  if greater than 2 set status back to released.
"RTN","PRSNDPC1",69,0)
 . I PRSNVER=2 D UPDTPOCD^PRSNCGP(PPI,PRSIEN,PRSD,"","")
"RTN","PRSNDPC1",70,0)
 . I PRSNVER>2 D UPDTPOCD^PRSNCGP(PPI,PRSIEN,PRSD,"","R")
"RTN","PRSNDPC1",71,0)
 .;
"RTN","PRSNDPC1",72,0)
 E  D
"RTN","PRSNDPC1",73,0)
 .  S PRSNA="451;;"_PPI_"~451.09;;"_PRSIEN_"~451.99;^PRSN(451,PPI,""E"",PRSIEN,""D"",;"_PRSD
"RTN","PRSNDPC1",74,0)
 ;
"RTN","PRSNDPC1",75,0)
 K X D DELETE^PRSU1B1(.X,PRSNA)
"RTN","PRSNDPC1",76,0)
 I X S RETURN=1
"RTN","PRSNDPC1",77,0)
 QUIT RETURN
"RTN","PRSNDPC1",78,0)
 ;
"RTN","PRSNDPC1",79,0)
CANDEL(PRSIEN,PRSDT,PRSD,PPI,VERSION) ; Return true if the record on the specified date
"RTN","PRSNDPC1",80,0)
 ; is allowed to be deleted, otherwise return an error message.
"RTN","PRSNDPC1",81,0)
 ;
"RTN","PRSNDPC1",82,0)
 N CANDEL,PRSDTDAT,PDAYSTAT,PPSTAT
"RTN","PRSNDPC1",83,0)
 S CANDEL=0
"RTN","PRSNDPC1",84,0)
 ;
"RTN","PRSNDPC1",85,0)
 ;  check for a valid date
"RTN","PRSNDPC1",86,0)
 ;
"RTN","PRSNDPC1",87,0)
 I (PRSD'>0)!(PPI'>0) S CANDEL="0^Timecard record does not exist for that date." Q CANDEL
"RTN","PRSNDPC1",88,0)
 ;
"RTN","PRSNDPC1",89,0)
 ;  check does record exist
"RTN","PRSNDPC1",90,0)
 ;
"RTN","PRSNDPC1",91,0)
 I '+$G(^PRSN(451,PPI,"E",PRSIEN,"D",PRSD,0)) D  Q CANDEL
"RTN","PRSNDPC1",92,0)
 .  S CANDEL="0^POC record does not exist for that date."
"RTN","PRSNDPC1",93,0)
 ;
"RTN","PRSNDPC1",94,0)
 ;  if pay period status is only entered (E) then this record
"RTN","PRSNDPC1",95,0)
 ;  hasn't been anywhere and they can delete it.
"RTN","PRSNDPC1",96,0)
 ;
"RTN","PRSNDPC1",97,0)
 S PPSTAT=$P($G(^PRSN(451,PPI,"E",PRSIEN,0)),U,2)
"RTN","PRSNDPC1",98,0)
 Q:PPSTAT="E" 1
"RTN","PRSNDPC1",99,0)
 ;
"RTN","PRSNDPC1",100,0)
 I PPSTAT="A" D  Q CANDEL
"RTN","PRSNDPC1",101,0)
 .  S CANDEL="0^POC record status is Approved and never Released. To delete record, VANOD site coordinator must first return record for editing."
"RTN","PRSNDPC1",102,0)
 ;
"RTN","PRSNDPC1",103,0)
 ; If the pay period is already release we need to check the status
"RTN","PRSNDPC1",104,0)
 ; of individual days to determine if DEP can delete, but we can never
"RTN","PRSNDPC1",105,0)
 ; delete version 1 of a release POC
"RTN","PRSNDPC1",106,0)
 ;
"RTN","PRSNDPC1",107,0)
 I VERSION=1 D  Q CANDEL
"RTN","PRSNDPC1",108,0)
 .  S CANDEL="0^The POC record status is Released.  Can't delete."
"RTN","PRSNDPC1",109,0)
 ;
"RTN","PRSNDPC1",110,0)
 S PDAYSTAT=$P($G(^PRSN(451,PPI,"E",PRSIEN,"D",PRSD,0)),U,2)
"RTN","PRSNDPC1",111,0)
 ;
"RTN","PRSNDPC1",112,0)
 I PDAYSTAT="" D  Q CANDEL
"RTN","PRSNDPC1",113,0)
 . S CANDEL="0^The POC record status is Released.  Can't delete."
"RTN","PRSNDPC1",114,0)
 ;
"RTN","PRSNDPC1",115,0)
 I PDAYSTAT="E" D
"RTN","PRSNDPC1",116,0)
 .  S CANDEL=1
"RTN","PRSNDPC1",117,0)
 E  D
"RTN","PRSNDPC1",118,0)
 .  S CANDEL="0"_U_"POC record status is "_$S(PDAYSTAT="A":"Approved",1:"Released")_". Can't delete."
"RTN","PRSNDPC1",119,0)
 Q CANDEL
"RTN","PRSNDPC1",120,0)
 ;
"RTN","PRSNEC")
0^13^B21101088^n/a
"RTN","PRSNEC",1,0)
PRSNEC ;WOIFO/PLT - Correct Release Nurse POC Data ; 08/14/2009  7:56 AM
"RTN","PRSNEC",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNEC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSNEC",4,0)
 QUIT
"RTN","PRSNEC",5,0)
 ;
"RTN","PRSNEC",6,0)
ENT ;option entry
"RTN","PRSNEC",7,0)
 N PRSNCR,PRSNG,PRSNDT,PPI,PRSNDAY,PRSNPP,DFN,PRSNSTS
"RTN","PRSNEC",8,0)
 ;prsncr="" if poc a/e, =1 if correct release, =eat i from eta post employee time
"RTN","PRSNEC",9,0)
 S PRSNCR=1
"RTN","PRSNEC",10,0)
 D ACCESS^PRSNUT02(.A,"E",DT,"")
"RTN","PRSNEC",11,0)
 I $P($G(A(0)),U,2)="E" D  Q
"RTN","PRSNEC",12,0)
 .W !,$P(A(0),U,3)
"RTN","PRSNEC",13,0)
 S PRSNG=A(0)_"^"_$O(A(0))_"^"_A($O(A(0))) K A
"RTN","PRSNEC",14,0)
Q1 S %DT="AEPX",%DT("A")="Enter Date to Correct Released POC Record: ",%DT("B")="T-1" D ^%DT G:Y<1 EXIT
"RTN","PRSNEC",15,0)
 S PRSNDT=Y,Y=$G(^PRST(458,"AD",Y)),PPI=$P(Y,"^",1),PRSNDAY=$P(Y,"^",2)
"RTN","PRSNEC",16,0)
 I PPI="" D EN^DDIOL("Pay Period is Not Open Yet!") G EXIT
"RTN","PRSNEC",17,0)
 S PRSNPP=$P(^PRST(458,PPI,0),U)_U_$P(^(2),U,PRSNDAY)
"RTN","PRSNEC",18,0)
 ;selecting a nurse
"RTN","PRSNEC",19,0)
Q2 S Y=$$PICKNURS^PRSNUT03($P(PRSNG,U,2),$P(PRSNG,U,4)) G Q1:Y<1
"RTN","PRSNEC",20,0)
 S DFN=+Y
"RTN","PRSNEC",21,0)
 I $P($G(^PRSN(451,PPI,"E",DFN,0)),U,2)'="R" W !!,"POC Record has a status - ",$S($P($G(^(0)),U,2)="A":"APPROVED",$P($G(^(0)),U,2)="E":"ENTERED",1:"Unknown or no POC data entered")," and it is not released yet!" G Q2
"RTN","PRSNEC",22,0)
 S PRSNSTS=$P($G(^PRSN(451,PPI,"E",DFN,"D",PRSNDAY,0)),U,2)
"RTN","PRSNEC",23,0)
 I PRSNSTS="A" W !!,"The Correct Released POC Record has a status - APPROVED, ask Coordinator to",!,"return the record for editing." G Q2
"RTN","PRSNEC",24,0)
 D CREL G Q2
"RTN","PRSNEC",25,0)
 ;
"RTN","PRSNEC",26,0)
EXIT QUIT
"RTN","PRSNEC",27,0)
 ;
"RTN","PRSNEC",28,0)
CREL ;start correct released poc time record
"RTN","PRSNEC",29,0)
 N PRSNVER,PRSNVERO,PRSNX,PRSNEW,PRSNG,PRSNA,PRSNUR,PRSNQ,PRSNLOC,PRSNPC
"RTN","PRSNEC",30,0)
 ;+prsng=0 in single nurse mode, =1 in alphabetical batch mode
"RTN","PRSNEC",31,0)
 S $P(PRSNG,U)=0
"RTN","PRSNEC",32,0)
 S PRSNX="",PRSNEW=""
"RTN","PRSNEC",33,0)
 L +^PRSN(451,PPI,"E",DFN):0 E  W !!,"File is in use, Try it later!" QUIT
"RTN","PRSNEC",34,0)
 S PRSNVER=$O(^PRSN(451,PPI,"E",DFN,"D",PRSNDAY,"V",":"),-1)
"RTN","PRSNEC",35,0)
 I PRSNSTS="E" G EDIT
"RTN","PRSNEC",36,0)
 S PRSNVERO=PRSNVER,PRSNVER=PRSNVER+1
"RTN","PRSNEC",37,0)
 I PRSNVERO="" G MISSED
"RTN","PRSNEC",38,0)
 ;add a new version # in subfile #451.999 in subfile #451.99
"RTN","PRSNEC",39,0)
 K X,Y
"RTN","PRSNEC",40,0)
 I '$D(^PRSN(451,PPI,"E",DFN,"D",PRSNDAY,"V",PRSNVER)) S X=PRSNVER D ADD^PRSU1B1(.X,.Y,"451;;"_PPI_"~451.09;;"_DFN_";~451.99;;"_PRSNDAY_";9~451.999;^PRSN(451,PPI,""E"",DFN,""D"",PRSNDAY,""V"",",PRSNVER) S:Y>0 $P(PRSNEW,U,4)=1
"RTN","PRSNEC",41,0)
 I '$D(^PRSN(451,PPI,"E",DFN,"D",PRSNDAY,"V",PRSNVER)) W !,"Nurse POC file in use, try it later!" G DLOCK
"RTN","PRSNEC",42,0)
 ;copy (correct) released version 'prsnvero' to a new version 'prsnver'
"RTN","PRSNEC",43,0)
 S PRSNA=0
"RTN","PRSNEC",44,0)
 F  S PRSNA=$O(^PRSN(451,PPI,"E",DFN,"D",PRSNDAY,"V",PRSNVERO,"T",PRSNA)) QUIT:'PRSNA  S A=^(PRSNA,0) D
"RTN","PRSNEC",45,0)
 . N X,Y
"RTN","PRSNEC",46,0)
 . S X=$P(A,U)
"RTN","PRSNEC",47,0)
 . S X("DR")="1////"_$P(A,U,2)_";2////"_$P(A,U,3)_";3////"_$P(A,U,4)_";4////"_$P(A,U,5)_";5////"_$P(A,U,6)_";6////"_$P(A,U,7)_";7////"_$P(A,U,8)_";8////"_$P(A,U,9)_";9////"_$P(A,U,10)
"RTN","PRSNEC",48,0)
 . D ADD^PRSU1B1(.X,.Y,"451;;"_PPI_"~451.09;;"_DFN_"~451.99;;"_PRSNDAY_"~451.999;;"_PRSNVER_";~451.9999;^PRSN(451,PPI,""E"",DFN,""D"",PRSNDAY,""V"",PRSNVER,""T"",",PRSNA)
"RTN","PRSNEC",49,0)
 . QUIT
"RTN","PRSNEC",50,0)
 ;
"RTN","PRSNEC",51,0)
EDIT ;start editing
"RTN","PRSNEC",52,0)
 D SMAN^PRSNEE
"RTN","PRSNEC",53,0)
DLOCK L -^PRSN(451,PPI,"E",DFN)
"RTN","PRSNEC",54,0)
 QUIT
"RTN","PRSNEC",55,0)
 ;
"RTN","PRSNEC",56,0)
MISSED ;No previous POC entry before PP was released, needs ETA record for default
"RTN","PRSNEC",57,0)
 S PRSNX="",PRSNQ="",PRSNUR=$$ISNURSE^PRSNUT01(DFN)
"RTN","PRSNEC",58,0)
 I 'PRSNUR G DLOCK
"RTN","PRSNEC",59,0)
 S $P(PRSNUR,U,5)=$$EXTERNAL^DILFD(451.1,3,,$P(PRSNUR,U,4),)
"RTN","PRSNEC",60,0)
 K PRSNPC
"RTN","PRSNEC",61,0)
 ;get default time segments array prsnpc of poc time segments from eta
"RTN","PRSNEC",62,0)
 D ETAPOC^PRSNEE0
"RTN","PRSNEC",63,0)
 ;
"RTN","PRSNEC",64,0)
 ;quit if eta posted, poc with eta default but no tour/exceptions
"RTN","PRSNEC",65,0)
ADD I PRSNPC,PRSNQ!$P(PRSNQ,U,3),$O(PRSNPC(""))="" G DLOCK
"RTN","PRSNEC",66,0)
 ;add day # in subfile #451.99 in subfile #451.09
"RTN","PRSNEC",67,0)
 I '$D(^PRSN(451,PPI,"E",DFN,"D",PRSNDAY)) K X,Y S X=PRSNDAY D ADD^PRSU1B1(.X,.Y,"451;;"_PPI_"~451.09;;"_DFN_";9~451.99;^PRSN(451,PPI,""E"",DFN,""D"",",PRSNDAY) S:Y $P(PRSNEW,U,3)=1
"RTN","PRSNEC",68,0)
 I '$D(^PRSN(451,PPI,"E",DFN,"D",PRSNDAY)) W !,"Nurse POC file in use, try it later!" G DLOCK
"RTN","PRSNEC",69,0)
 ;add version # in subfile #451.999 in subfile #451.99
"RTN","PRSNEC",70,0)
 I '$D(^PRSN(451,PPI,"E",DFN,"D",PRSNDAY,"V",PRSNVER)) K X,Y S X=PRSNVER D ADD^PRSU1B1(.X,.Y,"451;;"_PPI_"~451.09;;"_DFN_";~451.99;;"_PRSNDAY_";9~451.999;^PRSN(451,PPI,""E"",DFN,""D"",PRSNDAY,""V"",",PRSNVER) S:Y $P(PRSNEW,U,4)=1
"RTN","PRSNEC",71,0)
 I '$D(^PRSN(451,PPI,"E",DFN,"D",PRSNDAY,"V",PRSNVER)) W !,"Nurse POC file in use, try it later!" G DLOCK
"RTN","PRSNEC",72,0)
 G EDIT
"RTN","PRSNEC",73,0)
 ;
"RTN","PRSNEC",74,0)
 ;for example (347,14308,3,"")
"RTN","PRSNEC",75,0)
NURSE(PPI,DFN,PRSNDAY,PRSNDT) ;test one single nurse
"RTN","PRSNEC",76,0)
 S PRSNCR=1,PRSNEW="",PRSNG=0
"RTN","PRSNEC",77,0)
 S PRSNPP=$P(^PRST(458,PPI,0),U)_U_$P(^(2),U,PRSNDAY)
"RTN","PRSNEC",78,0)
 D CREL
"RTN","PRSNEC",79,0)
 QUIT
"RTN","PRSNEC",80,0)
 ;
"RTN","PRSNEE")
0^14^B48948621^n/a
"RTN","PRSNEE",1,0)
PRSNEE ;WOIFO/PLT - Enter Nurse POC Data Entry ; 08/14/2009  7:56 AM
"RTN","PRSNEE",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNEE",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSNEE",4,0)
 QUIT
"RTN","PRSNEE",5,0)
 ;
"RTN","PRSNEE",6,0)
ENT ;option entry
"RTN","PRSNEE",7,0)
 N A,X,Y
"RTN","PRSNEE",8,0)
 N PRSNCR,PRSNG,PRSNDT,PPI,PRSNDAY,PRSNPP,PRSNEW,PRSNGLB,PRSNGA,PRSNGB,DFN,PRSNX
"RTN","PRSNEE",9,0)
 ;prsncr="" if poc a/e, =1 if correct release, =eta if post employee time
"RTN","PRSNEE",10,0)
 S PRSNCR=""
"RTN","PRSNEE",11,0)
 D ACCESS^PRSNUT02(.A,"E",DT,"")
"RTN","PRSNEE",12,0)
 I $P($G(A(0)),U,2)="E" D  Q
"RTN","PRSNEE",13,0)
 .W !,$P(A(0),U,3)
"RTN","PRSNEE",14,0)
 S PRSNG=A(0)_"^"_$O(A(0))_"^"_A($O(A(0))) K A
"RTN","PRSNEE",15,0)
 S %DT="AEPX",%DT("A")="Enter POC Data for Date: ",%DT("B")="T-1" D ^%DT G:Y<1 EXIT
"RTN","PRSNEE",16,0)
 S PRSNDT=Y,Y=$G(^PRST(458,"AD",Y)),PPI=$P(Y,"^",1),PRSNDAY=$P(Y,"^",2)
"RTN","PRSNEE",17,0)
 I PPI="" D EN^DDIOL("Pay Period is Not Open Yet!") G EXIT
"RTN","PRSNEE",18,0)
 ;entry from tag nurse for eta
"RTN","PRSNEE",19,0)
PPADD ;
"RTN","PRSNEE",20,0)
 N PRSNUR
"RTN","PRSNEE",21,0)
 S PRSNPP=$P(^PRST(458,PPI,0),U)_U_$P(^(2),U,PRSNDAY)
"RTN","PRSNEE",22,0)
 ;add new ppi entry in file 451
"RTN","PRSNEE",23,0)
 I '$D(^PRSN(451,PPI)) K X,Y S X=$P(PRSNPP,U) D ADD^PRSU1B1(.X,.Y,"451",PPI) S:Y PRSNEW=1
"RTN","PRSNEE",24,0)
 I '$D(^PRSN(451,PPI)) W !,"File - POC DAILY TIME RECORDS is in use, try it later!" G EXIT
"RTN","PRSNEE",25,0)
 ;if from entry point nurse called from eta post employee time option
"RTN","PRSNEE",26,0)
 I PRSNCR="ETA" D POST G EXIT
"RTN","PRSNEE",27,0)
Q1 S Y(1)="Answer YES if you want all Nurses brought up for whom no data has been entered." D YN^PRSU1A(.X,.Y,"Would you like to enter the POC RECORDs in alphabetical order","","Yes")
"RTN","PRSNEE",28,0)
 ;+prsng=1 - for alpha order, =0 for one nurse
"RTN","PRSNEE",29,0)
 S $P(PRSNG,U)=Y G ONE:Y=0,EXIT:Y["^"
"RTN","PRSNEE",30,0)
 ;for group of location or t&l
"RTN","PRSNEE",31,0)
 S PRSNGLB=$S($P(PRSNG,U,2)="N":$NA(^NURSF(211.8,"D",$P(PRSNG,U,7))),1:$NA(^PRSPC("ATL"_$P(PRSNG,U,3))))
"RTN","PRSNEE",32,0)
 S PRSNGA="",PRSNX=0
"RTN","PRSNEE",33,0)
 F  S PRSNGA=$O(@PRSNGLB@(PRSNGA)) QUIT:PRSNGA=""  D  QUIT:PRSNX
"RTN","PRSNEE",34,0)
 . S PRSNGB=0
"RTN","PRSNEE",35,0)
 . F  S PRSNGB=$O(@PRSNGLB@(PRSNGA,PRSNGB)) QUIT:'PRSNGB  D  QUIT:PRSNX
"RTN","PRSNEE",36,0)
 .. I $P(PRSNG,U,2)="N",+$P(PRSNG,U,4)'=+$$PRIMLOC^PRSNUT03(PRSNGB) Q
"RTN","PRSNEE",37,0)
 .. S DFN=$S($P(PRSNG,U,2)="N":+$G(^VA(200,PRSNGB,450)),1:PRSNGB)
"RTN","PRSNEE",38,0)
 .. D POST
"RTN","PRSNEE",39,0)
 .. ;don't ask question if not a nurse.  That check needs to stay in the POST subroutine beause it is called from other parts of this program.
"RTN","PRSNEE",40,0)
 .. Q:'PRSNUR
"RTN","PRSNEE",41,0)
 .. N DIR,Y,DIRUT
"RTN","PRSNEE",42,0)
 .. S DIR(0)="Y",DIR("B")="Yes",DIR("A")="Continue to next Nurse"
"RTN","PRSNEE",43,0)
 .. D ^DIR
"RTN","PRSNEE",44,0)
 .. S PRSNX=$S(Y=1:0,1:1)
"RTN","PRSNEE",45,0)
 . QUIT
"RTN","PRSNEE",46,0)
 G EXIT
"RTN","PRSNEE",47,0)
 ;
"RTN","PRSNEE",48,0)
ONE ;selecting a nurse
"RTN","PRSNEE",49,0)
 S Y=$$PICKNURS^PRSNUT03($P(PRSNG,U,2),$P(PRSNG,U,4)) G EXIT:Y<1
"RTN","PRSNEE",50,0)
 S DFN=+Y D POST G ONE
"RTN","PRSNEE",51,0)
 ;
"RTN","PRSNEE",52,0)
EXIT QUIT
"RTN","PRSNEE",53,0)
 ;
"RTN","PRSNEE",54,0)
POST ;start poc posting
"RTN","PRSNEE",55,0)
 N PRSNQ,PRSNLOC,PRSNLOC,PRSNPC,PRSNVER,PRSNQ,PRSNTD,PRSNTM
"RTN","PRSNEE",56,0)
 S PRSNQ="",PRSNUR=$$ISNURSE^PRSNUT01(DFN) QUIT:'PRSNUR
"RTN","PRSNEE",57,0)
 S $P(PRSNUR,U,5)=$$EXTERNAL^DILFD(451.1,3,,$P(PRSNUR,U,4),)
"RTN","PRSNEE",58,0)
 S PRSNEW=+$G(PRSNEW),PRSNVER=1
"RTN","PRSNEE",59,0)
 ;check pp status if not in alpha mode
"RTN","PRSNEE",60,0)
 I $P($G(^PRSN(451,PPI,"E",DFN,0)),U,2)]"",$P(^(0),U,2)'="E" QUIT:PRSNG  S A=$P(^(0),U,2) D  QUIT
"RTN","PRSNEE",61,0)
 . W !!,"The POC Record has a status - ",$S(A="A":"Approved, ask Coordinator to return the record for editing.",1:"Released, use the Correct Released Nurse POC Data option for correcting.")
"RTN","PRSNEE",62,0)
 . QUIT
"RTN","PRSNEE",63,0)
 S PRSNLOC=$$DFTLOC(PPI,DFN)
"RTN","PRSNEE",64,0)
 ;quit if in alpha mode
"RTN","PRSNEE",65,0)
 K PRSNPC I $D(^PRSN(451,PPI,"E",DFN,"D",PRSNDAY,"V",PRSNVER)) QUIT:PRSNG  D SMAN QUIT
"RTN","PRSNEE",66,0)
 ;get default time segments array prsnpc of poc time segments from eta
"RTN","PRSNEE",67,0)
 D ETAPOC^PRSNEE0
"RTN","PRSNEE",68,0)
 ;quit if by group, no eta posted and tour is day off or intermittens
"RTN","PRSNEE",69,0)
 I PRSNG,'PRSNPC,"1 3 4"[$P(PRSNPC,U,2) QUIT
"RTN","PRSNEE",70,0)
 W:PRSNG !!,"Nurse: ",PRSNGA,"  (",$P(PRSNUR,U,5),")",?50,$P(PRSNLOC,U,3)
"RTN","PRSNEE",71,0)
 ;
"RTN","PRSNEE",72,0)
 ;quit if eta posted, poc with eta default but no tour/exceptions
"RTN","PRSNEE",73,0)
ADD I PRSNPC,PRSNQ!$P(PRSNQ,U,3),$O(PRSNPC(""))="" QUIT
"RTN","PRSNEE",74,0)
 ;add nurse in subfile# 451.09 of file #451 with pp-status e
"RTN","PRSNEE",75,0)
 I '$D(^PRSN(451,PPI,"E",DFN)) K X,Y S X=DFN,X("DR")="1////E" D ADD^PRSU1B1(.X,.Y,"451;;"_PPI_";9~451.09;^PRSN(451,PPI,""E"",",DFN) S:Y $P(PRSNEW,U,2)=1
"RTN","PRSNEE",76,0)
 I '$D(^PRSN(451,PPI,"E",DFN)) W !,"Nurse POC file in use, try it later!" QUIT
"RTN","PRSNEE",77,0)
 ;add day # in subfile #451.99 in subfile #451.09
"RTN","PRSNEE",78,0)
 I '$D(^PRSN(451,PPI,"E",DFN,"D",PRSNDAY)) K X,Y S X=PRSNDAY D ADD^PRSU1B1(.X,.Y,"451;;"_PPI_"~451.09;;"_DFN_";9~451.99;^PRSN(451,PPI,""E"",DFN,""D"",",PRSNDAY) S:Y $P(PRSNEW,U,3)=1
"RTN","PRSNEE",79,0)
 I '$D(^PRSN(451,PPI,"E",DFN,"D",PRSNDAY)) W !,"Nurse POC file in use, try it later!" QUIT
"RTN","PRSNEE",80,0)
 ;add version # in subfile #451.999 in subfile #451.99
"RTN","PRSNEE",81,0)
 I '$D(^PRSN(451,PPI,"E",DFN,"D",PRSNDAY,"V",PRSNVER)) K X,Y S X=PRSNVER D ADD^PRSU1B1(.X,.Y,"451;;"_PPI_"~451.09;;"_DFN_";~451.99;;"_PRSNDAY_";9~451.999;^PRSN(451,PPI,""E"",DFN,""D"",PRSNDAY,""V"",",PRSNVER) S:Y $P(PRSNEW,U,4)=1
"RTN","PRSNEE",82,0)
 I '$D(^PRSN(451,PPI,"E",DFN,"D",PRSNDAY,"V",PRSNVER)) W !,"Nurse POC file in use, try it later!" QUIT
"RTN","PRSNEE",83,0)
 D SMAN
"RTN","PRSNEE",84,0)
 QUIT
"RTN","PRSNEE",85,0)
 ;
"RTN","PRSNEE",86,0)
 ;
"RTN","PRSNEE",87,0)
SMAN ;start screenman
"RTN","PRSNEE",88,0)
 N PRSNID,DDSFILE,DR,DA,DDSPAGE,DDSPARM,DDSCHANG,DDSSAVE,DIMSG,DTOUT,REASCD,REASTOP
"RTN","PRSNEE",89,0)
 L +^PRSN(451,PPI,"E",DFN):0 E  W !!,"File is in use, Try it later!" D:$P(PRSNEW,U,4) EDVDEL QUIT
"RTN","PRSNEE",90,0)
 S:PRSNCR=1 PRSNLOC=$$DFTLOC(PPI,DFN)
"RTN","PRSNEE",91,0)
 ;add poc data prsnpc array time segemnts in file #451.9999 of file #451
"RTN","PRSNEE",92,0)
 ;COMMENT OUT SKIPPING OF POC SCREEN, MAKE THEM LOOK AT IT AND PF1-E OUT
"RTN","PRSNEE",93,0)
 I $O(PRSNPC(""))]"",PRSNLOC D ADDTS^PRSNEE0
"RTN","PRSNEE",94,0)
 ;prsnid = 1^ name ^2 staion # ^3 t&l ^4 ss# ^5 defaul location ^6 poc status
"RTN","PRSNEE",95,0)
 S PRSNID=$P(^PRSPC(DFN,0),U),$P(PRSNID,U,2,4)=$P(^PRSPC(DFN,0),U,7,9),$P(PRSNID,U,5)=$P(PRSNLOC,U,3)
"RTN","PRSNEE",96,0)
 S $P(PRSNID,U,6)=$S('PRSNCR:$P(^PRSN(451,PPI,"E",DFN,0),U,2),1:$P(^PRSN(451,PPI,"E",DFN,"D",PRSNDAY,0),U,2))
"RTN","PRSNEE",97,0)
 S $P(PRSNID,U,6)=$S($P(PRSNID,U,6)="E":"Entered",1:"New")
"RTN","PRSNEE",98,0)
 ;get displaying tour of duty of the day and the 1 or 2 day tour data
"RTN","PRSNEE",99,0)
 S PRSNTD=$$TOUR(PPI,DFN,PRSNDAY),PRSNTM=$$PSTOUR^PRSNEE0(PPI,DFN,PRSNDAY)
"RTN","PRSNEE",100,0)
 S DA=PRSNVER,DA(1)=PRSNDAY,DA(2)=DFN,DA(3)=PPI
"RTN","PRSNEE",101,0)
 S DDSFILE(1)=451.999,DDSFILE(2)=451.99,DDSFILE(3)=451.09,DDSFILE=451,DDSPAGE=1
"RTN","PRSNEE",102,0)
 S REASCD="",REASTOP=0
"RTN","PRSNEE",103,0)
 S DR="[PRSN DAILY TIME RECORDS A/E/D]",DDSPARM="CS" D ^DDS
"RTN","PRSNEE",104,0)
 ;save and change post action after dds call
"RTN","PRSNEE",105,0)
EDVDEL ;if no save and no change, delete new added entries before dds call
"RTN","PRSNEE",106,0)
 ;delete e,d, v multiple field records
"RTN","PRSNEE",107,0)
 I $P(PRSNEW,U,4),'$G(DDSSAVE),'$G(DDSCHANG) D
"RTN","PRSNEE",108,0)
 . N PRSNA
"RTN","PRSNEE",109,0)
 . S PRSNA="451;;"_PPI_";9~451.09;^PRSN(451,PPI,""E"",;"_DFN
"RTN","PRSNEE",110,0)
 . I $P(PRSNEW,U,2) K X D DELETE^PRSU1B1(.X,PRSNA) QUIT
"RTN","PRSNEE",111,0)
 . S $P(PRSNA,"~",3)="451.99;^PRSN(451,PPI,""E"",DFN,""D"",;"_PRSNDAY
"RTN","PRSNEE",112,0)
 . I $P(PRSNEW,U,3) K X D DELETE^PRSU1B1(.X,PRSNA) QUIT
"RTN","PRSNEE",113,0)
 . S $P(PRSNA,"~",4)="451.999;^PRSN(451,PPI,""E"",DFN,""D"",PRSNDAY,""V"",;"_PRSNVER
"RTN","PRSNEE",114,0)
 . I $P(PRSNEW,U,4) K X D DELETE^PRSU1B1(.X,PRSNA)
"RTN","PRSNEE",115,0)
 . QUIT
"RTN","PRSNEE",116,0)
 ;changed
"RTN","PRSNEE",117,0)
 I $G(DDSCHANG)=1 D
"RTN","PRSNEE",118,0)
 . QUIT
"RTN","PRSNEE",119,0)
 ;saved
"RTN","PRSNEE",120,0)
 I $G(DDSSAVE)=1 D
"RTN","PRSNEE",121,0)
 . ;add correction released status 'e' in day # multiple
"RTN","PRSNEE",122,0)
 . I PRSNCR,$P(PRSNEW,U,4) D EDIT^PRSU1B(.X,"451;;"_PPI_"~451.09;;"_DFN_";9~451.99;^PRSN(451,PPI,""E"",DFN,""D"",;"_PRSNDAY,"1////E","")
"RTN","PRSNEE",123,0)
 . QUIT
"RTN","PRSNEE",124,0)
SMANEXT L -^PRSN(451,PPI,"E",DFN)
"RTN","PRSNEE",125,0)
 QUIT
"RTN","PRSNEE",126,0)
 ;
"RTN","PRSNEE",127,0)
REASON(CD,STOP) ;
"RTN","PRSNEE",128,0)
 N CDIEN,DESC,VAL,SEQ,I
"RTN","PRSNEE",129,0)
 S VAL=""
"RTN","PRSNEE",130,0)
 I STOP Q VAL
"RTN","PRSNEE",131,0)
 S CD=$O(^PRSN(451.6,"B",CD))
"RTN","PRSNEE",132,0)
 I CD="" S STOP=1 Q VAL
"RTN","PRSNEE",133,0)
 S CDIEN=$O(^PRSN(451.6,"B",CD,""))
"RTN","PRSNEE",134,0)
 S DESC=$P($G(^PRSN(451.6,CDIEN,0)),U,2)
"RTN","PRSNEE",135,0)
 S VAL=CD_" - "_DESC
"RTN","PRSNEE",136,0)
 Q VAL
"RTN","PRSNEE",137,0)
 ;
"RTN","PRSNEE",138,0)
WORKTYPH ;
"RTN","PRSNEE",139,0)
 N CDIEN,DESC,VAL,SEQ,I,COL
"RTN","PRSNEE",140,0)
 S CD="",SEQ=0
"RTN","PRSNEE",141,0)
 F I=0:1 S CD=$O(^PRSN(451.5,"B",CD)) Q:CD=""  D
"RTN","PRSNEE",142,0)
 .S CDIEN=$O(^PRSN(451.5,"B",CD,""))
"RTN","PRSNEE",143,0)
 .S DESC=$P($G(^PRSN(451.5,CDIEN,0)),U,2)
"RTN","PRSNEE",144,0)
 .S COL=I#3
"RTN","PRSNEE",145,0)
 .I COL=0 S SEQ=SEQ+1
"RTN","PRSNEE",146,0)
 .S VAL(SEQ)=$G(VAL(SEQ))
"RTN","PRSNEE",147,0)
 .S VAL(SEQ)=VAL(SEQ)_$J("",27*COL-$L(VAL(SEQ)))_CD_" - "_DESC
"RTN","PRSNEE",148,0)
 D HLP^DDSUTL(.VAL)
"RTN","PRSNEE",149,0)
 Q
"RTN","PRSNEE",150,0)
 ;
"RTN","PRSNEE",151,0)
TOUR(PPI,DFN,DAY) ;ef - tour of duty of the nurse
"RTN","PRSNEE",152,0)
 N Y1,Y2,Y3,Y31,Y4,TC,L1,A1,L3,PRSNTD
"RTN","PRSNEE",153,0)
 S PRSNTD="" D F1^PRSADP1
"RTN","PRSNEE",154,0)
 QUIT Y31
"RTN","PRSNEE",155,0)
 ;
"RTN","PRSNEE",156,0)
 ;return ^1 = "", ^2=ien of file #44, ^3=hospital location name
"RTN","PRSNEE",157,0)
DFTLOC(PPI,DFN) ;ef - nurse default location of the ppi
"RTN","PRSNEE",158,0)
 N A
"RTN","PRSNEE",159,0)
 S A=$P($G(^PRSN(451,PPI,"E",DFN,0)),U,6)
"RTN","PRSNEE",160,0)
 QUIT:A +A_"^^"_$S(A:$P($G(^SC(+$G(^NURSF(211.4,+A,0)),0)),U),1:"")
"RTN","PRSNEE",161,0)
 QUIT $$PRIMLOC^PRSNUT03(+$G(^PRSPC(DFN,200)))
"RTN","PRSNEE",162,0)
 ;
"RTN","PRSNEE",163,0)
 ;ppi=ien of file #458, dfn=ien of file #450, prsnday=day #, prsndt=fileman date of day #
"RTN","PRSNEE",164,0)
NURSE(PPI,DFN,PRSNDAY,PRSNDT) ;entry point from eta post employee time option
"RTN","PRSNEE",165,0)
 N PRSNCR,PRSNG,PRSNPP,PRSNEW,PRNGLB,PRSNGA,PRSNGB,PRSNX
"RTN","PRSNEE",166,0)
 S PRSNCR="ETA",PRSNG=0 G PPADD
"RTN","PRSNEE",167,0)
 ;
"RTN","PRSNEE",168,0)
 ;the following line is for testing by d nurse+3*******************
"RTN","PRSNEE",169,0)
 S PRSNCR="",PRSNEW="",PRSNG=0,PPI=347,DFN=14308,PRSNDAY=3,PRSNVER=2
"RTN","PRSNEE",170,0)
 S PRSNLOC=$$DFTLOC(PPI,DFN),PRSNPP=$P(^PRST(458,PPI,0),U)_U_$P(^(2),U,PRSNDAY) G SMAN
"RTN","PRSNEE",171,0)
 ;
"RTN","PRSNEE0")
0^15^B21641621^n/a
"RTN","PRSNEE0",1,0)
PRSNEE0 ;WOIFO/PLT - Utility of Nurse POC Data A/E/D ; 08/14/2009  7:56 AM
"RTN","PRSNEE0",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNEE0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSNEE0",4,0)
 QUIT
"RTN","PRSNEE0",5,0)
 ;
"RTN","PRSNEE0",6,0)
 ;return value=^1 is 1 if primary or secondary is a 2-day tour ^2=meal time ^3=y if 2-day tour ^4=meal time of secondary ^5=y if 2-day tour of secondary
"RTN","PRSNEE0",7,0)
PSTOUR(PPI,DFN,PRSNDAY) ;ef - primary and secondary tour info
"RTN","PRSNEE0",8,0)
 N A,B
"RTN","PRSNEE0",9,0)
 S A=$G(^PRST(458,PPI,"E",DFN,"D",PRSNDAY,0))
"RTN","PRSNEE0",10,0)
 I A="" QUIT ""
"RTN","PRSNEE0",11,0)
 S B=$P($G(^PRST(457.1,+$P(A,U,2),0)),U,3)_U_$P($G(^(0)),U,5)
"RTN","PRSNEE0",12,0)
 S:$P(A,U,13)]"" B=B_U_$P($G(^PRST(457.1,+$P(A,U,13),0)),U,3)_U_$P($G(^(0)),U,5)
"RTN","PRSNEE0",13,0)
 QUIT $P(B,U,2)="Y"!($P(B,U,4)="Y")_U_B
"RTN","PRSNEE0",14,0)
 ;
"RTN","PRSNEE0",15,0)
 ;get prsnt array of tour of duty and exceptions from eta
"RTN","PRSNEE0",16,0)
 ;build prsnpc array from the prsnt array
"RTN","PRSNEE0",17,0)
 ;prsnpc(start militaty time)=^1-start time (military), ^2- stop time (military)
"RTN","PRSNEE0",18,0)
 ;              ^3-eta type of time, ^4-meal time
"RTN","PRSNEE0",19,0)
ETAPOC ;convert eta tour of duty and exceptions time segments to array prsnpc
"RTN","PRSNEE0",20,0)
 N A,B,C
"RTN","PRSNEE0",21,0)
 K PRSNT,PRSNPC D BLDTC^PRSNRMM(.PRSNT,DFN,PPI,PRSNDAY,1)
"RTN","PRSNEE0",22,0)
 S PRSNPC=$P(PRSNT,U)'=0_"^"_$P(PRSNT,U,2)
"RTN","PRSNEE0",23,0)
 S A=0 F  S A=$O(PRSNT(A)) QUIT:'A  S B=PRSNT(A) I $P(B,U,4) S A=$P(B,U,4),C=$G(PRSNT(A)),C=C+$S(C#100<45:15,1:55),PRSNPC(+B)=+B_U_C_U_$P(B,U,5)_U_$P(B,U,7)
"RTN","PRSNEE0",24,0)
 K PRSNT
"RTN","PRSNEE0",25,0)
 QUIT
"RTN","PRSNEE0",26,0)
 ;
"RTN","PRSNEE0",27,0)
ADDTS ;add poc time segments in file #451.9999 of file# 451
"RTN","PRSNEE0",28,0)
 N PRSNA,PRSNB,PRSNC
"RTN","PRSNEE0",29,0)
 S PRSNA=""
"RTN","PRSNEE0",30,0)
 F  S PRSNA=$O(PRSNPC(PRSNA)) QUIT:PRSNA=""  D
"RTN","PRSNEE0",31,0)
 . N X,Y,A,B,C,D
"RTN","PRSNEE0",32,0)
 . ;set x and x("r")
"RTN","PRSNEE0",33,0)
 . S A=PRSNPC(PRSNA),X=$E(A>2400*-2400+A+10000,2,5) D ^PRSATIM
"RTN","PRSNEE0",34,0)
 . S B=$P(A,U,2),C=$P(A,U,3),D=$P(A,U,4),B=$E(B>2400*-2400+B+10000,2,5)
"RTN","PRSNEE0",35,0)
 . S PRSNB=$S(",OT,CT,RG,"[C&(C]""):"V",1:""),PRSNC=$S(",WI,OT,CT,RG,HW,"'[C:"",$P(PRSNUR,U,4)="DC":$O(^PRSN(451.5,"B","DC",0)),1:"")
"RTN","PRSNEE0",36,0)
 . S X("DR")="1///"_B_";2////"_D_";3////"_C_";4////"_$P(PRSNLOC,U)_";5////"_PRSNC_";6////"_PRSNB_";8////"_$P(A,U)_";9////"_$P(A,U,2)
"RTN","PRSNEE0",37,0)
 . D ADD^PRSU1B1(.X,.Y,"451;;"_PPI_"~451.09;;"_DFN_"~451.99;;"_PRSNDAY_"~451.999;;"_PRSNVER_";~451.9999;^PRSN(451,PPI,""E"",DFN,""D"",PRSNDAY,""V"",PRSNVER,""T"",")
"RTN","PRSNEE0",38,0)
 . QUIT
"RTN","PRSNEE0",39,0)
 QUIT
"RTN","PRSNEE0",40,0)
 ;
"RTN","PRSNEE0",41,0)
 ;called from screenman form page 1 or page 1.5
"RTN","PRSNEE0",42,0)
 ;a=start time, b=stop time, c=1 if start time starts day 1, =2 if day 2
"RTN","PRSNEE0",43,0)
MILSS(A,B,C) ;ef:^1-military start time, ^2-military stop time, ^3 invalid message
"RTN","PRSNEE0",44,0)
 N X,Y,D,E
"RTN","PRSNEE0",45,0)
 S D="",E=""
"RTN","PRSNEE0",46,0)
 I A'="" S Y=0,X=A D MIL^PRSATIM S D=C-1*2400+Y
"RTN","PRSNEE0",47,0)
 I B'="" S Y=1,X=B D MIL^PRSATIM S Y=C-1*2400+Y,E=Y S:Y'>D E=2400+Y
"RTN","PRSNEE0",48,0)
 QUIT D_"^"_E_"^"_$S(E>2400&(C=1):"Stop Time is in the Second Day of the tour. Its Type of Time must be OT/CT/RG.",E>4800&(C=2):"Stop Time is in the Third Day of the tour.",1:"")
"RTN","PRSNEE0",49,0)
 ;
"RTN","PRSNEE0",50,0)
 ;data validation check before save
"RTN","PRSNEE0",51,0)
DATAVAL ;called from form for data validation
"RTN","PRSNEE0",52,0)
 N PRSNA,PRSNB,PRSNC,PRSND,PRSNE,PRSNERR,PRSNDIE,PRSNDA,PRSNTT,PRSNOTT,PRSNOTR,PRSNM
"RTN","PRSNEE0",53,0)
 S PRSNERR=0
"RTN","PRSNEE0",54,0)
 S PRSNDIE="^PRSN(451,"_PPI_",""E"","_DFN_",""D"","_PRSNDAY_",""V"","_PRSNVER_",""T"","
"RTN","PRSNEE0",55,0)
 S PRSNDA(4)=PPI,PRSNDA(3)=DFN,PRSNDA(2)=PRSNDAY,PRSNDA(1)=PRSNVER
"RTN","PRSNEE0",56,0)
 S PRSNDA=0
"RTN","PRSNEE0",57,0)
 F  S PRSNDA=$O(^PRSN(451,PPI,"E",DFN,"D",PRSNDAY,"V",PRSNVER,"T",PRSNDA)) QUIT:'PRSNDA  D
"RTN","PRSNEE0",58,0)
 . S PRSNA=$$GET^DDSVAL(PRSNDIE,.PRSNDA,.01)
"RTN","PRSNEE0",59,0)
 . S PRSNB=$$GET^DDSVAL(PRSNDIE,.PRSNDA,8)
"RTN","PRSNEE0",60,0)
 . S PRSNC=$$GET^DDSVAL(PRSNDIE,.PRSNDA,9)
"RTN","PRSNEE0",61,0)
 . S PRSNM=$$GET^DDSVAL(PRSNDIE,.PRSNDA,2)
"RTN","PRSNEE0",62,0)
 . S PRSNTT=$$GET^DDSVAL(PRSNDIE,.PRSNDA,3)
"RTN","PRSNEE0",63,0)
 . S PRSNOTT=$$GET^DDSVAL(PRSNDIE,.PRSNDA,6)
"RTN","PRSNEE0",64,0)
 . S PRSNOTR=$$GET^DDSVAL(PRSNDIE,.PRSNDA,7)
"RTN","PRSNEE0",65,0)
 . I PRSNTT'="",",OT,CT,RG,"[PRSNTT D
"RTN","PRSNEE0",66,0)
 .. I PRSNOTT="" S PRSNERR=PRSNERR+1,PRSNERR(PRSNERR)="Subrecord: "_PRSNA_" is missing overtime type"
"RTN","PRSNEE0",67,0)
 .. I PRSNOTR="" S PRSNERR=PRSNERR+1,PRSNERR(PRSNERR)="Subrecord: "_PRSNA_" is missing overtime reason"
"RTN","PRSNEE0",68,0)
 . I PRSNB=""!(PRSNC="") S PRSNERR=PRSNERR+1,PRSNERR(PRSNERR)="Subrecord: "_PRSNA_" has wrong Stop Time" QUIT
"RTN","PRSNEE0",69,0)
 . I $D(PRSNB(PRSNB)) S PRSNERR=PRSNERR+1,PRSNERR(PRSNERR)="Subrecord: "_PRSNA_" has duplicate Start Time" QUIT
"RTN","PRSNEE0",70,0)
 . S PRSNB(PRSNB)=PRSNC_"^"_PRSNA_"^"_PRSNM
"RTN","PRSNEE0",71,0)
 . QUIT
"RTN","PRSNEE0",72,0)
 S PRSNB=""
"RTN","PRSNEE0",73,0)
 F  S PRSNB=$O(PRSNB(PRSNB)) QUIT:PRSNB=""  D
"RTN","PRSNEE0",74,0)
 . S PRSNC=+PRSNB(PRSNB)
"RTN","PRSNEE0",75,0)
 . S PRSNM=$P(PRSNB(PRSNB),U,3)
"RTN","PRSNEE0",76,0)
 . I PRSNM,PRSNC\100*60+(PRSNC#100)-(PRSNB\100*60+(PRSNB#100))<PRSNM S PRSNERR=PRSNERR+1,PRSNERR(PRSNERR)="Meal Time is over Start/Stop Time."
"RTN","PRSNEE0",77,0)
 . S PRSND=$O(PRSNB(PRSNB))
"RTN","PRSNEE0",78,0)
 . S PRSNE=$O(PRSNB(PRSNC-1))
"RTN","PRSNEE0",79,0)
 . I PRSND'=PRSNE S PRSNERR=PRSNERR+1,PRSNERR(PRSNERR)="Subrecord: "_$P(PRSNB(PRSNB),U,2)_" has Stop Time greater than Start Time of the next time segment"
"RTN","PRSNEE0",80,0)
 . QUIT
"RTN","PRSNEE0",81,0)
 I PRSNERR D HLP^DDSUTL(.PRSNERR) S DDSERROR=1,DDSBR="1^2^1"
"RTN","PRSNEE0",82,0)
 QUIT
"RTN","PRSNEETP")
0^16^B12540787^n/a
"RTN","PRSNEETP",1,0)
PRSNEETP ;;WOIFO/JAH - Timekeeper for Nurse Activity for VANOD;7/24/2009
"RTN","PRSNEETP",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNEETP",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSNEETP",4,0)
 Q
"RTN","PRSNEETP",5,0)
 ;
"RTN","PRSNEETP",6,0)
NURSEPOC(TLI,PPI,PRSIEN,PRSDT) ;
"RTN","PRSNEETP",7,0)
 ;
"RTN","PRSNEETP",8,0)
 ;  Determine if current user (timekeeper) has set toggle to enter POC
"RTN","PRSNEETP",9,0)
 ;  data as they post employee time
"RTN","PRSNEETP",10,0)
 ;
"RTN","PRSNEETP",11,0)
 Q:'$$EDTTOGLD()
"RTN","PRSNEETP",12,0)
 ;
"RTN","PRSNEETP",13,0)
 ; Determine if employee passed in PRSIEN is a nurse 
"RTN","PRSNEETP",14,0)
 ;
"RTN","PRSNEETP",15,0)
 Q:'$$ISNURSE^PRSNUT01(PRSIEN)
"RTN","PRSNEETP",16,0)
 ;
"RTN","PRSNEETP",17,0)
 ; Determine if user has access as a data entry personnel
"RTN","PRSNEETP",18,0)
 ;
"RTN","PRSNEETP",19,0)
 Q:'$D(^PRST(455.5,"AE",DUZ,TLI))
"RTN","PRSNEETP",20,0)
 ;
"RTN","PRSNEETP",21,0)
 ; Get Day number of PRSDT-
"RTN","PRSNEETP",22,0)
 ;
"RTN","PRSNEETP",23,0)
 N DAT,PRSD
"RTN","PRSNEETP",24,0)
 S DAT=$G(^PRST(458,"AD",PRSDT)),PRSD=$P(DAT,U,2)
"RTN","PRSNEETP",25,0)
 ;
"RTN","PRSNEETP",26,0)
 ;Call the POC data entry code
"RTN","PRSNEETP",27,0)
 D NURSE^PRSNEE(PPI,PRSIEN,PRSD,"")
"RTN","PRSNEETP",28,0)
 Q
"RTN","PRSNEETP",29,0)
EDTTOGLD() ; Check to see if edit POC from Timecard is toggled on.
"RTN","PRSNEETP",30,0)
 ; look up preference for TKPOCEDIT user preference
"RTN","PRSNEETP",31,0)
 ;
"RTN","PRSNEETP",32,0)
 N TOGGLE,PRSIEN,IENS,SWITCH
"RTN","PRSNEETP",33,0)
 S TOGGLE=0
"RTN","PRSNEETP",34,0)
 S PRSIEN=$G(^VA(200,DUZ,450))
"RTN","PRSNEETP",35,0)
 Q:PRSIEN'>0 TOGGLE
"RTN","PRSNEETP",36,0)
 S IENS=","_PRSIEN_","
"RTN","PRSNEETP",37,0)
 D FIND^DIC(450.01,IENS,"1",,"TKPOCEDIT",,,,,"SWITCH",)
"RTN","PRSNEETP",38,0)
 I $G(SWITCH("DILIST","ID",1,1))="TRUE" S TOGGLE=1
"RTN","PRSNEETP",39,0)
 Q TOGGLE
"RTN","PRSNEETP",40,0)
 ;
"RTN","PRSNEETP",41,0)
TOGGLE ; Turn On/Off POC Data Entry from Timecard Posting
"RTN","PRSNEETP",42,0)
 ; called from option PRSN TOGGLE TK POC POST
"RTN","PRSNEETP",43,0)
 ;
"RTN","PRSNEETP",44,0)
 ;
"RTN","PRSNEETP",45,0)
 N TOGON,PRSIEN,PREFIEN
"RTN","PRSNEETP",46,0)
 ;
"RTN","PRSNEETP",47,0)
 ; get current setting
"RTN","PRSNEETP",48,0)
 S TOGON=$$EDTTOGLD()
"RTN","PRSNEETP",49,0)
 W @IOF,!!!
"RTN","PRSNEETP",50,0)
 I TOGON D
"RTN","PRSNEETP",51,0)
 .  W !?5,"You ARE currently set up to edit"
"RTN","PRSNEETP",52,0)
 .  W !?5,"Nurse Point of Care records as"
"RTN","PRSNEETP",53,0)
 .  W !?5,"you post timecards.  Do you wish"
"RTN","PRSNEETP",54,0)
 .  W !?5,"to remove this setting?",!
"RTN","PRSNEETP",55,0)
 E  D
"RTN","PRSNEETP",56,0)
 .  W !?5,"You are NOT set up to edit POC"
"RTN","PRSNEETP",57,0)
 .  W !?5,"records as you post timecards."
"RTN","PRSNEETP",58,0)
 .  W !?5,"Do you wish to add this"
"RTN","PRSNEETP",59,0)
 .  W !?5,"capability?",!
"RTN","PRSNEETP",60,0)
 ;
"RTN","PRSNEETP",61,0)
 ; ask user if they want to change current preference
"RTN","PRSNEETP",62,0)
 N DIR,DIRUT,X,Y
"RTN","PRSNEETP",63,0)
 S DIR(0)="Y",DIR("B")="Y" D ^DIR
"RTN","PRSNEETP",64,0)
 Q:$D(DIRUT)!('$G(Y))
"RTN","PRSNEETP",65,0)
 S PRSIEN=$G(^VA(200,DUZ,450))
"RTN","PRSNEETP",66,0)
 S IENS=","_PRSIEN_","
"RTN","PRSNEETP",67,0)
 D FIND^DIC(450.01,IENS,"1",,"TKPOCEDIT",,,,,"SWITCH",)
"RTN","PRSNEETP",68,0)
 ; if there is an entry for TKPOCEDIT preference then update entry to 
"RTN","PRSNEETP",69,0)
 ;   new preference
"RTN","PRSNEETP",70,0)
 ; otherwise add and set user preference to multiple.
"RTN","PRSNEETP",71,0)
 ;
"RTN","PRSNEETP",72,0)
 I +$G(SWITCH("DILIST",0)) D
"RTN","PRSNEETP",73,0)
 . S PREFIEN=+$G(SWITCH("DILIST",2,1))
"RTN","PRSNEETP",74,0)
 . N FDA,IENS
"RTN","PRSNEETP",75,0)
 . S IENS=PREFIEN_","_PRSIEN_","
"RTN","PRSNEETP",76,0)
 . S FDA(450.01,IENS,1)=$S(TOGON:"FALSE",1:"TRUE")
"RTN","PRSNEETP",77,0)
 . D UPDATE^DIE("","FDA","IENS"),MSG^DIALOG()
"RTN","PRSNEETP",78,0)
 E  D
"RTN","PRSNEETP",79,0)
 . N FDA,IENS
"RTN","PRSNEETP",80,0)
 . S IENS="+1,"_PRSIEN_","
"RTN","PRSNEETP",81,0)
 . S FDA(450.01,IENS,.01)="TKPOCEDIT"
"RTN","PRSNEETP",82,0)
 . S FDA(450.01,IENS,1)=$S(TOGON:"FALSE",1:"TRUE")
"RTN","PRSNEETP",83,0)
 . D UPDATE^DIE("","FDA","IENS"),MSG^DIALOG()
"RTN","PRSNEETP",84,0)
 Q
"RTN","PRSNEETP",85,0)
ASSIGNKY(X) ;
"RTN","PRSNEETP",86,0)
 ; entry point called when user added as a POC Data Entry Personnel
"RTN","PRSNEETP",87,0)
 ; in the T&L unit file.  When added they get the PRSN DEP security key,
"RTN","PRSNEETP",88,0)
 ; if they don't already have it.
"RTN","PRSNEETP",89,0)
 ;
"RTN","PRSNEETP",90,0)
 S IEN200=$G(X)
"RTN","PRSNEETP",91,0)
 Q:IEN200'>0
"RTN","PRSNEETP",92,0)
 I '$D(^XUSEC("PRSN DEP",IEN200)) D
"RTN","PRSNEETP",93,0)
 . N KEYIEN
"RTN","PRSNEETP",94,0)
 . S KEYIEN=$$FIND1^DIC(19.1,,"X","PRSN DEP")
"RTN","PRSNEETP",95,0)
 . Q:'KEYIEN
"RTN","PRSNEETP",96,0)
 . S PRSFDA(200.051,"?+1,"_IEN200_",",.01)=KEYIEN
"RTN","PRSNEETP",97,0)
 . S PRSIENS(1)=KEYIEN
"RTN","PRSNEETP",98,0)
 . D UPDATE^DIE("","PRSFDA","PRSIENS"),MSG^DIALOG()
"RTN","PRSNEETP",99,0)
 Q
"RTN","PRSNEETP",100,0)
 ;
"RTN","PRSNEETP",101,0)
REMOVEKY(DA,X) ;entry point is called when a user is deleted as a POC Data 
"RTN","PRSNEETP",102,0)
 ; Entry Personnel in the T&L unit file.  When they are deleted from
"RTN","PRSNEETP",103,0)
 ; the multiple, the key is removed, unless they are also in another
"RTN","PRSNEETP",104,0)
 ; T&L as a POC Data Entry Personnel.
"RTN","PRSNEETP",105,0)
 ;
"RTN","PRSNEETP",106,0)
 ; Loop thru "AE" xref in case this data entry personnel is assigned
"RTN","PRSNEETP",107,0)
 ; to other T&Ls
"RTN","PRSNEETP",108,0)
 ;
"RTN","PRSNEETP",109,0)
 N IEN200 S IEN200=$G(X) Q:IEN200'>0
"RTN","PRSNEETP",110,0)
 ;
"RTN","PRSNEETP",111,0)
 N TLI,FOUND S (TLI,FOUND)=0
"RTN","PRSNEETP",112,0)
 F  S TLI=$O(^PRST(455.5,"AE",IEN200,TLI)) Q:TLI'>0!FOUND  D
"RTN","PRSNEETP",113,0)
 .  I TLI'=""&(TLI'=DA(1)) S FOUND=1
"RTN","PRSNEETP",114,0)
 ;
"RTN","PRSNEETP",115,0)
 I 'FOUND,$D(^XUSEC("PRSN DEP",IEN200)) D
"RTN","PRSNEETP",116,0)
 . N KEYIEN,PRSFDA,PRSIENS,DKIEN
"RTN","PRSNEETP",117,0)
 . S KEYIEN=$$FIND1^DIC(19.1,,"X","PRSN DEP")
"RTN","PRSNEETP",118,0)
 . Q:'KEYIEN
"RTN","PRSNEETP",119,0)
 . S DKIEN=$$FIND1^DIC(200.051,","_IEN200_",","QX",KEYIEN)
"RTN","PRSNEETP",120,0)
 . Q:'DKIEN
"RTN","PRSNEETP",121,0)
 . S PRSFDA(200.051,DKIEN_","_IEN200_",",.01)="@"
"RTN","PRSNEETP",122,0)
 . D FILE^DIE("E","PRSFDA"),MSG^DIALOG()
"RTN","PRSNEETP",123,0)
 Q
"RTN","PRSNRAD0")
0^17^B15054277^n/a
"RTN","PRSNRAD0",1,0)
PRSNRAD0 ;WOIFO/DAM - POC GROUP ACTIVITY DETAILED REPORT ;060409
"RTN","PRSNRAD0",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNRAD0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","PRSNRAD0",4,0)
 ;
"RTN","PRSNRAD0",5,0)
 ;   
"RTN","PRSNRAD0",6,0)
 ; 
"RTN","PRSNRAD0",7,0)
DSPLY(PRSIEN,BEG,END,STOP) ;Entry point to gather POC data from 451
"RTN","PRSNRAD0",8,0)
 ;INPUT:
"RTN","PRSNRAD0",9,0)
 ;   PRSIEN: Nurse ien 450
"RTN","PRSNRAD0",10,0)
 ;   BEG,END: FileMan begin and end dates for report
"RTN","PRSNRAD0",11,0)
 ;
"RTN","PRSNRAD0",12,0)
 N EXTBEG,EXTEND,FMDT
"RTN","PRSNRAD0",13,0)
 N PRSNAME,PRSNTL,SKILMIX,PRSNSSN,PRSNLNG,PRSNTWD,PRSNPOC1,PRSDY
"RTN","PRSNRAD0",14,0)
 N PPIEN,PRSL,PRSNDAY,STARTDT,STDE,DATE,DAYNODE,FMDT
"RTN","PRSNRAD0",15,0)
 N MEAL,PRSNM,PRSNPOC,PRSNRE,PRSNREC,PRSNRIEN,PRSNSP,PRSNST
"RTN","PRSNRAD0",16,0)
 N PRSNTIEN,PRSNTT,PRSNTW,PRSNWIEN,POCD,PRSD
"RTN","PRSNRAD0",17,0)
 D INITIAL
"RTN","PRSNRAD0",18,0)
 D INFO^PRSNRAS1
"RTN","PRSNRAD0",19,0)
 S FMDT=BEG-.1
"RTN","PRSNRAD0",20,0)
 N INDEX,CNT,DAYNODE
"RTN","PRSNRAD0",21,0)
 S (INDEX,CNT)=0
"RTN","PRSNRAD0",22,0)
 F  S FMDT=$O(^PRST(458,"AD",FMDT)) Q:FMDT>END!(FMDT'>0)!STOP  D
"RTN","PRSNRAD0",23,0)
 . S DAYNODE=$G(^PRST(458,"AD",FMDT))
"RTN","PRSNRAD0",24,0)
 . S PPIEN=+DAYNODE
"RTN","PRSNRAD0",25,0)
 . S PRSNDAY=$P(DAYNODE,U,2),PRSD=1
"RTN","PRSNRAD0",26,0)
 . K POCD   ;array to hold POC data
"RTN","PRSNRAD0",27,0)
 . D L1^PRSNRUT1(.POCD,PPIEN,PRSIEN,PRSNDAY)
"RTN","PRSNRAD0",28,0)
 . Q:$G(POCD(0))=0
"RTN","PRSNRAD0",29,0)
 . D DATA
"RTN","PRSNRAD0",30,0)
 ;
"RTN","PRSNRAD0",31,0)
 Q
"RTN","PRSNRAD0",32,0)
 ;
"RTN","PRSNRAD0",33,0)
INITIAL ;  Set up external date range
"RTN","PRSNRAD0",34,0)
 ;
"RTN","PRSNRAD0",35,0)
 N Y
"RTN","PRSNRAD0",36,0)
 S Y=BEG D DD^%DT S EXTBEG=Y
"RTN","PRSNRAD0",37,0)
 S Y=END D DD^%DT S EXTEND=Y
"RTN","PRSNRAD0",38,0)
 Q
"RTN","PRSNRAD0",39,0)
 ;
"RTN","PRSNRAD0",40,0)
HDR ;Display header for report of Individual Nurse Activity
"RTN","PRSNRAD0",41,0)
 ;
"RTN","PRSNRAD0",42,0)
 W @IOF
"RTN","PRSNRAD0",43,0)
 S PG=PG+1
"RTN","PRSNRAD0",44,0)
 W ?25,"GROUP ACTIVITY DETAIL REPORT"
"RTN","PRSNRAD0",45,0)
 W !,?15,EXTBEG_" - "_EXTEND,?45,"Run Date: ",TODAY,?70,"Page: ",$J(PG,3)
"RTN","PRSNRAD0",46,0)
 W !              ;blank line
"RTN","PRSNRAD0",47,0)
 W !,"Nurse Name",?21,"Last 4",?29,"Start/",?38,"Type of",?49,"Mand",?57,"Meal",?65,"Location/"
"RTN","PRSNRAD0",48,0)
 W !,"Skill Mix",?23,"SSN/",?29,"Stop",?39,"Time",?50,"OT",?57,"Time",?64,"Type of Work"
"RTN","PRSNRAD0",49,0)
 W !,"Date",?23,"T&L",?29,"Time"
"RTN","PRSNRAD0",50,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","PRSNRAD0",51,0)
 ;
"RTN","PRSNRAD0",52,0)
 Q
"RTN","PRSNRAD0",53,0)
 ;
"RTN","PRSNRAD0",54,0)
DATA ;Extract display data from POCD array and get external date
"RTN","PRSNRAD0",55,0)
 ;
"RTN","PRSNRAD0",56,0)
 N PRSEQ
"RTN","PRSNRAD0",57,0)
 S (PRSNST,PRSNSP,PRSNPOC,PRSNTT,PRSNWIEN)=""
"RTN","PRSNRAD0",58,0)
 S (PRSNTW,PRSNM,PRSNRE,PRSNREC,PRSNRIEN)=""
"RTN","PRSNRAD0",59,0)
 S (PRSNLNG,PRSNTWD,PRSNPOC1,PRSDY,DATE,MEAL)=""
"RTN","PRSNRAD0",60,0)
 S PRSNTIEN=0
"RTN","PRSNRAD0",61,0)
 ;
"RTN","PRSNRAD0",62,0)
 ;
"RTN","PRSNRAD0",63,0)
 ;Get external date in form of MM/DD/YY
"RTN","PRSNRAD0",64,0)
 N DATE S DATE=$E(FMDT,4,5)_"/"_$E(FMDT,6,7)_"/"_$E(FMDT,2,3)
"RTN","PRSNRAD0",65,0)
 ;
"RTN","PRSNRAD0",66,0)
 ;Get data from POCD array 
"RTN","PRSNRAD0",67,0)
 S PRSEQ=0
"RTN","PRSNRAD0",68,0)
 F  S PRSEQ=$O(POCD(PRSEQ)) Q:PRSEQ'>0!STOP  D
"RTN","PRSNRAD0",69,0)
 . ;Start Time
"RTN","PRSNRAD0",70,0)
 . S PRSNST=$P(POCD(PRSEQ),U)
"RTN","PRSNRAD0",71,0)
 . ;
"RTN","PRSNRAD0",72,0)
 . ;Stop Time 
"RTN","PRSNRAD0",73,0)
 . S PRSNSP=$P(POCD(PRSEQ),U,2)
"RTN","PRSNRAD0",74,0)
 . ;
"RTN","PRSNRAD0",75,0)
 . ;Meal Time
"RTN","PRSNRAD0",76,0)
 . S MEAL=$P(POCD(PRSEQ),U,3)
"RTN","PRSNRAD0",77,0)
 . ;
"RTN","PRSNRAD0",78,0)
 . ;Type of Time code IEN
"RTN","PRSNRAD0",79,0)
 . S PRSNTT=$P(POCD(PRSEQ),U,4),PRSNTIEN=" ",PRSNLNG=" "
"RTN","PRSNRAD0",80,0)
 . I PRSNTT'="" D
"RTN","PRSNRAD0",81,0)
 . . ;
"RTN","PRSNRAD0",82,0)
 . . ;Type of Time code
"RTN","PRSNRAD0",83,0)
 . . S PRSNTIEN=$O(^PRST(457.3,"B",PRSNTT,0)) Q:PRSNTIEN=""
"RTN","PRSNRAD0",84,0)
 . . ;
"RTN","PRSNRAD0",85,0)
 . . ;Description for Type of Time code
"RTN","PRSNRAD0",86,0)
 . . S PRSNLNG=$P(^PRST(457.3,PRSNTIEN,0),U,2)
"RTN","PRSNRAD0",87,0)
 . . ;
"RTN","PRSNRAD0",88,0)
 . S PRSNPOC=$P(POCD(PRSEQ),U,5),PRSNPOC1=" "
"RTN","PRSNRAD0",89,0)
 . I PRSNPOC'="" D
"RTN","PRSNRAD0",90,0)
 . . ;POC
"RTN","PRSNRAD0",91,0)
 . . S PRSNPOC1=$P($$ISACTIVE^PRSNUT01(DT,PRSNPOC),U,2)
"RTN","PRSNRAD0",92,0)
 . ;
"RTN","PRSNRAD0",93,0)
 . ;Type of Work Code IEN
"RTN","PRSNRAD0",94,0)
 . S PRSNWIEN=$P(POCD(PRSEQ),U,6),PRSNTW=" ",PRSNTWD=" "
"RTN","PRSNRAD0",95,0)
 . I PRSNWIEN'="" D
"RTN","PRSNRAD0",96,0)
 . . ;
"RTN","PRSNRAD0",97,0)
 . . ;Type of Work Code
"RTN","PRSNRAD0",98,0)
 . . S PRSNTW=$P(^PRSN(451.5,PRSNWIEN,0),U)
"RTN","PRSNRAD0",99,0)
 . . ;
"RTN","PRSNRAD0",100,0)
 . . ;Description for Type of Work code
"RTN","PRSNRAD0",101,0)
 . . S PRSNTWD=$P(^PRSN(451.5,PRSNWIEN,0),U,2)
"RTN","PRSNRAD0",102,0)
 . ;
"RTN","PRSNRAD0",103,0)
 . ;OT Mandatory/Voluntary
"RTN","PRSNRAD0",104,0)
 . S PRSNM=$P(POCD(PRSEQ),U,7)
"RTN","PRSNRAD0",105,0)
 . D PRT
"RTN","PRSNRAD0",106,0)
 ;
"RTN","PRSNRAD0",107,0)
 Q
"RTN","PRSNRAD0",108,0)
 ;
"RTN","PRSNRAD0",109,0)
PRT ;Print report
"RTN","PRSNRAD0",110,0)
 I PRSL W !,$E(PRSNAME,1,19)
"RTN","PRSNRAD0",111,0)
 ;PUT DATE ON FIRST LINE IF NAME & SKILL ARE NOT PRINTED
"RTN","PRSNRAD0",112,0)
 I 'PRSL,PRSD W !,"  ",DATE
"RTN","PRSNRAD0",113,0)
 W ?22,$E(PRSNSSN,6,9)
"RTN","PRSNRAD0",114,0)
 W ?29,PRSNST
"RTN","PRSNRAD0",115,0)
 W ?38,PRSNLNG
"RTN","PRSNRAD0",116,0)
 W ?51,PRSNM
"RTN","PRSNRAD0",117,0)
 W ?58,MEAL
"RTN","PRSNRAD0",118,0)
 W ?65,$E(PRSNPOC1,1,14)
"RTN","PRSNRAD0",119,0)
 W !
"RTN","PRSNRAD0",120,0)
 I PRSL W "  ",$E(SKILMIX,1,17)
"RTN","PRSNRAD0",121,0)
 W ?22,PRSNTL
"RTN","PRSNRAD0",122,0)
 W ?29,PRSNSP
"RTN","PRSNRAD0",123,0)
 W ?65,$E(PRSNTWD,1,14)
"RTN","PRSNRAD0",124,0)
 W !
"RTN","PRSNRAD0",125,0)
 ;PUT DATE ON THIRD LINE IF NAME & SKILL ARE PRINTED
"RTN","PRSNRAD0",126,0)
 I PRSL,PRSD W "  ",DATE,!
"RTN","PRSNRAD0",127,0)
 S (PRSL,PRSD)=0
"RTN","PRSNRAD0",128,0)
 ;
"RTN","PRSNRAD0",129,0)
 I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDR
"RTN","PRSNRAD0",130,0)
 Q
"RTN","PRSNRAS0")
0^18^B17764881^n/a
"RTN","PRSNRAS0",1,0)
PRSNRAS0 ;WOIFO/DAM - Group Activity - Summary and Detailed;9/10/2009
"RTN","PRSNRAS0",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNRAS0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSNRAS0",4,0)
DEP ; Entry point for Data Entry Personnel
"RTN","PRSNRAS0",5,0)
 N GROUP
"RTN","PRSNRAS0",6,0)
 D ACCESS^PRSNUT02(.GROUP,"E",DT,1)
"RTN","PRSNRAS0",7,0)
 ; quit if any error during group selection
"RTN","PRSNRAS0",8,0)
 I $P($G(GROUP(0)),U,2)="E" D  Q
"RTN","PRSNRAS0",9,0)
 .W !,$P(GROUP(0),U,3)
"RTN","PRSNRAS0",10,0)
 D MAIN
"RTN","PRSNRAS0",11,0)
 Q
"RTN","PRSNRAS0",12,0)
 ;
"RTN","PRSNRAS0",13,0)
DAP ; Entry point for Data Approval Personnel
"RTN","PRSNRAS0",14,0)
 N GROUP
"RTN","PRSNRAS0",15,0)
 D ACCESS^PRSNUT02(.GROUP,"A",DT,1)
"RTN","PRSNRAS0",16,0)
 ; quit if any error during group selection
"RTN","PRSNRAS0",17,0)
 I $P($G(GROUP(0)),U,2)="E" D  Q
"RTN","PRSNRAS0",18,0)
 .W !,$P(GROUP(0),U,3)
"RTN","PRSNRAS0",19,0)
 D MAIN
"RTN","PRSNRAS0",20,0)
 Q
"RTN","PRSNRAS0",21,0)
 ;
"RTN","PRSNRAS0",22,0)
COORD ;Entry point for VANOD Coordinator
"RTN","PRSNRAS0",23,0)
 ; Coordinator has no access limits so let them pick any group
"RTN","PRSNRAS0",24,0)
 N GROUP
"RTN","PRSNRAS0",25,0)
 D PIKGROUP^PRSNUT04(.GROUP,"",1)
"RTN","PRSNRAS0",26,0)
 ; quit if any error during group selection
"RTN","PRSNRAS0",27,0)
 I $P($G(GROUP(0)),U,2)="E" D  Q
"RTN","PRSNRAS0",28,0)
 .W !,$P(GROUP(0),U,3)
"RTN","PRSNRAS0",29,0)
 D MAIN
"RTN","PRSNRAS0",30,0)
 ;
"RTN","PRSNRAS0",31,0)
 Q
"RTN","PRSNRAS0",32,0)
 ;
"RTN","PRSNRAS0",33,0)
MAIN ;
"RTN","PRSNRAS0",34,0)
 N RANGE,BEG,END,EXTBEG,EXTEND,STOP
"RTN","PRSNRAS0",35,0)
 N DAYBEG,DAYEND
"RTN","PRSNRAS0",36,0)
 N TYPE,BEG,END
"RTN","PRSNRAS0",37,0)
 S STOP=0
"RTN","PRSNRAS0",38,0)
 D TYPE
"RTN","PRSNRAS0",39,0)
 Q:STOP
"RTN","PRSNRAS0",40,0)
 D DATE
"RTN","PRSNRAS0",41,0)
 Q:STOP
"RTN","PRSNRAS0",42,0)
 D QUE
"RTN","PRSNRAS0",43,0)
 Q
"RTN","PRSNRAS0",44,0)
 ;
"RTN","PRSNRAS0",45,0)
REPORT ;for group of location or t&l
"RTN","PRSNRAS0",46,0)
 ;
"RTN","PRSNRAS0",47,0)
 N PRSIEN,PRSNGLB,PRSNG,PICK,PRSNGA,PRSNGB,PG,STOP
"RTN","PRSNRAS0",48,0)
 N PRSNARY,PRSNAME,PRSNTL
"RTN","PRSNRAS0",49,0)
 K ^TMP($J,"PRSNR")
"RTN","PRSNRAS0",50,0)
 U IO
"RTN","PRSNRAS0",51,0)
 S (PICK,STOP)=0
"RTN","PRSNRAS0",52,0)
 F  S PICK=$O(GROUP(PICK)) Q:PICK=""!STOP  D
"RTN","PRSNRAS0",53,0)
 . S PRSNG=GROUP(0)_"^"_PICK_"^"_GROUP(PICK)
"RTN","PRSNRAS0",54,0)
 . S PRSNGLB=$S($P(PRSNG,U,2)="N":$NA(^NURSF(211.8,"D",$P(PRSNG,U,7))),1:$NA(^PRSPC("ATL"_$P(PRSNG,U,3))))
"RTN","PRSNRAS0",55,0)
 . S PRSNGA=""
"RTN","PRSNRAS0",56,0)
 . F  S PRSNGA=$O(@PRSNGLB@(PRSNGA)) QUIT:PRSNGA=""!STOP  D
"RTN","PRSNRAS0",57,0)
 .. S PRSNGB=0
"RTN","PRSNRAS0",58,0)
 .. F  S PRSNGB=$O(@PRSNGLB@(PRSNGA,PRSNGB)) QUIT:'PRSNGB!STOP  D
"RTN","PRSNRAS0",59,0)
 ... I $P(PRSNG,U,2)="N",+$P(PRSNG,U,4)'=+$$PRIMLOC^PRSNUT03(PRSNGB) Q
"RTN","PRSNRAS0",60,0)
 ... S PRSIEN=$S($P(PRSNG,U,2)="N":+$G(^VA(200,PRSNGB,450)),1:PRSNGB)
"RTN","PRSNRAS0",61,0)
 ... Q:'+$$ISNURSE^PRSNUT01(PRSIEN)
"RTN","PRSNRAS0",62,0)
 ... S PRSNARY=$G(^PRSPC(PRSIEN,0))
"RTN","PRSNRAS0",63,0)
 ... S PRSNAME=$P(PRSNARY,U)              ;Nurse Name
"RTN","PRSNRAS0",64,0)
 ... S PRSNTL=$P(PRSNARY,U,8)             ;Nurse T&L
"RTN","PRSNRAS0",65,0)
 ... S ^TMP($J,"PRSNR",PICK,PRSNAME,PRSIEN)=""
"RTN","PRSNRAS0",66,0)
 ;
"RTN","PRSNRAS0",67,0)
 S PG=0,TODAY=$E(DT,4,5)_"/"_$E(DT,6,7)_"/"_$E(DT,2,3)
"RTN","PRSNRAS0",68,0)
 I TYPE="S" D HDR^PRSNRAS1(EXTBEG,EXTEND)
"RTN","PRSNRAS0",69,0)
 I TYPE="D" D HDR^PRSNRAD0
"RTN","PRSNRAS0",70,0)
 S PICK=""
"RTN","PRSNRAS0",71,0)
 F  S PICK=$O(^TMP($J,"PRSNR",PICK)) Q:PICK=""!STOP  D
"RTN","PRSNRAS0",72,0)
 . S GHD="Location: "_PICK
"RTN","PRSNRAS0",73,0)
 . S TAB=IOM-$L(GHD)/2-5
"RTN","PRSNRAS0",74,0)
 . W !!,?TAB,GHD,!
"RTN","PRSNRAS0",75,0)
 . W ?TAB F I=1:1:$L(GHD) W "-"
"RTN","PRSNRAS0",76,0)
 . S PRSNAME=""
"RTN","PRSNRAS0",77,0)
 . Q:STOP
"RTN","PRSNRAS0",78,0)
 . F  S PRSNAME=$O(^TMP($J,"PRSNR",PICK,PRSNAME)) Q:PRSNAME=""!STOP  D
"RTN","PRSNRAS0",79,0)
 .. S PRSIEN=""
"RTN","PRSNRAS0",80,0)
 .. F  S PRSIEN=$O(^TMP($J,"PRSNR",PICK,PRSNAME,PRSIEN)) Q:PRSIEN=""!STOP  D
"RTN","PRSNRAS0",81,0)
 ... I TYPE="S" D
"RTN","PRSNRAS0",82,0)
 .... ;summary report
"RTN","PRSNRAS0",83,0)
 .... D DSPLY^PRSNRAS1(PRSIEN,BEG,END,EXTBEG,EXTEND,.STOP)
"RTN","PRSNRAS0",84,0)
 ... I TYPE="D" D
"RTN","PRSNRAS0",85,0)
 .... ;detailed report
"RTN","PRSNRAS0",86,0)
 .... D DSPLY^PRSNRAD0(PRSIEN,BEG,END,.STOP)
"RTN","PRSNRAS0",87,0)
 W !!,"End of Report"
"RTN","PRSNRAS0",88,0)
 D ^%ZISC
"RTN","PRSNRAS0",89,0)
 K ^TMP($J,"PRSNR")
"RTN","PRSNRAS0",90,0)
 Q
"RTN","PRSNRAS0",91,0)
 ;
"RTN","PRSNRAS0",92,0)
TYPE ;Choose summary or detailed group activity report
"RTN","PRSNRAS0",93,0)
 ;
"RTN","PRSNRAS0",94,0)
 N DIR,DIRUT,X,Y
"RTN","PRSNRAS0",95,0)
 S DIR(0)="S^S:Summary Report;D:Detailed Report"
"RTN","PRSNRAS0",96,0)
 S DIR("A")="Enter Selection"
"RTN","PRSNRAS0",97,0)
 S DIR("?")="Enter whether you want to select a Summary or Detailed Group Activity Report"
"RTN","PRSNRAS0",98,0)
 D ^DIR
"RTN","PRSNRAS0",99,0)
 I $D(DIRUT) S STOP=1 Q
"RTN","PRSNRAS0",100,0)
 S TYPE=Y
"RTN","PRSNRAS0",101,0)
 Q
"RTN","PRSNRAS0",102,0)
 ;
"RTN","PRSNRAS0",103,0)
DATE ; User is prompted for a date range 
"RTN","PRSNRAS0",104,0)
 ;
"RTN","PRSNRAS0",105,0)
 S RANGE=$$POCRANGE^PRSNUT01()
"RTN","PRSNRAS0",106,0)
 ; QUIT HERE IF RANGE=0 
"RTN","PRSNRAS0",107,0)
 I +$G(RANGE)'>0 S STOP=1
"RTN","PRSNRAS0",108,0)
 ;
"RTN","PRSNRAS0",109,0)
 S BEG=$P(RANGE,U)
"RTN","PRSNRAS0",110,0)
 S END=$P(RANGE,U,2)
"RTN","PRSNRAS0",111,0)
 S EXTBEG=$P(RANGE,U,3)
"RTN","PRSNRAS0",112,0)
 S EXTEND=$P(RANGE,U,4)
"RTN","PRSNRAS0",113,0)
 ;
"RTN","PRSNRAS0",114,0)
 Q
"RTN","PRSNRAS0",115,0)
 ;
"RTN","PRSNRAS0",116,0)
QUE ;call to generate and display report for individual activity
"RTN","PRSNRAS0",117,0)
 N %ZIS,POP,IOP
"RTN","PRSNRAS0",118,0)
 S %ZIS="MQ"
"RTN","PRSNRAS0",119,0)
 D ^%ZIS
"RTN","PRSNRAS0",120,0)
 Q:POP
"RTN","PRSNRAS0",121,0)
 I $D(IO("Q")) D
"RTN","PRSNRAS0",122,0)
 . K IO("Q")
"RTN","PRSNRAS0",123,0)
 . N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC
"RTN","PRSNRAS0",124,0)
 . S ZTDESC="GROUP ACTIVITY "_TYPE_" REPORT"
"RTN","PRSNRAS0",125,0)
 . S ZTRTN="REPORT^PRSNRAS0"
"RTN","PRSNRAS0",126,0)
 . S ZTSAVE("GROUP")=""
"RTN","PRSNRAS0",127,0)
 . S ZTSAVE("GROUP(")=""
"RTN","PRSNRAS0",128,0)
 . S ZTSAVE("TYPE")=""
"RTN","PRSNRAS0",129,0)
 . S ZTSAVE("BEG")=""
"RTN","PRSNRAS0",130,0)
 . S ZTSAVE("END")=""
"RTN","PRSNRAS0",131,0)
 . S ZTSAVE("EXTBEG")=""
"RTN","PRSNRAS0",132,0)
 . S ZTSAVE("EXTEND")=""
"RTN","PRSNRAS0",133,0)
 . D ^%ZTLOAD
"RTN","PRSNRAS0",134,0)
 . I $D(ZTSK) S ZTREQ="@" W !,"Request "_ZTSK_" queued."
"RTN","PRSNRAS0",135,0)
 E  D
"RTN","PRSNRAS0",136,0)
 . D REPORT
"RTN","PRSNRAS0",137,0)
 Q
"RTN","PRSNRAS1")
0^19^B20833055^n/a
"RTN","PRSNRAS1",1,0)
PRSNRAS1 ;WOIFO/DAM - POC GROUP ACTIVITY SUMMARY REPORT ;060409
"RTN","PRSNRAS1",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNRAS1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","PRSNRAS1",4,0)
 ;
"RTN","PRSNRAS1",5,0)
 Q
"RTN","PRSNRAS1",6,0)
 ; 
"RTN","PRSNRAS1",7,0)
DSPLY(PRSIEN,BEG,END,EXTBEG,EXTEND,STOP) ; gather POC data from 451
"RTN","PRSNRAS1",8,0)
 ;INPUT:
"RTN","PRSNRAS1",9,0)
 ;   PRSIEN: Nurse ien 450
"RTN","PRSNRAS1",10,0)
 ;   BEG,END: FileMan begin and end dates for report
"RTN","PRSNRAS1",11,0)
 ;
"RTN","PRSNRAS1",12,0)
 N INDEX,CNT,DAYNODE,FMDT,POCD,WKTOT
"RTN","PRSNRAS1",13,0)
 N PRSNAME,PRSNTL,SKILMIX,MIX1,MIX2
"RTN","PRSNRAS1",14,0)
 N PRSNLNG,PRSNTWD,PRSNPOC1,PRSDY
"RTN","PRSNRAS1",15,0)
 N PPIEN,PRSL,PRSNDAY,STARTDT,STDE,PRSNSSN
"RTN","PRSNRAS1",16,0)
 D INFO
"RTN","PRSNRAS1",17,0)
 S FMDT=BEG-.1
"RTN","PRSNRAS1",18,0)
 S (INDEX,CNT)=0
"RTN","PRSNRAS1",19,0)
 F  S FMDT=$O(^PRST(458,"AD",FMDT)) Q:FMDT>END!(FMDT'>0)!STOP  D
"RTN","PRSNRAS1",20,0)
 . S DAYNODE=$G(^PRST(458,"AD",FMDT))
"RTN","PRSNRAS1",21,0)
 . S PPIEN=+DAYNODE
"RTN","PRSNRAS1",22,0)
 . S PRSNDAY=$P(DAYNODE,U,2)
"RTN","PRSNRAS1",23,0)
 . K POCD   ;array to hold POC data
"RTN","PRSNRAS1",24,0)
 . D L1^PRSNRUT1(.POCD,PPIEN,PRSIEN,PRSNDAY)
"RTN","PRSNRAS1",25,0)
 . Q:$G(POCD(0))=0
"RTN","PRSNRAS1",26,0)
 . D DATA
"RTN","PRSNRAS1",27,0)
 ;
"RTN","PRSNRAS1",28,0)
 D PRTLOOP(EXTBEG,EXTEND)
"RTN","PRSNRAS1",29,0)
 Q
"RTN","PRSNRAS1",30,0)
 ;
"RTN","PRSNRAS1",31,0)
INFO ;Find nurse information to display in report
"RTN","PRSNRAS1",32,0)
 ;
"RTN","PRSNRAS1",33,0)
 N PRSNARY
"RTN","PRSNRAS1",34,0)
 ;
"RTN","PRSNRAS1",35,0)
 S PRSL=1
"RTN","PRSNRAS1",36,0)
 S PRSNARY=$G(^PRSPC(PRSIEN,0))
"RTN","PRSNRAS1",37,0)
 S PRSNAME=$P(PRSNARY,U)              ;Nurse Name
"RTN","PRSNRAS1",38,0)
 S PRSNSSN=$P(PRSNARY,U,9)           ;Nurse SSN
"RTN","PRSNRAS1",39,0)
 S PRSNTL=$P(PRSNARY,U,8)             ;Nurse T&L
"RTN","PRSNRAS1",40,0)
 S SKILMIX=$P($$ISNURSE^PRSNUT01(PRSIEN),U,2) ;  Nurse skillmix
"RTN","PRSNRAS1",41,0)
 I SKILMIX["ADMINISTRATIVE" S SKILMIX="ADMIN RN"
"RTN","PRSNRAS1",42,0)
 Q
"RTN","PRSNRAS1",43,0)
 ;
"RTN","PRSNRAS1",44,0)
HDR(EXTBEG,EXTEND) ;Display header for report of Individual Nurse Activity
"RTN","PRSNRAS1",45,0)
 ;
"RTN","PRSNRAS1",46,0)
 W @IOF
"RTN","PRSNRAS1",47,0)
 S PG=PG+1
"RTN","PRSNRAS1",48,0)
 W ?25,"GROUP ACTIVITY SUMMARY REPORT"
"RTN","PRSNRAS1",49,0)
 W !,?15,EXTBEG_" - "_EXTEND,?45,"Run Date: ",TODAY,?70,"Page: ",$J(PG,3)
"RTN","PRSNRAS1",50,0)
 W !         ;blank line
"RTN","PRSNRAS1",51,0)
 W !,"Nurse Name",?21,"Type of",?32,"Type of",?48,"Location",?68,"# of",?75,"T&L"
"RTN","PRSNRAS1",52,0)
 W !,"Skill Mix",?22,"Time",?33,"Work",?68,"Hours",?75,"Unit"
"RTN","PRSNRAS1",53,0)
 W !,"--------------------------------------------------------------------------------",!
"RTN","PRSNRAS1",54,0)
 ;
"RTN","PRSNRAS1",55,0)
 Q
"RTN","PRSNRAS1",56,0)
 ;
"RTN","PRSNRAS1",57,0)
DATA ;Extract display data from POCD array
"RTN","PRSNRAS1",58,0)
 ;
"RTN","PRSNRAS1",59,0)
 N PRSNST,PRSNSP,PRSNPOC,PRSNTT,PRSNWIEN,HOURS,PRSNTIEN
"RTN","PRSNRAS1",60,0)
 N PRSNTW,PRSNM,PRSNRE,PRSNREC,PRSNRIEN,MEAL,PRSEQ
"RTN","PRSNRAS1",61,0)
 S (PRSNLNG,PRSNTWD,PRSNPOC1,PRSDY)=""
"RTN","PRSNRAS1",62,0)
 S PRSNTIEN=0
"RTN","PRSNRAS1",63,0)
 ;
"RTN","PRSNRAS1",64,0)
 ;
"RTN","PRSNRAS1",65,0)
 S PRSEQ=0
"RTN","PRSNRAS1",66,0)
 F  S PRSEQ=$O(POCD(PRSEQ)) Q:PRSEQ'>0!STOP  D
"RTN","PRSNRAS1",67,0)
 . ;Start Time
"RTN","PRSNRAS1",68,0)
 . S PRSNST=$P(POCD(PRSEQ),U)
"RTN","PRSNRAS1",69,0)
 . ;
"RTN","PRSNRAS1",70,0)
 . ;Stop Time 
"RTN","PRSNRAS1",71,0)
 . S PRSNSP=$P(POCD(PRSEQ),U,2)
"RTN","PRSNRAS1",72,0)
 . ;
"RTN","PRSNRAS1",73,0)
 . ;Meal Time
"RTN","PRSNRAS1",74,0)
 . S MEAL=$P(POCD(PRSEQ),U,3)
"RTN","PRSNRAS1",75,0)
 . ;
"RTN","PRSNRAS1",76,0)
 . ;Get hours worked in a given location
"RTN","PRSNRAS1",77,0)
 . S HOURS=$$AMT^PRSPSAPU(PRSNST,PRSNSP,MEAL)
"RTN","PRSNRAS1",78,0)
 . ;
"RTN","PRSNRAS1",79,0)
 . ;Type of Time code IEN
"RTN","PRSNRAS1",80,0)
 . S PRSNTT=$P(POCD(PRSEQ),U,4),PRSNLNG=" "
"RTN","PRSNRAS1",81,0)
 . I PRSNTT'="" D
"RTN","PRSNRAS1",82,0)
 . . ;
"RTN","PRSNRAS1",83,0)
 . . ;Type of Time code
"RTN","PRSNRAS1",84,0)
 . . S PRSNTIEN=$O(^PRST(457.3,"B",PRSNTT,0))
"RTN","PRSNRAS1",85,0)
 . . Q:PRSNTIEN=""
"RTN","PRSNRAS1",86,0)
 . . ;
"RTN","PRSNRAS1",87,0)
 . . ;Description for Type of Time code
"RTN","PRSNRAS1",88,0)
 . . S PRSNLNG=$P(^PRST(457.3,PRSNTIEN,0),U,2)
"RTN","PRSNRAS1",89,0)
 . . ;
"RTN","PRSNRAS1",90,0)
 . S PRSNPOC=$P(POCD(PRSEQ),U,5),PRSNPOC1=" "
"RTN","PRSNRAS1",91,0)
 . I PRSNPOC'="" D
"RTN","PRSNRAS1",92,0)
 . . ;POC
"RTN","PRSNRAS1",93,0)
 . . S PRSNPOC1=$P($$ISACTIVE^PRSNUT01(DT,PRSNPOC),U,2)
"RTN","PRSNRAS1",94,0)
 . ;
"RTN","PRSNRAS1",95,0)
 . ;Type of Work Code IEN
"RTN","PRSNRAS1",96,0)
 . S PRSNWIEN=$P(POCD(PRSEQ),U,6),PRSNTWD=" "
"RTN","PRSNRAS1",97,0)
 . I PRSNWIEN'="" D
"RTN","PRSNRAS1",98,0)
 . . ;
"RTN","PRSNRAS1",99,0)
 . . ;Type of Work Code
"RTN","PRSNRAS1",100,0)
 . . S PRSNTW=$P(^PRSN(451.5,PRSNWIEN,0),U)
"RTN","PRSNRAS1",101,0)
 . . ;
"RTN","PRSNRAS1",102,0)
 . . ;Description for Type of Work code
"RTN","PRSNRAS1",103,0)
 . . S PRSNTWD=$P(^PRSN(451.5,PRSNWIEN,0),U,2)
"RTN","PRSNRAS1",104,0)
 .;
"RTN","PRSNRAS1",105,0)
 .; save hours into work array
"RTN","PRSNRAS1",106,0)
 . I '$D(WKTOT(PRSNLNG,PRSNTWD,PRSNPOC1)) D
"RTN","PRSNRAS1",107,0)
 .. S CNT=CNT+1
"RTN","PRSNRAS1",108,0)
 .. S (INDEX,WKTOT(PRSNLNG,PRSNTWD,PRSNPOC1,0))=CNT
"RTN","PRSNRAS1",109,0)
 . E  D
"RTN","PRSNRAS1",110,0)
 .. S INDEX=$G(WKTOT(PRSNLNG,PRSNTWD,PRSNPOC1,0))
"RTN","PRSNRAS1",111,0)
 . S WKTOT(INDEX,PRSNLNG,PRSNTWD,PRSNPOC1)=$G(WKTOT(INDEX,PRSNLNG,PRSNTWD,PRSNPOC1))+HOURS
"RTN","PRSNRAS1",112,0)
 ;
"RTN","PRSNRAS1",113,0)
 Q
"RTN","PRSNRAS1",114,0)
 ;
"RTN","PRSNRAS1",115,0)
PRTLOOP(EXTBEG,EXTEND) ;  Loop through Totals array and print each one
"RTN","PRSNRAS1",116,0)
 ;
"RTN","PRSNRAS1",117,0)
 N PRSEQ,TT,TWD,POC,CNT
"RTN","PRSNRAS1",118,0)
 S PRSEQ=0,CNT=0
"RTN","PRSNRAS1",119,0)
 F  S PRSEQ=$O(WKTOT(PRSEQ)) Q:PRSEQ'>0!STOP  D
"RTN","PRSNRAS1",120,0)
 . S TT=""
"RTN","PRSNRAS1",121,0)
 . F  S TT=$O(WKTOT(PRSEQ,TT)) Q:TT=""!STOP  D
"RTN","PRSNRAS1",122,0)
 .. S TWD=""
"RTN","PRSNRAS1",123,0)
 .. F  S TWD=$O(WKTOT(PRSEQ,TT,TWD)) Q:TWD=""!STOP  D
"RTN","PRSNRAS1",124,0)
 ... S POC=""
"RTN","PRSNRAS1",125,0)
 ... F  S POC=$O(WKTOT(PRSEQ,TT,TWD,POC)) Q:POC=""!STOP  D
"RTN","PRSNRAS1",126,0)
 .... S HOURS=$G(WKTOT(PRSEQ,TT,TWD,POC)),CNT=CNT+1
"RTN","PRSNRAS1",127,0)
 .... D PPP(EXTBEG,EXTEND)
"RTN","PRSNRAS1",128,0)
 ; need a blank line between nurses when there was only one record printed
"RTN","PRSNRAS1",129,0)
 I CNT=1 W !
"RTN","PRSNRAS1",130,0)
 Q
"RTN","PRSNRAS1",131,0)
 ;
"RTN","PRSNRAS1",132,0)
PPP(EXTBEG,EXTEND) ;
"RTN","PRSNRAS1",133,0)
 I PRSL W !,$E(PRSNAME,1,19)
"RTN","PRSNRAS1",134,0)
 W ?21,TT,?32,$E(TWD,1,14),?48,$E(POC,1,16),?66,$J(HOURS,7,2),?75,PRSNTL
"RTN","PRSNRAS1",135,0)
 W !
"RTN","PRSNRAS1",136,0)
 I PRSL W "  ",$E(SKILMIX,1,17)
"RTN","PRSNRAS1",137,0)
 ;
"RTN","PRSNRAS1",138,0)
 S PRSL=0
"RTN","PRSNRAS1",139,0)
 I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDR(EXTBEG,EXTEND)
"RTN","PRSNRAS1",140,0)
 Q
"RTN","PRSNRDN0")
0^44^B8776479^n/a
"RTN","PRSNRDN0",1,0)
PRSNRDN0 ;WOIFO/KJS - GROUP SUMMARY ACTIVITY DIRECT AND NON DIRECT I REPORT;8/4/2011
"RTN","PRSNRDN0",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNRDN0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","PRSNRDN0",4,0)
 ;
"RTN","PRSNRDN0",5,0)
 ;
"RTN","PRSNRDN0",6,0)
DAP ; Entry point for Data Approval Personnel
"RTN","PRSNRDN0",7,0)
 N GROUP
"RTN","PRSNRDN0",8,0)
 D ACCESS^PRSNUT02(.GROUP,"A",DT,1)
"RTN","PRSNRDN0",9,0)
 ; quit if any error during group selection
"RTN","PRSNRDN0",10,0)
 I $P($G(GROUP(0)),U,2)="E" D  Q
"RTN","PRSNRDN0",11,0)
 .W !,$P(GROUP(0),U,3)
"RTN","PRSNRDN0",12,0)
 D MAIN
"RTN","PRSNRDN0",13,0)
 Q
"RTN","PRSNRDN0",14,0)
 ;
"RTN","PRSNRDN0",15,0)
COORD ;Entry point for VANOD Coordinator
"RTN","PRSNRDN0",16,0)
 ; Coordinator has no access limits so let them pick any group
"RTN","PRSNRDN0",17,0)
 N GROUP
"RTN","PRSNRDN0",18,0)
 D PIKGROUP^PRSNUT04(.GROUP,"",1)
"RTN","PRSNRDN0",19,0)
 I $P($G(GROUP(0)),U,2)="E" D  Q
"RTN","PRSNRDN0",20,0)
 .W !,$P(GROUP(0),U,3)
"RTN","PRSNRDN0",21,0)
 D MAIN
"RTN","PRSNRDN0",22,0)
 ;
"RTN","PRSNRDN0",23,0)
 Q
"RTN","PRSNRDN0",24,0)
 ;
"RTN","PRSNRDN0",25,0)
MAIN ;
"RTN","PRSNRDN0",26,0)
 N RANGE,BEG,END,EXTBEG,EXTEND,STOP,TYPE,BEG,END
"RTN","PRSNRDN0",27,0)
 S STOP=0
"RTN","PRSNRDN0",28,0)
 D DATE
"RTN","PRSNRDN0",29,0)
 Q:STOP
"RTN","PRSNRDN0",30,0)
 D QUE
"RTN","PRSNRDN0",31,0)
 Q
"RTN","PRSNRDN0",32,0)
 ;
"RTN","PRSNRDN0",33,0)
REPORT ;for group of location or t&l
"RTN","PRSNRDN0",34,0)
 ;
"RTN","PRSNRDN0",35,0)
 N X,PRSIEN,PRSNGLB,PRSNG,GRP,SORT,PRSNGA,PRSNGB,SKILMIX,PICK,PG
"RTN","PRSNRDN0",36,0)
 U IO
"RTN","PRSNRDN0",37,0)
 S SORT=$P(GROUP(0),U,2),PG=0,TODAY=$E(DT,4,5)_"/"_$E(DT,6,7)_"/"_$E(DT,2,3)
"RTN","PRSNRDN0",38,0)
 D HDR^PRSNRDN1(EXTBEG,EXTEND)
"RTN","PRSNRDN0",39,0)
 S (PICK,STOP)=0
"RTN","PRSNRDN0",40,0)
 F  S PICK=$O(GROUP(PICK)) Q:PICK=""  D
"RTN","PRSNRDN0",41,0)
 .S PRSNG=GROUP(0)_"^"_PICK_"^"_GROUP(PICK)
"RTN","PRSNRDN0",42,0)
 .S PRSNGLB=$S($P(PRSNG,U,2)="N":$NA(^NURSF(211.8,"D",$P(PRSNG,U,7))),1:$NA(^PRSPC("ATL"_$P(PRSNG,U,3))))
"RTN","PRSNRDN0",43,0)
 .S GRP=$P(PRSNG,U,3)  ;External form of primary location
"RTN","PRSNRDN0",44,0)
 .S PRSNGA=""
"RTN","PRSNRDN0",45,0)
 .F  S PRSNGA=$O(@PRSNGLB@(PRSNGA)) QUIT:PRSNGA=""  D
"RTN","PRSNRDN0",46,0)
 ..S PRSNGB=0
"RTN","PRSNRDN0",47,0)
 ..F  S PRSNGB=$O(@PRSNGLB@(PRSNGA,PRSNGB)) QUIT:'PRSNGB  D
"RTN","PRSNRDN0",48,0)
 ...I $P(PRSNG,U,2)="N",+$P(PRSNG,U,4)'=+$$PRIMLOC^PRSNUT03(PRSNGB) Q
"RTN","PRSNRDN0",49,0)
 ...S PRSIEN=$S($P(PRSNG,U,2)="N":+$G(^VA(200,PRSNGB,450)),1:PRSNGB)
"RTN","PRSNRDN0",50,0)
 ...S X=$$ISNURSE^PRSNUT01(PRSIEN)
"RTN","PRSNRDN0",51,0)
 ...I +X D
"RTN","PRSNRDN0",52,0)
 ....D GATHER^PRSNRDN1(.SKILMIX,GRP,PRSIEN,BEG,END)
"RTN","PRSNRDN0",53,0)
 D PRTLP^PRSNRDN1(EXTBEG,EXTEND)
"RTN","PRSNRDN0",54,0)
 W !!,"End of Report"
"RTN","PRSNRDN0",55,0)
 D ^%ZISC
"RTN","PRSNRDN0",56,0)
 Q
"RTN","PRSNRDN0",57,0)
 ;
"RTN","PRSNRDN0",58,0)
DATE ; User is prompted for a date range 
"RTN","PRSNRDN0",59,0)
 ;
"RTN","PRSNRDN0",60,0)
 S RANGE=$$POCRANGE^PRSNUT01()
"RTN","PRSNRDN0",61,0)
 ; QUIT HERE IF RANGE=0 
"RTN","PRSNRDN0",62,0)
 I +$G(RANGE)'>0 S STOP=1 Q
"RTN","PRSNRDN0",63,0)
 ;
"RTN","PRSNRDN0",64,0)
 S BEG=$P(RANGE,U)
"RTN","PRSNRDN0",65,0)
 S END=$P(RANGE,U,2)
"RTN","PRSNRDN0",66,0)
 S EXTBEG=$P(RANGE,U,3)
"RTN","PRSNRDN0",67,0)
 S EXTEND=$P(RANGE,U,4)
"RTN","PRSNRDN0",68,0)
 ;
"RTN","PRSNRDN0",69,0)
 Q
"RTN","PRSNRDN0",70,0)
 ;
"RTN","PRSNRDN0",71,0)
QUE ;call to generate and display report for individual activity
"RTN","PRSNRDN0",72,0)
 N %ZIS,POP,IOP
"RTN","PRSNRDN0",73,0)
 S %ZIS="MQ"
"RTN","PRSNRDN0",74,0)
 D ^%ZIS
"RTN","PRSNRDN0",75,0)
 Q:POP
"RTN","PRSNRDN0",76,0)
 I $D(IO("Q")) D
"RTN","PRSNRDN0",77,0)
 . K IO("Q")
"RTN","PRSNRDN0",78,0)
 . N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC
"RTN","PRSNRDN0",79,0)
 . S ZTDESC="GROUP SUMMARY ACTIVITY DIRECT AND NON DIRECT"
"RTN","PRSNRDN0",80,0)
 . S ZTRTN="REPORT^PRSNRDN0"
"RTN","PRSNRDN0",81,0)
 . S ZTSAVE("GROUP")=""
"RTN","PRSNRDN0",82,0)
 . S ZTSAVE("GROUP(")=""
"RTN","PRSNRDN0",83,0)
 . S ZTSAVE("TYPE")=""
"RTN","PRSNRDN0",84,0)
 . S ZTSAVE("BEG")=""
"RTN","PRSNRDN0",85,0)
 . S ZTSAVE("END")=""
"RTN","PRSNRDN0",86,0)
 . S ZTSAVE("EXTBEG")=""
"RTN","PRSNRDN0",87,0)
 . S ZTSAVE("EXTEND")=""
"RTN","PRSNRDN0",88,0)
 . D ^%ZTLOAD
"RTN","PRSNRDN0",89,0)
 . I $D(ZTSK) S ZTREQ="@" W !,"Request "_ZTSK_" Queued."
"RTN","PRSNRDN0",90,0)
 E  D
"RTN","PRSNRDN0",91,0)
 . D REPORT
"RTN","PRSNRDN0",92,0)
 Q
"RTN","PRSNRDN1")
0^45^B13341348^n/a
"RTN","PRSNRDN1",1,0)
PRSNRDN1 ;WOIFO/KJS - GROUP SUMMARY ACTIVITY DIRECT AND NON DIRECT II REPORT ;080411
"RTN","PRSNRDN1",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNRDN1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","PRSNRDN1",4,0)
 ;
"RTN","PRSNRDN1",5,0)
 ;   
"RTN","PRSNRDN1",6,0)
 ; 
"RTN","PRSNRDN1",7,0)
GATHER(SKILMIX,GRP,PRSIEN,BEG,END) ;Entry point to gather POC data from 451
"RTN","PRSNRDN1",8,0)
 ;INPUT:
"RTN","PRSNRDN1",9,0)
 ;   SKILMIX: ARRAY containing totals for various types of work
"RTN","PRSNRDN1",10,0)
 ;            subscripted by nurse role (or skill mix)
"RTN","PRSNRDN1",11,0)
 ;   GRP: Nurse default location or T&L Unit
"RTN","PRSNRDN1",12,0)
 ;   PRSIEN: Nurse ien 450
"RTN","PRSNRDN1",13,0)
 ;   BEG,END: FileMan begin and end dates for report
"RTN","PRSNRDN1",14,0)
 ;
"RTN","PRSNRDN1",15,0)
 N INDEX,CNT,DAYNODE,FMDT,PPIEN,PRSNDAY
"RTN","PRSNRDN1",16,0)
 S FMDT=BEG-.1
"RTN","PRSNRDN1",17,0)
 S (INDEX,CNT)=0
"RTN","PRSNRDN1",18,0)
 F  S FMDT=$O(^PRST(458,"AD",FMDT)) Q:FMDT>END!(FMDT'>0)!STOP  D
"RTN","PRSNRDN1",19,0)
 .S DAYNODE=$G(^PRST(458,"AD",FMDT))
"RTN","PRSNRDN1",20,0)
 .S PPIEN=+DAYNODE
"RTN","PRSNRDN1",21,0)
 .S PRSNDAY=$P(DAYNODE,U,2)
"RTN","PRSNRDN1",22,0)
 .K POCD   ;array to hold POC data
"RTN","PRSNRDN1",23,0)
 .D L1^PRSNRUT1(.POCD,PPIEN,PRSIEN,PRSNDAY)
"RTN","PRSNRDN1",24,0)
 .Q:$G(POCD(0))=0
"RTN","PRSNRDN1",25,0)
 .D DATA(.SKILMIX,GRP)
"RTN","PRSNRDN1",26,0)
 ;
"RTN","PRSNRDN1",27,0)
 Q
"RTN","PRSNRDN1",28,0)
 ;
"RTN","PRSNRDN1",29,0)
 ;
"RTN","PRSNRDN1",30,0)
DATA(SKILMIX,GRP) ;Extract data from POCD array
"RTN","PRSNRDN1",31,0)
 ;
"RTN","PRSNRDN1",32,0)
 N PRSL,ST,SP,MEAL,HOURS,TT,TIEN,POC,POC1,WIEN,TW,TWD,TYPETM,TYPEWK
"RTN","PRSNRDN1",33,0)
 ;
"RTN","PRSNRDN1",34,0)
 S PRSL=0
"RTN","PRSNRDN1",35,0)
 F  S PRSL=$O(POCD(PRSL)) Q:PRSL'>0  D
"RTN","PRSNRDN1",36,0)
 .;
"RTN","PRSNRDN1",37,0)
 .;Start and stop time and mealtime
"RTN","PRSNRDN1",38,0)
 .S ST=$P(POCD(PRSL),U),SP=$P(POCD(PRSL),U,2),MEAL=$P(POCD(PRSL),U,3)
"RTN","PRSNRDN1",39,0)
 .;
"RTN","PRSNRDN1",40,0)
 .;Get elapsed time
"RTN","PRSNRDN1",41,0)
 .S HOURS=$$AMT^PRSPSAPU(ST,SP,MEAL)
"RTN","PRSNRDN1",42,0)
 .;
"RTN","PRSNRDN1",43,0)
 .;Type of Time code IEN
"RTN","PRSNRDN1",44,0)
 .S (TIEN,TYPETM)=""
"RTN","PRSNRDN1",45,0)
 .S TT=$P(POCD(PRSL),U,4)
"RTN","PRSNRDN1",46,0)
 .I TT'="" D
"RTN","PRSNRDN1",47,0)
 ..;
"RTN","PRSNRDN1",48,0)
 ..;Type of Time code
"RTN","PRSNRDN1",49,0)
 ..S TIEN=$O(^PRST(457.3,"B",TT,TIEN))
"RTN","PRSNRDN1",50,0)
 ..Q:TIEN=""
"RTN","PRSNRDN1",51,0)
 ..;
"RTN","PRSNRDN1",52,0)
 ..;Description for Type of Time code
"RTN","PRSNRDN1",53,0)
 ..S TYPETM=$P(^PRST(457.3,TIEN,0),U,2)  ;eg, Direct Care, AL
"RTN","PRSNRDN1",54,0)
 ..;
"RTN","PRSNRDN1",55,0)
 .S POC1=""
"RTN","PRSNRDN1",56,0)
 .S POC=$P(POCD(PRSL),U,5)
"RTN","PRSNRDN1",57,0)
 .I POC'="" D
"RTN","PRSNRDN1",58,0)
 ..S POC1=$P($$ISACTIVE^PRSNUT01(DT,POC),U,2) ;Location
"RTN","PRSNRDN1",59,0)
 .;
"RTN","PRSNRDN1",60,0)
 .;Type of Work Code IEN
"RTN","PRSNRDN1",61,0)
 .S (TW,TWD)=""
"RTN","PRSNRDN1",62,0)
 .S WIEN=$P(POCD(PRSL),U,6)
"RTN","PRSNRDN1",63,0)
 .I WIEN'="" D
"RTN","PRSNRDN1",64,0)
 ..;
"RTN","PRSNRDN1",65,0)
 ..;Type of Work Code
"RTN","PRSNRDN1",66,0)
 ..S TW=$P(^PRSN(451.5,WIEN,0),U)
"RTN","PRSNRDN1",67,0)
 ..;
"RTN","PRSNRDN1",68,0)
 ..;Description for Type of Work code
"RTN","PRSNRDN1",69,0)
 ..S TWD=$P(^PRSN(451.5,WIEN,0),U,2)
"RTN","PRSNRDN1",70,0)
 .
"RTN","PRSNRDN1",71,0)
 .;  save skill mix, hours and type of work into SKILMIX array
"RTN","PRSNRDN1",72,0)
 .Q:(TYPETM="")!(POC1="")
"RTN","PRSNRDN1",73,0)
 .;
"RTN","PRSNRDN1",74,0)
 .S TYPEWK=$S(TW="DC":"Direct",1:"Non Direct")
"RTN","PRSNRDN1",75,0)
 .S SKILMIX(GRP,TYPETM,TYPEWK)=$G(SKILMIX(GRP,TYPETM,TYPEWK))+HOURS
"RTN","PRSNRDN1",76,0)
 Q
"RTN","PRSNRDN1",77,0)
HDR(EXTBEG,EXTEND) ;Display header for report of Individual Nurse Activity
"RTN","PRSNRDN1",78,0)
 ;
"RTN","PRSNRDN1",79,0)
 W @IOF
"RTN","PRSNRDN1",80,0)
 S PG=PG+1,PRTGP=1
"RTN","PRSNRDN1",81,0)
 W ?17,"GROUP SUMMARY ACTIVITY DIRECT AND NON DIRECT REPORT"
"RTN","PRSNRDN1",82,0)
 W !,?15,EXTBEG_" - "_EXTEND,?45,"Run Date: ",TODAY,?70,"Page: ",$J(PG,3)
"RTN","PRSNRDN1",83,0)
 W !         ;blank line
"RTN","PRSNRDN1",84,0)
 W !,"Location",?22,"Type of Time",?44,"Type of Work",?75,"Hours"
"RTN","PRSNRDN1",85,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","PRSNRDN1",86,0)
 ;
"RTN","PRSNRDN1",87,0)
 Q
"RTN","PRSNRDN1",88,0)
PRTLP(EXTBEG,EXTEND) ;Order through SKILMIX array, total data & display
"RTN","PRSNRDN1",89,0)
 N RNDC,LNDC,UNDC,GP,TNDC,TYPEWK,TYPETM
"RTN","PRSNRDN1",90,0)
 S GP=0
"RTN","PRSNRDN1",91,0)
 F  S GP=$O(SKILMIX(GP)) Q:GP=""!STOP  D
"RTN","PRSNRDN1",92,0)
 .S TYPETM="",PRTGP=1
"RTN","PRSNRDN1",93,0)
 .F  S TYPETM=$O(SKILMIX(GP,TYPETM)) Q:TYPETM=""!STOP  D
"RTN","PRSNRDN1",94,0)
 ..S (RNDC,LNDC,UNDC,TNDC)=0
"RTN","PRSNRDN1",95,0)
 ..S TYPEWK=""
"RTN","PRSNRDN1",96,0)
 ..F  S TYPEWK=$O(SKILMIX(GP,TYPETM,TYPEWK)) Q:TYPEWK=""!STOP  D
"RTN","PRSNRDN1",97,0)
 ...S TOTHRS=$P(SKILMIX(GP,TYPETM,TYPEWK),U)
"RTN","PRSNRDN1",98,0)
 ...D PPP(.STOP,EXTBEG,EXTEND)
"RTN","PRSNRDN1",99,0)
 Q
"RTN","PRSNRDN1",100,0)
PPP(STOP,EXTBEG,EXTEND) ;
"RTN","PRSNRDN1",101,0)
 I PRTGP W !,GP S PRTGP=0
"RTN","PRSNRDN1",102,0)
 W ?22,TYPETM,?44,TYPEWK,?72,$J(TOTHRS,8,2),!
"RTN","PRSNRDN1",103,0)
 I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDR(EXTBEG,EXTEND)
"RTN","PRSNRDN1",104,0)
 Q
"RTN","PRSNREV0")
0^20^B7575459^n/a
"RTN","PRSNREV0",1,0)
PRSNREV0 ;WOIFO/DAM - Nursing Education Validation/Position and Pay Reports ;9/10/2009
"RTN","PRSNREV0",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNREV0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","PRSNREV0",4,0)
 QUIT
"RTN","PRSNREV0",5,0)
 ;
"RTN","PRSNREV0",6,0)
COORDNPP ;entry point of nurse position and pay information
"RTN","PRSNREV0",7,0)
 S PRSNOPT=2
"RTN","PRSNREV0",8,0)
 D MAIN
"RTN","PRSNREV0",9,0)
 Q
"RTN","PRSNREV0",10,0)
COORD ;Entry point for VANOD Coordinator
"RTN","PRSNREV0",11,0)
 S PRSNOPT=1
"RTN","PRSNREV0",12,0)
 D MAIN
"RTN","PRSNREV0",13,0)
 Q
"RTN","PRSNREV0",14,0)
 ;
"RTN","PRSNREV0",15,0)
MAIN ;call to generate and display report for individual activity
"RTN","PRSNREV0",16,0)
 ;
"RTN","PRSNREV0",17,0)
 ; Coordinator has no access limits so let them pick any group
"RTN","PRSNREV0",18,0)
 N GROUP
"RTN","PRSNREV0",19,0)
 D PIKGROUP^PRSNUT04(.GROUP,"",1)
"RTN","PRSNREV0",20,0)
 I $P($G(GROUP(0)),U,2)="E" D  Q
"RTN","PRSNREV0",21,0)
 .W !,$P(GROUP(0),U,3)
"RTN","PRSNREV0",22,0)
 N %ZIS,POP,IOP
"RTN","PRSNREV0",23,0)
 S %ZIS="MQ"
"RTN","PRSNREV0",24,0)
 D ^%ZIS
"RTN","PRSNREV0",25,0)
 Q:POP
"RTN","PRSNREV0",26,0)
 I $D(IO("Q")) D
"RTN","PRSNREV0",27,0)
 . K IO("Q")
"RTN","PRSNREV0",28,0)
 . N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC
"RTN","PRSNREV0",29,0)
 . S ZTDESC=$P("Nursing Education Validation Report^Nurse Position and Pay Information Report",PRSNOPT)
"RTN","PRSNREV0",30,0)
 . S ZTRTN="REPORT^PRSNREV0"
"RTN","PRSNREV0",31,0)
 . S ZTSAVE("GROUP(")=""
"RTN","PRSNREV0",32,0)
 . S ZTSAVE("TYPE")=""
"RTN","PRSNREV0",33,0)
 . S ZTSAVE("PRSNOPT")=""
"RTN","PRSNREV0",34,0)
 . D ^%ZTLOAD
"RTN","PRSNREV0",35,0)
 . I $D(ZTSK) S ZTREQ="@" W !,"Request "_ZTSK_" Queued."
"RTN","PRSNREV0",36,0)
 E  D
"RTN","PRSNREV0",37,0)
 . D REPORT
"RTN","PRSNREV0",38,0)
 ;
"RTN","PRSNREV0",39,0)
 K PRSNOPT
"RTN","PRSNREV0",40,0)
 Q
"RTN","PRSNREV0",41,0)
 ;
"RTN","PRSNREV0",42,0)
REPORT ;for group of location or t&l
"RTN","PRSNREV0",43,0)
 ;
"RTN","PRSNREV0",44,0)
 N PRSIEN,PRSNGLB,PRSNG,GHD,PICK,SORT,STOP,I,PRSNGA,PRSNGB,TAB,PG
"RTN","PRSNREV0",45,0)
 U IO
"RTN","PRSNREV0",46,0)
 S SORT=$P(GROUP(0),U,2),PG=0
"RTN","PRSNREV0",47,0)
 D HDR^PRSNREV1(PRSNOPT)
"RTN","PRSNREV0",48,0)
 S (PICK,STOP)=0
"RTN","PRSNREV0",49,0)
 F  S PICK=$O(GROUP(PICK)) Q:PICK=""!STOP  D
"RTN","PRSNREV0",50,0)
 . S PRSNG=GROUP(0)_"^"_PICK_"^"_GROUP(PICK)
"RTN","PRSNREV0",51,0)
 . S PRSNGLB=$S($P(PRSNG,U,2)="N":$NA(^NURSF(211.8,"D",$P(PRSNG,U,7))),1:$NA(^PRSPC("ATL"_$P(PRSNG,U,3))))
"RTN","PRSNREV0",52,0)
 . ;
"RTN","PRSNREV0",53,0)
 . ; display and underline group sub header
"RTN","PRSNREV0",54,0)
 . ;
"RTN","PRSNREV0",55,0)
 . S GHD=$S($P(PRSNG,U,2)="N":"LOCATION",1:"T&L UNIT")_":  "_$P(PRSNG,U,3)
"RTN","PRSNREV0",56,0)
 . S TAB=IOM-$L(GHD)/2-5
"RTN","PRSNREV0",57,0)
 . W !!,?TAB,GHD,!
"RTN","PRSNREV0",58,0)
 . W ?TAB F I=1:1:$L(GHD) W "-"
"RTN","PRSNREV0",59,0)
 . ;
"RTN","PRSNREV0",60,0)
 . S PRSNGA=""
"RTN","PRSNREV0",61,0)
 . F  S PRSNGA=$O(@PRSNGLB@(PRSNGA)) QUIT:PRSNGA=""!STOP  D
"RTN","PRSNREV0",62,0)
 .. S PRSNGB=0
"RTN","PRSNREV0",63,0)
 .. F  S PRSNGB=$O(@PRSNGLB@(PRSNGA,PRSNGB)) QUIT:'PRSNGB!STOP  D
"RTN","PRSNREV0",64,0)
 ... I $P(PRSNG,U,2)="N",+$P(PRSNG,U,4)'=+$$PRIMLOC^PRSNUT03(PRSNGB) Q
"RTN","PRSNREV0",65,0)
 ... S PRSIEN=$S($P(PRSNG,U,2)="N":+$G(^VA(200,PRSNGB,450)),1:PRSNGB)
"RTN","PRSNREV0",66,0)
 ... S NURSE=$$ISNURSE^PRSNUT01(PRSIEN)
"RTN","PRSNREV0",67,0)
 ... Q:'+NURSE
"RTN","PRSNREV0",68,0)
 ... D DSPLY^PRSNREV1(PRSIEN,PRSNOPT,NURSE,.STOP)
"RTN","PRSNREV0",69,0)
 W !!,"End of Report"
"RTN","PRSNREV0",70,0)
 D ^%ZISC
"RTN","PRSNREV0",71,0)
 Q
"RTN","PRSNREV0",72,0)
 ;
"RTN","PRSNREV1")
0^21^B10461851^n/a
"RTN","PRSNREV1",1,0)
PRSNREV1 ;WOIFO/DAM - Nursing Education Validation Report II;060409
"RTN","PRSNREV1",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNREV1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","PRSNREV1",4,0)
 Q
"RTN","PRSNREV1",5,0)
 ;
"RTN","PRSNREV1",6,0)
DSPLY(PRSIEN,PRSNOPT,NURSE,STOP) ; Entry point to gather POC Nurse 
"RTN","PRSNREV1",7,0)
 ;                         Education Data from file 450
"RTN","PRSNREV1",8,0)
 ;INPUT:
"RTN","PRSNREV1",9,0)
 ;   PRSIEN: Nurse ien 450
"RTN","PRSNREV1",10,0)
 ;   BEG,END: FileMan begin and end dates for report
"RTN","PRSNREV1",11,0)
 ;
"RTN","PRSNREV1",12,0)
 D INFO^PRSNRAS1
"RTN","PRSNREV1",13,0)
 N INDEX,CNT
"RTN","PRSNREV1",14,0)
 S (INDEX,CNT)=0
"RTN","PRSNREV1",15,0)
 D DATA(PRSIEN,PRSNOPT,NURSE,.STOP)
"RTN","PRSNREV1",16,0)
 ;
"RTN","PRSNREV1",17,0)
 K PRSNAME,PRSNSSN,PRSNTL,SKILMIX,ROLE,PRSNLNG,PRSNTWD,PRSNPOC1,PRSDY
"RTN","PRSNREV1",18,0)
 K PPIEN,PRSL,PRSNDAY,STARTDT,STDE,BOC,OCC,ASN,EDU,YEAR
"RTN","PRSNREV1",19,0)
 Q
"RTN","PRSNREV1",20,0)
 ;
"RTN","PRSNREV1",21,0)
 ;
"RTN","PRSNREV1",22,0)
HDR(PRSNOPT) ;Display header
"RTN","PRSNREV1",23,0)
 ;
"RTN","PRSNREV1",24,0)
 W @IOF
"RTN","PRSNREV1",25,0)
 S PG=PG+1
"RTN","PRSNREV1",26,0)
 W $P("Nursing Education Validation Report^Nurse Position and Pay Information",U,PRSNOPT)," Report"
"RTN","PRSNREV1",27,0)
 W "   Run Date: ",$E(DT,4,5),"/",$E(DT,6,7),"/",$E(DT,2,3),"  Page: ",$J(PG,3)
"RTN","PRSNREV1",28,0)
 ;nurse education validation
"RTN","PRSNREV1",29,0)
 I PRSNOPT=1 D
"RTN","PRSNREV1",30,0)
 . W !!,"Nurse Name",?21,"BOC/",?27,"Assignment Code",?47,"PAID Education Level"
"RTN","PRSNREV1",31,0)
 . W !,"Last 4 SSN",?21,"OCC",?27,"Nurse Role",?47,"Year Degree Earned"
"RTN","PRSNREV1",32,0)
 . QUIT
"RTN","PRSNREV1",33,0)
 ;nurse position and pay
"RTN","PRSNREV1",34,0)
 E  D
"RTN","PRSNREV1",35,0)
 . W !!,"Nurse Name",?21,"BOC/",?27,"Assignment Code",?47,"Grade/Step",?60,"Salary"
"RTN","PRSNREV1",36,0)
 . W !,"Last 4 SSN",?13,"CC",?21,"OCC",?27,"Nurse Role",?47,"Yr. of Ser.",?60,"Salary Start Date"
"RTN","PRSNREV1",37,0)
 . QUIT
"RTN","PRSNREV1",38,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","PRSNREV1",39,0)
 ;
"RTN","PRSNREV1",40,0)
 QUIT
"RTN","PRSNREV1",41,0)
 ;
"RTN","PRSNREV1",42,0)
DATA(PRSIEN,PRSNOPT,NURSE,STOP) ;Extract display data from POCD array and get external date
"RTN","PRSNREV1",43,0)
 ;
"RTN","PRSNREV1",44,0)
 N JOB,ED,A,B,PRSNA,ROLE
"RTN","PRSNREV1",45,0)
 S (BOC,OCC,ASN,EDU,YEAR)=0
"RTN","PRSNREV1",46,0)
 ;
"RTN","PRSNREV1",47,0)
 S ROLE=$P($G(NURSE),U,2)
"RTN","PRSNREV1",48,0)
 S JOB=$$GETCODES^PRSNUT01(PRSIEN)    ;Job codes
"RTN","PRSNREV1",49,0)
 S BOC=$P(JOB,U)
"RTN","PRSNREV1",50,0)
 S OCC=$P(JOB,U,2)
"RTN","PRSNREV1",51,0)
 S ASN=$P(JOB,U,7)  ;External value of job assignment code
"RTN","PRSNREV1",52,0)
 ;nurse education validation
"RTN","PRSNREV1",53,0)
 I PRSNOPT=1 D
"RTN","PRSNREV1",54,0)
 . S ED=$$GETDEG^PRSNUT01(PRSIEN)   ;Education level & year degree earned
"RTN","PRSNREV1",55,0)
 . S EDU=$P(ED,U)
"RTN","PRSNREV1",56,0)
 . S YEAR=$P(ED,U,2)
"RTN","PRSNREV1",57,0)
 . QUIT
"RTN","PRSNREV1",58,0)
 ;nurse position and pay
"RTN","PRSNREV1",59,0)
 I PRSNOPT=2 D
"RTN","PRSNREV1",60,0)
 . S PRSNA=^PRSPC(PRSIEN,0),YEAR=$P(PRSNA,U,31) S:YEAR YEAR=$E(DT,1,3)-$E(YEAR,1,3)
"RTN","PRSNREV1",61,0)
 . S A=$P(PRSNA,U,29),B=$L(A),$P(PRSNA,U,29)=$S(A<1000:A,1:$E(A,1,B-6)_","_$E(A,B-5,B))
"RTN","PRSNREV1",62,0)
 . S A=$P(PRSNA,U,28),$P(PRSNA,U,28)=$E(A,4,5)_"/"_$E(A,6,7)_"/"_$E(A,2,3)
"RTN","PRSNREV1",63,0)
 . QUIT
"RTN","PRSNREV1",64,0)
 D PRT(PRSNOPT)
"RTN","PRSNREV1",65,0)
 ;
"RTN","PRSNREV1",66,0)
 QUIT
"RTN","PRSNREV1",67,0)
 ;
"RTN","PRSNREV1",68,0)
PRT(PRSNOPT) ;
"RTN","PRSNREV1",69,0)
 ;print education vaidation report
"RTN","PRSNREV1",70,0)
 I PRSNOPT=1 D
"RTN","PRSNREV1",71,0)
 . W !!,$E(PRSNAME,1,19),?21,BOC,"/",?27,$E(ASN,1,19),?47,$E(EDU,1,30)
"RTN","PRSNREV1",72,0)
 . W !,$E(PRSNSSN,6,9),?21,OCC,?27,$E(ROLE,1,19),?47,YEAR
"RTN","PRSNREV1",73,0)
 ;print position and pay report
"RTN","PRSNREV1",74,0)
 E  D
"RTN","PRSNREV1",75,0)
 .  W !!,$E(PRSNAME,1,19),?21,BOC,"/",?27,$E(ASN,1,19),?47,$P(PRSNA,U,14),"-",$P(PRSNA,U,39),?60,"$",$P(PRSNA,U,29)
"RTN","PRSNREV1",76,0)
 .  W !,$E(PRSNSSN,6,9),?13,$P(JOB,U,4),?21,OCC,?27,$E(ROLE,1,19),?49,YEAR,?60,$P(PRSNA,U,28)
"RTN","PRSNREV1",77,0)
 ;
"RTN","PRSNREV1",78,0)
 I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDR(PRSNOPT)
"RTN","PRSNREV1",79,0)
 Q
"RTN","PRSNRGD0")
0^46^B9210603^n/a
"RTN","PRSNRGD0",1,0)
PRSNRGD0 ;WOIFO/KJS - Nursing LOCATION DETAIL Report ;8/2/2011
"RTN","PRSNRGD0",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNRGD0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","PRSNRGD0",4,0)
 QUIT
"RTN","PRSNRGD0",5,0)
 ;
"RTN","PRSNRGD0",6,0)
COORD ;Entry point for VANOD Coordinator
"RTN","PRSNRGD0",7,0)
 ; Coordinator has no access limits so let them pick any group
"RTN","PRSNRGD0",8,0)
 N GROUP
"RTN","PRSNRGD0",9,0)
 D PIKGROUP^PRSNUT04(.GROUP,"",1)
"RTN","PRSNRGD0",10,0)
 I $P($G(GROUP(0)),U,2)="E" D  Q
"RTN","PRSNRGD0",11,0)
 .W !,$P(GROUP(0),U,3)
"RTN","PRSNRGD0",12,0)
 D MAIN
"RTN","PRSNRGD0",13,0)
 Q
"RTN","PRSNRGD0",14,0)
 ;
"RTN","PRSNRGD0",15,0)
MAIN ;call to generate and display report for individual activity
"RTN","PRSNRGD0",16,0)
 ;
"RTN","PRSNRGD0",17,0)
 N %ZIS,POP,IOP
"RTN","PRSNRGD0",18,0)
 S %ZIS="MQ"
"RTN","PRSNRGD0",19,0)
 D ^%ZIS
"RTN","PRSNRGD0",20,0)
 Q:POP
"RTN","PRSNRGD0",21,0)
 I $D(IO("Q")) D
"RTN","PRSNRGD0",22,0)
 . K IO("Q")
"RTN","PRSNRGD0",23,0)
 . N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC
"RTN","PRSNRGD0",24,0)
 . S ZTDESC="Nursing Location Detail Report"
"RTN","PRSNRGD0",25,0)
 . S ZTRTN="REPORT^PRSNRGD0"
"RTN","PRSNRGD0",26,0)
 . S ZTSAVE("GROUP(")=""
"RTN","PRSNRGD0",27,0)
 . S ZTSAVE("TYPE")=""
"RTN","PRSNRGD0",28,0)
 . D ^%ZTLOAD
"RTN","PRSNRGD0",29,0)
 . I $D(ZTSK) S ZTREQ="@" W !,"Request "_ZTSK_" Queued."
"RTN","PRSNRGD0",30,0)
 E  D REPORT
"RTN","PRSNRGD0",31,0)
 ;
"RTN","PRSNRGD0",32,0)
 Q
"RTN","PRSNRGD0",33,0)
 ;
"RTN","PRSNRGD0",34,0)
REPORT ;for group of location or t&l
"RTN","PRSNRGD0",35,0)
 ;
"RTN","PRSNRGD0",36,0)
 N PRSIEN,PRSNGLB,PRSNG,GHD,PICK,SORT,STOP,I,PRSNGA,PRSNGB,TAB,PG,FTEE,TOTNUR,TOTFTEE
"RTN","PRSNRGD0",37,0)
 U IO
"RTN","PRSNRGD0",38,0)
 S SORT=$P(GROUP(0),U,2),PG=0,(FTEE,TOTFTEE,TOTNUR)=0
"RTN","PRSNRGD0",39,0)
 K ^TMP($J)
"RTN","PRSNRGD0",40,0)
 D HDR^PRSNRGD1
"RTN","PRSNRGD0",41,0)
 S (PICK,STOP)=0
"RTN","PRSNRGD0",42,0)
 F  S PICK=$O(GROUP(PICK)) Q:PICK=""!STOP  D
"RTN","PRSNRGD0",43,0)
 .S PRSNG=GROUP(0)_"^"_PICK_"^"_GROUP(PICK)
"RTN","PRSNRGD0",44,0)
 .S PRSNGLB=$S($P(PRSNG,U,2)="N":$NA(^NURSF(211.8,"D",$P(PRSNG,U,7))),1:$NA(^PRSPC("ATL"_$P(PRSNG,U,3))))
"RTN","PRSNRGD0",45,0)
 .;
"RTN","PRSNRGD0",46,0)
 .;
"RTN","PRSNRGD0",47,0)
 .K ^TMP($J)
"RTN","PRSNRGD0",48,0)
 .S PRSNGA=""
"RTN","PRSNRGD0",49,0)
 .F  S PRSNGA=$O(@PRSNGLB@(PRSNGA)) QUIT:PRSNGA=""!STOP  D
"RTN","PRSNRGD0",50,0)
 ..S PRSNGB=0
"RTN","PRSNRGD0",51,0)
 ..F  S PRSNGB=$O(@PRSNGLB@(PRSNGA,PRSNGB)) QUIT:'PRSNGB!STOP  D
"RTN","PRSNRGD0",52,0)
 ...I $P(PRSNG,U,2)="N",+$P(PRSNG,U,4)'=+$$PRIMLOC^PRSNUT03(PRSNGB) Q
"RTN","PRSNRGD0",53,0)
 ...S PRSIEN=$S($P(PRSNG,U,2)="N":+$G(^VA(200,PRSNGB,450)),1:PRSNGB)
"RTN","PRSNRGD0",54,0)
 ...S NURSE=$$ISNURSE^PRSNUT01(PRSIEN)
"RTN","PRSNRGD0",55,0)
 ...Q:'+NURSE
"RTN","PRSNRGD0",56,0)
 ...S JOB=$$GETCODES^PRSNUT01(PRSIEN)    ;Job codes
"RTN","PRSNRGD0",57,0)
 ...S BOC=$P(JOB,U)
"RTN","PRSNRGD0",58,0)
 ...S OCC=$P(JOB,U,2)
"RTN","PRSNRGD0",59,0)
 ...D INFO^PRSNRAS1
"RTN","PRSNRGD0",60,0)
 ...S ^TMP($J,OCC,PRSNAME,PRSIEN)=NURSE
"RTN","PRSNRGD0",61,0)
 .; display and underline group sub header
"RTN","PRSNRGD0",62,0)
 .;
"RTN","PRSNRGD0",63,0)
 .Q:STOP
"RTN","PRSNRGD0",64,0)
 .S GHD=$S($P(PRSNG,U,2)="N":"LOCATION",1:"T&L UNIT")_":  "_$P(PRSNG,U,3)
"RTN","PRSNRGD0",65,0)
 .S TAB=IOM-$L(GHD)/2-5
"RTN","PRSNRGD0",66,0)
 .W !!,?TAB,GHD,!
"RTN","PRSNRGD0",67,0)
 .W ?TAB F I=1:1:$L(GHD) W "-"
"RTN","PRSNRGD0",68,0)
 .S S1=""
"RTN","PRSNRGD0",69,0)
 .F  S S1=$O(^TMP($J,S1)) Q:S1=""!STOP  D
"RTN","PRSNRGD0",70,0)
 ..S S2=""
"RTN","PRSNRGD0",71,0)
 ..F  S S2=$O(^TMP($J,S1,S2)) Q:S2=""!STOP  D
"RTN","PRSNRGD0",72,0)
 ...S PRSIEN=""
"RTN","PRSNRGD0",73,0)
 ...F  S PRSIEN=$O(^TMP($J,S1,S2,PRSIEN)) Q:PRSIEN=""!STOP  D
"RTN","PRSNRGD0",74,0)
 ....S NURSE=^TMP($J,S1,S2,PRSIEN)
"RTN","PRSNRGD0",75,0)
 ....D DSPLY^PRSNRGD1(PRSIEN,NURSE,.STOP)
"RTN","PRSNRGD0",76,0)
 W !!,?40,"Total Nurses: ",$J(TOTNUR,4),?60,"Total FTEE: ",?72,$J(TOTFTEE,8,2)
"RTN","PRSNRGD0",77,0)
 W !!,"End of Report"
"RTN","PRSNRGD0",78,0)
 D ^%ZISC
"RTN","PRSNRGD0",79,0)
 K ^TMP($J)
"RTN","PRSNRGD0",80,0)
 Q
"RTN","PRSNRGD0",81,0)
 ;
"RTN","PRSNRGD1")
0^47^B5460196^n/a
"RTN","PRSNRGD1",1,0)
PRSNRGD1 ;WOIFO/KJS - Nursing LOCATION DETAIL Report II;08022011
"RTN","PRSNRGD1",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNRGD1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","PRSNRGD1",4,0)
 Q
"RTN","PRSNRGD1",5,0)
 ;
"RTN","PRSNRGD1",6,0)
DSPLY(PRSIEN,NURSE,STOP) ; Entry point to gather POC Nurse 
"RTN","PRSNRGD1",7,0)
 ;                         Education Data from file 450
"RTN","PRSNRGD1",8,0)
 ;INPUT:
"RTN","PRSNRGD1",9,0)
 ;   PRSIEN: Nurse ien 450
"RTN","PRSNRGD1",10,0)
 ;   BEG,END: FileMan begin and end dates for report
"RTN","PRSNRGD1",11,0)
 ;
"RTN","PRSNRGD1",12,0)
 D INFO^PRSNRAS1
"RTN","PRSNRGD1",13,0)
 N INDEX,CNT
"RTN","PRSNRGD1",14,0)
 S (INDEX,CNT)=0
"RTN","PRSNRGD1",15,0)
 D DATA(PRSIEN,NURSE,.STOP)
"RTN","PRSNRGD1",16,0)
 ;
"RTN","PRSNRGD1",17,0)
 K PRSNAME,PRSNSSN,PRSNTL,SKILMIX,ROLE,PRSNLNG,PRSNTWD,PRSNPOC1,PRSDY
"RTN","PRSNRGD1",18,0)
 K PPIEN,PRSL,PRSNDAY,STARTDT,STDE,BOC,OCC,ASN,EDU,YEAR
"RTN","PRSNRGD1",19,0)
 Q
"RTN","PRSNRGD1",20,0)
 ;
"RTN","PRSNRGD1",21,0)
 ;
"RTN","PRSNRGD1",22,0)
HDR ;Display header
"RTN","PRSNRGD1",23,0)
 ;
"RTN","PRSNRGD1",24,0)
 W @IOF
"RTN","PRSNRGD1",25,0)
 S PG=PG+1
"RTN","PRSNRGD1",26,0)
 W "Nursing Location Detail Report"
"RTN","PRSNRGD1",27,0)
 W ?45,"Run Date: ",$E(DT,4,5),"/",$E(DT,6,7),"/",$E(DT,2,3),"  Page: ",$J(PG,3)
"RTN","PRSNRGD1",28,0)
 W !!,"Nurse Name",?21,"SSN",?27,"Nurse Role",?48,"BOC",?52,"OCC",?58,"CC",?64,"Assign",?75,"Nurse"
"RTN","PRSNRGD1",29,0)
 W !,?64,"Code",?76,"FTEE"
"RTN","PRSNRGD1",30,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","PRSNRGD1",31,0)
 ;
"RTN","PRSNRGD1",32,0)
 QUIT
"RTN","PRSNRGD1",33,0)
 ;
"RTN","PRSNRGD1",34,0)
DATA(PRSIEN,NURSE,STOP) ;Extract display data from POCD array and get external date
"RTN","PRSNRGD1",35,0)
 ;
"RTN","PRSNRGD1",36,0)
 N JOB,ED,A,B,PRSNA,ROLE
"RTN","PRSNRGD1",37,0)
 S (BOC,OCC,ASN,EDU,YEAR)=0
"RTN","PRSNRGD1",38,0)
 ;
"RTN","PRSNRGD1",39,0)
 S ROLE=$P($G(NURSE),U,2)
"RTN","PRSNRGD1",40,0)
 S JOB=$$GETCODES^PRSNUT01(PRSIEN)    ;Job codes
"RTN","PRSNRGD1",41,0)
 S BOC=$P(JOB,U)
"RTN","PRSNRGD1",42,0)
 S OCC=$P(JOB,U,2)
"RTN","PRSNRGD1",43,0)
 S ASN=$P(JOB,U,3)
"RTN","PRSNRGD1",44,0)
 S CC=$P(JOB,U,4)
"RTN","PRSNRGD1",45,0)
 S PRSNA=^PRSPC(PRSIEN,0),YEAR=$P(PRSNA,U,31) S:YEAR YEAR=$E(DT,1,3)-$E(YEAR,1,3)
"RTN","PRSNRGD1",46,0)
 S A=$P(PRSNA,U,29),B=$L(A),$P(PRSNA,U,29)=$S(A<1000:A,1:$E(A,1,B-6)_","_$E(A,B-5,B))
"RTN","PRSNRGD1",47,0)
 S A=$P(PRSNA,U,28),$P(PRSNA,U,28)=$E(A,4,5)_"/"_$E(A,6,7)_"/"_$E(A,2,3)
"RTN","PRSNRGD1",48,0)
 S NORHRS=$P(PRSNA,U,16)
"RTN","PRSNRGD1",49,0)
 S FTEE=NORHRS/80,TOTFTEE=TOTFTEE+FTEE,TOTNUR=TOTNUR+1
"RTN","PRSNRGD1",50,0)
 D PRT
"RTN","PRSNRGD1",51,0)
 ;
"RTN","PRSNRGD1",52,0)
 QUIT
"RTN","PRSNRGD1",53,0)
 ;
"RTN","PRSNRGD1",54,0)
PRT ;
"RTN","PRSNRGD1",55,0)
 W !,$E(PRSNAME,1,19),?21,$E(PRSNSSN,6,9),?27,$E(ROLE,1,19),?48,BOC,?52,OCC,?58,CC,?64,ASN,?76,$J(FTEE,4,2)
"RTN","PRSNRGD1",56,0)
 ;
"RTN","PRSNRGD1",57,0)
 I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDR
"RTN","PRSNRGD1",58,0)
 Q
"RTN","PRSNRGS0")
0^48^B21962579^n/a
"RTN","PRSNRGS0",1,0)
PRSNRGS0 ;WOIFO/KJS - Nursing LOCATION Summary Report ;8/2/2011
"RTN","PRSNRGS0",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNRGS0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","PRSNRGS0",4,0)
 QUIT
"RTN","PRSNRGS0",5,0)
 ;
"RTN","PRSNRGS0",6,0)
COORD ;Entry point for VANOD Coordinator
"RTN","PRSNRGS0",7,0)
 ; Coordinator has no access limits so let them pick any group
"RTN","PRSNRGS0",8,0)
 N GROUP
"RTN","PRSNRGS0",9,0)
 D PIKGROUP^PRSNUT04(.GROUP,"N",1)
"RTN","PRSNRGS0",10,0)
 I $P($G(GROUP(0)),U,2)="E" D  Q
"RTN","PRSNRGS0",11,0)
 .W !,$P(GROUP(0),U,3)
"RTN","PRSNRGS0",12,0)
 D MAIN
"RTN","PRSNRGS0",13,0)
 Q
"RTN","PRSNRGS0",14,0)
 ;
"RTN","PRSNRGS0",15,0)
MAIN ;call to generate and display report for individual activity
"RTN","PRSNRGS0",16,0)
 ;
"RTN","PRSNRGS0",17,0)
 S STOP=0
"RTN","PRSNRGS0",18,0)
 D DATE
"RTN","PRSNRGS0",19,0)
 Q:STOP
"RTN","PRSNRGS0",20,0)
 N %ZIS,POP,IOP
"RTN","PRSNRGS0",21,0)
 S %ZIS="MQ"
"RTN","PRSNRGS0",22,0)
 D ^%ZIS
"RTN","PRSNRGS0",23,0)
 Q:POP
"RTN","PRSNRGS0",24,0)
 I $D(IO("Q")) D
"RTN","PRSNRGS0",25,0)
 . K IO("Q")
"RTN","PRSNRGS0",26,0)
 . N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC
"RTN","PRSNRGS0",27,0)
 . S ZTDESC="Nursing Location Summary Report"
"RTN","PRSNRGS0",28,0)
 . S ZTRTN="REPORT^PRSNRGS0"
"RTN","PRSNRGS0",29,0)
 . S ZTSAVE("GROUP(")=""
"RTN","PRSNRGS0",30,0)
 . S ZTSAVE("LOCDT")=""
"RTN","PRSNRGS0",31,0)
 . S ZTSAVE("LOCDTE")=""
"RTN","PRSNRGS0",32,0)
 . D ^%ZTLOAD
"RTN","PRSNRGS0",33,0)
 . I $D(ZTSK) S ZTREQ="@" W !,"Request "_ZTSK_" Queued."
"RTN","PRSNRGS0",34,0)
 E  D REPORT
"RTN","PRSNRGS0",35,0)
 ;
"RTN","PRSNRGS0",36,0)
 Q
"RTN","PRSNRGS0",37,0)
 ;
"RTN","PRSNRGS0",38,0)
DATE ; User is prompted for a date range 
"RTN","PRSNRGS0",39,0)
 ;
"RTN","PRSNRGS0",40,0)
 ; GET START DATE
"RTN","PRSNRGS0",41,0)
 N %DT,Y,X
"RTN","PRSNRGS0",42,0)
 S %DT="AEP"
"RTN","PRSNRGS0",43,0)
 S %DT("A")="Date: "
"RTN","PRSNRGS0",44,0)
 S Y=DT D DD^%DT S %DT("B")=Y
"RTN","PRSNRGS0",45,0)
 ;
"RTN","PRSNRGS0",46,0)
 D ^%DT
"RTN","PRSNRGS0",47,0)
 I +$G(Y)'>0 S STOP=1 Q
"RTN","PRSNRGS0",48,0)
 ;
"RTN","PRSNRGS0",49,0)
 S LOCDT=Y D DD^%DT S LOCDTE=Y
"RTN","PRSNRGS0",50,0)
 ;
"RTN","PRSNRGS0",51,0)
 Q
"RTN","PRSNRGS0",52,0)
 ;
"RTN","PRSNRGS0",53,0)
REPORT ;for group of location or t&l
"RTN","PRSNRGS0",54,0)
 ;
"RTN","PRSNRGS0",55,0)
 N PRSIEN,PRSNGLB,PRSNG,GHD,PICK,SORT,I,PRSNGA,PRSNGB,TAB,PG,TOTUAP,TOTLPN,TOTRN
"RTN","PRSNRGS0",56,0)
 N FIELDS,ACTIVE,STATUS,DSS,DAP,DEP,VANOD,LN
"RTN","PRSNRGS0",57,0)
 U IO
"RTN","PRSNRGS0",58,0)
 S SORT=$P(GROUP(0),U,2),PG=0
"RTN","PRSNRGS0",59,0)
 K ^TMP($J)
"RTN","PRSNRGS0",60,0)
 D HDR
"RTN","PRSNRGS0",61,0)
 S (PICK,STOP)=0
"RTN","PRSNRGS0",62,0)
 F  S PICK=$O(GROUP(PICK)) Q:PICK=""!STOP  D
"RTN","PRSNRGS0",63,0)
 .S (TOTUAP,TOTLPN,TOTRN)=0
"RTN","PRSNRGS0",64,0)
 .S PRSNG=GROUP(0)_"^"_PICK_"^"_GROUP(PICK),LOCN=$P(PRSNG,U,7)
"RTN","PRSNRGS0",65,0)
 .S PRSNGLB=$S($P(PRSNG,U,2)="N":$NA(^NURSF(211.8,"D",$P(PRSNG,U,7))),1:$NA(^PRSPC("ATL"_$P(PRSNG,U,3))))
"RTN","PRSNRGS0",66,0)
 .;
"RTN","PRSNRGS0",67,0)
 .;
"RTN","PRSNRGS0",68,0)
 .K ^TMP($J)
"RTN","PRSNRGS0",69,0)
 .S PRSNGA=""
"RTN","PRSNRGS0",70,0)
 .F  S PRSNGA=$O(@PRSNGLB@(PRSNGA)) QUIT:PRSNGA=""!STOP  D
"RTN","PRSNRGS0",71,0)
 ..S PRSNGB=0
"RTN","PRSNRGS0",72,0)
 ..F  S PRSNGB=$O(@PRSNGLB@(PRSNGA,PRSNGB)) QUIT:'PRSNGB!STOP  D
"RTN","PRSNRGS0",73,0)
 ...I $P(PRSNG,U,2)="N",+$P(PRSNG,U,4)'=+$$PRIMLOC^PRSNUT03(PRSNGB) Q
"RTN","PRSNRGS0",74,0)
 ...S PRSIEN=$S($P(PRSNG,U,2)="N":+$G(^VA(200,PRSNGB,450)),1:PRSNGB)
"RTN","PRSNRGS0",75,0)
 ...S NURSE=$$ISNURSE^PRSNUT01(PRSIEN)
"RTN","PRSNRGS0",76,0)
 ...Q:'+NURSE
"RTN","PRSNRGS0",77,0)
 ...S SKILL=$P(NURSE,U,2)
"RTN","PRSNRGS0",78,0)
 ...I SKILL["RN" S TOTRN=TOTRN+1
"RTN","PRSNRGS0",79,0)
 ...I SKILL["LPN" S TOTLPN=TOTLPN+1
"RTN","PRSNRGS0",80,0)
 ...I SKILL'["RN",SKILL'["LPN" S TOTUAP=TOTUAP+1
"RTN","PRSNRGS0",81,0)
 .Q:STOP
"RTN","PRSNRGS0",82,0)
 .S LOCIEN=$O(^NURSF(211.4,"B",LOCN,""))
"RTN","PRSNRGS0",83,0)
 .S STATUS=$$ISACTIVE^PRSNUT01(LOCDT,LOCIEN)
"RTN","PRSNRGS0",84,0)
 .S ACTIVE=$S(+STATUS:"Active",1:"Inactive")
"RTN","PRSNRGS0",85,0)
 .K FIELDS
"RTN","PRSNRGS0",86,0)
 .S IENS=LOCIEN_","
"RTN","PRSNRGS0",87,0)
 .D GETS^DIQ(211.4,IENS,".01;.6;.7;2*;14*;15*","IE","FIELDS(",,)
"RTN","PRSNRGS0",88,0)
 .S VANOD=FIELDS(211.4,IENS,.6,"E")
"RTN","PRSNRGS0",89,0)
 .S DSS=FIELDS(211.4,IENS,.7,"E")
"RTN","PRSNRGS0",90,0)
 .S (MASIENS,DAPIENS,DEPIENS)="",MASSTOP=0
"RTN","PRSNRGS0",91,0)
 .F LN=1:1 D  Q:MASSTOP!STOP
"RTN","PRSNRGS0",92,0)
 ..S MASIENS=$O(FIELDS(211.41,MASIENS))
"RTN","PRSNRGS0",93,0)
 ..I MASIENS="" S MASSTOP=1
"RTN","PRSNRGS0",94,0)
 ..S MAS=$S(MASSTOP:"",1:FIELDS(211.41,MASIENS,.01,"E"))
"RTN","PRSNRGS0",95,0)
 ..I LN>1,MASSTOP Q  ;MUST PRINT AT LEAST 1 LINE
"RTN","PRSNRGS0",96,0)
 ..D PRT1
"RTN","PRSNRGS0",97,0)
 .Q:STOP
"RTN","PRSNRGS0",98,0)
 .S (DEPSTOP,DAPSTOP)=0
"RTN","PRSNRGS0",99,0)
 .F LN=1:1 D  Q:(DAPSTOP&DEPSTOP)!STOP
"RTN","PRSNRGS0",100,0)
 ..S DEPIENS=$O(FIELDS(211.414,DEPIENS))
"RTN","PRSNRGS0",101,0)
 ..I DEPIENS="" S DEPSTOP=1
"RTN","PRSNRGS0",102,0)
 ..S DEP=$S(DEPSTOP:"",1:FIELDS(211.414,DEPIENS,.01,"E"))
"RTN","PRSNRGS0",103,0)
 ..S DAPIENS=$O(FIELDS(211.415,DAPIENS))
"RTN","PRSNRGS0",104,0)
 ..I DAPIENS="" S DAPSTOP=1
"RTN","PRSNRGS0",105,0)
 ..S DAP=$S(DAPSTOP:"",1:FIELDS(211.415,DAPIENS,.01,"E"))
"RTN","PRSNRGS0",106,0)
 ..I LN>1,DAPSTOP,DEPSTOP Q  ;MUST PRINT AT LEAST 1 LINE
"RTN","PRSNRGS0",107,0)
 ..D PRT2
"RTN","PRSNRGS0",108,0)
 W !!,"End of Report"
"RTN","PRSNRGS0",109,0)
 D ^%ZISC
"RTN","PRSNRGS0",110,0)
 K ^TMP($J)
"RTN","PRSNRGS0",111,0)
 Q
"RTN","PRSNRGS0",112,0)
 ;
"RTN","PRSNRGS0",113,0)
HDR ;Display header
"RTN","PRSNRGS0",114,0)
 ;
"RTN","PRSNRGS0",115,0)
 W @IOF
"RTN","PRSNRGS0",116,0)
 S PG=PG+1
"RTN","PRSNRGS0",117,0)
 W "Nursing Location Summary Report For Date: ",LOCDTE
"RTN","PRSNRGS0",118,0)
 W !,?45,"Run Date: ",$E(DT,4,5),"/",$E(DT,6,7),"/",$E(DT,2,3),"  Page: ",$J(PG,3)
"RTN","PRSNRGS0",119,0)
 ;nurse position and pay
"RTN","PRSNRGS0",120,0)
 W !!,"Nurse Location",?20,"MAS Ward",?40,"VANOD Unit Type",?60,"DSS Unit Type"
"RTN","PRSNRGS0",121,0)
 W !,?5,"Status",?15,"Data Approval",?35,"Data Entry",?64,"#RNs",?69,"#LPNs",?75,"#UAPs"
"RTN","PRSNRGS0",122,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","PRSNRGS0",123,0)
 ;
"RTN","PRSNRGS0",124,0)
 QUIT
"RTN","PRSNRGS0",125,0)
 ;
"RTN","PRSNRGS0",126,0)
PRT1 ;
"RTN","PRSNRGS0",127,0)
 ;print position and pay report
"RTN","PRSNRGS0",128,0)
 W !
"RTN","PRSNRGS0",129,0)
 W:LN=1 $E(PICK,1,19)
"RTN","PRSNRGS0",130,0)
 W ?20,$E(MAS,1,19)
"RTN","PRSNRGS0",131,0)
 W:LN=1 ?40,$E(VANOD,1,19),?60,$E(DSS,1,19)
"RTN","PRSNRGS0",132,0)
 ;
"RTN","PRSNRGS0",133,0)
 I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDR
"RTN","PRSNRGS0",134,0)
 Q
"RTN","PRSNRGS0",135,0)
 ;
"RTN","PRSNRGS0",136,0)
PRT2 ;
"RTN","PRSNRGS0",137,0)
 ;print position and pay report
"RTN","PRSNRGS0",138,0)
 W !
"RTN","PRSNRGS0",139,0)
 W:LN=1 ?5,ACTIVE
"RTN","PRSNRGS0",140,0)
 W ?15,$E(DAP,1,19),?35,$E(DEP,1,19)
"RTN","PRSNRGS0",141,0)
 W:LN=1 ?64,$J(TOTRN,4,0),?70,$J(TOTLPN,4,0),?76,$J(TOTUAP,4,0)
"RTN","PRSNRGS0",142,0)
 ;
"RTN","PRSNRGS0",143,0)
 I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDR
"RTN","PRSNRGS0",144,0)
 Q
"RTN","PRSNRIA")
0^22^B6940996^n/a
"RTN","PRSNRIA",1,0)
PRSNRIA ;WOIFO/DAM - Nurse POC Report;9/3/2009
"RTN","PRSNRIA",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNRIA",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","PRSNRIA",4,0)
 ;
"RTN","PRSNRIA",5,0)
DEP ; Entry point for Data Entry Personnel
"RTN","PRSNRIA",6,0)
 N PRSIEN,GROUP
"RTN","PRSNRIA",7,0)
 D ACCESS^PRSNUT02(.GROUP,"E",DT)
"RTN","PRSNRIA",8,0)
 I $P($G(GROUP(0)),U,2)="E" D  Q
"RTN","PRSNRIA",9,0)
 .W !,$P(GROUP(0),U,3)
"RTN","PRSNRIA",10,0)
 D MAIN
"RTN","PRSNRIA",11,0)
 Q
"RTN","PRSNRIA",12,0)
 ;
"RTN","PRSNRIA",13,0)
DAP ; Entry point for Data Approval Personnel
"RTN","PRSNRIA",14,0)
 N PRSIEN,GROUP
"RTN","PRSNRIA",15,0)
 D ACCESS^PRSNUT02(.GROUP,"A",DT)
"RTN","PRSNRIA",16,0)
 I $P($G(GROUP(0)),U,2)="E" D  Q
"RTN","PRSNRIA",17,0)
 .W !,$P(GROUP(0),U,3)
"RTN","PRSNRIA",18,0)
 D MAIN
"RTN","PRSNRIA",19,0)
 QUIT
"RTN","PRSNRIA",20,0)
 ;
"RTN","PRSNRIA",21,0)
COORD ;Entry point for VANOD Coordinator
"RTN","PRSNRIA",22,0)
 ; Coordinator has no access limits so let them pick any nurse
"RTN","PRSNRIA",23,0)
 N PRSIEN,DIC,X,Y,DTOUT,DUOUT
"RTN","PRSNRIA",24,0)
 S DIC="^PRSPC(",DIC(0)="AEQMZ",DIC("S")="I $$ISNURSE^PRSNUT01(Y)"
"RTN","PRSNRIA",25,0)
 D ^DIC
"RTN","PRSNRIA",26,0)
 Q:Y'>0!$D(DTOUT)!$D(DUOUT)
"RTN","PRSNRIA",27,0)
 S PRSIEN=$P(Y,U)
"RTN","PRSNRIA",28,0)
 D MAIN
"RTN","PRSNRIA",29,0)
 QUIT
"RTN","PRSNRIA",30,0)
 ;
"RTN","PRSNRIA",31,0)
NURSE ;Entry point for VANOD Nurse
"RTN","PRSNRIA",32,0)
 N PRSIEN,SSN
"RTN","PRSNRIA",33,0)
 S PRSIEN="",SSN=$P($G(^VA(200,DUZ,1)),"^",9)
"RTN","PRSNRIA",34,0)
 I SSN'="" S PRSIEN=$O(^PRSPC("SSN",SSN,0))
"RTN","PRSNRIA",35,0)
 I 'PRSIEN W !!,*7,"Your SSN was not found in both the New Person & Employee File!" Q
"RTN","PRSNRIA",36,0)
 ;
"RTN","PRSNRIA",37,0)
 ; if not in 450 as a nurse then explain and quit
"RTN","PRSNRIA",38,0)
 I +$$ISNURSE^PRSNUT01(PRSIEN)'>0 D NOTNRSDX^PRSNRMM1  Q
"RTN","PRSNRIA",39,0)
 ;
"RTN","PRSNRIA",40,0)
 D MAIN
"RTN","PRSNRIA",41,0)
 Q
"RTN","PRSNRIA",42,0)
 ;
"RTN","PRSNRIA",43,0)
MAIN ; loop through Location or t&l 
"RTN","PRSNRIA",44,0)
 ; 
"RTN","PRSNRIA",45,0)
 ; pick a NURSE from the group or the T&L unit
"RTN","PRSNRIA",46,0)
 ;  
"RTN","PRSNRIA",47,0)
 ;  ien value from group variable); If coordinator has already picked a 
"RTN","PRSNRIA",48,0)
 ;  nurse, or nurse is doing a lookup on ;self based on SSN and DUZ, then 
"RTN","PRSNRIA",49,0)
 ;PRSIEN is set and the line of code below will not be executed.
"RTN","PRSNRIA",50,0)
 ;
"RTN","PRSNRIA",51,0)
 N VALUE
"RTN","PRSNRIA",52,0)
 I $G(PRSIEN)'>0 D
"RTN","PRSNRIA",53,0)
 .  S VALUE=+GROUP($O(GROUP(0)))
"RTN","PRSNRIA",54,0)
 .  Q:VALUE'>0
"RTN","PRSNRIA",55,0)
 .  S PRSIEN=+$$PICKNURS^PRSNUT03($P(GROUP(0),U,2),VALUE)
"RTN","PRSNRIA",56,0)
 ;
"RTN","PRSNRIA",57,0)
 N POCD,PPIEN,PRSNDAY,DAYNODE,RANGE,BEG,END,EXTBEG,EXTEND
"RTN","PRSNRIA",58,0)
 ;
"RTN","PRSNRIA",59,0)
 ; User is prompted for a date or date range 
"RTN","PRSNRIA",60,0)
 ;
"RTN","PRSNRIA",61,0)
 S RANGE=$$POCRANGE^PRSNUT01()
"RTN","PRSNRIA",62,0)
 ; QUIT HERE IF RANGE=0 
"RTN","PRSNRIA",63,0)
 Q:+RANGE'>0
"RTN","PRSNRIA",64,0)
 ;
"RTN","PRSNRIA",65,0)
 S BEG=$P($G(RANGE),U)
"RTN","PRSNRIA",66,0)
 S END=$P($G(RANGE),U,2)
"RTN","PRSNRIA",67,0)
 ;
"RTN","PRSNRIA",68,0)
 ;
"RTN","PRSNRIA",69,0)
 S PPIEN=+$G(^PRST(458,"AD",BEG))
"RTN","PRSNRIA",70,0)
 ;
"RTN","PRSNRIA",71,0)
 ; If a record exists for the nurse and the date range, then the 
"RTN","PRSNRIA",72,0)
 ; Individual Activity report is displayed
"RTN","PRSNRIA",73,0)
 ; If record doesn't exist for the date range selected, then a 
"RTN","PRSNRIA",74,0)
 ; message is displayed, "NO RECORDS EXIST FOR THAT DATE RANGE",
"RTN","PRSNRIA",75,0)
 ; and the user is re-prompted for a date.
"RTN","PRSNRIA",76,0)
 ;
"RTN","PRSNRIA",77,0)
 ;call to generate and display report for individual activity
"RTN","PRSNRIA",78,0)
 N %ZIS,POP,IOP
"RTN","PRSNRIA",79,0)
 S %ZIS="MQ"
"RTN","PRSNRIA",80,0)
 D ^%ZIS
"RTN","PRSNRIA",81,0)
 Q:POP
"RTN","PRSNRIA",82,0)
 I $D(IO("Q")) D
"RTN","PRSNRIA",83,0)
 . K IO("Q")
"RTN","PRSNRIA",84,0)
 . N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC
"RTN","PRSNRIA",85,0)
 . S ZTDESC="NURSE POINT OF CARE DAILY ACTIVITY REPORT"
"RTN","PRSNRIA",86,0)
 . S ZTRTN="REPORT^PRSNRIA"
"RTN","PRSNRIA",87,0)
 . S ZTSAVE("PRSIEN")=""
"RTN","PRSNRIA",88,0)
 . S ZTSAVE("BEG")=""
"RTN","PRSNRIA",89,0)
 . S ZTSAVE("END")=""
"RTN","PRSNRIA",90,0)
 . D ^%ZTLOAD
"RTN","PRSNRIA",91,0)
 . I $D(ZTSK) S ZTREQ="@" W !,"Request "_ZTSK_" Queued."
"RTN","PRSNRIA",92,0)
 E  D
"RTN","PRSNRIA",93,0)
 . D REPORT
"RTN","PRSNRIA",94,0)
 Q
"RTN","PRSNRIA",95,0)
 ;
"RTN","PRSNRIA",96,0)
REPORT ;
"RTN","PRSNRIA",97,0)
 ;
"RTN","PRSNRIA",98,0)
 U IO
"RTN","PRSNRIA",99,0)
 D POCDSPLY^PRSNRUT0(PRSIEN,BEG,END)
"RTN","PRSNRIA",100,0)
 W !!,"End of Report"
"RTN","PRSNRIA",101,0)
 D ^%ZISC
"RTN","PRSNRIA",102,0)
 Q
"RTN","PRSNRLND")
0^53^B35575903^n/a
"RTN","PRSNRLND",1,0)
PRSNRLND ;WOIFO/KJS - LOCATION Non Direct Care Summary by Skill Mix II REPORT ;12-9-2011
"RTN","PRSNRLND",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNRLND",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","PRSNRLND",4,0)
 ;
"RTN","PRSNRLND",5,0)
 Q
"RTN","PRSNRLND",6,0)
 ;
"RTN","PRSNRLND",7,0)
COORD ;Entry point for VANOD Coordinator
"RTN","PRSNRLND",8,0)
 ; Coordinator has no access limits so let them pick any group
"RTN","PRSNRLND",9,0)
 N GROUP
"RTN","PRSNRLND",10,0)
 D PIKGROUP^PRSNUT04(.GROUP,"N",1)
"RTN","PRSNRLND",11,0)
 I $P($G(GROUP(0)),U,2)="E" D  Q
"RTN","PRSNRLND",12,0)
 .W !,$P(GROUP(0),U,3)
"RTN","PRSNRLND",13,0)
 D MAIN
"RTN","PRSNRLND",14,0)
 ;
"RTN","PRSNRLND",15,0)
 Q
"RTN","PRSNRLND",16,0)
 ;
"RTN","PRSNRLND",17,0)
MAIN ;
"RTN","PRSNRLND",18,0)
 N RANGE,BEG,END,EXTBEG,EXTEND,STOP,TYPE,BEG,END
"RTN","PRSNRLND",19,0)
 S STOP=0
"RTN","PRSNRLND",20,0)
 D DATE
"RTN","PRSNRLND",21,0)
 Q:STOP
"RTN","PRSNRLND",22,0)
 D QUE
"RTN","PRSNRLND",23,0)
 Q
"RTN","PRSNRLND",24,0)
 ;
"RTN","PRSNRLND",25,0)
REPORT ;for group of location or t&l
"RTN","PRSNRLND",26,0)
 ;
"RTN","PRSNRLND",27,0)
 N PRSIEN,PRSNG,PICK,PG,LOCIEN,PRSNVER,PRSNTS,PRSNDAY,PPIEN,ENDPP,ENDDAY,BEGPP,BEGDAY,TODAY,PG,TIMEREC
"RTN","PRSNRLND",28,0)
 N PRSNAME,PRSNSSN,PRSNTL,SKILMIX,PRSL,PRSNDAYS,PRSNDATE
"RTN","PRSNRLND",29,0)
 N PRSNST,PRSNSP,PRSNTT,PRSNWIEN,HOURS,PRSNTIEN
"RTN","PRSNRLND",30,0)
 N PRSNTW,PRSNTWD,PRSNM,PRSNRE,PRSNREC,PRSNRIEN,MEAL
"RTN","PRSNRLND",31,0)
 N PRSNLNG,IEN200,PRIMLOC,PRSNARY,LOCNAM,NUROLE
"RTN","PRSNRLND",32,0)
 U IO
"RTN","PRSNRLND",33,0)
 S PG=0,TODAY=$E(DT,4,5)_"/"_$E(DT,6,7)_"/"_$E(DT,2,3)
"RTN","PRSNRLND",34,0)
 S BEGPP=$G(^PRST(458,"AD",BEG)),BEGDAY=$P(BEGPP,U,2),BEGPP=+BEGPP
"RTN","PRSNRLND",35,0)
 S ENDPP=$G(^PRST(458,"AD",END)),ENDDAY=$P(ENDPP,U,2),ENDPP=+ENDPP
"RTN","PRSNRLND",36,0)
 D HDR
"RTN","PRSNRLND",37,0)
 S (PICK,STOP)=0
"RTN","PRSNRLND",38,0)
 F  S PICK=$O(GROUP(PICK)) Q:PICK=""!STOP  D
"RTN","PRSNRLND",39,0)
 . S PRSNG=GROUP(0)_"^"_PICK_"^"_GROUP(PICK)
"RTN","PRSNRLND",40,0)
 . S LOCIEN=+GROUP(PICK)
"RTN","PRSNRLND",41,0)
 . S LOCNAM=$P($$ISACTIVE^PRSNUT01(DT,LOCIEN),U,2)
"RTN","PRSNRLND",42,0)
 . S PRSIEN=0
"RTN","PRSNRLND",43,0)
 . F  S PRSIEN=$O(^PRSN(451,"ALN",LOCIEN,PRSIEN)) Q:'PRSIEN!STOP  D
"RTN","PRSNRLND",44,0)
 .. D INFO
"RTN","PRSNRLND",45,0)
 .. S PPIEN=BEGPP-1
"RTN","PRSNRLND",46,0)
 .. F  S PPIEN=$O(^PRSN(451,"ALN",LOCIEN,PRSIEN,PPIEN)) Q:'PPIEN!STOP!(PPIEN>ENDPP)  D
"RTN","PRSNRLND",47,0)
 ... S PRSNDAYS=$G(^PRST(458,PPIEN,1))
"RTN","PRSNRLND",48,0)
 ... S PRSNDAY=$S(PPIEN=BEGPP:BEGDAY-1,1:0)
"RTN","PRSNRLND",49,0)
 ... F  S PRSNDAY=$O(^PRSN(451,"ALN",LOCIEN,PRSIEN,PPIEN,PRSNDAY)) Q:'PRSNDAY!STOP!(PPIEN=ENDPP&(PRSNDAY>ENDDAY))  D
"RTN","PRSNRLND",50,0)
 .... S PRSNDATE=$P(PRSNDAYS,U,PRSNDAY),PRSNDATE=$E(PRSNDATE,4,5)_"/"_$E(PRSNDATE,6,7)_"/"_$E(PRSNDATE,2,3)
"RTN","PRSNRLND",51,0)
 .... S PRSNVER=$O(^PRSN(451,"ALN",LOCIEN,PRSIEN,PPIEN,PRSNDAY,""),-1)
"RTN","PRSNRLND",52,0)
 .... S PRSNTS=0,PRSD=1
"RTN","PRSNRLND",53,0)
 .... F  S PRSNTS=$O(^PRSN(451,"ALN",LOCIEN,PRSIEN,PPIEN,PRSNDAY,PRSNVER,PRSNTS)) Q:'PRSNTS!STOP  D
"RTN","PRSNRLND",54,0)
 ..... S TIMEREC=$G(^PRSN(451,PPIEN,"E",PRSIEN,"D",PRSNDAY,"V",PRSNVER,"T",PRSNTS,0))
"RTN","PRSNRLND",55,0)
 ..... D DATA
"RTN","PRSNRLND",56,0)
 D PRTLP
"RTN","PRSNRLND",57,0)
 W !!,"End of Report"
"RTN","PRSNRLND",58,0)
 D ^%ZISC
"RTN","PRSNRLND",59,0)
 Q
"RTN","PRSNRLND",60,0)
 ;
"RTN","PRSNRLND",61,0)
DATE ; User is prompted for a date range 
"RTN","PRSNRLND",62,0)
 ;
"RTN","PRSNRLND",63,0)
 S RANGE=$$POCRANGE^PRSNUT01()
"RTN","PRSNRLND",64,0)
 ; QUIT HERE IF RANGE=0 
"RTN","PRSNRLND",65,0)
 I +$G(RANGE)'>0 S STOP=1 Q
"RTN","PRSNRLND",66,0)
 ;
"RTN","PRSNRLND",67,0)
 S BEG=$P(RANGE,U)
"RTN","PRSNRLND",68,0)
 S END=$P(RANGE,U,2)
"RTN","PRSNRLND",69,0)
 S EXTBEG=$P(RANGE,U,3)
"RTN","PRSNRLND",70,0)
 S EXTEND=$P(RANGE,U,4)
"RTN","PRSNRLND",71,0)
 ;
"RTN","PRSNRLND",72,0)
 Q
"RTN","PRSNRLND",73,0)
 ;
"RTN","PRSNRLND",74,0)
QUE ;call to generate and display report for individual activity
"RTN","PRSNRLND",75,0)
 N %ZIS,POP,IOP
"RTN","PRSNRLND",76,0)
 S %ZIS="MQ"
"RTN","PRSNRLND",77,0)
 D ^%ZIS
"RTN","PRSNRLND",78,0)
 Q:POP
"RTN","PRSNRLND",79,0)
 I $D(IO("Q")) D
"RTN","PRSNRLND",80,0)
 . K IO("Q")
"RTN","PRSNRLND",81,0)
 . N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC
"RTN","PRSNRLND",82,0)
 . S ZTDESC="LOCATION NON DIRECT CARE SUMMARY BY SKILLMIX"
"RTN","PRSNRLND",83,0)
 . S ZTRTN="REPORT^PRSNRLND"
"RTN","PRSNRLND",84,0)
 . S ZTSAVE("GROUP")=""
"RTN","PRSNRLND",85,0)
 . S ZTSAVE("GROUP(")=""
"RTN","PRSNRLND",86,0)
 . S ZTSAVE("TYPE")=""
"RTN","PRSNRLND",87,0)
 . S ZTSAVE("BEG")=""
"RTN","PRSNRLND",88,0)
 . S ZTSAVE("END")=""
"RTN","PRSNRLND",89,0)
 . S ZTSAVE("EXTBEG")=""
"RTN","PRSNRLND",90,0)
 . S ZTSAVE("EXTEND")=""
"RTN","PRSNRLND",91,0)
 . D ^%ZTLOAD
"RTN","PRSNRLND",92,0)
 . I $D(ZTSK) S ZTREQ="@" W !,"Request "_ZTSK_" Queued."
"RTN","PRSNRLND",93,0)
 E  D
"RTN","PRSNRLND",94,0)
 . D REPORT
"RTN","PRSNRLND",95,0)
 Q
"RTN","PRSNRLND",96,0)
 ;
"RTN","PRSNRLND",97,0)
INFO ;Find nurse information to display in report
"RTN","PRSNRLND",98,0)
 ;
"RTN","PRSNRLND",99,0)
 S PRSL=1
"RTN","PRSNRLND",100,0)
 S PRSNARY=$G(^PRSPC(PRSIEN,0))
"RTN","PRSNRLND",101,0)
 S PRSNAME=$P(PRSNARY,U)              ;Nurse Name
"RTN","PRSNRLND",102,0)
 S PRSNSSN=$P(PRSNARY,U,9)           ;Nurse SSN
"RTN","PRSNRLND",103,0)
 S PRSNTL=$P(PRSNARY,U,8)             ;Nurse T&L
"RTN","PRSNRLND",104,0)
 S NUROLE=$P($$ISNURSE^PRSNUT01(PRSIEN),U,2) ;  Nurse skillmix
"RTN","PRSNRLND",105,0)
 S IEN200=$G(^PRSPC(PRSIEN,200))
"RTN","PRSNRLND",106,0)
 S PRIMLOC=$S(IEN200="":"",1:$$PRIMLOC^PRSNUT03(IEN200))
"RTN","PRSNRLND",107,0)
 Q
"RTN","PRSNRLND",108,0)
 ;
"RTN","PRSNRLND",109,0)
DATA ;Extract display data from POCD array
"RTN","PRSNRLND",110,0)
 ;
"RTN","PRSNRLND",111,0)
 ;Start Time
"RTN","PRSNRLND",112,0)
 S PRSNST=$P(TIMEREC,U)
"RTN","PRSNRLND",113,0)
 ;
"RTN","PRSNRLND",114,0)
 ;Stop Time 
"RTN","PRSNRLND",115,0)
 S PRSNSP=$P(TIMEREC,U,2)
"RTN","PRSNRLND",116,0)
 ;
"RTN","PRSNRLND",117,0)
 ;Meal Time
"RTN","PRSNRLND",118,0)
 S MEAL=$P(TIMEREC,U,3)
"RTN","PRSNRLND",119,0)
 ;
"RTN","PRSNRLND",120,0)
 ;Get hours worked in a given location
"RTN","PRSNRLND",121,0)
 S HOURS=$$AMT^PRSPSAPU(PRSNST,PRSNSP,MEAL)
"RTN","PRSNRLND",122,0)
 ;
"RTN","PRSNRLND",123,0)
 ;Type of Time code IEN
"RTN","PRSNRLND",124,0)
 S PRSNTT=$P(TIMEREC,U,4),PRSNLNG=" "
"RTN","PRSNRLND",125,0)
 I PRSNTT'="" D
"RTN","PRSNRLND",126,0)
 . ;
"RTN","PRSNRLND",127,0)
 . ;Type of Time code
"RTN","PRSNRLND",128,0)
 . S PRSNTIEN=$O(^PRST(457.3,"B",PRSNTT,0))
"RTN","PRSNRLND",129,0)
 . Q:PRSNTIEN=""
"RTN","PRSNRLND",130,0)
 . ;
"RTN","PRSNRLND",131,0)
 . ;Description for Type of Time code
"RTN","PRSNRLND",132,0)
 . S PRSNLNG=$P(^PRST(457.3,PRSNTIEN,0),U,2)
"RTN","PRSNRLND",133,0)
 . ;
"RTN","PRSNRLND",134,0)
 . ;Type of Work Code IEN
"RTN","PRSNRLND",135,0)
 S PRSNWIEN=$P(TIMEREC,U,6),PRSNTW=" ",PRSNTWD=" "
"RTN","PRSNRLND",136,0)
 I PRSNWIEN'="" D
"RTN","PRSNRLND",137,0)
 . ;
"RTN","PRSNRLND",138,0)
 . ;Type of Work Code
"RTN","PRSNRLND",139,0)
 . S PRSNTW=$P(^PRSN(451.5,PRSNWIEN,0),U)
"RTN","PRSNRLND",140,0)
 . ;
"RTN","PRSNRLND",141,0)
 . ;Description for Type of Work code
"RTN","PRSNRLND",142,0)
 . S PRSNTWD=$P(^PRSN(451.5,PRSNWIEN,0),U,2)
"RTN","PRSNRLND",143,0)
 ;
"RTN","PRSNRLND",144,0)
 ;OT Mandatory/Voluntary
"RTN","PRSNRLND",145,0)
 S PRSNM=$P(TIMEREC,U,7)
"RTN","PRSNRLND",146,0)
 ;
"RTN","PRSNRLND",147,0)
 ;save skill mix, hours and type of work into SKILMIX array
"RTN","PRSNRLND",148,0)
 ;
"RTN","PRSNRLND",149,0)
 I $G(PRSNTW)'="DC" D
"RTN","PRSNRLND",150,0)
 . S SKILMIX(LOCNAM,PRSNTWD,NUROLE)=$G(SKILMIX(LOCNAM,PRSNTWD,NUROLE))+HOURS
"RTN","PRSNRLND",151,0)
 Q
"RTN","PRSNRLND",152,0)
 ;
"RTN","PRSNRLND",153,0)
HDR ;
"RTN","PRSNRLND",154,0)
 ;
"RTN","PRSNRLND",155,0)
 W @IOF
"RTN","PRSNRLND",156,0)
 S PG=PG+1
"RTN","PRSNRLND",157,0)
 W ?17,"LOCATION NON DIRECT SUMMARY BY SKILL MIX REPORT"
"RTN","PRSNRLND",158,0)
 W !,?15,EXTBEG_" - "_EXTEND,?45,"Run Date: ",TODAY,?70,"Page: ",$J(PG,3)
"RTN","PRSNRLND",159,0)
 W !         ;blank line
"RTN","PRSNRLND",160,0)
 W !,"Location",?22,"Non Direct",?53,"# of",?60,"# of",?67,"# of",?74,"Total"
"RTN","PRSNRLND",161,0)
 W !,?22,"Care",?53,"Hours",?60,"Hours",?67,"Hours",?74,"Hours"
"RTN","PRSNRLND",162,0)
 W !,?22,"Category",?53,"RN",?60,"LPN",?67,"UAP"
"RTN","PRSNRLND",163,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","PRSNRLND",164,0)
 ;
"RTN","PRSNRLND",165,0)
 Q
"RTN","PRSNRLND",166,0)
 ;
"RTN","PRSNRLND",167,0)
PRTLP ;Order through SKILMIX array, total data & display
"RTN","PRSNRLND",168,0)
 N RNDC,LNDC,UNDC,GP,TNDC,SKILL,NDCARE
"RTN","PRSNRLND",169,0)
 S GP=""
"RTN","PRSNRLND",170,0)
 F  S GP=$O(SKILMIX(GP)) Q:GP=""!STOP  D
"RTN","PRSNRLND",171,0)
 . S NDCARE=""
"RTN","PRSNRLND",172,0)
 . F  S NDCARE=$O(SKILMIX(GP,NDCARE)) Q:NDCARE=""!STOP  D
"RTN","PRSNRLND",173,0)
 .. S (RNDC,LNDC,UNDC,TNDC)=0
"RTN","PRSNRLND",174,0)
 .. S SKILL=""
"RTN","PRSNRLND",175,0)
 .. F  S SKILL=$O(SKILMIX(GP,NDCARE,SKILL)) Q:SKILL=""!STOP  D
"RTN","PRSNRLND",176,0)
 ... I SKILL["RN" S RNDC=SKILMIX(GP,NDCARE,SKILL)+$G(RNDC)
"RTN","PRSNRLND",177,0)
 ... I SKILL["LPN" S LNDC=SKILMIX(GP,NDCARE,SKILL)+$G(LNDC)
"RTN","PRSNRLND",178,0)
 ... I SKILL'["RN",SKILL'["LPN" S UNDC=SKILMIX(GP,NDCARE,SKILL)+$G(UNDC)
"RTN","PRSNRLND",179,0)
 .. S TNDC=$G(RNDC)+$G(LNDC)+$G(UNDC)  ;total hours
"RTN","PRSNRLND",180,0)
 .. D PPP
"RTN","PRSNRLND",181,0)
 Q
"RTN","PRSNRLND",182,0)
 ;
"RTN","PRSNRLND",183,0)
PPP ;
"RTN","PRSNRLND",184,0)
 W !
"RTN","PRSNRLND",185,0)
 W GP,?22,NDCARE,?53,RNDC,?60,LNDC,?67,UNDC,?74,TNDC
"RTN","PRSNRLND",186,0)
 I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDR
"RTN","PRSNRLND",187,0)
 Q
"RTN","PRSNRLOS")
0^56^B105227218^n/a
"RTN","PRSNRLOS",1,0)
PRSNRLOS ;WOIFO/KJS - All Overtime at a Nursing Location - Summary and Detailed;2-2-2012
"RTN","PRSNRLOS",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNRLOS",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSNRLOS",4,0)
 ;
"RTN","PRSNRLOS",5,0)
 Q
"RTN","PRSNRLOS",6,0)
 ;
"RTN","PRSNRLOS",7,0)
COORD ;Entry point for VANOD Coordinator
"RTN","PRSNRLOS",8,0)
 ; Coordinator has no access limits so let them pick any group
"RTN","PRSNRLOS",9,0)
 N GROUP
"RTN","PRSNRLOS",10,0)
 D PIKGROUP^PRSNUT04(.GROUP,"N",1)
"RTN","PRSNRLOS",11,0)
 ; quit if any error during group selection
"RTN","PRSNRLOS",12,0)
 I $P($G(GROUP(0)),U,2)="E" D  Q
"RTN","PRSNRLOS",13,0)
 .W !,$P(GROUP(0),U,3)
"RTN","PRSNRLOS",14,0)
 D MAIN
"RTN","PRSNRLOS",15,0)
 ;
"RTN","PRSNRLOS",16,0)
 Q
"RTN","PRSNRLOS",17,0)
 ;
"RTN","PRSNRLOS",18,0)
MAIN ;
"RTN","PRSNRLOS",19,0)
 N RANGE,BEG,END,EXTBEG,EXTEND,STOP
"RTN","PRSNRLOS",20,0)
 N DAYBEG,DAYEND
"RTN","PRSNRLOS",21,0)
 N TYPE,BEG,END
"RTN","PRSNRLOS",22,0)
 S STOP=0
"RTN","PRSNRLOS",23,0)
 D TYPE
"RTN","PRSNRLOS",24,0)
 Q:STOP
"RTN","PRSNRLOS",25,0)
 D DATE
"RTN","PRSNRLOS",26,0)
 Q:STOP
"RTN","PRSNRLOS",27,0)
 D QUE
"RTN","PRSNRLOS",28,0)
 Q
"RTN","PRSNRLOS",29,0)
 ;
"RTN","PRSNRLOS",30,0)
REPORT ;for group of location
"RTN","PRSNRLOS",31,0)
 ;
"RTN","PRSNRLOS",32,0)
 N PRSIEN,PRSNG,PICK,PG,LOCIEN,PRSNVER,PRSNTS,PRSNDAY,PPIEN,ENDPP,ENDDAY,BEGPP,BEGDAY,TODAY,PG,TIMEREC
"RTN","PRSNRLOS",33,0)
 N PRSNAME,PRSNSSN,PRSNTL,SKILMIX,PRSL,PRSNDAYS,PRSNDATE
"RTN","PRSNRLOS",34,0)
 N PRSNST,PRSNSP,PRSNTT,PRSNWIEN,HOURS,PRSNTIEN
"RTN","PRSNRLOS",35,0)
 N PRSNTW,PRSNTWD,PRSNM,PRSNRE,PRSNREC,PRSNRIEN,MEAL
"RTN","PRSNRLOS",36,0)
 N PRSNLNG,IEN200,PRIMLOC,PRSNARY,GHD,SKILTYP,TOTHRS,I
"RTN","PRSNRLOS",37,0)
 K ^TMP($J,"PRSNR")
"RTN","PRSNRLOS",38,0)
 U IO
"RTN","PRSNRLOS",39,0)
 S PG=0,TODAY=$E(DT,4,5)_"/"_$E(DT,6,7)_"/"_$E(DT,2,3)
"RTN","PRSNRLOS",40,0)
 S BEGPP=$G(^PRST(458,"AD",BEG)),BEGDAY=$P(BEGPP,U,2),BEGPP=+BEGPP
"RTN","PRSNRLOS",41,0)
 S ENDPP=$G(^PRST(458,"AD",END)),ENDDAY=$P(ENDPP,U,2),ENDPP=+ENDPP
"RTN","PRSNRLOS",42,0)
 S (PICK,STOP)=0
"RTN","PRSNRLOS",43,0)
 F  S PICK=$O(GROUP(PICK)) Q:PICK=""!STOP  D
"RTN","PRSNRLOS",44,0)
 . S PRSNG=GROUP(0)_"^"_PICK_"^"_GROUP(PICK)
"RTN","PRSNRLOS",45,0)
 . S LOCIEN=+GROUP(PICK)
"RTN","PRSNRLOS",46,0)
 . S PRSIEN=0
"RTN","PRSNRLOS",47,0)
 . F  S PRSIEN=$O(^PRSN(451,"ALN",LOCIEN,PRSIEN)) Q:'PRSIEN!STOP  D
"RTN","PRSNRLOS",48,0)
 .. D INFO
"RTN","PRSNRLOS",49,0)
 .. S PPIEN=BEGPP-1
"RTN","PRSNRLOS",50,0)
 .. F  S PPIEN=$O(^PRSN(451,"ALN",LOCIEN,PRSIEN,PPIEN)) Q:'PPIEN!STOP!(PPIEN>ENDPP)  D
"RTN","PRSNRLOS",51,0)
 ... S PRSNDAYS=$G(^PRST(458,PPIEN,1))
"RTN","PRSNRLOS",52,0)
 ... S PRSNDAY=$S(PPIEN=BEGPP:BEGDAY-1,1:0)
"RTN","PRSNRLOS",53,0)
 ... F  S PRSNDAY=$O(^PRSN(451,"ALN",LOCIEN,PRSIEN,PPIEN,PRSNDAY)) Q:'PRSNDAY!STOP!(PPIEN=ENDPP&(PRSNDAY>ENDDAY))  D
"RTN","PRSNRLOS",54,0)
 .... S PRSNDATE=$P(PRSNDAYS,U,PRSNDAY),PRSNDATE=$E(PRSNDATE,4,5)_"/"_$E(PRSNDATE,6,7)_"/"_$E(PRSNDATE,2,3)
"RTN","PRSNRLOS",55,0)
 .... S PRSNVER=$O(^PRSN(451,"ALN",LOCIEN,PRSIEN,PPIEN,PRSNDAY,""),-1)
"RTN","PRSNRLOS",56,0)
 .... S PRSNTS=0,PRSD=1
"RTN","PRSNRLOS",57,0)
 .... F  S PRSNTS=$O(^PRSN(451,"ALN",LOCIEN,PRSIEN,PPIEN,PRSNDAY,PRSNVER,PRSNTS)) Q:'PRSNTS!STOP  D
"RTN","PRSNRLOS",58,0)
 ..... S TIMEREC=$G(^PRSN(451,PPIEN,"E",PRSIEN,"D",PRSNDAY,"V",PRSNVER,"T",PRSNTS,0))
"RTN","PRSNRLOS",59,0)
 ..... D DATA
"RTN","PRSNRLOS",60,0)
 ..... ;NOT overtime so don't proceed
"RTN","PRSNRLOS",61,0)
 ..... Q:PRSNM=""
"RTN","PRSNRLOS",62,0)
 ..... I TYPE="S" D TOTTIM1
"RTN","PRSNRLOS",63,0)
 ..... I TYPE="D" D TOTTIM2
"RTN","PRSNRLOS",64,0)
 ;
"RTN","PRSNRLOS",65,0)
 I TYPE="S" D HDRSUM1
"RTN","PRSNRLOS",66,0)
 I TYPE="D" D HDRSUM2
"RTN","PRSNRLOS",67,0)
 S PICK=""
"RTN","PRSNRLOS",68,0)
 F  S PICK=$O(^TMP($J,"PRSNR",PICK)) Q:PICK=""!STOP  D
"RTN","PRSNRLOS",69,0)
 . S GHD="Location: "_PICK
"RTN","PRSNRLOS",70,0)
 . S TAB=IOM-$L(GHD)/2-5
"RTN","PRSNRLOS",71,0)
 . W !!,?TAB,GHD,!
"RTN","PRSNRLOS",72,0)
 . W ?TAB F I=1:1:$L(GHD) W "-"
"RTN","PRSNRLOS",73,0)
 . I TYPE="S" D PRTSUM1
"RTN","PRSNRLOS",74,0)
 . I TYPE="D" D PRTSUM2
"RTN","PRSNRLOS",75,0)
 ;
"RTN","PRSNRLOS",76,0)
 I STOP G EXIT
"RTN","PRSNRLOS",77,0)
 I TYPE="S" D
"RTN","PRSNRLOS",78,0)
 . S HOURS=$G(^TMP($J,"PRSNR")),TOTHRS=0
"RTN","PRSNRLOS",79,0)
 . F I=1:1:3 S TOTHRS=TOTHRS+$P(HOURS,U,I)
"RTN","PRSNRLOS",80,0)
 . W !,?2,"GRAND TOTAL:",?43,$J($P(HOURS,U,1),7,2),?53,$J($P(HOURS,U,2),7,2),?63,$J($P(HOURS,U,3),7,2),?73,$J(TOTHRS,7,2)
"RTN","PRSNRLOS",81,0)
 ;
"RTN","PRSNRLOS",82,0)
 I TYPE="D" D
"RTN","PRSNRLOS",83,0)
 . S HOURS=$G(^TMP($J,"PRSNR"))
"RTN","PRSNRLOS",84,0)
 . W !,?2,"GRAND TOTAL:",?66,$J(HOURS,7,2)
"RTN","PRSNRLOS",85,0)
 ;
"RTN","PRSNRLOS",86,0)
EXIT ;
"RTN","PRSNRLOS",87,0)
 W !!,"End of Report"
"RTN","PRSNRLOS",88,0)
 D ^%ZISC
"RTN","PRSNRLOS",89,0)
 K ^TMP($J,"PRSNR")
"RTN","PRSNRLOS",90,0)
 Q
"RTN","PRSNRLOS",91,0)
 ;
"RTN","PRSNRLOS",92,0)
INFO ;Find nurse information to display in report
"RTN","PRSNRLOS",93,0)
 ;
"RTN","PRSNRLOS",94,0)
 S PRSL=1
"RTN","PRSNRLOS",95,0)
 S PRSNARY=$G(^PRSPC(PRSIEN,0))
"RTN","PRSNRLOS",96,0)
 S PRSNAME=$P(PRSNARY,U)              ;Nurse Name
"RTN","PRSNRLOS",97,0)
 S PRSNSSN=$P(PRSNARY,U,9)           ;Nurse SSN
"RTN","PRSNRLOS",98,0)
 S PRSNTL=$P(PRSNARY,U,8)             ;Nurse T&L
"RTN","PRSNRLOS",99,0)
 S SKILMIX=$P($$ISNURSE^PRSNUT01(PRSIEN),U,2) ;  Nurse skillmix
"RTN","PRSNRLOS",100,0)
 I SKILMIX["ADMINISTRATIVE" S SKILMIX="ADMIN RN"
"RTN","PRSNRLOS",101,0)
 S SKILTYP=$S(SKILMIX["RN":1,SKILMIX["LPN":2,1:3)
"RTN","PRSNRLOS",102,0)
 S IEN200=$G(^PRSPC(PRSIEN,200))
"RTN","PRSNRLOS",103,0)
 S PRIMLOC=$S(IEN200="":"",1:$$PRIMLOC^PRSNUT03(IEN200))
"RTN","PRSNRLOS",104,0)
 Q
"RTN","PRSNRLOS",105,0)
 ;
"RTN","PRSNRLOS",106,0)
DATA ;Extract display data from POCD array
"RTN","PRSNRLOS",107,0)
 ;
"RTN","PRSNRLOS",108,0)
 ;Start Time
"RTN","PRSNRLOS",109,0)
 S PRSNST=$P(TIMEREC,U)
"RTN","PRSNRLOS",110,0)
 ;
"RTN","PRSNRLOS",111,0)
 ;Stop Time 
"RTN","PRSNRLOS",112,0)
 S PRSNSP=$P(TIMEREC,U,2)
"RTN","PRSNRLOS",113,0)
 ;
"RTN","PRSNRLOS",114,0)
 ;Meal Time
"RTN","PRSNRLOS",115,0)
 S MEAL=$P(TIMEREC,U,3)
"RTN","PRSNRLOS",116,0)
 ;
"RTN","PRSNRLOS",117,0)
 ;Get hours worked in a given location
"RTN","PRSNRLOS",118,0)
 S HOURS=$$AMT^PRSPSAPU(PRSNST,PRSNSP,MEAL)
"RTN","PRSNRLOS",119,0)
 ;
"RTN","PRSNRLOS",120,0)
 ;Type of Time code IEN
"RTN","PRSNRLOS",121,0)
 S PRSNTT=$P(TIMEREC,U,4),PRSNLNG=" "
"RTN","PRSNRLOS",122,0)
 I PRSNTT'="" D
"RTN","PRSNRLOS",123,0)
 . ;
"RTN","PRSNRLOS",124,0)
 . ;Type of Time code
"RTN","PRSNRLOS",125,0)
 . S PRSNTIEN=$O(^PRST(457.3,"B",PRSNTT,0))
"RTN","PRSNRLOS",126,0)
 . Q:PRSNTIEN=""
"RTN","PRSNRLOS",127,0)
 . ;
"RTN","PRSNRLOS",128,0)
 . ;Description for Type of Time code
"RTN","PRSNRLOS",129,0)
 . S PRSNLNG=$P(^PRST(457.3,PRSNTIEN,0),U,2)
"RTN","PRSNRLOS",130,0)
 . ;
"RTN","PRSNRLOS",131,0)
 . ;Type of Work Code IEN
"RTN","PRSNRLOS",132,0)
 S PRSNWIEN=$P(TIMEREC,U,6),PRSNTW=" ",PRSNTWD=" "
"RTN","PRSNRLOS",133,0)
 I PRSNWIEN'="" D
"RTN","PRSNRLOS",134,0)
 . ;
"RTN","PRSNRLOS",135,0)
 . ;Type of Work Code
"RTN","PRSNRLOS",136,0)
 . S PRSNTW=$P(^PRSN(451.5,PRSNWIEN,0),U)
"RTN","PRSNRLOS",137,0)
 . ;
"RTN","PRSNRLOS",138,0)
 . ;Description for Type of Work code
"RTN","PRSNRLOS",139,0)
 . S PRSNTWD=$P(^PRSN(451.5,PRSNWIEN,0),U,2)
"RTN","PRSNRLOS",140,0)
 ;
"RTN","PRSNRLOS",141,0)
 ;OT Mandatory/Voluntary
"RTN","PRSNRLOS",142,0)
 S PRSNM=$P(TIMEREC,U,7)
"RTN","PRSNRLOS",143,0)
 S PRSNRIEN=$P(TIMEREC,U,8),PRSNREC=" ",PRSNRE=" "
"RTN","PRSNRLOS",144,0)
 I PRSNRIEN'="" D
"RTN","PRSNRLOS",145,0)
 . ;Reason for OT code
"RTN","PRSNRLOS",146,0)
 . S PRSNREC=$P(^PRSN(451.6,PRSNRIEN,0),U)
"RTN","PRSNRLOS",147,0)
 . ;
"RTN","PRSNRLOS",148,0)
 . ;Description for OT code
"RTN","PRSNRLOS",149,0)
 . S PRSNRE=$P(^PRSN(451.6,PRSNRIEN,0),U,2)
"RTN","PRSNRLOS",150,0)
 Q
"RTN","PRSNRLOS",151,0)
 ;
"RTN","PRSNRLOS",152,0)
TOTTIM1 ;
"RTN","PRSNRLOS",153,0)
 ; save hours into work array
"RTN","PRSNRLOS",154,0)
 S $P(^TMP($J,"PRSNR"),U,SKILTYP)=$P($G(^TMP($J,"PRSNR")),U,SKILTYP)+HOURS
"RTN","PRSNRLOS",155,0)
 S $P(^TMP($J,"PRSNR",PICK),U,SKILTYP)=$P($G(^TMP($J,"PRSNR",PICK)),U,SKILTYP)+HOURS
"RTN","PRSNRLOS",156,0)
 S $P(^TMP($J,"PRSNR",PICK,3,PRSNTT),U,SKILTYP)=$P($G(^TMP($J,"PRSNR",PICK,3,PRSNTT)),U,SKILTYP)+HOURS
"RTN","PRSNRLOS",157,0)
 S $P(^TMP($J,"PRSNR",PICK,2,PRSNTT_"-"_PRSNM),U,SKILTYP)=$P($G(^TMP($J,"PRSNR",PICK,2,PRSNTT_"-"_PRSNM)),U,SKILTYP)+HOURS
"RTN","PRSNRLOS",158,0)
 S $P(^TMP($J,"PRSNR",PICK,1,PRSNRE),U,SKILTYP)=$P($G(^TMP($J,"PRSNR",PICK,1,PRSNRE)),U,SKILTYP)+HOURS
"RTN","PRSNRLOS",159,0)
 ;
"RTN","PRSNRLOS",160,0)
 Q
"RTN","PRSNRLOS",161,0)
 ;
"RTN","PRSNRLOS",162,0)
TOTTIM2 ;
"RTN","PRSNRLOS",163,0)
 ; save hours into work array
"RTN","PRSNRLOS",164,0)
 S ^TMP($J,"PRSNR")=$G(^TMP($J,"PRSNR"))+HOURS
"RTN","PRSNRLOS",165,0)
 S ^TMP($J,"PRSNR",PICK)=$G(^TMP($J,"PRSNR",PICK))+HOURS
"RTN","PRSNRLOS",166,0)
 S ^TMP($J,"PRSNR",PICK,4,PRSNTT)=$G(^TMP($J,"PRSNR",PICK,4,PRSNTT))+HOURS
"RTN","PRSNRLOS",167,0)
 S ^TMP($J,"PRSNR",PICK,3,PRSNTT_"-"_PRSNM)=$G(^TMP($J,"PRSNR",PICK,3,PRSNTT_"-"_PRSNM))+HOURS
"RTN","PRSNRLOS",168,0)
 S ^TMP($J,"PRSNR",PICK,2,PRSNTT_"-"_PRSNM_"-"_PRSNREC)=$G(^TMP($J,"PRSNR",PICK,2,PRSNTT_"-"_PRSNM_"-"_PRSNREC))+HOURS
"RTN","PRSNRLOS",169,0)
 S ^TMP($J,"PRSNR",PICK,1,PRSNAME,PRSIEN,PRSNTT_"-"_PRSNM_"-"_PRSNREC_"-"_PRSNTWD)=$G(^TMP($J,"PRSNR",PICK,1,PRSNAME,PRSIEN,PRSNTT_"-"_PRSNM_"-"_PRSNREC_"-"_PRSNTWD))+HOURS
"RTN","PRSNRLOS",170,0)
 ;
"RTN","PRSNRLOS",171,0)
 Q
"RTN","PRSNRLOS",172,0)
 ;
"RTN","PRSNRLOS",173,0)
HDRSUM1 ;Display header for report of Individual Nurse Activity
"RTN","PRSNRLOS",174,0)
 ;
"RTN","PRSNRLOS",175,0)
 W @IOF
"RTN","PRSNRLOS",176,0)
 S PG=PG+1,PRSL=1
"RTN","PRSNRLOS",177,0)
 W ?20,"All Overtime at a Nurse Location Summary Report"
"RTN","PRSNRLOS",178,0)
 W !,?15,EXTBEG_" - "_EXTEND,?45,"Run Date: ",TODAY,?70,"Page: ",$J(PG,3)
"RTN","PRSNRLOS",179,0)
 W !         ;blank line
"RTN","PRSNRLOS",180,0)
 W !,?10,"Reason for",?45,"# Of",?55,"# Of",?65,"# Of",?75,"Total"
"RTN","PRSNRLOS",181,0)
 W !,?10,"Overtime",?45,"Hours",?55,"Hours",?65,"Hours",?75,"Hours"
"RTN","PRSNRLOS",182,0)
 W !,?46,"RN",?56,"LPN",?66,"UAP"
"RTN","PRSNRLOS",183,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","PRSNRLOS",184,0)
 ;
"RTN","PRSNRLOS",185,0)
 Q
"RTN","PRSNRLOS",186,0)
 ;
"RTN","PRSNRLOS",187,0)
PRTSUM1 ;  Loop through Totals array and print each one
"RTN","PRSNRLOS",188,0)
 ;
"RTN","PRSNRLOS",189,0)
 N TOTYP
"RTN","PRSNRLOS",190,0)
 F TOTYP=1:1:3 D  Q:STOP
"RTN","PRSNRLOS",191,0)
 .S PRSNTT=""
"RTN","PRSNRLOS",192,0)
 .F  S PRSNTT=$O(^TMP($J,"PRSNR",PICK,TOTYP,PRSNTT)) Q:PRSNTT=""!STOP  D
"RTN","PRSNRLOS",193,0)
 .. S HOURS=$G(^TMP($J,"PRSNR",PICK,TOTYP,PRSNTT))
"RTN","PRSNRLOS",194,0)
 .. D PPP1
"RTN","PRSNRLOS",195,0)
 . W !
"RTN","PRSNRLOS",196,0)
 Q:STOP
"RTN","PRSNRLOS",197,0)
 I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDRSUM1
"RTN","PRSNRLOS",198,0)
 Q:STOP
"RTN","PRSNRLOS",199,0)
 S HOURS=$G(^TMP($J,"PRSNR",PICK)),TOTHRS=0
"RTN","PRSNRLOS",200,0)
 F I=1:1:3 S TOTHRS=TOTHRS+$P(HOURS,U,I)
"RTN","PRSNRLOS",201,0)
 W !,?4," TOTAL: ",PICK,?43,$J($P(HOURS,U,1),7,2),?53,$J($P(HOURS,U,2),7,2),?63,$J($P(HOURS,U,3),7,2),?73,$J(TOTHRS,7,2),!
"RTN","PRSNRLOS",202,0)
 Q
"RTN","PRSNRLOS",203,0)
 ;
"RTN","PRSNRLOS",204,0)
PPP1 ;
"RTN","PRSNRLOS",205,0)
 S TOTHRS=0
"RTN","PRSNRLOS",206,0)
 F I=1:1:3 S TOTHRS=TOTHRS+$P(HOURS,U,I)
"RTN","PRSNRLOS",207,0)
 W !
"RTN","PRSNRLOS",208,0)
 I TOTYP=1 W ?10,PRSNTT
"RTN","PRSNRLOS",209,0)
 I TOTYP'=1 W ?10,"TOTAL: ",PRSNTT
"RTN","PRSNRLOS",210,0)
 W ?43,$J($P(HOURS,U,1),7,2),?53,$J($P(HOURS,U,2),7,2),?63,$J($P(HOURS,U,3),7,2),?73,$J(TOTHRS,7,2)
"RTN","PRSNRLOS",211,0)
 ;
"RTN","PRSNRLOS",212,0)
 I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDRSUM1
"RTN","PRSNRLOS",213,0)
 Q
"RTN","PRSNRLOS",214,0)
 ;
"RTN","PRSNRLOS",215,0)
HDRSUM2 ;Display header for report of Individual Nurse Activity
"RTN","PRSNRLOS",216,0)
 ;
"RTN","PRSNRLOS",217,0)
 W @IOF
"RTN","PRSNRLOS",218,0)
 S PG=PG+1,PRSL=1
"RTN","PRSNRLOS",219,0)
 W ?20,"All Overtime at a Nurse Location Detail Report"
"RTN","PRSNRLOS",220,0)
 W !,?15,EXTBEG_" - "_EXTEND,?45,"Run Date: ",TODAY,?70,"Page: ",$J(PG,3)
"RTN","PRSNRLOS",221,0)
 W !         ;blank line
"RTN","PRSNRLOS",222,0)
 W !,"Nurse Name",?21,"Type Time-",?32,"Type",?48,"Primary Location",?68,"# of",?75,"T&L"
"RTN","PRSNRLOS",223,0)
 W !,"Skill Mix",?21,"OT-Reason",?32,"Work",?68,"Hours",?75,"Unit"
"RTN","PRSNRLOS",224,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","PRSNRLOS",225,0)
 ;
"RTN","PRSNRLOS",226,0)
 Q
"RTN","PRSNRLOS",227,0)
 ;
"RTN","PRSNRLOS",228,0)
PRTSUM2 ;  Loop through Totals array and print each one
"RTN","PRSNRLOS",229,0)
 ;
"RTN","PRSNRLOS",230,0)
 N CNT
"RTN","PRSNRLOS",231,0)
 S PRSNAME=""
"RTN","PRSNRLOS",232,0)
 F  S PRSNAME=$O(^TMP($J,"PRSNR",PICK,1,PRSNAME)) Q:PRSNAME=""!STOP  D
"RTN","PRSNRLOS",233,0)
 . S PRSIEN=""
"RTN","PRSNRLOS",234,0)
 . F  S PRSIEN=$O(^TMP($J,"PRSNR",PICK,1,PRSNAME,PRSIEN)) Q:PRSIEN=""!STOP  D
"RTN","PRSNRLOS",235,0)
 .. D INFO
"RTN","PRSNRLOS",236,0)
 .. S PRSNTT="",CNT=0
"RTN","PRSNRLOS",237,0)
 .. F  S PRSNTT=$O(^TMP($J,"PRSNR",PICK,1,PRSNAME,PRSIEN,PRSNTT)) Q:PRSNTT=""!STOP  D
"RTN","PRSNRLOS",238,0)
 ... S CNT=CNT+1
"RTN","PRSNRLOS",239,0)
 ... S HOURS=$G(^TMP($J,"PRSNR",PICK,1,PRSNAME,PRSIEN,PRSNTT))
"RTN","PRSNRLOS",240,0)
 ... D PPP2
"RTN","PRSNRLOS",241,0)
 ..; need a blank line between nurses when there was only one record printed
"RTN","PRSNRLOS",242,0)
 .. I CNT=1 W !
"RTN","PRSNRLOS",243,0)
 Q:STOP
"RTN","PRSNRLOS",244,0)
 I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDRSUM2
"RTN","PRSNRLOS",245,0)
 Q:STOP
"RTN","PRSNRLOS",246,0)
 D PRTSUM3
"RTN","PRSNRLOS",247,0)
 Q
"RTN","PRSNRLOS",248,0)
 ;
"RTN","PRSNRLOS",249,0)
PPP2 ;
"RTN","PRSNRLOS",250,0)
 I PRSL W !,$E(PRSNAME,1,19)
"RTN","PRSNRLOS",251,0)
 W ?21,$P(PRSNTT,"-",1,3),?32,$E($P(PRSNTT,"-",4),1,14),?48,$E($P(PRIMLOC,U,3),1,18),?67,$J(HOURS,6,2),?75,PRSNTL,!
"RTN","PRSNRLOS",252,0)
 I PRSL W "  ",$E(SKILMIX,1,17)
"RTN","PRSNRLOS",253,0)
 ;
"RTN","PRSNRLOS",254,0)
 S PRSL=0
"RTN","PRSNRLOS",255,0)
 I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDRSUM2
"RTN","PRSNRLOS",256,0)
 Q
"RTN","PRSNRLOS",257,0)
 ;
"RTN","PRSNRLOS",258,0)
PRTSUM3 ;  Loop through Totals array and print each one
"RTN","PRSNRLOS",259,0)
 ;
"RTN","PRSNRLOS",260,0)
 N TOTYP
"RTN","PRSNRLOS",261,0)
 F TOTYP=2:1:4 D  Q:STOP
"RTN","PRSNRLOS",262,0)
 .S PRSNTT=""
"RTN","PRSNRLOS",263,0)
 .F  S PRSNTT=$O(^TMP($J,"PRSNR",PICK,TOTYP,PRSNTT)) Q:PRSNTT=""!STOP  D
"RTN","PRSNRLOS",264,0)
 .. S HOURS=$G(^TMP($J,"PRSNR",PICK,TOTYP,PRSNTT))
"RTN","PRSNRLOS",265,0)
 .. D PPP3
"RTN","PRSNRLOS",266,0)
 . W !
"RTN","PRSNRLOS",267,0)
 Q:STOP
"RTN","PRSNRLOS",268,0)
 I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDRSUM2
"RTN","PRSNRLOS",269,0)
 Q:STOP
"RTN","PRSNRLOS",270,0)
 S HOURS=$G(^TMP($J,"PRSNR",PICK))
"RTN","PRSNRLOS",271,0)
 W !,?4," TOTAL: ",PICK,?67,$J(HOURS,6,2),!
"RTN","PRSNRLOS",272,0)
 Q
"RTN","PRSNRLOS",273,0)
 ;
"RTN","PRSNRLOS",274,0)
PPP3 ;
"RTN","PRSNRLOS",275,0)
 W !,?6," TOTAL: ",PRSNTT,?67,$J(HOURS,6,2)
"RTN","PRSNRLOS",276,0)
 ;
"RTN","PRSNRLOS",277,0)
 I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDRSUM2
"RTN","PRSNRLOS",278,0)
 Q
"RTN","PRSNRLOS",279,0)
 ;
"RTN","PRSNRLOS",280,0)
TYPE ;Choose summary or detailed group activity report
"RTN","PRSNRLOS",281,0)
 ;
"RTN","PRSNRLOS",282,0)
 N DIR,DIRUT,X,Y
"RTN","PRSNRLOS",283,0)
 S DIR(0)="S^S:Summary Report;D:Detailed Report"
"RTN","PRSNRLOS",284,0)
 S DIR("A")="Enter Selection"
"RTN","PRSNRLOS",285,0)
 S DIR("?")="Enter whether you want to select a Summary or Detailed Overtime Report"
"RTN","PRSNRLOS",286,0)
 D ^DIR
"RTN","PRSNRLOS",287,0)
 I $D(DIRUT) S STOP=1 Q
"RTN","PRSNRLOS",288,0)
 S TYPE=Y
"RTN","PRSNRLOS",289,0)
 Q
"RTN","PRSNRLOS",290,0)
 ;
"RTN","PRSNRLOS",291,0)
DATE ; User is prompted for a date range 
"RTN","PRSNRLOS",292,0)
 ;
"RTN","PRSNRLOS",293,0)
 S RANGE=$$POCRANGE^PRSNUT01()
"RTN","PRSNRLOS",294,0)
 ; QUIT HERE IF RANGE=0 
"RTN","PRSNRLOS",295,0)
 I +$G(RANGE)'>0 S STOP=1
"RTN","PRSNRLOS",296,0)
 ;
"RTN","PRSNRLOS",297,0)
 S BEG=$P(RANGE,U)
"RTN","PRSNRLOS",298,0)
 S END=$P(RANGE,U,2)
"RTN","PRSNRLOS",299,0)
 S EXTBEG=$P(RANGE,U,3)
"RTN","PRSNRLOS",300,0)
 S EXTEND=$P(RANGE,U,4)
"RTN","PRSNRLOS",301,0)
 ;
"RTN","PRSNRLOS",302,0)
 Q
"RTN","PRSNRLOS",303,0)
 ;
"RTN","PRSNRLOS",304,0)
QUE ;call to generate and display report for individual activity
"RTN","PRSNRLOS",305,0)
 N %ZIS,POP,IOP
"RTN","PRSNRLOS",306,0)
 S %ZIS="MQ"
"RTN","PRSNRLOS",307,0)
 D ^%ZIS
"RTN","PRSNRLOS",308,0)
 Q:POP
"RTN","PRSNRLOS",309,0)
 I $D(IO("Q")) D
"RTN","PRSNRLOS",310,0)
 . K IO("Q")
"RTN","PRSNRLOS",311,0)
 . N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC
"RTN","PRSNRLOS",312,0)
 . S ZTDESC="All Overtime at a Nurse Location "_$S(TYPE="S":"Summary",1:"Detail")
"RTN","PRSNRLOS",313,0)
 . S ZTRTN="REPORT^PRSNRLOS"
"RTN","PRSNRLOS",314,0)
 . S ZTSAVE("GROUP")=""
"RTN","PRSNRLOS",315,0)
 . S ZTSAVE("GROUP(")=""
"RTN","PRSNRLOS",316,0)
 . S ZTSAVE("TYPE")=""
"RTN","PRSNRLOS",317,0)
 . S ZTSAVE("BEG")=""
"RTN","PRSNRLOS",318,0)
 . S ZTSAVE("END")=""
"RTN","PRSNRLOS",319,0)
 . S ZTSAVE("EXTBEG")=""
"RTN","PRSNRLOS",320,0)
 . S ZTSAVE("EXTEND")=""
"RTN","PRSNRLOS",321,0)
 . D ^%ZTLOAD
"RTN","PRSNRLOS",322,0)
 . I $D(ZTSK) S ZTREQ="@" W !,"Request "_ZTSK_" queued."
"RTN","PRSNRLOS",323,0)
 E  D
"RTN","PRSNRLOS",324,0)
 . D REPORT
"RTN","PRSNRLOS",325,0)
 Q
"RTN","PRSNRLS0")
0^52^B58835393^n/a
"RTN","PRSNRLS0",1,0)
PRSNRLS0 ;WOIFO/KJS - All Activity at a Nursing Location - Summary and Detailed;12-8-2011
"RTN","PRSNRLS0",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNRLS0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSNRLS0",4,0)
 ;
"RTN","PRSNRLS0",5,0)
 Q
"RTN","PRSNRLS0",6,0)
 ;
"RTN","PRSNRLS0",7,0)
COORD ;Entry point for VANOD Coordinator
"RTN","PRSNRLS0",8,0)
 ; Coordinator has no access limits so let them pick any group
"RTN","PRSNRLS0",9,0)
 N GROUP
"RTN","PRSNRLS0",10,0)
 D PIKGROUP^PRSNUT04(.GROUP,"N",1)
"RTN","PRSNRLS0",11,0)
 ; quit if any error during group selection
"RTN","PRSNRLS0",12,0)
 I $P($G(GROUP(0)),U,2)="E" D  Q
"RTN","PRSNRLS0",13,0)
 .W !,$P(GROUP(0),U,3)
"RTN","PRSNRLS0",14,0)
 D MAIN
"RTN","PRSNRLS0",15,0)
 ;
"RTN","PRSNRLS0",16,0)
 Q
"RTN","PRSNRLS0",17,0)
 ;
"RTN","PRSNRLS0",18,0)
MAIN ;
"RTN","PRSNRLS0",19,0)
 N RANGE,BEG,END,EXTBEG,EXTEND,STOP
"RTN","PRSNRLS0",20,0)
 N DAYBEG,DAYEND
"RTN","PRSNRLS0",21,0)
 N TYPE,BEG,END
"RTN","PRSNRLS0",22,0)
 S STOP=0
"RTN","PRSNRLS0",23,0)
 D TYPE
"RTN","PRSNRLS0",24,0)
 Q:STOP
"RTN","PRSNRLS0",25,0)
 D DATE
"RTN","PRSNRLS0",26,0)
 Q:STOP
"RTN","PRSNRLS0",27,0)
 D QUE
"RTN","PRSNRLS0",28,0)
 Q
"RTN","PRSNRLS0",29,0)
 ;
"RTN","PRSNRLS0",30,0)
REPORT ;for group of location
"RTN","PRSNRLS0",31,0)
 ;
"RTN","PRSNRLS0",32,0)
 N PRSIEN,PRSNG,PICK,PG,LOCIEN,PRSNVER,PRSNTS,PRSNDAY,PPIEN,ENDPP,ENDDAY,BEGPP,BEGDAY,TODAY,PG,TIMEREC
"RTN","PRSNRLS0",33,0)
 N PRSNAME,PRSNSSN,PRSNTL,SKILMIX,PRSL,PRSNDAYS,PRSNDATE
"RTN","PRSNRLS0",34,0)
 N PRSNST,PRSNSP,PRSNTT,PRSNWIEN,HOURS,PRSNTIEN
"RTN","PRSNRLS0",35,0)
 N PRSNTW,PRSNTWD,PRSNM,PRSNRE,PRSNREC,PRSNRIEN,MEAL
"RTN","PRSNRLS0",36,0)
 N PRSNLNG,IEN200,PRIMLOC,PRSNARY,LOCNAM,GHD,PRSD
"RTN","PRSNRLS0",37,0)
 K ^TMP($J,"PRSNR")
"RTN","PRSNRLS0",38,0)
 U IO
"RTN","PRSNRLS0",39,0)
 S PG=0,TODAY=$E(DT,4,5)_"/"_$E(DT,6,7)_"/"_$E(DT,2,3)
"RTN","PRSNRLS0",40,0)
 S BEGPP=$G(^PRST(458,"AD",BEG)),BEGDAY=$P(BEGPP,U,2),BEGPP=+BEGPP
"RTN","PRSNRLS0",41,0)
 S ENDPP=$G(^PRST(458,"AD",END)),ENDDAY=$P(ENDPP,U,2),ENDPP=+ENDPP
"RTN","PRSNRLS0",42,0)
 I TYPE="S" D HDRSUM
"RTN","PRSNRLS0",43,0)
 I TYPE="D" D HDRDET
"RTN","PRSNRLS0",44,0)
 S (PICK,STOP)=0
"RTN","PRSNRLS0",45,0)
 F  S PICK=$O(GROUP(PICK)) Q:PICK=""!STOP  D
"RTN","PRSNRLS0",46,0)
 . S PRSNG=GROUP(0)_"^"_PICK_"^"_GROUP(PICK)
"RTN","PRSNRLS0",47,0)
 . S LOCIEN=+GROUP(PICK)
"RTN","PRSNRLS0",48,0)
 . S LOCNAM=$P($$ISACTIVE^PRSNUT01(DT,LOCIEN),U,2)
"RTN","PRSNRLS0",49,0)
 . S GHD="Location: "_LOCNAM
"RTN","PRSNRLS0",50,0)
 . S TAB=IOM-$L(GHD)/2-5
"RTN","PRSNRLS0",51,0)
 . W !!,?TAB,GHD,!
"RTN","PRSNRLS0",52,0)
 . W ?TAB F I=1:1:$L(GHD) W "-"
"RTN","PRSNRLS0",53,0)
 . ;SORT BY NAME FOR THIS LOCATION
"RTN","PRSNRLS0",54,0)
 . K ^TMP($J,"PRSNR")
"RTN","PRSNRLS0",55,0)
 . S PRSIEN=0
"RTN","PRSNRLS0",56,0)
 . F  S PRSIEN=$O(^PRSN(451,"ALN",LOCIEN,PRSIEN)) Q:'PRSIEN   S PRSNA=$P($G(^PRSPC(PRSIEN,0)),U),^TMP($J,"PRSNR",PRSNA,PRSIEN)=""
"RTN","PRSNRLS0",57,0)
 . S PRSNA=""
"RTN","PRSNRLS0",58,0)
 . F  S PRSNA=$O(^TMP($J,"PRSNR",PRSNA)) Q:PRSNA=""!STOP  D
"RTN","PRSNRLS0",59,0)
 .. S PRSIEN=0
"RTN","PRSNRLS0",60,0)
 .. F  S PRSIEN=$O(^TMP($J,"PRSNR",PRSNA,PRSIEN)) Q:PRSIEN=""!STOP  D
"RTN","PRSNRLS0",61,0)
 ... N WKTOT
"RTN","PRSNRLS0",62,0)
 ... D INFO
"RTN","PRSNRLS0",63,0)
 ... S PPIEN=BEGPP-1
"RTN","PRSNRLS0",64,0)
 ... F  S PPIEN=$O(^PRSN(451,"ALN",LOCIEN,PRSIEN,PPIEN)) Q:'PPIEN!STOP!(PPIEN>ENDPP)  D
"RTN","PRSNRLS0",65,0)
 .... S PRSNDAYS=$G(^PRST(458,PPIEN,1))
"RTN","PRSNRLS0",66,0)
 .... S PRSNDAY=$S(PPIEN=BEGPP:BEGDAY-1,1:0)
"RTN","PRSNRLS0",67,0)
 .... F  S PRSNDAY=$O(^PRSN(451,"ALN",LOCIEN,PRSIEN,PPIEN,PRSNDAY)) Q:'PRSNDAY!STOP!(PPIEN=ENDPP&(PRSNDAY>ENDDAY))  D
"RTN","PRSNRLS0",68,0)
 ..... S PRSNDATE=$P(PRSNDAYS,U,PRSNDAY),PRSNDATE=$E(PRSNDATE,4,5)_"/"_$E(PRSNDATE,6,7)_"/"_$E(PRSNDATE,2,3)
"RTN","PRSNRLS0",69,0)
 ..... S PRSNVER=$O(^PRSN(451,"ALN",LOCIEN,PRSIEN,PPIEN,PRSNDAY,""),-1)
"RTN","PRSNRLS0",70,0)
 ..... S PRSNTS=0,PRSD=1
"RTN","PRSNRLS0",71,0)
 ..... F  S PRSNTS=$O(^PRSN(451,"ALN",LOCIEN,PRSIEN,PPIEN,PRSNDAY,PRSNVER,PRSNTS)) Q:'PRSNTS!STOP  D
"RTN","PRSNRLS0",72,0)
 ...... S TIMEREC=$G(^PRSN(451,PPIEN,"E",PRSIEN,"D",PRSNDAY,"V",PRSNVER,"T",PRSNTS,0))
"RTN","PRSNRLS0",73,0)
 ...... D DATA
"RTN","PRSNRLS0",74,0)
 ...... I TYPE="S" D TOTTIME
"RTN","PRSNRLS0",75,0)
 ...... I TYPE="D" D PRTDET
"RTN","PRSNRLS0",76,0)
 ...Q:STOP
"RTN","PRSNRLS0",77,0)
 ... I TYPE="S" D PRTSUM
"RTN","PRSNRLS0",78,0)
 W !!,"End of Report"
"RTN","PRSNRLS0",79,0)
 D ^%ZISC
"RTN","PRSNRLS0",80,0)
 K ^TMP($J,"PRSNR")
"RTN","PRSNRLS0",81,0)
 Q
"RTN","PRSNRLS0",82,0)
 ;
"RTN","PRSNRLS0",83,0)
INFO ;Find nurse information to display in report
"RTN","PRSNRLS0",84,0)
 ;
"RTN","PRSNRLS0",85,0)
 S PRSL=1
"RTN","PRSNRLS0",86,0)
 S PRSNARY=$G(^PRSPC(PRSIEN,0))
"RTN","PRSNRLS0",87,0)
 S PRSNAME=$P(PRSNARY,U)              ;Nurse Name
"RTN","PRSNRLS0",88,0)
 S PRSNSSN=$P(PRSNARY,U,9)           ;Nurse SSN
"RTN","PRSNRLS0",89,0)
 S PRSNTL=$P(PRSNARY,U,8)             ;Nurse T&L
"RTN","PRSNRLS0",90,0)
 S SKILMIX=$P($$ISNURSE^PRSNUT01(PRSIEN),U,2) ;  Nurse skillmix
"RTN","PRSNRLS0",91,0)
 I SKILMIX["ADMINISTRATIVE" S SKILMIX="ADMIN RN"
"RTN","PRSNRLS0",92,0)
 S IEN200=$G(^PRSPC(PRSIEN,200))
"RTN","PRSNRLS0",93,0)
 S PRIMLOC=$S(IEN200="":"",1:$$PRIMLOC^PRSNUT03(IEN200))
"RTN","PRSNRLS0",94,0)
 Q
"RTN","PRSNRLS0",95,0)
 ;
"RTN","PRSNRLS0",96,0)
DATA ;Extract display data from POCD array
"RTN","PRSNRLS0",97,0)
 ;
"RTN","PRSNRLS0",98,0)
 ;Start Time
"RTN","PRSNRLS0",99,0)
 S PRSNST=$P(TIMEREC,U)
"RTN","PRSNRLS0",100,0)
 ;
"RTN","PRSNRLS0",101,0)
 ;Stop Time 
"RTN","PRSNRLS0",102,0)
 S PRSNSP=$P(TIMEREC,U,2)
"RTN","PRSNRLS0",103,0)
 ;
"RTN","PRSNRLS0",104,0)
 ;Meal Time
"RTN","PRSNRLS0",105,0)
 S MEAL=$P(TIMEREC,U,3)
"RTN","PRSNRLS0",106,0)
 ;
"RTN","PRSNRLS0",107,0)
 ;Get hours worked in a given location
"RTN","PRSNRLS0",108,0)
 S HOURS=$$AMT^PRSPSAPU(PRSNST,PRSNSP,MEAL)
"RTN","PRSNRLS0",109,0)
 ;
"RTN","PRSNRLS0",110,0)
 ;Type of Time code IEN
"RTN","PRSNRLS0",111,0)
 S PRSNTT=$P(TIMEREC,U,4),PRSNLNG=" "
"RTN","PRSNRLS0",112,0)
 I PRSNTT'="" D
"RTN","PRSNRLS0",113,0)
 . ;
"RTN","PRSNRLS0",114,0)
 . ;Type of Time code
"RTN","PRSNRLS0",115,0)
 . S PRSNTIEN=$O(^PRST(457.3,"B",PRSNTT,0))
"RTN","PRSNRLS0",116,0)
 . Q:PRSNTIEN=""
"RTN","PRSNRLS0",117,0)
 . ;
"RTN","PRSNRLS0",118,0)
 . ;Description for Type of Time code
"RTN","PRSNRLS0",119,0)
 . S PRSNLNG=$P(^PRST(457.3,PRSNTIEN,0),U,2)
"RTN","PRSNRLS0",120,0)
 . ;
"RTN","PRSNRLS0",121,0)
 . ;Type of Work Code IEN
"RTN","PRSNRLS0",122,0)
 S PRSNWIEN=$P(TIMEREC,U,6),PRSNTW=" ",PRSNTWD=" "
"RTN","PRSNRLS0",123,0)
 I PRSNWIEN'="" D
"RTN","PRSNRLS0",124,0)
 . ;
"RTN","PRSNRLS0",125,0)
 . ;Type of Work Code
"RTN","PRSNRLS0",126,0)
 . S PRSNTW=$P(^PRSN(451.5,PRSNWIEN,0),U)
"RTN","PRSNRLS0",127,0)
 . ;
"RTN","PRSNRLS0",128,0)
 . ;Description for Type of Work code
"RTN","PRSNRLS0",129,0)
 . S PRSNTWD=$P(^PRSN(451.5,PRSNWIEN,0),U,2)
"RTN","PRSNRLS0",130,0)
 ;
"RTN","PRSNRLS0",131,0)
 ;OT Mandatory/Voluntary
"RTN","PRSNRLS0",132,0)
 S PRSNM=$P(TIMEREC,U,7)
"RTN","PRSNRLS0",133,0)
 Q
"RTN","PRSNRLS0",134,0)
 ;
"RTN","PRSNRLS0",135,0)
TOTTIME ;
"RTN","PRSNRLS0",136,0)
 ; save hours into work array
"RTN","PRSNRLS0",137,0)
 S WKTOT(PRSNLNG,PRSNTWD)=$G(WKTOT(PRSNLNG,PRSNTWD))+HOURS
"RTN","PRSNRLS0",138,0)
 ;
"RTN","PRSNRLS0",139,0)
 Q
"RTN","PRSNRLS0",140,0)
 ;
"RTN","PRSNRLS0",141,0)
HDRSUM ;Display header for report of Individual Nurse Activity
"RTN","PRSNRLS0",142,0)
 ;
"RTN","PRSNRLS0",143,0)
 W @IOF
"RTN","PRSNRLS0",144,0)
 S PG=PG+1,PRSL=1
"RTN","PRSNRLS0",145,0)
 W ?20,"All Activity at a Nurse Location Summary Report"
"RTN","PRSNRLS0",146,0)
 W !,?15,EXTBEG_" - "_EXTEND,?45,"Run Date: ",TODAY,?70,"Page: ",$J(PG,3)
"RTN","PRSNRLS0",147,0)
 W !         ;blank line
"RTN","PRSNRLS0",148,0)
 W !,"Nurse Name",?21,"Type of",?32,"Type of",?48,"Primary Location",?68,"# of",?75,"T&L"
"RTN","PRSNRLS0",149,0)
 W !,"Skill Mix",?22,"Time",?33,"Work",?68,"Hours",?75,"Unit"
"RTN","PRSNRLS0",150,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","PRSNRLS0",151,0)
 ;
"RTN","PRSNRLS0",152,0)
 Q
"RTN","PRSNRLS0",153,0)
 ;
"RTN","PRSNRLS0",154,0)
PRTSUM ;  Loop through Totals array and print each one
"RTN","PRSNRLS0",155,0)
 ;
"RTN","PRSNRLS0",156,0)
 N TT,TWD,HOURS,CNT
"RTN","PRSNRLS0",157,0)
 S TT="",CNT=0
"RTN","PRSNRLS0",158,0)
 F  S TT=$O(WKTOT(TT)) Q:TT=""!STOP  D
"RTN","PRSNRLS0",159,0)
 . S TWD=""
"RTN","PRSNRLS0",160,0)
 . F  S TWD=$O(WKTOT(TT,TWD)) Q:TWD=""!STOP  D
"RTN","PRSNRLS0",161,0)
 .. S HOURS=$G(WKTOT(TT,TWD)),CNT=CNT+1
"RTN","PRSNRLS0",162,0)
 .. D PPP
"RTN","PRSNRLS0",163,0)
 ; need a blank line between nurses when there was only one record printed
"RTN","PRSNRLS0",164,0)
 I CNT=1 W !
"RTN","PRSNRLS0",165,0)
 Q
"RTN","PRSNRLS0",166,0)
 ;
"RTN","PRSNRLS0",167,0)
PPP ;
"RTN","PRSNRLS0",168,0)
 I PRSL W !,$E(PRSNAME,1,19)
"RTN","PRSNRLS0",169,0)
 W ?21,TT,?32,$E(TWD,1,14),?48,$E($P(PRIMLOC,U,3),1,18),?66,$J(HOURS,7,2),?75,PRSNTL
"RTN","PRSNRLS0",170,0)
 W !
"RTN","PRSNRLS0",171,0)
 I PRSL W "  ",$E(SKILMIX,1,17)
"RTN","PRSNRLS0",172,0)
 ;
"RTN","PRSNRLS0",173,0)
 S PRSL=0
"RTN","PRSNRLS0",174,0)
 I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDRSUM
"RTN","PRSNRLS0",175,0)
 Q
"RTN","PRSNRLS0",176,0)
 ;
"RTN","PRSNRLS0",177,0)
HDRDET ;Display header for report of Individual Nurse Activity
"RTN","PRSNRLS0",178,0)
 ;
"RTN","PRSNRLS0",179,0)
 W @IOF
"RTN","PRSNRLS0",180,0)
 S PG=PG+1,(PRSL,PRSD)=1
"RTN","PRSNRLS0",181,0)
 W ?20,"All Activity at a Nurse Location Detail Report"
"RTN","PRSNRLS0",182,0)
 W !,?15,EXTBEG_" - "_EXTEND,?45,"Run Date: ",TODAY,?70,"Page: ",$J(PG,3)
"RTN","PRSNRLS0",183,0)
 W !              ;blank line
"RTN","PRSNRLS0",184,0)
 W !,"Nurse Name",?21,"Last 4",?29,"Start/",?38,"Type of",?49,"Mand",?57,"Meal",?63,"Primary Location/"
"RTN","PRSNRLS0",185,0)
 W !,"Skill Mix",?23,"SSN/",?29,"Stop",?39,"Time",?50,"OT",?57,"Time",?64,"Type of Work"
"RTN","PRSNRLS0",186,0)
 W !,"Date",?23,"T&L",?29,"Time"
"RTN","PRSNRLS0",187,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","PRSNRLS0",188,0)
 ;
"RTN","PRSNRLS0",189,0)
 Q
"RTN","PRSNRLS0",190,0)
 ;
"RTN","PRSNRLS0",191,0)
PRTDET ;Print report
"RTN","PRSNRLS0",192,0)
 I PRSL W !,$E(PRSNAME,1,19)
"RTN","PRSNRLS0",193,0)
 ;PUT DATE ON FIRST LINE IF NAME & SKILL ARE NOT PRINTED
"RTN","PRSNRLS0",194,0)
 I 'PRSL,PRSD W !,"  ",PRSNDATE
"RTN","PRSNRLS0",195,0)
 W ?22,$E(PRSNSSN,6,9)
"RTN","PRSNRLS0",196,0)
 W ?29,PRSNST
"RTN","PRSNRLS0",197,0)
 W ?38,PRSNLNG
"RTN","PRSNRLS0",198,0)
 W ?51,PRSNM
"RTN","PRSNRLS0",199,0)
 W ?58,MEAL
"RTN","PRSNRLS0",200,0)
 W ?65,$E($P(PRIMLOC,U,3),1,14)
"RTN","PRSNRLS0",201,0)
 W !
"RTN","PRSNRLS0",202,0)
 I PRSL W "  ",$E(SKILMIX,1,17)
"RTN","PRSNRLS0",203,0)
 W ?22,PRSNTL
"RTN","PRSNRLS0",204,0)
 W ?29,PRSNSP
"RTN","PRSNRLS0",205,0)
 W ?65,$E(PRSNTWD,1,14)
"RTN","PRSNRLS0",206,0)
 W !
"RTN","PRSNRLS0",207,0)
 ;PUT DATE ON THIRD LINE IF NAME & SKILL ARE PRINTED
"RTN","PRSNRLS0",208,0)
 I PRSL,PRSD W "  ",PRSNDATE,!
"RTN","PRSNRLS0",209,0)
 S (PRSL,PRSD)=0
"RTN","PRSNRLS0",210,0)
 ;
"RTN","PRSNRLS0",211,0)
 I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDRDET
"RTN","PRSNRLS0",212,0)
 Q
"RTN","PRSNRLS0",213,0)
 ;
"RTN","PRSNRLS0",214,0)
TYPE ;Choose summary or detailed group activity report
"RTN","PRSNRLS0",215,0)
 ;
"RTN","PRSNRLS0",216,0)
 N DIR,DIRUT,X,Y
"RTN","PRSNRLS0",217,0)
 S DIR(0)="S^S:Summary Report;D:Detailed Report"
"RTN","PRSNRLS0",218,0)
 S DIR("A")="Enter Selection"
"RTN","PRSNRLS0",219,0)
 S DIR("?")="Enter whether you want to select a Summary or Detailed Group Activity Report"
"RTN","PRSNRLS0",220,0)
 D ^DIR
"RTN","PRSNRLS0",221,0)
 I $D(DIRUT) S STOP=1 Q
"RTN","PRSNRLS0",222,0)
 S TYPE=Y
"RTN","PRSNRLS0",223,0)
 Q
"RTN","PRSNRLS0",224,0)
 ;
"RTN","PRSNRLS0",225,0)
DATE ; User is prompted for a date range 
"RTN","PRSNRLS0",226,0)
 ;
"RTN","PRSNRLS0",227,0)
 S RANGE=$$POCRANGE^PRSNUT01()
"RTN","PRSNRLS0",228,0)
 ; QUIT HERE IF RANGE=0 
"RTN","PRSNRLS0",229,0)
 I +$G(RANGE)'>0 S STOP=1
"RTN","PRSNRLS0",230,0)
 ;
"RTN","PRSNRLS0",231,0)
 S BEG=$P(RANGE,U)
"RTN","PRSNRLS0",232,0)
 S END=$P(RANGE,U,2)
"RTN","PRSNRLS0",233,0)
 S EXTBEG=$P(RANGE,U,3)
"RTN","PRSNRLS0",234,0)
 S EXTEND=$P(RANGE,U,4)
"RTN","PRSNRLS0",235,0)
 ;
"RTN","PRSNRLS0",236,0)
 Q
"RTN","PRSNRLS0",237,0)
 ;
"RTN","PRSNRLS0",238,0)
QUE ;call to generate and display report for individual activity
"RTN","PRSNRLS0",239,0)
 N %ZIS,POP,IOP
"RTN","PRSNRLS0",240,0)
 S %ZIS="MQ"
"RTN","PRSNRLS0",241,0)
 D ^%ZIS
"RTN","PRSNRLS0",242,0)
 Q:POP
"RTN","PRSNRLS0",243,0)
 I $D(IO("Q")) D
"RTN","PRSNRLS0",244,0)
 . K IO("Q")
"RTN","PRSNRLS0",245,0)
 . N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC
"RTN","PRSNRLS0",246,0)
 . S ZTDESC="All Activity at a Nurse Location "_$S(TYPE="S":"Summary",1:"Detail")
"RTN","PRSNRLS0",247,0)
 . S ZTRTN="REPORT^PRSNRLS0"
"RTN","PRSNRLS0",248,0)
 . S ZTSAVE("GROUP")=""
"RTN","PRSNRLS0",249,0)
 . S ZTSAVE("GROUP(")=""
"RTN","PRSNRLS0",250,0)
 . S ZTSAVE("TYPE")=""
"RTN","PRSNRLS0",251,0)
 . S ZTSAVE("BEG")=""
"RTN","PRSNRLS0",252,0)
 . S ZTSAVE("END")=""
"RTN","PRSNRLS0",253,0)
 . S ZTSAVE("EXTBEG")=""
"RTN","PRSNRLS0",254,0)
 . S ZTSAVE("EXTEND")=""
"RTN","PRSNRLS0",255,0)
 . D ^%ZTLOAD
"RTN","PRSNRLS0",256,0)
 . I $D(ZTSK) S ZTREQ="@" W !,"Request "_ZTSK_" queued."
"RTN","PRSNRLS0",257,0)
 E  D
"RTN","PRSNRLS0",258,0)
 . D REPORT
"RTN","PRSNRLS0",259,0)
 Q
"RTN","PRSNRMM")
0^23^B135301607^n/a
"RTN","PRSNRMM",1,0)
PRSNRMM ;WOIFO-JAH - POC Record and Timecard Mismatches;07/31/09
"RTN","PRSNRMM",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNRMM",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSNRMM",4,0)
 Q
"RTN","PRSNRMM",5,0)
 ;
"RTN","PRSNRMM",6,0)
PPMM(PRSIEN,PPI,PG,STOP) ; report mismatches for a pay period
"RTN","PRSNRMM",7,0)
 N PRSD,MM
"RTN","PRSNRMM",8,0)
 S STOP=+$G(STOP)
"RTN","PRSNRMM",9,0)
 S PG=+$G(PG)
"RTN","PRSNRMM",10,0)
 D HDR(.STOP,1,PRSIEN,PPI,.PG)
"RTN","PRSNRMM",11,0)
 F PRSD=1:1:14 Q:STOP  D
"RTN","PRSNRMM",12,0)
 .  K MM
"RTN","PRSNRMM",13,0)
 .  D DAILYMM(.MM,PRSIEN,PPI,PRSD)
"RTN","PRSNRMM",14,0)
 .  Q:MM(0)'>0
"RTN","PRSNRMM",15,0)
 .  W !!,$P($G(^PRST(458,PPI,2)),U,PRSD)
"RTN","PRSNRMM",16,0)
 .  D DISPMM(.MM,.STOP,1,PRSIEN,PPI,PRSD)
"RTN","PRSNRMM",17,0)
 .  I (IOSL-4)<$Y D HDR(.STOP,1,PRSIEN,PPI,.PG)
"RTN","PRSNRMM",18,0)
 Q
"RTN","PRSNRMM",19,0)
DISPMM(MM,STOP,HDR,PRSIEN,PPI,PRSD) ; Display a single day of mismatches between
"RTN","PRSNRMM",20,0)
 ;                  a timecard and a POC record
"RTN","PRSNRMM",21,0)
 ; INPUT:
"RTN","PRSNRMM",22,0)
 ;   MM-(array by reference) call DAILYMM to get an array of 
"RTN","PRSNRMM",23,0)
 ;       mismatches to pass to this display routine
"RTN","PRSNRMM",24,0)
 ;   PPI-(required) pay period IEN
"RTN","PRSNRMM",25,0)
 ;   PRSD-(required) day number in pay period referenced in PPI
"RTN","PRSNRMM",26,0)
 ;   HDR-(optional) set to true if you want a header included
"RTN","PRSNRMM",27,0)
 ;
"RTN","PRSNRMM",28,0)
 ; OUTPUT:
"RTN","PRSNRMM",29,0)
 ;   STOP-reference variable returned as true if the user was
"RTN","PRSNRMM",30,0)
 ;        prompted to continue and responded with an '^' to quit
"RTN","PRSNRMM",31,0)
 ;
"RTN","PRSNRMM",32,0)
 N T1,T2,TT,P1,P2,PT,PTE,TTE,MISM,DASH
"RTN","PRSNRMM",33,0)
 I $G(STOP)'>0 S STOP=0
"RTN","PRSNRMM",34,0)
 I $G(HDR)'>0 S HDR=0
"RTN","PRSNRMM",35,0)
 S DASH=" -"
"RTN","PRSNRMM",36,0)
 S J=0
"RTN","PRSNRMM",37,0)
 F  S J=$O(MM(J)) Q:J'>0!STOP  D
"RTN","PRSNRMM",38,0)
 .  I (IOSL-4)<$Y D HDR(.STOP,HDR,PRSIEN,PPI,.PG)
"RTN","PRSNRMM",39,0)
 .  Q:STOP
"RTN","PRSNRMM",40,0)
 .  S MISM=$G(MM(J))
"RTN","PRSNRMM",41,0)
 .  S T1=$$ETIM($P(MISM,U))
"RTN","PRSNRMM",42,0)
 .  S T2=$$ETIM($P(MISM,U,2))
"RTN","PRSNRMM",43,0)
 .  S TT=$P(MISM,U,3)
"RTN","PRSNRMM",44,0)
 .  S TTE=$P(MISM,U,4)
"RTN","PRSNRMM",45,0)
 .  S P1=$$ETIM($P(MISM,U,5))
"RTN","PRSNRMM",46,0)
 .  S P2=$$ETIM($P(MISM,U,6))
"RTN","PRSNRMM",47,0)
 .  S PT=$P(MISM,U,7)
"RTN","PRSNRMM",48,0)
 .  S PTE=$P(MISM,U,8)
"RTN","PRSNRMM",49,0)
 .  W !,$J(T1,7),DASH,$J(T2,7),?19,TT,?24,TTE,?40,$J(P1,7),DASH,$J(P2,7),?60,PT,?64,PTE
"RTN","PRSNRMM",50,0)
 Q
"RTN","PRSNRMM",51,0)
HDR(STOP,HDR,PRSIEN,PPI,PG) ;
"RTN","PRSNRMM",52,0)
 I PG>0 S STOP=$$ASK^PRSLIB00()
"RTN","PRSNRMM",53,0)
 Q:STOP
"RTN","PRSNRMM",54,0)
 W @IOF,! S PG=PG+1
"RTN","PRSNRMM",55,0)
 I HDR D
"RTN","PRSNRMM",56,0)
 .  N PPE,PPBEG,PPEND,TITLE,TITLE2,PGE,RUNDATE
"RTN","PRSNRMM",57,0)
 .  S PPE=$P($G(^PRST(458,PPI,0)),U)
"RTN","PRSNRMM",58,0)
 .  S PPBEG=$P($G(^PRST(458,PPI,2)),U,1)
"RTN","PRSNRMM",59,0)
 .  S PPEND=$P($G(^PRST(458,PPI,2)),U,14)
"RTN","PRSNRMM",60,0)
 .  S TITLE="Mismatch Report Between ETA Timecard & Point of Care Record"
"RTN","PRSNRMM",61,0)
 .  S TITLE2="for Pay Period "_PPE_" ("_PPBEG_" - "_PPEND_")"
"RTN","PRSNRMM",62,0)
 .  W ?((IOM-$L(TITLE))\2),TITLE
"RTN","PRSNRMM",63,0)
 .  W !,?((IOM-$L(TITLE2))\2),TITLE2
"RTN","PRSNRMM",64,0)
 .  S PGE="Page "_PG
"RTN","PRSNRMM",65,0)
 .  I PG>0 W ?(IOM-$L(PGE)-2),PGE
"RTN","PRSNRMM",66,0)
 .  S RUNDATE="Run Date: "_$E(DT,4,5)_"/"_$E(DT,6,7)_"/"_$E(DT,2,3)
"RTN","PRSNRMM",67,0)
 .  W !,?3,"Nurse: ",$P($G(^PRSPC(PRSIEN,0)),U)
"RTN","PRSNRMM",68,0)
 .  W ?(IOM-$L(RUNDATE)-3),RUNDATE
"RTN","PRSNRMM",69,0)
 .  W !!,?9,"ETA TIMECARD",?46,"POINT OF CARE RECORD"
"RTN","PRSNRMM",70,0)
 .  W !,?2,"=================================",?40,"==================================="
"RTN","PRSNRMM",71,0)
 Q
"RTN","PRSNRMM",72,0)
DAILYMM(MM,PRSIEN,PPI,PRSD) ;
"RTN","PRSNRMM",73,0)
 ; INPUT:
"RTN","PRSNRMM",74,0)
 ;   PRSIEN: 450/451 IEN
"RTN","PRSNRMM",75,0)
 ;   PPI: 451/458 Pay Period IEN
"RTN","PRSNRMM",76,0)
 ;   PRSD: day 1-14 of pay period
"RTN","PRSNRMM",77,0)
 ; OUTPUT:
"RTN","PRSNRMM",78,0)
 ;   MM - mismatch array index 1..n for each mismatch
"RTN","PRSNRMM",79,0)
 ;   MM(0) = number of mismatches and zero for none
"RTN","PRSNRMM",80,0)
 ;   MM(0+n) = TC Seg start^TC Seg Stop^TT^POC seg start^POC seg stop^TT
"RTN","PRSNRMM",81,0)
 ;
"RTN","PRSNRMM",82,0)
 ;Loop through Timecard storing types of time in TD string and TD array
"RTN","PRSNRMM",83,0)
 ;
"RTN","PRSNRMM",84,0)
 N ND,TD
"RTN","PRSNRMM",85,0)
 S MM(0)=0
"RTN","PRSNRMM",86,0)
 D BLDTC(.TD,PRSIEN,PPI,PRSD,0)
"RTN","PRSNRMM",87,0)
 ;
"RTN","PRSNRMM",88,0)
 ; Loop through POC Record storing time in ND string and ND array
"RTN","PRSNRMM",89,0)
 ;
"RTN","PRSNRMM",90,0)
 D BLDPOC(.ND,PRSIEN,PPI,PRSD,0)
"RTN","PRSNRMM",91,0)
 I '$D(ND) S MM="-1^NO POC RECORD" Q
"RTN","PRSNRMM",92,0)
 ;
"RTN","PRSNRMM",93,0)
 ;  Strings will look like
"RTN","PRSNRMM",94,0)
 ;
"RTN","PRSNRMM",95,0)
 ;  TD="00000000000000000AAAAAAAAAAAAAAAAAA000000000000000000000..."
"RTN","PRSNRMM",96,0)
 ;  ND="00000000000000000AAAAAAAAAAAAAAAAAAWWWWWWWWWWWWWWWWWWW00..."
"RTN","PRSNRMM",97,0)
 ;
"RTN","PRSNRMM",98,0)
 ;
"RTN","PRSNRMM",99,0)
 ;  arrays will look like:
"RTN","PRSNRMM",100,0)
 ;
"RTN","PRSNRMM",101,0)
 ;   TD(0)=code^segment start^segment stop^ETA TT
"RTN","PRSNRMM",102,0)
 ;   TD(1)=code^segment start^segment stop^ETA TT
"RTN","PRSNRMM",103,0)
 ;   TD(3)=code^segment start^segment stop^ETA TT
"RTN","PRSNRMM",104,0)
 ;   TD(4)=code^segment start^segment stop^ETA TT
"RTN","PRSNRMM",105,0)
 ;   .....
"RTN","PRSNRMM",106,0)
 ;   TD(188)=code^segment start^segment stop^ETA TT
"RTN","PRSNRMM",107,0)
 ;   TD(189)=code^segment start^segment stop^ETA TT
"RTN","PRSNRMM",108,0)
 ;   TD(190)=code^segment start^segment stop^ETA TT
"RTN","PRSNRMM",109,0)
 ;
"RTN","PRSNRMM",110,0)
 ;   ND(0)=code^segment start^segment stop^POC TT
"RTN","PRSNRMM",111,0)
 ;   ND(1)=code^segment start^segment stop^POC TT
"RTN","PRSNRMM",112,0)
 ;   .....
"RTN","PRSNRMM",113,0)
 ;   ND(191)=code^segment start^segment stop^POC TT
"RTN","PRSNRMM",114,0)
 ;   ND(192)=code^segment start^segment stop^POC TT
"RTN","PRSNRMM",115,0)
 ;
"RTN","PRSNRMM",116,0)
 ;  If strings match there are no mismatches and we are done.
"RTN","PRSNRMM",117,0)
 ;
"RTN","PRSNRMM",118,0)
 I ND=TD Q
"RTN","PRSNRMM",119,0)
 ;
"RTN","PRSNRMM",120,0)
 ; traverse strings until first mismatched characters are found.
"RTN","PRSNRMM",121,0)
 ;  Once a mismatch is found determine the segments associated with
"RTN","PRSNRMM",122,0)
 ; each of the corresponding characters that mismatch.
"RTN","PRSNRMM",123,0)
 ;  This can easily be found because the ND and TD arrays have
"RTN","PRSNRMM",124,0)
 ; stored the start and stop of each segment in the node where
"RTN","PRSNRMM",125,0)
 ; corresponding to the position in the ND and TD strings.
"RTN","PRSNRMM",126,0)
 ;
"RTN","PRSNRMM",127,0)
 N TCBEG,TCEND,TCBEGI,TCENDI,POCTT,POCBEGI,POCENDI,POCBEG,POCEND
"RTN","PRSNRMM",128,0)
 N I,POCTT,POCTTE,TCTT,TCTTE
"RTN","PRSNRMM",129,0)
 F I=1:1:192 I $E(ND,I)'=$E(TD,I) D
"RTN","PRSNRMM",130,0)
 .  S MM(0)=MM(0)+1
"RTN","PRSNRMM",131,0)
 .  S TCTT=$P(TD(I),U,5)
"RTN","PRSNRMM",132,0)
 .  S TCTTE=$$TTE^PRSPSAPU(TCTT)
"RTN","PRSNRMM",133,0)
 .  I $P(TD(I),U,2)="Z" S TCTT="",TCTTE="Unposted Tour"
"RTN","PRSNRMM",134,0)
 .  S TCBEGI=+$P(TD(I),U,3)
"RTN","PRSNRMM",135,0)
 .  S TCENDI=+$P(TD(I),U,4)
"RTN","PRSNRMM",136,0)
 .  S POCTT=$P(ND(I),U,5)
"RTN","PRSNRMM",137,0)
 .  S POCTTE=$$TTE^PRSPSAPU(POCTT)
"RTN","PRSNRMM",138,0)
 .  S POCBEGI=+$P(ND(I),U,3)
"RTN","PRSNRMM",139,0)
 .  S POCENDI=+$P(ND(I),U,4)
"RTN","PRSNRMM",140,0)
 .  S TCBEG=+$G(TD(TCBEGI))
"RTN","PRSNRMM",141,0)
 .  S TCEND=+$G(TD(TCENDI+1))
"RTN","PRSNRMM",142,0)
 .  S POCBEG=+$G(ND(POCBEGI))
"RTN","PRSNRMM",143,0)
 .  S POCEND=+$G(ND(POCENDI+1))
"RTN","PRSNRMM",144,0)
 .;   Adjust end points of segment for clearer reporting when 
"RTN","PRSNRMM",145,0)
 .;   POC or ETA has no data at the point of mismatch
"RTN","PRSNRMM",146,0)
 .  I $E(TD,I)=0 D
"RTN","PRSNRMM",147,0)
 ..   I TCENDI>POCENDI S TCEND=+$G(ND(POCENDI+1))
"RTN","PRSNRMM",148,0)
 ..   I TCBEGI<POCBEGI S TCBEG=+$G(ND(POCBEGI))
"RTN","PRSNRMM",149,0)
 ..   S TCTTE="No Data"
"RTN","PRSNRMM",150,0)
 .  I $E(ND,I)=0 D
"RTN","PRSNRMM",151,0)
 ..   I POCENDI>TCENDI S POCEND=+$G(TD(TCENDI+1))
"RTN","PRSNRMM",152,0)
 ..   I POCBEGI<TCBEGI S POCBEG=+$G(TD(TCBEGI))
"RTN","PRSNRMM",153,0)
 ..   S POCTTE="No Data"
"RTN","PRSNRMM",154,0)
 .  S MM(+MM(0))=TCBEG_U_TCEND_U_TCTT_U_TCTTE_U_POCBEG_U_POCEND_U_POCTT_U_POCTTE
"RTN","PRSNRMM",155,0)
 .;  start the search back up at the end of the shorter segment
"RTN","PRSNRMM",156,0)
 .;  unless there is no time in the shorter segment
"RTN","PRSNRMM",157,0)
 .  I POCENDI=0 S I=TCENDI Q
"RTN","PRSNRMM",158,0)
 .  I TCENDI=0 S I=POCENDI Q
"RTN","PRSNRMM",159,0)
 .  I POCENDI>TCENDI D
"RTN","PRSNRMM",160,0)
 ..    S I=TCENDI
"RTN","PRSNRMM",161,0)
 .  E  D
"RTN","PRSNRMM",162,0)
 ..    S I=POCENDI
"RTN","PRSNRMM",163,0)
 Q
"RTN","PRSNRMM",164,0)
BLDPOC(ND,PRSIEN,PPI,PRSD,ACTIVITY) ; Build string and array from POC day
"RTN","PRSNRMM",165,0)
 ; initialize ND
"RTN","PRSNRMM",166,0)
 ; INPUT:
"RTN","PRSNRMM",167,0)
 ;   PRSIEN: 450 IEN
"RTN","PRSNRMM",168,0)
 ;   PPI:  458/451 IEN
"RTN","PRSNRMM",169,0)
 ;   PRSD: Pay period day number 1-14
"RTN","PRSNRMM",170,0)
 ;   ACTIVITY: flag set to true if you want to have only portions
"RTN","PRSNRMM",171,0)
 ;             of the array with activity to be returned.
"RTN","PRSNRMM",172,0)
 ;   ND: activity string and array
"RTN","PRSNRMM",173,0)
 ;
"RTN","PRSNRMM",174,0)
 N I,POCD,J,CC,SET,T1,T2,TT,SEG
"RTN","PRSNRMM",175,0)
 F I=1:1:192 S $E(ND,I)=0
"RTN","PRSNRMM",176,0)
 F I=1:1:193 S ND(I)=+$$POSTIM(I,1)
"RTN","PRSNRMM",177,0)
 D L1^PRSNRUT1(.POCD,PPI,PRSIEN,PRSD)
"RTN","PRSNRMM",178,0)
 S SEG=0
"RTN","PRSNRMM",179,0)
 F  S SEG=$O(POCD(SEG)) Q:SEG'>0  D
"RTN","PRSNRMM",180,0)
 .  S T1=$$TIMEPOS($P(POCD(SEG),U,9),1)
"RTN","PRSNRMM",181,0)
 .  S T2=$$TIMEPOS($P(POCD(SEG),U,10),0)
"RTN","PRSNRMM",182,0)
 .  S TT=$P(POCD(SEG),U,4)
"RTN","PRSNRMM",183,0)
 .  S CC=$$CONVERT(TT)
"RTN","PRSNRMM",184,0)
 .  F J=T1:1:T2 Q:J>192  S $P(ND(J),U,2,5)=CC_U_T1_U_T2_U_TT,$E(ND,J)=CC
"RTN","PRSNRMM",185,0)
 ; loop through activity again to update all the start and stop
"RTN","PRSNRMM",186,0)
 ; times for each segment, this will give segment start and stops
"RTN","PRSNRMM",187,0)
 ; to periods where there is no data
"RTN","PRSNRMM",188,0)
 ;
"RTN","PRSNRMM",189,0)
 N LQH,NEWSTART,QH,NEWEND
"RTN","PRSNRMM",190,0)
 S LQH=0,NEWSTART=1
"RTN","PRSNRMM",191,0)
 F I=1:1:192 D
"RTN","PRSNRMM",192,0)
 .  S QH=$E(ND,I)
"RTN","PRSNRMM",193,0)
 .  I LQH'=QH S NEWSTART=I,LQH=QH
"RTN","PRSNRMM",194,0)
 .  S $P(ND(I),U,3)=NEWSTART
"RTN","PRSNRMM",195,0)
 ;
"RTN","PRSNRMM",196,0)
 S LQH=0,NEWEND=192
"RTN","PRSNRMM",197,0)
 F I=192:-1:1 D
"RTN","PRSNRMM",198,0)
 .  S QH=$E(ND,I)
"RTN","PRSNRMM",199,0)
 .  I LQH'=QH S NEWEND=I,LQH=QH
"RTN","PRSNRMM",200,0)
 .  S $P(ND(I),U,4)=NEWEND
"RTN","PRSNRMM",201,0)
 ;
"RTN","PRSNRMM",202,0)
 ;
"RTN","PRSNRMM",203,0)
 ; If activity is true remove all nodes with no activity
"RTN","PRSNRMM",204,0)
 ;
"RTN","PRSNRMM",205,0)
 I ACTIVITY D
"RTN","PRSNRMM",206,0)
 . F I=1:1:193 I $P($G(ND(I)),U,2)="" K ND(I)
"RTN","PRSNRMM",207,0)
 . S ND=0
"RTN","PRSNRMM",208,0)
 ;
"RTN","PRSNRMM",209,0)
 Q
"RTN","PRSNRMM",210,0)
BLDTC(TD,PRSIEN,PPI,PRSD,ACTIVITY) ; Build string and array from Time Card day
"RTN","PRSNRMM",211,0)
 ; initialize TD
"RTN","PRSNRMM",212,0)
 ;  INPUT:  standard PRSIEN, PPI, PRSD
"RTN","PRSNRMM",213,0)
 ;          ACTIVITY-(optional) flag set to true if return array
"RTN","PRSNRMM",214,0)
 ;                   should only contain nodes with activity
"RTN","PRSNRMM",215,0)
 ;  OUTPUT:
"RTN","PRSNRMM",216,0)
 ;   TD (string) with 192 characters representing each 15 minutes of
"RTN","PRSNRMM",217,0)
 ;      the day
"RTN","PRSNRMM",218,0)
 ;   if ACTIVITY parameter true then TD string will be set as follows:
"RTN","PRSNRMM",219,0)
 ;        TD = timecard posting status ^ tour of duty IEN
"RTN","PRSNRMM",220,0)
 ;
"RTN","PRSNRMM",221,0)
 ;   TD(1..192)--array with nodes of activity for each 15 min.
"RTN","PRSNRMM",222,0)
 ;
"RTN","PRSNRMM",223,0)
 N I,J,CC,SET,TS,TE,TOUR,T1,T2,TT,TC,TOD,TODD,TCD,X,Y,POSTED,DAYOFF,SEG,NEWSTART,NEWEND,LQH,POC,QH
"RTN","PRSNRMM",224,0)
 F I=1:1:193 S TD(I)=+$$POSTIM(I,1)
"RTN","PRSNRMM",225,0)
 D LOADTOD^PRSPLVU(PPI,PRSIEN,PRSD,.TOD,.TODD)
"RTN","PRSNRMM",226,0)
 D LOADTC^PRSPLVU(PPI,PRSIEN,PRSD,.TCD)
"RTN","PRSNRMM",227,0)
 ;
"RTN","PRSNRMM",228,0)
 ; Check for no time posted on the timecard
"RTN","PRSNRMM",229,0)
 N X0,PSTAT
"RTN","PRSNRMM",230,0)
 S X0=$G(^PRST(458,PPI,"E",PRSIEN,"D",PRSD,0))
"RTN","PRSNRMM",231,0)
 ;
"RTN","PRSNRMM",232,0)
 ; posting status--(T)imekeeper, (P)ayroll, (X)mitted
"RTN","PRSNRMM",233,0)
 S PSTAT=$P($G(^PRST(458,PPI,"E",PRSIEN,"D",PRSD,10)),U,1)
"RTN","PRSNRMM",234,0)
 ;
"RTN","PRSNRMM",235,0)
 ; tour of duty (1=day off, 3,4=intermittent)
"RTN","PRSNRMM",236,0)
 S TC=$P(X0,U,2)
"RTN","PRSNRMM",237,0)
 S POSTED=1
"RTN","PRSNRMM",238,0)
 I "1 3 4"'[TC,PSTAT="" S (PSTAT,POSTED)=0 ;  - no posting to tour
"RTN","PRSNRMM",239,0)
 ;
"RTN","PRSNRMM",240,0)
 F I=1:1:192 S $E(TD,I)=0
"RTN","PRSNRMM",241,0)
 ;
"RTN","PRSNRMM",242,0)
 S SEG=0
"RTN","PRSNRMM",243,0)
 F  S SEG=$O(TOD(SEG)) Q:SEG'>0  D
"RTN","PRSNRMM",244,0)
 .  S TT=$P(TOD(SEG),U,3)
"RTN","PRSNRMM",245,0)
 .  I TT="RG" S TT="WI"
"RTN","PRSNRMM",246,0)
 .  S CC=$$CONVERT(TT)
"RTN","PRSNRMM",247,0)
 .  S POC=$$CNVTTPOC(TT)
"RTN","PRSNRMM",248,0)
 .  I 'POSTED S CC="Z"
"RTN","PRSNRMM",249,0)
 .  S T1=$P(TOD(SEG),U,4)
"RTN","PRSNRMM",250,0)
 .  S X=T1,Y=0 D MIL^PRSATIM S T1=Y
"RTN","PRSNRMM",251,0)
 .  S T2=$P(TOD(SEG),U,5)
"RTN","PRSNRMM",252,0)
 .  S X=T2,Y=1 D MIL^PRSATIM S T2=Y
"RTN","PRSNRMM",253,0)
 .  ; if the start time is earlier than the stop time then it
"RTN","PRSNRMM",254,0)
 .  ; must be a time on a second day of a two day tour
"RTN","PRSNRMM",255,0)
 .  I T1>T2 S T2=T2+2400
"RTN","PRSNRMM",256,0)
 .  S TOUR(T1)=T2
"RTN","PRSNRMM",257,0)
 .  S T1=$$TIMEPOS(T1,1)
"RTN","PRSNRMM",258,0)
 .  S T2=$$TIMEPOS(T2,0)
"RTN","PRSNRMM",259,0)
 .  F J=T1:1:T2 Q:J>192  S $P(TD(J),U,2,6)=CC_U_T1_U_T2_U_TT_U_POC,$E(TD,J)=CC
"RTN","PRSNRMM",260,0)
 ;
"RTN","PRSNRMM",261,0)
 ; place posted exceptions
"RTN","PRSNRMM",262,0)
 ;
"RTN","PRSNRMM",263,0)
 S SEG=0
"RTN","PRSNRMM",264,0)
 F  S SEG=$O(TCD(SEG)) Q:SEG'>0  D
"RTN","PRSNRMM",265,0)
 .  S TT=$P(TCD(SEG),U,3)
"RTN","PRSNRMM",266,0)
 .  S T1=$P(TCD(SEG),U,4)
"RTN","PRSNRMM",267,0)
 .  S X=T1,Y=0 D MIL^PRSATIM S T1=Y
"RTN","PRSNRMM",268,0)
 .  S T2=$P(TCD(SEG),U,5)
"RTN","PRSNRMM",269,0)
 .  S X=T2,Y=1 D MIL^PRSATIM S T2=Y
"RTN","PRSNRMM",270,0)
 .  ; try to place exceptions on the correct day
"RTN","PRSNRMM",271,0)
 .  S T1=$$PLACEX(T1,T2,.TOUR)
"RTN","PRSNRMM",272,0)
 .  ; if the start time is earlier than the stop time then it
"RTN","PRSNRMM",273,0)
 .  ; must be a time on a second day of a two day tour
"RTN","PRSNRMM",274,0)
 .  I T1>T2 S T2=T2+2400
"RTN","PRSNRMM",275,0)
 .  S T1=$$TIMEPOS(T1,1)
"RTN","PRSNRMM",276,0)
 .  S T2=$$TIMEPOS(T2,0)
"RTN","PRSNRMM",277,0)
 .  S CC=$$CONVERT(TT)
"RTN","PRSNRMM",278,0)
 .  S POC=$$CNVTTPOC(TT)
"RTN","PRSNRMM",279,0)
 .  F J=T1:1:T2 Q:J>192  S $P(TD(J),U,2,6)=CC_U_T1_U_T2_U_TT_U_POC,$E(TD,J)=CC
"RTN","PRSNRMM",280,0)
 ;
"RTN","PRSNRMM",281,0)
 ; place meal
"RTN","PRSNRMM",282,0)
 ;TODD(1)="3090917^3090918.08^30^2"
"RTN","PRSNRMM",283,0)
 N LEN,LONGSEG,MEAL,EN,STPOS,ENPOS,MIDPOS,MLOC,ST
"RTN","PRSNRMM",284,0)
 I +$P($G(TODD(1)),U,3)>0 D
"RTN","PRSNRMM",285,0)
 .S MEAL=0
"RTN","PRSNRMM",286,0)
 .F  S MEAL=$O(TODD(MEAL)) Q:MEAL'>0  D
"RTN","PRSNRMM",287,0)
 ..   S LEN=$P(TODD(MEAL),U,3)
"RTN","PRSNRMM",288,0)
 ..   S LONGSEG=$P(TODD(MEAL),U,4)
"RTN","PRSNRMM",289,0)
 ..;;;;;; start of longest tour segment
"RTN","PRSNRMM",290,0)
 ..   S ST=$P(TOD(MEAL_"-"_LONGSEG),U,4)
"RTN","PRSNRMM",291,0)
 ..   S X=ST,Y=0 D MIL^PRSATIM S ST=Y
"RTN","PRSNRMM",292,0)
 ..;;;;;; end of longest tour segment
"RTN","PRSNRMM",293,0)
 ..   S EN=$P(TOD(MEAL_"-"_LONGSEG),U,5)
"RTN","PRSNRMM",294,0)
 ..   S X=EN,Y=1 D MIL^PRSATIM S EN=Y
"RTN","PRSNRMM",295,0)
 ..;
"RTN","PRSNRMM",296,0)
 ..   I ST>EN S EN=EN+2400
"RTN","PRSNRMM",297,0)
 ..;;;;;;
"RTN","PRSNRMM",298,0)
 ..   S STPOS=$$TIMEPOS(ST,1)
"RTN","PRSNRMM",299,0)
 ..   S ENPOS=$$TIMEPOS(EN,0)
"RTN","PRSNRMM",300,0)
 ..   S MIDPOS=STPOS+((ENPOS-STPOS)\2)
"RTN","PRSNRMM",301,0)
 ..;;;;;;; get starting location of the segment where this midway falls
"RTN","PRSNRMM",302,0)
 ..   S MLOC=$P(TD(MIDPOS),U,3)
"RTN","PRSNRMM",303,0)
 ..   S $P(TD(MLOC),U,7)=LEN
"RTN","PRSNRMM",304,0)
 ; loop through activity again to update all the start and stop
"RTN","PRSNRMM",305,0)
 ; times for each segment, since exceptions that overwrote the tour
"RTN","PRSNRMM",306,0)
 ; will change the start and stops for subsections of tour
"RTN","PRSNRMM",307,0)
 ;
"RTN","PRSNRMM",308,0)
 S LQH=0,NEWSTART=1
"RTN","PRSNRMM",309,0)
 F I=1:1:192 D
"RTN","PRSNRMM",310,0)
 .  S QH=$E(TD,I)
"RTN","PRSNRMM",311,0)
 .  I LQH'=QH S NEWSTART=I,LQH=QH
"RTN","PRSNRMM",312,0)
 .  S $P(TD(I),U,3)=NEWSTART
"RTN","PRSNRMM",313,0)
 ;
"RTN","PRSNRMM",314,0)
 S LQH=0,NEWEND=192
"RTN","PRSNRMM",315,0)
 F I=192:-1:1 D
"RTN","PRSNRMM",316,0)
 .  S QH=$E(TD,I)
"RTN","PRSNRMM",317,0)
 .  I LQH'=QH S NEWEND=I,LQH=QH
"RTN","PRSNRMM",318,0)
 .  S $P(TD(I),U,4)=NEWEND
"RTN","PRSNRMM",319,0)
 ;
"RTN","PRSNRMM",320,0)
 ; If activity is true remove all nodes with no activity
"RTN","PRSNRMM",321,0)
 ;
"RTN","PRSNRMM",322,0)
 I ACTIVITY D
"RTN","PRSNRMM",323,0)
 . F I=1:1:193 I $P($G(TD(I)),U,2)="" K TD(I)
"RTN","PRSNRMM",324,0)
 . S TD=PSTAT_U_TC
"RTN","PRSNRMM",325,0)
 ;
"RTN","PRSNRMM",326,0)
 Q
"RTN","PRSNRMM",327,0)
 ;
"RTN","PRSNRMM",328,0)
PLACEX(T1,T2,TOUR) ;
"RTN","PRSNRMM",329,0)
 ;
"RTN","PRSNRMM",330,0)
 N TS,TE,NEWT1,TEMPT1
"RTN","PRSNRMM",331,0)
 ;need to make two passes on the tour array as there may be more than one tour
"RTN","PRSNRMM",332,0)
 ;and need to make sure that the exception doesn't fit within any tour before adjusting
"RTN","PRSNRMM",333,0)
 S NEWT1=""
"RTN","PRSNRMM",334,0)
 S TS=""
"RTN","PRSNRMM",335,0)
 F  S TS=$O(TOUR(TS)) Q:TS=""  D  Q:NEWT1'=""
"RTN","PRSNRMM",336,0)
 . S TE=TOUR(TS)
"RTN","PRSNRMM",337,0)
 . I T1'<TS D  Q:NEWT1'=""
"RTN","PRSNRMM",338,0)
 .. ; this time segment falls within the tour, so fits
"RTN","PRSNRMM",339,0)
 .. I T1'>TE S NEWT1=T1 Q
"RTN","PRSNRMM",340,0)
 .. ; this time segment starts no more than 4 hours after tour, then probably fits
"RTN","PRSNRMM",341,0)
 .. I $$TIMEDIF(TE,T1)'>240 S NEWT1=T1 Q
"RTN","PRSNRMM",342,0)
 . I T1<TS D  Q:NEWT1'=""
"RTN","PRSNRMM",343,0)
 .. ; this time segment starts no more than 4 hours before tour, then probably fits
"RTN","PRSNRMM",344,0)
 .. I $$TIMEDIF(T1,TS)'>240 S NEWT1=T1 Q
"RTN","PRSNRMM",345,0)
 ;
"RTN","PRSNRMM",346,0)
 I NEWT1'="" Q NEWT1
"RTN","PRSNRMM",347,0)
 ;
"RTN","PRSNRMM",348,0)
 ; looks like we have a segment that should be starting in day two
"RTN","PRSNRMM",349,0)
 ; but need to see if that fits
"RTN","PRSNRMM",350,0)
 S TEMPT1=T1+2400
"RTN","PRSNRMM",351,0)
 S TS=""
"RTN","PRSNRMM",352,0)
 F  S TS=$O(TOUR(TS)) Q:TS=""  D  Q:NEWT1'=""
"RTN","PRSNRMM",353,0)
 . S TE=TOUR(TS)
"RTN","PRSNRMM",354,0)
 . I TEMPT1'<TS D  Q:NEWT1'=""
"RTN","PRSNRMM",355,0)
 .. ; this time segment falls within the tour, so fits
"RTN","PRSNRMM",356,0)
 .. I TEMPT1'>TE S NEWT1=TEMPT1 Q
"RTN","PRSNRMM",357,0)
 .. ; this time segment starts no more than 4 hours after tour, then probably fits
"RTN","PRSNRMM",358,0)
 .. I $$TIMEDIF(TE,TEMPT1)'>240 S NEWT1=TEMPT1 Q
"RTN","PRSNRMM",359,0)
 ;
"RTN","PRSNRMM",360,0)
 ;if we didn't find it earlier, then just leave it as the originally entered time
"RTN","PRSNRMM",361,0)
 ;and if that is wrong, user will need to adjust it
"RTN","PRSNRMM",362,0)
 I NEWT1="" S NEWT1=T1
"RTN","PRSNRMM",363,0)
 ;
"RTN","PRSNRMM",364,0)
 Q NEWT1
"RTN","PRSNRMM",365,0)
 ;
"RTN","PRSNRMM",366,0)
TIMEDIF(TIME1,TIME2) ;
"RTN","PRSNRMM",367,0)
 ;
"RTN","PRSNRMM",368,0)
 ;SUBTRACT TIME1 FROM TIME2
"RTN","PRSNRMM",369,0)
 ;RETURN TIME DIFFERENCE IN MINUTES
"RTN","PRSNRMM",370,0)
 N HOUR,MIN,DIFF,MIN1,MIN2
"RTN","PRSNRMM",371,0)
 S MIN=TIME1#100,HOUR=TIME1\100,MIN1=HOUR*60+MIN
"RTN","PRSNRMM",372,0)
 S MIN=TIME2#100,HOUR=TIME2\100,MIN2=HOUR*60+MIN
"RTN","PRSNRMM",373,0)
 S DIFF=MIN2-MIN1
"RTN","PRSNRMM",374,0)
 Q DIFF
"RTN","PRSNRMM",375,0)
 ;
"RTN","PRSNRMM",376,0)
CNVTTPOC(TT) ; convert an ETA type of time to POC time
"RTN","PRSNRMM",377,0)
 N TC,POC,CODEPOS
"RTN","PRSNRMM",378,0)
 S POC="AA^AA^AD^AL^CB^CU^DL^RL^RS^HX^ML^SL^WP^NL^NP^WI^TR^TV^WO^WO^WO^WO^HW^^^^"
"RTN","PRSNRMM",379,0)
 S TC="AA^CP^AD^AL^CB^CU^DL^RL^RS^HX^ML^SL^WP^NL^NP^WI^TR^TV^WO^OT^CT^RG^HW^UN^ON^SB^"
"RTN","PRSNRMM",380,0)
 S CODEPOS=$FIND(TC,TT)
"RTN","PRSNRMM",381,0)
 Q $P(POC,U,CODEPOS/3)
"RTN","PRSNRMM",382,0)
 ;
"RTN","PRSNRMM",383,0)
CONVERT(TT) ; Convert a type of time code to a comparison code
"RTN","PRSNRMM",384,0)
 ;                                            COMPARISON
"RTN","PRSNRMM",385,0)
 ; ETA                   POC                   STRINGS
"RTN","PRSNRMM",386,0)
 ; CODE ETA DX          CODE    POC DX         CODE
"RTN","PRSNRMM",387,0)
 ; ==== ===============  =====   ===========    =====
"RTN","PRSNRMM",388,0)
 ; AA   Auth Abs           AA    Auth Abs         A
"RTN","PRSNRMM",389,0)
 ; CP   Cont of Pay        AA    Auth Abs         A
"RTN","PRSNRMM",390,0)
 ; AD   Adoption           AD    Adoption         D
"RTN","PRSNRMM",391,0)
 ; AL   Annual Leave       AL    Annual Leave     L
"RTN","PRSNRMM",392,0)
 ; CB   Fam Care Bereav    CB    Fam Care Bereav  B
"RTN","PRSNRMM",393,0)
 ; CU   Comp/Cred Used     CU    Comp/Cred Used   U
"RTN","PRSNRMM",394,0)
 ; DL   Donor Leave        DL    Donor Leave      d
"RTN","PRSNRMM",395,0)
 ; RL   Restored AL        RL    Restored AL      R
"RTN","PRSNRMM",396,0)
 ; RS   Recess             RS    Recess           r
"RTN","PRSNRMM",397,0)
 ; HX   Holiday Excused    HX    Holiday Excused  h
"RTN","PRSNRMM",398,0)
 ; ML   Military Leave     ML    Military Leave   M
"RTN","PRSNRMM",399,0)
 ; SL   Sick Leave         SL    Sick Leave       S
"RTN","PRSNRMM",400,0)
 ; WP   Leave w/o Pay      WP    Leave w/o Pay    W
"RTN","PRSNRMM",401,0)
 ; NL   Non-Pay AL         NL    Non-Pay AL       n
"RTN","PRSNRMM",402,0)
 ; NP   Non-Pay            NP    Non-Pay          N
"RTN","PRSNRMM",403,0)
 ;      Tour Time (posted) WI    Work in tour     W
"RTN","PRSNRMM",404,0)
 ; TR   Train (in tour)    TR    Work in Tour     W
"RTN","PRSNRMM",405,0)
 ; TV   Travel (in tour)   TV    Work in Tour     W
"RTN","PRSNRMM",406,0)
 ; OT   Overtime           WO    Work out of tour w
"RTN","PRSNRMM",407,0)
 ; CT   Comp/Cred Earn     WO    Work out of tour w
"RTN","PRSNRMM",408,0)
 ; RG   Reg Sched          WO    Work out of tour w
"RTN","PRSNRMM",409,0)
 ; HW   Hol Work (in tour) HW                     H
"RTN","PRSNRMM",410,0)
 ; UN   Unavailable      Not reported          Ignored
"RTN","PRSNRMM",411,0)
 ; ON   On-Call          Not reported          Ignored
"RTN","PRSNRMM",412,0)
 ; SB   Standby          Not reported          Ignored
"RTN","PRSNRMM",413,0)
 ;
"RTN","PRSNRMM",414,0)
 N TC,CC,CODEPOS
"RTN","PRSNRMM",415,0)
 S CC="AADLBUdRrhMSWnNWWWwwwwH000"
"RTN","PRSNRMM",416,0)
 S TC="AA^CP^AD^AL^CB^CU^DL^RL^RS^HX^ML^SL^WP^NL^NP^WI^TR^TV^WO^OT^CT^RG^HW^UN^ON^SB^"
"RTN","PRSNRMM",417,0)
 S CODEPOS=$FIND(TC,TT)
"RTN","PRSNRMM",418,0)
 Q $E(CC,CODEPOS/3)
"RTN","PRSNRMM",419,0)
 ;
"RTN","PRSNRMM",420,0)
TIMEPOS(MT,SORE) ; Convert MILTIME to positional int. where 1 represents
"RTN","PRSNRMM",421,0)
 ; the period from Mid-12:15, 2 - 12:15-12:30, and so on, with 96 
"RTN","PRSNRMM",422,0)
 ; representing the period from 11:45pm to mid.
"RTN","PRSNRMM",423,0)
 ;
"RTN","PRSNRMM",424,0)
 ;  INPUT:
"RTN","PRSNRMM",425,0)
 ;      MT: military time from 0 to 4800 (2 day clock)
"RTN","PRSNRMM",426,0)
 ;      SORE-flag 0 for start time 1 for end time (required)
"RTN","PRSNRMM",427,0)
 ;  OUTPUT:
"RTN","PRSNRMM",428,0)
 ;      integer value specifying the position in a string
"RTN","PRSNRMM",429,0)
 ;      where each position represents a 15 minute increment of the day
"RTN","PRSNRMM",430,0)
 ; 0=1
"RTN","PRSNRMM",431,0)
 ; 15=2
"RTN","PRSNRMM",432,0)
 ; 30=3
"RTN","PRSNRMM",433,0)
 ; ...
"RTN","PRSNRMM",434,0)
 ; 300=13
"RTN","PRSNRMM",435,0)
 ; 315=14
"RTN","PRSNRMM",436,0)
 ; ...
"RTN","PRSNRMM",437,0)
 ; 1000=50
"RTN","PRSNRMM",438,0)
 ; ...
"RTN","PRSNRMM",439,0)
 ; 1100=55
"RTN","PRSNRMM",440,0)
 ;
"RTN","PRSNRMM",441,0)
 Q ((MT\100)*4)+((("."_$P(MT/100,".",2))*100)/15)+$G(SORE)
"RTN","PRSNRMM",442,0)
 ;
"RTN","PRSNRMM",443,0)
POSTIM(I,BORE) ; convert the positional integer time to military time
"RTN","PRSNRMM",444,0)
 ;  INPUT: BORE-0=START, 1=END, flag specifies if this is a 
"RTN","PRSNRMM",445,0)
 ;           start time or end time
"RTN","PRSNRMM",446,0)
 N MINS
"RTN","PRSNRMM",447,0)
 S I=I-$G(BORE)
"RTN","PRSNRMM",448,0)
 S MINS=I#4*15 I 'MINS S MINS="00"
"RTN","PRSNRMM",449,0)
 Q (I\4)_MINS
"RTN","PRSNRMM",450,0)
 ;
"RTN","PRSNRMM",451,0)
 ;
"RTN","PRSNRMM",452,0)
ETIM(MIL) ; Convert a military time to a standard time
"RTN","PRSNRMM",453,0)
 ;
"RTN","PRSNRMM",454,0)
 N T,H,M
"RTN","PRSNRMM",455,0)
 I (MIL#2400)=0 Q "MID"
"RTN","PRSNRMM",456,0)
 I (MIL#1200)=0 Q "NOON"
"RTN","PRSNRMM",457,0)
 S T=MIL/100 S H=$P(T,".",1),M=$P(T,".",2)
"RTN","PRSNRMM",458,0)
 I (H#12)=0 Q "12"_":"_M_$S(H=12:"PM",H=24:"AM",1:"PM")
"RTN","PRSNRMM",459,0)
 S M=$S($L(M)=0:"00",$L(M)=1:M_"0",1:M)
"RTN","PRSNRMM",460,0)
 I (MIL<1200) Q H_":"_M_"AM"
"RTN","PRSNRMM",461,0)
 I MIL>1200,MIL<2400 Q H-12_":"_M_"PM"
"RTN","PRSNRMM",462,0)
 I MIL>2400,MIL<3600 Q H-24_":"_M_"AM"
"RTN","PRSNRMM",463,0)
 I MIL>3600 Q H-36_":"_M_"PM"
"RTN","PRSNRMM",464,0)
 Q -1
"RTN","PRSNRMM1")
0^24^B24342033^n/a
"RTN","PRSNRMM1",1,0)
PRSNRMM1 ;WOIFO-JAH - POC Record and Timecard Mismatches;07/31/09
"RTN","PRSNRMM1",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNRMM1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSNRMM1",4,0)
 Q
"RTN","PRSNRMM1",5,0)
 ;
"RTN","PRSNRMM1",6,0)
NURSE ;Nurse view their own mismatch data entry point
"RTN","PRSNRMM1",7,0)
 N PRSIEN,SSN,X
"RTN","PRSNRMM1",8,0)
 S PRSIEN="",SSN=$P($G(^VA(200,DUZ,1)),"^",9)
"RTN","PRSNRMM1",9,0)
 I SSN'="" S PRSIEN=$O(^PRSPC("SSN",SSN,0))
"RTN","PRSNRMM1",10,0)
 I 'PRSIEN D  Q
"RTN","PRSNRMM1",11,0)
 .  W !!,*7
"RTN","PRSNRMM1",12,0)
 .  W "Your SSN was not found in both the New Person & Employee File!"
"RTN","PRSNRMM1",13,0)
 ;
"RTN","PRSNRMM1",14,0)
 ; if not in 450 as a nurse then explain and quit
"RTN","PRSNRMM1",15,0)
 I +$$ISNURSE^PRSNUT01(PRSIEN)'>0 D NOTNRSDX  Q
"RTN","PRSNRMM1",16,0)
 ;
"RTN","PRSNRMM1",17,0)
 ; get pay period and report mismatches
"RTN","PRSNRMM1",18,0)
 D MAIN(PRSIEN)
"RTN","PRSNRMM1",19,0)
 Q
"RTN","PRSNRMM1",20,0)
 ;
"RTN","PRSNRMM1",21,0)
NOTNRSDX ;
"RTN","PRSNRMM1",22,0)
 N X
"RTN","PRSNRMM1",23,0)
 W !!,*7
"RTN","PRSNRMM1",24,0)
 W ?5,"Your PAID-ETA parameters for your current log on do not reflect"
"RTN","PRSNRMM1",25,0)
 W !,?5,"the parameters required for Nursing Point of Care Data.",!
"RTN","PRSNRMM1",26,0)
 S X=$$ASK^PRSLIB00(1)
"RTN","PRSNRMM1",27,0)
 Q
"RTN","PRSNRMM1",28,0)
COORD ;VANOD Site Coordinator entry point
"RTN","PRSNRMM1",29,0)
 ; Coordinator has no access limits so let them pick any nurse
"RTN","PRSNRMM1",30,0)
 N DIC,X,Y,DUOUT,DTOUT,PRSIEN
"RTN","PRSNRMM1",31,0)
 S DIC="^PRSPC(",DIC(0)="AEQMZ",DIC("S")="I $$ISNURSE^PRSNUT01(Y)"
"RTN","PRSNRMM1",32,0)
 D ^DIC
"RTN","PRSNRMM1",33,0)
 Q:Y'>0!$D(DTOUT)!$D(DUOUT)
"RTN","PRSNRMM1",34,0)
 S PRSIEN=$P(Y,U)
"RTN","PRSNRMM1",35,0)
 D MAIN(PRSIEN)
"RTN","PRSNRMM1",36,0)
 Q
"RTN","PRSNRMM1",37,0)
 ;
"RTN","PRSNRMM1",38,0)
DAP ; POC data approval personnel entry point
"RTN","PRSNRMM1",39,0)
 N GROUP,VALUE,PRSIEN
"RTN","PRSNRMM1",40,0)
 ; prompt DEP to select a group to report on.  They must have
"RTN","PRSNRMM1",41,0)
 ; access to the group.
"RTN","PRSNRMM1",42,0)
 ;
"RTN","PRSNRMM1",43,0)
 D ACCESS^PRSNUT02(.GROUP,"A",DT,0)
"RTN","PRSNRMM1",44,0)
 ;
"RTN","PRSNRMM1",45,0)
 ; quit if any error during group selection
"RTN","PRSNRMM1",46,0)
 I $P($G(GROUP(0)),U,2)="E" W !!!,?4,$P(GROUP(0),U,3) S X=$$ASK^PRSLIB00(1) Q
"RTN","PRSNRMM1",47,0)
 S VALUE=+GROUP($O(GROUP(0)))
"RTN","PRSNRMM1",48,0)
 Q:VALUE'>0
"RTN","PRSNRMM1",49,0)
 S PRSIEN=+$$PICKNURS^PRSNUT03($P(GROUP(0),U,2),VALUE)
"RTN","PRSNRMM1",50,0)
 Q:PRSIEN'>0
"RTN","PRSNRMM1",51,0)
 D MAIN(PRSIEN)
"RTN","PRSNRMM1",52,0)
 Q
"RTN","PRSNRMM1",53,0)
 ;
"RTN","PRSNRMM1",54,0)
DEP ; Entry point for mismatches for Data Entry Personnel.
"RTN","PRSNRMM1",55,0)
 ;
"RTN","PRSNRMM1",56,0)
 N GROUP,VALUE,PRSIEN
"RTN","PRSNRMM1",57,0)
 ; prompt DEP to select a group to report on.  They must have
"RTN","PRSNRMM1",58,0)
 ; access to the group.
"RTN","PRSNRMM1",59,0)
 ;
"RTN","PRSNRMM1",60,0)
 D ACCESS^PRSNUT02(.GROUP,"E",DT,0)
"RTN","PRSNRMM1",61,0)
 ;
"RTN","PRSNRMM1",62,0)
 ; quit if any error during group selection
"RTN","PRSNRMM1",63,0)
 I $P($G(GROUP(0)),U,2)="E" W !!!,?4,$P(GROUP(0),U,3) S X=$$ASK^PRSLIB00(1) Q
"RTN","PRSNRMM1",64,0)
 S VALUE=+GROUP($O(GROUP(0)))
"RTN","PRSNRMM1",65,0)
 Q:VALUE'>0
"RTN","PRSNRMM1",66,0)
 S PRSIEN=+$$PICKNURS^PRSNUT03($P(GROUP(0),U,2),VALUE)
"RTN","PRSNRMM1",67,0)
 Q:PRSIEN'>0
"RTN","PRSNRMM1",68,0)
 D MAIN(PRSIEN)
"RTN","PRSNRMM1",69,0)
 Q
"RTN","PRSNRMM1",70,0)
 ;
"RTN","PRSNRMM1",71,0)
 ;= = = = = = = = = = = = = = = = = =
"RTN","PRSNRMM1",72,0)
 ;
"RTN","PRSNRMM1",73,0)
MAIN(PRSIEN) ;
"RTN","PRSNRMM1",74,0)
 ;
"RTN","PRSNRMM1",75,0)
 N DIC,X,Y,DUOUT,DTOUT,PPI
"RTN","PRSNRMM1",76,0)
MAIN1 ;
"RTN","PRSNRMM1",77,0)
 S DIC="^PRSN(451,",DIC(0)="AEQMZ"
"RTN","PRSNRMM1",78,0)
 S DIC("A")="Select a Pay Period: "
"RTN","PRSNRMM1",79,0)
 D ^DIC
"RTN","PRSNRMM1",80,0)
 Q:$D(DUOUT)!$D(DTOUT)
"RTN","PRSNRMM1",81,0)
 I $G(Y)'>0 W $C(7),"  Invalid Pay Period" G MAIN1
"RTN","PRSNRMM1",82,0)
 S PPI=+Y
"RTN","PRSNRMM1",83,0)
 N %ZIS,POP,IOP
"RTN","PRSNRMM1",84,0)
 S %ZIS="MQ"
"RTN","PRSNRMM1",85,0)
 D ^%ZIS
"RTN","PRSNRMM1",86,0)
 Q:POP
"RTN","PRSNRMM1",87,0)
 I $D(IO("Q")) D
"RTN","PRSNRMM1",88,0)
 . K IO("Q")
"RTN","PRSNRMM1",89,0)
 . N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC
"RTN","PRSNRMM1",90,0)
 . S ZTDESC="PRSN POC/ETA MISMATCH REPORT"
"RTN","PRSNRMM1",91,0)
 . S ZTRTN="REP^PRSNRMM1"
"RTN","PRSNRMM1",92,0)
 . S ZTSAVE("PRSIEN")=""
"RTN","PRSNRMM1",93,0)
 . S ZTSAVE("PPI")=""
"RTN","PRSNRMM1",94,0)
 . D ^%ZTLOAD
"RTN","PRSNRMM1",95,0)
 . I $D(ZTSK) S ZTREQ="@" W !,"Request "_ZTSK_" Queued."
"RTN","PRSNRMM1",96,0)
 E  D
"RTN","PRSNRMM1",97,0)
 . D REP
"RTN","PRSNRMM1",98,0)
 Q
"RTN","PRSNRMM1",99,0)
 ;
"RTN","PRSNRMM1",100,0)
REP ;
"RTN","PRSNRMM1",101,0)
 U IO
"RTN","PRSNRMM1",102,0)
 D PPMM^PRSNRMM(PRSIEN,PPI)
"RTN","PRSNRMM1",103,0)
 W !!,"End of Report"
"RTN","PRSNRMM1",104,0)
 D ^%ZISC
"RTN","PRSNRMM1",105,0)
 Q
"RTN","PRSNRMM1",106,0)
 ;
"RTN","PRSNRMM1",107,0)
TL ;Entry point for T&L Unit report
"RTN","PRSNRMM1",108,0)
 ; Report has no access limits so let them pick any T&L group
"RTN","PRSNRMM1",109,0)
 N GROUP
"RTN","PRSNRMM1",110,0)
 D PIKGROUP^PRSNUT04(.GROUP,"T",1)
"RTN","PRSNRMM1",111,0)
 ; quit if any error during group selection
"RTN","PRSNRMM1",112,0)
 I $P($G(GROUP(0)),U,2)="E" D  Q
"RTN","PRSNRMM1",113,0)
 .W !,$P(GROUP(0),U,3)
"RTN","PRSNRMM1",114,0)
 D TLMAIN
"RTN","PRSNRMM1",115,0)
 Q
"RTN","PRSNRMM1",116,0)
 ;
"RTN","PRSNRMM1",117,0)
TLMAIN ;
"RTN","PRSNRMM1",118,0)
 ;
"RTN","PRSNRMM1",119,0)
 N DIC,X,Y,DUOUT,DTOUT,PPI
"RTN","PRSNRMM1",120,0)
TLMAIN1 ;
"RTN","PRSNRMM1",121,0)
 S DIC="^PRSN(451,",DIC(0)="AEQMZ"
"RTN","PRSNRMM1",122,0)
 S DIC("A")="Select a Pay Period: "
"RTN","PRSNRMM1",123,0)
 D ^DIC
"RTN","PRSNRMM1",124,0)
 Q:$D(DUOUT)!$D(DTOUT)
"RTN","PRSNRMM1",125,0)
 I $G(Y)'>0 W $C(7),"  Invalid Pay Period" G TLMAIN1
"RTN","PRSNRMM1",126,0)
 S PPI=+Y
"RTN","PRSNRMM1",127,0)
 N %ZIS,POP,IOP
"RTN","PRSNRMM1",128,0)
 S %ZIS="MQ"
"RTN","PRSNRMM1",129,0)
 D ^%ZIS
"RTN","PRSNRMM1",130,0)
 Q:POP
"RTN","PRSNRMM1",131,0)
 I $D(IO("Q")) D
"RTN","PRSNRMM1",132,0)
 . K IO("Q")
"RTN","PRSNRMM1",133,0)
 . N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC
"RTN","PRSNRMM1",134,0)
 . S ZTDESC="PRSN POC/ETA MISMATCH REPORT"
"RTN","PRSNRMM1",135,0)
 . S ZTRTN="MMREP^PRSNRMM1"
"RTN","PRSNRMM1",136,0)
 . S ZTSAVE("GROUP(")=""
"RTN","PRSNRMM1",137,0)
 . S ZTSAVE("PPI")=""
"RTN","PRSNRMM1",138,0)
 . D ^%ZTLOAD
"RTN","PRSNRMM1",139,0)
 . I $D(ZTSK) S ZTREQ="@" W !,"Request "_ZTSK_" Queued."
"RTN","PRSNRMM1",140,0)
 E  D
"RTN","PRSNRMM1",141,0)
 . D MMREP
"RTN","PRSNRMM1",142,0)
 Q
"RTN","PRSNRMM1",143,0)
 ;
"RTN","PRSNRMM1",144,0)
MMREP ;
"RTN","PRSNRMM1",145,0)
 N PRSIEN,PRSNG,PRSNARY,PRSNTL,PICK,PG,STOP
"RTN","PRSNRMM1",146,0)
 K ^TMP($J,"PRSNRMM")
"RTN","PRSNRMM1",147,0)
 U IO
"RTN","PRSNRMM1",148,0)
 S (PICK,PG,STOP)=0
"RTN","PRSNRMM1",149,0)
 F  S PICK=$O(GROUP(PICK)) Q:PICK=""!STOP  D
"RTN","PRSNRMM1",150,0)
 . S PRSNG=GROUP(0)_"^"_PICK_"^"_GROUP(PICK)
"RTN","PRSNRMM1",151,0)
 . S PRSIEN=0
"RTN","PRSNRMM1",152,0)
 . F  S PRSIEN=$O(^PRSN(451,PPI,"E",PRSIEN)) Q:PRSIEN'>0!STOP  D
"RTN","PRSNRMM1",153,0)
 .. S PRSNARY=$G(^PRSPC(PRSIEN,0))
"RTN","PRSNRMM1",154,0)
 .. S PRSNAME=$P(PRSNARY,U)              ;Nurse Name
"RTN","PRSNRMM1",155,0)
 .. S PRSNTL=$P(PRSNARY,U,8)             ;Nurse T&L
"RTN","PRSNRMM1",156,0)
 .. Q:PRSNTL'=PICK
"RTN","PRSNRMM1",157,0)
 .. S ^TMP($J,"PRSNRMM",PICK,PRSNAME,PRSIEN)=""
"RTN","PRSNRMM1",158,0)
 ;
"RTN","PRSNRMM1",159,0)
 S PICK=0
"RTN","PRSNRMM1",160,0)
 F  S PICK=$O(^TMP($J,"PRSNRMM",PICK)) Q:PICK=""!STOP  D
"RTN","PRSNRMM1",161,0)
 . W !!,"T&L UNIT: ",PICK
"RTN","PRSNRMM1",162,0)
 . S PRSNAME=""
"RTN","PRSNRMM1",163,0)
 . F  S PRSNAME=$O(^TMP($J,"PRSNRMM",PICK,PRSNAME)) Q:PRSNAME=""!STOP  D
"RTN","PRSNRMM1",164,0)
 .. S PRSIEN=$O(^TMP($J,"PRSNRMM",PICK,PRSNAME,PRSIEN)) Q:PRSIEN=""!STOP  D
"RTN","PRSNRMM1",165,0)
 ... D PPMM^PRSNRMM(PRSIEN,PPI,.PG,.STOP)
"RTN","PRSNRMM1",166,0)
 ;
"RTN","PRSNRMM1",167,0)
 W !!,"End of Report"
"RTN","PRSNRMM1",168,0)
 D ^%ZISC
"RTN","PRSNRMM1",169,0)
 K ^TMP($J,"PRSNRMM")
"RTN","PRSNRMM1",170,0)
 Q
"RTN","PRSNRMM1",171,0)
 ;
"RTN","PRSNRND0")
0^25^B8957328^n/a
"RTN","PRSNRND0",1,0)
PRSNRND0 ;WOIFO/DAM - Non Direct Care Summary by Skill Mix I REPORT;9/10/2009
"RTN","PRSNRND0",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNRND0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","PRSNRND0",4,0)
 ;
"RTN","PRSNRND0",5,0)
 ;
"RTN","PRSNRND0",6,0)
DAP ; Entry point for Data Approval Personnel
"RTN","PRSNRND0",7,0)
 N GROUP
"RTN","PRSNRND0",8,0)
 D ACCESS^PRSNUT02(.GROUP,"A",DT,1)
"RTN","PRSNRND0",9,0)
 ; quit if any error during group selection
"RTN","PRSNRND0",10,0)
 I $P($G(GROUP(0)),U,2)="E" D  Q
"RTN","PRSNRND0",11,0)
 .W !,$P(GROUP(0),U,3)
"RTN","PRSNRND0",12,0)
 D MAIN
"RTN","PRSNRND0",13,0)
 Q
"RTN","PRSNRND0",14,0)
 ;
"RTN","PRSNRND0",15,0)
COORD ;Entry point for VANOD Coordinator
"RTN","PRSNRND0",16,0)
 ; Coordinator has no access limits so let them pick any group
"RTN","PRSNRND0",17,0)
 N GROUP
"RTN","PRSNRND0",18,0)
 D PIKGROUP^PRSNUT04(.GROUP,"",1)
"RTN","PRSNRND0",19,0)
 I $P($G(GROUP(0)),U,2)="E" D  Q
"RTN","PRSNRND0",20,0)
 .W !,$P(GROUP(0),U,3)
"RTN","PRSNRND0",21,0)
 D MAIN
"RTN","PRSNRND0",22,0)
 ;
"RTN","PRSNRND0",23,0)
 Q
"RTN","PRSNRND0",24,0)
 ;
"RTN","PRSNRND0",25,0)
MAIN ;
"RTN","PRSNRND0",26,0)
 N RANGE,BEG,END,EXTBEG,EXTEND,STOP,TYPE,BEG,END
"RTN","PRSNRND0",27,0)
 S STOP=0
"RTN","PRSNRND0",28,0)
 D DATE
"RTN","PRSNRND0",29,0)
 Q:STOP
"RTN","PRSNRND0",30,0)
 D QUE
"RTN","PRSNRND0",31,0)
 Q
"RTN","PRSNRND0",32,0)
 ;
"RTN","PRSNRND0",33,0)
REPORT ;for group of location or t&l
"RTN","PRSNRND0",34,0)
 ;
"RTN","PRSNRND0",35,0)
 N X,PRSIEN,PRSNGLB,PRSNG,GRP,SORT,PRSNGA,PRSNGB,SKILMIX,NUROLE,PICK,PG
"RTN","PRSNRND0",36,0)
 U IO
"RTN","PRSNRND0",37,0)
 S SORT=$P(GROUP(0),U,2),PG=0,TODAY=$E(DT,4,5)_"/"_$E(DT,6,7)_"/"_$E(DT,2,3)
"RTN","PRSNRND0",38,0)
 D HDR^PRSNRND1(EXTBEG,EXTEND)
"RTN","PRSNRND0",39,0)
 S (PICK,STOP)=0
"RTN","PRSNRND0",40,0)
 F  S PICK=$O(GROUP(PICK)) Q:PICK=""  D
"RTN","PRSNRND0",41,0)
 . S PRSNG=GROUP(0)_"^"_PICK_"^"_GROUP(PICK)
"RTN","PRSNRND0",42,0)
 . S PRSNGLB=$S($P(PRSNG,U,2)="N":$NA(^NURSF(211.8,"D",$P(PRSNG,U,7))),1:$NA(^PRSPC("ATL"_$P(PRSNG,U,3))))
"RTN","PRSNRND0",43,0)
 . S GRP=$P(PRSNG,U,3)  ;External form of primary location
"RTN","PRSNRND0",44,0)
 . S PRSNGA=""
"RTN","PRSNRND0",45,0)
 . F  S PRSNGA=$O(@PRSNGLB@(PRSNGA)) QUIT:PRSNGA=""  D
"RTN","PRSNRND0",46,0)
 .. S PRSNGB=0
"RTN","PRSNRND0",47,0)
 .. F  S PRSNGB=$O(@PRSNGLB@(PRSNGA,PRSNGB)) QUIT:'PRSNGB  D
"RTN","PRSNRND0",48,0)
 ... I $P(PRSNG,U,2)="N",+$P(PRSNG,U,4)'=+$$PRIMLOC^PRSNUT03(PRSNGB) Q
"RTN","PRSNRND0",49,0)
 ... S PRSIEN=$S($P(PRSNG,U,2)="N":+$G(^VA(200,PRSNGB,450)),1:PRSNGB)
"RTN","PRSNRND0",50,0)
 ... S X=$$ISNURSE^PRSNUT01(PRSIEN)
"RTN","PRSNRND0",51,0)
 ... I +X D
"RTN","PRSNRND0",52,0)
 .... S NUROLE=$P(X,U,2)
"RTN","PRSNRND0",53,0)
 .... D GATHER^PRSNRND1(.SKILMIX,GRP,NUROLE,PRSIEN,BEG,END)
"RTN","PRSNRND0",54,0)
 D PRTLP^PRSNRND1(EXTBEG,EXTEND)
"RTN","PRSNRND0",55,0)
 W !!,"End of Report"
"RTN","PRSNRND0",56,0)
 D ^%ZISC
"RTN","PRSNRND0",57,0)
 Q
"RTN","PRSNRND0",58,0)
 ;
"RTN","PRSNRND0",59,0)
DATE ; User is prompted for a date range 
"RTN","PRSNRND0",60,0)
 ;
"RTN","PRSNRND0",61,0)
 S RANGE=$$POCRANGE^PRSNUT01()
"RTN","PRSNRND0",62,0)
 ; QUIT HERE IF RANGE=0 
"RTN","PRSNRND0",63,0)
 I +$G(RANGE)'>0 S STOP=1 Q
"RTN","PRSNRND0",64,0)
 ;
"RTN","PRSNRND0",65,0)
 S BEG=$P(RANGE,U)
"RTN","PRSNRND0",66,0)
 S END=$P(RANGE,U,2)
"RTN","PRSNRND0",67,0)
 S EXTBEG=$P(RANGE,U,3)
"RTN","PRSNRND0",68,0)
 S EXTEND=$P(RANGE,U,4)
"RTN","PRSNRND0",69,0)
 ;
"RTN","PRSNRND0",70,0)
 Q
"RTN","PRSNRND0",71,0)
 ;
"RTN","PRSNRND0",72,0)
QUE ;call to generate and display report for individual activity
"RTN","PRSNRND0",73,0)
 N %ZIS,POP,IOP
"RTN","PRSNRND0",74,0)
 S %ZIS="MQ"
"RTN","PRSNRND0",75,0)
 D ^%ZIS
"RTN","PRSNRND0",76,0)
 Q:POP
"RTN","PRSNRND0",77,0)
 I $D(IO("Q")) D
"RTN","PRSNRND0",78,0)
 . K IO("Q")
"RTN","PRSNRND0",79,0)
 . N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC
"RTN","PRSNRND0",80,0)
 . S ZTDESC="GROUP WORK SUMMARY BY SKILLMIX"
"RTN","PRSNRND0",81,0)
 . S ZTRTN="REPORT^PRSNRND0"
"RTN","PRSNRND0",82,0)
 . S ZTSAVE("GROUP")=""
"RTN","PRSNRND0",83,0)
 . S ZTSAVE("GROUP(")=""
"RTN","PRSNRND0",84,0)
 . S ZTSAVE("TYPE")=""
"RTN","PRSNRND0",85,0)
 . S ZTSAVE("BEG")=""
"RTN","PRSNRND0",86,0)
 . S ZTSAVE("END")=""
"RTN","PRSNRND0",87,0)
 . S ZTSAVE("EXTBEG")=""
"RTN","PRSNRND0",88,0)
 . S ZTSAVE("EXTEND")=""
"RTN","PRSNRND0",89,0)
 . D ^%ZTLOAD
"RTN","PRSNRND0",90,0)
 . I $D(ZTSK) S ZTREQ="@" W !,"Request "_ZTSK_" Queued."
"RTN","PRSNRND0",91,0)
 E  D
"RTN","PRSNRND0",92,0)
 . D REPORT
"RTN","PRSNRND0",93,0)
 Q
"RTN","PRSNRND1")
0^26^B16141742^n/a
"RTN","PRSNRND1",1,0)
PRSNRND1 ;WOIFO/DAM - Non Direct Care Summary by Skill Mix II REPORT ;060409
"RTN","PRSNRND1",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNRND1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","PRSNRND1",4,0)
 ;
"RTN","PRSNRND1",5,0)
 ;   
"RTN","PRSNRND1",6,0)
 ; 
"RTN","PRSNRND1",7,0)
GATHER(SKILMIX,GRP,NUROLE,PRSIEN,BEG,END) ;Entry point to gather POC data from 451
"RTN","PRSNRND1",8,0)
 ;INPUT:
"RTN","PRSNRND1",9,0)
 ;   SKILMIX: ARRAY containing totals for various types of work
"RTN","PRSNRND1",10,0)
 ;            subscripted by nurse role (or skill mix)
"RTN","PRSNRND1",11,0)
 ;   GRP: Nurse default location or T&L Unit
"RTN","PRSNRND1",12,0)
 ;   NUROLE: the role (f451.1) of the nurse defined by PRSIEN
"RTN","PRSNRND1",13,0)
 ;           this role will match one of the subscripts in the
"RTN","PRSNRND1",14,0)
 ;           SKILMIX array
"RTN","PRSNRND1",15,0)
 ;   PRSIEN: Nurse ien 450
"RTN","PRSNRND1",16,0)
 ;   BEG,END: FileMan begin and end dates for report
"RTN","PRSNRND1",17,0)
 ;
"RTN","PRSNRND1",18,0)
 N INDEX,CNT,DAYNODE,FMDT,PPIEN,PRSNDAY
"RTN","PRSNRND1",19,0)
 S FMDT=BEG-.1
"RTN","PRSNRND1",20,0)
 S (INDEX,CNT)=0
"RTN","PRSNRND1",21,0)
 F  S FMDT=$O(^PRST(458,"AD",FMDT)) Q:FMDT>END!(FMDT'>0)!STOP  D
"RTN","PRSNRND1",22,0)
 . S DAYNODE=$G(^PRST(458,"AD",FMDT))
"RTN","PRSNRND1",23,0)
 . S PPIEN=+DAYNODE
"RTN","PRSNRND1",24,0)
 . S PRSNDAY=$P(DAYNODE,U,2)
"RTN","PRSNRND1",25,0)
 . K POCD   ;array to hold POC data
"RTN","PRSNRND1",26,0)
 . D L1^PRSNRUT1(.POCD,PPIEN,PRSIEN,PRSNDAY)
"RTN","PRSNRND1",27,0)
 . Q:$G(POCD(0))=0
"RTN","PRSNRND1",28,0)
 . D DATA(.SKILMIX,GRP,NUROLE)
"RTN","PRSNRND1",29,0)
 ;
"RTN","PRSNRND1",30,0)
 Q
"RTN","PRSNRND1",31,0)
 ;
"RTN","PRSNRND1",32,0)
 ;
"RTN","PRSNRND1",33,0)
DATA(SKILMIX,GRP,NUROLE) ;Extract data from POCD array
"RTN","PRSNRND1",34,0)
 ;
"RTN","PRSNRND1",35,0)
 N PRSL,ST,SP,MEAL,HOURS,TT,TIEN,LNG,POC,POC1,WIEN,TW,TWD
"RTN","PRSNRND1",36,0)
 ;
"RTN","PRSNRND1",37,0)
 S PRSL=0
"RTN","PRSNRND1",38,0)
 F  S PRSL=$O(POCD(PRSL)) Q:PRSL'>0  D
"RTN","PRSNRND1",39,0)
 . ;
"RTN","PRSNRND1",40,0)
 . ;Start and stop time and mealtime
"RTN","PRSNRND1",41,0)
 . S ST=$P(POCD(PRSL),U),SP=$P(POCD(PRSL),U,2),MEAL=$P(POCD(PRSL),U,3)
"RTN","PRSNRND1",42,0)
 . ;
"RTN","PRSNRND1",43,0)
 . ;Get elapsed time
"RTN","PRSNRND1",44,0)
 . S HOURS=$$AMT^PRSPSAPU(ST,SP,MEAL)
"RTN","PRSNRND1",45,0)
 . ;
"RTN","PRSNRND1",46,0)
 . ;Type of Time code IEN
"RTN","PRSNRND1",47,0)
 . S (TIEN,LNG)=" "
"RTN","PRSNRND1",48,0)
 . S TT=$P(POCD(PRSL),U,4)
"RTN","PRSNRND1",49,0)
 . I TT'="" D
"RTN","PRSNRND1",50,0)
 . . ;
"RTN","PRSNRND1",51,0)
 . . ;Type of Time code
"RTN","PRSNRND1",52,0)
 . . S TIEN=$O(^PRST(457.3,"B",TT,TIEN))
"RTN","PRSNRND1",53,0)
 . . Q:TIEN=""
"RTN","PRSNRND1",54,0)
 . . ;
"RTN","PRSNRND1",55,0)
 . . ;Description for Type of Time code
"RTN","PRSNRND1",56,0)
 . . S LNG=$P(^PRST(457.3,TIEN,0),U,2)  ;eg, Direct Care, AL
"RTN","PRSNRND1",57,0)
 . ;
"RTN","PRSNRND1",58,0)
 . S POC1=" "
"RTN","PRSNRND1",59,0)
 . S POC=$P(POCD(PRSL),U,5)
"RTN","PRSNRND1",60,0)
 . I POC'="" D
"RTN","PRSNRND1",61,0)
 . . S POC1=$P($$ISACTIVE^PRSNUT01(DT,POC),U,2) ;Location
"RTN","PRSNRND1",62,0)
 . ;
"RTN","PRSNRND1",63,0)
 . ;Type of Work Code IEN
"RTN","PRSNRND1",64,0)
 . S (TW,TWD)=" "
"RTN","PRSNRND1",65,0)
 . S WIEN=$P(POCD(PRSL),U,6)
"RTN","PRSNRND1",66,0)
 . I WIEN'="" D
"RTN","PRSNRND1",67,0)
 . . ;
"RTN","PRSNRND1",68,0)
 . . ;Type of Work Code
"RTN","PRSNRND1",69,0)
 . . S TW=$P(^PRSN(451.5,WIEN,0),U)
"RTN","PRSNRND1",70,0)
 . . ;
"RTN","PRSNRND1",71,0)
 . . ;Description for Type of Work code
"RTN","PRSNRND1",72,0)
 . . S TWD=$P(^PRSN(451.5,WIEN,0),U,2)
"RTN","PRSNRND1",73,0)
 . ;
"RTN","PRSNRND1",74,0)
 . ;save skill mix, hours and type of work into SKILMIX array
"RTN","PRSNRND1",75,0)
 . ;
"RTN","PRSNRND1",76,0)
 . I $G(TW)'="DC" D
"RTN","PRSNRND1",77,0)
 .. S $P(SKILMIX(GRP,TWD,NUROLE),U,1)=$P($G(SKILMIX(GRP,TWD,NUROLE)),U,1)+HOURS
"RTN","PRSNRND1",78,0)
 Q
"RTN","PRSNRND1",79,0)
HDR(EXTBEG,EXTEND) ;Display header for report of Individual Nurse Activity
"RTN","PRSNRND1",80,0)
 ;
"RTN","PRSNRND1",81,0)
 W @IOF
"RTN","PRSNRND1",82,0)
 S PG=PG+1
"RTN","PRSNRND1",83,0)
 W ?17,"NURSE NON DIRECT SUMMARY BY SKILL MIX REPORT"
"RTN","PRSNRND1",84,0)
 W !,?15,EXTBEG_" - "_EXTEND,?45,"Run Date: ",TODAY,?70,"Page: ",$J(PG,3)
"RTN","PRSNRND1",85,0)
 W !         ;blank line
"RTN","PRSNRND1",86,0)
 W !,"Location",?22,"Non Direct",?53,"# of",?60,"# of",?67,"# of",?74,"Total"
"RTN","PRSNRND1",87,0)
 W !,?22,"Care",?53,"Hours",?60,"Hours",?67,"Hours",?74,"Hours"
"RTN","PRSNRND1",88,0)
 W !,?22,"Category",?53,"RN",?60,"LPN",?67,"UAP"
"RTN","PRSNRND1",89,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","PRSNRND1",90,0)
 ;
"RTN","PRSNRND1",91,0)
 Q
"RTN","PRSNRND1",92,0)
PRTLP(EXTBEG,EXTEND) ;Order through SKILMIX array, total data & display
"RTN","PRSNRND1",93,0)
 N RNDC,LNDC,UNDC,GP,TNDC,SKILL,NDCARE
"RTN","PRSNRND1",94,0)
 S GP=0
"RTN","PRSNRND1",95,0)
 F  S GP=$O(SKILMIX(GP)) Q:GP=""!STOP  D
"RTN","PRSNRND1",96,0)
 . S NDCARE=""
"RTN","PRSNRND1",97,0)
 . F  S NDCARE=$O(SKILMIX(GP,NDCARE)) Q:NDCARE=""!STOP  D
"RTN","PRSNRND1",98,0)
 .. S (RNDC,LNDC,UNDC,TNDC)=0
"RTN","PRSNRND1",99,0)
 .. S SKILL=""
"RTN","PRSNRND1",100,0)
 .. F  S SKILL=$O(SKILMIX(GP,NDCARE,SKILL)) Q:SKILL=""!STOP  D
"RTN","PRSNRND1",101,0)
 ... I SKILL["RN" S RNDC=$P(SKILMIX(GP,NDCARE,SKILL),U)+$G(RNDC)
"RTN","PRSNRND1",102,0)
 ... I SKILL["LPN" S LNDC=$P(SKILMIX(GP,NDCARE,SKILL),U)+$G(LNDC)
"RTN","PRSNRND1",103,0)
 ... I SKILL'["RN",SKILL'["LPN" S UNDC=$P(SKILMIX(GP,NDCARE,SKILL),U)+$G(UNDC)
"RTN","PRSNRND1",104,0)
 .. S TNDC=$G(RNDC)+$G(LNDC)+$G(UNDC)  ;total hours
"RTN","PRSNRND1",105,0)
 .. D PPP(.STOP,EXTBEG,EXTEND)
"RTN","PRSNRND1",106,0)
 Q
"RTN","PRSNRND1",107,0)
PPP(STOP,EXTBEG,EXTEND) ;
"RTN","PRSNRND1",108,0)
 W !
"RTN","PRSNRND1",109,0)
 W GP,?22,NDCARE,?53,RNDC,?60,LNDC,?67,UNDC,?74,TNDC
"RTN","PRSNRND1",110,0)
 W !
"RTN","PRSNRND1",111,0)
 I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDR(EXTBEG,EXTEND)
"RTN","PRSNRND1",112,0)
 Q
"RTN","PRSNROLD")
0^49^B46388978^n/a
"RTN","PRSNROLD",1,0)
PRSNROLD ;WOIFO/JEO - OVERTIMIVIE DETAIL REPORT ;080811
"RTN","PRSNROLD",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNROLD",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","PRSNROLD",4,0)
 Q
"RTN","PRSNROLD",5,0)
 ;
"RTN","PRSNROLD",6,0)
DAP ; Entry point for Data Approval Personnel
"RTN","PRSNROLD",7,0)
 N GROUP
"RTN","PRSNROLD",8,0)
 D ACCESS^PRSNUT02(.GROUP,"A",DT,1)
"RTN","PRSNROLD",9,0)
 ; quit if any error during group selection
"RTN","PRSNROLD",10,0)
 I $P($G(GROUP(0)),U,2)="E" D  Q
"RTN","PRSNROLD",11,0)
 .W !,$P(GROUP(0),U,3)
"RTN","PRSNROLD",12,0)
 D MAIN
"RTN","PRSNROLD",13,0)
 Q
"RTN","PRSNROLD",14,0)
 ;
"RTN","PRSNROLD",15,0)
COORD ;Entry point for VANOD Coordinator
"RTN","PRSNROLD",16,0)
 ; Coordinator has no access limits so let them pick any group
"RTN","PRSNROLD",17,0)
 N GROUP
"RTN","PRSNROLD",18,0)
 D PIKGROUP^PRSNUT04(.GROUP,"",1)
"RTN","PRSNROLD",19,0)
 I $P($G(GROUP(0)),U,2)="E" D  Q
"RTN","PRSNROLD",20,0)
 .W !,$P(GROUP(0),U,3)
"RTN","PRSNROLD",21,0)
 D MAIN
"RTN","PRSNROLD",22,0)
 Q
"RTN","PRSNROLD",23,0)
MAIN ;
"RTN","PRSNROLD",24,0)
 N RANGE,BEG,END,LASTDT,MTIME,STIME,ETIME
"RTN","PRSNROLD",25,0)
 N %ZIS,POP,IOP
"RTN","PRSNROLD",26,0)
 K POCD
"RTN","PRSNROLD",27,0)
 D RANGE
"RTN","PRSNROLD",28,0)
 Q:+RANGE'>0
"RTN","PRSNROLD",29,0)
 S %ZIS="MQ"
"RTN","PRSNROLD",30,0)
 D ^%ZIS
"RTN","PRSNROLD",31,0)
 Q:POP
"RTN","PRSNROLD",32,0)
 I $D(IO("Q")) D
"RTN","PRSNROLD",33,0)
 . K IO("Q")
"RTN","PRSNROLD",34,0)
 . N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC
"RTN","PRSNROLD",35,0)
 . S ZTDESC="LOCATION OVERTIME ACTIVITY DETAIL REPORT"
"RTN","PRSNROLD",36,0)
 . S ZTRTN="FILE^PRSNROLD"
"RTN","PRSNROLD",37,0)
 . S ZTSAVE("GROUP(")=""
"RTN","PRSNROLD",38,0)
 . S ZTSAVE("BEG")=""
"RTN","PRSNROLD",39,0)
 . S ZTSAVE("END")=""
"RTN","PRSNROLD",40,0)
 . D ^%ZTLOAD
"RTN","PRSNROLD",41,0)
 . I $D(ZTSK) S ZTREQ="@" W !,"Request "_ZTSK_" Queued."
"RTN","PRSNROLD",42,0)
 E  D FILE
"RTN","PRSNROLD",43,0)
 Q
"RTN","PRSNROLD",44,0)
 ;
"RTN","PRSNROLD",45,0)
RANGE ;
"RTN","PRSNROLD",46,0)
 ; User is prompted for a date or date range
"RTN","PRSNROLD",47,0)
 S RANGE=$$POCRANGE^PRSNUT01()
"RTN","PRSNROLD",48,0)
 S BEG=$P($G(RANGE),U)
"RTN","PRSNROLD",49,0)
 S END=$P($G(RANGE),U,2)
"RTN","PRSNROLD",50,0)
 Q
"RTN","PRSNROLD",51,0)
 ;
"RTN","PRSNROLD",52,0)
FILE ;
"RTN","PRSNROLD",53,0)
 ;
"RTN","PRSNROLD",54,0)
 N PRSNL,DAYNODE,EXTBEG,EXTEND,FMDT,PPIEN,PRSNAME,PRSNSSN,PRSNTL
"RTN","PRSNROLD",55,0)
 N PRSNPP,PRSNDAY,PRSNDY,PRSDT,TODAY,DIVI,NURSE
"RTN","PRSNROLD",56,0)
 N PRSIEN,PRSNGLB,PRSNG,GHD,PICK,SORT,STOP,I,PRSNGA,PRSNGB,TAB,PG
"RTN","PRSNROLD",57,0)
 U IO
"RTN","PRSNROLD",58,0)
 S SORT=$P(GROUP(0),U,2),PG=0
"RTN","PRSNROLD",59,0)
 S (PICK,STOP)=0
"RTN","PRSNROLD",60,0)
 S TODAY=$E(DT,4,5)_"/"_$E(DT,6,7)_"/"_$E(DT,2,3)
"RTN","PRSNROLD",61,0)
 D INITIAL^PRSNRUT0
"RTN","PRSNROLD",62,0)
 F  S PICK=$O(GROUP(PICK)) Q:PICK=""!STOP  D
"RTN","PRSNROLD",63,0)
 .S DIVI=$$EXTERNAL^DILFD(456,.01,"",$P(GROUP(PICK),U,3))
"RTN","PRSNROLD",64,0)
 .S PRSNG=GROUP(0)_"^"_PICK_"^"_GROUP(PICK)
"RTN","PRSNROLD",65,0)
 .S PRSNGLB=$S($P(PRSNG,U,2)="N":$NA(^NURSF(211.8,"D",$P(PRSNG,U,7))),1:$NA(^PRSPC("ATL"_$P(PRSNG,U,3))))
"RTN","PRSNROLD",66,0)
 .; display and underline group sub header
"RTN","PRSNROLD",67,0)
 .;
"RTN","PRSNROLD",68,0)
 .S GHD=$S($P(PRSNG,U,2)="N":"LOCATION",1:"T&L UNIT")_":  "_$P(PRSNG,U,3)
"RTN","PRSNROLD",69,0)
 .;S TAB=IOM-$L(GHD)/2-5
"RTN","PRSNROLD",70,0)
 .S PRSNGA=""
"RTN","PRSNROLD",71,0)
 .F  S PRSNGA=$O(@PRSNGLB@(PRSNGA)) QUIT:PRSNGA=""!STOP  D
"RTN","PRSNROLD",72,0)
 ..S PRSNGB=0
"RTN","PRSNROLD",73,0)
 ..F  S PRSNGB=$O(@PRSNGLB@(PRSNGA,PRSNGB)) QUIT:'PRSNGB!STOP  D
"RTN","PRSNROLD",74,0)
 ...I $P(PRSNG,U,2)="N",+$P(PRSNG,U,4)'=+$$PRIMLOC^PRSNUT03(PRSNGB) Q
"RTN","PRSNROLD",75,0)
 ...S PRSIEN=$S($P(PRSNG,U,2)="N":+$G(^VA(200,PRSNGB,450)),1:PRSNGB)
"RTN","PRSNROLD",76,0)
 ...S PRSNL=$$DEFAULTL^PRSNRUT0()
"RTN","PRSNROLD",77,0)
 ...I PRSNL="" S PRSNL="**NONE**"
"RTN","PRSNROLD",78,0)
 ...S NURSE=$$ISNURSE^PRSNUT01(PRSIEN)
"RTN","PRSNROLD",79,0)
 ...I +NURSE D INFO(PRSIEN,DIVI,PICK)
"RTN","PRSNROLD",80,0)
 ;
"RTN","PRSNROLD",81,0)
 D ^%ZISC
"RTN","PRSNROLD",82,0)
 Q
"RTN","PRSNROLD",83,0)
INFO(PRSIEN,DIVI,PICK) ;Find nurse information to display in report
"RTN","PRSNROLD",84,0)
 N FMDT,PPIEN,PRSNDAY,POCD,DAYNODE
"RTN","PRSNROLD",85,0)
 N PRSNARY,PRSNAME,PRSNSSN,PRSNTL,SKILMIX
"RTN","PRSNROLD",86,0)
 S PRSNARY=$G(^PRSPC(PRSIEN,0))
"RTN","PRSNROLD",87,0)
 ; Nurse Name
"RTN","PRSNROLD",88,0)
 S PRSNAME=$P(PRSNARY,U)
"RTN","PRSNROLD",89,0)
 ; Nurse SSN
"RTN","PRSNROLD",90,0)
 S PRSNSSN=$P(PRSNARY,U,9)
"RTN","PRSNROLD",91,0)
 ; Nurse T&L
"RTN","PRSNROLD",92,0)
 S PRSNTL=$P(PRSNARY,U,8)
"RTN","PRSNROLD",93,0)
 ; Nurse skillmix
"RTN","PRSNROLD",94,0)
 S SKILMIX=$P($$ISNURSE^PRSNUT01(PRSIEN),U,2)
"RTN","PRSNROLD",95,0)
 I SKILMIX["ADMINISTRATIVE" S SKILMIX="ADMIN RN"
"RTN","PRSNROLD",96,0)
 Q:$G(DIVI)=""!($G(PICK)="")
"RTN","PRSNROLD",97,0)
 S STOP=0
"RTN","PRSNROLD",98,0)
 I PG>0 S STOP=$$ASK^PRSLIB00()
"RTN","PRSNROLD",99,0)
 Q:STOP
"RTN","PRSNROLD",100,0)
 D HDR
"RTN","PRSNROLD",101,0)
 S FMDT=BEG-.1
"RTN","PRSNROLD",102,0)
 F  S FMDT=$O(^PRST(458,"AD",FMDT)) Q:FMDT>END!(FMDT'>0)!STOP  D
"RTN","PRSNROLD",103,0)
 . S DAYNODE=$G(^PRST(458,"AD",FMDT))
"RTN","PRSNROLD",104,0)
 . S PPIEN=+DAYNODE
"RTN","PRSNROLD",105,0)
 . S PRSNDAY=$P(DAYNODE,U,2)
"RTN","PRSNROLD",106,0)
 . Q:'PRSNDAY
"RTN","PRSNROLD",107,0)
 . K POCD   ;array to hold POC data
"RTN","PRSNROLD",108,0)
 . D L1^PRSNRUT1(.POCD,PPIEN,PRSIEN,PRSNDAY)
"RTN","PRSNROLD",109,0)
 . D GETDAY(PRSNDAY,.PRSNDY,.PRSDT),DATA
"RTN","PRSNROLD",110,0)
 Q
"RTN","PRSNROLD",111,0)
 ;     
"RTN","PRSNROLD",112,0)
HDR ;;Display header for report of Individual Nurse Activity
"RTN","PRSNROLD",113,0)
 W @IOF
"RTN","PRSNROLD",114,0)
 S PG=PG+1
"RTN","PRSNROLD",115,0)
 W ?19,"NURSE OVERTIME DETAIL REPORT"
"RTN","PRSNROLD",116,0)
 W !,PRSNAME,?32,$E(PRSNL,1,14),?48,"T&L"_" "_PRSNTL,?48,?68,$E(PRSNSSN,6,9)
"RTN","PRSNROLD",117,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","PRSNROLD",118,0)
 W !,EXTBEG_" - "_EXTEND,?45,"Run Date: ",TODAY,?70,"Page: ",$J(PG,3)
"RTN","PRSNROLD",119,0)
 W !                                                         ;blank line
"RTN","PRSNROLD",120,0)
 W !,"Date",?11,"Tour Time",?27,"Location",?46,"# Of",?57,"OT Mandatory"
"RTN","PRSNROLD",121,0)
 W !,?11,"-Exceptions",?27,"-Work Type",?45,"Hours",?57,"-OT Reason"
"RTN","PRSNROLD",122,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","PRSNROLD",123,0)
 Q
"RTN","PRSNROLD",124,0)
 ;
"RTN","PRSNROLD",125,0)
DEFAULTL() ;Find external value-nurse's default location
"RTN","PRSNROLD",126,0)
 ;
"RTN","PRSNROLD",127,0)
 Q $P($$PRIMLOC^PRSNUT03($G(^PRSPC(PRSIEN,200))),U,3)
"RTN","PRSNROLD",128,0)
 ;
"RTN","PRSNROLD",129,0)
GETDAY(PRSNDAY,PRSNDY,PRSDT) ;Find external value of Day Number
"RTN","PRSNROLD",130,0)
 ;
"RTN","PRSNROLD",131,0)
 N PRSDY
"RTN","PRSNROLD",132,0)
 S PRSDY=$P(^PRST(458,PPIEN,2),U,PRSNDAY)
"RTN","PRSNROLD",133,0)
 S PRSNDY=$P(PRSDY," "),PRSDT=$P(PRSDY," ",2,3)
"RTN","PRSNROLD",134,0)
 Q
"RTN","PRSNROLD",135,0)
 ;
"RTN","PRSNROLD",136,0)
DATA ;Extract display data from POCD array
"RTN","PRSNROLD",137,0)
 ;
"RTN","PRSNROLD",138,0)
 N PRSNST,PRSNSP,PRSNPOC,PRSNPOC1,PRSNTT,PRSNWIEN,PRSNLNG,PRSNTW
"RTN","PRSNROLD",139,0)
 N PRSNM,PRSNRE,PRSNREC,PRSNTWD,PRSNRIEN,PRSNTIEN,PRSL
"RTN","PRSNROLD",140,0)
 N STIME,ETIME,OTTIME,PRTDY
"RTN","PRSNROLD",141,0)
 ;
"RTN","PRSNROLD",142,0)
 S PRSL=0,PRTDY=0
"RTN","PRSNROLD",143,0)
 F  S PRSL=$O(POCD(PRSL)) Q:PRSL'>0!STOP  D
"RTN","PRSNROLD",144,0)
 . ;Start and stop time
"RTN","PRSNROLD",145,0)
 . S PRSNST=$P(POCD(PRSL),U),PRSNSP=$P(POCD(PRSL),U,2)
"RTN","PRSNROLD",146,0)
 . ;
"RTN","PRSNROLD",147,0)
 . ;Type of Time code IEN
"RTN","PRSNROLD",148,0)
 . S PRSNTT=$P(POCD(PRSL),U,4),PRSNLNG=" "
"RTN","PRSNROLD",149,0)
 . I PRSNTT'="" D
"RTN","PRSNROLD",150,0)
 . . ;
"RTN","PRSNROLD",151,0)
 . . ;Type of Time code
"RTN","PRSNROLD",152,0)
 . . S PRSNTIEN=$O(^PRST(457.3,"B",PRSNTT,0))
"RTN","PRSNROLD",153,0)
 . . Q:PRSNTIEN'>0
"RTN","PRSNROLD",154,0)
 . . ;
"RTN","PRSNROLD",155,0)
 . . ;Description for Type of Time code
"RTN","PRSNROLD",156,0)
 . . S PRSNLNG=$P(^PRST(457.3,PRSNTIEN,0),U,2)
"RTN","PRSNROLD",157,0)
 . . ;
"RTN","PRSNROLD",158,0)
 . S PRSNPOC=$P(POCD(PRSL),U,5),PRSNPOC1=" "
"RTN","PRSNROLD",159,0)
 . I PRSNPOC'="" D
"RTN","PRSNROLD",160,0)
 . . ;POC
"RTN","PRSNROLD",161,0)
 . . S PRSNPOC1=$P($$ISACTIVE^PRSNUT01(DT,PRSNPOC),U,2)
"RTN","PRSNROLD",162,0)
 . ;
"RTN","PRSNROLD",163,0)
 . ;Type of Work Code IEN
"RTN","PRSNROLD",164,0)
 . S PRSNWIEN=$P(POCD(PRSL),U,6),PRSNTW=" ",PRSNTWD=" "
"RTN","PRSNROLD",165,0)
 . I PRSNWIEN'="" D
"RTN","PRSNROLD",166,0)
 . . ;
"RTN","PRSNROLD",167,0)
 . . ;Type of Work Code
"RTN","PRSNROLD",168,0)
 . . S PRSNTW=$P(^PRSN(451.5,PRSNWIEN,0),U)
"RTN","PRSNROLD",169,0)
 . . ;
"RTN","PRSNROLD",170,0)
 . . ;Description for Type of Work code
"RTN","PRSNROLD",171,0)
 . . S PRSNTWD=$P(^PRSN(451.5,PRSNWIEN,0),U,2)
"RTN","PRSNROLD",172,0)
 . ;
"RTN","PRSNROLD",173,0)
 . ;OT Mandatory/Voluntary
"RTN","PRSNROLD",174,0)
 . S PRSNM=$P(POCD(PRSL),U,7)
"RTN","PRSNROLD",175,0)
 . ;no need to continue if this isn't an overtime record
"RTN","PRSNROLD",176,0)
 . Q:$G(PRSNM)=""
"RTN","PRSNROLD",177,0)
 . I PRSNM="V" S PRSNM="V Voluntary"
"RTN","PRSNROLD",178,0)
 . I PRSNM="M" S PRSNM="M Mandatory"
"RTN","PRSNROLD",179,0)
 . ;
"RTN","PRSNROLD",180,0)
 . S PRSNRIEN=$P(POCD(PRSL),U,8),PRSNREC=" ",PRSNRE=" "
"RTN","PRSNROLD",181,0)
 . I PRSNRIEN'="" D
"RTN","PRSNROLD",182,0)
 . . ;Reason for OT code
"RTN","PRSNROLD",183,0)
 . . S PRSNREC=$P(^PRSN(451.6,PRSNRIEN,0),U)
"RTN","PRSNROLD",184,0)
 . . ;
"RTN","PRSNROLD",185,0)
 . . ;Description for OT code
"RTN","PRSNROLD",186,0)
 . . S PRSNRE=$P(^PRSN(451.6,PRSNRIEN,0),U,2)
"RTN","PRSNROLD",187,0)
 . ;
"RTN","PRSNROLD",188,0)
 . ; OT time
"RTN","PRSNROLD",189,0)
 . S STIME=$P(POCD(PRSL),U,9)
"RTN","PRSNROLD",190,0)
 . S ETIME=$P(POCD(PRSL),U,10)
"RTN","PRSNROLD",191,0)
 . S MTIME=$P(POCD(PRSL),U,3)
"RTN","PRSNROLD",192,0)
 . S OTTIME=$$ELAPSE^PRSPESR2(MTIME,STIME,ETIME)
"RTN","PRSNROLD",193,0)
 . D PRNT
"RTN","PRSNROLD",194,0)
 Q
"RTN","PRSNROLD",195,0)
PRNT ;Print report
"RTN","PRSNROLD",196,0)
 ;
"RTN","PRSNROLD",197,0)
 W !
"RTN","PRSNROLD",198,0)
 I 'PRTDY W PRSNDY
"RTN","PRSNROLD",199,0)
 W ?11,$G(PRSNST)_"-"_$G(PRSNSP),?27,$G(PRSNPOC1),?57,$G(PRSNM)
"RTN","PRSNROLD",200,0)
 W !
"RTN","PRSNROLD",201,0)
 I 'PRTDY W PRSDT
"RTN","PRSNROLD",202,0)
 W ?11,"-"_$G(PRSNTT)_" "_$G(PRSNLNG),?27,"-"_$G(PRSNTW)_" "_$G(PRSNTWD),?46,OTTIME,?57,"-"_$G(PRSNREC)_" "_$G(PRSNRE)
"RTN","PRSNROLD",203,0)
 W !      ;blank line
"RTN","PRSNROLD",204,0)
 S PRTDY=1
"RTN","PRSNROLD",205,0)
 ;
"RTN","PRSNROLD",206,0)
 I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDR
"RTN","PRSNROLD",207,0)
 Q
"RTN","PRSNROLD",208,0)
 ;
"RTN","PRSNROLS")
0^50^B69836614^n/a
"RTN","PRSNROLS",1,0)
PRSNROLS ;WOIFO/JEO - Overtime summary report  ;091611
"RTN","PRSNROLS",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNROLS",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","PRSNROLS",4,0)
 Q
"RTN","PRSNROLS",5,0)
 ;
"RTN","PRSNROLS",6,0)
DAP ; Entry point for Data Approval Personnel
"RTN","PRSNROLS",7,0)
 N GROUP
"RTN","PRSNROLS",8,0)
 D ACCESS^PRSNUT02(.GROUP,"A",DT,1)
"RTN","PRSNROLS",9,0)
 ; quit if any error during group selection
"RTN","PRSNROLS",10,0)
 I $P($G(GROUP(0)),U,2)="E" D  Q
"RTN","PRSNROLS",11,0)
 .W !,$P(GROUP(0),U,3)
"RTN","PRSNROLS",12,0)
 D MAIN
"RTN","PRSNROLS",13,0)
 Q
"RTN","PRSNROLS",14,0)
 ;
"RTN","PRSNROLS",15,0)
COORD ;Entry point for VANOD Coordinator
"RTN","PRSNROLS",16,0)
 ; Coordinator has no access limits so let them pick any group
"RTN","PRSNROLS",17,0)
 N GROUP
"RTN","PRSNROLS",18,0)
 D PIKGROUP^PRSNUT04(.GROUP,"",1)
"RTN","PRSNROLS",19,0)
 I $P($G(GROUP(0)),U,2)="E" D  Q
"RTN","PRSNROLS",20,0)
 .W !,$P(GROUP(0),U,3)
"RTN","PRSNROLS",21,0)
 D MAIN
"RTN","PRSNROLS",22,0)
 Q
"RTN","PRSNROLS",23,0)
 ;
"RTN","PRSNROLS",24,0)
MAIN ; 
"RTN","PRSNROLS",25,0)
 N RANGE,BEG,END,LASTDT,MTIME,STIME,ETIME,FIELDS,FIRSTDT
"RTN","PRSNROLS",26,0)
 N PRSIEN,PRSNGLB,PRSNG,GHD,PICK,SORT,STOP,I,PRSNGA,PRSNGB,TAB,PG
"RTN","PRSNROLS",27,0)
 N TODAY,SOTPIM,RTIME,OTTIM,OTARR,MIN,K,GTOT,GGTOT,GGGTOT
"RTN","PRSNROLS",28,0)
 N OTPIM,NURSE,REPLOC
"RTN","PRSNROLS",29,0)
 S TODAY=$E(DT,4,5)_"/"_$E(DT,6,7)_"/"_$E(DT,2,3)
"RTN","PRSNROLS",30,0)
 N %ZIS,POP,IOP
"RTN","PRSNROLS",31,0)
 K POCD
"RTN","PRSNROLS",32,0)
 D RANGE
"RTN","PRSNROLS",33,0)
 Q:+RANGE'>0
"RTN","PRSNROLS",34,0)
 S %ZIS="MQ",PG=0
"RTN","PRSNROLS",35,0)
 D ^%ZIS
"RTN","PRSNROLS",36,0)
 Q:POP
"RTN","PRSNROLS",37,0)
 I $D(IO("Q")) D
"RTN","PRSNROLS",38,0)
 . K IO("Q")
"RTN","PRSNROLS",39,0)
 . N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC
"RTN","PRSNROLS",40,0)
 . S ZTDESC="LOCATION OVERTIME ACTIVITY SUMMARY REPORT"
"RTN","PRSNROLS",41,0)
 . S ZTRTN="START^PRSNROLS"
"RTN","PRSNROLS",42,0)
 . S ZTSAVE("GROUP(")=""
"RTN","PRSNROLS",43,0)
 . S ZTSAVE("BEG")=""
"RTN","PRSNROLS",44,0)
 . S ZTSAVE("END")=""
"RTN","PRSNROLS",45,0)
 . D ^%ZTLOAD
"RTN","PRSNROLS",46,0)
 . I $D(ZTSK) S ZTREQ="@" W !,"Request "_ZTSK_" Queued."
"RTN","PRSNROLS",47,0)
 E  D START
"RTN","PRSNROLS",48,0)
 Q
"RTN","PRSNROLS",49,0)
 ;
"RTN","PRSNROLS",50,0)
START ;
"RTN","PRSNROLS",51,0)
 N PRSNL,DAYNODE,EXTBEG,EXTEND,FMDT,PPIEN,PRSNAME,PRSNSSN,PRSNTL,NURSE,DIVI,PRSNG
"RTN","PRSNROLS",52,0)
 N PRSNPP,PRSNDAY,PRSNDY,PRSDT,TODAY,PRSNGLB,PICK,STOP,SORT,PG,GHD,PRSNGA,PRSNGB,PRSIEN
"RTN","PRSNROLS",53,0)
 U IO
"RTN","PRSNROLS",54,0)
 K ^TMP($J,"OT")
"RTN","PRSNROLS",55,0)
 D FILE,HDR,PRINT
"RTN","PRSNROLS",56,0)
 D ^%ZISC
"RTN","PRSNROLS",57,0)
 K ^TMP($J,"OT")
"RTN","PRSNROLS",58,0)
 Q
"RTN","PRSNROLS",59,0)
 ;
"RTN","PRSNROLS",60,0)
RANGE ; User is prompted for a date or date range
"RTN","PRSNROLS",61,0)
 ;
"RTN","PRSNROLS",62,0)
 S RANGE=$$POCRANGE^PRSNUT01()
"RTN","PRSNROLS",63,0)
 S BEG=$P($G(RANGE),U)
"RTN","PRSNROLS",64,0)
 S END=$P($G(RANGE),U,2)
"RTN","PRSNROLS",65,0)
 Q
"RTN","PRSNROLS",66,0)
 ;
"RTN","PRSNROLS",67,0)
FILE ;
"RTN","PRSNROLS",68,0)
 ;
"RTN","PRSNROLS",69,0)
 S SORT=$P(GROUP(0),U,2),PG=0
"RTN","PRSNROLS",70,0)
 S (PICK,STOP)=0
"RTN","PRSNROLS",71,0)
 S TODAY=$E(DT,4,5)_"/"_$E(DT,6,7)_"/"_$E(DT,2,3)
"RTN","PRSNROLS",72,0)
 D INITIAL^PRSNRUT0
"RTN","PRSNROLS",73,0)
 F  S PICK=$O(GROUP(PICK)) Q:PICK=""!STOP  D
"RTN","PRSNROLS",74,0)
 .S DIVI=$$EXTERNAL^DILFD(456,.01,"",$P(GROUP(PICK),U,3))
"RTN","PRSNROLS",75,0)
 .S PRSNG=GROUP(0)_"^"_PICK_"^"_GROUP(PICK)
"RTN","PRSNROLS",76,0)
 .S PRSNGLB=$S($P(PRSNG,U,2)="N":$NA(^NURSF(211.8,"D",$P(PRSNG,U,7))),1:$NA(^PRSPC("ATL"_$P(PRSNG,U,3))))
"RTN","PRSNROLS",77,0)
 .; display and underline group sub header
"RTN","PRSNROLS",78,0)
 .S GHD=$S($P(PRSNG,U,2)="N":"LOCATION",1:"T&L UNIT")_":  "_$P(PRSNG,U,3)
"RTN","PRSNROLS",79,0)
 .;S TAB=IOM-$L(GHD)/2-5
"RTN","PRSNROLS",80,0)
 .S PRSNGA=""
"RTN","PRSNROLS",81,0)
 .F  S PRSNGA=$O(@PRSNGLB@(PRSNGA)) QUIT:PRSNGA=""!STOP  D
"RTN","PRSNROLS",82,0)
 ..S PRSNGB=0
"RTN","PRSNROLS",83,0)
 ..F  S PRSNGB=$O(@PRSNGLB@(PRSNGA,PRSNGB)) QUIT:'PRSNGB!STOP  D
"RTN","PRSNROLS",84,0)
 ...I $P(PRSNG,U,2)="N",+$P(PRSNG,U,4)'=+$$PRIMLOC^PRSNUT03(PRSNGB) Q
"RTN","PRSNROLS",85,0)
 ...S PRSIEN=$S($P(PRSNG,U,2)="N":+$G(^VA(200,PRSNGB,450)),1:PRSNGB)
"RTN","PRSNROLS",86,0)
 ...S PRSNL=$$DEFAULTL^PRSNRUT0()
"RTN","PRSNROLS",87,0)
 ...I PRSNL="" S PRSNL="**NONE**"
"RTN","PRSNROLS",88,0)
 ...S NURSE=$$ISNURSE^PRSNUT01(PRSIEN)
"RTN","PRSNROLS",89,0)
 ...I +NURSE D INFO(PRSIEN,DIVI,PICK)
"RTN","PRSNROLS",90,0)
 Q
"RTN","PRSNROLS",91,0)
 ;
"RTN","PRSNROLS",92,0)
INFO(PRSIEN,DIVI,PICK) ;Find nurse information to display in report
"RTN","PRSNROLS",93,0)
 N FMDT,PPIEN,PRSNDAY,POCD,DAYNODE,NFL
"RTN","PRSNROLS",94,0)
 N PRSNARY,PRSNAME,PRSNSSN,PRSNTL,SKILMIX
"RTN","PRSNROLS",95,0)
 S PRSNARY=$G(^PRSPC(PRSIEN,0))
"RTN","PRSNROLS",96,0)
 S PRSNTL=$P(PRSNARY,U,8)                        ;Nurse T&L
"RTN","PRSNROLS",97,0)
 S SKILMIX=$P($$ISNURSE^PRSNUT01(PRSIEN),U,2)    ;Nurse skillmix
"RTN","PRSNROLS",98,0)
 I SKILMIX["ADMINISTRATIVE" S SKILMIX="ADMIN RN"
"RTN","PRSNROLS",99,0)
 I SKILMIX["RN" S NFL=1
"RTN","PRSNROLS",100,0)
 I SKILMIX["LPN" S NFL=2
"RTN","PRSNROLS",101,0)
 I SKILMIX'["RN",SKILMIX'["LPN" S NFL=3
"RTN","PRSNROLS",102,0)
 Q:$G(DIVI)=""!($G(PICK)="")
"RTN","PRSNROLS",103,0)
 S STOP=0
"RTN","PRSNROLS",104,0)
 S FMDT=BEG-.1
"RTN","PRSNROLS",105,0)
 F  S FMDT=$O(^PRST(458,"AD",FMDT)) Q:FMDT>END!(FMDT'>0)!STOP  D
"RTN","PRSNROLS",106,0)
 . S DAYNODE=$G(^PRST(458,"AD",FMDT))
"RTN","PRSNROLS",107,0)
 . S PPIEN=+DAYNODE
"RTN","PRSNROLS",108,0)
 . S PRSNDAY=$P(DAYNODE,U,2)
"RTN","PRSNROLS",109,0)
 . Q:'PRSNDAY
"RTN","PRSNROLS",110,0)
 . K POCD   ;array to hold POC data
"RTN","PRSNROLS",111,0)
 . D L1^PRSNRUT1(.POCD,PPIEN,PRSIEN,PRSNDAY)
"RTN","PRSNROLS",112,0)
 . D GETDAY(PRSNDAY,.PRSNDY,.PRSDT),DATA
"RTN","PRSNROLS",113,0)
 Q
"RTN","PRSNROLS",114,0)
 ;     
"RTN","PRSNROLS",115,0)
HDR ;;Display header for report of Individual Nurse Activity
"RTN","PRSNROLS",116,0)
 ;
"RTN","PRSNROLS",117,0)
 W @IOF
"RTN","PRSNROLS",118,0)
 S PG=PG+1
"RTN","PRSNROLS",119,0)
 W ?22,"LOCATION OVERTIME ACTIVITY SUMMARY REPORT"
"RTN","PRSNROLS",120,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","PRSNROLS",121,0)
 W !,EXTBEG_" - "_EXTEND,?42,"Run Date: ",TODAY,?70,"Page: ",$J(PG,3)
"RTN","PRSNROLS",122,0)
 W !                                                         ;blank line
"RTN","PRSNROLS",123,0)
 W !,"Location",?18,"Reason for",?40,"# Of",?50,"# Of",?60,"# Of",?71,"Total"
"RTN","PRSNROLS",124,0)
 W !,?18,"Overtime",?40,"Hours",?50,"Hours",?60,"Hours",?71,"Hours"
"RTN","PRSNROLS",125,0)
 W !,?41,"RN",?51,"LPN",?61,"UAP"
"RTN","PRSNROLS",126,0)
 W !,"--------------------------------------------------------------------------------",!
"RTN","PRSNROLS",127,0)
 Q
"RTN","PRSNROLS",128,0)
 ;
"RTN","PRSNROLS",129,0)
DEFAULTL() ;Find external value-nurse's default location
"RTN","PRSNROLS",130,0)
 ;
"RTN","PRSNROLS",131,0)
 Q $P($$PRIMLOC^PRSNUT03($G(^PRSPC(PRSIEN,200))),U,3)
"RTN","PRSNROLS",132,0)
 ;
"RTN","PRSNROLS",133,0)
GETDAY(PRSNDAY,PRSNDY,PRSDT) ;Find external value of Day Number
"RTN","PRSNROLS",134,0)
 ;
"RTN","PRSNROLS",135,0)
 N PRSDY
"RTN","PRSNROLS",136,0)
 S PRSDY=$P(^PRST(458,PPIEN,2),U,PRSNDAY)
"RTN","PRSNROLS",137,0)
 S PRSNDY=$P(PRSDY," "),PRSDT=$P(PRSDY," ",2,3)
"RTN","PRSNROLS",138,0)
 Q
"RTN","PRSNROLS",139,0)
 ;
"RTN","PRSNROLS",140,0)
DATA ;Extract display data from POCD array
"RTN","PRSNROLS",141,0)
 ;
"RTN","PRSNROLS",142,0)
 N PRSNST,PRSNSP,PRSNPOC,PRSNPOC1,PRSNTT,PRSNWIEN,PRSNLNG,PRSNTW
"RTN","PRSNROLS",143,0)
 N PRSNM,PRSNRE,PRSNREC,PRSNTWD,PRSNRIEN,PRSNTIEN,PRSL
"RTN","PRSNROLS",144,0)
 N STIME,ETIME,OTTIME
"RTN","PRSNROLS",145,0)
 ;
"RTN","PRSNROLS",146,0)
 S PRSL=0
"RTN","PRSNROLS",147,0)
 F  S PRSL=$O(POCD(PRSL)) Q:PRSL'>0!STOP  D
"RTN","PRSNROLS",148,0)
 . ;Start and stop time
"RTN","PRSNROLS",149,0)
 . S PRSNST=$P(POCD(PRSL),U),PRSNSP=$P(POCD(PRSL),U,2)
"RTN","PRSNROLS",150,0)
 . ;
"RTN","PRSNROLS",151,0)
 . ;Type of Time code IEN
"RTN","PRSNROLS",152,0)
 . S PRSNTT=$P(POCD(PRSL),U,4),PRSNLNG=" "
"RTN","PRSNROLS",153,0)
 . I PRSNTT'="" D
"RTN","PRSNROLS",154,0)
 . . ;
"RTN","PRSNROLS",155,0)
 . . ;Type of Time code
"RTN","PRSNROLS",156,0)
 . . S PRSNTIEN=$O(^PRST(457.3,"B",PRSNTT,0))
"RTN","PRSNROLS",157,0)
 . . Q:PRSNTIEN'>0
"RTN","PRSNROLS",158,0)
 . . ;
"RTN","PRSNROLS",159,0)
 . . ;Description for Type of Time code
"RTN","PRSNROLS",160,0)
 . . S PRSNLNG=$P(^PRST(457.3,PRSNTIEN,0),U,2)
"RTN","PRSNROLS",161,0)
 . ;
"RTN","PRSNROLS",162,0)
 . S PRSNPOC=$P(POCD(PRSL),U,5),PRSNPOC1="**NONE**"
"RTN","PRSNROLS",163,0)
 . I PRSNPOC'="" D
"RTN","PRSNROLS",164,0)
 . . ;POC
"RTN","PRSNROLS",165,0)
 . . S PRSNPOC1=$P($$ISACTIVE^PRSNUT01(DT,PRSNPOC),U,2)
"RTN","PRSNROLS",166,0)
 . ;
"RTN","PRSNROLS",167,0)
 . ;Type of Work Code IEN
"RTN","PRSNROLS",168,0)
 . S PRSNWIEN=$P(POCD(PRSL),U,6),PRSNTW=" ",PRSNTWD=" "
"RTN","PRSNROLS",169,0)
 . I PRSNWIEN'="" D
"RTN","PRSNROLS",170,0)
 . . ;
"RTN","PRSNROLS",171,0)
 . . ;Type of Work Code
"RTN","PRSNROLS",172,0)
 . . S PRSNTW=$P(^PRSN(451.5,PRSNWIEN,0),U)
"RTN","PRSNROLS",173,0)
 . . ;
"RTN","PRSNROLS",174,0)
 . . ;Description for Type of Work code
"RTN","PRSNROLS",175,0)
 . . S PRSNTWD=$P(^PRSN(451.5,PRSNWIEN,0),U,2)
"RTN","PRSNROLS",176,0)
 . ;
"RTN","PRSNROLS",177,0)
 . ;OT Mandatory/Voluntary
"RTN","PRSNROLS",178,0)
 . S PRSNM=$P(POCD(PRSL),U,7)
"RTN","PRSNROLS",179,0)
 . ;no need to continue if this isn't an overtime record
"RTN","PRSNROLS",180,0)
 . Q:$G(PRSNM)=""
"RTN","PRSNROLS",181,0)
 . I PRSNM="V" S PRSNM="V Voluntary"
"RTN","PRSNROLS",182,0)
 . I PRSNM="M" S PRSNM="M Mandatory"
"RTN","PRSNROLS",183,0)
 . ;
"RTN","PRSNROLS",184,0)
 . S PRSNRIEN=$P(POCD(PRSL),U,8),PRSNREC=" ",PRSNRE=" "
"RTN","PRSNROLS",185,0)
 . I PRSNRIEN'="" D
"RTN","PRSNROLS",186,0)
 . . ;Reason for OT code
"RTN","PRSNROLS",187,0)
 . . S PRSNREC=$P(^PRSN(451.6,PRSNRIEN,0),U)
"RTN","PRSNROLS",188,0)
 . . ;
"RTN","PRSNROLS",189,0)
 . . ;Description for OT code
"RTN","PRSNROLS",190,0)
 . . S PRSNRE=$P(^PRSN(451.6,PRSNRIEN,0),U,2)
"RTN","PRSNROLS",191,0)
 . ;
"RTN","PRSNROLS",192,0)
 . ; OT time
"RTN","PRSNROLS",193,0)
 . S STIME=$P(POCD(PRSL),U,9)
"RTN","PRSNROLS",194,0)
 . S ETIME=$P(POCD(PRSL),U,10)
"RTN","PRSNROLS",195,0)
 . S MTIME=$P(POCD(PRSL),U,3)
"RTN","PRSNROLS",196,0)
 . S OTTIME=$$ELAPSE^PRSPESR2(MTIME,STIME,ETIME)
"RTN","PRSNROLS",197,0)
 . S OTTIME=$P(OTTIME,":",1)*60+$P(OTTIME,":",2)    ; IN MIN
"RTN","PRSNROLS",198,0)
 . S ^TMP($J,"OT",PRSNPOC1,PRSNRE,NFL)=$G(^TMP($J,"OT",PRSNPOC1,PRSNRE,NFL))+OTTIME
"RTN","PRSNROLS",199,0)
 ;
"RTN","PRSNROLS",200,0)
 Q
"RTN","PRSNROLS",201,0)
 ;
"RTN","PRSNROLS",202,0)
PRINT ;Print report
"RTN","PRSNROLS",203,0)
 ;
"RTN","PRSNROLS",204,0)
 S REPLOC="",GGGTOT=0
"RTN","PRSNROLS",205,0)
 F K=1:1:3 S GGTOT(K)=""
"RTN","PRSNROLS",206,0)
 F  S REPLOC=$O(^TMP($J,"OT",REPLOC)) Q:REPLOC=""!STOP  D
"RTN","PRSNROLS",207,0)
 . F K=1:1:3 S SOTPIM(K)=""    ; For a location level
"RTN","PRSNROLS",208,0)
 . S GGTOT=""
"RTN","PRSNROLS",209,0)
 . W ?2,$E(REPLOC,1,14)
"RTN","PRSNROLS",210,0)
 . S OTREASON=""
"RTN","PRSNROLS",211,0)
 . F  S OTREASON=$O(^TMP($J,"OT",REPLOC,OTREASON)) Q:OTREASON=""!STOP  D
"RTN","PRSNROLS",212,0)
 . . W ?18,OTREASON
"RTN","PRSNROLS",213,0)
 . . S GTOT=""
"RTN","PRSNROLS",214,0)
 . . F K=1:1:3 S OTTIM(K)=""
"RTN","PRSNROLS",215,0)
 . . S (GRANDT,NFL)=""
"RTN","PRSNROLS",216,0)
 . . F  S NFL=$O(^TMP($J,"OT",REPLOC,OTREASON,NFL)) Q:NFL=""  D
"RTN","PRSNROLS",217,0)
 . . . S OTARR(NFL)=^TMP($J,"OT",REPLOC,OTREASON,NFL)
"RTN","PRSNROLS",218,0)
 . . D GETTIME                                      ; Each occurance
"RTN","PRSNROLS",219,0)
 . . S GTOTPR=$$TIME(GTOT)
"RTN","PRSNROLS",220,0)
 . . F K=1:1:3 S OTTIM(K)=$$TIME(OTTIM(K))
"RTN","PRSNROLS",221,0)
 . . W ?40,$J(OTTIM(1),7),?50,$J(OTTIM(2),7),?60,$J(OTTIM(3),7),?70,$J(GTOTPR,7),!
"RTN","PRSNROLS",222,0)
 . . F K=1:1:3 S OTTIM(K)="",OTARR(K)=""
"RTN","PRSNROLS",223,0)
 . . S GTOTPR=""
"RTN","PRSNROLS",224,0)
 . . I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDR
"RTN","PRSNROLS",225,0)
 . Q:STOP
"RTN","PRSNROLS",226,0)
 . W !!,?3,"--------------"
"RTN","PRSNROLS",227,0)
 . F K=1:1:3 S SOTPIM(K)=$$TIME(SOTPIM(K))
"RTN","PRSNROLS",228,0)
 . S GGTOT=$$TIME(GGTOT)
"RTN","PRSNROLS",229,0)
 . W !,?10,"TOTAL:"                                     ;Location
"RTN","PRSNROLS",230,0)
 . W ?40,$J(SOTPIM(1),7),?50,$J(SOTPIM(2),7),?60,$J(SOTPIM(3),7),?70,$J(GGTOT,7),!!
"RTN","PRSNROLS",231,0)
 Q:STOP
"RTN","PRSNROLS",232,0)
 S GGGTOT=$$TIME(GGGTOT) F K=1:1:3 S GGTOT(K)=$$TIME(GGTOT(K))
"RTN","PRSNROLS",233,0)
 W !!,?4,"GRAND TOTAL:",?40,$J(GGTOT(1),7),?50,$J(GGTOT(2),7),?60,$J(GGTOT(3),7),?70,$J(GGGTOT,7)
"RTN","PRSNROLS",234,0)
 Q
"RTN","PRSNROLS",235,0)
 ;
"RTN","PRSNROLS",236,0)
GETTIME ;
"RTN","PRSNROLS",237,0)
 S GTOT=""
"RTN","PRSNROLS",238,0)
 F K=1:1:3  D
"RTN","PRSNROLS",239,0)
 . I $D(OTARR(K)) D
"RTN","PRSNROLS",240,0)
 . . ;  Reason
"RTN","PRSNROLS",241,0)
 . . S OTTIM(K)=OTARR(K)
"RTN","PRSNROLS",242,0)
 . . S GTOT=GTOT+OTARR(K)
"RTN","PRSNROLS",243,0)
 . . ;  Location
"RTN","PRSNROLS",244,0)
 . . S SOTPIM(K)=SOTPIM(K)+OTARR(K)
"RTN","PRSNROLS",245,0)
 . . S GGTOT=GGTOT+OTARR(K)
"RTN","PRSNROLS",246,0)
 . . ;  Total
"RTN","PRSNROLS",247,0)
 . . S GGTOT(K)=GGTOT(K)+OTARR(K)
"RTN","PRSNROLS",248,0)
 . . S GGGTOT=GGGTOT+OTARR(K)
"RTN","PRSNROLS",249,0)
 ;
"RTN","PRSNROLS",250,0)
 Q
"RTN","PRSNROLS",251,0)
 ;
"RTN","PRSNROLS",252,0)
TIME(TIME) ;
"RTN","PRSNROLS",253,0)
 S HR=TIME\60,MIN=TIME#60
"RTN","PRSNROLS",254,0)
 I MIN<10 S MIN=0_MIN
"RTN","PRSNROLS",255,0)
 Q HR_":"_MIN
"RTN","PRSNROLS",256,0)
 ;
"RTN","PRSNRSM0")
0^27^B8857878^n/a
"RTN","PRSNRSM0",1,0)
PRSNRSM0 ;WOIFO/DAM - Group Work Summary by Skill Mix I REPORT;9/10/2009
"RTN","PRSNRSM0",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNRSM0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","PRSNRSM0",4,0)
 ;
"RTN","PRSNRSM0",5,0)
 ;
"RTN","PRSNRSM0",6,0)
DAP ; Entry point for Data Approval Personnel
"RTN","PRSNRSM0",7,0)
 N GROUP
"RTN","PRSNRSM0",8,0)
 D ACCESS^PRSNUT02(.GROUP,"A",DT,1)
"RTN","PRSNRSM0",9,0)
 ; quit if any error during group selection
"RTN","PRSNRSM0",10,0)
 I $P($G(GROUP(0)),U,2)="E" D  Q
"RTN","PRSNRSM0",11,0)
 .W !,$P(GROUP(0),U,3)
"RTN","PRSNRSM0",12,0)
 D MAIN
"RTN","PRSNRSM0",13,0)
 Q
"RTN","PRSNRSM0",14,0)
 ;
"RTN","PRSNRSM0",15,0)
COORD ;Entry point for VANOD Coordinator
"RTN","PRSNRSM0",16,0)
 ; Coordinator has no access limits so let them pick any group
"RTN","PRSNRSM0",17,0)
 N GROUP
"RTN","PRSNRSM0",18,0)
 D PIKGROUP^PRSNUT04(.GROUP,"",1)
"RTN","PRSNRSM0",19,0)
 I $P($G(GROUP(0)),U,2)="E" D  Q
"RTN","PRSNRSM0",20,0)
 .W !,$P(GROUP(0),U,3)
"RTN","PRSNRSM0",21,0)
 D MAIN
"RTN","PRSNRSM0",22,0)
 ;
"RTN","PRSNRSM0",23,0)
 Q
"RTN","PRSNRSM0",24,0)
 ;
"RTN","PRSNRSM0",25,0)
MAIN ;
"RTN","PRSNRSM0",26,0)
 N SKILMIX,RANGE,BEG,END,EXTBEG,EXTEND,STOP
"RTN","PRSNRSM0",27,0)
 S STOP=0
"RTN","PRSNRSM0",28,0)
 D DATE
"RTN","PRSNRSM0",29,0)
 Q:STOP
"RTN","PRSNRSM0",30,0)
 D QUE
"RTN","PRSNRSM0",31,0)
 Q
"RTN","PRSNRSM0",32,0)
 ;
"RTN","PRSNRSM0",33,0)
REPORT ;for group of location or t&l
"RTN","PRSNRSM0",34,0)
 ;
"RTN","PRSNRSM0",35,0)
 N PRSIEN,PRSNGLB,PRSNG,SKILMIX,GRP,STOP,NUROLE,PICK,PRSNGA,PRSNGB,X,PG,TODAY
"RTN","PRSNRSM0",36,0)
 U IO
"RTN","PRSNRSM0",37,0)
 S PG=0,TODAY=$E(DT,4,5)_"/"_$E(DT,6,7)_"/"_$E(DT,2,3)
"RTN","PRSNRSM0",38,0)
 D HDR^PRSNRSM1(EXTBEG,EXTEND)
"RTN","PRSNRSM0",39,0)
 S (PICK,STOP)=0
"RTN","PRSNRSM0",40,0)
 F  S PICK=$O(GROUP(PICK)) Q:PICK=""!STOP  D
"RTN","PRSNRSM0",41,0)
 . S PRSNG=GROUP(0)_"^"_PICK_"^"_GROUP(PICK)
"RTN","PRSNRSM0",42,0)
 . S PRSNGLB=$S($P(PRSNG,U,2)="N":$NA(^NURSF(211.8,"D",$P(PRSNG,U,7))),1:$NA(^PRSPC("ATL"_$P(PRSNG,U,3))))
"RTN","PRSNRSM0",43,0)
 . S GRP=$P(PRSNG,U,3)  ;External form of primary location
"RTN","PRSNRSM0",44,0)
 . S PRSNGA=""
"RTN","PRSNRSM0",45,0)
 . F  S PRSNGA=$O(@PRSNGLB@(PRSNGA)) QUIT:PRSNGA=""!STOP  D
"RTN","PRSNRSM0",46,0)
 .. S PRSNGB=0
"RTN","PRSNRSM0",47,0)
 .. F  S PRSNGB=$O(@PRSNGLB@(PRSNGA,PRSNGB)) QUIT:'PRSNGB!STOP  D
"RTN","PRSNRSM0",48,0)
 ... I $P(PRSNG,U,2)="N",+$P(PRSNG,U,4)'=+$$PRIMLOC^PRSNUT03(PRSNGB) Q
"RTN","PRSNRSM0",49,0)
 ... S PRSIEN=$S($P(PRSNG,U,2)="N":+$G(^VA(200,PRSNGB,450)),1:PRSNGB)
"RTN","PRSNRSM0",50,0)
 ... S X=$$ISNURSE^PRSNUT01(PRSIEN)
"RTN","PRSNRSM0",51,0)
 ... I +X D
"RTN","PRSNRSM0",52,0)
 .... S NUROLE=$P(X,U,2)
"RTN","PRSNRSM0",53,0)
 .... D GATHER^PRSNRSM1(.SKILMIX,GRP,NUROLE,PRSIEN,BEG,END)
"RTN","PRSNRSM0",54,0)
 D PRTLP^PRSNRSM1(EXTBEG,EXTEND,.STOP)
"RTN","PRSNRSM0",55,0)
 W !!,"End of Report"
"RTN","PRSNRSM0",56,0)
 D ^%ZISC
"RTN","PRSNRSM0",57,0)
 Q
"RTN","PRSNRSM0",58,0)
 ;
"RTN","PRSNRSM0",59,0)
DATE ; User is prompted for a date range 
"RTN","PRSNRSM0",60,0)
 ;
"RTN","PRSNRSM0",61,0)
 S RANGE=$$POCRANGE^PRSNUT01()
"RTN","PRSNRSM0",62,0)
 ; QUIT HERE IF RANGE=0 
"RTN","PRSNRSM0",63,0)
 I +$G(RANGE)'>0 S STOP=1 Q
"RTN","PRSNRSM0",64,0)
 ;
"RTN","PRSNRSM0",65,0)
 S BEG=$P(RANGE,U)
"RTN","PRSNRSM0",66,0)
 S END=$P(RANGE,U,2)
"RTN","PRSNRSM0",67,0)
 S EXTBEG=$P(RANGE,U,3)
"RTN","PRSNRSM0",68,0)
 S EXTEND=$P(RANGE,U,4)
"RTN","PRSNRSM0",69,0)
 ;
"RTN","PRSNRSM0",70,0)
 Q
"RTN","PRSNRSM0",71,0)
 ;
"RTN","PRSNRSM0",72,0)
QUE ;call to generate and display report for individual activity
"RTN","PRSNRSM0",73,0)
 N %ZIS,POP,IOP
"RTN","PRSNRSM0",74,0)
 S %ZIS="MQ"
"RTN","PRSNRSM0",75,0)
 D ^%ZIS
"RTN","PRSNRSM0",76,0)
 Q:POP
"RTN","PRSNRSM0",77,0)
 I $D(IO("Q")) D
"RTN","PRSNRSM0",78,0)
 . K IO("Q")
"RTN","PRSNRSM0",79,0)
 . N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC
"RTN","PRSNRSM0",80,0)
 . S ZTDESC="GROUP WORK SUMMARY BY SKILLMIX"
"RTN","PRSNRSM0",81,0)
 . S ZTRTN="REPORT^PRSNRSM0"
"RTN","PRSNRSM0",82,0)
 . S ZTSAVE("GROUP")=""
"RTN","PRSNRSM0",83,0)
 . S ZTSAVE("GROUP(")=""
"RTN","PRSNRSM0",84,0)
 . S ZTSAVE("BEG")=""
"RTN","PRSNRSM0",85,0)
 . S ZTSAVE("END")=""
"RTN","PRSNRSM0",86,0)
 . S ZTSAVE("EXTBEG")=""
"RTN","PRSNRSM0",87,0)
 . S ZTSAVE("EXTEND")=""
"RTN","PRSNRSM0",88,0)
 . D ^%ZTLOAD
"RTN","PRSNRSM0",89,0)
 . I $D(ZTSK) S ZTREQ="@" W !,"Request "_ZTSK_" Queued."
"RTN","PRSNRSM0",90,0)
 E  D
"RTN","PRSNRSM0",91,0)
 . D REPORT
"RTN","PRSNRSM0",92,0)
 Q
"RTN","PRSNRSM1")
0^28^B16892606^n/a
"RTN","PRSNRSM1",1,0)
PRSNRSM1 ;WOIFO/DAM - Group Work Summary by Skill Mix II REPORT ;060409
"RTN","PRSNRSM1",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNRSM1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","PRSNRSM1",4,0)
 ;   
"RTN","PRSNRSM1",5,0)
 ; 
"RTN","PRSNRSM1",6,0)
GATHER(SKILMIX,GRP,NUROLE,PRSIEN,BEG,END) ;Entry point to gather POC data from 451
"RTN","PRSNRSM1",7,0)
 ;INPUT:
"RTN","PRSNRSM1",8,0)
 ;   SKILMIX: ARRAY containing totals for various types of work
"RTN","PRSNRSM1",9,0)
 ;            subscripted by nurse role (or skill mix)
"RTN","PRSNRSM1",10,0)
 ;   GRP: Nurse default location or T&L Unit
"RTN","PRSNRSM1",11,0)
 ;   NUROLE: the role (f451.1) of the nurse defined by PRSIEN
"RTN","PRSNRSM1",12,0)
 ;           this role will match one of the subscripts in the
"RTN","PRSNRSM1",13,0)
 ;           SKILMIX array
"RTN","PRSNRSM1",14,0)
 ;   PRSIEN: Nurse ien 450
"RTN","PRSNRSM1",15,0)
 ;   BEG,END: FileMan begin and end dates for report
"RTN","PRSNRSM1",16,0)
 ;
"RTN","PRSNRSM1",17,0)
 N FMDT,INDEX,CNT,DAYNODE,PPIEN,PRSNDAY,POCD
"RTN","PRSNRSM1",18,0)
 ;
"RTN","PRSNRSM1",19,0)
 S FMDT=BEG-.1
"RTN","PRSNRSM1",20,0)
 S (INDEX,CNT)=0
"RTN","PRSNRSM1",21,0)
 F  S FMDT=$O(^PRST(458,"AD",FMDT)) Q:FMDT>END!(FMDT'>0)!STOP  D
"RTN","PRSNRSM1",22,0)
 . S DAYNODE=$G(^PRST(458,"AD",FMDT))
"RTN","PRSNRSM1",23,0)
 . S PPIEN=+DAYNODE
"RTN","PRSNRSM1",24,0)
 . S PRSNDAY=$P(DAYNODE,U,2)
"RTN","PRSNRSM1",25,0)
 . K POCD   ;array to hold POC data
"RTN","PRSNRSM1",26,0)
 . D L1^PRSNRUT1(.POCD,PPIEN,PRSIEN,PRSNDAY)
"RTN","PRSNRSM1",27,0)
 . Q:$G(POCD(0))=0
"RTN","PRSNRSM1",28,0)
 . D DATA(.SKILMIX,GRP,NUROLE)
"RTN","PRSNRSM1",29,0)
 ;
"RTN","PRSNRSM1",30,0)
 Q
"RTN","PRSNRSM1",31,0)
 ;
"RTN","PRSNRSM1",32,0)
HDR(EXTBEG,EXTEND) ;Display header for report of Individual Nurse Activity
"RTN","PRSNRSM1",33,0)
 ;
"RTN","PRSNRSM1",34,0)
 W @IOF
"RTN","PRSNRSM1",35,0)
 S PG=PG+1
"RTN","PRSNRSM1",36,0)
 W ?17,"NURSE GROUP WORK SUMMARY BY SKILL MIX REPORT"
"RTN","PRSNRSM1",37,0)
 W !,?15,EXTBEG_" - "_EXTEND,?45,"Run Date: ",TODAY,?70,"Page: ",$J(PG,3)
"RTN","PRSNRSM1",38,0)
 W !         ;blank line
"RTN","PRSNRSM1",39,0)
 W !,"Grouping",?30,"Direct Care",?45,"Nondirect Care",?65,"Leave Hours"
"RTN","PRSNRSM1",40,0)
 W !,?1,"-Skill Mix",?33,"Hours",?49,"Hours"
"RTN","PRSNRSM1",41,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","PRSNRSM1",42,0)
 ;
"RTN","PRSNRSM1",43,0)
 Q
"RTN","PRSNRSM1",44,0)
 ;
"RTN","PRSNRSM1",45,0)
DATA(SKILMIX,GRP,NUROLE) ;Extract display data from POCD array
"RTN","PRSNRSM1",46,0)
 ;
"RTN","PRSNRSM1",47,0)
 N PRSL,ST,SP,MEAL,HOURS,TT,TIEN,LNG,POC,POC1,WIEN,TW,TWD
"RTN","PRSNRSM1",48,0)
 S STOP=0
"RTN","PRSNRSM1",49,0)
 ;
"RTN","PRSNRSM1",50,0)
 ;
"RTN","PRSNRSM1",51,0)
 S PRSL=0
"RTN","PRSNRSM1",52,0)
 F  S PRSL=$O(POCD(PRSL)) Q:PRSL'>0!STOP  D
"RTN","PRSNRSM1",53,0)
 . ;Start Time
"RTN","PRSNRSM1",54,0)
 . S ST=$P(POCD(PRSL),U)
"RTN","PRSNRSM1",55,0)
 . ;
"RTN","PRSNRSM1",56,0)
 . ;Stop Time 
"RTN","PRSNRSM1",57,0)
 . S SP=$P(POCD(PRSL),U,2)
"RTN","PRSNRSM1",58,0)
 . ;
"RTN","PRSNRSM1",59,0)
 . ;Meal Time
"RTN","PRSNRSM1",60,0)
 . S MEAL=$P(POCD(PRSL),U,3)
"RTN","PRSNRSM1",61,0)
 . ;
"RTN","PRSNRSM1",62,0)
 . ;Get elapsed time
"RTN","PRSNRSM1",63,0)
 . ;
"RTN","PRSNRSM1",64,0)
 . S HOURS=$$AMT^PRSPSAPU(ST,SP,MEAL)
"RTN","PRSNRSM1",65,0)
 . ;
"RTN","PRSNRSM1",66,0)
 . ;Type of Time code IEN
"RTN","PRSNRSM1",67,0)
 . S (TIEN,LNG)=""
"RTN","PRSNRSM1",68,0)
 . S TT=$P(POCD(PRSL),U,4) I TT'="" D
"RTN","PRSNRSM1",69,0)
 . . ;
"RTN","PRSNRSM1",70,0)
 . . ;Type of Time code
"RTN","PRSNRSM1",71,0)
 . . S TIEN=$O(^PRST(457.3,"B",TT,"")) Q:TIEN=""!STOP
"RTN","PRSNRSM1",72,0)
 . . ;
"RTN","PRSNRSM1",73,0)
 . . ;Description for Type of Time code
"RTN","PRSNRSM1",74,0)
 . . S LNG=$P(^PRST(457.3,TIEN,0),U,2)  ;eg, Direct Care, AL
"RTN","PRSNRSM1",75,0)
 . . ;
"RTN","PRSNRSM1",76,0)
 . S POC1=""
"RTN","PRSNRSM1",77,0)
 . S POC=$P(POCD(PRSL),U,5) I POC'="" D
"RTN","PRSNRSM1",78,0)
 . . S POC1=$P($$ISACTIVE^PRSNUT01(DT,POC),U,2) ;Location
"RTN","PRSNRSM1",79,0)
 .  ;
"RTN","PRSNRSM1",80,0)
 .  ;Type of Work Code IEN
"RTN","PRSNRSM1",81,0)
 .  S WIEN=$P(POCD(PRSL),U,6) I WIEN'="" D
"RTN","PRSNRSM1",82,0)
 . . ;
"RTN","PRSNRSM1",83,0)
 . . ;Type of Work Code
"RTN","PRSNRSM1",84,0)
 . . S TW=$P(^PRSN(451.5,WIEN,0),U)
"RTN","PRSNRSM1",85,0)
 . . ;
"RTN","PRSNRSM1",86,0)
 . . ;Description for Type of Work code
"RTN","PRSNRSM1",87,0)
 . . S TWD=$P(^PRSN(451.5,WIEN,0),U,2)
"RTN","PRSNRSM1",88,0)
 .
"RTN","PRSNRSM1",89,0)
 .;  save skill mix and hours into SKILMIX array
"RTN","PRSNRSM1",90,0)
 .  Q:(LNG="")!(POC1="")
"RTN","PRSNRSM1",91,0)
 .;
"RTN","PRSNRSM1",92,0)
 .;  If we find leave then update totals, otherwise it's work 
"RTN","PRSNRSM1",93,0)
 .;  (direct or nondirect) we update.
"RTN","PRSNRSM1",94,0)
 .  ;S $P(SKILMIX(NUROLE),U,4)=GRP    ;Nurse default location
"RTN","PRSNRSM1",95,0)
 .  I "^HX^AL^AA^DL^ML^RL^SL^CB^AD^WP^"[(U_TT_U) D
"RTN","PRSNRSM1",96,0)
 ..    S $P(SKILMIX(GRP,NUROLE),U,3)=$P($G(SKILMIX(GRP,NUROLE)),U,3)+HOURS
"RTN","PRSNRSM1",97,0)
 .  E  D
"RTN","PRSNRSM1",98,0)
 ..    I $G(TW)="DC" D
"RTN","PRSNRSM1",99,0)
 ...      S $P(SKILMIX(GRP,NUROLE),U,1)=$P($G(SKILMIX(GRP,NUROLE)),U,1)+HOURS
"RTN","PRSNRSM1",100,0)
 ..    E  D 
"RTN","PRSNRSM1",101,0)
 ...      S $P(SKILMIX(GRP,NUROLE),U,2)=$P($G(SKILMIX(GRP,NUROLE)),U,2)+HOURS
"RTN","PRSNRSM1",102,0)
 Q
"RTN","PRSNRSM1",103,0)
PRTLP(EXTBEG,EXTEND,STOP) ;Order through the SKILMIX array and pull information for display
"RTN","PRSNRSM1",104,0)
 N LV,DC,NDC,GP,SKILL
"RTN","PRSNRSM1",105,0)
 S GP=0
"RTN","PRSNRSM1",106,0)
 F  S GP=$O(SKILMIX(GP)) Q:GP=""!STOP  D
"RTN","PRSNRSM1",107,0)
 .  S SKILL=0
"RTN","PRSNRSM1",108,0)
 .  F  S SKILL=$O(SKILMIX(GP,SKILL)) Q:SKILL=""!STOP  D
"RTN","PRSNRSM1",109,0)
 ..  S LV=$P(SKILMIX(GP,SKILL),U,3)
"RTN","PRSNRSM1",110,0)
 ..  S DC=$P(SKILMIX(GP,SKILL),U)
"RTN","PRSNRSM1",111,0)
 ..  S NDC=$P(SKILMIX(GP,SKILL),U,2)
"RTN","PRSNRSM1",112,0)
 ..  D PPP(EXTBEG,EXTEND,.STOP)
"RTN","PRSNRSM1",113,0)
 Q
"RTN","PRSNRSM1",114,0)
PPP(EXTBEG,EXTEND,STOP) ;
"RTN","PRSNRSM1",115,0)
 W !
"RTN","PRSNRSM1",116,0)
 W GP
"RTN","PRSNRSM1",117,0)
 W !
"RTN","PRSNRSM1",118,0)
 W ?1,"-"_SKILL
"RTN","PRSNRSM1",119,0)
 W ?35,DC
"RTN","PRSNRSM1",120,0)
 W ?51,NDC
"RTN","PRSNRSM1",121,0)
 W ?70,LV
"RTN","PRSNRSM1",122,0)
 W !
"RTN","PRSNRSM1",123,0)
 ;
"RTN","PRSNRSM1",124,0)
 I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDR(EXTBEG,EXTEND)
"RTN","PRSNRSM1",125,0)
 Q
"RTN","PRSNRUR")
0^55^B26480927^n/a
"RTN","PRSNRUR",1,0)
PRSNRUR ;WOIFO/KJS - Unapproved POC records report;1-20-2012
"RTN","PRSNRUR",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNRUR",3,0)
 ;;Per VHA Directive 2004-038,this routine should not be modified.
"RTN","PRSNRUR",4,0)
 ;
"RTN","PRSNRUR",5,0)
 Q
"RTN","PRSNRUR",6,0)
 ;
"RTN","PRSNRUR",7,0)
EN ; Entry point for approval of POC records for a pay period.
"RTN","PRSNRUR",8,0)
 N A,B,DAY,DAYREC,DIC,DIR,DIRUT,DSPFLG,GROUP,I,IEN200
"RTN","PRSNRUR",9,0)
 N IEN450,NURSNM,PAYPD,PREVPD,PRSD,PRSFLG,PRSIEN,PRSPD,PRSPDE
"RTN","PRSNRUR",10,0)
 N PRSPDI,PRSPRM,PRSSTAT,STOP,REC,SEG
"RTN","PRSNRUR",11,0)
 D PIKGROUP^PRSNUT04(.GROUP,"",1)
"RTN","PRSNRUR",12,0)
 I $P($G(GROUP(0)),U,2)="E" D  Q
"RTN","PRSNRUR",13,0)
 . W !!,"There are no groups assigned or selected."
"RTN","PRSNRUR",14,0)
 ;
"RTN","PRSNRUR",15,0)
 S PRSPRM=$P(GROUP(0),U,2)
"RTN","PRSNRUR",16,0)
 S STOP=0
"RTN","PRSNRUR",17,0)
 ;
"RTN","PRSNRUR",18,0)
 D SETPPD
"RTN","PRSNRUR",19,0)
 Q:STOP
"RTN","PRSNRUR",20,0)
 D TYPE
"RTN","PRSNRUR",21,0)
 Q:STOP
"RTN","PRSNRUR",22,0)
 D QUE
"RTN","PRSNRUR",23,0)
 Q
"RTN","PRSNRUR",24,0)
 ;
"RTN","PRSNRUR",25,0)
SETPPD ; back up default of current pay period if it doesn't have any data
"RTN","PRSNRUR",26,0)
 ;
"RTN","PRSNRUR",27,0)
 N DIC,X,Y,DUOUT,DTOUT
"RTN","PRSNRUR",28,0)
 S PRSPDI=$O(^PRSN(451,"AEP",""),-1)
"RTN","PRSNRUR",29,0)
 S DIC("B")=PRSPDI
"RTN","PRSNRUR",30,0)
 S DIC="^PRSN(451,",DIC(0)="AEQMZ"
"RTN","PRSNRUR",31,0)
 S DIC("A")="Select a Pay Period: "
"RTN","PRSNRUR",32,0)
 S DIC("S")="I $$PPFND^PRSNRUR(+Y)"
"RTN","PRSNRUR",33,0)
 D ^DIC
"RTN","PRSNRUR",34,0)
 I $D(DUOUT)!$D(DTOUT)!(+$G(Y)'>0) S STOP=1 Q
"RTN","PRSNRUR",35,0)
 S PRSPDI=+Y
"RTN","PRSNRUR",36,0)
 ;
"RTN","PRSNRUR",37,0)
 Q
"RTN","PRSNRUR",38,0)
 ;
"RTN","PRSNRUR",39,0)
PPFND(PPIEN) ;
"RTN","PRSNRUR",40,0)
 N FOUND,PICK,DIVI
"RTN","PRSNRUR",41,0)
 S FOUND=0
"RTN","PRSNRUR",42,0)
 I $D(^PRSN(451,"AEP",PPIEN)) S FOUND=1 Q FOUND
"RTN","PRSNRUR",43,0)
 S PICK=0
"RTN","PRSNRUR",44,0)
 F  S PICK=$O(GROUP(PICK)) Q:'PICK  D  Q:FOUND
"RTN","PRSNRUR",45,0)
 . S DIVI=$P(GROUP(PICK),U,2)
"RTN","PRSNRUR",46,0)
 . I $D(^PRSN(451,"ACE",DIVI,PPIEN)) S FOUND=1
"RTN","PRSNRUR",47,0)
 Q FOUND
"RTN","PRSNRUR",48,0)
 ;
"RTN","PRSNRUR",49,0)
TYPE ;Choose summary or detailed group activity report
"RTN","PRSNRUR",50,0)
 ;
"RTN","PRSNRUR",51,0)
 N DIR,DIRUT,X,Y
"RTN","PRSNRUR",52,0)
 S DIR(0)="S^S:Summary Report;D:Detailed Report"
"RTN","PRSNRUR",53,0)
 S DIR("A")="Enter Selection"
"RTN","PRSNRUR",54,0)
 S DIR("?")="Enter whether you want to select a Summary or Detailed Group Activity Report"
"RTN","PRSNRUR",55,0)
 D ^DIR
"RTN","PRSNRUR",56,0)
 I $D(DIRUT) S STOP=1 Q
"RTN","PRSNRUR",57,0)
 S TYPE=Y
"RTN","PRSNRUR",58,0)
 Q
"RTN","PRSNRUR",59,0)
 ;
"RTN","PRSNRUR",60,0)
QUE ;call to generate and display report for individual activity
"RTN","PRSNRUR",61,0)
 N %ZIS,POP,IOP
"RTN","PRSNRUR",62,0)
 S %ZIS="MQ"
"RTN","PRSNRUR",63,0)
 D ^%ZIS
"RTN","PRSNRUR",64,0)
 Q:POP
"RTN","PRSNRUR",65,0)
 I $D(IO("Q")) D
"RTN","PRSNRUR",66,0)
 . K IO("Q")
"RTN","PRSNRUR",67,0)
 . N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC
"RTN","PRSNRUR",68,0)
 . S ZTDESC="UNAPPROVED POC TIME "_TYPE_" REPORT"
"RTN","PRSNRUR",69,0)
 . S ZTRTN="REPORT^PRSNRUR"
"RTN","PRSNRUR",70,0)
 . S ZTSAVE("GROUP")=""
"RTN","PRSNRUR",71,0)
 . S ZTSAVE("GROUP(")=""
"RTN","PRSNRUR",72,0)
 . S ZTSAVE("TYPE")=""
"RTN","PRSNRUR",73,0)
 . S ZTSAVE("PRSPDI")=""
"RTN","PRSNRUR",74,0)
 . D ^%ZTLOAD
"RTN","PRSNRUR",75,0)
 . I $D(ZTSK) S ZTREQ="@" W !,"Request "_ZTSK_" queued."
"RTN","PRSNRUR",76,0)
 E  D
"RTN","PRSNRUR",77,0)
 . D REPORT
"RTN","PRSNRUR",78,0)
 Q
"RTN","PRSNRUR",79,0)
 ;
"RTN","PRSNRUR",80,0)
REPORT ;for group of location or t&l
"RTN","PRSNRUR",81,0)
 ;
"RTN","PRSNRUR",82,0)
 N PRSIEN,PRSNG,PICK,PG,STOP,PRSPDE,TODAY,PRSNARY,PRSNAME,PRSNTL,IEN200
"RTN","PRSNRUR",83,0)
 N TOT,GTOT
"RTN","PRSNRUR",84,0)
 K ^TMP($J,"PRSNR")
"RTN","PRSNRUR",85,0)
 S PRSPDE=$P(^PRSN(451,PRSPDI,0),U)
"RTN","PRSNRUR",86,0)
 U IO
"RTN","PRSNRUR",87,0)
 S PG=0,TODAY=$E(DT,4,5)_"/"_$E(DT,6,7)_"/"_$E(DT,2,3)
"RTN","PRSNRUR",88,0)
 S (PICK,STOP)=0
"RTN","PRSNRUR",89,0)
 F  S PICK=$O(GROUP(PICK)) Q:PICK=""!STOP  D
"RTN","PRSNRUR",90,0)
 . S PRSNG=GROUP(0)_"^"_PICK_"^"_GROUP(PICK)
"RTN","PRSNRUR",91,0)
 . S PRSIEN=0
"RTN","PRSNRUR",92,0)
 . F  S PRSIEN=$O(^PRSN(451,"AEP",PRSPDI,PRSIEN)) Q:'PRSIEN  D
"RTN","PRSNRUR",93,0)
 .. S PRSNARY=$G(^PRSPC(PRSIEN,0))
"RTN","PRSNRUR",94,0)
 .. S PRSNAME=$P(PRSNARY,U)              ;Nurse Name
"RTN","PRSNRUR",95,0)
 .. S PRSNTL=$P(PRSNARY,U,8)             ;Nurse T&L
"RTN","PRSNRUR",96,0)
 .. S IEN200=$P($G(^PRSPC(PRSIEN,200)),U)
"RTN","PRSNRUR",97,0)
 .. I $P(PRSNG,U,2)="N",+$P(PRSNG,U,4)'=+$$PRIMLOC^PRSNUT03(IEN200) Q
"RTN","PRSNRUR",98,0)
 .. I $P(PRSNG,U,2)="T",PICK'=PRSNTL Q
"RTN","PRSNRUR",99,0)
 .. S ^TMP($J,"PRSNR",PICK,PRSNAME,PRSIEN,"A")=""
"RTN","PRSNRUR",100,0)
 .;
"RTN","PRSNRUR",101,0)
 . S DIVI=$P(GROUP(PICK),U,2)
"RTN","PRSNRUR",102,0)
 . S PRSIEN=0
"RTN","PRSNRUR",103,0)
 . F  S PRSIEN=$O(^PRSN(451,"ACE",DIVI,PRSPDI,PRSIEN)) Q:'PRSIEN  D
"RTN","PRSNRUR",104,0)
 .. S PRSNARY=$G(^PRSPC(PRSIEN,0))
"RTN","PRSNRUR",105,0)
 .. S PRSNAME=$P(PRSNARY,U)              ;Nurse Name
"RTN","PRSNRUR",106,0)
 .. S PRSNTL=$P(PRSNARY,U,8)             ;Nurse T&L
"RTN","PRSNRUR",107,0)
 .. S IEN200=$P($G(^PRSPC(PRSIEN,200)),U)
"RTN","PRSNRUR",108,0)
 .. I $P(PRSNG,U,2)="N",+$P(PRSNG,U,4)'=+$$PRIMLOC^PRSNUT03(IEN200) Q
"RTN","PRSNRUR",109,0)
 .. I $P(PRSNG,U,2)="T",PICK'=PRSNTL Q
"RTN","PRSNRUR",110,0)
 .. S ^TMP($J,"PRSNR",PICK,PRSNAME,PRSIEN,"C")=""
"RTN","PRSNRUR",111,0)
 ;
"RTN","PRSNRUR",112,0)
 S PICK="",(GTOT("A"),GTOT("C"))=0
"RTN","PRSNRUR",113,0)
 D HDR
"RTN","PRSNRUR",114,0)
 F  S PICK=$O(^TMP($J,"PRSNR",PICK)) Q:PICK=""!STOP  D
"RTN","PRSNRUR",115,0)
 . I TYPE="D" D
"RTN","PRSNRUR",116,0)
 .. S GHD="Location: "_PICK
"RTN","PRSNRUR",117,0)
 .. S TAB=IOM-$L(GHD)/2-5
"RTN","PRSNRUR",118,0)
 .. W !!,?TAB,GHD,!
"RTN","PRSNRUR",119,0)
 .. W ?TAB F I=1:1:$L(GHD) W "-"
"RTN","PRSNRUR",120,0)
 . S PRSNAME="",(TOT("A"),TOT("C"))=0
"RTN","PRSNRUR",121,0)
 . F  S PRSNAME=$O(^TMP($J,"PRSNR",PICK,PRSNAME)) Q:PRSNAME=""!STOP  D
"RTN","PRSNRUR",122,0)
 .. S PRSIEN=""
"RTN","PRSNRUR",123,0)
 .. F  S PRSIEN=$O(^TMP($J,"PRSNR",PICK,PRSNAME,PRSIEN)) Q:PRSIEN=""!STOP  D
"RTN","PRSNRUR",124,0)
 ... S TT=""
"RTN","PRSNRUR",125,0)
 ... F  S TT=$O(^TMP($J,"PRSNR",PICK,PRSNAME,PRSIEN,TT)) Q:TT=""!STOP  D
"RTN","PRSNRUR",126,0)
 .... S TOT(TT)=TOT(TT)+1,GTOT(TT)=GTOT(TT)+1
"RTN","PRSNRUR",127,0)
 .... Q:TYPE'="D"
"RTN","PRSNRUR",128,0)
 .... ;detailed report
"RTN","PRSNRUR",129,0)
 .... I (IOSL-4)<$Y D HDR
"RTN","PRSNRUR",130,0)
 .... Q:STOP
"RTN","PRSNRUR",131,0)
 .... W !,PRSNAME W:TT="C" "  Corrected"
"RTN","PRSNRUR",132,0)
 . W:TYPE="D" !
"RTN","PRSNRUR",133,0)
 . W !,"Total for ",PICK,": ",TOT("A"),"  Corrected: ",TOT("C")
"RTN","PRSNRUR",134,0)
 W !!,"Grand Total: ",GTOT("A"),"  Corrected: ",GTOT("C")
"RTN","PRSNRUR",135,0)
 W !!,"End of Report"
"RTN","PRSNRUR",136,0)
 D ^%ZISC
"RTN","PRSNRUR",137,0)
 D CLEANUP
"RTN","PRSNRUR",138,0)
 Q
"RTN","PRSNRUR",139,0)
 ;
"RTN","PRSNRUR",140,0)
HDR ;
"RTN","PRSNRUR",141,0)
 ;
"RTN","PRSNRUR",142,0)
 I PG>0 S STOP=$$ASK^PRSLIB00()
"RTN","PRSNRUR",143,0)
 Q:STOP
"RTN","PRSNRUR",144,0)
 W @IOF
"RTN","PRSNRUR",145,0)
 S PG=PG+1
"RTN","PRSNRUR",146,0)
 W "Unapproved Pay Period POC Records for "
"RTN","PRSNRUR",147,0)
 W $S($P(PRSNG,U,2)="N":"Nurse Location",1:"T&L Unit")
"RTN","PRSNRUR",148,0)
 W ?66,"Pay Pd: ",PRSPDE,!
"RTN","PRSNRUR",149,0)
 W:TYPE="D" "Nurse Name"
"RTN","PRSNRUR",150,0)
 W ?35,$S(TYPE="D":"Detail",1:"Summary"),?66,"Page: ",PG,!
"RTN","PRSNRUR",151,0)
 F I=1:1:80 W "-"
"RTN","PRSNRUR",152,0)
 ;
"RTN","PRSNRUR",153,0)
 Q
"RTN","PRSNRUR",154,0)
 ;
"RTN","PRSNRUR",155,0)
CLEANUP ;
"RTN","PRSNRUR",156,0)
 K ^TMP($J,"PRSNR")
"RTN","PRSNRUR",157,0)
 Q
"RTN","PRSNRUT0")
0^29^B18653114^n/a
"RTN","PRSNRUT0",1,0)
PRSNRUT0 ;WOIFO/DAM - Report for POC Data;060409
"RTN","PRSNRUT0",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNRUT0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","PRSNRUT0",4,0)
 ;
"RTN","PRSNRUT0",5,0)
 ;   
"RTN","PRSNRUT0",6,0)
 ; 
"RTN","PRSNRUT0",7,0)
POCDSPLY(PRSIEN,BEG,END) ;Entry point to gather POC data from 451
"RTN","PRSNRUT0",8,0)
 ;INPUT:
"RTN","PRSNRUT0",9,0)
 ;   PRSIEN: Nurse ien 450
"RTN","PRSNRUT0",10,0)
 ;   BEG,END: FileMan begin and end dates for report
"RTN","PRSNRUT0",11,0)
 ;
"RTN","PRSNRUT0",12,0)
 N STOP,PRSNL,DAYNODE,EXTBEG,EXTEND,FMDT,PPIEN,PRSNAME,PRSNSSN,PRSNTL
"RTN","PRSNRUT0",13,0)
 N PRSNPP,PRSNDAY,PRSNDY,PRSDT,PG,TODAY
"RTN","PRSNRUT0",14,0)
 S STOP=0,PG=0,TODAY=$E(DT,4,5)_"/"_$E(DT,6,7)_"/"_$E(DT,2,3)
"RTN","PRSNRUT0",15,0)
 D INITIAL
"RTN","PRSNRUT0",16,0)
 S PRSNL=$$DEFAULTL()
"RTN","PRSNRUT0",17,0)
 D HDRINFO
"RTN","PRSNRUT0",18,0)
 D HDR
"RTN","PRSNRUT0",19,0)
 S FMDT=BEG-.1
"RTN","PRSNRUT0",20,0)
 F  S FMDT=$O(^PRST(458,"AD",FMDT)) Q:FMDT>END!(FMDT'>0)!STOP  D
"RTN","PRSNRUT0",21,0)
 . S DAYNODE=$G(^PRST(458,"AD",FMDT))
"RTN","PRSNRUT0",22,0)
 . S PPIEN=+DAYNODE
"RTN","PRSNRUT0",23,0)
 . S PRSNDAY=$P(DAYNODE,U,2)
"RTN","PRSNRUT0",24,0)
 . Q:'PRSNDAY
"RTN","PRSNRUT0",25,0)
 . K POCD   ;array to hold POC data
"RTN","PRSNRUT0",26,0)
 . D L1^PRSNRUT1(.POCD,PPIEN,PRSIEN,PRSNDAY)
"RTN","PRSNRUT0",27,0)
 . D GETDAY(PRSNDAY,.PRSNDY,.PRSDT)
"RTN","PRSNRUT0",28,0)
 . D DATA
"RTN","PRSNRUT0",29,0)
 Q
"RTN","PRSNRUT0",30,0)
 ;
"RTN","PRSNRUT0",31,0)
DEFAULTL() ;Find external value-nurse's default location
"RTN","PRSNRUT0",32,0)
 ;
"RTN","PRSNRUT0",33,0)
 Q $P($$PRIMLOC^PRSNUT03($G(^PRSPC(PRSIEN,200))),U,3)
"RTN","PRSNRUT0",34,0)
 ;
"RTN","PRSNRUT0",35,0)
HDRINFO ;Find nurse information to display in report header
"RTN","PRSNRUT0",36,0)
 ;
"RTN","PRSNRUT0",37,0)
 N PRSNARY
"RTN","PRSNRUT0",38,0)
 S PRSNARY=$G(^PRSPC(PRSIEN,0))
"RTN","PRSNRUT0",39,0)
 S PRSNAME=$P(PRSNARY,U)             ;Nurse Name
"RTN","PRSNRUT0",40,0)
 S PRSNSSN=$P(PRSNARY,U,9)           ;Nurse SSN
"RTN","PRSNRUT0",41,0)
 S PRSNTL=$P(PRSNARY,U,8)              ;Nurse T&L
"RTN","PRSNRUT0",42,0)
 Q
"RTN","PRSNRUT0",43,0)
 ;
"RTN","PRSNRUT0",44,0)
HDR ;Display header for report of Individual Nurse Activity
"RTN","PRSNRUT0",45,0)
 ;
"RTN","PRSNRUT0",46,0)
 W @IOF
"RTN","PRSNRUT0",47,0)
 S PG=PG+1
"RTN","PRSNRUT0",48,0)
 W PRSNAME,?32,PRSNL,?48,"T&L"_" "_PRSNTL,?48,?68,$E(PRSNSSN,6,9)
"RTN","PRSNRUT0",49,0)
 W !,EXTBEG_" - "_EXTEND,?45,"Run Date: ",TODAY,?70,"Page: ",$J(PG,3)
"RTN","PRSNRUT0",50,0)
 W !         ;blank line
"RTN","PRSNRUT0",51,0)
 W !,"Date",?11,"Tour Time",?27,"Location",?57,"OT Mandatory"
"RTN","PRSNRUT0",52,0)
 W !,?11,"-Exceptions",?27,"-Work Type",?57,"-OT Reason"
"RTN","PRSNRUT0",53,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","PRSNRUT0",54,0)
 ;
"RTN","PRSNRUT0",55,0)
 Q
"RTN","PRSNRUT0",56,0)
 ;
"RTN","PRSNRUT0",57,0)
GETDAY(PRSNDAY,PRSNDY,PRSDT) ;Find external value of Day Number
"RTN","PRSNRUT0",58,0)
 ;
"RTN","PRSNRUT0",59,0)
 N PRSDY
"RTN","PRSNRUT0",60,0)
 ;
"RTN","PRSNRUT0",61,0)
 S PRSDY=$P(^PRST(458,PPIEN,2),U,PRSNDAY)
"RTN","PRSNRUT0",62,0)
 S PRSNDY=$P(PRSDY," "),PRSDT=$P(PRSDY," ",2,3)
"RTN","PRSNRUT0",63,0)
 ;
"RTN","PRSNRUT0",64,0)
 Q
"RTN","PRSNRUT0",65,0)
 ;
"RTN","PRSNRUT0",66,0)
DATA ;Extract display data from POCD array
"RTN","PRSNRUT0",67,0)
 ;
"RTN","PRSNRUT0",68,0)
 N PRSNST,PRSNSP,PRSNPOC,PRSNPOC1,PRSNTT,PRSNWIEN,PRSNLNG,PRSNTW
"RTN","PRSNRUT0",69,0)
 N PRSNM,PRSNRE,PRSNREC,PRSNTWD,PRSNRIEN,PRSNTIEN,PRSL
"RTN","PRSNRUT0",70,0)
 ;
"RTN","PRSNRUT0",71,0)
 S PRSL=0
"RTN","PRSNRUT0",72,0)
 F  S PRSL=$O(POCD(PRSL)) Q:PRSL'>0!STOP  D
"RTN","PRSNRUT0",73,0)
 . ;Start and stop time
"RTN","PRSNRUT0",74,0)
 . S PRSNST=$P(POCD(PRSL),U),PRSNSP=$P(POCD(PRSL),U,2)
"RTN","PRSNRUT0",75,0)
 . ;
"RTN","PRSNRUT0",76,0)
 . ;Type of Time code IEN
"RTN","PRSNRUT0",77,0)
 . S PRSNTT=$P(POCD(PRSL),U,4),PRSNTIEN=" ",PRSNLNG=" "
"RTN","PRSNRUT0",78,0)
 . I PRSNTT'="" D
"RTN","PRSNRUT0",79,0)
 . . ;
"RTN","PRSNRUT0",80,0)
 . . ;Type of Time code
"RTN","PRSNRUT0",81,0)
 . . S PRSNTIEN=$O(^PRST(457.3,"B",PRSNTT,0)) Q:PRSNTIEN'>0
"RTN","PRSNRUT0",82,0)
 . . ;
"RTN","PRSNRUT0",83,0)
 . . ;Description for Type of Time code
"RTN","PRSNRUT0",84,0)
 . . S PRSNLNG=$P(^PRST(457.3,PRSNTIEN,0),U,2)
"RTN","PRSNRUT0",85,0)
 . . ;
"RTN","PRSNRUT0",86,0)
 . S PRSNPOC=$P(POCD(PRSL),U,5),PRSNPOC1=" "
"RTN","PRSNRUT0",87,0)
 . I PRSNPOC'="" D
"RTN","PRSNRUT0",88,0)
 . . ;POC
"RTN","PRSNRUT0",89,0)
 . . S PRSNPOC1=$P($$ISACTIVE^PRSNUT01(DT,PRSNPOC),U,2)
"RTN","PRSNRUT0",90,0)
 . ;
"RTN","PRSNRUT0",91,0)
 . ;Type of Work Code IEN
"RTN","PRSNRUT0",92,0)
 . S PRSNWIEN=$P(POCD(PRSL),U,6),PRSNTW=" ",PRSNTWD=" "
"RTN","PRSNRUT0",93,0)
 . I PRSNWIEN'="" D
"RTN","PRSNRUT0",94,0)
 . . ;
"RTN","PRSNRUT0",95,0)
 . . ;Type of Work Code
"RTN","PRSNRUT0",96,0)
 . . S PRSNTW=$P(^PRSN(451.5,PRSNWIEN,0),U)
"RTN","PRSNRUT0",97,0)
 . . ;
"RTN","PRSNRUT0",98,0)
 . . ;Description for Type of Work code
"RTN","PRSNRUT0",99,0)
 . . S PRSNTWD=$P(^PRSN(451.5,PRSNWIEN,0),U,2)
"RTN","PRSNRUT0",100,0)
 .  ;
"RTN","PRSNRUT0",101,0)
 . ;OT Mandatory/Voluntary
"RTN","PRSNRUT0",102,0)
 . S PRSNM=$P(POCD(PRSL),U,7)
"RTN","PRSNRUT0",103,0)
 . I PRSNM'="" D
"RTN","PRSNRUT0",104,0)
 . . I PRSNM="V" S PRSNM="V Voluntary"
"RTN","PRSNRUT0",105,0)
 . . I PRSNM="M" S PRSNM="M Mandatory"
"RTN","PRSNRUT0",106,0)
 . . ;
"RTN","PRSNRUT0",107,0)
 . S PRSNRIEN=$P(POCD(PRSL),U,8),PRSNREC=" ",PRSNRE=" "
"RTN","PRSNRUT0",108,0)
 . I PRSNRIEN'="" D
"RTN","PRSNRUT0",109,0)
 . . ;Reason for OT code
"RTN","PRSNRUT0",110,0)
 . . S PRSNREC=$P(^PRSN(451.6,PRSNRIEN,0),U)
"RTN","PRSNRUT0",111,0)
 . . ;
"RTN","PRSNRUT0",112,0)
 . . ;Description for OT code
"RTN","PRSNRUT0",113,0)
 . . S PRSNRE=$P(^PRSN(451.6,PRSNRIEN,0),U,2)
"RTN","PRSNRUT0",114,0)
 . ;
"RTN","PRSNRUT0",115,0)
 . D PRNT
"RTN","PRSNRUT0",116,0)
 ;
"RTN","PRSNRUT0",117,0)
 Q
"RTN","PRSNRUT0",118,0)
 ;
"RTN","PRSNRUT0",119,0)
PRNT ;Print report
"RTN","PRSNRUT0",120,0)
 ;
"RTN","PRSNRUT0",121,0)
 W !
"RTN","PRSNRUT0",122,0)
 I PRSL=1 W PRSNDY
"RTN","PRSNRUT0",123,0)
 W ?11,$G(PRSNST)_"-"_$G(PRSNSP),?27,$G(PRSNPOC1),?57,$G(PRSNM)
"RTN","PRSNRUT0",124,0)
 W !
"RTN","PRSNRUT0",125,0)
 I PRSL=1 W PRSDT
"RTN","PRSNRUT0",126,0)
 W ?11,"-"_$G(PRSNTT)_" "_$G(PRSNLNG),?27,"-"_$G(PRSNTW)_" "_$G(PRSNTWD),?57,"-"_$G(PRSNREC)_" "_$G(PRSNRE)
"RTN","PRSNRUT0",127,0)
 W !      ;blank line
"RTN","PRSNRUT0",128,0)
 ;
"RTN","PRSNRUT0",129,0)
 I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDR
"RTN","PRSNRUT0",130,0)
 Q
"RTN","PRSNRUT0",131,0)
 ;
"RTN","PRSNRUT0",132,0)
INITIAL ;  Set up external date range
"RTN","PRSNRUT0",133,0)
 ;
"RTN","PRSNRUT0",134,0)
 N Y
"RTN","PRSNRUT0",135,0)
 S Y=BEG D DD^%DT S EXTBEG=Y
"RTN","PRSNRUT0",136,0)
 S Y=END D DD^%DT S EXTEND=Y
"RTN","PRSNRUT0",137,0)
 Q
"RTN","PRSNRUT1")
0^30^B6371966^n/a
"RTN","PRSNRUT1",1,0)
PRSNRUT1 ;WOIFO/DAM - API Pull POC Data;060409
"RTN","PRSNRUT1",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNRUT1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","PRSNRUT1",4,0)
 ;
"RTN","PRSNRUT1",5,0)
 ;INPUT:
"RTN","PRSNRUT1",6,0)
 ;    PPIEN: Pay period IEN is in TIME & ATTENDANCE RECORDS file (#458)
"RTN","PRSNRUT1",7,0)
 ;         The .01 field is the pay period, eg "09-07" 
"RTN","PRSNRUT1",8,0)
 ;                and matches the .01 field in 
"RTN","PRSNRUT1",9,0)
 ;                POC DAILY TIME RECORDS file (#451)
"RTN","PRSNRUT1",10,0)
 ;         The IEN is in the 2nd subscript and B xref of 
"RTN","PRSNRUT1",11,0)
 ;                the .01 field in file (#458)
"RTN","PRSNRUT1",12,0)
 ;    PRSIEN: Nurse IEN is the .01 field in the POC DAILY TIME RECORDS 
"RTN","PRSNRUT1",13,0)
 ;          file (#451) multiple 451.09
"RTN","PRSNRUT1",14,0)
 ;    PRSNDAY: Day number is the .01 field in POC DAILY TIME RECORDS 
"RTN","PRSNRUT1",15,0)
 ;           file (#451) multiple 451.99. This parameter is optional.  
"RTN","PRSNRUT1",16,0)
 ;           If a DAY is not passed in, results for the entire pay 
"RTN","PRSNRUT1",17,0)
 ;           period are returned.
"RTN","PRSNRUT1",18,0)
 ;    PRSNVER: "C" or "P" to retrieve Current or Previous version of time record
"RTN","PRSNRUT1",19,0)
 ;    
"RTN","PRSNRUT1",20,0)
 ;OUTPUT:
"RTN","PRSNRUT1",21,0)
 ;    Returns array POCD(N)="Start Time^Stop Time^Meal Time
"RTN","PRSNRUT1",22,0)
 ;    ^Type of Time^Point of Care^Type of Work^Mandatory Indicator
"RTN","PRSNRUT1",23,0)
 ;    ^Reason for OT/CT/RG"
"RTN","PRSNRUT1",24,0)
 ;         
"RTN","PRSNRUT1",25,0)
L1(POCD,PPIEN,PRSIEN,PRSNDAY,PRSNVER) ;EMPLOYEE
"RTN","PRSNRUT1",26,0)
 ;Called from PRSNRUT0
"RTN","PRSNRUT1",27,0)
 ;
"RTN","PRSNRUT1",28,0)
 S PRSNVER=$G(PRSNVER,"C")
"RTN","PRSNRUT1",29,0)
 S POCD(0)=0
"RTN","PRSNRUT1",30,0)
 N N
"RTN","PRSNRUT1",31,0)
 S N=1
"RTN","PRSNRUT1",32,0)
 N PRSND0,PRSND1,PRSND2,PRSND3,PRSND4
"RTN","PRSNRUT1",33,0)
 S PRSND0=PPIEN
"RTN","PRSNRUT1",34,0)
 S PRSND1=0
"RTN","PRSNRUT1",35,0)
 F  S PRSND1=$O(^PRSN(451,PRSND0,"E",PRSND1)) Q:PRSND1'>0  D
"RTN","PRSNRUT1",36,0)
 .  I $P($G(^PRSN(451,PRSND0,"E",PRSND1,0)),U,1)=PRSIEN  D 
"RTN","PRSNRUT1",37,0)
 . .  D L2(.POCD,PRSND0,PRSND1,PRSNDAY,PRSNVER)
"RTN","PRSNRUT1",38,0)
 Q
"RTN","PRSNRUT1",39,0)
 ;
"RTN","PRSNRUT1",40,0)
L2(POCD,PRSND0,PRSND1,PRSNDAY,PRSNVER)      ;Loop through DAY entries
"RTN","PRSNRUT1",41,0)
 ;
"RTN","PRSNRUT1",42,0)
 S PRSNVER=$G(PRSNVER,"C")
"RTN","PRSNRUT1",43,0)
 S PRSND2=0
"RTN","PRSNRUT1",44,0)
 F  S PRSND2=$O(^PRSN(451,PRSND0,"E",PRSND1,"D",PRSND2)) Q:'PRSND2  D
"RTN","PRSNRUT1",45,0)
 .  I $P(^PRSN(451,PRSND0,"E",PRSND1,"D",PRSND2,0),U,1)=PRSNDAY D
"RTN","PRSNRUT1",46,0)
 ..   D L3(.POCD,PRSND0,PRSND1,PRSND2,PRSNVER)
"RTN","PRSNRUT1",47,0)
 .  I PRSNDAY="" D L3(.POCD,PRSND0,PRSND1,PRSND2,PRSNVER)
"RTN","PRSNRUT1",48,0)
 Q
"RTN","PRSNRUT1",49,0)
 ;
"RTN","PRSNRUT1",50,0)
L3(POCD,PRSND0,PRSND1,PRSND2,PRSNVER) ;Loop through VERSION entries
"RTN","PRSNRUT1",51,0)
 ;
"RTN","PRSNRUT1",52,0)
 S PRSNVER=$G(PRSNVER,"C")
"RTN","PRSNRUT1",53,0)
 S PRSND3=99999
"RTN","PRSNRUT1",54,0)
 S PRSND3=$O(^PRSN(451,PRSND0,"E",PRSND1,"D",PRSND2,"V",PRSND3),-1)
"RTN","PRSNRUT1",55,0)
 Q:PRSND3=""
"RTN","PRSNRUT1",56,0)
 I PRSNVER="P" S PRSND3=$O(^PRSN(451,PRSND0,"E",PRSND1,"D",PRSND2,"V",PRSND3),-1)
"RTN","PRSNRUT1",57,0)
 Q:PRSND3=""
"RTN","PRSNRUT1",58,0)
 D L4(.POCD,PRSND0,PRSND1,PRSND2,PRSND3)
"RTN","PRSNRUT1",59,0)
 Q
"RTN","PRSNRUT1",60,0)
 ;
"RTN","PRSNRUT1",61,0)
L4(POCD,PRSND0,PRSND1,PRSND2,PRSND3) ;RETURN DATA
"RTN","PRSNRUT1",62,0)
 ;
"RTN","PRSNRUT1",63,0)
 S PRSND4=0
"RTN","PRSNRUT1",64,0)
 F  S PRSND4=$O(^PRSN(451,PRSND0,"E",PRSND1,"D",PRSND2,"V",PRSND3,"T",PRSND4)) Q:'PRSND4  D
"RTN","PRSNRUT1",65,0)
 .  S POCD(N)=$P(^PRSN(451,PRSND0,"E",PRSND1,"D",PRSND2,"V",PRSND3,"T",PRSND4,0),U,1,10)
"RTN","PRSNRUT1",66,0)
 .  S $P(POCD(N),U,11)=PRSND3
"RTN","PRSNRUT1",67,0)
 .  S POCD(0)=N
"RTN","PRSNRUT1",68,0)
 .  S N=N+1
"RTN","PRSNRUT1",69,0)
 ;If there is at least one time segment then we are done
"RTN","PRSNRUT1",70,0)
 Q:N>1
"RTN","PRSNRUT1",71,0)
 ;Otherwise, update version number here for deleted time records
"RTN","PRSNRUT1",72,0)
 S $P(POCD(N),U,11)=PRSND3
"RTN","PRSNRUT1",73,0)
 S POCD(0)=N
"RTN","PRSNRUT1",74,0)
 ;
"RTN","PRSNRUT1",75,0)
 Q
"RTN","PRSNUT01")
0^33^B37189173^n/a
"RTN","PRSNUT01",1,0)
PRSNUT01 ;WOIFO/JAH - Nurse Activity for VANOD Utilities;6/5/2009
"RTN","PRSNUT01",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNUT01",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSNUT01",4,0)
 Q
"RTN","PRSNUT01",5,0)
 ;
"RTN","PRSNUT01",6,0)
GETCODES(PRSIEN) ;function returns the following codes from file 450
"RTN","PRSNUT01",7,0)
 ;       Cost Center (CST)
"RTN","PRSNUT01",8,0)
 ;       Budget Object Code (BOC)
"RTN","PRSNUT01",9,0)
 ;       Assignment Code (ASN)
"RTN","PRSNUT01",10,0)
 ;       Occupation Series Code (OCC)
"RTN","PRSNUT01",11,0)
 ;
"RTN","PRSNUT01",12,0)
 N IENS,BOC,BOCE,OCC,ASN,CST,FIELDS,ASNE,CSTE,OCCE
"RTN","PRSNUT01",13,0)
 S IENS=PRSIEN_","
"RTN","PRSNUT01",14,0)
 D GETS^DIQ(450,IENS,"3;15.5;17;18","IE","FIELDS(",,)
"RTN","PRSNUT01",15,0)
 S BOC=$G(FIELDS(450,IENS,18,"I"))
"RTN","PRSNUT01",16,0)
 S OCC=$G(FIELDS(450,IENS,15.5,"I"))
"RTN","PRSNUT01",17,0)
 S ASN=$G(FIELDS(450,IENS,3,"I"))
"RTN","PRSNUT01",18,0)
 S CST=$G(FIELDS(450,IENS,17,"I"))
"RTN","PRSNUT01",19,0)
 S BOCE=$G(FIELDS(450,IENS,18,"E"))
"RTN","PRSNUT01",20,0)
 S OCCE=$G(FIELDS(450,IENS,15.5,"E"))
"RTN","PRSNUT01",21,0)
 S ASNE=$G(FIELDS(450,IENS,3,"E"))
"RTN","PRSNUT01",22,0)
 S CSTE=$G(FIELDS(450,IENS,17,"E"))
"RTN","PRSNUT01",23,0)
 Q BOC_U_OCC_U_ASN_U_CST_U_BOCE_U_OCCE_U_ASNE_U_CSTE
"RTN","PRSNUT01",24,0)
 ;
"RTN","PRSNUT01",25,0)
GETDEG(PRSIEN) ;function returns degree and year of degree
"RTN","PRSNUT01",26,0)
 ;
"RTN","PRSNUT01",27,0)
 N IENS,DEGREE,YEAR,FIELDS
"RTN","PRSNUT01",28,0)
 S IENS=PRSIEN_","
"RTN","PRSNUT01",29,0)
 D GETS^DIQ(450,IENS,"10;47","IE","FIELDS(",,)
"RTN","PRSNUT01",30,0)
 S DEGREE=$G(FIELDS(450,IENS,10,"E"))
"RTN","PRSNUT01",31,0)
 S YEAR=$G(FIELDS(450,IENS,47,"I"))
"RTN","PRSNUT01",32,0)
 Q DEGREE_U_YEAR
"RTN","PRSNUT01",33,0)
 ;
"RTN","PRSNUT01",34,0)
ISNURSE(PRSIEN) ;Return True if employee is a nurse
"RTN","PRSNUT01",35,0)
 ;
"RTN","PRSNUT01",36,0)
 ;Lookup employees values in 450 for the following:
"RTN","PRSNUT01",37,0)
 ;       Cost Center (CST)
"RTN","PRSNUT01",38,0)
 ;       Budget Object Code (BOC)
"RTN","PRSNUT01",39,0)
 ;       Assignment Code (ASN)
"RTN","PRSNUT01",40,0)
 ;       Occupation Series Code (OCC)
"RTN","PRSNUT01",41,0)
 ;Determine whether they are a nurse by matching them to one of the
"RTN","PRSNUT01",42,0)
 ;entries in the Nurse Role file
"RTN","PRSNUT01",43,0)
 ;
"RTN","PRSNUT01",44,0)
 ;
"RTN","PRSNUT01",45,0)
 N BOC,CST,OCC,ASN,CODES,KEY
"RTN","PRSNUT01",46,0)
 N NODE0,ISNURSE,FIELDS,IENS
"RTN","PRSNUT01",47,0)
 S ISNURSE=0
"RTN","PRSNUT01",48,0)
 Q:PRSIEN'>0 ISNURSE
"RTN","PRSNUT01",49,0)
 S CODES=$$GETCODES(PRSIEN)
"RTN","PRSNUT01",50,0)
 S BOC=$P(CODES,U)
"RTN","PRSNUT01",51,0)
 S OCC=$P(CODES,U,2)
"RTN","PRSNUT01",52,0)
 S ASN=$P(CODES,U,3)
"RTN","PRSNUT01",53,0)
 S CST=$P(CODES,U,4)
"RTN","PRSNUT01",54,0)
 ;
"RTN","PRSNUT01",55,0)
 ; lookup on B index in 451.1 for exact or wildcard matches
"RTN","PRSNUT01",56,0)
 ;
"RTN","PRSNUT01",57,0)
 ; the wildcards (*) designate that an employee can have any value
"RTN","PRSNUT01",58,0)
 ; for that entity as long as the other entities match an entry in the
"RTN","PRSNUT01",59,0)
 ; table and they are considered a nurse.
"RTN","PRSNUT01",60,0)
 ;
"RTN","PRSNUT01",61,0)
 ; the .01 in that file is a key with cost center, budget object code,
"RTN","PRSNUT01",62,0)
 ; occupation series and assignment code.
"RTN","PRSNUT01",63,0)
 S KEY="* "_BOC_" "_OCC_" "_ASN
"RTN","PRSNUT01",64,0)
 I $D(^PRSN(451.1,"B",KEY)) D NURSTYP Q ISNURSE
"RTN","PRSNUT01",65,0)
 S KEY="* "_BOC_" "_OCC_" *"
"RTN","PRSNUT01",66,0)
 I $D(^PRSN(451.1,"B",KEY)) D NURSTYP Q ISNURSE
"RTN","PRSNUT01",67,0)
 S KEY=CST_" "_BOC_" "_OCC_" *"
"RTN","PRSNUT01",68,0)
 I $D(^PRSN(451.1,"B",KEY)) D NURSTYP Q ISNURSE
"RTN","PRSNUT01",69,0)
 S KEY=CST_" "_BOC_" "_OCC_" "_ASN
"RTN","PRSNUT01",70,0)
 I $D(^PRSN(451.1,"B",KEY)) D NURSTYP Q ISNURSE
"RTN","PRSNUT01",71,0)
 Q ISNURSE
"RTN","PRSNUT01",72,0)
NURSTYP ;
"RTN","PRSNUT01",73,0)
 N IEN
"RTN","PRSNUT01",74,0)
 S IEN=$O(^PRSN(451.1,"B",KEY,0))
"RTN","PRSNUT01",75,0)
 S ISNURSE="1^"_$P($G(^PRSN(451.1,IEN,0)),U,2,4)
"RTN","PRSNUT01",76,0)
 Q
"RTN","PRSNUT01",77,0)
ACTIVLOC(ACTLOC,PRSDT) ; return list of active locations for a given date
"RTN","PRSNUT01",78,0)
 ;INPUT:
"RTN","PRSNUT01",79,0)
 ;  PRSDT-optional fileman date.  If no date is passed then today
"RTN","PRSNUT01",80,0)
 ;        is assumed.
"RTN","PRSNUT01",81,0)
 ;OUTPUT:
"RTN","PRSNUT01",82,0)
 ;  ACTLOC-array of nursing locations that were active on the input
"RTN","PRSNUT01",83,0)
 ;         fileman date
"RTN","PRSNUT01",84,0)
 ; output array is subscripted by Nurse Location IEN and the zero
"RTN","PRSNUT01",85,0)
 ; node contains the count of active locations
"RTN","PRSNUT01",86,0)
 ; Each node contains the following pieces.
"RTN","PRSNUT01",87,0)
 ;
"RTN","PRSNUT01",88,0)
 ;  PIECE #   Definition
"RTN","PRSNUT01",89,0)
 ;  -------   -------------
"RTN","PRSNUT01",90,0)
 ;    1       external name of location
"RTN","PRSNUT01",91,0)
 ;    2       Institution Name
"RTN","PRSNUT01",92,0)
 ;    3       institution IEN
"RTN","PRSNUT01",93,0)
 ;    4       station number
"RTN","PRSNUT01",94,0)
 ;
"RTN","PRSNUT01",95,0)
 ;Loop through each entry in the nurse location file and check
"RTN","PRSNUT01",96,0)
 ;the index on the service date multiple to see if it was active
"RTN","PRSNUT01",97,0)
 ;
"RTN","PRSNUT01",98,0)
 I +$G(PRSDT)'>1700000!(+$G(PRSDT)'<4000000) S PRSDT=DT
"RTN","PRSNUT01",99,0)
 K ACTLOC
"RTN","PRSNUT01",100,0)
 N IEN,ACTIVE
"RTN","PRSNUT01",101,0)
 S ACTLOC(0)=0
"RTN","PRSNUT01",102,0)
 S IEN=0
"RTN","PRSNUT01",103,0)
 F  S IEN=$O(^NURSF(211.4,IEN)) Q:IEN'>0  D
"RTN","PRSNUT01",104,0)
 .  S ACTIVE=$$ISACTIVE(PRSDT,IEN)
"RTN","PRSNUT01",105,0)
 .  I ACTIVE D
"RTN","PRSNUT01",106,0)
 ..    S ACTLOC(IEN)="",ACTLOC(0)=ACTLOC(0)+1
"RTN","PRSNUT01",107,0)
 ..    S ACTLOC(IEN)=$P(ACTIVE,U,2,5)
"RTN","PRSNUT01",108,0)
 Q
"RTN","PRSNUT01",109,0)
ACTIVLST(ACTLOC,PRSDT) ; return list of active locations that are active
"RTN","PRSNUT01",110,0)
 ;for any day in a pay period in which date falls
"RTN","PRSNUT01",111,0)
 ;INPUT:
"RTN","PRSNUT01",112,0)
 ;  PRSDT-optional fileman date.  If no date is passed then today
"RTN","PRSNUT01",113,0)
 ;        is assumed.
"RTN","PRSNUT01",114,0)
 ;OUTPUT:
"RTN","PRSNUT01",115,0)
 ;  ACTLOC-array of nursing locations that were active on any day
"RTN","PRSNUT01",116,0)
 ;  during the pay period associated witht the input fileman date
"RTN","PRSNUT01",117,0)
 ;
"RTN","PRSNUT01",118,0)
 ;  Output array is subscripted by Nurse Location IEN and the zero
"RTN","PRSNUT01",119,0)
 ;  node contains the count of active locations
"RTN","PRSNUT01",120,0)
 ;  Each node contains the following pieces.
"RTN","PRSNUT01",121,0)
 ;
"RTN","PRSNUT01",122,0)
 ;  PIECE #   Definition
"RTN","PRSNUT01",123,0)
 ;  -------   -------------
"RTN","PRSNUT01",124,0)
 ;    1       external name of location
"RTN","PRSNUT01",125,0)
 ;    2       Institution Name
"RTN","PRSNUT01",126,0)
 ;    3       institution IEN
"RTN","PRSNUT01",127,0)
 ;    4       station number
"RTN","PRSNUT01",128,0)
 ;
"RTN","PRSNUT01",129,0)
 ;Loop through each entry in the nurse location file and check
"RTN","PRSNUT01",130,0)
 ;the index on the service date multiple to see if it was active
"RTN","PRSNUT01",131,0)
 ;
"RTN","PRSNUT01",132,0)
 I +$G(PRSDT)'>1700000!(+$G(PRSDT)'<4000000) S PRSDT=DT
"RTN","PRSNUT01",133,0)
 K ACTLOC
"RTN","PRSNUT01",134,0)
 N IEN,ACTIVE
"RTN","PRSNUT01",135,0)
 S ACTLOC(0)=0
"RTN","PRSNUT01",136,0)
 S IEN=0
"RTN","PRSNUT01",137,0)
 F  S IEN=$O(^NURSF(211.4,IEN)) Q:IEN'>0  D
"RTN","PRSNUT01",138,0)
 .  S ACTIVE=$$ISACTPP(PRSDT,IEN)
"RTN","PRSNUT01",139,0)
 .  I ACTIVE D
"RTN","PRSNUT01",140,0)
 ..    S ACTLOC(IEN)="",ACTLOC(0)=ACTLOC(0)+1
"RTN","PRSNUT01",141,0)
 ..    S ACTLOC(IEN)=$P(ACTIVE,U,2,6)
"RTN","PRSNUT01",142,0)
 Q
"RTN","PRSNUT01",143,0)
ISACTIVE(PRSDT,LIEN) ;Return TRUE if location is active on date
"RTN","PRSNUT01",144,0)
 ;INPUT:
"RTN","PRSNUT01",145,0)
 ;  PRSDT-FileMan date
"RTN","PRSNUT01",146,0)
 ;  LIEN- nurse location internal entry number
"RTN","PRSNUT01",147,0)
 ;OUTPUT:
"RTN","PRSNUT01",148,0)
 ;  function returns 5 piece string
"RTN","PRSNUT01",149,0)
 ;  PIECE #   Definition
"RTN","PRSNUT01",150,0)
 ;  -------   -------------
"RTN","PRSNUT01",151,0)
 ;    1       0 for inactive, 1 for active
"RTN","PRSNUT01",152,0)
 ;    2       external name of location
"RTN","PRSNUT01",153,0)
 ;    3       Institution Name
"RTN","PRSNUT01",154,0)
 ;    4       institution IEN
"RTN","PRSNUT01",155,0)
 ;    5       station number
"RTN","PRSNUT01",156,0)
 ;
"RTN","PRSNUT01",157,0)
 I '$D(^NURSF(211.4,LIEN,0)) Q "-1"_U_"Undefined Location"
"RTN","PRSNUT01",158,0)
 N IENS,STATUS,DIVI,STATUS,LOCE,INSIEN,STATNUM,FIELDS
"RTN","PRSNUT01",159,0)
 I +$G(PRSDT)'>1700000!(+$G(PRSDT)'<4000000) S PRSDT=DT
"RTN","PRSNUT01",160,0)
 S PRSDT=PRSDT_".1"
"RTN","PRSNUT01",161,0)
 S PRSDT=$O(^NURSF(211.4,LIEN,7,"C",PRSDT),-1)
"RTN","PRSNUT01",162,0)
 I PRSDT="" D
"RTN","PRSNUT01",163,0)
 .  S STATUS="I"
"RTN","PRSNUT01",164,0)
 E  D
"RTN","PRSNUT01",165,0)
 .  S STATUS=$O(^NURSF(211.4,LIEN,7,"C",PRSDT,""))
"RTN","PRSNUT01",166,0)
 S IENS=LIEN_","
"RTN","PRSNUT01",167,0)
 D GETS^DIQ(211.4,IENS_",",".01;.02","IE","FIELDS(",,)
"RTN","PRSNUT01",168,0)
 S LOCE=$G(FIELDS(211.4,IENS,.01,"E"))
"RTN","PRSNUT01",169,0)
 S DIVI=$G(FIELDS(211.4,IENS,.02,"I"))
"RTN","PRSNUT01",170,0)
 ;institution file pointer from Hospital Location
"RTN","PRSNUT01",171,0)
 ;
"RTN","PRSNUT01",172,0)
 S INSIEN=+$$GET1^DIQ(44,+$G(^NURSF(211.4,LIEN,0)),3,"I")
"RTN","PRSNUT01",173,0)
 D GETS^DIQ(4,INSIEN_",","99","E","FIELDS(",,)
"RTN","PRSNUT01",174,0)
 S STATNUM=FIELDS(4,INSIEN_",",99,"E")
"RTN","PRSNUT01",175,0)
 Q $S(STATUS="A":1,1:0)_U_LOCE_U_DIVI_U_INSIEN_U_STATNUM
"RTN","PRSNUT01",176,0)
 ;
"RTN","PRSNUT01",177,0)
ISACTPP(PRSDT,LIEN) ;Return True if location is active for any days
"RTN","PRSNUT01",178,0)
 ; during the pay period associated with date
"RTN","PRSNUT01",179,0)
 ;INPUT:
"RTN","PRSNUT01",180,0)
 ;  PRSDT-FileMan date
"RTN","PRSNUT01",181,0)
 ;  LIEN- nurse location internal entry number
"RTN","PRSNUT01",182,0)
 ;OUTPUT:
"RTN","PRSNUT01",183,0)
 ;  function returns 2 piece string
"RTN","PRSNUT01",184,0)
 ;  1st piece is 0 for inactive, 1 for active
"RTN","PRSNUT01",185,0)
 ;  2nd piece is external name of location
"RTN","PRSNUT01",186,0)
 ; 
"RTN","PRSNUT01",187,0)
 ; UNIT TEST: F PRSI=1:1:6 W !,$$ISACTPP^PRSNUT01(3090122,PRSI)
"RTN","PRSNUT01",188,0)
 ;
"RTN","PRSNUT01",189,0)
 N PPI,I,PRSDYS,ACTIVE
"RTN","PRSNUT01",190,0)
 S PPI=$P($G(^PRST(458,"AD",PRSDT)),U)
"RTN","PRSNUT01",191,0)
 ; if date isn't in an open pay period then assume last open pay period
"RTN","PRSNUT01",192,0)
 I PPI'>0 D
"RTN","PRSNUT01",193,0)
 .  S PRSDT=$O(^PRST(458,"AD",9999999),-1)
"RTN","PRSNUT01",194,0)
 .  S PPI=$P($G(^PRST(458,"AD",PRSDT)),U)
"RTN","PRSNUT01",195,0)
 S PRSDYS=$G(^PRST(458,PPI,1))
"RTN","PRSNUT01",196,0)
 F I=1:1:14 S PRSDT=$P(PRSDYS,U,I) D  Q:ACTIVE
"RTN","PRSNUT01",197,0)
 .  S ACTIVE=$$ISACTIVE(PRSDT,LIEN)
"RTN","PRSNUT01",198,0)
 ;
"RTN","PRSNUT01",199,0)
 Q ACTIVE
"RTN","PRSNUT01",200,0)
POCRANGE() ;Prompt user for POC date range and return start and stop dates
"RTN","PRSNUT01",201,0)
 ;
"RTN","PRSNUT01",202,0)
 ; GET START DATE
"RTN","PRSNUT01",203,0)
 N %DT,Y,X
"RTN","PRSNUT01",204,0)
 S %DT="AEP"
"RTN","PRSNUT01",205,0)
 S %DT("A")="Start Date: "
"RTN","PRSNUT01",206,0)
 ;
"RTN","PRSNUT01",207,0)
 ; Don't allow selection of dates prior to the first entry in
"RTN","PRSNUT01",208,0)
 ; the POC daily records file or a date after the last day
"RTN","PRSNUT01",209,0)
 ; of the last pay period with POC records on file
"RTN","PRSNUT01",210,0)
 ;
"RTN","PRSNUT01",211,0)
 N EPPI,LPPI,FD,LD,FIRSTDT,LASTDT
"RTN","PRSNUT01",212,0)
 S EPPI=$O(^PRSN(451,0))
"RTN","PRSNUT01",213,0)
 I EPPI'>0 Q 0_U_"No POC records on file!"
"RTN","PRSNUT01",214,0)
 S LPPI=$O(^PRSN(451,99999),-1)
"RTN","PRSNUT01",215,0)
 S LD=$P($G(^PRST(458,LPPI,1)),U,14)
"RTN","PRSNUT01",216,0)
 S Y=LD D DD^%DT S LASTDT=Y
"RTN","PRSNUT01",217,0)
 ;
"RTN","PRSNUT01",218,0)
 S FD=+$G(^PRST(458,EPPI,1))
"RTN","PRSNUT01",219,0)
 S Y=FD D DD^%DT S FIRSTDT=Y
"RTN","PRSNUT01",220,0)
 ;
"RTN","PRSNUT01",221,0)
 ;
"RTN","PRSNUT01",222,0)
 N SUCCESS,OUT,STARTDT,ENDDT,EDTE,SDTE
"RTN","PRSNUT01",223,0)
 S (SUCCESS,OUT)=0
"RTN","PRSNUT01",224,0)
 F  D  Q:SUCCESS!OUT
"RTN","PRSNUT01",225,0)
 .D ^%DT
"RTN","PRSNUT01",226,0)
 .I Y'>0 S OUT=1 Q
"RTN","PRSNUT01",227,0)
 .S STARTDT=Y
"RTN","PRSNUT01",228,0)
 .I STARTDT<FD D  Q
"RTN","PRSNUT01",229,0)
 ..W " cannot be earlier than ",FIRSTDT,$C(7)
"RTN","PRSNUT01",230,0)
 .I STARTDT>LD D  Q
"RTN","PRSNUT01",231,0)
 ..W " cannot be later than ",LASTDT,$C(7)
"RTN","PRSNUT01",232,0)
 .S SUCCESS=1
"RTN","PRSNUT01",233,0)
 Q:OUT 0
"RTN","PRSNUT01",234,0)
 ;Now reset the earliest date for end date since it cannot be before the start date
"RTN","PRSNUT01",235,0)
 S FD=STARTDT
"RTN","PRSNUT01",236,0)
 S Y=FD D DD^%DT S FIRSTDT=Y
"RTN","PRSNUT01",237,0)
 ;
"RTN","PRSNUT01",238,0)
 ;GET END DATE
"RTN","PRSNUT01",239,0)
 N %DT,Y,X
"RTN","PRSNUT01",240,0)
 S %DT="AEP"
"RTN","PRSNUT01",241,0)
 S %DT("A")="End Date: "
"RTN","PRSNUT01",242,0)
 ;
"RTN","PRSNUT01",243,0)
 ; Don't allow selection of prior to the start date
"RTN","PRSNUT01",244,0)
 ;
"RTN","PRSNUT01",245,0)
 S (SUCCESS,OUT)=0
"RTN","PRSNUT01",246,0)
 F  D  Q:SUCCESS!OUT
"RTN","PRSNUT01",247,0)
 .D ^%DT
"RTN","PRSNUT01",248,0)
 .I Y'>0 S OUT=1 Q
"RTN","PRSNUT01",249,0)
 .S ENDDT=Y
"RTN","PRSNUT01",250,0)
 .I ENDDT<FD D  Q
"RTN","PRSNUT01",251,0)
 ..W " cannot be earlier than ",FIRSTDT,$C(7)
"RTN","PRSNUT01",252,0)
 .I ENDDT>LD D  Q
"RTN","PRSNUT01",253,0)
 ..W " cannot be later than ",LASTDT,$C(7)
"RTN","PRSNUT01",254,0)
 .S SUCCESS=1
"RTN","PRSNUT01",255,0)
 Q:OUT 0
"RTN","PRSNUT01",256,0)
 S Y=STARTDT D DD^%DT S SDTE=Y
"RTN","PRSNUT01",257,0)
 S Y=ENDDT D DD^%DT S EDTE=Y
"RTN","PRSNUT01",258,0)
 Q STARTDT_U_ENDDT_U_SDTE_U_EDTE
"RTN","PRSNUT02")
0^34^B66153406^n/a
"RTN","PRSNUT02",1,0)
PRSNUT02 ;WOIFO/JAH - Nurse Activity for VANOD Utilities;6/19/2009
"RTN","PRSNUT02",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNUT02",3,0)
 ;;Per VHA Directive 2004-038,this routine should not be modified.
"RTN","PRSNUT02",4,0)
 Q
"RTN","PRSNUT02",5,0)
ACCESS(GRPS,ACCTYPE,PRSDT,MANY) ;return the user selected Group
"RTN","PRSNUT02",6,0)
 K GRPS
"RTN","PRSNUT02",7,0)
 ;
"RTN","PRSNUT02",8,0)
 ;INPUT:
"RTN","PRSNUT02",9,0)
 ;  ACCTYPE-The type of access flag, E for data entry personnel and
"RTN","PRSNUT02",10,0)
 ;          A for data approval personnel
"RTN","PRSNUT02",11,0)
 ;  PRSDT- date for determination of what the division access parameter
"RTN","PRSNUT02",12,0)
 ;         was on that date (either T&L or Location)
"RTN","PRSNUT02",13,0)
 ;  MANY-  (optional) set this flag to true (1) if more than one
"RTN","PRSNUT02",14,0)
 ;         group can be selected.  Set the flag to (2) if you want
"RTN","PRSNUT02",15,0)
 ;         all groups user has access to without any prompting.
"RTN","PRSNUT02",16,0)
 ;
"RTN","PRSNUT02",17,0)
 ;OUTPUT:
"RTN","PRSNUT02",18,0)
 ;PROCEDURE INTERACTS W/USER TO RETURN THE FOLLOWING:
"RTN","PRSNUT02",19,0)
 ;
"RTN","PRSNUT02",20,0)
 ;  GRPS - array w/users selected groups subscripted
"RTN","PRSNUT02",21,0)
 ;         by .01 field value (t&l external code or location pointer)
"RTN","PRSNUT02",22,0)
 ;  GRPS(0) - will contain the number selected followed by either
"RTN","PRSNUT02",23,0)
 ;            N,T, or E for Nurse Location, T&L unit or Error
"RTN","PRSNUT02",24,0)
 ;            If piece 2 is an E then piece 3 will contain error
"RTN","PRSNUT02",25,0)
 ;            description
"RTN","PRSNUT02",26,0)
 ;         
"RTN","PRSNUT02",27,0)
 ;  Node Definition: an Upparrow delimited string with the following:
"RTN","PRSNUT02",28,0)
 ;     PEICE  DEFINITION
"RTN","PRSNUT02",29,0)
 ;     =====  ==============================
"RTN","PRSNUT02",30,0)
 ;       1    IEN of field value of group 
"RTN","PRSNUT02",31,0)
 ;       2    IEN of Division associated with this Group
"RTN","PRSNUT02",32,0)
 ;       3    External value of division
"RTN","PRSNUT02",33,0)
 ;
"RTN","PRSNUT02",34,0)
 ;  Sample Call:
"RTN","PRSNUT02",35,0)
 ;
"RTN","PRSNUT02",36,0)
 ;      D ACCESS^PRSNUT02(.G,"E",DT,1)    
"RTN","PRSNUT02",37,0)
 ;
"RTN","PRSNUT02",38,0)
 ;  Sample Return:
"RTN","PRSNUT02",39,0)
 ;
"RTN","PRSNUT02",40,0)
 ;      G(0)="3^N"
"RTN","PRSNUT02",41,0)
 ;      G("1E-EAST")="1^16433^500GA"
"RTN","PRSNUT02",42,0)
 ;      G("3B-EAST")="6^16433^500GA"
"RTN","PRSNUT02",43,0)
 ;      G("3B-WEST")="4^16433^500GA"
"RTN","PRSNUT02",44,0)
 ;
"RTN","PRSNUT02",45,0)
 ; determine for which entities current user has access to in both T&L 
"RTN","PRSNUT02",46,0)
 ; Unit File & NURS LOCATION file.  Build temp list of all possible 
"RTN","PRSNUT02",47,0)
 ; groups. If user has access to groups in more than one division then
"RTN","PRSNUT02",48,0)
 ;  prompt for division
"RTN","PRSNUT02",49,0)
 ;
"RTN","PRSNUT02",50,0)
 N TINDEX,LINDEX
"RTN","PRSNUT02",51,0)
 ;
"RTN","PRSNUT02",52,0)
 ;    use access type parameter for appropriate indices for data entry
"RTN","PRSNUT02",53,0)
 ;    or data approval personnel--TINDEX is the T&L unit file and
"RTN","PRSNUT02",54,0)
 ;    LINDEX is the Nurse Location.
"RTN","PRSNUT02",55,0)
 ;
"RTN","PRSNUT02",56,0)
 S TINDEX=$S(ACCTYPE="E":"AE",ACCTYPE="A":"AR",1:"")
"RTN","PRSNUT02",57,0)
 S LINDEX=$S(ACCTYPE="E":"AE",ACCTYPE="A":"AA",1:"")
"RTN","PRSNUT02",58,0)
 ;
"RTN","PRSNUT02",59,0)
 ; Quit if no access specified in ACCTYP parameter
"RTN","PRSNUT02",60,0)
 I TINDEX="" S GRPS(0)="0^E^Access Type Not Specified" Q
"RTN","PRSNUT02",61,0)
 ;
"RTN","PRSNUT02",62,0)
 N TMPGRPS,DIVMAP,DIVGRP,TLNODIV,DIVNOPAR
"RTN","PRSNUT02",63,0)
 D TLACC(.TMPGRPS,.DIVMAP,.DIVGRP,.TLNODIV,.DIVNOPAR,TINDEX,DUZ,PRSDT)
"RTN","PRSNUT02",64,0)
 ;
"RTN","PRSNUT02",65,0)
 N OUT
"RTN","PRSNUT02",66,0)
 S OUT=0
"RTN","PRSNUT02",67,0)
 I $D(TLNODIV) D
"RTN","PRSNUT02",68,0)
 .  W !!?5,"WARNING:",!?5,"========="
"RTN","PRSNUT02",69,0)
 .  W !?5,"You have access to the following T&L unit(s), but no division"
"RTN","PRSNUT02",70,0)
 .  W !?5,"  has been entered for the T&L(s):"
"RTN","PRSNUT02",71,0)
 .  S TLE=""
"RTN","PRSNUT02",72,0)
 .  F  S TLE=$O(TLNODIV(TLE)) Q:TLE=""  D
"RTN","PRSNUT02",73,0)
 ..     W !?8,TLE
"RTN","PRSNUT02",74,0)
 .  S OUT=$$ASK^PRSLIB00(0)
"RTN","PRSNUT02",75,0)
 I OUT S GRPS(0)="0^E^user abort" Q
"RTN","PRSNUT02",76,0)
 ;
"RTN","PRSNUT02",77,0)
 ; get locations that meet the criteria:
"RTN","PRSNUT02",78,0)
 ;   1. user has access
"RTN","PRSNUT02",79,0)
 ;   2. division access parameter matches the users access type
"RTN","PRSNUT02",80,0)
 ;
"RTN","PRSNUT02",81,0)
 D NLACC(.TMPGRPS,.DIVMAP,.DIVGRP,.TLNODIV,.DIVNOPAR,LINDEX,DUZ,PRSDT)
"RTN","PRSNUT02",82,0)
 ;
"RTN","PRSNUT02",83,0)
 N NDIVI
"RTN","PRSNUT02",84,0)
 I $D(DIVNOPAR) D
"RTN","PRSNUT02",85,0)
 .  W !!,"WARNING: ",!,"========"
"RTN","PRSNUT02",86,0)
 .  W !?5,"You have access to location(s) or T&L units in the following"
"RTN","PRSNUT02",87,0)
 .  W !?5,"division(s), but the division parameter has not been set by"
"RTN","PRSNUT02",88,0)
 .  W !?5,"the package coordinator:",!
"RTN","PRSNUT02",89,0)
 .  S NDIVI=0
"RTN","PRSNUT02",90,0)
 .  F  S NDIVI=$O(DIVNOPAR(NDIVI)) Q:NDIVI=""  D
"RTN","PRSNUT02",91,0)
 ..    D GETS^DIQ(4,NDIVI_",",".01;99","EI","FIELDS(",,)
"RTN","PRSNUT02",92,0)
 ..    W !?7,NDIVI,?17,FIELDS(4,NDIVI_",",.01,"E"),?34,FIELDS(4,NDIVI_",",99,"E")
"RTN","PRSNUT02",93,0)
 . S OUT=$$ASK^PRSLIB00(0)
"RTN","PRSNUT02",94,0)
 I OUT S GRPS(0)="0^E^user abort" Q
"RTN","PRSNUT02",95,0)
 ;
"RTN","PRSNUT02",96,0)
 ;
"RTN","PRSNUT02",97,0)
 I '$D(DIVMAP) S GRPS(0)="0^E^You have no access to T&Ls or Locations" Q
"RTN","PRSNUT02",98,0)
 ;
"RTN","PRSNUT02",99,0)
 ; count divsions user can access
"RTN","PRSNUT02",100,0)
 ;
"RTN","PRSNUT02",101,0)
 N CNT,NDIVI
"RTN","PRSNUT02",102,0)
 S (NDIVI,CNT)=0 F  S NDIVI=$O(DIVMAP(NDIVI)) Q:NDIVI'>0  S CNT=CNT+1
"RTN","PRSNUT02",103,0)
 ;
"RTN","PRSNUT02",104,0)
 N OUT,SELDIV S OUT=0
"RTN","PRSNUT02",105,0)
 I CNT>1 D
"RTN","PRSNUT02",106,0)
 .  W !?5,"You have access to location(s) or T&L units in more than one division"
"RTN","PRSNUT02",107,0)
 .  N DIC,X,Y,DUOUT,DTOUT S DIC(0)="AEQMZ",DIC="^DIC(4,"
"RTN","PRSNUT02",108,0)
 .  S DIC("S")="I $P($G(DIVMAP(Y)),U,2)'="""""
"RTN","PRSNUT02",109,0)
 .  D ^DIC I $D(DUOUT)!$D(DTOUT)!(Y'>0) S OUT=1
"RTN","PRSNUT02",110,0)
 .  S SELDIV=$G(Y)
"RTN","PRSNUT02",111,0)
 E  D
"RTN","PRSNUT02",112,0)
 .  S SELDIV=$O(DIVMAP(0))
"RTN","PRSNUT02",113,0)
 I OUT S GRPS(0)="0^E^user abort" Q
"RTN","PRSNUT02",114,0)
 ;
"RTN","PRSNUT02",115,0)
 ; prompt for location or T&L within selected division
"RTN","PRSNUT02",116,0)
 ;
"RTN","PRSNUT02",117,0)
 N DIVPARAM
"RTN","PRSNUT02",118,0)
 S DIVPARAM=$P($G(DIVMAP(+SELDIV)),U,2)
"RTN","PRSNUT02",119,0)
 I "T^N"'[DIVPARAM S GRPS(0)="0^E^Division Parameter Unspecified" Q
"RTN","PRSNUT02",120,0)
 ;
"RTN","PRSNUT02",121,0)
 N DIC,X,Y,DUOUT,DTOUT,VAUTSTR,VAUTNI,VAUTVB,OUT
"RTN","PRSNUT02",122,0)
 S OUT=0
"RTN","PRSNUT02",123,0)
 ;      select t&l unit or nurse location
"RTN","PRSNUT02",124,0)
 I DIVPARAM="T" D
"RTN","PRSNUT02",125,0)
 .  S VAUTSTR="T&L Units",DIC="^PRST(455.5,"
"RTN","PRSNUT02",126,0)
 E  D
"RTN","PRSNUT02",127,0)
 .  S VAUTSTR="Nurse Location",DIC="^NURSF(211.4,"
"RTN","PRSNUT02",128,0)
 S DIC(0)="AEQMZ",DIC("S")="I $D(TMPGRPS(DIVPARAM,+SELDIV,+Y))"
"RTN","PRSNUT02",129,0)
 I $G(MANY)=1 D
"RTN","PRSNUT02",130,0)
 .  N PRSNGR
"RTN","PRSNUT02",131,0)
 .  S VAUTNI=2,VAUTVB="PRSNGR"
"RTN","PRSNUT02",132,0)
 .  D FIRST^VAUTOMA
"RTN","PRSNUT02",133,0)
 .  S (CNT,Y)=0
"RTN","PRSNUT02",134,0)
 .  I 'PRSNGR D
"RTN","PRSNUT02",135,0)
 ..    F  S Y=$O(PRSNGR(Y)) Q:Y=""  D
"RTN","PRSNUT02",136,0)
 ...     I $D(TMPGRPS(DIVPARAM,+SELDIV,Y)) D
"RTN","PRSNUT02",137,0)
 ....      S CNT=CNT+1
"RTN","PRSNUT02",138,0)
 ....      S GRPS($G(TMPGRPS(DIVPARAM,+SELDIV,+Y)))=+Y_U_$G(DIVGRP(DIVPARAM,+Y))_U_$S(DIVPARAM="N":+$G(^NURSF(211.4,+Y,0)),1:"")
"RTN","PRSNUT02",139,0)
 .  E  D
"RTN","PRSNUT02",140,0)
 .. ; all groups selected, so update output array with them
"RTN","PRSNUT02",141,0)
 ..    F  S Y=$O(DIVGRP(DIVPARAM,Y)) Q:Y=""  D
"RTN","PRSNUT02",142,0)
 ...     I $D(TMPGRPS(DIVPARAM,+SELDIV,+Y)) D
"RTN","PRSNUT02",143,0)
 ....       S CNT=CNT+1
"RTN","PRSNUT02",144,0)
 ....       S GRPS($G(TMPGRPS(DIVPARAM,+SELDIV,+Y)))=+Y_U_$G(DIVGRP(DIVPARAM,+Y))_U_$S(DIVPARAM="N":+$G(^NURSF(211.4,+Y,0)),1:"")
"RTN","PRSNUT02",145,0)
 .     S GRPS(0)=CNT_U_DIVPARAM
"RTN","PRSNUT02",146,0)
 .  I CNT=0 S GRPS(0)="0^E^Nothing Selected" Q
"RTN","PRSNUT02",147,0)
 E  D
"RTN","PRSNUT02",148,0)
 .; automatically return all groups (no prompt)
"RTN","PRSNUT02",149,0)
 .  I $G(MANY)=2 D
"RTN","PRSNUT02",150,0)
 ..    S (CNT,Y)=0
"RTN","PRSNUT02",151,0)
 ..    F  S Y=$O(DIVGRP(DIVPARAM,Y)) Q:Y=""  D
"RTN","PRSNUT02",152,0)
 ...     I $D(TMPGRPS(DIVPARAM,+SELDIV,+Y)) D
"RTN","PRSNUT02",153,0)
 ....       S CNT=CNT+1
"RTN","PRSNUT02",154,0)
 ....       S GRPS($G(TMPGRPS(DIVPARAM,+SELDIV,+Y)))=+Y_U_$G(DIVGRP(DIVPARAM,+Y))_U_$S(DIVPARAM="N":+$G(^NURSF(211.4,+Y,0)),1:"")
"RTN","PRSNUT02",155,0)
 ..    S GRPS(0)=CNT_U_DIVPARAM
"RTN","PRSNUT02",156,0)
 ..    I CNT=0 S GRPS(0)="0^E^Nothing Selected" Q
"RTN","PRSNUT02",157,0)
 .  E  D
"RTN","PRSNUT02",158,0)
 ..  D ^DIC
"RTN","PRSNUT02",159,0)
 ..  I $D(DUOUT)!$D(DTOUT)!(Y'>0) S OUT=1 Q
"RTN","PRSNUT02",160,0)
 ..  S GRPS(0)="1"_U_DIVPARAM
"RTN","PRSNUT02",161,0)
 ..  S GRPS($G(TMPGRPS(DIVPARAM,+SELDIV,+Y)))=+Y_U_$G(DIVGRP(DIVPARAM,+Y))_U_$S(DIVPARAM="N":+$G(^NURSF(211.4,+Y,0)),1:"")
"RTN","PRSNUT02",162,0)
 I OUT S GRPS(0)="0^E^user abort" Q
"RTN","PRSNUT02",163,0)
 ;
"RTN","PRSNUT02",164,0)
 Q
"RTN","PRSNUT02",165,0)
 ;
"RTN","PRSNUT02",166,0)
DIVACC(PRSDT,NDIVI) ; Return Nurse Access parameter for a division
"RTN","PRSNUT02",167,0)
 ;
"RTN","PRSNUT02",168,0)
 N PPI,PPE,PARAMIEN,EFFECTPP,IEN456
"RTN","PRSNUT02",169,0)
 S PPI=+$G(^PRST(458,"AD",PRSDT))
"RTN","PRSNUT02",170,0)
 ;
"RTN","PRSNUT02",171,0)
 ; Default to last pay period on file if none found for PRSDT
"RTN","PRSNUT02",172,0)
 I PPI'>0 S PPI=$O(^PRST(458,9999999),-1)
"RTN","PRSNUT02",173,0)
 ;
"RTN","PRSNUT02",174,0)
 S PPE=$P($G(^PRST(458,PPI,0)),U)
"RTN","PRSNUT02",175,0)
 S IEN456=$O(^PRST(456,"B",NDIVI,0))
"RTN","PRSNUT02",176,0)
 ;
"RTN","PRSNUT02",177,0)
 Q:IEN456="" ""
"RTN","PRSNUT02",178,0)
 ;
"RTN","PRSNUT02",179,0)
 S EFFECTPP=$O(^PRST(456,IEN456,1,"C",PPE_"A"),-1)
"RTN","PRSNUT02",180,0)
 ;
"RTN","PRSNUT02",181,0)
 Q:EFFECTPP="" ""
"RTN","PRSNUT02",182,0)
 ;
"RTN","PRSNUT02",183,0)
 Q $O(^PRST(456,IEN456,1,"C",EFFECTPP,0))_"^"_EFFECTPP
"RTN","PRSNUT02",184,0)
 ;
"RTN","PRSNUT02",185,0)
 Q
"RTN","PRSNUT02",186,0)
TLACC(TG,DM,DG,TND,DNP,INDEX,IEN200,PRSDT) ;get T&Ls user has access to.
"RTN","PRSNUT02",187,0)
 ; The T&L's division must also have access parameter set to T&L unit.
"RTN","PRSNUT02",188,0)
 ; Also return T&L's with no division or T&L's with a division (but the 
"RTN","PRSNUT02",189,0)
 ; division parameter isn't set) for warning messages but don't add 
"RTN","PRSNUT02",190,0)
 ; these to selection list.
"RTN","PRSNUT02",191,0)
 ; 
"RTN","PRSNUT02",192,0)
 ; OUTPUT:
"RTN","PRSNUT02",193,0)
 ;    TG: temporary array of groups user has access to
"RTN","PRSNUT02",194,0)
 ;    DM: Division Map-array of divisions 
"RTN","PRSNUT02",195,0)
 ;    DG: Division group array
"RTN","PRSNUT02",196,0)
 ;   TND: T&L with no divisions array
"RTN","PRSNUT02",197,0)
 ;   DNP: divisions with no parameter array
"RTN","PRSNUT02",198,0)
 ;
"RTN","PRSNUT02",199,0)
 ; Example of array
"RTN","PRSNUT02",200,0)
 ;
"RTN","PRSNUT02",201,0)
 ;     TG("N",500,5)="5-NORTH"
"RTN","PRSNUT02",202,0)
 ;     TG("N",16433,6)="3B-EAST"
"RTN","PRSNUT02",203,0)
 ;     TG("N",16436,1)="1E-EAST"
"RTN","PRSNUT02",204,0)
 ;     TG("T",500,261)=112
"RTN","PRSNUT02",205,0)
 ;     TG("T",16433,1)=221
"RTN","PRSNUT02",206,0)
 ;
"RTN","PRSNUT02",207,0)
 ;  Example of DM array:
"RTN","PRSNUT02",208,0)
 ;    0 node - total divisions ^ access param set ^ access param not set
"RTN","PRSNUT02",209,0)
 ;    other nodes - (IEN file 4)="Station number" (field #99)
"RTN","PRSNUT02",210,0)
 ; 
"RTN","PRSNUT02",211,0)
 ;     DM(0)=2
"RTN","PRSNUT02",212,0)
 ;     DM(16433)="500GA^T&L"
"RTN","PRSNUT02",213,0)
 ;     DM(16436)="500GD^NL"
"RTN","PRSNUT02",214,0)
 ;
"RTN","PRSNUT02",215,0)
 N TLI,FIELDS,TLE,NDIVACC,NDIVI
"RTN","PRSNUT02",216,0)
 ;
"RTN","PRSNUT02",217,0)
 S DM(0)="0^0^0"
"RTN","PRSNUT02",218,0)
 S TLI=""
"RTN","PRSNUT02",219,0)
 F  S TLI=$O(^PRST(455.5,INDEX,IEN200,TLI)) Q:TLI=""  D
"RTN","PRSNUT02",220,0)
 .   D GETS^DIQ(455.5,TLI_",",".01;20.5","IE","FIELDS(",,)
"RTN","PRSNUT02",221,0)
 .   S TLE=$G(FIELDS(455.5,TLI_",",.01,"E"))
"RTN","PRSNUT02",222,0)
 .   S NDIVI=$G(FIELDS(455.5,TLI_",",20.5,"I"))
"RTN","PRSNUT02",223,0)
 .   D GETS^DIQ(4,NDIVI_",",".01;99","EI","FIELDS(",,)
"RTN","PRSNUT02",224,0)
 .;
"RTN","PRSNUT02",225,0)
 .  I NDIVI="" S TND(TLE)="" Q
"RTN","PRSNUT02",226,0)
 .;
"RTN","PRSNUT02",227,0)
 .; Get date sensitive access parameter for POC entry/approval
"RTN","PRSNUT02",228,0)
 .; using pay period of PRSDT to find it in the Parameter file
"RTN","PRSNUT02",229,0)
 .;
"RTN","PRSNUT02",230,0)
 .  S NDIVACC=$P($$DIVACC(PRSDT,NDIVI),U)
"RTN","PRSNUT02",231,0)
 .;
"RTN","PRSNUT02",232,0)
 .;
"RTN","PRSNUT02",233,0)
 .; division access should be T&L Unit because we are looking
"RTN","PRSNUT02",234,0)
 .; at what T&L units this user is assigned to
"RTN","PRSNUT02",235,0)
 .;
"RTN","PRSNUT02",236,0)
 .  I NDIVACC'="T" Q
"RTN","PRSNUT02",237,0)
 .;
"RTN","PRSNUT02",238,0)
 .  S TG("T",NDIVI,TLI)=TLE
"RTN","PRSNUT02",239,0)
 .  S DM(NDIVI)=FIELDS(4,NDIVI_",",99,"E")_U_NDIVACC
"RTN","PRSNUT02",240,0)
 .  S DG("T",TLI)=NDIVI_U_FIELDS(4,NDIVI_",",99,"E")
"RTN","PRSNUT02",241,0)
 K FIELDS
"RTN","PRSNUT02",242,0)
 Q
"RTN","PRSNUT02",243,0)
 ;
"RTN","PRSNUT02",244,0)
 ;
"RTN","PRSNUT02",245,0)
NLACC(TG,DM,DG,NND,DNP,INDEX,IEN200,PRSDT) ;
"RTN","PRSNUT02",246,0)
 ;
"RTN","PRSNUT02",247,0)
 ; SEE DOCUMENTATION IN TLACC above for INPUT/OUPUT vars. The difference
"RTN","PRSNUT02",248,0)
 ; is this finds and returns access to locations instead of T&Ls.
"RTN","PRSNUT02",249,0)
 ;
"RTN","PRSNUT02",250,0)
 N LOCI,FIELDS,NDIVI,LOCE,NDIVACC,NURSLOC
"RTN","PRSNUT02",251,0)
 S LOCI=0
"RTN","PRSNUT02",252,0)
 F  S LOCI=$O(^NURSF(211.4,INDEX,IEN200,LOCI)) Q:LOCI'>0  D
"RTN","PRSNUT02",253,0)
 .;
"RTN","PRSNUT02",254,0)
 .  D GETS^DIQ(211.4,LOCI_",",".01;.02","IE","FIELDS(",,)
"RTN","PRSNUT02",255,0)
 .;
"RTN","PRSNUT02",256,0)
 .  S LOCE=$G(FIELDS(211.4,LOCI_",",.01,"E"))
"RTN","PRSNUT02",257,0)
 .  S NDIVI=$G(FIELDS(211.4,LOCI_",",.02,"I"))
"RTN","PRSNUT02",258,0)
 .;
"RTN","PRSNUT02",259,0)
 .   S NURSLOC=+$$GET1^DIQ(44,+$G(^NURSF(211.4,LOCI,0)),3,"I")
"RTN","PRSNUT02",260,0)
 .   D GETS^DIQ(4,NURSLOC_",",".01;99","EI","FIELDS(",,)
"RTN","PRSNUT02",261,0)
 .;
"RTN","PRSNUT02",262,0)
 .  I NDIVI="" S NND(LOCE)="" Q
"RTN","PRSNUT02",263,0)
 .  S NDIVACC=$P($$DIVACC(PRSDT,NURSLOC),U)
"RTN","PRSNUT02",264,0)
 .;
"RTN","PRSNUT02",265,0)
 .  I NDIVACC="" S DNP(NURSLOC)="" Q
"RTN","PRSNUT02",266,0)
 .;
"RTN","PRSNUT02",267,0)
 .; division access should be by Nursing Location-we are looking
"RTN","PRSNUT02",268,0)
 .; at what Nurse locations this user is assigned to
"RTN","PRSNUT02",269,0)
 .;
"RTN","PRSNUT02",270,0)
 .  I NDIVACC'="N" Q
"RTN","PRSNUT02",271,0)
 .;
"RTN","PRSNUT02",272,0)
 .  S DM(NURSLOC)=FIELDS(4,NURSLOC_",",99,"E")_U_NDIVACC
"RTN","PRSNUT02",273,0)
 .  S TG("N",NURSLOC,LOCI)=LOCE
"RTN","PRSNUT02",274,0)
 .  S DG("N",LOCI)=NURSLOC_U_FIELDS(4,NURSLOC_",",99,"E")
"RTN","PRSNUT02",275,0)
 K FIELDS
"RTN","PRSNUT02",276,0)
 Q
"RTN","PRSNUT02",277,0)
 ;
"RTN","PRSNUT03")
0^35^B67835037^n/a
"RTN","PRSNUT03",1,0)
PRSNUT03 ;;WOIFO/JAH - Nurse Activity for VANOD Utilities;6/5/2009
"RTN","PRSNUT03",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNUT03",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSNUT03",4,0)
 Q
"RTN","PRSNUT03",5,0)
 ;
"RTN","PRSNUT03",6,0)
PRIMLOC(IEN200) ; RETURN NURSES PRIMARY ASSIGMENT LOCATION
"RTN","PRSNUT03",7,0)
 ;
"RTN","PRSNUT03",8,0)
 ;FUNCTION RETURNS Nurses primary assigment from Nursing Service package
"RTN","PRSNUT03",9,0)
 ;  piece     value
"RTN","PRSNUT03",10,0)
 ;   1        ien of location from 211.4
"RTN","PRSNUT03",11,0)
 ;   2        .01 value which is pointer to 44
"RTN","PRSNUT03",12,0)
 ;   3        external value of .01 field (e.g., 4 WEST)
"RTN","PRSNUT03",13,0)
 ;
"RTN","PRSNUT03",14,0)
 ; INPUT:
"RTN","PRSNUT03",15,0)
 ;    PRSIEN:  IEN from New Person file (200)
"RTN","PRSNUT03",16,0)
 ;
"RTN","PRSNUT03",17,0)
 Q:IEN200'>0 "0^Nurse not found"
"RTN","PRSNUT03",18,0)
 ;
"RTN","PRSNUT03",19,0)
 N D0
"RTN","PRSNUT03",20,0)
 S D0=$O(^NURSF(210,"B",IEN200,0))
"RTN","PRSNUT03",21,0)
 Q:D0'>0 "0^Nurse not found"
"RTN","PRSNUT03",22,0)
 ;
"RTN","PRSNUT03",23,0)
 ; call returns external name of nurse location in X
"RTN","PRSNUT03",24,0)
 ; 
"RTN","PRSNUT03",25,0)
 N X,LOCI,LOCE
"RTN","PRSNUT03",26,0)
 D EN2^NURSUT2
"RTN","PRSNUT03",27,0)
 Q $$NLIEN^PRSNUT03(X)
"RTN","PRSNUT03",28,0)
 ;
"RTN","PRSNUT03",29,0)
NLIEN(NLE) ;
"RTN","PRSNUT03",30,0)
 ;  INPUT:
"RTN","PRSNUT03",31,0)
 ;    NLE - nurse location external name (without NUR prefix)
"RTN","PRSNUT03",32,0)
 ;  OUTPUT:
"RTN","PRSNUT03",33,0)
 ;    function returns 211.4 IEN ^ .01 pointer ^ external
"RTN","PRSNUT03",34,0)
 ;
"RTN","PRSNUT03",35,0)
 N LOCP,LOCI,LOCE,PL
"RTN","PRSNUT03",36,0)
 I NLE="" Q ""
"RTN","PRSNUT03",37,0)
 D FIND^DIC(211.4,,".01","M","NUR "_NLE,,,,,"PL",)
"RTN","PRSNUT03",38,0)
 S LOCP=$G(PL("DILIST",1,1))
"RTN","PRSNUT03",39,0)
 S LOCI=$G(PL("DILIST",2,1))
"RTN","PRSNUT03",40,0)
 S LOCE=$G(PL("DILIST","ID",1,.01))
"RTN","PRSNUT03",41,0)
 Q LOCI_U_LOCP_U_LOCE
"RTN","PRSNUT03",42,0)
 ;
"RTN","PRSNUT03",43,0)
LOCNOD(LOC) ; given a location in 211.4 return the node necessary to find
"RTN","PRSNUT03",44,0)
 ; all the nurses in 211.8 with that primary location out of the 
"RTN","PRSNUT03",45,0)
 ;  "D" index on the primary assignment field.
"RTN","PRSNUT03",46,0)
 N POINT44
"RTN","PRSNUT03",47,0)
 S POINT44=+$G(^NURSF(211.4,LOC,0))
"RTN","PRSNUT03",48,0)
 Q:POINT44'>0 -1
"RTN","PRSNUT03",49,0)
 Q +$O(^NURSF(211.8,"B",POINT44,0))
"RTN","PRSNUT03",50,0)
 ;
"RTN","PRSNUT03",51,0)
PICKNURS(GROUP,VALUE) ; pick a nurse from a t&l or location
"RTN","PRSNUT03",52,0)
 ; INPUT:
"RTN","PRSNUT03",53,0)
 ;     GROUP = T for T&L or N for Nurse Location
"RTN","PRSNUT03",54,0)
 ;     VALUE = IEN (T&L 455.5 or Nurse Location 211.4)
"RTN","PRSNUT03",55,0)
 ; OUTPUT:
"RTN","PRSNUT03",56,0)
 ;     function returns a Nurse file 450 (IEN^external Name)
"RTN","PRSNUT03",57,0)
 ;
"RTN","PRSNUT03",58,0)
 Q:"T^N^"'[(GROUP_U) 0
"RTN","PRSNUT03",59,0)
 Q:VALUE'>0 0
"RTN","PRSNUT03",60,0)
 ;
"RTN","PRSNUT03",61,0)
 N DIC,X,Y,TLE,D,S1,S2,REFD,S3
"RTN","PRSNUT03",62,0)
 S DIC("A")="Select Nurse: "
"RTN","PRSNUT03",63,0)
 S DIC="^PRSPC("
"RTN","PRSNUT03",64,0)
 S DIC(0)="AEQZ"
"RTN","PRSNUT03",65,0)
 I GROUP="T" D
"RTN","PRSNUT03",66,0)
 . S DIC("S")="I $$ISNURSE^PRSNUT01(Y)"
"RTN","PRSNUT03",67,0)
 . S TLE=$P($G(^PRST(455.5,VALUE,0)),U)
"RTN","PRSNUT03",68,0)
 . S D="ATL"_TLE
"RTN","PRSNUT03",69,0)
 . D MIX^DIC1
"RTN","PRSNUT03",70,0)
 E  D
"RTN","PRSNUT03",71,0)
 .  S REFD=+$G(^NURSF(211.4,VALUE,0))
"RTN","PRSNUT03",72,0)
 .  S S3=""
"RTN","PRSNUT03",73,0)
 .  ;S DIC("S")="N VA200IEN,NAME I $$ISNURSE^PRSNUT01(Y) S VA200IEN=+$G(^PRSPC(+Y,200)) I VA200IEN S NAME=$P($G(^VA(200,VA200IEN,0)),U) I NAME'="""",$D(^NURSF(211.8,""D"",REFD,NAME,VA200IEN))"
"RTN","PRSNUT03",74,0)
 .  S DIC("S")="N VA200IEN I $$ISNURSE^PRSNUT01(Y) S VA200IEN=+$G(^PRSPC(+Y,200)) I VA200IEN,REFD=+$$PRIMLOC^PRSNUT03(VA200IEN)"
"RTN","PRSNUT03",75,0)
 .  D ^DIC
"RTN","PRSNUT03",76,0)
 Q Y
"RTN","PRSNUT03",77,0)
 ;
"RTN","PRSNUT03",78,0)
DIV(GROUP,VALUE) ; Return the division of a location or a T&L unit
"RTN","PRSNUT03",79,0)
 ;
"RTN","PRSNUT03",80,0)
 ; INPUT:
"RTN","PRSNUT03",81,0)
 ;     GROUP = T for T&L or N for Nurse Location
"RTN","PRSNUT03",82,0)
 ;     VALUE = IEN (T&L 455.5 or Nurse Location 211.4)
"RTN","PRSNUT03",83,0)
 ; OUTPUT:
"RTN","PRSNUT03",84,0)
 ;     Function returns division of input group
"RTN","PRSNUT03",85,0)
 ;
"RTN","PRSNUT03",86,0)
 Q:"T^N^"'[(GROUP_U) 0
"RTN","PRSNUT03",87,0)
 N DIV,STANUM,NLP,P4
"RTN","PRSNUT03",88,0)
 I GROUP="N" D
"RTN","PRSNUT03",89,0)
 .  S NLP=+$G(^NURSF(211.4,VALUE,0))
"RTN","PRSNUT03",90,0)
 .  S P4=+$$GET1^DIQ(44,NLP,3,"I")
"RTN","PRSNUT03",91,0)
 E  D
"RTN","PRSNUT03",92,0)
 .  S P4=+$$GET1^DIQ(455.5,VALUE,20.5,"I")
"RTN","PRSNUT03",93,0)
 S DIV=$$GET1^DIQ(4,P4,.01,"I")
"RTN","PRSNUT03",94,0)
 S STANUM=$$GET1^DIQ(4,P4,99,"I")
"RTN","PRSNUT03",95,0)
 Q DIV_U_STANUM_U_P4
"RTN","PRSNUT03",96,0)
 ;
"RTN","PRSNUT03",97,0)
ENTRYPNT ;
"RTN","PRSNUT03",98,0)
 N DIVMAP,DIVS
"RTN","PRSNUT03",99,0)
 D BLDMAP(.DIVMAP)
"RTN","PRSNUT03",100,0)
 S DIVS=$$SELECT(.DIVMAP)
"RTN","PRSNUT03",101,0)
 Q:DIVS=0
"RTN","PRSNUT03",102,0)
 N DIR,DIRUT,SRT,Y,X,SHOW
"RTN","PRSNUT03",103,0)
 S DIR(0)="SB^T:T&L UNIT;N:NURSE LOCATION"
"RTN","PRSNUT03",104,0)
 S DIR("B")="T"
"RTN","PRSNUT03",105,0)
 S DIR("A")="Select Sort: "
"RTN","PRSNUT03",106,0)
 D ^DIR
"RTN","PRSNUT03",107,0)
 Q:$D(DIRUT)
"RTN","PRSNUT03",108,0)
 S SRT=Y
"RTN","PRSNUT03",109,0)
 N DIR,Y,X
"RTN","PRSNUT03",110,0)
 S DIR(0)="Y"
"RTN","PRSNUT03",111,0)
 S DIR("B")="N"
"RTN","PRSNUT03",112,0)
 S DIR("A")="Show Full Nurse Data"
"RTN","PRSNUT03",113,0)
 D ^DIR
"RTN","PRSNUT03",114,0)
 Q:$D(DIRUT)
"RTN","PRSNUT03",115,0)
 S SHOWNURS=Y
"RTN","PRSNUT03",116,0)
 N %ZIS,POP,IOP
"RTN","PRSNUT03",117,0)
 S %ZIS="MQ"
"RTN","PRSNUT03",118,0)
 D ^%ZIS
"RTN","PRSNUT03",119,0)
 Q:POP
"RTN","PRSNUT03",120,0)
 I $D(IO("Q")) D
"RTN","PRSNUT03",121,0)
 . K IO("Q")
"RTN","PRSNUT03",122,0)
 . N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC
"RTN","PRSNUT03",123,0)
 . S ZTDESC="PRSN SHOW ALL NURSES"
"RTN","PRSNUT03",124,0)
 . S ZTRTN="ALNURLST^PRSNUT03(0,SRT,SHOWNURS)"
"RTN","PRSNUT03",125,0)
 . S ZTSAVE("SHOWNURS")=""
"RTN","PRSNUT03",126,0)
 . S ZTSAVE("SRT")=""
"RTN","PRSNUT03",127,0)
 . S ZTSAVE("FLAG")=""
"RTN","PRSNUT03",128,0)
 . S ZTSAVE("DIVMAP(")=""
"RTN","PRSNUT03",129,0)
 . S ZTSAVE("DIVS")=""
"RTN","PRSNUT03",130,0)
 . D ^%ZTLOAD
"RTN","PRSNUT03",131,0)
 . I $D(ZTSK) S ZTREQ="@" W !,"Request "_ZTSK_" Queued."
"RTN","PRSNUT03",132,0)
 E  D
"RTN","PRSNUT03",133,0)
 . D ALNURLST(0,SRT,SHOWNURS)
"RTN","PRSNUT03",134,0)
 Q
"RTN","PRSNUT03",135,0)
ALNURLST(FLAG,SORT,SHOWNURS) ;List all Nurses in file 450
"RTN","PRSNUT03",136,0)
 ; INPUT:
"RTN","PRSNUT03",137,0)
 ;    FLAG - set to true if you want to attempt to add the Nurse
"RTN","PRSNUT03",138,0)
 ;           to file 200.  this will also convert any numbers in
"RTN","PRSNUT03",139,0)
 ;           the name from file 450 to letters
"RTN","PRSNUT03",140,0)
 ;    SORT - (required) If "N" will sort by Nurse location, "T"
"RTN","PRSNUT03",141,0)
 ;           report sorts by T&L unit.
"RTN","PRSNUT03",142,0)
 ;    SHOWNURS - Set to true if you want to see the full info
"RTN","PRSNUT03",143,0)
 ;               about a nurses role
"RTN","PRSNUT03",144,0)
 ;
"RTN","PRSNUT03",145,0)
 Q:"T^N^"'[(SORT_U) 0
"RTN","PRSNUT03",146,0)
 U IO
"RTN","PRSNUT03",147,0)
 K ^TMP($J,"PRSN")
"RTN","PRSNUT03",148,0)
 N N2CNT,NCNT
"RTN","PRSNUT03",149,0)
 S (NCNT,N2CNT)=0
"RTN","PRSNUT03",150,0)
 D GATHER
"RTN","PRSNUT03",151,0)
 N STOP
"RTN","PRSNUT03",152,0)
 D REPORT(.STOP)
"RTN","PRSNUT03",153,0)
 D TOTAL(.STOP)
"RTN","PRSNUT03",154,0)
 D ^%ZISC
"RTN","PRSNUT03",155,0)
 Q
"RTN","PRSNUT03",156,0)
GATHER ;
"RTN","PRSNUT03",157,0)
 N PRSIEN,X,IEN200,SSN,OUT,SSN200,NAME,ZNODE,TLE,NURTYP
"RTN","PRSNUT03",158,0)
 N SRT1,SRT2,NL,SEPFLAG,NLE,NLDIV
"RTN","PRSNUT03",159,0)
 S (PRSIEN)=0
"RTN","PRSNUT03",160,0)
 F  S PRSIEN=$O(^PRSPC(PRSIEN)) Q:PRSIEN'>0  D
"RTN","PRSNUT03",161,0)
 . S X=$$ISNURSE^PRSNUT01(PRSIEN)
"RTN","PRSNUT03",162,0)
 . Q:'X
"RTN","PRSNUT03",163,0)
 . S SEPFLAG=$P($G(^PRSPC(PRSIEN,1)),U,33)
"RTN","PRSNUT03",164,0)
 . Q:SEPFLAG="Y"
"RTN","PRSNUT03",165,0)
 . S NCNT=NCNT+1
"RTN","PRSNUT03",166,0)
 . S NURTYP=$P(X,U,2,4)
"RTN","PRSNUT03",167,0)
 . I $G(FLAG) W @IOF,!!!
"RTN","PRSNUT03",168,0)
 . S IEN200=$P($G(^PRSPC(PRSIEN,200)),U)
"RTN","PRSNUT03",169,0)
 . S ZNODE=$G(^PRSPC(PRSIEN,0))
"RTN","PRSNUT03",170,0)
 . S SSN=$P(ZNODE,U,9)
"RTN","PRSNUT03",171,0)
 . S NAME=$P(ZNODE,U)
"RTN","PRSNUT03",172,0)
 . S TLE=$P(ZNODE,U,8)
"RTN","PRSNUT03",173,0)
 . I TLE="" S TLE="NONE"
"RTN","PRSNUT03",174,0)
 . S (NL,NLE,NLDIV)="NONE"
"RTN","PRSNUT03",175,0)
 . I IEN200>0 D
"RTN","PRSNUT03",176,0)
 .. S N2CNT=N2CNT+1
"RTN","PRSNUT03",177,0)
 .. S SSN200=$P($G(^VA(200,IEN200,1)),U,9)
"RTN","PRSNUT03",178,0)
 .. S NL=$$PRIMLOC^PRSNUT03(IEN200)
"RTN","PRSNUT03",179,0)
 .. S NLE=$P(NL,U,3)
"RTN","PRSNUT03",180,0)
 .. I NLE="" S NLE="NONE"
"RTN","PRSNUT03",181,0)
 .. I NL>0 D
"RTN","PRSNUT03",182,0)
 ... S NLDIV=$P(DIVMAP("NL",+NL),U,3)
"RTN","PRSNUT03",183,0)
 .. E  D
"RTN","PRSNUT03",184,0)
 ... S (NLDIV,NLE)="NONE"
"RTN","PRSNUT03",185,0)
 . E  D
"RTN","PRSNUT03",186,0)
 .. I $G(FLAG) D ADDNRS
"RTN","PRSNUT03",187,0)
 . I NLDIV'="NONE",DIVS'<0,DIVS'=NLDIV Q  ;NOT ALL DIVS OR NOT THE DIV WE'RE LOOKING FOR
"RTN","PRSNUT03",188,0)
 . S SRT1=$S($G(SORT)="N":NLE,1:TLE)
"RTN","PRSNUT03",189,0)
 . S SRT2=$S($G(SORT)="N":TLE,1:NLE)
"RTN","PRSNUT03",190,0)
 . S ^TMP($J,"PRSN",SRT1,SRT2,PRSIEN)=SSN_U_NAME_U_IEN200_U_$G(SSN200)_U_NLE_U_TLE
"RTN","PRSNUT03",191,0)
 . S ^TMP($J,"PRSN",SRT1,SRT2,PRSIEN,1)=NURTYP
"RTN","PRSNUT03",192,0)
 Q
"RTN","PRSNUT03",193,0)
REPORT(STOP) ;
"RTN","PRSNUT03",194,0)
 ;
"RTN","PRSNUT03",195,0)
 ;Print the data in the tmp array by the sort parameter
"RTN","PRSNUT03",196,0)
 ;
"RTN","PRSNUT03",197,0)
 N PAGE,GIEN,PRSIEN,DAT,SD,NL,NTL,TL
"RTN","PRSNUT03",198,0)
 S (PAGE,STOP)=0
"RTN","PRSNUT03",199,0)
 S GROUP=""
"RTN","PRSNUT03",200,0)
 D HDR
"RTN","PRSNUT03",201,0)
 F  S GROUP=$O(^TMP($J,"PRSN",GROUP)) Q:GROUP=""!STOP  D
"RTN","PRSNUT03",202,0)
 .  W !?17,$S($G(SORT)="N":"NURSING LOCATION: ",1:"T&L UNIT: ")
"RTN","PRSNUT03",203,0)
 .  I SORT="N" D
"RTN","PRSNUT03",204,0)
 ..    S GIEN=$$NLIEN^PRSNUT03(GROUP)
"RTN","PRSNUT03",205,0)
 .  E  D
"RTN","PRSNUT03",206,0)
 ..    S GIEN=$O(^PRST(455.5,"B",GROUP,0))
"RTN","PRSNUT03",207,0)
 .  S SD=$$DIV^PRSNUT03(SORT,+GIEN)
"RTN","PRSNUT03",208,0)
 .  W GROUP,!,?17,"STATION: ",$P(SD,U)," (",$P(SD,U,2),")"
"RTN","PRSNUT03",209,0)
 .  W !?12,"--------------------------------------------"
"RTN","PRSNUT03",210,0)
 .  S SRT2=""
"RTN","PRSNUT03",211,0)
 .  F  S SRT2=$O(^TMP($J,"PRSN",GROUP,SRT2)) Q:SRT2=""!STOP  D
"RTN","PRSNUT03",212,0)
 ..   S PRSIEN=0
"RTN","PRSNUT03",213,0)
 ..   F  S PRSIEN=$O(^TMP($J,"PRSN",GROUP,SRT2,PRSIEN)) Q:PRSIEN'>0!STOP  D
"RTN","PRSNUT03",214,0)
 ...    S DAT=$G(^TMP($J,"PRSN",GROUP,SRT2,PRSIEN))
"RTN","PRSNUT03",215,0)
 ...    S NURTYP=$G(^TMP($J,"PRSN",GROUP,SRT2,PRSIEN,1))
"RTN","PRSNUT03",216,0)
 ...    S NAME=$P(DAT,U,2)
"RTN","PRSNUT03",217,0)
 ...    S IEN200=$P(DAT,U,3)
"RTN","PRSNUT03",218,0)
 ...    S NL=$P(DAT,U,5)
"RTN","PRSNUT03",219,0)
 ...    S TL=$P(DAT,U,6)
"RTN","PRSNUT03",220,0)
 ...    S SSN=$E($P(DAT,U,1),6,9)
"RTN","PRSNUT03",221,0)
 ...    W !,NAME,?23,SSN,?28,PRSIEN,?35,IEN200
"RTN","PRSNUT03",222,0)
 ...    W ?46,$S($G(SORT)="N":TL,1:NL)
"RTN","PRSNUT03",223,0)
 ...    I $G(SHOWNURS) D
"RTN","PRSNUT03",224,0)
 ....      W !,?5,$P(NURTYP,U,1),?25,$P(NURTYP,U,2),?50,$P(NURTYP,U,3),!
"RTN","PRSNUT03",225,0)
 ...    E  D
"RTN","PRSNUT03",226,0)
 ....      S X=$P(NURTYP,U)
"RTN","PRSNUT03",227,0)
 ....      S NTL=$L(X)
"RTN","PRSNUT03",228,0)
 ....      I NTL>15 D
"RTN","PRSNUT03",229,0)
 .....        S DIWL=64
"RTN","PRSNUT03",230,0)
 .....        S DIWF="WC15"
"RTN","PRSNUT03",231,0)
 .....        K ^UTILITY($J,"W")
"RTN","PRSNUT03",232,0)
 .....        D ^DIWP,^DIWW K DIWL,DIWF
"RTN","PRSNUT03",233,0)
 ....      E  D
"RTN","PRSNUT03",234,0)
 .....       I $X>62 W !
"RTN","PRSNUT03",235,0)
 .....       W ?63,X
"RTN","PRSNUT03",236,0)
 ...   I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() D HDR
"RTN","PRSNUT03",237,0)
 ...   I $G(FLAG) S STOP=$$ASK^PRSLIB00()
"RTN","PRSNUT03",238,0)
 Q
"RTN","PRSNUT03",239,0)
TOTAL(STOP) ;
"RTN","PRSNUT03",240,0)
 W !,"ALL DONE" I STOP W ":  User Aborted"
"RTN","PRSNUT03",241,0)
 W !,"VA Nurse Count: ",NCNT,!,"Nurses with DUZ: ",N2CNT
"RTN","PRSNUT03",242,0)
 Q
"RTN","PRSNUT03",243,0)
ADDNRS ;
"RTN","PRSNUT03",244,0)
 ; edit PAID 450 Employee name replaceing digits 0..9 with A..J
"RTN","PRSNUT03",245,0)
 ;
"RTN","PRSNUT03",246,0)
 N NEWNAME
"RTN","PRSNUT03",247,0)
 S NEWNAME=$TR(NAME,"0123456789","ABCDEFGHIJ")
"RTN","PRSNUT03",248,0)
 W !,"NAME: ",NAME,!,"NEW:  ",NEWNAME,!,"Y: ",Y,!,"Y(0): ",$G(Y(0))
"RTN","PRSNUT03",249,0)
 N DIE,DR,DA
"RTN","PRSNUT03",250,0)
 S DIE="^PRSPC(",DA=PRSIEN,DR=".01///^S X=NEWNAME" D ^DIE
"RTN","PRSNUT03",251,0)
 ;
"RTN","PRSNUT03",252,0)
 ;
"RTN","PRSNUT03",253,0)
 ; add PAID Nurse employees to file 200
"RTN","PRSNUT03",254,0)
 ;
"RTN","PRSNUT03",255,0)
 N DIC,X,Y
"RTN","PRSNUT03",256,0)
 K DD,DO
"RTN","PRSNUT03",257,0)
 S DIC(0)="LZ",X=NEWNAME,DIC="^VA(200," D FILE^DICN
"RTN","PRSNUT03",258,0)
 ;
"RTN","PRSNUT03",259,0)
 ; edit ssn in 200
"RTN","PRSNUT03",260,0)
 ;
"RTN","PRSNUT03",261,0)
 I +Y D
"RTN","PRSNUT03",262,0)
 . S DIE="^VA(200,",DA=+Y,DR="9///^S X=SSN" D ^DIE
"RTN","PRSNUT03",263,0)
 Q
"RTN","PRSNUT03",264,0)
HDR ;
"RTN","PRSNUT03",265,0)
 W @IOF
"RTN","PRSNUT03",266,0)
 S PAGE=PAGE+1
"RTN","PRSNUT03",267,0)
 W ?68,"PAGE ",PAGE
"RTN","PRSNUT03",268,0)
 W !," NAME",?21,"SSN",?26,"IEN 450",?35,"IEN 200"
"RTN","PRSNUT03",269,0)
 W ?46,$S($G(SORT)="N":"T&L",1:"PRIM LOC")
"RTN","PRSNUT03",270,0)
 I $G(SHOWNURS) D
"RTN","PRSNUT03",271,0)
 .  W !,"     NURSE ROLE"
"RTN","PRSNUT03",272,0)
 E  D
"RTN","PRSNUT03",273,0)
 .  W ?64,"NURSE TYPE"
"RTN","PRSNUT03",274,0)
 W !,"======================================================================="
"RTN","PRSNUT03",275,0)
 Q
"RTN","PRSNUT03",276,0)
 ;
"RTN","PRSNUT03",277,0)
BLDMAP(DIVMAP) ; BUILD A DIVISION MAP OF LOCATIONS
"RTN","PRSNUT03",278,0)
 N DIVINFO,LIEN
"RTN","PRSNUT03",279,0)
 S LIEN=0
"RTN","PRSNUT03",280,0)
 F  S LIEN=$O(^NURSF(211.4,LIEN)) Q:LIEN'>0  D
"RTN","PRSNUT03",281,0)
 .  S DIVINFO=$$DIV^PRSNUT03("N",LIEN)
"RTN","PRSNUT03",282,0)
 .  S DIVMAP("NL",LIEN)=DIVINFO
"RTN","PRSNUT03",283,0)
 .  S DIVMAP("IN",$P(DIVINFO,U,3))=$P(DIVINFO,U,1,2)
"RTN","PRSNUT03",284,0)
 Q
"RTN","PRSNUT03",285,0)
 ;
"RTN","PRSNUT03",286,0)
SELECT(DM) ; Allow selection of one or all from division
"RTN","PRSNUT03",287,0)
 N DIC,DUOUT,DTOUT,X,Y
"RTN","PRSNUT03",288,0)
 S DIC="^DIC(4,",DIC(0)="AEQMZ"
"RTN","PRSNUT03",289,0)
 S DIC("S")="I $D(DM(""IN"",+Y))"
"RTN","PRSNUT03",290,0)
 S DIC("A")="Select Division or Return for All: "
"RTN","PRSNUT03",291,0)
 D ^DIC
"RTN","PRSNUT03",292,0)
 I $D(DUOUT)!$D(DTOUT) Q 0
"RTN","PRSNUT03",293,0)
 Q +Y
"RTN","PRSNUT03",294,0)
 ;
"RTN","PRSNUT04")
0^36^B45514733^n/a
"RTN","PRSNUT04",1,0)
PRSNUT04 ;;WOIFO/JAH - Nurse Activity for VANOD Utilities;8/25/2009
"RTN","PRSNUT04",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNUT04",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSNUT04",4,0)
 Q
"RTN","PRSNUT04",5,0)
 ;
"RTN","PRSNUT04",6,0)
HASACCES(IEN200,PRSIEN,ACCTYP) ;FUNCTION RETURNS TRUE if the user defined in 
"RTN","PRSNUT04",7,0)
 ; parameter IEN200 has access to the Nurse defined in parameter PRSIEN
"RTN","PRSNUT04",8,0)
 ;
"RTN","PRSNUT04",9,0)
 ;INPUT:  
"RTN","PRSNUT04",10,0)
 ;   IEN200: accessors' internal entry number in file 200 (DUZ)
"RTN","PRSNUT04",11,0)
 ;   PRSIEN: nurses' internal entry number in file 450.
"RTN","PRSNUT04",12,0)
 ;   ACCTYP: 'E' OR 'A' for data Entry or Approver
"RTN","PRSNUT04",13,0)
 ;
"RTN","PRSNUT04",14,0)
 ;OUTPUT:
"RTN","PRSNUT04",15,0)
 ;   HASACCES: function returns true if user has access to this nurse
"RTN","PRSNUT04",16,0)
 ;
"RTN","PRSNUT04",17,0)
 N HASACCES
"RTN","PRSNUT04",18,0)
 S HASACCES=0
"RTN","PRSNUT04",19,0)
 ;
"RTN","PRSNUT04",20,0)
 ; Get T&L unit and default location of Nurse plus division 
"RTN","PRSNUT04",21,0)
 ; associated with each
"RTN","PRSNUT04",22,0)
 ;
"RTN","PRSNUT04",23,0)
 ;  T&L + division
"RTN","PRSNUT04",24,0)
 N TLE,TLI,TLDIVI,TINDEX,LINDEX
"RTN","PRSNUT04",25,0)
 D GETS^DIQ(450,PRSIEN_",",7,"I","FIELDS(",,)
"RTN","PRSNUT04",26,0)
 S TLE=$G(FIELDS(450,PRSIEN_",",7,"I"))
"RTN","PRSNUT04",27,0)
 S TLI=$O(^PRST(455.5,"B",TLE,0))
"RTN","PRSNUT04",28,0)
 ;
"RTN","PRSNUT04",29,0)
 I TLI>0 D
"RTN","PRSNUT04",30,0)
 .  D GETS^DIQ(455.5,TLI_",","20.5","I","FIELDS(",,)
"RTN","PRSNUT04",31,0)
 .  S TLDIVI=$G(FIELDS(455.5,TLI_",",20.5,"I"))
"RTN","PRSNUT04",32,0)
 ;
"RTN","PRSNUT04",33,0)
 ;  Nurses (PRSIEN) Primary Location + division
"RTN","PRSNUT04",34,0)
 N NLI,NURIE200,LINDEX,NLDIVI
"RTN","PRSNUT04",35,0)
 ;
"RTN","PRSNUT04",36,0)
 S NURIE200=+$G(^PRSPC(PRSIEN,200))
"RTN","PRSNUT04",37,0)
 S NLI=+$$PRIMLOC^PRSNUT03(NURIE200)
"RTN","PRSNUT04",38,0)
 S NLDIVI=$P($$DIV^PRSNUT03("N",+NLI),U,3)
"RTN","PRSNUT04",39,0)
 ;
"RTN","PRSNUT04",40,0)
 ;  Build list of all T&Ls and Locations that (APPROVER/ENTRY PERS)
"RTN","PRSNUT04",41,0)
 ;  in IEN200 has access to subscripted by group ien and division ien
"RTN","PRSNUT04",42,0)
 ;
"RTN","PRSNUT04",43,0)
 S TINDEX=$S(ACCTYP="E":"AE",ACCTYP="A":"AR",1:"")
"RTN","PRSNUT04",44,0)
 S LINDEX=$S(ACCTYP="E":"AE",ACCTYP="A":"AA",1:"")
"RTN","PRSNUT04",45,0)
 ;
"RTN","PRSNUT04",46,0)
 N TMPGRPS,DIVMAP,DIVGRP,TN,DN
"RTN","PRSNUT04",47,0)
 D TLACC^PRSNUT02(.TMPGRPS,.DIVMAP,.DIVGRP,.TN,.DN,TINDEX,IEN200,DT)
"RTN","PRSNUT04",48,0)
 D NLACC^PRSNUT02(.TMPGRPS,.DIVMAP,.DIVGRP,.TN,.DN,LINDEX,IEN200,DT)
"RTN","PRSNUT04",49,0)
 ; 
"RTN","PRSNUT04",50,0)
 ; Array (returned from above calls) and shown below indicates that
"RTN","PRSNUT04",51,0)
 ; the user (IEN200) has access to both 'N' nurse locations
"RTN","PRSNUT04",52,0)
 ; and 'T' t&l units for division 16433 and division 500
"RTN","PRSNUT04",53,0)
 ; the last subscipt is the IEN of the t&l or nurse location
"RTN","PRSNUT04",54,0)
 ;
"RTN","PRSNUT04",55,0)
 ;   TMPGRPS("N",16433,4)="3B-WEST 500GA"
"RTN","PRSNUT04",56,0)
 ;   TMPGRPS("N",16433,5)="5-NORTH"
"RTN","PRSNUT04",57,0)
 ;   TMPGRPS("T",500,222)=110
"RTN","PRSNUT04",58,0)
 ;   TMPGRPS("T",500,230)=117
"RTN","PRSNUT04",59,0)
 ;
"RTN","PRSNUT04",60,0)
 ; Check to see if IEN200 (ENTRY/APPROVAL) matches access to the
"RTN","PRSNUT04",61,0)
 ; Nurses (PRSIEN) location or T&L (including correct division
"RTN","PRSNUT04",62,0)
 ; parameter for that access)
"RTN","PRSNUT04",63,0)
 ;
"RTN","PRSNUT04",64,0)
 I TLDIVI>0,$D(TMPGRPS("T",TLDIVI,TLI)) S HASACCES=1
"RTN","PRSNUT04",65,0)
 I NLDIVI>0,$D(TMPGRPS("N",NLDIVI,NLI)) S HASACCES=1
"RTN","PRSNUT04",66,0)
 ;
"RTN","PRSNUT04",67,0)
 Q HASACCES
"RTN","PRSNUT04",68,0)
 ;
"RTN","PRSNUT04",69,0)
 ;=================================================================
"RTN","PRSNUT04",70,0)
 ;
"RTN","PRSNUT04",71,0)
PIKGROUP(GRPS,GCHOICE,MANY) ;return the groups selected by a user regardless of access
"RTN","PRSNUT04",72,0)
 K GRPS
"RTN","PRSNUT04",73,0)
 ;
"RTN","PRSNUT04",74,0)
 ;INPUT:
"RTN","PRSNUT04",75,0)
 ;  GCHOICE:  (optional) Flag set to T, N or null
"RTN","PRSNUT04",76,0)
 ;            T: user will be prompted for T&L units
"RTN","PRSNUT04",77,0)
 ;            N: user will be prompted for Nurse Locations
"RTN","PRSNUT04",78,0)
 ;         null: user will be asked T&L units or locations
"RTN","PRSNUT04",79,0)
 ;  MANY-  (optional) set this flag to true (1) if more than one
"RTN","PRSNUT04",80,0)
 ;         group can be selected
"RTN","PRSNUT04",81,0)
 ;
"RTN","PRSNUT04",82,0)
 ;OUTPUT:
"RTN","PRSNUT04",83,0)
 ;PROCEDURE INTERACTS WITH USER AND RETURNS THE FOLLWOING:
"RTN","PRSNUT04",84,0)
 ;
"RTN","PRSNUT04",85,0)
 ;  GRPS - An array with the users selected groups subscripted
"RTN","PRSNUT04",86,0)
 ;         by .01 field value (t&l external code or location pointer)
"RTN","PRSNUT04",87,0)
 ;  GRPS(0) - will contain the number selected followed by either
"RTN","PRSNUT04",88,0)
 ;            N,T, or E for Nurse Location, T&L unit or Error
"RTN","PRSNUT04",89,0)
 ;            If piece 2 is an E then piece 3 will contain error
"RTN","PRSNUT04",90,0)
 ;            description
"RTN","PRSNUT04",91,0)
 ;         
"RTN","PRSNUT04",92,0)
 ;  Node Definition: an Upparrow delimited string with the following:
"RTN","PRSNUT04",93,0)
 ;     PEICE  DEFINITION
"RTN","PRSNUT04",94,0)
 ;     =====  ==============================
"RTN","PRSNUT04",95,0)
 ;       1    internal entry number of field value of group 
"RTN","PRSNUT04",96,0)
 ;       2     IEN of Division associated with this Group
"RTN","PRSNUT04",97,0)
 ;       3     External value of division
"RTN","PRSNUT04",98,0)
 ;
"RTN","PRSNUT04",99,0)
 ;  Sample Call:
"RTN","PRSNUT04",100,0)
 ;
"RTN","PRSNUT04",101,0)
 ;      D PIKGROUP^PRSNUT04(.G,"T",1)    
"RTN","PRSNUT04",102,0)
 ;
"RTN","PRSNUT04",103,0)
 ;  Sample Return:
"RTN","PRSNUT04",104,0)
 ;
"RTN","PRSNUT04",105,0)
 ;      G(0)="3^N"
"RTN","PRSNUT04",106,0)
 ;      G("1E-EAST")="1^16433^500GA"
"RTN","PRSNUT04",107,0)
 ;      G("3B-EAST")="6^16433^500GA"
"RTN","PRSNUT04",108,0)
 ;      G("3B-WEST")="4^16433^500GA"
"RTN","PRSNUT04",109,0)
 ;
"RTN","PRSNUT04",110,0)
 ; Build temporary list of all possible groups 
"RTN","PRSNUT04",111,0)
 ;  If user has access to groups in more than one division then
"RTN","PRSNUT04",112,0)
 ;  prompt to select a division
"RTN","PRSNUT04",113,0)
 ;
"RTN","PRSNUT04",114,0)
 ; Example of TMPGRPS array
"RTN","PRSNUT04",115,0)
 ;
"RTN","PRSNUT04",116,0)
 ;     TMPGRPS("N",500,5)="5-NORTH"
"RTN","PRSNUT04",117,0)
 ;     TMPGRPS("N",16433,6)="3B-EAST"
"RTN","PRSNUT04",118,0)
 ;     TMPGRPS("N",16436,1)="1E-EAST"
"RTN","PRSNUT04",119,0)
 ;     TMPGRPS("T",500,261)=112
"RTN","PRSNUT04",120,0)
 ;     TMPGRPS("T",16433,1)=221
"RTN","PRSNUT04",121,0)
 ;
"RTN","PRSNUT04",122,0)
 ;  Example of DIVMAP array:
"RTN","PRSNUT04",123,0)
 ;    0 node - total divisions ^ access param set ^ access param not set
"RTN","PRSNUT04",124,0)
 ;    other nodes - (IEN file 4)="Station number" (field #99)
"RTN","PRSNUT04",125,0)
 ; 
"RTN","PRSNUT04",126,0)
 ;    DIVMAP(0)=2
"RTN","PRSNUT04",127,0)
 ;    DIVMAP(16433)="500GA^T&L"
"RTN","PRSNUT04",128,0)
 ;    DIVMAP(16436)="500GD^NL"
"RTN","PRSNUT04",129,0)
 ;
"RTN","PRSNUT04",130,0)
 N TLI,FIELDS,TLE,TMPGRPS,DIVMAP,LOCI,LOCE,I,DIVNOPAR,EFFECTPP,DIVPARAM
"RTN","PRSNUT04",131,0)
 N NURSLOC,SELDIV,TINDEX,TLDIVI,DIVGRP,DIVI
"RTN","PRSNUT04",132,0)
 ;
"RTN","PRSNUT04",133,0)
 S DIVMAP(0)="0^0^0"
"RTN","PRSNUT04",134,0)
 S TLI=0
"RTN","PRSNUT04",135,0)
 F  S TLI=$O(^PRST(455.5,TLI)) Q:TLI'>0  D
"RTN","PRSNUT04",136,0)
 .   D GETS^DIQ(455.5,TLI_",",".01;20.5","IE","FIELDS(",,)
"RTN","PRSNUT04",137,0)
 .   S TLE=$G(FIELDS(455.5,TLI_",",.01,"E"))
"RTN","PRSNUT04",138,0)
 .   S DIVI=$G(FIELDS(455.5,TLI_",",20.5,"I"))
"RTN","PRSNUT04",139,0)
 .;
"RTN","PRSNUT04",140,0)
 .  Q:DIVI=""
"RTN","PRSNUT04",141,0)
 .;
"RTN","PRSNUT04",142,0)
 .   D GETS^DIQ(4,DIVI_",",".01;99","EI","FIELDS(",,)
"RTN","PRSNUT04",143,0)
 .;
"RTN","PRSNUT04",144,0)
 .  S TMPGRPS("T",DIVI,TLI)=TLE
"RTN","PRSNUT04",145,0)
 .  S DIVMAP(DIVI)=FIELDS(4,DIVI_",",99,"E")
"RTN","PRSNUT04",146,0)
 .  S DIVGRP("T",TLI)=DIVI_U_FIELDS(4,DIVI_",",99,"E")
"RTN","PRSNUT04",147,0)
 K FIELDS
"RTN","PRSNUT04",148,0)
 ;
"RTN","PRSNUT04",149,0)
 S LOCI=0
"RTN","PRSNUT04",150,0)
 F  S LOCI=$O(^NURSF(211.4,LOCI)) Q:LOCI'>0  D
"RTN","PRSNUT04",151,0)
 .;
"RTN","PRSNUT04",152,0)
 .  D GETS^DIQ(211.4,LOCI_",",".01;.02","IE","FIELDS(",,)
"RTN","PRSNUT04",153,0)
 .;
"RTN","PRSNUT04",154,0)
 .  S LOCE=$G(FIELDS(211.4,LOCI_",",.01,"E"))
"RTN","PRSNUT04",155,0)
 .  S DIVI=$G(FIELDS(211.4,LOCI_",",.02,"I"))
"RTN","PRSNUT04",156,0)
 .;
"RTN","PRSNUT04",157,0)
 .   S NURSLOC=+$$GET1^DIQ(44,+$G(^NURSF(211.4,LOCI,0)),3,"I")
"RTN","PRSNUT04",158,0)
 .   D GETS^DIQ(4,NURSLOC_",",".01;99","EI","FIELDS(",,)
"RTN","PRSNUT04",159,0)
 .;
"RTN","PRSNUT04",160,0)
 .  Q:DIVI=""
"RTN","PRSNUT04",161,0)
 .;
"RTN","PRSNUT04",162,0)
 .  S DIVMAP(NURSLOC)=FIELDS(4,NURSLOC_",",99,"E")
"RTN","PRSNUT04",163,0)
 .  S TMPGRPS("N",NURSLOC,LOCI)=LOCE
"RTN","PRSNUT04",164,0)
 .  S DIVGRP("N",LOCI)=NURSLOC_U_FIELDS(4,NURSLOC_",",99,"E")
"RTN","PRSNUT04",165,0)
 K FIELDS
"RTN","PRSNUT04",166,0)
 ;
"RTN","PRSNUT04",167,0)
 ;
"RTN","PRSNUT04",168,0)
 I '$D(DIVMAP) S GRPS(0)="0^E^No T&Ls or Locations found with correct division setup." Q
"RTN","PRSNUT04",169,0)
 ;
"RTN","PRSNUT04",170,0)
 ; count number of divisions with t&ls and locations
"RTN","PRSNUT04",171,0)
 ;
"RTN","PRSNUT04",172,0)
 N CNT,DIVI
"RTN","PRSNUT04",173,0)
 S (DIVI,CNT)=0 F  S DIVI=$O(DIVMAP(DIVI)) Q:DIVI'>0  S CNT=CNT+1
"RTN","PRSNUT04",174,0)
 ;
"RTN","PRSNUT04",175,0)
 N OUT
"RTN","PRSNUT04",176,0)
 S OUT=0
"RTN","PRSNUT04",177,0)
 I CNT>1 D
"RTN","PRSNUT04",178,0)
 .  W !?5,"Location(s) and T&L units are in more than one division"
"RTN","PRSNUT04",179,0)
 .  N DIC,X,Y,DUOUT,DTOUT
"RTN","PRSNUT04",180,0)
 .  S DIC(0)="AEQMZ"
"RTN","PRSNUT04",181,0)
 .  S DIC="^DIC(4,"
"RTN","PRSNUT04",182,0)
 .  S DIC("S")="I $D(DIVMAP(Y))"
"RTN","PRSNUT04",183,0)
 .  D ^DIC
"RTN","PRSNUT04",184,0)
 .  I $D(DUOUT)!$D(DTOUT)!(Y'>0) S OUT=1
"RTN","PRSNUT04",185,0)
 .  S SELDIV=$G(Y)
"RTN","PRSNUT04",186,0)
 E  D
"RTN","PRSNUT04",187,0)
 .  S SELDIV=$O(DIVMAP(0))
"RTN","PRSNUT04",188,0)
 I OUT S GRPS(0)="0^E^user abort" Q
"RTN","PRSNUT04",189,0)
 ;
"RTN","PRSNUT04",190,0)
 ; prompt user for location or T&L within selected division
"RTN","PRSNUT04",191,0)
 ;
"RTN","PRSNUT04",192,0)
 N DIR,DIRUT,X,Y
"RTN","PRSNUT04",193,0)
 I "^N^T^"'[(U_$G(GCHOICE)_U) D
"RTN","PRSNUT04",194,0)
 .  S DIR(0)="S^T:T&L Units;N:Nurse Locations"
"RTN","PRSNUT04",195,0)
 .  S DIR("A")="Enter Selection"
"RTN","PRSNUT04",196,0)
 .  S DIR("?")="Enter whether you want to select T&L units or Locations."
"RTN","PRSNUT04",197,0)
 .  D ^DIR
"RTN","PRSNUT04",198,0)
 .  S DIVPARAM=Y
"RTN","PRSNUT04",199,0)
 E  D
"RTN","PRSNUT04",200,0)
 .  S DIVPARAM=GCHOICE
"RTN","PRSNUT04",201,0)
 I $D(DIRUT) S GRPS(0)="0^E^user abort" Q
"RTN","PRSNUT04",202,0)
 ;
"RTN","PRSNUT04",203,0)
 N DIC,X,Y,DUOUT,DTOUT,VAUTSTR,VAUTNI,VAUTVB,OUT,PRSNGR
"RTN","PRSNUT04",204,0)
 S OUT=0
"RTN","PRSNUT04",205,0)
 ;      select t&l unit OR nurse location
"RTN","PRSNUT04",206,0)
 I DIVPARAM="T" D
"RTN","PRSNUT04",207,0)
 .  S VAUTSTR="T&L Units"
"RTN","PRSNUT04",208,0)
 .  S DIC="^PRST(455.5,"
"RTN","PRSNUT04",209,0)
 E  D
"RTN","PRSNUT04",210,0)
 .  S VAUTSTR="Nurse Location"
"RTN","PRSNUT04",211,0)
 .  S DIC="^NURSF(211.4,"
"RTN","PRSNUT04",212,0)
 S DIC(0)="AEQMZ"
"RTN","PRSNUT04",213,0)
 S DIC("S")="I $D(TMPGRPS(DIVPARAM,+SELDIV,+Y))"
"RTN","PRSNUT04",214,0)
 I $G(MANY) D
"RTN","PRSNUT04",215,0)
 .  S VAUTNI=2,VAUTVB="PRSNGR"
"RTN","PRSNUT04",216,0)
 .  D FIRST^VAUTOMA
"RTN","PRSNUT04",217,0)
 .  S (CNT,Y)=0
"RTN","PRSNUT04",218,0)
 .  I 'PRSNGR D
"RTN","PRSNUT04",219,0)
 ..    F  S Y=$O(PRSNGR(Y)) Q:Y=""  D
"RTN","PRSNUT04",220,0)
 ...     I $D(TMPGRPS(DIVPARAM,+SELDIV,Y)) D
"RTN","PRSNUT04",221,0)
 ....      S CNT=CNT+1
"RTN","PRSNUT04",222,0)
 ....      S GRPS($G(TMPGRPS(DIVPARAM,+SELDIV,Y)))=+Y_U_$G(DIVGRP(DIVPARAM,+Y))_U_$S(DIVPARAM="N":+$G(^NURSF(211.4,+Y,0)),1:"")
"RTN","PRSNUT04",223,0)
 .  E  D
"RTN","PRSNUT04",224,0)
 ..    ; all groups selected, so update output array with them
"RTN","PRSNUT04",225,0)
 ..    F  S Y=$O(DIVGRP(DIVPARAM,Y)) Q:Y=""  D
"RTN","PRSNUT04",226,0)
 ...     I $D(TMPGRPS(DIVPARAM,+SELDIV,Y)) D
"RTN","PRSNUT04",227,0)
 ....      S CNT=CNT+1
"RTN","PRSNUT04",228,0)
 ....      S GRPS($G(TMPGRPS(DIVPARAM,+SELDIV,Y)))=+Y_U_$G(DIVGRP(DIVPARAM,+Y))_U_$S(DIVPARAM="N":+$G(^NURSF(211.4,+Y,0)),1:"")
"RTN","PRSNUT04",229,0)
 .;
"RTN","PRSNUT04",230,0)
 .  S GRPS(0)=CNT_U_$E(DIVPARAM,1,1)
"RTN","PRSNUT04",231,0)
 .  I CNT=0 S GRPS(0)="0^E^Nothing Selected" Q
"RTN","PRSNUT04",232,0)
 E  D
"RTN","PRSNUT04",233,0)
 .  D ^DIC
"RTN","PRSNUT04",234,0)
 .  I $D(DUOUT)!$D(DTOUT)!(Y'>0) S OUT=1 Q
"RTN","PRSNUT04",235,0)
 .  S GRPS(0)="1"_U_$E(DIVPARAM,1,1)
"RTN","PRSNUT04",236,0)
 .  S GRPS($G(TMPGRPS(DIVPARAM,+SELDIV,+Y)))=+Y_U_$G(DIVGRP(DIVPARAM,+Y))_U_$S(DIVPARAM="N":+$G(^NURSF(211.4,+Y,0)),1:"")
"RTN","PRSNUT04",237,0)
 I OUT S GRPS(0)="0^E^user abort" Q
"RTN","PRSNUT04",238,0)
 ;
"RTN","PRSNUT04",239,0)
 Q
"RTN","PRSNUT04",240,0)
 ;
"RTN","PRSNUT05")
0^37^B12074969^n/a
"RTN","PRSNUT05",1,0)
PRSNUT05 ;WOIFO/JAH - Nurse Activity for VANOD Utilities;6/5/2009
"RTN","PRSNUT05",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSNUT05",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSNUT05",4,0)
 Q
"RTN","PRSNUT05",5,0)
 ;
"RTN","PRSNUT05",6,0)
SHOWSU ; SHOW SYSTEM SETUP WITH DIVISIONS, NURSE LOCATIONS AND T&Ls
"RTN","PRSNUT05",7,0)
 ;
"RTN","PRSNUT05",8,0)
 N %ZIS,POP,IOP,DIVMAP,DIVS
"RTN","PRSNUT05",9,0)
 D BLDMAP(.DIVMAP)
"RTN","PRSNUT05",10,0)
 S DIVS=$$SELECT(.DIVMAP)
"RTN","PRSNUT05",11,0)
 Q:DIVS=0
"RTN","PRSNUT05",12,0)
 S %ZIS="MQ"
"RTN","PRSNUT05",13,0)
 D ^%ZIS
"RTN","PRSNUT05",14,0)
 Q:POP
"RTN","PRSNUT05",15,0)
 I $D(IO("Q")) D
"RTN","PRSNUT05",16,0)
 . K IO("Q")
"RTN","PRSNUT05",17,0)
 . N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC
"RTN","PRSNUT05",18,0)
 . S ZTDESC="PRSN SHOW SYSTEM SETUP REPORT"
"RTN","PRSNUT05",19,0)
 . S ZTRTN="MAIN^PRSNUT05"
"RTN","PRSNUT05",20,0)
 . S ZTSAVE("DIVMAP(")=""
"RTN","PRSNUT05",21,0)
 . S ZTSAVE("DIVS")=""
"RTN","PRSNUT05",22,0)
 . D ^%ZTLOAD
"RTN","PRSNUT05",23,0)
 . I $D(ZTSK) S ZTREQ="@" W !,"Request "_ZTSK_" Queued."
"RTN","PRSNUT05",24,0)
 E  D
"RTN","PRSNUT05",25,0)
 . D MAIN
"RTN","PRSNUT05",26,0)
 Q
"RTN","PRSNUT05",27,0)
MAIN ;
"RTN","PRSNUT05",28,0)
 N RUNDT,DATA
"RTN","PRSNUT05",29,0)
 U IO
"RTN","PRSNUT05",30,0)
 S RUNDT=$E(DT,4,5)_"/"_$E(DT,6,7)_"/"_(1700+$E(DT,1,3))
"RTN","PRSNUT05",31,0)
 D LOCTL(.DATA,.DIVMAP)
"RTN","PRSNUT05",32,0)
 D SHOLOCTL(.DATA,.DIVMAP,RUNDT)
"RTN","PRSNUT05",33,0)
 D CLEANUP
"RTN","PRSNUT05",34,0)
 D ^%ZISC
"RTN","PRSNUT05",35,0)
 Q
"RTN","PRSNUT05",36,0)
 ;
"RTN","PRSNUT05",37,0)
SELECT(DM) ; Allow selection of one or all from division
"RTN","PRSNUT05",38,0)
 N DIC,DUOUT,DTOUT,X,Y
"RTN","PRSNUT05",39,0)
 S DIC="^DIC(4,",DIC(0)="AEQMZ"
"RTN","PRSNUT05",40,0)
 S DIC("S")="I $D(DM(""IN"",+Y))"
"RTN","PRSNUT05",41,0)
 S DIC("A")="Select Division or Return for All: "
"RTN","PRSNUT05",42,0)
 D ^DIC
"RTN","PRSNUT05",43,0)
 I $D(DUOUT)!$D(DTOUT) Q 0
"RTN","PRSNUT05",44,0)
 Q +Y
"RTN","PRSNUT05",45,0)
 ;
"RTN","PRSNUT05",46,0)
LOCTL(DATA,DIVMAP) ;  Build an array that sorts locations with t&ls and counts
"RTN","PRSNUT05",47,0)
 ;  the number of nurses at the location and t&l
"RTN","PRSNUT05",48,0)
 N PRSIEN,X,OUT,NAME,ZNODE,NCNT,TLE,NLDIV,IEN200,NL,NLE,SEPFLAG
"RTN","PRSNUT05",49,0)
 S (NCNT,PRSIEN)=0
"RTN","PRSNUT05",50,0)
 F  S PRSIEN=$O(^PRSPC(PRSIEN)) Q:PRSIEN'>0  D
"RTN","PRSNUT05",51,0)
 . S X=$$ISNURSE^PRSNUT01(PRSIEN)
"RTN","PRSNUT05",52,0)
 . Q:'X
"RTN","PRSNUT05",53,0)
 . S SEPFLAG=$P($G(^PRSPC(PRSIEN,1)),U,33)
"RTN","PRSNUT05",54,0)
 . Q:SEPFLAG="Y"
"RTN","PRSNUT05",55,0)
 . S NCNT=NCNT+1
"RTN","PRSNUT05",56,0)
 . S IEN200=$P($G(^PRSPC(PRSIEN,200)),U)
"RTN","PRSNUT05",57,0)
 . S ZNODE=$G(^PRSPC(PRSIEN,0))
"RTN","PRSNUT05",58,0)
 . S TLE=$P(ZNODE,U,8)
"RTN","PRSNUT05",59,0)
 . I TLE="" S TLE="NONE"
"RTN","PRSNUT05",60,0)
 . S (NL,NLE,NLDIV)="NONE"
"RTN","PRSNUT05",61,0)
 . I IEN200>0 D
"RTN","PRSNUT05",62,0)
 .. S NL=$$PRIMLOC^PRSNUT03(IEN200)
"RTN","PRSNUT05",63,0)
 .. S NLE=$P(NL,U,3)
"RTN","PRSNUT05",64,0)
 .. I NL>0 D
"RTN","PRSNUT05",65,0)
 ... S NLDIV=$P(DIVMAP("NL",+NL),U,3)
"RTN","PRSNUT05",66,0)
 .. E  D
"RTN","PRSNUT05",67,0)
 ... S (NLDIV,NLE)="NONE"
"RTN","PRSNUT05",68,0)
 . I ($G(NLDIV)'="")&($G(NLE)'="")&($G(TLE)'="") D
"RTN","PRSNUT05",69,0)
 .. I NLDIV'="NONE",DIVS'<0,DIVS'=NLDIV Q  ;NOT ALL DIVS OR NOT THE DIV WE'RE LOOKING FOR
"RTN","PRSNUT05",70,0)
 .. I '$D(DATA(NLDIV,NLE,TLE)) S (DATA(NLDIV,NLE,TLE))=0
"RTN","PRSNUT05",71,0)
 .. S DATA(NLDIV,NLE,TLE)=+DATA(NLDIV,NLE,TLE)+1
"RTN","PRSNUT05",72,0)
 Q
"RTN","PRSNUT05",73,0)
 ;
"RTN","PRSNUT05",74,0)
SHOLOCTL(DATA,DIVMAP,RUNDT) ;
"RTN","PRSNUT05",75,0)
 N NLD,LSTNLD,STOP,I,J
"RTN","PRSNUT05",76,0)
 S (NLD,LSTNLD,STOP)=0
"RTN","PRSNUT05",77,0)
 F  S NLD=$O(DATA(NLD)) Q:NLD=""!STOP  D
"RTN","PRSNUT05",78,0)
 .  I NLD'=LSTNLD S:LSTNLD'=0 STOP=$$ASK^PRSLIB00() S LSTNLD=NLD D HDR
"RTN","PRSNUT05",79,0)
 .  S I=""
"RTN","PRSNUT05",80,0)
 .  F  S I=$O(DATA(NLD,I)) Q:I=""  D
"RTN","PRSNUT05",81,0)
 ..   W !,I
"RTN","PRSNUT05",82,0)
 ..   S J=""
"RTN","PRSNUT05",83,0)
 ..   F  S J=$O(DATA(NLD,I,J)) Q:J=""  D
"RTN","PRSNUT05",84,0)
 ...    W !,?25,$G(DATA(NLD,I,J)),?41,J
"RTN","PRSNUT05",85,0)
 ...    I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() D HDR
"RTN","PRSNUT05",86,0)
 Q
"RTN","PRSNUT05",87,0)
 ;
"RTN","PRSNUT05",88,0)
HDR ;
"RTN","PRSNUT05",89,0)
 N K
"RTN","PRSNUT05",90,0)
 W @IOF,!!!?7,"DIVISION: "
"RTN","PRSNUT05",91,0)
 I $G(NLD)="NONE"!($G(NLD)="") D
"RTN","PRSNUT05",92,0)
 .   W NLD
"RTN","PRSNUT05",93,0)
 E  D
"RTN","PRSNUT05",94,0)
 .   W $P(DIVMAP("IN",NLD),U)," (",$P(DIVMAP("IN",NLD),U,2),")"
"RTN","PRSNUT05",95,0)
 W ?(IOM-22),"Run Date: ",RUNDT
"RTN","PRSNUT05",96,0)
 W !,"Location",?22,"Nurse Count",?38,"T&L Unit"
"RTN","PRSNUT05",97,0)
 W ! F K=1:1:IOM W "-"
"RTN","PRSNUT05",98,0)
 Q
"RTN","PRSNUT05",99,0)
 ;
"RTN","PRSNUT05",100,0)
BLDMAP(DIVMAP) ; BUILD A DIVISION MAP OF LOCATIONS
"RTN","PRSNUT05",101,0)
 N DIVINFO,LIEN
"RTN","PRSNUT05",102,0)
 S LIEN=0
"RTN","PRSNUT05",103,0)
 F  S LIEN=$O(^NURSF(211.4,LIEN)) Q:LIEN'>0  D
"RTN","PRSNUT05",104,0)
 .  S DIVINFO=$$DIV^PRSNUT03("N",LIEN)
"RTN","PRSNUT05",105,0)
 .  S DIVMAP("NL",LIEN)=DIVINFO
"RTN","PRSNUT05",106,0)
 .  S DIVMAP("IN",$P(DIVINFO,U,3))=$P(DIVINFO,U,1,2)
"RTN","PRSNUT05",107,0)
 Q
"RTN","PRSNUT05",108,0)
CLEANUP ;
"RTN","PRSNUT05",109,0)
 K DIVMAP,DATA
"RTN","PRSNUT05",110,0)
 Q
"RTN","PRSPLVU")
0^54^B47621805^B47621313
"RTN","PRSPLVU",1,0)
PRSPLVU ;WOIFO/SAB - LEAVE UTILITIES ;3/31/2005
"RTN","PRSPLVU",2,0)
 ;;4.0;PAID;**93,126**;Sep 21, 1995;Build 59
"RTN","PRSPLVU",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSPLVU",4,0)
 Q
"RTN","PRSPLVU",5,0)
 ;
"RTN","PRSPLVU",6,0)
LOADTOD(PPI,PRSIEN,DAY,TOD,TODD) ; Load Tour of Duty into TOD() Array
"RTN","PRSPLVU",7,0)
 ; input
"RTN","PRSPLVU",8,0)
 ;   PPI     - pay period IEN, file 458
"RTN","PRSPLVU",9,0)
 ;   PRSIEN  - employee IEN, file 450
"RTN","PRSPLVU",10,0)
 ;   DAY     - day number in PP
"RTN","PRSPLVU",11,0)
 ;   TOD     - array, passed by reference, will be initialized
"RTN","PRSPLVU",12,0)
 ;   TODD    - array, passed by reference, will be initialized
"RTN","PRSPLVU",13,0)
 ; output
"RTN","PRSPLVU",14,0)
 ;   TOD     - array updated with tour segments in following format
"RTN","PRSPLVU",15,0)
 ;             TOD(tour#-segment#)=
"RTN","PRSPLVU",16,0)
 ; start d/t (FM)^end d/t (FM)^type of time^start time(ETA)^end time(ETA)
"RTN","PRSPLVU",17,0)
 ; ^special code
"RTN","PRSPLVU",18,0)
 ;   TODD    - array updated with tour data in the following format
"RTN","PRSPLVU",19,0)
 ;             TODD(tour#)=
"RTN","PRSPLVU",20,0)
 ; earliest regular start d/t (FM)^latest regular end d/t (FM)^
"RTN","PRSPLVU",21,0)
 ; tour meal length (minutes)^segment # of longest regular tour segment 
"RTN","PRSPLVU",22,0)
 ;
"RTN","PRSPLVU",23,0)
 N FLD,NODE,PRSDT,PRSX,TN,TODI,TODY,TSC,TSE,TSI,TSLS,TSS,TST
"RTN","PRSPLVU",24,0)
 ;
"RTN","PRSPLVU",25,0)
 K TOD,TODD ; initialize array
"RTN","PRSPLVU",26,0)
 ;
"RTN","PRSPLVU",27,0)
 S PRSDT=$P($G(^PRST(458,PPI,1)),U,DAY)
"RTN","PRSPLVU",28,0)
 Q:'PRSDT
"RTN","PRSPLVU",29,0)
 ;
"RTN","PRSPLVU",30,0)
 ; loop thru both tours (#1 and #2) for the day
"RTN","PRSPLVU",31,0)
 F TN=1,2 D
"RTN","PRSPLVU",32,0)
 . S NODE=$S(TN=1:1,TN=2:4,1:"")
"RTN","PRSPLVU",33,0)
 . Q:NODE=""
"RTN","PRSPLVU",34,0)
 . S TODY=$G(^PRST(458,PPI,"E",PRSIEN,"D",DAY,NODE))
"RTN","PRSPLVU",35,0)
 . S TSLS(0)=0 ; init longest regular segment length (seconds)
"RTN","PRSPLVU",36,0)
 . ;
"RTN","PRSPLVU",37,0)
 . ; obtain the tour meal time
"RTN","PRSPLVU",38,0)
 . S FLD=$S(TN=1:2,1:10.3) ; field number corresponding to tour #1 or #2
"RTN","PRSPLVU",39,0)
 . S TODI=$$GET1^DIQ(458.02,DAY_","_PRSIEN_","_PPI_",",FLD,"I") ; tour of duty IEN
"RTN","PRSPLVU",40,0)
 . S:TODI $P(TODD(TN),U,3)=$$GET1^DIQ(457.1,TODI,2) ; tour meal (minutes)
"RTN","PRSPLVU",41,0)
 . ;
"RTN","PRSPLVU",42,0)
 . ; loop thru seven time segments of tour
"RTN","PRSPLVU",43,0)
 . F TSI=1:1:7 D
"RTN","PRSPLVU",44,0)
 . . S TSS=$P(TODY,U,(TSI-1)*3+1) ; time segment start
"RTN","PRSPLVU",45,0)
 . . Q:TSS=""
"RTN","PRSPLVU",46,0)
 . . S TSE=$P(TODY,U,(TSI-1)*3+2) ; time segment end
"RTN","PRSPLVU",47,0)
 . . Q:TSE=""
"RTN","PRSPLVU",48,0)
 . . S TSC=$P(TODY,U,(TSI-1)*3+3) ; time segment special code
"RTN","PRSPLVU",49,0)
 . . ; derive type of time
"RTN","PRSPLVU",50,0)
 . . S TST=$S(TSC:$P($G(^PRST(457.2,TSC,0)),U,2),1:"RG")
"RTN","PRSPLVU",51,0)
 . . ; convert times to FileMan date/time format
"RTN","PRSPLVU",52,0)
 . . S PRSX=$$CNVTS(PRSDT,TSS,TSE)
"RTN","PRSPLVU",53,0)
 . . Q:$P(PRSX,U)=""
"RTN","PRSPLVU",54,0)
 . . S TOD(TN_"-"_TSI)=$P(PRSX,U)_U_$P(PRSX,U,2)_U_TST_U_TSS_U_TSE_U_TSC
"RTN","PRSPLVU",55,0)
 . . ;
"RTN","PRSPLVU",56,0)
 . . ; skip remaining steps if segment is not regular time
"RTN","PRSPLVU",57,0)
 . . Q:TST'="RG"
"RTN","PRSPLVU",58,0)
 . . ;
"RTN","PRSPLVU",59,0)
 . . ; if earliest start time of tour is null, set it from current seg.
"RTN","PRSPLVU",60,0)
 . . S:$P($G(TODD(TN)),U)="" $P(TODD(TN),U)=$P(PRSX,U)
"RTN","PRSPLVU",61,0)
 . . ;
"RTN","PRSPLVU",62,0)
 . . ; if latest end time of tour is null, set it from current seg.
"RTN","PRSPLVU",63,0)
 . . S:$P($G(TODD(TN)),U,2)="" $P(TODD(TN),U,2)=$P(PRSX,U,2)
"RTN","PRSPLVU",64,0)
 . . ;
"RTN","PRSPLVU",65,0)
 . . ; if this segments start time is earlier, update the tour start
"RTN","PRSPLVU",66,0)
 . . I $P(PRSX,U)<$P(TODD(TN),U) S $P(TODD(TN),U)=$P(PRSX,U)
"RTN","PRSPLVU",67,0)
 . . ;
"RTN","PRSPLVU",68,0)
 . . ; if this segments end time is later, update the tour end
"RTN","PRSPLVU",69,0)
 . . I $P(PRSX,U,2)>$P(TODD(TN),U,2) S $P(TODD(TN),U,2)=$P(PRSX,U,2)
"RTN","PRSPLVU",70,0)
 . . ;
"RTN","PRSPLVU",71,0)
 . . ; compute length of the tour segment (seconds)
"RTN","PRSPLVU",72,0)
 . . S TSLS=$$FMDIFF^XLFDT($P(PRSX,U,2),$P(PRSX,U,1),2)
"RTN","PRSPLVU",73,0)
 . . ; if segment length more than longest found use it as longest found
"RTN","PRSPLVU",74,0)
 . . I TSLS>TSLS(0) S TSLS(0)=TSLS,$P(TODD(TN),U,4)=TSI
"RTN","PRSPLVU",75,0)
 Q
"RTN","PRSPLVU",76,0)
 ;
"RTN","PRSPLVU",77,0)
LOADESR(PPI,PRSIEN,DAY,ESR) ; Load ESR into ESR() Array
"RTN","PRSPLVU",78,0)
 ; input
"RTN","PRSPLVU",79,0)
 ;   PPI     - pay period IEN, file 458
"RTN","PRSPLVU",80,0)
 ;   PRSIEN  - employee IEN, file 450
"RTN","PRSPLVU",81,0)
 ;   DAY     - day number in PP
"RTN","PRSPLVU",82,0)
 ;   ESR     - array, passed by reference, will be initialized
"RTN","PRSPLVU",83,0)
 ; output
"RTN","PRSPLVU",84,0)
 ;   ESR     - array updated with tour segments in following format
"RTN","PRSPLVU",85,0)
 ;             ESR(segment #)=
"RTN","PRSPLVU",86,0)
 ; start d/t (FM)^end d/t (FM)^type of time^start time(ETA)^end time(ETA)
"RTN","PRSPLVU",87,0)
 ; ^meal (min)
"RTN","PRSPLVU",88,0)
 ;
"RTN","PRSPLVU",89,0)
 N ESRY,PRSDT,PRSX,TSE,TSI,TSM,TSS,TST
"RTN","PRSPLVU",90,0)
 ;
"RTN","PRSPLVU",91,0)
 K ESR ; initialize array
"RTN","PRSPLVU",92,0)
 ;
"RTN","PRSPLVU",93,0)
 S PRSDT=$P($G(^PRST(458,PPI,1)),U,DAY)
"RTN","PRSPLVU",94,0)
 Q:'PRSDT
"RTN","PRSPLVU",95,0)
 ;
"RTN","PRSPLVU",96,0)
 S ESRY=$G(^PRST(458,PPI,"E",PRSIEN,"D",DAY,5))
"RTN","PRSPLVU",97,0)
 ;
"RTN","PRSPLVU",98,0)
 ; loop thru seven time segments
"RTN","PRSPLVU",99,0)
 F TSI=1:1:7 D
"RTN","PRSPLVU",100,0)
 . S TSS=$P(ESRY,U,(TSI-1)*5+1) ; time segment start
"RTN","PRSPLVU",101,0)
 . Q:TSS=""
"RTN","PRSPLVU",102,0)
 . S TSE=$P(ESRY,U,(TSI-1)*5+2) ; time segment end
"RTN","PRSPLVU",103,0)
 . Q:TSE=""
"RTN","PRSPLVU",104,0)
 . S TST=$P(ESRY,U,(TSI-1)*5+3) ; time segment type of time
"RTN","PRSPLVU",105,0)
 . Q:TST=""
"RTN","PRSPLVU",106,0)
 . ; convert times to FileMan date/time format
"RTN","PRSPLVU",107,0)
 . S PRSX=$$CNVTS(PRSDT,TSS,TSE)
"RTN","PRSPLVU",108,0)
 . Q:$P(PRSX,U)=""
"RTN","PRSPLVU",109,0)
 . S TSM=$P(ESRY,U,(TSI-1)*5+5) ; time segment meal (min)
"RTN","PRSPLVU",110,0)
 . S ESR(TSI)=$P(PRSX,U)_U_$P(PRSX,U,2)_U_TST_U_TSS_U_TSE_U_TSM
"RTN","PRSPLVU",111,0)
 Q
"RTN","PRSPLVU",112,0)
 ;
"RTN","PRSPLVU",113,0)
LOADTC(PPI,PRSIEN,DAY,TC) ; Load Time Card into TC() Array
"RTN","PRSPLVU",114,0)
 ; input
"RTN","PRSPLVU",115,0)
 ;   PPI     - pay period IEN, file 458
"RTN","PRSPLVU",116,0)
 ;   PRSIEN  - employee IEN, file 450
"RTN","PRSPLVU",117,0)
 ;   DAY     - day number in PP
"RTN","PRSPLVU",118,0)
 ;   TC      - array, passed by reference, may contain data
"RTN","PRSPLVU",119,0)
 ; output
"RTN","PRSPLVU",120,0)
 ;   TC      - array updated with tour segments in following format
"RTN","PRSPLVU",121,0)
 ;             TC(segment #)=
"RTN","PRSPLVU",122,0)
 ; start d/t (FM)^end d/t (FM)^type of time^start time(ETA)^end time(ETA)
"RTN","PRSPLVU",123,0)
 ;
"RTN","PRSPLVU",124,0)
 N PRSDT,PRSX,TCY,TSE,TSI,TSS
"RTN","PRSPLVU",125,0)
 ;
"RTN","PRSPLVU",126,0)
 K TC ; initialize array
"RTN","PRSPLVU",127,0)
 ;
"RTN","PRSPLVU",128,0)
 S PRSDT=$P($G(^PRST(458,PPI,1)),U,DAY)
"RTN","PRSPLVU",129,0)
 Q:'PRSDT
"RTN","PRSPLVU",130,0)
 ;
"RTN","PRSPLVU",131,0)
 S TCY=$G(^PRST(458,PPI,"E",PRSIEN,"D",DAY,2))
"RTN","PRSPLVU",132,0)
 ;
"RTN","PRSPLVU",133,0)
 ; loop thru seven tour segments
"RTN","PRSPLVU",134,0)
 F TSI=1:1:7 D
"RTN","PRSPLVU",135,0)
 . S TSS=$P(TCY,U,(TSI-1)*4+1) ; time segment start
"RTN","PRSPLVU",136,0)
 . Q:TSS=""
"RTN","PRSPLVU",137,0)
 . S TSE=$P(TCY,U,(TSI-1)*4+2) ; time segment end
"RTN","PRSPLVU",138,0)
 . Q:TSE=""
"RTN","PRSPLVU",139,0)
 . S TST=$P(TCY,U,(TSI-1)*4+3) ; time segment type of time
"RTN","PRSPLVU",140,0)
 . Q:TST=""
"RTN","PRSPLVU",141,0)
 . ; convert times to FileMan date/time format
"RTN","PRSPLVU",142,0)
 . S PRSX=$$CNVTS(PRSDT,TSS,TSE)
"RTN","PRSPLVU",143,0)
 . Q:$P(PRSX,U)=""
"RTN","PRSPLVU",144,0)
 . S TC(TSI)=$P(PRSX,U)_U_$P(PRSX,U,2)_U_TST_U_TSS_U_TSE
"RTN","PRSPLVU",145,0)
 Q
"RTN","PRSPLVU",146,0)
 ;
"RTN","PRSPLVU",147,0)
OKALVR(LVIEN) ; OK Approve Leave Request
"RTN","PRSPLVU",148,0)
 ; Called by Supervisory Approvals to see if it is OK to approve a
"RTN","PRSPLVU",149,0)
 ; leave request
"RTN","PRSPLVU",150,0)
 ; Input
"RTN","PRSPLVU",151,0)
 ;   LVIEN  - Leave Request IEN (file 458.1)
"RTN","PRSPLVU",152,0)
 ; Result
"RTN","PRSPLVU",153,0)
 ;   string value
"RTN","PRSPLVU",154,0)
 ;     = 1 if OK to approve leave request
"RTN","PRSPLVU",155,0)
 ;     = 0 or 0^PPI if not OK to approve leave request
"RTN","PRSPLVU",156,0)
 ;       where PPI is the Pay Period ien (file 458)
"RTN","PRSPLVU",157,0)
 ;
"RTN","PRSPLVU",158,0)
 N D1,DAY,EPP4Y,LVY0,PP4Y,PPE,PPI,PRSIEN,PRSRET,SPP4Y,Y
"RTN","PRSPLVU",159,0)
 ;
"RTN","PRSPLVU",160,0)
 S PRSRET=1 ; initialize as OK
"RTN","PRSPLVU",161,0)
 ;
"RTN","PRSPLVU",162,0)
 I '$G(LVIEN) S PRSRET=0 Q PRSRET ; required input
"RTN","PRSPLVU",163,0)
 ;
"RTN","PRSPLVU",164,0)
 S LVY0=$G(^PRST(458.1,LVIEN,0)) ; leave request 0 node
"RTN","PRSPLVU",165,0)
 S PRSIEN=$P(LVY0,U,2) ; employee IEN
"RTN","PRSPLVU",166,0)
 ;
"RTN","PRSPLVU",167,0)
 ; if employee has any memos
"RTN","PRSPLVU",168,0)
 I $$PTP^PRSPUT3(PRSIEN) D
"RTN","PRSPLVU",169,0)
 . ; determine starting and ending pay periods
"RTN","PRSPLVU",170,0)
 . S D1=$$FMADD^XLFDT($P(LVY0,U,3),-1) D PP^PRSAPPU S SPP4Y=PP4Y ; based on leave from -1 (use -1 in case of 2-day tour)
"RTN","PRSPLVU",171,0)
 . S D1=$P(LVY0,U,5) D PP^PRSAPPU S EPP4Y=PP4Y ; based on leave to
"RTN","PRSPLVU",172,0)
 . ;
"RTN","PRSPLVU",173,0)
 . ; loop thru pay periods
"RTN","PRSPLVU",174,0)
 . S PP4Y=$O(^PRST(458,"AB",SPP4Y),-1) ; set initial value to previous PP
"RTN","PRSPLVU",175,0)
 . F  S PP4Y=$O(^PRST(458,"AB",PP4Y)) Q:PP4Y=""!(PP4Y]EPP4Y)  D  Q:'PRSRET
"RTN","PRSPLVU",176,0)
 . . S PPI=$O(^PRST(458,"AB",PP4Y,0))
"RTN","PRSPLVU",177,0)
 . . ;
"RTN","PRSPLVU",178,0)
 . . ; skip PP if not covered by memo
"RTN","PRSPLVU",179,0)
 . . S D1=$P($G(^PRST(458,PPI,1)),U)
"RTN","PRSPLVU",180,0)
 . . Q:$$MIEN^PRSPUT1(PRSIEN,D1)'>0  ; PP not covered by memo
"RTN","PRSPLVU",181,0)
 . . ;
"RTN","PRSPLVU",182,0)
 . . ; skip PP if time card status not = payroll
"RTN","PRSPLVU",183,0)
 . . Q:$P($G(^PRST(458,PPI,"E",PRSIEN,0)),U,2)'="P"
"RTN","PRSPLVU",184,0)
 . . ;
"RTN","PRSPLVU",185,0)
 . . ; can't approve this leave request until time card status changes
"RTN","PRSPLVU",186,0)
 . . S PRSRET=0_U_PPI
"RTN","PRSPLVU",187,0)
 ;
"RTN","PRSPLVU",188,0)
 Q PRSRET
"RTN","PRSPLVU",189,0)
 ;
"RTN","PRSPLVU",190,0)
CNVTS(DATE,START,END) ; Convert Time Segment
"RTN","PRSPLVU",191,0)
 ; input
"RTN","PRSPLVU",192,0)
 ; returns string with value =
"RTN","PRSPLVU",193,0)
 ;   Start Date/Time (FileMan internal)^End Date/Time (FileMan internal)
"RTN","PRSPLVU",194,0)
 ;
"RTN","PRSPLVU",195,0)
 N CNX,FMEND,FMSTR,PRSM,PRSRET,X,XMID,Y
"RTN","PRSPLVU",196,0)
 S X=START_U_END
"RTN","PRSPLVU",197,0)
 D CNV^PRSATIM
"RTN","PRSPLVU",198,0)
 S PRSM=Y
"RTN","PRSPLVU",199,0)
 S XMID=$S($P(PRSM,U,2)'>$P(PRSM,U):1,1:0)
"RTN","PRSPLVU",200,0)
 S FMSTR=$$FMADD^XLFDT(DATE,,,$P(PRSM,U))
"RTN","PRSPLVU",201,0)
 S FMEND=$$FMADD^XLFDT(DATE,XMID,,$P(PRSM,U,2))
"RTN","PRSPLVU",202,0)
 S PRSRET=FMSTR_"^"_FMEND
"RTN","PRSPLVU",203,0)
 ;
"RTN","PRSPLVU",204,0)
 Q PRSRET
"RTN","PRSPLVU",205,0)
 ;
"RTN","PRSPLVU",206,0)
FMETA(TIME) ; FileMan to ETA time
"RTN","PRSPLVU",207,0)
 N HRS,MIN,PM,PRSRET
"RTN","PRSPLVU",208,0)
 S PRSRET=""
"RTN","PRSPLVU",209,0)
 S TIME=$$LJ^XLFSTR(TIME,4,"0") ; add trailing 0s to fileman time
"RTN","PRSPLVU",210,0)
 I TIME=1200 S PRSRET="NOON"
"RTN","PRSPLVU",211,0)
 I TIME=2400 S PRSRET="MID"
"RTN","PRSPLVU",212,0)
 I PRSRET="" D
"RTN","PRSPLVU",213,0)
 . S PM=0
"RTN","PRSPLVU",214,0)
 . S HRS=$E(TIME,1,2)
"RTN","PRSPLVU",215,0)
 . S MIN=$E(TIME,3,4)
"RTN","PRSPLVU",216,0)
 . I HRS>12 S HRS=HRS-12,PM=1
"RTN","PRSPLVU",217,0)
 . S PRSRET=$$RJ^XLFSTR(HRS,2,"0")_":"_$$RJ^XLFSTR(MIN,2,"0")_$S(PM:"P",1:"A")
"RTN","PRSPLVU",218,0)
 Q PRSRET
"RTN","PRSPLVU",219,0)
 ;PRSPLVU
"RTN","PRSRTLPR")
0^57^B14710539^B14746144
"RTN","PRSRTLPR",1,0)
PRSRTLPR ;HISC/JH-DISPLAY/PRINT SUP.,TIMEKEPPER,OT SUP. ;5/8/95
"RTN","PRSRTLPR",2,0)
 ;;4.0;PAID;**2,6,10,16,17,126**;Sep 21, 1995;Build 59
"RTN","PRSRTLPR",3,0)
FIS S PRSR=2,PRSTLV=3
"RTN","PRSRTLPR",4,0)
 ;
"RTN","PRSRTLPR",5,0)
 ;Time&Leave selection. Return TLE array populated with info about
"RTN","PRSRTLPR",6,0)
 ;the T&L unit the user selected.
"RTN","PRSRTLPR",7,0)
 D TLESEL^PRSRUT0 G Q:$G(TLE)=""!(SSN="") W ! S SW=$S(TLE>1:1,1:0)
"RTN","PRSRTLPR",8,0)
 S ZTRTN="START^PRSRTLPR",ZTDESC="TIMEKEEPER,SUP.,O/T SUP. REPORT" D ST^PRSRUTL,LOOP,QUE1^PRSRUT0 G Q1:POP!($D(ZTSK))
"RTN","PRSRTLPR",9,0)
 ;
"RTN","PRSRTLPR",10,0)
START K ^TMP($J,"TLPR")
"RTN","PRSRTLPR",11,0)
 S ^TMP($J,"TLPR")="P A I D  T & L  R E P O R T",(CNT,POUT)=0
"RTN","PRSRTLPR",12,0)
 ;
"RTN","PRSRTLPR",13,0)
 ;set up the TMP global with timekeepers, supervisors, approvers 
"RTN","PRSRTLPR",14,0)
 ;on nodes 1,2,3 respectively.  Outer loop controls separate T&L units
"RTN","PRSRTLPR",15,0)
 S J=0 F II=0:0 S J=$O(TLE(J)) Q:J'>0  D
"RTN","PRSRTLPR",16,0)
 .  S DA(1)=$P(TLE(J),U) Q:DA(1)=""  S DA(2)=$P(TLE(J),U,2) D SORT
"RTN","PRSRTLPR",17,0)
 S DAT=$E(DT,4,5)_"/"_$E(DT,6,7)_"/"_$E(DT,2,3) U IO D HDR1
"RTN","PRSRTLPR",18,0)
 I 'CNT W !,"|",?10,"No Timekeepers, Supervisors or O/T Supervisors on file.",?79,"|" S POUT=1 D NONE
"RTN","PRSRTLPR",19,0)
 G Q1:POUT
"RTN","PRSRTLPR",20,0)
 S CNT=1,(HOLD,TLE)=""
"RTN","PRSRTLPR",21,0)
 ;
"RTN","PRSRTLPR",22,0)
 ; PRINT out each T&L unit
"RTN","PRSRTLPR",23,0)
 F I=0:0 S TLE=$O(^TMP($J,"TLPR",TLE)) Q:TLE=""  D  Q:POUT
"RTN","PRSRTLPR",24,0)
 .;  Get one of each job function to print horizontally.
"RTN","PRSRTLPR",25,0)
 .;  quit if all three job function nodes are exhausted.
"RTN","PRSRTLPR",26,0)
 .  F II=1:1 S MORE=$$GETNEXT(.TMK,.SUP,.OTA,II)  D  Q:'MORE!(POUT)
"RTN","PRSRTLPR",27,0)
 ..  S NAM(1)=$S($P(TMK,U)'="":$E($P($G(^VA(200,$P(TMK,U),0)),U),1,22),1:"")
"RTN","PRSRTLPR",28,0)
 ..  S NAM(2)=$S($P(SUP,U)'="":$E($P($G(^VA(200,$P(SUP,U),0)),U),1,22),1:"")
"RTN","PRSRTLPR",29,0)
 ..  S NAM(3)=$S($P(OTA,U)'="":$E($P($G(^VA(200,$P(OTA,U),0)),U),1,22),1:"")
"RTN","PRSRTLPR",30,0)
 ..  D:$Y>(IOSL-5) HDR Q:POUT  W !,"|",$S(TLE'=HOLD:TLE,1:""),?5,"|",$S(NAM(1)'="":NAM(1),1:""),?28,"|",$S(NAM(2)'="":NAM(2),1:""),?52,$P(SUP,U,2),?56,"|",$S(NAM(3)'="":NAM(3),1:""),?79,"|"
"RTN","PRSRTLPR",31,0)
 ..  S HOLD=TLE,CNT=CNT+2 Q
"RTN","PRSRTLPR",32,0)
 .  D:'POUT VLIN0 S CNT=1 Q
"RTN","PRSRTLPR",33,0)
 I IOSL<66 F I=$Y:1:IOSL-5 D VLIN0
"RTN","PRSRTLPR",34,0)
 G Q1:POUT I CNT D VLIN1 S CODE="T001",FOOT="VA TIME & ATTENDANCE SYSTEM" D FOOT2^PRSRUT0
"RTN","PRSRTLPR",35,0)
Q I $E(IOST)="C" R !!,"Press Return/Enter to continue. ",X:DTIME
"RTN","PRSRTLPR",36,0)
Q1 K ANT,CNT,COD,CODE,D0,DA,DAT,DIC,FOOT,HOLD,I,II,J,POP,POUT,PRSR,PRSTLV,NAM,SNT,SSN,SW,TL,TLA,TLE,TLI,TLS,TNT,TLT,TLUNIT,X,Y,Z1,ZTDESC,ZTRTN,ZTSAVE,^TMP($J,"TLPR") D ^%ZISC S:$D(ZTSK) ZTREQ="@" K ZTSK
"RTN","PRSRTLPR",37,0)
 Q
"RTN","PRSRTLPR",38,0)
GETNEXT(TK,SV,OT,NODE) ;
"RTN","PRSRTLPR",39,0)
 ;get the next timekeeper, supervisor, and OT/CT approver
"RTN","PRSRTLPR",40,0)
 S RTN=1
"RTN","PRSRTLPR",41,0)
 S TK=$G(^TMP($J,"TLPR",TLE,1,NODE))
"RTN","PRSRTLPR",42,0)
 S SV=$G(^TMP($J,"TLPR",TLE,2,NODE))
"RTN","PRSRTLPR",43,0)
 S OT=$G(^TMP($J,"TLPR",TLE,3,NODE))
"RTN","PRSRTLPR",44,0)
 I TK=""&(SV="")&(OT="") S RTN=0
"RTN","PRSRTLPR",45,0)
 Q RTN
"RTN","PRSRTLPR",46,0)
SORT ;modified by John Heiges patch 17.
"RTN","PRSRTLPR",47,0)
 N J,JFN,NEXT
"RTN","PRSRTLPR",48,0)
 ;  loop thru job function multiples (timekeep, supervr & OT/CT)
"RTN","PRSRTLPR",49,0)
 ;  and store in ^TMP($J,
"RTN","PRSRTLPR",50,0)
 ;  JFN = job function node
"RTN","PRSRTLPR",51,0)
 ;    timekeepers->node 1, supervisors->node 2, ot/ct approvers->node 3
"RTN","PRSRTLPR",52,0)
 ;  DA(1)= T&L unit #
"RTN","PRSRTLPR",53,0)
 ;  DA = T&L unit internal entry #
"RTN","PRSRTLPR",54,0)
 ;
"RTN","PRSRTLPR",55,0)
 ;  get ien of T&L unit
"RTN","PRSRTLPR",56,0)
 S DA="" S DA=$O(^PRST(455.5,"B",DA(1),DA)) Q:DA'>0
"RTN","PRSRTLPR",57,0)
 ;
"RTN","PRSRTLPR",58,0)
 ;  loop thru each job function multiple
"RTN","PRSRTLPR",59,0)
 F COD="A","S","T" I $D(^PRST(455.5,DA,COD)) D
"RTN","PRSRTLPR",60,0)
 . S JFN=$S(COD="T":1,COD="S":2,COD="A":3,1:0)
"RTN","PRSRTLPR",61,0)
 . S D0=0
"RTN","PRSRTLPR",62,0)
 . F NEXT=1:1 S D0=$O(^PRST(455.5,DA,COD,D0)) Q:D0'>0  D
"RTN","PRSRTLPR",63,0)
 .. S TL=$P($G(^PRST(455.5,DA,COD,D0,0)),U,2)
"RTN","PRSRTLPR",64,0)
 .. S ^TMP($J,"TLPR",DA(1),JFN,NEXT)=D0_U_TL
"RTN","PRSRTLPR",65,0)
 .. S CNT=1
"RTN","PRSRTLPR",66,0)
 .. Q
"RTN","PRSRTLPR",67,0)
 . Q
"RTN","PRSRTLPR",68,0)
 Q
"RTN","PRSRTLPR",69,0)
NONE I IOSL<66 F I=$Y:1:IOSL-5 D VLIN0
"RTN","PRSRTLPR",70,0)
 D HDR
"RTN","PRSRTLPR",71,0)
 Q
"RTN","PRSRTLPR",72,0)
HDR D VLIN1 S CODE="T001",FOOT="VA TIME & ATTENDANCE SYSTEM" D FOOT2^PRSRUT0
"RTN","PRSRTLPR",73,0)
 I $E(IOST)="C" R !,"Press Return/Enter to continue. ",X:DTIME S:'$T!(X="^")!($G(NAM(1))=""&($G(NAM(2))=""&($G(NAM(3))=""))) POUT=1
"RTN","PRSRTLPR",74,0)
 Q:POUT
"RTN","PRSRTLPR",75,0)
HDR1 W:$E(IOST)="C" @IOF W !?26,^TMP($J,"TLPR"),?66,"DATE: ",DAT,!
"RTN","PRSRTLPR",76,0)
 W !,"|",?5,"|",?28,"|",?52,"CERT",?56,"|",?79,"|"
"RTN","PRSRTLPR",77,0)
 W !,"|","T&L",?5,"|","TIMEKEEPER",?28,"|","SUPERVISOR",?52,"T&L",?56,"|","O/T SUPERVISOR",?79,"|" D VLIN1 Q
"RTN","PRSRTLPR",78,0)
VLIN0 W !,"|",?5,"|",?28,"|",?56,"|",?79,"|" Q
"RTN","PRSRTLPR",79,0)
VLIN1 W !,"|----|----------------------|---------------------------|----------------------|" Q
"RTN","PRSRTLPR",80,0)
LOOP F X="TLE*","SW" S ZTSAVE(X)=""
"RTN","PRSRTLPR",81,0)
 Q
"RTN","PRSU1A")
0^39^B13822383^n/a
"RTN","PRSU1A",1,0)
PRSU1A ;WOIFO/PLT-General Questions Utility ; 24-Aug-2005 10:34 AM
"RTN","PRSU1A",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSU1A",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSU1A",4,0)
 QUIT  ;invalid entry
"RTN","PRSU1A",5,0)
 ;the followoings are DIR calls for data type D,E,F,L,N,P,S,Y,#,#
"RTN","PRSU1A",6,0)
 ; D-date, E-end of page, F-free-text, L-list or range, N-numeric
"RTN","PRSU1A",7,0)
 ; P- pointer, S-set of codes, Y-yes/no, #,#- dd data dictionary
"RTN","PRSU1A",8,0)
 ;A for DIR("A") - prompt text.
"RTN","PRSU1A",9,0)
 ;B for DIR(0) 2nd character to end - input modifiers^[parameters]^[transform.]
"RTN","PRSU1A",10,0)
 ; modifiers     A: prompt not appended, O: response optional
"RTN","PRSU1A",11,0)
 ;               r: no replace-with for the defalut response
"RTN","PRSU1A",12,0)
 ; set of codes  B: code listed horizontally, X: exact match
"RTN","PRSU1A",13,0)
 ; free text     U: if '^' allowed in free text
"RTN","PRSU1A",14,0)
 ; list or range C: compress y array, not y-array returned
"RTN","PRSU1A",15,0)
 ;C for DIR("B") - default response
"RTN","PRSU1A",16,0)
 ;.x(1...) for DIR("A") prompt array or value returned
"RTN","PRSU1A",17,0)
 ;.y(1...) for DIR("?") array or value returned 
"RTN","PRSU1A",18,0)
 ;
"RTN","PRSU1A",19,0)
 ;date
"RTN","PRSU1A",20,0)
 ;B is ^1=A,O or "", ^2=mini date:maximum date, ^3=mumps code
"RTN","PRSU1A",21,0)
DT(X,Y,A,B,C) N DIR,D S DIR(0)="D"_B,DIR("A")=A S:$G(C)]"" DIR("B")=C
"RTN","PRSU1A",22,0)
 S DIR("?")="Enter a date",D=$P(B,U,2,3)
"RTN","PRSU1A",23,0)
 I $P(D,":")]"" S Y=$P(D,":") D DD^%DT S Y=$S($P(D,":",2)]"":" between ",1:" after ")_Y,DIR("?")=DIR("?")_Y
"RTN","PRSU1A",24,0)
 I $P(D,":",2)]"" S Y=$P(B,":",2) D DD^%DT S Y=$S($P(D,":",1)="":" before ",1:" and ")_Y,DIR("?")=DIR("?")_Y
"RTN","PRSU1A",25,0)
 D DIRA:$D(X(1)),DIRQ:$D(Y(1)),^DIR I $D(DTOUT)!$D(DUOUT)!$D(DIROUT) S Y="^" K DTOUT,DUOUT,DIROUT
"RTN","PRSU1A",26,0)
 QUIT
"RTN","PRSU1A",27,0)
 ;
"RTN","PRSU1A",28,0)
 ;end of page
"RTN","PRSU1A",29,0)
 ;B is ^1= A or "", ^2="", ^3=""
"RTN","PRSU1A",30,0)
EOP(X,Y,A,B,C) N DIR S DIR(0)="E"_B S:A]"" DIR("A")=A S:$G(C)]"" DIR("B")=C
"RTN","PRSU1A",31,0)
 S DIR("?")="Enter 'return' to continue or '^' to exit."
"RTN","PRSU1A",32,0)
 D DIRA:$D(X(1)),DIRQ:$D(Y(1)),^DIR I $D(DTOUT)!$D(DUOUT)!$D(DIROUT) S Y="^" K DTOUT,DUOUT,DIROUT
"RTN","PRSU1A",33,0)
 QUIT
"RTN","PRSU1A",34,0)
 ;
"RTN","PRSU1A",35,0)
 ;free text
"RTN","PRSU1A",36,0)
 ;B is ^1=A,O,U, ^2=minimum legth:maximum length, ^3=mumps code
"RTN","PRSU1A",37,0)
FT(X,Y,A,B,C) N DIR S DIR(0)="F"_B S:A]"" DIR("A")=A S:$G(C)]"" DIR("B")=C
"RTN","PRSU1A",38,0)
 D DIRA:$D(X(1)),DIRQ:$D(Y(1)),^DIR I $D(DTOUT)!$D(DUOUT)!$D(DIROUT) S Y="^" K DTOUT,DUOUT,DIROUT
"RTN","PRSU1A",39,0)
 QUIT
"RTN","PRSU1A",40,0)
 ;
"RTN","PRSU1A",41,0)
 ;list of range
"RTN","PRSU1A",42,0)
 ;B is ^1=A,O or "", ^2=mini value:maxi value, ^3=mumps code
"RTN","PRSU1A",43,0)
LR(X,Y,A,B,C) N DIR S DIR(0)="L"_B S:A]"" DIR("A")=A S:$G(C)]"" DIR("B")=C
"RTN","PRSU1A",44,0)
 D DIRA:$D(X(1)),DIRQ:$D(Y(1)),^DIR I $D(DTOUT)!$D(DUOUT)!$D(DIROUT) S Y="^" K DTOUT,DUOUT,DIROUT
"RTN","PRSU1A",45,0)
 QUIT
"RTN","PRSU1A",46,0)
 ;
"RTN","PRSU1A",47,0)
 ;numeric
"RTN","PRSU1A",48,0)
 ;B is ^1=A,O or "", ^2=mini value:maxi value:maxi decimals, ^3=mumps code
"RTN","PRSU1A",49,0)
NUM(X,Y,A,B,C) N DIR S DIR(0)="N"_B S:A]"" DIR("A")=A S:$G(C)]"" DIR("B")=C
"RTN","PRSU1A",50,0)
 D DIRA:$D(X(1)),DIRQ:$D(Y(1)),^DIR I $D(DTOUT)!$D(DUOUT)!$D(DIROUT) S Y="^" K DTOUT,DUOUT,DIROUT
"RTN","PRSU1A",51,0)
 QUIT
"RTN","PRSU1A",52,0)
 ;
"RTN","PRSU1A",53,0)
 ;pointer
"RTN","PRSU1A",54,0)
 ;B is ^1=A,O or "", ^2=file #/subfile root:dic(0) data, ^3=mumps code
"RTN","PRSU1A",55,0)
PTR(X,Y,A,B,C) N DIR S DIR(0)="P"_B S:A]"" DIR("A")=A S:$G(C)]"" DIR("B")=C
"RTN","PRSU1A",56,0)
 D DIRA:$D(X(1)),DIRQ:$D(Y(1)),^DIR I $D(DTOUT)!$D(DUOUT)!$D(DIROUT) S Y="^" K DTOUT,DUOUT,DIROUT
"RTN","PRSU1A",57,0)
 QUIT
"RTN","PRSU1A",58,0)
 ;
"RTN","PRSU1A",59,0)
 ;set of codes
"RTN","PRSU1A",60,0)
 ;B is ^1=A,O,X,B, or M, ^2=code:description;code:description;..., ^3=mumps code
"RTN","PRSU1A",61,0)
SC(X,Y,A,B,C) N DIR S DIR(0)="S"_B S:A]"" DIR("A")=A S:$G(C)]"" DIR("B")=C
"RTN","PRSU1A",62,0)
 D DIRA:$D(X(1)),DIRQ:$D(Y(1)),^DIR I $D(DTOUT)!$D(DUOUT)!$D(DIROUT) S Y="^" K DTOUT,DUOUT,DIROUT
"RTN","PRSU1A",63,0)
 QUIT
"RTN","PRSU1A",64,0)
 ;
"RTN","PRSU1A",65,0)
 ;yes/no
"RTN","PRSU1A",66,0)
 ;B is ^1=A,O or "", ^2="", ^3=""
"RTN","PRSU1A",67,0)
YN(X,Y,A,B,C) N DIR S DIR(0)="Y"_B S:A]"" DIR("A")=A S:$G(C)]"" DIR("B")=C
"RTN","PRSU1A",68,0)
 S DIR("?")="Enter 'Y' for yes, 'N' for no."
"RTN","PRSU1A",69,0)
 D DIRA:$D(X(1)),DIRQ:$D(Y(1)),^DIR I $D(DTOUT)!$D(DUOUT)!$D(DIROUT) S Y="^" K DTOUT,DUOUT,DIROUT
"RTN","PRSU1A",70,0)
 QUIT
"RTN","PRSU1A",71,0)
 ;
"RTN","PRSU1A",72,0)
 ;data field definition
"RTN","PRSU1A",73,0)
 ;B is ^1=(sub)file number,field numberAO, ^2="", ^3=""
"RTN","PRSU1A",74,0)
DD(X,Y,A,B,C) N DIR S DIR(0)=B S:A]"" DIR("A")=A S:$G(C)]"" DIR("B")=C
"RTN","PRSU1A",75,0)
 D DIRA:$D(X(1)),DIRQ:$D(Y(1)),^DIR I $D(DTOUT)!$D(DUOUT)!$D(DIROUT) S Y="^" K DTOUT,DUOUT,DIROUT
"RTN","PRSU1A",76,0)
 QUIT
"RTN","PRSU1A",77,0)
 ;
"RTN","PRSU1A",78,0)
DIRA N A S A=0 F  S A=$O(X(A)) Q:A=""  S DIR("A",A)=X(A)
"RTN","PRSU1A",79,0)
 K X
"RTN","PRSU1A",80,0)
 QUIT
"RTN","PRSU1A",81,0)
DIRQ N A F A=1:1 Q:'$D(Y(A))  S DIR("?",A)=Y(A)
"RTN","PRSU1A",82,0)
 S DIR("?")=Y(A-1) K DIR("?",A-1)
"RTN","PRSU1A",83,0)
 K Y
"RTN","PRSU1A",84,0)
 QUIT
"RTN","PRSU1A",85,0)
 ;
"RTN","PRSU1A",86,0)
 ;.x user typed value
"RTN","PRSU1A",87,0)
 ;.y=-1 if invalid, cyymmdd.hhmmss
"RTN","PRSU1A",88,0)
 ;A=prompt text
"RTN","PRSU1A",89,0)
 ;B=^1:default value (external form), ^2=[-]fm date, [before]after date
"RTN","PRSU1A",90,0)
 ;C=string of AEFNPRST, any combination
"RTN","PRSU1A",91,0)
 ;  A for ask, E for echo
"RTN","PRSU1A",92,0)
 ;  F for future assumed, N for pure num not allowed
"RTN","PRSU1A",93,0)
 ;  P for past assumed, R time required
"RTN","PRSU1A",94,0)
 ;  S seconds required, T time is optional
"RTN","PRSU1A",95,0)
 ;D= Y if year only, YM if year and month only, YMD if date[@time] only
"RTN","PRSU1A",96,0)
YMDT(X,Y,A,B,C,D) ;reader for year/month/date/time
"RTN","PRSU1A",97,0)
 N %DT,DTOUT
"RTN","PRSU1A",98,0)
YMDT1 S %DT("A")=A,%DT("B")=$P(B,"^") S:$P(B,"^",2)]"" %DT(0)=$P(B,"^",2)
"RTN","PRSU1A",99,0)
 S %DT=C S:$G(D)="YMD" %DT=%DT_"X"
"RTN","PRSU1A",100,0)
 D ^%DT
"RTN","PRSU1A",101,0)
 I Y'=-1,$G(D)="Y",Y#10000'=0 W "   Enter year only!" G YMDT1
"RTN","PRSU1A",102,0)
 I Y'=-1,$G(D)="YM",Y#100'=0 W "   Enter month and year only!" G YMDT1
"RTN","PRSU1A",103,0)
 QUIT
"RTN","PRSU1B")
0^40^B11305691^n/a
"RTN","PRSU1B",1,0)
PRSU1B ;WOIFO/PLT-UTILITY ; 24-Aug-2005 10:34 AM
"RTN","PRSU1B",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSU1B",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSU1B",4,0)
 QUIT  ; invalid entry
"RTN","PRSU1B",5,0)
 ;
"RTN","PRSU1B",6,0)
 ;prsa = ~1 file number;file root;file record id;field # of multiple for adding
"RTN","PRSU1B",7,0)
 ;       ~2 subfile number;subfile root (required if subfile);subfile RI;field # of multiple for adding
"RTN","PRSU1B",8,0)
 ;       ~...
"RTN","PRSU1B",9,0)
 ;prsb data ~1=ABCEFIKLMNnOQSTUVXZ any combination
"RTN","PRSU1B",10,0)
 ;A:ask entry, B:B index only when .01 is pointer, C:display same enty more than one time
"RTN","PRSU1B",11,0)
 ;E:echo back for user interactive mode, F:not save in disv for reuse
"RTN","PRSU1B",12,0)
 ;I:ignore special look-up routine, K:use uniqueness key index, L:add new entry
"RTN","PRSU1B",13,0)
 ;M:use all indices, N:use ien to lookup if no matches, n:include numeric in free text field
"RTN","PRSU1B",14,0)
 ;O:exact match search first, partial second for all indices
"RTN","PRSU1B",15,0)
 ;Q:error with ??, S:suppress disply if one match found
"RTN","PRSU1B",16,0)
 ;T:continue all search results until '^' entered, U: use interanl format value search 
"RTN","PRSU1B",17,0)
 ;V:ask ok if 1 match found, X:exact match
"RTN","PRSU1B",18,0)
 ;Z:zero node y(0) and external format y(0,0) returned
"RTN","PRSU1B",19,0)
 ;  ~2=DINUM (option), ~3=SPECIFIED INDEICES
"RTN","PRSU1B",20,0)
 ;prsc = select prompt text (optional)
"RTN","PRSU1B",21,0)
 ;.x = dir array for lookup specification (optional) and value returned
"RTN","PRSU1B",22,0)
 ;.y = value returned from ^dic
"RTN","PRSU1B",23,0)
LOOKUP(X,Y,PRSA,PRSB,PRSC) ;entry look-up
"RTN","PRSU1B",24,0)
 N %,%Y,DG,DISYS,DIC,DLAYGO,DUPUT,DTOUT,DA,A,B,C,D,I
"RTN","PRSU1B",25,0)
 S:PRSA'?.E1"~" PRSA=PRSA_"~" S A=$L(PRSA,"~")-1
"RTN","PRSU1B",26,0)
 I A>1 F B=1:1:A-1 S C=$P(PRSA,"~",B),DA(A-B)=$P(C,";",3)
"RTN","PRSU1B",27,0)
 S B=$P(PRSA,"~",A),DIC=$P(B,";",2)  S:DIC=""&(A=1) DIC=+B
"RTN","PRSU1B",28,0)
 I $D(X)\10 F A=0,"A","B","S","W","DR","P" S:$D(X(A)) DIC(A)=X(A) K X(A)
"RTN","PRSU1B",29,0)
 S:$D(PRSC) DIC("A")=PRSC
"RTN","PRSU1B",30,0)
 S:'$D(DIC(0)) DIC(0)=$P(PRSB,"~") S:DIC(0)["L" DLAYGO=PRSA
"RTN","PRSU1B",31,0)
 S:$P(PRSB,"~",2)?1.N DINUM=$P(PRSB,"~",2)
"RTN","PRSU1B",32,0)
 S DA="",D=$P(PRSB,"~",3) I D="" D ^DIC I 1
"RTN","PRSU1B",33,0)
 E  D MIX^DIC1
"RTN","PRSU1B",34,0)
 QUIT
"RTN","PRSU1B",35,0)
 ;
"RTN","PRSU1B",36,0)
 ;prsa = ~1 file number;file root (required if prsc["L");file record id
"RTN","PRSU1B",37,0)
 ;       ~2 subfile number (option);subfile root;subfile RI
"RTN","PRSU1B",38,0)
 ;       ~...
"RTN","PRSU1B",39,0)
 ;prsb = editing fields string DR if not in x-array (optional)
"RTN","PRSU1B",40,0)
 ;prsc = string; '^' abort not allowed if ["^", lock/unlock if ["L"
"RTN","PRSU1B",41,0)
 ;          single lock/unlock if ["LS"
"RTN","PRSU1B",42,0)
 ;.x = editing filed string DR array or value returned
"RTN","PRSU1B",43,0)
 ;   = value returned 0 if deleted, -1 if abort with '^'
"RTN","PRSU1B",44,0)
 ;                    1 if normal exit, -2 if lock fail
"RTN","PRSU1B",45,0)
EDIT(X,PRSA,PRSB,PRSC) ;edit entry in file
"RTN","PRSU1B",46,0)
 N %,%Y,D0,D1,DDH,DISYS,DLAYGO,DQ
"RTN","PRSU1B",47,0)
 N DI,DIE,DIC,DIS,DA,DR,PRSLOCK,A,B,C,D,Y
"RTN","PRSU1B",48,0)
 S:PRSA'?.E1"~" PRSA=PRSA_"~" S PRSC=$G(PRSC),A=$L(PRSA,"~")-1,PRSLOCK=""
"RTN","PRSU1B",49,0)
 I A>1 F B=1:1:A-1 S C=$P(PRSA,"~",B),DA(A-B)=$P(C,";",3)
"RTN","PRSU1B",50,0)
 S B=$P(PRSA,"~",A),DIE=$P(B,";",2),DA=$P(B,";",3) S:PRSC["L" PRSLOCK=DIE_$S(PRSC["LS":DA_",",1:"")
"RTN","PRSU1B",51,0)
 S:DIE=""&(A=1) DIE=+B
"RTN","PRSU1B",52,0)
 S DR=$G(PRSB) S:PRSC["^" DIE("NO^")=""
"RTN","PRSU1B",53,0)
 I DR="" S %X="X(",%Y="DR(",DR=X D %XY^%RCR K X
"RTN","PRSU1B",54,0)
 K X I PRSLOCK]"" S Y=3 D ICLOCK(PRSLOCK,.Y) I 'Y S X=-2 QUIT
"RTN","PRSU1B",55,0)
 D ^DIE,DCLOCK(PRSLOCK):PRSLOCK]""
"RTN","PRSU1B",56,0)
 S X=$S('$D(DA):0,$D(Y)=0:1,1:-1)
"RTN","PRSU1B",57,0)
 QUIT
"RTN","PRSU1B",58,0)
 ;
"RTN","PRSU1B",59,0)
 ;prsa = ~1 file number;file root (option);file record id
"RTN","PRSU1B",60,0)
 ;       ~2 subfile number;subfile root (option);subfile RI
"RTN","PRSU1B",61,0)
 ;       ~...
"RTN","PRSU1B",62,0)
 ;prsb = ~1 field#;field#;...
"RTN","PRSU1B",63,0)
 ;       ~2 subfield #;subfield #;...
"RTN","PRSU1B",64,0)
 ;       ~...
"RTN","PRSU1B",65,0)
 ;prsc = string of characters I, E. (no N) (required)
"RTN","PRSU1B",66,0)
 ;prsd = local array name returned, it cann't be %,X,Y
"RTN","PRSU1B",67,0)
 ;        PRSA,PRSB,PRSD,PRSD,PRSE,PRSF
"RTN","PRSU1B",68,0)
 ;     @prsd(file#,record id,field #,"E")=external value
"RTN","PRSU1B",69,0)
 ;     @prsd(file#,record id,field #,"I")=internal value
"RTN","PRSU1B",70,0)
PIECE(PRSA,PRSB,PRSC,PRSD) ;get piece data
"RTN","PRSU1B",71,0)
 N D0,DIC,DR,DA,DIQ,PRSE,PRSF,DI
"RTN","PRSU1B",72,0)
 S PRSE=$P(PRSA,"~"),DIC=+PRSE,DA=$P(PRSE,";",3),DR=$P(PRSB,"~")
"RTN","PRSU1B",73,0)
 F PRSF=2:1 Q:$P(PRSA,"~",PRSF)=""  S PRSE=$P(PRSA,"~",PRSF),DA(+PRSE)=$P(PRSE,";",3),DR(+PRSE)=$P(PRSB,"~",PRSF)
"RTN","PRSU1B",74,0)
 S DIQ=PRSD,DIQ(0)=PRSC_"N"
"RTN","PRSU1B",75,0)
 D EN^DIQ1
"RTN","PRSU1B",76,0)
 QUIT
"RTN","PRSU1B",77,0)
 ;
"RTN","PRSU1B",78,0)
 ;prsa = (sub)file node root
"RTN","PRSU1B",79,0)
 ;prsb = node value
"RTN","PRSU1B",80,0)
NODE(PRSA,PRSB) ;get node
"RTN","PRSU1B",81,0)
 N PRSC
"RTN","PRSU1B",82,0)
 S @("PRSC=$G("_PRSA_"PRSB))")
"RTN","PRSU1B",83,0)
 QUIT PRSC
"RTN","PRSU1B",84,0)
 ;
"RTN","PRSU1B",85,0)
 ;prsc is piece #
"RTN","PRSU1B",86,0)
NP(PRSA,PRSB,PRSC) ;get node and piece
"RTN","PRSU1B",87,0)
 N PRSD
"RTN","PRSU1B",88,0)
 S @("PRSD=$P($G("_PRSA_"PRSB)),""^"",PRSC)")
"RTN","PRSU1B",89,0)
 QUIT PRSD
"RTN","PRSU1B",90,0)
 ;
"RTN","PRSU1B",91,0)
 ;
"RTN","PRSU1B",92,0)
 ;
"RTN","PRSU1B",93,0)
 ;prslock array used to store lock history
"RTN","PRSU1B",94,0)
ICLOCK(A,B) ;incremental lock with time (optional)
"RTN","PRSU1B",95,0)
 ;  a = global root ending with ',' or '('
"RTN","PRSU1B",96,0)
 ; .b = time lock seconds and value returned; false if lock fail
"RTN","PRSU1B",97,0)
 S A=$E(A,1,$L(A)-1) I A["(" S A=A_")"
"RTN","PRSU1B",98,0)
 I $D(B) L +@(A):B S B=$T E  QUIT
"RTN","PRSU1B",99,0)
 S PRSLOCK(A)=$G(PRSLOCK(A))+1
"RTN","PRSU1B",100,0)
 I '$D(B) S B=99999999 L +@(A):B
"RTN","PRSU1B",101,0)
 QUIT
"RTN","PRSU1B",102,0)
 ;
"RTN","PRSU1B",103,0)
DCLOCK(A) ;decremental unlock a from prslock array of locking history
"RTN","PRSU1B",104,0)
 ;  a = global root ending with ',' or '('
"RTN","PRSU1B",105,0)
 S A=$E(A,1,$L(A)-1) I A["(" S A=A_")"
"RTN","PRSU1B",106,0)
 L -@(A) S PRSLOCK(A)=$G(PRSLOCK(A))-1 K:PRSLOCK(A)<1 PRSLOCK(A)
"RTN","PRSU1B",107,0)
 QUIT
"RTN","PRSU1B",108,0)
 ;
"RTN","PRSU1B",109,0)
UNLOCK(A) ;unlock a file (to decremental to 0) in prslock(a)
"RTN","PRSU1B",110,0)
 ;  a = global root ending with ',' or '('
"RTN","PRSU1B",111,0)
 S A=$E(A,1,$L(A)-1) I A["(" S A=A_")"
"RTN","PRSU1B",112,0)
 F  Q:$G(PRSLOCK(A))<1  L -@(A) S PRSLOCK(A)=$G(PRSLOCK(A))-1
"RTN","PRSU1B",113,0)
 K PRSLOCK(A)
"RTN","PRSU1B",114,0)
 QUIT
"RTN","PRSU1B",115,0)
 ;
"RTN","PRSU1B",116,0)
UNLKALL ;unlock all files in prslock array
"RTN","PRSU1B",117,0)
 N A
"RTN","PRSU1B",118,0)
 S A="" F  S A=$O(PRSLOCK(A)) Q:A=""  F  Q:$G(PRSLOCK(A))<1  L -@(A) S PRSLOCK(A)=$G(PRSLOCK(A))-1
"RTN","PRSU1B",119,0)
 K PRSLOCK
"RTN","PRSU1B",120,0)
 QUIT
"RTN","PRSU1B",121,0)
 ;
"RTN","PRSU1B1")
0^41^B2203162^n/a
"RTN","PRSU1B1",1,0)
PRSU1B1 ;WOIFO/PLT-UTILITY ; 24-Aug-2005 10:34 AM
"RTN","PRSU1B1",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSU1B1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSU1B1",4,0)
 QUIT  ; invalid entry
"RTN","PRSU1B1",5,0)
 ;
"RTN","PRSU1B1",6,0)
 ;prsa=~1 file number (required);file root;file record id;field # of multiple for adding
"RTN","PRSU1B1",7,0)
 ;     ~2 subfile number;subfile root (required);subfile RI;field # of multiple for adding
"RTN","PRSU1B1",8,0)
 ;     ~3 ...
"RTN","PRSU1B1",9,0)
 ;.x = .01 internal value or array of dic and X("DR") to input for other fields
"RTN","PRSU1B1",10,0)
 ;.y = value returned; -1 no new entry added, ^1=ri,^2=.01 value,^3=1 for new if added
"RTN","PRSU1B1",11,0)
ADD(X,Y,PRSA,DINUM) ;add new entry
"RTN","PRSU1B1",12,0)
 N DD,DO,DIC,%,D0,DA,DI,DIE,DLAYGO,DQ,DR,A,B,C,I
"RTN","PRSU1B1",13,0)
 K:$G(DINUM)="" DINUM
"RTN","PRSU1B1",14,0)
 S:PRSA'?.E1"~" PRSA=PRSA_"~" S A=$L(PRSA,"~")-1
"RTN","PRSU1B1",15,0)
 I A>1 F B=1:1:A-1 S C=$P(PRSA,"~",B),DA(A-B)=$P(C,";",3)
"RTN","PRSU1B1",16,0)
 S B=$P(PRSA,"~",A),DIC=$P(B,";",2)  S:DIC=""&(A=1) DIC=+B
"RTN","PRSU1B1",17,0)
 S DLAYGO=PRSA,DIC(0)="FIL"
"RTN","PRSU1B1",18,0)
 S:$D(X(0)) DIC(0)=X(0) S:$D(X("DR")) DIC("DR")=X("DR") K X(0),X("DR")
"RTN","PRSU1B1",19,0)
 D FILE^DICN
"RTN","PRSU1B1",20,0)
 QUIT
"RTN","PRSU1B1",21,0)
 ;
"RTN","PRSU1B1",22,0)
 ;prs = ~1 file number(option);file root;file record id
"RTN","PRSU1B1",23,0)
 ;       ~2 subfile number;subfile root;subfile RI
"RTN","PRSU1B1",24,0)
 ;       ~...
"RTN","PRSU1B1",25,0)
 ;.x = value return; 1 if deleted, 0 if not, -2 if lock fail
"RTN","PRSU1B1",26,0)
DELETE(X,PRSA) ;delete entry
"RTN","PRSU1B1",27,0)
 N %,DA,DIC,Y
"RTN","PRSU1B1",28,0)
 N DIK,DIA,PRSLOCK,A,B,C
"RTN","PRSU1B1",29,0)
 S:PRSA'?.E1"~" PRSA=PRSA_"~" S A=$L(PRSA,"~")-1,PRSLOCK=""
"RTN","PRSU1B1",30,0)
 I A>1 F B=1:1:A-1 S C=$P(PRSA,"~",B),DA(A-B)=$P(C,";",3)
"RTN","PRSU1B1",31,0)
 S B=$P(PRSA,"~",A),DIK=$P(B,";",2),DA=$P(B,";",3),PRSLOCK=DIK_DA_","
"RTN","PRSU1B1",32,0)
 S X=3 D ICLOCK^PRSU1B(PRSLOCK,.X) I 'X S X=-2 QUIT
"RTN","PRSU1B1",33,0)
 D ^DIK,DCLOCK^PRSU1B(PRSLOCK)
"RTN","PRSU1B1",34,0)
 S X=1
"RTN","PRSU1B1",35,0)
 QUIT
"RTN","PRSXP126")
0^51^B2479075^n/a
"RTN","PRSXP126",1,0)
PRSXP126 ;WOIFO/KJS PAID v4.0 Post-Initialization Routine ;12-9-2011
"RTN","PRSXP126",2,0)
 ;;4.0;PAID;**126**;Sep 21, 1995;Build 59
"RTN","PRSXP126",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSXP126",4,0)
 ;
"RTN","PRSXP126",5,0)
 ; This routine contains the post-initialization code for PAID
"RTN","PRSXP126",6,0)
 ; package v4.0. Patch 126
"RTN","PRSXP126",7,0)
 ;
"RTN","PRSXP126",8,0)
 Q
"RTN","PRSXP126",9,0)
 ;
"RTN","PRSXP126",10,0)
POST ;
"RTN","PRSXP126",11,0)
 ;Reindex POC TIME AEP INDEX
"RTN","PRSXP126",12,0)
 N DIK,DA
"RTN","PRSXP126",13,0)
 S DIK="^PRSN(451,DA(1),""E"","
"RTN","PRSXP126",14,0)
 S DIK(1)="1^AEP"
"RTN","PRSXP126",15,0)
 S DA(1)=0
"RTN","PRSXP126",16,0)
 F  S DA(1)=$O(^PRSN(451,DA(1))) Q:DA(1)'?1.N  D
"RTN","PRSXP126",17,0)
 .D ENALL^DIK
"RTN","PRSXP126",18,0)
 ;
"RTN","PRSXP126",19,0)
 ;Reindex POC TIME ALN INDEX
"RTN","PRSXP126",20,0)
 N DIK,DA
"RTN","PRSXP126",21,0)
 S DIK="^PRSN(451,DA(4),""E"",DA(3),""D"",DA(2),""V"",DA(1),""T"","
"RTN","PRSXP126",22,0)
 S DIK(1)="4^ALN"
"RTN","PRSXP126",23,0)
 S DA(4)=0
"RTN","PRSXP126",24,0)
 F  S DA(4)=$O(^PRSN(451,DA(4))) Q:DA(4)'?1.N  D
"RTN","PRSXP126",25,0)
 .S DA(3)=0
"RTN","PRSXP126",26,0)
 .F  S DA(3)=$O(^PRSN(451,DA(4),"E",DA(3))) Q:DA(3)'?1.N  D
"RTN","PRSXP126",27,0)
 ..S DA(2)=0
"RTN","PRSXP126",28,0)
 ..F  S DA(2)=$O(^PRSN(451,DA(4),"E",DA(3),"D",DA(2))) Q:DA(2)'?1.N  D
"RTN","PRSXP126",29,0)
 ...S DA(1)=0
"RTN","PRSXP126",30,0)
 ...F  S DA(1)=$O(^PRSN(451,DA(4),"E",DA(3),"D",DA(2),"V",DA(1))) Q:DA(1)'?1.N  D
"RTN","PRSXP126",31,0)
 ....D ENALL^DIK
"RTN","PRSXP126",32,0)
 ;
"RTN","PRSXP126",33,0)
 N DA
"RTN","PRSXP126",34,0)
 S DA=0
"RTN","PRSXP126",35,0)
 F  S DA=$O(^PRSN(451.7,DA)) Q:'DA  D
"RTN","PRSXP126",36,0)
 . N PRSFDA,IEN,PRSIEN,REC
"RTN","PRSXP126",37,0)
 . S REC=^PRSN(451.7,DA,0),PRSIEN=$P(REC,U,6),TL=$P(^PRSPC(PRSIEN,0),U,8)
"RTN","PRSXP126",38,0)
 . S PRSFDA(451.7,DA_",",15)=TL ; T&L
"RTN","PRSXP126",39,0)
 . D UPDATE^DIE("","PRSFDA","IEN"),MSG^DIALOG()
"RTN","PRSXP126",40,0)
 Q
"SEC","^DIC",451,451,0,"AUDIT")
@
"SEC","^DIC",451,451,0,"DD")
@
"SEC","^DIC",451,451,0,"DEL")
@
"SEC","^DIC",451,451,0,"LAYGO")
@
"SEC","^DIC",451,451,0,"RD")
@
"SEC","^DIC",451,451,0,"WR")
@
"SEC","^DIC",451.1,451.1,0,"AUDIT")
@
"SEC","^DIC",451.1,451.1,0,"DD")
@
"SEC","^DIC",451.1,451.1,0,"DEL")
@
"SEC","^DIC",451.1,451.1,0,"LAYGO")
@
"SEC","^DIC",451.1,451.1,0,"RD")
@
"SEC","^DIC",451.1,451.1,0,"WR")
@
"SEC","^DIC",451.4,451.4,0,"AUDIT")
@
"SEC","^DIC",451.4,451.4,0,"DD")
@
"SEC","^DIC",451.4,451.4,0,"DEL")
@
"SEC","^DIC",451.4,451.4,0,"LAYGO")
@
"SEC","^DIC",451.4,451.4,0,"RD")
@
"SEC","^DIC",451.4,451.4,0,"WR")
@
"SEC","^DIC",451.5,451.5,0,"AUDIT")
@
"SEC","^DIC",451.5,451.5,0,"DD")
@
"SEC","^DIC",451.5,451.5,0,"DEL")
@
"SEC","^DIC",451.5,451.5,0,"LAYGO")
@
"SEC","^DIC",451.5,451.5,0,"RD")
@
"SEC","^DIC",451.5,451.5,0,"WR")
@
"SEC","^DIC",451.6,451.6,0,"AUDIT")
@
"SEC","^DIC",451.6,451.6,0,"DD")
@
"SEC","^DIC",451.6,451.6,0,"DEL")
@
"SEC","^DIC",451.6,451.6,0,"LAYGO")
@
"SEC","^DIC",451.6,451.6,0,"RD")
@
"SEC","^DIC",451.6,451.6,0,"WR")
@
"SEC","^DIC",451.7,451.7,0,"AUDIT")
@
"SEC","^DIC",451.7,451.7,0,"DD")
@
"SEC","^DIC",451.7,451.7,0,"DEL")
@
"SEC","^DIC",451.7,451.7,0,"LAYGO")
@
"SEC","^DIC",451.7,451.7,0,"RD")
@
"SEC","^DIC",451.7,451.7,0,"WR")
@
"SEC","^DIC",455.5,455.5,0,"AUDIT")
@
"SEC","^DIC",455.5,455.5,0,"DD")
@
"SEC","^DIC",455.5,455.5,0,"DEL")
@
"SEC","^DIC",455.5,455.5,0,"LAYGO")
@
"SEC","^DIC",455.5,455.5,0,"RD")
@
"SEC","^DIC",455.5,455.5,0,"WR")
@
"SEC","^DIC",456,456,0,"AUDIT")
@
"SEC","^DIC",456,456,0,"DD")
@
"SEC","^DIC",456,456,0,"DEL")
@
"SEC","^DIC",456,456,0,"LAYGO")
@
"SEC","^DIC",456,456,0,"RD")
@
"SEC","^DIC",456,456,0,"WR")
@
"UP",450,450.01,-1)
450^7
"UP",450,450.01,0)
450.01
"VER")
8.0^22.0
"^DD",450,450,7.5,0)
USER PREFERENCES^450.01^^7;0
"^DD",450,450.01,0)
USER PREFERENCES SUB-FIELD^^1^2
"^DD",450,450.01,0,"DT")
3090727
"^DD",450,450.01,0,"IX","B",450.01,.01)

"^DD",450,450.01,0,"NM","USER PREFERENCES")

"^DD",450,450.01,0,"UP")
450
"^DD",450,450.01,.01,0)
USER PREFERENCES^MF^^0;1^K:$L(X)>30!($L(X)<3) X
"^DD",450,450.01,.01,1,0)
^.1
"^DD",450,450.01,.01,1,1,0)
450.01^B
"^DD",450,450.01,.01,1,1,1)
S ^PRSPC(DA(1),7,"B",$E(X,1,30),DA)=""
"^DD",450,450.01,.01,1,1,2)
K ^PRSPC(DA(1),7,"B",$E(X,1,30),DA)
"^DD",450,450.01,.01,3)
Answer must be 3-30 characters in length.
"^DD",450,450.01,.01,21,0)
^.001^4^4^3110816^^^
"^DD",450,450.01,.01,21,1,0)
This field contains the name of a ETA package defined user preference.  
"^DD",450,450.01,.01,21,2,0)
In general only ETA software code should create or modify entries to this 
"^DD",450,450.01,.01,21,3,0)
field, when a user of the package has selected a preference that can be 
"^DD",450,450.01,.01,21,4,0)
saved and used by the software to retain the users preference.
"^DD",450,450.01,.01,"DT")
3090727
"^DD",450,450.01,1,0)
VALUE^F^^0;2^K:$L(X)>30!($L(X)<3) X
"^DD",450,450.01,1,3)
Answer must be 3-30 characters in length.
"^DD",450,450.01,1,21,0)
^^6^6^3090727^
"^DD",450,450.01,1,21,1,0)
This field stores the value of a PAID ETA package user's preference for 
"^DD",450,450.01,1,21,2,0)
the associated preference in this multiple.  For example, a timekeeper 
"^DD",450,450.01,1,21,3,0)
may choose to edit POC records when they are posting timecards.  If they 
"^DD",450,450.01,1,21,4,0)
choose to then the software will save this preference in this field.  
"^DD",450,450.01,1,21,5,0)
Entries to this field and this multiple should only be added or edited by 
"^DD",450,450.01,1,21,6,0)
the ETA software when a user selects a preference.
"^DD",450,450.01,1,"DT")
3090727
"^DD",451,451,0)
FIELD^^9^3
"^DD",451,451,0,"DDA")
N
"^DD",451,451,0,"DT")
3091007
"^DD",451,451,0,"IX","AL",451.9999,4)

"^DD",451,451,0,"IX","B",451,.01)

"^DD",451,451,0,"NM","POC DAILY TIME RECORDS")

"^DD",451,451,0,"VRPK")
PRS
"^DD",451,451,.01,0)
PAY PERIOD^RFX^^0;1^K:$L(X)>5!($L(X)<5)!'(X?2N1"-"2N) X I $D(X) S DINUM=$O(^PRST(458,"B",X,0)) K:'DINUM DINUM,X
"^DD",451,451,.01,1,0)
^.1
"^DD",451,451,.01,1,1,0)
451^B
"^DD",451,451,.01,1,1,1)
S ^PRSN(451,"B",$E(X,1,30),DA)=""
"^DD",451,451,.01,1,1,2)
K ^PRSN(451,"B",$E(X,1,30),DA)
"^DD",451,451,.01,3)
Enter a Pay Period with format YY-PP, where PP is PP#.
"^DD",451,451,.01,21,0)
^.001^1^1^3090601^^
"^DD",451,451,.01,21,1,0)
This is the Pay Period in format YY-PP.
"^DD",451,451,.01,23,0)
^.001^1^1^3090708^^^
"^DD",451,451,.01,23,1,0)
The IEN of the entry with YY-PP will be the same IEN of the file #458. Before adding a new entry YY-PP in this file, the same YY-PP entry must exist in file #458 first.
"^DD",451,451,.01,"DT")
3091102
"^DD",451,451,6,0)
RELEASE HISTORY^451.06P^^D;0
"^DD",451,451,6,21,0)
^.001^1^1^3090701^^^^
"^DD",451,451,6,21,1,0)
This is the released log for each releasing by the release option.
"^DD",451,451,6,"DT")
3090603
"^DD",451,451,9,0)
VA NURSE^451.09P^^E;0
"^DD",451,451,9,21,0)
^.001^2^2^3091007^^^^
"^DD",451,451,9,21,1,0)
It contains the point of care data associated with the VA nurse for this
"^DD",451,451,9,21,2,0)
pay period.
"^DD",451,451,9,"DT")
3090604
"^DD",451,451.06,0)
RELEASE HISTORY SUB-FIELD^^4^5
"^DD",451,451.06,0,"DT")
3090708
"^DD",451,451.06,0,"IX","B",451.06,.01)

"^DD",451,451.06,0,"NM","RELEASE HISTORY")

"^DD",451,451.06,0,"UP")
451
"^DD",451,451.06,.01,0)
DIVISION^P4'^DIC(4,^0;1^Q
"^DD",451,451.06,.01,1,0)
^.1
"^DD",451,451.06,.01,1,1,0)
451.06^B
"^DD",451,451.06,.01,1,1,1)
S ^PRSN(451,DA(1),"D","B",$E(X,1,30),DA)=""
"^DD",451,451.06,.01,1,1,2)
K ^PRSN(451,DA(1),"D","B",$E(X,1,30),DA)
"^DD",451,451.06,.01,3)
Enter a POC Daily Time Card Release Division.
"^DD",451,451.06,.01,21,0)
^^1^1^3090708^^
"^DD",451,451.06,.01,21,1,0)
This is the POC Daily Time Card Release Division.
"^DD",451,451.06,.01,"DT")
3090708
"^DD",451,451.06,1,0)
RELEASE USER^P200'^VA(200,^0;2^Q
"^DD",451,451.06,1,3)
Enter the user who released the POC Daily Time Records.
"^DD",451,451.06,1,"DT")
3090708
"^DD",451,451.06,2,0)
RELEASE DATE/TIME^D^^0;3^S %DT="ETX" D ^%DT S X=Y K:3090101>X X
"^DD",451,451.06,2,3)
TYPE A DATE/TIME NOT EARLIER THAN JAN 01, 2009
"^DD",451,451.06,2,21,0)
^^1^1^3090708^
"^DD",451,451.06,2,21,1,0)
This is the date and time when the POC Daily Time Card is released.
"^DD",451,451.06,2,"DT")
3090708
"^DD",451,451.06,3,0)
TOTAL # VA NURSES RELEASED^NJ5,0^^0;4^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",451,451.06,3,3)
Type a Number between 0 and 99999, 0 Decimal Digits
"^DD",451,451.06,3,21,0)
^.001^1^1^3090630^^
"^DD",451,451.06,3,21,1,0)
The total number of employees for whom time card have been transmitted.
"^DD",451,451.06,3,"DT")
3090630
"^DD",451,451.06,4,0)
TOTAL # RECORDS RELEASED^NJ6,0^^0;5^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."1.N) X
"^DD",451,451.06,4,3)
Type a number between 0 and 999999, 0 Decimal Digits
"^DD",451,451.06,4,21,0)
^^1^1^3090522^
"^DD",451,451.06,4,21,1,0)
The total number of time card records that have been released.
"^DD",451,451.06,4,"DT")
3090522
"^DD",451,451.09,0)
VA NURSE SUB-FIELD^^6^8
"^DD",451,451.09,0,"DT")
3091007
"^DD",451,451.09,0,"IX","B",451.09,.01)

"^DD",451,451.09,0,"NM","VA NURSE")

"^DD",451,451.09,0,"UP")
451
"^DD",451,451.09,.01,0)
VA NURSE^P450'X^PRSPC(^0;1^I $D(X) S DINUM=X
"^DD",451,451.09,.01,1,0)
^.1
"^DD",451,451.09,.01,1,1,0)
451.09^B
"^DD",451,451.09,.01,1,1,1)
S ^PRSN(451,DA(1),"E","B",$E(X,1,30),DA)=""
"^DD",451,451.09,.01,1,1,2)
K ^PRSN(451,DA(1),"E","B",$E(X,1,30),DA)
"^DD",451,451.09,.01,3)
Enter a nurse employee.
"^DD",451,451.09,.01,21,0)
^.001^2^2^3090903^^^
"^DD",451,451.09,.01,21,1,0)
A pointer to the PAID EMPLOYEE file (#450) which identifies the name
"^DD",451,451.09,.01,21,2,0)
of the employee.
"^DD",451,451.09,.01,"DT")
3090617
"^DD",451,451.09,1,0)
POC RECORD PP STATUS^S^E:ENTERED;A:APPROVED;R:RELEASED;^0;2^Q
"^DD",451,451.09,1,3)
Enter a POC Record PP status.
"^DD",451,451.09,1,21,0)
^^1^1^3090708^
"^DD",451,451.09,1,21,1,0)
This is the Pay Period status of the POC Daily Time Card Record.
"^DD",451,451.09,1,"DT")
3120120
"^DD",451,451.09,2,0)
APP. SUPERVISOR^P200'^VA(200,^0;3^Q
"^DD",451,451.09,2,3)
Enter an approval supervisor name.
"^DD",451,451.09,2,21,0)
^^2^2^3090708^^
"^DD",451,451.09,2,21,1,0)
A pointer to the NEW PERSON file (#200) which identifies the name 
"^DD",451,451.09,2,21,2,0)
of the supervisor who approved the employee's time card.
"^DD",451,451.09,2,"DT")
3090708
"^DD",451,451.09,3,0)
APP. DATE/TIME^D^^0;4^S %DT="ETX" D ^%DT S X=Y K:3090101>X X
"^DD",451,451.09,3,3)
TYPE A DATE AND TIME NOT EARLIER THAN JAN 01, 2009
"^DD",451,451.09,3,21,0)
^^1^1^3090522^
"^DD",451,451.09,3,21,1,0)
The date and time the supervisor approved the employee's time card.
"^DD",451,451.09,3,"DT")
3090522
"^DD",451,451.09,4,0)
NURSE DIVISION^P4'^DIC(4,^0;5^Q
"^DD",451,451.09,4,3)
Enter the nurse Division.
"^DD",451,451.09,4,21,0)
^^2^2^3090805^
"^DD",451,451.09,4,21,1,0)
This is the nurse Division at the time of Approval of POC Daily Time 
"^DD",451,451.09,4,21,2,0)
Records.
"^DD",451,451.09,4,"DT")
3091103
"^DD",451,451.09,5,0)
NURSE LOCATION^P211.4'^NURSF(211.4,^0;6^Q
"^DD",451,451.09,5,3)
Enter the nurse default NURS LOCATION.
"^DD",451,451.09,5,21,0)
^^2^2^3090805^
"^DD",451,451.09,5,21,1,0)
This is the nurse default NURS LOCATION at the time of Approval of POC
"^DD",451,451.09,5,21,2,0)
Daily Time Records.
"^DD",451,451.09,5,"DT")
3090805
"^DD",451,451.09,6,0)
NURSE T&L UNIT^P455.5'^PRST(455.5,^0;7^Q
"^DD",451,451.09,6,3)
Enter the Nurse T&L UNIT.
"^DD",451,451.09,6,21,0)
^^2^2^3090805^
"^DD",451,451.09,6,21,1,0)
This is the nurse T&L UNIT at the time of Approval of POC Daily Time 
"^DD",451,451.09,6,21,2,0)
Records.
"^DD",451,451.09,6,"DT")
3090805
"^DD",451,451.09,9,0)
DAY #^451.99^^D;0
"^DD",451,451.09,9,21,0)
^.001^1^1^3091007^^^^
"^DD",451,451.09,9,21,1,0)
Day # multiple may have employee's working day # from 1 to 14.
"^DD",451,451.99,0)
DAY # SUB-FIELD^^2^4
"^DD",451,451.99,0,"DT")
3091007
"^DD",451,451.99,0,"IX","B",451.99,.01)

"^DD",451,451.99,0,"NM","DAY #")

"^DD",451,451.99,0,"UP")
451.09
"^DD",451,451.99,.01,0)
DAY #^MNJ2,0X^^0;1^K:+X'=X!(X>14)!(X<1)!(X?.E1"."1.N) X I $D(X) S DINUM=X
"^DD",451,451.99,.01,1,0)
^.1
"^DD",451,451.99,.01,1,1,0)
451.99^B
"^DD",451,451.99,.01,1,1,1)
S ^PRSN(451,DA(2),"E",DA(1),"D","B",$E(X,1,30),DA)=""
"^DD",451,451.99,.01,1,1,2)
K ^PRSN(451,DA(2),"E",DA(1),"D","B",$E(X,1,30),DA)
"^DD",451,451.99,.01,3)
Type a day number between 1 and 14, 0 Decimal Digits
"^DD",451,451.99,.01,21,0)
^.001^1^1^3090903^^
"^DD",451,451.99,.01,21,1,0)
The day # from day 1 to day 14 of a pay period.
"^DD",451,451.99,.01,"DT")
3090903
"^DD",451,451.99,1,0)
CORRECTION STATUS^S^E:Entered;A:Approved;R:Released;^0;2^Q
"^DD",451,451.99,1,3)
Enter processing status for the corrected released daily POC record.
"^DD",451,451.99,1,21,0)
^^3^3^3090604^
"^DD",451,451.99,1,21,1,0)
This is the status of a correction to the daily point of care record.  
"^DD",451,451.99,1,21,2,0)
Daily status only applies to records that have been released with a pay
"^DD",451,451.99,1,21,3,0)
period and then the daily record is corrected.
"^DD",451,451.99,1,"DT")
3091123
"^DD",451,451.99,2,0)
ACTIVITY EXTRACTION #^NJ3,0^^0;3^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1.N) X
"^DD",451,451.99,2,3)
Type a number between 1 and 999, 0 Decimal Digits
"^DD",451,451.99,2,21,0)
^^1^1^3090720^
"^DD",451,451.99,2,21,1,0)
The field is updated during Releasing POC DAILY TIME RECORDS of File #451.7. The ACTIVITY EXTRACTION # is set in a field of the POC DAILY ACTIVITY record
"^DD",451,451.99,2,"DT")
3090720
"^DD",451,451.99,9,0)
VERSION #^451.999^^V;0
"^DD",451,451.99,9,21,0)
^.001^1^1^3091007^^^^
"^DD",451,451.99,9,21,1,0)
The version # of a release (corrected) employee's time card.
"^DD",451,451.999,0)
VERSION # SUB-FIELD^^2^4
"^DD",451,451.999,0,"DT")
3091007
"^DD",451,451.999,0,"IX","B",451.999,.01)

"^DD",451,451.999,0,"NM","VERSION #")

"^DD",451,451.999,0,"UP")
451.99
"^DD",451,451.999,.01,0)
VERSION #^NJ3,0X^^0;1^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X I $D(X) S DINUM=X
"^DD",451,451.999,.01,1,0)
^.1
"^DD",451,451.999,.01,1,1,0)
451.999^B
"^DD",451,451.999,.01,1,1,1)
S ^PRSN(451,DA(3),"E",DA(2),"D",DA(1),"V","B",$E(X,1,30),DA)=""
"^DD",451,451.999,.01,1,1,2)
K ^PRSN(451,DA(3),"E",DA(2),"D",DA(1),"V","B",$E(X,1,30),DA)
"^DD",451,451.999,.01,3)
Type a version number between 1 and 999, 0 Decimal Digits
"^DD",451,451.999,.01,23,0)
^.001^2^2^3090708^^^^
"^DD",451,451.999,.01,23,1,0)
The version # of the employee's day # time card increases by 1 for each
"^DD",451,451.999,.01,23,2,0)
correction of a released time card.
"^DD",451,451.999,.01,"DT")
3090708
"^DD",451,451.999,1,0)
APP. CORRECT SUPERVISOR^P200'^VA(200,^0;2^Q
"^DD",451,451.999,1,3)
Enter an approval correct released supervisor name.
"^DD",451,451.999,1,21,0)
^^2^2^3090708^^
"^DD",451,451.999,1,21,1,0)
A pointer to the NEW PERSON file (#200) that identifies the employee's
"^DD",451,451.999,1,21,2,0)
supervisor who approved the correct released time card.
"^DD",451,451.999,1,"DT")
3090708
"^DD",451,451.999,2,0)
APP. CORRECT DATE/TIME^D^^0;3^S %DT="ETX" D ^%DT S X=Y K:3090101>X X
"^DD",451,451.999,2,3)
TYPE A DATE AND TIME NOT EARLIER THAN JAN 01, 2009
"^DD",451,451.999,2,21,0)
^^2^2^3090522^
"^DD",451,451.999,2,21,1,0)
The date and time the supervisor approved the correct released time card
"^DD",451,451.999,2,21,2,0)
of the version # of the day #.
"^DD",451,451.999,2,"DT")
3090522
"^DD",451,451.999,9,0)
TIME SEGMENT^451.9999^^T;0
"^DD",451,451.999,9,21,0)
^.001^1^1^3091007^^^^
"^DD",451,451.999,9,21,1,0)
This multiple field stores all work time segments of point of care data.
"^DD",451,451.9999,0)
TIME SEGMENT SUB-FIELD^^9^10
"^DD",451,451.9999,0,"DT")
3091007
"^DD",451,451.9999,0,"IX","AC",451.9999,8)

"^DD",451,451.9999,0,"IX","B",451.9999,.01)

"^DD",451,451.9999,0,"NM","TIME SEGMENT")

"^DD",451,451.9999,0,"UP")
451.999
"^DD",451,451.9999,.01,0)
START TIME^MRFX^^0;1^D:$D(X) ^PRSATIM
"^DD",451,451.9999,.01,1,0)
^.1
"^DD",451,451.9999,.01,1,1,0)
451.9999^B
"^DD",451,451.9999,.01,1,1,1)
S ^PRSN(451,DA(4),"E",DA(3),"D",DA(2),"V",DA(1),"T","B",$E(X,1,30),DA)=""
"^DD",451,451.9999,.01,1,1,2)
K ^PRSN(451,DA(4),"E",DA(3),"D",DA(2),"V",DA(1),"T","B",$E(X,1,30),DA)
"^DD",451,451.9999,.01,3)
Enter work start time in format 7:30A, 12:30P, MID (or 12M) for Midnight, NOON (or 12N) for noon.
"^DD",451,451.9999,.01,4)
D HLP^PRSATIM
"^DD",451,451.9999,.01,21,0)
^.001^1^1^3091007^^^^
"^DD",451,451.9999,.01,21,1,0)
This is the work start time of a time segment.
"^DD",451,451.9999,.01,"DT")
3091007
"^DD",451,451.9999,1,0)
STOP TIME^FX^^0;2^D:$D(X) ^PRSATIM
"^DD",451,451.9999,1,3)
Enter work stop time in format 7:30A, 12:30P, MID (or 12M) for midnight, or NOON (or 12N) for noon.
"^DD",451,451.9999,1,4)
D HLP^PRSATIM
"^DD",451,451.9999,1,21,0)
^^1^1^3090709^^
"^DD",451,451.9999,1,21,1,0)
This is the work stop time of a time segment.
"^DD",451,451.9999,1,"DT")
3090713
"^DD",451,451.9999,2,0)
MEAL TIME^NJ2,0X^^0;3^K:+X'=X!(X>60)!(X<0)!(X?.E1"."1.N) X I $D(X) K:X#15 X
"^DD",451,451.9999,2,3)
Enter 0, 15, 30, 45 or 60 for minutes.
"^DD",451,451.9999,2,21,0)
^^1^1^3090709^^^
"^DD",451,451.9999,2,21,1,0)
This is number of minutes for meal time.
"^DD",451,451.9999,2,"DT")
3090709
"^DD",451,451.9999,3,0)
TYPE OF TIME^FX^^0;4^S DIC=457.3,DIC(0)="EMQ",DIC("S")="I "",ON,SB,UN,""'[$P(^(0),U)" D ^DIC K DIC S X=$P(Y,"^",2) K:Y'>0 X
"^DD",451,451.9999,3,3)
Enter a type of time worked or leave taken for the time segment.
"^DD",451,451.9999,3,4)
N D,X,DIC,DO S DIC="^PRST(457.3,",DIC(0)="Q",DIC("S")="I "",ON,SB,UN,""'[$P(^(0),U)",D="B" D DQ^DICQ Q
"^DD",451,451.9999,3,21,0)
^.001^1^1^3090708^^^^
"^DD",451,451.9999,3,21,1,0)
The type of time worked or leave taken for the time segment.
"^DD",451,451.9999,3,23,0)
^^1^1^3090708^
"^DD",451,451.9999,3,23,1,0)
The field stores the field #1 - Short Description in Type of Time File #457.3.
"^DD",451,451.9999,3,"DT")
3090708
"^DD",451,451.9999,4,0)
POINT OF CARE^RP211.4'^NURSF(211.4,^0;5^Q
"^DD",451,451.9999,4,1,0)
^.1
"^DD",451,451.9999,4,1,1,0)
451^AL^MUMPS
"^DD",451,451.9999,4,1,1,1)
S ^PRSN(451,"AL",$E(X,1,30),DA(4),DA(2),DA(3),DA(1),DA)=""
"^DD",451,451.9999,4,1,1,2)
K ^PRSN(451,"AL",$E(X,1,30),DA(4),DA(2),DA(3),DA(1),DA)
"^DD",451,451.9999,4,1,1,"%D",0)
^^6^6^3090806^
"^DD",451,451.9999,4,1,1,"%D",1,0)
This index provides the abiltiy to find and report on all nursing work 
"^DD",451,451.9999,4,1,1,"%D",2,0)
activity at a Nursing Location.  It provides access by identifing the 
"^DD",451,451.9999,4,1,1,"%D",3,0)
Point of Care, pay period, day number, nurse, version, and time segment.  
"^DD",451,451.9999,4,1,1,"%D",4,0)
Be careful to find the record of interest by identifying the latest 
"^DD",451,451.9999,4,1,1,"%D",5,0)
version of the time segments.  Also, note that subscript are in 
"^DD",451,451.9999,4,1,1,"%D",6,0)
descending order except that the nurse and day number are reversed.
"^DD",451,451.9999,4,1,1,"DT")
3090806
"^DD",451,451.9999,4,3)
Enter a Nurse Location of the time segment worked.
"^DD",451,451.9999,4,21,0)
^^1^1^3090709^^
"^DD",451,451.9999,4,21,1,0)
This is the nurse location where the nurse worked in the time segment.
"^DD",451,451.9999,4,"DT")
3111209
"^DD",451,451.9999,5,0)
TYPE OF WORK^P451.5'^PRSN(451.5,^0;6^Q
"^DD",451,451.9999,5,3)
Enter a Type of Work.
"^DD",451,451.9999,5,21,0)
^^1^1^3090527^
"^DD",451,451.9999,5,21,1,0)
This is a Type of Work for the time segment.
"^DD",451,451.9999,5,"DT")
3090527
"^DD",451,451.9999,6,0)
MANDATORY INDICATOR^S^M:MANDATORY;V:VOLUNTARY;^0;7^Q
"^DD",451,451.9999,6,3)
Enter: M for Mandatory or V for Voluntary.
"^DD",451,451.9999,6,21,0)
^^1^1^3090709^^
"^DD",451,451.9999,6,21,1,0)
The is the mandatory indicator for OT/CT/RG type of time.
"^DD",451,451.9999,6,"DT")
3090709
"^DD",451,451.9999,7,0)
REASON FOR OT/CT/RG^P451.6'^PRSN(451.6,^0;8^Q
"^DD",451,451.9999,7,3)
Enter a reason for the OT/CT/RG Type of Time.
"^DD",451,451.9999,7,21,0)
^^1^1^3090527^
"^DD",451,451.9999,7,21,1,0)
This is the reason of OT/CT/RG type of time.
"^DD",451,451.9999,7,"DT")
3090527
"^DD",451,451.9999,8,0)
MILITARY START TIME^NJ4,0^^0;9^K:+X'=X!(X>4800)!(X<0)!(X?.E1"."1.N) X
"^DD",451,451.9999,8,1,0)
^.1
"^DD",451,451.9999,8,1,1,0)
451.9999^AC
"^DD",451,451.9999,8,1,1,1)
S ^PRSN(451,DA(4),"E",DA(3),"D",DA(2),"V",DA(1),"T","AC",$E(X,1,30),DA)=""
"^DD",451,451.9999,8,1,1,2)
K ^PRSN(451,DA(4),"E",DA(3),"D",DA(2),"V",DA(1),"T","AC",$E(X,1,30),DA)
"^DD",451,451.9999,8,1,1,"DT")
3091001
"^DD",451,451.9999,8,3)
Type a number between 0 and 4800, 0 Decimal Digits
"^DD",451,451.9999,8,21,0)
^.001^1^1^3090709^^^^
"^DD",451,451.9999,8,21,1,0)
This is the start time in military time (+2400) format without leading 0.
"^DD",451,451.9999,8,"DT")
3091001
"^DD",451,451.9999,9,0)
MILITARY STOP TIME^NJ4,0^^0;10^K:+X'=X!(X>4800)!(X<0)!(X?.E1"."1.N) X
"^DD",451,451.9999,9,3)
Type a number between 0 and 4800, 0 Decimal Digits
"^DD",451,451.9999,9,21,0)
^.001^1^1^3090605^^^^
"^DD",451,451.9999,9,21,1,0)
This is the stop time in military time (+2400) format without leading 0.
"^DD",451,451.9999,9,"DT")
3090709
"^DD",451.1,451.1,0)
FIELD^^3^4
"^DD",451.1,451.1,0,"DDA")
N
"^DD",451.1,451.1,0,"DT")
3091203
"^DD",451.1,451.1,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",451.1,451.1,0,"ID",2)
W "   ",$P(^(0),U,3)
"^DD",451.1,451.1,0,"IX","B",451.1,.01)

"^DD",451.1,451.1,0,"NM","NURSE ROLE")

"^DD",451.1,451.1,0,"VRPK")
PRS
"^DD",451.1,451.1,.01,0)
CODE^RFX^^0;1^K:$L(X)>30!($L(X)<3) X
"^DD",451.1,451.1,.01,1,0)
^.1
"^DD",451.1,451.1,.01,1,1,0)
451.1^B
"^DD",451.1,451.1,.01,1,1,1)
S ^PRSN(451.1,"B",$E(X,1,30),DA)=""
"^DD",451.1,451.1,.01,1,1,2)
K ^PRSN(451.1,"B",$E(X,1,30),DA)
"^DD",451.1,451.1,.01,3)
Enter a code corresponding to an appropriate nurse role and assignment. 
"^DD",451.1,451.1,.01,21,0)
^.001^22^22^3090707^^^^
"^DD",451.1,451.1,.01,21,1,0)
This field contains a key containing values for cost center, 
"^DD",451.1,451.1,.01,21,2,0)
budget object code, occupation series and assignment code.  For entries 
"^DD",451.1,451.1,.01,21,3,0)
that contain the asterisk character, the employee can have any value for 
"^DD",451.1,451.1,.01,21,4,0)
these fields in file 450 and therefore match the entry in this file.
"^DD",451.1,451.1,.01,21,5,0)
 
"^DD",451.1,451.1,.01,21,6,0)
The following example shows how to interpret the codes:
"^DD",451.1,451.1,.01,21,7,0)
Example:  Code * 61 0610 88  The code is composed of 4 parts separated 
"^DD",451.1,451.1,.01,21,8,0)
by spaces.
"^DD",451.1,451.1,.01,21,9,0)
 
"^DD",451.1,451.1,.01,21,10,0)
Part 1=Cost Center. The "*" in this position indicates that any 
"^DD",451.1,451.1,.01,21,11,0)
cost center is applicable. Otherwise a 4 digit number is present.
"^DD",451.1,451.1,.01,21,12,0)
 
"^DD",451.1,451.1,.01,21,13,0)
Part 2=Last 2 digits of the 4 digit Budget Object Code. The "61"
"^DD",451.1,451.1,.01,21,14,0)
in this position is the last 2 digits of Budget Object Code 1061.
"^DD",451.1,451.1,.01,21,15,0)
 
"^DD",451.1,451.1,.01,21,16,0)
Part 3=Occupational Series Code. This is a 4 digit number.
"^DD",451.1,451.1,.01,21,17,0)
 
"^DD",451.1,451.1,.01,21,18,0)
Part 4=Assignment Code. The "88" in this position indicates an
"^DD",451.1,451.1,.01,21,19,0)
assignment of RN Staff, Inpatient Acute. This is typically a 2
"^DD",451.1,451.1,.01,21,20,0)
character code. An "*" in this position indicates nursing staff
"^DD",451.1,451.1,.01,21,21,0)
that are automatically assigned to direct care roles regardless
"^DD",451.1,451.1,.01,21,22,0)
of assignment codes.
"^DD",451.1,451.1,.01,"DT")
3090422
"^DD",451.1,451.1,1,0)
ROLE^RF^^0;2^K:$L(X)>50!($L(X)<3) X
"^DD",451.1,451.1,1,3)
Answer must be 3-50 characters in length.
"^DD",451.1,451.1,1,21,0)
^.001^3^3^3090626^^
"^DD",451.1,451.1,1,21,1,0)
Nurse Role describes nursing personnel who have patient care 
"^DD",451.1,451.1,1,21,2,0)
responsibilities/assignments. Examples include direct care staff, 
"^DD",451.1,451.1,1,21,3,0)
hospital support staff, advanced practice staff.
"^DD",451.1,451.1,1,"DT")
3090422
"^DD",451.1,451.1,2,0)
ASSIGNMENT^F^^0;3^K:$L(X)>50!($L(X)<3) X
"^DD",451.1,451.1,2,3)
Answer must be 3-50 characters in length.
"^DD",451.1,451.1,2,21,0)
^^3^3^3090626^
"^DD",451.1,451.1,2,21,1,0)
Nursing personnel are assigned to particular job positions suitable for 
"^DD",451.1,451.1,2,21,2,0)
their roles. The positions are identified by assignment codes which are 
"^DD",451.1,451.1,2,21,3,0)
included as the fourth portion of the .01 field in this file.
"^DD",451.1,451.1,2,"DT")
3090423
"^DD",451.1,451.1,3,0)
CATEGORY^S^DC:DIRECT CARE;HS:HOSPITAL SUPPORT (CONSULTIVE);AP:ADVANCED PRACTICE;AN:ADMINISTRATIVE;AT:ACADEMIC/TRAINEE;^0;4^Q
"^DD",451.1,451.1,3,3)
Select the 2 digit code that designates a nursing role
"^DD",451.1,451.1,3,21,0)
^.001^1^1^3091203^^
"^DD",451.1,451.1,3,21,1,0)
Category is a high level designation for a health care employee skill mix.
"^DD",451.1,451.1,3,"DT")
3091203
"^DD",451.4,451.4,0)
FIELD^^9^3
"^DD",451.4,451.4,0,"DDA")
Y
"^DD",451.4,451.4,0,"DT")
3090504
"^DD",451.4,451.4,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",451.4,451.4,0,"IX","B",451.4,.01)

"^DD",451.4,451.4,0,"NM","POC TYPE OF TIME")

"^DD",451.4,451.4,0,"VRPK")
PRS
"^DD",451.4,451.4,.01,0)
TYPE OF TIME CODE^RF^^0;1^K:$L(X)>2!($L(X)<2)!'(X?2A) X
"^DD",451.4,451.4,.01,1,0)
^.1
"^DD",451.4,451.4,.01,1,1,0)
451.4^B
"^DD",451.4,451.4,.01,1,1,1)
S ^PRSN(451.4,"B",$E(X,1,30),DA)=""
"^DD",451.4,451.4,.01,1,1,2)
K ^PRSN(451.4,"B",$E(X,1,30),DA)
"^DD",451.4,451.4,.01,3)
Answer must be 2 characters in length.
"^DD",451.4,451.4,.01,21,0)
^.001^1^1^3090429^^^^
"^DD",451.4,451.4,.01,21,1,0)
This is a 2-character type of time code used in Point of Care.
"^DD",451.4,451.4,.01,23,0)
^.001^1^1^3090429^^^^
"^DD",451.4,451.4,.01,23,1,0)
The POC TYPE OF TIME CODE is entered in the POC Daily Time Records extracted by the VANOD.
"^DD",451.4,451.4,.01,"DT")
3090430
"^DD",451.4,451.4,1,0)
DESCRIPTION^RF^^0;2^K:$L(X)>30!($L(X)<1)!'(X?1A.29APN) X
"^DD",451.4,451.4,1,3)
Answer must be 1-30 characters in length
"^DD",451.4,451.4,1,21,0)
^.001^1^1^3090429^^^^
"^DD",451.4,451.4,1,21,1,0)
This is the description of the POC Type of Time Code.
"^DD",451.4,451.4,1,"DT")
3090429
"^DD",451.4,451.4,9,0)
ETA TYPE OF TIME^451.49P^^9;0
"^DD",451.4,451.49,0)
ETA TYPE OF TIME SUB-FIELD^^1^2
"^DD",451.4,451.49,0,"DT")
3090504
"^DD",451.4,451.49,0,"IX","B",451.49,.01)

"^DD",451.4,451.49,0,"NM","ETA TYPE OF TIME")

"^DD",451.4,451.49,0,"UP")
451.4
"^DD",451.4,451.49,.01,0)
ETA TYPE OF TIME^M*P457.3'^PRST(457.3,^0;1^S DIC("S")="I $O(^PRSN(451.4,""C"",$P(^PRST(457.3,Y,0),U),0))']1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",451.4,451.49,.01,1,0)
^.1
"^DD",451.4,451.49,.01,1,1,0)
451.49^B
"^DD",451.4,451.49,.01,1,1,1)
S ^PRSN(451.4,DA(1),9,"B",$E(X,1,30),DA)=""
"^DD",451.4,451.49,.01,1,1,2)
K ^PRSN(451.4,DA(1),9,"B",$E(X,1,30),DA)
"^DD",451.4,451.49,.01,1,2,0)
^^TRIGGER^451.49^1
"^DD",451.4,451.49,.01,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^PRSN(451.4,D0,9,D1,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y X ^DD(451.49,.01,1,2,1.1) X ^DD(451.49,.01,1,2,1.4)
"^DD",451.4,451.49,.01,1,2,1.1)
S X=DIV S I(1,0)=$G(D1),I(0,0)=$G(D0),D0=DIV S:'D0!'$D(^PRST(457.3,+D0,0)) D0=-1 S Y(101)=$S($D(^PRST(457.3,D0,0)):^(0),1:"") S X=$P(Y(101),U,1) S D0=I(0,0) S D1=I(1,0)
"^DD",451.4,451.49,.01,1,2,1.4)
S DIH=$G(^PRSN(451.4,DIV(0),9,DIV(1),0)),DIV=X S $P(^(0),U,2)=DIV,DIH=451.49,DIG=1 D ^DICR
"^DD",451.4,451.49,.01,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^PRSN(451.4,D0,9,D1,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(451.49,.01,1,2,2.4)
"^DD",451.4,451.49,.01,1,2,2.4)
S DIH=$G(^PRSN(451.4,DIV(0),9,DIV(1),0)),DIV=X S $P(^(0),U,2)=DIV,DIH=451.49,DIG=1 D ^DICR
"^DD",451.4,451.49,.01,1,2,3)
The field is a triggered field by the field ETA TYPE OF TIME.
"^DD",451.4,451.49,.01,1,2,"%D",0)
^.101^2^2^3090708^^^
"^DD",451.4,451.49,.01,1,2,"%D",1,0)
This is a trigger cross-reference. Field #1 is triggered by field #.01 and
"^DD",451.4,451.49,.01,1,2,"%D",2,0)
stores the Code of Field #.01 in File #457.3 - Type of Time.
"^DD",451.4,451.49,.01,1,2,"CREATE VALUE")
ETA TYPE OF TIME:CODE
"^DD",451.4,451.49,.01,1,2,"DELETE VALUE")
@
"^DD",451.4,451.49,.01,1,2,"DT")
3090504
"^DD",451.4,451.49,.01,1,2,"FIELD")
ETA TYPE OF TIME CODE
"^DD",451.4,451.49,.01,3)
Enter an ETA Type of Code in the Type of Time file.
"^DD",451.4,451.49,.01,12)
One ETA Type of Time Code can only be associated with one POC Time Code
"^DD",451.4,451.49,.01,12.1)
S DIC("S")="I $O(^PRSN(451.4,""C"",$P(^PRST(457.3,Y,0),U),0))']1"
"^DD",451.4,451.49,.01,"DT")
3090504
"^DD",451.4,451.49,1,0)
ETA TYPE OF TIME CODE^F^^0;2^K:$L(X)>2!($L(X)<2)!'(X'?1P.E) X
"^DD",451.4,451.49,1,3)
Answer must be 2 characters in length.
"^DD",451.4,451.49,1,5,1,0)
451.49^.01^2
"^DD",451.4,451.49,1,9)
^
"^DD",451.4,451.49,1,21,0)
^^1^1^3090504^
"^DD",451.4,451.49,1,21,1,0)
This is the code of the pointer field .01
"^DD",451.4,451.49,1,"DT")
3090504
"^DD",451.5,451.5,0)
FIELD^^1^2
"^DD",451.5,451.5,0,"DDA")
N
"^DD",451.5,451.5,0,"DT")
3090511
"^DD",451.5,451.5,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",451.5,451.5,0,"IX","B",451.5,.01)

"^DD",451.5,451.5,0,"NM","TYPE OF WORK")

"^DD",451.5,451.5,0,"PT",451.9999,5)

"^DD",451.5,451.5,0,"VRPK")
PRS
"^DD",451.5,451.5,.01,0)
WORK CODE^RF^^0;1^K:$L(X)>2!($L(X)<2)!'(X'?1P.E) X
"^DD",451.5,451.5,.01,1,0)
^.1
"^DD",451.5,451.5,.01,1,1,0)
451.5^B
"^DD",451.5,451.5,.01,1,1,1)
S ^PRSN(451.5,"B",$E(X,1,30),DA)=""
"^DD",451.5,451.5,.01,1,1,2)
K ^PRSN(451.5,"B",$E(X,1,30),DA)
"^DD",451.5,451.5,.01,3)
Answer must be 2 characters in length.
"^DD",451.5,451.5,.01,21,0)
^^2^2^3090707^
"^DD",451.5,451.5,.01,21,1,0)
The Work Code is a 2 letter code that reflects the type of work 
"^DD",451.5,451.5,.01,21,2,0)
that a nurse performs inside or outside of defined tour time.
"^DD",451.5,451.5,.01,"DT")
3090707
"^DD",451.5,451.5,1,0)
WORK DESCRIPTION^F^^0;2^K:$L(X)>30!($L(X)<3) X
"^DD",451.5,451.5,1,3)
Answer must be 3-30 characters in length.
"^DD",451.5,451.5,1,21,0)
^^3^3^3090707^
"^DD",451.5,451.5,1,21,1,0)
The Work Description is the explanatory text of the Work Code. Each Work 
"^DD",451.5,451.5,1,21,2,0)
Description is designated by a 2 character code. For example, Direct Care 
"^DD",451.5,451.5,1,21,3,0)
is DC, Light Duty is LD, etc.
"^DD",451.5,451.5,1,"DT")
3090707
"^DD",451.6,451.6,0)
FIELD^^1^2
"^DD",451.6,451.6,0,"DT")
3090708
"^DD",451.6,451.6,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",451.6,451.6,0,"IX","B",451.6,.01)

"^DD",451.6,451.6,0,"NM","REASON FOR OVERTIME")

"^DD",451.6,451.6,0,"PT",451.9999,7)

"^DD",451.6,451.6,0,"VRPK")
PRS
"^DD",451.6,451.6,.01,0)
OVERTIME CODE^RF^^0;1^K:$L(X)>2!($L(X)<2)!'(X'?1P.E) X
"^DD",451.6,451.6,.01,1,0)
^.1
"^DD",451.6,451.6,.01,1,1,0)
451.6^B
"^DD",451.6,451.6,.01,1,1,1)
S ^PRSN(451.6,"B",$E(X,1,30),DA)=""
"^DD",451.6,451.6,.01,1,1,2)
K ^PRSN(451.6,"B",$E(X,1,30),DA)
"^DD",451.6,451.6,.01,3)
Answer must be 2 characters in length.
"^DD",451.6,451.6,.01,21,0)
^.001^3^3^3090708^^
"^DD",451.6,451.6,.01,21,1,0)
The Overtime Code is a 2 letter code that reflects a nurse's 
"^DD",451.6,451.6,.01,21,2,0)
reason for working overtime.  For instance, the code EW stands for 
"^DD",451.6,451.6,.01,21,3,0)
Extreme Weather.
"^DD",451.6,451.6,.01,"DT")
3090708
"^DD",451.6,451.6,1,0)
OVERTIME DESCRIPTION^F^^0;2^K:$L(X)>40!($L(X)<3) X
"^DD",451.6,451.6,1,3)
Answer must be 3-40 characters in length.
"^DD",451.6,451.6,1,21,0)
^^3^3^3090708^
"^DD",451.6,451.6,1,21,1,0)
The Overtime Description is the explanatory text of the Overtime Code.
"^DD",451.6,451.6,1,21,2,0)
Each Overtime Description is designated by a 2 character code. For 
"^DD",451.6,451.6,1,21,3,0)
example Extreme Weather is EW, Unpredicted Patient Care is UP, etc.
"^DD",451.6,451.6,1,"DT")
3090708
"^DD",451.7,451.7,0)
FIELD^^15^16
"^DD",451.7,451.7,0,"DDA")
N
"^DD",451.7,451.7,0,"DT")
3111209
"^DD",451.7,451.7,0,"IX","B",451.7,.01)

"^DD",451.7,451.7,0,"NM","POC DAILY ACTIVITY EXTRACTION")

"^DD",451.7,451.7,0,"VRPK")
PRS
"^DD",451.7,451.7,.01,0)
SEQUENCE NUMBER^RNJ15,0X^^0;1^K:+X'=X!(X>999999999999999)!(X<0)!(X?.E1"."1.N) X
"^DD",451.7,451.7,.01,1,0)
^.1
"^DD",451.7,451.7,.01,1,1,0)
451.7^B
"^DD",451.7,451.7,.01,1,1,1)
S ^PRSN(451.7,"B",$E(X,1,30),DA)=""
"^DD",451.7,451.7,.01,1,1,2)
K ^PRSN(451.7,"B",$E(X,1,30),DA)
"^DD",451.7,451.7,.01,3)
Enter a next available consecutive sequence number.
"^DD",451.7,451.7,.01,21,0)
^^1^1^3090708^^
"^DD",451.7,451.7,.01,21,1,0)
This is the sequence number of the entry and it equals to its IEN of the entry.
"^DD",451.7,451.7,.01,"DT")
3090708
"^DD",451.7,451.7,1,0)
NURSE INSTITUTION^RP4'^DIC(4,^0;2^Q
"^DD",451.7,451.7,1,3)
This is the institution associated witht a nurses primary location.
"^DD",451.7,451.7,1,21,0)
^^1^1^3091023^
"^DD",451.7,451.7,1,21,1,0)
This is a pointer to the institution file (#4).
"^DD",451.7,451.7,1,"DT")
3091023
"^DD",451.7,451.7,2,0)
STATION NUMBER^RF^^0;3^K:$L(X)>5!($L(X)<3)!'(X?3.5NA) X
"^DD",451.7,451.7,2,3)
Answer must be 3-5 characters in length.
"^DD",451.7,451.7,2,21,0)
^^1^1^3091023^
"^DD",451.7,451.7,2,21,1,0)
This is the station number, field 99 of file 4.
"^DD",451.7,451.7,2,"DT")
3091023
"^DD",451.7,451.7,3,0)
TIME CARD RELEASE VERSION #^NJ3,0^^0;4^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1.N) X
"^DD",451.7,451.7,3,3)
Type a number between 1 and 999, 0 Decimal Digits
"^DD",451.7,451.7,3,21,0)
^.001^1^1^3090707^^^
"^DD",451.7,451.7,3,21,1,0)
This is the Time Card released version number assigned during releasing.
"^DD",451.7,451.7,3,"DT")
3090707
"^DD",451.7,451.7,4,0)
NURSE ID^NJ9,0^^0;5^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",451.7,451.7,4,3)
Enter a 9-digit identification for the nurse.
"^DD",451.7,451.7,4,21,0)
^^1^1^3090513^^
"^DD",451.7,451.7,4,21,1,0)
This is the identification of the nurse.
"^DD",451.7,451.7,4,"DT")
3090513
"^DD",451.7,451.7,5,0)
PAID EMPLOYEE IEN^P450'^PRSPC(^0;6^Q
"^DD",451.7,451.7,5,3)
Enter a valid IEN of Paid Employee File.
"^DD",451.7,451.7,5,21,0)
^^1^1^3090629^^
"^DD",451.7,451.7,5,21,1,0)
This is the IEN of the Paid Employee File of the nurse.
"^DD",451.7,451.7,5,"DT")
3090629
"^DD",451.7,451.7,6,0)
POC TIME RECORD DATE^NJ8,0^^0;7^K:+X'=X!(X>20991231)!(X<20090101)!(X?.E1"."1N.N) X
"^DD",451.7,451.7,6,3)
Type a Number between 20090101 and 20991231, 0 Decimal Digits
"^DD",451.7,451.7,6,21,0)
^.001^1^1^3090630^^^^
"^DD",451.7,451.7,6,21,1,0)
This the POC Time Record YYYYMMDD.
"^DD",451.7,451.7,6,"DT")
3090630
"^DD",451.7,451.7,7,0)
START TIME^F^^0;8^K:$L(X)>4!($L(X)<4)!'(X?4N&(X<2400)) X
"^DD",451.7,451.7,7,3)
Enter a 4-digit military time less than 2400.
"^DD",451.7,451.7,7,21,0)
^.001^2^2^3090707^^^^
"^DD",451.7,451.7,7,21,1,0)
This is the start time of a time segment. The start time is in 4-digit
"^DD",451.7,451.7,7,21,2,0)
military time format.
"^DD",451.7,451.7,7,"DT")
3090707
"^DD",451.7,451.7,8,0)
STOP TIME^FX^^0;9^K:$L(X)>4!($L(X)<4)!'(X?4N&((X'<15)&(X'>2400))) X
"^DD",451.7,451.7,8,3)
Enter an end 4-digit military time greater than 0015.
"^DD",451.7,451.7,8,21,0)
^^2^2^3090707^^^^
"^DD",451.7,451.7,8,21,1,0)
This is the end time of a time segment. The end time is in 4-digit military
"^DD",451.7,451.7,8,21,2,0)
time format.
"^DD",451.7,451.7,8,"DT")
3091027
"^DD",451.7,451.7,9,0)
POC TYPE OF TIME^F^^0;10^K:$L(X)>2!($L(X)<2)!'(X?2A) X
"^DD",451.7,451.7,9,3)
Enter a POC type of code.
"^DD",451.7,451.7,9,21,0)
^^1^1^3090513^
"^DD",451.7,451.7,9,21,1,0)
This is a POC type of time code from the File #451.4.
"^DD",451.7,451.7,9,"DT")
3090513
"^DD",451.7,451.7,10,0)
POC NURSE LOCATION^RP211.4'^NURSF(211.4,^0;11^Q
"^DD",451.7,451.7,10,3)
Enter a nurse work location.
"^DD",451.7,451.7,10,21,0)
^.001^1^1^3090708^^^^
"^DD",451.7,451.7,10,21,1,0)
This is the nurse location where the nurse works.
"^DD",451.7,451.7,10,"DT")
3090708
"^DD",451.7,451.7,11,0)
OVERTIME MANDATORY^S^Y:YES;N:NO;^0;12^Q
"^DD",451.7,451.7,11,3)
Enter 'Y' for Yes if overtime is mandatory.
"^DD",451.7,451.7,11,21,0)
^^2^2^3090707^
"^DD",451.7,451.7,11,21,1,0)
The value is 'Y' if overtime is mandatory. The value is 'N' or null if
"^DD",451.7,451.7,11,21,2,0)
overtime is not mandatory.
"^DD",451.7,451.7,11,"DT")
3090707
"^DD",451.7,451.7,12,0)
OVERTIME REASON^F^^0;13^K:$L(X)>2!($L(X)<2)!'(X?2A) X
"^DD",451.7,451.7,12,3)
Enter a 2-character code for Overtime Reason.
"^DD",451.7,451.7,12,21,0)
^^2^2^3090513^
"^DD",451.7,451.7,12,21,1,0)
This is a 2-character code for the overtime reason in File #451.6 Reason
"^DD",451.7,451.7,12,21,2,0)
for Overtime.
"^DD",451.7,451.7,12,"DT")
3090513
"^DD",451.7,451.7,13,0)
POC TYPE OF WORK^F^^0;14^K:$L(X)>2!($L(X)<2)!'(X?2A) X
"^DD",451.7,451.7,13,3)
Enter a 2-character Type of Work.
"^DD",451.7,451.7,13,21,0)
^^1^1^3090513^
"^DD",451.7,451.7,13,21,1,0)
This is a 2-character code of the File #451.5 Type of Work.
"^DD",451.7,451.7,13,"DT")
3090513
"^DD",451.7,451.7,14,0)
RELEASE DATE^D^^0;15^S %DT="E" D ^%DT S X=Y K:3090101>X X
"^DD",451.7,451.7,14,3)
Enter a release date of the POC DAILY TIME RECORD for extraction.
"^DD",451.7,451.7,14,21,0)
^^1^1^3090707^^^
"^DD",451.7,451.7,14,21,1,0)
This is the release date of the POC DAILY TIME RECORD for data extraction.
"^DD",451.7,451.7,14,23,0)
^^1^1^3090707^^^
"^DD",451.7,451.7,14,23,1,0)
The release date is used for purging entries in this file.
"^DD",451.7,451.7,14,"DT")
3090707
"^DD",451.7,451.7,15,0)
NURSE T&L UNIT^P455.5'^PRST(455.5,^0;16^Q
"^DD",451.7,451.7,15,21,0)
^^2^2^3111209^
"^DD",451.7,451.7,15,21,1,0)
This is the nurse T&L UNIT at the time of Approval of POC Daily Time 
"^DD",451.7,451.7,15,21,2,0)
Records.
"^DD",451.7,451.7,15,"DT")
3111209
"^DD",455.5,455.5,0)
FIELD^^20.5^16
"^DD",455.5,455.5,0,"DDA")
N
"^DD",455.5,455.5,0,"DT")
3111107
"^DD",455.5,455.5,0,"ID",1)
W "    ",$P($G(^(0)),U,2)
"^DD",455.5,455.5,0,"IX","AA",455.512,.01)

"^DD",455.5,455.5,0,"IX","AS",455.511,.01)

"^DD",455.5,455.5,0,"IX","ASX",455.511,1)

"^DD",455.5,455.5,0,"IX","AT",455.51,.01)

"^DD",455.5,455.5,0,"IX","B",455.5,.01)

"^DD",455.5,455.5,0,"NM","T&L UNIT")

"^DD",455.5,455.5,0,"PT",451.09,6)

"^DD",455.5,455.5,0,"PT",451.7,15)

"^DD",455.5,455.5,0,"PT",457.13,.01)

"^DD",455.5,455.5,0,"VRPK")
PRS
"^DD",455.5,455.5,.01,0)
CODE^RFX^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>3!($L(X)<3)!'(X?3N!(X?1"VC"1U)!(X?1"F"2N)) X
"^DD",455.5,455.5,.01,1,0)
^.1
"^DD",455.5,455.5,.01,1,1,0)
455.5^B
"^DD",455.5,455.5,.01,1,1,1)
S ^PRST(455.5,"B",$E(X,1,30),DA)=""
"^DD",455.5,455.5,.01,1,1,2)
K ^PRST(455.5,"B",$E(X,1,30),DA)
"^DD",455.5,455.5,.01,3)
ANSWER MUST BE 3 NUMBERS IN LENGTH OR 'VC' AND AN ALPHABETIC CHARACTER OR 'F' AND 2 NUMBERS
"^DD",455.5,455.5,.01,21,0)
^^2^2^2951128^^
"^DD",455.5,455.5,.01,21,1,0)
This field contains the three-character code assigned to the
"^DD",455.5,455.5,.01,21,2,0)
T&L Unit.
"^DD",455.5,455.5,.01,"DT")
2951128
"^DD",455.5,455.5,1,0)
NAME^F^^0;2^K:$L(X)>20!($L(X)<3) X
"^DD",455.5,455.5,1,3)
ANSWER MUST BE 3-20 CHARACTERS IN LENGTH
"^DD",455.5,455.5,1,21,0)
^^1^1^2881216^
"^DD",455.5,455.5,1,21,1,0)
This field contains a descriptive name for the T&L unit.
"^DD",455.5,455.5,2,0)
CURRENT PAY PERIOD STATUS^S^T:TIMEKEEPER CLOSED;P:PAYROLL REVIEWED;X:SENT TO AUSTIN;^0;3^Q
"^DD",455.5,455.5,2,21,0)
^^4^4^2881216^
"^DD",455.5,455.5,2,21,1,0)
This field indicates the status of the T&L unit for the
"^DD",455.5,455.5,2,21,2,0)
current pay period. The status is updated only when all
"^DD",455.5,455.5,2,21,3,0)
employees in the unit have been processed by the Timekeeper
"^DD",455.5,455.5,2,21,4,0)
or reviewed by Payroll.
"^DD",455.5,455.5,2,"DT")
2891020
"^DD",455.5,455.5,10,0)
TIMEKEEPER^455.51P^^T;0
"^DD",455.5,455.5,10,21,0)
^^1^1^2940114^^^
"^DD",455.5,455.5,10,21,1,0)
This field contains the Timekeepers assigned to the T&L Unit.
"^DD",455.5,455.5,11,0)
SUPERVISOR^455.511P^^S;0
"^DD",455.5,455.5,11,21,0)
^^3^3^2930202^^^^
"^DD",455.5,455.5,11,21,1,0)
This is a list of the persons who may function as OT/CT supervisors
"^DD",455.5,455.5,11,21,2,0)
in that they officially request OT/CT time and verify the time
"^DD",455.5,455.5,11,21,3,0)
worked for this T&L unit.
"^DD",455.5,455.5,11,"DT")
2920218
"^DD",455.5,455.5,12,0)
OT/CT APPROVER^455.512P^^A;0
"^DD",455.5,455.5,12,21,0)
^^2^2^2921215^^^
"^DD",455.5,455.5,12,21,1,0)
This is a list of persons who may function as OT/CT approving
"^DD",455.5,455.5,12,21,2,0)
officials for OT/CT requests from this T&L unit.
"^DD",455.5,455.5,12,"DT")
2920715
"^DD",455.5,455.5,20,0)
STATION #^RF^^0;4^K:$L(X)>3!($L(X)<3)!'(X?3N) X
"^DD",455.5,455.5,20,3)
Answer must be 3 digits in length.
"^DD",455.5,455.5,20,21,0)
^^2^2^2920819^^
"^DD",455.5,455.5,20,21,1,0)
This is a pointer to the Institution file and is the station
"^DD",455.5,455.5,20,21,2,0)
with which this T&L is associated.
"^DD",455.5,455.5,20,"DT")
2920330
"^DD",455.5,455.5,20.5,0)
MEDICAL CENTER DIVISION^*P4'^DIC(4,^1;1^S DIC("S")="I +$P($$SITE^VASITE(),U,3)=+$G(^DIC(4,+Y,99))&'$P($G(^DIC(4,+Y,99)),U,4)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",455.5,455.5,20.5,3)
Must be in the INSTITUTION file (#4) and associated with this facility.
"^DD",455.5,455.5,20.5,12)
Only allow selection of active divisions for this VistA instance.
"^DD",455.5,455.5,20.5,12.1)
S DIC("S")="I +$P($$SITE^VASITE(),U,3)=+$G(^DIC(4,+Y,99))&'$P($G(^DIC(4,+Y,99)),U,4)"
"^DD",455.5,455.5,20.5,21,0)
^^3^3^3090717^
"^DD",455.5,455.5,20.5,21,1,0)
This field points to an entry in the INSTITUTION file (#4).  It may be a
"^DD",455.5,455.5,20.5,21,2,0)
stand alone facility or in the case of an integrated site it could be the 
"^DD",455.5,455.5,20.5,21,3,0)
parent facility or any of its subordinates.
"^DD",455.5,455.5,20.5,"DT")
3111107
"^DD",455.5,455.5,21,0)
SERVICE^P49'^DIC(49,^0;5^Q
"^DD",455.5,455.5,21,21,0)
^^2^2^2901124^
"^DD",455.5,455.5,21,21,1,0)
This is a pointer into the Service/Section file (49) and indicates
"^DD",455.5,455.5,21,21,2,0)
the Service with which this T&L is associated.
"^DD",455.5,455.5,21,"DT")
2900319
"^DD",455.5,455.5,22,0)
SECTION^F^^0;6^K:$L(X)>20!($L(X)<3) X
"^DD",455.5,455.5,22,3)
Answer must be 3-20 characters in length.
"^DD",455.5,455.5,22,21,0)
^^2^2^2901124^
"^DD",455.5,455.5,22,21,1,0)
This is a free text field indicating the service sub-unit or
"^DD",455.5,455.5,22,21,2,0)
division with which this T&L unit is associated.
"^DD",455.5,455.5,22,"DT")
2920207
"^DD",455.5,455.5,23,0)
ENTITLED TO PREMIUMS?^RS^1:YES;0:NO;^0;7^Q
"^DD",455.5,455.5,23,21,0)
^^1^1^2921215^^
"^DD",455.5,455.5,23,21,1,0)
Indicates the time and leave unit is entitled to premium pay.
"^DD",455.5,455.5,23,"DT")
2920925
"^DD",455.5,455.5,24,0)
TIME SLEEP-TIME BEGINS^RFX^^0;8^D:$D(X) ^PRSATIM
"^DD",455.5,455.5,24,4)
D HLP^PRSATIM
"^DD",455.5,455.5,24,21,0)
^^2^2^2921215^^
"^DD",455.5,455.5,24,21,1,0)
When Sleep Time begins for Standby tours of duty in this time and
"^DD",455.5,455.5,24,21,2,0)
leave unit.
"^DD",455.5,455.5,24,"DT")
2920925
"^DD",455.5,455.5,30,0)
POC DATA ENTRY PERSONNEL^455.52P^^2;0
"^DD",455.5,455.5,30,21,0)
^^3^3^3090710^^^
"^DD",455.5,455.5,30,21,1,0)
This field contains persons that are responsible for entering additional
"^DD",455.5,455.5,30,21,2,0)
data about VA nurses time and attendance activity for this T&L unit that
"^DD",455.5,455.5,30,21,3,0)
will be used by the VANOD database.
"^DD",455.5,455.5,31,0)
POC DATA APPROVAL PERSONNEL^455.531P^^3;0
"^DD",455.5,455.5,31,21,0)
^^3^3^3090708^
"^DD",455.5,455.5,31,21,1,0)
This field contains persons that are responsible for approving additional
"^DD",455.5,455.5,31,21,2,0)
data about VA nurses time and attendance activity for this T&L unit that
"^DD",455.5,455.5,31,21,3,0)
will be used by the VANOD database.
"^DD",455.5,455.5,101,0)
PENDING CERTIFICATION ACTIONS^NJ4,0^^0;10^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X
"^DD",455.5,455.5,101,3)
Type a Number between 0 and 9999, 0 Decimal Digits
"^DD",455.5,455.5,101,21,0)
^^3^3^2950412^
"^DD",455.5,455.5,101,21,1,0)
This field contains the number of pending actions relating to leave,
"^DD",455.5,455.5,101,21,2,0)
overtime, tour changes, and prior pay period corrections which
"^DD",455.5,455.5,101,21,3,0)
require supervisory certification.
"^DD",455.5,455.5,101,"DT")
2950412
"^DD",455.5,455.5,102,0)
PENDING OT/PPA ACTIONS^NJ4,0^^0;11^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X
"^DD",455.5,455.5,102,3)
Type a Number between 0 and 9999, 0 Decimal Digits
"^DD",455.5,455.5,102,21,0)
^^2^2^2950523^
"^DD",455.5,455.5,102,21,1,0)
This field contains the number of OT/CT and Prior Pay Period
"^DD",455.5,455.5,102,21,2,0)
Adjustment actions requiring second-level approval.
"^DD",455.5,455.5,102,"DT")
2950523
"^DD",455.5,455.51,0)
TIMEKEEPER SUB-FIELD^^1^2
"^DD",455.5,455.51,0,"IX","B",455.51,.01)

"^DD",455.5,455.51,0,"NM","TIMEKEEPER")

"^DD",455.5,455.51,0,"UP")
455.5
"^DD",455.5,455.51,.01,0)
TIMEKEEPER^P200'X^VA(200,^0;1^I $D(X) S DINUM=X
"^DD",455.5,455.51,.01,1,0)
^.1
"^DD",455.5,455.51,.01,1,1,0)
455.51^B
"^DD",455.5,455.51,.01,1,1,1)
S ^PRST(455.5,DA(1),"T","B",$E(X,1,30),DA)=""
"^DD",455.5,455.51,.01,1,1,2)
K ^PRST(455.5,DA(1),"T","B",$E(X,1,30),DA)
"^DD",455.5,455.51,.01,1,2,0)
455.5^AT^MUMPS
"^DD",455.5,455.51,.01,1,2,1)
S ^PRST(455.5,"AT",DA,DA(1))=""
"^DD",455.5,455.51,.01,1,2,2)
K ^PRST(455.5,"AT",DA,DA(1))
"^DD",455.5,455.51,.01,1,2,"%D",0)
^.101^2^2^3090616^^^
"^DD",455.5,455.51,.01,1,2,"%D",1,0)
This is a cross-reference by User of all T&L units for which
"^DD",455.5,455.51,.01,1,2,"%D",2,0)
this user is a Timekeeper.
"^DD",455.5,455.51,.01,21,0)
^^2^2^2940114^^^^
"^DD",455.5,455.51,.01,21,1,0)
This field is a pointer to the New Person File (File 200) and is a
"^DD",455.5,455.51,.01,21,2,0)
timekeeper assigned to this T&L Unit.
"^DD",455.5,455.51,1,0)
ENTRY METHOD^RS^0:SINGLE STRING ENTRY;1:INDIVIDUAL PROMPTS;^0;2^Q
"^DD",455.5,455.51,1,21,0)
^^2^2^2881216^
"^DD",455.5,455.51,1,21,1,0)
This field contains the preferred data entry method for the
"^DD",455.5,455.51,1,21,2,0)
Timekeeper.
"^DD",455.5,455.51,1,"DT")
2880822
"^DD",455.5,455.511,0)
SUPERVISOR SUB-FIELD^^1^2
"^DD",455.5,455.511,0,"DT")
2920810
"^DD",455.5,455.511,0,"IX","B",455.511,.01)

"^DD",455.5,455.511,0,"NM","SUPERVISOR")

"^DD",455.5,455.511,0,"UP")
455.5
"^DD",455.5,455.511,.01,0)
SUPERVISOR^P200'X^VA(200,^0;1^I $D(X) S DINUM=X
"^DD",455.5,455.511,.01,1,0)
^.1
"^DD",455.5,455.511,.01,1,1,0)
455.511^B
"^DD",455.5,455.511,.01,1,1,1)
S ^PRST(455.5,DA(1),"S","B",$E(X,1,30),DA)=""
"^DD",455.5,455.511,.01,1,1,2)
K ^PRST(455.5,DA(1),"S","B",$E(X,1,30),DA)
"^DD",455.5,455.511,.01,1,2,0)
455.5^AS^MUMPS
"^DD",455.5,455.511,.01,1,2,1)
S ^PRST(455.5,"AS",DA,DA(1))=""
"^DD",455.5,455.511,.01,1,2,2)
K ^PRST(455.5,"AS",DA,DA(1))
"^DD",455.5,455.511,.01,1,2,"%D",0)
^^2^2^2940601^^
"^DD",455.5,455.511,.01,1,2,"%D",1,0)
This is a cross-reference by User of all T&L units of which
"^DD",455.5,455.511,.01,1,2,"%D",2,0)
the user is a supervisor.
"^DD",455.5,455.511,.01,21,0)
^^2^2^2921215^^
"^DD",455.5,455.511,.01,21,1,0)
This is a pointer to file 200 and represents a supervisor who
"^DD",455.5,455.511,.01,21,2,0)
may request and verify OT/CT for this T&L unit.
"^DD",455.5,455.511,.01,"DT")
2901110
"^DD",455.5,455.511,1,0)
T&L WHICH CERTIFIES SUPERVISOR^RF^^0;2^K:X[""""!($A(X)=45) X I $D(X) S DIC=455.5,DIC(0)="EMQ" D ^DIC K DIC S X=$P(Y,"^",2) K:$L(X)'=3 X
"^DD",455.5,455.511,1,1,0)
^.1^^-1
"^DD",455.5,455.511,1,1,1,0)
455.5^ASX^MUMPS
"^DD",455.5,455.511,1,1,1,1)
S ^PRST(455.5,"ASX",$E(X,1,30),DA,DA(1))=""
"^DD",455.5,455.511,1,1,1,2)
K ^PRST(455.5,"ASX",$E(X,1,30),DA,DA(1))
"^DD",455.5,455.511,1,1,1,"%D",0)
^^7^7^2980304^
"^DD",455.5,455.511,1,1,1,"%D",1,0)
This is a cross-reference by T&L Unit of supervisors certified by that T&L
"^DD",455.5,455.511,1,1,1,"%D",2,0)
Unit. It is used to find supervisory employees that should be included
"^DD",455.5,455.511,1,1,1,"%D",3,0)
when certifications or approvals are performed for the T&L.
"^DD",455.5,455.511,1,1,1,"%D",4,0)
  ^PRST(455.5,"ASX",X,DA,DA(1)) where:
"^DD",455.5,455.511,1,1,1,"%D",5,0)
    X is the T&L which certifies the supervisor (external value).
"^DD",455.5,455.511,1,1,1,"%D",6,0)
    DA is the supervisor's ien (equal to ien in file #200 due to DINUM).
"^DD",455.5,455.511,1,1,1,"%D",7,0)
    DA(1) is the ien of the T&L UNIT that the supervisor supervises.
"^DD",455.5,455.511,1,1,1,"DT")
2980304
"^DD",455.5,455.511,1,4)
N D,X,DIC,DO S DIC="^PRST(455.5,",DIC(0)="Q",D="B" D DQ^DICQ Q
"^DD",455.5,455.511,1,21,0)
^^3^3^2930202^
"^DD",455.5,455.511,1,21,1,0)
A supervisor from this T&L Unit will be displayed all actions
"^DD",455.5,455.511,1,21,2,0)
requiring approval of the supervisor. It will often be the 
"^DD",455.5,455.511,1,21,3,0)
Director's Office T&L for Service Chief supervisors for example.
"^DD",455.5,455.511,1,"DT")
3110909
"^DD",455.5,455.512,0)
OT/CT APPROVER SUB-FIELD^^.01^1
"^DD",455.5,455.512,0,"IX","B",455.512,.01)

"^DD",455.5,455.512,0,"NM","OT/CT APPROVER")

"^DD",455.5,455.512,0,"UP")
455.5
"^DD",455.5,455.512,.01,0)
OT/CT APPROVER^P200'X^VA(200,^0;1^I $D(X) S DINUM=X
"^DD",455.5,455.512,.01,1,0)
^.1
"^DD",455.5,455.512,.01,1,1,0)
455.512^B
"^DD",455.5,455.512,.01,1,1,1)
S ^PRST(455.5,DA(1),"A","B",$E(X,1,30),DA)=""
"^DD",455.5,455.512,.01,1,1,2)
K ^PRST(455.5,DA(1),"A","B",$E(X,1,30),DA)
"^DD",455.5,455.512,.01,1,2,0)
455.5^AA^MUMPS
"^DD",455.5,455.512,.01,1,2,1)
S ^PRST(455.5,"AA",DA,DA(1))=""
"^DD",455.5,455.512,.01,1,2,2)
K ^PRST(455.5,"AA",DA,DA(1))
"^DD",455.5,455.512,.01,1,2,"%D",0)
^.101^2^2^3090618^^
"^DD",455.5,455.512,.01,1,2,"%D",1,0)
This is a cross-reference by User of all T&L units for which the
"^DD",455.5,455.512,.01,1,2,"%D",2,0)
user is an OverTime/CompTime approver.
"^DD",455.5,455.512,.01,21,0)
^^2^2^2921215^^
"^DD",455.5,455.512,.01,21,1,0)
This is a pointer into file 200 and represents an OT/CT approver
"^DD",455.5,455.512,.01,21,2,0)
for this T&L unit.
"^DD",455.5,455.512,.01,"DT")
2901110
"^DD",455.5,455.52,0)
POC DATA ENTRY PERSONNEL SUB-FIELD^^.01^1
"^DD",455.5,455.52,0,"DT")
3090708
"^DD",455.5,455.52,0,"IX","AC",455.52,.01)

"^DD",455.5,455.52,0,"IX","B",455.52,.01)

"^DD",455.5,455.52,0,"NM","POC DATA ENTRY PERSONNEL")

"^DD",455.5,455.52,0,"UP")
455.5
"^DD",455.5,455.52,.01,0)
POC DATA ENTRY PERSONNEL^P200'^VA(200,^0;1^Q
"^DD",455.5,455.52,.01,1,0)
^.1
"^DD",455.5,455.52,.01,1,1,0)
455.52^B
"^DD",455.5,455.52,.01,1,1,1)
S ^PRST(455.5,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",455.5,455.52,.01,1,1,2)
K ^PRST(455.5,DA(1),2,"B",$E(X,1,30),DA)
"^DD",455.5,455.52,.01,1,2,0)
455.52^AC^MUMPS
"^DD",455.5,455.52,.01,1,2,1)
D ASSIGNKY^PRSNEETP(.X)
"^DD",455.5,455.52,.01,1,2,2)
D REMOVEKY^PRSNEETP(.DA,.X)
"^DD",455.5,455.52,.01,1,2,"%D",0)
^.101^6^6^3091217^^^
"^DD",455.5,455.52,.01,1,2,"%D",1,0)
This cross reference does not set any index.  It calls MUMPS code to 
"^DD",455.5,455.52,.01,1,2,"%D",2,0)
assign the PRSN DEP Security Key when a user is added to the POC Data 
"^DD",455.5,455.52,.01,1,2,"%D",3,0)
Entry Personnel multiple.  When a user is deleted from the multiple the 
"^DD",455.5,455.52,.01,1,2,"%D",4,0)
cross reference calls code to remove the security key.  The key won't be 
"^DD",455.5,455.52,.01,1,2,"%D",5,0)
removed if the user is also a POC Data Entry Personnel in another T&L 
"^DD",455.5,455.52,.01,1,2,"%D",6,0)
unit.
"^DD",455.5,455.52,.01,1,2,"DT")
3091217
"^DD",455.5,455.52,.01,3)
Select personnel responsible for entering Nurse POC data.
"^DD",455.5,455.52,.01,21,0)
^^3^3^3090708^
"^DD",455.5,455.52,.01,21,1,0)
This field points to the NEW PERSON file (#200) and identifies
"^DD",455.5,455.52,.01,21,2,0)
individuals that are responsible for entering Nurse POC data
"^DD",455.5,455.52,.01,21,3,0)
for this T&L unit.
"^DD",455.5,455.52,.01,"DT")
3091217
"^DD",455.5,455.531,0)
POC DATA APPROVAL PERSONNEL SUB-FIELD^^.01^1
"^DD",455.5,455.531,0,"DT")
3090511
"^DD",455.5,455.531,0,"IX","B",455.531,.01)

"^DD",455.5,455.531,0,"NM","POC DATA APPROVAL PERSONNEL")

"^DD",455.5,455.531,0,"UP")
455.5
"^DD",455.5,455.531,.01,0)
POC DATA APPROVAL PERSONNEL^P200'^VA(200,^0;1^Q
"^DD",455.5,455.531,.01,1,0)
^.1
"^DD",455.5,455.531,.01,1,1,0)
455.531^B
"^DD",455.5,455.531,.01,1,1,1)
S ^PRST(455.5,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",455.5,455.531,.01,1,1,2)
K ^PRST(455.5,DA(1),3,"B",$E(X,1,30),DA)
"^DD",455.5,455.531,.01,3)
Select personnel that will be responsible for Nurse POC data approval.
"^DD",455.5,455.531,.01,21,0)
^^2^2^3090708^
"^DD",455.5,455.531,.01,21,1,0)
This field points to the NEW PERSON file (#200) and identifies persons
"^DD",455.5,455.531,.01,21,2,0)
that are responsible for approving Nurse POC data for this T&L unit.
"^DD",455.5,455.531,.01,"DT")
3090710
"^DD",456,456,0)
FIELD^^5^6
"^DD",456,456,0,"DDA")
N
"^DD",456,456,0,"DT")
3111107
"^DD",456,456,0,"IX","B",456,.01)

"^DD",456,456,0,"NM","PAID PARAMETERS")

"^DD",456,456,0,"VRPK")
PRS
"^DD",456,456,.01,0)
INSTITUTION^R*P4'^DIC(4,^0;1^S DIC("S")="I +$P($$SITE^VASITE(),U,3)=+$G(^DIC(4,+Y,99))&'$P($G(^DIC(4,+Y,99)),U,4)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",456,456,.01,1,0)
^.1
"^DD",456,456,.01,1,1,0)
456^B
"^DD",456,456,.01,1,1,1)
S ^PRST(456,"B",$E(X,1,30),DA)=""
"^DD",456,456,.01,1,1,2)
K ^PRST(456,"B",$E(X,1,30),DA)
"^DD",456,456,.01,3)
Enter an Institution (Division) name.
"^DD",456,456,.01,12)
Allow only active divisions that are associated with the parent division
"^DD",456,456,.01,12.1)
S DIC("S")="I +$P($$SITE^VASITE(),U,3)=+$G(^DIC(4,+Y,99))&'$P($G(^DIC(4,+Y,99)),U,4)"
"^DD",456,456,.01,21,0)
^.001^2^2^3090622^^^^
"^DD",456,456,.01,21,1,0)
Enter a DIVISION (the same INSTITUTION name in File #4) these parameters
"^DD",456,456,.01,21,2,0)
apply to.
"^DD",456,456,.01,23,0)
^.001^2^2^3090622^^^^
"^DD",456,456,.01,23,1,0)
One entry per division for site parameters to handle multi divisional 
"^DD",456,456,.01,23,2,0)
sites.
"^DD",456,456,.01,"DT")
3111107
"^DD",456,456,1,0)
SEND AWS BULLETIN^S^0:NO;1:YES;^0;2^Q
"^DD",456,456,1,3)
Answer Yes to allow 9mo/3mo AWS bulletin to be sent to developers
"^DD",456,456,1,"DT")
3070725
"^DD",456,456,2,0)
AWS 9MO BULLETIN COUNT^NJ5,0I^^0;3^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1.N) X
"^DD",456,456,2,3)
Type a number between 0 and 99999, 0 Decimal Digits
"^DD",456,456,2,21,0)
^^3^3^3070730^
"^DD",456,456,2,21,1,0)
This field counts the number of bulletins that have been sent to the
"^DD",456,456,2,21,2,0)
developers notifying them when an employee has been identified as being
"^DD",456,456,2,21,3,0)
converted or beginning to work the 9 mo/3 mo AWS.
"^DD",456,456,2,23,0)
^^2^2^3070730^
"^DD",456,456,2,23,1,0)
Counter updated by code when bulletin is sent.  Code may impose a limit on
"^DD",456,456,2,23,2,0)
how many bulletins are sent.  Users should not edit this field.
"^DD",456,456,2,"DT")
3070730
"^DD",456,456,3,0)
AWS BULLETIN LIMIT^NJ4,0^^0;4^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1.N) X
"^DD",456,456,3,3)
Type a number between 0 and 9999, 0 Decimal Digits
"^DD",456,456,3,21,0)
^^3^3^3070725^
"^DD",456,456,3,21,1,0)
Please enter the number of bulletins that should be sent to the 
"^DD",456,456,3,21,2,0)
developers, once an employee is identified as working the 9 month/3 month 
"^DD",456,456,3,21,3,0)
alternative work schedule (AWS).
"^DD",456,456,3,23,0)
^^2^2^3070725^
"^DD",456,456,3,23,1,0)
Limit number of bulletins by not sending the bulletin once this limit is 
"^DD",456,456,3,23,2,0)
reached.  The limit is stored in field 2--AWS BULLETIN COUNTER.
"^DD",456,456,3,"DT")
3070725
"^DD",456,456,4,0)
AWS 36-40 BULLETIN COUNT^NJ4,0I^^0;5^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1.N) X
"^DD",456,456,4,3)
Type a number between 0 and 9999, 0 Decimal Digits
"^DD",456,456,4,21,0)
^^3^3^3070727^
"^DD",456,456,4,21,1,0)
This field counts the number of bulletins that have been sent to the 
"^DD",456,456,4,21,2,0)
developers notifying them when an employee has been identified as being 
"^DD",456,456,4,21,3,0)
converted or beginning to work the 36/40 AWS.
"^DD",456,456,4,"DT")
3070730
"^DD",456,456,5,0)
ACCESS TO NURSES FOR POC DATA^456.05^^1;0
"^DD",456,456,5,21,0)
^^4^4^3091002^
"^DD",456,456,5,21,1,0)
This multiple will identify the manner in which Data Entry Personnel and 
"^DD",456,456,5,21,2,0)
Data Approval Personnel will access the nurses in a division, either by 
"^DD",456,456,5,21,3,0)
Nurse Location or T&L Unit, and it will identify the Effective Pay Period 
"^DD",456,456,5,21,4,0)
for which the parameter was set.
"^DD",456,456.05,0)
ACCESS TO NURSES FOR POC DATA SUB-FIELD^^1^2
"^DD",456,456.05,0,"DT")
3090805
"^DD",456,456.05,0,"IX","B",456.05,.01)

"^DD",456,456.05,0,"NM","ACCESS TO NURSES FOR POC DATA")

"^DD",456,456.05,0,"UP")
456
"^DD",456,456.05,.01,0)
EFFECTIVE PAY PERIOD^RF^^0;1^K:$L(X)>5!($L(X)<5)!'(X?2N1"-"2N) X
"^DD",456,456.05,.01,1,0)
^.1
"^DD",456,456.05,.01,1,1,0)
456.05^B
"^DD",456,456.05,.01,1,1,1)
S ^PRST(456,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",456,456.05,.01,1,1,2)
K ^PRST(456,DA(1),1,"B",$E(X,1,30),DA)
"^DD",456,456.05,.01,3)
Answer must be in the form YY-PP.
"^DD",456,456.05,.01,21,0)
^^2^2^3090805^
"^DD",456,456.05,.01,21,1,0)
This is the effective pay period for which ACCESS TO NURSES FOR POC 
"^DD",456,456.05,.01,21,2,0)
DATA is set to either T&L Unit or Nurse Location.
"^DD",456,456.05,.01,"DT")
3090805
"^DD",456,456.05,1,0)
ACCESS TO NURSES FOR POC DATA^RS^T:T&L Unit;N:Nurse Location;^0;2^Q
"^DD",456,456.05,1,.1)
NURSE ACCESS
"^DD",456,456.05,1,1,0)
^.1^^0
"^DD",456,456.05,1,3)
Select the method for which this Medical Center Division will access VA Nurse for data entry and approval
"^DD",456,456.05,1,21,0)
^^3^3^3090805^
"^DD",456,456.05,1,21,1,0)
This field describes how Data Entry Personnel and Data Approval Personnel 
"^DD",456,456.05,1,21,2,0)
will access VA Nurses for this division.  They can choose between T&L 
"^DD",456,456.05,1,21,3,0)
Unit or Nurse Location.
"^DD",456,456.05,1,"DT")
3090805
"^DD",457.3,457.3,0)
FIELD^^2^3
"^DD",457.3,457.3,0,"DT")
2920605
"^DD",457.3,457.3,0,"ID","WRITE")
W "   ",$P(^(0),U,2)
"^DD",457.3,457.3,0,"IX","B",457.3,.01)

"^DD",457.3,457.3,0,"NM","TYPE OF TIME")

"^DD",457.3,457.3,0,"PT",451.49,.01)

"^DD",457.3,457.3,.01,0)
CODE^RF^^0;1^K:$L(X)>2!($L(X)<2)!'(X'?1P.E) X
"^DD",457.3,457.3,.01,1,0)
^.1
"^DD",457.3,457.3,.01,1,1,0)
457.3^B
"^DD",457.3,457.3,.01,1,1,1)
S ^PRST(457.3,"B",$E(X,1,30),DA)=""
"^DD",457.3,457.3,.01,1,1,2)
K ^PRST(457.3,"B",$E(X,1,30),DA)
"^DD",457.3,457.3,.01,3)
Answer must be 2 characters in length.
"^DD",457.3,457.3,.01,21,0)
^^2^2^2921105^
"^DD",457.3,457.3,.01,21,1,0)
The two character code that identifies a type of time used in time card
"^DD",457.3,457.3,.01,21,2,0)
posting.
"^DD",457.3,457.3,.01,"DT")
2920117
"^DD",457.3,457.3,1,0)
SHORT DESCRIPTION^F^^0;2^K:$L(X)>10!($L(X)<1) X
"^DD",457.3,457.3,1,3)
Answer must be 1-10 characters in length.
"^DD",457.3,457.3,1,21,0)
^^1^1^2921105^
"^DD",457.3,457.3,1,21,1,0)
A short description of the type of time used in time card posting.
"^DD",457.3,457.3,1,"DT")
2920117
"^DD",457.3,457.3,2,0)
LONG DESCRIPTION^F^^0;3^K:$L(X)>50!($L(X)<3) X
"^DD",457.3,457.3,2,3)
Answer must be 3-50 characters in length.
"^DD",457.3,457.3,2,21,0)
^^1^1^2921105^
"^DD",457.3,457.3,2,21,1,0)
The full description of the type of time used in time card posting.
"^DD",457.3,457.3,2,"DT")
2920117
"^DIC",451,451,0)
POC DAILY TIME RECORDS^451
"^DIC",451,451,0,"GL")
^PRSN(451,
"^DIC",451,451,"%",0)
^1.005^^0
"^DIC",451,451,"%D",0)
^^3^3^3090708^
"^DIC",451,451,"%D",1,0)
The file stores all nurse Point of Care (POC) data for direct patient
"^DIC",451,451,"%D",2,0)
care and non-direct nurses. The POC data includes the daily time card 
"^DIC",451,451,"%D",3,0)
records and its approval, release and correction information.
"^DIC",451,"B","POC DAILY TIME RECORDS",451)

"^DIC",451.1,451.1,0)
NURSE ROLE^451.1
"^DIC",451.1,451.1,0,"GL")
^PRSN(451.1,
"^DIC",451.1,451.1,"%D",0)
^^7^7^3090707^
"^DIC",451.1,451.1,"%D",1,0)
Nurse Roles correspond to codes from VA Human Resources and Finance 
"^DIC",451.1,451.1,"%D",2,0)
databases, which were used in making the nursing roles determination.  
"^DIC",451.1,451.1,"%D",3,0)
Cost center, budget object code, occupation series code, and assignment 
"^DIC",451.1,451.1,"%D",4,0)
codes are all utilized to determine a nursing role.
"^DIC",451.1,451.1,"%D",5,0)
 
"^DIC",451.1,451.1,"%D",6,0)
This file is exported with data and the contents of the file should not be
"^DIC",451.1,451.1,"%D",7,0)
locally modified.
"^DIC",451.1,"B","NURSE ROLE",451.1)

"^DIC",451.4,451.4,0)
POC TYPE OF TIME^451.4
"^DIC",451.4,451.4,0,"GL")
^PRSN(451.4,
"^DIC",451.4,451.4,"%",0)
^1.005^^0
"^DIC",451.4,451.4,"%D",0)
^1.001^1^1^3090520^^^
"^DIC",451.4,451.4,"%D",1,0)
The file stores all POC Types of Time with their associated ETA Types of Time.
"^DIC",451.4,"B","POC TYPE OF TIME",451.4)

"^DIC",451.5,451.5,0)
TYPE OF WORK^451.5
"^DIC",451.5,451.5,0,"GL")
^PRSN(451.5,
"^DIC",451.5,451.5,"%D",0)
^^6^6^3090707^
"^DIC",451.5,451.5,"%D",1,0)
This file contains codes for types of work a nurse may perform in a 
"^DIC",451.5,451.5,"%D",2,0)
medical setting.  Examples include Direct Care, Light Duty, On Site 
"^DIC",451.5,451.5,"%D",3,0)
Education.
"^DIC",451.5,451.5,"%D",4,0)
 
"^DIC",451.5,451.5,"%D",5,0)
This file is exported with data and the contents of the file should not
"^DIC",451.5,451.5,"%D",6,0)
be locally modified.
"^DIC",451.5,"B","TYPE OF WORK",451.5)

"^DIC",451.6,451.6,0)
REASON FOR OVERTIME^451.6
"^DIC",451.6,451.6,0,"GL")
^PRSN(451.6,
"^DIC",451.6,451.6,"%D",0)
^^6^6^3090708^
"^DIC",451.6,451.6,"%D",1,0)
This file contains codes for reasons why a nurse may work overtime.
"^DIC",451.6,451.6,"%D",2,0)
Examples include Extreme Weather, Sitter Needed, and Unpredicted
"^DIC",451.6,451.6,"%D",3,0)
Patient Care.
"^DIC",451.6,451.6,"%D",4,0)
 
"^DIC",451.6,451.6,"%D",5,0)
This file is exported with data and the contents of the file should not be
"^DIC",451.6,451.6,"%D",6,0)
locally modified.
"^DIC",451.6,"B","REASON FOR OVERTIME",451.6)

"^DIC",451.7,451.7,0)
POC DAILY ACTIVITY EXTRACTION^451.7
"^DIC",451.7,451.7,0,"GL")
^PRSN(451.7,
"^DIC",451.7,451.7,"%",0)
^1.005^^0
"^DIC",451.7,451.7,"%D",0)
^^3^3^3090708^^^
"^DIC",451.7,451.7,"%D",1,0)
The file stores the released POC Daily Time Records from the
"^DIC",451.7,451.7,"%D",2,0)
POC DAILY TIME RECORDS (#451) FILE for extracting by other applications.
"^DIC",451.7,451.7,"%D",3,0)
Entries are set up without user interactions.
"^DIC",451.7,"B","POC DAILY ACTIVITY EXTRACTION",451.7)

"^DIC",455.5,455.5,0)
T&L UNIT^455.5
"^DIC",455.5,455.5,0,"GL")
^PRST(455.5,
"^DIC",455.5,455.5,"%D",0)
^^2^2^2941202^^^
"^DIC",455.5,455.5,"%D",1,0)
This file contains the list of T&L units established by a station
"^DIC",455.5,455.5,"%D",2,0)
as well as the associated timekeepers.
"^DIC",455.5,"B","T&L UNIT",455.5)

"^DIC",456,456,0)
PAID PARAMETERS^456
"^DIC",456,456,0,"GL")
^PRST(456,
"^DIC",456,456,"%",0)
^1.005^^0
"^DIC",456,456,"%D",0)
^^5^5^3090708^
"^DIC",456,456,"%D",1,0)
The PAID PARAMETERS file contains data that is specific to the 
"^DIC",456,456,"%D",2,0)
administration of Nurse Alternate Work Schedules, such as whether
"^DIC",456,456,"%D",3,0)
to send notification bulletins and how many should be sent.  It also
"^DIC",456,456,"%D",4,0)
defines the manner in which nurses shall be accessed for Nurse POC
"^DIC",456,456,"%D",5,0)
records.
"^DIC",456,"B","PAID PARAMETERS",456)

"^DIC",457.3,457.3,0)
TYPE OF TIME^457.3I
"^DIC",457.3,457.3,0,"GL")
^PRST(457.3,
"^DIC",457.3,457.3,"%D",0)
^^5^5^2920601^^
"^DIC",457.3,457.3,"%D",1,0)
This file contains a list of Types of Time which may be used
"^DIC",457.3,457.3,"%D",2,0)
in posting. Most of the entries are either types of leave or
"^DIC",457.3,457.3,"%D",3,0)
Overtime/Comp time.
"^DIC",457.3,457.3,"%D",4,0)
 
"^DIC",457.3,457.3,"%D",5,0)
This file should not be altered except as instructed.
"^DIC",457.3,"B","TYPE OF TIME",457.3)

"BLD",8564,6)
^121
**END**
**END**
