Released PRS*4*132 SEQ #124
Extracted from mail message
**KIDS**:PRS*4.0*132^

**INSTALL NAME**
PRS*4.0*132
"BLD",9033,0)
PRS*4.0*132^PAID^0^3120710^y
"BLD",9033,4,0)
^9.64PA^454^3
"BLD",9033,4,450,0)
450
"BLD",9033,4,450,2,0)
^9.641^450^1
"BLD",9033,4,450,2,450,0)
PAID EMPLOYEE  (File-top level)
"BLD",9033,4,450,2,450,1,0)
^9.6411^634^1
"BLD",9033,4,450,2,450,1,634,0)
TELEWORK INDICATOR
"BLD",9033,4,450,222)
y^y^p^^^^n^^n
"BLD",9033,4,450,224)

"BLD",9033,4,454,0)
454
"BLD",9033,4,454,2,0)
^9.641^454.0131^1
"BLD",9033,4,454,2,454.0131,0)
TELEWORK INDICATOR  (sub-file)
"BLD",9033,4,454,2,454.0131,1,0)
^9.6411^^0
"BLD",9033,4,454,222)
y^y^p^^^^n^^n
"BLD",9033,4,454,224)

"BLD",9033,4,458,0)
458
"BLD",9033,4,458,2,0)
^9.641^458.02^2
"BLD",9033,4,458,2,458.01,0)
EMPLOYEE  (sub-file)
"BLD",9033,4,458,2,458.01,1,0)
^9.6411^7^1
"BLD",9033,4,458,2,458.01,1,7,0)
TELEWORK INDICATOR
"BLD",9033,4,458,2,458.02,0)
DAY #  (sub-file)
"BLD",9033,4,458,2,458.02,1,0)
^9.6411^75^5
"BLD",9033,4,458,2,458.02,1,71,0)
TELEWORK HOURS SCHEDULED
"BLD",9033,4,458,2,458.02,1,72,0)
TELEWORK HOURS MEDICAL
"BLD",9033,4,458,2,458.02,1,73,0)
TELEWORK HRS AD HOC SITU
"BLD",9033,4,458,2,458.02,1,74,0)
TELEWORK TOUR
"BLD",9033,4,458,2,458.02,1,75,0)
TELEWORK PRIOR SCHEDULED TOUR
"BLD",9033,4,458,222)
y^y^p^^^^n^^n
"BLD",9033,4,458,224)

"BLD",9033,4,"APDD",450,450)

"BLD",9033,4,"APDD",450,450,634)

"BLD",9033,4,"APDD",454,454.0131)

"BLD",9033,4,"APDD",458,458.01)

"BLD",9033,4,"APDD",458,458.01,7)

"BLD",9033,4,"APDD",458,458.02)

"BLD",9033,4,"APDD",458,458.02,71)

"BLD",9033,4,"APDD",458,458.02,72)

"BLD",9033,4,"APDD",458,458.02,73)

"BLD",9033,4,"APDD",458,458.02,74)

"BLD",9033,4,"APDD",458,458.02,75)

"BLD",9033,4,"B",450,450)

"BLD",9033,4,"B",454,454)

"BLD",9033,4,"B",458,458)

"BLD",9033,6.3)
13
"BLD",9033,"ABPKG")
n
"BLD",9033,"INIT")
POSTINS^PRSXP132
"BLD",9033,"KRN",0)
^9.67PA^779.2^20
"BLD",9033,"KRN",.4,0)
.4
"BLD",9033,"KRN",.401,0)
.401
"BLD",9033,"KRN",.402,0)
.402
"BLD",9033,"KRN",.403,0)
.403
"BLD",9033,"KRN",.403,"NM",0)
^9.68A^1^1
"BLD",9033,"KRN",.403,"NM",1,0)
PRSA TE EDIT    FILE #458^458^0
"BLD",9033,"KRN",.403,"NM","B","PRSA TE EDIT    FILE #458",1)

"BLD",9033,"KRN",.5,0)
.5
"BLD",9033,"KRN",.84,0)
.84
"BLD",9033,"KRN",3.6,0)
3.6
"BLD",9033,"KRN",3.8,0)
3.8
"BLD",9033,"KRN",9.2,0)
9.2
"BLD",9033,"KRN",9.2,"NM",0)
^9.68A^1^1
"BLD",9033,"KRN",9.2,"NM",1,0)
PRSA ENTER TW^^0
"BLD",9033,"KRN",9.2,"NM","B","PRSA ENTER TW",1)

"BLD",9033,"KRN",9.8,0)
9.8
"BLD",9033,"KRN",9.8,"NM",0)
^9.68A^30^30
"BLD",9033,"KRN",9.8,"NM",1,0)
PRS8UP^^0^B44269268
"BLD",9033,"KRN",9.8,"NM",2,0)
PRS8VW^^0^B16581161
"BLD",9033,"KRN",9.8,"NM",3,0)
PRS8VW2^^0^B26531664
"BLD",9033,"KRN",9.8,"NM",4,0)
PRSADP1^^0^B16274720
"BLD",9033,"KRN",9.8,"NM",5,0)
PRSADP2^^0^B21796691
"BLD",9033,"KRN",9.8,"NM",6,0)
PRSAPPO^^0^B17844809
"BLD",9033,"KRN",9.8,"NM",7,0)
PRSAPPP^^0^B13937943
"BLD",9033,"KRN",9.8,"NM",8,0)
PRSAPPQ^^0^B11158277
"BLD",9033,"KRN",9.8,"NM",9,0)
PRSAPRT^^0^B6196723
"BLD",9033,"KRN",9.8,"NM",10,0)
PRSASC1^^0^B29081248
"BLD",9033,"KRN",9.8,"NM",11,0)
PRSASC3^^0^B8013769
"BLD",9033,"KRN",9.8,"NM",12,0)
PRSASR^^0^B52733840
"BLD",9033,"KRN",9.8,"NM",13,0)
PRSATE^^0^B89337517
"BLD",9033,"KRN",9.8,"NM",14,0)
PRSATE0^^0^B20872988
"BLD",9033,"KRN",9.8,"NM",15,0)
PRSATE1^^0^B4303406
"BLD",9033,"KRN",9.8,"NM",16,0)
PRSATE2^^0^B22049849
"BLD",9033,"KRN",9.8,"NM",17,0)
PRSATE3^^0^B9035867
"BLD",9033,"KRN",9.8,"NM",18,0)
PRSATE6^^0^B59872089
"BLD",9033,"KRN",9.8,"NM",19,0)
PRSATP^^0^B34908799
"BLD",9033,"KRN",9.8,"NM",20,0)
PRSATPP^^0^B22461168
"BLD",9033,"KRN",9.8,"NM",21,0)
PRSATPTW^^0^B41651575
"BLD",9033,"KRN",9.8,"NM",22,0)
PRSAUD^^0^B2443135
"BLD",9033,"KRN",9.8,"NM",23,0)
PRSAUDP^^0^B10198895
"BLD",9033,"KRN",9.8,"NM",24,0)
PRSDEU14^^0^B15099553
"BLD",9033,"KRN",9.8,"NM",25,0)
PRSDLD19^^0^B5705805
"BLD",9033,"KRN",9.8,"NM",26,0)
PRSDSRS^^0^B20598813
"BLD",9033,"KRN",9.8,"NM",27,0)
PRSDVTBL^^0^B32289821
"BLD",9033,"KRN",9.8,"NM",28,0)
PRS8CR^^0^B11394851
"BLD",9033,"KRN",9.8,"NM",29,0)
PRSXP132^^0^B8320610
"BLD",9033,"KRN",9.8,"NM",30,0)
PRSACED6^^0^B5586294
"BLD",9033,"KRN",9.8,"NM","B","PRS8CR",28)

"BLD",9033,"KRN",9.8,"NM","B","PRS8UP",1)

"BLD",9033,"KRN",9.8,"NM","B","PRS8VW",2)

"BLD",9033,"KRN",9.8,"NM","B","PRS8VW2",3)

"BLD",9033,"KRN",9.8,"NM","B","PRSACED6",30)

"BLD",9033,"KRN",9.8,"NM","B","PRSADP1",4)

"BLD",9033,"KRN",9.8,"NM","B","PRSADP2",5)

"BLD",9033,"KRN",9.8,"NM","B","PRSAPPO",6)

"BLD",9033,"KRN",9.8,"NM","B","PRSAPPP",7)

"BLD",9033,"KRN",9.8,"NM","B","PRSAPPQ",8)

"BLD",9033,"KRN",9.8,"NM","B","PRSAPRT",9)

"BLD",9033,"KRN",9.8,"NM","B","PRSASC1",10)

"BLD",9033,"KRN",9.8,"NM","B","PRSASC3",11)

"BLD",9033,"KRN",9.8,"NM","B","PRSASR",12)

"BLD",9033,"KRN",9.8,"NM","B","PRSATE",13)

"BLD",9033,"KRN",9.8,"NM","B","PRSATE0",14)

"BLD",9033,"KRN",9.8,"NM","B","PRSATE1",15)

"BLD",9033,"KRN",9.8,"NM","B","PRSATE2",16)

"BLD",9033,"KRN",9.8,"NM","B","PRSATE3",17)

"BLD",9033,"KRN",9.8,"NM","B","PRSATE6",18)

"BLD",9033,"KRN",9.8,"NM","B","PRSATP",19)

"BLD",9033,"KRN",9.8,"NM","B","PRSATPP",20)

"BLD",9033,"KRN",9.8,"NM","B","PRSATPTW",21)

"BLD",9033,"KRN",9.8,"NM","B","PRSAUD",22)

"BLD",9033,"KRN",9.8,"NM","B","PRSAUDP",23)

"BLD",9033,"KRN",9.8,"NM","B","PRSDEU14",24)

"BLD",9033,"KRN",9.8,"NM","B","PRSDLD19",25)

"BLD",9033,"KRN",9.8,"NM","B","PRSDSRS",26)

"BLD",9033,"KRN",9.8,"NM","B","PRSDVTBL",27)

"BLD",9033,"KRN",9.8,"NM","B","PRSXP132",29)

"BLD",9033,"KRN",19,0)
19
"BLD",9033,"KRN",19,"NM",0)
^9.68A^^
"BLD",9033,"KRN",19.1,0)
19.1
"BLD",9033,"KRN",101,0)
101
"BLD",9033,"KRN",409.61,0)
409.61
"BLD",9033,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",9033,"KRN",771,0)
771
"BLD",9033,"KRN",771,"NM",0)
^9.68A^^
"BLD",9033,"KRN",779.2,0)
779.2
"BLD",9033,"KRN",870,0)
870
"BLD",9033,"KRN",8989.51,0)
8989.51
"BLD",9033,"KRN",8989.52,0)
8989.52
"BLD",9033,"KRN",8994,0)
8994
"BLD",9033,"KRN","B",.4,.4)

"BLD",9033,"KRN","B",.401,.401)

"BLD",9033,"KRN","B",.402,.402)

"BLD",9033,"KRN","B",.403,.403)

"BLD",9033,"KRN","B",.5,.5)

"BLD",9033,"KRN","B",.84,.84)

"BLD",9033,"KRN","B",3.6,3.6)

"BLD",9033,"KRN","B",3.8,3.8)

"BLD",9033,"KRN","B",9.2,9.2)

"BLD",9033,"KRN","B",9.8,9.8)

"BLD",9033,"KRN","B",19,19)

"BLD",9033,"KRN","B",19.1,19.1)

"BLD",9033,"KRN","B",101,101)

"BLD",9033,"KRN","B",409.61,409.61)

"BLD",9033,"KRN","B",771,771)

"BLD",9033,"KRN","B",779.2,779.2)

"BLD",9033,"KRN","B",870,870)

"BLD",9033,"KRN","B",8989.51,8989.51)

"BLD",9033,"KRN","B",8989.52,8989.52)

"BLD",9033,"KRN","B",8994,8994)

"BLD",9033,"QUES",0)
^9.62^^
"BLD",9033,"REQB",0)
^9.611^1^1
"BLD",9033,"REQB",1,0)
PRS*4.0*126^2
"BLD",9033,"REQB","B","PRS*4.0*126",1)

"FIA",450)
PAID EMPLOYEE
"FIA",450,0)
^PRSPC(
"FIA",450,0,0)
450I
"FIA",450,0,1)
y^y^p^^^^n^^n
"FIA",450,0,10)

"FIA",450,0,11)

"FIA",450,0,"RLRO")

"FIA",450,0,"VR")
4.0^PRS
"FIA",450,450)
1
"FIA",450,450,634)

"FIA",454)
PAID CODE FILES
"FIA",454,0)
^PRSP(454,
"FIA",454,0,0)
454
"FIA",454,0,1)
y^y^p^^^^n^^n
"FIA",454,0,10)

"FIA",454,0,11)

"FIA",454,0,"RLRO")

"FIA",454,0,"VR")
4.0^PRS
"FIA",454,454)
1
"FIA",454,454,131)

"FIA",454,454.0131)
0
"FIA",458)
TIME & ATTENDANCE RECORDS
"FIA",458,0)
^PRST(458,
"FIA",458,0,0)
458
"FIA",458,0,1)
y^y^p^^^^n^^n
"FIA",458,0,10)

"FIA",458,0,11)

"FIA",458,0,"RLRO")

"FIA",458,0,"VR")
4.0^PRS
"FIA",458,458)
1
"FIA",458,458.01)
1
"FIA",458,458.01,7)

"FIA",458,458.02)
1
"FIA",458,458.02,71)

"FIA",458,458.02,72)

"FIA",458,458.02,73)

"FIA",458,458.02,74)

"FIA",458,458.02,75)

"INIT")
POSTINS^PRSXP132
"KRN",.403,28,-1)
0^1
"KRN",.403,28,0)
PRSA TE EDIT^^^^2920813^^^458^0^0^1
"KRN",.403,28,20)
D VAL^PRSATE0
"KRN",.403,28,40,0)
^.4031I^1^1
"KRN",.403,28,40,1,0)
1^^1,1
"KRN",.403,28,40,1,1)
Page 1
"KRN",.403,28,40,1,40,0)
^.4032PI^89^1
"KRN",.403,28,40,1,40,89,0)
PRSA TE EDIT^1^1,1^e
"KRN",.404,89,0)
PRSA TE EDIT^458.01
"KRN",.404,89,40,0)
^.4044I^34^34
"KRN",.404,89,40,1,0)
1^VA TIME & ATTENDANCE SYSTEM^1^
"KRN",.404,89,40,1,2)
^^1,27
"KRN",.404,89,40,2,0)
2^EMPLOYEE TOUR OF DUTY^1^
"KRN",.404,89,40,2,2)
^^2,30^
"KRN",.404,89,40,3,0)
3^!M^1^
"KRN",.404,89,40,3,.1)
S Y=$P(^PRSPC(DFN,0),"^",1)
"KRN",.404,89,40,3,2)
^^4,1^
"KRN",.404,89,40,4,0)
4^!M^1^
"KRN",.404,89,40,4,.1)
S Y=$P($G(^PRSPC(DFN,0)),"^",9) S:Y'="" Y=$E(Y)_"XX-XX-"_$E(Y,6,9)
"KRN",.404,89,40,4,2)
^^4,66
"KRN",.404,89,40,5,0)
5^!M^1^
"KRN",.404,89,40,5,.1)
S Y="TW  Week 1 - "_$E(Y1,5,13)_"             TW  Week 2 - "_$E(Y2,5,13)
"KRN",.404,89,40,5,2)
^^6,6
"KRN",.404,89,40,6,0)
11^Sun^3
"KRN",.404,89,40,6,1)
201
"KRN",.404,89,40,6,2)
8,10^30^8,1^1
"KRN",.404,89,40,6,4)
1
"KRN",.404,89,40,6,12)
I $G(PRSTW(1))]"",X,X<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=10.8
"KRN",.404,89,40,7,0)
12^Mon^3
"KRN",.404,89,40,7,1)
202
"KRN",.404,89,40,7,2)
9,10^30^9,1^1
"KRN",.404,89,40,7,4)
1
"KRN",.404,89,40,7,12)
I $G(PRSTW(2))]"",X,X<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=11.8
"KRN",.404,89,40,8,0)
13^Tue^3
"KRN",.404,89,40,8,1)
203
"KRN",.404,89,40,8,2)
10,10^30^10,1^1
"KRN",.404,89,40,8,4)
1
"KRN",.404,89,40,8,12)
I $G(PRSTW(3))]"",X,X<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=12.8
"KRN",.404,89,40,9,0)
14^Wed^3
"KRN",.404,89,40,9,1)
204
"KRN",.404,89,40,9,2)
11,10^30^11,1^1
"KRN",.404,89,40,9,4)
1
"KRN",.404,89,40,9,12)
I $G(PRSTW(4))]"",X,X<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=13.8
"KRN",.404,89,40,10,0)
15^Thu^3
"KRN",.404,89,40,10,1)
205
"KRN",.404,89,40,10,2)
12,10^30^12,1^1
"KRN",.404,89,40,10,4)
1
"KRN",.404,89,40,10,12)
I $G(PRSTW(5))]"",X,X<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=14.8
"KRN",.404,89,40,11,0)
16^Fri^3
"KRN",.404,89,40,11,1)
206
"KRN",.404,89,40,11,2)
13,10^30^13,1^1
"KRN",.404,89,40,11,4)
1
"KRN",.404,89,40,11,12)
I $G(PRSTW(6))]"",X,X<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=15.8
"KRN",.404,89,40,12,0)
17^Sat^3
"KRN",.404,89,40,12,1)
207
"KRN",.404,89,40,12,2)
14,10^30^14,1^1
"KRN",.404,89,40,12,4)
1
"KRN",.404,89,40,12,12)
I $G(PRSTW(7))]"",X,X<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=16.8
"KRN",.404,89,40,13,0)
18^^3
"KRN",.404,89,40,13,1)
208
"KRN",.404,89,40,13,2)
8,45^30
"KRN",.404,89,40,13,4)
1
"KRN",.404,89,40,13,12)
I $G(PRSTW(8))]"",X,X<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=17.8
"KRN",.404,89,40,14,0)
19^^3
"KRN",.404,89,40,14,1)
209
"KRN",.404,89,40,14,2)
9,45^30
"KRN",.404,89,40,14,4)
1
"KRN",.404,89,40,14,12)
I $G(PRSTW(9))]"",X,X<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=18.8
"KRN",.404,89,40,15,0)
20^^3
"KRN",.404,89,40,15,1)
210
"KRN",.404,89,40,15,2)
10,45^30
"KRN",.404,89,40,15,4)
1
"KRN",.404,89,40,15,12)
I $G(PRSTW(10))]"",X,X<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=19.8
"KRN",.404,89,40,16,0)
21^^3
"KRN",.404,89,40,16,1)
211
"KRN",.404,89,40,16,2)
11,45^30
"KRN",.404,89,40,16,4)
1
"KRN",.404,89,40,16,12)
I $G(PRSTW(11))]"",X,X<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=20.8
"KRN",.404,89,40,17,0)
22^^3
"KRN",.404,89,40,17,1)
212
"KRN",.404,89,40,17,2)
12,45^30
"KRN",.404,89,40,17,4)
1
"KRN",.404,89,40,17,12)
I $G(PRSTW(12))]"",X,X<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=21.8
"KRN",.404,89,40,18,0)
23^^3
"KRN",.404,89,40,18,1)
213
"KRN",.404,89,40,18,2)
13,45^30
"KRN",.404,89,40,18,4)
1
"KRN",.404,89,40,18,12)
I $G(PRSTW(13))]"",X,X<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=22.8
"KRN",.404,89,40,19,0)
24^^3
"KRN",.404,89,40,19,1)
214
"KRN",.404,89,40,19,2)
14,45^30
"KRN",.404,89,40,19,4)
1
"KRN",.404,89,40,19,12)
I $G(PRSTW(14))]"",X,X<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=23.8
"KRN",.404,89,40,20,0)
25^!M^1
"KRN",.404,89,40,20,.1)
S Y="Telework Indicator: "_$S($P(PRSTWA,U,3)]"":$P(PRSTWA,U,3),1:"None")
"KRN",.404,89,40,20,2)
^^4,34
"KRN",.404,89,40,21,0)
13.8^^2
"KRN",.404,89,40,21,2)
11,6^3
"KRN",.404,89,40,21,3)
!M
"KRN",.404,89,40,21,3.1)
S Y=$G(PRSTW(4))
"KRN",.404,89,40,21,11)
S:'PRSTWB DDSBR=14
"KRN",.404,89,40,21,12)
S Y=$$GET^DDSVAL(DIE,.DA,204) I X]"",Y,Y<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=13.8
"KRN",.404,89,40,21,13)
S PRSTW(4)=X
"KRN",.404,89,40,21,20)
DD^^458.02,74
"KRN",.404,89,40,22,0)
17.8^^2
"KRN",.404,89,40,22,2)
8,41^3
"KRN",.404,89,40,22,3)
!M
"KRN",.404,89,40,22,3.1)
S Y=$G(PRSTW(8))
"KRN",.404,89,40,22,11)
S:'PRSTWB DDSBR=18
"KRN",.404,89,40,22,12)
S Y=$$GET^DDSVAL(DIE,.DA,208) I X]"",Y,Y<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=17.8
"KRN",.404,89,40,22,13)
S PRSTW(8)=X
"KRN",.404,89,40,22,20)
DD^^458.02,74
"KRN",.404,89,40,23,0)
10.8^^2
"KRN",.404,89,40,23,2)
8,6^3
"KRN",.404,89,40,23,3)
!M
"KRN",.404,89,40,23,3.1)
S Y=$G(PRSTW(1))
"KRN",.404,89,40,23,11)
S:'PRSTWB DDSBR=11
"KRN",.404,89,40,23,12)
S Y=$$GET^DDSVAL(DIE,.DA,201) I X]"",Y,Y<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=10.8
"KRN",.404,89,40,23,13)
S PRSTW(1)=X
"KRN",.404,89,40,23,20)
DD^^458.02,74
"KRN",.404,89,40,24,0)
11.8^^2
"KRN",.404,89,40,24,2)
9,6^3
"KRN",.404,89,40,24,3)
!M
"KRN",.404,89,40,24,3.1)
S Y=$G(PRSTW(2))
"KRN",.404,89,40,24,11)
S:'PRSTWB DDSBR=12
"KRN",.404,89,40,24,12)
S Y=$$GET^DDSVAL(DIE,.DA,202) I X]"",Y,Y<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=11.8
"KRN",.404,89,40,24,13)
S PRSTW(2)=X
"KRN",.404,89,40,24,20)
DD^^458.02,74
"KRN",.404,89,40,25,0)
12.8^^2
"KRN",.404,89,40,25,2)
10,6^3
"KRN",.404,89,40,25,3)
!M
"KRN",.404,89,40,25,3.1)
S Y=$G(PRSTW(3))
"KRN",.404,89,40,25,11)
S:'PRSTWB DDSBR=13
"KRN",.404,89,40,25,12)
S Y=$$GET^DDSVAL(DIE,.DA,203) I X]"",Y,Y<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=12.8
"KRN",.404,89,40,25,13)
S PRSTW(3)=X
"KRN",.404,89,40,25,20)
DD^^458.02,74
"KRN",.404,89,40,26,0)
14.8^^2
"KRN",.404,89,40,26,2)
12,6^3
"KRN",.404,89,40,26,3)
!M
"KRN",.404,89,40,26,3.1)
S Y=$G(PRSTW(5))
"KRN",.404,89,40,26,11)
S:'PRSTWB DDSBR=15
"KRN",.404,89,40,26,12)
S Y=$$GET^DDSVAL(DIE,.DA,205) I X]"",Y,Y<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=14.8
"KRN",.404,89,40,26,13)
S PRSTW(5)=X
"KRN",.404,89,40,26,20)
DD^^458.02,74
"KRN",.404,89,40,27,0)
15.8^^2
"KRN",.404,89,40,27,2)
13,6^3
"KRN",.404,89,40,27,3)
!M
"KRN",.404,89,40,27,3.1)
S Y=$G(PRSTW(6))
"KRN",.404,89,40,27,11)
S:'PRSTWB DDSBR=16
"KRN",.404,89,40,27,12)
S Y=$$GET^DDSVAL(DIE,.DA,206) I X]"",Y,Y<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=15.8
"KRN",.404,89,40,27,13)
S PRSTW(6)=X
"KRN",.404,89,40,27,20)
DD^^458.02,74
"KRN",.404,89,40,28,0)
16.8^^2
"KRN",.404,89,40,28,2)
14,6^3
"KRN",.404,89,40,28,3)
!M
"KRN",.404,89,40,28,3.1)
S Y=$G(PRSTW(7))
"KRN",.404,89,40,28,11)
S:'PRSTWB DDSBR=17
"KRN",.404,89,40,28,12)
S Y=$$GET^DDSVAL(DIE,.DA,207) I X]"",Y,Y<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=16.8
"KRN",.404,89,40,28,13)
S PRSTW(7)=X
"KRN",.404,89,40,28,20)
DD^^458.02,74
"KRN",.404,89,40,29,0)
18.8^^2
"KRN",.404,89,40,29,2)
9,41^3
"KRN",.404,89,40,29,3)
!M
"KRN",.404,89,40,29,3.1)
S Y=$G(PRSTW(9))
"KRN",.404,89,40,29,11)
S:'PRSTWB DDSBR=19
"KRN",.404,89,40,29,12)
S Y=$$GET^DDSVAL(DIE,.DA,209) I X]"",Y,Y<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=18.8
"KRN",.404,89,40,29,13)
S PRSTW(9)=X
"KRN",.404,89,40,29,20)
DD^^458.02,74
"KRN",.404,89,40,30,0)
19.8^^2
"KRN",.404,89,40,30,2)
10,41^3
"KRN",.404,89,40,30,3)
!M
"KRN",.404,89,40,30,3.1)
S Y=$G(PRSTW(10))
"KRN",.404,89,40,30,11)
S:'PRSTWB DDSBR=20
"KRN",.404,89,40,30,12)
S Y=$$GET^DDSVAL(DIE,.DA,210) I X]"",Y,Y<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=19.8
"KRN",.404,89,40,30,13)
S PRSTW(10)=X
"KRN",.404,89,40,30,20)
DD^^458.02,74
"KRN",.404,89,40,31,0)
20.8^^2
"KRN",.404,89,40,31,2)
11,41^3
"KRN",.404,89,40,31,3)
!M
"KRN",.404,89,40,31,3.1)
S Y=$G(PRSTW(11))
"KRN",.404,89,40,31,11)
S:'PRSTWB DDSBR=21
"KRN",.404,89,40,31,12)
S Y=$$GET^DDSVAL(DIE,.DA,211) I X]"",Y,Y<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=20.8
"KRN",.404,89,40,31,13)
S PRSTW(11)=X
"KRN",.404,89,40,31,20)
DD^^458.02,74
"KRN",.404,89,40,32,0)
21.8^^2
"KRN",.404,89,40,32,2)
12,41^3
"KRN",.404,89,40,32,3)
!M
"KRN",.404,89,40,32,3.1)
S Y=$G(PRSTW(12))
"KRN",.404,89,40,32,11)
S:'PRSTWB DDSBR=22
"KRN",.404,89,40,32,12)
S Y=$$GET^DDSVAL(DIE,.DA,212) I X]"",Y,Y<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=21.8
"KRN",.404,89,40,32,13)
S PRSTW(12)=X
"KRN",.404,89,40,32,20)
DD^^458.02,74
"KRN",.404,89,40,33,0)
22.8^^2
"KRN",.404,89,40,33,2)
13,41^3
"KRN",.404,89,40,33,3)
!M
"KRN",.404,89,40,33,3.1)
S Y=$G(PRSTW(13))
"KRN",.404,89,40,33,11)
S:'PRSTWB DDSBR=23
"KRN",.404,89,40,33,12)
S Y=$$GET^DDSVAL(DIE,.DA,213) I X]"",Y,Y<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=22.8
"KRN",.404,89,40,33,13)
S PRSTW(13)=X
"KRN",.404,89,40,33,20)
DD^^458.02,74
"KRN",.404,89,40,34,0)
23.8^^2
"KRN",.404,89,40,34,2)
14,41^3
"KRN",.404,89,40,34,3)
!M
"KRN",.404,89,40,34,3.1)
S Y=$G(PRSTW(14))
"KRN",.404,89,40,34,11)
S:'PRSTWB DDSBR=24
"KRN",.404,89,40,34,12)
S Y=$$GET^DDSVAL(DIE,.DA,214) I X]"",Y,Y<2 D HLP^DDSUTL("Can't schedule Telework on a Day Off.") S DDSBR=23.8
"KRN",.404,89,40,34,13)
S PRSTW(14)=X
"KRN",.404,89,40,34,20)
DD^^458.02,74
"KRN",9.2,1557,-1)
0^1
"KRN",9.2,1557,0)
PRSA ENTER TW^Enter Telework Hours Help^3120503.131453^
"KRN",9.2,1557,1,0)
^^9^9^3120503^
"KRN",9.2,1557,1,1,0)
Allowable range for telework hours is calculated, based on the length of
"KRN",9.2,1557,1,2,0)
tour of duty plus any additional work such as overtime and then less any
"KRN",9.2,1557,1,3,0)
posted leave. For example, an 8 hour tour with 2 hours of overtime and one
"KRN",9.2,1557,1,4,0)
hour of annual leave can have up to 9 hours of telework.
"KRN",9.2,1557,1,5,0)
 
"KRN",9.2,1557,1,6,0)
   8 hour tour + 2 hrs OT - 1 hr AL = 9 hours of work
"KRN",9.2,1557,1,7,0)
 
"KRN",9.2,1557,1,8,0)
All work outside the tour of duty such as comptime or overtime must be Ad
"KRN",9.2,1557,1,9,0)
Hoc/Situational Telework, by definition.
"MBREQ")
0
"ORD",1,9.2)
9.2;1;;;HELP^XPDTA1;HLPF1^XPDIA1;HLPE1^XPDIA1;HLPF2^XPDIA1;;HLPDEL^XPDIA1
"ORD",1,9.2,0)
HELP FRAME
"ORD",8,.403)
.403;8;;;EDEOUT^DIFROMSO(.403,DA,"",XPDA);FPRE^DIFROMSI(.403,"",XPDA);EPRE^DIFROMSI(.403,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.403,DA,"",XPDA);DEL^DIFROMSK(.403,"",%)
"ORD",8,.403,0)
FORM
"PKG",408,-1)
1^1
"PKG",408,0)
PAID^PRS^PAID
"PKG",408,20,0)
^9.402P^^
"PKG",408,22,0)
^9.49I^1^1
"PKG",408,22,1,0)
4.0^2950912^2960130
"PKG",408,22,1,"PAH",1,0)
132^3120710
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
30
"RTN","PRS8CR")
0^28^B11394851^B10991558
"RTN","PRS8CR",1,0)
PRS8CR ;HISC/MRL-DECOMPOSITION, CREATE STRING ;01/17/07
"RTN","PRS8CR",2,0)
 ;;4.0;PAID;**2,6,45,69,112,117,132**;Sep 21, 1995;Build 13
"RTN","PRS8CR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRS8CR",4,0)
 ;
"RTN","PRS8CR",5,0)
 ;This routine take the information contained in the WK array
"RTN","PRS8CR",6,0)
 ;and creates the activity string to be passed to Austin.  The
"RTN","PRS8CR",7,0)
 ;WK(1) node contains those items pertaining to Week 1 activity,
"RTN","PRS8CR",8,0)
 ;WK(2) contains those items pertaining to Week 2 activity and
"RTN","PRS8CR",9,0)
 ;WK(3) contains the Miscellaneous information shown on the bottom
"RTN","PRS8CR",10,0)
 ;of the timecard.
"RTN","PRS8CR",11,0)
 ;
"RTN","PRS8CR",12,0)
 ;Called by Routines:  PRS8DR
"RTN","PRS8CR",13,0)
 ;
"RTN","PRS8CR",14,0)
 ;Variable S contains the lengths of each of the Values for the
"RTN","PRS8CR",15,0)
 ;different time codes.  Used to format values with leading and
"RTN","PRS8CR",16,0)
 ;trailing zero's
"RTN","PRS8CR",17,0)
 N MLINHRS
"RTN","PRS8CR",18,0)
 S MLINHRS=$$MLINHRS^PRSAENT(DFN)
"RTN","PRS8CR",19,0)
 S S="3333333333333333333333333333333334436232333333333333333333"
"RTN","PRS8CR",20,0)
 S E(1)="ANSKWDNOAURTCECUUNNANBSPSASBSCDADBDCTFOAOBOCYAOKOMRARBRCHAHBHCPTPAONYDHDVCEA  EB  TATCFAFCADNTRSSRSDNDCFCHCPCRTWTSTM"
"RTN","PRS8CR",21,0)
 S E(2)="ALSLWPNPABRLCTCOUSNRNSSQSESFSGDEDFDGTGOEOFOGYEOSOURERFRGHLHMHNPHPBCLYHHOVSEC  ED  TBTDFBFDAFNHRNSSSHNUCGCICQCSTXTTTN"
"RTN","PRS8CR",22,0)
 S E(3)="NLDWINTLLULNLDDTTOLAMLCAPCCYRRFFFECD"
"RTN","PRS8CR",23,0)
 K V S V="" F I=1,2,3 S V(I)=""
"RTN","PRS8CR",24,0)
 ;
"RTN","PRS8CR",25,0)
 ;Next section gets Week 1 and Week 2 data and stores in V(WK)
"RTN","PRS8CR",26,0)
 F J=1,2 F I=1:1:38,40,42:1:58 S X=+$P(WK(J),"^",I) I X]"" D
"RTN","PRS8CR",27,0)
 .; Don't report PT/PT for nurses on AWS schedules
"RTN","PRS8CR",28,0)
 .Q:$E(AC,2)=1&($P(C0,U,16)=72)&(I=32)  ; 36/40 AWS
"RTN","PRS8CR",29,0)
 .Q:$E(AC,2)=2&($P(C0,U,16)=80)&(I=32)  ; 9month AWS
"RTN","PRS8CR",30,0)
 .;
"RTN","PRS8CR",31,0)
 .I TYP'["D",I'=38,I'=40 D QH
"RTN","PRS8CR",32,0)
 .I TYP["D" S X=+X_"0"
"RTN","PRS8CR",33,0)
 .I TYP["Pd",$E(ENT,2)'="D",$P(WK(J),"^",32)="",V(J)="" S V(J)=V(J)_$S(J=1:"PT000",J=2:"PH000",1:"") ;for p/t drs put PT,PH in 8B string even if they are 0 (PT+PH=NH)
"RTN","PRS8CR",34,0)
 .;Part time hours
"RTN","PRS8CR",35,0)
 .I I=32,TYP["P",TYP["N",TYP'["B"!(TYP["H"),'X D  Q
"RTN","PRS8CR",36,0)
 ..S X=$E("0000000",0,+$E(S,I)-$L(X))_X
"RTN","PRS8CR",37,0)
 ..S V(J)=V(J)_$E(E(J),I+(I-1),I*2)_X
"RTN","PRS8CR",38,0)
 ..Q
"RTN","PRS8CR",39,0)
 .;holiday hours
"RTN","PRS8CR",40,0)
 .I I=37,$P(C0,"^",20)="P",$P(C0,"^",21)="U" D
"RTN","PRS8CR",41,0)
 ..S X=$E("0000000",0,+$E(S,I)-$L(X))_X
"RTN","PRS8CR",42,0)
 ..I 'X S V(J)=V(J)_$E(E(J),I+(I-1),I*2)_X
"RTN","PRS8CR",43,0)
 ..Q
"RTN","PRS8CR",44,0)
 .S X=+X I I=32,TYP["Pd",X=0 S X=1
"RTN","PRS8CR",45,0)
 .Q:'X
"RTN","PRS8CR",46,0)
 .I I=32,TYP["Pd",X=1 S X=0
"RTN","PRS8CR",47,0)
 .I I=38!(I=40) D
"RTN","PRS8CR",48,0)
 ..S Z=X,X=4*$P(WK(J),"^",I+1) D QH
"RTN","PRS8CR",49,0)
 ..S X=($E("00",0,$E(S,I)-$L(Z))_+Z)_($E("000",0,$E(S,I+1)-$L(+X))_+X) ;combine env. diff. % and hours
"RTN","PRS8CR",50,0)
 ..Q
"RTN","PRS8CR",51,0)
 .E  S X=$E("0000000",0,+$E(S,I)-$L(X))_+X
"RTN","PRS8CR",52,0)
 .I +X S V(J)=V(J)_$E(E(J),I+(I-1),I*2)_X,V=V+X
"RTN","PRS8CR",53,0)
 ;Now we get miscellaneous data
"RTN","PRS8CR",54,0)
 ;
"RTN","PRS8CR",55,0)
 S S="22134446114423146"
"RTN","PRS8CR",56,0)
 F I=1:1:17 S X=$P(WK(3),"^",I) I X'="" D
"RTN","PRS8CR",57,0)
 .I I=11 D
"RTN","PRS8CR",58,0)
 . . I MLINHRS D QH ; Convert to 1/4 hours.
"RTN","PRS8CR",59,0)
 . . I MLINHRS=0 S X=X_"0" ; Convert to 1/4 hours.
"RTN","PRS8CR",60,0)
 .S X=$E("000000",0,+$E(S,I)-$L(X))_X
"RTN","PRS8CR",61,0)
 .I $D(X) S V(3)=V(3)_$E(E(3),I+(I-1),I*2)_X,V=V+X
"RTN","PRS8CR",62,0)
 ;
"RTN","PRS8CR",63,0)
 ;finish up
"RTN","PRS8CR",64,0)
 ;
"RTN","PRS8CR",65,0)
 S VAL="" I $L(V(1))!($L(V(2)))!($L(V(3))) S X=V(1)_V(2)_V(3)_"CD"_$E("000000",0,6-$L(+V))_+V,VAL=X
"RTN","PRS8CR",66,0)
 ;
"RTN","PRS8CR",67,0)
STUB ; --- enter here to create stub only
"RTN","PRS8CR",68,0)
 I '($D(VAL)#2) S VAL=""
"RTN","PRS8CR",69,0)
 ; code below to add CP field to STUB record (32nd position)
"RTN","PRS8CR",70,0)
 S CPFX=""
"RTN","PRS8CR",71,0)
 S CPFX=$P($G(^PRST(458,PY,"E",DFN,0)),"^",6) ;get CP from 458
"RTN","PRS8CR",72,0)
 I CPFX="" S CPFX=$P($G(^PRSPC(DFN,1)),"^",7) ;if 458 null get from 450
"RTN","PRS8CR",73,0)
 I "0"[CPFX S CPFX=" " ;if it is 0 or "" set CPFX = " "
"RTN","PRS8CR",74,0)
 S PPE=$G(^PRST(458,+PY,0)),PPE=$P(PPE,"^",1),PPI=+PY D ^PRSAXSR
"RTN","PRS8CR",75,0)
 S VAL=HDR_CPFX_VAL ;decomp no longer saves 8B in 5 node (6/95)
"RTN","PRS8CR",76,0)
 K I,J,S Q
"RTN","PRS8CR",77,0)
 ;
"RTN","PRS8CR",78,0)
QH ; --- for persons paid hourly/convert to Quarter Hours
"RTN","PRS8CR",79,0)
 ;
"RTN","PRS8CR",80,0)
 I I'=37 S X1=X#4,X=X\4_+X1 K X1
"RTN","PRS8CR",81,0)
 Q
"RTN","PRS8UP")
0^1^B44269268^B37177110
"RTN","PRS8UP",1,0)
PRS8UP ;HISC/MRL,JAH/WIRMFO-DECOMPOSITION, UPDATE TOTALS ;7/10/08
"RTN","PRS8UP",2,0)
 ;;4.0;PAID;**6,21,30,45,117,132**;Sep 21, 1995;Build 13
"RTN","PRS8UP",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRS8UP",4,0)
 ;
"RTN","PRS8UP",5,0)
 ;This routine is used to collect information related to
"RTN","PRS8UP",6,0)
 ;weekly activity which is unrelated to actual time, including
"RTN","PRS8UP",7,0)
 ;VCS Sales, Environmental Differential, Hazard Pay, 
"RTN","PRS8UP",8,0)
 ;Lump Sum Data, etc.
"RTN","PRS8UP",9,0)
 ;
"RTN","PRS8UP",10,0)
 ;Called by Routines:  PRS8ST
"RTN","PRS8UP",11,0)
 ;
"RTN","PRS8UP",12,0)
 ; -- VCS Sales (VC, VS)/Fee Basis (FE)
"RTN","PRS8UP",13,0)
 ;
"RTN","PRS8UP",14,0)
 ; If there is data (X) on the VCS sales node.  (Both VCS sales and
"RTN","PRS8UP",15,0)
 ; Fee Basis data is stored on this node).  Then we need to check to
"RTN","PRS8UP",16,0)
 ; see if the employee's pay plan is F=Fee Basis or U=VCS Sales.
"RTN","PRS8UP",17,0)
 ;
"RTN","PRS8UP",18,0)
 ;
"RTN","PRS8UP",19,0)
 ; If we're dealing w/ previous pay period where an employee
"RTN","PRS8UP",20,0)
 ; has changed pay plans, we need to check their pay plan for the 
"RTN","PRS8UP",21,0)
 ; pay period we are dealing with.
"RTN","PRS8UP",22,0)
 N PAYPDTMP,PPLOLD
"RTN","PRS8UP",23,0)
 S PAYPDTMP=$G(^PRST(458,+PY,0)) ;pay period we're working with.
"RTN","PRS8UP",24,0)
 S PPLOLD=$$OLDPP^PRS8UT(PAYPDTMP,+DFN) ;pay plan from PAYPDTMP.
"RTN","PRS8UP",25,0)
 S PPL=$P($G(^PRSPC(+DFN,0)),"^",21) ;pay plan in master record.
"RTN","PRS8UP",26,0)
 ;
"RTN","PRS8UP",27,0)
 ;if we find an old pay plan and it's different than the master record
"RTN","PRS8UP",28,0)
 ;use the old pay plan to determine VCS or FEE.
"RTN","PRS8UP",29,0)
 I PPLOLD'=0,(PPL'=PPLOLD) S PPL=PPLOLD
"RTN","PRS8UP",30,0)
 ;
"RTN","PRS8UP",31,0)
 S X=$G(^PRST(458,+PY,"E",+DFN,2)),(T,T(1),T(2))=0
"RTN","PRS8UP",32,0)
 I PPL'="F",X'="" F I=1:1:14 S V=+$P(X,"^",I),W=$S(I<8:1,1:2),T(W)=T(W)+V
"RTN","PRS8UP",33,0)
 I PPL'="F" F I=1,2 I $D(T(I)) D
"RTN","PRS8UP",34,0)
 .S X1=$P(T(I),".",2)
"RTN","PRS8UP",35,0)
 .S X1=X1_$E("00",0,2-$L(X1)) ;2 numbers for cents (X1)
"RTN","PRS8UP",36,0)
 .S X=+$P(T(I),".",1)
"RTN","PRS8UP",37,0)
 .S X=X_X1 I '+X Q  ;no value/don't report
"RTN","PRS8UP",38,0)
 .S $P(WK(I),"^",37)=X
"RTN","PRS8UP",39,0)
 S X=$G(^PRST(458,+PY,"E",+DFN,2))
"RTN","PRS8UP",40,0)
 I PPL="F",X'="" F I=1:1:14 S V=+$P(X,"^",I),T=T+V
"RTN","PRS8UP",41,0)
 I PPL="F",$D(T) D
"RTN","PRS8UP",42,0)
 .S X1=$P(T,".",2)
"RTN","PRS8UP",43,0)
 .S X1=X1_$E("00",0,2-$L(X1))
"RTN","PRS8UP",44,0)
 .S X=+$P(T,".",1)
"RTN","PRS8UP",45,0)
 .S X=X_X1 I '+X Q  ;if no value, don't save
"RTN","PRS8UP",46,0)
 .S $P(WK(3),"^",17)=X
"RTN","PRS8UP",47,0)
 K I,PPL,T,V,W,X,X1
"RTN","PRS8UP",48,0)
 ;
"RTN","PRS8UP",49,0)
 ; -- Environmental Differential (EA, EC)
"RTN","PRS8UP",50,0)
 ; -- Hazardous Duty Pay (EB, ED)
"RTN","PRS8UP",51,0)
 ;
"RTN","PRS8UP",52,0)
 S X=$G(^PRST(458,+PY,"E",+DFN,4))
"RTN","PRS8UP",53,0)
 F I=1,3,5,7,9,11 S Y=+$P(X,"^",I) D
"RTN","PRS8UP",54,0)
 .I I=1!(I=7) S T=0,W=1+(I=7)
"RTN","PRS8UP",55,0)
 .S Y=$G(^PRST(457.6,+Y,0)) Q:Y=""
"RTN","PRS8UP",56,0)
 .S Y=+$P(Y,"^",3) Q:'Y
"RTN","PRS8UP",57,0)
 .S Y=$E("00",0,2-$L(Y))_Y ;percentage
"RTN","PRS8UP",58,0)
 .S Y(1)=+$P(X,"^",I+1) Q:'Y(1)
"RTN","PRS8UP",59,0)
 .S Y(1)=$E("000",0,3-$L(Y(1)))_Y(1) ;hours
"RTN","PRS8UP",60,0)
 .S T=T+1
"RTN","PRS8UP",61,0)
 .I T<3 S $P(WK(W),"^",36+(T*2))=Y,$P(WK(W),"^",37+(T*2))=Y(1)
"RTN","PRS8UP",62,0)
 .K Y
"RTN","PRS8UP",63,0)
 K I,T,W,X,Y
"RTN","PRS8UP",64,0)
 ;
"RTN","PRS8UP",65,0)
 ;PRS4*117 CT Trav Earnd Wk 1&2. Convert file decimal to 1/4 hr integer
"RTN","PRS8UP",66,0)
 ;
"RTN","PRS8UP",67,0)
 N CTTNODE,CTTW1,CTTW2 S CTTNODE=$G(^PRST(458,+PY,"E",+DFN,6))
"RTN","PRS8UP",68,0)
 S CTTW1=+$P(CTTNODE,U)*100/.25\100
"RTN","PRS8UP",69,0)
 S CTTW2=+$P(CTTNODE,U,2)*100/.25\100
"RTN","PRS8UP",70,0)
 I CTTW1>0 S $P(WK(1),"^",52)=CTTW1
"RTN","PRS8UP",71,0)
 I CTTW2>0 S $P(WK(2),"^",52)=CTTW2
"RTN","PRS8UP",72,0)
 ;
"RTN","PRS8UP",73,0)
 ;PRS4*117 Move Credit Hours back to the comptime buckets.
"RTN","PRS8UP",74,0)
 ;   Credit hours still reported under comptime 8B codes but are
"RTN","PRS8UP",75,0)
 ;   split out during decomp so appropriate rules are applied 
"RTN","PRS8UP",76,0)
 ;   for credit hours. When credit hours 8B code reporting is 
"RTN","PRS8UP",77,0)
 ;   implemented this code should be removed.[credit hours future use]
"RTN","PRS8UP",78,0)
 ;
"RTN","PRS8UP",79,0)
 ;     { begin credit hours move to ct buckets
"RTN","PRS8UP",80,0)
 ;
"RTN","PRS8UP",81,0)
 ;       For week 1 & 2, add credit hours to comptime buckets and zero 
"RTN","PRS8UP",82,0)
 ;       out credit hours buckets.
"RTN","PRS8UP",83,0)
 ;
"RTN","PRS8UP",84,0)
 F I=1,2 D
"RTN","PRS8UP",85,0)
 .;      add
"RTN","PRS8UP",86,0)
 .  S $P(WK(I),U,7)=$P(WK(I),U,7)+$P(WK(I),U,54)
"RTN","PRS8UP",87,0)
 .  S $P(WK(I),U,8)=$P(WK(I),U,8)+$P(WK(I),U,55)
"RTN","PRS8UP",88,0)
 .;
"RTN","PRS8UP",89,0)
 .;      zero out
"RTN","PRS8UP",90,0)
 .  S $P(WK(I),U,54)=""
"RTN","PRS8UP",91,0)
 .  S $P(WK(I),U,55)=""
"RTN","PRS8UP",92,0)
 ;
"RTN","PRS8UP",93,0)
 ;      end credit hours move to ct buckets }
"RTN","PRS8UP",94,0)
 ;
"RTN","PRS8UP",95,0)
 ; PRS*4*132
"RTN","PRS8UP",96,0)
 ; Telework hours are stored as actual hours for each day of the
"RTN","PRS8UP",97,0)
 ; pay period.  Loop through timecard and add up any telework hours
"RTN","PRS8UP",98,0)
 ; recorded.  Disregard two day tours as telework hours will be
"RTN","PRS8UP",99,0)
 ; reported on the week in which the telework started.
"RTN","PRS8UP",100,0)
 ;
"RTN","PRS8UP",101,0)
 ; Store telework in wk array
"RTN","PRS8UP",102,0)
 ;
"RTN","PRS8UP",103,0)
 F I=1,2 D
"RTN","PRS8UP",104,0)
 .  N NODE,STW,ATW,MTW
"RTN","PRS8UP",105,0)
 .  S (STW(I),ATW(I),MTW(I))=0
"RTN","PRS8UP",106,0)
 .  N PRSD
"RTN","PRS8UP",107,0)
 .  F PRSD=I*7-6:1:I*7 D
"RTN","PRS8UP",108,0)
 ..    S NODE=$G(^PRST(458,+PY,"E",+DFN,"D",PRSD,8))
"RTN","PRS8UP",109,0)
 ..    S STW(I)=STW(I)+$P(NODE,U,2)
"RTN","PRS8UP",110,0)
 ..    S ATW(I)=ATW(I)+$P(NODE,U,4)
"RTN","PRS8UP",111,0)
 ..    S MTW(I)=MTW(I)+$P(NODE,U,3)
"RTN","PRS8UP",112,0)
 .  I TYP'["D" D
"RTN","PRS8UP",113,0)
 ..    S STW(I)=STW(I)*100/.25\100
"RTN","PRS8UP",114,0)
 ..    S ATW(I)=ATW(I)*100/.25\100
"RTN","PRS8UP",115,0)
 ..    S MTW(I)=MTW(I)*100/.25\100
"RTN","PRS8UP",116,0)
 .  S $P(WK(I),U,56)=STW(I)
"RTN","PRS8UP",117,0)
 .  S $P(WK(I),U,57)=ATW(I)
"RTN","PRS8UP",118,0)
 .  S $P(WK(I),U,58)=MTW(I)
"RTN","PRS8UP",119,0)
 ;
"RTN","PRS8UP",120,0)
 ; -- Lump Sum Data (LY, LH, LD, DT)
"RTN","PRS8UP",121,0)
 ;
"RTN","PRS8UP",122,0)
 S (X,Y)=$G(^PRST(458,+PY,"E",+DFN,3)),(C,T(1),T(2),T(3))=""
"RTN","PRS8UP",123,0)
 I X'="" F I=2,3,4 S T(I-1)=+$P(X,"^",I) I +T(I-1) S C=1
"RTN","PRS8UP",124,0)
 I C F I=1,2,3 I +T(I) D
"RTN","PRS8UP",125,0)
 .S X1="."_$P(T(I),".",2)\.25 ;turn % into quarter hours
"RTN","PRS8UP",126,0)
 .S X=+$P(T(I),".",1)
"RTN","PRS8UP",127,0)
 .S X=X_+X1 I '+X Q
"RTN","PRS8UP",128,0)
 .S $P(WK(3),"^",4+I)=X
"RTN","PRS8UP",129,0)
 S X=$P(Y,"^",5)
"RTN","PRS8UP",130,0)
 I X?7N S X=$E(X,4,7)_$E(X,2,3),$P(WK(3),"^",8)=X
"RTN","PRS8UP",131,0)
 K I,C,T,X ;clean up/save new T&L as Y (if there)
"RTN","PRS8UP",132,0)
 ;
"RTN","PRS8UP",133,0)
 ; -- T&L Change (TL)
"RTN","PRS8UP",134,0)
 ;
"RTN","PRS8UP",135,0)
 S X=$P(Y,"^") I $L(X)=3 S $P(WK(3),"^",4)=X
"RTN","PRS8UP",136,0)
 K X
"RTN","PRS8UP",137,0)
 ;
"RTN","PRS8UP",138,0)
 ; -- Optional Withholding Tax (TO)
"RTN","PRS8UP",139,0)
 ;
"RTN","PRS8UP",140,0)
 I $P(Y,"^",7)="Y" S $P(WK(3),"^",9)=1
"RTN","PRS8UP",141,0)
 ;
"RTN","PRS8UP",142,0)
 ; -- Foreign Cola (LA)
"RTN","PRS8UP",143,0)
 ;
"RTN","PRS8UP",144,0)
 I $P(Y,"^",8)="Y" S $P(WK(3),"^",10)=2
"RTN","PRS8UP",145,0)
 ;
"RTN","PRS8UP",146,0)
 ; -- Payment Records (RR)
"RTN","PRS8UP",147,0)
 ;
"RTN","PRS8UP",148,0)
 I $P(Y,"^",6)="Y" S $P(WK(3),"^",15)=1
"RTN","PRS8UP",149,0)
 ;
"RTN","PRS8UP",150,0)
 ; -- Days Worked (DW)
"RTN","PRS8UP",151,0)
 ;
"RTN","PRS8UP",152,0)
 I DWK,TYP["I" S $P(WK(3),"^",2)=+DWK
"RTN","PRS8UP",153,0)
 ;
"RTN","PRS8UP",154,0)
 ; -- Calendar Year Adjustment (CA)
"RTN","PRS8UP",155,0)
 ;
"RTN","PRS8UP",156,0)
 ; I $D(WPCY) S X=WPCYA S X=(X\4)_"0",$P(WK(3),"^",12)=X K WPCY,WPCYA
"RTN","PRS8UP",157,0)
 I $D(WPCY) D
"RTN","PRS8UP",158,0)
 . S X=WPCYA S:$E(ENT,1,2)["H" X=(X\4) I +X S X=X_"0",$P(WK(3),"^",12)=X
"RTN","PRS8UP",159,0)
 . K WPCY,WPCYA
"RTN","PRS8UP",160,0)
 E  S X=+CAMISC I TYP["I",+X S X=X_"0",$P(WK(3),"^",12)=X
"RTN","PRS8UP",161,0)
 ;
"RTN","PRS8UP",162,0)
 ; -- Days Worked [SF 2806] (CY)
"RTN","PRS8UP",163,0)
 ;
"RTN","PRS8UP",164,0)
 I CYA2806'=0 S X=+CYA2806 I (TYP["I"!(TYP["P")),TYP'["B",+X S:"56U"'[$P(C0,"^",21) X=(X\4)_(X#4),$P(WK(3),"^",14)=X
"RTN","PRS8UP",165,0)
 E  S X=+CAMISC I TYP["I",+X S:"56U"'[$P(C0,"^",21) X=X_"0",$P(WK(3),"^",14)=X
"RTN","PRS8UP",166,0)
 ;
"RTN","PRS8UP",167,0)
 ; -- Fire Fighter Normal Hours (FF)
"RTN","PRS8UP",168,0)
 ;      Sum PT from week 1 with PH from week 2 and copy into FF
"RTN","PRS8UP",169,0)
 ;
"RTN","PRS8UP",170,0)
 S $P(WK(3),"^",16)=""
"RTN","PRS8UP",171,0)
 I "Ff"[TYP,(("RC"[PMP)!(NH=448)!(NH>320&(NH(1)'=NH(2)))) D
"RTN","PRS8UP",172,0)
 .  F I=1,2 D
"RTN","PRS8UP",173,0)
 ..    S X=+$P(WK(I),"^",32)
"RTN","PRS8UP",174,0)
 ..    I +X S $P(WK(3),"^",16)=$P(WK(3),"^",16)+X
"RTN","PRS8UP",175,0)
 ;
"RTN","PRS8UP",176,0)
 S X=$P(WK(3),"^",16)
"RTN","PRS8UP",177,0)
 I X S $P(WK(3),"^",16)=(X\4)_(X#4) ;quarter hours
"RTN","PRS8UP",178,0)
 K I,X,Y
"RTN","PRS8UP",179,0)
 ;
"RTN","PRS8UP",180,0)
 ; -- reduce OC by OT where applicable
"RTN","PRS8UP",181,0)
 F I=1,2 I $P(WK(I),"^",35),+$G(CBCK(I)) D
"RTN","PRS8UP",182,0)
 .S $P(WK(I),"^",35)=$P(WK(I),"^",35)-CBCK(I)
"RTN","PRS8UP",183,0)
 ;
"RTN","PRS8UP",184,0)
 ; -- Military Leave (ML)
"RTN","PRS8UP",185,0)
 ;I $G(MILV) S P=11 D DAYS
"RTN","PRS8UP",186,0)
 ;
"RTN","PRS8UP",187,0)
 ; -- Work Comp [Count COP days] (PC)
"RTN","PRS8UP",188,0)
 I $G(WCMP) S P=13 D DAYS
"RTN","PRS8UP",189,0)
 ;
"RTN","PRS8UP",190,0)
END ; --- all done here
"RTN","PRS8UP",191,0)
 Q
"RTN","PRS8UP",192,0)
 ;
"RTN","PRS8UP",193,0)
DAYS ; --- count total number of days for ML and PC
"RTN","PRS8UP",194,0)
 K NODE S NODE=$P("ML^^CP","^",P-10),(NODE(1),NODE(2))=""
"RTN","PRS8UP",195,0)
 F D=1:1:14 D
"RTN","PRS8UP",196,0)
 .S NODE(1)=NODE(1)_+$G(^TMP($J,"PRS8",D,NODE))
"RTN","PRS8UP",197,0)
 .S NODE(2)=NODE(2)_+$G(^TMP($J,"PRS8",D,"OFF"))
"RTN","PRS8UP",198,0)
 .I $E(NODE(1),D) D SET ;save day in WK(3)
"RTN","PRS8UP",199,0)
 S NODE(1)=$E("0*",1+$G(^TMP($J,"PRS8",0,NODE)))_NODE(1)_$E("0*",1+$G(^TMP($J,"PRS8",15,NODE))) ; assume ML/CP has been counted for past/future ppd
"RTN","PRS8UP",200,0)
 S NODE(2)=+$G(^TMP($J,"PRS8",0,"OFF"))_NODE(2)_+$G(^TMP($J,"PRS8",15,"OFF")) ; set off days for past/future ppd
"RTN","PRS8UP",201,0)
 S F=1 ;F=Forward check needed
"RTN","PRS8UP",202,0)
 F I=2:1:15 S X=$E(NODE(1),I),X1=$E(NODE(2),I) D
"RTN","PRS8UP",203,0)
 .I 'X1 S F=$S(X="*":I,1:-1) ;go forward into next week
"RTN","PRS8UP",204,0)
 .S (C,Q)=0 I X1,X'="*",$E(NODE(1),I-1)="*" F J=F+1:1:15 Q:Q  D  ; X'="*"" ==> X=1 for NODE="ML" if there is a problem with the counting of ML when the orders specify days off are not to be counted.
"RTN","PRS8UP",205,0)
 ..S X=$E(NODE(1),J),X1=$E(NODE(2),J)
"RTN","PRS8UP",206,0)
 ..I 'X1,X=0 S Q=1 Q  ;worked
"RTN","PRS8UP",207,0)
 ..I X="*" S Q=1,C=J-2 Q  ;military leave
"RTN","PRS8UP",208,0)
 ..I J=15,$E(NODE(1),J+1)="*" S Q=1,C=14 Q  ; if last day in ppd, and there is ML/CP on the first day of next ppd, then count this ML/CP
"RTN","PRS8UP",209,0)
 .I C F J=I-1:1:C S D=J D SET ;save off days in pp
"RTN","PRS8UP",210,0)
 Q
"RTN","PRS8UP",211,0)
 ;
"RTN","PRS8UP",212,0)
SET ; --- set WK(3) Node for ML
"RTN","PRS8UP",213,0)
 S $P(WK(3),"^",+P)=$P(WK(3),"^",+P)+1
"RTN","PRS8UP",214,0)
 S NODE(1)=$E(NODE(1),0,D-1)_"*"_$E(NODE(1),D+1,99)
"RTN","PRS8UP",215,0)
 Q
"RTN","PRS8VW")
0^2^B16581161^B16147800
"RTN","PRS8VW",1,0)
PRS8VW ;WCIOFO/JAH - DECOMPOSITION, VIEW RESULTS ;01/11/08
"RTN","PRS8VW",2,0)
 ;;4.0;PAID;**2,6,27,45,112,117,132**;Sep 21, 1995;Build 13
"RTN","PRS8VW",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRS8VW",4,0)
 ;
"RTN","PRS8VW",5,0)
 ;This routine is used to view the results of the decomposition.
"RTN","PRS8VW",6,0)
 ;The variables VAL and VALOLD must be passed.  VAL is the current
"RTN","PRS8VW",7,0)
 ;decomposition string.  VALOLD, which may be null, is the results
"RTN","PRS8VW",8,0)
 ;of a previous decomposition run (what's in the 5 node of file 458
"RTN","PRS8VW",9,0)
 ;prior to running decomposition).
"RTN","PRS8VW",10,0)
 ;
"RTN","PRS8VW",11,0)
 ;Called by Routines:  PRS8, PRS8DR
"RTN","PRS8VW",12,0)
 S (NEW,VAL)=$G(VAL),(OLD,VALOLD)=$G(VALOLD)
"RTN","PRS8VW",13,0)
 N DASH1,DASH2
"RTN","PRS8VW",14,0)
 S $P(DASH1,"-",79)="-",$P(DASH2,"=",79)="="
"RTN","PRS8VW",15,0)
 I +$E(NEW,2,4) S NEW=$E(VAL,33,999) ; 33rd position because CP field
"RTN","PRS8VW",16,0)
 I +$E(OLD,2,4) S OLD=$E(VALOLD,33,999) ;is added(either "C","F"or" ")
"RTN","PRS8VW",17,0)
 D E
"RTN","PRS8VW",18,0)
 W @IOF
"RTN","PRS8VW",19,0)
 I "C"'[$E(IOST) D
"RTN","PRS8VW",20,0)
 .S X="Decomposition of Time" W ?(80-$L(X)/2),X,!
"RTN","PRS8VW",21,0)
 .D NOW^%DTC S Y=% X ^DD("DD")
"RTN","PRS8VW",22,0)
 .S X=$G(^VA(200,+$G(DUZ),0)),TR="User:  "_$S($P(X,"^",1)'="":$P(X,"^",1),1:"Unknown")
"RTN","PRS8VW",23,0)
 .S TR=TR_"                                                                               "
"RTN","PRS8VW",24,0)
 .S X="Run Date: "_Y,TR=$E(TR,1,(79-$L(X)))_X
"RTN","PRS8VW",25,0)
 S X=$P(C0,"^",1)_" [SSN: "_$P(C0,"^",9)_"]" W !,X
"RTN","PRS8VW",26,0)
 S X="Pay Period: "_(^PRST(458,+PY,0)) W ?(79-$L(X)),$P(X,"^",1)
"RTN","PRS8VW",27,0)
 D CTID
"RTN","PRS8VW",28,0)
 W !,DASH2
"RTN","PRS8VW",29,0)
 W !,"Loc.",?10,"Data Element",?44,"Code",?52,"Old Value",?67,"New Value"
"RTN","PRS8VW",30,0)
 W !,"----",?10,"------------",?44,"----",?52,"---------",?67,"---------"
"RTN","PRS8VW",31,0)
 K I,L,X,USED
"RTN","PRS8VW",32,0)
 D ^PRS8VW1
"RTN","PRS8VW",33,0)
 D STUB
"RTN","PRS8VW",34,0)
 I "C"'[$E(IOST) D
"RTN","PRS8VW",35,0)
 .W !,DASH1
"RTN","PRS8VW",36,0)
 .W !,TR
"RTN","PRS8VW",37,0)
 D ONE^PRS8CV,^%ZISC Q
"RTN","PRS8VW",38,0)
 ;
"RTN","PRS8VW",39,0)
CERT ; entry point to show supervisor result of decomp before certifying
"RTN","PRS8VW",40,0)
 N DASH1,DASH2
"RTN","PRS8VW",41,0)
 S $P(DASH1,"-",79)="-",$P(DASH2,"=",79)="="
"RTN","PRS8VW",42,0)
 S (NEW,VAL)=$G(VAL)
"RTN","PRS8VW",43,0)
 I +$E(NEW,2,4) S NEW=$E(VAL,33,999) ;because CP field is added to STUB
"RTN","PRS8VW",44,0)
 D E2
"RTN","PRS8VW",45,0)
 W @IOF
"RTN","PRS8VW",46,0)
 I "C"'[$E(IOST) D
"RTN","PRS8VW",47,0)
 .S X="Decomposition of Time" W ?(80-$L(X)/2),X,!
"RTN","PRS8VW",48,0)
 .D NOW^%DTC S Y=% X ^DD("DD")
"RTN","PRS8VW",49,0)
 .S X=$G(^VA(200,+$G(DUZ),0)),TR="User:  "_$S($P(X,"^",1)'="":$P(X,"^",1),1:"Unknown")
"RTN","PRS8VW",50,0)
 .S TR=TR_"                                                                               "
"RTN","PRS8VW",51,0)
 .S X="Run Date: "_Y,TR=$E(TR,1,(79-$L(X)))_X
"RTN","PRS8VW",52,0)
 S H="PAY PERIOD SUMMARY" W !,$J(H,40+($L(H)/2)),!
"RTN","PRS8VW",53,0)
 S X=$P(C0,"^",1)_" [SSN: "_$E($P(C0,"^",9))_"XXXX"_$E($P(C0,"^",9),6,9)_"]" W !,X
"RTN","PRS8VW",54,0)
 S X="Pay Period: "_(^PRST(458,+PY,0)) W ?(79-$L(X)),$P(X,"^",1)
"RTN","PRS8VW",55,0)
 D CTID
"RTN","PRS8VW",56,0)
 W !,DASH2
"RTN","PRS8VW",57,0)
 W !
"RTN","PRS8VW",58,0)
 K I,L,X,USED
"RTN","PRS8VW",59,0)
 D ^PRS8VW2
"RTN","PRS8VW",60,0)
 I "C"'[$E(IOST) D
"RTN","PRS8VW",61,0)
 .W !,DASH1
"RTN","PRS8VW",62,0)
 .W !,TR
"RTN","PRS8VW",63,0)
 K H,R,Z Q
"RTN","PRS8VW",64,0)
E2 ; --- create E array
"RTN","PRS8VW",65,0)
 S E(1)="ANSKWDNOAURTCECUUNNANBSPSASBSCDADBDCTFOAOBOCYAOKOMRARBRCHAHBHCPTPAONYDHDVCEAEBTATCFAFCADNTRSSRSDNDCFCHCPCRTWTSTM"
"RTN","PRS8VW",66,0)
 S E(2)="ALSLWPNPABRLCTCOUSNRNSSQSESFSGDEDFDGTGOEOFOGYEOSOURERFRGHLHMHNPHPBCLYHHOVSECEDTBTDFBFDAFNHRNSSSHNUCGCICQCSTXTTTN"
"RTN","PRS8VW",67,0)
 S E(3)="NLDWMLCAPCCYFE" Q
"RTN","PRS8VW",68,0)
STUB ; --- show stub record
"RTN","PRS8VW",69,0)
 S X1=$G(HDR),X2=$E(VAL,1,32)
"RTN","PRS8VW",70,0)
 I X1="" S X1=$E(VALOLD,1,32)
"RTN","PRS8VW",71,0)
 I X1="" S X1=X2
"RTN","PRS8VW",72,0)
 I $L(X1)<$L(X2) S X1=X2
"RTN","PRS8VW",73,0)
 W !!,"STUB RECORD >>>>> ",$S(X1'="":X1,1:"Not Available At this Time...") Q
"RTN","PRS8VW",74,0)
 ;
"RTN","PRS8VW",75,0)
E ; --- create E array
"RTN","PRS8VW",76,0)
 ;PRS*4*132 add telework codes TW,TW,TM,TX,TT,TN
"RTN","PRS8VW",77,0)
 S E(1)="ANSKWDNOAURTCECUUNNANBSPSASBSCDADBDCTFOAOBOCYAOKOMRARBRCHAHBHCPTPAONYDHDVCEAEBTATCFAFCADNTRSSRSDNDCFCHCPCRTWTSTM"
"RTN","PRS8VW",78,0)
 S E(2)="ALSLWPNPABRLCTCOUSNRNSSQSESFSGDEDFDGTGOEOFOGYEOSOURERFRGHLHMHNPHPBCLYHHOVSECEDTBTDFBFDAFNHRNSSSHNUCGCICQCSTXTTTN"
"RTN","PRS8VW",79,0)
 S E(3)="NLDWINTLLULNLDDTTOLAMLCAPCCYRRFFFECD" Q
"RTN","PRS8VW",80,0)
CTID ; compressed tour indicator display
"RTN","PRS8VW",81,0)
 ; in - PY (pay period ien), DFN (employee ien)
"RTN","PRS8VW",82,0)
 N FLX,FLXP
"RTN","PRS8VW",83,0)
 S FLX=$P($G(^PRST(458,+PY,"E",DFN,0)),U,6) ; for current pay period
"RTN","PRS8VW",84,0)
 S FLXP=$P($G(^PRST(458,+PY-1,"E",DFN,0)),U,6) ; for previous pay period
"RTN","PRS8VW",85,0)
 I FLX]"",FLX'="0" D
"RTN","PRS8VW",86,0)
 . W !,"This is a ",$$EXTERNAL^DILFD(458.01,5,"",FLX)," tour!"
"RTN","PRS8VW",87,0)
 I FLX]"",FLXP]"",FLX'=FLXP D
"RTN","PRS8VW",88,0)
 . W !,"Note: The Compressed Tour Indicator has been changed since"
"RTN","PRS8VW",89,0)
 . W !,"      the previous pay period (from "
"RTN","PRS8VW",90,0)
 . W $$EXTERNAL^DILFD(458.01,5,"",FLXP)
"RTN","PRS8VW",91,0)
 . W " to ",$$EXTERNAL^DILFD(458.01,5,"",FLX),")."
"RTN","PRS8VW",92,0)
 Q
"RTN","PRS8VW2")
0^3^B26531664^B25129714
"RTN","PRS8VW2",1,0)
PRS8VW2 ;WCIOFO/JAH - DECOMPOSITION, VIEW RESULTS ;01/11/08
"RTN","PRS8VW2",2,0)
 ;;4.0;PAID;**6,32,34,45,69,112,117,132**;Sep 21, 1995;Build 13
"RTN","PRS8VW2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRS8VW2",4,0)
 ; 
"RTN","PRS8VW2",5,0)
 ; This routine is used to show the results of the decomp to
"RTN","PRS8VW2",6,0)
 ; the supervisor before certification.  It takes the values
"RTN","PRS8VW2",7,0)
 ; in the 8B string (NEW) and prints each type of time with the
"RTN","PRS8VW2",8,0)
 ; amount in a more readable format (ie - value in 8B = OE163,
"RTN","PRS8VW2",9,0)
 ; would print -->    Week 1    Overtime    16.75
"RTN","PRS8VW2",10,0)
 ; Called from CERT+18^PRS8VW, a continuation from that entry point.
"RTN","PRS8VW2",11,0)
 ;
"RTN","PRS8VW2",12,0)
 S CHECK=0
"RTN","PRS8VW2",13,0)
 ;
"RTN","PRS8VW2",14,0)
EN ;
"RTN","PRS8VW2",15,0)
 S E=E(1),W="Week 1",LOC=1 D SHOW
"RTN","PRS8VW2",16,0)
 S E=E(2),W="Week 2",LOC=2 D SHOW
"RTN","PRS8VW2",17,0)
 S E=E(3),W="Misc",LOC=0 D SHOW
"RTN","PRS8VW2",18,0)
 I 'CHECK,"C"'[$E(IOST) D
"RTN","PRS8VW2",19,0)
 .W !,DASH1
"RTN","PRS8VW2",20,0)
 .W !,TR
"RTN","PRS8VW2",21,0)
 K %,CHECK,D,E,I,L,LOC,USED,W,X,Y Q
"RTN","PRS8VW2",22,0)
 ;
"RTN","PRS8VW2",23,0)
SHOW ; --- show information
"RTN","PRS8VW2",24,0)
 F I=1:2 S X=$E(E,I,I+1) Q:X=""  D
"RTN","PRS8VW2",25,0)
 .I $D(USED(X)) Q
"RTN","PRS8VW2",26,0)
 .S USED(X)=""
"RTN","PRS8VW2",27,0)
 .S X(1)=$F(NEW,X)
"RTN","PRS8VW2",28,0)
 .I 'CHECK,'X(1) Q  ;not in string
"RTN","PRS8VW2",29,0)
 .I CHECK S LOC(1)=(I\2+1) S:'LOC LOC(1)=LOC(1)+50 D
"RTN","PRS8VW2",30,0)
 ..S FOUND(LOC(1))=$G(FOUND(LOC(1)))
"RTN","PRS8VW2",31,0)
 ..S $P(FOUND(LOC(1)),"^",$S(LOC<2:1,1:4))=X
"RTN","PRS8VW2",32,0)
 .;
"RTN","PRS8VW2",33,0)
 .;read from tables below
"RTN","PRS8VW2",34,0)
 .;
"RTN","PRS8VW2",35,0)
 .S Y=$P($T(@$E(X)),";;",2)
"RTN","PRS8VW2",36,0)
 .S Y(1)=$F(Y,$E(X,2)_":")
"RTN","PRS8VW2",37,0)
 .S Y=$P($E(Y,Y(1),999),":",1,2)
"RTN","PRS8VW2",38,0)
 .I 'CHECK W !,W,?15,$P($T(TYP+Y),";;",2)
"RTN","PRS8VW2",39,0)
 .S X=X(1),X1=52 D CON
"RTN","PRS8VW2",40,0)
 Q
"RTN","PRS8VW2",41,0)
 ;
"RTN","PRS8VW2",42,0)
CON ; --- convert to proper format
"RTN","PRS8VW2",43,0)
 I '+X S X=$E("00000000000",1,+$P(Y,":",2))
"RTN","PRS8VW2",44,0)
 I X,X1=52 S (X,Z)=$E(NEW,X(1),X(1)+$P(Y,":",2)-1)
"RTN","PRS8VW2",45,0)
 I I=73!(W="Misc"&(I=13)) S R=X/100 W ?50,$J(R,6,2) Q
"RTN","PRS8VW2",46,0)
 I W="Misc",I=3 S X=X*10
"RTN","PRS8VW2",47,0)
 S R=$E(X,1,$L(X)-1)_$S($E(X,$L(X))=3:".75",$E(X,$L(X))=2:".5",$E(X,$L(X))=1:".25",1:"") W ?50,$J(R,6,2) Q
"RTN","PRS8VW2",48,0)
 Q
"RTN","PRS8VW2",49,0)
 ;
"RTN","PRS8VW2",50,0)
 ; This internal table stores types of time codes and their
"RTN","PRS8VW2",51,0)
 ; corresponding descriptions and TT8B value field lengths. Each
"RTN","PRS8VW2",52,0)
 ; single char line label below is the 1st char of a type of time code.
"RTN","PRS8VW2",53,0)
 ; The text on the corresponding line contains '^' delimited
"RTN","PRS8VW2",54,0)
 ; pieces.  The 1st char of those pieces is the 2nd char of a type of
"RTN","PRS8VW2",55,0)
 ; time.  The text description for that time code is given by the
"RTN","PRS8VW2",56,0)
 ; the number in the 2nd ':' delimited piece.  That number indicates
"RTN","PRS8VW2",57,0)
 ; the line number below the label TYP in routine PRS8VW2.  The 3rd
"RTN","PRS8VW2",58,0)
 ; ':' delimited piece is the length of the time code's value in the
"RTN","PRS8VW2",59,0)
 ; TT8B String.
"RTN","PRS8VW2",60,0)
 ;
"RTN","PRS8VW2",61,0)
A ;;N:1:3^U:5:3^L:1:3^B:5:3^D:63:3^F:63:3
"RTN","PRS8VW2",62,0)
C ;;E:7:3^U:8:3^T:7:3^O:8:3^L:34:4^A:55:4^Y:57:3^D:60:6^F:70:3^G:70:3^H:71:3^I:71:3^P:72:3^Q:72:3^R:73:3^S:73:3
"RTN","PRS8VW2",63,0)
D ;;A:16:3^B:17:3^C:18:3^E:16:3^F:17:3^G:18:3^W:45:2^T:48:6
"RTN","PRS8VW2",64,0)
E ;;A:38:5^B:40:5^C:38:5^D:40:5
"RTN","PRS8VW2",65,0)
F ;;F:59:4^A:61:3^B:61:3^C:62:3^D:62:3^E:64:6
"RTN","PRS8VW2",66,0)
H ;;A:29:3^B:30:3^C:31:3^L:29:3^M:30:3^N:31:3^D:36:3^O:36:3
"RTN","PRS8VW2",67,0)
I ;;N:46:1
"RTN","PRS8VW2",68,0)
L ;;U:48:4^N:49:4^D:50:4^A:53:1
"RTN","PRS8VW2",69,0)
M ;;L:54:4
"RTN","PRS8VW2",70,0)
N ;;O:4:3^A:10:3^B:11:3^P:4:3^R:10:3^S:11:3^L:44:2^T:65:3^H:65:3^D:69:3^U:69:3
"RTN","PRS8VW2",71,0)
O ;;A:20:3^B:21:3^C:22:3^K:24:3^M:25:3^N:34:4^E:20:3^F:21:3^G:22:3^S:24:3^U:25:3
"RTN","PRS8VW2",72,0)
P ;;T:32:3^A:33:3^H:32:3^B:33:3^C:56:2
"RTN","PRS8VW2",73,0)
R ;;T:6:3^A:26:3^B:27:3^C:28:3^L:6:3^E:26:3^F:27:3^G:28:3^R:58:1^S:66:3^N:66:3
"RTN","PRS8VW2",74,0)
S ;;K:2:3^P:12:3^A:13:3^B:14:3^C:15:3^L:2:3^Q:12:3^E:13:3^F:14:3^G:15:3^R:67:3^S:67:3^D:68:3^H:68:3
"RTN","PRS8VW2",75,0)
T ;;F:19:3^A:42:3^C:43:3^G:19:3^B:42:3^D:43:3^L:47:3^O:52:1^W:74:3^S:75:3^M:76:3^X:74:3^T:75:3^N:76:3
"RTN","PRS8VW2",76,0)
U ;;N:9:3^S:9:3
"RTN","PRS8VW2",77,0)
V ;;C:37:6^S:37:6
"RTN","PRS8VW2",78,0)
W ;;D:3:3^P:3:3
"RTN","PRS8VW2",79,0)
Y ;;A:23:3^D:35:4^E:23:3^H:35:4
"RTN","PRS8VW2",80,0)
 ;
"RTN","PRS8VW2",81,0)
TYP ; literal values of activities (actual name)
"RTN","PRS8VW2",82,0)
 ;;Annual Leave
"RTN","PRS8VW2",83,0)
 ;;Sick Leave
"RTN","PRS8VW2",84,0)
 ;;Leave Without Pay
"RTN","PRS8VW2",85,0)
 ;;Non-Pay Time
"RTN","PRS8VW2",86,0)
 ;;Authorized Absence
"RTN","PRS8VW2",87,0)
 ;;Restored Annual Leave
"RTN","PRS8VW2",88,0)
 ;;Comp Time Earned
"RTN","PRS8VW2",89,0)
 ;;Comp Time Used
"RTN","PRS8VW2",90,0)
 ;;Unscheduled Regular
"RTN","PRS8VW2",91,0)
 ;;Night Differential-2
"RTN","PRS8VW2",92,0)
 ;;Night Differential-3
"RTN","PRS8VW2",93,0)
 ;;Saturday Premium
"RTN","PRS8VW2",94,0)
 ;;Sunday Premium-D
"RTN","PRS8VW2",95,0)
 ;;Sunday Premium-2
"RTN","PRS8VW2",96,0)
 ;;Sunday Premium-3
"RTN","PRS8VW2",97,0)
 ;;Overtime Hrs > 8 Day-D
"RTN","PRS8VW2",98,0)
 ;;Overtime Hrs > 8 Day-2
"RTN","PRS8VW2",99,0)
 ;;Overtime Hrs > 8 Day-3
"RTN","PRS8VW2",100,0)
 ;;Travel OT-FLSA
"RTN","PRS8VW2",101,0)
 ;;Overtime Total Hours-D
"RTN","PRS8VW2",102,0)
 ;;Overtime Total Hours-2
"RTN","PRS8VW2",103,0)
 ;;Overtime Total Hours-3
"RTN","PRS8VW2",104,0)
 ;;Scheduled Call-Back OT
"RTN","PRS8VW2",105,0)
 ;;Overtime on Holiday
"RTN","PRS8VW2",106,0)
 ;;Sleep Time
"RTN","PRS8VW2",107,0)
 ;;Reg Hrs @ Overtime Rate-D
"RTN","PRS8VW2",108,0)
 ;;Reg Hrs @ Overtime Rate-2
"RTN","PRS8VW2",109,0)
 ;;Reg Hrs @ Overtime Rate-3
"RTN","PRS8VW2",110,0)
 ;;Holiday Hours-D
"RTN","PRS8VW2",111,0)
 ;;Holiday Hours-2
"RTN","PRS8VW2",112,0)
 ;;Holiday Hours-3
"RTN","PRS8VW2",113,0)
 ;;Part Time Hours
"RTN","PRS8VW2",114,0)
 ;;Continuation of Pay
"RTN","PRS8VW2",115,0)
 ;;Standby Hours
"RTN","PRS8VW2",116,0)
 ;;On-Call Hours
"RTN","PRS8VW2",117,0)
 ;;Pieceworker Holiday Excused
"RTN","PRS8VW2",118,0)
 ;;VCS Sales
"RTN","PRS8VW2",119,0)
 ;;Environmental Differential
"RTN","PRS8VW2",120,0)
 ;;
"RTN","PRS8VW2",121,0)
 ;;Hazardous Duty Pay
"RTN","PRS8VW2",122,0)
 ;;
"RTN","PRS8VW2",123,0)
 ;;Travel
"RTN","PRS8VW2",124,0)
 ;;Training
"RTN","PRS8VW2",125,0)
 ;;Non-Pay Annual Leave
"RTN","PRS8VW2",126,0)
 ;;Days Worked
"RTN","PRS8VW2",127,0)
 ;;Insurance
"RTN","PRS8VW2",128,0)
 ;;T&L Change
"RTN","PRS8VW2",129,0)
 ;;Lump Sum Units-D
"RTN","PRS8VW2",130,0)
 ;;Lump Sum Units-2
"RTN","PRS8VW2",131,0)
 ;;Lump Sum Units-3
"RTN","PRS8VW2",132,0)
 ;;Lump Sum Expiration Date
"RTN","PRS8VW2",133,0)
 ;;Optional Withholding Tax
"RTN","PRS8VW2",134,0)
 ;;Foreign Cola
"RTN","PRS8VW2",135,0)
 ;;Military Leave
"RTN","PRS8VW2",136,0)
 ;;Calendar Year Adjustment
"RTN","PRS8VW2",137,0)
 ;;Workers Compensation
"RTN","PRS8VW2",138,0)
 ;;SF 2806 Adjustment
"RTN","PRS8VW2",139,0)
 ;;Payment Record Requested
"RTN","PRS8VW2",140,0)
 ;;Fire Fighter Normal Hours
"RTN","PRS8VW2",141,0)
 ;;Control Data
"RTN","PRS8VW2",142,0)
 ;;Care and Bereavement
"RTN","PRS8VW2",143,0)
 ;;Adoption
"RTN","PRS8VW2",144,0)
 ;;Donor Leave
"RTN","PRS8VW2",145,0)
 ;;Fee Basis
"RTN","PRS8VW2",146,0)
 ;;Base Tour Non Pay Hours
"RTN","PRS8VW2",147,0)
 ;;Recess
"RTN","PRS8VW2",148,0)
 ;;Saturday Premium-AWS
"RTN","PRS8VW2",149,0)
 ;;Sunday Premium-AWS
"RTN","PRS8VW2",150,0)
 ;;Night Differential-AWS
"RTN","PRS8VW2",151,0)
 ;;Comp Time for Travel Earned
"RTN","PRS8VW2",152,0)
 ;;Comp Time for Travel Used
"RTN","PRS8VW2",153,0)
 ;;Credit Hours Earned
"RTN","PRS8VW2",154,0)
 ;;Credit Hours Used
"RTN","PRS8VW2",155,0)
 ;;Scheduled Telework
"RTN","PRS8VW2",156,0)
 ;;Situational Telework
"RTN","PRS8VW2",157,0)
 ;;Medical Telework
"RTN","PRSACED6")
0^30^B5586294^B5380606
"RTN","PRSACED6",1,0)
PRSACED6 ; HISC/FPT-T&A Cross-Edits ;5/9/2012 13:21
"RTN","PRSACED6",2,0)
 ;;4.0;PAID;**6,45,112,132**;Sep 21, 1995;Build 13
"RTN","PRSACED6",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSACED6",4,0)
CODES ; Set variables T0 and T1 with 8B code list
"RTN","PRSACED6",5,0)
 ;      1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67
"RTN","PRSACED6",6,0)
 ;
"RTN","PRSACED6",7,0)
 S T0="AN SK WD NO AU RT CE CU UN NA NB SP DA SA SB SC OA OB OC OK DB OM RA RB RC HA HB HC HD PT PA ON VC EA EB AL SL WP NP AB RL FA FB FC FD AD AF FE TM TN TS TT TW TX",N1=60
"RTN","PRSACED6",8,0)
 S T1="CT CO US NR NS DC TF SE SF SG OE OF OG OS TA OU RE RF RG HL HM HN HO PH PB CL VS EC ED NL DW IN TL LU LN LD TO LA ML CA PC TC CY RR SQ FF DE DF YA DG TG YD YE TB DT YH TD NT NH RS RN ND NU SR SS SD SH",N2=67
"RTN","PRSACED6",9,0)
 Q
"RTN","PRSACED6",10,0)
STUB ; parse out 'stub' variables from 8b record
"RTN","PRSACED6",11,0)
 S RECORD=^PRST(458,PPI,"E",DFN,5)
"RTN","PRSACED6",12,0)
 S STA=$E(RECORD,2,4)
"RTN","PRSACED6",13,0)
 S SSN=$E(RECORD,5,13)
"RTN","PRSACED6",14,0)
 S NCODE=$E(RECORD,14,16)
"RTN","PRSACED6",15,0)
 S DAYNO=$E(RECORD,17,19)
"RTN","PRSACED6",16,0)
 S TL=$E(RECORD,22,24)
"RTN","PRSACED6",17,0)
 S LVG=$E(RECORD,25)
"RTN","PRSACED6",18,0)
 S NOR=$E(RECORD,26,27)
"RTN","PRSACED6",19,0)
 S PAY=$E(RECORD,28)
"RTN","PRSACED6",20,0)
 S DUT=$E(RECORD,29)
"RTN","PRSACED6",21,0)
 S RECORD=$E(RECORD,33,$L(RECORD))
"RTN","PRSACED6",22,0)
 S (C0,C1)="",EOR=0
"RTN","PRSACED6",23,0)
 Q:RECORD=""
"RTN","PRSACED6",24,0)
TYPE ; parse out type of time from 8b record
"RTN","PRSACED6",25,0)
 I EOR=1 K EOR,LOOP,MATCH,RECORD,TYPE,VALUE Q
"RTN","PRSACED6",26,0)
 S TYPE=$E(RECORD,1,2)
"RTN","PRSACED6",27,0)
 I TYPE="CD" S VALUE=$E(RECORD,3,$L(RECORD)) D CD S EOR=1 G TYPE
"RTN","PRSACED6",28,0)
 F LOOP=3:1:$L(RECORD) Q:$E(RECORD,LOOP)?1U
"RTN","PRSACED6",29,0)
 S:LOOP=$L(RECORD) EOR=1
"RTN","PRSACED6",30,0)
 S VALUE=$S(EOR=1:$E(RECORD,3,LOOP),1:$E(RECORD,3,LOOP-1))
"RTN","PRSACED6",31,0)
 S:EOR=0 RECORD=$E(RECORD,LOOP,$L(RECORD))
"RTN","PRSACED6",32,0)
 S MATCH=0
"RTN","PRSACED6",33,0)
 S Z=$F(T0,TYPE)
"RTN","PRSACED6",34,0)
 I Z>2 S $P(C0,"^",(Z/3)+12)=VALUE,MATCH=1
"RTN","PRSACED6",35,0)
 G:MATCH=1 TYPE
"RTN","PRSACED6",36,0)
 S Z=$F(T1,TYPE)
"RTN","PRSACED6",37,0)
 I Z>2 S $P(C1,"^",Z/3)=VALUE
"RTN","PRSACED6",38,0)
 G TYPE
"RTN","PRSACED6",39,0)
CD ; calculate/compare cd value
"RTN","PRSACED6",40,0)
 S END=$L(C0,"^"),CD=0
"RTN","PRSACED6",41,0)
 F LOOP=13:1:END S CD=CD+$P(C0,"^",LOOP)
"RTN","PRSACED6",42,0)
 S END=$L(C1,"^")
"RTN","PRSACED6",43,0)
 F LOOP=1:1:END S CD=CD+$P(C1,"^",LOOP)
"RTN","PRSACED6",44,0)
 I CD'=+VALUE W !,"THE CD VALUE DID NOT ADD UP CORRECTLY FOR ",$P($G(^PRSPC(DFN,0)),"^",1)
"RTN","PRSACED6",45,0)
 K CD,END Q
"RTN","PRSADP1")
0^4^B16274720^B11335770
"RTN","PRSADP1",1,0)
PRSADP1 ; HISC/REL,WIRMFO/JAH - Display Employee T&A Data ;AUG 07, 1997
"RTN","PRSADP1",2,0)
 ;;4.0;PAID;**22,114,126,132**;Sep 21, 1995;Build 13
"RTN","PRSADP1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSADP1",4,0)
 W:$E(IOST,1,2)="C-" @IOF W !?26,"VA TIME & ATTENDANCE SYSTEM"
"RTN","PRSADP1",5,0)
 W !?23,"EMPLOYEE TIME AND ATTENDANCE DATA" D HDR
"RTN","PRSADP1",6,0)
 W !!,?7,"Date",?17,"TW",?21,"Scheduled Tour",?46,"Tour Exceptions"
"RTN","PRSADP1",7,0)
 W !?2,"------------------------------------------------------------------------",!
"RTN","PRSADP1",8,0)
F0 ; Display Frames
"RTN","PRSADP1",9,0)
 N Y8
"RTN","PRSADP1",10,0)
 K Y1,Y2 S Y1=$G(^PRST(458,PPI,"E",DFN,"D",DAY,1)),Y2=$G(^(2)),Y3=$G(^(3)),Y4=$G(^(4)),TC=$P($G(^(0)),"^",2),Y8=$G(^(8))
"RTN","PRSADP1",11,0)
 I Y1="" S Y1=$S(TC=1:"Day Off",TC=2:"Day Tour",TC=3!(TC=4):"Intermittent",1:"")
"RTN","PRSADP1",12,0)
 I " 1 3 4 "'[TC,$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,10)),"^",1)="" S Y2(1)="Unposted"
"RTN","PRSADP1",13,0)
 I TC=3,$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,10)),"^",4)=1 S Y2(1)="Day Worked"
"RTN","PRSADP1",14,0)
 W !?2,DTE S (L3,L4)=0 I Y1="",Y2="" S Y31="" G EX
"RTN","PRSADP1",15,0)
 D S1
"RTN","PRSADP1",16,0)
 F K=1:1 Q:'$D(Y1(K))&'$D(Y2(K))  W:K>1 ! W:K=1 ?17,$P($$TWE^PRSATE0(DFN,PPI,DAY),U,5) W:$D(Y1(K)) ?21,Y1(K) W:$D(Y2(K)) ?45,$P(Y2(K),"^",1),?63,$P(Y2(K),"^",2)
"RTN","PRSADP1",17,0)
 W:Y3'="" !?10,Y3
"RTN","PRSADP1",18,0)
EX Q
"RTN","PRSADP1",19,0)
F1 ; Display Pay period for Certification
"RTN","PRSADP1",20,0)
 K Y1,Y2 S Y1=$G(^PRST(458,PPI,"E",DFN,"D",DAY,1)),Y2=$G(^(2)),Y3=$G(^(3)),Y4=$G(^(4)),TC=$P($G(^(0)),"^",2),Y8=$G(^(8))
"RTN","PRSADP1",21,0)
 I Y1="" S Y1=$S(TC=1:"Day Off",TC=2:"Day Tour",TC=3!(TC=4):"Intermittent",1:"")
"RTN","PRSADP1",22,0)
 I " 1 3 4 "'[TC,$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,10)),"^",1)="" S Y2(1)="Unposted"
"RTN","PRSADP1",23,0)
 I TC=3,$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,10)),"^",4)=1 S Y2(1)="Day Worked"
"RTN","PRSADP1",24,0)
 W:'$D(PRSNTD) !?2,DTE W:$G(^PRST(458,PPI,"E",DFN,"D",DAY,8))]"" ?16,$P(^(8),U) S (L3,L4)=0 I Y1="",Y2="" S Y31="" G EX
"RTN","PRSADP1",25,0)
 D S1
"RTN","PRSADP1",26,0)
 Q
"RTN","PRSADP1",27,0)
S1 ; Set Schedule Array
"RTN","PRSADP1",28,0)
 S Y31=""
"RTN","PRSADP1",29,0)
 F L1=1:3:19 S A1=$P(Y1,"^",L1) Q:A1=""  D
"RTN","PRSADP1",30,0)
 .S L3=L3+1,Y1(L3)=A1 S:$P(Y1,"^",L1+1)'="" Y1(L3)=Y1(L3)_"-"_$P(Y1,"^",L1+1)
"RTN","PRSADP1",31,0)
 .S:Y31'="" Y31=Y31_", " S Y31=Y31_Y1(L3)
"RTN","PRSADP1",32,0)
 .I $P(Y1,"^",L1+2)'="" S L3=L3+1,Y1(L3)="  "_$P($G(^PRST(457.2,+$P(Y1,"^",L1+2),0)),"^",1)
"RTN","PRSADP1",33,0)
 .I  S Y31=Y31_" "_$P($G(^PRST(457.2,+$P(Y1,"^",L1+2),0)),"^",6)
"RTN","PRSADP1",34,0)
 .Q
"RTN","PRSADP1",35,0)
 G:Y4="" S2
"RTN","PRSADP1",36,0)
 F L1=1:3:19 S A1=$P(Y4,"^",L1) Q:A1=""  D
"RTN","PRSADP1",37,0)
 .S L3=L3+1,Y1(L3)=A1 S:$P(Y4,"^",L1+1)'="" Y1(L3)=Y1(L3)_"-"_$P(Y4,"^",L1+1)
"RTN","PRSADP1",38,0)
 .S:Y31'="" Y31=Y31_", " S Y31=Y31_Y1(L3)
"RTN","PRSADP1",39,0)
 .I $P(Y4,"^",L1+2)'="" S L3=L3+1,Y1(L3)="  "_$P($G(^PRST(457.2,+$P(Y4,"^",L1+2),0)),"^",1)
"RTN","PRSADP1",40,0)
 .I  S Y31=Y31_" "_$P($G(^PRST(457.2,+$P(Y1,"^",L1+2),0)),"^",6)
"RTN","PRSADP1",41,0)
 .Q
"RTN","PRSADP1",42,0)
S2 ; Set Worked Array
"RTN","PRSADP1",43,0)
 QUIT:$D(PRSNTD)
"RTN","PRSADP1",44,0)
 F L1=1:4:25 D  I A1="" G S8
"RTN","PRSADP1",45,0)
 .S A1=$P(Y2,"^",L1+2) Q:A1=""  S L4=L4+1
"RTN","PRSADP1",46,0)
 .S A2=$P(Y2,"^",L1) I A2'="" S Y2(L4)=A2_"-"_$P(Y2,"^",L1+1)
"RTN","PRSADP1",47,0)
 .S K=$O(^PRST(457.3,"B",A1,0)) S $P(Y2(L4),"^",2)=A1_" "_$P($G(^PRST(457.3,+K,0)),"^",2)
"RTN","PRSADP1",48,0)
 .I $P(Y2,"^",L1+3)'="" S L4=L4+1,Y2(L4)="  "_$P($G(^PRST(457.4,+$P(Y2,"^",L1+3),0)),"^",1)
"RTN","PRSADP1",49,0)
 .QUIT
"RTN","PRSADP1",50,0)
 QUIT
"RTN","PRSADP1",51,0)
 ;
"RTN","PRSADP1",52,0)
S8 ;get telework hours of node 8
"RTN","PRSADP1",53,0)
 F L1=2,3,4 I $P($G(Y8),U,L1) S L4=L4+1,Y2(L4)=$J($P(Y8,U,L1),0,2)_$$DAYHR()_" - Telework "_$P("REG^MED^Ad Hoc",U,L1-1)
"RTN","PRSADP1",54,0)
 QUIT
"RTN","PRSADP1",55,0)
DAYHR() ;return text for telework days or hours based on tour type
"RTN","PRSADP1",56,0)
 ;
"RTN","PRSADP1",57,0)
 Q $S($G(TC)=2!($G(TC)=3):" Day",1:" Hours")
"RTN","PRSADP1",58,0)
 ;
"RTN","PRSADP1",59,0)
HDR ; Display Employee Data
"RTN","PRSADP1",60,0)
 N A
"RTN","PRSADP1",61,0)
 S A=$$TWE^PRSATE0(DFN,$S($G(PPE)]"":PPI,1:"")),C0=^PRSPC(DFN,0) W !!,$P(C0,"^",1) W:$G(PPE)="" ?30,"Telework Indicator: ",$S($P(A,U)]"":$P(A,U),1:"None") S X=$P(C0,"^",9)
"RTN","PRSADP1",62,0)
 I '$G(PRSTLV)!($G(PRSTLV)=1) W ?65,"XXX-XX-",$E(X,6,9)
"RTN","PRSADP1",63,0)
 I $G(PRSTLV)=2!($G(PRSTLV)=3) W ?65,$E(X),"XX-XX-",$E(X,6,9)
"RTN","PRSADP1",64,0)
 I $G(PRSTLV)=7 W ?65,$E(X,1,3)_"-"_$E(X,4,5)_"-"_$E(X,6,9)
"RTN","PRSADP1",65,0)
 W !!,"Station: ",$P(C0,"^",7),?30,"Normal Hours: ",$J($P(C0,"^",16),3),?65,"Duty Basis:",?77,$P(C0,"^",10)
"RTN","PRSADP1",66,0)
 W !,"T&L:     ",$P(C0,"^",8),?30,"Pay Plan:",?46,$P(C0,"^",21),?65,"Comp/Flex:",?77,$S(PPE'="":$P($G(^PRST(458,PPI,"E",DFN,0)),"^",6),1:$P($G(^PRSPC(DFN,1)),"^",7))
"RTN","PRSADP1",67,0)
 W ! W:PPE'="" "Pay Per: ",PPE,?30,"Telework Indicator: ",$S($P(A,U,3)]"":$P(A,U,3),$P(A,U)]""&($G(PPE)=""):$P(A,U),1:"None"),?65,"FLSA:",?77,$P(C0,"^",12) Q
"RTN","PRSADP2")
0^5^B21796691^B20321723
"RTN","PRSADP2",1,0)
PRSADP2 ; HISC/REL-Display Employee Pay Period ;7/22/97
"RTN","PRSADP2",2,0)
 ;;4.0;PAID;**21,28,46,114,132**;Sep 21, 1995;Build 13
"RTN","PRSADP2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSADP2",4,0)
PAY ; Payroll Entry
"RTN","PRSADP2",5,0)
 N PPERIOD
"RTN","PRSADP2",6,0)
 S PRSTLV=7
"RTN","PRSADP2",7,0)
 D TOP ; print header
"RTN","PRSADP2",8,0)
P1 K DIC S DIC("A")="Select EMPLOYEE: ",DIC(0)="AEQM",DIC="^PRSPC("
"RTN","PRSADP2",9,0)
 W ! D ^DIC S DFN=+Y K DIC G:DFN<1 EX
"RTN","PRSADP2",10,0)
 S TLE=$P($G(^PRSPC(DFN,0)),"^",8)
"RTN","PRSADP2",11,0)
 S DIC="^PRST(458,",DIC(0)="AEQM",DIC("A")="Select PAY PERIOD: "
"RTN","PRSADP2",12,0)
 W ! D ^DIC K DIC G:Y<1 EX
"RTN","PRSADP2",13,0)
 S PPI=+Y
"RTN","PRSADP2",14,0)
 ;  1st put pay period in YY-PP format 4 call 2 lookup old T&L.
"RTN","PRSADP2",15,0)
 S PPERIOD=$S(Y["-":$P(Y,"^",2),1:$P(^PRST(458,$P(Y,"^"),0),"^"))
"RTN","PRSADP2",16,0)
 D CHECKTLE(PPERIOD,DFN,.TLE) ;verify that T&L unit hasn't changed
"RTN","PRSADP2",17,0)
 D L1 ;ask device
"RTN","PRSADP2",18,0)
 G P1 ;ask for employee again
"RTN","PRSADP2",19,0)
 ;====================================================================
"RTN","PRSADP2",20,0)
TK ; TimeKeeper Entry
"RTN","PRSADP2",21,0)
 S PRSTLV=2 G T0
"RTN","PRSADP2",22,0)
 ;====================================================================
"RTN","PRSADP2",23,0)
SUP ; Supervisor Entry
"RTN","PRSADP2",24,0)
 S PRSTLV=3
"RTN","PRSADP2",25,0)
T0 D TOP ; print header
"RTN","PRSADP2",26,0)
 D ^PRSAUTL G:TLI<1 EX
"RTN","PRSADP2",27,0)
 N PPERIOD
"RTN","PRSADP2",28,0)
T1 K DIC S DIC("A")="Select EMPLOYEE: ",DIC(0)="AEQM",DIC="^PRSPC("
"RTN","PRSADP2",29,0)
 S DIC("S")="I $P(^(0),""^"",8)=TLE" S D="ATL"_TLE W ! D IX^DIC
"RTN","PRSADP2",30,0)
 S DFN=+Y K DIC G:DFN<1 EX
"RTN","PRSADP2",31,0)
 S %DT="AEPX",%DT("A")="Posting Date: ",%DT(0)=-DT W ! D ^%DT
"RTN","PRSADP2",32,0)
 G:Y<1 EX S D1=Y S Y=$G(^PRST(458,"AD",D1)),PPI=$P(Y,"^",1) G EX:PPI<1
"RTN","PRSADP2",33,0)
 ;  1st put pay period in YY-PP format 4 call 2 lookup old T&L.
"RTN","PRSADP2",34,0)
 S PPERIOD=$S(Y["-":$P(Y,"^",2),1:$P(^PRST(458,$P(Y,"^"),0),"^"))
"RTN","PRSADP2",35,0)
 ;
"RTN","PRSADP2",36,0)
 ; Save T&L unit 4 use in DIC("S"), cause we might change TLE
"RTN","PRSADP2",37,0)
 ; for display if this employee was in a different T&L during 
"RTN","PRSADP2",38,0)
 ; the selected pay period.
"RTN","PRSADP2",39,0)
 S TLSCREEN=TLE
"RTN","PRSADP2",40,0)
 ;
"RTN","PRSADP2",41,0)
 D CHECKTLE(PPERIOD,DFN,.TLE) ;verify that T&L unit hasn't changed
"RTN","PRSADP2",42,0)
 D L1 ;ask device
"RTN","PRSADP2",43,0)
 ;restore TLE variable to the one originally selected.
"RTN","PRSADP2",44,0)
 S TLE=TLSCREEN
"RTN","PRSADP2",45,0)
 ; 
"RTN","PRSADP2",46,0)
 G T1 ;ask for employee again
"RTN","PRSADP2",47,0)
 ;====================================================================
"RTN","PRSADP2",48,0)
EMP ; Employee Entry
"RTN","PRSADP2",49,0)
 N PPERIOD,OLDTLE
"RTN","PRSADP2",50,0)
 S PRSTLV=1 D TOP S DFN="",SSN=$P($G(^VA(200,DUZ,1)),"^",9)
"RTN","PRSADP2",51,0)
 I SSN'="" S DFN=$O(^PRSPC("SSN",SSN,0))
"RTN","PRSADP2",52,0)
 I 'DFN W !!,*7,"Your SSN was not found in both the New Person & Employee File!" G EX
"RTN","PRSADP2",53,0)
 S TLE=$P($G(^PRSPC(DFN,0)),"^",8)
"RTN","PRSADP2",54,0)
 S %DT="AEPX",%DT("A")="Posting Date: ",%DT(0)=-DT W ! D ^%DT
"RTN","PRSADP2",55,0)
 G:Y<1 EX S D1=Y S Y=$G(^PRST(458,"AD",D1)),PPI=$P(Y,"^",1) G EX:PPI<1
"RTN","PRSADP2",56,0)
 ;  1st put pay period in YY-PP format 4 call 2 lookup old T&L.
"RTN","PRSADP2",57,0)
 S PPERIOD=$S(Y["-":$P(Y,"^",2),1:$P(^PRST(458,$P(Y,"^"),0),"^"))
"RTN","PRSADP2",58,0)
 D CHECKTLE(PPERIOD,DFN,.TLE) ;verify that T&L unit hasn't changed
"RTN","PRSADP2",59,0)
 D L1 G EX
"RTN","PRSADP2",60,0)
 ;====================================================================
"RTN","PRSADP2",61,0)
TOP W:$E(IOST,1,2)="C-" @IOF W !?26,"VA TIME & ATTENDANCE SYSTEM"
"RTN","PRSADP2",62,0)
 W !?27,"EMPLOYEE PAY PERIOD DATA" Q
"RTN","PRSADP2",63,0)
L1 W ! K IOP,%ZIS S %ZIS("A")="Select Device: ",%ZIS="MQ" D ^%ZIS K %ZIS,IOP Q:POP
"RTN","PRSADP2",64,0)
 I $D(IO("Q")) S PRSAPGM="DIS^PRSADP2",PRSALST="DFN^TLE^PPI" D QUE^PRSAUTL Q
"RTN","PRSADP2",65,0)
 U IO D DIS
"RTN","PRSADP2",66,0)
 ; pause screen when employee to prevent scroll (other users prompted)
"RTN","PRSADP2",67,0)
 I $E(IOST,1,2)="C-",'QT,PRSTLV=1 S PG=PG+1 D H1
"RTN","PRSADP2",68,0)
 D ^%ZISC K %ZIS,IOP Q
"RTN","PRSADP2",69,0)
 ;====================================================================
"RTN","PRSADP2",70,0)
DIS ; Display 14 days
"RTN","PRSADP2",71,0)
 S PDT=$G(^PRST(458,PPI,2)),STAT=$P($G(^PRST(458,PPI,"E",DFN,0)),"^",2)
"RTN","PRSADP2",72,0)
 S (PG,QT)=0 D HDR
"RTN","PRSADP2",73,0)
 W !!,?7,"Date",?17,"TW",?21,"Scheduled Tour",?46,"Tour Exceptions"
"RTN","PRSADP2",74,0)
 W !?3,"------------------------------------------------------------------------"
"RTN","PRSADP2",75,0)
 F DAY=1:1:14 S DTE=$P(PDT,"^",DAY) D:$Y>(IOSL-5) HDR G:QT D1 D F0^PRSADP1
"RTN","PRSADP2",76,0)
 S Z=$G(^PRST(458,PPI,"E",DFN,2)) I Z'="" D:$Y>(IOSL-10) HDR Q:QT  D VCS^PRSASR1
"RTN","PRSADP2",77,0)
 S Z=$G(^PRST(458,PPI,"E",DFN,4)) I Z'="" D:$Y>(IOSL-8) HDR Q:QT  D ED^PRSASR1
"RTN","PRSADP2",78,0)
 S (X9,XF)=0 F DAY=1:1:14 D ^PRSATPE I $D(ER) S:FATAL XF=1 F K=0:0 S K=$O(ER(K)) Q:K<1  D:$Y>(IOSL-4) HDR G:QT D1 W:X9 ! W !?5,$P(PDT,"^",DAY),"  " W:$P(ER(K),"^",2)'="" $P(ER(K),"^",2) W ?28,$P(ER(K),"^",1) S X9=0
"RTN","PRSADP2",79,0)
D1 I PRSTLV>5 S Z=$G(^PRST(458,PPI,"E",DFN,5)) W:Z'="" !!,"8B Codes: ",Z
"RTN","PRSADP2",80,0)
 Q:QT  W ! I $D(^PRST(458,PPI,"E",DFN,"X",0)) D ^PRSAUDP
"RTN","PRSADP2",81,0)
 Q
"RTN","PRSADP2",82,0)
 ;====================================================================
"RTN","PRSADP2",83,0)
HDR ; Display Header
"RTN","PRSADP2",84,0)
 D H1 Q:QT  W:'($E(IOST,1,2)'="C-"&'PG) @IOF
"RTN","PRSADP2",85,0)
 N A
"RTN","PRSADP2",86,0)
 S PG=PG+1,A=$$TWE^PRSATE0(DFN,$S($G(PPI)]"":PPI,1:""))
"RTN","PRSADP2",87,0)
 S X=$G(^PRSPC(DFN,0)) ;employees (partial) master record.
"RTN","PRSADP2",88,0)
 W ! W:$E(IOST,1,2)="C-" @IOF
"RTN","PRSADP2",89,0)
 W ?3,$P(X,"^",1),?36,"T&L ",$S($G(TLE):TLE,1:$P(X,"^",8)),?45,"Telework Ind: ",$S($P(A,U,3)]"":$P(A,U,3),$P(A,U)]""&($G(PPI)=""):$P(A,U),1:"None")
"RTN","PRSADP2",90,0)
 S X=$P(X,"^",9)
"RTN","PRSADP2",91,0)
 I '$G(PRSTLV)!($G(PRSTLV)=1) W ?68,"XXX-XX-",$E(X,6,9) W:PG>1 ! Q
"RTN","PRSADP2",92,0)
 I PRSTLV=2!(PRSTLV=3) W ?68,$E(X),"XX-XX-",$E(X,6,9) W:PG>1 ! Q 
"RTN","PRSADP2",93,0)
 I PRSTLV=7 W ?68,$E(X,1,3),"-",$E(X,4,5),"-",$E(X,6,9) W:PG>1 ! Q
"RTN","PRSADP2",94,0)
H1 I PG,$E(IOST,1,2)="C-" R !!,"Press RETURN to Continue.",X:DTIME S:'$T!(X["^") QT=1
"RTN","PRSADP2",95,0)
 Q
"RTN","PRSADP2",96,0)
EX G KILL^XUSCLEAN
"RTN","PRSADP2",97,0)
 Q
"RTN","PRSADP2",98,0)
 ;=============J.Heiges===============================================
"RTN","PRSADP2",99,0)
CHECKTLE(PAYPRD,EMPLOYEE,TLE) ;
"RTN","PRSADP2",100,0)
 ;  In cases where Time keepers, Payroll or employees are viewing 
"RTN","PRSADP2",101,0)
 ;an old pay period, make sure employee being viewed was not in 
"RTN","PRSADP2",102,0)
 ;a different T&L unit.
"RTN","PRSADP2",103,0)
 ;  This routine calls function that checks an old pay plan and
"RTN","PRSADP2",104,0)
 ;populates OLDPP() array with T&L Unit.
"RTN","PRSADP2",105,0)
 ;  To handle cases when we're dealing with the current pay period,
"RTN","PRSADP2",106,0)
 ;ignore cases when the lookup fails, since the current pay period
"RTN","PRSADP2",107,0)
 ;will not be in the Pay Run download file.  If old T&L unit not found, 
"RTN","PRSADP2",108,0)
 ;display current.
"RTN","PRSADP2",109,0)
 ;
"RTN","PRSADP2",110,0)
 ;VARS:
"RTN","PRSADP2",111,0)
 ;  PAYPRD= Pay period in file 458, .01 field, in the
"RTN","PRSADP2",112,0)
 ;          form YY-PP (year-pay period).  i.e 96-02
"RTN","PRSADP2",113,0)
 ;  EMPLOYEE= employees internal entry number in file 450.
"RTN","PRSADP2",114,0)
 ;
"RTN","PRSADP2",115,0)
 N PPLOLD,PPL,OLDPP
"RTN","PRSADP2",116,0)
 ; call old pay plan lookup to also return old T&L unit.
"RTN","PRSADP2",117,0)
 S PPLOLD=$$OLDPP^PRS8UT(PAYPRD,+EMPLOYEE) ;pay plan from PAYPDTMP.
"RTN","PRSADP2",118,0)
 ;
"RTN","PRSADP2",119,0)
 ; Did lookup find legitimate T&L unit ?  If so, is it different
"RTN","PRSADP2",120,0)
 ; than the employees current T&L?  If so, return old value.
"RTN","PRSADP2",121,0)
 I $L($G(OLDPP("TLUNIT")))>2 D
"RTN","PRSADP2",122,0)
 .  I OLDPP("TLUNIT")'=TLE S TLE=OLDPP("TLUNIT")
"RTN","PRSADP2",123,0)
 ;
"RTN","PRSADP2",124,0)
 Q
"RTN","PRSADP2",125,0)
 ;===================================================================
"RTN","PRSAPPO")
0^6^B17844809^B16889205
"RTN","PRSAPPO",1,0)
PRSAPPO ; HISC/MGD - Open New Pay Period ;07/30/07
"RTN","PRSAPPO",2,0)
 ;;4.0;PAID;**93,112,132**;Sep 21, 1995;Build 13
"RTN","PRSAPPO",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSAPPO",4,0)
 S PPI=$P(^PRST(458,0),"^",3),PPE=$P(^PRST(458,PPI,0),"^",1)
"RTN","PRSAPPO",5,0)
 D NX^PRSAPPU S X1=D1,X2=14 D C^%DTC S D1=X
"RTN","PRSAPPO",6,0)
 S X1=DT,X2=7 D C^%DTC I D1>X W *7,!!,"You cannot open a Pay Period more than 7 days in advance!" G EX
"RTN","PRSAPPO",7,0)
 D PP^PRSAPPU S X=D1 D DTP^PRSAPPU
"RTN","PRSAPPO",8,0)
A1 W !!,"Do you wish to Open Pay Period ",PPE," beginning ",Y," ? "
"RTN","PRSAPPO",9,0)
 R X:DTIME G:'$T!(X["^") EX S:X="" X="*" S X=$TR(X,"yesno","YESNO")
"RTN","PRSAPPO",10,0)
 I $P("YES",X,1)'="",$P("NO",X,1)'="" W !?5,*7,"Answer YES or NO" G A1
"RTN","PRSAPPO",11,0)
 G:$E(X,1)'="Y" EX
"RTN","PRSAPPO",12,0)
 I $D(^PRST(458,"B",PPE)) W !!,*7,"That Pay Period is already open!" G EX
"RTN","PRSAPPO",13,0)
 K DIC,DD,DO S DIC="^PRST(458,",DIC(0)="L",DLAYGO=458,X=PPE D FILE^DICN G:Y<1 EX
"RTN","PRSAPPO",14,0)
 K DIC,DLAYGO S PPI=+Y,PPIP=PPI-1
"RTN","PRSAPPO",15,0)
A2 I PPIP,'$D(^PRST(458,PPIP)) S PPIP=PPIP-1 G A2
"RTN","PRSAPPO",16,0)
 ; Generate dates
"RTN","PRSAPPO",17,0)
 S Y1=D1 F K=1:1:13 S X2=K,X1=D1 D C^%DTC S Y1=Y1_"^"_X
"RTN","PRSAPPO",18,0)
 S Y2="" F K=1:1:14 S X=$P(Y1,"^",K) D DTP^PRSAPPU S Y=$P("Sat Sun Mon Tue Wed Thu Fri"," ",K#7+1)_" "_Y S $P(Y2,"^",K)=Y
"RTN","PRSAPPO",19,0)
 S ^PRST(458,PPI,1)=Y1,^(2)=Y2
"RTN","PRSAPPO",20,0)
 F K=1:1:14 S X=$P(Y1,"^",K),^PRST(458,"AD",X)=PPI_"^"_K
"RTN","PRSAPPO",21,0)
A3 S ^PRST(458,PPI,"E",0)="^458.01P^^" D NOW^%DTC S NOW=% D ^PRSAPPH
"RTN","PRSAPPO",22,0)
 W !!,"Moving Current Employees into Pay Period ... " S N=0
"RTN","PRSAPPO",23,0)
 N MDAT,MIEN,PRSIEN
"RTN","PRSAPPO",24,0)
 S ATL="ATL00" F  S ATL=$O(^PRSPC(ATL)) Q:ATL'?1"ATL".E  S TLE=$E(ATL,4,6),NAM="" F  S NAM=$O(^PRSPC(ATL,NAM)) Q:NAM=""  F DFN=0:0 S DFN=$O(^PRSPC(ATL,NAM,DFN)) Q:DFN<1  D
"RTN","PRSAPPO",25,0)
 .Q:$D(^PRST(458,PPI,"E",DFN,"D",14,0))
"RTN","PRSAPPO",26,0)
 .I $P($G(^PRSPC(DFN,"LWOP")),"^",1)="Y" Q
"RTN","PRSAPPO",27,0)
 .I $P($G(^PRSPC(DFN,1)),"^",20)="Y" Q
"RTN","PRSAPPO",28,0)
 .I $P($G(^PRSPC(DFN,1)),"^",33)'="N" Q
"RTN","PRSAPPO",29,0)
 .S C0=^PRSPC(DFN,0)
"RTN","PRSAPPO",30,0)
 .I $P(C0,U,10)=2,$P(C0,U,16)=80 S NAWS="9Mo AWS",CT9=$G(CT9)+1
"RTN","PRSAPPO",31,0)
 .I $P(C0,U,10)=1,$P(C0,U,16)=72 S NAWS="36/40 AWS",CT36=$G(CT36)+1
"RTN","PRSAPPO",32,0)
 .S PRSIEN=DFN,MDAT=$P(PDT,U,1)
"RTN","PRSAPPO",33,0)
 .S MIEN=$$MIEN^PRSPUT1(PRSIEN,MDAT)
"RTN","PRSAPPO",34,0)
 .D MOV I $D(HOL),'MIEN S TT="HX",DUP=0 D E^PRSAPPH
"RTN","PRSAPPO",35,0)
 .;
"RTN","PRSAPPO",36,0)
 .; Call to Autopost PT Phy Leave
"RTN","PRSAPPO",37,0)
 .I $G(MIEN) D PLPP^PRSPLVA(PRSIEN,PPI)
"RTN","PRSAPPO",38,0)
 .;
"RTN","PRSAPPO",39,0)
 .; Call to Autopost PT Phy Extended Absence
"RTN","PRSAPPO",40,0)
 .I $G(MIEN) D PEAPP^PRSPEAA(PRSIEN,PPI)
"RTN","PRSAPPO",41,0)
 .S N=N+1 W:N#100=0 "." Q
"RTN","PRSAPPO",42,0)
 ;SEND A MESSAGE WHEN A 9 MONTH AWS NURSE IS ACTIVATED AT A SITE
"RTN","PRSAPPO",43,0)
 I +$G(NAWS) D
"RTN","PRSAPPO",44,0)
 .I $G(CT9) S TMP(1)=CT9_" 9 month AWS nurse(s) set up"
"RTN","PRSAPPO",45,0)
 .I $G(CT36) S TMP(2)=CT36_" 36/40 AWS nurse(s) set up"
"RTN","PRSAPPO",46,0)
 .S S=$$KSP^XUPARAM("INST")_"," D FIND^DIC(456,,,"Q",+S)
"RTN","PRSAPPO",47,0)
 .S IND=$S($D(^TMP("DILIST",$J,0)):+^(0),1:$O(^PRST(456,0)))
"RTN","PRSAPPO",48,0)
 .S CM9=$$GET1^DIQ(456,IND,2),CM36=$$GET1^DIQ(456,IND,4)
"RTN","PRSAPPO",49,0)
 .S MAX=$$GET1^DIQ(456,IND,3) N FDA,DIERR
"RTN","PRSAPPO",50,0)
 .I $G(CT9),CM9<MAX S FDA(456,IND_",",2)=CM9+1
"RTN","PRSAPPO",51,0)
 .I $G(CT36),CM36<MAX S FDA(456,IND_",",4)=CM36+1
"RTN","PRSAPPO",52,0)
 .Q:'$D(FDA)  D FILE^DIE("","FDA"),MSG^DIALOG()
"RTN","PRSAPPO",53,0)
 .S S=$$GET1^DIQ(4,+S,99)_" "_$$GET1^DIQ(4,+S,100),XMTEXT="TMP("
"RTN","PRSAPPO",54,0)
 .S TMP(3)="At "_S,XMDUZ=.5,XMY("VHAOIPAIDETANAWSBULLETIN@VA.GOV")=""
"RTN","PRSAPPO",55,0)
 .S XMSUB=+S_" 36/40, 9 month AWS nurse(s) deployed PRS*4.0*112"
"RTN","PRSAPPO",56,0)
 .D ^XMD K TMP
"RTN","PRSAPPO",57,0)
 S $P(^PRST(458,PPI,"E",0),"^",3,4)=N_"^"_N W !!,N," Employee Records created.",!
"RTN","PRSAPPO",58,0)
EX G KILL^XUSCLEAN
"RTN","PRSAPPO",59,0)
RES ; Re-start/Re-open a Pay Period
"RTN","PRSAPPO",60,0)
 S PPI=$P(^PRST(458,0),"^",3),PPIP=PPI-1 G A3
"RTN","PRSAPPO",61,0)
MOV ; Create PP entry for Employee
"RTN","PRSAPPO",62,0)
 I '$D(^PRST(458,PPI,"E",DFN,0)) S ^(0)=DFN_"^T" D
"RTN","PRSAPPO",63,0)
 .S CPI=$G(^PRST(458,PPIP,"E",DFN,0))
"RTN","PRSAPPO",64,0)
 .S CPI=$S($P(CPI,"^",7)'="":$P(CPI,"^",7),$P(CPI,"^",6)'="":$P(CPI,"^",6),1:$P($G(^PRSPC(DFN,1)),"^",7))
"RTN","PRSAPPO",65,0)
 .S:CPI="" CPI=0 S $P(^PRST(458,PPI,"E",DFN,0),"^",6)=CPI Q
"RTN","PRSAPPO",66,0)
 I '$D(^PRST(458,PPI,"E",DFN,"D",0)) S ^(0)="^458.02^14^14"
"RTN","PRSAPPO",67,0)
 ;
"RTN","PRSAPPO",68,0)
 ; if there's a PTP memo and this is the 1st PP for the memo then
"RTN","PRSAPPO",69,0)
 ; set the memo status to Active
"RTN","PRSAPPO",70,0)
 I $G(MIEN),($P($G(^PRST(458.7,+MIEN,9,1,0)),U,1)=$P($G(^PRST(458,PPI,0)),U,1)) D
"RTN","PRSAPPO",71,0)
 . N IENS,PRSFDA
"RTN","PRSAPPO",72,0)
 . S IENS=+MIEN_","
"RTN","PRSAPPO",73,0)
 . S PRSFDA(458.7,IENS,5)=2 ; 2:ACTIVE
"RTN","PRSAPPO",74,0)
 . D FILE^DIE("","PRSFDA")
"RTN","PRSAPPO",75,0)
 . K PRSFDA
"RTN","PRSAPPO",76,0)
 ;
"RTN","PRSAPPO",77,0)
 F DAY=1:1:14 I '$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),"^",2) D
"RTN","PRSAPPO",78,0)
 . D M1
"RTN","PRSAPPO",79,0)
 . ; Update Daily ESR and post Holiday Excused
"RTN","PRSAPPO",80,0)
 . I MIEN D ESRUPDT^PRSPUT3(PPI,DFN,DAY)
"RTN","PRSAPPO",81,0)
 Q
"RTN","PRSAPPO",82,0)
 ;
"RTN","PRSAPPO",83,0)
M1 ; Set a day
"RTN","PRSAPPO",84,0)
 N Y
"RTN","PRSAPPO",85,0)
 S Z=$G(^PRST(458,PPIP,"E",DFN,"D",DAY,0)),Y=$G(^(8)),TD=$P(Z,"^",2) I $P(Z,"^",3) S TD=$P(Z,"^",4),Y=$P(Y,U,5)
"RTN","PRSAPPO",86,0)
 S Y=$P(Y,U),X=$G(^PRST(457.1,+TD,1)),TDH=$P($G(^(0)),"^",6)
"RTN","PRSAPPO",87,0)
 S ^PRST(458,PPI,"E",DFN,"D",DAY,0)=DAY_"^"_TD S:TDH'="" $P(^(0),"^",8)=TDH S:X'="" ^(1)=X
"RTN","PRSAPPO",88,0)
 ;telework tour
"RTN","PRSAPPO",89,0)
 I Y]"",$P($$TWE^PRSATE0(DFN),U,2)="Y" S ^PRST(458,PPI,"E",DFN,"D",DAY,8)=Y
"RTN","PRSAPPO",90,0)
 QUIT
"RTN","PRSAPPP")
0^7^B13937943^B13712907
"RTN","PRSAPPP",1,0)
PRSAPPP ; HISC/REL-Payroll Process Prior PP ;5/31/95  10:00
"RTN","PRSAPPP",2,0)
 ;;4.0;PAID;**114,132**;Sep 21, 1995;Build 13
"RTN","PRSAPPP",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSAPPP",4,0)
 S PRSTLV=7
"RTN","PRSAPPP",5,0)
 W:$E(IOST,1,2)="C-" @IOF W !?26,"VA TIME & ATTENDANCE SYSTEM"
"RTN","PRSAPPP",6,0)
 W !?26,"PRIOR PAY PERIOD CORRECTIONS"
"RTN","PRSAPPP",7,0)
R0 R !!,"Select T&L Unit (or ALL): ",X:DTIME G:'$T!("^"[X) EX S X=$TR(X,"al","AL") I X="ALL" S TLE=""
"RTN","PRSAPPP",8,0)
 E  K DIC S DIC="^PRST(455.5,",DIC(0)="EMQ" D ^DIC G EX:$D(DTOUT),R0:Y<1 S TLE=$P(Y,"^",2)
"RTN","PRSAPPP",9,0)
 W ! K IOP,%ZIS S %ZIS("A")="Select Device: ",%ZIS="MQ" D ^%ZIS K %ZIS,IOP G:POP EX
"RTN","PRSAPPP",10,0)
 I $D(IO("Q")) S PRSAPGM="Q1^PRSAPPP",PRSALST="TLE" D QUE^PRSAUTL G EX
"RTN","PRSAPPP",11,0)
 U IO D Q1 D ^%ZISC K %ZIS,IOP G EX
"RTN","PRSAPPP",12,0)
Q1 ; Process List
"RTN","PRSAPPP",13,0)
 D NOW^%DTC S DTP=% D DTP S (PG,QT)=0 S LNE="" S $P(LNE,"-",80)=""
"RTN","PRSAPPP",14,0)
 F DFN=0:0 S DFN=$O(^PRST(458,"AXA",DFN)) Q:DFN<1  D CHK I L1 F PPI=0:0 S PPI=$O(^PRST(458,"AXA",DFN,PPI)) Q:PPI<1  F AUN=0:0 S AUN=$O(^PRST(458,"AXA",DFN,PPI,AUN)) Q:AUN<1  D PROC G:QT Q2
"RTN","PRSAPPP",15,0)
Q2 Q
"RTN","PRSAPPP",16,0)
PROC ; Process
"RTN","PRSAPPP",17,0)
 D HDR Q:QT  S PPE=$P($G(^PRST(458,PPI,0)),"^",1) D HDR^PRSADP1 W !,LNE
"RTN","PRSAPPP",18,0)
 S X0=$G(^PRST(458,PPI,"E",DFN,"X",AUN,0)),TYP=$P(X0,"^",4)
"RTN","PRSAPPP",19,0)
 D TM:TYP="T",VC:TYP="V",HZ:TYP="H"
"RTN","PRSAPPP",20,0)
 I $D(^PRST(458,PPI,"E",DFN,"X",AUN,7)) W !!,"Change Remarks: ",^(7)
"RTN","PRSAPPP",21,0)
 D:$E(IOST,1,2)="C-" CLR Q
"RTN","PRSAPPP",22,0)
TM ; Process Time/Tour Change
"RTN","PRSAPPP",23,0)
 W !?29,"* * * Prior Data * * *" S IFN=AUN  S DAY=$P($G(^PRST(458,PPI,"E",DFN,"X",IFN,1)),"^",1),DTE=$P($G(^PRST(458,PPI,2)),"^",+DAY) D GET,DIS^PRSAPPQ
"RTN","PRSAPPP",24,0)
 W !,LNE W !?27,"* * * Corrected Data * * *" S IFN=AUN+1 D GET D DIS^PRSAPPQ
"RTN","PRSAPPP",25,0)
 W !,LNE Q
"RTN","PRSAPPP",26,0)
VC ; Process VCS Sales Change
"RTN","PRSAPPP",27,0)
 W !?29,"* * * Prior Data * * *" S IFN=AUN D GET S Z=AUR(1) D VCS^PRSAPPQ
"RTN","PRSAPPP",28,0)
 W !,LNE W !?27,"* * * Corrected Data * * *" S IFN=AUN+1 D GET S Z=AUR(1) D VCS^PRSAPPQ
"RTN","PRSAPPP",29,0)
 W !,LNE Q
"RTN","PRSAPPP",30,0)
HZ ; Process Hazard Change
"RTN","PRSAPPP",31,0)
 W !?29,"* * * Prior Data * * *" S IFN=AUN D GET S Z=AUR(1) D ED^PRSAPPQ
"RTN","PRSAPPP",32,0)
 W !,LNE W !?27,"* * * Corrected Data * * *" S IFN=AUN+1 D GET S Z=AUR(1) D ED^PRSAPPQ
"RTN","PRSAPPP",33,0)
 W !,LNE Q
"RTN","PRSAPPP",34,0)
GET ; get prior data array of node x
"RTN","PRSAPPP",35,0)
 K AUR S AUC=0 I '$D(^PRST(458,PPI,"E",DFN,"X",IFN)) S IFN=$O(^(IFN)) I IFN<1 S AUC=1 G G1
"RTN","PRSAPPP",36,0)
 I $P($G(^PRST(458,PPI,"E",DFN,"X",IFN,0)),"^",4)'=TYP S IFN=IFN+1 G GET
"RTN","PRSAPPP",37,0)
 I TYP="T",$P($G(^PRST(458,PPI,"E",DFN,"X",IFN,1)),"^",1)'=DAY S IFN=IFN+1 G GET
"RTN","PRSAPPP",38,0)
 F L1=1:1:$S(TYP="T":6,1:1) S AUR(L1)=$G(^PRST(458,PPI,"E",DFN,"X",IFN,L1))
"RTN","PRSAPPP",39,0)
 ;get the prior telework tour and hours
"RTN","PRSAPPP",40,0)
 I TYP="T" S AUR(8)=$G(^PRST(458,PPI,"E",DFN,"X",IFN,8))
"RTN","PRSAPPP",41,0)
 QUIT
"RTN","PRSAPPP",42,0)
 ;get current data array of node day #
"RTN","PRSAPPP",43,0)
G1 I TYP'="T" G G2
"RTN","PRSAPPP",44,0)
 S L2=0 F L1=0,1,2,10,3,4,8 S L2=L2+1,AUR(L2)=$G(^PRST(458,PPI,"E",DFN,"D",DAY,L1))
"RTN","PRSAPPP",45,0)
 QUIT
"RTN","PRSAPPP",46,0)
G2 I TYP="H" S AUR(1)=$G(^PRST(458,PPI,"E",DFN,4))
"RTN","PRSAPPP",47,0)
 I TYP="V" S AUR(1)=$G(^PRST(458,PPI,"E",DFN,2))
"RTN","PRSAPPP",48,0)
 Q
"RTN","PRSAPPP",49,0)
CHK ; Screen Employee for Selected T&L
"RTN","PRSAPPP",50,0)
 S L1=1 Q:TLE=""  S:$P($G(^PRSPC(DFN,0)),"^",8)'=TLE L1=0 Q
"RTN","PRSAPPP",51,0)
CLR ; Clear Entries
"RTN","PRSAPPP",52,0)
 R !!,"Clear Correction? ",X:DTIME S:'$T!(X["^") QT=1 Q:QT  S X=$TR(X,"yesno","YESNO")
"RTN","PRSAPPP",53,0)
 I $P("YES",X,1)'="",$P("NO",X,1)'="" W *7," Answer YES or NO" G CLR
"RTN","PRSAPPP",54,0)
 I X'?1"Y".E Q
"RTN","PRSAPPP",55,0)
 D NOW^%DTC S $P(^PRST(458,PPI,"E",DFN,"X",AUN,0),"^",5,7)="P^"_DUZ_"^"_%
"RTN","PRSAPPP",56,0)
 K ^PRST(458,"AXA",DFN,PPI,AUN)
"RTN","PRSAPPP",57,0)
 W " ... done." Q
"RTN","PRSAPPP",58,0)
HDR ; Display Header
"RTN","PRSAPPP",59,0)
 W:'($E(IOST,1,2)'="C-"&'PG) @IOF S PG=PG+1 Q:$E(IOST,1,2)="C-"
"RTN","PRSAPPP",60,0)
 W !?26,"VA TIME & ATTENDANCE SYSTEM",?72,"Page ",PG
"RTN","PRSAPPP",61,0)
 W !?26,"PRIOR PAY PERIOD CORRECTIONS"
"RTN","PRSAPPP",62,0)
 W !!?(80-$L(DTP)\2),DTP Q
"RTN","PRSAPPP",63,0)
DTP ; Printable Date/Time
"RTN","PRSAPPP",64,0)
 S %=DTP,DTP=$J(+$E(DTP,6,7),2)_"-"_$P("Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec"," ",+$E(DTP,4,5))_"-"_$E(DTP,2,3)
"RTN","PRSAPPP",65,0)
 S:%#1 %=+$E(%_"0",9,10)_"^"_$E(%_"000",11,12),DTP=DTP_$J($S(%>12:%-12,1:+%),3)_":"_$P(%,"^",2)_$S(%<12:"am",%<24:"pm",1:"m") K % Q
"RTN","PRSAPPP",66,0)
EX G KILL^XUSCLEAN
"RTN","PRSAPPQ")
0^8^B11158277^B9658395
"RTN","PRSAPPQ",1,0)
PRSAPPQ ; HISC/REL-Display Time Data for Prior Pay Periods ;11/29/95  13:44
"RTN","PRSAPPQ",2,0)
 ;;4.0;PAID;**6,132**;Sep 21, 1995;Build 13
"RTN","PRSAPPQ",3,0)
DIS W !!,?7,"Date",?17,"TW  Scheduled Tour",?46,"Tour Exceptions"
"RTN","PRSAPPQ",4,0)
F0 ; Display Frames
"RTN","PRSAPPQ",5,0)
 N Y8
"RTN","PRSAPPQ",6,0)
 K Y1,Y2 S Y1=AUR(2),Y2=AUR(3),Y3=AUR(5),Y4=AUR(6),TC=$P(AUR(1),"^",2),Y8=$G(AUR(7))
"RTN","PRSAPPQ",7,0)
 I Y1="" S Y1=$S(TC=1:"Day Off",TC=2:"Day Tour",TC=3!(TC=4):"Intermittent",1:"")
"RTN","PRSAPPQ",8,0)
 I " 1 3 4 "'[TC,$P(AUR(4),"^",1)="" S Y2(1)="Unposted"
"RTN","PRSAPPQ",9,0)
 I TC=3,$P(AUR(4),"^",4)=1 S Y2(1)="Day Worked"
"RTN","PRSAPPQ",10,0)
 W !?3,DTE S (L3,L4)=0 I Y1="",Y2="" G EX
"RTN","PRSAPPQ",11,0)
 D S1
"RTN","PRSAPPQ",12,0)
 F K=1:1 Q:'$D(Y1(K))&'$D(Y2(K))  W:K>1 ! W:$D(Y1(K)) ?17,$P($G(Y8),U),?21,Y1(K) W:$D(Y2(K)) ?45,$P(Y2(K),"^",1),?63,$P(Y2(K),"^",2)
"RTN","PRSAPPQ",13,0)
 W:Y3'="" !?10,Y3
"RTN","PRSAPPQ",14,0)
EX Q
"RTN","PRSAPPQ",15,0)
S1 ; Set Schedule Array
"RTN","PRSAPPQ",16,0)
 F L1=1:3:19 S A1=$P(Y1,"^",L1) Q:A1=""  S L3=L3+1,Y1(L3)=A1 S:$P(Y1,"^",L1+1)'="" Y1(L3)=Y1(L3)_"-"_$P(Y1,"^",L1+1) I $P(Y1,"^",L1+2)'="" S L3=L3+1,Y1(L3)="  "_$P($G(^PRST(457.2,+$P(Y1,"^",L1+2),0)),"^",1)
"RTN","PRSAPPQ",17,0)
 G:Y4="" S2
"RTN","PRSAPPQ",18,0)
 F L1=1:3:19 S A1=$P(Y4,"^",L1) Q:A1=""  S L3=L3+1,Y1(L3)=A1 S:$P(Y4,"^",L1+1)'="" Y1(L3)=Y1(L3)_"-"_$P(Y4,"^",L1+1) I $P(Y4,"^",L1+2)'="" S L3=L3+1,Y1(L3)="  "_$P($G(^PRST(457.2,+$P(Y4,"^",L1+2),0)),"^",1)
"RTN","PRSAPPQ",19,0)
S2 ; Set Worked Array
"RTN","PRSAPPQ",20,0)
 F L1=1:4:25 D  I A1="" G S8
"RTN","PRSAPPQ",21,0)
 .S A1=$P(Y2,"^",L1+2) Q:A1=""  S L4=L4+1
"RTN","PRSAPPQ",22,0)
 .S A2=$P(Y2,"^",L1) I A2'="" S Y2(L4)=A2_"-"_$P(Y2,"^",L1+1)
"RTN","PRSAPPQ",23,0)
 .S K=$O(^PRST(457.3,"B",A1,0)) S $P(Y2(L4),"^",2)=A1_" "_$P($G(^PRST(457.3,+K,0)),"^",2)
"RTN","PRSAPPQ",24,0)
 .I $P(Y2,"^",L1+3)'="" S L4=L4+1,Y2(L4)="  "_$P($G(^PRST(457.4,+$P(Y2,"^",L1+3),0)),"^",1)
"RTN","PRSAPPQ",25,0)
 .QUIT
"RTN","PRSAPPQ",26,0)
 QUIT
"RTN","PRSAPPQ",27,0)
 ;
"RTN","PRSAPPQ",28,0)
S8 ;telweork hours of node 8
"RTN","PRSAPPQ",29,0)
 F L1=2,3,4 I $P(Y8,U,L1) S L4=L4+1,Y2(L4)=$J($P(Y8,U,L1),0,2)_" "_$S(TC=2!(TC=3):"Day",1:"Hrs")_" - Telework "_$P("REG^MED^Ad Hoc",U,L1-1)
"RTN","PRSAPPQ",30,0)
 QUIT
"RTN","PRSAPPQ",31,0)
 ;
"RTN","PRSAPPQ",32,0)
VCS ; Display VCS Sales/Fee Basis
"RTN","PRSAPPQ",33,0)
 S PAYP=$P($G(^PRSPC(DFN,0)),"^",21) W !!?30,$S(PAYP="F":"Fee Basis Appointee",1:"VCS Commission Sales")
"RTN","PRSAPPQ",34,0)
 W !?11,"Sun     Mon     Tue     Wed     Thu     Fri     Sat     Total",!
"RTN","PRSAPPQ",35,0)
 W !,"Week 1" S VS=0,L1=1 F K=1:1:7 S L1=L1+8,Z1=$P(Z,"^",K) I Z1'="" S VS=VS+Z1 W ?L1,$J(Z1,7,2)
"RTN","PRSAPPQ",36,0)
 W ?63,$J(VS,9,2)
"RTN","PRSAPPQ",37,0)
 W !,"Week 2" S VS=0,L1=1 F K=8:1:14 S L1=L1+8,Z1=$P(Z,"^",K) I Z1'="" S VS=VS+Z1 W ?L1,$J(Z1,7,2)
"RTN","PRSAPPQ",38,0)
 W ?63,$J(VS,9,2)
"RTN","PRSAPPQ",39,0)
 I PAYP="F" W !! F K=19:1:21 S Z1=$P(Z,"^",K) W "Total ",$P("Hours Days Procedures"," ",K-18),": ",Z1,"    "
"RTN","PRSAPPQ",40,0)
 Q
"RTN","PRSAPPQ",41,0)
ED ; Display Envir. Diff.
"RTN","PRSAPPQ",42,0)
 W !!?26,"Environmental Differentials",!
"RTN","PRSAPPQ",43,0)
 S Y="" F K=1:2:5 S Z1=$P(Z,"^",K) Q:'Z1  S:Y'="" Y=Y_"; " S Y=Y_$P($G(^PRST(457.6,+Z1,0)),"^",1)_" ( "_$P($G(^(0)),"^",3)_" % ) "_$P(Z,"^",K+1)_" Hrs."
"RTN","PRSAPPQ",44,0)
 I Y'="" W !,"Week 1: ",Y
"RTN","PRSAPPQ",45,0)
 S Y="" F K=7:2:11 S Z1=$P(Z,"^",K) Q:'Z1  S:Y'="" Y=Y_"; " S Y=Y_$P($G(^PRST(457.6,+Z1,0)),"^",1)_" ( "_$P($G(^(0)),"^",3)_" % ) "_$P(Z,"^",K+1)_" Hrs."
"RTN","PRSAPPQ",46,0)
 I Y'="" W !,"Week 2: ",Y
"RTN","PRSAPPQ",47,0)
 Q
"RTN","PRSAPRT")
0^9^B6196723^B6082523
"RTN","PRSAPRT",1,0)
PRSAPRT ; HISC/REL,WIRMFO/JAH-Return Record to TimeKeeper ;1/31/2007
"RTN","PRSAPRT",2,0)
 ;;4.0;PAID;**7,8,21,111,132**;Sep 21, 1995;Build 13
"RTN","PRSAPRT",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSAPRT",4,0)
 ;
"RTN","PRSAPRT",5,0)
 ; Comments & Modifications by JAH Washington IRMFO.
"RTN","PRSAPRT",6,0)
 ; Timecards are returned to Time Keeper 4 correction & 
"RTN","PRSAPRT",7,0)
 ; re-certification, only 4 pay period being processed & they
"RTN","PRSAPRT",8,0)
 ; must be returned be4 timecards have been transmitted to
"RTN","PRSAPRT",9,0)
 ; Austin.  Time cards 4 pay period just closed are to be 
"RTN","PRSAPRT",10,0)
 ; transmitted to Austin by 10 am on Wednesday of first week 
"RTN","PRSAPRT",11,0)
 ; of current pay period.  There may be a period in begining 
"RTN","PRSAPRT",12,0)
 ; of a new pay period in which an employee has been set up 
"RTN","PRSAPRT",13,0)
 ; with a new pay plan & their time card has not been 
"RTN","PRSAPRT",14,0)
 ; decomposed & transmitted.  If this is case Austin will reject 
"RTN","PRSAPRT",15,0)
 ; card due to conflicting pay plans.  
"RTN","PRSAPRT",16,0)
 ;
"RTN","PRSAPRT",17,0)
 N PPERIOD,OLDPP,PAYP
"RTN","PRSAPRT",18,0)
 ;
"RTN","PRSAPRT",19,0)
 ;Ask User for pay period
"RTN","PRSAPRT",20,0)
 S DIC="^PRST(458,",DIC(0)="AEQM"
"RTN","PRSAPRT",21,0)
 S DIC("A")="Select PAY PERIOD: "
"RTN","PRSAPRT",22,0)
 W !
"RTN","PRSAPRT",23,0)
 D ^DIC K DIC
"RTN","PRSAPRT",24,0)
 ;
"RTN","PRSAPRT",25,0)
 ;Quit if invalid pay period
"RTN","PRSAPRT",26,0)
 G:Y<1 EX
"RTN","PRSAPRT",27,0)
 S PPI=+Y,PPERIOD=$P(Y,"^",2)
"RTN","PRSAPRT",28,0)
 ;
"RTN","PRSAPRT",29,0)
NME ;ask for name of employee who's timecard is to be returned.
"RTN","PRSAPRT",30,0)
 K DIC
"RTN","PRSAPRT",31,0)
 S DIC("A")="Select EMPLOYEE: "
"RTN","PRSAPRT",32,0)
 S DIC(0)="AEQM"
"RTN","PRSAPRT",33,0)
 S DIC="^PRSPC("
"RTN","PRSAPRT",34,0)
 W !
"RTN","PRSAPRT",35,0)
 D ^DIC S DFN=+Y K DIC
"RTN","PRSAPRT",36,0)
 ;Quit if employees name not found in file 450 (PAID employee).
"RTN","PRSAPRT",37,0)
 G:DFN<1 EX
"RTN","PRSAPRT",38,0)
 ;
"RTN","PRSAPRT",39,0)
 I '$D(^PRST(458,PPI,"E",DFN,0)) W $C(7),!!,"No Record exists to return!" G EX
"RTN","PRSAPRT",40,0)
 ;
"RTN","PRSAPRT",41,0)
 ;Display message to payroll if employee has changed pay plans.  
"RTN","PRSAPRT",42,0)
 ;Austin will reject a timecard if pay plan is different.
"RTN","PRSAPRT",43,0)
 S GO=1
"RTN","PRSAPRT",44,0)
 S OLDPP=$$OLDPP^PRS8UT(PPERIOD,DFN)
"RTN","PRSAPRT",45,0)
 S PAYP=$P($G(^PRSPC(DFN,0)),"^",21)
"RTN","PRSAPRT",46,0)
 I OLDPP'=0,(OLDPP'=PAYP) D
"RTN","PRSAPRT",47,0)
 . W !,"PLEASE NOTE:  Employee has changed pay plans.  "
"RTN","PRSAPRT",48,0)
 . W !,"Current Pay Plan: ",PAYP
"RTN","PRSAPRT",49,0)
 . W !,"Pay Plan during Pay Period ",PPERIOD," ",OLDPP
"RTN","PRSAPRT",50,0)
 . S GO=$$CONTINUE^PRSAUTL
"RTN","PRSAPRT",51,0)
 I 'GO G EX
"RTN","PRSAPRT",52,0)
 ;
"RTN","PRSAPRT",53,0)
 S STAT=$P($G(^PRST(458,PPI,"E",DFN,0)),"^",2)
"RTN","PRSAPRT",54,0)
 I "T"[STAT W $C(7),!!,"TimeKeeper still has this Employee." G EX
"RTN","PRSAPRT",55,0)
 I STAT="P" D B W !!," . . . Returned to Timekeeper." G EX
"RTN","PRSAPRT",56,0)
 W $C(7),!!,"Warning! This Employee has already been Transmitted."
"RTN","PRSAPRT",57,0)
A R !!,"Return to Timekeeper Anyway? ",X:DTIME G:'$T!(X["^") EX S:X="" X="*" S X=$TR(X,"yesno","YESNO")
"RTN","PRSAPRT",58,0)
 I $P("YES",X,1)'="",$P("NO",X,1)'="" W $C(7)," Answer YES or NO" G A
"RTN","PRSAPRT",59,0)
 I X?1"Y".E D B W !!," . . . Returned to Timekeeper." G EX
"RTN","PRSAPRT",60,0)
 G EX
"RTN","PRSAPRT",61,0)
 ;reset status and telework indicator
"RTN","PRSAPRT",62,0)
B S $P(^PRST(458,PPI,"E",DFN,0),"^",2)="T",$P(^(0),"^",8)="" K ^(5)
"RTN","PRSAPRT",63,0)
 D AUTOPINI^PRS8(PPI,DFN)
"RTN","PRSAPRT",64,0)
 Q
"RTN","PRSAPRT",65,0)
EX G KILL^XUSCLEAN
"RTN","PRSASC1")
0^10^B29081248^B26512238
"RTN","PRSASC1",1,0)
PRSASC1 ; HISC/MGD - File Approvals ;01/22/05
"RTN","PRSASC1",2,0)
 ;;4.0;PAID;**55,93,132**;Sep 21, 1995;Build 13
"RTN","PRSASC1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSASC1",4,0)
 D NOW^%DTC S NOW=%
"RTN","PRSASC1",5,0)
 F DA=0:0 S DA=$O(AP(1,DA)) Q:DA<1  D LV1
"RTN","PRSASC1",6,0)
 F DA=0:0 S DA=$O(AP(2,DA)) Q:DA<1  D OT1
"RTN","PRSASC1",7,0)
 F DA=0:0 S DA=$O(AP(3,DA)) Q:DA<1  D ED1
"RTN","PRSASC1",8,0)
 S NX="" F  S NX=$O(AP(4,NX)) Q:NX=""  D TC1
"RTN","PRSASC1",9,0)
 S NOD="AXR",NX="" F  S NX=$O(AP(5,NX)) Q:NX=""  D APP^PRSASC3
"RTN","PRSASC1",10,0)
 D UPD^PRSASAL,APP^PRSASAL Q
"RTN","PRSASC1",11,0)
LV1 ; Process action
"RTN","PRSASC1",12,0)
 N SKIP
"RTN","PRSASC1",13,0)
 S SKIP=0
"RTN","PRSASC1",14,0)
 ; if action = approve and employee has any PTP memos
"RTN","PRSASC1",15,0)
 I $P(AP(1,DA),"^",2)="A",$$PTP^PRSPUT3($P(AP(1,DA),"^",1)) D
"RTN","PRSASC1",16,0)
 . N LVY0,PPLCK,PPLCKE,PRSEX
"RTN","PRSASC1",17,0)
 . S LVY0=$G(^PRST(458.1,DA,0))
"RTN","PRSASC1",18,0)
 . ; lock applicable time cards
"RTN","PRSASC1",19,0)
 . D LCK^PRSPAPU($P(LVY0,U,2),$$FMADD^XLFDT($P(LVY0,U,3),-1),$P(LVY0,U,5),.PPLCK,.PPLCKE)
"RTN","PRSASC1",20,0)
 . ; if problem locking time cards
"RTN","PRSASC1",21,0)
 . I $D(PPLCKE) D
"RTN","PRSASC1",22,0)
 . . S SKIP=1 ; set flag to skip approval of leave
"RTN","PRSASC1",23,0)
 . . ; construct and send error message
"RTN","PRSASC1",24,0)
 . . D LVEMSG
"RTN","PRSASC1",25,0)
 . I '$G(SKIP),$D(PPLCK) D
"RTN","PRSASC1",26,0)
 . . ; attempt to auto post leave to ESR
"RTN","PRSASC1",27,0)
 . . D PLR^PRSPLVA(DA,,,.PRSEX)
"RTN","PRSASC1",28,0)
 . . ; if fatal error during auto post
"RTN","PRSASC1",29,0)
 . . I $D(PRSEX) D
"RTN","PRSASC1",30,0)
 . . . S SKIP=1 ; set flag to skip approval of leave
"RTN","PRSASC1",31,0)
 . . . ; construct and send error message
"RTN","PRSASC1",32,0)
 . . . D LVEMSG
"RTN","PRSASC1",33,0)
 . D TCULCK^PRSPAPU($P(LVY0,U,2),.PPLCK) ; remove any TC locks
"RTN","PRSASC1",34,0)
 Q:SKIP
"RTN","PRSASC1",35,0)
 S DFN=$P(AP(1,DA),"^",1),ACT=$P(AP(1,DA),"^",2),COM=$P(AP(1,DA),"^",3),X=ESNAM,X1=DUZ,X2=DA D EN^XUSHSHP
"RTN","PRSASC1",36,0)
 S $P(^PRST(458.1,DA,0),"^",9)=ACT K ^PRST(458.1,"AR",DFN,DA)
"RTN","PRSASC1",37,0)
 S $P(^PRST(458.1,DA,0),"^",12,14)=DUZ_"^"_NOW_"^"_X
"RTN","PRSASC1",38,0)
 S:COM'="" $P(^PRST(458.1,DA,1),"^",1)=COM Q
"RTN","PRSASC1",39,0)
OT1 ; Process action
"RTN","PRSASC1",40,0)
 S DFN=$P(AP(2,DA),"^",1),ACT=$P(AP(2,DA),"^",2),COM=$P(AP(2,DA),"^",3),X=ESNAM,X1=DUZ,X2=DA D EN^XUSHSHP
"RTN","PRSASC1",41,0)
 I ACT="S" S ^PRST(458.2,"AS",DFN,DA)=""
"RTN","PRSASC1",42,0)
 S $P(^PRST(458.2,DA,0),"^",8)=ACT K ^PRST(458.2,"AR",DFN,DA)
"RTN","PRSASC1",43,0)
 S $P(^PRST(458.2,DA,0),"^",13,15)=DUZ_"^"_NOW_"^"_X
"RTN","PRSASC1",44,0)
 S:COM'="" $P(^PRST(458.2,DA,1),"^",1)=COM Q
"RTN","PRSASC1",45,0)
ED1 ; Process action
"RTN","PRSASC1",46,0)
 S DFN=$P(AP(3,DA),"^",1),ACT=$P(AP(3,DA),"^",2),COM=$P(AP(3,DA),"^",3),X=ESNAM,X1=DUZ,X2=DA D EN^XUSHSHP
"RTN","PRSASC1",47,0)
 S $P(^PRST(458.3,DA,0),"^",9)=ACT K ^PRST(458.3,"AR",DFN,DA)
"RTN","PRSASC1",48,0)
 S $P(^PRST(458.3,DA,0),"^",12,14)=DUZ_"^"_NOW_"^"_X
"RTN","PRSASC1",49,0)
 S:COM'="" $P(^PRST(458.3,DA,1),"^",1)=COM D:ACT="A" ^PRSASC2 Q
"RTN","PRSASC1",50,0)
TC1 ; Tour Process action
"RTN","PRSASC1",51,0)
 N PRSTW,PRSTWA,PRSTWB
"RTN","PRSASC1",52,0)
 S DFN=$P(AP(4,NX),"^",1),ACT=$P(AP(4,NX),"^",2),PPI=$P(NX,"~",2)
"RTN","PRSASC1",53,0)
 S PRSTWA=$$TWE^PRSATE0(DFN,PPI),PRSTWB=$P(PRSTWA,U,4)="Y"
"RTN","PRSASC1",54,0)
 S X=ESNAM,X1=DUZ,X2=DFN D EN^XUSHSHP
"RTN","PRSASC1",55,0)
 I ACT="A" F DAY=0:0 S DAY=$O(^PRST(458,"ATC",DFN,PPI,DAY)) G:DAY="" T1 S $P(^PRST(458,PPI,"E",DFN,"D",DAY,0),"^",5,7)=DUZ_"^"_NOW_"^"_X
"RTN","PRSASC1",56,0)
 ; tour change(s) were disapproved or canceled so undo them
"RTN","PRSASC1",57,0)
 S STAT=$P($G(^PRST(458,PPI,"E",DFN,0)),"^",2) I STAT'="","PX"[STAT G T1
"RTN","PRSASC1",58,0)
 S TYP="" F DAY=0:0 S DAY=$O(^PRST(458,"ATC",DFN,PPI,DAY)) Q:DAY=""  D
"RTN","PRSASC1",59,0)
 .; special undo if tour change made to next pay period
"RTN","PRSASC1",60,0)
 .I $P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),U,3)=2 D  Q
"RTN","PRSASC1",61,0)
 ..S $P(^PRST(458,PPI,"E",DFN,"D",DAY,0),U,3,4)="^"
"RTN","PRSASC1",62,0)
 ..S $P(^PRST(458,PPI,"E",DFN,"D",DAY,0),U,10,11)=DUZ_"^"_NOW
"RTN","PRSASC1",63,0)
 ..I $G(^PRST(458,PPI,"E",DFN,"D",DAY,8))]"" S $P(^(8),U,5)="" I ^(8)?."^" K ^PRST(458,PPI,"E",DFN,"D",DAY,8)
"RTN","PRSASC1",64,0)
 ..QUIT
"RTN","PRSASC1",65,0)
 .; tour change not made to next pay period
"RTN","PRSASC1",66,0)
 .I $D(^PRST(458,PPI,"E",DFN,"D",DAY,4)) K ^(4) S $P(^(0),"^",13,15)="^^"
"RTN","PRSASC1",67,0)
 .I $D(^PRST(458,PPI,"E",DFN,"D",DAY,8)) S PRSTW(DAY)=$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,8)),U,5)
"RTN","PRSASC1",68,0)
 .S TD=$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),"^",4),Y=$G(^PRST(457.1,+TD,1)),TDH=$P($G(^(0)),"^",6) D SET^PRSATE
"RTN","PRSASC1",69,0)
 .Q
"RTN","PRSASC1",70,0)
T1 K ^PRST(458,"ATC",DFN,PPI) Q
"RTN","PRSASC1",71,0)
 ;
"RTN","PRSASC1",72,0)
LVEMSG ; Construct and send a leave approval error message
"RTN","PRSASC1",73,0)
 ; inputs LVY0,PPLCKE(),
"RTN","PRSASC1",74,0)
 N LN,PRSARR,PRSI,PRST,TYPI,XMDUZ,XMMG,XMSUB,XMTEXT,XMY,XMZ
"RTN","PRSASC1",75,0)
 S PRST(1)="You recently entered an approval for the following leave request:"
"RTN","PRSASC1",76,0)
 S PRST(2)=" "
"RTN","PRSASC1",77,0)
 S PRST(3)="  Employee: "_$P($G(^PRSPC($P(LVY0,U,2),0)),U)
"RTN","PRSASC1",78,0)
 S TYPI=$S($P(LVY0,U,7)'="":$O(^PRST(457.3,"B",$P(LVY0,U,7),0)),1:"")
"RTN","PRSASC1",79,0)
 I TYPI S PRST(3)=PRST(3)_"   Type: "_$P($G(^PRST(457.3,TYPI,0)),U,3)
"RTN","PRSASC1",80,0)
 S PRST(4)="  "_$P(LVY0,U,4)_" "_$$FMTE^XLFDT($P(LVY0,U,3))
"RTN","PRSASC1",81,0)
 S PRST(4)=PRST(4)_"  to  "_$P(LVY0,U,6)_" "_$$FMTE^XLFDT($P(LVY0,U,5))
"RTN","PRSASC1",82,0)
 S PRST(5)=" "
"RTN","PRSASC1",83,0)
 S PRST(6)="The software was unable to save the approval of this leave"
"RTN","PRSASC1",84,0)
 S PRST(7)="request and nothing has been changed.  The request will"
"RTN","PRSASC1",85,0)
 S PRST(8)="continue to appear as a pending action under the Supervisory"
"RTN","PRSASC1",86,0)
 S PRST(9)="Approvals option."
"RTN","PRSASC1",87,0)
 S PRST(10)=" "
"RTN","PRSASC1",88,0)
 S LN=10
"RTN","PRSASC1",89,0)
 ; load lock problems (if any)
"RTN","PRSASC1",90,0)
 I $D(PPLCKE) D
"RTN","PRSASC1",91,0)
 . D RLCKE^PRSPAPU(.PPLCKE,0,"PRSARR")
"RTN","PRSASC1",92,0)
 . S PRSI=0
"RTN","PRSASC1",93,0)
 . F  S PRSI=$O(PRSARR(PRSI)) Q:'PRSI  S LN=LN+1,PRST(LN)=PRSARR(PRSI)
"RTN","PRSASC1",94,0)
 ; load time card status problem (if any)
"RTN","PRSASC1",95,0)
 I $G(PRSEX) D
"RTN","PRSASC1",96,0)
 . S LN=LN+1,PRST(LN)="This leave request can not be approved because the employee is"
"RTN","PRSASC1",97,0)
 . S LN=LN+1,PRST(LN)="a part-time physician with a memorandum of service level"
"RTN","PRSASC1",98,0)
 . S LN=LN+1,PRST(LN)="expectations, and the leave request may impact a time card for"
"RTN","PRSASC1",99,0)
 . S LN=LN+1,PRST(LN)="pay period "_$P($G(^PRST(458,PRSEX,0)),U)_" that has a status of Payroll."
"RTN","PRSASC1",100,0)
 . S LN=LN+1,PRST(LN)="The request can be approved once the time card status changes."
"RTN","PRSASC1",101,0)
 . S LN=LN+1,PRST(LN)="(i.e. returned to Timekeeper or transmitted to Austin)"
"RTN","PRSASC1",102,0)
 S XMDUZ="PAID Package"
"RTN","PRSASC1",103,0)
 S XMSUB="Unable to File Approval of Leave Request"
"RTN","PRSASC1",104,0)
 S XMTEXT="PRST("
"RTN","PRSASC1",105,0)
 S XMY(DUZ)=""
"RTN","PRSASC1",106,0)
 D ^XMD
"RTN","PRSASC1",107,0)
 Q
"RTN","PRSASC3")
0^11^B8013769^B7711149
"RTN","PRSASC3",1,0)
PRSASC3 ; HISC/REL,WOIFO/JAH - Supervisor Approve Prior PP Actions ;2/16/05
"RTN","PRSASC3",2,0)
 ;;4.0;PAID;**6,93,132**;Sep 21, 1995;Build 13
"RTN","PRSASC3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSASC3",4,0)
DIS ; Display PP Action
"RTN","PRSASC3",5,0)
 N IFN
"RTN","PRSASC3",6,0)
 S Z=$G(^PRST(458,PPI,"E",DFN,"X",AUN,0)),TYP=$P(Z,"^",4) D DT:TYP="T",DV:TYP="V",DH:TYP="H"
"RTN","PRSASC3",7,0)
 I $D(^PRST(458,PPI,"E",DFN,"X",AUN,7)) W !!,"Change Remarks: ",^(7)
"RTN","PRSASC3",8,0)
 Q
"RTN","PRSASC3",9,0)
DT ; Display Time
"RTN","PRSASC3",10,0)
 S DAY=$P($G(^PRST(458,PPI,"E",DFN,"X",AUN,1)),"^",1) Q:'DAY
"RTN","PRSASC3",11,0)
 W !!,?28,"Prior Pay Period Change"
"RTN","PRSASC3",12,0)
 W !,?7,"Date",?17,"TW  Scheduled Tour",?46,"Tour Exceptions"
"RTN","PRSASC3",13,0)
 W !?3,"------------------------------------------------------------------------"
"RTN","PRSASC3",14,0)
 S DTE=$P($G(^PRST(458,PPI,2)),"^",DAY) S IFN=AUN+1 D GET^PRSAPPP D F0^PRSAPPQ Q
"RTN","PRSASC3",15,0)
DV ; Display VCS/Fee changes
"RTN","PRSASC3",16,0)
 S PAYP=$P($G(^PRSPC(DFN,0)),"^",21)
"RTN","PRSASC3",17,0)
 S DTE=$P($G(^PRST(458,PPI,2)),"^",1)
"RTN","PRSASC3",18,0)
 W !!,$S(PAYP="F":"Fee Basis",1:"VCS Sales")," Adjustment for Pay Period beginning ",DTE
"RTN","PRSASC3",19,0)
 S IFN=AUN+1 D GET^PRSAPPP S Z=AUR(1) D VCS^PRSAPPQ Q
"RTN","PRSASC3",20,0)
DH ; Display ED changes
"RTN","PRSASC3",21,0)
 S DTE=$P($G(^PRST(458,PPI,2)),"^",1)
"RTN","PRSASC3",22,0)
 W !!,"Envir. Differential Adjustment for Pay Period beginning ",DTE
"RTN","PRSASC3",23,0)
 S IFN=AUN+1 D GET^PRSAPPP S Z=AUR(1) D ED^PRSAPPQ Q
"RTN","PRSASC3",24,0)
APP ; Approve PP Action
"RTN","PRSASC3",25,0)
 S DFN=$P(AP(5,NX),"^",1),ACT=$P(AP(5,NX),"^",2),PPI=$P(NX,"~",2),AUN=$P(NX,"~",3)
"RTN","PRSASC3",26,0)
 S Z=$G(^PRST(458,PPI,"E",DFN,"X",AUN,0)),$P(^(0),"^",5)=ACT
"RTN","PRSASC3",27,0)
 K ^PRST(458,NOD,DFN,PPI,AUN) S:"AS"[ACT ^PRST(458,"AX"_ACT,DFN,PPI,AUN)=""
"RTN","PRSASC3",28,0)
 ; if second level approver then recalculate PTP's Hours bank
"RTN","PRSASC3",29,0)
 I NOD="AXS" D
"RTN","PRSASC3",30,0)
 .  S $P(^PRST(458,PPI,"E",DFN,"X",AUN,0),"^",8,9)=DUZ_"^"_NOW
"RTN","PRSASC3",31,0)
 .  D PTP^PRSASR1(DFN,PPI)
"RTN","PRSASC3",32,0)
 I NOD="AXR" S $P(^PRST(458,PPI,"E",DFN,"X",AUN,0),"^",10,11)=DUZ_"^"_NOW
"RTN","PRSASC3",33,0)
 S TYP=$P(Z,"^",4) G AT:TYP="T",AV:TYP="V",AH:TYP="H"
"RTN","PRSASC3",34,0)
 Q
"RTN","PRSASC3",35,0)
AT ; Approve time
"RTN","PRSASC3",36,0)
 Q:"DX"'[ACT
"RTN","PRSASC3",37,0)
 ; If disapproved, un-do
"RTN","PRSASC3",38,0)
 S DAY=$P($G(^PRST(458,PPI,"E",DFN,"X",AUN,1)),"^",1) Q:'DAY
"RTN","PRSASC3",39,0)
 S IFN=AUN+1 D GET^PRSAPPP
"RTN","PRSASC3",40,0)
 I AUC N L2 S L2=0 F L1=0,1,2,10,3,4,8 S L2=L2+1 S Z=$G(^PRST(458,PPI,"E",DFN,"X",AUN,$P("1^2^3^4^5^6^8",U,L2))) K ^PRST(458,PPI,"E",DFN,"D",DAY,L1) I Z'="" S ^(L1)=Z
"RTN","PRSASC3",41,0)
 ;if PTP corrected timecard is disapproved then call hrs bank API
"RTN","PRSASC3",42,0)
 ;since the unapproved work node for the corrected tc may have been
"RTN","PRSASC3",43,0)
 ;used in a call to the hours bank.  Call will quit if not PTP w/memo
"RTN","PRSASC3",44,0)
 D PTP^PRSASR1(DFN,PPI)
"RTN","PRSASC3",45,0)
 Q
"RTN","PRSASC3",46,0)
AV ; Approve VCS/Fee Changes
"RTN","PRSASC3",47,0)
 I "DX"'[ACT S:ACT="S" $P(^PRST(458,PPI,"E",DFN,2),"^",17,18)=DUZ_"^"_NOW Q
"RTN","PRSASC3",48,0)
 ; If disapproved, un-do
"RTN","PRSASC3",49,0)
 S IFN=AUN+1 D GET^PRSAPPP
"RTN","PRSASC3",50,0)
 I AUC S Z=$G(^PRST(458,PPI,"E",DFN,"X",AUN,1)) K ^PRST(458,PPI,"E",DFN,2) S:Z'="" ^(2)=Z
"RTN","PRSASC3",51,0)
 Q
"RTN","PRSASC3",52,0)
AH ; Approve ED Changes
"RTN","PRSASC3",53,0)
 Q:"DX"'[ACT
"RTN","PRSASC3",54,0)
 ; if disapproved, un-do
"RTN","PRSASC3",55,0)
 S IFN=AUN+1 D GET^PRSAPPP
"RTN","PRSASC3",56,0)
 I AUC S Z=$G(^PRST(458,PPI,"E",DFN,"X",AUN,1)) K ^PRST(458,PPI,"E",DFN,4) S:Z'="" ^(4)=Z
"RTN","PRSASC3",57,0)
 Q
"RTN","PRSASR")
0^12^B52733840^B51691703
"RTN","PRSASR",1,0)
PRSASR ;HISC/MGD,WOIFO/JAH/PLT - Supervisor Certification ;02/05/2005
"RTN","PRSASR",2,0)
 ;;4.0;PAID;**2,7,8,22,37,43,82,93,112,117,132**;Sep 21, 1995;Build 13
"RTN","PRSASR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSASR",4,0)
 ;
"RTN","PRSASR",5,0)
 ;Called by Pay Per Cert Option on T&A Superv menu. Timecard 4 each 
"RTN","PRSASR",6,0)
 ;employee in this supervs T&L is displayed.  Superv prompted at each 
"RTN","PRSASR",7,0)
 ;display as to whether card is ready 4 certification. Cards that r
"RTN","PRSASR",8,0)
 ;ready r saved in ^TMP.  After this review--elect sign code is 
"RTN","PRSASR",9,0)
 ;required to release approved cards to payroll. Upon ES
"RTN","PRSASR",10,0)
 ; 8b, exceptions, & ot warnings r stored & timecard status 
"RTN","PRSASR",11,0)
 ;changed to 'P'--'released to payroll' 
"RTN","PRSASR",12,0)
 ;
"RTN","PRSASR",13,0)
 ;=====================================================================
"RTN","PRSASR",14,0)
 ;
"RTN","PRSASR",15,0)
 ;Set up reverse video ON & OFF for tour error highlighting
"RTN","PRSASR",16,0)
 N IORVOFF,IORVON,IOINHI,IOINORM,IOBOFF,IOBON,RESP
"RTN","PRSASR",17,0)
 S X="IORVOFF;IORVON;IOBOFF;IOBON;IOINHI;IOINORM" D ENDR^%ZISS
"RTN","PRSASR",18,0)
 ;
"RTN","PRSASR",19,0)
 N MIDPP,DUMMY
"RTN","PRSASR",20,0)
 S MIDPP="In middle of Pay Period; Cannot Certify & Release."
"RTN","PRSASR",21,0)
 W:$E(IOST,1,2)="C-" @IOF W !?26,"VA TIME & ATTENDANCE SYSTEM"
"RTN","PRSASR",22,0)
 W !?27,"SUPERVISORY CERTIFICATION"
"RTN","PRSASR",23,0)
 S PRSTLV=3 D ^PRSAUTL G:TLI<1 EX
"RTN","PRSASR",24,0)
 D NOW^%DTC
"RTN","PRSASR",25,0)
 S DT=%\1,APDT=%,Y=$G(^PRST(458,"AD",DT)),PPI=$P(Y,U,1),DAY=$P(Y,U,2)
"RTN","PRSASR",26,0)
 I DAY>5,DAY<11 W $C(7),!!,MIDPP G EX
"RTN","PRSASR",27,0)
 I DAY<6 S X1=DT,X2=-7 D C^%DTC S PPI=$P($G(^PRST(458,"AD",X)),U,1) G:'PPI EX
"RTN","PRSASR",28,0)
 ;     -----------------------------------------
"RTN","PRSASR",29,0)
P0 ;PDT     = string of pay period dates with format - Sun 29-Sep-96^
"RTN","PRSASR",30,0)
 ;PDTI    = string of pay period dates in fileman format.
"RTN","PRSASR",31,0)
 ;PPI     = pay period internal entry number in file 458.
"RTN","PRSASR",32,0)
 ;GLOB    = global reference for employees pay period record
"RTN","PRSASR",33,0)
 ;          returned from $$AVAILREC & passed to UNLOCK.
"RTN","PRSASR",34,0)
 ;     -----------------------------------------
"RTN","PRSASR",35,0)
 ;
"RTN","PRSASR",36,0)
 S PDT=$G(^PRST(458,PPI,2)),PDTI=$G(^(1)),QT=0 K ^TMP($J)
"RTN","PRSASR",37,0)
 ;
"RTN","PRSASR",38,0)
 ;     -----------------------------------------
"RTN","PRSASR",39,0)
 ;Loop thru this supervisor's T&L unit on x-ref in 450.
"RTN","PRSASR",40,0)
 ;$$availrec() ensures there's data & node with employee's 
"RTN","PRSASR",41,0)
 ;pay period record is NOT locked, then locks node.
"RTN","PRSASR",42,0)
 ;Call to CHK checks for needed approvals for current employee
"RTN","PRSASR",43,0)
 ;If supervisor decides record is not ready, during this call,
"RTN","PRSASR",44,0)
 ;then node is unlocked.  Records that super accepts for release
"RTN","PRSASR",45,0)
 ;are not unlocked until they are processed thru temp global
"RTN","PRSASR",46,0)
 ;& their status' are updated.
"RTN","PRSASR",47,0)
 ;     ---------------------------------------------------
"RTN","PRSASR",48,0)
 ;
"RTN","PRSASR",49,0)
 S NN="",CKS=1
"RTN","PRSASR",50,0)
 F  S NN=$O(^PRSPC("ATL"_TLE,NN)) Q:NN=""  F DFN=0:0 S DFN=$O(^PRSPC("ATL"_TLE,NN,DFN)) Q:DFN<1  I $$AVAILREC^PRSLIB00("SUP",.GLOB) D CHK I QT G T0
"RTN","PRSASR",51,0)
 ;
"RTN","PRSASR",52,0)
 ;     ---------------------------------------------------
"RTN","PRSASR",53,0)
 ;Loop through T&L unit file x-ref 2 c if this supervisor certifies
"RTN","PRSASR",54,0)
 ;payperiod data for other supervisors of other T&L units.  If so
"RTN","PRSASR",55,0)
 ;process after ensuring node to be certified is available.
"RTN","PRSASR",56,0)
 ;     ---------------------------------------------------
"RTN","PRSASR",57,0)
 ;
"RTN","PRSASR",58,0)
 S CKS=0
"RTN","PRSASR",59,0)
 F VA2=0:0 S VA2=$$TLSUP Q:VA2<1  S SSN=$$SSN I SSN'="" S DFN=$$DFN S Z=$P($G(^PRSPC(+DFN,0)),U,8) I Z'="",Z'=TLE,$$AVAILREC^PRSLIB00("SUP",.GLOB) D CHK I QT G EX:'$T,T0
"RTN","PRSASR",60,0)
 ;
"RTN","PRSASR",61,0)
 ;     ---------------------------------------------------
"RTN","PRSASR",62,0)
T0 I $D(^TMP($J,"E")) G T1
"RTN","PRSASR",63,0)
 W !!,"No records have been selected for certification."
"RTN","PRSASR",64,0)
 S DUMMY=$$ASK^PRSLIB00(1) G EX
"RTN","PRSASR",65,0)
 ;
"RTN","PRSASR",66,0)
 ;     ---------------------------------------------------
"RTN","PRSASR",67,0)
 ;
"RTN","PRSASR",68,0)
T1 ;if supervisor signs off then update all records in tmp
"RTN","PRSASR",69,0)
 ;otherwise remove any auto posting.
"RTN","PRSASR",70,0)
 D ^PRSAES I ESOK D
"RTN","PRSASR",71,0)
 .D NOW^%DTC S APDT=%
"RTN","PRSASR",72,0)
 .F DFN=0:0 S DFN=$O(^TMP($J,"E",DFN)) Q:DFN<1  S VAL=$G(^(DFN)) D PROC
"RTN","PRSASR",73,0)
 I 'ESOK D
"RTN","PRSASR",74,0)
 .F DFN=0:0 S DFN=$O(^TMP($J,"E",DFN)) Q:DFN<1  D
"RTN","PRSASR",75,0)
 ..D AUTOPINI^PRS8(PPI,DFN)
"RTN","PRSASR",76,0)
 D EX
"RTN","PRSASR",77,0)
 Q
"RTN","PRSASR",78,0)
 ;
"RTN","PRSASR",79,0)
 ;     ---------------------------------------------------
"RTN","PRSASR",80,0)
CHK ; Check for needed approvals
"RTN","PRSASR",81,0)
 N PRSENT,PRSWOC
"RTN","PRSASR",82,0)
 S STAT=$P($G(^PRST(458,PPI,"E",DFN,0)),U,2) I "PX"[STAT Q
"RTN","PRSASR",83,0)
 I USR=DFN Q:'$D(^XUSEC("PRSA SIGN",DUZ))
"RTN","PRSASR",84,0)
 E  I CKS S SSN=$P($G(^PRSPC(DFN,0)),U,9) I SSN S EDUZ=+$O(^VA(200,"SSN",SSN,0)) I $D(^PRST(455.5,"AS",EDUZ,TLI)) Q:$P($G(^PRST(455.5,TLI,"S",EDUZ,0)),U,2)'=TLE
"RTN","PRSASR",85,0)
 S HDR=0 D HDR,^PRSAENT S PRSENT=ENT
"RTN","PRSASR",86,0)
 ;
"RTN","PRSASR",87,0)
 ;Loop to display tour, exceptions(leave, etc..) & errors.
"RTN","PRSASR",88,0)
 ;
"RTN","PRSASR",89,0)
 S (XF,X9)=0
"RTN","PRSASR",90,0)
 F DAY=1:1:14 D TOURERR($P(PDT,U,DAY),.X9,.XF) D:$Y>(IOSL-6)&(DAY<14) HDR G:QT O1
"RTN","PRSASR",91,0)
 ;
"RTN","PRSASR",92,0)
 ;Display VCS commission sales, if applicable
"RTN","PRSASR",93,0)
 S Z=$G(^PRST(458,PPI,"E",DFN,2))
"RTN","PRSASR",94,0)
 I Z'="" D:$Y>(IOSL-11) HDR Q:QT  D VCS^PRSASR1
"RTN","PRSASR",95,0)
 ;
"RTN","PRSASR",96,0)
 ;
"RTN","PRSASR",97,0)
 S Z=$G(^PRST(458,PPI,"E",DFN,4))
"RTN","PRSASR",98,0)
 I Z'="" D:$Y>(IOSL-9) HDR Q:QT  D ED^PRSASR1
"RTN","PRSASR",99,0)
 I XF W !,IORVON,"Serious error; cannot release.",IORVOFF S QT=$$ASK^PRSLIB00() Q
"RTN","PRSASR",100,0)
 S QT=$$ASK^PRSLIB00() Q:QT
"RTN","PRSASR",101,0)
 ;
"RTN","PRSASR",102,0)
 ;PRS8 call creates & stores 8B string in employees attendance
"RTN","PRSASR",103,0)
 ;record.  Later, under a payroll option, string will be
"RTN","PRSASR",104,0)
 ;transmitted to Austin.
"RTN","PRSASR",105,0)
 ;
"RTN","PRSASR",106,0)
 N NN D ONE^PRS8 S C0=$G(^PRSPC(DFN,0)),PY=PPI D CERT^PRS8VW S QT=0
"RTN","PRSASR",107,0)
 ;
"RTN","PRSASR",108,0)
 ;Show OT (approve-vs-8B) warning & save in TMP.
"RTN","PRSASR",109,0)
 N WK,OTERR,O8,OA
"RTN","PRSASR",110,0)
 F WK=1:1:2 D
"RTN","PRSASR",111,0)
 .  D WARNSUP^PRSAOTT(PPE,DFN,VAL,WK,.OTERR,.O8,.OA)
"RTN","PRSASR",112,0)
 .  I OTERR S ^TMP($J,"OT",DFN,WK)=O8_U_OA
"RTN","PRSASR",113,0)
 ;
"RTN","PRSASR",114,0)
 ;warning message for rs/rn and on type of time
"RTN","PRSASR",115,0)
 I $E(PRSENT,5) D
"RTN","PRSASR",116,0)
 . I @($TR($$CD8B^PRSU1B2(VAL,"RS^3^RN^3",1),U,"+")_"-("_$TR($$RSHR^PRSU1B2(DFN,PPI),U,"+")_")") W !,?3,"WARNING: The total scheduled recess hours for this pay period does not match the total RS/RN posted."
"RTN","PRSASR",117,0)
 . I $G(PRSWOC)]"" W !,?3,"Warning: The entire tour for day# ",PRSWOC," is posted RECESS. The On-Call will be paid unless posted UNAVAILABLE."
"RTN","PRSASR",118,0)
 . QUIT
"RTN","PRSASR",119,0)
 ;
"RTN","PRSASR",120,0)
LD ; Check for changes to the Labor Distribution Codes made during the pay
"RTN","PRSASR",121,0)
 ; period.
"RTN","PRSASR",122,0)
 I $D(^PRST(458,PPI,"E",DFN,"LDAUD")) D LD^PRSASR1
"RTN","PRSASR",123,0)
 ;     ---------------------------------------------------
"RTN","PRSASR",124,0)
OK ;Prompt Supervisor to release timecard.  If yes, store in ^TMP(.
"RTN","PRSASR",125,0)
 ;If supervisor answers no then bypass & unlock record.
"RTN","PRSASR",126,0)
 ;     ---------------------------------------------------
"RTN","PRSASR",127,0)
 W !!,IORVON,"Release to Payroll?",IORVOFF," "
"RTN","PRSASR",128,0)
 R X:DTIME S:'$T!(X[U) QT=1 Q:QT  S:X="" X="*" S X=$TR(X,"yesno","YESNO")
"RTN","PRSASR",129,0)
 I $P("YES",X,1)'="",$P("NO",X,1)'="" W $C(7)," Answer YES or NO" G OK
"RTN","PRSASR",130,0)
 I X?1"Y".E S ^TMP($J,"E",DFN)=VAL
"RTN","PRSASR",131,0)
 E  D
"RTN","PRSASR",132,0)
 .  D AUTOPINI^PRS8(PPI,DFN) ; remove any auto posting
"RTN","PRSASR",133,0)
 .  D UNLOCK^PRSLIB00(GLOB) ; unlock record
"RTN","PRSASR",134,0)
 .  K ^TMP($J,"LOCK",DFN) ;clean out of local lock list.
"RTN","PRSASR",135,0)
O1 Q
"RTN","PRSASR",136,0)
 ;
"RTN","PRSASR",137,0)
PROC ; Set Approval, file any exceptions & update 8B string
"RTN","PRSASR",138,0)
 ;
"RTN","PRSASR",139,0)
 ; get employees entitlement string in variable A1
"RTN","PRSASR",140,0)
 D ^PRSAENT
"RTN","PRSASR",141,0)
 ;
"RTN","PRSASR",142,0)
 ; set approvals
"RTN","PRSASR",143,0)
 S $P(^PRST(458,PPI,"E",DFN,0),U,3,5)=DUZ_U_APDT_U_A1
"RTN","PRSASR",144,0)
 ; VCS approval
"RTN","PRSASR",145,0)
 I $D(^PRST(458,PPI,"E",DFN,2)) S $P(^(2),U,17,18)=DUZ_U_APDT
"RTN","PRSASR",146,0)
 ;
"RTN","PRSASR",147,0)
 ; loop thru any exceptions & file in 458.5
"RTN","PRSASR",148,0)
 I $D(^TMP($J,"X",DFN)) S K="" F  S K=$O(^TMP($J,"X",DFN,K)) Q:K=""  S DAY=$P(K," ",1),X1=$P(PDTI,U,DAY),X2=$G(^(K)) D ^PRSATPF
"RTN","PRSASR",149,0)
 ;
"RTN","PRSASR",150,0)
 ; file overtime warnings
"RTN","PRSASR",151,0)
 F WK=1:1:2 I $G(^TMP($J,"OT",DFN,WK))'="" D
"RTN","PRSASR",152,0)
 .  S O8=$P(^TMP($J,"OT",DFN,WK),U)
"RTN","PRSASR",153,0)
 .  S OA=$P(^TMP($J,"OT",DFN,WK),U,2)
"RTN","PRSASR",154,0)
 .  D FILEOTW^PRSAOTTF(PPI,DFN,WK,O8,OA)
"RTN","PRSASR",155,0)
 ;
"RTN","PRSASR",156,0)
 ;set 8b string & change status of timecard to payroll
"RTN","PRSASR",157,0)
 S ^PRST(458,PPI,"E",DFN,5)=VAL S $P(^PRST(458,PPI,"E",DFN,0),U,2)="P"
"RTN","PRSASR",158,0)
 ;set the pp telework indicator
"RTN","PRSASR",159,0)
 S:$P($$TWE^PRSATE0(DFN),U)]"" $P(^PRST(458,PPI,"E",DFN,0),U,8)=$P($$TWE^PRSATE0(DFN),U)
"RTN","PRSASR",160,0)
 ;
"RTN","PRSASR",161,0)
 ; If employee is a PT Phys w/ memo update hours credited
"RTN","PRSASR",162,0)
 D PTP^PRSASR1(DFN,PPI)
"RTN","PRSASR",163,0)
 ;
"RTN","PRSASR",164,0)
 ;unlock employees time card record
"RTN","PRSASR",165,0)
 S GLOB="^PRST(458,"_PPI_","_"""E"""_","_DFN_",0)"
"RTN","PRSASR",166,0)
 D UNLOCK^PRSLIB00(GLOB)
"RTN","PRSASR",167,0)
 K ^TMP($J,"LOCK",DFN) ;clean out of local lock list.
"RTN","PRSASR",168,0)
 Q
"RTN","PRSASR",169,0)
 ;
"RTN","PRSASR",170,0)
 ;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
"RTN","PRSASR",171,0)
 ;
"RTN","PRSASR",172,0)
HDR ; Display Header
"RTN","PRSASR",173,0)
 I HDR S QT=$$ASK^PRSLIB00() Q:QT
"RTN","PRSASR",174,0)
 S X=$G(^PRSPC(DFN,0)) W !,@IOF,?2,$P(X,U,1) S X=$P(X,U,9) I X W ?68,$E(X),"XX-XX-",$E(X,6,9) S HDR=1
"RTN","PRSASR",175,0)
 W !,?6,"Date",?16,"TW",?20,"Scheduled Tour",?40,"Tour Exceptions",?63,IORVON,"Tour Errors",IORVOFF
"RTN","PRSASR",176,0)
 W !?2 F I=1:1:72 W "-"
"RTN","PRSASR",177,0)
 Q
"RTN","PRSASR",178,0)
 ;====================================================================
"RTN","PRSASR",179,0)
HDR2 ; Display Header don't quit
"RTN","PRSASR",180,0)
 N HOLD
"RTN","PRSASR",181,0)
 S HOLD=$$ASK^PRSLIB00(1)
"RTN","PRSASR",182,0)
 S X=$G(^PRSPC(DFN,0)) W !,@IOF,?2,$P(X,U,1) S X=$P(X,U,9) I X W ?68,$E(X),"XX-XX-",$E(X,6,9)
"RTN","PRSASR",183,0)
 W !,?6,"Date",?16,"TW",?20,"Scheduled Tour",?40,"Tour Exceptions",?63,IORVON,"Tour Errors",IORVOFF
"RTN","PRSASR",184,0)
 W !?2 F I=1:1:72 W "-"
"RTN","PRSASR",185,0)
 Q
"RTN","PRSASR",186,0)
 ;====================================================================
"RTN","PRSASR",187,0)
 ;
"RTN","PRSASR",188,0)
EX ; clean up variables & unlock any leftover time card nodes
"RTN","PRSASR",189,0)
 N EMPREC
"RTN","PRSASR",190,0)
 S EMPREC=""
"RTN","PRSASR",191,0)
 F  S EMPREC=$O(^TMP($J,"LOCK",EMPREC))  Q:EMPREC=""  D
"RTN","PRSASR",192,0)
 .  S GLOB="^PRST(458,"_PPI_","_"""E"""_","_EMPREC_",0)"
"RTN","PRSASR",193,0)
 .  D UNLOCK^PRSLIB00(GLOB)
"RTN","PRSASR",194,0)
 K ^TMP($J) G KILL^XUSCLEAN
"RTN","PRSASR",195,0)
 Q
"RTN","PRSASR",196,0)
 ;
"RTN","PRSASR",197,0)
 ;
"RTN","PRSASR",198,0)
 ;These extrinsic functions simply remove lengthy code from long, 
"RTN","PRSASR",199,0)
 ;single line, nested loop.
"RTN","PRSASR",200,0)
 ;     ---------------------------------------------------
"RTN","PRSASR",201,0)
TLSUP() ;get next supervisor who certifies other supervisors
"RTN","PRSASR",202,0)
 Q $O(^PRST(455.5,"ASX",TLE,VA2))
"RTN","PRSASR",203,0)
 ;     ---------------------------------------------------
"RTN","PRSASR",204,0)
SSN() ;get ssn of supervisor to be certified by this supervisor.
"RTN","PRSASR",205,0)
 Q $P($G(^VA(200,VA2,1)),U,9)
"RTN","PRSASR",206,0)
 ;     ---------------------------------------------------
"RTN","PRSASR",207,0)
DFN() ;get internal entry number of supvisor of other T&L 2b approved
"RTN","PRSASR",208,0)
 ;by current supervisor.
"RTN","PRSASR",209,0)
 Q $O(^PRSPC("SSN",SSN,0))
"RTN","PRSASR",210,0)
 ;====================================================================
"RTN","PRSASR",211,0)
TOURERR(DTE,X9,XF) ;DISPLAY TOUR & ERRORS
"RTN","PRSASR",212,0)
 ;
"RTN","PRSASR",213,0)
 N IORVOFF,IORVON,RESP,ERRLEN
"RTN","PRSASR",214,0)
 S X="IORVOFF;IORVON" D ENDR^%ZISS
"RTN","PRSASR",215,0)
 D F1^PRSADP1,^PRSATPE
"RTN","PRSASR",216,0)
 F K=1:1 Q:'$D(Y1(K))&'$D(Y2(K))  D
"RTN","PRSASR",217,0)
 . I $Y>(IOSL-4) D HDR2
"RTN","PRSASR",218,0)
 . W:K>1 !
"RTN","PRSASR",219,0)
 . W:$D(Y1(K)) ?21,Y1(K)
"RTN","PRSASR",220,0)
 . W:$P($G(Y2(K)),U)'="" ?45,$P(Y2(K),U,1)
"RTN","PRSASR",221,0)
 . I $P($G(Y2(K)),U,2)'="" W:$X>44 ! W ?45,$P(Y2(K),U,2)
"RTN","PRSASR",222,0)
 W:Y3'="" !?10,Y3
"RTN","PRSASR",223,0)
 I $D(ER) S:FATAL XF=1 F K=0:0 S K=$O(ER(K)) Q:K<1  D
"RTN","PRSASR",224,0)
 .  I $Y>(IOSL-4) D HDR2
"RTN","PRSASR",225,0)
 .  S ERRLEN=$S($P(ER(K),U,2)'="":$L(ER(K)),1:$L($P($G(ER(K)),U))+1)
"RTN","PRSASR",226,0)
 .  W:X9!((ERRLEN+1)>(IOM-$X)) !
"RTN","PRSASR",227,0)
 .  W ?(IOM-(ERRLEN+1)),IORVON
"RTN","PRSASR",228,0)
 .  W:$P(ER(K),U,2)'="" $P(ER(K),U,2)
"RTN","PRSASR",229,0)
 .  W " ",$P(ER(K),U,1),IORVOFF
"RTN","PRSASR",230,0)
 .  S X9=0 S:'XF ^TMP($J,"X",DFN,DAY_" "_K)=ER(K)
"RTN","PRSASR",231,0)
 .  Q
"RTN","PRSASR",232,0)
 Q
"RTN","PRSATE")
0^13^B89337517^B81331928
"RTN","PRSATE",1,0)
PRSATE ;WCIOFO/JAH/PLT - Enter/Edit Employee (emp) Tour of Duty (ToD) ;03/15/2005
"RTN","PRSATE",2,0)
 ;;4.0;PAID;**8,11,27,45,55,93,112,117,121,132**;Sep 21, 1995;Build 13
"RTN","PRSATE",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSATE",4,0)
 ;
"RTN","PRSATE",5,0)
 ;ppi=ien of 450, ppi=ien of 458, ppe=pp (yy-mm)
"RTN","PRSATE",6,0)
 ;tli = ien of t&l, tlu=t&l # (nnn), prstlv=2 for timekeeper user
"RTN","PRSATE",7,0)
 N PPI,PPE,PRSTLV,TLI,TLE,DFN
"RTN","PRSATE",8,0)
 S PRSTLV=2 D ^PRSAUTL Q:TLI<1
"RTN","PRSATE",9,0)
 F  S DFN=$$GETEMP^PRSATE6(TLE) Q:DFN<1  D
"RTN","PRSATE",10,0)
 . S PPI=$P(^PRST(458,0),"^",3),PPE=$P($G(^PRST(458,PPI,0)),"^",1)
"RTN","PRSATE",11,0)
 . D TOUREDIT(DFN,PPI,PPE,TLI,TLE,PRSTLV)
"RTN","PRSATE",12,0)
 Q
"RTN","PRSATE",13,0)
 ;
"RTN","PRSATE",14,0)
TOUREDIT(DFN,PPI,PPE,TLI,TLE,PRSTLV) ;
"RTN","PRSATE",15,0)
 N C0,NH,FLX,PMP,PP,PB,ENT,SRT,WTL,TYP,Z,TD,ERROR,NOERROR,PRSDAY,PRSETD
"RTN","PRSATE",16,0)
 N PRSTW,PRSTWA,PRSTWB
"RTN","PRSATE",17,0)
 ;
"RTN","PRSATE",18,0)
 ;  PRSTW: employees telework type
"RTN","PRSATE",19,0)
 ;  PRSTWA: telework eligibilty string
"RTN","PRSATE",20,0)
 ;  PRSTWB: this pay period (PPI) telework eligibilty
"RTN","PRSATE",21,0)
 ;
"RTN","PRSATE",22,0)
 ;   Entitlement lookup leaks many variables.  Following R used in 
"RTN","PRSATE",23,0)
 ;   this routine but may be looked up again despite the fact they R 
"RTN","PRSATE",24,0)
 ;   leaked by ^PRSAENT.  See PRSAENT for further doc.
"RTN","PRSATE",25,0)
 ;
"RTN","PRSATE",26,0)
 ;   
"RTN","PRSATE",27,0)
 ;    C0=emps 0 node in file 450    NH= emps 8B normal hrs
"RTN","PRSATE",28,0)
 ;    FLX= compressed/flextime code (0=none,C=compressed,F=flextime)
"RTN","PRSATE",29,0)
 ;    PMP= premium pay indicator 
"RTN","PRSATE",30,0)
 ;      ( D=entitled Sun., F=entitled Sat./Sun.,
"RTN","PRSATE",31,0)
 ;        E=entitled variable Sat./Sun. premium pay,
"RTN","PRSATE",32,0)
 ;        G=entitled variable Sun. prem pay, X=title 5 emps
"RTN","PRSATE",33,0)
 ;        R,C,O=different types of firefighters)
"RTN","PRSATE",34,0)
 ;  * PP= emps pay plan
"RTN","PRSATE",35,0)
 ;    DB = pay basis-1:full,2:part,3:intermit
"RTN","PRSATE",36,0)
 ;    ENT= 39 char entitlement string
"RTN","PRSATE",37,0)
 ;  Entitlement lookup.
"RTN","PRSATE",38,0)
 D ^PRSAENT I ENT="" D ERROR(1) S OUT=1 Q
"RTN","PRSATE",39,0)
 ;
"RTN","PRSATE",40,0)
 ; Display header/Ask pp (NOL^PRSATE2 returns SRT = Current, Next, Last)
"RTN","PRSATE",41,0)
 D NOW^%DTC S NOW=% K %
"RTN","PRSATE",42,0)
 W:$E(IOST,1,2)="C-" @IOF
"RTN","PRSATE",43,0)
 W !?26,"VA TIME & ATTENDANCE SYSTEM"
"RTN","PRSATE",44,0)
 W !?29,"EMPLOYEE TOUR OF DUTY"
"RTN","PRSATE",45,0)
 D HDR^PRSADP1,NOL^PRSATE2
"RTN","PRSATE",46,0)
 Q:SRT="^"
"RTN","PRSATE",47,0)
 I SRT="L" S PPI=PPI-1,PPE=$P($G(^PRST(458,PPI,0)),"^",1)
"RTN","PRSATE",48,0)
 ;
"RTN","PRSATE",49,0)
 ;get emp's flexitime code, telework ind.
"RTN","PRSATE",50,0)
 S FLX=$$FLEXIND^PRSATE6(PPI,DFN,SRT),PRSTWA=$$TWE^PRSATE0(DFN,PPI),PRSTWB=$P(PRSTWA,U,4)="Y"
"RTN","PRSATE",51,0)
 ;entitled reg. scheduled is o
"RTN","PRSATE",52,0)
 I $E(ENT,1)="0" D
"RTN","PRSATE",53,0)
 .  S Z=$E(ENT,2),TD=$S(Z="D":3,1:4) D NONE
"RTN","PRSATE",54,0)
 E  D
"RTN","PRSATE",55,0)
 .;
"RTN","PRSATE",56,0)
 .;    initialize t&l for this ToD
"RTN","PRSATE",57,0)
 .;
"RTN","PRSATE",58,0)
 .  S WTL=TLI
"RTN","PRSATE",59,0)
 .  I "NL"[SRT D
"RTN","PRSATE",60,0)
 ..    S TYP=0
"RTN","PRSATE",61,0)
 .  E  D
"RTN","PRSATE",62,0)
 ..    S TYP=$$ISTEMPTR()
"RTN","PRSATE",63,0)
 ..;
"RTN","PRSATE",64,0)
 ..;  For temp ToDs--ask user for T&L ToD will be worked
"RTN","PRSATE",65,0)
 ..;  Quit if we don't get a valid T&L unit.
"RTN","PRSATE",66,0)
 ..;
"RTN","PRSATE",67,0)
 ..    I TYP S WTL=$$ASKTLWRK^PRSATE6(TLE)
"RTN","PRSATE",68,0)
 .;
"RTN","PRSATE",69,0)
 .;  Save current ToD in case user aborts with an unacceptable ToD.
"RTN","PRSATE",70,0)
 .;
"RTN","PRSATE",71,0)
 .   D SAVETOUR^PRSATE6(PPI,DFN)
"RTN","PRSATE",72,0)
 .;
"RTN","PRSATE",73,0)
 .  I WTL'<1,TYP'["^" D 
"RTN","PRSATE",74,0)
 ..    D A1
"RTN","PRSATE",75,0)
 ..;
"RTN","PRSATE",76,0)
 ..; verify firefighter ToD after compressed ind. edit.  Don't accept 
"RTN","PRSATE",77,0)
 ..; ToD until its within guidlines. If TK force exits, restore old ToD.
"RTN","PRSATE",78,0)
 ..  I PMP="C" S NOERROR=0 F  D  Q:NOERROR
"RTN","PRSATE",79,0)
 ...    N ERROR D FFTOUR^PRSATE6(PPI,DFN,SRT,.ERROR)
"RTN","PRSATE",80,0)
 ...    I $$ISERRORS^PRSATE6(.ERROR) D
"RTN","PRSATE",81,0)
 ....      I $$ASKTOFIX^PRSATE6() D
"RTN","PRSATE",82,0)
 .....        D A1
"RTN","PRSATE",83,0)
 ....      E  D
"RTN","PRSATE",84,0)
 .....        D RESTORE^PRSATE6(PPI,DFN) S NOERROR=1
"RTN","PRSATE",85,0)
 ...    E  D
"RTN","PRSATE",86,0)
 ....      S NOERROR=1
"RTN","PRSATE",87,0)
 K NOW Q
"RTN","PRSATE",88,0)
 ;
"RTN","PRSATE",89,0)
ISTEMPTR() ; IS TEMPORARY ToD ?
"RTN","PRSATE",90,0)
 ; Ask user if ToD is temp or perm & convert TYP to true false flag
"RTN","PRSATE",91,0)
 ;    Permanent set TYP=0,  Temporary set TYP=true (1)
"RTN","PRSATE",92,0)
 ; 
"RTN","PRSATE",93,0)
 S TYP=$$ASKTEMP^PRSATE6() I TYP'["^" S TYP=$E(TYP,1)="T",WTL=TLI
"RTN","PRSATE",94,0)
 Q TYP
"RTN","PRSATE",95,0)
 ;
"RTN","PRSATE",96,0)
A1 ; Set up for emps ToD look up. Screen allows Daily ToDs & days off 
"RTN","PRSATE",97,0)
 ; for daily emps.  Everyone else gets days off & all other ToDs.
"RTN","PRSATE",98,0)
 ; Screen further ensures ToD is available either to all t&ls 
"RTN","PRSATE",99,0)
 ; or to t&l that this emp is working in.
"RTN","PRSATE",100,0)
 ;
"RTN","PRSATE",101,0)
 N DIC,X,DB
"RTN","PRSATE",102,0)
 S DIC="^PRST(457.1,",DIC(0)="AEQMN"
"RTN","PRSATE",103,0)
 S DIC("S")="I "_$S($E(ENT,1)="D":"Y<3",1:"Y>5!(Y=1)")_",$P(^PRST(457.1,+Y,0),U,4)!($D(^PRST(457.1,+Y,""T"",""B"",WTL)))"
"RTN","PRSATE",104,0)
 ;
"RTN","PRSATE",105,0)
 ; Setup a fixed or varying ToD.  Compressed ToDs must be varying;
"RTN","PRSATE",106,0)
 ; ask TK about all others.
"RTN","PRSATE",107,0)
 ;
"RTN","PRSATE",108,0)
 S DB=$P(C0,U,10) I FLX="C"!("KM"[PP&(DB=1)&(NH=72)) D VAR QUIT
"RTN","PRSATE",109,0)
 S X=$$ASKFIXED() QUIT:X="^"  I X="N" D VAR QUIT
"RTN","PRSATE",110,0)
 I PRSTWB S X=$$ASKTWMF^PRSATE6() QUIT:X="^"  I X="Y" D FX,VAR QUIT
"RTN","PRSATE",111,0)
 D FX
"RTN","PRSATE",112,0)
 QUIT
"RTN","PRSATE",113,0)
 ;
"RTN","PRSATE",114,0)
FX ; Fixed ToD
"RTN","PRSATE",115,0)
FX1 S DIC("A")="Select TOUR OF DUTY: "
"RTN","PRSATE",116,0)
 W ! D ^DIC
"RTN","PRSATE",117,0)
 Q:Y'>0
"RTN","PRSATE",118,0)
 S TD=+Y
"RTN","PRSATE",119,0)
 ;check overlap
"RTN","PRSATE",120,0)
 K PRSDAY,PRSETD
"RTN","PRSATE",121,0)
 F DAY=1:1:14 S $P(PRSETD,U,DAY)=$S(DAY#7<2:1,1:TD) D
"RTN","PRSATE",122,0)
 . N TOLD
"RTN","PRSATE",123,0)
 . S PRSDAY(DAY)=$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),U,1,4),$P(TOLD,U,DAY)=$S(SRT="N"&($P($G(^(0)),U,3)):$P(^(0),U,4),1:$P($G(^(0)),U,2)) S:DAY#7>1 $P(PRSDAY(DAY),U,6)=$P($G(^(0)),U,13),$P(PRSDAY(DAY),U,7,999)=$G(^(4))
"RTN","PRSATE",124,0)
 . D PRSDAY^PRSATE0
"RTN","PRSATE",125,0)
 . QUIT
"RTN","PRSATE",126,0)
 D ENT^PRSATE5 I $G(PRSERR) K PRSERR G FX1
"RTN","PRSATE",127,0)
 S Y=$G(^PRST(457.1,TD,1)),TDH=$P(^(0),"^",6),HRS=TDH*10
"RTN","PRSATE",128,0)
 S (ZENT,STR)=""
"RTN","PRSATE",129,0)
 D OT^PRSATP,VS^PRSATE0
"RTN","PRSATE",130,0)
 I STR'="" W *7,!!,STR G FX
"RTN","PRSATE",131,0)
 I '$D(^PRST(458,PPI,"E",DFN,"D",0)) S ^(0)="^458.02^14^14"
"RTN","PRSATE",132,0)
 I SRT="N" D
"RTN","PRSATE",133,0)
 .  D F1
"RTN","PRSATE",134,0)
 E  D
"RTN","PRSATE",135,0)
 .  F DAY=2:1:6,9:1:13 D SET
"RTN","PRSATE",136,0)
 .  S TD=1,(Y,TDH)="" F DAY=1,7,8,14 D SET
"RTN","PRSATE",137,0)
 .  W "  ... done" D:HRS'=NH ERROR(2,NH,HRS)
"RTN","PRSATE",138,0)
 .  D:'PRSTWB T2
"RTN","PRSATE",139,0)
 .  QUIT
"RTN","PRSATE",140,0)
 I 'PRSTWB D HOL,RS K HRS,STR
"RTN","PRSATE",141,0)
 QUIT
"RTN","PRSATE",142,0)
 ;
"RTN","PRSATE",143,0)
 ;
"RTN","PRSATE",144,0)
F1 F DAY=2:1:6,9:1:13 D NX
"RTN","PRSATE",145,0)
 S TD=1 F DAY=1,7,8,14 D NX
"RTN","PRSATE",146,0)
 W "  ... done"
"RTN","PRSATE",147,0)
 D:HRS'=NH ERROR(2,NH,HRS)
"RTN","PRSATE",148,0)
 QUIT
"RTN","PRSATE",149,0)
 ;
"RTN","PRSATE",150,0)
VAR ; Variable ToD
"RTN","PRSATE",151,0)
 D ^PRSATE0
"RTN","PRSATE",152,0)
 I SRT'="N" D T2
"RTN","PRSATE",153,0)
 D HOL,RS
"RTN","PRSATE",154,0)
 Q
"RTN","PRSATE",155,0)
 ;
"RTN","PRSATE",156,0)
NONE ; No ToD
"RTN","PRSATE",157,0)
 N TYP2,UPDT,Y,TDH,PRSTWB
"RTN","PRSATE",158,0)
 S PRSTWB=0
"RTN","PRSATE",159,0)
 W !!,"This is an intermittent employee with no specified tour."
"RTN","PRSATE",160,0)
 W !!,"Time records will now be updated to indicate this."
"RTN","PRSATE",161,0)
 I '$D(^PRST(458,PPI,"E",DFN,"D",0)) S ^(0)="^458.02^14^14"
"RTN","PRSATE",162,0)
 I '$$PERM^PRSALIB(PPI,DFN) D
"RTN","PRSATE",163,0)
 .  W !!,"Not all tour days are assigned a permanent status."
"RTN","PRSATE",164,0)
 .  I $$UPDTQ^PRSALIB(),$$TMPST^PRSALIB(.TYP2) D UPDSTAT^PRSALIB(PPI,DFN,TYP2)
"RTN","PRSATE",165,0)
 S (Y,TDH)="",TYP=0,WTL=TLI
"RTN","PRSATE",166,0)
 I SRT="N" D
"RTN","PRSATE",167,0)
 .  F DAY=1:1:14 D NX
"RTN","PRSATE",168,0)
 E  D
"RTN","PRSATE",169,0)
 .  F DAY=1:1:14 D SET
"RTN","PRSATE",170,0)
 W "  ... done"
"RTN","PRSATE",171,0)
 D HOL,RS
"RTN","PRSATE",172,0)
 Q
"RTN","PRSATE",173,0)
 ;
"RTN","PRSATE",174,0)
 ;
"RTN","PRSATE",175,0)
RS ; Get Comp Ind
"RTN","PRSATE",176,0)
 S Y=$G(^PRST(458,PPI,"E",DFN,0))
"RTN","PRSATE",177,0)
 S FLX=$S((SRT="N")&($P(Y,U,7)]""):$P(Y,U,7),1:$P(Y,U,6))
"RTN","PRSATE",178,0)
 S DIR(0)="SAM^C:Compressed;F:Flexitime;0:None"
"RTN","PRSATE",179,0)
 S DIR("A")="Compressed Tour Indicator: "
"RTN","PRSATE",180,0)
 S DIR("B")=$S(FLX="C":"Compressed",FLX="F":"Flexitime",1:"None")
"RTN","PRSATE",181,0)
 D ^DIR K DIR I "^C^F^0^"'[(U_Y_U) S Y=FLX
"RTN","PRSATE",182,0)
 ;
"RTN","PRSATE",183,0)
 ;  Intermittent employee cannot have compressed tour.
"RTN","PRSATE",184,0)
 ;
"RTN","PRSATE",185,0)
 I $P(C0,U,10)=3,Y="C" D  G RS
"RTN","PRSATE",186,0)
 .   W *7,!?5,"Compressed tour not valid for this employee."
"RTN","PRSATE",187,0)
 ;
"RTN","PRSATE",188,0)
 I Y="F" S Z=0 D  I Z G RS
"RTN","PRSATE",189,0)
 .S PAY=$P(C0,U,21),PB=$P(C0,U,20)
"RTN","PRSATE",190,0)
 .I "0123456789GU"'[PAY S Z=1
"RTN","PRSATE",191,0)
 .I PAY="G",PB'=2 S Z=1
"RTN","PRSATE",192,0)
 .I PAY="U","27EXT"'[PB S Z=1
"RTN","PRSATE",193,0)
 .I Z W *7,!?5,"Flexitime not valid for this employee."
"RTN","PRSATE",194,0)
 .Q
"RTN","PRSATE",195,0)
 S $P(^PRST(458,PPI,"E",DFN,0),U,$S(SRT="N":7,1:6))=Y
"RTN","PRSATE",196,0)
 I $D(^PRST(458,"ATC",DFN)) D UPD^PRSASAL
"RTN","PRSATE",197,0)
 K PAY,ZENT Q
"RTN","PRSATE",198,0)
 ;
"RTN","PRSATE",199,0)
 ;
"RTN","PRSATE",200,0)
NX ; Set Next ToD
"RTN","PRSATE",201,0)
 S Z=$G(^PRST(458,PPI,"E",DFN,"D",DAY,0))
"RTN","PRSATE",202,0)
 I $P(Z,"^",2)=TD,'$P(Z,"^",3),'PRSTWB!($P($G(^PRST(458,PPI,"E",DFN,"D",DAY,8)),U)=$G(PRSTW(DAY))) QUIT
"RTN","PRSATE",203,0)
 S $P(Z,"^",3,4)="2^"_TD,$P(Z,"^",10,11)=DUZ_"^"_NOW
"RTN","PRSATE",204,0)
 S ^PRST(458,PPI,"E",DFN,"D",DAY,0)=Z S:PRSTWB $P(^(8),U,5)=$G(PRSTW(DAY))
"RTN","PRSATE",205,0)
 S ^PRST(458,"ATC",DFN,PPI,DAY)=""
"RTN","PRSATE",206,0)
 QUIT
"RTN","PRSATE",207,0)
 ;
"RTN","PRSATE",208,0)
 ;
"RTN","PRSATE",209,0)
SET ; Set ToD
"RTN","PRSATE",210,0)
 N ZLASTPP,OLD,SCH,PRSTW1,PRSTW5
"RTN","PRSATE",211,0)
 ;get Zero node of emp pp rec, Old ToD, & Prior scheduled ToD.
"RTN","PRSATE",212,0)
 ;ZLASTPP is true if a ToD present on this day last pp.
"RTN","PRSATE",213,0)
 S Z=$G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),PRSTW1=$P($G(^(8)),U),PRSTW5=$P($G(^(8)),U,5),OLD=$P(Z,U,2),SCH=$P(Z,U,4)
"RTN","PRSATE",214,0)
 S ZLASTPP=$P($G(^PRST(458,PPI-1,"E",DFN,"D",DAY,0)),U,2)'=""
"RTN","PRSATE",215,0)
 ;quit if old tour and its time segments/telework tour=edited one
"RTN","PRSATE",216,0)
 I OLD=TD,$G(^PRST(458,PPI,"E",DFN,"D",DAY,1))=Y,PRSTW1=$G(PRSTW(DAY))!'$G(PRSTWB) QUIT
"RTN","PRSATE",217,0)
 ;Z is updated with new ToD info & replaces the emp ToD record.
"RTN","PRSATE",218,0)
 S $P(Z,U,8)=TDH,$P(Z,U,10,11)=DUZ_U_NOW
"RTN","PRSATE",219,0)
 I $P(Z,U,12) S $P(Z,U,12)="" ; remove holiday flag
"RTN","PRSATE",220,0)
 ;Temp ToD, store T&L ToD will be worked if it's not emp's usual t&l.
"RTN","PRSATE",221,0)
 I TYP,TLI'=WTL S $P(Z,U,9)=WTL
"RTN","PRSATE",222,0)
 ;no existing ToD on this day.
"RTN","PRSATE",223,0)
 I OLD="" S $P(Z,U,1,3)=DAY_U_TD_U_TYP D S0:ZLASTPP,S1,S8($G(PRSTW(DAY)),1):$G(PRSTWB) QUIT
"RTN","PRSATE",224,0)
 ;clean out postings and other ToD info since ToD is changing
"RTN","PRSATE",225,0)
 D CLEANTOD(PPI,DFN,DAY,TD)
"RTN","PRSATE",226,0)
 I SCH="" S $P(Z,U,2,4)=TD_U_TYP_U_OLD D S0,S1 D:$G(PRSTWB) S8($G(PRSTW(DAY)),1),S8(PRSTW1,5) QUIT
"RTN","PRSATE",227,0)
 S $P(Z,U,5,7)="^^"
"RTN","PRSATE",228,0)
 I SCH=TD,PRSTW5=$G(PRSTW(DAY))!'$G(PRSTWB) S $P(Z,U,2,4)=TD_"^^" K ^PRST(458,"ATC",DFN,PPI,DAY) D S1 D:$G(PRSTWB) S8("",5),S8($G(PRSTW(DAY)),1) QUIT
"RTN","PRSATE",229,0)
 S $P(Z,U,2,3)=TD_U_TYP D S0,S1 D:$G(PRSTWB) S8($G(PRSTW(DAY)),1)
"RTN","PRSATE",230,0)
 QUIT
"RTN","PRSATE",231,0)
 ;
"RTN","PRSATE",232,0)
 ;
"RTN","PRSATE",233,0)
 ; Set up x-ref for supervisor approval of ToD change
"RTN","PRSATE",234,0)
 ;
"RTN","PRSATE",235,0)
S0 S ^PRST(458,"ATC",DFN,PPI,DAY)=""
"RTN","PRSATE",236,0)
 Q
"RTN","PRSATE",237,0)
 ;
"RTN","PRSATE",238,0)
 ;
"RTN","PRSATE",239,0)
S1 ;
"RTN","PRSATE",240,0)
 S ^PRST(458,PPI,"E",DFN,"D",DAY,0)=Z S:Y'="" ^(1)=Y
"RTN","PRSATE",241,0)
 Q
"RTN","PRSATE",242,0)
 ;
"RTN","PRSATE",243,0)
 ;a=telework tour reg/med, b=1 if reg/temp tour, 5 if prior/next tour
"RTN","PRSATE",244,0)
S8(A,B) ;set telework tour in node 8 of daily multiple
"RTN","PRSATE",245,0)
 ;prstwb=1 telework eligible
"RTN","PRSATE",246,0)
 I '$G(PRSTWB) K ^PRST(458,PPI,"E",DFN,"D",DAY,8) QUIT
"RTN","PRSATE",247,0)
 S $P(^PRST(458,PPI,"E",DFN,"D",DAY,8),U,B)=A
"RTN","PRSATE",248,0)
 ; if no telework data then clean up
"RTN","PRSATE",249,0)
 I ^PRST(458,PPI,"E",DFN,"D",DAY,8)?."^" K ^PRST(458,PPI,"E",DFN,"D",DAY,8)
"RTN","PRSATE",250,0)
 QUIT
"RTN","PRSATE",251,0)
 ;
"RTN","PRSATE",252,0)
 ;
"RTN","PRSATE",253,0)
T2 ; Ask if second ToD
"RTN","PRSATE",254,0)
 N X
"RTN","PRSATE",255,0)
 ;
"RTN","PRSATE",256,0)
 ;  Don't ask for Daily ToDs
"RTN","PRSATE",257,0)
 ;
"RTN","PRSATE",258,0)
 Q:$E(ENT,1)="D"
"RTN","PRSATE",259,0)
 ;
"RTN","PRSATE",260,0)
 S X=$$ASK2NDTR()
"RTN","PRSATE",261,0)
 Q:X'="Y"  G ^PRSATE4
"RTN","PRSATE",262,0)
 ;
"RTN","PRSATE",263,0)
 ;
"RTN","PRSATE",264,0)
HOL ; Determine if Holiday within ToD
"RTN","PRSATE",265,0)
 N DAY
"RTN","PRSATE",266,0)
 D ^PRSAPPH
"RTN","PRSATE",267,0)
 Q:'$D(HOL)
"RTN","PRSATE",268,0)
 S TT="HX",DUP=1
"RTN","PRSATE",269,0)
 D E^PRSAPPH K DUP,HOL,TT
"RTN","PRSATE",270,0)
 Q
"RTN","PRSATE",271,0)
 ;
"RTN","PRSATE",272,0)
 ;
"RTN","PRSATE",273,0)
CLEANTOD(PPI,DFN,DAY,TD) ; CLEAN OUT TOUR
"RTN","PRSATE",274,0)
 N PRSDT,MIEN
"RTN","PRSATE",275,0)
 K ^PRST(458,PPI,"E",DFN,"D",DAY,1),^(2),^(3),^(10),^(8) I TD<5 K ^(4) S $P(Z,U,13,15)="^^"
"RTN","PRSATE",276,0)
 ; if employee is PTP with active memo then reset the ESR day
"RTN","PRSATE",277,0)
 S PRSDT=$P($G(^PRST(458,PPI,1)),U,DAY)
"RTN","PRSATE",278,0)
 S MIEN=$$MIEN^PRSPUT1(DFN,PRSDT)
"RTN","PRSATE",279,0)
 I MIEN D
"RTN","PRSATE",280,0)
 . N PRSFDA
"RTN","PRSATE",281,0)
 . S PRSFDA(458.02,DAY_","_DFN_","_PPI_",",146)="3" ; status = resubmit
"RTN","PRSATE",282,0)
 . S PRSFDA(458.02,DAY_","_DFN_","_PPI_",",148)="Tour Changed" ; remarks
"RTN","PRSATE",283,0)
 . D FILE^DIE("","PRSFDA"),MSG^DIALOG()
"RTN","PRSATE",284,0)
 Q
"RTN","PRSATE",285,0)
 ;
"RTN","PRSATE",286,0)
 ;
"RTN","PRSATE",287,0)
ERROR(NUM,VAR1,VAR2) ;
"RTN","PRSATE",288,0)
 W *7,!!
"RTN","PRSATE",289,0)
 I NUM=1 W "Employee has no Pay Entitlement table entry."
"RTN","PRSATE",290,0)
 I NUM=2 D
"RTN","PRSATE",291,0)
 .  Q:$G(NH)=112
"RTN","PRSATE",292,0)
 .  W "Warning: Normal Hours are ",$G(VAR1),"; Tour Hours are ",$G(VAR2)
"RTN","PRSATE",293,0)
 Q
"RTN","PRSATE",294,0)
 ;
"RTN","PRSATE",295,0)
 ;
"RTN","PRSATE",296,0)
ASKFIXED() ;GET USER'S YES OR NO RESPONSE TO FIXED ToD QUESTION
"RTN","PRSATE",297,0)
 N DIR,DIRUT,Y
"RTN","PRSATE",298,0)
 S DIR("A")="Do you wish to enter a fixed Mon-Fri Tour"
"RTN","PRSATE",299,0)
 S DIR(0)="Y"
"RTN","PRSATE",300,0)
 S DIR("?")="Answer NO to create any other type of tour."
"RTN","PRSATE",301,0)
 S DIR("?",1)="Fixed tours are Monday - Friday with the same hours."
"RTN","PRSATE",302,0)
 D ^DIR
"RTN","PRSATE",303,0)
 Q $S(Y=1:"Y",Y=0:"N",1:"^")
"RTN","PRSATE",304,0)
 ;
"RTN","PRSATE",305,0)
 ;
"RTN","PRSATE",306,0)
ASK2NDTR() ;GET USER'S YES OR NO RESPONSE TO 2nd ToD QUESTION
"RTN","PRSATE",307,0)
 N DIR,DIRUT,Y
"RTN","PRSATE",308,0)
 S DIR("A")="Do you wish to enter a Second Tour"_$S($G(SRT)="X":"",1:" for any Day")
"RTN","PRSATE",309,0)
 S DIR(0)="Y"
"RTN","PRSATE",310,0)
 S DIR("B")="N"
"RTN","PRSATE",311,0)
 S DIR("?",1)="Answer Yes to add a second tour.  No to continue."
"RTN","PRSATE",312,0)
 S DIR("?")="Enter ^ to escape and cancel this tour change."
"RTN","PRSATE",313,0)
 D ^DIR
"RTN","PRSATE",314,0)
 Q $S(Y=1:"Y",Y=0:"N",1:"^")
"RTN","PRSATE",315,0)
 ;
"RTN","PRSATE",316,0)
 ;
"RTN","PRSATE0")
0^14^B20872988^B16488191
"RTN","PRSATE0",1,0)
PRSATE0 ;WCIOFO/PLT - Data Validate for Edit Variable Tours ;7/18/08  14:37
"RTN","PRSATE0",2,0)
 ;;4.0;PAID;**112,117,132**;Sep 21, 1995;Build 13
"RTN","PRSATE0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSATE0",4,0)
 ;
"RTN","PRSATE0",5,0)
 N PRSTWO
"RTN","PRSATE0",6,0)
 S TOLD="" F K=1:1:14 S Z=$P($G(^PRST(458,PPI,"E",DFN,"D",K,0)),"^",2),$P(TOLD,"^",K)=Z S:SRT="N"&$P($G(^(0)),"^",3) $P(TOLD,"^",K)=$P(^(0),"^",4) S:PRSTWB (PRSTW(K),PRSTWO(K))=$P($G(^(8)),U,$S(SRT="N"&$P($G(^(0)),"^",3):5,1:1))
"RTN","PRSATE0",7,0)
 K K S ^PRST(458,PPI,"E",DFN,"T")=TOLD D DT^PRSATE2
"RTN","PRSATE0",8,0)
 N DDSFILE,DA,DR,PRSAERR,DDSBR
"RTN","PRSATE0",9,0)
 S DDSFILE=458,DDSFILE(1)=458.01,DA(1)=PPI,DA=DFN
"RTN","PRSATE0",10,0)
 S DR="[PRSA TE EDIT]" D ^DDS K DS Q:$D(PRSAERR)
"RTN","PRSATE0",11,0)
 S TNEW=$G(^PRST(458,PPI,"E",DFN,"T")) K ^PRST(458,PPI,"E",DFN,"T")
"RTN","PRSATE0",12,0)
 I '$D(^PRST(458,PPI,"E",DFN,"D",0)) S ^(0)="^458.02^14^14"
"RTN","PRSATE0",13,0)
 F DAY=1:1:14 S TD=$P(TNEW,"^",DAY) I TD>0 D S1
"RTN","PRSATE0",14,0)
 K TNEW,TOLD
"RTN","PRSATE0",15,0)
 QUIT
"RTN","PRSATE0",16,0)
 ;
"RTN","PRSATE0",17,0)
S1 ; Set Tour if necessary
"RTN","PRSATE0",18,0)
 I '$G(PRSTWB),$D(^PRST(458,PPI,"E",DFN,"D",DAY,8)) K ^PRST(458,PPI,"E",DFN,"D",DAY,8)
"RTN","PRSATE0",19,0)
 I TD=$P(TOLD,"^",DAY),$G(^PRST(457.1,+TD,1))=$G(^PRST(457.1,+$P(TOLD,"^",DAY),1)),$G(PRSTW(DAY))=$G(PRSTWO(DAY))!'$G(PRSTWB) QUIT
"RTN","PRSATE0",20,0)
 I SRT'="N" S Y=$G(^PRST(457.1,TD,1)),TDH=$P(^(0),"^",6) D SET^PRSATE QUIT
"RTN","PRSATE0",21,0)
 D NX^PRSATE
"RTN","PRSATE0",22,0)
 QUIT
"RTN","PRSATE0",23,0)
 ;
"RTN","PRSATE0",24,0)
VS ; Validate tour segments
"RTN","PRSATE0",25,0)
 S TRG=0 F K=1:3:19 Q:$P(Y,"^",K)=""  S Z=$P(Y,"^",K+2) S:'Z TRG=1 I Z D
"RTN","PRSATE0",26,0)
 . S Z=$P($G(^PRST(457.2,Z,0)),"^",2) I Z="RG" S TRG=1 Q
"RTN","PRSATE0",27,0)
 . I ZENT'[Z S STR="Tour Indicator contains type of time to which employee is not entitled."
"RTN","PRSATE0",28,0)
 . QUIT
"RTN","PRSATE0",29,0)
 QUIT
"RTN","PRSATE0",30,0)
 ;
"RTN","PRSATE0",31,0)
VAL ; Validate Tour
"RTN","PRSATE0",32,0)
 K PRSETD,PRSDAY
"RTN","PRSATE0",33,0)
 F DAY=1:1:14 S $P(PRSETD,U,DAY)=$$GET^DDSVAL(DIE,.DA,DAY+200)
"RTN","PRSATE0",34,0)
 G:TOLD=PRSETD VAL2
"RTN","PRSATE0",35,0)
 ;tour overlap validate
"RTN","PRSATE0",36,0)
 ;load prsday(day) before save
"RTN","PRSATE0",37,0)
 F DAY=1:1:14 S PRSDAY(DAY)=$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),U,1,4),$P(PRSDAY(DAY),U,6)=$P($G(^(0)),U,13),$P(PRSDAY(DAY),U,7,999)=$G(^(4)) D PRSDAY
"RTN","PRSATE0",38,0)
 ;check tour overlap
"RTN","PRSATE0",39,0)
 D ENT^PRSATE5 I $G(PRSERR) S DDSERROR=1,DDSBR=PRSERR+10_"^1^1" K PRSERR QUIT
"RTN","PRSATE0",40,0)
 ;
"RTN","PRSATE0",41,0)
VAL2 N NAWS,SNAWS,TDT S (ZENT,STR)="" K PRSAERR D OT^PRSATP S DB=$P(C0,U,10) I "KM"[PP,DB=1,NH=72 S NAWS=1
"RTN","PRSATE0",42,0)
 S (HRS,TRS,TDT)=0 F DAY=1:1:14 D  QUIT:STR'=""
"RTN","PRSATE0",43,0)
 . S TD=$P(PRSETD,U,DAY),Z=$P($G(^PRST(457.1,+TD,0)),"^",6) S:Z HRS=HRS+Z S Y=$G(^(1))
"RTN","PRSATE0",44,0)
 . I DAY=7!(DAY=14)&'TDT S TDT=$P($G(^PRST(457.1,+TD,0)),U,5)="Y"
"RTN","PRSATE0",45,0)
 . I $D(NAWS) S:Z'=12&Z NAWS=0 S $P(SNAWS,U,DAY)=TD I Z=12 S NAWS(DAY-1\7+1)=$G(NAWS(DAY-1\7+1))+1
"RTN","PRSATE0",46,0)
 . D VS S:TRG TRS=TRS+1
"RTN","PRSATE0",47,0)
 . QUIT
"RTN","PRSATE0",48,0)
 G:STR'="" V1
"RTN","PRSATE0",49,0)
 I FLX="C",TRS>9 S STR="Warning: Compressed Schedule has more than 9 Tours!" D HLP^DDSUTL(.STR)
"RTN","PRSATE0",50,0)
 I NH'=HRS,NH'=112 S STR="Warning: Normal Hours are "_NH_"; Tour Hours are "_HRS D HLP^DDSUTL(.STR)
"RTN","PRSATE0",51,0)
 I $D(NAWS) D
"RTN","PRSATE0",52,0)
 .I $G(NAWS(1))'=3!($G(NAWS(2))'=3)!'NAWS S STR=$P($T(NAWS1),";",3) D HLP^DDSUTL(.STR)
"RTN","PRSATE0",53,0)
 .D TOURHRS^PRSARC07(.HRS,PPI,DFN,SNAWS)
"RTN","PRSATE0",54,0)
 .I $G(HRS("W1"))'=36!($G(HRS("W2"))'=36) S STR=$P($T(NAWS2),";",3) D HLP^DDSUTL(.STR)
"RTN","PRSATE0",55,0)
 .I $G(TDT) S STR=$P($T(NAWS3),";",3) D HLP^DDSUTL(.STR)
"RTN","PRSATE0",56,0)
 K K,STR,TRG,TRS QUIT
"RTN","PRSATE0",57,0)
 ;
"RTN","PRSATE0",58,0)
PRSDAY ;update prsday with new data (like codes in label set of prsate)
"RTN","PRSATE0",59,0)
 I $P(PRSDAY(DAY),U,2)="" S $P(PRSDAY(DAY),U,1,3)=DAY_U_$P(PRSETD,U,DAY)_U_TYP QUIT:SRT'="N"
"RTN","PRSATE0",60,0)
 I SRT="N" S $P(PRSDAY(DAY),"^",3,4)="2^"_$P(PRSETD,U,DAY) QUIT
"RTN","PRSATE0",61,0)
 I $P(TOLD,U,DAY)=$P(PRSETD,U,DAY),$P($$TOUR^PRSATE5($P(PRSETD,U,DAY)),"~",2)=$G(^PRST(458,PPI,"E",DFN,"D",DAY,1)) QUIT
"RTN","PRSATE0",62,0)
 I $P(PRSDAY(DAY),U,4)="" S $P(PRSDAY(DAY),U,2,4)=$P(PRSETD,U,DAY)_U_TYP_U_$P(PRSDAY(DAY),U,2)
"RTN","PRSATE0",63,0)
 E  I $P(PRSDAY(DAY),U,4)=$P(PRSETD,U,DAY) S $P(PRSDAY(DAY),U,2,4)=$P(PRSETD,U,DAY)_"^^"
"RTN","PRSATE0",64,0)
 E  S $P(PRSDAY(DAY),U,2,3)=$P(PRSETD,U,DAY)_U_TYP
"RTN","PRSATE0",65,0)
 QUIT
"RTN","PRSATE0",66,0)
 ;
"RTN","PRSATE0",67,0)
 ;allow to file, ddserror is kill after set = 1, all other checks are aborted
"RTN","PRSATE0",68,0)
V1 S (DDSERROR,PRSAERR)=1 D HLP^DDSUTL(.STR) K DDSERROR Q
"RTN","PRSATE0",69,0)
NAWS1 ;;Warning: There are not three 12 hour tours in week 1 and/or week 2 for this AWS 36/40 Nurse
"RTN","PRSATE0",70,0)
NAWS2 ;;Warning: Hours in week 1 and/or week 2 are not 36 for this AWS 36/40 Nurse.
"RTN","PRSATE0",71,0)
NAWS3 ;;Warning: Tour overlaps two administrative work weeks for this 36/40 Nurse.
"RTN","PRSATE0",72,0)
 ;
"RTN","PRSATE0",73,0)
 ;a=ien of 450, b=[ien of 458], c=[ien (day # 1 to 14) of 458.02]
"RTN","PRSATE0",74,0)
 ;d=[1 if pp/tem tour of dute, 5 if prior/next]
"RTN","PRSATE0",75,0)
TWE(A,B,C,D) ;ef=^1-emp 450 tw indicator, ^2=emp eligible code, ^3-emp pp 458 tw
"RTN","PRSATE0",76,0)
 ;       ^4 emp pp eliglble code, ^5-daily tw tour
"RTN","PRSATE0",77,0)
 N E
"RTN","PRSATE0",78,0)
 S:'$G(D) D=1 S E=$$TWP($P($G(^PRSPC(A,1)),U,45))
"RTN","PRSATE0",79,0)
 QUIT:'$G(B) E
"RTN","PRSATE0",80,0)
 QUIT E_U_$S("PX"[$P($G(^PRST(458,B,"E",A,0)),U,2):$$TWP($P($G(^(0)),U,8)),1:E)_$S($G(C):U_$P($G(^PRST(458,B,"E",A,"D",C,8)),U,D),1:"")
"RTN","PRSATE0",81,0)
 ;
"RTN","PRSATE0",82,0)
 ;a=telework paid code of file#454, [b=1 for return with description]
"RTN","PRSATE0",83,0)
TWP(A,B) ;ef=^1-telework code, ^2-eligible code, ^3-description
"RTN","PRSATE0",84,0)
 QUIT:A="" U
"RTN","PRSATE0",85,0)
 S A=$O(^PRSP(454,1,"TW","B",A,0)) QUIT:'A U
"RTN","PRSATE0",86,0)
 S A=^PRSP(454,1,"TW",A,0)
"RTN","PRSATE0",87,0)
 QUIT $P(A,U)_U_$P(A,U,3)_$S($G(B):U_$P(A,U,2),1:"")
"RTN","PRSATE1")
0^15^B4303406^B3156271
"RTN","PRSATE1",1,0)
PRSATE1 ; HISC/REL-Display Tour Change ;5/5/93  10:40
"RTN","PRSATE1",2,0)
 ;;4.0;PAID;**115,132**;Sep 21, 1995;Build 13
"RTN","PRSATE1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSATE1",4,0)
LST ; Display Change
"RTN","PRSATE1",5,0)
 N PRSDAYN,X,X1,X2,PRSD1,PRSD2,PRSDNP1,PRSDNP2,PRSDW,PRSNXT,PRSWREC
"RTN","PRSATE1",6,0)
 W !?34,"Tour Change",!,"    Date",?14,"TW",?18,"Scheduled Tour",?45,"TW",?49,"Permanent Tour",?75,"Type"
"RTN","PRSATE1",7,0)
 S PRSD1=$G(^PRST(458,PPI,1)),PRSD2=$G(^PRST(458,PPI,2))
"RTN","PRSATE1",8,0)
 S PRSDNP1=$G(^PRST(458,PPI+1,1)),PRSDNP2=$G(^PRST(458,PPI+1,2))
"RTN","PRSATE1",9,0)
 S PRSNXT=0
"RTN","PRSATE1",10,0)
 F DAY=0:0 S DAY=$O(^PRST(458,"ATC",DFN,PPI,DAY)) Q:DAY=""!PRSNXT  D
"RTN","PRSATE1",11,0)
 . I $P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),U,3)=2 S PRSNXT=1
"RTN","PRSATE1",12,0)
 . Q
"RTN","PRSATE1",13,0)
 F DAY=0:0 S DAY=$O(^PRST(458,"ATC",DFN,PPI,DAY)) Q:DAY=""  D L1
"RTN","PRSATE1",14,0)
 Q
"RTN","PRSATE1",15,0)
L1 N PRSTW,PRSTD2,PRSTD4
"RTN","PRSATE1",16,0)
 S PRSWREC=$G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),TD=$P(PRSWREC,U,2),PRSTW=$G(^(8))
"RTN","PRSATE1",17,0)
 S PRSDW=$P(PRSD2,U,DAY)
"RTN","PRSATE1",18,0)
 I PRSNXT  D
"RTN","PRSATE1",19,0)
 . I $P(PRSDNP1,U,DAY) S PRSDW=$P(PRSDNP2,U,DAY) Q
"RTN","PRSATE1",20,0)
 . S PRSDW=$P(PRSD1,U,DAY),X1=PRSDW,X2=14 D C^%DTC S PRSDW=X
"RTN","PRSATE1",21,0)
 . D DW^%DTC S PRSDAYN=X S X=PRSDW D DTP^PRSAPPU
"RTN","PRSATE1",22,0)
 . S PRSDW=$E(PRSDAYN,1,3)_" "_Y
"RTN","PRSATE1",23,0)
 . QUIT
"RTN","PRSATE1",24,0)
 S PRSTD2=$P($G(^PRST(457.1,+TD,0)),U),X=$L(PRSTD2)
"RTN","PRSATE1",25,0)
 S TD=$P(PRSWREC,U,4),PRSTD4=$P($G(^PRST(457.1,+TD,0)),U),Y=$L(PRSTD4)
"RTN","PRSATE1",26,0)
 W !,PRSDW,?14,$P(PRSTW,U),?18,$S(X<26:PRSTD2,1:$P(PRSTD2," "))
"RTN","PRSATE1",27,0)
 W ?45,$P(PRSTW,U,5),?49,$S(Y<26:PRSTD4,1:$P(PRSTD4," "))
"RTN","PRSATE1",28,0)
 S TYP=$P(PRSWREC,U,3) W ?75,$S(TYP:"Temp",1:"Perm")
"RTN","PRSATE1",29,0)
 I X>25!(Y>25) W ! W:X>25 ?18,$P(PRSTD2," ",2,999) W:Y>25 ?49,$P(PRSTD4," ",2,999)
"RTN","PRSATE1",30,0)
 S TD=$P(PRSWREC,U,13) Q:'TD  W !?18,$P($G(^PRST(457.1,+TD,0)),U,1),?75,"Temp" Q
"RTN","PRSATE2")
0^16^B22049849^B19536924
"RTN","PRSATE2",1,0)
PRSATE2 ; HISC/REL,WIRMFO/JAH - Display Employee Tour of Duty ;3/3/1998
"RTN","PRSATE2",2,0)
 ;;4.0;PAID;**8,22,35,114,132**;Sep 21, 1995;Build 13
"RTN","PRSATE2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSATE2",4,0)
 ;
"RTN","PRSATE2",5,0)
 ;VARIABLES:
"RTN","PRSATE2",6,0)
 ;   PPI   =  Pay period internal entry number from file 458
"RTN","PRSATE2",7,0)
 ;   PPE   =  Pay period number in YY-PP format (e.g. 97-03)
"RTN","PRSATE2",8,0)
 ;   HOLDSCR  = dummy variable used to hold value from hold screen
"RTN","PRSATE2",9,0)
 ;              extrinsic function call.
"RTN","PRSATE2",10,0)
 ;   PRSTLV  = flag: contains 2 for timekeepers and 3 for supervisors.
"RTN","PRSATE2",11,0)
 ;   TLI   =  Internal entry of the T&L unit
"RTN","PRSATE2",12,0)
 ;   DFN   =  DFN is defined in a call from routine PRSATE to label NOL.
"RTN","PRSATE2",13,0)
 ;            Otherwise DFN is set to zero.
"RTN","PRSATE2",14,0)
 ;   SRT   =  Report sort entered by user.
"RTN","PRSATE2",15,0)
 ;            (C = current pp, L = last pp, N = next pp)
"RTN","PRSATE2",16,0)
 ;
"RTN","PRSATE2",17,0)
TK ; TimeKeeper Entry
"RTN","PRSATE2",18,0)
 S PRSTLV=2 G TL
"RTN","PRSATE2",19,0)
SUP ; Supervisor Entry
"RTN","PRSATE2",20,0)
 S PRSTLV=3 G TL
"RTN","PRSATE2",21,0)
TL N HOLDSCR
"RTN","PRSATE2",22,0)
 ;
"RTN","PRSATE2",23,0)
 ;Ask user to select a Time and Leave Unit: go to exit if unsuccessful
"RTN","PRSATE2",24,0)
 D ^PRSAUTL G:TLI<1 EX
"RTN","PRSATE2",25,0)
 ;
"RTN","PRSATE2",26,0)
 ;set PPI to the last pay period opened by Payroll
"RTN","PRSATE2",27,0)
 S PPI=$P(^PRST(458,0),"^",3),PPE=$P($G(^PRST(458,PPI,0)),"^",1)
"RTN","PRSATE2",28,0)
 ;
"RTN","PRSATE2",29,0)
 ;
"RTN","PRSATE2",30,0)
 S DFN=0 D NOL G:SRT="^" EX
"RTN","PRSATE2",31,0)
 ;
"RTN","PRSATE2",32,0)
 ;If user chose last pay periods tour then decrement pay period.
"RTN","PRSATE2",33,0)
 I SRT="L" S PPI=PPI-1,PPE=$P($G(^PRST(458,PPI,0)),"^",1)
"RTN","PRSATE2",34,0)
 ;
"RTN","PRSATE2",35,0)
 ;If user chose Next pay period's tour of duty
"RTN","PRSATE2",36,0)
 ;then increment pay period.  This value is for display only, 
"RTN","PRSATE2",37,0)
 ;since the actual data for a tour change for the next pay period 
"RTN","PRSATE2",38,0)
 ;is stored on the 4 node of the current pay period.
"RTN","PRSATE2",39,0)
 I SRT="N" S PPE=$E($$NXTPP^PRSAPPU(PPE),3,7)
"RTN","PRSATE2",40,0)
 ;
"RTN","PRSATE2",41,0)
T1 ;ask type of output
"RTN","PRSATE2",42,0)
 S DIR(0)="SA^S:SHORT;L:LONG"
"RTN","PRSATE2",43,0)
 S DIR("A")="Select Type of Display (S or L): ",DIR("B")="SHORT"
"RTN","PRSATE2",44,0)
 S DIR("?")="Answer S for Tour Titles, L for Detailed Time Segments"
"RTN","PRSATE2",45,0)
 D ^DIR K DIR G:$D(DIRUT) EX
"RTN","PRSATE2",46,0)
 S TYP=Y
"RTN","PRSATE2",47,0)
 ;
"RTN","PRSATE2",48,0)
NME ;Ask user what employee they want to display tour of duty for.
"RTN","PRSATE2",49,0)
 K DIC S DIC("A")="Select EMPLOYEE: "
"RTN","PRSATE2",50,0)
 S DIC("S")="I $P(^(0),""^"",8)=TLE"
"RTN","PRSATE2",51,0)
 S DIC(0)="AEQM"
"RTN","PRSATE2",52,0)
 S DIC="^PRSPC(",D="ATL"_TLE
"RTN","PRSATE2",53,0)
 W ! D IX^DIC S DFN=+Y K DIC
"RTN","PRSATE2",54,0)
 ;
"RTN","PRSATE2",55,0)
 I DFN<1 G EX
"RTN","PRSATE2",56,0)
 W ! K IOP,%ZIS
"RTN","PRSATE2",57,0)
 S %ZIS("A")="Select Device: ",%ZIS="MQ" D ^%ZIS K %ZIS,IOP G:POP EX
"RTN","PRSATE2",58,0)
 I $D(IO("Q")) S PRSAPGM="Q1^PRSATE2",PRSALST="TLI^TLE^TYP^SRT^DFN^PPI^PPE" D QUE^PRSAUTL G NME
"RTN","PRSATE2",59,0)
 U IO D Q1 D ^%ZISC K %ZIS,IOP G NME
"RTN","PRSATE2",60,0)
Q1 W:$E(IOST,1,2)="C-" @IOF W !?26,"VA TIME & ATTENDANCE SYSTEM"
"RTN","PRSATE2",61,0)
 W !?29,"EMPLOYEE TOUR OF DUTY"
"RTN","PRSATE2",62,0)
 D:TYP="S" S0
"RTN","PRSATE2",63,0)
 D:TYP="L" L0
"RTN","PRSATE2",64,0)
 I $E(IOST,1,2)="C-" S HOLDSCR=$$ASK^PRSLIB00(1)
"RTN","PRSATE2",65,0)
 Q
"RTN","PRSATE2",66,0)
 ;====================================================================
"RTN","PRSATE2",67,0)
S0 ; Short Display
"RTN","PRSATE2",68,0)
 ;Loop thru both weeks of pay period simultaneously, 
"RTN","PRSATE2",69,0)
 ;displaying sun-sat side by side.
"RTN","PRSATE2",70,0)
 D HDR^PRSADP1,DT
"RTN","PRSATE2",71,0)
 W !!?7,"TW  Week 1 - ",$E(Y1,5,13),?41,"TW  Week 2 - ",$E(Y2,5,13),!
"RTN","PRSATE2",72,0)
 F DAY=1:1:7 D S1
"RTN","PRSATE2",73,0)
 Q
"RTN","PRSATE2",74,0)
 ;====================================================================
"RTN","PRSATE2",75,0)
S1 ;
"RTN","PRSATE2",76,0)
 ; Y1 =  employee tour of duty node 4 current day of week one.
"RTN","PRSATE2",77,0)
 ; Y2 =  employee tour of duty node 4 current day of week two.
"RTN","PRSATE2",78,0)
 ; Y2 =  node 8 telework
"RTN","PRSATE2",79,0)
 ; TD =  tour of duty pointer to Tour of Duty file.
"RTN","PRSATE2",80,0)
 ;
"RTN","PRSATE2",81,0)
 N Y1,Y2,Y8,TD,PRSA
"RTN","PRSATE2",82,0)
 S Y1=$G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),Y8=$G(^(8)),TD=$P(Y1,"^",2),PRSA=$P(Y8,U)
"RTN","PRSATE2",83,0)
 I SRT="N",$P(Y1,"^",3) S TD=$P(Y1,"^",4),PRSA=$P(Y8,U,5)
"RTN","PRSATE2",84,0)
 W !?2,$P("Sun Mon Tue Wed Thu Fri Sat"," ",DAY)
"RTN","PRSATE2",85,0)
 W ?7,PRSA W:TD ?11,$P($G(^PRST(457.1,TD,0)),"^",1)
"RTN","PRSATE2",86,0)
 S Y2=$G(^PRST(458,PPI,"E",DFN,"D",DAY+7,0)),Y8=$G(^(8)),TD=$P(Y2,"^",2),PRSA=$P(Y8,U)
"RTN","PRSATE2",87,0)
 I SRT="N",$P(Y2,"^",3) S TD=$P(Y2,"^",4),PRSA=$P(Y8,U,5)
"RTN","PRSATE2",88,0)
 W ?41,PRSA W:TD ?45,$P($G(^PRST(457.1,TD,0)),"^",1) Q:SRT="N"
"RTN","PRSATE2",89,0)
 I $P(Y1,"^",13)="",$P(Y2,"^",13)="" Q
"RTN","PRSATE2",90,0)
 W ! S TD=$P(Y1,"^",13)
"RTN","PRSATE2",91,0)
 W:TD ?11,$P($G(^PRST(457.1,TD,0)),"^",1)
"RTN","PRSATE2",92,0)
 S TD=$P(Y2,"^",13) W:TD ?45,$P($G(^PRST(457.1,TD,0)),"^",1)
"RTN","PRSATE2",93,0)
 Q
"RTN","PRSATE2",94,0)
 ;====================================================================
"RTN","PRSATE2",95,0)
L0 ; Long Display
"RTN","PRSATE2",96,0)
 S C0=^PRSPC(DFN,0)
"RTN","PRSATE2",97,0)
 W !!,$P(C0,U),?30,"Telework Indicator: ",$S($P($$TWE^PRSATE0(DFN,PPI),U,3)]"":$P($$TWE^PRSATE0(DFN,PPI),U,3),1:"None")
"RTN","PRSATE2",98,0)
 S X=$P(C0,U,9) W ?65,$E(X),"XX-XX-",$E(X,6,9)
"RTN","PRSATE2",99,0)
 D DT W !!,?7,"TW  Week 1 - ",$E(Y1,5,13),?41,"TW  Week 2 - ",$E(Y2,5,13),!
"RTN","PRSATE2",100,0)
 F DAY=1:1:7 D ^PRSATE3
"RTN","PRSATE2",101,0)
 Q
"RTN","PRSATE2",102,0)
 ;
"RTN","PRSATE2",103,0)
H1 I $E(IOST,1,2)="C-" S QT=$$ASK^PRSLIB00()
"RTN","PRSATE2",104,0)
 Q
"RTN","PRSATE2",105,0)
DT ; Get date of PP
"RTN","PRSATE2",106,0)
 I SRT'="N" S Y1=$P($G(^PRST(458,PPI,2)),"^",1),Y2=$P($G(^(2)),"^",8) Q
"RTN","PRSATE2",107,0)
 N X,Y,X1,X2 S X1=$P($G(^PRST(458,PPI,1)),"^",1),X2=14 D C^%DTC,DTP^PRSAPPU S Y1="    "_Y
"RTN","PRSATE2",108,0)
 S X1=X,X2=7 D C^%DTC,DTP^PRSAPPU S Y2="    "_Y Q
"RTN","PRSATE2",109,0)
 Q
"RTN","PRSATE2",110,0)
NOL ; Select this PP or Next
"RTN","PRSATE2",111,0)
 ;
"RTN","PRSATE2",112,0)
 ;SCL is set to 1 when NOL is called from this routine.
"RTN","PRSATE2",113,0)
 ;SCL is set to CN when NOL is called from PRSATE.
"RTN","PRSATE2",114,0)
 S SCL=$S(DFN:"",1:"CN")
"RTN","PRSATE2",115,0)
 ;
"RTN","PRSATE2",116,0)
 ;X,D1 is set to FileMan dates of selected pay period.
"RTN","PRSATE2",117,0)
 S (X,D1)=$P($G(^PRST(458,PPI,1)),"^",1)
"RTN","PRSATE2",118,0)
 W !
"RTN","PRSATE2",119,0)
 ;
"RTN","PRSATE2",120,0)
 ;if called from PRSATE and employee has data in this pay period
"RTN","PRSATE2",121,0)
 ;then set sort = next pp.  Then if the timecard has been transmitted
"RTN","PRSATE2",122,0)
 ;already set sort = current, next
"RTN","PRSATE2",123,0)
 I DFN,$D(^PRST(458,PPI,"E",DFN,0)) S SCL="N" I $P(^(0),"^",2)="T" S SCL="CN"
"RTN","PRSATE2",124,0)
 ;DTP takes X in FM date and returns a printable date in Y
"RTN","PRSATE2",125,0)
 I SCL["C" D DTP^PRSAPPU W !,"C = Current Pay Period beginning ",Y
"RTN","PRSATE2",126,0)
 G:'$D(^PRST(458,PPI-1,1)) N0
"RTN","PRSATE2",127,0)
 ;
"RTN","PRSATE2",128,0)
 ;if called from PRSATE and last pay period has NOT been transmitted.
"RTN","PRSATE2",129,0)
 I DFN,$P($G(^PRST(458,PPI-1,"E",DFN,0)),"^",2)'="T" G N0
"RTN","PRSATE2",130,0)
 ;
"RTN","PRSATE2",131,0)
 ;Show date of current pay period
"RTN","PRSATE2",132,0)
 S X1=D1,X2=-14
"RTN","PRSATE2",133,0)
 D C^%DTC,DTP^PRSAPPU W !,"L = Last Pay Period beginning ",Y
"RTN","PRSATE2",134,0)
 S SCL=SCL_"L"
"RTN","PRSATE2",135,0)
 ;
"RTN","PRSATE2",136,0)
 ;
"RTN","PRSATE2",137,0)
N0 I SCL["N" S X1=D1,X2=14 D C^%DTC,DTP^PRSAPPU W !,"N = Next Pay Period beginning ",Y
"RTN","PRSATE2",138,0)
 I SCL="" S SRT="^" Q
"RTN","PRSATE2",139,0)
 S SRTD=$E(SCL,1)
"RTN","PRSATE2",140,0)
N1 W !!,"Which Pay Period? ",SRTD," // " R SRT:DTIME S:'$T SRT="^" S:SRT="" SRT=SRTD Q:SRT="^"
"RTN","PRSATE2",141,0)
 S SRT=$TR(SRT,"ncl","NCL") I SCL'[SRT W $C(7),"   Choose from C, N or L if displayed" G N1
"RTN","PRSATE2",142,0)
 Q
"RTN","PRSATE2",143,0)
EX G KILL^XUSCLEAN
"RTN","PRSATE3")
0^17^B9035867^B7811736
"RTN","PRSATE3",1,0)
PRSATE3 ; HISC/REL-Display Detailed Tour ;12/8/92  08:33
"RTN","PRSATE3",2,0)
 ;;4.0;PAID;**132**;Sep 21, 1995;Build 13
"RTN","PRSATE3",3,0)
F0 ; Display Frames
"RTN","PRSATE3",4,0)
 N PRSA,PRSB
"RTN","PRSATE3",5,0)
 K Y1,Y2 S TD=$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),"^",2),Y1=$G(^(1)),Y4=$G(^(4)),PRSA=$P($G(^(8)),U) I SRT="N" S Y4="" I $P($G(^(0)),"^",3) S PRSA=$P($G(^(8)),U,5),TD=$P(^(0),"^",4),Y1=$G(^PRST(457.1,+TD,1))
"RTN","PRSATE3",6,0)
 I Y1="" S Y1=$S(TD=1:"Day Off",TD=2:"Day Tour",TD=3!(TD=4):"Intermittent",1:"")
"RTN","PRSATE3",7,0)
 S TD=$P($G(^PRST(458,PPI,"E",DFN,"D",DAY+7,0)),"^",2),Y2=$G(^(1)),Y5=$G(^(4)),PRSB=$P($G(^(8)),U) I SRT="N" S Y5="" I $P($G(^(0)),"^",3) S PRSB=$P($G(^(8)),U,5),TD=$P(^(0),"^",4),Y2=$G(^PRST(457.1,+TD,1))
"RTN","PRSATE3",8,0)
 I Y2="" S Y2=$S(TD=1:"Day Off",TD=2:"Day Tour",TD=3!(TD=4):"Intermittent",1:"")
"RTN","PRSATE3",9,0)
 S DTE=$P("Sun Mon Tue Wed Thu Fri Sat"," ",DAY)
"RTN","PRSATE3",10,0)
 W !?2,DTE S (L2,L3)=0 I Y1="",Y2="" G EX
"RTN","PRSATE3",11,0)
S0 ; Set Schedule Array
"RTN","PRSATE3",12,0)
 F L1=1:3:19 S A1=$P(Y1,"^",L1) Q:A1=""  S L2=L2+1,Y1(L2)=A1 S:$P(Y1,"^",L1+1)'="" Y1(L2)=Y1(L2)_"-"_$P(Y1,"^",L1+1) I $P(Y1,"^",L1+2)'="" S L2=L2+1,Y1(L2)="  "_$P($G(^PRST(457.2,+$P(Y1,"^",L1+2),0)),"^",1)
"RTN","PRSATE3",13,0)
 G:Y4="" S1
"RTN","PRSATE3",14,0)
 F L1=1:3:19 S A1=$P(Y4,"^",L1) Q:A1=""  S L2=L2+1,Y1(L2)=A1 S:$P(Y4,"^",L1+1)'="" Y1(L2)=Y1(L2)_"-"_$P(Y4,"^",L1+1) I $P(Y4,"^",L1+2)'="" S L2=L2+1,Y1(L2)="  "_$P($G(^PRST(457.2,+$P(Y4,"^",L1+2),0)),"^",1)
"RTN","PRSATE3",15,0)
S1 ; Set Schedule Array
"RTN","PRSATE3",16,0)
 F L1=1:3:19 S A1=$P(Y2,"^",L1) Q:A1=""  S L3=L3+1,Y2(L3)=A1 S:$P(Y2,"^",L1+1)'="" Y2(L3)=Y2(L3)_"-"_$P(Y2,"^",L1+1) I $P(Y2,"^",L1+2)'="" S L3=L3+1,Y2(L3)="  "_$P($G(^PRST(457.2,+$P(Y2,"^",L1+2),0)),"^",1)
"RTN","PRSATE3",17,0)
 G:Y5="" S2
"RTN","PRSATE3",18,0)
 F L1=1:3:19 S A1=$P(Y5,"^",L1) Q:A1=""  S L3=L3+1,Y2(L3)=A1 S:$P(Y5,"^",L1+1)'="" Y2(L3)=Y2(L3)_"-"_$P(Y5,"^",L1+1) I $P(Y5,"^",L1+2)'="" S L3=L3+1,Y2(L3)="  "_$P($G(^PRST(457.2,+$P(Y5,"^",L1+2),0)),"^",1)
"RTN","PRSATE3",19,0)
S2 F K=1:1 Q:'$D(Y1(K))&'$D(Y2(K))  W:K>1 ! W:K=1 ?7,PRSA W:$D(Y1(K)) ?11,Y1(K) W:K=1 ?41,PRSB W:$D(Y2(K)) ?45,Y2(K)
"RTN","PRSATE3",20,0)
EX Q
"RTN","PRSATE6")
0^18^B59872089^B54920644
"RTN","PRSATE6",1,0)
PRSATE6 ; WCIOFO/JAH-VALIDATE FIREFIGHTER TOURS OF DUTY (ToD);3/19/99
"RTN","PRSATE6",2,0)
 ;;4.0;PAID;**45,132**;Sep 21, 1995;Build 13
"RTN","PRSATE6",3,0)
 Q
"RTN","PRSATE6",4,0)
FFTOUR(PPI,DFN,WHICHPP,ERROR) ; Validate a Firefighter ToD
"RTN","PRSATE6",5,0)
 N WK1BTOT,WK2BTOT,BASEMAX,PMP
"RTN","PRSATE6",6,0)
 ;
"RTN","PRSATE6",7,0)
 S PMP=$$GETPMP(DFN)
"RTN","PRSATE6",8,0)
 ;
"RTN","PRSATE6",9,0)
 ;Define maximum base hrs for 1 week of a firefighter ToD.
"RTN","PRSATE6",10,0)
 ;
"RTN","PRSATE6",11,0)
 S BASEMAX=$$GETBSMAX(DFN,PPI,WHICHPP)
"RTN","PRSATE6",12,0)
 ;
"RTN","PRSATE6",13,0)
 ; Loop thru week 1,2 & get total base ToD hrs scheduled.
"RTN","PRSATE6",14,0)
 ;
"RTN","PRSATE6",15,0)
 D GETTOTS(PPI,DFN,WHICHPP,.WK1BTOT,.WK2BTOT)
"RTN","PRSATE6",16,0)
 ;
"RTN","PRSATE6",17,0)
 ; convert minutes to 1/4 hour segments
"RTN","PRSATE6",18,0)
 ;
"RTN","PRSATE6",19,0)
 S WK1BTOT=WK1BTOT/15,WK2BTOT=WK2BTOT/15
"RTN","PRSATE6",20,0)
 ;
"RTN","PRSATE6",21,0)
 ; Determine any error in ToD
"RTN","PRSATE6",22,0)
 ;
"RTN","PRSATE6",23,0)
 D GETERROR(WK1BTOT,WK2BTOT,BASEMAX,PMP,.ERROR)
"RTN","PRSATE6",24,0)
 ;
"RTN","PRSATE6",25,0)
 ; display any errors
"RTN","PRSATE6",26,0)
 ;
"RTN","PRSATE6",27,0)
 I $$ISERRORS(.ERROR)  D
"RTN","PRSATE6",28,0)
 . D DISPERR(PPI,DFN,PMP,WHICHPP,.ERROR,BASEMAX)
"RTN","PRSATE6",29,0)
 Q
"RTN","PRSATE6",30,0)
 ;=======================
"RTN","PRSATE6",31,0)
 ;
"RTN","PRSATE6",32,0)
GETBSMAX(DFN,PPI,WHICHPP) ; GET MAX BASE ToD HRS FOR FIREFIGHTER'S WEEK
"RTN","PRSATE6",33,0)
 ;INPUT:
"RTN","PRSATE6",34,0)
 ;  Employee DFN  or internal entry number in file 450 
"RTN","PRSATE6",35,0)
 ;OUTPUT:
"RTN","PRSATE6",36,0)
 ;  return total base hrs in .25 hr segments that 
"RTN","PRSATE6",37,0)
 ;  this fire fighter is allowed in a week of thier ToD.
"RTN","PRSATE6",38,0)
 ;  If this isn't a firefighter (Premium pay indicator C)
"RTN","PRSATE6",39,0)
 ;  then return 0
"RTN","PRSATE6",40,0)
 ;
"RTN","PRSATE6",41,0)
 S MAX=0
"RTN","PRSATE6",42,0)
 S TOURTYPE=$$FLEXIND(PPI,DFN,WHICHPP)
"RTN","PRSATE6",43,0)
 S MAX=$S(TOURTYPE="C":53,1:40)
"RTN","PRSATE6",44,0)
 Q MAX*4
"RTN","PRSATE6",45,0)
 ;=======================
"RTN","PRSATE6",46,0)
 ;
"RTN","PRSATE6",47,0)
GETPMP(DFN) ; RETURN PREMIUM PAY INDICATOR CODE FROM FILE 450
"RTN","PRSATE6",48,0)
 ;^DD(450,548,0) = PREMIUM PAY IND^F^^PREMIUM;6
"RTN","PRSATE6",49,0)
 Q $P($G(^PRSPC(DFN,"PREMIUM")),"^",6)
"RTN","PRSATE6",50,0)
 ;=======================
"RTN","PRSATE6",51,0)
 ;
"RTN","PRSATE6",52,0)
GETTOTS(PPI,DFN,WHICHPP,WK1TOT,WK2TOT) ;
"RTN","PRSATE6",53,0)
 N TOURDAY,TOUR,SEGMNT,START,STOP,SPECIND
"RTN","PRSATE6",54,0)
 ;
"RTN","PRSATE6",55,0)
 S (WK1TOT,WK2TOT)=0
"RTN","PRSATE6",56,0)
 F TOURDAY=1:1:14  D
"RTN","PRSATE6",57,0)
 .  S TOUR=$$GETTOUR(PPI,DFN,WHICHPP,TOURDAY)
"RTN","PRSATE6",58,0)
 .  S MEAL=$$MEALTM(PPI,DFN,TOURDAY,WHICHPP)
"RTN","PRSATE6",59,0)
 .;
"RTN","PRSATE6",60,0)
 .;  Read each segment of ToD.
"RTN","PRSATE6",61,0)
 .;
"RTN","PRSATE6",62,0)
 .  F SEGMNT=1:3 D  Q:$P(TOUR,"^",SEGMNT)=""
"RTN","PRSATE6",63,0)
 ..   S (STARTHR,START)=$P(TOUR,"^",SEGMNT)
"RTN","PRSATE6",64,0)
 ..   S (STOPHR,STOP)=$P(TOUR,"^",SEGMNT+1)
"RTN","PRSATE6",65,0)
 ..   S SPECIND=$P(TOUR,"^",SEGMNT+2)
"RTN","PRSATE6",66,0)
 ..;
"RTN","PRSATE6",67,0)
 ..;  if this is base ToD hours then add the time to the approriate
"RTN","PRSATE6",68,0)
 ..;  week.
"RTN","PRSATE6",69,0)
 ..;
"RTN","PRSATE6",70,0)
 ..   I SPECIND="",$G(START)'="",$G(STOP)'="" D
"RTN","PRSATE6",71,0)
 ...     D MINUTES(.START,.STOP)
"RTN","PRSATE6",72,0)
 ...     S (WK1LEN,WK2LEN)=0
"RTN","PRSATE6",73,0)
 ...;
"RTN","PRSATE6",74,0)
 ...;    when ToD crosses midnight check if it's Sat. or Sun
"RTN","PRSATE6",75,0)
 ...;    & adjust the stop time
"RTN","PRSATE6",76,0)
 ...;
"RTN","PRSATE6",77,0)
 ...     I STOP<(START+1) D
"RTN","PRSATE6",78,0)
 ....      I (TOURDAY#7)=0 D
"RTN","PRSATE6",79,0)
 .....        D SPLIT(STARTHR,STOPHR,.WK1LEN,.WK2LEN)
"RTN","PRSATE6",80,0)
 .....        I WK1LEN+1>WK2LEN S WK1LEN=WK1LEN-MEAL
"RTN","PRSATE6",81,0)
 .....        I WK1LEN<WK2LEN S WK2LEN=WK2LEN-MEAL
"RTN","PRSATE6",82,0)
 .....        D UPTOT(.WK1TOT,.WK2TOT,WK1LEN,WK2LEN)
"RTN","PRSATE6",83,0)
 ....      E  D
"RTN","PRSATE6",84,0)
 .....        S STOP=1440+STOP
"RTN","PRSATE6",85,0)
 .....        S LEN=STOP-START-MEAL
"RTN","PRSATE6",86,0)
 .....        I TOURDAY<8 D UPTOT(.WK1TOT,.WK2TOT,LEN,0)
"RTN","PRSATE6",87,0)
 .....        I TOURDAY>7 D UPTOT(.WK1TOT,.WK2TOT,0,LEN)
"RTN","PRSATE6",88,0)
 ...     E  D
"RTN","PRSATE6",89,0)
 ....       S LEN=STOP-START-MEAL
"RTN","PRSATE6",90,0)
 ....       I TOURDAY<8 D UPTOT(.WK1TOT,.WK2TOT,LEN,0)
"RTN","PRSATE6",91,0)
 ....       I TOURDAY>7 D UPTOT(.WK1TOT,.WK2TOT,0,LEN)
"RTN","PRSATE6",92,0)
 ;
"RTN","PRSATE6",93,0)
 Q
"RTN","PRSATE6",94,0)
 ;=======================
"RTN","PRSATE6",95,0)
 ;
"RTN","PRSATE6",96,0)
MEALTM(PPI,DFN,DAY,WHICHPP) ;
"RTN","PRSATE6",97,0)
 ; RETURN LENGTH OF MEALTIME FOR THIS EMPs ToD ON THIS DAY.
"RTN","PRSATE6",98,0)
 N TOUR
"RTN","PRSATE6",99,0)
 S LEN=0
"RTN","PRSATE6",100,0)
 S TOUR=$G(^PRST(458,PPI,"E",DFN,"D",DAY,0))
"RTN","PRSATE6",101,0)
 S TOUR=$P(TOUR,"^",2)
"RTN","PRSATE6",102,0)
 I $P(TOUR,"^",4),(WHICHPP="N") S TOUR=$P(TOUR,"^",4)
"RTN","PRSATE6",103,0)
 I TOUR S LEN=$P($G(^PRST(457.1,TOUR,0)),"^",3)
"RTN","PRSATE6",104,0)
 ;
"RTN","PRSATE6",105,0)
 Q LEN
"RTN","PRSATE6",106,0)
 ;=======================
"RTN","PRSATE6",107,0)
 ;
"RTN","PRSATE6",108,0)
MINUTES(T1,T2) ; CONVERT TIME 1 & TWO TO MINUTES FROM MIDNIGHT
"RTN","PRSATE6",109,0)
 ; OF THE CURRENT DAY.  IF T2 IS LESS THAN OR EQUAL TO T1 THEN
"RTN","PRSATE6",110,0)
 ; IT IS ASSUMMED TO BE ON THE NEXT DAY.
"RTN","PRSATE6",111,0)
 ;
"RTN","PRSATE6",112,0)
 N X,Y
"RTN","PRSATE6",113,0)
 ;
"RTN","PRSATE6",114,0)
 ;call to convert start & stop to minutes from midnight
"RTN","PRSATE6",115,0)
 ;
"RTN","PRSATE6",116,0)
 S X=T1_"^"_T2
"RTN","PRSATE6",117,0)
 D CNV^PRSATIM
"RTN","PRSATE6",118,0)
 S T1=$P(Y,"^",1),T2=$P(Y,"^",2)
"RTN","PRSATE6",119,0)
 Q
"RTN","PRSATE6",120,0)
 ;=======================
"RTN","PRSATE6",121,0)
 ;
"RTN","PRSATE6",122,0)
SPLIT(DAY,T1,T2,L1,L2) ; SPLIT two day ToD into 2 segments.
"RTN","PRSATE6",123,0)
 ;INPUT:
"RTN","PRSATE6",124,0)
 ;  DAY = day of pay period that the ToD begins.
"RTN","PRSATE6",125,0)
 ;  T1  = start time of ToD in 08:00A format.
"RTN","PRSATE6",126,0)
 ;  T2  = stop time of ToD in 11:00P format.
"RTN","PRSATE6",127,0)
 ;OUTPUT:
"RTN","PRSATE6",128,0)
 ;  L1 = Length of ToD (minutes) from start time to midnight.
"RTN","PRSATE6",129,0)
 ;  L2 = Length of ToD (min) from midnight to stop time in next day.
"RTN","PRSATE6",130,0)
 ;
"RTN","PRSATE6",131,0)
 N X,Y
"RTN","PRSATE6",132,0)
 S X=T1_"^"_"MID"
"RTN","PRSATE6",133,0)
 D CNV^PRSATIM
"RTN","PRSATE6",134,0)
 S L1=$P(Y,"^",2)-$P(Y,"^",1)
"RTN","PRSATE6",135,0)
 S X="MID^"_T2
"RTN","PRSATE6",136,0)
 S L2=$P(Y,"^",2)-$P(Y,"^",1)
"RTN","PRSATE6",137,0)
 ;
"RTN","PRSATE6",138,0)
 ; If it's the 2nd Sat of the pay period then move the carry over
"RTN","PRSATE6",139,0)
 ; to the first week of this pay period.
"RTN","PRSATE6",140,0)
 ;
"RTN","PRSATE6",141,0)
 I DAY=14 S TEMP=L2,L2=L1,L1=TEMP
"RTN","PRSATE6",142,0)
 Q
"RTN","PRSATE6",143,0)
 ;=======================
"RTN","PRSATE6",144,0)
 ;
"RTN","PRSATE6",145,0)
UPTOT(W1T,W2T,W1LN,W2LN) ;
"RTN","PRSATE6",146,0)
 S W1T=W1T+W1LN
"RTN","PRSATE6",147,0)
 S W2T=W2T+W2LN
"RTN","PRSATE6",148,0)
 Q
"RTN","PRSATE6",149,0)
 ;=======================
"RTN","PRSATE6",150,0)
 ;
"RTN","PRSATE6",151,0)
GETERROR(W1TOT,W2TOT,BMAX,PMP,ERROR) ;
"RTN","PRSATE6",152,0)
 ;
"RTN","PRSATE6",153,0)
 ;    1. Code C firefighters on compressed ToDs may not have base 
"RTN","PRSATE6",154,0)
 ;       ToD hours that exceed 53 for either week 1 or 2.
"RTN","PRSATE6",155,0)
 ;     2. Code C firefighters without compressed ToDs may not have 
"RTN","PRSATE6",156,0)
 ;        base hours that exceed 40 for either week 1 or 2.
"RTN","PRSATE6",157,0)
 ;     3. Code C firefighters may not have base ToD hours that 
"RTN","PRSATE6",158,0)
 ;        exceed 80.
"RTN","PRSATE6",159,0)
 ;
"RTN","PRSATE6",160,0)
 I PMP="C" D
"RTN","PRSATE6",161,0)
 .  I W1TOT>BMAX S ERROR(1)=1
"RTN","PRSATE6",162,0)
 .  I W2TOT>BMAX S ERROR(2)=1
"RTN","PRSATE6",163,0)
 .  I (W2TOT+W1TOT)>(80*4) S ERROR(3)=1
"RTN","PRSATE6",164,0)
 Q
"RTN","PRSATE6",165,0)
 ;=======================
"RTN","PRSATE6",166,0)
 ;
"RTN","PRSATE6",167,0)
ISERRORS(ERROR) ; RETURN TRUE IF THERE ARE ERRORS IN THE ERROR ARRAY
"RTN","PRSATE6",168,0)
 S (ENUM,IS)=0
"RTN","PRSATE6",169,0)
 F  S ENUM=$O(ERROR(ENUM)) Q:ENUM=""!IS  I +$G(ERROR(ENUM)) S IS=1
"RTN","PRSATE6",170,0)
 ;
"RTN","PRSATE6",171,0)
 Q IS
"RTN","PRSATE6",172,0)
 ;=======================
"RTN","PRSATE6",173,0)
 ;
"RTN","PRSATE6",174,0)
DISPERR(PPI,DFN,PMP,WHICHPP,ERROR,BMAX) ;
"RTN","PRSATE6",175,0)
 ;
"RTN","PRSATE6",176,0)
 ; See GETERRORS for error descriptions.
"RTN","PRSATE6",177,0)
 ;
"RTN","PRSATE6",178,0)
 N FLX,COUNT,WK
"RTN","PRSATE6",179,0)
 S FLX=$$FLEXIND(PPI,DFN,WHICHPP)
"RTN","PRSATE6",180,0)
 S FLX=$S(FLX="C":"Compressed",FLX="F":"Flexitime",1:"None")
"RTN","PRSATE6",181,0)
 ;
"RTN","PRSATE6",182,0)
 S WK="",COUNT=0
"RTN","PRSATE6",183,0)
 I $G(ERROR(1)) S WK="one"
"RTN","PRSATE6",184,0)
 I $G(ERROR(2)) S WK="two"
"RTN","PRSATE6",185,0)
 I WK="two",$G(ERROR(1)) S WK="one and two"
"RTN","PRSATE6",186,0)
 W @IOF,!!!,?5,"There are the following problems with the tour entered:"
"RTN","PRSATE6",187,0)
 I +$G(ERROR(1))!(+$G(ERROR(2))) D
"RTN","PRSATE6",188,0)
 . S COUNT=COUNT+1
"RTN","PRSATE6",189,0)
 . W !!,?7,COUNT,".  Code ",PMP," firefighters with a compressed/flex "
"RTN","PRSATE6",190,0)
 . W !,?11,"indicator of ",FLX," may not have BASE tour hours that "
"RTN","PRSATE6",191,0)
 . W !,?11,"exceed ",BMAX/4," for week ",WK,"."
"RTN","PRSATE6",192,0)
 ;
"RTN","PRSATE6",193,0)
 I +$G(ERROR(3)) D
"RTN","PRSATE6",194,0)
 . S COUNT=COUNT+1
"RTN","PRSATE6",195,0)
 . W !!,?7,COUNT,".  Code ",PMP," firefighters may not have BASE tour "
"RTN","PRSATE6",196,0)
 . W !,?11,"hours that exceed 80 for the pay period."
"RTN","PRSATE6",197,0)
 ;
"RTN","PRSATE6",198,0)
 Q
"RTN","PRSATE6",199,0)
 ;=======================
"RTN","PRSATE6",200,0)
 ;
"RTN","PRSATE6",201,0)
ASKTOFIX() ;RETURN TK RESPONSE--DO YOU WANT TO FIX THE ToD?
"RTN","PRSATE6",202,0)
 N DIR,DIRUT,Y
"RTN","PRSATE6",203,0)
 W !!
"RTN","PRSATE6",204,0)
 S DIR("A",1)="This tour MUST BE CORRECTED or it will be removed."
"RTN","PRSATE6",205,0)
 S DIR("A")="Correct the tour"
"RTN","PRSATE6",206,0)
 S DIR(0)="Y"
"RTN","PRSATE6",207,0)
 S DIR("B")="Y"
"RTN","PRSATE6",208,0)
 S DIR("?",1)=" You must correct the tour.  Answer Yes to re-edit the tour."
"RTN","PRSATE6",209,0)
 S DIR("?")=" If you answer No the entire tour will be removed. "
"RTN","PRSATE6",210,0)
 D ^DIR
"RTN","PRSATE6",211,0)
 Q Y
"RTN","PRSATE6",212,0)
 ;=======================
"RTN","PRSATE6",213,0)
 ;
"RTN","PRSATE6",214,0)
GETTOUR(PPI,DFN,WHICHPP,PPDAY) ; This function returns the employees ToD
"RTN","PRSATE6",215,0)
 ; based on the WHICHPP variable.  WHICHPP can be set to N, for next
"RTN","PRSATE6",216,0)
 ; pay period, or C for current pay period or 'L' for last.  If set 
"RTN","PRSATE6",217,0)
 ; to 'N'ext, we have to look at the prior scheduled field in the 
"RTN","PRSATE6",218,0)
 ; current pay period to see if the ToD is changing next pp.
"RTN","PRSATE6",219,0)
 ;
"RTN","PRSATE6",220,0)
 N TEMPTOUR,TOURNODE,TOUR
"RTN","PRSATE6",221,0)
 I PPI'>0!(DFN'>0)!(PPDAY'>0) Q 0
"RTN","PRSATE6",222,0)
 S TOURNODE=$G(^PRST(458,PPI,"E",DFN,"D",PPDAY,0))
"RTN","PRSATE6",223,0)
 S TOUR=$P(TOURNODE,U,2)
"RTN","PRSATE6",224,0)
 S TEMPTOUR=$P(TOURNODE,U,3)
"RTN","PRSATE6",225,0)
 I WHICHPP="N",+TEMPTOUR D
"RTN","PRSATE6",226,0)
 .  S TOUR=$P(TOURNODE,"^",4)
"RTN","PRSATE6",227,0)
 I TOUR'>0 Q 0
"RTN","PRSATE6",228,0)
 Q $G(^PRST(457.1,TOUR,1))
"RTN","PRSATE6",229,0)
 ;=======================
"RTN","PRSATE6",230,0)
 ;
"RTN","PRSATE6",231,0)
SAVETOUR(PPI,DFN) ;SAVE ToD in ^TMP global
"RTN","PRSATE6",232,0)
 ;
"RTN","PRSATE6",233,0)
 S %X="^PRST(458,"_PPI_",""E"","_DFN_",""D"","
"RTN","PRSATE6",234,0)
 S %Y="^TMP($J,""OLDTOUR""," D %XY^%RCR
"RTN","PRSATE6",235,0)
 Q
"RTN","PRSATE6",236,0)
 ;=======================
"RTN","PRSATE6",237,0)
 ;
"RTN","PRSATE6",238,0)
RESTORE(PPI,DFN) ;restore a ToD
"RTN","PRSATE6",239,0)
 ;  use with EXTREME CAUTION. SAVETOUR should be called 1st.
"RTN","PRSATE6",240,0)
 ; This utility first removes the entire "D" node from the
"RTN","PRSATE6",241,0)
 ; input employee's pay period record.  It depends on the fact that
"RTN","PRSATE6",242,0)
 ; a backup of an earlier copy of the "D" node was saved in TMP.
"RTN","PRSATE6",243,0)
 N %X,%Y
"RTN","PRSATE6",244,0)
 K ^PRST(458,PPI,"E",DFN,"D")
"RTN","PRSATE6",245,0)
 S %X="^TMP($J,""OLDTOUR"","
"RTN","PRSATE6",246,0)
 S %Y="^PRST(458,"_PPI_",""E"","_DFN_",""D"","
"RTN","PRSATE6",247,0)
 D %XY^%RCR
"RTN","PRSATE6",248,0)
 Q
"RTN","PRSATE6",249,0)
 ;=======================
"RTN","PRSATE6",250,0)
 ;
"RTN","PRSATE6",251,0)
ASKTEMP() ; ASK USER-TEMP OR PERM ToD CHANGE
"RTN","PRSATE6",252,0)
 N DIR,DIRUT
"RTN","PRSATE6",253,0)
 S DIR("A")="Is this tour change Temporary or Permanent? "
"RTN","PRSATE6",254,0)
 S DIR("B")="P"
"RTN","PRSATE6",255,0)
 S DIR(0)="SAMO^P:Permanent;T:Temporary"
"RTN","PRSATE6",256,0)
 S DIR("?")="A Temporary change is for this Pay Period only."
"RTN","PRSATE6",257,0)
 S DIR("?",1)="A Permanent change is for this and future Pay Periods."
"RTN","PRSATE6",258,0)
 D ^DIR
"RTN","PRSATE6",259,0)
 I $D(DIRUT) S Y="^"
"RTN","PRSATE6",260,0)
 Q Y
"RTN","PRSATE6",261,0)
 ;=======================
"RTN","PRSATE6",262,0)
 ;
"RTN","PRSATE6",263,0)
GETEMP(TLE) ; SELECT EMP FROM THE PASSED T&L UNIT
"RTN","PRSATE6",264,0)
 N DIC,X,Y,D
"RTN","PRSATE6",265,0)
 S DIC("A")="Select EMPLOYEE: "
"RTN","PRSATE6",266,0)
 S DIC("S")="I $P(^(0),""^"",8)=TLE"
"RTN","PRSATE6",267,0)
 S DIC(0)="AEQM"
"RTN","PRSATE6",268,0)
 S DIC="^PRSPC("
"RTN","PRSATE6",269,0)
 S D="ATL"_TLE
"RTN","PRSATE6",270,0)
 W ! D IX^DIC S DFN=+Y K DIC
"RTN","PRSATE6",271,0)
 Q DFN
"RTN","PRSATE6",272,0)
 ;=======================
"RTN","PRSATE6",273,0)
 ;
"RTN","PRSATE6",274,0)
FLEXIND(PPI,DFN,WHICHPP) ;
"RTN","PRSATE6",275,0)
 ;Return emp's flexitime code (compressed, flex or none)
"RTN","PRSATE6",276,0)
 ; INPUT:
"RTN","PRSATE6",277,0)
 ;    PPI = pp internal #
"RTN","PRSATE6",278,0)
 ;    DFN =  emps internal # from 450/458
"RTN","PRSATE6",279,0)
 ;    WHICHPP = N for next pp otherwise current
"RTN","PRSATE6",280,0)
 Q $P($G(^PRST(458,PPI,"E",DFN,0)),"^",$S(WHICHPP="N":7,1:6))
"RTN","PRSATE6",281,0)
 ;=======================
"RTN","PRSATE6",282,0)
 ;
"RTN","PRSATE6",283,0)
ASKTLWRK(TLE) ; ASK TIMEKEEP WHICH TLU ToD WILL BE WORKED
"RTN","PRSATE6",284,0)
 N DIC,X,Y
"RTN","PRSATE6",285,0)
 S DIC="^PRST(455.5,"
"RTN","PRSATE6",286,0)
 S DIC(0)="AEQM"
"RTN","PRSATE6",287,0)
 S DIC("A")="T&L on which Tour will be worked: "
"RTN","PRSATE6",288,0)
 S DIC("B")=TLE
"RTN","PRSATE6",289,0)
 W ! D ^DIC
"RTN","PRSATE6",290,0)
 Q +Y
"RTN","PRSATE6",291,0)
 ;
"RTN","PRSATE6",292,0)
ASKTWMF() ;ask telework tour for fixed monday/friday tour
"RTN","PRSATE6",293,0)
 N DIR,DIRUT,X,Y
"RTN","PRSATE6",294,0)
 S DIR("A")="Do you wish to schedule any telework tours"
"RTN","PRSATE6",295,0)
 S DIR(0)="Y",DIR("?")="Answer NO if there is no telework day for the pay period."
"RTN","PRSATE6",296,0)
 D ^DIR
"RTN","PRSATE6",297,0)
 QUIT $S(Y=0:"N",Y=1:"Y",1:"^")
"RTN","PRSATP")
0^19^B34908799^B32294391
"RTN","PRSATP",1,0)
PRSATP ;HISC/REL,WIRMFO/MGD/PLT - Timekeeper Post Time ;4/13/2012
"RTN","PRSATP",2,0)
 ;;4.0;PAID;**22,57,69,92,102,93,112,126,132**;Sep 21, 1995;Build 13
"RTN","PRSATP",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSATP",4,0)
 ; input (from calling option)
"RTN","PRSATP",5,0)
 ;   PTPF - (optional) part-time physician flag, true (=1) when called
"RTN","PRSATP",6,0)
 ;          by the posting option for part-time physicians with a memo.
"RTN","PRSATP",7,0)
 ;
"RTN","PRSATP",8,0)
 N GLOB ; global reference for employee's time & attendance record.
"RTN","PRSATP",9,0)
 N PRSDT
"RTN","PRSATP",10,0)
 S PRSTLV=2 D ^PRSAUTL G:TLI<1 EX S %DT="X",X="T+3" D ^%DT
"RTN","PRSATP",11,0)
 S %DT="AEPX",%DT("A")="Posting Date: ",%DT("B")="T-1",%DT(0)=-Y W ! D ^%DT
"RTN","PRSATP",12,0)
 G:Y<1 EX S (PRSDT,D1)=Y S Y=$G(^PRST(458,"AD",D1)),PPI=$P(Y,"^",1),DAY=$P(Y,"^",2)
"RTN","PRSATP",13,0)
 I PPI="" W !!,$C(7),"Pay Period is Not Open Yet!" G EX
"RTN","PRSATP",14,0)
 S PPE=$P($G(^PRST(458,PPI,0)),"^",1),DTE=$P($G(^PRST(458,PPI,2)),"^",DAY),DTI=$P($G(^(1)),"^",DAY)
"RTN","PRSATP",15,0)
D2 W !!,"Would you like to edit the T & A RECORDs in alphabetical order" S %=1 D YN^DICN I % S LP=% G EX:%=-1,LOOP:%=1,NME
"RTN","PRSATP",16,0)
 W !!,"Answer YES if you want all RECORDs brought up for which no data"
"RTN","PRSATP",17,0)
 W !,"has been entered." G D2
"RTN","PRSATP",18,0)
 ;
"RTN","PRSATP",19,0)
 ;
"RTN","PRSATP",20,0)
LOOP ;
"RTN","PRSATP",21,0)
 S LP=1,NN=""
"RTN","PRSATP",22,0)
 F  S NN=$O(^PRSPC("ATL"_TLE,NN)) Q:NN=""  F DFN=0:0 S DFN=$O(^PRSPC("ATL"_TLE,NN,DFN)) Q:DFN<1  I $$PTPSCR(DFN,PRSDT,$G(PTPF)) S GLOB="" D POST D:GLOB]"" UNLOCK^PRSLIB00(GLOB),NURSEPOC^PRSNEETP(TLI,PPI,DFN,PRSDT) I 'LP G EX
"RTN","PRSATP",23,0)
 G EX
"RTN","PRSATP",24,0)
NME K DIC S DIC("A")="Select EMPLOYEE: ",DIC("S")="I $P(^(0),""^"",8)=TLE,$D(^PRST(458,PPI,""E"",+Y)),$$PTPSCR^PRSATP(+Y,PRSDT,$G(PTPF))",DIC(0)="AEQM",DIC="^PRSPC(",D="ATL"_TLE W ! D IX^DIC S DFN=+Y K DIC
"RTN","PRSATP",25,0)
 G:DFN<1 EX S GLOB="" D POST D:GLOB]"" UNLOCK^PRSLIB00(GLOB),NURSEPOC^PRSNEETP(TLI,PPI,DFN,PRSDT) G NME
"RTN","PRSATP",26,0)
POST S TC=$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),"^",2),TC2=$P($G(^(0)),"^",13)
"RTN","PRSATP",27,0)
 I 'TC Q:LP'=2  W !!?5,"This Employee has no tour entered for this date." Q
"RTN","PRSATP",28,0)
 I "T"'[$P($G(^PRST(458,PPI,"E",DFN,0)),"^",2) W:LP=2 $C(7),!!,"This Employee has already been sent to Payroll." Q
"RTN","PRSATP",29,0)
 S STAT=$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,10)),"^",1)
"RTN","PRSATP",30,0)
 I LP=1,"1 3 4"[TC!(STAT'="") Q
"RTN","PRSATP",31,0)
 ;
"RTN","PRSATP",32,0)
 ; check if ESR is approved when posting PT Phy with memo
"RTN","PRSATP",33,0)
 I $G(PTPF),$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,7)),U)=5 D  Q:'Y!$D(DIRUT)
"RTN","PRSATP",34,0)
 . W $C(7),!
"RTN","PRSATP",35,0)
 . W !,"This day was auto-posted from an approved Electronic Subsidiary Record (ESR)."
"RTN","PRSATP",36,0)
 . W !,"Normally, changes should be accomplished by having the T & L supervisor return"
"RTN","PRSATP",37,0)
 . W !,"the ESR day to the part-time physician for correction."
"RTN","PRSATP",38,0)
 . W !,"An exception to the above is when AWOL, On Suspension, or Non-Pay must be"
"RTN","PRSATP",39,0)
 . W !,"posted, since those can not be entered via the ESR.",!
"RTN","PRSATP",40,0)
 . S DIR(0)="Y"
"RTN","PRSATP",41,0)
 . S DIR("A")="Do you want to manually post this day on the timecard"
"RTN","PRSATP",42,0)
 . S DIR("B")="NO"
"RTN","PRSATP",43,0)
 . D ^DIR K DIR
"RTN","PRSATP",44,0)
 ;
"RTN","PRSATP",45,0)
 ; lock employee record for editing by timekeeper
"RTN","PRSATP",46,0)
 I '$$AVAILREC^PRSLIB00("TK",.GLOB,.STOP) S:LP=1&$G(STOP) LP=0 Q
"RTN","PRSATP",47,0)
 D ^PRSADP1,LP,^PRSATP2,^PRSAENT
"RTN","PRSATP",48,0)
 G P0:TC>4,P0:TC=2,P0:TC=3,P3:TC=4,P1
"RTN","PRSATP",49,0)
P0 R !!,"Did Employee Only Work Scheduled Tour? ",X:DTIME S:'$T X="^^" S:X["^^" LP=0 Q:X["^"  S X=$TR(X,"yesnor","YESNOR")
"RTN","PRSATP",50,0)
 S:X="" X="*" I $P("YES",X,1)'="",$P("NO",X,1)'="",X'="R" W $C(7),!?5," Answer YES or NO or R for Normal Posting with Remarks" G P0
"RTN","PRSATP",51,0)
 S X=$E(X,1) I "YR"'[X G P1
"RTN","PRSATP",52,0)
 S PTY=1 I STAT'="" K ^PRST(458,PPI,"E",DFN,"D",DAY,2),^(3)
"RTN","PRSATP",53,0)
 I TC=3 S $P(^PRST(458,PPI,"E",DFN,"D",DAY,2),"^",3)="RG",STAT="T"
"RTN","PRSATP",54,0)
 I STAT'="",$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),"^",12) D NOW^%DTC S NOW=%,TT="HW" D S0^PRSAPPH
"RTN","PRSATP",55,0)
 S LV="" D A2^PRSATP0:X="R" G UPD
"RTN","PRSATP",56,0)
P1 R !!,"Was Employee Absent the Entire Tour? ",X:DTIME S:'$T X="^" Q:X["^"  S X=$TR(X,"yesno","YESNO")
"RTN","PRSATP",57,0)
 S:X="" X="*" I $P("YES",X,1)'="",$P("NO",X,1)'="" W $C(7)," Answer YES or NO" G P1
"RTN","PRSATP",58,0)
 I X?1"Y".E D ^PRSATP0 Q:X["^"  G UPD
"RTN","PRSATP",59,0)
 ;
"RTN","PRSATP",60,0)
 ;for daily employees if you say they didn't work and they were not absent
"RTN","PRSATP",61,0)
 ;then effectively you have not created any posting for the day and we
"RTN","PRSATP",62,0)
 ;clean up any prior posting
"RTN","PRSATP",63,0)
 I $E(ENT,1,2)["D" D  Q
"RTN","PRSATP",64,0)
 . K ^PRST(458,PPI,"E",DFN,"D",DAY,2),^(3),^(10)
"RTN","PRSATP",65,0)
 . D CLEANTW^PRSATPTW(PPI,DFN,DAY)
"RTN","PRSATP",66,0)
 ;
"RTN","PRSATP",67,0)
P3 S ZENT=$S($E(ENT,2)="H"&('$G(PTPF)):"RG ",$E(ENT,1,2)="00":"RG ",1:"")
"RTN","PRSATP",68,0)
 I TC=1 D OT S:$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),"^",12)&(AC="M2E") ZENT=ZENT_"HW " S ZENT=ZENT_"NP CP " G P31
"RTN","PRSATP",69,0)
 I TC=3!(TC=4) D LV S:$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),"^",12)&($E(ENT,22)) ZENT=ZENT_"HW " G P31
"RTN","PRSATP",70,0)
 D LV,OT S ZENT=ZENT_"TV TR " S:$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),"^",12) ZENT=ZENT_"HX HW "
"RTN","PRSATP",71,0)
P31 S DDSFILE=458,DDSFILE(1)=458.02,DA(2)=PPI,DA(1)=DFN,DA=DAY
"RTN","PRSATP",72,0)
 S Z=$G(^PRST(458,PPI,"E",DFN,"D",DAY,2)) K ZS
"RTN","PRSATP",73,0)
 S DR="[PRSA TP POST1]" D ^DDS K DS
"RTN","PRSATP",74,0)
 ; timekeeper has indicated there are exceptions, if they don't enter any, quit.
"RTN","PRSATP",75,0)
 I '$D(ZS) QUIT:'$D(^PRST(458,PPI,"E",DFN,"D",DAY,2))  S PTY=3 G UPD
"RTN","PRSATP",76,0)
 I ZS'="" S ^PRST(458,PPI,"E",DFN,"D",DAY,2)=ZS,PTY=3 G UPD
"RTN","PRSATP",77,0)
 ; if employee had exceptions, but timekeeper deletes them, then clear posting
"RTN","PRSATP",78,0)
 ; data because prompts that the employee was not absent and did not work
"RTN","PRSATP",79,0)
 ; entire tour were answered such that there must be exceptions
"RTN","PRSATP",80,0)
 I $D(^PRST(458,PPI,"E",DFN,"D",DAY,2)) D
"RTN","PRSATP",81,0)
 .  K ^(2),^(3),^(10)
"RTN","PRSATP",82,0)
 .  D CLEANTW^PRSATPTW(PPI,DFN,DAY)
"RTN","PRSATP",83,0)
 Q
"RTN","PRSATP",84,0)
UPD ; Update status
"RTN","PRSATP",85,0)
 D TELEWORK^PRSATPTW(PPI,DFN,DAY,STAT,PTY,TC)
"RTN","PRSATP",86,0)
 D NOW^%DTC
"RTN","PRSATP",87,0)
 S $P(^PRST(458,PPI,"E",DFN,"D",DAY,10),"^",1,4)="T^"_DUZ_"^"_%_"^"_PTY
"RTN","PRSATP",88,0)
 N DAH,DBH,HOL,QUIT
"RTN","PRSATP",89,0)
 S (DAH,DBH,HOL,QUIT)=""
"RTN","PRSATP",90,0)
 ;
"RTN","PRSATP",91,0)
 ; Check to holiday encapsulated by a form a non-pay
"RTN","PRSATP",92,0)
 D HENCAP^PRSATP3(PPI,DFN,DAY,.DBH,.HOL,.DAH,.QUIT)
"RTN","PRSATP",93,0)
 Q:QUIT
"RTN","PRSATP",94,0)
 D UPDT^PRSATP3(DFN,DBH,HOL,DAH)
"RTN","PRSATP",95,0)
 K DAH,DBH,HOL,QUIT
"RTN","PRSATP",96,0)
 Q
"RTN","PRSATP",97,0)
LP W !!,"Enter '^' to bypass this employee." W:LP=1 " Enter '^^' to stop T&L editing." W ! Q
"RTN","PRSATP",98,0)
LV S Z1="30 31 31 31 32 33 28 35 35 30 36 37 38",Z2="AL SL CB AD NL WP CU AA DL RL NP CP HX"
"RTN","PRSATP",99,0)
 ;
"RTN","PRSATP",100,0)
 ; Check to see if the employee is entitled to Military Leave and add
"RTN","PRSATP",101,0)
 ; ML to list if they are.  Added to be compliant with Public Law
"RTN","PRSATP",102,0)
 ; 106-554.
"RTN","PRSATP",103,0)
 S:$E(ENT,34) Z1=Z1_" 34",Z2=Z2_" ML"
"RTN","PRSATP",104,0)
 ;9/3 month employee entitled RS with recess hours in file# 458.8
"RTN","PRSATP",105,0)
 S:$E(ENT,5)&$P($$RSHR^PRSU1B2(DFN,PPE),U,DAY>7+1) Z1=Z1_" 5",Z2=Z2_" RS"
"RTN","PRSATP",106,0)
 F K=1:1:$L(Z1," ") I $E(ENT,$P(Z1," ",K)) S ZENT=ZENT_$P(Z2," ",K)_" "
"RTN","PRSATP",107,0)
 QUIT
"RTN","PRSATP",108,0)
 ;
"RTN","PRSATP",109,0)
OT ; Get entitled out-of-tour types of time
"RTN","PRSATP",110,0)
 S Z1="12 28 26",Z2="OT CT ON" F K=1:1:3 I $E(ENT,$P(Z1," ",K)) S ZENT=ZENT_$P(Z2," ",K)_" " I ZENT'["UN" S ZENT=ZENT_"UN "
"RTN","PRSATP",111,0)
 I $E(ENT,29),'$E(ENT,26) S ZENT=ZENT_"SB " S:ZENT'["UN" ZENT=ZENT_"UN "
"RTN","PRSATP",112,0)
 ; Allow Stand By for employees w/ Prem Pay Ind = W or V
"RTN","PRSATP",113,0)
 I $E(ENT,29),$E(ENT,26),"^W^V^"[(U_PMP_U) S ZENT=ZENT_"SB " S:ZENT'["UN" ZENT=ZENT_"UN "
"RTN","PRSATP",114,0)
 Q
"RTN","PRSATP",115,0)
EX ;clean up lock global which is set in $$AVAILREC^PRSLIB00
"RTN","PRSATP",116,0)
 K ^TMP($J,"LOCK")
"RTN","PRSATP",117,0)
 ;generic cleanup
"RTN","PRSATP",118,0)
 G KILL^XUSCLEAN
"RTN","PRSATP",119,0)
 ;
"RTN","PRSATP",120,0)
PTPSCR(PRSIEN,PSTDT,PTPF) ; part-time physician screen extrinsic function
"RTN","PRSATP",121,0)
 ; input
"RTN","PRSATP",122,0)
 ;   PRSIEN - Employee IEN (file 450)
"RTN","PRSATP",123,0)
 ;   PSTDT  - Date being posted (FileMan internal)
"RTN","PRSATP",124,0)
 ;   PTPF   - (opt) Part-time physician flag, equals true (1) when screen
"RTN","PRSATP",125,0)
 ;            should only allow selection of part-time physician with
"RTN","PRSATP",126,0)
 ;            memo and false (null or 0) when screen should only
"RTN","PRSATP",127,0)
 ;            allow selection of employees that are not part-time
"RTN","PRSATP",128,0)
 ;            physicians with memo.
"RTN","PRSATP",129,0)
 ; result
"RTN","PRSATP",130,0)
 ;   returns a boolean value (1 or 0) or null
"RTN","PRSATP",131,0)
 ;     =1 if employee passed screen
"RTN","PRSATP",132,0)
 ;        (PTPF true and employee is PTP with memo) OR
"RTN","PRSATP",133,0)
 ;        (PTPF false and employee is not PTP with memo)
"RTN","PRSATP",134,0)
 ;     =0 if employee did not pass screen
"RTN","PRSATP",135,0)
 ;     =null value if required inputs were not provided
"RTN","PRSATP",136,0)
 ;
"RTN","PRSATP",137,0)
 N PRSRET,PTPM
"RTN","PRSATP",138,0)
 S PTPF=$G(PTPF)
"RTN","PRSATP",139,0)
 S PRSRET="" ; init return
"RTN","PRSATP",140,0)
 I PRSIEN,PSTDT D
"RTN","PRSATP",141,0)
 . ; determine if employee is PT physician with memo on the posting date
"RTN","PRSATP",142,0)
 . S PTPM=$S($$MIEN^PRSPUT1(PRSIEN,PSTDT)>0:1,1:0)
"RTN","PRSATP",143,0)
 . ; apply screen
"RTN","PRSATP",144,0)
 . S PRSRET=$S(PTPF&PTPM:1,'PTPF&'PTPM:1,1:0)
"RTN","PRSATP",145,0)
 ;
"RTN","PRSATP",146,0)
 Q PRSRET
"RTN","PRSATP",147,0)
 ;
"RTN","PRSATP",148,0)
 ;PRSATP
"RTN","PRSATPP")
0^20^B22461168^B14403687
"RTN","PRSATPP",1,0)
PRSATPP ;WCIOFO/PLT - Timekeeper Prior PP Post Time ;7/29/08  15:44
"RTN","PRSATPP",2,0)
 ;;4.0;PAID;**117,124,132**;Sep 21, 1995;Build 13
"RTN","PRSATPP",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSATPP",4,0)
 ;
"RTN","PRSATPP",5,0)
 S PRSTLV=2 D ^PRSAUTL G:TLI<1 EX
"RTN","PRSATPP",6,0)
 S X=$P(^PRST(455.5,TLI,0),"^",3) D NOW^%DTC S NOW=%,DT=%\1
"RTN","PRSATPP",7,0)
D1 ;
"RTN","PRSATPP",8,0)
 S %DT="AEPX",%DT("A")="Posting Date: ",%DT(0)=-DT W ! D ^%DT
"RTN","PRSATPP",9,0)
 G:Y<1 EX
"RTN","PRSATPP",10,0)
 S D1=Y S Y=$G(^PRST(458,"AD",D1)),PPI=$P(Y,"^",1),DAY=$P(Y,"^",2)
"RTN","PRSATPP",11,0)
 I PPI="" W !!,*7,"Pay Period is Not Open Yet!" G EX
"RTN","PRSATPP",12,0)
 S PPE=$P($G(^PRST(458,PPI,0)),"^",1)
"RTN","PRSATPP",13,0)
 S DTE=$P($G(^PRST(458,PPI,2)),"^",DAY)
"RTN","PRSATPP",14,0)
 S DTI=$P($G(^(1)),"^",DAY)
"RTN","PRSATPP",15,0)
NME ;
"RTN","PRSATPP",16,0)
 K DIC S DIC("A")="Select EMPLOYEE: "
"RTN","PRSATPP",17,0)
 S DIC("S")="I $P(^(0),""^"",8)=TLE,$D(^PRST(458,PPI,""E"",+Y))"
"RTN","PRSATPP",18,0)
 S DIC(0)="AEQM",DIC="^PRSPC(",D="ATL"_TLE W ! D IX^DIC S DFN=+Y K DIC
"RTN","PRSATPP",19,0)
 G:DFN<1 EX
"RTN","PRSATPP",20,0)
 D ^PRSAENT
"RTN","PRSATPP",21,0)
 I ENT="" W *7,!!,"Employee has no Pay Entitlement table entry." G EX
"RTN","PRSATPP",22,0)
 S STAT=$P($G(^PRST(458,PPI,"E",DFN,0)),"^",2)
"RTN","PRSATPP",23,0)
 I "T"[STAT W *7,!!,"Employee still open for regular posting." G NME
"RTN","PRSATPP",24,0)
 I STAT'="X" W !!,*7,"Card in Payroll and not transmitted; request return of card." G NME
"RTN","PRSATPP",25,0)
 ;
"RTN","PRSATPP",26,0)
 ; loop thru and save this days timecard data nodes in AUR prior
"RTN","PRSATPP",27,0)
 ; to correction.
"RTN","PRSATPP",28,0)
 ; "D" (day subnodes)                           saved to Audit Nodes
"RTN","PRSATPP",29,0)
 ; ==================                           ====================
"RTN","PRSATPP",30,0)
 ;  0  timkeeper,supervisor,tour, length etc        1
"RTN","PRSATPP",31,0)
 ;  1  tour 1 start and stop times                  2
"RTN","PRSATPP",32,0)
 ;  2  exceptions start, stop and types and ind     3
"RTN","PRSATPP",33,0)
 ;  10 posting status, type, timekeeper, date/time  4
"RTN","PRSATPP",34,0)
 ;  3  timekeeper remarks                           5
"RTN","PRSATPP",35,0)
 ;  4  tour 2 start and stop                        6
"RTN","PRSATPP",36,0)
 ;  8  telework tour and posted hours               8
"RTN","PRSATPP",37,0)
 ;
"RTN","PRSATPP",38,0)
 K AUR S L2=0
"RTN","PRSATPP",39,0)
 N L2I
"RTN","PRSATPP",40,0)
 S L2I="1^2^3^4^5^6^8"
"RTN","PRSATPP",41,0)
 F L1=0,1,2,10,3,4,8 D
"RTN","PRSATPP",42,0)
 .  S Z=$G(^PRST(458,PPI,"E",DFN,"D",DAY,L1))
"RTN","PRSATPP",43,0)
 .  S L2=L2+1
"RTN","PRSATPP",44,0)
 .  S L2=$P(L2I,U,L2)
"RTN","PRSATPP",45,0)
 .  S:Z'="" AUR(L2)=Z
"RTN","PRSATPP",46,0)
 S STAT=$P($G(AUR(4)),"^",1) D POST
"RTN","PRSATPP",47,0)
 ;
"RTN","PRSATPP",48,0)
 ; if no changes to tour or timecard or telework or timekeeper aborted
"RTN","PRSATPP",49,0)
 ; in the corrected timecard remarks then we restore the old timecard
"RTN","PRSATPP",50,0)
 ;
"RTN","PRSATPP",51,0)
 N I,L2
"RTN","PRSATPP",52,0)
 S (Z,I)=0
"RTN","PRSATPP",53,0)
 F L1=0,1,2,10,3,4,8 D
"RTN","PRSATPP",54,0)
 .  S I=I+1
"RTN","PRSATPP",55,0)
 .  S L2=$P(L2I,U,I)
"RTN","PRSATPP",56,0)
 .  I $G(^PRST(458,PPI,"E",DFN,"D",DAY,L1))'=$G(AUR(L2)) S Z=1
"RTN","PRSATPP",57,0)
 I Z D
"RTN","PRSATPP",58,0)
 .  S AUT="T",AUS="R"
"RTN","PRSATPP",59,0)
 .  D ^PRSAUD
"RTN","PRSATPP",60,0)
 .  I $G(AUR(7))["^" D
"RTN","PRSATPP",61,0)
 ..    S I=0
"RTN","PRSATPP",62,0)
 ..    F L1=0,1,2,10,3,4,8 D
"RTN","PRSATPP",63,0)
 ...     S I=I+1
"RTN","PRSATPP",64,0)
 ...     S L2=$P(L2I,U,I)
"RTN","PRSATPP",65,0)
 ...     K ^PRST(458,PPI,"E",DFN,"D",DAY,L1)
"RTN","PRSATPP",66,0)
 ...     I $D(AUR(L2)) S ^(L1)=AUR(L2)
"RTN","PRSATPP",67,0)
 G NME
"RTN","PRSATPP",68,0)
 ;
"RTN","PRSATPP",69,0)
POST ;
"RTN","PRSATPP",70,0)
 ;start posting
"RTN","PRSATPP",71,0)
 N DDSFILE,PRSDAY,PRSDN,PRSERR,SRT
"RTN","PRSATPP",72,0)
 S SRT="X",PRSDN=DAY
"RTN","PRSATPP",73,0)
 S TC=$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),U,2),TC2=$P($G(^(0)),U,13)
"RTN","PRSATPP",74,0)
 D ^PRSADP1,LP,^PRSATP2 G:'TC T1
"RTN","PRSATPP",75,0)
T0 R !!,"Do you wish to change Scheduled Tour? N// ",X:DTIME Q:'$T!(X[U)  S:X="" X="N" S X=$TR(X,"yesno","YESNO")
"RTN","PRSATPP",76,0)
 I $P("YES",X,1)'="",$P("NO",X,1)'="" W *7," Answer YES or NO" G T0
"RTN","PRSATPP",77,0)
 G:X?1"N".E T3
"RTN","PRSATPP",78,0)
T1 ; Get new tour
"RTN","PRSATPP",79,0)
 S TYP=1,WTL=TLI
"RTN","PRSATPP",80,0)
 S DIC="^PRST(455.5,",DIC(0)="AEQM",DIC("A")="T&L on which Tour will be worked: ",DIC("B")=TLE W ! D ^DIC Q:Y<1  K DIC S WTL=+Y
"RTN","PRSATPP",81,0)
 S DIC="^PRST(457.1,",DIC(0)="AEQMN"
"RTN","PRSATPP",82,0)
 S DIC("S")="I "_$S($E(ENT,1)="D":"Y<3",$P(C0,U,10)=3:"Y>2!(Y=1)",1:"Y>5!(Y=1)")_",$P(^PRST(457.1,+Y,0),U,4)!($D(^PRST(457.1,+Y,""T"",""B"",WTL)))"
"RTN","PRSATPP",83,0)
 S DIC("A")="Select TOUR OF DUTY: " W ! D ^DIC K DIC G:Y'>0 T2
"RTN","PRSATPP",84,0)
 S TD=+Y
"RTN","PRSATPP",85,0)
 ;tour overlap check
"RTN","PRSATPP",86,0)
 K PRSDAY S PRSDAY(DAY)=$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),U,1,4),$P(PRSDAY(DAY),U,2)=TD,$P(PRSDAY(DAY),U,6)=$P($G(^(0)),U,13),$P(PRSDAY(DAY),U,7,999)=$G(^(4))
"RTN","PRSATPP",87,0)
 D PPTDOL^PRSATE5(SRT,PPI,DFN,DAY,.PRSDAY,3) I $G(PRSERR) K PRSERR G T1
"RTN","PRSATPP",88,0)
 ;Prompt for update to Telework Tour
"RTN","PRSATPP",89,0)
 S PRSTWB=$P($$TWE^PRSATE0(DFN,PPI),U,4)="Y"
"RTN","PRSATPP",90,0)
 I PRSTWB,TD=2!(TD>4) S PRSTW(DAY)=$$GETSCHTW()
"RTN","PRSATPP",91,0)
 S Y=$G(^PRST(457.1,TD,1)),TDH=$P(^(0),U,6)
"RTN","PRSATPP",92,0)
 D SET^PRSATE,HOL^PRSATE S TC=TD
"RTN","PRSATPP",93,0)
T2 ;ask secondary tour
"RTN","PRSATPP",94,0)
 G:$E(ENT,1)="D" T21
"RTN","PRSATPP",95,0)
 S X=$$ASK2NDTR^PRSATE() G:X'="Y" T21 D
"RTN","PRSATPP",96,0)
 . N TD,TC,TC2
"RTN","PRSATPP",97,0)
 . S TD=$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),U,13)
"RTN","PRSATPP",98,0)
 . I TD W !!,"Existing Second Tour ",$P($G(^PRST(457.1,TD,0)),U,1)," is being deleted." D DELSTD^PRSATE4(PPI,DFN,DAY)
"RTN","PRSATPP",99,0)
 . QUIT
"RTN","PRSATPP",100,0)
 I $P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),U,2)<6 W *7,!!,"A second Tour is not valid on this day." G T21
"RTN","PRSATPP",101,0)
 K PRSDAY,PRSERR D
"RTN","PRSATPP",102,0)
 . N DAY
"RTN","PRSATPP",103,0)
 . S DAY=PRSDN D P^PRSATE4
"RTN","PRSATPP",104,0)
 . QUIT
"RTN","PRSATPP",105,0)
 ;
"RTN","PRSATPP",106,0)
T21 S DAY=PRSDN,TC=$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),U,2),TD=TC,TC2=$P($G(^(0)),U,13)
"RTN","PRSATPP",107,0)
 D ^PRSADP1,LP,^PRSATP2
"RTN","PRSATPP",108,0)
T3 ;
"RTN","PRSATPP",109,0)
 G P1^PRSATP:TC=1,P3^PRSATP:TC=4,P0^PRSATP
"RTN","PRSATPP",110,0)
 Q
"RTN","PRSATPP",111,0)
 ;
"RTN","PRSATPP",112,0)
LP W !!,"Enter '^' to bypass this employee." W ! Q
"RTN","PRSATPP",113,0)
EX G KILL^XUSCLEAN
"RTN","PRSATPP",114,0)
GETSCHTW() ;
"RTN","PRSATPP",115,0)
 ;  Prompt for type of additional telework
"RTN","PRSATPP",116,0)
 N X,Y,DIR,DEF
"RTN","PRSATPP",117,0)
 S DIR("A")="Enter SCHEDULED telework for this day. "
"RTN","PRSATPP",118,0)
 S DIR(0)="SAB^REG:REGULAR SCHEDULED TELEWORK;MED:MEDICAL SCHEDULED TELEWORK;N:NONE"
"RTN","PRSATPP",119,0)
 S DIR("B")=$S($P($G(AUR(8)),U)]"":$P(AUR(8),U),1:"N")
"RTN","PRSATPP",120,0)
 D ^DIR
"RTN","PRSATPP",121,0)
 I $D(DIRUT) S Y=DIR("B")
"RTN","PRSATPP",122,0)
 Q $S(Y="N":"",1:Y)
"RTN","PRSATPTW")
0^21^B41651575^n/a
"RTN","PRSATPTW",1,0)
PRSATPTW ;WASHFO/JAH - Telework Posting;4/13/2012
"RTN","PRSATPTW",2,0)
 ;;4.0;PAID;**132**;Sep 21, 1995;Build 13
"RTN","PRSATPTW",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","PRSATPTW",4,0)
 Q
"RTN","PRSATPTW",5,0)
 ;
"RTN","PRSATPTW",6,0)
 ;
"RTN","PRSATPTW",7,0)
TELEWORK(PPI,PRSIEN,PRSD,STAT,POSTTYPE,TC) ; telework posting driver
"RTN","PRSATPTW",8,0)
 ;
"RTN","PRSATPTW",9,0)
 ;INPUT:
"RTN","PRSATPTW",10,0)
 ;  PPI-pay period being edited (either correctd timecard or regular posting)
"RTN","PRSATPTW",11,0)
 ;  PRSIEN:  employe 450 ien
"RTN","PRSATPTW",12,0)
 ;  PRSD: day number 1-14 being posted
"RTN","PRSATPTW",13,0)
 ;  STAT: timecard status (timekeeper, payroll, transmitted)
"RTN","PRSATPTW",14,0)
 ;  POSTTYPE: 1:Worked Entire Tour 2:Absent Entire Tour 3:Irregular Tour
"RTN","PRSATPTW",15,0)
 ;
"RTN","PRSATPTW",16,0)
 ; get telework indicator and check tour for scheduled telework
"RTN","PRSATPTW",17,0)
 ;
"RTN","PRSATPTW",18,0)
 N TWE,MAXTW,SCHED,MED,ADNOC,SCHHRS
"RTN","PRSATPTW",19,0)
 S TWE=$$TWE^PRSATE0(PRSIEN,PPI,PRSD)
"RTN","PRSATPTW",20,0)
 I POSTTYPE=2 D CLEANTW(PPI,PRSIEN,PRSD) Q
"RTN","PRSATPTW",21,0)
 ;
"RTN","PRSATPTW",22,0)
 ; for corrected timecards check if telework eligible during that 
"RTN","PRSATPTW",23,0)
 ; pay period otherwise use current telework indicator and
"RTN","PRSATPTW",24,0)
 ; quit if no trackable telework indicator
"RTN","PRSATPTW",25,0)
 ;
"RTN","PRSATPTW",26,0)
 Q:($P(TWE,U,4)'="Y")
"RTN","PRSATPTW",27,0)
 ;
"RTN","PRSATPTW",28,0)
 ; Get day's scheduled telework?
"RTN","PRSATPTW",29,0)
 ;
"RTN","PRSATPTW",30,0)
 S SCH=$P(TWE,U,5)
"RTN","PRSATPTW",31,0)
 ;
"RTN","PRSATPTW",32,0)
 ; Daily employees either telework or they don't so
"RTN","PRSATPTW",33,0)
 ; we're all done with them after this block
"RTN","PRSATPTW",34,0)
 ;
"RTN","PRSATPTW",35,0)
 N ACTUALTW
"RTN","PRSATPTW",36,0)
 I $G(TC)=2!($G(TC)=3) D  Q
"RTN","PRSATPTW",37,0)
 .  S ACTUALTW=$$TWDAY(SCH)
"RTN","PRSATPTW",38,0)
 .  Q:ACTUALTW<0
"RTN","PRSATPTW",39,0)
 .  D STORETW(PPI,PRSIEN,PRSD,ACTUALTW)
"RTN","PRSATPTW",40,0)
 ;
"RTN","PRSATPTW",41,0)
 ; for hourly employees get max allowable tw hrs based on timecard posting
"RTN","PRSATPTW",42,0)
 ;
"RTN","PRSATPTW",43,0)
 S MAXTW=$$MAXTW(PPI,PRSIEN,PRSD,SCH,POSTTYPE)
"RTN","PRSATPTW",44,0)
 I MAXTW="0^0^0" D CLEANTW(PPI,PRSIEN,PRSD) Q
"RTN","PRSATPTW",45,0)
 ;
"RTN","PRSATPTW",46,0)
 ;get any telework already posted
"RTN","PRSATPTW",47,0)
 ; piece 2 SCHEDULED
"RTN","PRSATPTW",48,0)
 ;       3 MEDICAL
"RTN","PRSATPTW",49,0)
 ;       4 AD HOC SITU    
"RTN","PRSATPTW",50,0)
 ;
"RTN","PRSATPTW",51,0)
 S OLDTWHRS=$P($G(^PRST(458,PPI,"E",PRSIEN,"D",PRSD,8)),U,2,4)
"RTN","PRSATPTW",52,0)
 ;
"RTN","PRSATPTW",53,0)
 ;  Prompt for the actual telework hours:
"RTN","PRSATPTW",54,0)
 ;   "REGULAR SCHEDULED","MEDICAL SCHEDULED","AD HOC"
"RTN","PRSATPTW",55,0)
 ;
"RTN","PRSATPTW",56,0)
 D ASKTWHRS(.ACTUALTW,MAXTW,OLDTWHRS,SCH)
"RTN","PRSATPTW",57,0)
 ;
"RTN","PRSATPTW",58,0)
 ;store the telework hours posted in the timecard
"RTN","PRSATPTW",59,0)
 ;
"RTN","PRSATPTW",60,0)
 D STORETW(PPI,PRSIEN,PRSD,ACTUALTW)
"RTN","PRSATPTW",61,0)
 ;
"RTN","PRSATPTW",62,0)
 Q
"RTN","PRSATPTW",63,0)
 ;
"RTN","PRSATPTW",64,0)
MAXTW(PPI,PRSIEN,PRSD,SCH,POSTTYPE) ;
"RTN","PRSATPTW",65,0)
 ;    Extrinsic function to return maximum allowable 
"RTN","PRSATPTW",66,0)
 ;    telework for medical, ad hoc, reg. sched.
"RTN","PRSATPTW",67,0)
 ;    RETURN:
"RTN","PRSATPTW",68,0)
 ;     piece 1: maximum regular scheduled
"RTN","PRSATPTW",69,0)
 ;     piece 2: maximum Medical scheduled
"RTN","PRSATPTW",70,0)
 ;     piece 3:  maximum AD HOC
"RTN","PRSATPTW",71,0)
 ;
"RTN","PRSATPTW",72,0)
 ;
"RTN","PRSATPTW",73,0)
 ;get tour length, length of exceptions to compute max telewk allowed
"RTN","PRSATPTW",74,0)
 ;
"RTN","PRSATPTW",75,0)
 ;  Field            Node;piece     Definition
"RTN","PRSATPTW",76,0)
 ; TOUR LENGTH         0;8   length of tour
"RTN","PRSATPTW",77,0)
 ; POSTING TYPE (104) 10;4  1:Worked tour 2:Absent tour 3:Irregular tour
"RTN","PRSATPTW",78,0)
 ; POSTING STATUS (101) 10;1 T:Timekeeper post P:Payroll rev X:Xmitted
"RTN","PRSATPTW",79,0)
 ;
"RTN","PRSATPTW",80,0)
 N TOT,TOD,MT,MAXTW,TCN,TSET,TT,TRC,TOURLEN,TOUR2LEN,BEG,END
"RTN","PRSATPTW",81,0)
 N SEGHRS
"RTN","PRSATPTW",82,0)
 ;
"RTN","PRSATPTW",83,0)
 S MAXTW="0^0^0"
"RTN","PRSATPTW",84,0)
 S TOURLEN=+$P($G(^PRST(458,PPI,"E",PRSIEN,"D",PRSD,0)),U,8)
"RTN","PRSATPTW",85,0)
 S TOUR2LEN=+$P($G(^PRST(458,PPI,"E",PRSIEN,"D",PRSD,0)),U,14)
"RTN","PRSATPTW",86,0)
 ;
"RTN","PRSATPTW",87,0)
 ;initialize telework to the tour length
"RTN","PRSATPTW",88,0)
 ;
"RTN","PRSATPTW",89,0)
 S $P(MAXTW,U,$S(SCH="REG":1,SCH="MED":2,1:3))=TOURLEN
"RTN","PRSATPTW",90,0)
 I TOUR2LEN>0 S $P(MAXTW,U,3)=+$P(MAXTW,U,3)+TOUR2LEN
"RTN","PRSATPTW",91,0)
 ;
"RTN","PRSATPTW",92,0)
 ; only worked tour, no exceptions, so MAXTW is tour length
"RTN","PRSATPTW",93,0)
 ;
"RTN","PRSATPTW",94,0)
 Q:POSTTYPE=1 MAXTW
"RTN","PRSATPTW",95,0)
 ;
"RTN","PRSATPTW",96,0)
 ; else we need to count up exceptions. OT and CT can only be ad hoc.
"RTN","PRSATPTW",97,0)
 ;
"RTN","PRSATPTW",98,0)
 N ADHOC,SUBTOT,TSEG
"RTN","PRSATPTW",99,0)
 S TCN=$G(^PRST(458,PPI,"E",PRSIEN,"D",PRSD,2))
"RTN","PRSATPTW",100,0)
 S ADHOC="^CT^OT^RG^"
"RTN","PRSATPTW",101,0)
 ;
"RTN","PRSATPTW",102,0)
 ; for following non work types of time in exceptions, subtract from total available TW
"RTN","PRSATPTW",103,0)
 ; ^AA^AD^AL^CB^CP^CU^DL^HX^ML^NL^NP^RL^RS^SL^TR^TV^UN^"
"RTN","PRSATPTW",104,0)
 ;
"RTN","PRSATPTW",105,0)
 N I F I=1:4:24 D
"RTN","PRSATPTW",106,0)
 .   S TSEG=$P(TCN,U,I,I+3)
"RTN","PRSATPTW",107,0)
 .   S TT=$P(TSEG,U,3)
"RTN","PRSATPTW",108,0)
 .   Q:TT=""!("^ON^SB^HW^"[(U_TT_U))
"RTN","PRSATPTW",109,0)
 .   S TRC=$P(TSEG,U,4)
"RTN","PRSATPTW",110,0)
 .   S BEG=$P(TSEG,U)
"RTN","PRSATPTW",111,0)
 .   S END=$P(TSEG,U,2)
"RTN","PRSATPTW",112,0)
 .   S SEGHRS=$$AMT^PRSPSAPU(BEG,END,0)
"RTN","PRSATPTW",113,0)
 .   I ADHOC[(U_TT_U) D
"RTN","PRSATPTW",114,0)
 ..     S $P(MAXTW,U,3)=$P(MAXTW,U,3)+SEGHRS
"RTN","PRSATPTW",115,0)
 .   E  D
"RTN","PRSATPTW",116,0)
 ..     S SUBTOT=$P(MAXTW,U,$S(SCH="REG":1,SCH="MED":2,1:3))
"RTN","PRSATPTW",117,0)
 ..     S $P(MAXTW,U,$S(SCH="REG":1,SCH="MED":2,1:3))=SUBTOT-SEGHRS
"RTN","PRSATPTW",118,0)
  ;
"RTN","PRSATPTW",119,0)
 Q MAXTW
"RTN","PRSATPTW",120,0)
 ;
"RTN","PRSATPTW",121,0)
ASKTWHRS(ACTUALTW,MAXTW,OLDTWHRS,SCH) ;
"RTN","PRSATPTW",122,0)
 ;INPUT:
"RTN","PRSATPTW",123,0)
 ;
"RTN","PRSATPTW",124,0)
 ;RETURN:
"RTN","PRSATPTW",125,0)
 ; ACTUALTW = 3 piece string ^ delimiter TW SCH hrs^TW Med Hrs^TW Adhoc
"RTN","PRSATPTW",126,0)
 ;
"RTN","PRSATPTW",127,0)
 S ACTUALTW="0^0^0"
"RTN","PRSATPTW",128,0)
 N ADHOCTYP,THISMTW,THISACT,TWTYPEI
"RTN","PRSATPTW",129,0)
 F TWTYPEI=1:1:3 D
"RTN","PRSATPTW",130,0)
 .  S THISMTW=$P(MAXTW,U,TWTYPEI)
"RTN","PRSATPTW",131,0)
 .  Q:THISMTW'>0
"RTN","PRSATPTW",132,0)
 .  S THISACT=$$GETTWHRS(THISMTW,TWTYPEI,OLDTWHRS,SCH)
"RTN","PRSATPTW",133,0)
 .  I THISACT<0 D  Q
"RTN","PRSATPTW",134,0)
 ..    S THISACT=+$P($G(OLDTWHRS),U,TWTYPEI)
"RTN","PRSATPTW",135,0)
 ..    S $P(ACTUALTW,U,TWTYPEI)=THISACT
"RTN","PRSATPTW",136,0)
 .; for ad hoc-ask if it is ad hod regular or ad hoc medical
"RTN","PRSATPTW",137,0)
 .  I TWTYPEI=3&(THISACT>0) D
"RTN","PRSATPTW",138,0)
 ..    S ADHOCTYP=$$GETTYPE()
"RTN","PRSATPTW",139,0)
 ..    Q:"AM"'[ADHOCTYP
"RTN","PRSATPTW",140,0)
 ..; might be adding adhoc medical to scheduled medical
"RTN","PRSATPTW",141,0)
 ..    S $P(ACTUALTW,U,$S(ADHOCTYP="M":2,1:3))=$P(ACTUALTW,U,$S(ADHOCTYP="M":2,1:3))+THISACT
"RTN","PRSATPTW",142,0)
 .  E  D
"RTN","PRSATPTW",143,0)
 ..    S $P(ACTUALTW,U,TWTYPEI)=THISACT
"RTN","PRSATPTW",144,0)
 Q
"RTN","PRSATPTW",145,0)
 ;
"RTN","PRSATPTW",146,0)
GETTWHRS(MAX,TT,OLDTWHRS,SCH) ;
"RTN","PRSATPTW",147,0)
 ;
"RTN","PRSATPTW",148,0)
 N X,Y,DIR,TWTYPE,THISOLDTW
"RTN","PRSATPTW",149,0)
 S TWTYPE=$S(TT=1:"Regular Scheduled",TT=2:"Medical Scheduled",1:"Ad Hoc")
"RTN","PRSATPTW",150,0)
 S DIR("A")="Enter Any "_TWTYPE_" Telework Hours"
"RTN","PRSATPTW",151,0)
 S DIR(0)="N^0"_":"_MAX_":"_2_U_"K:(X#.25) X"
"RTN","PRSATPTW",152,0)
 S DIR("?")="Telework hours must be less than or equal to the amount of work posted."
"RTN","PRSATPTW",153,0)
 S DIR("?",1)="Enter telework hours less than or equal to "_MAX_" in quarter hours."
"RTN","PRSATPTW",154,0)
 S DIR("??")="PRSA ENTER TW^"
"RTN","PRSATPTW",155,0)
 S THISOLDTW=+$P(OLDTWHRS,U,TT)
"RTN","PRSATPTW",156,0)
 I THISOLDTW>0 D
"RTN","PRSATPTW",157,0)
 .  I THISOLDTW'>MAX D
"RTN","PRSATPTW",158,0)
 ..    S DIR("B")=$S(TT<3:MAX,1:THISOLDTW)
"RTN","PRSATPTW",159,0)
 .  E  D
"RTN","PRSATPTW",160,0)
 ..; thisoldtw > max
"RTN","PRSATPTW",161,0)
 ..    S DIR("B")=+MAX
"RTN","PRSATPTW",162,0)
 E  D
"RTN","PRSATPTW",163,0)
 .  S DIR("B")=$S(TT<3:+MAX,1:0)
"RTN","PRSATPTW",164,0)
 ;
"RTN","PRSATPTW",165,0)
 ; special case for Ad hoc telework stored as medical
"RTN","PRSATPTW",166,0)
 I ($G(DIR("B"))'>0)&(TT=3)&(SCH'="MED")&(SCH'="REG") D
"RTN","PRSATPTW",167,0)
 .  S DIR("B")=+$P(OLDTWHRS,U,2)
"RTN","PRSATPTW",168,0)
 ;
"RTN","PRSATPTW",169,0)
 D ^DIR
"RTN","PRSATPTW",170,0)
 I $D(DIRUT) Q -1
"RTN","PRSATPTW",171,0)
 Q Y
"RTN","PRSATPTW",172,0)
 ;
"RTN","PRSATPTW",173,0)
 ;
"RTN","PRSATPTW",174,0)
GETTYPE() ;
"RTN","PRSATPTW",175,0)
 ;  Prompt for type of additional telework
"RTN","PRSATPTW",176,0)
 N X,Y,DIR
"RTN","PRSATPTW",177,0)
 S DIR("A")="Type of Telework? "
"RTN","PRSATPTW",178,0)
 S DIR(0)="SAB^A:Ad Hoc;M:Medical"
"RTN","PRSATPTW",179,0)
 S DIR("B")="A"
"RTN","PRSATPTW",180,0)
 D ^DIR
"RTN","PRSATPTW",181,0)
 I $D(DIRUT) Q -1
"RTN","PRSATPTW",182,0)
 Q Y
"RTN","PRSATPTW",183,0)
 ;
"RTN","PRSATPTW",184,0)
TWDAY(SCH) ;
"RTN","PRSATPTW",185,0)
 ; input: SCH - is the daily employee scheduled for Medical or regular
"RTN","PRSATPTW",186,0)
 ; output: ACTUALTW- return piece positional telework type--
"RTN","PRSATPTW",187,0)
 ;                  piece 1 = 1 if medical telework
"RTN","PRSATPTW",188,0)
 ;                   ''   2 = 1 if regular scheduled
"RTN","PRSATPTW",189,0)
 ;                   ''   3 = 1 if ad hoc situational
"RTN","PRSATPTW",190,0)
 ;
"RTN","PRSATPTW",191,0)
 ;  Prompt daily tour employees 
"RTN","PRSATPTW",192,0)
 N X,Y,DIR,ACTUALTW,TWLENGTH,TYPE
"RTN","PRSATPTW",193,0)
 S ACTUALTW="0^0^0"
"RTN","PRSATPTW",194,0)
 S TYPE=$S(SCH="MED":"Medical",SCH="REG":"Regular",1:"Ad Hoc")
"RTN","PRSATPTW",195,0)
 ;
"RTN","PRSATPTW",196,0)
 I SCH="MED"!(SCH="REG") D
"RTN","PRSATPTW",197,0)
 .   S DIR("A")="Did Employee Perform "_TYPE_" Telework"
"RTN","PRSATPTW",198,0)
 E  D
"RTN","PRSATPTW",199,0)
 .  S DIR("A")="Did Employee Perform Telework"
"RTN","PRSATPTW",200,0)
 ;
"RTN","PRSATPTW",201,0)
 S DIR(0)="Y"
"RTN","PRSATPTW",202,0)
 S DIR("B")=$S(SCH'="":"Y",1:"N")
"RTN","PRSATPTW",203,0)
 D ^DIR
"RTN","PRSATPTW",204,0)
 S TWLENGTH=+Y
"RTN","PRSATPTW",205,0)
 Q:$D(DIRUT) -1
"RTN","PRSATPTW",206,0)
 Q:TWLENGTH'=1 ACTUALTW
"RTN","PRSATPTW",207,0)
 ;
"RTN","PRSATPTW",208,0)
 I TYPE="Ad Hoc" D  Q ACTUALTW
"RTN","PRSATPTW",209,0)
 .  S ADHOCTYP=$$GETTYPE()
"RTN","PRSATPTW",210,0)
 .  I "AM"'[ADHOCTYP Q
"RTN","PRSATPTW",211,0)
 .  S $P(ACTUALTW,U,$S(ADHOCTYP="M":2,1:3))=TWLENGTH
"RTN","PRSATPTW",212,0)
 S $P(ACTUALTW,U,$S(SCH="MED":2,SCH="REG":1,1:3))=TWLENGTH
"RTN","PRSATPTW",213,0)
 Q ACTUALTW
"RTN","PRSATPTW",214,0)
 ;
"RTN","PRSATPTW",215,0)
CLEANTW(PPI,PRSIEN,PRSD) ; remove any telework hours, leave any scheduled tw.
"RTN","PRSATPTW",216,0)
 N IENS,FDA
"RTN","PRSATPTW",217,0)
 S IENS=PRSD_","_PRSIEN_","_PPI_","
"RTN","PRSATPTW",218,0)
 S FDA(458.02,IENS,71)="@"
"RTN","PRSATPTW",219,0)
 S FDA(458.02,IENS,72)="@"
"RTN","PRSATPTW",220,0)
 S FDA(458.02,IENS,73)="@"
"RTN","PRSATPTW",221,0)
 D UPDATE^DIE("","FDA","IENS"),MSG^DIALOG()
"RTN","PRSATPTW",222,0)
 Q
"RTN","PRSATPTW",223,0)
STORETW(PPI,PRSIEN,PRSD,ACTUALTW) ;
"RTN","PRSATPTW",224,0)
 ;    store telework in node 8 of the "D" (daily) subnode.
"RTN","PRSATPTW",225,0)
 ;
"RTN","PRSATPTW",226,0)
 ;S $P(^PRST(458,PPI,"E",PRSIEN,"D",PRSD,8),U,2,4)=ACTUALTW
"RTN","PRSATPTW",227,0)
 N IENS,FDA
"RTN","PRSATPTW",228,0)
 S IENS=PRSD_","_PRSIEN_","_PPI_","
"RTN","PRSATPTW",229,0)
 S FDA(458.02,IENS,71)=+$P(ACTUALTW,U)
"RTN","PRSATPTW",230,0)
 S FDA(458.02,IENS,72)=+$P(ACTUALTW,U,2)
"RTN","PRSATPTW",231,0)
 S FDA(458.02,IENS,73)=+$P(ACTUALTW,U,3)
"RTN","PRSATPTW",232,0)
 D UPDATE^DIE("","FDA","IENS"),MSG^DIALOG()
"RTN","PRSATPTW",233,0)
 Q
"RTN","PRSAUD")
0^22^B2443135^B2443115
"RTN","PRSAUD",1,0)
PRSAUD ; HISC/REL-File Audit Record ;8/30/95  09:48
"RTN","PRSAUD",2,0)
 ;;4.0;PAID;**132**;Sep 21, 1995;Build 13
"RTN","PRSAUD",3,0)
 I AUT'="H" S DIR(0)="F^3:60",DIR("A")="Corrected Time Card Remarks" W ! D ^DIR S AUR(7)=Y I Y["^" W !!,"Abort.  Correction is not being filed." Q
"RTN","PRSAUD",4,0)
 I '$D(^PRST(458,PPI,"E",DFN,"X")) S ^PRST(458,PPI,"E",DFN,"X",0)="^458.1101A^^"
"RTN","PRSAUD",5,0)
 L +^PRST(458,PPI,"E",DFN,"X",0) S AUN=$P(^PRST(458,PPI,"E",DFN,"X",0),"^",3)+1,$P(^(0),"^",3,4)=AUN_"^"_AUN L -^PRST(458,PPI,"E",DFN,"X",0)
"RTN","PRSAUD",6,0)
 S ^PRST(458,PPI,"E",DFN,"X",AUN,0)=AUN_"^"_NOW_"^"_DUZ_"^"_AUT_"^"_AUS
"RTN","PRSAUD",7,0)
 F AUDN=1:1:8 I $D(AUR(AUDN)) S ^PRST(458,PPI,"E",DFN,"X",AUN,AUDN)=AUR(AUDN)
"RTN","PRSAUD",8,0)
 S:"ARS"[AUS ^PRST(458,"AX"_AUS,DFN,PPI,AUN)="" D UPD^PRSASAL:AUS="R",APP^PRSASAL:AUS="S"
"RTN","PRSAUD",9,0)
 K AUDN,AUN,AUT,AUR,AUS Q
"RTN","PRSAUDP")
0^23^B10198895^B9116588
"RTN","PRSAUDP",1,0)
PRSAUDP ; WOIFO/DWA - Display Employee Pay Period Audit Data ;12/3/07
"RTN","PRSAUDP",2,0)
 ;;4.0;PAID;**116,132**;Sep 21, 1995;Build 13
"RTN","PRSAUDP",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSAUDP",4,0)
 ;called by PRSADP2
"RTN","PRSAUDP",5,0)
 D RET Q:QT
"RTN","PRSAUDP",6,0)
 S STATYPE=$P(^DD(458.1101,4,0),"^",3),PRSTW=$$TWE^PRSATE0(DFN,$S($G(PPI)]"":PPI,1:""))
"RTN","PRSAUDP",7,0)
 S PG=PG+1,X=$G(^PRSPC(DFN,0)) W @IOF,!,?3,$P(X,U,1),?45,"Telework Ind. ",$S($P(PRSTW,U,3)]"":$P(PRSTW,U,3),$P(PRSTW,U)]""&($G(PPI)=""):$P(PRSTW,U),1:"None") S X=$P(X,U,9)
"RTN","PRSAUDP",8,0)
 I '$G(PRSTLV)!($G(PRSTLV)=1) W ?68,"XXX-XX-",$E(X,6,9)
"RTN","PRSAUDP",9,0)
 I $G(PRSTLV)=2!($G(PRSTLV)=3) W ?68,$E(X),"XX-XX-",$E(X,6,9)
"RTN","PRSAUDP",10,0)
 I $G(PRSTLV)=7 W ?68,$E(X,1,3),"-",$E(X,4,5),"-",$E(X,6,9)
"RTN","PRSAUDP",11,0)
 W !,?26,"Corrected  T&A  History",!!
"RTN","PRSAUDP",12,0)
AUN S AUN=0 F  S AUN=$O(^PRST(458,PPI,"E",DFN,"X",AUN)) Q:AUN=""!(QT=1)  D B
"RTN","PRSAUDP",13,0)
 W @IOF
"RTN","PRSAUDP",14,0)
EX K AUN,AX0,B,CA,CB,CC,CD,DAY,DB,DISP,DTE,IFN,J,TYP,X,STATYPE,STATUS,LNE,DFN,AUR,PRSTW
"RTN","PRSAUDP",15,0)
 Q
"RTN","PRSAUDP",16,0)
B S B=-1 S B=$O(^PRST(458,PPI,"E",DFN,"X",AUN,B)) Q:B=""!(QT=1)  S AX0=$G(^(B))
"RTN","PRSAUDP",17,0)
 F CA=1:1:11 S AX0(CA)=$P(AX0,U,CA)
"RTN","PRSAUDP",18,0)
 S STDT="" F CB=2,11,9,7 S Y=AX0(CB) D DTP S AX0(CB)=Y S:Y'="" STDT=Y K Y ;date/time(s)
"RTN","PRSAUDP",19,0)
 F CC=3,6,8,10 I AX0(CC)]"" I $D(^VA(200,AX0(CC),0)) S AX0(CC)=$P(^VA(200,AX0(CC),0),U,1) ;names
"RTN","PRSAUDP",20,0)
 S TYP=AX0(4),LNE="" S $P(LNE,"-",80)="" S STATUS=$P($P(STATYPE,AX0(5)_":",2),";",1)
"RTN","PRSAUDP",21,0)
 Q:TYP'?1U  Q:"TVH"'[TYP  D @TYP
"RTN","PRSAUDP",22,0)
 I $D(^PRST(458,PPI,"E",DFN,"X",AUN,7)) W !!,"Change Remarks: ",^(7)
"RTN","PRSAUDP",23,0)
 D RET Q
"RTN","PRSAUDP",24,0)
RET I $E(IOST,1,2)="C-" R !!,"Press RETURN to Continue.",X:DTIME S:'$T!(X[U) QT=1 W @IOF
"RTN","PRSAUDP",25,0)
 Q
"RTN","PRSAUDP",26,0)
T ;Time/Tour Change
"RTN","PRSAUDP",27,0)
 W !,"Status: ",STATUS,?29,"* * * Prior Data * * *",?58,STDT S IFN=AUN S DAY=$P($G(^PRST(458,PPI,"E",DFN,"X",IFN,1)),"^",1),DTE=$P($G(^PRST(458,PPI,2)),"^",+DAY) D GET^PRSAPPP,DIS^PRSAPPQ
"RTN","PRSAUDP",28,0)
 W !!?27,"* * * Corrected Data * * *" S IFN=AUN+1 D GET^PRSAPPP,DIS^PRSAPPQ W !,LNE,!
"RTN","PRSAUDP",29,0)
 Q
"RTN","PRSAUDP",30,0)
V ;VCS Sales Change
"RTN","PRSAUDP",31,0)
 W !,"Status: ",STATUS,?29,"* * * Prior Data * * *",?58,STDT S IFN=AUN D GET^PRSAPPP S Z=AUR(1) D VCS^PRSAPPQ
"RTN","PRSAUDP",32,0)
 W !!?27,"* * * Corrected Data * * *" S IFN=AUN+1 D GET^PRSAPPP S Z=AUR(1) D VCS^PRSAPPQ W !,LNE,!
"RTN","PRSAUDP",33,0)
 Q
"RTN","PRSAUDP",34,0)
H ;Hazard Change
"RTN","PRSAUDP",35,0)
 W !,"Status: ",STATUS,?29,"* * * Prior Data * * *",?58,STDT S IFN=AUN D GET^PRSAPPP S Z=AUR(1) D ED^PRSAPPQ
"RTN","PRSAUDP",36,0)
 W !!?27,"* * * Corrected Data * * *" S IFN=AUN+1 D GET^PRSAPPP S Z=AUR(1) D ED^PRSAPPQ W !,LNE,!
"RTN","PRSAUDP",37,0)
 Q
"RTN","PRSAUDP",38,0)
DTP ; Printable Date/Time
"RTN","PRSAUDP",39,0)
 Q:'Y  S %=Y,Y=$J(+$E(Y,6,7),2)_"-"_$P("Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec"," ",+$E(Y,4,5))_"-"_$E(Y,2,3)
"RTN","PRSAUDP",40,0)
 S:%#1 %=+$E(%_"0",9,10)_"^"_$E(%_"000",11,12),Y=Y_$J($S(%>12:%-12,1:+%),3)_":"_$P(%,"^",2)_$S(%<12:"am",%<24:"pm",1:"m") K % Q
"RTN","PRSDEU14")
0^24^B15099553^B14488537
"RTN","PRSDEU14",1,0)
PRSDEU14 ;HISC/MGD-PAID EDIT AND UPDATE DOWNLOAD RECORD 14 LAYOUT ;08/26/2003
"RTN","PRSDEU14",2,0)
 ;;4.0;PAID;**78,82,132**;Sep 21, 1995;Build 13
"RTN","PRSDEU14",3,0)
 F CC=1:1 S GRP=$T(@CC) Q:GRP=""  S GRPVAL=$P(RCD,":",CC) I GRPVAL'="" S GNUM=$P(GRP,";",4),LTH=$P(GRP,";",5),PIC=$P(GRP,";",6) D:PIC=9 PIC9^PRSDUTIL F EE=1:1:GNUM S FLD=$T(@CC+EE) D EPTSET^PRSDSET
"RTN","PRSDEU14",4,0)
 Q
"RTN","PRSDEU14",5,0)
 ; The RECORD line tag shows represents ;; Record #;# of Groups
"RTN","PRSDEU14",6,0)
 ;
"RTN","PRSDEU14",7,0)
 ; The Groups are defined as follows:
"RTN","PRSDEU14",8,0)
 ;
"RTN","PRSDEU14",9,0)
 ; Line Tag      ;;3;4;5;6
"RTN","PRSDEU14",10,0)
 ;
"RTN","PRSDEU14",11,0)
 ; Where piece
"RTN","PRSDEU14",12,0)
 ;       3 = The Group number withing the Record.  Each Record is an
"RTN","PRSDEU14",13,0)
 ;            individual line in the ^XMB(3.9 mail global.
"RTN","PRSDEU14",14,0)
 ;       4 = The number of fields in the group
"RTN","PRSDEU14",15,0)
 ;       5 = The number of bytes in the group
"RTN","PRSDEU14",16,0)
 ;       6 = Special formatting information
"RTN","PRSDEU14",17,0)
 ; 
"RTN","PRSDEU14",18,0)
 ; Each individual line under the numeric line tag represents the
"RTN","PRSDEU14",19,0)
 ; following:
"RTN","PRSDEU14",20,0)
 ;
"RTN","PRSDEU14",21,0)
 ; Where piece
"RTN","PRSDEU14",22,0)
 ;       3 = The Central PAID field name
"RTN","PRSDEU14",23,0)
 ;       4 = VistA PAID/ETA field name
"RTN","PRSDEU14",24,0)
 ;       5 = Starting Byte
"RTN","PRSDEU14",25,0)
 ;       6 = Ending Byte
"RTN","PRSDEU14",26,0)
 ;       7 = Node in PAID EMPLOYEE (#450)
"RTN","PRSDEU14",27,0)
 ;       8 = Piece within the Node in #450
"RTN","PRSDEU14",28,0)
 ;       9 = Formatting information
"RTN","PRSDEU14",29,0)
 ;      10 = Node in PAID PAYRUN DATA (#459)
"RTN","PRSDEU14",30,0)
 ;      11 = Piece within the Node in #459
"RTN","PRSDEU14",31,0)
 ;      12 = Field # within #459
"RTN","PRSDEU14",32,0)
 ;
"RTN","PRSDEU14",33,0)
RECORD ;;Record 13;21
"RTN","PRSDEU14",34,0)
 ;;
"RTN","PRSDEU14",35,0)
1 ;;Group 1;1;23;X
"RTN","PRSDEU14",36,0)
 ;;SBONDS-ADDR-LINE1-4;SAVINGS BOND-4 ADD LINE-1;1;23;BOND4;1;;;;735
"RTN","PRSDEU14",37,0)
 ;;
"RTN","PRSDEU14",38,0)
2 ;;Group 2;1;23;X
"RTN","PRSDEU14",39,0)
 ;;SBONDS-ADDR-LINE2-4;SAVINGS BOND-4 ADD LINE-2;1;23;BOND4;2;;;;736
"RTN","PRSDEU14",40,0)
 ;;
"RTN","PRSDEU14",41,0)
3 ;;Group 3;1;16;X
"RTN","PRSDEU14",42,0)
 ;;SBONDS-ADDR-LINE3-4;SAVINGS BOND-4 ADD LINE-3;1;16;BOND4;3;;;;737
"RTN","PRSDEU14",43,0)
 ;;
"RTN","PRSDEU14",44,0)
4 ;;Group 4;1;9;X
"RTN","PRSDEU14",45,0)
 ;;SBONDS-COST-4;BOND BALANCE - NOT USED;1;9;;;;;;
"RTN","PRSDEU14",46,0)
 ;;
"RTN","PRSDEU14",47,0)
5 ;;Group 5;1;1;X
"RTN","PRSDEU14",48,0)
 ;;SBONDS-BENE-CODE-4;SAVINGS BOND-4 BENE CODE;1;1;BOND4;5;;;;739
"RTN","PRSDEU14",49,0)
 ;;
"RTN","PRSDEU14",50,0)
6 ;;Group 6;1;28;X
"RTN","PRSDEU14",51,0)
 ;;SBONDS-COOWNER-4;SAVINGS BOND-4 CO-OWNER;1;28;BOND4;6;;;;740
"RTN","PRSDEU14",52,0)
 ;;
"RTN","PRSDEU14",53,0)
7 ;;Group 7;1;9;X
"RTN","PRSDEU14",54,0)
 ;;SBONDS-COOWNER-SSN-4;SAVINGS BOND-4 CO-OWNER SSN;1;9;BOND4;7;;;;741
"RTN","PRSDEU14",55,0)
 ;;
"RTN","PRSDEU14",56,0)
8 ;;Group 8;1;7;9
"RTN","PRSDEU14",57,0)
 ;;SBONDS-DED-BAL-4;SAVINGS BOND-4 DED BALANCE;1;7;BOND4;8;D SIGN^PRSDUTIL,DD^PRSDUTIL;;;742
"RTN","PRSDEU14",58,0)
 ;;
"RTN","PRSDEU14",59,0)
9 ;;Group 9;1;7;9
"RTN","PRSDEU14",60,0)
 ;;SBONDS-DED-PAY-PERIOD-4;SAVINGS BOND-4 DED EPPD;1;7;BOND4;9;D SIGN^PRSDUTIL,DD^PRSDUTIL;;;743
"RTN","PRSDEU14",61,0)
 ;;
"RTN","PRSDEU14",62,0)
10 ;;Group 10;1;1;X
"RTN","PRSDEU14",63,0)
 ;;SBONDS-DENOM-4;SAVINGS BOND-4 DENOMINATION;1;1;BOND4;10;;;;744
"RTN","PRSDEU14",64,0)
 ;;
"RTN","PRSDEU14",65,0)
11 ;;Group 11;1;6;
"RTN","PRSDEU14",66,0)
 ;;SBONDS-EFFT-DATE-4;SAVINGS BOND-4 EFFECTIVE DATE;1;6;BOND4;11;S:DATA'="" DATA=DATA_"01" D DATE^PRSDUTIL;;;745
"RTN","PRSDEU14",67,0)
 ;;
"RTN","PRSDEU14",68,0)
12 ;;Group 12;1;32;X
"RTN","PRSDEU14",69,0)
 ;;SBONDS-OWNER-4;SAVINGS BOND-4 OWNER;1;32;BOND4;12;;;;746
"RTN","PRSDEU14",70,0)
 ;;
"RTN","PRSDEU14",71,0)
13 ;;Group 13;1;9;X
"RTN","PRSDEU14",72,0)
 ;;SBONDS-OWNER-SSN-4;SAVINGS BOND-4 OWNER SSN;1;9;BOND4;13;;;;747
"RTN","PRSDEU14",73,0)
 ;;
"RTN","PRSDEU14",74,0)
14 ;;Group 14;1;9;9
"RTN","PRSDEU14",75,0)
 ;;SBONDS-ZIP-CODE-4;SAVINGS BOND-4 ZIP CODE;1;9;BOND4;14;D ZIP^PRSDUTIL;;;748
"RTN","PRSDEU14",76,0)
 ;;
"RTN","PRSDEU14",77,0)
15 ;;Group 15;1;1;
"RTN","PRSDEU14",78,0)
 ;;SBONDS-TYPE-4;SAVINGS BOND-4 TYPE;1;1;BOND4;15;;;;749
"RTN","PRSDEU14",79,0)
 ;;
"RTN","PRSDEU14",80,0)
16 ;;Group 16;1;7;9
"RTN","PRSDEU14",81,0)
 ;;MIB1BAL;SAVINGS BOND-1 DED BALANCE;1;7;BOND1;9;D SIGN^PRSDUTIL,DD^PRSDUTIL;;;351
"RTN","PRSDEU14",82,0)
 ;;
"RTN","PRSDEU14",83,0)
17 ;;Group 17;1;7;9
"RTN","PRSDEU14",84,0)
 ;;MKB2BAL;SAVINGS BOND-2 DED BALANCE;1;7;BOND2;8;D SIGN^PRSDUTIL,DD^PRSDUTIL;;;365
"RTN","PRSDEU14",85,0)
 ;;
"RTN","PRSDEU14",86,0)
18 ;;Group 18;1;5;9
"RTN","PRSDEU14",87,0)
 ;;VOL-ALLOT-AMT-3;VOLUNTARY ALLOTMENT-3 AMT;1;5;VALLOT;6;D SIGN^PRSDUTIL S DATA=+DATA;;;439.1
"RTN","PRSDEU14",88,0)
 ;;
"RTN","PRSDEU14",89,0)
19 ;;Group 19;1;4;9
"RTN","PRSDEU14",90,0)
 ;;VOL-ALLOT-CNTL-3;VOLUNTARY ALLOTMENT-3 CTRL NO;1;4;VALLOT;7;;;;439.2
"RTN","PRSDEU14",91,0)
 ;;
"RTN","PRSDEU14",92,0)
20 ;;Group 20;1;5;9
"RTN","PRSDEU14",93,0)
 ;;VOL-ALLOT-AMT-4;VOLUNTARY ALLOTMENT-4 AMT;1;5;VALLOT;8;D SIGN^PRSDUTIL S DATA=+DATA;;;439.3
"RTN","PRSDEU14",94,0)
 ;;
"RTN","PRSDEU14",95,0)
21 ;;Group 21;1;4;9
"RTN","PRSDEU14",96,0)
 ;;VOL-ALLOT-CNTL-4;VOLUNTARY ALLOTMENT-4 CTRL NO;1;4;VALLOT;9;;;;439.4
"RTN","PRSDEU14",97,0)
 ;;
"RTN","PRSDEU14",98,0)
22 ;;GROUP 22;1;1;X
"RTN","PRSDEU14",99,0)
 ;;TELEWORK INDICATOR;TELEWORK INDICATOR;1;1;1;45;;;;634
"RTN","PRSDEU14",100,0)
 ;;
"RTN","PRSDLD19")
0^25^B5705805^B5514367
"RTN","PRSDLD19",1,0)
PRSDLD19 ;HISC/MGD-PAID INITIAL DOWNLOAD RECORD 19 LAYOUT ;08/26/2003
"RTN","PRSDLD19",2,0)
 ;;4.0;PAID;**78,82,132**;Sep 21, 1995;Build 13
"RTN","PRSDLD19",3,0)
 F CC=1:1 S FLD=$T(RECORD+CC) Q:FLD=""  D LDSET^PRSDSET
"RTN","PRSDLD19",4,0)
 Q
"RTN","PRSDLD19",5,0)
RECORD ;;Record 19;20
"RTN","PRSDLD19",6,0)
 ;;SBONDS-ADDR-LINE1-4;SAVINGS BOND-4 ADD LINE-1;BOND4;1;;;;;;735
"RTN","PRSDLD19",7,0)
 ;;SBONDS-ADDR-LINE2-4;SAVINGS BOND-4 ADD LINE-2;BOND4;2;;;;;;736
"RTN","PRSDLD19",8,0)
 ;;SBONDS-ADDR-LINE3-4;SAVINGS BOND-4 ADD LINE-3;BOND4;3;;;;;;737
"RTN","PRSDLD19",9,0)
 ;;SBONDS-COST-4;SAVINGS BOND-4 BALANCE;BOND4;4;D SIGN^PRSDUTIL,DD^PRSDUTIL;;;;;738
"RTN","PRSDLD19",10,0)
 ;;SBONDS-BENE-CODE-4;SAVINGS BOND-4 BENE CODE;BOND4;5;;;;;;739
"RTN","PRSDLD19",11,0)
 ;;SBONDS-COOWNER-4;SAVINGS BOND-4 CO-OWNER;BOND4;6;;;;;;740
"RTN","PRSDLD19",12,0)
 ;;SBONDS-COOWNER-SSN-4;SAVINGS BOND-4 CO-OWNER SSN;BOND4;7;;;;;;741
"RTN","PRSDLD19",13,0)
 ;;SBONDS-DED-BAL-4;SAVINGS BOND-4 DED BALANCE;BOND4;8;D SIGN^PRSDUTIL,DD^PRSDUTIL;;;;;742
"RTN","PRSDLD19",14,0)
 ;;SBONDS-DED-PAY-PERIOD-4;SAVINGS BOND-4 DED EPPD;BOND4;9;D SIGN^PRSDUTIL,DD^PRSDUTIL;;;;;743
"RTN","PRSDLD19",15,0)
 ;;SBONDS-DENOM-4;SAVINGS BOND-4 DENOMINATION;BOND4;10;;;;;;744
"RTN","PRSDLD19",16,0)
 ;;SBONDS-EFFT-DATE-4;SAVINGS BOND-4 EFFECTIVE DATE;BOND4;11;S:DATA'="" DATA=DATA_"01" D DATE^PRSDUTIL;;;;;745
"RTN","PRSDLD19",17,0)
 ;;SBONDS-OWNER-4;SAVINGS BOND-4 OWNER;BOND4;12;;;;;;746
"RTN","PRSDLD19",18,0)
 ;;SBONDS-OWNER-SSN-4;SAVINGS BOND-4 OWNER SSN;BOND4;13;;;;;;747
"RTN","PRSDLD19",19,0)
 ;;SBONDS-ZIP-CODE-4;SAVINGS BOND-4 ZIP CODE;BOND4;14;D ZIP^PRSDUTIL;;;;;748
"RTN","PRSDLD19",20,0)
 ;;SBONDS-TYPE-4;SAVINGS BOND-4 TYPE BOND;BOND4;15;;;;;;749
"RTN","PRSDLD19",21,0)
 ;;VOL-ALLOT-AMT-3;VOLUNTARY ALLOTMENT-3 AMT;VALLOT;6;D SIGN^PRSDUTIL S DATA=+DATA;;;;;439.1
"RTN","PRSDLD19",22,0)
 ;;VOL-ALLOT-CNTL-3;VOLUNTARY ALLOTMENT-3 CTRL NO;VALLOT;7;;;;;;439.2
"RTN","PRSDLD19",23,0)
 ;;VOL-ALLOT-AMT-4;VOLUNTARY ALLOTMENT-4 AMT;VALLOT;8;D SIGN^PRSDUTIL S DATA=+DATA;;;;;439.3
"RTN","PRSDLD19",24,0)
 ;;VOL-ALLOT-CNTL-4;VOLUNTARY ALLOTMENT-4 CTRL NO;VALLOT;9;;;;;;439.4
"RTN","PRSDLD19",25,0)
 ;;TRAVEL-AWARD;TRAVEL SAVINGS AWARD;AWARDS;5;D SIGN^PRSDUTIL,DD^PRSDUTIL;;;;;587.2
"RTN","PRSDLD19",26,0)
 ;;TELEWORK INDICATOR;TELEWORK INDICATOR;1;45;;;;;;634
"RTN","PRSDSRS")
0^26^B20598813^B20527768
"RTN","PRSDSRS",1,0)
PRSDSRS ;HISC/GWB-SERVICE RECORD SCREEN ;2/8/95  14:14
"RTN","PRSDSRS",2,0)
 ;;4.0;PAID;**114,100,132**;Sep 21, 1995;Build 13
"RTN","PRSDSRS",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSDSRS",4,0)
 ;
"RTN","PRSDSRS",5,0)
EMP S DA="",SSN=$P($G(^VA(200,DUZ,1)),"^",9)
"RTN","PRSDSRS",6,0)
 I SSN'="" S DA=$O(^PRSPC("SSN",SSN,0))
"RTN","PRSDSRS",7,0)
 I 'DA W !!,*7,"Your SSN was not found in both the New Person & Employee File!" G EX
"RTN","PRSDSRS",8,0)
START D WAIT^DICD
"RTN","PRSDSRS",9,0)
 K DASHES S $P(DASHES,"-",80)="-"
"RTN","PRSDSRS",10,0)
 S ZERO=^PRSPC(DA,0)
"RTN","PRSDSRS",11,0)
 S NAME=$P(ZERO,U,1),STATION=$P(ZERO,U,7),TLU=$P(ZERO,U,8)
"RTN","PRSDSRS",12,0)
 S SSN=$P(ZERO,U,9),SSN=$E(SSN,1,3)_"-"_$E(SSN,4,5)_"-"_$E(SSN,6,9)
"RTN","PRSDSRS",13,0)
 S Y=$P(ZERO,U,49) X ^DD(450,458,2.1) S CCORG=Y
"RTN","PRSDSRS",14,0)
 S DS=$P($G(^PRSPC(DA,1)),U,42),LPP=$P($G(^PRSPC(DA,"MISC4")),U,16)
"RTN","PRSDSRS",15,0)
 D ^PRSDYTD
"RTN","PRSDSRS",16,0)
SRS S CATEGORY="SERVICE RECORD SCREEN",PAGE=0
"RTN","PRSDSRS",17,0)
 K ^UTILITY("DIQ1",$J) S DIC="^PRSPC("
"RTN","PRSDSRS",18,0)
 S DR="2:5;9:11;13;15;15.5;16;19:23;26;28;30:32;37:39;42;43;47;52;53;64;82;83;89:116.2;139;120;132;142;143;144;226;231;395:427;458;538;600;634"
"RTN","PRSDSRS",19,0)
 S DIQ(0)="IE" D EN^DIQ1
"RTN","PRSDSRS",20,0)
 W @IOF D HDR S PRTC=1
"RTN","PRSDSRS",21,0)
 F F=16,20,15.5,13,38,28,82,83,142:1:144,23,3,37,9,15,19,21,11,458,42,39,53,52,32,31,4,43,10,5,47,139,120,132,226,231,26,64,538,22,30,2,600,634 D WR G:'PRTC EX
"RTN","PRSDSRS",22,0)
 S END="" D PRTC G:'PRTC EX
"RTN","PRSDSRS",23,0)
FU S FUFLD=89 K FUYES
"RTN","PRSDSRS",24,0)
 F  S FUFLD=$O(^UTILITY("DIQ1",$J,450,DA,FUFLD)) Q:(FUFLD>116.2)!(FUFLD="")  I ^UTILITY("DIQ1",$J,450,DA,FUFLD,"I")'="" S FUYES=""
"RTN","PRSDSRS",25,0)
 G:'$D(FUYES) TSP K END S CATEGORY="FOLLOWUPS"
"RTN","PRSDSRS",26,0)
 W @IOF D HDR S PRTC=1
"RTN","PRSDSRS",27,0)
 F F=115.17,89:1:97,97.1,98,98.1,98.2,98.3,98.4,99,99.1,100:1:114,114.1,114.2,115.01:.01:115.14,115.18,115.19,115.2,115.21,115.15,115.16,115.17,116.01:.01:116.2 D WR G:'PRTC EX
"RTN","PRSDSRS",28,0)
 S END="" D PRTC G:'PRTC EX
"RTN","PRSDSRS",29,0)
TSP K END S CATEGORY="THRIFT SAVINGS PLAN"
"RTN","PRSDSRS",30,0)
 W @IOF D HDR S PRTC=1
"RTN","PRSDSRS",31,0)
 F F=409,410,406,399,396,404,412,403,395,397,398,414,413,415,417,419,418,420,422,424,423,425,427,400,401,402,405,407,408 D WR G:'PRTC EX
"RTN","PRSDSRS",32,0)
 W:TSPYTD'=0 !!,"TSP EMP DED YTD.................",$FN(TSPYTD,",",2)
"RTN","PRSDSRS",33,0)
 S END="" D PRTC G:'PRTC EX
"RTN","PRSDSRS",34,0)
EX K ^UTILITY("DIQ1",$J)
"RTN","PRSDSRS",35,0)
 N PRSTLV D KILL^XUSCLEAN W @IOF
"RTN","PRSDSRS",36,0)
 Q
"RTN","PRSDSRS",37,0)
WR S NODEDD=^DD(450,F,0),NODEUTIL=$G(^UTILITY("DIQ1",$J,450,DA,F,"E"))
"RTN","PRSDSRS",38,0)
 I F=26 W:HBDYTD'=0 !,"HEALTH BENEFITS DEDUCTION YTD...",$FN(HBDYTD,",",2)
"RTN","PRSDSRS",39,0)
 I (NODEUTIL="")!(NODEUTIL="NA") K NODEDD,NODEUTIL Q
"RTN","PRSDSRS",40,0)
 S FLDNAM=$P(NODEDD,U,1)
"RTN","PRSDSRS",41,0)
 I F=15.5 S INT=^UTILITY("DIQ1",$J,450,DA,F,"E") G EXT
"RTN","PRSDSRS",42,0)
 S INT=^UTILITY("DIQ1",$J,450,DA,F,"I")
"RTN","PRSDSRS",43,0)
EXT S EXT=^UTILITY("DIQ1",$J,450,DA,F,"E")
"RTN","PRSDSRS",44,0)
 S IL=$L(INT)
"RTN","PRSDSRS",45,0)
 I $P(NODEDD,U,2)["NJ",+INT=0 K NODEDD,NODEUTIL Q
"RTN","PRSDSRS",46,0)
 S:F=15 FLDNAM="NORMAL HOURS" S:F=458 INT=$E(INT,1,4)_":"_$E(INT,5,8)
"RTN","PRSDSRS",47,0)
 S:F=414 FLDNAM="TSP CSF DIST PCT" S:F=419 FLDNAM="TSP FIF DIST PCT"
"RTN","PRSDSRS",48,0)
 S:F=424 FLDNAM="TSP GSF DIST PCT"
"RTN","PRSDSRS",49,0)
 I $P(NODEDD,U,5)["""$""" S VAL=$FN(INT,",",2) G IOSL
"RTN","PRSDSRS",50,0)
 I F>88,F<116.3 S VAL=EXT I $D(^PRSP(454,1,"PUC","C",FLDNAM)) S FUIEN=$O(^PRSP(454,1,"PUC","C",FLDNAM,0)) I $P(^PRSP(454,1,"PUC",FUIEN,0),U,3)'="" S VAL=VAL_"  "_$P(^PRSP(454,1,"PUC",FUIEN,0),U,3) G IOSL
"RTN","PRSDSRS",51,0)
 I (F=404)!(F=414)!(F=419)!(F=424) S VAL=EXT G IOSL
"RTN","PRSDSRS",52,0)
 I $P(NODEDD,U,2)["D" S VAL=EXT G IOSL
"RTN","PRSDSRS",53,0)
 I $P(NODEDD,U,2)["NJ" S VAL=$J(INT,IL,2) G IOSL
"RTN","PRSDSRS",54,0)
 S VAL=EXT
"RTN","PRSDSRS",55,0)
 S:F=458 VAL=INT
"RTN","PRSDSRS",56,0)
IOSL K DOTS S NOD=32-$L(FLDNAM),$P(DOTS,".",NOD)="."
"RTN","PRSDSRS",57,0)
 I $Y>(IOSL-4) D PRTC Q:'PRTC
"RTN","PRSDSRS",58,0)
 I (F=400)!(F=407)!(F=414)!(F=419)!(F=424) W !
"RTN","PRSDSRS",59,0)
 W !,FLDNAM,DOTS
"RTN","PRSDSRS",60,0)
 D VAL Q
"RTN","PRSDSRS",61,0)
VAL I $L(VAL)<48 W ?32,VAL Q
"RTN","PRSDSRS",62,0)
 S COLUMN=32,LGTH=0
"RTN","PRSDSRS",63,0)
 F LOOP=1:1 Q:LGTH=$L(VAL)!(LGTH>($L(VAL)))  W:$L($P(VAL," ",LOOP))>(80-COLUMN) ! S:$L($P(VAL," ",LOOP))>(80-COLUMN) COLUMN=32 W ?COLUMN,$P(VAL," ",LOOP) S COLUMN=COLUMN+$L($P(VAL," ",LOOP))+1,LGTH=LGTH+$L($P(VAL," ",LOOP))+1
"RTN","PRSDSRS",64,0)
 Q
"RTN","PRSDSRS",65,0)
HDR W:$Y>0 @IOF S PAGE=PAGE+1
"RTN","PRSDSRS",66,0)
 S CLNGTH=$L(CCORG),TAB=(80-CLNGTH)\2,TAB=TAB-1
"RTN","PRSDSRS",67,0)
 W !,NAME,?TAB,CCORG,?61,"DUTY STATION: ",STATION_DS
"RTN","PRSDSRS",68,0)
 I '$G(PRSTLV) W !,"XXX-XX-",$E(SSN,8,11),?71,"T&L: ",TLU,!,DASHES
"RTN","PRSDSRS",69,0)
 I $G(PRSTLV)=7 W !,SSN,?71,"T&L: ",TLU,!,DASHES
"RTN","PRSDSRS",70,0)
 S CLNGTH=$L(CATEGORY),TAB=(80-CLNGTH)\2,TAB=TAB-1
"RTN","PRSDSRS",71,0)
 W !,"LAST PP: ",LPP,?TAB,CATEGORY,?73,"PAGE ",PAGE
"RTN","PRSDSRS",72,0)
 W !,DASHES
"RTN","PRSDSRS",73,0)
 K CLNGTH,TAB Q
"RTN","PRSDSRS",74,0)
PRTC W:$Y<22 ! K DIR,DIRUT,DIROUT,DTOUT,DUOUT
"RTN","PRSDSRS",75,0)
 S DIR(0)="E",DIR("A")="Press RETURN to continue" D ^DIR
"RTN","PRSDSRS",76,0)
 I $D(DIRUT) S PRTC=0 Q
"RTN","PRSDSRS",77,0)
 D:'$D(END) HDR Q
"RTN","PRSDSRS",78,0)
 Q
"RTN","PRSDSRS",79,0)
SVC S Y=$P(^PRSPC(DA,0),U,49),C=$P(^DD(450,458,0),U,2) D Y^DIQ S USRSVC=Y
"RTN","PRSDSRS",80,0)
 S DIC="^PRSPC(",DIC(0)="AEQ",DIC("A")="Select EMPLOYEE: "
"RTN","PRSDSRS",81,0)
 S DIC("S")="S YSAV=Y,Y=$P(^PRSPC(YSAV,0),U,49),C=$P(^DD(450,458,0),U,2) D Y^DIQ S EMPSVC=Y,Y=YSAV I USRSVC=EMPSVC"
"RTN","PRSDSRS",82,0)
 D ^DIC I Y=-1 G EX
"RTN","PRSDSRS",83,0)
 S DA=+Y D START G SVC
"RTN","PRSDSRS",84,0)
 ;S %ZIS="QM" D ^%ZIS G EX:POP
"RTN","PRSDSRS",85,0)
 ;I $D(IO("Q")) D  G EX
"RTN","PRSDSRS",86,0)
 ;.S ZTRTN="START^PRSDSRS",ZTDESC="PRS SERVICE RECORD SCREEN"
"RTN","PRSDSRS",87,0)
 ;.S ZTSAVE("DA")=""
"RTN","PRSDSRS",88,0)
 ;.D ^%ZTLOAD W:$D(ZTSK) !,"Request Queued!" D HOME^%ZIS K IO("Q") Q
"RTN","PRSDVTBL")
0^27^B32289821^B31749329
"RTN","PRSDVTBL",1,0)
PRSDVTBL ;HISC/MGD-PAID EMPLOYEE INQUIRY TABLE ; 02/02/2012  4:01 PM
"RTN","PRSDVTBL",2,0)
 ;;4.0;PAID;**78,82,86,73,132**;Sep 21, 1995;Build 13
"RTN","PRSDVTBL",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSDVTBL",4,0)
PTBL ;05 array
"RTN","PRSDVTBL",5,0)
 K CHOICE F LOOP=1:1:LIMIT S CHOICE(LOOP)=$T(PTABLE+LOOP)
"RTN","PRSDVTBL",6,0)
 Q
"RTN","PRSDVTBL",7,0)
FTBL ;04 array
"RTN","PRSDVTBL",8,0)
 K CHOICE F LOOP=1:1:LIMIT S CHOICE(LOOP)=$T(FTABLE+LOOP)
"RTN","PRSDVTBL",9,0)
 Q
"RTN","PRSDVTBL",10,0)
PTABLE ;05
"RTN","PRSDVTBL",11,0)
 ;;1;POSITION INFORMATION;P1;1
"RTN","PRSDVTBL",12,0)
 ;;2;PERSONAL INFORMATION;P2;1
"RTN","PRSDVTBL",13,0)
 ;;3;VERIFICATION OF EMPLOYMENT;P3;1
"RTN","PRSDVTBL",14,0)
 ;;4;PAY INFORMATION;P4;1
"RTN","PRSDVTBL",15,0)
 ;;5;BENEFITS;P5;1
"RTN","PRSDVTBL",16,0)
 ;;6;LEAVE;P6;1
"RTN","PRSDVTBL",17,0)
 ;;7;TITLE 38;P7;1
"RTN","PRSDVTBL",18,0)
 ;;8;FOLLOWUPS;P8;1
"RTN","PRSDVTBL",19,0)
 ;;9;NURSING;P9;1
"RTN","PRSDVTBL",20,0)
 ;;10;LABOR DISTRIBUTION;;
"RTN","PRSDVTBL",21,0)
 ;;;
"RTN","PRSDVTBL",22,0)
P1 ;;1;POSITION INFORMATION;1
"RTN","PRSDVTBL",23,0)
 ;;458,20,16,3,12,13,38,604,28,19,9,11,591,15,23,37,39,53,52,17,18,451,450,755,755.1,634
"RTN","PRSDVTBL",24,0)
P2 ;;2;PERSONAL INFORMATION;1
"RTN","PRSDVTBL",25,0)
 ;;33,32,31,4,186.1,186.2,186.3,186.4,2,42,30,26,600,43,603,222,10,5,47,22,24,25,56,57,428,429,430,432,434
"RTN","PRSDVTBL",26,0)
P3 ;;3;VERIFICATION OF EMPLOYMENT;1
"RTN","PRSDVTBL",27,0)
 ;;80,32,20,16,13,38,604,28,556,83,142,255,42,95,19,9,591,15,450,30,2,48,49,50,87,51,27,600,231
"RTN","PRSDVTBL",28,0)
P4 ;;4;PAY INFORMATION;1
"RTN","PRSDVTBL",29,0)
 ;;20,74,16,13,73,38,604,605,28,29,21,82,83,142,143,144,701,702,703,704,705,44,27,600,601,19,9,69,609,591,15,530,11,76,77,78,79,70,452,453,454,517,520,515,602,456,564,565,529,544,556,548,54,68,69,606,606.1,607,607.1,608,608.1,595,596,597
"RTN","PRSDVTBL",30,0)
P5 ;;5;BENEFITS;1
"RTN","PRSDVTBL",31,0)
 ;;32,30,26,113,147,55,60,59,64,58,75,231,232,233,234,114,226,1,580,578,409,410,406,399,396,404,407,408,412,414,419,424,564,565
"RTN","PRSDVTBL",32,0)
P6 ;;6;LEAVE;1
"RTN","PRSDVTBL",33,0)
 ;;30,14,55,462,464,465,463,466,136,137,510,512,511,710:1:717,513,514,508,515,517,519,523,524,505,496,506,507,473,474,475,485,486,487,476,477,478,479,480,481,482,483,484,584
"RTN","PRSDVTBL",34,0)
P7 ;;7;TITLE 38;1
"RTN","PRSDVTBL",35,0)
 ;;154,152,90,140,148,141,121,112,94,99,109,122,105,106,107,139,120,132,123,124,119,125,126,127,128,129,131,134,135,138,142,143,144,108,145,146,149,151,153,155:1:180,115.01:.01:115.14
"RTN","PRSDVTBL",36,0)
P8 ;;8;FOLLOWUPS;1
"RTN","PRSDVTBL",37,0)
 ;;115.17,89:1:97,97.1,98,98.1,98.2,98.3,98.4,99,99.1,100:1:114,114.1,114.2,115.01,115.18,115.14,115.02,115.03,115.04,115.19,115.2,115.05,115.06,115.07,115.08,115.09,115.21,115.1,115.11,115.12,115.13,116.01:.01:116.2
"RTN","PRSDVTBL",38,0)
P9 ;;9;NURSING;1
"RTN","PRSDVTBL",39,0)
 ;;13,38,604,605,19,20,27,28,600,89:1:97,97.1,98.1,98.2,98.3,98.4,99,99.1,100:1:114,115.01:.01:115.17,116.01:.01:116.2
"RTN","PRSDVTBL",40,0)
 ;;
"RTN","PRSDVTBL",41,0)
FTABLE ;04
"RTN","PRSDVTBL",42,0)
 ;; 1;POSITION INFORMATION;F1;1
"RTN","PRSDVTBL",43,0)
 ;; 2;PERSONAL INFORMATION;F2;1
"RTN","PRSDVTBL",44,0)
 ;; 3;VERIFICATION OF EMPLOYMENT;F3;1
"RTN","PRSDVTBL",45,0)
 ;; 4;PAY INFORMATION;F4;1
"RTN","PRSDVTBL",46,0)
 ;; 5;BENEFITS;F5;2
"RTN","PRSDVTBL",47,0)
 ;; 6;EARNINGS;F6;1
"RTN","PRSDVTBL",48,0)
 ;; 7;FEDERAL/STATE/CITY TAXES;F7;2
"RTN","PRSDVTBL",49,0)
 ;; 8;DEDUCTIONS/ALLOTMENTS;F8;4
"RTN","PRSDVTBL",50,0)
 ;; 9;LEAVE;F9;1
"RTN","PRSDVTBL",51,0)
 ;;10;SEPARATED EMPLOYEE INFORMATION;F10;1
"RTN","PRSDVTBL",52,0)
 ;;11;VCS;F11;1
"RTN","PRSDVTBL",53,0)
 ;;12;LABOR DISTRIBUTION;;
"RTN","PRSDVTBL",54,0)
 ;;;
"RTN","PRSDVTBL",55,0)
F1 ;; 1;POSITION INFORMATION;1
"RTN","PRSDVTBL",56,0)
 ;;458,20,16,3,12,13,38,604,27,44,600,28,19,9,11,591,15,39,53,52,17,18,451,450,548,755,755.1,634
"RTN","PRSDVTBL",57,0)
F2 ;; 2;PERSONAL INFORMATION;1
"RTN","PRSDVTBL",58,0)
 ;;2,42,95,48,49,50,30,14,33,34,32,31,4,43,603,26,535,536,443,444,185,753,440,441,442,181,182,183,184,186,186.1,186.2,186.3,186.4
"RTN","PRSDVTBL",59,0)
F3 ;; 3;VERIFICATION OF EMPLOYMENT;1
"RTN","PRSDVTBL",60,0)
 ;;20,16,13,38,604,28,556,83,142,255,42,95,19,9,591,15,450,30,2,154,48,49,50,87,51,27,600
"RTN","PRSDVTBL",61,0)
F4 ;; 4;PAY INFORMATION;1
"RTN","PRSDVTBL",62,0)
 ;;20,74,16,11,13,73,38,604,605,44,27,600,601,19,9,591,15,530,609,21,28,29,82,83,142:1:144,150,133,76:1:79,70,515,517,520,452:1:454,602,456,564,565,529,544,556,548,68,69,606,606.1,607,607.1,608,608.1,595:1:597
"RTN","PRSDVTBL",63,0)
F5 ;; 5;BENEFITS;2
"RTN","PRSDVTBL",64,0)
 ;;26,337,539,534,60,338,329:1:332,336,333:1:335,59,147,58,75,231,230,235,232,233,234,114,40,226,225,228,223,227,229,224,1,580,578,409,410,406,399,396,404,412,403,395,397,398,414,413,415,417,419,418,420,422,424,423
"RTN","PRSDVTBL",65,0)
 ;;425,427,400:1:402,405,407,408,564,565,304
"RTN","PRSDVTBL",66,0)
F6 ;; 6;EARNINGS;1
"RTN","PRSDVTBL",67,0)
 ;;537,540,594,83.1,83.2,113,82,533,538,541,542,448,445,446,447,530,562,554,555,531,549,550,551,558,560,561,546,547,552,553,559,557,527,528,529,543,545,587,587.1,587.2,589,588,563,532,457,525,526
"RTN","PRSDVTBL",68,0)
F7 ;; 7;FEDERAL/STATE/CITY TAXES;2
"RTN","PRSDVTBL",69,0)
 ;;222,217,216,213,214,540,218,215,219,212,754,293,290,296,294,291,297,295,292,298,299,256,250,253,251,254,252,255,257,459,448,446,445,447,381,383,382,377,378,375,380,376,373,374,379,392,394,393,388,389,387,386,391,384,385,390,372
"RTN","PRSDVTBL",70,0)
 ;;305,195,197,196,188,193,190,194,191,192,187,189,206,208,207,201,204,200,205,202,203,198,199,312:1:317,220,221
"RTN","PRSDVTBL",71,0)
F8 ;; 8;DEDUCTIONS/ALLOTMENTS;4
"RTN","PRSDVTBL",72,0)
 ;;210,209,211,430,428,432,431,429,434,433,343,718,353,347,351,352,354,355,356,344,345,346,357,348,349,350,719,367,361,365,366,368,369,370,358,359,360,371,362,363,364,734,729,723,727,728,730,731,732,720,721
"RTN","PRSDVTBL",73,0)
 ;;722,733,724,725,726,749,744,738,742,743,745,746,747,735,736,737,748,739,740,741,339,340,341,342,436,435,437,438,439,439.1,439.2,439.3,439.4,310,308,306,311,309,307,300,302,301,706,707,762,763
"RTN","PRSDVTBL",74,0)
 ;;708,709,764,765,303,281,288,287,289,276,280,279,277,278,284,282,285,283,286,258,261,264,267,270,273,259,265,268,271,274,260,262,266,263,269,272,275,323,326,324,325,320,328,327,319,318,322,321,241,236
"RTN","PRSDVTBL",75,0)
 ;;244,246,242,237,239,248,245,247,243,238,240,249,750,751,759,758,761,760,752
"RTN","PRSDVTBL",76,0)
F9 ;; 9;LEAVE;1
"RTN","PRSDVTBL",77,0)
 ;;30,14,467,462,464,465,592,468,463,466,461,136,137,460,469:1:472,525,526,584,510,512,593,511,710:1:717,513,514,509,508,515,68,516,517,520,518,519,523,524,599,521,522,130,598,505,496,488:1:495,497:1:504,506,507,473:1:475,485:1:487,476:1:484
"RTN","PRSDVTBL",78,0)
F10 ;;10;SEPARATED EMPLOYEE INFORMATION;1
"RTN","PRSDVTBL",79,0)
 ;;80,48,49,50,449,51,58,75,234,525,526,330,332,334,395,397,398,215,214,218,219,294,291,297,295,292,298,299,251,254,252,255,257,212,375,380,386,391,190,194,200,205,314,315,447,220,277,457
"RTN","PRSDVTBL",80,0)
F11 ;;11;VCS;1
"RTN","PRSDVTBL",81,0)
 ;;580,578,582,583,584,581,585,586,586.1,566:1:577
"RTN","PRSDVTBL",82,0)
 ;;;
"RTN","PRSXP132")
0^29^B8320610^n/a
"RTN","PRSXP132",1,0)
PRSXP132 ;WCIOFO/PLT - PRS PATCH 132 PRE/POST INSTALL ;3/26/12  21:51
"RTN","PRSXP132",2,0)
 ;;4.0;PAID;**132**;Sep 21, 1995;Build 13
"RTN","PRSXP132",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSXP132",4,0)
 QUIT
"RTN","PRSXP132",5,0)
 ;
"RTN","PRSXP132",6,0)
 ;
"RTN","PRSXP132",7,0)
POSTINS ;post install of patch 132
"RTN","PRSXP132",8,0)
 ;set new entries of telework indicator of sufile 454.0131 of file #454
"RTN","PRSXP132",9,0)
 N PRSA,PRSB,PRSC
"RTN","PRSXP132",10,0)
 F PRSA=1:1 S PRSB=$P($T(TW+PRSA),";",3) QUIT:PRSB=""  I PRSB]"" D
"RTN","PRSXP132",11,0)
 . N PRSFDA
"RTN","PRSXP132",12,0)
 . S PRSC="?+1,1,"
"RTN","PRSXP132",13,0)
 . S PRSFDA(454.0131,PRSC,.01)=$P(PRSB,U)
"RTN","PRSXP132",14,0)
 . S PRSFDA(454.0131,PRSC,1)=$P(PRSB,U,2)
"RTN","PRSXP132",15,0)
 . S PRSFDA(454.0131,PRSC,2)=$P(PRSB,U,3)
"RTN","PRSXP132",16,0)
 . D UPDATE^DIE("","PRSFDA") D:$G(DIERR)'="" MES^XPDUTL("The entry '"_$P(PRSB,U)_"' is not added and the adding fails.")
"RTN","PRSXP132",17,0)
 . D CLEAN^DILF
"RTN","PRSXP132",18,0)
 . QUIT
"RTN","PRSXP132",19,0)
 QUIT
"RTN","PRSXP132",20,0)
 ;
"RTN","PRSXP132",21,0)
TW ;telework indicator entries of subfile 454.0131
"RTN","PRSXP132",22,0)
 ;;P^Employee regularly teleworks three or more days per pay period.^Y
"RTN","PRSXP132",23,0)
 ;;R^Employee regularly teleworks one or two days per pay period.^Y
"RTN","PRSXP132",24,0)
 ;;S^Employee regularly teleworks one day per month.^Y
"RTN","PRSXP132",25,0)
 ;;A^Ad Hoc Telework. Employee teleworks only on an as-needed basis. This includes Continuity of Operations, National/Regional emergencies, situational basis (temporary), and Office of Workers Compensation-related telework.^Y
"RTN","PRSXP132",26,0)
 ;;X^Position is suitable for telework and employee is eligible, but no telework agreement in place.^N
"RTN","PRSXP132",27,0)
 ;;Y^Position is suitable for telework but employee is not eligible to telework.^N
"RTN","PRSXP132",28,0)
 ;;Z^Position is not suitable for telework. This code is used only when the employee's position makes teleworking impossible.^N
"RTN","PRSXP132",29,0)
 ;;V^Employee who is virtual.^N
"RTN","PRSXP132",30,0)
 ;;E^Employee regularly teleworks three or more days per work week.^Y
"RTN","PRSXP132",31,0)
 ;
"UP",454,454.0131,-1)
454^TW
"UP",454,454.0131,0)
454.0131
"UP",458,458.01,-1)
458^E
"UP",458,458.01,0)
458.01
"UP",458,458.02,-2)
458^E
"UP",458,458.02,-1)
458.01^D
"UP",458,458.02,0)
458.02
"VER")
8.0^22.0
"^DD",450,450,634,0)
TELEWORK INDICATOR^FO^^1;45^K:$L(X)>1!($L(X)<1) X
"^DD",450,450,634,2)
S Y(0)=Y S SUB454="TW" D:'$D(DIS(0)) OT^PRSDUTIL K SUB454
"^DD",450,450,634,2.1)
S SUB454="TW" D:'$D(DIS(0)) OT^PRSDUTIL K SUB454
"^DD",450,450,634,3)
single character code that represents type of telework eligibility.
"^DD",450,450,634,21,0)
^^2^2^3120510^
"^DD",450,450,634,21,1,0)
This is a single character code that identifies the type of telework
"^DD",450,450,634,21,2,0)
agreement the employee is eligible to work.
"^DD",450,450,634,23,0)
^^7^7^3120509^
"^DD",450,450,634,23,1,0)
This field contains the single character code that is maintained and 
"^DD",450,450,634,23,2,0)
updated in the Central PAID system at the Austin Information Technology 
"^DD",450,450,634,23,3,0)
Center (AITC).  The field is populated through either an "initial"
"^DD",450,450,634,23,4,0)
download or an "edit and update" download from AITC.  The definition of
"^DD",450,450,634,23,5,0)
the single character code is maintained in the PAID CODE FILES file (454)
"^DD",450,450,634,23,6,0)
under the Telework Indicator multiple.  Sites should never directly edit 
"^DD",450,450,634,23,7,0)
this field.
"^DD",450,450,634,"DT")
3120510
"^DD",454,454,131,0)
TELEWORK INDICATOR^454.0131^^TW;0
"^DD",454,454,131,21,0)
^^7^7^3120510^
"^DD",454,454,131,21,1,0)
This multiple contains the single character code, definition and telework 
"^DD",454,454,131,21,2,0)
eligibility for each of the various types of telework agreements that are 
"^DD",454,454,131,21,3,0)
available to employees.  An employee who has a telework agreement must 
"^DD",454,454,131,21,4,0)
have one of the codes defined here as eligible for telework.  The 
"^DD",454,454,131,21,5,0)
employees telework indicator code is entered and maintained in the Central
"^DD",454,454,131,21,6,0)
PAID system and transmitted and stored in VistA in the PAID EMPLOYEE file
"^DD",454,454,131,21,7,0)
(# 450).
"^DD",454,454,131,23,0)
^^9^9^3120510^
"^DD",454,454,131,23,1,0)
Subfile of definitions and eligibility of all single character telework 
"^DD",454,454,131,23,2,0)
codes that have been defined by VACO Payroll Policy and are potentially 
"^DD",454,454,131,23,3,0)
coded into the AITC PAID database for employees.  Employees with telework 
"^DD",454,454,131,23,4,0)
codes in PAID database will have their codes transmitted to the VistA 
"^DD",454,454,131,23,5,0)
system with either an "Edit and Update" or an "Initial" download.  
"^DD",454,454,131,23,6,0)
Employees codes are stored in file 450 and also the current telework code 
"^DD",454,454,131,23,7,0)
is stored with the employees timecard in file 458 when the pay period is 
"^DD",454,454,131,23,8,0)
certified.  This provides the ability to recover the employees telework 
"^DD",454,454,131,23,9,0)
indicator for historical pay periods.
"^DD",454,454.0131,0)
TELEWORK INDICATOR SUB-FIELD^^2^3
"^DD",454,454.0131,0,"DT")
3120510
"^DD",454,454.0131,0,"IX","B",454.0131,.01)

"^DD",454,454.0131,0,"NM","TELEWORK INDICATOR")

"^DD",454,454.0131,0,"UP")
454
"^DD",454,454.0131,.01,0)
TELEWORK CODE^MF^^0;1^K:$L(X)>1!($L(X)<1) X
"^DD",454,454.0131,.01,1,0)
^.1
"^DD",454,454.0131,.01,1,1,0)
454.0131^B
"^DD",454,454.0131,.01,1,1,1)
S ^PRSP(454,DA(1),"TW","B",$E(X,1,30),DA)=""
"^DD",454,454.0131,.01,1,1,2)
K ^PRSP(454,DA(1),"TW","B",$E(X,1,30),DA)
"^DD",454,454.0131,.01,3)
Answer must be 1 character in length.
"^DD",454,454.0131,.01,21,0)
^^2^2^3120510^
"^DD",454,454.0131,.01,21,1,0)
This is a single character code that represents a type of telework 
"^DD",454,454.0131,.01,21,2,0)
agreement.  The codes are defined and maintained by VACO Payroll Policy.
"^DD",454,454.0131,.01,"DT")
3120510
"^DD",454,454.0131,1,0)
DESCRIPTION^RF^^0;2^K:$L(X)>220!($L(X)<1) X
"^DD",454,454.0131,1,3)
Answer must be 1-220 characters in length.
"^DD",454,454.0131,1,21,0)
^^3^3^3120510^
"^DD",454,454.0131,1,21,1,0)
This field describes the type of telework agreement that is associated 
"^DD",454,454.0131,1,21,2,0)
with the single character telework indicator code.  This description 
"^DD",454,454.0131,1,21,3,0)
is defined by VACO Payroll Policy.
"^DD",454,454.0131,1,"DT")
3120510
"^DD",454,454.0131,2,0)
ELIGIBLE CODE^S^Y:YES;N:NO;^0;3^Q
"^DD",454,454.0131,2,3)
Enter YES if telework data is to be collected for employees with this code.
"^DD",454,454.0131,2,21,0)
^^4^4^3120510^
"^DD",454,454.0131,2,21,1,0)
This field is set to YES when the associated code is one for which VACO 
"^DD",454,454.0131,2,21,2,0)
Payroll Policy has identified as one for which telework hours are to be 
"^DD",454,454.0131,2,21,3,0)
collected.  Telework indicator codes that will not be tracked have this 
"^DD",454,454.0131,2,21,4,0)
field set to NO.
"^DD",454,454.0131,2,"DT")
3120514
"^DD",458,458.01,7,0)
TELEWORK INDICATOR^FO^^0;8^K:$L(X)>1!($L(X)<1) X
"^DD",458,458.01,7,2)
S Y(0)=Y S SUB454="TW" D:'$D(DIS(0)) OT^PRSDUTIL K SUB454
"^DD",458,458.01,7,2.1)
S SUB454="TW" D:'$D(DIS(0)) OT^PRSDUTIL K SUB454
"^DD",458,458.01,7,3)
Answer must be 1 character in length.
"^DD",458,458.01,7,21,0)
^^4^4^3120514^
"^DD",458,458.01,7,21,1,0)
This is the single character code that represents the type of eligibility 
"^DD",458,458.01,7,21,2,0)
of the employee for telework.  The possible codes are stored and 
"^DD",458,458.01,7,21,3,0)
maintained in the PAID CODE FILES file (#454) in the TELEWORK INDICATOR
"^DD",458,458.01,7,21,4,0)
multiple.
"^DD",458,458.01,7,23,0)
^^4^4^3120514^
"^DD",458,458.01,7,23,1,0)
The employee's current telework indicator (from File 450) is stored in 
"^DD",458,458.01,7,23,2,0)
this field upon certification of the employee's timecard.  This provides a
"^DD",458,458.01,7,23,3,0)
historical reference for what the employee's telework indicator was during
"^DD",458,458.01,7,23,4,0)
any given pay period.
"^DD",458,458.01,7,"DT")
3120514
"^DD",458,458.02,71,0)
TELEWORK HOURS SCHEDULED^NJ5,2^^8;2^K:+X'=X!(X>24)!(X<0)!(X?.E1"."3.N) X
"^DD",458,458.02,71,3)
Enter telework hours performed on this day including any quarter hours (.25, .5, .75).  Telework hours must be less than or equal to the amount of work posted.
"^DD",458,458.02,71,21,0)
^^2^2^3120510^
"^DD",458,458.02,71,21,1,0)
This is the actual number of hours the employee performed 
"^DD",458,458.02,71,21,2,0)
scheduled telework on the current day.
"^DD",458,458.02,71,23,0)
^^5^5^3120510^
"^DD",458,458.02,71,23,1,0)
Scheduled telework hours cannot exceed the actual telework hours
"^DD",458,458.02,71,23,2,0)
scheduled and worked for the current day. Scheduled telework must be added
"^DD",458,458.02,71,23,3,0)
to the tour of duty through the Timekeeper option Enter/Edit Employee Tour
"^DD",458,458.02,71,23,4,0)
of Duty.  If the telework is not scheduled through that option then it can
"^DD",458,458.02,71,23,5,0)
not be entered in this field.
"^DD",458,458.02,71,"DT")
3120510
"^DD",458,458.02,72,0)
TELEWORK HOURS MEDICAL^NJ5,2^^8;3^K:+X'=X!(X>24)!(X<0)!(X?.E1"."3.N) X
"^DD",458,458.02,72,3)
Enter telework hours performed on this day including any quarter hours (.25, .5, .75).  Telework hours must be less than or equal to the amount of work posted.
"^DD",458,458.02,72,21,0)
^^2^2^3120510^
"^DD",458,458.02,72,21,1,0)
This is the actual number of hours the employee performed medical
"^DD",458,458.02,72,21,2,0)
telework on the current day.
"^DD",458,458.02,72,23,0)
^^5^5^3120510^
"^DD",458,458.02,72,23,1,0)
The total telework hours cannot exceed the hours posted on the timecard 
"^DD",458,458.02,72,23,2,0)
for work for the current day.  Telework hours can be tour work plus
"^DD",458,458.02,72,23,3,0)
overtime, less any leave taken.  Medical telework is telework performed by
"^DD",458,458.02,72,23,4,0)
an employee who is approved to telework due to medical circumstances.  
"^DD",458,458.02,72,23,5,0)
This type of telework can be either ad hoc or scheduled.
"^DD",458,458.02,72,"DT")
3120510
"^DD",458,458.02,73,0)
TELEWORK HRS AD HOC SITU^NJ5,2^^8;4^K:+X'=X!(X>24)!(X<0)!(X?.E1"."3.N) X
"^DD",458,458.02,73,3)
Enter telework hours performed on this day including any quarter hours (.25, .5, .75).  Telework hours must be less than or equal to the amount of work posted.
"^DD",458,458.02,73,21,0)
^^2^2^3120510^
"^DD",458,458.02,73,21,1,0)
This is the actual number of hours the employee performed ad hoc or
"^DD",458,458.02,73,21,2,0)
situational telework on this day.
"^DD",458,458.02,73,23,0)
^^3^3^3120510^
"^DD",458,458.02,73,23,1,0)
The total telework hours cannot exceed the hours posted on the timecard 
"^DD",458,458.02,73,23,2,0)
for work.  So telework hours should be tour work plus overtime, less any 
"^DD",458,458.02,73,23,3,0)
leave taken.
"^DD",458,458.02,73,"DT")
3120510
"^DD",458,458.02,74,0)
TELEWORK TOUR^S^REG:REGULAR SCHEDULED TELEWORK;MED:MEDICAL SCHEDULED TELEWORK;^8;1^Q
"^DD",458,458.02,74,3)
Select type of scheduled telework for this employee.
"^DD",458,458.02,74,21,0)
^^6^6^3120510^
"^DD",458,458.02,74,21,1,0)
This field designates the active tour for the current pay period as 
"^DD",458,458.02,74,21,2,0)
scheduled for telework.  The tour may be permanent or temporary. If it's a
"^DD",458,458.02,74,21,3,0)
permanent tour, this designator will be copied into this same field for 
"^DD",458,458.02,74,21,4,0)
the next pay period. If it's a temporary tour, the TELEWORK PRIOR 
"^DD",458,458.02,74,21,5,0)
SCHEDULED TOUR (#75) field contains the scheduled telework tour indicator 
"^DD",458,458.02,74,21,6,0)
for the permanent tour.
"^DD",458,458.02,74,"DT")
3120510
"^DD",458,458.02,75,0)
TELEWORK PRIOR SCHEDULED TOUR^S^REG:REGULAR SCHEDULED TELEWORK;MED:MEDICAL SCHEDULED TELEWORK;^8;5^Q
"^DD",458,458.02,75,3)
Select type of scheduled telework for this employee.
"^DD",458,458.02,75,21,0)
^^5^5^3120510^
"^DD",458,458.02,75,21,1,0)
If the TELEWORK TOUR (#74) field contains the scheduled telework 
"^DD",458,458.02,75,21,2,0)
designator for a temporary tour, this field contains the indicator for 
"^DD",458,458.02,75,21,3,0)
the permanent tour, and will be copied into field #74 for the next pay 
"^DD",458,458.02,75,21,4,0)
period. If the TELEWORK TOUR (#74) field contains a scheduled telework 
"^DD",458,458.02,75,21,5,0)
designator for a permanent tour, this field is null.
"^DD",458,458.02,75,"DT")
3120510
"BLD",9033,6)
^124
**END**
**END**
