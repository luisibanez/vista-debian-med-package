Released PRS*4*137 SEQ #127
Extracted from mail message
**KIDS**:PRS*4.0*137^

**INSTALL NAME**
PRS*4.0*137
"BLD",9169,0)
PRS*4.0*137^PAID^0^3121025^y
"BLD",9169,1,0)
^^4^4^3121025^
"BLD",9169,1,1,0)
This patch corrects two issues:
"BLD",9169,1,2,0)
1.Intermittant nurse entitled to but not able to post on call.
"BLD",9169,1,3,0)
2.PRS MONTH CALENDAR option does not include pay periods past 2012 or
"BLD",9169,1,4,0)
holidays past 2013.
"BLD",9169,4,0)
^9.64PA^^
"BLD",9169,6.3)
4
"BLD",9169,"ABPKG")
n
"BLD",9169,"KRN",0)
^9.67PA^779.2^20
"BLD",9169,"KRN",.4,0)
.4
"BLD",9169,"KRN",.401,0)
.401
"BLD",9169,"KRN",.402,0)
.402
"BLD",9169,"KRN",.403,0)
.403
"BLD",9169,"KRN",.5,0)
.5
"BLD",9169,"KRN",.84,0)
.84
"BLD",9169,"KRN",3.6,0)
3.6
"BLD",9169,"KRN",3.8,0)
3.8
"BLD",9169,"KRN",9.2,0)
9.2
"BLD",9169,"KRN",9.8,0)
9.8
"BLD",9169,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",9169,"KRN",9.8,"NM",1,0)
PRSLIB01^^0^B52519137
"BLD",9169,"KRN",9.8,"NM",2,0)
PRSATP^^0^B35038644
"BLD",9169,"KRN",9.8,"NM","B","PRSATP",2)

"BLD",9169,"KRN",9.8,"NM","B","PRSLIB01",1)

"BLD",9169,"KRN",19,0)
19
"BLD",9169,"KRN",19.1,0)
19.1
"BLD",9169,"KRN",101,0)
101
"BLD",9169,"KRN",409.61,0)
409.61
"BLD",9169,"KRN",771,0)
771
"BLD",9169,"KRN",779.2,0)
779.2
"BLD",9169,"KRN",870,0)
870
"BLD",9169,"KRN",8989.51,0)
8989.51
"BLD",9169,"KRN",8989.52,0)
8989.52
"BLD",9169,"KRN",8994,0)
8994
"BLD",9169,"KRN","B",.4,.4)

"BLD",9169,"KRN","B",.401,.401)

"BLD",9169,"KRN","B",.402,.402)

"BLD",9169,"KRN","B",.403,.403)

"BLD",9169,"KRN","B",.5,.5)

"BLD",9169,"KRN","B",.84,.84)

"BLD",9169,"KRN","B",3.6,3.6)

"BLD",9169,"KRN","B",3.8,3.8)

"BLD",9169,"KRN","B",9.2,9.2)

"BLD",9169,"KRN","B",9.8,9.8)

"BLD",9169,"KRN","B",19,19)

"BLD",9169,"KRN","B",19.1,19.1)

"BLD",9169,"KRN","B",101,101)

"BLD",9169,"KRN","B",409.61,409.61)

"BLD",9169,"KRN","B",771,771)

"BLD",9169,"KRN","B",779.2,779.2)

"BLD",9169,"KRN","B",870,870)

"BLD",9169,"KRN","B",8989.51,8989.51)

"BLD",9169,"KRN","B",8989.52,8989.52)

"BLD",9169,"KRN","B",8994,8994)

"BLD",9169,"QDEF")
^^^^^^^^^^YES
"BLD",9169,"QUES",0)
^9.62^^
"BLD",9169,"REQB",0)
^9.611^2^2
"BLD",9169,"REQB",1,0)
PRS*4.0*93^2
"BLD",9169,"REQB",2,0)
PRS*4.0*132^2
"BLD",9169,"REQB","B","PRS*4.0*132",2)

"BLD",9169,"REQB","B","PRS*4.0*93",1)

"MBREQ")
0
"PKG",408,-1)
1^1
"PKG",408,0)
PAID^PRS^PAID
"PKG",408,20,0)
^9.402P^^
"PKG",408,22,0)
^9.49I^1^1
"PKG",408,22,1,0)
4.0^2950912^2960130
"PKG",408,22,1,"PAH",1,0)
137^3121025
"PKG",408,22,1,"PAH",1,1,0)
^^4^4^3121025
"PKG",408,22,1,"PAH",1,1,1,0)
This patch corrects two issues:
"PKG",408,22,1,"PAH",1,1,2,0)
1.Intermittant nurse entitled to but not able to post on call.
"PKG",408,22,1,"PAH",1,1,3,0)
2.PRS MONTH CALENDAR option does not include pay periods past 2012 or
"PKG",408,22,1,"PAH",1,1,4,0)
holidays past 2013.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","PRSATP")
0^2^B35038644^B34908799
"RTN","PRSATP",1,0)
PRSATP ;HISC/REL,WIRMFO/MGD/PLT - Timekeeper Post Time ;4/13/2012
"RTN","PRSATP",2,0)
 ;;4.0;PAID;**22,57,69,92,102,93,112,126,132,137**;Sep 21, 1995;Build 4
"RTN","PRSATP",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSATP",4,0)
 ; input (from calling option)
"RTN","PRSATP",5,0)
 ;   PTPF - (optional) part-time physician flag, true (=1) when called
"RTN","PRSATP",6,0)
 ;          by the posting option for part-time physicians with a memo.
"RTN","PRSATP",7,0)
 ;
"RTN","PRSATP",8,0)
 N GLOB ; global reference for employee's time & attendance record.
"RTN","PRSATP",9,0)
 N PRSDT
"RTN","PRSATP",10,0)
 S PRSTLV=2 D ^PRSAUTL G:TLI<1 EX S %DT="X",X="T+3" D ^%DT
"RTN","PRSATP",11,0)
 S %DT="AEPX",%DT("A")="Posting Date: ",%DT("B")="T-1",%DT(0)=-Y W ! D ^%DT
"RTN","PRSATP",12,0)
 G:Y<1 EX S (PRSDT,D1)=Y S Y=$G(^PRST(458,"AD",D1)),PPI=$P(Y,"^",1),DAY=$P(Y,"^",2)
"RTN","PRSATP",13,0)
 I PPI="" W !!,$C(7),"Pay Period is Not Open Yet!" G EX
"RTN","PRSATP",14,0)
 S PPE=$P($G(^PRST(458,PPI,0)),"^",1),DTE=$P($G(^PRST(458,PPI,2)),"^",DAY),DTI=$P($G(^(1)),"^",DAY)
"RTN","PRSATP",15,0)
D2 W !!,"Would you like to edit the T & A RECORDs in alphabetical order" S %=1 D YN^DICN I % S LP=% G EX:%=-1,LOOP:%=1,NME
"RTN","PRSATP",16,0)
 W !!,"Answer YES if you want all RECORDs brought up for which no data"
"RTN","PRSATP",17,0)
 W !,"has been entered." G D2
"RTN","PRSATP",18,0)
 ;
"RTN","PRSATP",19,0)
 ;
"RTN","PRSATP",20,0)
LOOP ;
"RTN","PRSATP",21,0)
 S LP=1,NN=""
"RTN","PRSATP",22,0)
 F  S NN=$O(^PRSPC("ATL"_TLE,NN)) Q:NN=""  F DFN=0:0 S DFN=$O(^PRSPC("ATL"_TLE,NN,DFN)) Q:DFN<1  I $$PTPSCR(DFN,PRSDT,$G(PTPF)) S GLOB="" D POST D:GLOB]"" UNLOCK^PRSLIB00(GLOB),NURSEPOC^PRSNEETP(TLI,PPI,DFN,PRSDT) I 'LP G EX
"RTN","PRSATP",23,0)
 G EX
"RTN","PRSATP",24,0)
NME K DIC S DIC("A")="Select EMPLOYEE: ",DIC("S")="I $P(^(0),""^"",8)=TLE,$D(^PRST(458,PPI,""E"",+Y)),$$PTPSCR^PRSATP(+Y,PRSDT,$G(PTPF))",DIC(0)="AEQM",DIC="^PRSPC(",D="ATL"_TLE W ! D IX^DIC S DFN=+Y K DIC
"RTN","PRSATP",25,0)
 G:DFN<1 EX S GLOB="" D POST D:GLOB]"" UNLOCK^PRSLIB00(GLOB),NURSEPOC^PRSNEETP(TLI,PPI,DFN,PRSDT) G NME
"RTN","PRSATP",26,0)
POST S TC=$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),"^",2),TC2=$P($G(^(0)),"^",13)
"RTN","PRSATP",27,0)
 I 'TC Q:LP'=2  W !!?5,"This Employee has no tour entered for this date." Q
"RTN","PRSATP",28,0)
 I "T"'[$P($G(^PRST(458,PPI,"E",DFN,0)),"^",2) W:LP=2 $C(7),!!,"This Employee has already been sent to Payroll." Q
"RTN","PRSATP",29,0)
 S STAT=$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,10)),"^",1)
"RTN","PRSATP",30,0)
 I LP=1,"1 3 4"[TC!(STAT'="") Q
"RTN","PRSATP",31,0)
 ;
"RTN","PRSATP",32,0)
 ; check if ESR is approved when posting PT Phy with memo
"RTN","PRSATP",33,0)
 I $G(PTPF),$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,7)),U)=5 D  Q:'Y!$D(DIRUT)
"RTN","PRSATP",34,0)
 . W $C(7),!
"RTN","PRSATP",35,0)
 . W !,"This day was auto-posted from an approved Electronic Subsidiary Record (ESR)."
"RTN","PRSATP",36,0)
 . W !,"Normally, changes should be accomplished by having the T & L supervisor return"
"RTN","PRSATP",37,0)
 . W !,"the ESR day to the part-time physician for correction."
"RTN","PRSATP",38,0)
 . W !,"An exception to the above is when AWOL, On Suspension, or Non-Pay must be"
"RTN","PRSATP",39,0)
 . W !,"posted, since those can not be entered via the ESR.",!
"RTN","PRSATP",40,0)
 . S DIR(0)="Y"
"RTN","PRSATP",41,0)
 . S DIR("A")="Do you want to manually post this day on the timecard"
"RTN","PRSATP",42,0)
 . S DIR("B")="NO"
"RTN","PRSATP",43,0)
 . D ^DIR K DIR
"RTN","PRSATP",44,0)
 ;
"RTN","PRSATP",45,0)
 ; lock employee record for editing by timekeeper
"RTN","PRSATP",46,0)
 I '$$AVAILREC^PRSLIB00("TK",.GLOB,.STOP) S:LP=1&$G(STOP) LP=0 Q
"RTN","PRSATP",47,0)
 D ^PRSADP1,LP,^PRSATP2,^PRSAENT
"RTN","PRSATP",48,0)
 G P0:TC>4,P0:TC=2,P0:TC=3,P3:TC=4,P1
"RTN","PRSATP",49,0)
P0 R !!,"Did Employee Only Work Scheduled Tour? ",X:DTIME S:'$T X="^^" S:X["^^" LP=0 Q:X["^"  S X=$TR(X,"yesnor","YESNOR")
"RTN","PRSATP",50,0)
 S:X="" X="*" I $P("YES",X,1)'="",$P("NO",X,1)'="",X'="R" W $C(7),!?5," Answer YES or NO or R for Normal Posting with Remarks" G P0
"RTN","PRSATP",51,0)
 S X=$E(X,1) I "YR"'[X G P1
"RTN","PRSATP",52,0)
 S PTY=1 I STAT'="" K ^PRST(458,PPI,"E",DFN,"D",DAY,2),^(3)
"RTN","PRSATP",53,0)
 I TC=3 S $P(^PRST(458,PPI,"E",DFN,"D",DAY,2),"^",3)="RG",STAT="T"
"RTN","PRSATP",54,0)
 I STAT'="",$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),"^",12) D NOW^%DTC S NOW=%,TT="HW" D S0^PRSAPPH
"RTN","PRSATP",55,0)
 S LV="" D A2^PRSATP0:X="R" G UPD
"RTN","PRSATP",56,0)
P1 R !!,"Was Employee Absent the Entire Tour? ",X:DTIME S:'$T X="^" Q:X["^"  S X=$TR(X,"yesno","YESNO")
"RTN","PRSATP",57,0)
 S:X="" X="*" I $P("YES",X,1)'="",$P("NO",X,1)'="" W $C(7)," Answer YES or NO" G P1
"RTN","PRSATP",58,0)
 I X?1"Y".E D ^PRSATP0 Q:X["^"  G UPD
"RTN","PRSATP",59,0)
 ;
"RTN","PRSATP",60,0)
 ;for daily employees if you say they didn't work and they were not absent
"RTN","PRSATP",61,0)
 ;then effectively you have not created any posting for the day and we
"RTN","PRSATP",62,0)
 ;clean up any prior posting
"RTN","PRSATP",63,0)
 I $E(ENT,1,2)["D" D  Q
"RTN","PRSATP",64,0)
 . K ^PRST(458,PPI,"E",DFN,"D",DAY,2),^(3),^(10)
"RTN","PRSATP",65,0)
 . D CLEANTW^PRSATPTW(PPI,DFN,DAY)
"RTN","PRSATP",66,0)
 ;
"RTN","PRSATP",67,0)
P3 S ZENT=$S($E(ENT,2)="H"&('$G(PTPF)):"RG ",$E(ENT,1,2)="00":"RG ",1:"")
"RTN","PRSATP",68,0)
 I TC=1 D OT S:$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),"^",12)&(AC="M2E") ZENT=ZENT_"HW " S ZENT=ZENT_"NP CP " G P31
"RTN","PRSATP",69,0)
 I TC=3!(TC=4) D LV,OT S:$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),"^",12)&($E(ENT,22)) ZENT=ZENT_"HW " G P31 ;PRS*137
"RTN","PRSATP",70,0)
 D LV,OT S ZENT=ZENT_"TV TR " S:$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),"^",12) ZENT=ZENT_"HX HW "
"RTN","PRSATP",71,0)
P31 S DDSFILE=458,DDSFILE(1)=458.02,DA(2)=PPI,DA(1)=DFN,DA=DAY
"RTN","PRSATP",72,0)
 S Z=$G(^PRST(458,PPI,"E",DFN,"D",DAY,2)) K ZS
"RTN","PRSATP",73,0)
 S DR="[PRSA TP POST1]" D ^DDS K DS
"RTN","PRSATP",74,0)
 ; timekeeper has indicated there are exceptions, if they don't enter any, quit.
"RTN","PRSATP",75,0)
 I '$D(ZS) QUIT:'$D(^PRST(458,PPI,"E",DFN,"D",DAY,2))  S PTY=3 G UPD
"RTN","PRSATP",76,0)
 I ZS'="" S ^PRST(458,PPI,"E",DFN,"D",DAY,2)=ZS,PTY=3 G UPD
"RTN","PRSATP",77,0)
 ; if employee had exceptions, but timekeeper deletes them, then clear posting
"RTN","PRSATP",78,0)
 ; data because prompts that the employee was not absent and did not work
"RTN","PRSATP",79,0)
 ; entire tour were answered such that there must be exceptions
"RTN","PRSATP",80,0)
 I $D(^PRST(458,PPI,"E",DFN,"D",DAY,2)) D
"RTN","PRSATP",81,0)
 .  K ^(2),^(3),^(10)
"RTN","PRSATP",82,0)
 .  D CLEANTW^PRSATPTW(PPI,DFN,DAY)
"RTN","PRSATP",83,0)
 Q
"RTN","PRSATP",84,0)
UPD ; Update status
"RTN","PRSATP",85,0)
 D TELEWORK^PRSATPTW(PPI,DFN,DAY,STAT,PTY,TC)
"RTN","PRSATP",86,0)
 D NOW^%DTC
"RTN","PRSATP",87,0)
 S $P(^PRST(458,PPI,"E",DFN,"D",DAY,10),"^",1,4)="T^"_DUZ_"^"_%_"^"_PTY
"RTN","PRSATP",88,0)
 N DAH,DBH,HOL,QUIT
"RTN","PRSATP",89,0)
 S (DAH,DBH,HOL,QUIT)=""
"RTN","PRSATP",90,0)
 ;
"RTN","PRSATP",91,0)
 ; Check to holiday encapsulated by a form a non-pay
"RTN","PRSATP",92,0)
 D HENCAP^PRSATP3(PPI,DFN,DAY,.DBH,.HOL,.DAH,.QUIT)
"RTN","PRSATP",93,0)
 Q:QUIT
"RTN","PRSATP",94,0)
 D UPDT^PRSATP3(DFN,DBH,HOL,DAH)
"RTN","PRSATP",95,0)
 K DAH,DBH,HOL,QUIT
"RTN","PRSATP",96,0)
 Q
"RTN","PRSATP",97,0)
LP W !!,"Enter '^' to bypass this employee." W:LP=1 " Enter '^^' to stop T&L editing." W ! Q
"RTN","PRSATP",98,0)
LV S Z1="30 31 31 31 32 33 28 35 35 30 36 37 38",Z2="AL SL CB AD NL WP CU AA DL RL NP CP HX"
"RTN","PRSATP",99,0)
 ;
"RTN","PRSATP",100,0)
 ; Check to see if the employee is entitled to Military Leave and add
"RTN","PRSATP",101,0)
 ; ML to list if they are.  Added to be compliant with Public Law
"RTN","PRSATP",102,0)
 ; 106-554.
"RTN","PRSATP",103,0)
 S:$E(ENT,34) Z1=Z1_" 34",Z2=Z2_" ML"
"RTN","PRSATP",104,0)
 ;9/3 month employee entitled RS with recess hours in file# 458.8
"RTN","PRSATP",105,0)
 S:$E(ENT,5)&$P($$RSHR^PRSU1B2(DFN,PPE),U,DAY>7+1) Z1=Z1_" 5",Z2=Z2_" RS"
"RTN","PRSATP",106,0)
 F K=1:1:$L(Z1," ") I $E(ENT,$P(Z1," ",K)) S ZENT=ZENT_$P(Z2," ",K)_" "
"RTN","PRSATP",107,0)
 QUIT
"RTN","PRSATP",108,0)
 ;
"RTN","PRSATP",109,0)
OT ; Get entitled out-of-tour types of time
"RTN","PRSATP",110,0)
 S Z1="12 28 26",Z2="OT CT ON" F K=1:1:3 I $E(ENT,$P(Z1," ",K)) S ZENT=ZENT_$P(Z2," ",K)_" " I ZENT'["UN" S ZENT=ZENT_"UN "
"RTN","PRSATP",111,0)
 I $E(ENT,29),'$E(ENT,26) S ZENT=ZENT_"SB " S:ZENT'["UN" ZENT=ZENT_"UN "
"RTN","PRSATP",112,0)
 ; Allow Stand By for employees w/ Prem Pay Ind = W or V
"RTN","PRSATP",113,0)
 I $E(ENT,29),$E(ENT,26),"^W^V^"[(U_PMP_U) S ZENT=ZENT_"SB " S:ZENT'["UN" ZENT=ZENT_"UN "
"RTN","PRSATP",114,0)
 Q
"RTN","PRSATP",115,0)
EX ;clean up lock global which is set in $$AVAILREC^PRSLIB00
"RTN","PRSATP",116,0)
 K ^TMP($J,"LOCK")
"RTN","PRSATP",117,0)
 ;generic cleanup
"RTN","PRSATP",118,0)
 G KILL^XUSCLEAN
"RTN","PRSATP",119,0)
 ;
"RTN","PRSATP",120,0)
PTPSCR(PRSIEN,PSTDT,PTPF) ; part-time physician screen extrinsic function
"RTN","PRSATP",121,0)
 ; input
"RTN","PRSATP",122,0)
 ;   PRSIEN - Employee IEN (file 450)
"RTN","PRSATP",123,0)
 ;   PSTDT  - Date being posted (FileMan internal)
"RTN","PRSATP",124,0)
 ;   PTPF   - (opt) Part-time physician flag, equals true (1) when screen
"RTN","PRSATP",125,0)
 ;            should only allow selection of part-time physician with
"RTN","PRSATP",126,0)
 ;            memo and false (null or 0) when screen should only
"RTN","PRSATP",127,0)
 ;            allow selection of employees that are not part-time
"RTN","PRSATP",128,0)
 ;            physicians with memo.
"RTN","PRSATP",129,0)
 ; result
"RTN","PRSATP",130,0)
 ;   returns a boolean value (1 or 0) or null
"RTN","PRSATP",131,0)
 ;     =1 if employee passed screen
"RTN","PRSATP",132,0)
 ;        (PTPF true and employee is PTP with memo) OR
"RTN","PRSATP",133,0)
 ;        (PTPF false and employee is not PTP with memo)
"RTN","PRSATP",134,0)
 ;     =0 if employee did not pass screen
"RTN","PRSATP",135,0)
 ;     =null value if required inputs were not provided
"RTN","PRSATP",136,0)
 ;
"RTN","PRSATP",137,0)
 N PRSRET,PTPM
"RTN","PRSATP",138,0)
 S PTPF=$G(PTPF)
"RTN","PRSATP",139,0)
 S PRSRET="" ; init return
"RTN","PRSATP",140,0)
 I PRSIEN,PSTDT D
"RTN","PRSATP",141,0)
 . ; determine if employee is PT physician with memo on the posting date
"RTN","PRSATP",142,0)
 . S PTPM=$S($$MIEN^PRSPUT1(PRSIEN,PSTDT)>0:1,1:0)
"RTN","PRSATP",143,0)
 . ; apply screen
"RTN","PRSATP",144,0)
 . S PRSRET=$S(PTPF&PTPM:1,'PTPF&'PTPM:1,1:0)
"RTN","PRSATP",145,0)
 ;
"RTN","PRSATP",146,0)
 Q PRSRET
"RTN","PRSATP",147,0)
 ;
"RTN","PRSATP",148,0)
 ;PRSATP
"RTN","PRSLIB01")
0^1^B52519137^B52516097
"RTN","PRSLIB01",1,0)
PRSLIB01 ;JAH/WCIOFO-PAID UTILITIES AND LIBRARY 01 ;Mar 25, 2005
"RTN","PRSLIB01",2,0)
 ;;4.0;PAID;**45,93,137**;Sep 21, 1995;Build 4
"RTN","PRSLIB01",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSLIB01",4,0)
 Q
"RTN","PRSLIB01",5,0)
MAIN ;DISPLAY MONTHLY CALENDAR FOR ANY DATE
"RTN","PRSLIB01",6,0)
 N OUT
"RTN","PRSLIB01",7,0)
 F  D CALENDAR(.OUT) Q:OUT
"RTN","PRSLIB01",8,0)
 Q
"RTN","PRSLIB01",9,0)
 ;= = = = = = = = = = = = = = = = = = = = = = = = = = = 
"RTN","PRSLIB01",10,0)
CALENDAR(OUT) ;
"RTN","PRSLIB01",11,0)
 ;  Ask user for a date and quit if not a valid date.
"RTN","PRSLIB01",12,0)
 ;  Get # of days in the month the user has selected.
"RTN","PRSLIB01",13,0)
 ;  Get the weekday for the 1st day of the selected month.
"RTN","PRSLIB01",14,0)
 ;  If necessary get days elapsed from jan 1 to 1st day of selected mo.
"RTN","PRSLIB01",15,0)
 ;  Display the month.
"RTN","PRSLIB01",16,0)
 ;
"RTN","PRSLIB01",17,0)
 S OUT=1
"RTN","PRSLIB01",18,0)
 N ZFMDATE,%DT,DAY1,Y,MONTH,DAYS,YEAR,FIRSTDAY,LASTDAY,SHOWJULI,HIGHLITE
"RTN","PRSLIB01",19,0)
 N COUNT,HDR
"RTN","PRSLIB01",20,0)
 ;
"RTN","PRSLIB01",21,0)
 S %DT="AE" D ^%DT S ZFMDATE=Y ;          Ask date.
"RTN","PRSLIB01",22,0)
 Q:Y<1
"RTN","PRSLIB01",23,0)
 ; if picked month has today-highlight
"RTN","PRSLIB01",24,0)
 S HIGHLITE=0
"RTN","PRSLIB01",25,0)
 I $E(Y,1,5)=$E(DT,1,5) S HIGHLITE=+$E(DT,6,7)
"RTN","PRSLIB01",26,0)
 ;
"RTN","PRSLIB01",27,0)
 ; Ask if they want to see the elapsed days calendar.
"RTN","PRSLIB01",28,0)
 S SHOWJULI=$$ASKJULIA()
"RTN","PRSLIB01",29,0)
 Q:Y<0
"RTN","PRSLIB01",30,0)
 ;
"RTN","PRSLIB01",31,0)
 ;                                        Days in the month.
"RTN","PRSLIB01",32,0)
 S MONTH=$E(ZFMDATE,4,5),YEAR=$E(ZFMDATE,1,3)+1700
"RTN","PRSLIB01",33,0)
 S DAYS=$$DAYSINMO(YEAR,MONTH)
"RTN","PRSLIB01",34,0)
 ;
"RTN","PRSLIB01",35,0)
 S FIRSTDAY=$E(ZFMDATE,1,5)_"01",LASTDAY=$E(ZFMDATE,1,5)_DAYS
"RTN","PRSLIB01",36,0)
 ;
"RTN","PRSLIB01",37,0)
 ;Get the day #s of pay periods in this month
"RTN","PRSLIB01",38,0)
 N PPS
"RTN","PRSLIB01",39,0)
 I FIRSTDAY<3180000 D GETPPS(FIRSTDAY,LASTDAY)
"RTN","PRSLIB01",40,0)
 ;
"RTN","PRSLIB01",41,0)
 S DAY1=$$WEEKDAY1(ZFMDATE) ;             Weekday of the 1st.
"RTN","PRSLIB01",42,0)
 ;
"RTN","PRSLIB01",43,0)
 ;
"RTN","PRSLIB01",44,0)
 S HDR=$$GETHEAD(Y)
"RTN","PRSLIB01",45,0)
 W @IOF,!
"RTN","PRSLIB01",46,0)
 W "---------------",HDR,"------------"
"RTN","PRSLIB01",47,0)
 D DISPMO(DAY1,DAYS,HIGHLITE) ;                    Display month.
"RTN","PRSLIB01",48,0)
 I SHOWJULI D
"RTN","PRSLIB01",49,0)
 .   N JULID1
"RTN","PRSLIB01",50,0)
 .   S JULID1=$$GETJULI(FIRSTDAY,YEAR)
"RTN","PRSLIB01",51,0)
 .   W !!,"-------Elapsed Days Calendar---------"
"RTN","PRSLIB01",52,0)
 .   D DISPJULI(DAY1,DAYS,JULID1)
"RTN","PRSLIB01",53,0)
 W !,"---------------Holidays------------",!
"RTN","PRSLIB01",54,0)
 ;
"RTN","PRSLIB01",55,0)
 ;DISPLAY HOLIDAYS
"RTN","PRSLIB01",56,0)
 ;
"RTN","PRSLIB01",57,0)
 N HO,HD,PRS8D,HOLIDAY
"RTN","PRSLIB01",58,0)
 S PRS8D=$E(ZFMDATE,2,3) D EN^PRS8HD
"RTN","PRSLIB01",59,0)
 S FIRSTDAY=$E(FIRSTDAY,1,5)_"00"
"RTN","PRSLIB01",60,0)
 S HOLIDAY=FIRSTDAY
"RTN","PRSLIB01",61,0)
 S COUNT=0
"RTN","PRSLIB01",62,0)
 I FIRSTDAY<3190000 D
"RTN","PRSLIB01",63,0)
 .F  S HOLIDAY=$O(HD(HOLIDAY)) Q:HOLIDAY>LASTDAY!(HOLIDAY="")  D
"RTN","PRSLIB01",64,0)
 .. W !,?2,$P(HD(HOLIDAY),"^",2)," ",+$E(HOLIDAY,6,7),?15,$P(HD(HOLIDAY),"^")
"RTN","PRSLIB01",65,0)
 .. S COUNT=COUNT+1
"RTN","PRSLIB01",66,0)
 E  W "  Sorry, Can't find holidays past 2018." S COUNT=COUNT+1
"RTN","PRSLIB01",67,0)
 I COUNT<1 W !,"  No Holidays this month."
"RTN","PRSLIB01",68,0)
 W !,"-----------------------------------",!
"RTN","PRSLIB01",69,0)
 S OUT=0
"RTN","PRSLIB01",70,0)
 Q
"RTN","PRSLIB01",71,0)
 ;= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
"RTN","PRSLIB01",72,0)
 ;
"RTN","PRSLIB01",73,0)
SILMO(PRSDT) ;SILENT CALL TO DISPLAY MONTH
"RTN","PRSLIB01",74,0)
 ;  INPUT: PRSDT - must be fileman date
"RTN","PRSLIB01",75,0)
 ;
"RTN","PRSLIB01",76,0)
 N X,Y,%DT,DAY1,Y,MONTH,DAYS,YEAR,FIRSTDAY,LASTDAY,HIGHLITE,COUNT,HDR
"RTN","PRSLIB01",77,0)
 S X=PRSDT D ^%DT Q:Y<0
"RTN","PRSLIB01",78,0)
 ; if month has today-highlight
"RTN","PRSLIB01",79,0)
 S HIGHLITE=0
"RTN","PRSLIB01",80,0)
 I $E(Y,1,5)=$E(DT,1,5) S HIGHLITE=+$E(DT,6,7)
"RTN","PRSLIB01",81,0)
 S MONTH=$E(PRSDT,4,5),YEAR=$E(PRSDT,1,3)+1700
"RTN","PRSLIB01",82,0)
 S DAYS=$$DAYSINMO(YEAR,MONTH)
"RTN","PRSLIB01",83,0)
 S FIRSTDAY=$E(PRSDT,1,5)_"01",LASTDAY=$E(PRSDT,1,5)_DAYS
"RTN","PRSLIB01",84,0)
 ;
"RTN","PRSLIB01",85,0)
 ;Get day #s of pps in month
"RTN","PRSLIB01",86,0)
 N PPS
"RTN","PRSLIB01",87,0)
 I FIRSTDAY<3180000 D GETPPS(FIRSTDAY,LASTDAY)
"RTN","PRSLIB01",88,0)
 S DAY1=$$WEEKDAY1(PRSDT)
"RTN","PRSLIB01",89,0)
 S HDR=$$GETHEAD(Y)
"RTN","PRSLIB01",90,0)
 W @IOF,!,"---------------",HDR,"------------"
"RTN","PRSLIB01",91,0)
 D DISPMO(DAY1,DAYS,HIGHLITE)
"RTN","PRSLIB01",92,0)
 W !,"---------------Holidays------------",!
"RTN","PRSLIB01",93,0)
 ;
"RTN","PRSLIB01",94,0)
 ;holidays
"RTN","PRSLIB01",95,0)
 N HO,HD,PRS8D,HOLIDAY
"RTN","PRSLIB01",96,0)
 S PRS8D=$E(PRSDT,2,3) D EN^PRS8HD
"RTN","PRSLIB01",97,0)
 S FIRSTDAY=$E(FIRSTDAY,1,5)_"00"
"RTN","PRSLIB01",98,0)
 S HOLIDAY=FIRSTDAY
"RTN","PRSLIB01",99,0)
 S COUNT=0
"RTN","PRSLIB01",100,0)
 I FIRSTDAY<3190000 D
"RTN","PRSLIB01",101,0)
 .F  S HOLIDAY=$O(HD(HOLIDAY)) Q:HOLIDAY>LASTDAY!(HOLIDAY="")  D
"RTN","PRSLIB01",102,0)
 .. W !,?2,$P(HD(HOLIDAY),"^",2)," ",+$E(HOLIDAY,6,7),?15,$P(HD(HOLIDAY),"^")
"RTN","PRSLIB01",103,0)
 .. S COUNT=COUNT+1
"RTN","PRSLIB01",104,0)
 E  W "  Sorry, Can't find holidays past 2018." S COUNT=COUNT+1
"RTN","PRSLIB01",105,0)
 I COUNT<1 W !,"  No Holidays this month."
"RTN","PRSLIB01",106,0)
 W !,"-----------------------------------",!
"RTN","PRSLIB01",107,0)
 Q
"RTN","PRSLIB01",108,0)
 ;= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
"RTN","PRSLIB01",109,0)
 ;
"RTN","PRSLIB01",110,0)
GETPPS(FIRSTDAY,LASTDAY) ;
"RTN","PRSLIB01",111,0)
 N D1,PPE,PPDAY,PPI,PP4Y
"RTN","PRSLIB01",112,0)
 S D1=FIRSTDAY D PP^PRSAPPU
"RTN","PRSLIB01",113,0)
 D NX^PRSAPPU
"RTN","PRSLIB01",114,0)
 I D1<FIRSTDAY S PPE=$E($$NXTPP^PRSAPPU(PPE),3,7) D NX^PRSAPPU
"RTN","PRSLIB01",115,0)
 S PPDAY=+$E(D1,6,7)
"RTN","PRSLIB01",116,0)
 S PPS(PPDAY)=PPE
"RTN","PRSLIB01",117,0)
 F  D  Q:D1>LASTDAY
"RTN","PRSLIB01",118,0)
 .  S PPE=$E($$NXTPP^PRSAPPU(PPE),3,7) D NX^PRSAPPU
"RTN","PRSLIB01",119,0)
 .  Q:D1>LASTDAY
"RTN","PRSLIB01",120,0)
 .  S PPDAY=+$E(D1,6,7)
"RTN","PRSLIB01",121,0)
 .  S PPS(PPDAY)=PPE
"RTN","PRSLIB01",122,0)
 Q
"RTN","PRSLIB01",123,0)
 ;= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
"RTN","PRSLIB01",124,0)
 ;
"RTN","PRSLIB01",125,0)
GETHEAD(Y) ;
"RTN","PRSLIB01",126,0)
 N YEAR,MONTH,HDR,LENOFDT
"RTN","PRSLIB01",127,0)
 S HDR=$$FMTE^XLFDT(Y,"1D")
"RTN","PRSLIB01",128,0)
 S MONTH=$P(HDR," ")
"RTN","PRSLIB01",129,0)
 S LENOFDT=$L(HDR," ")
"RTN","PRSLIB01",130,0)
 S YEAR=$P(HDR," ",LENOFDT)
"RTN","PRSLIB01",131,0)
 Q MONTH_" "_YEAR
"RTN","PRSLIB01",132,0)
 ;
"RTN","PRSLIB01",133,0)
 ;= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
"RTN","PRSLIB01",134,0)
 ;
"RTN","PRSLIB01",135,0)
WEEKDAY1(ZDATE) ;get the weekday of the 1st day of the month
"RTN","PRSLIB01",136,0)
 ; INPUT:   ZDATE   - FileMan date, used as the month to display
"RTN","PRSLIB01",137,0)
 ; OUTPUT:  return - Integer corresponding to day of week 
"RTN","PRSLIB01",138,0)
 ;                   (i.e. Sunday[1], Monday[2]) for the 1st day of
"RTN","PRSLIB01",139,0)
 ;                   the month
"RTN","PRSLIB01",140,0)
 S ZDATE=$E(ZDATE,1,5)_"01"
"RTN","PRSLIB01",141,0)
 Q $$DOW^XLFDT(ZDATE,1)
"RTN","PRSLIB01",142,0)
 ;= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
"RTN","PRSLIB01",143,0)
 ;
"RTN","PRSLIB01",144,0)
DISPMO(DAYNO,NODAYS,HL) ;DISPLAY ENTIRE MONTH
"RTN","PRSLIB01",145,0)
 ;SAMPLE CALL:  D DISPMO(4,30) Produces a 30 month with day 1
"RTN","PRSLIB01",146,0)
 ;                                 beginning on Wednesday.
"RTN","PRSLIB01",147,0)
 ;
"RTN","PRSLIB01",148,0)
 ;Set up reverse video ON & OFF for today highlight
"RTN","PRSLIB01",149,0)
 I $G(HL)>0 N IORVOFF,IORVON S X="IORVOFF;IORVON" D ENDR^%ZISS
"RTN","PRSLIB01",150,0)
 ;
"RTN","PRSLIB01",151,0)
 N DAYS,DAYPOS,I,PPOFFSET,CNTDWN,BLDTAB
"RTN","PRSLIB01",152,0)
 S PPOFFSET=6,(BLDTAB,CNTDWN)=0
"RTN","PRSLIB01",153,0)
 S DAYS="SUN MON TUE WED THU FRI SAT"
"RTN","PRSLIB01",154,0)
 W !,?PPOFFSET,"  ",DAYS,!
"RTN","PRSLIB01",155,0)
 F I=1:1:NODAYS D
"RTN","PRSLIB01",156,0)
 . S DAYPOS=(DAYNO+I-1)#7
"RTN","PRSLIB01",157,0)
 . I DAYPOS=0 W ! I $G(PPS(I))'="" W PPS(I)
"RTN","PRSLIB01",158,0)
 . I ($G(HL)=I)!($G(CNTDWN)>0) D
"RTN","PRSLIB01",159,0)
 ..  I $G(HL)=I D
"RTN","PRSLIB01",160,0)
 ...   S BLDTAB=(PPOFFSET+((DAYPOS+1)*(4)-$S($L(I)=2:1,1:0)))
"RTN","PRSLIB01",161,0)
 ...   W ?BLDTAB,IORVON,I,IORVOFF
"RTN","PRSLIB01",162,0)
 ...   S BLDTAB=($X-BLDTAB)-$L(I)
"RTN","PRSLIB01",163,0)
 ...;   S BLDTAB=($X-BLDTAB)-1
"RTN","PRSLIB01",164,0)
 ...   S CNTDWN=6-DAYPOS
"RTN","PRSLIB01",165,0)
 ..  E  D
"RTN","PRSLIB01",166,0)
 ...   W ?(BLDTAB+(PPOFFSET+((DAYPOS+1)*(4)-$S($L(I)=2:1,1:0)))),I
"RTN","PRSLIB01",167,0)
 ...   S CNTDWN=CNTDWN-1
"RTN","PRSLIB01",168,0)
 . E  D
"RTN","PRSLIB01",169,0)
 ..  W ?(PPOFFSET+((DAYPOS+1)*(4)-$S($L(I)=2:1,1:0))),I
"RTN","PRSLIB01",170,0)
 Q
"RTN","PRSLIB01",171,0)
 ;= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
"RTN","PRSLIB01",172,0)
 ;=======================
"RTN","PRSLIB01",173,0)
 ;
"RTN","PRSLIB01",174,0)
ASKJULIA() ;RETURN RESPONSE--DO YOU WANT A CALENDAR A with dates
"RTN","PRSLIB01",175,0)
 ; expressed as the number of days elapsed since January 1?
"RTN","PRSLIB01",176,0)
 N DIR,DIRUT,Y
"RTN","PRSLIB01",177,0)
 W !!
"RTN","PRSLIB01",178,0)
 S DIR("A")="Include Calendar with elapsed days since Jan 1."
"RTN","PRSLIB01",179,0)
 S DIR(0)="Y"
"RTN","PRSLIB01",180,0)
 S DIR("B")="Y"
"RTN","PRSLIB01",181,0)
 S DIR("?",1)="Hit return to display a calendar with dates expressed as"
"RTN","PRSLIB01",182,0)
 S DIR("?",2)="the number of days elapsed since January 1."
"RTN","PRSLIB01",183,0)
 S DIR("?",3)="Days are numbered sequentially from 1 to 365 or 366 in a"
"RTN","PRSLIB01",184,0)
 S DIR("?",4)="leap year.  January 1st is day number 1 and December 31st"
"RTN","PRSLIB01",185,0)
 S DIR("?",5)="is day 365 in a non leap year.  This calendar is often"
"RTN","PRSLIB01",186,0)
 S DIR("?",6)="(but incorrectly), called a Julian Calendar."
"RTN","PRSLIB01",187,0)
 S DIR("?",7)="------------------------------------------------------"
"RTN","PRSLIB01",188,0)
 S DIR("?",8)="Julian Calendar"
"RTN","PRSLIB01",189,0)
 S DIR("?",9)="==============="
"RTN","PRSLIB01",190,0)
 S DIR("?",10)="  The solar calendar introduced by Julius Caesar in Rome "
"RTN","PRSLIB01",191,0)
 S DIR("?",11)="  in 46 B.C., having a year of 12 months and 365 days and"
"RTN","PRSLIB01",192,0)
 S DIR("?",12)="  a leap year of 366 days every fourth year. It was"
"RTN","PRSLIB01",193,0)
 S DIR("?",13)="  eventually replaced by the Gregorian calendar."
"RTN","PRSLIB01",194,0)
 S DIR("?",14)="------------------------------------------------------"
"RTN","PRSLIB01",195,0)
 S DIR("?")=" Hit return to include the elapsed days calendar."
"RTN","PRSLIB01",196,0)
 D ^DIR
"RTN","PRSLIB01",197,0)
 Q Y
"RTN","PRSLIB01",198,0)
 ;=======================
"RTN","PRSLIB01",199,0)
DISPJULI(DAYNO,NODAYS,JULIAND1) ;
"RTN","PRSLIB01",200,0)
 ; DISPLAY GREGORIAN AND JULIAN CALENDAR SIDE BY SIDE
"RTN","PRSLIB01",201,0)
 ;SAMPLE CALL:  D DISPMO(4,30) Produces a 30 month with day 1
"RTN","PRSLIB01",202,0)
 ;                                 beginning on Wednesday.
"RTN","PRSLIB01",203,0)
 ;
"RTN","PRSLIB01",204,0)
 N DAYS,DAYPOS,I,PPOFFSET
"RTN","PRSLIB01",205,0)
 S PPOFFSET=6
"RTN","PRSLIB01",206,0)
 W !
"RTN","PRSLIB01",207,0)
 F I=1:1:NODAYS D
"RTN","PRSLIB01",208,0)
 . S DAYPOS=(DAYNO+I-1)#7
"RTN","PRSLIB01",209,0)
 . I DAYPOS=0 W ! I $G(PPS(I))'="" W PPS(I)
"RTN","PRSLIB01",210,0)
 . W ?(PPOFFSET+((DAYPOS+1)*4-($L(I+JULIAND1)-1))),I+JULIAND1
"RTN","PRSLIB01",211,0)
 Q
"RTN","PRSLIB01",212,0)
 ;= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
"RTN","PRSLIB01",213,0)
 ;
"RTN","PRSLIB01",214,0)
PAYROLMO(DAYNO,NODAYS) ;PAYROLL STYLE DISPLAY OF ENTIRE MONTH
"RTN","PRSLIB01",215,0)
 ;SAMPLE CALL:  D DISPMO(4,30) Produces a 30 month with day 1
"RTN","PRSLIB01",216,0)
 ;                                 beginning on Wednessday.
"RTN","PRSLIB01",217,0)
 ;
"RTN","PRSLIB01",218,0)
 N DAYS,DAYPOS,I
"RTN","PRSLIB01",219,0)
 S DAYS="SUN MON TUE WED THU FRI SAT"
"RTN","PRSLIB01",220,0)
 W !,"  ",DAYS,!
"RTN","PRSLIB01",221,0)
 F I=1:1:NODAYS D
"RTN","PRSLIB01",222,0)
 . S DAYPOS=(DAYNO+I-1)#7
"RTN","PRSLIB01",223,0)
 . I DAYPOS=0 W !
"RTN","PRSLIB01",224,0)
 . W ?((DAYPOS+1)*(4)-$S($L(I)=2:1,1:0)),I
"RTN","PRSLIB01",225,0)
 Q
"RTN","PRSLIB01",226,0)
DAYSINMO(Y,M) ; Return number of days in month based on year and month
"RTN","PRSLIB01",227,0)
 ;  Input:  Y = year in 4 digit format between 1700 and 3000
"RTN","PRSLIB01",228,0)
 ;          M = month expressed as an integer from 1 to 12 (Jan - Dec)
"RTN","PRSLIB01",229,0)
 ;
"RTN","PRSLIB01",230,0)
 N GOODY,GOODM S (GOODY,GOODM)=0
"RTN","PRSLIB01",231,0)
 I Y<2700,Y>1700 S GOODY=1
"RTN","PRSLIB01",232,0)
 I M>0,M<13 S GOODM=1
"RTN","PRSLIB01",233,0)
 Q:'(GOODM&GOODY) 0
"RTN","PRSLIB01",234,0)
 Q $P("31^"_(28+$$LEAPYR^PRSLIB00(YEAR))_"^31^30^31^30^31^31^30^31^30^31",U,MONTH)
"RTN","PRSLIB01",235,0)
 ;= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
"RTN","PRSLIB01",236,0)
GETJULI(ZFMDATE,YEAR) ;
"RTN","PRSLIB01",237,0)
 N X1,X2
"RTN","PRSLIB01",238,0)
 S X2=YEAR-1700_"0101"
"RTN","PRSLIB01",239,0)
 S X1=ZFMDATE
"RTN","PRSLIB01",240,0)
 D ^%DTC
"RTN","PRSLIB01",241,0)
 Q X
"VER")
8.0^22.0
"BLD",9169,6)
^127
**END**
**END**
