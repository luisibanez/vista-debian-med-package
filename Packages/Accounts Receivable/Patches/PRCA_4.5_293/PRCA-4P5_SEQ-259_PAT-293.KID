Released PRCA*4.5*293 SEQ #259
Extracted from mail message
**KIDS**:PRCA*4.5*293^

**INSTALL NAME**
PRCA*4.5*293
"BLD",8892,0)
PRCA*4.5*293^ACCOUNTS RECEIVABLE^0^3121217^y
"BLD",8892,1,0)
^^34^34^3121217^
"BLD",8892,1,1,0)
The HIPAA 5010 D.0 Level II Phase 2 project includes the following
"BLD",8892,1,2,0)
modifications to the Electronic Payments V. 4.5 application:
"BLD",8892,1,3,0)
 
"BLD",8892,1,4,0)
1. Duplicate Receipt Numbers
"BLD",8892,1,5,0)
   -------------------------
"BLD",8892,1,6,0)
   Modified VistA to create a unique receipt number for the user when
"BLD",8892,1,7,0)
   creating a receipt in order to post payments without manual
"BLD",8892,1,8,0)
   intervention. Previously, it was possible for VistA to create an
"BLD",8892,1,9,0)
   already used receipt number and this would cause the user to re-enter
"BLD",8892,1,10,0)
   data because VistA did not recognize the duplicate receipt number
"BLD",8892,1,11,0)
   until later in the creation of receipt process.
"BLD",8892,1,12,0)
 
"BLD",8892,1,13,0)
2. Manual Receipts - EFT Selection
"BLD",8892,1,14,0)
   -------------------------------
"BLD",8892,1,15,0)
   Modified VistA so that the user is unable to select a MATCHED EFT
"BLD",8892,1,16,0)
   when performing the Manual Match EFT-ERA. Due to this modification the
"BLD",8892,1,17,0)
   user will NOT be able to see or select a MATCHED EFT when using the
"BLD",8892,1,18,0)
   option MANUALLY MATCH EFT-ERA.
"BLD",8892,1,19,0)
 
"BLD",8892,1,20,0)
   Once the match is made, the EFT will NOT be listed on the Unmatched
"BLD",8892,1,21,0)
   Aging Report.
"BLD",8892,1,22,0)
 
"BLD",8892,1,23,0)
3. EFT Unmatched Aging Report & ERA Unmatched Aging Reports
"BLD",8892,1,24,0)
   --------------------------------------------------------
"BLD",8892,1,25,0)
   Modified VistA so that only non-duplicate EFTs that are unmatched and
"BLD",8892,1,26,0)
   have a payment amount greater than zero appear on the EFT Unmatched
"BLD",8892,1,27,0)
   Aging Report.  VistA was also modified so that only non-duplicate ERAs
"BLD",8892,1,28,0)
   that are unmatched and have a payment amount greater than zero appear
"BLD",8892,1,29,0)
   on the ERA Unmatched Aging Report.
"BLD",8892,1,30,0)
 
"BLD",8892,1,31,0)
4. Unapplied EFT Deposit Report
"BLD",8892,1,32,0)
   ---------------------------
"BLD",8892,1,33,0)
   Modified VistA to prevent duplicate EFTs from displaying on the
"BLD",8892,1,34,0)
   Unapplied EFT Deposit Report. 
"BLD",8892,4,0)
^9.64PA^^0
"BLD",8892,6.3)
15
"BLD",8892,"ABPKG")
n
"BLD",8892,"KRN",0)
^9.67PA^779.2^20
"BLD",8892,"KRN",.4,0)
.4
"BLD",8892,"KRN",.401,0)
.401
"BLD",8892,"KRN",.402,0)
.402
"BLD",8892,"KRN",.403,0)
.403
"BLD",8892,"KRN",.5,0)
.5
"BLD",8892,"KRN",.84,0)
.84
"BLD",8892,"KRN",3.6,0)
3.6
"BLD",8892,"KRN",3.8,0)
3.8
"BLD",8892,"KRN",9.2,0)
9.2
"BLD",8892,"KRN",9.8,0)
9.8
"BLD",8892,"KRN",9.8,"NM",0)
^9.68A^7^5
"BLD",8892,"KRN",9.8,"NM",1,0)
RCDPUREC^^0^B76306195
"BLD",8892,"KRN",9.8,"NM",4,0)
RCDPEAR2^^0^B63768101
"BLD",8892,"KRN",9.8,"NM",5,0)
RCDPEM2^^0^B188791112
"BLD",8892,"KRN",9.8,"NM",6,0)
RCDPEAR1^^0^B126108337
"BLD",8892,"KRN",9.8,"NM",7,0)
RCDPE8NZ^^0^B56342604
"BLD",8892,"KRN",9.8,"NM","B","RCDPE8NZ",7)

"BLD",8892,"KRN",9.8,"NM","B","RCDPEAR1",6)

"BLD",8892,"KRN",9.8,"NM","B","RCDPEAR2",4)

"BLD",8892,"KRN",9.8,"NM","B","RCDPEM2",5)

"BLD",8892,"KRN",9.8,"NM","B","RCDPUREC",1)

"BLD",8892,"KRN",19,0)
19
"BLD",8892,"KRN",19,"NM",0)
^9.68A^^0
"BLD",8892,"KRN",19.1,0)
19.1
"BLD",8892,"KRN",101,0)
101
"BLD",8892,"KRN",409.61,0)
409.61
"BLD",8892,"KRN",771,0)
771
"BLD",8892,"KRN",779.2,0)
779.2
"BLD",8892,"KRN",870,0)
870
"BLD",8892,"KRN",8989.51,0)
8989.51
"BLD",8892,"KRN",8989.52,0)
8989.52
"BLD",8892,"KRN",8994,0)
8994
"BLD",8892,"KRN","B",.4,.4)

"BLD",8892,"KRN","B",.401,.401)

"BLD",8892,"KRN","B",.402,.402)

"BLD",8892,"KRN","B",.403,.403)

"BLD",8892,"KRN","B",.5,.5)

"BLD",8892,"KRN","B",.84,.84)

"BLD",8892,"KRN","B",3.6,3.6)

"BLD",8892,"KRN","B",3.8,3.8)

"BLD",8892,"KRN","B",9.2,9.2)

"BLD",8892,"KRN","B",9.8,9.8)

"BLD",8892,"KRN","B",19,19)

"BLD",8892,"KRN","B",19.1,19.1)

"BLD",8892,"KRN","B",101,101)

"BLD",8892,"KRN","B",409.61,409.61)

"BLD",8892,"KRN","B",771,771)

"BLD",8892,"KRN","B",779.2,779.2)

"BLD",8892,"KRN","B",870,870)

"BLD",8892,"KRN","B",8989.51,8989.51)

"BLD",8892,"KRN","B",8989.52,8989.52)

"BLD",8892,"KRN","B",8994,8994)

"BLD",8892,"QUES",0)
^9.62^^
"BLD",8892,"REQB",0)
^9.611^2^2
"BLD",8892,"REQB",1,0)
PRCA*4.5*222^1
"BLD",8892,"REQB",2,0)
PRCA*4.5*283^1
"BLD",8892,"REQB","B","PRCA*4.5*222",1)

"BLD",8892,"REQB","B","PRCA*4.5*283",2)

"MBREQ")
0
"PKG",53,-1)
1^1
"PKG",53,0)
ACCOUNTS RECEIVABLE^PRCA^FMS
"PKG",53,20,0)
^9.402P^^0
"PKG",53,22,0)
^9.49I^1^1
"PKG",53,22,1,0)
4.5^2950913^2960627
"PKG",53,22,1,"PAH",1,0)
293^3121217
"PKG",53,22,1,"PAH",1,1,0)
^^34^34^3121217
"PKG",53,22,1,"PAH",1,1,1,0)
The HIPAA 5010 D.0 Level II Phase 2 project includes the following
"PKG",53,22,1,"PAH",1,1,2,0)
modifications to the Electronic Payments V. 4.5 application:
"PKG",53,22,1,"PAH",1,1,3,0)
 
"PKG",53,22,1,"PAH",1,1,4,0)
1. Duplicate Receipt Numbers
"PKG",53,22,1,"PAH",1,1,5,0)
   -------------------------
"PKG",53,22,1,"PAH",1,1,6,0)
   Modified VistA to create a unique receipt number for the user when
"PKG",53,22,1,"PAH",1,1,7,0)
   creating a receipt in order to post payments without manual
"PKG",53,22,1,"PAH",1,1,8,0)
   intervention. Previously, it was possible for VistA to create an
"PKG",53,22,1,"PAH",1,1,9,0)
   already used receipt number and this would cause the user to re-enter
"PKG",53,22,1,"PAH",1,1,10,0)
   data because VistA did not recognize the duplicate receipt number
"PKG",53,22,1,"PAH",1,1,11,0)
   until later in the creation of receipt process.
"PKG",53,22,1,"PAH",1,1,12,0)
 
"PKG",53,22,1,"PAH",1,1,13,0)
2. Manual Receipts - EFT Selection
"PKG",53,22,1,"PAH",1,1,14,0)
   -------------------------------
"PKG",53,22,1,"PAH",1,1,15,0)
   Modified VistA so that the user is unable to select a MATCHED EFT
"PKG",53,22,1,"PAH",1,1,16,0)
   when performing the Manual Match EFT-ERA. Due to this modification the
"PKG",53,22,1,"PAH",1,1,17,0)
   user will NOT be able to see or select a MATCHED EFT when using the
"PKG",53,22,1,"PAH",1,1,18,0)
   option MANUALLY MATCH EFT-ERA.
"PKG",53,22,1,"PAH",1,1,19,0)
 
"PKG",53,22,1,"PAH",1,1,20,0)
   Once the match is made, the EFT will NOT be listed on the Unmatched
"PKG",53,22,1,"PAH",1,1,21,0)
   Aging Report.
"PKG",53,22,1,"PAH",1,1,22,0)
 
"PKG",53,22,1,"PAH",1,1,23,0)
3. EFT Unmatched Aging Report & ERA Unmatched Aging Reports
"PKG",53,22,1,"PAH",1,1,24,0)
   --------------------------------------------------------
"PKG",53,22,1,"PAH",1,1,25,0)
   Modified VistA so that only non-duplicate EFTs that are unmatched and
"PKG",53,22,1,"PAH",1,1,26,0)
   have a payment amount greater than zero appear on the EFT Unmatched
"PKG",53,22,1,"PAH",1,1,27,0)
   Aging Report.  VistA was also modified so that only non-duplicate ERAs
"PKG",53,22,1,"PAH",1,1,28,0)
   that are unmatched and have a payment amount greater than zero appear
"PKG",53,22,1,"PAH",1,1,29,0)
   on the ERA Unmatched Aging Report.
"PKG",53,22,1,"PAH",1,1,30,0)
 
"PKG",53,22,1,"PAH",1,1,31,0)
4. Unapplied EFT Deposit Report
"PKG",53,22,1,"PAH",1,1,32,0)
   ---------------------------
"PKG",53,22,1,"PAH",1,1,33,0)
   Modified VistA to prevent duplicate EFTs from displaying on the
"PKG",53,22,1,"PAH",1,1,34,0)
   Unapplied EFT Deposit Report. 
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","RCDPE8NZ")
0^7^B56342604^B55534071
"RTN","RCDPE8NZ",1,0)
RCDPE8NZ ;ALB/TMK/KML - Unapplied EFT Deposits report ;19 MAR 2003
"RTN","RCDPE8NZ",2,0)
 ;;4.5;Accounts Receivable;**173,212,208,269,276,283,293**;Mar 20, 1995;Build 15
"RTN","RCDPE8NZ",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","RCDPE8NZ",4,0)
 ;
"RTN","RCDPE8NZ",5,0)
EN ; entrypoint for stand-alone report option
"RTN","RCDPE8NZ",6,0)
 N %ZIS,ZTRTN,ZTSAVE,ZTDESC,POP,ZTSK,DIR,X,Y,RCDISPTY,RCSTDT,RCENDT
"RTN","RCDPE8NZ",7,0)
 S DIR("A")="START DATE: "
"RTN","RCDPE8NZ",8,0)
 S DIR(0)="DOA^:"_DT_":AEP" W ! D ^DIR K DIR
"RTN","RCDPE8NZ",9,0)
 Q:Y=""  Q:$D(DUOUT)!$D(DTOUT)
"RTN","RCDPE8NZ",10,0)
 S RCSTDT=+Y
"RTN","RCDPE8NZ",11,0)
 S DIR("A")="END DATE: "
"RTN","RCDPE8NZ",12,0)
 S DIR("B")=Y(0)
"RTN","RCDPE8NZ",13,0)
 S DIR(0)="DAO^"_RCSTDT_":"_DT_":APE" W ! D ^DIR K DIR
"RTN","RCDPE8NZ",14,0)
 Q:$D(DUOUT)!$D(DTOUT)
"RTN","RCDPE8NZ",15,0)
 S RCENDT=+Y
"RTN","RCDPE8NZ",16,0)
 ; ask if export to excel format is wanted
"RTN","RCDPE8NZ",17,0)
 S RCDISPTY=$$DISPTY^RCDPEM3()
"RTN","RCDPE8NZ",18,0)
 I RCDISPTY=-1 Q
"RTN","RCDPE8NZ",19,0)
 I RCDISPTY D INFO^RCDPEM6
"RTN","RCDPE8NZ",20,0)
 ; Ask device
"RTN","RCDPE8NZ",21,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPE8NZ",22,0)
 I $D(IO("Q")) D  Q
"RTN","RCDPE8NZ",23,0)
 . S ZTRTN="PR^RCDPE8NZ",ZTDESC="AR - List of unlinked EFT deposit payments"
"RTN","RCDPE8NZ",24,0)
 . S ZTSAVE("RC*")=""
"RTN","RCDPE8NZ",25,0)
 . D ^%ZTLOAD
"RTN","RCDPE8NZ",26,0)
 . W !!,$S($D(ZTSK):"Your task number "_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPE8NZ",27,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPE8NZ",28,0)
 U IO
"RTN","RCDPE8NZ",29,0)
 D PR
"RTN","RCDPE8NZ",30,0)
 Q
"RTN","RCDPE8NZ",31,0)
 ;
"RTN","RCDPE8NZ",32,0)
PR ; Entrypoint for queued job
"RTN","RCDPE8NZ",33,0)
 N RCCT,RCPG,RCEFT,RCEFT1,RCDATA,RCDATA0,RCDA,RCREC,RCSTAT,RCDT,RCTOT,RCEFTD,RCSTOP,RCRDT
"RTN","RCDPE8NZ",34,0)
 N Z,RCSUM,RCUNAP,RCPOST,RCTR,RCCR,ZTSTOP,RECEXT
"RTN","RCDPE8NZ",35,0)
 ;
"RTN","RCDPE8NZ",36,0)
 ;  get list of unlinked EFT deposit data
"RTN","RCDPE8NZ",37,0)
 K ^TMP("RCDPE8NZZ_EFT",$J) ; subscripts: dep date,EFT ien,EFT det ien
"RTN","RCDPE8NZ",38,0)
 ;  Data is FMS doc indicator^FMS doc #^FMS Doc Status
"RTN","RCDPE8NZ",39,0)
 ;    FMS doc indicator = -1:no receipt  -2:no FMS doc  1:FMS doc exists
"RTN","RCDPE8NZ",40,0)
 ;
"RTN","RCDPE8NZ",41,0)
 S (RCCT,RCSTOP,RCSUM,RCUNAP)=0
"RTN","RCDPE8NZ",42,0)
 S RCEFT1="" F  S RCEFT1=$O(^RCY(344.3,"ARDEP",RCEFT1)) Q:RCEFT1=""!RCSTOP  S RCDA=0 F  S RCDA=$O(^RCY(344.3,"ARDEP",RCEFT1,RCDA)) Q:'RCDA  D  Q:RCSTOP
"RTN","RCDPE8NZ",43,0)
 . S RCDATA=$G(^RCY(344.3,RCDA,0)),RCDT=$P(RCDATA,U,7),RCTOT=0
"RTN","RCDPE8NZ",44,0)
 . Q:RCDT<RCSTDT  ; Before start date
"RTN","RCDPE8NZ",45,0)
 . Q:RCDT>(RCENDT+.999999)  ; After the end date
"RTN","RCDPE8NZ",46,0)
 . Q:'$P(RCDATA,"^",8)  ; no payment amt
"RTN","RCDPE8NZ",47,0)
 . S RCEFT=0 F  S RCEFT=$O(^RCY(344.31,"B",RCDA,RCEFT)) Q:'RCEFT!RCSTOP  S RCDATA0=$G(^RCY(344.31,RCEFT,0)) D  Q:RCSTOP
"RTN","RCDPE8NZ",48,0)
 . . S RCCT=RCCT+1
"RTN","RCDPE8NZ",49,0)
 . . I '(RCCT#100),$D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ Q
"RTN","RCDPE8NZ",50,0)
 . . Q:$P($G(^RCY(344.31,RCEFT,3)),U)        ; EFT has been removed   PRCA*4.5*293
"RTN","RCDPE8NZ",51,0)
 . . S RCREC=$$GETREC(RCEFT,RCDATA0,.RECEXT)
"RTN","RCDPE8NZ",52,0)
 . . Q:RCREC="PURGED"  ; need to prevent processed EFTs that had receipts purged from being generated on the report
"RTN","RCDPE8NZ",53,0)
 . . ;; PRCA276 - need to add EFT entries without a receipt to the total number of unapplied deposits
"RTN","RCDPE8NZ",54,0)
 . . I 'RCREC S RCUNAP=RCUNAP+1,^TMP("RCDPE8NZZ_EFT",$J,RCDT,RCDA,RCEFT)=-1,RCTOT=RCTOT+$P(RCDATA0,U,7) Q  ; No receipt therefore no FMS document
"RTN","RCDPE8NZ",55,0)
 . . S RCSTAT=$$FMSSTAT^RCDPUREC(RCREC)
"RTN","RCDPE8NZ",56,0)
 . . I $E($P(RCSTAT,U),1,2)="TR",$P(RCSTAT,U,2)["ACCEPTED" Q
"RTN","RCDPE8NZ",57,0)
 . . S RCUNAP=RCUNAP+1,RCTOT=RCTOT+$P(RCDATA0,U,7)  ; total unapplied deposits and total dollar amount of unapplied deposits
"RTN","RCDPE8NZ",58,0)
 . . I $P(RCSTAT,U,2)="NOT ENTERED" S ^TMP("RCDPE8NZZ_EFT",$J,RCDT,RCDA,RCEFT)="-2^^"_$P(RCSTAT,U) Q  ; No FMS doc
"RTN","RCDPE8NZ",59,0)
 . . S ^TMP("RCDPE8NZZ_EFT",$J,RCDT,RCDA,RCEFT)="1^"_$P(RCSTAT,U,1,2)_"^"_RECEXT
"RTN","RCDPE8NZ",60,0)
 . S:RCTOT ^TMP("RCDPE8NZZ_EFT",$J,RCDT,RCDA)=RCTOT,RCSUM=RCSUM+RCTOT
"RTN","RCDPE8NZ",61,0)
 I RCDISPTY D EXCEL Q
"RTN","RCDPE8NZ",62,0)
 D RPT
"RTN","RCDPE8NZ",63,0)
 Q
"RTN","RCDPE8NZ",64,0)
 ;
"RTN","RCDPE8NZ",65,0)
RPT ;  display/print the report using data populated in temporary global array
"RTN","RCDPE8NZ",66,0)
 S (RCPG,RCDT)=0,RCRDT=$$FMTE^XLFDT($$NOW^XLFDT(),2)
"RTN","RCDPE8NZ",67,0)
 F  S RCDT=$O(^TMP("RCDPE8NZZ_EFT",$J,RCDT)) Q:'RCDT  D  Q:RCSTOP
"RTN","RCDPE8NZ",68,0)
 . I 'RCPG!(($Y+5)>IOSL) D HDR(RCRDT,.RCPG,.RCSTOP) Q:RCSTOP
"RTN","RCDPE8NZ",69,0)
 . W ! S Z="DEPOSIT DATE: "_$$FMTE^XLFDT(RCDT,1) W ?(80-$L(Z)\2),Z,!
"RTN","RCDPE8NZ",70,0)
 . S RCEFT1=0 F  S RCEFT1=$O(^TMP("RCDPE8NZZ_EFT",$J,RCDT,RCEFT1)) Q:'RCEFT1  D
"RTN","RCDPE8NZ",71,0)
 . . S RCCT=RCCT+1
"RTN","RCDPE8NZ",72,0)
 . . I '(RCCT#100),$D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 W:$G(RCPG) !!,"TASK STOPPED BY USER!!" K ZTREQ Q
"RTN","RCDPE8NZ",73,0)
 . . S RCDATA0=$G(^RCY(344.3,RCEFT1,0))
"RTN","RCDPE8NZ",74,0)
 . . I ($Y+5)>IOSL D HDR(RCRDT,.RCPG,.RCSTOP) Q:RCSTOP
"RTN","RCDPE8NZ",75,0)
 . . ; PRCA*4.5*283 - Change the spaces for DEP # from 10 to 13 to allow 9 digit DEP #
"RTN","RCDPE8NZ",76,0)
 . . W !,$J("",4),$E($P(RCDATA0,U,6)_$S('$$HACEFT^RCDPEU(RCEFT1):"",1:"-HAC")_$J("",13),1,13)_"  "_$E($$FMTE^XLFDT($P(RCDATA0,U,7),2)_$J("",16),1,16)_"  "_$E($J(+$P(RCDATA0,U,8),"",2)_$J("",20),1,20)
"RTN","RCDPE8NZ",77,0)
 . . W "  "_$J(+$G(^TMP("RCDPE8NZZ_EFT",$J,RCDT,RCEFT1)),"",2)
"RTN","RCDPE8NZ",78,0)
 . . S RCEFT=0 F  S RCEFT=$O(^TMP("RCDPE8NZZ_EFT",$J,RCDT,RCEFT1,RCEFT)) Q:'RCEFT  S RCDATA=$G(^(RCEFT)),RCEFTD=$G(^RCY(344.31,RCEFT,0)) D
"RTN","RCDPE8NZ",79,0)
 . . . I ($Y+5)>IOSL D HDR(RCRDT,.RCPG,.RCSTOP) Q:RCSTOP
"RTN","RCDPE8NZ",80,0)
 . . . W !,$J("",5)_$P(RCEFTD,U,2)_"/"_$P(RCEFTD,U,3),!,$J("",6)_$E($P(RCEFTD,U,4)_$J("",50),1,50)_" "
"RTN","RCDPE8NZ",81,0)
 . . . W $E($J(+$P(RCEFTD,U,7),"",2)_$J("",12),1,12)_" "_$S($P(RCDATA,U,4)'="":$P(RCDATA,U,4),1:"NO RECEIPT")
"RTN","RCDPE8NZ",82,0)
 . . . S Z=$P(RCEFTD,U,8)
"RTN","RCDPE8NZ",83,0)
 . . . W !,$J("",8)_$E($S('Z:"UNMATCHED",Z=2:"PAPER EOB",1:"MATCHED TO ERA #: "_$P(RCEFTD,U,10)_$S(Z=-1:" (TOTALS MISMATCH)",1:""))_$J("",40),1,40)_"  "
"RTN","RCDPE8NZ",84,0)
 . . . W $S($P(RCDATA,U)=-1:"NO RECEIPT",$P(RCDATA,U)=-2:"NO FMS DOCUMENT",1:$E($P(RCDATA,U,2)_" - "_$P(RCDATA,U,3),1,30)),!
"RTN","RCDPE8NZ",85,0)
 I '$D(^TMP("RCDPE8NZZ_EFT",$J)) D HDR(RCRDT,.RCPG,.RCSTOP) W !!!,?26,"*** NO RECORDS TO PRINT ***"
"RTN","RCDPE8NZ",86,0)
 I $D(^TMP("RCDPE8NZZ_EFT",$J)) W !,"******** END OF REPORT ********",!
"RTN","RCDPE8NZ",87,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPE8NZ",88,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPE8NZ",89,0)
 G:RCSTOP RPTQ
"RTN","RCDPE8NZ",90,0)
 I $E(IOST,1,2)="C-" D ASK(.RCSTOP)
"RTN","RCDPE8NZ",91,0)
 ;
"RTN","RCDPE8NZ",92,0)
RPTQ K ^TMP("RCDPE8NZZ_EFT",$J)
"RTN","RCDPE8NZ",93,0)
 Q
"RTN","RCDPE8NZ",94,0)
 ;
"RTN","RCDPE8NZ",95,0)
GETREC(EFTDA,EFTDET,RECEXT) ;  prca276
"RTN","RCDPE8NZ",96,0)
 ; input - EFTDA - IEN OF 344.31
"RTN","RCDPE8NZ",97,0)
 ; input - EFTDET - data stored at the 0 subscript of the THIRD PARTY EFT DETAIL file (344.31)
"RTN","RCDPE8NZ",98,0)
 ; input - RECEXT passed by reference
"RTN","RCDPE8NZ",99,0)
 ; output - RECEXT populated with the external receipt value that gets generated on the report
"RTN","RCDPE8NZ",100,0)
 ; output - RECEIPT - returns internal value of the receipt that either comes from the EFT file (344.31) or the ERA file (344.4) 
"RTN","RCDPE8NZ",101,0)
 N RECEIPT
"RTN","RCDPE8NZ",102,0)
 S RECEXT=0
"RTN","RCDPE8NZ",103,0)
 S RECEIPT=+$P($G(^RCY(344.4,+$P(EFTDET,U,10),0)),U,8)  ; get receipt off the ERA record
"RTN","RCDPE8NZ",104,0)
 I 'RECEIPT,$P(EFTDET,U,8)=2 S RECEIPT=+$O(^RCY(344,"AEFT",EFTDA,0))  ; EFT processed against paper EOB
"RTN","RCDPE8NZ",105,0)
 I 'RECEIPT S RECEIPT=$P(EFTDET,U,9) ; receipt not posted in payment file so get from EFT detail (unprocessed EFT)
"RTN","RCDPE8NZ",106,0)
 I +RECEIPT,'$D(^RCY(344,RECEIPT)) Q "PURGED"  ; handle purged receipts but broken pointer exists in 344.31; need to handle as a processed EFT 
"RTN","RCDPE8NZ",107,0)
 I +RECEIPT S RECEXT=$P(^RCY(344,RECEIPT,0),U)
"RTN","RCDPE8NZ",108,0)
 Q +RECEIPT
"RTN","RCDPE8NZ",109,0)
 ;
"RTN","RCDPE8NZ",110,0)
HDR(RCRDT,RCPG,RCSTOP) ; Print header data
"RTN","RCDPE8NZ",111,0)
 N Z0
"RTN","RCDPE8NZ",112,0)
 I 'RCSTOP,RCPG D ASK(.RCSTOP) Q:RCSTOP
"RTN","RCDPE8NZ",113,0)
 I RCPG!($E(IOST,1,2)="C-") W @IOF,*13
"RTN","RCDPE8NZ",114,0)
 S RCPG=RCPG+1
"RTN","RCDPE8NZ",115,0)
 S Z0="Unapplied EFT Deposits Report",Z0=$J("",80-$L(Z0)\2)_Z0 W !,Z0 W ?70,"Page: ",RCPG
"RTN","RCDPE8NZ",116,0)
 S Z0="Run Date: "_RCRDT,Z0=$J("",80-$L(Z0)\2)_Z0 W !,Z0
"RTN","RCDPE8NZ",117,0)
 S Z0="Date Range: "_$$FMTE^XLFDT(RCSTDT,2)_" - "_$$FMTE^XLFDT(RCENDT,2)_" (Deposit Date)",Z0=$J("",80-$L(Z0)\2)_Z0 W !,Z0
"RTN","RCDPE8NZ",118,0)
 I RCPG=1 D
"RTN","RCDPE8NZ",119,0)
 . S Z0="TOTAL NUMBER OF UNAPPLIED DEPOSITS: "_RCUNAP,Z0=$J("",80-$L(Z0)\2)_Z0 W !,Z0
"RTN","RCDPE8NZ",120,0)
 . S Z0="TOTAL AMOUNT OF UNAPPLIED DEPOSITS: $"_$FN(RCSUM,",",2),Z0=$J("",80-$L(Z0)\2)_Z0 W !,Z0,!
"RTN","RCDPE8NZ",121,0)
 ; PRCA*4.5*283 - Add 3 more spaces between DEPOSIT # and DEPOSIT DATE
"RTN","RCDPE8NZ",122,0)
 ; to allow for 9 digit DEPOSIT #'s
"RTN","RCDPE8NZ",123,0)
 W !!,"    DEPOSIT #      DEPOSIT DATE      TOT AMT OF DEPOSIT    TOT AMT UNPOSTED"
"RTN","RCDPE8NZ",124,0)
 W !,"     PAYER/ID",!,$J("",6)_"TRACE #"_$J("",44)_"PAYMENT AMT  RECEIPT #",!,$J("",8)_$E("ERA MATCHED"_$J("",40),1,40)_"  FMS DOC #/STATUS"
"RTN","RCDPE8NZ",125,0)
 W !,$TR($J("",IOM)," ","=")
"RTN","RCDPE8NZ",126,0)
 Q
"RTN","RCDPE8NZ",127,0)
 ;
"RTN","RCDPE8NZ",128,0)
ASK(RCSTOP) ;
"RTN","RCDPE8NZ",129,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPE8NZ",130,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPE8NZ",131,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPE8NZ",132,0)
 I ($D(DIRUT))!($D(DUOUT)) S RCSTOP=1 Q
"RTN","RCDPE8NZ",133,0)
 Q
"RTN","RCDPE8NZ",134,0)
 ;
"RTN","RCDPE8NZ",135,0)
EXCEL ; Print report formatted for export to Excel
"RTN","RCDPE8NZ",136,0)
 N STR1
"RTN","RCDPE8NZ",137,0)
 W !,"DEPOSIT #^DEPOSIT DATE^TOT AMT DEPOSIT^TOT AMT UNPOSTED^PAYER ID^TRACE #^PAYMENT AMT^RECEIPT #^ERA MATCHED^FMS DOC #/STATUS",!
"RTN","RCDPE8NZ",138,0)
 S RCDT=0 F  S RCDT=$O(^TMP("RCDPE8NZZ_EFT",$J,RCDT)) Q:'RCDT  D  Q:RCSTOP
"RTN","RCDPE8NZ",139,0)
 .S RCEFT1=0 F  S RCEFT1=$O(^TMP("RCDPE8NZZ_EFT",$J,RCDT,RCEFT1)) Q:'RCEFT1  D
"RTN","RCDPE8NZ",140,0)
 ..S RCDATA0=$G(^RCY(344.3,RCEFT1,0))
"RTN","RCDPE8NZ",141,0)
 ..S STR1=$P(RCDATA0,U,6)_$S('$$HACEFT^RCDPEU(RCEFT1):"",1:"-HAC")_U_$$FMTE^XLFDT($P(RCDATA0,U,7))_U_$P(RCDATA0,U,8)_U
"RTN","RCDPE8NZ",142,0)
 ..S STR1=STR1_+$G(^TMP("RCDPE8NZZ_EFT",$J,RCDT,RCEFT1))_U
"RTN","RCDPE8NZ",143,0)
 ..;
"RTN","RCDPE8NZ",144,0)
 ..S RCEFT=0 F  S RCEFT=$O(^TMP("RCDPE8NZZ_EFT",$J,RCDT,RCEFT1,RCEFT)) Q:'RCEFT  S RCDATA=$G(^(RCEFT)),RCEFTD=$G(^RCY(344.31,RCEFT,0)) D
"RTN","RCDPE8NZ",145,0)
 ...W STR1
"RTN","RCDPE8NZ",146,0)
 ...W $P(RCEFTD,U,2)_"/"_$P(RCEFTD,U,3)_U_$P(RCEFTD,U,4)_U
"RTN","RCDPE8NZ",147,0)
 ...W +$P(RCEFTD,U,7)_U_$S($P(RCDATA,U,4)'="":$P(RCDATA,U,4),1:"NO RECEIPT")_U
"RTN","RCDPE8NZ",148,0)
 ...W $P(RCEFTD,U,10)_U
"RTN","RCDPE8NZ",149,0)
 ...W $S($P(RCDATA,U)=-1:"NO RECEIPT",$P(RCDATA,U)=-2:"NO FMS DOCUMENT",1:$P(RCDATA,U,2)_" - "_$P(RCDATA,U,3))
"RTN","RCDPE8NZ",150,0)
 ...W !
"RTN","RCDPE8NZ",151,0)
 Q
"RTN","RCDPEAR1")
0^6^B126108337^B125070101
"RTN","RCDPEAR1",1,0)
RCDPEAR1 ;ALB/TMK/PJH - ELECTRONIC ERA AGING REPORT - FILE 344.4 ;31-OCT-02
"RTN","RCDPEAR1",2,0)
 ;;4.5;Accounts Receivable;**173,269,276,284,293**;Mar 20, 1995;Build 15
"RTN","RCDPEAR1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","RCDPEAR1",4,0)
 Q
"RTN","RCDPEAR1",5,0)
 ;
"RTN","RCDPEAR1",6,0)
EN1 ; Entry from option - run on the fly
"RTN","RCDPEAR1",7,0)
 N RCIND,RCDISPTY,RCEND,RCRANGE,RCNP,RCJOB,RCSTART,RCJOB1
"RTN","RCDPEAR1",8,0)
 N %ZIS,ZTSK,ZTSTOP,ZTDESC,ZTSAVE,ZTQUEUED,ZTRTN,POP,VAUTD,RCBAL,RCNP1
"RTN","RCDPEAR1",9,0)
 S RCIND=1
"RTN","RCDPEAR1",10,0)
 D DIVISION^VAUTOMA
"RTN","RCDPEAR1",11,0)
 I 'VAUTD&($D(VAUTD)'=11) G EN1Q
"RTN","RCDPEAR1",12,0)
 S RCRANGE=$$DTRNG^RCDPEM4()
"RTN","RCDPEAR1",13,0)
 I RCRANGE=0 G EN1Q
"RTN","RCDPEAR1",14,0)
 I $P(RCRANGE,U,1) S RCSTART=$P(RCRANGE,U,2),RCEND=$P(RCRANGE,U,3)
"RTN","RCDPEAR1",15,0)
 ;Get insurance company to be used as filter
"RTN","RCDPEAR1",16,0)
 ; PRCA*4.5*284 - RCDPEM9 now return a stack in RCNP (Type of Response(1=Range,2=All,3=Specific)^From Range^Thru Range)
"RTN","RCDPEAR1",17,0)
 S RCNP=$$GETPAY^RCDPEM9(344.4)
"RTN","RCDPEAR1",18,0)
 I +RCNP=-1 G EN1Q
"RTN","RCDPEAR1",19,0)
 ; Get Zero Balance Filter
"RTN","RCDPEAR1",20,0)
 S RCBAL=$$RCBAL() I RCBAL=-1 G EN1Q
"RTN","RCDPEAR1",21,0)
 S RCDISPTY=$$DISPTY^RCDPEM3() I RCDISPTY=-1 G EN1Q
"RTN","RCDPEAR1",22,0)
 I RCDISPTY D INFO^RCDPEM6
"RTN","RCDPEAR1",23,0)
 S:$D(VAUTD)=11&(VAUTD'=1) RCIND=RCIND+1
"RTN","RCDPEAR1",24,0)
 S:$P($G(RCRANGE),U)>0 RCIND=RCIND+3
"RTN","RCDPEAR1",25,0)
 S:$D(^TMP("RCSELPAY",$J))&(+RCNP=1) RCIND=RCIND+5
"RTN","RCDPEAR1",26,0)
 I $D(DUOUT)!$D(DTOUT) G EN1Q
"RTN","RCDPEAR1",27,0)
 S RCJOB=$J
"RTN","RCDPEAR1",28,0)
 ; Ask device
"RTN","RCDPEAR1",29,0)
 S %ZIS="QM" D ^%ZIS G:POP EN1Q
"RTN","RCDPEAR1",30,0)
 I $D(IO("Q")) D  Q
"RTN","RCDPEAR1",31,0)
 .S ZTRTN="RPTOUT^RCDPEAR1",ZTDESC="AR - EDI LOCKBOX ERA AGING REPORT"
"RTN","RCDPEAR1",32,0)
 .S ZTSAVE("*")=""
"RTN","RCDPEAR1",33,0)
 .; PRCA*4.5*284 - Because TMP global may be on another server, save off specific payers in local
"RTN","RCDPEAR1",34,0)
 .I +RCNP=3 M RCNP1=^TMP("RCSELPAY",$J)
"RTN","RCDPEAR1",35,0)
 .D ^%ZTLOAD
"RTN","RCDPEAR1",36,0)
 .W !!,$S($D(ZTSK):"Your task number "_ZTSK_" has been queued.",1:"Unable to queue this $J.")
"RTN","RCDPEAR1",37,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEAR1",38,0)
 U IO
"RTN","RCDPEAR1",39,0)
 D RPTOUT
"RTN","RCDPEAR1",40,0)
EN1Q K ^TMP("RCSELPAY",$J),^TMP("RCPAYER",$J)
"RTN","RCDPEAR1",41,0)
 Q
"RTN","RCDPEAR1",42,0)
 ;
"RTN","RCDPEAR1",43,0)
RPTOUT(RCPRT) ; Entrypoint for queued job, nightly job
"RTN","RCDPEAR1",44,0)
 ; RCPRT = name of the subscript for ^TMP to use to return all lines
"RTN","RCDPEAR1",45,0)
 ;        (for bulletin).  If undefined or null, output is printed
"RTN","RCDPEAR1",46,0)
 ; Return global if RCPRT not null: ^TMP($J,RCPRT,line#)=line text
"RTN","RCDPEAR1",47,0)
 N ERAIEN,RCCT,RCPG,RCSTOP,RCNT,RCDATA,RCOUT,RCEDT,RC0,RC7,RCZ,RCZ0,RCZ1,RC00,RCTOT,Z,Z0,RCPAY
"RTN","RCDPEAR1",48,0)
 N STA,STNUM,STNAM
"RTN","RCDPEAR1",49,0)
 S RCPRT=$G(RCPRT),(RCCT,RCSTOP,RCPG,RCNT,RCTOT)=0
"RTN","RCDPEAR1",50,0)
 K ^TMP($J,"RCERA_AGED"),^TMP($J,"RCERA_ADJ")
"RTN","RCDPEAR1",51,0)
 ; PRCA*4.5*284 - Queued job needs to reload payer selection list
"RTN","RCDPEAR1",52,0)
 I $G(RCJOB)'="",RCJOB'=$J D
"RTN","RCDPEAR1",53,0)
 . K ^TMP("RCSELPAY",$J)
"RTN","RCDPEAR1",54,0)
 . D RLOAD(344.4)
"RTN","RCDPEAR1",55,0)
 . S RCJOB=$J
"RTN","RCDPEAR1",56,0)
 S RCNP=+RCNP
"RTN","RCDPEAR1",57,0)
 I RCPRT'="" K ^TMP($J,RCPRT)
"RTN","RCDPEAR1",58,0)
 S RCZ0=0 F  S RCZ0=$O(^RCY(344.4,"AMATCH",0,RCZ0)) Q:'RCZ0  D
"RTN","RCDPEAR1",59,0)
 .Q:$P($G(RCY(344.4,RCZ0,6)),U)           ; who removed the ERA - PRCA*4.5*293
"RTN","RCDPEAR1",60,0)
 .S RC7=$P($G(^RCY(344.4,RCZ0,0)),U,7)\1  ; era file date/time
"RTN","RCDPEAR1",61,0)
 .; Check Station/Division
"RTN","RCDPEAR1",62,0)
 .;I '$$CHKDIV^RCDPEDAR(RCZ0,1,.VAUTD) Q
"RTN","RCDPEAR1",63,0)
 . I 'VAUTD D ERASTA^RCDPEM4(RCZ0,.STA,.STNUM,.STNAM) I '$D(VAUTD(STA)) Q
"RTN","RCDPEAR1",64,0)
 .; Check for payer match
"RTN","RCDPEAR1",65,0)
 .I '$$CHKPYR^RCDPEDAR(RCZ0,1,RCJOB) Q
"RTN","RCDPEAR1",66,0)
 .; Check date range
"RTN","RCDPEAR1",67,0)
 .I $P(RCRANGE,U,1) D  Q:'ERAIEN
"RTN","RCDPEAR1",68,0)
 ..S ERAIEN=$P($G(^RCY(344.4,RCZ0,0)),U,7)\1
"RTN","RCDPEAR1",69,0)
 .I $P(RCRANGE,U,1) Q:(RCSTART>RC7)!(RC7>RCEND)
"RTN","RCDPEAR1",70,0)
 .; Check for Zero Bal
"RTN","RCDPEAR1",71,0)
 . I 'RCBAL,'+$P($G(^RCY(344.4,RCZ0,0)),U,5) Q
"RTN","RCDPEAR1",72,0)
 .;  - include on report
"RTN","RCDPEAR1",73,0)
 .S ^TMP($J,"RCERA_AGED",$$FMDIFF^XLFDT(RC7,DT),RCZ0)=0,RCNT=RCNT+1
"RTN","RCDPEAR1",74,0)
 ;
"RTN","RCDPEAR1",75,0)
 ; build local payer array here
"RTN","RCDPEAR1",76,0)
 D SELPAY(RCNP,RCJOB,.RCPAY)
"RTN","RCDPEAR1",77,0)
 ; Calculate total amount for ERA
"RTN","RCDPEAR1",78,0)
 ;
"RTN","RCDPEAR1",79,0)
 S RCZ="" F  S RCZ=$O(^TMP($J,"RCERA_AGED",RCZ)) Q:RCZ=""  S RCZ0=0 F  S RCZ0=$O(^TMP($J,"RCERA_AGED",RCZ,RCZ0)) Q:'RCZ0  D
"RTN","RCDPEAR1",80,0)
 .S RC0=$G(^RCY(344.4,RCZ0,0)),RCTOT=RCTOT+$P(RC0,U,5)
"RTN","RCDPEAR1",81,0)
 I RCDISPTY  D HDR(.RCCT,.RCPG,.RCSTOP,RCPRT,RCRANGE,.VAUTD,.RCPAY),EXCEL Q  ; prca 276  
"RTN","RCDPEAR1",82,0)
 ;
"RTN","RCDPEAR1",83,0)
 S RCZ="" F  S RCZ=$O(^TMP($J,"RCERA_AGED",RCZ)) Q:RCZ=""  S RCZ0=0 F  S RCZ0=$O(^TMP($J,"RCERA_AGED",RCZ,RCZ0)) Q:'RCZ0  D  G:RCSTOP PRTQ
"RTN","RCDPEAR1",84,0)
 .I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPG) W:RCPRT="" !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEAR1",85,0)
 .I RCPG D SETLINE(" ",.RCCT,.RCPRT) ; On detail list, skip line
"RTN","RCDPEAR1",86,0)
 .I 'RCPG!(($Y+5)>IOSL) D HDR(.RCCT,.RCPG,.RCSTOP,RCPRT,RCRANGE,.VAUTD,.RCPAY) Q:RCSTOP
"RTN","RCDPEAR1",87,0)
 .S RC0=$G(^RCY(344.4,RCZ0,0)),RCTOT=RCTOT+$P(RC0,U,5)
"RTN","RCDPEAR1",88,0)
 .S Z=$$SETSTR^VALM1($J(-RCZ,4),"",1,4)
"RTN","RCDPEAR1",89,0)
 .S Z=$$SETSTR^VALM1("  "_$P(RC0,U,2),Z,5,50)
"RTN","RCDPEAR1",90,0)
 .D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",91,0)
 .S Z=$$SETSTR^VALM1($P(RC0,U,6)_"/"_$P(RC0,U,3),"",11,69)
"RTN","RCDPEAR1",92,0)
 .S Z=$$SETSTR^VALM1("  "_$$FMTE^XLFDT($P(RC0,U,4),2),Z,70,10)
"RTN","RCDPEAR1",93,0)
 .D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",94,0)
 .S Z=$$SETSTR^VALM1($J("",16)_$S($P(RC0,U,7):$$FMTE^XLFDT($P(RC0,U,7)\1,2),1:""),"",1,25)
"RTN","RCDPEAR1",95,0)
 .S Z=$$SETSTR^VALM1("  "_$J($P(RC0,U,5),15,2),Z,26,17)
"RTN","RCDPEAR1",96,0)
 .S Z=$$SETSTR^VALM1("  "_+$P(RC0,U,11),Z,43,11)
"RTN","RCDPEAR1",97,0)
 .S Z=$$SETSTR^VALM1("  "_$P(RC0,U),Z_$S('$$HACERA^RCDPEU(RCZ0):"",1:" (HAC ERA)"),54,26)
"RTN","RCDPEAR1",98,0)
 .D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",99,0)
 .I "23"[$$ADJ^RCDPEU(RCZ0) D SETLINE($J("",9)_"** CLAIM LEVEL ADJUSTMENTS EXIST FOR THIS ERA ***",.RCCT,RCPRT)
"RTN","RCDPEAR1",100,0)
 .I $O(^RCY(344.4,RCZ0,2,0)) D  ; ERA level adjustments exist
"RTN","RCDPEAR1",101,0)
 ..N Q
"RTN","RCDPEAR1",102,0)
 ..D DISPADJ^RCDPESR8(RCZ0,"^TMP("_$J_",""RCERA_ADJ"")")
"RTN","RCDPEAR1",103,0)
 ..I $O(^TMP($J,"RCERA_ADJ",0)) D SETLINE($J("",9)_"** GENERAL ADJUSTMENT DATA EXISTS FOR ERA **",.RCCT,RCPRT)
"RTN","RCDPEAR1",104,0)
 ..S Q=0 F  S Q=$O(^TMP($J,"RCERA_ADJ",Q)) Q:'Q  D SETLINE($J("",9)_$G(^TMP($J,"RCERA_ADJ",Q)),.RCCT,RCPRT)
"RTN","RCDPEAR1",105,0)
 .;
"RTN","RCDPEAR1",106,0)
 .S RCZ1=0 F  S RCZ1=$O(^RCY(344.4,RCZ0,1,RCZ1)) Q:'RCZ1  S RC00=$G(^(RCZ1,0)) D  Q:RCSTOP
"RTN","RCDPEAR1",107,0)
 ..N D
"RTN","RCDPEAR1",108,0)
 ..K RCDATA,RCOUT
"RTN","RCDPEAR1",109,0)
 ..I ($Y+5)>IOSL D HDR(.RCCT,.RCPG,.RCSTOP,RCPRT,RCRANGE,.VAUTD,.RCPAY) Q:RCSTOP
"RTN","RCDPEAR1",110,0)
 ..S D=$J("",7)_" EEOB Seq #: "_$P(RC00,U)_$S($D(^RCY(344.4,RCZ0,1,"ATB",1,RCZ1)):" (REVERSAL)",1:"")_"  EEOB "
"RTN","RCDPEAR1",111,0)
 ..S D=D_$S('$P(RC00,U,2):"not on file",1:"on file for "_$P($G(^DGCR(399,+$G(^IBM(361.1,+$P(RC00,U,2),0)),0)),U))_"  "_$J(+$P(RC00,U,3),"",2)
"RTN","RCDPEAR1",112,0)
 ..D SETLINE(D,.RCCT,RCPRT)
"RTN","RCDPEAR1",113,0)
 ..Q:$P(RC00,U,2)
"RTN","RCDPEAR1",114,0)
 ..D DISP^RCDPESR0("^RCY(344.4,"_RCZ0_",1,"_RCZ1_",1)","RCDATA",1,"RCOUT",68,1)
"RTN","RCDPEAR1",115,0)
 ..I '$O(RCOUT(0)) D SETLINE($J("",9)_" NO DETAIL FOUND",.RCCT,RCPRT) Q
"RTN","RCDPEAR1",116,0)
 ..S Z=0 F  S Z=$O(RCOUT(Z)) Q:'Z  D  Q:RCSTOP
"RTN","RCDPEAR1",117,0)
 ... I ($Y+5)>IOSL D HDR(.RCCT,.RCPG,.RCSTOP,RCPRT,RCRANGE,.VAUTD,.RCPAY) Q:RCSTOP
"RTN","RCDPEAR1",118,0)
 ... D SETLINE($J("",9)_"*"_RCOUT(Z),.RCCT,RCPRT)
"RTN","RCDPEAR1",119,0)
 ;
"RTN","RCDPEAR1",120,0)
 F Z0=1:1:2 D SETLINE(" ",.RCCT,RCPRT)
"RTN","RCDPEAR1",121,0)
 I ($Y+7)>IOSL!'RCPG D HDR(.RCCT,.RCPG,.RCSTOP,RCPRT,RCRANGE,.VAUTD,.RCPAY)
"RTN","RCDPEAR1",122,0)
 ;
"RTN","RCDPEAR1",123,0)
 W !,"******** END OF REPORT ********",!
"RTN","RCDPEAR1",124,0)
PRTQ I '$D(ZTQUEUED),'RCSTOP,RCPG,RCPRT="" D ASK()
"RTN","RCDPEAR1",125,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEAR1",126,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEAR1",127,0)
 K ^TMP($J,"RCERA_AGED"),^TMP("RCSELPAY",$J)
"RTN","RCDPEAR1",128,0)
 Q
"RTN","RCDPEAR1",129,0)
 ;
"RTN","RCDPEAR1",130,0)
HDR(RCCT,RCPG,RCSTOP,RCPRT,RCRANGE,VAUTD,RCPAY) ;Prints report heading
"RTN","RCDPEAR1",131,0)
 ; Function returns RCPG = current page # and RCCT = running line count
"RTN","RCDPEAR1",132,0)
 ;   and RCSTOP = 1 if user aborted print 
"RTN","RCDPEAR1",133,0)
 ; Parameters must be passed by reference
"RTN","RCDPEAR1",134,0)
 ; RCPRT = name of the subscript for ^TMP to use to return all lines
"RTN","RCDPEAR1",135,0)
 ;        (for bulletin).  If undefined or null, output is printed
"RTN","RCDPEAR1",136,0)
 ; RCRANGE - date range filter value to be printed as part of the header
"RTN","RCDPEAR1",137,0)
 ; VAUTD (required/pass-by-ref) - Division filter value(s)
"RTN","RCDPEAR1",138,0)
 ; RCPAY (required/pass-by-ref) - Payer filter value(s)
"RTN","RCDPEAR1",139,0)
 ;
"RTN","RCDPEAR1",140,0)
 N Z,Z0,START,END,SUB,%,CNT
"RTN","RCDPEAR1",141,0)
 Q:$G(RCSTOP)
"RTN","RCDPEAR1",142,0)
 I RCPG!($E(IOST,1,2)="C-") D  Q:$G(RCSTOP)
"RTN","RCDPEAR1",143,0)
 .I RCPG&($E(IOST,1,2)="C-")&(RCPRT="") D ASK(.RCSTOP) Q:RCSTOP
"RTN","RCDPEAR1",144,0)
 .I RCPRT="" W @IOF,*13 Q  ; Write form feed for report
"RTN","RCDPEAR1",145,0)
 S RCPG=RCPG+1,Z0="ERA UNMATCHED AGING REPORT"
"RTN","RCDPEAR1",146,0)
 S Z=$$SETSTR^VALM1($J("",80-$L(Z0)\2)_Z0,"",1,79)
"RTN","RCDPEAR1",147,0)
 S:'RCDISPTY Z=$$SETSTR^VALM1("Page: "_RCPG,Z,64,17)
"RTN","RCDPEAR1",148,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",149,0)
 D NOW^%DTC
"RTN","RCDPEAR1",150,0)
 S Z="RUN DATE/TIME: "_$$FMTE^XLFDT(%,2),Z=$J("",80-$L(Z)\2)_Z
"RTN","RCDPEAR1",151,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",152,0)
 S END=$P(RCRANGE,U,3)
"RTN","RCDPEAR1",153,0)
 ; divisions
"RTN","RCDPEAR1",154,0)
 S Z="DIVISIONS: "
"RTN","RCDPEAR1",155,0)
 I $D(VAUTD)=1 D
"RTN","RCDPEAR1",156,0)
 .S Z=Z_"ALL",Z=$J("",80-$L(Z)\2)_Z
"RTN","RCDPEAR1",157,0)
 .D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",158,0)
 .S Z=""
"RTN","RCDPEAR1",159,0)
 I $D(VAUTD)>1,'VAUTD D
"RTN","RCDPEAR1",160,0)
 .S SUB=VAUTD
"RTN","RCDPEAR1",161,0)
 .F  S SUB=$O(VAUTD(SUB)) Q:'SUB  D
"RTN","RCDPEAR1",162,0)
 ..I Z="DIVISIONS: " S Z=Z_VAUTD(SUB) Q
"RTN","RCDPEAR1",163,0)
 ..S Z=Z_$S(Z]"":",",1:"")_VAUTD(SUB)
"RTN","RCDPEAR1",164,0)
 ..I $L(Z)>50 D
"RTN","RCDPEAR1",165,0)
 ...S Z=$J("",80-$L(Z)\2)_Z
"RTN","RCDPEAR1",166,0)
 ...D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",167,0)
 ...S Z=""
"RTN","RCDPEAR1",168,0)
 I Z]"" D
"RTN","RCDPEAR1",169,0)
 .S Z=$J("",80-$L(Z)\2)_Z
"RTN","RCDPEAR1",170,0)
 .D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",171,0)
 ;
"RTN","RCDPEAR1",172,0)
 ; Payers
"RTN","RCDPEAR1",173,0)
 S Z="PAYERS: "
"RTN","RCDPEAR1",174,0)
 I $D(RCPAY)=1 S Z=Z_RCPAY
"RTN","RCDPEAR1",175,0)
 I $D(RCPAY)=10 D
"RTN","RCDPEAR1",176,0)
 .S CNT=0
"RTN","RCDPEAR1",177,0)
 .F  S CNT=$O(RCPAY(CNT)) Q:'CNT  D
"RTN","RCDPEAR1",178,0)
 ..I Z="PAYERS: " S Z=Z_RCPAY(CNT) Q
"RTN","RCDPEAR1",179,0)
 ..S Z=Z_$S(Z]"":",",1:"")_RCPAY(CNT)
"RTN","RCDPEAR1",180,0)
 ..I $L(Z)>50 D
"RTN","RCDPEAR1",181,0)
 ...S Z=$J("",80-$L(Z)\2)_Z
"RTN","RCDPEAR1",182,0)
 ...D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",183,0)
 ...S Z=""
"RTN","RCDPEAR1",184,0)
 I Z]"" D
"RTN","RCDPEAR1",185,0)
 .S Z=$J("",80-$L(Z)\2)_Z
"RTN","RCDPEAR1",186,0)
 .D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",187,0)
 S START=$P(RCRANGE,U,2)
"RTN","RCDPEAR1",188,0)
 S Z="DATE RANGE: "_$P($$FMTE^XLFDT(START,2),"@")_" - "_$P($$FMTE^XLFDT(END,2),"@")_" (ERA FILE DATE)",Z=$J("",80-$L(Z)\2)_Z
"RTN","RCDPEAR1",189,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",190,0)
 Q:RCDISPTY  ; prca 276 - do not print column headers for excel format
"RTN","RCDPEAR1",191,0)
 D SETLINE(" ",.RCCT,RCPRT)
"RTN","RCDPEAR1",192,0)
 D SETLINE("AGED",.RCCT,RCPRT)
"RTN","RCDPEAR1",193,0)
 S Z=$$SETSTR^VALM1("DAYS"_$J("",2)_"TRACE #","",1,79)
"RTN","RCDPEAR1",194,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",195,0)
 S Z=$$SETSTR^VALM1($J("",10)_"PAYMENT FROM/ID"_$J("",46)_"ERA DATE","",1,79)
"RTN","RCDPEAR1",196,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",197,0)
 S Z=$$SETSTR^VALM1($J("",16)_"FILE DATE"_$J("",6)_"AMOUNT PAID"_$J("",2)_"EEOB CNT "_$J("",2)_"ERA #",Z,1,79)
"RTN","RCDPEAR1",198,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",199,0)
 D SETLINE($TR($J("",IOM-1)," ","="),.RCCT,RCPRT)
"RTN","RCDPEAR1",200,0)
 I RCPG=1 D
"RTN","RCDPEAR1",201,0)
 .D SETLINE("TOTALS:",.RCCT,RCPRT)
"RTN","RCDPEAR1",202,0)
 .S Z=$$SETSTR^VALM1(" NUMBER AGED ELECTRONIC ERA MESSAGES FOUND: "_RCNT,"",1,79)
"RTN","RCDPEAR1",203,0)
 .D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",204,0)
 .S Z=$$SETSTR^VALM1(" AMOUNT AGED ELECTRONIC ERA MESSAGES FOUND: $"_$FN(+RCTOT,",",2),"",1,79)
"RTN","RCDPEAR1",205,0)
 .D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR1",206,0)
 .D SETLINE($TR($J("",IOM-1)," ","="),.RCCT,RCPRT)
"RTN","RCDPEAR1",207,0)
 Q
"RTN","RCDPEAR1",208,0)
 ;
"RTN","RCDPEAR1",209,0)
EXCEL ; Print report to screen, one record per line for export to MS Excel.
"RTN","RCDPEAR1",210,0)
 N RCLFLG,RCZ,RCZ0,RC00,Z,D,RCZ1,RZ,RZ1
"RTN","RCDPEAR1",211,0)
 W !!,"Aged Days^Trace #^Payment From/ID^ERA Date^File Date^Amount Paid^EEOB Cnt^ERA #^EEOB Detail"
"RTN","RCDPEAR1",212,0)
 S RCZ="" F  S RCZ=$O(^TMP($J,"RCERA_AGED",RCZ)) Q:RCZ=""  S RCZ0=0 F  S RCZ0=$O(^TMP($J,"RCERA_AGED",RCZ,RCZ0)) Q:'RCZ0  D  G:RCSTOP PRTQ2
"RTN","RCDPEAR1",213,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPG) W:RCPRT="" !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEAR1",214,0)
 . S RC0=$G(^RCY(344.4,RCZ0,0))
"RTN","RCDPEAR1",215,0)
 . S Z=$J(-RCZ,4)_U_$P(RC0,U,2)_U_$P(RC0,U,6)_"/"_$P(RC0,U,3)_U_$$FMTE^XLFDT($P(RC0,U,4),2)_U_$$FMTE^XLFDT($P(RC0,U,7),2)_U
"RTN","RCDPEAR1",216,0)
 . S Z=Z_$P(RC0,U,5)_U_$P(RC0,U,11)_U_$P(RC0,U)
"RTN","RCDPEAR1",217,0)
 . W !,Z
"RTN","RCDPEAR1",218,0)
 . S RZ=Z,RZ1=0
"RTN","RCDPEAR1",219,0)
 . K Z
"RTN","RCDPEAR1",220,0)
 .;;;
"RTN","RCDPEAR1",221,0)
 . I "23"[$$ADJ^RCDPEU(RCZ0) D EXCEL1 W "^** CLAIM LEVEL ADJUSTMENTS EXIST FOR THIS ERA ***"
"RTN","RCDPEAR1",222,0)
 . I $O(^RCY(344.4,RCZ0,2,0)) D  ; ERA level adjustments exist
"RTN","RCDPEAR1",223,0)
 . . N Q
"RTN","RCDPEAR1",224,0)
 . . D DISPADJ^RCDPESR8(RCZ0,"^TMP("_$J_",""RCERA_ADJ"")")
"RTN","RCDPEAR1",225,0)
 . . I $O(^TMP($J,"RCERA_ADJ",0)) D EXCEL1 W "^** GENERAL ADJUSTMENT DATA EXISTS FOR ERA **"
"RTN","RCDPEAR1",226,0)
 . . S Q=0 F  S Q=$O(^TMP($J,"RCERA_ADJ",Q)) Q:'Q  D EXCEL1 W "^"_$G(^TMP($J,"RCERA_ADJ",Q))
"RTN","RCDPEAR1",227,0)
 .;
"RTN","RCDPEAR1",228,0)
 . S RCZ1=0 F  S RCZ1=$O(^RCY(344.4,RCZ0,1,RCZ1)) Q:'RCZ1  S RC00=$G(^(RCZ1,0)) D  Q:RCSTOP
"RTN","RCDPEAR1",229,0)
 . . N D
"RTN","RCDPEAR1",230,0)
 . . K RCDATA,RCOUT
"RTN","RCDPEAR1",231,0)
 . . S D=" EEOB Seq #: "_$P(RC00,U)_$S($D(^RCY(344.4,RCZ0,1,"ATB",1,RCZ1)):" (REVERSAL)",1:"")_"  EEOB "
"RTN","RCDPEAR1",232,0)
 . . S D=D_$S('$P(RC00,U,2):"not on file",1:"on file for "_$P($G(^DGCR(399,+$G(^IBM(361.1,+$P(RC00,U,2),0)),0)),U))_"  "_$J(+$P(RC00,U,3),"",2)
"RTN","RCDPEAR1",233,0)
 . . D EXCEL1 W "^",D
"RTN","RCDPEAR1",234,0)
 . . Q:$P(RC00,U,2)
"RTN","RCDPEAR1",235,0)
 . . D DISP^RCDPESR0("^RCY(344.4,"_RCZ0_",1,"_RCZ1_",1)","RCDATA",1,"RCOUT",68,1)
"RTN","RCDPEAR1",236,0)
 . . I '$O(RCOUT(0)) D EXCEL1 W "^NO DETAIL FOUND" Q
"RTN","RCDPEAR1",237,0)
 . . S Z=0 F  S Z=$O(RCOUT(Z)) Q:'Z  D  Q:RCSTOP
"RTN","RCDPEAR1",238,0)
 . . . D EXCEL1 W "^*"_RCOUT(Z)
"RTN","RCDPEAR1",239,0)
 W !,"******** END OF REPORT ********",!
"RTN","RCDPEAR1",240,0)
 Q
"RTN","RCDPEAR1",241,0)
 ;
"RTN","RCDPEAR1",242,0)
EXCEL1 ; Display repeat info line before each EEOB detail section.
"RTN","RCDPEAR1",243,0)
 ; First detail line does not need it
"RTN","RCDPEAR1",244,0)
 I RZ1 W !,RZ Q
"RTN","RCDPEAR1",245,0)
 S RZ1=1 Q
"RTN","RCDPEAR1",246,0)
 ;
"RTN","RCDPEAR1",247,0)
PRTQ2 I '$D(ZTQUEUED),'RCSTOP,RCPG,RCPRT="" D ASK()
"RTN","RCDPEAR1",248,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEAR1",249,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEAR1",250,0)
 K ^TMP($J,"RCEFT_AGED")
"RTN","RCDPEAR1",251,0)
 Q
"RTN","RCDPEAR1",252,0)
 ;
"RTN","RCDPEAR1",253,0)
TEXT ; Filtered by messages
"RTN","RCDPEAR1",254,0)
 ;;No Filters Applied
"RTN","RCDPEAR1",255,0)
 ;;Station/Division
"RTN","RCDPEAR1",256,0)
 ;;
"RTN","RCDPEAR1",257,0)
 ;;Date Range
"RTN","RCDPEAR1",258,0)
 ;;Station/Division, Date Range
"RTN","RCDPEAR1",259,0)
 ;;Payer
"RTN","RCDPEAR1",260,0)
 ;;Station/Division, Payer
"RTN","RCDPEAR1",261,0)
 ;;
"RTN","RCDPEAR1",262,0)
 ;;Date Range, Payer
"RTN","RCDPEAR1",263,0)
 ;;Station/Division, Date Range, Payer
"RTN","RCDPEAR1",264,0)
 Q
"RTN","RCDPEAR1",265,0)
 ;
"RTN","RCDPEAR1",266,0)
SETLINE(Z,RCCT,RCPRT) ; Sets line into print global or writes line
"RTN","RCDPEAR1",267,0)
 ; Z = txt to output
"RTN","RCDPEAR1",268,0)
 ; RCCT = if defined = line counter
"RTN","RCDPEAR1",269,0)
 ; RCPRT = if defined = flag if 1, indicates output to global, no writes 
"RTN","RCDPEAR1",270,0)
 I $G(RCPRT)="" W !,Z Q
"RTN","RCDPEAR1",271,0)
 S RCCT=RCCT+1
"RTN","RCDPEAR1",272,0)
 S ^TMP($J,RCPRT,RCCT)=Z
"RTN","RCDPEAR1",273,0)
 Q
"RTN","RCDPEAR1",274,0)
 ;
"RTN","RCDPEAR1",275,0)
ASK(RCSTOP) ; Ask to continue
"RTN","RCDPEAR1",276,0)
 ; If passed by reference ,RCSTOP is returned as 1 if print is aborted
"RTN","RCDPEAR1",277,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPEAR1",278,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEAR1",279,0)
 S DIR(0)="E" W ! D ^DIR K DIR
"RTN","RCDPEAR1",280,0)
 I ($D(DIRUT))!($D(DUOUT)) S RCSTOP=1 Q
"RTN","RCDPEAR1",281,0)
 Q
"RTN","RCDPEAR1",282,0)
 ;
"RTN","RCDPEAR1",283,0)
SELPAY(RCNP,RCJOB,RCPAY) ;localize the payer filters for header display
"RTN","RCDPEAR1",284,0)
 ; Input:
"RTN","RCDPEAR1",285,0)
 ;   RCNP (pass-by-val/required) - payer filter response indicator (2=ALL, 3=SPECIFIC)
"RTN","RCDPEAR1",286,0)
 ;   RCJOB - job number to access the populated temporary global array in case report was tasked to run
"RTN","RCDPEAR1",287,0)
 ; Output:
"RTN","RCDPEAR1",288,0)
 ;   RCPAY (pass-by-ref/required) - local array of payers e.g. RCPAY="ALL", RCPAY(1)="Aetna",
"RTN","RCDPEAR1",289,0)
 ;                                  or RCPAY="start payer = end payer"
"RTN","RCDPEAR1",290,0)
 ;
"RTN","RCDPEAR1",291,0)
 N CNT,I
"RTN","RCDPEAR1",292,0)
 I RCNP=2 S RCPAY="ALL" Q
"RTN","RCDPEAR1",293,0)
 S:RCJOB="" RCJOB=$J   ; RCJOB should not be null
"RTN","RCDPEAR1",294,0)
 I RCNP=3 D  Q
"RTN","RCDPEAR1",295,0)
 .S CNT=0
"RTN","RCDPEAR1",296,0)
 .F  S CNT=$O(^TMP("RCSELPAY",RCJOB,CNT)) Q:'CNT  D
"RTN","RCDPEAR1",297,0)
 ..S RCPAY(CNT)=^TMP("RCSELPAY",RCJOB,CNT)
"RTN","RCDPEAR1",298,0)
 ;RCNP indicates a range of payers
"RTN","RCDPEAR1",299,0)
 S I=$O(^TMP("RCSELPAY",RCJOB,"")),RCPAY=^(I)_" - "
"RTN","RCDPEAR1",300,0)
 S I=$O(^TMP("RCSELPAY",RCJOB,""),-1),RCPAY=RCPAY_^(I)
"RTN","RCDPEAR1",301,0)
 Q
"RTN","RCDPEAR1",302,0)
RCBAL() ; Get Zero Payment Filter
"RTN","RCDPEAR1",303,0)
 ; INPUTS   : User input from keyboard
"RTN","RCDPEAR1",304,0)
 ; RETURNS  : Output destination (0=Display; 1=MS Excel)
"RTN","RCDPEAR1",305,0)
 ; LOCAL VARIABLES :
"RTN","RCDPEAR1",306,0)
 ; DIR,DUOUT - Standard FileMan variables
"RTN","RCDPEAR1",307,0)
 ; Y         - User input
"RTN","RCDPEAR1",308,0)
 N DIR,DUOUT,Y
"RTN","RCDPEAR1",309,0)
 S DIR(0)="Y"
"RTN","RCDPEAR1",310,0)
 S DIR("A")="INCLUDE ZERO PAYMENT AMOUNTS (Y/N): "
"RTN","RCDPEAR1",311,0)
 S DIR("B")="Y"
"RTN","RCDPEAR1",312,0)
 D ^DIR K DIR
"RTN","RCDPEAR1",313,0)
 I $D(DUOUT)!$D(DIRUT) S Y=-1
"RTN","RCDPEAR1",314,0)
 Q Y
"RTN","RCDPEAR1",315,0)
 ;
"RTN","RCDPEAR1",316,0)
RLOAD(FILE) ; PRCA*4.5*284 - Load Payer temp global AFTER queued job starts
"RTN","RCDPEAR1",317,0)
 ; Load Selected payers from local saved
"RTN","RCDPEAR1",318,0)
 I +RCNP=3 M ^TMP("RCSELPAY",$J)=RCNP1 Q
"RTN","RCDPEAR1",319,0)
 N CNT,RCPAY,RCINSF,RCINST,NUM,INDX
"RTN","RCDPEAR1",320,0)
 ;
"RTN","RCDPEAR1",321,0)
 ; Load ALL payers
"RTN","RCDPEAR1",322,0)
 I +RCNP=2 D  Q
"RTN","RCDPEAR1",323,0)
 .S CNT=0,RCPAY="" F  S RCPAY=$O(^RCY(FILE,"C",RCPAY)) Q:RCPAY=""  S CNT=CNT+1,^TMP("RCSELPAY",$J,CNT)=RCPAY
"RTN","RCDPEAR1",324,0)
 ;
"RTN","RCDPEAR1",325,0)
 ; Range of Payers
"RTN","RCDPEAR1",326,0)
 ; Build list of available stations
"RTN","RCDPEAR1",327,0)
 ; Clear workfile
"RTN","RCDPEAR1",328,0)
 K ^TMP("RCPAYER",$J)
"RTN","RCDPEAR1",329,0)
 S CNT=0,RCPAY=""
"RTN","RCDPEAR1",330,0)
 F  S RCPAY=$O(^RCY(FILE,"C",RCPAY)) Q:RCPAY=""  S CNT=CNT+1,^TMP("RCPAYER",$J,CNT)=RCPAY,^TMP("RCPAYER",$J,"B",RCPAY,CNT)=""
"RTN","RCDPEAR1",331,0)
 ;
"RTN","RCDPEAR1",332,0)
 S RCINSF=$P(RCNP,"^",2),RCINST=$P(RCNP,"^",3),INDX=1
"RTN","RCDPEAR1",333,0)
 F  S RCINSF=$O(^TMP("RCPAYER",$J,"B",RCINSF)) Q:RCINSF=""  Q:RCINSF]RCINST  D
"RTN","RCDPEAR1",334,0)
 . S NUM=$O(^TMP("RCPAYER",$J,"B",RCINSF,""))
"RTN","RCDPEAR1",335,0)
 . S ^TMP("RCSELPAY",$J,INDX)=$G(^TMP("RCPAYER",$J,NUM)),INDX=INDX+1
"RTN","RCDPEAR1",336,0)
 Q
"RTN","RCDPEAR2")
0^4^B63768101^B62672024
"RTN","RCDPEAR2",1,0)
RCDPEAR2 ;ALB/TMK/PJH - EFT Unmatched Aging Report - FILE 344.3 ;04-NOV-02
"RTN","RCDPEAR2",2,0)
 ;;4.5;Accounts Receivable;**173,269,276,284,283,293**;Mar 20, 1995;Build 15
"RTN","RCDPEAR2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","RCDPEAR2",4,0)
 Q
"RTN","RCDPEAR2",5,0)
 ;
"RTN","RCDPEAR2",6,0)
EN1 ; Entry from option - run on the fly
"RTN","RCDPEAR2",7,0)
 N DIR,Y,%ZIS,ZTRTN,ZTSAVE,ZTDESC,POP,X,RCNP,RCJOB,RCJOB1
"RTN","RCDPEAR2",8,0)
 N RCRANGE,RCDISPTY,RCSTART,ZTSTOP,RCEND,DIC,RCIND,RCNP1
"RTN","RCDPEAR2",9,0)
 S RCIND=1
"RTN","RCDPEAR2",10,0)
 S RCRANGE=$$DTRNG^RCDPEM4()
"RTN","RCDPEAR2",11,0)
 I RCRANGE=0 G EN1Q
"RTN","RCDPEAR2",12,0)
 I $P(RCRANGE,U,1) D
"RTN","RCDPEAR2",13,0)
 . S RCSTART=$P(RCRANGE,U,2)-1
"RTN","RCDPEAR2",14,0)
 . S RCEND=$P(RCRANGE,U,3)
"RTN","RCDPEAR2",15,0)
 ;Get insurance company to be used as filter
"RTN","RCDPEAR2",16,0)
 ; PRCA*4.5*284 - RCDPEM9 now return a stack in RCNP (Type of Response(1=Range,2=All,3=Specific)^From Range^Thru Range)
"RTN","RCDPEAR2",17,0)
 S RCNP=$$GETPAY^RCDPEM9(344.31) I +RCNP=-1 G EN1Q
"RTN","RCDPEAR2",18,0)
 ;Get display type
"RTN","RCDPEAR2",19,0)
 S RCDISPTY=$$DISPTY^RCDPEM3() Q:RCDISPTY=-1
"RTN","RCDPEAR2",20,0)
 I $D(DUOUT)!$D(DTOUT) G EN1Q
"RTN","RCDPEAR2",21,0)
 I RCDISPTY D INFO^RCDPEM6
"RTN","RCDPEAR2",22,0)
 S:$P($G(RCRANGE),U)>0 RCIND=RCIND+3
"RTN","RCDPEAR2",23,0)
 S:$D(^TMP("RCSELPAY",$J))&(+RCNP=1) RCIND=RCIND+5
"RTN","RCDPEAR2",24,0)
 S RCJOB=$J
"RTN","RCDPEAR2",25,0)
 ; Ask device
"RTN","RCDPEAR2",26,0)
 S %ZIS="QM" D ^%ZIS G:POP EN1Q
"RTN","RCDPEAR2",27,0)
 I $D(IO("Q")) D  G EN1Q
"RTN","RCDPEAR2",28,0)
 . S ZTRTN="RPTOUT^RCDPEAR2",ZTDESC="EFT AGING REPORT"
"RTN","RCDPEAR2",29,0)
 . S ZTSAVE("*")=""
"RTN","RCDPEAR2",30,0)
 . ; PRCA*4.5*284 - Because TMP global may be on another server, save off specific payers in local
"RTN","RCDPEAR2",31,0)
 . I +RCNP=3 M RCNP1=^TMP("RCSELPAY",$J)
"RTN","RCDPEAR2",32,0)
 . D ^%ZTLOAD
"RTN","RCDPEAR2",33,0)
 . W !!,$S($D(ZTSK):"Your task number "_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPEAR2",34,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEAR2",35,0)
 U IO
"RTN","RCDPEAR2",36,0)
 D RPTOUT
"RTN","RCDPEAR2",37,0)
EN1Q Q
"RTN","RCDPEAR2",38,0)
 ;
"RTN","RCDPEAR2",39,0)
RPTOUT(RCPRT) ; Entrypoint for queued job, nightly job
"RTN","RCDPEAR2",40,0)
 ; RCPRT = name of the subscript for ^TMP to use to return all lines
"RTN","RCDPEAR2",41,0)
 ;        (for bulletin).  If undefined or null, output is printed
"RTN","RCDPEAR2",42,0)
 ; Return global if RCPRT not null: ^TMP($J,RCPRT,line#)=line text
"RTN","RCDPEAR2",43,0)
 N RCCT,RCPG,RCPGS,RCSTOP,RCNT,RCTOT,RCOUT,RC0,RC13,RCZ,RCZ0,RC00,Z,Z0,DIC,DUOUT,X,RCPAY,RCRUNDT
"RTN","RCDPEAR2",44,0)
 S RCPRT=$G(RCPRT)
"RTN","RCDPEAR2",45,0)
 S (RCCT,RCSTOP,RCPG,RCNT,RCTOT,RCPGS)=0,RCRUNDT=$$NOW^RCDPEM6
"RTN","RCDPEAR2",46,0)
 S RCPGS=1
"RTN","RCDPEAR2",47,0)
 K ^TMP($J,"RCERA_AGED"),^TMP($J,"RCERA_ADJ")
"RTN","RCDPEAR2",48,0)
 ; PRCA*4.5*284 - Queued job needs to reload payer selection list
"RTN","RCDPEAR2",49,0)
 I $G(RCJOB)'="",RCJOB'=$J D
"RTN","RCDPEAR2",50,0)
 . K ^TMP("RCSELPAY",$J)
"RTN","RCDPEAR2",51,0)
 . D RLOAD^RCDPEAR1(344.31)
"RTN","RCDPEAR2",52,0)
 . S RCJOB=$J
"RTN","RCDPEAR2",53,0)
 ; build local payer array here
"RTN","RCDPEAR2",54,0)
 S RCNP=+RCNP
"RTN","RCDPEAR2",55,0)
 D SELPAY^RCDPEAR1(RCNP,RCJOB,.RCPAY)
"RTN","RCDPEAR2",56,0)
 I RCPRT'="" K ^TMP($J,RCPRT)
"RTN","RCDPEAR2",57,0)
 S RCZ0=0 F  S RCZ0=$O(^RCY(344.31,"AMATCH",0,RCZ0)) Q:'RCZ0  D   ;unmatched entries only
"RTN","RCDPEAR2",58,0)
 .Q:$P($G(^RCY(344.31,RCZ0,3)),U)        ; EFT has been removed
"RTN","RCDPEAR2",59,0)
 .Q:$P($G(^RCY(344.31,RCZ0,0)),U,7)=0    ; payment of zero
"RTN","RCDPEAR2",60,0)
 .;
"RTN","RCDPEAR2",61,0)
 .S RC13=$P($G(^RCY(344.31,RCZ0,0)),U,13)  ;date received
"RTN","RCDPEAR2",62,0)
 .; Check for payer match
"RTN","RCDPEAR2",63,0)
 .I '$$CHKPYR^RCDPEDAR(RCZ0,0,RCJOB) Q
"RTN","RCDPEAR2",64,0)
 .; Check date range
"RTN","RCDPEAR2",65,0)
 .I $P(RCRANGE,U,1) Q:(RCSTART>RC13)!(RC13>RCEND)
"RTN","RCDPEAR2",66,0)
 .; Passed all the filters - include on report
"RTN","RCDPEAR2",67,0)
 .S ^TMP($J,"RCEFT_AGED",$$FMDIFF^XLFDT(RC13,DT),RCZ0)=0,RCNT=RCNT+1
"RTN","RCDPEAR2",68,0)
 I RCDISPTY D HDR(.RCCT,.RCPG,.RCSTOP,RCPRT,RCRANGE,.RCPAY,RCRUNDT),EXCEL Q
"RTN","RCDPEAR2",69,0)
 ;
"RTN","RCDPEAR2",70,0)
 ; Find total amount of EFTs
"RTN","RCDPEAR2",71,0)
 S RCZ="" F  S RCZ=$O(^TMP($J,"RCEFT_AGED",RCZ)) Q:RCZ=""  S RCZ0=0 F  S RCZ0=$O(^TMP($J,"RCEFT_AGED",RCZ,RCZ0)) Q:'RCZ0  D  G:RCSTOP PRTQ
"RTN","RCDPEAR2",72,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPG) W:RCPRT="" !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEAR2",73,0)
 . S RC0=$G(^RCY(344.31,RCZ0,0)),RC00=$G(^RCY(344.3,+RC0,0))
"RTN","RCDPEAR2",74,0)
 . S RCTOT=RCTOT+$P(RC0,U,7)
"RTN","RCDPEAR2",75,0)
 ;
"RTN","RCDPEAR2",76,0)
 S RCZ="" F  S RCZ=$O(^TMP($J,"RCEFT_AGED",RCZ)) Q:RCZ=""  S RCZ0=0 F  S RCZ0=$O(^TMP($J,"RCEFT_AGED",RCZ,RCZ0)) Q:'RCZ0  D  G:RCSTOP PRTQ
"RTN","RCDPEAR2",77,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPG) W:RCPRT="" !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEAR2",78,0)
 . I RCPG D SETLINE(" ",.RCCT,.RCPRT) ; On detail list, skip line
"RTN","RCDPEAR2",79,0)
 . I 'RCPG!(($Y+5)>IOSL) S RCPGS=RCPGS+1 D HDR(.RCCT,.RCPG,.RCSTOP,RCPRT,RCRANGE,.RCPAY,RCRUNDT) Q:RCSTOP
"RTN","RCDPEAR2",80,0)
 . S RC0=$G(^RCY(344.31,RCZ0,0)),RC00=$G(^RCY(344.3,+RC0,0))
"RTN","RCDPEAR2",81,0)
 . S RCTOT=RCTOT+$P(RC0,U,7)
"RTN","RCDPEAR2",82,0)
 . S Z=$$SETSTR^VALM1($J(-RCZ,4),"",1,4)
"RTN","RCDPEAR2",83,0)
 . S Z=$$SETSTR^VALM1("  "_$P(RC0,U,4),Z,5,75)
"RTN","RCDPEAR2",84,0)
 . D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR2",85,0)
 . S Z=$$SETSTR^VALM1($P(RC0,U,2)_"/"_$P(RC0,U,3),"",11,69)
"RTN","RCDPEAR2",86,0)
 . S Z=$$SETSTR^VALM1("  "_$$FMTE^XLFDT($P(RC0,U,12),2),Z,70,10)
"RTN","RCDPEAR2",87,0)
 . D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR2",88,0)
 . S Z=$$SETSTR^VALM1($J("",6)_$S($P(RC0,U,13):$$FMTE^XLFDT($P(RC0,U,13),2),1:""),"",1,17)
"RTN","RCDPEAR2",89,0)
 . S Z=$$SETSTR^VALM1("  "_$J($P(RC0,U,7),15,2),Z,18,17)
"RTN","RCDPEAR2",90,0)
 . ; PRCA*4.5*283 - change length from 8 to 11 to allow for 9 digit
"RTN","RCDPEAR2",91,0)
 . ; DEP #'s
"RTN","RCDPEAR2",92,0)
 . S Z=$$SETSTR^VALM1("  "_$P(RC00,U,6),Z,35,11)
"RTN","RCDPEAR2",93,0)
 . S Z=$$SETSTR^VALM1("  "_$S($P(RC00,U,12):"",1:"NOT ")_"POSTED TO 8NZZ"_$S($P(RC00,U,12):" ON "_$$FMTE^XLFDT($P(RC00,U,11),2),1:""),Z,47,36)
"RTN","RCDPEAR2",94,0)
 . D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR2",95,0)
 . ;
"RTN","RCDPEAR2",96,0)
 . K RCOUT
"RTN","RCDPEAR2",97,0)
 . D GETS^DIQ(344.31,RCZ0_",",2,"E","RCOUT")
"RTN","RCDPEAR2",98,0)
 . Q:'$O(RCOUT(344.31,RCZ0_",",2,0))
"RTN","RCDPEAR2",99,0)
 . D SETLINE($J("",8)_"--EXCEPTION NOTES--",.RCCT,RCPRT)
"RTN","RCDPEAR2",100,0)
 . S Z=0 F  S Z=$O(RCOUT(344.31,RCZ0_",",2,Z)) Q:'Z  D  Q:RCSTOP
"RTN","RCDPEAR2",101,0)
 .. I ($Y+5)>IOSL D HDR(.RCCT,.RCPG,.RCSTOP,RCPRT,RCRANGE,.RCPAY,RCRUNDT) Q:RCSTOP
"RTN","RCDPEAR2",102,0)
 .. D SETLINE($J("",8)_" "_RCOUT(344.31,RCZ0_",",2,Z),.RCCT,RCPRT)
"RTN","RCDPEAR2",103,0)
 ;
"RTN","RCDPEAR2",104,0)
 F Z0=1:1:2 D SETLINE(" ",.RCCT,RCPRT)
"RTN","RCDPEAR2",105,0)
 I ($Y+7)>IOSL!'RCPG D HDR(.RCCT,.RCPG,.RCSTOP,RCPRT,RCRANGE,.RCPAY,RCRUNDT)
"RTN","RCDPEAR2",106,0)
 S Z=$$SETSTR^VALM1("TOTALS:","",1,79)
"RTN","RCDPEAR2",107,0)
 ;
"RTN","RCDPEAR2",108,0)
 W !,"*** END OF REPORT ***",!
"RTN","RCDPEAR2",109,0)
PRTQ I '$D(ZTQUEUED),'RCSTOP,RCPG,RCPRT="" D ASK()
"RTN","RCDPEAR2",110,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEAR2",111,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEAR2",112,0)
 K ^TMP($J,"RCEFT_AGED"),ZTQUEUED
"RTN","RCDPEAR2",113,0)
 Q
"RTN","RCDPEAR2",114,0)
 ;
"RTN","RCDPEAR2",115,0)
HDR(RCCT,RCPG,RCSTOP,RCPRT,RCRANGE,RCPAY,RCRUNDT) ;Prints report heading
"RTN","RCDPEAR2",116,0)
 ; Function returns RCPG = current page # and RCCT = running line count
"RTN","RCDPEAR2",117,0)
 ;   and RCSTOP = 1 if user aborted print 
"RTN","RCDPEAR2",118,0)
 ; Above parameters must be passed by reference
"RTN","RCDPEAR2",119,0)
 ; RCPRT = name of the subscript for ^TMP to use to return all lines
"RTN","RCDPEAR2",120,0)
 ;        (for bulletin).  If undefined or null, output is printed
"RTN","RCDPEAR2",121,0)
 ; RCRANGE - date range filter value to be printed as part of the header
"RTN","RCDPEAR2",122,0)
 ; RCPAY (required/pass-by-ref) - Payer filter value(s)
"RTN","RCDPEAR2",123,0)
 ;
"RTN","RCDPEAR2",124,0)
 N CNT,END,START,Z,Z0
"RTN","RCDPEAR2",125,0)
 I RCPG!($E(IOST,1,2)="C-") D
"RTN","RCDPEAR2",126,0)
 . I RCPG&($E(IOST,1,2)="C-")&(RCPRT="") D ASK(.RCSTOP) Q:RCSTOP
"RTN","RCDPEAR2",127,0)
 . I RCPRT="" W @IOF,*13 Q  ; Write form feed for report
"RTN","RCDPEAR2",128,0)
 Q:$G(RCSTOP)
"RTN","RCDPEAR2",129,0)
 S RCPG=RCPG+1
"RTN","RCDPEAR2",130,0)
 S Z0="EFT UNMATCHED AGING REPORT"
"RTN","RCDPEAR2",131,0)
 S Z=$$SETSTR^VALM1($J("",80-$L(Z0)\2)_Z0,"",1,79)
"RTN","RCDPEAR2",132,0)
 S:'RCDISPTY Z=$$SETSTR^VALM1("Page: "_RCPG,Z,64,17)
"RTN","RCDPEAR2",133,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR2",134,0)
 S Z0="RUN DATE: "_RCRUNDT,Z0=$J("",80-$L(Z0)\2)_Z0
"RTN","RCDPEAR2",135,0)
 S Z=$$SETSTR^VALM1(Z0,"",1,79)
"RTN","RCDPEAR2",136,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR2",137,0)
 ; Payer(s)
"RTN","RCDPEAR2",138,0)
 S Z="PAYERS: "
"RTN","RCDPEAR2",139,0)
 I $D(RCPAY)=1 S Z=Z_RCPAY
"RTN","RCDPEAR2",140,0)
 I $D(RCPAY)=10 D
"RTN","RCDPEAR2",141,0)
 . S CNT=0
"RTN","RCDPEAR2",142,0)
 . F  S CNT=$O(RCPAY(CNT)) Q:'CNT  D
"RTN","RCDPEAR2",143,0)
 .. I Z="PAYERS: " S Z=Z_RCPAY(CNT) Q
"RTN","RCDPEAR2",144,0)
 .. S Z=Z_$S(Z]"":",",1:"")_RCPAY(CNT)
"RTN","RCDPEAR2",145,0)
 .. I $L(Z)>60 D
"RTN","RCDPEAR2",146,0)
 ... S Z=$J("",88-$L(Z)\2)_Z
"RTN","RCDPEAR2",147,0)
 ... D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR2",148,0)
 ... S Z=""
"RTN","RCDPEAR2",149,0)
 I Z]"" D
"RTN","RCDPEAR2",150,0)
 . S Z=$J("",88-$L(Z)\2)_Z
"RTN","RCDPEAR2",151,0)
 . D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR2",152,0)
 ; Date Range
"RTN","RCDPEAR2",153,0)
 S END=$P(RCRANGE,U,3)
"RTN","RCDPEAR2",154,0)
 S START=$P(RCRANGE,U,2)
"RTN","RCDPEAR2",155,0)
 S Z="DATE RANGE: "_$P($$FMTE^XLFDT(START,2),"@")_" - "_$P($$FMTE^XLFDT(END,2),"@")_" (DATE EFT FILED)",Z=$J("",80-$L(Z)\2)_Z
"RTN","RCDPEAR2",156,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR2",157,0)
 Q:RCDISPTY
"RTN","RCDPEAR2",158,0)
 D SETLINE("AGED",.RCCT,RCPRT)
"RTN","RCDPEAR2",159,0)
 S Z=$$SETSTR^VALM1("DAYS"_$J("",2)_"TRACE #","",1,79)
"RTN","RCDPEAR2",160,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR2",161,0)
 S Z=$$SETSTR^VALM1($J("",10)_"DEPOSIT FROM/ID"_$J("",46)_"DEP DATE","",1,79)
"RTN","RCDPEAR2",162,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR2",163,0)
 ; PRCA*4.5*283 - Add 3 more spaces between DEP # AND DEPOSIT POST 
"RTN","RCDPEAR2",164,0)
 ; STATUS to allow for 9 digit DEP #'s
"RTN","RCDPEAR2",165,0)
 S Z=$$SETSTR^VALM1($J("",6)_"FILE DATE"_$J("",5)_"DEPOSIT AMOUNT"_$J("",2)_"DEP #  "_$J("",5)_"DEPOSIT POST STATUS",Z,1,79)
"RTN","RCDPEAR2",166,0)
 D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR2",167,0)
 D SETLINE($TR($J("",IOM-1)," ","="),.RCCT,RCPRT)
"RTN","RCDPEAR2",168,0)
 I RCPG=1 D
"RTN","RCDPEAR2",169,0)
 . S Z=$$SETSTR^VALM1("TOTALS:","",1,79)
"RTN","RCDPEAR2",170,0)
 . D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR2",171,0)
 . S Z=$$SETSTR^VALM1(" NUMBER AGED ELECTRONIC EFT MESSAGES FOUND: "_RCNT,"",1,79)
"RTN","RCDPEAR2",172,0)
 . D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR2",173,0)
 . S Z=$$SETSTR^VALM1(" AMOUNT AGED ELECTRONIC EFT MESSAGES FOUND: $"_$FN(+RCTOT,",",2),"",1,79)
"RTN","RCDPEAR2",174,0)
 . D SETLINE(Z,.RCCT,RCPRT)
"RTN","RCDPEAR2",175,0)
 . D SETLINE($TR($J("",IOM-1)," ","="),.RCCT,RCPRT)
"RTN","RCDPEAR2",176,0)
 Q
"RTN","RCDPEAR2",177,0)
 ;
"RTN","RCDPEAR2",178,0)
SETLINE(Z,RCCT,RCPRT) ; Sets line into print global or writes line
"RTN","RCDPEAR2",179,0)
 ; Z = txt to output
"RTN","RCDPEAR2",180,0)
 ; RCCT = line counter
"RTN","RCDPEAR2",181,0)
 ; RCPRT = flag if 1, indicates output to global, no writes 
"RTN","RCDPEAR2",182,0)
 S RCCT=RCCT+1
"RTN","RCDPEAR2",183,0)
 I RCPRT="" W !,Z Q
"RTN","RCDPEAR2",184,0)
 S ^TMP($J,RCPRT,RCCT)=Z
"RTN","RCDPEAR2",185,0)
 Q
"RTN","RCDPEAR2",186,0)
 ;
"RTN","RCDPEAR2",187,0)
ASK(RCSTOP) ; Ask to continue
"RTN","RCDPEAR2",188,0)
 ; If passed by reference ,RCSTOP is returned as 1 if print is aborted
"RTN","RCDPEAR2",189,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPEAR2",190,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEAR2",191,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPEAR2",192,0)
 I ($D(DIRUT))!($D(DUOUT)) S RCSTOP=1 Q
"RTN","RCDPEAR2",193,0)
 Q
"RTN","RCDPEAR2",194,0)
 ;
"RTN","RCDPEAR2",195,0)
EXCEL ; Print report to screen, one record per line for export to MS Excel.
"RTN","RCDPEAR2",196,0)
 W !!,"Aged Days^Trace #^Deposit From/ID^File Date^Deposit Amount^Deposit #^Deposit Post Status^Deposit Date"
"RTN","RCDPEAR2",197,0)
 S RCZ="" F  S RCZ=$O(^TMP($J,"RCEFT_AGED",RCZ)) Q:RCZ=""  S RCZ0=0 F  S RCZ0=$O(^TMP($J,"RCEFT_AGED",RCZ,RCZ0)) Q:'RCZ0  D  G:RCSTOP PRTQ2
"RTN","RCDPEAR2",198,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPG) W:RCPRT="" !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEAR2",199,0)
 . S RC0=$G(^RCY(344.31,RCZ0,0)),RC00=$G(^RCY(344.3,+RC0,0))
"RTN","RCDPEAR2",200,0)
 . S Z=$J(-RCZ,4)_"^"_$P(RC0,U,4)_"^"_$P(RC0,U,2)_"/"_$P(RC0,U,3)_"^"_$S($P(RC0,U,13):$$FMTE^XLFDT($P(RC0,U,13),2),1:"")_"^"
"RTN","RCDPEAR2",201,0)
 . S Z=Z_$P(RC0,U,7)_"^"_$P(RC00,U,6)_"^"_$S($P(RC00,U,12):"",1:"NOT ")_"POSTED TO 8NZZ"_$S($P(RC00,U,12):"^"_$$FMTE^XLFDT($P(RC0,U,12),2),1:"")
"RTN","RCDPEAR2",202,0)
 . W !,Z
"RTN","RCDPEAR2",203,0)
 W !!,"*** END OF REPORT ***",!
"RTN","RCDPEAR2",204,0)
 ;
"RTN","RCDPEAR2",205,0)
PRTQ2 ;
"RTN","RCDPEAR2",206,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEAR2",207,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEAR2",208,0)
 K ^TMP($J,"RCEFT_AGED"),^TMP("RCSELPAY",$J),^TMP("RCPAYER",$J),^TMP($J,"RCERA_ADJ")
"RTN","RCDPEAR2",209,0)
 Q
"RTN","RCDPEM2")
0^5^B188791112^B181574834
"RTN","RCDPEM2",1,0)
RCDPEM2 ;ALB/TMK/PJH - MANUAL ERA AND EFT MATCHING ;05-NOV-02
"RTN","RCDPEM2",2,0)
 ;;4.5;Accounts Receivable;**173,208,276,284,293**;Mar 20, 1995;Build 15
"RTN","RCDPEM2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","RCDPEM2",4,0)
 Q
"RTN","RCDPEM2",5,0)
MATCH1 ; Manually 'match' an ERA to an EFT
"RTN","RCDPEM2",6,0)
 N DA,DR,DIE,DIC,DIR,X,Y,RCEFT,RCERA,RCNAME,RCMATCH,RCQUIT,DUOUT,DTOUT
"RTN","RCDPEM2",7,0)
 W !,"THIS OPTION WILL ALLOW YOU TO MANUALLY MATCH AN EFT DETAIL RECORD",!,"WITH AN ERA RECORD"
"RTN","RCDPEM2",8,0)
M1 S DIR("A")="SELECT THE UNMATCHED EFT TO MATCH TO AN ERA: "
"RTN","RCDPEM2",9,0)
 ;
"RTN","RCDPEM2",10,0)
 ; ** start PRCA*4.5*293 Add extra checks to filter out EFTs that have 
"RTN","RCDPEM2",11,0)
 ;      a payment amount of zero or EFTs that have been removed.
"RTN","RCDPEM2",12,0)
 ;      Only UNMATCHED EFTs with payment amt >0 and not removed should
"RTN","RCDPEM2",13,0)
 ;      be selectable by the user.
"RTN","RCDPEM2",14,0)
 ;
"RTN","RCDPEM2",15,0)
 ;S DIR(0)="PAO^RCY(344.31,:AEMQ",DIR("S")="I '$P(^(0),U,8)"
"RTN","RCDPEM2",16,0)
 S DIR(0)="PAO^RCY(344.31,:AEMQ",DIR("S")="I ('$P(^(0),U,8))&($P($G(^(0)),U,7))&('$P($G(^(3)),U))"
"RTN","RCDPEM2",17,0)
 ; ** end PRCA*4.5*293
"RTN","RCDPEM2",18,0)
 ;
"RTN","RCDPEM2",19,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",20,0)
 I $D(DUOUT)!$D(DTOUT)!(Y<0) G M1Q
"RTN","RCDPEM2",21,0)
 S RCEFT=+Y,RCEFT(0)=$G(^RCY(344.31,+Y,0))
"RTN","RCDPEM2",22,0)
 W !
"RTN","RCDPEM2",23,0)
 S DIC="^RCY(344.31,",DR="0",DA=RCEFT D EN^DIQ
"RTN","RCDPEM2",24,0)
 W !
"RTN","RCDPEM2",25,0)
 S DIR("A")="ARE YOU SURE THIS IS THE EFT YOU WANT TO MATCH?: ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",26,0)
 I $D(DUOUT)!$D(DTOUT) G M1Q
"RTN","RCDPEM2",27,0)
 I Y'=1 G M1
"RTN","RCDPEM2",28,0)
M12 S DIR("A")="SELECT THE UNMATCHED ERA TO MATCH TO EFT #"_RCEFT_": "
"RTN","RCDPEM2",29,0)
 S DIR(0)="PAO^RCY(344.4,:AEMQ",DIR("S")="I '$P(^(0),U,9),'$P(^(0),U,8)"
"RTN","RCDPEM2",30,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",31,0)
 I $D(DUOUT)!$D(DTOUT)!(Y<0) G M1Q
"RTN","RCDPEM2",32,0)
 S RCERA=+Y,RCERA(0)=$G(^RCY(344.4,+Y,0))
"RTN","RCDPEM2",33,0)
 W !
"RTN","RCDPEM2",34,0)
 S DIC="^RCY(344.4,",DR="0",DA=RCERA D EN^DIQ
"RTN","RCDPEM2",35,0)
 W !
"RTN","RCDPEM2",36,0)
 S DIR("A")="ARE YOU SURE THIS IS THE CORRECT ERA TO MATCH TO?: ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",37,0)
 I $D(DUOUT)!$D(DTOUT) G M1Q
"RTN","RCDPEM2",38,0)
 I Y'=1 G M12
"RTN","RCDPEM2",39,0)
 S RCMATCH=(+$P(RCERA(0),U,5)=+$P(RCEFT(0),U,7))
"RTN","RCDPEM2",40,0)
 S RCNAME=($P(RCERA(0),U,6)=$P(RCEFT(0),U,2))
"RTN","RCDPEM2",41,0)
 I 'RCMATCH!'RCNAME D  G:RCQUIT M1Q
"RTN","RCDPEM2",42,0)
 . N Z
"RTN","RCDPEM2",43,0)
 . S RCQUIT=0,Z=1
"RTN","RCDPEM2",44,0)
 . S DIR("A",1)="***WARNING***"
"RTN","RCDPEM2",45,0)
 . I 'RCNAME S Z=Z+1,DIR("A",Z)=$J("",3)_"> The payer names on these two records do not agree"
"RTN","RCDPEM2",46,0)
 . I 'RCMATCH S Z=Z+1,DIR("A",Z)=$J("",3)_"> The amount of payment on these two records do not agree"
"RTN","RCDPEM2",47,0)
 . S DIR(0)="YA",DIR("B")="NO",DIR("A")="ARE YOU SURE YOU WANT TO MATCH THESE 2 RECORDS?: " W ! D ^DIR K DIR
"RTN","RCDPEM2",48,0)
 . I $S($D(DUOUT)!$D(DTOUT):1,Y'=1:1,1:0) S RCQUIT=1 Q
"RTN","RCDPEM2",49,0)
 S DIE="^RCY(344.4,",DR=".09////1",DA=RCERA D ^DIE
"RTN","RCDPEM2",50,0)
 I '$D(Y) S DIE="^RCY(344.31,",DR=".08////1;.1////"_RCERA,DA=RCEFT D ^DIE
"RTN","RCDPEM2",51,0)
 S DIR(0)="EA",DIR("A",1)="EFT #"_RCEFT_" WAS "_$S('$D(Y):"SUCCESSFULLY",1:"NOT")_" MATCHED TO ERA #"_RCERA,DIR("A")="PRESS RETURN TO CONTINUE: " D ^DIR K DIR
"RTN","RCDPEM2",52,0)
M1Q Q
"RTN","RCDPEM2",53,0)
 ;
"RTN","RCDPEM2",54,0)
MATCH2 ; Manually 'match' a 0-balance EFT to a paper EOB
"RTN","RCDPEM2",55,0)
 N DUOUT,DTOUT,DA,DR,DIE,DIC,DIR,X,Y,RCEFT,RCRCPT
"RTN","RCDPEM2",56,0)
 W !,"THIS OPTION WILL ALLOW YOU TO MANUALLY MARK A 0-BALANCE EFT DETAIL RECORD",!,"AS MATCHED TO A PAPER EOB"
"RTN","RCDPEM2",57,0)
M2 S DIR("A")="SELECT THE UNMATCHED 0-BALANCE EFT TO MARK AS MATCHED TO PAPER EOB: "
"RTN","RCDPEM2",58,0)
 S DIR(0)="PAO^RCY(344.31,:AEMQ",DIR("S")="I '$P(^(0),U,8),'$P(^(0),U,7)"
"RTN","RCDPEM2",59,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",60,0)
 I $D(DUOUT)!$D(DTOUT)!(Y'>0) G M2Q
"RTN","RCDPEM2",61,0)
 S RCEFT=+Y
"RTN","RCDPEM2",62,0)
 W !
"RTN","RCDPEM2",63,0)
 S DIC="^RCY(344.31,",DR="0",DA=RCEFT D EN^DIQ
"RTN","RCDPEM2",64,0)
 W !
"RTN","RCDPEM2",65,0)
 S DIR("A")="ARE YOU SURE THIS IS THE EFT YOU WANT TO MARK AS MATCHED?: ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",66,0)
 I $D(DUOUT)!$D(DTOUT) G M2Q
"RTN","RCDPEM2",67,0)
 I Y'=1 G M2
"RTN","RCDPEM2",68,0)
 S DIE="^RCY(344.31,",DR=".08////2",DA=RCEFT D ^DIE
"RTN","RCDPEM2",69,0)
 S DIR(0)="EA",DIR("A")="EFT #"_RCEFT_" WAS "_$S('$D(Y):"SUCCESSFULLY",1:"NOT")_" MARKED AS MATCHED TO PAPER EOB" D ^DIR K DIR
"RTN","RCDPEM2",70,0)
M2Q Q
"RTN","RCDPEM2",71,0)
 ;
"RTN","RCDPEM2",72,0)
MANTR ; Mark an EFT detail record as 'TR' posted manually
"RTN","RCDPEM2",73,0)
 N DA,DR,DIC,DIE,DIR,X,Y,RCEFT,DUOUT,DTOUT,RCZ0,RCTR,RCHOW
"RTN","RCDPEM2",74,0)
 ; EFT detail cannot be associated with a receipt or TR document
"RTN","RCDPEM2",75,0)
 ;
"RTN","RCDPEM2",76,0)
 W !,"*****",!," YOU SHOULD ONLY USE THIS OPTION IF YOU HAVE AN EFT DETAIL RECORD ON YOUR",!," UNAPPLIED DEPOSIT REPORT WHOSE DETAIL WAS ENTERED ON LINE VIA A TR DOCUMENT",!,"*****",!
"RTN","RCDPEM2",77,0)
 S DIC(0)="AEMQ",DIC("S")="I $P(^(0),U,16)="""",$P(^(0),U,11)",DIC("A")="SELECT THE EFT DETAIL WHOSE 'TR' DOC WAS MANUALLY ENTERED ON LINE: ",DIC="^RCY(344.31,"
"RTN","RCDPEM2",78,0)
 W ! D ^DIC K DIC
"RTN","RCDPEM2",79,0)
 I Y'>0 G MANTRQ
"RTN","RCDPEM2",80,0)
 S RCEFT=+Y,RCZ0=$G(^RCY(344.31,RCEFT,0))
"RTN","RCDPEM2",81,0)
 S DIR(0)="FA^2:30^K:X'?1""TR"".E X",DIR("A")="ENTER THE TR DOC # THAT WAS ENTERED ON-LINE FOR THE EFT DETAIL: "
"RTN","RCDPEM2",82,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",83,0)
 I $D(DTOUT)!$D(DUOUT) G MANTRQ
"RTN","RCDPEM2",84,0)
 S RCTR=Y,DR=""
"RTN","RCDPEM2",85,0)
 ;
"RTN","RCDPEM2",86,0)
 I '$P(RCZ0,U,8) D  G:RCQUIT MANTRQ  ;Unmatched
"RTN","RCDPEM2",87,0)
 . S DIR(0)="SA^E:ELECTRONIC ERA;P:PAPER EOB",DIR("A")="WAS THE EFT DETAIL RECEIVED BY (E)RA or (P)APER EOB?: " W ! D ^DIR K DIR
"RTN","RCDPEM2",88,0)
 . I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEM2",89,0)
 . S RCHOW=Y,DR=""
"RTN","RCDPEM2",90,0)
 . I RCHOW="E" D
"RTN","RCDPEM2",91,0)
 .. S DR=";.09R;.08////1"
"RTN","RCDPEM2",92,0)
 . I RCHOW="P" D
"RTN","RCDPEM2",93,0)
 .. S DR=";.08////2"
"RTN","RCDPEM2",94,0)
 ;
"RTN","RCDPEM2",95,0)
 S DIR(0)="YA",DIR("B")="NO",DIR("A",1)="THIS WILL MARK EFT DETAIL #: "_RCEFT_" AS MANUALLY POSTED",DIR("A",2)="  USING TR DOC: "_RCTR
"RTN","RCDPEM2",96,0)
 S DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE?: " W ! D ^DIR K DIR
"RTN","RCDPEM2",97,0)
 I Y'=1 D  G MANTRQ
"RTN","RCDPEM2",98,0)
 . S DIR(0)="EA",DIR("A")="EFT NOT UPDATED - PRESS RETURN TO CONTINUE: " W ! D ^DIR K DIR
"RTN","RCDPEM2",99,0)
 S DIE="^RCY(344.31,",DA=RCEFT,DR=".16R"_DR D ^DIE
"RTN","RCDPEM2",100,0)
 I $D(Y) D
"RTN","RCDPEM2",101,0)
 . S DIE="^RCY(344.31,",DA=RCEFT,DR=".16///@;.08///"_$S($P(RCZ0,U,8)'="":$P(RCZ0,U,8),1:"@") D ^DIE
"RTN","RCDPEM2",102,0)
 . S DIR("A")="EFT NOT UPDATED - PRESS RETURN TO CONTINUE"
"RTN","RCDPEM2",103,0)
 E  D
"RTN","RCDPEM2",104,0)
 . S DIR("A")="STATUS UPDATED FOR EFT DETAIL #: "_RCEFT_" - PRESS RETURN TO CONTINUE: "
"RTN","RCDPEM2",105,0)
 S DIR(0)="EA"
"RTN","RCDPEM2",106,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",107,0)
 ;
"RTN","RCDPEM2",108,0)
MANTRQ Q
"RTN","RCDPEM2",109,0)
 ;
"RTN","RCDPEM2",110,0)
CHK() ; Function returns the ien of CHECK/MO payment type
"RTN","RCDPEM2",111,0)
 Q +$O(^RC(341.1,"AC",4,0))
"RTN","RCDPEM2",112,0)
 ;
"RTN","RCDPEM2",113,0)
 ;; Begin PRCA*4.5*276 - PJH
"RTN","RCDPEM2",114,0)
POSTED ;
"RTN","RCDPEM2",115,0)
 N DIR,X,Y
"RTN","RCDPEM2",116,0)
 S DIR("A")="Select type of receipt to ERA link"
"RTN","RCDPEM2",117,0)
 S DIR("B")="M"
"RTN","RCDPEM2",118,0)
 S DIR(0)="S^M:Manually select receipt to post;"
"RTN","RCDPEM2",119,0)
 S DIR(0)=DIR(0)_"A:Automatic search for receipt to post"
"RTN","RCDPEM2",120,0)
 D ^DIR K DIR
"RTN","RCDPEM2",121,0)
 I Y="M" D MANUAL Q
"RTN","RCDPEM2",122,0)
 I Y="A" D AUTO
"RTN","RCDPEM2",123,0)
 Q
"RTN","RCDPEM2",124,0)
 ;
"RTN","RCDPEM2",125,0)
MANUAL ; Mark an ERA as posted when the data was previously posted using
"RTN","RCDPEM2",126,0)
 ; paper EOB information
"RTN","RCDPEM2",127,0)
 N DIC,DIE,DIR,DA,DR,ERA,RCPT,X,Y,%
"RTN","RCDPEM2",128,0)
 ; Must be unmatched or matched to paper check, must be accepted by FMS, must not be posted yet
"RTN","RCDPEM2",129,0)
 W !!,"THIS OPTION IS USED WHEN YOU HAVE POSTED AN ERA PAID WITH A PAPER CHECK",!,"BY USING THE PAPER EOB AND YOU DID NOT REFERENCE THE ERA IN THE RECEIPT",!!
"RTN","RCDPEM2",130,0)
MAN1 S DIC("S")="I ""02""[+$P(^(0),U,9),$P(^(0),U,14)=0",DIC="^RCY(344.4,",DIC(0)="AEMQ"
"RTN","RCDPEM2",131,0)
 D ^DIC K DIC
"RTN","RCDPEM2",132,0)
 ;
"RTN","RCDPEM2",133,0)
 I Y'>0 G MANUALQ
"RTN","RCDPEM2",134,0)
 ;
"RTN","RCDPEM2",135,0)
 ;Check if ERA is already linked to a receipt
"RTN","RCDPEM2",136,0)
 I $$RCHECK(+Y) G MAN1
"RTN","RCDPEM2",137,0)
 S ERA=+Y
"RTN","RCDPEM2",138,0)
 ;
"RTN","RCDPEM2",139,0)
 S DIC="^RCY(344,",DIC(0)="AEMQ",DIC("A")="RECEIPT: ",DIC("S")="I $$FMS^RCDPEM2(Y,0)"
"RTN","RCDPEM2",140,0)
 D ^DIC K DIC
"RTN","RCDPEM2",141,0)
 I Y'>0 G MANUALQ
"RTN","RCDPEM2",142,0)
 S RCPT=+Y
"RTN","RCDPEM2",143,0)
 ;
"RTN","RCDPEM2",144,0)
 D NOW^%DTC
"RTN","RCDPEM2",145,0)
 ;Update Receipt #, EFT Match Status, Detail Post Status and Paper EOB
"RTN","RCDPEM2",146,0)
 S DIE="^RCY(344.4,",DR=".08////"_RCPT_";.09////2;.14////2;20.03////1",DA=ERA
"RTN","RCDPEM2",147,0)
 ;Update Date/Time Posted and User fields
"RTN","RCDPEM2",148,0)
 S DR=DR_";7.01///"_%_";7.02///"_DUZ
"RTN","RCDPEM2",149,0)
 D ^DIE
"RTN","RCDPEM2",150,0)
 I '$D(Y) D
"RTN","RCDPEM2",151,0)
 . S DIR(0)="EA",DIR("A",1)="ERA HAS BEEN MARKED AS POSTED USING PAPER EOB",DIR("A")="PRESS RETURN TO CONTINUE " D ^DIR K DIR
"RTN","RCDPEM2",152,0)
 ;
"RTN","RCDPEM2",153,0)
MANUALQ Q
"RTN","RCDPEM2",154,0)
 ;
"RTN","RCDPEM2",155,0)
 ;VISN 15 software - created by Karen Flores
"RTN","RCDPEM2",156,0)
 ;
"RTN","RCDPEM2",157,0)
AUTO ;Select ERA's for linking to receipt
"RTN","RCDPEM2",158,0)
 N EXIT
"RTN","RCDPEM2",159,0)
 S EXIT=0 F  D LNKERA Q:EXIT
"RTN","RCDPEM2",160,0)
 Q
"RTN","RCDPEM2",161,0)
 ;
"RTN","RCDPEM2",162,0)
RCHECK(RCSCR) ;Check if already linked to a receipt
"RTN","RCDPEM2",163,0)
 N REC,RNUM,RNAM,AMT
"RTN","RCDPEM2",164,0)
 S REC=$G(^RCY(344.4,RCSCR,0)),RNUM=$P(REC,U,8)
"RTN","RCDPEM2",165,0)
 ;Ignore check if zero amount ERA
"RTN","RCDPEM2",166,0)
 Q:'$P(REC,U,5) 0
"RTN","RCDPEM2",167,0)
 ;Check if already linked to a different receipt
"RTN","RCDPEM2",168,0)
 Q:'RNUM 0
"RTN","RCDPEM2",169,0)
 S RNAM=$P($G(^RCY(344,RNUM,0)),U)
"RTN","RCDPEM2",170,0)
 W !!,"ERA ",RCSCR," is already linked to receipt ",RNAM,!
"RTN","RCDPEM2",171,0)
 Q 1
"RTN","RCDPEM2",172,0)
 ;
"RTN","RCDPEM2",173,0)
LNKERA ;Select ERA
"RTN","RCDPEM2",174,0)
 N ABORT,DIC,DUOUT,DTOUT,REC,RCSCR,X,Y
"RTN","RCDPEM2",175,0)
 ;Must be unposted and either unmatched or matched to paper check
"RTN","RCDPEM2",176,0)
 S DIC("S")="I ""02""[+$P(^(0),U,9),$P(^(0),U,14)=0"
"RTN","RCDPEM2",177,0)
 S DIC="^RCY(344.4,",DIC(0)="AEMQ" W ! D ^DIC K DIC
"RTN","RCDPEM2",178,0)
 S RCSCR=+Y I RCSCR'>0 S EXIT=1 Q
"RTN","RCDPEM2",179,0)
 ;Check if already linked to a different receipt
"RTN","RCDPEM2",180,0)
 Q:$$RCHECK(RCSCR)
"RTN","RCDPEM2",181,0)
 ;
"RTN","RCDPEM2",182,0)
 ;Finds receipt automatically from AR TRANSACTION file #433 
"RTN","RCDPEM2",183,0)
 N AMT,ART,ARTND1,ATTY,BILL,EOB,EOBND,FOUND,RCND,RCSCR1,RECEPT,TAMT
"RTN","RCDPEM2",184,0)
 N TRACE
"RTN","RCDPEM2",185,0)
 ;Trace# from ERA
"RTN","RCDPEM2",186,0)
 S TRACE=$P($G(^RCY(344.4,RCSCR,0)),U,2)
"RTN","RCDPEM2",187,0)
 ;Clear workfile
"RTN","RCDPEM2",188,0)
 K ^TMP("RCDPEM2",$J)
"RTN","RCDPEM2",189,0)
 ;
"RTN","RCDPEM2",190,0)
 S (FOUND,ABORT,RCSCR1)=0
"RTN","RCDPEM2",191,0)
 ;Scan claim lines in ERA for non zero bills
"RTN","RCDPEM2",192,0)
 F  S RCSCR1=$O(^RCY(344.4,RCSCR,1,RCSCR1)) Q:+RCSCR1=0!(FOUND)  D
"RTN","RCDPEM2",193,0)
 .S RCND=$G(^RCY(344.4,RCSCR,1,RCSCR1,0))
"RTN","RCDPEM2",194,0)
 .;Ignore bill if AMOUNT PAID is zero
"RTN","RCDPEM2",195,0)
 .S AMT=$P(RCND,"^",3) Q:+AMT=0
"RTN","RCDPEM2",196,0)
 .;Ignore if EOB has no EOB detail record
"RTN","RCDPEM2",197,0)
 .S EOB=+$P(RCND,"^",2) Q:'EOB
"RTN","RCDPEM2",198,0)
 .;Get EOB detail record
"RTN","RCDPEM2",199,0)
 .S EOBND=$G(^IBM(361.1,EOB,0))
"RTN","RCDPEM2",200,0)
 .;Extract Bill number from EOB detail
"RTN","RCDPEM2",201,0)
 .S BILL=$P(EOBND,"^",1) Q:BILL=""
"RTN","RCDPEM2",202,0)
 .;Ignore duplicate bills on ERA
"RTN","RCDPEM2",203,0)
 .Q:$D(^TMP("RCDPEM2",$J,BILL))
"RTN","RCDPEM2",204,0)
 .S ^TMP("RCDPEM2",$J,BILL)=""
"RTN","RCDPEM2",205,0)
 .;Search AR TRANSACTION file #433 for the bill - newest first
"RTN","RCDPEM2",206,0)
 .S ART=""
"RTN","RCDPEM2",207,0)
 .F  S ART=$O(^PRCA(433,"C",BILL,ART),-1) Q:+ART=0!(FOUND)  D
"RTN","RCDPEM2",208,0)
 ..S ARTND1=$G(^PRCA(433,ART,1))
"RTN","RCDPEM2",209,0)
 ..;Get transaction type
"RTN","RCDPEM2",210,0)
 ..S ATTY=$P(ARTND1,"^",2) Q:'ATTY
"RTN","RCDPEM2",211,0)
 ..;Ignore if not a payment
"RTN","RCDPEM2",212,0)
 ..S ATTY=$P($G(^PRCA(430.3,ATTY,0)),"^",1) Q:ATTY'["PAYMENT"
"RTN","RCDPEM2",213,0)
 ..;Get receipt number
"RTN","RCDPEM2",214,0)
 ..S RECEPT=$P(ARTND1,"^",3) Q:RECEPT=""
"RTN","RCDPEM2",215,0)
 ..;Ignore receipt if status is not 'ACCEPTED BY FMS'
"RTN","RCDPEM2",216,0)
 ..Q:'$$FMS(RECEPT,1)
"RTN","RCDPEM2",217,0)
 ..W !!,"PATIENT: "_$$PNM4^RCDPEWL1(RCSCR,RCSCR1)
"RTN","RCDPEM2",218,0)
 ..W !,"Bill number: ",$P($G(^DGCR(399,BILL,0)),U)
"RTN","RCDPEM2",219,0)
 ..W !,"Check #: ",$$CHQ(RECEPT,BILL)
"RTN","RCDPEM2",220,0)
 ..W !,"Trace #: ",TRACE
"RTN","RCDPEM2",221,0)
 ..W !,"DOS: ",$$FMTE^XLFDT($P($G(^DGCR(399,BILL,0)),U,3))
"RTN","RCDPEM2",222,0)
 ..S TAMT=+$P(ARTND1,"^",5)
"RTN","RCDPEM2",223,0)
 ..W !,"AR Transaction amount: ",TAMT
"RTN","RCDPEM2",224,0)
 ..W !,"RECEIPT#: ",RECEPT
"RTN","RCDPEM2",225,0)
 ..W !,"Date of Receipt: ",$$FMTE^XLFDT($$DATE(RECEPT))
"RTN","RCDPEM2",226,0)
 ..W !,"Total Receipt AMOUNT: ",$J($$AMT(RECEPT),2,2),!
"RTN","RCDPEM2",227,0)
 .. ; PRCA*4.5*284 Change default response from YES to NO
"RTN","RCDPEM2",228,0)
 ..S DIR(0)="Y",DIR("B")="NO"
"RTN","RCDPEM2",229,0)
 ..S DIR("A")="Link to update Remittance entry # "_RCSCR
"RTN","RCDPEM2",230,0)
 ..S DIR("A")=DIR("A")_" with receipt "_RECEPT
"RTN","RCDPEM2",231,0)
 ..D ^DIR K DIR
"RTN","RCDPEM2",232,0)
 ..;Aborted
"RTN","RCDPEM2",233,0)
 ..I $D(DUOUT)!$D(DTOUT) S ABORT=1,FOUND=1 Q
"RTN","RCDPEM2",234,0)
 ..;Attempt to update ERA - finish if successful
"RTN","RCDPEM2",235,0)
 ..I +Y>0 D UPDERA(RCSCR,RECEPT,.FOUND)
"RTN","RCDPEM2",236,0)
 ;Update failed
"RTN","RCDPEM2",237,0)
 I FOUND=0 W !!,"No matching payment transactions found for this ERA"
"RTN","RCDPEM2",238,0)
 ;Clear workfile
"RTN","RCDPEM2",239,0)
 K ^TMP("RCDPEM2",$J)
"RTN","RCDPEM2",240,0)
 Q
"RTN","RCDPEM2",241,0)
 ;
"RTN","RCDPEM2",242,0)
UPDERA(DA,RECEPT,FOUND) ;Mark ERA as posted to paper EOB
"RTN","RCDPEM2",243,0)
 N Y,X,DR,DIE,%
"RTN","RCDPEM2",244,0)
 D NOW^%DTC
"RTN","RCDPEM2",245,0)
 S DIE="^RCY(344.4,",FOUND=0
"RTN","RCDPEM2",246,0)
 ;Update Receipt #, EFT Match Status, Detail Post Status and Paper EOB
"RTN","RCDPEM2",247,0)
 S DR=".08///"_RECEPT_";.09///2;.14///2;20.03///1"
"RTN","RCDPEM2",248,0)
 ;Update Date/Time Posted and User fields
"RTN","RCDPEM2",249,0)
 S DR=DR_";7.01///"_%_";7.02///"_DUZ
"RTN","RCDPEM2",250,0)
 D ^DIE
"RTN","RCDPEM2",251,0)
 I '$D(Y) D
"RTN","RCDPEM2",252,0)
 .K DIR
"RTN","RCDPEM2",253,0)
 .S DIR(0)="EA"
"RTN","RCDPEM2",254,0)
 .S DIR("A",1)="ERA HAS BEEN MARKED AS POSTED USING PAPER EOB"
"RTN","RCDPEM2",255,0)
 .S DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEM2",256,0)
 .S FOUND=1
"RTN","RCDPEM2",257,0)
 E  W !,"Unable to update ERA for receipt "_RECEPT,!
"RTN","RCDPEM2",258,0)
 Q FOUND
"RTN","RCDPEM2",259,0)
 ;
"RTN","RCDPEM2",260,0)
 ;Check FMS status
"RTN","RCDPEM2",261,0)
FMS(RECEPT,FLG) ;
"RTN","RCDPEM2",262,0)
 ; FLG = 1 if RECEPT contains receipt number
"RTN","RCDPEM2",263,0)
 ; FLG = 0 if RECEPT contains ien of the receipt
"RTN","RCDPEM2",264,0)
 N FMSDOCNO,RCRECTDA,RES
"RTN","RCDPEM2",265,0)
 S RES=0 I $G(RECEPT)="" G FMSX
"RTN","RCDPEM2",266,0)
 ;Get receipt IEN
"RTN","RCDPEM2",267,0)
 I 'FLG S RCRECTDA=RECEPT
"RTN","RCDPEM2",268,0)
 I FLG S RCRECTDA=$O(^RCY(344,"B",RECEPT,0))
"RTN","RCDPEM2",269,0)
 I 'RCRECTDA G FMSX
"RTN","RCDPEM2",270,0)
 ;Get FMS document number
"RTN","RCDPEM2",271,0)
 S FMSDOCNO=$$FMSSTAT^RCDPUREC(RCRECTDA)
"RTN","RCDPEM2",272,0)
 ;Ignore if not accepted
"RTN","RCDPEM2",273,0)
 I $P(FMSDOCNO,U,2)'="ACCEPTED BY FMS" G FMSX
"RTN","RCDPEM2",274,0)
 ;Otherwise can be linked
"RTN","RCDPEM2",275,0)
 S RES=1
"RTN","RCDPEM2",276,0)
FMSX ;
"RTN","RCDPEM2",277,0)
 Q RES
"RTN","RCDPEM2",278,0)
 ;
"RTN","RCDPEM2",279,0)
DATE(RECEPT) ;
"RTN","RCDPEM2",280,0)
 N RCRECTDA
"RTN","RCDPEM2",281,0)
 ;Get receipt IEN
"RTN","RCDPEM2",282,0)
 S RCRECTDA=$O(^RCY(344,"B",RECEPT,0)) Q:'RCRECTDA 0
"RTN","RCDPEM2",283,0)
 ;Return Receipt date
"RTN","RCDPEM2",284,0)
 Q $P($G(^RCY(344,RCRECTDA,0)),U,3)
"RTN","RCDPEM2",285,0)
 ;
"RTN","RCDPEM2",286,0)
AMT(RECEPT) ;Total Receipt amount
"RTN","RCDPEM2",287,0)
 N RCRECTDA,RCTRAN,RCTOT
"RTN","RCDPEM2",288,0)
 ;Get receipt IEN
"RTN","RCDPEM2",289,0)
 S RCRECTDA=$O(^RCY(344,"B",RECEPT,0)) Q:'RCRECTDA 0
"RTN","RCDPEM2",290,0)
 ;Total the Receipt transactions
"RTN","RCDPEM2",291,0)
 S RCTRAN=0,RCTOT=0
"RTN","RCDPEM2",292,0)
 F  S RCTRAN=$O(^RCY(344,RCRECTDA,1,RCTRAN)) Q:'RCTRAN  D
"RTN","RCDPEM2",293,0)
 .S RCTOT=RCTOT+$P($G(^RCY(344,RCRECTDA,1,RCTRAN,0)),U,4)
"RTN","RCDPEM2",294,0)
 Q RCTOT
"RTN","RCDPEM2",295,0)
 ;
"RTN","RCDPEM2",296,0)
CHQ(RECEPT,BILL) ;Get check number for this bill
"RTN","RCDPEM2",297,0)
 N RCRECTDA,RCTRAN,RCCHK,PATBILL
"RTN","RCDPEM2",298,0)
 ;Get receipt IEN
"RTN","RCDPEM2",299,0)
 S RCRECTDA=$O(^RCY(344,"B",RECEPT,0)) Q:'RCRECTDA ""
"RTN","RCDPEM2",300,0)
 ;Scan Receipt looking for this bill IEN
"RTN","RCDPEM2",301,0)
 S RCTRAN=0,RCCHK=""
"RTN","RCDPEM2",302,0)
 F  S RCTRAN=$O(^RCY(344,RCRECTDA,1,RCTRAN)) Q:'RCTRAN  D  Q:RCCHK]""
"RTN","RCDPEM2",303,0)
 .;Check for match on bill IEN
"RTN","RCDPEM2",304,0)
 .S PATBILL=$P($G(^RCY(344,RCRECTDA,1,RCTRAN,0)),U,3)
"RTN","RCDPEM2",305,0)
 .;Ignore Patient pointers or null field
"RTN","RCDPEM2",306,0)
 .Q:$P(PATBILL,";",2)'="PRCA(430,"
"RTN","RCDPEM2",307,0)
 .;Compare bill IEN399 to IEN430
"RTN","RCDPEM2",308,0)
 .Q:$P(PATBILL,";")'=BILL
"RTN","RCDPEM2",309,0)
 .;Get check number for this line
"RTN","RCDPEM2",310,0)
 .S RCCHK=$P($G(^RCY(344,RCRECTDA,1,RCTRAN,0)),U,7)
"RTN","RCDPEM2",311,0)
 Q RCCHK
"RTN","RCDPEM2",312,0)
 ;
"RTN","RCDPEM2",313,0)
 ;; End PRCA*4.5*276 - PJH
"RTN","RCDPEM2",314,0)
 ;
"RTN","RCDPEM2",315,0)
MATCH3 ; Manually 'match' a 0-balance ERA that has no check or EFT
"RTN","RCDPEM2",316,0)
 N DUOUT,DTOUT,DA,DR,DIE,DIC,DIR,X,Y,RCERA,RCRCPT
"RTN","RCDPEM2",317,0)
 W !,"THIS OPTION WILL ALLOW YOU TO MANUALLY MARK A 0-BALANCE ERA WITH NO",!,"CHECK OR EFT AS 'MATCH-0 PAYMENT' TO REMOVE IT FROM THE ERA AGING REPORT"
"RTN","RCDPEM2",318,0)
M3 S DIR("A")="SELECT THE UNMATCHED 0-BALANCE ERA TO MARK AS MATCHED: "
"RTN","RCDPEM2",319,0)
 S DIR(0)="PAO^RCY(344.4,:AEMQ",DIR("S")="I '$P(^(0),U,9),'$P(^(0),U,5)"
"RTN","RCDPEM2",320,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",321,0)
 I $D(DUOUT)!$D(DTOUT)!(Y'>0) G M3Q
"RTN","RCDPEM2",322,0)
 S RCERA=+Y
"RTN","RCDPEM2",323,0)
 W !
"RTN","RCDPEM2",324,0)
 S DIC="^RCY(344.4,",DR="0",DA=RCERA D EN^DIQ
"RTN","RCDPEM2",325,0)
 W !
"RTN","RCDPEM2",326,0)
 S DIR("A")="ARE YOU SURE THIS IS THE ERA YOU WANT TO MARK AS MATCH-0 PAYMENT?: ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",327,0)
 I $D(DUOUT)!$D(DTOUT) G M3Q
"RTN","RCDPEM2",328,0)
 I Y'=1 G M3
"RTN","RCDPEM2",329,0)
 S DIE="^RCY(344.4,",DR=".09////3",DA=RCERA D ^DIE
"RTN","RCDPEM2",330,0)
 S DIR(0)="EA",DIR("A")="ERA #"_RCERA_" WAS "_$S('$D(Y):"SUCCESSFULLY",1:"NOT")_" MARKED AS MATCH-0 PAYMENT" D ^DIR K DIR
"RTN","RCDPEM2",331,0)
M3Q Q
"RTN","RCDPEM2",332,0)
 ;
"RTN","RCDPEM2",333,0)
UNMATCH ; Used to 'unmatch' an ERA matched in error
"RTN","RCDPEM2",334,0)
 N X,Y,DIR,DIC,DIE,DIK,DA,DR,RCWL,RCEFT,RCQUIT
"RTN","RCDPEM2",335,0)
 S DIC(0)="AEMQ",DIC="^RCY(344.4,",DIC("S")="I '$P(^(0),U,8),$S('$P(^(0),U,14):1,1:$P(^(0),U,9)=3),$P(^(0),U,9)" D ^DIC K DIC
"RTN","RCDPEM2",336,0)
 Q:Y'>0
"RTN","RCDPEM2",337,0)
 S RCWL=+Y,RCQUIT=0
"RTN","RCDPEM2",338,0)
 I $D(^RCY(344.49,RCWL,0)) D  Q:RCQUIT
"RTN","RCDPEM2",339,0)
 . S DIR(0)="YA",DIR("A",1)="THIS ERA ALREADY HAS A WORKLIST ENTRY AND MUST BE DELETED BEFORE IT CAN BE UNMATCHED",DIR("A")="DO YOU WANT TO DELETE THE WORKLIST ENTRY FOR THIS ERA NOW?: "
"RTN","RCDPEM2",340,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEM2",341,0)
 . I Y'=1 S RCQUIT=1 Q
"RTN","RCDPEM2",342,0)
 . S DIK="^RCY(344.49,",DA=RCWL D ^DIK
"RTN","RCDPEM2",343,0)
 I $O(^RCY(344.31,"AERA",RCWL,0)) S RCEFT=+$O(^(0)) D  Q:RCQUIT
"RTN","RCDPEM2",344,0)
 . S DIR("A",1)="THIS ERA IS MATCHED TO EFT #"_RCEFT,DIR("A")="ARE YOU SURE YOU WANT TO UNMATCH THEM?: ",DIR(0)="YA"
"RTN","RCDPEM2",345,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEM2",346,0)
 . I Y'=1 S RCQUIT=1 Q
"RTN","RCDPEM2",347,0)
 . S DIE="^RCY(344.31,",DR=".1///@;.08////0",DA=RCEFT D ^DIE
"RTN","RCDPEM2",348,0)
 . W !,"EFT #"_RCEFT_" IS NOW UNMATCHED",!
"RTN","RCDPEM2",349,0)
 S DIE="^RCY(344.4,",DR=".09////0;.13///@;.14////0",DA=RCWL D ^DIE
"RTN","RCDPEM2",350,0)
 S DIR("A")="ERA HAS BEEN SUCCESSFULLY UNMATCHED - PRESS RETURN TO CONTINUE "
"RTN","RCDPEM2",351,0)
 S DIR(0)="EA" W ! D ^DIR K DIR
"RTN","RCDPEM2",352,0)
 Q
"RTN","RCDPEM2",353,0)
 ;
"RTN","RCDPEM2",354,0)
 ;
"RTN","RCDPEM2",355,0)
 ; PRCA*4.5*284 - Changed option name from 'Mark ERA Return to Payer' to 'Remove ERA from Active Worklist'
"RTN","RCDPEM2",356,0)
RETN ; Entrypoint for Remove ERA from Active Worklist
"RTN","RCDPEM2",357,0)
 N DIR,X,Y,DTOUT,DUOUT,DIC,RCY,DIE,DA,DR,MSG,%
"RTN","RCDPEM2",358,0)
 D OWNSKEY^XUSRB(.MSG,"RCDPE MARK ERA",DUZ)
"RTN","RCDPEM2",359,0)
 I 'MSG(0) W !!,"SORRY, YOU ARE NOT AUTHORIZED TO USE THIS OPTION",!,"This option is locked with RCDPE MARK ERA key.",! S DIR(0)="E" D ^DIR K DIR Q
"RTN","RCDPEM2",360,0)
 ; PRCA*4.5*284 - Changed description
"RTN","RCDPEM2",361,0)
 W !!,"Use this option to remove an ERA from the EEOB Worklist that should not have"
"RTN","RCDPEM2",362,0)
 W !,"been sent to your site by the payer; or the ERA cannot be removed off the"
"RTN","RCDPEM2",363,0)
 W !,"Worklist using the 'Update ERA Posted Using Paper EOB' option."
"RTN","RCDPEM2",364,0)
 W !!,"This option is only to be used if the paper check has been sent back to the"
"RTN","RCDPEM2",365,0)
 W !,"payer without being deposited.  Once removed, the ERA can no longer be"
"RTN","RCDPEM2",366,0)
 W !,"accessed for processing, but can be viewed under the posted Worklist. For"
"RTN","RCDPEM2",367,0)
 W !,"auditing purposes, this option requires the user to enter a reason for"
"RTN","RCDPEM2",368,0)
 W !,"removing the ERA.",!
"RTN","RCDPEM2",369,0)
 S DIC="^RCY(344.4,",DIC(0)="AEMQ",DIC("S")="I '$P(^(0),U,9),'$P(^(0),U,14)" D ^DIC K DIC
"RTN","RCDPEM2",370,0)
 Q:Y'>0
"RTN","RCDPEM2",371,0)
 S RCY=+Y
"RTN","RCDPEM2",372,0)
 S DIR(0)="YA",DIR("A",1)="THIS WILL REMOVE THE ERA # "_+Y_" FROM THE ACTIVE WORKLIST",DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE? " W ! D ^DIR K DIR
"RTN","RCDPEM2",373,0)
 W !
"RTN","RCDPEM2",374,0)
 I $D(DUOUT)!$D(DTOUT)!(Y=0) D NOCHNG Q
"RTN","RCDPEM2",375,0)
 S DIE="^RCY(344.4,",DA=RCY,DR=".18" D ^DIE
"RTN","RCDPEM2",376,0)
 I $D(Y) D NOCHNG Q
"RTN","RCDPEM2",377,0)
 ; PRCA*4.5*284 Set EFT MATCH STATUS (#344.4,.09) as '4' FOR REMOVED rather than '2' FOR MATCHED TO PAPER CHECK
"RTN","RCDPEM2",378,0)
 D NOW^%DTC S DR=".14////4;.09////4;.16////"_DUZ_";.17////"_% D ^DIE
"RTN","RCDPEM2",379,0)
 S DIR(0)="EA",DIR("A")="PRESS RETURN TO CONTINUE"
"RTN","RCDPEM2",380,0)
 W ! D ^DIR
"RTN","RCDPEM2",381,0)
 Q
"RTN","RCDPEM2",382,0)
 ;
"RTN","RCDPEM2",383,0)
NOCHNG ;
"RTN","RCDPEM2",384,0)
 N DIR,X,Y,DTOUT,DUOUT
"RTN","RCDPEM2",385,0)
 D EN^DDIOL("NO CHANGES HAVE BEEN MADE.","","!")
"RTN","RCDPEM2",386,0)
 S DIR(0)="EA",DIR("A")="PRESS RETURN TO CONTINUE: "
"RTN","RCDPEM2",387,0)
 W !! D ^DIR
"RTN","RCDPEM2",388,0)
 Q
"RTN","RCDPUREC")
0^1^B76306195^B62020340
"RTN","RCDPUREC",1,0)
RCDPUREC ;WISC/RFJ-receipt utilities ;1 Jun 99
"RTN","RCDPUREC",2,0)
 ;;4.5;Accounts Receivable;**114,148,169,173,208,222,293**;Mar 20, 1995;Build 15
"RTN","RCDPUREC",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPUREC",4,0)
 Q
"RTN","RCDPUREC",5,0)
 ;
"RTN","RCDPUREC",6,0)
 ;
"RTN","RCDPUREC",7,0)
ADDRECT(TRANDATE,RCDEPTDA,PAYTYPDA) ;  add a receipt
"RTN","RCDPUREC",8,0)
 ;
"RTN","RCDPUREC",9,0)
 ;  if deposit or payment type is missing, do not add the receipt
"RTN","RCDPUREC",10,0)
 I 'RCDEPTDA!('PAYTYPDA) Q 0
"RTN","RCDPUREC",11,0)
 ;
"RTN","RCDPUREC",12,0)
 N DA,DATA,RCDPFLAG,RECEIPT,TYPE
"RTN","RCDPUREC",13,0)
 ;  if a receipt has already been added for this transmission date
"RTN","RCDPUREC",14,0)
 ;  and deposit number, do not add a new one
"RTN","RCDPUREC",15,0)
 S DA=0 F  S DA=$O(^RCY(344,"AD",+RCDEPTDA,DA)) Q:'DA  S DATA=$G(^RCY(344,DA,0)) I $P($P(DATA,"^",3),".")=TRANDATE,$P(DATA,"^",4)=PAYTYPDA S RCDPFLAG=1 Q
"RTN","RCDPUREC",16,0)
 I $G(RCDPFLAG) Q DA
"RTN","RCDPUREC",17,0)
 ;
"RTN","RCDPUREC",18,0)
 Q $$BLDRCPT(TRANDATE,RCDEPTDA,PAYTYPDA)
"RTN","RCDPUREC",19,0)
 ;
"RTN","RCDPUREC",20,0)
BLDRCPT(TRANDATE,RCDEPTDA,PAYTYPDA) ; Build a receipt with/without deposit
"RTN","RCDPUREC",21,0)
 ;
"RTN","RCDPUREC",22,0)
 N TYPE,RECEIPT,PROD,TSTDUP,GOTONE,DONE
"RTN","RCDPUREC",23,0)
 S PROD=$S($$PROD^XUPROD(1):"PROD",1:"TEST"),(TSTDUP,GOTONE,DONE)=0
"RTN","RCDPUREC",24,0)
 ;  build unique receipt number for date
"RTN","RCDPUREC",25,0)
 S TYPE=$E($G(^RC(341.1,PAYTYPDA,0))) I TYPE="" S TYPE="Z"
"RTN","RCDPUREC",26,0)
 I TYPE="C",$G(RCDEPTDA)["ERACHK" S RCDEPTDA=+RCDEPTDA,TYPE="E" ; ERA plus paper check EDI Lockbox receipt
"RTN","RCDPUREC",27,0)
 ;
"RTN","RCDPUREC",28,0)
 ;  this code is specific for "TEST" environments.
"RTN","RCDPUREC",29,0)
 I PROD="TEST" D   ; Prompt to see if we need to find a duplicate receipt number for testing purposes.
"RTN","RCDPUREC",30,0)
 . K DIR
"RTN","RCDPUREC",31,0)
 . S DIR(0)="FAO^1:12",DIR("A")="ENTER A DUPLICATE RECEIPT #: "
"RTN","RCDPUREC",32,0)
 . D ^DIR
"RTN","RCDPUREC",33,0)
 . I Y'="" S TSTDUP=1 S RECEIPT=Y K DIR Q
"RTN","RCDPUREC",34,0)
 . K DIR
"RTN","RCDPUREC",35,0)
 . S DIR(0)="YA",DIR("A")="DO YOU WANT A DUPLICATE RECEIPT # TO TEST WITH?: ",DIR("B")="NO"
"RTN","RCDPUREC",36,0)
 . W ! D ^DIR K DIR W ! S TSTDUP=Y   ; TSTDUP: 1=YES, 0=NO
"RTN","RCDPUREC",37,0)
 . I TSTDUP=1 S RECEIPT="" D
"RTN","RCDPUREC",38,0)
 .. F  S RECEIPT=$O(^PRCA(433,"AF",RECEIPT)) D  Q:DONE
"RTN","RCDPUREC",39,0)
 ... I RECEIPT="" W !!,"NO MORE DUPLICATE RECEIPT NUMBER SCENARIOS FOUND!",! S DONE=1 H 2 Q
"RTN","RCDPUREC",40,0)
 ... I '$D(^RCY(344,"B",RECEIPT)) D
"RTN","RCDPUREC",41,0)
 .... W !!,"RECEIPT #: "_RECEIPT_" WAS FOUND & WE WILL ATTEMPT TO USE IT.",! S DONE=1 H 2
"RTN","RCDPUREC",42,0)
 ... Q
"RTN","RCDPUREC",43,0)
 ;  lockbox receipt in the form of L980901A0, do not include century
"RTN","RCDPUREC",44,0)
 F  D  Q:+GOTONE
"RTN","RCDPUREC",45,0)
 . ;If "testing", even though we have a receipt #...we want to prove we can't use and we must find a unique receipt #
"RTN","RCDPUREC",46,0)
 . I 'TSTDUP S RECEIPT=$$NEXT(TYPE_$E(TRANDATE,2,7))  ;get last two digits from 00 to ZZ 
"RTN","RCDPUREC",47,0)
 . S TSTDUP=0   ; This will allow testing of duplicate receipt without creating an infinite loop.
"RTN","RCDPUREC",48,0)
 . I RECEIPT="" Q
"RTN","RCDPUREC",49,0)
 . I $D(^RCY(344,"B",RECEIPT)) Q
"RTN","RCDPUREC",50,0)
 . I $D(^PRCA(433,"AF",RECEIPT)) Q
"RTN","RCDPUREC",51,0)
 . S GOTONE=1
"RTN","RCDPUREC",52,0)
 . Q
"RTN","RCDPUREC",53,0)
 ;
"RTN","RCDPUREC",54,0)
 I RECEIPT'="" L +^RCY(344,"B",RECEIPT):2
"RTN","RCDPUREC",55,0)
 ;  add it
"RTN","RCDPUREC",56,0)
 N %,%DT,D0,DA,DD,DI,DIC,DIE,DLAYGO,DO,DQ,DR,X,Y
"RTN","RCDPUREC",57,0)
 S DIC="^RCY(344,",DIC(0)="L",DLAYGO=344
"RTN","RCDPUREC",58,0)
 ;  .02 = opened by                  .03 = date opened = transmission dt
"RTN","RCDPUREC",59,0)
 ;  .04 = type of payment            .06 = deposit ticket
"RTN","RCDPUREC",60,0)
 ;  .14 = status (set to 1:open)
"RTN","RCDPUREC",61,0)
 S DIC("DR")=".02////"_DUZ_";.03///"_TRANDATE_";.04////"_PAYTYPDA_$S(RCDEPTDA:";.06////"_RCDEPTDA,1:"")_";.14////1;"
"RTN","RCDPUREC",62,0)
 S X=RECEIPT
"RTN","RCDPUREC",63,0)
 D FILE^DICN
"RTN","RCDPUREC",64,0)
 L -^RCY(344,"B",RECEIPT)
"RTN","RCDPUREC",65,0)
 I Y>0 Q +Y
"RTN","RCDPUREC",66,0)
 Q 0
"RTN","RCDPUREC",67,0)
 ;
"RTN","RCDPUREC",68,0)
 ;
"RTN","RCDPUREC",69,0)
NEXT(RECEIPT) ;  get next 2 digits in sequence 00 to ZZ for receipt
"RTN","RCDPUREC",70,0)
 ;
"RTN","RCDPUREC",71,0)
 ;  start with 00
"RTN","RCDPUREC",72,0)
 I '$D(^RCY(344,"B",RECEIPT_"00")) Q RECEIPT_"00"
"RTN","RCDPUREC",73,0)
 ;
"RTN","RCDPUREC",74,0)
 N DIGIT1,DIGIT2,LAST
"RTN","RCDPUREC",75,0)
 ;  get the last one used and increment by 1
"RTN","RCDPUREC",76,0)
 S LAST=$O(^RCY(344,"B",RECEIPT_"ZZ"),-1)  ;example L2980901ZZ
"RTN","RCDPUREC",77,0)
 S DIGIT1=$A($E(LAST,8)),DIGIT2=$A($E(LAST,9))
"RTN","RCDPUREC",78,0)
 ;  increment the ascii value of last digit
"RTN","RCDPUREC",79,0)
 S DIGIT2=DIGIT2+1
"RTN","RCDPUREC",80,0)
 ;  ascii 48=0, 57=9, 65=A, 90=Z
"RTN","RCDPUREC",81,0)
 I DIGIT2>57,DIGIT2<65 S DIGIT2=65 ;an A
"RTN","RCDPUREC",82,0)
 ;  digit2 above a Z, set digit2 to a 0 and increment digit 1
"RTN","RCDPUREC",83,0)
 I DIGIT2>90 S DIGIT2=48,DIGIT1=DIGIT1+1
"RTN","RCDPUREC",84,0)
 I DIGIT1>57,DIGIT1<65 S DIGIT1=65 ;an A
"RTN","RCDPUREC",85,0)
 ;  digit 1 is above a Z, reset and reuse the Z
"RTN","RCDPUREC",86,0)
 I DIGIT1>90 S DIGIT1=90,DIGIT2=90
"RTN","RCDPUREC",87,0)
 ;
"RTN","RCDPUREC",88,0)
 Q RECEIPT_$C(DIGIT1)_$C(DIGIT2)
"RTN","RCDPUREC",89,0)
 ;
"RTN","RCDPUREC",90,0)
 ;
"RTN","RCDPUREC",91,0)
SELRECT(ADDNEW,RCDEPTDA) ;  select a receipt
"RTN","RCDPUREC",92,0)
 ;  if $g(addnew) allow adding a new receipt
"RTN","RCDPUREC",93,0)
 ;  if $g(rcdeptda) allow selection of receipts for the deposit only
"RTN","RCDPUREC",94,0)
 ;  if $g(addnew) and $g(rcdeptda) deposit number auto set for new receipt
"RTN","RCDPUREC",95,0)
 ;  returns -1 for timeout or ^, 0 for no selection, or ien of receipt
"RTN","RCDPUREC",96,0)
 N %,%Y,C,D0,DA,DI,DIC,DIE,DIK,DG,DLAYGO,DQ,DR,DTOUT,DUOUT,RCREFLUP,X,Y,RCDE,RCLB,RC1,RC2,RCREQ,RCY
"RTN","RCDPUREC",97,0)
 S DIC="^RCY(344,",DIC(0)="QEAM",DIC("A")="Select RECEIPT: "
"RTN","RCDPUREC",98,0)
 S DIC("W")="D DICW^RCDPUREC"
"RTN","RCDPUREC",99,0)
 ;  set screen to select receipts linked to deposit and to screen out
"RTN","RCDPUREC",100,0)
 ;  selection of EDI Lockbox-type receipts unless an EFT is associated
"RTN","RCDPUREC",101,0)
 ;  with the deposit and the receipt is not associated with an ERA
"RTN","RCDPUREC",102,0)
 S RCDE=+$O(^RCY(344.3,"ARDEP",+$G(RCDEPTDA),0))
"RTN","RCDPUREC",103,0)
 I $G(RCDEPTDA) D
"RTN","RCDPUREC",104,0)
 .   S DIC("S")="N Z S Z=$G(^(0)) I $S('$$EDILBEV^RCDPEU($P(Z,U,4)):'RCDE,1:RCDE&'$P(Z,U,18)),($P(Z,U,6)=""""!($P(Z,U,6)=RCDEPTDA))"
"RTN","RCDPUREC",105,0)
 .   S DIC("A")="Select RECEIPT (for deposit "_$P(^RCY(344.1,RCDEPTDA,0),"^")_"): "
"RTN","RCDPUREC",106,0)
 ;  use special lookup on input
"RTN","RCDPUREC",107,0)
 I '$G(RCDEPTDA) S RCREFLUP=1
"RTN","RCDPUREC",108,0)
 ;  add new entries
"RTN","RCDPUREC",109,0)
 S RC1="TYPE NOT VALID FOR THIS RECEIPT",RC2=">>AN EFT REFERENCE IS REQUIRED"
"RTN","RCDPUREC",110,0)
 I $G(ADDNEW) D
"RTN","RCDPUREC",111,0)
 .   S DIC("A")="Select RECEIPT (or add a new one): "
"RTN","RCDPUREC",112,0)
 .   S DIC(0)="QEALM",DLAYGO=344
"RTN","RCDPUREC",113,0)
 .   S DIC("DR")="S RCREQ=0;.02////"_DUZ_";.03///NOW;.14////1;@4;.04"_$S(RCDE:"////"_$$LBEVENT^RCDPEU(),1:"")
"RTN","RCDPUREC",114,0)
 .   S DIC("DR")=DIC("DR")_";S RCLB=$$EDILBEV^RCDPEU(+X) S:'RCLB Y=""@6"";I $G(RCDEPTDA) S Y=$S('RCDE:""@8"",1:""@6"");W !,RC2 S RCREQ=1;.17;S Y=""@99"""
"RTN","RCDPUREC",115,0)
 .   S DIC("DR")=DIC("DR")_";@6;.06"_$S($G(RCDEPTDA):"////"_RCDEPTDA,1:"")_";S:'RCDE Y=""@99"";.17////"_+RCDE_";S Y=""@99"";@8;W *7,!,RC1 S Y=""@4"";@99"
"RTN","RCDPUREC",116,0)
 .   S DIC("DR")=DIC("DR")_";"
"RTN","RCDPUREC",117,0)
 D ^DIC
"RTN","RCDPUREC",118,0)
 S RCY=Y
"RTN","RCDPUREC",119,0)
 I RCY<0,'$G(DUOUT),'$G(DTOUT) S RCY=0
"RTN","RCDPUREC",120,0)
 I $P(RCY,U,3),$G(RCREQ) D
"RTN","RCDPUREC",121,0)
 . I '$P($G(^RCY(344,+RCY,0)),U,17) D  Q
"RTN","RCDPUREC",122,0)
 .. W !,*7,"NO EFT REFERENCED - RECEIPT NOT ADDED"
"RTN","RCDPUREC",123,0)
 .. S DA=+RCY,DIK="^RCY(344," D ^DIK
"RTN","RCDPUREC",124,0)
 .. S RCY=0
"RTN","RCDPUREC",125,0)
 . S DIE="^RCY(344.31,",DA=$P(^RCY(344,+RCY,0),U,17),DR=".08////2" D ^DIE
"RTN","RCDPUREC",126,0)
 Q +RCY
"RTN","RCDPUREC",127,0)
 ;
"RTN","RCDPUREC",128,0)
 ;
"RTN","RCDPUREC",129,0)
DICW ;  write identifier code for receipt lookup
"RTN","RCDPUREC",130,0)
 N DATA
"RTN","RCDPUREC",131,0)
 S DATA=$G(^RCY(344,Y,0)) I DATA="" Q
"RTN","RCDPUREC",132,0)
 ;  opened by
"RTN","RCDPUREC",133,0)
 W ?13,"by: ",$E($P($G(^VA(200,+$P(DATA,"^",2),0)),"^"),1,15)
"RTN","RCDPUREC",134,0)
 ;  date opened
"RTN","RCDPUREC",135,0)
 I '$P(DATA,"^",3) S $P(DATA,"^",3)="???????"
"RTN","RCDPUREC",136,0)
 W ?35," on: ",$E($P(DATA,"^",3),4,5),"/",$E($P(DATA,"^",3),6,7),"/",$E($P(DATA,"^",3),2,3)
"RTN","RCDPUREC",137,0)
 ;  type of payment
"RTN","RCDPUREC",138,0)
 W ?50," ",$E($P($G(^RC(341.1,+$P(DATA,"^",4),0)),"^"),1,18)
"RTN","RCDPUREC",139,0)
 ;  status
"RTN","RCDPUREC",140,0)
 W ?70," ",$S($P(DATA,"^",14):"OPEN",1:"CLOSED")
"RTN","RCDPUREC",141,0)
 Q
"RTN","RCDPUREC",142,0)
 ;
"RTN","RCDPUREC",143,0)
 ;
"RTN","RCDPUREC",144,0)
LOOKUP ;  special lookup on receipts, called from ^dd(344,.01,7.5)
"RTN","RCDPUREC",145,0)
 ;  if rcreflup flag not set, do not use special lookup
"RTN","RCDPUREC",146,0)
 I '$D(RCREFLUP) Q
"RTN","RCDPUREC",147,0)
 ;  user entered O.? for lookup on open receipts
"RTN","RCDPUREC",148,0)
 I X["O."!(X["o.") S DIC("S")="I $P(^(0),U,14)" S X="?" Q
"RTN","RCDPUREC",149,0)
 ;  user entered C.? for lookup on closed receipts
"RTN","RCDPUREC",150,0)
 I X["C."!(X["c.") S DIC("S")="I '$P(^(0),U,14)" S X="?" Q
"RTN","RCDPUREC",151,0)
 K DIC("S")
"RTN","RCDPUREC",152,0)
 Q
"RTN","RCDPUREC",153,0)
 ;
"RTN","RCDPUREC",154,0)
 ;
"RTN","RCDPUREC",155,0)
EDITREC(DA,DR) ;  edit the receipt (dr = string of fields to ask)
"RTN","RCDPUREC",156,0)
 N D,D0,DI,DIC,DIE,DQ,X,Y,RCDR1,RCDR2,RCDR3,DIPA,RCDA
"RTN","RCDPUREC",157,0)
 S (DIC,DIE)="^RCY(344,",RCDA=DA
"RTN","RCDPUREC",158,0)
 I $G(DR)="" N DR D
"RTN","RCDPUREC",159,0)
 . S DR=".01;.04;"_$S($P($G(^RCY(344,RCDA,0)),U,17):"",1:"I $P($G(^RCY(344,DA,0)),U,17) S Y=""@1001"";.06;@1001;")_"D LBT^RCDPUREC(.Y);.18;@99"
"RTN","RCDPUREC",160,0)
 ;
"RTN","RCDPUREC",161,0)
 I $G(DR)[".04;" D  ; Add a check to DR string for type of payment edit
"RTN","RCDPUREC",162,0)
 . D EDIT4^RCDPURE1(RCDA,DR,.RCDR1,.RCDR2,.RCDR3)
"RTN","RCDPUREC",163,0)
 . S DR=$S($E(RCDR1,$L(RCDR1))'=";":RCDR1,1:$E(RCDR1,1,$L(RCDR1)-1)),DR(1,344,1)=RCDR2,DR(1,344,2)=RCDR3
"RTN","RCDPUREC",164,0)
 ;
"RTN","RCDPUREC",165,0)
 D ^DIE
"RTN","RCDPUREC",166,0)
 I $P($G(^RCY(344,RCDA,0)),U,6),$P(^(0),U,17),$$EDILBEV^RCDPEU(+$P(^(0),U,4)) S DIE="^RCY(344,",DR=".06///@" D ^DIE ; Delete deposit if EDI LB event and EFT referenced 
"RTN","RCDPUREC",167,0)
 I $D(^RCY(344,RCDA,0)) D LASTEDIT(RCDA)
"RTN","RCDPUREC",168,0)
 Q
"RTN","RCDPUREC",169,0)
 ;
"RTN","RCDPUREC",170,0)
LBT(Y) ; Determine if Y should be set to @99 ; DR string too long
"RTN","RCDPUREC",171,0)
 ;  Assume DA,RCM3 is set
"RTN","RCDPUREC",172,0)
 N Z,Z0
"RTN","RCDPUREC",173,0)
 S Z0=$G(^RCY(344,DA,0)),Z=($P(Z0,U,4)=$$LBEVENT^RCDPEU())
"RTN","RCDPUREC",174,0)
 ; Don't allow to edit ERA reference if worklist created it
"RTN","RCDPUREC",175,0)
 I $P($G(^RCY(344.49,+$P(Z0,U,18),0)),U,2)=DA S Y="@99" Q
"RTN","RCDPUREC",176,0)
 ; only ask for ERA if not EDI lockbox and deposit # exists
"RTN","RCDPUREC",177,0)
 I $S(Z:1,1:'$P($G(^RCY(344,DA,0)),U,6)) S Y="@99" Q
"RTN","RCDPUREC",178,0)
 W !,RCM3
"RTN","RCDPUREC",179,0)
 Q
"RTN","RCDPUREC",180,0)
 ;
"RTN","RCDPUREC",181,0)
TYP(Y) ; Determine where to jump to in the 'type' edit of the template
"RTN","RCDPUREC",182,0)
 ; DR string too long
"RTN","RCDPUREC",183,0)
 ;  Assumes RCP,RCNO,RCN4,RCO4,DA defined
"RTN","RCDPUREC",184,0)
 N RCCHANGE
"RTN","RCDPUREC",185,0)
 I $S(RCN4=RCO4&(RCN4'=14):1,RCN4'=14&(RCO4'=14):1,1:0) S Y=RCP+2 G TYPQ
"RTN","RCDPUREC",186,0)
 ; To get here, the type was changed and it either was 14 or is now 14
"RTN","RCDPUREC",187,0)
 S RCCHANGE=(RCN4'=RCO4)
"RTN","RCDPUREC",188,0)
 I RCCHANGE D  G:Y TYPQ
"RTN","RCDPUREC",189,0)
 . ; Type can't be changed if the old type was EDI Lockbox and there is
"RTN","RCDPUREC",190,0)
 . ;    an ERA detail record associated with it
"RTN","RCDPUREC",191,0)
 . I RCO4=14,$P($G(^RCY(344,DA,0)),U,18) S Y=RCP+1 Q
"RTN","RCDPUREC",192,0)
 . ; Type can't be changed to EDI Lockbox if rcpt detail already exists
"RTN","RCDPUREC",193,0)
 . I RCN4=14,$O(^RCY(344,DA,1,0)) S Y=RCP+1 Q
"RTN","RCDPUREC",194,0)
 . ; If type changed to EDI LOCKBOX, must have an EFT reference
"RTN","RCDPUREC",195,0)
 I RCN4'=14 S Y=RCP+2 G TYPQ
"RTN","RCDPUREC",196,0)
TYPQ I '$G(Y) D
"RTN","RCDPUREC",197,0)
 . ; If ERA is matched to EFT, don't allow to edit EFT
"RTN","RCDPUREC",198,0)
 . I $P($G(^RCY(344,DA,0)),U,17),$P($G(^(0)),U,18),$D(^RCY(344.31,"AERA",+$P($G(^RCY(344,DA,0)),U,18),+$P($G(^RCY(344,DA,0)),U,17))) S Y=RCP+2 Q
"RTN","RCDPUREC",199,0)
 . S RCNE=$$ASK17^RCDPUREC(DA) I 'RCNE S RCNO=1,Y=RCP+1
"RTN","RCDPUREC",200,0)
 I $G(Y) S Y="@"_Y
"RTN","RCDPUREC",201,0)
 Q
"RTN","RCDPUREC",202,0)
 ;
"RTN","RCDPUREC",203,0)
LASTEDIT(DA) ;  set when receipt last edit
"RTN","RCDPUREC",204,0)
 N %DT,D,D0,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RCDPUREC",205,0)
 S (DIC,DIE)="^RCY(344,"
"RTN","RCDPUREC",206,0)
 S DR=".11////"_DUZ_";.12///NOW;"
"RTN","RCDPUREC",207,0)
 D ^DIE
"RTN","RCDPUREC",208,0)
 Q
"RTN","RCDPUREC",209,0)
 ;
"RTN","RCDPUREC",210,0)
 ;
"RTN","RCDPUREC",211,0)
MARKPROC(DA,FMSDOCNO) ;  mark receipt as processed, set receipt as closed,
"RTN","RCDPUREC",212,0)
 ;  store fms document number if passed
"RTN","RCDPUREC",213,0)
 N %DT,D,D0,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RCDPUREC",214,0)
 S (DIC,DIE)="^RCY(344,"
"RTN","RCDPUREC",215,0)
 S DR=".07////"_DUZ_";.08///NOW;.14////0;"
"RTN","RCDPUREC",216,0)
 I $G(FMSDOCNO)'="" S DR=DR_"200////"_FMSDOCNO_";"
"RTN","RCDPUREC",217,0)
 D ^DIE
"RTN","RCDPUREC",218,0)
 Q
"RTN","RCDPUREC",219,0)
 ;
"RTN","RCDPUREC",220,0)
 ;
"RTN","RCDPUREC",221,0)
FMSSTAT(RCRECTDA) ;  return the fms cr document ^ status ^ if sent before lockbox
"RTN","RCDPUREC",222,0)
 N FMSDOCNO,PRELOCK,STATUS
"RTN","RCDPUREC",223,0)
 ;  get the fms document from the receipt
"RTN","RCDPUREC",224,0)
 S FMSDOCNO=$P($G(^RCY(344,RCRECTDA,2)),"^")
"RTN","RCDPUREC",225,0)
 ;  if not on receipt, it may be earlier than lockbox and on deposit
"RTN","RCDPUREC",226,0)
 I FMSDOCNO="" S FMSDOCNO=$P($G(^RCY(344.1,+$P($G(^RCY(344,RCRECTDA,0)),"^",6),2)),"^") I FMSDOCNO'="" S PRELOCK=1
"RTN","RCDPUREC",227,0)
 S STATUS=$$STATUS^GECSSGET(FMSDOCNO)
"RTN","RCDPUREC",228,0)
 I STATUS=-1 S STATUS="NOT ENTERED"
"RTN","RCDPUREC",229,0)
 ;
"RTN","RCDPUREC",230,0)
 ;  if the cr document is entered, check to see if entered on line
"RTN","RCDPUREC",231,0)
 I FMSDOCNO'="",$P($G(^RCY(344,RCRECTDA,2)),"^",2) S STATUS="ON LINE ENTRY"
"RTN","RCDPUREC",232,0)
 ;
"RTN","RCDPUREC",233,0)
 ;  if the cr document is missing, set status to not sent
"RTN","RCDPUREC",234,0)
 I FMSDOCNO="" S FMSDOCNO="NOT SENT"
"RTN","RCDPUREC",235,0)
 ;
"RTN","RCDPUREC",236,0)
 Q FMSDOCNO_"^"_STATUS_"^"_$G(PRELOCK)
"RTN","RCDPUREC",237,0)
 ;
"RTN","RCDPUREC",238,0)
ASK17(DA) ; Ask,return the EFT detail record for a receipt
"RTN","RCDPUREC",239,0)
 ; DA = the ien of the RECEIPT (file 344)
"RTN","RCDPUREC",240,0)
 N DIR,X,Y
"RTN","RCDPUREC",241,0)
 S DIR(0)="PAO^RCY(344.31,:AEMQ",DIR("?",1)="Select the EFT that contained the deposited money that this receipt details",DIR("?",2)="An EFT detail record can only be associated with one receipt"
"RTN","RCDPUREC",242,0)
 S DIR("?")="This is required if the type of payment is EDI LOCKBOX"
"RTN","RCDPUREC",243,0)
 S DIR("A")="  EFT DETAIL RECORD: ",DIR("S")="I $S('$O(^RCY(344,""AEFT"",+Y,0)):1,1:$O(^(0))=DA)"
"RTN","RCDPUREC",244,0)
 S:$P($G(^RCY(344,DA,0)),U,17) DIR("B")=$P(^(0),U,17)
"RTN","RCDPUREC",245,0)
 D ^DIR K DIR
"RTN","RCDPUREC",246,0)
 I $D(DUOUT)!$D(DTOUT)!Y=""!(Y<0) Q 0
"RTN","RCDPUREC",247,0)
 Q +Y
"RTN","RCDPUREC",248,0)
 ;
"VER")
8.0^22.0
**END**
**END**
