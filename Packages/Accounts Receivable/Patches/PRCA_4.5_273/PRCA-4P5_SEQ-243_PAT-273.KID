Released PRCA*4.5*273 SEQ #243
Extracted from mail message
**KIDS**:PRCA*4.5*273^

**INSTALL NAME**
PRCA*4.5*273
"BLD",8206,0)
PRCA*4.5*273^ACCOUNTS RECEIVABLE^0^3101102^y
"BLD",8206,4,0)
^9.64PA^^
"BLD",8206,6.3)
3
"BLD",8206,"ABPKG")
n
"BLD",8206,"KRN",0)
^9.67PA^779.2^20
"BLD",8206,"KRN",.4,0)
.4
"BLD",8206,"KRN",.401,0)
.401
"BLD",8206,"KRN",.402,0)
.402
"BLD",8206,"KRN",.403,0)
.403
"BLD",8206,"KRN",.5,0)
.5
"BLD",8206,"KRN",.84,0)
.84
"BLD",8206,"KRN",3.6,0)
3.6
"BLD",8206,"KRN",3.8,0)
3.8
"BLD",8206,"KRN",9.2,0)
9.2
"BLD",8206,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",8206,"KRN",9.8,0)
9.8
"BLD",8206,"KRN",9.8,"NM",0)
^9.68A^9^9
"BLD",8206,"KRN",9.8,"NM",1,0)
RCRJRCOC^^0^B57425018
"BLD",8206,"KRN",9.8,"NM",2,0)
RCXFMSUR^^0^B58588015
"BLD",8206,"KRN",9.8,"NM",3,0)
RCXFMSSV^^0^B61841858
"BLD",8206,"KRN",9.8,"NM",4,0)
RCRJRDEP^^0^B57617465
"BLD",8206,"KRN",9.8,"NM",5,0)
RCRJRBD^^0^B70045536
"BLD",8206,"KRN",9.8,"NM",6,0)
RCRJRBDT^^0^B55944684
"BLD",8206,"KRN",9.8,"NM",7,0)
RCXFMSUF^^0^B36597164
"BLD",8206,"KRN",9.8,"NM",8,0)
RCXFMSPR^^0^B25382600
"BLD",8206,"KRN",9.8,"NM",9,0)
PRCAACC^^0^B8846859
"BLD",8206,"KRN",9.8,"NM","B","PRCAACC",9)

"BLD",8206,"KRN",9.8,"NM","B","RCRJRBD",5)

"BLD",8206,"KRN",9.8,"NM","B","RCRJRBDT",6)

"BLD",8206,"KRN",9.8,"NM","B","RCRJRCOC",1)

"BLD",8206,"KRN",9.8,"NM","B","RCRJRDEP",4)

"BLD",8206,"KRN",9.8,"NM","B","RCXFMSPR",8)

"BLD",8206,"KRN",9.8,"NM","B","RCXFMSSV",3)

"BLD",8206,"KRN",9.8,"NM","B","RCXFMSUF",7)

"BLD",8206,"KRN",9.8,"NM","B","RCXFMSUR",2)

"BLD",8206,"KRN",19,0)
19
"BLD",8206,"KRN",19.1,0)
19.1
"BLD",8206,"KRN",101,0)
101
"BLD",8206,"KRN",409.61,0)
409.61
"BLD",8206,"KRN",771,0)
771
"BLD",8206,"KRN",779.2,0)
779.2
"BLD",8206,"KRN",870,0)
870
"BLD",8206,"KRN",8989.51,0)
8989.51
"BLD",8206,"KRN",8989.52,0)
8989.52
"BLD",8206,"KRN",8994,0)
8994
"BLD",8206,"KRN","B",.4,.4)

"BLD",8206,"KRN","B",.401,.401)

"BLD",8206,"KRN","B",.402,.402)

"BLD",8206,"KRN","B",.403,.403)

"BLD",8206,"KRN","B",.5,.5)

"BLD",8206,"KRN","B",.84,.84)

"BLD",8206,"KRN","B",3.6,3.6)

"BLD",8206,"KRN","B",3.8,3.8)

"BLD",8206,"KRN","B",9.2,9.2)

"BLD",8206,"KRN","B",9.8,9.8)

"BLD",8206,"KRN","B",19,19)

"BLD",8206,"KRN","B",19.1,19.1)

"BLD",8206,"KRN","B",101,101)

"BLD",8206,"KRN","B",409.61,409.61)

"BLD",8206,"KRN","B",771,771)

"BLD",8206,"KRN","B",779.2,779.2)

"BLD",8206,"KRN","B",870,870)

"BLD",8206,"KRN","B",8989.51,8989.51)

"BLD",8206,"KRN","B",8989.52,8989.52)

"BLD",8206,"KRN","B",8994,8994)

"BLD",8206,"QUES",0)
^9.62^^
"BLD",8206,"REQB",0)
^9.611^2^2
"BLD",8206,"REQB",1,0)
IB*2.0*437^2
"BLD",8206,"REQB",2,0)
PRCA*4.5*272^2
"BLD",8206,"REQB","B","IB*2.0*437",1)

"BLD",8206,"REQB","B","PRCA*4.5*272",2)

"MBREQ")
0
"PKG",53,-1)
1^1
"PKG",53,0)
ACCOUNTS RECEIVABLE^PRCA^FMS
"PKG",53,20,0)
^9.402P^1^1
"PKG",53,20,1,0)
2^^PRCAMRG
"PKG",53,20,1,1)

"PKG",53,20,"B",2,1)

"PKG",53,22,0)
^9.49I^1^1
"PKG",53,22,1,0)
4.5^2950913^2960627
"PKG",53,22,1,"PAH",1,0)
273^3101102
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
9
"RTN","PRCAACC")
0^9^B8846859^B8809868
"RTN","PRCAACC",1,0)
PRCAACC ;WASH-ISC@ALTOONA,PA/CMS-AR ACCRUAL TOTALS ; 10/19/10 1:36pm
"RTN","PRCAACC",2,0)
 ;;4.5;Accounts Receivable;**60,74,90,101,157,203,220,273**;Mar 20, 1995;Build 3
"RTN","PRCAACC",3,0)
 ;;Per VHA Directive 2004-38, this routine should not be modified.
"RTN","PRCAACC",4,0)
 NEW PRCAQUE,PRCADEV,PRCA,ZTSK
"RTN","PRCAACC",5,0)
 S PRCA("MESS")="Do you wish to queue this report" D QUE^PRCAQUE G:'$D(PRCAQUE) Q
"RTN","PRCAACC",6,0)
 I $D(IO("Q")) S ZTRTN="DQ^PRCAACC",ZTDESC="AR Accrual Totals" D ^%ZTLOAD G Q
"RTN","PRCAACC",7,0)
DQ ;
"RTN","PRCAACC",8,0)
 U IO
"RTN","PRCAACC",9,0)
 NEW BILLN,COM,TOT,STAT,X,Y
"RTN","PRCAACC",10,0)
 S BILLN=0
"RTN","PRCAACC",11,0)
 D COM G:$O(COM(""))="" RPT
"RTN","PRCAACC",12,0)
 F STAT=42,16 F  S BILLN=$O(^PRCA(430,"AC",STAT,BILLN)) Q:'BILLN  I $$ACCK(BILLN) D
"RTN","PRCAACC",13,0)
 .S X=(","_$P(^PRCA(430,BILLN,0),"^",2)_",")
"RTN","PRCAACC",14,0)
 .S TOT(X)=$G(TOT(X))+$G(^PRCA(430,BILLN,7))
"RTN","PRCAACC",15,0)
 .QUIT
"RTN","PRCAACC",16,0)
RPT D NOW^%DTC W @IOF,!!,?23,"Accrual Totals Report",!?20,"As of: " S Y=% X ^DD("DD") W Y,!
"RTN","PRCAACC",17,0)
 S X="",$P(X,"=",80)="" W X
"RTN","PRCAACC",18,0)
 W:$O(COM(""))="" !!,"WARNING: Accruals are *NOT* set-up correctly.",!,"No RX accrual common numbering series are set-up in AR Bill Number File!",!!
"RTN","PRCAACC",19,0)
 S TOT=$G(TOT(",22,"))+$G(TOT(",23,")) I TOT W !!!,"RX CO-PAYMENT  Accrual Amount: $",$FN(TOT,",",2)
"RTN","PRCAACC",20,0)
 I $G(TOT(",18,"))>0 W !!!,"C (MEANS TEST)  Accrual Amount: $",$FN(TOT(",18,"),",",2)
"RTN","PRCAACC",21,0)
 W !!!!,"Includes Common Numbering Series:",! S COM="" F  S COM=$O(COM(COM)) Q:COM=""  W !,COM,?20,COM(COM)
"RTN","PRCAACC",22,0)
Q D ^%ZISC S IOP=IO(0) D ^%ZIS K IOP,IO("Q") Q
"RTN","PRCAACC",23,0)
ACCK(BN) ;Check BILLN to see if Accrual
"RTN","PRCAACC",24,0)
 N ACC,ACTDATE,CAT,FUND,DB
"RTN","PRCAACC",25,0)
 S CAT=+$P(^PRCA(430,BN,0),"^",2)
"RTN","PRCAACC",26,0)
 ;  field 12, ACCRUED ? where 0=no 1=yes, 2=could be either
"RTN","PRCAACC",27,0)
 S ACC=+$P($G(^PRCA(430.2,CAT,0)),"^",9)
"RTN","PRCAACC",28,0)
 ;  it could be either accrued or non-accrued
"RTN","PRCAACC",29,0)
 I ACC=2 D
"RTN","PRCAACC",30,0)
 .   S FUND=$P($G(^PRCA(430,BN,11)),"^",17)
"RTN","PRCAACC",31,0)
 .   S ACC=$S(FUND=5014:1,FUND=2431:1,1:0)
"RTN","PRCAACC",32,0)
 .   I $E(FUND,1,4)=5287 S ACC=$$PTACCT(FUND)
"RTN","PRCAACC",33,0)
 .   ;  special case with Workman's Comp
"RTN","PRCAACC",34,0)
 .   I ACC=0,CAT=6,FUND="" D
"RTN","PRCAACC",35,0)
 .   .   S DB=$P($G(^RCD(340,+$P($G(^PRCA(430,BN,0)),U,9),0)),U)
"RTN","PRCAACC",36,0)
 .   .   I DB[";DPT"!($P($G(^PRCA(430,BN,0)),U,7)'="") S ACC=1
"RTN","PRCAACC",37,0)
 ;
"RTN","PRCAACC",38,0)
 ;  public law states that bills in the category ineligible (1),
"RTN","PRCAACC",39,0)
 ;  emerg/human (2), torts (10), or medicare (21) which are older 
"RTN","PRCAACC",40,0)
 ;  than oct 1, 1992 should be treated as non-accrued.
"RTN","PRCAACC",41,0)
 I CAT=1!(CAT=2)!(CAT=10)!(CAT=21) D
"RTN","PRCAACC",42,0)
 .   S ACTDATE=$P($G(^PRCA(430,BN,6)),"^",21) I 'ACTDATE S ACTDATE=DT
"RTN","PRCAACC",43,0)
 .   I ACTDATE<2921001 S ACC=0
"RTN","PRCAACC",44,0)
 .   ;
"RTN","PRCAACC",45,0)
 .   ;  patch157 changes ineligibles.  an ineligible created before
"RTN","PRCAACC",46,0)
 .   ;  oct 1, 1992 or after sep 30, 2000 will be non-accrued.
"RTN","PRCAACC",47,0)
 .   ;  otherwise it will be accrued.
"RTN","PRCAACC",48,0)
 .   I CAT=1,ACTDATE>3000930 S ACC=0
"RTN","PRCAACC",49,0)
 ;
"RTN","PRCAACC",50,0)
 Q ACC
"RTN","PRCAACC",51,0)
COM ;Find Accrual common numbering series
"RTN","PRCAACC",52,0)
 S COM=0
"RTN","PRCAACC",53,0)
 F  S COM=$O(^PRCA(430.4,COM)) Q:'COM  I $P(^PRCA(430.4,COM,0),"^",6) S COM($P(^PRCA(430.4,COM,0),"^"))=$P($G(^DIC(49,$P(^(0),"^",5),0)),"^",1)
"RTN","PRCAACC",54,0)
 Q
"RTN","PRCAACC",55,0)
PTACCT(FUND) ;Determines whether Point Accounts are accrued
"RTN","PRCAACC",56,0)
 ;returns 1 for accrued funds 528701,528702,528703,528704,528709,528711
"RTN","PRCAACC",57,0)
 ;returns 0 for any other fund
"RTN","PRCAACC",58,0)
 I FUND'[5287 Q 0
"RTN","PRCAACC",59,0)
 S X=$E(FUND,5,6),X=$S(X="09"!(X="11"):1,X<"05":1,1:0)
"RTN","PRCAACC",60,0)
 Q X
"RTN","PRCAACC",61,0)
ADDPTEDT() ;Effective date of additional point accounts 
"RTN","PRCAACC",62,0)
 ;       (528705 - 528708 and 528710)
"RTN","PRCAACC",63,0)
 ;Effective date of switch from 4032 to 528709
"RTN","PRCAACC",64,0)
 Q 3040928
"RTN","RCRJRBD")
0^5^B70045536^B64259374
"RTN","RCRJRBD",1,0)
RCRJRBD ;WISC/RFJ,TJK-bad debt extractor and report ; 10/18/10 9:00am
"RTN","RCRJRBD",2,0)
 ;;4.5;Accounts Receivable;**101,139,170,193,203,215,220,138,239,273**;Mar 20, 1995;Build 3
"RTN","RCRJRBD",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","RCRJRBD",4,0)
 ; IA 4385 for calls to $$MRATYPE^IBCEMU2 and $$MRADTACT^IBCEMU2
"RTN","RCRJRBD",5,0)
 Q
"RTN","RCRJRBD",6,0)
 ;
"RTN","RCRJRBD",7,0)
 ;
"RTN","RCRJRBD",8,0)
START(DATEEND) ;  run bad debt report
"RTN","RCRJRBD",9,0)
 ;  the DATEEND is the last day of the month being run
"RTN","RCRJRBD",10,0)
 ;  from the routine RCRJRCOL which is the data extractor.  The
"RTN","RCRJRBD",11,0)
 ;  current receivable dollars is stored in ^TMP($J,"RCRJRBD",SGL)
"RTN","RCRJRBD",12,0)
 ;  where SGL is the standard general ledger 1319, 1338, or 1339.
"RTN","RCRJRBD",13,0)
 ;
"RTN","RCRJRBD",14,0)
 N ACTDATE,ACTUALCA,ACTUALWO,BEGDATE,BILLDA,CATEGORY
"RTN","RCRJRBD",15,0)
 N COLLECT,CONTRACT,DR,ENDDATE,FUND,PAY,PAYMENT,PRIN,PRINCPAL
"RTN","RCRJRBD",16,0)
 N RCRJFMM,RCRJDATE,SGL,TRANDA,TRANDATE,TRANTYPE,VALUE,WRITEOFF
"RTN","RCRJRBD",17,0)
 N RCPRIN,RCTOMCCF,RCVALUE,RSC,MRATYPE,ARACTDT
"RTN","RCRJRBD",18,0)
 ;
"RTN","RCRJRBD",19,0)
 ;  lock the bad debt file for storing data, lock cannot fail
"RTN","RCRJRBD",20,0)
 ;  this lock can be used to monitor if the report is running
"RTN","RCRJRBD",21,0)
 L +^RC(348.1)
"RTN","RCRJRBD",22,0)
 ;
"RTN","RCRJRBD",23,0)
 ;  calculate the base percentages from past data
"RTN","RCRJRBD",24,0)
 ;  example:  DATEEND=2980331  => BEGDATE=2970300
"RTN","RCRJRBD",25,0)
 ;                             => ENDDATE=2980229
"RTN","RCRJRBD",26,0)
 ;   add one day to ending date to go to next month
"RTN","RCRJRBD",27,0)
 S BEGDATE=($E(DATEEND,1,3)-1)_$E(DATEEND,4,5)_"00"
"RTN","RCRJRBD",28,0)
 S ENDDATE=($$FMADD^XLFDT($E(DATEEND,1,5)_"00",-1))+1
"RTN","RCRJRBD",29,0)
 ;  loop bills activated between these dates
"RTN","RCRJRBD",30,0)
 S ACTDATE=BEGDATE
"RTN","RCRJRBD",31,0)
 F  S ACTDATE=$O(^PRCA(430,"ACTDT",ACTDATE)) Q:'ACTDATE!(ACTDATE>ENDDATE)  D
"RTN","RCRJRBD",32,0)
 . S BILLDA=0 F  S BILLDA=$O(^PRCA(430,"ACTDT",ACTDATE,BILLDA)) Q:'BILLDA  D
"RTN","RCRJRBD",33,0)
 . . S CATEGORY=+$P($G(^PRCA(430,BILLDA,0)),"^",2)
"RTN","RCRJRBD",34,0)
 . . ;  do not look at prepayments
"RTN","RCRJRBD",35,0)
 . . I 'CATEGORY!(CATEGORY=26) Q
"RTN","RCRJRBD",36,0)
 . . ;
"RTN","RCRJRBD",37,0)
 . . ;  only look at bills with a 0 principal balance
"RTN","RCRJRBD",38,0)
 . . I $P($G(^PRCA(430,BILLDA,7)),"^") Q
"RTN","RCRJRBD",39,0)
 . . ;
"RTN","RCRJRBD",40,0)
 . . ;  only report fund 528701,03,04,11 and 4032/528709 bills
"RTN","RCRJRBD",41,0)
 . . S FUND=$$GETFUNDB^RCXFMSUF(BILLDA,1)
"RTN","RCRJRBD",42,0)
 . . I '$$PTACCT^PRCAACC(FUND),$E(FUND,1,4)'=4032 Q
"RTN","RCRJRBD",43,0)
 . . ;
"RTN","RCRJRBD",44,0)
 . . ;  determine MRA type of bill, given bill# and bill active date
"RTN","RCRJRBD",45,0)
 . . ;  DBIA #4385 activated on 31-Mar-2004
"RTN","RCRJRBD",46,0)
 . . S MRATYPE=$$MRATYPE^IBCEMU2(BILLDA,ACTDATE)
"RTN","RCRJRBD",47,0)
 . . ;
"RTN","RCRJRBD",48,0)
 . . ;  derive standard general ledger (SGL) from cat/fund/MRA type
"RTN","RCRJRBD",49,0)
 . . S SGL=$$BDRSGL(CATEGORY,FUND,MRATYPE)
"RTN","RCRJRBD",50,0)
 . . ;
"RTN","RCRJRBD",51,0)
 . . ;  determine the original amount of the bill (add increase
"RTN","RCRJRBD",52,0)
 . . ;  adjustments below)
"RTN","RCRJRBD",53,0)
 . . S PRIN=$P($G(^PRCA(430,BILLDA,0)),"^",3)
"RTN","RCRJRBD",54,0)
 . . S PAY=0
"RTN","RCRJRBD",55,0)
 . . ;
"RTN","RCRJRBD",56,0)
 . . ;  get the $ transations for bills
"RTN","RCRJRBD",57,0)
 . . S TRANDA=0
"RTN","RCRJRBD",58,0)
 . . F  S TRANDA=$O(^PRCA(433,"C",BILLDA,TRANDA)) Q:'TRANDA  D
"RTN","RCRJRBD",59,0)
 . . . S TRANTYPE=$P($G(^PRCA(433,TRANDA,1)),"^",2)
"RTN","RCRJRBD",60,0)
 . . . I "^1^2^34^43^"'[("^"_TRANTYPE_"^") Q
"RTN","RCRJRBD",61,0)
 . . . S VALUE=$$TRANBAL^RCRJRCOT(TRANDA) I VALUE="" Q
"RTN","RCRJRBD",62,0)
 . . . ;  increase adjustments or re-establish
"RTN","RCRJRBD",63,0)
 . . . I TRANTYPE=1!(TRANTYPE=43) S PRIN=PRIN+$P(VALUE,"^") Q
"RTN","RCRJRBD",64,0)
 . . . ;  payments
"RTN","RCRJRBD",65,0)
 . . . I TRANTYPE=2!(TRANTYPE=34) S PAY=PAY+$P(VALUE,"^") Q
"RTN","RCRJRBD",66,0)
 . . ;
"RTN","RCRJRBD",67,0)
 . . ;  payment cannot be greater than principle
"RTN","RCRJRBD",68,0)
 . . I PAY>PRIN S PAY=PRIN
"RTN","RCRJRBD",69,0)
 . . ;
"RTN","RCRJRBD",70,0)
 . . ;  store the data
"RTN","RCRJRBD",71,0)
 . . S PRINCPAL(SGL)=$G(PRINCPAL(SGL))+PRIN
"RTN","RCRJRBD",72,0)
 . . S PAYMENT(SGL)=$G(PAYMENT(SGL))+PAY
"RTN","RCRJRBD",73,0)
 . . ;
"RTN","RCRJRBD",74,0)
 ;
"RTN","RCRJRBD",75,0)
 ;  calculate the writeoffs from 2/0/98
"RTN","RCRJRBD",76,0)
 ;  2/0/98 is when fms cleared out actual writeoffs and contract adj
"RTN","RCRJRBD",77,0)
 K ^XTMP("PRCABDET")
"RTN","RCRJRBD",78,0)
 S ^XTMP("PRCABDET",0)=$$FMADD^XLFDT(DT,10)_"^"_DT_"^BAD DEBT REPORT AUDIT"
"RTN","RCRJRBD",79,0)
 F TRANTYPE=8,9,10,11,35 D
"RTN","RCRJRBD",80,0)
 . S TRANDATE=2980200
"RTN","RCRJRBD",81,0)
 . ;  do not pick up transactions after the end date
"RTN","RCRJRBD",82,0)
 . F  S TRANDATE=$O(^PRCA(433,"AT",TRANTYPE,TRANDATE)) Q:'TRANDATE!($P(TRANDATE,".")>DATEEND)  D
"RTN","RCRJRBD",83,0)
 . . S TRANDA=0 F  S TRANDA=$O(^PRCA(433,"AT",TRANTYPE,TRANDATE,TRANDA)) Q:'TRANDA  D
"RTN","RCRJRBD",84,0)
 . . . ;  do not look at decrease adj which are not contract adj
"RTN","RCRJRBD",85,0)
 . . . I TRANTYPE=35,'$P($G(^PRCA(433,TRANDA,8)),"^",8) Q
"RTN","RCRJRBD",86,0)
 . . . ;
"RTN","RCRJRBD",87,0)
 . . . S BILLDA=$P($G(^PRCA(433,TRANDA,0)),"^",2)
"RTN","RCRJRBD",88,0)
 . . . I 'BILLDA Q
"RTN","RCRJRBD",89,0)
 . . . S CATEGORY=+$P($G(^PRCA(430,BILLDA,0)),"^",2)
"RTN","RCRJRBD",90,0)
 . . . ;  do not look at prepayments
"RTN","RCRJRBD",91,0)
 . . . I 'CATEGORY!(CATEGORY=26) Q
"RTN","RCRJRBD",92,0)
 . . . ;
"RTN","RCRJRBD",93,0)
 . . . ;  only report fund 528701,03,04,11 and 4032/528709 (ltc) bills
"RTN","RCRJRBD",94,0)
 . . . S FUND=$$GETFUNDB^RCXFMSUF(BILLDA,1)
"RTN","RCRJRBD",95,0)
 . . . I '$$PTACCT^PRCAACC(FUND),$E(FUND,1,4)'=4032 Q
"RTN","RCRJRBD",96,0)
 . . . ;
"RTN","RCRJRBD",97,0)
 . . . ;  get bill active date
"RTN","RCRJRBD",98,0)
 . . . S ARACTDT=+$P($P($G(^PRCA(430,BILLDA,6)),"^",21),".")
"RTN","RCRJRBD",99,0)
 . . . ;  determine MRA type of bill, given bill# and bill active date
"RTN","RCRJRBD",100,0)
 . . . ;  DBIA #4385 activated on 31-Mar-2004
"RTN","RCRJRBD",101,0)
 . . . S MRATYPE=$$MRATYPE^IBCEMU2(BILLDA,ARACTDT)
"RTN","RCRJRBD",102,0)
 . . . ;
"RTN","RCRJRBD",103,0)
 . . . ; derive standard general ledger (SGL) from cat/fund/MRA type
"RTN","RCRJRBD",104,0)
 . . . S SGL=$$BDRSGL(CATEGORY,FUND,MRATYPE)
"RTN","RCRJRBD",105,0)
 . . . ;
"RTN","RCRJRBD",106,0)
 . . . ;  get the principal transaction value
"RTN","RCRJRBD",107,0)
 . . . S RCVALUE=+$P($$TRANBAL^RCRJRCOT(TRANDA),"^")
"RTN","RCRJRBD",108,0)
 . . . ;  temp variable for value (used below)
"RTN","RCRJRBD",109,0)
 . . . S RCPRIN=RCVALUE
"RTN","RCRJRBD",110,0)
 . . . ;
"RTN","RCRJRBD",111,0)
 . . . ;  add actual writeoff amount for fiscal year
"RTN","RCRJRBD",112,0)
 . . . I TRANTYPE'=35 S ACTUALWO(SGL)=$G(ACTUALWO(SGL))+RCVALUE
"RTN","RCRJRBD",113,0)
 . . . ;  add actual contract adjustments for fiscal year
"RTN","RCRJRBD",114,0)
 . . . I TRANTYPE=35 S ACTUALCA(SGL)=$G(ACTUALCA(SGL))+RCVALUE
"RTN","RCRJRBD",115,0)
 . . . S RSC=$$CALCRSC^RCXFMSUR(BILLDA)
"RTN","RCRJRBD",116,0)
 . . . S ^XTMP("PRCABDET",BILLDA,CATEGORY,FUND,RSC,SGL,TRANDA,TRANDATE,TRANTYPE,RCPRIN,RCVALUE,0,0)=""
"RTN","RCRJRBD",117,0)
 ;
"RTN","RCRJRBD",118,0)
 ;  remove all the entries from the bad debt file
"RTN","RCRJRBD",119,0)
 D DELETALL
"RTN","RCRJRBD",120,0)
 ;
"RTN","RCRJRBD",121,0)
 ;  calculate percentages and store them
"RTN","RCRJRBD",122,0)
 F SGL=1319,1319.2,1319.3,1319.4,1319.5,1338,1338.2,1339,"133N","133N.2" D
"RTN","RCRJRBD",123,0)
 . ;  collection %
"RTN","RCRJRBD",124,0)
 . S COLLECT=0 I $G(PRINCPAL(SGL)) S COLLECT=$J($G(PAYMENT(SGL))/PRINCPAL(SGL)*100,0,2)
"RTN","RCRJRBD",125,0)
 . ;  patch PRCA*4.5*138: for the first year from when MRA is activated at a site, there is no collection
"RTN","RCRJRBD",126,0)
 . ;  history for post-MRA non-Medicare bills(SGL 133N). So, to calculate the percentage for SGL 133N, the
"RTN","RCRJRBD",127,0)
 . ;  payment and the principal for SGL 1339 are used in the first year.
"RTN","RCRJRBD",128,0)
 . ;  override the collection value for SGL=133N for the first year from MRA activation.
"RTN","RCRJRBD",129,0)
 . ;;  Re-evaluate the calc. of the percentage for 133N as well as 1339.
"RTN","RCRJRBD",130,0)
 . ;;I SGL="133N",$G(PRINCIPAL(1339)) D  ;
"RTN","RCRJRBD",131,0)
 . ;;. N X1,X2,X,%Y
"RTN","RCRJRBD",132,0)
 . ;;. ;  X2=MRA Activation Date, X1=Today, X=diff in days, %Y=0 invalid dates
"RTN","RCRJRBD",133,0)
 . ;;. ;  DBIA #4385 activated on 31-Mar-2004
"RTN","RCRJRBD",134,0)
 . ;;. S X2=$$MRADTACT^IBCEMU2,X1=$$DT^XLFDT D ^%DTC
"RTN","RCRJRBD",135,0)
 . ;;. I %Y,X'>364.25 S COLLECT=$J($G(PAYMENT(1339))/PRINCPAL(1339)*100,0,2)
"RTN","RCRJRBD",136,0)
 . S DR=".02////"_+COLLECT_";"
"RTN","RCRJRBD",137,0)
 . ;
"RTN","RCRJRBD",138,0)
 . ;  current month receivable (this is built in the routine
"RTN","RCRJRBD",139,0)
 . ;  RCRJRCO1 and is stored in ^TMP($J,"RCRJRBD",SGL))
"RTN","RCRJRBD",140,0)
 . S DR=DR_".07////"_+$G(^TMP($J,"RCRJRBD",SGL))_";"
"RTN","RCRJRBD",141,0)
 . ;
"RTN","RCRJRBD",142,0)
 . ;  calculate allowance estimate for 1319 and 1338
"RTN","RCRJRBD",143,0)
 . ;  .08 allowance estimate = (writeoff % * current receivables)
"RTN","RCRJRBD",144,0)
 . ;  .09 actual writeoffs fytd
"RTN","RCRJRBD",145,0)
 . I SGL=1319!(SGL=1319.2)!(SGL=1319.3)!(SGL=1319.4)!(SGL=1319.5)!(SGL=1338)!(SGL=1338.2) D
"RTN","RCRJRBD",146,0)
 . . S WRITEOFF=100-COLLECT
"RTN","RCRJRBD",147,0)
 . . S DR=DR_".03////"_WRITEOFF_";"
"RTN","RCRJRBD",148,0)
 . . S DR=DR_".08////"_$J((WRITEOFF/100)*$G(^TMP($J,"RCRJRBD",SGL)),0,2)_";"
"RTN","RCRJRBD",149,0)
 . . S DR=DR_".09////"_+$G(ACTUALWO(SGL))_";"
"RTN","RCRJRBD",150,0)
 . ;  calculate allowance estimate for 1339
"RTN","RCRJRBD",151,0)
 . ;  .08 allowance estimate = (contract % * current receivables)
"RTN","RCRJRBD",152,0)
 . ;  .09 actual contract adjustments fytd
"RTN","RCRJRBD",153,0)
 . I SGL=1339!(SGL="133N")!(SGL="133N.2") D
"RTN","RCRJRBD",154,0)
 . . S CONTRACT=100-COLLECT
"RTN","RCRJRBD",155,0)
 . . S DR=DR_".04////"_CONTRACT_";"
"RTN","RCRJRBD",156,0)
 . . S DR=DR_".08////"_$J((CONTRACT/100)*$G(^TMP($J,"RCRJRBD",SGL)),0,2)_";"
"RTN","RCRJRBD",157,0)
 . . S DR=DR_".09////"_+$G(ACTUALCA(SGL))_";"
"RTN","RCRJRBD",158,0)
 . ;
"RTN","RCRJRBD",159,0)
 . ;  set changed locally flag to no
"RTN","RCRJRBD",160,0)
 . S DR=DR_".1////0;"
"RTN","RCRJRBD",161,0)
 . D STORE(SGL,DR)
"RTN","RCRJRBD",162,0)
 ;
"RTN","RCRJRBD",163,0)
 L -^RC(348.1)
"RTN","RCRJRBD",164,0)
 ;
"RTN","RCRJRBD",165,0)
 ;   ;  put the report in a mail message (rcrjfmm=1)
"RTN","RCRJRBD",166,0)
 ;   S RCRJFMM=1
"RTN","RCRJRBD",167,0)
 ;   S RCRJDATE=DATEEND
"RTN","RCRJRBD",168,0)
 ;   D DQ^RCRJRBDR
"RTN","RCRJRBD",169,0)
 ;
"RTN","RCRJRBD",170,0)
 ;  transmit the allowances to FMS, and then generate the report.
"RTN","RCRJRBD",171,0)
 D BADDEBT^RCXFMSSV(DATEEND)
"RTN","RCRJRBD",172,0)
 Q
"RTN","RCRJRBD",173,0)
 ;
"RTN","RCRJRBD",174,0)
 ;
"RTN","RCRJRBD",175,0)
STORE(SGL,DR) ;  store data for Standard Ledger Account
"RTN","RCRJRBD",176,0)
 N D0,DA,DD,DI,DIC,DIE,DINUM,DO,DQ,X,Y
"RTN","RCRJRBD",177,0)
 S DIC="^RC(348.1,",DIC(0)="L",X=SGL,DIC("DR")=DR
"RTN","RCRJRBD",178,0)
 D FILE^DICN
"RTN","RCRJRBD",179,0)
 Q
"RTN","RCRJRBD",180,0)
 ;
"RTN","RCRJRBD",181,0)
 ;
"RTN","RCRJRBD",182,0)
DELETALL ;  delete all the entries from the bad debt file
"RTN","RCRJRBD",183,0)
 N %,DA,DIC,DIK,X,Y
"RTN","RCRJRBD",184,0)
 S DIK="^RC(348.1,"
"RTN","RCRJRBD",185,0)
 S DA=0 F  S DA=$O(^RC(348.1,DA)) Q:'DA  D ^DIK
"RTN","RCRJRBD",186,0)
 Q
"RTN","RCRJRBD",187,0)
 ;
"RTN","RCRJRBD",188,0)
 ;
"RTN","RCRJRBD",189,0)
WD3() ;  return the third work day of the month
"RTN","RCRJRBD",190,0)
 N J,P,V,X
"RTN","RCRJRBD",191,0)
 S J=0 F P=$E(DT,1,5)_"01":1 S V=$$DOW^XLFDT(P,1) I V,V<6,'$D(^HOLIDAY("B",P)) S J=J+1 Q:J=3
"RTN","RCRJRBD",192,0)
 S X=+$E(P,6,7)
"RTN","RCRJRBD",193,0)
 Q X
"RTN","RCRJRBD",194,0)
 ;
"RTN","RCRJRBD",195,0)
 ;
"RTN","RCRJRBD",196,0)
PREVMONT(FORDATE) ; return the previous month's date
"RTN","RCRJRBD",197,0)
 N PREVDATE
"RTN","RCRJRBD",198,0)
 S PREVDATE=$E(FORDATE,1,5)-1
"RTN","RCRJRBD",199,0)
 I $E(PREVDATE,4,5)="00" S PREVDATE=($E(PREVDATE,1,3)-1)_12
"RTN","RCRJRBD",200,0)
 Q PREVDATE_"00"
"RTN","RCRJRBD",201,0)
 ;
"RTN","RCRJRBD",202,0)
 ; derive standard general ledger (SGL) from category and fund
"RTN","RCRJRBD",203,0)
SGL(CATEGORY,FUND) ;
"RTN","RCRJRBD",204,0)
 I $G(FUND)=528709 Q 1319.2 ;new long term care fund
"RTN","RCRJRBD",205,0)
 I $E($G(FUND),1,4)=4032 Q 1319.2 ; breakout long term care as a subset
"RTN","RCRJRBD",206,0)
 I $G(FUND)=528711&(CAT=6)!(CAT=7) Q 1319.5  ; breakout pharmacy
"RTN","RCRJRBD",207,0)
 I $G(FUND)=528711&(CAT=9) Q "133N.2"  ; pharmacy reimburs health ins
"RTN","RCRJRBD",208,0)
 I $G(FUND)=528711&(CAT=10) Q 1338.2  ; pharmacy tort feasor
"RTN","RCRJRBD",209,0)
 I CATEGORY=8 Q 1339   ; crime or per. vio.
"RTN","RCRJRBD",210,0)
 I CATEGORY=9 Q 1339   ; reimbursable health insurance
"RTN","RCRJRBD",211,0)
 I CATEGORY=10 Q 1338  ; tort feasor
"RTN","RCRJRBD",212,0)
 I CATEGORY=21 Q 1339  ; medicare
"RTN","RCRJRBD",213,0)
 Q 1319
"RTN","RCRJRBD",214,0)
 ;
"RTN","RCRJRBD",215,0)
 ;
"RTN","RCRJRBD",216,0)
BDRSGL(CAT,FUND,MRATYPE) ; Calculate SGLs for the BDR process
"RTN","RCRJRBD",217,0)
 ;
"RTN","RCRJRBD",218,0)
 ; This API will be used by both the ARDC (routine RCRJRCOC)
"RTN","RCRJRBD",219,0)
 ; and the BDR estimate calculator to associate receivables
"RTN","RCRJRBD",220,0)
 ; with the correct standard general ledger account (SGL).
"RTN","RCRJRBD",221,0)
 ; The following table will be implemented:
"RTN","RCRJRBD",222,0)
 ;
"RTN","RCRJRBD",223,0)
 ; Receivable Type (Category)        Fund      SGL
"RTN","RCRJRBD",224,0)
 ;==================================================
"RTN","RCRJRBD",225,0)
 ; Medical Care Co-payments          528703    1319
"RTN","RCRJRBD",226,0)
 ;  (plus Inelig, Emerg./Hum. rec.)
"RTN","RCRJRBD",227,0)
 ; Long Term Care Co-payments        528709    1319.2
"RTN","RCRJRBD",228,0)
 ; Medication Co-payments            528701    1319.3
"RTN","RCRJRBD",229,0)
 ; Crimes of Personal Violence (8),  528704    1319.4
"RTN","RCRJRBD",230,0)
 ;  Medicare (21), No-Fault Auto
"RTN","RCRJRBD",231,0)
 ;  (7), Workman's Comp (6)
"RTN","RCRJRBD",232,0)
 ; Tort Feasor (10)                  528704    1338
"RTN","RCRJRBD",233,0)
 ; RHI (9), pre-MRA                  528704    1339
"RTN","RCRJRBD",234,0)
 ; RHI (9), post-MRA, MRA rec.       528704    133H
"RTN","RCRJRBD",235,0)
 ; RHI (9), post-MRA, non-MRA rec.   528704    133N
"RTN","RCRJRBD",236,0)
 ; Pharmacy No Fault Auto(7),        528711    1319.5
"RTN","RCRJRBD",237,0)
 ;  Pharmacy Workman's Comp(6)
"RTN","RCRJRBD",238,0)
 ; Pharmacy RHI, non MRA (9)         528711    133N.2
"RTN","RCRJRBD",239,0)
 ; Pharmacy Tort Feasor (10)         528711    1338.2
"RTN","RCRJRBD",240,0)
 ;
"RTN","RCRJRBD",241,0)
 ;  Input:  CAT  --  Pointer to the receivable category in file 430.2
"RTN","RCRJRBD",242,0)
 ;         FUND  --  Receivable fund calculated by routine RCXFMSUF
"RTN","RCRJRBD",243,0)
 ;      MRATYPE  --  Indicator of an MRA (2) or non-MRA (3) receivable
"RTN","RCRJRBD",244,0)
 ;
"RTN","RCRJRBD",245,0)
 ;
"RTN","RCRJRBD",246,0)
 I $G(FUND)=528709 Q 1319.2
"RTN","RCRJRBD",247,0)
 I $E($G(FUND),1,4)=4032 Q 1319.2
"RTN","RCRJRBD",248,0)
 I $G(FUND)=528701 Q 1319.3
"RTN","RCRJRBD",249,0)
 I $G(FUND)=528711&(CAT=6)!(CAT=7) Q 1319.5
"RTN","RCRJRBD",250,0)
 I $G(FUND)=528711&(CAT=9) Q "133N.2"
"RTN","RCRJRBD",251,0)
 I $G(FUND)=528711&(CAT=10) Q 1338.2
"RTN","RCRJRBD",252,0)
 I CAT=8!(CAT=21)!(CAT=7)!(CAT=6) Q 1319.4
"RTN","RCRJRBD",253,0)
 I CAT=10 Q 1338
"RTN","RCRJRBD",254,0)
 I CAT=9 Q $S(MRATYPE=2:"133H",MRATYPE=3:"133N",1:1339)
"RTN","RCRJRBD",255,0)
 Q 1319
"RTN","RCRJRBDT")
0^6^B55944684^B54449549
"RTN","RCRJRBDT",1,0)
RCRJRBDT ;WISC/RFJ-bad debt retransmit ; 9/2/10 8:47am
"RTN","RCRJRBDT",2,0)
 ;;4.5;Accounts Receivable;**101,170,191,138,239,273**;Mar 20, 1995;Build 3
"RTN","RCRJRBDT",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","RCRJRBDT",4,0)
 ;
"RTN","RCRJRBDT",5,0)
 ;
"RTN","RCRJRBDT",6,0)
 ; - deactivate this option with patch PRCA*4.5*239
"RTN","RCRJRBDT",7,0)
 W !!,"This option may no longer be used to retransmit the Bad Debt"
"RTN","RCRJRBDT",8,0)
 W !,"allowance estimates to FMS."
"RTN","RCRJRBDT",9,0)
 W !!,"Please use the option 'Monthly NDB, SV and WR Regenerate' to"
"RTN","RCRJRBDT",10,0)
 W !,"recalculate the allowance estimates and transmit them to FMS.",!!
"RTN","RCRJRBDT",11,0)
 ;
"RTN","RCRJRBDT",12,0)
 S DIR(0)="E" D ^DIR K DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","RCRJRBDT",13,0)
 ;
"RTN","RCRJRBDT",14,0)
 Q
"RTN","RCRJRBDT",15,0)
 ;
"RTN","RCRJRBDT",16,0)
 ;
"RTN","RCRJRBDT",17,0)
 N DA347,DATEMOYR,FMSDOCNO,GECSDATA,RCRJFSV
"RTN","RCRJRBDT",18,0)
 ;  the date of the report is for previous month if the DT is before the EOAM date of the current month,  it is for the current month if the date is after the EOAM cut-off date.
"RTN","RCRJRBDT",19,0)
 I $E(DT,6,7)'>$E($$LDATE^RCRJR(DT),6,7) S DATEMOYR=$$PREVMONT^RCRJRBD(DT)
"RTN","RCRJRBDT",20,0)
 I $E(DT,6,7)>$E($$LDATE^RCRJR(DT),6,7) S DATEMOYR=$E($$LDATE^RCRJR(DT),1,5)_"00"
"RTN","RCRJRBDT",21,0)
 ;S DATEMOYR=$$PREVMONT^RCRJRBD(DT)
"RTN","RCRJRBDT",22,0)
 W !!,"This option will retransmit the Bad Debt documents to FMS (SV23, SV27, SV2B)."
"RTN","RCRJRBDT",23,0)
 ;
"RTN","RCRJRBDT",24,0)
 ;I +$E(DT,6,7)<$$WD3^RCRJRBD D  Q
"RTN","RCRJRBDT",25,0)
 I $E(DT,6,7)<$E($$LDATE^RCRJR(DT),6,7)!($E(DT,6,7)'<$E($$LDAY^RCRJR(DT),6,7)) D  Q
"RTN","RCRJRBDT",26,0)
 .  W !,"The FMS documents will be automatically sent to FMS on the second to last ",!,"workday of this month."
"RTN","RCRJRBDT",27,0)
 ;  try and find SV document to see if its accepted
"RTN","RCRJRBDT",28,0)
 S FMSDOCNO=""
"RTN","RCRJRBDT",29,0)
 K GECSDATA
"RTN","RCRJRBDT",30,0)
 S DA347=$O(^RC(347,"D","SV-"_$E(DATEMOYR,1,5)_"01",0))
"RTN","RCRJRBDT",31,0)
 I DA347 S FMSDOCNO=$P($G(^RC(347,DA347,0)),"^",9)
"RTN","RCRJRBDT",32,0)
 ;  if there is an entry, find the code sheet in gcs to rebuild
"RTN","RCRJRBDT",33,0)
 ;  gecsdata will be the ien for file 2100.1
"RTN","RCRJRBDT",34,0)
 I FMSDOCNO'="" D DATA^GECSSGET(FMSDOCNO,0)
"RTN","RCRJRBDT",35,0)
 I $G(GECSDATA) D
"RTN","RCRJRBDT",36,0)
 .   W !!,"The SV document has been transmitted to fms, document number: "_FMSDOCNO
"RTN","RCRJRBDT",37,0)
 .   I $E($G(GECSDATA(2100.1,GECSDATA,3,"E")))="A" D  Q
"RTN","RCRJRBDT",38,0)
 .   .   W !,"The SV document has been ACCEPTED in FMS and will not be resent."
"RTN","RCRJRBDT",39,0)
 .   .   S RCRJFSV=1
"RTN","RCRJRBDT",40,0)
 .   W !,"The SV document has NOT been ACCEPTED and will be RETRANSMITTED."
"RTN","RCRJRBDT",41,0)
 I $G(RCRJFSV) Q
"RTN","RCRJRBDT",42,0)
 ;
"RTN","RCRJRBDT",43,0)
 I $$ASKOKAY(DATEMOYR)'=1 Q
"RTN","RCRJRBDT",44,0)
 ;
"RTN","RCRJRBDT",45,0)
 ;  make sure this code is not executed.
"RTN","RCRJRBDT",46,0)
 ;W !!,"Re-sending the documents to FMS ..."
"RTN","RCRJRBDT",47,0)
 ;D BADDEBT^RCXFMSSV
"RTN","RCRJRBDT",48,0)
 ;W " Done.",!,"The Bad Debt Report will be sent to the G.FMS mail group."
"RTN","RCRJRBDT",49,0)
 Q
"RTN","RCRJRBDT",50,0)
 ;
"RTN","RCRJRBDT",51,0)
 ;
"RTN","RCRJRBDT",52,0)
ASKOKAY(DATEMOYR) ;  ask if its okay
"RTN","RCRJRBDT",53,0)
 ;  1 is yes, otherwise no
"RTN","RCRJRBDT",54,0)
 N DIR,DIQ2,DTOUT,DUOUT,X,Y
"RTN","RCRJRBDT",55,0)
 S Y=DATEMOYR D DD^%DT
"RTN","RCRJRBDT",56,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCRJRBDT",57,0)
 S DIR("A")="  Are you SURE you want to resend the Bad Debt Report for "_Y
"RTN","RCRJRBDT",58,0)
 W ! D ^DIR
"RTN","RCRJRBDT",59,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCRJRBDT",60,0)
 Q Y
"RTN","RCRJRBDT",61,0)
 ;
"RTN","RCRJRBDT",62,0)
 ;
"RTN","RCRJRBDT",63,0)
ENDOFREP ;  print end of bad debt report footnotes
"RTN","RCRJRBDT",64,0)
 ;  called from rcrjrbdr
"RTN","RCRJRBDT",65,0)
 ;
"RTN","RCRJRBDT",66,0)
 ;  print footnote
"RTN","RCRJRBDT",67,0)
 S Y=RCRJDATE D DD^%DT S ENDDATE=Y
"RTN","RCRJRBDT",68,0)
 F %=1:1 S DATA=$P($T(FOOTNOTE+%),";",3,99) Q:DATA=""  D
"RTN","RCRJRBDT",69,0)
 .   I DATA["DATEREPT" S DATA=$P(DATA,"DATEREPT")_DATEREPT_$P(DATA,"DATEREPT",2)
"RTN","RCRJRBDT",70,0)
 .   I DATA["ENDDATE" S DATA=$P(DATA,"ENDDATE")_ENDDATE_$P(DATA,"ENDDATE",2)
"RTN","RCRJRBDT",71,0)
 .   D SETLINE^RCRJRBDR(DATA)
"RTN","RCRJRBDT",72,0)
 Q
"RTN","RCRJRBDT",73,0)
 ;
"RTN","RCRJRBDT",74,0)
 ;
"RTN","RCRJRBDT",75,0)
FOOTNOTE ;  report footnotes (from rcrjrbdr)
"RTN","RCRJRBDT",76,0)
 ;;(1) Calculated Percentages and the Allowance for Contract Adj - Third Party
"RTN","RCRJRBDT",77,0)
 ;;    for SGL 1339 are based on bills created prior to the activation of the
"RTN","RCRJRBDT",78,0)
 ;;    Medicare Remittance Advice software.  Over time, there will no longer be
"RTN","RCRJRBDT",79,0)
 ;;    any bills in this category.
"RTN","RCRJRBDT",80,0)
 ;; 
"RTN","RCRJRBDT",81,0)
 ;;(2) Calculated Percentages and the Allowance for Contract Adj - Third Party
"RTN","RCRJRBDT",82,0)
 ;;    for SGL 133N are based on non-Medicare WNR bills created after the
"RTN","RCRJRBDT",83,0)
 ;;    activation of the Medicare Remittance Advice software.
"RTN","RCRJRBDT",84,0)
 ;; 
"RTN","RCRJRBDT",85,0)
 ;;(3) The "Allowance Estimate for DATEREPT" is the dollar value estimated
"RTN","RCRJRBDT",86,0)
 ;;    as the Allowance for Bad Debt or Contract Adjustment for the month.
"RTN","RCRJRBDT",87,0)
 ;; 
"RTN","RCRJRBDT",88,0)
 ;;(4) The "Bad Debt Write-Off (Plus)" is the actual write-offs or contract
"RTN","RCRJRBDT",89,0)
 ;;    adjustments accomplished from FEB 1,1998 thru ENDDATE.
"RTN","RCRJRBDT",90,0)
 ;; 
"RTN","RCRJRBDT",91,0)
 ;;(5) The "Transmitted Amount to FMS for Month" is the sum of (3) and (4).
"RTN","RCRJRBDT",92,0)
 ;;    The transmitted dollar value is normally a credit value.
"RTN","RCRJRBDT",93,0)
 ;; 
"RTN","RCRJRBDT",94,0)
 ;;(6) Facilities are responsible for reporting monthly accrued unbilled
"RTN","RCRJRBDT",95,0)
 ;;    amounts.  When such amounts are identified and reported, a portion of
"RTN","RCRJRBDT",96,0)
 ;;    those dollars should be reported as uncollectable.  The estimated
"RTN","RCRJRBDT",97,0)
 ;;    uncollectable value of the unbilled amounts should be included as part
"RTN","RCRJRBDT",98,0)
 ;;    of the facility's monthly allowance for bad debt or contract adjustments.
"RTN","RCRJRBDT",99,0)
 ;;    The AR Override Option should be used to adjust the value provided to
"RTN","RCRJRBDT",100,0)
 ;;    report the estimated uncollectable accrued unbilled amounts for the
"RTN","RCRJRBDT",101,0)
 ;;    month.  Facilities may wish to consider using the allowance percentages
"RTN","RCRJRBDT",102,0)
 ;;    provided with this report, if no other means of determining the
"RTN","RCRJRBDT",103,0)
 ;;    estimated allowance for the accrued unbilled amount is acceptable.
"RTN","RCRJRBDT",104,0)
 ;; 
"RTN","RCRJRBDT",105,0)
 ;;(7) Only members in the facility's local RC AR DATA COLLECTOR mail group
"RTN","RCRJRBDT",106,0)
 ;;    will receive this report.
"RTN","RCRJRBDT",107,0)
 ;
"RTN","RCRJRBDT",108,0)
 ;
"RTN","RCRJRBDT",109,0)
 ;
"RTN","RCRJRBDT",110,0)
BDR ; Compile new Bad Debt Report.
"RTN","RCRJRBDT",111,0)
 ;   This code will be used to compile the new Bad Debt Report.
"RTN","RCRJRBDT",112,0)
 ;   This routine is invokved by routine RCRJRDBR when the Bad
"RTN","RCRJRBDT",113,0)
 ;   Debt Report needs to be printed.
"RTN","RCRJRBDT",114,0)
 ;
"RTN","RCRJRBDT",115,0)
 ;     Variable input:  LINE  --  set to 0
"RTN","RCRJRBDT",116,0)
 ;                     SPACE  --  set to 81 space characters
"RTN","RCRJRBDT",117,0)
 ;                  DATEREPT  --  formatted month and year
"RTN","RCRJRBDT",118,0)
 ;
"RTN","RCRJRBDT",119,0)
 N RCARR,RCX,RCD,RCDATA,RCREC,X
"RTN","RCRJRBDT",120,0)
 D SETLINE(" ")
"RTN","RCRJRBDT",121,0)
 D SETLINE($E(SPACE,1,32)_"Bad Debt Report")
"RTN","RCRJRBDT",122,0)
 D SETLINE($E(SPACE,1,13)_"Allowance for Bad Debt and Contract Adjustment Report")
"RTN","RCRJRBDT",123,0)
 D SETLINE($E(SPACE,1,27)_"for the month of "_DATEREPT)
"RTN","RCRJRBDT",124,0)
 I $D(RCRJFXSV) D
"RTN","RCRJRBDT",125,0)
 . D SETLINE(" ")
"RTN","RCRJRBDT",126,0)
 . I $E(RCRJFXSV,1,2)="SV" D SETLINE($E(SPACE,1,13)_"***** Report sent to FMS, doc id: "_RCRJFXSV_" *****") Q
"RTN","RCRJRBDT",127,0)
 . ;  report errored out or did not get generated to fms
"RTN","RCRJRBDT",128,0)
 . D SETLINE($E(SPACE,1,10)_"***** NOTICE:  Report was NOT sent to FMS, the message is *****")
"RTN","RCRJRBDT",129,0)
 . D SETLINE($E(SPACE,1,10)_"***** "_RCRJFXSV_" *****")
"RTN","RCRJRBDT",130,0)
 ;
"RTN","RCRJRBDT",131,0)
 ;  show mccf
"RTN","RCRJRBDT",132,0)
 D SETLINE(" ")
"RTN","RCRJRBDT",133,0)
 D SETLINE($E(SPACE,1,26)_"Medical Care Collection Fund")
"RTN","RCRJRBDT",134,0)
 D SETLINE($E(SPACE,1,20)_" Funds 528701; 528703; 528704; 528709; and 528711")
"RTN","RCRJRBDT",135,0)
 D SETLINE($E(SPACE,1,26)_"----------------------------")
"RTN","RCRJRBDT",136,0)
 D SETLINE(" ")
"RTN","RCRJRBDT",137,0)
 D SETLINE(" ")
"RTN","RCRJRBDT",138,0)
 D SETLINE($E(SPACE,1,57)_"Contract           EOM")
"RTN","RCRJRBDT",139,0)
 D SETLINE("FUND - SGL Account     Collection%     Write-Off%     Adjustment%     Allowance")
"RTN","RCRJRBDT",140,0)
 D SETLINE(" ")
"RTN","RCRJRBDT",141,0)
 ;
"RTN","RCRJRBDT",142,0)
 ; List the fund/SGLs as:
"RTN","RCRJRBDT",143,0)
 ;   Order     SGL in file      Fund - SGL on report
"RTN","RCRJRBDT",144,0)
 ;   ===============================================
"RTN","RCRJRBDT",145,0)
 ;     1            1319.3             528701 - 1319
"RTN","RCRJRBDT",146,0)
 ;     2              1319             528703 - 1319
"RTN","RCRJRBDT",147,0)
 ;     3            1319.4             528704 - 1319
"RTN","RCRJRBDT",148,0)
 ;     4              1339             528704 - 1339
"RTN","RCRJRBDT",149,0)
 ;     5              133N             528704 - 133N
"RTN","RCRJRBDT",150,0)
 ;     6              1338             528704 - 1338
"RTN","RCRJRBDT",151,0)
 ;     7            1319.2             528709 - 1319
"RTN","RCRJRBDT",152,0)
 ;     8            1319.5             528711 - 1319
"RTN","RCRJRBDT",153,0)
 ;     9            133N.2             528711 - 133N
"RTN","RCRJRBDT",154,0)
 ;    10            1338.2             528711 - 1338
"RTN","RCRJRBDT",155,0)
 ;
"RTN","RCRJRBDT",156,0)
 S RCARR(1)="1319.3^528701 - 1319"
"RTN","RCRJRBDT",157,0)
 S RCARR(2)="1319^528703 - 1319"
"RTN","RCRJRBDT",158,0)
 S RCARR(3)="1319.4^528704 - 1319"
"RTN","RCRJRBDT",159,0)
 S RCARR(4)="1339^528704 - 1339"
"RTN","RCRJRBDT",160,0)
 S RCARR(5)="133N^528704 - 133N"
"RTN","RCRJRBDT",161,0)
 S RCARR(6)="1338^528704 - 1338"
"RTN","RCRJRBDT",162,0)
 S RCARR(7)="1319.2^528709 - 1319"
"RTN","RCRJRBDT",163,0)
 S RCARR(8)="1319.5^528711 - 1319"
"RTN","RCRJRBDT",164,0)
 S RCARR(9)="133N.2^528711 - 133N"
"RTN","RCRJRBDT",165,0)
 S RCARR(10)="1338.2^528711 - 1338"
"RTN","RCRJRBDT",166,0)
 ;
"RTN","RCRJRBDT",167,0)
 S RCX="" F  S RCX=$O(RCARR(RCX)) Q:RCX=""  S RCD=RCARR(RCX) D
"RTN","RCRJRBDT",168,0)
 .S RCDATA=$G(^RC(348.1,+$O(^RC(348.1,"B",$P(RCD,"^"),0)),0))
"RTN","RCRJRBDT",169,0)
 .Q:RCDATA=""
"RTN","RCRJRBDT",170,0)
 .S RCREC=$P(RCD,"^",2)_$J($P(RCDATA,"^",2),21,2)
"RTN","RCRJRBDT",171,0)
 .S RCREC=RCREC_$J($P(RCDATA,"^",3),15,2)
"RTN","RCRJRBDT",172,0)
 .S RCREC=RCREC_$J($P(RCDATA,"^",4),16,2)
"RTN","RCRJRBDT",173,0)
 .S X=+$P(RCDATA,"^",8)
"RTN","RCRJRBDT",174,0)
 .S X=$FN(X,",")_$S(X[".":"",1:".")_$E("00",$L($P(X,".",2))+1,2)
"RTN","RCRJRBDT",175,0)
 .S RCREC=RCREC_$J(X,14)
"RTN","RCRJRBDT",176,0)
 .D SETLINE(RCREC)
"RTN","RCRJRBDT",177,0)
 ;
"RTN","RCRJRBDT",178,0)
 D SETLINE(" ")
"RTN","RCRJRBDT",179,0)
 D SETLINE(" ")
"RTN","RCRJRBDT",180,0)
 D SETLINE("SGL Definitions")
"RTN","RCRJRBDT",181,0)
 D SETLINE(" ")
"RTN","RCRJRBDT",182,0)
 D SETLINE("1319 - Allowance for Bad Debt")
"RTN","RCRJRBDT",183,0)
 D SETLINE("1338 - Allowance for Tort Feasors")
"RTN","RCRJRBDT",184,0)
 D SETLINE("1339 - Allowance for Contract Adjustments pre-MRA (Medicare Remittance Advice)")
"RTN","RCRJRBDT",185,0)
 D SETLINE("133N - Allowance for Contract Adjustments post-MRA")
"RTN","RCRJRBDT",186,0)
 D SETLINE(" ")
"RTN","RCRJRBDT",187,0)
 D SETLINE(" ")
"RTN","RCRJRBDT",188,0)
 D SETLINE("Only members in the facility's local RC AR DATA COLLECTOR mail group")
"RTN","RCRJRBDT",189,0)
 D SETLINE("will receive this report.")
"RTN","RCRJRBDT",190,0)
 Q
"RTN","RCRJRBDT",191,0)
 ;
"RTN","RCRJRBDT",192,0)
SETLINE(DATA) ;  build the line for the report
"RTN","RCRJRBDT",193,0)
 S LINE=LINE+1,^TMP($J,"RCRJRCORMM",LINE)=DATA
"RTN","RCRJRBDT",194,0)
 Q
"RTN","RCRJRCOC")
0^1^B57425018^B57003461
"RTN","RCRJRCOC",1,0)
RCRJRCOC ;WISC/RFJ/BGJ-count current receivables ; 11/2/10 10:53am
"RTN","RCRJRCOC",2,0)
 ;;4.5;Accounts Receivable;**156,170,182,203,220,138,239,272,273**;Mar 20, 1995;Build 3
"RTN","RCRJRCOC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","RCRJRCOC",4,0)
 ; IA 4385 for call to $$MRATYPE^IBCEMU2
"RTN","RCRJRCOC",5,0)
 Q
"RTN","RCRJRCOC",6,0)
 ;
"RTN","RCRJRCOC",7,0)
 ;
"RTN","RCRJRCOC",8,0)
CURRENT(RCBILLDA,RCVALUE) ;  count current bills balance
"RTN","RCRJRCOC",9,0)
 ;  rcvalue = prin ^ int ^ admin ^ mf ^ cc
"RTN","RCRJRCOC",10,0)
 ;
"RTN","RCRJRCOC",11,0)
 N %,RCFUND,RCRSC,RCTOHSIF,RCTOMCCF,SGL,TYPE,MRATYPE,ARACTDT,CATEGORY
"RTN","RCRJRCOC",12,0)
 ;
"RTN","RCRJRCOC",13,0)
 ;  calculate the rsc for the bill.  the rsc is only used for
"RTN","RCRJRCOC",14,0)
 ;  mccf bills
"RTN","RCRJRCOC",15,0)
 S RCRSC=""
"RTN","RCRJRCOC",16,0)
 I $$ACCK^PRCAACC(RCBILLDA) S RCRSC=$$CALCRSC^RCXFMSUR(RCBILLDA)
"RTN","RCRJRCOC",17,0)
 ;
"RTN","RCRJRCOC",18,0)
 ;  calculate the amount that goes to mccf and hsif
"RTN","RCRJRCOC",19,0)
 D MCCFHSIF(RCBILLDA,RCVALUE,RCRSC,DATEEND+1)
"RTN","RCRJRCOC",20,0)
 ;
"RTN","RCRJRCOC",21,0)
 ;  store the data for the ndb, if a 0 is returned by the function,
"RTN","RCRJRCOC",22,0)
 ;  then the bill has already been counted as a current receivable,quit
"RTN","RCRJRCOC",23,0)
 I '$$NDBSTORE(RCBILLDA,RCVALUE,1) Q
"RTN","RCRJRCOC",24,0)
 ;
"RTN","RCRJRCOC",25,0)
 ;  store results for FMS SV document for accrued bills only
"RTN","RCRJRCOC",26,0)
 ;  do not include prepayments (26)
"RTN","RCRJRCOC",27,0)
 I $$ACCK^PRCAACC(RCBILLDA),$P($G(^PRCA(430,RCBILLDA,0)),"^",2)'=26 D
"RTN","RCRJRCOC",28,0)
 .   ;  get the bills fund and category
"RTN","RCRJRCOC",29,0)
 .   S RCFUND=$$GETFUNDB^RCXFMSUF(RCBILLDA)
"RTN","RCRJRCOC",30,0)
 .   S RCFUND=$$ADJFUND^RCRJRCO(RCFUND) ; may remove the line after 10/1/03
"RTN","RCRJRCOC",31,0)
 .   S CATEGORY=+$P($G(^PRCA(430,RCBILLDA,0)),"^",2)
"RTN","RCRJRCOC",32,0)
 .   ;
"RTN","RCRJRCOC",33,0)
 .   ;  ----- this code is used to set up the SV code sheet -----
"RTN","RCRJRCOC",34,0)
 .   S TYPE=21
"RTN","RCRJRCOC",35,0)
 .   ;  special type for tort feasor
"RTN","RCRJRCOC",36,0)
 .   I $E(RCRSC,1,2)=86!($E(RCRSC,1,2)="8S") S TYPE="2A"
"RTN","RCRJRCOC",37,0)
 .   ;
"RTN","RCRJRCOC",38,0)
 .   ;  Get ARACTDT=AR Date Active for bill
"RTN","RCRJRCOC",39,0)
 .   S ARACTDT=+$P($P($G(^PRCA(430,RCBILLDA,6)),"^",21),".")
"RTN","RCRJRCOC",40,0)
 .   ;  determine Receivable Type: 1=pre-MRA, 2=post-MRA Medicre, 3=post-MRA non-Medicare
"RTN","RCRJRCOC",41,0)
 .   ;  DBIA #4385 activated on 31-Mar-2004
"RTN","RCRJRCOC",42,0)
 .   S MRATYPE=$$MRATYPE^IBCEMU2(RCBILLDA,ARACTDT)
"RTN","RCRJRCOC",43,0)
 .   ;  set TYPE to 2F for post-MRA Medicare bills or to 2L for
"RTN","RCRJRCOC",44,0)
 .   ;  post-MRA non-Medicare bills (for RHI receivables only)
"RTN","RCRJRCOC",45,0)
 .   I $E(RCRSC,1,2)=85!($E(RCRSC,1,2)="8R"),MRATYPE>1 S TYPE=$S(MRATYPE=2:"2F",1:"2L")
"RTN","RCRJRCOC",46,0)
 .   ;
"RTN","RCRJRCOC",47,0)
 .   ;  store dollars to mccf and hsif
"RTN","RCRJRCOC",48,0)
 .   I RCTOMCCF S ^TMP($J,"RCRJRCOLSV",TYPE,RCFUND,RCRSC)=$G(^TMP($J,"RCRJRCOLSV",TYPE,RCFUND,RCRSC))+RCTOMCCF
"RTN","RCRJRCOC",49,0)
 .   I RCTOHSIF S ^TMP($J,"RCRJRCOLSV",21,5358.1,$S(RCRSC="8BZZ":"8B1Z",1:"8C1Z"))=$G(^TMP($J,"RCRJRCOLSV",21,5358.1,$S(RCRSC="8BZZ":"8B1Z",1:"8C1Z")))+RCTOHSIF
"RTN","RCRJRCOC",50,0)
 .   ;
"RTN","RCRJRCOC",51,0)
 .   ;  ----- this code is used to build the user report
"RTN","RCRJRCOC",52,0)
 .   S %=+$P($P($G(^PRCA(430,RCBILLDA,6)),"^",21),".")
"RTN","RCRJRCOC",53,0)
 .   S ^TMP($J,"RCRJRCOLREPORT",%,RCBILLDA)=$P(RCVALUE,"^")_"^"_($P(RCVALUE,"^",2)+$P(RCVALUE,"^",3)+$P(RCVALUE,"^",4)+$P(RCVALUE,"^",5))_"^SV"_TYPE
"RTN","RCRJRCOC",54,0)
 .   ;
"RTN","RCRJRCOC",55,0)
 .   ;  ----- this code is used to build the OIG extract, piece 3 = GL acct
"RTN","RCRJRCOC",56,0)
 .   S ^TMP($J,"RCRJROIG",RCBILLDA)=$P(RCVALUE,"^")_"^"_($P(RCVALUE,"^",2)+$P(RCVALUE,"^",3)+$P(RCVALUE,"^",4)+$P(RCVALUE,"^",5))_"^"_$S(TYPE="2A":1333,TYPE="2F":"13H1",TYPE="2L":"13N1",1:1311)
"RTN","RCRJRCOC",57,0)
 .   ;
"RTN","RCRJRCOC",58,0)
 .   ;  ----- this code is used to set up medicare supplemental SVs
"RTN","RCRJRCOC",59,0)
 .   S %=$G(^PRCA(430,RCBILLDA,13))
"RTN","RCRJRCOC",60,0)
 .   ;  medicare contract adjustment field 131 for bills activated in AR during the month the ARDC is running
"RTN","RCRJRCOC",61,0)
 .   I $P(%,"^",1),ARACTDT'<DATEBEG D  ;
"RTN","RCRJRCOC",62,0)
 .   .   S ^TMP($J,"RCRJRCOLSV",17)=$G(^TMP($J,"RCRJRCOLSV",17))+$P(%,"^",1)
"RTN","RCRJRCOC",63,0)
 .   .   S ^TMP($J,"RCRJRCOLSV",17,RCFUND,RCRSC)=$G(^TMP($J,"RCRJRCOLSV",17,RCFUND,RCRSC))+$P(%,"^",1)
"RTN","RCRJRCOC",64,0)
 .   ;  medicare unreimbursable medicare expense field 132 for bills activated in AR during the month the ARDC is running
"RTN","RCRJRCOC",65,0)
 .   I $P(%,"^",2),ARACTDT'<DATEBEG D  ;
"RTN","RCRJRCOC",66,0)
 .   .   S ^TMP($J,"RCRJRCOLSV",18)=$G(^TMP($J,"RCRJRCOLSV",18))+$P(%,"^",2)
"RTN","RCRJRCOC",67,0)
 .   .   S ^TMP($J,"RCRJRCOLSV",18,RCFUND,RCRSC)=$G(^TMP($J,"RCRJRCOLSV",18,RCFUND,RCRSC))+$P(%,"^",2)
"RTN","RCRJRCOC",68,0)
 .   ;
"RTN","RCRJRCOC",69,0)
 .   ;  ----- this code is used to set up the bad debt report -----
"RTN","RCRJRCOC",70,0)
 .   S SGL=$$BDRSGL^RCRJRBD(CATEGORY,RCFUND,MRATYPE)
"RTN","RCRJRCOC",71,0)
 .   ;  store dollars to mccf and hsif.  both are sgl 1319 so 1319.1 is
"RTN","RCRJRCOC",72,0)
 .   ;  used to put hsif in a subset of 1319
"RTN","RCRJRCOC",73,0)
 .   I RCTOMCCF S ^TMP($J,"RCRJRBD",SGL)=$G(^TMP($J,"RCRJRBD",SGL))+RCTOMCCF
"RTN","RCRJRCOC",74,0)
 .   I RCTOHSIF S ^TMP($J,"RCRJRBD",1319.1)=$G(^TMP($J,"RCRJRBD",1319.1))+RCTOHSIF
"RTN","RCRJRCOC",75,0)
 ;
"RTN","RCRJRCOC",76,0)
 ;  store the interest, admin, mf, cc on the SV code sheet
"RTN","RCRJRCOC",77,0)
 ;  interest (type P2; fund 1435; rsc 8047)
"RTN","RCRJRCOC",78,0)
 I $P(RCVALUE,"^",2) S ^TMP($J,"RCRJRCOLSV","P2",1435,8047)=$G(^TMP($J,"RCRJRCOLSV","P2",1435,8047))+$P(RCVALUE,"^",2)
"RTN","RCRJRCOC",79,0)
 ;  admin (type P2; fund 3220; rsc 8046)
"RTN","RCRJRCOC",80,0)
 I $P(RCVALUE,"^",3) S ^TMP($J,"RCRJRCOLSV","P2",3220,8046)=$G(^TMP($J,"RCRJRCOLSV","P2",3220,8046))+$P(RCVALUE,"^",3)
"RTN","RCRJRCOC",81,0)
 ;  mf + cc (type P2; fund 0869; rsc 8048)
"RTN","RCRJRCOC",82,0)
 S %=$P(RCVALUE,"^",4)+$P(RCVALUE,"^",5)
"RTN","RCRJRCOC",83,0)
 I % S ^TMP($J,"RCRJRCOLSV","P2","0869",8048)=$G(^TMP($J,"RCRJRCOLSV","P2","0869",8048))+%
"RTN","RCRJRCOC",84,0)
 Q
"RTN","RCRJRCOC",85,0)
 ;
"RTN","RCRJRCOC",86,0)
 ;
"RTN","RCRJRCOC",87,0)
WRITEOFF(RCBILLDA,RCVALUE,RCRITER2) ;  count write offs
"RTN","RCRJRCOC",88,0)
 ;  rcvalue = prin ^ int ^ admin ^ mf ^ cc
"RTN","RCRJRCOC",89,0)
 ;  rcriter2 = write off criteria tracked in ndb
"RTN","RCRJRCOC",90,0)
 ;
"RTN","RCRJRCOC",91,0)
 N %,RCFUND,RCRSC,RCTOHSIF,RCTOMCCF,TYPE,MRATYPE,ARACTDT
"RTN","RCRJRCOC",92,0)
 ;
"RTN","RCRJRCOC",93,0)
 ;  calculate the rsc for the bill.  the rsc is only used for
"RTN","RCRJRCOC",94,0)
 ;  mccf bills
"RTN","RCRJRCOC",95,0)
 S RCRSC=""
"RTN","RCRJRCOC",96,0)
 I $$ACCK^PRCAACC(RCBILLDA) S RCRSC=$$CALCRSC^RCXFMSUR(RCBILLDA)
"RTN","RCRJRCOC",97,0)
 ;
"RTN","RCRJRCOC",98,0)
 ;  calculate the amount that goes to mccf and hsif
"RTN","RCRJRCOC",99,0)
 D MCCFHSIF(RCBILLDA,RCVALUE,RCRSC,DATEEND+1)
"RTN","RCRJRCOC",100,0)
 ;
"RTN","RCRJRCOC",101,0)
 ;  store the data for the ndb, if a 0 is returned by the function,
"RTN","RCRJRCOC",102,0)
 ;  then the bill has already been counted as a current receivable,quit
"RTN","RCRJRCOC",103,0)
 I '$$NDBSTORE(RCBILLDA,RCVALUE,RCRITER2) Q
"RTN","RCRJRCOC",104,0)
 ;
"RTN","RCRJRCOC",105,0)
 ;  store results for FMS WR document
"RTN","RCRJRCOC",106,0)
 ;  do not include prepayments (26)
"RTN","RCRJRCOC",107,0)
 I $$ACCK^PRCAACC(RCBILLDA),$P($G(^PRCA(430,RCBILLDA,0)),"^",2)'=26 D
"RTN","RCRJRCOC",108,0)
 .   ;  get the bills fund
"RTN","RCRJRCOC",109,0)
 .   S RCFUND=$$GETFUNDB^RCXFMSUF(RCBILLDA)
"RTN","RCRJRCOC",110,0)
 .   S RCFUND=$$ADJFUND^RCRJRCO(RCFUND) ; may remove the line after 10/1/03
"RTN","RCRJRCOC",111,0)
 .   ;
"RTN","RCRJRCOC",112,0)
 .   S TYPE=37
"RTN","RCRJRCOC",113,0)
 .   ;  special type for tort feasor
"RTN","RCRJRCOC",114,0)
 .   I $E(RCRSC,1,2)=86!($E(RCRSC,1,2)="8S") S TYPE=39
"RTN","RCRJRCOC",115,0)
 .   S ARACTDT=+$P($P($G(^PRCA(430,RCBILLDA,6)),"^",21),".")
"RTN","RCRJRCOC",116,0)
 .   ;  DBIA #4385 activated on 31-Mar-2004
"RTN","RCRJRCOC",117,0)
 .   S MRATYPE=$$MRATYPE^IBCEMU2(RCBILLDA,ARACTDT)
"RTN","RCRJRCOC",118,0)
 .   ;  for contract adjustments (criter2=20), the type is 38 for pre-
"RTN","RCRJRCOC",119,0)
 .   ;  MRA, 4N for post-MRA non-Medicare and 08 for post-MRA Medicare
"RTN","RCRJRCOC",120,0)
 .   I RCRITER2=20 S TYPE=$S(MRATYPE=1:38,MRATYPE=2:"08",1:"4N")
"RTN","RCRJRCOC",121,0)
 .   ;  store dollars to mccf and hsif
"RTN","RCRJRCOC",122,0)
 .   I RCTOMCCF S ^TMP($J,"RCRJRCOLWR",TYPE,RCFUND,RCRSC)=$G(^TMP($J,"RCRJRCOLWR",TYPE,RCFUND,RCRSC))+RCTOMCCF
"RTN","RCRJRCOC",123,0)
 .   I RCTOHSIF S ^TMP($J,"RCRJRCOLWR",TYPE,5358.1,$S(RCRSC="8BZZ":"8B1Z",1:"8C1Z"))=$G(^TMP($J,"RCRJRCOLWR",TYPE,5358.1,$S(RCRSC="8BZZ":"8B1Z",1:"8C1Z")))+RCTOHSIF
"RTN","RCRJRCOC",124,0)
 ;
"RTN","RCRJRCOC",125,0)
 ;  store the interest, admin, mf, cc on the WR code sheet
"RTN","RCRJRCOC",126,0)
 ;  interest (type P4; fund 1435; rsc 8047)
"RTN","RCRJRCOC",127,0)
 I $P(RCVALUE,"^",2) S ^TMP($J,"RCRJRCOLWR","P4",1435,8047)=$G(^TMP($J,"RCRJRCOLWR","P4",1435,8047))+$P(RCVALUE,"^",2)
"RTN","RCRJRCOC",128,0)
 ;  admin (type P4; fund 3220; rsc 8046)
"RTN","RCRJRCOC",129,0)
 I $P(RCVALUE,"^",3) S ^TMP($J,"RCRJRCOLWR","P4",3220,8046)=$G(^TMP($J,"RCRJRCOLWR","P4",3220,8046))+$P(RCVALUE,"^",3)
"RTN","RCRJRCOC",130,0)
 ;  mf + cc (type P4; fund 0869; rsc 8048)
"RTN","RCRJRCOC",131,0)
 S %=$P(RCVALUE,"^",4)+$P(RCVALUE,"^",5)
"RTN","RCRJRCOC",132,0)
 I % S ^TMP($J,"RCRJRCOLWR","P4","0869",8048)=$G(^TMP($J,"RCRJRCOLWR","P4","0869",8048))+%
"RTN","RCRJRCOC",133,0)
 Q
"RTN","RCRJRCOC",134,0)
 ;
"RTN","RCRJRCOC",135,0)
 ;
"RTN","RCRJRCOC",136,0)
NDBSTORE(RCBILLDA,RCVALUE,RCRITER2) ;  store the data for the NDB
"RTN","RCRJRCOC",137,0)
 ;  returns a 1 if the bill has not been counted
"RTN","RCRJRCOC",138,0)
 ;  returns a 0 if the bill has been counted
"RTN","RCRJRCOC",139,0)
 N %,CRITERIA
"RTN","RCRJRCOC",140,0)
 ;
"RTN","RCRJRCOC",141,0)
 ;  this line of code will prevent duplicate counts if a sites cross
"RTN","RCRJRCOC",142,0)
 ;  references in file 430 (actdt and asdt) are duplicated (incorrect)
"RTN","RCRJRCOC",143,0)
 I RCRITER2<13,$D(^TMP($J,"RCRJRCOL","COUNT",RCBILLDA,RCRITER2)) Q 0
"RTN","RCRJRCOC",144,0)
 ;
"RTN","RCRJRCOC",145,0)
 ;  get a bills criteria 1,3,4,5
"RTN","RCRJRCOC",146,0)
 S CRITERIA=$G(^TMP($J,"RCRJRCOL","CRITERIA",RCBILLDA))
"RTN","RCRJRCOC",147,0)
 I CRITERIA="" S CRITERIA=$$CRITERIA^RCRJRCOL(RCBILLDA),^TMP($J,"RCRJRCOL","CRITERIA",RCBILLDA)=CRITERIA
"RTN","RCRJRCOC",148,0)
 S $P(CRITERIA,"-",2)=RCRITER2
"RTN","RCRJRCOC",149,0)
 ;
"RTN","RCRJRCOC",150,0)
 ;  store results for ndb
"RTN","RCRJRCOC",151,0)
 S %=$G(@DATASTOR)
"RTN","RCRJRCOC",152,0)
 S $P(%,"^")=$P(%,"^")+1
"RTN","RCRJRCOC",153,0)
 S $P(%,"^",2)=$P(%,"^",2)+$P(RCVALUE,"^")
"RTN","RCRJRCOC",154,0)
 S $P(%,"^",3)=$P(%,"^",3)+$P(RCVALUE,"^",2)+$P(RCVALUE,"^",3)+$P(RCVALUE,"^",4)+$P(RCVALUE,"^",5)
"RTN","RCRJRCOC",155,0)
 S @DATASTOR=%
"RTN","RCRJRCOC",156,0)
 ;
"RTN","RCRJRCOC",157,0)
 ;  keep a count of current receivables counted
"RTN","RCRJRCOC",158,0)
 S ^TMP($J,"RCRJRCOL","COUNT",RCBILLDA,RCRITER2)=""
"RTN","RCRJRCOC",159,0)
 S ^TMP($J,"RCRJRCOL","CRIT2",RCRITER2,RCBILLDA)=""
"RTN","RCRJRCOC",160,0)
 Q 1
"RTN","RCRJRCOC",161,0)
 ;
"RTN","RCRJRCOC",162,0)
 ;
"RTN","RCRJRCOC",163,0)
MCCFHSIF(RCBILLDA,RCVALUE,RCRSC,ASOFDATE) ;  calculate the amount that goes
"RTN","RCRJRCOC",164,0)
 ;
"RTN","RCRJRCOC",165,0)
 ;  to mccf and hsif
"RTN","RCRJRCOC",166,0)
 ;
"RTN","RCRJRCOC",167,0)
 ;  returns RCTOMCCF and RCTOHSIF as the outstanding balance to mccf
"RTN","RCRJRCOC",168,0)
 ;  and the outstanding balance to hsif
"RTN","RCRJRCOC",169,0)
 N MCCFHSIF
"RTN","RCRJRCOC",170,0)
 ;
"RTN","RCRJRCOC",171,0)
 S RCTOMCCF=$P(RCVALUE,"^"),RCTOHSIF=0
"RTN","RCRJRCOC",172,0)
 ;
"RTN","RCRJRCOC",173,0)
 I $$NOHSIF^RCRJRCO() Q  ; disabled HSIF
"RTN","RCRJRCOC",174,0)
 ;
"RTN","RCRJRCOC",175,0)
 ; if revenue source code is not 8BZZ or 8CZZ then it all goes to mccf
"RTN","RCRJRCOC",176,0)
 I RCRSC="8BZZ"!(RCRSC="8CZZ") D
"RTN","RCRJRCOC",177,0)
 .   ;  get the amount for each fund mccf and hsif
"RTN","RCRJRCOC",178,0)
 .   ;  this call returns the total amount owed to mccf (piece 1),
"RTN","RCRJRCOC",179,0)
 .   ;  total amount owed to hsif (piece 2), total amount paid
"RTN","RCRJRCOC",180,0)
 .   ;  to mccf (piece 3), total amount paid to hsif (piece 4).
"RTN","RCRJRCOC",181,0)
 .   ;  for outstanding balance you must subtract the payment in
"RTN","RCRJRCOC",182,0)
 .   ;  pieces 3 and 4 which are returned as negative amounts.
"RTN","RCRJRCOC",183,0)
 .   S MCCFHSIF=$$BILLFUND^RCBMILLC(RCBILLDA,ASOFDATE)
"RTN","RCRJRCOC",184,0)
 .   S RCTOMCCF=$P(MCCFHSIF,"^",1)+$P(MCCFHSIF,"^",3)
"RTN","RCRJRCOC",185,0)
 .   S RCTOHSIF=$P(MCCFHSIF,"^",2)+$P(MCCFHSIF,"^",4)
"RTN","RCRJRCOC",186,0)
 Q
"RTN","RCRJRDEP")
0^4^B57617465^B57461822
"RTN","RCRJRDEP",1,0)
RCRJRDEP ;WISC/RFJ-Deposit Reconciliation Report ; 9/7/10 8:19am
"RTN","RCRJRDEP",2,0)
 ;;4.5;Accounts Receivable;**101,114,203,220,273**;Mar 20, 1995;Build 3
"RTN","RCRJRDEP",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","RCRJRDEP",4,0)
 ;
"RTN","RCRJRDEP",5,0)
 W !!,"This option will print the Deposit Reconciliation Report.  The report will"
"RTN","RCRJRDEP",6,0)
 W !,"display the data on the code sheets sent to FMS on the CR document.  Only"
"RTN","RCRJRDEP",7,0)
 W !,"deposits processed after patch PRCA*4.5*90 was installed can be displayed."
"RTN","RCRJRDEP",8,0)
 W !,"Select the starting and ending FMS Document Number without the station"
"RTN","RCRJRDEP",9,0)
 W !,"number, example: K8A0346."
"RTN","RCRJRDEP",10,0)
 ;
"RTN","RCRJRDEP",11,0)
 N DEFAULT,RCRJEND,RCRJFXIT,RCRJSTRT,RCRJSUMM,X
"RTN","RCRJRDEP",12,0)
 ;
"RTN","RCRJRDEP",13,0)
 F  D  Q:$G(RCRJFXIT)
"RTN","RCRJRDEP",14,0)
 . R !!,"START WITH CR DOCUMENT: FIRST// ",X:DTIME
"RTN","RCRJRDEP",15,0)
 . I X["^" S RCRJFXIT=2 Q
"RTN","RCRJRDEP",16,0)
 . I $L(X),$L(X)'=7 W !?5,"The CR DOCUMENT should be 7 characters in length (example: K8A0804)." Q
"RTN","RCRJRDEP",17,0)
 . S RCRJSTRT=$TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","RCRJRDEP",18,0)
 . ;
"RTN","RCRJRDEP",19,0)
 . S DEFAULT=$S(RCRJSTRT="":" LAST",1:RCRJSTRT)
"RTN","RCRJRDEP",20,0)
 . W !,"  END WITH CR DOCUMENT: ",DEFAULT,"// " R X:DTIME
"RTN","RCRJRDEP",21,0)
 . I X["^" S RCRJFXIT=2 Q
"RTN","RCRJRDEP",22,0)
 . S RCRJEND=$TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","RCRJRDEP",23,0)
 . I X="LAST" S (RCRJEND,X)="zzzzzzz"
"RTN","RCRJRDEP",24,0)
 . I $L(X),$L(X)'=7 W !?5,"The CR DOCUMENT should be 7 characters in length (example: K8A0804)." Q
"RTN","RCRJRDEP",25,0)
 . I X="" S RCRJEND=$S(DEFAULT=" LAST":"zzzzzzz",1:DEFAULT)
"RTN","RCRJRDEP",26,0)
 . I RCRJEND'=RCRJSTRT,RCRJEND']RCRJSTRT W !?5,"The END CR DOCUMENT should be after (in sequence) the start document." Q
"RTN","RCRJRDEP",27,0)
 . S RCRJFXIT=1
"RTN","RCRJRDEP",28,0)
 I RCRJFXIT=2 Q
"RTN","RCRJRDEP",29,0)
 ;
"RTN","RCRJRDEP",30,0)
 S RCRJSUMM=$$SUMMARY^RCRJRTRA I 'RCRJSUMM Q
"RTN","RCRJRDEP",31,0)
 ;
"RTN","RCRJRDEP",32,0)
 ;  select device
"RTN","RCRJRDEP",33,0)
 W ! S %ZIS="Q" D ^%ZIS Q:POP
"RTN","RCRJRDEP",34,0)
 I $D(IO("Q")) D  D ^%ZTLOAD K IO("Q"),ZTSK Q
"RTN","RCRJRDEP",35,0)
 . S ZTDESC="Deposit Reconciliation Report",ZTRTN="DQ^RCRJRDEP"
"RTN","RCRJRDEP",36,0)
 . S ZTSAVE("RCRJ*")="",ZTSAVE("ZTREQ")="@"
"RTN","RCRJRDEP",37,0)
 W !!,"<*> please wait <*>"
"RTN","RCRJRDEP",38,0)
 ;
"RTN","RCRJRDEP",39,0)
DQ ;  report (queue) starts here
"RTN","RCRJRDEP",40,0)
 N %,%H,%I,CHAMPVA,DA,DEPOSDA,DIQ2,DOCTOTAL,FMSDOCID,FUND,FUNDTOTL,GECSDATA,LINEDA,LINEDATA,NOW,PAGE,RCDATA,RCRJLAST,RCRJLINE,RCRJFLAG,RECEIPDA,RSC,RSCTOTL,SCREEN,SITE,TOTAL,X,Y
"RTN","RCRJRDEP",41,0)
 K ^TMP($J,"RCRJRDEP")
"RTN","RCRJRDEP",42,0)
 ;
"RTN","RCRJRDEP",43,0)
 ;  build list of fms documents
"RTN","RCRJRDEP",44,0)
 S SITE=$$SITE^RCMSITE
"RTN","RCRJRDEP",45,0)
 S RCRJLAST="CR-"_SITE_RCRJEND_" "
"RTN","RCRJRDEP",46,0)
 ;
"RTN","RCRJRDEP",47,0)
 ;  the fms document was previously stored in the deposit file 344.1
"RTN","RCRJRDEP",48,0)
 ;  this code can be removed later on
"RTN","RCRJRDEP",49,0)
 ;  this is the starting document, use 31 to start with select doc first
"RTN","RCRJRDEP",50,0)
 S FMSDOCID="CR-"_SITE_RCRJSTRT_$C(31)
"RTN","RCRJRDEP",51,0)
 F  S FMSDOCID=$O(^RCY(344.1,"ADOC",FMSDOCID)) Q:FMSDOCID=""!(FMSDOCID]RCRJLAST)  D
"RTN","RCRJRDEP",52,0)
 . S DEPOSDA=+$O(^RCY(344.1,"ADOC",FMSDOCID,0))
"RTN","RCRJRDEP",53,0)
 . ;  compute deposit (all receipts) total for comparison
"RTN","RCRJRDEP",54,0)
 . S TOTAL=0,CHAMPVA=0
"RTN","RCRJRDEP",55,0)
 . S RECEIPDA=0 F  S RECEIPDA=$O(^RCY(344,"AD",DEPOSDA,RECEIPDA)) Q:'RECEIPDA  D
"RTN","RCRJRDEP",56,0)
 . . S DA=0 F  S DA=$O(^RCY(344,RECEIPDA,1,DA)) Q:'DA  S TOTAL=TOTAL+$P(^(DA,0),"^",5)
"RTN","RCRJRDEP",57,0)
 . . S CHAMPVA=CHAMPVA+$$CHAMPVA(RECEIPDA)
"RTN","RCRJRDEP",58,0)
 . ;  tmp=deposit ^ depositda ^ depositdate ^ ^ ^ ^ deposittotal ^ champvatotal
"RTN","RCRJRDEP",59,0)
 . S ^TMP($J,"RCRJRDEP",FMSDOCID)=$P($G(^RCY(344.1,DEPOSDA,0)),"^")_"^"_DEPOSDA_"^"_$P($G(^RCY(344.1,DEPOSDA,0)),"^",9)_"^^^^"_TOTAL_"^"_CHAMPVA
"RTN","RCRJRDEP",60,0)
 ;
"RTN","RCRJRDEP",61,0)
 ;  the fms document is now stored in the receipt file 344
"RTN","RCRJRDEP",62,0)
 S FMSDOCID="CR-"_SITE_RCRJSTRT_$C(31)
"RTN","RCRJRDEP",63,0)
 F  S FMSDOCID=$O(^RCY(344,"ADOC",FMSDOCID)) Q:FMSDOCID=""!(FMSDOCID]RCRJLAST)  D
"RTN","RCRJRDEP",64,0)
 . S RECEIPDA=+$O(^RCY(344,"ADOC",FMSDOCID,0))
"RTN","RCRJRDEP",65,0)
 . ;  compute deposit (all receipts) total for comparison
"RTN","RCRJRDEP",66,0)
 . S TOTAL=0
"RTN","RCRJRDEP",67,0)
 . ;  use the payment amount to pick up suspense deposits
"RTN","RCRJRDEP",68,0)
 . S DA=0 F  S DA=$O(^RCY(344,RECEIPDA,1,DA)) Q:'DA  S TOTAL=TOTAL+$P(^(DA,0),"^",4)
"RTN","RCRJRDEP",69,0)
 . S CHAMPVA=$$CHAMPVA(RECEIPDA)
"RTN","RCRJRDEP",70,0)
 . S DEPOSDA=+$P($G(^RCY(344,RECEIPDA,0)),"^",6)
"RTN","RCRJRDEP",71,0)
 . ;  tmp=deposit ^ depositda ^ depositdate ^ receipt ^receiptda ^ receipt date ^ receipttotal ^ champvatotal
"RTN","RCRJRDEP",72,0)
 . S ^TMP($J,"RCRJRDEP",FMSDOCID)=$P($G(^RCY(344.1,DEPOSDA,0)),"^")_"^"_DEPOSDA_"^"_$P($G(^RCY(344.1,DEPOSDA,0)),"^",11)_"^"_$P($G(^RCY(344,RECEIPDA,0)),"^")_"^"_RECEIPDA_"^"_$P($G(^RCY(344,RECEIPDA,0)),"^",8)_"^"_TOTAL_"^"_CHAMPVA
"RTN","RCRJRDEP",73,0)
 ;
"RTN","RCRJRDEP",74,0)
 ;  print report
"RTN","RCRJRDEP",75,0)
 S SCREEN=0 I '$D(ZTQUEUED),IO=IO(0),$E(IOST)="C" S SCREEN=1
"RTN","RCRJRDEP",76,0)
 S RCRJLINE="",$P(RCRJLINE,"-",81)=""
"RTN","RCRJRDEP",77,0)
 D NOW^%DTC S Y=% D DD^%DT S NOW=Y,PAGE=1
"RTN","RCRJRDEP",78,0)
 U IO I $G(RCRJSUMM)'=1 D H
"RTN","RCRJRDEP",79,0)
 ;
"RTN","RCRJRDEP",80,0)
 S FMSDOCID="" F  S FMSDOCID=$O(^TMP($J,"RCRJRDEP",FMSDOCID)) Q:FMSDOCID=""!($G(RCRJFLAG))  D
"RTN","RCRJRDEP",81,0)
 . S RCDATA=^TMP($J,"RCRJRDEP",FMSDOCID)
"RTN","RCRJRDEP",82,0)
 . K GECSDATA
"RTN","RCRJRDEP",83,0)
 . D DATA^GECSSGET(FMSDOCID,1)
"RTN","RCRJRDEP",84,0)
 . I $G(RCRJSUMM)'=1 D  Q:$G(RCRJFLAG)
"RTN","RCRJRDEP",85,0)
 . . I $Y>(IOSL-7) D:SCREEN PAUSE^RCRJRTR1 Q:$G(RCRJFLAG)  D H
"RTN","RCRJRDEP",86,0)
 . . S Y=$P($P(RCDATA,"^",3),".") I Y D DD^%DT
"RTN","RCRJRDEP",87,0)
 . . W !,"FMS DOCUMENT: ",FMSDOCID,?34,"DEPOSIT TICKET: ",$P(RCDATA,"^"),?62,"DATE: ",Y
"RTN","RCRJRDEP",88,0)
 . . I $P(RCDATA,"^",4)'="" W !?41,"RECEIPT: ",$P(RCDATA,"^",4) S Y=$P($P(RCDATA,"^",6),".") I Y D DD^%DT W ?62,"DATE: ",Y
"RTN","RCRJRDEP",89,0)
 . . D H1
"RTN","RCRJRDEP",90,0)
 . S DOCTOTAL=0
"RTN","RCRJRDEP",91,0)
 . I $D(GECSDATA) S LINEDA=0 F  S LINEDA=$O(GECSDATA(2100.1,GECSDATA,10,LINEDA)) Q:'LINEDA!($G(RCRJFLAG))  D
"RTN","RCRJRDEP",92,0)
 . . S LINEDATA=GECSDATA(2100.1,GECSDATA,10,LINEDA)
"RTN","RCRJRDEP",93,0)
 . . I $E(LINEDATA,1,4)="CR2^" S DOCTOTAL=$P(LINEDATA,"^",15)
"RTN","RCRJRDEP",94,0)
 . . I $E(LINEDATA,1,9)'="LIN^~CRA^" Q
"RTN","RCRJRDEP",95,0)
 . . I $G(RCRJSUMM)'=1 D
"RTN","RCRJRDEP",96,0)
 . . . I $Y>(IOSL-4) D:SCREEN PAUSE^RCRJRTR1 Q:$G(RCRJFLAG)  D H,H1
"RTN","RCRJRDEP",97,0)
 . . . W !?1,$P(LINEDATA,"^",3),?6,$P(LINEDATA,"^",4),?11,$P(LINEDATA,"^",6),?19,$P(LINEDATA,"^",10)
"RTN","RCRJRDEP",98,0)
 . . . W ?30,$J($P(LINEDATA,"^",18),8),?40,$E($P(LINEDATA,"^",25),4,10),?50,$J($P(LINEDATA,"^",20),10,2),?64,$J($P(LINEDATA,"^",23),9)
"RTN","RCRJRDEP",99,0)
 . . ;  totals by fund
"RTN","RCRJRDEP",100,0)
 . . S FUND=$P(LINEDATA,"^",6)
"RTN","RCRJRDEP",101,0)
 . . I FUND="" S FUND="0160"
"RTN","RCRJRDEP",102,0)
 . . S FUNDTOTL(FUND)=$G(FUNDTOTL(FUND))+$P(LINEDATA,"^",20)
"RTN","RCRJRDEP",103,0)
 . . ;  totals by rsc for the accrued 5287 funds (01,03,04,09,11)
"RTN","RCRJRDEP",104,0)
 . . S RSC=$P(LINEDATA,"^",10)
"RTN","RCRJRDEP",105,0)
 . . I RSC'="",($$PTACCT^PRCAACC(FUND)!(FUND=4032)) S RSCTOTL(RSC)=$G(RSCTOTL(RSC))+$P(LINEDATA,"^",20)
"RTN","RCRJRDEP",106,0)
 . I $G(RCRJSUMM)=1 Q
"RTN","RCRJRDEP",107,0)
 . I $G(RCRJFLAG) Q
"RTN","RCRJRDEP",108,0)
 . I $Y>(IOSL-6) D:SCREEN PAUSE^RCRJRTR1 Q:$G(RCRJFLAG)  D H
"RTN","RCRJRDEP",109,0)
 . W !?23,"LINE TOTAL/DOCUMENT TOTAL: ",$J(DOCTOTAL,10,2)
"RTN","RCRJRDEP",110,0)
 . ;  compute receipt total for comparison
"RTN","RCRJRDEP",111,0)
 . S TOTAL=$P(RCDATA,"^",7)
"RTN","RCRJRDEP",112,0)
 . S CHAMPVA=$P(RCDATA,"^",8)
"RTN","RCRJRDEP",113,0)
 . I CHAMPVA W !?35,"CHAMPVA TOTAL: ",$J(CHAMPVA,10,2)
"RTN","RCRJRDEP",114,0)
 . W !?35,"DEPOSIT TOTAL: ",$J(TOTAL,10,2)
"RTN","RCRJRDEP",115,0)
 . I (DOCTOTAL+CHAMPVA)'=TOTAL W !," WARNING: TOTALS DO NOT MATCH, CHECK THE DEPOSIT: **********"
"RTN","RCRJRDEP",116,0)
 . W !
"RTN","RCRJRDEP",117,0)
 ;
"RTN","RCRJRDEP",118,0)
 I $G(RCRJFLAG) D Q Q
"RTN","RCRJRDEP",119,0)
 I $G(RCRJSUMM)'=1 D:SCREEN PAUSE^RCRJRTR1 I $G(RCRJFLAG) D Q Q
"RTN","RCRJRDEP",120,0)
 D H
"RTN","RCRJRDEP",121,0)
 ;  print totals by fund/rsc
"RTN","RCRJRDEP",122,0)
 W !!,"TOTAL DEPOSITS BY FUND:"
"RTN","RCRJRDEP",123,0)
 S FUND="" F  S FUND=$O(FUNDTOTL(FUND)) Q:FUND=""!($G(RCRJFLAG))  D
"RTN","RCRJRDEP",124,0)
 .  I $Y>(IOSL-4) D:SCREEN PAUSE^RCRJRTR1 Q:$G(RCRJFLAG)  D H W !!,"TOTAL DEPOSITS BY FUND:"
"RTN","RCRJRDEP",125,0)
 .  W !?5,"FUND: ",FUND,?20,$J(FUNDTOTL(FUND),10,2)
"RTN","RCRJRDEP",126,0)
 I $G(RCRJFLAG) D Q Q
"RTN","RCRJRDEP",127,0)
 I DT<$$ADDPTEDT^PRCAACC() W !!,"TOTAL DEPOSITS BY REVENUE SOURCE CODE FOR THE SERIES OF FUNDS 5287.1,5287.3,5287.4:"
"RTN","RCRJRDEP",128,0)
 I DT'<$$ADDPTEDT^PRCAACC() W !!,"TOTAL DEPOSITS BY REVENUE SOURCE CODE FOR THE SERIES OF FUNDS 528701,528703,528704,528711:"
"RTN","RCRJRDEP",129,0)
 S RSC="" F  S RSC=$O(RSCTOTL(RSC)) Q:RSC=""  D  Q:$G(RCRJFLAG)
"RTN","RCRJRDEP",130,0)
 . I $Y>(IOSL-4) D:SCREEN PAUSE^RCRJRTR1 Q:$G(RCRJFLAG)  D H W !!,"TOTAL DEPOSITS BY REVENUE SOURCE CODE FOR THE SERIES OF ACCRUED 5287 FUNDS "_$S(DT<$$ADDPTEDT^PRCAACC():"(.1,.3,.4,.9):",1:"(01,03,04,09,11):")
"RTN","RCRJRDEP",131,0)
 . W !?5,"RSC: ",RSC,?17,$$GETDESC^RCXFMSPR(RSC),?70,$J(RSCTOTL(RSC),10,2)
"RTN","RCRJRDEP",132,0)
 I $G(RCRJFLAG) D Q Q
"RTN","RCRJRDEP",133,0)
 I SCREEN R !,"Press RETURN to continue:",X:DTIME
"RTN","RCRJRDEP",134,0)
 ;
"RTN","RCRJRDEP",135,0)
Q D ^%ZISC
"RTN","RCRJRDEP",136,0)
 K ^TMP($J,"RCRJRDEP")
"RTN","RCRJRDEP",137,0)
 Q
"RTN","RCRJRDEP",138,0)
 ;
"RTN","RCRJRDEP",139,0)
 ;
"RTN","RCRJRDEP",140,0)
H ;  report heading
"RTN","RCRJRDEP",141,0)
 I PAGE'=1!(SCREEN) W @IOF
"RTN","RCRJRDEP",142,0)
 S %=NOW_"  PAGE "_PAGE,PAGE=PAGE+1
"RTN","RCRJRDEP",143,0)
 W $C(13),"DEPOSIT RECONCILIATION REPORT",?(80-$L(%)),%
"RTN","RCRJRDEP",144,0)
 W !,"  START WITH DEPOSIT: ",$S(RCRJSTRT="":"**FIRST**",1:RCRJSTRT),"  END WITH DEPOSIT: ",$S(RCRJEND="zzzzzzz":"**LAST**",1:RCRJEND),?65,$J("TYPE: "_$S(RCRJSUMM=1:"SUMMARY",1:"DETAILED"),15)
"RTN","RCRJRDEP",145,0)
 W !,RCRJLINE
"RTN","RCRJRDEP",146,0)
 Q
"RTN","RCRJRDEP",147,0)
 ;
"RTN","RCRJRDEP",148,0)
 ;
"RTN","RCRJRDEP",149,0)
H1 ;  print line heading
"RTN","RCRJRDEP",150,0)
 W !,"LINE",?5,"BFY",?11,"FUND",?20,"RSC",?30,"PROVIDER",?43,"BILL",?54,"AMOUNT",?64,"TRAN TYPE"
"RTN","RCRJRDEP",151,0)
 Q
"RTN","RCRJRDEP",152,0)
 ;
"RTN","RCRJRDEP",153,0)
 ;
"RTN","RCRJRDEP",154,0)
CHAMPVA(RECEIPDA) ;  return dollars for champva
"RTN","RCRJRDEP",155,0)
 N %,CATEGORY,RECEIPT,TOTAL,TRAN3,TRANDA
"RTN","RCRJRDEP",156,0)
 S RECEIPT=$P($G(^RCY(344,RECEIPDA,0)),"^")
"RTN","RCRJRDEP",157,0)
 I RECEIPT="" Q 0
"RTN","RCRJRDEP",158,0)
 ;
"RTN","RCRJRDEP",159,0)
 S TOTAL=0
"RTN","RCRJRDEP",160,0)
 S TRANDA=0 F  S TRANDA=$O(^PRCA(433,"AF",RECEIPT,TRANDA)) Q:'TRANDA  D
"RTN","RCRJRDEP",161,0)
 . S CATEGORY=$P($G(^PRCA(430,+$P($G(^PRCA(433,TRANDA,0)),"^",2),0)),"^",2)
"RTN","RCRJRDEP",162,0)
 . I CATEGORY'=29 Q
"RTN","RCRJRDEP",163,0)
 . S TRAN3=$G(^PRCA(433,TRANDA,3))
"RTN","RCRJRDEP",164,0)
 . F %=1:1:5 S TOTAL=TOTAL+$P(TRAN3,"^",%)
"RTN","RCRJRDEP",165,0)
 Q TOTAL
"RTN","RCXFMSPR")
0^8^B25382600^B23643768
"RTN","RCXFMSPR",1,0)
RCXFMSPR ;WISC/RFJ-print revenue source codes ; 8/31/10 11:34am
"RTN","RCXFMSPR",2,0)
 ;;4.5;Accounts Receivable;**90,96,101,156,170,203,273**;Mar 20, 1995;Build 3
"RTN","RCXFMSPR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","RCXFMSPR",4,0)
 W !,"This option will print out a list of the revenue source codes sent from"
"RTN","RCXFMSPR",5,0)
 W !,"the VISTA system to FMS."
"RTN","RCXFMSPR",6,0)
 ;
"RTN","RCXFMSPR",7,0)
 ;  select device
"RTN","RCXFMSPR",8,0)
 W ! S %ZIS="Q" D ^%ZIS Q:POP
"RTN","RCXFMSPR",9,0)
 I $D(IO("Q")) D  D ^%ZTLOAD K IO("Q"),ZTSK Q
"RTN","RCXFMSPR",10,0)
 .   S ZTDESC="Revenue Source Code Report",ZTRTN="DQ^RCXFMSPR"
"RTN","RCXFMSPR",11,0)
 .   S ZTSAVE("ZTREQ")="@"
"RTN","RCXFMSPR",12,0)
 W !!,"<*> please wait <*>"
"RTN","RCXFMSPR",13,0)
 ;
"RTN","RCXFMSPR",14,0)
DQ ;  queue starts here
"RTN","RCXFMSPR",15,0)
 N %,%I,BINARY,COL2DESC,COL3DESC,COLUMN1,COLUMN2,COLUMN3,COLUMN4
"RTN","RCXFMSPR",16,0)
 N DECIMAL,DESCRIP,NOW,PAGE,RCSTFLAG,SCREEN,X,Y
"RTN","RCXFMSPR",17,0)
 D NOW^%DTC S Y=% D DD^%DT S NOW=Y
"RTN","RCXFMSPR",18,0)
 S PAGE=1,SCREEN=0 I '$D(ZTQUEUED),IO=IO(0),$E(IOST)="C" S SCREEN=1
"RTN","RCXFMSPR",19,0)
 U IO D H
"RTN","RCXFMSPR",20,0)
 ;
"RTN","RCXFMSPR",21,0)
 S COLUMN1="A",COLUMN2="R",COLUMN3="R",COLUMN4="V",DESCRIP="Miscellaneous"
"RTN","RCXFMSPR",22,0)
 D WRITEIT
"RTN","RCXFMSPR",23,0)
 ;
"RTN","RCXFMSPR",24,0)
 ;  for now, column 1 is always 8 and column 4 is always Z
"RTN","RCXFMSPR",25,0)
 S COLUMN1=8,COLUMN4="Z"
"RTN","RCXFMSPR",26,0)
 F COLUMN2=1:1:9,"A","B","C","D","E","F","G","H","I","J","K","L","M","Q","R","S","T" D  Q:$G(RCSTFLAG)
"RTN","RCXFMSPR",27,0)
 .   S COL2DESC=$P($T(@("A"_COLUMN2)),";",3)
"RTN","RCXFMSPR",28,0)
 .   ;
"RTN","RCXFMSPR",29,0)
 .   S COLUMN3=$S(COLUMN2=5:"*",1:"Z")
"RTN","RCXFMSPR",30,0)
 .   S DESCRIP=COL2DESC D WRITEIT
"RTN","RCXFMSPR",31,0)
 .   ;
"RTN","RCXFMSPR",32,0)
 .   I $G(RCSTFLAG) Q
"RTN","RCXFMSPR",33,0)
 .   ;
"RTN","RCXFMSPR",34,0)
 .   ;  show hsif - disabled by patch 203
"RTN","RCXFMSPR",35,0)
 .   ;I COLUMN2="B"!(COLUMN2="C") S DESCRIP=DESCRIP_" HSIF",COLUMN3=1 D WRITEIT
"RTN","RCXFMSPR",36,0)
 ;
"RTN","RCXFMSPR",37,0)
 I $G(RCSTFLAG) D Q Q
"RTN","RCXFMSPR",38,0)
 ;
"RTN","RCXFMSPR",39,0)
 ;  print reimbursable health insurance rsc's
"RTN","RCXFMSPR",40,0)
 S COLUMN2=5
"RTN","RCXFMSPR",41,0)
 W !!?6,"For REIMBURSABLE HEALTH INSURANCE [85*Z]:"
"RTN","RCXFMSPR",42,0)
 F DECIMAL=0:1:31 D  Q:$G(RCSTFLAG)
"RTN","RCXFMSPR",43,0)
 .   I DECIMAL<10 S COLUMN3=DECIMAL
"RTN","RCXFMSPR",44,0)
 .   E  S COLUMN3=$C(65+DECIMAL-10)
"RTN","RCXFMSPR",45,0)
 .   ;
"RTN","RCXFMSPR",46,0)
 .   ;  convert decimal to binary (ex: 10011) so it can be
"RTN","RCXFMSPR",47,0)
 .   ;  parsed in rsc to get the description
"RTN","RCXFMSPR",48,0)
 .   S BINARY=$$CONVERT(DECIMAL)
"RTN","RCXFMSPR",49,0)
 .   S COL3DESC=$P($T(@("B"_$E(BINARY,1,2))),";",3)
"RTN","RCXFMSPR",50,0)
 .   S COL3DESC=COL3DESC_", "_$P($T(@("C"_$E(BINARY,3))),";",3)
"RTN","RCXFMSPR",51,0)
 .   S COL3DESC=COL3DESC_", "_$P($T(@("D"_$E(BINARY,4))),";",3)
"RTN","RCXFMSPR",52,0)
 .   S COL3DESC=COL3DESC_", "_$P($T(@("E"_$E(BINARY,5))),";",3)
"RTN","RCXFMSPR",53,0)
 .   S DESCRIP=COL3DESC
"RTN","RCXFMSPR",54,0)
 .   D WRITEIT
"RTN","RCXFMSPR",55,0)
 ;
"RTN","RCXFMSPR",56,0)
Q D ^%ZISC
"RTN","RCXFMSPR",57,0)
 Q
"RTN","RCXFMSPR",58,0)
 ;
"RTN","RCXFMSPR",59,0)
 ;
"RTN","RCXFMSPR",60,0)
GETDESC(RSC) ;  return the description for the revenue source code
"RTN","RCXFMSPR",61,0)
 N BINARY,COL3DESC,COLUMN2,COLUMN3,DESC
"RTN","RCXFMSPR",62,0)
 I RSC="ARRV" Q "Miscellaneous"
"RTN","RCXFMSPR",63,0)
 I RSC=8046 Q "Administrative"
"RTN","RCXFMSPR",64,0)
 I RSC=8047 Q "Interest"
"RTN","RCXFMSPR",65,0)
 I RSC=8048 Q "Marshal Fee and Court Cost"
"RTN","RCXFMSPR",66,0)
 S DESC="UNKNOWN"
"RTN","RCXFMSPR",67,0)
 S COLUMN2=$E(RSC,2)
"RTN","RCXFMSPR",68,0)
 I "123456789ABCDEFGHIJKLMQRST"[COLUMN2 S DESC=$P($T(@("A"_COLUMN2)),";",3)
"RTN","RCXFMSPR",69,0)
 ; HSIF reference disabled by patch 203
"RTN","RCXFMSPR",70,0)
 ; I RSC="8B1Z"!(RSC="8C1Z") S DESC=DESC_" (HSIF)"
"RTN","RCXFMSPR",71,0)
 I COLUMN2'=5 Q DESC
"RTN","RCXFMSPR",72,0)
 ;
"RTN","RCXFMSPR",73,0)
 S COLUMN3=$E(RSC,3)
"RTN","RCXFMSPR",74,0)
 ;  convert alpha letters to decimal
"RTN","RCXFMSPR",75,0)
 I "0123456789"'[COLUMN3 S COLUMN3=$A(COLUMN3)-55
"RTN","RCXFMSPR",76,0)
 S BINARY=$$CONVERT(COLUMN3)
"RTN","RCXFMSPR",77,0)
 S COL3DESC=$P($T(@("B"_$E(BINARY,1,2))),";",3)
"RTN","RCXFMSPR",78,0)
 S COL3DESC=COL3DESC_", "_$P($T(@("C"_$E(BINARY,3))),";",3)
"RTN","RCXFMSPR",79,0)
 S COL3DESC=COL3DESC_", "_$P($T(@("D"_$E(BINARY,4))),";",3)
"RTN","RCXFMSPR",80,0)
 S COL3DESC=COL3DESC_", "_$P($T(@("E"_$E(BINARY,5))),";",3)
"RTN","RCXFMSPR",81,0)
 Q "RHI, "_COL3DESC
"RTN","RCXFMSPR",82,0)
 ;
"RTN","RCXFMSPR",83,0)
 ;
"RTN","RCXFMSPR",84,0)
CONVERT(DECIMAL) ;  convert decimal number to binary (5 digits)
"RTN","RCXFMSPR",85,0)
 N Y
"RTN","RCXFMSPR",86,0)
 S Y=""
"RTN","RCXFMSPR",87,0)
 F  S Y=$E("0123456789ABCDEF",DECIMAL#2+1)_Y,DECIMAL=DECIMAL\2 Q:DECIMAL<1
"RTN","RCXFMSPR",88,0)
 S Y=$E("00000",0,5-$L(Y))_Y
"RTN","RCXFMSPR",89,0)
 Q Y
"RTN","RCXFMSPR",90,0)
 ;
"RTN","RCXFMSPR",91,0)
 ;
"RTN","RCXFMSPR",92,0)
WRITEIT ;  display the rsc
"RTN","RCXFMSPR",93,0)
 W !,COLUMN1,COLUMN2,COLUMN3,COLUMN4,?6,DESCRIP
"RTN","RCXFMSPR",94,0)
 I $Y>(IOSL-5) D:SCREEN PAUSE Q:$G(RCSTFLAG)  D H
"RTN","RCXFMSPR",95,0)
 Q
"RTN","RCXFMSPR",96,0)
 ;
"RTN","RCXFMSPR",97,0)
 ;
"RTN","RCXFMSPR",98,0)
PAUSE ;  pause at end of page
"RTN","RCXFMSPR",99,0)
 N X U IO(0) W !,"Press RETURN to continue, '^' to exit:" R X:DTIME S:'$T X="^" S:X["^" RCSTFLAG=1 U IO
"RTN","RCXFMSPR",100,0)
 Q
"RTN","RCXFMSPR",101,0)
 ;
"RTN","RCXFMSPR",102,0)
 ;
"RTN","RCXFMSPR",103,0)
H ;  header
"RTN","RCXFMSPR",104,0)
 S %=NOW_"  PAGE "_PAGE,PAGE=PAGE+1 I PAGE'=2!(SCREEN) W @IOF
"RTN","RCXFMSPR",105,0)
 W $C(13),"REVENUE SOURCE CODE REPORT (VISTA TO FMS)",?(80-$L(%)),%
"RTN","RCXFMSPR",106,0)
 W !,"RSC",?6,"Description"
"RTN","RCXFMSPR",107,0)
 S %="",$P(%,"-",81)=""
"RTN","RCXFMSPR",108,0)
 W !,%
"RTN","RCXFMSPR",109,0)
 Q
"RTN","RCXFMSPR",110,0)
 ;
"RTN","RCXFMSPR",111,0)
 ;
"RTN","RCXFMSPR",112,0)
 ;  this is a listing of all column2 values with a description
"RTN","RCXFMSPR",113,0)
A1 ;;Hospital Care (NSC)
"RTN","RCXFMSPR",114,0)
A2 ;;Outpatient Care (NSC)
"RTN","RCXFMSPR",115,0)
A3 ;;Nursing Home Care (NSC)
"RTN","RCXFMSPR",116,0)
A4 ;;Ineligible Hospitalization
"RTN","RCXFMSPR",117,0)
A5 ;;Reimbursable Health Insurance
"RTN","RCXFMSPR",118,0)
A6 ;;Tort Feasor
"RTN","RCXFMSPR",119,0)
A7 ;;Workmans Compensation (Non-Federal)
"RTN","RCXFMSPR",120,0)
A8 ;;C (Means Test)
"RTN","RCXFMSPR",121,0)
A9 ;;Emergency/Humanitarian
"RTN","RCXFMSPR",122,0)
AA ;;No Fault Auto Accident
"RTN","RCXFMSPR",123,0)
AB ;;Pharmacy Co-Pay (SC Vet)
"RTN","RCXFMSPR",124,0)
AC ;;Pharmacy Co-Pay (NSC Vet)
"RTN","RCXFMSPR",125,0)
AD ;;Nursing Home Care Per Diem
"RTN","RCXFMSPR",126,0)
AE ;;Hospital Care Per Diem
"RTN","RCXFMSPR",127,0)
AF ;;Medicare
"RTN","RCXFMSPR",128,0)
AG ;;Adult Day Health Care (LTC)
"RTN","RCXFMSPR",129,0)
AH ;;Domiciliary (LTC)
"RTN","RCXFMSPR",130,0)
AI ;;Respite Care-Institutional (LTC)
"RTN","RCXFMSPR",131,0)
AJ ;;Respite Care-Non-Institutional (LTC)
"RTN","RCXFMSPR",132,0)
AK ;;Geriatric Eval-Institutional (LTC)
"RTN","RCXFMSPR",133,0)
AL ;;Geriatric Eval-Non-Institutional (LTC)
"RTN","RCXFMSPR",134,0)
AM ;;Nursing Home Care-Long Term Care (LTC)
"RTN","RCXFMSPR",135,0)
AQ ;;Pharmacy No Fault Auto Acc
"RTN","RCXFMSPR",136,0)
AR ;;Pharmacy Reimburs Health Ins
"RTN","RCXFMSPR",137,0)
AS ;;Pharmacy Tort Feasor
"RTN","RCXFMSPR",138,0)
AT ;;Pharmacy Workman's Comp
"RTN","RCXFMSPR",139,0)
 ;
"RTN","RCXFMSPR",140,0)
 ;
"RTN","RCXFMSPR",141,0)
 ;  this is a listing for the type of care, first 2 binary digits
"RTN","RCXFMSPR",142,0)
 ;  if column2 is reimbursable health insurance
"RTN","RCXFMSPR",143,0)
B00 ;;Inpatient (Hosp)
"RTN","RCXFMSPR",144,0)
B01 ;;Outpatient
"RTN","RCXFMSPR",145,0)
B10 ;;Nursing Home
"RTN","RCXFMSPR",146,0)
B11 ;;Other
"RTN","RCXFMSPR",147,0)
 ;
"RTN","RCXFMSPR",148,0)
 ;
"RTN","RCXFMSPR",149,0)
 ;  this is a listing for the service connected, binary digit 3
"RTN","RCXFMSPR",150,0)
C0 ;;SC for NSC
"RTN","RCXFMSPR",151,0)
C1 ;;NSC Vet
"RTN","RCXFMSPR",152,0)
 ;
"RTN","RCXFMSPR",153,0)
 ;
"RTN","RCXFMSPR",154,0)
 ;  this is a listing for means test, binary digit 4
"RTN","RCXFMSPR",155,0)
D0 ;;MT Cat A
"RTN","RCXFMSPR",156,0)
D1 ;;MT Cat C
"RTN","RCXFMSPR",157,0)
 ;
"RTN","RCXFMSPR",158,0)
 ;
"RTN","RCXFMSPR",159,0)
 ;  this is a listing for age group, binary digit 5
"RTN","RCXFMSPR",160,0)
E0 ;;Age <65
"RTN","RCXFMSPR",161,0)
E1 ;;Age 65+
"RTN","RCXFMSSV")
0^3^B61841858^B57335503
"RTN","RCXFMSSV",1,0)
RCXFMSSV ;WISC/RFJ-fms standard voucher (sv) code sheet generator ; 9/7/10 7:43am
"RTN","RCXFMSSV",2,0)
 ;;4.5;Accounts Receivable;**96,101,135,139,98,156,170,191,203,220,138,184,239,273**;Mar 20, 1995;Build 3
"RTN","RCXFMSSV",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","RCXFMSSV",4,0)
 Q
"RTN","RCXFMSSV",5,0)
 ;
"RTN","RCXFMSSV",6,0)
 ;
"RTN","RCXFMSSV",7,0)
STARTSV(RCDATEND) ;  top entry point to generate a sv code sheet
"RTN","RCXFMSSV",8,0)
 ;
"RTN","RCXFMSSV",9,0)
 ;  rcdatend is the ending date of the period.
"RTN","RCXFMSSV",10,0)
 ;  This date is the 3rd work day from the end of the month.
"RTN","RCXFMSSV",11,0)
 ;  The utility $$LDATE^RCRJR is used to figure it out. It will
"RTN","RCXFMSSV",12,0)
 ;  change from month to month and figures in holidays also.
"RTN","RCXFMSSV",13,0)
 ;  For example,  if running the ARDC for the month of June 2003
"RTN","RCXFMSSV",14,0)
 ;  the EOAM will calculate out to be June 25, 2003.
"RTN","RCXFMSSV",15,0)
 ;  This is called by the background monthly data collector
"RTN","RCXFMSSV",16,0)
 ;
"RTN","RCXFMSSV",17,0)
 ;  data stored in tmp($j,rcrjrcolsv,type,fund,revsourcecode)
"RTN","RCXFMSSV",18,0)
 ;  this is called by the background monthly data collector
"RTN","RCXFMSSV",19,0)
 ;
"RTN","RCXFMSSV",20,0)
 N GECSDATA,RCTRANID,RESULT
"RTN","RCXFMSSV",21,0)
 ;  lookup fms document number to see if the monthly sv has been sent
"RTN","RCXFMSSV",22,0)
 ;  example rcdatend=3010531, lookup on 3010500
"RTN","RCXFMSSV",23,0)
 D KEYLOOK^GECSSGET("SV-"_$E(RCDATEND,1,5)_"00",1)
"RTN","RCXFMSSV",24,0)
 ;
"RTN","RCXFMSSV",25,0)
 ;  get the transacion id for the fms document
"RTN","RCXFMSSV",26,0)
 ;  if it is not sent, get the next number available
"RTN","RCXFMSSV",27,0)
 I $G(GECSDATA) S RCTRANID=$E($P(GECSDATA("2100.1",GECSDATA,".01","E"),"-",2),1,11)
"RTN","RCXFMSSV",28,0)
 I $G(RCTRANID)="" S RCTRANID=$$ENUM^RCMSNUM
"RTN","RCXFMSSV",29,0)
 I RCTRANID<0 Q  ;unable to retrieve the next number
"RTN","RCXFMSSV",30,0)
 ;  remove dash (example 460-K1A05HY)
"RTN","RCXFMSSV",31,0)
 S RCTRANID=$TR(RCTRANID,"-")
"RTN","RCXFMSSV",32,0)
 ;
"RTN","RCXFMSSV",33,0)
 ;  build and send the sv document to fms
"RTN","RCXFMSSV",34,0)
 S RESULT=$$BUILDSV(RCDATEND,+$G(GECSDATA),RCTRANID,"00")
"RTN","RCXFMSSV",35,0)
 ;  error in building code sheet
"RTN","RCXFMSSV",36,0)
 I 'RESULT Q
"RTN","RCXFMSSV",37,0)
 ;
"RTN","RCXFMSSV",38,0)
 ;  add/update entry in file 347 for reports
"RTN","RCXFMSSV",39,0)
 N %DT,%X,D,D0,DA347,DI,DQ,DIC,ERROR
"RTN","RCXFMSSV",40,0)
 S DA347=$O(^RC(347,"C",$P(RESULT,"^",2),0))
"RTN","RCXFMSSV",41,0)
 ;  if not in the file, addit   fmsdocid   sv   id
"RTN","RCXFMSSV",42,0)
 I 'DA347 D OPEN^RCFMDRV1($P(RESULT,"^",2),4,"SV-"_$E(RCDATEND,1,5)_"00",.DA347,.ERROR)
"RTN","RCXFMSSV",43,0)
 I DA347 D SSTAT^RCFMFN02($P(RESULT,"^",2),1)
"RTN","RCXFMSSV",44,0)
 Q
"RTN","RCXFMSSV",45,0)
 ;
"RTN","RCXFMSSV",46,0)
 ;
"RTN","RCXFMSSV",47,0)
BUILDSV(RCDATEND,RCGECSDA,RCTRANID,RCKS) ;  generate a wr code sheet for monthly data
"RTN","RCXFMSSV",48,0)
 ;  rcgecsda is the ien for the gcs stack file 2100.1 for rebuilds
"RTN","RCXFMSSV",49,0)
 ;  data stored in tmp($j,rcrjrcolsv)
"RTN","RCXFMSSV",50,0)
 ;  rcks is the "key suffix" to distinguish the gecs lookup key
"RTN","RCXFMSSV",51,0)
 ;   for the SRB SV from the lookup key for the BDR SV
"RTN","RCXFMSSV",52,0)
 ;
"RTN","RCXFMSSV",53,0)
 N AMOUNT,COUNT,DESCRIP,DOCTOTAL,FISCALYR,FMSLINE,FUND,FY,GECSFMS,MONTH,REVDATE,REVFY,REVMONTH,RSC,SV2,TYPE,FMAMOUNT
"RTN","RCXFMSSV",54,0)
 ;
"RTN","RCXFMSSV",55,0)
 S FISCALYR=$$FY^RCFN01(RCDATEND)
"RTN","RCXFMSSV",56,0)
 ;
"RTN","RCXFMSSV",57,0)
 S COUNT=0,DOCTOTAL=0
"RTN","RCXFMSSV",58,0)
 S TYPE="" F  S TYPE=$O(^TMP($J,"RCRJRCOLSV",TYPE)) Q:TYPE=""  D
"RTN","RCXFMSSV",59,0)
 . S FUND="" F  S FUND=$O(^TMP($J,"RCRJRCOLSV",TYPE,FUND)) Q:FUND=""  D
"RTN","RCXFMSSV",60,0)
 . . S RSC="" F  S RSC=$O(^TMP($J,"RCRJRCOLSV",TYPE,FUND,RSC)) Q:RSC=""  D
"RTN","RCXFMSSV",61,0)
 . . . S AMOUNT=^TMP($J,"RCRJRCOLSV",TYPE,FUND,RSC),DOCTOTAL=DOCTOTAL+AMOUNT
"RTN","RCXFMSSV",62,0)
 . . . I +AMOUNT=0 Q
"RTN","RCXFMSSV",63,0)
 . . . S COUNT=COUNT+1
"RTN","RCXFMSSV",64,0)
 . . . S FMSLINE(COUNT)="LIN^~SVA^"_$S($L(COUNT)=1:"00",$L(COUNT)=2:"0",1:"")_COUNT
"RTN","RCXFMSSV",65,0)
 . . . S $P(FMSLINE(COUNT),"^",4)=TYPE
"RTN","RCXFMSSV",66,0)
 . . . S $P(FMSLINE(COUNT),"^",5)=FISCALYR ;begin fy
"RTN","RCXFMSSV",67,0)
 . . . I $E(FUND,1,4)=5287 S $P(FMSLINE(COUNT),"^",5)="05"
"RTN","RCXFMSSV",68,0)
 . . . S $P(FMSLINE(COUNT),"^",7)=FUND
"RTN","RCXFMSSV",69,0)
 . . . S $P(FMSLINE(COUNT),"^",9)=$E(RCTRANID,1,3)  ;site number
"RTN","RCXFMSSV",70,0)
 . . . ;  for transaction types 23,27,2B the RSC is 0, send null
"RTN","RCXFMSSV",71,0)
 . . . S $P(FMSLINE(COUNT),"^",14)=$S(RSC=0:"",1:RSC)
"RTN","RCXFMSSV",72,0)
 . . . ;
"RTN","RCXFMSSV",73,0)
 . . . ;  vendor id
"RTN","RCXFMSSV",74,0)
 . . . S $P(FMSLINE(COUNT),"^",18)="MCCFVALUE"
"RTN","RCXFMSSV",75,0)
 . . . ;  for transaction type P2, send vendorid of PERSONOTH
"RTN","RCXFMSSV",76,0)
 . . . I TYPE="P2" S $P(FMSLINE(COUNT),"^",18)="PERSONOTH"
"RTN","RCXFMSSV",77,0)
 . . . ;  if it is hsif fund 5358.1, send vendorid of HSIFVALUE
"RTN","RCXFMSSV",78,0)
 . . . I FUND=5358.1 S $P(FMSLINE(COUNT),"^",18)="HSIFVALUE"
"RTN","RCXFMSSV",79,0)
 . . . ;  if it is ltc fund 4032 or 528709, send vendorid of EXCFVALUE
"RTN","RCXFMSSV",80,0)
 . . . I FUND=4032!(FUND=528709) D
"RTN","RCXFMSSV",81,0)
 . . . . S $P(FMSLINE(COUNT),"^",18)="EXCFVALUE"
"RTN","RCXFMSSV",82,0)
 . . . . S:FUND=4032 $P(FMSLINE(COUNT),"^",5)="03" ; FY
"RTN","RCXFMSSV",83,0)
 . . . . S:$E(FUND,1,4)=5287 $P(FMSLINE(COUNT),"^",5)="05" ; FY
"RTN","RCXFMSSV",84,0)
 . . . ;
"RTN","RCXFMSSV",85,0)
 . . . ;  send pos figure to FMS; neg amt requires a "D"
"RTN","RCXFMSSV",86,0)
 . . . S FMAMOUNT=$S(AMOUNT<0:-AMOUNT,1:AMOUNT)
"RTN","RCXFMSSV",87,0)
 . . . S $P(FMSLINE(COUNT),"^",19)="~SVB"
"RTN","RCXFMSSV",88,0)
 . . . S $P(FMSLINE(COUNT),"^",20)=$J(FMAMOUNT,0,2)
"RTN","RCXFMSSV",89,0)
 . . . S $P(FMSLINE(COUNT),"^",21)=$S(AMOUNT<0:"D",1:"I")
"RTN","RCXFMSSV",90,0)
 . . . ;  for transaction types 23,27,2B the RSC is 0, send G
"RTN","RCXFMSSV",91,0)
 . . . S $P(FMSLINE(COUNT),"^",23)=$S(RSC=0:"G",1:"R")
"RTN","RCXFMSSV",92,0)
 . . . S $P(FMSLINE(COUNT),"^",25)=$E(RCDATEND,2,3)
"RTN","RCXFMSSV",93,0)
 . . . S $P(FMSLINE(COUNT),"^",26)=$E(RCDATEND,4,5)
"RTN","RCXFMSSV",94,0)
 . . . S $P(FMSLINE(COUNT),"^",27)=$E(RCDATEND,6,7)
"RTN","RCXFMSSV",95,0)
 . . . S $P(FMSLINE(COUNT),"^",28)="~"
"RTN","RCXFMSSV",96,0)
 ;
"RTN","RCXFMSSV",97,0)
 ;  no code sheets to send
"RTN","RCXFMSSV",98,0)
 I COUNT=0 Q "0^No sv code sheets to send for this month"
"RTN","RCXFMSSV",99,0)
 ;
"RTN","RCXFMSSV",100,0)
 ;  calculate the accounting month and fy
"RTN","RCXFMSSV",101,0)
 S FY=$E(RCDATEND,2,3) I $E(RCDATEND,4,5)>9 S FY=FY+1 I FY=100 S FY="00"
"RTN","RCXFMSSV",102,0)
 I $L(FY)=1 S FY="0"_FY
"RTN","RCXFMSSV",103,0)
 S MONTH=$P("04^05^06^07^08^09^10^11^12^01^02^03","^",$E(RCDATEND,4,5))
"RTN","RCXFMSSV",104,0)
 ;  calculate the reversal month and fy (next month, add 1 day)
"RTN","RCXFMSSV",105,0)
 S REVDATE=$$FMADD^XLFDT(RCDATEND,9)
"RTN","RCXFMSSV",106,0)
 S REVFY=$E(REVDATE,2,3) I $E(REVDATE,4,5)>9 S REVFY=REVFY+1 I REVFY=100 S REVFY="00"
"RTN","RCXFMSSV",107,0)
 I $L(REVFY)=1 S REVFY="0"_REVFY
"RTN","RCXFMSSV",108,0)
 S REVMONTH=$P("04^05^06^07^08^09^10^11^12^01^02^03","^",$E(REVDATE,4,5))
"RTN","RCXFMSSV",109,0)
 ;
"RTN","RCXFMSSV",110,0)
 S SV2="SV2^"_$E(RCDATEND,2,3)_"^"_$E(RCDATEND,4,5)_"^"_$E(RCDATEND,6,7)
"RTN","RCXFMSSV",111,0)
 S $P(SV2,"^",5)=MONTH         ;accounting period month
"RTN","RCXFMSSV",112,0)
 S $P(SV2,"^",6)=FY            ;accounting period year
"RTN","RCXFMSSV",113,0)
 S $P(SV2,"^",7)="E"
"RTN","RCXFMSSV",114,0)
 S $P(SV2,"^",12)=REVFY        ;reversal period year
"RTN","RCXFMSSV",115,0)
 S $P(SV2,"^",13)=REVMONTH     ;reversal period month
"RTN","RCXFMSSV",116,0)
 S:DOCTOTAL<0 DOCTOTAL=-DOCTOTAL ; document total must be positive
"RTN","RCXFMSSV",117,0)
 S $P(SV2,"^",16)=$J(DOCTOTAL,0,2)_"^~"
"RTN","RCXFMSSV",118,0)
 ;
"RTN","RCXFMSSV",119,0)
 ;  put together document in gcs
"RTN","RCXFMSSV",120,0)
 N %DT,D0,DA,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RCXFMSSV",121,0)
 S Y=$E(RCDATEND,1,5)_"00" D DD^%DT
"RTN","RCXFMSSV",122,0)
 S DESCRIP="Monthly Standard Voucher for "_Y
"RTN","RCXFMSSV",123,0)
 I 'RCGECSDA D CONTROL^GECSUFMS("A",$E(RCTRANID,1,3),RCTRANID,"SV",10,0,"",DESCRIP)
"RTN","RCXFMSSV",124,0)
 I RCGECSDA D REBUILD^GECSUFM1(RCGECSDA,"A",10,"","Rebuild "_DESCRIP) S GECSFMS("DA")=RCGECSDA
"RTN","RCXFMSSV",125,0)
 ;
"RTN","RCXFMSSV",126,0)
 ;  store document in gcs
"RTN","RCXFMSSV",127,0)
 D SETCS^GECSSTAA(GECSFMS("DA"),SV2)
"RTN","RCXFMSSV",128,0)
 F COUNT=1:1 Q:'$D(FMSLINE(COUNT))  D SETCS^GECSSTAA(GECSFMS("DA"),FMSLINE(COUNT))
"RTN","RCXFMSSV",129,0)
 D SETCODE^GECSSDCT(GECSFMS("DA"),"D RETN^RCFMFN02")
"RTN","RCXFMSSV",130,0)
 D SETSTAT^GECSSTAA(GECSFMS("DA"),"Q")
"RTN","RCXFMSSV",131,0)
 ;  set the key for lookup
"RTN","RCXFMSSV",132,0)
 D SETKEY^GECSSTAA(GECSFMS("DA"),"SV-"_$E(RCDATEND,1,5)_RCKS)
"RTN","RCXFMSSV",133,0)
 ;
"RTN","RCXFMSSV",134,0)
 ;  return 1 for success ^ fms document transaction number
"RTN","RCXFMSSV",135,0)
 Q "1^SV-"_$P(GECSFMS("CTL"),"^",9)
"RTN","RCXFMSSV",136,0)
 ;
"RTN","RCXFMSSV",137,0)
 ;
"RTN","RCXFMSSV",138,0)
BADDEBT(RCRJDATE) ;  top entry point to generate a sv code sheet
"RTN","RCXFMSSV",139,0)
 ;  for the bad debt report, transaction types 23, 27, 2B and 2J.
"RTN","RCXFMSSV",140,0)
 ;  The fms document number in file 347 is SV-$e(dateend,1,5)_"01"
"RTN","RCXFMSSV",141,0)
 ;
"RTN","RCXFMSSV",142,0)
 ;  Input:  RCRJDATE  -- last day of accounting month
"RTN","RCXFMSSV",143,0)
 ;
"RTN","RCXFMSSV",144,0)
 N DATA1319,DATA1338,DATA1339,DATA4032,DATAHSIF,GECSDATA,RESULT,RCRJFMM,RCRJFXSV,RCTRANID,X,RCNOHSIF,LTCFUND,DATA133M,DATA133T
"RTN","RCXFMSSV",145,0)
 N DATA133N,DATA133Q,DATA133R,DATA133S
"RTN","RCXFMSSV",146,0)
 ;
"RTN","RCXFMSSV",147,0)
 S RCNOHSIF=$$NOHSIF^RCRJRCO() ; disabled HSIF
"RTN","RCXFMSSV",148,0)
 ;
"RTN","RCXFMSSV",149,0)
 ;  lock cannot fail
"RTN","RCXFMSSV",150,0)
 L +^RC(348.1)
"RTN","RCXFMSSV",151,0)
 ;
"RTN","RCXFMSSV",152,0)
 ;  get the data from the bad debt allowance file 348.1
"RTN","RCXFMSSV",153,0)
 K ^TMP($J,"RCRJRCOLSV")
"RTN","RCXFMSSV",154,0)
 S DATA1319=$G(^RC(348.1,+$O(^RC(348.1,"B",1319,0)),0))
"RTN","RCXFMSSV",155,0)
 S DATA1338=$G(^RC(348.1,+$O(^RC(348.1,"B",1338,0)),0))
"RTN","RCXFMSSV",156,0)
 S DATA1339=$G(^RC(348.1,+$O(^RC(348.1,"B",1339,0)),0))
"RTN","RCXFMSSV",157,0)
 S DATA133N=$G(^RC(348.1,+$O(^RC(348.1,"B","133N",0)),0))
"RTN","RCXFMSSV",158,0)
 I 'RCNOHSIF S DATAHSIF=$G(^RC(348.1,+$O(^RC(348.1,"B",1319.1,0)),0))
"RTN","RCXFMSSV",159,0)
 S DATA4032=$G(^RC(348.1,+$O(^RC(348.1,"B",1319.2,0)),0))
"RTN","RCXFMSSV",160,0)
 S DATA133M=$G(^RC(348.1,+$O(^RC(348.1,"B",1319.3,0)),0))
"RTN","RCXFMSSV",161,0)
 S DATA133T=$G(^RC(348.1,+$O(^RC(348.1,"B",1319.4,0)),0))
"RTN","RCXFMSSV",162,0)
 S DATA133Q=$G(^RC(348.1,+$O(^RC(348.1,"B",1319.5,0)),0))
"RTN","RCXFMSSV",163,0)
 S DATA133R=$G(^RC(348.1,+$O(^RC(348.1,"B","133N.2",0)),0))
"RTN","RCXFMSSV",164,0)
 S DATA133S=$G(^RC(348.1,+$O(^RC(348.1,"B",1338.2,0)),0))
"RTN","RCXFMSSV",165,0)
 ;
"RTN","RCXFMSSV",166,0)
 ; the revenue source code here is a 0
"RTN","RCXFMSSV",167,0)
 S ^TMP($J,"RCRJRCOLSV","23",$$ADJFUND^RCRJRCO($S(DT<$$ADDPTEDT^PRCAACC():5287.3,1:528703)),0)=$P(DATA1319,"^",8)
"RTN","RCXFMSSV",168,0)
 I 'RCNOHSIF S ^TMP($J,"RCRJRCOLSV","23",5358.1,0)=$P(DATAHSIF,"^",8)
"RTN","RCXFMSSV",169,0)
 ;patch 220 replaces 4032 fund with 528709
"RTN","RCXFMSSV",170,0)
 S LTCFUND=$S(DT'<$$ADDPTEDT^PRCAACC():528709,1:4032)
"RTN","RCXFMSSV",171,0)
 S ^TMP($J,"RCRJRCOLSV","23",LTCFUND,0)=$P(DATA4032,"^",8)
"RTN","RCXFMSSV",172,0)
 S ^TMP($J,"RCRJRCOLSV","23",528701,0)=$P(DATA133M,"^",8)
"RTN","RCXFMSSV",173,0)
 S ^TMP($J,"RCRJRCOLSV","23",528704,0)=$P(DATA133T,"^",8)
"RTN","RCXFMSSV",174,0)
 S ^TMP($J,"RCRJRCOLSV","23",528711,0)=$P(DATA133Q,"^",8)
"RTN","RCXFMSSV",175,0)
 S ^TMP($J,"RCRJRCOLSV","2J",528711,0)=$P(DATA133R,"^",8)
"RTN","RCXFMSSV",176,0)
 S ^TMP($J,"RCRJRCOLSV","2B",528711,0)=$P(DATA133S,"^",8)
"RTN","RCXFMSSV",177,0)
 ;
"RTN","RCXFMSSV",178,0)
 S ^TMP($J,"RCRJRCOLSV","2B",$$ADJFUND^RCRJRCO($S(DT<$$ADDPTEDT^PRCAACC():5287.4,1:528704)),0)=$P(DATA1338,"^",8)
"RTN","RCXFMSSV",179,0)
 S ^TMP($J,"RCRJRCOLSV","27",$$ADJFUND^RCRJRCO($S(DT<$$ADDPTEDT^PRCAACC():5287.4,1:528704)),0)=$P(DATA1339,"^",8)
"RTN","RCXFMSSV",180,0)
 ; post-MRA non-Medicare bills
"RTN","RCXFMSSV",181,0)
 S ^TMP($J,"RCRJRCOLSV","2J",$$ADJFUND^RCRJRCO($S(DT<$$ADDPTEDT^PRCAACC():5287.4,1:528704)),0)=$P(DATA133N,"^",8)
"RTN","RCXFMSSV",182,0)
 ;
"RTN","RCXFMSSV",183,0)
 ;  the date is for previous month
"RTN","RCXFMSSV",184,0)
 ;S RCRJDATE=$$PREVMONT^RCRJRBD(DT)
"RTN","RCXFMSSV",185,0)
 ;I $E(DT,6,7)<$E($$LDATE^RCRJR(DT),6,7) S RCRJDATE=$$PREVMONT^RCRJRBD(DT)
"RTN","RCXFMSSV",186,0)
 ;I $E(DT,6,7)>$E($$LDATE^RCRJR(DT),6,7) S RCRJDATE=$E($$LDATE^RCRJR(DT),1,5)_"00"
"RTN","RCXFMSSV",187,0)
 ;I $E(DT,6,7)>$E($$LDATE^RCRJR(DT),6,7) S RCRJDATE=$$LDATE^RCRJR(DT)
"RTN","RCXFMSSV",188,0)
 ;  find the last day of the month for the end date
"RTN","RCXFMSSV",189,0)
 ;S RCRJDATE=$E(RCRJDATE,1,5)_$P("31^28^31^30^31^30^31^31^30^31^30^31","^",+$E(RCRJDATE,4,5))
"RTN","RCXFMSSV",190,0)
 ;I $E(RCRJDATE,6,7)=28,$E(RCRJDATE,2,3)#4=0 S RCRJDATE=$E(RCRJDATE,1,5)_"29"
"RTN","RCXFMSSV",191,0)
 ;
"RTN","RCXFMSSV",192,0)
 ;  lookup fms document number to see if the monthly sv has been sent
"RTN","RCXFMSSV",193,0)
 ;  example rcdatend=3010531, lookup on 3010501
"RTN","RCXFMSSV",194,0)
 D KEYLOOK^GECSSGET("SV-"_$E(RCRJDATE,1,5)_"01",1)
"RTN","RCXFMSSV",195,0)
 ;
"RTN","RCXFMSSV",196,0)
 ;  get the transacion id for the fms document
"RTN","RCXFMSSV",197,0)
 ;  if it is not sent, get the next number available
"RTN","RCXFMSSV",198,0)
 I $G(GECSDATA) S RCTRANID=$E($P(GECSDATA("2100.1",GECSDATA,".01","E"),"-",2),1,11)
"RTN","RCXFMSSV",199,0)
 I $G(RCTRANID)="" S RCTRANID=$$ENUM^RCMSNUM
"RTN","RCXFMSSV",200,0)
 I RCTRANID<0 Q  ;unable to retrieve the next number
"RTN","RCXFMSSV",201,0)
 ;  remove dash (example 460-K1A05HY)
"RTN","RCXFMSSV",202,0)
 S RCTRANID=$TR(RCTRANID,"-")
"RTN","RCXFMSSV",203,0)
 ;
"RTN","RCXFMSSV",204,0)
 ;  build and send the sv document to fms
"RTN","RCXFMSSV",205,0)
 S RESULT=$$BUILDSV(RCRJDATE,+$G(GECSDATA),RCTRANID,"01")
"RTN","RCXFMSSV",206,0)
 K ^TMP($J,"RCRJRCOLSV")
"RTN","RCXFMSSV",207,0)
 ;  error in building code sheet
"RTN","RCXFMSSV",208,0)
 I 'RESULT D Q Q
"RTN","RCXFMSSV",209,0)
 ;
"RTN","RCXFMSSV",210,0)
 ;  add/update entry in file 347 for reports
"RTN","RCXFMSSV",211,0)
 N %DT,%X,D,D0,DA347,DI,DQ,DIC,ERROR
"RTN","RCXFMSSV",212,0)
 S DA347=$O(^RC(347,"D","SV-"_$E(RCRJDATE,1,5)_"01",0))
"RTN","RCXFMSSV",213,0)
 ;  if not in the file, addit   fmsdocid   sv   id
"RTN","RCXFMSSV",214,0)
 I 'DA347 D OPEN^RCFMDRV1($P(RESULT,"^",2),4,"SV-"_$E(RCRJDATE,1,5)_"01",.DA347,.ERROR)
"RTN","RCXFMSSV",215,0)
 I DA347 D SSTAT^RCFMFN02($P(RESULT,"^",2),1)
"RTN","RCXFMSSV",216,0)
 ;
"RTN","RCXFMSSV",217,0)
Q ;  jump here to finish
"RTN","RCXFMSSV",218,0)
 ;  generate bad debt report
"RTN","RCXFMSSV",219,0)
 S RCRJFXSV=$P(RESULT,"^",2),RCRJFMM=1 D DQ^RCRJRBDR
"RTN","RCXFMSSV",220,0)
 L -^RC(348.1)
"RTN","RCXFMSSV",221,0)
 Q
"RTN","RCXFMSUF")
0^7^B36597164^B31990259
"RTN","RCXFMSUF",1,0)
RCXFMSUF ;WISC/RFJ-calculate fms fund code for a bill ; 10/20/10 10:37am
"RTN","RCXFMSUF",2,0)
 ;;4.5;Accounts Receivable;**90,101,135,157,160,165,170,203,207,173,211,192,220,235,273**;Mar 20, 1995;Build 3
"RTN","RCXFMSUF",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","RCXFMSUF",4,0)
 Q
"RTN","RCXFMSUF",5,0)
 ;
"RTN","RCXFMSUF",6,0)
 ;
"RTN","RCXFMSUF",7,0)
GETFUNDO(TYPE) ;  return the fund for other type associated collections
"RTN","RCXFMSUF",8,0)
 ;  type can equal:
"RTN","RCXFMSUF",9,0)
 ;  I for interest         A for admin
"RTN","RCXFMSUF",10,0)
 ;  M for marshall fee     C for court cost
"RTN","RCXFMSUF",11,0)
 I TYPE="I" Q "1435"
"RTN","RCXFMSUF",12,0)
 I TYPE="A" Q "3220"
"RTN","RCXFMSUF",13,0)
 I TYPE="M" Q "0869"
"RTN","RCXFMSUF",14,0)
 I TYPE="C" Q "0869"
"RTN","RCXFMSUF",15,0)
 Q ""
"RTN","RCXFMSUF",16,0)
 ;
"RTN","RCXFMSUF",17,0)
 ;
"RTN","RCXFMSUF",18,0)
GETFUNDB(BILLDA,DONTSTOR,RCEFT) ;  return a bills fms fund code
"RTN","RCXFMSUF",19,0)
 ;  pass DONTSTOR equal 1 to prevent storing the fund code
"RTN","RCXFMSUF",20,0)
 ;  cannot rely on data in the fund field since it may reference the
"RTN","RCXFMSUF",21,0)
 ;  old funds S FUND=$P($G(^PRCA(430,BILLDA,11)),"^",17).  since there
"RTN","RCXFMSUF",22,0)
 ;  are reports which use 11;17, set it for a bill once its computed
"RTN","RCXFMSUF",23,0)
 ;  until all references to the fund are eliminated.
"RTN","RCXFMSUF",24,0)
 ;  rceft = 1 if processing an EFT deposit
"RTN","RCXFMSUF",25,0)
 ;
"RTN","RCXFMSUF",26,0)
 N ACTDATE,CATEGDA,FUND,NEWFUND
"RTN","RCXFMSUF",27,0)
 ;
"RTN","RCXFMSUF",28,0)
 ;  calculate a bills fund
"RTN","RCXFMSUF",29,0)
 I $G(RCEFT)=1 S FUND="5287"_$S(DT<3030926:"",DT'<3030926&(DT<$$ADDPTEDT^PRCAACC()):".4",1:"04") Q FUND
"RTN","RCXFMSUF",30,0)
 S CATEGDA=+$P($G(^PRCA(430,BILLDA,0)),"^",2)
"RTN","RCXFMSUF",31,0)
 I CATEGDA>44 Q ""
"RTN","RCXFMSUF",32,0)
 ;
"RTN","RCXFMSUF",33,0)
 ;  piece 5 is new fund, remove spaces
"RTN","RCXFMSUF",34,0)
 S FUND=$P($TR($T(@CATEGDA)," "),";",5)
"RTN","RCXFMSUF",35,0)
 ;
"RTN","RCXFMSUF",36,0)
 ;  set fund 528711 for 3rd party RX bills after 4/27/2011
"RTN","RCXFMSUF",37,0)
 I $$TYP^IBRFN(BILLDA)="PH" D
"RTN","RCXFMSUF",38,0)
 . I (CATEGDA=6)!(CATEGDA=7)!(CATEGDA=9)!(CATEGDA=10),$$CHECKRXS(BILLDA) S FUND=528711
"RTN","RCXFMSUF",39,0)
 ;
"RTN","RCXFMSUF",40,0)
 ;  if category is vendor(17), ex-employee(15), current employee(16)
"RTN","RCXFMSUF",41,0)
 ;  federal agency refund(13), federal agency reimb(14), military(12)
"RTN","RCXFMSUF",42,0)
 ;  set the fund to what is stored in the file.  This was entered
"RTN","RCXFMSUF",43,0)
 ;  by the user during the audit process.  If fund is in the file
"RTN","RCXFMSUF",44,0)
 ;  already, do not need to store it again.
"RTN","RCXFMSUF",45,0)
 ;  if category is nursing home proceeds (40), parking fees (41),
"RTN","RCXFMSUF",46,0)
 ;  cwt proceeds (42), comp & pen proceeds (43), enhanced use lease
"RTN","RCXFMSUF",47,0)
 ;  proceeds (44), set the fund to what is stored in the file.
"RTN","RCXFMSUF",48,0)
 ;  This was generated by the software at the time of bill enter.
"RTN","RCXFMSUF",49,0)
 I CATEGDA=17!(CATEGDA=15)!(CATEGDA=16)!(CATEGDA=13)!(CATEGDA=14)!(CATEGDA=12)!(CATEGDA=40)!(CATEGDA=41)!(CATEGDA=42)!(CATEGDA=43)!(CATEGDA=44) D
"RTN","RCXFMSUF",50,0)
 .   I $P($G(^PRCA(430,BILLDA,11)),"^",17)'="" S FUND=$P(^(11),"^",17),DONTSTOR=1
"RTN","RCXFMSUF",51,0)
 ;
"RTN","RCXFMSUF",52,0)
 ;  public law states that bills in the category ineligible (1),
"RTN","RCXFMSUF",53,0)
 ;  emerg/human (2), torts (10), or medicare (21) which are older 
"RTN","RCXFMSUF",54,0)
 ;  than oct 1, 1992 should be reported under fund 3220.
"RTN","RCXFMSUF",55,0)
 I CATEGDA=1!(CATEGDA=2)!(CATEGDA=10)!(CATEGDA=21) D
"RTN","RCXFMSUF",56,0)
 .   S ACTDATE=$P($G(^PRCA(430,BILLDA,6)),"^",21)
"RTN","RCXFMSUF",57,0)
 .   I ACTDATE,ACTDATE<2921001 S FUND=3220 Q
"RTN","RCXFMSUF",58,0)
 .   ;
"RTN","RCXFMSUF",59,0)
 .   ;  patch157 changes ineligibles.  an ineligible activated before
"RTN","RCXFMSUF",60,0)
 .   ;  oct 1, 1992 or after sep 30, 2000 will be recorded in fund 0160A1.
"RTN","RCXFMSUF",61,0)
 .   ;  otherwise it will be recorded in fund 5287.3 if before 3040928
"RTN","RCXFMSUF",62,0)
 .   ; if 3040928 or after,  fund should be 528703
"RTN","RCXFMSUF",63,0)
 .   I CATEGDA=1,ACTDATE,ACTDATE<3001001 S FUND=$S(DT<$$ADDPTEDT^PRCAACC():"5287.3",1:528703)
"RTN","RCXFMSUF",64,0)
 ;
"RTN","RCXFMSUF",65,0)
 ;  set the fund for the bill
"RTN","RCXFMSUF",66,0)
 I $G(DONTSTOR)'=1 D STORE^RCXFMSUR(BILLDA,"",FUND)
"RTN","RCXFMSUF",67,0)
 ; 
"RTN","RCXFMSUF",68,0)
 I FUND>528704,FUND<528709!(FUND=528710)!(FUND=528711) Q FUND
"RTN","RCXFMSUF",69,0)
 ;
"RTN","RCXFMSUF",70,0)
 I $G(REPRODT),REPRODT<3030926,$E(FUND,1,4)=5287 Q 5287
"RTN","RCXFMSUF",71,0)
 I $G(REPRODT),REPRODT<3031001,$E(FUND,1,4)=5287,$G(REFMS) Q 5287
"RTN","RCXFMSUF",72,0)
 I DT<3030926,$E(FUND,1,4)=5287 Q 5287 ; Effective date
"RTN","RCXFMSUF",73,0)
 I $G(REPRODT),REPRODT<$$ADDPTEDT^PRCAACC(),FUND=528709 Q 4032 ;Effective date-528709
"RTN","RCXFMSUF",74,0)
 I $G(REPRODT),REPRODT<3041001,FUND=528709,$G(REFMS) Q 4032 ;Resubmitted documents not held
"RTN","RCXFMSUF",75,0)
 I $G(DATEEND),$E(DATEEND,2,5)<"0410",FUND=528709 Q 4032
"RTN","RCXFMSUF",76,0)
 I DT<$$ADDPTEDT^PRCAACC(),FUND=528709 Q 4032
"RTN","RCXFMSUF",77,0)
 I $G(REPRODT),REPRODT<$$ADDPTEDT^PRCAACC(),FUND=528701 Q 5287.1 ;Effective date-528701
"RTN","RCXFMSUF",78,0)
 I $G(REPRODT),REPRODT<3041001,FUND=528701,$G(REFMS) Q 5287.1 ;Resubmitted documents not held
"RTN","RCXFMSUF",79,0)
 I $G(DATEEND),$E(DATEEND,2,5)<"0410",FUND=528701 Q 5287.1
"RTN","RCXFMSUF",80,0)
 I DT<$$ADDPTEDT^PRCAACC(),FUND=528701 Q 5287.1
"RTN","RCXFMSUF",81,0)
 I $G(REPRODT),REPRODT<$$ADDPTEDT^PRCAACC(),FUND=528703 Q 5287.3 ;Effective date-528703
"RTN","RCXFMSUF",82,0)
 I $G(REPRODT),REPRODT<3041001,FUND=528703,$G(REFMS) Q 5287.3 ;Resubmitted documents not held
"RTN","RCXFMSUF",83,0)
 I $G(DATEEND),$E(DATEEND,2,5)<"0410",FUND=528703 Q 5287.3
"RTN","RCXFMSUF",84,0)
 I DT<$$ADDPTEDT^PRCAACC(),FUND=528703 Q 5287.3
"RTN","RCXFMSUF",85,0)
 I $G(REPRODT),REPRODT<$$ADDPTEDT^PRCAACC(),FUND=528704 Q 5287.4 ;Effective date-528704
"RTN","RCXFMSUF",86,0)
 I $G(REPRODT),REPRODT<3041001,FUND=528704,$G(REFMS) Q 5287.4 ;Resubmitted documents not held
"RTN","RCXFMSUF",87,0)
 I $G(DATEEND),$E(DATEEND,2,5)<"0410",FUND=528704 Q 5287.4
"RTN","RCXFMSUF",88,0)
 I DT<$$ADDPTEDT^PRCAACC(),FUND=528704 Q 5287.4
"RTN","RCXFMSUF",89,0)
 Q FUND
"RTN","RCXFMSUF",90,0)
 ;
"RTN","RCXFMSUF",91,0)
CHECKRXS(BILLDA) ; returns true (1) if bill has any scripts on or after 4/27/11
"RTN","RCXFMSUF",92,0)
 N RXNUM,NEWFUND,FILLDT,ARRXS
"RTN","RCXFMSUF",93,0)
 S NEWFUND=0
"RTN","RCXFMSUF",94,0)
 D SET^IBCSC5A(BILLDA,.ARRXS,)
"RTN","RCXFMSUF",95,0)
 S RXNUM=0,FILLDT=""
"RTN","RCXFMSUF",96,0)
 F  S RXNUM=$O(ARRXS(RXNUM)) Q:RXNUM'>0!(NEWFUND)  D
"RTN","RCXFMSUF",97,0)
 .  S FILLDT=$O(ARRXS(RXNUM,0))
"RTN","RCXFMSUF",98,0)
 .  I FILLDT'<3110427 S NEWFUND=1
"RTN","RCXFMSUF",99,0)
 Q NEWFUND
"RTN","RCXFMSUF",100,0)
 ;
"RTN","RCXFMSUF",101,0)
 ;  this is a listing of all categories and associated funds
"RTN","RCXFMSUF",102,0)
 ;  the label is from the internal entry number in the category
"RTN","RCXFMSUF",103,0)
 ;  file 430.2.  piece 3 is a description, piece 4 is the old fund,
"RTN","RCXFMSUF",104,0)
 ;  piece 5 is the new fund
"RTN","RCXFMSUF",105,0)
0 ;;no fund                       ;       ;    
"RTN","RCXFMSUF",106,0)
1 ;;INELIGIBLE HOSP.              ;3220   ;0160A1
"RTN","RCXFMSUF",107,0)
2 ;;EMERGENCY/HUMANITARIAN        ;0160A1 ;528703
"RTN","RCXFMSUF",108,0)
3 ;;NURSING HOME CARE(NSC)        ;2431   ;528703
"RTN","RCXFMSUF",109,0)
4 ;;OUTPATIENT CARE(NSC)          ;2431   ;528703
"RTN","RCXFMSUF",110,0)
5 ;;HOSPITAL CARE (NSC)           ;2431   ;528703
"RTN","RCXFMSUF",111,0)
6 ;;WORKMAN'S COMP.               ;5014   ;528704
"RTN","RCXFMSUF",112,0)
7 ;;NO-FAULT AUTO ACC.            ;5014   ;528704
"RTN","RCXFMSUF",113,0)
8 ;;CRIME OF PER.VIO.             ;5014   ;528704
"RTN","RCXFMSUF",114,0)
9 ;;REIMBURS.HEALTH INS.          ;5014   ;528704
"RTN","RCXFMSUF",115,0)
10 ;;TORT FEASOR                   ;0160A1 ;528704
"RTN","RCXFMSUF",116,0)
11 ;;no entry                      ;       ;
"RTN","RCXFMSUF",117,0)
12 ;;MILITARY                      ;0160A1 ;0160A1
"RTN","RCXFMSUF",118,0)
13 ;;FEDERAL AGENCIES-REFUND       ;0160A1 ;0160A1
"RTN","RCXFMSUF",119,0)
14 ;;FEDERAL AGENCIES-REIMB.       ;0160A1 ;0160A1
"RTN","RCXFMSUF",120,0)
15 ;;EX-EMPLOYEE                   ;0160A1 ;0160A1
"RTN","RCXFMSUF",121,0)
16 ;;CURRENT EMP.                  ;0160A1 ;0160A1
"RTN","RCXFMSUF",122,0)
17 ;;VENDOR                        ;0160A1 ;0160A1
"RTN","RCXFMSUF",123,0)
18 ;;C (MEANS TEST)                ;2431   ;528703
"RTN","RCXFMSUF",124,0)
19 ;;SHARING AGREEMENTS            ;0160A1 ;0160A1
"RTN","RCXFMSUF",125,0)
20 ;;INTERAGENCY                   ;0160A1 ;0160A1
"RTN","RCXFMSUF",126,0)
21 ;;MEDICARE                      ;5014   ;528704
"RTN","RCXFMSUF",127,0)
22 ;;RX CO-PAYMENT/SC VET          ;5014   ;528701
"RTN","RCXFMSUF",128,0)
23 ;;RX CO-PAYMENT/NSC VET         ;5014   ;528701
"RTN","RCXFMSUF",129,0)
24 ;;NURSING HOME CARE PER DIEM    ;2431   ;528703
"RTN","RCXFMSUF",130,0)
25 ;;HOSPITAL CARE PER DIEM        ;2431   ;528703
"RTN","RCXFMSUF",131,0)
26 ;;PREPAYMENT                    ;5014   ;528703
"RTN","RCXFMSUF",132,0)
27 ;;CHAMPVA SUBSISTENCE           ;3220   ;3220
"RTN","RCXFMSUF",133,0)
28 ;;CHAMPVA THIRD PARTY           ;3220   ;0160A1
"RTN","RCXFMSUF",134,0)
29 ;;CHAMPVA                       ;0160A1 ;0160A1
"RTN","RCXFMSUF",135,0)
30 ;;TRICARE                       ;0160A1 ;0160A1
"RTN","RCXFMSUF",136,0)
31 ;;TRICARE PATIENT               ;0160A1 ;0160A1
"RTN","RCXFMSUF",137,0)
32 ;;TRICARE THIRD PARTY           ;0160A1 ;0160A1
"RTN","RCXFMSUF",138,0)
33 ;;ADULT DAY HEALTH CARE         ;4032   ;528709
"RTN","RCXFMSUF",139,0)
34 ;;DOMICILIARY                   ;4032   ;528709
"RTN","RCXFMSUF",140,0)
35 ;;RESPITE CARE-INSTITUTIONAL    ;4032   ;528709
"RTN","RCXFMSUF",141,0)
36 ;;RESPITE CARE-NON-INSTITUTIONAL;4032   ;528709
"RTN","RCXFMSUF",142,0)
37 ;;GERIATRIC EVAL-INSTITUTIONAL  ;4032   ;528709
"RTN","RCXFMSUF",143,0)
38 ;;GERIATRIC EVAL-NON-INSTITUTION;4032   ;528709
"RTN","RCXFMSUF",144,0)
39 ;;NURSING HOME CARE-LTC         ;4032   ;528709
"RTN","RCXFMSUF",145,0)
40 ;;NURSING HOME PROCEEDS         ;       ;528705
"RTN","RCXFMSUF",146,0)
41 ;;PARKING FEES                  ;       ;528706
"RTN","RCXFMSUF",147,0)
42 ;;CWT PROCEEDS                  ;       ;528707
"RTN","RCXFMSUF",148,0)
43 ;;COMP & PEN PROCEEDS           ;       ;528708
"RTN","RCXFMSUF",149,0)
44 ;;ENHANCED USE LEASE PROCEEDS   ;5358.3 ;528710
"RTN","RCXFMSUF",150,0)
 ;
"RTN","RCXFMSUF",151,0)
 ;    
"RTN","RCXFMSUR")
0^2^B58588015^B53268142
"RTN","RCXFMSUR",1,0)
RCXFMSUR ;WISC/RFJ-revenue source codes ; 10/19/10 1:47pm
"RTN","RCXFMSUR",2,0)
 ;;4.5;Accounts Receivable;**90,101,170,203,173,220,231,273**;Mar 20, 1995;Build 3
"RTN","RCXFMSUR",3,0)
 ;;Per VHA Directive 2004-038,this routine should not be modified.
"RTN","RCXFMSUR",4,0)
 Q
"RTN","RCXFMSUR",5,0)
 ;
"RTN","RCXFMSUR",6,0)
 ;
"RTN","RCXFMSUR",7,0)
CALCRSC(BILLDA,RCEFT) ;  calculate the revenue source code for a bill
"RTN","RCXFMSUR",8,0)
 ;  rceft = 1 if processing an EFT deposit
"RTN","RCXFMSUR",9,0)
 ;  returns the 4 column (character) rsc
"RTN","RCXFMSUR",10,0)
 N CATEGDA,COLUMN1,COLUMN2,COLUMN3,COLUMN4,RSC
"RTN","RCXFMSUR",11,0)
 ;  if rsc already calculated, return it
"RTN","RCXFMSUR",12,0)
 I $G(RCEFT)=1 S RSC="8NZZ" Q RSC
"RTN","RCXFMSUR",13,0)
 S RSC=$P($G(^PRCA(430,BILLDA,11)),"^",23)
"RTN","RCXFMSUR",14,0)
 I $L(RSC)=4,RSC'="ARRV" Q RSC
"RTN","RCXFMSUR",15,0)
 ;
"RTN","RCXFMSUR",16,0)
 ;  calculate it and store it
"RTN","RCXFMSUR",17,0)
 S CATEGDA=+$P($G(^PRCA(430,BILLDA,0)),"^",2)
"RTN","RCXFMSUR",18,0)
 ;
"RTN","RCXFMSUR",19,0)
 ;  if prepayment, send ARRV
"RTN","RCXFMSUR",20,0)
 I CATEGDA=26 D STORE(BILLDA,"ARRV") Q "ARRV"
"RTN","RCXFMSUR",21,0)
 ;
"RTN","RCXFMSUR",22,0)
 S COLUMN1=$$COLUMN1
"RTN","RCXFMSUR",23,0)
 ;
"RTN","RCXFMSUR",24,0)
 ; check for 3rd party RX bills after 4/27/2011 for col 2
"RTN","RCXFMSUR",25,0)
 N RX3P S RX3P=0
"RTN","RCXFMSUR",26,0)
 I ("PH"=$$TYP^IBRFN(BILLDA)) D
"RTN","RCXFMSUR",27,0)
 .  S RX3P=$$CHECKRXS^RCXFMSUF(BILLDA)
"RTN","RCXFMSUR",28,0)
 ;
"RTN","RCXFMSUR",29,0)
 S COLUMN2=$$COLUMN2
"RTN","RCXFMSUR",30,0)
 ;
"RTN","RCXFMSUR",31,0)
 ;  if column2 cannot be determined, return the rsc of ARRV
"RTN","RCXFMSUR",32,0)
 I COLUMN2="" D STORE(BILLDA,"ARRV") Q "ARRV"
"RTN","RCXFMSUR",33,0)
 ;
"RTN","RCXFMSUR",34,0)
 ;  if column2 is not a 5 for reimbursable health insurance,
"RTN","RCXFMSUR",35,0)
 ;  return ZZ in columns 3 and 4
"RTN","RCXFMSUR",36,0)
 I COLUMN2'=5 D STORE(BILLDA,COLUMN1_COLUMN2_"ZZ") Q COLUMN1_COLUMN2_"ZZ"
"RTN","RCXFMSUR",37,0)
 ;
"RTN","RCXFMSUR",38,0)
 ;  for reimbursable health insurance, compute columns 3 and 4
"RTN","RCXFMSUR",39,0)
 S COLUMN3=$$COLUMN3
"RTN","RCXFMSUR",40,0)
 S COLUMN4=$$COLUMN4
"RTN","RCXFMSUR",41,0)
 ;
"RTN","RCXFMSUR",42,0)
 D STORE(BILLDA,COLUMN1_COLUMN2_COLUMN3_COLUMN4)
"RTN","RCXFMSUR",43,0)
 Q COLUMN1_COLUMN2_COLUMN3_COLUMN4
"RTN","RCXFMSUR",44,0)
 ;
"RTN","RCXFMSUR",45,0)
 ;
"RTN","RCXFMSUR",46,0)
STORE(DA,RSC,FUND) ;  store the revenue source code  or fund in the file
"RTN","RCXFMSUR",47,0)
 I $G(^PRCA(430,DA,0))="" Q
"RTN","RCXFMSUR",48,0)
 N D,D0,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RCXFMSUR",49,0)
 S DR=""
"RTN","RCXFMSUR",50,0)
 I $G(RSC)'="" S DR="255.1////"_RSC_";"
"RTN","RCXFMSUR",51,0)
 I $G(FUND)'="" S DR=DR_"203////"_FUND_";"
"RTN","RCXFMSUR",52,0)
 S (DIC,DIE)="^PRCA(430,"
"RTN","RCXFMSUR",53,0)
 D ^DIE
"RTN","RCXFMSUR",54,0)
 Q
"RTN","RCXFMSUR",55,0)
 ;
"RTN","RCXFMSUR",56,0)
 ;
"RTN","RCXFMSUR",57,0)
COLUMN1() ;  return column 1 number
"RTN","RCXFMSUR",58,0)
 Q 8
"RTN","RCXFMSUR",59,0)
 ;
"RTN","RCXFMSUR",60,0)
 ;
"RTN","RCXFMSUR",61,0)
COLUMN2() ;  return column 2 number
"RTN","RCXFMSUR",62,0)
 I CATEGDA=5 Q 1     ; hospital care (nsc)
"RTN","RCXFMSUR",63,0)
 I CATEGDA=4 Q 2     ; outpatient care (nsc)
"RTN","RCXFMSUR",64,0)
 I CATEGDA=3 Q 3     ; nursing home care (nsc)
"RTN","RCXFMSUR",65,0)
 I CATEGDA=1 Q 4     ; ineligible hospital
"RTN","RCXFMSUR",66,0)
 I CATEGDA=9&$G(RX3P) Q "R"    ; pharmacy reimbursable health insurance
"RTN","RCXFMSUR",67,0)
 I CATEGDA=9 Q 5     ; reimbursable health insurance
"RTN","RCXFMSUR",68,0)
 I CATEGDA=10&$G(RX3P) Q "S"     ; pharmacy tort feasor
"RTN","RCXFMSUR",69,0)
 I CATEGDA=10 Q 6    ; tort feasor
"RTN","RCXFMSUR",70,0)
 I CATEGDA=6&$G(RX3P) Q "T"     ;pharmacy workman's comp
"RTN","RCXFMSUR",71,0)
 I CATEGDA=6 Q 7     ; workmans comp
"RTN","RCXFMSUR",72,0)
 I CATEGDA=18 Q 8    ; c (means test)
"RTN","RCXFMSUR",73,0)
 I CATEGDA=2 Q 9     ; emergency/humanitarian
"RTN","RCXFMSUR",74,0)
 I CATEGDA=7&$G(RX3P) Q "Q"     ;pharmacy no fault auto acc
"RTN","RCXFMSUR",75,0)
 I CATEGDA=7 Q "A"   ; no fault auto accident
"RTN","RCXFMSUR",76,0)
 I CATEGDA=22 Q "B"  ; rx copay/sc vet
"RTN","RCXFMSUR",77,0)
 I CATEGDA=23 Q "C"  ; rx copay/nsc vet
"RTN","RCXFMSUR",78,0)
 I CATEGDA=24 Q "D"  ; nursing home care per diem
"RTN","RCXFMSUR",79,0)
 I CATEGDA=25 Q "E"  ; hospital care per diem
"RTN","RCXFMSUR",80,0)
 I CATEGDA=21 Q "F"  ; medicare
"RTN","RCXFMSUR",81,0)
 I CATEGDA=33 Q "G"  ; adult day health care
"RTN","RCXFMSUR",82,0)
 I CATEGDA=34 Q "H"  ; domiciliary
"RTN","RCXFMSUR",83,0)
 I CATEGDA=35 Q "I"  ; respite care - institutional
"RTN","RCXFMSUR",84,0)
 I CATEGDA=36 Q "J"  ; respite care - non-institutional
"RTN","RCXFMSUR",85,0)
 I CATEGDA=37 Q "K"  ; geriatric evaluation - institutional
"RTN","RCXFMSUR",86,0)
 I CATEGDA=38 Q "L"  ; geriatric evaluation - non-institutional
"RTN","RCXFMSUR",87,0)
 I CATEGDA=39 Q "M"  ; nursing home care - ltc
"RTN","RCXFMSUR",88,0)
 Q ""
"RTN","RCXFMSUR",89,0)
 ;
"RTN","RCXFMSUR",90,0)
 ;
"RTN","RCXFMSUR",91,0)
COLUMN3() ;  return the column 3 number
"RTN","RCXFMSUR",92,0)
 N AGE,DECIMAL,DFN,IBCNDATA,TYPEAGE,TYPECARE,TYPEMEAN,TYPESERV,VA,VADM,VAERR
"RTN","RCXFMSUR",93,0)
 D DIQ399(BILLDA)
"RTN","RCXFMSUR",94,0)
 ;
"RTN","RCXFMSUR",95,0)
 D TYPECARE
"RTN","RCXFMSUR",96,0)
 ;
"RTN","RCXFMSUR",97,0)
 ;  compute service connected at time of care (1 digit binary)
"RTN","RCXFMSUR",98,0)
 ;  type of service connected is set as follows:
"RTN","RCXFMSUR",99,0)
 ;        0 = SC Vet                   1 = NSC Vet
"RTN","RCXFMSUR",100,0)
 S TYPESERV=1
"RTN","RCXFMSUR",101,0)
 ;  service connected at time of care (.18) = yes (1)
"RTN","RCXFMSUR",102,0)
 I $G(IBCNDATA(399,BILLDA,.18,"I"))=1 S TYPESERV=0
"RTN","RCXFMSUR",103,0)
 ;
"RTN","RCXFMSUR",104,0)
 S DFN=$P($G(^PRCA(430,BILLDA,0)),"^",7)
"RTN","RCXFMSUR",105,0)
 D DEM^VADPT
"RTN","RCXFMSUR",106,0)
 ;
"RTN","RCXFMSUR",107,0)
 ;  compute means test at time of care (1 digit binary)
"RTN","RCXFMSUR",108,0)
 ;  type of means test is set as follows:
"RTN","RCXFMSUR",109,0)
 ;        0 = Cat A                    1 = Cat C
"RTN","RCXFMSUR",110,0)
 S TYPEMEAN=0
"RTN","RCXFMSUR",111,0)
 I $$BIL^DGMTUB(DFN,$G(IBCNDATA(399,BILLDA,151,"I")))=1 S TYPEMEAN=1
"RTN","RCXFMSUR",112,0)
 ;
"RTN","RCXFMSUR",113,0)
 ;  compute patient age at time of care (1 digit binary)
"RTN","RCXFMSUR",114,0)
 ;  type of age is set as follows:
"RTN","RCXFMSUR",115,0)
 ;        0 = under 65                 1 = 65 and older
"RTN","RCXFMSUR",116,0)
 S AGE=$$FMDIFF^XLFDT($G(IBCNDATA(399,BILLDA,151,"I")),$P($G(VADM(3)),"^"))\365.25
"RTN","RCXFMSUR",117,0)
 S TYPEAGE=1
"RTN","RCXFMSUR",118,0)
 I AGE<65 S TYPEAGE=0
"RTN","RCXFMSUR",119,0)
 ;
"RTN","RCXFMSUR",120,0)
 ;  convert to decimal  typecare  typeserv  typemean  typeage
"RTN","RCXFMSUR",121,0)
 ;             binary=  1   1         1         1         1
"RTN","RCXFMSUR",122,0)
 ;            decimal= 16 + 8     +   4     +   2     +   1
"RTN","RCXFMSUR",123,0)
 S DECIMAL=$S(TYPECARE="11":24,TYPECARE="10":16,TYPECARE="01":8,1:0)
"RTN","RCXFMSUR",124,0)
 I TYPESERV S DECIMAL=DECIMAL+4
"RTN","RCXFMSUR",125,0)
 I TYPEMEAN S DECIMAL=DECIMAL+2
"RTN","RCXFMSUR",126,0)
 I TYPEAGE S DECIMAL=DECIMAL+1
"RTN","RCXFMSUR",127,0)
 I DECIMAL<10 Q DECIMAL
"RTN","RCXFMSUR",128,0)
 Q $C(65+DECIMAL-10)
"RTN","RCXFMSUR",129,0)
 ;
"RTN","RCXFMSUR",130,0)
 ;
"RTN","RCXFMSUR",131,0)
COLUMN4() ;  return the column 4 number (reserved for future expansion)
"RTN","RCXFMSUR",132,0)
 Q "Z"
"RTN","RCXFMSUR",133,0)
 ;
"RTN","RCXFMSUR",134,0)
 ;
"RTN","RCXFMSUR",135,0)
DIQ399(DA)  ;  get data from file 399
"RTN","RCXFMSUR",136,0)
 N D0,DIC,DIQ,DIQ2,DR
"RTN","RCXFMSUR",137,0)
 K IBCNDATA
"RTN","RCXFMSUR",138,0)
 S DIQ(0)="IE",DIC="^DGCR(399,",DIQ="IBCNDATA",DR=".04;.05;.18;151;" D EN^DIQ1
"RTN","RCXFMSUR",139,0)
 Q
"RTN","RCXFMSUR",140,0)
 ;
"RTN","RCXFMSUR",141,0)
 ;
"RTN","RCXFMSUR",142,0)
TYPECARE ;  compute type of care (2 digit binary)
"RTN","RCXFMSUR",143,0)
 ;  type of care is set as follows:
"RTN","RCXFMSUR",144,0)
 ;      00 = inpatient (hospital)    01 = outpatient
"RTN","RCXFMSUR",145,0)
 ;      10 = nursing home            11 = other
"RTN","RCXFMSUR",146,0)
 ;  default is other if it cannot be computed
"RTN","RCXFMSUR",147,0)
 S TYPECARE="11"
"RTN","RCXFMSUR",148,0)
 ;  bill classification (.05) = outpatient (3) or human.emerg(opt) (4)
"RTN","RCXFMSUR",149,0)
 I $G(IBCNDATA(399,BILLDA,.05,"I"))=3!($G(IBCNDATA(399,BILLDA,.05,"I"))=4) S TYPECARE="01" Q
"RTN","RCXFMSUR",150,0)
 ;  location of care (.04) = hospital inpt or outpt (1)
"RTN","RCXFMSUR",151,0)
 I $G(IBCNDATA(399,BILLDA,.04,"I"))=1 S TYPECARE="00" Q
"RTN","RCXFMSUR",152,0)
 ;  location of care (.04) = skilled nursing (nhcu) (2)
"RTN","RCXFMSUR",153,0)
 I $G(IBCNDATA(399,BILLDA,.04,"I"))=2 S TYPECARE="10"
"RTN","RCXFMSUR",154,0)
 Q
"RTN","RCXFMSUR",155,0)
 ;
"RTN","RCXFMSUR",156,0)
 ;
"RTN","RCXFMSUR",157,0)
ADDEDIT ;  enter/edit revenue source codes for fund 0160A1 bills.  These
"RTN","RCXFMSUR",158,0)
 ;  bills have the rsc entered by the user.  The user can select
"RTN","RCXFMSUR",159,0)
 ;  from rscs in file 347.3
"RTN","RCXFMSUR",160,0)
 W !!,"This option should be used with CAUTION.  This option will allow the"
"RTN","RCXFMSUR",161,0)
 W !,"user owning the PRCASVC supervisor security key, to add or edit the"
"RTN","RCXFMSUR",162,0)
 W !,"Revenue Source Codes selectable for non MCCF bills.  If an invalid"
"RTN","RCXFMSUR",163,0)
 W !,"Revenue Source Code is entered or changed, all code sheets sent to"
"RTN","RCXFMSUR",164,0)
 W !,"FMS referencing the invalid Revenue Source Code will reject.  Be"
"RTN","RCXFMSUR",165,0)
 W !,"cautious when entering new Revenue Source Codes or editing existing"
"RTN","RCXFMSUR",166,0)
 W !,"Revenue Source Codes.  New Revenue Source Codes should only be added"
"RTN","RCXFMSUR",167,0)
 W !,"after they have been added in FMS."
"RTN","RCXFMSUR",168,0)
 ;
"RTN","RCXFMSUR",169,0)
 I '$D(^XUSEC("PRCASVC",DUZ)) W !!,"You are not an owner of the PRCASVC security key." Q
"RTN","RCXFMSUR",170,0)
 ;
"RTN","RCXFMSUR",171,0)
 N %,%Y,C,D,D0,DA,DI,DIC,DIE,DLAYGO,DQ,DR,RCRJFLAG,X,X1,X2,X3,Y
"RTN","RCXFMSUR",172,0)
 ;
"RTN","RCXFMSUR",173,0)
 F  D  Q:$G(RCRJFLAG)
"RTN","RCXFMSUR",174,0)
 . S (DIC,DIE)="^RC(347.3,",DIC(0)="QEL",DLAYGO=347.3
"RTN","RCXFMSUR",175,0)
 . R !!,"Select REVENUE SOURCE CODE: ",X:DTIME
"RTN","RCXFMSUR",176,0)
 . S X1=X,X=$$UPPER^VALM1(X)
"RTN","RCXFMSUR",177,0)
 . I $E(X)="?",X?."?" D ^DIC Q:Y<1
"RTN","RCXFMSUR",178,0)
 . I X=""!($E(X)=U) S RCRJFLAG=1 Q
"RTN","RCXFMSUR",179,0)
 . I $D(^RC(347.3,"B",X)) S Y=+$O(^(X,0)) W "   ",X,"  ",$P($G(^RC(347.3,Y,0)),U,2) W:$P(^(0),U,3) "  INACTIVE" D UPD Q 
"RTN","RCXFMSUR",180,0)
 . S X2=$L(X1),X3=$C($A($E(X1,X2))-1),X3=$E(X1,1,X2-1)_X3,X3=$O(^RC(347.3,"C",X3)) I $E(X3,1,X2)=X1 S X=X1
"RTN","RCXFMSUR",181,0)
 . S D="C" D IX^DIC Q:Y<1  D UPD Q
"RTN","RCXFMSUR",182,0)
 Q
"RTN","RCXFMSUR",183,0)
UPD S DIE="^RC(347.3,",DA=+Y,DR=".02;.03" D ^DIE
"RTN","RCXFMSUR",184,0)
 Q
"RTN","RCXFMSUR",185,0)
 ;
"RTN","RCXFMSUR",186,0)
 ;
"RTN","RCXFMSUR",187,0)
RSC ;revenue code (#430/255)
"RTN","RCXFMSUR",188,0)
 I $P($G(^RC(347.3,X,0)),"^",3) D EN^DDIOL("THIS REVENUE SOURCE CODE IS INACTIVE.") K X Q
"RTN","RCXFMSUR",189,0)
 S X=$P(^RC(347.3,X,0),"^")
"RTN","RCXFMSUR",190,0)
 Q
"RTN","RCXFMSUR",191,0)
 ;
"RTN","RCXFMSUR",192,0)
SHOW ;  show/calculate revenue source code for a selected bill
"RTN","RCXFMSUR",193,0)
 W !!,"This option will show the calculated Revenue Source Code for a selected"
"RTN","RCXFMSUR",194,0)
 W !,"bill.  The Revenue Source Code is only calculated for accrued bills in"
"RTN","RCXFMSUR",195,0)
 I DT'<$$ADDPTEDT^PRCAACC() W !,"funds 528701,528703,528704,528709/4032,528711"
"RTN","RCXFMSUR",196,0)
 I DT<$$ADDPTEDT^PRCAACC() W !,"funds 5287.1,5287.3,5287.4,4032"
"RTN","RCXFMSUR",197,0)
 ;
"RTN","RCXFMSUR",198,0)
 N %,%Y,BILLDA,C,DIC,FUND,I,RCRJFLAG,RSC,X,Y
"RTN","RCXFMSUR",199,0)
 ;
"RTN","RCXFMSUR",200,0)
 F  D  Q:$G(RCRJFLAG)
"RTN","RCXFMSUR",201,0)
 .   S DIC="^PRCA(430,",DIC(0)="QEAM"
"RTN","RCXFMSUR",202,0)
 .   W ! D ^DIC
"RTN","RCXFMSUR",203,0)
 .   I Y<1 S RCRJFLAG=1 Q
"RTN","RCXFMSUR",204,0)
 .   S BILLDA=+Y
"RTN","RCXFMSUR",205,0)
 .   S FUND=$$GETFUNDB^RCXFMSUF(BILLDA,1)
"RTN","RCXFMSUR",206,0)
 .   W !!,"        Bill Number: ",$P($G(^PRCA(430,BILLDA,0)),"^")
"RTN","RCXFMSUR",207,0)
 .   W !,"               Fund: ",FUND
"RTN","RCXFMSUR",208,0)
 .   I '$$PTACCT^PRCAACC(FUND),FUND'=4032 D  Q
"RTN","RCXFMSUR",209,0)
 .   .   W !,"  The Revenue Source Code cannot be calculated for non-accrued bills."
"RTN","RCXFMSUR",210,0)
 .   .   W !,"  The Revenue Source Code for non-accrued bills are input by the user."
"RTN","RCXFMSUR",211,0)
 .   .   W !,"  The Revenue Source Code is currently entered as: "
"RTN","RCXFMSUR",212,0)
 .   .   S RSC=$P($G(^PRCA(430,BILLDA,11)),"^",6)
"RTN","RCXFMSUR",213,0)
 .   .   W $S(RSC="":"<not entered>",1:RSC)
"RTN","RCXFMSUR",214,0)
 .   ;
"RTN","RCXFMSUR",215,0)
 .   S RSC=$$CALCRSC(BILLDA)
"RTN","RCXFMSUR",216,0)
 .   W !,"Revenue Source Code: ",RSC
"RTN","RCXFMSUR",217,0)
 Q
"VER")
8.0^22.0
"BLD",8206,6)
^243
**END**
**END**
