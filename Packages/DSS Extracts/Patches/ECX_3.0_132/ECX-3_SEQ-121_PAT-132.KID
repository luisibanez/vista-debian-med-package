EMERGENCY Released ECX*3*132 SEQ #121
Extracted from mail message
**KIDS**:ECX*3.0*132^

**INSTALL NAME**
ECX*3.0*132
"BLD",8219,0)
ECX*3.0*132^DSS EXTRACTS^0^3110920^y
"BLD",8219,1,0)
^^1^1^3110405^
"BLD",8219,1,1,0)
FY12 DSS ENHANCEMENTS
"BLD",8219,4,0)
^9.64PA^727.811^7
"BLD",8219,4,727.802,0)
727.802
"BLD",8219,4,727.802,2,0)
^9.641^727.802^1
"BLD",8219,4,727.802,2,727.802,0)
ADMISSION EXTRACT  (File-top level)
"BLD",8219,4,727.802,2,727.802,1,0)
^9.6411^91^2
"BLD",8219,4,727.802,2,727.802,1,32,0)
PRINCIPAL DIAGNOSIS
"BLD",8219,4,727.802,2,727.802,1,91,0)
ADMIT SOURCE
"BLD",8219,4,727.802,222)
y^n^p^^^^n^^n
"BLD",8219,4,727.802,224)

"BLD",8219,4,727.811,0)
727.811
"BLD",8219,4,727.811,2,0)
^9.641^727.811^1
"BLD",8219,4,727.811,2,727.811,0)
SURGERY EXTRACT  (File-top level)
"BLD",8219,4,727.811,2,727.811,1,0)
^9.6411^121^1
"BLD",8219,4,727.811,2,727.811,1,121,0)
DATE OF BIRTH
"BLD",8219,4,727.811,222)
y^n^p^^^^n^^n
"BLD",8219,4,727.811,224)

"BLD",8219,4,727.813,0)
727.813
"BLD",8219,4,727.813,2,0)
^9.641^727.813^1
"BLD",8219,4,727.813,2,727.813,0)
LABORATORY EXTRACT  (File-top level)
"BLD",8219,4,727.813,2,727.813,1,0)
^9.6411^45^1
"BLD",8219,4,727.813,2,727.813,1,45,0)
DATA NAME
"BLD",8219,4,727.813,222)
y^n^p^^^^n^^n
"BLD",8219,4,727.813,224)

"BLD",8219,4,727.815,0)
727.815
"BLD",8219,4,727.815,2,0)
^9.641^727.815^1
"BLD",8219,4,727.815,2,727.815,0)
EVENT CAPTURE LOCAL EXTRACT  (File-top level)
"BLD",8219,4,727.815,2,727.815,1,0)
^9.6411^20^9
"BLD",8219,4,727.815,2,727.815,1,16,0)
PROVIDER
"BLD",8219,4,727.815,2,727.815,1,18,0)
PROVIDER #2
"BLD",8219,4,727.815,2,727.815,1,20,0)
PROVIDER #3
"BLD",8219,4,727.815,2,727.815,1,100,0)
PROVIDER #4
"BLD",8219,4,727.815,2,727.815,1,101,0)
PROVIDER #4 PERSON CLASS
"BLD",8219,4,727.815,2,727.815,1,102,0)
PROVIDER #4 NPI
"BLD",8219,4,727.815,2,727.815,1,103,0)
PROVIDER #5
"BLD",8219,4,727.815,2,727.815,1,104,0)
PROVIDER #5 PERSON CLASS
"BLD",8219,4,727.815,2,727.815,1,105,0)
PROVIDER #5 NPI
"BLD",8219,4,727.815,222)
y^n^p^^^^n^^n
"BLD",8219,4,727.815,224)

"BLD",8219,4,727.825,0)
727.825
"BLD",8219,4,727.825,2,0)
^9.641^727.825^1
"BLD",8219,4,727.825,2,727.825,0)
QUASAR EXTRACT  (File-top level)
"BLD",8219,4,727.825,2,727.825,1,0)
^9.6411^20^9
"BLD",8219,4,727.825,2,727.825,1,16,0)
PROVIDER
"BLD",8219,4,727.825,2,727.825,1,18,0)
PROVIDER #2
"BLD",8219,4,727.825,2,727.825,1,20,0)
PROVIDER #3
"BLD",8219,4,727.825,2,727.825,1,100,0)
PROVIDER #4
"BLD",8219,4,727.825,2,727.825,1,101,0)
PROVIDER #4 PERSON CLASS
"BLD",8219,4,727.825,2,727.825,1,102,0)
PROVIDER #4 NPI
"BLD",8219,4,727.825,2,727.825,1,103,0)
PROVIDER #5
"BLD",8219,4,727.825,2,727.825,1,104,0)
PROVIDER #5 PERSON CLASS
"BLD",8219,4,727.825,2,727.825,1,105,0)
PROVIDER #5 NPI
"BLD",8219,4,727.825,222)
y^n^p^^^^n^^n
"BLD",8219,4,727.825,224)

"BLD",8219,4,727.826,0)
727.826
"BLD",8219,4,727.826,2,0)
^9.641^727.826^1
"BLD",8219,4,727.826,2,727.826,0)
PROSTHETICS EXTRACT  (File-top level)
"BLD",8219,4,727.826,2,727.826,1,0)
^9.6411^10^1
"BLD",8219,4,727.826,2,727.826,1,10,0)
FEEDER KEY
"BLD",8219,4,727.826,222)
y^n^p^^^^n^^n
"BLD",8219,4,727.826,224)

"BLD",8219,4,727.827,0)
727.827
"BLD",8219,4,727.827,2,0)
^9.641^727.827^1
"BLD",8219,4,727.827,2,727.827,0)
CLINIC EXTRACT  (File-top level)
"BLD",8219,4,727.827,2,727.827,1,0)
^9.6411^110^15
"BLD",8219,4,727.827,2,727.827,1,96,0)
SECONDARY PROVIDER #1
"BLD",8219,4,727.827,2,727.827,1,97,0)
SECONDARY PROVIDER #1 PC
"BLD",8219,4,727.827,2,727.827,1,98,0)
SECONDARY PROVIDER #1 NPI
"BLD",8219,4,727.827,2,727.827,1,99,0)
SECONDARY PROVIDER #2
"BLD",8219,4,727.827,2,727.827,1,100,0)
SECONDARY PROVIDER #2 PC
"BLD",8219,4,727.827,2,727.827,1,101,0)
SECONDARY PROVIDER #2 NPI
"BLD",8219,4,727.827,2,727.827,1,102,0)
SECONDARY PROVIDER #3
"BLD",8219,4,727.827,2,727.827,1,103,0)
SECONDARY PROVIDER #3 PC
"BLD",8219,4,727.827,2,727.827,1,104,0)
SECONDARY PROVIDER #3 NPI
"BLD",8219,4,727.827,2,727.827,1,105,0)
SECONDARY PROVIDER #4
"BLD",8219,4,727.827,2,727.827,1,106,0)
SECONDARY PROVIDER #4 PC
"BLD",8219,4,727.827,2,727.827,1,107,0)
SECONDARY PROVIDER #4 NPI
"BLD",8219,4,727.827,2,727.827,1,108,0)
SECONDARY PROVIDER #5
"BLD",8219,4,727.827,2,727.827,1,109,0)
SECONDARY PROVIDER #5 PC
"BLD",8219,4,727.827,2,727.827,1,110,0)
SECONDARY PROVIDER #5 NPI
"BLD",8219,4,727.827,222)
y^n^p^^^^n^^n
"BLD",8219,4,727.827,224)

"BLD",8219,4,"APDD",727.802,727.802)

"BLD",8219,4,"APDD",727.802,727.802,32)

"BLD",8219,4,"APDD",727.802,727.802,91)

"BLD",8219,4,"APDD",727.811,727.811)

"BLD",8219,4,"APDD",727.811,727.811,121)

"BLD",8219,4,"APDD",727.813,727.813)

"BLD",8219,4,"APDD",727.813,727.813,45)

"BLD",8219,4,"APDD",727.815,727.815)

"BLD",8219,4,"APDD",727.815,727.815,16)

"BLD",8219,4,"APDD",727.815,727.815,18)

"BLD",8219,4,"APDD",727.815,727.815,20)

"BLD",8219,4,"APDD",727.815,727.815,100)

"BLD",8219,4,"APDD",727.815,727.815,101)

"BLD",8219,4,"APDD",727.815,727.815,102)

"BLD",8219,4,"APDD",727.815,727.815,103)

"BLD",8219,4,"APDD",727.815,727.815,104)

"BLD",8219,4,"APDD",727.815,727.815,105)

"BLD",8219,4,"APDD",727.825,727.825)

"BLD",8219,4,"APDD",727.825,727.825,16)

"BLD",8219,4,"APDD",727.825,727.825,18)

"BLD",8219,4,"APDD",727.825,727.825,20)

"BLD",8219,4,"APDD",727.825,727.825,100)

"BLD",8219,4,"APDD",727.825,727.825,101)

"BLD",8219,4,"APDD",727.825,727.825,102)

"BLD",8219,4,"APDD",727.825,727.825,103)

"BLD",8219,4,"APDD",727.825,727.825,104)

"BLD",8219,4,"APDD",727.825,727.825,105)

"BLD",8219,4,"APDD",727.826,727.826)

"BLD",8219,4,"APDD",727.826,727.826,10)

"BLD",8219,4,"APDD",727.827,727.827)

"BLD",8219,4,"APDD",727.827,727.827,96)

"BLD",8219,4,"APDD",727.827,727.827,97)

"BLD",8219,4,"APDD",727.827,727.827,98)

"BLD",8219,4,"APDD",727.827,727.827,99)

"BLD",8219,4,"APDD",727.827,727.827,100)

"BLD",8219,4,"APDD",727.827,727.827,101)

"BLD",8219,4,"APDD",727.827,727.827,102)

"BLD",8219,4,"APDD",727.827,727.827,103)

"BLD",8219,4,"APDD",727.827,727.827,104)

"BLD",8219,4,"APDD",727.827,727.827,105)

"BLD",8219,4,"APDD",727.827,727.827,106)

"BLD",8219,4,"APDD",727.827,727.827,107)

"BLD",8219,4,"APDD",727.827,727.827,108)

"BLD",8219,4,"APDD",727.827,727.827,109)

"BLD",8219,4,"APDD",727.827,727.827,110)

"BLD",8219,4,"B",727.802,727.802)

"BLD",8219,4,"B",727.811,727.811)

"BLD",8219,4,"B",727.813,727.813)

"BLD",8219,4,"B",727.815,727.815)

"BLD",8219,4,"B",727.825,727.825)

"BLD",8219,4,"B",727.826,727.826)

"BLD",8219,4,"B",727.827,727.827)

"BLD",8219,6)
6^
"BLD",8219,6.3)
18
"BLD",8219,"ABPKG")
n
"BLD",8219,"INIT")
POST^ECX3P132
"BLD",8219,"KRN",0)
^9.67PA^779.2^20
"BLD",8219,"KRN",.4,0)
.4
"BLD",8219,"KRN",.4,"NM",0)
^9.68A^1^1
"BLD",8219,"KRN",.4,"NM",1,0)
ECX CLINIC REVIEW EXPORT    FILE #728.44^728.44^0
"BLD",8219,"KRN",.4,"NM","B","ECX CLINIC REVIEW EXPORT    FILE #728.44",1)

"BLD",8219,"KRN",.401,0)
.401
"BLD",8219,"KRN",.402,0)
.402
"BLD",8219,"KRN",.403,0)
.403
"BLD",8219,"KRN",.5,0)
.5
"BLD",8219,"KRN",.84,0)
.84
"BLD",8219,"KRN",3.6,0)
3.6
"BLD",8219,"KRN",3.8,0)
3.8
"BLD",8219,"KRN",9.2,0)
9.2
"BLD",8219,"KRN",9.8,0)
9.8
"BLD",8219,"KRN",9.8,"NM",0)
^9.68A^27^26
"BLD",8219,"KRN",9.8,"NM",1,0)
ECXSCX1^^0^B78250876
"BLD",8219,"KRN",9.8,"NM",2,0)
ECXSCXN^^0^B65800632
"BLD",8219,"KRN",9.8,"NM",3,0)
ECXSCXN1^^0^B12284717
"BLD",8219,"KRN",9.8,"NM",4,0)
ECXKILL^^0^B9384165
"BLD",8219,"KRN",9.8,"NM",5,0)
ECXKILL1^^0^B12209973
"BLD",8219,"KRN",9.8,"NM",6,0)
ECXEC^^0^B58828917
"BLD",8219,"KRN",9.8,"NM",7,0)
ECXQSR^^0^B48814475
"BLD",8219,"KRN",9.8,"NM",8,0)
ECXQSR1^^0^B12313439
"BLD",8219,"KRN",9.8,"NM",9,0)
ECXADM^^0^B48340472
"BLD",8219,"KRN",9.8,"NM",10,0)
ECXSCLD^^0^B199744247
"BLD",8219,"KRN",9.8,"NM",11,0)
ECXBCM^^0^B50933918
"BLD",8219,"KRN",9.8,"NM",12,0)
ECXPRO^^0^B39410631
"BLD",8219,"KRN",9.8,"NM",13,0)
ECXPRO1^^0^B20868424
"BLD",8219,"KRN",9.8,"NM",14,0)
ECXPRO2^^0^B12154079
"BLD",8219,"KRN",9.8,"NM",15,0)
ECXCPRO1^^0^B13012758
"BLD",8219,"KRN",9.8,"NM",17,0)
ECXAPRO^^0^B49978410
"BLD",8219,"KRN",9.8,"NM",18,0)
ECXAPRO1^^0^B15242720
"BLD",8219,"KRN",9.8,"NM",19,0)
ECXALAR^^0^B16714443
"BLD",8219,"KRN",9.8,"NM",20,0)
ECXFEKEY^^0^B44303669
"BLD",8219,"KRN",9.8,"NM",21,0)
ECXFELOC^^0^B16469856
"BLD",8219,"KRN",9.8,"NM",22,0)
ECXUPRO1^^0^B7105553
"BLD",8219,"KRN",9.8,"NM",23,0)
ECXSURG^^0^B72092726
"BLD",8219,"KRN",9.8,"NM",24,0)
ECXSURG1^^0^B19369745
"BLD",8219,"KRN",9.8,"NM",25,0)
ECXLABN^^0^B44530777
"BLD",8219,"KRN",9.8,"NM",26,0)
ECXUTL6^^0^B61658349
"BLD",8219,"KRN",9.8,"NM",27,0)
ECXSCLD1^^0^B3035123
"BLD",8219,"KRN",9.8,"NM","B","ECXADM",9)

"BLD",8219,"KRN",9.8,"NM","B","ECXALAR",19)

"BLD",8219,"KRN",9.8,"NM","B","ECXAPRO",17)

"BLD",8219,"KRN",9.8,"NM","B","ECXAPRO1",18)

"BLD",8219,"KRN",9.8,"NM","B","ECXBCM",11)

"BLD",8219,"KRN",9.8,"NM","B","ECXCPRO1",15)

"BLD",8219,"KRN",9.8,"NM","B","ECXEC",6)

"BLD",8219,"KRN",9.8,"NM","B","ECXFEKEY",20)

"BLD",8219,"KRN",9.8,"NM","B","ECXFELOC",21)

"BLD",8219,"KRN",9.8,"NM","B","ECXKILL",4)

"BLD",8219,"KRN",9.8,"NM","B","ECXKILL1",5)

"BLD",8219,"KRN",9.8,"NM","B","ECXLABN",25)

"BLD",8219,"KRN",9.8,"NM","B","ECXPRO",12)

"BLD",8219,"KRN",9.8,"NM","B","ECXPRO1",13)

"BLD",8219,"KRN",9.8,"NM","B","ECXPRO2",14)

"BLD",8219,"KRN",9.8,"NM","B","ECXQSR",7)

"BLD",8219,"KRN",9.8,"NM","B","ECXQSR1",8)

"BLD",8219,"KRN",9.8,"NM","B","ECXSCLD",10)

"BLD",8219,"KRN",9.8,"NM","B","ECXSCLD1",27)

"BLD",8219,"KRN",9.8,"NM","B","ECXSCX1",1)

"BLD",8219,"KRN",9.8,"NM","B","ECXSCXN",2)

"BLD",8219,"KRN",9.8,"NM","B","ECXSCXN1",3)

"BLD",8219,"KRN",9.8,"NM","B","ECXSURG",23)

"BLD",8219,"KRN",9.8,"NM","B","ECXSURG1",24)

"BLD",8219,"KRN",9.8,"NM","B","ECXUPRO1",22)

"BLD",8219,"KRN",9.8,"NM","B","ECXUTL6",26)

"BLD",8219,"KRN",19,0)
19
"BLD",8219,"KRN",19,"NM",0)
^9.68A^^
"BLD",8219,"KRN",19.1,0)
19.1
"BLD",8219,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",8219,"KRN",19.1,"NM",1,0)
ECX DSS TEST^^0
"BLD",8219,"KRN",19.1,"NM","B","ECX DSS TEST",1)

"BLD",8219,"KRN",101,0)
101
"BLD",8219,"KRN",409.61,0)
409.61
"BLD",8219,"KRN",771,0)
771
"BLD",8219,"KRN",779.2,0)
779.2
"BLD",8219,"KRN",870,0)
870
"BLD",8219,"KRN",8989.51,0)
8989.51
"BLD",8219,"KRN",8989.52,0)
8989.52
"BLD",8219,"KRN",8994,0)
8994
"BLD",8219,"KRN","B",.4,.4)

"BLD",8219,"KRN","B",.401,.401)

"BLD",8219,"KRN","B",.402,.402)

"BLD",8219,"KRN","B",.403,.403)

"BLD",8219,"KRN","B",.5,.5)

"BLD",8219,"KRN","B",.84,.84)

"BLD",8219,"KRN","B",3.6,3.6)

"BLD",8219,"KRN","B",3.8,3.8)

"BLD",8219,"KRN","B",9.2,9.2)

"BLD",8219,"KRN","B",9.8,9.8)

"BLD",8219,"KRN","B",19,19)

"BLD",8219,"KRN","B",19.1,19.1)

"BLD",8219,"KRN","B",101,101)

"BLD",8219,"KRN","B",409.61,409.61)

"BLD",8219,"KRN","B",771,771)

"BLD",8219,"KRN","B",779.2,779.2)

"BLD",8219,"KRN","B",870,870)

"BLD",8219,"KRN","B",8989.51,8989.51)

"BLD",8219,"KRN","B",8989.52,8989.52)

"BLD",8219,"KRN","B",8994,8994)

"BLD",8219,"QUES",0)
^9.62^^
"BLD",8219,"REQB",0)
^9.611^1^1
"BLD",8219,"REQB",1,0)
ECX*3.0*127^2
"BLD",8219,"REQB","B","ECX*3.0*127",1)

"FIA",727.802)
ADMISSION EXTRACT
"FIA",727.802,0)
^ECX(727.802,
"FIA",727.802,0,0)
727.802
"FIA",727.802,0,1)
y^n^p^^^^n^^n
"FIA",727.802,0,10)

"FIA",727.802,0,11)

"FIA",727.802,0,"RLRO")

"FIA",727.802,0,"VR")
3.0^ECX
"FIA",727.802,727.802)
1
"FIA",727.802,727.802,32)

"FIA",727.802,727.802,91)

"FIA",727.811)
SURGERY EXTRACT
"FIA",727.811,0)
^ECX(727.811,
"FIA",727.811,0,0)
727.811
"FIA",727.811,0,1)
y^n^p^^^^n^^n
"FIA",727.811,0,10)

"FIA",727.811,0,11)

"FIA",727.811,0,"RLRO")

"FIA",727.811,0,"VR")
3.0^ECX
"FIA",727.811,727.811)
1
"FIA",727.811,727.811,121)

"FIA",727.813)
LABORATORY EXTRACT
"FIA",727.813,0)
^ECX(727.813,
"FIA",727.813,0,0)
727.813
"FIA",727.813,0,1)
y^n^p^^^^n^^n
"FIA",727.813,0,10)

"FIA",727.813,0,11)

"FIA",727.813,0,"RLRO")

"FIA",727.813,0,"VR")
3.0^ECX
"FIA",727.813,727.813)
1
"FIA",727.813,727.813,45)

"FIA",727.815)
EVENT CAPTURE LOCAL EXTRACT
"FIA",727.815,0)
^ECX(727.815,
"FIA",727.815,0,0)
727.815
"FIA",727.815,0,1)
y^n^p^^^^n^^n
"FIA",727.815,0,10)

"FIA",727.815,0,11)

"FIA",727.815,0,"RLRO")

"FIA",727.815,0,"VR")
3.0^ECX
"FIA",727.815,727.815)
1
"FIA",727.815,727.815,16)

"FIA",727.815,727.815,18)

"FIA",727.815,727.815,20)

"FIA",727.815,727.815,100)

"FIA",727.815,727.815,101)

"FIA",727.815,727.815,102)

"FIA",727.815,727.815,103)

"FIA",727.815,727.815,104)

"FIA",727.815,727.815,105)

"FIA",727.825)
QUASAR EXTRACT
"FIA",727.825,0)
^ECX(727.825,
"FIA",727.825,0,0)
727.825
"FIA",727.825,0,1)
y^n^p^^^^n^^n
"FIA",727.825,0,10)

"FIA",727.825,0,11)

"FIA",727.825,0,"RLRO")

"FIA",727.825,0,"VR")
3.0^ECX
"FIA",727.825,727.825)
1
"FIA",727.825,727.825,16)

"FIA",727.825,727.825,18)

"FIA",727.825,727.825,20)

"FIA",727.825,727.825,100)

"FIA",727.825,727.825,101)

"FIA",727.825,727.825,102)

"FIA",727.825,727.825,103)

"FIA",727.825,727.825,104)

"FIA",727.825,727.825,105)

"FIA",727.826)
PROSTHETICS EXTRACT
"FIA",727.826,0)
^ECX(727.826,
"FIA",727.826,0,0)
727.826
"FIA",727.826,0,1)
y^n^p^^^^n^^n
"FIA",727.826,0,10)

"FIA",727.826,0,11)

"FIA",727.826,0,"RLRO")

"FIA",727.826,0,"VR")
3.0^ECX
"FIA",727.826,727.826)
1
"FIA",727.826,727.826,10)

"FIA",727.827)
CLINIC EXTRACT
"FIA",727.827,0)
^ECX(727.827,
"FIA",727.827,0,0)
727.827
"FIA",727.827,0,1)
y^n^p^^^^n^^n
"FIA",727.827,0,10)

"FIA",727.827,0,11)

"FIA",727.827,0,"RLRO")

"FIA",727.827,0,"VR")
3.0^ECX
"FIA",727.827,727.827)
1
"FIA",727.827,727.827,96)

"FIA",727.827,727.827,97)

"FIA",727.827,727.827,98)

"FIA",727.827,727.827,99)

"FIA",727.827,727.827,100)

"FIA",727.827,727.827,101)

"FIA",727.827,727.827,102)

"FIA",727.827,727.827,103)

"FIA",727.827,727.827,104)

"FIA",727.827,727.827,105)

"FIA",727.827,727.827,106)

"FIA",727.827,727.827,107)

"FIA",727.827,727.827,108)

"FIA",727.827,727.827,109)

"FIA",727.827,727.827,110)

"INIT")
POST^ECX3P132
"KRN",.4,2642,-1)
0^1
"KRN",.4,2642,0)
ECX CLINIC REVIEW EXPORT^3110829.1348^@^728.44^^@^3110913
"KRN",.4,2642,"DXS",1,9.2)
S DIP(2)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^",DIP(1)=$G(X) S X=$P(DIP(2),U,7) S:X X=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3) S Y=X,X=DIP(1),X=X S X=X
"KRN",.4,2642,"DXS",2,9.2)
S DIP(102)=$S($D(^SC(D0,"I")):^("I"),1:"") S X="^",DIP(101)=$G(X) S X=$P(DIP(102),U,1) S:X X=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3) S Y=X,X=DIP(101),X=X S X=X
"KRN",.4,2642,"DXS",3,9.2)
S DIP(102)=$S($D(^SC(D0,"I")):^("I"),1:"") S X="^",DIP(101)=$G(X) S X=$P(DIP(102),U,2) S:X X=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3) S Y=X,X=DIP(101),X=X S X=X
"KRN",.4,2642,"F",1)
0;L5~S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^"_$P($G(^SC(+$P(DIP(1),U,1),0)),U) W X K DIP;Z;""^"_CLINIC NAME"~
"KRN",.4,2642,"F",2)
S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^"_$P(DIP(1),U,2) W X K DIP;L4;Z;""^"_STOP CODE"~
"KRN",.4,2642,"F",3)
S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^"_$P(DIP(1),U,3) W X K DIP;L4;Z;""^"_CREDIT STOP CODE"~
"KRN",.4,2642,"F",4)
S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^"_$P(DIP(1),U,4) W X K DIP;L4;Z;""^"_DSS STOP CODE"~
"KRN",.4,2642,"F",5)
S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^"_$P(DIP(1),U,5) W X K DIP;L4;Z;""^"_DSS CREDIT STOP CODE"~
"KRN",.4,2642,"F",6)
S DIP(2)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^",DIP(1)=$G(X) S X=$P(DIP(2),U,6),X=X S Y=X,X=DIP(1),X=X S X=X_Y W X K DIP;L2;Z;""^"_INTERNAL(ACTION TO SEND)"~
"KRN",.4,2642,"F",7)
X DXS(1,9.2) S X=X_Y W X K DIP;L9;Z;""^"_NUMDATE(DATE LAST REVIEWED)"~
"KRN",.4,2642,"F",8)
S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^"_$P($G(^ECX(728.441,+$P(DIP(1),U,8),0)),U) W X K DIP;L5;Z;""^"_NATIONAL CODE"~
"KRN",.4,2642,"F",9)
-44,^SC(^^S I(0,0)=D0 S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X=$P(DIP(1),U,1),X=X S D(0)=+X;Z;"CLINIC NAME:"~
"KRN",.4,2642,"F",10)
-44,X DXS(2,9.2) S X=X_Y W X K DIP;L9;Z;""^"_NUMDATE(INACTIVATE DATE)"~-44,X DXS(3,9.2) S X=X_Y W X K DIP;L9;Z;""^"_NUMDATE(REACTIVATE DATE)"~
"KRN",.4,2642,"F",11)
-44,S DIP(102)=$C(59)_$P($G(^DD(44,2,0)),U,3),DIP(101)=$S($D(^SC(D0,0)):^(0),1:"") S X="^"_$P($P(DIP(102),$C(59)_$P(DIP(101),U,3)_":",2),$C(59)) W X K DIP;L4;Z;""^"_TYPE"~
"KRN",.4,2642,"F",12)
-44,S DIP(101)=$S($D(^SC(D0,"SL")):^("SL"),1:"") S X="^"_$P(DIP(101),U,1) W X K DIP;L4;Z;""^"_LENGTH OF APP'T"~
"KRN",.4,2642,"F",13)
-44,S DIP(102)=$S($D(^SC(D0,0)):^(0),1:"") S X="^",DIP(101)=$G(X) S X=$P(DIP(102),U,15),X=X S Y=X,X=DIP(101),X=X S X=X_Y W X K DIP;L4;Z;""^"_INTERNAL(DIVISION)"~
"KRN",.4,2642,"F",14)
-44,S DIP(101)=$S($D(^SC(D0,"AT")):^("AT"),1:"") S X="^"_$P($G(^SD(409.1,+$P(DIP(101),U,1),0)),U) W X K DIP;L11;Z;""^"_DEFAULT APPOINTMENT TYPE"~
"KRN",.4,2642,"F",15)
-44,S DIP(102)=$C(59)_$P($G(^DD(44,2502,0)),U,3),DIP(101)=$S($D(^SC(D0,0)):^(0),1:"") S X="^"_$P($P(DIP(102),$C(59)_$P(DIP(101),U,17)_":",2),$C(59)) W X K DIP;Z;""^"_NON-COUNT CLINIC? (Y OR N)"~
"KRN",.4,2642,"H")
@@
"KRN",19.1,626,-1)
0^1
"KRN",19.1,626,0)
ECX DSS TEST^DSS FY Conversion Testing
"KRN",19.1,626,1,0)
^19.11^8^8^3110513^^^^
"KRN",19.1,626,1,1,0)
This key controls access to the ECX FISCAL YEAR EXTRACT option.  It 
"KRN",19.1,626,1,2,0)
should be given only to holders of the ECXMGR key whenever the site
"KRN",19.1,626,1,3,0)
has been enrolled as an official DSS test site for fiscal year
"KRN",19.1,626,1,4,0)
conversion.
"KRN",19.1,626,1,5,0)
  
"KRN",19.1,626,1,6,0)
This key should be removed from the user(s) whenever the
"KRN",19.1,626,1,7,0)
nationally released version of the DSS Fiscal Year patch is
"KRN",19.1,626,1,8,0)
installed.
"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"PKG",513,-1)
1^1
"PKG",513,0)
DSS EXTRACTS^ECX^Decision Support System. (DSS)
"PKG",513,20,0)
^9.402P^^
"PKG",513,22,0)
^9.49I^1^1
"PKG",513,22,1,0)
3.0^3010618^2980112^11714
"PKG",513,22,1,"PAH",1,0)
132^3110920^101049
"PKG",513,22,1,"PAH",1,1,0)
^^1^1^3110920
"PKG",513,22,1,"PAH",1,1,1,0)
FY12 DSS ENHANCEMENTS
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
27
"RTN","ECX3P132")
0^^B8865916^n/a
"RTN","ECX3P132",1,0)
ECX3P132 ;ALB/MRY - DSS FY2012 Conversion, Post-init ;4/12/11  13:37
"RTN","ECX3P132",2,0)
 ;;3.0;DSS EXTRACTS;**132**;Dec 22, 1997;Build 18
"RTN","ECX3P132",3,0)
 ;
"RTN","ECX3P132",4,0)
 ;****************************************
"RTN","ECX3P132",5,0)
 ;Every year: Populate FY Year's version
"RTN","ECX3P132",6,0)
 ; TESTON^ECXTREX(XPDNM,"FY2012")
"RTN","ECX3P132",7,0)
 ;****************************************
"RTN","ECX3P132",8,0)
 ;
"RTN","ECX3P132",9,0)
POST ;post-init
"RTN","ECX3P132",10,0)
 D TEST,MENU,INACT,BCM
"RTN","ECX3P132",11,0)
 Q
"RTN","ECX3P132",12,0)
 ;
"RTN","ECX3P132",13,0)
TEST ;turn-on fld #73 in file #728 for Field Test Site;
"RTN","ECX3P132",14,0)
 ;allows use of option ECX FISCAL YEAR EXTRACT by test sites;
"RTN","ECX3P132",15,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P132",16,0)
 D MES^XPDUTL("Providing special menu option access for DSS FY Conversion test sites.")
"RTN","ECX3P132",17,0)
 D TESTON^ECXTREX(XPDNM,"FY2012")
"RTN","ECX3P132",18,0)
 ;D MES^XPDUTL(" ")
"RTN","ECX3P132",19,0)
 ;D MES^XPDUTL("Remember to assign the ECX DSS TEST key to qualified users.")
"RTN","ECX3P132",20,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P132",21,0)
 ;if this is the national released version, then fld #73 will be turned-off
"RTN","ECX3P132",22,0)
 ;the first time any user attempts to use ECX FISCAL YEAR EXTRACT option
"RTN","ECX3P132",23,0)
 Q
"RTN","ECX3P132",24,0)
 ;
"RTN","ECX3P132",25,0)
MENU ;Remove options from menu and place out of order
"RTN","ECX3P132",26,0)
 N MENU,OPTION,CHECK,IEN
"RTN","ECX3P132",27,0)
 S OPTION="ECXNURS",MENU="ECXMENU"
"RTN","ECX3P132",28,0)
 S CHECK=$$DELETE^XPDMENU(MENU,OPTION)
"RTN","ECX3P132",29,0)
 D BMES^XPDUTL(">>> "_OPTION_" OPTION "_$S(CHECK:"REMOVED FROM ",1:"DOES NOT EXIST IN ")_MENU_" <<<")
"RTN","ECX3P132",30,0)
 D OUT^XPDMENU(OPTION,"OUT OF ORDER, DO NOT USE THIS OPTION!!!")
"RTN","ECX3P132",31,0)
 D BMES^XPDUTL(">>> "_OPTION_" OPTION PLACED OUT ORDER <<<")
"RTN","ECX3P132",32,0)
 S OPTION="ECX NUR SOURCE AUDIT",MENU="ECX SOURCE AUDITS"
"RTN","ECX3P132",33,0)
 S CHECK=$$DELETE^XPDMENU(MENU,OPTION)
"RTN","ECX3P132",34,0)
 D BMES^XPDUTL(">>> "_OPTION_" OPTION "_$S(CHECK:"REMOVED FROM ",1:"DOES NOT EXIST IN ")_MENU_" <<<")
"RTN","ECX3P132",35,0)
 D OUT^XPDMENU(OPTION,"OUT OF ORDER, DO NOT USE THIS OPTION!!!")
"RTN","ECX3P132",36,0)
 D BMES^XPDUTL(">>> "_OPTION_" OPTION PLACED OUT ORDER <<<")
"RTN","ECX3P132",37,0)
 Q
"RTN","ECX3P132",38,0)
 ;
"RTN","ECX3P132",39,0)
INACT ;inactivate NUR in EXTRACT DEFINITION file (#727.1)
"RTN","ECX3P132",40,0)
 N ECXFDA,ECXERR,ECXMSG,ECXDA,ECXHDR,ECXOFF
"RTN","ECX3P132",41,0)
 D MES^XPDUTL("   Inactivating NUR entry ...")
"RTN","ECX3P132",42,0)
 F ECXOFF=1:1 S ECXHDR=$P($T(HDRS+ECXOFF),";;",2) Q:ECXHDR=""  D
"RTN","ECX3P132",43,0)
 .S ECXDA=+$O(^ECX(727.1,"C",ECXHDR,0))
"RTN","ECX3P132",44,0)
 .I 'ECXDA D  Q
"RTN","ECX3P132",45,0)
 ..K ECXMSG
"RTN","ECX3P132",46,0)
 ..S ECXMSG(1)=" "
"RTN","ECX3P132",47,0)
 ..S ECXMSG(2)="   ** ERROR INACTIVATING "_ECXHDR_" **"
"RTN","ECX3P132",48,0)
 ..S ECXMSG(3)="      Entry not found in file"
"RTN","ECX3P132",49,0)
 ..D MES^XPDUTL(.ECXMSG)
"RTN","ECX3P132",50,0)
 .K ECXFDA,ECXERR
"RTN","ECX3P132",51,0)
 .S ECXFDA(727.1,ECXDA_",",13)=1
"RTN","ECX3P132",52,0)
 .D FILE^DIE("","ECXFDA","ECXERR")
"RTN","ECX3P132",53,0)
 .Q:'$D(ECXERR)
"RTN","ECX3P132",54,0)
 .D BMES^XPDUTL("   ** ERROR INACTIVING "_ECXHDR_" **")
"RTN","ECX3P132",55,0)
 .K ECXMSG D MSG^DIALOG("AE",.ECXMSG,65,6,"ECXERR")
"RTN","ECX3P132",56,0)
 .D MES^XPDUTL(.ECXERR)
"RTN","ECX3P132",57,0)
 D BMES^XPDUTL("- Done -")
"RTN","ECX3P132",58,0)
 Q
"RTN","ECX3P132",59,0)
 ;
"RTN","ECX3P132",60,0)
BCM ;change RUNNING PIECE from 27 to 29
"RTN","ECX3P132",61,0)
 N DIE,DIC,DA,DR,X,Y
"RTN","ECX3P132",62,0)
 D BMES^XPDUTL("Changing BCM Extract's RUNNING PIECE value from 27 to 29")
"RTN","ECX3P132",63,0)
 S DIC="^ECX(727.1,",DIC(0)="X"
"RTN","ECX3P132",64,0)
 S X="BAR CODE MEDICATION ADMINISTRATION"
"RTN","ECX3P132",65,0)
 D ^DIC
"RTN","ECX3P132",66,0)
 I (Y<0) D  Q
"RTN","ECX3P132",67,0)
 . D BMES^XPDUTL("   BAR CODE MEDICATION ADMINISTRATION Extract not found.")
"RTN","ECX3P132",68,0)
 S DIE=DIC
"RTN","ECX3P132",69,0)
 S DA=+Y
"RTN","ECX3P132",70,0)
 S DR="11///29"
"RTN","ECX3P132",71,0)
 D ^DIE
"RTN","ECX3P132",72,0)
 D MES^XPDUTL("   BCM Extract's RUNNING PIECE value successfully changed to 29.")
"RTN","ECX3P132",73,0)
 Q
"RTN","ECX3P132",74,0)
 ;
"RTN","ECX3P132",75,0)
HDRS ;List of headers to be inactivated
"RTN","ECX3P132",76,0)
 ;;NUR
"RTN","ECX3P132",77,0)
 ;;
"RTN","ECX3P132",78,0)
 Q
"RTN","ECXADM")
0^9^B48340472^B47059189
"RTN","ECXADM",1,0)
ECXADM ;ALB/JAP,BIR/DMA,CML,PTD-Admissions Extract ; 10/15/07 12:14pm
"RTN","ECXADM",2,0)
 ;;3.0;DSS EXTRACTS;**1,4,11,8,13,24,33,39,46,71,84,92,107,105,120,127,132**;Dec 22, 1997;Build 18
"RTN","ECXADM",3,0)
BEG ;entry point from option
"RTN","ECXADM",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXADM",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXADM",6,0)
 Q
"RTN","ECXADM",7,0)
 ;
"RTN","ECXADM",8,0)
START ; start package specific extract
"RTN","ECXADM",9,0)
 S QFLG=0
"RTN","ECXADM",10,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXADM",11,0)
 F  S ECD=$O(^DGPM("ATT1",ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)  D
"RTN","ECXADM",12,0)
 .F  S ECDA=$O(^DGPM("ATT1",ECD,ECDA)) Q:ECDA=""  D
"RTN","ECXADM",13,0)
 ..I $D(^DGPM(ECDA,0)) D
"RTN","ECXADM",14,0)
 ...S EC=^DGPM(ECDA,0),ECXDFN=$P(EC,U,3) D GET
"RTN","ECXADM",15,0)
 Q
"RTN","ECXADM",16,0)
 ;
"RTN","ECXADM",17,0)
GET ;gather extract data
"RTN","ECXADM",18,0)
 N ADM,W,X,ECXNPRFI,ECXATTPC,ECXPRVPC,ECXEST,ECXAOT
"RTN","ECXADM",19,0)
 ;patient demographics
"RTN","ECXADM",20,0)
 S ECXERR=0 D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXADM",21,0)
 Q:ECXERR
"RTN","ECXADM",22,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXADM",23,0)
 S ECXFAC=$P($G(^DIC(42,+$P(EC,U,6),0)),U,11)
"RTN","ECXADM",24,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC)  ;Get production division
"RTN","ECXADM",25,0)
 ;admission data
"RTN","ECXADM",26,0)
 S ELGA=$P($G(^DIC(8,+$P(EC,U,20),0)),U,9)
"RTN","ECXADM",27,0)
 I ELGA S ELGA=$$ELIG^ECXUTL3(ELGA,ECXSVC)
"RTN","ECXADM",28,0)
 S (ECDRG,ECDIA,ECXSADM,ECXADMS,ECXAOT)="",ECPTF=+$P(EC,U,16) I ECPTF,$D(^DGPT(ECPTF,"M")) D PTF
"RTN","ECXADM",29,0)
 ;get encounter classification
"RTN","ECXADM",30,0)
 S (ECXAO,ECXECE,ECXIR,ECXMIL,ECXHNC,ECXSHAD)="",ECXVISIT=$P(EC,U,27)
"RTN","ECXADM",31,0)
 I ECXVISIT'="" D
"RTN","ECXADM",32,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXADM",33,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXADM",34,0)
 .S ECXMIL=$G(ECXVIST("MST")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXADM",35,0)
 .S ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXADM",36,0)
 ;use movement record date & time
"RTN","ECXADM",37,0)
 S ADM=$$INP^ECXUTL2(ECXDFN,ECD)
"RTN","ECXADM",38,0)
 S ECXA=$P(ADM,U),ECXMN=$P(ADM,U,2),ECXSPC=$P(ADM,U,3)
"RTN","ECXADM",39,0)
 S (ECXADMDT,ECXDATE)=$P(ADM,U,4)
"RTN","ECXADM",40,0)
 ;if movement# doesn't match cross-ref ien, then quit
"RTN","ECXADM",41,0)
 Q:ECXMN'=ECDA
"RTN","ECXADM",42,0)
 S ECTM=$$ECXTIME^ECXUTL(ECXDATE)
"RTN","ECXADM",43,0)
 S ECXDATE=$$ECXDATE^ECXUTL(ECXDATE,ECXYM)
"RTN","ECXADM",44,0)
 S W=$P(ADM,U,9)
"RTN","ECXADM",45,0)
 S ECXWRD=$P(W,";",1),ECXFAC=$P(W,";",2),ECXDSSD=$P(W,";",3)
"RTN","ECXADM",46,0)
 S ECXPRV=$P(ADM,U,7),ECXPRNPI="",ECXATT=$P(ADM,U,8),ECXATNPI=""
"RTN","ECXADM",47,0)
 S ECXDOM=$P(ADM,U,10),ECXATTPC=$P(ADM,U,12),ECXPRVPC=$P(ADM,U,11)
"RTN","ECXADM",48,0)
 N ECXUSRTN
"RTN","ECXADM",49,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$E(ECXATT,2,$L(ECXATT)),ECD)
"RTN","ECXADM",50,0)
 S:+ECXUSRTN'>0 ECXUSRTN=""
"RTN","ECXADM",51,0)
 S ECATTNPI=$P(ECXUSRTN,U)
"RTN","ECXADM",52,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$E(ECXPRV,2,$L(ECXPRV)),ECD)
"RTN","ECXADM",53,0)
 S:+ECXUSRTN'>0 ECXUSRTN=""
"RTN","ECXADM",54,0)
 S ECPWNPI=$P(ECXUSRTN,U)
"RTN","ECXADM",55,0)
 ;
"RTN","ECXADM",56,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXADM",57,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXSPC)
"RTN","ECXADM",58,0)
 ;
"RTN","ECXADM",59,0)
 ;- Patient Type
"RTN","ECXADM",60,0)
 S ECXPTYPE=$$TYPE^ECXUTL5(ECXDFN)
"RTN","ECXADM",61,0)
 ;
"RTN","ECXADM",62,0)
 ;- If null encounter number, don't file record
"RTN","ECXADM",63,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,,ECXSPC,ECXOBS,ECHEAD,,)
"RTN","ECXADM",64,0)
 D:ECXENC'="" FILE
"RTN","ECXADM",65,0)
 Q
"RTN","ECXADM",66,0)
 ;
"RTN","ECXADM",67,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographic data
"RTN","ECXADM",68,0)
 N OK,X
"RTN","ECXADM",69,0)
 K ECXPAT
"RTN","ECXADM",70,0)
 S ECXDATE=$P(ECXDATE,".")
"RTN","ECXADM",71,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;2;3;4;5",.ECXPAT)
"RTN","ECXADM",72,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXADM",73,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXADM",74,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXADM",75,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXADM",76,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXADM",77,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXADM",78,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXADM",79,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXADM",80,0)
 S ECXVNS=ECXPAT("VIETNAM")
"RTN","ECXADM",81,0)
 S ECXPOS=ECXPAT("POS")
"RTN","ECXADM",82,0)
 S ECXMNS=ECXPAT("MEANS")
"RTN","ECXADM",83,0)
 S ECXRACE=ECXPAT("RACE")
"RTN","ECXADM",84,0)
 S ECXRELG=ECXPAT("RELIGION")
"RTN","ECXADM",85,0)
 S ECXEMP=ECXPAT("EMPLOY")
"RTN","ECXADM",86,0)
 S ECXMAR=ECXPAT("MARITAL")
"RTN","ECXADM",87,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXADM",88,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXADM",89,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXADM",90,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXADM",91,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXADM",92,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXADM",93,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXADM",94,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXADM",95,0)
 S ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXADM",96,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXADM",97,0)
 S ECXSVC=ECXPAT("SC%")
"RTN","ECXADM",98,0)
 S ECXPHI=ECXPAT("PHI")
"RTN","ECXADM",99,0)
 S ECXHI=+$$INSUR^IBBAPI(ECXDFN,ECXDATE)
"RTN","ECXADM",100,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXADM",101,0)
 ;
"RTN","ECXADM",102,0)
 ;-OEF/OIF Data
"RTN","ECXADM",103,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXADM",104,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXADM",105,0)
 ;
"RTN","ECXADM",106,0)
 ;- Agent Orange location
"RTN","ECXADM",107,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXADM",108,0)
 ;
"RTN","ECXADM",109,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXADM",110,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXADM",111,0)
 ; - PROJ 112/SHAD Indicator
"RTN","ECXADM",112,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXADM",113,0)
 ; ******* - PATCH 127, ADD PATCAT CODE - ********
"RTN","ECXADM",114,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXADM",115,0)
 ; - Race and Ethnicity
"RTN","ECXADM",116,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXADM",117,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXADM",118,0)
 ;
"RTN","ECXADM",119,0)
 ;get primary care data
"RTN","ECXADM",120,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXADM",121,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXADM",122,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXADM",123,0)
 ;get combat veteran data
"RTN","ECXADM",124,0)
 I $$CVEDT^ECXUTL5(ECXDFN,ECD)
"RTN","ECXADM",125,0)
 ;get national patient record flag if exist
"RTN","ECXADM",126,0)
 D NPRF^ECXUTL5
"RTN","ECXADM",127,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXADM",128,0)
 S ECXERI=ECXPAT("ERI")
"RTN","ECXADM",129,0)
 Q
"RTN","ECXADM",130,0)
 ;
"RTN","ECXADM",131,0)
PTF ; get admitting DRG, diagnosis, source of admission from PTF
"RTN","ECXADM",132,0)
 ;use number for DRG and .01 for diagnosis
"RTN","ECXADM",133,0)
 N EC,EC1,ECX
"RTN","ECXADM",134,0)
 S EC=1 I $D(^DGPT(ECPTF,"M",2,0)) S EC=2
"RTN","ECXADM",135,0)
 S EC1=+$P(^DGPT(ECPTF,"M",EC,0),U,5)
"RTN","ECXADM",136,0)
 S ECDRG=$P($G(^DGPT(ECPTF,"M",EC,"P")),U)
"RTN","ECXADM",137,0)
 S ECDIA=$P($G(^ICD9(EC1,0)),U)
"RTN","ECXADM",138,0)
 S ECX=+$P($G(^DGPT(ECPTF,101)),U),ECXSADM=$P($G(^DIC(45.1,ECX,0)),U,11)
"RTN","ECXADM",139,0)
 S ECXADMS=$$GET1^DIQ(45.1,ECX,.01)
"RTN","ECXADM",140,0)
 ;if source of admission = admit outpatient treatment ('1P')
"RTN","ECXADM",141,0)
 S ECXAOT=$S(($$GET1^DIQ(45.1,ECX,.01)="1P"):"Y",1:"")
"RTN","ECXADM",142,0)
 Q
"RTN","ECXADM",143,0)
 ;
"RTN","ECXADM",144,0)
FILE ;file the extract record
"RTN","ECXADM",145,0)
 ;node0
"RTN","ECXADM",146,0)
 ;facility^dfn^ssn^name^in/out^day^primary care team^sex^dob^
"RTN","ECXADM",147,0)
 ;religion^employment status^health ins^state^county^zip^
"RTN","ECXADM",148,0)
 ;eligibility^vet^vietnam^agent orange^radiation^pow^
"RTN","ECXADM",149,0)
 ;period of service^means test^marital status^
"RTN","ECXADM",150,0)
 ;ward^treating specialty^attending physician^mov #^DRG^princ diagnosis^
"RTN","ECXADM",151,0)
 ;time^primary care provider^race^primary ward provider
"RTN","ECXADM",152,0)
 ;node1
"RTN","ECXADM",153,0)
 ;mpi^dss dept^attending npi^pc provider npi^ward provider npi^
"RTN","ECXADM",154,0)
 ;admission elig^mst status^shad status^sharing payor^
"RTN","ECXADM",155,0)
 ;sharing insurance^enrollment location^
"RTN","ECXADM",156,0)
 ;pc prov person class^assoc pc provider^assoc pc prov person class^
"RTN","ECXADM",157,0)
 ;assoc pc prov npi^dom^enrollment cat^enrollment stat^encounter
"RTN","ECXADM",158,0)
 ;shad^purple heart ind.^obs pat ind^encounter num^agent orange
"RTN","ECXADM",159,0)
 ;loc^production div^pow loc^source of admission^head & neck canc. ind
"RTN","ECXADM",160,0)
 ;^ethnicity^race1^enrollment priority_sub group^user enrollee^patient
"RTN","ECXADM",161,0)
 ;type^combat vet elig^combat vet elig end date^enc cv eligible^
"RTN","ECXADM",162,0)
 ;national patient record flag ECXNPRFI^att phy person class ECXATTPC
"RTN","ECXADM",163,0)
 ;^primary ward provider person class ECXPRVPC^environ contamin ECXEST
"RTN","ECXADM",164,0)
 ;^emergency response indicator(FEMA) ECXERI^agent orange indic ECXAO
"RTN","ECXADM",165,0)
 ;^environ contam ECXECE^encoun head/neck ECXHNC^encoun MST ECXMIL^rad
"RTN","ECXADM",166,0)
 ;encoun ECXIR^ OEF/OIF ECXOEF^ OEF/OIF return date ECXOEFDT
"RTN","ECXADM",167,0)
 ;^associate pc provider npi ECASNPI^attending physician npi ECATNPI^
"RTN","ECXADM",168,0)
 ;primary care provider npi ECPTNPI^primary ward provider npi ECPWNPI^
"RTN","ECXADM",169,0)
 ;admit outpatient treatment ECXAOT^country ECXCNTRY^pat cat ECXPATCAT^
"RTN","ECXADM",170,0)
 ;admit source ECXADMS 
"RTN","ECXADM",171,0)
 ;
"RTN","ECXADM",172,0)
 ;Convert specialty to PTF Code
"RTN","ECXADM",173,0)
 ;
"RTN","ECXADM",174,0)
 N ECXDATA
"RTN","ECXADM",175,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXSPC,.ECXDATA)
"RTN","ECXADM",176,0)
 S ECXSPC=$G(ECXDATA(7))
"RTN","ECXADM",177,0)
 ;
"RTN","ECXADM",178,0)
 N DA,DIK
"RTN","ECXADM",179,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXADM",180,0)
 S ECODE=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE_U
"RTN","ECXADM",181,0)
 S ECODE=ECODE_ECPTTM_U_ECXSEX_U_ECXDOB_U_ECXRELG_U
"RTN","ECXADM",182,0)
 S ECODE=ECODE_ECXEMP_U_ECXHI_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U
"RTN","ECXADM",183,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECXVNS_U_ECXAST_U_ECXRST_U_ECXPST_U
"RTN","ECXADM",184,0)
 S ECODE=ECODE_ECXPOS_U_ECXMNS_U_ECXMAR_U
"RTN","ECXADM",185,0)
 S ECODE=ECODE_ECXWRD_U_ECXSPC_U_ECXATT_U_ECDA_U_ECDRG_U_ECDIA_U
"RTN","ECXADM",186,0)
 S ECODE=ECODE_ECTM_U_ECPTPR_U_ECXRACE_U_ECXPRV_U
"RTN","ECXADM",187,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_""_U_""_U_""_U_ELGA_U
"RTN","ECXADM",188,0)
 S ECODE1=ECODE1_ECXMST_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_U_U_ECXENRL_U_ECCLAS_U
"RTN","ECXADM",189,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXCAT_U
"RTN","ECXADM",190,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC>2010:ECXSHAD,1:"")_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXADM",191,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXPLOC_U_ECXSADM_U_ECXHNCI_U_ECXETH_U
"RTN","ECXADM",192,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXADM",193,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXADM",194,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXATTPC_U_ECXPRVPC_U_ECXEST
"RTN","ECXADM",195,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXADM",196,0)
 I ECXLOGIC>2007 S ECODE2=ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECATTNPI_U_ECPTNPI_U_ECPWNPI
"RTN","ECXADM",197,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXAOT_U_ECXCNTRY
"RTN","ECXADM",198,0)
 ; ***** ADDING PATCAT TO 9TH PIECE OF ECODE  *******
"RTN","ECXADM",199,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT
"RTN","ECXADM",200,0)
 I ECXLOGIC>2011 S ECODE2=ECODE2_U_ECXADMS
"RTN","ECXADM",201,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2)
"RTN","ECXADM",202,0)
 S ECRN=ECRN+1
"RTN","ECXADM",203,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXADM",204,0)
 Q
"RTN","ECXADM",205,0)
 ;
"RTN","ECXADM",206,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXADM",207,0)
 S ECHEAD="ADM"
"RTN","ECXADM",208,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXADM",209,0)
 Q
"RTN","ECXADM",210,0)
 ;
"RTN","ECXADM",211,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXADM",212,0)
 ; should be queued with a 1D frequency
"RTN","ECXADM",213,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXADM",214,0)
 ;
"RTN","ECXADM",215,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXADM",216,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXADM",217,0)
 ;
"RTN","ECXALAR")
0^19^B16714443^B16671173
"RTN","ECXALAR",1,0)
ECXALAR ;ALB/TMD-LAR Extract Report of Untranslatable Results ; 5/5/11 2:39pm
"RTN","ECXALAR",2,0)
 ;;3.0;DSS EXTRACTS;**46,51,112,132**;Dec 22, 1997;Build 18
"RTN","ECXALAR",3,0)
 ;
"RTN","ECXALAR",4,0)
EN ; entry point
"RTN","ECXALAR",5,0)
 N X,Y,DATE,ECRUN,ECXOPT,ECXDESC,ECXSAVE,ECXTL,ECTHLD,ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG,PG
"RTN","ECXALAR",6,0)
 S QFLG=0,ECXTL="LAR"
"RTN","ECXALAR",7,0)
 ; get today's date
"RTN","ECXALAR",8,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXALAR",9,0)
 D SETUP^ECXLABR I ECFILE="" Q
"RTN","ECXALAR",10,0)
 I '$D(ECNODE) S ECNODE=7
"RTN","ECXALAR",11,0)
 I $P($G(^ECX(728,1,ECNODE+.1)),U,ECPIECE)]"" D  Q
"RTN","ECXALAR",12,0)
 .W !!,$C(7),ECPACK," extract is already scheduled to run.  Try later",!!
"RTN","ECXALAR",13,0)
 D BEGIN Q:QFLG
"RTN","ECXALAR",14,0)
 S ECXDESC=ECXTL_" Extract Report of Untranslatable Results"
"RTN","ECXALAR",15,0)
 S ECXSAVE("EC*")=""
"RTN","ECXALAR",16,0)
 D EN^XUTMDEVQ("PROCESS^ECXALAR",ECXDESC,.ECXSAVE)
"RTN","ECXALAR",17,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXALAR",18,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXALAR",19,0)
 D HOME^%ZIS
"RTN","ECXALAR",20,0)
 D AUDIT^ECXKILL
"RTN","ECXALAR",21,0)
 Q
"RTN","ECXALAR",22,0)
 ;
"RTN","ECXALAR",23,0)
BEGIN ; display report description
"RTN","ECXALAR",24,0)
 W @IOF,!,"This report prints a listing of results that are not translatable i.e. have",!,"no entry in the Lab Results Translation File (#727.7)."
"RTN","ECXALAR",25,0)
 W !!,"This report is a pre-extract type audit report and should be run prior to the",!,"generation of the actual extract.  Running this report has no effect on the",!,"actual extract."
"RTN","ECXALAR",26,0)
 W !!,"Enter the date range for which you would like to scan the ",ECXTL," Extract records.",!
"RTN","ECXALAR",27,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXALAR",28,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXALAR",29,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXALAR",30,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXALAR",31,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXALAR",32,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXALAR",33,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXALAR",34,0)
 .I Y<ECSD D  Q
"RTN","ECXALAR",35,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXALAR",36,0)
 ..W !,"Please try again.",!!
"RTN","ECXALAR",37,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXALAR",38,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXALAR",39,0)
 ..W !,"Please try again.",!!
"RTN","ECXALAR",40,0)
 .S ECED=Y
"RTN","ECXALAR",41,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXALAR",42,0)
 .S DONE=1
"RTN","ECXALAR",43,0)
 Q
"RTN","ECXALAR",44,0)
 ;
"RTN","ECXALAR",45,0)
PROCESS ; entry point for queued report
"RTN","ECXALAR",46,0)
 S ZTREQ="@"
"RTN","ECXALAR",47,0)
 S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)="R"
"RTN","ECXALAR",48,0)
 S ECXERR=0 D EN^ECXALAR2 S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)="" Q:ECXERR
"RTN","ECXALAR",49,0)
 S QFLG=0 D PRINT
"RTN","ECXALAR",50,0)
 Q
"RTN","ECXALAR",51,0)
 ;
"RTN","ECXALAR",52,0)
PRINT ; process temp file and print report
"RTN","ECXALAR",53,0)
 N X,CNT,LN,REC,ECXDFN,ECXSSN,ECXPNM,ECRS,ECTC,ECFMDT,ECDTM,ECXTNM
"RTN","ECXALAR",54,0)
 U IO
"RTN","ECXALAR",55,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXALAR",56,0)
 S (PG,QFLG,GTOT)=0,$P(LN,"-",80)=""
"RTN","ECXALAR",57,0)
 D HEADER Q:QFLG
"RTN","ECXALAR",58,0)
 S COUNT=0,CNT="" F  S CNT=$O(^TMP($J,"ECXALAR2",CNT)) Q:CNT=""!QFLG  S REC=^(CNT) D
"RTN","ECXALAR",59,0)
 .S ECXDFN=$P(REC,U),ECTC=$P(REC,U,4),ECRS=$P(REC,U,5)
"RTN","ECXALAR",60,0)
 .S ECFMDT=$P(REC,U,2)_"."_$P(REC,U,3),ECDTM=$$FMTE^XLFDT(ECFMDT,2)
"RTN","ECXALAR",61,0)
 .S (ECXPNM,ECXSSN)=""
"RTN","ECXALAR",62,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,,"1;",.ECXPAT)
"RTN","ECXALAR",63,0)
 .I OK S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN")
"RTN","ECXALAR",64,0)
 .S ECXTNM=$O(^ECX(727.29,"AC",+$G(ECTC),0)),ECXTNM=$P(^ECX(727.29,+$G(ECXTNM),0),U,3)
"RTN","ECXALAR",65,0)
 .I $Y+3>IOSL D HEADER
"RTN","ECXALAR",66,0)
 .W !,ECXPNM,?5,ECXSSN,?17,ECDTM,?32,$J(ECTC,4),?38,$E(ECXTNM,1,20),?60,$E(ECRS,1,20)
"RTN","ECXALAR",67,0)
 .S COUNT=COUNT+1
"RTN","ECXALAR",68,0)
 Q:QFLG
"RTN","ECXALAR",69,0)
 I COUNT=0 W !!,?8,"No untranslatable results for this extract"
"RTN","ECXALAR",70,0)
CLOSE ;
"RTN","ECXALAR",71,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXALAR",72,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXALAR",73,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXALAR",74,0)
 Q
"RTN","ECXALAR",75,0)
 ;
"RTN","ECXALAR",76,0)
HEADER ;header and page control
"RTN","ECXALAR",77,0)
 N SS,JJ
"RTN","ECXALAR",78,0)
 I $E(IOST)="C" D
"RTN","ECXALAR",79,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXALAR",80,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXALAR",81,0)
 Q:QFLG
"RTN","ECXALAR",82,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXALAR",83,0)
 W !,ECXTL_" Extract Untranslatable Results Audit Report",?71,"Page: "_PG
"RTN","ECXALAR",84,0)
 W !,"Start Date: ",ECSTART
"RTN","ECXALAR",85,0)
 W !,"End Date:   ",ECEND,?49,"Report Run Date:  "_ECRUN
"RTN","ECXALAR",86,0)
 W !!,"Pat.",?5,"SSN",?17,"Date/Time",?32,"Test",?38,"Test Name",?60,"Result"
"RTN","ECXALAR",87,0)
 W !,"Name",?17,"Collected",?32,"Code"
"RTN","ECXALAR",88,0)
 W !,LN,!
"RTN","ECXALAR",89,0)
 Q
"RTN","ECXALAR",90,0)
 ;
"RTN","ECXAPRO")
0^17^B49978410^B45129674
"RTN","ECXAPRO",1,0)
ECXAPRO ;ALB/JAP - PRO Extract Audit Report ; 4/19/11 2:15pm
"RTN","ECXAPRO",2,0)
 ;;3.0;DSS EXTRACTS;**9,21,33,36,132**;Dec 22, 1997;Build 18
"RTN","ECXAPRO",3,0)
 ;
"RTN","ECXAPRO",4,0)
EN ;entry point for PRO extract audit report
"RTN","ECXAPRO",5,0)
 N %X,%Y,DIV,X,Y,DIC,DA,DR,DIQ,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXAPRO",6,0)
 S ECXERR=0
"RTN","ECXAPRO",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXAPRO",8,0)
 S ECXHEAD="PRO",ECXAUD=0
"RTN","ECXAPRO",9,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXAPRO",10,0)
 ;determine primary division
"RTN","ECXAPRO",11,0)
 S ECXPRIME=$$PDIV^ECXPUTL
"RTN","ECXAPRO",12,0)
 I ECXPRIME=0 D ^ECXKILL Q
"RTN","ECXAPRO",13,0)
 S DA=ECXPRIME,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99" D EN^DIQ1
"RTN","ECXAPRO",14,0)
 S ECXPRIME=ECXPRIME_U_$G(ECXDIC(4,DA,99,"I"))_U_$G(ECXDIC(4,DA,.01,"I"))
"RTN","ECXAPRO",15,0)
 ;select 1 or more prosthetics divisions for report
"RTN","ECXAPRO",16,0)
 D PRO^ECXDVSN2(DUZ,ECXPRIME,.ECXDIV,.ECXALL,.ECXERR)
"RTN","ECXAPRO",17,0)
 I ECXERR D  Q
"RTN","ECXAPRO",18,0)
 .D ^ECXKILL W !!,?5,"Try again later... exiting.",!
"RTN","ECXAPRO",19,0)
 ;select extract
"RTN","ECXAPRO",20,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXAPRO",21,0)
 I ECXERR=1 D  Q
"RTN","ECXAPRO",22,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAPRO",23,0)
 .D AUDIT^ECXKILL
"RTN","ECXAPRO",24,0)
 ;if user's selected division doesn't match extract's division, then quit
"RTN","ECXAPRO",25,0)
 I +ECXPRIME'=ECXARRAY("DIV") D  Q
"RTN","ECXAPRO",26,0)
 .S DIV=+ECXARRAY("DIV") S:$D(^DIC(4,DIV,0)) DIV=$P(^(0),U,1)
"RTN","ECXAPRO",27,0)
 .W !!,?5,"Your primary division ("_$P(ECXPRIME,U,3)_") does not match the"
"RTN","ECXAPRO",28,0)
 .W !,?5,"division ("_DIV_") associated with Extract #"_ECXARRAY("EXTRACT")_"."
"RTN","ECXAPRO",29,0)
 .W !!,?5,"Try again... exiting.",!
"RTN","ECXAPRO",30,0)
 .I $E(IOST)="C" D
"RTN","ECXAPRO",31,0)
 ..S SS=20-$Y F JJ=1:1:SS W !
"RTN","ECXAPRO",32,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAPRO",33,0)
 ..W @IOF
"RTN","ECXAPRO",34,0)
 ;select summary or detail
"RTN","ECXAPRO",35,0)
 K DIR S DIR(0)="S^D:DETAIL;S:SUMMARY",DIR("A")="Type of Report",DIR("B")="SUMMARY"
"RTN","ECXAPRO",36,0)
 D ^DIR K DIR
"RTN","ECXAPRO",37,0)
 I $D(DIRUT)!($D(DTOUT)) D  Q
"RTN","ECXAPRO",38,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAPRO",39,0)
 .D AUDIT^ECXKILL
"RTN","ECXAPRO",40,0)
 S ECXREPT=Y
"RTN","ECXAPRO",41,0)
 ;continue with detail report
"RTN","ECXAPRO",42,0)
 I ECXREPT="D" D
"RTN","ECXAPRO",43,0)
 .F  D ASK2^ECXAPRO2 Q:$D(DIRUT)!($D(DTOUT))
"RTN","ECXAPRO",44,0)
 ;continue with summary report
"RTN","ECXAPRO",45,0)
 I ECXREPT="S" D
"RTN","ECXAPRO",46,0)
 .S ECXPGM="TASK^ECXAPRO",ECXDESC="PRO Extract Audit Report"
"RTN","ECXAPRO",47,0)
 .S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")="",ECXSAVE("ECXREPT")="",ECXSAVE("ECXPRIME")="",ECXSAVE("ECXALL")=""
"RTN","ECXAPRO",48,0)
 .W !
"RTN","ECXAPRO",49,0)
 .;determine output device and queue if requested
"RTN","ECXAPRO",50,0)
 .D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE) I ECXSAVE("POP")=1 D  Q
"RTN","ECXAPRO",51,0)
 ..W !!,?5,"Try again later... exiting.",!
"RTN","ECXAPRO",52,0)
 ..D AUDIT^ECXKILL
"RTN","ECXAPRO",53,0)
 .I ECXSAVE("ZTSK")=0 D
"RTN","ECXAPRO",54,0)
 ..K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAPRO",55,0)
 ..D PROCESS,DISP^ECXAPRO1
"RTN","ECXAPRO",56,0)
 ..;allow user to get details
"RTN","ECXAPRO",57,0)
 ..D ASK^ECXAPRO2
"RTN","ECXAPRO",58,0)
 ;clean-up and close
"RTN","ECXAPRO",59,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAPRO",60,0)
 D HOME^%ZIS
"RTN","ECXAPRO",61,0)
 D AUDIT^ECXKILL
"RTN","ECXAPRO",62,0)
 Q
"RTN","ECXAPRO",63,0)
 ;
"RTN","ECXAPRO",64,0)
TASK ;entry point from taskmanager
"RTN","ECXAPRO",65,0)
 D PROCESS
"RTN","ECXAPRO",66,0)
 I ECXREPT="S" D DISP^ECXAPRO1
"RTN","ECXAPRO",67,0)
 I ECXREPT="D" D DISP^ECXAPRO2
"RTN","ECXAPRO",68,0)
 D AUDIT^ECXKILL
"RTN","ECXAPRO",69,0)
 Q
"RTN","ECXAPRO",70,0)
 ;
"RTN","ECXAPRO",71,0)
PROCESS ;process the data in file #727.826
"RTN","ECXAPRO",72,0)
 N J,CNT,CODE,COST,CPTNM,DATE,DESC,FLG,GN,IEN,KEY,LOC,LABLC,LABMC,NODE,PTNAM,PSASNM,QTY,QFLG,QQFLG,RD,SSN,STN,SRCE,TYPE
"RTN","ECXAPRO",73,0)
 K ^TMP($J)
"RTN","ECXAPRO",74,0)
 S (CNT,QQFLG)=0
"RTN","ECXAPRO",75,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXAPRO",76,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAPRO",77,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXAPRO",78,0)
 I ECXALL=0 S J=$O(ECXDIV(99),-1),ECXDIV=ECXDIV(J)
"RTN","ECXAPRO",79,0)
 I ECXALL=1 S ECXDIV=ECXPRIME
"RTN","ECXAPRO",80,0)
 S STN=$P(ECXDIV,U,2)
"RTN","ECXAPRO",81,0)
 ;initialize the prosthetics tmp global for cumulative data
"RTN","ECXAPRO",82,0)
 D CODE^ECXAPRO1
"RTN","ECXAPRO",83,0)
 ;gather extract data and sort by grouper number, calc flag, and nppd code
"RTN","ECXAPRO",84,0)
 S IEN="" F  S IEN=$O(^ECX(727.826,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXAPRO",85,0)
 .S ECXPRO=^ECX(727.826,IEN,0)
"RTN","ECXAPRO",86,0)
 .;
"RTN","ECXAPRO",87,0)
 .;- Remove trailing "^" from ECXPRO if there
"RTN","ECXAPRO",88,0)
 .I $E(ECXPRO,$L(ECXPRO))="^" S ECXPRO=$E(ECXPRO,1,$L(ECXPRO)-1)
"RTN","ECXAPRO",89,0)
 .S ECXPRO=ECXPRO_U_$P(^ECX(727.826,IEN,1),U,4)
"RTN","ECXAPRO",90,0)
 .S DATE=$P(ECXPRO,U,9)
"RTN","ECXAPRO",91,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXAPRO",92,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXAPRO",93,0)
 .S DATE=$E(DATE,4,5)_"/"_$E(DATE,6,7)
"RTN","ECXAPRO",94,0)
 .S PTNAM=$P(ECXPRO,U,7),SSN=$E($P(ECXPRO,U,6),6,9)
"RTN","ECXAPRO",95,0)
 .S LOC=$P(ECXPRO,U,10),KEY=$P(ECXPRO,U,11),QTY=$P(ECXPRO,U,12)
"RTN","ECXAPRO",96,0)
 .S COST=$P(ECXPRO,U,25),LABLC=$P(ECXPRO,U,26),LABMC=$P(ECXPRO,U,27)
"RTN","ECXAPRO",97,0)
 .S GN=$P(ECXPRO,U,34),GN=$S(GN="":" ",1:GN)
"RTN","ECXAPRO",98,0)
 .;don't double count lab items
"RTN","ECXAPRO",99,0)
 .Q:LOC["LAB"
"RTN","ECXAPRO",100,0)
 .;duplicate the logic in sort^rmprn6 that sets cost=0 if form=4
"RTN","ECXAPRO",101,0)
 .I LOC["ORD" S COST=0
"RTN","ECXAPRO",102,0)
 .S LOC=$S(LOC["ORD":$P(LOC,"ORD",1),1:$P(LOC,"NONL",1))
"RTN","ECXAPRO",103,0)
 .;quit if feeder location isn't for division selected for report
"RTN","ECXAPRO",104,0)
 .I ECXALL=1,LOC'[STN Q
"RTN","ECXAPRO",105,0)
 .I ECXALL=0,LOC'=STN Q
"RTN","ECXAPRO",106,0)
 .S TYPE=$E(KEY,6),SRCE=$E(KEY,7)
"RTN","ECXAPRO",107,0)
 .S CPTNM=$P(ECXPRO,U,15),PSASNM=$P(ECXPRO,U,33)
"RTN","ECXAPRO",108,0)
 .D GETCODE(PSASNM,.NODE)
"RTN","ECXAPRO",109,0)
 .Q:NODE=""
"RTN","ECXAPRO",110,0)
 .S CODE=$S(TYPE="X":$P(NODE,U,3),1:$P(NODE,U,4))
"RTN","ECXAPRO",111,0)
 .S FLG=$P(NODE,U,2),DESC=$P(NODE,U,5)
"RTN","ECXAPRO",112,0)
 .S ^TMP($J,"RMPRGN",STN,GN,FLG,CODE,IEN)=TYPE_U_SRCE_U_QTY_U_COST_U_LABLC_U_LABMC_U_PSASNM_U_DESC_U_PTNAM_U_SSN_U_DATE_U_LOC
"RTN","ECXAPRO",113,0)
 ;accumulate summary & detail data
"RTN","ECXAPRO",114,0)
 S GN=""
"RTN","ECXAPRO",115,0)
 F  S GN=$O(^TMP($J,"RMPRGN",STN,GN)) Q:GN=""  D
"RTN","ECXAPRO",116,0)
 .S FLG=0
"RTN","ECXAPRO",117,0)
 .F  S FLG=$O(^TMP($J,"RMPRGN",STN,GN,FLG)) Q:FLG'>0  D
"RTN","ECXAPRO",118,0)
 ..I FLG=1 D GROUP S FLG=2 Q
"RTN","ECXAPRO",119,0)
 ..S CODE=0
"RTN","ECXAPRO",120,0)
 ..F  S CODE=$O(^TMP($J,"RMPRGN",STN,GN,FLG,CODE)) Q:CODE=""  D
"RTN","ECXAPRO",121,0)
 ...S RD=0
"RTN","ECXAPRO",122,0)
 ...F  S RD=$O(^TMP($J,"RMPRGN",STN,GN,FLG,CODE,RD)) Q:RD'>0  D
"RTN","ECXAPRO",123,0)
 ....S TYPE=$P(^TMP($J,"RMPRGN",STN,GN,FLG,CODE,RD),U,1),SRCE=$P(^(RD),U,2),QTY=$P(^(RD),U,3),COST=$P(^(RD),U,4)
"RTN","ECXAPRO",124,0)
 ....S ^TMP($J,CODE,RD)=^TMP($J,"RMPRGN",STN,GN,FLG,CODE,RD)
"RTN","ECXAPRO",125,0)
 ....I TYPE="X" D REP(CODE)
"RTN","ECXAPRO",126,0)
 ....I TYPE="N" D NEW(CODE)
"RTN","ECXAPRO",127,0)
 ....I TYPE="R" D RENT(CODE)
"RTN","ECXAPRO",128,0)
 Q
"RTN","ECXAPRO",129,0)
 ;
"RTN","ECXAPRO",130,0)
GETCODE(PSAS,NODE) ;find the appropriate nppd code using psas hcpcs
"RTN","ECXAPRO",131,0)
 N DIC,X,Y,DESC,FLG,NU,REP
"RTN","ECXAPRO",132,0)
 S NODE=""
"RTN","ECXAPRO",133,0)
 S DIC="^RMPR(661.1,",DIC(0)="XZ",X=PSAS D ^DIC
"RTN","ECXAPRO",134,0)
 I Y=-1 S NODE=U_"2"_U_"R99 Z"_U_"999 Z"_U_"NO HCPCS" Q
"RTN","ECXAPRO",135,0)
 S DESC=$E($P(Y(0),U,2),1,20)
"RTN","ECXAPRO",136,0)
 S FLG=$P(Y(0),U,8) S:FLG="" FLG=2
"RTN","ECXAPRO",137,0)
 ;make sure each code at least 4 characters; group codes are 3 characters in tmp($j,rmprcode)
"RTN","ECXAPRO",138,0)
 S REP=$P(Y(0),U,6) S:$L(REP)=3 REP=REP_" " S:REP="" REP="R99 X"
"RTN","ECXAPRO",139,0)
 S NU=$P(Y(0),U,7) S:$L(NU)=3 NU=NU_" " S:NU="" NU="999 X"
"RTN","ECXAPRO",140,0)
 S NODE=U_FLG_U_REP_U_NU_U_DESC
"RTN","ECXAPRO",141,0)
 Q
"RTN","ECXAPRO",142,0)
 ;
"RTN","ECXAPRO",143,0)
GROUP ;total grouper to main key
"RTN","ECXAPRO",144,0)
 N BF,BL,BR,BCOST,BTCOST,COST,QTY,TYPE,SRCE
"RTN","ECXAPRO",145,0)
 S BF=0,BTCOST=0
"RTN","ECXAPRO",146,0)
 F  S BF=$O(^TMP($J,"RMPRGN",STN,GN,BF)) Q:BF'>0  D
"RTN","ECXAPRO",147,0)
 .S BL=0
"RTN","ECXAPRO",148,0)
 .F  S BL=$O(^TMP($J,"RMPRGN",STN,GN,BF,BL)) Q:BL=""  D
"RTN","ECXAPRO",149,0)
 ..S BR=0
"RTN","ECXAPRO",150,0)
 ..F  S BR=$O(^TMP($J,"RMPRGN",STN,GN,BF,BL,BR)) Q:BR'>0  D
"RTN","ECXAPRO",151,0)
 ...S BCOST=$P(^TMP($J,"RMPRGN",STN,GN,BF,BL,BR),U,4)
"RTN","ECXAPRO",152,0)
 ...S BTCOST=BTCOST+BCOST
"RTN","ECXAPRO",153,0)
 S BL=$O(^TMP($J,"RMPRGN",STN,GN,1,"")),BR=$O(^TMP($J,"RMPRGN",STN,GN,1,BL,""))
"RTN","ECXAPRO",154,0)
 ;calculate based on primary
"RTN","ECXAPRO",155,0)
 S TYPE=$P(^TMP($J,"RMPRGN",STN,GN,1,BL,BR),U,1),SRCE=$P(^(BR),U,2),QTY=$P(^(BR),U,3)
"RTN","ECXAPRO",156,0)
 S COST=BTCOST
"RTN","ECXAPRO",157,0)
 S ^TMP($J,BL,BR)=^TMP($J,"RMPRGN",STN,GN,1,BL,BR),$P(^TMP($J,BL,BR),U,4)=COST
"RTN","ECXAPRO",158,0)
 I TYPE="X" D REP(BL)
"RTN","ECXAPRO",159,0)
 I TYPE="N" D NEW(BL)
"RTN","ECXAPRO",160,0)
 I TYPE="R" D RENT(BL)
"RTN","ECXAPRO",161,0)
 Q
"RTN","ECXAPRO",162,0)
 ;
"RTN","ECXAPRO",163,0)
REP(C) ;calculate repair cost
"RTN","ECXAPRO",164,0)
 N LINE
"RTN","ECXAPRO",165,0)
 S LINE=C
"RTN","ECXAPRO",166,0)
 I LINE="R90 A" S SRCE="C",QTY=1
"RTN","ECXAPRO",167,0)
 I $G(^TMP($J,"R",STN,LINE))="" S ^TMP($J,"R",STN,LINE)=""
"RTN","ECXAPRO",168,0)
 I SRCE["V" S $P(^TMP($J,"R",STN,LINE),U,1)=$P(^TMP($J,"R",STN,LINE),U,1)+QTY
"RTN","ECXAPRO",169,0)
 I SRCE["C" S $P(^TMP($J,"R",STN,LINE),U,2)=$P(^TMP($J,"R",STN,LINE),U,2)+QTY
"RTN","ECXAPRO",170,0)
 S $P(^TMP($J,"R",STN,LINE),U,3)=$P(^TMP($J,"R",STN,LINE),U,3)+COST
"RTN","ECXAPRO",171,0)
 Q
"RTN","ECXAPRO",172,0)
 ;
"RTN","ECXAPRO",173,0)
NEW(C) ;calculate new costs
"RTN","ECXAPRO",174,0)
 N LINE
"RTN","ECXAPRO",175,0)
 S LINE=C
"RTN","ECXAPRO",176,0)
 I $G(^TMP($J,"N",STN,LINE))="" S ^TMP($J,"N",STN,LINE)=""
"RTN","ECXAPRO",177,0)
 I SRCE["V" S $P(^TMP($J,"N",STN,LINE),U,1)=$P(^TMP($J,"N",STN,LINE),U,1)+QTY
"RTN","ECXAPRO",178,0)
 I SRCE["C" S $P(^TMP($J,"N",STN,LINE),U,2)=$P(^TMP($J,"N",STN,LINE),U,2)+QTY
"RTN","ECXAPRO",179,0)
 S $P(^TMP($J,"N",STN,LINE),U,3)=$P(^TMP($J,"N",STN,LINE),U,3)+COST
"RTN","ECXAPRO",180,0)
 Q
"RTN","ECXAPRO",181,0)
 ;
"RTN","ECXAPRO",182,0)
RENT(C) ;calculate rental costs
"RTN","ECXAPRO",183,0)
 N LINE
"RTN","ECXAPRO",184,0)
 S LINE=C
"RTN","ECXAPRO",185,0)
 I $G(^TMP($J,"RT",STN,LINE))="" S ^TMP($J,"RT",STN,LINE)=""
"RTN","ECXAPRO",186,0)
 I SRCE["V" S $P(^TMP($J,"RT",STN,LINE),U,1)=$P(^TMP($J,"RT",STN,LINE),U,1)+QTY
"RTN","ECXAPRO",187,0)
 I SRCE["C" S $P(^TMP($J,"RT",STN,LINE),U,2)=$P(^TMP($J,"RT",STN,LINE),U,2)+QTY
"RTN","ECXAPRO",188,0)
 S $P(^TMP($J,"RT",STN,LINE),U,3)=$P(^TMP($J,"RT",STN,LINE),U,3)+COST
"RTN","ECXAPRO",189,0)
 Q
"RTN","ECXAPRO1")
0^18^B15242720^B14438659
"RTN","ECXAPRO1",1,0)
ECXAPRO1 ;ALB/JAP - PRO Extract Audit Report (cont) ;9/20/11  11:19
"RTN","ECXAPRO1",2,0)
 ;;3.0;DSS EXTRACTS;**9,21,132**;Dec 22, 1997;Build 18
"RTN","ECXAPRO1",3,0)
 ;
"RTN","ECXAPRO1",4,0)
DISP ;entry point
"RTN","ECXAPRO1",5,0)
 N DIC,DA,DR,DIRUT,DTOUT,DUOUT,JJ,SS,LN,PG,QFLG,STN,TYPE
"RTN","ECXAPRO1",6,0)
 N A1,A2,A3,CA,CB,CC,GCA,GCB,GCC,GRP,GRPHEAD,LINE,LINEP
"RTN","ECXAPRO1",7,0)
 U IO
"RTN","ECXAPRO1",8,0)
 S (QFLG,PG)=0,$P(LN,"-",80)=""
"RTN","ECXAPRO1",9,0)
 F TYPE="N","R","RT" S STN="",STN=$O(^TMP($J,TYPE,STN)) D  Q:QFLG
"RTN","ECXAPRO1",10,0)
 .D HEADER
"RTN","ECXAPRO1",11,0)
 .D CDATA Q:QFLG
"RTN","ECXAPRO1",12,0)
 I $E(IOST)'="C" D
"RTN","ECXAPRO1",13,0)
 .W @IOF S PG=PG+1
"RTN","ECXAPRO1",14,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAPRO1",15,0)
 .W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAPRO1",16,0)
 .W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAPRO1",17,0)
 .W !,"Report Run Date/Time:    "_ECXRUN,?68,"Page: ",PG
"RTN","ECXAPRO1",18,0)
 .W !!,LN,!!
"RTN","ECXAPRO1",19,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXAPRO1",20,0)
 .W @IOF
"RTN","ECXAPRO1",21,0)
 I $D(IO(0)) I IO(0)'=IO D ^%ZISC
"RTN","ECXAPRO1",22,0)
 D HOME^%ZIS
"RTN","ECXAPRO1",23,0)
 Q
"RTN","ECXAPRO1",24,0)
 ;
"RTN","ECXAPRO1",25,0)
CDATA ;accummulate data within each nppd group
"RTN","ECXAPRO1",26,0)
 S (LINE,LINEP)=""
"RTN","ECXAPRO1",27,0)
 S (GCA,GCB,GCC)=0
"RTN","ECXAPRO1",28,0)
 S (CA,CB,CC)=0
"RTN","ECXAPRO1",29,0)
 I '$D(^TMP($J,TYPE)) D  Q
"RTN","ECXAPRO1",30,0)
 .W !,?26,"No data available.",!
"RTN","ECXAPRO1",31,0)
 .I $E(IOST)="C",'QFLG D
"RTN","ECXAPRO1",32,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPRO1",33,0)
 ..S DIR(0)="E" D ^DIR K DIR
"RTN","ECXAPRO1",34,0)
 F  S LINE=$O(^TMP($J,TYPE,STN,LINE)) Q:LINE=""  D  Q:QFLG
"RTN","ECXAPRO1",35,0)
 .S GRP=$E(LINE,1,3) D  Q:QFLG
"RTN","ECXAPRO1",36,0)
 ..I TYPE="R",GRP["R9" S GRP="R90"
"RTN","ECXAPRO1",37,0)
 ..S GRPHEAD=^TMP($J,"RMPRCODE",GRP)
"RTN","ECXAPRO1",38,0)
 ..I LINEP="" D
"RTN","ECXAPRO1",39,0)
 ...D:($Y+5>IOSL) HEADER Q:QFLG
"RTN","ECXAPRO1",40,0)
 ...W !,GRPHEAD
"RTN","ECXAPRO1",41,0)
 .I $E(LINE,0,3)'=$E(LINEP,0,3),LINEP'="" D  Q:QFLG
"RTN","ECXAPRO1",42,0)
 ..D:($Y+5>IOSL) HEADER Q:QFLG 
"RTN","ECXAPRO1",43,0)
 ..W !,LN,!
"RTN","ECXAPRO1",44,0)
 ..W ?26,$J(CA,5,0),?34,$J(CB,5,0),?42,$J((CA+CB),5,0),?51,$J(CC,7,0),!
"RTN","ECXAPRO1",45,0)
 ..S (CA,CB,CC)=0
"RTN","ECXAPRO1",46,0)
 ..D:($Y+5>IOSL) HEADER Q:QFLG 
"RTN","ECXAPRO1",47,0)
 ..W:LINE'["R99" !,GRPHEAD
"RTN","ECXAPRO1",48,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG 
"RTN","ECXAPRO1",49,0)
 .W !,LINE,?6,$E($P(^TMP($J,TYPE,STN,LINE),U,15),1,15)
"RTN","ECXAPRO1",50,0)
 .S A1=+$P(^TMP($J,TYPE,STN,LINE),U,1),A2=+$P(^(LINE),U,2),A3=+$P(^(LINE),U,3)
"RTN","ECXAPRO1",51,0)
 .W ?26,$J(A1,5,0) S CA=CA+A1,GCA=GCA+A1
"RTN","ECXAPRO1",52,0)
 .W ?34,$J(A2,5,0) S CB=CB+A2,GCB=GCB+A2
"RTN","ECXAPRO1",53,0)
 .W ?42,$J(A1+A2,5,0)
"RTN","ECXAPRO1",54,0)
 .W ?51,$J(A3,7,0) S CC=CC+A3,GCC=GCC+A3
"RTN","ECXAPRO1",55,0)
 .W:A2>0 ?61,$J(A3/A2,6,0)
"RTN","ECXAPRO1",56,0)
 .S LINEP=LINE
"RTN","ECXAPRO1",57,0)
 Q:QFLG
"RTN","ECXAPRO1",58,0)
 D SUM
"RTN","ECXAPRO1",59,0)
 Q
"RTN","ECXAPRO1",60,0)
 ;
"RTN","ECXAPRO1",61,0)
SUM ;print summary for type
"RTN","ECXAPRO1",62,0)
 D:($Y+7>IOSL) HEADER Q:QFLG 
"RTN","ECXAPRO1",63,0)
 W:TYPE="N" !!!,"STATION SUMMARY (NEW)"
"RTN","ECXAPRO1",64,0)
 W:TYPE="R" !!!,"STATION SUMMARY (REPAIR)"
"RTN","ECXAPRO1",65,0)
 W:TYPE="RT" !!!,"STATION SUMMARY (RENTAL)"
"RTN","ECXAPRO1",66,0)
 W !,?28,"VA",?36,"Com",?44,"Total",?54,"Cost ($)"
"RTN","ECXAPRO1",67,0)
 W !,LN
"RTN","ECXAPRO1",68,0)
 W !,?26,$J(GCA,5,0),?34,$J(GCB,5,0),?42,$J((GCA+GCB),5,0),?51,$J(GCC,7,0)
"RTN","ECXAPRO1",69,0)
 W !,LN
"RTN","ECXAPRO1",70,0)
 Q
"RTN","ECXAPRO1",71,0)
 ;
"RTN","ECXAPRO1",72,0)
HEADER ;header and page control
"RTN","ECXAPRO1",73,0)
 I $E(IOST)="C" D
"RTN","ECXAPRO1",74,0)
 .S SS=20-$Y F JJ=1:1:SS W !
"RTN","ECXAPRO1",75,0)
 .I PG>0 S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAPRO1",76,0)
 Q:QFLG
"RTN","ECXAPRO1",77,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAPRO1",78,0)
 W ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report",?64,"Page "_PG
"RTN","ECXAPRO1",79,0)
 W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAPRO1",80,0)
 W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAPRO1",81,0)
 W !,"Station (#):             "_$P(ECXDIV,U,2)_" ("_$P(ECXDIV,U,3)_")"
"RTN","ECXAPRO1",82,0)
 W !,"Report Run Date/Time:    "_ECXRUN
"RTN","ECXAPRO1",83,0)
 W:TYPE="N" !!,"REPORT OF NEW PROSTHETICS ACTIVITIES"
"RTN","ECXAPRO1",84,0)
 W:TYPE="RT" !!,"REPORT OF RENTAL PROSTHETICS ACTIVITIES"
"RTN","ECXAPRO1",85,0)
 W:TYPE="R" !!,"REPORT OF REPAIR PROSTHETICS ACTIVITIES"
"RTN","ECXAPRO1",86,0)
 W !,"Line",?6,"Item",?28,"VA",?36,"Com",?44,"Total",?54,"Cost ($)",?64,"Ave Com ($)"
"RTN","ECXAPRO1",87,0)
 W !,LN,!
"RTN","ECXAPRO1",88,0)
 Q
"RTN","ECXAPRO1",89,0)
 ;
"RTN","ECXAPRO1",90,0)
CODE ;setup nppd codes
"RTN","ECXAPRO1",91,0)
 ;intended to duplicate code^rmprn63
"RTN","ECXAPRO1",92,0)
 N NULINE
"RTN","ECXAPRO1",93,0)
 F I=1:1 S NULINE=$P($T(TEXT+I^ECXAPRO3),";;",2) Q:NULINE["QUIT"  D
"RTN","ECXAPRO1",94,0)
 .I $L($P(NULINE,";",1))>3,STN]"" D
"RTN","ECXAPRO1",95,0)
 ..I $E(NULINE,0,1)'="R" S:$D(^TMP($J,"N",STN,$P(NULINE,";",1))) $P(^TMP($J,"N",STN,$P(NULINE,";",1)),U,15)=$P(NULINE,";",2)
"RTN","ECXAPRO1",96,0)
 ..I $E(NULINE,0,1)="R" S:$D(^TMP($J,"R",STN,$P(NULINE,";",1))) $P(^TMP($J,"R",STN,$P(NULINE,";",1)),U,15)=$P(NULINE,";",2)
"RTN","ECXAPRO1",97,0)
 .S ^TMP($J,"RMPRCODE",$P(NULINE,";",1))=$P(NULINE,";",2)
"RTN","ECXAPRO1",98,0)
 Q
"RTN","ECXBCM")
0^11^B50933918^B49739627
"RTN","ECXBCM",1,0)
ECXBCM ;ALB/JAP-Bar Code Medical Administration Extract ;11/19/10  17:00
"RTN","ECXBCM",2,0)
 ;;3.0;DSS EXTRACTS;**107,127,132**;Dec 22, 1997 ;Build 18
"RTN","ECXBCM",3,0)
 ;
"RTN","ECXBCM",4,0)
BEG ;entry point from option
"RTN","ECXBCM",5,0)
 ;ECFILE=^ECX(727.833,
"RTN","ECXBCM",6,0)
 D SETUP I ECFILE="" Q
"RTN","ECXBCM",7,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXBCM",8,0)
 Q
"RTN","ECXBCM",9,0)
 ;
"RTN","ECXBCM",10,0)
START ; start package specific extract
"RTN","ECXBCM",11,0)
 ; 
"RTN","ECXBCM",12,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXBCM",13,0)
 S PIEN=0
"RTN","ECXBCM",14,0)
 I $G(ECSD)="" S ECSD=DT
"RTN","ECXBCM",15,0)
 ; loop thru and get each new patient, reset the start date to ECSD - begin date from ECXTRAC
"RTN","ECXBCM",16,0)
 F  S PIEN=$O(^PSB(53.79,"AADT",PIEN)) Q:('PIEN)  S IDAT=ECSD D
"RTN","ECXBCM",17,0)
 .F  S IDAT=$O(^PSB(53.79,"AADT",PIEN,IDAT)) Q:'IDAT!(IDAT>ECED)  S RIEN="" D
"RTN","ECXBCM",18,0)
 ..F  S RIEN=$O(^PSB(53.79,"AADT",PIEN,IDAT,RIEN)) Q:'RIEN  D
"RTN","ECXBCM",19,0)
 ...S ECXNOD=^PSB(53.79,RIEN,0) Q:'ECXNOD  S ECXDFN=$P($G(ECXNOD),U) D GET
"RTN","ECXBCM",20,0)
 Q
"RTN","ECXBCM",21,0)
 ;
"RTN","ECXBCM",22,0)
GET ;get extract data
"RTN","ECXBCM",23,0)
 S (ACTDT,ECXADT,ECXAMED,ECXASTA,ECXATM,ECXORN,ECXORT,ECXOSC,ECPRO,PLACEHLD,ECXFAC,DRG)=""
"RTN","ECXBCM",24,0)
 ; get needed YYYYDD variable
"RTN","ECXBCM",25,0)
 I $G(ECXYM)="" S ECXYM=$$ECXYM^ECXUTL(DT)
"RTN","ECXBCM",26,0)
 ;Get Facility
"RTN","ECXBCM",27,0)
 I $G(ECXFAC)="" D
"RTN","ECXBCM",28,0)
 .S ECXFAC=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECXFAC,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXBCM",29,0)
 .D EN^DIQ1 S ECXFAC=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXBCM",30,0)
 ;get patient demographics
"RTN","ECXBCM",31,0)
 S ECXERR=0 D PAT(ECXDFN,IDAT,.ECXERR) Q:ECXERR
"RTN","ECXBCM",32,0)
 ;
"RTN","ECXBCM",33,0)
 S ECXORN=$$GET1^DIQ(53.79,RIEN,.11)
"RTN","ECXBCM",34,0)
 ; Ordering Stop Code - based on Unit dose or IV
"RTN","ECXBCM",35,0)
 I ECXA="O" D
"RTN","ECXBCM",36,0)
 .I ECXORN["U" S ECXOSC=$$DOUDO^ECXUTL5(ECXDFN,+ECXORN)
"RTN","ECXBCM",37,0)
 .I ECXORN["V" S ECXOSC=$$DOIVPO^ECXUTL5(ECXDFN,+ECXORN)
"RTN","ECXBCM",38,0)
 S ECPRO=$$ORDPROV^ECXUTL(ECXDFN,ECXORN,"")
"RTN","ECXBCM",39,0)
 S ACTDT=$$GET1^DIQ(53.79,RIEN,.06,"I")
"RTN","ECXBCM",40,0)
 I ACTDT'=IDAT Q
"RTN","ECXBCM",41,0)
 S ECXADT=$$ECXDATE^ECXUTL(ACTDT,ECXYM)
"RTN","ECXBCM",42,0)
 S ECXATM=$$ECXTIME^ECXUTL(ACTDT)
"RTN","ECXBCM",43,0)
 S ECXORT=$P($G(^TMP("PSJ",$J,1)),U,3) K ^TMP("PSJ",$J)
"RTN","ECXBCM",44,0)
 S ECPROPC=$P($$GET^XUA4A72(ECPRO,$P(ACTDT,".")),U,7)
"RTN","ECXBCM",45,0)
 N ECXUSRTN
"RTN","ECXBCM",46,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECPRO,$P(ACTDT,"."))
"RTN","ECXBCM",47,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECPRONPI=$P(ECXUSRTN,U)
"RTN","ECXBCM",48,0)
 S ECXASTA=$$GET1^DIQ(53.79,RIEN,.09,"I")
"RTN","ECXBCM",49,0)
 I "^G^S^C^"'[("^"_ECXASTA_"^") Q  ;process 'G'iven,'S'topped,'C'ompleted
"RTN","ECXBCM",50,0)
 S ECXAMED=$$GET1^DIQ(53.79,RIEN,.08,"I")
"RTN","ECXBCM",51,0)
 ;Component code data
"RTN","ECXBCM",52,0)
 D CCODE(RIEN)
"RTN","ECXBCM",53,0)
 Q
"RTN","ECXBCM",54,0)
 ;
"RTN","ECXBCM",55,0)
CMPT ; during component/sequence processing, retrieve rest of data record the file it. 
"RTN","ECXBCM",56,0)
 S (ECXSCADT,ECPROPC,ECXOS,ECXIVID,ECXIR,SCADT,ECXSCADT,ECXSCATM,DRUG,ECVNDC,ECINV,ECVACL)=""
"RTN","ECXBCM",57,0)
 I $G(DRG) D
"RTN","ECXBCM",58,0)
 .S DRUG=$$PHAAPI^ECXUTL5(DRG)
"RTN","ECXBCM",59,0)
 .S ECVNDC=$P(DRUG,U,3)
"RTN","ECXBCM",60,0)
 .S ECINV=$P(DRUG,U,4) S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXBCM",61,0)
 .S ECVACL=$P(DRUG,U,2)
"RTN","ECXBCM",62,0)
 S SCADT=$$GET1^DIQ(53.79,RIEN,.13,"I")
"RTN","ECXBCM",63,0)
 S ECXSCADT=$$ECXDATE^ECXUTL(SCADT,ECXYM)
"RTN","ECXBCM",64,0)
 S ECXSCATM=$$ECXTIME^ECXUTL(SCADT)
"RTN","ECXBCM",65,0)
 S ECXOS=$$GET1^DIQ(53.79,RIEN,.12,"I")
"RTN","ECXBCM",66,0)
 S ECXIVID=$$GET1^DIQ(53.79,RIEN,.26)
"RTN","ECXBCM",67,0)
 S ECXIR=$$GET1^DIQ(53.79,RIEN,.35)
"RTN","ECXBCM",68,0)
 S ECXDIV=$$RADDIV^ECXDEPT($$GET1^DIQ(53.79,RIEN,.03,"I"))
"RTN","ECXBCM",69,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXBCM",70,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,ACTDT,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXBCM",71,0)
 D:ECXENC'="" FILE
"RTN","ECXBCM",72,0)
 Q
"RTN","ECXBCM",73,0)
 ;
"RTN","ECXBCM",74,0)
PAT(ECXDFN,ECXDATE,ECXERR)  ;get patient demographics, primary care, and inpatient data
"RTN","ECXBCM",75,0)
 N X
"RTN","ECXBCM",76,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXBCM",77,0)
 ;get patient data
"RTN","ECXBCM",78,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXBCM",79,0)
 I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXBCM",80,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXBCM",81,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXBCM",82,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXBCM",83,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXBCM",84,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXBCM",85,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXBCM",86,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXBCM",87,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXBCM",88,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXBCM",89,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXBCM",90,0)
 S ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXBCM",91,0)
 S ECXPOS=ECXPAT("POS")
"RTN","ECXBCM",92,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXBCM",93,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXBCM",94,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXBCM",95,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXBCM",96,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXBCM",97,0)
 S ECXPHI=ECXPAT("PHI")
"RTN","ECXBCM",98,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXBCM",99,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXBCM",100,0)
 S ECXMTST=ECXPAT("MEANS")
"RTN","ECXBCM",101,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXBCM",102,0)
 S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN) S ECXCNHU=$S(ECXCNHU'="":$E(ECXCNHU,1),1:"") ;get CNHU status
"RTN","ECXBCM",103,0)
 ;get enrollment data (category, status and priority)
"RTN","ECXBCM",104,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXBCM",105,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)                  ; Head and Neck Cancer Indicator
"RTN","ECXBCM",106,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)                 ; PROJ 112/SHAD Indicator
"RTN","ECXBCM",107,0)
 I ECXSHADI="U" S ECXSHADI=""                      ; If Shad comes back as "U" force to null
"RTN","ECXBCM",108,0)
 S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1")  ; Race and Ethnicity
"RTN","ECXBCM",109,0)
 S ECXERI=ECXPAT("ERI")                            ; emergency response indicator (FEMA)
"RTN","ECXBCM",110,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)               ; PATCAT code / patch 127  
"RTN","ECXBCM",111,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXBCM",112,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXBCM",113,0)
 ;
"RTN","ECXBCM",114,0)
 ;get primary care data
"RTN","ECXBCM",115,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXBCM",116,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXBCM",117,0)
 ;get inpatient data
"RTN","ECXBCM",118,0)
 S (ECXA,ECXMN,ECXADM,ECXTS,ECXW)=""
"RTN","ECXBCM",119,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXBCM",120,0)
 S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXADM=$P(X,U,4)
"RTN","ECXBCM",121,0)
 S W=$P(X,U,9),ECXDOM=$P(X,U,10),ECXW=$P(W,";")
"RTN","ECXBCM",122,0)
 ;get national patient record flag, if it exists
"RTN","ECXBCM",123,0)
 D NPRF^ECXUTL5     ; sets ECXNPRFI
"RTN","ECXBCM",124,0)
 Q
"RTN","ECXBCM",125,0)
 ;
"RTN","ECXBCM",126,0)
CCODE(RIEN) ; get component information
"RTN","ECXBCM",127,0)
 ;  input - IEN of the BCMA MEDICATION LOG File
"RTN","ECXBCM",128,0)
 ; 
"RTN","ECXBCM",129,0)
 ; output - CCIEN: pointer to a variable pointer field to file #50, #52.6, or #52.7
"RTN","ECXBCM",130,0)
 ;          CCDORD: .02 field of file #50, #52.6, or #52.7
"RTN","ECXBCM",131,0)
 ;          CCDGVN: .03 FIELD of file #50, #52.6, or #52.7
"RTN","ECXBCM",132,0)
 ;          CCUNIT: .04 field of file #50, #52.6, or #52.7
"RTN","ECXBCM",133,0)
 ;          CCTYPE: derived field, "D", "A", or "S"
"RTN","ECXBCM",134,0)
 ;
"RTN","ECXBCM",135,0)
 S (CCIEN,CCDORD,CCDGVN,CCUNIT,CCTYPE)=""
"RTN","ECXBCM",136,0)
 F I=.5,.6,.7 D
"RTN","ECXBCM",137,0)
 .I '$O(^PSB(53.79,RIEN,I,0)) Q
"RTN","ECXBCM",138,0)
 .S J=0 F  S J=$O(^PSB(53.79,RIEN,I,J)) Q:'J  D
"RTN","ECXBCM",139,0)
 ..S DATA=^PSB(53.79,RIEN,I,J,0)
"RTN","ECXBCM",140,0)
 ..S CCIEN=$P(DATA,U),CCDORD=$P(DATA,U,2),CCDGVN=$P(DATA,U,3),CCUNIT=$P(DATA,U,4)
"RTN","ECXBCM",141,0)
 ..I I=.5 S DRG=CCIEN
"RTN","ECXBCM",142,0)
 ..I I=.6 S DRG=$$GET1^DIQ(52.6,CCIEN,1,"I")
"RTN","ECXBCM",143,0)
 ..I I=.7 S DRG=$$GET1^DIQ(52.7,CCIEN,1,"I")
"RTN","ECXBCM",144,0)
 ..S CCTYPE=$S(I=.5:"D",I=.6:"A",I=.7:"S",1:"")
"RTN","ECXBCM",145,0)
 ..S CCIEN=$S(I=.5:CCIEN_";PSDRUG(",I=.6:CCIEN_";PS(52.6,",I=.7:CCIEN_";PS(52.7,",1:"")
"RTN","ECXBCM",146,0)
 ..D CMPT
"RTN","ECXBCM",147,0)
 Q
"RTN","ECXBCM",148,0)
 ;
"RTN","ECXBCM",149,0)
FILE ;file the extract record
"RTN","ECXBCM",150,0)
 ;node0
"RTN","ECXBCM",151,0)
 ;Sequence Number,Year Month, Extract Number (EC23)^facility (ECXFAC)^
"RTN","ECXBCM",152,0)
 ;dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^
"RTN","ECXBCM",153,0)
 ;in/out (ECXA)^Day (ECXADT)^
"RTN","ECXBCM",154,0)
 ;date of birth (ECDOB)^Gender (ECXSEX)^State (ECXSTATE)^County (ECXCNTY)^
"RTN","ECXBCM",155,0)
 ;zip code (ECXZIP)^country (ECXCNTRY)^ward (ECXW)^treating speciality (ECXTS)^
"RTN","ECXBCM",156,0)
 ;provider (ECPRO)^provider person class (ECPROPC)^provider npi (ECPRONPI)^
"RTN","ECXBCM",157,0)
 ;primary care provider(ECPTPR)^pc provider person class (ECCLAS)^
"RTN","ECXBCM",158,0)
 ;primary care provider NPI (ECPTNPI)^primary care team (ECPTTM)^ordering stop code (ECXOSC)^
"RTN","ECXBCM",159,0)
 ;NODE(1)
"RTN","ECXBCM",160,0)
 ;place order number (RIEN)^order reference number (ECXORN)^route (ECXORT)^
"RTN","ECXBCM",161,0)
 ;^action time (ECXATM)^component code (CCIEN)^
"RTN","ECXBCM",162,0)
 ;component dose ordered (CCDORD)^component dose given(CCDGVN)^
"RTN","ECXBCM",163,0)
 ;component units (CCUNIT)^component type (CCTYPE)^Action Status (ECXASTA)^
"RTN","ECXBCM",164,0)
 ;Administration Medication (ECXAMED)^Scheduled Administration Date (ECXSCADT)^
"RTN","ECXBCM",165,0)
 ;Scheduled Administration Time (ECXSCATM)^
"RTN","ECXBCM",166,0)
 ;NODE(2)
"RTN","ECXBCM",167,0)
 ;Order Schedule (ECXOS)^IV Unique ID (ECXIVID)^
"RTN","ECXBCM",168,0)
 ;Infusion Rate (ECXIR)^Production Division Code (ECXDIV)^Drug IEN (DRG)^NDC (ECVNDC)^
"RTN","ECXBCM",169,0)
 ;Investigational (DEA Special Handling) (ECINV)^VA Drug Classification (ECVACL)^
"RTN","ECXBCM",170,0)
 ;Master Patient Index (ECXMPI)^DOM, PRRTP and SAARTP Indicator (ECXDOM)^
"RTN","ECXBCM",171,0)
 ;Observation Patient Indicator (ECXOBS)^Encounter Number (ECXENC)^Means Test (ECXMTST)^
"RTN","ECXBCM",172,0)
 ;Eligibility (ECXELIG)^Enrollment Location (ECXENRL)^Enrollment Category (ECXCAT)^
"RTN","ECXBCM",173,0)
 ;Enrollment Status (ECXSTAT)^Enrollment Priority (ECXPRIOR)_(ECXSBGRP)^
"RTN","ECXBCM",174,0)
 ;NODE(3)
"RTN","ECXBCM",175,0)
 ;User Enrollee (ECXUESTA)^
"RTN","ECXBCM",176,0)
 ;NODE(4)
"RTN","ECXBCM",177,0)
 ;Ethnicity(ECXETH)^Race 1(ECXRC1)^Veteran(ECXVET)^Period of Service(ECXPOS)^POW Status(ECXPST)^
"RTN","ECXBCM",178,0)
 ;POW Location(ECXPLOC)^Radiation Status(ECXRST)^Agent Orange Status(ECXAST)^Agent Orange Location(ECXAOL)
"RTN","ECXBCM",179,0)
 ;^Purple Heart Indicator(ECXPHI)^MST Status(ECXMST)^CNH/SH Status(ECXCNHU)^
"RTN","ECXBCM",180,0)
 ;Head & Neck Cancer Indicator(ECXHNCI)^SHAD Status(ECXSHADI)^Patient Type(ECXPTYPE)^
"RTN","ECXBCM",181,0)
 ;CV Status Eligibility(ECXCVE)^CV Eligibility End Date(ECXCVEDT)^Encounter CV(ECXCVENC)^
"RTN","ECXBCM",182,0)
 ;National Patient Record Flag(ECXNPRFI)^ERI(ECXERI)^SW Asia Conditions(ECXEST)^
"RTN","ECXBCM",183,0)
 ;OEF/OIF(ECXOEF)^OEF/OIF Return Date(ECXOEFDT)^PATCAT(ECXPATCAT)
"RTN","ECXBCM",184,0)
 ;
"RTN","ECXBCM",185,0)
 N DA,DIK
"RTN","ECXBCM",186,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXBCM",187,0)
 S ECODE(0)=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXADT
"RTN","ECXBCM",188,0)
 S ECODE(0)=ECODE(0)_U_ECXDOB_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXCNTRY
"RTN","ECXBCM",189,0)
 S ECODE(0)=ECODE(0)_U_ECXW_U_ECXTS_U_ECPRO_U_ECPROPC_U_ECPRONPI_U_ECPTPR_U_ECCLAS
"RTN","ECXBCM",190,0)
 S ECODE(0)=ECODE(0)_U_ECPTNPI_U_ECPTTM_U_ECXOSC_U
"RTN","ECXBCM",191,0)
 S ECODE(1)=RIEN_U_ECXORN_U_ECXORT_U_U_ECXATM_U_CCIEN_U_CCDORD_U_CCDGVN
"RTN","ECXBCM",192,0)
 S ECODE(1)=ECODE(1)_U_CCUNIT_U_CCTYPE_U_ECXASTA_U_ECXAMED_U_ECXSCADT_U_ECXSCATM_U
"RTN","ECXBCM",193,0)
 S ECODE(2)=ECXOS_U_ECXIVID_U_ECXIR_U_ECXDIV_U_DRG_U_ECVNDC_U_ECINV_U_ECVACL_U_ECXMPI_U_ECXDOM
"RTN","ECXBCM",194,0)
 S ECODE(2)=ECODE(2)_U_$E(ECXOBS,1)_U_ECXENC_U_ECXMTST_U_ECXELIG_U_ECXENRL_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_ECXSBGRP_U
"RTN","ECXBCM",195,0)
 S ECODE(3)=ECXUESTA_U
"RTN","ECXBCM",196,0)
 S ECODE(4)=ECXETH_U_ECXRC1_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U_ECXAOL
"RTN","ECXBCM",197,0)
 S ECODE(4)=ECODE(4)_U_ECXPHI_U_ECXMST_U_ECXCNHU_U_ECXHNCI_U_ECXSHADI_U_ECXPTYPE_U_ECXCVE
"RTN","ECXBCM",198,0)
 S ECODE(4)=ECODE(4)_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI_U_ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT_U_ECXPATCAT
"RTN","ECXBCM",199,0)
 ;
"RTN","ECXBCM",200,0)
 N DA,DIK,X S X=""
"RTN","ECXBCM",201,0)
 F X=0:1:4 S ^ECX(ECFILE,EC7,X)=ECODE(X)
"RTN","ECXBCM",202,0)
 S ECRN=ECRN+1
"RTN","ECXBCM",203,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXBCM",204,0)
 Q
"RTN","ECXBCM",205,0)
 ;
"RTN","ECXBCM",206,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXBCM",207,0)
 S ECHEAD="BCM"
"RTN","ECXBCM",208,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXBCM",209,0)
 Q
"RTN","ECXCPRO1")
0^15^B13012758^B12615627
"RTN","ECXCPRO1",1,0)
ECXCPRO1 ;ALB/JAP - PRO Extract YTD Report (cont) ; 18 Apr 2011  3:11 PM
"RTN","ECXCPRO1",2,0)
 ;;3.0;DSS EXTRACTS;**21,84,132**;Dec 22, 1997;Build 18
"RTN","ECXCPRO1",3,0)
 ;
"RTN","ECXCPRO1",4,0)
PRINT ;print report
"RTN","ECXCPRO1",5,0)
 N PG,LN,QFLG,NODE,DESC,AVE,JJ,SS,TOTAL,TOT,TQTY
"RTN","ECXCPRO1",6,0)
 U IO
"RTN","ECXCPRO1",7,0)
 S QFLG=0,$P(LN,"-",132)=""
"RTN","ECXCPRO1",8,0)
 S Y=ECXARRAY("START") D DD^%DT S ECXSTART=Y
"RTN","ECXCPRO1",9,0)
 S Y=$S(LASTDAY:LASTDAY,ECXARRAY("END")>DT:DT,1:ECXARRAY("END")) D DD^%DT S ECXEND=Y
"RTN","ECXCPRO1",10,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXCPRO1",11,0)
 ;if ecxall=0, then only one subdivision of multidivision facility
"RTN","ECXCPRO1",12,0)
 ;if ecxall=1, then either entire facility (i.e., non-divisional), or all subdivisions combined under primary station#
"RTN","ECXCPRO1",13,0)
 ;but it's possible that no extract data was found
"RTN","ECXCPRO1",14,0)
 S ECXSTAT="",ECXSTAT=$O(^TMP($J,"ECXP",ECXSTAT)) I ECXSTAT="" D  Q
"RTN","ECXCPRO1",15,0)
 .I ECXALL=0 S ECXSTAT=$O(DIVISION(""))
"RTN","ECXCPRO1",16,0)
 .F ECXTYPE="N","X","R" D  Q:QFLG
"RTN","ECXCPRO1",17,0)
 ..S PG=0 D HEADER
"RTN","ECXCPRO1",18,0)
 ..W !!,?36,"No extract data available."
"RTN","ECXCPRO1",19,0)
 ..I $E(IOST)="C" D  Q:QFLG
"RTN","ECXCPRO1",20,0)
 ...S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXCPRO1",21,0)
 ...S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXCPRO1",22,0)
 F ECXTYPE="N","X","R" D  Q:QFLG
"RTN","ECXCPRO1",23,0)
 .S PG=0 D HEADER
"RTN","ECXCPRO1",24,0)
 .S ECXHCPC=""
"RTN","ECXCPRO1",25,0)
 .I '$D(^TMP($J,"ECXP",ECXSTAT,ECXTYPE)) D  Q
"RTN","ECXCPRO1",26,0)
 ..W !!,?36,"No extract data available."
"RTN","ECXCPRO1",27,0)
 ..I $E(IOST)="C" D  Q:QFLG
"RTN","ECXCPRO1",28,0)
 ...S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXCPRO1",29,0)
 ...S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXCPRO1",30,0)
 .F  S ECXHCPC=$O(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC)) Q:ECXHCPC=""  D  Q:QFLG
"RTN","ECXCPRO1",31,0)
 ..S DESC=$G(^TMP($J,"HCPCS",ECXHCPC)) S:DESC="" DESC="(Unknown)" S DESC=ECXHCPC_" "_DESC
"RTN","ECXCPRO1",32,0)
 ..S NODE=^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC)
"RTN","ECXCPRO1",33,0)
 ..;node holds - com qty^com cost^va nonlab qty^va nonlab cost^lab qty^lab labor cost^lab matrl cost
"RTN","ECXCPRO1",34,0)
 ..F I=1:1:7 S X(I)=+$P(NODE,U,I)
"RTN","ECXCPRO1",35,0)
 ..S AVE("C")=0,AVE("V")=0,AVE("L")=0,AVE("ALL")=0,TOT("L")=0,TOTAL=0,TQTY=0
"RTN","ECXCPRO1",36,0)
 ..S:X(1)>0 AVE("C")=X(2)/X(1) S:X(3)>0 AVE("V")=X(4)/X(3) S TOT("L")=X(6)+X(7) S:X(5)>0 AVE("L")=TOT("L")/X(5)
"RTN","ECXCPRO1",37,0)
 ..S TQTY=X(1)+X(3)+X(5),TOTAL=X(2)+X(4)+TOT("L")
"RTN","ECXCPRO1",38,0)
 ..S:TQTY>0 AVE("ALL")=TOTAL/TQTY
"RTN","ECXCPRO1",39,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXCPRO1",40,0)
 ..W !,DESC,?33,$J(X(1),8,0),?43,$J(X(2),8,0),?53,$J(AVE("C"),8,2),?63,$J(X(3),8,0),?73,$J(X(4),8,0),?83,$J(AVE("V"),8,2),?93,$J(X(5),8,0),?103,$J(TOT("L"),8,0),?113,$J(AVE("L"),8,2),?123,$J(AVE("ALL"),8,2)
"RTN","ECXCPRO1",41,0)
 .I 'QFLG,$E(IOST)="C" D
"RTN","ECXCPRO1",42,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXCPRO1",43,0)
 ..S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXCPRO1",44,0)
 W @IOF
"RTN","ECXCPRO1",45,0)
 Q
"RTN","ECXCPRO1",46,0)
 ;
"RTN","ECXCPRO1",47,0)
HEADER ;header & page control
"RTN","ECXCPRO1",48,0)
 I $E(IOST)="C" D
"RTN","ECXCPRO1",49,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXCPRO1",50,0)
 .I PG>0 S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXCPRO1",51,0)
 Q:QFLG
"RTN","ECXCPRO1",52,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXCPRO1",53,0)
 W "Prosthetics (PRO) Extract YTD HCPCS Report",?122,"Page "_PG
"RTN","ECXCPRO1",54,0)
 W !,"FY Date Range: "_ECXSTART_" to "_ECXEND
"RTN","ECXCPRO1",55,0)
 I ECXALL=0 W !,"Division:      "_$P(DIVISION(ECXSTAT),U,3)_" ("_$P(DIVISION(ECXSTAT),U,2)_")"
"RTN","ECXCPRO1",56,0)
 I ECXALL=1 W !,"Facility:      "_$P(ECXPRIME,U,3)_" ("_$P(ECXPRIME,U,2)_")"
"RTN","ECXCPRO1",57,0)
 W !,"Run Date/Time: "_ECXRUN
"RTN","ECXCPRO1",58,0)
 W:ECXTYPE="N" !!,"REPORT OF NEW PROSTHETICS ACTIVITIES (Initial, Replacement, or Spare)"
"RTN","ECXCPRO1",59,0)
 W:ECXTYPE="R" !!,"REPORT OF RENTAL PROSTHETICS ACTIVITIES"
"RTN","ECXCPRO1",60,0)
 W:ECXTYPE="X" !!,"REPORT OF REPAIR PROSTHETICS ACTIVITIES"
"RTN","ECXCPRO1",61,0)
 W !,?36,"Qty.",?44,"Total $",?55,"Ave. $",?67,"Qty.",?74,"Total $",?85,"Ave. $",?97,"Qty.",?104,"Total $",?114,"Ave. $",?125,"Ave. $"
"RTN","ECXCPRO1",62,0)
 W !,"PSAS HCPCS",?35,"-Comm-",?44,"-Comm-",?55,"-Comm-",?67,"-VA-",?75,"-VA-",?85,"-VA-",?96,"-Lab-",?105,"-Lab-",?114,"-Lab-",?125,"-All-"
"RTN","ECXCPRO1",63,0)
 W !,LN,!
"RTN","ECXCPRO1",64,0)
 Q
"RTN","ECXEC")
0^6^B58828917^B52665130
"RTN","ECXEC",1,0)
ECXEC ;ALB/JAP,BIR/JLP,PTD-DSS Event Capture Extract  ; 10/2/07 2:33pm
"RTN","ECXEC",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,24,27,33,39,46,49,71,89,92,105,120,127,132**;Dec 22, 1997;Build 18
"RTN","ECXEC",3,0)
BEG ;entry point from option
"RTN","ECXEC",4,0)
 I '$D(^ECH) W !,"Event Capture is not initialized",!! Q
"RTN","ECXEC",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXEC",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXEC",7,0)
 Q
"RTN","ECXEC",8,0)
START ;begin EC extract
"RTN","ECXEC",9,0)
 N X,Y,ECDCM,ECXNPRFI
"RTN","ECXEC",10,0)
 S ECED=ECED+.3,ECLL=0
"RTN","ECXEC",11,0)
 K ^TMP("EC",$J)
"RTN","ECXEC",12,0)
 F  S ECLL=$O(^ECH("AC1",ECLL)),ECD=ECSD-.1 Q:'ECLL  D
"RTN","ECXEC",13,0)
 .F  S ECD=$O(^ECH("AC1",ECLL,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  D
"RTN","ECXEC",14,0)
 ..F  S ECDA=$O(^ECH("AC1",ECLL,ECD,ECDA)) Q:'ECDA  D UPDATE
"RTN","ECXEC",15,0)
 Q
"RTN","ECXEC",16,0)
 ;
"RTN","ECXEC",17,0)
UPDATE ;sets record and updates counters
"RTN","ECXEC",18,0)
 S ECCH=^ECH(ECDA,0),ECL=$P(ECCH,U,4),ECXDFN=$P(ECCH,U,2)
"RTN","ECXEC",19,0)
 S ECXPDIV=$$RADDIV^ECXDEPT(ECL)  ;Get production division from file 4
"RTN","ECXEC",20,0)
 S ECDT=$P(ECCH,U,3),ECM=$P(ECCH,U,6),ECC=$P(ECCH,U,8)
"RTN","ECXEC",21,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECDT,"1;3;5;")
"RTN","ECXEC",22,0)
 S ECTM=$$ECXTIME^ECXUTL(ECDT),ECP=$P(ECCH,U,9)
"RTN","ECXEC",23,0)
 Q:ECP']""
"RTN","ECXEC",24,0)
 S ECO=$P(ECCH,U,12),ECV=$P(ECCH,U,10),ECDU=$P(ECCH,U,7)
"RTN","ECXEC",25,0)
 S ECXUNIT=$G(^ECD(ECDU,0)),ECCS=+$P(ECXUNIT,U,4),ECDCM=$P(ECXUNIT,U,5)
"RTN","ECXEC",26,0)
 S ECXDSSP="",ECXDSSD=$E(ECDCM,1,10),ECUSTOP=$P(ECXUNIT,U,10),ECUPCE=$P(ECXUNIT,U,14)
"RTN","ECXEC",27,0)
 S ICD9=$P($G(^ECH(ECDA,"P")),U,2) S:ICD9="" ICD9=" "
"RTN","ECXEC",28,0)
 S ECXICD9=$P($G(^ICD9(ICD9,0)),U)
"RTN","ECXEC",29,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXEC",30,0)
 S (CNT,I)=0
"RTN","ECXEC",31,0)
 F  S CNT=$O(^ECH(ECDA,"DX",CNT)) Q:'CNT  D  Q:I>3
"RTN","ECXEC",32,0)
 .S ICD9=$P($G(^ECH(ECDA,"DX",CNT,0)),U) D:ICD9'=""
"RTN","ECXEC",33,0)
 ..S I=I+1,@("ECXICD9"_I)=$P($G(^ICD9(ICD9,0)),U)
"RTN","ECXEC",34,0)
 ;derivation of dss identifier depends on whether dss unit is 
"RTN","ECXEC",35,0)
 ;set to send data to pce
"RTN","ECXEC",36,0)
 S ECAC=$P($G(ECCH),U,19)
"RTN","ECXEC",37,0)
 ;if this is a record that 'goes to pce', then get the dss identifier
"RTN","ECXEC",38,0)
 ;from the clinic stop codes
"RTN","ECXEC",39,0)
 S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",40,0)
 I ECUPCE="A"!(ECUPCE="O"&(ECXA="O")) D
"RTN","ECXEC",41,0)
 .D:+ECAC
"RTN","ECXEC",42,0)
 ..S ECAC1=$P($G(^SC(+ECAC,0)),U,7),ECAC2=$P($G(^(0)),U,18)
"RTN","ECXEC",43,0)
 ..I 'ECAC2 S ECAC2S="000"
"RTN","ECXEC",44,0)
 ..I 'ECAC1 S (ECAC1S,ECAC2S)="000" Q
"RTN","ECXEC",45,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECAC1,0)),U,2)
"RTN","ECXEC",46,0)
 ..S ECAC2S=$P($G(^DIC(40.7,+ECAC2,0)),U,2)
"RTN","ECXEC",47,0)
 ..S ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0),ECAC2S=$$RJ^XLFSTR(ECAC2S,3,0)
"RTN","ECXEC",48,0)
 .S:'ECAC (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",49,0)
 ;if this record doesn't go to pce, then get the dss identifier
"RTN","ECXEC",50,0)
 ;from the dss unit
"RTN","ECXEC",51,0)
 I ECUPCE=""!(ECUPCE="N")!(ECUPCE="O"&(ECXA="I")) D
"RTN","ECXEC",52,0)
 .I +ECUSTOP D
"RTN","ECXEC",53,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECUSTOP,0)),U,2)
"RTN","ECXEC",54,0)
 ..S ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0),ECAC2S="000"
"RTN","ECXEC",55,0)
 .I 'ECUSTOP D
"RTN","ECXEC",56,0)
 ..S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",57,0)
 S ECDSS=ECAC1S_ECAC2S
"RTN","ECXEC",58,0)
 I ECXLOGIC>2003 I "^18^23^24^41^65^94^108^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXEC",59,0)
 S ECXDIV=""
"RTN","ECXEC",60,0)
 ;
"RTN","ECXEC",61,0)
 ;- Ord Div, Contrct St/End Dates, Contrct Type placeholders for FY2002
"RTN","ECXEC",62,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXEC",63,0)
 ;setup provider(s) as'2'_ien
"RTN","ECXEC",64,0)
 S (ECU1A,ECU2A,ECU3A,ECU1NPI,ECU2NPI,ECU3NPI,ECXPPC1,ECXPPC2,ECXPPC3)=""
"RTN","ECXEC",65,0)
 S (ECU1,ECU2,ECU3,ECU4,ECU5,ECU4A,ECU5A,ECU4NPI,ECU5NPI,ECXPPC4,ECXPPC5)=""
"RTN","ECXEC",66,0)
 K ECXPRV S ECXPROV=$$GETPRV^ECPRVMUT(ECDA,.ECXPRV) I ECXPROV Q
"RTN","ECXEC",67,0)
 F I=1:1:5 S Y=$O(ECXPRV("")) I Y'="" S @("ECU"_I)=+ECXPRV(Y) K ECXPRV(Y)
"RTN","ECXEC",68,0)
 S:$L(ECU1) ECXPPC1=$$PRVCLASS^ECXUTL(ECU1,ECDT),ECU1A="2"_$P(ECU1,";")
"RTN","ECXEC",69,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU1,ECDT)
"RTN","ECXEC",70,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU1NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",71,0)
 S:$L(ECU2) ECXPPC2=$$PRVCLASS^ECXUTL(ECU2,ECDT),ECU2A="2"_$P(ECU2,";")
"RTN","ECXEC",72,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU2,ECDT)
"RTN","ECXEC",73,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU2NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",74,0)
 S:$L(ECU3) ECXPPC3=$$PRVCLASS^ECXUTL(ECU3,ECDT),ECU3A="2"_$P(ECU3,";")
"RTN","ECXEC",75,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU3,ECDT)
"RTN","ECXEC",76,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU3NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",77,0)
 S:$L(ECU4) ECXPPC4=$$PRVCLASS^ECXUTL(ECU4,ECDT),ECU4A="2"_$P(ECU4,";")
"RTN","ECXEC",78,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU4,ECDT)
"RTN","ECXEC",79,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU4NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",80,0)
 S:$L(ECU5) ECXPPC5=$$PRVCLASS^ECXUTL(ECU5,ECDT),ECU5A="2"_$P(ECU5,";")
"RTN","ECXEC",81,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU5,ECDT)
"RTN","ECXEC",82,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU5NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",83,0)
 ;change for version 2 where ECP is a variable pointer and we want to
"RTN","ECXEC",84,0)
 ;expand it category = category or null if stored as 0
"RTN","ECXEC",85,0)
 D:ECP[";"
"RTN","ECXEC",86,0)
 .S ECP=$S(ECP["ICPT":$P(^ICPT(+ECP,0),U)_"01",ECP<90000:$P(^EC(725,+ECP,0),U,2)_"N",1:$P(^EC(725,+ECP,0),U,2)_"L"),ECC=$S(ECC:ECC,1:"")
"RTN","ECXEC",87,0)
 ;pick up EC to PCE data from "P" in File 721
"RTN","ECXEC",88,0)
 S ECPCE=$G(^ECH(ECDA,"P")),ECPCE1=$P(ECPCE,U),ECPCE2=$P(ECPCE,U,2)
"RTN","ECXEC",89,0)
 S ECPCE7=$S($P(ECPCE,U,7)=1:"Y",1:"N")
"RTN","ECXEC",90,0)
 S ECXCMOD=""
"RTN","ECXEC",91,0)
 I $D(^ECH(ECDA,"MOD")) D
"RTN","ECXEC",92,0)
 .S MOD=0,M=""
"RTN","ECXEC",93,0)
 .F  S MOD=$O(^ECH(ECDA,"MOD",MOD)) Q:'MOD  S M=$P(^(MOD,0),U) D
"RTN","ECXEC",94,0)
 ..I M S ECXCMOD=ECXCMOD_M_";"
"RTN","ECXEC",95,0)
 .K MOD,M
"RTN","ECXEC",96,0)
 S:ECP?1.N ECP=$$CPT^ECXUTL3($E(ECP,1,5),"",ECV)
"RTN","ECXEC",97,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPCE1,ECXCMOD,ECV)
"RTN","ECXEC",98,0)
 ;
"RTN","ECXEC",99,0)
 ;- Observation Patient Indicator (YES/NO)
"RTN","ECXEC",100,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXEC",101,0)
 ;
"RTN","ECXEC",102,0)
 ;- CNH status (YES/NO)
"RTN","ECXEC",103,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXEC",104,0)
 ;
"RTN","ECXEC",105,0)
 ;- encounter classification
"RTN","ECXEC",106,0)
 S (ECXAO,ECXECE,ECXHNC,ECXMIL,ECXIR,ECXSHAD)="",ECXVISIT=$P(ECCH,U,21)
"RTN","ECXEC",107,0)
 I ECXVISIT'="" D
"RTN","ECXEC",108,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXEC",109,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXEC",110,0)
 .S ECXHNC=$G(ECXVIST("HNC")),ECXMIL=$G(ECXVIST("MST")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXEC",111,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXEC",112,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXEC",113,0)
 ; - PROJ 112/SHAD Indicator
"RTN","ECXEC",114,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXEC",115,0)
 ; ******* - PATCH 127, ADD PATCAT CODE 
"RTN","ECXEC",116,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXEC",117,0)
 ;
"RTN","ECXEC",118,0)
 ; - Get national patient record flag Indicator if exist
"RTN","ECXEC",119,0)
 D NPRF^ECXUTL5
"RTN","ECXEC",120,0)
 ;
"RTN","ECXEC",121,0)
 ; - If no encounter number don't file record
"RTN","ECXEC",122,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSS,ECCS)
"RTN","ECXEC",123,0)
 D:ECXENC'="" FILE
"RTN","ECXEC",124,0)
 Q
"RTN","ECXEC",125,0)
 ;
"RTN","ECXEC",126,0)
FILE ;file record in #727.815
"RTN","ECXEC",127,0)
 ;node0
"RTN","ECXEC",128,0)
 ;ecode=inst ECL^dfn ECXDFN^ssn ECXSSN^name ECXPNM^i/o status ECXA^day^
"RTN","ECXEC",129,0)
 ;DSS unit ECDU^category ECC^procedure ECP^volume ECV^
"RTN","ECXEC",130,0)
 ;cost center ECCS^ordering sec ECO^section ECM^
"RTN","ECXEC",131,0)
 ;provider ECU1A^prov per cls ECXPPC1^prov 2 ECU2A^prov#2 per cls ECXPPC2
"RTN","ECXEC",132,0)
 ;^prov 3 ECU3A^prov#3 per cls ECXPPC3^^mov # ECXMN^treat spec ECXTS
"RTN","ECXEC",133,0)
 ;^time ECTM^primary care team ECPTTM^primary care provider ECPTPR
"RTN","ECXEC",134,0)
 ;^pce cpt code (ECXCPT)^primary icd-9 code ECXICD9^secondary icd-9
"RTN","ECXEC",135,0)
 ;ECXICD91^secondary icd-9 ECXICD92^secondary icd-9 ECXICD93^secondary 
"RTN","ECXEC",136,0)
 ;icd-9 ECXICD94^agent orange ECXAST^radiation exposure ECXRST^
"RTN","ECXEC",137,0)
 ;environmental contaminants ECXEST^service connected ECPTPR^sent to pce
"RTN","ECXEC",138,0)
 ;ECPCE7^^dss identifier ECDSS^dss dept
"RTN","ECXEC",139,0)
 ;node1
"RTN","ECXEC",140,0)
 ;mpi ECXMPI^dss dept ECXDSSD^PLACEHOLDER
"RTN","ECXEC",141,0)
 ;placeholder^placeholder^placeholder^
"RTN","ECXEC",142,0)
 ;placeholder^pc prov person class ECCLAS^
"RTN","ECXEC",143,0)
 ;assoc pc prov ECASPR^assoc pc prov person class ECCLAS2^
"RTN","ECXEC",144,0)
 ;placeholder^
"RTN","ECXEC",145,0)
 ;divison ECXDIV^mst status ECXMST^dom ECXDOM^date of birth ECXDOB^
"RTN","ECXEC",146,0)
 ;enrollment category ECXCAT^ enrollment status ECXSTAT^enrollment
"RTN","ECXEC",147,0)
 ;priority ECXPRIOR^period of service ECXPOS^purple heart indicator
"RTN","ECXEC",148,0)
 ;ECXPHI^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXEC",149,0)
 ;ao loc ECXAOL^ord div ECXODIV^contr st dt ECXCSDT^
"RTN","ECXEC",150,0)
 ;contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXEC",151,0)
 ;production division ECXPDIV^eligibility ECXELIG^
"RTN","ECXEC",152,0)
 ;head & neck cancer ind. ECXHNCI^ethnicity ECXETH^race1 ECXRAC1
"RTN","ECXEC",153,0)
 ;enrollment location ECXENRL^^enrollment priority
"RTN","ECXEC",154,0)
 ;ECXPRIOR_enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient
"RTN","ECXEC",155,0)
 ;type ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date
"RTN","ECXEC",156,0)
 ;ECXCVEDT^enc cv eligible ECXCVENC^national patient record flag
"RTN","ECXEC",157,0)
 ;ECXNPRFI^emerg response indic(FEMA) ECXERI^agent orange indic ECXAO^
"RTN","ECXEC",158,0)
 ;environ contam ECXECE^head/neck cancer ECXHNC^encntr mst ECXMIL
"RTN","ECXEC",159,0)
 ;^radiation ECXIR^OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT
"RTN","ECXEC",160,0)
 ;^associate pc provider npi ECASNPI^primary care provider npi ECPTNPI^
"RTN","ECXEC",161,0)
 ;provider npi ECU1NPI^provider #2 ECU2NPI^provider #3 ECU3NPI^
"RTN","ECXEC",162,0)
 ;shad status ECXSHADI^shad encounter ECXSHAD^patcat ECXPATCAT^
"RTN","ECXEC",163,0)
 ;prov #4 ECU4A^prov #4 pc ECXPPC4^prov #4 ECXU4NPI^prov #5 ECU5A^
"RTN","ECXEC",164,0)
 ;prov #5 pc ECXPPC5^prov #5 ECXU5NPI 
"RTN","ECXEC",165,0)
 ;
"RTN","ECXEC",166,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXEC",167,0)
 N ECXDATA
"RTN","ECXEC",168,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXEC",169,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXEC",170,0)
 ;done
"RTN","ECXEC",171,0)
 N DA,DIK
"RTN","ECXEC",172,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXEC",173,0)
 S ECODE=EC7_U_EC23_U_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXEC",174,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECDT,ECXYM)_U_ECDU_U_ECC_U
"RTN","ECXEC",175,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECU1A_U_ECXPPC1_U
"RTN","ECXEC",176,0)
 S ECODE=ECODE_ECU2A_U_ECXPPC2_U_ECU3A_U_ECXPPC3_U_U_ECXMN_U
"RTN","ECXEC",177,0)
 S ECODE=ECODE_ECXTS_U_ECTM_U
"RTN","ECXEC",178,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_ECXCPT_U_ECXICD9_U
"RTN","ECXEC",179,0)
 S ECODE=ECODE_ECXICD91_U_ECXICD92_U_ECXICD93_U
"RTN","ECXEC",180,0)
 S ECODE=ECODE_ECXICD94_U_ECXAST_U_ECXRST_U_ECXEST_U
"RTN","ECXEC",181,0)
 S ECODE=ECODE_ECSC_U_ECPCE7_U_U_ECDSS_U_U
"RTN","ECXEC",182,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_ECCLAS_U
"RTN","ECXEC",183,0)
 S ECODE1=ECODE1_U_ECASPR_U_ECCLAS2_U_U_ECXDIV_U
"RTN","ECXEC",184,0)
 S ECODE1=ECODE1_ECXMST_U_ECXDOM_U_ECXDOB_U_ECXCAT_U_ECXSTAT_U
"RTN","ECXEC",185,0)
 S ECODE1=ECODE1_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXEC",186,0)
 S ECODE1=ECODE1_ECXODIV_U_ECXCSDT_U_ECXCEDT_U_ECXCTYP_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXEC",187,0)
 S ECODE1=ECODE1_ECXELIG_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXEC",188,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL_U
"RTN","ECXEC",189,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U
"RTN","ECXEC",190,0)
 I ECXLOGIC>2004 S ECODE2=ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXEC",191,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXEC",192,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECU1NPI_U_ECU2NPI_U_ECU3NPI
"RTN","ECXEC",193,0)
 ; PATCAT added
"RTN","ECXEC",194,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXSHADI_U_ECXSHAD_U_ECXPATCAT
"RTN","ECXEC",195,0)
 I ECXLOGIC>2011 S ECODE2=ECODE2_U_ECU4A_U_ECXPPC4_U_ECU4NPI_U_ECU5A_U_ECXPPC5_U_ECU5NPI
"RTN","ECXEC",196,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXEC",197,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXEC",198,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXEC",199,0)
 Q
"RTN","ECXEC",200,0)
 ;
"RTN","ECXEC",201,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXEC",202,0)
 N OUT
"RTN","ECXEC",203,0)
 S ECHEAD="ECS",OUT=0
"RTN","ECXEC",204,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXEC",205,0)
 Q:($G(ECXQQ))
"RTN","ECXEC",206,0)
 W @IOF,!,"Setting up for ",ECPACK," DSS Extract -",!
"RTN","ECXEC",207,0)
 W !,"   Reminder: A maintenance option, ECS Extract Unusual Volume Report, may"
"RTN","ECXEC",208,0)
 W !,"   assist in identifying problematic data. It should be run before the"
"RTN","ECXEC",209,0)
 W !,"   Event Capture Extract is performed.",!
"RTN","ECXEC",210,0)
 D PAUSE^ECXTRAC
"RTN","ECXEC",211,0)
 I OUT S ECFILE=""
"RTN","ECXEC",212,0)
 Q
"RTN","ECXEC",213,0)
 ;
"RTN","ECXEC",214,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXEC",215,0)
 N ECXQQ
"RTN","ECXEC",216,0)
 S ECXQQ=1 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXFEKEY")
0^20^B44303669^B48603574
"RTN","ECXFEKEY",1,0)
ECXFEKEY ;BIR/DMA,CML-Print Feeder Keys; [ 05/15/96  9:44 AM ] ; 8/15/06 9:10am
"RTN","ECXFEKEY",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,40,84,92,123,132**;Dec 22, 1997;Build 18
"RTN","ECXFEKEY",3,0)
EN ;entry point from option
"RTN","ECXFEKEY",4,0)
 W !!,"Print list of Feeder Keys:",!
"RTN","ECXFEKEY",5,0)
 W !,"Select : 1. CLI",!,?9,"2. ECS",!,?9,"3. LAB",!,?9,"4. NUT",!,?9,"5. PHA",!,?9,"6. RAD",!,?9,"7. SUR",! S DIR(0)="L^1:7" D ^DIR Q:$D(DIRUT)
"RTN","ECXFEKEY",6,0)
 S ECY=Y
"RTN","ECXFEKEY",7,0)
 I ECY["2" D
"RTN","ECXFEKEY",8,0)
 .W !!,"The Feeder Key List for the Feeder System ECS can be printed by:",!?5,"(O)ld Feeder Key sort by Category-Procedure",!?5,"(N)ew Feeder Key sort by Procedure-CPT Code"
"RTN","ECXFEKEY",9,0)
 .S DIR(0)="S^O:OLD;N:NEW",DIR("B")="NEW" D ^DIR K DIR Q:$D(DIRUT)  S ECECS=Y
"RTN","ECXFEKEY",10,0)
 S:ECY["3" ECLAB=$$SELLABKE^ECXFEKE1() ;**Prompt to select Lab Feeder key
"RTN","ECXFEKEY",11,0)
 G:($G(ECLAB)=-1) QUIT ;**GOTO Exit point
"RTN","ECXFEKEY",12,0)
 G:$D(DIRUT) QUIT
"RTN","ECXFEKEY",13,0)
 K %ZIS,IOP S %ZIS="QM",%ZIS("B")="" D ^%ZIS
"RTN","ECXFEKEY",14,0)
 I POP W !,"NO DEVICE SELECTED!!" G QUIT
"RTN","ECXFEKEY",15,0)
 I $D(IO("Q")) K IO("Q") D  G QUIT
"RTN","ECXFEKEY",16,0)
 .S ZTRTN="START^ECXFEKEY",ZTDESC="Feeder Key List (DSS)"
"RTN","ECXFEKEY",17,0)
 .S ZTSAVE("ECY")="",ZTSAVE("ECPHA")="",ZTSAVE("ECPHA2")="",ZTSAVE("ECECS")="",ZTSAVE("ECLAB")=""
"RTN","ECXFEKEY",18,0)
 .D ^%ZTLOAD I $D(ZTSK) W !,"Queued Task #: "_ZTSK
"RTN","ECXFEKEY",19,0)
 .D HOME^%ZIS K ZTSK
"RTN","ECXFEKEY",20,0)
 ;
"RTN","ECXFEKEY",21,0)
START ;queued entry point
"RTN","ECXFEKEY",22,0)
 I '$D(DT) S DT=$$HTFM^XLFDT(+$H)
"RTN","ECXFEKEY",23,0)
 K ^TMP($J)
"RTN","ECXFEKEY",24,0)
 F ECLIST=1:1 S EC=$P(ECY,",",ECLIST) Q:EC=""  D:EC=1 CLI D:EC=2 ECS D:EC=3 LAB D:EC=4 NUT D:EC=5 PHA D:EC=6 RAD D:EC=7 SUR^ECXFEKE1
"RTN","ECXFEKEY",25,0)
 U IO D PRINT^ECXFEKE1
"RTN","ECXFEKEY",26,0)
 Q
"RTN","ECXFEKEY",27,0)
LAB S EC=0
"RTN","ECXFEKEY",28,0)
 ;
"RTN","ECXFEKEY",29,0)
 ;** OLD Feeder Key format
"RTN","ECXFEKEY",30,0)
 I $G(ECLAB)="O" DO
"RTN","ECXFEKEY",31,0)
 .F  S EC=$O(^LAB(60,EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),U),^TMP($J,"LAB",EC,EC)=EC1
"RTN","ECXFEKEY",32,0)
 ;
"RTN","ECXFEKEY",33,0)
 ;** NEW Feeder key format (LMIP Code)
"RTN","ECXFEKEY",34,0)
 I $G(ECLAB)="N" DO
"RTN","ECXFEKEY",35,0)
 .N EC2
"RTN","ECXFEKEY",36,0)
 .F  S EC=$O(^LAM(EC)) Q:'EC  DO
"RTN","ECXFEKEY",37,0)
 ..I $D(^LAM(EC,0)) DO
"RTN","ECXFEKEY",38,0)
 ...S EC1=$P(^LAM(EC,0),U,1),EC1=$P(EC1,"~",1)
"RTN","ECXFEKEY",39,0)
 ...S EC2=$P(^LAM(EC,0),U,2)
"RTN","ECXFEKEY",40,0)
 ...I EC2'[".9999",(EC2'[".8") S EC2=EC2\1
"RTN","ECXFEKEY",41,0)
 ...S ^TMP($J,"LAB",+EC2,+EC2)=EC1
"RTN","ECXFEKEY",42,0)
 Q
"RTN","ECXFEKEY",43,0)
ECS ;old ECS feeder key list for pre-FY97 data
"RTN","ECXFEKEY",44,0)
 G:$G(ECECS)="N" ECS2
"RTN","ECXFEKEY",45,0)
 S EC=0 I $P($G(^EC(720.1,1,0)),U,2) D  G ECQ
"RTN","ECXFEKEY",46,0)
 .F  S EC=$O(^ECJ(EC)) Q:'EC  I $D(^(EC,0)) D
"RTN","ECXFEKEY",47,0)
 ..S EC1=$P($P(^(0),U),"-",3,4),EC2=$P(EC1,"-"),EC2=$S(+EC2:EC2,1:"***"),EC4=$S($P($G(^EC(726,+EC2,0)),U)]"":$P(^(0),U),1:"***")
"RTN","ECXFEKEY",48,0)
 ..S EC3=$P(EC1,"-",2) Q:'+EC3  S EC3=$S(EC3["ICPT":$P($$CPT^ICPTCOD(+EC3),U,2),+EC3<90000:$P($G(^EC(725,+EC3,0)),U,2)_"N",1:$P($G(^EC(725,+EC3,0)),U,2)_"L")
"RTN","ECXFEKEY",49,0)
 ..S EC5=$P(EC1,"-",2),EC5=$S(EC5["ICPT":$E($P($$CPT^ICPTCOD(+EC5),U,3),1,25),EC5["EC":$E($P($G(^EC(725,+EC5,0)),U),1,25),1:"UNKNOWN")
"RTN","ECXFEKEY",50,0)
 ..S ^TMP($J,"ECS",EC2_" - "_EC3,EC3)=EC4_" - "_EC5
"RTN","ECXFEKEY",51,0)
 F  S EC=$O(^ECK(EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P($P(^(0),U),"-",3,4),EC2=$E($P($G(^ECP(+EC1,0)),U),1,25),EC3=$E($P($G(^ECP(+$P(EC1,"-",2),0)),U),1,25),^TMP($J,"ECS",EC1,EC1)=EC2_" - "_EC3
"RTN","ECXFEKEY",52,0)
ECQ K EC1,EC2,EC3,EC4,EC5,EC6,EC7,EC8,EC9,EC10 Q
"RTN","ECXFEKEY",53,0)
ECS2 ;new ECS feeder key list for FY97 data
"RTN","ECXFEKEY",54,0)
 ;feeder key is <Procedure> if PCE CPT code is same or null;
"RTN","ECXFEKEY",55,0)
 ;feeder is <Procedure-PCE CPT> otherwise;
"RTN","ECXFEKEY",56,0)
 ;the description column of list shows procedure (EC5) in lowercase and CPT code (EC8) in uppercase;
"RTN","ECXFEKEY",57,0)
 ;but if procedure (EC3) is itself a CPT Code, convert EC5 to uppercase
"RTN","ECXFEKEY",58,0)
 ;concatenation of "A;" and "B;" are for proper sorting - CPT codes 1st, then other procedures
"RTN","ECXFEKEY",59,0)
 S EC=0 I $P($G(^EC(720.1,1,0)),U,2) D  G ECQ
"RTN","ECXFEKEY",60,0)
 .F  S EC=$O(^ECJ(EC)) Q:'EC  I $D(^ECJ(EC,0)) D
"RTN","ECXFEKEY",61,0)
 ..S EC1=$P($P(^ECJ(EC,0),U),"-",3,4)
"RTN","ECXFEKEY",62,0)
 ..S EC3=$P(EC1,"-",2) Q:'+EC3  S EC3=$S(EC3["ICPT":$P($$CPT^ICPTCOD(+EC3),U,2),+EC3<90000:$P($G(^EC(725,+EC3,0)),U,2)_"N",1:$P($G(^EC(725,+EC3,0)),U,2)_"L")
"RTN","ECXFEKEY",63,0)
 ..S EC5=$P(EC1,"-",2),EC5=$S(EC5["ICPT":$E($P($$CPT^ICPTCOD(+EC5),U,3),1,25),EC5["EC":$E($P($G(^EC(725,+EC5,0)),U),1,25),1:"UNKNOWN")
"RTN","ECXFEKEY",64,0)
 ..S EC5=$$LOW(EC5)
"RTN","ECXFEKEY",65,0)
 ..I EC1["ICPT" S EC5=$$UPP(EC5),EC3="A;"_EC3
"RTN","ECXFEKEY",66,0)
 ..S EC6=$P(EC1,"-",2),EC7="",EC8=""
"RTN","ECXFEKEY",67,0)
 ..I EC6["EC(725," D
"RTN","ECXFEKEY",68,0)
 ...S EC6=$S(+EC6>0:$P($G(^EC(725,+EC6,0)),U,5),1:"") S EC7=$S(+EC6>0:$P($$CPT^ICPTCOD(+EC6),U,2),1:"")
"RTN","ECXFEKEY",69,0)
 ...S EC8=$S(+EC6>0:$E($P($$CPT^ICPTCOD(+EC6),U,3),1,25),1:"")
"RTN","ECXFEKEY",70,0)
 ...S EC8=$$UPP(EC8),EC3="B;"_EC3
"RTN","ECXFEKEY",71,0)
 ..S EC9=$S(EC7'="":EC3_"-"_EC7,1:EC3),EC10=$S(EC8'="":EC5_" - "_EC8,1:EC5)
"RTN","ECXFEKEY",72,0)
 ..S ^TMP($J,"ECS",EC9,EC3)=EC10
"RTN","ECXFEKEY",73,0)
 G ECQ
"RTN","ECXFEKEY",74,0)
LOW(X) ;convert string to lowercase
"RTN","ECXFEKEY",75,0)
 F %=2:1:$L(X) I $E(X,%)?1U,$E(X,%-1)?1A S X=$E(X,0,%-1)_$C($A(X,%)+32)_$E(X,%+1,999)
"RTN","ECXFEKEY",76,0)
 Q X
"RTN","ECXFEKEY",77,0)
UPP(X) ;convert string to uppercase
"RTN","ECXFEKEY",78,0)
 F %=1:1:$L(X) S:$E(X,%)?1L X=$E(X,0,%-1)_$C($A(X,%)-32)_$E(X,%+1,999)
"RTN","ECXFEKEY",79,0)
 Q X
"RTN","ECXFEKEY",80,0)
 ;
"RTN","ECXFEKEY",81,0)
PHA ;NEW PHA Feeder Key List sorted by NDF Match
"RTN","ECXFEKEY",82,0)
 N ECPPDU,ECXPHA,ARRAY
"RTN","ECXFEKEY",83,0)
 S ARRAY="^TMP($J,""ECXLIST"")"
"RTN","ECXFEKEY",84,0)
 K @ARRAY
"RTN","ECXFEKEY",85,0)
 ;Call pharmacy drug file (#50) api dbia 4483 and create ^TMP global
"RTN","ECXFEKEY",86,0)
 D DATA^PSS50(,"??",DT,,,"ECXLIST")
"RTN","ECXFEKEY",87,0)
 S ECXYM=$$ECXYM^ECXUTL(DT)
"RTN","ECXFEKEY",88,0)
 ;$order thru "B" cross reference
"RTN","ECXFEKEY",89,0)
 S ECD="" F  S ECD=$O(@ARRAY@("B",ECD)) Q:ECD=""  D
"RTN","ECXFEKEY",90,0)
 .S EC=0 F  S EC=$O(@ARRAY@("B",ECD,EC)) Q:EC'>0  D
"RTN","ECXFEKEY",91,0)
 ..S ECD=$P(@ARRAY@(EC,.01),U),ECNDC=@ARRAY@(EC,31),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXFEKEY",92,0)
 ..S P1=$P(@ARRAY@(EC,20),U),P3=$P(@ARRAY@(EC,22),U)
"RTN","ECXFEKEY",93,0)
 ..;get the 17 character key
"RTN","ECXFEKEY",94,0)
 ..S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXFEKEY",95,0)
 ..Q:+ECNFC=0
"RTN","ECXFEKEY",96,0)
 ..S ECNFC="A"_ECNFC
"RTN","ECXFEKEY",97,0)
 ..S ECPPDU=@ARRAY@(EC,16),ECPPDU=$FNUMBER(ECPPDU,"P",4)
"RTN","ECXFEKEY",98,0)
 ..S ^TMP($J,"PHA",ECNFC,0)=ECD_U_ECPPDU
"RTN","ECXFEKEY",99,0)
 K @ARRAY
"RTN","ECXFEKEY",100,0)
 Q
"RTN","ECXFEKEY",101,0)
CLI S SC=0 F  S SC=$O(^SC(SC)) Q:'SC  I $D(^(SC,0)) S EC=^(0),ECD=$P(EC,U) I $P(EC,U,3)="C" D  S ^TMP($J,"CLI","A;"_P1_P2_ECLEN_P3_"0",SC)=ECD
"RTN","ECXFEKEY",102,0)
 .S ECSC=$P($G(^DIC(40.7,+$P(EC,U,7),0)),U,2),ECCSC=$P($G(^DIC(40.7,+$P(EC,U,18),0)),U,2)
"RTN","ECXFEKEY",103,0)
 .S ECLEN="NNN" I $D(^SC(SC,"SL")),$P(^("SL"),U,2)'="V" S ECLEN=$S($P(^("SL"),U):$P(^("SL"),U),1:"NNN"),ECLEN=$E("000"_ECLEN,$L(ECLEN)+1,$L(ECLEN)+3)
"RTN","ECXFEKEY",104,0)
 .S (P1,P2)="000",P3="0000" I '$D(^ECX(728.44,SC,0)),ECCSC]"" S ECST=5,P1=$E("000"_ECSC,$L(ECSC)+1,$L(ECSC)+3),P2=$E("000"_ECCSC,$L(ECCSC)+1,$L(ECCSC)+3) Q
"RTN","ECXFEKEY",105,0)
 .I '$D(^ECX(728.44,SC,0)) S ECST=1,P1=$E("000"_ECSC,$L(ECSC)+1,$L(ECSC)+3) Q
"RTN","ECXFEKEY",106,0)
 .S EC=^ECX(728.44,SC,0),ECST=$P(EC,U,6)
"RTN","ECXFEKEY",107,0)
 .I ECST=6 Q
"RTN","ECXFEKEY",108,0)
 .;action code 6 means ignore
"RTN","ECXFEKEY",109,0)
 .I $P(EC,U,4)]"" S ECSC=$P(EC,U,4)
"RTN","ECXFEKEY",110,0)
 .I $P(EC,U,5)]"" S ECCSC=$P(EC,U,5)
"RTN","ECXFEKEY",111,0)
 .I ECST="" S ECST=4,P1=$E("000"_ECSC,$L(ECSC)+1,$L(ECSC)+3),P3=$E("0000"_SC,$L(SC)+1,$L(SC)+4) S:ECCSC P2=$E("000"_ECCSC,$L(ECCSC)+1,$L(ECCSC)+3) Q
"RTN","ECXFEKEY",112,0)
 .I ECST<2 S P1=ECSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3) Q
"RTN","ECXFEKEY",113,0)
 .I ECST=2 S P1=ECCSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3) Q
"RTN","ECXFEKEY",114,0)
 .I ECST=3 S P1=ECSC,P11=ECCSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3),P11=$E("000"_P11,$L(P11)+1,$L(P11)+3) Q
"RTN","ECXFEKEY",115,0)
 .I ECST>3,ECST<7 S P1=ECSC,P2=ECCSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3),P2=$E("000"_P2,$L(P2)+1,$L(P2)+3) S:ECST=4 P3=$P($G(^ECX(728.441,+$P(^ECX(728.44,SC,0),U,8),0)),U) I P3="" S P3=$E("0000"_SC,$L(SC)+1,$L(SC)+4)
"RTN","ECXFEKEY",116,0)
 K ECLEN Q
"RTN","ECXFEKEY",117,0)
RAD S EC=0 F  S EC=$O(^RAMIS(71,EC)) Q:'EC  I $D(^(EC,0)) S EC1=^(0),ECD=$P(EC1,U),EC2=$P($G(^ICPT(+$P(EC1,U,9),0)),U) S:EC2="" EC2="Unknown" S ^TMP($J,"RAD",EC2,EC)=ECD
"RTN","ECXFEKEY",118,0)
 S ^TMP($J,"RAD",88888,88888)="Portable procedure",^TMP($J,"RAD",99999,99999)="OR procedure"
"RTN","ECXFEKEY",119,0)
 Q
"RTN","ECXFEKEY",120,0)
NUT ;Feeder keys for Nutrition and Food Service extract
"RTN","ECXFEKEY",121,0)
 N TYP,TIEN,DIET,IN,PRODUCT,KEY,NUMBER,IENS
"RTN","ECXFEKEY",122,0)
 S TYP="" F  S TYP=$O(^ECX(728.45,"B",TYP)) Q:TYP=""  S TIEN=0 F  S TIEN=$O(^ECX(728.45,"B",TYP,TIEN)) Q:'TIEN  S DIET="" F  S DIET=$O(^ECX(728.45,TIEN,1,"B",DIET)) Q:DIET=""  S IN=0 F  S IN=$O(^ECX(728.45,TIEN,1,"B",DIET,IN)) Q:IN'>0  D
"RTN","ECXFEKEY",123,0)
 . S IENS=""_IN_","_TIEN_","_""
"RTN","ECXFEKEY",124,0)
 . S KEY=$$GET1^DIQ(728.451,IENS,1,"E")
"RTN","ECXFEKEY",125,0)
 . S ^TMP($J,"ECX",KEY,DIET)=TYP_"  "_$$GET1^DIQ(728.451,IENS,.01,"E")
"RTN","ECXFEKEY",126,0)
 Q
"RTN","ECXFEKEY",127,0)
QUIT ;
"RTN","ECXFEKEY",128,0)
 K ECY,ECPHA,ECECS,ECLAB,ECPPDU,DIR,DIRUT,DUOUT,X,Y
"RTN","ECXFEKEY",129,0)
 Q
"RTN","ECXFELOC")
0^21^B16469856^B17796989
"RTN","ECXFELOC",1,0)
ECXFELOC ;BIR/DMA,CML-Print Feeder Locations; [ 05/07/96  8:41 AM ] ;7/21/11  14:24
"RTN","ECXFELOC",2,0)
 ;;3.0;DSS EXTRACTS;**1,8,105,132**;Dec 22, 1997;Build 18
"RTN","ECXFELOC",3,0)
EN ;entry point from option
"RTN","ECXFELOC",4,0)
 W !!,"Print list of feeder locations.",! S QFLG=1
"RTN","ECXFELOC",5,0)
 K %ZIS S %ZIS="Q" D ^%ZIS Q:POP 
"RTN","ECXFELOC",6,0)
 I $D(IO("Q")) S ZTDESC="Feeder Location List (DSS)",ZTRTN="START^ECXFELOC" D ^%ZTLOAD D ^%ZISC G OUT
"RTN","ECXFELOC",7,0)
 U IO
"RTN","ECXFELOC",8,0)
START ;queued entry point
"RTN","ECXFELOC",9,0)
 I '$D(DT) S DT=$$HTFM^XLFDT(+$H)
"RTN","ECXFELOC",10,0)
 K ^TMP($J) S (QFLG,PG)=0,$P(LN,"-",81)=""
"RTN","ECXFELOC",11,0)
LAB S EC=0 F  S EC=$O(^LRO(68,EC)) Q:'EC  I $D(^(EC,0)) S EC1=^(0),^TMP($J,"LAB",$P(EC1,U,11),EC)=$P(EC1,U)
"RTN","ECXFELOC",12,0)
ECS S EC=0 I $P($G(^EC(720.1,1,0)),U,2) D  G IV
"RTN","ECXFELOC",13,0)
 .F  S EC=$O(^ECJ(EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),"-",1,2),EC2=$P($G(^ECD(+$P(EC1,"-",2),0)),U),^TMP($J,"ECS",EC1,EC1)=EC2
"RTN","ECXFELOC",14,0)
 F  S EC=$O(^ECK(EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),"-",1,2),EC2=$P($G(^ECD(+$P(EC1,"-",2),0)),U),^TMP($J,"ECS",EC1,EC1)=EC2
"RTN","ECXFELOC",15,0)
IV S EC=0 F  S EC=$O(^DG(40.8,EC)) Q:'EC  I $D(^DG(40.8,EC,0)) S EC1=$E($P(^(0),U),1,30),^TMP($J,"IVP","IVP"_EC,EC)="IV Pharmacy-"_EC1
"RTN","ECXFELOC",16,0)
CLI S EC=0 F  S EC=$O(^SC(EC)) Q:'EC  I $D(^(EC,0)) S EC1=^(0),ECS=$P(EC1,U,15),ECSC=$P($G(^DIC(40.7,+$P(EC1,U,7),0)),U,2),ECD=$P(EC1,U) S:'ECS ECS=1 D
"RTN","ECXFELOC",17,0)
 .I $P(EC1,U,17)'="Y",$P(EC1,U,3)="C" S DAT=$G(^SC(EC,"I")),ID=+DAT,RD=$P(DAT,U,2) I 'ID!(ID>DT)!(RD&(RD<DT)) S ^TMP($J,"CLI",ECS_ECSC,EC)=ECD
"RTN","ECXFELOC",18,0)
PRE N ARRAY S ARRAY="^TMP($J,""ECXDSS"")" K @ARRAY D PSS^PSO59(,"??","ECXDSS") I @ARRAY@(0)>0 G V6
"RTN","ECXFELOC",19,0)
 ;dbia (#4689)
"RTN","ECXFELOC",20,0)
 S EC=0 F  S EC=$O(^DIC(59,EC)) Q:'EC  I $D(^(EC,0)) S EC1=$E($P(^(0),U),1,30),^TMP($J,"PRE","PRE"_EC,EC)="Prescriptions-"_EC1
"RTN","ECXFELOC",21,0)
 G RAD
"RTN","ECXFELOC",22,0)
V6 S EC=0 F  S EC=$O(@ARRAY@(EC)) Q:'EC  I $D(^(EC)) S EC1=$E(@ARRAY@(EC,.01),1,30),^TMP($J,"PRE","PRE"_EC,EC)="Prescriptions-"_EC1
"RTN","ECXFELOC",23,0)
 K @ARRAY
"RTN","ECXFELOC",24,0)
RAD S EC=0 F  S EC=$O(^RA(79,EC)),EC1=0 Q:'EC  I $D(^(EC,0)) S ECD=$P(^(0),U) F  S EC1=$O(^RA(79.2,EC1)) Q:'EC1  I $D(^(EC1,0)) S ECD1=$P(^(0),U),^TMP($J,"RAD",EC_"-"_EC1,EC_"-"_EC1)=ECD_"-"_ECD1
"RTN","ECXFELOC",25,0)
NUR ;S EC=0 F  S EC=$O(^NURSF(211.4,EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),U),EC1=$P($G(^SC(+EC1,0)),U),^TMP($J,"NUR",EC,EC)=EC1 ;132
"RTN","ECXFELOC",26,0)
SUR F EC=1:1:14 S EC2=$P($T(@EC),";",3) F EC1="I","A","D","M","P","C","S" S EC3=$P($T(@EC1),";",3),^TMP($J,"SUR",$P(EC2,U)_EC1,EC)=$P(EC2,U,2)_"-"_EC3
"RTN","ECXFELOC",27,0)
1 ;;ORGE^GENERAL PURPOSE OPERATING ROOM
"RTN","ECXFELOC",28,0)
2 ;;OROR^ORTHOPEDIC OPERATING ROOM
"RTN","ECXFELOC",29,0)
3 ;;ORCA^CARDIAC OPERATING ROOM
"RTN","ECXFELOC",30,0)
4 ;;ORNE^NEUROSURGERY OPERATING ROOM
"RTN","ECXFELOC",31,0)
5 ;;ORCN^CARDIAC/NEURO OPERATING ROOM
"RTN","ECXFELOC",32,0)
6 ;;ORAM^AMBULATORY OPERATING ROOM
"RTN","ECXFELOC",33,0)
7 ;;ORIN^INTENSIVE CARE UNIT
"RTN","ECXFELOC",34,0)
8 ;;OREN^ENDOSCOPY ROOM
"RTN","ECXFELOC",35,0)
9 ;;ORCY^CYSTOSCOPY ROOM
"RTN","ECXFELOC",36,0)
10 ;;ORWA^WARD
"RTN","ECXFELOC",37,0)
11 ;;ORCL^CLINIC
"RTN","ECXFELOC",38,0)
12 ;;ORDE^DEDICATED ROOM
"RTN","ECXFELOC",39,0)
13 ;;OROT^OTHER LOCATION
"RTN","ECXFELOC",40,0)
14 ;;ORNO^UNKNOWN
"RTN","ECXFELOC",41,0)
I ;;IMPLANTS
"RTN","ECXFELOC",42,0)
A ;;ANESTHESIA TIME
"RTN","ECXFELOC",43,0)
D ;;SURGERY TIME (DENTAL)
"RTN","ECXFELOC",44,0)
M ;;SURGERY TIME (MEDICINE)
"RTN","ECXFELOC",45,0)
P ;;SURGERY TIME (PSYCH)
"RTN","ECXFELOC",46,0)
C ;;SURGERY TIME (SPINAL CORD)
"RTN","ECXFELOC",47,0)
S ;;SURGERY TIME (SURGERY)
"RTN","ECXFELOC",48,0)
UDP S EC=0 F  S EC=$O(^DG(40.8,EC)) Q:'EC  I $D(^DG(40.8,EC,0)) S EC1=$E($P(^(0),U),1,30),^TMP($J,"UDP","UDP"_EC,EC)="Unit Dose Medications-"_EC1
"RTN","ECXFELOC",49,0)
DEN ;S EC=0 F  S EC=$O(^DENT(225,EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),U),^TMP($J,"DEN",EC1,EC)="Dental "_EC1
"RTN","ECXFELOC",50,0)
 ;
"RTN","ECXFELOC",51,0)
PRINT ;
"RTN","ECXFELOC",52,0)
 S EC="" F  S EC=$O(^TMP($J,EC)),EC1="" Q:EC=""  Q:QFLG  D HEAD Q:QFLG  F  S EC1=$O(^TMP($J,EC,EC1)),EC2=""  Q:EC1=""  Q:QFLG  F  S EC2=$O(^TMP($J,EC,EC1,EC2)) Q:EC2=""  Q:QFLG  D
"RTN","ECXFELOC",53,0)
 .W !,?5,EC1,?23,^(EC2) I $Y+3>IOSL D HEAD Q:QFLG
"RTN","ECXFELOC",54,0)
OUT I $E(IOST)="C"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECXFELOC",55,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXFELOC",56,0)
 K ^TMP($J),DAT,EC,EC1,EC2,EC3,ECD,ECD1,ECS,ECSC,ID,JJ,LN,PG,POP,QFLG,RD,SS,X,Y
"RTN","ECXFELOC",57,0)
 W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","ECXFELOC",58,0)
HEAD ;
"RTN","ECXFELOC",59,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXFELOC",60,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXFELOC",61,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,?15,"Feeder Location List For Feeder System ",EC,?72,"Page: ",PG,!!,?5,"FEEDER LOCATION",?23,"DESCRIPTION",!,LN
"RTN","ECXFELOC",62,0)
 Q
"RTN","ECXKILL")
0^4^B9384165^B8836800
"RTN","ECXKILL",1,0)
ECXKILL ;BIR/DMA,PTD-Kill Local Variables ;11/23/10  13:49
"RTN","ECXKILL",2,0)
 ;;3.0;DSS EXTRACTS;**9,8,21,24,31,39,49,84,89,105,112,127,132**;Dec 22, 1997;Build 18
"RTN","ECXKILL",3,0)
 ;
"RTN","ECXKILL",4,0)
 K %,%DT,%Y,%ZIS,A,A1,A2,ABR,B,BY,D,D0,D1,DA,DAT,DATA,DATA1,DATA2,DATA6
"RTN","ECXKILL",5,0)
 K DATAOP,DD,DFN,DHDH,DIC,DIE,DIK,DINUM,DIQ
"RTN","ECXKILL",6,0)
 K ECDAPRNP,ECDPRNPI,ECISNPI,ECDOCNPI
"RTN","ECXKILL",7,0)
 K ECU1NPI,ECU2NPI,ECU3NPI,ECU4NPI,ECU5NPI,ECU4A,ECU5A,ECXPPC4,ECXPPC5
"RTN","ECXKILL",8,0)
 K DIR,DIRUT,DO,DR,DTOUT,DUOUT,EC,EC0,EC1,EC10,EC11,EC16,EC2,EC23,EC2NODE
"RTN","ECXKILL",9,0)
 K EC3,EC42,EC50,EC6,EC7,ECA,ECAC,ECACA,ECAD,ECADM,ECALL
"RTN","ECXKILL",10,0)
 K ECANE,ECAO,ECARG,ECAS,ECAT,ECATSV,ECB,ECC,ECCA,ECCAN,ECCAT,ECCH,ECCN
"RTN","ECXKILL",11,0)
 K ECCNT,ECCS,ECCSC,ECD,ECD0,ECD1,ECDA,ECDAL,ECDAT,ECASA
"RTN","ECXKILL",12,0)
 K ECDATA,ECDATA1,ECDATE,ECDEN,ECDEX,ECDF,ECDFN,ECDFN0,ECDI,ECDIA,ECDIF
"RTN","ECXKILL",13,0)
 K ECDIV,ECDL,ECDN,ECDNEW,ECDO,ECDOC,ECDR,ECDRG,ECDS,ECDSSU,ECDT,ECDTTM
"RTN","ECXKILL",14,0)
 K ECDU,ECEC0,ECED,ECED1,ECEDN,ECEDNEW,ECF,ECF1,ECFD,ECFDT,ECFILE,ECFK
"RTN","ECXKILL",15,0)
 K ECFL,ECFR,ECGRP,ECH,ECHD,ECHEAD,ECI,ECID,ECIEN,ECIFN,ECIN,CCDORD
"RTN","ECXKILL",16,0)
 K ECINST,ECINV,ECIV,ECJ,ECK,ECL,ECL1,ECLAN,ECLAST,ECLDT,ECLINK,ECLIST
"RTN","ECXKILL",17,0)
 K ECLL,ECLN,ECLNC,ECLOC,ECLRN,ECLX,ECLY,ECM,ECMAX,ECMIN,CCDGVN,CCUNIT
"RTN","ECXKILL",18,0)
 K ECXMISS,ECMN,ECMOD,ECMODS,ECMORE,ECMS,ECMSG,ECMSN,ECMT,ECMW,ECMY,ECN
"RTN","ECXKILL",19,0)
 K ECNA,ECNDC,ECNDF,ECNFC,ECNL,ECNO,ECNODE,ECNOGO,ECXADT,ECXATM,CCIEN
"RTN","ECXKILL",20,0)
 K ECNT,ECO,ECO0,ECO1,ECO2,ECODE,ECODE0,ECODE1,ECODE2,ECODE3,ECONE,ECOPAY
"RTN","ECXKILL",21,0)
 K ECOB,ECATTNPI,ECPWNPI,ECXUSNPI,ECPWNPI,ECXOEF,ECXOEFDT,ECPLACE,CCTYPE
"RTN","ECXKILL",22,0)
 K ECOPAYT,ECORTY,ECOS,ECP,ECPACK,ECPCE,ECPCE1,ECPCE2,ECPCE3,ECPCE4,ECOLD
"RTN","ECXKILL",23,0)
 K ECPCE5,ECPCE6,ECPCE7,ECPIECE,ECPN,ECPRC,ECPRO,ECODE2,ECXASTA,ECXAMED
"RTN","ECXKILL",24,0)
 K ECPROF,ECPT,ECPTF,ECPTPR,ECPTTM,ECQ,ECQT,ECQTY,ECRD,ECRE,ECRED,ECREF
"RTN","ECXKILL",25,0)
 K ECRFL,ECRN,ECROU,ECRR,ECRS,ECRSD,ECRTN,ECRX,ECS,ECSA,ECSC,ECXSCADT
"RTN","ECXKILL",26,0)
 K ECSD,ECSD1,ECSDN,ECSN,ECSR,ECSS,ECST,ECSTOP,ECSU,ECT,ECT1,ECTD,ECTD1
"RTN","ECXKILL",27,0)
 K ECTEMP,ECTM,ECTNTL,ECTOTAL,ECTREAT,ECTRT,ECTS,ECTY,ECXLOGIC,ECXDATES,ECXEST,ECXECE
"RTN","ECXKILL",28,0)
 K ECLRBILL,ECDSSFK,ECLRTNM,ECLRDTNM,ECXPROPC,ECPRONPI,ECCLAS,ECPTNPI,ECXORN,ECXORT
"RTN","ECXKILL",29,0)
 K ACTDT,DRG,DRUG,ECPROPC,ECVACL,ECVNDC,ECXENC,ECXENRL,ECXERI,ECXERR,ECXIVID,ECXNOD,ECXNPRFI,ECXOX,ECXOSC,ECXSCATM,ECXUSRTN,IDAT,OK,PIEN,PLACEHLD,SCADT
"RTN","ECXKILL",30,0)
 D ^ECXKILL1
"RTN","ECXKILL",31,0)
 ;
"RTN","ECXKILL",32,0)
AUDIT ;kill audit report variables, close slave printer
"RTN","ECXKILL",33,0)
 K %DT,ECX,ECXARRAY,ECXACC,ECXALL,ECXAUD,ECXCODE,ECXD,ECXDEF,ECXDESC,ECXDIV
"RTN","ECXKILL",34,0)
 K ECXRCST,ECXRQST,ECXEND,ECXERR,ECXEXT,ECXHEAD,ECXLOC,ECXPGM,ECXPHCPC
"RTN","ECXKILL",35,0)
 K ECXPRIME,ECXPRO,ECXREPT,ECXRUN,ECXSAVE,ECXSTART,ECXSRCE
"RTN","ECXKILL",36,0)
 K ECXCTAMT,ECXFEKEY,ECXFELOC,ECXFORM,ECXGRPR,ECXHCPC,ECXPHCPC,ECXHCPCS
"RTN","ECXKILL",37,0)
 K ECXPODX,ECXPODX1,ECXPODX2,ECXPODX3,ECXPODX4,ECXPODX5,ECPANPI
"RTN","ECXKILL",38,0)
 K ECXLAB,ECXLLC,ECXLMC,ECXQTY,ECXREQ,ECXSTAT,ECXTYPE
"RTN","ECXKILL",39,0)
 K IO("Q"),POP,DIR,DIC,DIE,DA,DR,DO,DIRUT,DUOUT,DTOUT
"RTN","ECXKILL",40,0)
 K ^TMP($J)
"RTN","ECXKILL",41,0)
 I IO=IO(0),IOST'="C" D ^%ZISC
"RTN","ECXKILL",42,0)
 Q
"RTN","ECXKILL1")
0^5^B12209973^B7329433
"RTN","ECXKILL1",1,0)
ECXKILL1 ;ALB/ESD Kill Local DSS Variables (continued) ;7/25/11  11:03
"RTN","ECXKILL1",2,0)
 ;;3.0;DSS EXTRACTS;**39,46,89,120,127,132**;Dec 22, 1997;Build 18
"RTN","ECXKILL1",3,0)
 ;
"RTN","ECXKILL1",4,0)
 K ECUD,ECUI,ECUN,ECUN1,ECUNIT,ECURG,ECUT,ECUT2,ECUT3,ECV,ECW,ECWC,ECWD
"RTN","ECXKILL1",5,0)
 K ECX,ECXB,ECXLNCNT,ECXMDA,ECXMDT,ECXNOW,ECXQUEUE,ECXS,ECXSTART
"RTN","ECXKILL1",6,0)
 K ECY,ECYM,ECZ,ECZNODE,ELIG,ENL,FAC,FLDS,FR,I,ID,IOP,J,K,L,LOC,LOS,LRDF
"RTN","ECXKILL1",7,0)
 K OPC,P,P1,P11,P2,P3,POP,Q,RD,RESP,QFLG
"RTN","ECXKILL1",8,0)
 K SC,SRDA,SRNM,STC,SU,TEN,TES,TIME,TO,TOT,VAERR,VAIP,W,X,X1,X2,XMDUZ
"RTN","ECXKILL1",9,0)
 K XMER,XMFROM,XMREC,XMRG,XMSER,XMSUB,ECXLH,ECXLC,ECXMC
"RTN","ECXKILL1",10,0)
 K XMTEXT,XMY,XMZ,XQMSG,XQSOP,XQSUB,XX,Y,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","ECXKILL1",11,0)
 K ZTSK,ECSTA,ECCTY,STATE,COUNTY,ECVER,ECXADMS
"RTN","ECXKILL1",12,0)
 K ECCPT,ECEKG,ECICD,ECPROV,ECREC,ECVAL,ECVIS,NCNTR,PTADT,STOP,ECIVRM
"RTN","ECXKILL1",13,0)
 K ECOR,ECWK,ECWKLD,LREDT,LRSDT,FD,ECHL,ECARSC,ECX2TME
"RTN","ECXKILL1",14,0)
 K ECDTST,ECLTST,ECODE2,ECORDT,ECORTM,ECRDDT,ECRDTM,ECRES,ECWCDA,ECXINST
"RTN","ECXKILL1",15,0)
 K ECXATT,ECXATTL,ECXATTN,ECXLOS,ECXLOSA,ECXLOSP,ECXPRV,ECXPRVL,ECXPRVN
"RTN","ECXKILL1",16,0)
 K ECXTRT,ECXTRTL,ECXTRTN,ECXSPC,ECXSPCL,ECXSPCN,ECCSC,ECXSC,ECXP1
"RTN","ECXKILL1",17,0)
 K ECXP2,ECXP3,ECXDSSI,ECXDSSD,ECXYM,ECXDIV,ECXDAY,ECXSSN,ECXDATE,ECXPNM
"RTN","ECXKILL1",18,0)
 K ECXDFN,ECXA,ECPTNPI,ECCLAS,ECCLAS2,ECASPR,ECASNPI,ECSRNPI,ECATNPI
"RTN","ECXKILL1",19,0)
 K ECSANPI,ECXCPT,ECXCMOD,ECXFAC,ECXMN,ECXTS,ECXENEL,ECXSAI,ECXPAYOR
"RTN","ECXKILL1",20,0)
 K ECXAST,ECXEST,ECXRST,ECXMST,ECXMIL,ECXPST,ECXPLOC,ECXPOS,ECXSEX,ECXDOB
"RTN","ECXKILL1",21,0)
 K ECXRELG,ECXEMP,ECXHI,ECXSTATE,ECXCNTY,ECXZIP,ECXMAR,ECXRACE,ECXVET
"RTN","ECXKILL1",22,0)
 K ECXVNS,ECXELIG,ECXENRL,ECXPRNPI,ECXPRCLS,ECXWPRV,ECXW,ECXCNT,ECXCOST
"RTN","ECXKILL1",23,0)
 K ECXADM,ECXPROV,ECXPROVP,ECXPROVN,ECXBILST,ECU1A,ECU2A,ECU3A,ECU1NPI
"RTN","ECXKILL1",24,0)
 K ECU2NPI,ECU3NPI,ECDENNPI,ECXWRD,ECXWTO,ECXAO,ECXIR,ECXCLIN,ECXICD9
"RTN","ECXKILL1",25,0)
 K ECXIEN,ECXKEY,ECXMPI,ECXSTOP,ECXSVC,ECXOBS,ECXADMDT,ECXAOL,ECXCEDT
"RTN","ECXKILL1",26,0)
 K ECXCIEN,ECXCNH,ECXCSDT,ECXCTYP,ECXENC,ECXOBS,ECXODIV,ECXSHAD
"RTN","ECXKILL1",27,0)
 K ECXORDDT,ECXORDPH,ECXORDPR,ECXORDST,ECXDAPR,ECXDPCT,ECXDPR,ECXRPHY
"RTN","ECXKILL1",28,0)
 K ECXPDIV,ECXATYP,ECXPVST,ECXSADM,ECXMTST,ECXQ,ECXHNCI,ECXETH,ECXRC1
"RTN","ECXKILL1",29,0)
 K ECXPHI,ECXCNHU,ECXCAT,ECXPRIOR,ECXOPNPI,ECXAOT,ECXCNTRY,ECXSHADI,ECXPATCAT
"RTN","ECXKILL1",30,0)
 K ECU,ECU1,ECU2,ECU3,ECAC1,ECAC1S,ECAC2,ECAC2S,ECDSS,ECUPCE,ECUSTOP
"RTN","ECXKILL1",31,0)
 K ECXCVE,ECXCVEDT,ECXCVENC,ECXDOM,ECXDSSP,ECXEUSTA,ECXINP,ECXIO,ICD9
"RTN","ECXKILL1",32,0)
 K ECXMEAN,ECXPPC1,ECXPPC2,ECXPPC3,ECXPTYPE,ECXREL,ECXSBGRP,ECXUESTA
"RTN","ECXKILL1",33,0)
 K ECXPRV1,ECXPRV2,ECXPRV3,ECXPRV4,ECXPRV5,ECXPPC4,ECXPPC5,ECPR1NPI
"RTN","ECXKILL1",34,0)
 K ECPR2NPI,ECPR3NPI,ECPR4NPI,ECPR5NPI
"RTN","ECXKILL1",35,0)
 K ECXICD91,ECXICD92,ECXICD93,ECXICD94,ECSP1,ECSP2,ECSP3,ECSP4,ECSP5,ECSPPC1,ECSPPC2,ECSPPC3,ECSPPC4,ECSPPC5,ECSPNPI1,ECSPNPI2,ECSPNPI3,ECSPNPI4,ECSPNPI5
"RTN","ECXKILL1",36,0)
 K ECXUNIT,ECXVIET,CNT,I,ECXCFLG,ECXBUK1,ECXBUK2,PROVS,PROVSPC,PROVSNPI
"RTN","ECXKILL1",37,0)
 K ECU4,ECU5,ECU4A,ECU5A,ECXU4NPI,ECXU5NPI,COUNTS,ALEN,ECPRNPI,ECXCBOC,ECXHNC,ECXICD9P,ECXOBI,ECXPCPNP,ECXTI,ECXVISIT,ECXVIST
"RTN","ECXKILL1",38,0)
 K ECXCPT,ECXCPT1,ECXCPT2,ECXCPT3,ECXCPT4,ECXCPT5,ECXCPT6,ECXCPT7,ECXCPT8
"RTN","ECXKILL1",39,0)
 K DIVISION,DONE,ECDAY,ECENEC,ECENMST,ECENRI,ECENSC,ECHL2,ECHL2S,ECHLS,ECTIME,ECXADD,ECXATNPI,ECXJ,ECXMNS,ECXMOD,ECXNPPDT,ECXOS,ECXPPC,ECXQV,ECXTM,ECXVST,ELGA,FHDFN,GTOT,LASTDAY,PRODAY,SDATE
"RTN","ECXKILL1",40,0)
 Q
"RTN","ECXLABN")
0^25^B44530777^B44410370
"RTN","ECXLABN",1,0)
ECXLABN ;ALB/JAP,BIR/CML-Lab Extract for DSS (New Format - With LMIP Codes) ;10/4/10  16:56
"RTN","ECXLABN",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,28,24,30,31,32,33,39,42,46,70,71,80,92,107,105,112,127,132**;Dec 22, 1997;Build 18
"RTN","ECXLABN",3,0)
BEG ;entry point
"RTN","ECXLABN",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABN",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABN",6,0)
 Q
"RTN","ECXLABN",7,0)
 ;
"RTN","ECXLABN",8,0)
START ; entry when queued
"RTN","ECXLABN",9,0)
 K ^LRO(64.03),^TMP($J,"ECXP")
"RTN","ECXLABN",10,0)
 N ECDOCPC
"RTN","ECXLABN",11,0)
 S LRSDT=ECSD,LREDT=ECED,QFLG=0
"RTN","ECXLABN",12,0)
 D ^LRCAPDSS
"RTN","ECXLABN",13,0)
 ;quit if no completion date for API compile
"RTN","ECXLABN",14,0)
 I '$P($G(^LRO(64.03,1,1,1,0)),U,4) Q
"RTN","ECXLABN",15,0)
 ;quit if tasked and user sends stop request
"RTN","ECXLABN",16,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD D  Q
"RTN","ECXLABN",17,0)
 .S QFLG=1
"RTN","ECXLABN",18,0)
 .K ^LRO(64.03) S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",19,0)
 ;otherwise, continue
"RTN","ECXLABN",20,0)
 K ECXDD D FIELD^DID(64.03,1,,"SPECIFIER","ECXDD")
"RTN","ECXLABN",21,0)
 S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)),ECLRN=1 K ECXDD
"RTN","ECXLABN",22,0)
 F  S ECLRN=$O(^LRO(64.03,ECLRN)) Q:'ECLRN  D  Q:QFLG
"RTN","ECXLABN",23,0)
 .Q:'$D(^LRO(64.03,ECLRN,0))
"RTN","ECXLABN",24,0)
 .S EC1=^LRO(64.03,ECLRN,0),ECDOC=ECPROF_$P(EC1,U,2)
"RTN","ECXLABN",25,0)
 .S ECDOCNPI=$$NPI^XUSNPI("Individual_ID",$P(EC1,U,2),$P(EC1,U,4))
"RTN","ECXLABN",26,0)
 .S:+ECDOCNPI'>0 ECDOCNPI="" S ECDOCNPI=$P(ECDOCNPI,U)
"RTN","ECXLABN",27,0)
 .S ECLOC=$P(EC1,U,15),EC=$P(EC1,U,3),ECDOCPC=$$PRVCLASS^ECXUTL($P(EC1,U,2),$P(EC1,U,4))
"RTN","ECXLABN",28,0)
 .I EC]"" D GET
"RTN","ECXLABN",29,0)
 K ^LRO(64.03),^TMP($J,"ECXP") S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",30,0)
 K ECDOCNPI,ECXAGC,ECXL1,ECXL2
"RTN","ECXLABN",31,0)
 Q
"RTN","ECXLABN",32,0)
 ;
"RTN","ECXLABN",33,0)
GET ;get data
"RTN","ECXLABN",34,0)
 N X,ECXSTN,QFLAG,ECXDFN
"RTN","ECXLABN",35,0)
 S ECF=$S($P(EC,";",2)="DPT(":2,$P(EC,";",2)="LRT(67,":67,1:0) Q:'ECF
"RTN","ECXLABN",36,0)
 S ECIFN=$P(EC,";"),QFLAG=0
"RTN","ECXLABN",37,0)
 ;resolve ecloc
"RTN","ECXLABN",38,0)
 S ECXL1=+$P(ECLOC,";",1),ECXL2=$P(ECLOC,";",2)
"RTN","ECXLABN",39,0)
 I ECF=2 S ECLOC=$S(ECXL1>0:ECXL1,1:"") I ECXL2]"",ECXL2'="SC(" S ECLOC=""
"RTN","ECXLABN",40,0)
 I ECF=67 D  S ECLOC=ECXSTN
"RTN","ECXLABN",41,0)
 .S (ECXSTN,ECXAGC)=""
"RTN","ECXLABN",42,0)
 .I (ECXL2'="DIC(4,")!('$D(^DIC(4,ECXL1))) S ECXSTN="XXXXX",ECXAGC="XX" Q
"RTN","ECXLABN",43,0)
 .S ECXSTN=$P(^DIC(4,ECXL1,"99"),U,1),ECXAGC=$E($P(^(99),U,5),1,2)
"RTN","ECXLABN",44,0)
 .S:ECXSTN="" ECXSTN="ZZZZZ" S:ECXAGC="" ECXAGC="ZZ"
"RTN","ECXLABN",45,0)
 S ECDT=$P(EC1,U,13),ECD=$P(ECDT,"."),ECTM=$$ECXTIME^ECXUTL(ECDT)
"RTN","ECXLABN",46,0)
 S ECWKLD=$P(EC1,U,11),ECWK="" I $D(^LAM(ECWKLD,0)) S ECWK=$P(^(0),U,2)
"RTN","ECXLABN",47,0)
 S (ECXADMDT,ECTREAT,ECNA,ECSN,ECMN,ECPTTM,ECPTPR,ECCLAS)="",ECA="O",ECXERR=0
"RTN","ECXLABN",48,0)
 S (ECPTNPI,ECASPR,ECCLAS2,ECASNPI)=""
"RTN","ECXLABN",49,0)
 ;get the patient data if record is in file #2
"RTN","ECXLABN",50,0)
 I ECF=2 D PAT(ECIFN,ECDT,.ECXERR) S ECXDFN=ECIFN
"RTN","ECXLABN",51,0)
 Q:ECXERR
"RTN","ECXLABN",52,0)
 ;get patient data if record is in file #67
"RTN","ECXLABN",53,0)
 I ECF=67 S ECSN="000123456",ECNA="RFRL",ECXDFN=0 I $D(^LRT(67,ECIFN,0)) D  Q:QFLAG
"RTN","ECXLABN",54,0)
 .S ECXMPI="",EC0=^LRT(67,ECIFN,0),ECNA=$E($P($P(EC0,U),",")_"    ",1,4)
"RTN","ECXLABN",55,0)
 .S ECSN=$P(EC0,U,9),ECXERI="" D
"RTN","ECXLABN",56,0)
 ..S ECNA=$TR(ECNA,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABN",57,0)
 ..I ECSN="" S ECSN="000123456" Q
"RTN","ECXLABN",58,0)
 ..S ECSN=$TR(ECSN," "),ECSN=$TR(ECSN,"-")
"RTN","ECXLABN",59,0)
 ..I ($L(ECSN)<9)!($L(ECSN)>10) S ECSN="000123456" Q
"RTN","ECXLABN",60,0)
 ..I $L(ECSN)=9,ECSN'?9N S ECSN="000123456" Q
"RTN","ECXLABN",61,0)
 ..I $L(ECSN)=10,ECSN'?9N1"P" S ECSN="000123456"
"RTN","ECXLABN",62,0)
 ..I '$$SSN^ECXUTL5(ECSN,ECF) S QFLAG=1
"RTN","ECXLABN",63,0)
 ;
"RTN","ECXLABN",64,0)
 ;- Only set treating spec (TS) to TS in file #64.03 if it does not exist
"RTN","ECXLABN",65,0)
 I ECA="I",ECTREAT="" S ECTREAT=$P($G(^DIC(45.7,+$P(EC1,U,10),0)),U,2)
"RTN","ECXLABN",66,0)
 S (ECXDOM,ECXDSSD)=""
"RTN","ECXLABN",67,0)
 S X=$G(^ECX(727.831,+ECTREAT,0)) S:X'="" ECXDOM=$P(X,U,2)
"RTN","ECXLABN",68,0)
 ;
"RTN","ECXLABN",69,0)
 ;- Get ordering stop code and ordering date
"RTN","ECXLABN",70,0)
 S ECXORDST=+$P(EC1,U,15),ECXORDST=$S(ECXORDST:$P($G(^ECX(728.44,ECXORDST,0)),U,2),1:"")
"RTN","ECXLABN",71,0)
 S ECXORDDT=$S($P(EC1,U,14):$$ECXDATE^ECXUTL($P(EC1,U,14),ECXYM),1:"")
"RTN","ECXLABN",72,0)
 ;
"RTN","ECXLABN",73,0)
 ;- Get Production Division - ECXDIEN added p-80
"RTN","ECXLABN",74,0)
 N ECXPDIV,ECXDIEN S ECXDIEN=$O(^DIC(4,"D",ECINST,"")),ECXPDIV=$$RADDIV^ECXDEPT(ECXDIEN)  ;P-46
"RTN","ECXLABN",75,0)
 K ECXDIEN
"RTN","ECXLABN",76,0)
 ;
"RTN","ECXLABN",77,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLABN",78,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECA,ECTREAT)
"RTN","ECXLABN",79,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXLABN",80,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXLABN",81,0)
 ;
"RTN","ECXLABN",82,0)
 ;- get  lab billable procedure, dss feeder key, data name, and data location
"RTN","ECXLABN",83,0)
 N ECXLEX
"RTN","ECXLABN",84,0)
 S ECXLEX="" I $D(^LRO(64.03,ECLRN,2)) S ECXLEX=^(2)
"RTN","ECXLABN",85,0)
 S ECLRBILL=$P(ECXLEX,U),ECDSSFK=$P(ECXLEX,U,2)
"RTN","ECXLABN",86,0)
 S ECLRTNM=$P(ECXLEX,U,3),ECLRDTNM=$P(ECXLEX,U,4)
"RTN","ECXLABN",87,0)
 ;- If no encounter number don't file record
"RTN","ECXLABN",88,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECA,ECSN,ECXADMDT,ECD,ECTREAT,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXLABN",89,0)
 ;create extract record only if patient name and accession area exist
"RTN","ECXLABN",90,0)
 I ECNA]"" S ECT=$P(EC1,U,8),ECURG=$P(EC1,U,9),EC=+$P(EC1,U,7) I EC D
"RTN","ECXLABN",91,0)
 .S:ECF=2 ECACA=EC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",92,0)
 .S:ECF=67 ECACA=ECXAGC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",93,0)
 .;--getting LOINC Code
"RTN","ECXLABN",94,0)
 .N ECXLNC,ECLRID,LRIFN,LRIDT,ECRSLT,ECRSP8
"RTN","ECXLABN",95,0)
 .S ECXLNC="",ECLRID=0
"RTN","ECXLABN",96,0)
 .;--getting lab patient id
"RTN","ECXLABN",97,0)
 .S LRIFN=+$P(EC1,U,3)
"RTN","ECXLABN",98,0)
 .I ECF=2 S:$D(^DPT(LRIFN,"LR")) ECLRID=^DPT(LRIFN,"LR")
"RTN","ECXLABN",99,0)
 .I ECF=67 S:$D(^LRT(67,LRIFN,"LR")) ECLRID=^LRT(67,LRIFN,"LR")
"RTN","ECXLABN",100,0)
 .; using ECINST=institution, LRIFN=lab file patient id, EC=test (pt 60), LRIDT=date and time to get loinc
"RTN","ECXLABN",101,0)
 .S LRIDT=$P(EC1,U,12)
"RTN","ECXLABN",102,0)
 .;--looking up test to find subscript to lookup value
"RTN","ECXLABN",103,0)
 .D
"RTN","ECXLABN",104,0)
 ..N ECTST S ECTST=$P(EC1,U,8)
"RTN","ECXLABN",105,0)
 ..S ECPT=$S($D(^LAB(60,ECTST,0)):$P(^LAB(60,ECTST,0),U,12),1:""),ECPT=$P(ECPT,",",2)
"RTN","ECXLABN",106,0)
 ..Q:$G(ECPT)']""  Q:'$D(^LR(ECLRID,"CH",LRIDT,ECPT))
"RTN","ECXLABN",107,0)
 ..S ECRSLT=$$TSTRES^LRRPU(ECLRID,"CH",LRIDT,ECPT,"",1) ;DBIA #4658
"RTN","ECXLABN",108,0)
 ..S ECRSP8=$P(ECRSLT,U,8)
"RTN","ECXLABN",109,0)
 ..S ECXLNC=$P($P(ECRSP8,"!",3),";")
"RTN","ECXLABN",110,0)
 ..Q:$G(ECXLNC)']""
"RTN","ECXLABN",111,0)
 .D FILE
"RTN","ECXLABN",112,0)
 Q
"RTN","ECXLABN",113,0)
 ;
"RTN","ECXLABN",114,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get/set patient data
"RTN","ECXLABN",115,0)
 N X,OK,PT
"RTN","ECXLABN",116,0)
 ;get data
"RTN","ECXLABN",117,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXLABN",118,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECNA=$P(PT,U)
"RTN","ECXLABN",119,0)
 .S ECSN=$P(PT,U,2),ECXMPI=$P(PT,U,3),ECXERI=$P(PT,U,4)
"RTN","ECXLABN",120,0)
 ;set data and save for later
"RTN","ECXLABN",121,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXLABN",122,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD,"."),"1;3",.ECXPAT)
"RTN","ECXLABN",123,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXLABN",124,0)
 .S ECNA=ECXPAT("NAME"),ECSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXLABN",125,0)
 .S ECXERI=ECXPAT("ERI")
"RTN","ECXLABN",126,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECNA_U_ECSN_U_ECXMPI_U_ECXERI
"RTN","ECXLABN",127,0)
 ;get date specific data
"RTN","ECXLABN",128,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECA=$P(X,U),ECMN=$P(X,U,2),ECTREAT=$P(X,U,3),ECXADMDT=$P(X,U,4)
"RTN","ECXLABN",129,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."),ECPROF)
"RTN","ECXLABN",130,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXLABN",131,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXLABN",132,0)
 Q
"RTN","ECXLABN",133,0)
 ;
"RTN","ECXLABN",134,0)
FILE ;file record
"RTN","ECXLABN",135,0)
 ;node0
"RTN","ECXLABN",136,0)
 ;facility^patient number^SSN (or equivalent)^name^in/out ECA^
"RTN","ECXLABN",137,0)
 ;day^accession area^abbreviation^test^urgency^treating spec^
"RTN","ECXLABN",138,0)
 ;location^provider and file^
"RTN","ECXLABN",139,0)
 ;movement number^file^time^workload code^primary care team^
"RTN","ECXLABN",140,0)
 ;primary care provider
"RTN","ECXLABN",141,0)
 ;node1
"RTN","ECXLABN",142,0)
 ;mpi^dss dept^provider npi^pc provider npi^pc prov person class^
"RTN","ECXLABN",143,0)
 ;assoc pc prov^assoc pc prov person class^assoc pc prov npi^
"RTN","ECXLABN",144,0)
 ;dom ECXDOM^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXLABN",145,0)
 ;ord stop code ECXORDST^ord date ECXORDDT^production division
"RTN","ECXLABN",146,0)
 ;ECXPDIV^^ordering provider person class^emergency response indicator
"RTN","ECXLABN",147,0)
 ;(FEMA) ECXERI^associate pc provider npi ECASNPI^primary care provider
"RTN","ECXLABN",148,0)
 ;npi ECPTNPI^provider npi ECDOCNPI^LOINC code ECLNC^lab billable procedure^dss feeder key
"RTN","ECXLABN",149,0)
 ;node2
"RTN","ECXLABN",150,0)
 ;data name^data location^PATCAT
"RTN","ECXLABN",151,0)
 ;ECDOCPC
"RTN","ECXLABN",152,0)
 N DA,DIK
"RTN","ECXLABN",153,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABN",154,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECIFN_U_ECSN_U_ECNA_U_ECA_U
"RTN","ECXLABN",155,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECACA_U_ECT_U_ECURG_U
"RTN","ECXLABN",156,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXLABN",157,0)
 N ECXDATA
"RTN","ECXLABN",158,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECTREAT,.ECXDATA)
"RTN","ECXLABN",159,0)
 S ECTREAT=$G(ECXDATA(7))
"RTN","ECXLABN",160,0)
 ;convert eclrbill  to y/n
"RTN","ECXLABN",161,0)
 S ECLRBILL=$S(ECLRBILL=1:"Y",1:"N")
"RTN","ECXLABN",162,0)
 ;convert ecdssfk to y/n
"RTN","ECXLABN",163,0)
 S ECDSSFK=$S(ECDSSFK=1:"Y",1:"")
"RTN","ECXLABN",164,0)
 ;done
"RTN","ECXLABN",165,0)
 S ECODE=ECODE_ECTREAT_U_ECLOC_U_ECDOC_U_ECMN_U_ECF_U_ECTM_U_ECWK_U
"RTN","ECXLABN",166,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U
"RTN","ECXLABN",167,0)
 ;(ECACA=acc area^abbreviation)
"RTN","ECXLABN",168,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_ECCLAS_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXLABN",169,0)
 S ECODE1=ECODE1_ECXORDST_U_ECXORDDT_U_ECXPDIV_U
"RTN","ECXLABN",170,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECDOCPC
"RTN","ECXLABN",171,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI
"RTN","ECXLABN",172,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECASNPI_U_ECPTNPI_U_ECDOCNPI
"RTN","ECXLABN",173,0)
 I ECXLOGIC>2008 S ECODE1=ECODE1_U_$G(ECXLNC)
"RTN","ECXLABN",174,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECLRBILL_U_ECDSSFK_U,ECODE2=ECLRTNM_U_ECLRDTNM_U_ECXPATCAT
"RTN","ECXLABN",175,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXLABN",176,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLABN",177,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABN",178,0)
 Q
"RTN","ECXLABN",179,0)
 ;
"RTN","ECXLABN",180,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABN",181,0)
 S ECHEAD="LAB"
"RTN","ECXLABN",182,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABN",183,0)
 Q
"RTN","ECXLABN",184,0)
 ;
"RTN","ECXLABN",185,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABN",186,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPRO")
0^12^B39410631^B39196226
"RTN","ECXPRO",1,0)
ECXPRO ;ALB/GTS - Prosthetics Extract for DSS ;10/5/10  11:09
"RTN","ECXPRO",2,0)
 ;;3.0;DSS EXTRACTS;**9,13,15,21,24,33,39,46,71,92,105,120,127,132**;Dec 22, 1997;Build 18
"RTN","ECXPRO",3,0)
BEG ;entry point from option
"RTN","ECXPRO",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXPRO",5,0)
 D:+ECINST>0 ^ECXTRAC D ^ECXKILL
"RTN","ECXPRO",6,0)
 Q
"RTN","ECXPRO",7,0)
 ;
"RTN","ECXPRO",8,0)
START ;start package specific extract
"RTN","ECXPRO",9,0)
 ;
"RTN","ECXPRO",10,0)
 ; Input
"RTN","ECXPRO",11,0)
 ;  ECSD1   - FM formatted Beginning Date (Set by ECXTRAC)
"RTN","ECXPRO",12,0)
 ;  ECED    - FM formatted End Date (Set by ECXTRAC)
"RTN","ECXPRO",13,0)
 ;  ECSDN   - Externally formatted Start Date (Set by ECXTRAC)
"RTN","ECXPRO",14,0)
 ;  ECEDN   - Externally formatted End Date (Set by ECXTRAC)
"RTN","ECXPRO",15,0)
 ;  EC      - IEN from file #727 (Set by ECXTRAC)
"RTN","ECXPRO",16,0)
 ;  ECXYM   - Year and Month of extract (YYYYMM)
"RTN","ECXPRO",17,0)
 ;  ECXINST - IEN for division in file #4
"RTN","ECXPRO",18,0)
 ;  ECINST  - Station number of selected division
"RTN","ECXPRO",19,0)
 ;
"RTN","ECXPRO",20,0)
 N ECXLNE,ECXCT,ECXDACT,ECX0,ECXLB,ECXED1,ECINSTSV,ECXLNSTR,ECXP
"RTN","ECXPRO",21,0)
 N DIC,DR,DA,DIQ,CPTCODE,ECXNPRFI
"RTN","ECXPRO",22,0)
 D ECXBUL^ECXPRO2(.ECXLNE,ECSDN,ECEDN,EC)
"RTN","ECXPRO",23,0)
 S QFLG=0,ECXLNSTR=ECXLNE,ECXED1=ECED+.9999,ECXCT=ECSD1
"RTN","ECXPRO",24,0)
 F  S ECXCT=$O(^RMPR(660,"CT",ECXCT)) Q:(ECXCT>ECXED1)!('ECXCT)!(QFLG=1)  D
"RTN","ECXPRO",25,0)
 .S ECXDACT=0
"RTN","ECXPRO",26,0)
 .F  S ECXDACT=$O(^RMPR(660,"CT",ECXCT,ECXDACT)) Q:('ECXDACT)!(QFLG=1)  D
"RTN","ECXPRO",27,0)
 ..;* initialize variables
"RTN","ECXPRO",28,0)
 ..S (ECXDFN,ECXPNM,ECXSSN,ECXSEX,ECXSTAT,ECXDATE,ECXTYPE,ECXSRCE)=""
"RTN","ECXPRO",29,0)
 ..S (ECXHCPCS,ECXPHCPC,ECXRQST,ECXRCST,ECXFORM,ECXCTAMT,ECXLLC)=""
"RTN","ECXPRO",30,0)
 ..S (ECXLMC,ECXGRPR,ECXBILST,ECXQTY,ECXFELOC,ECXFEKEY,ECXA,ECXLH,ECXLC,ECXMC)=""
"RTN","ECXPRO",31,0)
 ..S (ECPTTM,ECPTPR,ECXAST,ECXRST,ECXEST,ECXELIG,ECXVET,ECXZIP)=""
"RTN","ECXPRO",32,0)
 ..S (ECXDOB,ECXDSSD,ECXICD9,ECXAOL,ECXHNCI,ECXSHADI,ECXETH,ECXRC1,ECXMST)=""
"RTN","ECXPRO",33,0)
 ..F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXPRO",34,0)
 ..Q:'$D(^RMPR(660,ECXDACT,0))
"RTN","ECXPRO",35,0)
 ..S ECX0=^RMPR(660,ECXDACT,0),ECXLB=$G(^RMPR(660,ECXDACT,"LB"))
"RTN","ECXPRO",36,0)
 ..K ECXP S DIC="^RMPR(660,",DR=".02;11;45",DA=ECXDACT,DIQ(0)="EI"
"RTN","ECXPRO",37,0)
 ..S DIQ="ECXP" D EN^DIQ1
"RTN","ECXPRO",38,0)
 ..S ECXDIV=$$GET1^DIQ(660,ECXDACT,8,"I")
"RTN","ECXPRO",39,0)
 ..S ECXDFN=$G(ECXP(660,ECXDACT,.02,"I"))
"RTN","ECXPRO",40,0)
 ..S ECXFORM=$G(ECXP(660,ECXDACT,11,"E"))_U_$G(ECXP(660,ECXDACT,11,"I"))
"RTN","ECXPRO",41,0)
 ..S ECXLH=$G(ECXP(660,ECXDACT,45,"I"))
"RTN","ECXPRO",42,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXCT)
"RTN","ECXPRO",43,0)
 ..S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;5",.ECXPAT)
"RTN","ECXPRO",44,0)
 ..I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXPRO",45,0)
 ..;OEF/OIF data
"RTN","ECXPRO",46,0)
 ..S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXPRO",47,0)
 ..S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXPRO",48,0)
 ..Q:'$$NTEG^ECXPRO1(ECXDFN,.ECXLNE,ECXDACT,ECX0,ECXLB,ECINST,ECXFORM)
"RTN","ECXPRO",49,0)
 ..D PROSINFO^ECXPRO1(ECXDACT,ECXLB,ECX0,ECXFORM)
"RTN","ECXPRO",50,0)
 ..S CPTCODE=$E(ECXHCPCS,1,5)
"RTN","ECXPRO",51,0)
 ..;nppd entry date
"RTN","ECXPRO",52,0)
 ..S ECXNPPDT=$$ECXDATE^ECXUTL($P(ECX0,U,1),ECXYM)
"RTN","ECXPRO",53,0)
 ..;
"RTN","ECXPRO",54,0)
 ..;Get production division ;p-46
"RTN","ECXPRO",55,0)
 ..N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV) ;p-46
"RTN","ECXPRO",56,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXPRO",57,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXPRO",58,0)
 ..;
"RTN","ECXPRO",59,0)
 ..;- CNH status (YES/NO)
"RTN","ECXPRO",60,0)
 ..S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXPRO",61,0)
 ..;
"RTN","ECXPRO",62,0)
 ..;get encounter classifications
"RTN","ECXPRO",63,0)
 ..S (ECXAO,ECXECE,ECXHNC,ECXMIL,ECXIR,ECXSHAD)=""
"RTN","ECXPRO",64,0)
 ..S ECXVISIT=$$GET1^DIQ(660,ECXDACT,8.12,"I") I ECXVISIT'="" D
"RTN","ECXPRO",65,0)
 ...D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXPRO",66,0)
 ...S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXPRO",67,0)
 ...S ECXHNC=$G(ECXVIST("HNC")),ECXMIL=$G(ECXVIST("MST")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXPRO",68,0)
 ..; - Head and Neck Cancer Indicator
"RTN","ECXPRO",69,0)
 ..S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXPRO",70,0)
 ..;
"RTN","ECXPRO",71,0)
 ..; - Proj 112/SHAD Indicator
"RTN","ECXPRO",72,0)
 ..S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXPRO",73,0)
 ..;
"RTN","ECXPRO",74,0)
 ..; ******* - PATCH 127, ADD PATCAT CODE  ********
"RTN","ECXPRO",75,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXPRO",76,0)
 ..; - set national patient record flag if exist
"RTN","ECXPRO",77,0)
 ..D NPRF^ECXUTL5
"RTN","ECXPRO",78,0)
 ..;
"RTN","ECXPRO",79,0)
 ..;- If no encounter number don't file record
"RTN","ECXPRO",80,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXPRO",81,0)
 ..I ECXFORM["-3" F ECXLAB="LAB","ORD" D
"RTN","ECXPRO",82,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXPRO",83,0)
 ...Q:ECXFELOC=""  D FILE
"RTN","ECXPRO",84,0)
 ..I ECXFORM'["-3" S ECXLAB="NONL" D
"RTN","ECXPRO",85,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXPRO",86,0)
 ...Q:ECXFELOC=""  D FILE
"RTN","ECXPRO",87,0)
 ;* Send the Exception message
"RTN","ECXPRO",88,0)
 I ECXLNSTR<ECXLNE DO
"RTN","ECXPRO",89,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXPRO",90,0)
 .S XMDUZ=.5
"RTN","ECXPRO",91,0)
 .S XMSUB=ECINST_" - Prosthetics DSS Exception Message",XMN=0
"RTN","ECXPRO",92,0)
 .S XMTEXT="^TMP(""ECX-PRO EXC"",$J,"
"RTN","ECXPRO",93,0)
 .D ^XMD
"RTN","ECXPRO",94,0)
 K ^TMP("ECX-PRO EXC",$J),XMDUZ,XMSUB,XMTEXT,XMY,XMN
"RTN","ECXPRO",95,0)
 Q
"RTN","ECXPRO",96,0)
 ;
"RTN","ECXPRO",97,0)
FILE ;file extract record
"RTN","ECXPRO",98,0)
 ;node0
"RTN","ECXPRO",99,0)
 ;facility^dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^in/out (ECXA)^
"RTN","ECXPRO",100,0)
 ;day^feeder location^
"RTN","ECXPRO",101,0)
 ;feeder key^qty^pc team^pc provider^hcpcs^icd9 (ECXICD9)^
"RTN","ECXPRO",102,0)
 ;icd9-1 (ECXICD91)^icd9-2 (ECXICD92)^icd9-3 (ECXICD93)^
"RTN","ECXPRO",103,0)
 ;icd9-4 (ECXICD94)^agent orange^radiation^env contam^eligibility^
"RTN","ECXPRO",104,0)
 ;cost^lab labor cost^lab matl cost^billing status^
"RTN","ECXPRO",105,0)
 ;vet^transaction type^req station^rec station^file#661.1 ien
"RTN","ECXPRO",106,0)
 ;node1
"RTN","ECXPRO",107,0)
 ;zip^dob^sex^amis grouper^placeholder^mpi^dss dept ECXDSSD^
"RTN","ECXPRO",108,0)
 ;pc prov person class^race^pow status^pow loc^
"RTN","ECXPRO",109,0)
 ;sharing agree payor^sharing agree ins^mst status^
"RTN","ECXPRO",110,0)
 ;enroll loc^state^county^assoc pc provider^
"RTN","ECXPRO",111,0)
 ;assoc pc prov person class^placeholder
"RTN","ECXPRO",112,0)
 ;dom (ECXDOM)^purple heart indicator (ECXPHI)^
"RTN","ECXPRO",113,0)
 ;enrollment Category (ECXCAT)^enrollment status (ECXSTAT)^
"RTN","ECXPRO",114,0)
 ;enrollment priority (ECXPRIOR)^purple heart ind (ECXPHI)^
"RTN","ECXPRO",115,0)
 ;period of serv (ECXPOS)^observ pat ind (ECXOBS)^encounter num (ECXENC)^
"RTN","ECXPRO",116,0)
 ;ao loc (ECXAOL)^CNH status (ECXCNH)^production division ECXPDIV^
"RTN","ECXPRO",117,0)
 ;head & neck canc. ind. (ECXHNCI)^ethnicity (ECXETH)^race1 (ECXRC1)^
"RTN","ECXPRO",118,0)
 ;^enrollment priority (ECXPRIOR)_enrollment sub-
"RTN","ECXPRO",119,0)
 ;group (ECXSBGRP)^user enrollee (ECXUESTA)^patient type ECXPTYPE
"RTN","ECXPRO",120,0)
 ;^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^enc cv
"RTN","ECXPRO",121,0)
 ;eligible ECXCVENC^national patient record flag ECXNPRFI^
"RTN","ECXPRO",122,0)
 ;emergency response indicator(FEMA) ECXERI^agent orange indicator ECXAO
"RTN","ECXPRO",123,0)
 ;^environ contam ECXECE^head/neck cancer ECXHNC^encntr mst ECXMIL^
"RTN","ECXPRO",124,0)
 ;radiation ECXIR^OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^
"RTN","ECXPRO",125,0)
 ;nppd code ECXNPPDC^nppd entry date ECXNPPDT
"RTN","ECXPRO",126,0)
 ;assoc pc provider npi ECASNPI^primary care provider npi ECPTNPI^
"RTN","ECXPRO",127,0)
 ;country ECXCNTRY^shad indicator ECXSHADI^shad encounter ECXSHAD^
"RTN","ECXPRO",128,0)
 ;labor hours ECXLH^
"RTN","ECXPRO",129,0)
 ;PATCAT^EXCPATCAT
"RTN","ECXPRO",130,0)
 N DA,DIK
"RTN","ECXPRO",131,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPRO",132,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXPRO",133,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXFELOC_U
"RTN","ECXPRO",134,0)
 S ECODE=ECODE_ECXFEKEY_U_ECXQTY_U_ECPTTM_U_ECPTPR_U_ECXHCPCS_U
"RTN","ECXPRO",135,0)
 S ECODE=ECODE_ECXICD9_U_ECXICD91_U_ECXICD92_U_ECXICD93_U_ECXICD94_U
"RTN","ECXPRO",136,0)
 S ECODE=ECODE_ECXAST_U_ECXRST_U_ECXEST_U_ECXELIG_U_ECXCTAMT_U_ECXLLC_U
"RTN","ECXPRO",137,0)
 S ECODE=ECODE_ECXLMC_U_ECXBILST_U_ECXVET_U_ECXTYPE_U_ECXRQST_U_ECXRCST_U
"RTN","ECXPRO",138,0)
 S ECODE=ECODE_ECXPHCPC_U
"RTN","ECXPRO",139,0)
 S ECODE1=ECXZIP_U_ECXDOB_U_ECXSEX_U_ECXGRPR_U_U_ECXMPI_U
"RTN","ECXPRO",140,0)
 S ECODE1=ECODE1_ECXDSSD_U_ECCLAS_U_ECXRACE_U_ECXPST_U_ECXPLOC_U
"RTN","ECXPRO",141,0)
 S ECODE1=ECODE1_U_U_ECXMST_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXPRO",142,0)
 S ECODE1=ECODE1_ECXCNTY_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U
"RTN","ECXPRO",143,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPHI_U_ECXPOS_U
"RTN","ECXPRO",144,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXPRO",145,0)
 S ECODE1=ECODE1_ECXHNCI_U_ECXETH_U_ECXRC1_U
"RTN","ECXPRO",146,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXPRO",147,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXPRO",148,0)
 I ECXLOGIC>2007 S ECODE2=ECXOEF_U_ECXOEFDT_U_ECXNPPDC_U_ECXNPPDT_U_ECASNPI_U_ECPTNPI
"RTN","ECXPRO",149,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXPRO",150,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXSHADI_U_ECXSHAD_U_ECXLH_U_ECXPATCAT
"RTN","ECXPRO",151,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXPRO",152,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXPRO",153,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPRO",154,0)
 Q
"RTN","ECXPRO",155,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPRO",156,0)
 S ECHEAD="PRO"
"RTN","ECXPRO",157,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPRO",158,0)
 S ECINST=$$PDIV^ECXPUTL
"RTN","ECXPRO",159,0)
 Q
"RTN","ECXPRO",160,0)
 ;
"RTN","ECXPRO",161,0)
 ;**Note: LOCAL and QUE are carry over from protocols set by other
"RTN","ECXPRO",162,0)
 ;        routines.
"RTN","ECXPRO",163,0)
LOCAL ;to extract nightly for local use not to be transmitted to TSI
"RTN","ECXPRO",164,0)
 ;QUEUE with 1D frequency
"RTN","ECXPRO",165,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXPRO",166,0)
 ;
"RTN","ECXPRO",167,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPRO",168,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPRO1")
0^13^B20868424^B20364237
"RTN","ECXPRO1",1,0)
ECXPRO1 ;ALB/GTS - Prosthetics Extract for DSS (Continued) ;9/20/11  11:49
"RTN","ECXPRO1",2,0)
 ;;3.0;DSS EXTRACTS;**9,11,13,15,21,24,33,37,39,100,105,112,132**;Dec 22, 1997;Build 18
"RTN","ECXPRO1",3,0)
 ;
"RTN","ECXPRO1",4,0)
NTEG(ECXDFN,ECXLNE,ECXPIEN,ECXN0,ECXNLB,ECINST,ECXFORM) ;** Check for required fields
"RTN","ECXPRO1",5,0)
 ;   Input
"RTN","ECXPRO1",6,0)
 ;    ECXDFN   - ien in file #2
"RTN","ECXPRO1",7,0)
 ;    ECXLNE   - line number variable (passed by reference)
"RTN","ECXPRO1",8,0)
 ;    ECXPIEN  - IEN for the Prosthetics record
"RTN","ECXPRO1",9,0)
 ;    ECXN0    - zero node of the Prosthetics record
"RTN","ECXPRO1",10,0)
 ;    ECXNLB   - LB node of the Prosthetics record
"RTN","ECXPRO1",11,0)
 ;    ECINST   - station number being extracted
"RTN","ECXPRO1",12,0)
 ;    ECXFORM  - Form Requested On
"RTN","ECXPRO1",13,0)
 ;   Output (to be KILLed by calling routine)
"RTN","ECXPRO1",14,0)
 ;    ^TMP("ECX-PRO EXC",$J) - Array for the exception message       
"RTN","ECXPRO1",15,0)
 ;    ECXLNE                 - The number of the next line in the msg
"RTN","ECXPRO1",16,0)
 ;    ECXSTAT2               - Patient Station Number
"RTN","ECXPRO1",17,0)
 ;    ECXDATE                - Delivery Date of Prosthesis
"RTN","ECXPRO1",18,0)
 ;    ECXTYPE                - Type of Transaction work performed
"RTN","ECXPRO1",19,0)
 ;    ECXSRCE                - Source of prosthesis
"RTN","ECXPRO1",20,0)
 ;    ECXHCPCS               - CPT/HCPCS code for prosthesis
"RTN","ECXPRO1",21,0)
 ;    ECXRQST                - Requesting Station
"RTN","ECXPRO1",22,0)
 ;    ECXRCST                - Receiving Station
"RTN","ECXPRO1",23,0)
 ;    ECXPHCPC               - PSAS HCPCS code; if 'unknown', then use CPT/HCPCS code 
"RTN","ECXPRO1",24,0)
 ;    ECXNPPDC               - NPPD code for repairs or new issues
"RTN","ECXPRO1",25,0)
 ;   Output (KILLed by NTEG)
"RTN","ECXPRO1",26,0)
 ;    ECXMISS                - 1 indicates missing information
"RTN","ECXPRO1",27,0)
 ;    ECXGOOD                - 0 indicates record should not be extracted
"RTN","ECXPRO1",28,0)
 ;
"RTN","ECXPRO1",29,0)
 N ECXGOOD,ECXMISS
"RTN","ECXPRO1",30,0)
 S (ECXRCST,ECXRQST,ECXNPPDC)="",ECXGOOD=1,ECXSTAT2=$P(ECXN0,U,10)
"RTN","ECXPRO1",31,0)
 I ECXSTAT2]"" D
"RTN","ECXPRO1",32,0)
 .K ECXDIC
"RTN","ECXPRO1",33,0)
 .S DA=ECXSTAT2,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPRO1",34,0)
 .D EN^DIQ1 S ECXSTAT2=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPRO1",35,0)
 .S:(ECINST'=$E(ECXSTAT2,1,3)) ECXGOOD=0 ;*Screen for incorrect Station
"RTN","ECXPRO1",36,0)
 ;
"RTN","ECXPRO1",37,0)
 ;** Screen out records
"RTN","ECXPRO1",38,0)
 S:($P(ECXN0,U,17)'="") ECXGOOD=0 ;*SHIP/DEL is not NULL
"RTN","ECXPRO1",39,0)
 S:($P(ECXN0,U,26)'="") ECXGOOD=0 ;*PICKUP/DEL is not NULL
"RTN","ECXPRO1",40,0)
 S:(+($P($G(^RMPR(660,ECXPIEN,"AM")),U,2))=1) ECXGOOD=0 ;*NO ADMIN CT=1
"RTN","ECXPRO1",41,0)
 S:(($P(ECXN0,U,15))'="") ECXGOOD=0 ;*HISTORICAL DATA is not NULL
"RTN","ECXPRO1",42,0)
 ;
"RTN","ECXPRO1",43,0)
 S ECXDATE=$P(ECXN0,U,12),ECXTYPE=$P(ECXN0,U,4),ECXSRCE=$P(ECXN0,U,14)
"RTN","ECXPRO1",44,0)
 S ECXHCPCS=$P($G(^ICPT(+$P(ECXN0,U,22),0)),U,1),ECXCMOD=""
"RTN","ECXPRO1",45,0)
 S ECXHCPCS=$$CPT^ECXUTL3(ECXHCPCS,ECXCMOD)
"RTN","ECXPRO1",46,0)
 ;get psas hcpcs code from file #661.1
"RTN","ECXPRO1",47,0)
 S ECXPHCPC=$P($G(^RMPR(660,ECXPIEN,1)),U,4) D
"RTN","ECXPRO1",48,0)
 .;get nppd code for repairs and new issues 10 characters in length.
"RTN","ECXPRO1",49,0)
 .I "X5"[ECXTYPE S ECXNPPDC=$TR($$GET1^DIQ(661.1,ECXPHCPC_",",5)," ","_")
"RTN","ECXPRO1",50,0)
 .I "ISR"[ECXTYPE S ECXNPPDC=$TR($$GET1^DIQ(661.1,ECXPHCPC_",",6)," ","_")
"RTN","ECXPRO1",51,0)
 .I +ECXPHCPC S ECXPHCPC=$E($P($G(^RMPR(661.1,ECXPHCPC,0)),U,1),1,5)
"RTN","ECXPRO1",52,0)
 .I ECXPHCPC="UNKNOWN" S ECXPHCPC=$E(ECXHCPCS,1,5)
"RTN","ECXPRO1",53,0)
 ;
"RTN","ECXPRO1",54,0)
 ;* Get Requesting Station Number
"RTN","ECXPRO1",55,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",56,0)
 .S ECXRQST=$P(ECXNLB,U,1)
"RTN","ECXPRO1",57,0)
 .I ECXRQST]"" D
"RTN","ECXPRO1",58,0)
 ..S DA=ECXRQST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPRO1",59,0)
 ..D EN^DIQ1 S ECXRQST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPRO1",60,0)
 S:(ECXFORM'["-3") ECXRQST=""
"RTN","ECXPRO1",61,0)
 ;
"RTN","ECXPRO1",62,0)
 ;* Screen out records
"RTN","ECXPRO1",63,0)
 S:(+$P(ECXFORM,U,2)=13) ECXGOOD=0 ;*FORM REQUESTED ON = 13
"RTN","ECXPRO1",64,0)
 ;
"RTN","ECXPRO1",65,0)
 ;* Get Receiving Station Number
"RTN","ECXPRO1",66,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",67,0)
 .S ECXRCST=$P(ECXNLB,U,4)
"RTN","ECXPRO1",68,0)
 .I ECXRCST]"" D
"RTN","ECXPRO1",69,0)
 ..S DA=ECXRCST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPRO1",70,0)
 ..D EN^DIQ1 S ECXRCST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPRO1",71,0)
 S:(ECXFORM'["-3") ECXRCST=""
"RTN","ECXPRO1",72,0)
 ;
"RTN","ECXPRO1",73,0)
 ;** Check for integrity and set up the problem variable if right DIV
"RTN","ECXPRO1",74,0)
 I ECXGOOD D CHK
"RTN","ECXPRO1",75,0)
 Q ECXGOOD
"RTN","ECXPRO1",76,0)
 ;
"RTN","ECXPRO1",77,0)
CHK ;*Check variables
"RTN","ECXPRO1",78,0)
 ; Input
"RTN","ECXPRO1",79,0)
 ;  Variables set in and Output from NTEG^ECXPRO1
"RTN","ECXPRO1",80,0)
 ; Output
"RTN","ECXPRO1",81,0)
 ;  ^TMP("ECX-PRO EXC",$J,   - Global of records with integrity problems
"RTN","ECXPRO1",82,0)
 ;
"RTN","ECXPRO1",83,0)
 S ECXMISS=""
"RTN","ECXPRO1",84,0)
 I ECXSTAT2']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",85,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",86,0)
 I ECXDFN=0 S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",87,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",88,0)
 ;I ECXSSN']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",89,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",90,0)
 ;I ECXNA="    " S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",91,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",92,0)
 I ECXDATE']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",93,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",94,0)
 I ECXTYPE']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",95,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",96,0)
 I ECXSRCE']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",97,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",98,0)
 I ECXHCPCS']"" S ECXGOOD=0 ;S ECXMISS=ECXMISS_"1" ;*HCPCS code check disabled
"RTN","ECXPRO1",99,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",100,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",101,0)
 .I ECXRQST']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",102,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",103,0)
 I ECXFORM']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",104,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",105,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",106,0)
 .I ECXRCST']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",107,0)
 I ECXMISS'="^^^^^^^^^^" D
"RTN","ECXPRO1",108,0)
 .S ECXGOOD=0
"RTN","ECXPRO1",109,0)
 .D ECXMISLN^ECXPRO2(ECXMISS,.ECXLNE,ECXPIEN)
"RTN","ECXPRO1",110,0)
 Q
"RTN","ECXPRO1",111,0)
 ;
"RTN","ECXPRO1",112,0)
PROSINFO(ECXDA,ECXLB,ECX0,ECXFORM) ;*Get Prosthetics Information
"RTN","ECXPRO1",113,0)
 ;
"RTN","ECXPRO1",114,0)
 ;  Input
"RTN","ECXPRO1",115,0)
 ;    ECDA    - The IEN for the Prosthetics record
"RTN","ECXPRO1",116,0)
 ;    ECX0    - The zero node of the Prosthetics record
"RTN","ECXPRO1",117,0)
 ;    ECXLB   - The LB node of the Prosthetics record
"RTN","ECXPRO1",118,0)
 ;    ECXFORM - The Form Requested On (to determine Lab transactions)
"RTN","ECXPRO1",119,0)
 ;
"RTN","ECXPRO1",120,0)
 ;  Output (to be KILLed by calling routine)
"RTN","ECXPRO1",121,0)
 ;    ECXCTAMT   - The Cost of Transaction
"RTN","ECXPRO1",122,0)
 ;    ECXLLC     - The Lab Labor Cost
"RTN","ECXPRO1",123,0)
 ;    ECXLMC     - The Lab Material Cost
"RTN","ECXPRO1",124,0)
 ;    ECXGRPR    - The AMIS Grouper number
"RTN","ECXPRO1",125,0)
 ;    ECXBILST   - The Billing Status
"RTN","ECXPRO1",126,0)
 ;    ECXQTY     - The Quantity
"RTN","ECXPRO1",127,0)
 ;
"RTN","ECXPRO1",128,0)
 S (ECXLLC,ECXLMC,ECXCTAMT)="",ECXBILST=$P($G(^RMPR(660,ECXDA,"AM")),U,3)
"RTN","ECXPRO1",129,0)
 S ECXQTY=$P(ECX0,U,7)
"RTN","ECXPRO1",130,0)
 S:(+ECXQTY=0) ECXQTY=1
"RTN","ECXPRO1",131,0)
 ;
"RTN","ECXPRO1",132,0)
 ;- Set Quantity field to 8 chars (right-justified & padded w/zeros)
"RTN","ECXPRO1",133,0)
 S ECXQTY=$$RJ^XLFSTR(ECXQTY,8,0)
"RTN","ECXPRO1",134,0)
 S ECXGRPR=$P($G(^RMPR(660,ECXDA,"AMS")),U,1),ECXCTAMT=$P(ECX0,U,16)
"RTN","ECXPRO1",135,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",136,0)
 .S ECXCTAMT=$P(ECXLB,U,9),ECXLLC=$P(ECXLB,U,7),ECXLMC=$P(ECXLB,U,8)
"RTN","ECXPRO1",137,0)
 ;
"RTN","ECXPRO1",138,0)
 ;- If Stock Issue or Inventory Issue, Cost of Transaction=0
"RTN","ECXPRO1",139,0)
 I $P(ECXFORM,U,2)=11!($P(ECXFORM,U,2)=12) S ECXCTAMT=0
"RTN","ECXPRO1",140,0)
 S:ECXCTAMT="" ECXCTAMT=0 S:ECXCTAMT>999999 ECXCTAMT=999999
"RTN","ECXPRO1",141,0)
 S:ECXLLC="" ECXLLC=0 S:ECXLLC>999999 ECXLLC=999999
"RTN","ECXPRO1",142,0)
 S:ECXLMC="" ECXLMC=0 S:ECXLMC>999999 ECXLMC=999999
"RTN","ECXPRO1",143,0)
 ;
"RTN","ECXPRO1",144,0)
 ;- Round to next dollar amount
"RTN","ECXPRO1",145,0)
 I (ECXCTAMT#1)>.50 S ECXCTAMT=(ECXCTAMT+1)\1
"RTN","ECXPRO1",146,0)
 I (ECXLLC#1)>.50 S ECXLLC=(ECXLLC+1)\1
"RTN","ECXPRO1",147,0)
 I (ECXLMC#1)>.50 S ECXLMC=(ECXLMC+1)\1
"RTN","ECXPRO1",148,0)
 Q
"RTN","ECXPRO2")
0^14^B12154079^B11847237
"RTN","ECXPRO2",1,0)
ECXPRO2 ;ALB/GTS - Prosthetics Extract for DSS (Continued) ; 15 Apr 2011  1:49 PM
"RTN","ECXPRO2",2,0)
 ;;3.0;DSS EXTRACTS;**9,15,21,24,33,127,132**;Dec 22, 1997;Build 18
"RTN","ECXPRO2",3,0)
 ;
"RTN","ECXPRO2",4,0)
ECXBUL(ECXLNE,ECXEBDT,ECXEEDT,ECNUM) ;* Set up the header for the exception msg
"RTN","ECXPRO2",5,0)
 ;
"RTN","ECXPRO2",6,0)
 ;   Input
"RTN","ECXPRO2",7,0)
 ;    ECXLNE  - The line number variable (passed by reference)
"RTN","ECXPRO2",8,0)
 ;    ECXEBDT - The Externally formatted beginning date
"RTN","ECXPRO2",9,0)
 ;    ECXEEDT - The Externally formatted ending date
"RTN","ECXPRO2",10,0)
 ;    ECNUM   - The Extract reference number
"RTN","ECXPRO2",11,0)
 ;
"RTN","ECXPRO2",12,0)
 ;   Output
"RTN","ECXPRO2",13,0)
 ;    ^TMP("ECX-PRO EXC",$J) - Array for the exception message
"RTN","ECXPRO2",14,0)
 ;    ECXLNE                 - The number of the next line in the msg
"RTN","ECXPRO2",15,0)
 ;
"RTN","ECXPRO2",16,0)
 S ^TMP("ECX-PRO EXC",$J,1)=" "
"RTN","ECXPRO2",17,0)
 S ^TMP("ECX-PRO EXC",$J,2)="The DSS-Prosthetic Extract #"_ECNUM_" for "_ECXEBDT_" through "_ECXEEDT
"RTN","ECXPRO2",18,0)
 S ^TMP("ECX-PRO EXC",$J,3)="has completed.  The following is a list of Prosthetics records that were NOT"
"RTN","ECXPRO2",19,0)
 S ^TMP("ECX-PRO EXC",$J,4)="extracted due to missing information in the Record of Pros Appliance/Repair"
"RTN","ECXPRO2",20,0)
 S ^TMP("ECX-PRO EXC",$J,5)="file (#660).  The Prosthetics record may be reviewed and the missing"
"RTN","ECXPRO2",21,0)
 S ^TMP("ECX-PRO EXC",$J,6)="information completed.  Once the missing information has been entered, it"
"RTN","ECXPRO2",22,0)
 S ^TMP("ECX-PRO EXC",$J,7)="will be necessary to re-generate the Prosthetics Extract for the above noted"
"RTN","ECXPRO2",23,0)
 S ^TMP("ECX-PRO EXC",$J,8)="date range."
"RTN","ECXPRO2",24,0)
 S ^TMP("ECX-PRO EXC",$J,9)=" "
"RTN","ECXPRO2",25,0)
 S ^TMP("ECX-PRO EXC",$J,10)="If you do not intend to transmit Prosthetics Extract #"_ECNUM_", then please"
"RTN","ECXPRO2",26,0)
 S ^TMP("ECX-PRO EXC",$J,11)="purge it before generating a new extract for the same date range."
"RTN","ECXPRO2",27,0)
 S ^TMP("ECX-PRO EXC",$J,12)=" "
"RTN","ECXPRO2",28,0)
 S ^TMP("ECX-PRO EXC",$J,13)=" "
"RTN","ECXPRO2",29,0)
 S ^TMP("ECX-PRO EXC",$J,14)=" PROSTHETICS FILE (#660)         MISSING DATA"
"RTN","ECXPRO2",30,0)
 S ^TMP("ECX-PRO EXC",$J,15)="       IEN                         ELEMENTS"
"RTN","ECXPRO2",31,0)
 S ^TMP("ECX-PRO EXC",$J,16)=" "
"RTN","ECXPRO2",32,0)
 S ECXLNE=15
"RTN","ECXPRO2",33,0)
 Q
"RTN","ECXPRO2",34,0)
 ;
"RTN","ECXPRO2",35,0)
ECXMISLN(ECXMISS,ECXLNE,ECXPIEN) ;** Report Missing Lines
"RTN","ECXPRO2",36,0)
 N ECXPCE,ECXFIRST,ECXFIELD
"RTN","ECXPRO2",37,0)
 S ECXFIRST=1
"RTN","ECXPRO2",38,0)
 F ECXPCE=1:1:11 DO
"RTN","ECXPRO2",39,0)
 .I +$P(ECXMISS,"^",ECXPCE) DO
"RTN","ECXPRO2",40,0)
 ..S ECXFIELD=$P($T(ECXFLD+ECXPCE),";;",2)
"RTN","ECXPRO2",41,0)
 ..I 'ECXFIRST S ^TMP("ECX-PRO EXC",$J,ECXLNE)="                                   "_ECXFIELD
"RTN","ECXPRO2",42,0)
 ..I ECXFIRST DO
"RTN","ECXPRO2",43,0)
 ...S ^TMP("ECX-PRO EXC",$J,ECXLNE)="       "_ECXPIEN_"                          "_ECXFIELD
"RTN","ECXPRO2",44,0)
 ...S ECXFIRST=0
"RTN","ECXPRO2",45,0)
 ..S ECXLNE=ECXLNE+1
"RTN","ECXPRO2",46,0)
 S ^TMP("ECX-PRO EXC",$J,ECXLNE)=" "
"RTN","ECXPRO2",47,0)
 S ECXLNE=ECXLNE+1
"RTN","ECXPRO2",48,0)
 Q
"RTN","ECXPRO2",49,0)
 ;
"RTN","ECXPRO2",50,0)
ECXFLD ;* Missing Required fields
"RTN","ECXPRO2",51,0)
 ;;STATION
"RTN","ECXPRO2",52,0)
 ;;PATIENT NAME (Invalid)
"RTN","ECXPRO2",53,0)
 ;;SSN
"RTN","ECXPRO2",54,0)
 ;;NAME (In Patient file - #2)
"RTN","ECXPRO2",55,0)
 ;;DELIVERY DATE
"RTN","ECXPRO2",56,0)
 ;;TYPE OF TRANSACTION
"RTN","ECXPRO2",57,0)
 ;;SOURCE
"RTN","ECXPRO2",58,0)
 ;;HCPCS
"RTN","ECXPRO2",59,0)
 ;;REQUESTING STATION
"RTN","ECXPRO2",60,0)
 ;;FORM REQUESTED ON
"RTN","ECXPRO2",61,0)
 ;;RECEIVING STATION
"RTN","ECXPRO2",62,0)
 Q
"RTN","ECXPRO2",63,0)
 ;
"RTN","ECXPRO2",64,0)
FEEDINFO(ECXSRCE,ECXHCPCS,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC) ;Get Feeder Key and Feeder Location
"RTN","ECXPRO2",65,0)
 ;   Input
"RTN","ECXPRO2",66,0)
 ;    ECXSTAT2   - Station Number for extract
"RTN","ECXPRO2",67,0)
 ;    ECXTYPE   - Type of Transaction work performed
"RTN","ECXPRO2",68,0)
 ;    ECXSRCE   - Source of prosthesis
"RTN","ECXPRO2",69,0)
 ;    ECXHCPCS  - HCPCS code for prosthesis
"RTN","ECXPRO2",70,0)
 ;    ECXRQST   - Requesting Station
"RTN","ECXPRO2",71,0)
 ;    ECXRCST   - Receiving Station
"RTN","ECXPRO2",72,0)
 ;    ECXLAB    - Lab or non-Lab
"RTN","ECXPRO2",73,0)
 ;    ECXNPPDC  - NPPD Code
"RTN","ECXPRO2",74,0)
 ;   Output (to be KILLed by calling routine)
"RTN","ECXPRO2",75,0)
 ;    ECXFELOC  - Feeder Location
"RTN","ECXPRO2",76,0)
 ;    ECXFEKEY  - Feeder Key
"RTN","ECXPRO2",77,0)
 ;
"RTN","ECXPRO2",78,0)
 ;* NOTE: If a Station # <> Requesting Station
"RTN","ECXPRO2",79,0)
 ;*         AND
"RTN","ECXPRO2",80,0)
 ;*       Station # <> Receiving Station,
"RTN","ECXPRO2",81,0)
 ;*       then Feeder Location will be NULL.  
"RTN","ECXPRO2",82,0)
 ;
"RTN","ECXPRO2",83,0)
 S ECXFELOC=""
"RTN","ECXPRO2",84,0)
 S ECXFEKEY=ECXHCPCS_$S(ECXTYPE="X":"X",ECXTYPE=5:"R",1:"N")_ECXSRCE
"RTN","ECXPRO2",85,0)
 ;
"RTN","ECXPRO2",86,0)
 ;* If processing a Non-Lab Transaction
"RTN","ECXPRO2",87,0)
 I ECXLAB="NONL" S ECXFELOC=ECXSTAT2_$S(ECXNPPDC[800:"HO2",1:"NONL")
"RTN","ECXPRO2",88,0)
 ;
"RTN","ECXPRO2",89,0)
 ;* If processing a Lab Transaction
"RTN","ECXPRO2",90,0)
 I ECXLAB="LAB" D  Q
"RTN","ECXPRO2",91,0)
 .I ECXSTAT2=ECXRCST D
"RTN","ECXPRO2",92,0)
 ..S ECXFELOC=ECXRCST_"LAB"
"RTN","ECXPRO2",93,0)
 ..S ECXFEKEY=ECXFEKEY_ECXRQST_"REQ"
"RTN","ECXPRO2",94,0)
 I ECXLAB="ORD" D  Q
"RTN","ECXPRO2",95,0)
 .I ECXSTAT2=ECXRQST D
"RTN","ECXPRO2",96,0)
 ..S ECXFELOC=ECXRQST_"ORD"
"RTN","ECXPRO2",97,0)
 ..S ECXFEKEY=ECXFEKEY_ECXRCST_"REC"
"RTN","ECXPRO2",98,0)
 ;
"RTN","ECXPRO2",99,0)
 Q
"RTN","ECXQSR")
0^7^B48814475^B41725091
"RTN","ECXQSR",1,0)
ECXQSR ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ; 2/5/10 6:50am
"RTN","ECXQSR",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,26,24,34,33,35,39,43,46,49,64,71,84,92,106,105,120,124,127,132**;Dec 22, 1997;Build 18
"RTN","ECXQSR",3,0)
BEG ;entry point from option
"RTN","ECXQSR",4,0)
 I '$O(^ACK(509850.8,0)) W !,"You must be using the Quality Audiology & Speech Pathology",!,"Audit & Review (QUASAR) software to run this extract.",!! Q
"RTN","ECXQSR",5,0)
 I '$D(^ACK(509850.8,1,"DSS")) W !,"Linkage has not been established between QUASAR and the DSS UNIT file (#724).",!! Q
"RTN","ECXQSR",6,0)
 I '$O(^ACK(509850.6,0)) W !,"There is no data in the A&SP CLINIC VISIT file (#509850.6).",!! Q
"RTN","ECXQSR",7,0)
 D SETUP I ECFILE="" Q
"RTN","ECXQSR",8,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXQSR",9,0)
 Q
"RTN","ECXQSR",10,0)
START ;entry point from tasked job
"RTN","ECXQSR",11,0)
 N ERR,ECXQDT,ECXNPRFI
"RTN","ECXQSR",12,0)
 S QFLG=0,ECED=ECED+.9,ECD=ECSD1,ECXQV=""
"RTN","ECXQSR",13,0)
 D QINST I $D(ERR) Q
"RTN","ECXQSR",14,0)
 S ECL=+^ACK(509850.8,1,0),ECLINK=^ACK(509850.8,1,"DSS")
"RTN","ECXQSR",15,0)
 F  S ECD=$O(^ACK(509850.6,"B",ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)!(QFLG)  D
"RTN","ECXQSR",16,0)
 .I +ECXQV=3,ECD<ECXQDT S ECXQV=2.0
"RTN","ECXQSR",17,0)
 .F  S ECDA=$O(^ACK(509850.6,"B",ECD,ECDA)) Q:'ECDA  D UPDATE Q:QFLG
"RTN","ECXQSR",18,0)
 Q
"RTN","ECXQSR",19,0)
QINST ;Get installed information for QUASAR
"RTN","ECXQSR",20,0)
 N ARR,IENS,QVIEN,INTIEN
"RTN","ECXQSR",21,0)
 S ECXQDT=""
"RTN","ECXQSR",22,0)
 D FILE^DID(509850.6,,"VERSION","ARR","ERR")
"RTN","ECXQSR",23,0)
 S ECXQV=$G(ARR("VERSION")) I +ECXQV=0 S ERR=1 Q
"RTN","ECXQSR",24,0)
 S QVIEN=$$FIND1^DIC(9.4,"","X","QUASAR") I +QVIEN<1 S ERR=1 Q
"RTN","ECXQSR",25,0)
 S IENS=","_QVIEN_","
"RTN","ECXQSR",26,0)
 S INTIEN=$$FIND1^DIC(9.49,IENS,"X",ECXQV) I +INTIEN<1 S ERR=1 Q
"RTN","ECXQSR",27,0)
 S IENS=INTIEN_","_QVIEN,ECXQDT=$$GET1^DIQ(9.49,IENS,2,"I")
"RTN","ECXQSR",28,0)
 Q
"RTN","ECXQSR",29,0)
UPDATE ;create record for each unique CPT code for clinic visit 
"RTN","ECXQSR",30,0)
 N ARY,ECZNODE,CPT,LOC,MOD,STR,VOL,XX,ECTP,ECV
"RTN","ECXQSR",31,0)
 Q:'$D(^ACK(509850.6,ECDA,0))
"RTN","ECXQSR",32,0)
 S ECZNODE=^ACK(509850.6,ECDA,0),EC2NODE=$G(^ACK(509850.6,ECDA,2))
"RTN","ECXQSR",33,0)
 S ECDT=$P(ECZNODE,U),ECDAY=$$ECXDATE^ECXUTL(ECDT,ECXYM)
"RTN","ECXQSR",34,0)
 S ECTIME=$$ECXTIME^ECXUTL(ECDT) S:$P(ECDT,".",2)="" ECTIME="000000"
"RTN","ECXQSR",35,0)
 S ECXDFN=$P(ECZNODE,U,2)
"RTN","ECXQSR",36,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECD,"1;3;5")
"RTN","ECXQSR",37,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECDT,"1;5",.ECXPAT)
"RTN","ECXQSR",38,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXQSR",39,0)
 ;OEF/OIF data
"RTN","ECXQSR",40,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXQSR",41,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXQSR",42,0)
 ;
"RTN","ECXQSR",43,0)
 S ECHL="",ECXDIV=$P($G(^ACK(509850.6,ECDA,5)),U),ECSTOP=$P(EC2NODE,U)
"RTN","ECXQSR",44,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get Production Division
"RTN","ECXQSR",45,0)
 Q:ECSTOP=""
"RTN","ECXQSR",46,0)
 S (ECHLS,ECHL2S)="000",ECAC=$P($G(ECZNODE),U,6)
"RTN","ECXQSR",47,0)
 I ECAC D
"RTN","ECXQSR",48,0)
 .S ECHL=+$P($G(^SC(ECAC,0)),U,7),ECHL2=+$P($G(^(0)),U,18) I ECHL D
"RTN","ECXQSR",49,0)
 ..S ECHLS=$P($G(^DIC(40.7,+ECHL,0)),U,2),ECHL2S=$P($G(^DIC(40.7,+ECHL2,0)),U,2)
"RTN","ECXQSR",50,0)
 ..S ECHLS=$$RJ^XLFSTR(ECHLS,3,0),ECHL2S=$$RJ^XLFSTR(ECHL2S,3,0)
"RTN","ECXQSR",51,0)
 S ECDSS=ECHLS_ECHL2S
"RTN","ECXQSR",52,0)
 I ECXLOGIC>2003 D
"RTN","ECXQSR",53,0)
 .I "^18^23^24^41^65^94^108^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXQSR",54,0)
 S ECDU=$S(ECSTOP["A":$P(ECLINK,U),ECSTOP["S":$P(ECLINK,U,2),1:"")
"RTN","ECXQSR",55,0)
 Q:'ECDU
"RTN","ECXQSR",56,0)
 S ECDSSU=$G(^ECD(ECDU,0)),ECCS=+$P(ECDSSU,U,4),(ECO,ECM)=+$P(ECDSSU,U,3),ECXDSSD=$E($P(ECDSSU,U,5),1,10)
"RTN","ECXQSR",57,0)
 Q:'$O(^ACK(509850.6,ECDA,3,0))
"RTN","ECXQSR",58,0)
 ;Create local array of procedure codes and # of times each procedure
"RTN","ECXQSR",59,0)
 ; was performed.
"RTN","ECXQSR",60,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXQSR",61,0)
 S (ECDIA,ECXPPC,ECXPRV1,ECXPRV2,ECXPRV3,ECXPRV4,ECXPRV5)=""
"RTN","ECXQSR",62,0)
 ;if QUASAR v2
"RTN","ECXQSR",63,0)
 I +ECXQV=2 D
"RTN","ECXQSR",64,0)
 .S ECXPRV1=$P(EC2NODE,U,7),ECXPRV2=$P(EC2NODE,U,3),ECXPRV3=$P(EC2NODE,U,5),ECPN=0
"RTN","ECXQSR",65,0)
 .F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",66,0)
 ..S XX=^ACK(509850.6,ECDA,3,ECPN,0),XX=$P(XX,U),XX=$P($G(^ACK(509850.4,XX,0)),U),ECXCPT=$E($$CPT^ECXUTL3(XX),1,5)
"RTN","ECXQSR",67,0)
 ..I ECXCPT]"" D
"RTN","ECXQSR",68,0)
 ...I '$D(LOC(ECXCPT)) S LOC(ECXCPT)=0_U_ECXPRV1
"RTN","ECXQSR",69,0)
 ...S $P(LOC(ECXCPT),U)=$P(LOC(ECXCPT),U)+1
"RTN","ECXQSR",70,0)
 .S ECIEN=$O(^ACK(509850.6,ECDA,1,0)),ECDIA=$P($G(^ICD9(+$G(^ACK(509850.6,ECDA,1,ECIEN,0)),0)),U)
"RTN","ECXQSR",71,0)
 .F I=1:1:4 S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'+ECIEN  D
"RTN","ECXQSR",72,0)
 ..S @("ECXICD9"_I)=$P($G(^ICD9(+$P(^ACK(509850.6,ECDA,1,ECIEN,0),U),0)),U)
"RTN","ECXQSR",73,0)
 ;if QUASAR v3
"RTN","ECXQSR",74,0)
 I +ECXQV=3 D
"RTN","ECXQSR",75,0)
 .N CPT,DIA,I,J,MOD,MOD1,P,STR,VOL,ECTP,ARY,ECP,ECPN
"RTN","ECXQSR",76,0)
 .S ECXPRV2=$G(^ACK(509850.6,ECDA,2.7,1,0)),ECXPRV3=$G(^ACK(509850.6,ECDA,2.7,2,0)),ECXPRV4=$G(^ACK(509850.6,ECDA,2.7,3,0)),ECXPRV5=$G(^ACK(509850.6,ECDA,2.7,4,0))
"RTN","ECXQSR",77,0)
 .I $G(ECXPRV2) S ECXPRV2=$$CONVERT1^ACKQUTL4(ECXPRV2)
"RTN","ECXQSR",78,0)
 .I $G(ECXPRV3) S ECXPRV3=$$CONVERT1^ACKQUTL4(ECXPRV3)
"RTN","ECXQSR",79,0)
 .I $G(ECXPRV4) S ECXPRV4=$$CONVERT1^ACKQUTL4(ECXPRV4)
"RTN","ECXQSR",80,0)
 .I $G(ECXPRV5) S ECXPRV5=$$CONVERT1^ACKQUTL4(ECXPRV5)
"RTN","ECXQSR",81,0)
 .S ECPN=0 F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",82,0)
 ..S CPT=^ACK(509850.6,ECDA,3,ECPN,0),ECXCPT=$P(CPT,U),ECTP=+$P(CPT,U,5),ECV=1,ECP=""
"RTN","ECXQSR",83,0)
 ..Q:ECXCPT=""
"RTN","ECXQSR",84,0)
 ..I ECTP D
"RTN","ECXQSR",85,0)
 ...S CPT=$G(^ACK(509850.6,ECDA,7,ECTP,0)),ECP=$P(CPT,U)
"RTN","ECXQSR",86,0)
 ...S ECP=$S(ECP<90000:$P($G(^EC(725,+ECP,0)),U,2)_"N",1:$P($G(^EC(725,+ECP,0)),U,2)_"L")
"RTN","ECXQSR",87,0)
 ...S VOL=+$P(CPT,U,2),ECXPRV1=$P(CPT,U,3)
"RTN","ECXQSR",88,0)
 ..I 'ECTP S VOL=+$P(CPT,U,3),ECXPRV1=$P(CPT,U,4)
"RTN","ECXQSR",89,0)
 ..I $G(ECXPRV1) S ECXPRV1=$$CONVERT1^ACKQUTL4(ECXPRV1)
"RTN","ECXQSR",90,0)
 ..S ECXCPT=$E($$CPT^ECXUTL3(ECXCPT),1,5),ECXMOD="",MOD=0
"RTN","ECXQSR",91,0)
 ..F  S MOD=$O(^ACK(509850.6,ECDA,3,ECPN,1,MOD)) Q:'MOD  D
"RTN","ECXQSR",92,0)
 ...S MOD1=+^ACK(509850.6,ECDA,3,ECPN,1,MOD,0) D:MOD1
"RTN","ECXQSR",93,0)
 ....S ECXMOD=ECXMOD_MOD1_";"
"RTN","ECXQSR",94,0)
 ..F I=1:1:$L(ECXMOD,";") I $G(ARY(ECXCPT))'[$P(ECXMOD,";",I) D
"RTN","ECXQSR",95,0)
 ...S ARY(ECXCPT)=$G(ARY(ECXCPT))_$P(ECXMOD,";",I)_";"
"RTN","ECXQSR",96,0)
 ..S:VOL ECV=VOL
"RTN","ECXQSR",97,0)
 ..S ECV=ECV+$G(LOC(ECXCPT)),LOC(ECXCPT)=ECV_U_ECXPRV1_U_ECP
"RTN","ECXQSR",98,0)
 .S ECIEN=0 F  S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'ECIEN  D
"RTN","ECXQSR",99,0)
 ..S DIA=^ACK(509850.6,ECDA,1,ECIEN,0),P=$P(DIA,U,2),P=$S(P=1:"P",1:"S")
"RTN","ECXQSR",100,0)
 ..S CNT=$G(STR(P))+1,STR(P,CNT)=$P($G(^ICD9(+DIA,0)),U),STR(P)=CNT
"RTN","ECXQSR",101,0)
 .S ECDIA=$G(STR("P",1))
"RTN","ECXQSR",102,0)
 .F I=1:1:4 Q:'$D(STR("P",I+1))  S @("ECXICD9"_I)=STR("P",I)
"RTN","ECXQSR",103,0)
 .S:ECDIA="" ECDIA=$G(STR("S",1)),I=2
"RTN","ECXQSR",104,0)
 .F J=I:1:4 Q:'$D(STR("S",J))  S @("ECXICD9"_J)=STR("S",J)
"RTN","ECXQSR",105,0)
 Q:('$D(LOC))!('$O(^ACK(509850.6,ECDA,1,0)))
"RTN","ECXQSR",106,0)
 ;- Ord Div, Contract St/End Dates, Contract Type placeholders for FY2002
"RTN","ECXQSR",107,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXQSR",108,0)
 ;set up Provider Person class
"RTN","ECXQSR",109,0)
 S (ECXCPT,ECXPPC1,ECXPPC2,ECXPPC3,ECXPPC4,ECXPPC5)=""
"RTN","ECXQSR",110,0)
 S:ECXPRV2'="" ECXPPC2=$$PRVCLASS^ECXUTL(ECXPRV2,ECD)
"RTN","ECXQSR",111,0)
 S:ECXPRV3'="" ECXPPC3=$$PRVCLASS^ECXUTL(ECXPRV3,ECD)
"RTN","ECXQSR",112,0)
 S:ECXPRV4'="" ECXPPC4=$$PRVCLASS^ECXUTL(ECXPRV4,ECD)
"RTN","ECXQSR",113,0)
 S:ECXPRV5'="" ECXPPC5=$$PRVCLASS^ECXUTL(ECXPRV5,ECD)
"RTN","ECXQSR",114,0)
 ;set up Provider NPI
"RTN","ECXQSR",115,0)
 S (ECPR1NPI,ECPR2NPI,ECPR3NPI,ECPR4NPI,ECPR5NPI)=""
"RTN","ECXQSR",116,0)
 S ECPR2NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV2,ECD)
"RTN","ECXQSR",117,0)
 S:+ECPR2NPI'>0 ECPR2NPI="" S ECPR2NPI=$P(ECPR2NPI,U)
"RTN","ECXQSR",118,0)
 S ECPR3NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV3,ECD)
"RTN","ECXQSR",119,0)
 S:+ECPR3NPI'>0 ECPR3NPI="" S ECPR3NPI=$P(ECPR3NPI,U)
"RTN","ECXQSR",120,0)
 S ECPR4NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV4,ECD)
"RTN","ECXQSR",121,0)
 S:+ECPR4NPI'>0 ECPR4NPI="" S ECPR4NPI=$P(ECPR4NPI,U)
"RTN","ECXQSR",122,0)
 S ECPR5NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV5,ECD)
"RTN","ECXQSR",123,0)
 S:+ECPR5NPI'>0 ECPR5NPI="" S ECPR5NPI=$P(ECPR5NPI,U)
"RTN","ECXQSR",124,0)
 N DA,DIC,DIK,DR,FILEN,DIQ,XVAR,II,DI
"RTN","ECXQSR",125,0)
 F II=2,3,4,5 S XVAR="ECXPRV"_II I @XVAR'="" D
"RTN","ECXQSR",126,0)
 .S @XVAR=2_@XVAR
"RTN","ECXQSR",127,0)
 ; -Observation Patient Indicator (yes/no)
"RTN","ECXQSR",128,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXQSR",129,0)
 ; -CNH status (YES/NO)
"RTN","ECXQSR",130,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXQSR",131,0)
 ;get encounter classification
"RTN","ECXQSR",132,0)
 S (ECXAO,ECXECE,ECXIR,ECXMIL,ECXHNC,ECXSHAD)="",ECXVISIT=$P($G(^ACK(509850.6,ECDA,6)),U,3)
"RTN","ECXQSR",133,0)
 I ECXVISIT'="" D
"RTN","ECXQSR",134,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXQSR",135,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXQSR",136,0)
 .S ECXIR=$G(ECXVIST("IR")),ECXMIL=$G(ECXVIST("MST")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXQSR",137,0)
 ; -Head and Neck Cancer Indicator
"RTN","ECXQSR",138,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXQSR",139,0)
 ; -PROJ 112/SHAD Indicator
"RTN","ECXQSR",140,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXQSR",141,0)
 ; ******* - PATCH 127, ADD PATCAT CODE - ********
"RTN","ECXQSR",142,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXQSR",143,0)
 ;get enrollment data (category, status and priority)
"RTN","ECXQSR",144,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXQSR",145,0)
 ; -Get national patient record flag Indicator if exist
"RTN","ECXQSR",146,0)
 D NPRF^ECXUTL5
"RTN","ECXQSR",147,0)
 ; -If no encounter number don't file record
"RTN","ECXQSR",148,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSS,)
"RTN","ECXQSR",149,0)
 Q:ECXENC=""
"RTN","ECXQSR",150,0)
 ;Loop through array of unique procedures. Create record in ECODE.
"RTN","ECXQSR",151,0)
 S CPT="" F  S CPT=$O(LOC(CPT)) Q:CPT=""  D
"RTN","ECXQSR",152,0)
 .S ECV=+$P(LOC(CPT),U),ECXCPT=$$CPT^ECXUTL3(CPT,$G(ARY(CPT)),ECV)
"RTN","ECXQSR",153,0)
 .S ECXPRV1=$P(LOC(CPT),U,2)
"RTN","ECXQSR",154,0)
 .S:ECXPRV1'="" ECXPPC1=$$PRVCLASS^ECXUTL(ECXPRV1,ECD)
"RTN","ECXQSR",155,0)
 .S ECPR1NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV1,ECD)
"RTN","ECXQSR",156,0)
 .S:+ECPR1NPI'>0 ECPR1NPI="" S ECPR1NPI=$P(ECPR1NPI,U)
"RTN","ECXQSR",157,0)
 .S:ECXPRV1'="" ECXPRV1=2_ECXPRV1
"RTN","ECXQSR",158,0)
 .S ECP=$P(LOC(CPT),U,3) I ECP="" S ECP=$$CPT^ECXUTL3(CPT,"",ECV)
"RTN","ECXQSR",159,0)
 .D FILE^ECXQSR1
"RTN","ECXQSR",160,0)
 K CPT,LOC
"RTN","ECXQSR",161,0)
 Q
"RTN","ECXQSR",162,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR",163,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR",164,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR",165,0)
 Q
"RTN","ECXQSR",166,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR",167,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXQSR1")
0^8^B12313439^B11045628
"RTN","ECXQSR1",1,0)
ECXQSR1 ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ;10/14/10  18:04
"RTN","ECXQSR1",2,0)
 ;;3.0;DSS EXTRACTS;**105,120,127,132**;Dec 22, 1997;Build 18
"RTN","ECXQSR1",3,0)
FILE ;file record in #727.825
"RTN","ECXQSR1",4,0)
 ;node0
"RTN","ECXQSR1",5,0)
 ;inst^dfn ECXDFN^ssn ECXSSN^name ECXPNM^i/o status ECXA^day ECDAY^
"RTN","ECXQSR1",6,0)
 ;DSS unit ECDU^^category ECPTTM^procedure ECP^volume ECV^cost center^
"RTN","ECXQSR1",7,0)
 ;ordering sec ^section^provider ECXPRV1^ECXPPC1^ECXPRV2^ECXPPC2^ECXPRV3^
"RTN","ECXQSR1",8,0)
 ;ECXPPC3^mov # ECXMN^treat spec ECXTS^time ECTIME^primary care team 
"RTN","ECXQSR1",9,0)
 ;ECPTTM^primary care provider ECPTPR^pce cpt code & modifers ECXCPT^
"RTN","ECXQSR1",10,0)
 ;primary icd-9 code ECDIA^secondary icd-9 #1 ECXICD91^secondary icd-9 
"RTN","ECXQSR1",11,0)
 ;#2 ECXICD92^secondary icd-9 #3 ECXICD93^secondary icd-9 #4 ECXICD94^
"RTN","ECXQSR1",12,0)
 ;agent orange ECXAST^radiation exposure ECRST^environmental
"RTN","ECXQSR1",13,0)
 ;contaminants ECEST^service connected ECSC^sent to pce^^dss identifier
"RTN","ECXQSR1",14,0)
 ;ECDSS^placeholder
"RTN","ECXQSR1",15,0)
 ;node1
"RTN","ECXQSR1",16,0)
 ;mpi ECXNPI^dss dept ECXDSSD^^^^placeholder 
"RTN","ECXQSR1",17,0)
 ;^assoc pc provider ECASPR^assoc pc prov person class 
"RTN","ECXQSR1",18,0)
 ;ECCLAS2^placeholder^divison ECXDIV^dom ECXDOM^
"RTN","ECXQSR1",19,0)
 ;enrollment category ECXCAT^enrollment status ECXSTAT^enrollment prior 
"RTN","ECXQSR1",20,0)
 ;ECXPRIOR^period of service ECXPOS^purple heart ECXPHI^observ pat ind 
"RTN","ECXQSR1",21,0)
 ;ECXOBS^encounter num ECXENC^ao loc ECXAOL^ord div ECXODIV^contr st dt 
"RTN","ECXQSR1",22,0)
 ;ECXCSDT^contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXQSR1",23,0)
 ;production division ECXPDIV^eligibility ECXELIG^ethnicity ECXETH^
"RTN","ECXQSR1",24,0)
 ;race1 ECXRC1^enrollment location ECXENRL^^enrollment priority 
"RTN","ECXQSR1",25,0)
 ;ECXPRIOR_enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient 
"RTN","ECXQSR1",26,0)
 ;type ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^
"RTN","ECXQSR1",27,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^
"RTN","ECXQSR1",28,0)
 ;emergency response indicator(FEMA) ECXERI^agent orange indicator 
"RTN","ECXQSR1",29,0)
 ;ECXAO^environ contam ECXECE^head/neck ECXHNC^military sexual trauma 
"RTN","ECXQSR1",30,0)
 ;ECXMIL^radiation encoun ECXIR^nutrition dx(currently null)^OEF/OIF ECXOEF^
"RTN","ECXQSR1",31,0)
 ;OEF/OIF return date ECXOEFDT^assoc pc provider npi ECASNPI^
"RTN","ECXQSR1",32,0)
 ;primary care provider npi ECPTNPI^provider npi ECPR1NPI^
"RTN","ECXQSR1",33,0)
 ;provider #2 npi ECPR2NPI^provider #3 npi ECPR3NPI^shad status ECXSHADI^
"RTN","ECXQSR1",34,0)
 ;shad encouter ECXSHAD^pat cat ECXPATCAT^provider #4 ECXPRV4^
"RTN","ECXQSR1",35,0)
 ;provider #4 pc ECXPPC4^provider #4 npi ECPR4NPI^provider #5 ECXPRV5^
"RTN","ECXQSR1",36,0)
 ;provider #5 pc ECXPPC5^provider #5 npi ECPR5NPI
"RTN","ECXQSR1",37,0)
 ;
"RTN","ECXQSR1",38,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXQSR1",39,0)
 N ECXDATA,ECXTSC
"RTN","ECXQSR1",40,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXQSR1",41,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXQSR1",42,0)
 ;done
"RTN","ECXQSR1",43,0)
 N DA,DIK
"RTN","ECXQSR1",44,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXQSR1",45,0)
 S ECODE=EC7_U_EC23_U
"RTN","ECXQSR1",46,0)
 S ECODE=ECODE_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECDAY_U_ECDU_U_U
"RTN","ECXQSR1",47,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECXPRV1_U_ECXPPC1_U
"RTN","ECXQSR1",48,0)
 S ECODE=ECODE_ECXPRV2_U_ECXPPC2_U_ECXPRV3_U_ECXPPC3_U_U
"RTN","ECXQSR1",49,0)
 S ECODE=ECODE_ECXMN_U_ECXTSC_U_ECTIME_U_ECPTTM_U
"RTN","ECXQSR1",50,0)
 S ECODE=ECODE_ECPTPR_U_ECXCPT_U_ECDIA_U_ECXICD91_U_ECXICD92_U
"RTN","ECXQSR1",51,0)
 S ECODE=ECODE_ECXICD93_U_ECXICD94_U_ECXAST_U_ECXRST_U_ECXEST_U
"RTN","ECXQSR1",52,0)
 S ECODE=ECODE_ECSC_U_"N"_U_U_ECDSS_U_U
"RTN","ECXQSR1",53,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_ECCLAS_U_U_ECASPR_U
"RTN","ECXQSR1",54,0)
 S ECODE1=ECODE1_ECCLAS2_U_U_ECXDIV_U_ECXMST_U_ECXDOM_U
"RTN","ECXQSR1",55,0)
 S ECODE1=ECODE1_ECXDOB_U_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U
"RTN","ECXQSR1",56,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXODIV_U_ECXCSDT_U_ECXCEDT_U
"RTN","ECXQSR1",57,0)
 S ECODE1=ECODE1_ECXCTYP_U_ECXCNH_U_ECXPDIV_U_ECXELIG_U_ECXHNCI_U_ECXETH_U
"RTN","ECXQSR1",58,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXQSR1",59,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL
"RTN","ECXQSR1",60,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U
"RTN","ECXQSR1",61,0)
 I ECXLOGIC>2004 S ECODE2=ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXQSR1",62,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXQSR1",63,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_$G(ECXOEF)_U_$G(ECXOEFDT)_U_$G(ECASNPI)_U_$G(ECPTNPI)_U_$G(ECPR1NPI)_U_$G(ECPR2NPI)_U_$G(ECPR3NPI)
"RTN","ECXQSR1",64,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_$G(ECXSHADI)_U_$G(ECXSHAD)_U_ECXPATCAT
"RTN","ECXQSR1",65,0)
 I ECXLOGIC>2011 S ECODE2=ECODE2_U_$G(ECXPRV4)_U_$G(ECXPPC4)_U_$G(ECPR4NPI)_U_$G(ECXPRV5)_U_$G(ECXPPC5)_U_$G(ECPR5NPI)
"RTN","ECXQSR1",66,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXQSR1",67,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXQSR1",68,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXQSR1",69,0)
 Q
"RTN","ECXQSR1",70,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR1",71,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR1",72,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR1",73,0)
 Q
"RTN","ECXQSR1",74,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR1",75,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXSCLD")
0^10^B199744247^B193735960
"RTN","ECXSCLD",1,0)
ECXSCLD ;BIR/DMA,CML-Enter, Print and Edit Entries in 728.44 ;9/7/11  12:30
"RTN","ECXSCLD",2,0)
 ;;3.0;DSS EXTRACTS;**2,8,24,30,71,80,105,112,120,126,132**;Dec 22, 1997;Build 18
"RTN","ECXSCLD",3,0)
EN ;entry point from option
"RTN","ECXSCLD",4,0)
 ;load entries
"RTN","ECXSCLD",5,0)
 W !!,"This option creates local entries in the DSS CLINIC AND STOP CODES"
"RTN","ECXSCLD",6,0)
 W !,"file (#728.44)."
"RTN","ECXSCLD",7,0)
 I '$D(^ECX(728.44)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",8,0)
 W !!,"It also compares file #728.44 to the HOSPITAL LOCATION file (#44) to see"
"RTN","ECXSCLD",9,0)
 W !,"if there are any differences since the last time the file was reviewed."
"RTN","ECXSCLD",10,0)
 W !!,"Any differences or new entries will cause an UNREVIEWED CLINICS report"
"RTN","ECXSCLD",11,0)
 W !,"to automatically print.",!
"RTN","ECXSCLD",12,0)
 D SELECT^ECXSCLD
"RTN","ECXSCLD",13,0)
 Q
"RTN","ECXSCLD",14,0)
START ; entry point
"RTN","ECXSCLD",15,0)
 N ZTREQ
"RTN","ECXSCLD",16,0)
 S EC=0 F  S EC=$O(^SC(EC)) Q:'EC  D FIX(EC)
"RTN","ECXSCLD",17,0)
 K DIK S DIK="^ECX(728.44,",DIK(1)=".01^B" D ENALL^DIK
"RTN","ECXSCLD",18,0)
 ;print 'unreviewed clinics' report
"RTN","ECXSCLD",19,0)
 S ECALL="U" D SPRINT^ECXSCLD
"RTN","ECXSCLD",20,0)
 S ZTREQ="@"
"RTN","ECXSCLD",21,0)
 Q
"RTN","ECXSCLD",22,0)
 ;
"RTN","ECXSCLD",23,0)
FIX(EC) ;
"RTN","ECXSCLD",24,0)
 ; synchronize files #44 and #728.44.
"RTN","ECXSCLD",25,0)
 ; differences are placed in ^XTMP("ECX UNREVIEWED CLINICS")
"RTN","ECXSCLD",26,0)
 S EC=$G(EC)
"RTN","ECXSCLD",27,0)
 I '$D(^SC(EC,0)) Q
"RTN","ECXSCLD",28,0)
 N ECD,DAT
"RTN","ECXSCLD",29,0)
 S ECD=^SC(EC,0),DAT=$G(^SC(EC,"I"))
"RTN","ECXSCLD",30,0)
 I $P(ECD,U,3)'="C" Q
"RTN","ECXSCLD",31,0)
 ; get stop codes and default style for feeder key
"RTN","ECXSCLD",32,0)
 ; 1 if no credit stop code - 5 if credit stop code exists
"RTN","ECXSCLD",33,0)
 K ECD2,ECS2,ECDNEW,ECDDIF,ECSCSIGN I $D(^ECX(728.44,EC,0)) S (ECD2,ECDDIF)=^(0),ECSCSIGN=""
"RTN","ECXSCLD",34,0)
 I $D(ECD2) F ECS=2,3,4,5 D
"RTN","ECXSCLD",35,0)
 .S (ECS2(ECS),X)=$P(ECD2,U,ECS)
"RTN","ECXSCLD",36,0)
 .K DIC,Y S DIC=40.7,DIC(0)="MXZ" D ^DIC
"RTN","ECXSCLD",37,0)
 .I +$G(Y)>0 S $P(ECS2(ECS),U,2)=$P(^DIC(40.7,+Y,0),U,3)
"RTN","ECXSCLD",38,0)
 S ID=+DAT,RD=$P(DAT,U,2),ECXINAC=0
"RTN","ECXSCLD",39,0)
 ;change in clinic inactivation for existing entry 
"RTN","ECXSCLD",40,0)
 I $D(ECD2) D
"RTN","ECXSCLD",41,0)
 .;don't include already old inactivated clinics in report
"RTN","ECXSCLD",42,0)
 .I ID,ID'>DT I ('RD)!(RD>DT) I $P(ECD2,U,10)=ID S ECXINAC=1
"RTN","ECXSCLD",43,0)
 .I ID,ID'>DT I ('RD)!(RD>DT) I $P(ECD2,U,10)'=ID D
"RTN","ECXSCLD",44,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)=ID,ECSCSIGN="*"
"RTN","ECXSCLD",45,0)
 .I ID,RD,(RD'>DT) I $P(ECD2,U,10) D
"RTN","ECXSCLD",46,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)="",ECSCSIGN="r"
"RTN","ECXSCLD",47,0)
 .I ID,(ID>DT) I $P(ECD2,U,10) D
"RTN","ECXSCLD",48,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)="",ECSCSIGN="!"
"RTN","ECXSCLD",49,0)
 .I 'ID,$P(ECD2,U,10) D
"RTN","ECXSCLD",50,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)="",ECSCSIGN="!"
"RTN","ECXSCLD",51,0)
 .S ECDDIF=ECD2
"RTN","ECXSCLD",52,0)
 ;setup for stops
"RTN","ECXSCLD",53,0)
 F ECS=7,18 S ECP=+$P(ECD,U,ECS),ECS(ECS)=$P($G(^DIC(40.7,ECP,0)),U,2)_U_$P($G(^DIC(40.7,ECP,0)),U,3)
"RTN","ECXSCLD",54,0)
 S ECDF=$S($P(ECS(18),U)]"":5,1:1) S:$P(ECD,U,17)="Y" ECDF=6 S:$G(^SC(EC,"OOS")) ECDF=6
"RTN","ECXSCLD",55,0)
 S ECDB=EC_U_$S(+ECS(7):+ECS(7),1:"")_U_$S(+ECS(18):+ECS(18),1:"")
"RTN","ECXSCLD",56,0)
 ;new entry
"RTN","ECXSCLD",57,0)
 I '$D(ECD2) D
"RTN","ECXSCLD",58,0)
 .S $P(^ECX(728.44,EC,0),U,1,5)=ECDB_U_$S(+ECS(7):+ECS(7),1:"")_U_$S(+ECS(18):+ECS(18),1:"")
"RTN","ECXSCLD",59,0)
 .S $P(^(0),U,6)=ECDF,$P(^(0),U,12)=$P(ECD,U,17)
"RTN","ECXSCLD",60,0)
 .S ECDNEW=^ECX(728.44,EC,0)
"RTN","ECXSCLD",61,0)
 ;changes to existing entry
"RTN","ECXSCLD",62,0)
 I $D(ECD2) D
"RTN","ECXSCLD",63,0)
 .S $P(ECD2,U,1,3)=ECDB,$P(ECDDIF,U,1,3)=ECDB
"RTN","ECXSCLD",64,0)
 .;differs in stop code
"RTN","ECXSCLD",65,0)
 .I +ECS(7)'=+ECS2(2) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,2)_"!",$P(ECDDIF,U,2)=X
"RTN","ECXSCLD",66,0)
 .;differs in credit stop code
"RTN","ECXSCLD",67,0)
 .I +ECS(18)'=+ECS2(3) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,3)_"!",$P(ECDDIF,U,3)=X
"RTN","ECXSCLD",68,0)
 .;stop code inactive
"RTN","ECXSCLD",69,0)
 .;I $P(ECS(7),U,2) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,2)_"*",$P(ECDDIF,U,2)=X
"RTN","ECXSCLD",70,0)
 .;credit stop code inactive
"RTN","ECXSCLD",71,0)
 .;I $P(ECS(18),U,2) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,3)_"*",$P(ECDDIF,U,3)=X
"RTN","ECXSCLD",72,0)
 .;dss stop code inactive
"RTN","ECXSCLD",73,0)
 .;I $P(ECS2(4),U,2) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,4)_"*",$P(ECDDIF,U,4)=X
"RTN","ECXSCLD",74,0)
 .;dss credit stop code inactive
"RTN","ECXSCLD",75,0)
 .;I $P(ECS2(5),U,2) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,5)_"*",$P(ECDDIF,U,5)=X
"RTN","ECXSCLD",76,0)
 .;change in non-count
"RTN","ECXSCLD",77,0)
 .I $P(ECD2,U,12)'=$P(ECD,U,17) S X=$P(ECD,U,17)_"!",$P(ECDDIF,U,12)=X,$P(ECD2,U,12)=$P(ECD,U,17),$P(ECD2,U,7)=""
"RTN","ECXSCLD",78,0)
 .;reset entry
"RTN","ECXSCLD",79,0)
 .S ^ECX(728.44,EC,0)=ECD2
"RTN","ECXSCLD",80,0)
 ;set tmp node
"RTN","ECXSCLD",81,0)
 S ECSC=$P(ECD,U) S:$L(ECSC)>27 ECSC=$E(ECSC,1,27)
"RTN","ECXSCLD",82,0)
 I $D(ECD2),$P(ECD2,U,7)="" D
"RTN","ECXSCLD",83,0)
 .I ECXINAC,(ECDDIF'["!") Q
"RTN","ECXSCLD",84,0)
 .I $D(^XTMP("ECX UNREVIEWED CLINICS",ECSC)) D UPDATE(ECSC,ECDDIF,ECSCSIGN)
"RTN","ECXSCLD",85,0)
 .I '$D(^XTMP("ECX UNREVIEWED CLINICS",ECSC)) S ^XTMP("ECX UNREVIEWED CLINICS",ECSC)=ECSCSIGN_U_$P(ECDDIF,U,2,200),^XTMP("ECX UNREVIEWED CLINICS",ECSC,"T")=$$NOW^XLFDT()
"RTN","ECXSCLD",86,0)
 I $D(ECDNEW) S ^XTMP("ECX UNREVIEWED CLINICS",ECSC)=""_U_$P(ECDNEW,U,2,200),^XTMP("ECX UNREVIEWED CLINICS",ECSC,"T")=$$NOW^XLFDT()
"RTN","ECXSCLD",87,0)
 Q
"RTN","ECXSCLD",88,0)
 ;
"RTN","ECXSCLD",89,0)
UPDATE(ECSC,ECDDIF,ECSCSIGN) ;update ^xtmp node with today's changes
"RTN","ECXSCLD",90,0)
 N ECXOLD,J,L1,L2,X,X1,X2
"RTN","ECXSCLD",91,0)
 S ECXOLD=^XTMP("ECX UNREVIEWED CLINICS",ECSC)
"RTN","ECXSCLD",92,0)
 F J=2,3 S X1=+$P(ECXOLD,U,J),X2=+$P(ECDDIF,U,J) I X2=X1,$P(ECDDIF,U,J)'=$P(ECXOLD,U,J) D
"RTN","ECXSCLD",93,0)
 .S L1=$L($P(ECXOLD,U,J)),L2=$L($P(ECDDIF,U,J))
"RTN","ECXSCLD",94,0)
 .I L1>L2 S $P(ECDDIF,U,J)=$P(ECXOLD,U,J)
"RTN","ECXSCLD",95,0)
 S X1=$E($P(ECXOLD,U,12),1),X2=$E($P(ECDDIF,U,12),1) I X2=X1 S $P(ECDDIF,U,12)=$P(ECXOLD,U,12)
"RTN","ECXSCLD",96,0)
 S X1=$P(ECXOLD,U),X=X1_U_$P(ECDDIF,U,2,200)
"RTN","ECXSCLD",97,0)
 I ECSCSIGN'="",ECSCSIGN'=X1 S X=ECSCSIGN_U_$P(ECDDIF,U,2,200)
"RTN","ECXSCLD",98,0)
 S ^XTMP("ECX UNREVIEWED CLINICS",ECSC)=X
"RTN","ECXSCLD",99,0)
 Q
"RTN","ECXSCLD",100,0)
 ;
"RTN","ECXSCLD",101,0)
SELECT ;select IO device to 'gather clinic stop codes' and print 'unreviewd clinics' report;
"RTN","ECXSCLD",102,0)
 ;for menu option 'Create DSS Clinic Stop Code File' or 'Clinics and DSS Stop Codes Print'
"RTN","ECXSCLD",103,0)
 N DIR,ECALL,IOP,POP,XX,ZTIO,ZTRTN,ZTDESC,ZTSK,ZTSAVE
"RTN","ECXSCLD",104,0)
 ;does user hold key?
"RTN","ECXSCLD",105,0)
 I '$$KCHK^XUSRB("ECXMGR",$G(DUZ)) D  G ENDX
"RTN","ECXSCLD",106,0)
 .W !!,?5,"You do not have approved access to this option.",!,"Exiting...",!!
"RTN","ECXSCLD",107,0)
 .D PAUSE
"RTN","ECXSCLD",108,0)
 W !,"Please select a print device for the 'Unreviewed Clinics' report."
"RTN","ECXSCLD",109,0)
 W !,"**Please note: If printing in foreground, synching files may cause screen delay."
"RTN","ECXSCLD",110,0)
 W ! S %ZIS="Q" D ^%ZIS
"RTN","ECXSCLD",111,0)
 I POP Q
"RTN","ECXSCLD",112,0)
 ;I IO=IO(0) W !,"You must queue to a print device.",! D HOME^%ZIS G SELECT
"RTN","ECXSCLD",113,0)
 ;queue the report
"RTN","ECXSCLD",114,0)
 I $D(IO("Q")) D  Q
"RTN","ECXSCLD",115,0)
 . K ZTSAVE S ZTDESC="Gather Clinic Stop Codes for DSS",ZTRTN="START^ECXSCLD"
"RTN","ECXSCLD",116,0)
 . D ^%ZTLOAD
"RTN","ECXSCLD",117,0)
 . I $G(ZTSK) W !,"Queued as Task #: "_ZTSK D ENDX D PAUSE
"RTN","ECXSCLD",118,0)
 W !!,">> Synchronizing Stop Codes file (#728.44) with the Hospital"
"RTN","ECXSCLD",119,0)
 W !,"   Location file (#44)...",!
"RTN","ECXSCLD",120,0)
 D START
"RTN","ECXSCLD",121,0)
 D ^%ZISC,HOME^%ZIS K IO("Q")
"RTN","ECXSCLD",122,0)
 Q
"RTN","ECXSCLD",123,0)
 ;
"RTN","ECXSCLD",124,0)
PRINT ; print worksheet for updates
"RTN","ECXSCLD",125,0)
 N OUT,DIR,ECALL
"RTN","ECXSCLD",126,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",127,0)
 W !!,"This option produces a worksheet of (A) All Clinics, (C) Active, (I) Inactive, "
"RTN","ECXSCLD",128,0)
 W !,"or only the (U) Unreviewed Clinics that are awaiting approval."
"RTN","ECXSCLD",129,0)
 W !!,"Clinics that were defined as ""inactive"" by MAS the last time the option"
"RTN","ECXSCLD",130,0)
 W !,"""Create DSS Clinic Stop Code File"" was run will be indicated with an ""*""."
"RTN","ECXSCLD",131,0)
 W !!,"Choose (X) for exporting the CLINICS AND STOP CODES FILE to a text file for"
"RTN","ECXSCLD",132,0)
 W !,"spreadsheet use.",!
"RTN","ECXSCLD",133,0)
 S DIR(0)="S^A:ALL CLINICS;C:ALL ACTIVE CLINICS;I:ALL INACTIVE CLINICS;U:UNREVIEWED CLINICS;X:EXPORT TO TEXT FILE FOR SPREADSHEET USE",DIR("A")="Enter ""A"", ""C"", ""I"", ""U"", or ""X"""
"RTN","ECXSCLD",134,0)
 S DIR("?",1)="Enter: ""C"" to print a worksheet of all active DSS Clinic Stops,"
"RTN","ECXSCLD",135,0)
 S DIR("?",2)="Enter: ""I"" to print a worksheet of all inactive DSS Clinic  Stops,"
"RTN","ECXSCLD",136,0)
 S DIR("?",3)="Enter: ""A"" to print a worksheet of all DSS Clinic  Stops,"
"RTN","ECXSCLD",137,0)
 S DIR("?",4)="Enter: ""U"" to print only the Clinic Stops that have not been approved."
"RTN","ECXSCLD",138,0)
 S DIR("?")="Enter: ""X"" to export CLINICS AND STOP CODES FILE to a text file."
"RTN","ECXSCLD",139,0)
 D ^DIR K DIR G ENDX:$D(DIRUT) S ECALL=$E(Y)
"RTN","ECXSCLD",140,0)
 I ECALL="X" D EXPORT^ECXSCLD1 Q
"RTN","ECXSCLD",141,0)
 ;sync #728.44 with #44 before printing 'unreviewed'
"RTN","ECXSCLD",142,0)
 I ECALL="U" D  Q
"RTN","ECXSCLD",143,0)
 .W !!,?5,"Before the UNREVIEWED CLINICS report prints, the Clinics and"
"RTN","ECXSCLD",144,0)
 .W !,?5,"Stop Codes file (#728.44) will be synchronized with the Hospital"
"RTN","ECXSCLD",145,0)
 .W !,?5,"Location file (#44).",!!
"RTN","ECXSCLD",146,0)
 .K DIR S DIR(0)="YA",DIR("A")="Do you wish to continue? (Y/N)// " D ^DIR
"RTN","ECXSCLD",147,0)
 .I ('$G(Y)!$G(DIRUT)!$G(DUOUT)!$G(DTOUT)) Q
"RTN","ECXSCLD",148,0)
 .D SELECT^ECXSCLD
"RTN","ECXSCLD",149,0)
 S %ZIS="Q" D ^%ZIS Q:POP
"RTN","ECXSCLD",150,0)
 I $D(IO("Q")) K ZTSAVE S ZTDESC="DSS clinic stop code work sheet",ZTRTN="SPRINT^ECXSCLD",ZTSAVE("ECALL")="" D ^%ZTLOAD,HOME^%ZIS Q
"RTN","ECXSCLD",151,0)
SPRINT ; queued entry to print work sheet
"RTN","ECXSCLD",152,0)
 U IO
"RTN","ECXSCLD",153,0)
 S QFLG=0,$P(LN,"-",80)="",PG=0
"RTN","ECXSCLD",154,0)
 S ECDATE=$O(^ECX(728.44,"A1","")) I ECDATE S ECDATE=-ECDATE,ECDATE=$$FMTE^XLFDT(ECDATE,"5DF"),ECDATE=$TR(ECDATE," ","0")
"RTN","ECXSCLD",155,0)
 I ECALL'="U" K ^TMP("EC",$J)
"RTN","ECXSCLD",156,0)
 F J=0:0 S J=$O(^ECX(728.44,J)) Q:'J  I $D(^ECX(728.44,J,0)) S ECSD=^ECX(728.44,J,0) D
"RTN","ECXSCLD",157,0)
 .I ECALL="A" I $D(^SC(J,0)) S ECSC=$P(^SC(J,0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",158,0)
 .I (ECALL="I"),($P(ECSD,U,10)) I $D(^SC(J,0)) S ECSC=$P(^SC(J,0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",159,0)
 .I ((ECALL="C")&($P(ECSD,U,10)=""))!((ECALL="C")&($P(ECSD,U,10)>DT)) I $D(^SC(J,0)) S ECSC=$P(^(0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",160,0)
 I ECALL'="U" D
"RTN","ECXSCLD",161,0)
 .D HEAD S ECSC="" I $O(^TMP("EC",$J,ECSC))="" W !!,"NO DATA FOUND FOR WORKSHEET.",! Q
"RTN","ECXSCLD",162,0)
 .F J=1:1 S ECSC=$O(^TMP("EC",$J,ECSC)) Q:ECSC=""  S ECD=^TMP("EC",$J,ECSC) D SHOWEM Q:QFLG
"RTN","ECXSCLD",163,0)
 .K ^TMP("EC",$J)
"RTN","ECXSCLD",164,0)
 I ECALL="U" D
"RTN","ECXSCLD",165,0)
 .N ECSCSIGN
"RTN","ECXSCLD",166,0)
 .D HEAD S ECSC=0 I $O(^XTMP("ECX UNREVIEWED CLINICS",ECSC))="" W !!,"NO DATA FOUND FOR WORKSHEET.",! Q
"RTN","ECXSCLD",167,0)
 .F  S ECSC=$O(^XTMP("ECX UNREVIEWED CLINICS",ECSC)) Q:ECSC=""  Q:QFLG  D
"RTN","ECXSCLD",168,0)
 ..S ECSCSIGN=$P(^XTMP("ECX UNREVIEWED CLINICS",ECSC),U),ECD=$P(^XTMP("ECX UNREVIEWED CLINICS",ECSC),U,2,99)
"RTN","ECXSCLD",169,0)
 ..D SHOWEM
"RTN","ECXSCLD",170,0)
 I $E(IOST)="C",'QFLG D SS D ENDX
"RTN","ECXSCLD",171,0)
 W:$Y @IOF D ^%ZISC S ZTREQ="@"
"RTN","ECXSCLD",172,0)
 Q
"RTN","ECXSCLD",173,0)
HEAD ; header for worksheet
"RTN","ECXSCLD",174,0)
 D:PG SS Q:QFLG
"RTN","ECXSCLD",175,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"WORKSHEET FOR DSS CLINIC STOPS",?71,"Page: ",PG
"RTN","ECXSCLD",176,0)
 I ECDATE]"" W !,"(last reviewed on ",ECDATE,")"
"RTN","ECXSCLD",177,0)
 E  W !,"(NEVER REVIEWED)"
"RTN","ECXSCLD",178,0)
 W !
"RTN","ECXSCLD",179,0)
 W !,?1,"CLINIC",?28,"STOP",?35,"CREDIT",?44,"DSS",?50,"DSS",?59,"ACTION",?68,"NAT'L",?74,"C/N"
"RTN","ECXSCLD",180,0)
 W !,?28,"CODE",?35,"STOP",?44,"STOP",?50,"CREDIT",?68,"CODE"
"RTN","ECXSCLD",181,0)
 W ! W:ECALL'="U" "( * - currently inactive)" W ?35,"CODE",?44,"CODE",?50,"CODE"
"RTN","ECXSCLD",182,0)
 I ECALL="U" W !,?8,"* - inactive     r - reactivated    ! - updated since last review"
"RTN","ECXSCLD",183,0)
 W !,LN
"RTN","ECXSCLD",184,0)
 Q
"RTN","ECXSCLD",185,0)
 ;
"RTN","ECXSCLD",186,0)
SHOWEM ; list clinics for worksheet
"RTN","ECXSCLD",187,0)
 I $Y+6>IOSL D HEAD Q:QFLG
"RTN","ECXSCLD",188,0)
 N ECNON1P
"RTN","ECXSCLD",189,0)
 S ECNON=$P(ECD,U,11),ECNON1P=$E(ECNON,1)
"RTN","ECXSCLD",190,0)
 S ECNON1P=$S(ECNON1P="Y":"N",1:"C") ;if 'yes', then, 'n'on count clinic
"RTN","ECXSCLD",191,0)
 S ECNON=ECNON1P_$E(ECNON,2,99)
"RTN","ECXSCLD",192,0)
 W !!,$E(ECSC,1,25)
"RTN","ECXSCLD",193,0)
 I ECALL="U" S:ECD["!" ECSCSIGN=ECSCSIGN_"!" W ECSCSIGN
"RTN","ECXSCLD",194,0)
 E  I ECALL'="U" W:$P(ECD,U,9)]"" "*"
"RTN","ECXSCLD",195,0)
 F J=1:1:5 W ?$P("28,35,44,50,62",",",J),$S($P(ECD,U,J):$P(ECD,U,J),J<3:"",1:"_____")
"RTN","ECXSCLD",196,0)
 S ECN=$P($G(^ECX(728.441,+$P(ECD,U,7),0)),U) W ?68,$S(ECN]"":ECN,1:"____"),?75,ECNON
"RTN","ECXSCLD",197,0)
 Q
"RTN","ECXSCLD",198,0)
SS ;SCROLL STOPS
"RTN","ECXSCLD",199,0)
 N JJ,SS
"RTN","ECXSCLD",200,0)
 W !,LN
"RTN","ECXSCLD",201,0)
 ;W !,"Key: + - new clinic; ! - updated since last review; * - currently inactiv
"RTN","ECXSCLD",202,0)
 I $E(IOST)="C" S SS=21-$Y F JJ=1:1:SS W !
"RTN","ECXSCLD",203,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXSCLD",204,0)
 Q
"RTN","ECXSCLD",205,0)
 ;
"RTN","ECXSCLD",206,0)
EDIT ; put in DSS stopcodes and which one to send
"RTN","ECXSCLD",207,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",208,0)
 W ! K DIC S DIC=728.44,DIC(0)="QEAMZ" D ^DIC G ENDX:Y<0
"RTN","ECXSCLD",209,0)
 S CLIEN1=+Y
"RTN","ECXSCLD",210,0)
 W !!,"EXISTING CLINIC FILE DATA:",?35,"EXISTING DSS CLINIC FILE DATA:"
"RTN","ECXSCLD",211,0)
 W !!,"STOP CODE :       ",$P(Y(0),U,2),?35,"DSS STOP CODE :   ",$P(Y(0),U,4)
"RTN","ECXSCLD",212,0)
 W !,"CREDIT STOP CODE :",$P(Y(0),U,3),?35,"DSS CREDIT STOP CODE :",$P(Y(0),U,5)
"RTN","ECXSCLD",213,0)
 W !
"RTN","ECXSCLD",214,0)
EDIT1 ;check input & update field #3; allow '@' deletion; allow bypass empty with no entry
"RTN","ECXSCLD",215,0)
 S OUT=0 F  D  Q:OUT
"RTN","ECXSCLD",216,0)
 .K DIC,DIR,ECXMSG,FDA,AMIS,X,Y
"RTN","ECXSCLD",217,0)
 .S STOP=$P(^ECX(728.44,CLIEN1,0),U,4)
"RTN","ECXSCLD",218,0)
 .S DIR(0)="FO^1:99",DIR("A")="DSS STOP CODE (3-digit code only)" I STOP]"" S DIR("B")=STOP
"RTN","ECXSCLD",219,0)
 .S DIR("?")="^S DIC=40.7,DIC(0)=""EMQZ"" D ^DIC"
"RTN","ECXSCLD",220,0)
 .D ^DIR
"RTN","ECXSCLD",221,0)
 .I X="@" D  Q
"RTN","ECXSCLD",222,0)
 ..S IENS=CLIEN1_",",FDA(728.44,IENS,3)=X D FILE^DIE("","FDA")
"RTN","ECXSCLD",223,0)
 ..S OUT=1 W "   deleted..."
"RTN","ECXSCLD",224,0)
 .I X="" S X=STOP K DIRUT S OUT=2 Q
"RTN","ECXSCLD",225,0)
 .S DIC("A")="DSS STOP CODE (3-digit code only): "
"RTN","ECXSCLD",226,0)
 .S DIC="^DIC(40.7,",DIC(0)="EMQZ"
"RTN","ECXSCLD",227,0)
 .S DIC("S")="I $P(^(0),U,3)=""""" D ^DIC
"RTN","ECXSCLD",228,0)
 .I X="@" D  Q
"RTN","ECXSCLD",229,0)
 ..S IENS=CLIEN1_",",FDA(728.44,IENS,3)=X D FILE^DIE("","FDA")
"RTN","ECXSCLD",230,0)
 ..S OUT=2 W "   deleted..."
"RTN","ECXSCLD",231,0)
 .I X="" K DIRUT S OUT=2 Q
"RTN","ECXSCLD",232,0)
 .I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) S OUT=3 Q
"RTN","ECXSCLD",233,0)
 .I +X'=X W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD",234,0)
 .I +Y'>0  Q
"RTN","ECXSCLD",235,0)
 .S AMIS=$P(^DIC(40.7,+Y,0),"^",2)
"RTN","ECXSCLD",236,0)
 .S CODE=+Y,ECXMSG=$$ERRCHK(CODE,3,CLIEN1)
"RTN","ECXSCLD",237,0)
 .I ECXMSG=-1 W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD",238,0)
 .I $G(ECXMSG)]"" W !,?5,ECXMSG,! Q
"RTN","ECXSCLD",239,0)
 .S IENS=CLIEN1_",",FDA(728.44,IENS,3)=AMIS D FILE^DIE("U","FDA")
"RTN","ECXSCLD",240,0)
 .S OUT=1
"RTN","ECXSCLD",241,0)
 I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) G ENDX
"RTN","ECXSCLD",242,0)
 ;check input & update field #4; allow '@' deletion; allow bypass empty with no entry
"RTN","ECXSCLD",243,0)
 S OUT=0 F  D  G:OUT=1 ENDCHK
"RTN","ECXSCLD",244,0)
 .K DIC,DIR,ECXMSG,FDA,AMIS,X,Y
"RTN","ECXSCLD",245,0)
 .S CSTOP=$P(^ECX(728.44,CLIEN1,0),U,5)
"RTN","ECXSCLD",246,0)
 .S DIR(0)="FO^1:99",DIR("A")="DSS CREDIT STOP CODE (3-digit code only)" I CSTOP]"" S DIR("B")=CSTOP
"RTN","ECXSCLD",247,0)
 .S DIR("?")="^S DIC=40.7,DIC(0)=""EMQZ"" D ^DIC"
"RTN","ECXSCLD",248,0)
 .D ^DIR
"RTN","ECXSCLD",249,0)
 .I X="@" D  Q
"RTN","ECXSCLD",250,0)
 ..S IENS=CLIEN1_",",FDA(728.44,IENS,4)=X D FILE^DIE("","FDA")
"RTN","ECXSCLD",251,0)
 ..S OUT=1 W "   deleted..."
"RTN","ECXSCLD",252,0)
 .I X="" S X=CSTOP K DIRUT S OUT=1 Q
"RTN","ECXSCLD",253,0)
 .S DIC("A")="DSS CREDIT STOP CODE (3-digit code only): "
"RTN","ECXSCLD",254,0)
 .S DIC("S")="I $P(^(0),U,3)=""""" D ^DIC
"RTN","ECXSCLD",255,0)
 .S DIC=40.7,DIC(0)="EMQZ" D ^DIC
"RTN","ECXSCLD",256,0)
 .I X="" K DIRUT S OUT=1 Q
"RTN","ECXSCLD",257,0)
 .I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) S OUT=1 Q
"RTN","ECXSCLD",258,0)
 .I +X'=X W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD",259,0)
 .I +Y'>0  Q
"RTN","ECXSCLD",260,0)
 .S AMIS=$P(^DIC(40.7,+Y,0),"^",2)
"RTN","ECXSCLD",261,0)
 .S CODE=+Y,ECXMSG=$$ERRCHK(CODE,4,CLIEN1)
"RTN","ECXSCLD",262,0)
 .I ECXMSG=-1 W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD",263,0)
 .I $G(ECXMSG)]"" W !,?5,ECXMSG,! Q
"RTN","ECXSCLD",264,0)
 .S IENS=CLIEN1_",",FDA(728.44,IENS,4)=AMIS D FILE^DIE("U","FDA")
"RTN","ECXSCLD",265,0)
 .S OUT=1
"RTN","ECXSCLD",266,0)
 I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) G ENDX
"RTN","ECXSCLD",267,0)
 K I,WARNING,DIC,DIE,DA,DR,DIR,DIRUT,DTOUT,DUOUT,X,Y,ERRCHK
"RTN","ECXSCLD",268,0)
 K CLIEN1,CODE,ECXMSG,IENS,STOP,CSTOP,AMIS,FDA,OUT,ERR,WRN,ECXERR
"RTN","ECXSCLD",269,0)
 Q
"RTN","ECXSCLD",270,0)
ENDCHK ;check validity of clinic
"RTN","ECXSCLD",271,0)
 S CODE=$P(^ECX(728.44,CLIEN1,0),U,4)
"RTN","ECXSCLD",272,0)
 K ERR,WRN,ECXERR,WARNING,ERRCHK
"RTN","ECXSCLD",273,0)
 S ERRCHK=0
"RTN","ECXSCLD",274,0)
 D STOP^ECXSTOP(CODE,"DSS Stop Code",CLIEN1) D ERRPRNT
"RTN","ECXSCLD",275,0)
 I $D(ECXERR) S ERRCHK=1
"RTN","ECXSCLD",276,0)
 K ERR,WRN,ECXERR,WARNING
"RTN","ECXSCLD",277,0)
 S CODE=$P(^ECX(728.44,CLIEN1,0),U,5)
"RTN","ECXSCLD",278,0)
 D STOP^ECXSTOP(CODE,"Credit Stop Code",CLIEN1) D ERRPRNT
"RTN","ECXSCLD",279,0)
 I $D(ECXERR) S ERRCHK=1
"RTN","ECXSCLD",280,0)
 W !!,"...Validity Checker Complete."
"RTN","ECXSCLD",281,0)
 I ERRCHK=1 W !!,"...Errors found please fix." G EDIT1
"RTN","ECXSCLD",282,0)
 ;remaining fields
"RTN","ECXSCLD",283,0)
 S DIE=728.44,DA=+CLIEN1
"RTN","ECXSCLD",284,0)
 S DR="5//1;S:X'=4 Y=6;7;6///"_DT_";8" D ^DIE
"RTN","ECXSCLD",285,0)
 S:$P(^ECX(728.44,DA,0),U,6)'=4 $P(^(0),U,8)="" S $P(^(0),U,7)=""
"RTN","ECXSCLD",286,0)
 Q
"RTN","ECXSCLD",287,0)
ERRPRNT ;print errors
"RTN","ECXSCLD",288,0)
 I $G(ERR)>0,$D(ECXERR) D
"RTN","ECXSCLD",289,0)
 . W ! S I=0 F  S I=$O(ECXERR(I)) Q:'I  D
"RTN","ECXSCLD",290,0)
 . . W !,"..",ECXERR(I)
"RTN","ECXSCLD",291,0)
 I $G(WRN)>0,$D(WARNING) D
"RTN","ECXSCLD",292,0)
 . W ! S I=0 F  S I=$O(WARNING(I)) Q:'I  D
"RTN","ECXSCLD",293,0)
 . . W !,"..",WARNING(I)
"RTN","ECXSCLD",294,0)
 Q
"RTN","ECXSCLD",295,0)
KILL ;
"RTN","ECXSCLD",296,0)
 K I,WARNING,DIC,DIE,DA,DR,DIR,DIRUT,DTOUT,DUOUT,X,Y,ERRCHK
"RTN","ECXSCLD",297,0)
 K CLIEN1,CODE,ECXMSG,IENS,STOP,CSTOP,AMIS,FDA,OUT,ERR,WRN,ECXERR
"RTN","ECXSCLD",298,0)
 G EDIT
"RTN","ECXSCLD",299,0)
 ;
"RTN","ECXSCLD",300,0)
ERRCHK(CODE,TYPE,CLIEN1) ;check for problems
"RTN","ECXSCLD",301,0)
 ;input
"RTN","ECXSCLD",302,0)
 ;   code: stop code IEN in #40.7
"RTN","ECXSCLD",303,0)
 ;   type: type (3=dss stop code, 4=dss credit stop code)
"RTN","ECXSCLD",304,0)
 ;  clien: clinic IEN in #728.44
"RTN","ECXSCLD",305,0)
 ;output
"RTN","ECXSCLD",306,0)
 ;  ecxerr: error msg
"RTN","ECXSCLD",307,0)
 N XCODE,INACT,RTYPE,ERR,WRN
"RTN","ECXSCLD",308,0)
 K ECXERR,WARNING
"RTN","ECXSCLD",309,0)
 S ECXERR="",WARNING="",ERR=0
"RTN","ECXSCLD",310,0)
 Q:'$G(CODE) -1 Q:'$G(CLIEN1) -1
"RTN","ECXSCLD",311,0)
 Q:(TYPE="") -1 Q:((TYPE<3)&(TYPE>4)) -1
"RTN","ECXSCLD",312,0)
 S XCODE=$P(^DIC(40.7,CODE,0),"^",2)
"RTN","ECXSCLD",313,0)
 S TYPE=$S(TYPE=3:"DSS Stop Code",1:"DSS Credit Stop Code")
"RTN","ECXSCLD",314,0)
 I TYPE="DSS Stop Code" D STOP^ECXSTOP(XCODE,TYPE,,,CODE)
"RTN","ECXSCLD",315,0)
 I TYPE="DSS Credit Stop Code" D STOP^ECXSTOP(XCODE,TYPE,CLIEN1,,CODE)
"RTN","ECXSCLD",316,0)
 I $G(ERR)>0,$D(ECXERR(1)) S ERR=$O(ECXERR(0)),ECXERR=ECXERR(ERR) Q ECXERR
"RTN","ECXSCLD",317,0)
 E  S ECXERR="" Q ECXERR
"RTN","ECXSCLD",318,0)
 Q ECXERR
"RTN","ECXSCLD",319,0)
 ;
"RTN","ECXSCLD",320,0)
APPROVE ; approve current DSS Stop and Credit Stop codes
"RTN","ECXSCLD",321,0)
 W !!,"This option allows you to mark the current clinic entries in the CLINICS AND",!,"STOP CODES file (#728.44) as ""reviewed"".  Those entries will then be omitted"
"RTN","ECXSCLD",322,0)
 W !,"from the list printed from the ""Clinic and DSS Stop Codes Print"" when you",!,"choose to print only ""unreviewed"" clinics.",!
"RTN","ECXSCLD",323,0)
 K DIR S DIR(0)="Y",DIR("A",1)="Are you ready to approve the reviewed information provided by the",DIR("A")="""Clinic and DSS Stop Codes Print""",DIR("B")="NO"
"RTN","ECXSCLD",324,0)
 S DIR("?",1)="   Enter:"
"RTN","ECXSCLD",325,0)
 S DIR("?",2)="     ""YES"" if you concur with the ""Clinic and DSS Stop Codes Print"","
"RTN","ECXSCLD",326,0)
 S DIR("?",3)="     ""NO"" or <RET> if you do not want to approve the current information,"
"RTN","ECXSCLD",327,0)
 S DIR("?")="     ""^"" to exit option."
"RTN","ECXSCLD",328,0)
 D ^DIR K DIR I 'Y!($D(DIRUT)) G ENDX
"RTN","ECXSCLD",329,0)
 W ! S ZTRTN="APPLOOP^ECXSCLD",ZTIO="",ZTDESC="Approve DSS stop codes for clinic extract" D ^%ZTLOAD W !!,"...approval queued" G ENDX
"RTN","ECXSCLD",330,0)
 ;
"RTN","ECXSCLD",331,0)
APPLOOP ; queued entry to approve action codes
"RTN","ECXSCLD",332,0)
 F EC=0:0 S EC=$O(^ECX(728.44,EC)) Q:'EC  I $D(^ECX(728.44,EC,0)) S DA=EC,DIE="^ECX(728.44,",DR="6///"_DT D ^DIE
"RTN","ECXSCLD",333,0)
 S ZTREQ="@"
"RTN","ECXSCLD",334,0)
 K ^XTMP("ECX UNREVIEWED CLINICS") S ^XTMP("ECX UNREVIEWED CLINICS",0)=$$FMADD^XLFDT(DT,180)_U_DT_U_"ECX UNREVIEWED CLINICS"
"RTN","ECXSCLD",335,0)
ENDX K X,Y,DA,DR,DIC,DIE,QFLG,PG,LN,ZTRTN,ZTIO,ZTDESC
"RTN","ECXSCLD",336,0)
 K DIR,DIRUT,DTOUT,DUOUT,CLIEN,CODE,ECXMSG,IENS,STOP,CSTOP,AMIS,FDA,OUT
"RTN","ECXSCLD",337,0)
 K J,ECSC,ECSD,ECDATE,ECD,ECN,ECNON,ECXINAC,QFLG,PG,LN,SS,POP,%ZIS
"RTN","ECXSCLD",338,0)
 K EC,ECD,ECD2,ECL,ECS,ECS2,ECP,ECSC,ECSC2,ECDB,ECDNEW,ECDDIF,ECSCSIGN,ECDF,ECALL,ID,RD
"RTN","ECXSCLD",339,0)
 Q
"RTN","ECXSCLD",340,0)
 ;
"RTN","ECXSCLD",341,0)
PAUSE ;pause screen
"RTN","ECXSCLD",342,0)
 N DIR,X,Y,DTOUT,DUOUT,DIROUT,DIRUT
"RTN","ECXSCLD",343,0)
 S DIR(0)="E" W !! D ^DIR W !!
"RTN","ECXSCLD",344,0)
 Q
"RTN","ECXSCLD",345,0)
 ;
"RTN","ECXSCLD",346,0)
LOOK ;queued entry to check for new clinics
"RTN","ECXSCLD",347,0)
 N DAT,ECD0,ECXMISS,ID,ECGRP
"RTN","ECXSCLD",348,0)
 S ECD=$E(DT,1,5)-1-($E(DT,4,5)="01"*8800),ECD0=ECD_"00",ECXMISS=10,ECGRP="SCX" K ^TMP("ECXS",$J)
"RTN","ECXSCLD",349,0)
 F EC=0:0 S EC=$O(^SC(EC)) Q:'EC  I $D(^SC(EC,0)),$P(^SC(EC,0),U,3)="C",'$D(^ECX(728.44,EC)) S DAT=$G(^SC(EC,"I")) D
"RTN","ECXSCLD",350,0)
 .S ID=+DAT,RD=$P(DAT,U,2) I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCLD",351,0)
 .S ^TMP("ECXS",$J,ECXMISS,0)=$J(EC,6)_"    "_$$LJ^XLFSTR($P(^SC(EC,0),U),40),ECXMISS=ECXMISS+1
"RTN","ECXSCLD",352,0)
 D ^ECXSCX1
"RTN","ECXSCLD",353,0)
 Q
"RTN","ECXSCLD1")
0^27^B3035123^n/a
"RTN","ECXSCLD1",1,0)
ECXSCLD1 ;ALB/DAN <CONT> Enter, Print and Edit Entries in 728.44 ;7/26/11  10:37
"RTN","ECXSCLD1",2,0)
 ;;3.0;DSS EXTRACTS;**132**;Dec 22, 1997;Build 18
"RTN","ECXSCLD1",3,0)
 ;
"RTN","ECXSCLD1",4,0)
EXPORT ;Export clinic review data to spreedsheet
"RTN","ECXSCLD1",5,0)
 N DIC,FLDS,BY,FR,L,DIOBEG
"RTN","ECXSCLD1",6,0)
 W !!,"Turn on 'Capture Incoming Data...' and select your exported text file."
"RTN","ECXSCLD1",7,0)
 W !,"To receive correct number of columns, select a large enough parameter."
"RTN","ECXSCLD1",8,0)
 W !,"DEVICE: 0;225;99999 (example)."
"RTN","ECXSCLD1",9,0)
 S DIC="^ECX(728.44,",FLDS="[ECX CLINIC REVIEW EXPORT]",BY="NUMBER",FR="",L=0
"RTN","ECXSCLD1",10,0)
 S DIOBEG="W ""IEN^Clinic^Stop Code^Credit Stop Code^DSS Stop Code^DSS Credit Code^Action^Last Review Date^Nat Code^Inact Date^React Date^Clinic Type^App Len^Div^App Type^Non Cnt"""
"RTN","ECXSCLD1",11,0)
 D EN1^DIP
"RTN","ECXSCLD1",12,0)
 W !!,"Turn off your capturing..."
"RTN","ECXSCLD1",13,0)
 W !,"...Then, pull your export text file into your spreadsheet.",!
"RTN","ECXSCLD1",14,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXSCLD1",15,0)
 D HOME^%ZIS
"RTN","ECXSCLD1",16,0)
 Q
"RTN","ECXSCX1")
0^1^B78250876^B69908401
"RTN","ECXSCX1",1,0)
ECXSCX1 ;ALB/JAP,BIR/DMA-Clinic Extract Message ;9/29/10  17:26
"RTN","ECXSCX1",2,0)
 ;;3.0;DSS EXTRACTS;**8,28,24,27,29,30,31,33,84,92,105,127,132**;Dec 22, 1997;Build 18
"RTN","ECXSCX1",3,0)
EN ;entry point from ecxscx
"RTN","ECXSCX1",4,0)
 N ECX
"RTN","ECXSCX1",5,0)
 ;send missing clinic message
"RTN","ECXSCX1",6,0)
 S ECX=$O(^TMP($J,"ECXS","MISS",0)) D
"RTN","ECXSCX1",7,0)
 .Q:ECX=""
"RTN","ECXSCX1",8,0)
 .S XMSUB="MISSING CLINICS in File #728.44",XMDUZ="DSS SYSTEM"
"RTN","ECXSCX1",9,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXSCX1",10,0)
 .F ECX=1:1:5 S ^TMP($J,"ECXS","MISS",ECX,0)=$P($T(MSG+ECX),";;",2)
"RTN","ECXSCX1",11,0)
 .S XMTEXT="^TMP($J,""ECXS"",""MISS""," D ^XMD
"RTN","ECXSCX1",12,0)
 ;send no division message
"RTN","ECXSCX1",13,0)
 S ECX=$O(^TMP($J,"ECXS","DIV",0)) D
"RTN","ECXSCX1",14,0)
 .Q:ECX=""
"RTN","ECXSCX1",15,0)
 .S XMSUB="CLINICS w/o DIVISION Data",XMDUZ="DSS SYSTEM"
"RTN","ECXSCX1",16,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXSCX1",17,0)
 .F ECX=1:1:5 S ^TMP($J,"ECXS","DIV",ECX,0)=$P($T(MSG2+ECX),";;",2)
"RTN","ECXSCX1",18,0)
 .S XMTEXT="^TMP($J,""ECXS"",""DIV""," D ^XMD
"RTN","ECXSCX1",19,0)
 ;cleanup
"RTN","ECXSCX1",20,0)
 K ^TMP($J,"ECXS")
"RTN","ECXSCX1",21,0)
 Q
"RTN","ECXSCX1",22,0)
MSG ;text for missing clinic
"RTN","ECXSCX1",23,0)
 ;;The following clinics have not been entered into the CLINIC AND
"RTN","ECXSCX1",24,0)
 ;;STOP CODES file (#728.44).  If any listed clinic is currently
"RTN","ECXSCX1",25,0)
 ;;active, please use the options 'Create DSS Clinic Stop Code File'
"RTN","ECXSCX1",26,0)
 ;;and 'Enter/Edit DSS Stop Codes for Clinics' to update this file.
"RTN","ECXSCX1",27,0)
 ;;  
"RTN","ECXSCX1",28,0)
 ;
"RTN","ECXSCX1",29,0)
MSG2 ;text for missing division
"RTN","ECXSCX1",30,0)
 ;;The following clinics in the HOSPITAL LOCATION file (#44) have not
"RTN","ECXSCX1",31,0)
 ;;been assigned to a division from the MEDICAL CENTER DIVISION file 
"RTN","ECXSCX1",32,0)
 ;;(#40.8).  CLI extract records associated with these clinics have
"RTN","ECXSCX1",33,0)
 ;;been given a default Division identifier of "1".
"RTN","ECXSCX1",34,0)
 ;;
"RTN","ECXSCX1",35,0)
 ;
"RTN","ECXSCX1",36,0)
MISS ;load ^tmp if clinic missing from #728.44
"RTN","ECXSCX1",37,0)
 N DAT,ID,RD
"RTN","ECXSCX1",38,0)
 S (ID,RD)=""
"RTN","ECXSCX1",39,0)
 S DAT=$G(^SC(SC,"I")) I DAT]"" S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCX1",40,0)
 ;ignore inactive clinics
"RTN","ECXSCX1",41,0)
 I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCX1",42,0)
 I '$D(^TMP($J,"ECXS","ECXMISS")) S ^TMP($J,"ECXS","ECXMISS")=10
"RTN","ECXSCX1",43,0)
 S ECXMISS=^TMP($J,"ECXS","ECXMISS")
"RTN","ECXSCX1",44,0)
 S ^TMP($J,"ECXS","MISS",ECXMISS,0)=$J(SC,6)_"    "_$$LJ^XLFSTR($P(^SC(SC,0),U),40)_ECSC_"/"_ECCSC
"RTN","ECXSCX1",45,0)
 S ^TMP($J,"ECXS","ECXMISS")=ECXMISS+1
"RTN","ECXSCX1",46,0)
 Q
"RTN","ECXSCX1",47,0)
 ;
"RTN","ECXSCX1",48,0)
NODIV ;load ^tmp if clinic w/o division
"RTN","ECXSCX1",49,0)
 N DAT,ID,RD
"RTN","ECXSCX1",50,0)
 S (ID,RD)=""
"RTN","ECXSCX1",51,0)
 S DAT=$G(^SC(SC,"I")) I DAT]"" S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCX1",52,0)
 ;ignore inactive clinics
"RTN","ECXSCX1",53,0)
 I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCX1",54,0)
 I '$D(^TMP($J,"ECXS","ECXMISS")) S ^TMP($J,"ECXS","ECXMISS")=10
"RTN","ECXSCX1",55,0)
 S ECXMISS=^TMP($J,"ECXS","ECXMISS")
"RTN","ECXSCX1",56,0)
 S ^TMP($J,"ECXS","DIV",ECXMISS,0)=$J(SC,6)_"    "_$$LJ^XLFSTR($P(^SC(SC,0),U),40)
"RTN","ECXSCX1",57,0)
 S ^TMP($J,"ECXS","ECXMISS")=ECXMISS+1
"RTN","ECXSCX1",58,0)
 Q
"RTN","ECXSCX1",59,0)
 ;
"RTN","ECXSCX1",60,0)
FEEDER(ECXSC,ECXSD,ECXP1,ECXP2,ECXP3,ECXSEND,ECXDIV) ;get transmission style and feeder key variables
"RTN","ECXSCX1",61,0)
 ;feeder key = primary stop code_secondary stop code_length of appointment_national clinic code_noshow indicator
"RTN","ECXSCX1",62,0)
 ;   input
"RTN","ECXSCX1",63,0)
 ;   ECXSC = ien of clinic in file #44 (required)
"RTN","ECXSCX1",64,0)
 ;   ECXSD  = start date of extract date range (required)
"RTN","ECXSCX1",65,0)
 ;   ECXP1,ECXP2,ECXP3,ECXSEND passed by reference (required)
"RTN","ECXSCX1",66,0)
 ;   output (passed-by-reference variables)
"RTN","ECXSCX1",67,0)
 ;   ECXP1  = primary stop code
"RTN","ECXSCX1",68,0)
 ;   ECXP2  = secondary stop code
"RTN","ECXSCX1",69,0)
 ;   ECXP3  = field #7 of file #728.44
"RTN","ECXSCX1",70,0)
 ;   ECXSEND = field #5 of file #728.44
"RTN","ECXSCX1",71,0)
 ;   ECXDIV  = field #3.5 of file #44
"RTN","ECXSCX1",72,0)
 N ECSC,ECCSC,ECSD1,ECXNC,ECXMISS,CLIN,SC
"RTN","ECXSCX1",73,0)
 S (ECXP1,ECXP2)="000",ECXP3="0000"
"RTN","ECXSCX1",74,0)
 S ECXSEND=1,ECXDIV=0
"RTN","ECXSCX1",75,0)
 Q:+ECXSC=0
"RTN","ECXSCX1",76,0)
 ;get needed data from ^tmp
"RTN","ECXSCX1",77,0)
 I $D(^TMP($J,"ECXS","SC",ECXSC)) D
"RTN","ECXSCX1",78,0)
 .S CLIN=^TMP($J,"ECXS","SC",ECXSC)
"RTN","ECXSCX1",79,0)
 .S ECXP1=$P(CLIN,U),ECXP2=$P(CLIN,U,2),ECXP3=$P(CLIN,U,3),ECXSEND=$P(CLIN,U,4),ECXDIV=$P(CLIN,U,5)
"RTN","ECXSCX1",80,0)
 .S ECXDIV=+$P($G(^TMP($J,"ECXCL",ECXSC)),U,4) S:ECXDIV=0 ECXDIV=1
"RTN","ECXSCX1",81,0)
 ;otherwise, set needed data in ^tmp
"RTN","ECXSCX1",82,0)
 I '$D(^TMP($J,"ECXS","SC",ECXSC)) D
"RTN","ECXSCX1",83,0)
 .;get division or send no division msg
"RTN","ECXSCX1",84,0)
 .S ECXDIV=+$P($G(^TMP($J,"ECXCL",ECXSC)),U,4)
"RTN","ECXSCX1",85,0)
 .I ECXDIV=0 S SC=ECXSC D NODIV S ECXDIV=1
"RTN","ECXSCX1",86,0)
 .;get other data from file #44 if no #727.44 record; send missing clinic msg
"RTN","ECXSCX1",87,0)
 .I '$D(^ECX(728.44,ECXSC,0)) D
"RTN","ECXSCX1",88,0)
 ..S ECSC=+$P($G(^SC(ECXSC,0)),U,7),ECCSC=+$P(^(0),U,18)
"RTN","ECXSCX1",89,0)
 ..S SC=ECXSC,ECSD1=ECXSD D MISS
"RTN","ECXSCX1",90,0)
 ..S:ECSC ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2),ECXP1=$$RJ^XLFSTR(+ECXP1,3,0)
"RTN","ECXSCX1",91,0)
 .;otherwise get other data from file #728.44
"RTN","ECXSCX1",92,0)
 .S EC=$G(^ECX(728.44,ECXSC,0)) D
"RTN","ECXSCX1",93,0)
 ..Q:EC=""
"RTN","ECXSCX1",94,0)
 ..S ECXSEND=$P(EC,U,6)
"RTN","ECXSCX1",95,0)
 ..Q:ECXSEND=6
"RTN","ECXSCX1",96,0)
 ..S ECSC=+$P(EC,U,4),ECCSC=+$P(EC,U,5)
"RTN","ECXSCX1",97,0)
 ..I 'ECSC S ECSC=+$P(EC,U,2),ECCSC=+$P(EC,U,3)
"RTN","ECXSCX1",98,0)
 ..I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXSCX1",99,0)
 ..;if primary stop not valid, use file #44 record
"RTN","ECXSCX1",100,0)
 ..I 'ECSC S ECSC=+$P($G(^SC(ECXSC,0)),U,7),ECCSC=+$P($G(^(0)),U,18) I ECSC D
"RTN","ECXSCX1",101,0)
 ...S ECXP1=+$P($G(^DIC(40.7,ECSC,0)),U,2)
"RTN","ECXSCX1",102,0)
 ...S:ECCSC ECXP2=+$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXSCX1",103,0)
 ...S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXSCX1",104,0)
 .;for action code=1, secondary stop code is always "000"
"RTN","ECXSCX1",105,0)
 .I ECXSEND=1 S ECXP2="000"
"RTN","ECXSCX1",106,0)
 .;action code of 2 or 3 should not be used, but continue to follow v2t11 logic
"RTN","ECXSCX1",107,0)
 .I ECXSEND=2 S ECXP1=ECXP2,ECXP2="000"
"RTN","ECXSCX1",108,0)
 .;for action code=4, need to get national clinic code
"RTN","ECXSCX1",109,0)
 .I ECXSEND=4 D
"RTN","ECXSCX1",110,0)
 ..S ECXNC=+$P($G(^ECX(728.44,ECXSC,0)),U,8)
"RTN","ECXSCX1",111,0)
 ..I ECXNC S ECXNC=$P($G(^ECX(728.441,ECXNC,0)),U),ECXP3=$$RJ^XLFSTR(ECXNC,4,0)
"RTN","ECXSCX1",112,0)
 .;set data in ^tmp
"RTN","ECXSCX1",113,0)
 .S ^TMP($J,"ECXS","SC",ECXSC)=ECXP1_U_ECXP2_U_ECXP3_U_ECXSEND
"RTN","ECXSCX1",114,0)
 Q
"RTN","ECXSCX1",115,0)
 ;
"RTN","ECXSCX1",116,0)
VISIT(ECXDFN,ECXVISIT,ECXVIST,ECXERR) ;get visit specific data
"RTN","ECXSCX1",117,0)
 ;input  ECXVISIT  = pointer to file #9000010
"RTN","ECXSCX1",118,0)
 ;       ECXSVC  = sc percentage
"RTN","ECXSCX1",119,0)
 ;output ECXVSIT = data array
"RTN","ECXSCX1",120,0)
 ;       ECXERR  = 1 indicates error; otherwise, 0
"RTN","ECXSCX1",121,0)
 N AO,ARRAY,CM,CNT,CPT,DA,DATE,DA,DIQ,ICD,ICD9,IR,LEN,M,MOD,MST,NUM,NOD1,NODE
"RTN","ECXSCX1",122,0)
 N PROV,PROVPC,REC,VAL,VISIT,X,Y,HNC,PGE,CV,SHAD
"RTN","ECXSCX1",123,0)
 S ECXERR=0,VISIT=ECXVISIT
"RTN","ECXSCX1",124,0)
 S (ECXVIST("AO"),ECXVIST("IR"),ECXVIST("PGE"),ECXVIST("HNC"))=""
"RTN","ECXSCX1",125,0)
 S (ECXVIST("MST"),ECXVIST("CV"),ECXVIST("SHAD"))=""
"RTN","ECXSCX1",126,0)
 ;MRY-2/4/2010, extracts don't seem to use encounter (visit) "CV".
"RTN","ECXSCX1",127,0)
 ;extracts use eligibility API for some reason.  Added "CV" anyway.
"RTN","ECXSCX1",128,0)
 S (ECXVIST("PROV"),ECXVIST("PROV CLASS"))=""
"RTN","ECXSCX1",129,0)
 S (ECXVIST("PROV NPI"),ECXVIST("SOURCE"))=""
"RTN","ECXSCX1",130,0)
 F I="P",1,2,3,4 S ECXVIST("ICD9"_I)=""
"RTN","ECXSCX1",131,0)
 F I=1:1:8 S ECXVIST("CPT"_I)=""
"RTN","ECXSCX1",132,0)
 D ENCEVENT^PXAPI(VISIT)
"RTN","ECXSCX1",133,0)
 I $O(^TMP("PXKENC",$J,VISIT,""))']"" K ECXVIST S ECXERR=1
"RTN","ECXSCX1",134,0)
 Q:ECXERR
"RTN","ECXSCX1",135,0)
 S DATE=$P($P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,0),U,1),".",1)
"RTN","ECXSCX1",136,0)
 S ECXVIST("SOURCE")=$P($G(^TMP("PXKENC",$J,VISIT,"VST",VISIT,812)),U,3)
"RTN","ECXSCX1",137,0)
 ;get icd9 codes upto 5; else use 799.9
"RTN","ECXSCX1",138,0)
 K ARY S ICD("P")=0,ICD("S")=0,(ARY,REC)=""
"RTN","ECXSCX1",139,0)
 F  S REC=$O(^TMP("PXKENC",$J,VISIT,"POV",REC)) Q:REC=""  D
"RTN","ECXSCX1",140,0)
 .S VAL=^TMP("PXKENC",$J,VISIT,"POV",REC,0) Q:'VAL
"RTN","ECXSCX1",141,0)
 .I $P(VAL,U,12)="P" D
"RTN","ECXSCX1",142,0)
 ..S:'$D(ARY("P",+VAL)) CNT=ICD("P")+1,ICD("P",CNT)=+VAL,ICD("P")=CNT
"RTN","ECXSCX1",143,0)
 ..S ARY("P",+VAL)=""
"RTN","ECXSCX1",144,0)
 .I $P(VAL,U,12)'="P" D
"RTN","ECXSCX1",145,0)
 ..S:'$D(ARY("S",+VAL)) CNT=ICD("S")+1,ICD("S",CNT)=+VAL,ICD("S")=CNT
"RTN","ECXSCX1",146,0)
 ..S ARY("S",+VAL)=""
"RTN","ECXSCX1",147,0)
 S CNT=0,ECXVIST("ICD9P")=$P($G(^ICD9(+$G(ICD("P",1),0),0)),U)
"RTN","ECXSCX1",148,0)
 F I=2:1 Q:'$D(ICD("P",I))  D  Q:CNT>4
"RTN","ECXSCX1",149,0)
 .S CNT=CNT+1,ECXVIST("ICD9"_CNT)=$P($G(^ICD9(ICD("P",I),0)),U)
"RTN","ECXSCX1",150,0)
 I CNT<4 F I=1:1:8 Q:'$D(ICD("S",I))  D  Q:CNT>4
"RTN","ECXSCX1",151,0)
 .I '$D(ARY("P",ICD("S",I))) D
"RTN","ECXSCX1",152,0)
 ..S CNT=CNT+1,ECXVIST("ICD9"_CNT)=$P($G(^ICD9(ICD("S",I),0)),U)
"RTN","ECXSCX1",153,0)
 ;get first provider designated as primary
"RTN","ECXSCX1",154,0)
 ;if no primary, then get first physician provider
"RTN","ECXSCX1",155,0)
 ;if no physician, then get first provider
"RTN","ECXSCX1",156,0)
 S (PROV,PROVPC)=""
"RTN","ECXSCX1",157,0)
 I $O(^TMP("PXKENC",$J,VISIT,"PRV",0)) D
"RTN","ECXSCX1",158,0)
 .S (REC,VAL)=0 D
"RTN","ECXSCX1",159,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)!(VAL)  D
"RTN","ECXSCX1",160,0)
 ...S:($P(^(REC,0),U,4)="P") VAL=+^(0)
"RTN","ECXSCX1",161,0)
 ...S PROV=VAL,PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE)
"RTN","ECXSCX1",162,0)
 .I 'VAL S (REC,VAL)=0 D
"RTN","ECXSCX1",163,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)!(VAL)  D
"RTN","ECXSCX1",164,0)
 ...S (PROV,VAL)=+^(REC,0)
"RTN","ECXSCX1",165,0)
 ...S PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE) Q:PROVPC=""
"RTN","ECXSCX1",166,0)
 ...S NUM=$E(PROVPC,2,7) S:(NUM<110000)!(NUM>119999) VAL=0,PROVPC=""
"RTN","ECXSCX1",167,0)
 .I 'VAL D
"RTN","ECXSCX1",168,0)
 ..S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",0)) Q:('REC)!(VAL)
"RTN","ECXSCX1",169,0)
 ..S VAL=+^(REC,0),PROV=VAL,PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE)
"RTN","ECXSCX1",170,0)
 .S:PROV]"" PROV="2"_PROV
"RTN","ECXSCX1",171,0)
 S ECXVIST("PROV")=PROV,ECXVIST("PROV CLASS")=PROVPC
"RTN","ECXSCX1",172,0)
 S ECXVIST("PROV NPI")=""
"RTN","ECXSCX1",173,0)
 ;get 1-5 secondary physicians
"RTN","ECXSCX1",174,0)
 F I=1:1:5 S ECXVIST("PROVS"_I)=""
"RTN","ECXSCX1",175,0)
 I $O(^TMP("PXKENC",$J,VISIT,"PRV",0)) D
"RTN","ECXSCX1",176,0)
 .S (REC,VAL,COUNTS)=0 D
"RTN","ECXSCX1",177,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)  D
"RTN","ECXSCX1",178,0)
 ...Q:$P(^(REC,0),U,4)'="S"
"RTN","ECXSCX1",179,0)
 ...S VAL=+^(0) I $E(PROV,2,99)=VAL Q  ;don't process, primary
"RTN","ECXSCX1",180,0)
 ...S COUNTS=COUNTS+1 Q:(COUNTS>5)
"RTN","ECXSCX1",181,0)
 ...S PROVS=VAL,PROVSPC=$$PRVCLASS^ECXUTL(PROVS,DATE)
"RTN","ECXSCX1",182,0)
 ...S PROVSNPI=$$NPI^XUSNPI("Individual_ID",PROVS,DATE)
"RTN","ECXSCX1",183,0)
 ...S:+PROVSNPI'>0 PROVSNPI="" S PROVSNPI=$P(PROVSNPI,U)
"RTN","ECXSCX1",184,0)
 ...S ECXVIST("PROVS"_COUNTS)="2"_PROVS_U_PROVSPC_U_PROVSNPI
"RTN","ECXSCX1",185,0)
 ;get cpt codes upto 8 & modifiers upto 5
"RTN","ECXSCX1",186,0)
 S CNT=1,PROV=$E(PROV,2,99)
"RTN","ECXSCX1",187,0)
 D:$O(^TMP("PXKENC",$J,VISIT,"CPT",0))
"RTN","ECXSCX1",188,0)
 .S REC=0 D:PROV]""
"RTN","ECXSCX1",189,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC)) Q:'REC  D  Q:CNT>8
"RTN","ECXSCX1",190,0)
 ...S CPT="",NODE=$G(^TMP("PXKENC",$J,VISIT,"CPT",REC,12))
"RTN","ECXSCX1",191,0)
 ...Q:NODE=""
"RTN","ECXSCX1",192,0)
 ...S NOD1=$S($P(NODE,U,4)=PROV:^TMP("PXKENC",$J,VISIT,"CPT",REC,0),1:"")
"RTN","ECXSCX1",193,0)
 ...Q:$P(NOD1,U)=""
"RTN","ECXSCX1",194,0)
 ...S Q="00"_+$P(NOD1,U,16),Q=$S(+Q:$E(Q,$L(Q)-1,$L(Q)),1:"01")
"RTN","ECXSCX1",195,0)
 ...S CPT=$P(NOD1,U),M=0,MOD=""
"RTN","ECXSCX1",196,0)
 ...F I=1:1:5 S M=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M)) Q:'M  D
"RTN","ECXSCX1",197,0)
 ....S MOD=MOD_$S(MOD'="":";",1:"")
"RTN","ECXSCX1",198,0)
 ....S MOD=MOD_$P(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M,0),U)
"RTN","ECXSCX1",199,0)
 ...S ECXVIST("CPT"_CNT)=$$CPT^ECXUTL3(CPT,MOD,Q),CNT=CNT+1
"RTN","ECXSCX1",200,0)
 ...K ^TMP("PXKENC",$J,VISIT,"CPT",REC)
"RTN","ECXSCX1",201,0)
 ..Q:CNT>8
"RTN","ECXSCX1",202,0)
 .Q:CNT>8  S REC=0
"RTN","ECXSCX1",203,0)
 .F  S REC=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC)) Q:'REC  D  Q:CNT>8
"RTN","ECXSCX1",204,0)
 ..S CPT="",NOD1=$G(^TMP("PXKENC",$J,VISIT,"CPT",REC,0))
"RTN","ECXSCX1",205,0)
 ..Q:$P(NOD1,U)=""
"RTN","ECXSCX1",206,0)
 ..S Q="00"_+$P(NOD1,U,16),Q=$S(+Q:$E(Q,$L(Q)-1,$L(Q)),1:"01")
"RTN","ECXSCX1",207,0)
 ..S CPT=$P(NOD1,U),M=0,MOD=""
"RTN","ECXSCX1",208,0)
 ..F I=1:1:5 S M=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M)) Q:'M  D
"RTN","ECXSCX1",209,0)
 ...S MOD=MOD_$S(MOD'="":";",1:"")
"RTN","ECXSCX1",210,0)
 ...S MOD=MOD_$P(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M,0),U)
"RTN","ECXSCX1",211,0)
 ..S ECXVIST("CPT"_CNT)=$$CPT^ECXUTL3(CPT,MOD,Q),CNT=CNT+1
"RTN","ECXSCX1",212,0)
 ..K ^TMP("PXKENC",$J,VISIT,"CPT",REC)
"RTN","ECXSCX1",213,0)
 ..Q:CNT>8
"RTN","ECXSCX1",214,0)
 S:ECXVIST("CPT1")="" ECXVIST("CPT1")=9919901
"RTN","ECXSCX1",215,0)
 ;ao, ir, mst, pge, hnc, cv, shad
"RTN","ECXSCX1",216,0)
 S (AO,IR,MST,PGE,HNC,CV,SHAD)=""
"RTN","ECXSCX1",217,0)
 I $D(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800)) D
"RTN","ECXSCX1",218,0)
 .S AO=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,2)
"RTN","ECXSCX1",219,0)
 .S IR=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,3),MST=$P(^(800),U,5)
"RTN","ECXSCX1",220,0)
 .S PGE=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,4),HNC=$P(^(800),U,6)
"RTN","ECXSCX1",221,0)
 .S CV=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,7),SHAD=$P(^(800),U,8)
"RTN","ECXSCX1",222,0)
 .S ECXVIST("AO")=$S(AO=0:"N",AO=1:"Y",1:"")
"RTN","ECXSCX1",223,0)
 .S ECXVIST("IR")=$S(IR=0:"N",IR=1:"Y",1:"")
"RTN","ECXSCX1",224,0)
 .S ECXVIST("MST")=$S(MST=0:"N",MST=1:"Y",1:"")
"RTN","ECXSCX1",225,0)
 .S ECXVIST("PGE")=$S(PGE=0:"N",PGE=1:"Y",1:"")
"RTN","ECXSCX1",226,0)
 .S ECXVIST("HNC")=$S(HNC=0:"N",HNC=1:"Y",1:"")
"RTN","ECXSCX1",227,0)
 .S ECXVIST("CV")=$S(CV=0:"N",CV=1:"Y",1:"")
"RTN","ECXSCX1",228,0)
 .S ECXVIST("SHAD")=$S(SHAD=0:"N",SHAD=1:"Y",1:"")
"RTN","ECXSCX1",229,0)
 Q
"RTN","ECXSCXN")
0^2^B65800632^B60394645
"RTN","ECXSCXN",1,0)
ECXSCXN ;ALB/JAP  Clinic Extract ;10/14/10  18:07
"RTN","ECXSCXN",2,0)
 ;;3.0;DSS EXTRACTS;**24,27,29,30,31,32,33,39,46,49,52,71,84,92,107,105,120,124,127,132**;Dec 22, 1997;Build 18
"RTN","ECXSCXN",3,0)
 ;
"RTN","ECXSCXN",4,0)
BEG ;entry point from option
"RTN","ECXSCXN",5,0)
 D SETUP Q:ECFILE=""  D ^ECXTRAC,^ECXKILL
"RTN","ECXSCXN",6,0)
 Q
"RTN","ECXSCXN",7,0)
 ;
"RTN","ECXSCXN",8,0)
START ;entry point from taskmgr
"RTN","ECXSCXN",9,0)
 N DIC,EXNUM,I,LOCARR,OUT,P1,P2,P3,PROCESS,SOURCE,STOP,STAT,TOSEND
"RTN","ECXSCXN",10,0)
 N TIU,X,Y,ECXNPRFI
"RTN","ECXSCXN",11,0)
 F I=1:1:8 S @("ECXCPT"_I)=""
"RTN","ECXSCXN",12,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXSCXN",13,0)
 S (OUT,QFLG,ECRN)=0,(ECXICD9P,ECXOBI)=""
"RTN","ECXSCXN",14,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSCXN",15,0)
 ;get ien for tiu in file #839.7
"RTN","ECXSCXN",16,0)
 S DIC="^PX(839.7,",DIC(0)="X",X="TEXT INTEGRATION UTILITIES"
"RTN","ECXSCXN",17,0)
 D ^DIC S TIU=+Y,ECED=ECED+.3,ECXCLIN=0 K DIC,Y
"RTN","ECXSCXN",18,0)
 ;get clinic default appt length, type, division
"RTN","ECXSCXN",19,0)
 F  S ECXCLIN=$O(^SC(ECXCLIN)) Q:'ECXCLIN  D
"RTN","ECXSCXN",20,0)
 .K LOCARR S DIC=44,DA=ECXCLIN,DR="2;3.5;1912",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",21,0)
 .D EN^DIQ1
"RTN","ECXSCXN",22,0)
 .Q:$G(LOCARR(44,ECXCLIN,2,"I"))'="C"
"RTN","ECXSCXN",23,0)
 .S ALEN=+$G(LOCARR(44,ECXCLIN,1912,"I"))
"RTN","ECXSCXN",24,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=ALEN,ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",25,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=^TMP($J,"ECXCL",ECXCLIN)_"^"_ALEN_"^"_$G(LOCARR(44,ECXCLIN,2,"I"))_"^"_+$G(LOCARR(44,ECXCLIN,3.5,"I"))
"RTN","ECXSCXN",26,0)
 .D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",27,0)
 .K P1,P2,P3,TOSEND,ECXDIV
"RTN","ECXSCXN",28,0)
 ;get from file #44 any no-shows & get encounters from #409.68
"RTN","ECXSCXN",29,0)
 D NOSHOW^ECXSCXN1(ECSD1,ECED),ENCNTR(ECSD1,ECED)
"RTN","ECXSCXN",30,0)
 ;send missing clinic msg
"RTN","ECXSCXN",31,0)
 D:$D(^TMP($J,"ECXS")) EN^ECXSCX1
"RTN","ECXSCXN",32,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSCXN",33,0)
 Q
"RTN","ECXSCXN",34,0)
 ;
"RTN","ECXSCXN",35,0)
ENCNTR(ECSD1,ECED) ;search file #409.68 for encounter data
"RTN","ECXSCXN",36,0)
 N CHKOUT,ECD,JJ,K,OUT,PNODE,PP,STAT,STOP,MDIV
"RTN","ECXSCXN",37,0)
 S ECD=ECSD1
"RTN","ECXSCXN",38,0)
 F  S ECD=$O(^SCE("B",ECD)) Q:('ECD!(ECD>ECED))!(QFLG)  S ECXIEN=0 D
"RTN","ECXSCXN",39,0)
 .F  S ECXIEN=$O(^SCE("B",ECD,ECXIEN)) Q:'ECXIEN  D  Q:QFLG
"RTN","ECXSCXN",40,0)
 ..Q:'$D(^SCE(ECXIEN,0))
"RTN","ECXSCXN",41,0)
 ..D INTPAT^ECXSCX2 K LOCARR S DIC=409.68,DA=ECXIEN
"RTN","ECXSCXN",42,0)
 ..S DR=".01;.02;.03;.04;.05;.06;.07;.08;.11;.12;.13",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",43,0)
 ..D EN^DIQ1
"RTN","ECXSCXN",44,0)
 ..S ECXTI=$P($$FMTE^XLFDT(+$G(LOCARR(409.68,ECXIEN,.01,"I")),1),"@",2)
"RTN","ECXSCXN",45,0)
 ..S ECXTI=$E(($TR(ECXTI,":","")_"000000"),1,6)
"RTN","ECXSCXN",46,0)
 ..S:ECXTI="000000" ECXTI="000300" S MDIV=+$G(LOCARR(409.68,ECXIEN,.11,"I"))
"RTN","ECXSCXN",47,0)
 ..S STOP=+$G(LOCARR(409.68,ECXIEN,.03,"I"))
"RTN","ECXSCXN",48,0)
 ..S CHKOUT=+$G(LOCARR(409.68,ECXIEN,.07,"I"))
"RTN","ECXSCXN",49,0)
 ..S PROCESS=+$G(LOCARR(409.68,ECXIEN,.08,"I"))
"RTN","ECXSCXN",50,0)
 ..S STAT=$G(LOCARR(409.68,ECXIEN,.12,"I"))
"RTN","ECXSCXN",51,0)
 ..S ECXDFN=+$G(LOCARR(409.68,ECXIEN,.02,"I"))
"RTN","ECXSCXN",52,0)
 ..Q:(ECXDFN=0)!('CHKOUT)
"RTN","ECXSCXN",53,0)
 ..S:STAT="" STAT="ZZ" S STAT=";"_STAT_";"
"RTN","ECXSCXN",54,0)
 ..Q:";3;4;5;6;7;9;10;13;"[STAT
"RTN","ECXSCXN",55,0)
 ..Q:('STOP)!(PROCESS=4)!(+$G(LOCARR(409.68,ECXIEN,.06,"I")))
"RTN","ECXSCXN",56,0)
 ..S ECXDATE=+$G(LOCARR(409.68,ECXIEN,.01,"I"))
"RTN","ECXSCXN",57,0)
 ..S ECXCLIN=+$G(LOCARR(409.68,ECXIEN,.04,"I"))
"RTN","ECXSCXN",58,0)
 ..Q:$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,3)'="C"
"RTN","ECXSCXN",59,0)
 ..S ECXVISIT=+$G(LOCARR(409.68,ECXIEN,.05,"I"))
"RTN","ECXSCXN",60,0)
 ..S ECXENEL=+$G(LOCARR(409.68,ECXIEN,.13,"I"))
"RTN","ECXSCXN",61,0)
 ..Q:'ECXVISIT
"RTN","ECXSCXN",62,0)
 ..S ECXERR=0
"RTN","ECXSCXN",63,0)
 ..D PAT1^ECXSCX2(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",64,0)
 ..D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",65,0)
 ..Q:TOSEND=6
"RTN","ECXSCXN",66,0)
 ..K LOCARR S DIC=40.7,DA=STOP,DR="1",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",67,0)
 ..S ECXSTOP=$$RJ^XLFSTR($G(LOCARR(40.7,STOP,1,"I")),3,0)
"RTN","ECXSCXN",68,0)
 ..; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXSCXN",69,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXSCXN",70,0)
 ..;get date specific patient data
"RTN","ECXSCXN",71,0)
 ..D PAT2^ECXSCX2(ECXDFN,ECXDATE)
"RTN","ECXSCXN",72,0)
 ..;get national patient record flag if exist
"RTN","ECXSCXN",73,0)
 ..D NPRF^ECXUTL5
"RTN","ECXSCXN",74,0)
 ..;get visit specific data
"RTN","ECXSCXN",75,0)
 ..S ECXERR=0 D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",76,0)
 ..F I=1:1:8 S @("ECXCPT"_I)=$G(ECXVIST("CPT"_I))
"RTN","ECXSCXN",77,0)
 ..S ECXICD9P=$G(ECXVIST("ICD9P"))
"RTN","ECXSCXN",78,0)
 ..F I=1:1:4 S @("ECXICD9"_I)=$G(ECXVIST("ICD9"_I))
"RTN","ECXSCXN",79,0)
 ..S SOURCE=ECXVIST("SOURCE"),ECXAO=ECXVIST("AO"),ECXIR=ECXVIST("IR")
"RTN","ECXSCXN",80,0)
 ..S ECXMIL=ECXVIST("MST"),ECXPROV=ECXVIST("PROV"),ECXSHAD=ECXVIST("SHAD")
"RTN","ECXSCXN",81,0)
 ..S ECPRNPI=$$NPI^XUSNPI("Individual_ID",ECXPROV,ECXDATE)
"RTN","ECXSCXN",82,0)
 ..S:+ECPRNPI'>0 ECPRNPI="" S ECPRNPI=$P(ECPRNPI,U)
"RTN","ECXSCXN",83,0)
 ..S ECXPROVP=ECXVIST("PROV CLASS"),ECXPROVN=ECXVIST("PROV NPI")
"RTN","ECXSCXN",84,0)
 ..F I=1:1:5 S @("ECSP"_I)=$P($G(ECXVIST("PROVS"_I)),U)
"RTN","ECXSCXN",85,0)
 ..F I=1:1:5 S @("ECSPPC"_I)=$P($G(ECXVIST("PROVS"_I)),U,2)
"RTN","ECXSCXN",86,0)
 ..F I=1:1:5 S @("ECSPNPI"_I)=$P($G(ECXVIST("PROVS"_I)),U,3)
"RTN","ECXSCXN",87,0)
 ..S ECXECE=ECXVIST("PGE"),ECXHNC=ECXVIST("HNC")
"RTN","ECXSCXN",88,0)
 ..K LOCARR S DIC=8,DA=ECXENEL,DR="8",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",89,0)
 ..S ECXENEL=+$G(LOCARR(8,ECXENEL,8,"I"))
"RTN","ECXSCXN",90,0)
 ..S:ECXENEL ECXENEL=$$ELIG^ECXUTL3(ECXENEL,ECXSVC)
"RTN","ECXSCXN",91,0)
 ..S ECXCBOC=$S(MDIV'="":$$CBOC^ECXSCX2(.MDIV),1:"")  ;is cboc facility?
"RTN","ECXSCXN",92,0)
 ..;setup feeder key and file in extract records
"RTN","ECXSCXN",93,0)
 ..S (ECXKEY,ECXDSSD)=""
"RTN","ECXSCXN",94,0)
 ..;xray (105) or lab (108)
"RTN","ECXSCXN",95,0)
 ..I (ECXSTOP=105)!(ECXSTOP=108) D  Q
"RTN","ECXSCXN",96,0)
 ...S ECXKEY=ECXSTOP_"00003000000",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",97,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE       ;- Don't file rec if no encounter num
"RTN","ECXSCXN",98,0)
 ..;appointments
"RTN","ECXSCXN",99,0)
 ..I PROCESS=1 D  Q     ;get appt length
"RTN","ECXSCXN",100,0)
 ...S (ALEN,JJ,OUT)=0
"RTN","ECXSCXN",101,0)
 ...F  S JJ=$O(^SC(ECXCLIN,"S",ECXDATE,JJ)) Q:('JJ)!(OUT)  S K=0 D
"RTN","ECXSCXN",102,0)
 ....F  S K=$O(^SC(ECXCLIN,"S",ECXDATE,JJ,K)) Q:('K)!(OUT)  D
"RTN","ECXSCXN",103,0)
 .....S ECXOBI=$G(^SC(ECXCLIN,"S",ECXDATE,JJ,K,"OB")),PP=$P($G(^SC(ECXCLIN,"S",ECXDATE,JJ,K,0)),U)
"RTN","ECXSCXN",104,0)
 .....S:PP=ECXDFN OUT=1,ALEN=$P(^(0),U,2),ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",105,0)
 .....S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",106,0)
 ....S ECXSTOP=P1
"RTN","ECXSCXN",107,0)
 ....S PNODE=$G(^DPT(ECXDFN,"S",ECXDATE,0)),ECXPVST=$P(PNODE,U,7),ECXATYP=$P(PNODE,U,16)  ;Get purpose of visit & appt type
"RTN","ECXSCXN",108,0)
 ....I TOSEND'=3 D
"RTN","ECXSCXN",109,0)
 .....S ECXKEY=P1_P2_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",110,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",111,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN",112,0)
 .....S ECXKEY=P1_"000"_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",113,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",114,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN",115,0)
 .....S ECXKEY=P2_"000"_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",116,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",117,0)
 ..I PROCESS=2 D  Q
"RTN","ECXSCXN",118,0)
 ...S ALEN=0
"RTN","ECXSCXN",119,0)
 ...I SOURCE=TIU S ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",120,0)
 ...S:+ALEN=0 ALEN="030" S ECXKEY=P1_P2_ALEN_P3_"0",ECXSTOP=P1
"RTN","ECXSCXN",121,0)
 ...S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",122,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",123,0)
 ..;dispositions
"RTN","ECXSCXN",124,0)
 ..I PROCESS=3 D  Q
"RTN","ECXSCXN",125,0)
 ...S ECXKEY=ECXSTOP_"47906000000",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",126,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",127,0)
 Q
"RTN","ECXSCXN",128,0)
 ;
"RTN","ECXSCXN",129,0)
FILE ;record setup for file #727.827
"RTN","ECXSCXN",130,0)
 N STR
"RTN","ECXSCXN",131,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get production division
"RTN","ECXSCXN",132,0)
 S EC7=$O(^ECX(727.827,999999999),-1),EC7=EC7+1
"RTN","ECXSCXN",133,0)
 S STR(0)=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSCXN",134,0)
 S STR(0)=STR(0)_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXKEY_U_ECXOBI_U
"RTN","ECXSCXN",135,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXSCXN",136,0)
 N ECXDATA,ECXTSC
"RTN","ECXSCXN",137,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXSCXN",138,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXSCXN",139,0)
 ;done
"RTN","ECXSCXN",140,0)
 S STR(0)=STR(0)_ECXCLIN_U_ECXTSC_U_ECXTI_U_ECPTTM_U_ECPTPR_U_ECCLAS_U
"RTN","ECXSCXN",141,0)
 S STR(0)=STR(0)_ECXPROV_U_ECXPROVP_U_ECXCPT1_U_ECXCPT2_U_ECXCPT3_U
"RTN","ECXSCXN",142,0)
 S STR(0)=STR(0)_ECXCPT4_U_ECXCPT5_U
"RTN","ECXSCXN",143,0)
 S STR(1)=ECXCPT6_U_ECXCPT7_U_ECXCPT8_U_ECXICD9P_U_ECXICD91_U_ECXICD92_U
"RTN","ECXSCXN",144,0)
 S STR(1)=STR(1)_ECXICD93_U_ECXICD94_U_ECXDOB_U_ECXELIG_U_ECXVET_U
"RTN","ECXSCXN",145,0)
 S STR(1)=STR(1)_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXIR_U_ECXAST_U
"RTN","ECXSCXN",146,0)
 S STR(1)=STR(1)_ECXAO_U_ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U
"RTN","ECXSCXN",147,0)
 S STR(1)=STR(1)_$G(ECXPCPNP)_U_U_ECXENEL_U_ECXMST_U
"RTN","ECXSCXN",148,0)
 S STR(1)=STR(1)_ECXMIL_U_U_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXSCXN",149,0)
 S STR(1)=STR(1)_ECXCNTY_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXCAT_U
"RTN","ECXSCXN",150,0)
 S STR(2)=ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_ECXPHI_U_ECXPOS_U_ECXOBS_U_ECXENC_U
"RTN","ECXSCXN",151,0)
 S STR(2)=STR(2)_ECXAOL_U_ECXPDIV_U_ECXATYP_U_ECXPVST_U_ECXMTST_U
"RTN","ECXSCXN",152,0)
 S STR(2)=STR(2)_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXSCXN",153,0)
 I ECXLOGIC>2003 S STR(2)=STR(2)_U_ECXCBOC
"RTN","ECXSCXN",154,0)
 I ECXLOGIC>2004 S STR(2)=STR(2)_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXSCXN",155,0)
 I ECXLOGIC>2005 S STR(2)=STR(2)_U_ECXEST_U_ECXECE
"RTN","ECXSCXN",156,0)
 I ECXLOGIC>2006 S STR(2)=STR(2)_U_ECXERI_U_ECXHNC
"RTN","ECXSCXN",157,0)
 I ECXLOGIC>2007 S STR(2)=STR(2)_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_$G(ECPRNPI)_U
"RTN","ECXSCXN",158,0)
 I ECXLOGIC>2009 S STR(3)=ECXCNTRY
"RTN","ECXSCXN",159,0)
 ;added patcat status, N3 P3
"RTN","ECXSCXN",160,0)
 I ECXLOGIC>2010 S STR(3)=STR(3)_U_ECXSHAD_U_ECXPATCAT
"RTN","ECXSCXN",161,0)
 I ECXLOGIC>2011 S STR(3)=STR(3)_U_ECSP1_U_ECSPPC1_U_ECSPNPI1_U_ECSP2_U_ECSPPC2_U_ECSPNPI2_U_ECSP3_U_ECSPPC3_U_ECSPNPI3_U_ECSP4_U_ECSPPC4_U_ECSPNPI4_U_ECSP5_U_ECSPPC5_U_ECSPNPI5
"RTN","ECXSCXN",162,0)
 D FILE2^ECXSCX2(727.827,EC7,.STR)
"RTN","ECXSCXN",163,0)
 S ECRN=ECRN+1,$P(^ECX(727.827,0),U,3)=EC7
"RTN","ECXSCXN",164,0)
 Q
"RTN","ECXSCXN",165,0)
 ;
"RTN","ECXSCXN",166,0)
SETUP ;set required input for ECXTRAC
"RTN","ECXSCXN",167,0)
 S ECHEAD="CLI"
"RTN","ECXSCXN",168,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSCXN",169,0)
 Q
"RTN","ECXSCXN1")
0^3^B12284717^B11953560
"RTN","ECXSCXN1",1,0)
ECXSCXN1 ;ALB/JAP  Clinic Extract No Shows; 8/28/02 1:11pm ;9/10/10  10:13
"RTN","ECXSCXN1",2,0)
 ;;3.0;DSS EXTRACTS;**71,105,127,132**;Dec 22, 1997;Build 18
"RTN","ECXSCXN1",3,0)
NOSHOW(ECXSD,ECXED) ;get noshows from file #44
"RTN","ECXSCXN1",4,0)
 ;      ECXSD  = start date, ECXED  = end date
"RTN","ECXSCXN1",5,0)
 N ALEN,CLIN,JDATE,JJ,NODE,NOSHOW,PP,STAT,MDIV
"RTN","ECXSCXN1",6,0)
 S CLIN=0
"RTN","ECXSCXN1",7,0)
 F  S CLIN=$O(^TMP($J,"ECXCL",CLIN)) Q:'CLIN  D
"RTN","ECXSCXN1",8,0)
 .Q:$P($G(^TMP($J,"ECXCL",CLIN)),U,3)'="C"
"RTN","ECXSCXN1",9,0)
 .S (P1,P2,P3)=""
"RTN","ECXSCXN1",10,0)
 .D FEEDER^ECXSCX1(CLIN,ECXSD,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN1",11,0)
 .Q:TOSEND=6
"RTN","ECXSCXN1",12,0)
 .;find appts in date range
"RTN","ECXSCXN1",13,0)
 .S JDATE=ECXSD,(ALEN,NOSHOW)=""
"RTN","ECXSCXN1",14,0)
 .F  S JDATE=$O(^SC(CLIN,"S",JDATE)) Q:'JDATE  Q:JDATE>ECXED  D
"RTN","ECXSCXN1",15,0)
 ..S ECXDATE=JDATE,JJ=0,ECXTI=$P($$FMTE^XLFDT(JDATE,1),"@",2)
"RTN","ECXSCXN1",16,0)
 ..S ECXTI=$E(($TR(ECXTI,":","")_"000000"),1,6)
"RTN","ECXSCXN1",17,0)
 ..S:ECXTI="000000" ECXTI="000300"
"RTN","ECXSCXN1",18,0)
 ..;get noshows only - no data in check-in/check-out node
"RTN","ECXSCXN1",19,0)
 ..F  S JJ=$O(^SC(CLIN,"S",JDATE,JJ)) Q:'JJ  D
"RTN","ECXSCXN1",20,0)
 ...S K=0
"RTN","ECXSCXN1",21,0)
 ...F  S K=$O(^SC(CLIN,"S",JDATE,JJ,K)) Q:'K  D
"RTN","ECXSCXN1",22,0)
 ....S PP=$G(^SC(CLIN,"S",JDATE,JJ,K,0)),ECXDFN=$P(PP,U) Q:ECXDFN=""
"RTN","ECXSCXN1",23,0)
 ....S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN) ;added in patch 127
"RTN","ECXSCXN1",24,0)
 ....S NODE=$G(^DPT(ECXDFN,"S",JDATE,0)),MDIV=$P($G(^SC(CLIN,0)),U,15)
"RTN","ECXSCXN1",25,0)
 ....Q:(NODE="")!($P(NODE,U)'=CLIN)
"RTN","ECXSCXN1",26,0)
 ....S ECXSHAD=$$GETSHAD ;added in patch 127, finds shad status for appt
"RTN","ECXSCXN1",27,0)
 ....S ECXOBI=$G(^SC(CLIN,"S",JDATE,JJ,K,"OB")),STAT=$P(NODE,U,2)
"RTN","ECXSCXN1",28,0)
 ....S NOSHOW=$S(STAT="N":"N",STAT="NA":"N",1:"")
"RTN","ECXSCXN1",29,0)
 ....Q:NOSHOW=""  D INTPAT^ECXSCX2 S ECXERR=0
"RTN","ECXSCXN1",30,0)
 ....D PAT1^ECXSCX2(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN1",31,0)
 ....S ALEN=$P(PP,U,2),ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN1",32,0)
 ....D PAT2^ECXSCX2(ECXDFN,ECXDATE)
"RTN","ECXSCXN1",33,0)
 ....S ECXPVST=$P(NODE,U,7),ECXATYP=$P(NODE,U,16)  ;Get POV & appt type
"RTN","ECXSCXN1",34,0)
 ....S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",CLIN)),U,2)
"RTN","ECXSCXN1",35,0)
 ....S ECXCLIN=CLIN,ECXSTOP=P1
"RTN","ECXSCXN1",36,0)
 ....S:ECXCPT1="" ECXCPT1="9919901"
"RTN","ECXSCXN1",37,0)
 ....S ECXCBOC=$S(MDIV'="":$$CBOC^ECXSCX2(.MDIV),1:"")
"RTN","ECXSCXN1",38,0)
 ....S (ECXDSSD,ECXENEL,ECXIR,ECXAO,ECXMIL,ECXPROV,ECXPROVP,ECXPROVN)=""
"RTN","ECXSCXN1",39,0)
 ....F I=1:1:5 S (@("ECSP"_I),@("ECSPPC"_I),@("ECSPNPI"_I))=""
"RTN","ECXSCXN1",40,0)
 ....I TOSEND'=3 D
"RTN","ECXSCXN1",41,0)
 .....S ECXKEY=P1_P2_ALEN_P3_NOSHOW,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN1",42,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE^ECXSCXN
"RTN","ECXSCXN1",43,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN1",44,0)
 .....S ECXKEY=P1_"000"_ALEN_P3_NOSHOW,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN1",45,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE^ECXSCXN
"RTN","ECXSCXN1",46,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN1",47,0)
 .....S ECXKEY=P2_"000"_ALEN_P3_NOSHOW,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN1",48,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE^ECXSCXN
"RTN","ECXSCXN1",49,0)
 ....;create a record for noshow appended ekg. The code was removed for CTX-0604-70970 CLI Extract Problem EXPANDED to NoShows
"RTN","ECXSCXN1",50,0)
 Q
"RTN","ECXSCXN1",51,0)
 ;GETSHAD section added with patch 127
"RTN","ECXSCXN1",52,0)
GETSHAD() ;Function returns shad value
"RTN","ECXSCXN1",53,0)
 N DIC,LOCARR,DA,DR,SHAD,ECXERR,ECXVIST
"RTN","ECXSCXN1",54,0)
 S SHAD=""
"RTN","ECXSCXN1",55,0)
 I '+$P($G(NODE),U,20) Q SHAD  ;Quit if no visit pointer
"RTN","ECXSCXN1",56,0)
 S DIC=409.68,DA=$P(NODE,U,20),DR=.05,DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN1",57,0)
 D EN^DIQ1
"RTN","ECXSCXN1",58,0)
 I $G(LOCARR(409.68,DA,.05,"I")) D
"RTN","ECXSCXN1",59,0)
 .S ECXERR=0
"RTN","ECXSCXN1",60,0)
 .D VISIT^ECXSCX1(ECXDFN,LOCARR(409.68,DA,.05,"I"),.ECXVIST,.ECXERR)
"RTN","ECXSCXN1",61,0)
 .I 'ECXERR S SHAD=ECXVIST("SHAD")
"RTN","ECXSCXN1",62,0)
 Q SHAD
"RTN","ECXSURG")
0^23^B72092726^B71637747
"RTN","ECXSURG",1,0)
ECXSURG ;ALB/JA,BIR/DMA,PTD-Surgery Extract for DSS ;7/21/11  14:37
"RTN","ECXSURG",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,25,24,33,39,41,42,46,50,71,84,92,99,105,112,128,127,132**;Dec 22, 1997;Build 18
"RTN","ECXSURG",3,0)
BEG ;entry point from option
"RTN","ECXSURG",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXSURG",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXSURG",6,0)
 Q
"RTN","ECXSURG",7,0)
 ;
"RTN","ECXSURG",8,0)
START ;
"RTN","ECXSURG",9,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSURG",10,0)
 S QFLG=0,ECED=ECED+.3,ECD=ECSD1
"RTN","ECXSURG",11,0)
 F  S ECD=$O(^SRF("AC",ECD)),ECD0=0 Q:('ECD)!(ECD>ECED)!(QFLG)  D
"RTN","ECXSURG",12,0)
 .F  S ECD0=$O(^SRF("AC",ECD,ECD0)) Q:'ECD0  D
"RTN","ECXSURG",13,0)
 ..I $D(^SRF(ECD0,0)) S EC=^SRF(ECD0,0),ECXDFN=+$P(EC,U),ECXVISIT=$P(EC,U,15) D STUFF Q:QFLG
"RTN","ECXSURG",14,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSURG",15,0)
 Q
"RTN","ECXSURG",16,0)
 ;
"RTN","ECXSURG",17,0)
STUFF ;gather data
"RTN","ECXSURG",18,0)
 N J,X,Y,PP,DATA1,DATA2,DATAOP,ARR,ERR,SUB,MOD,ECXNONL,ECXSTOP,TIMEDIF
"RTN","ECXSURG",19,0)
 N ECPRO,ECXORCT,ECXPTHA,ECXNPRFI,ECXPA,ECXPAPC,ECSRPC,ECATPC,ECSAPC
"RTN","ECXSURG",20,0)
 N ECXCRST,ECXSTCD,ECXCLIN,EC1A,EC2A,ECPQ,ECQA,EC1APC,EC2APC,ECPQPC
"RTN","ECXSURG",21,0)
 N ECQAPC,EC1ANPI,EC2ANPI,ECPQNPI,ECQANPI
"RTN","ECXSURG",22,0)
 N ECXORCET,ECXORCST,ECXTPOOR ;ECX*128
"RTN","ECXSURG",23,0)
 S ECXDATE=ECD,ECXERR=0,ECXQ=""
"RTN","ECXSURG",24,0)
 ;retrieve demographic variables
"RTN","ECXSURG",25,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXDATE,"1;2;3;5;")
"RTN","ECXSURG",26,0)
 I ECXADMDT="" S ECXADD=ECXADMDT
"RTN","ECXSURG",27,0)
 I ECXADMDT'="" S ECXADD=$$ECXDATE^ECXUTL(ECXADMDT,ECXYM)
"RTN","ECXSURG",28,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;5",.ECXPAT)
"RTN","ECXSURG",29,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXSURG",30,0)
 ;OEF/OIF DATA
"RTN","ECXSURG",31,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXSURG",32,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXSURG",33,0)
 S EC0=^SRF(ECD0,0)
"RTN","ECXSURG",34,0)
 S DATA1=$S($D(^SRF(ECD0,.1)):^(.1),1:"")
"RTN","ECXSURG",35,0)
 S DATA2=$S($D(^SRF(ECD0,.2)):^(.2),1:"")
"RTN","ECXSURG",36,0)
 S DATAOP=$S($D(^SRO(136,ECD0,0)):^(0),1:"")
"RTN","ECXSURG",37,0)
 S ECNO=$G(^SRF(ECD0,"NON"))
"RTN","ECXSURG",38,0)
 ; if VISIT data exist get encounter data
"RTN","ECXSURG",39,0)
 ; ECX*112
"RTN","ECXSURG",40,0)
 S ECXVST=$P(^SRF(ECD0,0),U,15) D:ECXVST'=""
"RTN","ECXSURG",41,0)
 . Q:'$D(^AUPNVSIT(ECXVST,800))
"RTN","ECXSURG",42,0)
 . S ECENSC=$P(^AUPNVSIT(ECXVST,800),U,1)
"RTN","ECXSURG",43,0)
 . S ECENSC=$S(ECENSC=0:"N",ECENSC=1:"Y",1:"")
"RTN","ECXSURG",44,0)
 ;get data
"RTN","ECXSURG",45,0)
 S ECSR=$P(DATA1,U,4),(ECATNPI,ECSANPI,ECSRNPI)="",ECAT=$P(DATA1,U,13)
"RTN","ECXSURG",46,0)
 S ECSRNPI=$$NPI^XUSNPI("Individual_ID",ECSR,ECXDATE)
"RTN","ECXSURG",47,0)
 S:+ECSRNPI'>0 ECSRNPI="" S ECSRNPI=$P(ECSRNPI,U)
"RTN","ECXSURG",48,0)
 ;-Time patient in OR room (Nurse Time)
"RTN","ECXSURG",49,0)
 S ECXTM=$$ECXTIME^ECXUTL($P(DATA2,U,10))
"RTN","ECXSURG",50,0)
 S ECXDIV=$S($D(^SRF(ECD0,8)):^(8),1:ECINST)
"RTN","ECXSURG",51,0)
 N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV)  ;Production Division
"RTN","ECXSURG",52,0)
 S ECSA=$P($G(^SRF(ECD0,.3)),U,4),ECO=$P(EC0,U,2)
"RTN","ECXSURG",53,0)
 S ECSANPI=$$NPI^XUSNPI("Individual_ID",ECSA,ECXDATE)
"RTN","ECXSURG",54,0)
 S:+ECSANPI'>0 ECSANPI="" S ECSANPI=$P(ECSANPI,U)
"RTN","ECXSURG",55,0)
 ;get principle anesthetist and person class DBIA #103
"RTN","ECXSURG",56,0)
 S ECXPA=$P($G(^SRF(ECD0,.3)),U,1)
"RTN","ECXSURG",57,0)
 S ECPANPI=$$NPI^XUSNPI("Individual_ID",ECXPA,ECXDATE)
"RTN","ECXSURG",58,0)
 S:+ECPANPI'>0 ECPANPI="" S ECPANPI=$P(ECPANPI,U)
"RTN","ECXSURG",59,0)
 S ECXPAPC=$$PRVCLASS^ECXUTL(ECXPA,ECXDATE)
"RTN","ECXSURG",60,0)
 ;get first asst, 2nd asst, perfusionist, and asst perfusionist
"RTN","ECXSURG",61,0)
 S EC1A=$P(DATA1,U,5),EC2A=$P(DATA1,U,6),ECPQ=$P(DATA1,U,19),ECQA=$P(DATA1,U,20)
"RTN","ECXSURG",62,0)
 S EC1ANPI=$$NPI^XUSNPI("Individual_ID",EC1A,ECXDATE)
"RTN","ECXSURG",63,0)
 S:+EC1ANPI'>0 EC1ANPI="" S EC1ANPI=$P(EC1ANPI,U)
"RTN","ECXSURG",64,0)
 S EC2ANPI=$$NPI^XUSNPI("Individual_ID",EC2A,ECXDATE)
"RTN","ECXSURG",65,0)
 S:+EC2ANPI'>0 EC2ANPI="" S EC2ANPI=$P(EC2ANPI,U)
"RTN","ECXSURG",66,0)
 S ECPQNPI=$$NPI^XUSNPI("Individual_ID",ECPQ,ECXDATE)
"RTN","ECXSURG",67,0)
 S:+ECPQNPI'>0 ECPQNPI="" S ECPQNPI=$P(ECPQNPI,U)
"RTN","ECXSURG",68,0)
 S ECQANPI=$$NPI^XUSNPI("Individual_ID",ECQA,ECXDATE)
"RTN","ECXSURG",69,0)
 S:+ECQANPI'>0 ECQANPI="" S ECQANPI=$P(ECQANPI,U)
"RTN","ECXSURG",70,0)
 S ECORTY=$P($G(^SRS(+ECO,2)),U),ECO=$P($G(^SRS(+ECO,0)),U)
"RTN","ECXSURG",71,0)
 S ECSS=$P($G(^SRO(137.45,+$P(EC0,U,4),0)),U,2)
"RTN","ECXSURG",72,0)
 S ECSS=$$RJ^XLFSTR($P($G(^DIC(45.3,+ECSS,0)),U),3,0)
"RTN","ECXSURG",73,0)
 S:ECSS="000" ECSS="999"
"RTN","ECXSURG",74,0)
 ;get classification information
"RTN","ECXSURG",75,0)
 S (ECXAO,ECXHNC,ECXSHAD,ECXSHADI)="" I ECXVISIT'="" D
"RTN","ECXSURG",76,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR
"RTN","ECXSURG",77,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXSURG",78,0)
 .S ECENRI=$G(ECXVIST("IR")),ECENMST=$G(ECXVIST("MST"))
"RTN","ECXSURG",79,0)
 .S ECENEC=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXSURG",80,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXSURG",81,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXSURG",82,0)
 ; - Shad Encounter Field
"RTN","ECXSURG",83,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXSURG",84,0)
 ;look for non-OR
"RTN","ECXSURG",85,0)
 S (ECNT,ECNL,ECXDSSD,ECXNONL,ECXSTOP)=""
"RTN","ECXSURG",86,0)
 I $P(ECNO,U)="Y" D
"RTN","ECXSURG",87,0)
 .S ECSR=$P(ECNO,U,6),ECAT=$P(ECNO,U,7)
"RTN","ECXSURG",88,0)
 .S ECSRNPI=$$NPI^XUSNPI("Individual_ID",ECSR,ECXDATE)
"RTN","ECXSURG",89,0)
 .S:+ECSRNPI'>0 ECSRNPI="" S ECSRNPI=$P(ECSRNPI,U)
"RTN","ECXSURG",90,0)
 .S ECATNPI=$$NPI^XUSNPI("Individual_ID",ECAT,ECXDATE)
"RTN","ECXSURG",91,0)
 .S:+ECATNPI'>0 ECATNPI="" S ECATNPI=$P(ECATNPI,U)
"RTN","ECXSURG",92,0)
 .S ECXTM=$$ECXTIME^ECXUTL($P(ECNO,U,4))
"RTN","ECXSURG",93,0)
 .S A1=$P(ECNO,U,5),A2=$P(ECNO,U,4),TIME="##" D:(A1&A2) TIME S ECNT=TIME
"RTN","ECXSURG",94,0)
 .S (ECXNONL,ECNL)=+$P(ECNO,U,2),ECNL=$P($G(^ECX(728.44,ECNL,0)),U,9)
"RTN","ECXSURG",95,0)
 .S:ECNL="" ECNL="UNKNOWN"
"RTN","ECXSURG",96,0)
 .;
"RTN","ECXSURG",97,0)
 .;- Get Primary or DSS Stop Code to use in encounter number
"RTN","ECXSURG",98,0)
 .N P1 ;primary stop
"RTN","ECXSURG",99,0)
 .D FEEDER^ECXSCX1(+$P(EC0,U,21),ECXDATE,.P1,,,,) S ECXSTOP=$E(P1,1,3)
"RTN","ECXSURG",100,0)
 .S ECXSTOP=$S(ECXSTOP:ECXSTOP,1:$P($G(^ECX(728.44,ECXNONL,0)),U,4))
"RTN","ECXSURG",101,0)
 ;
"RTN","ECXSURG",102,0)
 ;- Get credit stop, stop code and clinic
"RTN","ECXSURG",103,0)
 I $$SUR^ECXUTL6(.ECXCRST,.ECXSTCD,.ECXCLIN)
"RTN","ECXSURG",104,0)
 ;
"RTN","ECXSURG",105,0)
 ;- If surgery cancelled/aborted quit and go to next record
"RTN","ECXSURG",106,0)
 S ECCAN=$P($G(^SRF(ECD0,30)),U)
"RTN","ECXSURG",107,0)
 I +ECCAN S ECCAN=$$CANC^ECXUTL4(ECNL,$P(DATA2,U,10))
"RTN","ECXSURG",108,0)
 ;on hold for ECXDSSD and ECXDSSP I $P($G(^SRF(ECD0,30)),U) Q
"RTN","ECXSURG",109,0)
 ;get service of attending surgeon
"RTN","ECXSURG",110,0)
 S ECATSV=$P($G(^DIC(49,+$G(^VA(200,+ECAT,5)),730)),U)
"RTN","ECXSURG",111,0)
 ;
"RTN","ECXSURG",112,0)
 ;get surgeon, attending and anesthesia super person classes
"RTN","ECXSURG",113,0)
 ;get 1st asst, 2nd asst, perfusionist, and asst perfusionst person class
"RTN","ECXSURG",114,0)
 S ECSRPC=$$PRVCLASS^ECXUTL(ECSR,ECXDATE)
"RTN","ECXSURG",115,0)
 S ECATPC=$$PRVCLASS^ECXUTL(ECAT,ECXDATE)
"RTN","ECXSURG",116,0)
 S ECSAPC=$$PRVCLASS^ECXUTL(ECSA,ECXDATE)
"RTN","ECXSURG",117,0)
 S EC1APC=$$PRVCLASS^ECXUTL(EC1A,ECXDATE)
"RTN","ECXSURG",118,0)
 S EC2APC=$$PRVCLASS^ECXUTL(EC2A,ECXDATE)
"RTN","ECXSURG",119,0)
 S ECPQPC=$$PRVCLASS^ECXUTL(ECPQ,ECXDATE)
"RTN","ECXSURG",120,0)
 S ECQAPC=$$PRVCLASS^ECXUTL(ECQA,ECXDATE)
"RTN","ECXSURG",121,0)
 ;
"RTN","ECXSURG",122,0)
 ;add leading 2s for pointer to 200
"RTN","ECXSURG",123,0)
 S:ECAT ECAT="2"_ECAT S:ECSR ECSR="2"_ECSR S:ECSA ECSA="2"_ECSA
"RTN","ECXSURG",124,0)
 ;add leading 2 to principle anesthetist IEN
"RTN","ECXSURG",125,0)
 S:ECXPA ECXPA="2"_ECXPA
"RTN","ECXSURG",126,0)
 ;add leading 2s for 1st asst, 2nd asst, perfusionist, asst perfusionist
"RTN","ECXSURG",127,0)
 S:EC1A EC1A="2"_EC1A S:EC2A EC2A="2"_EC2A S:ECPQ ECPQ="2"_ECPQ S:ECQA ECQA="2"_ECQA
"RTN","ECXSURG",128,0)
 ;anesthesia technique
"RTN","ECXSURG",129,0)
 S ECANE="",PP=""
"RTN","ECXSURG",130,0)
 I $D(^SRF(ECD0,6,0)) S ECXJ=0 D
"RTN","ECXSURG",131,0)
 .F  S ECXJ=$O(^SRF(ECD0,6,ECXJ)) Q:('ECXJ)!(ECANE]"")  D
"RTN","ECXSURG",132,0)
 ..S PP=$P($G(^(ECXJ,0)),U,3) S:PP="Y" ECANE=$P(^(0),U,1)
"RTN","ECXSURG",133,0)
 .I ECANE="" S ECXJ=$O(^SRF(ECD0,6,0)) I ECXJ S ECANE=$P(^SRF(ECD0,6,ECXJ,0),U,1)
"RTN","ECXSURG",134,0)
 ;get primary procedure
"RTN","ECXSURG",135,0)
 ;ecode0=p^cpt code^^patient time^operation time^anesthesia time
"RTN","ECXSURG",136,0)
 S ECPT=+$P(DATAOP,U,2),ECXCMOD=""
"RTN","ECXSURG",137,0)
 K ARR,ERR D FIELD^DID(130,28,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",138,0)
 .K ARR,ERR D FIELD^DID(130,28,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",139,0)
 .Q:$D(ERR("DIERR"))
"RTN","ECXSURG",140,0)
 .S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",141,0)
 .F  S MOD=$O(^SRF(ECD0,SUB,MOD)) Q:MOD'>0  D
"RTN","ECXSURG",142,0)
 ..S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",143,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",144,0)
 S ECODE0="P"_U_U  ;ECPT_U
"RTN","ECXSURG",145,0)
 F J="10,12","2,3","1,4" D
"RTN","ECXSURG",146,0)
 .N ECNTIME,ECSTIME,ECATIME
"RTN","ECXSURG",147,0)
 .S A2=$P(DATA2,U,$P(J,",")),A1=$P(DATA2,U,$P(J,",",2)),TIME="##"
"RTN","ECXSURG",148,0)
 .I (A1&A2)&(+J=10) D TIME  S ECNTIME=TIME
"RTN","ECXSURG",149,0)
 .I (A1&A2)&(+J=1) D TIME  S ECATIME=TIME
"RTN","ECXSURG",150,0)
 .I (A1&A2)&(+J=2) D
"RTN","ECXSURG",151,0)
 ..;
"RTN","ECXSURG",152,0)
 ..;-Operation Time (Surgeon Time)
"RTN","ECXSURG",153,0)
 ..;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",154,0)
 ..S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",155,0)
 ..S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",156,0)
 ..S TIME=$TR($J(TIMEDIF,4,0)," ")
"RTN","ECXSURG",157,0)
 ..S:TIME<0 TIME="###"
"RTN","ECXSURG",158,0)
 ..S:TIME ECSTIME=TIME
"RTN","ECXSURG",159,0)
 .S ECODE0=ECODE0_U_TIME K TIME
"RTN","ECXSURG",160,0)
 ; -Recovery Room Time
"RTN","ECXSURG",161,0)
 S ECRR=""
"RTN","ECXSURG",162,0)
 I $D(^SRF(ECD0,1.1)) D
"RTN","ECXSURG",163,0)
 .S A1=$P(^(1.1),U,8),A2=$P(^(1.1),U,7),TIME="##" D:(A1&A2) TIME
"RTN","ECXSURG",164,0)
 .S ECRR=TIME K TIME
"RTN","ECXSURG",165,0)
 I ECNL]"" S $P(ECODE0,U,5)=ECNT
"RTN","ECXSURG",166,0)
 ;
"RTN","ECXSURG",167,0)
 ; -OR Clean Time in 15 min increments DBIA #103
"RTN","ECXSURG",168,0)
 ;
"RTN","ECXSURG",169,0)
 ; ECX*3.0*128 - Correct the calculation of OR Clean Time.
"RTN","ECXSURG",170,0)
 S ECXORCT=0
"RTN","ECXSURG",171,0)
 ; Set local variables. ECX*128
"RTN","ECXSURG",172,0)
 S ECXTPOOR=$P($G(DATA2),U,12),ECXORCST=$P($G(DATA2),U,13),ECXORCET=$P($G(DATA2),U,14)
"RTN","ECXSURG",173,0)
 I (ECXORCET'=""),(ECXORCST'="") D
"RTN","ECXSURG",174,0)
 .S ECXORCT=($$FMDIFF^XLFDT(ECXORCET,ECXORCST,2)/60)/15
"RTN","ECXSURG",175,0)
 I 'ECXORCT,(ECXORCET'=""),(ECXTPOOR'="") D
"RTN","ECXSURG",176,0)
 .S ECXORCT=($$FMDIFF^XLFDT(ECXORCET,ECXTPOOR,2)/60)/15
"RTN","ECXSURG",177,0)
 ; Make sure the final OR CLEAN TIME is an integer by rounding
"RTN","ECXSURG",178,0)
 ; up for any decimal value  ECX*3.0*128
"RTN","ECXSURG",179,0)
 I ECXORCT>0 S ECXORCT=$J(ECXORCT+.4999,0,0)
"RTN","ECXSURG",180,0)
 ; -If no OR clean time recorded set it to 2
"RTN","ECXSURG",181,0)
 I ECXORCT'>0 S ECXORCT=2
"RTN","ECXSURG",182,0)
 ;
"RTN","ECXSURG",183,0)
 ; -PT in hold area time in 15 min increments DBIA #103
"RTN","ECXSURG",184,0)
 I $P($G(DATA2),U,10),$P($G(DATA2),U,15) D
"RTN","ECXSURG",185,0)
 .S ECXPTHA=($$FMDIFF^XLFDT($P($G(DATA2),U,10),$P($G(DATA2),U,15),2)/60)/15
"RTN","ECXSURG",186,0)
 .S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",187,0)
 .I CON S ECXPTHA=ECXPTHA/2
"RTN","ECXSURG",188,0)
 .S ECXPTHA=$TR($J(ECXPTHA,3,0)," ")
"RTN","ECXSURG",189,0)
 ; -If hold time is =<0 set it to ""
"RTN","ECXSURG",190,0)
 S:$G(ECXPTHA)'>0 ECXPTHA=""
"RTN","ECXSURG",191,0)
 ;
"RTN","ECXSURG",192,0)
 ;- get ASA CLASS
"RTN","ECXSURG",193,0)
 S ECASA=$$GET1^DIQ(132.8,$$GET1^DIQ(130,ECD0,1.13,"I"),.01)
"RTN","ECXSURG",194,0)
 ;
"RTN","ECXSURG",195,0)
 ;- Observation Patient Indicator (yes/no)
"RTN","ECXSURG",196,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECNL)
"RTN","ECXSURG",197,0)
 ;
"RTN","ECXSURG",198,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXSURG",199,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXSURG",200,0)
 ;- set national patient record flag if exist
"RTN","ECXSURG",201,0)
 D NPRF^ECXUTL5
"RTN","ECXSURG",202,0)
 ;
"RTN","ECXSURG",203,0)
 ;- If no encounter number don't file record
"RTN","ECXSURG",204,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXSTOP,ECSS) Q:ECXENC=""
"RTN","ECXSURG",205,0)
 ;
"RTN","ECXSURG",206,0)
 ;- Get postop diagnosis codes
"RTN","ECXSURG",207,0)
 I $$SURPODX^ECXUTL6(.ECXPODX,.ECXPODX1,.ECXPODX2,.ECXPODX3,.ECXPODX4,.ECXPODX5)
"RTN","ECXSURG",208,0)
 ;
"RTN","ECXSURG",209,0)
 D FILE^ECXSURG1
"RTN","ECXSURG",210,0)
 ;get secondary procedures
"RTN","ECXSURG",211,0)
 ;ecode0=s^cpt code
"RTN","ECXSURG",212,0)
 S ECXJ=0
"RTN","ECXSURG",213,0)
 F  S ECXJ=$O(^SRO(136,ECD0,3,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)),$D(^(0)),$P(^(0),"^")]"" D
"RTN","ECXSURG",214,0)
 .;S ECPT=$P(^SRF(ECD0,13,ECXJ,2),U),ECXCMOD=""
"RTN","ECXSURG",215,0)
 .S ECPT=$P(^SRO(136,ECD0,3,ECXJ,0),U),ECXMOD=""
"RTN","ECXSURG",216,0)
 .S ECPT=$P(^(0),"^"),ECXCMOD=""
"RTN","ECXSURG",217,0)
 .K ARR,ERR
"RTN","ECXSURG",218,0)
 .D FIELD^DID(130.16,4,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",219,0)
 ..K ARR,ERR
"RTN","ECXSURG",220,0)
 ..D FIELD^DID(130.16,4,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",221,0)
 ..Q:$D(ERR("DIERR"))
"RTN","ECXSURG",222,0)
 ..S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",223,0)
 ..F  S MOD=$O(^SRF(ECD0,13,ECXJ,SUB,MOD)) Q:MOD'>0  S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",224,0)
 .S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",225,0)
 .S ECODE0="S"_U   ;_ECPT
"RTN","ECXSURG",226,0)
 .D FILE^ECXSURG1
"RTN","ECXSURG",227,0)
 ;get prostheses
"RTN","ECXSURG",228,0)
 ;ecode0=i^^^^^^prosthesis^old qty field (null)
"RTN","ECXSURG",229,0)
 S ECXJ=0
"RTN","ECXSURG",230,0)
 F  S ECXJ=$O(^SRF(ECD0,1,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)) D
"RTN","ECXSURG",231,0)
 .S ECXP=+^SRF(ECD0,1,ECXJ,0),ECXQ=$P($G(^(1)),U,2) S:'ECXQ ECXQ=1
"RTN","ECXSURG",232,0)
 .S ECODE0="I"_U_U_U_U_U_U_ECXP_U_U
"RTN","ECXSURG",233,0)
 .D FILE^ECXSURG1
"RTN","ECXSURG",234,0)
 Q
"RTN","ECXSURG",235,0)
 ;
"RTN","ECXSURG",236,0)
 ;
"RTN","ECXSURG",237,0)
TIME ; given date/time get increment
"RTN","ECXSURG",238,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG",239,0)
 N CON,TIMEDIF
"RTN","ECXSURG",240,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",241,0)
 ;
"RTN","ECXSURG",242,0)
 ;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",243,0)
 S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",244,0)
 S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",245,0)
 I 'CON D
"RTN","ECXSURG",246,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXSURG",247,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXSURG",248,0)
 I CON D
"RTN","ECXSURG",249,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXSURG",250,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXSURG",251,0)
 S:TIME<0 TIME="###"
"RTN","ECXSURG",252,0)
 Q
"RTN","ECXSURG",253,0)
 ;
"RTN","ECXSURG",254,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSURG",255,0)
 S ECHEAD="SUR"
"RTN","ECXSURG",256,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSURG",257,0)
 Q
"RTN","ECXSURG",258,0)
 ;
"RTN","ECXSURG",259,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSURG",260,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXSURG1")
0^24^B19369745^B18403653
"RTN","ECXSURG1",1,0)
ECXSURG1 ;ALB/JA,BIR/DMA,PTD-Surgery Extract for DSS ;10/14/10  18:10
"RTN","ECXSURG1",2,0)
 ;;3.0;DSS EXTRACTS;**105,112,120,127,132**;Dec 22, 1997;Build 18
"RTN","ECXSURG1",3,0)
 ;
"RTN","ECXSURG1",4,0)
FILE ;file record
"RTN","ECXSURG1",5,0)
 ;node0
"RTN","ECXSURG1",6,0)
 ;division^dfn^ssn^name^in/out (ECXA)^day^case #^
"RTN","ECXSURG1",7,0)
 ;surg specialty^or room #^
"RTN","ECXSURG1",8,0)
 ;surgeon^attending^anesthesia supervisor^anesthesia technique^
"RTN","ECXSURG1",9,0)
 ;primary/secondary/prostheses^cpt^^pt time^op time^anes time^
"RTN","ECXSURG1",10,0)
 ;prostheses^qty^^
"RTN","ECXSURG1",11,0)
 ;movement number^treating specialty^cancel/abort (ECCAN)^time^or type^
"RTN","ECXSURG1",12,0)
 ;attending's service^non-or dss id^recovery room time^^
"RTN","ECXSURG1",13,0)
 ;primary care team^primary care provider^admission date
"RTN","ECXSURG1",14,0)
 ;node1
"RTN","ECXSURG1",15,0)
 ;mpi^dss dept ECXDSSD^surgeon npi^attending npi^anes supervisor npi^
"RTN","ECXSURG1",16,0)
 ;pc provider npi^pc prov person class^
"RTN","ECXSURG1",17,0)
 ;assoc pc provider^assoc pc prov person class^assoc pc prov npi^
"RTN","ECXSURG1",18,0)
 ;cpt&modifiers ECXCPT^dom ECXDOM^enrollment category ECXCAT^
"RTN","ECXSURG1",19,0)
 ;enrollment status ECXSTAT^enrollment priority ECXPRIOR^
"RTN","ECXSURG1",20,0)
 ;period of service ECXPOS^purple heart indicator ECXPHI^
"RTN","ECXSURG1",21,0)
 ;observ pat ind ECXOBS^encounter num ECXENC^ao loc ECXAOL^
"RTN","ECXSURG1",22,0)
 ;production division ECXPDIV^head & neck canc ind ECXHNCI^
"RTN","ECXSURG1",23,0)
 ;ethnicity ECXETH^race1 ECXRC1^new quantity ECXQ^
"RTN","ECXSURG1",24,0)
 ;^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig
"RTN","ECXSURG1",25,0)
 ;ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible ECXCVENC
"RTN","ECXSURG1",26,0)
 ;or clean time ECXORCT^time pt in hold area ECXPTHA^national patient
"RTN","ECXSURG1",27,0)
 ;record flag ECXNPRFI^princ anesthetist ECXPA^surgeon per class ECSRPC
"RTN","ECXSURG1",28,0)
 ;node2
"RTN","ECXSURG1",29,0)
 ;atten surgeon per class ECATPC^anesthesia super person class ECSAPC^
"RTN","ECXSURG1",30,0)
 ;princ anesthetist PC ECXPAPC^emergency response indicator(FEMA) ECXERI^
"RTN","ECXSURG1",31,0)
 ;agent orange indic ECXAO^head/neck cancer ECXHNC
"RTN","ECXSURG1",32,0)
 ;OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^clinic pointer ECXCLIN
"RTN","ECXSURG1",33,0)
 ;credit stop ECXCRST^stop code ECXSTCD^princ postop diagnosis code
"RTN","ECXSURG1",34,0)
 ;ECXPODX^other postop diagnosis code #1 ECXPODX1^other postop
"RTN","ECXSURG1",35,0)
 ;diagnosis code #2 ECXPODX2^ other postop diag code #3 ECXPODX3^
"RTN","ECXSURG1",36,0)
 ;other postop diag code #4 ECXPODX4^other postop diag code #5
"RTN","ECXSURG1",37,0)
 ;ECXPODX5^anesthesia sup npi ECSANPI^assoc pc prov npi ECASNPI^
"RTN","ECXSURG1",38,0)
 ;attending surgeon npi ECATNPI^primary care provider npi ECPTNPI^
"RTN","ECXSURG1",39,0)
 ;principle anesthetist npi ECPANPI^surgeon npi ECSRNPI
"RTN","ECXSURG1",40,0)
 ;encounter ec ECENEC^radiation encounter indicator ECENRI^
"RTN","ECXSURG1",41,0)
 ;mst encounter indicator ECENMST^encounter sc ECENSC^
"RTN","ECXSURG1",42,0)
 ;agent orange status ECXAST^
"RTN","ECXSURG1",43,0)
 ;environmental contaminants ECXEST^radiation status ECXRST^
"RTN","ECXSURG1",44,0)
 ;mst status ECXMST^shad indicator ECXSHADI^encounter shad ECXSHAD^
"RTN","ECXSURG1",45,0)
 ;1st assist EC1A^1st assist pc EC1APC^1st assist npi EC1ANPI^
"RTN","ECXSURG1",46,0)
 ;2nd assist EC2A^2nd assist pc EC2APC^2nd assist npi EC2ANPI^
"RTN","ECXSURG1",47,0)
 ;perfusionist ECPQ^perfusionist pc ECPQPC^perfusionist npi ECQANPI^
"RTN","ECXSURG1",48,0)
 ;anesthesia severity ECASA^patcat PATCAT^date of birth ECXDOB
"RTN","ECXSURG1",49,0)
 ;
"RTN","ECXSURG1",50,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXSURG1",51,0)
 N ECXDATA,ECXTSC
"RTN","ECXSURG1",52,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXSURG1",53,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXSURG1",54,0)
 ;done
"RTN","ECXSURG1",55,0)
 N DA,DIK,STR
"RTN","ECXSURG1",56,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXSURG1",57,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSURG1",58,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECD0_U_ECSS_U_ECO_U
"RTN","ECXSURG1",59,0)
 S ECODE=ECODE_ECSR_U_ECAT_U_ECSA_U_ECANE_U_ECODE0_U
"RTN","ECXSURG1",60,0)
 S STR=ECXMN_U_ECXTSC_U_$S(ECCAN'="":ECCAN,1:"")_U_ECXTM_U_ECORTY_U
"RTN","ECXSURG1",61,0)
 S STR=STR_ECATSV_U_ECNL_U_ECRR_U_U_ECPTTM_U_ECPTPR_U_ECXADD_U
"RTN","ECXSURG1",62,0)
 S $P(ECODE,U,26,38)=STR
"RTN","ECXSURG1",63,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_U
"RTN","ECXSURG1",64,0)
 S ECODE1=ECODE1_ECCLAS_U_ECASPR_U_ECCLAS2_U_U_ECXCPT_U_ECXDOM_U
"RTN","ECXSURG1",65,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U
"RTN","ECXSURG1",66,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXPDIV_U_ECXHNCI_U
"RTN","ECXSURG1",67,0)
 S ECODE1=ECODE1_ECXETH_U_ECXRC1_U_ECXQ_U
"RTN","ECXSURG1",68,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXORCT_U_ECXPTHA_U_ECXNPRFI
"RTN","ECXSURG1",69,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXPA_U_ECSRPC_U,ECODE2=ECATPC_U_ECSAPC_U_ECXPAPC
"RTN","ECXSURG1",70,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXHNC
"RTN","ECXSURG1",71,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECXCLIN_U_ECXCRST_U_ECXSTCD_U_ECXPODX_U_ECXPODX1_U_ECXPODX2_U_ECXPODX3_U_ECXPODX4_U_ECXPODX5_U_ECSANPI_U_ECASNPI_U_ECATNPI_U_ECPTNPI_U_ECPANPI_U_ECSRNPI
"RTN","ECXSURG1",72,0)
 I ECXLOGIC>2008 S ECODE2=ECODE2_U_$G(ECENEC)_U_$G(ECENRI)_U_$G(ECENMST)_U_$G(ECENSC)_U_$G(ECXAST)_U_$G(ECXEST)_U_$G(ECXRST)_U_$G(ECXMST)
"RTN","ECXSURG1",73,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_$G(ECXSHADI)_U_$G(ECXSHAD)_U,ECODE3=$G(EC1A)_U_$G(EC1APC)_U_$G(EC1ANPI)
"RTN","ECXSURG1",74,0)
 I ECXLOGIC>2010 S ECODE3=ECODE3_U_$G(EC2A)_U_$G(EC2APC)_U_(EC2ANPI)_U_$G(ECPQ)_U_$G(ECPQPC)_U_$G(ECPQNPI)_U_$G(ECQA)_U_$G(ECQAPC)_U_$G(ECQANPI)_U_$G(ECASA)_U_ECXPATCAT
"RTN","ECXSURG1",75,0)
 I ECXLOGIC>2011 S ECODE3=ECODE3_U_$G(ECXDOB)
"RTN","ECXSURG1",76,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=ECODE2,^ECX(ECFILE,EC7,3)=ECODE3,ECRN=ECRN+1
"RTN","ECXSURG1",77,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXSURG1",78,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSURG1",79,0)
 ;
"RTN","ECXSURG1",80,0)
TIME ; given date/time get increment
"RTN","ECXSURG1",81,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG1",82,0)
 N CON,TIMEDIF
"RTN","ECXSURG1",83,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG1",84,0)
 ;
"RTN","ECXSURG1",85,0)
 ;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG1",86,0)
 S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG1",87,0)
 S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG1",88,0)
 I 'CON D
"RTN","ECXSURG1",89,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXSURG1",90,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXSURG1",91,0)
 I CON D
"RTN","ECXSURG1",92,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXSURG1",93,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXSURG1",94,0)
 S:TIME<0 TIME="###"
"RTN","ECXSURG1",95,0)
 Q
"RTN","ECXSURG1",96,0)
 ;
"RTN","ECXSURG1",97,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSURG1",98,0)
 S ECHEAD="SUR"
"RTN","ECXSURG1",99,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSURG1",100,0)
 Q
"RTN","ECXSURG1",101,0)
 ;
"RTN","ECXSURG1",102,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSURG1",103,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXUPRO1")
0^22^B7105553^B6892004
"RTN","ECXUPRO1",1,0)
ECXUPRO1 ;ALB/TJL-Prosthetics Extract Unusual Cost Report; 01/08/08 2:49pm ;7/25/11  10:59
"RTN","ECXUPRO1",2,0)
 ;;3.0;DSS EXTRACTS;**49,111,132**;Jul 2, 2003;Build 18
"RTN","ECXUPRO1",3,0)
 ;
"RTN","ECXUPRO1",4,0)
EN ; entry point
"RTN","ECXUPRO1",5,0)
 N COUNT,ECDFN,ECD,PROCOST
"RTN","ECXUPRO1",6,0)
 K ^TMP($J)
"RTN","ECXUPRO1",7,0)
 S COUNT=0
"RTN","ECXUPRO1",8,0)
 S ECD=ECSD1,ECED=ECED+.3
"RTN","ECXUPRO1",9,0)
 D GETRECS
"RTN","ECXUPRO1",10,0)
 Q
"RTN","ECXUPRO1",11,0)
 ;
"RTN","ECXUPRO1",12,0)
GETRECS ; get records that are over the threshold
"RTN","ECXUPRO1",13,0)
 N PDA,SUBDA,PROLB,PRO0,PROFORM
"RTN","ECXUPRO1",14,0)
 N DIC,DR,DA,DIQ
"RTN","ECXUPRO1",15,0)
 S QFLG=0,ECXLNE=1,ECXED1=ECED+.9999
"RTN","ECXUPRO1",16,0)
 S PDA=ECSD1
"RTN","ECXUPRO1",17,0)
 F  S PDA=$O(^RMPR(660,"CT",PDA)) Q:(PDA>ECXED1)!('PDA)!(QFLG=1)  D
"RTN","ECXUPRO1",18,0)
 .S SUBDA=0
"RTN","ECXUPRO1",19,0)
 .F  S SUBDA=$O(^RMPR(660,"CT",PDA,SUBDA))  Q:('SUBDA)!(QFLG=1)  D
"RTN","ECXUPRO1",20,0)
 ..Q:'$D(^RMPR(660,SUBDA,0))
"RTN","ECXUPRO1",21,0)
 ..S PRO0=^RMPR(660,SUBDA,0)
"RTN","ECXUPRO1",22,0)
 ..S PROLB=$G(^RMPR(660,SUBDA,"LB"))
"RTN","ECXUPRO1",23,0)
 ..K ECXP S DIC="^RMPR(660,",DR=".02;11",DA=SUBDA,DIQ(0)="EI"
"RTN","ECXUPRO1",24,0)
 ..S DIQ="ECXP" D EN^DIQ1
"RTN","ECXUPRO1",25,0)
 ..S ECXDFN=$G(ECXP(660,SUBDA,.02,"I"))
"RTN","ECXUPRO1",26,0)
 ..S PROFORM=$G(ECXP(660,SUBDA,11,"E"))_U_$G(ECXP(660,SUBDA,11,"I"))
"RTN","ECXUPRO1",27,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,PDA)
"RTN","ECXUPRO1",28,0)
 ..Q:'$$NTEG^ECXPRO1(ECXDFN,.ECXLNE,SUBDA,PRO0,PROLB,ECINST,PROFORM)
"RTN","ECXUPRO1",29,0)
 ..S PROCOST=$P(PRO0,U,16)
"RTN","ECXUPRO1",30,0)
 ..S:PROFORM["-3" PROCOST=$P(PROLB,U,9)
"RTN","ECXUPRO1",31,0)
 ..S:($P(PROFORM,U,2)=11)!($P(PROFORM,U,2)=12) PROCOST=0
"RTN","ECXUPRO1",32,0)
 ..S:PROCOST="" PROCOST=0
"RTN","ECXUPRO1",33,0)
 ..S PROCOST=(PROCOST+.5)\1
"RTN","ECXUPRO1",34,0)
 ..S:PROCOST>999999 PROCOST=999999
"RTN","ECXUPRO1",35,0)
 ..I PROCOST>ECTHLD D FILE
"RTN","ECXUPRO1",36,0)
 Q
"RTN","ECXUPRO1",37,0)
FILE ; put records in temp file to print later
"RTN","ECXUPRO1",38,0)
 N OK,PROPAT,PRONAME,PROSSN,CPTCODE,ECXFEKEY,PROQTY
"RTN","ECXUPRO1",39,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECD,"."),"1;",.PROPAT)
"RTN","ECXUPRO1",40,0)
 I 'OK Q
"RTN","ECXUPRO1",41,0)
 S PRONAME=PROPAT("NAME")
"RTN","ECXUPRO1",42,0)
 S PROSSN=PROPAT("SSN")
"RTN","ECXUPRO1",43,0)
 S PRODAY=$E(PDA,4,5)_"/"_$E(PDA,6,7)_"/"_$E(PDA,2,3)
"RTN","ECXUPRO1",44,0)
 S CPTCODE=$E(ECXHCPCS,1,5)
"RTN","ECXUPRO1",45,0)
 I PROFORM["-3" F ECXLAB="LAB","ORD" D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXUPRO1",46,0)
 I PROFORM'["-3" S ECXLAB="NONL" D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXUPRO1",47,0)
 S PROQTY=$P(PRO0,U,7)
"RTN","ECXUPRO1",48,0)
 S:(+PROQTY=0) PROQTY=1
"RTN","ECXUPRO1",49,0)
 S PROQTY=$$RJ^XLFSTR(PROQTY,8,0)
"RTN","ECXUPRO1",50,0)
 S ^TMP($J,ECXFEKEY,-PROQTY,SUBDA,PROSSN)=PRONAME_U_PROSSN_U_PRODAY_U_ECXHCPCS_U_ECXFEKEY_U_PROQTY_U_"$"_$FNUMBER(PROCOST,",",2)
"RTN","ECXUPRO1",51,0)
 S COUNT=COUNT+1
"RTN","ECXUPRO1",52,0)
 I COUNT#100=0 I $$S^ZTLOAD S (ZTSTOP,ECXERR)=1
"RTN","ECXUPRO1",53,0)
 Q
"RTN","ECXUPRO1",54,0)
EXIT S ECXERR=1 Q
"RTN","ECXUTL6")
0^26^B61658349^B71591342
"RTN","ECXUTL6",1,0)
ECXUTL6 ;ALB/JRC - Utilities for DSS Extracts ; 7/24/09 2:06pm
"RTN","ECXUTL6",2,0)
 ;;3.0;DSS EXTRACTS;**92,105,112,119,132**;Dec 22, 1997;Build 18
"RTN","ECXUTL6",3,0)
 ;
"RTN","ECXUTL6",4,0)
NUTKEY(P,D) ;Generate n&fs feeder key
"RTN","ECXUTL6",5,0)
 ;Required variables
"RTN","ECXUTL6",6,0)
 ;      p  - diet type production diet, standing orders, supplemental
"RTN","ECXUTL6",7,0)
 ;           feedings, or tube feedings.
"RTN","ECXUTL6",8,0)
 ;      d  - diet ien from files 116.2, 118.3, 118, or 118.2
"RTN","ECXUTL6",9,0)
 ;Check input
"RTN","ECXUTL6",10,0)
 I $G(P)=""!'$G(D) Q ""
"RTN","ECXUTL6",11,0)
 ;Init variables
"RTN","ECXUTL6",12,0)
 N PRO,IENS,CODE,DIET
"RTN","ECXUTL6",13,0)
 S (PRO,IENS,CODE,DIET)=0
"RTN","ECXUTL6",14,0)
 S PRO=$O(^ECX(728.45,"B",P,PRO))
"RTN","ECXUTL6",15,0)
 S CODE=D_$S(P="PD":";FH(116.2,",P="SO":";FH(118.3,",P="SF":";FH(118,",P="TF":";FH(118.2,",1:"")
"RTN","ECXUTL6",16,0)
 S DIET=0,DIET=$O(^ECX(728.45,+PRO,1,"B",CODE,DIET))
"RTN","ECXUTL6",17,0)
 S IENS=""_DIET_","_PRO_","_""
"RTN","ECXUTL6",18,0)
 Q $$GET1^DIQ(728.451,IENS,1)
"RTN","ECXUTL6",19,0)
 ;
"RTN","ECXUTL6",20,0)
NUTLOC(P,D,FPD,FDD,FPF,DLT,DFL) ;Define nutrition fields
"RTN","ECXUTL6",21,0)
 ;Required variables
"RTN","ECXUTL6",22,0)
 ;      p  - patient status, inpatient or outpatient
"RTN","ECXUTL6",23,0)
 ;
"RTN","ECXUTL6",24,0)
 ;      d  - diet type production diet, standing orders, supplemental
"RTN","ECXUTL6",25,0)
 ;            feedings, or tube feedings.
"RTN","ECXUTL6",26,0)
 ;    Output: food production division, food delivery division, food
"RTN","ECXUTL6",27,0)
 ;            production facility, food delivery type, delivery feeder
"RTN","ECXUTL6",28,0)
 ;            location
"RTN","ECXUTL6",29,0)
 ;Init variables
"RTN","ECXUTL6",30,0)
 N WARD,TRSVP,CRSVP,OPLOC,MASWARD
"RTN","ECXUTL6",31,0)
 S (CRSVP,TRSVP)=0,(WARD,DLT,DFL,MASWARD)=""
"RTN","ECXUTL6",32,0)
 S OPLOC=""
"RTN","ECXUTL6",33,0)
 ;Check input
"RTN","ECXUTL6",34,0)
 I $G(P)=""!($G(D)="")!'($G(FHDFN)) Q ""
"RTN","ECXUTL6",35,0)
 ;Get food production facility for inpatient, use 115.1.13 (dietetic
"RTN","ECXUTL6",36,0)
 ;ward) field which points 119.6 (nutrition location), field 3 (tray
"RTN","ECXUTL6",37,0)
 ;service point) or field 4 (cafeteria service point), which points to
"RTN","ECXUTL6",38,0)
 ;119.72 (production facility) field 2.
"RTN","ECXUTL6",39,0)
 I P="INP" D
"RTN","ECXUTL6",40,0)
 .N VAHOW
"RTN","ECXUTL6",41,0)
 .K ^UTILITY("VAIP",$J)
"RTN","ECXUTL6",42,0)
 .S DFN=$P($G(^FHPT(FHDFN,0)),U,3)
"RTN","ECXUTL6",43,0)
 .S VAIP("D")=$G(SDATE),VAHOW=2
"RTN","ECXUTL6",44,0)
 .D IN5^VADPT
"RTN","ECXUTL6",45,0)
 .S MASWARD=+^UTILITY("VAIP",$J,5)
"RTN","ECXUTL6",46,0)
 .S WARD=$O(^FH(119.6,"AW",+MASWARD,0))
"RTN","ECXUTL6",47,0)
 .S:+WARD'>0 WARD=""
"RTN","ECXUTL6",48,0)
 .S TRSVP=$$GET1^DIQ(119.6,WARD,3,"I")
"RTN","ECXUTL6",49,0)
 .S CRSVP=$$GET1^DIQ(119.6,WARD,4,"I")
"RTN","ECXUTL6",50,0)
 .;Get divisions
"RTN","ECXUTL6",51,0)
 .D GETDIV
"RTN","ECXUTL6",52,0)
 .Q
"RTN","ECXUTL6",53,0)
 ;
"RTN","ECXUTL6",54,0)
 ;Get food production facility for OP Supplemental feedings,
"RTN","ECXUTL6",55,0)
 ;use 115.1.13 (dietetic
"RTN","ECXUTL6",56,0)
 ;ward) field which points 119.6 (nutrition location), field 3 (tray
"RTN","ECXUTL6",57,0)
 ;service point) or field 4 (cafeteria service point), which points to
"RTN","ECXUTL6",58,0)
 ;119.72 (production facility) field 2.
"RTN","ECXUTL6",59,0)
 I P["OP",D["SF" D
"RTN","ECXUTL6",60,0)
 .S OPLOC=""_$P(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM"),U,3)_","_""
"RTN","ECXUTL6",61,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",62,0)
 .;Get delivery division
"RTN","ECXUTL6",63,0)
 .D GETDIV
"RTN","ECXUTL6",64,0)
 .Q
"RTN","ECXUTL6",65,0)
 ;Get food production facility for OP Standing Orders,
"RTN","ECXUTL6",66,0)
 ;use 115.1.13 (dietetic
"RTN","ECXUTL6",67,0)
 ;ward) field which points 119.6 (nutrition location), field 3 (tray
"RTN","ECXUTL6",68,0)
 ;service point) or field 4 (cafeteria service point), which points to
"RTN","ECXUTL6",69,0)
 ;119.72 (production facility) field 2.
"RTN","ECXUTL6",70,0)
 I P["OP",D["SO" D
"RTN","ECXUTL6",71,0)
 .S OPLOC=""_$P(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM"),U,3)_","_""
"RTN","ECXUTL6",72,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",73,0)
 .;Get delivery division
"RTN","ECXUTL6",74,0)
 .D GETDIV
"RTN","ECXUTL6",75,0)
 .Q
"RTN","ECXUTL6",76,0)
 ;Get food production facility for outpatient recurring meal, use
"RTN","ECXUTL6",77,0)
 ;115.16.2 (outpatient location) which points to file 119.6 (nutrition
"RTN","ECXUTL6",78,0)
 ;location) field 3 (tray service point) or field 4 (cafeteria service
"RTN","ECXUTL6",79,0)
 ;point), which points to 119.72 (production facility) field 2.
"RTN","ECXUTL6",80,0)
 I P["OP",D["RM" D
"RTN","ECXUTL6",81,0)
 .S OPLOC=""_$P(NODE,U,3)_","_"",TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",82,0)
 .D GETDIV
"RTN","ECXUTL6",83,0)
 .Q
"RTN","ECXUTL6",84,0)
 ;
"RTN","ECXUTL6",85,0)
 ;Get food production facility for outpatient tube feeding, use
"RTN","ECXUTL6",86,0)
 ;115.16.2 (outpatient location) then use 119.6 nutrition location
"RTN","ECXUTL6",87,0)
 ;which points to 119.72 field 2.
"RTN","ECXUTL6",88,0)
 I P["OP",D["TF" D
"RTN","ECXUTL6",89,0)
 .S OPLOC=""_$P(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM"),U,3)_","_""
"RTN","ECXUTL6",90,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",91,0)
 .;Get delivery division
"RTN","ECXUTL6",92,0)
 .D GETDIV
"RTN","ECXUTL6",93,0)
 .Q
"RTN","ECXUTL6",94,0)
 ;
"RTN","ECXUTL6",95,0)
 ;Get food production facility for special meals, use 115.17.2
"RTN","ECXUTL6",96,0)
 ;location field 2 which is a pointer to 119.6 (nutrition location)
"RTN","ECXUTL6",97,0)
 ;which points to 119.72 via field 2 (tray service point) which points
"RTN","ECXUTL6",98,0)
 ;to file 119.71 (production facility) field 2.
"RTN","ECXUTL6",99,0)
 I P["OP",D["SM" D
"RTN","ECXUTL6",100,0)
 .S OPLOC=""_$P(NODE,U,3)_","_""
"RTN","ECXUTL6",101,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",102,0)
 .;Get delivery division
"RTN","ECXUTL6",103,0)
 .D GETDIV
"RTN","ECXUTL6",104,0)
 .Q
"RTN","ECXUTL6",105,0)
 ;
"RTN","ECXUTL6",106,0)
 ;Get food production facility for outpatient guest meals, use
"RTN","ECXUTL6",107,0)
 ;115.18.4 (outpatient location) then use 119.6 nutrition location
"RTN","ECXUTL6",108,0)
 ;which points to 119.72 (production facility) field 2.
"RTN","ECXUTL6",109,0)
 I P["OP",D["GM" D
"RTN","ECXUTL6",110,0)
 .S OPLOC=""_$P(NODE,U,5)_","_"",TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",111,0)
 .S FPF=$$GET1^DIQ(119.72,""_TRSVP_","_"",2,"I")
"RTN","ECXUTL6",112,0)
 .;Get delivery division
"RTN","ECXUTL6",113,0)
 .D GETDIV
"RTN","ECXUTL6",114,0)
 .Q
"RTN","ECXUTL6",115,0)
 ;
"RTN","ECXUTL6",116,0)
 ;Get delivery location type for patients; with inpatients the type of
"RTN","ECXUTL6",117,0)
 ;service needs to be pulled from the admission node, with outpatients
"RTN","ECXUTL6",118,0)
 ;the type of service needs to be pulled from different nodes and use
"RTN","ECXUTL6",119,0)
 ;field 101 of Nutrition Location file (#119.6). Delivery location
"RTN","ECXUTL6",120,0)
 ;types only set for the following meals:
"RTN","ECXUTL6",121,0)
 ;   Inpatient with a production diet
"RTN","ECXUTL6",122,0)
 ;   Outpatient with a recurring meal
"RTN","ECXUTL6",123,0)
 ;   Outpatient with a special meal
"RTN","ECXUTL6",124,0)
 ;   Outpatient with a guest meal
"RTN","ECXUTL6",125,0)
 ;   all other meals are null
"RTN","ECXUTL6",126,0)
 I P="INP",D="PD" D
"RTN","ECXUTL6",127,0)
 .S DLT=$P($G(NODE),U,8)
"RTN","ECXUTL6",128,0)
 I P="OP",((D="RM")!(D="SM")) D
"RTN","ECXUTL6",129,0)
 .S DLT=$E($$GET1^DIQ(119.6,""_$P(NODE,U,3)_","_"",101,"E"),1)
"RTN","ECXUTL6",130,0)
 I P="OP",D="GM" D
"RTN","ECXUTL6",131,0)
 .S DLT=$E($$GET1^DIQ(119.6,""_$P(NODE,U,5)_","_"",101,"E"),1)
"RTN","ECXUTL6",132,0)
 ;
"RTN","ECXUTL6",133,0)
 ;Delivery feeder location
"RTN","ECXUTL6",134,0)
 I DLT="C" D
"RTN","ECXUTL6",135,0)
 .S DFL=$E($$GET1^DIQ(119.6,WARD,4,"E"),1,10)
"RTN","ECXUTL6",136,0)
 .S IEN=$$GET1^DIQ(119.72,+CRSVP,2,"I")
"RTN","ECXUTL6",137,0)
 .S IEN=""_IEN_";FH(119.71,"
"RTN","ECXUTL6",138,0)
 .S FPF=$O(^ECX(728.46,"B",IEN,FPF))
"RTN","ECXUTL6",139,0)
 .S FPF=$E($$GET1^DIQ(728.46,FPF,.01,"E"),1,10)
"RTN","ECXUTL6",140,0)
 I (DLT["T")!(DLT["D") D
"RTN","ECXUTL6",141,0)
 .I P="INP" D
"RTN","ECXUTL6",142,0)
 ..S DFL=$$GET1^DIQ(42,+MASWARD,44,"I")
"RTN","ECXUTL6",143,0)
 .I P="OP" D
"RTN","ECXUTL6",144,0)
 ..S DFL=$O(^FH(119.6,+OPLOC,"L","B",0))
"RTN","ECXUTL6",145,0)
 I (DLT=""),"SFTFSO"[D D
"RTN","ECXUTL6",146,0)
 .S DFL=$S(TRSVP:$$GET1^DIQ(119.6,+WARD,3,"E"),1:$$GET1^DIQ(119.6,+WARD,4,"E"))
"RTN","ECXUTL6",147,0)
 Q 1
"RTN","ECXUTL6",148,0)
 ;
"RTN","ECXUTL6",149,0)
GETDIV ;Get divisions and food production facility
"RTN","ECXUTL6",150,0)
 ;Init variables
"RTN","ECXUTL6",151,0)
 N IEN,SIEN,SVP
"RTN","ECXUTL6",152,0)
 S (FDD,FPF,FPD)=""
"RTN","ECXUTL6",153,0)
 S SVP=$S(TRSVP:TRSVP,CRSVP:CRSVP,1:"")
"RTN","ECXUTL6",154,0)
 S IEN=$$GET1^DIQ(119.72,+SVP,2,"I")
"RTN","ECXUTL6",155,0)
 Q:'IEN
"RTN","ECXUTL6",156,0)
 ;Get delivery division
"RTN","ECXUTL6",157,0)
 S SIEN=""_+SVP_";FH(119.72,"
"RTN","ECXUTL6",158,0)
 S FDD=$O(^ECX(728.46,"B",SIEN,FDD))
"RTN","ECXUTL6",159,0)
 S FDD=""_$$GET1^DIQ(728.46,FDD,1,"I")_","_""
"RTN","ECXUTL6",160,0)
 S FDD=$$GET1^DIQ(4,FDD,99,"E")
"RTN","ECXUTL6",161,0)
 ;Get production division and food production facility
"RTN","ECXUTL6",162,0)
 S IEN=""_IEN_";FH(119.71,"
"RTN","ECXUTL6",163,0)
 S FPF=$O(^ECX(728.46,"B",IEN,FPF))
"RTN","ECXUTL6",164,0)
 S FPD=""_$$GET1^DIQ(728.46,FPF,1,"I")_","_""
"RTN","ECXUTL6",165,0)
 S FPD=$$GET1^DIQ(4,FPD,99,"E")
"RTN","ECXUTL6",166,0)
 S FPF=$E($$GET1^DIQ(728.46,FPF,.01,"E"),1,10)
"RTN","ECXUTL6",167,0)
 Q
"RTN","ECXUTL6",168,0)
 ;
"RTN","ECXUTL6",169,0)
SUR(CRST,STCD,CLINIC) ;Surgery stop codes and clinic (outpatients only)
"RTN","ECXUTL6",170,0)
 ;Init variables
"RTN","ECXUTL6",171,0)
 S (CRST,STCD,CLINIC)=""
"RTN","ECXUTL6",172,0)
 ;Quit if not outpatient
"RTN","ECXUTL6",173,0)
 Q:$P(EC0,U,12)'="O" ""
"RTN","ECXUTL6",174,0)
 ;Get stop codes (outpatient only)
"RTN","ECXUTL6",175,0)
 I $P(EC0,U,12)="O" D
"RTN","ECXUTL6",176,0)
 .;Get credit stop code (outpatient only)
"RTN","ECXUTL6",177,0)
 .S CRST=""_$$GET1^DIQ(40.7,""_$$GET1^DIQ(44,$$GET1^DIQ(137.45,$P(EC0,U,4),2,"I")_","_""_","_"",2503,"I")_","_"",1,"E")
"RTN","ECXUTL6",178,0)
 .;Get stop code (outpatient only)
"RTN","ECXUTL6",179,0)
 .S STCD=""_$$GET1^DIQ(40.7,""_$$GET1^DIQ(44,$$GET1^DIQ(137.45,$P(EC0,U,4),2,"I")_","_""_","_"",8,"I")_","_"",1,"E")
"RTN","ECXUTL6",180,0)
 ;Clinic for non-or case use associated clinic else non-or location
"RTN","ECXUTL6",181,0)
 ;If non-or case
"RTN","ECXUTL6",182,0)
 I $P($G(ECNO),U)="Y" S CLINIC=$S($P(EC0,U,21):$P(EC0,U,21),1:$P(ECNO,U,2))
"RTN","ECXUTL6",183,0)
 ;Get stop codes non-or cases
"RTN","ECXUTL6",184,0)
 I $P($G(ECNO),U)="Y" D
"RTN","ECXUTL6",185,0)
 .;Get credit stop code for non-or case
"RTN","ECXUTL6",186,0)
 .S CRST=$$GET1^DIQ(40.7,$$GET1^DIQ(44,CLINIC,2503,"I"),1,"E")
"RTN","ECXUTL6",187,0)
 .;Get stop code for non-or case
"RTN","ECXUTL6",188,0)
 .S STCD=$$GET1^DIQ(40.7,$$GET1^DIQ(44,CLINIC,8,"I"),1,"E")
"RTN","ECXUTL6",189,0)
 ;Clinic, not a non-or case use surgical specialty associated clinic
"RTN","ECXUTL6",190,0)
 I $P($G(ECNO),U)'="Y" S CLINIC=$$GET1^DIQ(137.45,+$P(EC0,U,4),2,"I")
"RTN","ECXUTL6",191,0)
 Q 1
"RTN","ECXUTL6",192,0)
 ;
"RTN","ECXUTL6",193,0)
SURPODX(PRODX,PODX1,PODX2,PODX3,PODX4,PODX5) ;Get postop diagnosis codes
"RTN","ECXUTL6",194,0)
 ;Init variables
"RTN","ECXUTL6",195,0)
 N CODE,I,PODX
"RTN","ECXUTL6",196,0)
 S (PRODX,PODX1,PODX2,PODX3,PODX4,PODX5)="",CODE=0
"RTN","ECXUTL6",197,0)
 ;Check input
"RTN","ECXUTL6",198,0)
 Q:'$D(DATAOP) 0
"RTN","ECXUTL6",199,0)
 ;Get principal postop dx code
"RTN","ECXUTL6",200,0)
 S PRODX=$$GET1^DIQ(80,$P(DATAOP,U,3),.01)
"RTN","ECXUTL6",201,0)
 ;Get other postop dx codes
"RTN","ECXUTL6",202,0)
 S (CODE,I)=0 F  S CODE=$O(^SRO(136,ECD0,4,CODE)) Q:'CODE  Q:I>5  D
"RTN","ECXUTL6",203,0)
 .S I=I+1,PODX="PODX"_I,@PODX=$$GET1^DIQ(80,$P(^SRO(136,ECD0,4,CODE,0),U),.01)
"RTN","ECXUTL6",204,0)
 Q 1
"RTN","ECXUTL6",205,0)
 ;
"RTN","ECXUTL6",206,0)
LOINC(ARRAY) ;Get DSS lab test information out of DSS LOINC CODE (#727.29) file
"RTN","ECXUTL6",207,0)
 ;Input
"RTN","ECXUTL6",208,0)
 ;   ARRAY(LOINC-CK) := array of valid LOINC (#727.29 DSS LOINC CODE)
"RTN","ECXUTL6",209,0)
 ;                      entries with their check digit
"RTN","ECXUTL6",210,0)
 ;   or,
"RTN","ECXUTL6",211,0)
 ;   ARRAY("ALL")    := request for all LOINC entries
"RTN","ECXUTL6",212,0)
 ;Output
"RTN","ECXUTL6",213,0)
 ;   ^TMP($J,"EXCUTL6",LOINC-CK)  =
"RTN","ECXUTL6",214,0)
 ;              zero node of file 727.29 pieces 1 thru 4
"RTN","ECXUTL6",215,0)
 ;              piece 1 := LOINC-CK (LOINC-check digit)
"RTN","ECXUTL6",216,0)
 ;              piece 2 := DSS lar test number
"RTN","ECXUTL6",217,0)
 ;              piece 3 := DSS test name
"RTN","ECXUTL6",218,0)
 ;              piece 4 := DSS Reporting units
"RTN","ECXUTL6",219,0)
 ;              piece 5 := LOINC name
"RTN","ECXUTL6",220,0)
 ;              piece 6 := pointer to LAB LOINC (#95.3) code entry
"RTN","ECXUTL6",221,0)
 ;             (delimited by "^")
"RTN","ECXUTL6",222,0)
 ;          -1 := not a valid loinc entry from file 727.29
"RTN","ECXUTL6",223,0)
 ;          -2 := no dss lar test number associated with loinc
"RTN","ECXUTL6",224,0)
 ;
"RTN","ECXUTL6",225,0)
 ;   ^TMP($J,"ECXUTL6",LOINC-CK,WKLD,SPEC/-or-"DEFAULT",LTEST)= 
"RTN","ECXUTL6",226,0)
 ;              piece 1 := WKLD Code (external)
"RTN","ECXUTL6",227,0)
 ;              piece 2 := specimen (external) or "DEFAULT LOINC"
"RTN","ECXUTL6",228,0)
 ;              piece 3 := laboratory test (external)
"RTN","ECXUTL6",229,0)
 ;              piece 4:= local LOINC code external
"RTN","ECXUTL6",230,0)
 ;             (delimited by "^")
"RTN","ECXUTL6",231,0)
 ;
"RTN","ECXUTL6",232,0)
 ;
"RTN","ECXUTL6",233,0)
 I '$D(ARRAY) Q
"RTN","ECXUTL6",234,0)
 K ^TMP($J,"ECXUTL6")
"RTN","ECXUTL6",235,0)
 N LOINCCK,LIEN,SPEC,EC0,WKLD,WKLD0,TA,LRASSV,LOINCPTR,LTEST,LLNC,LLNCP,SPECD
"RTN","ECXUTL6",236,0)
 S LOINCCK=""
"RTN","ECXUTL6",237,0)
 I $D(ARRAY("ALL")) D
"RTN","ECXUTL6",238,0)
 . F  S LOINCCK=$O(^ECX(727.29,"B",LOINCCK)) Q:'LOINCCK  D EXT
"RTN","ECXUTL6",239,0)
 E  D
"RTN","ECXUTL6",240,0)
 . F  S LOINCCK=$O(ARRAY(LOINCCK)) Q:'LOINCCK  D EXT
"RTN","ECXUTL6",241,0)
 Q
"RTN","ECXUTL6",242,0)
 ;
"RTN","ECXUTL6",243,0)
EXT I '$D(^ECX(727.29,"B",LOINCCK)) S ^TMP($J,"ECXUTL6",LOINCCK)=-1_"^no entry in DSS LOINC CODE (#727.29)." Q
"RTN","ECXUTL6",244,0)
 S LIEN=$O(^ECX(727.29,"B",LOINCCK,0))
"RTN","ECXUTL6",245,0)
 I '$P(^ECX(727.29,LIEN,0),U,2) S ^TMP($J,"ECXUTL6",LOINCCK)=-2_"^no dss test number found." Q
"RTN","ECXUTL6",246,0)
 S EC0=^ECX(727.29,LIEN,0)
"RTN","ECXUTL6",247,0)
 S ^TMP($J,"ECXUTL6",LOINCCK)=EC0_"^"
"RTN","ECXUTL6",248,0)
 S LOINCPTR=""
"RTN","ECXUTL6",249,0)
 ;**Lexicon LOINC Code - test whether LEX*2*75 installed.
"RTN","ECXUTL6",250,0)
 ;  Else, get directly from file #95.3
"RTN","ECXUTL6",251,0)
 S X="LEXLR" X ^%ZOSF("TEST") I '$T D
"RTN","ECXUTL6",252,0)
 . I LOINCCK=$$GET1^DIQ(95.3,$P(LOINCCK,"-"),.01) D
"RTN","ECXUTL6",253,0)
 . . S LOINCPTR=$$GET1^DIQ(95.3,$P(LOINCCK,"-"),.01,"I")
"RTN","ECXUTL6",254,0)
 S X="LEXLR" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL6",255,0)
 . S LOINCPTR=$$CHKCODE^LEXLR(LOINCCK) ;DBIA5547
"RTN","ECXUTL6",256,0)
 ;**
"RTN","ECXUTL6",257,0)
 I LOINCPTR D
"RTN","ECXUTL6",258,0)
 . S ^TMP($J,"ECXUTL6",LOINCCK)=^TMP($J,"ECXUTL6",LOINCCK)_LOINCPTR
"RTN","ECXUTL6",259,0)
 . S WKLD=0 F  S WKLD=$O(^LAM("AI",LOINCPTR,WKLD)) Q:'WKLD  D
"RTN","ECXUTL6",260,0)
 . . S SPEC=0 F  S SPEC=$O(^LAM("AI",LOINCPTR,WKLD,SPEC)) Q:'SPEC  D
"RTN","ECXUTL6",261,0)
 . . . S TA=0
"RTN","ECXUTL6",262,0)
 . . . F  S TA=$O(^LAM(WKLD,5,SPEC,1,TA)) Q:'TA  D
"RTN","ECXUTL6",263,0)
 . . . . S SPECD=^LAM(WKLD,5,SPEC,1,TA,0)
"RTN","ECXUTL6",264,0)
 . . . . S LTEST=$P(SPECD,"^",4)
"RTN","ECXUTL6",265,0)
 . . . . I LTEST,($P($G(^LAB(60,LTEST,64)),"^",2)=WKLD),($$GET1^DIQ(60,LTEST,3,"I")'="N") D
"RTN","ECXUTL6",266,0)
 . . . . . S ^TMP($J,"ECXUTL6",LOINCCK,WKLD,SPEC,LTEST)=$$GET1^DIQ(64,WKLD,.01)_"^"_$$GET1^DIQ(61,SPEC,.01)_"^"_$$GET1^DIQ(60,LTEST,.01)_"^"_LOINCCK
"RTN","ECXUTL6",267,0)
 Q
"RTN","ECXUTL6",268,0)
 ;
"RTN","ECXUTL6",269,0)
INPUTT ;
"RTN","ECXUTL6",270,0)
 N DIC S DIC="^DIC(40.7,",DIC(0)="EMZ",DIC("S")="I '$P(^(0),U,3)&($L($P(^(0),U,2)'=3)) Q"
"RTN","ECXUTL6",271,0)
 D ^DIC K:Y<0 X Q:Y<0
"RTN","ECXUTL6",272,0)
 S X=$S($D(Y(0)):$P(Y(0),U,2),1:"") K:X=""!($L(X)'=3) X K DIC
"RTN","ECXUTL6",273,0)
 Q
"VER")
8.0^22.0
"^DD",727.802,727.802,32,0)
PRINCIPAL DIAGNOSIS^F^^0;33^K:$L(X)>7!($L(X)<1) X
"^DD",727.802,727.802,32,.1)
Principal Diagnosis
"^DD",727.802,727.802,32,3)
Your answer must be 1 to 7 characters in length.
"^DD",727.802,727.802,32,21,0)
^^1^1^3110314^
"^DD",727.802,727.802,32,21,1,0)
Principal ICD diagnosis for this patient.
"^DD",727.802,727.802,32,23,0)
^.001^9^9^3110314^^^^
"^DD",727.802,727.802,32,23,1,0)
Using the "ATT1" cross reference on the PATIENT MOVEMENT file (#405) 
"^DD",727.802,727.802,32,23,2,0)
and the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4) in
"^DD",727.802,727.802,32,23,3,0)
the ADMISSION EXTRACT file (#727.802), DIAGNOSIS data is derived from the
"^DD",727.802,727.802,32,23,4,0)
PTF ENTRY field (.16) in the PATIENT MOVEMENT file (#405).  This PTF entry
"^DD",727.802,727.802,32,23,5,0)
data is a pointer to the PTF file (#45). Uses the ICD 1 field (#5) within
"^DD",727.802,727.802,32,23,6,0)
the 501 field (#50) multiple in the PTF file (#45) to obtain the pointer
"^DD",727.802,727.802,32,23,7,0)
value to the ICD DIAGNOSIS file (#80). This ICD diagnosis pointer value is
"^DD",727.802,727.802,32,23,8,0)
used to pull the DIAGNOSIS data from the CODE NUMBER field (#.01) in the
"^DD",727.802,727.802,32,23,9,0)
ICD DIAGNOSIS file (#80).
"^DD",727.802,727.802,32,"DT")
3110314
"^DD",727.802,727.802,91,0)
ADMIT SOURCE^F^^2;10^K:$L(X)>3!($L(X)<2) X
"^DD",727.802,727.802,91,3)
This is the source of admission PTF code.
"^DD",727.802,727.802,91,21,0)
^.001^2^2^3110314^^^^
"^DD",727.802,727.802,91,21,1,0)
This field contains the source of admission for the PTF entry.  This is a 
"^DD",727.802,727.802,91,21,2,0)
two character code in the format of 1 numeric and 1 alphanumeric. 
"^DD",727.802,727.802,91,23,0)
^^4^4^3110314^
"^DD",727.802,727.802,91,23,1,0)
Obtained via the PTF file (#45), SOURCE OF ADMISSION field (#20) which is 
"^DD",727.802,727.802,91,23,2,0)
a pointer to the SOURCE OF ADMISSION file (#45.1), PTF CODE field (#.01).
"^DD",727.802,727.802,91,23,3,0)
This is up to three characters long to account for any PTF code field
"^DD",727.802,727.802,91,23,4,0)
expansion.
"^DD",727.802,727.802,91,"DT")
3110314
"^DD",727.811,727.811,121,0)
DATE OF BIRTH^FO^^3;15^K:$L(X)>8!($L(X)<8) X
"^DD",727.811,727.811,121,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.811,727.811,121,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.811,727.811,121,3)
Answer must be 8 characters (YYYYMMDD) in length.
"^DD",727.811,727.811,121,21,0)
^.001^1^1^3110620^^^^
"^DD",727.811,727.811,121,21,1,0)
The patient's date of birth represented by an 8 character numeric string.
"^DD",727.811,727.811,121,23,0)
^.001^4^4^3110620^^
"^DD",727.811,727.811,121,23,1,0)
The data is derived by using the Patient No. - DFN (#4) field of this file
"^DD",727.811,727.811,121,23,2,0)
to retrieve the DATE OF BIRTH (#.03) field from the PATIENT (#2) file.
"^DD",727.811,727.811,121,23,3,0)
If Date of Birth cannot be determined, then January 1, 1942, is used as
"^DD",727.811,727.811,121,23,4,0)
default.
"^DD",727.811,727.811,121,"DT")
3110620
"^DD",727.813,727.813,45,0)
DATA NAME^F^^2;1^K:$L(X)>40!($L(X)<3) X
"^DD",727.813,727.813,45,3)
Answer must be 3-40 characters in length.
"^DD",727.813,727.813,45,21,0)
^^1^1^3110314^
"^DD",727.813,727.813,45,21,1,0)
This field is the Lab Test Data Name.  
"^DD",727.813,727.813,45,23,0)
^^7^7^3110314^
"^DD",727.813,727.813,45,23,1,0)
Obtained via the WKLD LOG FILE (#64.03), DATA NAME field (#20).
"^DD",727.813,727.813,45,23,2,0)
 
"^DD",727.813,727.813,45,23,3,0)
This field will allow lab management and DSS staff to know whether 
"^DD",727.813,727.813,45,23,4,0)
the entry is a panel test and if it has been designated as a separately
"^DD",727.813,727.813,45,23,5,0)
billable test.  If this field has a value then it is not a panel test and 
"^DD",727.813,727.813,45,23,6,0)
is individually billable.  If this field does not have a value then it's 
"^DD",727.813,727.813,45,23,7,0)
a panel test and is billable as a unit.
"^DD",727.813,727.813,45,"DT")
3100826
"^DD",727.815,727.815,16,0)
PROVIDER^F^^0;17^K:$L(X)>11!($L(X)<2) X
"^DD",727.815,727.815,16,.1)
Provider
"^DD",727.815,727.815,16,3)
Answer must be 2-11 characters in length.
"^DD",727.815,727.815,16,21,0)
^^4^4^3110321^
"^DD",727.815,727.815,16,21,1,0)
This character string is an IEN for the NEW PERSON file (#200);
"^DD",727.815,727.815,16,21,2,0)
a '2' has been appended to the beginning of the character string.
"^DD",727.815,727.815,16,21,3,0)
It represents the primary Provider who performed the procedure associated
"^DD",727.815,727.815,16,21,4,0)
with the Event Capture Patient record.
"^DD",727.815,727.815,16,23,0)
^.001^5^5^3110321^^
"^DD",727.815,727.815,16,23,1,0)
A character string of format "2"_IEN, where IEN is the internal 
"^DD",727.815,727.815,16,23,2,0)
entry number for the Provider in the NEW PERSON file (#200).
"^DD",727.815,727.815,16,23,3,0)
Data is derived by the returning local array (first node) of the calling
"^DD",727.815,727.815,16,23,4,0)
$$GETPRV^ECPRVMUT API (DBIA #4460) that returns the (#42) PROVIDER
"^DD",727.815,727.815,16,23,5,0)
MULTIPLE from the EVENT CAPTURE PATIENT File (#721).
"^DD",727.815,727.815,16,"DT")
2990517
"^DD",727.815,727.815,18,0)
PROVIDER #2^F^^0;19^K:$L(X)>11!($L(X)<2) X
"^DD",727.815,727.815,18,.1)
Provider #2
"^DD",727.815,727.815,18,3)
Answer must be 2-11 characters in length.
"^DD",727.815,727.815,18,21,0)
^.001^4^4^3110321^^
"^DD",727.815,727.815,18,21,1,0)
This character string is an IEN for the NEW PERSON file (#200);
"^DD",727.815,727.815,18,21,2,0)
a '2' has been appended to the beginning of the character string.
"^DD",727.815,727.815,18,21,3,0)
It represents the second assisting Provider who performed the procedure 
"^DD",727.815,727.815,18,21,4,0)
associated with the Event Capture Patient record.
"^DD",727.815,727.815,18,23,0)
^.001^5^5^3110321^^^^
"^DD",727.815,727.815,18,23,1,0)
A character string of format "2"_IEN, where IEN is the internal 
"^DD",727.815,727.815,18,23,2,0)
entry number for the Provider in the NEW PERSON file (#200).
"^DD",727.815,727.815,18,23,3,0)
Data is derived by the returning local array (second node) of the calling
"^DD",727.815,727.815,18,23,4,0)
$$GETPRV^ECPRVMUT API (DBIA #4460) that returns the (#42) PROVIDER
"^DD",727.815,727.815,18,23,5,0)
MULTIPLE from the EVENT CAPTURE PATIENT File (#721).    
"^DD",727.815,727.815,18,"DT")
2990517
"^DD",727.815,727.815,20,0)
PROVIDER #3^F^^0;21^K:$L(X)>11!($L(X)<2) X
"^DD",727.815,727.815,20,.1)
Provider #3
"^DD",727.815,727.815,20,3)
Answer must be 2-11 characters in length.
"^DD",727.815,727.815,20,21,0)
^^4^4^3110321^
"^DD",727.815,727.815,20,21,1,0)
This character string is an IEN for the NEW PERSON file (#200);
"^DD",727.815,727.815,20,21,2,0)
a '2' has been appended to the beginning of the character string.
"^DD",727.815,727.815,20,21,3,0)
It represents the third assisting Provider who performed the procedure 
"^DD",727.815,727.815,20,21,4,0)
associated with the Event Capture Patient record.
"^DD",727.815,727.815,20,23,0)
^.001^5^5^3110321^^
"^DD",727.815,727.815,20,23,1,0)
A character string of format "2"_IEN, where IEN is the internal 
"^DD",727.815,727.815,20,23,2,0)
entry number for the Provider in the NEW PERSON file (#200).
"^DD",727.815,727.815,20,23,3,0)
Data is derived by the returning local array (third node) of the calling
"^DD",727.815,727.815,20,23,4,0)
$$GETPRV^ECPRVMUT API (DBIA #4460) that returns the (#42) PROVIDER
"^DD",727.815,727.815,20,23,5,0)
MULTIPLE from the EVENT CAPTURE PATIENT File (#721).    
"^DD",727.815,727.815,20,"DT")
2990517
"^DD",727.815,727.815,100,0)
PROVIDER #4^F^^2;21^K:$L(X)>11!($L(X)<2) X
"^DD",727.815,727.815,100,3)
Answer must be 2-11 characters in length.
"^DD",727.815,727.815,100,21,0)
^^4^4^3110422^
"^DD",727.815,727.815,100,21,1,0)
This character string is an IEN for the NEW PERSON file (#200); a '2' has
"^DD",727.815,727.815,100,21,2,0)
been appended to the beginning of the character string.  It represents the
"^DD",727.815,727.815,100,21,3,0)
fourth assisting Provider who performed the procedure associated with this
"^DD",727.815,727.815,100,21,4,0)
Event Capture Patient record.
"^DD",727.815,727.815,100,23,0)
^.001^5^5^3110422^^^^
"^DD",727.815,727.815,100,23,1,0)
A character string of format "2"_IEN, where IEN is the internal 
"^DD",727.815,727.815,100,23,2,0)
entry number for the Provider in the NEW PERSON file (#200).
"^DD",727.815,727.815,100,23,3,0)
Data is derived by the returning local array (fourth node) of the calling
"^DD",727.815,727.815,100,23,4,0)
$$GETPRV^ECPRVMUT API (DBIA #4460) that returns the (#42) PROVIDER
"^DD",727.815,727.815,100,23,5,0)
MULTIPLE from the EVENT CAPTURE PATIENT File (#721).    
"^DD",727.815,727.815,100,"DT")
3110311
"^DD",727.815,727.815,101,0)
PROVIDER #4 PERSON CLASS^F^^2;22^K:$L(X)>7!($L(X)<7) X
"^DD",727.815,727.815,101,3)
Answer must be 7 characters in length.
"^DD",727.815,727.815,101,21,0)
^.001^2^2^3110325^^^^
"^DD",727.815,727.815,101,21,1,0)
This is the VA code of the Person Class of the fourth assisting Provider
"^DD",727.815,727.815,101,21,2,0)
as of the date of this record.
"^DD",727.815,727.815,101,23,0)
^^4^4^3110325^
"^DD",727.815,727.815,101,23,1,0)
Derived by calling $$PRVCLASS^ECXUTL(IEN,DATE), where IEN is the IEN of 
"^DD",727.815,727.815,101,23,2,0)
the NEW PERSON (#200) File.  Copied from field VA CODE (#5) of the PERSON
"^DD",727.815,727.815,101,23,3,0)
CLASS (#8932.1) file, as pointed to by the Person Class (#.01) field of
"^DD",727.815,727.815,101,23,4,0)
the PERSON CLASS (#8932.1) multiple of the NEW PERSON (#200) file.
"^DD",727.815,727.815,101,"DT")
3110324
"^DD",727.815,727.815,102,0)
PROVIDER #4 NPI^F^^2;23^K:$L(X)>10!($L(X)<10) X
"^DD",727.815,727.815,102,3)
Answer must be 10 characters in length.
"^DD",727.815,727.815,102,21,0)
^.001^2^2^3110325^^
"^DD",727.815,727.815,102,21,1,0)
A standard unique life-long identifier of the fourth assisting provider of
"^DD",727.815,727.815,102,21,2,0)
health care services.
"^DD",727.815,727.815,102,23,0)
^.001^1^1^3110325^^
"^DD",727.815,727.815,102,23,1,0)
The NPI is retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.815,727.815,102,"DT")
3110324
"^DD",727.815,727.815,103,0)
PROVIDER #5^F^^2;24^K:$L(X)>11!($L(X)<2) X
"^DD",727.815,727.815,103,3)
Answer must be 2-11 characters in length.
"^DD",727.815,727.815,103,21,0)
^^4^4^3110422^
"^DD",727.815,727.815,103,21,1,0)
This character string is an IEN for the NEW PERSON file (#200); a '2' has
"^DD",727.815,727.815,103,21,2,0)
been appended to the beginning of the character string.  It represents the
"^DD",727.815,727.815,103,21,3,0)
fifth assisting Provider who performed the procedure associated with this
"^DD",727.815,727.815,103,21,4,0)
Event Capture Patient record.
"^DD",727.815,727.815,103,23,0)
^.001^5^5^3110422^^^^
"^DD",727.815,727.815,103,23,1,0)
A character string of format "2"_IEN, where IEN is the internal 
"^DD",727.815,727.815,103,23,2,0)
entry number for the Provider in the NEW PERSON file (#200).
"^DD",727.815,727.815,103,23,3,0)
Data is derived by the returning local array (fifth node) of the calling  
"^DD",727.815,727.815,103,23,4,0)
$$GETPRV^ECPRVMUT API (DBIA #4460) that returns the (#42) PROVIDER
"^DD",727.815,727.815,103,23,5,0)
MULTIPLE from the EVENT CAPTURE PATIENT File (#721).    
"^DD",727.815,727.815,103,"DT")
3110311
"^DD",727.815,727.815,104,0)
PROVIDER #5 PERSON CLASS^F^^2;25^K:$L(X)>7!($L(X)<7) X
"^DD",727.815,727.815,104,3)
Answer must be 7 characters in length.
"^DD",727.815,727.815,104,21,0)
^.001^2^2^3110324^^^
"^DD",727.815,727.815,104,21,1,0)
This is the VA code of the Person Class of the fifth assisting Provider as
"^DD",727.815,727.815,104,21,2,0)
of the date of this record.
"^DD",727.815,727.815,104,23,0)
^.001^4^4^3110324^^
"^DD",727.815,727.815,104,23,1,0)
Derived by calling $$PRVCLASS^ECXUTL(IEN,DATE), where IEN is the IEN of 
"^DD",727.815,727.815,104,23,2,0)
the NEW PERSON (#200) File.  Copied from field VA CODE (#5) of the PERSON
"^DD",727.815,727.815,104,23,3,0)
CLASS (#8932.1) file, as pointed to by the Person Class (#.01) field of
"^DD",727.815,727.815,104,23,4,0)
the PERSON CLASS (#8932.1) multiple of the NEW PERSON (#200) file.
"^DD",727.815,727.815,104,"DT")
3110324
"^DD",727.815,727.815,105,0)
PROVIDER #5 NPI^F^^2;26^K:$L(X)>10!($L(X)<10) X
"^DD",727.815,727.815,105,3)
Answer must be 10 characters in length.
"^DD",727.815,727.815,105,21,0)
^^2^2^3110324^
"^DD",727.815,727.815,105,21,1,0)
A standard unique life-long identifier of the fifth assisting provider of
"^DD",727.815,727.815,105,21,2,0)
health care services.
"^DD",727.815,727.815,105,23,0)
^^1^1^3110324^
"^DD",727.815,727.815,105,23,1,0)
The NPI is retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.815,727.815,105,"DT")
3110324
"^DD",727.825,727.825,16,0)
PROVIDER^F^^0;17^K:$L(X)>11!($L(X)<2) X
"^DD",727.825,727.825,16,.1)
Provider
"^DD",727.825,727.825,16,3)
Answer must be 2-11 characters in length.
"^DD",727.825,727.825,16,21,0)
^.001^4^4^3110321^^^
"^DD",727.825,727.825,16,21,1,0)
This character string is an IEN for the NEW PERSON file (#200);
"^DD",727.825,727.825,16,21,2,0)
a '2' has been appended to the beginning of the character string.
"^DD",727.825,727.825,16,21,3,0)
It represents the Provider who performed the procedure associated
"^DD",727.825,727.825,16,21,4,0)
with the A&SP Clinic Visit record.
"^DD",727.825,727.825,16,23,0)
^.001^9^9^3110321^^
"^DD",727.825,727.825,16,23,1,0)
A character string of format "2"_IEN, where IEN is the internal 
"^DD",727.825,727.825,16,23,2,0)
entry number for the Provider in the NEW PERSON file (#200).
"^DD",727.825,727.825,16,23,3,0)
 
"^DD",727.825,727.825,16,23,4,0)
Data is obtained by the existence of the (#.07) EVENT CAPTURE CODE
"^DD",727.825,727.825,16,23,5,0)
POINTER of the first (#10) PROCEDURE CODE multiple. If the pointer exists,
"^DD",727.825,727.825,16,23,6,0)
the data is derived from the (#.05) EC PROCEDURE PROVIDER of the (#15)
"^DD",727.825,727.825,16,23,7,0)
EVENT CAPTURE PROCEDURE pointer multiple. If the pointer doesn't exist,
"^DD",727.825,727.825,16,23,8,0)
the data is derived from the (#.05) PROCEDURE PROVIDER of the first (#10)
"^DD",727.825,727.825,16,23,9,0)
PROCEDURE CODE multiple.
"^DD",727.825,727.825,16,"DT")
2990517
"^DD",727.825,727.825,18,0)
PROVIDER #2^F^^0;19^K:$L(X)>11!($L(X)<2) X
"^DD",727.825,727.825,18,.1)
Provider #2
"^DD",727.825,727.825,18,3)
Answer must be 2-11 characters in length.
"^DD",727.825,727.825,18,21,0)
^.001^3^3^3110321^^^
"^DD",727.825,727.825,18,21,1,0)
The second provider associated with the patient encounter. It represents
"^DD",727.825,727.825,18,21,2,0)
an assisting Provider who performed the procedure associated with the A&SP
"^DD",727.825,727.825,18,21,3,0)
Clinic Visit record.  
"^DD",727.825,727.825,18,23,0)
^.001^4^4^3110321^^^
"^DD",727.825,727.825,18,23,1,0)
A character string of format "2"_IEN, where IEN is the internal entry
"^DD",727.825,727.825,18,23,2,0)
number for the Provider in the NEW PERSON file (#200).  Data is pulled
"^DD",727.825,727.825,18,23,3,0)
from the first (#2.7) SECONDARY PROVIDER multiple in the A&SP CLINIC
"^DD",727.825,727.825,18,23,4,0)
VISIT file (#509850.6).
"^DD",727.825,727.825,18,"DT")
2990517
"^DD",727.825,727.825,20,0)
PROVIDER #3^F^^0;21^K:$L(X)>11!($L(X)<2) X
"^DD",727.825,727.825,20,.1)
Provider #3
"^DD",727.825,727.825,20,3)
Answer must be 2-11 characters in length.
"^DD",727.825,727.825,20,21,0)
^^3^3^3110315^
"^DD",727.825,727.825,20,21,1,0)
The third provider associated with the patient encounter. It represents an
"^DD",727.825,727.825,20,21,2,0)
assisting Provider who performed the procedure associated with the A&SP
"^DD",727.825,727.825,20,21,3,0)
Clinic Visit record.  
"^DD",727.825,727.825,20,23,0)
^^4^4^3110315^
"^DD",727.825,727.825,20,23,1,0)
A character string of format "2"_IEN, where IEN is the internal entry
"^DD",727.825,727.825,20,23,2,0)
number for the Provider in the NEW PERSON file (#200).  Data is pulled
"^DD",727.825,727.825,20,23,3,0)
from the second (#2.7) SECONDARY PROVIDER multiple in the A&SP CLINIC 
"^DD",727.825,727.825,20,23,4,0)
VISIT file (#509850.6).
"^DD",727.825,727.825,20,"DT")
2990517
"^DD",727.825,727.825,100,0)
PROVIDER #4^F^^2;21^K:$L(X)>11!($L(X)<2) X
"^DD",727.825,727.825,100,3)
Answer must be 2-11 characters in length.
"^DD",727.825,727.825,100,21,0)
^.001^3^3^3110325^^^
"^DD",727.825,727.825,100,21,1,0)
The fourth provider associated with the patient encounter. It represents
"^DD",727.825,727.825,100,21,2,0)
an assisting Provider who performed the procedure associated with the A&SP
"^DD",727.825,727.825,100,21,3,0)
Clinic Visit record.
"^DD",727.825,727.825,100,23,0)
^.001^4^4^3110325^^
"^DD",727.825,727.825,100,23,1,0)
A character string of format "2"_IEN, where IEN is the internal entry
"^DD",727.825,727.825,100,23,2,0)
number for the Provider in the NEW PERSON file (#200).  Data is pulled
"^DD",727.825,727.825,100,23,3,0)
from the third (#2.7) SECONDARY PROVIDER multiple in the A&SP CLINIC
"^DD",727.825,727.825,100,23,4,0)
VISIT file (#509850.6).
"^DD",727.825,727.825,100,"DT")
3110311
"^DD",727.825,727.825,101,0)
PROVIDER #4 PERSON CLASS^F^^2;22^K:$L(X)>7!($L(X)<7) X
"^DD",727.825,727.825,101,3)
Answer must be 7 characters in length.
"^DD",727.825,727.825,101,21,0)
^.001^2^2^3110325^^
"^DD",727.825,727.825,101,21,1,0)
This is the VA code of the Person Class of the fourth assisting Provider
"^DD",727.825,727.825,101,21,2,0)
as of the date of this record.
"^DD",727.825,727.825,101,23,0)
^^4^4^3110325^
"^DD",727.825,727.825,101,23,1,0)
Derived by calling $$PRVCLASS^ECXUTL(IEN,DATE), where IEN is the IEN of 
"^DD",727.825,727.825,101,23,2,0)
the NEW PERSON (#200) File.  Copied from field VA CODE (#5) of the PERSON
"^DD",727.825,727.825,101,23,3,0)
CLASS (#8932.1) file, as pointed to by the Person Class (#.01) field of
"^DD",727.825,727.825,101,23,4,0)
the PERSON CLASS (#8932.1) multiple of the NEW PERSON (#200) file.
"^DD",727.825,727.825,101,"DT")
3110325
"^DD",727.825,727.825,102,0)
PROVIDER #4 NPI^F^^2;23^K:$L(X)>10!($L(X)<10) X
"^DD",727.825,727.825,102,3)
Answer must be 10 characters in length.
"^DD",727.825,727.825,102,21,0)
^^2^2^3110325^
"^DD",727.825,727.825,102,21,1,0)
A standard unique life-long identifier of the fourth assisting provider of
"^DD",727.825,727.825,102,21,2,0)
health care service.
"^DD",727.825,727.825,102,23,0)
^^1^1^3110325^
"^DD",727.825,727.825,102,23,1,0)
The NPI is retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.825,727.825,102,"DT")
3110325
"^DD",727.825,727.825,103,0)
PROVIDER #5^F^^2;24^K:$L(X)>11!($L(X)<2) X
"^DD",727.825,727.825,103,3)
Answer must be 2-11 characters in length.
"^DD",727.825,727.825,103,21,0)
^.001^3^3^3110315^^
"^DD",727.825,727.825,103,21,1,0)
The fifth provider associated with the patient encounter. It represents an
"^DD",727.825,727.825,103,21,2,0)
assisting Provider who performed the procedure associated with the A&SP
"^DD",727.825,727.825,103,21,3,0)
Clinic Visit record.
"^DD",727.825,727.825,103,23,0)
^^4^4^3110315^
"^DD",727.825,727.825,103,23,1,0)
A character string of format "2"_IEN, where IEN is the internal entry
"^DD",727.825,727.825,103,23,2,0)
number for the Provider in the NEW PERSON file (#200).  Data is pulled
"^DD",727.825,727.825,103,23,3,0)
from the fourth (#2.7) SECONDARY PROVIDER multiple in the A&SP CLINIC
"^DD",727.825,727.825,103,23,4,0)
VISIT file (#509850.6).
"^DD",727.825,727.825,103,"DT")
3110311
"^DD",727.825,727.825,104,0)
PROVIDER #5 PERSON CLASS^F^^2;25^K:$L(X)>7!($L(X)<7) X
"^DD",727.825,727.825,104,3)
Answer must be 7 characters in length.
"^DD",727.825,727.825,104,21,0)
^.001^2^2^3110325^^
"^DD",727.825,727.825,104,21,1,0)
This is the VA code of the Person Class of the fifth assisting Provider as
"^DD",727.825,727.825,104,21,2,0)
of the date of this record.
"^DD",727.825,727.825,104,23,0)
^^4^4^3110325^
"^DD",727.825,727.825,104,23,1,0)
Derived by calling $$PRVCLASS^ECXUTL(IEN,DATE), where IEN is the IEN of 
"^DD",727.825,727.825,104,23,2,0)
the NEW PERSON (#200) File.  Copied from field VA CODE (#5) of the PERSON
"^DD",727.825,727.825,104,23,3,0)
CLASS (#8932.1) file, as pointed to by the Person Class (#.01) field of
"^DD",727.825,727.825,104,23,4,0)
the PERSON CLASS (#8932.1) multiple of the NEW PERSON (#200) file.
"^DD",727.825,727.825,104,"DT")
3110325
"^DD",727.825,727.825,105,0)
PROVIDER #5 NPI^F^^2;26^K:$L(X)>10!($L(X)<10) X
"^DD",727.825,727.825,105,3)
Answer must be 10 characters in length.
"^DD",727.825,727.825,105,21,0)
^^2^2^3110325^
"^DD",727.825,727.825,105,21,1,0)
A standard unique life-long identifier of the fifth assisting provider of
"^DD",727.825,727.825,105,21,2,0)
health care service.
"^DD",727.825,727.825,105,23,0)
^^1^1^3110325^
"^DD",727.825,727.825,105,23,1,0)
The NPI is retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.825,727.825,105,"DT")
3110325
"^DD",727.826,727.826,10,0)
FEEDER KEY^RF^^0;11^K:$L(X)>20!($L(X)<7) X
"^DD",727.826,727.826,10,.1)
Feeder Key
"^DD",727.826,727.826,10,3)
Answer must be 7-20 characters in length.
"^DD",727.826,727.826,10,10)
Data in the RECORD OF PROS APPLIANCE/REPAIR file (#660).  See Technical Description.
"^DD",727.826,727.826,10,21,0)
^^41^41^3100818^
"^DD",727.826,727.826,10,21,1,0)
FEEDER KEY is the concatenation of the following elements.  They are listed
"^DD",727.826,727.826,10,21,2,0)
    in the order they are to appear in the FEEDER KEY.
"^DD",727.826,727.826,10,21,3,0)
 
"^DD",727.826,727.826,10,21,4,0)
1) HCPCS Code - This is the 5-digit HCPCS Code in the patient's prosthetic
"^DD",727.826,727.826,10,21,5,0)
    record.
"^DD",727.826,727.826,10,21,6,0)
 
"^DD",727.826,727.826,10,21,7,0)
2) Type of Transaction - This is the Type of Transaction code in the
"^DD",727.826,727.826,10,21,8,0)
      patient's prosthetic record.
"^DD",727.826,727.826,10,21,9,0)
   (a) If Type of Transaction in the patient's prosthetic record is "X"
"^DD",727.826,727.826,10,21,10,0)
       (Repair), the Type of Transaction code in the FEEDER KEY is X.
"^DD",727.826,727.826,10,21,11,0)
   (b) If the Type of Transaction in the patient's prosthetic record is 
"^DD",727.826,727.826,10,21,12,0)
       "I" (Initial Issue),  "R" (Replace) or "S" (Spare), the Type of
"^DD",727.826,727.826,10,21,13,0)
       Transaction code in the FEEDER KEY is N.
"^DD",727.826,727.826,10,21,14,0)
   (c) If the Type of Transaction in the patient's prosthetic record is
"^DD",727.826,727.826,10,21,15,0)
       "5" (Rental), the Type of Transaction code in the FEEDER KEY is R.
"^DD",727.826,727.826,10,21,16,0)
   (d) Type of Transaction is considered the first suffix of the FEEDER
"^DD",727.826,727.826,10,21,17,0)
       KEY.
"^DD",727.826,727.826,10,21,18,0)
 
"^DD",727.826,727.826,10,21,19,0)
3) Source - This is the Source in the patient's prosthetic record.
"^DD",727.826,727.826,10,21,20,0)
   (a) If Source in the patient's prosthetic record is VA, the Source code
"^DD",727.826,727.826,10,21,21,0)
       in the FEEDER KEY is V (VA).
"^DD",727.826,727.826,10,21,22,0)
   (b) If Source in the patient's prosthetic record is Commercial, the
"^DD",727.826,727.826,10,21,23,0)
       Source code in the FEEDER KEY is C (Commercial).
"^DD",727.826,727.826,10,21,24,0)
   (c) Source is considered the second suffix of the FEEDER KEY.
"^DD",727.826,727.826,10,21,25,0)
 
"^DD",727.826,727.826,10,21,26,0)
4) Station - If this is a Lab Transaction, the station is either the
"^DD",727.826,727.826,10,21,27,0)
      Requesting or Receiving Station.  
"^DD",727.826,727.826,10,21,28,0)
   (a) 3-digit Receiving Station concatenated with REC if the FEEDER
"^DD",727.826,727.826,10,21,29,0)
       LOCATION ends in ORD, or
"^DD",727.826,727.826,10,21,30,0)
   (b) 5-digit Receiving Station (includes the 2-letter division suffix)
"^DD",727.826,727.826,10,21,31,0)
       concatenated with REC if the FEEDER LOCATION ends in ORD, or
"^DD",727.826,727.826,10,21,32,0)
   (c) 3-digit Requesting Station concatenated with REQ if the FEEDER
"^DD",727.826,727.826,10,21,33,0)
       LOCATION ends in LAB, or
"^DD",727.826,727.826,10,21,34,0)
   (d) 5-digit Requesting Station (includes the 2-letter division suffix)
"^DD",727.826,727.826,10,21,35,0)
       concatenated with REQ if the FEEDER LOCATION ends in LAB.
"^DD",727.826,727.826,10,21,36,0)
   (e) Station is considered the third suffix of the FEEDER KEY.
"^DD",727.826,727.826,10,21,37,0)
 
"^DD",727.826,727.826,10,21,38,0)
5) If this is a Non-Lab Transaction, there is no third suffix for the
"^DD",727.826,727.826,10,21,39,0)
      FEEDER KEY.
"^DD",727.826,727.826,10,21,40,0)
 
"^DD",727.826,727.826,10,21,41,0)
This field is required for creation of the extract record.
"^DD",727.826,727.826,10,23,0)
^^13^13^3100818^
"^DD",727.826,727.826,10,23,1,0)
Data for the FEEDER KEY is derived from the RECORD OF PROS APPLIANCE/REPAIR
"^DD",727.826,727.826,10,23,2,0)
    file (#660).  Depending how the FEEDER KEY is constructed, the
"^DD",727.826,727.826,10,23,3,0)
    components for the FEEDER KEY are derived from the following fields in
"^DD",727.826,727.826,10,23,4,0)
    the RECORD OF PROS APPLIANCE/REPAIR file (#660):
"^DD",727.826,727.826,10,23,5,0)
1) HCPCS (#4.1) - HCPCS is a pointer to the CPT CODE field (#.01) of the
"^DD",727.826,727.826,10,23,6,0)
    CPT file (#81)
"^DD",727.826,727.826,10,23,7,0)
2) TYPE OF TRANSACTION (#2)
"^DD",727.826,727.826,10,23,8,0)
3) SOURCE (#12)
"^DD",727.826,727.826,10,23,9,0)
4) RECEIVING STATION (#70).  RECEIVING STATION is a pointer to the
"^DD",727.826,727.826,10,23,10,0)
    INSTITUTION file (#4).
"^DD",727.826,727.826,10,23,11,0)
5) REQUESTING STATION (#40).  REQUESTING STATION is a pointer to the
"^DD",727.826,727.826,10,23,12,0)
    INSTITUTION file (#4).
"^DD",727.826,727.826,10,23,13,0)
6) STATION (#8).  STATION is a pointer to the INSTITUTION file (#4).
"^DD",727.826,727.826,10,"DT")
2981224
"^DD",727.827,727.827,96,0)
SECONDARY PROVIDER #1^F^^3;4^K:$L(X)>11!($L(X)<2) X
"^DD",727.827,727.827,96,3)
The first assisting provider associated with this clinic visit (2-11 chars).
"^DD",727.827,727.827,96,21,0)
^^3^3^3110422^
"^DD",727.827,727.827,96,21,1,0)
This character string is an IEN for the NEW PERSON file (#200); a '2' has 
"^DD",727.827,727.827,96,21,2,0)
been appended to the beginning of the character string.  It represents 
"^DD",727.827,727.827,96,21,3,0)
the first assisting provider associated with this clinic visit. 
"^DD",727.827,727.827,96,23,0)
^.001^5^5^3110422^^^^
"^DD",727.827,727.827,96,23,1,0)
Data is derived by making a call to the ENCEVENT^PXAPI (DBIA1889-F) API
"^DD",727.827,727.827,96,23,2,0)
using the clinic encounter, returning the secondary provider IEN.
"^DD",727.827,727.827,96,23,3,0)
 
"^DD",727.827,727.827,96,23,4,0)
A character string of format "2"_IEN, where IEN is the internal entry
"^DD",727.827,727.827,96,23,5,0)
number for the secondary provider in the NEW PERSON file (#200).
"^DD",727.827,727.827,96,"DT")
3110310
"^DD",727.827,727.827,97,0)
SECONDARY PROVIDER #1 PC^F^^3;5^K:$L(X)>7!($L(X)<7) X
"^DD",727.827,727.827,97,3)
Answer must be 7 characters in length.
"^DD",727.827,727.827,97,21,0)
^.001^2^2^3110324^^^^
"^DD",727.827,727.827,97,21,1,0)
The VA code of the Person Class of the first assisting provider as of the
"^DD",727.827,727.827,97,21,2,0)
date of this record.
"^DD",727.827,727.827,97,23,0)
^^4^4^3110324^
"^DD",727.827,727.827,97,23,1,0)
Derived by calling $$PRVCLASS^ECXUTL(IEN,DATE), where IEN is the IEN of 
"^DD",727.827,727.827,97,23,2,0)
the NEW PERSON (#200) File.  Copied from field VA CODE (#5) of the PERSON
"^DD",727.827,727.827,97,23,3,0)
CLASS (#8932.1) file, as pointed to by the Person Class (#.01) field of
"^DD",727.827,727.827,97,23,4,0)
the PERSON CLASS (#8932.1) multiple of the NEW PERSON (#200) file.
"^DD",727.827,727.827,97,"DT")
3110310
"^DD",727.827,727.827,98,0)
SECONDARY PROVIDER #1 NPI^F^^3;6^K:$L(X)>10!($L(X)<10) X
"^DD",727.827,727.827,98,3)
Answer must be 10 characters in length.
"^DD",727.827,727.827,98,21,0)
^^2^2^3110422^
"^DD",727.827,727.827,98,21,1,0)
A standard unique life-long identifier of the first assisting provider
"^DD",727.827,727.827,98,21,2,0)
associated with this clinic visit.
"^DD",727.827,727.827,98,23,0)
^.001^1^1^3110422^^^
"^DD",727.827,727.827,98,23,1,0)
The NPI is retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.827,727.827,98,"DT")
3110324
"^DD",727.827,727.827,99,0)
SECONDARY PROVIDER #2^F^^3;7^K:$L(X)>11!($L(X)<2) X
"^DD",727.827,727.827,99,3)
The second assisting provider associated with this clinic visit (2-11 chars).
"^DD",727.827,727.827,99,21,0)
^^3^3^3110422^
"^DD",727.827,727.827,99,21,1,0)
This character string is an IEN for the NEW PERSON file (#200); a '2' has
"^DD",727.827,727.827,99,21,2,0)
been appended to the beginning of the character string.  It represents the
"^DD",727.827,727.827,99,21,3,0)
second assisting provider associated with this clinic visit.
"^DD",727.827,727.827,99,23,0)
^.001^5^5^3110422^^^^
"^DD",727.827,727.827,99,23,1,0)
Data is derived by making a call to the ENCEVENT^PXAPI (DBIA1889-F) API
"^DD",727.827,727.827,99,23,2,0)
using the clinic encounter, returning the secondary provider IEN.
"^DD",727.827,727.827,99,23,3,0)
 
"^DD",727.827,727.827,99,23,4,0)
A character string of format "2"_IEN, where IEN is the internal entry
"^DD",727.827,727.827,99,23,5,0)
number for the secondary provider in the NEW PERSON file (#200).
"^DD",727.827,727.827,99,"DT")
3110310
"^DD",727.827,727.827,100,0)
SECONDARY PROVIDER #2 PC^F^^3;8^K:$L(X)>7!($L(X)<7) X
"^DD",727.827,727.827,100,3)
Answer must be 7 characters in length.
"^DD",727.827,727.827,100,21,0)
^.001^2^2^3110324^^^^
"^DD",727.827,727.827,100,21,1,0)
The VA code of the Person Class of the second assisting provider as of the
"^DD",727.827,727.827,100,21,2,0)
date of this record.
"^DD",727.827,727.827,100,23,0)
^^4^4^3110324^
"^DD",727.827,727.827,100,23,1,0)
Derived by calling $$PRVCLASS^ECXUTL(IEN,DATE), where IEN is the IEN of 
"^DD",727.827,727.827,100,23,2,0)
the NEW PERSON (#200) File.  Copied from field VA CODE (#5) of the PERSON
"^DD",727.827,727.827,100,23,3,0)
CLASS (#8932.1) file, as pointed to by the Person Class (#.01) field of
"^DD",727.827,727.827,100,23,4,0)
the PERSON CLASS (#8932.1) multiple of the NEW PERSON (#200) file.
"^DD",727.827,727.827,100,"DT")
3110310
"^DD",727.827,727.827,101,0)
SECONDARY PROVIDER #2 NPI^F^^3;9^K:$L(X)>10!($L(X)<10) X
"^DD",727.827,727.827,101,3)
Answer must be 10 characters in length.
"^DD",727.827,727.827,101,21,0)
^^2^2^3110422^
"^DD",727.827,727.827,101,21,1,0)
A standard unique life-long identifier of the second assisting provider
"^DD",727.827,727.827,101,21,2,0)
associated with this clinic visit.
"^DD",727.827,727.827,101,23,0)
^.001^1^1^3110422^^^
"^DD",727.827,727.827,101,23,1,0)
The NPI is retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.827,727.827,101,"DT")
3110324
"^DD",727.827,727.827,102,0)
SECONDARY PROVIDER #3^F^^3;10^K:$L(X)>11!($L(X)<2) X
"^DD",727.827,727.827,102,3)
The third assisting provider associated with this clinic visit (2-11 chars).
"^DD",727.827,727.827,102,21,0)
^^3^3^3110422^
"^DD",727.827,727.827,102,21,1,0)
This character string is an IEN for the NEW PERSON file (#200); a '2' has
"^DD",727.827,727.827,102,21,2,0)
been appended to the beginning of the character string.  It represents the
"^DD",727.827,727.827,102,21,3,0)
third assisting provider associated with this clinic visit.
"^DD",727.827,727.827,102,23,0)
^.001^5^5^3110422^^^^
"^DD",727.827,727.827,102,23,1,0)
Data is derived by making a call to the ENCEVENT^PXAPI (DBIA1889-F) API
"^DD",727.827,727.827,102,23,2,0)
using the clinic encounter, returning the secondary provider IEN.
"^DD",727.827,727.827,102,23,3,0)
 
"^DD",727.827,727.827,102,23,4,0)
A character string of format "2"_IEN, where IEN is the internal entry
"^DD",727.827,727.827,102,23,5,0)
number for the secondary provider in the NEW PERSON file (#200).
"^DD",727.827,727.827,102,"DT")
3110310
"^DD",727.827,727.827,103,0)
SECONDARY PROVIDER #3 PC^F^^3;11^K:$L(X)>7!($L(X)<7) X
"^DD",727.827,727.827,103,3)
Answer must be 7 characters in length.
"^DD",727.827,727.827,103,21,0)
^.001^2^2^3110324^^^^
"^DD",727.827,727.827,103,21,1,0)
The VA code of the Person Class of the third assisting provider as of the
"^DD",727.827,727.827,103,21,2,0)
date of this record.
"^DD",727.827,727.827,103,23,0)
^^4^4^3110324^
"^DD",727.827,727.827,103,23,1,0)
Derived by calling $$PRVCLASS^ECXUTL(IEN,DATE), where IEN is the IEN of 
"^DD",727.827,727.827,103,23,2,0)
the NEW PERSON (#200) File.  Copied from field VA CODE (#5) of the PERSON
"^DD",727.827,727.827,103,23,3,0)
CLASS (#8932.1) file, as pointed to by the Person Class (#.01) field of
"^DD",727.827,727.827,103,23,4,0)
the PERSON CLASS (#8932.1) multiple of the NEW PERSON (#200) file.
"^DD",727.827,727.827,103,"DT")
3110310
"^DD",727.827,727.827,104,0)
SECONDARY PROVIDER #3 NPI^F^^3;12^K:$L(X)>10!($L(X)<10) X
"^DD",727.827,727.827,104,3)
Answer must be 10 characters in length.
"^DD",727.827,727.827,104,21,0)
^^2^2^3110422^
"^DD",727.827,727.827,104,21,1,0)
A standard unique life-long identifier of the third assisting provider
"^DD",727.827,727.827,104,21,2,0)
associated with this clinic visit.
"^DD",727.827,727.827,104,23,0)
^.001^1^1^3110422^^^^
"^DD",727.827,727.827,104,23,1,0)
The NPI is retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.827,727.827,104,"DT")
3110324
"^DD",727.827,727.827,105,0)
SECONDARY PROVIDER #4^F^^3;13^K:$L(X)>11!($L(X)<2) X
"^DD",727.827,727.827,105,3)
The fourth assisting provider associated with this clinic visit (2-11 chars).
"^DD",727.827,727.827,105,21,0)
^.001^3^3^3110422^^
"^DD",727.827,727.827,105,21,1,0)
This character string is an IEN for the NEW PERSON file (#200); a '2' has
"^DD",727.827,727.827,105,21,2,0)
been appended to the beginning of the character string.  It represents the
"^DD",727.827,727.827,105,21,3,0)
fourth assisting provider associated with this clinic visit.
"^DD",727.827,727.827,105,23,0)
^.001^5^5^3110422^^^^
"^DD",727.827,727.827,105,23,1,0)
Data is derived by making a call to the ENCEVENT^PXAPI (DBIA1889-F) API
"^DD",727.827,727.827,105,23,2,0)
using the clinic encounter, returning the secondary provider IEN.
"^DD",727.827,727.827,105,23,3,0)
 
"^DD",727.827,727.827,105,23,4,0)
A character string of format "2"_IEN, where IEN is the internal entry
"^DD",727.827,727.827,105,23,5,0)
number for the secondary provider in the NEW PERSON file (#200).
"^DD",727.827,727.827,105,"DT")
3110310
"^DD",727.827,727.827,106,0)
SECONDARY PROVIDER #4 PC^F^^3;14^K:$L(X)>7!($L(X)<7) X
"^DD",727.827,727.827,106,3)
Answer must be 7 characters in length.
"^DD",727.827,727.827,106,21,0)
^.001^2^2^3110324^^^^
"^DD",727.827,727.827,106,21,1,0)
The VA code of the Person Class of the fourth assisting provider as of the
"^DD",727.827,727.827,106,21,2,0)
date of this record.
"^DD",727.827,727.827,106,23,0)
^^4^4^3110324^
"^DD",727.827,727.827,106,23,1,0)
Derived by calling $$PRVCLASS^ECXUTL(IEN,DATE), where IEN is the IEN of 
"^DD",727.827,727.827,106,23,2,0)
the NEW PERSON (#200) File.  Copied from field VA CODE (#5) of the PERSON
"^DD",727.827,727.827,106,23,3,0)
CLASS (#8932.1) file, as pointed to by the Person Class (#.01) field of
"^DD",727.827,727.827,106,23,4,0)
the PERSON CLASS (#8932.1) multiple of the NEW PERSON (#200) file.
"^DD",727.827,727.827,106,"DT")
3110310
"^DD",727.827,727.827,107,0)
SECONDARY PROVIDER #4 NPI^F^^3;15^K:$L(X)>10!($L(X)<10) X
"^DD",727.827,727.827,107,3)
Answer must be 10 characters in length.
"^DD",727.827,727.827,107,21,0)
^^2^2^3110422^
"^DD",727.827,727.827,107,21,1,0)
A standard unique life-long identifier of the fourth assisting provider
"^DD",727.827,727.827,107,21,2,0)
associated with this clinic visit.
"^DD",727.827,727.827,107,23,0)
^.001^1^1^3110422^^^
"^DD",727.827,727.827,107,23,1,0)
The NPI is retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.827,727.827,107,"DT")
3110324
"^DD",727.827,727.827,108,0)
SECONDARY PROVIDER #5^F^^3;16^K:$L(X)>11!($L(X)<2) X
"^DD",727.827,727.827,108,3)
The fifth assisting provider associated with this clinic visit (2-11 chars).
"^DD",727.827,727.827,108,21,0)
^.001^3^3^3110422^^
"^DD",727.827,727.827,108,21,1,0)
This character string is an IEN for the NEW PERSON file (#200); a '2' has
"^DD",727.827,727.827,108,21,2,0)
been appended to the beginning of the character string.  It represents the
"^DD",727.827,727.827,108,21,3,0)
fifth assisting provider associated with this clinic visit.
"^DD",727.827,727.827,108,23,0)
^.001^5^5^3110422^^^^
"^DD",727.827,727.827,108,23,1,0)
Data is derived by making a call to the ENCEVENT^PXAPI (DBIA1889-F) API
"^DD",727.827,727.827,108,23,2,0)
using the clinic encounter, returning the secondary provider IEN.
"^DD",727.827,727.827,108,23,3,0)
 
"^DD",727.827,727.827,108,23,4,0)
A character string of format "2"_IEN, where IEN is the internal entry
"^DD",727.827,727.827,108,23,5,0)
number for the secondary provider in the NEW PERSON file (#200).
"^DD",727.827,727.827,108,"DT")
3110310
"^DD",727.827,727.827,109,0)
SECONDARY PROVIDER #5 PC^F^^3;17^K:$L(X)>7!($L(X)<7) X
"^DD",727.827,727.827,109,3)
Answer must be 7 characters in length.
"^DD",727.827,727.827,109,21,0)
^.001^2^2^3110324^^^^
"^DD",727.827,727.827,109,21,1,0)
The VA code of the Person Class of the fifth assisting provider as of the
"^DD",727.827,727.827,109,21,2,0)
date of this record.
"^DD",727.827,727.827,109,23,0)
^^4^4^3110324^
"^DD",727.827,727.827,109,23,1,0)
Derived by calling $$PRVCLASS^ECXUTL(IEN,DATE), where IEN is the IEN of 
"^DD",727.827,727.827,109,23,2,0)
the NEW PERSON (#200) File.  Copied from field VA CODE (#5) of the PERSON
"^DD",727.827,727.827,109,23,3,0)
CLASS (#8932.1) file, as pointed to by the Person Class (#.01) field of
"^DD",727.827,727.827,109,23,4,0)
the PERSON CLASS (#8932.1) multiple of the NEW PERSON (#200) file.
"^DD",727.827,727.827,109,"DT")
3110310
"^DD",727.827,727.827,110,0)
SECONDARY PROVIDER #5 NPI^F^^3;18^K:$L(X)>10!($L(X)<10) X
"^DD",727.827,727.827,110,3)
Answer must be 10 characters in length.
"^DD",727.827,727.827,110,21,0)
^^2^2^3110422^
"^DD",727.827,727.827,110,21,1,0)
A standard unique life-long identifier of the fifth assisting provider
"^DD",727.827,727.827,110,21,2,0)
associated with this clinic visit.
"^DD",727.827,727.827,110,23,0)
^.001^1^1^3110422^^^
"^DD",727.827,727.827,110,23,1,0)
The NPI is retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.827,727.827,110,"DT")
3110324
"BLD",8219,6)
^121
**END**
**END**
