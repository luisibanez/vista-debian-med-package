EMERGENCY Released ECX*3*143 SEQ #128
Extracted from mail message
**KIDS**:ECX*3.0*143^

**INSTALL NAME**
ECX*3.0*143
"BLD",8263,0)
ECX*3.0*143^DSS EXTRACTS^0^3121205^y
"BLD",8263,4,0)
^9.64PA^727.833^1
"BLD",8263,4,727.833,0)
727.833
"BLD",8263,4,727.833,2,0)
^9.641^727.833^1
"BLD",8263,4,727.833,2,727.833,0)
BCMA EXTRACT  (File-top level)
"BLD",8263,4,727.833,2,727.833,1,0)
^9.6411^42^1
"BLD",8263,4,727.833,2,727.833,1,42,0)
DRUG IEN
"BLD",8263,4,727.833,222)
y^n^p^^^^n^^n
"BLD",8263,4,727.833,224)

"BLD",8263,4,"APDD",727.833,727.833)

"BLD",8263,4,"APDD",727.833,727.833,42)

"BLD",8263,4,"B",727.833,727.833)

"BLD",8263,6.3)
4
"BLD",8263,"ABPKG")
n
"BLD",8263,"INIT")
POST^ECX3P143
"BLD",8263,"KRN",0)
^9.67PA^779.2^20
"BLD",8263,"KRN",.4,0)
.4
"BLD",8263,"KRN",.401,0)
.401
"BLD",8263,"KRN",.402,0)
.402
"BLD",8263,"KRN",.403,0)
.403
"BLD",8263,"KRN",.5,0)
.5
"BLD",8263,"KRN",.84,0)
.84
"BLD",8263,"KRN",3.6,0)
3.6
"BLD",8263,"KRN",3.8,0)
3.8
"BLD",8263,"KRN",9.2,0)
9.2
"BLD",8263,"KRN",9.8,0)
9.8
"BLD",8263,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",8263,"KRN",9.8,"NM",1,0)
ECXPLBB^^0^B20947806
"BLD",8263,"KRN",9.8,"NM",2,0)
ECXAPHA2^^0^B28836077
"BLD",8263,"KRN",9.8,"NM",3,0)
ECXPIVDN^^0^B58842000
"BLD",8263,"KRN",9.8,"NM",4,0)
ECXBCM^^0^B71824253
"BLD",8263,"KRN",9.8,"NM",5,0)
ECX3P143^^0^B1454370
"BLD",8263,"KRN",9.8,"NM","B","ECX3P143",5)

"BLD",8263,"KRN",9.8,"NM","B","ECXAPHA2",2)

"BLD",8263,"KRN",9.8,"NM","B","ECXBCM",4)

"BLD",8263,"KRN",9.8,"NM","B","ECXPIVDN",3)

"BLD",8263,"KRN",9.8,"NM","B","ECXPLBB",1)

"BLD",8263,"KRN",19,0)
19
"BLD",8263,"KRN",19.1,0)
19.1
"BLD",8263,"KRN",101,0)
101
"BLD",8263,"KRN",409.61,0)
409.61
"BLD",8263,"KRN",771,0)
771
"BLD",8263,"KRN",779.2,0)
779.2
"BLD",8263,"KRN",870,0)
870
"BLD",8263,"KRN",8989.51,0)
8989.51
"BLD",8263,"KRN",8989.52,0)
8989.52
"BLD",8263,"KRN",8994,0)
8994
"BLD",8263,"KRN","B",.4,.4)

"BLD",8263,"KRN","B",.401,.401)

"BLD",8263,"KRN","B",.402,.402)

"BLD",8263,"KRN","B",.403,.403)

"BLD",8263,"KRN","B",.5,.5)

"BLD",8263,"KRN","B",.84,.84)

"BLD",8263,"KRN","B",3.6,3.6)

"BLD",8263,"KRN","B",3.8,3.8)

"BLD",8263,"KRN","B",9.2,9.2)

"BLD",8263,"KRN","B",9.8,9.8)

"BLD",8263,"KRN","B",19,19)

"BLD",8263,"KRN","B",19.1,19.1)

"BLD",8263,"KRN","B",101,101)

"BLD",8263,"KRN","B",409.61,409.61)

"BLD",8263,"KRN","B",771,771)

"BLD",8263,"KRN","B",779.2,779.2)

"BLD",8263,"KRN","B",870,870)

"BLD",8263,"KRN","B",8989.51,8989.51)

"BLD",8263,"KRN","B",8989.52,8989.52)

"BLD",8263,"KRN","B",8994,8994)

"BLD",8263,"QUES",0)
^9.62^^
"BLD",8263,"REQB",0)
^9.611^1^1
"BLD",8263,"REQB",1,0)
ECX*3.0*136^1
"BLD",8263,"REQB","B","ECX*3.0*136",1)

"FIA",727.833)
BCMA EXTRACT
"FIA",727.833,0)
^ECX(727.833,
"FIA",727.833,0,0)
727.833
"FIA",727.833,0,1)
y^n^p^^^^n^^n
"FIA",727.833,0,10)

"FIA",727.833,0,11)

"FIA",727.833,0,"RLRO")

"FIA",727.833,0,"VR")
3.0^ECX
"FIA",727.833,727.833)
1
"FIA",727.833,727.833,42)

"INIT")
POST^ECX3P143
"MBREQ")
0
"PKG",513,-1)
1^1
"PKG",513,0)
DSS EXTRACTS^ECX^Decision Support System. (DSS)
"PKG",513,20,0)
^9.402P^^
"PKG",513,22,0)
^9.49I^1^1
"PKG",513,22,1,0)
3.0^3010618^2980112^11714
"PKG",513,22,1,"PAH",1,0)
143^3121205
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","ECX3P143")
0^5^B1454370^n/a
"RTN","ECX3P143",1,0)
ECX3P143 ;ALB/DAN - Patch 143 Post-install ;12/5/12  13:06
"RTN","ECX3P143",2,0)
 ;;3.0;DSS EXTRACTS;**143**;Dec 22, 1997;Build 4
"RTN","ECX3P143",3,0)
 ;
"RTN","ECX3P143",4,0)
POST ;Clean up BCMA EXTRACT file
"RTN","ECX3P143",5,0)
 N FIEN
"RTN","ECX3P143",6,0)
 D BMES^XPDUTL("Removing existing entries from BCMA EXTRACT file (#727.833)")
"RTN","ECX3P143",7,0)
 K ^ECX(727.833) ;remove all existing entries
"RTN","ECX3P143",8,0)
 S ^ECX(727.833,0)="BCMA EXTRACT^727.833^^" ;reset zero node
"RTN","ECX3P143",9,0)
 ;Search for extracts in the DSS EXTRACT LOG and set purge date
"RTN","ECX3P143",10,0)
 S FIEN=0 F  S FIEN=$O(^ECX(727,"D","BAR CODE MEDICATION ADM",FIEN)) Q:'+FIEN  S ^ECX(727,FIEN,"PURG")=$$DT^XLFDT
"RTN","ECX3P143",11,0)
 D BMES^XPDUTL("All existing entries have been removed from the BCMA EXTRACT file (#727.833)")
"RTN","ECX3P143",12,0)
 Q
"RTN","ECXAPHA2")
0^2^B28836077^B31277218
"RTN","ECXAPHA2",1,0)
ECXAPHA2 ;ALB/TMD-Pharmacy Extracts Unusual Volumes Report ;12/5/12  12:24
"RTN","ECXAPHA2",2,0)
 ;;3.0;DSS EXTRACTS;**40,49,84,104,105,113,136,143**;Dec 22, 1997;Build 4
"RTN","ECXAPHA2",3,0)
 ;
"RTN","ECXAPHA2",4,0)
EN ; entry point
"RTN","ECXAPHA2",5,0)
 N COUNT,ECUNIT,LINE,ECDFN,ECD,ECDRG,ECDAY,ECDFN,ECQTY,ECUNIT,ECCOST,ECDS,ECXCOUNT
"RTN","ECXAPHA2",6,0)
 K ^TMP($J)
"RTN","ECXAPHA2",7,0)
 S (COUNT,ECDS,ECXCOUNT)=0,ECUNIT=""
"RTN","ECXAPHA2",8,0)
 S ECD=ECSD1,ECED=ECED+.3
"RTN","ECXAPHA2",9,0)
 S LINE=$S(ECXOPT=1:"PRE",ECXOPT=2:"IVP",ECXOPT=3:"UDP",1:"EXIT")
"RTN","ECXAPHA2",10,0)
 D @LINE
"RTN","ECXAPHA2",11,0)
 Q
"RTN","ECXAPHA2",12,0)
 ;
"RTN","ECXAPHA2",13,0)
PRE ; entry point for PRE data
"RTN","ECXAPHA2",14,0)
 N ECRFL,ECRX,ECREF,ECDATA,ECDATA1,ECPRC,IEN
"RTN","ECXAPHA2",15,0)
 K ^TMP($J,"ECXDSS")
"RTN","ECXAPHA2",16,0)
 ;call pharmacy api pso52ex
"RTN","ECXAPHA2",17,0)
 D EXTRACT^PSO52EX(ECD,ECED,"ECXDSS")
"RTN","ECXAPHA2",18,0)
 S ECREF="RF"
"RTN","ECXAPHA2",19,0)
 ;order thru fills and refills; refill values 0 thru 11
"RTN","ECXAPHA2",20,0)
 ;     Note:  refill 0 = original fill
"RTN","ECXAPHA2",21,0)
 F  S ECD=$O(^TMP($J,"ECXDSS","AL",ECD)),IEN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S IEN=$O(^TMP($J,"ECXDSS","AL",ECD,IEN)),ECRFL=""  Q:'IEN  Q:ECXERR  F  S ECRFL=$O(^TMP($J,"ECXDSS","AL",ECD,IEN,ECRFL)) Q:ECRFL=""  Q:ECXERR  D PRE2
"RTN","ECXAPHA2",22,0)
 ;
"RTN","ECXAPHA2",23,0)
 ;order thru partial fills
"RTN","ECXAPHA2",24,0)
 S ECD=ECSD1,ECREF="P"
"RTN","ECXAPHA2",25,0)
 F  S ECD=$O(^TMP($J,"ECXDSS","AM",ECD)),IEN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S IEN=$O(^(ECD,IEN)),ECRFL=""  Q:'IEN  Q:ECXERR  F  S ECRFL=$O(^(IEN,ECRFL)) Q:'ECRFL  Q:ECXERR  D PRE2
"RTN","ECXAPHA2",26,0)
 K ^TMP($J,"ECXDSS")
"RTN","ECXAPHA2",27,0)
 Q
"RTN","ECXAPHA2",28,0)
 ;
"RTN","ECXAPHA2",29,0)
PRE2 ; get Prescription data
"RTN","ECXAPHA2",30,0)
 I (ECREF="RF")&(ECRFL) D
"RTN","ECXAPHA2",31,0)
 .S ECQTY=+^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,1)
"RTN","ECXAPHA2",32,0)
 .S ECDS=+^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,1.1)
"RTN","ECXAPHA2",33,0)
 .S ECPRC=^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,1.2)
"RTN","ECXAPHA2",34,0)
 I (ECREF="RF")&('ECRFL) D
"RTN","ECXAPHA2",35,0)
 .S ECQTY=+^TMP($J,"ECXDSS",IEN,7)
"RTN","ECXAPHA2",36,0)
 .S ECDS=+^TMP($J,"ECXDSS",IEN,8)
"RTN","ECXAPHA2",37,0)
 .S ECPRC=+^TMP($J,"ECXDSS",IEN,17)
"RTN","ECXAPHA2",38,0)
 I ECREF="P" D
"RTN","ECXAPHA2",39,0)
 .S ECQTY=+^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,.04)
"RTN","ECXAPHA2",40,0)
 .S ECDS=+^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,.041)
"RTN","ECXAPHA2",41,0)
 .S ECPRC=+^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,.042)
"RTN","ECXAPHA2",42,0)
 ;check to see if quantity>threshold
"RTN","ECXAPHA2",43,0)
 I ECQTY>ECTHLD D
"RTN","ECXAPHA2",44,0)
 .S ECDAY=ECD
"RTN","ECXAPHA2",45,0)
 .S ECDFN=$P(^TMP($J,"ECXDSS",IEN,2),U)
"RTN","ECXAPHA2",46,0)
 .S ECDRG=+$P(^TMP($J,"ECXDSS",IEN,6),U)
"RTN","ECXAPHA2",47,0)
 .S ECCOST=ECQTY*ECPRC
"RTN","ECXAPHA2",48,0)
 .D FILE Q:ECXERR
"RTN","ECXAPHA2",49,0)
 Q
"RTN","ECXAPHA2",50,0)
 ;
"RTN","ECXAPHA2",51,0)
IVP ; entry point for IVP Data
"RTN","ECXAPHA2",52,0)
 N DFN,ON,DA,SA,ECCOUNT ;143
"RTN","ECXAPHA2",53,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^("S") D  Q:ECXERR
"RTN","ECXAPHA2",54,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  Q:ECXERR  I $D(^ECX(728.113,DA,0)) S EC=^(0) Q:ECXERR  D
"RTN","ECXAPHA2",55,0)
 ..S ECDRG=$P(EC,U,4)
"RTN","ECXAPHA2",56,0)
 ..S SA=$S($P(EC,U,8)]"":"A",$P(EC,U,9):"S",1:"")
"RTN","ECXAPHA2",57,0)
 ..; set up new record for first DA for this drug
"RTN","ECXAPHA2",58,0)
 ..I '$D(^TMP($J,SA,ECDRG)) D
"RTN","ECXAPHA2",59,0)
 ...S ECQTY=+$S(SA="A":+$P(EC,U,7),SA="S":+$P(EC,U,9),1:0)
"RTN","ECXAPHA2",60,0)
 ...S ECUNIT=$S(SA="A":$P(EC,U,8),SA="S":"ML",1:"")
"RTN","ECXAPHA2",61,0)
 ...S ECCOST=$P(EC,U,12),ECDFN=DFN
"RTN","ECXAPHA2",62,0)
 ...S ^TMP($J,SA,ECDRG)=ECUNIT_U_ECD_U_ECDFN_U_ECCOST_U_ECQTY
"RTN","ECXAPHA2",63,0)
 ...S ^(ECDRG,1)=0
"RTN","ECXAPHA2",64,0)
 ..; add to qty (0,1, or -1) to total
"RTN","ECXAPHA2",65,0)
 ..S ^TMP($J,SA,ECDRG,1)=^TMP($J,SA,ECDRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXAPHA2",66,0)
 .; looped thru all DAs for this order - now check for unusual volumes
"RTN","ECXAPHA2",67,0)
 .F SA="S","A" S ECDRG="" F  S ECDRG=$O(^TMP($J,SA,ECDRG)) Q:ECDRG=""  Q:ECXERR  D
"RTN","ECXAPHA2",68,0)
 ..S ECQTY=$P(^TMP($J,SA,ECDRG),U,5),ECCOUNT=^(ECDRG,1)
"RTN","ECXAPHA2",69,0)
 ..S ECQTY=ECQTY*ECCOUNT
"RTN","ECXAPHA2",70,0)
 ..; check to see if quantity is outside of threshold range
"RTN","ECXAPHA2",71,0)
 ..I (ECQTY>ECTHLD)!(ECQTY<-ECTHLD) D
"RTN","ECXAPHA2",72,0)
 ...S ECUNIT=$P(^TMP($J,SA,ECDRG),U)
"RTN","ECXAPHA2",73,0)
 ...S ECDAY=$P(^(ECDRG),U,2)
"RTN","ECXAPHA2",74,0)
 ...S ECDFN=$P(^(ECDRG),U,3)
"RTN","ECXAPHA2",75,0)
 ...; New Cost calculation ** 136
"RTN","ECXAPHA2",76,0)
 ...; Removed avg cost search from 136 use existing avgcost and quantity vs count  ** 143
"RTN","ECXAPHA2",77,0)
 ...S ECCOST=$P(^(ECDRG),U,4)*ECQTY
"RTN","ECXAPHA2",78,0)
 ...D FILE Q:ECXERR
"RTN","ECXAPHA2",79,0)
 K ^TMP($J,"A"),^("S")
"RTN","ECXAPHA2",80,0)
 Q
"RTN","ECXAPHA2",81,0)
 ;
"RTN","ECXAPHA2",82,0)
UDP ; entry point for UDP data
"RTN","ECXAPHA2",83,0)
 N ECXJ,ECDATA,ECORD ;136
"RTN","ECXAPHA2",84,0)
 F  S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:ECXERR  D
"RTN","ECXAPHA2",85,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:ECXERR  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXAPHA2",86,0)
 ..S DATA=^ECX(728.904,ECXJ,0),ECQTY=$P(DATA,U,5)
"RTN","ECXAPHA2",87,0)
 ..;check to see if quantity>threshold
"RTN","ECXAPHA2",88,0)
 ..I ECQTY>ECTHLD D
"RTN","ECXAPHA2",89,0)
 ...S ECDFN=$P(DATA,U,2),ECDRG=$P(DATA,U,4),ECCOST=$P(DATA,U,8),ECDAY=ECD,ECORD=$P(DATA,U,10) ;136
"RTN","ECXAPHA2",90,0)
 ...D FILE Q:ECXERR
"RTN","ECXAPHA2",91,0)
 Q
"RTN","ECXAPHA2",92,0)
 ;
"RTN","ECXAPHA2",93,0)
FILE ; put records in temp file to print later
"RTN","ECXAPHA2",94,0)
 N OK,ECXPAT,ECNAME,ECSSN,ECGNAME,ECNDC,ECPROD,ECFKEY,ECXPHA
"RTN","ECXAPHA2",95,0)
 ; get demographics
"RTN","ECXAPHA2",96,0)
 S OK=$$PAT^ECXUTL3(ECDFN,$P(ECD,"."),"1;",.ECXPAT)
"RTN","ECXAPHA2",97,0)
 I 'OK Q
"RTN","ECXAPHA2",98,0)
 S ECNAME=ECXPAT("NAME")
"RTN","ECXAPHA2",99,0)
 S ECSSN=ECXPAT("SSN")
"RTN","ECXAPHA2",100,0)
 S ECDAY=$E(ECDAY,4,5)_"/"_$E(ECDAY,6,7)
"RTN","ECXAPHA2",101,0)
 ; get drug file data
"RTN","ECXAPHA2",102,0)
 S ECXPHA="",ECXPHA=$$PHAAPI^ECXUTL5(ECDRG)
"RTN","ECXAPHA2",103,0)
 S ECGNAME=$P(ECXPHA,U)
"RTN","ECXAPHA2",104,0)
 S ECNDC=$P(ECXPHA,U,3)
"RTN","ECXAPHA2",105,0)
 S ECNDC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0)
"RTN","ECXAPHA2",106,0)
 S ECNDC=$TR(ECNDC,"*",0)
"RTN","ECXAPHA2",107,0)
 S ECPROD=$P(ECXPHA,U,6)
"RTN","ECXAPHA2",108,0)
 S ECPROD=$$RJ^XLFSTR(ECPROD,5,0)
"RTN","ECXAPHA2",109,0)
 S ECFKEY=ECPROD_ECNDC
"RTN","ECXAPHA2",110,0)
 I ECXOPT'=2 S ECUNIT=$P(ECXPHA,U,8)
"RTN","ECXAPHA2",111,0)
 ; file 
"RTN","ECXAPHA2",112,0)
 S ^TMP($J,ECFKEY,-ECQTY,ECDAY,ECXCOUNT,ECSSN)=ECNAME_U_ECSSN_U_ECDAY_U_ECGNAME_U_ECFKEY_U_ECQTY_U_ECUNIT_U_"$"_$FNUMBER(ECCOST,",",4)_U_ECDS
"RTN","ECXAPHA2",113,0)
 I $G(ECXOPT)=3 S $P(^TMP($J,ECFKEY,-ECQTY,ECDAY,ECXCOUNT,ECSSN),U,10)=$$SIG^ECXAPHA(ECORD,ECDFN) ;136 Get SIG data if UDP report
"RTN","ECXAPHA2",114,0)
 S COUNT=COUNT+1
"RTN","ECXAPHA2",115,0)
 S ECXCOUNT=ECXCOUNT+1
"RTN","ECXAPHA2",116,0)
 I COUNT#100=0 I $$S^ZTLOAD S (ZTSTOP,ECXERR)=1 ;136 Update ZTSTOP var to be spelled correctly
"RTN","ECXAPHA2",117,0)
 Q
"RTN","ECXAPHA2",118,0)
 ;
"RTN","ECXAPHA2",119,0)
EXIT S ECXERR=1 Q
"RTN","ECXBCM")
0^4^B71824253^B69163399
"RTN","ECXBCM",1,0)
ECXBCM ;ALB/JAP-Bar Code Medical Administration Extract ;12/5/12  11:56
"RTN","ECXBCM",2,0)
 ;;3.0;DSS EXTRACTS;**107,127,132,136,143**;Dec 22, 1997 ;Build 4
"RTN","ECXBCM",3,0)
 ;
"RTN","ECXBCM",4,0)
BEG ;entry point from option
"RTN","ECXBCM",5,0)
 ;ECFILE=^ECX(727.833,
"RTN","ECXBCM",6,0)
 D SETUP I ECFILE="" Q
"RTN","ECXBCM",7,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXBCM",8,0)
 Q
"RTN","ECXBCM",9,0)
 ;
"RTN","ECXBCM",10,0)
START ; start package specific extract
"RTN","ECXBCM",11,0)
 ; 
"RTN","ECXBCM",12,0)
 N ECXVAP ;143
"RTN","ECXBCM",13,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXBCM",14,0)
 S PIEN=0
"RTN","ECXBCM",15,0)
 I $G(ECSD)="" S ECSD=DT
"RTN","ECXBCM",16,0)
 ; loop thru and get each new patient, reset the start date to ECSD - begin date from ECXTRAC
"RTN","ECXBCM",17,0)
 F  S PIEN=$O(^PSB(53.79,"AADT",PIEN)) Q:('PIEN)  S IDAT=ECSD D
"RTN","ECXBCM",18,0)
 .F  S IDAT=$O(^PSB(53.79,"AADT",PIEN,IDAT)) Q:'IDAT!(IDAT>ECED)  S RIEN="" D
"RTN","ECXBCM",19,0)
 ..F  S RIEN=$O(^PSB(53.79,"AADT",PIEN,IDAT,RIEN)) Q:'RIEN  D
"RTN","ECXBCM",20,0)
 ...S ECXNOD=^PSB(53.79,RIEN,0) Q:'ECXNOD  S ECXDFN=$P($G(ECXNOD),U) D GET(ECSD,ECED)
"RTN","ECXBCM",21,0)
 Q
"RTN","ECXBCM",22,0)
 ;
"RTN","ECXBCM",23,0)
GET(ECSD,ECED) ;get extract data
"RTN","ECXBCM",24,0)
 S (ACTDT,ECXADT,ECXAMED,ECXASTA,ECXATM,ECXORN,ECXORT,ECXOSC,ECPRO,PLACEHLD,ECXFAC,DRG)=""
"RTN","ECXBCM",25,0)
 ; get needed YYYYDD variable
"RTN","ECXBCM",26,0)
 I $G(ECXYM)="" S ECXYM=$$ECXYM^ECXUTL(DT)
"RTN","ECXBCM",27,0)
 ;Get Facility
"RTN","ECXBCM",28,0)
 I $G(ECXFAC)="" D
"RTN","ECXBCM",29,0)
 .S ECXFAC=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECXFAC,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXBCM",30,0)
 .D EN^DIQ1 S ECXFAC=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXBCM",31,0)
 ;get patient demographics
"RTN","ECXBCM",32,0)
 S ECXERR=0 D PAT(ECXDFN,IDAT,.ECXERR) Q:ECXERR
"RTN","ECXBCM",33,0)
 ;
"RTN","ECXBCM",34,0)
 S ECXORN=$$GET1^DIQ(53.79,RIEN,.11)
"RTN","ECXBCM",35,0)
 ; Ordering Stop Code - based on Unit dose or IV
"RTN","ECXBCM",36,0)
 I ECXORN["U" Q:$$CHKUD(ECXDFN,ECSD,ECED)  S:ECXA="O" ECXOSC=$$DOUDO^ECXUTL5(ECXDFN,+ECXORN)
"RTN","ECXBCM",37,0)
 I ECXORN["V" Q:$$CHKIV(ECXDFN,ECSD,ECED)  S:ECXA="O" ECXOSC=$$DOIVPO^ECXUTL5(ECXDFN,+ECXORN)
"RTN","ECXBCM",38,0)
 S ECPRO=$$ORDPROV^ECXUTL(ECXDFN,ECXORN,"")
"RTN","ECXBCM",39,0)
 S ACTDT=$$GET1^DIQ(53.79,RIEN,.06,"I")
"RTN","ECXBCM",40,0)
 I ACTDT'=IDAT Q
"RTN","ECXBCM",41,0)
 S ECXADT=$$ECXDATE^ECXUTL(ACTDT,ECXYM)
"RTN","ECXBCM",42,0)
 S ECXATM=$$ECXTIME^ECXUTL(ACTDT)
"RTN","ECXBCM",43,0)
 S ECXORT=$P($G(^TMP("PSJ",$J,1)),U,3) K ^TMP("PSJ",$J)
"RTN","ECXBCM",44,0)
 S ECPROPC=$P($$GET^XUA4A72(ECPRO,$P(ACTDT,".")),U,7)
"RTN","ECXBCM",45,0)
 N ECXUSRTN
"RTN","ECXBCM",46,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECPRO,$P(ACTDT,"."))
"RTN","ECXBCM",47,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECPRONPI=$P(ECXUSRTN,U)
"RTN","ECXBCM",48,0)
 S ECXASTA=$$GET1^DIQ(53.79,RIEN,.09,"I")
"RTN","ECXBCM",49,0)
 I "^G^S^C^"'[("^"_ECXASTA_"^") Q  ;process 'G'iven,'S'topped,'C'ompleted
"RTN","ECXBCM",50,0)
 S ECXAMED=$$GET1^DIQ(53.79,RIEN,.08,"I")
"RTN","ECXBCM",51,0)
 ;Component code data
"RTN","ECXBCM",52,0)
 D CCODE(RIEN)
"RTN","ECXBCM",53,0)
 Q
"RTN","ECXBCM",54,0)
 ;
"RTN","ECXBCM",55,0)
CMPT ; during component/sequence processing, retrieve rest of data record the file it. 
"RTN","ECXBCM",56,0)
 S (ECXSCADT,ECXOS,ECXIVID,ECXIR,SCADT,ECXSCADT,ECXSCATM,DRUG,ECVNDC,ECINV,ECVACL,ECXVAP)="" ;143
"RTN","ECXBCM",57,0)
 I $G(DRG) D
"RTN","ECXBCM",58,0)
 .S DRUG=$$PHAAPI^ECXUTL5(DRG)
"RTN","ECXBCM",59,0)
 .S ECVNDC=$P(DRUG,U,3)
"RTN","ECXBCM",60,0)
 .S ECINV=$P(DRUG,U,4) S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXBCM",61,0)
 .S ECVACL=$P(DRUG,U,2)
"RTN","ECXBCM",62,0)
 .S ECXVAP=$P(DRUG,U,6) ;143 set ECXVAP to VA PRODUCT IEN
"RTN","ECXBCM",63,0)
 S SCADT=$$GET1^DIQ(53.79,RIEN,.13,"I")
"RTN","ECXBCM",64,0)
 S ECXSCADT=$$ECXDATE^ECXUTL(SCADT,ECXYM)
"RTN","ECXBCM",65,0)
 S ECXSCATM=$$ECXTIME^ECXUTL(SCADT)
"RTN","ECXBCM",66,0)
 S ECXOS=$$GET1^DIQ(53.79,RIEN,.12,"I")
"RTN","ECXBCM",67,0)
 S ECXIVID=$$GET1^DIQ(53.79,RIEN,.26)
"RTN","ECXBCM",68,0)
 S ECXIR=$$GET1^DIQ(53.79,RIEN,.35)
"RTN","ECXBCM",69,0)
 S ECXDIV=$$RADDIV^ECXDEPT($$GET1^DIQ(53.79,RIEN,.03,"I"))
"RTN","ECXBCM",70,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXBCM",71,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,ACTDT,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXBCM",72,0)
 D:ECXENC'="" FILE
"RTN","ECXBCM",73,0)
 Q
"RTN","ECXBCM",74,0)
 ;
"RTN","ECXBCM",75,0)
PAT(ECXDFN,ECXDATE,ECXERR)  ;get patient demographics, primary care, and inpatient data
"RTN","ECXBCM",76,0)
 N X
"RTN","ECXBCM",77,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXBCM",78,0)
 ;get patient data
"RTN","ECXBCM",79,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXBCM",80,0)
 I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXBCM",81,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXBCM",82,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXBCM",83,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXBCM",84,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXBCM",85,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXBCM",86,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXBCM",87,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXBCM",88,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXBCM",89,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXBCM",90,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXBCM",91,0)
 S ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXBCM",92,0)
 S ECXPOS=ECXPAT("POS")
"RTN","ECXBCM",93,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXBCM",94,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXBCM",95,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXBCM",96,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXBCM",97,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXBCM",98,0)
 S ECXPHI=ECXPAT("PHI")
"RTN","ECXBCM",99,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXBCM",100,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXBCM",101,0)
 S ECXMTST=ECXPAT("MEANS")
"RTN","ECXBCM",102,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXBCM",103,0)
 S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN) S ECXCNHU=$S(ECXCNHU'="":$E(ECXCNHU,1),1:"") ;get CNHU status
"RTN","ECXBCM",104,0)
 ;get enrollment data (category, status and priority)
"RTN","ECXBCM",105,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXBCM",106,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)                  ; Head and Neck Cancer Indicator
"RTN","ECXBCM",107,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)                 ; PROJ 112/SHAD Indicator
"RTN","ECXBCM",108,0)
 I ECXSHADI="U" S ECXSHADI=""                      ; If Shad comes back as "U" force to null
"RTN","ECXBCM",109,0)
 S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1")  ; Race and Ethnicity
"RTN","ECXBCM",110,0)
 S ECXERI=ECXPAT("ERI")                            ; emergency response indicator (FEMA)
"RTN","ECXBCM",111,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)               ; PATCAT code / patch 127  
"RTN","ECXBCM",112,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXBCM",113,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXBCM",114,0)
 ;
"RTN","ECXBCM",115,0)
 ;get primary care data
"RTN","ECXBCM",116,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXBCM",117,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXBCM",118,0)
 ;get inpatient data
"RTN","ECXBCM",119,0)
 S (ECXA,ECXMN,ECXADM,ECXTS,ECXW)=""
"RTN","ECXBCM",120,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXBCM",121,0)
 S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXADM=$P(X,U,4)
"RTN","ECXBCM",122,0)
 S W=$P(X,U,9),ECXDOM=$P(X,U,10),ECXW=$P(W,";")
"RTN","ECXBCM",123,0)
 ;get national patient record flag, if it exists
"RTN","ECXBCM",124,0)
 D NPRF^ECXUTL5     ; sets ECXNPRFI
"RTN","ECXBCM",125,0)
 Q
"RTN","ECXBCM",126,0)
 ;
"RTN","ECXBCM",127,0)
CCODE(RIEN) ; get component information
"RTN","ECXBCM",128,0)
 ;  input - IEN of the BCMA MEDICATION LOG File
"RTN","ECXBCM",129,0)
 ; 
"RTN","ECXBCM",130,0)
 ; output - CCIEN: pointer to a variable pointer field to file #50, #52.6, or #52.7
"RTN","ECXBCM",131,0)
 ;          CCDORD: .02 field of file #50, #52.6, or #52.7
"RTN","ECXBCM",132,0)
 ;          CCDGVN: .03 FIELD of file #50, #52.6, or #52.7
"RTN","ECXBCM",133,0)
 ;          CCUNIT: .04 field of file #50, #52.6, or #52.7
"RTN","ECXBCM",134,0)
 ;          CCTYPE: derived field, "D", "A", or "S"
"RTN","ECXBCM",135,0)
 ;
"RTN","ECXBCM",136,0)
 S (CCIEN,CCDORD,CCDGVN,CCUNIT,CCTYPE)=""
"RTN","ECXBCM",137,0)
 F I=.5,.6,.7 D
"RTN","ECXBCM",138,0)
 .I '$O(^PSB(53.79,RIEN,I,0)) Q
"RTN","ECXBCM",139,0)
 .S J=0 F  S J=$O(^PSB(53.79,RIEN,I,J)) Q:'J  D
"RTN","ECXBCM",140,0)
 ..S DATA=^PSB(53.79,RIEN,I,J,0)
"RTN","ECXBCM",141,0)
 ..S CCIEN=$P(DATA,U),CCDORD=$P(DATA,U,2),CCDGVN=$P(DATA,U,3),CCUNIT=$P(DATA,U,4)
"RTN","ECXBCM",142,0)
 ..I I=.5 S DRG=CCIEN
"RTN","ECXBCM",143,0)
 ..I I=.6 S DRG=$$GET1^DIQ(52.6,CCIEN,1,"I")
"RTN","ECXBCM",144,0)
 ..I I=.7 S DRG=$$GET1^DIQ(52.7,CCIEN,1,"I")
"RTN","ECXBCM",145,0)
 ..S CCTYPE=$S(I=.5:"D",I=.6:"A",I=.7:"S",1:"")
"RTN","ECXBCM",146,0)
 ..S CCIEN=$S(I=.5:CCIEN_";PSDRUG(",I=.6:CCIEN_";PS(52.6,",I=.7:CCIEN_";PS(52.7,",1:"")
"RTN","ECXBCM",147,0)
 ..D CMPT
"RTN","ECXBCM",148,0)
 Q
"RTN","ECXBCM",149,0)
 ;
"RTN","ECXBCM",150,0)
CHKIV(ECXDFN,ECSD,ECED) ; Check file 728.113 for matching IV records 
"RTN","ECXBCM",151,0)
 ;  input - ECXDFN   DFN of the patient from the BCMA file
"RTN","ECXBCM",152,0)
 ;          ECSD:    Start Date for the extract 
"RTN","ECXBCM",153,0)
 ;          ECED:    End Date for the extract 
"RTN","ECXBCM",154,0)
 ; return - True     if the Order is in file 728.113  
"RTN","ECXBCM",155,0)
 ;          False    if the Order is Not in file 728.113 
"RTN","ECXBCM",156,0)
 ;
"RTN","ECXBCM",157,0)
 N IVIEN,ORD,IVORN,ECD,EXTRACT,STDATE,ENDDATE
"RTN","ECXBCM",158,0)
 S (ORD,ECD,STDATE,ENDDATE)=0
"RTN","ECXBCM",159,0)
 S (IVORN,EXTRACT)=""
"RTN","ECXBCM",160,0)
 I '$O(^ECX(728.113,0)) D     ; Check to see if data exists in the file, if not, recreate
"RTN","ECXBCM",161,0)
 .S EXTRACT="IV"
"RTN","ECXBCM",162,0)
 .S STDATE=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",163,0)
 .S ENDDATE=ECED
"RTN","ECXBCM",164,0)
 .D START^PSJDSS
"RTN","ECXBCM",165,0)
 S IVORN=$P(ECXORN,"V")
"RTN","ECXBCM",166,0)
 S ECD=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",167,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)) Q:'ECD!(ECD>ECED)!(ORD=IVORN)  D
"RTN","ECXBCM",168,0)
 .S ORD=0
"RTN","ECXBCM",169,0)
 .F  S ORD=$O(^ECX(728.113,"A",ECD,ECXDFN,ORD)) Q:'ORD!(ORD=IVORN)
"RTN","ECXBCM",170,0)
 I ORD=IVORN Q 1
"RTN","ECXBCM",171,0)
 Q 0 ;Checks show order not in IV 728.113
"RTN","ECXBCM",172,0)
 ;
"RTN","ECXBCM",173,0)
CHKUD(ECXDFN,ECSD,ECED) ; Check file 728.904 for matching Unit dose records
"RTN","ECXBCM",174,0)
 ;  input - ECXDFN   DFN of the patient from the BCMA file
"RTN","ECXBCM",175,0)
 ;          ECSD:    Start Date for the extract 
"RTN","ECXBCM",176,0)
 ;          ECED:    End Date for the extract 
"RTN","ECXBCM",177,0)
 ; return - True     if the Order is in file 728.904
"RTN","ECXBCM",178,0)
 ;          False    if the Order is Not in file 728.904
"RTN","ECXBCM",179,0)
 ;
"RTN","ECXBCM",180,0)
 N UDIEN,UDORN,ORD,EXTRACT,STDATE,ENDDATE
"RTN","ECXBCM",181,0)
 S (ORD,STDATE,ENDDATE)=0
"RTN","ECXBCM",182,0)
 S (UDORN,EXTRACT)=""
"RTN","ECXBCM",183,0)
 I '$O(^ECX(728.904,0)) D    ; Check to see if data exists in the file, if not, recreate
"RTN","ECXBCM",184,0)
 .S EXTRACT="UD"
"RTN","ECXBCM",185,0)
 .S STDATE=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",186,0)
 .S ENDDATE=ECED
"RTN","ECXBCM",187,0)
 .D START^PSJDSS
"RTN","ECXBCM",188,0)
 S UDORN=$P(ECXORN,"U")
"RTN","ECXBCM",189,0)
 F  S ORD=$O(^ECX(728.904,"AO",ECXDFN,ORD)) Q:'ORD!(ORD=UDORN)
"RTN","ECXBCM",190,0)
 I ORD=UDORN Q 1
"RTN","ECXBCM",191,0)
 ;I $$GET1^DIQ(55.06,UDORN_","_ECXDFN,7,"I")="R" Q 1
"RTN","ECXBCM",192,0)
 Q 0 ;Checks show order not in UD 728.904
"RTN","ECXBCM",193,0)
 ;
"RTN","ECXBCM",194,0)
FILE ;file the extract record
"RTN","ECXBCM",195,0)
 ;node0
"RTN","ECXBCM",196,0)
 ;Sequence Number,Year Month, Extract Number (EC23)^facility (ECXFAC)^
"RTN","ECXBCM",197,0)
 ;dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^
"RTN","ECXBCM",198,0)
 ;in/out (ECXA)^Day (ECXADT)^
"RTN","ECXBCM",199,0)
 ;date of birth (ECDOB)^Gender (ECXSEX)^State (ECXSTATE)^County (ECXCNTY)^
"RTN","ECXBCM",200,0)
 ;zip code (ECXZIP)^country (ECXCNTRY)^ward (ECXW)^treating speciality (ECXTS)^
"RTN","ECXBCM",201,0)
 ;provider (ECPRO)^provider person class (ECPROPC)^provider npi (ECPRONPI)^
"RTN","ECXBCM",202,0)
 ;primary care provider(ECPTPR)^pc provider person class (ECCLAS)^
"RTN","ECXBCM",203,0)
 ;primary care provider NPI (ECPTNPI)^primary care team (ECPTTM)^ordering stop code (ECXOSC)^
"RTN","ECXBCM",204,0)
 ;NODE(1)
"RTN","ECXBCM",205,0)
 ;place order number (RIEN)^order reference number (ECXORN)^route (ECXORT)^
"RTN","ECXBCM",206,0)
 ;^action time (ECXATM)^component code (CCIEN)^
"RTN","ECXBCM",207,0)
 ;component dose ordered (CCDORD)^component dose given(CCDGVN)^
"RTN","ECXBCM",208,0)
 ;component units (CCUNIT)^component type (CCTYPE)^Action Status (ECXASTA)^
"RTN","ECXBCM",209,0)
 ;Administration Medication (ECXAMED)^Scheduled Administration Date (ECXSCADT)^
"RTN","ECXBCM",210,0)
 ;NODE(2)
"RTN","ECXBCM",211,0)
 ;Scheduled Administration Time (ECXSCATM)^
"RTN","ECXBCM",212,0)
  ;Order Schedule (ECXOS)^IV Unique ID (ECXIVID)^
"RTN","ECXBCM",213,0)
 ;Infusion Rate (ECXIR)^Production Division Code (ECXDIV)^Drug IEN (ECXVAP)^NDC (ECVNDC)^ ;;143, changed Drug IEN var from DRG to ECXVAP
"RTN","ECXBCM",214,0)
 ;Investigational (DEA Special Handling) (ECINV)^VA Drug Classification (ECVACL)^
"RTN","ECXBCM",215,0)
 ;Master Patient Index (ECXMPI)^DOM, PRRTP and SAARTP Indicator (ECXDOM)^
"RTN","ECXBCM",216,0)
 ;Observation Patient Indicator (ECXOBS)^Encounter Number (ECXENC)^Means Test (ECXMTST)^
"RTN","ECXBCM",217,0)
 ;Eligibility (ECXELIG)^Enrollment Location (ECXENRL)^Enrollment Category (ECXCAT)^
"RTN","ECXBCM",218,0)
 ;Enrollment Status (ECXSTAT)^Enrollment Priority (ECXPRIOR)_(ECXSBGRP)^
"RTN","ECXBCM",219,0)
 ;User Enrollee (ECXUESTA)^
"RTN","ECXBCM",220,0)
 ;Ethnicity(ECXETH)^Race 1(ECXRC1)^Veteran(ECXVET)^Period of Service(ECXPOS)^POW Status(ECXPST)^
"RTN","ECXBCM",221,0)
 ;POW Location(ECXPLOC)^Radiation Status(ECXRST)^Agent Orange Status(ECXAST)^Agent Orange Location(ECXAOL)
"RTN","ECXBCM",222,0)
 ;^Purple Heart Indicator(ECXPHI)^MST Status(ECXMST)^CNH/SH Status(ECXCNHU)^
"RTN","ECXBCM",223,0)
 ;Head & Neck Cancer Indicator(ECXHNCI)^SHAD Status(ECXSHADI)
"RTN","ECXBCM",224,0)
 ;NODE(3)
"RTN","ECXBCM",225,0)
 ;Patient Type(ECXPTYPE)^
"RTN","ECXBCM",226,0)
 ;CV Status Eligibility(ECXCVE)^CV Eligibility End Date(ECXCVEDT)^Encounter CV(ECXCVENC)^
"RTN","ECXBCM",227,0)
 ;National Patient Record Flag(ECXNPRFI)^ERI(ECXERI)^SW Asia Conditions(ECXEST)^
"RTN","ECXBCM",228,0)
 ;OEF/OIF(ECXOEF)^OEF/OIF Return Date(ECXOEFDT)^PATCAT(ECXPATCAT)
"RTN","ECXBCM",229,0)
 ;
"RTN","ECXBCM",230,0)
 N DA,DIK
"RTN","ECXBCM",231,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXBCM",232,0)
 S ECODE(0)=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXADT
"RTN","ECXBCM",233,0)
 S ECODE(0)=ECODE(0)_U_ECXDOB_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXCNTRY
"RTN","ECXBCM",234,0)
 S ECODE(0)=ECODE(0)_U_ECXW_U_ECXTS_U_2_ECPRO_U_ECPROPC_U_ECPRONPI_U_ECPTPR_U_ECCLAS
"RTN","ECXBCM",235,0)
 S ECODE(0)=ECODE(0)_U_ECPTNPI_U_ECPTTM_U_ECXOSC_U
"RTN","ECXBCM",236,0)
 S ECODE(1)=RIEN_U_ECXORN_U_ECXORT_U_ECXATM_U_CCIEN_U_CCDORD_U_CCDGVN
"RTN","ECXBCM",237,0)
 S ECODE(1)=ECODE(1)_U_CCUNIT_U_CCTYPE_U_ECXASTA_U_ECXAMED_U_ECXSCADT_U
"RTN","ECXBCM",238,0)
 S ECODE(2)=ECXSCATM_U_ECXOS_U_ECXIVID_U_ECXIR_U_ECXDIV_U_ECXVAP_U_ECVNDC_U_ECINV_U_ECVACL_U_ECXMPI_U_ECXDOM ;143 Changed DRUG IEN field from DRG to ECXVAP
"RTN","ECXBCM",239,0)
 S ECODE(2)=ECODE(2)_U_$E(ECXOBS,1)_U_ECXENC_U_ECXMTST_U_ECXELIG_U_ECXENRL_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_ECXSBGRP
"RTN","ECXBCM",240,0)
 S ECODE(2)=ECODE(2)_U_ECXUESTA_U_ECXETH_U_ECXRC1_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC
"RTN","ECXBCM",241,0)
 S ECODE(2)=ECODE(2)_U_ECXRST_U_ECXAST_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXCNHU_U_ECXHNCI_U_ECXSHADI_U
"RTN","ECXBCM",242,0)
 S ECODE(3)=ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI_U_ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT
"RTN","ECXBCM",243,0)
 S ECODE(3)=ECODE(3)_U_ECXPATCAT
"RTN","ECXBCM",244,0)
 ;
"RTN","ECXBCM",245,0)
 N DA,DIK,X S X=""
"RTN","ECXBCM",246,0)
 F X=0:1:3 S ^ECX(ECFILE,EC7,X)=ECODE(X)
"RTN","ECXBCM",247,0)
 S ECRN=ECRN+1
"RTN","ECXBCM",248,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXBCM",249,0)
 Q
"RTN","ECXBCM",250,0)
 ;
"RTN","ECXBCM",251,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXBCM",252,0)
 S ECHEAD="BCM"
"RTN","ECXBCM",253,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXBCM",254,0)
 Q
"RTN","ECXPIVDN")
0^3^B58842000^B60600395
"RTN","ECXPIVDN",1,0)
ECXPIVDN ;ALB/JAP,BIR/DMA,CML,PTD-Extract from IV EXTRACT DATA File (#728.113) ;12/5/12  12:19
"RTN","ECXPIVDN",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,33,39,46,49,71,84,96,92,107,105,112,120,127,136,143**;Dec 22, 1997;Build 4
"RTN","ECXPIVDN",3,0)
BEG ;entry point from option
"RTN","ECXPIVDN",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXPIVDN",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXPIVDN",6,0)
 Q
"RTN","ECXPIVDN",7,0)
 ;
"RTN","ECXPIVDN",8,0)
START ; start package specific extract
"RTN","ECXPIVDN",9,0)
 N DIC,DA,DR,DIQ,DFN,ECXNPRFI,ECXPHA
"RTN","ECXPIVDN",10,0)
 S QFLG=0
"RTN","ECXPIVDN",11,0)
 I '$D(ECINST) D
"RTN","ECXPIVDN",12,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPIVDN",13,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPIVDN",14,0)
 S ECED=ECED+.3
"RTN","ECXPIVDN",15,0)
 K ^TMP($J,"A"),^TMP($J,"S")
"RTN","ECXPIVDN",16,0)
 S ECD=ECSD1
"RTN","ECXPIVDN",17,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^TMP($J,"S") S ECVOL=0 D  Q:QFLG
"RTN","ECXPIVDN",18,0)
 .S ECXERR=0 D PAT(DFN,ECD,.ECXERR)
"RTN","ECXPIVDN",19,0)
 .Q:ECXERR
"RTN","ECXPIVDN",20,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  Q:QFLG  I $D(^ECX(728.113,DA,0)) S EC=^(0) D  Q:QFLG
"RTN","ECXPIVDN",21,0)
 ..S DRG=$P(EC,U,4) I $P(EC,U,8)]"" D
"RTN","ECXPIVDN",22,0)
 ...I '$D(^TMP($J,"A",DRG)) S ^(DRG)=$P(EC,U,7,8),^(DRG,1)=0,^(2)=$P(EC,U,12)
"RTN","ECXPIVDN",23,0)
 ...S ^(1)=^TMP($J,"A",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",24,0)
 ..I $P(EC,U,9) D
"RTN","ECXPIVDN",25,0)
 ...I '$D(^TMP($J,"S",DRG)) S ^(DRG)=$P(EC,U,9)_"^ML",^(DRG,1)=0,^(2)=$P(EC,U,12),ECVOL=$P(EC,U,9)+ECVOL
"RTN","ECXPIVDN",26,0)
 ...S ^(1)=^TMP($J,"S",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",27,0)
 ..S ECTYP=$P(EC,U,11),ECTOTC=0,ECDTTM=$$ECXTIME^ECXUTL($P(EC,U,5))
"RTN","ECXPIVDN",28,0)
 .;looped thru all DAs for this order - now put it together
"RTN","ECXPIVDN",29,0)
 .;leave the next line in case the decision is made to send volume designations
"RTN","ECXPIVDN",30,0)
 .;I ECTYP="H" S ECTYP=ECTYP_$S(ECVOL'>1000:1,ECVOL'>2000:2,1:3)
"RTN","ECXPIVDN",31,0)
 .S ECXDSSI=""
"RTN","ECXPIVDN",32,0)
 .;loop thru tmp global and call pharmacy drug file (#50) api
"RTN","ECXPIVDN",33,0)
 .F SA="S","A" S DRG="" F  S DRG=$O(^TMP($J,SA,DRG)) Q:DRG=""  S ECXPHA="",ECXPHA=$$PHAAPI^ECXUTL5(DRG) I $P(ECXPHA,U)'="" D STUFF Q:QFLG
"RTN","ECXPIVDN",34,0)
 K ^TMP($J),CLIN,DA,DFN,DIC,DIK,DRG,ON,SA,X,Y,P1,P3
"RTN","ECXPIVDN",35,0)
 Q
"RTN","ECXPIVDN",36,0)
STUFF ;get data
"RTN","ECXPIVDN",37,0)
 N ECORDST,ECTI ;143
"RTN","ECXPIVDN",38,0)
 S ECST=^TMP($J,SA,DRG),ECXCNT=^(DRG,1),ECXCOST=^(2),ECVACL=$P(ECXPHA,U,2),ECORDST="",ECTI=""
"RTN","ECXPIVDN",39,0)
 ;if older logic, use incorrect calculation for cost **136
"RTN","ECXPIVDN",40,0)
 I ECXLOGIC<2013 S ECXCOST=ECXCOST*ECXCNT
"RTN","ECXPIVDN",41,0)
 ;S ECST=^TMP($J,SA,DRG),ECXCNT=^(DRG,1),ECXCOST=^(2),ECXCOST=ECXCOST*ECXCNT,ECVACL=$P(ECXPHA,U,2),ECORDST="",ECTI="" removed old cost calc **136
"RTN","ECXPIVDN",42,0)
 ;if outpatient get division from iv rm; get dss identifier for clinic
"RTN","ECXPIVDN",43,0)
 I ECXA="O" D
"RTN","ECXPIVDN",44,0)
 .;- Only set ward to .5 if outpatient (but NOT observation patient)
"RTN","ECXPIVDN",45,0)
 .I $G(ECXW)="" S ECXW=.5
"RTN","ECXPIVDN",46,0)
 .I $P(EC,U,15) S ECIVRM=$P(EC,U,15),ECXDIV=$$PSJ59P5^ECXUTL5(ECIVRM)
"RTN","ECXPIVDN",47,0)
 .S CLIN=+$P(EC,U,13),(ECXP1,ECXP2)="000",ECXCL=$G(^ECX(728.44,CLIN,0)) Q:ECXCL=""
"RTN","ECXPIVDN",48,0)
 .S ECSC=$P(ECXCL,U,4),ECCSC=$P(ECXCL,U,5)
"RTN","ECXPIVDN",49,0)
 .I ECSC="" S ECSC=$P(ECXCL,U,2),ECCSC=$P(ECXCL,U,3)
"RTN","ECXPIVDN",50,0)
 .I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXPIVDN",51,0)
 .I ECSC="" S ECSC=$P($G(^SC(ECXCL,0)),U,7),ECCSC=$P($G(^SC(ECXCL,0)),U,18) I ECSC D
"RTN","ECXPIVDN",52,0)
 ..S ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2) S:ECCSC]"" ECXP2=$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXPIVDN",53,0)
 ..S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXPIVDN",54,0)
 .S ECXDSSI=ECXP1_ECXP2
"RTN","ECXPIVDN",55,0)
 .I ECXLOGIC>2003 D
"RTN","ECXPIVDN",56,0)
 ..I "^18^23^24^41^65^94^108^"[("^"_ECXTS_"^") S ECXDSSI=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXPIVDN",57,0)
 S ECINV=$P(ECXPHA,U,4),ECST=ECXCNT*ECST_" "_$P(ECST,U,2)
"RTN","ECXPIVDN",58,0)
  ;New way to calculate cost dea spl hndlg **136
"RTN","ECXPIVDN",59,0)
 I ECXLOGIC>2012 D
"RTN","ECXPIVDN",60,0)
 .I ECINV["5" S ECTI="5"
"RTN","ECXPIVDN",61,0)
 .I ECINV["4" S ECTI="4"
"RTN","ECXPIVDN",62,0)
 .I ECINV["3" S ECTI="3"
"RTN","ECXPIVDN",63,0)
 .I ECINV["2" S ECTI="2"
"RTN","ECXPIVDN",64,0)
 .I ECINV["1" S ECTI="1"
"RTN","ECXPIVDN",65,0)
 .I ECINV["I" S ECTI="I"
"RTN","ECXPIVDN",66,0)
 .S ECINV=ECTI
"RTN","ECXPIVDN",67,0)
 .; Update cost calculation use exist cost x quant x count
"RTN","ECXPIVDN",68,0)
 .S ECXCOST=+ECST*ECXCOST ;143
"RTN","ECXPIVDN",69,0)
 ; old method of dea spl hndlg **136
"RTN","ECXPIVDN",70,0)
 I ECXLOGIC<2013 S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXPIVDN",71,0)
 S ECNDC=$P(ECXPHA,U,3),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXPIVDN",72,0)
 S P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6)
"RTN","ECXPIVDN",73,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXPIVDN",74,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXPIVDN",75,0)
 ;- Ordering provider ("2"_provider)
"RTN","ECXPIVDN",76,0)
 S ECXORDPR=$S(+$P(EC,U,10):"2"_$P(EC,U,10),1:"")
"RTN","ECXPIVDN",77,0)
 N ECXUSRTN
"RTN","ECXPIVDN",78,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$P(EC,U,10),$P(EC,U,16))
"RTN","ECXPIVDN",79,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECXOPNPI=$P(ECXUSRTN,U)
"RTN","ECXPIVDN",80,0)
 S ECXORDDT=$P(EC,U,16) ;- Ordering date
"RTN","ECXPIVDN",81,0)
 ;- Requesting physician (null for FY2002)
"RTN","ECXPIVDN",82,0)
 S ECXRPHY=""
"RTN","ECXPIVDN",83,0)
 ;- Department and National Prod Division
"RTN","ECXPIVDN",84,0)
 S ECXDSSD="" ;dss department use postponed $$IVP^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",85,0)
 N ECXPDIV S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",86,0)
 ;- Observation patient indicator (yes/no)
"RTN","ECXPIVDN",87,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXDSSI)
"RTN","ECXPIVDN",88,0)
 ; - Ordering Date, Ordering Stop Code
"RTN","ECXPIVDN",89,0)
 S ECXORDST="" I ECXA="O" D
"RTN","ECXPIVDN",90,0)
 .S ECXORDST=$$DOIVPO^ECXUTL5(DFN,ON)
"RTN","ECXPIVDN",91,0)
 .I ECXOBS="NO" S ECORDST="PHA"
"RTN","ECXPIVDN",92,0)
 .I ECXOBS="YES" S ECORDST=$P($G(^ECX(727.831,+ECXTS,0)),U,6)
"RTN","ECXPIVDN",93,0)
 ;- If no encounter number don't file record
"RTN","ECXPIVDN",94,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,ECD,ECXTS,ECXOBS,ECHEAD,ECORDST,)
"RTN","ECXPIVDN",95,0)
 ;get BCMA data
"RTN","ECXPIVDN",96,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)=""
"RTN","ECXPIVDN",97,0)
 ;get ordering provider person class
"RTN","ECXPIVDN",98,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXORDPR,2,999),ECXORDDT)
"RTN","ECXPIVDN",99,0)
 ;set national patient record flag if exist
"RTN","ECXPIVDN",100,0)
 S ECXDFN=DFN D NPRF^ECXUTL5 K ECXDFN
"RTN","ECXPIVDN",101,0)
 D:ECXENC'="" FILE^ECXPIVD2 K P1,P3
"RTN","ECXPIVDN",102,0)
 Q
"RTN","ECXPIVDN",103,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographics, primary care, and inpatient data
"RTN","ECXPIVDN",104,0)
 N X
"RTN","ECXPIVDN",105,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXPIVDN",106,0)
 ;get patient data if saved
"RTN","ECXPIVDN",107,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXPIVDN",108,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2),ECXMPI=$P(PT,U,3)
"RTN","ECXPIVDN",109,0)
 .S ECXDOB=$P(PT,U,4),ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6),ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXPIVDN",110,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12),ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXPIVDN",111,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18),ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXPIVDN",112,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24),ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXPIVDN",113,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4),ECXCNTRY=$P(PT1,U,5)
"RTN","ECXPIVDN",114,0)
 .S ECXSHADI=$P(PT1,U,6),ECXPATCAT=$P(PT1,U,7)
"RTN","ECXPIVDN",115,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXPIVDN",116,0)
 ;set patient data
"RTN","ECXPIVDN",117,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXPIVDN",118,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXPIVDN",119,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXPIVDN",120,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXPIVDN",121,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET"),ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXPIVDN",122,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXPIVDN",123,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL"),ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXPIVDN",124,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS"),ECXEST=ECXPAT("EC STAT")
"RTN","ECXPIVDN",125,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN) ;get CNHU status
"RTN","ECXPIVDN",126,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXPIVDN",127,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXPIVDN",128,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN) ;Head and Neck Cancer Indicator
"RTN","ECXPIVDN",129,0)
 .S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN) ;PROJ 112/SHAD Indicator
"RTN","ECXPIVDN",130,0)
 .S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)  ; PATCH 127, ADD PATCAT CODE 
"RTN","ECXPIVDN",131,0)
 .; - Race and Ethnicity
"RTN","ECXPIVDN",132,0)
 .S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1")
"RTN","ECXPIVDN",133,0)
 .S ECXERI=ECXPAT("ERI") ;emergency response indicator (FEMA)
"RTN","ECXPIVDN",134,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXPIVDN",135,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXPIVDN",136,0)
 .;save for later
"RTN","ECXPIVDN",137,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXPIVDN",138,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXPIVDN",139,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT_U_ECXCNTRY_U_ECXSHADI_U_ECXPATCAT
"RTN","ECXPIVDN",140,0)
 ;get primary care data
"RTN","ECXPIVDN",141,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXPIVDN",142,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXPIVDN",143,0)
 ;get inpatient data
"RTN","ECXPIVDN",144,0)
 S (ECXA,ECXMN,ECXADM,ECXTS,ECXW,ECXDIV)="",X=$$INP^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXPIVDN",145,0)
 S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXADM=$P(X,U,4),W=$P(X,U,9),ECXDOM=$P(X,U,10),ECXW=$P(W,";"),ECXDIV=$P(W,";",2)
"RTN","ECXPIVDN",146,0)
 Q
"RTN","ECXPIVDN",147,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPIVDN",148,0)
 S ECHEAD="IVP"
"RTN","ECXPIVDN",149,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPIVDN",150,0)
 ;variables ecver and ecrtn will be reset in routine ecxtrac if appropriate
"RTN","ECXPIVDN",151,0)
 S ECVER=7
"RTN","ECXPIVDN",152,0)
 Q
"RTN","ECXPIVDN",153,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPIVDN",154,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPLBB")
0^1^B20947806^B21006006
"RTN","ECXPLBB",1,0)
ECXPLBB ;DALOI/KML - DSS BLOOD BANK PRE-EXTRACT AUDIT REPORT ;11/19/12  11:08
"RTN","ECXPLBB",2,0)
 ;;3.0;DSS EXTRACTS;**78,92,105,136,143**;Dec 22, 1997;Build 4
"RTN","ECXPLBB",3,0)
 ;Per VHA Directive 97-033 this routine should not be modified.  Medical Device # BK970021
"RTN","ECXPLBB",4,0)
 ;entry point from option
"RTN","ECXPLBB",5,0)
 D SETUP^ECXLBB I ECFILE="" Q
"RTN","ECXPLBB",6,0)
 N ECXINST
"RTN","ECXPLBB",7,0)
 D DATES
"RTN","ECXPLBB",8,0)
 Q:ECED']""&(ECSD']"")
"RTN","ECXPLBB",9,0)
 N ECXPOP S ECXPOP=0 D QUE Q:ECXPOP
"RTN","ECXPLBB",10,0)
 ;
"RTN","ECXPLBB",11,0)
START ;  entry point from tasked job
"RTN","ECXPLBB",12,0)
 ; get LAB DATA and build temporary global ^TMP("ECXLBB",$J)
"RTN","ECXPLBB",13,0)
 N ECTRSP,ECADMT,ECTODT,ECXRPT,ECOUT,ECXSTR,ECRDT,ECLINE,ECPG,ECQUIT
"RTN","ECXPLBB",14,0)
 N ECD,ECXDFN,ECARRY,EC66,ECERR,ECTRFDT,ECTRFTM,ECX,ECINOUT,ECXJOB
"RTN","ECXPLBB",15,0)
 N ECXLOGIC
"RTN","ECXPLBB",16,0)
 S ECXJOB=$J
"RTN","ECXPLBB",17,0)
 K ^TMP("ECXLBB",ECXJOB)
"RTN","ECXPLBB",18,0)
 U IO
"RTN","ECXPLBB",19,0)
 I $E(IOST,1,2)="C-" W !,"Retrieving records... "
"RTN","ECXPLBB",20,0)
 S ECXRPT=1 D AUDRPT^ECXLBB
"RTN","ECXPLBB",21,0)
OUTPUT ; entry point called by EN tag
"RTN","ECXPLBB",22,0)
 I '$D(^TMP("ECXLBB",ECXJOB)) W !,"There were no records that met the date range criteria" Q
"RTN","ECXPLBB",23,0)
 S (ECPG,ECDATE,ECQUIT,ECXDFN)=0,ECLINE="",$P(ECLINE,"=",80)="="
"RTN","ECXPLBB",24,0)
 S ECSDN=$$FMTE^XLFDT(ECSD,9),ECEDN=$$FMTE^XLFDT(ECED,9),ECRDT=$$FMTE^XLFDT(DT,9)
"RTN","ECXPLBB",25,0)
 W:$E(IOST,1,2)="C-" @IOF D HED
"RTN","ECXPLBB",26,0)
 F  S ECXDFN=$O(^TMP("ECXLBB",ECXJOB,ECXDFN)) Q:'ECXDFN  F  S ECDATE=$O(^TMP("ECXLBB",ECXJOB,ECXDFN,ECDATE))  Q:'ECDATE  Q:ECQUIT  S ECXSTR=^(ECDATE) D PRINT ;143 Put correct code back into routine
"RTN","ECXPLBB",27,0)
 D ^ECXKILL
"RTN","ECXPLBB",28,0)
 Q
"RTN","ECXPLBB",29,0)
 ;
"RTN","ECXPLBB",30,0)
PRINT ;
"RTN","ECXPLBB",31,0)
 I $Y+5>IOSL D  Q:ECQUIT
"RTN","ECXPLBB",32,0)
 . I $E(IOST,1,2)["C-" S DIR(0)="E" D ^DIR K DIR I 'Y S ECQUIT=1 Q
"RTN","ECXPLBB",33,0)
 . W @IOF D HED
"RTN","ECXPLBB",34,0)
 W !,$P(ECXSTR,"^",5),?11,$P(ECXSTR,"^",4),?26,$P(ECXSTR,"^",16)
"RTN","ECXPLBB",35,0)
 W ?37,$$FMTE^XLFDT($$HL7TFM^XLFDT($P(ECXSTR,"^",8)),2)
"RTN","ECXPLBB",36,0)
 W ?49,$P(ECXSTR,"^",11),?60,$J(+$P(ECXSTR,"^",12),2)
"RTN","ECXPLBB",37,0)
 Q
"RTN","ECXPLBB",38,0)
 ;
"RTN","ECXPLBB",39,0)
HED ;
"RTN","ECXPLBB",40,0)
 S ECPG=ECPG+1
"RTN","ECXPLBB",41,0)
 W !,"LBB Pre-Extract Audit Report",?72,"Page",$J(ECPG,3) ;136
"RTN","ECXPLBB",42,0)
 W !,ECSDN," - ",ECEDN,?58,"Run Date:",$J(ECRDT,12)
"RTN","ECXPLBB",43,0)
 W !,?37,"Transf",?57,"Number"
"RTN","ECXPLBB",44,0)
 W !,"Name",?14,"SSN",?25,"FDR LOC",?37,"Date",?49,"COMP"
"RTN","ECXPLBB",45,0)
 W ?57,"of Units"
"RTN","ECXPLBB",46,0)
 W !,ECLINE
"RTN","ECXPLBB",47,0)
 Q
"RTN","ECXPLBB",48,0)
DATES ;
"RTN","ECXPLBB",49,0)
 N OUT,CHKFLG
"RTN","ECXPLBB",50,0)
 I '$D(ECNODE) S ECNODE=7
"RTN","ECXPLBB",51,0)
 I '$D(ECHEAD) S ECHEAD=" "
"RTN","ECXPLBB",52,0)
 W @IOF,!,"LBB Pre-Extract Audit Report Information for DSS",!! ;136
"RTN","ECXPLBB",53,0)
 ;Added descriptive text DSS FY13 Logic
"RTN","ECXPLBB",54,0)
 W !,"**NOTE: This audit can only be run prior to the LBB Extract being generated." ;136
"RTN","ECXPLBB",55,0)
 W !,"If you have already generated your LBB Extract, refer to the Processing "
"RTN","ECXPLBB",56,0)
 W !,"Guide Chapter 4 section on Regenerating.**",!
"RTN","ECXPLBB",57,0)
 S:'$D(ECINST) ECINST=+$P(^ECX(728,1,0),U)
"RTN","ECXPLBB",58,0)
 S ECXINST=ECINST
"RTN","ECXPLBB",59,0)
 K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPLBB",60,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPLBB",61,0)
 S ECLDT=$S($D(^ECX(728,1,ECNODE)):$P(^(ECNODE),U,ECPIECE),1:2610624)
"RTN","ECXPLBB",62,0)
 S:ECLDT="" ECLDT=2610624
"RTN","ECXPLBB",63,0)
 S ECOUT=0 F  S (ECED,ECSD)="" D  Q:ECOUT
"RTN","ECXPLBB",64,0)
 . K %DT S %DT="AEX",%DT("A")="Starting with Date: " D ^%DT
"RTN","ECXPLBB",65,0)
 . I Y<0 S ECOUT=1 Q
"RTN","ECXPLBB",66,0)
 . S ECSD=Y
"RTN","ECXPLBB",67,0)
 . K %DT S %DT="AEX",%DT("A")="Ending with Date: " D ^%DT
"RTN","ECXPLBB",68,0)
 . I Y<0 S ECOUT=1 Q
"RTN","ECXPLBB",69,0)
 . I Y<ECSD W !!,"The ending date cannot be earlier than the starting date.",!,"Please try again.",!! Q
"RTN","ECXPLBB",70,0)
 . I $E(Y,1,5)'=$E(ECSD,1,5) W !!,"Beginning and ending dates must be in the same month and year.",!,"Please try again.",!! Q
"RTN","ECXPLBB",71,0)
 . S ECED=Y
"RTN","ECXPLBB",72,0)
 . I ECLDT'<ECSD W !!,"The Blood Bank information has already been extracted through ",$$FMTE^XLFDT(ECLDT),".",!,"Please enter a new date range.",!! Q
"RTN","ECXPLBB",73,0)
 . S ECOUT=1
"RTN","ECXPLBB",74,0)
 Q
"RTN","ECXPLBB",75,0)
 ;
"RTN","ECXPLBB",76,0)
QUE ;
"RTN","ECXPLBB",77,0)
 K ZTSAVE
"RTN","ECXPLBB",78,0)
 S ECSDN=$$FMTE^XLFDT(ECSD),ECEDN=$$FMTE^XLFDT(ECED),ECSD1=ECSD-.1
"RTN","ECXPLBB",79,0)
 K ZTSAVE
"RTN","ECXPLBB",80,0)
 F X="ECINST","ECED","ECSD","ECSD1","ECEDN","ECSDN" S ZTSAVE(X)=""
"RTN","ECXPLBB",81,0)
 F X="ECPACK","ECPIECE","ECRTN","ECGRP","ECNODE" S ZTSAVE(X)=""
"RTN","ECXPLBB",82,0)
 F X="ECFILE","ECHEAD","ECVER","ECINST","ECXINST" S ZTSAVE(X)=""
"RTN","ECXPLBB",83,0)
 F X="ECXLOGIC","ECXDATES" S ZTSAVE(X)=""
"RTN","ECXPLBB",84,0)
 S ZTDESC=ECPACK_" EXTRACT AUDIT REPORT: "_ECSDN_" TO "_ECEDN,ZTRTN="START^ECXPLBB",ZTIO=""
"RTN","ECXPLBB",85,0)
 S IOP="Q" W ! S %ZIS="QMP" D ^%ZIS S:POP ECXPOP=1 Q:POP  I $D(IO("Q")) K IO("Q"),ZTIO D ^%ZTLOAD W:$D(ZTSK) !,$C(7),"REQUEST QUEUED",!,"Task #: ",$G(ZTSK) K I,ZTSK,ZTIO,ZTSAVE,ZTRTN D HOME^%ZIS S ECXPOP=1
"RTN","ECXPLBB",86,0)
 Q
"RTN","ECXPLBB",87,0)
 ;
"RTN","ECXPLBB",88,0)
EN(ECXJOB,ECSD,ECED) ; entry point used primarily for testing
"RTN","ECXPLBB",89,0)
 ; input:
"RTN","ECXPLBB",90,0)
 ;        ECXJOB = $J that is assigned to the 2nd subscript of 
"RTN","ECXPLBB",91,0)
 ;                 the temporary global array containing the 
"RTN","ECXPLBB",92,0)
 ;                 extracted data that feeds the pre-extract
"RTN","ECXPLBB",93,0)
 ;                 audit report
"RTN","ECXPLBB",94,0)
 ;        ECSD   = starting date range representing the FM
"RTN","ECXPLBB",95,0)
 ;                 date used to retrieve data from file #63
"RTN","ECXPLBB",96,0)
 ;        ECED   = ending date range representing the FM date
"RTN","ECXPLBB",97,0)
 ;                 used to retrieve data from file #63
"RTN","ECXPLBB",98,0)
 ; syntax  of the call: D EN^ECXPLBB(541571372,3000101,3000131)
"RTN","ECXPLBB",99,0)
 D OUTPUT
"RTN","ECXPLBB",100,0)
 Q
"RTN","ECXPLBB",101,0)
 ;
"RTN","ECXPLBB",102,0)
 ;ECXPLBB
"VER")
8.0^22.0
"^DD",727.833,727.833,42,0)
DRUG IEN^P50.68'^PSNDF(50.68,^2;6^Q
"^DD",727.833,727.833,42,3)
Select the drug administered to the patient.
"^DD",727.833,727.833,42,21,0)
^.001^1^1^3121205^^^^
"^DD",727.833,727.833,42,21,1,0)
This is the drug administered to the patient.
"^DD",727.833,727.833,42,23,0)
^^10^10^3121205^
"^DD",727.833,727.833,42,23,1,0)
Using the COMPONENT CODE (#30) field of this file, the IEN of the drug 
"^DD",727.833,727.833,42,23,2,0)
from the DRUG (#50) file is used in a call to $$PHAAPI^ECXUTL5 to get the 
"^DD",727.833,727.833,42,23,3,0)
associated entry in the VA PRODUCT (#50.68) file.
"^DD",727.833,727.833,42,23,4,0)
 
"^DD",727.833,727.833,42,23,5,0)
The COMPONENT CODE (#30) field is a variable pointer reference to the file
"^DD",727.833,727.833,42,23,6,0)
that identifies the drug given.  If it's a dispensed drug, it references 
"^DD",727.833,727.833,42,23,7,0)
the DRUG (#50) file and the IEN can be taken directly from there.  
"^DD",727.833,727.833,42,23,8,0)
Otherwise, the IEN will be taken from the GENERIC DRUG (#1) field from
"^DD",727.833,727.833,42,23,9,0)
either the IV ADDITIVES (#52.6) or the IV SOLUTIONS (#52.7) file, which is
"^DD",727.833,727.833,42,23,10,0)
a pointer to the DRUG (#50) file.
"^DD",727.833,727.833,42,"DT")
3121205
"BLD",8263,6)
^128
**END**
**END**
