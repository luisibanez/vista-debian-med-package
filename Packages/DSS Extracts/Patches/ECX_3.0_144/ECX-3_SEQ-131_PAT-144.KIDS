EMERGENCY Released ECX*3*144 SEQ #131
Extracted from mail message
**KIDS**:ECX*3.0*144^

**INSTALL NAME**
ECX*3.0*144
"BLD",8267,0)
ECX*3.0*144^DSS EXTRACTS^0^3130903^y
"BLD",8267,4,0)
^9.64PA^728.44^17
"BLD",8267,4,727.802,0)
727.802
"BLD",8267,4,727.802,2,0)
^9.641^727.802^1
"BLD",8267,4,727.802,2,727.802,0)
ADMISSION EXTRACT  (File-top level)
"BLD",8267,4,727.802,2,727.802,1,0)
^9.6411^96^4
"BLD",8267,4,727.802,2,727.802,1,65,0)
RACE 1
"BLD",8267,4,727.802,2,727.802,1,94,0)
CAMP LEJEUNE STATUS
"BLD",8267,4,727.802,2,727.802,1,95,0)
ENCOUNTER CAMP LEJEUNE
"BLD",8267,4,727.802,2,727.802,1,96,0)
ENCOUNTER SC
"BLD",8267,4,727.802,222)
y^n^p^^^^n^^n
"BLD",8267,4,727.802,224)

"BLD",8267,4,727.809,0)
727.809
"BLD",8267,4,727.809,2,0)
^9.641^727.809^1
"BLD",8267,4,727.809,2,727.809,0)
UNIT DOSE LOCAL EXTRACT  (File-top level)
"BLD",8267,4,727.809,2,727.809,1,0)
^9.6411^18^9
"BLD",8267,4,727.809,2,727.809,1,18,0)
DEA, SPECIAL HDLG
"BLD",8267,4,727.809,2,727.809,1,61,0)
RACE 1
"BLD",8267,4,727.809,2,727.809,1,62,0)
PLACEHOLDER
"BLD",8267,4,727.809,2,727.809,1,63,0)
PLACEHOLDER
"BLD",8267,4,727.809,2,727.809,1,64,0)
PLACEHOLDER
"BLD",8267,4,727.809,2,727.809,1,65,0)
PLACEHOLDER
"BLD",8267,4,727.809,2,727.809,1,84,0)
ENCOUNTER SC
"BLD",8267,4,727.809,2,727.809,1,85,0)
CAMP LEJEUNE STATUS
"BLD",8267,4,727.809,2,727.809,1,86,0)
ENCOUNTER CAMP LEJEUNE
"BLD",8267,4,727.809,222)
y^n^p^^^^n^^n
"BLD",8267,4,727.809,224)

"BLD",8267,4,727.81,0)
727.81
"BLD",8267,4,727.81,2,0)
^9.641^727.81^1
"BLD",8267,4,727.81,2,727.81,0)
PRESCRIPTION EXTRACT  (File-top level)
"BLD",8267,4,727.81,2,727.81,1,0)
^9.6411^28^6
"BLD",8267,4,727.81,2,727.81,1,28,0)
DEA, SPECIAL HDLG
"BLD",8267,4,727.81,2,727.81,1,72,0)
RACE 1
"BLD",8267,4,727.81,2,727.81,1,99,0)
ENCOUNTER SC
"BLD",8267,4,727.81,2,727.81,1,100,0)
VIETNAM
"BLD",8267,4,727.81,2,727.81,1,101,0)
CAMP LEJEUNE STATUS
"BLD",8267,4,727.81,2,727.81,1,102,0)
ENCOUNTER CAMP LEJEUNE
"BLD",8267,4,727.81,222)
y^n^p^^^^n^^n
"BLD",8267,4,727.81,224)

"BLD",8267,4,727.811,0)
727.811
"BLD",8267,4,727.811,2,0)
^9.641^727.811^1
"BLD",8267,4,727.811,2,727.811,0)
SURGERY EXTRACT  (File-top level)
"BLD",8267,4,727.811,2,727.811,1,0)
^9.6411^100^13
"BLD",8267,4,727.811,2,727.811,1,60,0)
RACE 1
"BLD",8267,4,727.811,2,727.811,1,100,0)
ENCOUNTER SC
"BLD",8267,4,727.811,2,727.811,1,121,0)
DATE OF BIRTH
"BLD",8267,4,727.811,2,727.811,1,122,0)
VIETNAM
"BLD",8267,4,727.811,2,727.811,1,123,0)
CAMP LEJEUNE STATUS
"BLD",8267,4,727.811,2,727.811,1,124,0)
ENCOUNTER CAMP LEJEUNE
"BLD",8267,4,727.811,2,727.811,1,125,0)
CONCURRENT CASE
"BLD",8267,4,727.811,2,727.811,1,126,0)
PRINCIPLE POSTOP ICD-10 CODE
"BLD",8267,4,727.811,2,727.811,1,127,0)
OTHER POSTOP ICD-10 CODE #1
"BLD",8267,4,727.811,2,727.811,1,128,0)
OTHER POSTOP ICD-10 CODE #2
"BLD",8267,4,727.811,2,727.811,1,129,0)
OTHER POSTOP ICD-10 CODE #3
"BLD",8267,4,727.811,2,727.811,1,130,0)
OTHER POSTOP ICD-10 CODE #4
"BLD",8267,4,727.811,2,727.811,1,131,0)
OTHER POSTOP ICD-10 CODE #5
"BLD",8267,4,727.811,222)
y^n^p^^^^n^^n
"BLD",8267,4,727.811,224)

"BLD",8267,4,727.813,0)
727.813
"BLD",8267,4,727.813,2,0)
^9.641^727.813^1
"BLD",8267,4,727.813,2,727.813,0)
LABORATORY EXTRACT  (File-top level)
"BLD",8267,4,727.813,2,727.813,1,0)
^9.6411^49^2
"BLD",8267,4,727.813,2,727.813,1,48,0)
ENCOUNTER SC
"BLD",8267,4,727.813,2,727.813,1,49,0)
CAMP LEJEUNE STATUS
"BLD",8267,4,727.813,222)
y^n^p^^^^n^^n
"BLD",8267,4,727.813,224)

"BLD",8267,4,727.814,0)
727.814
"BLD",8267,4,727.814,2,0)
^9.641^727.814^1
"BLD",8267,4,727.814,2,727.814,0)
RADIOLOGY EXTRACT  (File-top level)
"BLD",8267,4,727.814,2,727.814,1,0)
^9.6411^52^3
"BLD",8267,4,727.814,2,727.814,1,50,0)
ENCOUNTER SC
"BLD",8267,4,727.814,2,727.814,1,51,0)
CAMP LEJEUNE STATUS
"BLD",8267,4,727.814,2,727.814,1,52,0)
ENCOUNTER CAMP LEJEUNE
"BLD",8267,4,727.814,222)
y^n^p^^^^n^^n
"BLD",8267,4,727.814,224)

"BLD",8267,4,727.815,0)
727.815
"BLD",8267,4,727.815,2,0)
^9.641^727.815^1
"BLD",8267,4,727.815,2,727.815,0)
EVENT CAPTURE LOCAL EXTRACT  (File-top level)
"BLD",8267,4,727.815,2,727.815,1,0)
^9.6411^122^13
"BLD",8267,4,727.815,2,727.815,1,73,0)
RACE 1
"BLD",8267,4,727.815,2,727.815,1,111,0)
ENCOUNTER SC
"BLD",8267,4,727.815,2,727.815,1,112,0)
VIETNAM
"BLD",8267,4,727.815,2,727.815,1,113,0)
PROVIDER #6
"BLD",8267,4,727.815,2,727.815,1,114,0)
PROVIDER #6 PERSON CLASS
"BLD",8267,4,727.815,2,727.815,1,115,0)
PROVIDER #6 NPI
"BLD",8267,4,727.815,2,727.815,1,116,0)
PROVIDER #7
"BLD",8267,4,727.815,2,727.815,1,117,0)
PROVIDER #7 PERSON CLASS
"BLD",8267,4,727.815,2,727.815,1,118,0)
PROVIDER #7 NPI
"BLD",8267,4,727.815,2,727.815,1,119,0)
4CHAR
"BLD",8267,4,727.815,2,727.815,1,120,0)
CLINIC IEN
"BLD",8267,4,727.815,2,727.815,1,121,0)
CAMP LEJEUNE STATUS
"BLD",8267,4,727.815,2,727.815,1,122,0)
ENCOUNTER CAMP LEJEUNE
"BLD",8267,4,727.815,222)
y^n^p^^^^n^^n
"BLD",8267,4,727.815,224)

"BLD",8267,4,727.819,0)
727.819
"BLD",8267,4,727.819,2,0)
^9.641^727.819^1
"BLD",8267,4,727.819,2,727.819,0)
IV DETAIL EXTRACT  (File-top level)
"BLD",8267,4,727.819,2,727.819,1,0)
^9.6411^17^9
"BLD",8267,4,727.819,2,727.819,1,17,0)
DEA, SPECIAL HDLG
"BLD",8267,4,727.819,2,727.819,1,66,0)
RACE 1
"BLD",8267,4,727.819,2,727.819,1,67,0)
PLACEHOLDER
"BLD",8267,4,727.819,2,727.819,1,68,0)
PLACEHOLDER
"BLD",8267,4,727.819,2,727.819,1,69,0)
PLACEHOLDER
"BLD",8267,4,727.819,2,727.819,1,70,0)
PLACEHOLDER
"BLD",8267,4,727.819,2,727.819,1,89,0)
ENCOUNTER SC
"BLD",8267,4,727.819,2,727.819,1,90,0)
CAMP LEJEUNE STATUS
"BLD",8267,4,727.819,2,727.819,1,91,0)
ENCOUNTER CAMP LEJEUNE
"BLD",8267,4,727.819,222)
y^n^p^^^^n^^n
"BLD",8267,4,727.819,224)

"BLD",8267,4,727.824,0)
727.824
"BLD",8267,4,727.824,2,0)
^9.641^727.824^1
"BLD",8267,4,727.824,2,727.824,0)
LAB RESULTS EXTRACT  (File-top level)
"BLD",8267,4,727.824,2,727.824,1,0)
^9.6411^35^3
"BLD",8267,4,727.824,2,727.824,1,33,0)
ENCOUNTER SC
"BLD",8267,4,727.824,2,727.824,1,34,0)
CAMP LEJEUNE STATUS
"BLD",8267,4,727.824,2,727.824,1,35,0)
ENCOUNTER CAMP LEJEUNE
"BLD",8267,4,727.824,222)
y^n^p^^^^n^^n
"BLD",8267,4,727.824,224)

"BLD",8267,4,727.825,0)
727.825
"BLD",8267,4,727.825,2,0)
^9.641^727.825^1
"BLD",8267,4,727.825,2,727.825,0)
QUASAR EXTRACT  (File-top level)
"BLD",8267,4,727.825,2,727.825,1,0)
^9.6411^122^13
"BLD",8267,4,727.825,2,727.825,1,73,0)
RACE 1
"BLD",8267,4,727.825,2,727.825,1,111,0)
ENCOUNTER SC
"BLD",8267,4,727.825,2,727.825,1,112,0)
VIETNAM
"BLD",8267,4,727.825,2,727.825,1,113,0)
PROVIDER #6
"BLD",8267,4,727.825,2,727.825,1,114,0)
PROVIDER #6 PERSON CLASS
"BLD",8267,4,727.825,2,727.825,1,115,0)
PROVIDER #6 NPI
"BLD",8267,4,727.825,2,727.825,1,116,0)
PROVIDER #7
"BLD",8267,4,727.825,2,727.825,1,117,0)
PROVIDER #7 PERSON CLASS
"BLD",8267,4,727.825,2,727.825,1,118,0)
PROVIDER #7 NPI
"BLD",8267,4,727.825,2,727.825,1,119,0)
4CHAR
"BLD",8267,4,727.825,2,727.825,1,120,0)
CLINIC IEN
"BLD",8267,4,727.825,2,727.825,1,121,0)
CAMP LEJEUNE STATUS
"BLD",8267,4,727.825,2,727.825,1,122,0)
ENCOUNTER CAMP LEJEUNE
"BLD",8267,4,727.825,222)
y^n^p^^^^n^^n
"BLD",8267,4,727.825,224)

"BLD",8267,4,727.826,0)
727.826
"BLD",8267,4,727.826,2,0)
^9.641^727.826^1
"BLD",8267,4,727.826,2,727.826,0)
PROSTHETICS EXTRACT  (File-top level)
"BLD",8267,4,727.826,2,727.826,1,0)
^9.6411^100^5
"BLD",8267,4,727.826,2,727.826,1,66,0)
RACE 1
"BLD",8267,4,727.826,2,727.826,1,97,0)
ENCOUNTER SC
"BLD",8267,4,727.826,2,727.826,1,98,0)
VIETNAM
"BLD",8267,4,727.826,2,727.826,1,99,0)
CAMP LEJEUNE STATUS
"BLD",8267,4,727.826,2,727.826,1,100,0)
ENCOUNTER CAMP LEJEUNE
"BLD",8267,4,727.826,222)
y^n^p^^^^n^^n
"BLD",8267,4,727.826,224)

"BLD",8267,4,727.827,0)
727.827
"BLD",8267,4,727.827,2,0)
^9.641^727.827^1
"BLD",8267,4,727.827,2,727.827,0)
CLINIC EXTRACT  (File-top level)
"BLD",8267,4,727.827,2,727.827,1,0)
^9.6411^126^11
"BLD",8267,4,727.827,2,727.827,1,74,0)
RACE 1
"BLD",8267,4,727.827,2,727.827,1,117,0)
ENCOUNTER SC
"BLD",8267,4,727.827,2,727.827,1,118,0)
VIETNAM
"BLD",8267,4,727.827,2,727.827,1,119,0)
SECONDARY PROVIDER #6
"BLD",8267,4,727.827,2,727.827,1,120,0)
SECONDARY PROVIDER #6 PC
"BLD",8267,4,727.827,2,727.827,1,121,0)
SECONDARY PROVIDER #6 NPI
"BLD",8267,4,727.827,2,727.827,1,122,0)
SECONDARY PROVIDER #7
"BLD",8267,4,727.827,2,727.827,1,123,0)
SECONDARY PROVIDER #7 PC
"BLD",8267,4,727.827,2,727.827,1,124,0)
SECONDARY PROVIDER #7 NPI
"BLD",8267,4,727.827,2,727.827,1,125,0)
CAMP LEJEUNE STATUS
"BLD",8267,4,727.827,2,727.827,1,126,0)
ENCOUNTER CAMP LEJEUNE
"BLD",8267,4,727.827,222)
y^n^p^^^^n^^n
"BLD",8267,4,727.827,224)

"BLD",8267,4,727.829,0)
727.829
"BLD",8267,4,727.829,2,0)
^9.641^727.829^1
"BLD",8267,4,727.829,2,727.829,0)
BLOOD BANK EXTRACT  (File-top level)
"BLD",8267,4,727.829,2,727.829,1,0)
^9.6411^31^1
"BLD",8267,4,727.829,2,727.829,1,31,0)
ENCOUNTER SC
"BLD",8267,4,727.829,222)
y^n^p^^^^n^^n
"BLD",8267,4,727.829,224)

"BLD",8267,4,727.832,0)
727.832
"BLD",8267,4,727.832,2,0)
^9.641^727.832^1
"BLD",8267,4,727.832,2,727.832,0)
NUTRITION EXTRACT  (File-top level)
"BLD",8267,4,727.832,2,727.832,1,0)
^9.6411^19^1
"BLD",8267,4,727.832,2,727.832,1,19,0)
RACE 1
"BLD",8267,4,727.832,222)
y^n^p^^^^n^^n
"BLD",8267,4,727.832,224)

"BLD",8267,4,727.833,0)
727.833
"BLD",8267,4,727.833,2,0)
^9.641^727.833^1
"BLD",8267,4,727.833,2,727.833,0)
BCMA EXTRACT  (File-top level)
"BLD",8267,4,727.833,2,727.833,1,0)
^9.6411^44^11
"BLD",8267,4,727.833,2,727.833,1,30,0)
COMPONENT DOSE ORDERED
"BLD",8267,4,727.833,2,727.833,1,31,0)
COMPONENT DOSE GIVEN
"BLD",8267,4,727.833,2,727.833,1,44,0)
DEA, SPECIAL HDLG
"BLD",8267,4,727.833,2,727.833,1,49,0)
ENCOUNTER NUMBER
"BLD",8267,4,727.833,2,727.833,1,58,0)
RACE 1
"BLD",8267,4,727.833,2,727.833,1,81,0)
ENCOUNTER SC
"BLD",8267,4,727.833,2,727.833,1,82,0)
IV ADDITIVE COST
"BLD",8267,4,727.833,2,727.833,1,83,0)
IV SOLUTION COST
"BLD",8267,4,727.833,2,727.833,1,84,0)
DRUG COST
"BLD",8267,4,727.833,2,727.833,1,85,0)
CAMP LEJEUNE STATUS
"BLD",8267,4,727.833,2,727.833,1,86,0)
ENCOUNTER CAMP LEJEUNE
"BLD",8267,4,727.833,222)
y^n^p^^^^n^^n
"BLD",8267,4,727.833,224)

"BLD",8267,4,728.44,0)
728.44
"BLD",8267,4,728.44,2,0)
^9.641^728.44^1
"BLD",8267,4,728.44,2,728.44,0)
CLINICS AND STOP CODES  (File-top level)
"BLD",8267,4,728.44,2,728.44,1,0)
^9.6411^7^2
"BLD",8267,4,728.44,2,728.44,1,7,0)
NATIONAL CODE
"BLD",8267,4,728.44,2,728.44,1,12,0)
RECORD LAST SYNCHED
"BLD",8267,4,728.44,222)
y^n^p^^^^n^^n
"BLD",8267,4,728.44,224)

"BLD",8267,4,728.441,0)
728.441
"BLD",8267,4,728.441,2,0)
^9.641^728.441^1
"BLD",8267,4,728.441,2,728.441,0)
NATIONAL CLINIC  (File-top level)
"BLD",8267,4,728.441,2,728.441,1,0)
^9.6411^2^2
"BLD",8267,4,728.441,2,728.441,1,2,0)
LONG DESCRIPTION
"BLD",8267,4,728.441,2,728.441,1,3,0)
INACTIVATION DATE
"BLD",8267,4,728.441,222)
y^n^p^^^^n^^n
"BLD",8267,4,728.441,224)

"BLD",8267,4,"APDD",727.802,727.802)

"BLD",8267,4,"APDD",727.802,727.802,65)

"BLD",8267,4,"APDD",727.802,727.802,94)

"BLD",8267,4,"APDD",727.802,727.802,95)

"BLD",8267,4,"APDD",727.802,727.802,96)

"BLD",8267,4,"APDD",727.809,727.809)

"BLD",8267,4,"APDD",727.809,727.809,18)

"BLD",8267,4,"APDD",727.809,727.809,61)

"BLD",8267,4,"APDD",727.809,727.809,62)

"BLD",8267,4,"APDD",727.809,727.809,63)

"BLD",8267,4,"APDD",727.809,727.809,64)

"BLD",8267,4,"APDD",727.809,727.809,65)

"BLD",8267,4,"APDD",727.809,727.809,84)

"BLD",8267,4,"APDD",727.809,727.809,85)

"BLD",8267,4,"APDD",727.809,727.809,86)

"BLD",8267,4,"APDD",727.81,727.81)

"BLD",8267,4,"APDD",727.81,727.81,28)

"BLD",8267,4,"APDD",727.81,727.81,72)

"BLD",8267,4,"APDD",727.81,727.81,99)

"BLD",8267,4,"APDD",727.81,727.81,100)

"BLD",8267,4,"APDD",727.81,727.81,101)

"BLD",8267,4,"APDD",727.81,727.81,102)

"BLD",8267,4,"APDD",727.811,727.811)

"BLD",8267,4,"APDD",727.811,727.811,60)

"BLD",8267,4,"APDD",727.811,727.811,100)

"BLD",8267,4,"APDD",727.811,727.811,121)

"BLD",8267,4,"APDD",727.811,727.811,122)

"BLD",8267,4,"APDD",727.811,727.811,123)

"BLD",8267,4,"APDD",727.811,727.811,124)

"BLD",8267,4,"APDD",727.811,727.811,125)

"BLD",8267,4,"APDD",727.811,727.811,126)

"BLD",8267,4,"APDD",727.811,727.811,127)

"BLD",8267,4,"APDD",727.811,727.811,128)

"BLD",8267,4,"APDD",727.811,727.811,129)

"BLD",8267,4,"APDD",727.811,727.811,130)

"BLD",8267,4,"APDD",727.811,727.811,131)

"BLD",8267,4,"APDD",727.813,727.813)

"BLD",8267,4,"APDD",727.813,727.813,48)

"BLD",8267,4,"APDD",727.813,727.813,49)

"BLD",8267,4,"APDD",727.814,727.814)

"BLD",8267,4,"APDD",727.814,727.814,50)

"BLD",8267,4,"APDD",727.814,727.814,51)

"BLD",8267,4,"APDD",727.814,727.814,52)

"BLD",8267,4,"APDD",727.815,727.815)

"BLD",8267,4,"APDD",727.815,727.815,73)

"BLD",8267,4,"APDD",727.815,727.815,111)

"BLD",8267,4,"APDD",727.815,727.815,112)

"BLD",8267,4,"APDD",727.815,727.815,113)

"BLD",8267,4,"APDD",727.815,727.815,114)

"BLD",8267,4,"APDD",727.815,727.815,115)

"BLD",8267,4,"APDD",727.815,727.815,116)

"BLD",8267,4,"APDD",727.815,727.815,117)

"BLD",8267,4,"APDD",727.815,727.815,118)

"BLD",8267,4,"APDD",727.815,727.815,119)

"BLD",8267,4,"APDD",727.815,727.815,120)

"BLD",8267,4,"APDD",727.815,727.815,121)

"BLD",8267,4,"APDD",727.815,727.815,122)

"BLD",8267,4,"APDD",727.819,727.819)

"BLD",8267,4,"APDD",727.819,727.819,17)

"BLD",8267,4,"APDD",727.819,727.819,66)

"BLD",8267,4,"APDD",727.819,727.819,67)

"BLD",8267,4,"APDD",727.819,727.819,68)

"BLD",8267,4,"APDD",727.819,727.819,69)

"BLD",8267,4,"APDD",727.819,727.819,70)

"BLD",8267,4,"APDD",727.819,727.819,89)

"BLD",8267,4,"APDD",727.819,727.819,90)

"BLD",8267,4,"APDD",727.819,727.819,91)

"BLD",8267,4,"APDD",727.824,727.824)

"BLD",8267,4,"APDD",727.824,727.824,33)

"BLD",8267,4,"APDD",727.824,727.824,34)

"BLD",8267,4,"APDD",727.824,727.824,35)

"BLD",8267,4,"APDD",727.825,727.825)

"BLD",8267,4,"APDD",727.825,727.825,73)

"BLD",8267,4,"APDD",727.825,727.825,111)

"BLD",8267,4,"APDD",727.825,727.825,112)

"BLD",8267,4,"APDD",727.825,727.825,113)

"BLD",8267,4,"APDD",727.825,727.825,114)

"BLD",8267,4,"APDD",727.825,727.825,115)

"BLD",8267,4,"APDD",727.825,727.825,116)

"BLD",8267,4,"APDD",727.825,727.825,117)

"BLD",8267,4,"APDD",727.825,727.825,118)

"BLD",8267,4,"APDD",727.825,727.825,119)

"BLD",8267,4,"APDD",727.825,727.825,120)

"BLD",8267,4,"APDD",727.825,727.825,121)

"BLD",8267,4,"APDD",727.825,727.825,122)

"BLD",8267,4,"APDD",727.826,727.826)

"BLD",8267,4,"APDD",727.826,727.826,66)

"BLD",8267,4,"APDD",727.826,727.826,97)

"BLD",8267,4,"APDD",727.826,727.826,98)

"BLD",8267,4,"APDD",727.826,727.826,99)

"BLD",8267,4,"APDD",727.826,727.826,100)

"BLD",8267,4,"APDD",727.827,727.827)

"BLD",8267,4,"APDD",727.827,727.827,74)

"BLD",8267,4,"APDD",727.827,727.827,117)

"BLD",8267,4,"APDD",727.827,727.827,118)

"BLD",8267,4,"APDD",727.827,727.827,119)

"BLD",8267,4,"APDD",727.827,727.827,120)

"BLD",8267,4,"APDD",727.827,727.827,121)

"BLD",8267,4,"APDD",727.827,727.827,122)

"BLD",8267,4,"APDD",727.827,727.827,123)

"BLD",8267,4,"APDD",727.827,727.827,124)

"BLD",8267,4,"APDD",727.827,727.827,125)

"BLD",8267,4,"APDD",727.827,727.827,126)

"BLD",8267,4,"APDD",727.829,727.829)

"BLD",8267,4,"APDD",727.829,727.829,31)

"BLD",8267,4,"APDD",727.832,727.832)

"BLD",8267,4,"APDD",727.832,727.832,19)

"BLD",8267,4,"APDD",727.833,727.833)

"BLD",8267,4,"APDD",727.833,727.833,30)

"BLD",8267,4,"APDD",727.833,727.833,31)

"BLD",8267,4,"APDD",727.833,727.833,44)

"BLD",8267,4,"APDD",727.833,727.833,49)

"BLD",8267,4,"APDD",727.833,727.833,58)

"BLD",8267,4,"APDD",727.833,727.833,81)

"BLD",8267,4,"APDD",727.833,727.833,82)

"BLD",8267,4,"APDD",727.833,727.833,83)

"BLD",8267,4,"APDD",727.833,727.833,84)

"BLD",8267,4,"APDD",727.833,727.833,85)

"BLD",8267,4,"APDD",727.833,727.833,86)

"BLD",8267,4,"APDD",728.44,728.44)

"BLD",8267,4,"APDD",728.44,728.44,7)

"BLD",8267,4,"APDD",728.44,728.44,12)

"BLD",8267,4,"APDD",728.441,728.441)

"BLD",8267,4,"APDD",728.441,728.441,2)

"BLD",8267,4,"APDD",728.441,728.441,3)

"BLD",8267,4,"B",727.802,727.802)

"BLD",8267,4,"B",727.809,727.809)

"BLD",8267,4,"B",727.81,727.81)

"BLD",8267,4,"B",727.811,727.811)

"BLD",8267,4,"B",727.813,727.813)

"BLD",8267,4,"B",727.814,727.814)

"BLD",8267,4,"B",727.815,727.815)

"BLD",8267,4,"B",727.819,727.819)

"BLD",8267,4,"B",727.824,727.824)

"BLD",8267,4,"B",727.825,727.825)

"BLD",8267,4,"B",727.826,727.826)

"BLD",8267,4,"B",727.827,727.827)

"BLD",8267,4,"B",727.829,727.829)

"BLD",8267,4,"B",727.832,727.832)

"BLD",8267,4,"B",727.833,727.833)

"BLD",8267,4,"B",728.44,728.44)

"BLD",8267,4,"B",728.441,728.441)

"BLD",8267,6.3)
9
"BLD",8267,"ABPKG")
n
"BLD",8267,"INIT")
POST^ECX3P144
"BLD",8267,"KRN",0)
^9.67PA^779.2^20
"BLD",8267,"KRN",.4,0)
.4
"BLD",8267,"KRN",.401,0)
.401
"BLD",8267,"KRN",.401,"NM",0)
^9.68A^1^1
"BLD",8267,"KRN",.401,"NM",1,0)
ECX CLINIC CODE    FILE #728.441^728.441^0
"BLD",8267,"KRN",.401,"NM","B","ECX CLINIC CODE    FILE #728.441",1)

"BLD",8267,"KRN",.402,0)
.402
"BLD",8267,"KRN",.403,0)
.403
"BLD",8267,"KRN",.5,0)
.5
"BLD",8267,"KRN",.84,0)
.84
"BLD",8267,"KRN",3.6,0)
3.6
"BLD",8267,"KRN",3.8,0)
3.8
"BLD",8267,"KRN",9.2,0)
9.2
"BLD",8267,"KRN",9.8,0)
9.8
"BLD",8267,"KRN",9.8,"NM",0)
^9.68A^59^56
"BLD",8267,"KRN",9.8,"NM",1,0)
ECX3P144^^0^B63166716
"BLD",8267,"KRN",9.8,"NM",3,0)
ECXTRAC^^0^B97271442
"BLD",8267,"KRN",9.8,"NM",5,0)
ECXUTL3^^0^B94009566
"BLD",8267,"KRN",9.8,"NM",6,0)
ECXPURG^^0^B27702088
"BLD",8267,"KRN",9.8,"NM",7,0)
ECXPURG1^^0^B38351530
"BLD",8267,"KRN",9.8,"NM",8,0)
ECXUTL^^0^B53992756
"BLD",8267,"KRN",9.8,"NM",9,0)
ECXSCLD^^0^B220306894
"BLD",8267,"KRN",9.8,"NM",10,0)
ECXSCLD1^^0^B14959984
"BLD",8267,"KRN",9.8,"NM",11,0)
ECXBCM^^0^B87281360
"BLD",8267,"KRN",9.8,"NM",12,0)
ECXUD^^0^B62950781
"BLD",8267,"KRN",9.8,"NM",13,0)
ECXTRANS^^0^B59881332
"BLD",8267,"KRN",9.8,"NM",14,0)
ECXAPRO^^0^B58811063
"BLD",8267,"KRN",9.8,"NM",15,0)
ECXAPRO2^^0^B27501495
"BLD",8267,"KRN",9.8,"NM",16,0)
ECXSURG^^0^B76612966
"BLD",8267,"KRN",9.8,"NM",17,0)
ECXSURG1^^0^B21879740
"BLD",8267,"KRN",9.8,"NM",18,0)
ECXSTOP^^0^B13978412
"BLD",8267,"KRN",9.8,"NM",19,0)
ECXSCX3^^0^B21200160
"BLD",8267,"KRN",9.8,"NM",20,0)
ECXSCXN^^0^B86877891
"BLD",8267,"KRN",9.8,"NM",21,0)
ECXSCX2^^0^B9845162
"BLD",8267,"KRN",9.8,"NM",22,0)
ECXQSR^^0^B61223139
"BLD",8267,"KRN",9.8,"NM",23,0)
ECXQSR1^^0^B16250505
"BLD",8267,"KRN",9.8,"NM",24,0)
ECXEC^^0^B75634343
"BLD",8267,"KRN",9.8,"NM",25,0)
ECXPRO^^0^B45721055
"BLD",8267,"KRN",9.8,"NM",26,0)
ECXOPRX^^0^B64829942
"BLD",8267,"KRN",9.8,"NM",27,0)
ECXOPRX1^^0^B9994734
"BLD",8267,"KRN",9.8,"NM",29,0)
ECXPIVDN^^0^B58898409
"BLD",8267,"KRN",9.8,"NM",30,0)
ECXUTL1^^0^B85232307
"BLD",8267,"KRN",9.8,"NM",31,0)
ECXSCX1^^0^B90609071
"BLD",8267,"KRN",9.8,"NM",32,0)
ECXSCRP^^0^B30491382
"BLD",8267,"KRN",9.8,"NM",33,0)
ECXPROCT^^0^B24695240
"BLD",8267,"KRN",9.8,"NM",34,0)
ECXUPRO^^0^B27534272
"BLD",8267,"KRN",9.8,"NM",35,0)
ECXUPRO1^^0^B7760162
"BLD",8267,"KRN",9.8,"NM",36,0)
ECXCPRO^^0^B35725966
"BLD",8267,"KRN",9.8,"NM",37,0)
ECXCPRO1^^0^B17918535
"BLD",8267,"KRN",9.8,"NM",38,0)
ECXLPRO^^0^B29349856
"BLD",8267,"KRN",9.8,"NM",39,0)
ECXLPRO1^^0^B11630599
"BLD",8267,"KRN",9.8,"NM",40,0)
ECXDRUG1^^0^B44065149
"BLD",8267,"KRN",9.8,"NM",41,0)
ECXDRUG2^^0^B17542635
"BLD",8267,"KRN",9.8,"NM",42,0)
ECXLARPT^^0^B29347556
"BLD",8267,"KRN",9.8,"NM",43,0)
ECXAECS^^0^B50961338
"BLD",8267,"KRN",9.8,"NM",44,0)
ECXAPRO1^^0^B20521932
"BLD",8267,"KRN",9.8,"NM",45,0)
ECXAPHAP^^0^B37750813
"BLD",8267,"KRN",9.8,"NM",46,0)
ECXAPHP2^^0^B29677445
"BLD",8267,"KRN",9.8,"NM",47,0)
ECXAPHA^^0^B62748333
"BLD",8267,"KRN",9.8,"NM",48,0)
ECXSCXN1^^0^B17063992
"BLD",8267,"KRN",9.8,"NM",49,0)
ECXKILL1^^0^B14673623
"BLD",8267,"KRN",9.8,"NM",50,0)
ECXKILL^^0^B9656369
"BLD",8267,"KRN",9.8,"NM",51,0)
ECXADM^^0^B59038752
"BLD",8267,"KRN",9.8,"NM",52,0)
ECXPIVD2^^0^B9468858
"BLD",8267,"KRN",9.8,"NM",53,0)
ECXLABN^^0^B46690965
"BLD",8267,"KRN",9.8,"NM",54,0)
ECXLABR^^0^B22824878
"BLD",8267,"KRN",9.8,"NM",55,0)
ECXLBB^^0^B52423335
"BLD",8267,"KRN",9.8,"NM",56,0)
ECXLBB1^^0^B27728068
"BLD",8267,"KRN",9.8,"NM",57,0)
ECXRAD^^0^B44395156
"BLD",8267,"KRN",9.8,"NM",58,0)
ECXUTL2^^0^B72234767
"BLD",8267,"KRN",9.8,"NM",59,0)
ECXAPHA2^^0^B51669266
"BLD",8267,"KRN",9.8,"NM","B","ECX3P144",1)

"BLD",8267,"KRN",9.8,"NM","B","ECXADM",51)

"BLD",8267,"KRN",9.8,"NM","B","ECXAECS",43)

"BLD",8267,"KRN",9.8,"NM","B","ECXAPHA",47)

"BLD",8267,"KRN",9.8,"NM","B","ECXAPHA2",59)

"BLD",8267,"KRN",9.8,"NM","B","ECXAPHAP",45)

"BLD",8267,"KRN",9.8,"NM","B","ECXAPHP2",46)

"BLD",8267,"KRN",9.8,"NM","B","ECXAPRO",14)

"BLD",8267,"KRN",9.8,"NM","B","ECXAPRO1",44)

"BLD",8267,"KRN",9.8,"NM","B","ECXAPRO2",15)

"BLD",8267,"KRN",9.8,"NM","B","ECXBCM",11)

"BLD",8267,"KRN",9.8,"NM","B","ECXCPRO",36)

"BLD",8267,"KRN",9.8,"NM","B","ECXCPRO1",37)

"BLD",8267,"KRN",9.8,"NM","B","ECXDRUG1",40)

"BLD",8267,"KRN",9.8,"NM","B","ECXDRUG2",41)

"BLD",8267,"KRN",9.8,"NM","B","ECXEC",24)

"BLD",8267,"KRN",9.8,"NM","B","ECXKILL",50)

"BLD",8267,"KRN",9.8,"NM","B","ECXKILL1",49)

"BLD",8267,"KRN",9.8,"NM","B","ECXLABN",53)

"BLD",8267,"KRN",9.8,"NM","B","ECXLABR",54)

"BLD",8267,"KRN",9.8,"NM","B","ECXLARPT",42)

"BLD",8267,"KRN",9.8,"NM","B","ECXLBB",55)

"BLD",8267,"KRN",9.8,"NM","B","ECXLBB1",56)

"BLD",8267,"KRN",9.8,"NM","B","ECXLPRO",38)

"BLD",8267,"KRN",9.8,"NM","B","ECXLPRO1",39)

"BLD",8267,"KRN",9.8,"NM","B","ECXOPRX",26)

"BLD",8267,"KRN",9.8,"NM","B","ECXOPRX1",27)

"BLD",8267,"KRN",9.8,"NM","B","ECXPIVD2",52)

"BLD",8267,"KRN",9.8,"NM","B","ECXPIVDN",29)

"BLD",8267,"KRN",9.8,"NM","B","ECXPRO",25)

"BLD",8267,"KRN",9.8,"NM","B","ECXPROCT",33)

"BLD",8267,"KRN",9.8,"NM","B","ECXPURG",6)

"BLD",8267,"KRN",9.8,"NM","B","ECXPURG1",7)

"BLD",8267,"KRN",9.8,"NM","B","ECXQSR",22)

"BLD",8267,"KRN",9.8,"NM","B","ECXQSR1",23)

"BLD",8267,"KRN",9.8,"NM","B","ECXRAD",57)

"BLD",8267,"KRN",9.8,"NM","B","ECXSCLD",9)

"BLD",8267,"KRN",9.8,"NM","B","ECXSCLD1",10)

"BLD",8267,"KRN",9.8,"NM","B","ECXSCRP",32)

"BLD",8267,"KRN",9.8,"NM","B","ECXSCX1",31)

"BLD",8267,"KRN",9.8,"NM","B","ECXSCX2",21)

"BLD",8267,"KRN",9.8,"NM","B","ECXSCX3",19)

"BLD",8267,"KRN",9.8,"NM","B","ECXSCXN",20)

"BLD",8267,"KRN",9.8,"NM","B","ECXSCXN1",48)

"BLD",8267,"KRN",9.8,"NM","B","ECXSTOP",18)

"BLD",8267,"KRN",9.8,"NM","B","ECXSURG",16)

"BLD",8267,"KRN",9.8,"NM","B","ECXSURG1",17)

"BLD",8267,"KRN",9.8,"NM","B","ECXTRAC",3)

"BLD",8267,"KRN",9.8,"NM","B","ECXTRANS",13)

"BLD",8267,"KRN",9.8,"NM","B","ECXUD",12)

"BLD",8267,"KRN",9.8,"NM","B","ECXUPRO",34)

"BLD",8267,"KRN",9.8,"NM","B","ECXUPRO1",35)

"BLD",8267,"KRN",9.8,"NM","B","ECXUTL",8)

"BLD",8267,"KRN",9.8,"NM","B","ECXUTL1",30)

"BLD",8267,"KRN",9.8,"NM","B","ECXUTL2",58)

"BLD",8267,"KRN",9.8,"NM","B","ECXUTL3",5)

"BLD",8267,"KRN",19,0)
19
"BLD",8267,"KRN",19,"NM",0)
^9.68A^3^3
"BLD",8267,"KRN",19,"NM",1,0)
ECXDELEF^^0
"BLD",8267,"KRN",19,"NM",2,0)
ECXPURG^^0
"BLD",8267,"KRN",19,"NM",3,0)
ECX PHA COST^^0
"BLD",8267,"KRN",19,"NM","B","ECX PHA COST",3)

"BLD",8267,"KRN",19,"NM","B","ECXDELEF",1)

"BLD",8267,"KRN",19,"NM","B","ECXPURG",2)

"BLD",8267,"KRN",19.1,0)
19.1
"BLD",8267,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",8267,"KRN",19.1,"NM",1,0)
ECX DSS TEST^^0
"BLD",8267,"KRN",19.1,"NM","B","ECX DSS TEST",1)

"BLD",8267,"KRN",101,0)
101
"BLD",8267,"KRN",409.61,0)
409.61
"BLD",8267,"KRN",771,0)
771
"BLD",8267,"KRN",779.2,0)
779.2
"BLD",8267,"KRN",870,0)
870
"BLD",8267,"KRN",8989.51,0)
8989.51
"BLD",8267,"KRN",8989.52,0)
8989.52
"BLD",8267,"KRN",8994,0)
8994
"BLD",8267,"KRN","B",.4,.4)

"BLD",8267,"KRN","B",.401,.401)

"BLD",8267,"KRN","B",.402,.402)

"BLD",8267,"KRN","B",.403,.403)

"BLD",8267,"KRN","B",.5,.5)

"BLD",8267,"KRN","B",.84,.84)

"BLD",8267,"KRN","B",3.6,3.6)

"BLD",8267,"KRN","B",3.8,3.8)

"BLD",8267,"KRN","B",9.2,9.2)

"BLD",8267,"KRN","B",9.8,9.8)

"BLD",8267,"KRN","B",19,19)

"BLD",8267,"KRN","B",19.1,19.1)

"BLD",8267,"KRN","B",101,101)

"BLD",8267,"KRN","B",409.61,409.61)

"BLD",8267,"KRN","B",771,771)

"BLD",8267,"KRN","B",779.2,779.2)

"BLD",8267,"KRN","B",870,870)

"BLD",8267,"KRN","B",8989.51,8989.51)

"BLD",8267,"KRN","B",8989.52,8989.52)

"BLD",8267,"KRN","B",8994,8994)

"BLD",8267,"PRET")
PRETRAN^ECX3P144
"BLD",8267,"QDEF")
^^^^^^^^
"BLD",8267,"QUES",0)
^9.62^^
"BLD",8267,"REQB",0)
^9.611^5^5
"BLD",8267,"REQB",1,0)
ECX*3.0*100^1
"BLD",8267,"REQB",2,0)
ECX*3.0*123^1
"BLD",8267,"REQB",3,0)
ECX*3.0*137^1
"BLD",8267,"REQB",4,0)
ECX*3.0*143^1
"BLD",8267,"REQB",5,0)
ECX*3.0*142^1
"BLD",8267,"REQB","B","ECX*3.0*100",1)

"BLD",8267,"REQB","B","ECX*3.0*123",2)

"BLD",8267,"REQB","B","ECX*3.0*137",3)

"BLD",8267,"REQB","B","ECX*3.0*142",5)

"BLD",8267,"REQB","B","ECX*3.0*143",4)

"FIA",727.802)
ADMISSION EXTRACT
"FIA",727.802,0)
^ECX(727.802,
"FIA",727.802,0,0)
727.802
"FIA",727.802,0,1)
y^n^p^^^^n^^n
"FIA",727.802,0,10)

"FIA",727.802,0,11)

"FIA",727.802,0,"RLRO")

"FIA",727.802,0,"VR")
3.0^ECX
"FIA",727.802,727.802)
1
"FIA",727.802,727.802,65)

"FIA",727.802,727.802,94)

"FIA",727.802,727.802,95)

"FIA",727.802,727.802,96)

"FIA",727.809)
UNIT DOSE LOCAL EXTRACT
"FIA",727.809,0)
^ECX(727.809,
"FIA",727.809,0,0)
727.809
"FIA",727.809,0,1)
y^n^p^^^^n^^n
"FIA",727.809,0,10)

"FIA",727.809,0,11)

"FIA",727.809,0,"RLRO")

"FIA",727.809,0,"VR")
3.0^ECX
"FIA",727.809,727.809)
1
"FIA",727.809,727.809,18)

"FIA",727.809,727.809,61)

"FIA",727.809,727.809,62)

"FIA",727.809,727.809,63)

"FIA",727.809,727.809,64)

"FIA",727.809,727.809,65)

"FIA",727.809,727.809,84)

"FIA",727.809,727.809,85)

"FIA",727.809,727.809,86)

"FIA",727.81)
PRESCRIPTION EXTRACT
"FIA",727.81,0)
^ECX(727.81,
"FIA",727.81,0,0)
727.81
"FIA",727.81,0,1)
y^n^p^^^^n^^n
"FIA",727.81,0,10)

"FIA",727.81,0,11)

"FIA",727.81,0,"RLRO")

"FIA",727.81,0,"VR")
3.0^ECX
"FIA",727.81,727.81)
1
"FIA",727.81,727.81,28)

"FIA",727.81,727.81,72)

"FIA",727.81,727.81,99)

"FIA",727.81,727.81,100)

"FIA",727.81,727.81,101)

"FIA",727.81,727.81,102)

"FIA",727.811)
SURGERY EXTRACT
"FIA",727.811,0)
^ECX(727.811,
"FIA",727.811,0,0)
727.811
"FIA",727.811,0,1)
y^n^p^^^^n^^n
"FIA",727.811,0,10)

"FIA",727.811,0,11)

"FIA",727.811,0,"RLRO")

"FIA",727.811,0,"VR")
3.0^ECX
"FIA",727.811,727.811)
1
"FIA",727.811,727.811,60)

"FIA",727.811,727.811,100)

"FIA",727.811,727.811,121)

"FIA",727.811,727.811,122)

"FIA",727.811,727.811,123)

"FIA",727.811,727.811,124)

"FIA",727.811,727.811,125)

"FIA",727.811,727.811,126)

"FIA",727.811,727.811,127)

"FIA",727.811,727.811,128)

"FIA",727.811,727.811,129)

"FIA",727.811,727.811,130)

"FIA",727.811,727.811,131)

"FIA",727.813)
LABORATORY EXTRACT
"FIA",727.813,0)
^ECX(727.813,
"FIA",727.813,0,0)
727.813
"FIA",727.813,0,1)
y^n^p^^^^n^^n
"FIA",727.813,0,10)

"FIA",727.813,0,11)

"FIA",727.813,0,"RLRO")

"FIA",727.813,0,"VR")
3.0^ECX
"FIA",727.813,727.813)
1
"FIA",727.813,727.813,48)

"FIA",727.813,727.813,49)

"FIA",727.814)
RADIOLOGY EXTRACT
"FIA",727.814,0)
^ECX(727.814,
"FIA",727.814,0,0)
727.814
"FIA",727.814,0,1)
y^n^p^^^^n^^n
"FIA",727.814,0,10)

"FIA",727.814,0,11)

"FIA",727.814,0,"RLRO")

"FIA",727.814,0,"VR")
3.0^ECX
"FIA",727.814,727.814)
1
"FIA",727.814,727.814,50)

"FIA",727.814,727.814,51)

"FIA",727.814,727.814,52)

"FIA",727.815)
EVENT CAPTURE LOCAL EXTRACT
"FIA",727.815,0)
^ECX(727.815,
"FIA",727.815,0,0)
727.815
"FIA",727.815,0,1)
y^n^p^^^^n^^n
"FIA",727.815,0,10)

"FIA",727.815,0,11)

"FIA",727.815,0,"RLRO")

"FIA",727.815,0,"VR")
3.0^ECX
"FIA",727.815,727.815)
1
"FIA",727.815,727.815,73)

"FIA",727.815,727.815,111)

"FIA",727.815,727.815,112)

"FIA",727.815,727.815,113)

"FIA",727.815,727.815,114)

"FIA",727.815,727.815,115)

"FIA",727.815,727.815,116)

"FIA",727.815,727.815,117)

"FIA",727.815,727.815,118)

"FIA",727.815,727.815,119)

"FIA",727.815,727.815,120)

"FIA",727.815,727.815,121)

"FIA",727.815,727.815,122)

"FIA",727.819)
IV DETAIL EXTRACT
"FIA",727.819,0)
^ECX(727.819,
"FIA",727.819,0,0)
727.819
"FIA",727.819,0,1)
y^n^p^^^^n^^n
"FIA",727.819,0,10)

"FIA",727.819,0,11)

"FIA",727.819,0,"RLRO")

"FIA",727.819,0,"VR")
3.0^ECX
"FIA",727.819,727.819)
1
"FIA",727.819,727.819,17)

"FIA",727.819,727.819,66)

"FIA",727.819,727.819,67)

"FIA",727.819,727.819,68)

"FIA",727.819,727.819,69)

"FIA",727.819,727.819,70)

"FIA",727.819,727.819,89)

"FIA",727.819,727.819,90)

"FIA",727.819,727.819,91)

"FIA",727.824)
LAB RESULTS EXTRACT
"FIA",727.824,0)
^ECX(727.824,
"FIA",727.824,0,0)
727.824
"FIA",727.824,0,1)
y^n^p^^^^n^^n
"FIA",727.824,0,10)

"FIA",727.824,0,11)

"FIA",727.824,0,"RLRO")

"FIA",727.824,0,"VR")
3.0^ECX
"FIA",727.824,727.824)
1
"FIA",727.824,727.824,33)

"FIA",727.824,727.824,34)

"FIA",727.824,727.824,35)

"FIA",727.825)
QUASAR EXTRACT
"FIA",727.825,0)
^ECX(727.825,
"FIA",727.825,0,0)
727.825
"FIA",727.825,0,1)
y^n^p^^^^n^^n
"FIA",727.825,0,10)

"FIA",727.825,0,11)

"FIA",727.825,0,"RLRO")

"FIA",727.825,0,"VR")
3.0^ECX
"FIA",727.825,727.825)
1
"FIA",727.825,727.825,73)

"FIA",727.825,727.825,111)

"FIA",727.825,727.825,112)

"FIA",727.825,727.825,113)

"FIA",727.825,727.825,114)

"FIA",727.825,727.825,115)

"FIA",727.825,727.825,116)

"FIA",727.825,727.825,117)

"FIA",727.825,727.825,118)

"FIA",727.825,727.825,119)

"FIA",727.825,727.825,120)

"FIA",727.825,727.825,121)

"FIA",727.825,727.825,122)

"FIA",727.826)
PROSTHETICS EXTRACT
"FIA",727.826,0)
^ECX(727.826,
"FIA",727.826,0,0)
727.826
"FIA",727.826,0,1)
y^n^p^^^^n^^n
"FIA",727.826,0,10)

"FIA",727.826,0,11)

"FIA",727.826,0,"RLRO")

"FIA",727.826,0,"VR")
3.0^ECX
"FIA",727.826,727.826)
1
"FIA",727.826,727.826,66)

"FIA",727.826,727.826,97)

"FIA",727.826,727.826,98)

"FIA",727.826,727.826,99)

"FIA",727.826,727.826,100)

"FIA",727.827)
CLINIC EXTRACT
"FIA",727.827,0)
^ECX(727.827,
"FIA",727.827,0,0)
727.827
"FIA",727.827,0,1)
y^n^p^^^^n^^n
"FIA",727.827,0,10)

"FIA",727.827,0,11)

"FIA",727.827,0,"RLRO")

"FIA",727.827,0,"VR")
3.0^ECX
"FIA",727.827,727.827)
1
"FIA",727.827,727.827,74)

"FIA",727.827,727.827,117)

"FIA",727.827,727.827,118)

"FIA",727.827,727.827,119)

"FIA",727.827,727.827,120)

"FIA",727.827,727.827,121)

"FIA",727.827,727.827,122)

"FIA",727.827,727.827,123)

"FIA",727.827,727.827,124)

"FIA",727.827,727.827,125)

"FIA",727.827,727.827,126)

"FIA",727.829)
BLOOD BANK EXTRACT
"FIA",727.829,0)
^ECX(727.829,
"FIA",727.829,0,0)
727.829
"FIA",727.829,0,1)
y^n^p^^^^n^^n
"FIA",727.829,0,10)

"FIA",727.829,0,11)

"FIA",727.829,0,"RLRO")

"FIA",727.829,0,"VR")
3.0^ECX
"FIA",727.829,727.829)
1
"FIA",727.829,727.829,31)

"FIA",727.832)
NUTRITION EXTRACT
"FIA",727.832,0)
^ECX(727.832,
"FIA",727.832,0,0)
727.832
"FIA",727.832,0,1)
y^n^p^^^^n^^n
"FIA",727.832,0,10)

"FIA",727.832,0,11)

"FIA",727.832,0,"RLRO")

"FIA",727.832,0,"VR")
3.0^ECX
"FIA",727.832,727.832)
1
"FIA",727.832,727.832,19)

"FIA",727.833)
BCMA EXTRACT
"FIA",727.833,0)
^ECX(727.833,
"FIA",727.833,0,0)
727.833
"FIA",727.833,0,1)
y^n^p^^^^n^^n
"FIA",727.833,0,10)

"FIA",727.833,0,11)

"FIA",727.833,0,"RLRO")

"FIA",727.833,0,"VR")
3.0^ECX
"FIA",727.833,727.833)
1
"FIA",727.833,727.833,30)

"FIA",727.833,727.833,31)

"FIA",727.833,727.833,44)

"FIA",727.833,727.833,49)

"FIA",727.833,727.833,58)

"FIA",727.833,727.833,81)

"FIA",727.833,727.833,82)

"FIA",727.833,727.833,83)

"FIA",727.833,727.833,84)

"FIA",727.833,727.833,85)

"FIA",727.833,727.833,86)

"FIA",728.44)
CLINICS AND STOP CODES
"FIA",728.44,0)
^ECX(728.44,
"FIA",728.44,0,0)
728.44P
"FIA",728.44,0,1)
y^n^p^^^^n^^n
"FIA",728.44,0,10)

"FIA",728.44,0,11)

"FIA",728.44,0,"RLRO")

"FIA",728.44,0,"VR")
3.0^ECX
"FIA",728.44,728.44)
1
"FIA",728.44,728.44,7)

"FIA",728.44,728.44,12)

"FIA",728.441)
NATIONAL CLINIC
"FIA",728.441,0)
^ECX(728.441,
"FIA",728.441,0,0)
728.441
"FIA",728.441,0,1)
y^n^p^^^^n^^n
"FIA",728.441,0,10)

"FIA",728.441,0,11)

"FIA",728.441,0,"RLRO")

"FIA",728.441,0,"VR")
3.0^ECX
"FIA",728.441,728.441)
1
"FIA",728.441,728.441,2)

"FIA",728.441,728.441,3)

"FIA",728.441,728.4412)
0
"INIT")
POST^ECX3P144
"KRN",.401,1438,-1)
0^1
"KRN",.401,1438,0)
ECX CLINIC CODE^3130508.1534^^728.441^^^3130814
"KRN",.401,1438,2,0)
^.4014^2^2
"KRN",.401,1438,2,1,0)
728.441^.01^CODE^]^^^^^^4
"KRN",.401,1438,2,1,"GET")
S DISX(1)=$P($G(^ECX(728.441,D0,0)),U)
"KRN",.401,1438,2,1,"IX")
^ECX(728.441,"B",^ECX(728.441,^2
"KRN",.401,1438,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,1438,2,1,"SER")
0^0
"KRN",.401,1438,2,1,"TXT")
CODE not null
"KRN",.401,1438,2,2,0)
728.441^^INACTIVATION DATE=""^"@B^;L1^^^^^4
"KRN",.401,1438,2,2,"CM")
S Y(1)=$S($D(^ECX(728.441,D0,2)):^(2),1:"") S X=$P(Y(1),U,1)="" I D0>0 S DISX(2)=X
"KRN",.401,1438,2,2,"F")
0
"KRN",.401,1438,2,2,"GET")
S Y(1)=$S($D(^ECX(728.441,D0,2)):^(2),1:"") S X=$P(Y(1),U,1)="" I D0>0 S DISX(2)=X
"KRN",.401,1438,2,2,"QCON")
I DISX(2)
"KRN",.401,1438,2,2,"T")
1
"KRN",.401,1438,2,2,"TXT")
INACTIVATION DATE=""""
"KRN",.401,1438,2,"B",728.441,1)

"KRN",.401,1438,2,"B",728.441,2)

"KRN",19,10131,-1)
0^2
"KRN",19,10131,0)
ECXPURG^Purge Extract Holding Files^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10131,1,0)
^^23^23^3130806^
"KRN",19,10131,1,1,0)
This option purges data that resides in the "holding files" for the IVP,
"KRN",19,10131,1,2,0)
UDP and VBECS extracts.
"KRN",19,10131,1,3,0)
 
"KRN",19,10131,1,4,0)
Care must be taken for several reasons:
"KRN",19,10131,1,5,0)
 
"KRN",19,10131,1,6,0)
-  Choosing a broad date range for the holding files could mean an
"KRN",19,10131,1,7,0)
   excessively large number of records and be very CPU intensive.  Please
"KRN",19,10131,1,8,0)
   be sure to queue this purge for off-hours and limit the number of
"KRN",19,10131,1,9,0)
   holding files to be purged per a single queued session.
"KRN",19,10131,1,10,0)
-  The IVP, UDP and VBECS ""holding"" files are intermediate files that
"KRN",19,10131,1,11,0)
   are populated ""realtime"" by inpatient pharmacy and VBECS activity.
"KRN",19,10131,1,12,0)
   These files are then used to generate the IVP, UDP and VBECS extracts.
"KRN",19,10131,1,13,0)
   NOTE:    The VBECS files CANNOT be regenerated.
"KRN",19,10131,1,14,0)
   Once it is purged for a date range, extracts can no longer be
"KRN",19,10131,1,15,0)
   generated for that time period."
"KRN",19,10131,1,16,0)
 
"KRN",19,10131,1,17,0)
 
"KRN",19,10131,1,18,0)
 
"KRN",19,10131,1,19,0)
PURGE RECOMMENDATIONS:
"KRN",19,10131,1,20,0)
Purging of any local holding files is not recommended until your facility
"KRN",19,10131,1,21,0)
has successfully created  extracts, transmitted to the Austin Automation
"KRN",19,10131,1,22,0)
Center, audited the counts,loaded the data into DSS AND ARE CONTENT WITH
"KRN",19,10131,1,23,0)
THE RESULTS.
"KRN",19,10131,25)
EN^ECXPURG
"KRN",19,10131,"U")
PURGE EXTRACT HOLDING FILES
"KRN",19,13952,-1)
0^1
"KRN",19,13952,0)
ECXDELEF^Delete Extract Files^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,13952,1,0)
^^17^17^3130806^
"KRN",19,13952,1,1,0)
This option deletes individual or a range of DSS extracts.
"KRN",19,13952,1,2,0)
 
"KRN",19,13952,1,3,0)
Care must be taken for several reasons:
"KRN",19,13952,1,4,0)
 
"KRN",19,13952,1,5,0)
-  You can delete ANY existing extract.  This includes transmitted and
"KRN",19,13952,1,6,0)
   non- transmitted extracts as well as extracts that did not run to
"KRN",19,13952,1,7,0)
   completion due to errors or system problems.
"KRN",19,13952,1,8,0)
-  Choosing a range of extracts could mean an excessively large number of
"KRN",19,13952,1,9,0)
   records and be very CPU intensive.  Please be sure to queue this delete
"KRN",19,13952,1,10,0)
   for off-hours and limit the number of extracts to be deleted per a
"KRN",19,13952,1,11,0)
   single queued session.
"KRN",19,13952,1,12,0)
 
"KRN",19,13952,1,13,0)
DELETE RECOMMENDATIONS:
"KRN",19,13952,1,14,0)
Deletion of any local DHCP extracts or DHCP "source of extracts" (i.e., 
"KRN",19,13952,1,15,0)
lab  data, etc.) is not recommended until your facility has successfully
"KRN",19,13952,1,16,0)
created  extracts, transmitted to the Austin Automation Center, audited
"KRN",19,13952,1,17,0)
the  counts, loaded the data into DSS AND ARE CONTENT WITH THE RESULTS.
"KRN",19,13952,25)
ENDEL^ECXPURG
"KRN",19,13952,"U")
DELETE EXTRACT FILES
"KRN",19,13953,-1)
0^3
"KRN",19,13953,0)
ECX PHA COST^Pharmacy Extracts Unusual Cost Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13953,25)
COST^ECXAPHA
"KRN",19,13953,"U")
PHARMACY EXTRACTS UNUSUAL COST
"KRN",19.1,626,-1)
0^1
"KRN",19.1,626,0)
ECX DSS TEST^DSS FY Conversion Testing
"KRN",19.1,626,1,0)
^19.11^8^8^3110513^^^^
"KRN",19.1,626,1,1,0)
This key controls access to the ECX FISCAL YEAR EXTRACT option.  It 
"KRN",19.1,626,1,2,0)
should be given only to holders of the ECXMGR key whenever the site
"KRN",19.1,626,1,3,0)
has been enrolled as an official DSS test site for fiscal year
"KRN",19.1,626,1,4,0)
conversion.
"KRN",19.1,626,1,5,0)
  
"KRN",19.1,626,1,6,0)
This key should be removed from the user(s) whenever the
"KRN",19.1,626,1,7,0)
nationally released version of the DSS Fiscal Year patch is
"KRN",19.1,626,1,8,0)
installed.
"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",6,.401)
.401;6;;;EDEOUT^DIFROMSO(.401,DA,"",XPDA);FPRE^DIFROMSI(.401,"",XPDA);EPRE^DIFROMSI(.401,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.401,DA,"",XPDA);DEL^DIFROMSK(.401,"",%)
"ORD",6,.401,0)
SORT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",513,-1)
1^1
"PKG",513,0)
DSS EXTRACTS^ECX^Decision Support System. (DSS)
"PKG",513,20,0)
^9.402P^^
"PKG",513,22,0)
^9.49I^1^1
"PKG",513,22,1,0)
3.0^3010618^2980112^11714
"PKG",513,22,1,"PAH",1,0)
144^3130903
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
56
"RTN","ECX3P144")
0^1^B63166716^n/a
"RTN","ECX3P144",1,0)
ECX3P144 ;ALB/DAN - DSS FY2014 Conversion, Post-init ;8/16/13  10:07
"RTN","ECX3P144",2,0)
 ;;3.0;DSS EXTRACTS;**144**;Dec 22, 1997;Build 9
"RTN","ECX3P144",3,0)
PRETRAN ;Loads gold 4 char codes into KIDS build
"RTN","ECX3P144",4,0)
 M @XPDGREF@("ECX4CHAR")=^XTMP("ECX4CHAR")
"RTN","ECX3P144",5,0)
 Q
"RTN","ECX3P144",6,0)
 ;
"RTN","ECX3P144",7,0)
POST ;Post-install items
"RTN","ECX3P144",8,0)
 N UPDATE
"RTN","ECX3P144",9,0)
 D TEST ;Set testing site information
"RTN","ECX3P144",10,0)
 D CLEAN ;Delete values no longer needed
"RTN","ECX3P144",11,0)
 D UPDATEDD("O") ;allow editing of fields during post install
"RTN","ECX3P144",12,0)
 D LOADG4CH ;Load gold 4 char codes into XTMP
"RTN","ECX3P144",13,0)
 I +$G(XPDQUIT) Q  ;abort installation if error loading gold codes
"RTN","ECX3P144",14,0)
 D UPDCODES ;Compare gold codes to site change as needed
"RTN","ECX3P144",15,0)
 D UPDATEDD("C") ;put restrictions back on file
"RTN","ECX3P144",16,0)
 D MAIL ;send mail to holders of ECXMGR
"RTN","ECX3P144",17,0)
 D MENU ;add new transmission menu option, update order and titles
"RTN","ECX3P144",18,0)
 Q
"RTN","ECX3P144",19,0)
 ;
"RTN","ECX3P144",20,0)
TEST ;turn-on fld #73 in file #728 for Field Test Site;
"RTN","ECX3P144",21,0)
 ;allows use of option ECX FISCAL YEAR EXTRACT by test sites;
"RTN","ECX3P144",22,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P144",23,0)
 D MES^XPDUTL("Providing special menu option access for DSS FY Conversion test sites.")
"RTN","ECX3P144",24,0)
 D TESTON^ECXTREX(XPDNM,"FY2014")
"RTN","ECX3P144",25,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P144",26,0)
 ;if this is the national released version, then fld #73 will be turned-off
"RTN","ECX3P144",27,0)
 ;the first time any user attempts to use ECX FISCAL YEAR EXTRACT option
"RTN","ECX3P144",28,0)
 Q
"RTN","ECX3P144",29,0)
 ;
"RTN","ECX3P144",30,0)
CLEAN ;Delete dates from the last date clinic visits and last date clinic II fields
"RTN","ECX3P144",31,0)
 ;Delete the CLINIC and CLINIC II fields so the "running" flag is removed
"RTN","ECX3P144",32,0)
 N DIE,DA,IEN
"RTN","ECX3P144",33,0)
 D BMES^XPDUTL("Clearing Last Date Clinic II and Last Date Clinic Visit fields.")
"RTN","ECX3P144",34,0)
 D BMES^XPDUTL("Clearing CLINIC and CLINIC II fields.")
"RTN","ECX3P144",35,0)
 S IEN=0 F  S IEN=$O(^ECX(728,IEN)) Q:'+IEN  D
"RTN","ECX3P144",36,0)
 .S DIE="^ECX(728,",DA=IEN,DR="17///@;65///@;32///@;66///@"
"RTN","ECX3P144",37,0)
 .D ^DIE
"RTN","ECX3P144",38,0)
 D BMES^XPDUTL("Last Date Clinic II and Last Date Clinic Visit fields cleared.")
"RTN","ECX3P144",39,0)
 D BMES^XPDUTL("CLINIC and CLINIC II fields cleared.")
"RTN","ECX3P144",40,0)
 Q
"RTN","ECX3P144",41,0)
 ;
"RTN","ECX3P144",42,0)
LOADG4CH ;Put gold codes in local XTMP
"RTN","ECX3P144",43,0)
 K ^XTMP("ECX4CHAR")
"RTN","ECX3P144",44,0)
 M ^XTMP("ECX4CHAR")=@XPDGREF@("ECX4CHAR")
"RTN","ECX3P144",45,0)
 I '$D(^XTMP("ECX4CHAR")) D BMES^XPDUTL("Gold code table not loaded - INSTALLATION ABORTED") S XPDQUIT=2 Q
"RTN","ECX3P144",46,0)
 Q
"RTN","ECX3P144",47,0)
 ;
"RTN","ECX3P144",48,0)
UPDATEDD(TYPE) ;Update DD for 728.441 to either unrestrict edits or restrict edits
"RTN","ECX3P144",49,0)
 N I
"RTN","ECX3P144",50,0)
 I TYPE="C" D  ;restrict file
"RTN","ECX3P144",51,0)
 .S ^DD(728.441,.01,7.5)="I $G(DIC(0))[""L"",'$D(ECX4CHAR) D EN^DDIOL(""Entries can only be added by CHAR4 Council."","""",""!?5"") K X"
"RTN","ECX3P144",52,0)
 .F I=.01,1,3 I $P(^DD(728.441,I,0),U,2)'["I" S $P(^DD(728.441,I,0),U,2)=$P(^DD(728.441,I,0),U,2)_"I" ;Makes all fields uneditable
"RTN","ECX3P144",53,0)
 I TYPE="O" D  ;remove restrictions
"RTN","ECX3P144",54,0)
 .K ^DD(728.441,.01,7.5)
"RTN","ECX3P144",55,0)
 .F I=.01,1,3 S $P(^DD(728.441,I,0),U,2)=$TR($P(^DD(728.441,I,0),U,2),"I","")
"RTN","ECX3P144",56,0)
 Q
"RTN","ECX3P144",57,0)
 ;
"RTN","ECX3P144",58,0)
UPDCODES ;Compare gold to existing and edit as needed
"RTN","ECX3P144",59,0)
 N GOLD,LINE,CODE,DIE,DA,DR,DIC,IEN,X,Y
"RTN","ECX3P144",60,0)
 ;Check "gold" file against existing and add new entries or update differences
"RTN","ECX3P144",61,0)
 S CODE=0 F  S CODE=$O(^XTMP("ECX4CHAR",CODE)) Q:CODE=""  D
"RTN","ECX3P144",62,0)
 .S GOLD=^XTMP("ECX4CHAR",CODE)
"RTN","ECX3P144",63,0)
 .I '$D(^ECX(728.441,"B",CODE)) D  Q  ;Entry not found in site file, add it
"RTN","ECX3P144",64,0)
 ..S DIC=728.441,DIC(0)="LX",X=CODE,DIC("DR")="1////"_$P(GOLD,U) D ^DIC
"RTN","ECX3P144",65,0)
 ..I Y=-1!('+$P(Y,U,3)) S UPDATE("NA",CODE)="" ;Entry failed to be added to system, will report in findings
"RTN","ECX3P144",66,0)
 ..S UPDATE("N",CODE)=$P(GOLD,U) ;new entry added
"RTN","ECX3P144",67,0)
 .I $D(^ECX(728.441,"B",CODE)) S IEN=$O(^ECX(728.441,"B",CODE,0)) S LINE=^ECX(728.441,IEN,0) D
"RTN","ECX3P144",68,0)
 ..I $P(LINE,U,2)'=$P(GOLD,U) S $P(^ECX(728.441,IEN,0),U,2)=$P(GOLD,U) S UPDATE("U",CODE)=$P(LINE,U,2)_"^"_$P(GOLD,U) ;Update short description if it doesn't match
"RTN","ECX3P144",69,0)
 ;Check for entries in local site that aren't in gold and inactivate
"RTN","ECX3P144",70,0)
 S CODE="" F  S CODE=$O(^ECX(728.441,"B",CODE)) Q:CODE=""  D
"RTN","ECX3P144",71,0)
 .I $D(^XTMP("ECX4CHAR",CODE)) Q  ;Code is in gold, no update needed
"RTN","ECX3P144",72,0)
 .S IEN=$O(^ECX(728.441,"B",CODE,0)) Q:'+IEN  ;Can't get IEN for record
"RTN","ECX3P144",73,0)
 .S DIE="^ECX(728.441,",DA=IEN,DR="3////"_$S(DT'<3131031:3131101,1:DT) D ^DIE
"RTN","ECX3P144",74,0)
 .S UPDATE("I",CODE)="" ;Note inactivated entry
"RTN","ECX3P144",75,0)
 Q
"RTN","ECX3P144",76,0)
 ;
"RTN","ECX3P144",77,0)
MAIL ;Send email with results to holders of the ECXMGR key
"RTN","ECX3P144",78,0)
 N XMSUB,XMTEXT,XMDUZ,XMY,XMZ,CNT,DIFROM,ECXTEXT
"RTN","ECX3P144",79,0)
 S XMDUZ="PATCH ECX*3*144 POST-INSTALL"
"RTN","ECX3P144",80,0)
 D GETXMY("ECXMGR",.XMY)
"RTN","ECX3P144",81,0)
 S ECXTEXT(1)="The update to the NATIONAL CLINIC file (#728.441), commonly referred to as",ECXTEXT(2)="the 4CHAR code, has completed.  Below are the results."
"RTN","ECX3P144",82,0)
 S ECXTEXT(3)=""
"RTN","ECX3P144",83,0)
 I '$D(UPDATE) S ECXTEXT(4)="No updates to your file were necessary.  No further action is required."
"RTN","ECX3P144",84,0)
 S CNT=4 ;start with line 4 to add to message
"RTN","ECX3P144",85,0)
 I $D(UPDATE("N")) D  S ECXTEXT(CNT)="",CNT=CNT+1 ;Report entries that were added
"RTN","ECX3P144",86,0)
 .S ECXTEXT(CNT)="The following entries were added to your system:",CNT=CNT+1,ECXTEXT(CNT)=$$REPEAT^XLFSTR("-",79),CNT=CNT+1,ECXTEXT(CNT)="",CNT=CNT+1
"RTN","ECX3P144",87,0)
 .S CODE="" F  S CODE=$O(UPDATE("N",CODE)) Q:CODE=""  S ECXTEXT(CNT)=CODE_" - "_UPDATE("N",CODE),CNT=CNT+1
"RTN","ECX3P144",88,0)
 I $D(UPDATE("U")) D  S ECXTEXT(CNT)="",CNT=CNT+1 ;Report entries that were updated
"RTN","ECX3P144",89,0)
 .S ECXTEXT(CNT)="The following entries had their short description updated:",CNT=CNT+1,ECXTEXT(CNT)=$$REPEAT^XLFSTR("-",79),CNT=CNT+1,ECXTEXT(CNT)="",CNT=CNT+1
"RTN","ECX3P144",90,0)
 .S CODE="" F  S CODE=$O(UPDATE("U",CODE)) Q:CODE=""  S ECXTEXT(CNT)="CODE: "_CODE_" from "_$P(UPDATE("U",CODE),U)_" to "_$P(UPDATE("U",CODE),U,2) S CNT=CNT+1
"RTN","ECX3P144",91,0)
 I $D(UPDATE("I")) D  S ECXTEXT(CNT)="",CNT=CNT+1 ;Report entries that were inactivated
"RTN","ECX3P144",92,0)
 .S ECXTEXT(CNT)="The following entries were inactivated with a date of "_$$FMTE^XLFDT($S(DT'<3131031:3131101,1:DT))_" and will no",CNT=CNT+1,ECXTEXT(CNT)="longer be available for use after that date:",CNT=CNT+1
"RTN","ECX3P144",93,0)
 .S ECXTEXT(CNT)=$$REPEAT^XLFSTR("-",79),CNT=CNT+1,ECXTEXT(CNT)="",CNT=CNT+1
"RTN","ECX3P144",94,0)
 .S CODE="" F  S CODE=$O(UPDATE("I",CODE)) Q:CODE=""  S ECXTEXT(CNT)=CODE,CNT=CNT+1
"RTN","ECX3P144",95,0)
 I $D(UPDATE("NA")) D  ;Report any codes that couldn't be added
"RTN","ECX3P144",96,0)
 .S ECXTEXT(CNT)="The following entries could NOT be added to your system.  Please log a remedy",CNT=CNT+1,ECXTEXT(CNT)="ticket for assistance with adding these codes.",CNT=CNT+1
"RTN","ECX3P144",97,0)
 .S ECXTEXT(CNT)=$$REPEAT^XLFSTR("-",79),CNT=CNT+1,ECXTEXT(CNT)="",CNT=CNT+1
"RTN","ECX3P144",98,0)
 .S CODE="" F  S CODE=$O(UPDATE("NA",CODE)) Q:CODE=""  S ECXTEXT(CNT)=CODE
"RTN","ECX3P144",99,0)
 S XMTEXT="ECXTEXT(",XMSUB="National Clinic file (#728.441) standardization"
"RTN","ECX3P144",100,0)
 D ^XMD
"RTN","ECX3P144",101,0)
 ;
"RTN","ECX3P144",102,0)
GETXMY(KEY,XMY) ;Put holders of the KEY into the XMY array to be recipients of the email
"RTN","ECX3P144",103,0)
 I $G(KEY)'="" M XMY=^XUSEC(KEY)
"RTN","ECX3P144",104,0)
 S:$G(DUZ) XMY(DUZ)="" ;Make sure there's at least one recipient
"RTN","ECX3P144",105,0)
 Q
"RTN","ECX3P144",106,0)
MENU ;add new transmission menu option, update display order, add 1 title, remove display option setting for 1 option and move routine information from entry action to routine field for one option
"RTN","ECX3P144",107,0)
 ;Add new option and update order of options for pharmacy maintenance menu
"RTN","ECX3P144",108,0)
 N MENU,DA,CHECK,ECXMSG
"RTN","ECX3P144",109,0)
 S MENU=""
"RTN","ECX3P144",110,0)
 S ECXMSG(1)=" "
"RTN","ECX3P144",111,0)
 S ECXMSG(2)="** Looking for PURGE DATA FROM EXTRACT FILES menu **"
"RTN","ECX3P144",112,0)
 S ECXMSG(3)="     If found, title will be updated  "
"RTN","ECX3P144",113,0)
 D MES^XPDUTL(.ECXMSG)
"RTN","ECX3P144",114,0)
 ;Order thru option file and find ECXPURG and retrieve IEN
"RTN","ECX3P144",115,0)
 S MENU=$O(^DIC(19,"B","ECXPURG",MENU))
"RTN","ECX3P144",116,0)
 I 'MENU D BMES^XPDUTL("** ECXPURG item not found **")
"RTN","ECX3P144",117,0)
 I MENU D
"RTN","ECX3P144",118,0)
 .S DR="1///Purge Extract Holding Files",DIE="^DIC(19,",DA=MENU D ^DIE
"RTN","ECX3P144",119,0)
 .K ECXMSG
"RTN","ECX3P144",120,0)
 .S ECXMSG(1)=" "
"RTN","ECX3P144",121,0)
 .S ECXMSG(2)="*** PURGE DATA FROM EXTRACT FILES menu has been updated.. ***"
"RTN","ECX3P144",122,0)
 .D MES^XPDUTL(.ECXMSG)
"RTN","ECX3P144",123,0)
 ;add new menu option to ECX TRANSMISSION
"RTN","ECX3P144",124,0)
 S CHECK=$$ADD^XPDMENU("ECX TRANSMISSION","ECXDELEF","D")
"RTN","ECX3P144",125,0)
 D BMES^XPDUTL("ECXDELEF option "_$S('+$G(CHECK):"NOT ",1:"")_"added to menu ECX TRANSMISSION")
"RTN","ECX3P144",126,0)
 D BMES^XPDUTL("Updating ECX TRANSMISSION menu display order...")
"RTN","ECX3P144",127,0)
 S DA=$$ADD^XPDMENU("ECX TRANSMISSION","ECX EXTRACT LOG REVIEW",,5)
"RTN","ECX3P144",128,0)
 S DA=$$ADD^XPDMENU("ECX TRANSMISSION","ECXTRANS",,10)
"RTN","ECX3P144",129,0)
 S DA=$$ADD^XPDMENU("ECX TRANSMISSION","ECX EXTRACT LOG SUMMARY",,15)
"RTN","ECX3P144",130,0)
 S DA=$$ADD^XPDMENU("ECX TRANSMISSION","ECXDELEF",,20)
"RTN","ECX3P144",131,0)
 S DA=$$ADD^XPDMENU("ECX TRANSMISSION","ECXPURG",,25)
"RTN","ECX3P144",132,0)
 S DA=$$ADD^XPDMENU("ECX TRANSMISSION","ECXRXHF",,30)
"RTN","ECX3P144",133,0)
 D MES^XPDUTL("Display order updated")
"RTN","ECX3P144",134,0)
 D BMES^XPDUTL("Removing 'DISPLAY OPTION' setting from ECX CLN STOP REP option")
"RTN","ECX3P144",135,0)
 S MENU=$O(^DIC(19,"B","ECX CLN STOP REP",0))
"RTN","ECX3P144",136,0)
 I MENU S DR="11///@",DIE="^DIC(19,",DA=MENU D ^DIE
"RTN","ECX3P144",137,0)
 D BMES^XPDUTL("Moving routine information from ENTRY ACTION to ROUTINE field") D MES^XPDUTL("for option ECX STOP CODE VALIDITY")
"RTN","ECX3P144",138,0)
 S MENU=$O(^DIC(19,"B","ECX STOP CODE VALIDITY",0))
"RTN","ECX3P144",139,0)
 I MENU S DR="20///@;25///EN^ECXSCX3" S DA=MENU,DIE="^DIC(19," D ^DIE
"RTN","ECX3P144",140,0)
 D BMES^XPDUTL("Updating Pharmacy Maintenance Menu")
"RTN","ECX3P144",141,0)
 S CHECK=$$ADD^XPDMENU("ECX PHARMACY MAINTENANCE","ECX PHA COST",3)
"RTN","ECX3P144",142,0)
 D BMES^XPDUTL("ECX PHA COST option "_$S('+$G(CHECK):"NOT ",1:"")_"added to menu ECX PHARMACY MAINTENACE")
"RTN","ECX3P144",143,0)
 S DA=$$ADD^XPDMENU("ECX PHARMACY MAINTENANCE","ECX PHA VOL",4)
"RTN","ECX3P144",144,0)
 S DA=$$ADD^XPDMENU("ECX PHARMACY MAINTENANCE","ECX PHA UDP/IVP SOURCE AUDIT",5)
"RTN","ECX3P144",145,0)
 D BMES^XPDUTL("Option order updated on the ECX PHARMACY MAINTENANCE menu")
"RTN","ECX3P144",146,0)
 Q
"RTN","ECXADM")
0^51^B59038752^B52630295
"RTN","ECXADM",1,0)
ECXADM ;ALB/JAP,BIR/DMA,CML,PTD-Admissions Extract ;5/17/13  11:51
"RTN","ECXADM",2,0)
 ;;3.0;DSS EXTRACTS;**1,4,11,8,13,24,33,39,46,71,84,92,107,105,120,127,132,136,144**;Dec 22, 1997;Build 9
"RTN","ECXADM",3,0)
BEG ;entry point from option
"RTN","ECXADM",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXADM",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXADM",6,0)
 Q
"RTN","ECXADM",7,0)
 ;
"RTN","ECXADM",8,0)
START ; start package specific extract
"RTN","ECXADM",9,0)
 K ^TMP($J,"EDIS") ;136 Clear temporary space for index
"RTN","ECXADM",10,0)
 D BLDXREF^ECXUTL1(ECSD,ECED) ;136 build temp xref for emergency dept
"RTN","ECXADM",11,0)
 S QFLG=0
"RTN","ECXADM",12,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXADM",13,0)
 F  S ECD=$O(^DGPM("ATT1",ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)  D
"RTN","ECXADM",14,0)
 .F  S ECDA=$O(^DGPM("ATT1",ECD,ECDA)) Q:ECDA=""  D
"RTN","ECXADM",15,0)
 ..I $D(^DGPM(ECDA,0)) D
"RTN","ECXADM",16,0)
 ...S EC=^DGPM(ECDA,0),ECXDFN=$P(EC,U,3) D GET
"RTN","ECXADM",17,0)
 K ^TMP($J,"EDIS") ;136 delete temporary xref
"RTN","ECXADM",18,0)
 Q
"RTN","ECXADM",19,0)
 ;
"RTN","ECXADM",20,0)
GET ;gather extract data
"RTN","ECXADM",21,0)
 N ADM,W,X,ECXNPRFI,ECXATTPC,ECXPRVPC,ECXEST,ECXAOT,ECXEDIS,ECXICD10P ;136
"RTN","ECXADM",22,0)
 N ECXESC,ECXECL,ECXCLST ;144 Encounter Service Connected, Encounter Camp Lejeune, Camp Lejeune Status
"RTN","ECXADM",23,0)
 ;patient demographics
"RTN","ECXADM",24,0)
 S ECXERR=0 D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXADM",25,0)
 Q:ECXERR
"RTN","ECXADM",26,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXADM",27,0)
 S ECXFAC=$P($G(^DIC(42,+$P(EC,U,6),0)),U,11)
"RTN","ECXADM",28,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC)  ;Get production division
"RTN","ECXADM",29,0)
 ;admission data
"RTN","ECXADM",30,0)
 S ELGA=$P($G(^DIC(8,+$P(EC,U,20),0)),U,9)
"RTN","ECXADM",31,0)
 I ELGA S ELGA=$$ELIG^ECXUTL3(ELGA,ECXSVC)
"RTN","ECXADM",32,0)
 S (ECDRG,ECDIA,ECXSADM,ECXADMS,ECXAOT)="",ECPTF=+$P(EC,U,16) I ECPTF,$D(^DGPT(ECPTF,"M")) D PTF
"RTN","ECXADM",33,0)
 ;get encounter classification
"RTN","ECXADM",34,0)
 S (ECXAO,ECXECE,ECXIR,ECXMIL,ECXHNC,ECXSHAD,ECXESC,ECXECL)="",ECXVISIT=$P(EC,U,27) ;144
"RTN","ECXADM",35,0)
 I ECXVISIT'="" D
"RTN","ECXADM",36,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXADM",37,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXADM",38,0)
 .S ECXMIL=$G(ECXVIST("MST")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXADM",39,0)
 .S ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXADM",40,0)
 .S ECXESC=$G(ECXVIST("ENCSC")),ECXECL=$G(ECXVIST("ENCCL")) ;144 Encounter SC and Encounter Camp Lejeune
"RTN","ECXADM",41,0)
 ;use movement record date & time
"RTN","ECXADM",42,0)
 S ADM=$$INP^ECXUTL2(ECXDFN,ECD)
"RTN","ECXADM",43,0)
 S ECXA=$P(ADM,U),ECXMN=$P(ADM,U,2),ECXSPC=$P(ADM,U,3)
"RTN","ECXADM",44,0)
 S (ECXADMDT,ECXDATE)=$P(ADM,U,4)
"RTN","ECXADM",45,0)
 ;if movement# doesn't match cross-ref ien, then quit
"RTN","ECXADM",46,0)
 Q:ECXMN'=ECDA
"RTN","ECXADM",47,0)
 S ECTM=$$ECXTIME^ECXUTL(ECXDATE)
"RTN","ECXADM",48,0)
 S ECXDATE=$$ECXDATE^ECXUTL(ECXDATE,ECXYM)
"RTN","ECXADM",49,0)
 S W=$P(ADM,U,9)
"RTN","ECXADM",50,0)
 S ECXWRD=$P(W,";",1),ECXFAC=$P(W,";",2),ECXDSSD=$P(W,";",3)
"RTN","ECXADM",51,0)
 S ECXPRV=$P(ADM,U,7),ECXPRNPI="",ECXATT=$P(ADM,U,8),ECXATNPI=""
"RTN","ECXADM",52,0)
 S ECXDOM=$P(ADM,U,10),ECXATTPC=$P(ADM,U,12),ECXPRVPC=$P(ADM,U,11)
"RTN","ECXADM",53,0)
 N ECXUSRTN
"RTN","ECXADM",54,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$E(ECXATT,2,$L(ECXATT)),ECD)
"RTN","ECXADM",55,0)
 S:+ECXUSRTN'>0 ECXUSRTN=""
"RTN","ECXADM",56,0)
 S ECATTNPI=$P(ECXUSRTN,U)
"RTN","ECXADM",57,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$E(ECXPRV,2,$L(ECXPRV)),ECD)
"RTN","ECXADM",58,0)
 S:+ECXUSRTN'>0 ECXUSRTN=""
"RTN","ECXADM",59,0)
 S ECPWNPI=$P(ECXUSRTN,U)
"RTN","ECXADM",60,0)
 S ECXICD10P="" ;136 ICD-10 null for now
"RTN","ECXADM",61,0)
 ;
"RTN","ECXADM",62,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXADM",63,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXSPC)
"RTN","ECXADM",64,0)
 ;
"RTN","ECXADM",65,0)
 ;- Patient Type
"RTN","ECXADM",66,0)
 S ECXPTYPE=$$TYPE^ECXUTL5(ECXDFN)
"RTN","ECXADM",67,0)
 ;
"RTN","ECXADM",68,0)
 S ECXEDIS=$$EDIS^ECXUTL1(ECXDFN,ECD,"A") ;136 Get emergency room disposition
"RTN","ECXADM",69,0)
 ;- If null encounter number, don't file record
"RTN","ECXADM",70,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,,ECXSPC,ECXOBS,ECHEAD,,)
"RTN","ECXADM",71,0)
 D:ECXENC'="" FILE
"RTN","ECXADM",72,0)
 Q
"RTN","ECXADM",73,0)
 ;
"RTN","ECXADM",74,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographic data
"RTN","ECXADM",75,0)
 N OK,X
"RTN","ECXADM",76,0)
 K ECXPAT
"RTN","ECXADM",77,0)
 S ECXDATE=$P(ECXDATE,".")
"RTN","ECXADM",78,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;2;3;4;5",.ECXPAT)
"RTN","ECXADM",79,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXADM",80,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXADM",81,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXADM",82,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXADM",83,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXADM",84,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXADM",85,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXADM",86,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXADM",87,0)
 S ECXVNS=ECXPAT("VIETNAM")
"RTN","ECXADM",88,0)
 S ECXPOS=ECXPAT("POS")
"RTN","ECXADM",89,0)
 S ECXMNS=ECXPAT("MEANS")
"RTN","ECXADM",90,0)
 S ECXRACE=ECXPAT("RACE")
"RTN","ECXADM",91,0)
 S ECXRELG=ECXPAT("RELIGION")
"RTN","ECXADM",92,0)
 S ECXEMP=ECXPAT("EMPLOY")
"RTN","ECXADM",93,0)
 S ECXMAR=ECXPAT("MARITAL")
"RTN","ECXADM",94,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXADM",95,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXADM",96,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXADM",97,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXADM",98,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXADM",99,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXADM",100,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXADM",101,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXADM",102,0)
 S ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXADM",103,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXADM",104,0)
 S ECXSVC=ECXPAT("SC%")
"RTN","ECXADM",105,0)
 S ECXPHI=ECXPAT("PHI")
"RTN","ECXADM",106,0)
 S ECXHI=+$$INSUR^IBBAPI(ECXDFN,ECXDATE)
"RTN","ECXADM",107,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXADM",108,0)
 S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune Status
"RTN","ECXADM",109,0)
 ;
"RTN","ECXADM",110,0)
 ;-OEF/OIF Data
"RTN","ECXADM",111,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXADM",112,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXADM",113,0)
 ;
"RTN","ECXADM",114,0)
 ;- Agent Orange location
"RTN","ECXADM",115,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXADM",116,0)
 ;
"RTN","ECXADM",117,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXADM",118,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXADM",119,0)
 ; - PROJ 112/SHAD Indicator
"RTN","ECXADM",120,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXADM",121,0)
 ; ******* - PATCH 127, ADD PATCAT CODE - ********
"RTN","ECXADM",122,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXADM",123,0)
 ; - Race and Ethnicity
"RTN","ECXADM",124,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXADM",125,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXADM",126,0)
 ;
"RTN","ECXADM",127,0)
 ;get primary care data
"RTN","ECXADM",128,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXADM",129,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXADM",130,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXADM",131,0)
 ;get combat veteran data
"RTN","ECXADM",132,0)
 I $$CVEDT^ECXUTL5(ECXDFN,ECD)
"RTN","ECXADM",133,0)
 ;get national patient record flag if exist
"RTN","ECXADM",134,0)
 D NPRF^ECXUTL5
"RTN","ECXADM",135,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXADM",136,0)
 S ECXERI=ECXPAT("ERI")
"RTN","ECXADM",137,0)
 Q
"RTN","ECXADM",138,0)
 ;
"RTN","ECXADM",139,0)
PTF ; get admitting DRG, diagnosis, source of admission from PTF
"RTN","ECXADM",140,0)
 ;use number for DRG and .01 for diagnosis
"RTN","ECXADM",141,0)
 N EC,EC1,ECX
"RTN","ECXADM",142,0)
 S EC=1 I $D(^DGPT(ECPTF,"M",2,0)) S EC=2
"RTN","ECXADM",143,0)
 S EC1=+$P(^DGPT(ECPTF,"M",EC,0),U,5)
"RTN","ECXADM",144,0)
 S ECDRG=$P($G(^DGPT(ECPTF,"M",EC,"P")),U)
"RTN","ECXADM",145,0)
 S ECDIA=$P($G(^ICD9(EC1,0)),U)
"RTN","ECXADM",146,0)
 S ECX=+$P($G(^DGPT(ECPTF,101)),U),ECXSADM=$P($G(^DIC(45.1,ECX,0)),U,11)
"RTN","ECXADM",147,0)
 S ECXADMS=$$GET1^DIQ(45.1,ECX,.01)
"RTN","ECXADM",148,0)
 ;if source of admission = admit outpatient treatment ('1P')
"RTN","ECXADM",149,0)
 S ECXAOT=$S(($$GET1^DIQ(45.1,ECX,.01)="1P"):"Y",1:"")
"RTN","ECXADM",150,0)
 Q
"RTN","ECXADM",151,0)
 ;
"RTN","ECXADM",152,0)
FILE ;file the extract record
"RTN","ECXADM",153,0)
 ;node0
"RTN","ECXADM",154,0)
 ;facility^dfn^ssn^name^in/out^day^primary care team^sex^dob^
"RTN","ECXADM",155,0)
 ;religion^employment status^health ins^state^county^zip^
"RTN","ECXADM",156,0)
 ;eligibility^vet^vietnam^agent orange^radiation^pow^
"RTN","ECXADM",157,0)
 ;period of service^means test^marital status^
"RTN","ECXADM",158,0)
 ;ward^treating specialty^attending physician^mov #^DRG^princ diagnosis^
"RTN","ECXADM",159,0)
 ;time^primary care provider^race^primary ward provider
"RTN","ECXADM",160,0)
 ;node1
"RTN","ECXADM",161,0)
 ;mpi^dss dept^attending npi^pc provider npi^ward provider npi^
"RTN","ECXADM",162,0)
 ;admission elig^mst status^shad status^sharing payor^
"RTN","ECXADM",163,0)
 ;sharing insurance^enrollment location^
"RTN","ECXADM",164,0)
 ;pc prov person class^assoc pc provider^assoc pc prov person class^
"RTN","ECXADM",165,0)
 ;assoc pc prov npi^dom^enrollment cat^enrollment stat^encounter
"RTN","ECXADM",166,0)
 ;shad^purple heart ind.^obs pat ind^encounter num^agent orange
"RTN","ECXADM",167,0)
 ;loc^production div^pow loc^source of admission^head & neck canc. ind
"RTN","ECXADM",168,0)
 ;^ethnicity^race1^enrollment priority_sub group^user enrollee^patient
"RTN","ECXADM",169,0)
 ;type^combat vet elig^combat vet elig end date^enc cv eligible^
"RTN","ECXADM",170,0)
 ;national patient record flag ECXNPRFI^att phy person class ECXATTPC
"RTN","ECXADM",171,0)
 ;^primary ward provider person class ECXPRVPC^environ contamin ECXEST
"RTN","ECXADM",172,0)
 ;^emergency response indicator(FEMA) ECXERI^agent orange indic ECXAO
"RTN","ECXADM",173,0)
 ;^environ contam ECXECE^encoun head/neck ECXHNC^encoun MST ECXMIL^rad
"RTN","ECXADM",174,0)
 ;encoun ECXIR^
"RTN","ECXADM",175,0)
 ;node 2 - patch 136 seperated node1 from node 2 for clarity
"RTN","ECXADM",176,0)
 ;OEF/OIF ECXOEF^ OEF/OIF return date ECXOEFDT
"RTN","ECXADM",177,0)
 ;^associate pc provider npi ECASNPI^attending physician npi ECATNPI^
"RTN","ECXADM",178,0)
 ;primary care provider npi ECPTNPI^primary ward provider npi ECPWNPI^
"RTN","ECXADM",179,0)
 ;admit outpatient treatment ECXAOT^country ECXCNTRY^pat cat ECXPATCAT^
"RTN","ECXADM",180,0)
 ;admit source ECXADMS ^emergency dept disposition ECXEDIS^Primary ICD-10 code ECXICD10P^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL^Encounter SC ECXESC
"RTN","ECXADM",181,0)
 ;
"RTN","ECXADM",182,0)
 ;Convert specialty to PTF Code
"RTN","ECXADM",183,0)
 ;
"RTN","ECXADM",184,0)
 N ECXDATA
"RTN","ECXADM",185,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXSPC,.ECXDATA)
"RTN","ECXADM",186,0)
 S ECXSPC=$G(ECXDATA(7))
"RTN","ECXADM",187,0)
 ;
"RTN","ECXADM",188,0)
 N DA,DIK
"RTN","ECXADM",189,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXADM",190,0)
 S ECODE=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE_U
"RTN","ECXADM",191,0)
 S ECODE=ECODE_ECPTTM_U_ECXSEX_U_ECXDOB_U_ECXRELG_U
"RTN","ECXADM",192,0)
 S ECODE=ECODE_ECXEMP_U_ECXHI_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U
"RTN","ECXADM",193,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECXVNS_U_ECXAST_U_ECXRST_U_ECXPST_U
"RTN","ECXADM",194,0)
 S ECODE=ECODE_ECXPOS_U_ECXMNS_U_ECXMAR_U
"RTN","ECXADM",195,0)
 S ECODE=ECODE_ECXWRD_U_ECXSPC_U_ECXATT_U_ECDA_U_ECDRG_U_ECDIA_U
"RTN","ECXADM",196,0)
 S ECODE=ECODE_ECTM_U_ECPTPR_U_ECXRACE_U_ECXPRV_U
"RTN","ECXADM",197,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_""_U_""_U_""_U_ELGA_U
"RTN","ECXADM",198,0)
 S ECODE1=ECODE1_ECXMST_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_U_U_ECXENRL_U_ECCLAS_U
"RTN","ECXADM",199,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXCAT_U
"RTN","ECXADM",200,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC>2010:ECXSHAD,1:"")_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXADM",201,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXPLOC_U_ECXSADM_U_ECXHNCI_U_ECXETH_U
"RTN","ECXADM",202,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXADM",203,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXADM",204,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXATTPC_U_ECXPRVPC_U_ECXEST
"RTN","ECXADM",205,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXADM",206,0)
 I ECXLOGIC>2007 S ECODE2=ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECATTNPI_U_ECPTNPI_U_ECPWNPI
"RTN","ECXADM",207,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXAOT_U_ECXCNTRY
"RTN","ECXADM",208,0)
 ; ***** ADDING PATCAT TO 9TH PIECE OF ECODE  *******
"RTN","ECXADM",209,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT
"RTN","ECXADM",210,0)
 I ECXLOGIC>2011 S ECODE2=ECODE2_U_ECXADMS
"RTN","ECXADM",211,0)
 I ECXLOGIC>2012 S ECODE2=ECODE2_U_ECXEDIS_U_ECXICD10P ;136
"RTN","ECXADM",212,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXCLST_U_ECXECL_U_ECXESC ;144 Add Camp Lejeune status, encounter Camp Lejeune and encounter service connected
"RTN","ECXADM",213,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2)
"RTN","ECXADM",214,0)
 S ECRN=ECRN+1
"RTN","ECXADM",215,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXADM",216,0)
 Q
"RTN","ECXADM",217,0)
 ;
"RTN","ECXADM",218,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXADM",219,0)
 S ECHEAD="ADM"
"RTN","ECXADM",220,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXADM",221,0)
 Q
"RTN","ECXADM",222,0)
 ;
"RTN","ECXADM",223,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXADM",224,0)
 ; should be queued with a 1D frequency
"RTN","ECXADM",225,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXADM",226,0)
 ;
"RTN","ECXADM",227,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXADM",228,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXADM",229,0)
 ;
"RTN","ECXAECS")
0^43^B50961338^B40379474
"RTN","ECXAECS",1,0)
ECXAECS ;ALB/JAP - ECS Extract Audit Report ;3/13/13  11:42
"RTN","ECXAECS",2,0)
 ;;3.0;DSS EXTRACTS;**8,33,123,144**;Dec 22, 1997;Build 9
"RTN","ECXAECS",3,0)
 ;
"RTN","ECXAECS",4,0)
EN ;entry point for ECS extract audit report
"RTN","ECXAECS",5,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,COUNT,CNT,ECXPORT ;144
"RTN","ECXAECS",6,0)
 S ECXERR=0
"RTN","ECXAECS",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXAECS",8,0)
 S ECXHEAD="ECS",ECXAUD=0
"RTN","ECXAECS",9,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXAECS",10,0)
 ;select extract
"RTN","ECXAECS",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXAECS",12,0)
 Q:ECXERR
"RTN","ECXAECS",13,0)
 ;determine if facility is multidivisional for event capture
"RTN","ECXAECS",14,0)
 S COUNT=0,ECXD="" F  S ECXD=$O(^DIC(4,"LOC",ECXD)) Q:ECXD=""  S COUNT=COUNT+1 ;144
"RTN","ECXAECS",15,0)
 S ECXALL=1
"RTN","ECXAECS",16,0)
 I COUNT>1 D  ;144
"RTN","ECXAECS",17,0)
 .W !!
"RTN","ECXAECS",18,0)
 .S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract audit report for all Locations"
"RTN","ECXAECS",19,0)
 .S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXAECS",20,0)
 .I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXAECS",21,0)
 .;if y=0 i.e., 'no', then ecxall=0 i.e., 'selected'
"RTN","ECXAECS",22,0)
 .S ECXALL=Y
"RTN","ECXAECS",23,0)
 I ECXERR=1 D  Q
"RTN","ECXAECS",24,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAECS",25,0)
 .D AUDIT^ECXKILL
"RTN","ECXAECS",26,0)
 ;select divisions/sites; all ec locations if ecxall=1
"RTN","ECXAECS",27,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAECS",28,0)
 D ECS^ECXDVSN(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXAECS",29,0)
 I ECXERR=1 D  Q
"RTN","ECXAECS",30,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAECS",31,0)
 .D AUDIT^ECXKILL
"RTN","ECXAECS",32,0)
 ;determine output device and queue if requested
"RTN","ECXAECS",33,0)
 W !
"RTN","ECXAECS",34,0)
 S ECXPGM="PROCESS^ECXAECS",ECXDESC="ECS Extract Audit Report"
"RTN","ECXAECS",35,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXAECS",36,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXAECS",37,0)
 .K ^TMP($J,"ECXPORT") ;144
"RTN","ECXAECS",38,0)
 .S ^TMP($J,"ECXPORT",0)="LOCATION^EXTRACT LOG #^DSS UNIT^CATEGORY^PROCEDURE^VOLUME" ;144
"RTN","ECXAECS",39,0)
 .S CNT=1 ;144
"RTN","ECXAECS",40,0)
 .D PROCESS ;144
"RTN","ECXAECS",41,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXAECS",42,0)
 .D ^ECXKILL ;144
"RTN","ECXAECS",43,0)
 W !
"RTN","ECXAECS",44,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXAECS",45,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXAECS",46,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAECS",47,0)
 .D AUDIT^ECXKILL
"RTN","ECXAECS",48,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXAECS",49,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAECS",50,0)
 .D PROCESS^ECXAECS
"RTN","ECXAECS",51,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAECS",52,0)
 D HOME^%ZIS
"RTN","ECXAECS",53,0)
 D AUDIT^ECXKILL
"RTN","ECXAECS",54,0)
 Q
"RTN","ECXAECS",55,0)
 ;
"RTN","ECXAECS",56,0)
PROCESS ;process data in file #727.815
"RTN","ECXAECS",57,0)
 N X,Y,W,DATA,DATE,DIV,IEN,UNIT,UNITN,CAT,CATN,VOL,PROC,PROCN,PIEN,PRI,PRXF,PRSYN,QQFLG,COUNT ;144
"RTN","ECXAECS",58,0)
 K ^TMP($J,"ECXAUD")
"RTN","ECXAECS",59,0)
 S (COUNT,QQFLG)=0 ;144
"RTN","ECXAECS",60,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXAECS",61,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAECS",62,0)
 ;get run date in external format
"RTN","ECXAECS",63,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXAECS",64,0)
 ;get records in date range
"RTN","ECXAECS",65,0)
 S IEN="" F  S IEN=$O(^ECX(727.815,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXAECS",66,0)
 .S DATA=^ECX(727.815,IEN,0),DATE=$P(DATA,U,9),DIV=$P(DATA,U,4)
"RTN","ECXAECS",67,0)
 .;convert free text date to fm internal format date
"RTN","ECXAECS",68,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXAECS",69,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXAECS",70,0)
 .;if location is among those selected, then tally event capture data
"RTN","ECXAECS",71,0)
 .I $D(ECXDIV(DIV)) D  Q:QQFLG
"RTN","ECXAECS",72,0)
 ..S UNIT=$P(DATA,U,10),UNITN=$P($G(^ECD(UNIT,0)),U,1),UNIT(UNITN)=UNIT
"RTN","ECXAECS",73,0)
 ..;if no category, then cat=0
"RTN","ECXAECS",74,0)
 ..S CAT=+$P(DATA,U,11),CATN="" S:+CAT CATN=$P($G(^EC(726,CAT,0)),U,1) S:CATN="" CATN="Unknown"
"RTN","ECXAECS",75,0)
 ..S VOL=$P(DATA,U,13) S:VOL="" VOL=1 S PROC=$E($P(DATA,U,12),1,5)
"RTN","ECXAECS",76,0)
 ..I '$D(^TMP($J,"ECXAUD",DIV,UNITN,CATN,PROC)) S ^TMP($J,"ECXAUD",DIV,UNITN,CATN,PROC)=0
"RTN","ECXAECS",77,0)
 ..S ^(PROC)=^TMP($J,"ECXAUD",DIV,UNITN,CATN,PROC)+VOL,COUNT=COUNT+1 ;144
"RTN","ECXAECS",78,0)
 ..I $D(ZTQUEUED),(COUNT>499),'(COUNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ Q  ;144
"RTN","ECXAECS",79,0)
 ..;get the procedure name and setup in global array
"RTN","ECXAECS",80,0)
 ..S PIEN=0,PROCN="" S:PROC'?5N PIEN=$O(^EC(725,"E",PROC,""))
"RTN","ECXAECS",81,0)
 ..;procedures from file #725
"RTN","ECXAECS",82,0)
 ..I +PIEN>0 D
"RTN","ECXAECS",83,0)
 ...S PROCN=$P($G(^EC(725,PIEN,0)),U,1)
"RTN","ECXAECS",84,0)
 ...S PRXF=PIEN_";EC(725,"
"RTN","ECXAECS",85,0)
 ...S PRI=+$O(^ECJ("AP",DIV,UNIT,CAT,PRXF,0)),PRSYN=$P($G(^ECJ(PRI,"PRO")),U,2)
"RTN","ECXAECS",86,0)
 ...I PRSYN]"" S PROCN=PRSYN
"RTN","ECXAECS",87,0)
 ..;procedures from file #81
"RTN","ECXAECS",88,0)
 ..I PIEN=0,PROCN="" D
"RTN","ECXAECS",89,0)
 ...S PIEN=$$CODEN^ICPTCOD(PROC) I +PIEN>0 S PROCN=$P($$CPT^ICPTCOD(PROC,DATE),U,3)
"RTN","ECXAECS",90,0)
 ...S PRXF=PIEN_";ICPT("
"RTN","ECXAECS",91,0)
 ...S PRI=+$O(^ECJ("AP",DIV,UNIT,CAT,PRXF,0)),PRSYN=$P($G(^ECJ(PRI,"PRO")),U,2)
"RTN","ECXAECS",92,0)
 ...I PRSYN]"" S PROCN=PRSYN
"RTN","ECXAECS",93,0)
 ..S:PROCN="" PROCN="Unknown"
"RTN","ECXAECS",94,0)
 ..S ^TMP($J,"ECXPROC",PROC)=PROCN
"RTN","ECXAECS",95,0)
 ;print the report
"RTN","ECXAECS",96,0)
 D PRINT
"RTN","ECXAECS",97,0)
 I $G(ECXPORT) Q  ;144 Stop processing as ECXKILL kills ^TMP($J
"RTN","ECXAECS",98,0)
 D AUDIT^ECXKILL
"RTN","ECXAECS",99,0)
 Q
"RTN","ECXAECS",100,0)
 ;
"RTN","ECXAECS",101,0)
PRINT ;print event capture data by location/division and dss unit order
"RTN","ECXAECS",102,0)
 N JJ,SS,P,PN,LN,NM,DIV,DIVNM,PG,QFLG,GTOT,PROC,STOT,TOT,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXAECS",103,0)
 U IO
"RTN","ECXAECS",104,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAECS",105,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",DIV=""
"RTN","ECXAECS",106,0)
 F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXAECS",107,0)
 .S DIVNM=$P(ECXDIV(DIV),U,2)_" ("_DIV_")",GTOT=0 I '$G(ECXPORT) D HEADER  ;144
"RTN","ECXAECS",108,0)
 .I '$D(^TMP($J,"ECXAUD",DIV)) D  Q
"RTN","ECXAECS",109,0)
 ..I $G(ECXPORT) Q  ;144 Don't print if exporting
"RTN","ECXAECS",110,0)
 ..W !!,?5,"No data available for this Event Capture Location.",!!
"RTN","ECXAECS",111,0)
 .I $D(^TMP($J,"ECXAUD",DIV)) S UNITN="" F  S UNITN=$O(^TMP($J,"ECXAUD",DIV,UNITN)) Q:UNITN=""  D  Q:QFLG
"RTN","ECXAECS",112,0)
 ..S STOT=0,UNIT=UNIT(UNITN),CATN=""
"RTN","ECXAECS",113,0)
 ..;write the unit name
"RTN","ECXAECS",114,0)
 ..I '$G(ECXPORT) D:($Y+3>IOSL) HEADER Q:QFLG  W !,UNITN_" ("_UNIT_")",! ;144 Don't print if exporting
"RTN","ECXAECS",115,0)
 ..;initialize the proc array and set totals in array
"RTN","ECXAECS",116,0)
 ..F  S CATN=$O(^TMP($J,"ECXAUD",DIV,UNITN,CATN)) Q:CATN=""  K PROC S PROC="" D  Q:QFLG
"RTN","ECXAECS",117,0)
 ...;write the category name
"RTN","ECXAECS",118,0)
 ...I '$G(ECXPORT) D:($Y+3>IOSL) HEADER Q:QFLG  W !,?5,$E(CATN,1,25) ;144 Don't print if exporting
"RTN","ECXAECS",119,0)
 ...F  S PROC=$O(^TMP($J,"ECXAUD",DIV,UNITN,CATN,PROC)) Q:PROC=""  S TOT=^(PROC) D
"RTN","ECXAECS",120,0)
 ....S STOT=STOT+TOT,GTOT=GTOT+TOT,PROCN=""
"RTN","ECXAECS",121,0)
 ....I $D(^TMP($J,"ECXPROC",PROC)) S PROCN=^(PROC)
"RTN","ECXAECS",122,0)
 ....S PROC($$LJ^XLFSTR(PROC,6," ")_" "_PROCN)=TOT
"RTN","ECXAECS",123,0)
 ...S PN="" F  S PN=$O(PROC(PN)) Q:PN=""  S TOT=PROC(PN) D  Q:QFLG
"RTN","ECXAECS",124,0)
 ....I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=DIVNM_U_ECXARRAY("EXTRACT")_U_UNITN_" ("_UNIT_")"_U_CATN_U_PN_U_TOT,CNT=CNT+1 Q  ;144
"RTN","ECXAECS",125,0)
 ....;write procedure and total
"RTN","ECXAECS",126,0)
 ....W ?35,$E(PN,1,30),?68,$$RJ^XLFSTR(TOT,5," "),!
"RTN","ECXAECS",127,0)
 ..I $G(ECXPORT) Q  ;144 Stop processing if exporting
"RTN","ECXAECS",128,0)
 ..;write the unit subtotal
"RTN","ECXAECS",129,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,?5,$E(LN,1,74)
"RTN","ECXAECS",130,0)
 ..W !,"Total Volume for Unit "_UNITN_" ("_UNIT_"):",?68,$$RJ^XLFSTR(STOT,5," "),!
"RTN","ECXAECS",131,0)
 .I $G(ECXPORT) Q  ;144 Stop processing if exporting
"RTN","ECXAECS",132,0)
 .;write the division grandtotal
"RTN","ECXAECS",133,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !!,"Grand Total for Location "_DIVNM_":",?68,$$RJ^XLFSTR(GTOT,5," ")
"RTN","ECXAECS",134,0)
 ;print the audit descriptive narrative
"RTN","ECXAECS",135,0)
 I $G(ECXPORT) Q  ;144 Stop processing if exporting
"RTN","ECXAECS",136,0)
 I $E(IOST)'="C" D
"RTN","ECXAECS",137,0)
 .W @IOF S PG=PG+1
"RTN","ECXAECS",138,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAECS",139,0)
 .W !,"DSS Extract Log #:      "_ECXEXT
"RTN","ECXAECS",140,0)
 .W !,"Date Range of Audit:    "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAECS",141,0)
 .W !,"Report Run Date/Time:   "_ECXRUN,?68,"Page: ",PG
"RTN","ECXAECS",142,0)
 .W !!,LN,!!
"RTN","ECXAECS",143,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXAECS",144,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAECS",145,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAECS",146,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAECS",147,0)
 Q
"RTN","ECXAECS",148,0)
 ;
"RTN","ECXAECS",149,0)
HEADER ;header and page control
"RTN","ECXAECS",150,0)
 N JJ,SS
"RTN","ECXAECS",151,0)
 I $E(IOST)="C" D
"RTN","ECXAECS",152,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAECS",153,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAECS",154,0)
 Q:QFLG
"RTN","ECXAECS",155,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAECS",156,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAECS",157,0)
 W !,"DSS Extract Log #:      "_ECXARRAY("EXTRACT")
"RTN","ECXAECS",158,0)
 W !,"Date Range of Audit:    "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAECS",159,0)
 W !,"Report Run Date/Time:   "_ECXRUN
"RTN","ECXAECS",160,0)
 W !,"Event Capture Location: "_$P(ECXDIV(DIV),U,2)_" ("_DIV_")",?68,"Page: "_PG
"RTN","ECXAECS",161,0)
 W !!,"DSS Unit",!,?5,"Category",?35,"Procedure",?68,"Volume"
"RTN","ECXAECS",162,0)
 W !,LN,!
"RTN","ECXAECS",163,0)
 Q
"RTN","ECXAPHA")
0^47^B62748333^B35967865
"RTN","ECXAPHA",1,0)
ECXAPHA ;ALB/TMD-Pharmacy Extracts Unusual Volumes/Costs Report ;5/20/13  16:33
"RTN","ECXAPHA",2,0)
 ;;3.0;DSS EXTRACTS;**40,49,66,104,109,113,136,144**;Dec 22, 1997;Build 9
"RTN","ECXAPHA",3,0)
 ;
"RTN","ECXAPHA",4,0)
EN ; entry point
"RTN","ECXAPHA",5,0)
 N X,Y,DATE,ECRUN,ECXOPT,ECXDESC,ECXSAVE,ECXTL,ECTHLD,ECSD
"RTN","ECXAPHA",6,0)
 N ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG,ECXISIG,FYVER,ECXBCM,ECXPORT,CNT ;144
"RTN","ECXAPHA",7,0)
 S QFLG=0
"RTN","ECXAPHA",8,0)
 ; get today's date
"RTN","ECXAPHA",9,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXAPHA",10,0)
 D BEGIN Q:QFLG
"RTN","ECXAPHA",11,0)
 D SELECT Q:QFLG!($G(FYVER)=-1)  ;144 Quit if selections not made for report
"RTN","ECXAPHA",12,0)
 I '$G(ECXCOST) I ECXOPT=2 I FYVER'="" D @(FYVER) Q  ;144 Run previous version of routine and quit if it's the volume report
"RTN","ECXAPHA",13,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXAPHA",14,0)
 .K ^TMP($J) ;144
"RTN","ECXAPHA",15,0)
 .S ^TMP($J,"ECXPORT",0)="NAME^SSN^DAY^GENERIC NAME^FEEDER KEY^"_$S(ECXOPT=1!(ECXOPT=3):"QUANTITY",ECXOPT=2:"TOTAL DOSES PER DAY",1:"COMPONENT DOSE GIVEN")_"^TOTAL COST"_$S(ECXOPT=1:"^DAYS SUPPLY",ECXISIG:"^SIG",1:"") ;144
"RTN","ECXAPHA",16,0)
 .S CNT=1 ;144
"RTN","ECXAPHA",17,0)
 .D PROCESS ;144
"RTN","ECXAPHA",18,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXAPHA",19,0)
 .D AUDIT^ECXKILL ;144
"RTN","ECXAPHA",20,0)
 S ECXDESC=ECXTL_" Extract Unusual"_$S($G(ECXCOST):" Cost",1:" Volume")_" Report" ;144
"RTN","ECXAPHA",21,0)
 S ECXSAVE("EC*")=""
"RTN","ECXAPHA",22,0)
 W !!,"This report requires 132-column format."
"RTN","ECXAPHA",23,0)
 D EN^XUTMDEVQ("PROCESS^ECXAPHA",ECXDESC,.ECXSAVE)
"RTN","ECXAPHA",24,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXAPHA",25,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAPHA",26,0)
 D HOME^%ZIS
"RTN","ECXAPHA",27,0)
 D AUDIT^ECXKILL
"RTN","ECXAPHA",28,0)
 Q
"RTN","ECXAPHA",29,0)
 ;
"RTN","ECXAPHA",30,0)
BEGIN ; display report description
"RTN","ECXAPHA",31,0)
 W @IOF
"RTN","ECXAPHA",32,0)
 W !,"This report prints a listing of unusual ",$S('$G(ECXCOST):"volumes",1:"costs")," that would be" ;144
"RTN","ECXAPHA",33,0)
 W !,"generated by the pharmacy extracts (PRE, IVP, UDP and BCM) as"
"RTN","ECXAPHA",34,0)
 W !,"determined by a user defined threshold value.  It should be run" ;144 Corrected spelling of should
"RTN","ECXAPHA",35,0)
 W !,"prior to the generation of the actual extract(s) to identify and"
"RTN","ECXAPHA",36,0)
 W !,"fix as necessary any ",$S('$G(ECXCOST):"volumes",1:"costs")," determined to be erroneous." ;144
"RTN","ECXAPHA",37,0)
 I '$G(ECXCOST) D  ;144
"RTN","ECXAPHA",38,0)
 .W !!,"Unusual volumes are defined as follows:" ;144
"RTN","ECXAPHA",39,0)
 .W !!,"PRE Extract:  Quantity field greater than the threshold value." ;144
"RTN","ECXAPHA",40,0)
 .W !,"IVP Extract:  Total Doses Per Day field greater than the threshold" ;144
"RTN","ECXAPHA",41,0)
 .W !,?14,"or less than the negative of the threshold value." ;144
"RTN","ECXAPHA",42,0)
 .W !,"UDP Extract:  Quantity field greater than threshold value." ;144
"RTN","ECXAPHA",43,0)
 .W !,"BCM Extract:  Component Dose Given field greater than threshold value." ;144
"RTN","ECXAPHA",44,0)
 W !!,"Note: The threshold can be set after a report is selected."
"RTN","ECXAPHA",45,0)
 W !!,"Run times for this report will vary depending upon the size of"
"RTN","ECXAPHA",46,0)
 W !,"the extract and could take as long as 30 minutes or more to"
"RTN","ECXAPHA",47,0)
 W !,"complete.  This report has no effect on the actual extracts and"
"RTN","ECXAPHA",48,0)
 W !,"can be run as needed."
"RTN","ECXAPHA",49,0)
 W !!,"The report is sorted by Feeder Key, Descending ",$S('$G(ECXCOST):"Volume",1:"Cost"),", and SSN."
"RTN","ECXAPHA",50,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXAPHA",51,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXAPHA",52,0)
 Q
"RTN","ECXAPHA",53,0)
 ;
"RTN","ECXAPHA",54,0)
SELECT ; user inputs for report option, threshold volume/cost and date range
"RTN","ECXAPHA",55,0)
 N DONE,OUT,DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT ;144
"RTN","ECXAPHA",56,0)
 S ECXISIG=0,ECXBCM="" ;144
"RTN","ECXAPHA",57,0)
 ; allow user to select report option (PRE,IVP,UDP or BCM)
"RTN","ECXAPHA",58,0)
 W "Choose the report you would like to run."
"RTN","ECXAPHA",59,0)
 S DIR(0)="S^1:PRE;2:IVP;3:UDP;4:BCM",DIR("A")="Selection",DIR("B")=1 D ^DIR K DIR S ECXOPT=Y I X["^" S QFLG=1 Q
"RTN","ECXAPHA",60,0)
 I '$G(ECXCOST) I ECXOPT=2 S FYVER=$$REPORTFY^ECXUTL1("RXUNVOL") Q:FYVER=-1  ;144 Which version of report should be run for volume report?
"RTN","ECXAPHA",61,0)
 I ECXOPT=4 D  Q:$G(QFLG)  ;144
"RTN","ECXAPHA",62,0)
 .S DIR(0)="S^I:IV;N:NON-IV",DIR("A")="Select type of BCM record",DIR("?",1)="BCM contains both IV and NON-IV records.  Select which type of",DIR("?")="record to check against the threshold." ;144
"RTN","ECXAPHA",63,0)
 .D ^DIR S:$D(DIRUT) QFLG=1 I '$G(QFLG) S ECXBCM=Y ;144
"RTN","ECXAPHA",64,0)
 S ECXTL=$S(ECXOPT=1:"Prescription",ECXOPT=2:"IV Detail",ECXOPT=3:"Unit Dose Local",ECXOPT=4:"BCM-"_$S(ECXBCM="N":"NON ",1:"")_"IV Entries",1:"") ;144
"RTN","ECXAPHA",65,0)
 ; allow user to set threshold volume/cost
"RTN","ECXAPHA",66,0)
 I '$G(ECXCOST) S ECTHLD=$S(ECXOPT=2!(ECXOPT=4&(ECXBCM="I")):1000,ECXOPT=4&(ECXBCM="N"):5,1:500) ;144
"RTN","ECXAPHA",67,0)
 I $G(ECXCOST) S ECTHLD=$S(ECXOPT=2!(ECXOPT=4&(ECXBCM="I")):100,ECXOPT=3!(ECXOPT=4&(ECXBCM="N")):20,1:50) ;144
"RTN","ECXAPHA",68,0)
 W !!,"The default threshold ",$S('$G(ECXCOST):"volume",1:"cost")," for the ",ECXTL," extract is ",$S($G(ECXCOST):"$",1:""),ECTHLD,"." ;144
"RTN","ECXAPHA",69,0)
 S DIR(0)="Y",DIR("A")="Would you like to change the threshold",DIR("B")="NO" D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXAPHA",70,0)
 I Y D
"RTN","ECXAPHA",71,0)
 .I '$G(ECXCOST) W !!,$S(ECXOPT=2:"threshold > Total Doses Per Day < -threshold",ECXOPT=4:"Component Dose Give > Threshold",1:"Quantity > threshold") ;144
"RTN","ECXAPHA",72,0)
 .S DIR(0)="N^0:100000:0",DIR("A")="Enter the new threshold "_$S('$G(ECXCOST):"volume",1:"cost") D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1 Q  ;144
"RTN","ECXAPHA",73,0)
 ; check to see if SIG should be place on the sec line of rpt cvw - *136 
"RTN","ECXAPHA",74,0)
 I ECXOPT=3!(ECXOPT=4&(ECXBCM="N")) S DIR(0)="Y",DIR("A")="Include SIG/Order Direction on line 2 of report",DIR("B")="NO" D ^DIR K DIR S:Y ECXISIG=1 I X["^" S QFLG=1 Q  ;144
"RTN","ECXAPHA",75,0)
 ; get date range from user
"RTN","ECXAPHA",76,0)
 W !!,"Enter the date range for which you would like to scan the ",ECXTL,!,"Extract records."
"RTN","ECXAPHA",77,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXAPHA",78,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXAPHA",79,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXAPHA",80,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXAPHA",81,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXAPHA",82,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXAPHA",83,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXAPHA",84,0)
 .I Y<ECSD D  Q
"RTN","ECXAPHA",85,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXAPHA",86,0)
 ..W !,"Please try again.",!!
"RTN","ECXAPHA",87,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXAPHA",88,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXAPHA",89,0)
 ..W !,"Please try again.",!!
"RTN","ECXAPHA",90,0)
 .S ECED=Y
"RTN","ECXAPHA",91,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXAPHA",92,0)
 .S DONE=1
"RTN","ECXAPHA",93,0)
 Q
"RTN","ECXAPHA",94,0)
 ;
"RTN","ECXAPHA",95,0)
PROCESS ; entry point for queued report
"RTN","ECXAPHA",96,0)
 S ZTREQ="@"
"RTN","ECXAPHA",97,0)
 S ECXERR=0 D EN^ECXAPHA2 Q:ECXERR
"RTN","ECXAPHA",98,0)
 S QFLG=0 D PRINT
"RTN","ECXAPHA",99,0)
 Q
"RTN","ECXAPHA",100,0)
 ;
"RTN","ECXAPHA",101,0)
PRINT ; process temp file and print report
"RTN","ECXAPHA",102,0)
 N PG,QFLG,GTOT,LN,COUNT,FKEY,QTY,SSN,REC,EDAY,ECXCOUNT
"RTN","ECXAPHA",103,0)
 U IO
"RTN","ECXAPHA",104,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAPHA",105,0)
 S (PG,QFLG,GTOT)=0,$P(LN,"-",132)=""
"RTN","ECXAPHA",106,0)
 I '$G(ECXPORT) D HEADER Q:QFLG  ;144
"RTN","ECXAPHA",107,0)
 S COUNT=0,FKEY="" F  S FKEY=$O(^TMP($J,FKEY)) Q:FKEY=""!QFLG!(FKEY="ECXPORT")  D  ;144
"RTN","ECXAPHA",108,0)
 .S QTY="" F  S QTY=$O(^TMP($J,FKEY,QTY)) Q:QTY=""!QFLG  D
"RTN","ECXAPHA",109,0)
 ..S EDAY="" F  S EDAY=$O(^TMP($J,FKEY,QTY,EDAY)) Q:EDAY=""!QFLG  D
"RTN","ECXAPHA",110,0)
 ...S ECXCOUNT="" F  S ECXCOUNT=$O(^TMP($J,FKEY,QTY,EDAY,ECXCOUNT)) Q:ECXCOUNT=""!QFLG  D
"RTN","ECXAPHA",111,0)
 ....S SSN=""
"RTN","ECXAPHA",112,0)
 ....F  S SSN=$O(^TMP($J,FKEY,QTY,EDAY,ECXCOUNT,SSN)) Q:SSN=""!QFLG  S REC=^(SSN)  D
"RTN","ECXAPHA",113,0)
 .....I $G(ECXPORT) D  Q  ;144
"RTN","ECXAPHA",114,0)
 ......S ^TMP($J,"ECXPORT",CNT)=$P(REC,U)_U_$P(REC,U,2)_U_$P(REC,U,3)_U_$P(REC,U,4)_U_$P(REC,U,5)_U_$P(REC,U,6)_" "_$P(REC,U,7)_U_$P(REC,U,8)_$S(ECXOPT=1:(U_$P(REC,U,9)),ECXISIG:(U_$S($P(REC,U,10)="":"N/A",1:$P(REC,U,10))),1:"") ;144
"RTN","ECXAPHA",115,0)
 ......S CNT=CNT+1 ;144
"RTN","ECXAPHA",116,0)
 .....S COUNT=COUNT+1
"RTN","ECXAPHA",117,0)
 .....I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXAPHA",118,0)
 .....W !,$P(REC,U),?8,$P(REC,U,2),?20,$P(REC,U,3),?29,$E($P(REC,U,4),1,40)
"RTN","ECXAPHA",119,0)
 .....W ?71,$P(REC,U,5),?89,$$RJ^XLFSTR($P(REC,U,6),9)_" "_$E($P(REC,U,7),1,7)
"RTN","ECXAPHA",120,0)
 .....I ECXOPT=1 D
"RTN","ECXAPHA",121,0)
 ......W ?108,$$RJ^XLFSTR($P(REC,U,8),12),?125,$$RJ^XLFSTR($P(REC,U,9),3)
"RTN","ECXAPHA",122,0)
 .....I ECXOPT'=1 D
"RTN","ECXAPHA",123,0)
 ......W ?116,$$RJ^XLFSTR($P(REC,U,8),14)
"RTN","ECXAPHA",124,0)
 .....I $G(ECXISIG) D  ;144
"RTN","ECXAPHA",125,0)
 ......W !,?5,"SIG: ",$S($P(REC,U,10)="":"N/A",1:$P(REC,U,10)),! ;136
"RTN","ECXAPHA",126,0)
 Q:QFLG!($G(ECXPORT))  ;144
"RTN","ECXAPHA",127,0)
 I COUNT=0 W !!,?8,"No unusual ",$S('$G(ECXCOST):"volumes",1:"costs")," to report for this extract" ;144
"RTN","ECXAPHA",128,0)
CLOSE ;
"RTN","ECXAPHA",129,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAPHA",130,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPHA",131,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAPHA",132,0)
 Q
"RTN","ECXAPHA",133,0)
 ;
"RTN","ECXAPHA",134,0)
HEADER ;header and page control
"RTN","ECXAPHA",135,0)
 N SS,JJ
"RTN","ECXAPHA",136,0)
 I $E(IOST)="C" D
"RTN","ECXAPHA",137,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPHA",138,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAPHA",139,0)
 Q:QFLG
"RTN","ECXAPHA",140,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAPHA",141,0)
 W !,ECXTL_" Extract Unusual ",$S('$G(ECXCOST):"Volume",1:"Cost")," Report",?124,"Page: "_PG ;144
"RTN","ECXAPHA",142,0)
 W !,"Start Date: ",ECSTART,?97,"Report Run Date/Time:  "_ECRUN
"RTN","ECXAPHA",143,0)
 W !,"End Date:   ",ECEND,?97,"Threshold Value = ",$S($G(ECXCOST):"$",1:""),ECTHLD ;144
"RTN","ECXAPHA",144,0)
 W !!,"Name",?11,"SSN",?21,"Day",?29,"Generic Name",?71,"Feeder Key"
"RTN","ECXAPHA",145,0)
 I ECXOPT=1 W ?95,"Quantity",?109,"Total Cost",?120,"Days Supply" ;144 Combined lines
"RTN","ECXAPHA",146,0)
 I ECXOPT=2 W ?93,"Total Doses",?121,"Total Cost",!,?95,"Per Day" ;144
"RTN","ECXAPHA",147,0)
 I ECXOPT=3 W ?96,"Quantity",?121,"Total Cost" ;144
"RTN","ECXAPHA",148,0)
 I ECXOPT=4 W ?89,"Component Dose Given",?121,"Total Cost" ;144
"RTN","ECXAPHA",149,0)
 W !,LN,!
"RTN","ECXAPHA",150,0)
 Q
"RTN","ECXAPHA",151,0)
 ;
"RTN","ECXAPHA",152,0)
SIG(ORDNO,PATNO) ;Get ordering instructions for unit dose order.  API added in patch 136
"RTN","ECXAPHA",153,0)
 N DATA,RECNO,I,SIG
"RTN","ECXAPHA",154,0)
 S SIG=""
"RTN","ECXAPHA",155,0)
 I ORDNO=""!(PATNO="") Q SIG
"RTN","ECXAPHA",156,0)
 S RECNO=ORDNO_","_PATNO_","
"RTN","ECXAPHA",157,0)
 D GETS^DIQ(55.06,RECNO,"26;120;121","E","DATA")
"RTN","ECXAPHA",158,0)
 F I=120,121,26 S SIG=$G(SIG)_$S($L(SIG)>0:" ",1:"")_$G(DATA(55.06,RECNO,I,"E"))
"RTN","ECXAPHA",159,0)
 Q SIG
"RTN","ECXAPHA",160,0)
 ;
"RTN","ECXAPHA",161,0)
COST ;Section added in 144, entry point for unusual cost report
"RTN","ECXAPHA",162,0)
 N ECXCOST
"RTN","ECXAPHA",163,0)
 S ECXCOST=1
"RTN","ECXAPHA",164,0)
 D EN
"RTN","ECXAPHA",165,0)
 Q
"RTN","ECXAPHA2")
0^59^B51669266^B28836077
"RTN","ECXAPHA2",1,0)
ECXAPHA2 ;ALB/TMD-Pharmacy Extracts Unusual Volumes Report ;5/20/13  16:59
"RTN","ECXAPHA2",2,0)
 ;;3.0;DSS EXTRACTS;**40,49,84,104,105,113,136,143,144**;Dec 22, 1997;Build 9
"RTN","ECXAPHA2",3,0)
 ;
"RTN","ECXAPHA2",4,0)
EN ; entry point
"RTN","ECXAPHA2",5,0)
 N COUNT,ECUNIT,LINE,ECDFN,ECD,ECDRG,ECDAY,ECDFN,ECQTY,ECUNIT,ECCOST,ECDS,ECXCOUNT
"RTN","ECXAPHA2",6,0)
 I '$G(ECXPORT) K ^TMP($J) ;144
"RTN","ECXAPHA2",7,0)
 S (COUNT,ECDS,ECXCOUNT)=0,ECUNIT=""
"RTN","ECXAPHA2",8,0)
 S ECD=ECSD1,ECED=ECED+.3
"RTN","ECXAPHA2",9,0)
 S LINE=$S(ECXOPT=1:"PRE",ECXOPT=2:"IVP",ECXOPT=3:"UDP",ECXOPT=4:"BCM",1:"EXIT") ;144
"RTN","ECXAPHA2",10,0)
 D @LINE
"RTN","ECXAPHA2",11,0)
 Q
"RTN","ECXAPHA2",12,0)
 ;
"RTN","ECXAPHA2",13,0)
PRE ; entry point for PRE data
"RTN","ECXAPHA2",14,0)
 N ECRFL,ECRX,ECREF,ECDATA,ECDATA1,ECPRC,IEN
"RTN","ECXAPHA2",15,0)
 K ^TMP($J,"ECXDSS")
"RTN","ECXAPHA2",16,0)
 ;call pharmacy api pso52ex
"RTN","ECXAPHA2",17,0)
 D EXTRACT^PSO52EX(ECD,ECED,"ECXDSS")
"RTN","ECXAPHA2",18,0)
 S ECREF="RF"
"RTN","ECXAPHA2",19,0)
 ;order thru fills and refills; refill values 0 thru 11
"RTN","ECXAPHA2",20,0)
 ;     Note:  refill 0 = original fill
"RTN","ECXAPHA2",21,0)
 F  S ECD=$O(^TMP($J,"ECXDSS","AL",ECD)),IEN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S IEN=$O(^TMP($J,"ECXDSS","AL",ECD,IEN)),ECRFL=""  Q:'IEN  Q:ECXERR  F  S ECRFL=$O(^TMP($J,"ECXDSS","AL",ECD,IEN,ECRFL)) Q:ECRFL=""  Q:ECXERR  D PRE2
"RTN","ECXAPHA2",22,0)
 ;
"RTN","ECXAPHA2",23,0)
 ;order thru partial fills
"RTN","ECXAPHA2",24,0)
 S ECD=ECSD1,ECREF="P"
"RTN","ECXAPHA2",25,0)
 F  S ECD=$O(^TMP($J,"ECXDSS","AM",ECD)),IEN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S IEN=$O(^(ECD,IEN)),ECRFL=""  Q:'IEN  Q:ECXERR  F  S ECRFL=$O(^(IEN,ECRFL)) Q:'ECRFL  Q:ECXERR  D PRE2
"RTN","ECXAPHA2",26,0)
 K ^TMP($J,"ECXDSS")
"RTN","ECXAPHA2",27,0)
 Q
"RTN","ECXAPHA2",28,0)
 ;
"RTN","ECXAPHA2",29,0)
PRE2 ; get Prescription data
"RTN","ECXAPHA2",30,0)
 I (ECREF="RF")&(ECRFL) D
"RTN","ECXAPHA2",31,0)
 .S ECQTY=+^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,1)
"RTN","ECXAPHA2",32,0)
 .S ECDS=+^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,1.1)
"RTN","ECXAPHA2",33,0)
 .S ECPRC=^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,1.2)
"RTN","ECXAPHA2",34,0)
 I (ECREF="RF")&('ECRFL) D
"RTN","ECXAPHA2",35,0)
 .S ECQTY=+^TMP($J,"ECXDSS",IEN,7)
"RTN","ECXAPHA2",36,0)
 .S ECDS=+^TMP($J,"ECXDSS",IEN,8)
"RTN","ECXAPHA2",37,0)
 .S ECPRC=+^TMP($J,"ECXDSS",IEN,17)
"RTN","ECXAPHA2",38,0)
 I ECREF="P" D
"RTN","ECXAPHA2",39,0)
 .S ECQTY=+^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,.04)
"RTN","ECXAPHA2",40,0)
 .S ECDS=+^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,.041)
"RTN","ECXAPHA2",41,0)
 .S ECPRC=+^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,.042)
"RTN","ECXAPHA2",42,0)
 S ECDAY=ECD ;144
"RTN","ECXAPHA2",43,0)
 S ECDFN=$P(^TMP($J,"ECXDSS",IEN,2),U) ;144
"RTN","ECXAPHA2",44,0)
 S ECDRG=+$P(^TMP($J,"ECXDSS",IEN,6),U) ;144
"RTN","ECXAPHA2",45,0)
 S ECCOST=ECQTY*ECPRC ;144
"RTN","ECXAPHA2",46,0)
 ;Is cost/volume greater than threshold?
"RTN","ECXAPHA2",47,0)
 I $S($G(ECXCOST):ECCOST,1:ECQTY)>ECTHLD D FILE ;144
"RTN","ECXAPHA2",48,0)
 Q
"RTN","ECXAPHA2",49,0)
 ;
"RTN","ECXAPHA2",50,0)
IVP ; entry point for IVP Data
"RTN","ECXAPHA2",51,0)
 N DFN,ON,DA,SA,ECCOUNT ;143
"RTN","ECXAPHA2",52,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^("S") D  Q:ECXERR
"RTN","ECXAPHA2",53,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  Q:ECXERR  I $D(^ECX(728.113,DA,0)) S EC=^(0) Q:ECXERR  D
"RTN","ECXAPHA2",54,0)
 ..S ECDRG=$P(EC,U,4)
"RTN","ECXAPHA2",55,0)
 ..S SA=$S($P(EC,U,8)]"":"A",$P(EC,U,9):"S",1:"")
"RTN","ECXAPHA2",56,0)
 ..; set up new record for first DA for this drug
"RTN","ECXAPHA2",57,0)
 ..I '$D(^TMP($J,SA,ECDRG)) D
"RTN","ECXAPHA2",58,0)
 ...S ECQTY=+$S(SA="A":+$P(EC,U,7),SA="S":+$P(EC,U,9),1:0)
"RTN","ECXAPHA2",59,0)
 ...S ECUNIT=$S(SA="A":$P(EC,U,8),SA="S":"ML",1:"")
"RTN","ECXAPHA2",60,0)
 ...S ECCOST=$P(EC,U,12),ECDFN=DFN
"RTN","ECXAPHA2",61,0)
 ...S ^TMP($J,SA,ECDRG)=ECUNIT_U_ECD_U_ECDFN_U_ECCOST_U_ECQTY
"RTN","ECXAPHA2",62,0)
 ...S ^(ECDRG,1)=0
"RTN","ECXAPHA2",63,0)
 ..; add to qty (0,1, or -1) to total
"RTN","ECXAPHA2",64,0)
 ..S ^TMP($J,SA,ECDRG,1)=^TMP($J,SA,ECDRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXAPHA2",65,0)
 .; looped thru all DAs for this order - now check for unusual volumes
"RTN","ECXAPHA2",66,0)
 .F SA="S","A" S ECDRG="" F  S ECDRG=$O(^TMP($J,SA,ECDRG)) Q:ECDRG=""  Q:ECXERR  D
"RTN","ECXAPHA2",67,0)
 ..S ECQTY=$P(^TMP($J,SA,ECDRG),U,5),ECCOUNT=^(ECDRG,1)
"RTN","ECXAPHA2",68,0)
 ..S ECQTY=ECQTY*ECCOUNT
"RTN","ECXAPHA2",69,0)
 ..S ECUNIT=$P(^TMP($J,SA,ECDRG),U) ;144
"RTN","ECXAPHA2",70,0)
 ..S ECDAY=$P(^(ECDRG),U,2) ;144
"RTN","ECXAPHA2",71,0)
 ..S ECDFN=$P(^(ECDRG),U,3) ;144
"RTN","ECXAPHA2",72,0)
 ..; New Cost calculation ** 136,144
"RTN","ECXAPHA2",73,0)
 ..; Removed avg cost search from 136 use existing avgcost and quantity vs count  ** 143,144
"RTN","ECXAPHA2",74,0)
 ..S ECCOST=$P(^(ECDRG),U,4)*ECQTY ;144
"RTN","ECXAPHA2",75,0)
 ..;144 Check volume versus threshold
"RTN","ECXAPHA2",76,0)
 ..I '$G(ECXCOST) I ECQTY>ECTHLD!(ECQTY<-ECTHLD) D FILE ;144
"RTN","ECXAPHA2",77,0)
 ..;144 Check cost versus threshold
"RTN","ECXAPHA2",78,0)
 ..I $G(ECXCOST) I ECCOST>ECTHLD D FILE ;144
"RTN","ECXAPHA2",79,0)
 K ^TMP($J,"A"),^("S")
"RTN","ECXAPHA2",80,0)
 Q
"RTN","ECXAPHA2",81,0)
 ;
"RTN","ECXAPHA2",82,0)
UDP ; entry point for UDP data
"RTN","ECXAPHA2",83,0)
 N ECXJ,ECDATA,ECORD ;136
"RTN","ECXAPHA2",84,0)
 F  S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:ECXERR  D
"RTN","ECXAPHA2",85,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:ECXERR  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXAPHA2",86,0)
 ..S DATA=^ECX(728.904,ECXJ,0),ECQTY=$P(DATA,U,5)
"RTN","ECXAPHA2",87,0)
 ..S ECDFN=$P(DATA,U,2),ECDRG=$P(DATA,U,4),ECCOST=$P(DATA,U,8),ECDAY=ECD,ECORD=$P(DATA,U,10) ;136,144
"RTN","ECXAPHA2",88,0)
 ..;144 Check volume or cost against threshold
"RTN","ECXAPHA2",89,0)
 ..I $S($G(ECXCOST):ECCOST,1:ECQTY)>ECTHLD D FILE ;144
"RTN","ECXAPHA2",90,0)
 Q
"RTN","ECXAPHA2",91,0)
 ;
"RTN","ECXAPHA2",92,0)
BCM ;Section added in patch 144
"RTN","ECXAPHA2",93,0)
 N PIEN,IDAT,RIEN,ECXDFN,ECXNOD,ECXORN,ACTDT,ECXASTA,CCDORD,CCDGVN,CCUNIT,CCTYPE,DRG,ECXDRGC,UNITCOST,CCIEN,ECXIVSC,ECXIVAC,ECORD
"RTN","ECXAPHA2",94,0)
 S PIEN=0
"RTN","ECXAPHA2",95,0)
 I $G(ECSD)="" S ECSD=DT
"RTN","ECXAPHA2",96,0)
 ; loop thru and get each new patient, reset the start date to ECSD
"RTN","ECXAPHA2",97,0)
 F  S PIEN=$O(^PSB(53.79,"AADT",PIEN)) Q:('PIEN)  Q:ECXERR  S IDAT=ECSD D
"RTN","ECXAPHA2",98,0)
 .F  S IDAT=$O(^PSB(53.79,"AADT",PIEN,IDAT)) Q:'IDAT!(IDAT>ECED)  Q:ECXERR  S RIEN="" D
"RTN","ECXAPHA2",99,0)
 ..F  S RIEN=$O(^PSB(53.79,"AADT",PIEN,IDAT,RIEN)) Q:'RIEN  D
"RTN","ECXAPHA2",100,0)
 ...S ECXNOD=^PSB(53.79,RIEN,0) Q:'ECXNOD  S ECXDFN=$P($G(ECXNOD),U)
"RTN","ECXAPHA2",101,0)
 ...S ECXORN=$$GET1^DIQ(53.79,RIEN,.11)
"RTN","ECXAPHA2",102,0)
 ...I ECXORN["U" Q:$$CHKUD^ECXBCM(ECXDFN,ECSD,ECED)  Q:ECXBCM="I"
"RTN","ECXAPHA2",103,0)
 ...I ECXORN["V" Q:$$CHKIV^ECXBCM(ECXDFN,ECSD,ECED)  Q:ECXBCM="N"
"RTN","ECXAPHA2",104,0)
 ...S ACTDT=$$GET1^DIQ(53.79,RIEN,.06,"I") Q:ACTDT'=IDAT
"RTN","ECXAPHA2",105,0)
 ...S ECXASTA=$$GET1^DIQ(53.79,RIEN,.09,"I")
"RTN","ECXAPHA2",106,0)
 ...I "^G^S^C^"'[("^"_ECXASTA_"^") Q  ;process 'G'iven,'S'topped,'C'ompleted
"RTN","ECXAPHA2",107,0)
 ...D CCODE(RIEN)
"RTN","ECXAPHA2",108,0)
 Q
"RTN","ECXAPHA2",109,0)
 ;
"RTN","ECXAPHA2",110,0)
CCODE(RIEN) ; 144 get component information added in patch 144
"RTN","ECXAPHA2",111,0)
 ;  input - IEN of the BCMA MEDICATION LOG File
"RTN","ECXAPHA2",112,0)
 ; 
"RTN","ECXAPHA2",113,0)
 ; output - CCIEN: pointer to a variable pointer field to file #50, #52.6, or #52.7
"RTN","ECXAPHA2",114,0)
 ;          CCDORD: .02 field of file #50, #52.6, or #52.7
"RTN","ECXAPHA2",115,0)
 ;          CCDGVN: .03 FIELD of file #50, #52.6, or #52.7
"RTN","ECXAPHA2",116,0)
 ;          CCUNIT: .04 field of file #50, #52.6, or #52.7
"RTN","ECXAPHA2",117,0)
 ;          CCTYPE: derived field, "D", "A", or "S"
"RTN","ECXAPHA2",118,0)
 ;
"RTN","ECXAPHA2",119,0)
 N J,DATA,I
"RTN","ECXAPHA2",120,0)
 S (CCIEN,CCDORD,CCDGVN,CCUNIT,CCTYPE)=""
"RTN","ECXAPHA2",121,0)
 F I=.5,.6,.7 D  Q:ECXERR
"RTN","ECXAPHA2",122,0)
 .I '$O(^PSB(53.79,RIEN,I,0)) Q
"RTN","ECXAPHA2",123,0)
 .S J=0 F  S J=$O(^PSB(53.79,RIEN,I,J)) Q:'J  Q:ECXERR  D
"RTN","ECXAPHA2",124,0)
 ..S (UNITCOST,ECXDRGC,ECXIVSC,ECXIVAC)=0
"RTN","ECXAPHA2",125,0)
 ..S DATA=^PSB(53.79,RIEN,I,J,0)
"RTN","ECXAPHA2",126,0)
 ..S CCIEN=$P(DATA,U),CCDORD=$P(DATA,U,2),CCDGVN=$S(+($P(DATA,U,3))>0:+($P(DATA,U,3)),1:1),CCUNIT=$S(+($P(DATA,U,4))>0:+($P(DATA,U,4)),1:1)
"RTN","ECXAPHA2",127,0)
 ..I I=.5 D
"RTN","ECXAPHA2",128,0)
 ...S DRG=CCIEN,UNITCOST=$$GET1^DIQ(50,DRG,16,"I")
"RTN","ECXAPHA2",129,0)
 ...S ECXDRGC=(CCDGVN*CCUNIT)*UNITCOST
"RTN","ECXAPHA2",130,0)
 ..I I=.6 D
"RTN","ECXAPHA2",131,0)
 ...S DRG=$$GET1^DIQ(52.6,CCIEN,1,"I"),UNITCOST=$$GET1^DIQ(52.6,CCIEN,7,"I")
"RTN","ECXAPHA2",132,0)
 ...S ECXIVAC=CCDGVN*UNITCOST
"RTN","ECXAPHA2",133,0)
 ..I I=.7 D
"RTN","ECXAPHA2",134,0)
 ...S DRG=$$GET1^DIQ(52.7,CCIEN,1,"I"),UNITCOST=$$GET1^DIQ(52.7,CCIEN,7,"I")
"RTN","ECXAPHA2",135,0)
 ...S ECXIVSC=CCDGVN*UNITCOST
"RTN","ECXAPHA2",136,0)
 ..S CCTYPE=$S(I=.5:"D",I=.6:"A",I=.7:"S",1:"")
"RTN","ECXAPHA2",137,0)
 ..S CCIEN=$S(I=.5:CCIEN_";PSDRUG(",I=.6:CCIEN_";PS(52.6,",I=.7:CCIEN_";PS(52.7,",1:"")
"RTN","ECXAPHA2",138,0)
 ..S ECDAY=IDAT
"RTN","ECXAPHA2",139,0)
 ..S ECDFN=ECXDFN
"RTN","ECXAPHA2",140,0)
 ..S ECDRG=DRG
"RTN","ECXAPHA2",141,0)
 ..S ECQTY=CCDGVN
"RTN","ECXAPHA2",142,0)
 ..S ECCOST=$S(ECXDRGC:ECXDRGC,ECXIVSC:ECXIVSC,ECXIVAC:ECXIVAC,1:0)
"RTN","ECXAPHA2",143,0)
 ..S ECORD=+ECXORN
"RTN","ECXAPHA2",144,0)
 ..I $S($G(ECXCOST):ECCOST,1:CCDGVN)>ECTHLD D FILE
"RTN","ECXAPHA2",145,0)
 Q
"RTN","ECXAPHA2",146,0)
 ;
"RTN","ECXAPHA2",147,0)
FILE ; put records in temp file to print later
"RTN","ECXAPHA2",148,0)
 N OK,ECXPAT,ECNAME,ECSSN,ECGNAME,ECNDC,ECPROD,ECFKEY,ECXPHA,J ;144
"RTN","ECXAPHA2",149,0)
 ; get demographics
"RTN","ECXAPHA2",150,0)
 S OK=$$PAT^ECXUTL3(ECDFN,$P(ECD,"."),"1;",.ECXPAT)
"RTN","ECXAPHA2",151,0)
 I 'OK Q
"RTN","ECXAPHA2",152,0)
 S ECNAME=ECXPAT("NAME")
"RTN","ECXAPHA2",153,0)
 S ECSSN=ECXPAT("SSN")
"RTN","ECXAPHA2",154,0)
 S ECDAY=$E(ECDAY,4,5)_"/"_$E(ECDAY,6,7)
"RTN","ECXAPHA2",155,0)
 ; get drug file data
"RTN","ECXAPHA2",156,0)
 S ECXPHA="",ECXPHA=$$PHAAPI^ECXUTL5(ECDRG)
"RTN","ECXAPHA2",157,0)
 S ECGNAME=$P(ECXPHA,U)
"RTN","ECXAPHA2",158,0)
 S ECNDC=$P(ECXPHA,U,3)
"RTN","ECXAPHA2",159,0)
 S ECNDC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0)
"RTN","ECXAPHA2",160,0)
 S ECNDC=$TR(ECNDC,"*",0)
"RTN","ECXAPHA2",161,0)
 S ECPROD=$P(ECXPHA,U,6)
"RTN","ECXAPHA2",162,0)
 S ECPROD=$$RJ^XLFSTR(ECPROD,5,0)
"RTN","ECXAPHA2",163,0)
 S ECFKEY=ECPROD_ECNDC
"RTN","ECXAPHA2",164,0)
 I ECXOPT'=2&'(ECXOPT=4&($G(ECXBCM)="I")) S ECUNIT=$P(ECXPHA,U,8)
"RTN","ECXAPHA2",165,0)
 ; file 
"RTN","ECXAPHA2",166,0)
 S ^TMP($J,ECFKEY,-ECQTY,ECDAY,ECXCOUNT,ECSSN)=ECNAME_U_ECSSN_U_ECDAY_U_ECGNAME_U_ECFKEY_U_ECQTY_U_ECUNIT_U_"$"_$FNUMBER(ECCOST,",",4)_U_ECDS
"RTN","ECXAPHA2",167,0)
 I $G(ECXISIG) S $P(^TMP($J,ECFKEY,-ECQTY,ECDAY,ECXCOUNT,ECSSN),U,10)=$$SIG^ECXAPHA(ECORD,ECDFN) ;136,144 Get SIG data if UDP or BCM Non-IV report
"RTN","ECXAPHA2",168,0)
 S COUNT=COUNT+1
"RTN","ECXAPHA2",169,0)
 S ECXCOUNT=ECXCOUNT+1
"RTN","ECXAPHA2",170,0)
 I COUNT#100=0 I $$S^ZTLOAD S (ZTSTOP,ECXERR)=1 ;136 Update ZTSTOP var to be spelled correctly
"RTN","ECXAPHA2",171,0)
 Q
"RTN","ECXAPHA2",172,0)
 ;
"RTN","ECXAPHA2",173,0)
EXIT S ECXERR=1 Q
"RTN","ECXAPHAP")
0^45^B37750813^n/a
"RTN","ECXAPHAP",1,0)
ECXAPHAP ;ALB/TMD-Pharmacy Extracts Unusual Volumes Report ;3/27/13  16:58
"RTN","ECXAPHAP",2,0)
 ;;3.0;DSS EXTRACTS;**40,49,66,104,109,113,136,144**;Dec 22, 1997;Build 9
"RTN","ECXAPHAP",3,0)
 ;
"RTN","ECXAPHAP",4,0)
 ;This routine is new with patch 144 but is a copy of ECXAPHA before it
"RTN","ECXAPHAP",5,0)
 ;was changed for the FY update.  This is now the previous fiscal year
"RTN","ECXAPHAP",6,0)
 ;version of the routine
"RTN","ECXAPHAP",7,0)
EN ; entry point
"RTN","ECXAPHAP",8,0)
 N X,Y,DATE,ECRUN,ECXOPT,ECXDESC,ECXSAVE,ECXTL,ECTHLD,ECSD
"RTN","ECXAPHAP",9,0)
 N ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG,ECXISIG
"RTN","ECXAPHAP",10,0)
 S QFLG=0
"RTN","ECXAPHAP",11,0)
 ; get today's date
"RTN","ECXAPHAP",12,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXAPHAP",13,0)
 D BEGIN Q:QFLG
"RTN","ECXAPHAP",14,0)
 D SELECT Q:QFLG
"RTN","ECXAPHAP",15,0)
PREV ;Line label added in patch 144.  Come here when running previous fiscal year logic for this report
"RTN","ECXAPHAP",16,0)
 S ECXDESC=ECXTL_" Extract Unusual Volume Report"
"RTN","ECXAPHAP",17,0)
 S ECXSAVE("EC*")=""
"RTN","ECXAPHAP",18,0)
 W !!,"This report requires 132-column format."
"RTN","ECXAPHAP",19,0)
 D EN^XUTMDEVQ("PROCESS^ECXAPHAP",ECXDESC,.ECXSAVE)
"RTN","ECXAPHAP",20,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXAPHAP",21,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAPHAP",22,0)
 D HOME^%ZIS
"RTN","ECXAPHAP",23,0)
 D AUDIT^ECXKILL
"RTN","ECXAPHAP",24,0)
 Q
"RTN","ECXAPHAP",25,0)
 ;
"RTN","ECXAPHAP",26,0)
BEGIN ; display report description
"RTN","ECXAPHAP",27,0)
 W @IOF
"RTN","ECXAPHAP",28,0)
 W !,"This report prints a listing of unusual volumes that would be"
"RTN","ECXAPHAP",29,0)
 W !,"generated by the pharmacy extracts (PRE, IVP and UDP) as"
"RTN","ECXAPHAP",30,0)
 W !,"determined by a user defined threshold value.  It shoud be run"
"RTN","ECXAPHAP",31,0)
 W !,"prior to the generation of the actual extract(s) to identify and"
"RTN","ECXAPHAP",32,0)
 W !,"fix as necessary any volumes determined to be erroneous."
"RTN","ECXAPHAP",33,0)
 W !!,"Unusual volumes are defined as follows:"
"RTN","ECXAPHAP",34,0)
 W !!,"PRE Extract:  Quantity field greater than the threshold value."
"RTN","ECXAPHAP",35,0)
 W !,"IVP Extract:  Total Doses Per Day field greater than the threshold"
"RTN","ECXAPHAP",36,0)
 W !,?14,"or less than the negative of the threshold value."
"RTN","ECXAPHAP",37,0)
 W !,"UDP Extract:  Quantity field greater than threshold value."
"RTN","ECXAPHAP",38,0)
 W !!,"Note: The threshold can be set after a report is selected."
"RTN","ECXAPHAP",39,0)
 W !!,"Run times for this report will vary depending upon the size of"
"RTN","ECXAPHAP",40,0)
 W !,"the extract and could take as long as 30 minutes or more to"
"RTN","ECXAPHAP",41,0)
 W !,"complete.  This report has no effect on the actual extracts and"
"RTN","ECXAPHAP",42,0)
 W !,"can be run as needed."
"RTN","ECXAPHAP",43,0)
 W !!,"The report is sorted by Feeder Key, descending Volume, and SSN."
"RTN","ECXAPHAP",44,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXAPHAP",45,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXAPHAP",46,0)
 Q
"RTN","ECXAPHAP",47,0)
 ;
"RTN","ECXAPHAP",48,0)
SELECT ; user inputs for report option, threshold volume and date range
"RTN","ECXAPHAP",49,0)
 N DONE,OUT
"RTN","ECXAPHAP",50,0)
 S ECXISIG=0
"RTN","ECXAPHAP",51,0)
 ; allow user to select report option (PRE,IVP or UDP)
"RTN","ECXAPHAP",52,0)
 W "Choose the report you would like to run."
"RTN","ECXAPHAP",53,0)
 S DIR(0)="S^1:PRE;2:IVP;3:UDP",DIR("A")="Selection",DIR("B")=1 D ^DIR K DIR S ECXOPT=Y I X["^" S QFLG=1 Q
"RTN","ECXAPHAP",54,0)
 S ECXTL=$S(ECXOPT=1:"Prescription",ECXOPT=2:"IV Detail",ECXOPT=3:"Unit Dose Local",1:"")
"RTN","ECXAPHAP",55,0)
 ; allow user to set threshold volume
"RTN","ECXAPHAP",56,0)
 S ECTHLD=$S(ECXOPT=2:1000,1:500)
"RTN","ECXAPHAP",57,0)
 W !!,"The default threshold volume for the ",ECXTL," extract is ",ECTHLD,"."
"RTN","ECXAPHAP",58,0)
 S DIR(0)="Y",DIR("A")="Would you like to change the threshold",DIR("B")="NO" D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXAPHAP",59,0)
 I Y D
"RTN","ECXAPHAP",60,0)
 .W !!,$S(ECXOPT=2:"threshold > Total Doses Per Day < -threshold",1:"Quantity > threshold")
"RTN","ECXAPHAP",61,0)
 .S DIR(0)="N^0:100000:0",DIR("A")="Enter the new threshold volume" D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1 Q
"RTN","ECXAPHAP",62,0)
 ; check to see if SIG should be place on the sec line of rpt cvw - *136 
"RTN","ECXAPHAP",63,0)
 I ECXOPT=3 S DIR(0)="Y",DIR("A")="Include SIG/Order Direction on line 2 of report",DIR("B")="NO" D ^DIR K DIR S:Y ECXISIG=1 I X["^" S QFLG=1 Q
"RTN","ECXAPHAP",64,0)
 ; get date range from user
"RTN","ECXAPHAP",65,0)
 W !!,"Enter the date range for which you would like to scan the ",ECXTL,!,"Extract records."
"RTN","ECXAPHAP",66,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXAPHAP",67,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXAPHAP",68,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXAPHAP",69,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXAPHAP",70,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXAPHAP",71,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXAPHAP",72,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXAPHAP",73,0)
 .I Y<ECSD D  Q
"RTN","ECXAPHAP",74,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXAPHAP",75,0)
 ..W !,"Please try again.",!!
"RTN","ECXAPHAP",76,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXAPHAP",77,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXAPHAP",78,0)
 ..W !,"Please try again.",!!
"RTN","ECXAPHAP",79,0)
 .S ECED=Y
"RTN","ECXAPHAP",80,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXAPHAP",81,0)
 .S DONE=1
"RTN","ECXAPHAP",82,0)
 Q
"RTN","ECXAPHAP",83,0)
 ;
"RTN","ECXAPHAP",84,0)
PROCESS ; entry point for queued report
"RTN","ECXAPHAP",85,0)
 S ZTREQ="@"
"RTN","ECXAPHAP",86,0)
 S ECXERR=0 D EN^ECXAPHP2 Q:ECXERR
"RTN","ECXAPHAP",87,0)
 S QFLG=0 D PRINT
"RTN","ECXAPHAP",88,0)
 Q
"RTN","ECXAPHAP",89,0)
 ;
"RTN","ECXAPHAP",90,0)
PRINT ; process temp file and print report
"RTN","ECXAPHAP",91,0)
 N PG,QFLG,GTOT,LN,COUNT,FKEY,QTY,SSN,REC,EDAY,ECXCOUNT
"RTN","ECXAPHAP",92,0)
 U IO
"RTN","ECXAPHAP",93,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAPHAP",94,0)
 S (PG,QFLG,GTOT)=0,$P(LN,"-",132)=""
"RTN","ECXAPHAP",95,0)
 D HEADER Q:QFLG
"RTN","ECXAPHAP",96,0)
 S COUNT=0,FKEY="" F  S FKEY=$O(^TMP($J,FKEY)) Q:FKEY=""!QFLG  D
"RTN","ECXAPHAP",97,0)
 .S QTY="" F  S QTY=$O(^TMP($J,FKEY,QTY)) Q:QTY=""!QFLG  D
"RTN","ECXAPHAP",98,0)
 ..S EDAY="" F  S EDAY=$O(^TMP($J,FKEY,QTY,EDAY)) Q:EDAY=""!QFLG  D
"RTN","ECXAPHAP",99,0)
 ...S ECXCOUNT="" F  S ECXCOUNT=$O(^TMP($J,FKEY,QTY,EDAY,ECXCOUNT)) Q:ECXCOUNT=""!QFLG  D
"RTN","ECXAPHAP",100,0)
 ....S SSN=""
"RTN","ECXAPHAP",101,0)
 ....F  S SSN=$O(^TMP($J,FKEY,QTY,EDAY,ECXCOUNT,SSN)) Q:SSN=""!QFLG  S REC=^(SSN)  D
"RTN","ECXAPHAP",102,0)
 .....S COUNT=COUNT+1
"RTN","ECXAPHAP",103,0)
 .....I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXAPHAP",104,0)
 .....W !,$P(REC,U),?8,$P(REC,U,2),?20,$P(REC,U,3),?29,$E($P(REC,U,4),1,40)
"RTN","ECXAPHAP",105,0)
 .....W ?71,$P(REC,U,5),?89,$$RJ^XLFSTR($P(REC,U,6),9)_" "_$E($P(REC,U,7),1,7)
"RTN","ECXAPHAP",106,0)
 .....I ECXOPT=1 D
"RTN","ECXAPHAP",107,0)
 ......W ?108,$$RJ^XLFSTR($P(REC,U,8),12),?125,$$RJ^XLFSTR($P(REC,U,9),3)
"RTN","ECXAPHAP",108,0)
 .....I ECXOPT'=1 D
"RTN","ECXAPHAP",109,0)
 ......W ?116,$$RJ^XLFSTR($P(REC,U,8),14)
"RTN","ECXAPHAP",110,0)
 .....I ECXOPT=3&($G(ECXISIG)) D
"RTN","ECXAPHAP",111,0)
 ......W !,?5,"SIG: ",$S($P(REC,U,10)="":"N/A",1:$P(REC,U,10)),! ;136
"RTN","ECXAPHAP",112,0)
 Q:QFLG
"RTN","ECXAPHAP",113,0)
 I COUNT=0 W !!,?8,"No unusual volumes to report for this extract"
"RTN","ECXAPHAP",114,0)
CLOSE ;
"RTN","ECXAPHAP",115,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAPHAP",116,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPHAP",117,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAPHAP",118,0)
 Q
"RTN","ECXAPHAP",119,0)
 ;
"RTN","ECXAPHAP",120,0)
HEADER ;header and page control
"RTN","ECXAPHAP",121,0)
 N SS,JJ
"RTN","ECXAPHAP",122,0)
 I $E(IOST)="C" D
"RTN","ECXAPHAP",123,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPHAP",124,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAPHAP",125,0)
 Q:QFLG
"RTN","ECXAPHAP",126,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAPHAP",127,0)
 W !,ECXTL_" Extract Unusual Volume Report - Previous FY logic",?124,"Page: "_PG
"RTN","ECXAPHAP",128,0)
 W !,"Start Date: ",ECSTART,?97,"Report Run Date/Time:  "_ECRUN
"RTN","ECXAPHAP",129,0)
 W !,"End Date:   ",ECEND,?97,"Threshold Value = ",ECTHLD
"RTN","ECXAPHAP",130,0)
 W !!,"Name",?11,"SSN",?21,"Day",?29,"Generic Name",?71,"Feeder Key"
"RTN","ECXAPHAP",131,0)
 I ECXOPT=1 D
"RTN","ECXAPHAP",132,0)
 .W ?95,"Quantity",?109,"Total Cost",?120,"Days Supply"
"RTN","ECXAPHAP",133,0)
 E  D
"RTN","ECXAPHAP",134,0)
 .I ECXOPT=2 W ?93,"Total Doses",?121,"Total Cost",!,?95,"Per Day"
"RTN","ECXAPHAP",135,0)
 .I ECXOPT'=2 W ?96,"Quantity",?121,"Total Cost"
"RTN","ECXAPHAP",136,0)
 W !,LN,!
"RTN","ECXAPHAP",137,0)
 Q
"RTN","ECXAPHAP",138,0)
 ;
"RTN","ECXAPHAP",139,0)
SIG(ORDNO,PATNO) ;Get ordering instructions for unit dose order.  API added in patch 136
"RTN","ECXAPHAP",140,0)
 N DATA,RECNO,I,SIG
"RTN","ECXAPHAP",141,0)
 S SIG=""
"RTN","ECXAPHAP",142,0)
 I ORDNO=""!(PATNO="") Q SIG
"RTN","ECXAPHAP",143,0)
 S RECNO=ORDNO_","_PATNO_","
"RTN","ECXAPHAP",144,0)
 D GETS^DIQ(55.06,RECNO,"26;120;121","E","DATA")
"RTN","ECXAPHAP",145,0)
 F I=120,121,26 S SIG=$G(SIG)_$S($L(SIG)>0:" ",1:"")_$G(DATA(55.06,RECNO,I,"E"))
"RTN","ECXAPHAP",146,0)
 Q SIG
"RTN","ECXAPHP2")
0^46^B29677445^n/a
"RTN","ECXAPHP2",1,0)
ECXAPHP2 ;ALB/TMD-Pharmacy Extracts Unusual Volumes Report ;3/26/13  16:07
"RTN","ECXAPHP2",2,0)
 ;;3.0;DSS EXTRACTS;**40,49,84,104,105,113,136,143,144**;Dec 22, 1997;Build 9
"RTN","ECXAPHP2",3,0)
 ;
"RTN","ECXAPHP2",4,0)
 ;This routine is new with patch 144 but is a copy of ECXAPHA2 before it
"RTN","ECXAPHP2",5,0)
 ;was changed for the FY update.  This is now the previous fiscal year
"RTN","ECXAPHP2",6,0)
 ;version of the routine
"RTN","ECXAPHP2",7,0)
EN ; entry point
"RTN","ECXAPHP2",8,0)
 N COUNT,ECUNIT,LINE,ECDFN,ECD,ECDRG,ECDAY,ECDFN,ECQTY,ECUNIT,ECCOST,ECDS,ECXCOUNT
"RTN","ECXAPHP2",9,0)
 K ^TMP($J)
"RTN","ECXAPHP2",10,0)
 S (COUNT,ECDS,ECXCOUNT)=0,ECUNIT=""
"RTN","ECXAPHP2",11,0)
 S ECD=ECSD1,ECED=ECED+.3
"RTN","ECXAPHP2",12,0)
 S LINE=$S(ECXOPT=1:"PRE",ECXOPT=2:"IVP",ECXOPT=3:"UDP",1:"EXIT")
"RTN","ECXAPHP2",13,0)
 D @LINE
"RTN","ECXAPHP2",14,0)
 Q
"RTN","ECXAPHP2",15,0)
 ;
"RTN","ECXAPHP2",16,0)
PRE ; entry point for PRE data
"RTN","ECXAPHP2",17,0)
 N ECRFL,ECRX,ECREF,ECDATA,ECDATA1,ECPRC,IEN
"RTN","ECXAPHP2",18,0)
 K ^TMP($J,"ECXDSS")
"RTN","ECXAPHP2",19,0)
 ;call pharmacy api pso52ex
"RTN","ECXAPHP2",20,0)
 D EXTRACT^PSO52EX(ECD,ECED,"ECXDSS")
"RTN","ECXAPHP2",21,0)
 S ECREF="RF"
"RTN","ECXAPHP2",22,0)
 ;order thru fills and refills; refill values 0 thru 11
"RTN","ECXAPHP2",23,0)
 ;     Note:  refill 0 = original fill
"RTN","ECXAPHP2",24,0)
 F  S ECD=$O(^TMP($J,"ECXDSS","AL",ECD)),IEN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S IEN=$O(^TMP($J,"ECXDSS","AL",ECD,IEN)),ECRFL=""  Q:'IEN  Q:ECXERR  F  S ECRFL=$O(^TMP($J,"ECXDSS","AL",ECD,IEN,ECRFL)) Q:ECRFL=""  Q:ECXERR  D PRE2
"RTN","ECXAPHP2",25,0)
 ;
"RTN","ECXAPHP2",26,0)
 ;order thru partial fills
"RTN","ECXAPHP2",27,0)
 S ECD=ECSD1,ECREF="P"
"RTN","ECXAPHP2",28,0)
 F  S ECD=$O(^TMP($J,"ECXDSS","AM",ECD)),IEN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S IEN=$O(^(ECD,IEN)),ECRFL=""  Q:'IEN  Q:ECXERR  F  S ECRFL=$O(^(IEN,ECRFL)) Q:'ECRFL  Q:ECXERR  D PRE2
"RTN","ECXAPHP2",29,0)
 K ^TMP($J,"ECXDSS")
"RTN","ECXAPHP2",30,0)
 Q
"RTN","ECXAPHP2",31,0)
 ;
"RTN","ECXAPHP2",32,0)
PRE2 ; get Prescription data
"RTN","ECXAPHP2",33,0)
 I (ECREF="RF")&(ECRFL) D
"RTN","ECXAPHP2",34,0)
 .S ECQTY=+^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,1)
"RTN","ECXAPHP2",35,0)
 .S ECDS=+^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,1.1)
"RTN","ECXAPHP2",36,0)
 .S ECPRC=^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,1.2)
"RTN","ECXAPHP2",37,0)
 I (ECREF="RF")&('ECRFL) D
"RTN","ECXAPHP2",38,0)
 .S ECQTY=+^TMP($J,"ECXDSS",IEN,7)
"RTN","ECXAPHP2",39,0)
 .S ECDS=+^TMP($J,"ECXDSS",IEN,8)
"RTN","ECXAPHP2",40,0)
 .S ECPRC=+^TMP($J,"ECXDSS",IEN,17)
"RTN","ECXAPHP2",41,0)
 I ECREF="P" D
"RTN","ECXAPHP2",42,0)
 .S ECQTY=+^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,.04)
"RTN","ECXAPHP2",43,0)
 .S ECDS=+^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,.041)
"RTN","ECXAPHP2",44,0)
 .S ECPRC=+^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,.042)
"RTN","ECXAPHP2",45,0)
 ;check to see if quantity>threshold
"RTN","ECXAPHP2",46,0)
 I ECQTY>ECTHLD D
"RTN","ECXAPHP2",47,0)
 .S ECDAY=ECD
"RTN","ECXAPHP2",48,0)
 .S ECDFN=$P(^TMP($J,"ECXDSS",IEN,2),U)
"RTN","ECXAPHP2",49,0)
 .S ECDRG=+$P(^TMP($J,"ECXDSS",IEN,6),U)
"RTN","ECXAPHP2",50,0)
 .S ECCOST=ECQTY*ECPRC
"RTN","ECXAPHP2",51,0)
 .D FILE Q:ECXERR
"RTN","ECXAPHP2",52,0)
 Q
"RTN","ECXAPHP2",53,0)
 ;
"RTN","ECXAPHP2",54,0)
IVP ; entry point for IVP Data
"RTN","ECXAPHP2",55,0)
 N DFN,ON,DA,SA,ECCOUNT ;143
"RTN","ECXAPHP2",56,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^("S") D  Q:ECXERR
"RTN","ECXAPHP2",57,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  Q:ECXERR  I $D(^ECX(728.113,DA,0)) S EC=^(0) Q:ECXERR  D
"RTN","ECXAPHP2",58,0)
 ..S ECDRG=$P(EC,U,4)
"RTN","ECXAPHP2",59,0)
 ..S SA=$S($P(EC,U,8)]"":"A",$P(EC,U,9):"S",1:"")
"RTN","ECXAPHP2",60,0)
 ..; set up new record for first DA for this drug
"RTN","ECXAPHP2",61,0)
 ..I '$D(^TMP($J,SA,ECDRG)) D
"RTN","ECXAPHP2",62,0)
 ...S ECQTY=+$S(SA="A":+$P(EC,U,7),SA="S":+$P(EC,U,9),1:0)
"RTN","ECXAPHP2",63,0)
 ...S ECUNIT=$S(SA="A":$P(EC,U,8),SA="S":"ML",1:"")
"RTN","ECXAPHP2",64,0)
 ...S ECCOST=$P(EC,U,12),ECDFN=DFN
"RTN","ECXAPHP2",65,0)
 ...S ^TMP($J,SA,ECDRG)=ECUNIT_U_ECD_U_ECDFN_U_ECCOST_U_ECQTY
"RTN","ECXAPHP2",66,0)
 ...S ^(ECDRG,1)=0
"RTN","ECXAPHP2",67,0)
 ..; add to qty (0,1, or -1) to total
"RTN","ECXAPHP2",68,0)
 ..S ^TMP($J,SA,ECDRG,1)=^TMP($J,SA,ECDRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXAPHP2",69,0)
 .; looped thru all DAs for this order - now check for unusual volumes
"RTN","ECXAPHP2",70,0)
 .F SA="S","A" S ECDRG="" F  S ECDRG=$O(^TMP($J,SA,ECDRG)) Q:ECDRG=""  Q:ECXERR  D
"RTN","ECXAPHP2",71,0)
 ..S ECQTY=$P(^TMP($J,SA,ECDRG),U,5),ECCOUNT=^(ECDRG,1)
"RTN","ECXAPHP2",72,0)
 ..S ECQTY=ECQTY*ECCOUNT
"RTN","ECXAPHP2",73,0)
 ..; check to see if quantity is outside of threshold range
"RTN","ECXAPHP2",74,0)
 ..I (ECQTY>ECTHLD)!(ECQTY<-ECTHLD) D
"RTN","ECXAPHP2",75,0)
 ...S ECUNIT=$P(^TMP($J,SA,ECDRG),U)
"RTN","ECXAPHP2",76,0)
 ...S ECDAY=$P(^(ECDRG),U,2)
"RTN","ECXAPHP2",77,0)
 ...S ECDFN=$P(^(ECDRG),U,3)
"RTN","ECXAPHP2",78,0)
 ...; New Cost calculation ** 136
"RTN","ECXAPHP2",79,0)
 ...; Removed avg cost search from 136 use existing avgcost and quantity vs count  ** 143
"RTN","ECXAPHP2",80,0)
 ...S ECCOST=$P(^(ECDRG),U,4)*ECQTY
"RTN","ECXAPHP2",81,0)
 ...D FILE Q:ECXERR
"RTN","ECXAPHP2",82,0)
 K ^TMP($J,"A"),^("S")
"RTN","ECXAPHP2",83,0)
 Q
"RTN","ECXAPHP2",84,0)
 ;
"RTN","ECXAPHP2",85,0)
UDP ; entry point for UDP data
"RTN","ECXAPHP2",86,0)
 N ECXJ,ECDATA,ECORD ;136
"RTN","ECXAPHP2",87,0)
 F  S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:ECXERR  D
"RTN","ECXAPHP2",88,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:ECXERR  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXAPHP2",89,0)
 ..S DATA=^ECX(728.904,ECXJ,0),ECQTY=$P(DATA,U,5)
"RTN","ECXAPHP2",90,0)
 ..;check to see if quantity>threshold
"RTN","ECXAPHP2",91,0)
 ..I ECQTY>ECTHLD D
"RTN","ECXAPHP2",92,0)
 ...S ECDFN=$P(DATA,U,2),ECDRG=$P(DATA,U,4),ECCOST=$P(DATA,U,8),ECDAY=ECD,ECORD=$P(DATA,U,10) ;136
"RTN","ECXAPHP2",93,0)
 ...D FILE Q:ECXERR
"RTN","ECXAPHP2",94,0)
 Q
"RTN","ECXAPHP2",95,0)
 ;
"RTN","ECXAPHP2",96,0)
FILE ; put records in temp file to print later
"RTN","ECXAPHP2",97,0)
 N OK,ECXPAT,ECNAME,ECSSN,ECGNAME,ECNDC,ECPROD,ECFKEY,ECXPHA
"RTN","ECXAPHP2",98,0)
 ; get demographics
"RTN","ECXAPHP2",99,0)
 S OK=$$PAT^ECXUTL3(ECDFN,$P(ECD,"."),"1;",.ECXPAT)
"RTN","ECXAPHP2",100,0)
 I 'OK Q
"RTN","ECXAPHP2",101,0)
 S ECNAME=ECXPAT("NAME")
"RTN","ECXAPHP2",102,0)
 S ECSSN=ECXPAT("SSN")
"RTN","ECXAPHP2",103,0)
 S ECDAY=$E(ECDAY,4,5)_"/"_$E(ECDAY,6,7)
"RTN","ECXAPHP2",104,0)
 ; get drug file data
"RTN","ECXAPHP2",105,0)
 S ECXPHA="",ECXPHA=$$PHAAPI^ECXUTL5(ECDRG)
"RTN","ECXAPHP2",106,0)
 S ECGNAME=$P(ECXPHA,U)
"RTN","ECXAPHP2",107,0)
 S ECNDC=$P(ECXPHA,U,3)
"RTN","ECXAPHP2",108,0)
 S ECNDC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0)
"RTN","ECXAPHP2",109,0)
 S ECNDC=$TR(ECNDC,"*",0)
"RTN","ECXAPHP2",110,0)
 S ECPROD=$P(ECXPHA,U,6)
"RTN","ECXAPHP2",111,0)
 S ECPROD=$$RJ^XLFSTR(ECPROD,5,0)
"RTN","ECXAPHP2",112,0)
 S ECFKEY=ECPROD_ECNDC
"RTN","ECXAPHP2",113,0)
 I ECXOPT'=2 S ECUNIT=$P(ECXPHA,U,8)
"RTN","ECXAPHP2",114,0)
 ; file 
"RTN","ECXAPHP2",115,0)
 S ^TMP($J,ECFKEY,-ECQTY,ECDAY,ECXCOUNT,ECSSN)=ECNAME_U_ECSSN_U_ECDAY_U_ECGNAME_U_ECFKEY_U_ECQTY_U_ECUNIT_U_"$"_$FNUMBER(ECCOST,",",4)_U_ECDS
"RTN","ECXAPHP2",116,0)
 I $G(ECXOPT)=3 S $P(^TMP($J,ECFKEY,-ECQTY,ECDAY,ECXCOUNT,ECSSN),U,10)=$$SIG^ECXAPHAP(ECORD,ECDFN) ;136 Get SIG data if UDP report
"RTN","ECXAPHP2",117,0)
 S COUNT=COUNT+1
"RTN","ECXAPHP2",118,0)
 S ECXCOUNT=ECXCOUNT+1
"RTN","ECXAPHP2",119,0)
 I COUNT#100=0 I $$S^ZTLOAD S (ZTSTOP,ECXERR)=1 ;136 Update ZTSTOP var to be spelled correctly
"RTN","ECXAPHP2",120,0)
 Q
"RTN","ECXAPHP2",121,0)
 ;
"RTN","ECXAPHP2",122,0)
EXIT S ECXERR=1 Q
"RTN","ECXAPRO")
0^14^B58811063^B50281259
"RTN","ECXAPRO",1,0)
ECXAPRO ;ALB/JAP - PRO Extract Audit Report ;3/12/13  16:30
"RTN","ECXAPRO",2,0)
 ;;3.0;DSS EXTRACTS;**9,21,33,36,132,137,144**;Dec 22, 1997;Build 9
"RTN","ECXAPRO",3,0)
 ;
"RTN","ECXAPRO",4,0)
EN ;entry point for PRO extract audit report
"RTN","ECXAPRO",5,0)
 N %X,%Y,DIV,X,Y,DIC,DA,DR,DIQ,DIR,DIRUT,DTOUT,DUOUT,CNT,ECXPORT ;144
"RTN","ECXAPRO",6,0)
 S ECXERR=0
"RTN","ECXAPRO",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXAPRO",8,0)
 S ECXHEAD="PRO",ECXAUD=0
"RTN","ECXAPRO",9,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXAPRO",10,0)
 ;determine primary division
"RTN","ECXAPRO",11,0)
 S ECXPRIME=$$PDIV^ECXPUTL
"RTN","ECXAPRO",12,0)
 I ECXPRIME=0 D ^ECXKILL Q
"RTN","ECXAPRO",13,0)
 S DA=ECXPRIME,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99" D EN^DIQ1
"RTN","ECXAPRO",14,0)
 S ECXPRIME=ECXPRIME_U_$G(ECXDIC(4,DA,99,"I"))_U_$G(ECXDIC(4,DA,.01,"I"))
"RTN","ECXAPRO",15,0)
 ;select 1 or more prosthetics divisions for report
"RTN","ECXAPRO",16,0)
 D PRO^ECXDVSN2(DUZ,ECXPRIME,.ECXDIV,.ECXALL,.ECXERR)
"RTN","ECXAPRO",17,0)
 I ECXERR D  Q
"RTN","ECXAPRO",18,0)
 .D ^ECXKILL W !!,?5,"Try again later... exiting.",!
"RTN","ECXAPRO",19,0)
 ;select extract
"RTN","ECXAPRO",20,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXAPRO",21,0)
 I ECXERR=1 D  Q
"RTN","ECXAPRO",22,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAPRO",23,0)
 .D AUDIT^ECXKILL
"RTN","ECXAPRO",24,0)
 ;if user's selected division doesn't match extract's division, then quit
"RTN","ECXAPRO",25,0)
 I +ECXPRIME'=ECXARRAY("DIV") D  Q
"RTN","ECXAPRO",26,0)
 .S DIV=+ECXARRAY("DIV") S:$D(^DIC(4,DIV,0)) DIV=$P(^(0),U,1)
"RTN","ECXAPRO",27,0)
 .W !!,?5,"Your primary division ("_$P(ECXPRIME,U,3)_") does not match the"
"RTN","ECXAPRO",28,0)
 .W !,?5,"division ("_DIV_") associated with Extract #"_ECXARRAY("EXTRACT")_"."
"RTN","ECXAPRO",29,0)
 .W !!,?5,"Try again... exiting.",!
"RTN","ECXAPRO",30,0)
 .I $E(IOST)="C" D
"RTN","ECXAPRO",31,0)
 ..S SS=20-$Y F JJ=1:1:SS W !
"RTN","ECXAPRO",32,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAPRO",33,0)
 ..W @IOF
"RTN","ECXAPRO",34,0)
 ;select summary or detail
"RTN","ECXAPRO",35,0)
 K DIR S DIR(0)="S^D:DETAIL;S:SUMMARY",DIR("A")="Type of Report",DIR("B")="SUMMARY"
"RTN","ECXAPRO",36,0)
 D ^DIR K DIR
"RTN","ECXAPRO",37,0)
 I $D(DIRUT)!($D(DTOUT)) D  Q
"RTN","ECXAPRO",38,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAPRO",39,0)
 .D AUDIT^ECXKILL
"RTN","ECXAPRO",40,0)
 S ECXREPT=Y
"RTN","ECXAPRO",41,0)
 ;continue with detail report
"RTN","ECXAPRO",42,0)
 I ECXREPT="D" D  I $G(ECXPORT) Q  ;144 Stop processing if doing a detailed listing
"RTN","ECXAPRO",43,0)
 .F  D ASK2^ECXAPRO2 Q:$D(DIRUT)!($D(DTOUT))
"RTN","ECXAPRO",44,0)
 ;continue with summary report
"RTN","ECXAPRO",45,0)
 I ECXREPT="S" D
"RTN","ECXAPRO",46,0)
 .S ECXPGM="TASK^ECXAPRO",ECXDESC="PRO Extract Audit Report"
"RTN","ECXAPRO",47,0)
 .S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")="",ECXSAVE("ECXREPT")="",ECXSAVE("ECXPRIME")="",ECXSAVE("ECXALL")=""
"RTN","ECXAPRO",48,0)
 .S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXAPRO",49,0)
 ..K ^TMP($J) ;144
"RTN","ECXAPRO",50,0)
 ..S ^TMP($J,"ECXPORT",0)="STATION #^EXTRACT LOG #^TYPE^NPPD GROUP^NPPD LINE^VA^COM^TOTAL^COST^AVE COM" ;144
"RTN","ECXAPRO",51,0)
 ..S CNT=1 ;144
"RTN","ECXAPRO",52,0)
 ..D PROCESS ;144
"RTN","ECXAPRO",53,0)
 ..D DISP^ECXAPRO1 ;144
"RTN","ECXAPRO",54,0)
 ..D EXPDISP^ECXUTL1 ;144
"RTN","ECXAPRO",55,0)
 ..D ASK^ECXAPRO2 ;144
"RTN","ECXAPRO",56,0)
 ..D ^ECXKILL ;144
"RTN","ECXAPRO",57,0)
 .W !
"RTN","ECXAPRO",58,0)
 .;determine output device and queue if requested
"RTN","ECXAPRO",59,0)
 .D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE) I ECXSAVE("POP")=1 D  Q
"RTN","ECXAPRO",60,0)
 ..W !!,?5,"Try again later... exiting.",!
"RTN","ECXAPRO",61,0)
 ..D AUDIT^ECXKILL
"RTN","ECXAPRO",62,0)
 .I ECXSAVE("ZTSK")=0 D
"RTN","ECXAPRO",63,0)
 ..K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAPRO",64,0)
 ..D PROCESS,DISP^ECXAPRO1
"RTN","ECXAPRO",65,0)
 ..;allow user to get details
"RTN","ECXAPRO",66,0)
 ..D ASK^ECXAPRO2
"RTN","ECXAPRO",67,0)
 ;clean-up and close
"RTN","ECXAPRO",68,0)
 I $G(ECXPORT) Q  ;144 Stop processing if exporting
"RTN","ECXAPRO",69,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAPRO",70,0)
 D HOME^%ZIS
"RTN","ECXAPRO",71,0)
 D AUDIT^ECXKILL
"RTN","ECXAPRO",72,0)
 Q
"RTN","ECXAPRO",73,0)
 ;
"RTN","ECXAPRO",74,0)
TASK ;entry point from taskmanager
"RTN","ECXAPRO",75,0)
 D PROCESS
"RTN","ECXAPRO",76,0)
 I ECXREPT="S" D DISP^ECXAPRO1
"RTN","ECXAPRO",77,0)
 I ECXREPT="D" D DISP^ECXAPRO2
"RTN","ECXAPRO",78,0)
 D AUDIT^ECXKILL
"RTN","ECXAPRO",79,0)
 Q
"RTN","ECXAPRO",80,0)
 ;
"RTN","ECXAPRO",81,0)
PROCESS ;process the data in file #727.826
"RTN","ECXAPRO",82,0)
 N J,CODE,COST,CPTNM,DATE,DESC,FLG,GN,IEN,KEY,LOC,LABLC,LABMC,NODE,PTNAM,PSASNM,QTY,QFLG,QQFLG,RD,SSN,STN,SRCE,TYPE,NPPDED ;144 NPPD ENT DATE CVW DAN removed CNT
"RTN","ECXAPRO",83,0)
 I '$G(ECXPORT) K ^TMP($J) ;144 Killed already if exporting
"RTN","ECXAPRO",84,0)
 S QQFLG=0 ;144 CNT removed as no longer needed
"RTN","ECXAPRO",85,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXAPRO",86,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAPRO",87,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXAPRO",88,0)
 I ECXALL=0 S J=$O(ECXDIV(99),-1),ECXDIV=ECXDIV(J)
"RTN","ECXAPRO",89,0)
 I ECXALL=1 S ECXDIV=ECXPRIME
"RTN","ECXAPRO",90,0)
 S STN=$P(ECXDIV,U,2)
"RTN","ECXAPRO",91,0)
 ;initialize the prosthetics tmp global for cumulative data
"RTN","ECXAPRO",92,0)
 D CODE^ECXAPRO1
"RTN","ECXAPRO",93,0)
 ;gather extract data and sort by grouper number, calc flag, and nppd code
"RTN","ECXAPRO",94,0)
 S IEN="" F  S IEN=$O(^ECX(727.826,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXAPRO",95,0)
 .S ECXPRO=^ECX(727.826,IEN,0)
"RTN","ECXAPRO",96,0)
 .;
"RTN","ECXAPRO",97,0)
 .;- Remove trailing "^" from ECXPRO if there
"RTN","ECXAPRO",98,0)
 .I $E(ECXPRO,$L(ECXPRO))="^" S ECXPRO=$E(ECXPRO,1,$L(ECXPRO)-1)
"RTN","ECXAPRO",99,0)
 .S ECXPRO=ECXPRO_U_$P(^ECX(727.826,IEN,1),U,4)_U_$P(^ECX(727.826,IEN,2),U,4) ;NPPD ENTRY DATE 144 CVW
"RTN","ECXAPRO",100,0)
 .S DATE=$P(ECXPRO,U,9)
"RTN","ECXAPRO",101,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXAPRO",102,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXAPRO",103,0)
 .S DATE=$E(DATE,4,5)_"/"_$E(DATE,6,7)
"RTN","ECXAPRO",104,0)
 .S PTNAM=$P(ECXPRO,U,7),SSN=$E($P(ECXPRO,U,6),6,9)
"RTN","ECXAPRO",105,0)
 .S LOC=$P(ECXPRO,U,10),KEY=$P(ECXPRO,U,11),QTY=$P(ECXPRO,U,12)
"RTN","ECXAPRO",106,0)
 .S COST=$P(ECXPRO,U,25),LABLC=$P(ECXPRO,U,26),LABMC=$P(ECXPRO,U,27)
"RTN","ECXAPRO",107,0)
 .S GN=$P(ECXPRO,U,34),GN=$S(GN="":" ",1:GN),NPPDED=$P(ECXPRO,U,35) ;NPPD ENTRY DATE 144 CVW
"RTN","ECXAPRO",108,0)
 .;don't double count lab items
"RTN","ECXAPRO",109,0)
 .Q:LOC["LAB"
"RTN","ECXAPRO",110,0)
 .;duplicate the logic in sort^rmprn6 that sets cost=0 if form=4
"RTN","ECXAPRO",111,0)
 .I LOC["ORD" S COST=0
"RTN","ECXAPRO",112,0)
 .S LOC=$S(LOC["ORD":$P(LOC,"ORD",1),LOC["HO2":$P(LOC,"HO2",1),1:$P(LOC,"NONL",1)) ;137
"RTN","ECXAPRO",113,0)
 .;quit if feeder location isn't for division selected for report
"RTN","ECXAPRO",114,0)
 .I ECXALL=1,LOC'[STN Q
"RTN","ECXAPRO",115,0)
 .I ECXALL=0,LOC'=STN Q
"RTN","ECXAPRO",116,0)
 .S TYPE=$E(KEY,6),SRCE=$E(KEY,7)
"RTN","ECXAPRO",117,0)
 .S CPTNM=$P(ECXPRO,U,15),PSASNM=$P(ECXPRO,U,33)
"RTN","ECXAPRO",118,0)
 .D GETCODE(PSASNM,.NODE)
"RTN","ECXAPRO",119,0)
 .Q:NODE=""
"RTN","ECXAPRO",120,0)
 .S CODE=$S(TYPE="X":$P(NODE,U,3),1:$P(NODE,U,4))
"RTN","ECXAPRO",121,0)
 .S FLG=$P(NODE,U,2),DESC=$P(NODE,U,5)
"RTN","ECXAPRO",122,0)
 .S ^TMP($J,"RMPRGN",STN,GN,FLG,CODE,IEN)=TYPE_U_SRCE_U_QTY_U_COST_U_LABLC_U_LABMC_U_PSASNM_U_DESC_U_PTNAM_U_SSN_U_DATE_U_LOC_U_NPPDED ;144 CVW
"RTN","ECXAPRO",123,0)
 ;accumulate summary & detail data
"RTN","ECXAPRO",124,0)
 S GN=""
"RTN","ECXAPRO",125,0)
 F  S GN=$O(^TMP($J,"RMPRGN",STN,GN)) Q:GN=""  D
"RTN","ECXAPRO",126,0)
 .S FLG=0
"RTN","ECXAPRO",127,0)
 .F  S FLG=$O(^TMP($J,"RMPRGN",STN,GN,FLG)) Q:FLG'>0  D
"RTN","ECXAPRO",128,0)
 ..I FLG=1 D GROUP S FLG=2 Q
"RTN","ECXAPRO",129,0)
 ..S CODE=0
"RTN","ECXAPRO",130,0)
 ..F  S CODE=$O(^TMP($J,"RMPRGN",STN,GN,FLG,CODE)) Q:CODE=""  D
"RTN","ECXAPRO",131,0)
 ...S RD=0
"RTN","ECXAPRO",132,0)
 ...F  S RD=$O(^TMP($J,"RMPRGN",STN,GN,FLG,CODE,RD)) Q:RD'>0  D
"RTN","ECXAPRO",133,0)
 ....S TYPE=$P(^TMP($J,"RMPRGN",STN,GN,FLG,CODE,RD),U,1),SRCE=$P(^(RD),U,2),QTY=$P(^(RD),U,3),COST=$P(^(RD),U,4)
"RTN","ECXAPRO",134,0)
 ....S ^TMP($J,CODE,RD)=^TMP($J,"RMPRGN",STN,GN,FLG,CODE,RD)
"RTN","ECXAPRO",135,0)
 ....I TYPE="X" D REP(CODE)
"RTN","ECXAPRO",136,0)
 ....I TYPE="N" D NEW(CODE)
"RTN","ECXAPRO",137,0)
 ....I TYPE="R" D RENT(CODE)
"RTN","ECXAPRO",138,0)
 Q
"RTN","ECXAPRO",139,0)
 ;
"RTN","ECXAPRO",140,0)
GETCODE(PSAS,NODE) ;find the appropriate nppd code using psas hcpcs
"RTN","ECXAPRO",141,0)
 N DIC,X,Y,DESC,FLG,NU,REP
"RTN","ECXAPRO",142,0)
 S NODE=""
"RTN","ECXAPRO",143,0)
 S DIC="^RMPR(661.1,",DIC(0)="XZ",X=PSAS D ^DIC
"RTN","ECXAPRO",144,0)
 I Y=-1 S NODE=U_"2"_U_"R99 Z"_U_"999 Z"_U_"NO HCPCS" Q
"RTN","ECXAPRO",145,0)
 S DESC=$E($P(Y(0),U,2),1,20)
"RTN","ECXAPRO",146,0)
 S FLG=$P(Y(0),U,8) S:FLG="" FLG=2
"RTN","ECXAPRO",147,0)
 ;make sure each code at least 4 characters; group codes are 3 characters in tmp($j,rmprcode)
"RTN","ECXAPRO",148,0)
 S REP=$P(Y(0),U,6) S:$L(REP)=3 REP=REP_" " S:REP="" REP="R99 X"
"RTN","ECXAPRO",149,0)
 S NU=$P(Y(0),U,7) S:$L(NU)=3 NU=NU_" " S:NU="" NU="999 X"
"RTN","ECXAPRO",150,0)
 S NODE=U_FLG_U_REP_U_NU_U_DESC
"RTN","ECXAPRO",151,0)
 Q
"RTN","ECXAPRO",152,0)
 ;
"RTN","ECXAPRO",153,0)
GROUP ;total grouper to main key
"RTN","ECXAPRO",154,0)
 N BF,BL,BR,BCOST,BTCOST,COST,QTY,TYPE,SRCE
"RTN","ECXAPRO",155,0)
 S BF=0,BTCOST=0
"RTN","ECXAPRO",156,0)
 F  S BF=$O(^TMP($J,"RMPRGN",STN,GN,BF)) Q:BF'>0  D
"RTN","ECXAPRO",157,0)
 .S BL=0
"RTN","ECXAPRO",158,0)
 .F  S BL=$O(^TMP($J,"RMPRGN",STN,GN,BF,BL)) Q:BL=""  D
"RTN","ECXAPRO",159,0)
 ..S BR=0
"RTN","ECXAPRO",160,0)
 ..F  S BR=$O(^TMP($J,"RMPRGN",STN,GN,BF,BL,BR)) Q:BR'>0  D
"RTN","ECXAPRO",161,0)
 ...S BCOST=$P(^TMP($J,"RMPRGN",STN,GN,BF,BL,BR),U,4)
"RTN","ECXAPRO",162,0)
 ...S BTCOST=BTCOST+BCOST
"RTN","ECXAPRO",163,0)
 S BL=$O(^TMP($J,"RMPRGN",STN,GN,1,"")),BR=$O(^TMP($J,"RMPRGN",STN,GN,1,BL,""))
"RTN","ECXAPRO",164,0)
 ;calculate based on primary
"RTN","ECXAPRO",165,0)
 S TYPE=$P(^TMP($J,"RMPRGN",STN,GN,1,BL,BR),U,1),SRCE=$P(^(BR),U,2),QTY=$P(^(BR),U,3)
"RTN","ECXAPRO",166,0)
 S COST=BTCOST
"RTN","ECXAPRO",167,0)
 S ^TMP($J,BL,BR)=^TMP($J,"RMPRGN",STN,GN,1,BL,BR),$P(^TMP($J,BL,BR),U,4)=COST
"RTN","ECXAPRO",168,0)
 I TYPE="X" D REP(BL)
"RTN","ECXAPRO",169,0)
 I TYPE="N" D NEW(BL)
"RTN","ECXAPRO",170,0)
 I TYPE="R" D RENT(BL)
"RTN","ECXAPRO",171,0)
 Q
"RTN","ECXAPRO",172,0)
 ;
"RTN","ECXAPRO",173,0)
REP(C) ;calculate repair cost
"RTN","ECXAPRO",174,0)
 N LINE
"RTN","ECXAPRO",175,0)
 S LINE=C
"RTN","ECXAPRO",176,0)
 I LINE="R90 A" S SRCE="C",QTY=1
"RTN","ECXAPRO",177,0)
 I $G(^TMP($J,"R",STN,LINE))="" S ^TMP($J,"R",STN,LINE)=""
"RTN","ECXAPRO",178,0)
 I SRCE["V" S $P(^TMP($J,"R",STN,LINE),U,1)=$P(^TMP($J,"R",STN,LINE),U,1)+QTY
"RTN","ECXAPRO",179,0)
 I SRCE["C" S $P(^TMP($J,"R",STN,LINE),U,2)=$P(^TMP($J,"R",STN,LINE),U,2)+QTY
"RTN","ECXAPRO",180,0)
 S $P(^TMP($J,"R",STN,LINE),U,3)=$P(^TMP($J,"R",STN,LINE),U,3)+COST
"RTN","ECXAPRO",181,0)
 Q
"RTN","ECXAPRO",182,0)
 ;
"RTN","ECXAPRO",183,0)
NEW(C) ;calculate new costs
"RTN","ECXAPRO",184,0)
 N LINE
"RTN","ECXAPRO",185,0)
 S LINE=C
"RTN","ECXAPRO",186,0)
 I $G(^TMP($J,"N",STN,LINE))="" S ^TMP($J,"N",STN,LINE)=""
"RTN","ECXAPRO",187,0)
 I SRCE["V" S $P(^TMP($J,"N",STN,LINE),U,1)=$P(^TMP($J,"N",STN,LINE),U,1)+QTY
"RTN","ECXAPRO",188,0)
 I SRCE["C" S $P(^TMP($J,"N",STN,LINE),U,2)=$P(^TMP($J,"N",STN,LINE),U,2)+QTY
"RTN","ECXAPRO",189,0)
 S $P(^TMP($J,"N",STN,LINE),U,3)=$P(^TMP($J,"N",STN,LINE),U,3)+COST
"RTN","ECXAPRO",190,0)
 Q
"RTN","ECXAPRO",191,0)
 ;
"RTN","ECXAPRO",192,0)
RENT(C) ;calculate rental costs
"RTN","ECXAPRO",193,0)
 N LINE
"RTN","ECXAPRO",194,0)
 S LINE=C
"RTN","ECXAPRO",195,0)
 I $G(^TMP($J,"RT",STN,LINE))="" S ^TMP($J,"RT",STN,LINE)=""
"RTN","ECXAPRO",196,0)
 I SRCE["V" S $P(^TMP($J,"RT",STN,LINE),U,1)=$P(^TMP($J,"RT",STN,LINE),U,1)+QTY
"RTN","ECXAPRO",197,0)
 I SRCE["C" S $P(^TMP($J,"RT",STN,LINE),U,2)=$P(^TMP($J,"RT",STN,LINE),U,2)+QTY
"RTN","ECXAPRO",198,0)
 S $P(^TMP($J,"RT",STN,LINE),U,3)=$P(^TMP($J,"RT",STN,LINE),U,3)+COST
"RTN","ECXAPRO",199,0)
 Q
"RTN","ECXAPRO1")
0^44^B20521932^B15242720
"RTN","ECXAPRO1",1,0)
ECXAPRO1 ;ALB/JAP - PRO Extract Audit Report (cont) ;3/14/13  14:50
"RTN","ECXAPRO1",2,0)
 ;;3.0;DSS EXTRACTS;**9,21,132,144**;Dec 22, 1997;Build 9
"RTN","ECXAPRO1",3,0)
 ;
"RTN","ECXAPRO1",4,0)
DISP ;entry point
"RTN","ECXAPRO1",5,0)
 N DIC,DA,DR,DIRUT,DTOUT,DUOUT,JJ,SS,LN,PG,QFLG,STN,TYPE
"RTN","ECXAPRO1",6,0)
 N A1,A2,A3,CA,CB,CC,GCA,GCB,GCC,GRP,GRPHEAD,LINE,LINEP
"RTN","ECXAPRO1",7,0)
 U IO
"RTN","ECXAPRO1",8,0)
 S (QFLG,PG)=0,$P(LN,"-",80)=""
"RTN","ECXAPRO1",9,0)
 F TYPE="N","R","RT" S STN="",STN=$O(^TMP($J,TYPE,STN)) D  Q:QFLG
"RTN","ECXAPRO1",10,0)
 .I '$G(ECXPORT) D HEADER ;144
"RTN","ECXAPRO1",11,0)
 .D CDATA Q:QFLG
"RTN","ECXAPRO1",12,0)
 I $G(ECXPORT) Q  ;144 Stop processing if exporting
"RTN","ECXAPRO1",13,0)
 I $E(IOST)'="C" D
"RTN","ECXAPRO1",14,0)
 .W @IOF S PG=PG+1
"RTN","ECXAPRO1",15,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAPRO1",16,0)
 .W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAPRO1",17,0)
 .W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAPRO1",18,0)
 .W !,"Report Run Date/Time:    "_ECXRUN,?68,"Page: ",PG
"RTN","ECXAPRO1",19,0)
 .W !!,LN,!!
"RTN","ECXAPRO1",20,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXAPRO1",21,0)
 .W @IOF
"RTN","ECXAPRO1",22,0)
 I $D(IO(0)) I IO(0)'=IO D ^%ZISC
"RTN","ECXAPRO1",23,0)
 D HOME^%ZIS
"RTN","ECXAPRO1",24,0)
 Q
"RTN","ECXAPRO1",25,0)
 ;
"RTN","ECXAPRO1",26,0)
CDATA ;accummulate data within each nppd group
"RTN","ECXAPRO1",27,0)
 S (LINE,LINEP)=""
"RTN","ECXAPRO1",28,0)
 S (GCA,GCB,GCC)=0
"RTN","ECXAPRO1",29,0)
 S (CA,CB,CC)=0
"RTN","ECXAPRO1",30,0)
 I '$D(^TMP($J,TYPE)) D  Q
"RTN","ECXAPRO1",31,0)
 .I $G(ECXPORT) Q  ;144 Stop processing if exporting
"RTN","ECXAPRO1",32,0)
 .W !,?26,"No data available.",!
"RTN","ECXAPRO1",33,0)
 .I $E(IOST)="C",'QFLG D
"RTN","ECXAPRO1",34,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPRO1",35,0)
 ..S DIR(0)="E" D ^DIR K DIR
"RTN","ECXAPRO1",36,0)
 F  S LINE=$O(^TMP($J,TYPE,STN,LINE)) Q:LINE=""  D  Q:QFLG
"RTN","ECXAPRO1",37,0)
 .S GRP=$E(LINE,1,3) D  Q:QFLG
"RTN","ECXAPRO1",38,0)
 ..I TYPE="R",GRP["R9" S GRP="R90"
"RTN","ECXAPRO1",39,0)
 ..S GRPHEAD=^TMP($J,"RMPRCODE",GRP)
"RTN","ECXAPRO1",40,0)
 ..I LINEP="" D
"RTN","ECXAPRO1",41,0)
 ...I $G(ECXPORT) Q  ;144 Stop processing if exporting
"RTN","ECXAPRO1",42,0)
 ...D:($Y+5>IOSL) HEADER Q:QFLG
"RTN","ECXAPRO1",43,0)
 ...W !,GRPHEAD
"RTN","ECXAPRO1",44,0)
 .I $E(LINE,0,3)'=$E(LINEP,0,3),LINEP'="" D  Q:QFLG
"RTN","ECXAPRO1",45,0)
 ..I $G(ECXPORT) Q  ;144 Stop processing if exporting
"RTN","ECXAPRO1",46,0)
 ..D:($Y+5>IOSL) HEADER Q:QFLG 
"RTN","ECXAPRO1",47,0)
 ..W !,LN,!
"RTN","ECXAPRO1",48,0)
 ..W ?26,$J(CA,5,0),?34,$J(CB,5,0),?42,$J((CA+CB),5,0),?51,$J(CC,7,0),!
"RTN","ECXAPRO1",49,0)
 ..S (CA,CB,CC)=0
"RTN","ECXAPRO1",50,0)
 ..D:($Y+5>IOSL) HEADER Q:QFLG 
"RTN","ECXAPRO1",51,0)
 ..W:LINE'["R99" !,GRPHEAD
"RTN","ECXAPRO1",52,0)
 .I '$G(ECXPORT) D:($Y+3>IOSL) HEADER Q:QFLG   ;144 Don't display if exporting
"RTN","ECXAPRO1",53,0)
 .I '$G(ECXPORT) W !,LINE,?6,$E($P(^TMP($J,TYPE,STN,LINE),U,15),1,15) ;144 Don't display if exporting
"RTN","ECXAPRO1",54,0)
 .S A1=+$P(^TMP($J,TYPE,STN,LINE),U,1),A2=+$P(^(LINE),U,2),A3=+$P(^(LINE),U,3)
"RTN","ECXAPRO1",55,0)
 .I $G(ECXPORT) D  Q  ;144
"RTN","ECXAPRO1",56,0)
 ..S ^TMP($J,"ECXPORT",CNT)=STN_U_ECXEXT_U_$S(TYPE="N":"NEW",TYPE="R":"REPAIR",1:"RENTAL")_U_GRPHEAD_U_LINE_U_A1_U_A2_U_(A1+A2)_U_$FN(A3,"",0)_U_$S(A2>0:$FN(A3/A2,"",0),1:""),CNT=CNT+1 ;144
"RTN","ECXAPRO1",57,0)
 ..S LINEP=LINE ;144
"RTN","ECXAPRO1",58,0)
 .W ?26,$J(A1,5,0) S CA=CA+A1,GCA=GCA+A1
"RTN","ECXAPRO1",59,0)
 .W ?34,$J(A2,5,0) S CB=CB+A2,GCB=GCB+A2
"RTN","ECXAPRO1",60,0)
 .W ?42,$J(A1+A2,5,0)
"RTN","ECXAPRO1",61,0)
 .W ?51,$J(A3,7,0) S CC=CC+A3,GCC=GCC+A3
"RTN","ECXAPRO1",62,0)
 .W:A2>0 ?61,$J(A3/A2,6,0)
"RTN","ECXAPRO1",63,0)
 .S LINEP=LINE
"RTN","ECXAPRO1",64,0)
 I $G(ECXPORT) Q  ;144 Stop processing if exporting
"RTN","ECXAPRO1",65,0)
 Q:QFLG
"RTN","ECXAPRO1",66,0)
 D SUM
"RTN","ECXAPRO1",67,0)
 Q
"RTN","ECXAPRO1",68,0)
 ;
"RTN","ECXAPRO1",69,0)
SUM ;print summary for type
"RTN","ECXAPRO1",70,0)
 D:($Y+7>IOSL) HEADER Q:QFLG 
"RTN","ECXAPRO1",71,0)
 W:TYPE="N" !!!,"STATION SUMMARY (NEW)"
"RTN","ECXAPRO1",72,0)
 W:TYPE="R" !!!,"STATION SUMMARY (REPAIR)"
"RTN","ECXAPRO1",73,0)
 W:TYPE="RT" !!!,"STATION SUMMARY (RENTAL)"
"RTN","ECXAPRO1",74,0)
 W !,?28,"VA",?36,"Com",?44,"Total",?54,"Cost ($)"
"RTN","ECXAPRO1",75,0)
 W !,LN
"RTN","ECXAPRO1",76,0)
 W !,?26,$J(GCA,5,0),?34,$J(GCB,5,0),?42,$J((GCA+GCB),5,0),?51,$J(GCC,7,0)
"RTN","ECXAPRO1",77,0)
 W !,LN
"RTN","ECXAPRO1",78,0)
 Q
"RTN","ECXAPRO1",79,0)
 ;
"RTN","ECXAPRO1",80,0)
HEADER ;header and page control
"RTN","ECXAPRO1",81,0)
 I $E(IOST)="C" D
"RTN","ECXAPRO1",82,0)
 .S SS=20-$Y F JJ=1:1:SS W !
"RTN","ECXAPRO1",83,0)
 .I PG>0 S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAPRO1",84,0)
 Q:QFLG
"RTN","ECXAPRO1",85,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAPRO1",86,0)
 W ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report",?64,"Page "_PG
"RTN","ECXAPRO1",87,0)
 W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAPRO1",88,0)
 W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAPRO1",89,0)
 W !,"Station (#):             "_$P(ECXDIV,U,2)_" ("_$P(ECXDIV,U,3)_")"
"RTN","ECXAPRO1",90,0)
 W !,"Report Run Date/Time:    "_ECXRUN
"RTN","ECXAPRO1",91,0)
 W:TYPE="N" !!,"REPORT OF NEW PROSTHETICS ACTIVITIES"
"RTN","ECXAPRO1",92,0)
 W:TYPE="RT" !!,"REPORT OF RENTAL PROSTHETICS ACTIVITIES"
"RTN","ECXAPRO1",93,0)
 W:TYPE="R" !!,"REPORT OF REPAIR PROSTHETICS ACTIVITIES"
"RTN","ECXAPRO1",94,0)
 W !,"Line",?6,"Item",?28,"VA",?36,"Com",?44,"Total",?54,"Cost ($)",?64,"Ave Com ($)"
"RTN","ECXAPRO1",95,0)
 W !,LN,!
"RTN","ECXAPRO1",96,0)
 Q
"RTN","ECXAPRO1",97,0)
 ;
"RTN","ECXAPRO1",98,0)
CODE ;setup nppd codes
"RTN","ECXAPRO1",99,0)
 ;intended to duplicate code^rmprn63
"RTN","ECXAPRO1",100,0)
 N NULINE
"RTN","ECXAPRO1",101,0)
 F I=1:1 S NULINE=$P($T(TEXT+I^ECXAPRO3),";;",2) Q:NULINE["QUIT"  D
"RTN","ECXAPRO1",102,0)
 .I $L($P(NULINE,";",1))>3,STN]"" D
"RTN","ECXAPRO1",103,0)
 ..I $E(NULINE,0,1)'="R" S:$D(^TMP($J,"N",STN,$P(NULINE,";",1))) $P(^TMP($J,"N",STN,$P(NULINE,";",1)),U,15)=$P(NULINE,";",2)
"RTN","ECXAPRO1",104,0)
 ..I $E(NULINE,0,1)="R" S:$D(^TMP($J,"R",STN,$P(NULINE,";",1))) $P(^TMP($J,"R",STN,$P(NULINE,";",1)),U,15)=$P(NULINE,";",2)
"RTN","ECXAPRO1",105,0)
 .S ^TMP($J,"RMPRCODE",$P(NULINE,";",1))=$P(NULINE,";",2)
"RTN","ECXAPRO1",106,0)
 Q
"RTN","ECXAPRO2")
0^15^B27501495^B19164691
"RTN","ECXAPRO2",1,0)
ECXAPRO2 ;ALB/JAP - PRO Extract Audit Report (cont) ;3/14/13  14:44
"RTN","ECXAPRO2",2,0)
 ;;3.0;DSS EXTRACTS;**9,21,39,144**;Dec 22, 1997;Build 9
"RTN","ECXAPRO2",3,0)
 ;
"RTN","ECXAPRO2",4,0)
ASK ;further detail needed?
"RTN","ECXAPRO2",5,0)
 K X,Y
"RTN","ECXAPRO2",6,0)
 W !
"RTN","ECXAPRO2",7,0)
 S DIR(0)="Y",DIR("A")="Do you want to see details on this audit report",DIR("B")="NO"
"RTN","ECXAPRO2",8,0)
 D ^DIR K DIR
"RTN","ECXAPRO2",9,0)
 Q:($G(Y)=0)!$D(DUOUT)!($D(DTOUT))
"RTN","ECXAPRO2",10,0)
 ;allow user to expand as many lines as needed
"RTN","ECXAPRO2",11,0)
 F  D ASK2 Q:$D(DUOUT)!($D(DTOUT))
"RTN","ECXAPRO2",12,0)
 Q
"RTN","ECXAPRO2",13,0)
 ;
"RTN","ECXAPRO2",14,0)
ASK2 ;select nppd group to be expanded
"RTN","ECXAPRO2",15,0)
 D CODE
"RTN","ECXAPRO2",16,0)
 W @IOF,!
"RTN","ECXAPRO2",17,0)
 W !,?5,"1.   WHEELCHAIRS AND ACCESSORIES"
"RTN","ECXAPRO2",18,0)
 W !,?5,"2.   ARTIFICAL LEGS"
"RTN","ECXAPRO2",19,0)
 W !,?5,"3.   ARTIFICAL ARMS AND TERMINAL DEVICES"
"RTN","ECXAPRO2",20,0)
 W !,?5,"4.   BRACES AND ORTHOTICS"
"RTN","ECXAPRO2",21,0)
 W !,?5,"5.   SHOES/ORTHOTICS"
"RTN","ECXAPRO2",22,0)
 W !,?5,"6.   NEUROSENSORY AIDS"
"RTN","ECXAPRO2",23,0)
 W !,?5,"7.   RESTORATIONS"
"RTN","ECXAPRO2",24,0)
 W !,?5,"8.   OXYGEN AND RESPIRATIORY"
"RTN","ECXAPRO2",25,0)
 W !,?5,"9.   MEDICAL EQUIPMENT, MISC., ALL OTHER NEW"
"RTN","ECXAPRO2",26,0)
 W !,?5,"10.  REPAIR",!!
"RTN","ECXAPRO2",27,0)
 S DIR(0)="N^1:10:0"
"RTN","ECXAPRO2",28,0)
 S DIR("A")="Select NPPD Group "
"RTN","ECXAPRO2",29,0)
 D ^DIR K DIR
"RTN","ECXAPRO2",30,0)
 Q:$D(DUOUT)!($D(DTOUT))
"RTN","ECXAPRO2",31,0)
 D ASK3(Y)
"RTN","ECXAPRO2",32,0)
 Q:$D(DTOUT)
"RTN","ECXAPRO2",33,0)
 K DIRUT,DTOUT,DUOUT
"RTN","ECXAPRO2",34,0)
 G ASK2
"RTN","ECXAPRO2",35,0)
 Q
"RTN","ECXAPRO2",36,0)
 ;
"RTN","ECXAPRO2",37,0)
ASK3(ECXY) ;select nppd line item
"RTN","ECXAPRO2",38,0)
 N BR,BRC,CODE,CNT,ECXPORT ;144
"RTN","ECXAPRO2",39,0)
 S BR=0,BRC=0 K CODE W @IOF
"RTN","ECXAPRO2",40,0)
 F  S BR=$O(^TMP($J,"RMPRCODE",BR)) Q:BR=""  I $L(BR)>3 D
"RTN","ECXAPRO2",41,0)
 .I $E(BR,1,1)=ECXY S BRC=BRC+1 W !?5,BRC_".",?10,BR,?18,^TMP($J,"RMPRCODE",BR) S CODE(BRC,BR)=""
"RTN","ECXAPRO2",42,0)
 .I ($E(BR,1,1)="R")&(ECXY=10) S BRC=BRC+1 W !?5,BRC_".",?10,BR,?18,^TMP($J,"RMPRCODE",BR) S CODE(BRC,BR)=""
"RTN","ECXAPRO2",43,0)
 W !
"RTN","ECXAPRO2",44,0)
 S DIR(0)="N^1:"_BRC_":0"
"RTN","ECXAPRO2",45,0)
 S DIR("A")="Select NPPD Line "
"RTN","ECXAPRO2",46,0)
 D ^DIR K DIR
"RTN","ECXAPRO2",47,0)
 Q:$D(DUOUT)!($D(DTOUT))
"RTN","ECXAPRO2",48,0)
 S ECXCODE="",ECXCODE=$O(CODE(Y,ECXCODE))
"RTN","ECXAPRO2",49,0)
 S ECXPGM="TASK^ECXAPRO",ECXDESC="PRO Extract Audit Detail"
"RTN","ECXAPRO2",50,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")="",ECXSAVE("ECXREPT")="",ECXSAVE("ECXPRIME")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXCODE")=""
"RTN","ECXAPRO2",51,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXAPRO2",52,0)
 .K ^TMP($J) ;144
"RTN","ECXAPRO2",53,0)
 .S ^TMP($J,"ECXPORT",0)="EXTRACT LOG #^NPPD GROUP^NPPD LINE^NAME^SSN^HCPCS^QTY^TYPE^COST^DATE^HCPCS DESC^STATION #^NPPD ENTRY DATE" ;144
"RTN","ECXAPRO2",54,0)
 .S CNT=1 ;144
"RTN","ECXAPRO2",55,0)
 .D PROCESS^ECXAPRO ;144
"RTN","ECXAPRO2",56,0)
 .D DISP ;144
"RTN","ECXAPRO2",57,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXAPRO2",58,0)
 W !
"RTN","ECXAPRO2",59,0)
 ;determine output device and queue if requested
"RTN","ECXAPRO2",60,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE) I ECXSAVE("POP")=1 D  Q
"RTN","ECXAPRO2",61,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAPRO2",62,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXAPRO2",63,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAPRO2",64,0)
 .I '$D(^TMP($J,"RMPRGN")) D PROCESS^ECXAPRO
"RTN","ECXAPRO2",65,0)
 .D DISP
"RTN","ECXAPRO2",66,0)
 I $D(IO(0)) I IO(0)'=IO D ^%ZISC
"RTN","ECXAPRO2",67,0)
 D HOME^%ZIS
"RTN","ECXAPRO2",68,0)
 Q
"RTN","ECXAPRO2",69,0)
 ;
"RTN","ECXAPRO2",70,0)
CODE ;setup nppd codes
"RTN","ECXAPRO2",71,0)
 ;intended to duplicate code^rmprn63
"RTN","ECXAPRO2",72,0)
 N NULINE
"RTN","ECXAPRO2",73,0)
 Q:$D(^TMP($J,"RMPRCODE"))
"RTN","ECXAPRO2",74,0)
 F I=1:1 S NULINE=$P($T(TEXT+I^ECXAPRO3),";;",2) Q:NULINE["QUIT"  D
"RTN","ECXAPRO2",75,0)
 .S ^TMP($J,"RMPRCODE",$P(NULINE,";",1))=$P(NULINE,";",2)
"RTN","ECXAPRO2",76,0)
 Q
"RTN","ECXAPRO2",77,0)
 ;
"RTN","ECXAPRO2",78,0)
DISP ;display all records within nppd code group
"RTN","ECXAPRO2",79,0)
 ;based on desp^rmprn6pl
"RTN","ECXAPRO2",80,0)
 N JJ,SS,LN,PG,COST,DATE,DESC,HCPCS,LOC,PTNAM,QFLG,QTY,RDX,RDXX,SSN,TYPE,DIR,DIRUT,DTOUT,DUOUT,NPPDED ;NPPD ENT DATE CVW 144
"RTN","ECXAPRO2",81,0)
 U IO
"RTN","ECXAPRO2",82,0)
 S (QFLG,PG)=0,$P(LN,"-",81)=""
"RTN","ECXAPRO2",83,0)
 I '$G(ECXPORT) D HEADER ;144
"RTN","ECXAPRO2",84,0)
 I '$D(^TMP($J,ECXCODE)) D  Q
"RTN","ECXAPRO2",85,0)
 .I $G(ECXPORT) Q  ;144 Stop processing if exporting
"RTN","ECXAPRO2",86,0)
 .W !,?14,"No data available.",!
"RTN","ECXAPRO2",87,0)
 .I $E(IOST)="C",'QFLG D
"RTN","ECXAPRO2",88,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPRO2",89,0)
 ..S DIR(0)="E" D ^DIR K DIR
"RTN","ECXAPRO2",90,0)
 S RDX=0
"RTN","ECXAPRO2",91,0)
 F  S RDX=$O(^TMP($J,ECXCODE,RDX)) Q:RDX'>0  Q:QFLG  D
"RTN","ECXAPRO2",92,0)
 .S RDXX=^TMP($J,ECXCODE,RDX)
"RTN","ECXAPRO2",93,0)
 .S PTNAM=$P(RDXX,U,9),SSN=$P(RDXX,U,10)
"RTN","ECXAPRO2",94,0)
 .I '$G(ECXPORT) D:($Y+3>IOSL) HEADER Q:QFLG  ;144 Don't display if exporting
"RTN","ECXAPRO2",95,0)
 .S TYPE=$P(RDXX,U,1),TYPE=$S(TYPE="X":"R",1:"I")_" "_$P(RDXX,U,2)
"RTN","ECXAPRO2",96,0)
 .S QTY=+$P(RDXX,U,3),COST=$P(RDXX,U,4),HCPCS=$P(RDXX,U,7),DESC=$P(RDXX,U,8),DATE=$P(RDXX,U,11),LOC=$P(RDXX,U,12),NPPDED=$P(RDXX,U,13) ;144 CVW
"RTN","ECXAPRO2",97,0)
 .I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=ECXEXT_U_ECXCODE_U_^TMP($J,"RMPRCODE",ECXCODE)_U_PTNAM_U_SSN_U_HCPCS_U_QTY_U_TYPE_U_COST_U_DATE_U_DESC_U_LOC_U_NPPDED,CNT=CNT+1 Q  ;144
"RTN","ECXAPRO2",98,0)
 .W !,PTNAM,?5,SSN,?10,HCPCS,?17,QTY,?26,TYPE,?30,COST,?37,DATE,?43,DESC,?64,LOC,?72,NPPDED ;144 CVW
"RTN","ECXAPRO2",99,0)
 I $G(ECXPORT) Q  ;144 Stop processing if exporting
"RTN","ECXAPRO2",100,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAPRO2",101,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPRO2",102,0)
 .S DIR(0)="E" D ^DIR K DIR
"RTN","ECXAPRO2",103,0)
 Q
"RTN","ECXAPRO2",104,0)
 ;
"RTN","ECXAPRO2",105,0)
HEADER ;header and page control
"RTN","ECXAPRO2",106,0)
 I $E(IOST)="C" D
"RTN","ECXAPRO2",107,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPRO2",108,0)
 .I PG>0 S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAPRO2",109,0)
 Q:QFLG
"RTN","ECXAPRO2",110,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAPRO2",111,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report Detail",?72,"Page ",PG
"RTN","ECXAPRO2",112,0)
 W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAPRO2",113,0)
 W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAPRO2",114,0)
 I ECXALL=1 W !,"Station:                 "_$P(ECXDIV,U,2)_" ("_$P(ECXDIV,U,3)_")"
"RTN","ECXAPRO2",115,0)
 I ECXALL=0 W !,"Division:                "_$P(ECXDIV,U,2)_" ("_$P(ECXDIV,U,3)_")"
"RTN","ECXAPRO2",116,0)
 W !,"Report Run Date/Time:    "_ECXRUN
"RTN","ECXAPRO2",117,0)
 W !,LN,!,ECXCODE," -- ",^TMP($J,"RMPRCODE",ECXCODE),?74,"NPPD"
"RTN","ECXAPRO2",118,0)
 W !,"NAME",?5,"SSN",?10,"HCPCS",?17,"QTY",?26,"TYP",?30,"COST",?37,"DATE",?43,"HCPCS DESC",?64,"STN#",?72,"ENTRY DT"
"RTN","ECXAPRO2",119,0)
 W !,LN,!
"RTN","ECXAPRO2",120,0)
 Q
"RTN","ECXBCM")
0^11^B87281360^B71824253
"RTN","ECXBCM",1,0)
ECXBCM ;ALB/JAP-Bar Code Medical Administration Extract ;5/21/13  11:29
"RTN","ECXBCM",2,0)
 ;;3.0;DSS EXTRACTS;**107,127,132,136,143,144**;Dec 22, 1997 ;Build 9
"RTN","ECXBCM",3,0)
 ;
"RTN","ECXBCM",4,0)
BEG ;entry point from option
"RTN","ECXBCM",5,0)
 ;ECFILE=^ECX(727.833,
"RTN","ECXBCM",6,0)
 D SETUP I ECFILE="" Q
"RTN","ECXBCM",7,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXBCM",8,0)
 Q
"RTN","ECXBCM",9,0)
 ;
"RTN","ECXBCM",10,0)
START ; start package specific extract
"RTN","ECXBCM",11,0)
 ; 
"RTN","ECXBCM",12,0)
 N ECXVAP ;143
"RTN","ECXBCM",13,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXBCM",14,0)
 S PIEN=0
"RTN","ECXBCM",15,0)
 I $G(ECSD)="" S ECSD=DT
"RTN","ECXBCM",16,0)
 ; loop thru and get each new patient, reset the start date to ECSD - begin date from ECXTRAC
"RTN","ECXBCM",17,0)
 F  S PIEN=$O(^PSB(53.79,"AADT",PIEN)) Q:('PIEN)  S IDAT=ECSD D
"RTN","ECXBCM",18,0)
 .F  S IDAT=$O(^PSB(53.79,"AADT",PIEN,IDAT)) Q:'IDAT!(IDAT>ECED)  S RIEN="" D
"RTN","ECXBCM",19,0)
 ..F  S RIEN=$O(^PSB(53.79,"AADT",PIEN,IDAT,RIEN)) Q:'RIEN  D
"RTN","ECXBCM",20,0)
 ...S ECXNOD=^PSB(53.79,RIEN,0) Q:'ECXNOD  S ECXDFN=$P($G(ECXNOD),U) D GET(ECSD,ECED)
"RTN","ECXBCM",21,0)
 Q
"RTN","ECXBCM",22,0)
 ;
"RTN","ECXBCM",23,0)
GET(ECSD,ECED) ;get extract data
"RTN","ECXBCM",24,0)
 N ECXESC,ECXECL,ECXCLST ;144
"RTN","ECXBCM",25,0)
 S (ACTDT,ECXADT,ECXAMED,ECXASTA,ECXATM,ECXORN,ECXORT,ECXOSC,ECPRO,PLACEHLD,ECXFAC,DRG,ECXESC,ECXECL,ECXCLST)="" ;144
"RTN","ECXBCM",26,0)
 ; get needed YYYYDD variable
"RTN","ECXBCM",27,0)
 I $G(ECXYM)="" S ECXYM=$$ECXYM^ECXUTL(DT)
"RTN","ECXBCM",28,0)
 ;Get Facility
"RTN","ECXBCM",29,0)
 I $G(ECXFAC)="" D
"RTN","ECXBCM",30,0)
 .S ECXFAC=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECXFAC,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXBCM",31,0)
 .D EN^DIQ1 S ECXFAC=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXBCM",32,0)
 ;
"RTN","ECXBCM",33,0)
 S ECXORN=$$GET1^DIQ(53.79,RIEN,.11)
"RTN","ECXBCM",34,0)
 ;get inpatient data
"RTN","ECXBCM",35,0)
 S (ECXA,ECXMN,ECXADM,ECXTS,ECXW)=""
"RTN","ECXBCM",36,0)
 S X=$$INP^ECXUTL2(ECXDFN,IDAT)
"RTN","ECXBCM",37,0)
 S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXADM=$P(X,U,4)
"RTN","ECXBCM",38,0)
 S W=$P(X,U,9),ECXDOM=$P(X,U,10),ECXW=$P(W,";")
"RTN","ECXBCM",39,0)
 ; Ordering Stop Code - based on Unit dose or IV
"RTN","ECXBCM",40,0)
 I ECXORN["U" Q:$$CHKUD(ECXDFN,ECSD,ECED)  S:ECXA="O" ECXOSC=$$DOUDO^ECXUTL5(ECXDFN,+ECXORN)
"RTN","ECXBCM",41,0)
 I ECXORN["V" Q:$$CHKIV(ECXDFN,ECSD,ECED)  S:ECXA="O" ECXOSC=$$DOIVPO^ECXUTL5(ECXDFN,+ECXORN)
"RTN","ECXBCM",42,0)
 ;get patient demographics
"RTN","ECXBCM",43,0)
 S ECXERR=0 D PAT(ECXDFN,IDAT,.ECXERR) Q:ECXERR
"RTN","ECXBCM",44,0)
 S ECPRO=$$ORDPROV^ECXUTL(ECXDFN,ECXORN,"")
"RTN","ECXBCM",45,0)
 S ACTDT=$$GET1^DIQ(53.79,RIEN,.06,"I")
"RTN","ECXBCM",46,0)
 I ACTDT'=IDAT Q
"RTN","ECXBCM",47,0)
 S ECXADT=$$ECXDATE^ECXUTL(ACTDT,ECXYM)
"RTN","ECXBCM",48,0)
 S ECXATM=$$ECXTIME^ECXUTL(ACTDT)
"RTN","ECXBCM",49,0)
 S ECXORT=$P($G(^TMP("PSJ",$J,1)),U,3) K ^TMP("PSJ",$J)
"RTN","ECXBCM",50,0)
 S ECPROPC=$P($$GET^XUA4A72(ECPRO,$P(ACTDT,".")),U,7)
"RTN","ECXBCM",51,0)
 N ECXUSRTN
"RTN","ECXBCM",52,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECPRO,$P(ACTDT,"."))
"RTN","ECXBCM",53,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECPRONPI=$P(ECXUSRTN,U)
"RTN","ECXBCM",54,0)
 S ECXASTA=$$GET1^DIQ(53.79,RIEN,.09,"I")
"RTN","ECXBCM",55,0)
 I "^G^S^C^"'[("^"_ECXASTA_"^") Q  ;process 'G'iven,'S'topped,'C'ompleted
"RTN","ECXBCM",56,0)
 S ECXAMED=$$GET1^DIQ(53.79,RIEN,.08,"I")
"RTN","ECXBCM",57,0)
 ;Component code data
"RTN","ECXBCM",58,0)
 D CCODE(RIEN)
"RTN","ECXBCM",59,0)
 Q
"RTN","ECXBCM",60,0)
 ;
"RTN","ECXBCM",61,0)
CMPT ; during component/sequence processing, retrieve rest of data record then file it.
"RTN","ECXBCM",62,0)
 S (ECXSCADT,ECXOS,ECXIVID,ECXIR,SCADT,ECXSCADT,ECXSCATM,DRUG,ECVNDC,ECINV,ECVACL,ECXVAP)="" ;143
"RTN","ECXBCM",63,0)
 I $G(DRG) D
"RTN","ECXBCM",64,0)
 .S DRUG=$$PHAAPI^ECXUTL5(DRG)
"RTN","ECXBCM",65,0)
 .S ECVNDC=$P(DRUG,U,3)
"RTN","ECXBCM",66,0)
 .S ECINV=$P(DRUG,U,4)
"RTN","ECXBCM",67,0)
 .I ECXLOGIC<2014 D
"RTN","ECXBCM",68,0)
 ..S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXBCM",69,0)
 .;New way to calculate cost dea spl hndlg **144
"RTN","ECXBCM",70,0)
 .I ECXLOGIC>2013 D
"RTN","ECXBCM",71,0)
 ..S ECINV=$S((+ECINV>0)&(+ECINV<6):+ECINV,ECINV["I":"I",1:"")
"RTN","ECXBCM",72,0)
 .S ECVACL=$P(DRUG,U,2)
"RTN","ECXBCM",73,0)
 .S ECXVAP=$P(DRUG,U,6) ;143 set ECXVAP to VA PRODUCT IEN
"RTN","ECXBCM",74,0)
 S SCADT=$$GET1^DIQ(53.79,RIEN,.13,"I")
"RTN","ECXBCM",75,0)
 S ECXSCADT=$$ECXDATE^ECXUTL(SCADT,ECXYM)
"RTN","ECXBCM",76,0)
 S ECXSCATM=$$ECXTIME^ECXUTL(SCADT)
"RTN","ECXBCM",77,0)
 S ECXOS=$$GET1^DIQ(53.79,RIEN,.12,"I")
"RTN","ECXBCM",78,0)
 S ECXIVID=$$GET1^DIQ(53.79,RIEN,.26)
"RTN","ECXBCM",79,0)
 S ECXIR=$$GET1^DIQ(53.79,RIEN,.35)
"RTN","ECXBCM",80,0)
 S ECXDIV=$$RADDIV^ECXDEPT($$GET1^DIQ(53.79,RIEN,.03,"I"))
"RTN","ECXBCM",81,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXBCM",82,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,ACTDT,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXBCM",83,0)
 D:ECXENC'="" FILE
"RTN","ECXBCM",84,0)
 Q
"RTN","ECXBCM",85,0)
 ;
"RTN","ECXBCM",86,0)
PAT(ECXDFN,ECXDATE,ECXERR)  ;get patient demographics, primary care, and inpatient data
"RTN","ECXBCM",87,0)
 N X
"RTN","ECXBCM",88,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXBCM",89,0)
 ;get patient data
"RTN","ECXBCM",90,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXBCM",91,0)
 I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXBCM",92,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXBCM",93,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXBCM",94,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXBCM",95,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXBCM",96,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXBCM",97,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXBCM",98,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXBCM",99,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXBCM",100,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXBCM",101,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXBCM",102,0)
 S ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXBCM",103,0)
 S ECXPOS=ECXPAT("POS")
"RTN","ECXBCM",104,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXBCM",105,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXBCM",106,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXBCM",107,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXBCM",108,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXBCM",109,0)
 S ECXPHI=ECXPAT("PHI")
"RTN","ECXBCM",110,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXBCM",111,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXBCM",112,0)
 S ECXMTST=ECXPAT("MEANS")
"RTN","ECXBCM",113,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXBCM",114,0)
 S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune status
"RTN","ECXBCM",115,0)
 S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN) S ECXCNHU=$S(ECXCNHU'="":$E(ECXCNHU,1),1:"") ;get CNHU status
"RTN","ECXBCM",116,0)
 ;get enrollment data (category, status and priority)
"RTN","ECXBCM",117,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXBCM",118,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)                  ; Head and Neck Cancer Indicator
"RTN","ECXBCM",119,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)                 ; PROJ 112/SHAD Indicator
"RTN","ECXBCM",120,0)
 I ECXSHADI="U" S ECXSHADI=""                      ; If Shad comes back as "U" force to null
"RTN","ECXBCM",121,0)
 S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1")  ; Race and Ethnicity
"RTN","ECXBCM",122,0)
 S ECXERI=ECXPAT("ERI")                            ; emergency response indicator (FEMA)
"RTN","ECXBCM",123,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)               ; PATCAT code / patch 127  
"RTN","ECXBCM",124,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXBCM",125,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXBCM",126,0)
 ;
"RTN","ECXBCM",127,0)
 ;get primary care data
"RTN","ECXBCM",128,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXBCM",129,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXBCM",130,0)
 ;get national patient record flag, if it exists
"RTN","ECXBCM",131,0)
 D NPRF^ECXUTL5     ; sets ECXNPRFI
"RTN","ECXBCM",132,0)
 Q
"RTN","ECXBCM",133,0)
 ;
"RTN","ECXBCM",134,0)
CCODE(RIEN) ; get component information
"RTN","ECXBCM",135,0)
 ;  input - IEN of the BCMA MEDICATION LOG File
"RTN","ECXBCM",136,0)
 ; 
"RTN","ECXBCM",137,0)
 ; output - CCIEN: pointer to a variable pointer field to file #50, #52.6, or #52.7
"RTN","ECXBCM",138,0)
 ;          CCDORD: .02 field of file #50, #52.6, or #52.7
"RTN","ECXBCM",139,0)
 ;          CCDGVN: .03 FIELD of file #50, #52.6, or #52.7
"RTN","ECXBCM",140,0)
 ;          CCUNIT: .04 field of file #50, #52.6, or #52.7
"RTN","ECXBCM",141,0)
 ;          CCTYPE: derived field, "D", "A", or "S"
"RTN","ECXBCM",142,0)
 ;
"RTN","ECXBCM",143,0)
 S (CCIEN,CCDORD,CCDGVN,CCUNIT,CCTYPE)=""
"RTN","ECXBCM",144,0)
 F I=.5,.6,.7 D
"RTN","ECXBCM",145,0)
 .I '$O(^PSB(53.79,RIEN,I,0)) Q
"RTN","ECXBCM",146,0)
 .S J=0 F  S J=$O(^PSB(53.79,RIEN,I,J)) Q:'J  D
"RTN","ECXBCM",147,0)
 ..S DATA=^PSB(53.79,RIEN,I,J,0)
"RTN","ECXBCM",148,0)
 ..S (UNITCOST,ECXDRGC,ECXIVSC,ECXIVAC)=0 ;144 NEW COST FIELDS
"RTN","ECXBCM",149,0)
 ..S CCIEN=$P(DATA,U),CCDORD=$P(DATA,U,2),CCDGVN=$S(+($P(DATA,U,3))>0:+($P(DATA,U,3)),1:1),CCUNIT=$S(+($P(DATA,U,4))>0:+($P(DATA,U,4)),1:1)
"RTN","ECXBCM",150,0)
 ..I I=.5 D  ;144 New drug Cost Fields added
"RTN","ECXBCM",151,0)
 ...S DRG=CCIEN,UNITCOST=$$GET1^DIQ(50,DRG,16,"I")
"RTN","ECXBCM",152,0)
 ...S ECXDRGC=(CCDGVN*CCUNIT)*UNITCOST
"RTN","ECXBCM",153,0)
 ..I I=.6 D  ;144 New IV Additive Cost Fields added
"RTN","ECXBCM",154,0)
 ...S DRG=$$GET1^DIQ(52.6,CCIEN,1,"I"),UNITCOST=$$GET1^DIQ(52.6,CCIEN,7,"I")
"RTN","ECXBCM",155,0)
 ...S ECXIVAC=CCDGVN*UNITCOST
"RTN","ECXBCM",156,0)
 ..I I=.7 D  ;144 New IV Solution Cost Fields added
"RTN","ECXBCM",157,0)
 ...S DRG=$$GET1^DIQ(52.7,CCIEN,1,"I"),UNITCOST=$$GET1^DIQ(52.7,CCIEN,7,"I")
"RTN","ECXBCM",158,0)
 ...S ECXIVSC=CCDGVN*UNITCOST
"RTN","ECXBCM",159,0)
 ..S CCTYPE=$S(I=.5:"D",I=.6:"A",I=.7:"S",1:"")
"RTN","ECXBCM",160,0)
 ..S CCIEN=$S(I=.5:CCIEN_";PSDRUG(",I=.6:CCIEN_";PS(52.6,",I=.7:CCIEN_";PS(52.7,",1:"")
"RTN","ECXBCM",161,0)
 ..D CMPT
"RTN","ECXBCM",162,0)
 Q
"RTN","ECXBCM",163,0)
 ;
"RTN","ECXBCM",164,0)
CHKIV(ECXDFN,ECSD,ECED) ; Check file 728.113 for matching IV records 
"RTN","ECXBCM",165,0)
 ;  input - ECXDFN   DFN of the patient from the BCMA file
"RTN","ECXBCM",166,0)
 ;          ECSD:    Start Date for the extract 
"RTN","ECXBCM",167,0)
 ;          ECED:    End Date for the extract 
"RTN","ECXBCM",168,0)
 ; return - True     if the Order is in file 728.113  
"RTN","ECXBCM",169,0)
 ;          False    if the Order is Not in file 728.113 
"RTN","ECXBCM",170,0)
 ;
"RTN","ECXBCM",171,0)
 N IVIEN,ORD,IVORN,ECD,EXTRACT,STDATE,ENDDATE
"RTN","ECXBCM",172,0)
 S (ORD,ECD,STDATE,ENDDATE)=0
"RTN","ECXBCM",173,0)
 S (IVORN,EXTRACT)=""
"RTN","ECXBCM",174,0)
 I '$O(^ECX(728.113,0)) D     ; Check to see if data exists in the file, if not, recreate
"RTN","ECXBCM",175,0)
 .S EXTRACT="IV"
"RTN","ECXBCM",176,0)
 .S STDATE=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",177,0)
 .S ENDDATE=ECED
"RTN","ECXBCM",178,0)
 .D START^PSJDSS
"RTN","ECXBCM",179,0)
 S IVORN=$P(ECXORN,"V")
"RTN","ECXBCM",180,0)
 S ECD=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",181,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)) Q:'ECD!(ECD>ECED)!(ORD=IVORN)  D
"RTN","ECXBCM",182,0)
 .S ORD=0
"RTN","ECXBCM",183,0)
 .F  S ORD=$O(^ECX(728.113,"A",ECD,ECXDFN,ORD)) Q:'ORD!(ORD=IVORN)
"RTN","ECXBCM",184,0)
 I ORD=IVORN Q 1
"RTN","ECXBCM",185,0)
 Q 0 ;Checks show order not in IV 728.113
"RTN","ECXBCM",186,0)
 ;
"RTN","ECXBCM",187,0)
CHKUD(ECXDFN,ECSD,ECED) ; Check file 728.904 for matching Unit dose records
"RTN","ECXBCM",188,0)
 ;  input - ECXDFN   DFN of the patient from the BCMA file
"RTN","ECXBCM",189,0)
 ;          ECSD:    Start Date for the extract 
"RTN","ECXBCM",190,0)
 ;          ECED:    End Date for the extract 
"RTN","ECXBCM",191,0)
 ; return - True     if the Order is in file 728.904
"RTN","ECXBCM",192,0)
 ;          False    if the Order is Not in file 728.904
"RTN","ECXBCM",193,0)
 ;
"RTN","ECXBCM",194,0)
 N UDIEN,UDORN,ORD,EXTRACT,STDATE,ENDDATE
"RTN","ECXBCM",195,0)
 S (ORD,STDATE,ENDDATE)=0
"RTN","ECXBCM",196,0)
 S (UDORN,EXTRACT)=""
"RTN","ECXBCM",197,0)
 I '$O(^ECX(728.904,0)) D    ; Check to see if data exists in the file, if not, recreate
"RTN","ECXBCM",198,0)
 .S EXTRACT="UD"
"RTN","ECXBCM",199,0)
 .S STDATE=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",200,0)
 .S ENDDATE=ECED
"RTN","ECXBCM",201,0)
 .D START^PSJDSS
"RTN","ECXBCM",202,0)
 S UDORN=$P(ECXORN,"U")
"RTN","ECXBCM",203,0)
 F  S ORD=$O(^ECX(728.904,"AO",ECXDFN,ORD)) Q:'ORD!(ORD=UDORN)
"RTN","ECXBCM",204,0)
 I ORD=UDORN Q 1
"RTN","ECXBCM",205,0)
 ;I $$GET1^DIQ(55.06,UDORN_","_ECXDFN,7,"I")="R" Q 1
"RTN","ECXBCM",206,0)
 Q 0 ;Checks show order not in UD 728.904
"RTN","ECXBCM",207,0)
 ;
"RTN","ECXBCM",208,0)
FILE ;file the extract record
"RTN","ECXBCM",209,0)
 ;node0
"RTN","ECXBCM",210,0)
 ;Sequence Number,Year Month, Extract Number (EC23)^facility (ECXFAC)^
"RTN","ECXBCM",211,0)
 ;dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^
"RTN","ECXBCM",212,0)
 ;in/out (ECXA)^Day (ECXADT)^
"RTN","ECXBCM",213,0)
 ;date of birth (ECDOB)^Gender (ECXSEX)^State (ECXSTATE)^County (ECXCNTY)^
"RTN","ECXBCM",214,0)
 ;zip code (ECXZIP)^country (ECXCNTRY)^ward (ECXW)^treating speciality (ECXTSC)^
"RTN","ECXBCM",215,0)
 ;provider (ECPRO)^provider person class (ECPROPC)^provider npi (ECPRONPI)^
"RTN","ECXBCM",216,0)
 ;primary care provider(ECPTPR)^pc provider person class (ECCLAS)^
"RTN","ECXBCM",217,0)
 ;primary care provider NPI (ECPTNPI)^primary care team (ECPTTM)^ordering stop code (ECXOSC)^
"RTN","ECXBCM",218,0)
 ;NODE(1)
"RTN","ECXBCM",219,0)
 ;place order number (RIEN)^order reference number (ECXORN)^route (ECXORT)^
"RTN","ECXBCM",220,0)
 ;^action time (ECXATM)^component code (CCIEN)^
"RTN","ECXBCM",221,0)
 ;component dose ordered (CCDORD)^component dose given(CCDGVN)^
"RTN","ECXBCM",222,0)
 ;component units (CCUNIT)^component type (CCTYPE)^Action Status (ECXASTA)^
"RTN","ECXBCM",223,0)
 ;Administration Medication (ECXAMED)^Scheduled Administration Date (ECXSCADT)^
"RTN","ECXBCM",224,0)
 ;NODE(2)
"RTN","ECXBCM",225,0)
 ;Scheduled Administration Time (ECXSCATM)^
"RTN","ECXBCM",226,0)
  ;Order Schedule (ECXOS)^IV Unique ID (ECXIVID)^
"RTN","ECXBCM",227,0)
 ;Infusion Rate (ECXIR)^Production Division Code (ECXDIV)^Drug IEN (ECXVAP)^NDC (ECVNDC)^ ;;143, changed Drug IEN var from DRG to ECXVAP
"RTN","ECXBCM",228,0)
 ;Investigational (DEA Special Handling) (ECINV)^VA Drug Classification (ECVACL)^
"RTN","ECXBCM",229,0)
 ;Master Patient Index (ECXMPI)^DOM, PRRTP and SAARTP Indicator (ECXDOM)^
"RTN","ECXBCM",230,0)
 ;Observation Patient Indicator (ECXOBS)^Encounter Number (ECXENC)^Means Test (ECXMTST)^
"RTN","ECXBCM",231,0)
 ;Eligibility (ECXELIG)^Enrollment Location (ECXENRL)^Enrollment Category (ECXCAT)^
"RTN","ECXBCM",232,0)
 ;Enrollment Status (ECXSTAT)^Enrollment Priority (ECXPRIOR)_(ECXSBGRP)^
"RTN","ECXBCM",233,0)
 ;User Enrollee (ECXUESTA)^
"RTN","ECXBCM",234,0)
 ;Ethnicity(ECXETH)^Race 1(ECXRC1)^Veteran(ECXVET)^Period of Service(ECXPOS)^POW Status(ECXPST)^
"RTN","ECXBCM",235,0)
 ;POW Location(ECXPLOC)^Radiation Status(ECXRST)^Agent Orange Status(ECXAST)^Agent Orange Location(ECXAOL)
"RTN","ECXBCM",236,0)
 ;^Purple Heart Indicator(ECXPHI)^MST Status(ECXMST)^CNH/SH Status(ECXCNHU)^
"RTN","ECXBCM",237,0)
 ;Head & Neck Cancer Indicator(ECXHNCI)^SHAD Status(ECXSHADI)
"RTN","ECXBCM",238,0)
 ;NODE(3)
"RTN","ECXBCM",239,0)
 ;Patient Type(ECXPTYPE)^
"RTN","ECXBCM",240,0)
 ;CV Status Eligibility(ECXCVE)^CV Eligibility End Date(ECXCVEDT)^Encounter CV(ECXCVENC)^
"RTN","ECXBCM",241,0)
 ;National Patient Record Flag(ECXNPRFI)^ERI(ECXERI)^SW Asia Conditions(ECXEST)^
"RTN","ECXBCM",242,0)
 ;OEF/OIF(ECXOEF)^OEF/OIF Return Date(ECXOEFDT)^PATCAT(ECXPATCAT)
"RTN","ECXBCM",243,0)
 ;Encounter SC (ECXESC)^IV Additives Cost ECXIVAC^IV Solutions Cost ECXIVSC^Drug cost ECXDRGC^Camp Lejeune Status (ECXCLST)^Encounter Camp Lejeune (ECXECL)
"RTN","ECXBCM",244,0)
 ;
"RTN","ECXBCM",245,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXBCM",246,0)
 N ECXDATA,ECXTSC
"RTN","ECXBCM",247,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXBCM",248,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXBCM",249,0)
 N DA,DIK
"RTN","ECXBCM",250,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXBCM",251,0)
 S ECODE(0)=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXADT
"RTN","ECXBCM",252,0)
 S ECODE(0)=ECODE(0)_U_ECXDOB_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXCNTRY
"RTN","ECXBCM",253,0)
 S ECODE(0)=ECODE(0)_U_ECXW_U_ECXTSC_U_2_ECPRO_U_ECPROPC_U_ECPRONPI_U_ECPTPR_U_ECCLAS
"RTN","ECXBCM",254,0)
 S ECODE(0)=ECODE(0)_U_ECPTNPI_U_ECPTTM_U_ECXOSC_U
"RTN","ECXBCM",255,0)
 S ECODE(1)=RIEN_U_ECXORN_U_ECXORT_U_ECXATM_U_CCIEN_U_CCDORD_U_CCDGVN
"RTN","ECXBCM",256,0)
 S ECODE(1)=ECODE(1)_U_CCUNIT_U_CCTYPE_U_ECXASTA_U_ECXAMED_U_ECXSCADT_U
"RTN","ECXBCM",257,0)
 S ECODE(2)=ECXSCATM_U_ECXOS_U_ECXIVID_U_ECXIR_U_ECXDIV_U_ECXVAP_U_ECVNDC_U_ECINV_U_ECVACL_U_ECXMPI_U_ECXDOM ;143 Changed DRUG IEN field from DRG to ECXVAP
"RTN","ECXBCM",258,0)
 S ECODE(2)=ECODE(2)_U_$E(ECXOBS,1)_U_ECXENC_U_ECXMTST_U_ECXELIG_U_ECXENRL_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_ECXSBGRP
"RTN","ECXBCM",259,0)
 S ECODE(2)=ECODE(2)_U_ECXUESTA_U_ECXETH_U_ECXRC1_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC
"RTN","ECXBCM",260,0)
 S ECODE(2)=ECODE(2)_U_ECXRST_U_ECXAST_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXCNHU_U_ECXHNCI_U_ECXSHADI_U
"RTN","ECXBCM",261,0)
 S ECODE(3)=ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI_U_ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT
"RTN","ECXBCM",262,0)
 S ECODE(3)=ECODE(3)_U_ECXPATCAT
"RTN","ECXBCM",263,0)
 I ECXLOGIC>2013 S ECODE(3)=ECODE(3)_U_ECXESC_U_ECXIVAC_U_ECXIVSC_U_ECXDRGC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXBCM",264,0)
 ;
"RTN","ECXBCM",265,0)
 N DA,DIK,X S X=""
"RTN","ECXBCM",266,0)
 F X=0:1:3 S ^ECX(ECFILE,EC7,X)=ECODE(X)
"RTN","ECXBCM",267,0)
 S ECRN=ECRN+1
"RTN","ECXBCM",268,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXBCM",269,0)
 Q
"RTN","ECXBCM",270,0)
 ;
"RTN","ECXBCM",271,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXBCM",272,0)
 S ECHEAD="BCM"
"RTN","ECXBCM",273,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXBCM",274,0)
 Q
"RTN","ECXCPRO")
0^36^B35725966^B32166082
"RTN","ECXCPRO",1,0)
ECXCPRO ;ALB/JAP - PRO Extract YTD Report ;3/4/13  15:45
"RTN","ECXCPRO",2,0)
 ;;3.0;DSS EXTRACTS;**21,24,33,84,137,144**;Dec 22, 1997;Build 9
"RTN","ECXCPRO",3,0)
 ;accumulates extract data by hcpcs code for all extracts in fiscal year date range
"RTN","ECXCPRO",4,0)
 ;if an extract has been purged, then totals will be falsely low
"RTN","ECXCPRO",5,0)
 ;if more than 1 extract exists for a particular month, then totals will be falsely high
"RTN","ECXCPRO",6,0)
 ;if site is multidivisional, then user can generate report for
"RTN","ECXCPRO",7,0)
 ;  any one division - data stored under divisional station# (e.g., 326 or 326AB)
"RTN","ECXCPRO",8,0)
 ;  or for entire facility - data stored under primary station# (e.g., 326) but includes data from all subdivisions
"RTN","ECXCPRO",9,0)
 ;if site is non-divisional, then data stored under facility station#
"RTN","ECXCPRO",10,0)
 ;
"RTN","ECXCPRO",11,0)
 ;
"RTN","ECXCPRO",12,0)
EN ;setup & queue
"RTN","ECXCPRO",13,0)
 N DIC,DA,DR,DIQ,DIR,DIRUT,DTOUT,DUOUT,DIV,LAST,OUT,CNT,ECXPORT ;144
"RTN","ECXCPRO",14,0)
 S ECXERR=0
"RTN","ECXCPRO",15,0)
 S ECXHEAD="PRO"
"RTN","ECXCPRO",16,0)
 W !!,"Setup for PRO Extract YTD HCPCS Report --",!
"RTN","ECXCPRO",17,0)
 ;determine primary division
"RTN","ECXCPRO",18,0)
 W !,"If you belong to more than one Primary Division, you must"
"RTN","ECXCPRO",19,0)
 W !,"select a Primary Division for the report.",!
"RTN","ECXCPRO",20,0)
 S ECXPRIME=$$PDIV^ECXPUTL
"RTN","ECXCPRO",21,0)
 I ECXPRIME=0 D ^ECXKILL Q
"RTN","ECXCPRO",22,0)
 S DA=ECXPRIME,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99" D EN^DIQ1
"RTN","ECXCPRO",23,0)
 S ECXPRIME=ECXPRIME_U_$G(ECXDIC(4,DA,99,"I"))_U_$G(ECXDIC(4,DA,.01,"I"))
"RTN","ECXCPRO",24,0)
 ;select 1 or more prosthetics divisions for report
"RTN","ECXCPRO",25,0)
 D PRO^ECXDVSN2(DUZ,ECXPRIME,.ECXDIV,.ECXALL,.ECXERR)
"RTN","ECXCPRO",26,0)
 I ECXERR D  Q
"RTN","ECXCPRO",27,0)
 .D ^ECXKILL W !!,?5,"Try again later... exiting.",!
"RTN","ECXCPRO",28,0)
 ;determine fiscal year of report
"RTN","ECXCPRO",29,0)
 S DIR(0)="SMBA^C:CURRENT;P:PREVIOUS",DIR("A")="Select C(urrent) or P(revious) Fiscal Year: ",DIR("B")="CURRENT"
"RTN","ECXCPRO",30,0)
 W ! K X,Y D ^DIR K DIR
"RTN","ECXCPRO",31,0)
 I $D(DUOUT)!($D(DTOUT)) D  Q
"RTN","ECXCPRO",32,0)
 .D ^ECXKILL W !!,?5,"Try again later... exiting.",!
"RTN","ECXCPRO",33,0)
 I Y="C" D
"RTN","ECXCPRO",34,0)
 .S X=$$CYFY^ECXUTL1(DT),ECXARRAY("START")=$P(X,U,3),ECXARRAY("END")=$P(X,U,4)
"RTN","ECXCPRO",35,0)
 I Y="P" D
"RTN","ECXCPRO",36,0)
 .S YR=$E(DT,1,3),MON=$E(DT,4,5) S:+MON<10 YR=YR-1 S X1=YR_"0930"
"RTN","ECXCPRO",37,0)
 .S X=$$CYFY^ECXUTL1(X1),ECXARRAY("START")=$P(X,U,3),ECXARRAY("END")=$P(X,U,4)
"RTN","ECXCPRO",38,0)
 .K C,MON,YR,X1
"RTN","ECXCPRO",39,0)
 ;setup variables for taskmanager
"RTN","ECXCPRO",40,0)
 S ECXPGM="PROCESS^ECXCPRO",ECXDESC="PRO Extract YTD Lab Report"
"RTN","ECXCPRO",41,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")="",ECXSAVE("ECXPRIME")="",ECXSAVE("ECXALL")=""
"RTN","ECXCPRO",42,0)
 ;determine output device and queue if requested
"RTN","ECXCPRO",43,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXCPRO",44,0)
 .K ^TMP($J,"ECXPORT") ;144
"RTN","ECXCPRO",45,0)
 .S ^TMP($J,"ECXPORT",0)="REPORT TYPE^PSAS HCPCS^QTY COM^TOTAL COM^AVE COM^QTY VA^TOTAL VA^AVE VA^QTY LAB^TOTAL LAB^AVE LAB^ALL AVE" ;144
"RTN","ECXCPRO",46,0)
 .S CNT=1 ;144
"RTN","ECXCPRO",47,0)
 .D PROCESS ;144
"RTN","ECXCPRO",48,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXCPRO",49,0)
 .D ^ECXKILL ;144
"RTN","ECXCPRO",50,0)
 W !!,"Please note: The PRO Extract YTD HCPCS Report requires 132 columns."
"RTN","ECXCPRO",51,0)
 W !,"             Select an appropriate device for output."
"RTN","ECXCPRO",52,0)
 W ! D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXCPRO",53,0)
 I ECXSAVE("POP")=1 W ! D ^ECXKILL Q
"RTN","ECXCPRO",54,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXCPRO",55,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXCPRO",56,0)
 .D PROCESS
"RTN","ECXCPRO",57,0)
 ;clean-up and close
"RTN","ECXCPRO",58,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXCPRO",59,0)
 D HOME^%ZIS
"RTN","ECXCPRO",60,0)
 Q
"RTN","ECXCPRO",61,0)
 ;
"RTN","ECXCPRO",62,0)
PROCESS ;begin processing
"RTN","ECXCPRO",63,0)
 N DIVISION,E,EXTRACT,REC,NODE0,NODE1,LASTDAY
"RTN","ECXCPRO",64,0)
 K ^TMP($J,"ECXP") S LASTDAY=""
"RTN","ECXCPRO",65,0)
 ;determine which extracts contain data for report
"RTN","ECXCPRO",66,0)
 S (EXTRACT,E)=0
"RTN","ECXCPRO",67,0)
 F  S E=$O(^ECX(727,"E",ECXHEAD,E)) Q:'E  D
"RTN","ECXCPRO",68,0)
 .Q:'$D(^ECX(727,E,0))
"RTN","ECXCPRO",69,0)
 .Q:$P($G(^ECX(727,E,0)),U,4)<ECXARRAY("START")
"RTN","ECXCPRO",70,0)
 .Q:$P($G(^ECX(727,E,0)),U,4)>ECXARRAY("END")
"RTN","ECXCPRO",71,0)
 .Q:$G(^ECX(727,E,"DIV"))'=+ECXPRIME
"RTN","ECXCPRO",72,0)
 .S EXTRACT(E)=^ECX(727,E,0)
"RTN","ECXCPRO",73,0)
 .I $P(EXTRACT(E),U,5)>LASTDAY S LASTDAY=$P(EXTRACT(E),U,5)
"RTN","ECXCPRO",74,0)
 ;setup array of station numbers included in report
"RTN","ECXCPRO",75,0)
 F DIV=0:0 S DIV=$O(ECXDIV(DIV)) Q:'DIV  S ECXSTAT=$P(ECXDIV(DIV),U,2),DIVISION(ECXSTAT)=ECXDIV(DIV)
"RTN","ECXCPRO",76,0)
 ;get the extract data
"RTN","ECXCPRO",77,0)
 S E=0 F  S E=$O(EXTRACT(E)) Q:'E  S REC=0 I $D(^ECX(727.826,"AC",E)) F  S REC=$O(^ECX(727.826,"AC",E,REC)) Q:'REC  D
"RTN","ECXCPRO",78,0)
 .S NODE0=$G(^ECX(727.826,REC,0)),NODE1=$G(^ECX(727.826,REC,1)) Q:NODE0=""
"RTN","ECXCPRO",79,0)
 .S (ECXCTAMT,ECXLLC,ECXLMC)=0
"RTN","ECXCPRO",80,0)
 .S ECXFELOC=$P(NODE0,U,10),ECXFEKEY=$P(NODE0,U,11)
"RTN","ECXCPRO",81,0)
 .S ECXHCPC=$P(NODE0,U,33),ECXTYPE=$E(ECXFEKEY,6),ECXSRCE=$E(ECXFEKEY,7)
"RTN","ECXCPRO",82,0)
 .S ECXQTY=$P(NODE0,U,12),ECXCTAMT=$P(NODE0,U,25),ECXGRPR=$P(NODE1,U,4)
"RTN","ECXCPRO",83,0)
 .I ECXFELOC["NONL" S ECXSTAT=$P(ECXFELOC,"NONL",1),ECXFORM="NONL"
"RTN","ECXCPRO",84,0)
 .I ECXFELOC["HO2" S ECXSTAT=$P(ECXFELOC,"HO2",1),ECXFORM="NONL" ;137
"RTN","ECXCPRO",85,0)
 .;if this station is lab requesting station, then count lab transaction
"RTN","ECXCPRO",86,0)
 .I ECXFELOC["ORD" D
"RTN","ECXCPRO",87,0)
 ..S ECXSTAT=$P(ECXFELOC,"ORD",1),ECXFORM="ORD"
"RTN","ECXCPRO",88,0)
 ..S ECXLLC=$P(NODE0,U,26),ECXLMC=$P(NODE0,U,27)
"RTN","ECXCPRO",89,0)
 .;ignore record for receiving station feeder location
"RTN","ECXCPRO",90,0)
 .Q:ECXFELOC["LAB"
"RTN","ECXCPRO",91,0)
 .;ignore record if division not included in this report
"RTN","ECXCPRO",92,0)
 .Q:ECXSTAT=""  Q:'$D(DIVISION(ECXSTAT))
"RTN","ECXCPRO",93,0)
 .;if combining data from all subdivisions, then set in ^tmp using primary station#
"RTN","ECXCPRO",94,0)
 .I ECXALL=1 S ECXSTAT=$P(ECXPRIME,U,2)
"RTN","ECXCPRO",95,0)
 .;be sure there's no padding on cost variables
"RTN","ECXCPRO",96,0)
 .S ECXCTAMT=+$TR(ECXCTAMT," ",0),ECXLLC=+$TR(ECXLLC," ",0),ECXLMC=+$TR(ECXLMC," ",0)
"RTN","ECXCPRO",97,0)
 .;tmp global holds - com qty^com cost^va nonlab qty^va nonlab cost^lab qty^lab labor cost^lab matrl cost
"RTN","ECXCPRO",98,0)
 .I '$D(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC)) S ^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC)="0^0^0^0^0^0^0"
"RTN","ECXCPRO",99,0)
 .I ECXSRCE="C",ECXFORM="NONL" D
"RTN","ECXCPRO",100,0)
 ..S $P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,1)=$P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,1)+ECXQTY
"RTN","ECXCPRO",101,0)
 ..S $P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,2)=$P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,2)+ECXCTAMT
"RTN","ECXCPRO",102,0)
 .I ECXSRCE="V",ECXFORM="NONL" D
"RTN","ECXCPRO",103,0)
 ..S $P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,3)=$P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,3)+ECXQTY
"RTN","ECXCPRO",104,0)
 ..S $P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,4)=$P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,4)+ECXCTAMT
"RTN","ECXCPRO",105,0)
 .I ECXFORM="ORD" D
"RTN","ECXCPRO",106,0)
 ..S $P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,5)=$P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,5)+ECXQTY
"RTN","ECXCPRO",107,0)
 ..S $P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,6)=$P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,6)+ECXLLC
"RTN","ECXCPRO",108,0)
 ..S $P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,7)=$P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,7)+ECXLMC
"RTN","ECXCPRO",109,0)
 ;setup hcpcs descriptions
"RTN","ECXCPRO",110,0)
 D HCPCS
"RTN","ECXCPRO",111,0)
 ;print report
"RTN","ECXCPRO",112,0)
 D PRINT^ECXCPRO1
"RTN","ECXCPRO",113,0)
 ;cleanup
"RTN","ECXCPRO",114,0)
 I '$G(ECXPORT) D AUDIT^ECXKILL ;144
"RTN","ECXCPRO",115,0)
 Q
"RTN","ECXCPRO",116,0)
 ;
"RTN","ECXCPRO",117,0)
HCPCS ;setup hcpcs cross-reference
"RTN","ECXCPRO",118,0)
 N H,HCPCS,CODE,CPTNM,DESC
"RTN","ECXCPRO",119,0)
 S H=0
"RTN","ECXCPRO",120,0)
 F  S H=$O(^RMPR(661.1,H)) Q:+H<1  D
"RTN","ECXCPRO",121,0)
 .;don't skip inactive hcpcs in case doing previous fy
"RTN","ECXCPRO",122,0)
 .S HCPCS="",HCPCS=$P(^RMPR(661.1,H,0),U,1)
"RTN","ECXCPRO",123,0)
 .S CODE=$$CPT^ICPTCOD(HCPCS)
"RTN","ECXCPRO",124,0)
 .I +CODE>0 S CPTNM=$P(CODE,U,2),DESC=$E($P(CODE,U,3),1,26)
"RTN","ECXCPRO",125,0)
 .Q:CPTNM=""
"RTN","ECXCPRO",126,0)
 .S ^TMP($J,"HCPCS",CPTNM)=DESC
"RTN","ECXCPRO",127,0)
 Q
"RTN","ECXCPRO1")
0^37^B17918535^B13012758
"RTN","ECXCPRO1",1,0)
ECXCPRO1 ;ALB/JAP - PRO Extract YTD Report (cont) ;3/4/13  07:44
"RTN","ECXCPRO1",2,0)
 ;;3.0;DSS EXTRACTS;**21,84,132,144**;Dec 22, 1997;Build 9
"RTN","ECXCPRO1",3,0)
 ;
"RTN","ECXCPRO1",4,0)
PRINT ;print report
"RTN","ECXCPRO1",5,0)
 N PG,LN,QFLG,NODE,DESC,AVE,JJ,SS,TOTAL,TOT,TQTY
"RTN","ECXCPRO1",6,0)
 U IO
"RTN","ECXCPRO1",7,0)
 S QFLG=0,$P(LN,"-",132)=""
"RTN","ECXCPRO1",8,0)
 S Y=ECXARRAY("START") D DD^%DT S ECXSTART=Y
"RTN","ECXCPRO1",9,0)
 S Y=$S(LASTDAY:LASTDAY,ECXARRAY("END")>DT:DT,1:ECXARRAY("END")) D DD^%DT S ECXEND=Y
"RTN","ECXCPRO1",10,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXCPRO1",11,0)
 ;if ecxall=0, then only one subdivision of multidivision facility
"RTN","ECXCPRO1",12,0)
 ;if ecxall=1, then either entire facility (i.e., non-divisional), or all subdivisions combined under primary station#
"RTN","ECXCPRO1",13,0)
 ;but it's possible that no extract data was found
"RTN","ECXCPRO1",14,0)
 S ECXSTAT="",ECXSTAT=$O(^TMP($J,"ECXP",ECXSTAT)) I ECXSTAT="" D  Q
"RTN","ECXCPRO1",15,0)
 .I $G(ECXPORT) Q  ;144 Don't display anything if exporting
"RTN","ECXCPRO1",16,0)
 .I ECXALL=0 S ECXSTAT=$O(DIVISION(""))
"RTN","ECXCPRO1",17,0)
 .F ECXTYPE="N","X","R" D  Q:QFLG
"RTN","ECXCPRO1",18,0)
 ..S PG=0 D HEADER
"RTN","ECXCPRO1",19,0)
 ..W !!,?36,"No extract data available."
"RTN","ECXCPRO1",20,0)
 ..I $E(IOST)="C" D  Q:QFLG
"RTN","ECXCPRO1",21,0)
 ...S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXCPRO1",22,0)
 ...S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXCPRO1",23,0)
 F ECXTYPE="N","X","R" D  Q:QFLG
"RTN","ECXCPRO1",24,0)
 .S PG=0 I '$G(ECXPORT) D HEADER ;144 Don't print header if exporting
"RTN","ECXCPRO1",25,0)
 .S ECXHCPC=""
"RTN","ECXCPRO1",26,0)
 .I '$D(^TMP($J,"ECXP",ECXSTAT,ECXTYPE)) D  Q
"RTN","ECXCPRO1",27,0)
 ..I $G(ECXPORT) Q  ;144 Don't display anything if exporting
"RTN","ECXCPRO1",28,0)
 ..W !!,?36,"No extract data available."
"RTN","ECXCPRO1",29,0)
 ..I $E(IOST)="C" D  Q:QFLG
"RTN","ECXCPRO1",30,0)
 ...S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXCPRO1",31,0)
 ...S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXCPRO1",32,0)
 .F  S ECXHCPC=$O(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC)) Q:ECXHCPC=""  D  Q:QFLG
"RTN","ECXCPRO1",33,0)
 ..S DESC=$G(^TMP($J,"HCPCS",ECXHCPC)) S:DESC="" DESC="(Unknown)" S DESC=ECXHCPC_" "_DESC
"RTN","ECXCPRO1",34,0)
 ..S NODE=^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC)
"RTN","ECXCPRO1",35,0)
 ..;node holds - com qty^com cost^va nonlab qty^va nonlab cost^lab qty^lab labor cost^lab matrl cost
"RTN","ECXCPRO1",36,0)
 ..F I=1:1:7 S X(I)=+$P(NODE,U,I)
"RTN","ECXCPRO1",37,0)
 ..S AVE("C")=0,AVE("V")=0,AVE("L")=0,AVE("ALL")=0,TOT("L")=0,TOTAL=0,TQTY=0
"RTN","ECXCPRO1",38,0)
 ..S:X(1)>0 AVE("C")=X(2)/X(1) S:X(3)>0 AVE("V")=X(4)/X(3) S TOT("L")=X(6)+X(7) S:X(5)>0 AVE("L")=TOT("L")/X(5)
"RTN","ECXCPRO1",39,0)
 ..S TQTY=X(1)+X(3)+X(5),TOTAL=X(2)+X(4)+TOT("L")
"RTN","ECXCPRO1",40,0)
 ..S:TQTY>0 AVE("ALL")=TOTAL/TQTY
"RTN","ECXCPRO1",41,0)
 ..I '$G(ECXPORT) D:($Y+3>IOSL) HEADER Q:QFLG  ;144 Don't display anything if exporting
"RTN","ECXCPRO1",42,0)
 ..I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=$S(ECXTYPE="N":"NEW",ECXTYPE="R":"RENTAL",1:"REPAIR") D  Q  ;144
"RTN","ECXCPRO1",43,0)
 ...S ^TMP($J,"ECXPORT",CNT)=^TMP($J,"ECXPORT",CNT)_U_DESC_U_X(1)_U_X(2)_U_$FN(AVE("C"),"",2)_U_X(3)_U_X(4)_U_$FN(AVE("V"),"",2)_U_X(5)_U_TOT("L")_U_$FN(AVE("L"),"",2)_U_$FN(AVE("ALL"),"",2) ;144
"RTN","ECXCPRO1",44,0)
 ...S CNT=CNT+1 ;144
"RTN","ECXCPRO1",45,0)
 ..W !,DESC,?33,$J(X(1),8,0),?43,$J(X(2),8,0),?53,$J(AVE("C"),8,2),?63,$J(X(3),8,0),?73,$J(X(4),8,0),?83,$J(AVE("V"),8,2),?93,$J(X(5),8,0),?103,$J(TOT("L"),8,0),?113,$J(AVE("L"),8,2),?123,$J(AVE("ALL"),8,2)
"RTN","ECXCPRO1",46,0)
 .Q:$G(ECXPORT)  ;144 Don't continue if exporting
"RTN","ECXCPRO1",47,0)
 .I 'QFLG,$E(IOST)="C" D
"RTN","ECXCPRO1",48,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXCPRO1",49,0)
 ..S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXCPRO1",50,0)
 I '$G(ECXPORT) W @IOF ;144 Don't write anything if exporting
"RTN","ECXCPRO1",51,0)
 Q
"RTN","ECXCPRO1",52,0)
 ;
"RTN","ECXCPRO1",53,0)
HEADER ;header & page control
"RTN","ECXCPRO1",54,0)
 I $E(IOST)="C" D
"RTN","ECXCPRO1",55,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXCPRO1",56,0)
 .I PG>0 S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXCPRO1",57,0)
 Q:QFLG
"RTN","ECXCPRO1",58,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXCPRO1",59,0)
 W "Prosthetics (PRO) Extract YTD HCPCS Report",?122,"Page "_PG
"RTN","ECXCPRO1",60,0)
 W !,"FY Date Range: "_ECXSTART_" to "_ECXEND
"RTN","ECXCPRO1",61,0)
 I ECXALL=0 W !,"Division:      "_$P(DIVISION(ECXSTAT),U,3)_" ("_$P(DIVISION(ECXSTAT),U,2)_")"
"RTN","ECXCPRO1",62,0)
 I ECXALL=1 W !,"Facility:      "_$P(ECXPRIME,U,3)_" ("_$P(ECXPRIME,U,2)_")"
"RTN","ECXCPRO1",63,0)
 W !,"Run Date/Time: "_ECXRUN
"RTN","ECXCPRO1",64,0)
 W:ECXTYPE="N" !!,"REPORT OF NEW PROSTHETICS ACTIVITIES (Initial, Replacement, or Spare)"
"RTN","ECXCPRO1",65,0)
 W:ECXTYPE="R" !!,"REPORT OF RENTAL PROSTHETICS ACTIVITIES"
"RTN","ECXCPRO1",66,0)
 W:ECXTYPE="X" !!,"REPORT OF REPAIR PROSTHETICS ACTIVITIES"
"RTN","ECXCPRO1",67,0)
 W !,?36,"Qty.",?44,"Total $",?55,"Ave. $",?67,"Qty.",?74,"Total $",?85,"Ave. $",?97,"Qty.",?104,"Total $",?114,"Ave. $",?125,"Ave. $"
"RTN","ECXCPRO1",68,0)
 W !,"PSAS HCPCS",?35,"-Comm-",?44,"-Comm-",?55,"-Comm-",?67,"-VA-",?75,"-VA-",?85,"-VA-",?96,"-Lab-",?105,"-Lab-",?114,"-Lab-",?125,"-All-"
"RTN","ECXCPRO1",69,0)
 W !,LN,!
"RTN","ECXCPRO1",70,0)
 Q
"RTN","ECXDRUG1")
0^40^B44065149^B33255159
"RTN","ECXDRUG1",1,0)
ECXDRUG1 ;ALB/TMD-Pharmacy Extracts Incomplete Feeder Key Report ;5/9/13  15:49
"RTN","ECXDRUG1",2,0)
 ;;3.0;DSS EXTRACTS;**40,68,144**;Dec 22, 1997;Build 9
"RTN","ECXDRUG1",3,0)
 ;
"RTN","ECXDRUG1",4,0)
EN ; entry point
"RTN","ECXDRUG1",5,0)
 N X,Y,DATE,ECRUN,ECXTL,ECSTART,ECEND,ECXDESC,ECXSAVE,ECXOPT,ECSD1,ECED,ECXERR,QFLG,ECXPORT,CNT ;144
"RTN","ECXDRUG1",6,0)
 S QFLG=0
"RTN","ECXDRUG1",7,0)
 ; get today's date
"RTN","ECXDRUG1",8,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXDRUG1",9,0)
 D BEGIN Q:QFLG
"RTN","ECXDRUG1",10,0)
 D SELECT Q:QFLG
"RTN","ECXDRUG1",11,0)
 S ECXDESC=ECXTL_" Extract Incomplete Feeder Key Report"
"RTN","ECXDRUG1",12,0)
 S ECXSAVE("EC*")=""
"RTN","ECXDRUG1",13,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXDRUG1",14,0)
 .K ^TMP($J) ;144
"RTN","ECXDRUG1",15,0)
 .S ^TMP($J,"ECXPORT",0)="TYPE^DRUG ENTRY^GENERIC NAME^FEEDER KEY^NUMBER OF RECORDS^TOTAL QTY^UNIT PRICE^TOTAL COST^ERROR" ;144
"RTN","ECXDRUG1",16,0)
 .S CNT=1 ;144
"RTN","ECXDRUG1",17,0)
 .D PROCESS ;144
"RTN","ECXDRUG1",18,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXDRUG1",19,0)
 .D ^ECXKILL ;144
"RTN","ECXDRUG1",20,0)
 W !!,"This report requires 132 column format."
"RTN","ECXDRUG1",21,0)
 D EN^XUTMDEVQ("PROCESS^ECXDRUG1",ECXDESC,.ECXSAVE)
"RTN","ECXDRUG1",22,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXDRUG1",23,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXDRUG1",24,0)
 D HOME^%ZIS
"RTN","ECXDRUG1",25,0)
 D AUDIT^ECXKILL
"RTN","ECXDRUG1",26,0)
 Q
"RTN","ECXDRUG1",27,0)
 ;
"RTN","ECXDRUG1",28,0)
BEGIN ; display report description
"RTN","ECXDRUG1",29,0)
 W @IOF,!,"This report prints a listing of Drug File (#50) entries that will generate",!,"incomplete Feeder keys in the three Pharmacy Extracts.  This listing",!,"can be used to identify and fix Drug File entries.  "
"RTN","ECXDRUG1",30,0)
 W "The number of extract",!,"records, total, quantity, unit price and total cost for each drug are",!,"included to aid in determining the impact of the incomplete Feeder Keys."
"RTN","ECXDRUG1",31,0)
 W !!,"This report is broken into 3 sections as follows:"
"RTN","ECXDRUG1",32,0)
 W !!,"Section 1:  No PSNDF VA Product Name Entry (first 5 digits are zero)."
"RTN","ECXDRUG1",33,0)
 W !!,"Section 2:  No National Drug Code (NDC) (last 12 digits are zero) or the NDC",!,?12,"is prefixed with an 'S', indicating possible supply item number",!,?12,"or UPC."
"RTN","ECXDRUG1",34,0)
 W !!,"Section 3:  No PSNDF VA Product Name Entry, and"
"RTN","ECXDRUG1",35,0)
 W !,?14,"a. no NDC (all 17 digits are zero), or"
"RTN","ECXDRUG1",36,0)
 W !,?14,"b. The NDC is prefixed with an 'S', indicating possible supply",!,?17,"item number or UPC."
"RTN","ECXDRUG1",37,0)
 W !,"Section 3:  No PSNDF VA Product Name Entry or NDC."
"RTN","ECXDRUG1",38,0)
 W !!,"Run times for this report will vary depending upon the size of the extract and",!,"could take as long as 30 minutes or more to complete.  This report has no effect",!,"on the actual extracts and can be run as needed."
"RTN","ECXDRUG1",39,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXDRUG1",40,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXDRUG1",41,0)
 Q
"RTN","ECXDRUG1",42,0)
 ;
"RTN","ECXDRUG1",43,0)
SELECT ; user inputs for report option and date range
"RTN","ECXDRUG1",44,0)
 N DONE,OUT
"RTN","ECXDRUG1",45,0)
 ; allow user to select report option (PRE,IVP or UDP)
"RTN","ECXDRUG1",46,0)
 W "Choose the report you would like to run."
"RTN","ECXDRUG1",47,0)
 S DIR(0)="S^1:PRE;2:IVP;3:UDP",DIR("A")="Selection",DIR("B")=1 D ^DIR K DIR S ECXOPT=Y I X["^" S QFLG=1 Q
"RTN","ECXDRUG1",48,0)
 S ECXTL=$S(ECXOPT=1:"Prescription",ECXOPT=2:"IV Detail",ECXOPT=3:"Unit Dose Local",1:"")
"RTN","ECXDRUG1",49,0)
 ; allow user to select date range for report records
"RTN","ECXDRUG1",50,0)
 W !!,"Enter the date range for which you would like to scan the ",ECXTL,!,"Extract records."
"RTN","ECXDRUG1",51,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXDRUG1",52,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXDRUG1",53,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXDRUG1",54,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXDRUG1",55,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXDRUG1",56,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXDRUG1",57,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXDRUG1",58,0)
 .I Y<ECSD D  Q
"RTN","ECXDRUG1",59,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXDRUG1",60,0)
 ..W !,"Please try again.",!!
"RTN","ECXDRUG1",61,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXDRUG1",62,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXDRUG1",63,0)
 ..W !,"Please try again.",!!
"RTN","ECXDRUG1",64,0)
 .S ECED=Y
"RTN","ECXDRUG1",65,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXDRUG1",66,0)
 .S DONE=1
"RTN","ECXDRUG1",67,0)
 Q
"RTN","ECXDRUG1",68,0)
 ;
"RTN","ECXDRUG1",69,0)
PROCESS ; entry point for queued report
"RTN","ECXDRUG1",70,0)
 S ZTREQ="@"
"RTN","ECXDRUG1",71,0)
 S ECXERR=0 D EN^ECXDRUG2 Q:ECXERR
"RTN","ECXDRUG1",72,0)
 S QFLG=0 D PRINT
"RTN","ECXDRUG1",73,0)
 Q
"RTN","ECXDRUG1",74,0)
 ;
"RTN","ECXDRUG1",75,0)
PRINT ; process temp file and print report
"RTN","ECXDRUG1",76,0)
 N PG,GTOT,LN,S,COUNT,SUBTOT,DR,ECTYPE,REC,STATS,ECCOUNT,ECQTY,ECPRC,ECCOST,MESS ;144
"RTN","ECXDRUG1",77,0)
 U IO
"RTN","ECXDRUG1",78,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXDRUG1",79,0)
 S (PG,QFLG,GTOT)=0,$P(LN,"-",132)=""
"RTN","ECXDRUG1",80,0)
 F S=1:1:3  Q:QFLG  D:'$G(ECXPORT) HEADER Q:QFLG  D  ;144
"RTN","ECXDRUG1",81,0)
 .S (COUNT,SUBTOT)=0,DR=0 F  S DR=$O(^TMP($J,DR)) Q:'+DR!(QFLG)  S ECTYPE=$P(^(DR),U,4) I ECTYPE=S D  ;144
"RTN","ECXDRUG1",82,0)
 ..S REC=^TMP($J,DR),STATS=^(DR,0)
"RTN","ECXDRUG1",83,0)
 ..S COUNT=COUNT+1
"RTN","ECXDRUG1",84,0)
 ..S ECCOUNT=$FNUMBER($P(STATS,U),",")
"RTN","ECXDRUG1",85,0)
 ..S ECQTY=$FNUMBER($P(STATS,U,2),",")
"RTN","ECXDRUG1",86,0)
 ..S ECPRC="$"_$FNUMBER($P(REC,U,3),",",4)
"RTN","ECXDRUG1",87,0)
 ..S ECCOST="$"_$FNUMBER($P(STATS,U,3),",",2)
"RTN","ECXDRUG1",88,0)
 ..S SUBTOT=SUBTOT+$P(STATS,U,3)
"RTN","ECXDRUG1",89,0)
 ..I $G(ECXPORT) D  Q  ;144
"RTN","ECXDRUG1",90,0)
 ...S ^TMP($J,"ECXPORT",CNT)=ECXTL_U_DR_U_$P(REC,U)_U_$P(REC,U,2)_U_$P(STATS,U)_U_$P(STATS,U,2)_U_$FN($P(REC,U,3),"",4)_U_$FN($P(STATS,U,3),"",2) ;144
"RTN","ECXDRUG1",91,0)
 ...S MESS=$S(S=1:"No PSNDF VA Product Name Entry (Five leading zeros)",S=2:"No National Drug Code (NDC) (Last 12 zeros, 'N/A', or 'S' prefix)",1:"No PSNDF VA Product Name Entry or National Drug Code (NDC)") ;144
"RTN","ECXDRUG1",92,0)
 ...S ^TMP($J,"ECXPORT",CNT)=^TMP($J,"ECXPORT",CNT)_U_MESS ;144
"RTN","ECXDRUG1",93,0)
 ...S CNT=CNT+1 ;144
"RTN","ECXDRUG1",94,0)
 ..W !,$$RJ^XLFSTR(DR,5),?8,$P(REC,U),?60,$P(REC,U,2),?79,$$RJ^XLFSTR(ECCOUNT,5),?87,$$RJ^XLFSTR(ECQTY,10),?99,$$RJ^XLFSTR(ECPRC,16),?117,$$RJ^XLFSTR(ECCOST,13)
"RTN","ECXDRUG1",95,0)
 ..I $Y+2>IOSL D HEADER
"RTN","ECXDRUG1",96,0)
 .Q:QFLG!($G(ECXPORT))  ;144 Stop processing if exporting
"RTN","ECXDRUG1",97,0)
 .I COUNT=0 W !!,?8,"No drugs to report for this section"
"RTN","ECXDRUG1",98,0)
 .; print sub total
"RTN","ECXDRUG1",99,0)
 .I COUNT D
"RTN","ECXDRUG1",100,0)
 ..I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXDRUG1",101,0)
 ..S GTOT=GTOT+SUBTOT
"RTN","ECXDRUG1",102,0)
 ..S SUBTOT="$"_$FNUMBER(SUBTOT,",",2)
"RTN","ECXDRUG1",103,0)
 ..W !!,?110,"TOTAL",?116,$$RJ^XLFSTR(SUBTOT,14)
"RTN","ECXDRUG1",104,0)
 ; print grand total
"RTN","ECXDRUG1",105,0)
 I $G(ECXPORT) Q  ;144 Nothing more to print if exporting
"RTN","ECXDRUG1",106,0)
 I GTOT,'QFLG D
"RTN","ECXDRUG1",107,0)
 .I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXDRUG1",108,0)
 .S GTOT="$"_$FNUMBER(GTOT,",",2)
"RTN","ECXDRUG1",109,0)
 .W !!,?104,"GRAND TOTAL",?116,$$RJ^XLFSTR(GTOT,14)
"RTN","ECXDRUG1",110,0)
 ;
"RTN","ECXDRUG1",111,0)
CLOSE ;
"RTN","ECXDRUG1",112,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXDRUG1",113,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXDRUG1",114,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXDRUG1",115,0)
 Q
"RTN","ECXDRUG1",116,0)
 ;
"RTN","ECXDRUG1",117,0)
HEADER ; header and page control
"RTN","ECXDRUG1",118,0)
 N SS,JJ
"RTN","ECXDRUG1",119,0)
 I $E(IOST)="C" D
"RTN","ECXDRUG1",120,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXDRUG1",121,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXDRUG1",122,0)
 Q:QFLG
"RTN","ECXDRUG1",123,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXDRUG1",124,0)
 W !,ECXTL_" Extract Incomplete Feeder Key Report",?124,"Page: "_PG
"RTN","ECXDRUG1",125,0)
 W !,"Start Date: ",ECSTART
"RTN","ECXDRUG1",126,0)
 W !,"End Date:   ",ECEND,?97,"Report Run Date/Time:  "_ECRUN
"RTN","ECXDRUG1",127,0)
 W !!,"Drug",?8,"Generic Name",?60,"Feeder Key",?79,"# of",?89,"Total",?107,"Unit",?122,"Total"
"RTN","ECXDRUG1",128,0)
 W !,"Entry",?79,"Records",?89,"Quantity",?107,"Price",?122,"Cost"
"RTN","ECXDRUG1",129,0)
 W !,LN
"RTN","ECXDRUG1",130,0)
 I S=1 W !!,"No PSNDF VA Product Name Entry (Five leading zeros)",!
"RTN","ECXDRUG1",131,0)
 I S=2 W !!,"No National Drug Code (NDC) (Last 12 zeros, 'N/A', or 'S' prefix)",!
"RTN","ECXDRUG1",132,0)
 I S=3 W !!,"No PSNDF VA Product Name Entry or National Drug Code (NDC)",!
"RTN","ECXDRUG1",133,0)
 Q
"RTN","ECXDRUG1",134,0)
 ;
"RTN","ECXDRUG2")
0^41^B17542635^B17371737
"RTN","ECXDRUG2",1,0)
ECXDRUG2 ;ALB/TMD-Pharmacy Extracts Incomplete Feeder Key Report ;3/5/13  15:52
"RTN","ECXDRUG2",2,0)
 ;;3.0;DSS EXTRACTS;**40,68,84,105,111,144**;Dec 22, 1997;Build 9
"RTN","ECXDRUG2",3,0)
 ;
"RTN","ECXDRUG2",4,0)
EN ; entry point
"RTN","ECXDRUG2",5,0)
 N ECD,LINE,ECDRG,ECQTY,ECPRC
"RTN","ECXDRUG2",6,0)
 I '$G(ECXPORT) K ^TMP($J) ;144 Already killed if exporting
"RTN","ECXDRUG2",7,0)
 S ECD=ECSD1,ECED=ECED+.3
"RTN","ECXDRUG2",8,0)
 S LINE=$S(ECXOPT=1:"PRE",ECXOPT=2:"IVP",ECXOPT=3:"UDP",1:"EXIT")
"RTN","ECXDRUG2",9,0)
 D @LINE
"RTN","ECXDRUG2",10,0)
 Q
"RTN","ECXDRUG2",11,0)
 ;
"RTN","ECXDRUG2",12,0)
PRE ; entry point for PRE data
"RTN","ECXDRUG2",13,0)
 ; order through fills, refills and partial refills
"RTN","ECXDRUG2",14,0)
 N ECRFL,ECRX,ECREF,ECDATA,ECDATA1
"RTN","ECXDRUG2",15,0)
 K ^TMP($J,"ECXDSS")
"RTN","ECXDRUG2",16,0)
 ;call pharmacy api pso52ex
"RTN","ECXDRUG2",17,0)
 D EXTRACT^PSO52EX(ECD,ECED,"ECXDSS")
"RTN","ECXDRUG2",18,0)
 S ECREF="RF"
"RTN","ECXDRUG2",19,0)
 ;order thru fills and refills; refill values 0 thru 11
"RTN","ECXDRUG2",20,0)
 ;     Note:  refill 0 = original fill
"RTN","ECXDRUG2",21,0)
 F  S ECD=$O(^TMP($J,"ECXDSS","AL",ECD)),IEN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S IEN=$O(^(ECD,IEN)),ECRFL=""  Q:'IEN  Q:ECXERR  F  S ECRFL=$O(^(IEN,ECRFL)) Q:ECRFL']""  Q:ECXERR  D PRE2
"RTN","ECXDRUG2",22,0)
 ;
"RTN","ECXDRUG2",23,0)
 ;order thru partial fills
"RTN","ECXDRUG2",24,0)
 S ECD=ECSD1,ECREF="P"
"RTN","ECXDRUG2",25,0)
 F  S ECD=$O(^TMP($J,"ECXDSS","AM",ECD)),IEN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S IEN=$O(^(ECD,IEN)),ECRFL=""  Q:'IEN  Q:ECXERR  F  S ECRFL=$O(^(IEN,ECRFL)) Q:'ECRFL  Q:ECXERR  D PRE2
"RTN","ECXDRUG2",26,0)
 K ^TMP($J,"ECXDSS")
"RTN","ECXDRUG2",27,0)
 Q
"RTN","ECXDRUG2",28,0)
 ;
"RTN","ECXDRUG2",29,0)
PRE2 ; get Prescription data
"RTN","ECXDRUG2",30,0)
 S ECDRG=+$P(^TMP($J,"ECXDSS",IEN,6),U)
"RTN","ECXDRUG2",31,0)
 I ECRFL>0&(ECREF="RF") D
"RTN","ECXDRUG2",32,0)
 .S ECQTY=^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,1),ECPRC=^(1.2)
"RTN","ECXDRUG2",33,0)
 I ECRFL>0&(ECREF="P") D
"RTN","ECXDRUG2",34,0)
 .S ECQTY=^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,.04),ECPRC=^(.042)
"RTN","ECXDRUG2",35,0)
 I 'ECRFL S ECQTY=^TMP($J,"ECXDSS",IEN,7),ECPRC=^(17)
"RTN","ECXDRUG2",36,0)
 D TEST
"RTN","ECXDRUG2",37,0)
 Q
"RTN","ECXDRUG2",38,0)
 ;
"RTN","ECXDRUG2",39,0)
IVP ; entry point for IVP data
"RTN","ECXDRUG2",40,0)
 N ON,DFN,DA,SA
"RTN","ECXDRUG2",41,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECXERR  Q:ECD>ECED  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  Q:ECXERR  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^("S") D
"RTN","ECXDRUG2",42,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  I $D(^ECX(728.113,DA,0)) S EC=^(0) D
"RTN","ECXDRUG2",43,0)
 ..S ECDRG=$P(EC,U,4)
"RTN","ECXDRUG2",44,0)
 ..S SA=$S($P(EC,U,8)]"":"A",$P(EC,U,9):"S",1:"")
"RTN","ECXDRUG2",45,0)
 ..I SA'="" D
"RTN","ECXDRUG2",46,0)
 ...I '$D(^TMP($J,SA,ECDRG)) S ^(ECDRG)=0,$P(^(ECDRG),U,2)=$P(EC,U,12)
"RTN","ECXDRUG2",47,0)
 ...S $P(^TMP($J,SA,ECDRG),U)=$P(^TMP($J,SA,ECDRG),U)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXDRUG2",48,0)
 .;looped thru all DAs for this order - now put it together
"RTN","ECXDRUG2",49,0)
 .F SA="S","A" S ECDRG="" F  S ECDRG=$O(^TMP($J,SA,ECDRG)) Q:ECDRG=""  D
"RTN","ECXDRUG2",50,0)
 ..S ECQTY=$P(^TMP($J,SA,ECDRG),U),ECPRC=$P(^(ECDRG),U,2)
"RTN","ECXDRUG2",51,0)
 ..D TEST
"RTN","ECXDRUG2",52,0)
 K ^TMP($J,"A"),^TMP($J,"S")
"RTN","ECXDRUG2",53,0)
 Q
"RTN","ECXDRUG2",54,0)
 ;
"RTN","ECXDRUG2",55,0)
UDP ; entry point for UDP data
"RTN","ECXDRUG2",56,0)
 N ECXJ,ECDATA
"RTN","ECXDRUG2",57,0)
 F  S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:ECXERR  D
"RTN","ECXDRUG2",58,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:ECXERR  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXDRUG2",59,0)
 ..S DATA=^ECX(728.904,ECXJ,0)
"RTN","ECXDRUG2",60,0)
 ..S ECDRG=$P(DATA,U,4),ECQTY=$P(DATA,U,5),ECCOST=$P(DATA,U,8)
"RTN","ECXDRUG2",61,0)
 ..S ECPRC=ECCOST/ECQTY
"RTN","ECXDRUG2",62,0)
 ..D TEST
"RTN","ECXDRUG2",63,0)
 Q
"RTN","ECXDRUG2",64,0)
 ;
"RTN","ECXDRUG2",65,0)
TEST ; retrieve NDC and PSNDF VA Product Code Entry and test for missing NDC or VA Prod Code
"RTN","ECXDRUG2",66,0)
 N ECTYPE,ECNDC,ECZERO,K,ECPROD,ECFCHAR,ECSTOCK,ECXPHA
"RTN","ECXDRUG2",67,0)
 S ECTYPE=0,ECXPHA=""
"RTN","ECXDRUG2",68,0)
 ; call pharmacy drug file (#50) api via ecxutl5
"RTN","ECXDRUG2",69,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG)
"RTN","ECXDRUG2",70,0)
 S ECNDC=$P(ECXPHA,U,3)
"RTN","ECXDRUG2",71,0)
 S ECNDC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNDC=$TR(ECNDC,"*",0)
"RTN","ECXDRUG2",72,0)
 S ECZERO=1,ECSTOCK=0 F K=1:1:$L(ECNDC) D  Q:'ECZERO!ECSTOCK
"RTN","ECXDRUG2",73,0)
 .S ECFCHAR=$E(ECNDC,K)
"RTN","ECXDRUG2",74,0)
 .I ECFCHAR="S" S ECSTOCK=1 Q
"RTN","ECXDRUG2",75,0)
 .I ECFCHAR'=0 S ECZERO=0 Q
"RTN","ECXDRUG2",76,0)
 I ECZERO!ECSTOCK!(ECNDC["N/A") S ECTYPE=2
"RTN","ECXDRUG2",77,0)
 S ECPROD=$P(ECXPHA,U,6),ECPROD=$$RJ^XLFSTR(ECPROD,5,0)
"RTN","ECXDRUG2",78,0)
 I ECTYPE,'ECPROD S ECTYPE=3
"RTN","ECXDRUG2",79,0)
 I 'ECTYPE,'ECPROD S ECTYPE=1
"RTN","ECXDRUG2",80,0)
 I ECTYPE D FILE
"RTN","ECXDRUG2",81,0)
 Q
"RTN","ECXDRUG2",82,0)
 ;
"RTN","ECXDRUG2",83,0)
FILE ; file record
"RTN","ECXDRUG2",84,0)
 N ECFKEY,ECGNAME,STATS,ECCOUNT,QTY,COST,ECCOST
"RTN","ECXDRUG2",85,0)
 ; create new record if none exists for this drug
"RTN","ECXDRUG2",86,0)
 I '$D(^TMP($J,ECDRG)) D
"RTN","ECXDRUG2",87,0)
 .S ECFKEY=ECPROD_ECNDC
"RTN","ECXDRUG2",88,0)
 .S ECGNAME=$P($G(^PSDRUG(ECDRG,0)),U)
"RTN","ECXDRUG2",89,0)
 .S ^TMP($J,ECDRG)=ECGNAME_U_ECFKEY_U_ECPRC_U_ECTYPE
"RTN","ECXDRUG2",90,0)
 .S ^TMP($J,ECDRG,0)="0^0^0"
"RTN","ECXDRUG2",91,0)
 ; add stats to record
"RTN","ECXDRUG2",92,0)
 S STATS=^TMP($J,ECDRG,0)
"RTN","ECXDRUG2",93,0)
 S ECCOUNT=$P(STATS,U),QTY=$P(STATS,U,2),COST=$P(STATS,U,3)
"RTN","ECXDRUG2",94,0)
 S ECCOUNT=ECCOUNT+1
"RTN","ECXDRUG2",95,0)
 S ECCOST=ECQTY*ECPRC
"RTN","ECXDRUG2",96,0)
 S ECQTY=ECQTY+QTY,ECCOST=ECCOST+COST
"RTN","ECXDRUG2",97,0)
 S ^TMP($J,ECDRG,0)=ECCOUNT_U_ECQTY_U_ECCOST
"RTN","ECXDRUG2",98,0)
 Q
"RTN","ECXDRUG2",99,0)
 ;
"RTN","ECXDRUG2",100,0)
EXIT S ECXERR=1 Q
"RTN","ECXEC")
0^24^B75634343^B61924291
"RTN","ECXEC",1,0)
ECXEC ;ALB/JAP,BIR/JLP,PTD-DSS Event Capture Extract  ;8/13/13  15:54
"RTN","ECXEC",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,24,27,33,39,46,49,71,89,92,105,120,127,132,136,144**;Dec 22, 1997;Build 9
"RTN","ECXEC",3,0)
BEG ;entry point from option
"RTN","ECXEC",4,0)
 I '$D(^ECH) W !,"Event Capture is not initialized",!! Q
"RTN","ECXEC",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXEC",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXEC",7,0)
 Q
"RTN","ECXEC",8,0)
START ;begin EC extract
"RTN","ECXEC",9,0)
 N X,Y,ECDCM,ECXNPRFI,ECXVIET,ECX4CHAR ; 144 national 4char code
"RTN","ECXEC",10,0)
 N ECXICD10P,ECXICD101,ECXICD102,ECXICD103,ECXICD104
"RTN","ECXEC",11,0)
 S ECED=ECED+.3,ECLL=0
"RTN","ECXEC",12,0)
 K ^TMP("EC",$J)
"RTN","ECXEC",13,0)
 F  S ECLL=$O(^ECH("AC1",ECLL)),ECD=ECSD-.1 Q:'ECLL  D
"RTN","ECXEC",14,0)
 .F  S ECD=$O(^ECH("AC1",ECLL,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  D
"RTN","ECXEC",15,0)
 ..F  S ECDA=$O(^ECH("AC1",ECLL,ECD,ECDA)) Q:'ECDA  D UPDATE
"RTN","ECXEC",16,0)
 Q
"RTN","ECXEC",17,0)
 ;
"RTN","ECXEC",18,0)
UPDATE ;sets record and updates counters
"RTN","ECXEC",19,0)
 N ECXESC,ECXECL,ECXCLST ;144
"RTN","ECXEC",20,0)
 S (ECXESC,ECXECL,ECXCLST)="" ;144
"RTN","ECXEC",21,0)
 S ECCH=^ECH(ECDA,0),ECL=$P(ECCH,U,4),ECXDFN=$P(ECCH,U,2)
"RTN","ECXEC",22,0)
 S ECXPDIV=$$RADDIV^ECXDEPT(ECL)  ;Get production division from file 4
"RTN","ECXEC",23,0)
 S ECDT=$P(ECCH,U,3),ECM=$P(ECCH,U,6),ECC=$P(ECCH,U,8)
"RTN","ECXEC",24,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECDT,"1;3;5;")
"RTN","ECXEC",25,0)
 S ECTM=$$ECXTIME^ECXUTL(ECDT),ECP=$P(ECCH,U,9)
"RTN","ECXEC",26,0)
 Q:ECP']""
"RTN","ECXEC",27,0)
 S ECO=$P(ECCH,U,12),ECV=$P(ECCH,U,10),ECDU=$P(ECCH,U,7)
"RTN","ECXEC",28,0)
 S ECXUNIT=$G(^ECD(ECDU,0)),ECCS=+$P(ECXUNIT,U,4),ECDCM=$P(ECXUNIT,U,5)
"RTN","ECXEC",29,0)
 S ECXDSSP="",ECXDSSD=$E(ECDCM,1,10),ECUSTOP=$P(ECXUNIT,U,10),ECUPCE=$P(ECXUNIT,U,14)
"RTN","ECXEC",30,0)
 S ICD9=$P($G(^ECH(ECDA,"P")),U,2) S:ICD9="" ICD9=" "
"RTN","ECXEC",31,0)
 S ECXICD9=$P($G(^ICD9(ICD9,0)),U),ECXICD10P="",ECX4CHAR="" ;144
"RTN","ECXEC",32,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXEC",33,0)
 F I=1:1:4 S @("ECXICD10"_I)=""
"RTN","ECXEC",34,0)
 S (CNT,I)=0
"RTN","ECXEC",35,0)
 F  S CNT=$O(^ECH(ECDA,"DX",CNT)) Q:'CNT  D  Q:I>3
"RTN","ECXEC",36,0)
 .S ICD9=$P($G(^ECH(ECDA,"DX",CNT,0)),U) D:ICD9'=""
"RTN","ECXEC",37,0)
 ..S I=I+1,@("ECXICD9"_I)=$P($G(^ICD9(ICD9,0)),U)
"RTN","ECXEC",38,0)
 ;derivation of dss identifier depends on whether dss unit is 
"RTN","ECXEC",39,0)
 ;set to send data to pce
"RTN","ECXEC",40,0)
 S ECAC=$P($G(ECCH),U,19) S:ECAC=0 ECAC="" ;144 Change value to null if value from event capture patient file is 0
"RTN","ECXEC",41,0)
 S ECX4CHAR=$$GET1^DIQ(728.44,+ECAC,7,"E") ; 144 use the assoc clinic to get 4char code
"RTN","ECXEC",42,0)
 ;if this is a record that 'goes to pce', then get the dss identifier
"RTN","ECXEC",43,0)
 ;from the clinic stop codes
"RTN","ECXEC",44,0)
 S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",45,0)
 I ECUPCE="A"!(ECUPCE="O"&(ECXA="O")) D
"RTN","ECXEC",46,0)
 .D:+ECAC
"RTN","ECXEC",47,0)
 ..S ECAC1=$P($G(^SC(+ECAC,0)),U,7),ECAC2=$P($G(^(0)),U,18)
"RTN","ECXEC",48,0)
 ..I 'ECAC2 S ECAC2S="000"
"RTN","ECXEC",49,0)
 ..I 'ECAC1 S (ECAC1S,ECAC2S)="000" Q
"RTN","ECXEC",50,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECAC1,0)),U,2)
"RTN","ECXEC",51,0)
 ..S ECAC2S=$P($G(^DIC(40.7,+ECAC2,0)),U,2)
"RTN","ECXEC",52,0)
 ..S ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0),ECAC2S=$$RJ^XLFSTR(ECAC2S,3,0)
"RTN","ECXEC",53,0)
 .S:'ECAC (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",54,0)
 ;if this record doesn't go to pce, then get the dss identifier
"RTN","ECXEC",55,0)
 ;from the dss unit
"RTN","ECXEC",56,0)
 I ECUPCE=""!(ECUPCE="N")!(ECUPCE="O"&(ECXA="I")) D
"RTN","ECXEC",57,0)
 .I +ECUSTOP D
"RTN","ECXEC",58,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECUSTOP,0)),U,2)
"RTN","ECXEC",59,0)
 ..S ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0),ECAC2S="000"
"RTN","ECXEC",60,0)
 .I 'ECUSTOP D
"RTN","ECXEC",61,0)
 ..S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",62,0)
 S ECDSS=ECAC1S_ECAC2S
"RTN","ECXEC",63,0)
 I ECXLOGIC>2003 I "^18^23^24^41^65^94^108^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXEC",64,0)
 S ECXDIV=""
"RTN","ECXEC",65,0)
 ;
"RTN","ECXEC",66,0)
 ;- Ord Div, Contrct St/End Dates, Contrct Type placeholders for FY2002
"RTN","ECXEC",67,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXEC",68,0)
 ;setup provider(s) as'2'_ien
"RTN","ECXEC",69,0)
 S (ECU1A,ECU2A,ECU3A,ECU1NPI,ECU2NPI,ECU3NPI,ECXPPC1,ECXPPC2,ECXPPC3,ECU1,ECU2,ECU3,ECU4,ECU5,ECU6,ECU7)="" ;144 CVW
"RTN","ECXEC",70,0)
 S (ECU4A,ECU5A,ECU6A,ECU7A,ECU4NPI,ECU5NPI,ECU6NPI,ECU7NPI,ECXPPC4,ECXPPC5,ECXPPC6,ECXPPC7)="" ;144
"RTN","ECXEC",71,0)
 K ECXPRV S ECXPROV=$$GETPRV^ECPRVMUT(ECDA,.ECXPRV) I ECXPROV Q
"RTN","ECXEC",72,0)
 F I=1:1:7 S Y=$O(ECXPRV("")) I Y'="" S @("ECU"_I)=+ECXPRV(Y) K ECXPRV(Y)
"RTN","ECXEC",73,0)
 S:$L(ECU1) ECXPPC1=$$PRVCLASS^ECXUTL(ECU1,ECDT),ECU1A="2"_$P(ECU1,";")
"RTN","ECXEC",74,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU1,ECDT)
"RTN","ECXEC",75,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU1NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",76,0)
 S:$L(ECU2) ECXPPC2=$$PRVCLASS^ECXUTL(ECU2,ECDT),ECU2A="2"_$P(ECU2,";")
"RTN","ECXEC",77,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU2,ECDT)
"RTN","ECXEC",78,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU2NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",79,0)
 S:$L(ECU3) ECXPPC3=$$PRVCLASS^ECXUTL(ECU3,ECDT),ECU3A="2"_$P(ECU3,";")
"RTN","ECXEC",80,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU3,ECDT)
"RTN","ECXEC",81,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU3NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",82,0)
 S:$L(ECU4) ECXPPC4=$$PRVCLASS^ECXUTL(ECU4,ECDT),ECU4A="2"_$P(ECU4,";")
"RTN","ECXEC",83,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU4,ECDT)
"RTN","ECXEC",84,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU4NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",85,0)
 S:$L(ECU5) ECXPPC5=$$PRVCLASS^ECXUTL(ECU5,ECDT),ECU5A="2"_$P(ECU5,";")
"RTN","ECXEC",86,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU5,ECDT)
"RTN","ECXEC",87,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU5NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",88,0)
 ;144 add 2 more providers, prov per class, prov npi cvw
"RTN","ECXEC",89,0)
 S:$L(ECU6) ECXPPC6=$$PRVCLASS^ECXUTL(ECU6,ECDT),ECU6A="2"_$P(ECU6,";")
"RTN","ECXEC",90,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU6,ECDT)
"RTN","ECXEC",91,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU6NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",92,0)
 S:$L(ECU7) ECXPPC7=$$PRVCLASS^ECXUTL(ECU7,ECDT),ECU7A="2"_$P(ECU7,";")
"RTN","ECXEC",93,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU7,ECDT)
"RTN","ECXEC",94,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU7NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",95,0)
 ;change for version 2 where ECP is a variable pointer and we want to
"RTN","ECXEC",96,0)
 ;expand it category = category or null if stored as 0
"RTN","ECXEC",97,0)
 D:ECP[";"
"RTN","ECXEC",98,0)
 .S ECP=$S(ECP["ICPT":$P(^ICPT(+ECP,0),U)_"01",ECP<90000:$P(^EC(725,+ECP,0),U,2)_"N",1:$P(^EC(725,+ECP,0),U,2)_"L"),ECC=$S(ECC:ECC,1:"")
"RTN","ECXEC",99,0)
 ;pick up EC to PCE data from "P" in File 721
"RTN","ECXEC",100,0)
 S ECPCE=$G(^ECH(ECDA,"P")),ECPCE1=$P(ECPCE,U),ECPCE2=$P(ECPCE,U,2)
"RTN","ECXEC",101,0)
 S ECPCE7=$S($P(ECPCE,U,7)=1:"Y",1:"N")
"RTN","ECXEC",102,0)
 S ECXCMOD=""
"RTN","ECXEC",103,0)
 I $D(^ECH(ECDA,"MOD")) D
"RTN","ECXEC",104,0)
 .S MOD=0,M=""
"RTN","ECXEC",105,0)
 .F  S MOD=$O(^ECH(ECDA,"MOD",MOD)) Q:'MOD  S M=$P(^(MOD,0),U) D
"RTN","ECXEC",106,0)
 ..I M S ECXCMOD=ECXCMOD_M_";"
"RTN","ECXEC",107,0)
 .K MOD,M
"RTN","ECXEC",108,0)
 S:ECP?1.N ECP=$$CPT^ECXUTL3($E(ECP,1,5),"",ECV)
"RTN","ECXEC",109,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPCE1,ECXCMOD,ECV)
"RTN","ECXEC",110,0)
 ;
"RTN","ECXEC",111,0)
 ;- Observation Patient Indicator (YES/NO)
"RTN","ECXEC",112,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXEC",113,0)
 ;
"RTN","ECXEC",114,0)
 ;- CNH status (YES/NO)
"RTN","ECXEC",115,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXEC",116,0)
 ;
"RTN","ECXEC",117,0)
 ;- encounter classification
"RTN","ECXEC",118,0)
 S (ECXAO,ECXECE,ECXHNC,ECXMIL,ECXIR,ECXSHAD)="",ECXVISIT=$P(ECCH,U,21)
"RTN","ECXEC",119,0)
 I ECXVISIT'="" D
"RTN","ECXEC",120,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXEC",121,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXEC",122,0)
 .S ECXHNC=$G(ECXVIST("HNC")),ECXMIL=$G(ECXVIST("MST")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXEC",123,0)
 .S ECXECL=$G(ECXVIST("ENCCL")),ECXESC=$G(ECXVIST("ENCSC")) ;144
"RTN","ECXEC",124,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXEC",125,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXEC",126,0)
 ; - PROJ 112/SHAD Indicator
"RTN","ECXEC",127,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXEC",128,0)
 ; ******* - PATCH 127, ADD PATCAT CODE 
"RTN","ECXEC",129,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXEC",130,0)
 ;
"RTN","ECXEC",131,0)
 ; - Get national patient record flag Indicator if exist
"RTN","ECXEC",132,0)
 D NPRF^ECXUTL5
"RTN","ECXEC",133,0)
 ;
"RTN","ECXEC",134,0)
 ; - If no encounter number don't file record
"RTN","ECXEC",135,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSS,ECCS)
"RTN","ECXEC",136,0)
 D:ECXENC'="" FILE
"RTN","ECXEC",137,0)
 Q
"RTN","ECXEC",138,0)
 ;
"RTN","ECXEC",139,0)
FILE ;file record in #727.815
"RTN","ECXEC",140,0)
 ;node0
"RTN","ECXEC",141,0)
 ;ecode=inst ECL^dfn ECXDFN^ssn ECXSSN^name ECXPNM^i/o status ECXA^day^
"RTN","ECXEC",142,0)
 ;DSS unit ECDU^category ECC^procedure ECP^volume ECV^
"RTN","ECXEC",143,0)
 ;cost center ECCS^ordering sec ECO^section ECM^
"RTN","ECXEC",144,0)
 ;provider ECU1A^prov per cls ECXPPC1^prov 2 ECU2A^prov#2 per cls ECXPPC2
"RTN","ECXEC",145,0)
 ;^prov 3 ECU3A^prov#3 per cls ECXPPC3^^mov # ECXMN^treat spec ECXTS
"RTN","ECXEC",146,0)
 ;^time ECTM^primary care team ECPTTM^primary care provider ECPTPR
"RTN","ECXEC",147,0)
 ;^pce cpt code (ECXCPT)^primary icd-9 code ECXICD9^secondary icd-9
"RTN","ECXEC",148,0)
 ;ECXICD91^secondary icd-9 ECXICD92^secondary icd-9 ECXICD93^secondary 
"RTN","ECXEC",149,0)
 ;icd-9 ECXICD94^agent orange ECXAST^radiation exposure ECXRST^
"RTN","ECXEC",150,0)
 ;environmental contaminants ECXEST^service connected ECPTPR^sent to pce
"RTN","ECXEC",151,0)
 ;ECPCE7^^dss identifier ECDSS^dss dept
"RTN","ECXEC",152,0)
 ;node1
"RTN","ECXEC",153,0)
 ;mpi ECXMPI^dss dept ECXDSSD^PLACEHOLDER
"RTN","ECXEC",154,0)
 ;placeholder^placeholder^placeholder^
"RTN","ECXEC",155,0)
 ;placeholder^pc prov person class ECCLAS^
"RTN","ECXEC",156,0)
 ;assoc pc prov ECASPR^assoc pc prov person class ECCLAS2^
"RTN","ECXEC",157,0)
 ;placeholder^
"RTN","ECXEC",158,0)
 ;divison ECXDIV^mst status ECXMST^dom ECXDOM^date of birth ECXDOB^
"RTN","ECXEC",159,0)
 ;enrollment category ECXCAT^ enrollment status ECXSTAT^enrollment
"RTN","ECXEC",160,0)
 ;priority ECXPRIOR^period of service ECXPOS^purple heart indicator
"RTN","ECXEC",161,0)
 ;ECXPHI^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXEC",162,0)
 ;ao loc ECXAOL^ord div ECXODIV^contr st dt ECXCSDT^
"RTN","ECXEC",163,0)
 ;contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXEC",164,0)
 ;production division ECXPDIV^eligibility ECXELIG^
"RTN","ECXEC",165,0)
 ;head & neck cancer ind. ECXHNCI^ethnicity ECXETH^race1 ECXRAC1
"RTN","ECXEC",166,0)
 ;enrollment location ECXENRL^^enrollment priority
"RTN","ECXEC",167,0)
 ;ECXPRIOR_enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient
"RTN","ECXEC",168,0)
 ;type ECXPTYPE^combat vet elig ECXCVE
"RTN","ECXEC",169,0)
 ;NODE 2
"RTN","ECXEC",170,0)
 ;combat vet elig end date ECXCVEDT
"RTN","ECXEC",171,0)
 ;enc cv eligible ECXCVENC^national patient record flag
"RTN","ECXEC",172,0)
 ;ECXNPRFI^emerg response indic(FEMA) ECXERI^agent orange indic ECXAO^
"RTN","ECXEC",173,0)
 ;environ contam ECXECE^head/neck cancer ECXHNC^encntr mst ECXMIL
"RTN","ECXEC",174,0)
 ;^radiation ECXIR^OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT
"RTN","ECXEC",175,0)
 ;^associate pc provider npi ECASNPI^primary care provider npi ECPTNPI^
"RTN","ECXEC",176,0)
 ;provider npi ECU1NPI^provider #2 ECU2NPI^provider #3 ECU3NPI^
"RTN","ECXEC",177,0)
 ;shad status ECXSHADI^shad encounter ECXSHAD^patcat ECXPATCAT^
"RTN","ECXEC",178,0)
 ;prov #4 ECU4A^prov #4 pc ECXPPC4^prov #4 ECXU4NPI^prov #5 ECU5A^
"RTN","ECXEC",179,0)
 ;prov #5 pc ECXPPC5^prov #5 ECXU5NPI^
"RTN","ECXEC",180,0)
 ;primary ICD-10 code (currently null) ECXICD10P^Secondary ICD-10 Code #1 (currently null) ECXICD101^
"RTN","ECXEC",181,0)
 ;Secondary ICD-10 Code #2 (currently null) ECXICD102^Secondary ICD-10 Code #3 (currently null) ECXICD103^
"RTN","ECXEC",182,0)
 ;Secondary ICD-10 Code #4 (currently null) ECXICD104
"RTN","ECXEC",183,0)
 ;NODE 3
"RTN","ECXEC",184,0)
 ;Encounter SC ECXESC^Vietnam Status ECXVIET^
"RTN","ECXEC",185,0)
 ;Provider #6 ECU6A^ Prov #6 PC ECXPPC6^Prov #6 NPI ECU6NPI^Provider #7 ECU7A^ Prov #7 PC ECXPPC7^Prov #7 NPI ECU7NPI
"RTN","ECXEC",186,0)
 ;National 4CHAR code ECX4CHAR^Clinic IEN ECAC^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL
"RTN","ECXEC",187,0)
 ;
"RTN","ECXEC",188,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXEC",189,0)
 N ECXDATA
"RTN","ECXEC",190,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXEC",191,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXEC",192,0)
 ;done
"RTN","ECXEC",193,0)
 N DA,DIK
"RTN","ECXEC",194,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXEC",195,0)
 S ECODE=EC7_U_EC23_U_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXEC",196,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECDT,ECXYM)_U_ECDU_U_ECC_U
"RTN","ECXEC",197,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECU1A_U_ECXPPC1_U
"RTN","ECXEC",198,0)
 S ECODE=ECODE_ECU2A_U_ECXPPC2_U_ECU3A_U_ECXPPC3_U_U_ECXMN_U
"RTN","ECXEC",199,0)
 S ECODE=ECODE_ECXTS_U_ECTM_U
"RTN","ECXEC",200,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_ECXCPT_U_ECXICD9_U
"RTN","ECXEC",201,0)
 S ECODE=ECODE_ECXICD91_U_ECXICD92_U_ECXICD93_U
"RTN","ECXEC",202,0)
 S ECODE=ECODE_ECXICD94_U_ECXAST_U_ECXRST_U_ECXEST_U
"RTN","ECXEC",203,0)
 S ECODE=ECODE_ECSC_U_ECPCE7_U_U_ECDSS_U_U
"RTN","ECXEC",204,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_ECCLAS_U
"RTN","ECXEC",205,0)
 S ECODE1=ECODE1_U_ECASPR_U_ECCLAS2_U_U_ECXDIV_U
"RTN","ECXEC",206,0)
 S ECODE1=ECODE1_ECXMST_U_ECXDOM_U_ECXDOB_U_ECXCAT_U_ECXSTAT_U
"RTN","ECXEC",207,0)
 S ECODE1=ECODE1_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXEC",208,0)
 S ECODE1=ECODE1_ECXODIV_U_ECXCSDT_U_ECXCEDT_U_ECXCTYP_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXEC",209,0)
 S ECODE1=ECODE1_ECXELIG_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXEC",210,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL_U
"RTN","ECXEC",211,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U
"RTN","ECXEC",212,0)
 I ECXLOGIC>2004 S ECODE2=ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXEC",213,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXEC",214,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECU1NPI_U_ECU2NPI_U_ECU3NPI
"RTN","ECXEC",215,0)
 ; PATCAT added
"RTN","ECXEC",216,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXSHADI_U_ECXSHAD_U_ECXPATCAT
"RTN","ECXEC",217,0)
 I ECXLOGIC>2011 S ECODE2=ECODE2_U_ECU4A_U_ECXPPC4_U_ECU4NPI_U_ECU5A_U_ECXPPC5_U_ECU5NPI
"RTN","ECXEC",218,0)
 I ECXLOGIC>2012 S ECODE2=ECODE2_U_ECXICD10P_U_ECXICD101_U_ECXICD102_U_ECXICD103_U_ECXICD104_U
"RTN","ECXEC",219,0)
 I ECXLOGIC>2013 S ECODE3=ECXESC_U_ECXVIET_U_ECU6A_U_ECXPPC6_U_ECU6NPI_U_ECU7A_U_ECXPPC7_U_ECU7NPI_U_ECX4CHAR_U_ECAC_U_ECXCLST_U_ECXECL ; 144
"RTN","ECXEC",220,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),^ECX(ECFILE,EC7,3)=$G(ECODE3),ECRN=ECRN+1 ;144
"RTN","ECXEC",221,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXEC",222,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXEC",223,0)
 Q
"RTN","ECXEC",224,0)
 ;
"RTN","ECXEC",225,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXEC",226,0)
 N OUT
"RTN","ECXEC",227,0)
 S ECHEAD="ECS",OUT=0
"RTN","ECXEC",228,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXEC",229,0)
 Q:($G(ECXQQ))
"RTN","ECXEC",230,0)
 W @IOF,!,"Setting up for ",ECPACK," DSS Extract -",!
"RTN","ECXEC",231,0)
 W !,"   Reminder: A maintenance option, ECS Extract Unusual Volume Report, may"
"RTN","ECXEC",232,0)
 W !,"   assist in identifying problematic data. It should be run before the"
"RTN","ECXEC",233,0)
 W !,"   Event Capture Extract is performed.",!
"RTN","ECXEC",234,0)
 D PAUSE^ECXTRAC
"RTN","ECXEC",235,0)
 I OUT S ECFILE=""
"RTN","ECXEC",236,0)
 Q
"RTN","ECXEC",237,0)
 ;
"RTN","ECXEC",238,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXEC",239,0)
 N ECXQQ
"RTN","ECXEC",240,0)
 S ECXQQ=1 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXKILL")
0^50^B9656369^B9492478
"RTN","ECXKILL",1,0)
ECXKILL ;BIR/DMA,PTD-Kill Local Variables ;11/23/10  13:49
"RTN","ECXKILL",2,0)
 ;;3.0;DSS EXTRACTS;**9,8,21,24,31,39,49,84,89,105,112,127,132,136,144**;Dec 22, 1997;Build 9
"RTN","ECXKILL",3,0)
 ;
"RTN","ECXKILL",4,0)
 K %,%DT,%Y,%ZIS,A,A1,A2,ABR,B,BY,D,D0,D1,DA,DAT,DATA,DATA1,DATA2,DATA6
"RTN","ECXKILL",5,0)
 K DATAOP,DD,DFN,DHDH,DIC,DIE,DIK,DINUM,DIQ
"RTN","ECXKILL",6,0)
 K ECDAPRNP,ECDPRNPI,ECISNPI,ECDOCNPI,ECX4CHAR,ECXDRGC,ECXIVAC,ECXIVSC,UNITCOST
"RTN","ECXKILL",7,0)
 K ECU1NPI,ECU2NPI,ECU3NPI,ECU4NPI,ECU5NPI,ECU4A,ECU5A,ECXPPC4,ECXPPC5
"RTN","ECXKILL",8,0)
 K DIR,DIRUT,DO,DR,DTOUT,DUOUT,EC,EC0,EC1,EC10,EC11,EC16,EC2,EC23,EC2NODE
"RTN","ECXKILL",9,0)
 K EC3,EC42,EC50,EC6,EC7,ECA,ECAC,ECACA,ECAD,ECADM,ECALL
"RTN","ECXKILL",10,0)
 K ECANE,ECAO,ECARG,ECAS,ECAT,ECATSV,ECB,ECC,ECCA,ECCAN,ECCAT,ECCH,ECCN
"RTN","ECXKILL",11,0)
 K ECCNT,ECCS,ECCSC,ECD,ECD0,ECD1,ECDA,ECDAL,ECDAT,ECASA
"RTN","ECXKILL",12,0)
 K ECDATA,ECDATA1,ECDATE,ECDEN,ECDEX,ECDF,ECDFN,ECDFN0,ECDI,ECDIA,ECDIF
"RTN","ECXKILL",13,0)
 K ECDIV,ECDL,ECDN,ECDNEW,ECDO,ECDOC,ECDR,ECDRG,ECDS,ECDSSU,ECDT,ECDTTM
"RTN","ECXKILL",14,0)
 K ECDU,ECEC0,ECED,ECED1,ECEDN,ECEDNEW,ECF,ECF1,ECFD,ECFDT,ECFILE,ECFK
"RTN","ECXKILL",15,0)
 K ECFL,ECFR,ECGRP,ECH,ECHD,ECHEAD,ECI,ECID,ECIEN,ECIFN,ECIN,CCDORD
"RTN","ECXKILL",16,0)
 K ECINST,ECINV,ECIV,ECJ,ECK,ECL,ECL1,ECLAN,ECLAST,ECLDT,ECLINK,ECLIST
"RTN","ECXKILL",17,0)
 K ECLL,ECLN,ECLNC,ECLOC,ECLRN,ECLX,ECLY,ECM,ECMAX,ECMIN,CCDGVN,CCUNIT
"RTN","ECXKILL",18,0)
 K ECXMISS,ECMN,ECMOD,ECMODS,ECMORE,ECMS,ECMSG,ECMSN,ECMT,ECMW,ECMY,ECN
"RTN","ECXKILL",19,0)
 K ECNA,ECNDC,ECNDF,ECNFC,ECNL,ECNO,ECNODE,ECNOGO,ECXADT,ECXATM,CCIEN
"RTN","ECXKILL",20,0)
 K ECNT,ECO,ECO0,ECO1,ECO2,ECODE,ECODE0,ECODE1,ECODE2,ECODE3,ECONE,ECOPAY
"RTN","ECXKILL",21,0)
 K ECOB,ECATTNPI,ECPWNPI,ECXUSNPI,ECPWNPI,ECXOEF,ECXOEFDT,ECPLACE,CCTYPE
"RTN","ECXKILL",22,0)
 K ECOPAYT,ECORTY,ECOS,ECP,ECPACK,ECPCE,ECPCE1,ECPCE2,ECPCE3,ECPCE4,ECOLD
"RTN","ECXKILL",23,0)
 K ECPCE5,ECPCE6,ECPCE7,ECPIECE,ECPN,ECPRC,ECPRO,ECODE2,ECXASTA,ECXAMED
"RTN","ECXKILL",24,0)
 K ECPROF,ECPT,ECPTF,ECPTPR,ECPTTM,ECQ,ECQT,ECQTY,ECRD,ECRE,ECRED,ECREF
"RTN","ECXKILL",25,0)
 K ECRFL,ECRN,ECROU,ECRR,ECRS,ECRSD,ECRTN,ECRX,ECS,ECSA,ECSC,ECXSCADT
"RTN","ECXKILL",26,0)
 K ECSD,ECSD1,ECSDN,ECSN,ECSR,ECSS,ECST,ECSTOP,ECSU,ECT,ECT1,ECTD,ECTD1
"RTN","ECXKILL",27,0)
 K ECTEMP,ECTM,ECTNTL,ECTOTAL,ECTREAT,ECTRT,ECTS,ECTY,ECXLOGIC,ECXDATES,ECXEST,ECXECE
"RTN","ECXKILL",28,0)
 K ECLRBILL,ECDSSFK,ECLRTNM,ECLRDTNM,ECXPROPC,ECPRONPI,ECCLAS,ECPTNPI,ECXORN,ECXORT,ECXTSTNM
"RTN","ECXKILL",29,0)
 K ACTDT,DRG,DRUG,ECPROPC,ECVACL,ECVNDC,ECXENC,ECXENRL,ECXERI,ECXERR,ECXIVID,ECXNOD,ECXNPRFI,ECXOX,ECXOSC,ECXSCATM,ECXUSRTN,IDAT,OK,PIEN,PLACEHLD,SCADT
"RTN","ECXKILL",30,0)
 D ^ECXKILL1
"RTN","ECXKILL",31,0)
 ;
"RTN","ECXKILL",32,0)
AUDIT ;kill audit report variables, close slave printer
"RTN","ECXKILL",33,0)
 K %DT,ECX,ECXARRAY,ECXACC,ECXALL,ECXAUD,ECXCODE,ECXD,ECXDEF,ECXDESC,ECXDIV
"RTN","ECXKILL",34,0)
 K ECXRCST,ECXRQST,ECXEND,ECXERR,ECXEXT,ECXHEAD,ECXLOC,ECXPGM,ECXPHCPC
"RTN","ECXKILL",35,0)
 K ECXPRIME,ECXPRO,ECXREPT,ECXRUN,ECXSAVE,ECXSTART,ECXSRCE
"RTN","ECXKILL",36,0)
 K ECXCTAMT,ECXFEKEY,ECXFELOC,ECXFORM,ECXGRPR,ECXHCPC,ECXPHCPC,ECXHCPCS
"RTN","ECXKILL",37,0)
 K ECXPODX,ECXPODX1,ECXPODX2,ECXPODX3,ECXPODX4,ECXPODX5,ECPANPI
"RTN","ECXKILL",38,0)
 K ECXLAB,ECXLLC,ECXLMC,ECXQTY,ECXREQ,ECXSTAT,ECXTYPE
"RTN","ECXKILL",39,0)
 K IO("Q"),POP,DIR,DIC,DIE,DA,DR,DO,DIRUT,DUOUT,DTOUT
"RTN","ECXKILL",40,0)
 K ^TMP($J)
"RTN","ECXKILL",41,0)
 I IO=IO(0),IOST'="C" D ^%ZISC
"RTN","ECXKILL",42,0)
 Q
"RTN","ECXKILL1")
0^49^B14673623^B13723476
"RTN","ECXKILL1",1,0)
ECXKILL1 ;ALB/ESD Kill Local DSS Variables (continued) ;7/25/11  11:03
"RTN","ECXKILL1",2,0)
 ;;3.0;DSS EXTRACTS;**39,46,89,120,127,132,136,144**;Dec 22, 1997;Build 9
"RTN","ECXKILL1",3,0)
 ;
"RTN","ECXKILL1",4,0)
 K ECUD,ECUI,ECUN,ECUN1,ECUNIT,ECURG,ECUT,ECUT2,ECUT3,ECV,ECW,ECWC,ECWD
"RTN","ECXKILL1",5,0)
 K ECX,ECXB,ECXLNCNT,ECXMDA,ECXMDT,ECXNOW,ECXQUEUE,ECXS,ECXSTART
"RTN","ECXKILL1",6,0)
 K ECY,ECYM,ECZ,ECZNODE,ELIG,ENL,FAC,FLDS,FR,I,ID,IOP,J,K,L,LOC,LOS,LRDF
"RTN","ECXKILL1",7,0)
 K OPC,P,P1,P11,P2,P3,POP,Q,RD,RESP,QFLG,ECXCONC
"RTN","ECXKILL1",8,0)
 K SC,SRDA,SRNM,STC,SU,TEN,TES,TIME,TO,TOT,VAERR,VAIP,W,X,X1,X2,XMDUZ
"RTN","ECXKILL1",9,0)
 K XMER,XMFROM,XMREC,XMRG,XMSER,XMSUB,ECXLH,ECXLC,ECXMC
"RTN","ECXKILL1",10,0)
 K XMTEXT,XMY,XMZ,XQMSG,XQSOP,XQSUB,XX,Y,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","ECXKILL1",11,0)
 K ZTSK,ECSTA,ECCTY,STATE,COUNTY,ECVER,ECXADMS
"RTN","ECXKILL1",12,0)
 K ECCPT,ECEKG,ECICD,ECPROV,ECREC,ECVAL,ECVIS,NCNTR,PTADT,STOP,ECIVRM
"RTN","ECXKILL1",13,0)
 K ECOR,ECWK,ECWKLD,LREDT,LRSDT,FD,ECHL,ECARSC,ECX2TME
"RTN","ECXKILL1",14,0)
 K ECDTST,ECLTST,ECODE2,ECORDT,ECORTM,ECRDDT,ECRDTM,ECRES,ECWCDA,ECXINST
"RTN","ECXKILL1",15,0)
 K ECXATT,ECXATTL,ECXATTN,ECXLOS,ECXLOSA,ECXLOSP,ECXPRV,ECXPRVL,ECXPRVN
"RTN","ECXKILL1",16,0)
 K ECXTRT,ECXTRTL,ECXTRTN,ECXSPC,ECXSPCL,ECXSPCN,ECCSC,ECXSC,ECXP1
"RTN","ECXKILL1",17,0)
 K ECXP2,ECXP3,ECXDSSI,ECXDSSD,ECXYM,ECXDIV,ECXDAY,ECXSSN,ECXDATE,ECXPNM
"RTN","ECXKILL1",18,0)
 K ECXDFN,ECXA,ECPTNPI,ECCLAS,ECCLAS2,ECASPR,ECASNPI,ECSRNPI,ECATNPI
"RTN","ECXKILL1",19,0)
 K ECSANPI,ECXCPT,ECXCMOD,ECXFAC,ECXMN,ECXTS,ECXENEL,ECXSAI,ECXPAYOR
"RTN","ECXKILL1",20,0)
 K ECXAST,ECXEST,ECXRST,ECXMST,ECXMIL,ECXPST,ECXPLOC,ECXPOS,ECXSEX,ECXDOB
"RTN","ECXKILL1",21,0)
 K ECXRELG,ECXEMP,ECXHI,ECXSTATE,ECXCNTY,ECXZIP,ECXMAR,ECXRACE,ECXVET
"RTN","ECXKILL1",22,0)
 K ECXVNS,ECXELIG,ECXENRL,ECXPRNPI,ECXPRCLS,ECXWPRV,ECXW,ECXCNT,ECXCOST
"RTN","ECXKILL1",23,0)
 K ECXADM,ECXPROV,ECXPROVP,ECXPROVN,ECXBILST,ECU1A,ECU2A,ECU3A,ECU1NPI
"RTN","ECXKILL1",24,0)
 K ECU2NPI,ECU3NPI,ECDENNPI,ECXWRD,ECXWTO,ECXAO,ECXIR,ECXCLIN,ECXICD9
"RTN","ECXKILL1",25,0)
 K ECXIEN,ECXKEY,ECXMPI,ECXSTOP,ECXSVC,ECXOBS,ECXADMDT,ECXAOL,ECXCEDT
"RTN","ECXKILL1",26,0)
 K ECXCIEN,ECXCNH,ECXCSDT,ECXCTYP,ECXENC,ECXOBS,ECXODIV,ECXSHAD
"RTN","ECXKILL1",27,0)
 K ECXORDDT,ECXORDPH,ECXORDPR,ECXORDST,ECXDAPR,ECXDPCT,ECXDPR,ECXRPHY
"RTN","ECXKILL1",28,0)
 K ECXPDIV,ECXATYP,ECXPVST,ECXSADM,ECXMTST,ECXQ,ECXHNCI,ECXETH,ECXRC1
"RTN","ECXKILL1",29,0)
 K ECXPHI,ECXCNHU,ECXCAT,ECXPRIOR,ECXOPNPI,ECXAOT,ECXCNTRY,ECXSHADI,ECXPATCAT
"RTN","ECXKILL1",30,0)
 K ECU,ECU1,ECU2,ECU3,ECAC1,ECAC1S,ECAC2,ECAC2S,ECDSS,ECUPCE,ECUSTOP
"RTN","ECXKILL1",31,0)
 K ECXCVE,ECXCVEDT,ECXCVENC,ECXDOM,ECXDSSP,ECXEUSTA,ECXINP,ECXIO,ICD9
"RTN","ECXKILL1",32,0)
 K ECXMEAN,ECXPPC1,ECXPPC2,ECXPPC3,ECXPTYPE,ECXREL,ECXSBGRP,ECXUESTA
"RTN","ECXKILL1",33,0)
 K ECXPRV1,ECXPRV2,ECXPRV3,ECXPRV4,ECXPRV5,ECXPRV6,ECXPRV7,ECXPPC4,ECXPPC5,ECXPPC6,ECXPPC7,ECPR1NPI
"RTN","ECXKILL1",34,0)
 K ECPR2NPI,ECPR3NPI,ECPR4NPI,ECPR5NPI,ECPR6NPI,ECPR7NPI,COUNT,ECTHLD,ECXOPT
"RTN","ECXKILL1",35,0)
 K ECXICD91,ECXICD92,ECXICD93,ECXICD94,ECSP1,ECSP2,ECSP3,ECSP4,ECSP5,ECSP6,ECSP7
"RTN","ECXKILL1",36,0)
 K ECSPPC1,ECSPPC2,ECSPPC3,ECSPPC4,ECSPPC5,ECSPPC6,ECSPPC7,ECSPNPI1,ECSPNPI2,ECSPNPI3,ECSPNPI4,ECSPNPI5,ECSPNPI6,ECSPNPI7
"RTN","ECXKILL1",37,0)
 K ECXUNIT,ECXVIET,CNT,I,ECXCFLG,ECXBUK1,ECXBUK2,PROVS,PROVSPC,PROVSNPI
"RTN","ECXKILL1",38,0)
 K ECU4,ECU5,ECU6,ECU7,ECU4A,ECU5A,ECU6A,ECU7A,ECU4NPI,ECU5NPI,ECU6NPI,ECU7NPI,COUNTS,ALEN,ECPRNPI,ECXCBOC,ECXHNC,ECXICD9P,ECXOBI,ECXPCPNP,ECXTI,ECXVISIT,ECXVIST
"RTN","ECXKILL1",39,0)
 K ECXCPT,ECXCPT1,ECXCPT2,ECXCPT3,ECXCPT4,ECXCPT5,ECXCPT6,ECXCPT7,ECXCPT8,ECTOTC,ECTYP,ECPRVNPI,ECXNPPDC,ECXSTAT2,PT1
"RTN","ECXKILL1",40,0)
 K DIVISION,DONE,ECDAY,ECENEC,ECENMST,ECENRI,ECENSC,ECHL2,ECHL2S,ECHLS,ECTIME,ECXADD,ECXATNPI,ECXJ,ECXMNS,ECXMOD,ECXNPPDT,ECXOS,ECXPPC,ECXQV,ECXTM,ECXVST,ELGA,FHDFN,GTOT,LASTDAY,PRODAY,SDATE
"RTN","ECXKILL1",41,0)
 K ECXICD101,ECXICD102,ECXICD103,ECXICD104,ECXICD10P,ECXOPPC,ECXNEW,ECXOPPC,ECXCL,ECXCLS,ECXCOMP,ECXBCDD,ECXBCDG,ECXBCIF,ECXBCUA,ECVOL
"RTN","ECXKILL1",42,0)
 Q
"RTN","ECXLABN")
0^53^B46690965^B44530777
"RTN","ECXLABN",1,0)
ECXLABN ;ALB/JAP,BIR/CML-Lab Extract for DSS (New Format - With LMIP Codes) ;4/30/13  12:33
"RTN","ECXLABN",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,28,24,30,31,32,33,39,42,46,70,71,80,92,107,105,112,127,132,144**;Dec 22, 1997;Build 9
"RTN","ECXLABN",3,0)
BEG ;entry point
"RTN","ECXLABN",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABN",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABN",6,0)
 Q
"RTN","ECXLABN",7,0)
 ;
"RTN","ECXLABN",8,0)
START ; entry when queued
"RTN","ECXLABN",9,0)
 K ^LRO(64.03),^TMP($J,"ECXP")
"RTN","ECXLABN",10,0)
 N ECDOCPC
"RTN","ECXLABN",11,0)
 S LRSDT=ECSD,LREDT=ECED,QFLG=0
"RTN","ECXLABN",12,0)
 D ^LRCAPDSS
"RTN","ECXLABN",13,0)
 ;quit if no completion date for API compile
"RTN","ECXLABN",14,0)
 I '$P($G(^LRO(64.03,1,1,1,0)),U,4) Q
"RTN","ECXLABN",15,0)
 ;quit if tasked and user sends stop request
"RTN","ECXLABN",16,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD D  Q
"RTN","ECXLABN",17,0)
 .S QFLG=1
"RTN","ECXLABN",18,0)
 .K ^LRO(64.03) S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",19,0)
 ;otherwise, continue
"RTN","ECXLABN",20,0)
 K ECXDD D FIELD^DID(64.03,1,,"SPECIFIER","ECXDD")
"RTN","ECXLABN",21,0)
 S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)),ECLRN=1 K ECXDD
"RTN","ECXLABN",22,0)
 F  S ECLRN=$O(^LRO(64.03,ECLRN)) Q:'ECLRN  D  Q:QFLG
"RTN","ECXLABN",23,0)
 .Q:'$D(^LRO(64.03,ECLRN,0))
"RTN","ECXLABN",24,0)
 .S EC1=^LRO(64.03,ECLRN,0),ECDOC=ECPROF_$P(EC1,U,2)
"RTN","ECXLABN",25,0)
 .S ECDOCNPI=$$NPI^XUSNPI("Individual_ID",$P(EC1,U,2),$P(EC1,U,4))
"RTN","ECXLABN",26,0)
 .S:+ECDOCNPI'>0 ECDOCNPI="" S ECDOCNPI=$P(ECDOCNPI,U)
"RTN","ECXLABN",27,0)
 .S ECLOC=$P(EC1,U,15),EC=$P(EC1,U,3),ECDOCPC=$$PRVCLASS^ECXUTL($P(EC1,U,2),$P(EC1,U,4))
"RTN","ECXLABN",28,0)
 .I EC]"" D GET
"RTN","ECXLABN",29,0)
 K ^LRO(64.03),^TMP($J,"ECXP") S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",30,0)
 K ECDOCNPI,ECXAGC,ECXL1,ECXL2
"RTN","ECXLABN",31,0)
 Q
"RTN","ECXLABN",32,0)
 ;
"RTN","ECXLABN",33,0)
GET ;get data
"RTN","ECXLABN",34,0)
 N X,ECXSTN,QFLAG,ECXDFN,ECXESC,ECXCLST ;144
"RTN","ECXLABN",35,0)
 S (ECXESC,ECXCLST)="" ;144
"RTN","ECXLABN",36,0)
 S ECF=$S($P(EC,";",2)="DPT(":2,$P(EC,";",2)="LRT(67,":67,1:0) Q:'ECF
"RTN","ECXLABN",37,0)
 S ECIFN=$P(EC,";"),QFLAG=0
"RTN","ECXLABN",38,0)
 ;resolve ecloc
"RTN","ECXLABN",39,0)
 S ECXL1=+$P(ECLOC,";",1),ECXL2=$P(ECLOC,";",2)
"RTN","ECXLABN",40,0)
 I ECF=2 S ECLOC=$S(ECXL1>0:ECXL1,1:"") I ECXL2]"",ECXL2'="SC(" S ECLOC=""
"RTN","ECXLABN",41,0)
 I ECF=67 D  S ECLOC=ECXSTN
"RTN","ECXLABN",42,0)
 .S (ECXSTN,ECXAGC)=""
"RTN","ECXLABN",43,0)
 .I (ECXL2'="DIC(4,")!('$D(^DIC(4,ECXL1))) S ECXSTN="XXXXX",ECXAGC="XX" Q
"RTN","ECXLABN",44,0)
 .S ECXSTN=$P(^DIC(4,ECXL1,"99"),U,1),ECXAGC=$E($P(^(99),U,5),1,2)
"RTN","ECXLABN",45,0)
 .S:ECXSTN="" ECXSTN="ZZZZZ" S:ECXAGC="" ECXAGC="ZZ"
"RTN","ECXLABN",46,0)
 S ECDT=$P(EC1,U,13),ECD=$P(ECDT,"."),ECTM=$$ECXTIME^ECXUTL(ECDT)
"RTN","ECXLABN",47,0)
 S ECWKLD=$P(EC1,U,11),ECWK="" I $D(^LAM(ECWKLD,0)) S ECWK=$P(^(0),U,2)
"RTN","ECXLABN",48,0)
 S (ECXADMDT,ECTREAT,ECNA,ECSN,ECMN,ECPTTM,ECPTPR,ECCLAS)="",ECA="O",ECXERR=0
"RTN","ECXLABN",49,0)
 S (ECPTNPI,ECASPR,ECCLAS2,ECASNPI)=""
"RTN","ECXLABN",50,0)
 ;get the patient data if record is in file #2
"RTN","ECXLABN",51,0)
 I ECF=2 D PAT(ECIFN,ECDT,.ECXERR) S ECXDFN=ECIFN
"RTN","ECXLABN",52,0)
 Q:ECXERR
"RTN","ECXLABN",53,0)
 ;get patient data if record is in file #67
"RTN","ECXLABN",54,0)
 I ECF=67 S ECSN="000123456",ECNA="RFRL",ECXDFN=0 I $D(^LRT(67,ECIFN,0)) D  Q:QFLAG
"RTN","ECXLABN",55,0)
 .S ECXMPI="",EC0=^LRT(67,ECIFN,0),ECNA=$E($P($P(EC0,U),",")_"    ",1,4)
"RTN","ECXLABN",56,0)
 .S ECSN=$P(EC0,U,9),ECXERI="" D
"RTN","ECXLABN",57,0)
 ..S ECNA=$TR(ECNA,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABN",58,0)
 ..I ECSN="" S ECSN="000123456" Q
"RTN","ECXLABN",59,0)
 ..S ECSN=$TR(ECSN," "),ECSN=$TR(ECSN,"-")
"RTN","ECXLABN",60,0)
 ..I ($L(ECSN)<9)!($L(ECSN)>10) S ECSN="000123456" Q
"RTN","ECXLABN",61,0)
 ..I $L(ECSN)=9,ECSN'?9N S ECSN="000123456" Q
"RTN","ECXLABN",62,0)
 ..I $L(ECSN)=10,ECSN'?9N1"P" S ECSN="000123456"
"RTN","ECXLABN",63,0)
 ..I '$$SSN^ECXUTL5(ECSN,ECF) S QFLAG=1
"RTN","ECXLABN",64,0)
 ;
"RTN","ECXLABN",65,0)
 ;- Only set treating spec (TS) to TS in file #64.03 if it does not exist
"RTN","ECXLABN",66,0)
 I ECA="I",ECTREAT="" S ECTREAT=$P($G(^DIC(45.7,+$P(EC1,U,10),0)),U,2)
"RTN","ECXLABN",67,0)
 S (ECXDOM,ECXDSSD)=""
"RTN","ECXLABN",68,0)
 S X=$G(^ECX(727.831,+ECTREAT,0)) S:X'="" ECXDOM=$P(X,U,2)
"RTN","ECXLABN",69,0)
 ;
"RTN","ECXLABN",70,0)
 ;- Get ordering stop code and ordering date
"RTN","ECXLABN",71,0)
 S ECXORDST=+$P(EC1,U,15),ECXORDST=$S(ECXORDST:$P($G(^ECX(728.44,ECXORDST,0)),U,2),1:"")
"RTN","ECXLABN",72,0)
 S ECXORDDT=$S($P(EC1,U,14):$$ECXDATE^ECXUTL($P(EC1,U,14),ECXYM),1:"")
"RTN","ECXLABN",73,0)
 ;
"RTN","ECXLABN",74,0)
 ;- Get Production Division - ECXDIEN added p-80
"RTN","ECXLABN",75,0)
 N ECXPDIV,ECXDIEN S ECXDIEN=$O(^DIC(4,"D",ECINST,"")),ECXPDIV=$$RADDIV^ECXDEPT(ECXDIEN)  ;P-46
"RTN","ECXLABN",76,0)
 K ECXDIEN
"RTN","ECXLABN",77,0)
 ;
"RTN","ECXLABN",78,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLABN",79,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECA,ECTREAT)
"RTN","ECXLABN",80,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXLABN",81,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXLABN",82,0)
 ;
"RTN","ECXLABN",83,0)
 ;- get  lab billable procedure, dss feeder key, data name, and data location
"RTN","ECXLABN",84,0)
 N ECXLEX
"RTN","ECXLABN",85,0)
 S ECXLEX="" I $D(^LRO(64.03,ECLRN,2)) S ECXLEX=^(2)
"RTN","ECXLABN",86,0)
 S ECLRBILL=$P(ECXLEX,U),ECDSSFK=$P(ECXLEX,U,2)
"RTN","ECXLABN",87,0)
 S ECLRTNM=$P(ECXLEX,U,3),ECLRDTNM=$P(ECXLEX,U,4)
"RTN","ECXLABN",88,0)
 ;- If no encounter number don't file record
"RTN","ECXLABN",89,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECA,ECSN,ECXADMDT,ECD,ECTREAT,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXLABN",90,0)
 ;create extract record only if patient name and accession area exist
"RTN","ECXLABN",91,0)
 I ECNA]"" S ECT=$P(EC1,U,8),ECURG=$P(EC1,U,9),EC=+$P(EC1,U,7) I EC D
"RTN","ECXLABN",92,0)
 .S:ECF=2 ECACA=EC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",93,0)
 .S:ECF=67 ECACA=ECXAGC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",94,0)
 .;--getting LOINC Code
"RTN","ECXLABN",95,0)
 .N ECXLNC,ECLRID,LRIFN,LRIDT,ECRSLT,ECRSP8
"RTN","ECXLABN",96,0)
 .S ECXLNC="",ECLRID=0
"RTN","ECXLABN",97,0)
 .;--getting lab patient id
"RTN","ECXLABN",98,0)
 .S LRIFN=+$P(EC1,U,3)
"RTN","ECXLABN",99,0)
 .I ECF=2 S:$D(^DPT(LRIFN,"LR")) ECLRID=^DPT(LRIFN,"LR")
"RTN","ECXLABN",100,0)
 .I ECF=67 S:$D(^LRT(67,LRIFN,"LR")) ECLRID=^LRT(67,LRIFN,"LR")
"RTN","ECXLABN",101,0)
 .; using ECINST=institution, LRIFN=lab file patient id, EC=test (pt 60), LRIDT=date and time to get loinc
"RTN","ECXLABN",102,0)
 .S LRIDT=$P(EC1,U,12)
"RTN","ECXLABN",103,0)
 .;--looking up test to find subscript to lookup value
"RTN","ECXLABN",104,0)
 .D
"RTN","ECXLABN",105,0)
 ..N ECTST S ECTST=$P(EC1,U,8)
"RTN","ECXLABN",106,0)
 ..S ECPT=$S($D(^LAB(60,ECTST,0)):$P(^LAB(60,ECTST,0),U,12),1:""),ECPT=$P(ECPT,",",2)
"RTN","ECXLABN",107,0)
 ..Q:$G(ECPT)']""  Q:'$D(^LR(ECLRID,"CH",LRIDT,ECPT))
"RTN","ECXLABN",108,0)
 ..S ECRSLT=$$TSTRES^LRRPU(ECLRID,"CH",LRIDT,ECPT,"",1) ;DBIA #4658
"RTN","ECXLABN",109,0)
 ..S ECRSP8=$P(ECRSLT,U,8)
"RTN","ECXLABN",110,0)
 ..S ECXLNC=$P($P(ECRSP8,"!",3),";")
"RTN","ECXLABN",111,0)
 ..Q:$G(ECXLNC)']""
"RTN","ECXLABN",112,0)
 .D FILE
"RTN","ECXLABN",113,0)
 Q
"RTN","ECXLABN",114,0)
 ;
"RTN","ECXLABN",115,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get/set patient data
"RTN","ECXLABN",116,0)
 N X,OK,PT
"RTN","ECXLABN",117,0)
 ;get data
"RTN","ECXLABN",118,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXLABN",119,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECNA=$P(PT,U)
"RTN","ECXLABN",120,0)
 .S ECSN=$P(PT,U,2),ECXMPI=$P(PT,U,3),ECXERI=$P(PT,U,4),ECXCLST=$P(PT,U,5) ;144
"RTN","ECXLABN",121,0)
 ;set data and save for later
"RTN","ECXLABN",122,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXLABN",123,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD,"."),"1;3",.ECXPAT)
"RTN","ECXLABN",124,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXLABN",125,0)
 .S ECNA=ECXPAT("NAME"),ECSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXLABN",126,0)
 .S ECXERI=ECXPAT("ERI")
"RTN","ECXLABN",127,0)
 .S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXLABN",128,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECNA_U_ECSN_U_ECXMPI_U_ECXERI_U_ECXCLST ;144
"RTN","ECXLABN",129,0)
 ;get date specific data
"RTN","ECXLABN",130,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECA=$P(X,U),ECMN=$P(X,U,2),ECTREAT=$P(X,U,3),ECXADMDT=$P(X,U,4)
"RTN","ECXLABN",131,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."),ECPROF)
"RTN","ECXLABN",132,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXLABN",133,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXLABN",134,0)
 Q
"RTN","ECXLABN",135,0)
 ;
"RTN","ECXLABN",136,0)
FILE ;file record
"RTN","ECXLABN",137,0)
 ;node0
"RTN","ECXLABN",138,0)
 ;facility^patient number^SSN (or equivalent)^name^in/out ECA^
"RTN","ECXLABN",139,0)
 ;day^accession area^abbreviation^test^urgency^treating spec^
"RTN","ECXLABN",140,0)
 ;location^provider and file^
"RTN","ECXLABN",141,0)
 ;movement number^file^time^workload code^primary care team^
"RTN","ECXLABN",142,0)
 ;primary care provider
"RTN","ECXLABN",143,0)
 ;node1
"RTN","ECXLABN",144,0)
 ;mpi^dss dept^provider npi^pc provider npi^pc prov person class^
"RTN","ECXLABN",145,0)
 ;assoc pc prov^assoc pc prov person class^assoc pc prov npi^
"RTN","ECXLABN",146,0)
 ;dom ECXDOM^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXLABN",147,0)
 ;ord stop code ECXORDST^ord date ECXORDDT^production division
"RTN","ECXLABN",148,0)
 ;ECXPDIV^^ordering provider person class^emergency response indicator
"RTN","ECXLABN",149,0)
 ;(FEMA) ECXERI^associate pc provider npi ECASNPI^primary care provider
"RTN","ECXLABN",150,0)
 ;npi ECPTNPI^provider npi ECDOCNPI^LOINC code ECLNC^lab billable procedure^dss feeder key
"RTN","ECXLABN",151,0)
 ;node2
"RTN","ECXLABN",152,0)
 ;data name^data location^PATCAT^Encounter SC ECXESC^Camp Lejeune Status ECXCLST
"RTN","ECXLABN",153,0)
 ;ECDOCPC
"RTN","ECXLABN",154,0)
 N DA,DIK
"RTN","ECXLABN",155,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABN",156,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECIFN_U_ECSN_U_ECNA_U_ECA_U
"RTN","ECXLABN",157,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECACA_U_ECT_U_ECURG_U
"RTN","ECXLABN",158,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXLABN",159,0)
 N ECXDATA
"RTN","ECXLABN",160,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECTREAT,.ECXDATA)
"RTN","ECXLABN",161,0)
 S ECTREAT=$G(ECXDATA(7))
"RTN","ECXLABN",162,0)
 ;convert eclrbill  to y/n
"RTN","ECXLABN",163,0)
 S ECLRBILL=$S(ECLRBILL=1:"Y",1:"N")
"RTN","ECXLABN",164,0)
 ;convert ecdssfk to y/n
"RTN","ECXLABN",165,0)
 S ECDSSFK=$S(ECDSSFK=1:"Y",1:"")
"RTN","ECXLABN",166,0)
 ;done
"RTN","ECXLABN",167,0)
 S ECODE=ECODE_ECTREAT_U_ECLOC_U_ECDOC_U_ECMN_U_ECF_U_ECTM_U_ECWK_U
"RTN","ECXLABN",168,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U
"RTN","ECXLABN",169,0)
 ;(ECACA=acc area^abbreviation)
"RTN","ECXLABN",170,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_ECCLAS_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXLABN",171,0)
 S ECODE1=ECODE1_ECXORDST_U_ECXORDDT_U_ECXPDIV_U
"RTN","ECXLABN",172,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECDOCPC
"RTN","ECXLABN",173,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI
"RTN","ECXLABN",174,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECASNPI_U_ECPTNPI_U_ECDOCNPI
"RTN","ECXLABN",175,0)
 I ECXLOGIC>2008 S ECODE1=ECODE1_U_$G(ECXLNC)
"RTN","ECXLABN",176,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECLRBILL_U_ECDSSFK_U,ECODE2=ECLRTNM_U_ECLRDTNM_U_ECXPATCAT
"RTN","ECXLABN",177,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXCLST ;144
"RTN","ECXLABN",178,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXLABN",179,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLABN",180,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABN",181,0)
 Q
"RTN","ECXLABN",182,0)
 ;
"RTN","ECXLABN",183,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABN",184,0)
 S ECHEAD="LAB"
"RTN","ECXLABN",185,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABN",186,0)
 Q
"RTN","ECXLABN",187,0)
 ;
"RTN","ECXLABN",188,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABN",189,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLABR")
0^54^B22824878^B21203653
"RTN","ECXLABR",1,0)
ECXLABR ;ALB/JAP,BIR/CML-LAR Extract for DSS (New Format - With LMIP Codes) ;5/9/13  16:59
"RTN","ECXLABR",2,0)
 ;;3.0;DSS EXTRACTS;**8,24,33,37,39,46,71,80,107,105,112,127,144**;Dec 22, 1997;Build 9
"RTN","ECXLABR",3,0)
BEG ;entry point from option
"RTN","ECXLABR",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABR",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABR",6,0)
 Q
"RTN","ECXLABR",7,0)
 ;
"RTN","ECXLABR",8,0)
START ; entry when queued
"RTN","ECXLABR",9,0)
 N X,OK,ECTRS,ECTRANS,ECTRIEN,ECDOC,ECDOCPC,ECXESC,ECXECL,ECXCLST,ECCLASS,ECRETM,ECREDT,ECSCDT,ECSCTM ;144
"RTN","ECXLABR",10,0)
 K ^LAR(64.036) S LRSDT=ECSD,LREDT=ECED
"RTN","ECXLABR",11,0)
 D ^LRCAPDAR
"RTN","ECXLABR",12,0)
 ;quit if no completion date for API compile
"RTN","ECXLABR",13,0)
 I '$P($G(^LAR(64.036,1,2,1,0)),U,4) Q
"RTN","ECXLABR",14,0)
 ;process temporary lab file #64.036
"RTN","ECXLABR",15,0)
 S QFLG=0,ECLRN=1
"RTN","ECXLABR",16,0)
 F  S ECLRN=$O(^LAR(64.036,ECLRN)) Q:('ECLRN)!(QFLG)  D
"RTN","ECXLABR",17,0)
 .I $D(^LAR(64.036,ECLRN,0))  D
"RTN","ECXLABR",18,0)
 ..S EC1=^LAR(64.036,ECLRN,0),ECF=$P(EC1,U,2)
"RTN","ECXLABR",19,0)
 ..Q:ECF=""
"RTN","ECXLABR",20,0)
 ..S (ECXESC,ECXECL,ECXCLST)="" ;144
"RTN","ECXLABR",21,0)
 ..S ECXDFN=$P(EC1,U,3),ECPTPR=$P($G(EC1),U,11),ECCLASS=""
"RTN","ECXLABR",22,0)
 ..S ECXTIME=$S($P(EC1,U,10)="":"000300",1:$P(EC1,U,10))
"RTN","ECXLABR",23,0)
 ..S ECXDATE=$P(EC1,U,9)_"."_$P(EC1,U,10)
"RTN","ECXLABR",24,0)
 ..I ECPTPR S ECCLASS=$$PRVCLASS^ECXUTL(ECPTPR,ECXDATE)
"RTN","ECXLABR",25,0)
 ..I ECPTPR S ECPTNPI=$$NPI^XUSNPI("Individual_ID",ECPTPR,+ECXDATE) D
"RTN","ECXLABR",26,0)
 ...S:+ECPTNPI'>0 ECPTNPI="" S ECPTNPI=$P(ECPTNPI,U)
"RTN","ECXLABR",27,0)
 ..S ECORDT=$$ECXDATE^ECXUTL($P(EC1,U,4),ECXYM)
"RTN","ECXLABR",28,0)
 ..S ECORTM=$$ECXTIME^ECXUTL($P(EC1,U,4)_"."_$P(EC1,U,5))
"RTN","ECXLABR",29,0)
 ..S ECREDT=$$ECXDATE^ECXUTL($P(EC1,U,6),ECXYM)
"RTN","ECXLABR",30,0)
 ..S ECRETM=$$ECXTIME^ECXUTL($P(EC1,U,6)_"."_$P(EC1,U,7))
"RTN","ECXLABR",31,0)
 ..S ECSCDT=$$ECXDATE^ECXUTL($P(EC1,U,9),ECXYM)
"RTN","ECXLABR",32,0)
 ..S ECSCTM=$$ECXTIME^ECXUTL($P(EC1,U,9)_"."_$P(EC1,U,10))
"RTN","ECXLABR",33,0)
 ..S (ECXADMDT,ECXDOM,ECXDSSD,ECXPNM,ECXSSN,ECXA,ECXMN,ECXTS)=""
"RTN","ECXLABR",34,0)
 ..I ECF=2 D  Q:'OK
"RTN","ECXLABR",35,0)
 ...K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;",.ECXPAT)
"RTN","ECXLABR",36,0)
 ...Q:'OK
"RTN","ECXLABR",37,0)
 ...S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXLABR",38,0)
 ...S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXADMDT=$P(X,U,4)
"RTN","ECXLABR",39,0)
 ...S ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10)
"RTN","ECXLABR",40,0)
 ...S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXLABR",41,0)
 ..;allow for referral patients in future??
"RTN","ECXLABR",42,0)
 ..;I ECF=67 S ECSN="000123456",ECNA="RFRL"
"RTN","ECXLABR",43,0)
 ..;loop on results multiple
"RTN","ECXLABR",44,0)
 ..;
"RTN","ECXLABR",45,0)
 ..;Get production division ECXDIEN added p-80
"RTN","ECXLABR",46,0)
 ..N ECXPDIV,ECXDIEN S ECXDIEN=$O(^DIC(4,"D",ECINST,"")),ECXPDIV=$$RADDIV^ECXDEPT(ECXDIEN) ;p-46
"RTN","ECXLABR",47,0)
 ..K ECXDIEN
"RTN","ECXLABR",48,0)
 ..;- Observation patient indicator (y/n)
"RTN","ECXLABR",49,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXLABR",50,0)
 ..;
"RTN","ECXLABR",51,0)
 ..;- If no encounter number don't file record
"RTN","ECXLABR",52,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,$P(EC1,U,9),ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXLABR",53,0)
 ..S ECRES=0
"RTN","ECXLABR",54,0)
 ..F  S ECRES=$O(^LAR(64.036,ECLRN,1,ECRES)) Q:('ECRES)!(QFLG)  D
"RTN","ECXLABR",55,0)
 ...I $D(^LAR(64.036,ECLRN,1,ECRES,0)) D  Q:QFLG
"RTN","ECXLABR",56,0)
 ....S EC2=^LAR(64.036,ECLRN,1,ECRES,0),ECN=$P(EC2,U),ECRS=$P(EC2,U,2)
"RTN","ECXLABR",57,0)
 ....S ECHL=$E($P(EC2,U,3)),ECWC=+$P(EC2,U,4)
"RTN","ECXLABR",58,0)
 ....I ECWC S ECWC=$P(^LAM(ECWC,0),U,2)
"RTN","ECXLABR",59,0)
 ....S ECLNC=$P(EC2,U,5)
"RTN","ECXLABR",60,0)
 .... ; ******* - PATCH 127, ADD PATCAT CODE
"RTN","ECXLABR",61,0)
 ....S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXLABR",62,0)
 ....;
"RTN","ECXLABR",63,0)
 ....; - Free text results translation
"RTN","ECXLABR",64,0)
 ....S ECTRANS="",ECTRS=ECRS
"RTN","ECXLABR",65,0)
 ....I +ECTRS S ECTRS=$TR(ECTRS,",","") D
"RTN","ECXLABR",66,0)
 .....I (ECTRS?.N)!(ECTRS?.N1".".N) S ECRS=ECTRS
"RTN","ECXLABR",67,0)
 ....F  Q:$E(ECTRS,1)'=" "  S ECTRS=$E(ECTRS,2,$L(ECTRS))
"RTN","ECXLABR",68,0)
 ....F  Q:$E(ECTRS,$L(ECTRS))'=" "  S ECTRS=$E(ECTRS,1,($L(ECTRS)-1))
"RTN","ECXLABR",69,0)
 ....I ECTRS]"" I ECTRS'?.N I ECTRS'?.N1".".N D  ;translate
"RTN","ECXLABR",70,0)
 .....S ECTRS=$TR(ECRS,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABR",71,0)
 .....S ECTRIEN="",ECTRIEN=$O(^ECX(727.7,"B",ECTRS,ECTRIEN))
"RTN","ECXLABR",72,0)
 .....S ECTRANS=$S(ECTRIEN:$P(^ECX(727.7,ECTRIEN,0),U,2),1:5)
"RTN","ECXLABR",73,0)
 ....;
"RTN","ECXLABR",74,0)
 ....I ECWC]"" D FILE
"RTN","ECXLABR",75,0)
 K ^LAR(64.036) S ^LAR(64.036,0)="LAB DSS LAR EXTRACT^64.036^"
"RTN","ECXLABR",76,0)
 Q
"RTN","ECXLABR",77,0)
 ;
"RTN","ECXLABR",78,0)
FILE ;file record
"RTN","ECXLABR",79,0)
 ;node0
"RTN","ECXLABR",80,0)
 ;facility (ECINST)^dfn (ECXDFN)^ssn (ECXSSN)^name(ECXPNM)^in/out (ECXA)^
"RTN","ECXLABR",81,0)
 ;day(ECSCDT)^
"RTN","ECXLABR",82,0)
 ;lab test code (ECN)^results (ECRS)^hi/lo indicator (ECHL)^
"RTN","ECXLABR",83,0)
 ;date ordered (ECORDT)^time ordered (ECORTM)^date ready (ECREDT)^
"RTN","ECXLABR",84,0)
 ;time ready (ECRETM)^
"RTN","ECXLABR",85,0)
 ;movement file # (ECXMN)^treating specialty (ECXTS)^
"RTN","ECXLABR",86,0)
 ;workload code(ECWC)^
"RTN","ECXLABR",87,0)
 ;node1
"RTN","ECXLABR",88,0)
 ;mpi (ECXMPI)^dss dept (ECXDSSD)^dom (ECXDOM)^time (ECSCTM)^
"RTN","ECXLABR",89,0)
 ;observ pat ind (ECXOBS)^encounter num (ECXENC)^prod div ECXPDIV^
"RTN","ECXLABR",90,0)
 ;lab results translation ECXTRANS^ordering provider (ECPTPR)^
"RTN","ECXLABR",91,0)
 ;ordering provider person class (ECCLASS)^ordering provider npi ECPTNPI^LOINC code ECLNC
"RTN","ECXLABR",92,0)
 ;Patient Category PATCAT^Encounter SC ECXESC^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL
"RTN","ECXLABR",93,0)
 N DA,DIK
"RTN","ECXLABR",94,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABR",95,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXLABR",96,0)
 S ECODE=ECODE_ECSCDT_U_$$RJ^XLFSTR(ECN,4,0)_U_ECRS_U_ECHL_U_ECORDT_U
"RTN","ECXLABR",97,0)
 S ECODE=ECODE_$$LJ^XLFSTR(ECORTM,6,0)_U
"RTN","ECXLABR",98,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXLABR",99,0)
 N ECXDATA,ECXTSC
"RTN","ECXLABR",100,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXLABR",101,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXLABR",102,0)
 ;done
"RTN","ECXLABR",103,0)
 S ECODE=ECODE_ECREDT_U_$$LJ^XLFSTR(ECRETM,6,0)_U_ECXMN_U_ECXTSC_U_ECWC_U
"RTN","ECXLABR",104,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXDOM_U_ECSCTM_U_ECXOBS_U_ECXENC_U_ECXPDIV_U_ECTRANS
"RTN","ECXLABR",105,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_2_ECPTPR_U_ECCLASS
"RTN","ECXLABR",106,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECPTNPI
"RTN","ECXLABR",107,0)
 I ECXLOGIC>2008 S ECODE1=ECODE1_U_ECLNC
"RTN","ECXLABR",108,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT
"RTN","ECXLABR",109,0)
 I ECXLOGIC>2013 S ECODE1=ECODE1_U_ECXESC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXLABR",110,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXLABR",111,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLABR",112,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABR",113,0)
 Q
"RTN","ECXLABR",114,0)
 ;
"RTN","ECXLABR",115,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABR",116,0)
 S ECHEAD="LAR"
"RTN","ECXLABR",117,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABR",118,0)
 Q
"RTN","ECXLABR",119,0)
 ;
"RTN","ECXLABR",120,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABR",121,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLARPT")
0^42^B29347556^B22212471
"RTN","ECXLARPT",1,0)
ECXLARPT ;ALB/DHH-LAR Results LOINC CODE Report ;3/7/13  13:11
"RTN","ECXLARPT",2,0)
 ;;3.0;DSS;**112,120,144**;MAY 5, 2008;Build 9
"RTN","ECXLARPT",3,0)
 ;
"RTN","ECXLARPT",4,0)
EN ; entry point
"RTN","ECXLARPT",5,0)
 N X,Y,DATE,ECRUN,ECXDESC,ECXSAVE,ECXTL,ECTHLD,CNT,ECXPORT ;144
"RTN","ECXLARPT",6,0)
 N ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG,ECXFLAG
"RTN","ECXLARPT",7,0)
 ; get today's date
"RTN","ECXLARPT",8,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXLARPT",9,0)
 S ECXDESC="LAB Results LOINC CODE Report"
"RTN","ECXLARPT",10,0)
 S ECXSAVE("EC*")=""
"RTN","ECXLARPT",11,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXLARPT",12,0)
 .K ^TMP($J,"ECXPORT") ;144
"RTN","ECXLARPT",13,0)
 .S ^TMP($J,"ECXPORT",0)="LAR TEST# (#727.29)^LAR TEST NAME (#727.29)^LAR UNITS (#727.29)^LAR LOINC (#727.29)^FLAG^LOCAL TEST NAME (#64)^LOC SPEC TYPE (#64)^LOC WKLD IEN (#64)^LOC WKLD CODE (#64)" ;144
"RTN","ECXLARPT",14,0)
 .S CNT=1 ;144
"RTN","ECXLARPT",15,0)
 .D PROCESS ;144
"RTN","ECXLARPT",16,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXLARPT",17,0)
 .D ^ECXKILL ;144
"RTN","ECXLARPT",18,0)
 W !!,"This report requires 132-column format."
"RTN","ECXLARPT",19,0)
 D EN^XUTMDEVQ("PROCESS^ECXLARPT",ECXDESC,.ECXSAVE)
"RTN","ECXLARPT",20,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXLARPT",21,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXLARPT",22,0)
 D HOME^%ZIS
"RTN","ECXLARPT",23,0)
 D AUDIT^ECXKILL
"RTN","ECXLARPT",24,0)
 Q
"RTN","ECXLARPT",25,0)
 ;
"RTN","ECXLARPT",26,0)
 ;
"RTN","ECXLARPT",27,0)
PROCESS ; entry point for queued report
"RTN","ECXLARPT",28,0)
 S ZTREQ="@" N ECXDIV
"RTN","ECXLARPT",29,0)
 D DEFAULT^ECXDVSN(.ECXDIV,1,.ECXERR)
"RTN","ECXLARPT",30,0)
 Q:ECXERR=1
"RTN","ECXLARPT",31,0)
 N TNUM,DSSNM,TSTNM,SPECNM,RU,ECXLNC,LLNC,I,J,K,L,M,N,WKLD,WKLDCD,SPEC,TA,LTEST,A
"RTN","ECXLARPT",32,0)
 S A("ALL")=""
"RTN","ECXLARPT",33,0)
 D LOINC^ECXUTL6(.A)
"RTN","ECXLARPT",34,0)
 K ^TMP($J,"ECXLARPT")
"RTN","ECXLARPT",35,0)
 S ECXLNC="" F I=0:0 S ECXLNC=$O(^TMP($J,"ECXUTL6",ECXLNC)) Q:ECXLNC']""  D
"RTN","ECXLARPT",36,0)
 . S RU=$P(^TMP($J,"ECXUTL6",ECXLNC),U,4) S:$G(RU)="" RU="UNKNOWN"
"RTN","ECXLARPT",37,0)
 . S TNUM=$P(^TMP($J,"ECXUTL6",ECXLNC),U,2)
"RTN","ECXLARPT",38,0)
 . S DSSNM=$P(^TMP($J,"ECXUTL6",ECXLNC),U,3)
"RTN","ECXLARPT",39,0)
 . I '$O(^TMP($J,"ECXUTL6",ECXLNC,0)) D
"RTN","ECXLARPT",40,0)
 .. S ^TMP($J,"ECXLARPT",TNUM,DSSNM,"ZZZZ","ZZZZ",RU,ECXLNC)=""
"RTN","ECXLARPT",41,0)
 . S WKLD="" F J=0:0 S WKLD=$O(^TMP($J,"ECXUTL6",ECXLNC,WKLD)) Q:WKLD']""  D
"RTN","ECXLARPT",42,0)
 .. S SPEC="" F K=0:0 S SPEC=$O(^TMP($J,"ECXUTL6",ECXLNC,WKLD,SPEC)) Q:SPEC']""  D
"RTN","ECXLARPT",43,0)
 ... S LTEST="" F M=0:0 S LTEST=$O(^TMP($J,"ECXUTL6",ECXLNC,WKLD,SPEC,LTEST)) Q:LTEST']""  D
"RTN","ECXLARPT",44,0)
 .... S SPECNM=$P(^TMP($J,"ECXUTL6",ECXLNC,WKLD,SPEC,LTEST),U,2)
"RTN","ECXLARPT",45,0)
 .... I SPECNM="DEFAULT LOINC" Q  ;ECXUTL6 default loinc not functionally correct
"RTN","ECXLARPT",46,0)
 .... ;I SPECNM="DEFAULT LOINC" S SPECNM="ZZDEFAULT LOINC"
"RTN","ECXLARPT",47,0)
 .... S TSTNM=$P(^TMP($J,"ECXUTL6",ECXLNC,WKLD,SPEC,LTEST),U,3) S:$G(TSTNM)="" TSTNM="UNKNOWN"
"RTN","ECXLARPT",48,0)
 .... S WKLDCD=$S($D(^LAM(WKLD,0)):$P(^(0),"^",2),1:"")
"RTN","ECXLARPT",49,0)
 .... S LLNC=$P(^TMP($J,"ECXUTL6",ECXLNC,WKLD,SPEC,LTEST),U,4)
"RTN","ECXLARPT",50,0)
 .... S ^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM,RU,ECXLNC)=WKLD_"^"_WKLDCD_"^"_LLNC
"RTN","ECXLARPT",51,0)
 D PRINT
"RTN","ECXLARPT",52,0)
 Q
"RTN","ECXLARPT",53,0)
 ;
"RTN","ECXLARPT",54,0)
PRINT ; process temp file and print report
"RTN","ECXLARPT",55,0)
 N PG,QFLG,GTOT,LN,COUNT,VOL,SUB,REC,WKLD1
"RTN","ECXLARPT",56,0)
 U IO
"RTN","ECXLARPT",57,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXLARPT",58,0)
 S (PG,QFLG,GTOT,COUNT)=0,$P(LN,"-",132)=""
"RTN","ECXLARPT",59,0)
 I '$G(ECXPORT) D HEADER Q:QFLG  ;144
"RTN","ECXLARPT",60,0)
 S COUNT=COUNT+1
"RTN","ECXLARPT",61,0)
 S TNUM=0 F I=0:0 S TNUM=$O(^TMP($J,"ECXLARPT",TNUM)) Q:'TNUM  D  Q:QFLG
"RTN","ECXLARPT",62,0)
 . S DSSNM="" F J=0:0 S DSSNM=$O(^TMP($J,"ECXLARPT",TNUM,DSSNM)) Q:DSSNM']""  D  Q:QFLG
"RTN","ECXLARPT",63,0)
 .. S TSTNM="" F K=0:0 S TSTNM=$O(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM)) Q:TSTNM']""  D  Q:QFLG
"RTN","ECXLARPT",64,0)
 ... S SPECNM="" F L=0:0 S SPECNM=$O(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM)) Q:SPECNM']""  D  Q:QFLG
"RTN","ECXLARPT",65,0)
 .... S RU="" F M=0:0 S RU=$O(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM,RU)) Q:RU']""  D  Q:QFLG
"RTN","ECXLARPT",66,0)
 ..... S ECXLNC="" F N=0:0 S ECXLNC=$O(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM,RU,ECXLNC)) Q:ECXLNC']""  D  Q:QFLG
"RTN","ECXLARPT",67,0)
 ...... S WKLD1=$P(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM,RU,ECXLNC),"^")
"RTN","ECXLARPT",68,0)
 ...... S WKLDCD=$P(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM,RU,ECXLNC),"^",2)
"RTN","ECXLARPT",69,0)
 ...... S LLNC=$P(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM,RU,ECXLNC),"^",3)
"RTN","ECXLARPT",70,0)
 ...... I $G(ECXPORT) D  Q  ;144
"RTN","ECXLARPT",71,0)
 ....... S ^TMP($J,"ECXPORT",CNT)=TNUM_U_DSSNM_U_RU_U_ECXLNC_U_$S(WKLD1="":"*",1:"")_U_$S(TSTNM'="ZZZZ":TSTNM,1:"")_U_$S(SPECNM'="ZZZZ":$S(SPECNM="ZZDEFAULT LOINC":"DEFAULT LOINC",1:SPECNM),1:"")_U_WKLD1_U_WKLDCD ;144
"RTN","ECXLARPT",72,0)
 ....... S CNT=CNT+1 ;144
"RTN","ECXLARPT",73,0)
 ...... W !,$$RJ^XLFSTR(TNUM,4,"0"),?11,$E(DSSNM,1,24),?37,$E(RU,1,13),?53,$$RJ^XLFSTR(ECXLNC,10," ") ;,?56,$$RJ^XLFSTR(LLNC,10," ")
"RTN","ECXLARPT",74,0)
 ...... I WKLD1="" W ?67,"*"
"RTN","ECXLARPT",75,0)
 ...... ;I SPECNM'="ZZDEFAULT LOINC",$P(LLNC,"(")'=ECXLNC W ?67,"*"
"RTN","ECXLARPT",76,0)
 ...... W ?71,$S(TSTNM'="ZZZZ":$E(TSTNM,1,24),1:" ")
"RTN","ECXLARPT",77,0)
 ...... W ?97,$S(SPECNM'="ZZZZ":$S(SPECNM="ZZDEFAULT LOINC":"DEFAULT LOINC",1:$E(SPECNM,1,13)),1:" "),?112,$$RJ^XLFSTR(WKLD1,8," "),?122,$$RJ^XLFSTR(WKLDCD,10," ")
"RTN","ECXLARPT",78,0)
 ...... S COUNT=COUNT+1
"RTN","ECXLARPT",79,0)
 ...... I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXLARPT",80,0)
 I $G(ECXPORT) Q  ;144 stop processing if exporting
"RTN","ECXLARPT",81,0)
 W !!,"FLG ('*'=site not using LOINC code that DSS collects)"
"RTN","ECXLARPT",82,0)
 Q:QFLG
"RTN","ECXLARPT",83,0)
CLOSE ;
"RTN","ECXLARPT",84,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXLARPT",85,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXLARPT",86,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXLARPT",87,0)
 K ^TMP($J,"ECXLARPT")
"RTN","ECXLARPT",88,0)
 Q
"RTN","ECXLARPT",89,0)
 ;
"RTN","ECXLARPT",90,0)
HEADER ;header and page control
"RTN","ECXLARPT",91,0)
 N SS,JJ
"RTN","ECXLARPT",92,0)
 I $E(IOST)="C" D
"RTN","ECXLARPT",93,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXLARPT",94,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXLARPT",95,0)
 Q:QFLG
"RTN","ECXLARPT",96,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXLARPT",97,0)
 W !,"LAB RESULTS DSS LOINC CODE REPORT",?124,"Page: "_PG
"RTN","ECXLARPT",98,0)
 W !,"Report Run Date/Time: "_ECRUN
"RTN","ECXLARPT",99,0)
 W !,"DSS Site:             "_$P(ECXDIV(1),U,2)_" ("_$P(ECXDIV(1),U,3)_")"
"RTN","ECXLARPT",100,0)
 ;W !,?97,"LOC",?117,"LOC",?122,"LOC"
"RTN","ECXLARPT",101,0)
 ;W !!,?68,"F",!,"LAR",?49,"LAR",?61,"LOCAL",?68,"L",?97,"LOC SPEC",?113,"LOC WKLD",?122,"LOC WKLD"
"RTN","ECXLARPT",102,0)
 ;W !,"TEST#",?7,"LAR TEST NAME",?33,"LAR UNITS",?49,"LOINC",?61,"LOINC",?68,"G",?71,"LOCAL TEST NAME",?99,"TYPE",?115,"IEN",?125,"CD"
"RTN","ECXLARPT",103,0)
 W !!,?67,"F",?97,"LOC SPEC",?113,"LOC WKLD",?122,"LOC WKLD"
"RTN","ECXLARPT",104,0)
 W !,"LAR TEST#",?11,"LAR TEST NAME",?37,"LAR UNITS",?53,"LAR LOINC",?67,"L",?71,"LOCAL TEST NAME",?99,"TYPE",?115,"IEN",?124,"CODE"
"RTN","ECXLARPT",105,0)
 W !,"(#727.29)",?13,"(#727.29)",?37,"(#727.29)",?53,"(#727.29)",?67,"G",?76,"(#64)",?99,"(#64)",?115,"(#64)",?124,"(#64)"
"RTN","ECXLARPT",106,0)
 W !,LN,!
"RTN","ECXLARPT",107,0)
 Q
"RTN","ECXLARPT",108,0)
 ;
"RTN","ECXLBB")
0^55^B52423335^B51392005
"RTN","ECXLBB",1,0)
ECXLBB ;DALOI/KML - DSS BLOOD BANK EXTRACT ;4/16/13  16:03
"RTN","ECXLBB",2,0)
 ;;3.0;DSS EXTRACTS;**78,84,90,92,104,105,102,120,127,144**;Dec 22, 1997;Build 9
"RTN","ECXLBB",3,0)
 ;Per VHA Directive 97-033 this routine should not be modified.  Medical Device # BK970021
"RTN","ECXLBB",4,0)
 ; access to the LAB DATA file (#63) is supported by 
"RTN","ECXLBB",5,0)
 ; controlled subscription to IA 525  (global root ^LR)  
"RTN","ECXLBB",6,0)
 ; access to the BLOOD PRODUCT (#66) is supported by IA 4510
"RTN","ECXLBB",7,0)
BEG ;entry point from option
"RTN","ECXLBB",8,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLBB",9,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLBB",10,0)
 Q
"RTN","ECXLBB",11,0)
START ; Entry point from tasked job
"RTN","ECXLBB",12,0)
 ; begin package specific extract
"RTN","ECXLBB",13,0)
 N ECTRSP,ECADMT,ECTODT,ECENCTR,ECPAT,ECLRDFN,ECXPHY,ECXPHYPC,ECPHYNPI
"RTN","ECXLBB",14,0)
 N ECD,ECXDFN,ECARRY,EC66,ECERR,ECTRFDT,ECTRFTM,ECX,ECINOUT,ECXINST,ECXPATCAT,ECXESC ;144
"RTN","ECXLBB",15,0)
 ;variables ECFILE,EC23,ECXYM,ECINST,ECSD,ECSD1,ECED passed in 
"RTN","ECXLBB",16,0)
 ; by taskmanager 
"RTN","ECXLBB",17,0)
 ; ECED defined in ^ECXTRAC - it represents the end date of the extract
"RTN","ECXLBB",18,0)
 ; sort process.  TRANSFUSION DATE should be within start and end dates
"RTN","ECXLBB",19,0)
 ; ECED and ECSD were assigned with input provided by the user interface
"RTN","ECXLBB",20,0)
 ; and ECSD1 = ECSD-.1
"RTN","ECXLBB",21,0)
 ; Read through the TRANSFUSION RECORD sub-file (63.017) of 
"RTN","ECXLBB",22,0)
 ; the LAB DATA file (#63)
"RTN","ECXLBB",23,0)
 ;the global nodes containing transfusion record entries are constructed
"RTN","ECXLBB",24,0)
 ; by calculating the TRANSFUSION DATE/TIME (.01)
"RTN","ECXLBB",25,0)
 ; into its reverse date/time representation and then DINUM'd when 
"RTN","ECXLBB",26,0)
 ;filing the record entry 
"RTN","ECXLBB",27,0)
 ; ECD equals the reverse date/time of ECED+.3 and will need to be
"RTN","ECXLBB",28,0)
 ; reset for each DFN.
"RTN","ECXLBB",29,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1 Q  ;quit if tasked and user sends stop request  (QFLG assigned in ECXTRAC)
"RTN","ECXLBB",30,0)
AUDRPT ; entry point for pre-extract audit report
"RTN","ECXLBB",31,0)
 S ECTODT=9999999-ECSD1,ECLRDFN=0
"RTN","ECXLBB",32,0)
 F  S ECLRDFN=$O(^LR(ECLRDFN)) Q:'ECLRDFN  S ECXDFN=$$GETDFN(ECLRDFN),ECERR=$$PAT(ECXDFN) S ECD=9999999-(ECED+.3) F  S ECD=$O(^LR(ECLRDFN,1.6,ECD)) Q:ECERR  Q:'ECD!(ECD>ECTODT)  S EC0=^LR(ECLRDFN,1.6,ECD,0) D
"RTN","ECXLBB",33,0)
 .; ECARRY(1)=TRANSFUSION DATE AND TIME, 
"RTN","ECXLBB",34,0)
 .; ECARRY(3)=COMPONENT, ECARRY(4)=COMPONENT ABBREVIATION
"RTN","ECXLBB",35,0)
 .; ECARRY(5)=UNITS POOLED, ECARRY(6)=TRANSFUSION REACTION, 
"RTN","ECXLBB",36,0)
 .; ECARRY(7)=VOLUME TRANSFUSED, ECARRY(8)=TRANSFUSION REACTION TYPE
"RTN","ECXLBB",37,0)
 .; ECARRY(9)=REQUESTING PROVIDER, ECARRY(10)=REQUEST. PROV. PERSON CLASS
"RTN","ECXLBB",38,0)
 .; ECARRY(11)=UNIT MODIFIED,ECARRY(12)=UNIT MODIFICATION
"RTN","ECXLBB",39,0)
 .; ECARRY(13)=PRODUCTION DIVISION CODE
"RTN","ECXLBB",40,0)
 . S ECARRY(1)=$P(EC0,"^"),EC66=$G(^LAB(66,$P(EC0,"^",2),0))
"RTN","ECXLBB",41,0)
 . S ECARRY(3)=$E($P(EC66,"^"),1,15),ECARRY(4)=$P(EC66,"^",2)
"RTN","ECXLBB",42,0)
 . S ECARRY(5)=$S(+$P(EC0,"^",7)=0:1,1:+$P(EC0,"^",7))
"RTN","ECXLBB",43,0)
 . S ECARRY(6)=$S($P(EC0,"^",8)=1:"Y",1:"N"),ECARRY(7)=$P(EC0,"^",10)
"RTN","ECXLBB",44,0)
 . S ECARRY(8)=$E($P($G(^LAB(65.4,+$P(EC0,"^",11),0)),"^"),1,10)
"RTN","ECXLBB",45,0)
 . S (ECARRY(9),ECARRY(10),ECARRY(13))="" D GETRPRV
"RTN","ECXLBB",46,0)
 . S ECARRY(11)=$$MODIFIED(),(ECXPHY,ECXPHYPC,ECPHYNPI)=""
"RTN","ECXLBB",47,0)
 . S ECARRY(12)=$S(ECARRY(11)="Y":$$UNITMODS(),1:"")
"RTN","ECXLBB",48,0)
 . D GETDATA
"RTN","ECXLBB",49,0)
 . K ECARRY
"RTN","ECXLBB",50,0)
 D AUDRPT^ECXLBB1
"RTN","ECXLBB",51,0)
 Q
"RTN","ECXLBB",52,0)
UNITMODS() ; Get modification criteria from fields #.06 and #3 from file #66
"RTN","ECXLBB",53,0)
 N MODARY,MO,EC66A,MODSTR,STR3
"RTN","ECXLBB",54,0)
 S MODARY("DIVIDED")="D",MODARY("POOLED")="P",MODARY("WASHED")="W"
"RTN","ECXLBB",55,0)
 S MODARY("FROZEN")="F",MODARY("LEUKOCYTE POOR")="L"
"RTN","ECXLBB",56,0)
 S MODARY("REJUVENATED")="R",MODARY("DEGLYCEROLIZED")="G"
"RTN","ECXLBB",57,0)
 S MODARY("IRRADIATED")="I",MODARY("SEPARATED")="S"
"RTN","ECXLBB",58,0)
 ;if modification criteria is null determine value from description
"RTN","ECXLBB",59,0)
 S MODSTR=$S($P(EC66,U,6)'="":$P(EC66,U,6),1:$$CHKMOD^ECXLBB1($P(EC66,"^")))
"RTN","ECXLBB",60,0)
 ;get modification criteria for entries at field #3 in file #66
"RTN","ECXLBB",61,0)
 S MOD=0 F  S MOD=$O(^LAB(66,$P(EC0,"^",2),3,MOD)) Q:'MOD  D
"RTN","ECXLBB",62,0)
 .S EC66A=$G(^LAB(66,MOD,0)) I EC66A="" Q
"RTN","ECXLBB",63,0)
 .S STR3=$S($P(EC66A,U,6)'="":$P(EC66A,U,6),1:$$CHKMOD^ECXLBB1($P(EC66A,"^")))
"RTN","ECXLBB",64,0)
 .I STR3'="",MODSTR'[STR3 S MODSTR=MODSTR_STR3
"RTN","ECXLBB",65,0)
 Q MODSTR
"RTN","ECXLBB",66,0)
MODIFIED() ; Was unit modified
"RTN","ECXLBB",67,0)
 ; Init variables
"RTN","ECXLBB",68,0)
 N XMATCH,UNIT,MOD,COMPID,MODNODE,MODTO
"RTN","ECXLBB",69,0)
 S (XMATCH,UNIT)=0,MOD=""
"RTN","ECXLBB",70,0)
 ; Check input
"RTN","ECXLBB",71,0)
 Q:'$G(ECLRDFN)!'$P(EC0,U,2) "N"
"RTN","ECXLBB",72,0)
 ;Find xmatch for blood component request
"RTN","ECXLBB",73,0)
 S XMATCH=$O(^LR(ECLRDFN,1.8,$P(EC0,U,2),1,XMATCH)) Q:'XMATCH "N"
"RTN","ECXLBB",74,0)
 ;Get blood inventory file (#65) pointer
"RTN","ECXLBB",75,0)
 S UNIT=$P($G(^LR(ECLRDFN,1.8,$P(EC0,"^",2),1,XMATCH,0)),U)
"RTN","ECXLBB",76,0)
 ;Look at disposition field (#4.1) in blood inventory file (#65)
"RTN","ECXLBB",77,0)
 S MOD=$P($G(^LRD(65,+XMATCH,4)),U),COMPID=$P(EC66,U,3)
"RTN","ECXLBB",78,0)
 ; Get 'the modified to' entry pointer to blood inventory file (#66)
"RTN","ECXLBB",79,0)
 I MOD="MO" S MODTO=0 F  S MODTO=$O(^LRD(65,+XMATCH,9,MODTO)) Q:'MODTO  D
"RTN","ECXLBB",80,0)
 .S MODNODE=$G(^LRD(65,+XMATCH,9,MODTO,0)) Q:$P(^(0),U,3)'>1
"RTN","ECXLBB",81,0)
 .Q:$P(MODNODE,U,2)'=COMPID
"RTN","ECXLBB",82,0)
 .; Set the modify to unit ien for file (#66)
"RTN","ECXLBB",83,0)
 Q $S(MOD="MO":"Y",1:"N")
"RTN","ECXLBB",84,0)
GETRPRV ; get requesting provider, requesting provider person class and 
"RTN","ECXLBB",85,0)
 ; production division code
"RTN","ECXLBB",86,0)
 ; input: ECD      =INVERTED DATE SUBSCRIPT
"RTN","ECXLBB",87,0)
 ;        ECARRY(1)=TRANSFUSION DATE AND TIME
"RTN","ECXLBB",88,0)
 ; note: Accessioned data in file #68 is stored up to 90 days.
"RTN","ECXLBB",89,0)
 N ECXBNOD,ACC,ACCDT,ACCNODE,PERCLS,DIV,NUM
"RTN","ECXLBB",90,0)
 I ECARRY(1)="" Q  ;there is no transfusion date
"RTN","ECXLBB",91,0)
 ;get BLOOD BANK record, field #1, in file #63 located on "BB" node
"RTN","ECXLBB",92,0)
 ;since there is a slight time lapse, $O will find the BB record
"RTN","ECXLBB",93,0)
 S ECXBNOD=$O(^LR(ECLRDFN,"BB",ECD)) I ECXBNOD="" Q
"RTN","ECXLBB",94,0)
 S ECXBNOD=^LR(ECLRDFN,"BB",ECXBNOD,0) I ECXBNOD="" Q
"RTN","ECXLBB",95,0)
 ;Compose accession number,originating from field #.06 subfile #63.01
"RTN","ECXLBB",96,0)
 ; ex. ACC=BB 0528 27
"RTN","ECXLBB",97,0)
 S ACC=$P(ECXBNOD,U,6),ACC=$TR($P(ACC," ",2,99)," ")
"RTN","ECXLBB",98,0)
 S ACCDT=$E(ECARRY(1),1,3)_$E(ACC,1,4),NUM=$E(ACC,5,99)
"RTN","ECXLBB",99,0)
 ;Get field #2 from file #68, field #1 from subfile #68.01 which is
"RTN","ECXLBB",100,0)
 ;subfile #68.02. Look at 29=blood bank ien, from 0th node, get fields
"RTN","ECXLBB",101,0)
 ;#6.5 PROVIDER and #26 DIV
"RTN","ECXLBB",102,0)
 I (ACCDT)=""!(NUM="") Q
"RTN","ECXLBB",103,0)
 ; identify bb accession area the patient was in to get the right DIV
"RTN","ECXLBB",104,0)
 S AREA=$$AREA
"RTN","ECXLBB",105,0)
 S ACCNODE=$G(^LRO(68,+AREA,1,ACCDT,1,NUM,0))
"RTN","ECXLBB",106,0)
 S ECARRY(9)=$P(ACCNODE,U,8) I ECARRY(9)'="" D
"RTN","ECXLBB",107,0)
 . S PERCLS=$$GET^XUA4A72(ECARRY(9),ACCDT)
"RTN","ECXLBB",108,0)
 . I +PERCLS>0 S ECARRY(10)=$P(PERCLS,U,7)
"RTN","ECXLBB",109,0)
 . S ECREQNPI=$$NPI^XUSNPI("Individual_ID",ECARRY(9),ACCDT)
"RTN","ECXLBB",110,0)
 . S:+ECREQNPI'>0 ECREQNPI="" S ECREQNPI=$P(ECREQNPI,U)
"RTN","ECXLBB",111,0)
 . S ECARRY(9)=2_ECARRY(9)
"RTN","ECXLBB",112,0)
 S DIV=$P($G(^LRO(68,+AREA,1,ACCDT,1,NUM,.4)),U)
"RTN","ECXLBB",113,0)
 I DIV'="" S ECARRY(13)=$$RADDIV^ECXDEPT(DIV)
"RTN","ECXLBB",114,0)
 Q
"RTN","ECXLBB",115,0)
AREA() ; resolve accession area's ien to use and validate
"RTN","ECXLBB",116,0)
 ;          Accession number
"RTN","ECXLBB",117,0)
 ;          Patient LRDFN
"RTN","ECXLBB",118,0)
 ; note: if there is only one accession area use '29'
"RTN","ECXLBB",119,0)
 N A,CNT,BBLIST,DFN,ACC,AREA,DATE,TDATE,ACCNODE
"RTN","ECXLBB",120,0)
 S (CNT,FLAG,A)=0,DFN=""
"RTN","ECXLBB",121,0)
 ; set the date from the "bb" node in file (#63)
"RTN","ECXLBB",122,0)
 S DATE=$P(ECXBNOD,U)
"RTN","ECXLBB",123,0)
 ; setup array for bb accession areas if more than one
"RTN","ECXLBB",124,0)
 F  S A=$O(^LRO(68,A)) Q:'A  I $P($G(^LRO(68,A,0)),"^",2)="BB" D
"RTN","ECXLBB",125,0)
 . S BBLIST(A)=""
"RTN","ECXLBB",126,0)
 . S CNT=CNT+1
"RTN","ECXLBB",127,0)
 I CNT'>1 Q 29
"RTN","ECXLBB",128,0)
 S AREA=0 F  S AREA=$O(BBLIST(AREA)) Q:'AREA  D  Q:FLAG
"RTN","ECXLBB",129,0)
 . ; get additional accession information for validation
"RTN","ECXLBB",130,0)
 . S ACCNODE=$G(^LRO(68,AREA,1,$P(DATE,"."),1,NUM,0))
"RTN","ECXLBB",131,0)
 . S ACC=$G(^LRO(68,AREA,1,$P(DATE,"."),1,NUM,.2))
"RTN","ECXLBB",132,0)
 . S DFN=$P($G(ACCNODE),U)
"RTN","ECXLBB",133,0)
 . S TDATE=$P($G(^LRO(68,AREA,1,$P(DATE,"."),1,NUM,3)),U)
"RTN","ECXLBB",134,0)
 . I (DFN=ECLRDFN)&(ACC=$P(ECXBNOD,U,6))&(DATE=TDATE) S FLAG=1
"RTN","ECXLBB",135,0)
 Q AREA
"RTN","ECXLBB",136,0)
GETDATA ; gather rest of extract data that will be recorded in an 
"RTN","ECXLBB",137,0)
 ; entry in file 727.829
"RTN","ECXLBB",138,0)
 N ECXSTR
"RTN","ECXLBB",139,0)
 S ECTRFDT=$$ECXDOB^ECXUTL(ECARRY(1)),ECTRFTM=$$ECXTIME^ECXUTL(ECARRY(1))
"RTN","ECXLBB",140,0)
 S ECX=$$INP^ECXUTL2(ECXDFN,ECARRY(1)),ECINOUT=$P(ECX,U),ECTRSP=$P(ECX,U,3),ECADMT=$P(ECX,U,4) ; [FLD #5]
"RTN","ECXLBB",141,0)
 ;
"RTN","ECXLBB",142,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLBB",143,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECINOUT,ECTRSP)
"RTN","ECXLBB",144,0)
 ;- If no encounter number don't file record
"RTN","ECXLBB",145,0)
 S ECENCTR=$$ENCNUM^ECXUTL4(ECINOUT,ECPAT("SSN"),ECADMT,ECARRY(1),ECTRSP,ECXOBS,ECHEAD,,) ; [FLD #6]
"RTN","ECXLBB",146,0)
 Q:ECENCTR=""
"RTN","ECXLBB",147,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXLBB",148,0)
 S ECXERI=ECPAT("ERI")
"RTN","ECXLBB",149,0)
 ;
"RTN","ECXLBB",150,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXLBB",151,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXLBB",152,0)
 S ECXESC="" ;144
"RTN","ECXLBB",153,0)
 S ECXSTR=$G(EC23)_"^"_ECINST_"^"_ECXDFN_"^"_ECPAT("SSN")_"^"_ECPAT("NAME")_"^"_ECINOUT_"^"_ECENCTR_"^"_ECTRFDT_"^"_ECTRFTM_"^"_ECARRY(3)_"^"_ECARRY(4)_"^"_ECARRY(5)_"^"_ECARRY(7)_"^"_ECARRY(6)_"^"_ECARRY(8)_"^BB"_ECARRY(13)_"^^"
"RTN","ECXLBB",154,0)
 I $G(ECXLOGIC)>2005 S ECXSTR=ECXSTR_U_ECXPHY_U_ECXPHYPC
"RTN","ECXLBB",155,0)
 I $G(ECXLOGIC)>2006 D
"RTN","ECXLBB",156,0)
 .S ECXSTR=ECXSTR_U_ECXERI_U_ECARRY(11)_U_ECARRY(12)_U_ECARRY(9)_U_ECARRY(10)_U_ECARRY(13)_U
"RTN","ECXLBB",157,0)
 I '$D(ECXRPT) D FILE(ECXSTR) Q
"RTN","ECXLBB",158,0)
 S ^TMP("ECXLBB",$J,ECXDFN,ECD)=ECXSTR  ;temporary global array
"RTN","ECXLBB",159,0)
 I $D(ECXCRPT) D
"RTN","ECXLBB",160,0)
 . N ECCOUNT S ECCOUNT=0
"RTN","ECXLBB",161,0)
 . F  S ECCOUNT=ECCOUNT+1 Q:'$D(^TMP("ECXLBBC",$J,$S($G(ECXCFLG)=1:ECARRY(4),1:"ZZNOZZ"),ECXDFN,ECTRFDT_"."_ECTRFTM_"."_ECCOUNT,"S"))
"RTN","ECXLBB",162,0)
 . S ^TMP("ECXLBBC",$J,$S($G(ECXCFLG)=1:ECARRY(4),1:"ZZNOZZ"),ECXDFN,ECTRFDT_"."_ECTRFTM_"."_ECCOUNT,"S")=ECXSTR
"RTN","ECXLBB",163,0)
 ;  used in ECXPLBB/ECXLBBC (pre-extract audit report)
"RTN","ECXLBB",164,0)
 Q
"RTN","ECXLBB",165,0)
GETDFN(ECXLRDFN) ;
"RTN","ECXLBB",166,0)
 ; INPUT - LRDFN
"RTN","ECXLBB",167,0)
 ; OUTPUT - DFN
"RTN","ECXLBB",168,0)
 ; Obtains DFN (Patient ID) from LRDFN (Lab Patient ID).
"RTN","ECXLBB",169,0)
 ; If no valid DFN exists, 0 is returned.
"RTN","ECXLBB",170,0)
 S ECXLRDFN=+$G(ECXLRDFN)
"RTN","ECXLBB",171,0)
 I $P($G(^LR(ECXLRDFN,0)),"^",2)'=2 Q 0
"RTN","ECXLBB",172,0)
 Q +$P(^LR(ECXLRDFN,0),"^",3)
"RTN","ECXLBB",173,0)
 ; 
"RTN","ECXLBB",174,0)
PAT(ECXDFN) ;get/set patient data
"RTN","ECXLBB",175,0)
 ; INPUT - ECXDFN = patient ien (DFN)
"RTN","ECXLBB",176,0)
 ; OUTPUT - ECPAT array:
"RTN","ECXLBB",177,0)
 ;          ECPAT("SSN")
"RTN","ECXLBB",178,0)
 ;          ECPAT("NAME")
"RTN","ECXLBB",179,0)
 ; returns 0 or 1 in ECXERR - 0=successful
"RTN","ECXLBB",180,0)
 ;                            1=error condition
"RTN","ECXLBB",181,0)
 N X,OK,ECXERR
"RTN","ECXLBB",182,0)
 ;get data
"RTN","ECXLBB",183,0)
 S ECXERR=0
"RTN","ECXLBB",184,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,"","1;3",.ECPAT)
"RTN","ECXLBB",185,0)
 I 'OK S ECXERR=1
"RTN","ECXLBB",186,0)
 Q ECXERR
"RTN","ECXLBB",187,0)
 ;
"RTN","ECXLBB",188,0)
FILE(ECODE) ;
"RTN","ECXLBB",189,0)
 ; Input - ECODE = extract record
"RTN","ECXLBB",190,0)
 ;
"RTN","ECXLBB",191,0)
 ; record the extract record at a global node in file 727.829
"RTN","ECXLBB",192,0)
 ; sequence #^year/month of extract^extract #^facility^patient dfn^SSN^
"RTN","ECXLBB",193,0)
 ; name^i/o pt indicator^encounter #^date of transfusion^time of 
"RTN","ECXLBB",194,0)
 ; transfusion^component^component abbrev^# of units^volume in mm^
"RTN","ECXLBB",195,0)
 ; reaction^reaction type^feeder location^DSS product dept^DSS IP #
"RTN","ECXLBB",196,0)
 ; ordering physician^ordering physician pc^emergency response indicator
"RTN","ECXLBB",197,0)
 ; (FEMA)^unit modified^unit modification^requesting provider^request. 
"RTN","ECXLBB",198,0)
 ; provider person class^ordering provider npi ECPHYNPI
"RTN","ECXLBB",199,0)
 ;ECODE1- requesting provider npi ECREQNPI^PATCAT^Encounter SC ECXESC
"RTN","ECXLBB",200,0)
 ;note:  DSS product dept and DSS IP # are dependent on the release of
"RTN","ECXLBB",201,0)
 ; ECX*3*61
"RTN","ECXLBB",202,0)
 N DA,DIK,EC7
"RTN","ECXLBB",203,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLBB",204,0)
 S ECODE=EC7_"^"_ECODE
"RTN","ECXLBB",205,0)
 I ECXLOGIC>2007 D
"RTN","ECXLBB",206,0)
 .S ECODE=ECODE_ECPHYNPI_U
"RTN","ECXLBB",207,0)
 .S ECODE1=$G(ECREQNPI)_U
"RTN","ECXLBB",208,0)
 .I ECXLOGIC>2010 S ECODE1=ECODE1_ECXPATCAT
"RTN","ECXLBB",209,0)
 I ECXLOGIC>2013 S ECODE1=ECODE1_U_ECXESC ;144
"RTN","ECXLBB",210,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=$G(ECODE1),ECRN=ECRN+1
"RTN","ECXLBB",211,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLBB",212,0)
 Q
"RTN","ECXLBB",213,0)
 ;
"RTN","ECXLBB",214,0)
 ;
"RTN","ECXLBB",215,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXLBB",216,0)
 S ECHEAD="LBB"
"RTN","ECXLBB",217,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLBB",218,0)
 Q
"RTN","ECXLBB",219,0)
 ;
"RTN","ECXLBB",220,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXLBB",221,0)
 ; should be queued with a 1D frequency
"RTN","ECXLBB",222,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXLBB",223,0)
 ;
"RTN","ECXLBB",224,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLBB",225,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXLBB",226,0)
 Q
"RTN","ECXLBB",227,0)
 ;
"RTN","ECXLBB",228,0)
 ;ECXLBB
"RTN","ECXLBB1")
0^56^B27728068^B27049597
"RTN","ECXLBB1",1,0)
ECXLBB1 ;ALB/JRC - DSS VBECS EXTRACT ;4/16/13  16:06
"RTN","ECXLBB1",2,0)
 ;;3.0;DSS EXTRACTS;**105,102,120,127,144**;Dec 22, 1997;Build 9
"RTN","ECXLBB1",3,0)
 ;Per VHA Directive 97-033 this routine should not be modified.  Medical Device # BK970021
"RTN","ECXLBB1",4,0)
 ; access to the VBECS EXTRACT file (#6002.03) is supported by
"RTN","ECXLBB1",5,0)
 ; controlled subscription to IA #4953  (global root ^VBECS(6002.03)
"RTN","ECXLBB1",6,0)
BEG ;entry point from option
"RTN","ECXLBB1",7,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLBB1",8,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLBB1",9,0)
 Q
"RTN","ECXLBB1",10,0)
 ;
"RTN","ECXLBB1",11,0)
START ; Entry point from tasked job
"RTN","ECXLBB1",12,0)
 ; begin package specific extract
"RTN","ECXLBB1",13,0)
 N ECTRSP,ECADMT,ECTODT,ECENCTR,ECPAT,ECLRDFN,ECXPHY,ECXPHYPC
"RTN","ECXLBB1",14,0)
 N ECD,ECXDFN,ECARRY,EC66,ECERR,ECTRFDT,ECTRFTM,ECX,ECINOUT,ECXINST
"RTN","ECXLBB1",15,0)
 N ECPHYNPI,ECREQNPI,ECXPATCAT,ECXESC ;144
"RTN","ECXLBB1",16,0)
 ;variables ECFILE,EC23,ECXYM,ECINST,ECSD,ECSD1,ECED passed in 
"RTN","ECXLBB1",17,0)
 ; by taskmanager 
"RTN","ECXLBB1",18,0)
 ; ECED defined in ^ECXTRAC - end date of the extract
"RTN","ECXLBB1",19,0)
 ; TRANSFUSION DATE should be within start and end dates
"RTN","ECXLBB1",20,0)
 ; ECED and ECSD input provided by the user interface
"RTN","ECXLBB1",21,0)
 ; and ECSD1 = ECSD-.1
"RTN","ECXLBB1",22,0)
 ; Read through the VBECS DSS EXTRACT file (6002.03)
"RTN","ECXLBB1",23,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1 Q  ;quit if tasked and user sends stop request  (QFLG assigned in ECXTRAC)
"RTN","ECXLBB1",24,0)
 ;
"RTN","ECXLBB1",25,0)
AUDRPT ; entry point for pre-extract audit report
"RTN","ECXLBB1",26,0)
 N RECORD
"RTN","ECXLBB1",27,0)
 S RECORD=0,ECD=ECSD-.1,ECTODT=ECED+.9
"RTN","ECXLBB1",28,0)
 F  S ECD=$O(^VBEC(6002.03,"C",ECD)) Q:'ECD!(ECD>ECTODT)  S RECORD=0 F  S RECORD=$O(^VBEC(6002.03,"C",ECD,RECORD)) Q:RECORD'>0  S EC0=^VBEC(6002.03,RECORD,0) D
"RTN","ECXLBB1",29,0)
 .; ECARRY(1)=TRANSFUSION DATE AND TIME, ECARRY(3)=COMPONENT 
"RTN","ECXLBB1",30,0)
 .; ECARRY(4)=COMPONENT ABBREVIATION, ECARRY(5)=UNITS POOLED
"RTN","ECXLBB1",31,0)
 .; ECARRY(6)=TRANSFUSION REACTION,ECARRY(7)=VOLUME TRANSFUSED
"RTN","ECXLBB1",32,0)
 .; ECARRY(8)=TRANSFUSION REACTION TYPE, ECARRY(9)=REQUESTING PROVIDER
"RTN","ECXLBB1",33,0)
 .; ECARRY(10)=REQUEST. PROV. PERSON CLASS, ECARRY(11)=UNIT MODIFIED
"RTN","ECXLBB1",34,0)
 .; ECARRY(12)=UNIT MODIFICATION, ECARRY(13)=PRODUCTION DIVISION CODE
"RTN","ECXLBB1",35,0)
 .;
"RTN","ECXLBB1",36,0)
 . S ECXDFN=$P(EC0,U,2),ECERR=$$PAT(ECXDFN) Q:ECERR
"RTN","ECXLBB1",37,0)
 . S ECARRY(1)=$P(EC0,U,10),ECARRY(3)=$P(EC0,U,7),ECARRY(4)=$P(EC0,U,8),ECARRY(5)=$S(+$P(EC0,U,9)=0:1,1:+$P(EC0,U,9)),ECARRY(6)=$S($P(EC0,U,15):"Y",1:"N"),ECARRY(7)=$P(EC0,"^",12),ECARRY(8)=$P(EC0,U,13)
"RTN","ECXLBB1",38,0)
 . S ECARRY(9)=$P(EC0,U,6),ECINST=$P(EC0,U,3),ECARRY(12)=$P(EC0,U,14),ECARRY(11)=$S(ECARRY(12)'="":"Y",1:"N"),ECARRY(13)=$P(EC0,U,4)
"RTN","ECXLBB1",39,0)
 . ;get requesting and ordering providers and their person class
"RTN","ECXLBB1",40,0)
 . S ECXPHY=$P(EC0,U,5),(ECXPHYPC,ECARRY(10),ECPHYNPI,ECREQNPI)=""
"RTN","ECXLBB1",41,0)
 . I ECXPHY]"" S ECXPHY=$O(^VA(200,"B",ECXPHY,0))
"RTN","ECXLBB1",42,0)
 . I ECXPHY>0 D
"RTN","ECXLBB1",43,0)
 .. N PERCLS S PERCLS=$$GET^XUA4A72(ECXPHY,ECD)
"RTN","ECXLBB1",44,0)
 .. I +PERCLS>0 S ECXPHYPC=$P(PERCLS,U,7)
"RTN","ECXLBB1",45,0)
 .. S ECPHYNPI=$$NPI^XUSNPI("Individual_ID",ECXPHY,ECD)
"RTN","ECXLBB1",46,0)
 .. S:+ECPHYNPI'>0 ECPHYNPI="" S ECPHYNPI=$P(ECPHYNPI,U)
"RTN","ECXLBB1",47,0)
 .. S ECXPHY=2_ECXPHY
"RTN","ECXLBB1",48,0)
 . I ECARRY(9)>0 D
"RTN","ECXLBB1",49,0)
 .. N PERCLS S PERCLS=$$GET^XUA4A72(ECARRY(9),ECD)
"RTN","ECXLBB1",50,0)
 .. I +PERCLS>0 S ECARRY(10)=$P(PERCLS,U,7)
"RTN","ECXLBB1",51,0)
 .. S ECREQNPI=$$NPI^XUSNPI("Individual_ID",ECARRY(9),ECD)
"RTN","ECXLBB1",52,0)
 .. S:+ECREQNPI'>0 ECREQNPI="" S ECREQNPI=$P(ECREQNPI,U)
"RTN","ECXLBB1",53,0)
 .. S ECARRY(9)=2_ECARRY(9)
"RTN","ECXLBB1",54,0)
 . D GETDATA
"RTN","ECXLBB1",55,0)
 . K ECARRY
"RTN","ECXLBB1",56,0)
 Q
"RTN","ECXLBB1",57,0)
 ;
"RTN","ECXLBB1",58,0)
GETDATA ; gather rest of extract data that will be recorded in an 
"RTN","ECXLBB1",59,0)
 ; entry in file 727.829
"RTN","ECXLBB1",60,0)
 N ECXSTR
"RTN","ECXLBB1",61,0)
 S ECTRFDT=$$ECXDOB^ECXUTL(ECARRY(1)),ECTRFTM=$$ECXTIME^ECXUTL(ECARRY(1))
"RTN","ECXLBB1",62,0)
 S ECX=$$INP^ECXUTL2(ECXDFN,ECARRY(1)),ECINOUT=$P(ECX,U),ECTRSP=$P(ECX,U,3),ECADMT=$P(ECX,U,4)
"RTN","ECXLBB1",63,0)
 ;
"RTN","ECXLBB1",64,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLBB1",65,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECINOUT,ECTRSP)
"RTN","ECXLBB1",66,0)
 ;- If no encounter number don't file record
"RTN","ECXLBB1",67,0)
 S ECENCTR=$$ENCNUM^ECXUTL4(ECINOUT,ECPAT("SSN"),ECADMT,ECARRY(1),ECTRSP,ECXOBS,ECHEAD,,) ; [FLD #6]
"RTN","ECXLBB1",68,0)
 Q:ECENCTR=""
"RTN","ECXLBB1",69,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXLBB1",70,0)
 S ECXERI=$G(ECPAT("ERI"))
"RTN","ECXLBB1",71,0)
 ;
"RTN","ECXLBB1",72,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXLBB1",73,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXLBB1",74,0)
 S ECXESC="" ;144
"RTN","ECXLBB1",75,0)
 S ECXSTR=$G(EC23)_"^"_ECINST_"^"_ECXDFN_"^"_ECPAT("SSN")_"^"_ECPAT("NAME")_"^"_ECINOUT_"^"_ECENCTR_"^"_ECTRFDT_"^"_ECTRFTM_"^"_ECARRY(3)_"^"_ECARRY(4)_"^"_ECARRY(5)_"^"_ECARRY(7)_"^"_ECARRY(6)_"^"_ECARRY(8)_"^BB"_ECARRY(13)_"^^"
"RTN","ECXLBB1",76,0)
 I $G(ECXLOGIC)>2005 S ECXSTR=ECXSTR_U_ECXPHY_U_ECXPHYPC
"RTN","ECXLBB1",77,0)
 I $G(ECXLOGIC)>2006 D
"RTN","ECXLBB1",78,0)
 .S ECXSTR=ECXSTR_U_ECXERI_U_ECARRY(11)_U_ECARRY(12)_U_ECARRY(9)_U_ECARRY(10)_U_ECARRY(13)_U
"RTN","ECXLBB1",79,0)
 I '$D(ECXRPT) D FILE(ECXSTR) Q
"RTN","ECXLBB1",80,0)
 S ^TMP("ECXLBB",$J,ECXDFN,ECD)=ECXSTR  ;temporary global array
"RTN","ECXLBB1",81,0)
 I $D(ECXCRPT) D
"RTN","ECXLBB1",82,0)
 . N ECCOUNT S ECCOUNT=0
"RTN","ECXLBB1",83,0)
 . F  S ECCOUNT=ECCOUNT+1 Q:'$D(^TMP("ECXLBBC",$J,$S($G(ECXCFLG)=1:ECARRY(4),1:"ZZNOZZ"),ECXDFN,ECTRFDT_"."_ECTRFTM_"."_ECCOUNT,"S"))
"RTN","ECXLBB1",84,0)
 . S ^TMP("ECXLBBC",$J,$S($G(ECXCFLG)=1:ECARRY(4),1:"ZZNOZZ"),ECXDFN,ECTRFDT_"."_ECTRFTM_"."_ECCOUNT,"S")=ECXSTR
"RTN","ECXLBB1",85,0)
 ;   used in ECXPLBB/ECXLBBC (pre-extract audit report)
"RTN","ECXLBB1",86,0)
 Q
"RTN","ECXLBB1",87,0)
 ;
"RTN","ECXLBB1",88,0)
PAT(ECXDFN) ;get/set patient data
"RTN","ECXLBB1",89,0)
 ; INPUT - ECXDFN = patient ien (DFN)
"RTN","ECXLBB1",90,0)
 ; OUTPUT - ECPAT array:
"RTN","ECXLBB1",91,0)
 ;          ECPAT("SSN")
"RTN","ECXLBB1",92,0)
 ;          ECPAT("NAME")
"RTN","ECXLBB1",93,0)
 ; returns 0 or 1 in ECXERR - 0=successful
"RTN","ECXLBB1",94,0)
 ;                            1=error condition
"RTN","ECXLBB1",95,0)
 N X,OK,ECXERR
"RTN","ECXLBB1",96,0)
 ;get data
"RTN","ECXLBB1",97,0)
 S ECXERR=0
"RTN","ECXLBB1",98,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,"","1;3",.ECPAT)
"RTN","ECXLBB1",99,0)
 I 'OK S ECXERR=1
"RTN","ECXLBB1",100,0)
 Q ECXERR
"RTN","ECXLBB1",101,0)
 ;
"RTN","ECXLBB1",102,0)
FILE(ECODE) ;
"RTN","ECXLBB1",103,0)
 ; Input - ECODE = extract record
"RTN","ECXLBB1",104,0)
 ;
"RTN","ECXLBB1",105,0)
 ; record the extract record at a global node in file 727.829
"RTN","ECXLBB1",106,0)
 ; sequence #^year/month of extract^extract #^facility^patient dfn^SSN^
"RTN","ECXLBB1",107,0)
 ; name^i/o pt indicator^encounter #^date of transfusion^time of 
"RTN","ECXLBB1",108,0)
 ; transfusion^component^component abbrev^# of units^volume in mm^
"RTN","ECXLBB1",109,0)
 ; reaction^reaction type^feeder location^DSS product dept^DSS IP #
"RTN","ECXLBB1",110,0)
 ; ordering physician^ordering physician pc^emergency response indicator
"RTN","ECXLBB1",111,0)
 ; (FEMA)^unit modified^unit modification^requesting provider^request. 
"RTN","ECXLBB1",112,0)
 ; provider person class^ordering provider npi ECPHYNPI
"RTN","ECXLBB1",113,0)
 ;ECODE1- requesting provider npi ECREQNPI^PATCAT^Encounter SC ECXESC
"RTN","ECXLBB1",114,0)
 ;note:  DSS product dept and DSS IP # are dependent on the release of
"RTN","ECXLBB1",115,0)
 ; ECX*3*61
"RTN","ECXLBB1",116,0)
 N DA,DIK,EC7
"RTN","ECXLBB1",117,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLBB1",118,0)
 S ECODE=EC7_"^"_ECODE
"RTN","ECXLBB1",119,0)
 I ECXLOGIC>2007 D
"RTN","ECXLBB1",120,0)
 .S ECODE=ECODE_ECPHYNPI_U
"RTN","ECXLBB1",121,0)
 .S ECODE1=$G(ECREQNPI)
"RTN","ECXLBB1",122,0)
 .I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT
"RTN","ECXLBB1",123,0)
 I ECXLOGIC>2013 S ECODE1=ECODE1_U_ECXESC ;144
"RTN","ECXLBB1",124,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=$G(ECODE1),ECRN=ECRN+1
"RTN","ECXLBB1",125,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLBB1",126,0)
 Q
"RTN","ECXLBB1",127,0)
 ;
"RTN","ECXLBB1",128,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXLBB1",129,0)
 S ECHEAD="LBB"
"RTN","ECXLBB1",130,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLBB1",131,0)
 Q
"RTN","ECXLBB1",132,0)
 ;
"RTN","ECXLBB1",133,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXLBB1",134,0)
 ; should be queued with a 1D frequency
"RTN","ECXLBB1",135,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXLBB1",136,0)
 ;
"RTN","ECXLBB1",137,0)
CHKMOD(MD) ;check if modifier is contained in string
"RTN","ECXLBB1",138,0)
 N RES,MODX
"RTN","ECXLBB1",139,0)
 I MD="" Q ""
"RTN","ECXLBB1",140,0)
 S (RES,MODX)="" F  S MODX=$O(MODARY(MODX)) Q:MODX=""  D  I RES'="" Q
"RTN","ECXLBB1",141,0)
 .I MD[MODX S RES=MODARY(MODX)
"RTN","ECXLBB1",142,0)
 Q RES
"RTN","ECXLBB1",143,0)
 ;
"RTN","ECXLBB1",144,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLBB1",145,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXLBB1",146,0)
 Q
"RTN","ECXLBB1",147,0)
 ;
"RTN","ECXLBB1",148,0)
 ;ECXLBB
"RTN","ECXLPRO")
0^38^B29349856^B25310596
"RTN","ECXLPRO",1,0)
ECXLPRO ;ALB/JAP - PRO Extract YTD Lab Report ;3/4/13  15:29
"RTN","ECXLPRO",2,0)
 ;;3.0;DSS EXTRACTS;**21,24,36,84,144**;Dec 22, 1997;Build 9
"RTN","ECXLPRO",3,0)
 ;for data associated with prosthetic items produced by facility laboratory
"RTN","ECXLPRO",4,0)
 ;accumulates extract data by hcpcs code for all extracts in fiscal year date range
"RTN","ECXLPRO",5,0)
 ;if an extract has been purged, then totals will be falsely low
"RTN","ECXLPRO",6,0)
 ;if more than 1 extract exists for a particular month, then totals will be falsely high
"RTN","ECXLPRO",7,0)
 ;if site is multidivisional, then user can generate report for
"RTN","ECXLPRO",8,0)
 ;  any one division - data stored under divisional station# (e.g., 326 or 326AB)
"RTN","ECXLPRO",9,0)
 ;  or for entire facility - data stored under primary station# (e.g., 326) but includes data from all subdivisions
"RTN","ECXLPRO",10,0)
 ;if site is non-divisional, then data stored under facility station#
"RTN","ECXLPRO",11,0)
 ;
"RTN","ECXLPRO",12,0)
EN ;setup & queue
"RTN","ECXLPRO",13,0)
 N DIC,DA,DR,DIQ,DIR,DIRUT,DTOUT,DUOUT,DIV,LAST,OUT,ECXPORT,CNT
"RTN","ECXLPRO",14,0)
 S ECXERR=0
"RTN","ECXLPRO",15,0)
 S ECXHEAD="PRO"
"RTN","ECXLPRO",16,0)
 W !!,"Setup for PRO Extract YTD Laboratory Report --",!
"RTN","ECXLPRO",17,0)
 ;determine primary division
"RTN","ECXLPRO",18,0)
 W !,"If you belong to more than one Primary Division, you must"
"RTN","ECXLPRO",19,0)
 W !,"select a Primary Division for the report.",!
"RTN","ECXLPRO",20,0)
 S ECXPRIME=$$PDIV^ECXPUTL
"RTN","ECXLPRO",21,0)
 I ECXPRIME=0 D ^ECXKILL Q
"RTN","ECXLPRO",22,0)
 S DA=ECXPRIME,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99" D EN^DIQ1
"RTN","ECXLPRO",23,0)
 S ECXPRIME=ECXPRIME_U_$G(ECXDIC(4,DA,99,"I"))_U_$G(ECXDIC(4,DA,.01,"I"))
"RTN","ECXLPRO",24,0)
 ;get all prosthetics divisions for report
"RTN","ECXLPRO",25,0)
 S ECXALL=1
"RTN","ECXLPRO",26,0)
 D PDIV3^ECXPUTL(DUZ,ECXPRIME,.ECXDIV)
"RTN","ECXLPRO",27,0)
 I ECXERR D  Q
"RTN","ECXLPRO",28,0)
 .D ^ECXKILL W !!,?5,"Try again later... exiting.",!
"RTN","ECXLPRO",29,0)
 ;determine fiscal year of report
"RTN","ECXLPRO",30,0)
 S DIR(0)="SMBA^C:CURRENT;P:PREVIOUS",DIR("A")="Select C(urrent) or P(revious) Fiscal Year: ",DIR("B")="CURRENT"
"RTN","ECXLPRO",31,0)
 W ! K X,Y D ^DIR K DIR
"RTN","ECXLPRO",32,0)
 I $D(DUOUT)!($D(DTOUT)) D  Q
"RTN","ECXLPRO",33,0)
 .D ^ECXKILL W !!,?5,"Try again later... exiting.",!
"RTN","ECXLPRO",34,0)
 I Y="C" D
"RTN","ECXLPRO",35,0)
 .S X=$$CYFY^ECXUTL1(DT),ECXARRAY("START")=$P(X,U,3),ECXARRAY("END")=$P(X,U,4)
"RTN","ECXLPRO",36,0)
 I Y="P" D
"RTN","ECXLPRO",37,0)
 .S YR=$E(DT,1,3),MON=$E(DT,4,5) S:+MON<10 YR=YR-1 S X1=YR_"0930"
"RTN","ECXLPRO",38,0)
 .S X=$$CYFY^ECXUTL1(X1),ECXARRAY("START")=$P(X,U,3),ECXARRAY("END")=$P(X,U,4)
"RTN","ECXLPRO",39,0)
 .K C,MON,YR,X1
"RTN","ECXLPRO",40,0)
 ;setup variables for taskmanager
"RTN","ECXLPRO",41,0)
 S ECXPGM="PROCESS^ECXLPRO",ECXDESC="PRO Extract YTD HCPCS Report"
"RTN","ECXLPRO",42,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")="",ECXSAVE("ECXPRIME")="",ECXSAVE("ECXALL")=""
"RTN","ECXLPRO",43,0)
 ;determine output device and queue if requested
"RTN","ECXLPRO",44,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXLPRO",45,0)
 .K ^TMP($J,"ECXPORT") ;144
"RTN","ECXLPRO",46,0)
 .S ^TMP($J,"ECXPORT",0)="REPORT TYPE^PSAS HCPCS^LOCAL QTY^LOCAL LABOR COST^LOCAL MATERIAL COST^LOCAL AVE COST^ALL OTHER QTY^ALL OTHER LABOR COST^ALL OTHER MATERIAL COST^ALL OTHER AVE COST" ;144
"RTN","ECXLPRO",47,0)
 .S CNT=1 ;144
"RTN","ECXLPRO",48,0)
 .D PROCESS ;144
"RTN","ECXLPRO",49,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXLPRO",50,0)
 .D ^ECXKILL ;144
"RTN","ECXLPRO",51,0)
 W !!,"Please note: The PRO Extract YTD Laboratory Report requires 132 columns."
"RTN","ECXLPRO",52,0)
 W !,"             Select an appropriate device for output."
"RTN","ECXLPRO",53,0)
 W ! D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXLPRO",54,0)
 I ECXSAVE("POP")=1 W ! D ^ECXKILL Q
"RTN","ECXLPRO",55,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXLPRO",56,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXLPRO",57,0)
 .D PROCESS
"RTN","ECXLPRO",58,0)
 ;clean-up and close
"RTN","ECXLPRO",59,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXLPRO",60,0)
 D HOME^%ZIS
"RTN","ECXLPRO",61,0)
 Q
"RTN","ECXLPRO",62,0)
 ;
"RTN","ECXLPRO",63,0)
PROCESS ;begin processing
"RTN","ECXLPRO",64,0)
 N DIVISION,E,EXTRACT,REC,NODE0,NODE1,LASTDAY
"RTN","ECXLPRO",65,0)
 K ^TMP($J,"ECXP") S LASTDAY=""
"RTN","ECXLPRO",66,0)
 ;determine which extracts contain data for report
"RTN","ECXLPRO",67,0)
 S (EXTRACT,E)=0
"RTN","ECXLPRO",68,0)
 F  S E=$O(^ECX(727,"E",ECXHEAD,E)) Q:'E  D
"RTN","ECXLPRO",69,0)
 .Q:'$D(^ECX(727,E,0))
"RTN","ECXLPRO",70,0)
 .Q:$P($G(^ECX(727,E,0)),U,4)<ECXARRAY("START")
"RTN","ECXLPRO",71,0)
 .Q:$P($G(^ECX(727,E,0)),U,4)>ECXARRAY("END")
"RTN","ECXLPRO",72,0)
 .Q:$G(^ECX(727,E,"DIV"))'=+ECXPRIME
"RTN","ECXLPRO",73,0)
 .S EXTRACT(E)=^ECX(727,E,0)
"RTN","ECXLPRO",74,0)
 .I $P(EXTRACT(E),U,5)>LASTDAY S LASTDAY=$P(EXTRACT(E),U,5)
"RTN","ECXLPRO",75,0)
 ;setup array of station numbers included in report
"RTN","ECXLPRO",76,0)
 F DIV=0:0 S DIV=$O(ECXDIV(DIV)) Q:'DIV  S ECXSTAT=$P(ECXDIV(DIV),U,2),DIVISION(ECXSTAT)=ECXDIV(DIV)
"RTN","ECXLPRO",77,0)
 ;get the extract data
"RTN","ECXLPRO",78,0)
 S E=0 F  S E=$O(EXTRACT(E)) Q:'E  S REC=0 I $D(^ECX(727.826,"AC",E)) F  S REC=$O(^ECX(727.826,"AC",E,REC)) Q:'REC  D
"RTN","ECXLPRO",79,0)
 .S NODE0=$G(^ECX(727.826,REC,0)),NODE1=$G(^ECX(727.826,REC,1)) Q:NODE0=""
"RTN","ECXLPRO",80,0)
 .S (ECXCTAMT,ECXLLC,ECXLMC)=0
"RTN","ECXLPRO",81,0)
 .S ECXFELOC=$P(NODE0,U,10),ECXFEKEY=$P(NODE0,U,11)
"RTN","ECXLPRO",82,0)
 .;ignore any record which isn't for lab receiving station
"RTN","ECXLPRO",83,0)
 .Q:ECXFELOC'["LAB"
"RTN","ECXLPRO",84,0)
 .S ECXHCPC=$P(NODE0,U,33),ECXTYPE=$E(ECXFEKEY,6),ECXREQ=$P($E(ECXFEKEY,8,99),"REQ",1)
"RTN","ECXLPRO",85,0)
 .S ECXQTY=$P(NODE0,U,12),ECXCTAMT=$P(NODE0,U,25),ECXGRPR=$P(NODE1,U,4)
"RTN","ECXLPRO",86,0)
 .S ECXSTAT=$P(ECXFELOC,"LAB",1),ECXFORM="LAB"
"RTN","ECXLPRO",87,0)
 .S ECXLLC=$P(NODE0,U,26),ECXLMC=$P(NODE0,U,27)
"RTN","ECXLPRO",88,0)
 .;ignore record if division not included in this report
"RTN","ECXLPRO",89,0)
 .Q:ECXSTAT=""  Q:'$D(DIVISION(ECXSTAT))
"RTN","ECXLPRO",90,0)
 .;set in ^tmp using primary station#; determine if requesting station is same as or part of this station
"RTN","ECXLPRO",91,0)
 .S ECXLAB="",ECXSTAT=+ECXSTAT,ECXLAB=$S(ECXREQ'[ECXSTAT:"OTHER",1:"SAME")
"RTN","ECXLPRO",92,0)
 .;be sure there's no padding on cost variables
"RTN","ECXLPRO",93,0)
 .S ECXCTAMT=+$TR(ECXCTAMT," ",0),ECXLLC=+$TR(ECXLLC," ",0),ECXLMC=+$TR(ECXLMC," ",0)
"RTN","ECXLPRO",94,0)
 .;tmp global holds - lab qty^lab labor cost^lab matrl cost
"RTN","ECXLPRO",95,0)
 .I '$D(^TMP($J,"ECXP",ECXTYPE,ECXHCPC)) S ^TMP($J,"ECXP",ECXTYPE,ECXHCPC,"SAME")="0^0^0",^TMP($J,"ECXP",ECXTYPE,ECXHCPC,"OTHER")="0^0^0"
"RTN","ECXLPRO",96,0)
 .S $P(^TMP($J,"ECXP",ECXTYPE,ECXHCPC,ECXLAB),U,1)=$P(^TMP($J,"ECXP",ECXTYPE,ECXHCPC,ECXLAB),U,1)+ECXQTY
"RTN","ECXLPRO",97,0)
 .S $P(^TMP($J,"ECXP",ECXTYPE,ECXHCPC,ECXLAB),U,2)=$P(^TMP($J,"ECXP",ECXTYPE,ECXHCPC,ECXLAB),U,2)+ECXLLC
"RTN","ECXLPRO",98,0)
 .S $P(^TMP($J,"ECXP",ECXTYPE,ECXHCPC,ECXLAB),U,3)=$P(^TMP($J,"ECXP",ECXTYPE,ECXHCPC,ECXLAB),U,3)+ECXLMC
"RTN","ECXLPRO",99,0)
 ;setup hcpcs descriptions
"RTN","ECXLPRO",100,0)
 D HCPCS^ECXCPRO
"RTN","ECXLPRO",101,0)
 ;print report
"RTN","ECXLPRO",102,0)
 D PRINT^ECXLPRO1
"RTN","ECXLPRO",103,0)
 ;cleanup
"RTN","ECXLPRO",104,0)
 I '$G(ECXPORT) D AUDIT^ECXKILL ;144
"RTN","ECXLPRO",105,0)
 Q
"RTN","ECXLPRO",106,0)
 ;
"RTN","ECXLPRO",107,0)
HCPCS ;setup hcpcs cross-reference
"RTN","ECXLPRO",108,0)
 N H,CPT,CPTNM,DESC
"RTN","ECXLPRO",109,0)
 S H=0
"RTN","ECXLPRO",110,0)
 F  S H=$O(^RMPR(661.1,H)) Q:+H<1  D
"RTN","ECXLPRO",111,0)
 .;don't skip inactive hcpcs in case doing previous fy
"RTN","ECXLPRO",112,0)
 .S CPTNM="",CPT=$P(^RMPR(661.1,H,0),U,4)
"RTN","ECXLPRO",113,0)
 .I +CPT>0 S CPTNM=$P(^ICPT(CPT,0),U,1),DESC=$E($P(^ICPT(CPT,0),U,2),1,26)
"RTN","ECXLPRO",114,0)
 .Q:CPTNM=""
"RTN","ECXLPRO",115,0)
 .S ^TMP($J,"HCPCS",CPTNM)=DESC
"RTN","ECXLPRO",116,0)
 Q
"RTN","ECXLPRO1")
0^39^B11630599^B8515235
"RTN","ECXLPRO1",1,0)
ECXLPRO1 ;ALB/JAP - PRO Extract YTD Lab Report (cont) ;3/4/13  16:29
"RTN","ECXLPRO1",2,0)
 ;;3.0;DSS EXTRACTS;**21,84,144**;Dec 22, 1997;Build 9
"RTN","ECXLPRO1",3,0)
 ;
"RTN","ECXLPRO1",4,0)
PRINT ;print report
"RTN","ECXLPRO1",5,0)
 N PG,LN,QFLG,NODE1,NODE2,DESC,AVE,JJ,SS,X1,X2
"RTN","ECXLPRO1",6,0)
 U IO
"RTN","ECXLPRO1",7,0)
 S QFLG=0,$P(LN,"-",132)=""
"RTN","ECXLPRO1",8,0)
 S Y=ECXARRAY("START") D DD^%DT S ECXSTART=Y
"RTN","ECXLPRO1",9,0)
 S Y=$S(LASTDAY:LASTDAY,ECXARRAY("END")>DT:DT,1:ECXARRAY("END")) D DD^%DT S ECXEND=Y
"RTN","ECXLPRO1",10,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXLPRO1",11,0)
 F ECXTYPE="N","X" D  Q:QFLG
"RTN","ECXLPRO1",12,0)
 .I '$G(ECXPORT) S PG=0 D HEADER ;144 No header if exporting
"RTN","ECXLPRO1",13,0)
 .S ECXHCPC=""
"RTN","ECXLPRO1",14,0)
 .;it's possible that no extract data was found
"RTN","ECXLPRO1",15,0)
 .I '$D(^TMP($J,"ECXP",ECXTYPE)) D  Q
"RTN","ECXLPRO1",16,0)
 ..I $G(ECXPORT) Q  ;144 Don't print if exporting
"RTN","ECXLPRO1",17,0)
 ..W !!,?37,"No extract data available."
"RTN","ECXLPRO1",18,0)
 ..I $E(IOST)="C" D  Q:QFLG
"RTN","ECXLPRO1",19,0)
 ...S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXLPRO1",20,0)
 ...S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXLPRO1",21,0)
 .F  S ECXHCPC=$O(^TMP($J,"ECXP",ECXTYPE,ECXHCPC)) Q:ECXHCPC=""  D  Q:QFLG
"RTN","ECXLPRO1",22,0)
 ..S DESC=$G(^TMP($J,"HCPCS",ECXHCPC)) S:DESC="" DESC="(Unknown)" S DESC=ECXHCPC_" "_DESC
"RTN","ECXLPRO1",23,0)
 ..S NODE1=^TMP($J,"ECXP",ECXTYPE,ECXHCPC,"SAME"),NODE2=^TMP($J,"ECXP",ECXTYPE,ECXHCPC,"OTHER")
"RTN","ECXLPRO1",24,0)
 ..;node holds - lab qty^lab labor cost^lab matrl cost
"RTN","ECXLPRO1",25,0)
 ..F I=1:1:3 S X1(I)=+$P(NODE1,U,I),X2(I)=+$P(NODE2,U,I)
"RTN","ECXLPRO1",26,0)
 ..S AVE("O")=0,AVE("S")=0,TOT("O")=0,TOT("S")=0
"RTN","ECXLPRO1",27,0)
 ..S TOT("S")=X1(2)+X1(3),TOT("O")=X2(2)+X2(3)
"RTN","ECXLPRO1",28,0)
 ..S:X1(1)>0 AVE("S")=TOT("S")/X1(1) S:X2(1)>0 AVE("O")=TOT("O")/X2(1)
"RTN","ECXLPRO1",29,0)
 ..I '$G(ECXPORT) D:($Y+3>IOSL) HEADER Q:QFLG  ;144 Don't print header if exporting
"RTN","ECXLPRO1",30,0)
 ..I $G(ECXPORT) D  Q  ;144 get data if exporting
"RTN","ECXLPRO1",31,0)
 ...S ^TMP($J,"ECXPORT",CNT)=$S(ECXTYPE="N":"NEW",1:"REPAIR") ;144
"RTN","ECXLPRO1",32,0)
 ...S ^TMP($J,"ECXPORT",CNT)=^TMP($J,"ECXPORT",CNT)_U_DESC_U_X1(1)_U_X1(2)_U_X1(3)_U_$FN(AVE("S"),"",2)_U_X2(1)_U_X2(2)_U_X2(3)_U_$FN(AVE("O"),"",2) ;144
"RTN","ECXLPRO1",33,0)
 ...S CNT=CNT+1 ;144
"RTN","ECXLPRO1",34,0)
 ..W !,DESC,?33,$J(X1(1),8,0),?43,$J(X1(2),8,0),?54,$J(X1(3),8,0),?65,$J(AVE("S"),8,2),?82,$J(X2(1),8,0),?93,$J(X2(2),8,0),?104,$J(X2(3),8,0),?115,$J(AVE("O"),8,2)
"RTN","ECXLPRO1",35,0)
 .I $G(ECXPORT) Q  ;144 Stop if exporting
"RTN","ECXLPRO1",36,0)
 .I 'QFLG,$E(IOST)="C" D
"RTN","ECXLPRO1",37,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXLPRO1",38,0)
 ..S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXLPRO1",39,0)
 I '$G(ECXPORT) W @IOF ;144 Don't print if exporting
"RTN","ECXLPRO1",40,0)
 Q
"RTN","ECXLPRO1",41,0)
 ;
"RTN","ECXLPRO1",42,0)
HEADER ;header & page control
"RTN","ECXLPRO1",43,0)
 I $E(IOST)="C" D
"RTN","ECXLPRO1",44,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXLPRO1",45,0)
 .I PG>0 S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXLPRO1",46,0)
 Q:QFLG
"RTN","ECXLPRO1",47,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXLPRO1",48,0)
 W "Prosthetics (PRO) Extract YTD Laboratory Report",?122,"Page "_PG
"RTN","ECXLPRO1",49,0)
 W !,"FY Date Range: "_ECXSTART_" to "_ECXEND
"RTN","ECXLPRO1",50,0)
 W !,"Facility:      "_$P(ECXPRIME,U,3)_" ("_$P(ECXPRIME,U,2)_")"
"RTN","ECXLPRO1",51,0)
 W !,"Run Date/Time: "_ECXRUN
"RTN","ECXLPRO1",52,0)
 W:ECXTYPE="N" !!,"REPORT OF NEW PROSTHETICS ACTIVITIES (Initial, Replacement, or Spare)",!
"RTN","ECXLPRO1",53,0)
 W:ECXTYPE="X" !!,"REPORT OF REPAIR PROSTHETICS ACTIVITIES",!
"RTN","ECXLPRO1",54,0)
 W !,?37,"Produced for Station #"_$P(ECXPRIME,U,2),?86,"Produced for all other stations"
"RTN","ECXLPRO1",55,0)
 W !,"PSAS HCPCS",?37,"Qty.",?44,"Labor $",?55,"Mat'l $",?67,"Ave. $",?86,"Qty.",?94,"Labor $",?105,"Mat'l $",?117,"Ave. $"
"RTN","ECXLPRO1",56,0)
 W !,LN,!
"RTN","ECXLPRO1",57,0)
 Q
"RTN","ECXOPRX")
0^26^B64829942^B60339399
"RTN","ECXOPRX",1,0)
ECXOPRX ;ALB/JAP,BIR/DMA,CML,PTD-Prescription Extract for DSS ;4/16/13  16:28
"RTN","ECXOPRX",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,30,33,38,39,46,49,71,81,84,92,105,112,120,127,136,144**;Dec 22, 1997;Build 9
"RTN","ECXOPRX",3,0)
 ;
"RTN","ECXOPRX",4,0)
BEG ;entry point from option
"RTN","ECXOPRX",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXOPRX",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXOPRX",7,0)
 Q
"RTN","ECXOPRX",8,0)
 ;
"RTN","ECXOPRX",9,0)
START ;entry when queued
"RTN","ECXOPRX",10,0)
 N X,DA,DIC,DIQ,DR,ECXNPRFI,ECRXPTST,ECNONVAP,ECRXNUM,ECXSCRX,ECXESC,ECXCLST,ECXECL ;144
"RTN","ECXOPRX",11,0)
 S QFLG=0
"RTN","ECXOPRX",12,0)
 I '$D(ECINST) D
"RTN","ECXOPRX",13,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXOPRX",14,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXOPRX",15,0)
 ;before V6
"RTN","ECXOPRX",16,0)
 S ECPROF=6,ECD=$O(^PSRX("AL",0)) I ECD,ECD<ECSD1 G V6
"RTN","ECXOPRX",17,0)
 S ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",18,0)
 F  S ECD=$O(^PSRX("AD",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AD",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AD",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",19,0)
 Q
"RTN","ECXOPRX",20,0)
 ;
"RTN","ECXOPRX",21,0)
V6 ;version 6 or better
"RTN","ECXOPRX",22,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",23,0)
 S ECPROF=2,ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",24,0)
 F  S ECD=$O(^PSRX("AL",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AL",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AL",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",25,0)
 Q:QFLG
"RTN","ECXOPRX",26,0)
 S ECREF="P",ECD=ECSD1
"RTN","ECXOPRX",27,0)
 F  S ECD=$O(^PSRX("AM",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AM",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AM",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",28,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",29,0)
 Q
"RTN","ECXOPRX",30,0)
 ;
"RTN","ECXOPRX",31,0)
STUFF ;get data
"RTN","ECXOPRX",32,0)
 N ECXPHA
"RTN","ECXOPRX",33,0)
 S ECDATA=$G(^PSRX(ECRX,0)),ECXPHA="" Q:'ECDATA
"RTN","ECXOPRX",34,0)
 I ECRFL S ECDATA1=$G(^PSRX(ECRX,ECREF,ECRFL,0)) I ECDATA1="" Q
"RTN","ECXOPRX",35,0)
 ;ecref set to 1 in extract+5 and v6+1 and to "P" in v6+2
"RTN","ECXOPRX",36,0)
 ;refill nodes and partial nodes are identical in layout.  Fills
"RTN","ECXOPRX",37,0)
 ;(ie ecrfl=0)& refills (ie ecrfl>0) from "AL" xref, partials from "AM"
"RTN","ECXOPRX",38,0)
 S (ECXDSSD,ECXPROVN,ECXCVE,ECXCVEDT,ECXCVENC,ECRXPTST,ECRXNUM)="",ECXERR=0,ECXDATE=ECD,ECXDFN=$P(ECDATA,U,2),ECDRG=+$P(ECDATA,U,6)
"RTN","ECXOPRX",39,0)
 ;- Get rx patient status & rx number
"RTN","ECXOPRX",40,0)
 S ECRXPTST=$$RXPTST^ECXUTL5($P(ECDATA,U,3)),ECRXNUM=$P(ECDATA,U,1)
"RTN","ECXOPRX",41,0)
 ;- Get provider (either 2_provider or 6_provider depending on version)
"RTN","ECXOPRX",42,0)
 S ECXPROV=$S($P(ECDATA,U,4)'="":ECPROF_$P(ECDATA,U,4),1:""),ECXPROVP=$$PRVCLASS^ECXUTL($P(ECDATA,U,4),ECXDATE)
"RTN","ECXOPRX",43,0)
 S ECPRVNPI=$$NPI^XUSNPI("Individual_ID",$P(ECDATA,U,4),ECXDATE)
"RTN","ECXOPRX",44,0)
 S:+ECPRVNPI'>0 ECPRVNPI="" S ECPRVNPI=$P(ECPRVNPI,U)
"RTN","ECXOPRX",45,0)
 ;get classification data
"RTN","ECXOPRX",46,0)
 S ECXCLS=$G(^PSRX(ECRX,"IBQ")),ECXMIL=$P(ECXCLS,U,2),ECXAO=$P(ECXCLS,U,3),ECXIR=$P(ECXCLS,U,4),ECXECE=$P(ECXCLS,U,5),ECXHNC=$P(ECXCLS,U,6),ECXSHAD=$P(ECXCLS,U,8)
"RTN","ECXOPRX",47,0)
 F X="ECXMIL","ECXAO","ECXIR","ECXECE","ECXHNC","ECXSHAD" S @X=$S(@X:"Y",@X=0:"N",1:"")
"RTN","ECXOPRX",48,0)
 ;- Check non-va provider flag and set to 'Y' if exist
"RTN","ECXOPRX",49,0)
 S ECNONVAP=$$NONVAP^ECXUTL5($E(ECXPROV,2,99))
"RTN","ECXOPRX",50,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXOPRX",51,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXOPRX",52,0)
 ;get patient specific data
"RTN","ECXOPRX",53,0)
 D PAT(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXOPRX",54,0)
 I 'ECRFL D
"RTN","ECXOPRX",55,0)
 .S ECMW=$P(ECDATA,U,11),ECQTY=+$P(ECDATA,U,7),ECXDIV=$S($D(^PSRX(ECRX,2)):$P(^(2),U,9),1:1)
"RTN","ECXOPRX",56,0)
 .S ECPRC=+$P(ECDATA,U,17),ECOPAY=$P($G(^PSRX(ECRX,"IB")),U,2)]""
"RTN","ECXOPRX",57,0)
 I ECRFL D
"RTN","ECXOPRX",58,0)
 .S ECMW=$P(ECDATA1,U,2),ECQTY=+$P(ECDATA1,U,4),ECXDIV=$S(+$P(ECDATA1,U,9):$P(ECDATA1,U,9),1:1)
"RTN","ECXOPRX",59,0)
 .S ECPRC=+$P(ECDATA1,U,11),ECOPAY=$P($G(^PSRX(ECRX,1,ECRFL,"IB")),U)]""
"RTN","ECXOPRX",60,0)
 S ECXCOST=$J((ECQTY*ECPRC),1,2),ECDS=$S(ECRFL:$P(ECDATA1,U,10),1:$P(ECDATA,U,8))
"RTN","ECXOPRX",61,0)
 ;call pharmacy drug file (#50) api
"RTN","ECXOPRX",62,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG),ECCAT=$P(ECXPHA,U,2),ECINV=$P(ECXPHA,U,4)
"RTN","ECXOPRX",63,0)
 ; new method of dea spl hndlg **136 updated precedence *144
"RTN","ECXOPRX",64,0)
 I ECXLOGIC>2012 S ECINV=$S((+ECINV>0)&(+ECINV<6):+ECINV,ECINV["I":"I",1:"")
"RTN","ECXOPRX",65,0)
 ; old method of dea spl hndlg **136
"RTN","ECXOPRX",66,0)
 I ECXLOGIC<2013 S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXOPRX",67,0)
 S ECUI=$P(ECXPHA,U,8),ECNDC=$P(ECXPHA,U,3)
"RTN","ECXOPRX",68,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0),P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6)
"RTN","ECXOPRX",69,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXOPRX",70,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXOPRX",71,0)
 I ECMW="M" S ECMW=1 I $D(^PSRX("AR",ECD,ECRX)) S ECMW=2
"RTN","ECXOPRX",72,0)
 I ECMW="W" S ECMW=""
"RTN","ECXOPRX",73,0)
 S ECXNEW="" I ECRFL=0 S ECXNEW=1
"RTN","ECXOPRX",74,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS) ;Observation pat indic (YES/NO)
"RTN","ECXOPRX",75,0)
 S ECXORDPH="" ;Ordering physician (null for FY2002)
"RTN","ECXOPRX",76,0)
 ;- Ordering stop code & Ordering date
"RTN","ECXOPRX",77,0)
 S ECXORDST=$P($G(^ECX(728.44,+$P(ECDATA,U,5),0)),U,2),ECXORDDT=$$ECXDATE^ECXUTL(+$P(ECDATA,U,13),ECXYM)
"RTN","ECXOPRX",78,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN) ;CNH status (YES/NO)
"RTN","ECXOPRX",79,0)
 ;- DSS Dept and National Prod Division
"RTN","ECXOPRX",80,0)
 ;S ECXDSSD=$$PRE^ECXDEPT(ECXDIV,ECMW,ECINST) dss department postponed
"RTN","ECXOPRX",81,0)
 N ECXPDIV S ECXPDIV=$$PREDIV^ECXDEPT(ECXDIV)
"RTN","ECXOPRX",82,0)
 ;- Set national patient record flag if exist
"RTN","ECXOPRX",83,0)
 D NPRF^ECXUTL5
"RTN","ECXOPRX",84,0)
 S ECXSCRX=$$SCRX^ECXUTL5(ECRX) ;Service connected rx
"RTN","ECXOPRX",85,0)
 S ECXESC=ECXSCRX ;144 Encounter SC set based on prescription SC setting
"RTN","ECXOPRX",86,0)
 S ECXECL="" ;144 Encounter Camp Lejeune null until information available in prescription file
"RTN","ECXOPRX",87,0)
 ;- If no encounter number don't file record
"RTN","ECXOPRX",88,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXOPRX",89,0)
 I ECXLOGIC>2003 D
"RTN","ECXOPRX",90,0)
 .I (ECMW=2)!((ECMW=1)&(ECXLOGIC>2006)),ECXSSN'="" D
"RTN","ECXOPRX",91,0)
 .. N TMP
"RTN","ECXOPRX",92,0)
 .. I (ECXLOGIC>2008) S TMP=$$JULDT^ECXUTL4(ECD),ECXENC=$E(ECXSSN,1,9)_TMP_"PHA"
"RTN","ECXOPRX",93,0)
 .. E  S TMP=$$JULDT^ECXUTL4(ECD),ECXENC=$E(ECXSSN,1,9)_TMP_"160"
"RTN","ECXOPRX",94,0)
 .. I (ECXLOGIC>2009),(ECXOBS="YES") S ECXOBS=""
"RTN","ECXOPRX",95,0)
 .. S ECXA="O"
"RTN","ECXOPRX",96,0)
 I ECXENC'="" D FILE^ECXOPRX1
"RTN","ECXOPRX",97,0)
 Q
"RTN","ECXOPRX",98,0)
 ;
"RTN","ECXOPRX",99,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;Determine in/outpatient status, movement number, primary care team and provider
"RTN","ECXOPRX",100,0)
 N OK,X,PT
"RTN","ECXOPRX",101,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXOPRX",102,0)
 ;get patient data if saved
"RTN","ECXOPRX",103,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXOPRX",104,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXSSN=$P(PT,U),ECXPNM=$P(PT,U,2),ECXMPI=$P(PT,U,3),ECXSEX=$P(PT,U,4),ECXDOB=$P(PT,U,5)
"RTN","ECXOPRX",105,0)
 .S ECXELIG=$P(PT,U,6),ECXVET=$P(PT,U,7),ECXRACE=$P(PT,U,8),ECXPST=$P(PT,U,9),ECXPLOC=$P(PT,U,10),ECXRST=$P(PT,U,11)
"RTN","ECXOPRX",106,0)
 .S ECXAST=$P(PT,U,12),ECXMST=$P(PT,U,13),ECXSTATE=$P(PT,U,14),ECXCNTY=$P(PT,U,15),ECXZIP=$P(PT,U,16),ECXENRL=$P(PT,U,17)
"RTN","ECXOPRX",107,0)
 .S ECXPHI=$P(PT,U,20),ECXCAT=$P(PT,U,21),ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23)
"RTN","ECXOPRX",108,0)
 .S ECXCNHU=$P(PT,U,24),ECXPOS=$P(PT,U,25),ECXAOL=$P(PT,U,26),ECXHNCI=$P(PT,U,27),ECXETH=$P(PT,U,28),ECXRC1=$P(PT,U,29),ECXMTST=$P(PT,U,30)
"RTN","ECXOPRX",109,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4),ECXCNTRY=$P(PT1,U,5)
"RTN","ECXOPRX",110,0)
 .S ECXPATCAT=$P(PT1,U,6),ECXSHAD=$P(PT1,U,7),ECXSHADI=$P(PT1,U,8),ECXVNS=$P(PT1,U,9),ECXCLST=$P(PT1,U,10) ;144 Vietnam and Camp Lejeune status
"RTN","ECXOPRX",111,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXOPRX",112,0)
 ;set patient data
"RTN","ECXOPRX",113,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXOPRX",114,0)
 .K ECXPAT
"RTN","ECXOPRX",115,0)
 .S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD1,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXOPRX",116,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXOPRX",117,0)
 .S ECXSSN=ECXPAT("SSN"),ECXPNM=ECXPAT("NAME"),ECXMPI=ECXPAT("MPI"),ECXSEX=ECXPAT("SEX"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG")
"RTN","ECXOPRX",118,0)
 .S ECXVET=ECXPAT("VET"),ECXRACE=ECXPAT("RACE"),ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXOPRX",119,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXMST=ECXPAT("MST STAT"),ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP"),ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXOPRX",120,0)
 .S ECXERI=ECXPAT("ERI"),ECXEST=ECXPAT("EC STAT"),ECXCNTRY=ECXPAT("COUNTRY"),ECXVNS=ECXPAT("VIETNAM"),ECXCLST=ECXPAT("CL STAT") ; 144 VIETNAM STATUS and Camp Lejeune Status
"RTN","ECXOPRX",121,0)
 .;- CNH Stat (placeholder),Purp Heart Ind,Per of Svce,AO Loc,MT Stat
"RTN","ECXOPRX",122,0)
 .S ECXCNHU="",ECXPHI=ECXPAT("PHI"),ECXPOS=ECXPAT("POS"),ECXAOL=ECXPAT("AOL"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXOPRX",123,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXOPRX",124,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN) ;Head and Neck Cancer Indicator
"RTN","ECXOPRX",125,0)
 .S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN) ;Proj 112/SHAD Indicator
"RTN","ECXOPRX",126,0)
 .S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1") ;Race and Ethnicity
"RTN","ECXOPRX",127,0)
 .; OEF/OIF data
"RTN","ECXOPRX",128,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXOPRX",129,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXOPRX",130,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXSSN_U_ECXPNM_U_ECXMPI_U_ECXSEX_U_ECXDOB_U_ECXELIG_U_ECXVET_U_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U_ECXMST_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXENRL_U_U
"RTN","ECXOPRX",131,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXPHI_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXCNHU_U_ECXPOS_U_ECXAOL_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXOPRX",132,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT_U_ECXCNTRY_U_ECXPATCAT_U_ECXSHAD_U_ECXSHADI_U_ECXVNS_U_ECXCLST ;144 VIETNAM STATUS and Camp Lejeune Status
"RTN","ECXOPRX",133,0)
 ;get inpatient data
"RTN","ECXOPRX",134,0)
 S (ECXA,ECXADMDT,ECXDOM,ECXMN,ECXTS)="",X=$$INP^ECXUTL2(ECXDFN,ECXDATE) D
"RTN","ECXOPRX",135,0)
 .S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXOPRX",136,0)
 ;get primary care data
"RTN","ECXOPRX",137,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,".")),ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXOPRX",138,0)
 Q
"RTN","ECXOPRX",139,0)
 ;
"RTN","ECXOPRX",140,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXOPRX",141,0)
 S ECHEAD="PRE"
"RTN","ECXOPRX",142,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXOPRX",143,0)
 Q
"RTN","ECXOPRX",144,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXOPRX",145,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXOPRX1")
0^27^B9994734^B9265203
"RTN","ECXOPRX1",1,0)
ECXOPRX1 ;ALB/JAP,BIR/DMA,CML,PTD-Prescription Extract for DSS ;4/16/13  16:36
"RTN","ECXOPRX1",2,0)
 ;;3.0;DSS EXTRACTS;**92,107,105,120,127,144**;Dec 22, 1997;Build 9
"RTN","ECXOPRX1",3,0)
 ;
"RTN","ECXOPRX1",4,0)
FILE ;file record
"RTN","ECXOPRX1",5,0)
 ;node0
"RTN","ECXOPRX1",6,0)
 ;inst^dfn^ssn^name^in/out ECXA^day^division^provider^drug category^mail^
"RTN","ECXOPRX1",7,0)
 ;placeholder1^new^shad indicator^qty^cost^encounter shad^mov #^treat spec^placeholder4^unit of issue^dob^elig^vet^copay^
"RTN","ECXOPRX1",8,0)
 ;feeder key^investigational^days supply^primary care team^primary care provider^time^race
"RTN","ECXOPRX1",9,0)
 ;node1
"RTN","ECXOPRX1",10,0)
 ;mpi^dss dept ECXDSSD^sex^zip+4^placeholder^placeholder^state^county^pc prov person class^pow status^pow location^
"RTN","ECXOPRX1",11,0)
 ;ir status^ao status^sharing agree. payor^sharing agree. ins.^mst status^enroll loc^assoc pc provider^assoc pc prov person class^
"RTN","ECXOPRX1",12,0)
 ;placeholder^dom ECXDOM^purple heart ECXPHI^enrollment category ECXCAT^enrollment status ECXSTST^
"RTN","ECXOPRX1",13,0)
 ;enrollment priority ECXPRIOR^cnhu status ECXCNHU^period of service ECXPOS^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXOPRX1",14,0)
 ;ao loc ECXAOL^ord physician ECXORDPH^ord stop code ECXORDST^ord date ECXORDDT^CNH status ECXCNH^national division ECXPDIV^
"RTN","ECXOPRX1",15,0)
 ;MT Stat ECXMTST^head & neck cancer ind. ECXHNCI^ethnicity ECXETH^race ECXRC1^^enrollment priority ECXPRIOR_
"RTN","ECXOPRX1",16,0)
 ;enrollment subgroup ECXSBGRP^user enrollee ECXUESTA
"RTN","ECXOPRX1",17,0)
 ;NODE 2
"RTN","ECXOPRX1",18,0)
 ;patient type ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^
"RTN","ECXOPRX1",19,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^rx patient status ECRXPTST^non-va prescriber ECNONVAP^rx # ECRXNUM
"RTN","ECXOPRX1",20,0)
 ;^emergency response indicator(FEMA) ECXERI^agent orange enc ECXAO^environ cont PGE ECXECE^head/neck ECXHNC^enc mst ECXMIL^environ contamin ECXEST^ion radiat ECXIR
"RTN","ECXOPRX1",21,0)
 ;^OEF/OIF data ECXOEF^OEFOIF return date ECXOEFDT^associate pc provider npi ECASNPI^primary care provider npi ECPTNPI^provider npi ECPRVNPI
"RTN","ECXOPRX1",22,0)
 ;^country ECXCNTRY^PATCAT^Encounter SC ECXESC^Vietnam ECXVNS^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL
"RTN","ECXOPRX1",23,0)
 N DA,DIK
"RTN","ECXOPRX1",24,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXOPRX1",25,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXOPRX1",26,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXDIV_U
"RTN","ECXOPRX1",27,0)
 S ECODE=ECODE_ECXPROV_U_ECCAT_U_ECMW_U_ECXPROVP_U_ECXNEW_U_$S(ECXLOGIC>2010:ECXSHADI,1:"")_U_ECQTY_U
"RTN","ECXOPRX1",28,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXOPRX1",29,0)
 N ECXDATA
"RTN","ECXOPRX1",30,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXOPRX1",31,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXOPRX1",32,0)
 ;done
"RTN","ECXOPRX1",33,0)
 S ECODE=ECODE_ECXCOST_U_$S(ECXLOGIC>2010:ECXSHAD,1:"")_U_ECXMN_U_ECXTS_U_U_ECUI_U_ECXDOB_U
"RTN","ECXOPRX1",34,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECOPAY_U_ECNFC_U_ECINV_U_ECDS_U
"RTN","ECXOPRX1",35,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_$$ECXTIME^ECXUTL(ECXDATE)_U_ECXRACE_U
"RTN","ECXOPRX1",36,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U_ECXPROVN_U_U
"RTN","ECXOPRX1",37,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECCLAS_U_ECXPST_U_ECXPLOC_U
"RTN","ECXOPRX1",38,0)
 S ECODE1=ECODE1_ECXRST_U_ECXAST_U_U_U_ECXMST_U_ECXENRL_U
"RTN","ECXOPRX1",39,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXPHI_U_ECXCAT_U
"RTN","ECXOPRX1",40,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXCNHU_U_ECXPOS_U_ECXOBS_U
"RTN","ECXOPRX1",41,0)
 S ECODE1=ECODE1_ECXENC_U_ECXAOL_U_ECXORDPH_U_ECXORDST_U_ECXORDDT_U
"RTN","ECXOPRX1",42,0)
 S ECODE1=ECODE1_ECXCNH_U_ECXPDIV_U_ECXMTST_U_ECXHNCI_U_ECXETH_U
"RTN","ECXOPRX1",43,0)
 S ECODE1=ECODE1_ECXRC1_U
"RTN","ECXOPRX1",44,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U
"RTN","ECXOPRX1",45,0)
 I ECXLOGIC>2004 S ECODE2=ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI_U_ECRXPTST_U_ECNONVAP
"RTN","ECXOPRX1",46,0)
 I ECXLOGIC>2005 S ECODE2=ECODE2_U_ECRXNUM
"RTN","ECXOPRX1",47,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXEST_U_ECXIR_U_ECXSCRX
"RTN","ECXOPRX1",48,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECPRVNPI
"RTN","ECXOPRX1",49,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXOPRX1",50,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT
"RTN","ECXOPRX1",51,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXVNS_U_ECXCLST_U_ECXECL ;144
"RTN","ECXOPRX1",52,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXOPRX1",53,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXOPRX1",54,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXOPRX1",55,0)
 Q
"RTN","ECXPIVD2")
0^52^B9468858^B9098930
"RTN","ECXPIVD2",1,0)
ECXPIVD2 ;ALB/JAP,BIR/DMA,CML,PTD-Extract from IV EXTRACT DATA File (#728.113) ;4/16/13  15:25
"RTN","ECXPIVD2",2,0)
 ;;3.0;DSS EXTRACTS;**105,120,127,144**;Dec 22, 1997;Build 9
"RTN","ECXPIVD2",3,0)
FILE ;file record
"RTN","ECXPIVD2",4,0)
 ;node0
"RTN","ECXPIVD2",5,0)
 ;fac^dfn^ssn^name^i/o^day^va class^qty^ward^cost^movement #^treat spec^ndc^investigational^iv dispensing fee^new feeder key^total doses^
"RTN","ECXPIVD2",6,0)
 ;primary care team^primary care provider^ivp time^adm date^adm time^dss identifier
"RTN","ECXPIVD2",7,0)
 ;node1
"RTN","ECXPIVD2",8,0)
 ;mpi^dss dept^pc provider npi^pc prov person class^assoc pc provider^assoc pc prov person class^assoc pc prov npi^dom^obs pat ind^enc num^
"RTN","ECXPIVD2",9,0)
 ;ord pr^ordering stop code^ord dt^req phys^nat prod division^means tst^elig^dob^sex^state^county^zip+4^vet^period of svc^pow stat^pow loc^ir stat^ao stat^
"RTN","ECXPIVD2",10,0)
 ;ao loc^purple heart ind.^mst stat^enrollment loc^enrollment cat^enrollment stat^enrollment prior^cnh/sh stat^ord pr npi
"RTN","ECXPIVD2",11,0)
 ;node2
"RTN","ECXPIVD2",12,0)
 ;head & neck cancer ind.^ethnicity^race1^bcma drug dispensed^bcma dose given^bcma unit of administration^bcma ICU flag^
"RTN","ECXPIVD2",13,0)
 ;ordering provider person class^^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig ECXCVE^
"RTN","ECXPIVD2",14,0)
 ;combat vet elig end date ECXCVEDT^enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^emerg resp indic(FEMA) ECXERI^
"RTN","ECXPIVD2",15,0)
 ;environ contamin ECXEST
"RTN","ECXPIVD2",16,0)
 ;^oef/oif ECXOEF^ oef/oif return date ECXOEFDT^assoc pc prov npi ECASNPI
"RTN","ECXPIVD2",17,0)
 ;^ordering provider npi ECXOPNPI^primary care provider npi ECPTNPI
"RTN","ECXPIVD2",18,0)
 ;^country ECXCNTRY^PATCAT^Encounter SC ECXESC^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL ;144
"RTN","ECXPIVD2",19,0)
 N DA,DIK
"RTN","ECXPIVD2",20,0)
 S ECPLACE=""
"RTN","ECXPIVD2",21,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPIVD2",22,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_DFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXPIVD2",23,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECVACL_U_ECXCNT_U_ECXW_U
"RTN","ECXPIVD2",24,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXPIVD2",25,0)
 N ECXDATA
"RTN","ECXPIVD2",26,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXPIVD2",27,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXPIVD2",28,0)
 ;done
"RTN","ECXPIVD2",29,0)
 S ECODE=ECODE_ECXCOST_U_ECXMN_U_ECXTS_U_ECNDC_U_ECINV_U_ECTYP_U_ECNFC_U
"RTN","ECXPIVD2",30,0)
 S ECODE=ECODE_ECST_U_ECPTTM_U_ECPTPR_U_ECDTTM_U_$$ECXDATE^ECXUTL(ECXADM,ECXYM)_U_$$ECXTIME^ECXUTL(ECXADM)_U_ECXDSSI_U
"RTN","ECXPIVD2",31,0)
 ;if outpat and not observ patient, admit date="" and admit time="000000"
"RTN","ECXPIVD2",32,0)
 I ECXA="O",(ECXOBS="NO") S $P(ECODE,U,24)="",$P(ECODE,U,25)="000000"
"RTN","ECXPIVD2",33,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECPLACE_U_ECCLAS_U_ECASPR_U_ECCLAS2_U_ECPLACE_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXORDPR_U
"RTN","ECXPIVD2",34,0)
 S ECODE1=ECODE1_ECXORDST_U_$$ECXDATE^ECXUTL(ECXORDDT,ECXYM)_U_ECXRPHY_U_ECXPDIV_U_ECXMTST_U_ECXELIG_U_ECXDOB_U
"RTN","ECXPIVD2",35,0)
 S ECODE1=ECODE1_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U
"RTN","ECXPIVD2",36,0)
 S ECODE1=ECODE1_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCAT_U
"RTN","ECXPIVD2",37,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_ECXCNHU_U_U
"RTN","ECXPIVD2",38,0)
 S ECODE2=ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXPIVD2",39,0)
 I ECXLOGIC>2003 D
"RTN","ECXPIVD2",40,0)
 .S ECODE2=ECODE2_U_ECXBCDD_U_ECXBCDG_U_ECXBCUA_U_ECXBCIF_U_ECXOPPC
"RTN","ECXPIVD2",41,0)
 I ECXLOGIC>2004 S ECODE2=ECODE2_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXPIVD2",42,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXEST
"RTN","ECXPIVD2",43,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECXOPNPI_U_ECPTNPI
"RTN","ECXPIVD2",44,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXPIVD2",45,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT
"RTN","ECXPIVD2",46,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXPIVD2",47,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXPIVD2",48,0)
 S ^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXPIVD2",49,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXPIVD2",50,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPIVD2",51,0)
 Q
"RTN","ECXPIVDN")
0^29^B58898409^B58842000
"RTN","ECXPIVDN",1,0)
ECXPIVDN ;ALB/JAP,BIR/DMA,CML,PTD-Extract from IV EXTRACT DATA File (#728.113) ;8/20/13  16:39
"RTN","ECXPIVDN",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,33,39,46,49,71,84,96,92,107,105,112,120,127,136,143,144**;Dec 22, 1997;Build 9
"RTN","ECXPIVDN",3,0)
BEG ;entry point from option
"RTN","ECXPIVDN",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXPIVDN",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXPIVDN",6,0)
 Q
"RTN","ECXPIVDN",7,0)
 ;
"RTN","ECXPIVDN",8,0)
START ; start package specific extract
"RTN","ECXPIVDN",9,0)
 N DIC,DA,DR,DIQ,DFN,ECXNPRFI,ECXPHA,ECXESC,ECXECL,ECXCLST ;144
"RTN","ECXPIVDN",10,0)
 S QFLG=0
"RTN","ECXPIVDN",11,0)
 I '$D(ECINST) D
"RTN","ECXPIVDN",12,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPIVDN",13,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPIVDN",14,0)
 S ECED=ECED+.3
"RTN","ECXPIVDN",15,0)
 K ^TMP($J,"A"),^TMP($J,"S")
"RTN","ECXPIVDN",16,0)
 S ECD=ECSD1
"RTN","ECXPIVDN",17,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^TMP($J,"S") S ECVOL=0 D  Q:QFLG
"RTN","ECXPIVDN",18,0)
 .S ECXERR=0 D PAT(DFN,ECD,.ECXERR)
"RTN","ECXPIVDN",19,0)
 .Q:ECXERR
"RTN","ECXPIVDN",20,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  Q:QFLG  I $D(^ECX(728.113,DA,0)) S EC=^(0) D  Q:QFLG
"RTN","ECXPIVDN",21,0)
 ..S DRG=$P(EC,U,4) I $P(EC,U,8)]"" D
"RTN","ECXPIVDN",22,0)
 ...I '$D(^TMP($J,"A",DRG)) S ^(DRG)=$P(EC,U,7,8),^(DRG,1)=0,^(2)=$P(EC,U,12)
"RTN","ECXPIVDN",23,0)
 ...S ^(1)=^TMP($J,"A",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",24,0)
 ..I $P(EC,U,9) D
"RTN","ECXPIVDN",25,0)
 ...I '$D(^TMP($J,"S",DRG)) S ^(DRG)=$P(EC,U,9)_"^ML",^(DRG,1)=0,^(2)=$P(EC,U,12),ECVOL=$P(EC,U,9)+ECVOL
"RTN","ECXPIVDN",26,0)
 ...S ^(1)=^TMP($J,"S",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",27,0)
 ..S ECTYP=$P(EC,U,11),ECTOTC=0,ECDTTM=$$ECXTIME^ECXUTL($P(EC,U,5))
"RTN","ECXPIVDN",28,0)
 .;looped thru all DAs for this order - now put it together
"RTN","ECXPIVDN",29,0)
 .;leave the next line in case the decision is made to send volume designations
"RTN","ECXPIVDN",30,0)
 .;I ECTYP="H" S ECTYP=ECTYP_$S(ECVOL'>1000:1,ECVOL'>2000:2,1:3)
"RTN","ECXPIVDN",31,0)
 .S ECXDSSI=""
"RTN","ECXPIVDN",32,0)
 .;loop thru tmp global and call pharmacy drug file (#50) api
"RTN","ECXPIVDN",33,0)
 .F SA="S","A" S DRG="" F  S DRG=$O(^TMP($J,SA,DRG)) Q:DRG=""  S ECXPHA="",ECXPHA=$$PHAAPI^ECXUTL5(DRG) I $P(ECXPHA,U)'="" D STUFF Q:QFLG
"RTN","ECXPIVDN",34,0)
 K ^TMP($J),CLIN,DA,DFN,DIC,DIK,DRG,ON,SA,X,Y,P1,P3
"RTN","ECXPIVDN",35,0)
 Q
"RTN","ECXPIVDN",36,0)
STUFF ;get data
"RTN","ECXPIVDN",37,0)
 N ECORDST
"RTN","ECXPIVDN",38,0)
 S ECST=^TMP($J,SA,DRG),ECXCNT=^(DRG,1),ECXCOST=^(2),ECVACL=$P(ECXPHA,U,2),ECORDST=""
"RTN","ECXPIVDN",39,0)
 ;if older logic, use incorrect calculation for cost **136
"RTN","ECXPIVDN",40,0)
 I ECXLOGIC<2013 S ECXCOST=ECXCOST*ECXCNT
"RTN","ECXPIVDN",41,0)
 ;S ECST=^TMP($J,SA,DRG),ECXCNT=^(DRG,1),ECXCOST=^(2),ECXCOST=ECXCOST*ECXCNT,ECVACL=$P(ECXPHA,U,2),ECORDST="",ECTI="" removed old cost calc **136
"RTN","ECXPIVDN",42,0)
 ;if outpatient get division from iv rm; get dss identifier for clinic
"RTN","ECXPIVDN",43,0)
 I ECXA="O" D
"RTN","ECXPIVDN",44,0)
 .;- Only set ward to .5 if outpatient (but NOT observation patient)
"RTN","ECXPIVDN",45,0)
 .I $G(ECXW)="" S ECXW=.5
"RTN","ECXPIVDN",46,0)
 .I $P(EC,U,15) S ECIVRM=$P(EC,U,15),ECXDIV=$$PSJ59P5^ECXUTL5(ECIVRM)
"RTN","ECXPIVDN",47,0)
 .S CLIN=+$P(EC,U,13),(ECXP1,ECXP2)="000",ECXCL=$G(^ECX(728.44,CLIN,0)) Q:ECXCL=""
"RTN","ECXPIVDN",48,0)
 .S ECSC=$P(ECXCL,U,4),ECCSC=$P(ECXCL,U,5)
"RTN","ECXPIVDN",49,0)
 .I ECSC="" S ECSC=$P(ECXCL,U,2),ECCSC=$P(ECXCL,U,3)
"RTN","ECXPIVDN",50,0)
 .I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXPIVDN",51,0)
 .I ECSC="" S ECSC=$P($G(^SC(ECXCL,0)),U,7),ECCSC=$P($G(^SC(ECXCL,0)),U,18) I ECSC D
"RTN","ECXPIVDN",52,0)
 ..S ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2) S:ECCSC]"" ECXP2=$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXPIVDN",53,0)
 ..S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXPIVDN",54,0)
 .S ECXDSSI=ECXP1_ECXP2
"RTN","ECXPIVDN",55,0)
 .I ECXLOGIC>2003 D
"RTN","ECXPIVDN",56,0)
 ..I "^18^23^24^41^65^94^108^"[("^"_ECXTS_"^") S ECXDSSI=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXPIVDN",57,0)
 S ECINV=$P(ECXPHA,U,4),ECST=ECXCNT*ECST_" "_$P(ECST,U,2)
"RTN","ECXPIVDN",58,0)
  ;New way to calculate cost dea spl hndlg **136 upd precedence **144
"RTN","ECXPIVDN",59,0)
 I ECXLOGIC>2012 S ECINV=$S((+ECINV>0)&(+ECINV<6):+ECINV,ECINV["I":"I",1:"") D
"RTN","ECXPIVDN",60,0)
 .; Update cost calculation use exist cost x quant x count
"RTN","ECXPIVDN",61,0)
 .S ECXCOST=+ECST*ECXCOST ;143
"RTN","ECXPIVDN",62,0)
 ; old method of dea spl hndlg **136
"RTN","ECXPIVDN",63,0)
 I ECXLOGIC<2013 S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXPIVDN",64,0)
 S ECNDC=$P(ECXPHA,U,3),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXPIVDN",65,0)
 S P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6)
"RTN","ECXPIVDN",66,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXPIVDN",67,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXPIVDN",68,0)
 ;- Ordering provider ("2"_provider)
"RTN","ECXPIVDN",69,0)
 S ECXORDPR=$S(+$P(EC,U,10):"2"_$P(EC,U,10),1:"")
"RTN","ECXPIVDN",70,0)
 N ECXUSRTN
"RTN","ECXPIVDN",71,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$P(EC,U,10),$P(EC,U,16))
"RTN","ECXPIVDN",72,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECXOPNPI=$P(ECXUSRTN,U)
"RTN","ECXPIVDN",73,0)
 S ECXORDDT=$P(EC,U,16) ;- Ordering date
"RTN","ECXPIVDN",74,0)
 ;- Requesting physician (null for FY2002)
"RTN","ECXPIVDN",75,0)
 S ECXRPHY=""
"RTN","ECXPIVDN",76,0)
 ;- Department and National Prod Division
"RTN","ECXPIVDN",77,0)
 S ECXDSSD="" ;dss department use postponed $$IVP^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",78,0)
 N ECXPDIV S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",79,0)
 ;- Observation patient indicator (yes/no)
"RTN","ECXPIVDN",80,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXDSSI)
"RTN","ECXPIVDN",81,0)
 ; - Ordering Date, Ordering Stop Code
"RTN","ECXPIVDN",82,0)
 S ECXORDST="" I ECXA="O" D
"RTN","ECXPIVDN",83,0)
 .S ECXORDST=$$DOIVPO^ECXUTL5(DFN,ON)
"RTN","ECXPIVDN",84,0)
 .I ECXOBS="NO" S ECORDST="PHA"
"RTN","ECXPIVDN",85,0)
 .I ECXOBS="YES" S ECORDST=$P($G(^ECX(727.831,+ECXTS,0)),U,6)
"RTN","ECXPIVDN",86,0)
 ;- If no encounter number don't file record
"RTN","ECXPIVDN",87,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,ECD,ECXTS,ECXOBS,ECHEAD,ECORDST,)
"RTN","ECXPIVDN",88,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)="" ;144 BCMA fields are place holder now
"RTN","ECXPIVDN",89,0)
 ;get ordering provider person class
"RTN","ECXPIVDN",90,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXORDPR,2,999),ECXORDDT)
"RTN","ECXPIVDN",91,0)
 ;set national patient record flag if exist
"RTN","ECXPIVDN",92,0)
 S ECXDFN=DFN D NPRF^ECXUTL5 K ECXDFN
"RTN","ECXPIVDN",93,0)
 D:ECXENC'="" FILE^ECXPIVD2 K P1,P3
"RTN","ECXPIVDN",94,0)
 Q
"RTN","ECXPIVDN",95,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographics, primary care, and inpatient data
"RTN","ECXPIVDN",96,0)
 N X
"RTN","ECXPIVDN",97,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXPIVDN",98,0)
 ;get patient data if saved
"RTN","ECXPIVDN",99,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXPIVDN",100,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2),ECXMPI=$P(PT,U,3)
"RTN","ECXPIVDN",101,0)
 .S ECXDOB=$P(PT,U,4),ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6),ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXPIVDN",102,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12),ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXPIVDN",103,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18),ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXPIVDN",104,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24),ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXPIVDN",105,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4),ECXCNTRY=$P(PT1,U,5)
"RTN","ECXPIVDN",106,0)
 .S ECXSHADI=$P(PT1,U,6),ECXPATCAT=$P(PT1,U,7)
"RTN","ECXPIVDN",107,0)
 .S ECXCLST=$P(PT1,U,8),ECXESC=$P(PT1,U,9),ECXECL=$P(PT1,U,10) ;144
"RTN","ECXPIVDN",108,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXPIVDN",109,0)
 ;set patient data
"RTN","ECXPIVDN",110,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXPIVDN",111,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXPIVDN",112,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXPIVDN",113,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXPIVDN",114,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET"),ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXPIVDN",115,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXPIVDN",116,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL"),ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXPIVDN",117,0)
 .S ECXCLST=ECXPAT("CL STAT"),ECXESC="",ECXECL="" ;144
"RTN","ECXPIVDN",118,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS"),ECXEST=ECXPAT("EC STAT")
"RTN","ECXPIVDN",119,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN) ;get CNHU status
"RTN","ECXPIVDN",120,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXPIVDN",121,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXPIVDN",122,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN) ;Head and Neck Cancer Indicator
"RTN","ECXPIVDN",123,0)
 .S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN) ;PROJ 112/SHAD Indicator
"RTN","ECXPIVDN",124,0)
 .S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)  ; PATCH 127, ADD PATCAT CODE 
"RTN","ECXPIVDN",125,0)
 .; - Race and Ethnicity
"RTN","ECXPIVDN",126,0)
 .S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1")
"RTN","ECXPIVDN",127,0)
 .S ECXERI=ECXPAT("ERI") ;emergency response indicator (FEMA)
"RTN","ECXPIVDN",128,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXPIVDN",129,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXPIVDN",130,0)
 .;save for later
"RTN","ECXPIVDN",131,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXPIVDN",132,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXPIVDN",133,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT_U_ECXCNTRY_U_ECXSHADI_U_ECXPATCAT_U_ECXCLST_U_ECXESC_U_ECXECL ;144
"RTN","ECXPIVDN",134,0)
 ;get primary care data
"RTN","ECXPIVDN",135,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXPIVDN",136,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXPIVDN",137,0)
 ;get inpatient data
"RTN","ECXPIVDN",138,0)
 S (ECXA,ECXMN,ECXADM,ECXTS,ECXW,ECXDIV)="",X=$$INP^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXPIVDN",139,0)
 S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXADM=$P(X,U,4),W=$P(X,U,9),ECXDOM=$P(X,U,10),ECXW=$P(W,";"),ECXDIV=$P(W,";",2)
"RTN","ECXPIVDN",140,0)
 Q
"RTN","ECXPIVDN",141,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPIVDN",142,0)
 S ECHEAD="IVP"
"RTN","ECXPIVDN",143,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPIVDN",144,0)
 ;variables ecver and ecrtn will be reset in routine ecxtrac if appropriate
"RTN","ECXPIVDN",145,0)
 S ECVER=7
"RTN","ECXPIVDN",146,0)
 Q
"RTN","ECXPIVDN",147,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPIVDN",148,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPRO")
0^25^B45721055^B42025638
"RTN","ECXPRO",1,0)
ECXPRO ;ALB/GTS - Prosthetics Extract for DSS ;4/16/13  16:47
"RTN","ECXPRO",2,0)
 ;;3.0;DSS EXTRACTS;**9,13,15,21,24,33,39,46,71,92,105,120,127,132,136,144**;Dec 22, 1997;Build 9
"RTN","ECXPRO",3,0)
BEG ;entry point from option
"RTN","ECXPRO",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXPRO",5,0)
 D:+ECINST>0 ^ECXTRAC D ^ECXKILL
"RTN","ECXPRO",6,0)
 Q
"RTN","ECXPRO",7,0)
 ;
"RTN","ECXPRO",8,0)
START ;start package specific extract
"RTN","ECXPRO",9,0)
 ;
"RTN","ECXPRO",10,0)
 ; Input
"RTN","ECXPRO",11,0)
 ;  ECSD1   - FM formatted Beginning Date (Set by ECXTRAC)
"RTN","ECXPRO",12,0)
 ;  ECED    - FM formatted End Date (Set by ECXTRAC)
"RTN","ECXPRO",13,0)
 ;  ECSDN   - Externally formatted Start Date (Set by ECXTRAC)
"RTN","ECXPRO",14,0)
 ;  ECEDN   - Externally formatted End Date (Set by ECXTRAC)
"RTN","ECXPRO",15,0)
 ;  EC      - IEN from file #727 (Set by ECXTRAC)
"RTN","ECXPRO",16,0)
 ;  ECXYM   - Year and Month of extract (YYYYMM)
"RTN","ECXPRO",17,0)
 ;  ECXINST - IEN for division in file #4
"RTN","ECXPRO",18,0)
 ;  ECINST  - Station number of selected division
"RTN","ECXPRO",19,0)
 ;
"RTN","ECXPRO",20,0)
 N ECXLNE,ECXCT,ECXDACT,ECX0,ECXLB,ECXED1,ECINSTSV,ECXLNSTR,ECXP
"RTN","ECXPRO",21,0)
 N ECXICD10P,ECXICD101,ECXICD102,ECXICD103,ECXICD104
"RTN","ECXPRO",22,0)
 N DIC,DR,DA,DIQ,CPTCODE,ECXNPRFI
"RTN","ECXPRO",23,0)
 N ECXESC,ECXCLST,ECXECL ;144
"RTN","ECXPRO",24,0)
 D ECXBUL^ECXPRO2(.ECXLNE,ECSDN,ECEDN,EC)
"RTN","ECXPRO",25,0)
 S QFLG=0,ECXLNSTR=ECXLNE,ECXED1=ECED+.9999,ECXCT=ECSD1
"RTN","ECXPRO",26,0)
 F  S ECXCT=$O(^RMPR(660,"CT",ECXCT)) Q:(ECXCT>ECXED1)!('ECXCT)!(QFLG=1)  D
"RTN","ECXPRO",27,0)
 .S ECXDACT=0
"RTN","ECXPRO",28,0)
 .F  S ECXDACT=$O(^RMPR(660,"CT",ECXCT,ECXDACT)) Q:('ECXDACT)!(QFLG=1)  D
"RTN","ECXPRO",29,0)
 ..;* initialize variables
"RTN","ECXPRO",30,0)
 ..S (ECXDFN,ECXPNM,ECXSSN,ECXSEX,ECXSTAT,ECXDATE,ECXTYPE,ECXSRCE)=""
"RTN","ECXPRO",31,0)
 ..S (ECXHCPCS,ECXPHCPC,ECXRQST,ECXRCST,ECXFORM,ECXCTAMT,ECXLLC)=""
"RTN","ECXPRO",32,0)
 ..S (ECXLMC,ECXGRPR,ECXBILST,ECXQTY,ECXFELOC,ECXFEKEY,ECXA,ECXLH,ECXLC,ECXMC)=""
"RTN","ECXPRO",33,0)
 ..S (ECPTTM,ECPTPR,ECXAST,ECXRST,ECXEST,ECXELIG,ECXVET,ECXZIP,ECXVNS,ECXCLST)="" ;144
"RTN","ECXPRO",34,0)
 ..S (ECXDOB,ECXDSSD,ECXICD9,ECXICD10P,ECXAOL,ECXHNCI,ECXSHADI,ECXETH,ECXRC1,ECXMST)=""
"RTN","ECXPRO",35,0)
 ..F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXPRO",36,0)
 ..F I=1:1:4 S @("ECXICD10"_I)=""
"RTN","ECXPRO",37,0)
 ..Q:'$D(^RMPR(660,ECXDACT,0))
"RTN","ECXPRO",38,0)
 ..S ECX0=^RMPR(660,ECXDACT,0),ECXLB=$G(^RMPR(660,ECXDACT,"LB"))
"RTN","ECXPRO",39,0)
 ..K ECXP S DIC="^RMPR(660,",DR=".02;11;45",DA=ECXDACT,DIQ(0)="EI"
"RTN","ECXPRO",40,0)
 ..S DIQ="ECXP" D EN^DIQ1
"RTN","ECXPRO",41,0)
 ..S ECXDIV=$$GET1^DIQ(660,ECXDACT,8,"I")
"RTN","ECXPRO",42,0)
 ..S ECXDFN=$G(ECXP(660,ECXDACT,.02,"I"))
"RTN","ECXPRO",43,0)
 ..S ECXFORM=$G(ECXP(660,ECXDACT,11,"E"))_U_$G(ECXP(660,ECXDACT,11,"I"))
"RTN","ECXPRO",44,0)
 ..S ECXLH=$G(ECXP(660,ECXDACT,45,"I"))
"RTN","ECXPRO",45,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXCT)
"RTN","ECXPRO",46,0)
 ..S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;5",.ECXPAT)
"RTN","ECXPRO",47,0)
 ..I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXPRO",48,0)
 ..;OEF/OIF data
"RTN","ECXPRO",49,0)
 ..S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXPRO",50,0)
 ..S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXPRO",51,0)
 ..S ECXVNS=ECXPAT("VIETNAM") ; 144 VIETNAM STATUS
"RTN","ECXPRO",52,0)
 ..S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune Status
"RTN","ECXPRO",53,0)
 ..Q:'$$NTEG^ECXPRO1(ECXDFN,.ECXLNE,ECXDACT,ECX0,ECXLB,ECINST,ECXFORM)
"RTN","ECXPRO",54,0)
 ..D PROSINFO^ECXPRO1(ECXDACT,ECXLB,ECX0,ECXFORM)
"RTN","ECXPRO",55,0)
 ..S CPTCODE=$E(ECXHCPCS,1,5)
"RTN","ECXPRO",56,0)
 ..;nppd entry date
"RTN","ECXPRO",57,0)
 ..S ECXNPPDT=$$ECXDATE^ECXUTL($P(ECX0,U,1),ECXYM)
"RTN","ECXPRO",58,0)
 ..;
"RTN","ECXPRO",59,0)
 ..;Get production division ;p-46
"RTN","ECXPRO",60,0)
 ..N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV) ;p-46
"RTN","ECXPRO",61,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXPRO",62,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXPRO",63,0)
 ..;
"RTN","ECXPRO",64,0)
 ..;- CNH status (YES/NO)
"RTN","ECXPRO",65,0)
 ..S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXPRO",66,0)
 ..;
"RTN","ECXPRO",67,0)
 ..;get encounter classifications
"RTN","ECXPRO",68,0)
 ..S (ECXAO,ECXECE,ECXHNC,ECXMIL,ECXIR,ECXSHAD,ECXESC,ECXECL)="" ;144
"RTN","ECXPRO",69,0)
 ..S ECXVISIT=$$GET1^DIQ(660,ECXDACT,8.12,"I") I ECXVISIT'="" D
"RTN","ECXPRO",70,0)
 ...D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXPRO",71,0)
 ...S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXPRO",72,0)
 ...S ECXHNC=$G(ECXVIST("HNC")),ECXMIL=$G(ECXVIST("MST")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXPRO",73,0)
 ...S ECXESC=ECXVIST("ENCSC"),ECXECL=ECXVIST("ENCCL") ;144
"RTN","ECXPRO",74,0)
 ..; - Head and Neck Cancer Indicator
"RTN","ECXPRO",75,0)
 ..S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXPRO",76,0)
 ..;
"RTN","ECXPRO",77,0)
 ..; - Proj 112/SHAD Indicator
"RTN","ECXPRO",78,0)
 ..S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXPRO",79,0)
 ..;
"RTN","ECXPRO",80,0)
 ..; ******* - PATCH 127, ADD PATCAT CODE  ********
"RTN","ECXPRO",81,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXPRO",82,0)
 ..; - set national patient record flag if exist
"RTN","ECXPRO",83,0)
 ..D NPRF^ECXUTL5
"RTN","ECXPRO",84,0)
 ..;
"RTN","ECXPRO",85,0)
 ..;- If no encounter number don't file record
"RTN","ECXPRO",86,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXPRO",87,0)
 ..I ECXFORM["-3" F ECXLAB="LAB","ORD" D
"RTN","ECXPRO",88,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXPRO",89,0)
 ...Q:ECXFELOC=""  D FILE
"RTN","ECXPRO",90,0)
 ..I ECXFORM'["-3" S ECXLAB="NONL" D
"RTN","ECXPRO",91,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXPRO",92,0)
 ...Q:ECXFELOC=""  D FILE
"RTN","ECXPRO",93,0)
 ;* Send the Exception message
"RTN","ECXPRO",94,0)
 I ECXLNSTR<ECXLNE DO
"RTN","ECXPRO",95,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXPRO",96,0)
 .S XMDUZ=.5
"RTN","ECXPRO",97,0)
 .S XMSUB=ECINST_" - Prosthetics DSS Exception Message",XMN=0
"RTN","ECXPRO",98,0)
 .S XMTEXT="^TMP(""ECX-PRO EXC"",$J,"
"RTN","ECXPRO",99,0)
 .D ^XMD
"RTN","ECXPRO",100,0)
 K ^TMP("ECX-PRO EXC",$J),XMDUZ,XMSUB,XMTEXT,XMY,XMN
"RTN","ECXPRO",101,0)
 Q
"RTN","ECXPRO",102,0)
 ;
"RTN","ECXPRO",103,0)
FILE ;file extract record
"RTN","ECXPRO",104,0)
 ;node0
"RTN","ECXPRO",105,0)
 ;facility^dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^in/out (ECXA)^
"RTN","ECXPRO",106,0)
 ;day^feeder location^
"RTN","ECXPRO",107,0)
 ;feeder key^qty^pc team^pc provider^hcpcs^icd9 (ECXICD9)^
"RTN","ECXPRO",108,0)
 ;icd9-1 (ECXICD91)^icd9-2 (ECXICD92)^icd9-3 (ECXICD93)^
"RTN","ECXPRO",109,0)
 ;icd9-4 (ECXICD94)^agent orange^radiation^env contam^eligibility^
"RTN","ECXPRO",110,0)
 ;cost^lab labor cost^lab matl cost^billing status^
"RTN","ECXPRO",111,0)
 ;vet^transaction type^req station^rec station^file#661.1 ien
"RTN","ECXPRO",112,0)
 ;node1
"RTN","ECXPRO",113,0)
 ;zip^dob^sex^amis grouper^placeholder^mpi^dss dept ECXDSSD^
"RTN","ECXPRO",114,0)
 ;pc prov person class^race^pow status^pow loc^
"RTN","ECXPRO",115,0)
 ;sharing agree payor^sharing agree ins^mst status^
"RTN","ECXPRO",116,0)
 ;enroll loc^state^county^assoc pc provider^
"RTN","ECXPRO",117,0)
 ;assoc pc prov person class^placeholder
"RTN","ECXPRO",118,0)
 ;dom (ECXDOM)^purple heart indicator (ECXPHI)^
"RTN","ECXPRO",119,0)
 ;enrollment Category (ECXCAT)^enrollment status (ECXSTAT)^
"RTN","ECXPRO",120,0)
 ;enrollment priority (ECXPRIOR)^purple heart ind (ECXPHI)^
"RTN","ECXPRO",121,0)
 ;period of serv (ECXPOS)^observ pat ind (ECXOBS)^encounter num (ECXENC)^
"RTN","ECXPRO",122,0)
 ;ao loc (ECXAOL)^CNH status (ECXCNH)^production division ECXPDIV^
"RTN","ECXPRO",123,0)
 ;head & neck canc. ind. (ECXHNCI)^ethnicity (ECXETH)^race1 (ECXRC1)^
"RTN","ECXPRO",124,0)
 ;^enrollment priority (ECXPRIOR)_enrollment sub-
"RTN","ECXPRO",125,0)
 ;group (ECXSBGRP)^user enrollee (ECXUESTA)^patient type ECXPTYPE
"RTN","ECXPRO",126,0)
 ;^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^enc cv
"RTN","ECXPRO",127,0)
 ;eligible ECXCVENC^national patient record flag ECXNPRFI^
"RTN","ECXPRO",128,0)
 ;emergency response indicator(FEMA) ECXERI^agent orange indicator ECXAO
"RTN","ECXPRO",129,0)
 ;^environ contam ECXECE^head/neck cancer ECXHNC^encntr mst ECXMIL^
"RTN","ECXPRO",130,0)
 ;radiation ECXIR
"RTN","ECXPRO",131,0)
 ;NODE2
"RTN","ECXPRO",132,0)
 ;OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^
"RTN","ECXPRO",133,0)
 ;nppd code ECXNPPDC^nppd entry date ECXNPPDT
"RTN","ECXPRO",134,0)
 ;assoc pc provider npi ECASNPI^primary care provider npi ECPTNPI^
"RTN","ECXPRO",135,0)
 ;country ECXCNTRY^shad indicator ECXSHADI^shad encounter ECXSHAD^
"RTN","ECXPRO",136,0)
 ;labor hours ECXLH^
"RTN","ECXPRO",137,0)
 ;PATCAT^EXCPATCAT^
"RTN","ECXPRO",138,0)
 ;primary ICD-10 code (currently null)ECXICD10P^Secondary ICD-10 Code #1 (currently null)ECXICD101^
"RTN","ECXPRO",139,0)
 ;Secondary ICD-10 Code #2 (currently null)ECXICD102^Secondary ICD-10 Code #3 (currently null)ECXICD103^
"RTN","ECXPRO",140,0)
 ;Secondary ICD-10 Code #4 (currently null)ECXICD104^Encounter SC ECXEXC^Vietnam Status ECXVNS^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL
"RTN","ECXPRO",141,0)
 N DA,DIK
"RTN","ECXPRO",142,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPRO",143,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXPRO",144,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXFELOC_U
"RTN","ECXPRO",145,0)
 S ECODE=ECODE_ECXFEKEY_U_ECXQTY_U_ECPTTM_U_ECPTPR_U_ECXHCPCS_U
"RTN","ECXPRO",146,0)
 S ECODE=ECODE_ECXICD9_U_ECXICD91_U_ECXICD92_U_ECXICD93_U_ECXICD94_U
"RTN","ECXPRO",147,0)
 S ECODE=ECODE_ECXAST_U_ECXRST_U_ECXEST_U_ECXELIG_U_ECXCTAMT_U_ECXLLC_U
"RTN","ECXPRO",148,0)
 S ECODE=ECODE_ECXLMC_U_ECXBILST_U_ECXVET_U_ECXTYPE_U_ECXRQST_U_ECXRCST_U
"RTN","ECXPRO",149,0)
 S ECODE=ECODE_ECXPHCPC_U
"RTN","ECXPRO",150,0)
 S ECODE1=ECXZIP_U_ECXDOB_U_ECXSEX_U_ECXGRPR_U_U_ECXMPI_U
"RTN","ECXPRO",151,0)
 S ECODE1=ECODE1_ECXDSSD_U_ECCLAS_U_ECXRACE_U_ECXPST_U_ECXPLOC_U
"RTN","ECXPRO",152,0)
 S ECODE1=ECODE1_U_U_ECXMST_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXPRO",153,0)
 S ECODE1=ECODE1_ECXCNTY_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U
"RTN","ECXPRO",154,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPHI_U_ECXPOS_U
"RTN","ECXPRO",155,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXPRO",156,0)
 S ECODE1=ECODE1_ECXHNCI_U_ECXETH_U_ECXRC1_U
"RTN","ECXPRO",157,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXPRO",158,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXPRO",159,0)
 I ECXLOGIC>2007 S ECODE2=ECXOEF_U_ECXOEFDT_U_ECXNPPDC_U_ECXNPPDT_U_ECASNPI_U_ECPTNPI
"RTN","ECXPRO",160,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXPRO",161,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXSHADI_U_ECXSHAD_U_ECXLH_U_ECXPATCAT
"RTN","ECXPRO",162,0)
 I ECXLOGIC>2012 S ECODE2=ECODE2_U_ECXICD10P_U_ECXICD101_U_ECXICD102_U_ECXICD103_U_ECXICD104
"RTN","ECXPRO",163,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXVNS_U_ECXCLST_U_ECXECL ;144
"RTN","ECXPRO",164,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXPRO",165,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXPRO",166,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPRO",167,0)
 Q
"RTN","ECXPRO",168,0)
 ;
"RTN","ECXPRO",169,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPRO",170,0)
 S ECHEAD="PRO"
"RTN","ECXPRO",171,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPRO",172,0)
 S ECINST=$$PDIV^ECXPUTL
"RTN","ECXPRO",173,0)
 Q
"RTN","ECXPRO",174,0)
 ;
"RTN","ECXPRO",175,0)
 ;**Note: LOCAL and QUE are carry over from protocols set by other
"RTN","ECXPRO",176,0)
 ;        routines.
"RTN","ECXPRO",177,0)
LOCAL ;to extract nightly for local use not to be transmitted to TSI
"RTN","ECXPRO",178,0)
 ;QUEUE with 1D frequency
"RTN","ECXPRO",179,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXPRO",180,0)
 ;
"RTN","ECXPRO",181,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPRO",182,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPROCT")
0^33^B24695240^B21321082
"RTN","ECXPROCT",1,0)
ECXPROCT ;ALB/GTS - ProstheticS Cost by PSAS HCPC Report DSS ;3/4/13  15:58
"RTN","ECXPROCT",2,0)
 ;;3.0;DSS EXTRACTS;**71,100,144**;Dec 22, 1997;Build 9
"RTN","ECXPROCT",3,0)
 ;
"RTN","ECXPROCT",4,0)
EN ;entry point from option
"RTN","ECXPROCT",5,0)
 ;Initialize varables
"RTN","ECXPROCT",6,0)
 N DIR,ECSD1,ECED,X,Y,ECXPORT,I ;144
"RTN","ECXPROCT",7,0)
 ;Prompt for start date
"RTN","ECXPROCT",8,0)
 S DIR(0)="D^::EX"
"RTN","ECXPROCT",9,0)
 S DIR("A")="Enter Report Start Date"
"RTN","ECXPROCT",10,0)
 D ^DIR
"RTN","ECXPROCT",11,0)
 I $D(DIRUT) Q
"RTN","ECXPROCT",12,0)
 S ECSD1=Y
"RTN","ECXPROCT",13,0)
 ;Prompt for end date
"RTN","ECXPROCT",14,0)
 K DIR,X,Y
"RTN","ECXPROCT",15,0)
 S DIR(0)="D^"_ECSD1_":"_DT_":EX"
"RTN","ECXPROCT",16,0)
 S DIR("A")="Enter Report Ending Date"
"RTN","ECXPROCT",17,0)
 D ^DIR
"RTN","ECXPROCT",18,0)
 I $D(DIRUT) Q
"RTN","ECXPROCT",19,0)
 S ECED=Y
"RTN","ECXPROCT",20,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXPROCT",21,0)
 .K ^TMP($J,"ECXPORT") ;144
"RTN","ECXPROCT",22,0)
 .S ^TMP($J,"ECXPORT",0)="PSAS HCPC^DESCRIPTION^HCPC^QTY^UNIT OF ISSUE^COST" ;144
"RTN","ECXPROCT",23,0)
 .D EN1 ;144
"RTN","ECXPROCT",24,0)
 .M ^TMP($J,"ECXPORT")=^TMP("ECXDSS",$J) ;144 Move results to export display global
"RTN","ECXPROCT",25,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXPROCT",26,0)
 ;Queue Report
"RTN","ECXPROCT",27,0)
 W !!,"** REPORT REQUIRES 132 COLUMNS TO PRINT CORRECTLY **",!!
"RTN","ECXPROCT",28,0)
 N ZTDESC,ZTIO,ZTSAVE
"RTN","ECXPROCT",29,0)
 S ZTIO=""
"RTN","ECXPROCT",30,0)
 S ZTDESC="Prosthetic Cost by PSAS HCPC Report for DSS"
"RTN","ECXPROCT",31,0)
 F I="ECSD1","ECED","ECXPHCPC","ECXPHDESC","ECXHCPC","ECXQTY","ECXUOFI","ECXCOST","ECXTCOST" D
"RTN","ECXPROCT",32,0)
 .S ZTSAVE(I)=""
"RTN","ECXPROCT",33,0)
 D EN^XUTMDEVQ("EN1^ECXPROCT",ZTDESC,.ZTSAVE)
"RTN","ECXPROCT",34,0)
 Q
"RTN","ECXPROCT",35,0)
 ;
"RTN","ECXPROCT",36,0)
EN1 ;Tasked entry point
"RTN","ECXPROCT",37,0)
 ;Input : ECSD1  -  FM format report start date
"RTN","ECXPROCT",38,0)
 ;        ECED   -  FM format report end date
"RTN","ECXPROCT",39,0)
 ;
"RTN","ECXPROCT",40,0)
 ;Output : None
"RTN","ECXPROCT",41,0)
 ;
"RTN","ECXPROCT",42,0)
 ;Declare variables
"RTN","ECXPROCT",43,0)
 N ECXPHCPC,ECHCDES,ECXHCPC,ECXQTY,ECXUOFI,ECXCOST,ECXTCOST,PAGENUM ;144
"RTN","ECXPROCT",44,0)
 N ECXLNE,ECXCT,ECXDACT,ECX0,ECX1,ECXED1,ECINSTSV,ECXLNSTR,ECXP
"RTN","ECXPROCT",45,0)
 N DIC,DR,DA,DIQ,CNT,STOP,QFLG,ECXDIV,ECXDFN,ECXFORM ;144
"RTN","ECXPROCT",46,0)
 S ECXED1=ECED+.9999,ECXCT=ECSD1,(CNT,QFLG,PAGENUM,ECXTCOST,ECXQTY,STOP)=0
"RTN","ECXPROCT",47,0)
 I '$G(ECXPORT) D HEADER I STOP D EXIT Q  ;144
"RTN","ECXPROCT",48,0)
 D GETDATA I $G(ECXPORT) Q  ;144 Have data, no need to print.
"RTN","ECXPROCT",49,0)
 I '$D(^TMP("ECXDSS",$J)) D  Q
"RTN","ECXPROCT",50,0)
 .W !
"RTN","ECXPROCT",51,0)
 .W !,"***********************************************"
"RTN","ECXPROCT",52,0)
 .W !,"*  NOTHING TO REPORT FOR SELECTED TIME FRAME  *"
"RTN","ECXPROCT",53,0)
 .W !,"***********************************************"
"RTN","ECXPROCT",54,0)
 .D WAIT
"RTN","ECXPROCT",55,0)
 D DETAIL I STOP D EXIT Q
"RTN","ECXPROCT",56,0)
 D TOTAL
"RTN","ECXPROCT",57,0)
 K ^TMP("ECXDSS",$J)
"RTN","ECXPROCT",58,0)
 Q
"RTN","ECXPROCT",59,0)
 ;
"RTN","ECXPROCT",60,0)
GETDATA ;Get data
"RTN","ECXPROCT",61,0)
 F  S ECXCT=$O(^RMPR(660,"CT",ECXCT)),CNT=CNT+1 Q:(ECXCT>ECXED1)!('ECXCT)!(QFLG=1)  D
"RTN","ECXPROCT",62,0)
 .S ECXDACT=0
"RTN","ECXPROCT",63,0)
 .F  S ECXDACT=$O(^RMPR(660,"CT",ECXCT,ECXDACT)) Q:('ECXDACT)!(QFLG=1)  D
"RTN","ECXPROCT",64,0)
 ..;Get data nodes and icrement conunter
"RTN","ECXPROCT",65,0)
 ..S CNT=CNT+1
"RTN","ECXPROCT",66,0)
 ..S ECX0=$G(^RMPR(660,ECXDACT,0)),ECX1=$G(^(1))
"RTN","ECXPROCT",67,0)
 ..Q:'$D(^RMPR(660,ECXDACT,0))
"RTN","ECXPROCT",68,0)
 ..S ECXPHCPC=$P(ECX1,U,4),ECHCDES=$P(ECX1,U,2),ECXHCPC=$P(ECX0,U,22)
"RTN","ECXPROCT",69,0)
 ..S ECXQTY=$P(ECX0,U,7),ECXUOFI=$P(ECX0,U,8),ECXCOST=$P(ECX0,U,16)
"RTN","ECXPROCT",70,0)
 ..;Resolve external values for PSAS HCPC
"RTN","ECXPROCT",71,0)
 ..K DIC S DIC="^RMPR(661.1,",DIC(0)="NZ",X=ECXPHCPC D ^DIC
"RTN","ECXPROCT",72,0)
 ..;S ECXPHCPC=$P($G(Y(0)),U,1)
"RTN","ECXPROCT",73,0)
 ..S ECXPHCPC=$E($P($G(Y(0)),U,1),1,5)
"RTN","ECXPROCT",74,0)
 ..;Resolve external values for HCPC
"RTN","ECXPROCT",75,0)
 ..K DIC S DIC="^ICPT(",DIC(0)="NZ",X=ECXHCPC D ^DIC
"RTN","ECXPROCT",76,0)
 ..S ECXHCPC=$P($G(Y(0)),U,1)
"RTN","ECXPROCT",77,0)
 ..;Resolve external value for unit of issue
"RTN","ECXPROCT",78,0)
 ..K DIC S DIC="^PRCD(420.5,",DIC(0)="NZ",X=ECXUOFI D ^DIC
"RTN","ECXPROCT",79,0)
 ..S ECXUOFI=$P($G(Y(0)),U,2)
"RTN","ECXPROCT",80,0)
 ..S ECXTCOST=ECXCOST+ECXTCOST
"RTN","ECXPROCT",81,0)
 ..S ECXDIV=$$GET1^DIQ(660,ECXDACT,8,"I")
"RTN","ECXPROCT",82,0)
 ..S ECXDFN=$G(ECXP(660,ECXDACT,.02,"I"))
"RTN","ECXPROCT",83,0)
 ..S ECXFORM=$G(ECXP(660,ECXDACT,11,"E"))_U_$G(ECXP(660,ECXDACT,11,"I"))
"RTN","ECXPROCT",84,0)
 ..;Save for later
"RTN","ECXPROCT",85,0)
 ..S ^TMP("ECXDSS",$J,CNT)=ECXPHCPC_U_ECHCDES_U_ECXHCPC_U_ECXQTY_U_ECXUOFI_U_ECXCOST
"RTN","ECXPROCT",86,0)
 ..Q
"RTN","ECXPROCT",87,0)
 .Q
"RTN","ECXPROCT",88,0)
 Q
"RTN","ECXPROCT",89,0)
HEADER ;print header
"RTN","ECXPROCT",90,0)
 N LN ;144
"RTN","ECXPROCT",91,0)
 S PAGENUM=PAGENUM+1
"RTN","ECXPROCT",92,0)
 S $P(LN,"-",132)=""
"RTN","ECXPROCT",93,0)
 W @IOF
"RTN","ECXPROCT",94,0)
 W !,"Cost by PSAS HCPC REPORT for "_$P($$SITE^VASITE,U,2)_" station "_$P($$SITE^VASITE,U,3),?120,"Page: ",PAGENUM
"RTN","ECXPROCT",95,0)
 W !!,"Report for ",$$FMTE^XLFDT(ECSD1)," thru ",$$FMTE^XLFDT(ECED)
"RTN","ECXPROCT",96,0)
 W !,?1,"PSAS HCPC",?15,"DESCRIPTION",?89,"HCPC",?98,"QTY",?104,"Unit of Issue",?126,"Cost"
"RTN","ECXPROCT",97,0)
 W !?1,LN
"RTN","ECXPROCT",98,0)
 Q
"RTN","ECXPROCT",99,0)
 ;
"RTN","ECXPROCT",100,0)
DETAIL ;Print detailed line
"RTN","ECXPROCT",101,0)
 ;Input  :  ^TMP("ECXDSS",$J) full global reference
"RTN","ECXPROCT",102,0)
 ;          ECXPHCPC  -   PSAS HCPCS
"RTN","ECXPROCT",103,0)
 ;          ECXPHDESC -   PSAS HCPC Description
"RTN","ECXPROCT",104,0)
 ;          ECXHCPC   -   HCPCS
"RTN","ECXPROCT",105,0)
 ;          ECXQTY    -   Quantity
"RTN","ECXPROCT",106,0)
 ;          ECXUOFI   -   Unit of issue
"RTN","ECXPROCT",107,0)
 ;          ECXCOST   -   Total cost
"RTN","ECXPROCT",108,0)
 ;Output  : None
"RTN","ECXPROCT",109,0)
 N RECORD,NODE ;144
"RTN","ECXPROCT",110,0)
 S RECORD=0 F  S RECORD=$O(^TMP("ECXDSS",$J,RECORD)) Q:'RECORD!(STOP)  D
"RTN","ECXPROCT",111,0)
 .S NODE=^TMP("ECXDSS",$J,RECORD)
"RTN","ECXPROCT",112,0)
 .W !?1,$$RJ^XLFSTR($P(NODE,U,1),6),?15,$P(NODE,U,2),?89,$$RJ^XLFSTR($P(NODE,U,3),U,6),?99,$$RJ^XLFSTR($P(NODE,U,4),U,6),?107,$P(NODE,U,5)
"RTN","ECXPROCT",113,0)
 .W ?122,"$"_$$RJ^XLFSTR($P($P(NODE,U,6),".",1),6)_"."_$$LJ^XLFSTR($P($P(NODE,U,6),".",2),2,0)
"RTN","ECXPROCT",114,0)
 .I $Y>(IOSL-5) D WAIT Q:STOP  D HEADER
"RTN","ECXPROCT",115,0)
 .Q
"RTN","ECXPROCT",116,0)
 Q
"RTN","ECXPROCT",117,0)
 ;
"RTN","ECXPROCT",118,0)
TOTAL ;Report totals
"RTN","ECXPROCT",119,0)
 N DASH
"RTN","ECXPROCT",120,0)
 S $P(DASH,"=",15)=""
"RTN","ECXPROCT",121,0)
 W !!,?118,DASH
"RTN","ECXPROCT",122,0)
 W !?90,"Grand Total: ",?118,"$ "_$$RJ^XLFSTR($FNUMBER(ECXTCOST,",",2),11)
"RTN","ECXPROCT",123,0)
 Q
"RTN","ECXPROCT",124,0)
 ;
"RTN","ECXPROCT",125,0)
WAIT ;End of page logic
"RTN","ECXPROCT",126,0)
 ;Input   ; None
"RTN","ECXPROCT",127,0)
 ;Output  ; STOP - Flag inidcating if printing should continue
"RTN","ECXPROCT",128,0)
 ;                 1 = Stop     0 = Continue
"RTN","ECXPROCT",129,0)
 ;
"RTN","ECXPROCT",130,0)
 S STOP=0
"RTN","ECXPROCT",131,0)
 ;CRT - Prompt for continue
"RTN","ECXPROCT",132,0)
 I $E(IOST,1,2)="C-"&(IOSL'>24) D  Q
"RTN","ECXPROCT",133,0)
 .F  Q:$Y>(IOSL-3)  W !
"RTN","ECXPROCT",134,0)
 .N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ECXPROCT",135,0)
 .S DIR(0)="E"
"RTN","ECXPROCT",136,0)
 .D ^DIR
"RTN","ECXPROCT",137,0)
 .S STOP=$S(Y'=1:1,1:0)
"RTN","ECXPROCT",138,0)
 ;Background task - check taskman
"RTN","ECXPROCT",139,0)
 S STOP=$$S^%ZTLOAD()
"RTN","ECXPROCT",140,0)
 I STOP D
"RTN","ECXPROCT",141,0)
 .W !,"*********************************************"
"RTN","ECXPROCT",142,0)
 .W !,"*  PRINTING OF REPORT STOPPED AS REQUESTED  *"
"RTN","ECXPROCT",143,0)
 .W !,"*********************************************"
"RTN","ECXPROCT",144,0)
 Q
"RTN","ECXPROCT",145,0)
EXIT ;Kill temp global
"RTN","ECXPROCT",146,0)
 K ^TMP("ECXDSS",$J)
"RTN","ECXPROCT",147,0)
 Q
"RTN","ECXPURG")
0^6^B27702088^B23816296
"RTN","ECXPURG",1,0)
ECXPURG ;BIR/CML-Driver for Purge of DSS Data from Local Extract & Holding Files ; 10/8/08 4:25pm
"RTN","ECXPURG",2,0)
 ;;3.0;DSS EXTRACTS;**9,24,33,35,49,102,112,144**;Dec 22, 1997;Build 9
"RTN","ECXPURG",3,0)
ENDEL ;entry point from delete extract files option 144 CVW
"RTN","ECXPURG",4,0)
 W @IOF,!!,"This option will allow you to delete an"
"RTN","ECXPURG",5,0)
 W !,"individual or a range of DSS extracts files."
"RTN","ECXPURG",6,0)
 W !!,"Care must be taken for several reasons:"
"RTN","ECXPURG",7,0)
 W !!,"-  You can delete ANY existing extract.  This includes transmitted and non-"
"RTN","ECXPURG",8,0)
 W !,"   transmitted extracts as well as extracts that did not run to completion"
"RTN","ECXPURG",9,0)
 W !,"   due to errors or system problems."
"RTN","ECXPURG",10,0)
 W !,"-  Choosing a range of extracts could mean an excessively large number "
"RTN","ECXPURG",11,0)
 W !,"   of records and be very CPU intensive.  "
"RTN","ECXPURG",12,0)
 W !,"   Please be sure to queue this deletion for off-hours and"
"RTN","ECXPURG",13,0)
 W !,"   limit the number of extracts to be deleted per a single queued session."
"RTN","ECXPURG",14,0)
 ;
"RTN","ECXPURG",15,0)
 K DIR W !
"RTN","ECXPURG",16,0)
 W !! K DIR S DIR(0)="Y",DIR("A")="Delete Extract Files?",DIR("B")="NO"
"RTN","ECXPURG",17,0)
 ;S DIR(0)="SAM^E:Extract Files"
"RTN","ECXPURG",18,0)
 ;S DIR("A")="Delete Extract files? E"
"RTN","ECXPURG",19,0)
 ;D ^DIR K DIR G:$D(DIRUT) QUIT S ECY=Y
"RTN","ECXPURG",20,0)
 D ^DIR K DIR G:$D(DIRUT) QUIT S ECY=Y
"RTN","ECXPURG",21,0)
 I Y D ^ECXPURG1 I $D(ECLOC) S ZTSAVE("ECLOC(")="",ZTIO="",ZTRTN="PUR1^ECXPURG",ZTDESC="DSS - Deletion of Extract Files" D QUE
"RTN","ECXPURG",22,0)
 ;I ECY="E" D ^ECXPURG1 I $D(ECLOC) S ZTSAVE("ECLOC(")="",ZTIO="",ZTRTN="PUR1^ECXPURG",ZTDESC="DSS - Deletion of Extract Files" D QUE
"RTN","ECXPURG",23,0)
 ;I ECY="I" D DATES^ECXPURG1 I $D(ECBDT)&($D(ECEDT)) S (ZTSAVE("ECBDT"),ZTSAVE("ECEDT"))="",ZTIO="",ZTRTN="PUR2^ECXPURG",ZTDESC="DSS - Purge of IVP Holding File" D QUE
"RTN","ECXPURG",24,0)
 ;I ECY="U" D DATES^ECXPURG1 I $D(ECBDT)&($D(ECEDT)) S (ZTSAVE("ECBDT"),ZTSAVE("ECEDT"))="",ZTIO="",ZTRTN="PUR3^ECXPURG",ZTDESC="DSS - Purge of UDP Holding File" D QUE
"RTN","ECXPURG",25,0)
 ;I ECY="V" D DATES^ECXPURG1 I $D(ECBDT)&($D(ECEDT)) S (ZTSAVE("ECBDT"),ZTSAVE("ECEDT"))="",ZTIO="",ZTRTN="PUR4^ECXPURG",ZTDESC="DSS - Purge of VBECS Holding File" D QUE
"RTN","ECXPURG",26,0)
 Q
"RTN","ECXPURG",27,0)
EN ;entry point from the purge option
"RTN","ECXPURG",28,0)
 W @IOF,!!,"This option will allow you to purge:"
"RTN","ECXPURG",29,0)
 W !,"1. data that resides in the ""holding files"" for the IVP and UDP extracts."
"RTN","ECXPURG",30,0)
 W !,"2. data that resides in the ""holding file"" for the VBECS extract"
"RTN","ECXPURG",31,0)
 W !!,"Care must be taken for several reasons:"
"RTN","ECXPURG",32,0)
 W !,"-  The IVP, UDP and VBECS ""holding"" files are intermediate files that"
"RTN","ECXPURG",33,0)
 W !,"   are populated ""realtime"" by inpatient pharmacy and VBECS activity. "
"RTN","ECXPURG",34,0)
 W !,"   These files are then used to generate the IVP, UDP and VBECS extracts."
"RTN","ECXPURG",35,0)
 W !,"   NOTE:    The VBECS files CANNOT be regenerated."
"RTN","ECXPURG",36,0)
 W !,"   Once it is purged for a date range, extracts can no longer be"
"RTN","ECXPURG",37,0)
 W !,"   generated for that time period."
"RTN","ECXPURG",38,0)
 ;
"RTN","ECXPURG",39,0)
 K DIR W !
"RTN","ECXPURG",40,0)
 S DIR(0)="SAM^I:IVP Holding File;U:UDP Holding File;V:VBECS Holding File"
"RTN","ECXPURG",41,0)
 S DIR("A")="Purge (I)VP data, (U)DP data or (V)BECS data? "
"RTN","ECXPURG",42,0)
 D ^DIR K DIR G:$D(DIRUT) QUIT S ECY=Y
"RTN","ECXPURG",43,0)
 ;I ECY="E" D ^ECXPURG1 I $D(ECLOC) S ZTSAVE("ECLOC(")="",ZTIO="",ZTRTN="PUR1^ECXPURG",ZTDESC="DSS - Purge of Extract Files" D QUE
"RTN","ECXPURG",44,0)
 I ECY="I" D DATES^ECXPURG1 I $D(ECBDT)&($D(ECEDT)) S (ZTSAVE("ECBDT"),ZTSAVE("ECEDT"))="",ZTIO="",ZTRTN="PUR2^ECXPURG",ZTDESC="DSS - Purge of IVP Holding File" D QUE
"RTN","ECXPURG",45,0)
 I ECY="U" D DATES^ECXPURG1 I $D(ECBDT)&($D(ECEDT)) S (ZTSAVE("ECBDT"),ZTSAVE("ECEDT"))="",ZTIO="",ZTRTN="PUR3^ECXPURG",ZTDESC="DSS - Purge of UDP Holding File" D QUE
"RTN","ECXPURG",46,0)
 I ECY="V" D DATES^ECXPURG1 I $D(ECBDT)&($D(ECEDT)) S (ZTSAVE("ECBDT"),ZTSAVE("ECEDT"))="",ZTIO="",ZTRTN="PUR4^ECXPURG",ZTDESC="DSS - Purge of VBECS Holding File" D QUE
"RTN","ECXPURG",47,0)
QUIT ;
"RTN","ECXPURG",48,0)
 K %X,%Y,EC,ECBDT,ECDATE,ECDT,ECEDT,ECEX,ECFR,ECLOC,ECRC,ECTO,ECTRN,ECTYP,ECY,HDT,HI,JJ,LN,LO,PG,QFLG,SS,X,Y,ZTSK
"RTN","ECXPURG",49,0)
 K ECXDIV
"RTN","ECXPURG",50,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECXPURG",51,0)
 Q
"RTN","ECXPURG",52,0)
QUE W $C(7),$C(7),!!?3,"<<This deletion should be queued to run during non-peak hours.>>",!
"RTN","ECXPURG",53,0)
 D ^%ZTLOAD
"RTN","ECXPURG",54,0)
 I $D(ZTSK) W !,"Request queued as Task #",ZTSK,".",!
"RTN","ECXPURG",55,0)
 Q
"RTN","ECXPURG",56,0)
 ;
"RTN","ECXPURG",57,0)
PUR1 ; entry point for queued purge job of extract files
"RTN","ECXPURG",58,0)
 S ECDA=0 F  S ECDA=$O(ECLOC(ECDA)) Q:'ECDA  D
"RTN","ECXPURG",59,0)
 .S ECFILE=^ECX(727,ECDA,"FILE"),ECJ=0
"RTN","ECXPURG",60,0)
 .I ECFILE=727.827 D
"RTN","ECXPURG",61,0)
 ..S DA(1)=1
"RTN","ECXPURG",62,0)
 ..S DA=$O(^ECX(728,DA(1),"CBOC","B",ECDA,0))
"RTN","ECXPURG",63,0)
 ..S DIK="^ECX(728,"_DA(1)_","_"""CBOC"""_","
"RTN","ECXPURG",64,0)
 ..I DA'="" D ^DIK K DIK,DA
"RTN","ECXPURG",65,0)
 .F  S ECJ=$O(^ECX(ECFILE,"AC",ECDA,ECJ)) Q:'ECJ  D
"RTN","ECXPURG",66,0)
 ..S DIK="^ECX("_ECFILE_",",DA=ECJ D ^DIK K DIK,DA
"RTN","ECXPURG",67,0)
 .I ECFILE=727.816 S ECFILE=727.818,ECJ=0 D
"RTN","ECXPURG",68,0)
 ..F  S ECJ=$O(^ECX(ECFILE,"AC",ECDA,ECJ)) Q:'ECJ  D
"RTN","ECXPURG",69,0)
 ...S DIK="^ECX("_ECFILE_",",DA=ECJ D ^DIK K DIK,DA
"RTN","ECXPURG",70,0)
 .S ^ECX(727,ECDA,"PURG")=DT
"RTN","ECXPURG",71,0)
 K XMY S XMY(DUZ)=""
"RTN","ECXPURG",72,0)
 D MAIL1,QUIT
"RTN","ECXPURG",73,0)
 Q
"RTN","ECXPURG",74,0)
 ;
"RTN","ECXPURG",75,0)
PUR2 ; entry point for queued purge job of IVP holding file (#728.113)
"RTN","ECXPURG",76,0)
 F ECDT=ECBDT-1:0 S ECDT=$O(^ECX(728.113,"A",ECDT)) Q:'ECDT  Q:ECDT>ECEDT  S ECPT=0 F  S ECPT=$O(^ECX(728.113,"A",ECDT,ECPT)) Q:'ECPT  D
"RTN","ECXPURG",77,0)
 .S ECOR=0 F  S ECOR=$O(^ECX(728.113,"A",ECDT,ECPT,ECOR)) Q:'ECOR  D
"RTN","ECXPURG",78,0)
 ..S ECREC=0 F  S ECREC=$O(^ECX(728.113,"A",ECDT,ECPT,ECOR,ECREC)) Q:'ECREC  D
"RTN","ECXPURG",79,0)
 ...S DIK="^ECX(728.113,",DA=ECREC D ^DIK K DIK,DA
"RTN","ECXPURG",80,0)
 K XMY S XMY("G.DSS-IV")=""
"RTN","ECXPURG",81,0)
 D MAIL,QUIT
"RTN","ECXPURG",82,0)
 Q
"RTN","ECXPURG",83,0)
 ;
"RTN","ECXPURG",84,0)
PUR3 ; entry point for queued purge job of UDP holding file (#728.904)
"RTN","ECXPURG",85,0)
 F ECDT=ECBDT-1:0 S ECDT=$O(^ECX(728.904,"A",ECDT)) Q:'ECDT  Q:ECDT>(ECEDT+.99999999)  D
"RTN","ECXPURG",86,0)
 .S ECREC=0 F  S ECREC=$O(^ECX(728.904,"A",ECDT,ECREC)) Q:'ECREC  D
"RTN","ECXPURG",87,0)
 ..S DIK="^ECX(728.904,",DA=ECREC D ^DIK K DIK,DA
"RTN","ECXPURG",88,0)
 K XMY S XMY("G.DSS-UD")=""
"RTN","ECXPURG",89,0)
 D MAIL,QUIT
"RTN","ECXPURG",90,0)
 Q
"RTN","ECXPURG",91,0)
MAIL ;send mail message
"RTN","ECXPURG",92,0)
 N XMSUB,XMDUZ,ECMSG,XMTEXT
"RTN","ECXPURG",93,0)
 S XMSUB=ZTDESC
"RTN","ECXPURG",94,0)
 S XMDUZ="DSS SYSTEM"
"RTN","ECXPURG",95,0)
 S ECMSG(1,0)="The information has been successfully DELETED"
"RTN","ECXPURG",96,0)
 S ECMSG(2,0)="from "_$$FMTE^XLFDT(ECBDT)_" to "_$$FMTE^XLFDT(ECEDT)
"RTN","ECXPURG",97,0)
 S ECMSG(3,0)=" "
"RTN","ECXPURG",98,0)
 S XMTEXT="ECMSG("
"RTN","ECXPURG",99,0)
 D ^XMD
"RTN","ECXPURG",100,0)
 Q
"RTN","ECXPURG",101,0)
 ;
"RTN","ECXPURG",102,0)
MAIL1 ;send mail message
"RTN","ECXPURG",103,0)
 N XMSUB,XMDUZ,ECMSG,XMTEXT
"RTN","ECXPURG",104,0)
 S XMSUB=ZTDESC
"RTN","ECXPURG",105,0)
 S XMDUZ="DSS SYSTEM"
"RTN","ECXPURG",106,0)
 S ECMSG(1,0)="The information has been successfully PURGED"
"RTN","ECXPURG",107,0)
 S ECMSG(2,0)=" "
"RTN","ECXPURG",108,0)
 S XMTEXT="ECMSG("
"RTN","ECXPURG",109,0)
 D ^XMD
"RTN","ECXPURG",110,0)
 Q
"RTN","ECXPURG",111,0)
 ;
"RTN","ECXPURG",112,0)
PUR4 ; entry point for queued purge job of VBECS holding file (#6002.03)
"RTN","ECXPURG",113,0)
 N ECDT,ECREC,DIK,DA
"RTN","ECXPURG",114,0)
 S ECDT=ECBDT-1,ECEDT=ECEDT+.9
"RTN","ECXPURG",115,0)
 F  S ECDT=$O(^VBEC(6002.03,"C",ECDT)) Q:'ECDT!(ECDT>ECEDT)  D
"RTN","ECXPURG",116,0)
 .S ECREC=0 F  S ECREC=$O(^VBEC(6002.03,"C",ECDT,ECREC)) Q:'ECREC  D
"RTN","ECXPURG",117,0)
 ..S DIK="^VBEC(6002.03,",DA=ECREC D ^DIK K DIK,DA
"RTN","ECXPURG",118,0)
 K XMY S XMY(DUZ)=""
"RTN","ECXPURG",119,0)
 D MAIL1,QUIT
"RTN","ECXPURG",120,0)
 Q
"RTN","ECXPURG1")
0^7^B38351530^B36829694
"RTN","ECXPURG1",1,0)
ECXPURG1 ;BIR/CML-Purge of DSS Extract Files (CONTINUED) ;8/20/13  11:04
"RTN","ECXPURG1",2,0)
 ;;3.0;DSS EXTRACTS;**2,9,8,24,49,102,112,144**;Dec 22, 1997;Build 9
"RTN","ECXPURG1",3,0)
GET ;compile list of deletable extracts 144
"RTN","ECXPURG1",4,0)
 K HI,LO,ECBDT,ECEDT,ECLOC,^TMP("ECXPURG",$J)
"RTN","ECXPURG1",5,0)
 S QFLG=1 W !!,"...one moment please"
"RTN","ECXPURG1",6,0)
 S ECEX=0 F  S ECEX=$O(^ECX(727,ECEX)) Q:'ECEX  I '$G(^ECX(727,ECEX,"PURG")),$D(^ECX(727,ECEX,0)) S EC=^(0) D
"RTN","ECXPURG1",7,0)
 .S ^TMP("ECXPURG",$J,$P(EC,U,3),ECEX)="",ECLOC(ECEX)=$P(EC,U,3)_U_$P(EC,U,4,5)
"RTN","ECXPURG1",8,0)
 I '$D(^TMP("ECXPURG",$J)) W !!,"There are no extracts that can be deleted at this time." G DONE ;144
"RTN","ECXPURG1",9,0)
ASK1 ;ask for print
"RTN","ECXPURG1",10,0)
 W !
"RTN","ECXPURG1",11,0)
 K DIR S DIR(0)="Y",DIR("A")="Do you want to print a list of extracts that can be deleted",DIR("B")="NO"
"RTN","ECXPURG1",12,0)
 D ^DIR K DIR I $D(DIRUT) K ECLOC G DONE
"RTN","ECXPURG1",13,0)
 G:'Y ASK2
"RTN","ECXPURG1",14,0)
 W !!,"The right margin for this report is 80.",!!
"RTN","ECXPURG1",15,0)
 K ZTSAVE S ZTSAVE("^TMP(""ECXPURG"",$J,")=""
"RTN","ECXPURG1",16,0)
 D EN^XUTMDEVQ("PRT^ECXPURG1","DSS - Print Deletable Extracts",.ZTSAVE) I 'POP G ASK2
"RTN","ECXPURG1",17,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","ECXPURG1",18,0)
ASK2 ;ask for extract range
"RTN","ECXPURG1",19,0)
 ;
"RTN","ECXPURG1",20,0)
 ;** Check divisions for deleting
"RTN","ECXPURG1",21,0)
 N ECCHK,ECTMP,JZ ;144
"RTN","ECXPURG1",22,0)
 S ECCHK=$$DIV4^XUSER(.ECTMP,DUZ)
"RTN","ECXPURG1",23,0)
 I 'ECCHK DO
"RTN","ECXPURG1",24,0)
 .W !,"You do not have any divisions defined in your user set up and can not delete."
"RTN","ECXPURG1",25,0)
 .S DIR(0)="FAO^1:1",DIR("A")="Hit Return to continue." D ^DIR K DIR,X,Y
"RTN","ECXPURG1",26,0)
 .K ECLOC
"RTN","ECXPURG1",27,0)
 ;
"RTN","ECXPURG1",28,0)
 I 'ECCHK G DONE  ;** (essentially) QUIT out of middle
"RTN","ECXPURG1",29,0)
 ;
"RTN","ECXPURG1",30,0)
 W !,"You will not be able to select an extract that is not from your division.",!
"RTN","ECXPURG1",31,0)
 S LO=$O(ECLOC(0)),HI=$O(ECLOC(" "),-1)
"RTN","ECXPURG1",32,0)
 S DIR(0)="L^"_LO_":"_HI_"",DIR("A")="Select extracts to be deleted"
"RTN","ECXPURG1",33,0)
 S DIR("?",1)="Choose the number(s) of the extract(s) you wish to delete,",DIR("?")="(e.g. 1-3,17,20 to choose 1 thru 3, 17, and 20)."
"RTN","ECXPURG1",34,0)
 W ! D ^DIR K DIR I $D(DIRUT) K ECLOC G DONE
"RTN","ECXPURG1",35,0)
 S JJ=0,Y=","_Y F  S JJ=$O(ECLOC(JJ)) Q:'JJ  S JZ=","_JJ_"," I Y'[JZ K ECLOC(JJ)
"RTN","ECXPURG1",36,0)
 I '$D(ECLOC) W !!,"You have not chosen a valid extract number.  Try again." G GET ;144 Give message if no valid selection made
"RTN","ECXPURG1",37,0)
 D CBOCCHK(.ECLOC) I '$D(ECLOC) G GET
"RTN","ECXPURG1",38,0)
 D DIVCHK(.ECLOC,.ECTMP)
"RTN","ECXPURG1",39,0)
 I '$D(ECLOC) W !!,"You have not chosen a valid extract number.  Try again." G GET
"RTN","ECXPURG1",40,0)
ASK3 W !!,"I will delete the following extract(s):"
"RTN","ECXPURG1",41,0)
 S JJ=0 F  S JJ=$O(ECLOC(JJ)) Q:'JJ  D
"RTN","ECXPURG1",42,0)
 .W !?5,"#",JJ," - ",$P(ECLOC(JJ),U)
"RTN","ECXPURG1",43,0)
 .W ?47,$TR($$FMTE^XLFDT($P(ECLOC(JJ),U,2),"5DF")," ","0")," to ",$TR($$FMTE^XLFDT($P(ECLOC(JJ),U,3),"5DF")," ","0")
"RTN","ECXPURG1",44,0)
 W !! K DIR S DIR(0)="Y",DIR("A")="Is this OK",DIR("B")="NO"
"RTN","ECXPURG1",45,0)
 S DIR("?",1)="    Enter:"
"RTN","ECXPURG1",46,0)
 S DIR("?",2)="      ""YES"" if you agree with this list and would like to proceed,"
"RTN","ECXPURG1",47,0)
 S DIR("?",3)="       ""NO"" if you would like to make a different selection, or"
"RTN","ECXPURG1",48,0)
 S DIR("?")="        ""^"" to exit option."
"RTN","ECXPURG1",49,0)
 D ^DIR K DIR I $D(DIRUT) K ECLOC G DONE
"RTN","ECXPURG1",50,0)
 I 'Y G GET
"RTN","ECXPURG1",51,0)
 ; at this point, the local array ECLOC( is passed back to ^ECXPURG
"RTN","ECXPURG1",52,0)
 G DONE
"RTN","ECXPURG1",53,0)
QUIT ;
"RTN","ECXPURG1",54,0)
 I $E(IOST)="C"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECXPURG1",55,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXPURG1",56,0)
 W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECXPURG1",57,0)
DONE K ^TMP("ECXPURG",$J),ZTSK Q
"RTN","ECXPURG1",58,0)
PRT ;print list of extracts
"RTN","ECXPURG1",59,0)
 S (PG,QFLG)=0,$P(LN,"-",81)="" D NOW^%DTC S Y=$E(%,1,12) X ^DD("DD") S HDT=Y D HDR
"RTN","ECXPURG1",60,0)
 S ECTYP="" F  S ECTYP=$O(^TMP("ECXPURG",$J,ECTYP)) Q:ECTYP=""  Q:QFLG  D:$Y+4>IOSL HDR Q:QFLG  W !!,ECTYP D
"RTN","ECXPURG1",61,0)
 .S ECEX=0 F  S ECEX=$O(^TMP("ECXPURG",$J,ECTYP,ECEX)) Q:'ECEX  Q:QFLG  I $D(^ECX(727,ECEX,0)) S EC=^(0) D
"RTN","ECXPURG1",62,0)
 ..S ECDT=$$FMTE^XLFDT($P(EC,U,2),"D")
"RTN","ECXPURG1",63,0)
 ..S ECFR=$TR($$FMTE^XLFDT($P(EC,U,4),"5DF")," ","0")
"RTN","ECXPURG1",64,0)
 ..S ECTO=$TR($$FMTE^XLFDT($P(EC,U,5),"5DF")," ","0")
"RTN","ECXPURG1",65,0)
 ..S ECRC=$P(EC,U,6) S:ECRC="" ECRC="Incomplete"
"RTN","ECXPURG1",66,0)
 ..S ECTRN=$$FMTE^XLFDT($G(^ECX(727,ECEX,"TR")),"D")
"RTN","ECXPURG1",67,0)
 ..S ECXDIV=$P($G(^ECX(727,ECEX,"DIV")),U,1) I ECXDIV D
"RTN","ECXPURG1",68,0)
 ...K ECXDIC S DA=ECXDIV,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPURG1",69,0)
 ...D EN^DIQ1 S ECXDIV=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPURG1",70,0)
 ..D:$Y+3>IOSL HDR Q:QFLG
"RTN","ECXPURG1",71,0)
 ..W !?1,ECEX,?11,ECDT,?25,ECFR,"-",ECTO,?48,$J(ECRC,9),?60,ECTRN,?75,ECXDIV
"RTN","ECXPURG1",72,0)
 G QUIT
"RTN","ECXPURG1",73,0)
HDR ;HEADER
"RTN","ECXPURG1",74,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXPURG1",75,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXPURG1",76,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"DELETABLE EXTRACTS",?72,"Page: ",PG,!,"Printed on ",HDT,!
"RTN","ECXPURG1",77,0)
 W !,"FEEDER SYS",?12,"EXTRACT,",!,"EXTRACT #",?12,"DATE",?33,"FROM-TO",?48,"RECORD CNT",?60,"TRANSMIT DATE",?75,"DIV",!,LN
"RTN","ECXPURG1",78,0)
 Q
"RTN","ECXPURG1",79,0)
DATES ;ask for date range for purge of holding files
"RTN","ECXPURG1",80,0)
 K HI,LO,ECBDT,ECEDT
"RTN","ECXPURG1",81,0)
 I ECY="I" D
"RTN","ECXPURG1",82,0)
 .I '$O(^ECX(728.113,0)) W !!,"You have no data in the IVP holding file (file #728.113) to purge." Q
"RTN","ECXPURG1",83,0)
 .S LO=$O(^ECX(728.113,"A",0)),HI=$O(^ECX(728.113,"A"," "),-1)
"RTN","ECXPURG1",84,0)
 I ECY="U" D
"RTN","ECXPURG1",85,0)
 .I '$O(^ECX(728.904,0)) W !!,"You have no data in the UDP holding file (file #728.904) to purge." Q
"RTN","ECXPURG1",86,0)
 .S LO=$O(^ECX(728.904,"A",0)),HI=$O(^ECX(728.904,"A"," "),-1)
"RTN","ECXPURG1",87,0)
 I ECY="V" D
"RTN","ECXPURG1",88,0)
 .I '$O(^VBEC(6002.03,0)) W !!,"You have no data in the VBECS holding file (file #6002.03) to purge." Q
"RTN","ECXPURG1",89,0)
 .S LO=$O(^VBEC(6002.03,"C",0)),HI=$O(^VBEC(6002.03,"C"," "),-1)
"RTN","ECXPURG1",90,0)
 Q:$G(LO)=""
"RTN","ECXPURG1",91,0)
 W @IOF,!!,"This file currently holds ",$S(ECY="I":"IVP",ECY="U":"UDP",1:"VBECS")," data from <",$$FMTE^XLFDT(LO,"D"),"> to <",$$FMTE^XLFDT(HI,"D"),">."
"RTN","ECXPURG1",92,0)
 W ! K DIR S DIR(0)="DA^"_LO_":"_HI_":EPX",DIR("A")="Beginning date for purge: " D ^DIR K DIR I $D(DIRUT) K HI,LO Q
"RTN","ECXPURG1",93,0)
 S ECBDT=+Y
"RTN","ECXPURG1",94,0)
 K DIR S DIR(0)="DA^"_ECBDT_":"_HI_":EPX",DIR("A")="Ending date for purge: " D ^DIR K DIR I $D(DIRUT) K HI,LO,ECBDT Q
"RTN","ECXPURG1",95,0)
 S ECEDT=+Y
"RTN","ECXPURG1",96,0)
ASK4 ; ask to confirm date range
"RTN","ECXPURG1",97,0)
 W !!,"I will purge the ",$S(ECY="I":"IVP",ECY="U":"UDP",1:"VBECS")," holding file from <",$$FMTE^XLFDT(ECBDT,"D"),"> to <",$$FMTE^XLFDT(ECEDT,"D"),">."
"RTN","ECXPURG1",98,0)
 W !! K DIR S DIR(0)="Y",DIR("A")="Is this OK",DIR("B")="NO"
"RTN","ECXPURG1",99,0)
 S DIR("?",1)="    Enter:"
"RTN","ECXPURG1",100,0)
 S DIR("?",2)="      ""YES"" if you agree with this date range and wish to proceed,"
"RTN","ECXPURG1",101,0)
 S DIR("?",3)="       ""NO"" if you would like to make a different selection, or"
"RTN","ECXPURG1",102,0)
 S DIR("?")="        ""^"" to exit option."
"RTN","ECXPURG1",103,0)
 D ^DIR K DIR I $D(DIRUT) K ECBDT,ECEDT Q 
"RTN","ECXPURG1",104,0)
 I 'Y G DATES
"RTN","ECXPURG1",105,0)
 ; at this point, ECBDT and ECEDT are passed back to ^ECXPURG
"RTN","ECXPURG1",106,0)
 Q
"RTN","ECXPURG1",107,0)
 ;
"RTN","ECXPURG1",108,0)
DIVCHK(ECLOC,ECTMP) ;**Remove extracts from ECLOC that are for user's div.
"RTN","ECXPURG1",109,0)
 N ECLPDA
"RTN","ECXPURG1",110,0)
 S ECLPDA=0
"RTN","ECXPURG1",111,0)
 F  S ECLPDA=$O(ECLOC(ECLPDA)) Q:(+ECLPDA=0)  DO
"RTN","ECXPURG1",112,0)
 .I '$D(ECTMP($P(^ECX(727,ECLPDA,"DIV"),U,1))) KILL ECLOC(ECLPDA)
"RTN","ECXPURG1",113,0)
 Q
"RTN","ECXPURG1",114,0)
CBOCCHK(ECLOC) ;**Check that CBOC report has been viewed prior to deleting
"RTN","ECXPURG1",115,0)
 N LOOPDA,YYYMMDD
"RTN","ECXPURG1",116,0)
 S LOOPDA=0
"RTN","ECXPURG1",117,0)
 F  S LOOPDA=$O(ECLOC(LOOPDA)) Q:(+LOOPDA=0)  D
"RTN","ECXPURG1",118,0)
 .I ^ECX(727,LOOPDA,"HEAD")="CLI" D
"RTN","ECXPURG1",119,0)
 ..S DA(1)=1
"RTN","ECXPURG1",120,0)
 ..S YYYMMDD=$P(^ECX(727,LOOPDA,0),U,4)
"RTN","ECXPURG1",121,0)
 ..I YYYMMDD>3030930 I '$D(^ECX(728,DA(1),"CBOC","B",LOOPDA)) D
"RTN","ECXPURG1",122,0)
 ...K DIR S DIR(0)="Y",DIR("A")="The CBOC Activity Report has not been viewed.  Delete anyway",DIR("B")="NO" ;144
"RTN","ECXPURG1",123,0)
 ...D ^DIR K DIR I 'Y K ECLOC(LOOPDA)
"RTN","ECXPURG1",124,0)
 Q
"RTN","ECXQSR")
0^22^B61223139^B49856684
"RTN","ECXQSR",1,0)
ECXQSR ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ;4/16/13  14:23
"RTN","ECXQSR",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,26,24,34,33,35,39,43,46,49,64,71,84,92,106,105,120,124,127,132,136,144**;Dec 22, 1997;Build 9
"RTN","ECXQSR",3,0)
BEG ;entry point from option
"RTN","ECXQSR",4,0)
 I '$O(^ACK(509850.8,0)) W !,"You must be using the Quality Audiology & Speech Pathology",!,"Audit & Review (QUASAR) software to run this extract.",!! Q
"RTN","ECXQSR",5,0)
 I '$D(^ACK(509850.8,1,"DSS")) W !,"Linkage has not been established between QUASAR and the DSS UNIT file (#724).",!! Q
"RTN","ECXQSR",6,0)
 I '$O(^ACK(509850.6,0)) W !,"There is no data in the A&SP CLINIC VISIT file (#509850.6).",!! Q
"RTN","ECXQSR",7,0)
 D SETUP I ECFILE="" Q
"RTN","ECXQSR",8,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXQSR",9,0)
 Q
"RTN","ECXQSR",10,0)
START ;entry point from tasked job
"RTN","ECXQSR",11,0)
 N ERR,ECXQDT,ECXNPRFI
"RTN","ECXQSR",12,0)
 S QFLG=0,ECED=ECED+.9,ECD=ECSD1,ECXQV=""
"RTN","ECXQSR",13,0)
 D QINST I $D(ERR) Q
"RTN","ECXQSR",14,0)
 S ECL=+^ACK(509850.8,1,0),ECLINK=^ACK(509850.8,1,"DSS")
"RTN","ECXQSR",15,0)
 F  S ECD=$O(^ACK(509850.6,"B",ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)!(QFLG)  D
"RTN","ECXQSR",16,0)
 .I +ECXQV=3,ECD<ECXQDT S ECXQV=2.0
"RTN","ECXQSR",17,0)
 .F  S ECDA=$O(^ACK(509850.6,"B",ECD,ECDA)) Q:'ECDA  D UPDATE Q:QFLG
"RTN","ECXQSR",18,0)
 Q
"RTN","ECXQSR",19,0)
QINST ;Get installed information for QUASAR
"RTN","ECXQSR",20,0)
 N ARR,IENS,QVIEN,INTIEN
"RTN","ECXQSR",21,0)
 S ECXQDT=""
"RTN","ECXQSR",22,0)
 D FILE^DID(509850.6,,"VERSION","ARR","ERR")
"RTN","ECXQSR",23,0)
 S ECXQV=$G(ARR("VERSION")) I +ECXQV=0 S ERR=1 Q
"RTN","ECXQSR",24,0)
 S QVIEN=$$FIND1^DIC(9.4,"","X","QUASAR") I +QVIEN<1 S ERR=1 Q
"RTN","ECXQSR",25,0)
 S IENS=","_QVIEN_","
"RTN","ECXQSR",26,0)
 S INTIEN=$$FIND1^DIC(9.49,IENS,"X",ECXQV) I +INTIEN<1 S ERR=1 Q
"RTN","ECXQSR",27,0)
 S IENS=INTIEN_","_QVIEN,ECXQDT=$$GET1^DIQ(9.49,IENS,2,"I")
"RTN","ECXQSR",28,0)
 Q
"RTN","ECXQSR",29,0)
UPDATE ;create record for each unique CPT code for clinic visit 
"RTN","ECXQSR",30,0)
 N ARY,ECZNODE,CPT,LOC,MOD,STR,VOL,XX,ECTP,ECV
"RTN","ECXQSR",31,0)
 N ECXICD10P,ECXICD101,ECXICD102,ECXICD103,ECXICD104,ECXVNS,ECX4CHAR,ECXESC,ECXECL,ECXCLST ;144
"RTN","ECXQSR",32,0)
 Q:'$D(^ACK(509850.6,ECDA,0))
"RTN","ECXQSR",33,0)
 S ECZNODE=^ACK(509850.6,ECDA,0),EC2NODE=$G(^ACK(509850.6,ECDA,2))
"RTN","ECXQSR",34,0)
 S ECDT=$P(ECZNODE,U),ECDAY=$$ECXDATE^ECXUTL(ECDT,ECXYM)
"RTN","ECXQSR",35,0)
 S ECTIME=$$ECXTIME^ECXUTL(ECDT) S:$P(ECDT,".",2)="" ECTIME="000000"
"RTN","ECXQSR",36,0)
 S ECXDFN=$P(ECZNODE,U,2)
"RTN","ECXQSR",37,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECD,"1;3;5")
"RTN","ECXQSR",38,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECDT,"1;5",.ECXPAT)
"RTN","ECXQSR",39,0)
 S ECX4CHAR="" ;144 NULL passed 
"RTN","ECXQSR",40,0)
 S ECXCLST="" ;144
"RTN","ECXQSR",41,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXQSR",42,0)
 ;OEF/OIF data
"RTN","ECXQSR",43,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXQSR",44,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXQSR",45,0)
 S ECXVNS=ECXPAT("VIETNAM") ;144 VIETNAM STATUS CVW
"RTN","ECXQSR",46,0)
 S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune Status
"RTN","ECXQSR",47,0)
 ;
"RTN","ECXQSR",48,0)
 S ECHL="",ECXDIV=$P($G(^ACK(509850.6,ECDA,5)),U),ECSTOP=$P(EC2NODE,U)
"RTN","ECXQSR",49,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get Production Division
"RTN","ECXQSR",50,0)
 Q:ECSTOP=""
"RTN","ECXQSR",51,0)
 S (ECHLS,ECHL2S)="000",ECAC=$P($G(ECZNODE),U,6)
"RTN","ECXQSR",52,0)
 I ECAC D
"RTN","ECXQSR",53,0)
 .S ECHL=+$P($G(^SC(ECAC,0)),U,7),ECHL2=+$P($G(^(0)),U,18) I ECHL D
"RTN","ECXQSR",54,0)
 ..S ECHLS=$P($G(^DIC(40.7,+ECHL,0)),U,2),ECHL2S=$P($G(^DIC(40.7,+ECHL2,0)),U,2)
"RTN","ECXQSR",55,0)
 ..S ECHLS=$$RJ^XLFSTR(ECHLS,3,0),ECHL2S=$$RJ^XLFSTR(ECHL2S,3,0)
"RTN","ECXQSR",56,0)
 S ECDSS=ECHLS_ECHL2S
"RTN","ECXQSR",57,0)
 I ECXLOGIC>2003 D
"RTN","ECXQSR",58,0)
 .I "^18^23^24^41^65^94^108^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXQSR",59,0)
 S ECDU=$S(ECSTOP["A":$P(ECLINK,U),ECSTOP["S":$P(ECLINK,U,2),1:"")
"RTN","ECXQSR",60,0)
 Q:'ECDU
"RTN","ECXQSR",61,0)
 S ECDSSU=$G(^ECD(ECDU,0)),ECCS=+$P(ECDSSU,U,4),(ECO,ECM)=+$P(ECDSSU,U,3),ECXDSSD=$E($P(ECDSSU,U,5),1,10)
"RTN","ECXQSR",62,0)
 Q:'$O(^ACK(509850.6,ECDA,3,0))
"RTN","ECXQSR",63,0)
 ;Create local array of procedure codes and # of times each procedure
"RTN","ECXQSR",64,0)
 ; was performed.
"RTN","ECXQSR",65,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXQSR",66,0)
 F I=1:1:4 S @("ECXICD10"_I)=""
"RTN","ECXQSR",67,0)
 S (ECDIA,ECXPPC,ECXPRV1,ECXPRV2,ECXPRV3,ECXPRV4,ECXPRV5,ECXPRV6,ECXPRV7,ECXICD10P)="" ;144 MORE PROVIDERS
"RTN","ECXQSR",68,0)
 ;if QUASAR v2
"RTN","ECXQSR",69,0)
 I +ECXQV=2 D
"RTN","ECXQSR",70,0)
 .S ECXPRV1=$P(EC2NODE,U,7),ECXPRV2=$P(EC2NODE,U,3),ECXPRV3=$P(EC2NODE,U,5),ECPN=0
"RTN","ECXQSR",71,0)
 .F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",72,0)
 ..S XX=^ACK(509850.6,ECDA,3,ECPN,0),XX=$P(XX,U),XX=$P($G(^ACK(509850.4,XX,0)),U),ECXCPT=$E($$CPT^ECXUTL3(XX),1,5)
"RTN","ECXQSR",73,0)
 ..I ECXCPT]"" D
"RTN","ECXQSR",74,0)
 ...I '$D(LOC(ECXCPT)) S LOC(ECXCPT)=0_U_ECXPRV1
"RTN","ECXQSR",75,0)
 ...S $P(LOC(ECXCPT),U)=$P(LOC(ECXCPT),U)+1
"RTN","ECXQSR",76,0)
 .S ECIEN=$O(^ACK(509850.6,ECDA,1,0)),ECDIA=$P($G(^ICD9(+$G(^ACK(509850.6,ECDA,1,ECIEN,0)),0)),U)
"RTN","ECXQSR",77,0)
 .F I=1:1:4 S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'+ECIEN  D
"RTN","ECXQSR",78,0)
 ..S @("ECXICD9"_I)=$P($G(^ICD9(+$P(^ACK(509850.6,ECDA,1,ECIEN,0),U),0)),U)
"RTN","ECXQSR",79,0)
 ;if QUASAR v3
"RTN","ECXQSR",80,0)
 I +ECXQV=3 D
"RTN","ECXQSR",81,0)
 .N CPT,DIA,I,J,MOD,MOD1,P,STR,VOL,ECTP,ARY,ECP,ECPN
"RTN","ECXQSR",82,0)
 .S ECXPRV2=$G(^ACK(509850.6,ECDA,2.7,1,0)),ECXPRV3=$G(^ACK(509850.6,ECDA,2.7,2,0)),ECXPRV4=$G(^ACK(509850.6,ECDA,2.7,3,0)),ECXPRV5=$G(^ACK(509850.6,ECDA,2.7,4,0))
"RTN","ECXQSR",83,0)
 .S ECXPRV6=$G(^ACK(509850.6,ECDA,2.7,5,0)),ECXPRV7=$G(^ACK(509850.6,ECDA,2.7,6,0)) ;144 more prov
"RTN","ECXQSR",84,0)
 .I $G(ECXPRV2) S ECXPRV2=$$CONVERT1^ACKQUTL4(ECXPRV2)
"RTN","ECXQSR",85,0)
 .I $G(ECXPRV3) S ECXPRV3=$$CONVERT1^ACKQUTL4(ECXPRV3)
"RTN","ECXQSR",86,0)
 .I $G(ECXPRV4) S ECXPRV4=$$CONVERT1^ACKQUTL4(ECXPRV4)
"RTN","ECXQSR",87,0)
 .I $G(ECXPRV5) S ECXPRV5=$$CONVERT1^ACKQUTL4(ECXPRV5)
"RTN","ECXQSR",88,0)
 .I $G(ECXPRV6) S ECXPRV6=$$CONVERT1^ACKQUTL4(ECXPRV6) ;144
"RTN","ECXQSR",89,0)
 .I $G(ECXPRV7) S ECXPRV7=$$CONVERT1^ACKQUTL4(ECXPRV7) ;144
"RTN","ECXQSR",90,0)
 .S ECPN=0 F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",91,0)
 ..S CPT=^ACK(509850.6,ECDA,3,ECPN,0),ECXCPT=$P(CPT,U),ECTP=+$P(CPT,U,5),ECV=1,ECP=""
"RTN","ECXQSR",92,0)
 ..Q:ECXCPT=""
"RTN","ECXQSR",93,0)
 ..I ECTP D
"RTN","ECXQSR",94,0)
 ...S CPT=$G(^ACK(509850.6,ECDA,7,ECTP,0)),ECP=$P(CPT,U)
"RTN","ECXQSR",95,0)
 ...S ECP=$S(ECP<90000:$P($G(^EC(725,+ECP,0)),U,2)_"N",1:$P($G(^EC(725,+ECP,0)),U,2)_"L")
"RTN","ECXQSR",96,0)
 ...S VOL=+$P(CPT,U,2),ECXPRV1=$P(CPT,U,3)
"RTN","ECXQSR",97,0)
 ..I 'ECTP S VOL=+$P(CPT,U,3),ECXPRV1=$P(CPT,U,4)
"RTN","ECXQSR",98,0)
 ..I $G(ECXPRV1) S ECXPRV1=$$CONVERT1^ACKQUTL4(ECXPRV1)
"RTN","ECXQSR",99,0)
 ..S ECXCPT=$E($$CPT^ECXUTL3(ECXCPT),1,5),ECXMOD="",MOD=0
"RTN","ECXQSR",100,0)
 ..F  S MOD=$O(^ACK(509850.6,ECDA,3,ECPN,1,MOD)) Q:'MOD  D
"RTN","ECXQSR",101,0)
 ...S MOD1=+^ACK(509850.6,ECDA,3,ECPN,1,MOD,0) D:MOD1
"RTN","ECXQSR",102,0)
 ....S ECXMOD=ECXMOD_MOD1_";"
"RTN","ECXQSR",103,0)
 ..F I=1:1:$L(ECXMOD,";") I $G(ARY(ECXCPT))'[$P(ECXMOD,";",I) D
"RTN","ECXQSR",104,0)
 ...S ARY(ECXCPT)=$G(ARY(ECXCPT))_$P(ECXMOD,";",I)_";"
"RTN","ECXQSR",105,0)
 ..S:VOL ECV=VOL
"RTN","ECXQSR",106,0)
 ..S ECV=ECV+$G(LOC(ECXCPT)),LOC(ECXCPT)=ECV_U_ECXPRV1_U_ECP
"RTN","ECXQSR",107,0)
 .S ECIEN=0 F  S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'ECIEN  D
"RTN","ECXQSR",108,0)
 ..S DIA=^ACK(509850.6,ECDA,1,ECIEN,0),P=$P(DIA,U,2),P=$S(P=1:"P",1:"S")
"RTN","ECXQSR",109,0)
 ..S CNT=$G(STR(P))+1,STR(P,CNT)=$P($G(^ICD9(+DIA,0)),U),STR(P)=CNT
"RTN","ECXQSR",110,0)
 .S ECDIA=$G(STR("P",1))
"RTN","ECXQSR",111,0)
 .F I=1:1:4 Q:'$D(STR("P",I+1))  S @("ECXICD9"_I)=STR("P",I)
"RTN","ECXQSR",112,0)
 .S:ECDIA="" ECDIA=$G(STR("S",1)),I=2
"RTN","ECXQSR",113,0)
 .F J=I:1:4 Q:'$D(STR("S",J))  S @("ECXICD9"_J)=STR("S",J)
"RTN","ECXQSR",114,0)
 Q:('$D(LOC))!('$O(^ACK(509850.6,ECDA,1,0)))
"RTN","ECXQSR",115,0)
 ;- Ord Div, Contract St/End Dates, Contract Type placeholders for FY2002
"RTN","ECXQSR",116,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXQSR",117,0)
 ;set up Provider Person class
"RTN","ECXQSR",118,0)
 S (ECXCPT,ECXPPC1,ECXPPC2,ECXPPC3,ECXPPC4,ECXPPC5,ECXPPC6,ECXPPC7)="" ;144 new ppc
"RTN","ECXQSR",119,0)
 S:ECXPRV2'="" ECXPPC2=$$PRVCLASS^ECXUTL(ECXPRV2,ECD)
"RTN","ECXQSR",120,0)
 S:ECXPRV3'="" ECXPPC3=$$PRVCLASS^ECXUTL(ECXPRV3,ECD)
"RTN","ECXQSR",121,0)
 S:ECXPRV4'="" ECXPPC4=$$PRVCLASS^ECXUTL(ECXPRV4,ECD)
"RTN","ECXQSR",122,0)
 S:ECXPRV5'="" ECXPPC5=$$PRVCLASS^ECXUTL(ECXPRV5,ECD)
"RTN","ECXQSR",123,0)
 S:ECXPRV6'="" ECXPPC6=$$PRVCLASS^ECXUTL(ECXPRV6,ECD) ;144
"RTN","ECXQSR",124,0)
 S:ECXPRV7'="" ECXPPC7=$$PRVCLASS^ECXUTL(ECXPRV7,ECD) ;144
"RTN","ECXQSR",125,0)
 ;set up Provider NPI
"RTN","ECXQSR",126,0)
 S (ECPR1NPI,ECPR2NPI,ECPR3NPI,ECPR4NPI,ECPR5NPI,ECPR6NPI,ECPR7NPI)="" ;144 new npi
"RTN","ECXQSR",127,0)
 S ECPR2NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV2,ECD)
"RTN","ECXQSR",128,0)
 S:+ECPR2NPI'>0 ECPR2NPI="" S ECPR2NPI=$P(ECPR2NPI,U)
"RTN","ECXQSR",129,0)
 S ECPR3NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV3,ECD)
"RTN","ECXQSR",130,0)
 S:+ECPR3NPI'>0 ECPR3NPI="" S ECPR3NPI=$P(ECPR3NPI,U)
"RTN","ECXQSR",131,0)
 S ECPR4NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV4,ECD)
"RTN","ECXQSR",132,0)
 S:+ECPR4NPI'>0 ECPR4NPI="" S ECPR4NPI=$P(ECPR4NPI,U)
"RTN","ECXQSR",133,0)
 S ECPR5NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV5,ECD)
"RTN","ECXQSR",134,0)
 S:+ECPR5NPI'>0 ECPR5NPI="" S ECPR5NPI=$P(ECPR5NPI,U)
"RTN","ECXQSR",135,0)
 S ECPR6NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV6,ECD) ;144
"RTN","ECXQSR",136,0)
 S:+ECPR6NPI'>0 ECPR6NPI="" S ECPR6NPI=$P(ECPR6NPI,U) ;144
"RTN","ECXQSR",137,0)
 S ECPR7NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV7,ECD) ;144
"RTN","ECXQSR",138,0)
 S:+ECPR7NPI'>0 ECPR7NPI="" S ECPR7NPI=$P(ECPR7NPI,U) ;144
"RTN","ECXQSR",139,0)
 N DA,DIC,DIK,DR,FILEN,DIQ,XVAR,II,DI
"RTN","ECXQSR",140,0)
 F II=2,3,4,5,6,7 S XVAR="ECXPRV"_II I @XVAR'="" D
"RTN","ECXQSR",141,0)
 .S @XVAR=2_@XVAR
"RTN","ECXQSR",142,0)
 ; -Observation Patient Indicator (yes/no)
"RTN","ECXQSR",143,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXQSR",144,0)
 ; -CNH status (YES/NO)
"RTN","ECXQSR",145,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXQSR",146,0)
 ;get encounter classification
"RTN","ECXQSR",147,0)
 S (ECXAO,ECXECE,ECXIR,ECXMIL,ECXHNC,ECXSHAD,ECXESC,ECXECL)="",ECXVISIT=$P($G(^ACK(509850.6,ECDA,6)),U,3) ;144
"RTN","ECXQSR",148,0)
 I ECXVISIT'="" D
"RTN","ECXQSR",149,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXQSR",150,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXQSR",151,0)
 .S ECXIR=$G(ECXVIST("IR")),ECXMIL=$G(ECXVIST("MST")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXQSR",152,0)
 .S ECXESC=$G(ECXVIST("ENCSC")),ECXECL=$G(ECXVIST("ENCCL")) ;144
"RTN","ECXQSR",153,0)
 ; -Head and Neck Cancer Indicator
"RTN","ECXQSR",154,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXQSR",155,0)
 ; -PROJ 112/SHAD Indicator
"RTN","ECXQSR",156,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXQSR",157,0)
 ; ******* - PATCH 127, ADD PATCAT CODE - ********
"RTN","ECXQSR",158,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXQSR",159,0)
 ;get enrollment data (category, status and priority)
"RTN","ECXQSR",160,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXQSR",161,0)
 ; -Get national patient record flag Indicator if exist
"RTN","ECXQSR",162,0)
 D NPRF^ECXUTL5
"RTN","ECXQSR",163,0)
 ; -If no encounter number don't file record
"RTN","ECXQSR",164,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSS,)
"RTN","ECXQSR",165,0)
 Q:ECXENC=""
"RTN","ECXQSR",166,0)
 ;Loop through array of unique procedures. Create record in ECODE.
"RTN","ECXQSR",167,0)
 S CPT="" F  S CPT=$O(LOC(CPT)) Q:CPT=""  D
"RTN","ECXQSR",168,0)
 .S ECV=+$P(LOC(CPT),U),ECXCPT=$$CPT^ECXUTL3(CPT,$G(ARY(CPT)),ECV)
"RTN","ECXQSR",169,0)
 .S ECXPRV1=$P(LOC(CPT),U,2)
"RTN","ECXQSR",170,0)
 .S:ECXPRV1'="" ECXPPC1=$$PRVCLASS^ECXUTL(ECXPRV1,ECD)
"RTN","ECXQSR",171,0)
 .S ECPR1NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV1,ECD)
"RTN","ECXQSR",172,0)
 .S:+ECPR1NPI'>0 ECPR1NPI="" S ECPR1NPI=$P(ECPR1NPI,U)
"RTN","ECXQSR",173,0)
 .S:ECXPRV1'="" ECXPRV1=2_ECXPRV1
"RTN","ECXQSR",174,0)
 .S ECP=$P(LOC(CPT),U,3) I ECP="" S ECP=$$CPT^ECXUTL3(CPT,"",ECV)
"RTN","ECXQSR",175,0)
 .D FILE^ECXQSR1
"RTN","ECXQSR",176,0)
 K CPT,LOC
"RTN","ECXQSR",177,0)
 Q
"RTN","ECXQSR",178,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR",179,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR",180,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR",181,0)
 Q
"RTN","ECXQSR",182,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR",183,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXQSR1")
0^23^B16250505^B13899890
"RTN","ECXQSR1",1,0)
ECXQSR1 ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ;5/22/13  13:01
"RTN","ECXQSR1",2,0)
 ;;3.0;DSS EXTRACTS;**105,120,127,132,136,144**;Dec 22, 1997;Build 9
"RTN","ECXQSR1",3,0)
FILE ;file record in #727.825
"RTN","ECXQSR1",4,0)
 ;node0
"RTN","ECXQSR1",5,0)
 ;inst^dfn ECXDFN^ssn ECXSSN^name ECXPNM^i/o status ECXA^day ECDAY^
"RTN","ECXQSR1",6,0)
 ;DSS unit ECDU^^category ECPTTM^procedure ECP^volume ECV^cost center^
"RTN","ECXQSR1",7,0)
 ;ordering sec ^section^provider ECXPRV1^ECXPPC1^ECXPRV2^ECXPPC2^ECXPRV3^
"RTN","ECXQSR1",8,0)
 ;ECXPPC3^mov # ECXMN^treat spec ECXTS^time ECTIME^primary care team 
"RTN","ECXQSR1",9,0)
 ;ECPTTM^primary care provider ECPTPR^pce cpt code & modifers ECXCPT^
"RTN","ECXQSR1",10,0)
 ;primary icd-9 code ECDIA^secondary icd-9 #1 ECXICD91^secondary icd-9 
"RTN","ECXQSR1",11,0)
 ;#2 ECXICD92^secondary icd-9 #3 ECXICD93^secondary icd-9 #4 ECXICD94^
"RTN","ECXQSR1",12,0)
 ;agent orange ECXAST^radiation exposure ECRST^environmental
"RTN","ECXQSR1",13,0)
 ;contaminants ECEST^service connected ECSC^sent to pce^^dss identifier
"RTN","ECXQSR1",14,0)
 ;ECDSS^placeholder
"RTN","ECXQSR1",15,0)
 ;node1
"RTN","ECXQSR1",16,0)
 ;mpi ECXNPI^dss dept ECXDSSD^^^^placeholder 
"RTN","ECXQSR1",17,0)
 ;^assoc pc provider ECASPR^assoc pc prov person class 
"RTN","ECXQSR1",18,0)
 ;ECCLAS2^placeholder^divison ECXDIV^dom ECXDOM^
"RTN","ECXQSR1",19,0)
 ;enrollment category ECXCAT^enrollment status ECXSTAT^enrollment prior 
"RTN","ECXQSR1",20,0)
 ;ECXPRIOR^period of service ECXPOS^purple heart ECXPHI^observ pat ind 
"RTN","ECXQSR1",21,0)
 ;ECXOBS^encounter num ECXENC^ao loc ECXAOL^ord div ECXODIV^contr st dt 
"RTN","ECXQSR1",22,0)
 ;ECXCSDT^contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXQSR1",23,0)
 ;production division ECXPDIV^eligibility ECXELIG^ethnicity ECXETH^
"RTN","ECXQSR1",24,0)
 ;race1 ECXRC1^enrollment location ECXENRL^^enrollment priority 
"RTN","ECXQSR1",25,0)
 ;ECXPRIOR_enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient 
"RTN","ECXQSR1",26,0)
 ;type ECXPTYPE^combat vet elig ECXCVE
"RTN","ECXQSR1",27,0)
 ;NODE 2
"RTN","ECXQSR1",28,0)
 ;^combat vet elig end date ECXCVEDT^
"RTN","ECXQSR1",29,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^
"RTN","ECXQSR1",30,0)
 ;emergency response indicator(FEMA) ECXERI^agent orange indicator 
"RTN","ECXQSR1",31,0)
 ;ECXAO^environ contam ECXECE^head/neck ECXHNC^military sexual trauma 
"RTN","ECXQSR1",32,0)
 ;ECXMIL^radiation encoun ECXIR^nutrition dx(currently null)^OEF/OIF ECXOEF^
"RTN","ECXQSR1",33,0)
 ;OEF/OIF return date ECXOEFDT^assoc pc provider npi ECASNPI^
"RTN","ECXQSR1",34,0)
 ;primary care provider npi ECPTNPI^provider npi ECPR1NPI^
"RTN","ECXQSR1",35,0)
 ;provider #2 npi ECPR2NPI^provider #3 npi ECPR3NPI^shad status ECXSHADI^
"RTN","ECXQSR1",36,0)
 ;shad encouter ECXSHAD^pat cat ECXPATCAT^provider #4 ECXPRV4^
"RTN","ECXQSR1",37,0)
 ;provider #4 pc ECXPPC4^provider #4 npi ECPR4NPI^provider #5 ECXPRV5^
"RTN","ECXQSR1",38,0)
 ;provider #5 pc ECXPPC5^provider #5 npi ECPR5NPI^
"RTN","ECXQSR1",39,0)
 ;primary ICD-10 code (currently null) ECXICD10P^Secondary ICD-10 Code #1 (currently null) ECXICD101^
"RTN","ECXQSR1",40,0)
 ;Secondary ICD-10 Code #2 (currently null) ECXICD102^Secondary ICD-10 Code #3 (currently null) ECXICD103^
"RTN","ECXQSR1",41,0)
 ;NODE 3
"RTN","ECXQSR1",42,0)
 ;Secondary ICD-10 Code #4 (currently null) ECXICD104^Encounter SC ECXESC^Vietnam Status ECXVNS
"RTN","ECXQSR1",43,0)
 ;Provider #6 ECXPRV6^ Prov #6 PC ECXPPC6^Prov #6 NPI ECPR6NPI^Provider #7 ECXPRV7^ Prov #7 PC ECXPPC7^Prov #7 NPI ECPR7NPI^4CHAR ECX4CHAR^Clinic IEN ECAC^Camp Lejeune status ECXCLST^Encounter Camp Lejeune ECXECL
"RTN","ECXQSR1",44,0)
 ;
"RTN","ECXQSR1",45,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXQSR1",46,0)
 N ECXDATA,ECXTSC
"RTN","ECXQSR1",47,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXQSR1",48,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXQSR1",49,0)
 ;done
"RTN","ECXQSR1",50,0)
 N DA,DIK
"RTN","ECXQSR1",51,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXQSR1",52,0)
 S ECODE=EC7_U_EC23_U
"RTN","ECXQSR1",53,0)
 S ECODE=ECODE_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECDAY_U_ECDU_U_U
"RTN","ECXQSR1",54,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECXPRV1_U_ECXPPC1_U
"RTN","ECXQSR1",55,0)
 S ECODE=ECODE_ECXPRV2_U_ECXPPC2_U_ECXPRV3_U_ECXPPC3_U_U
"RTN","ECXQSR1",56,0)
 S ECODE=ECODE_ECXMN_U_ECXTSC_U_ECTIME_U_ECPTTM_U
"RTN","ECXQSR1",57,0)
 S ECODE=ECODE_ECPTPR_U_ECXCPT_U_ECDIA_U_ECXICD91_U_ECXICD92_U
"RTN","ECXQSR1",58,0)
 S ECODE=ECODE_ECXICD93_U_ECXICD94_U_ECXAST_U_ECXRST_U_ECXEST_U
"RTN","ECXQSR1",59,0)
 S ECODE=ECODE_ECSC_U_"N"_U_U_ECDSS_U_U
"RTN","ECXQSR1",60,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_ECCLAS_U_U_ECASPR_U
"RTN","ECXQSR1",61,0)
 S ECODE1=ECODE1_ECCLAS2_U_U_ECXDIV_U_ECXMST_U_ECXDOM_U
"RTN","ECXQSR1",62,0)
 S ECODE1=ECODE1_ECXDOB_U_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U
"RTN","ECXQSR1",63,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXODIV_U_ECXCSDT_U_ECXCEDT_U
"RTN","ECXQSR1",64,0)
 S ECODE1=ECODE1_ECXCTYP_U_ECXCNH_U_ECXPDIV_U_ECXELIG_U_ECXHNCI_U_ECXETH_U
"RTN","ECXQSR1",65,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXQSR1",66,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL
"RTN","ECXQSR1",67,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U
"RTN","ECXQSR1",68,0)
 I ECXLOGIC>2004 S ECODE2=ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXQSR1",69,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXQSR1",70,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_$G(ECXOEF)_U_$G(ECXOEFDT)_U_$G(ECASNPI)_U_$G(ECPTNPI)_U_$G(ECPR1NPI)_U_$G(ECPR2NPI)_U_$G(ECPR3NPI)
"RTN","ECXQSR1",71,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_$G(ECXSHADI)_U_$G(ECXSHAD)_U_ECXPATCAT
"RTN","ECXQSR1",72,0)
 I ECXLOGIC>2011 S ECODE2=ECODE2_U_$G(ECXPRV4)_U_$G(ECXPPC4)_U_$G(ECPR4NPI)_U_$G(ECXPRV5)_U_$G(ECXPPC5)_U_$G(ECPR5NPI)
"RTN","ECXQSR1",73,0)
 I ECXLOGIC>2012 S ECODE2=ECODE2_U_ECXICD10P_U_ECXICD101_U_ECXICD102_U_ECXICD103_U
"RTN","ECXQSR1",74,0)
 I ECXLOGIC>2012 S ECODE3=ECXICD104
"RTN","ECXQSR1",75,0)
 I ECXLOGIC>2013 S ECODE3=ECODE3_U_ECXESC_U_ECXVNS_U_ECXPRV6_U_ECXPPC6_U_ECPR6NPI_U_ECXPRV7_U_ECXPPC7_U_ECPR7NPI_U_ECX4CHAR_U_ECAC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXQSR1",76,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),^ECX(ECFILE,EC7,3)=$G(ECODE3),ECRN=ECRN+1
"RTN","ECXQSR1",77,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXQSR1",78,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXQSR1",79,0)
 Q
"RTN","ECXQSR1",80,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR1",81,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR1",82,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR1",83,0)
 Q
"RTN","ECXQSR1",84,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR1",85,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXRAD")
0^57^B44395156^B39628286
"RTN","ECXRAD",1,0)
ECXRAD ;ALB/JAP,BIR/PDW,PTD-Extract for Radiology ;5/20/13  14:19
"RTN","ECXRAD",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,16,24,33,39,46,71,84,92,105,120,127,136,144**;Dec 22, 1997;Build 9
"RTN","ECXRAD",3,0)
BEG ;entry point from option
"RTN","ECXRAD",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXRAD",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXRAD",6,0)
 Q
"RTN","ECXRAD",7,0)
 ;
"RTN","ECXRAD",8,0)
START ;start rad extract
"RTN","ECXRAD",9,0)
 S QFLG=0
"RTN","ECXRAD",10,0)
 K ECXDD D FIELD^DID(70.03,14,,"SPECIFIER","ECXDD") S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXRAD",11,0)
 S ECXDFN="",ECDT=ECSD-.1,ECED1=ECED+.3
"RTN","ECXRAD",12,0)
 F  S ECDT=$O(^RADPT("AR",ECDT)) Q:ECDT>ECED1!(ECDT'>0)  D  Q:QFLG
"RTN","ECXRAD",13,0)
 .S ECXDFN=""
"RTN","ECXRAD",14,0)
 .F  S ECXDFN=$O(^RADPT("AR",ECDT,ECXDFN)) Q:ECXDFN=""  I '$D(^TMP("ECL",$J,ECXDFN)) D GET Q:QFLG
"RTN","ECXRAD",15,0)
 K ^TMP("ECL",$J)
"RTN","ECXRAD",16,0)
 Q
"RTN","ECXRAD",17,0)
 ;
"RTN","ECXRAD",18,0)
GET ;get data
"RTN","ECXRAD",19,0)
 N ECXIEN,X,SUB,TYPE,ECDOCPC,ECXIS,ECXISPC,ECXPRCL,ECXCSC,ECXUSRTN,ECXCM,ECSTAT ;136
"RTN","ECXRAD",20,0)
 N ECXESC,ECXECL,ECXCLST,VISIT,ECXVIST,ECXERR ;144
"RTN","ECXRAD",21,0)
 S ^TMP("ECL",$J,ECXDFN)=""
"RTN","ECXRAD",22,0)
 ;with dfn get all exams within date range
"RTN","ECXRAD",23,0)
 S ECXMDT=ECSD-.1
"RTN","ECXRAD",24,0)
 F  S ECXMDT=$O(^RADPT(ECXDFN,"DT","B",ECXMDT)) Q:((ECXMDT>ECED1)!(ECXMDT=""))  D  Q:QFLG
"RTN","ECXRAD",25,0)
 .S ECXMDA=$O(^RADPT(ECXDFN,"DT","B",ECXMDT,"")) Q:ECXMDA=""
"RTN","ECXRAD",26,0)
 .S ECXIEN=+$P($G(^RADPT(ECXDFN,"DT",ECXMDA,"P",1,0)),U,11)
"RTN","ECXRAD",27,0)
 .S ECTM=$$ECXTIME^ECXUTL(ECXMDT) S:ECTM>235959 ECTM=235959
"RTN","ECXRAD",28,0)
 .S ECXDAY=$$ECXDATE^ECXUTL(ECXMDT,ECXYM)
"RTN","ECXRAD",29,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXMDT,"."),"1;3",.ECXPAT)
"RTN","ECXRAD",30,0)
 .Q:'OK
"RTN","ECXRAD",31,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXRAD",32,0)
 .S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXRAD",33,0)
 .;get emergency response indicator (FEMA)
"RTN","ECXRAD",34,0)
 .S ECXERI=ECXPAT("ERI")
"RTN","ECXRAD",35,0)
 .S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXMDT,"."),ECPROF)
"RTN","ECXRAD",36,0)
 .S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXRAD",37,0)
 .S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXRAD",38,0)
 .S X=$$INP^ECXUTL2(ECXDFN,ECXMDT),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXRAD",39,0)
 .S ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXRAD",40,0)
 .;
"RTN","ECXRAD",41,0)
 .;- Observation patient indicator (YES/NO)
"RTN","ECXRAD",42,0)
 .S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXRAD",43,0)
 .;for dfn & date get exam(s) ien
"RTN","ECXRAD",44,0)
 .S ECXMDA=""
"RTN","ECXRAD",45,0)
 .F  S ECXMDA=$O(^RADPT(ECXDFN,"DT","B",ECXMDT,ECXMDA)) Q:+ECXMDA=0  D
"RTN","ECXRAD",46,0)
 ..S ECXDIV=$P(^RADPT(ECXDFN,"DT",ECXMDA,0),U,3),ECLOC=$P(^(0),U,4),ECTY=$P(^(0),U,2)
"RTN","ECXRAD",47,0)
 ..;
"RTN","ECXRAD",48,0)
 ..;- Ordering stop code (based on imaging location)
"RTN","ECXRAD",49,0)
 ..S ECXORDST=$$GET1^DIQ(40.7,$$GET1^DIQ(79.1,$G(ECLOC),22,"I"),1)
"RTN","ECXRAD",50,0)
 ..;
"RTN","ECXRAD",51,0)
 ..;- Get ordering date using Imaging Order ptr to #75.1 in subfile 70.03
"RTN","ECXRAD",52,0)
 ..S ECXIEN=+$P($G(^RADPT(ECXDFN,"DT",ECXMDA,"P",1,0)),U,11)
"RTN","ECXRAD",53,0)
 ..S ECXORDDT=$$ECXDATE^ECXUTL($P($G(^RAO(75.1,ECXIEN,0)),U,16),ECXYM)
"RTN","ECXRAD",54,0)
 ..;
"RTN","ECXRAD",55,0)
 ..;******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXRAD",56,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXRAD",57,0)
 ..;- If no encounter number don't file record
"RTN","ECXRAD",58,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXMDT,ECXTS,ECXOBS,ECHEAD,ECTY,) Q:ECXENC=""
"RTN","ECXRAD",59,0)
 ..;procedures and modifiers for specific exam (case numbers)
"RTN","ECXRAD",60,0)
 ..;ward/clinic,service,provider,diagnostic code
"RTN","ECXRAD",61,0)
 ..S ECCN=0
"RTN","ECXRAD",62,0)
 ..F  S ECCN=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN)) Q:ECCN'>0  D
"RTN","ECXRAD",63,0)
 ...S ECCA=^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,0)
"RTN","ECXRAD",64,0)
 ...S (ECXESC,ECXECL)="" ;144
"RTN","ECXRAD",65,0)
 ...S VISIT=$P(ECCA,U,27) ;144
"RTN","ECXRAD",66,0)
 ...I VISIT D VISIT^ECXSCX1(ECXDFN,VISIT,.ECXVIST,.ECXERR) I 'ECXERR S ECXESC=$G(ECXVIST("ENCSC")),ECXECL=$G(ECXVIST("ENCCL")) ;144
"RTN","ECXRAD",67,0)
 ...S ECXCM=$P(ECCA,U,26) S ECXCM=$S("^0^1^2^3^"[("^"_ECXCM_"^"):ECXCM,1:"") ;136 - Get Credit Method and validate that it's a number between 0 and 3 otherwise set it to null
"RTN","ECXRAD",68,0)
 ...S ECXW=$P(ECCA,U,6),ECXW=$P($G(^DIC(42,+ECXW,44)),U)
"RTN","ECXRAD",69,0)
 ...S:ECXW="" ECXW=$P(ECCA,U,8)
"RTN","ECXRAD",70,0)
 ...S ECDOCNPI=$$NPI^XUSNPI("Individual_ID",$P(ECCA,U,14),ECDT)
"RTN","ECXRAD",71,0)
 ...S:+ECDOCNPI'>0 ECDOCNPI="" S ECDOCNPI=$P(ECDOCNPI,U)
"RTN","ECXRAD",72,0)
 ...S (ECXDSSD,ECXDSSP)=""
"RTN","ECXRAD",73,0)
 ...S ECS=$P(ECCA,U,7),ECDOC=ECPROF_$P(ECCA,U,14),ECDI=$P(ECCA,U,13),ECDOCPC=$$PRVCLASS^ECXUTL($P(ECCA,U,14),ECDT)
"RTN","ECXRAD",74,0)
 ...S ECPRO=$P(ECCA,U,2),ECSTAT=$P($G(^RA(72,+$P(ECCA,U,3),0)),U,3)
"RTN","ECXRAD",75,0)
 ...;get the primary interpreting staff and the person class DBIA #65
"RTN","ECXRAD",76,0)
 ...S ECXIS=$P(ECCA,U,15),ECXISPC=$$PRVCLASS^ECXUTL(ECXIS,ECDT)
"RTN","ECXRAD",77,0)
 ...S ECISNPI=$$NPI^XUSNPI("Individual_ID",ECXIS,ECDT)
"RTN","ECXRAD",78,0)
 ...S:+ECISNPI'>0 ECISNPI="" S ECISNPI=$P(ECISNPI,U)
"RTN","ECXRAD",79,0)
 ...;prefix interpreting radiologist with a "2" if not null
"RTN","ECXRAD",80,0)
 ...S ECXIS=$S(ECXIS:"2"_ECXIS,1:"")
"RTN","ECXRAD",81,0)
 ...;get the principal clinic ien DBIA #65
"RTN","ECXRAD",82,0)
 ...S ECXPRCL=$P(ECCA,U,8)
"RTN","ECXRAD",83,0)
 ...;get the clinic stop code from file #44
"RTN","ECXRAD",84,0)
 ...S ECXCSC=$$GET1^DIQ(40.7,$$GET1^DIQ(44,ECXPRCL,8,"I"),1)
"RTN","ECXRAD",85,0)
 ...Q:'ECPRO 
"RTN","ECXRAD",86,0)
 ...Q:+ECSTAT=0
"RTN","ECXRAD",87,0)
 ...;get CPT code & modifiers
"RTN","ECXRAD",88,0)
 ...S ECPT=+$P($G(^RAMIS(71,+ECPRO,0)),U,9),ECXCMOD=""
"RTN","ECXRAD",89,0)
 ...;quit if this is a 'parent' procedure
"RTN","ECXRAD",90,0)
 ...S TYPE=$P($G(^RAMIS(71,+ECPRO,0)),U,6)
"RTN","ECXRAD",91,0)
 ...Q:((ECPT=0)&(TYPE="P"))
"RTN","ECXRAD",92,0)
 ...;if site is using radiology with cpt modifiers then get them
"RTN","ECXRAD",93,0)
 ...K ARR,ERR D FIELD^DID(70.03,135,,"LABEL","ARR","ERR")
"RTN","ECXRAD",94,0)
 ...I $D(ARR("LABEL")) D
"RTN","ECXRAD",95,0)
 ....K ARR,ERR D FIELD^DID(70.03,135,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXRAD",96,0)
 ....Q:$D(ERR("DIERR"))
"RTN","ECXRAD",97,0)
 ....S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";") S ECMOD=0
"RTN","ECXRAD",98,0)
 ....Q:'$D(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB))
"RTN","ECXRAD",99,0)
 ....F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB,ECMOD)) Q:ECMOD'>0  S ECXCMOD=ECXCMOD_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",100,0)
 ...S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXRAD",101,0)
 ...;get procedure radiology modifiers
"RTN","ECXRAD",102,0)
 ...S ECMOD=0,ECMODS=""
"RTN","ECXRAD",103,0)
 ...F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,"M",ECMOD)) Q:ECMOD'>0  S ECMODS=ECMODS_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",104,0)
 ...S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV) ;p-46
"RTN","ECXRAD",105,0)
 ...D FILE
"RTN","ECXRAD",106,0)
 Q
"RTN","ECXRAD",107,0)
 ;
"RTN","ECXRAD",108,0)
FILE ;file record
"RTN","ECXRAD",109,0)
 ;node0
"RTN","ECXRAD",110,0)
 ;rad div^dfn^ssn^name^in/out (ECXA)^day^cpt code^procedure^img loc^ward^
"RTN","ECXRAD",111,0)
 ;ser^diag code^req physician^modifiers^mov #^treat spec^time^
"RTN","ECXRAD",112,0)
 ;imaging type^primary care team^primary care provider
"RTN","ECXRAD",113,0)
 ;node1
"RTN","ECXRAD",114,0)
 ;mpi^dss dept^placeholder^placeholder^pc prov person class^
"RTN","ECXRAD",115,0)
 ;assoc pc provider^assoc pc prov person class^placeholder^dom^
"RTN","ECXRAD",116,0)
 ;observ pat ind^encounter num^ord stop code^ord date^division^
"RTN","ECXRAD",117,0)
 ;dss product ECXDSSP^requesting provider person class ECDOCPC^interp-
"RTN","ECXRAD",118,0)
 ;reting radiologist ECXIS^interpreting radiologist pc ECXISPC^princi-
"RTN","ECXRAD",119,0)
 ;pal clinic ECXPRCL^clinc stop code ECXCSC^emergency response indicator
"RTN","ECXRAD",120,0)
 ;(FEMA) ECXERI^assoc pc provider npi^interpreting rad npi^pc provider npi^req physician npi^Patient Category (PATCAT) ECXPATCAT^Credit Method ECXCM
"RTN","ECXRAD",121,0)
 ;NODE2
"RTN","ECXRAD",122,0)
 ;Encounter SC ECXESC^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL
"RTN","ECXRAD",123,0)
 ;
"RTN","ECXRAD",124,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXRAD",125,0)
 N ECXDATA,ECXTSC
"RTN","ECXRAD",126,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXRAD",127,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXRAD",128,0)
 ;done
"RTN","ECXRAD",129,0)
 N DA,DIK
"RTN","ECXRAD",130,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXRAD",131,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXRAD",132,0)
 S ECODE=ECODE_ECXDAY_U_ECXCPT_U_ECPRO_U_ECLOC_U_ECXW_U_ECS_U_ECDI_U
"RTN","ECXRAD",133,0)
 S ECODE=ECODE_ECDOC_U_ECMODS_U_ECXMN_U_ECXTSC_U_ECTM_U_ECTY_U_ECPTTM_U
"RTN","ECXRAD",134,0)
 S ECODE=ECODE_ECPTPR_U
"RTN","ECXRAD",135,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_ECCLAS_U_ECASPR_U
"RTN","ECXRAD",136,0)
 S ECODE1=ECODE1_ECCLAS2_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXORDST_U
"RTN","ECXRAD",137,0)
 S ECODE1=ECODE1_ECXORDDT_U_ECXPDIV_U
"RTN","ECXRAD",138,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_ECXDSSP_U_ECDOCPC
"RTN","ECXRAD",139,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXIS_U_ECXISPC_U_ECXPRCL_U_ECXCSC
"RTN","ECXRAD",140,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI
"RTN","ECXRAD",141,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECASNPI_U_ECISNPI_U_ECPTNPI_U_ECDOCNPI
"RTN","ECXRAD",142,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT ;127 PATCAT
"RTN","ECXRAD",143,0)
 I ECXLOGIC>2012 S ECODE1=ECODE1_U_ECXCM_U ;136 Credit Method 144 End of node needs an ^
"RTN","ECXRAD",144,0)
 I ECXLOGIC>2013 S ECODE2=ECXESC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXRAD",145,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1 ;144
"RTN","ECXRAD",146,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXRAD",147,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXRAD",148,0)
 Q
"RTN","ECXRAD",149,0)
 ;
"RTN","ECXRAD",150,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXRAD",151,0)
 S ECHEAD="RAD"
"RTN","ECXRAD",152,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXRAD",153,0)
 Q
"RTN","ECXSCLD")
0^9^B220306894^B204371648
"RTN","ECXSCLD",1,0)
ECXSCLD ;BIR/DMA,CML-Enter, Print and Edit Entries in 728.44 ;8/14/13  11:44
"RTN","ECXSCLD",2,0)
 ;;3.0;DSS EXTRACTS;**2,8,24,30,71,80,105,112,120,126,132,136,142,144**;Dec 22, 1997;Build 9
"RTN","ECXSCLD",3,0)
EN ;entry point from option
"RTN","ECXSCLD",4,0)
 ;load entries
"RTN","ECXSCLD",5,0)
 N DIR,X,Y,DIRUT,DTOUT,DUOUT ;144
"RTN","ECXSCLD",6,0)
 W !!,"This option creates local entries in the DSS CLINIC AND STOP CODES"
"RTN","ECXSCLD",7,0)
 W !,"file (#728.44).",! ;144
"RTN","ECXSCLD",8,0)
 I '$D(^ECX(728.44)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",9,0)
 ;W !!,"It also compares file #728.44 to the HOSPITAL LOCATION file (#44) to see" ;144
"RTN","ECXSCLD",10,0)
 ;W !,"if there are any differences since the last time the file was reviewed." ;144
"RTN","ECXSCLD",11,0)
 ;W !!,"Any differences or new entries will cause an UNREVIEWED CLINICS report" ;144
"RTN","ECXSCLD",12,0)
 ;W !,"to automatically print.",! ;144
"RTN","ECXSCLD",13,0)
 ;D SELECT^ECXSCLD ;144
"RTN","ECXSCLD",14,0)
 ;144 does user hold key?
"RTN","ECXSCLD",15,0)
 I '$$KCHK^XUSRB("ECXMGR",$G(DUZ)) D  G ENDX ;144
"RTN","ECXSCLD",16,0)
 .W !!,?5,"You do not have approved access to this option.",!,"Exiting...",!! ;144
"RTN","ECXSCLD",17,0)
 .D PAUSE ;144
"RTN","ECXSCLD",18,0)
 W !,"The CREATE option last ran on ",$S($D(^ECX(728.44,"C")):$$FMTE^XLFDT($O(^ECX(728.44,"C"," "),-1),2),1:"- No date on file"),".",! ;144
"RTN","ECXSCLD",19,0)
 S DIR(0)="Y",DIR("A")="Do you want to run the CREATE option",DIR("B")="N" D ^DIR Q:Y'=1  ;144
"RTN","ECXSCLD",20,0)
 W !,"Running CREATE..." ;144
"RTN","ECXSCLD",21,0)
 D START ;144
"RTN","ECXSCLD",22,0)
 W !!,"The CREATE option has completed on ",$$FMTE^XLFDT($$NOW^XLFDT),".",! ;144
"RTN","ECXSCLD",23,0)
 S DIR(0)="Y",DIR("A")="Proceed to DSS Clinic and Stop Code Print menu",DIR("B")="NO" D ^DIR ;144
"RTN","ECXSCLD",24,0)
 D:Y PRINT ;144
"RTN","ECXSCLD",25,0)
 Q
"RTN","ECXSCLD",26,0)
START ; entry point
"RTN","ECXSCLD",27,0)
 N ZTREQ
"RTN","ECXSCLD",28,0)
 S EC=0 F  S EC=$O(^SC(EC)) Q:'EC  D FIX(EC)
"RTN","ECXSCLD",29,0)
 K DIK S DIK="^ECX(728.44,",DIK(1)=".01^B" D ENALL^DIK
"RTN","ECXSCLD",30,0)
 ;print 'unreviewed clinics' report
"RTN","ECXSCLD",31,0)
 ;S ECALL="U" D SPRINT^ECXSCLD ;144
"RTN","ECXSCLD",32,0)
 S ZTREQ="@"
"RTN","ECXSCLD",33,0)
 Q
"RTN","ECXSCLD",34,0)
 ;
"RTN","ECXSCLD",35,0)
FIX(EC) ;
"RTN","ECXSCLD",36,0)
 ; synchronize files #44 and #728.44.
"RTN","ECXSCLD",37,0)
 N DIE,DA,DR ;144
"RTN","ECXSCLD",38,0)
 ; differences are placed in ^XTMP("ECX UNREVIEWED CLINICS")
"RTN","ECXSCLD",39,0)
 S EC=$G(EC)
"RTN","ECXSCLD",40,0)
 I '$D(^SC(EC,0)) Q
"RTN","ECXSCLD",41,0)
 N ECD,DAT
"RTN","ECXSCLD",42,0)
 S ECD=^SC(EC,0),DAT=$G(^SC(EC,"I"))
"RTN","ECXSCLD",43,0)
 I $P(ECD,U,3)'="C" I '$D(^ECX(728.44,EC,0)) Q  ;144 Allow updates if entry already exists in 728.44 even if it's no longer a clinic
"RTN","ECXSCLD",44,0)
 ; get stop codes and default style for feeder key
"RTN","ECXSCLD",45,0)
 ; 1 if no credit stop code - 5 if credit stop code exists
"RTN","ECXSCLD",46,0)
 K ECD2,ECS2,ECDNEW,ECDDIF,ECSCSIGN I $D(^ECX(728.44,EC,0)) S (ECD2,ECDDIF)=^(0),ECSCSIGN=""
"RTN","ECXSCLD",47,0)
 I $D(ECD2) F ECS=2,3,4,5 D
"RTN","ECXSCLD",48,0)
 .S (ECS2(ECS),X)=$P(ECD2,U,ECS)
"RTN","ECXSCLD",49,0)
 .K DIC,Y S DIC=40.7,DIC(0)="MXZ" D ^DIC
"RTN","ECXSCLD",50,0)
 .I +$G(Y)>0 S $P(ECS2(ECS),U,2)=$P(^DIC(40.7,+Y,0),U,3)
"RTN","ECXSCLD",51,0)
 S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCLD",52,0)
 ;ECXINAC=0 - patch 142 removed variable, no longer used
"RTN","ECXSCLD",53,0)
 ;change in clinic inactivation for existing entry 
"RTN","ECXSCLD",54,0)
 I $D(ECD2) D
"RTN","ECXSCLD",55,0)
 .;don't include already old inactivated clinics in report
"RTN","ECXSCLD",56,0)
 .;patch 142-inactive clinic updates to show per Busn Owner
"RTN","ECXSCLD",57,0)
 .;I ID,ID'>DT I ('RD)!(RD>DT) I $P(ECD2,U,10)=ID S ECXINAC=1
"RTN","ECXSCLD",58,0)
 .I ID,ID'>DT I ('RD)!(RD>DT) I $P(ECD2,U,10)'=ID D
"RTN","ECXSCLD",59,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)=ID,ECSCSIGN="*"
"RTN","ECXSCLD",60,0)
 .I ID,RD,(RD'>DT) I $P(ECD2,U,10) D
"RTN","ECXSCLD",61,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)="",ECSCSIGN="r"
"RTN","ECXSCLD",62,0)
 .I ID,(ID>DT) I $P(ECD2,U,10) D
"RTN","ECXSCLD",63,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)="",ECSCSIGN="!"
"RTN","ECXSCLD",64,0)
 .I 'ID,$P(ECD2,U,10) D
"RTN","ECXSCLD",65,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)="",ECSCSIGN="!"
"RTN","ECXSCLD",66,0)
 .S ECDDIF=ECD2
"RTN","ECXSCLD",67,0)
 ;setup for stops
"RTN","ECXSCLD",68,0)
 F ECS=7,18 S ECP=+$P(ECD,U,ECS),ECS(ECS)=$P($G(^DIC(40.7,ECP,0)),U,2)_U_$P($G(^DIC(40.7,ECP,0)),U,3)
"RTN","ECXSCLD",69,0)
 S ECDF=$S($P(ECS(18),U)]"":5,1:1) S:$P(ECD,U,17)="Y" ECDF=6 S:$G(^SC(EC,"OOS")) ECDF=6
"RTN","ECXSCLD",70,0)
 S ECDB=EC_U_$S(+ECS(7):+ECS(7),1:"")_U_$S(+ECS(18):+ECS(18),1:"")
"RTN","ECXSCLD",71,0)
 ;new entry
"RTN","ECXSCLD",72,0)
 I '$D(ECD2) D
"RTN","ECXSCLD",73,0)
 .S $P(^ECX(728.44,EC,0),U,1,5)=ECDB_U_$S(+ECS(7):+ECS(7),1:"")_U_$S(+ECS(18):+ECS(18),1:"")
"RTN","ECXSCLD",74,0)
 .S $P(^(0),U,6)=ECDF,$P(^(0),U,12)=$P(ECD,U,17)
"RTN","ECXSCLD",75,0)
 .S ECDNEW=^ECX(728.44,EC,0)
"RTN","ECXSCLD",76,0)
 ;changes to existing entry
"RTN","ECXSCLD",77,0)
 I $D(ECD2) D
"RTN","ECXSCLD",78,0)
 .S $P(ECD2,U,1,3)=ECDB,$P(ECDDIF,U,1,3)=ECDB
"RTN","ECXSCLD",79,0)
 .;differs in stop code
"RTN","ECXSCLD",80,0)
 .I +ECS(7)'=+ECS2(2) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,2)_"!",$P(ECDDIF,U,2)=X
"RTN","ECXSCLD",81,0)
 .;differs in credit stop code
"RTN","ECXSCLD",82,0)
 .I +ECS(18)'=+ECS2(3) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,3)_"!",$P(ECDDIF,U,3)=X
"RTN","ECXSCLD",83,0)
 .;stop code inactive
"RTN","ECXSCLD",84,0)
 .;I $P(ECS(7),U,2) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,2)_"*",$P(ECDDIF,U,2)=X
"RTN","ECXSCLD",85,0)
 .;credit stop code inactive
"RTN","ECXSCLD",86,0)
 .;I $P(ECS(18),U,2) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,3)_"*",$P(ECDDIF,U,3)=X
"RTN","ECXSCLD",87,0)
 .;dss stop code inactive
"RTN","ECXSCLD",88,0)
 .;I $P(ECS2(4),U,2) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,4)_"*",$P(ECDDIF,U,4)=X
"RTN","ECXSCLD",89,0)
 .;dss credit stop code inactive
"RTN","ECXSCLD",90,0)
 .;I $P(ECS2(5),U,2) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,5)_"*",$P(ECDDIF,U,5)=X
"RTN","ECXSCLD",91,0)
 .;change in non-count
"RTN","ECXSCLD",92,0)
 .I $P(ECD2,U,12)'=$P(ECD,U,17) S X=$P(ECD,U,17)_"!",$P(ECDDIF,U,12)=X,$P(ECD2,U,12)=$P(ECD,U,17),$P(ECD2,U,7)=""
"RTN","ECXSCLD",93,0)
 .;reset entry
"RTN","ECXSCLD",94,0)
 .S ^ECX(728.44,EC,0)=ECD2
"RTN","ECXSCLD",95,0)
 ;set tmp node
"RTN","ECXSCLD",96,0)
 S ECSC=$P(ECD,U) S:$L(ECSC)>27 ECSC=$E(ECSC,1,27)
"RTN","ECXSCLD",97,0)
 I $D(ECD2),$P(ECD2,U,7)="" D
"RTN","ECXSCLD",98,0)
 .;I ECXINAC,ECDDIF'["!" Q-patch 142 removed no longer being used
"RTN","ECXSCLD",99,0)
 .I $D(^XTMP("ECX UNREVIEWED CLINICS",ECSC)) D UPDATE(ECSC,ECDDIF,ECSCSIGN)
"RTN","ECXSCLD",100,0)
 .I '$D(^XTMP("ECX UNREVIEWED CLINICS",ECSC)) S ^XTMP("ECX UNREVIEWED CLINICS",ECSC)=ECSCSIGN_U_$P(ECDDIF,U,2,200),^XTMP("ECX UNREVIEWED CLINICS",ECSC,"T")=$$NOW^XLFDT()
"RTN","ECXSCLD",101,0)
 I $D(ECDNEW) S ^XTMP("ECX UNREVIEWED CLINICS",ECSC)=""_U_$P(ECDNEW,U,2,200),^XTMP("ECX UNREVIEWED CLINICS",ECSC,"T")=$$NOW^XLFDT()
"RTN","ECXSCLD",102,0)
 S DIE=728.44,DA=EC,DR="12///TODAY" D ^DIE ;144 Set create date to today's date
"RTN","ECXSCLD",103,0)
 Q
"RTN","ECXSCLD",104,0)
 ;
"RTN","ECXSCLD",105,0)
UPDATE(ECSC,ECDDIF,ECSCSIGN) ;update ^xtmp node with today's changes
"RTN","ECXSCLD",106,0)
 N ECXOLD,J,L1,L2,X,X1,X2
"RTN","ECXSCLD",107,0)
 S ECXOLD=^XTMP("ECX UNREVIEWED CLINICS",ECSC)
"RTN","ECXSCLD",108,0)
 F J=2,3 S X1=+$P(ECXOLD,U,J),X2=+$P(ECDDIF,U,J) I X2=X1,$P(ECDDIF,U,J)'=$P(ECXOLD,U,J) D
"RTN","ECXSCLD",109,0)
 .S L1=$L($P(ECXOLD,U,J)),L2=$L($P(ECDDIF,U,J))
"RTN","ECXSCLD",110,0)
 .I L1>L2 S $P(ECDDIF,U,J)=$P(ECXOLD,U,J)
"RTN","ECXSCLD",111,0)
 S X1=$E($P(ECXOLD,U,12),1),X2=$E($P(ECDDIF,U,12),1) I X2=X1 S $P(ECDDIF,U,12)=$P(ECXOLD,U,12)
"RTN","ECXSCLD",112,0)
 S X1=$P(ECXOLD,U),X=X1_U_$P(ECDDIF,U,2,200)
"RTN","ECXSCLD",113,0)
 I ECSCSIGN'="",ECSCSIGN'=X1 S X=ECSCSIGN_U_$P(ECDDIF,U,2,200)
"RTN","ECXSCLD",114,0)
 S ^XTMP("ECX UNREVIEWED CLINICS",ECSC)=X
"RTN","ECXSCLD",115,0)
 Q
"RTN","ECXSCLD",116,0)
 ;
"RTN","ECXSCLD",117,0)
SELECT ;select IO device to 'gather clinic stop codes' and print 'unreviewd clinics' report;
"RTN","ECXSCLD",118,0)
 ;for menu option 'Create DSS Clinic Stop Code File' or 'Clinics and DSS Stop Codes Print'
"RTN","ECXSCLD",119,0)
 N DIR,ECALL,IOP,POP,XX,ZTIO,ZTRTN,ZTDESC,ZTSK,ZTSAVE
"RTN","ECXSCLD",120,0)
 ;does user hold key?
"RTN","ECXSCLD",121,0)
 I '$$KCHK^XUSRB("ECXMGR",$G(DUZ)) D  G ENDX
"RTN","ECXSCLD",122,0)
 .W !!,?5,"You do not have approved access to this option.",!,"Exiting...",!!
"RTN","ECXSCLD",123,0)
 .D PAUSE
"RTN","ECXSCLD",124,0)
 W !,"Please select a print device for the 'Unreviewed Clinics' report."
"RTN","ECXSCLD",125,0)
 W !,"**Please note: If printing in foreground, synching files may cause screen delay."
"RTN","ECXSCLD",126,0)
 W ! S %ZIS="Q" D ^%ZIS
"RTN","ECXSCLD",127,0)
 I POP Q
"RTN","ECXSCLD",128,0)
 ;I IO=IO(0) W !,"You must queue to a print device.",! D HOME^%ZIS G SELECT
"RTN","ECXSCLD",129,0)
 ;queue the report
"RTN","ECXSCLD",130,0)
 I $D(IO("Q")) D  Q
"RTN","ECXSCLD",131,0)
 . K ZTSAVE S ZTDESC="Gather Clinic Stop Codes for DSS",ZTRTN="START^ECXSCLD"
"RTN","ECXSCLD",132,0)
 . D ^%ZTLOAD
"RTN","ECXSCLD",133,0)
 . I $G(ZTSK) W !,"Queued as Task #: "_ZTSK D ENDX D PAUSE
"RTN","ECXSCLD",134,0)
 W !!,">> Synchronizing Stop Codes file (#728.44) with the Hospital"
"RTN","ECXSCLD",135,0)
 W !,"   Location file (#44)...",!
"RTN","ECXSCLD",136,0)
 D START
"RTN","ECXSCLD",137,0)
 D ^%ZISC,HOME^%ZIS K IO("Q")
"RTN","ECXSCLD",138,0)
 Q
"RTN","ECXSCLD",139,0)
 ;
"RTN","ECXSCLD",140,0)
PRINT ; print worksheet for updates
"RTN","ECXSCLD",141,0)
 N OUT,DIR,ECALL
"RTN","ECXSCLD",142,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",143,0)
 W !!,"This option produces a worksheet of (A) All Clinics, (C) Active, (I) Inactive, "
"RTN","ECXSCLD",144,0)
 W !,"or only the (U) Unreviewed Clinics that are awaiting approval."
"RTN","ECXSCLD",145,0)
 W !!,"Clinics that were defined as ""inactive"" by MAS the last time the option"
"RTN","ECXSCLD",146,0)
 W !,"""Create DSS Clinic Stop Code File"" was run will be indicated with an ""*""."
"RTN","ECXSCLD",147,0)
 W !!,"Choose (X) for exporting the CLINICS AND STOP CODES FILE to a text file for"
"RTN","ECXSCLD",148,0)
 W !,"spreadsheet use.",!
"RTN","ECXSCLD",149,0)
 W !,"**REMINDER - The CREATE option last ran on ",$S($D(^ECX(728.44,"C")):$$FMTE^XLFDT($O(^ECX(728.44,"C"," "),-1),2),1:"- No date on file"),"." ;144
"RTN","ECXSCLD",150,0)
 W !,"If the most recent clinic changes from the HOSPITAL LOCATION file #44",!,"are desired, run the CREATE option before running a report.**",! ;144
"RTN","ECXSCLD",151,0)
 S DIR(0)="S^A:ALL CLINICS;C:ALL ACTIVE CLINICS;I:ALL INACTIVE CLINICS;U:UNREVIEWED CLINICS;X:EXPORT TO TEXT FILE FOR SPREADSHEET USE",DIR("A")="Enter ""A"", ""C"", ""I"", ""U"", or ""X"""
"RTN","ECXSCLD",152,0)
 S DIR("?",1)="Enter: ""C"" to print a worksheet of all active DSS Clinic Stops,"
"RTN","ECXSCLD",153,0)
 S DIR("?",2)="Enter: ""I"" to print a worksheet of all inactive DSS Clinic  Stops,"
"RTN","ECXSCLD",154,0)
 S DIR("?",3)="Enter: ""A"" to print a worksheet of all DSS Clinic  Stops,"
"RTN","ECXSCLD",155,0)
 S DIR("?",4)="Enter: ""U"" to print only the Clinic Stops that have not been approved."
"RTN","ECXSCLD",156,0)
 S DIR("?")="Enter: ""X"" to export CLINICS AND STOP CODES FILE to a text file."
"RTN","ECXSCLD",157,0)
 D ^DIR K DIR G ENDX:$D(DIRUT) S ECALL=$E(Y)
"RTN","ECXSCLD",158,0)
 I ECALL="X" D EXPORT^ECXSCLD1 Q
"RTN","ECXSCLD",159,0)
 ;sync #728.44 with #44 before printing 'unreviewed'
"RTN","ECXSCLD",160,0)
 ;I ECALL="U" D  Q  ;144
"RTN","ECXSCLD",161,0)
 ;.W !!,?5,"Before the UNREVIEWED CLINICS report prints, the Clinics and" ;144
"RTN","ECXSCLD",162,0)
 ;.W !,?5,"Stop Codes file (#728.44) will be synchronized with the Hospital" ;144
"RTN","ECXSCLD",163,0)
 ;.W !,?5,"Location file (#44).",!! ;144
"RTN","ECXSCLD",164,0)
 ;.K DIR S DIR(0)="YA",DIR("A")="Do you wish to continue? (Y/N)// " D ^DIR ;144
"RTN","ECXSCLD",165,0)
 ;.I ('$G(Y)!$G(DIRUT)!$G(DUOUT)!$G(DTOUT)) Q  ;144
"RTN","ECXSCLD",166,0)
 ;.D SELECT^ECXSCLD ;144
"RTN","ECXSCLD",167,0)
 S %ZIS="Q" D ^%ZIS Q:POP
"RTN","ECXSCLD",168,0)
 I $D(IO("Q")) K ZTSAVE S ZTDESC="DSS clinic stop code work sheet",ZTRTN="SPRINT^ECXSCLD",ZTSAVE("ECALL")="" D ^%ZTLOAD,HOME^%ZIS Q
"RTN","ECXSCLD",169,0)
SPRINT ; queued entry to print work sheet
"RTN","ECXSCLD",170,0)
 U IO
"RTN","ECXSCLD",171,0)
 S QFLG=0,$P(LN,"-",80)="",PG=0
"RTN","ECXSCLD",172,0)
 S ECDATE=$O(^ECX(728.44,"A1","")) I ECDATE S ECDATE=-ECDATE,ECDATE=$$FMTE^XLFDT(ECDATE,"5DF"),ECDATE=$TR(ECDATE," ","0")
"RTN","ECXSCLD",173,0)
 ;I ECALL'="U" K ^TMP("EC",$J) 144
"RTN","ECXSCLD",174,0)
 K ^TMP("EC",$J) ;144
"RTN","ECXSCLD",175,0)
 F J=0:0 S J=$O(^ECX(728.44,J)) Q:'J  I $D(^ECX(728.44,J,0)) S ECSD=^ECX(728.44,J,0) D
"RTN","ECXSCLD",176,0)
 .I $P($G(^SC(J,0)),U,3)'="C" Q  ;144 Don't include entries that aren't clinic types
"RTN","ECXSCLD",177,0)
 .I ECALL="A" I $D(^SC(J,0)) S ECSC=$P(^SC(J,0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",178,0)
 .I (ECALL="I"),($P(ECSD,U,10)) I $D(^SC(J,0)) S ECSC=$P(^SC(J,0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",179,0)
 .I ((ECALL="C")&($P(ECSD,U,10)=""))!((ECALL="C")&($P(ECSD,U,10)>DT)) I $D(^SC(J,0)) S ECSC=$P(^(0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",180,0)
 .I ECALL="U" I $P(ECSD,U,7)="" I $D(^SC(J,0)) S ECSC=$P(^SC(J,0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200) ;144
"RTN","ECXSCLD",181,0)
 ;I ECALL'="U" D  ;144
"RTN","ECXSCLD",182,0)
 D HEAD S ECSC="" I $O(^TMP("EC",$J,ECSC))="" W !!,"NO DATA FOUND FOR WORKSHEET.",! Q  ;144
"RTN","ECXSCLD",183,0)
 F J=1:1 S ECSC=$O(^TMP("EC",$J,ECSC)) Q:ECSC=""  S ECD=^TMP("EC",$J,ECSC) D SHOWEM Q:QFLG  ;144
"RTN","ECXSCLD",184,0)
 K ^TMP("EC",$J) ;144
"RTN","ECXSCLD",185,0)
 ;I ECALL="U" D  ;144
"RTN","ECXSCLD",186,0)
 ;.N ECSCSIGN ;144
"RTN","ECXSCLD",187,0)
 ;.D HEAD S ECSC=0 I $O(^XTMP("ECX UNREVIEWED CLINICS",ECSC))="" W !!,"NO DATA FOUND FOR WORKSHEET.",! Q  ;144
"RTN","ECXSCLD",188,0)
 ;.F  S ECSC=$O(^XTMP("ECX UNREVIEWED CLINICS",ECSC)) Q:ECSC=""  Q:QFLG  D  ;144
"RTN","ECXSCLD",189,0)
 ;..S ECSCSIGN=$P(^XTMP("ECX UNREVIEWED CLINICS",ECSC),U),ECD=$P(^XTMP("ECX UNREVIEWED CLINICS",ECSC),U,2,99) ;144
"RTN","ECXSCLD",190,0)
 ;..D SHOWEM ;144
"RTN","ECXSCLD",191,0)
 I $E(IOST)="C",'QFLG D SS D ENDX
"RTN","ECXSCLD",192,0)
 W:$Y @IOF D ^%ZISC S ZTREQ="@"
"RTN","ECXSCLD",193,0)
 Q
"RTN","ECXSCLD",194,0)
HEAD ; header for worksheet
"RTN","ECXSCLD",195,0)
 D:PG SS Q:QFLG
"RTN","ECXSCLD",196,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"WORKSHEET FOR DSS CLINIC STOPS",?71,"Page: ",PG
"RTN","ECXSCLD",197,0)
 I ECDATE]"" W !,"(last approved on ",ECDATE,")",?59,"Print Date:",$TR($$FMTE^XLFDT(DT,"2F")," ",0) ;144
"RTN","ECXSCLD",198,0)
 I ECDATE="" W !,"(NEVER APPROVED)",?59,"Print Date:",$TR($$FMTE^XLFDT(DT,"2F")," ",0) ;144
"RTN","ECXSCLD",199,0)
 W !
"RTN","ECXSCLD",200,0)
 W !,?1,"CLINIC",?28,"STOP",?35,"CREDIT",?44,"DSS",?50,"DSS",?59,"ACTION",?68,"NAT'L",?74,"C/N"
"RTN","ECXSCLD",201,0)
 W !,?28,"CODE",?35,"STOP",?44,"STOP",?50,"CREDIT",?68,"CODE"
"RTN","ECXSCLD",202,0)
 W !,"( * - currently inactive)" W ?35,"CODE",?44,"CODE",?50,"CODE" ;144
"RTN","ECXSCLD",203,0)
 ;I ECALL="U" W !,?8,"* - inactive     r - reactivated    ! - updated since last review" ;144
"RTN","ECXSCLD",204,0)
 W !,LN
"RTN","ECXSCLD",205,0)
 Q
"RTN","ECXSCLD",206,0)
 ;
"RTN","ECXSCLD",207,0)
SHOWEM ; list clinics for worksheet
"RTN","ECXSCLD",208,0)
 I $Y+6>IOSL D HEAD Q:QFLG
"RTN","ECXSCLD",209,0)
 N ECNON1P
"RTN","ECXSCLD",210,0)
 S ECNON=$P(ECD,U,11),ECNON1P=$E(ECNON,1)
"RTN","ECXSCLD",211,0)
 S ECNON1P=$S(ECNON1P="Y":"N",1:"C") ;if 'yes', then, 'n'on count clinic
"RTN","ECXSCLD",212,0)
 S ECNON=ECNON1P_$E(ECNON,2,99)
"RTN","ECXSCLD",213,0)
 W !!,$E(ECSC,1,25)
"RTN","ECXSCLD",214,0)
 ;I ECALL="U" S:ECD["!" ECSCSIGN=ECSCSIGN_"!" W ECSCSIGN ;144
"RTN","ECXSCLD",215,0)
 W:$P(ECD,U,9)]"" "*" ;144
"RTN","ECXSCLD",216,0)
 F J=1:1:5 W ?$P("28,35,44,50,62",",",J),$S($P(ECD,U,J):$P(ECD,U,J),J<3:"",1:"_____")
"RTN","ECXSCLD",217,0)
 S ECN=$P($G(^ECX(728.441,+$P(ECD,U,7),0)),U) W ?68,$S(ECN]"":ECN,1:"____"),?75,ECNON
"RTN","ECXSCLD",218,0)
 Q
"RTN","ECXSCLD",219,0)
SS ;SCROLL STOPS
"RTN","ECXSCLD",220,0)
 N JJ,SS
"RTN","ECXSCLD",221,0)
 W !,LN
"RTN","ECXSCLD",222,0)
 ;W !,"Key: + - new clinic; ! - updated since last review; * - currently inactiv
"RTN","ECXSCLD",223,0)
 I $E(IOST)="C" S SS=21-$Y F JJ=1:1:SS W !
"RTN","ECXSCLD",224,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXSCLD",225,0)
 Q
"RTN","ECXSCLD",226,0)
 ;
"RTN","ECXSCLD",227,0)
EDIT ; put in DSS stopcodes and which one to send
"RTN","ECXSCLD",228,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",229,0)
 ;patch 142-added for loop to allow for new clinic prompt
"RTN","ECXSCLD",230,0)
 F  W ! K DIC S DIC=728.44,DIC(0)="QEAMZ" D ^DIC Q:Y<0  D
"RTN","ECXSCLD",231,0)
 .S CLIEN1=+Y
"RTN","ECXSCLD",232,0)
 .W !!,"EXISTING CLINIC FILE DATA:",?35,"EXISTING DSS CLINIC FILE DATA:"
"RTN","ECXSCLD",233,0)
 .W !!,"STOP CODE :       ",$P(Y(0),U,2),?35,"DSS STOP CODE :   ",$P(Y(0),U,4)
"RTN","ECXSCLD",234,0)
 .W !,"CREDIT STOP CODE :",$P(Y(0),U,3),?35,"DSS CREDIT STOP CODE :",$P(Y(0),U,5)
"RTN","ECXSCLD",235,0)
 .W !
"RTN","ECXSCLD",236,0)
 .D EDIT1
"RTN","ECXSCLD",237,0)
 D ENDX
"RTN","ECXSCLD",238,0)
 Q
"RTN","ECXSCLD",239,0)
EDIT1 ;check input & update field #3; allow '@' deletion; allow bypass empty with no entry
"RTN","ECXSCLD",240,0)
 N DIR ;136
"RTN","ECXSCLD",241,0)
 S OUT=0 F  D  Q:OUT
"RTN","ECXSCLD",242,0)
 .K DIC,DIR,ECXMSG,FDA,AMIS,X,Y
"RTN","ECXSCLD",243,0)
 .S STOP=$P(^ECX(728.44,CLIEN1,0),U,4)
"RTN","ECXSCLD",244,0)
 .S DIR(0)="FO^1:99",DIR("A")="DSS STOP CODE (3-digit code only)" I STOP]"" S DIR("B")=STOP
"RTN","ECXSCLD",245,0)
 .S DIR("?")="^S DIC=40.7,DIC(0)=""EMQZ"" D ^DIC"
"RTN","ECXSCLD",246,0)
 .D ^DIR
"RTN","ECXSCLD",247,0)
 .I X="@" D  Q
"RTN","ECXSCLD",248,0)
 ..S IENS=CLIEN1_",",FDA(728.44,IENS,3)=X D FILE^DIE("","FDA")
"RTN","ECXSCLD",249,0)
 ..S OUT=1 W "   deleted..."
"RTN","ECXSCLD",250,0)
 .I X="" S X=STOP K DIRUT S OUT=2 Q
"RTN","ECXSCLD",251,0)
 .S DIC("A")="DSS STOP CODE (3-digit code only): "
"RTN","ECXSCLD",252,0)
 .S DIC="^DIC(40.7,",DIC(0)="EMQZ"
"RTN","ECXSCLD",253,0)
 .S DIC("S")="I $P(^(0),U,3)=""""" D ^DIC
"RTN","ECXSCLD",254,0)
 .I X="@" D  Q
"RTN","ECXSCLD",255,0)
 ..S IENS=CLIEN1_",",FDA(728.44,IENS,3)=X D FILE^DIE("","FDA")
"RTN","ECXSCLD",256,0)
 ..S OUT=2 W "   deleted..."
"RTN","ECXSCLD",257,0)
 .I X="" K DIRUT S OUT=2 Q
"RTN","ECXSCLD",258,0)
 .I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) S OUT=3 Q
"RTN","ECXSCLD",259,0)
 .I +X'=X W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD",260,0)
 .I +Y'>0  Q
"RTN","ECXSCLD",261,0)
 .S AMIS=$P(^DIC(40.7,+Y,0),"^",2)
"RTN","ECXSCLD",262,0)
 .S CODE=+Y,ECXMSG=$$ERRCHK(CODE,3,CLIEN1)
"RTN","ECXSCLD",263,0)
 .I ECXMSG=-1 W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD",264,0)
 .I $G(ECXMSG)]"" W !,?5,ECXMSG,! Q
"RTN","ECXSCLD",265,0)
 .S IENS=CLIEN1_",",FDA(728.44,IENS,3)=AMIS D FILE^DIE("U","FDA")
"RTN","ECXSCLD",266,0)
 .S OUT=1
"RTN","ECXSCLD",267,0)
 I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) G ENDX
"RTN","ECXSCLD",268,0)
 ;check input & update field #4; allow '@' deletion; allow bypass empty with no entry
"RTN","ECXSCLD",269,0)
 S OUT=0 F  D  G:OUT=1 ENDCHK
"RTN","ECXSCLD",270,0)
 .K DIC,DIR,ECXMSG,FDA,AMIS,X,Y
"RTN","ECXSCLD",271,0)
 .S CSTOP=$P(^ECX(728.44,CLIEN1,0),U,5)
"RTN","ECXSCLD",272,0)
 .S DIR(0)="FO^1:99",DIR("A")="DSS CREDIT STOP CODE (3-digit code only)" I CSTOP]"" S DIR("B")=CSTOP
"RTN","ECXSCLD",273,0)
 .S DIR("?")="^S DIC=40.7,DIC(0)=""EMQZ"" D ^DIC"
"RTN","ECXSCLD",274,0)
 .D ^DIR
"RTN","ECXSCLD",275,0)
 .I X="@" D  Q
"RTN","ECXSCLD",276,0)
 ..S IENS=CLIEN1_",",FDA(728.44,IENS,4)=X D FILE^DIE("","FDA")
"RTN","ECXSCLD",277,0)
 ..S OUT=1 W "   deleted..."
"RTN","ECXSCLD",278,0)
 .I X="" S X=CSTOP K DIRUT S OUT=1 Q
"RTN","ECXSCLD",279,0)
 .S DIC("A")="DSS CREDIT STOP CODE (3-digit code only): "
"RTN","ECXSCLD",280,0)
 .S DIC("S")="I $P(^(0),U,3)=""""" D ^DIC
"RTN","ECXSCLD",281,0)
 .S DIC=40.7,DIC(0)="EMQZ" D ^DIC
"RTN","ECXSCLD",282,0)
 .I X="" K DIRUT S OUT=1 Q
"RTN","ECXSCLD",283,0)
 .I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) S OUT=1 Q
"RTN","ECXSCLD",284,0)
 .I +X'=X W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD",285,0)
 .I +Y'>0  Q
"RTN","ECXSCLD",286,0)
 .S AMIS=$P(^DIC(40.7,+Y,0),"^",2)
"RTN","ECXSCLD",287,0)
 .S CODE=+Y,ECXMSG=$$ERRCHK(CODE,4,CLIEN1)
"RTN","ECXSCLD",288,0)
 .I ECXMSG=-1 W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD",289,0)
 .I $G(ECXMSG)]"" W !,?5,ECXMSG,! Q
"RTN","ECXSCLD",290,0)
 .S IENS=CLIEN1_",",FDA(728.44,IENS,4)=AMIS D FILE^DIE("U","FDA")
"RTN","ECXSCLD",291,0)
 .S OUT=1
"RTN","ECXSCLD",292,0)
 I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) G ENDX
"RTN","ECXSCLD",293,0)
 K I,WARNING,DIC,DIE,DA,DR,DIR,DIRUT,DTOUT,DUOUT,X,Y,ERRCHK
"RTN","ECXSCLD",294,0)
 K CLIEN1,CODE,ECXMSG,IENS,STOP,CSTOP,AMIS,FDA,OUT,ERR,WRN,ECXERR
"RTN","ECXSCLD",295,0)
 Q
"RTN","ECXSCLD",296,0)
ENDCHK ;check validity of clinic
"RTN","ECXSCLD",297,0)
 S CODE=$P(^ECX(728.44,CLIEN1,0),U,4)
"RTN","ECXSCLD",298,0)
 K ERR,WRN,ECXERR,WARNING,ERRCHK
"RTN","ECXSCLD",299,0)
 S ERRCHK=0
"RTN","ECXSCLD",300,0)
 D STOP^ECXSTOP(CODE,"DSS Stop Code",CLIEN1) D ERRPRNT
"RTN","ECXSCLD",301,0)
 I $D(ECXERR) S ERRCHK=1
"RTN","ECXSCLD",302,0)
 K ERR,WRN,ECXERR,WARNING
"RTN","ECXSCLD",303,0)
 S CODE=$P(^ECX(728.44,CLIEN1,0),U,5)
"RTN","ECXSCLD",304,0)
 D STOP^ECXSTOP(CODE,"Credit Stop Code",CLIEN1) D ERRPRNT
"RTN","ECXSCLD",305,0)
 I $D(ECXERR) S ERRCHK=1
"RTN","ECXSCLD",306,0)
 W !!,"...Validity Checker Complete."
"RTN","ECXSCLD",307,0)
 I ERRCHK=1 W !!,"...Errors found please fix." G EDIT1
"RTN","ECXSCLD",308,0)
 ;remaining fields
"RTN","ECXSCLD",309,0)
 S DIE=728.44,DA=+CLIEN1
"RTN","ECXSCLD",310,0)
 S DR="5//1;S:X'=4 Y=6;7;6///"_DT_";8;10" D ^DIE ;136
"RTN","ECXSCLD",311,0)
 S:$P(^ECX(728.44,DA,0),U,6)'=4 $P(^(0),U,8)="" S $P(^(0),U,7)=""
"RTN","ECXSCLD",312,0)
 Q
"RTN","ECXSCLD",313,0)
ERRPRNT ;print errors
"RTN","ECXSCLD",314,0)
 I $G(ERR)>0,$D(ECXERR) D
"RTN","ECXSCLD",315,0)
 . W ! S I=0 F  S I=$O(ECXERR(I)) Q:'I  D
"RTN","ECXSCLD",316,0)
 . . W !,"..",ECXERR(I)
"RTN","ECXSCLD",317,0)
 I $G(WRN)>0,$D(WARNING) D
"RTN","ECXSCLD",318,0)
 . W ! S I=0 F  S I=$O(WARNING(I)) Q:'I  D
"RTN","ECXSCLD",319,0)
 . . W !,"..",WARNING(I)
"RTN","ECXSCLD",320,0)
 Q
"RTN","ECXSCLD",321,0)
KILL ;
"RTN","ECXSCLD",322,0)
 K I,WARNING,DIC,DIE,DA,DR,DIR,DIRUT,DTOUT,DUOUT,X,Y,ERRCHK
"RTN","ECXSCLD",323,0)
 K CLIEN1,CODE,ECXMSG,IENS,STOP,CSTOP,AMIS,FDA,OUT,ERR,WRN,ECXERR
"RTN","ECXSCLD",324,0)
 G EDIT
"RTN","ECXSCLD",325,0)
 ;
"RTN","ECXSCLD",326,0)
ERRCHK(CODE,TYPE,CLIEN1) ;check for problems
"RTN","ECXSCLD",327,0)
 ;input
"RTN","ECXSCLD",328,0)
 ;   code: stop code IEN in #40.7
"RTN","ECXSCLD",329,0)
 ;   type: type (3=dss stop code, 4=dss credit stop code)
"RTN","ECXSCLD",330,0)
 ;  clien: clinic IEN in #728.44
"RTN","ECXSCLD",331,0)
 ;output
"RTN","ECXSCLD",332,0)
 ;  ecxerr: error msg
"RTN","ECXSCLD",333,0)
 N XCODE,INACT,RTYPE,ERR,WRN
"RTN","ECXSCLD",334,0)
 K ECXERR,WARNING
"RTN","ECXSCLD",335,0)
 S ECXERR="",WARNING="",ERR=0
"RTN","ECXSCLD",336,0)
 Q:'$G(CODE) -1 Q:'$G(CLIEN1) -1
"RTN","ECXSCLD",337,0)
 Q:(TYPE="") -1 Q:((TYPE<3)&(TYPE>4)) -1
"RTN","ECXSCLD",338,0)
 S XCODE=$P(^DIC(40.7,CODE,0),"^",2)
"RTN","ECXSCLD",339,0)
 S TYPE=$S(TYPE=3:"DSS Stop Code",1:"DSS Credit Stop Code")
"RTN","ECXSCLD",340,0)
 I TYPE="DSS Stop Code" D STOP^ECXSTOP(XCODE,TYPE,,,CODE)
"RTN","ECXSCLD",341,0)
 I TYPE="DSS Credit Stop Code" D STOP^ECXSTOP(XCODE,TYPE,CLIEN1,,CODE)
"RTN","ECXSCLD",342,0)
 I $G(ERR)>0,$D(ECXERR(1)) S ERR=$O(ECXERR(0)),ECXERR=ECXERR(ERR) Q ECXERR
"RTN","ECXSCLD",343,0)
 E  S ECXERR="" Q ECXERR
"RTN","ECXSCLD",344,0)
 Q ECXERR
"RTN","ECXSCLD",345,0)
 ;
"RTN","ECXSCLD",346,0)
APPROVE ; approve current DSS Stop and Credit Stop codes
"RTN","ECXSCLD",347,0)
 W !!,"This option allows you to mark the current clinic entries in the CLINICS AND",!,"STOP CODES file (#728.44) as ""reviewed"".  Those entries will then be omitted"
"RTN","ECXSCLD",348,0)
 W !,"from the list printed from the ""Clinic and DSS Stop Codes Print"" when you",!,"choose to print only ""unreviewed"" clinics.",!
"RTN","ECXSCLD",349,0)
 K DIR S DIR(0)="Y",DIR("A",1)="Are you ready to approve the reviewed information provided by the",DIR("A")="""Clinic and DSS Stop Codes Print""",DIR("B")="NO"
"RTN","ECXSCLD",350,0)
 S DIR("?",1)="   Enter:"
"RTN","ECXSCLD",351,0)
 S DIR("?",2)="     ""YES"" if you concur with the ""Clinic and DSS Stop Codes Print"","
"RTN","ECXSCLD",352,0)
 S DIR("?",3)="     ""NO"" or <RET> if you do not want to approve the current information,"
"RTN","ECXSCLD",353,0)
 S DIR("?")="     ""^"" to exit option."
"RTN","ECXSCLD",354,0)
 D ^DIR K DIR I 'Y!($D(DIRUT)) G ENDX
"RTN","ECXSCLD",355,0)
 W ! S ZTRTN="APPLOOP^ECXSCLD",ZTIO="",ZTDESC="Approve DSS stop codes for clinic extract" D ^%ZTLOAD W !!,"...approval queued" G ENDX
"RTN","ECXSCLD",356,0)
 ;
"RTN","ECXSCLD",357,0)
APPLOOP ; queued entry to approve action codes
"RTN","ECXSCLD",358,0)
 F EC=0:0 S EC=$O(^ECX(728.44,EC)) Q:'EC  I $D(^ECX(728.44,EC,0)) S DA=EC,DIE="^ECX(728.44,",DR="6///"_DT D ^DIE
"RTN","ECXSCLD",359,0)
 S ZTREQ="@"
"RTN","ECXSCLD",360,0)
 K ^XTMP("ECX UNREVIEWED CLINICS") S ^XTMP("ECX UNREVIEWED CLINICS",0)=$$FMADD^XLFDT(DT,180)_U_DT_U_"ECX UNREVIEWED CLINICS"
"RTN","ECXSCLD",361,0)
ENDX K X,Y,DA,DR,DIC,DIE,QFLG,PG,LN,ZTRTN,ZTIO,ZTDESC
"RTN","ECXSCLD",362,0)
 K DIR,DIRUT,DTOUT,DUOUT,CLIEN,CODE,ECXMSG,IENS,STOP,CSTOP,AMIS,FDA,OUT
"RTN","ECXSCLD",363,0)
 K J,ECSC,ECSD,ECDATE,ECD,ECN,ECNON,QFLG,PG,LN,SS,POP,%ZIS
"RTN","ECXSCLD",364,0)
 K EC,ECD,ECD2,ECL,ECS,ECS2,ECP,ECSC,ECSC2,ECDB,ECDNEW,ECDDIF,ECSCSIGN,ECDF,ECALL,ID,RD
"RTN","ECXSCLD",365,0)
 ;ECXINAC-patch 142 removed variable,it is no longer used
"RTN","ECXSCLD",366,0)
 Q
"RTN","ECXSCLD",367,0)
 ;
"RTN","ECXSCLD",368,0)
PAUSE ;pause screen
"RTN","ECXSCLD",369,0)
 N DIR,X,Y,DTOUT,DUOUT,DIROUT,DIRUT
"RTN","ECXSCLD",370,0)
 S DIR(0)="E" W !! D ^DIR W !!
"RTN","ECXSCLD",371,0)
 Q
"RTN","ECXSCLD",372,0)
 ;
"RTN","ECXSCLD",373,0)
LOOK ;queued entry to check for new clinics
"RTN","ECXSCLD",374,0)
 N DAT,ECD0,ECXMISS,ID,ECGRP
"RTN","ECXSCLD",375,0)
 S ECD=$E(DT,1,5)-1-($E(DT,4,5)="01"*8800),ECD0=ECD_"00",ECXMISS=10,ECGRP="SCX" K ^TMP("ECXS",$J)
"RTN","ECXSCLD",376,0)
 F EC=0:0 S EC=$O(^SC(EC)) Q:'EC  I $D(^SC(EC,0)),$P(^SC(EC,0),U,3)="C",'$D(^ECX(728.44,EC)) S DAT=$G(^SC(EC,"I")) D
"RTN","ECXSCLD",377,0)
 .S ID=+DAT,RD=$P(DAT,U,2) I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCLD",378,0)
 .S ^TMP("ECXS",$J,ECXMISS,0)=$J(EC,6)_"    "_$$LJ^XLFSTR($P(^SC(EC,0),U),40),ECXMISS=ECXMISS+1
"RTN","ECXSCLD",379,0)
 D ^ECXSCX1
"RTN","ECXSCLD",380,0)
 Q
"RTN","ECXSCLD1")
0^10^B14959984^B4160258
"RTN","ECXSCLD1",1,0)
ECXSCLD1 ;ALB/DAN <CONT> Enter, Print and Edit Entries in 728.44 ;9/3/13  14:43
"RTN","ECXSCLD1",2,0)
 ;;3.0;DSS EXTRACTS;**132,136,144**;Dec 22, 1997;Build 9
"RTN","ECXSCLD1",3,0)
 ;
"RTN","ECXSCLD1",4,0)
EXPORT ;Export clinic review data to spreedsheet
"RTN","ECXSCLD1",5,0)
 N DIC,FLDS,BY,FR,L,DIOBEG,DIR,DIS,Y,DIRUT,POP,DUOUT,DTOUT,DIROUT,X,%ZIS,IOP ;144
"RTN","ECXSCLD1",6,0)
 W !!,"Select which clinics to include on the spreadsheet for exporting." ;144
"RTN","ECXSCLD1",7,0)
 S DIR(0)="SAO^A:ALL CLINICS;C:ACTIVE CLINICS;I:INACTIVE CLINICS;U:UNREVIEWED CLINICS",DIR("?")="Enter letter associated with the group of clinics to include on the spreadsheet" ;144
"RTN","ECXSCLD1",8,0)
 S DIR("A")="Select (A)ll, a(C)tive, (I)nactive, or (U)nreviewed clinics for export: " ;144
"RTN","ECXSCLD1",9,0)
 D ^DIR I $D(DIRUT) Q  ;144 Stop if no selection made
"RTN","ECXSCLD1",10,0)
 W !!,"To ensure all data is captured during the export:" ;144
"RTN","ECXSCLD1",11,0)
 W !!,"1. Select 'Logging...' from the File Menu. Select your file, and where to save." ;144
"RTN","ECXSCLD1",12,0)
 W !,"2. On the Setup menu, select 'Display...',then 'screen' tab and modify 'columns'",!,"   setting to at least 225 characters." ;144
"RTN","ECXSCLD1",13,0)
 W !,"3. The DEVICE input for the columns should also contain a large enough",!,"   parameter (e.g. 225).  The DEVICE prompt is defaulted to 0;225;99999 for you.",!,"   You may change it if need be." ;144
"RTN","ECXSCLD1",14,0)
 W !,"Example: DEVICE: 0;225;99999 *Where 0 is your screen, 225 is the margin width",!?17,"and 99999 is the screen length."
"RTN","ECXSCLD1",15,0)
 W !!,"NOTE:  In order for all number fields, such as SSN and Feeder Key, to be",!,"displayed correctly in the spreadsheet, these fields must be formatted as Text",!,"when importing the data into the spreadsheet.",! ;144
"RTN","ECXSCLD1",16,0)
 S DIC="^ECX(728.44,",FLDS="[ECX CLINIC REVIEW EXPORT]",BY="NUMBER",FR="",L=0
"RTN","ECXSCLD1",17,0)
 ;The following line has been patched in 136 and 144
"RTN","ECXSCLD1",18,0)
 S DIOBEG="W ""IEN^Clinic^Stop Code^Credit Stop Code^DSS Stop Code^DSS Credit Code^Action^Last Approved Date^Nat Code^Inact Date^React Date^Clinic Type^App Len^Div^App Type^Non Cnt^OOS^OOS Calling Pkg^Variable Length Appt^DSS Prod Dept"""
"RTN","ECXSCLD1",19,0)
 S DIS(0)=$S(Y="U":"I $P(^ECX(728.44,D0,0),U,7)=""""",Y="I":"I $P(^ECX(728.44,D0,0),U,10)'=""""",Y="C":"I $P(^ECX(728.44,D0,0),U,10)=""""",1:"I 1") ;144
"RTN","ECXSCLD1",20,0)
 S DIS(1)="I $P($G(^SC(D0,0)),U,3)=""C""" ;144 Only include clinics in report
"RTN","ECXSCLD1",21,0)
 S %ZIS="N",%ZIS("B")="0;225;99999" D ^%ZIS Q:POP  S IOP=ION_";"_IOM_";"_IOSL ;144
"RTN","ECXSCLD1",22,0)
 D EN1^DIP
"RTN","ECXSCLD1",23,0)
 I '$G(POP) D  ;144 Don't print the following lines if the report didn't print
"RTN","ECXSCLD1",24,0)
 .W !!,"Turn off your logging..." ;144
"RTN","ECXSCLD1",25,0)
 .W !,"...Then, pull your export text file into your spreadsheet.",! ;144
"RTN","ECXSCLD1",26,0)
 .S DIR(0)="E",DIR("A")="Press any key to continue" D ^DIR
"RTN","ECXSCLD1",27,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXSCLD1",28,0)
 D HOME^%ZIS
"RTN","ECXSCLD1",29,0)
 Q
"RTN","ECXSCRP")
0^32^B30491382^B21952351
"RTN","ECXSCRP",1,0)
ECXSCRP ;ALB/JAM - Restricted Stop Code Nonconforming Clinic Report; 07/24/03 ;6/5/13  16:20
"RTN","ECXSCRP",2,0)
 ;;3.0;DSS EXTRACTS;**57,58,120,126,144**;Dec 22, 1997;Build 9
"RTN","ECXSCRP",3,0)
 ;
"RTN","ECXSCRP",4,0)
EN ;foreground entry point
"RTN","ECXSCRP",5,0)
 N ZTRTN,ZTDESC,ZTIO,ZTQUEUED,DIR,DIRUT,X,Y,ECX,ECXSD,PSC,SSC,ECXPCF,ECXPORT,CNT ;144
"RTN","ECXSCRP",6,0)
 W @IOF
"RTN","ECXSCRP",7,0)
 W !,"This option reviews the Primary and Secondary Stop Codes and any existing Four" ;144
"RTN","ECXSCRP",8,0)
 W !,"Character Codes in the Clinics and Stop Codes file #728.44." ;144
"RTN","ECXSCRP",9,0)
 W !,"It produces a report highlighting any nonconformance reasons that pertain" ;144
"RTN","ECXSCRP",10,0)
 W !,"to the Primary and Secondary Codes, or the Four Character Codes if present." ;144
"RTN","ECXSCRP",11,0)
 W !,"Please contact the responsible party for corrective action." ;144
"RTN","ECXSCRP",12,0)
 S DIR(0)="SO^A:Active Clinics;I:Inactive Clinics;B:Both"
"RTN","ECXSCRP",13,0)
 S DIR("A")="Select Report"
"RTN","ECXSCRP",14,0)
 S DIR("?",1)="Enter an A for Active Clinics, I for Inactive Clinics,"
"RTN","ECXSCRP",15,0)
 S DIR("?")="B for Both Active and Inactive Clinics"
"RTN","ECXSCRP",16,0)
 D ^DIR K DIR I $D(DIRUT) G END
"RTN","ECXSCRP",17,0)
 S ECXPCF=Y
"RTN","ECXSCRP",18,0)
 W !,"Please be patient, this may take a few moments..." ;144
"RTN","ECXSCRP",19,0)
 ;Synch primary & secondary stop codes from file #44 with #728.44
"RTN","ECXSCRP",20,0)
 S ECX=0 F  S ECX=$O(^ECX(728.44,ECX)) Q:'ECX  D FIX^ECXSCLD(ECX)
"RTN","ECXSCRP",21,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXSCRP",22,0)
 .K ^TMP($J,"ECXPORT") ;144
"RTN","ECXSCRP",23,0)
 .S ^TMP($J,"ECXPORT",0)="IEN^CLINIC NAME^PRIMARY STOP CODE^SECONDARY CREDIT CODE^DSS PRIMARY STOP CODE^DSS SECONDARY CREDIT CODE^4CHAR NATIONAL CODE^REASON FOR NON-CONFORMANCE" ;144
"RTN","ECXSCRP",24,0)
 .S CNT=1 ;144
"RTN","ECXSCRP",25,0)
 .D PROCESS ;144
"RTN","ECXSCRP",26,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXSCRP",27,0)
 ;device selection
"RTN","ECXSCRP",28,0)
 W !!,"** REPORT REQUIRES 132 COLUMNS TO PRINT CORRECTLY **",!! ;144 CVW
"RTN","ECXSCRP",29,0)
 K IOP,%ZIS,POP,IO("Q")
"RTN","ECXSCRP",30,0)
 ;S %ZIS("A")="Select Device: ",%ZIS="QM" D ^%ZIS I POP G END
"RTN","ECXSCRP",31,0)
 S %ZIS="",%ZIS("B")="0;132;99999" D ^%ZIS I POP G END
"RTN","ECXSCRP",32,0)
 I $D(IO("Q")) K IO("Q") D  G END
"RTN","ECXSCRP",33,0)
 .S ZTDESC="Restricted Stop Code/DSS Identifier Report",ZTSAVE("ECXPCF")=""
"RTN","ECXSCRP",34,0)
 .S ZTRTN="PROCESS^ECXSCRP",ZTIO=ION D ^%ZTLOAD,HOME^%ZIS K ZTSK
"RTN","ECXSCRP",35,0)
 U IO
"RTN","ECXSCRP",36,0)
 D PROCESS
"RTN","ECXSCRP",37,0)
END D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECXSCRP",38,0)
 Q
"RTN","ECXSCRP",39,0)
 ;
"RTN","ECXSCRP",40,0)
PROCESS ;background entry point
"RTN","ECXSCRP",41,0)
 ;locate invalid Stop Code in HOSPITAL LOCATION file #44 & CLINICS
"RTN","ECXSCRP",42,0)
 ;AND STOP CODES file #728.44
"RTN","ECXSCRP",43,0)
 N ECX,NAM,STR,IEN,PSC,SSC,CNTX,ECXPG,ECXOUT,LNS,DPC,DSC,SCIEN,ECXF
"RTN","ECXSCRP",44,0)
 N INDT,TYP,ACF,HTYP,CLNF,ECXRDT,NCODE,%H ;144
"RTN","ECXSCRP",45,0)
 S %H=$H D YX^%DTC S ECXRDT=Y
"RTN","ECXSCRP",46,0)
 S $P(LNS,"-",80)="",(CNTX,IEN,ECXOUT,ECXF)=0,ECXPG=1,CLNF=0
"RTN","ECXSCRP",47,0)
 ;search file #728.44 for invalid stop code entries
"RTN","ECXSCRP",48,0)
 D:'$G(ECXPORT) HDR S IEN=0 ;144
"RTN","ECXSCRP",49,0)
 F  S IEN=$O(^ECX(728.44,IEN)) Q:'IEN  D  Q:ECXOUT  S:ECXF CNTX=CNTX+1
"RTN","ECXSCRP",50,0)
 .S ECX=$G(^ECX(728.44,IEN,0)),PSC=$P(ECX,U,2),SSC=$P(ECX,U,3),CLNF=0
"RTN","ECXSCRP",51,0)
 .S DPC=$P(ECX,U,4),DSC=$P(ECX,U,5),NAM=$$GET1^DIQ(44,$P(ECX,U),.01)
"RTN","ECXSCRP",52,0)
 .S INDT=$P(ECX,U,10),ECXF=0 I INDT'="" S NAM="*"_NAM
"RTN","ECXSCRP",53,0)
 .S ACF=$S($E(NAM)="*":0,1:1),HTYP=$$GET1^DIQ(44,$P(ECX,U),2,"I")
"RTN","ECXSCRP",54,0)
 .S NCODE=$$GET1^DIQ(728.441,$P(ECX,U,8),.01) ;144 cvw 
"RTN","ECXSCRP",55,0)
 .I $S((ECXPCF="A")&('ACF):1,(ECXPCF="I")&(ACF):1,1:0) Q
"RTN","ECXSCRP",56,0)
 .D  I ECXOUT Q
"RTN","ECXSCRP",57,0)
 ..I PSC="" S STR="Missing primary code" D PRN Q
"RTN","ECXSCRP",58,0)
 ..D SCCHK(PSC,"P") I $D(STR) D PRN
"RTN","ECXSCRP",59,0)
 .I SSC'="" D SCCHK(SSC,"S") I $D(STR) D PRN
"RTN","ECXSCRP",60,0)
 .D  I ECXOUT Q 
"RTN","ECXSCRP",61,0)
 ..I DPC="" S STR="No DSS primary code" D PRN Q
"RTN","ECXSCRP",62,0)
 ..I DPC'=PSC D SCCHK(DPC,"P") I $D(STR) D PRN
"RTN","ECXSCRP",63,0)
 .I DSC'="",DSC'=SSC D SCCHK(DSC,"S") I $D(STR) D PRN
"RTN","ECXSCRP",64,0)
 .D  I ECXOUT Q  ;144 cvw
"RTN","ECXSCRP",65,0)
 ..I ($P(ECX,U,8)'="")&(NCODE="") S NCODE=$P(ECX,U,8),STR="4CHAR National Code invalid" D PRN Q  ;144 cvw
"RTN","ECXSCRP",66,0)
 ..I $$GET1^DIQ(728.441,$P(ECX,U,8),3)'="" S STR="4CHAR National Code inactive" D PRN Q  ;144 cvw 
"RTN","ECXSCRP",67,0)
 I '$G(ECXPORT) W !!,?25,$S(CNTX:CNTX,1:"NO")_" PROBLEM CLINICS FOUND." ;144
"RTN","ECXSCRP",68,0)
 Q
"RTN","ECXSCRP",69,0)
PRN ;print line
"RTN","ECXSCRP",70,0)
 Q:CLNF  I HTYP'="C" S STR="Not a Clinic" S CLNF=1
"RTN","ECXSCRP",71,0)
 I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=IEN_"^"_NAM_"^"_PSC_"^"_SSC_"^"_DPC_"^"_DSC_"^"_NCODE_"^"_STR,CNT=CNT+1 Q  ;144
"RTN","ECXSCRP",72,0)
 I ($Y+3)>IOSL D PAGE,HDR I ECXOUT Q
"RTN","ECXSCRP",73,0)
 W !,IEN,?8,$E(NAM,1,24),?33,PSC,?38,SSC,?45,DPC,?50,DSC,?57,NCODE,?66,STR
"RTN","ECXSCRP",74,0)
 S ECXF=1
"RTN","ECXSCRP",75,0)
 Q
"RTN","ECXSCRP",76,0)
 ;
"RTN","ECXSCRP",77,0)
SCCHK(SCIEN,TYP) ;check stop code against file 40.7
"RTN","ECXSCRP",78,0)
 N SCN,RTY,CTY,SCI,INACT,ARRY,I,FLG
"RTN","ECXSCRP",79,0)
 K STR
"RTN","ECXSCRP",80,0)
 S CTY=$S(TYP="P":"^P^E^",1:"^S^E^")
"RTN","ECXSCRP",81,0)
 D SCIEN(SCIEN) I SCI="" D  Q
"RTN","ECXSCRP",82,0)
 .;S SCI=$$SCIEN(SCIEN) I SCI="" D  Q
"RTN","ECXSCRP",83,0)
 .I TYP="S" Q:SSC=PSC  Q:DSC=DPC
"RTN","ECXSCRP",84,0)
 .S STR=SCIEN_" Invalid Stop Code"
"RTN","ECXSCRP",85,0)
 S SCN=$G(^DIC(40.7,SCI,0)),RTY=$P(SCN,U,6),INACT=$P(SCN,U,3)
"RTN","ECXSCRP",86,0)
 I INACT D  Q
"RTN","ECXSCRP",87,0)
 .I INACT>DT S STR=SCIEN_" inactive in future"
"RTN","ECXSCRP",88,0)
 .E  S STR=SCIEN_" code is inactive"
"RTN","ECXSCRP",89,0)
 I $P(SCN,U,2)="" S STR="No pointer in file #40.7" Q
"RTN","ECXSCRP",90,0)
 I RTY="" S STR=SCIEN_" No restriction type" Q
"RTN","ECXSCRP",91,0)
 I CTY'[("^"_RTY_"^") D
"RTN","ECXSCRP",92,0)
 .S STR=SCIEN_" cannot be "_$S(TYP="P":"prim",1:"second")_"ary"
"RTN","ECXSCRP",93,0)
 Q
"RTN","ECXSCRP",94,0)
PAGE ;
"RTN","ECXSCRP",95,0)
 N SS,JJ,DIR,X,Y
"RTN","ECXSCRP",96,0)
 I $E(IOST,1,2)="C-" D
"RTN","ECXSCRP",97,0)
 . S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXSCRP",98,0)
 . S DIR(0)="E" W ! D ^DIR K DIR I 'Y S ECXOUT=1
"RTN","ECXSCRP",99,0)
 Q
"RTN","ECXSCRP",100,0)
 ;
"RTN","ECXSCRP",101,0)
SCIEN(SCIEN) ;Get stop code IEN
"RTN","ECXSCRP",102,0)
 I SCIEN="" Q ""
"RTN","ECXSCRP",103,0)
 ;S SCIEN=$O(^DIC(40.7,"C",SCIEN,0))
"RTN","ECXSCRP",104,0)
 ;Q SCIEN
"RTN","ECXSCRP",105,0)
 ;find active code if one
"RTN","ECXSCRP",106,0)
 S SCI=$O(^DIC(40.7,"C",SCIEN,0))
"RTN","ECXSCRP",107,0)
 I $O(^DIC(40.7,"C",SCIEN,SCI))'>0 Q
"RTN","ECXSCRP",108,0)
 ;must be some duplicates so find the best one
"RTN","ECXSCRP",109,0)
 S I=""
"RTN","ECXSCRP",110,0)
 F  S I=$O(^DIC(40.7,"C",SCIEN,I)) Q:'I  D
"RTN","ECXSCRP",111,0)
 . Q:'$D(^DIC(40.7,I,0))
"RTN","ECXSCRP",112,0)
 . S INACT=$P(^DIC(40.7,I,0),"^",3),FLG="A" D
"RTN","ECXSCRP",113,0)
 . . I INACT,((DT>INACT)!(DT=INACT)) S FLG="I"
"RTN","ECXSCRP",114,0)
 . S ARRY(FLG,I)=""
"RTN","ECXSCRP",115,0)
 I $D(ARRY("A")) S SCI=$O(ARRY("A",0))
"RTN","ECXSCRP",116,0)
 Q SCIEN
"RTN","ECXSCRP",117,0)
 ;
"RTN","ECXSCRP",118,0)
HDR ;header for data from file #728.44
"RTN","ECXSCRP",119,0)
 W @IOF
"RTN","ECXSCRP",120,0)
 W ECXRDT,?73,"Page: ",ECXPG,!
"RTN","ECXSCRP",121,0)
 W !,?18,"DSS IDENTIFIER NON-CONFORMING CLINICS REPORT",!,?32
"RTN","ECXSCRP",122,0)
 W $S(ECXPCF="A":"Active",ECXPCF="I":"Inactive",1:"All")_" Clinics",!
"RTN","ECXSCRP",123,0)
 W !,"CLINICS AND STOP CODES File (#728.44) - (Use 'Enter/Edit DSS "
"RTN","ECXSCRP",124,0)
 W "Stop Codes for",!,?25,"Clinics' [ECXSCEDIT] menu option to "
"RTN","ECXSCRP",125,0)
 W "make corrections)",!!,?45,"DSS",?50,"DSS",?57,"DSS"
"RTN","ECXSCRP",126,0)
 W !,?33,"PRIM",?38,"2NDARY",?45,"PRIM",?50,"2NDARY",?57,"4CHAR"
"RTN","ECXSCRP",127,0)
 W !,?8,$S(ECXPCF="B":"CLINIC NAME",1:""),?33,"STOP",?38,"CREDIT"
"RTN","ECXSCRP",128,0)
 W ?45,"STOP",?50,"CREDIT",?57,"NATIONAL",?66,"REASON FOR NON-",!
"RTN","ECXSCRP",129,0)
 W "IEN #",?8,$S(ECXPCF="B":"(*currently inactive)",1:"CLINIC NAME")
"RTN","ECXSCRP",130,0)
 W ?33,"CODE",?38,"CODE",?45,"CODE",?50,"CODE",?57,"CODE",?66,"CONFORMANCE"
"RTN","ECXSCRP",131,0)
 W !,$E(LNS,1,80)
"RTN","ECXSCRP",132,0)
 S ECXPG=ECXPG+1
"RTN","ECXSCRP",133,0)
 Q
"RTN","ECXSCX1")
0^31^B90609071^B78250876
"RTN","ECXSCX1",1,0)
ECXSCX1 ;ALB/JAP,BIR/DMA-Clinic Extract Message ;6/24/13  10:41
"RTN","ECXSCX1",2,0)
 ;;3.0;DSS EXTRACTS;**8,28,24,27,29,30,31,33,84,92,105,127,132,144**;Dec 22, 1997;Build 9
"RTN","ECXSCX1",3,0)
EN ;entry point from ecxscx
"RTN","ECXSCX1",4,0)
 N ECX
"RTN","ECXSCX1",5,0)
 ;send missing clinic message
"RTN","ECXSCX1",6,0)
 S ECX=$O(^TMP($J,"ECXS","MISS",0)) D
"RTN","ECXSCX1",7,0)
 .Q:ECX=""
"RTN","ECXSCX1",8,0)
 .S XMSUB="MISSING CLINICS in File #728.44",XMDUZ="DSS SYSTEM"
"RTN","ECXSCX1",9,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXSCX1",10,0)
 .F ECX=1:1:5 S ^TMP($J,"ECXS","MISS",ECX,0)=$P($T(MSG+ECX),";;",2)
"RTN","ECXSCX1",11,0)
 .S XMTEXT="^TMP($J,""ECXS"",""MISS""," D ^XMD
"RTN","ECXSCX1",12,0)
 ;send no division message
"RTN","ECXSCX1",13,0)
 S ECX=$O(^TMP($J,"ECXS","DIV",0)) D
"RTN","ECXSCX1",14,0)
 .Q:ECX=""
"RTN","ECXSCX1",15,0)
 .S XMSUB="CLINICS w/o DIVISION Data",XMDUZ="DSS SYSTEM"
"RTN","ECXSCX1",16,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXSCX1",17,0)
 .F ECX=1:1:5 S ^TMP($J,"ECXS","DIV",ECX,0)=$P($T(MSG2+ECX),";;",2)
"RTN","ECXSCX1",18,0)
 .S XMTEXT="^TMP($J,""ECXS"",""DIV""," D ^XMD
"RTN","ECXSCX1",19,0)
 ;cleanup
"RTN","ECXSCX1",20,0)
 K ^TMP($J,"ECXS")
"RTN","ECXSCX1",21,0)
 Q
"RTN","ECXSCX1",22,0)
MSG ;text for missing clinic
"RTN","ECXSCX1",23,0)
 ;;The following clinics have not been entered into the CLINIC AND
"RTN","ECXSCX1",24,0)
 ;;STOP CODES file (#728.44).  If any listed clinic is currently
"RTN","ECXSCX1",25,0)
 ;;active, please use the options 'Create DSS Clinic Stop Code File'
"RTN","ECXSCX1",26,0)
 ;;and 'Enter/Edit DSS Stop Codes for Clinics' to update this file.
"RTN","ECXSCX1",27,0)
 ;;  
"RTN","ECXSCX1",28,0)
 ;
"RTN","ECXSCX1",29,0)
MSG2 ;text for missing division
"RTN","ECXSCX1",30,0)
 ;;The following clinics in the HOSPITAL LOCATION file (#44) have not
"RTN","ECXSCX1",31,0)
 ;;been assigned to a division from the MEDICAL CENTER DIVISION file 
"RTN","ECXSCX1",32,0)
 ;;(#40.8).  CLI extract records associated with these clinics have
"RTN","ECXSCX1",33,0)
 ;;been given a default Division identifier of "1".
"RTN","ECXSCX1",34,0)
 ;;
"RTN","ECXSCX1",35,0)
 ;
"RTN","ECXSCX1",36,0)
MISS ;load ^tmp if clinic missing from #728.44
"RTN","ECXSCX1",37,0)
 N DAT,ID,RD
"RTN","ECXSCX1",38,0)
 S (ID,RD)=""
"RTN","ECXSCX1",39,0)
 S DAT=$G(^SC(SC,"I")) I DAT]"" S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCX1",40,0)
 ;ignore inactive clinics
"RTN","ECXSCX1",41,0)
 I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCX1",42,0)
 I '$D(^TMP($J,"ECXS","ECXMISS")) S ^TMP($J,"ECXS","ECXMISS")=10
"RTN","ECXSCX1",43,0)
 S ECXMISS=^TMP($J,"ECXS","ECXMISS")
"RTN","ECXSCX1",44,0)
 S ^TMP($J,"ECXS","MISS",ECXMISS,0)=$J(SC,6)_"    "_$$LJ^XLFSTR($P(^SC(SC,0),U),40)_ECSC_"/"_ECCSC
"RTN","ECXSCX1",45,0)
 S ^TMP($J,"ECXS","ECXMISS")=ECXMISS+1
"RTN","ECXSCX1",46,0)
 Q
"RTN","ECXSCX1",47,0)
 ;
"RTN","ECXSCX1",48,0)
NODIV ;load ^tmp if clinic w/o division
"RTN","ECXSCX1",49,0)
 N DAT,ID,RD
"RTN","ECXSCX1",50,0)
 S (ID,RD)=""
"RTN","ECXSCX1",51,0)
 S DAT=$G(^SC(SC,"I")) I DAT]"" S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCX1",52,0)
 ;ignore inactive clinics
"RTN","ECXSCX1",53,0)
 I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCX1",54,0)
 I '$D(^TMP($J,"ECXS","ECXMISS")) S ^TMP($J,"ECXS","ECXMISS")=10
"RTN","ECXSCX1",55,0)
 S ECXMISS=^TMP($J,"ECXS","ECXMISS")
"RTN","ECXSCX1",56,0)
 S ^TMP($J,"ECXS","DIV",ECXMISS,0)=$J(SC,6)_"    "_$$LJ^XLFSTR($P(^SC(SC,0),U),40)
"RTN","ECXSCX1",57,0)
 S ^TMP($J,"ECXS","ECXMISS")=ECXMISS+1
"RTN","ECXSCX1",58,0)
 Q
"RTN","ECXSCX1",59,0)
 ;
"RTN","ECXSCX1",60,0)
FEEDER(ECXSC,ECXSD,ECXP1,ECXP2,ECXP3,ECXSEND,ECXDIV) ;get transmission style and feeder key variables
"RTN","ECXSCX1",61,0)
 ;feeder key = primary stop code_secondary stop code_length of appointment_national clinic code_noshow indicator
"RTN","ECXSCX1",62,0)
 ;   input
"RTN","ECXSCX1",63,0)
 ;   ECXSC = ien of clinic in file #44 (required)
"RTN","ECXSCX1",64,0)
 ;   ECXSD  = start date of extract date range (required)
"RTN","ECXSCX1",65,0)
 ;   ECXP1,ECXP2,ECXP3,ECXSEND passed by reference (required)
"RTN","ECXSCX1",66,0)
 ;   output (passed-by-reference variables)
"RTN","ECXSCX1",67,0)
 ;   ECXP1  = primary stop code
"RTN","ECXSCX1",68,0)
 ;   ECXP2  = secondary stop code
"RTN","ECXSCX1",69,0)
 ;   ECXP3  = field #7 of file #728.44
"RTN","ECXSCX1",70,0)
 ;   ECXSEND = field #5 of file #728.44
"RTN","ECXSCX1",71,0)
 ;   ECXDIV  = field #3.5 of file #44
"RTN","ECXSCX1",72,0)
 N ECSC,ECCSC,ECSD1,ECXNC,ECXMISS,CLIN,SC
"RTN","ECXSCX1",73,0)
 S (ECXP1,ECXP2)="000",ECXP3="0000"
"RTN","ECXSCX1",74,0)
 S ECXSEND=1,ECXDIV=0
"RTN","ECXSCX1",75,0)
 Q:+ECXSC=0
"RTN","ECXSCX1",76,0)
 ;get needed data from ^tmp
"RTN","ECXSCX1",77,0)
 I $D(^TMP($J,"ECXS","SC",ECXSC)) D
"RTN","ECXSCX1",78,0)
 .S CLIN=^TMP($J,"ECXS","SC",ECXSC)
"RTN","ECXSCX1",79,0)
 .S ECXP1=$P(CLIN,U),ECXP2=$P(CLIN,U,2),ECXP3=$P(CLIN,U,3),ECXSEND=$P(CLIN,U,4),ECXDIV=$P(CLIN,U,5)
"RTN","ECXSCX1",80,0)
 .S ECXDIV=+$P($G(^TMP($J,"ECXCL",ECXSC)),U,4) S:ECXDIV=0 ECXDIV=1
"RTN","ECXSCX1",81,0)
 ;otherwise, set needed data in ^tmp
"RTN","ECXSCX1",82,0)
 I '$D(^TMP($J,"ECXS","SC",ECXSC)) D
"RTN","ECXSCX1",83,0)
 .;get division or send no division msg
"RTN","ECXSCX1",84,0)
 .S ECXDIV=+$P($G(^TMP($J,"ECXCL",ECXSC)),U,4)
"RTN","ECXSCX1",85,0)
 .I ECXDIV=0 S SC=ECXSC D NODIV S ECXDIV=1
"RTN","ECXSCX1",86,0)
 .;get other data from file #44 if no #727.44 record; send missing clinic msg
"RTN","ECXSCX1",87,0)
 .I '$D(^ECX(728.44,ECXSC,0)) D
"RTN","ECXSCX1",88,0)
 ..S ECSC=+$P($G(^SC(ECXSC,0)),U,7),ECCSC=+$P(^(0),U,18)
"RTN","ECXSCX1",89,0)
 ..S SC=ECXSC,ECSD1=ECXSD D MISS
"RTN","ECXSCX1",90,0)
 ..S:ECSC ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2),ECXP1=$$RJ^XLFSTR(+ECXP1,3,0)
"RTN","ECXSCX1",91,0)
 .;otherwise get other data from file #728.44
"RTN","ECXSCX1",92,0)
 .S EC=$G(^ECX(728.44,ECXSC,0)) D
"RTN","ECXSCX1",93,0)
 ..Q:EC=""
"RTN","ECXSCX1",94,0)
 ..S ECXSEND=$P(EC,U,6)
"RTN","ECXSCX1",95,0)
 ..Q:ECXSEND=6
"RTN","ECXSCX1",96,0)
 ..S ECSC=+$P(EC,U,4),ECCSC=+$P(EC,U,5)
"RTN","ECXSCX1",97,0)
 ..I 'ECSC S ECSC=+$P(EC,U,2),ECCSC=+$P(EC,U,3)
"RTN","ECXSCX1",98,0)
 ..I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXSCX1",99,0)
 ..;if primary stop not valid, use file #44 record
"RTN","ECXSCX1",100,0)
 ..I 'ECSC S ECSC=+$P($G(^SC(ECXSC,0)),U,7),ECCSC=+$P($G(^(0)),U,18) I ECSC D
"RTN","ECXSCX1",101,0)
 ...S ECXP1=+$P($G(^DIC(40.7,ECSC,0)),U,2)
"RTN","ECXSCX1",102,0)
 ...S:ECCSC ECXP2=+$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXSCX1",103,0)
 ...S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXSCX1",104,0)
 .;for action code=1, secondary stop code is always "000"
"RTN","ECXSCX1",105,0)
 .I ECXSEND=1 S ECXP2="000"
"RTN","ECXSCX1",106,0)
 .;action code of 2 or 3 should not be used, but continue to follow v2t11 logic
"RTN","ECXSCX1",107,0)
 .I ECXSEND=2 S ECXP1=ECXP2,ECXP2="000"
"RTN","ECXSCX1",108,0)
 .;for action code=4, need to get national clinic code
"RTN","ECXSCX1",109,0)
 .I ECXSEND=4 D
"RTN","ECXSCX1",110,0)
 ..S ECXNC=+$P($G(^ECX(728.44,ECXSC,0)),U,8)
"RTN","ECXSCX1",111,0)
 ..I ECXNC S ECXNC=$P($G(^ECX(728.441,ECXNC,0)),U),ECXP3=$$RJ^XLFSTR(ECXNC,4,0)
"RTN","ECXSCX1",112,0)
 .;set data in ^tmp
"RTN","ECXSCX1",113,0)
 .S ^TMP($J,"ECXS","SC",ECXSC)=ECXP1_U_ECXP2_U_ECXP3_U_ECXSEND
"RTN","ECXSCX1",114,0)
 Q
"RTN","ECXSCX1",115,0)
 ;
"RTN","ECXSCX1",116,0)
VISIT(ECXDFN,ECXVISIT,ECXVIST,ECXERR) ;get visit specific data
"RTN","ECXSCX1",117,0)
 ;input  ECXVISIT  = pointer to file #9000010
"RTN","ECXSCX1",118,0)
 ;       ECXSVC  = sc percentage
"RTN","ECXSCX1",119,0)
 ;output ECXVSIT = data array
"RTN","ECXSCX1",120,0)
 ;       ECXERR  = 1 indicates error; otherwise, 0
"RTN","ECXSCX1",121,0)
 N AO,ARRAY,CM,CNT,CPT,DA,DATE,DA,DIQ,ICD,ICD9,IR,LEN,M,MOD,MST,NUM,NOD1,NODE
"RTN","ECXSCX1",122,0)
 N PROV,PROVPC,REC,VAL,VISIT,X,Y,HNC,PGE,CV,SHAD,ENCSC,ENCCL ;144
"RTN","ECXSCX1",123,0)
 S ECXERR=0,VISIT=ECXVISIT
"RTN","ECXSCX1",124,0)
 S (ECXVIST("AO"),ECXVIST("IR"),ECXVIST("PGE"),ECXVIST("HNC"))=""
"RTN","ECXSCX1",125,0)
 S (ECXVIST("MST"),ECXVIST("CV"),ECXVIST("SHAD"),ECXVIST("ENCSC"),ECXVIST("ENCCL"))="" ;144
"RTN","ECXSCX1",126,0)
 ;MRY-2/4/2010, extracts don't seem to use encounter (visit) "CV".
"RTN","ECXSCX1",127,0)
 ;extracts use eligibility API for some reason.  Added "CV" anyway.
"RTN","ECXSCX1",128,0)
 S (ECXVIST("PROV"),ECXVIST("PROV CLASS"))=""
"RTN","ECXSCX1",129,0)
 S (ECXVIST("PROV NPI"),ECXVIST("SOURCE"))=""
"RTN","ECXSCX1",130,0)
 F I="P",1,2,3,4 S ECXVIST("ICD9"_I)=""
"RTN","ECXSCX1",131,0)
 F I=1:1:8 S ECXVIST("CPT"_I)=""
"RTN","ECXSCX1",132,0)
 D ENCEVENT^PXAPI(VISIT)
"RTN","ECXSCX1",133,0)
 I $O(^TMP("PXKENC",$J,VISIT,""))']"" K ECXVIST S ECXERR=1
"RTN","ECXSCX1",134,0)
 Q:ECXERR
"RTN","ECXSCX1",135,0)
 S DATE=$P($P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,0),U,1),".",1)
"RTN","ECXSCX1",136,0)
 S ECXVIST("SOURCE")=$P($G(^TMP("PXKENC",$J,VISIT,"VST",VISIT,812)),U,3)
"RTN","ECXSCX1",137,0)
 ;get icd9 codes upto 5; else use 799.9
"RTN","ECXSCX1",138,0)
 K ARY S ICD("P")=0,ICD("S")=0,(ARY,REC)=""
"RTN","ECXSCX1",139,0)
 F  S REC=$O(^TMP("PXKENC",$J,VISIT,"POV",REC)) Q:REC=""  D
"RTN","ECXSCX1",140,0)
 .S VAL=^TMP("PXKENC",$J,VISIT,"POV",REC,0) Q:'VAL
"RTN","ECXSCX1",141,0)
 .I $P(VAL,U,12)="P" D
"RTN","ECXSCX1",142,0)
 ..S:'$D(ARY("P",+VAL)) CNT=ICD("P")+1,ICD("P",CNT)=+VAL,ICD("P")=CNT
"RTN","ECXSCX1",143,0)
 ..S ARY("P",+VAL)=""
"RTN","ECXSCX1",144,0)
 .I $P(VAL,U,12)'="P" D
"RTN","ECXSCX1",145,0)
 ..S:'$D(ARY("S",+VAL)) CNT=ICD("S")+1,ICD("S",CNT)=+VAL,ICD("S")=CNT
"RTN","ECXSCX1",146,0)
 ..S ARY("S",+VAL)=""
"RTN","ECXSCX1",147,0)
 S CNT=0,ECXVIST("ICD9P")=$P($G(^ICD9(+$G(ICD("P",1),0),0)),U)
"RTN","ECXSCX1",148,0)
 F I=2:1 Q:'$D(ICD("P",I))  D  Q:CNT>4
"RTN","ECXSCX1",149,0)
 .S CNT=CNT+1,ECXVIST("ICD9"_CNT)=$P($G(^ICD9(ICD("P",I),0)),U)
"RTN","ECXSCX1",150,0)
 I CNT<4 F I=1:1:8 Q:'$D(ICD("S",I))  D  Q:CNT>4
"RTN","ECXSCX1",151,0)
 .I '$D(ARY("P",ICD("S",I))) D
"RTN","ECXSCX1",152,0)
 ..S CNT=CNT+1,ECXVIST("ICD9"_CNT)=$P($G(^ICD9(ICD("S",I),0)),U)
"RTN","ECXSCX1",153,0)
 ;get first provider designated as primary
"RTN","ECXSCX1",154,0)
 ;if no primary, then get first physician provider
"RTN","ECXSCX1",155,0)
 ;if no physician, then get first provider
"RTN","ECXSCX1",156,0)
 S (PROV,PROVPC)=""
"RTN","ECXSCX1",157,0)
 I $O(^TMP("PXKENC",$J,VISIT,"PRV",0)) D
"RTN","ECXSCX1",158,0)
 .S (REC,VAL)=0 D
"RTN","ECXSCX1",159,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)!(VAL)  D
"RTN","ECXSCX1",160,0)
 ...S:($P(^(REC,0),U,4)="P") VAL=+^(0)
"RTN","ECXSCX1",161,0)
 ...S PROV=VAL,PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE)
"RTN","ECXSCX1",162,0)
 .I 'VAL S (REC,VAL)=0 D
"RTN","ECXSCX1",163,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)!(VAL)  D
"RTN","ECXSCX1",164,0)
 ...S (PROV,VAL)=+^(REC,0)
"RTN","ECXSCX1",165,0)
 ...S PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE) Q:PROVPC=""
"RTN","ECXSCX1",166,0)
 ...S NUM=$E(PROVPC,2,7) S:(NUM<110000)!(NUM>119999) VAL=0,PROVPC=""
"RTN","ECXSCX1",167,0)
 .I 'VAL D
"RTN","ECXSCX1",168,0)
 ..S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",0)) Q:('REC)!(VAL)
"RTN","ECXSCX1",169,0)
 ..S VAL=+^(REC,0),PROV=VAL,PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE)
"RTN","ECXSCX1",170,0)
 .S:PROV]"" PROV="2"_PROV
"RTN","ECXSCX1",171,0)
 S ECXVIST("PROV")=PROV,ECXVIST("PROV CLASS")=PROVPC
"RTN","ECXSCX1",172,0)
 S ECXVIST("PROV NPI")=""
"RTN","ECXSCX1",173,0)
 ;get 1-7 secondary physicians
"RTN","ECXSCX1",174,0)
 F I=1:1:7 S ECXVIST("PROVS"_I)="" ;144 two more providers cvw
"RTN","ECXSCX1",175,0)
 I $O(^TMP("PXKENC",$J,VISIT,"PRV",0)) D
"RTN","ECXSCX1",176,0)
 .S (REC,VAL,COUNTS)=0 D
"RTN","ECXSCX1",177,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)  D
"RTN","ECXSCX1",178,0)
 ...Q:$P(^(REC,0),U,4)'="S"
"RTN","ECXSCX1",179,0)
 ...S VAL=+^(0) I $E(PROV,2,99)=VAL Q  ;don't process, primary
"RTN","ECXSCX1",180,0)
 ...S COUNTS=COUNTS+1 Q:(COUNTS>7)  ;144 two more providers cvw
"RTN","ECXSCX1",181,0)
 ...S PROVS=VAL,PROVSPC=$$PRVCLASS^ECXUTL(PROVS,DATE)
"RTN","ECXSCX1",182,0)
 ...S PROVSNPI=$$NPI^XUSNPI("Individual_ID",PROVS,DATE)
"RTN","ECXSCX1",183,0)
 ...S:+PROVSNPI'>0 PROVSNPI="" S PROVSNPI=$P(PROVSNPI,U)
"RTN","ECXSCX1",184,0)
 ...S ECXVIST("PROVS"_COUNTS)="2"_PROVS_U_PROVSPC_U_PROVSNPI
"RTN","ECXSCX1",185,0)
 ;get cpt codes upto 8 & modifiers upto 5
"RTN","ECXSCX1",186,0)
 S CNT=1,PROV=$E(PROV,2,99)
"RTN","ECXSCX1",187,0)
 D:$O(^TMP("PXKENC",$J,VISIT,"CPT",0))
"RTN","ECXSCX1",188,0)
 .S REC=0 D:PROV]""
"RTN","ECXSCX1",189,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC)) Q:'REC  D  Q:CNT>8
"RTN","ECXSCX1",190,0)
 ...S CPT="",NODE=$G(^TMP("PXKENC",$J,VISIT,"CPT",REC,12))
"RTN","ECXSCX1",191,0)
 ...Q:NODE=""
"RTN","ECXSCX1",192,0)
 ...S NOD1=$S($P(NODE,U,4)=PROV:^TMP("PXKENC",$J,VISIT,"CPT",REC,0),1:"")
"RTN","ECXSCX1",193,0)
 ...Q:$P(NOD1,U)=""
"RTN","ECXSCX1",194,0)
 ...S Q="00"_+$P(NOD1,U,16),Q=$S(+Q:$E(Q,$L(Q)-1,$L(Q)),1:"01")
"RTN","ECXSCX1",195,0)
 ...S CPT=$P(NOD1,U),M=0,MOD=""
"RTN","ECXSCX1",196,0)
 ...F I=1:1:5 S M=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M)) Q:'M  D
"RTN","ECXSCX1",197,0)
 ....S MOD=MOD_$S(MOD'="":";",1:"")
"RTN","ECXSCX1",198,0)
 ....S MOD=MOD_$P(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M,0),U)
"RTN","ECXSCX1",199,0)
 ...S ECXVIST("CPT"_CNT)=$$CPT^ECXUTL3(CPT,MOD,Q),CNT=CNT+1
"RTN","ECXSCX1",200,0)
 ...K ^TMP("PXKENC",$J,VISIT,"CPT",REC)
"RTN","ECXSCX1",201,0)
 ..Q:CNT>8
"RTN","ECXSCX1",202,0)
 .Q:CNT>8  S REC=0
"RTN","ECXSCX1",203,0)
 .F  S REC=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC)) Q:'REC  D  Q:CNT>8
"RTN","ECXSCX1",204,0)
 ..S CPT="",NOD1=$G(^TMP("PXKENC",$J,VISIT,"CPT",REC,0))
"RTN","ECXSCX1",205,0)
 ..Q:$P(NOD1,U)=""
"RTN","ECXSCX1",206,0)
 ..S Q="00"_+$P(NOD1,U,16),Q=$S(+Q:$E(Q,$L(Q)-1,$L(Q)),1:"01")
"RTN","ECXSCX1",207,0)
 ..S CPT=$P(NOD1,U),M=0,MOD=""
"RTN","ECXSCX1",208,0)
 ..F I=1:1:5 S M=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M)) Q:'M  D
"RTN","ECXSCX1",209,0)
 ...S MOD=MOD_$S(MOD'="":";",1:"")
"RTN","ECXSCX1",210,0)
 ...S MOD=MOD_$P(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M,0),U)
"RTN","ECXSCX1",211,0)
 ..S ECXVIST("CPT"_CNT)=$$CPT^ECXUTL3(CPT,MOD,Q),CNT=CNT+1
"RTN","ECXSCX1",212,0)
 ..K ^TMP("PXKENC",$J,VISIT,"CPT",REC)
"RTN","ECXSCX1",213,0)
 ..Q:CNT>8
"RTN","ECXSCX1",214,0)
 S:ECXVIST("CPT1")="" ECXVIST("CPT1")=9919901
"RTN","ECXSCX1",215,0)
 ;ao, ir, mst, pge, hnc, cv, shad
"RTN","ECXSCX1",216,0)
 S (AO,IR,MST,PGE,HNC,CV,SHAD,ENCSC,ENCCL)="" ;144
"RTN","ECXSCX1",217,0)
 I $D(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800)) D
"RTN","ECXSCX1",218,0)
 .S ENCSC=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U) ;144 Encounter Service Connected
"RTN","ECXSCX1",219,0)
 .S AO=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,2)
"RTN","ECXSCX1",220,0)
 .S IR=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,3),MST=$P(^(800),U,5)
"RTN","ECXSCX1",221,0)
 .S PGE=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,4),HNC=$P(^(800),U,6)
"RTN","ECXSCX1",222,0)
 .S CV=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,7),SHAD=$P(^(800),U,8)
"RTN","ECXSCX1",223,0)
 .S ENCCL="" ;144 Encounter Camp Lejeune, will need to be updated once call to PXAPI adds this data
"RTN","ECXSCX1",224,0)
 .S ECXVIST("AO")=$S(AO=0:"N",AO=1:"Y",1:"")
"RTN","ECXSCX1",225,0)
 .S ECXVIST("IR")=$S(IR=0:"N",IR=1:"Y",1:"")
"RTN","ECXSCX1",226,0)
 .S ECXVIST("MST")=$S(MST=0:"N",MST=1:"Y",1:"")
"RTN","ECXSCX1",227,0)
 .S ECXVIST("PGE")=$S(PGE=0:"N",PGE=1:"Y",1:"")
"RTN","ECXSCX1",228,0)
 .S ECXVIST("HNC")=$S(HNC=0:"N",HNC=1:"Y",1:"")
"RTN","ECXSCX1",229,0)
 .S ECXVIST("CV")=$S(CV=0:"N",CV=1:"Y",1:"")
"RTN","ECXSCX1",230,0)
 .S ECXVIST("SHAD")=$S(SHAD=0:"N",SHAD=1:"Y",1:"")
"RTN","ECXSCX1",231,0)
 .S ECXVIST("ENCSC")=$S(ENCSC=0:"N",ENCSC=1:"Y",1:"") ;144 Encounter Service Connected
"RTN","ECXSCX1",232,0)
 .S ECXVIST("ENCCL")=$S(ENCCL=0:"N",ENCCL=1:"Y",1:"") ;144 Encounter Camp Lejeune.  Assumption made that Camp Lejeune data will be returned similiarly to other status data.
"RTN","ECXSCX1",233,0)
 Q
"RTN","ECXSCX2")
0^21^B9845162^B9043953
"RTN","ECXSCX2",1,0)
ECXSCX2 ;ALB/ESD  DSS Clinic Extract Utilities (continued) ;4/16/13  11:34
"RTN","ECXSCX2",2,0)
 ;;3.0;DSS EXTRACTS;**39,46,49,71,84,92,105,120,127,144**;Dec 22, 1997;Build 9
"RTN","ECXSCX2",3,0)
 ;
"RTN","ECXSCX2",4,0)
 ;
"RTN","ECXSCX2",5,0)
INTPAT ;initialize patient variables
"RTN","ECXSCX2",6,0)
 S (ECXSSN,ECXPNM,ECPTPR,ECCLAS,ECPTNPI,ECASPR,ECCLAS2,ECASNPI,ECXZIP)=""
"RTN","ECXSCX2",7,0)
 S (ECPTTM,ECXVET,ECXRACE,ECXENRL,ECXMPI,ECXSEX,ECXVNS)=""
"RTN","ECXSCX2",8,0)
 S (ECXDOB,ECXELIG,ECXPST,ECXPLOC,ECXRST,ECXAST,ECXMST,ECXSTATE)=""
"RTN","ECXSCX2",9,0)
 S (ECXCNTY,ECXCNTRY,ECXATYP,ECXPVST,ECXMTST,ECXEST,ECXECE,ECXHNC)=""
"RTN","ECXSCX2",10,0)
 S (ECXESC,ECXECL,ECXCLST)="" ;144
"RTN","ECXSCX2",11,0)
 Q
"RTN","ECXSCX2",12,0)
 ;
"RTN","ECXSCX2",13,0)
PAT1(ECXDFN,ECXDATE,ECXERR)     ;get patient demographic data
"RTN","ECXSCX2",14,0)
 N ECXPAT,K,OK,X
"RTN","ECXSCX2",15,0)
 S ECXERR=0
"RTN","ECXSCX2",16,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;4;5",.ECXPAT)
"RTN","ECXSCX2",17,0)
 I 'OK S ECXERR=1 Q
"RTN","ECXSCX2",18,0)
 S ECXSSN=ECXPAT("SSN"),ECXPNM=ECXPAT("NAME"),ECXMPI=ECXPAT("MPI")
"RTN","ECXSCX2",19,0)
 S ECXSEX=ECXPAT("SEX"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG")
"RTN","ECXSCX2",20,0)
 S ECXVET=ECXPAT("VET"),ECXSVC=ECXPAT("SC%"),ECXRACE=ECXPAT("RACE")
"RTN","ECXSCX2",21,0)
 S ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXSCX2",22,0)
 S ECXRST=ECXPAT("IR STAT"),ECXAST=ECXPAT("AO STAT")
"RTN","ECXSCX2",23,0)
 S ECXMST=ECXPAT("MST STAT"),ECXSTATE=ECXPAT("STATE")
"RTN","ECXSCX2",24,0)
 S ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP")
"RTN","ECXSCX2",25,0)
 S ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXSCX2",26,0)
 S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXSCX2",27,0)
 ; changes for 2001
"RTN","ECXSCX2",28,0)
 S ECXPOS=ECXPAT("POS"),ECXPHI=ECXPAT("PHI")
"RTN","ECXSCX2",29,0)
 ;- Agent Orange location
"RTN","ECXSCX2",30,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXSCX2",31,0)
 ;OEF/OIF data
"RTN","ECXSCX2",32,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXSCX2",33,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXSCX2",34,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXSCX2",35,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXSCX2",36,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXSCX2",37,0)
 ; - PROJ 112/SHAD Indicator
"RTN","ECXSCX2",38,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXSCX2",39,0)
 ; - Race and Ethnicity
"RTN","ECXSCX2",40,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXSCX2",41,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXSCX2",42,0)
 ; - Environmental Contaminants
"RTN","ECXSCX2",43,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXSCX2",44,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXSCX2",45,0)
 S ECXERI=ECXPAT("ERI")
"RTN","ECXSCX2",46,0)
 ;get vietnam indicator fy14 144 cvw
"RTN","ECXSCX2",47,0)
 S ECXVNS=ECXPAT("VIETNAM")
"RTN","ECXSCX2",48,0)
 S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune Status
"RTN","ECXSCX2",49,0)
 Q
"RTN","ECXSCX2",50,0)
 ;
"RTN","ECXSCX2",51,0)
PAT2(ECXDFN,ECXDATE)    ;get date specific patient data
"RTN","ECXSCX2",52,0)
 N K,X
"RTN","ECXSCX2",53,0)
 ;get primary care data
"RTN","ECXSCX2",54,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXSCX2",55,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXSCX2",56,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXSCX2",57,0)
 ;get inpatient data
"RTN","ECXSCX2",58,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXTS=$P(X,U,3)
"RTN","ECXSCX2",59,0)
 S ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXSCX2",60,0)
 ;- set national patient record flag if exist
"RTN","ECXSCX2",61,0)
 D NPRF^ECXUTL5
"RTN","ECXSCX2",62,0)
 Q
"RTN","ECXSCX2",63,0)
 ;
"RTN","ECXSCX2",64,0)
FILE2(ECXFILE,EC7,ECODE) ;file record
"RTN","ECXSCX2",65,0)
 N DA,DIK,X S X=""
"RTN","ECXSCX2",66,0)
 F  S X=$O(ECODE(X)) Q:X=""  S ^ECX(ECXFILE,EC7,X)=ECODE(X)
"RTN","ECXSCX2",67,0)
 S DA=EC7,DIK="^ECX("_ECXFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXSCX2",68,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSCX2",69,0)
 Q
"RTN","ECXSCX2",70,0)
 ;
"RTN","ECXSCX2",71,0)
CBOC(MDIV) ;Determine whether patient's facility was CBOC
"RTN","ECXSCX2",72,0)
 N LOCARR,DIC,DR,DIQ,DA,INST,FTYP
"RTN","ECXSCX2",73,0)
 S DIC=40.8,DA=MDIV,DR=".07",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",74,0)
 S INST=$G(LOCARR(40.8,MDIV,.07,"I")) I INST="" Q ""
"RTN","ECXSCX2",75,0)
 K LOCARR S DIC=4,DA=INST,DR="13",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",76,0)
 S FTYP=$G(LOCARR(4,INST,13,"I")) I FTYP="" Q ""
"RTN","ECXSCX2",77,0)
 K LOCARR S DIC=4.1,DA=FTYP,DR=".01",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",78,0)
 Q $S($G(LOCARR(4.1,FTYP,.01,"I"))="CBOC":"Y",1:"")
"RTN","ECXSCX3")
0^19^B21200160^B12749405
"RTN","ECXSCX3",1,0)
ECXSCX3 ;ALB/DHE- DSS Clinic & Stop Codes Validity Report 728.44 ;3/4/13  15:52
"RTN","ECXSCX3",2,0)
 ;;3.0;DSS EXTRACTS;**120,144**;Dec 22, 1997;Build 9
"RTN","ECXSCX3",3,0)
EN ;entry point from option
"RTN","ECXSCX3",4,0)
 ;
"RTN","ECXSCX3",5,0)
 N ZTDESC,ZTRTN,ZTSAVE,ZTSK,ZUSR,ZTDTH,POP,ECXPORT,CNT,NUM ;144
"RTN","ECXSCX3",6,0)
 W !!,"This report will display stop code information of the ACTIVE ",!,"clinics in the Clinics and Stop Code file (#728.44).  It will",!,"display stop codes that do not conform to the Business Rules for ",!,"Valid Stop Codes." ;144
"RTN","ECXSCX3",7,0)
 I '$D(^ECX(728.44)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCX3",8,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXSCX3",9,0)
 .K ^TMP($J,"ECXPORT") ;144
"RTN","ECXSCX3",10,0)
 .S ^TMP($J,"ECXPORT",0)="IEN^CLINIC NAME^PRIMARY STOP CODE^SECONDARY CREDIT STOP CODE^DSS PRIMARY STOP CODE^DSS SECONDARY CREDIT CODE^4 CHARACTER NATIONAL CODE^ERROR 1^ERROR 2^ERROR 3^WARNING" ;144
"RTN","ECXSCX3",11,0)
 .S CNT=1 ;144
"RTN","ECXSCX3",12,0)
 .D START ;144
"RTN","ECXSCX3",13,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXSCX3",14,0)
 .K ECXERR,WARNING D ^ECXKILL ;144
"RTN","ECXSCX3",15,0)
 S %ZIS="Q" D ^%ZIS G:POP EXIT
"RTN","ECXSCX3",16,0)
 I $D(IO("Q")) D  Q
"RTN","ECXSCX3",17,0)
 . K ZTSAVE S ZTDESC="DSS Identify Invalid Stop and Credit Stop Codes",ZTRTN="START^ECXSCX3",ZTDTH=$H
"RTN","ECXSCX3",18,0)
 . D ^%ZTLOAD
"RTN","ECXSCX3",19,0)
 . D ^%ZISC,HOME^%ZIS
"RTN","ECXSCX3",20,0)
 . W !,$S($D(ZTSK):"REQUEST QUEUED!",1:"REQUEST CANCELLED!")
"RTN","ECXSCX3",21,0)
 D START
"RTN","ECXSCX3",22,0)
EXIT D ^%ZISC,HOME^%ZIS
"RTN","ECXSCX3",23,0)
 Q
"RTN","ECXSCX3",24,0)
START ; queued entry to print report
"RTN","ECXSCX3",25,0)
 U IO
"RTN","ECXSCX3",26,0)
 N CLIEN,CODE,ERR,QUIT,WRN,TOT,CODE1,CODE2,CODE3,CODE4,CODE5,CLNAME,DATE
"RTN","ECXSCX3",27,0)
 N I,INACT,Y,HEAD,NONAME,QFLG,LN,PG,DAT,REACT
"RTN","ECXSCX3",28,0)
 K WARNING,ECXERR,TYPE
"RTN","ECXSCX3",29,0)
 S QFLG=0,$P(LN,"-",80)="",PG=0
"RTN","ECXSCX3",30,0)
 S TOT=0,QUIT=""
"RTN","ECXSCX3",31,0)
 I '$G(ECXPORT) D HEAD ;144
"RTN","ECXSCX3",32,0)
 S CLIEN=0 F  S CLIEN=$O(^ECX(728.44,CLIEN)) Q:'CLIEN  D  Q:QUIT
"RTN","ECXSCX3",33,0)
 . Q:'$D(^ECX(728.44,CLIEN,0))
"RTN","ECXSCX3",34,0)
 . S DAT=$G(^SC(CLIEN,"I")),INACT=+DAT,REACT=$P(DAT,"^",2)
"RTN","ECXSCX3",35,0)
 . ;S INACT=$P(^ECX(728.44,CLIEN,0),"^",10)
"RTN","ECXSCX3",36,0)
 . ;I (INACT'>DT)&(INACT'="") Q
"RTN","ECXSCX3",37,0)
 . I INACT,('REACT),INACT'>DT Q
"RTN","ECXSCX3",38,0)
 . I INACT,INACT'>DT I REACT,DT<REACT Q
"RTN","ECXSCX3",39,0)
 . S CLNAME=$S($G(CLIEN)>0:$E($$GET1^DIQ(44,CLIEN,.01,"E"),1,30),1:NONAME)
"RTN","ECXSCX3",40,0)
 . K WARNING,ECXERR,TYPE,ERR,WRN
"RTN","ECXSCX3",41,0)
 . S DATE=DT
"RTN","ECXSCX3",42,0)
 . S CODE1=$P(^ECX(728.44,CLIEN,0),"^",2),TYPE="Stop Code" D STOP^ECXSTOP(CODE1,TYPE,CLIEN,DATE)
"RTN","ECXSCX3",43,0)
 . S CODE2=$P(^ECX(728.44,CLIEN,0),"^",3),TYPE="Credit Stop Code" D STOP^ECXSTOP(CODE2,TYPE,CLIEN,DATE)
"RTN","ECXSCX3",44,0)
 . S CODE3=$P(^ECX(728.44,CLIEN,0),"^",4),TYPE="DSS Stop Code" D STOP^ECXSTOP(CODE3,TYPE,CLIEN,DATE)
"RTN","ECXSCX3",45,0)
 . S CODE4=$P(^ECX(728.44,CLIEN,0),"^",5),TYPE="DSS Credit Stop Code" D STOP^ECXSTOP(CODE4,TYPE,CLIEN,DATE)
"RTN","ECXSCX3",46,0)
 . S CODE5=$P(^ECX(728.44,CLIEN,0),"^",8),TYPE="DSS 4CHAR National Code" D STOP^ECXSTOP(CODE5,TYPE,CLIEN,DATE) ;144 CVW
"RTN","ECXSCX3",47,0)
 . I $D(ECXERR)!($D(WARNING)) S TOT=TOT+1 D  Q:QUIT
"RTN","ECXSCX3",48,0)
 . . I (CODE5'="")&($$GET1^DIQ(728.441,CODE5,.01)'="") S CODE5=$$GET1^DIQ(728.441,CODE5,.01)
"RTN","ECXSCX3",49,0)
 . . I $G(ECXPORT) D  Q  ;144
"RTN","ECXSCX3",50,0)
 . . . S ^TMP($J,"ECXPORT",CNT)=CLIEN_"^"_CLNAME_"^"_$G(CODE1)_"^"_$G(CODE2)_"^"_$G(CODE3)_"^"_$G(CODE4)_"^"_$G(CODE5)_"^" ;144
"RTN","ECXSCX3",51,0)
 . . . S NUM=0 F I=1:1:3 S:NUM'="" NUM=$O(ECXERR(NUM)) S ^TMP($J,"ECXPORT",CNT)=^TMP($J,"ECXPORT",CNT)_$S(NUM'="":$G(ECXERR(NUM)),1:"")_"^" ;144
"RTN","ECXSCX3",52,0)
 . . . S NUM=+$O(WARNING(0)) S ^TMP($J,"ECXPORT",CNT)=^TMP($J,"ECXPORT",CNT)_$G(WARNING(NUM)),CNT=CNT+1 ;144
"RTN","ECXSCX3",53,0)
 . . I $Y>(IOSL-5) D HEAD
"RTN","ECXSCX3",54,0)
 . . W !!,CLIEN,?6,CLNAME,?46,$G(CODE1),?54,$G(CODE2),?62,$G(CODE3),?68,$G(CODE4),?75,$G(CODE5)
"RTN","ECXSCX3",55,0)
 . . I $D(ECXERR) W !,"ERRORS:" D
"RTN","ECXSCX3",56,0)
 . . . S I=0 F  S I=$O(ECXERR(I)) Q:'I  D  Q:QUIT
"RTN","ECXSCX3",57,0)
 . . . . W !?6,ECXERR(I) D ADD
"RTN","ECXSCX3",58,0)
 . . I $D(WARNING) W !,"WARNINGS:" D
"RTN","ECXSCX3",59,0)
 . . . S I=0 F  S I=$O(WARNING(I)) Q:'I  D  Q:QUIT
"RTN","ECXSCX3",60,0)
 . . . . W !?6,WARNING(I) D ADD
"RTN","ECXSCX3",61,0)
 Q:QUIT!($G(ECXPORT))  ;144
"RTN","ECXSCX3",62,0)
 ;
"RTN","ECXSCX3",63,0)
OUT ;
"RTN","ECXSCX3",64,0)
 I TOT'>0 W !!!?6,"NO PROBLEMS FOUND."
"RTN","ECXSCX3",65,0)
 E  W !!!,?10,TOT," PROBLEM CLINICS FOUND."
"RTN","ECXSCX3",66,0)
 W:$Y @IOF D ^%ZISC S ZTREQ="@"
"RTN","ECXSCX3",67,0)
 K QFLG,PG,LN,ECXERR,WARNING
"RTN","ECXSCX3",68,0)
 D ^ECXKILL
"RTN","ECXSCX3",69,0)
 Q
"RTN","ECXSCX3",70,0)
 ;
"RTN","ECXSCX3",71,0)
HEAD ; header for worksheet
"RTN","ECXSCX3",72,0)
 W:$E(IOST,1,2)["C-"!(PG>1) @IOF S PG=PG+1
"RTN","ECXSCX3",73,0)
 W !,"DSS CLINIC & STOP CODES VALIDITY REPORT",?71,"Page: ",PG
"RTN","ECXSCX3",74,0)
 W !!,"IEN#",?6,"CLINIC NAME",?46,"PRIM",?54,"2NDARY",?62,"DSS",?68,"DSS",?75,"DSS"   ;144 CVW
"RTN","ECXSCX3",75,0)
 W !?46,"STOP",?54,"CREDIT",?62,"PRIM",?68,"2NDARY",?75,"4CHAR"   ;144 CVW
"RTN","ECXSCX3",76,0)
 W !?46,"CODE",?54,"STOP",?62,"STOP",?68,"CREDIT",?75,"NATL"    ;144 CVW
"RTN","ECXSCX3",77,0)
 W !?54,"CODE",?62,"CODE",?68,"CODE",?75,"CODE"      ;144 CVW
"RTN","ECXSCX3",78,0)
 W !,LN
"RTN","ECXSCX3",79,0)
 Q
"RTN","ECXSCX3",80,0)
 ;
"RTN","ECXSCX3",81,0)
PAUSE N DIR,DIRUT,X,Y
"RTN","ECXSCX3",82,0)
 F  Q:$Y>(IOSL-3)  W !
"RTN","ECXSCX3",83,0)
 S DIR(0)="E"
"RTN","ECXSCX3",84,0)
 D ^DIR
"RTN","ECXSCX3",85,0)
 I ('(+Y))!($D(DIRUT)) S QUIT=1
"RTN","ECXSCX3",86,0)
 Q
"RTN","ECXSCX3",87,0)
ADD I $E(IOST,1,2)="C-",($Y>(IOSL-5)) D
"RTN","ECXSCX3",88,0)
 . D PAUSE Q:QUIT
"RTN","ECXSCX3",89,0)
 . D HEAD
"RTN","ECXSCX3",90,0)
 I $E(IOST,1,2)'="C-",($Y>(IOSL-5)) D HEAD
"RTN","ECXSCX3",91,0)
 Q
"RTN","ECXSCX3",92,0)
 ;
"RTN","ECXSCXN")
0^20^B86877891^B73018945
"RTN","ECXSCXN",1,0)
ECXSCXN ;ALB/JAP  Clinic Extract ;4/16/13  11:27
"RTN","ECXSCXN",2,0)
 ;;3.0;DSS EXTRACTS;**24,27,29,30,31,32,33,39,46,49,52,71,84,92,107,105,120,124,127,132,136,144**;Dec 22, 1997;Build 9
"RTN","ECXSCXN",3,0)
 ;
"RTN","ECXSCXN",4,0)
BEG ;entry point from option
"RTN","ECXSCXN",5,0)
 D SETUP Q:ECFILE=""  D ^ECXTRAC,^ECXKILL
"RTN","ECXSCXN",6,0)
 Q
"RTN","ECXSCXN",7,0)
 ;
"RTN","ECXSCXN",8,0)
START ;entry point from taskmgr
"RTN","ECXSCXN",9,0)
 N DIC,EXNUM,I,LOCARR,OUT,P1,P2,P3,PROCESS,SOURCE,STOP,STAT,TOSEND
"RTN","ECXSCXN",10,0)
 N TIU,X,Y,ECXNPRFI
"RTN","ECXSCXN",11,0)
 N ECXICD10P,ECXICD101,ECXICD102,ECXICD103,ECXICD104
"RTN","ECXSCXN",12,0)
 F I=1:1:8 S @("ECXCPT"_I)=""
"RTN","ECXSCXN",13,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXSCXN",14,0)
 F I=1:1:4 S @("ECXICD10"_I)=""
"RTN","ECXSCXN",15,0)
 S (OUT,QFLG,ECRN)=0,(ECXICD9P,ECXOBI,ECXICD10P)=""
"RTN","ECXSCXN",16,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL"),^TMP($J,"SDAMA301") ;136
"RTN","ECXSCXN",17,0)
 ;get ien for tiu in file #839.7
"RTN","ECXSCXN",18,0)
 S DIC="^PX(839.7,",DIC(0)="X",X="TEXT INTEGRATION UTILITIES"
"RTN","ECXSCXN",19,0)
 D ^DIC S TIU=+Y,ECED=ECED+.3,ECXCLIN=0 K DIC,Y
"RTN","ECXSCXN",20,0)
 ;get clinic default appt length, type, division
"RTN","ECXSCXN",21,0)
 F  S ECXCLIN=$O(^SC(ECXCLIN)) Q:'ECXCLIN  D
"RTN","ECXSCXN",22,0)
 .K LOCARR S DIC=44,DA=ECXCLIN,DR="2;3.5;1912",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",23,0)
 .D EN^DIQ1
"RTN","ECXSCXN",24,0)
 .Q:$G(LOCARR(44,ECXCLIN,2,"I"))'="C"
"RTN","ECXSCXN",25,0)
 .S ALEN=+$G(LOCARR(44,ECXCLIN,1912,"I"))
"RTN","ECXSCXN",26,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=ALEN,ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",27,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=^TMP($J,"ECXCL",ECXCLIN)_"^"_ALEN_"^"_$G(LOCARR(44,ECXCLIN,2,"I"))_"^"_+$G(LOCARR(44,ECXCLIN,3.5,"I"))
"RTN","ECXSCXN",28,0)
 .D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",29,0)
 .K P1,P2,P3,TOSEND,ECXDIV
"RTN","ECXSCXN",30,0)
 ;get from file #44 any no-shows & get encounters from #409.68
"RTN","ECXSCXN",31,0)
 D NOSHOW^ECXSCXN1(ECSD1,ECED),ENCNTR(ECSD1,ECED)
"RTN","ECXSCXN",32,0)
 ;send missing clinic msg
"RTN","ECXSCXN",33,0)
 D:$D(^TMP($J,"ECXS")) EN^ECXSCX1
"RTN","ECXSCXN",34,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL"),^TMP($J,"SDAMA301") ;136
"RTN","ECXSCXN",35,0)
 Q
"RTN","ECXSCXN",36,0)
 ;
"RTN","ECXSCXN",37,0)
ENCNTR(ECSD1,ECED) ;search file #409.68 for encounter data
"RTN","ECXSCXN",38,0)
 N CHKOUT,ECD,STAT,STOP,MDIV,ECXEDIS,CNT,ECXARR,NODE ;136
"RTN","ECXSCXN",39,0)
 N ECXESC,ECXECL,ECXCLST
"RTN","ECXSCXN",40,0)
 S ECD=ECSD1
"RTN","ECXSCXN",41,0)
 F  S ECD=$O(^SCE("B",ECD)) Q:('ECD!(ECD>ECED))!(QFLG)  S ECXIEN=0 D
"RTN","ECXSCXN",42,0)
 .F  S ECXIEN=$O(^SCE("B",ECD,ECXIEN)) Q:'ECXIEN  D  Q:QFLG
"RTN","ECXSCXN",43,0)
 ..Q:'$D(^SCE(ECXIEN,0))
"RTN","ECXSCXN",44,0)
 ..D INTPAT^ECXSCX2 K LOCARR S DIC=409.68,DA=ECXIEN
"RTN","ECXSCXN",45,0)
 ..S DR=".01;.02;.03;.04;.05;.06;.07;.08;.11;.12;.13",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",46,0)
 ..D EN^DIQ1
"RTN","ECXSCXN",47,0)
 ..S ECXTI=$P($$FMTE^XLFDT(+$G(LOCARR(409.68,ECXIEN,.01,"I")),1),"@",2)
"RTN","ECXSCXN",48,0)
 ..S ECXTI=$E(($TR(ECXTI,":","")_"000000"),1,6)
"RTN","ECXSCXN",49,0)
 ..S:ECXTI="000000" ECXTI="000300" S MDIV=+$G(LOCARR(409.68,ECXIEN,.11,"I"))
"RTN","ECXSCXN",50,0)
 ..S STOP=+$G(LOCARR(409.68,ECXIEN,.03,"I"))
"RTN","ECXSCXN",51,0)
 ..S CHKOUT=+$G(LOCARR(409.68,ECXIEN,.07,"I"))
"RTN","ECXSCXN",52,0)
 ..S PROCESS=+$G(LOCARR(409.68,ECXIEN,.08,"I"))
"RTN","ECXSCXN",53,0)
 ..S STAT=$G(LOCARR(409.68,ECXIEN,.12,"I"))
"RTN","ECXSCXN",54,0)
 ..S ECXDFN=+$G(LOCARR(409.68,ECXIEN,.02,"I"))
"RTN","ECXSCXN",55,0)
 ..Q:(ECXDFN=0)!('CHKOUT)
"RTN","ECXSCXN",56,0)
 ..S:STAT="" STAT="ZZ" S STAT=";"_STAT_";"
"RTN","ECXSCXN",57,0)
 ..Q:";3;4;5;6;7;9;10;13;"[STAT
"RTN","ECXSCXN",58,0)
 ..Q:('STOP)!(PROCESS=4)!(+$G(LOCARR(409.68,ECXIEN,.06,"I")))
"RTN","ECXSCXN",59,0)
 ..S ECXDATE=+$G(LOCARR(409.68,ECXIEN,.01,"I"))
"RTN","ECXSCXN",60,0)
 ..S ECXCLIN=+$G(LOCARR(409.68,ECXIEN,.04,"I"))
"RTN","ECXSCXN",61,0)
 ..Q:$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,3)'="C"
"RTN","ECXSCXN",62,0)
 ..S ECXVISIT=+$G(LOCARR(409.68,ECXIEN,.05,"I"))
"RTN","ECXSCXN",63,0)
 ..S ECXENEL=+$G(LOCARR(409.68,ECXIEN,.13,"I"))
"RTN","ECXSCXN",64,0)
 ..Q:'ECXVISIT
"RTN","ECXSCXN",65,0)
 ..S ECXERR=0
"RTN","ECXSCXN",66,0)
 ..D PAT1^ECXSCX2(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",67,0)
 ..D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",68,0)
 ..Q:TOSEND=6
"RTN","ECXSCXN",69,0)
 ..K LOCARR S DIC=40.7,DA=STOP,DR="1",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",70,0)
 ..S ECXSTOP=$$RJ^XLFSTR($G(LOCARR(40.7,STOP,1,"I")),3,0)
"RTN","ECXSCXN",71,0)
 ..; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXSCXN",72,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXSCXN",73,0)
 ..;get date specific patient data
"RTN","ECXSCXN",74,0)
 ..D PAT2^ECXSCX2(ECXDFN,ECXDATE)
"RTN","ECXSCXN",75,0)
 ..;get national patient record flag if exist
"RTN","ECXSCXN",76,0)
 ..D NPRF^ECXUTL5
"RTN","ECXSCXN",77,0)
 ..;get visit specific data
"RTN","ECXSCXN",78,0)
 ..S ECXERR=0 D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",79,0)
 ..F I=1:1:8 S @("ECXCPT"_I)=$G(ECXVIST("CPT"_I))
"RTN","ECXSCXN",80,0)
 ..S ECXICD9P=$G(ECXVIST("ICD9P"))
"RTN","ECXSCXN",81,0)
 ..F I=1:1:4 S @("ECXICD9"_I)=$G(ECXVIST("ICD9"_I))
"RTN","ECXSCXN",82,0)
 ..S SOURCE=ECXVIST("SOURCE"),ECXAO=ECXVIST("AO"),ECXIR=ECXVIST("IR")
"RTN","ECXSCXN",83,0)
 ..S ECXMIL=ECXVIST("MST"),ECXPROV=ECXVIST("PROV"),ECXSHAD=ECXVIST("SHAD")
"RTN","ECXSCXN",84,0)
 ..S ECXECL=ECXVIST("ENCCL"),ECXESC=ECXVIST("ENCSC") ;144
"RTN","ECXSCXN",85,0)
 ..S ECPRNPI=$$NPI^XUSNPI("Individual_ID",ECXPROV,ECXDATE)
"RTN","ECXSCXN",86,0)
 ..S:+ECPRNPI'>0 ECPRNPI="" S ECPRNPI=$P(ECPRNPI,U)
"RTN","ECXSCXN",87,0)
 ..S ECXPROVP=ECXVIST("PROV CLASS"),ECXPROVN=ECXVIST("PROV NPI")
"RTN","ECXSCXN",88,0)
 ..F I=1:1:7 S @("ECSP"_I)=$P($G(ECXVIST("PROVS"_I)),U) ;144 2 new prov
"RTN","ECXSCXN",89,0)
 ..F I=1:1:7 S @("ECSPPC"_I)=$P($G(ECXVIST("PROVS"_I)),U,2) ;144 2 new person class
"RTN","ECXSCXN",90,0)
 ..F I=1:1:7 S @("ECSPNPI"_I)=$P($G(ECXVIST("PROVS"_I)),U,3) ;144 2 new NPI
"RTN","ECXSCXN",91,0)
 ..S ECXECE=ECXVIST("PGE"),ECXHNC=ECXVIST("HNC")
"RTN","ECXSCXN",92,0)
 ..K LOCARR S DIC=8,DA=ECXENEL,DR="8",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",93,0)
 ..S ECXENEL=+$G(LOCARR(8,ECXENEL,8,"I"))
"RTN","ECXSCXN",94,0)
 ..S:ECXENEL ECXENEL=$$ELIG^ECXUTL3(ECXENEL,ECXSVC)
"RTN","ECXSCXN",95,0)
 ..S ECXCBOC=$S(MDIV'="":$$CBOC^ECXSCX2(.MDIV),1:"")  ;is cboc facility?
"RTN","ECXSCXN",96,0)
 ..S ECXEDIS=$$EDIS^ECXUTL1(ECXDFN,ECD,"C",ECXVISIT,ECXSTOP) ;136 Set emergency room disposition
"RTN","ECXSCXN",97,0)
 ..;setup feeder key and file in extract records
"RTN","ECXSCXN",98,0)
 ..S (ECXKEY,ECXDSSD)=""
"RTN","ECXSCXN",99,0)
 ..;xray (105) or lab (108)
"RTN","ECXSCXN",100,0)
 ..I (ECXSTOP=105)!(ECXSTOP=108) D  Q
"RTN","ECXSCXN",101,0)
 ...S ECXKEY=ECXSTOP_"00003000000",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",102,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE       ;- Don't file rec if no encounter num
"RTN","ECXSCXN",103,0)
 ..;appointments
"RTN","ECXSCXN",104,0)
 ..I PROCESS=1 D  Q     ;get appt length 136 Section changed to use SDAMA301 call
"RTN","ECXSCXN",105,0)
 ...N CNT,ECXARR
"RTN","ECXSCXN",106,0)
 ...K ^TMP($J,"SDAMA301")
"RTN","ECXSCXN",107,0)
 ...S ECXARR(1)=ECXDATE_";"_ECXDATE,ECXARR(2)=ECXCLIN,ECXARR(4)=ECXDFN,ECXARR("FLDS")="5;7;10;18" S CNT=$$SDAPI^SDAMA301(.ECXARR)
"RTN","ECXSCXN",108,0)
 ...Q:CNT=0  I CNT=-1 D ERR^ECXUTL1 S QFLG=1 Q  ;Stop if no appts (CNT=0) send error message and stop extract if CNT=-1 (system error)
"RTN","ECXSCXN",109,0)
 ...S NODE=^TMP($J,"SDAMA301",ECXDFN,ECXCLIN,ECXDATE)
"RTN","ECXSCXN",110,0)
 ...S ECXOBI=$S($P(NODE,U,7)="Y":"O",1:"") ;convert overbook indicator from Y to O otherwise send null
"RTN","ECXSCXN",111,0)
 ...S ALEN=$$RJ^XLFSTR($P(NODE,U,5),3,0)
"RTN","ECXSCXN",112,0)
 ...S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXDL",ECXCLIN)),U,2)
"RTN","ECXSCXN",113,0)
 ...S ECXSTOP=P1
"RTN","ECXSCXN",114,0)
 ...S ECXPVST=+$P(NODE,U,18),ECXATYP=+$P(NODE,U,10)
"RTN","ECXSCXN",115,0)
 ...I TOSEND'=3 D
"RTN","ECXSCXN",116,0)
 ....S ECXKEY=P1_P2_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",117,0)
 ....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",118,0)
 ...I TOSEND=3 D
"RTN","ECXSCXN",119,0)
 ....S ECXKEY=P1_"000"_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",120,0)
 ....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",121,0)
 ...I TOSEND=3 D
"RTN","ECXSCXN",122,0)
 ....S ECXKEY=P2_"000"_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",123,0)
 ....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",124,0)
 ..I PROCESS=2 D  Q
"RTN","ECXSCXN",125,0)
 ...S ALEN=0
"RTN","ECXSCXN",126,0)
 ...I SOURCE=TIU S ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",127,0)
 ...S:+ALEN=0 ALEN="030" S ECXKEY=P1_P2_ALEN_P3_"0",ECXSTOP=P1
"RTN","ECXSCXN",128,0)
 ...S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",129,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",130,0)
 ..;dispositions
"RTN","ECXSCXN",131,0)
 ..I PROCESS=3 D  Q
"RTN","ECXSCXN",132,0)
 ...S ECXKEY=ECXSTOP_"47906000000",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",133,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",134,0)
 Q
"RTN","ECXSCXN",135,0)
 ;
"RTN","ECXSCXN",136,0)
FILE ;record setup for file #727.827
"RTN","ECXSCXN",137,0)
 ;NODE(0)
"RTN","ECXSCXN",138,0)
 ;Sequence Number,Year Month, Extract Number (EC23)^facility (ECXDIV)^
"RTN","ECXSCXN",139,0)
 ;dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^
"RTN","ECXSCXN",140,0)
 ;in/out (ECXA)^Day $$ECXDATE^ECXUTL(ECXDATE,ECXYM)^Feeder Key (ECXKEY) ^
"RTN","ECXSCXN",141,0)
 ;Overbooked Indicator (ECXOBI)^Clinic Name (ECXCLIN)^Treating Specialty (ECXTSC) ^
"RTN","ECXSCXN",142,0)
 ;Time (ECXTI)^Primary Care Team (ECPTTM)^primary care provider(ECPTPR)^
"RTN","ECXSCXN",143,0)
 ;Primary Care PRV Person Class(ECCLAS)^Provider (ECXPROV)^
"RTN","ECXSCXN",144,0)
 ;provider person class (ECPROVP)^CPT Code Qty & Modifiers #1 (ECXCPT1)^
"RTN","ECXSCXN",145,0)
 ;CPT Code Qty & Modifiers #3 (ECXCPT3)^CPT Code Qty & Modifiers #3 (ECXCPT3)^
"RTN","ECXSCXN",146,0)
 ;CPT Code Qty & Modifiers #4 (ECXCPT4)^CPT Code Qty & Modifiers #5 (ECXCPT5)^
"RTN","ECXSCXN",147,0)
 ;NODE(1)
"RTN","ECXSCXN",148,0)
 ;CPT Code Qty & Modifiers #6 (ECXCPT6)^CPT Code Qty & Modifiers #7 (ECXCPT7)^
"RTN","ECXSCXN",149,0)
 ;CPT Code Qty & Modifiers #8 (ECXCPT8)^Primary ICD9 Code (ECXICD9P)^
"RTN","ECXSCXN",150,0)
 ;Secondary ICD9 Code 1 (ECXICD91)^Secondary ICD9 Code 2 (ECXICD92)
"RTN","ECXSCXN",151,0)
 ;Secondary ICD9 Code 3 (ECXICD93)^Secondary ICD9 Code 4 (ECXICD94)
"RTN","ECXSCXN",152,0)
 ;date of birth (ECDOB)^Eligibility (ECXELIG)^Veteran (ECXVET)^
"RTN","ECXSCXN",153,0)
 ;Race (ECXRACE)^POW status (ECXPST)^POW Location (ECXPLOC)^ Radiation Status(ECXRST)^
"RTN","ECXSCXN",154,0)
 ;Radiation Encounter Indicator (ECXIR)^Agent Orange Status (ECXAST)^
"RTN","ECXSCXN",155,0)
 ;Agent Orange Location(ECXAO)^Master Patient Index ((ECXMPI)^DSS Product Department (ECXDSSD)^
"RTN","ECXSCXN",156,0)
 ;Sex (ECXSEX)^zip code (ECXZIP)^Place Holder^Place Holder^Encounter Eligibility (ECXENEL)^
"RTN","ECXSCXN",157,0)
 ;MST Status(ECXMST)^MST Encounter Indicator (ECXMIL)^Place Holder^Place Holder^
"RTN","ECXSCXN",158,0)
 ;Enrollment Location ((ECXENRL)^State (ECXSTATE)^County (ECXCNTY)^
"RTN","ECXSCXN",159,0)
 ;Associate PC Provider (ECASPR)^Associate PC Prov. Person Class (ECCLAS2)^Place Holder^
"RTN","ECXSCXN",160,0)
 ;DOM, PRRTP AND SAARTP Indicator (ECXDOM)^ Enrollment Category (ECXCAT)^
"RTN","ECXSCXN",161,0)
 ;NODE(2)
"RTN","ECXSCXN",162,0)
 ;Enrollment Status (ECXSTAT)^ SHAD Status (ECXPRIOR or ECXSHADI) ^
"RTN","ECXSCXN",163,0)
 ;Purple Heart Indicator (ECXPHI)^Period of Service (ECXPOS)^
"RTN","ECXSCXN",164,0)
 ;Observation Patient Indicator (ECXOBS)^ Encounter Number (ECXENC)^
"RTN","ECXSCXN",165,0)
 ;Agent Orange Location (ECXAOL)^Production Division Code (ECXPDIV)^ Appointment Type (ECXATYP)^
"RTN","ECXSCXN",166,0)
 ;Purpose of Visit (ECXPVST)^Means Test (ECXMTST)^Head & Neck Cancer Indicator (ECXHNCI)^
"RTN","ECXSCXN",167,0)
 ;Ethnicity(ECXETH)^Race 1(ECXRC1)^CBOC Status (ECXCBOC)^Place Holder^Enrollment Priority (ECXPRIOR_ECXSBGRP)^
"RTN","ECXSCXN",168,0)
 ;User Enrollee (ECXUESTA)^ Patient Type(ECXPTYPE)^CV Status Eligibility (ECXCVE)^
"RTN","ECXSCXN",169,0)
 ;CV Eligibility End Date (ECXCVEDT)^Encounter CV (ECXCVENC)^National Patient Record Flag (ECXNPRFI)^
"RTN","ECXSCXN",170,0)
 ;SW Asia Conditions (ECXEST)^Encounter SWAC (ECXECE)^ERI (ECXERI)^Enc Head/Neck CA (ECXHNC)^
"RTN","ECXSCXN",171,0)
 ;OEF/OIF (ECXOEF)^ OEF/OIF Return Date (ECXOEFDT)^Associate PC Provider NPI (ECASNPI)^
"RTN","ECXSCXN",172,0)
 ;Primary Care Provider NPI (ECPTNPI)^Provider NPI(ECPRNPI)^
"RTN","ECXSCXN",173,0)
 ;NODE(3)
"RTN","ECXSCXN",174,0)
 ;Country Code (ECXCNTRY)^Encounter SHAD (ECXSHAD)^PATCAT (ECXPATCAT)^Secondary Provider #1 (ECSP1)^
"RTN","ECXSCXN",175,0)
 ;Secondary Provider #1 PC (ECSPPC1)^Secondary Provider #1 NPI (ECSPNPI1)^Secondary Provider #2 (ECSP2)^
"RTN","ECXSCXN",176,0)
 ;Secondary Provider #2 PC (ECSPPC2)^Secondary Provider #2 NPI (ECSPNPI2)^Secondary Provider #3 (ECSP3)^
"RTN","ECXSCXN",177,0)
 ;Secondary Provider #3 PC (ECSPPC3)^Secondary Provider #3 NPI (ECSPNPI3)^Secondary Provider #4 (ECSP4)^
"RTN","ECXSCXN",178,0)
 ;Secondary Provider #4 PC (ECSPPC4)^Secondary Provider #4 NPI (ECSPNPI4)^Secondary Provider #5 (ECSP5)^
"RTN","ECXSCXN",179,0)
 ;Secondary Provider #5 PC (ECSPPC5)^Secondary Provider #5 NPI (ECSPNPI5)^
"RTN","ECXSCXN",180,0)
 ;ED Disposition Code (ECXEDIS)^Primary ICD-10 Code (ECXICD10P)^Secondary ICD-10 Code #1 (ECXICD101)^
"RTN","ECXSCXN",181,0)
 ;Secondary ICD-10 Code #2 (ECXICD102)^Secondary ICD-10 Code #3 (ECXICD103)^Secondary ICD-10 Code #4 (ECXICD104)^
"RTN","ECXSCXN",182,0)
 ;Encounter SC (ECXESC)^Vietnam (ECXVNS)^Secondary Provider #6 (ECSP6)^Secondary Provider #6 PC (ECSPPC6)^
"RTN","ECXSCXN",183,0)
 ;Secondary Provider #6 NPI (ECSPNPI6)^
"RTN","ECXSCXN",184,0)
 ;NODE(4)
"RTN","ECXSCXN",185,0)
 ;Secondary Provider #7 (ECSP7)^Secondary Provider #7 PC (ECSPPC7)^Secondary Provider #7 NPI (ECSPNPI7)^
"RTN","ECXSCXN",186,0)
 ;Camp Lejeune Status (ECXCLST)^Encounter Camp Lejeune (ECXECL)
"RTN","ECXSCXN",187,0)
 ;
"RTN","ECXSCXN",188,0)
 N STR
"RTN","ECXSCXN",189,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get production division
"RTN","ECXSCXN",190,0)
 S EC7=$O(^ECX(727.827,999999999),-1),EC7=EC7+1
"RTN","ECXSCXN",191,0)
 S STR(0)=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSCXN",192,0)
 S STR(0)=STR(0)_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXKEY_U_ECXOBI_U
"RTN","ECXSCXN",193,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXSCXN",194,0)
 N ECXDATA,ECXTSC
"RTN","ECXSCXN",195,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXSCXN",196,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXSCXN",197,0)
 ;done
"RTN","ECXSCXN",198,0)
 S STR(0)=STR(0)_ECXCLIN_U_ECXTSC_U_ECXTI_U_ECPTTM_U_ECPTPR_U_ECCLAS_U
"RTN","ECXSCXN",199,0)
 S STR(0)=STR(0)_ECXPROV_U_ECXPROVP_U_ECXCPT1_U_ECXCPT2_U_ECXCPT3_U
"RTN","ECXSCXN",200,0)
 S STR(0)=STR(0)_ECXCPT4_U_ECXCPT5_U
"RTN","ECXSCXN",201,0)
 S STR(1)=ECXCPT6_U_ECXCPT7_U_ECXCPT8_U_ECXICD9P_U_ECXICD91_U_ECXICD92_U
"RTN","ECXSCXN",202,0)
 S STR(1)=STR(1)_ECXICD93_U_ECXICD94_U_ECXDOB_U_ECXELIG_U_ECXVET_U
"RTN","ECXSCXN",203,0)
 S STR(1)=STR(1)_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXIR_U_ECXAST_U
"RTN","ECXSCXN",204,0)
 S STR(1)=STR(1)_ECXAO_U_ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U
"RTN","ECXSCXN",205,0)
 S STR(1)=STR(1)_$G(ECXPCPNP)_U_U_ECXENEL_U_ECXMST_U
"RTN","ECXSCXN",206,0)
 S STR(1)=STR(1)_ECXMIL_U_U_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXSCXN",207,0)
 S STR(1)=STR(1)_ECXCNTY_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXCAT_U
"RTN","ECXSCXN",208,0)
 S STR(2)=ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_ECXPHI_U_ECXPOS_U_ECXOBS_U_ECXENC_U
"RTN","ECXSCXN",209,0)
 S STR(2)=STR(2)_ECXAOL_U_ECXPDIV_U_ECXATYP_U_ECXPVST_U_ECXMTST_U
"RTN","ECXSCXN",210,0)
 S STR(2)=STR(2)_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXSCXN",211,0)
 I ECXLOGIC>2003 S STR(2)=STR(2)_U_ECXCBOC
"RTN","ECXSCXN",212,0)
 I ECXLOGIC>2004 S STR(2)=STR(2)_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXSCXN",213,0)
 I ECXLOGIC>2005 S STR(2)=STR(2)_U_ECXEST_U_ECXECE
"RTN","ECXSCXN",214,0)
 I ECXLOGIC>2006 S STR(2)=STR(2)_U_ECXERI_U_ECXHNC
"RTN","ECXSCXN",215,0)
 I ECXLOGIC>2007 S STR(2)=STR(2)_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_$G(ECPRNPI)_U
"RTN","ECXSCXN",216,0)
 I ECXLOGIC>2009 S STR(3)=ECXCNTRY
"RTN","ECXSCXN",217,0)
 ;added patcat status, N3 P3
"RTN","ECXSCXN",218,0)
 I ECXLOGIC>2010 S STR(3)=STR(3)_U_ECXSHAD_U_ECXPATCAT
"RTN","ECXSCXN",219,0)
 I ECXLOGIC>2011 S STR(3)=STR(3)_U_ECSP1_U_ECSPPC1_U_ECSPNPI1_U_ECSP2_U_ECSPPC2_U_ECSPNPI2_U_ECSP3_U_ECSPPC3_U_ECSPNPI3_U_ECSP4_U_ECSPPC4_U_ECSPNPI4_U_ECSP5_U_ECSPPC5_U_ECSPNPI5
"RTN","ECXSCXN",220,0)
 ;added icd-10 null for now
"RTN","ECXSCXN",221,0)
 I ECXLOGIC>2012 S STR(3)=STR(3)_U_$G(ECXEDIS)_U_ECXICD10P_U_ECXICD101_U_ECXICD102_U_ECXICD103_U_ECXICD104 ;136
"RTN","ECXSCXN",222,0)
 I ECXLOGIC>2013 S STR(3)=STR(3)_U_ECXESC_U_ECXVNS_U_ECSP6_U_ECSPPC6_U_ECSPNPI6_U ; 144
"RTN","ECXSCXN",223,0)
 I ECXLOGIC>2013 S STR(4)=ECSP7_U_ECSPPC7_U_ECSPNPI7_U_ECXCLST_U_ECXECL ; 144 new provider fields and camp lejeune fields
"RTN","ECXSCXN",224,0)
 D FILE2^ECXSCX2(727.827,EC7,.STR)
"RTN","ECXSCXN",225,0)
 S ECRN=ECRN+1,$P(^ECX(727.827,0),U,3)=EC7
"RTN","ECXSCXN",226,0)
 Q
"RTN","ECXSCXN",227,0)
 ;
"RTN","ECXSCXN",228,0)
SETUP ;set required input for ECXTRAC
"RTN","ECXSCXN",229,0)
 S ECHEAD="CLI"
"RTN","ECXSCXN",230,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSCXN",231,0)
 Q
"RTN","ECXSCXN1")
0^48^B17063992^B14855625
"RTN","ECXSCXN1",1,0)
ECXSCXN1 ;ALB/JAP  Clinic Extract No Shows; 8/28/02 1:11pm ;4/16/13  11:32
"RTN","ECXSCXN1",2,0)
 ;;3.0;DSS EXTRACTS;**71,105,127,132,136,144**;Dec 22, 1997;Build 9
"RTN","ECXSCXN1",3,0)
NOSHOW(ECXSD,ECXED) ;get noshows from file #44
"RTN","ECXSCXN1",4,0)
 ;      ECXSD  = start date, ECXED  = end date
"RTN","ECXSCXN1",5,0)
 N ALEN,CLIN,JDATE,JJ,NODE,NOSHOW,PP,STAT,MDIV,ECXEDIS,CNT,ECXARR,ECXSDSC,ECXEDSC ;136
"RTN","ECXSCXN1",6,0)
 N ECXECL,ECXESC,ECXCLST ;144 Call to INTPAT^ECXSCX2 sets variables to null.  Call to PAT1^ECXSCX2 will set camp lejeune status when available.  Encounter values remain null as appt is a no-show
"RTN","ECXSCXN1",7,0)
 S CLIN=0
"RTN","ECXSCXN1",8,0)
 F  S CLIN=$O(^TMP($J,"ECXCL",CLIN)) Q:'CLIN!($G(QFLG))  D  ;136
"RTN","ECXSCXN1",9,0)
 .Q:$P($G(^TMP($J,"ECXCL",CLIN)),U,3)'="C"
"RTN","ECXSCXN1",10,0)
 .S (P1,P2,P3)=""
"RTN","ECXSCXN1",11,0)
 .D FEEDER^ECXSCX1(CLIN,ECXSD,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN1",12,0)
 .Q:TOSEND=6
"RTN","ECXSCXN1",13,0)
 .;find appts in date range
"RTN","ECXSCXN1",14,0)
 .S ECXSDSC=ECXSD+.1,ECXEDSC=$P(ECXED,".") ;136 get dates back into correct fileman format
"RTN","ECXSCXN1",15,0)
 .S (ALEN,NOSHOW)="" ;136
"RTN","ECXSCXN1",16,0)
 .K ^TMP($J,"SDAMA301") ;136
"RTN","ECXSCXN1",17,0)
 .S ECXARR(1)=ECXSDSC_";"_ECXEDSC,ECXARR(2)=CLIN,ECXARR(3)="NS;NSR",ECXARR("FLDS")="5;7;10;12;18" ;136
"RTN","ECXSCXN1",18,0)
 .S CNT=$$SDAPI^SDAMA301(.ECXARR) ;136
"RTN","ECXSCXN1",19,0)
 .Q:CNT=0  I CNT=-1 D ERR^ECXUTL1 S QFLG=1 Q  ;136 Stop if no data (CNT=0) and send error message if scheduling system down (CNT=-1)
"RTN","ECXSCXN1",20,0)
 .S JJ=0 F  S JJ=$O(^TMP($J,"SDAMA301",CLIN,JJ)) Q:'+JJ  S JDATE="" F  S JDATE=$O(^TMP($J,"SDAMA301",CLIN,JJ,JDATE)) Q:'+JDATE  D  ;136
"RTN","ECXSCXN1",21,0)
 ..S ECXDATE=JDATE,ECXTI=$P($$FMTE^XLFDT(JDATE,1),"@",2) ;136
"RTN","ECXSCXN1",22,0)
 ..S ECXTI=$E(($TR(ECXTI,":","")_"000000"),1,6)
"RTN","ECXSCXN1",23,0)
 ..S:ECXTI="000000" ECXTI="000300"
"RTN","ECXSCXN1",24,0)
 ..S ECXDFN=JJ ;136
"RTN","ECXSCXN1",25,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN) ;added in patch 127
"RTN","ECXSCXN1",26,0)
 ..S NODE=$G(^TMP($J,"SDAMA301",CLIN,JJ,JDATE)),MDIV=$P($G(^SC(CLIN,0)),U,15) ;136
"RTN","ECXSCXN1",27,0)
 ..Q:NODE=""  ;136
"RTN","ECXSCXN1",28,0)
 ..S ECXSHAD=$$GETSHAD ;added in patch 127, finds shad status for appt
"RTN","ECXSCXN1",29,0)
 ..S ECXOBI=$S($P(NODE,U,7)="Y":"O",1:"") ;136
"RTN","ECXSCXN1",30,0)
 ..S NOSHOW="N" ;136 only no-show entries are returned from the SDAMA301 call
"RTN","ECXSCXN1",31,0)
 ..D INTPAT^ECXSCX2 S ECXERR=0
"RTN","ECXSCXN1",32,0)
 ..D PAT1^ECXSCX2(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN1",33,0)
 ..S ALEN=$$RJ^XLFSTR($P(NODE,U,5),3,0) ;136
"RTN","ECXSCXN1",34,0)
 ..D PAT2^ECXSCX2(ECXDFN,ECXDATE)
"RTN","ECXSCXN1",35,0)
 ..S ECXPVST=+$P(NODE,U,18),ECXATYP=+$P(NODE,U,10)  ;136 Get POV & appt type
"RTN","ECXSCXN1",36,0)
 ..S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",CLIN)),U,2)
"RTN","ECXSCXN1",37,0)
 ..S ECXCLIN=CLIN,ECXSTOP=P1
"RTN","ECXSCXN1",38,0)
 ..S ECXEDIS=$$EDIS^ECXUTL1(ECXDFN,ECXDATE,"N",,ECXSTOP) ;136
"RTN","ECXSCXN1",39,0)
 ..S:ECXCPT1="" ECXCPT1="9919901"
"RTN","ECXSCXN1",40,0)
 ..S ECXCBOC=$S(MDIV'="":$$CBOC^ECXSCX2(.MDIV),1:"")
"RTN","ECXSCXN1",41,0)
 ..S (ECXDSSD,ECXENEL,ECXIR,ECXAO,ECXMIL,ECXPROV,ECXPROVP,ECXPROVN)=""
"RTN","ECXSCXN1",42,0)
 ..F I=1:1:7 S (@("ECSP"_I),@("ECSPPC"_I),@("ECSPNPI"_I))="" ;144 2 new prov groups
"RTN","ECXSCXN1",43,0)
 ..I TOSEND'=3 D
"RTN","ECXSCXN1",44,0)
 ...S ECXKEY=P1_P2_ALEN_P3_NOSHOW,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN1",45,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE^ECXSCXN
"RTN","ECXSCXN1",46,0)
 ..I TOSEND=3 D
"RTN","ECXSCXN1",47,0)
 ...S ECXKEY=P1_"000"_ALEN_P3_NOSHOW,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN1",48,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE^ECXSCXN
"RTN","ECXSCXN1",49,0)
 ..I TOSEND=3 D
"RTN","ECXSCXN1",50,0)
 ...S ECXKEY=P2_"000"_ALEN_P3_NOSHOW,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN1",51,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE^ECXSCXN
"RTN","ECXSCXN1",52,0)
 ..;create a record for noshow appended ekg. The code was removed for CTX-0604-70970 CLI Extract Problem EXPANDED to NoShows
"RTN","ECXSCXN1",53,0)
 Q
"RTN","ECXSCXN1",54,0)
 ;GETSHAD section added with patch 127
"RTN","ECXSCXN1",55,0)
GETSHAD() ;Function returns shad value
"RTN","ECXSCXN1",56,0)
 N DIC,LOCARR,DA,DR,SHAD,ECXERR,ECXVIST
"RTN","ECXSCXN1",57,0)
 S SHAD=""
"RTN","ECXSCXN1",58,0)
 I '+$P($G(NODE),U,12) Q SHAD  ;136 Quit if no outpatient encounter pointer
"RTN","ECXSCXN1",59,0)
 S DIC=409.68,DA=$P(NODE,U,12),DR=.05,DIQ(0)="I",DIQ="LOCARR" ;136
"RTN","ECXSCXN1",60,0)
 D EN^DIQ1
"RTN","ECXSCXN1",61,0)
 I $G(LOCARR(409.68,DA,.05,"I")) D
"RTN","ECXSCXN1",62,0)
 .S ECXERR=0
"RTN","ECXSCXN1",63,0)
 .D VISIT^ECXSCX1(ECXDFN,LOCARR(409.68,DA,.05,"I"),.ECXVIST,.ECXERR)
"RTN","ECXSCXN1",64,0)
 .I 'ECXERR S SHAD=ECXVIST("SHAD")
"RTN","ECXSCXN1",65,0)
 Q SHAD
"RTN","ECXSTOP")
0^18^B13978412^B11137426
"RTN","ECXSTOP",1,0)
ECXSTOP ;ALB/DHE Stop Codes/Clinic Stops ;5/9/13  16:05
"RTN","ECXSTOP",2,0)
 ;;3.0;DSS EXTRACTS;**120,126,144**;Dec 22, 1997;Build 9
"RTN","ECXSTOP",3,0)
 ;
"RTN","ECXSTOP",4,0)
STOP(CODE,TYPE,CLIEN,DATE,IEN) ;api to return stop code information
"RTN","ECXSTOP",5,0)
 ;
"RTN","ECXSTOP",6,0)
 ;input:
"RTN","ECXSTOP",7,0)
 ;   code: stop code IEN in #40.7
"RTN","ECXSTOP",8,0)
 ;   type: type REQUIRED (Stop Code, DSS Stop Code, Credit Stop Code, DSS Credit Stop Code)
"RTN","ECXSTOP",9,0)
 ;  clien: clinic IEN in #728.44 (optional)
"RTN","ECXSTOP",10,0)
 ;   date: date of action (default today) (optional)
"RTN","ECXSTOP",11,0)
 ;    ien: ien from edit so lookup won't happen
"RTN","ECXSTOP",12,0)
 ;
"RTN","ECXSTOP",13,0)
 ;ecxerr(err) and warning(wrn) are existing arrays 
"RTN","ECXSTOP",14,0)
 ;make sure they exist!
"RTN","ECXSTOP",15,0)
 ;
"RTN","ECXSTOP",16,0)
 N XCODE,INACT,RTYPE
"RTN","ECXSTOP",17,0)
 Q:'CODE
"RTN","ECXSTOP",18,0)
 Q:(TYPE="")
"RTN","ECXSTOP",19,0)
 S CLIEN=$G(CLIEN)
"RTN","ECXSTOP",20,0)
 I $G(DATE)="" S DATE=DT
"RTN","ECXSTOP",21,0)
 S ERR=$G(ERR)+1,WRN=$G(WRN)+1
"RTN","ECXSTOP",22,0)
 K:ERR=1 ECXERR K:WRN=1 WARNING
"RTN","ECXSTOP",23,0)
 I TYPE="DSS 4CHAR National Code" D  Q  ;144 CVW
"RTN","ECXSTOP",24,0)
 . I (CODE'="")&($$GET1^DIQ(728.441,CODE,3)'="") S ECXERR(ERR)=$$GET1^DIQ(728.441,CODE,.01)_" "_TYPE_" is inactive, please change to an active code." S ERR=ERR+1 ;144 CVW
"RTN","ECXSTOP",25,0)
 . I (CODE'="")&($$GET1^DIQ(728.441,CODE,.01)="") S ECXERR(ERR)=CODE_" "_TYPE_" is invalid, please change to a legal value." S ERR=ERR+1 ;144 CVW
"RTN","ECXSTOP",26,0)
 D:$G(IEN)="" FINDCOD I +IEN'>0 S ECXERR(ERR)=CODE_" is Invalid for "_TYPE S ERR=ERR+1 Q
"RTN","ECXSTOP",27,0)
 I '$D(^DIC(40.7,IEN,0)) S ECXERR(ERR)=CODE_" is Invalid for "_TYPE S ERR=ERR+1 Q
"RTN","ECXSTOP",28,0)
 I (+CODE'=CODE),($L(CODE)>3) S ECXERR(ERR)=CODE_" is an Invalid "_TYPE S ERR=ERR+1 Q
"RTN","ECXSTOP",29,0)
 S INACT=$P(^DIC(40.7,IEN,0),"^",3) I INACT,((DT>INACT)!(DT=INACT)) S ECXERR(ERR)=CODE_" is an Inactive "_TYPE S ERR=ERR+1
"RTN","ECXSTOP",30,0)
 S RTYPE=$P(^DIC(40.7,IEN,0),"^",6)
"RTN","ECXSTOP",31,0)
 I (TYPE="Stop Code"),(RTYPE'=("P"))&(RTYPE'=("E")) S ECXERR(ERR)=CODE_" This stop code can only be used in the secondary position." S ERR=ERR+1
"RTN","ECXSTOP",32,0)
 I TYPE="DSS Stop Code",(RTYPE'=("P"))&(RTYPE'=("E")) S ECXERR(ERR)=CODE_" This stop code can only be used in the secondary position." S ERR=ERR+1
"RTN","ECXSTOP",33,0)
 I TYPE="Credit Stop Code",(RTYPE'=("S"))&(RTYPE'=("E")) S ECXERR(ERR)=CODE_" This stop code can only be used in the primary position." S ERR=ERR+1
"RTN","ECXSTOP",34,0)
 I TYPE="DSS Credit Stop Code",(RTYPE'=("S"))&(RTYPE'=("E")) S ECXERR(ERR)=CODE_" This stop code can only be used in the primary position." S ERR=ERR+1
"RTN","ECXSTOP",35,0)
 ;I ($P(^DIC(40.7,IEN,0),"^",7)>DT) S WARNING(WRN)=CODE_" This "_TYPE_" has a Restriction Date in the future." S WRN=WRN+1
"RTN","ECXSTOP",36,0)
 I (TYPE="Stop Code"),$G(CLIEN),(CODE=$P(^ECX(728.44,CLIEN,0),"^",3)) S ECXERR(ERR)=CODE_" "_TYPE_" should not match Credit Stop Code." S ERR=ERR+1
"RTN","ECXSTOP",37,0)
 I (TYPE="DSS Stop Code"),$G(CLIEN),(CODE=$P(^ECX(728.44,CLIEN,0),"^",5)) S ECXERR(ERR)=CODE_" "_TYPE_" should not match DSS Credit Stop Code." S ERR=ERR+1
"RTN","ECXSTOP",38,0)
 ;WARNING  ; check for inactivations in future
"RTN","ECXSTOP",39,0)
 I INACT>DT S WARNING(WRN)=CODE_" This "_TYPE_" has a pending Inactive Date." S WRN=WRN+1
"RTN","ECXSTOP",40,0)
 Q
"RTN","ECXSTOP",41,0)
FINDCOD ;find active code if one
"RTN","ECXSTOP",42,0)
 N ARRY,I,FLG,INACT
"RTN","ECXSTOP",43,0)
 S IEN=$O(^DIC(40.7,"C",CODE,0))
"RTN","ECXSTOP",44,0)
 I $O(^DIC(40.7,"C",CODE,IEN))'>0 Q
"RTN","ECXSTOP",45,0)
 ;must be some duplicates so find the best one
"RTN","ECXSTOP",46,0)
 S I=""
"RTN","ECXSTOP",47,0)
 F  S I=$O(^DIC(40.7,"C",CODE,I)) Q:'I  D
"RTN","ECXSTOP",48,0)
 . Q:'$D(^DIC(40.7,I,0))
"RTN","ECXSTOP",49,0)
 . S INACT=$P(^DIC(40.7,I,0),"^",3),FLG="A" D
"RTN","ECXSTOP",50,0)
 . . I INACT,((DT>INACT)!(DT=INACT)) S FLG="I"
"RTN","ECXSTOP",51,0)
 . S ARRY(FLG,I)=""
"RTN","ECXSTOP",52,0)
 I $D(ARRY("A")) S IEN=$O(ARRY("A",0))
"RTN","ECXSTOP",53,0)
 Q
"RTN","ECXSURG")
0^16^B76612966^B72092726
"RTN","ECXSURG",1,0)
ECXSURG ;ALB/JA,BIR/DMA,PTD-Surgery Extract for DSS ;4/17/13  11:43
"RTN","ECXSURG",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,25,24,33,39,41,42,46,50,71,84,92,99,105,112,128,127,132,144**;Dec 22, 1997;Build 9
"RTN","ECXSURG",3,0)
BEG ;entry point from option
"RTN","ECXSURG",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXSURG",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXSURG",6,0)
 Q
"RTN","ECXSURG",7,0)
 ;
"RTN","ECXSURG",8,0)
START ;
"RTN","ECXSURG",9,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSURG",10,0)
 S QFLG=0,ECED=ECED+.3,ECD=ECSD1
"RTN","ECXSURG",11,0)
 F  S ECD=$O(^SRF("AC",ECD)),ECD0=0 Q:('ECD)!(ECD>ECED)!(QFLG)  D
"RTN","ECXSURG",12,0)
 .F  S ECD0=$O(^SRF("AC",ECD,ECD0)) Q:'ECD0  D
"RTN","ECXSURG",13,0)
 ..I $D(^SRF(ECD0,0)) S EC=^SRF(ECD0,0),ECXDFN=+$P(EC,U),ECXVISIT=$P(EC,U,15) D STUFF Q:QFLG
"RTN","ECXSURG",14,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSURG",15,0)
 Q
"RTN","ECXSURG",16,0)
 ;
"RTN","ECXSURG",17,0)
STUFF ;gather data
"RTN","ECXSURG",18,0)
 N J,X,Y,PP,DATA1,DATA2,DATAOP,ARR,ERR,SUB,MOD,ECXNONL,ECXSTOP,TIMEDIF
"RTN","ECXSURG",19,0)
 N ECPRO,ECXORCT,ECXPTHA,ECXNPRFI,ECXPA,ECXPAPC,ECSRPC,ECATPC,ECSAPC
"RTN","ECXSURG",20,0)
 N ECXCRST,ECXSTCD,ECXCLIN,EC1A,EC2A,ECPQ,ECQA,EC1APC,EC2APC,ECPQPC
"RTN","ECXSURG",21,0)
 N ECQAPC,EC1ANPI,EC2ANPI,ECPQNPI,ECQANPI
"RTN","ECXSURG",22,0)
 N ECXORCET,ECXORCST,ECXTPOOR ;ECX*128
"RTN","ECXSURG",23,0)
 N ECICD10,ECICD101,ECICD102,ECICD103,ECICD104,ECICD105,ECXCONC ;ECX*144 CVW
"RTN","ECXSURG",24,0)
 N ECXCLST,ECXECL ;144
"RTN","ECXSURG",25,0)
 S (ECICD10,ECICD101,ECICD102,ECICD103,ECICD104,ECICD105)="" ;ECX*144 NULL FOR NOW
"RTN","ECXSURG",26,0)
 S ECXDATE=ECD,ECXERR=0,ECXQ="",ECXCONC=""
"RTN","ECXSURG",27,0)
 ;retrieve demographic variables
"RTN","ECXSURG",28,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXDATE,"1;2;3;5;")
"RTN","ECXSURG",29,0)
 I ECXADMDT="" S ECXADD=ECXADMDT
"RTN","ECXSURG",30,0)
 I ECXADMDT'="" S ECXADD=$$ECXDATE^ECXUTL(ECXADMDT,ECXYM)
"RTN","ECXSURG",31,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;5",.ECXPAT)
"RTN","ECXSURG",32,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXSURG",33,0)
 ;OEF/OIF DATA
"RTN","ECXSURG",34,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXSURG",35,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXSURG",36,0)
 S ECXVNS=ECXPAT("VIETNAM") ; 144 Vietnam Status
"RTN","ECXSURG",37,0)
 S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXSURG",38,0)
 S EC0=^SRF(ECD0,0)
"RTN","ECXSURG",39,0)
 S DATA1=$S($D(^SRF(ECD0,.1)):^(.1),1:"")
"RTN","ECXSURG",40,0)
 S DATA2=$S($D(^SRF(ECD0,.2)):^(.2),1:"")
"RTN","ECXSURG",41,0)
 S DATAOP=$S($D(^SRO(136,ECD0,0)):^(0),1:"")
"RTN","ECXSURG",42,0)
 S ECNO=$G(^SRF(ECD0,"NON"))
"RTN","ECXSURG",43,0)
 ; if VISIT data exist get encounter data
"RTN","ECXSURG",44,0)
 ; ECX*112
"RTN","ECXSURG",45,0)
 S ECXVST=$P(^SRF(ECD0,0),U,15) D:ECXVST'=""
"RTN","ECXSURG",46,0)
 . Q:'$D(^AUPNVSIT(ECXVST,800))
"RTN","ECXSURG",47,0)
 . S ECENSC=$P(^AUPNVSIT(ECXVST,800),U,1)
"RTN","ECXSURG",48,0)
 . S ECENSC=$S(ECENSC=0:"N",ECENSC=1:"Y",1:"")
"RTN","ECXSURG",49,0)
 ;get data
"RTN","ECXSURG",50,0)
 S ECSR=$P(DATA1,U,4),(ECATNPI,ECSANPI,ECSRNPI)="",ECAT=$P(DATA1,U,13)
"RTN","ECXSURG",51,0)
 S ECSRNPI=$$NPI^XUSNPI("Individual_ID",ECSR,ECXDATE)
"RTN","ECXSURG",52,0)
 S:+ECSRNPI'>0 ECSRNPI="" S ECSRNPI=$P(ECSRNPI,U)
"RTN","ECXSURG",53,0)
 ;-Time patient in OR room (Nurse Time)
"RTN","ECXSURG",54,0)
 S ECXTM=$$ECXTIME^ECXUTL($P(DATA2,U,10))
"RTN","ECXSURG",55,0)
 S ECXDIV=$S($D(^SRF(ECD0,8)):^(8),1:ECINST)
"RTN","ECXSURG",56,0)
 N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV)  ;Production Division
"RTN","ECXSURG",57,0)
 S ECSA=$P($G(^SRF(ECD0,.3)),U,4),ECO=$P(EC0,U,2)
"RTN","ECXSURG",58,0)
 S ECSANPI=$$NPI^XUSNPI("Individual_ID",ECSA,ECXDATE)
"RTN","ECXSURG",59,0)
 S:+ECSANPI'>0 ECSANPI="" S ECSANPI=$P(ECSANPI,U)
"RTN","ECXSURG",60,0)
 ;get principle anesthetist and person class DBIA #103
"RTN","ECXSURG",61,0)
 S ECXPA=$P($G(^SRF(ECD0,.3)),U,1)
"RTN","ECXSURG",62,0)
 S ECPANPI=$$NPI^XUSNPI("Individual_ID",ECXPA,ECXDATE)
"RTN","ECXSURG",63,0)
 S:+ECPANPI'>0 ECPANPI="" S ECPANPI=$P(ECPANPI,U)
"RTN","ECXSURG",64,0)
 S ECXPAPC=$$PRVCLASS^ECXUTL(ECXPA,ECXDATE)
"RTN","ECXSURG",65,0)
 ;get first asst, 2nd asst, perfusionist, and asst perfusionist
"RTN","ECXSURG",66,0)
 S EC1A=$P(DATA1,U,5),EC2A=$P(DATA1,U,6),ECPQ=$P(DATA1,U,19),ECQA=$P(DATA1,U,20)
"RTN","ECXSURG",67,0)
 S EC1ANPI=$$NPI^XUSNPI("Individual_ID",EC1A,ECXDATE)
"RTN","ECXSURG",68,0)
 S:+EC1ANPI'>0 EC1ANPI="" S EC1ANPI=$P(EC1ANPI,U)
"RTN","ECXSURG",69,0)
 S EC2ANPI=$$NPI^XUSNPI("Individual_ID",EC2A,ECXDATE)
"RTN","ECXSURG",70,0)
 S:+EC2ANPI'>0 EC2ANPI="" S EC2ANPI=$P(EC2ANPI,U)
"RTN","ECXSURG",71,0)
 S ECPQNPI=$$NPI^XUSNPI("Individual_ID",ECPQ,ECXDATE)
"RTN","ECXSURG",72,0)
 S:+ECPQNPI'>0 ECPQNPI="" S ECPQNPI=$P(ECPQNPI,U)
"RTN","ECXSURG",73,0)
 S ECQANPI=$$NPI^XUSNPI("Individual_ID",ECQA,ECXDATE)
"RTN","ECXSURG",74,0)
 S:+ECQANPI'>0 ECQANPI="" S ECQANPI=$P(ECQANPI,U)
"RTN","ECXSURG",75,0)
 S ECORTY=$P($G(^SRS(+ECO,2)),U),ECO=$P($G(^SRS(+ECO,0)),U)
"RTN","ECXSURG",76,0)
 S ECSS=$P($G(^SRO(137.45,+$P(EC0,U,4),0)),U,2)
"RTN","ECXSURG",77,0)
 S ECSS=$$RJ^XLFSTR($P($G(^DIC(45.3,+ECSS,0)),U),3,0)
"RTN","ECXSURG",78,0)
 S:ECSS="000" ECSS="999"
"RTN","ECXSURG",79,0)
 ;get classification information
"RTN","ECXSURG",80,0)
 S (ECXAO,ECXHNC,ECXSHAD,ECXSHADI,ECXECL)="" I ECXVISIT'="" D  ;144
"RTN","ECXSURG",81,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR
"RTN","ECXSURG",82,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXSURG",83,0)
 .S ECENRI=$G(ECXVIST("IR")),ECENMST=$G(ECXVIST("MST"))
"RTN","ECXSURG",84,0)
 .S ECENEC=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXSURG",85,0)
 .S ECXECL=$G(ECXVIST("ENCCL")) ;144
"RTN","ECXSURG",86,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXSURG",87,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXSURG",88,0)
 ; - Shad Encounter Field
"RTN","ECXSURG",89,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXSURG",90,0)
 ;look for non-OR
"RTN","ECXSURG",91,0)
 S (ECNT,ECNL,ECXDSSD,ECXNONL,ECXSTOP)=""
"RTN","ECXSURG",92,0)
 I $P(ECNO,U)="Y" D
"RTN","ECXSURG",93,0)
 .S ECSR=$P(ECNO,U,6),ECAT=$P(ECNO,U,7)
"RTN","ECXSURG",94,0)
 .S ECSRNPI=$$NPI^XUSNPI("Individual_ID",ECSR,ECXDATE)
"RTN","ECXSURG",95,0)
 .S:+ECSRNPI'>0 ECSRNPI="" S ECSRNPI=$P(ECSRNPI,U)
"RTN","ECXSURG",96,0)
 .S ECATNPI=$$NPI^XUSNPI("Individual_ID",ECAT,ECXDATE)
"RTN","ECXSURG",97,0)
 .S:+ECATNPI'>0 ECATNPI="" S ECATNPI=$P(ECATNPI,U)
"RTN","ECXSURG",98,0)
 .S ECXTM=$$ECXTIME^ECXUTL($P(ECNO,U,4))
"RTN","ECXSURG",99,0)
 .S A1=$P(ECNO,U,5),A2=$P(ECNO,U,4),TIME="##" D:(A1&A2) TIME S ECNT=TIME
"RTN","ECXSURG",100,0)
 .S (ECXNONL,ECNL)=+$P(ECNO,U,2),ECNL=$P($G(^ECX(728.44,ECNL,0)),U,9)
"RTN","ECXSURG",101,0)
 .S:ECNL="" ECNL="UNKNOWN"
"RTN","ECXSURG",102,0)
 .;
"RTN","ECXSURG",103,0)
 .;- Get Primary or DSS Stop Code to use in encounter number
"RTN","ECXSURG",104,0)
 .N P1 ;primary stop
"RTN","ECXSURG",105,0)
 .D FEEDER^ECXSCX1(+$P(EC0,U,21),ECXDATE,.P1,,,,) S ECXSTOP=$E(P1,1,3)
"RTN","ECXSURG",106,0)
 .S ECXSTOP=$S(ECXSTOP:ECXSTOP,1:$P($G(^ECX(728.44,ECXNONL,0)),U,4))
"RTN","ECXSURG",107,0)
 ;
"RTN","ECXSURG",108,0)
 ;- Get credit stop, stop code and clinic
"RTN","ECXSURG",109,0)
 I $$SUR^ECXUTL6(.ECXCRST,.ECXSTCD,.ECXCLIN)
"RTN","ECXSURG",110,0)
 ;
"RTN","ECXSURG",111,0)
 ;- If surgery cancelled/aborted quit and go to next record
"RTN","ECXSURG",112,0)
 S ECCAN=$P($G(^SRF(ECD0,30)),U)
"RTN","ECXSURG",113,0)
 I +ECCAN S ECCAN=$$CANC^ECXUTL4(ECNL,$P(DATA2,U,10))
"RTN","ECXSURG",114,0)
 ;on hold for ECXDSSD and ECXDSSP I $P($G(^SRF(ECD0,30)),U) Q
"RTN","ECXSURG",115,0)
 ;get service of attending surgeon
"RTN","ECXSURG",116,0)
 S ECATSV=$P($G(^DIC(49,+$G(^VA(200,+ECAT,5)),730)),U)
"RTN","ECXSURG",117,0)
 ;
"RTN","ECXSURG",118,0)
 ;get surgeon, attending and anesthesia super person classes
"RTN","ECXSURG",119,0)
 ;get 1st asst, 2nd asst, perfusionist, and asst perfusionst person class
"RTN","ECXSURG",120,0)
 S ECSRPC=$$PRVCLASS^ECXUTL(ECSR,ECXDATE)
"RTN","ECXSURG",121,0)
 S ECATPC=$$PRVCLASS^ECXUTL(ECAT,ECXDATE)
"RTN","ECXSURG",122,0)
 S ECSAPC=$$PRVCLASS^ECXUTL(ECSA,ECXDATE)
"RTN","ECXSURG",123,0)
 S EC1APC=$$PRVCLASS^ECXUTL(EC1A,ECXDATE)
"RTN","ECXSURG",124,0)
 S EC2APC=$$PRVCLASS^ECXUTL(EC2A,ECXDATE)
"RTN","ECXSURG",125,0)
 S ECPQPC=$$PRVCLASS^ECXUTL(ECPQ,ECXDATE)
"RTN","ECXSURG",126,0)
 S ECQAPC=$$PRVCLASS^ECXUTL(ECQA,ECXDATE)
"RTN","ECXSURG",127,0)
 ;
"RTN","ECXSURG",128,0)
 ;add leading 2s for pointer to 200
"RTN","ECXSURG",129,0)
 S:ECAT ECAT="2"_ECAT S:ECSR ECSR="2"_ECSR S:ECSA ECSA="2"_ECSA
"RTN","ECXSURG",130,0)
 ;add leading 2 to principle anesthetist IEN
"RTN","ECXSURG",131,0)
 S:ECXPA ECXPA="2"_ECXPA
"RTN","ECXSURG",132,0)
 ;add leading 2s for 1st asst, 2nd asst, perfusionist, asst perfusionist
"RTN","ECXSURG",133,0)
 S:EC1A EC1A="2"_EC1A S:EC2A EC2A="2"_EC2A S:ECPQ ECPQ="2"_ECPQ S:ECQA ECQA="2"_ECQA
"RTN","ECXSURG",134,0)
 ;anesthesia technique
"RTN","ECXSURG",135,0)
 S ECANE="",PP=""
"RTN","ECXSURG",136,0)
 I $D(^SRF(ECD0,6,0)) S ECXJ=0 D
"RTN","ECXSURG",137,0)
 .F  S ECXJ=$O(^SRF(ECD0,6,ECXJ)) Q:('ECXJ)!(ECANE]"")  D
"RTN","ECXSURG",138,0)
 ..S PP=$P($G(^(ECXJ,0)),U,3) S:PP="Y" ECANE=$P(^(0),U,1)
"RTN","ECXSURG",139,0)
 .I ECANE="" S ECXJ=$O(^SRF(ECD0,6,0)) I ECXJ S ECANE=$P(^SRF(ECD0,6,ECXJ,0),U,1)
"RTN","ECXSURG",140,0)
 ;get primary procedure
"RTN","ECXSURG",141,0)
 ;ecode0=p^cpt code^^patient time^operation time^anesthesia time
"RTN","ECXSURG",142,0)
 S ECPT=+$P(DATAOP,U,2),ECXCMOD=""
"RTN","ECXSURG",143,0)
 K ARR,ERR D FIELD^DID(130,28,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",144,0)
 .K ARR,ERR D FIELD^DID(130,28,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",145,0)
 .Q:$D(ERR("DIERR"))
"RTN","ECXSURG",146,0)
 .S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",147,0)
 .F  S MOD=$O(^SRF(ECD0,SUB,MOD)) Q:MOD'>0  D
"RTN","ECXSURG",148,0)
 ..S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",149,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",150,0)
 S ECODE0="P"_U_U  ;ECPT_U
"RTN","ECXSURG",151,0)
 F J="10,12","2,3","1,4" D
"RTN","ECXSURG",152,0)
 .N ECNTIME,ECSTIME,ECATIME
"RTN","ECXSURG",153,0)
 .S A2=$P(DATA2,U,$P(J,",")),A1=$P(DATA2,U,$P(J,",",2)),TIME="##"
"RTN","ECXSURG",154,0)
 .I (A1&A2)&(+J=10) D TIME  S ECNTIME=TIME
"RTN","ECXSURG",155,0)
 .I (A1&A2)&(+J=1) D TIME  S ECATIME=TIME
"RTN","ECXSURG",156,0)
 .I (A1&A2)&(+J=2) D
"RTN","ECXSURG",157,0)
 ..;
"RTN","ECXSURG",158,0)
 ..;-Operation Time (Surgeon Time)
"RTN","ECXSURG",159,0)
 ..;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",160,0)
 ..S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",161,0)
 ..S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",162,0)
 ..S TIME=$TR($J(TIMEDIF,4,0)," ")
"RTN","ECXSURG",163,0)
 ..S:TIME<0 TIME="###"
"RTN","ECXSURG",164,0)
 ..S:TIME ECSTIME=TIME
"RTN","ECXSURG",165,0)
 .S ECODE0=ECODE0_U_TIME K TIME
"RTN","ECXSURG",166,0)
 ; -Recovery Room Time
"RTN","ECXSURG",167,0)
 S ECRR=""
"RTN","ECXSURG",168,0)
 I $D(^SRF(ECD0,1.1)) D
"RTN","ECXSURG",169,0)
 .S A1=$P(^(1.1),U,8),A2=$P(^(1.1),U,7),TIME="##" D:(A1&A2) TIME
"RTN","ECXSURG",170,0)
 .S ECRR=TIME K TIME
"RTN","ECXSURG",171,0)
 I ECNL]"" S $P(ECODE0,U,5)=ECNT
"RTN","ECXSURG",172,0)
 ;
"RTN","ECXSURG",173,0)
 ; -OR Clean Time in 15 min increments DBIA #103
"RTN","ECXSURG",174,0)
 ;
"RTN","ECXSURG",175,0)
 ; ECX*3.0*128 - Correct the calculation of OR Clean Time.
"RTN","ECXSURG",176,0)
 S ECXORCT=0
"RTN","ECXSURG",177,0)
 ; Set local variables. ECX*128
"RTN","ECXSURG",178,0)
 S ECXTPOOR=$P($G(DATA2),U,12),ECXORCST=$P($G(DATA2),U,13),ECXORCET=$P($G(DATA2),U,14)
"RTN","ECXSURG",179,0)
 I (ECXORCET'=""),(ECXORCST'="") D
"RTN","ECXSURG",180,0)
 .S ECXORCT=($$FMDIFF^XLFDT(ECXORCET,ECXORCST,2)/60)/15
"RTN","ECXSURG",181,0)
 I 'ECXORCT,(ECXORCET'=""),(ECXTPOOR'="") D
"RTN","ECXSURG",182,0)
 .S ECXORCT=($$FMDIFF^XLFDT(ECXORCET,ECXTPOOR,2)/60)/15
"RTN","ECXSURG",183,0)
 ; Make sure the final OR CLEAN TIME is an integer by rounding
"RTN","ECXSURG",184,0)
 ; up for any decimal value  ECX*3.0*128
"RTN","ECXSURG",185,0)
 I ECXORCT>0 S ECXORCT=$J(ECXORCT+.4999,0,0)
"RTN","ECXSURG",186,0)
 ; -If no OR clean time recorded set it to 2
"RTN","ECXSURG",187,0)
 I ECXORCT'>0 S ECXORCT=2
"RTN","ECXSURG",188,0)
 ;
"RTN","ECXSURG",189,0)
 ; -PT in hold area time in 15 min increments DBIA #103
"RTN","ECXSURG",190,0)
 I $P($G(DATA2),U,10),$P($G(DATA2),U,15) D
"RTN","ECXSURG",191,0)
 .S ECXPTHA=($$FMDIFF^XLFDT($P($G(DATA2),U,10),$P($G(DATA2),U,15),2)/60)/15
"RTN","ECXSURG",192,0)
 .S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",193,0)
 .I CON S ECXPTHA=ECXPTHA/2,ECXCONC="C" ;144 Concurrent Case
"RTN","ECXSURG",194,0)
 .S ECXPTHA=$TR($J(ECXPTHA,3,0)," ")
"RTN","ECXSURG",195,0)
 ; -If hold time is =<0 set it to ""
"RTN","ECXSURG",196,0)
 S:$G(ECXPTHA)'>0 ECXPTHA=""
"RTN","ECXSURG",197,0)
 ;
"RTN","ECXSURG",198,0)
 ;- get ASA CLASS
"RTN","ECXSURG",199,0)
 S ECASA=$$GET1^DIQ(132.8,$$GET1^DIQ(130,ECD0,1.13,"I"),.01)
"RTN","ECXSURG",200,0)
 ;
"RTN","ECXSURG",201,0)
 ;- Observation Patient Indicator (yes/no)
"RTN","ECXSURG",202,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECNL)
"RTN","ECXSURG",203,0)
 ;
"RTN","ECXSURG",204,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXSURG",205,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXSURG",206,0)
 ;- set national patient record flag if exist
"RTN","ECXSURG",207,0)
 D NPRF^ECXUTL5
"RTN","ECXSURG",208,0)
 ;
"RTN","ECXSURG",209,0)
 ;- If no encounter number don't file record
"RTN","ECXSURG",210,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXSTOP,ECSS) Q:ECXENC=""
"RTN","ECXSURG",211,0)
 ;
"RTN","ECXSURG",212,0)
 ;- Get postop diagnosis codes
"RTN","ECXSURG",213,0)
 I $$SURPODX^ECXUTL6(.ECXPODX,.ECXPODX1,.ECXPODX2,.ECXPODX3,.ECXPODX4,.ECXPODX5)
"RTN","ECXSURG",214,0)
 ;
"RTN","ECXSURG",215,0)
 D FILE^ECXSURG1
"RTN","ECXSURG",216,0)
 ;get secondary procedures
"RTN","ECXSURG",217,0)
 ;ecode0=s^cpt code
"RTN","ECXSURG",218,0)
 S ECXJ=0
"RTN","ECXSURG",219,0)
 F  S ECXJ=$O(^SRO(136,ECD0,3,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)),$D(^(0)),$P(^(0),"^")]"" D
"RTN","ECXSURG",220,0)
 .;S ECPT=$P(^SRF(ECD0,13,ECXJ,2),U),ECXCMOD=""
"RTN","ECXSURG",221,0)
 .S ECPT=$P(^SRO(136,ECD0,3,ECXJ,0),U),ECXMOD=""
"RTN","ECXSURG",222,0)
 .S ECPT=$P(^(0),"^"),ECXCMOD=""
"RTN","ECXSURG",223,0)
 .K ARR,ERR
"RTN","ECXSURG",224,0)
 .D FIELD^DID(130.16,4,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",225,0)
 ..K ARR,ERR
"RTN","ECXSURG",226,0)
 ..D FIELD^DID(130.16,4,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",227,0)
 ..Q:$D(ERR("DIERR"))
"RTN","ECXSURG",228,0)
 ..S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",229,0)
 ..F  S MOD=$O(^SRF(ECD0,13,ECXJ,SUB,MOD)) Q:MOD'>0  S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",230,0)
 .S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",231,0)
 .S ECODE0="S"_U   ;_ECPT
"RTN","ECXSURG",232,0)
 .D FILE^ECXSURG1
"RTN","ECXSURG",233,0)
 ;get prostheses
"RTN","ECXSURG",234,0)
 ;ecode0=i^^^^^^prosthesis^old qty field (null)
"RTN","ECXSURG",235,0)
 S ECXJ=0
"RTN","ECXSURG",236,0)
 F  S ECXJ=$O(^SRF(ECD0,1,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)) D
"RTN","ECXSURG",237,0)
 .S ECXP=+^SRF(ECD0,1,ECXJ,0),ECXQ=$P($G(^(1)),U,2) S:'ECXQ ECXQ=1
"RTN","ECXSURG",238,0)
 .S ECODE0="I"_U_U_U_U_U_U_ECXP_U_U
"RTN","ECXSURG",239,0)
 .D FILE^ECXSURG1
"RTN","ECXSURG",240,0)
 Q
"RTN","ECXSURG",241,0)
 ;
"RTN","ECXSURG",242,0)
 ;
"RTN","ECXSURG",243,0)
TIME ; given date/time get increment
"RTN","ECXSURG",244,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG",245,0)
 N CON,TIMEDIF
"RTN","ECXSURG",246,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",247,0)
 ;
"RTN","ECXSURG",248,0)
 ;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",249,0)
 S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",250,0)
 S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",251,0)
 I 'CON D
"RTN","ECXSURG",252,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXSURG",253,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXSURG",254,0)
 I CON D
"RTN","ECXSURG",255,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXSURG",256,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXSURG",257,0)
 S:TIME<0 TIME="###"
"RTN","ECXSURG",258,0)
 Q
"RTN","ECXSURG",259,0)
 ;
"RTN","ECXSURG",260,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSURG",261,0)
 S ECHEAD="SUR"
"RTN","ECXSURG",262,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSURG",263,0)
 Q
"RTN","ECXSURG",264,0)
 ;
"RTN","ECXSURG",265,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSURG",266,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXSURG1")
0^17^B21879740^B19369745
"RTN","ECXSURG1",1,0)
ECXSURG1 ;ALB/JA,BIR/DMA,PTD-Surgery Extract for DSS ;4/17/13  11:51
"RTN","ECXSURG1",2,0)
 ;;3.0;DSS EXTRACTS;**105,112,120,127,132,144**;Dec 22, 1997;Build 9
"RTN","ECXSURG1",3,0)
 ;
"RTN","ECXSURG1",4,0)
FILE ;file record
"RTN","ECXSURG1",5,0)
 ;node0
"RTN","ECXSURG1",6,0)
 ;division^dfn^ssn^name^in/out (ECXA)^day^case #^
"RTN","ECXSURG1",7,0)
 ;surg specialty^or room #^
"RTN","ECXSURG1",8,0)
 ;surgeon^attending^anesthesia supervisor^anesthesia technique^
"RTN","ECXSURG1",9,0)
 ;primary/secondary/prostheses^cpt^^pt time^op time^anes time^
"RTN","ECXSURG1",10,0)
 ;prostheses^qty^^
"RTN","ECXSURG1",11,0)
 ;movement number^treating specialty^cancel/abort (ECCAN)^time^or type^
"RTN","ECXSURG1",12,0)
 ;attending's service^non-or dss id^recovery room time^^
"RTN","ECXSURG1",13,0)
 ;primary care team^primary care provider^admission date
"RTN","ECXSURG1",14,0)
 ;node1
"RTN","ECXSURG1",15,0)
 ;mpi^dss dept ECXDSSD^surgeon npi^attending npi^anes supervisor npi^
"RTN","ECXSURG1",16,0)
 ;pc provider npi^pc prov person class^
"RTN","ECXSURG1",17,0)
 ;assoc pc provider^assoc pc prov person class^assoc pc prov npi^
"RTN","ECXSURG1",18,0)
 ;cpt&modifiers ECXCPT^dom ECXDOM^enrollment category ECXCAT^
"RTN","ECXSURG1",19,0)
 ;enrollment status ECXSTAT^enrollment priority ECXPRIOR^
"RTN","ECXSURG1",20,0)
 ;period of service ECXPOS^purple heart indicator ECXPHI^
"RTN","ECXSURG1",21,0)
 ;observ pat ind ECXOBS^encounter num ECXENC^ao loc ECXAOL^
"RTN","ECXSURG1",22,0)
 ;production division ECXPDIV^head & neck canc ind ECXHNCI^
"RTN","ECXSURG1",23,0)
 ;ethnicity ECXETH^race1 ECXRC1^new quantity ECXQ^
"RTN","ECXSURG1",24,0)
 ;^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig
"RTN","ECXSURG1",25,0)
 ;ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible ECXCVENC
"RTN","ECXSURG1",26,0)
 ;or clean time ECXORCT^time pt in hold area ECXPTHA^national patient
"RTN","ECXSURG1",27,0)
 ;record flag ECXNPRFI^princ anesthetist ECXPA^surgeon per class ECSRPC
"RTN","ECXSURG1",28,0)
 ;node2
"RTN","ECXSURG1",29,0)
 ;atten surgeon per class ECATPC^anesthesia super person class ECSAPC^
"RTN","ECXSURG1",30,0)
 ;princ anesthetist PC ECXPAPC^emergency response indicator(FEMA) ECXERI^
"RTN","ECXSURG1",31,0)
 ;agent orange indic ECXAO^head/neck cancer ECXHNC
"RTN","ECXSURG1",32,0)
 ;OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^clinic pointer ECXCLIN
"RTN","ECXSURG1",33,0)
 ;credit stop ECXCRST^stop code ECXSTCD^princ postop diagnosis code
"RTN","ECXSURG1",34,0)
 ;ECXPODX^other postop diagnosis code #1 ECXPODX1^other postop
"RTN","ECXSURG1",35,0)
 ;diagnosis code #2 ECXPODX2^ other postop diag code #3 ECXPODX3^
"RTN","ECXSURG1",36,0)
 ;other postop diag code #4 ECXPODX4^other postop diag code #5
"RTN","ECXSURG1",37,0)
 ;ECXPODX5^anesthesia sup npi ECSANPI^assoc pc prov npi ECASNPI^
"RTN","ECXSURG1",38,0)
 ;attending surgeon npi ECATNPI^primary care provider npi ECPTNPI^
"RTN","ECXSURG1",39,0)
 ;principle anesthetist npi ECPANPI^surgeon npi ECSRNPI
"RTN","ECXSURG1",40,0)
 ;encounter ec ECENEC^radiation encounter indicator ECENRI^
"RTN","ECXSURG1",41,0)
 ;mst encounter indicator ECENMST^encounter sc ECENSC^
"RTN","ECXSURG1",42,0)
 ;agent orange status ECXAST^
"RTN","ECXSURG1",43,0)
 ;environmental contaminants ECXEST^radiation status ECXRST^
"RTN","ECXSURG1",44,0)
 ;mst status ECXMST^shad indicator ECXSHADI^encounter shad ECXSHAD^
"RTN","ECXSURG1",45,0)
 ;NODE3
"RTN","ECXSURG1",46,0)
 ;1st assist EC1A^1st assist pc EC1APC^1st assist npi EC1ANPI^
"RTN","ECXSURG1",47,0)
 ;2nd assist EC2A^2nd assist pc EC2APC^2nd assist npi EC2ANPI^
"RTN","ECXSURG1",48,0)
 ;perfusionist ECPQ^perfusionist pc ECPQPC^perfusionist npi ECQANPI^
"RTN","ECXSURG1",49,0)
 ;anesthesia severity ECASA^patcat PATCAT^date of birth ECXDOB
"RTN","ECXSURG1",50,0)
 ;Vietnam Status ECXVNS^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL^
"RTN","ECXSURG1",51,0)
 ;Concurrent Case ECXCONC^post op icd-10 ECICD10^post op icd-10 code #1 ECICD101^post op icd-10 code #2 ECICD102^
"RTN","ECXSURG1",52,0)
 ;post op icd-10 code #3 ECICD103^post op icd-10 code #4 ECICD104^post op icd-10 code #5 ECICD105^
"RTN","ECXSURG1",53,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXSURG1",54,0)
 N ECXDATA,ECXTSC
"RTN","ECXSURG1",55,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXSURG1",56,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXSURG1",57,0)
 ;done
"RTN","ECXSURG1",58,0)
 N DA,DIK,STR
"RTN","ECXSURG1",59,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXSURG1",60,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSURG1",61,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECD0_U_ECSS_U_ECO_U
"RTN","ECXSURG1",62,0)
 S ECODE=ECODE_ECSR_U_ECAT_U_ECSA_U_ECANE_U_ECODE0_U
"RTN","ECXSURG1",63,0)
 S STR=ECXMN_U_ECXTSC_U_$S(ECCAN'="":ECCAN,1:"")_U_ECXTM_U_ECORTY_U
"RTN","ECXSURG1",64,0)
 S STR=STR_ECATSV_U_ECNL_U_ECRR_U_U_ECPTTM_U_ECPTPR_U_ECXADD_U
"RTN","ECXSURG1",65,0)
 S $P(ECODE,U,26,38)=STR
"RTN","ECXSURG1",66,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_U
"RTN","ECXSURG1",67,0)
 S ECODE1=ECODE1_ECCLAS_U_ECASPR_U_ECCLAS2_U_U_ECXCPT_U_ECXDOM_U
"RTN","ECXSURG1",68,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U
"RTN","ECXSURG1",69,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXPDIV_U_ECXHNCI_U
"RTN","ECXSURG1",70,0)
 S ECODE1=ECODE1_ECXETH_U_ECXRC1_U_ECXQ_U
"RTN","ECXSURG1",71,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXORCT_U_ECXPTHA_U_ECXNPRFI
"RTN","ECXSURG1",72,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXPA_U_ECSRPC_U,ECODE2=ECATPC_U_ECSAPC_U_ECXPAPC
"RTN","ECXSURG1",73,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXHNC
"RTN","ECXSURG1",74,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECXCLIN_U_ECXCRST_U_ECXSTCD_U_ECXPODX_U_ECXPODX1_U_ECXPODX2_U_ECXPODX3_U_ECXPODX4_U_ECXPODX5_U_ECSANPI_U_ECASNPI_U_ECATNPI_U_ECPTNPI_U_ECPANPI_U_ECSRNPI
"RTN","ECXSURG1",75,0)
 I ECXLOGIC>2008 S ECODE2=ECODE2_U_$G(ECENEC)_U_$G(ECENRI)_U_$G(ECENMST)_U_$G(ECENSC)_U_$G(ECXAST)_U_$G(ECXEST)_U_$G(ECXRST)_U_$G(ECXMST)
"RTN","ECXSURG1",76,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_$G(ECXSHADI)_U_$G(ECXSHAD)_U,ECODE3=$G(EC1A)_U_$G(EC1APC)_U_$G(EC1ANPI)
"RTN","ECXSURG1",77,0)
 I ECXLOGIC>2010 S ECODE3=ECODE3_U_$G(EC2A)_U_$G(EC2APC)_U_(EC2ANPI)_U_$G(ECPQ)_U_$G(ECPQPC)_U_$G(ECPQNPI)_U_$G(ECQA)_U_$G(ECQAPC)_U_$G(ECQANPI)_U_$G(ECASA)_U_ECXPATCAT
"RTN","ECXSURG1",78,0)
 I ECXLOGIC>2011 S ECODE3=ECODE3_U_$G(ECXDOB)
"RTN","ECXSURG1",79,0)
 I ECXLOGIC>2013 S ECODE3=ECODE3_U_ECXVNS_U_ECXCLST_U_ECXECL ;144
"RTN","ECXSURG1",80,0)
 I ECXLOGIC>2013 S ECODE3=ECODE3_U_ECXCONC_U_ECICD10_U_ECICD101_U_ECICD102_U_ECICD103_U_ECICD104_U_ECICD105 ;144 Concurrent case ICD-10 
"RTN","ECXSURG1",81,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=ECODE2,^ECX(ECFILE,EC7,3)=ECODE3,ECRN=ECRN+1
"RTN","ECXSURG1",82,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXSURG1",83,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSURG1",84,0)
 ;
"RTN","ECXSURG1",85,0)
TIME ; given date/time get increment
"RTN","ECXSURG1",86,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG1",87,0)
 N CON,TIMEDIF
"RTN","ECXSURG1",88,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG1",89,0)
 ;
"RTN","ECXSURG1",90,0)
 ;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG1",91,0)
 S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG1",92,0)
 S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG1",93,0)
 I 'CON D
"RTN","ECXSURG1",94,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXSURG1",95,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXSURG1",96,0)
 I CON D
"RTN","ECXSURG1",97,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXSURG1",98,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXSURG1",99,0)
 S:TIME<0 TIME="###"
"RTN","ECXSURG1",100,0)
 Q
"RTN","ECXSURG1",101,0)
 ;
"RTN","ECXSURG1",102,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSURG1",103,0)
 S ECHEAD="SUR"
"RTN","ECXSURG1",104,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSURG1",105,0)
 Q
"RTN","ECXSURG1",106,0)
 ;
"RTN","ECXSURG1",107,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSURG1",108,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXTRAC")
0^3^B97271442^B56593271
"RTN","ECXTRAC",1,0)
ECXTRAC ;ALB/GTS,JAP,BIR/DMA,CML-Package Extracts for DSS ;5/17/13  12:40
"RTN","ECXTRAC",2,0)
 ;;3.0;DSS EXTRACTS;**9,8,14,24,30,33,49,84,105,144**;Dec 22, 1997;Build 9
"RTN","ECXTRAC",3,0)
 ;Date range, queuing and message sending for package extracts
"RTN","ECXTRAC",4,0)
 ;Input
"RTN","ECXTRAC",5,0)
 ;  ECPACK   printed name of package (e.g. Lab, Prescriptions)
"RTN","ECXTRAC",6,0)
 ;  ECNODE   in file 728 where last date is stored
"RTN","ECXTRAC",7,0)
 ;  ECPIECE  piece of node where last date is stored
"RTN","ECXTRAC",8,0)
 ;  ECRTN    in the form of START^ROUTINE
"RTN","ECXTRAC",9,0)
 ;  ECGRP    name of local mail group to receive summary message
"RTN","ECXTRAC",10,0)
 ;           (MUST BE 1 TO 5 UPPER CASE ALPHA - NO SPACES)
"RTN","ECXTRAC",11,0)
 ;  ECFILE   file number of the local editing file
"RTN","ECXTRAC",12,0)
 ;  ECXLOGIC Fiscal year extract logic to use (optional)
"RTN","ECXTRAC",13,0)
 ;  ECXDATES StartDate^EndDate^DoNotUpdate728 (optional)
"RTN","ECXTRAC",14,0)
 ;Generates
"RTN","ECXTRAC",15,0)
 ;  EC23=2nd and 3rd piece of zero node in local editing file
"RTN","ECXTRAC",16,0)
 ;      =YYMM of end date^pointer to 727
"RTN","ECXTRAC",17,0)
 ;  ECXLOGIC=Fiscal year extract logic to use
"RTN","ECXTRAC",18,0)
 ;
"RTN","ECXTRAC",19,0)
EN ;entry point
"RTN","ECXTRAC",20,0)
 N OUT,CHKFLG,RUN ;144
"RTN","ECXTRAC",21,0)
 I '$D(ECNODE) S ECNODE=7
"RTN","ECXTRAC",22,0)
 I '$D(ECHEAD) S ECHEAD=" "
"RTN","ECXTRAC",23,0)
 I $P($G(^ECX(728,1,ECNODE+.1)),U,ECPIECE)]"" D  I '$G(RUN) Q  ;144
"RTN","ECXTRAC",24,0)
 .W !!,$C(7),ECPACK," extract is already running or is scheduled to run.",!! ;144
"RTN","ECXTRAC",25,0)
 .S RUN=$$RUSURE(1) ;144
"RTN","ECXTRAC",26,0)
 .;D PAUSE
"RTN","ECXTRAC",27,0)
 W @IOF,!,"Extract ",ECPACK," Information for DSS",!!
"RTN","ECXTRAC",28,0)
 S:'$D(ECINST) ECINST=+$P(^ECX(728,1,0),U)
"RTN","ECXTRAC",29,0)
 S ECXINST=ECINST
"RTN","ECXTRAC",30,0)
 K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXTRAC",31,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXTRAC",32,0)
 ;* get last date for all extracts except prosthetics
"RTN","ECXTRAC",33,0)
 I ECGRP'="PRO" D
"RTN","ECXTRAC",34,0)
 .S ECLDT=$S($D(^ECX(728,1,ECNODE)):$P(^(ECNODE),U,ECPIECE),1:2610624)
"RTN","ECXTRAC",35,0)
 .S:ECLDT="" ECLDT=2610624
"RTN","ECXTRAC",36,0)
 ;* get last date for prosthetics
"RTN","ECXTRAC",37,0)
 I ECGRP="PRO" D
"RTN","ECXTRAC",38,0)
 .N ECXDA1
"RTN","ECXTRAC",39,0)
 .S ECXDA1=$O(^ECX(728,0))
"RTN","ECXTRAC",40,0)
 .I $D(^ECX(728,ECXDA1,1,ECXINST,0)) D
"RTN","ECXTRAC",41,0)
 ..S ECLDT=$P(^ECX(728,ECXDA1,1,ECXINST,0),U,2)
"RTN","ECXTRAC",42,0)
 .I '$D(^ECX(728,ECXDA1,1,ECXINST,0)) D
"RTN","ECXTRAC",43,0)
 ..S DA(1)=ECXDA1
"RTN","ECXTRAC",44,0)
 ..S DIC(0)="L" K ECXDD
"RTN","ECXTRAC",45,0)
 ..D FIELD^DID(728,59,,"SPECIFIER","ECXDD")
"RTN","ECXTRAC",46,0)
 ..S DIC("P")=ECXDD("SPECIFIER") K ECXDD
"RTN","ECXTRAC",47,0)
 ..S DIC="^ECX(728,"_DA(1)_",1,",X=ECXINST,DINUM=X
"RTN","ECXTRAC",48,0)
 ..K DD,DO D FILE^DICN
"RTN","ECXTRAC",49,0)
 ..K DIC,X,DINUM,Y,DA
"RTN","ECXTRAC",50,0)
 ..S ECLDT=2610624
"RTN","ECXTRAC",51,0)
 S X=$G(ECXDATES) S ECSD=$P(X,"^",1),ECED=$P(X,"^",2)
"RTN","ECXTRAC",52,0)
 S OUT=0
"RTN","ECXTRAC",53,0)
 I (ECSD="")!(ECED="") F  S (ECED,ECSD)="" D  Q:OUT
"RTN","ECXTRAC",54,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: " D ^%DT
"RTN","ECXTRAC",55,0)
 .I Y<0 S OUT=1 Q
"RTN","ECXTRAC",56,0)
 .S ECSD=Y
"RTN","ECXTRAC",57,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: " D ^%DT
"RTN","ECXTRAC",58,0)
 .I Y<0 S OUT=1 Q
"RTN","ECXTRAC",59,0)
 .I Y<ECSD D  Q
"RTN","ECXTRAC",60,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXTRAC",61,0)
 ..W !,"Please try again.",!!
"RTN","ECXTRAC",62,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXTRAC",63,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXTRAC",64,0)
 ..W !,"Please try again.",!!
"RTN","ECXTRAC",65,0)
 .S ECED=Y
"RTN","ECXTRAC",66,0)
 .I ECLDT'<ECSD D  I '$G(RUN) Q  ;144
"RTN","ECXTRAC",67,0)
 ..W !!,"The ",ECPACK," information has already been extracted " W:$L(ECPACK)>10 ! W "through ",$$FMTE^XLFDT(ECLDT),"." ;144
"RTN","ECXTRAC",68,0)
 ..S RUN=$$RUSURE(2) Q:$G(RUN)  W ! ;144
"RTN","ECXTRAC",69,0)
 ..W !,"Please enter a new date range.",!!
"RTN","ECXTRAC",70,0)
 .S OUT=1
"RTN","ECXTRAC",71,0)
 I ECED]"",ECSD]"" D QUE
"RTN","ECXTRAC",72,0)
 Q
"RTN","ECXTRAC",73,0)
 ;
"RTN","ECXTRAC",74,0)
QUE ;queue extract
"RTN","ECXTRAC",75,0)
 N CHKFLG
"RTN","ECXTRAC",76,0)
 ;if extract is ivp (i.e., file=727.819) and data in the intermediate file use new format
"RTN","ECXTRAC",77,0)
 I ECFILE=727.819 D  Q:CHKFLG
"RTN","ECXTRAC",78,0)
 .S CHKFLG=0
"RTN","ECXTRAC",79,0)
 .S X="PSIVSTAT" X ^%ZOSF("TEST") I '$T Q
"RTN","ECXTRAC",80,0)
 .I '$D(^ECX(728.113,"A")) S CHKFLG=1 D NOIVP Q
"RTN","ECXTRAC",81,0)
 .S DATE=$O(^ECX(728.113,"A",ECED+1),-1) I DATE<ECSD S CHKFLG=1 D NOIVP Q
"RTN","ECXTRAC",82,0)
 .D CHK^ECXDIVIV Q:CHKFLG
"RTN","ECXTRAC",83,0)
 .D CHK2
"RTN","ECXTRAC",84,0)
 .S ECRTN="START^ECXPIVDN",ECVER=7
"RTN","ECXTRAC",85,0)
 I '$D(ECNODE) S ECNODE=7
"RTN","ECXTRAC",86,0)
 I '$D(ECHEAD) S ECHEAD=""
"RTN","ECXTRAC",87,0)
 S ECSDN=$$FMTE^XLFDT(ECSD),ECEDN=$$FMTE^XLFDT(ECED),ECSD1=ECSD-.1
"RTN","ECXTRAC",88,0)
 K ZTSAVE
"RTN","ECXTRAC",89,0)
 F X="ECINST","ECED","ECSD","ECSD1","ECEDN","ECSDN" S ZTSAVE(X)=""
"RTN","ECXTRAC",90,0)
 F X="ECPACK","ECPIECE","ECRTN","ECGRP","ECNODE" S ZTSAVE(X)=""
"RTN","ECXTRAC",91,0)
 F X="ECFILE","ECHEAD","ECVER","ECINST","ECXINST" S ZTSAVE(X)=""
"RTN","ECXTRAC",92,0)
 F X="ECXLOGIC","ECXDATES" S ZTSAVE(X)=""
"RTN","ECXTRAC",93,0)
 S ZTDESC=ECPACK_" EXTRACT: "_ECSDN_" TO "_ECEDN,ZTRTN="START^ECXTRAC",ZTIO=""
"RTN","ECXTRAC",94,0)
 D ^%ZTLOAD
"RTN","ECXTRAC",95,0)
 I $D(ZTSK) D
"RTN","ECXTRAC",96,0)
 .S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)="R"
"RTN","ECXTRAC",97,0)
 .S ^XTMP("ECX EXTRACT",0)=$$DT^XLFDT_"^"_$$FMADD^XLFDT(DT,365)_"^TASK INFORMATION FOR EXTRACTS" ;144 Update zero node for task information in XTMP
"RTN","ECXTRAC",98,0)
 .S ^XTMP("ECX EXTRACT",ECHEAD)=ZTSK_"^"_$G(DUZ)_"^"_$G(ZTSK("D"))_"^"_ECSD_"^"_ECED ;144 Save data related to task
"RTN","ECXTRAC",99,0)
 .W !,"Request queued as Task #",ZTSK,".",!
"RTN","ECXTRAC",100,0)
 .D PAUSE
"RTN","ECXTRAC",101,0)
 Q
"RTN","ECXTRAC",102,0)
 ;
"RTN","ECXTRAC",103,0)
NOIVP ;cannot generate ivp message
"RTN","ECXTRAC",104,0)
 W !!,?5,"There does not appear to be any data in the IV EXTRACT DATA"
"RTN","ECXTRAC",105,0)
 W !,?5,"file (#728.113) for the selected date range."
"RTN","ECXTRAC",106,0)
 W !!,?5,"The IVP extract cannot be generated."
"RTN","ECXTRAC",107,0)
 D PAUSE
"RTN","ECXTRAC",108,0)
 Q
"RTN","ECXTRAC",109,0)
 ;
"RTN","ECXTRAC",110,0)
START ; entry when queued
"RTN","ECXTRAC",111,0)
 S QFLG=0
"RTN","ECXTRAC",112,0)
 L +^ECX(727,0):3 Q:'$T  S EC=$P(^ECX(727,0),U,3)+1,$P(^(0),U,3,4)=EC_U_EC L -^ECX(727,0) ;144 Added time out to lock as required by standard
"RTN","ECXTRAC",113,0)
 S ^ECX(727,EC,0)=EC_U_DT_U_ECPACK_U_ECSD_U_$E(ECED,1,7)_U_U_DUZ
"RTN","ECXTRAC",114,0)
 S ^ECX(727,EC,"HEAD")=ECHEAD
"RTN","ECXTRAC",115,0)
 S:ECFILE=727.816 ECFILE=727.827 S ^ECX(727,EC,"FILE")=ECFILE
"RTN","ECXTRAC",116,0)
 S ^ECX(727,EC,"GRP")=ECGRP
"RTN","ECXTRAC",117,0)
 I $G(ECXLOGIC)="" S ECXLOGIC=$$FISCAL^ECXUTL1(ECSD)
"RTN","ECXTRAC",118,0)
 S ^ECX(727,EC,"VER")=$G(ECVER)_"^"_ECXLOGIC
"RTN","ECXTRAC",119,0)
 S ^ECX(727,EC,"DIV")=ECXINST
"RTN","ECXTRAC",120,0)
 S DA=EC,DIK="^ECX(727," D IX^DIK K DIK,DA
"RTN","ECXTRAC",121,0)
 S ECRN=0,ECXYM=$$ECXYM^ECXUTL(ECED),EC23=ECXYM_U_EC
"RTN","ECXTRAC",122,0)
 S ECXSTART=$P($$HTE^XLFDT($H),":",1,2),ECXNOW=$H
"RTN","ECXTRAC",123,0)
 ;do specific extract
"RTN","ECXTRAC",124,0)
 D @ECRTN
"RTN","ECXTRAC",125,0)
 ;if task gets stop request, set ztstop and quit
"RTN","ECXTRAC",126,0)
 I QFLG D  Q
"RTN","ECXTRAC",127,0)
 .S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)="",ZTSTOP=1
"RTN","ECXTRAC",128,0)
 .K ^XTMP("ECX EXTRACT",ECHEAD) ;144 Delete queued information if stopped by user
"RTN","ECXTRAC",129,0)
 .D QKILL
"RTN","ECXTRAC",130,0)
 .D QMSG
"RTN","ECXTRAC",131,0)
 .D ^ECXKILL
"RTN","ECXTRAC",132,0)
 ;Set last date for extract
"RTN","ECXTRAC",133,0)
 I '$P($G(ECXDATES),"^",3) D
"RTN","ECXTRAC",134,0)
 .;* set last date for all extracts except prosthetics
"RTN","ECXTRAC",135,0)
 .I ECGRP'="PRO" S $P(^ECX(728,1,ECNODE),U,ECPIECE)=$P(ECED,".") Q
"RTN","ECXTRAC",136,0)
 .;* set last date for prosthetics
"RTN","ECXTRAC",137,0)
 .N ECXDA1
"RTN","ECXTRAC",138,0)
 .S ECXDA1=$O(^ECX(728,0))
"RTN","ECXTRAC",139,0)
 .S $P(^ECX(728,ECXDA1,1,ECXINST,0),U,2)=$P(ECED,".")
"RTN","ECXTRAC",140,0)
 S TIME=$P($$HTE^XLFDT($H),":",1,2)
"RTN","ECXTRAC",141,0)
 S $P(^ECX(727,$P(EC23,U,2),0),U,6)=ECRN
"RTN","ECXTRAC",142,0)
 ;set piece 3 and 4 of the zero node
"RTN","ECXTRAC",143,0)
 S ECLAST=$O(^ECX(ECFILE,99999999),-1),ECTOTAL=$P(^ECX(ECFILE,0),U,4)+ECRN,$P(^(0),U,3,4)=ECLAST_U_ECTOTAL K ECLAST,ECTOTAL
"RTN","ECXTRAC",144,0)
 D MSG
"RTN","ECXTRAC",145,0)
 S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)=""
"RTN","ECXTRAC",146,0)
 K ^XTMP("ECX EXTRACT",ECHEAD) ;144 Delete queued information if processing completed normally
"RTN","ECXTRAC",147,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ECXTRAC",148,0)
 Q
"RTN","ECXTRAC",149,0)
 ;
"RTN","ECXTRAC",150,0)
MSG ; send message to mail group 'DSS-ECGRP'
"RTN","ECXTRAC",151,0)
 S XMSUB=ECINST_" - "_ECPACK_" EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXTRAC",152,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTRAC",153,0)
 S ECMSG(1,0)="The DSS-"_ECPACK_" extract (#"_$P(EC23,U,2)_") for "_ECSDN
"RTN","ECXTRAC",154,0)
 S ECMSG(2,0)="through "_ECEDN_" was begun on "_$P(ECXSTART,"@")_" at "_$P(ECXSTART,"@",2)
"RTN","ECXTRAC",155,0)
 S ECMSG(3,0)="and completed on "_$P(TIME,"@")_" at "_$P(TIME,"@",2)_"."
"RTN","ECXTRAC",156,0)
 S ECMSG(4,0)=" "
"RTN","ECXTRAC",157,0)
 S ECMSG(5,0)="A total of "_ECRN_" records were written."
"RTN","ECXTRAC",158,0)
 S ECMSG(6,0)=" "
"RTN","ECXTRAC",159,0)
 S ECMSG(7,0)="Extract time was [HH:MM:SS] "_$$HDIFF^XLFDT($H,ECXNOW,3)
"RTN","ECXTRAC",160,0)
 S ECMSG(8,0)=" "
"RTN","ECXTRAC",161,0)
 S X=$E(ECXLOGIC,5) S X=$S((X="")!(X=" "):"",1:"revision "_X_" of ")
"RTN","ECXTRAC",162,0)
 S ECMSG(9,0)="The data was extracted using "_X_"fiscal year "_$E(ECXLOGIC,1,4)_" logic."
"RTN","ECXTRAC",163,0)
 S ECMSG(10,0)=" "
"RTN","ECXTRAC",164,0)
 S XMTEXT="ECMSG("
"RTN","ECXTRAC",165,0)
 D ^XMD
"RTN","ECXTRAC",166,0)
 Q
"RTN","ECXTRAC",167,0)
 ;
"RTN","ECXTRAC",168,0)
QMSG ; send abort message to mail group 'DSS-ECGRP'
"RTN","ECXTRAC",169,0)
 S XMSUB=ECINST_" - "_ECPACK_" EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXTRAC",170,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTRAC",171,0)
 S ECMSG(1,0)="The DSS-"_ECPACK_" extract (#"_$P(EC23,U,2)_") for "_ECSDN
"RTN","ECXTRAC",172,0)
 S ECMSG(2,0)="through "_ECEDN_" was begun on "_$P(ECXSTART,"@")_" at "_$P(ECXSTART,"@",2)_"."
"RTN","ECXTRAC",173,0)
 S ECMSG(3,0)=" "
"RTN","ECXTRAC",174,0)
 S ECMSG(4,0)="A user stop request was received by Taskmanager which caused processing"
"RTN","ECXTRAC",175,0)
 S ECMSG(5,0)="to terminate before completion.  Any records which may have been created"
"RTN","ECXTRAC",176,0)
 S ECMSG(6,0)="in file #"_ECFILE_" for this extract have been deleted."
"RTN","ECXTRAC",177,0)
 S ECMSG(7,0)=" "
"RTN","ECXTRAC",178,0)
 S XMTEXT="ECMSG("
"RTN","ECXTRAC",179,0)
 D ^XMD
"RTN","ECXTRAC",180,0)
 Q
"RTN","ECXTRAC",181,0)
 ;
"RTN","ECXTRAC",182,0)
QKILL ;delete records created for any extract stopped at user request
"RTN","ECXTRAC",183,0)
 N ECX,FILE,IEN,DA,DIK
"RTN","ECXTRAC",184,0)
 S FILE="^ECX("_ECFILE_","
"RTN","ECXTRAC",185,0)
 S ECX=$P(EC23,U,2)
"RTN","ECXTRAC",186,0)
 F  S IEN=$O(^ECX(ECFILE,999999999),-1) Q:($P(^ECX(ECFILE,IEN,0),U,3)'=ECX)  D
"RTN","ECXTRAC",187,0)
 .S DIK=FILE,DA=IEN D ^DIK
"RTN","ECXTRAC",188,0)
 Q
"RTN","ECXTRAC",189,0)
 ;
"RTN","ECXTRAC",190,0)
CHK2 ;iv extract check - all active iv rooms to have a division
"RTN","ECXTRAC",191,0)
 S EC=0
"RTN","ECXTRAC",192,0)
 D ALL^PSJ59P5(,"??","ECXIV")
"RTN","ECXTRAC",193,0)
 F  S EC=$O(^TMP($J,"ECXIV",EC)) Q:'EC  I '^(EC,19) D  I CHKFLG D EXIT Q
"RTN","ECXTRAC",194,0)
 .S CHKFLG=$S($G(^TMP($J,"ECXIV",EC,19)):1,$G(^(19))>DT:1,1:0)
"RTN","ECXTRAC",195,0)
 .I CHKFLG D
"RTN","ECXTRAC",196,0)
 ..W !!,"All active IV Rooms in the IV Room file (#59.5) must have a ""DIVISION""",!,"assigned to run this extract!"
"RTN","ECXTRAC",197,0)
 ..W !!,"This information can be entered using the DSS Extract Manager's Maintenance ",!,"option ""Enter/Edit IV Room Division""."
"RTN","ECXTRAC",198,0)
 ..D PAUSE
"RTN","ECXTRAC",199,0)
EXIT K ^TMP($J,"ECXIV")
"RTN","ECXTRAC",200,0)
 Q
"RTN","ECXTRAC",201,0)
 ;
"RTN","ECXTRAC",202,0)
PAUSE ;pause screen
"RTN","ECXTRAC",203,0)
 N DIR,X,Y
"RTN","ECXTRAC",204,0)
 S OUT=0
"RTN","ECXTRAC",205,0)
 I $E(IOST)="C" D
"RTN","ECXTRAC",206,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXTRAC",207,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXTRAC",208,0)
 I 'Y S OUT=1
"RTN","ECXTRAC",209,0)
 W !!
"RTN","ECXTRAC",210,0)
 Q
"RTN","ECXTRAC",211,0)
 ;API added in patch 144
"RTN","ECXTRAC",212,0)
RUSURE(TYPE) ;Allow user to override running node or bypass last date run checks
"RTN","ECXTRAC",213,0)
 N DIR,Y,ZTSK,USER,QUE,NODE,STDT,EDDT
"RTN","ECXTRAC",214,0)
 I TYPE=1 D
"RTN","ECXTRAC",215,0)
 .S NODE=$G(^XTMP("ECX EXTRACT",ECHEAD))
"RTN","ECXTRAC",216,0)
 .S ZTSK=$P(NODE,U),USER=$$GET1^DIQ(200,$P(NODE,U,2),.01),QUE=$$HTE^XLFDT($P(NODE,U,3)),STDT=$$FMTE^XLFDT($P(NODE,U,4)),EDDT=$$FMTE^XLFDT($P(NODE,U,5))
"RTN","ECXTRAC",217,0)
 .I ZTSK D STAT^%ZTLOAD D  W !
"RTN","ECXTRAC",218,0)
 ..W "Task Information: ",!,$$REPEAT^XLFSTR("-",17),!,"Task #: ",ZTSK,!,"Queued by: ",USER,!,"Extract date range: ",STDT," to ",EDDT,!,"Status: "
"RTN","ECXTRAC",219,0)
 ..I '$G(ZTSK(0))!(ZTSK(1)=0) W "Task deleted, no further information available."
"RTN","ECXTRAC",220,0)
 ..I ZTSK(1)=1 W "ACTIVE - Task is scheduled to start on ",QUE
"RTN","ECXTRAC",221,0)
 ..I ZTSK(1)=2 W "ACTIVE - Task is currently running and started on ",QUE
"RTN","ECXTRAC",222,0)
 ..I ZTSK(1)=5 W "INACTIVE - Task ended abnormally"
"RTN","ECXTRAC",223,0)
 ..I ZTSK(1)=1!(ZTSK(1)=2) W !!,"**Before continuing, the ",$G(ECHEAD)," extract should be ",$S(ZTSK(1)=1:"deleted",1:"stopped")," in TaskManager.",!,"Failure to do so may result in multiple ",$G(ECHEAD)," extracts running simultaneously**."
"RTN","ECXTRAC",224,0)
 ..I ZTSK(1)=5 W !!,"Be sure any errors or issues have been addressed before overriding this status",!,"and starting another ",$G(ECHEAD)," extract."
"RTN","ECXTRAC",225,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="Do you want to continue processing the "_$G(ECHEAD)_" extract"
"RTN","ECXTRAC",226,0)
 D ^DIR
"RTN","ECXTRAC",227,0)
 I '+Y Q 0
"RTN","ECXTRAC",228,0)
 W !
"RTN","ECXTRAC",229,0)
 S DIR("A")="Are you SURE you want to run the "_$G(ECHEAD)_" extract"
"RTN","ECXTRAC",230,0)
 I TYPE=2 S DIR("A",1)="Make sure you have checked that your selected dates are correct",DIR("A",2)="before answering yes to the next question.",DIR("A",3)=""
"RTN","ECXTRAC",231,0)
 D ^DIR
"RTN","ECXTRAC",232,0)
 Q +Y
"RTN","ECXTRANS")
0^13^B59881332^B59690762
"RTN","ECXTRANS",1,0)
ECXTRANS ;ALB/GTS,JAP,BIR/DMA-Extract from Local Editing Files and Transmit ;2/15/13  12:47
"RTN","ECXTRANS",2,0)
 ;;3.0;DSS EXTRACTS;**2,9,12,8,13,14,23,24,33,49,54,75,71,144**;Dec 22, 1997;Build 9
"RTN","ECXTRANS",3,0)
EN ;entry point
"RTN","ECXTRANS",4,0)
 N ECDA,ECRE,ECTMP,ECCHK,ECDIVVR,ECXDIQ,JJ,SS,OUT,DIR,DUOUT
"RTN","ECXTRANS",5,0)
 N DTOUT,DIRUT,DIC,X,Y,ECXLOGIC,ECSD,FODMN
"RTN","ECXTRANS",6,0)
 S ECXQUEUE=$P($G(^ECX(728,1,"QUEUE")),"^",1)
"RTN","ECXTRANS",7,0)
 I ECXQUEUE'?1"DM"1U D  Q
"RTN","ECXTRANS",8,0)
 .W !,"You have not defined a proper transmission queue"
"RTN","ECXTRANS",9,0)
 .W !,"for entry number 1 in the DSS EXTRACTS file (#728)."
"RTN","ECXTRANS",10,0)
 .W !,"No transmission allowed."
"RTN","ECXTRANS",11,0)
 .D PAUSE
"RTN","ECXTRANS",12,0)
 ;** check divisions for transmission
"RTN","ECXTRANS",13,0)
 S ECCHK=$$DIV4^XUSER(.ECTMP,DUZ)
"RTN","ECXTRANS",14,0)
 I 'ECCHK D  Q
"RTN","ECXTRANS",15,0)
 .W !,"You do not have any divisions defined in your user set up and cannot transmit."
"RTN","ECXTRANS",16,0)
 .S DIR(0)="FAO^1:1",DIR("A")="Hit Return to continue." D ^DIR K DIR,X,Y
"RTN","ECXTRANS",17,0)
 W !!,"Your user setup will only allow you to transmit extracts from the"
"RTN","ECXTRANS",18,0)
 W !,"following divisions:",!
"RTN","ECXTRANS",19,0)
 S ECDIVVR=""
"RTN","ECXTRANS",20,0)
 F  S ECDIVVR=$O(ECTMP(ECDIVVR)) Q:'(+ECDIVVR)  D
"RTN","ECXTRANS",21,0)
 .K ECXDIC S DA=ECDIVVR,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01"
"RTN","ECXTRANS",22,0)
 .D EN^DIQ1 W !,"   ",$G(ECXDIC(4,DA,.01,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXTRANS",23,0)
 W !!,"If you can't select an extract, it is probably from another division.",!
"RTN","ECXTRANS",24,0)
 D PAUSE Q:OUT
"RTN","ECXTRANS",25,0)
AGAIN S ECRE="",DIC="^ECX(727,",DIC(0)="AEQM"
"RTN","ECXTRANS",26,0)
 S DIC("A")="Transmit which extract: "
"RTN","ECXTRANS",27,0)
 S DIC("S")="I '$D(^ECX(727,+Y,""L"")),'$D(^ECX(727,+Y,""PURG"")),$D(ECTMP(+$P($G(^ECX(727,+Y,""DIV"")),U,1)))"
"RTN","ECXTRANS",28,0)
 D ^DIC
"RTN","ECXTRANS",29,0)
 I Y<0 W !! Q
"RTN","ECXTRANS",30,0)
 ;get data on extract
"RTN","ECXTRANS",31,0)
 S DR="1;2;3;4;5;6;14;15",(ECDA,DA)=+Y,DIQ(0)="IE",DIQ="ECXDIQ" D EN^DIQ1
"RTN","ECXTRANS",32,0)
 I ECXDIQ(727,ECDA,14,"I")="" D
"RTN","ECXTRANS",33,0)
 .S ECXDIQ(727,ECDA,14,"I")=$$FISCAL^ECXUTL1(ECXDIQ(727,ECDA,3,"I"))
"RTN","ECXTRANS",34,0)
 .S ECXDIQ(727,ECDA,14,"E")=ECXDIQ(727,ECDA,14,"I")
"RTN","ECXTRANS",35,0)
 S ECXLOGIC=ECXDIQ(727,ECDA,14,"I")
"RTN","ECXTRANS",36,0)
 S ECSD=ECXDIQ(727,ECDA,3,"I")
"RTN","ECXTRANS",37,0)
 W !!,ECXDIQ(727,ECDA,6,"E")_" Extract (#"_ECDA_")",?42,"Records:    ",ECXDIQ(727,ECDA,5,"E")
"RTN","ECXTRANS",38,0)
 W !,"Generated on: ",ECXDIQ(727,ECDA,1,"E"),?42,"Start date: ",ECXDIQ(727,ECDA,3,"E")
"RTN","ECXTRANS",39,0)
 W !,"Division:     ",$E(ECXDIQ(727,ECDA,15,"E"),1,26),?42,"End date:   ",ECXDIQ(727,ECDA,4,"E")
"RTN","ECXTRANS",40,0)
 S X=$E(ECXDIQ(727,ECDA,14,"I"),5) S X=$S((X="")!(X=" "):"",1:"revision "_X_" of ")
"RTN","ECXTRANS",41,0)
 W !!,"The data was extracted using "_X_"fiscal year "_$E(ECXDIQ(727,ECDA,14,"I"),1,4)_" logic."
"RTN","ECXTRANS",42,0)
 W !!,"MailMan transmission of the "_ECXDIQ(727,ECDA,2,"E")_" extract is set to a"
"RTN","ECXTRANS",43,0)
 W !,"limit of 131,000 bytes per message.  Each extract record ends with a ^~."
"RTN","ECXTRANS",44,0)
 I $G(^ECX(727,ECDA,"TR")) S ECX=^("TR") D  Q:OUT
"RTN","ECXTRANS",45,0)
 .S OUT=0
"RTN","ECXTRANS",46,0)
 .W !!,"This extract was transmitted on ",$TR($$FMTE^XLFDT(ECX,"5DF")," ","0")
"RTN","ECXTRANS",47,0)
 .K ECX S DIR(0)="Y",DIR("A")="Do you want to retransmit " D ^DIR K DIR
"RTN","ECXTRANS",48,0)
 .I 'Y S OUT=1 Q
"RTN","ECXTRANS",49,0)
 .K ^ECX(727,ECDA,"TR")
"RTN","ECXTRANS",50,0)
 .S ECRE="re"
"RTN","ECXTRANS",51,0)
 S ECTYPE=$P(^ECX(727,ECDA,0),U,3),ECIEN=+$O(^ECX(727.1,"AC",ECTYPE,0))
"RTN","ECXTRANS",52,0)
 S ECPIECE=$P($G(^ECX(727.1,ECIEN,0)),U,10)
"RTN","ECXTRANS",53,0)
 I ECPIECE>0,$P($G(^ECX(728,1,7.1)),U,ECPIECE)]"" D  Q
"RTN","ECXTRANS",54,0)
 .D MES^XPDUTL(" ")
"RTN","ECXTRANS",55,0)
 .D MES^XPDUTL("An "_ECTYPE_" Extract is currently running or scheduled to run.")
"RTN","ECXTRANS",56,0)
 .D MES^XPDUTL("Please wait until that job has completed before attempting")
"RTN","ECXTRANS",57,0)
 .D MES^XPDUTL("this transmission.")
"RTN","ECXTRANS",58,0)
 .D MES^XPDUTL(" ")
"RTN","ECXTRANS",59,0)
 .D PAUSE
"RTN","ECXTRANS",60,0)
 S ZTSK=$G(^ECX(727,ECDA,"Q"))
"RTN","ECXTRANS",61,0)
 I ZTSK D STAT^%ZTLOAD I ZTSK(0) I ZTSK(1)<3 D  Q
"RTN","ECXTRANS",62,0)
 .W !!,"Task ",ZTSK," is already queued to transmit this extract."
"RTN","ECXTRANS",63,0)
 .K ZTSK
"RTN","ECXTRANS",64,0)
 .D PAUSE
"RTN","ECXTRANS",65,0)
 S FODMN=$$FODMN()
"RTN","ECXTRANS",66,0)
 ;Field office reminder
"RTN","ECXTRANS",67,0)
 I FODMN D
"RTN","ECXTRANS",68,0)
 .W !
"RTN","ECXTRANS",69,0)
 .W !,"** This extract is being sent from a field office domain.  **"
"RTN","ECXTRANS",70,0)
 .W !,"** Extract message(s) will only be delivered to you and    **"
"RTN","ECXTRANS",71,0)
 .W !,"** will be placed into your 'DSSXMIT' mail basket.         **"
"RTN","ECXTRANS",72,0)
 .W !
"RTN","ECXTRANS",73,0)
 .;Ensure user has a DSSXMIT mail basket
"RTN","ECXTRANS",74,0)
 .N TMPARR
"RTN","ECXTRANS",75,0)
 .D LISTBSKT^XMXAPIB(DUZ,,,,"DSSXMIT","TMPARR")
"RTN","ECXTRANS",76,0)
 .I '$D(TMPARR("XMLIST","BSKT","DSSXMIT")) D
"RTN","ECXTRANS",77,0)
 ..;Create DSSXMIT basket
"RTN","ECXTRANS",78,0)
 ..N IEN,XMERR
"RTN","ECXTRANS",79,0)
 ..D CRE8BSKT^XMXAPIB(DUZ,"DSSXMIT",.IEN)
"RTN","ECXTRANS",80,0)
 ..K ^TMP("XMERR",$J)
"RTN","ECXTRANS",81,0)
 ;Test queue clearance
"RTN","ECXTRANS",82,0)
 ;I 'FODMN I (ECXLOGIC'=$$FISCAL^ECXUTL1(ECSD))!((ECXLOGIC>$$FISCAL^ECXUTL1(DT))!(ECXLOGIC=$$FISCAL^ECXUTL1(DT))) D  Q:OUT
"RTN","ECXTRANS",83,0)
 ;.S OUT=0
"RTN","ECXTRANS",84,0)
 ;.K DIR
"RTN","ECXTRANS",85,0)
 ;.S DIR(0)="Y"
"RTN","ECXTRANS",86,0)
 ;.S DIR("A",1)="** This extract will be transmitted to the AAC test queue **"
"RTN","ECXTRANS",87,0)
 ;.S DIR("A")="Do you want to continue "
"RTN","ECXTRANS",88,0)
 ;.W !! D ^DIR
"RTN","ECXTRANS",89,0)
 ;.I 'Y S OUT=1 Q
"RTN","ECXTRANS",90,0)
 ;.S ECXQUEUE=$P($G(^ECX(728,1,"QUEUE")),"^",2)
"RTN","ECXTRANS",91,0)
 ;.S:ECXQUEUE="" ECXQUEUE="DMT"
"RTN","ECXTRANS",92,0)
 S ZTSAVE("ECDA")="",ZTSAVE("ECXQUEUE")="",ZTSAVE("ECRE")=""
"RTN","ECXTRANS",93,0)
 S ZTRTN="START^ECXTRANS",ZTIO=""
"RTN","ECXTRANS",94,0)
 S ZTDESC="Transmission of extract # "_ECDA
"RTN","ECXTRANS",95,0)
 W !! D ^%ZTLOAD
"RTN","ECXTRANS",96,0)
 I $D(ZTSK) D
"RTN","ECXTRANS",97,0)
 .W !,"Request queued as Task #",ZTSK,"."
"RTN","ECXTRANS",98,0)
 .S ^ECX(727,ECDA,"Q")=ZTSK K ZTSK
"RTN","ECXTRANS",99,0)
 .D PAUSE
"RTN","ECXTRANS",100,0)
 Q
"RTN","ECXTRANS",101,0)
 ; entry point for task
"RTN","ECXTRANS",102,0)
START N DA,DIC,DIQ,DR,ECAR1,ECAR2,ECC1,ECC2,ECED,ECGPR,ECF,ECGRP,ECHEAD,ECINST
"RTN","ECXTRANS",103,0)
 N ECMAX,ECMAXR,ECMSN,ECPACK,ECSIZ,ECVER,ECXDIC,I,J,EXDT
"RTN","ECXTRANS",104,0)
 N STR,STRCNT,X,ECSD,ECXLOGIC
"RTN","ECXTRANS",105,0)
 S:$P(^ECX(727,ECDA,0),U,3)'="Prosthetics" ECINST=$P(^ECX(728,1,0),U)
"RTN","ECXTRANS",106,0)
 S:$P(^ECX(727,ECDA,0),U,3)="Prosthetics" ECINST=$P(^("DIV"),U)
"RTN","ECXTRANS",107,0)
 S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXTRANS",108,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I"))
"RTN","ECXTRANS",109,0)
 S ECF=^ECX(727,ECDA,"FILE"),ECHEAD=^("HEAD"),ECGRP=^("GRP")
"RTN","ECXTRANS",110,0)
 S X=^(0),ECPACK=$P(X,U,3),ECSD=$P(X,U,4),ECED=$P(X,U,5)
"RTN","ECXTRANS",111,0)
 S X=$G(^("VER")),ECVER=$P(X,"^",1),ECXLOGIC=$P(X,"^",2)
"RTN","ECXTRANS",112,0)
 S:'ECVER ECVER=1 S ECVER=$$RJ^XLFSTR(ECVER,3,0)
"RTN","ECXTRANS",113,0)
 I ECXLOGIC="" S ECXLOGIC=$$FISCAL^ECXUTL1(ECSD)
"RTN","ECXTRANS",114,0)
 S ECXLOGIC=$$PAD^ECXUTL1(ECXLOGIC,5,"B"," ")
"RTN","ECXTRANS",115,0)
 I ECPACK["(setup)" S ECXQUEUE="DMU"
"RTN","ECXTRANS",116,0)
 K ^TMP($J)
"RTN","ECXTRANS",117,0)
 S ECHD(1)=ECINST_ECHEAD_$$ECXYM^ECXUTL(ECED)_ECVER_ECXLOGIC
"RTN","ECXTRANS",118,0)
 S ECMAX=130000,ECMAXR=250,ECLN=2,ECMSN=1,(ECRN,ECSIZ)=0,J=""
"RTN","ECXTRANS",119,0)
 F  S J=$O(^ECX(ECF,"AC",ECDA,J)) Q:('J)  D
"RTN","ECXTRANS",120,0)
 .M ECAR1=^ECX(ECF,J) S (ECAR2,ECC2)=1,(ECAR2(ECC2),ECC1)=""
"RTN","ECXTRANS",121,0)
 .F  S ECC1=$O(ECAR1(ECC1)) Q:ECC1=""  D
"RTN","ECXTRANS",122,0)
 ..S:ECC1=0 ECAR1(ECC1)=$P(ECAR1(ECC1),"^",4,999)
"RTN","ECXTRANS",123,0)
 ..S ECAR2(ECC2)=ECAR2(ECC2)_$TR(ECAR1(ECC1),"~"," ") I $L(ECAR2(ECC2))>ECMAXR D  ;144
"RTN","ECXTRANS",124,0)
 ...F I=ECMAXR:-1:1 Q:$E(ECAR2(ECC2),I)="^"
"RTN","ECXTRANS",125,0)
 ...S (X,ECAR2)=ECAR2+1,ECAR2(X)=$E(ECAR2(ECC2),I+1,$L(ECAR2(ECC2)))
"RTN","ECXTRANS",126,0)
 ...S ECAR2(ECC2)=$E(ECAR2(ECC2),1,I),ECC2=X
"RTN","ECXTRANS",127,0)
 .S ECAR2(ECC2)=ECAR2(ECC2)_"^~",ECRN=ECRN+1,X=""
"RTN","ECXTRANS",128,0)
 .F  S X=$O(ECAR2(X)) Q:X=""  D
"RTN","ECXTRANS",129,0)
 ..S ^TMP($J,ECMSN,ECLN,0)=ECAR2(X),ECLN=ECLN+1,ECSIZ=ECSIZ+$L(ECAR2(X))
"RTN","ECXTRANS",130,0)
 .K ECAR1,ECAR2
"RTN","ECXTRANS",131,0)
 .I (ECSIZ>ECMAX),($O(^ECX(ECF,"AC",ECDA,J))) D
"RTN","ECXTRANS",132,0)
 ..S ECLN=2,ECMSN=ECMSN+1,ECSIZ=0
"RTN","ECXTRANS",133,0)
 ;quit if user stopped task
"RTN","ECXTRANS",134,0)
 I $$S^%ZTLOAD D CLEAN Q
"RTN","ECXTRANS",135,0)
 ;generate mailman messages to aac
"RTN","ECXTRANS",136,0)
 S ECXLNCNT=9,(ECXXMZ,STRCNT)=0,STR=""
"RTN","ECXTRANS",137,0)
 F ECMS=1:1:ECMSN D
"RTN","ECXTRANS",138,0)
 .D SEND(.ECXXMZ)
"RTN","ECXTRANS",139,0)
 .S STR=STR_$$RJ^XLFSTR(ECXXMZ,18," "),STRCNT=STRCNT+1 I STRCNT=4 D
"RTN","ECXTRANS",140,0)
 ..S ^TMP($J,"LOC",ECXLNCNT,0)=STR,ECXLNCNT=ECXLNCNT+1
"RTN","ECXTRANS",141,0)
 ..S STR="",STRCNT=0
"RTN","ECXTRANS",142,0)
 I STR]"" S ^TMP($J,"LOC",ECXLNCNT,0)=STR
"RTN","ECXTRANS",143,0)
 ;send msg to local dss grp
"RTN","ECXTRANS",144,0)
 D SENDLOC,CLEAN
"RTN","ECXTRANS",145,0)
 Q
"RTN","ECXTRANS",146,0)
 ;
"RTN","ECXTRANS",147,0)
SEND(ECXXMZ) ;send individual messages
"RTN","ECXTRANS",148,0)
 N ECXDD,DA,DIC,DIE,DINUM,X,Y,Z,XMDUZ,XMTEXT,XMSUB,XMY,XMZ,FODMN
"RTN","ECXTRANS",149,0)
 S XMSUB="("_ECGRP_") "_ECINST_" - "_ECPACK_" DSS EXTRACT, MESSAGE "_ECMS_" OF "_ECMSN
"RTN","ECXTRANS",150,0)
 S XMDUZ="DSS SYSTEM",^TMP($J,ECMS,1,0)=ECHD(1)
"RTN","ECXTRANS",151,0)
 S XMY("XXX@Q-"_ECXQUEUE_".DOMAIN.EXT")=""
"RTN","ECXTRANS",152,0)
 ;Send extracts done at field offices to user instead of AAC
"RTN","ECXTRANS",153,0)
 S FODMN=$$FODMN()
"RTN","ECXTRANS",154,0)
 I FODMN D
"RTN","ECXTRANS",155,0)
 .K XMY
"RTN","ECXTRANS",156,0)
 .S XMY(DUZ)=""
"RTN","ECXTRANS",157,0)
 S XMTEXT="^TMP($J,ECMS,"
"RTN","ECXTRANS",158,0)
 D ^XMD
"RTN","ECXTRANS",159,0)
 S ECXXMZ=XMZ
"RTN","ECXTRANS",160,0)
 ;store msg# in extract log
"RTN","ECXTRANS",161,0)
 D FIELD^DID(727,301,"","SPECIFIER","ECXDD")
"RTN","ECXTRANS",162,0)
 S DA(1)=ECDA,DIC(0)="L",DIC("P")=ECXDD("SPECIFIER")
"RTN","ECXTRANS",163,0)
 S DIC="^ECX(727,"_DA(1)_",1,",X=XMZ,DINUM=X
"RTN","ECXTRANS",164,0)
 K DD,DO D FILE^DICN
"RTN","ECXTRANS",165,0)
 ;Move message to DSSXMIT basket if sending from field office
"RTN","ECXTRANS",166,0)
 I FODMN D
"RTN","ECXTRANS",167,0)
 .N XMERR
"RTN","ECXTRANS",168,0)
 .D MOVEMSG^XMXAPI(DUZ,,XMZ,"DSSXMIT",.X)
"RTN","ECXTRANS",169,0)
 .K ^TMP("XMERR",$J)
"RTN","ECXTRANS",170,0)
 Q
"RTN","ECXTRANS",171,0)
 ;
"RTN","ECXTRANS",172,0)
SENDLOC ; send message to mail group 'DSS-ECGRP'
"RTN","ECXTRANS",173,0)
 S TIME=$P($$HTE^XLFDT($H),":",1,2)
"RTN","ECXTRANS",174,0)
 S XMSUB=ECINST_" - "_ECPACK_" EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXTRANS",175,0)
 K XMY S XMY(DUZ)="",XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTRANS",176,0)
 S ^TMP($J,"LOC",1,0)="The DSS "_ECPACK_" ("_ECHEAD_") extract, #"_ECDA_","
"RTN","ECXTRANS",177,0)
 S ^TMP($J,"LOC",2,0)="was "_ECRE_"transmitted on "_$P(TIME,"@")_" at "_$P(TIME,"@",2)_". "
"RTN","ECXTRANS",178,0)
 S ^TMP($J,"LOC",3,0)=" "
"RTN","ECXTRANS",179,0)
 S ^TMP($J,"LOC",4,0)="Maximum number of Bytes (characters) per message: 131,000 "
"RTN","ECXTRANS",180,0)
 S ^TMP($J,"LOC",5,0)=" "
"RTN","ECXTRANS",181,0)
 S ^TMP($J,"LOC",6,0)="A total of "_ECRN_" records were written."
"RTN","ECXTRANS",182,0)
 S ^TMP($J,"LOC",7,0)="A total of "_ECMSN_" messages were sent."
"RTN","ECXTRANS",183,0)
 S ^TMP($J,"LOC",8,0)="    Message numbers :"
"RTN","ECXTRANS",184,0)
 S XMTEXT="^TMP($J,""LOC"","
"RTN","ECXTRANS",185,0)
 D ^XMD
"RTN","ECXTRANS",186,0)
 S ^ECX(727,ECDA,"TR")=DT
"RTN","ECXTRANS",187,0)
 Q
"RTN","ECXTRANS",188,0)
 ;
"RTN","ECXTRANS",189,0)
CLEAN ;clean-up
"RTN","ECXTRANS",190,0)
 S ZTREQ="@"
"RTN","ECXTRANS",191,0)
 K ^TMP($J),^ECX(727,ECDA,"Q"),XMDUZ,XMTEXT,XMSUB,XMY,XMZ
"RTN","ECXTRANS",192,0)
 K ECDA,ECRE,ECTMP,ECCHK,ECDIVVR,ECXDIQ,ECXMAX,ECXMSG
"RTN","ECXTRANS",193,0)
 D ^ECXKILL
"RTN","ECXTRANS",194,0)
 I $$S^%ZTLOAD K ZTREQ S ZTSTOP=1
"RTN","ECXTRANS",195,0)
 Q
"RTN","ECXTRANS",196,0)
 ;
"RTN","ECXTRANS",197,0)
PAUSE ;pause screen
"RTN","ECXTRANS",198,0)
 S OUT=0
"RTN","ECXTRANS",199,0)
 I $E(IOST)="C" D
"RTN","ECXTRANS",200,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXTRANS",201,0)
 .K DIR S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXTRANS",202,0)
 I 'Y S OUT=1
"RTN","ECXTRANS",203,0)
 W !!
"RTN","ECXTRANS",204,0)
 Q
"RTN","ECXTRANS",205,0)
 ;
"RTN","ECXTRANS",206,0)
FODMN(DOMAIN)   ;Is domain a field office domain
"RTN","ECXTRANS",207,0)
 ;Input : DOMAIN - Domain name to check
"RTN","ECXTRANS",208,0)
 ;               - Default value pulled from ^XMB("NETNAME")
"RTN","ECXTRANS",209,0)
 ;Output: 1 = Yes  /  0 = No
"RTN","ECXTRANS",210,0)
 ;
"RTN","ECXTRANS",211,0)
 N X,SUB,OUT
"RTN","ECXTRANS",212,0)
 S DOMAIN=$G(DOMAIN)
"RTN","ECXTRANS",213,0)
 S:(DOMAIN="") DOMAIN=$G(^XMB("NETNAME"))
"RTN","ECXTRANS",214,0)
 S OUT=0
"RTN","ECXTRANS",215,0)
 F X=1:1:$L(DOMAIN,".") D  Q:OUT
"RTN","ECXTRANS",216,0)
 .S SUB=$P(DOMAIN,".",X)
"RTN","ECXTRANS",217,0)
 .I ($E(SUB,1,3)="FO-")!($E(SUB,1,4)="ISC-") S OUT=1
"RTN","ECXTRANS",218,0)
 Q OUT
"RTN","ECXUD")
0^12^B62950781^B58470506
"RTN","ECXUD",1,0)
ECXUD ;ALB/JAP,BIR/DMA,PTD-Extract from UNIT DOSE EXTRACT DATA File (#728.904) ;5/9/13  16:51
"RTN","ECXUD",2,0)
 ;;3.0;DSS EXTRACTS;**10,8,24,33,39,46,49,71,84,92,107,105,120,127,144**;Dec 22, 1997;Build 9
"RTN","ECXUD",3,0)
BEG ;entry point from option
"RTN","ECXUD",4,0)
 I '$O(^ECX(728.904,"A",0)) W !,"There are no unit dose orders to extract",!! R X:5 K X Q
"RTN","ECXUD",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXUD",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXUD",7,0)
 Q
"RTN","ECXUD",8,0)
 ;
"RTN","ECXUD",9,0)
START ;start package specific extract
"RTN","ECXUD",10,0)
 S QFLG=0
"RTN","ECXUD",11,0)
 S ECED=ECED+.3
"RTN","ECXUD",12,0)
 F ECD=ECSD1:0 S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:QFLG  D
"RTN","ECXUD",13,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:QFLG  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXUD",14,0)
 ..S DATA=^ECX(728.904,ECXJ,0),^(1)=$P(EC23,U,2),^ECX(728.904,"AC",$P(EC23,U,2),ECXJ)="" D STUFF
"RTN","ECXUD",15,0)
 K ^TMP($J,"ECXP")
"RTN","ECXUD",16,0)
 Q
"RTN","ECXUD",17,0)
 ;
"RTN","ECXUD",18,0)
STUFF ;get data
"RTN","ECXUD",19,0)
 N X,W,OK,P1,P3,PSTAT,PT,ECXPHA,ON,ECDRG,ECXESC,ECXECL,ECXCLST,ECPROIEN,ECXUDDT,ECXUDTM ;144
"RTN","ECXUD",20,0)
 S (ECXESC,ECXECL,ECXCLST)="" ;144
"RTN","ECXUD",21,0)
 S ECXDFN=$P(DATA,U,2),ECDRG=$P(DATA,U,4)
"RTN","ECXUD",22,0)
 ;
"RTN","ECXUD",23,0)
 ;get patient specific data
"RTN","ECXUD",24,0)
 S ECXERR="" D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXUD",25,0)
 Q:ECXERR
"RTN","ECXUD",26,0)
 ;
"RTN","ECXUD",27,0)
 S ECXPRO=$P(DATA,U,7),ECPROIEN=+ECXPRO,ECXPRO=$E($P(ECXPRO,";",2))_$P(ECXPRO,";")
"RTN","ECXUD",28,0)
 S ECXPRNPI=$$NPI^XUSNPI("Individual_ID",ECPROIEN,ECD)
"RTN","ECXUD",29,0)
 S:+ECXPRNPI'>0 ECXPRNPI="" S ECXPRNPI=$P(ECXPRNPI,U)
"RTN","ECXUD",30,0)
 S W=$P(DATA,U,6)
"RTN","ECXUD",31,0)
 S ECXDIV=$P($G(^DIC(42,+W,0)),U,11),ECXW=$P($G(^DIC(42,+W,44)),U)
"RTN","ECXUD",32,0)
 S ECXUDDT=$$ECXDATE^ECXUTL($P(DATA,U,3),ECXYM)
"RTN","ECXUD",33,0)
 S ECXUDTM=$E($P($P(DATA,U,3),".",2)_"000000",1,6)
"RTN","ECXUD",34,0)
 S ECXQTY=$P(DATA,U,5),ECXCOST=$P(DATA,U,8),ON=$P(DATA,U,10)
"RTN","ECXUD",35,0)
 ;call pharmacy drug file (#50) api via ecxutl5
"RTN","ECXUD",36,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG)
"RTN","ECXUD",37,0)
 S ECCAT=$P(ECXPHA,U,2),ECINV=$P(ECXPHA,U,4)
"RTN","ECXUD",38,0)
 I ECXLOGIC<2014 D  ;New way to calculate cost dea spl hndlg **144
"RTN","ECXUD",39,0)
 .S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXUD",40,0)
 I ECXLOGIC>2013 D
"RTN","ECXUD",41,0)
 .S ECINV=$S((+ECINV>0)&(+ECINV<6):+ECINV,ECINV["I":"I",1:"")
"RTN","ECXUD",42,0)
 S ECNDC=$P(ECXPHA,U,3)
"RTN","ECXUD",43,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXUD",44,0)
 S P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6),X="PSNAPIS"
"RTN","ECXUD",45,0)
 X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXUD",46,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXUD",47,0)
 ; - Department and National Production Division
"RTN","ECXUD",48,0)
 ;- Use of DSS Department postponed [S ECXDSSD=$$UDP^ECXDEPT(ECXDIV)]
"RTN","ECXUD",49,0)
 S ECXDSSD=""
"RTN","ECXUD",50,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXUD",51,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXUD",52,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXUD",53,0)
 ;- Ordering Date, Ordering Stop Code
"RTN","ECXUD",54,0)
 S ECXORDDT=$TR($$FMTE^XLFDT($P(DATA,U,9),"7DF")," /","0")
"RTN","ECXUD",55,0)
 S ECXORDST="" I ECXA="O" D
"RTN","ECXUD",56,0)
 .;Get ordering stop code based on FY 2006 logic for outpatient
"RTN","ECXUD",57,0)
 .S ECXORDST=$$DOUDO^ECXUTL5(ECXDFN,ON)
"RTN","ECXUD",58,0)
 ;Ordering Provider Person Class
"RTN","ECXUD",59,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXPRO,2,999),$P(DATA,U,9))
"RTN","ECXUD",60,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)="" ;144 BCMA are place holders now
"RTN","ECXUD",61,0)
 ;- Set national patient record flag if exist
"RTN","ECXUD",62,0)
 D NPRF^ECXUTL5
"RTN","ECXUD",63,0)
 ;- If no encounter number don't file record
"RTN","ECXUD",64,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,$P(DATA,U,3),ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXUD",65,0)
 D:ECXENC'="" FILE
"RTN","ECXUD",66,0)
 Q
"RTN","ECXUD",67,0)
 ;
"RTN","ECXUD",68,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get demographics from patient file
"RTN","ECXUD",69,0)
 ;init variables
"RTN","ECXUD",70,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXUD",71,0)
 ;get patient data if saved
"RTN","ECXUD",72,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXUD",73,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2)
"RTN","ECXUD",74,0)
 .S ECXMPI=$P(PT,U,3),ECXDOB=$P(PT,U,4)
"RTN","ECXUD",75,0)
 .S ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6)
"RTN","ECXUD",76,0)
 .S ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXUD",77,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12)
"RTN","ECXUD",78,0)
 .S ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXUD",79,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18)
"RTN","ECXUD",80,0)
 .S ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXUD",81,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24)
"RTN","ECXUD",82,0)
 .S ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXUD",83,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4),ECXCNTRY=$P(PT1,U,5)
"RTN","ECXUD",84,0)
 .S ECXSHADI=$P(PT1,U,6),ECXPATCAT=$P(PT1,U,7),ECXCLST=$P(PT1,U,8) ;144
"RTN","ECXUD",85,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXUD",86,0)
 ;set patient data
"RTN","ECXUD",87,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXUD",88,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXUD",89,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXUD",90,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXUD",91,0)
 .S ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXUD",92,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXUD",93,0)
 .S ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET"),ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXUD",94,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT")
"RTN","ECXUD",95,0)
 .S ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXUD",96,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL")
"RTN","ECXUD",97,0)
 .S ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXUD",98,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXUD",99,0)
 .S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXUD",100,0)
 .;OEF/OIF data
"RTN","ECXUD",101,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXUD",102,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXUD",103,0)
 .;get CNHU status
"RTN","ECXUD",104,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXUD",105,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXUD",106,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXUD",107,0)
 .; - Head and Neck Cancer Indicator
"RTN","ECXUD",108,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXUD",109,0)
 .; - Proj. 112/SHAD Indicator
"RTN","ECXUD",110,0)
 .S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXUD",111,0)
 . ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXUD",112,0)
 .S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXUD",113,0)
 .; - Race and Ethnicity
"RTN","ECXUD",114,0)
 .S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXUD",115,0)
 .S ECXRC1=ECXPAT("RACE1")
"RTN","ECXUD",116,0)
 .;get emergency response indicator (FEMA)
"RTN","ECXUD",117,0)
 .S ECXERI=ECXPAT("ERI")
"RTN","ECXUD",118,0)
 .S ECXEST=ECXPAT("EC STAT")
"RTN","ECXUD",119,0)
 .;save for later
"RTN","ECXUD",120,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXUD",121,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXUD",122,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT_U_ECXCNTRY_U_ECXSHADI_U_ECXPATCAT_U_ECXCLST ;144
"RTN","ECXUD",123,0)
 ;
"RTN","ECXUD",124,0)
 ;get inpatient data
"RTN","ECXUD",125,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXUD",126,0)
 S ECXTS=$P(X,U,3),ECXADM=$P(X,U,4),ECXDOM=$P(X,U,10)
"RTN","ECXUD",127,0)
 ;
"RTN","ECXUD",128,0)
 ;get primary care data
"RTN","ECXUD",129,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXUD",130,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXUD",131,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXUD",132,0)
 Q
"RTN","ECXUD",133,0)
 ;
"RTN","ECXUD",134,0)
FILE ;file record
"RTN","ECXUD",135,0)
 ;node0
"RTN","ECXUD",136,0)
 ;facility^dfn^ssn^name^in/out^day^drug category^quantity^ward^
"RTN","ECXUD",137,0)
 ;provider^cost^mov #^treat spec^ndc^new feeder key^investigational^
"RTN","ECXUD",138,0)
 ;udp time^adm date^adm time
"RTN","ECXUD",139,0)
 ;node1
"RTN","ECXUD",140,0)
 ;mpi^dss dept^provider npi^dom^observ pat ind^encounter num^
"RTN","ECXUD",141,0)
 ;prod div code^means tst^elig^dob^sex^state^county^zip+4^vet^
"RTN","ECXUD",142,0)
 ;period of svc^pow stat^pow loc^ir status^ao status^ao loc^
"RTN","ECXUD",143,0)
 ;purple heart ind.^mst status^cnh/sh status^enrollment loc^
"RTN","ECXUD",144,0)
 ;enrollment cat^enrollment status^enrollment priority^pc team^
"RTN","ECXUD",145,0)
 ;pc provider^pc provider npi^pc provider p.class^assoc. pc provider^
"RTN","ECXUD",146,0)
 ;assoc. pc provider npi^assoc. pc provider p.class
"RTN","ECXUD",147,0)
 ;node2
"RTN","ECXUD",148,0)
 ;ordering date^ordering stop code^head & neck cancer ind.^ethnicity^
"RTN","ECXUD",149,0)
 ;race1^bcma drug dispensed^bcma dose given^bcma unit of
"RTN","ECXUD",150,0)
 ;administration^bcma icu flag^ordering provider person class^
"RTN","ECXUD",151,0)
 ;^enrollment priority ECXPRIOR_enrollment subgroup
"RTN","ECXUD",152,0)
 ;ECXSBGRP^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet
"RTN","ECXUD",153,0)
 ;elig ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible
"RTN","ECXUD",154,0)
 ;ECXCVENC^national patient record flag ECXNPRFI^emerg resp indic(FEMA) 
"RTN","ECXUD",155,0)
 ;ECXERI^environ contamin ECXEST^OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^associate pc provider npi ECASNPI^primary care provider npi ECPTNPI^provider npi ECXPRNPI
"RTN","ECXUD",156,0)
 ;^country ECXCNTRY^PATCAT^Encounter SC ECXESC^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL
"RTN","ECXUD",157,0)
 ;
"RTN","ECXUD",158,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXUD",159,0)
 N ECXDATA
"RTN","ECXUD",160,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXUD",161,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXUD",162,0)
 ;done
"RTN","ECXUD",163,0)
 N DA,DIK
"RTN","ECXUD",164,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXUD",165,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXUD",166,0)
 S ECODE=ECODE_ECXUDDT_U_ECCAT_U_ECXQTY_U_ECXW_U_ECXPRO_U_ECXCOST_U
"RTN","ECXUD",167,0)
 S ECODE=ECODE_ECXMN_U_ECXTS_U_ECNDC_U_ECNFC_U_ECINV_U_ECXUDTM_U
"RTN","ECXUD",168,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXADM,ECXYM)_U
"RTN","ECXUD",169,0)
 S ECODE=ECODE_$$ECXTIME^ECXUTL(ECXADM)_U
"RTN","ECXUD",170,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXUD",171,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXMTST_U_ECXELIG_U_ECXDOB_U_ECXSEX_U
"RTN","ECXUD",172,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U
"RTN","ECXUD",173,0)
 S ECODE1=ECODE1_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U
"RTN","ECXUD",174,0)
 S ECODE1=ECODE1_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXCNHU_U_ECXENRL_U
"RTN","ECXUD",175,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_ECPTTM_U_ECPTPR_U
"RTN","ECXUD",176,0)
 S ECODE1=ECODE1_U_ECCLAS_U_ECASPR_U_U_ECCLAS2_U
"RTN","ECXUD",177,0)
 S ECODE2=ECXORDDT_U_ECXORDST_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXUD",178,0)
 I ECXLOGIC>2003 S ECODE2=ECODE2_U_ECXBCDD_U_ECXBCDG_U_ECXBCUA_U_ECXBCIF_U_ECXOPPC
"RTN","ECXUD",179,0)
 I ECXLOGIC>2004 S ECODE2=ECODE2_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXUD",180,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXEST
"RTN","ECXUD",181,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECXPRNPI
"RTN","ECXUD",182,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXUD",183,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT ; 127 PATCAT ADDED
"RTN","ECXUD",184,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXUD",185,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXUD",186,0)
 S ^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXUD",187,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXUD",188,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXUD",189,0)
 Q
"RTN","ECXUD",190,0)
 ;
"RTN","ECXUD",191,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXUD",192,0)
 S ECHEAD="UDP"
"RTN","ECXUD",193,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXUD",194,0)
 Q
"RTN","ECXUD",195,0)
 ;
"RTN","ECXUD",196,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXUD",197,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXUD",198,0)
 Q
"RTN","ECXUPRO")
0^34^B27534272^B23782854
"RTN","ECXUPRO",1,0)
ECXUPRO ;ALB/TJL-Prosthetic Extract Unusual Cost Report ;3/4/13  16:11
"RTN","ECXUPRO",2,0)
 ;;3.0;DSS EXTRACTS;**49,111,144**;July 1, 2003;Build 9
"RTN","ECXUPRO",3,0)
 ;
"RTN","ECXUPRO",4,0)
EN ; entry point
"RTN","ECXUPRO",5,0)
 N X,Y,DATE,ECRUN,ECXDESC,ECXSAVE,ECXTL,ECTHLD,ECXPORT,CNT ;144
"RTN","ECXUPRO",6,0)
 N ECINST,ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG
"RTN","ECXUPRO",7,0)
 S QFLG=0
"RTN","ECXUPRO",8,0)
 S ECINST=$$PDIV^ECXPUTL
"RTN","ECXUPRO",9,0)
 ; get today's date
"RTN","ECXUPRO",10,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUPRO",11,0)
 D BEGIN Q:QFLG
"RTN","ECXUPRO",12,0)
 D SELECT Q:QFLG
"RTN","ECXUPRO",13,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXUPRO",14,0)
 .K ^TMP($J) ;144
"RTN","ECXUPRO",15,0)
 .S ^TMP($J,"ECXPORT",0)="NAME^SSN^DATE OF SERVICE^PCE CPT/HCPCS CODES & MODIFIERS^FEEDER KEY^QUANTITY^COST OF TRANSACTION" ;144
"RTN","ECXUPRO",16,0)
 .S CNT=1 ;144
"RTN","ECXUPRO",17,0)
 .D PROCESS ;144
"RTN","ECXUPRO",18,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXUPRO",19,0)
 ;device selection
"RTN","ECXUPRO",20,0)
 S ECXDESC="Prosthetic Extract Unusual Cost Report"
"RTN","ECXUPRO",21,0)
 S ECXSAVE("EC*")=""
"RTN","ECXUPRO",22,0)
 W !!,"This report requires 132-column format."
"RTN","ECXUPRO",23,0)
 D EN^XUTMDEVQ("PROCESS^ECXUPRO",ECXDESC,.ECXSAVE)
"RTN","ECXUPRO",24,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXUPRO",25,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXUPRO",26,0)
 D HOME^%ZIS
"RTN","ECXUPRO",27,0)
 D AUDIT^ECXKILL
"RTN","ECXUPRO",28,0)
 Q
"RTN","ECXUPRO",29,0)
 ;
"RTN","ECXUPRO",30,0)
BEGIN ; display report description
"RTN","ECXUPRO",31,0)
 W @IOF
"RTN","ECXUPRO",32,0)
 W !,"This report prints a listing of unusual costs that would be"
"RTN","ECXUPRO",33,0)
 W !,"generated by the Prosthetic extract (PRO) as determined by a"
"RTN","ECXUPRO",34,0)
 W !,"user-defined threshold value.  It should be run prior to the"
"RTN","ECXUPRO",35,0)
 W !,"generation of the actual extract(s) to identify and fix, as"
"RTN","ECXUPRO",36,0)
 W !,"necessary, any costs determined to be erroneous."
"RTN","ECXUPRO",37,0)
 W !!,"Unusual costs are those where the Cost of Transaction is"
"RTN","ECXUPRO",38,0)
 W !,"greater than the threshold value."
"RTN","ECXUPRO",39,0)
 W !!,"Note: The threshold can be set after a report is selected."
"RTN","ECXUPRO",40,0)
 W !!,"Run times for this report will vary depending upon the size of"
"RTN","ECXUPRO",41,0)
 W !,"the extract and could take as long as 30 minutes or more to"
"RTN","ECXUPRO",42,0)
 W !,"complete.  This report has no effect on the actual extracts and"
"RTN","ECXUPRO",43,0)
 W !,"can be run as needed."
"RTN","ECXUPRO",44,0)
 W !!,"The report is sorted by Feeder Key, then by descending Cost of"
"RTN","ECXUPRO",45,0)
 W !,"Transaction and SSN."
"RTN","ECXUPRO",46,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUPRO",47,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXUPRO",48,0)
 Q
"RTN","ECXUPRO",49,0)
 ;
"RTN","ECXUPRO",50,0)
SELECT ; user inputs for threshold cost and date range
"RTN","ECXUPRO",51,0)
 N DONE,OUT
"RTN","ECXUPRO",52,0)
 ; allow user to set threshold cost
"RTN","ECXUPRO",53,0)
 S ECTHLD=500
"RTN","ECXUPRO",54,0)
 W !!,"The default threshold cost for the Prosthetic extract is $"_ECTHLD_".00."
"RTN","ECXUPRO",55,0)
 S DIR(0)="Y",DIR("A")="Would you like to change the threshold?",DIR("B")="NO" D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXUPRO",56,0)
 I Y D
"RTN","ECXUPRO",57,0)
 .W !!,"Cost > threshold"
"RTN","ECXUPRO",58,0)
 .S DIR(0)="N^0:999999",DIR("A")="Enter the new threshold cost" D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1 Q
"RTN","ECXUPRO",59,0)
 ; get date range from user
"RTN","ECXUPRO",60,0)
 W !!,"Enter the date range for which you would like to scan the Prosthetic",!,"Extract records.",!
"RTN","ECXUPRO",61,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXUPRO",62,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUPRO",63,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUPRO",64,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXUPRO",65,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXUPRO",66,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUPRO",67,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUPRO",68,0)
 .I Y<ECSD D  Q
"RTN","ECXUPRO",69,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXUPRO",70,0)
 ..W !,"Please try again.",!!
"RTN","ECXUPRO",71,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXUPRO",72,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXUPRO",73,0)
 ..W !,"Please try again.",!!
"RTN","ECXUPRO",74,0)
 .S ECED=Y
"RTN","ECXUPRO",75,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXUPRO",76,0)
 .S DONE=1
"RTN","ECXUPRO",77,0)
 Q
"RTN","ECXUPRO",78,0)
 ;
"RTN","ECXUPRO",79,0)
PROCESS ; entry point for queued report
"RTN","ECXUPRO",80,0)
 S ZTREQ="@"
"RTN","ECXUPRO",81,0)
 S ECXERR=0 D EN^ECXUPRO1 Q:ECXERR
"RTN","ECXUPRO",82,0)
 S QFLG=0 D PRINT
"RTN","ECXUPRO",83,0)
 Q
"RTN","ECXUPRO",84,0)
 ;
"RTN","ECXUPRO",85,0)
PRINT ; process temp file and print report
"RTN","ECXUPRO",86,0)
 N PG,QFLG,GTOT,LN,COUNT,FKEY,COST,SSN,REC,SDAY,I ;144
"RTN","ECXUPRO",87,0)
 U IO
"RTN","ECXUPRO",88,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXUPRO",89,0)
 S (PG,QFLG,GTOT)=0,$P(LN,"-",132)=""
"RTN","ECXUPRO",90,0)
 I '$G(ECXPORT) D HEADER Q:QFLG  ;144
"RTN","ECXUPRO",91,0)
 S COUNT=0,FKEY=""
"RTN","ECXUPRO",92,0)
 F  S FKEY=$O(^TMP($J,FKEY)) Q:FKEY=""!QFLG  D
"RTN","ECXUPRO",93,0)
 .S COST="" F  S COST=$O(^TMP($J,FKEY,COST)) Q:COST=""!QFLG  D
"RTN","ECXUPRO",94,0)
 .. S SDAY="" F  S SDAY=$O(^TMP($J,FKEY,COST,SDAY)) Q:SDAY=""!QFLG  D
"RTN","ECXUPRO",95,0)
 ...S SSN="" F  S SSN=$O(^TMP($J,FKEY,COST,SDAY,SSN)) Q:SSN=""!QFLG  S REC=^(SSN)  D
"RTN","ECXUPRO",96,0)
 ....I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=REC,CNT=CNT+1 Q  ;144
"RTN","ECXUPRO",97,0)
 ....S COUNT=COUNT+1
"RTN","ECXUPRO",98,0)
 ....I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUPRO",99,0)
 ....W !,$P(REC,U),?8,$P(REC,U,2),?21,$P(REC,U,3),?39,$P(REC,U,4),?70,$P(REC,U,5),?93,$$RJ^XLFSTR($P(REC,U,6),8),?110,$$RJ^XLFSTR($P(REC,U,7),11)
"RTN","ECXUPRO",100,0)
 Q:QFLG!($G(ECXPORT))  ;144
"RTN","ECXUPRO",101,0)
 I COUNT=0 W !!,?8,"No unusual costs to report for this extract"
"RTN","ECXUPRO",102,0)
CLOSE ;
"RTN","ECXUPRO",103,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXUPRO",104,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUPRO",105,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUPRO",106,0)
 Q
"RTN","ECXUPRO",107,0)
 ;
"RTN","ECXUPRO",108,0)
HEADER ;header and page control
"RTN","ECXUPRO",109,0)
 N SS,JJ
"RTN","ECXUPRO",110,0)
 I $E(IOST)="C" D
"RTN","ECXUPRO",111,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUPRO",112,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXUPRO",113,0)
 Q:QFLG
"RTN","ECXUPRO",114,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXUPRO",115,0)
 W !,"Prosthetic Extract Unusual Cost Report",?124,"Page: "_PG
"RTN","ECXUPRO",116,0)
 W !,"Start Date: ",ECSTART,?97,"Report Run Date/Time: "_ECRUN
"RTN","ECXUPRO",117,0)
 W !,"  End Date: ",ECEND,?97,"     Threshold Value: ",ECTHLD
"RTN","ECXUPRO",118,0)
 W !!,?21,"Date of",?43,"PCE CPT/",?112,"Cost of"
"RTN","ECXUPRO",119,0)
 W !,"Name",?11,"SSN",?21,"Service",?36,"HCPCS CODE & Modifiers"
"RTN","ECXUPRO",120,0)
 W ?72,"Feeder Key",?93,"Quantity",?110,"Transaction"
"RTN","ECXUPRO",121,0)
 W !,LN,!
"RTN","ECXUPRO",122,0)
 Q
"RTN","ECXUPRO",123,0)
 ;
"RTN","ECXUPRO1")
0^35^B7760162^B7105553
"RTN","ECXUPRO1",1,0)
ECXUPRO1 ;ALB/TJL-Prosthetics Extract Unusual Cost Report; 01/08/08 2:49pm ;3/4/13  16:11
"RTN","ECXUPRO1",2,0)
 ;;3.0;DSS EXTRACTS;**49,111,132,137,144**;Dec 22, 1997;Build 9
"RTN","ECXUPRO1",3,0)
 ;
"RTN","ECXUPRO1",4,0)
EN ; entry point
"RTN","ECXUPRO1",5,0)
 N COUNT,ECDFN,ECD,PROCOST
"RTN","ECXUPRO1",6,0)
 I '$G(ECXPORT) K ^TMP($J) ;144 If exporting, already killed
"RTN","ECXUPRO1",7,0)
 S COUNT=0
"RTN","ECXUPRO1",8,0)
 S ECD=ECSD1,ECED=ECED+.3
"RTN","ECXUPRO1",9,0)
 D GETRECS
"RTN","ECXUPRO1",10,0)
 Q
"RTN","ECXUPRO1",11,0)
 ;
"RTN","ECXUPRO1",12,0)
GETRECS ; get records that are over the threshold
"RTN","ECXUPRO1",13,0)
 N PDA,SUBDA,PROLB,PRO0,PROFORM
"RTN","ECXUPRO1",14,0)
 N DIC,DR,DA,DIQ
"RTN","ECXUPRO1",15,0)
 S QFLG=0,ECXLNE=1,ECXED1=ECED+.9999
"RTN","ECXUPRO1",16,0)
 S PDA=ECSD1
"RTN","ECXUPRO1",17,0)
 F  S PDA=$O(^RMPR(660,"CT",PDA)) Q:(PDA>ECXED1)!('PDA)!(QFLG=1)  D
"RTN","ECXUPRO1",18,0)
 .S SUBDA=0
"RTN","ECXUPRO1",19,0)
 .F  S SUBDA=$O(^RMPR(660,"CT",PDA,SUBDA))  Q:('SUBDA)!(QFLG=1)  D
"RTN","ECXUPRO1",20,0)
 ..Q:'$D(^RMPR(660,SUBDA,0))
"RTN","ECXUPRO1",21,0)
 ..S PRO0=^RMPR(660,SUBDA,0)
"RTN","ECXUPRO1",22,0)
 ..S PROLB=$G(^RMPR(660,SUBDA,"LB"))
"RTN","ECXUPRO1",23,0)
 ..K ECXP S DIC="^RMPR(660,",DR=".02;11",DA=SUBDA,DIQ(0)="EI"
"RTN","ECXUPRO1",24,0)
 ..S DIQ="ECXP" D EN^DIQ1
"RTN","ECXUPRO1",25,0)
 ..S ECXDFN=$G(ECXP(660,SUBDA,.02,"I"))
"RTN","ECXUPRO1",26,0)
 ..S PROFORM=$G(ECXP(660,SUBDA,11,"E"))_U_$G(ECXP(660,SUBDA,11,"I"))
"RTN","ECXUPRO1",27,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,PDA)
"RTN","ECXUPRO1",28,0)
 ..Q:'$$NTEG^ECXPRO1(ECXDFN,.ECXLNE,SUBDA,PRO0,PROLB,ECINST,PROFORM)
"RTN","ECXUPRO1",29,0)
 ..S PROCOST=$P(PRO0,U,16)
"RTN","ECXUPRO1",30,0)
 ..S:PROFORM["-3" PROCOST=$P(PROLB,U,9)
"RTN","ECXUPRO1",31,0)
 ..S:($P(PROFORM,U,2)=11)!($P(PROFORM,U,2)=12) PROCOST=0
"RTN","ECXUPRO1",32,0)
 ..S:PROCOST="" PROCOST=0
"RTN","ECXUPRO1",33,0)
 ..S PROCOST=(PROCOST+.5)\1
"RTN","ECXUPRO1",34,0)
 ..S:PROCOST>999999 PROCOST=999999
"RTN","ECXUPRO1",35,0)
 ..I PROCOST>ECTHLD D FILE
"RTN","ECXUPRO1",36,0)
 Q
"RTN","ECXUPRO1",37,0)
FILE ; put records in temp file to print later
"RTN","ECXUPRO1",38,0)
 N OK,PROPAT,PRONAME,PROSSN,CPTCODE,ECXFEKEY,PROQTY
"RTN","ECXUPRO1",39,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECD,"."),"1;",.PROPAT)
"RTN","ECXUPRO1",40,0)
 I 'OK Q
"RTN","ECXUPRO1",41,0)
 S PRONAME=PROPAT("NAME")
"RTN","ECXUPRO1",42,0)
 S PROSSN=PROPAT("SSN")
"RTN","ECXUPRO1",43,0)
 S PRODAY=$E(PDA,4,5)_"/"_$E(PDA,6,7)_"/"_$E(PDA,2,3)
"RTN","ECXUPRO1",44,0)
 S CPTCODE=$E(ECXHCPCS,1,5)
"RTN","ECXUPRO1",45,0)
 I PROFORM["-3" F ECXLAB="LAB","ORD" D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXUPRO1",46,0)
 I PROFORM'["-3" S ECXLAB="NONL" D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXUPRO1",47,0)
 S PROQTY=$P(PRO0,U,7)
"RTN","ECXUPRO1",48,0)
 S:(+PROQTY=0) PROQTY=1
"RTN","ECXUPRO1",49,0)
 S PROQTY=$S('$G(ECXPORT):$$RJ^XLFSTR(PROQTY,8,0),1:PROQTY) ;144
"RTN","ECXUPRO1",50,0)
 S ^TMP($J,ECXFEKEY,-PROQTY,SUBDA,PROSSN)=PRONAME_U_PROSSN_U_PRODAY_U_ECXHCPCS_U_ECXFEKEY_U_PROQTY_U_$S('$G(ECXPORT):"$",1:"")_$FNUMBER(PROCOST,",",2) ;144
"RTN","ECXUPRO1",51,0)
 S COUNT=COUNT+1
"RTN","ECXUPRO1",52,0)
 I COUNT#100=0 I $$S^ZTLOAD S (ZTSTOP,ECXERR)=1
"RTN","ECXUPRO1",53,0)
 Q
"RTN","ECXUPRO1",54,0)
EXIT S ECXERR=1 Q
"RTN","ECXUTL")
0^8^B53992756^B53983584
"RTN","ECXUTL",1,0)
ECXUTL ;ALB/JAP - Utilities for DSS Extracts ; 11/23/10 1:58pm
"RTN","ECXUTL",2,0)
 ;;3.0;DSS EXTRACTS;**1,5,8,84,90,127,144**;Dec 22, 1997;Build 9
"RTN","ECXUTL",3,0)
 ;
"RTN","ECXUTL",4,0)
ECXYM(ECXFMDT) ;extrinsic function
"RTN","ECXUTL",5,0)
 ;converts any FM internal format date or date/time to a 6-character string
"RTN","ECXUTL",6,0)
 ;
"RTN","ECXUTL",7,0)
 ;   input
"RTN","ECXUTL",8,0)
 ;   ECXFMDT = date or date/time; FM internal format (required)
"RTN","ECXUTL",9,0)
 ;   output
"RTN","ECXUTL",10,0)
 ;   ECXYM = YYYYMM string
"RTN","ECXUTL",11,0)
 ;
"RTN","ECXUTL",12,0)
 N MONTH,YEAR,CENTURY,ECXYM
"RTN","ECXUTL",13,0)
 ;
"RTN","ECXUTL",14,0)
 ;error checks
"RTN","ECXUTL",15,0)
 I +ECXFMDT'=ECXFMDT S ECXYM="000000" Q ECXYM
"RTN","ECXUTL",16,0)
 I $L($P(ECXFMDT,"."))'=7 S ECXYM="000000" Q ECXYM
"RTN","ECXUTL",17,0)
 I +$E(ECXFMDT,4,5)<1!(+$E(ECXFMDT,4,5)>12) S ECXYM="000000" Q ECXYM
"RTN","ECXUTL",18,0)
 ;
"RTN","ECXUTL",19,0)
 S MONTH=$E(ECXFMDT,4,5),YEAR=$E(ECXFMDT,2,3),CENTURY=$E(ECXFMDT,1)+17
"RTN","ECXUTL",20,0)
 S ECXYM=CENTURY_YEAR_MONTH
"RTN","ECXUTL",21,0)
 Q ECXYM
"RTN","ECXUTL",22,0)
 ;
"RTN","ECXUTL",23,0)
ECXYMX(ECXYM) ;extrinsic function
"RTN","ECXUTL",24,0)
 ;converts a 6-character numeric string of format YYYYMM
"RTN","ECXUTL",25,0)
 ;to a FM external format date
"RTN","ECXUTL",26,0)
 ;
"RTN","ECXUTL",27,0)
 ;   input
"RTN","ECXUTL",28,0)
 ;   ECXYM = YYYYMM string (required)
"RTN","ECXUTL",29,0)
 ;   output
"RTN","ECXUTL",30,0)
 ;   ECXYMX = FM external format date;
"RTN","ECXUTL",31,0)
 ;            SEP 1997
"RTN","ECXUTL",32,0)
 ;   error code
"RTN","ECXUTL",33,0)
 ;   if input problem, then "000000" returned
"RTN","ECXUTL",34,0)
 ;
"RTN","ECXUTL",35,0)
 N Y,%DT,CENTURY,FMCENT,ECXYMX
"RTN","ECXUTL",36,0)
 ;
"RTN","ECXUTL",37,0)
 ;error checks
"RTN","ECXUTL",38,0)
 I ECXYM="" S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",39,0)
 I +ECXYM'=ECXYM S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",40,0)
 I $L(ECXYM)'=6 S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",41,0)
 I +$E(ECXYM,1,4)<1800 S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",42,0)
 I +$E(ECXYM,5,6)<1!(+$E(ECXYM,5,6)>12) S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",43,0)
 ;
"RTN","ECXUTL",44,0)
 S CENTURY=$E(ECXYM,1,2)
"RTN","ECXUTL",45,0)
 S FMCENT=CENTURY-17
"RTN","ECXUTL",46,0)
 S Y=FMCENT_$E(ECXYM,3,6) D DD^%DT S ECXYMX=Y
"RTN","ECXUTL",47,0)
 ;
"RTN","ECXUTL",48,0)
 ;error checks
"RTN","ECXUTL",49,0)
 I $L(ECXYMX)'=8 S ECXYMX="000000"
"RTN","ECXUTL",50,0)
 I "JAN FEB MAR APR MAY JUN JUL AUG SEP OCT NOV DEC"'[$E(ECXYMX,1,3) S ECXYMX="000000"
"RTN","ECXUTL",51,0)
 Q ECXYMX
"RTN","ECXUTL",52,0)
 ;
"RTN","ECXUTL",53,0)
ECXDATE(ECXFMDT,ECXYM) ;extrinsic function
"RTN","ECXUTL",54,0)
 ;converts any FM internal format date or date/time to a 8-character string
"RTN","ECXUTL",55,0)
 ;
"RTN","ECXUTL",56,0)
 ;   input
"RTN","ECXUTL",57,0)
 ;   ECXFMDT = date or date/time; FM internal format (required)
"RTN","ECXUTL",58,0)
 ;   ECXYM = YYYYMM; year/month 6-character string (required)
"RTN","ECXUTL",59,0)
 ;   output
"RTN","ECXUTL",60,0)
 ;   ECXDATE = YYYYMMDD string
"RTN","ECXUTL",61,0)
 ;   error code
"RTN","ECXUTL",62,0)
 ;   "000000" returned, if problem with input
"RTN","ECXUTL",63,0)
 ;
"RTN","ECXUTL",64,0)
 N MONTH,YEAR,CENTURY,DAY,ECXDATE
"RTN","ECXUTL",65,0)
 ;
"RTN","ECXUTL",66,0)
 ;error checks
"RTN","ECXUTL",67,0)
 I +ECXYM'=ECXYM S ECXDATE="000000" Q ECXDATE
"RTN","ECXUTL",68,0)
 I $L(ECXYM)'=6 S ECXDATE="000000" Q ECXDATE
"RTN","ECXUTL",69,0)
 I +$E(ECXYM,1,4)<1800 S ECXDATE="000000" Q ECXDATE
"RTN","ECXUTL",70,0)
 I +$E(ECXYM,5,6)<1!($E(ECXYM,5,6)>12) S ECXDATE="000000" Q ECXDATE
"RTN","ECXUTL",71,0)
 ;special case where ecxfmdt is null; default to year/month of ecxym
"RTN","ECXUTL",72,0)
 I ECXFMDT="" S ECXDATE=ECXYM_"01" Q ECXDATE
"RTN","ECXUTL",73,0)
 ;error checks
"RTN","ECXUTL",74,0)
 I +ECXFMDT'=ECXFMDT S ECXDATE=ECXYM_"01" Q ECXDATE
"RTN","ECXUTL",75,0)
 I $L(ECXFMDT)<7 S ECXDATE=ECXYM_"01" Q ECXDATE
"RTN","ECXUTL",76,0)
 I +$E(ECXFMDT,4,5)>12 S ECXDATE=ECXYM_"01" Q ECXDATE
"RTN","ECXUTL",77,0)
 I +$E(ECXFMDT,6,7)>31 S ECXFMDT=$E(ECXFMDT,1,5)_"01"
"RTN","ECXUTL",78,0)
 ;default to 1st day of month
"RTN","ECXUTL",79,0)
 S DAY=$E(ECXFMDT,6,7) S:DAY="00" DAY="01"
"RTN","ECXUTL",80,0)
 ;default to month of ecxym
"RTN","ECXUTL",81,0)
 S MONTH=$E(ECXFMDT,4,5) S:MONTH="00" MONTH=$E(ECXYM,5,6)
"RTN","ECXUTL",82,0)
 S YEAR=$E(ECXFMDT,2,3)
"RTN","ECXUTL",83,0)
 S CENTURY=$E(ECXFMDT,1)+17
"RTN","ECXUTL",84,0)
 S ECXDATE=CENTURY_YEAR_MONTH_DAY
"RTN","ECXUTL",85,0)
 Q ECXDATE
"RTN","ECXUTL",86,0)
 ;
"RTN","ECXUTL",87,0)
ECXDATEX(ECXDATE) ;extrinsic function
"RTN","ECXUTL",88,0)
 ;converts an 8-character numeric string of format YYYYMMDD
"RTN","ECXUTL",89,0)
 ;to a FM external format date
"RTN","ECXUTL",90,0)
 ;
"RTN","ECXUTL",91,0)
 ;   input
"RTN","ECXUTL",92,0)
 ;   ECXDATE = YYYYMMDD string (required)
"RTN","ECXUTL",93,0)
 ;   output
"RTN","ECXUTL",94,0)
 ;   ECXDATEX = FM external format date;
"RTN","ECXUTL",95,0)
 ;              SEP 12, 1997
"RTN","ECXUTL",96,0)
 ;   error code
"RTN","ECXUTL",97,0)
 ;   if input problem, then "000000" returned
"RTN","ECXUTL",98,0)
 ;
"RTN","ECXUTL",99,0)
 N Y,%DT,CENTURY,FMCENT,ECXDATEX
"RTN","ECXUTL",100,0)
 ;
"RTN","ECXUTL",101,0)
 ;error checks
"RTN","ECXUTL",102,0)
 I +ECXDATE'=ECXDATE S ECXDATEX="000000" Q ECXDATEX
"RTN","ECXUTL",103,0)
 I $L(ECXDATE)'=8 S ECXDATEX="000000" Q ECXDATEX
"RTN","ECXUTL",104,0)
 I +$E(ECXDATE,7,8)>31 S ECXDATEX="000000" Q ECXDATEX
"RTN","ECXUTL",105,0)
 ;
"RTN","ECXUTL",106,0)
 S CENTURY=$E(ECXDATE,1,2)
"RTN","ECXUTL",107,0)
 S FMCENT=CENTURY-17
"RTN","ECXUTL",108,0)
 S Y=FMCENT_$E(ECXDATE,3,8) D DD^%DT S ECXDATEX=Y
"RTN","ECXUTL",109,0)
 ;
"RTN","ECXUTL",110,0)
 ;error checks
"RTN","ECXUTL",111,0)
 I $L(ECXDATEX)'=12 S ECXDATEX="000000"
"RTN","ECXUTL",112,0)
 I "JAN FEB MAR APR MAY JUN JUL AUG SEP OCT NOV DEC"'[$E(ECXDATEX,1,3) S ECXDATEX="000000"
"RTN","ECXUTL",113,0)
 Q ECXDATEX
"RTN","ECXUTL",114,0)
 ;
"RTN","ECXUTL",115,0)
ECXDOB(ECXFMDT) ;extrinsic function
"RTN","ECXUTL",116,0)
 ;converts a FM internal format date or date/time to a 6-character string
"RTN","ECXUTL",117,0)
 ;if ecxfmdt is null, the function returns 19420101
"RTN","ECXUTL",118,0)
 ;   input
"RTN","ECXUTL",119,0)
 ;   ECXFMDT = date or date/time (required); 
"RTN","ECXUTL",120,0)
 ;             must be valid FM internal format 
"RTN","ECXUTL",121,0)
 ;   output
"RTN","ECXUTL",122,0)
 ;   ECXDOB = YYYYMMDD string (required);
"RTN","ECXUTL",123,0)
 ;            defaults to 19420101
"RTN","ECXUTL",124,0)
 ;
"RTN","ECXUTL",125,0)
 N MONTH,YEAR,CENTURY,DAY,ECXDOB
"RTN","ECXUTL",126,0)
 ;only consider date portion
"RTN","ECXUTL",127,0)
 S ECXFMDT=$P(ECXFMDT,".",1)
"RTN","ECXUTL",128,0)
 ;special case where ecxfmdt is null
"RTN","ECXUTL",129,0)
 I ECXFMDT="" S ECXDOB="17760704" Q ECXDOB
"RTN","ECXUTL",130,0)
 ;error checks - return default 144 - change def from 19420101 to 17760704
"RTN","ECXUTL",131,0)
 I +ECXFMDT'=ECXFMDT S ECXDOB="17760704" Q ECXDOB
"RTN","ECXUTL",132,0)
 I $L(ECXFMDT)<7 S ECXDOB="17760704" Q ECXDOB
"RTN","ECXUTL",133,0)
 I +ECXFMDT>DT S ECXDOB="17760704" Q ECXDOB
"RTN","ECXUTL",134,0)
 ;default to 1st day of month
"RTN","ECXUTL",135,0)
 S DAY=$E(ECXFMDT,6,7) S:DAY="00"!(+DAY>31) DAY="01"
"RTN","ECXUTL",136,0)
 ;default to 1st month of year
"RTN","ECXUTL",137,0)
 S MONTH=$E(ECXFMDT,4,5) S:MONTH="00"!(+MONTH>12) MONTH="01",DAY="01"
"RTN","ECXUTL",138,0)
 S YEAR=$E(ECXFMDT,2,3)
"RTN","ECXUTL",139,0)
 S CENTURY=$E(ECXFMDT,1)+17
"RTN","ECXUTL",140,0)
 S ECXDOB=CENTURY_YEAR_MONTH_DAY
"RTN","ECXUTL",141,0)
 Q ECXDOB
"RTN","ECXUTL",142,0)
 ;
"RTN","ECXUTL",143,0)
ECXTIME(ECXFMDT) ;extrinsic function
"RTN","ECXUTL",144,0)
 ;converts Fileman internal date/time to 6-character time string
"RTN","ECXUTL",145,0)
 ;format HHMMSS
"RTN","ECXUTL",146,0)
 ;
"RTN","ECXUTL",147,0)
 ;   input
"RTN","ECXUTL",148,0)
 ;   ECXFMDT = date or date/time (required); 
"RTN","ECXUTL",149,0)
 ;             must be valid FM internal format
"RTN","ECXUTL",150,0)
 ;   output
"RTN","ECXUTL",151,0)
 ;   ECXTIME = 6-character numeric string;
"RTN","ECXUTL",152,0)
 ;             format HHMMSS; string length always 6
"RTN","ECXUTL",153,0)
 ;
"RTN","ECXUTL",154,0)
 N J,JJ,TIME,HH,MM,SS,ECXTIME
"RTN","ECXUTL",155,0)
 ;if any non-numerics, set default
"RTN","ECXUTL",156,0)
 I +ECXFMDT=0 S ECXTIME="000300" Q ECXTIME
"RTN","ECXUTL",157,0)
 ;use only time portion of fileman internal format
"RTN","ECXUTL",158,0)
 S TIME=$P(ECXFMDT,".",2),TIME=$E(TIME,1,6)
"RTN","ECXUTL",159,0)
 ;if time unknown, set default
"RTN","ECXUTL",160,0)
 I TIME="" S ECXTIME="000300" Q ECXTIME
"RTN","ECXUTL",161,0)
 ;be sure time is 6 characters
"RTN","ECXUTL",162,0)
 S TIME=$$LJ^XLFSTR(TIME,6,0)
"RTN","ECXUTL",163,0)
 ;error checks -- set default
"RTN","ECXUTL",164,0)
 S HH=$E(TIME,1,2),MM=$E(TIME,3,4),SS=$E(TIME,5,6)
"RTN","ECXUTL",165,0)
 I +HH>23 S ECXTIME="000300" Q ECXTIME
"RTN","ECXUTL",166,0)
 I +MM>59 S MM="59"
"RTN","ECXUTL",167,0)
 I +SS>59 S SS="59"
"RTN","ECXUTL",168,0)
 S ECXTIME=HH_MM_SS
"RTN","ECXUTL",169,0)
 Q ECXTIME
"RTN","ECXUTL",170,0)
 ;
"RTN","ECXUTL",171,0)
ECXTIMEX(ECXTIME,ECXMIL) ;extrinsic function
"RTN","ECXUTL",172,0)
 ;converts a 6-character time string to external, user readable format
"RTN","ECXUTL",173,0)
 ;used as output transform for time fields in many dss extract files
"RTN","ECXUTL",174,0)
 ;   input
"RTN","ECXUTL",175,0)
 ;   ECXTIME = 6-character numeric string (required); 
"RTN","ECXUTL",176,0)
 ;   ECXMIL = if "1", then return military time (optional)          
"RTN","ECXUTL",177,0)
 ;   output
"RTN","ECXUTL",178,0)
 ;   ECXTIMEX = character string;
"RTN","ECXUTL",179,0)
 ;              if ECXMIL=1, format HH:MM:SS
"RTN","ECXUTL",180,0)
 ;              otherwise, hours:mins AM/PM
"RTN","ECXUTL",181,0)
 ;   error code
"RTN","ECXUTL",182,0)
 ;   if input problem, then "000000" returned
"RTN","ECXUTL",183,0)
 ;              
"RTN","ECXUTL",184,0)
 N TIME,HH,MM,SS,ECXTIMEX,J,JJ
"RTN","ECXUTL",185,0)
 ;error checks
"RTN","ECXUTL",186,0)
 I $L(ECXTIME)'=6 S ECXTIMEX="000000" Q ECXTIMEX
"RTN","ECXUTL",187,0)
 F J=1:1:6 S JJ=$E(ECXTIME,J) I $A(JJ)<48!($A(JJ)>57) S ECXTIMEX="000000" Q
"RTN","ECXUTL",188,0)
 I $D(ECXTIMEX) Q ECXTIMEX
"RTN","ECXUTL",189,0)
 S HH=$E(ECXTIME,1,2),MM=$E(ECXTIME,3,4),SS=$E(ECXTIME,5,6)
"RTN","ECXUTL",190,0)
 I +HH>23!(+MM>59)!(+SS>59) S ECXTIMEX="000000" Q ECXTIMEX
"RTN","ECXUTL",191,0)
 ;if ecxmil=1, return military time
"RTN","ECXUTL",192,0)
 I $G(ECXMIL) S ECXTIMEX=HH_":"_MM_":"_SS Q ECXTIMEX
"RTN","ECXUTL",193,0)
 ;otherwise, use am/pm format
"RTN","ECXUTL",194,0)
 S X="0."_ECXTIME
"RTN","ECXUTL",195,0)
 S X=$E($P(X,".",2)_"0000",1,4),%=X>1159 S:X>1259 X=X-1200
"RTN","ECXUTL",196,0)
 S X=X\100_":"_$E(X#100+100,2,3)_" "_$E("AP",%+1)_"M"
"RTN","ECXUTL",197,0)
 S ECXTIMEX=X
"RTN","ECXUTL",198,0)
 Q ECXTIMEX
"RTN","ECXUTL",199,0)
 ;
"RTN","ECXUTL",200,0)
AOIRPOW(ECXDFN,ECXAIP) ;get data on ao, ir, pow status
"RTN","ECXUTL",201,0)
 ;
"RTN","ECXUTL",202,0)
 ;   input
"RTN","ECXUTL",203,0)
 ;   ECXDFN = ien in file #2 (required)
"RTN","ECXUTL",204,0)
 ;   ECXAIP = array for returned data (required)
"RTN","ECXUTL",205,0)
 ;            (passed by reference)
"RTN","ECXUTL",206,0)
 ;
"RTN","ECXUTL",207,0)
 ;   output
"RTN","ECXUTL",208,0)
 ;   ECXAIP("AO") = agent orange status
"RTN","ECXUTL",209,0)
 ;   ECXAIP("IR") = ion. radiation status
"RTN","ECXUTL",210,0)
 ;   ECXAIP("POW") = pow status
"RTN","ECXUTL",211,0)
 ;   ECXAIP("POWL") = pow location/period
"RTN","ECXUTL",212,0)
 ;
"RTN","ECXUTL",213,0)
 N J
"RTN","ECXUTL",214,0)
 S ECXAIP("AO")="",ECXAIP("IR")="",ECXAIP("POW")="",ECXAIP("POWL")=""
"RTN","ECXUTL",215,0)
 S ECXAIP("AO")=$P($G(^DPT(ECXDFN,.321)),U,2),ECXAIP("IR")=$P($G(^(.321)),U,3)
"RTN","ECXUTL",216,0)
 S ECXAIP("POW")=$P($G(^DPT(ECXDFN,.52)),U,5),ECXAIP("POWL")=$P($G(^(.52)),U,6)
"RTN","ECXUTL",217,0)
 F J="AO","IR","POW" I ECXAIP(J)="" S ECXAIP(J)="U"
"RTN","ECXUTL",218,0)
 I ECXAIP("POWL"),ECXAIP("POW")'="Y" S ECXAIP("POWL")=""
"RTN","ECXUTL",219,0)
 Q
"RTN","ECXUTL",220,0)
 ;
"RTN","ECXUTL",221,0)
PRVCLASS(PERS,DATE) ;determine the person class and return va code
"RTN","ECXUTL",222,0)
 ;   input
"RTN","ECXUTL",223,0)
 ;   PERS  = pointer to file #200 (required)
"RTN","ECXUTL",224,0)
 ;   DATE  = date on which person class must be active (required)
"RTN","ECXUTL",225,0)
 ;           (internal Fileman format)
"RTN","ECXUTL",226,0)
 ;   output
"RTN","ECXUTL",227,0)
 ;   VACODE = VA code field from file #8932.1
"RTN","ECXUTL",228,0)
 ;            (exactly 7 characters in length)
"RTN","ECXUTL",229,0)
 N ECX,VACODE
"RTN","ECXUTL",230,0)
 S VACODE=""
"RTN","ECXUTL",231,0)
 S ECHEAD=$G(ECHEAD)
"RTN","ECXUTL",232,0)
 S ECX=$$GET^XUA4A72(PERS,DATE)
"RTN","ECXUTL",233,0)
 ;if no person class use alternate date to resolve person class
"RTN","ECXUTL",234,0)
 I +ECX'>0 D
"RTN","ECXUTL",235,0)
 .N DATE
"RTN","ECXUTL",236,0)
 .S DATE=$S(ECHEAD="LAB":$P(EC1,U,14),ECHEAD="LAR":$P(EC1,U,4),ECHEAD="PRE":$P(ECDATA,U,13),ECHEAD="RAD":$P($G(^RAO(75.1,+$G(ECXIEN),0)),U,16),1:"")
"RTN","ECXUTL",237,0)
 .S ECX=$$GET^XUA4A72(PERS,DATE)
"RTN","ECXUTL",238,0)
 .Q
"RTN","ECXUTL",239,0)
 S VACODE=$P(ECX,U,7) I $L(VACODE)'=7 S VACODE=""
"RTN","ECXUTL",240,0)
 Q VACODE
"RTN","ECXUTL",241,0)
 ;
"RTN","ECXUTL",242,0)
PATCAT(DFN) ; Extrinsic function to return OTHER ELIGIBILITY CODE 
"RTN","ECXUTL",243,0)
 ;            in patcat field in the extract file if the PATIENT TYPE 
"RTN","ECXUTL",244,0)
 ;            = active duty, retire, tricare
"RTN","ECXUTL",245,0)
 ;  INPUT DFN - ien in file #2 (required)
"RTN","ECXUTL",246,0)
 ; OUTPUT PATCAT - Patient Category mapping to be filed in extracts
"RTN","ECXUTL",247,0)
 ;
"RTN","ECXUTL",248,0)
 N ELIG,I,PATCAT,PCAT,TYPE
"RTN","ECXUTL",249,0)
 S PATCAT=""
"RTN","ECXUTL",250,0)
 I '$G(DFN) Q PATCAT
"RTN","ECXUTL",251,0)
 S TYPE=$$TYPE^ECXUTL5(DFN)
"RTN","ECXUTL",252,0)
 I (TYPE="MI")!(TYPE="AC")!(TYPE="TR") D
"RTN","ECXUTL",253,0)
 .;get first other eligibilty code that matches in list, if it exists
"RTN","ECXUTL",254,0)
 .S ELIG=0 F  S ELIG=$O(^DPT(DFN,"E",ELIG)) Q:(ELIG'>0)!((ELIG>0)&(PATCAT'=""))  D
"RTN","ECXUTL",255,0)
 ..; if get last code, use line below
"RTN","ECXUTL",256,0)
 ..;S ELIG=0 F  S ELIG=$O(^DPT(DFN,"E",ELIG)) Q:(ELIG'>0)  D
"RTN","ECXUTL",257,0)
 ..S PCAT=$$GET1^DIQ(8,ELIG,.01)
"RTN","ECXUTL",258,0)
 ..F I=1:1 Q:$T(ELIGCDS+I)=" Q"  I PCAT=$P($T(ELIGCDS+I),";;",2) S PATCAT=$P($T(ELIGCDS+I),";;",3)
"RTN","ECXUTL",259,0)
 Q PATCAT
"RTN","ECXUTL",260,0)
 ;
"RTN","ECXUTL",261,0)
ORDPROV(DFN,ON,PSJTMP) ; get provider using order reference number
"RTN","ECXUTL",262,0)
 ;  input:  
"RTN","ECXUTL",263,0)
 ;    dfn
"RTN","ECXUTL",264,0)
 ;    on     - order reference number
"RTN","ECXUTL",265,0)
 ;    psjtmp - 1 if temp global node = PSJ1, else global node = PSJ
"RTN","ECXUTL",266,0)
 ;
"RTN","ECXUTL",267,0)
 ;  output:
"RTN","ECXUTL",268,0)
 ;    Provider IEN from PARMACY PATIENT File (#55) (1st piece ^TMP( )
"RTN","ECXUTL",269,0)
 ;
"RTN","ECXUTL",270,0)
 ;  NOTE:  Don't kill ^TMP here, used in ECXBCM, killed there
"RTN","ECXUTL",271,0)
 ;
"RTN","ECXUTL",272,0)
 I $G(DFN)']"" Q 0
"RTN","ECXUTL",273,0)
 I $G(ON)']"" Q 0
"RTN","ECXUTL",274,0)
 D EN^PSJBCMA1(DFN,ON,PSJTMP) ;IA#2829
"RTN","ECXUTL",275,0)
 Q +($G(^TMP("PSJ",$J,1)))
"RTN","ECXUTL",276,0)
 ;
"RTN","ECXUTL",277,0)
ELIGCDS ;
"RTN","ECXUTL",278,0)
 ;;AD-ACTIVE DUTY;;AD
"RTN","ECXUTL",279,0)
 ;;REC-RECRUIT;;REC
"RTN","ECXUTL",280,0)
 ;;ADD-ACTIVE DUTY DEPENDENT;;ADD
"RTN","ECXUTL",281,0)
 ;;FNRS-NON REMARRIED SPOUSE;;FNRS
"RTN","ECXUTL",282,0)
 ;;RET-RETIREE;;RET
"RTN","ECXUTL",283,0)
 ;;RETD-RETIREE DEPENDENT;;RETD
"RTN","ECXUTL",284,0)
 ;;RES-RESERVIST;;RES
"RTN","ECXUTL",285,0)
 ;;TFL-TRICARE FOR LIFE;;TFL
"RTN","ECXUTL",286,0)
 ;;TDRL-TEMPORARY DISABILITY;;TDRL
"RTN","ECXUTL",287,0)
 Q
"RTN","ECXUTL1")
0^30^B85232307^B41491361
"RTN","ECXUTL1",1,0)
ECXUTL1 ;ALB/GTS - Utilities for DSS Extracts ;8/13/13  11:30
"RTN","ECXUTL1",2,0)
 ;;3.0;DSS EXTRACTS;**9,49,136,144**;Dec 22, 1997;Build 9
"RTN","ECXUTL1",3,0)
 ;
"RTN","ECXUTL1",4,0)
CYFY(ECXFMDT) ;** Return the calandar and fiscal years for a FM date
"RTN","ECXUTL1",5,0)
 ;
"RTN","ECXUTL1",6,0)
 ; Input
"RTN","ECXUTL1",7,0)
 ;   ECXFMDT - Fileman formated date
"RTN","ECXUTL1",8,0)
 ;
"RTN","ECXUTL1",9,0)
 ; Output
"RTN","ECXUTL1",10,0)
 ;   X - CY begin date^ CY end date^ FY begin date^ FY end date
"RTN","ECXUTL1",11,0)
 ;
"RTN","ECXUTL1",12,0)
 N X,Y,Y2
"RTN","ECXUTL1",13,0)
 S X=""
"RTN","ECXUTL1",14,0)
 S ECXFMDT=$G(ECXFMDT)\1
"RTN","ECXUTL1",15,0)
 I ECXFMDT?7N DO
"RTN","ECXUTL1",16,0)
 .S (Y,Y2)=$E(ECXFMDT,1,3)
"RTN","ECXUTL1",17,0)
 .I $E(ECXFMDT,4,5)>9 S Y2=Y+1
"RTN","ECXUTL1",18,0)
 .S X=Y_"0101^"_Y_"1231^"_(Y2-1)_"1001^"_Y2_"0930"
"RTN","ECXUTL1",19,0)
 Q X
"RTN","ECXUTL1",20,0)
 ;
"RTN","ECXUTL1",21,0)
FISCAL(DATE)    ;Return fiscal year
"RTN","ECXUTL1",22,0)
 ; Input: DATE = Date (FileMan format) (defaults to today)
"RTN","ECXUTL1",23,0)
 ;Output: YYYY = Fiscal year that input date falls within
"RTN","ECXUTL1",24,0)
 ;
"RTN","ECXUTL1",25,0)
 N YEAR
"RTN","ECXUTL1",26,0)
 I '$G(DATE) S DATE=$$DT^XLFDT()
"RTN","ECXUTL1",27,0)
 S DATE=$$ECXYM^ECXUTL(DATE)
"RTN","ECXUTL1",28,0)
 S YEAR=$E(DATE,1,4)
"RTN","ECXUTL1",29,0)
 I $E(DATE,5,6)>9 S YEAR=YEAR+1
"RTN","ECXUTL1",30,0)
 Q YEAR
"RTN","ECXUTL1",31,0)
 ;
"RTN","ECXUTL1",32,0)
DTRNG() ;** Prompt the user for a date range
"RTN","ECXUTL1",33,0)
 ;
"RTN","ECXUTL1",34,0)
 N ECXBEG,ECXEND,ECXRNG,ENDRNG
"RTN","ECXUTL1",35,0)
 S ECXRNG=0
"RTN","ECXUTL1",36,0)
 ;
"RTN","ECXUTL1",37,0)
 ;* Prompt for beginning date
"RTN","ECXUTL1",38,0)
 W ! S DIR(0)="DA^:DT:EX",DIR("A")="Enter Start Date: "
"RTN","ECXUTL1",39,0)
 S DIR("?")="^W ""*** Future dates are not allowed ***"",! D HELP^%DTC"
"RTN","ECXUTL1",40,0)
 D ^DIR K DIR
"RTN","ECXUTL1",41,0)
 S:'$D(DIRUT) ECXBEG=+Y
"RTN","ECXUTL1",42,0)
 K %DT,Y,DTOUT,DUOUT,DIRUT
"RTN","ECXUTL1",43,0)
 ;
"RTN","ECXUTL1",44,0)
 ;* Prompt for ending date
"RTN","ECXUTL1",45,0)
 I $G(ECXBEG) DO
"RTN","ECXUTL1",46,0)
 .S ENDRNG=$$CYFY(ECXBEG)
"RTN","ECXUTL1",47,0)
 .S ENDRNG=$S($P(ENDRNG,"^",4)<DT:$P(ENDRNG,"^",4),1:DT)
"RTN","ECXUTL1",48,0)
 .W ! S DIR(0)="DA^"_ECXBEG_":"_ENDRNG_":EX"
"RTN","ECXUTL1",49,0)
 .S DIR("A")="Enter End date: "
"RTN","ECXUTL1",50,0)
 .S DIR("?")="^W ""Future dates and dates after the beginning date's FY end are not allowed."",! D HELP^%DTC"
"RTN","ECXUTL1",51,0)
 .D ^DIR
"RTN","ECXUTL1",52,0)
 .S ECXEND=+Y
"RTN","ECXUTL1",53,0)
 .S:'$D(DIRUT) ECXRNG=ECXBEG_"^"_ECXEND
"RTN","ECXUTL1",54,0)
 .K DIR,%DT,Y,DIRUT,DTOUT,DUOUT
"RTN","ECXUTL1",55,0)
 Q ECXRNG
"RTN","ECXUTL1",56,0)
 ;
"RTN","ECXUTL1",57,0)
STRIP(ECXFIELD,ECXLGTH,ECXPOS) ;* Strip blanks from a padded field
"RTN","ECXUTL1",58,0)
 ;
"RTN","ECXUTL1",59,0)
 ; Input
"RTN","ECXUTL1",60,0)
 ;  ECXFIELD - Data to remove blanks from
"RTN","ECXUTL1",61,0)
 ;  ECXLGTH  - Total length of padded field
"RTN","ECXUTL1",62,0)
 ;  ECXPOS   - Front or Back indicator ('F' or 'B')
"RTN","ECXUTL1",63,0)
 ;
"RTN","ECXUTL1",64,0)
 ; Output
"RTN","ECXUTL1",65,0)
 ;  ECXVAL   - Field with blanks removed
"RTN","ECXUTL1",66,0)
 ;
"RTN","ECXUTL1",67,0)
 N ECXPVAL,QVAL
"RTN","ECXUTL1",68,0)
 S:ECXPOS="B" ECXPVAL=ECXLGTH
"RTN","ECXUTL1",69,0)
 S:ECXPOS="F" ECXPVAL=1
"RTN","ECXUTL1",70,0)
 S QVAL=0
"RTN","ECXUTL1",71,0)
 F  Q:QVAL  DO
"RTN","ECXUTL1",72,0)
 .I ECXPOS="B" DO
"RTN","ECXUTL1",73,0)
 ..S:($E(ECXFIELD,ECXPVAL)'=" ") QVAL=1
"RTN","ECXUTL1",74,0)
 ..S:($E(ECXFIELD,ECXPVAL)=" ") ECXFIELD=$E(ECXFIELD,1,ECXPVAL-1)
"RTN","ECXUTL1",75,0)
 ..S ECXPVAL=ECXPVAL-1
"RTN","ECXUTL1",76,0)
 ..S:(ECXPVAL<1) QVAL=1
"RTN","ECXUTL1",77,0)
 .I ECXPOS="F" DO
"RTN","ECXUTL1",78,0)
 ..S:($E(ECXFIELD,1)'=" ") QVAL=1
"RTN","ECXUTL1",79,0)
 ..S:($E(ECXFIELD,1)=" ") ECXFIELD=$E(ECXFIELD,2,ECXLGTH-(ECXPVAL-1))
"RTN","ECXUTL1",80,0)
 ..S ECXPVAL=ECXPVAL+1
"RTN","ECXUTL1",81,0)
 ..S:(ECXPVAL>ECXLGTH) QVAL=1
"RTN","ECXUTL1",82,0)
 Q ECXFIELD
"RTN","ECXUTL1",83,0)
 ;
"RTN","ECXUTL1",84,0)
PAD(ECXVAL,ECXLGTH,ECXFB,ECXCHAR) ;* Pad the value passed in with ECXCHAR
"RTN","ECXUTL1",85,0)
 ;
"RTN","ECXUTL1",86,0)
 ;   ECXVAL   - The value to pad
"RTN","ECXUTL1",87,0)
 ;   ECXLGTH  - The maximum length
"RTN","ECXUTL1",88,0)
 ;   ECXFB    - 'F': Pad on front; 'B' Pad on back
"RTN","ECXUTL1",89,0)
 ;   ECXCHAR  - The character to pad ECXVAL with
"RTN","ECXUTL1",90,0)
 ;
"RTN","ECXUTL1",91,0)
 ; Output
"RTN","ECXUTL1",92,0)
 ;   ECXVAR   - The padded result
"RTN","ECXUTL1",93,0)
 ;
"RTN","ECXUTL1",94,0)
 N ECXLPCT,ECXVAR
"RTN","ECXUTL1",95,0)
 I $D(ECXVAL),($D(ECXLGTH)),($D(ECXFB)),($D(ECXCHAR)) DO
"RTN","ECXUTL1",96,0)
 .S (ECXVAL,ECXVAR)=$E(ECXVAL,1,ECXLGTH)
"RTN","ECXUTL1",97,0)
 .F ECXLPCT=1:1:ECXLGTH-$L($E(ECXVAR,1,ECXLGTH)) DO
"RTN","ECXUTL1",98,0)
 ..S:ECXFB="B" ECXVAL=ECXVAL_ECXCHAR
"RTN","ECXUTL1",99,0)
 ..S:ECXFB="F" ECXVAL=ECXCHAR_ECXVAL
"RTN","ECXUTL1",100,0)
 I '$D(ECXVAL) S ECXVAL=""
"RTN","ECXUTL1",101,0)
 Q ECXVAL
"RTN","ECXUTL1",102,0)
 ;
"RTN","ECXUTL1",103,0)
BLDXREF(START,END) ;Build temporary xref from EDIS LOG file #230 API added in patch 136
"RTN","ECXUTL1",104,0)
 N STDT,ENDT,TIME,SITE,IEN,PIEN
"RTN","ECXUTL1",105,0)
 S STDT=$$FMADD^XLFDT(START,-1) ;Start day before
"RTN","ECXUTL1",106,0)
 S ENDT=$$FMADD^XLFDT(END,1,23,59,59) ;Extend to next day, just before midnight.
"RTN","ECXUTL1",107,0)
 S SITE=0 F  S SITE=$O(^EDP(230,"ATO",SITE)) Q:'+SITE  S TIME=STDT F  S TIME=$O(^EDP(230,"ATO",SITE,TIME)) Q:'+TIME!(TIME>ENDT)  D
"RTN","ECXUTL1",108,0)
 .S IEN=0 F  S IEN=$O(^EDP(230,"ATO",SITE,TIME,IEN)) Q:'+IEN  S PIEN=$$GET1^DIQ(230,IEN,".06","I") I PIEN S ^TMP($J,"EDIS",PIEN,TIME)=IEN
"RTN","ECXUTL1",109,0)
 Q
"RTN","ECXUTL1",110,0)
 ;
"RTN","ECXUTL1",111,0)
EDIS(ECXDFN,ECD,ECETYPE,ECXVISIT,ECXSTOP) ;Find emergency room disposition, if it exists, and translate it to a value for DSS. API added with patch 136
"RTN","ECXUTL1",112,0)
 N DISP,STDT,DATE,IEN,ENDT
"RTN","ECXUTL1",113,0)
 I '+$$VERSION^XPDUTL("EDP") Q ""  ;If emergency department software not installed, return null
"RTN","ECXUTL1",114,0)
 I ECETYPE="N" Q:ECXSTOP=130 "N"  Q ""  ;If no-show and ER visit, set to N otherwise set to null
"RTN","ECXUTL1",115,0)
 I ECETYPE="A" D  Q:'$D(DISP) ""  ;If no dispositions found in time frame return null
"RTN","ECXUTL1",116,0)
 .S STDT=$$FMADD^XLFDT(ECD,,-24) ;find date/time 24 hours prior to admit date/time
"RTN","ECXUTL1",117,0)
 .S ENDT=$$FMADD^XLFDT(ECD,,24) ;add 24 hours to the admit date/time to allow for late entry of disposition following admission
"RTN","ECXUTL1",118,0)
 .S DATE=STDT F  S DATE=$O(^TMP($J,"EDIS",ECXDFN,DATE)) Q:'+DATE!(DATE>ENDT)  S DISP=$$GET1^DIQ(230,^TMP($J,"EDIS",ECXDFN,DATE),1.2,"I")
"RTN","ECXUTL1",119,0)
 I ECETYPE="C" Q:$G(ECXSTOP)'=130 ""  D
"RTN","ECXUTL1",120,0)
 .I +$G(ECXVISIT) S IEN=+$O(^EDP(230,"V",ECXVISIT,0)) ;Check visit file pointer
"RTN","ECXUTL1",121,0)
 .I '+$G(IEN) S IEN=+$O(^EDP(230,"B",ECD,0)) I IEN I ECXDFN'=$$GET1^DIQ(230,IEN_",",.06,"I") K IEN ;Check log date/time and patient IEN for match
"RTN","ECXUTL1",122,0)
 .I +$G(IEN) S DISP=$$GET1^DIQ(230,IEN,1.2,"I")
"RTN","ECXUTL1",123,0)
 I '$D(DISP) Q "N"  ;If no visits, return "N" for none
"RTN","ECXUTL1",124,0)
 I DISP="" Q "U"
"RTN","ECXUTL1",125,0)
 Q $$TRANS(DISP)
"RTN","ECXUTL1",126,0)
 ;
"RTN","ECXUTL1",127,0)
TRANS(DISP) ;Translate disposition to set of codes. API added in patch 136
"RTN","ECXUTL1",128,0)
 N CODE,DSP
"RTN","ECXUTL1",129,0)
 S CODE=$$GET1^DIQ(233.1,DISP_",",".01"),DSP=$$UP^XLFSTR($$GET1^DIQ(233.1,DISP_",",".02")) ;Get code name and display name for disposition
"RTN","ECXUTL1",130,0)
 I +CODE Q "U"  ;If code begins with a number, it's local
"RTN","ECXUTL1",131,0)
 I DSP["ADMIT" Q "A"
"RTN","ECXUTL1",132,0)
 I DSP["TRANSFER" Q "T"
"RTN","ECXUTL1",133,0)
 I DSP["HOME"!(DSP["AMA")!(DSP["LEFT")!(DSP["ELOPED") Q "L"
"RTN","ECXUTL1",134,0)
 I DSP["DECEASED" Q "D"
"RTN","ECXUTL1",135,0)
 I DSP["SENT" Q "R"
"RTN","ECXUTL1",136,0)
 I DSP["ERROR" Q "E"
"RTN","ECXUTL1",137,0)
 Q "U"
"RTN","ECXUTL1",138,0)
 ;
"RTN","ECXUTL1",139,0)
ERR ;Send email when scheduling system reports an error.  API added in patch 136
"RTN","ECXUTL1",140,0)
 N XMSUB,XMTEXT,XMDUZ,XMY,XMZ,I,CNT,TEXT
"RTN","ECXUTL1",141,0)
 I '$D(^TMP($J,"SDAMA301")) Q  ;No error to report
"RTN","ECXUTL1",142,0)
 S XMY($G(DUZ,.5))="" ;Send to user or postmaster if no user identified
"RTN","ECXUTL1",143,0)
 S XMY("G.DSS-"_$G(ECGRP))="" ;Include extract group
"RTN","ECXUTL1",144,0)
 S XMDUZ="DSS SYSTEM"
"RTN","ECXUTL1",145,0)
 S XMSUB="Error in retrieving appointment data during extract"
"RTN","ECXUTL1",146,0)
 S CNT=1 S TEXT(CNT)="An error was encountered by the scheduling system during an extract.",CNT=CNT+1
"RTN","ECXUTL1",147,0)
 S TEXT(CNT)="The system returned the following error:",CNT=CNT+1,TEXT(CNT)="",CNT=CNT+1
"RTN","ECXUTL1",148,0)
 S I=0 F  S I=$O(^TMP($J,"SDAMA301",I)) Q:'+I  S TEXT(CNT)="Error code "_I_" - "_^TMP($J,"SDAMA301",I)_".",CNT=CNT+1
"RTN","ECXUTL1",149,0)
 S TEXT(CNT)="",CNT=CNT+1,TEXT(CNT)="Contact your local I.T. department for assistance."
"RTN","ECXUTL1",150,0)
 S XMTEXT="TEXT("
"RTN","ECXUTL1",151,0)
 D ^XMD
"RTN","ECXUTL1",152,0)
 Q
"RTN","ECXUTL1",153,0)
 ;
"RTN","ECXUTL1",154,0)
EXPORT() ;Function indicates if report output is going to a device or to the screen in exportable format - API added in patch 144
"RTN","ECXUTL1",155,0)
 N DIR,DIRUT,DTOUT,DUOUT,DIROUT,X,Y,VAL
"RTN","ECXUTL1",156,0)
 W !
"RTN","ECXUTL1",157,0)
 S DIR("?",1)="Enter yes if you want the data to be displayed in an '^' delimited format",DIR("?")="that can be captured for exporting."
"RTN","ECXUTL1",158,0)
 S DIR(0)="SA^Y:YES;N:NO",DIR("B")="NO",DIR("A")="Do you want the output in exportable format? "
"RTN","ECXUTL1",159,0)
 D ^DIR
"RTN","ECXUTL1",160,0)
 S VAL=$S($D(DIRUT):-1,Y="N":0,1:1)
"RTN","ECXUTL1",161,0)
 I VAL=1 W !!,"Gathering data for export..."
"RTN","ECXUTL1",162,0)
 Q VAL
"RTN","ECXUTL1",163,0)
 ;
"RTN","ECXUTL1",164,0)
EXPDISP ;Displays report in exportable format.  API added in patch 144
"RTN","ECXUTL1",165,0)
 N I,%ZIS,POP,DIR,DTOUT,DIRUT,X,Y,DUOUT
"RTN","ECXUTL1",166,0)
 I '+$O(^TMP($J,"ECXPORT",0)) W !,"No data found for this report." Q
"RTN","ECXUTL1",167,0)
 W !!,"To ensure all data is captured during the export:"
"RTN","ECXUTL1",168,0)
 W !!,"1. Select 'Logging...' from the File Menu. Select your file, and where to save."
"RTN","ECXUTL1",169,0)
 W !,"2. On the Setup menu, select 'Display...',then 'screen' tab and modify 'columns'",!,"   setting to at least 225 characters."
"RTN","ECXUTL1",170,0)
 W !,"3. The DEVICE input for the columns should also contain a large enough",!,"   parameter (e.g. 225).  The DEVICE prompt is defaulted to 0;225;99999 for you.",!,"   You may change it if need be."
"RTN","ECXUTL1",171,0)
 W !,"Example: DEVICE: 0;225;99999 *Where 0 is your screen, 225 is the margin width",!?17,"and 99999 is the screen length."
"RTN","ECXUTL1",172,0)
 W !!,"NOTE:  In order for all number fields, such as SSN and Feeder Key, to be",!,"displayed correctly in the spreadsheet, these fields must be formatted as Text",!,"when importing the data into the spreadsheet.",!
"RTN","ECXUTL1",173,0)
 S %ZIS="",%ZIS("B")="0;225;99999" D ^%ZIS Q:POP
"RTN","ECXUTL1",174,0)
 S I="" F  S I=$O(^TMP($J,"ECXPORT",I)) Q:I=""  W !,^TMP($J,"ECXPORT",I)
"RTN","ECXUTL1",175,0)
 W !!,"Turn off your logging..."
"RTN","ECXUTL1",176,0)
 W !,"...Then, pull your export text file into your spreadsheet.",!
"RTN","ECXUTL1",177,0)
 S DIR(0)="E",DIR("A")="Press any key to continue" D ^DIR
"RTN","ECXUTL1",178,0)
 D HOME^%ZIS ;set parameters back to normal
"RTN","ECXUTL1",179,0)
 Q
"RTN","ECXUTL1",180,0)
 ;
"RTN","ECXUTL1",181,0)
REPORTFY(NAME) ;Function added in patch 144, determines which version of the report to run
"RTN","ECXUTL1",182,0)
 ;For each report that has a previous fiscal year version, a line label
"RTN","ECXUTL1",183,0)
 ;will be added for the report.  Following the ;; on the line label is the
"RTN","ECXUTL1",184,0)
 ;name of the routine for the previous fiscal year.  This value will be
"RTN","ECXUTL1",185,0)
 ;returned if the user selects previous fiscal year.  The function will
"RTN","ECXUTL1",186,0)
 ;return null if current is selected or -1 if no selection is made
"RTN","ECXUTL1",187,0)
 N DIR,DIRUT,DTOUT,DUOUT,Y,X,DIROUT
"RTN","ECXUTL1",188,0)
 I $T(@NAME)="" Q ""  ;No previous FY version exists
"RTN","ECXUTL1",189,0)
 W !
"RTN","ECXUTL1",190,0)
 S DIR(0)="SA^C:Current Fiscal Year Report Logic;P:Previous Fiscal Year Report Logic",DIR("B")="C",DIR("A")="Use (C)urrent or (P)revious fiscal year logic for this report? "
"RTN","ECXUTL1",191,0)
 S DIR("?",1)="This report has been modified for the current fiscal year and may",DIR("?",2)="include additional information or functionality not previously"
"RTN","ECXUTL1",192,0)
 S DIR("?",3)="available.  If you desire the previous fiscal year logic",DIR("?",4)="to be used then select 'P'.  Otherwise, select 'C'"
"RTN","ECXUTL1",193,0)
 S DIR("?")="to run the current version of the report."
"RTN","ECXUTL1",194,0)
 D ^DIR
"RTN","ECXUTL1",195,0)
 I Y="C" Q ""
"RTN","ECXUTL1",196,0)
 I Y="P" Q $P($T(@NAME),";;",2)
"RTN","ECXUTL1",197,0)
 Q -1  ;User didn't make a selection
"RTN","ECXUTL1",198,0)
 ;
"RTN","ECXUTL1",199,0)
 ;Reports available for previous fiscal year are listed below as line labels
"RTN","ECXUTL1",200,0)
RXUNVOL ;;PREV^ECXAPHAP
"RTN","ECXUTL2")
0^58^B72234767^B71508218
"RTN","ECXUTL2",1,0)
ECXUTL2 ;ALB/JAP - Utilities for DSS Extracts (cont.) ;4/16/13  11:38
"RTN","ECXUTL2",2,0)
 ;;3.0;DSS EXTRACTS;**8,13,23,24,33,35,39,46,71,84,92,105,112,120,127,144**;Dec 22, 1997;Build 9
"RTN","ECXUTL2",3,0)
 ;
"RTN","ECXUTL2",4,0)
ECXDEF(ECXHEAD,ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER) ;variables specific to extract from file #727.1
"RTN","ECXUTL2",5,0)
 ;   input 
"RTN","ECXUTL2",6,0)
 ;   ECXHEAD = extract header code
"RTN","ECXUTL2",7,0)
 ;   all other formal list parameters passed by reference
"RTN","ECXUTL2",8,0)
 ;   output
"RTN","ECXUTL2",9,0)
 ;   ECXPACK = type field (#7)
"RTN","ECXUTL2",10,0)
 ;   ECXGRP  = group field (#9)
"RTN","ECXUTL2",11,0)
 ;   ECXFILE = file number field (#1)
"RTN","ECXUTL2",12,0)
 ;   ECXRTN  = routine field (#4)
"RTN","ECXUTL2",13,0)
 ;   ECXPIECE= running piece field (#11)
"RTN","ECXUTL2",14,0)
 ;   ECXVER  = dss version
"RTN","ECXUTL2",15,0)
 N ECXIEN,ECXARR,DIC,DA,DR,DIQ
"RTN","ECXUTL2",16,0)
 S (ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER)="",ECXIEN=0
"RTN","ECXUTL2",17,0)
 S ECXIEN=+$O(^ECX(727.1,"C",ECXHEAD,ECXIEN))
"RTN","ECXUTL2",18,0)
 I ECXIEN=0 D  Q
"RTN","ECXUTL2",19,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",20,0)
 .D MES^XPDUTL(" It appears that you may have a problem with File #727.1 --")
"RTN","ECXUTL2",21,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",22,0)
 .D MES^XPDUTL(" The "_ECHEAD_" Extract is not properly defined.")
"RTN","ECXUTL2",23,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",24,0)
 .D MES^XPDUTL(" Contact National VISTA Support for further assistance.")
"RTN","ECXUTL2",25,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",26,0)
 .I $E(IOST)="C" D
"RTN","ECXUTL2",27,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTL2",28,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUTL2",29,0)
 .W !!
"RTN","ECXUTL2",30,0)
 S DIC="^ECX(727.1,",DA=ECXIEN,DR=".01;1;4;7;9;11;13",DIQ="ECXARR"
"RTN","ECXUTL2",31,0)
 D EN^DIQ1
"RTN","ECXUTL2",32,0)
 S ECXPACK=ECXARR(727.1,ECXIEN,7)
"RTN","ECXUTL2",33,0)
 ;if this is an inactive extract type, skip it
"RTN","ECXUTL2",34,0)
 ;I ECXPACK["Inactive" D  Q
"RTN","ECXUTL2",35,0)
 I ECXARR(727.1,ECXIEN,13)="YES" D  Q
"RTN","ECXUTL2",36,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",37,0)
 .D MES^XPDUTL(" The "_ECHEAD_" Extract is no longer active/valid.")
"RTN","ECXUTL2",38,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",39,0)
 .D MES^XPDUTL(" Contact National VISTA Support for further assistance.")
"RTN","ECXUTL2",40,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",41,0)
 .I $E(IOST)="C" D
"RTN","ECXUTL2",42,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTL2",43,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUTL2",44,0)
 .W !!
"RTN","ECXUTL2",45,0)
 S ECXGRP=ECXARR(727.1,ECXIEN,9)
"RTN","ECXUTL2",46,0)
 S ECXFILE=ECXARR(727.1,ECXIEN,1)
"RTN","ECXUTL2",47,0)
 S ECXRTN="START^"_ECXARR(727.1,ECXIEN,4)
"RTN","ECXUTL2",48,0)
 S ECXPIECE=ECXARR(727.1,ECXIEN,11)
"RTN","ECXUTL2",49,0)
 ;version of dss/tsi in Austin as specified by btso
"RTN","ECXUTL2",50,0)
 S ECXVER=7
"RTN","ECXUTL2",51,0)
 Q
"RTN","ECXUTL2",52,0)
PATDEM(DFN,DT1,PAR,FLG) ; determine patient information
"RTN","ECXUTL2",53,0)
 ;  DFN   =
"RTN","ECXUTL2",54,0)
 ;  DT    =
"RTN","ECXUTL2",55,0)
 ;  PAR   =
"RTN","ECXUTL2",56,0)
 ;  FLG   =
"RTN","ECXUTL2",57,0)
 N DT2,PAT,OK,X
"RTN","ECXUTL2",58,0)
 D KPATDEM
"RTN","ECXUTL2",59,0)
 S FLG=$G(FLG),PAR=$S($D(PAR):PAR,1:"1;2;3;4;5;"),DT2=$P(DT1,".")
"RTN","ECXUTL2",60,0)
 Q:'$$PAT^ECXUTL3(DFN,DT2,PAR,.PAT) 0
"RTN","ECXUTL2",61,0)
 S ECXMPI=PAT("MPI")
"RTN","ECXUTL2",62,0)
 I PAR["1" D
"RTN","ECXUTL2",63,0)
 .S ECXSSN=PAT("SSN"),ECXPNM=PAT("NAME"),ECXDOB=PAT("DOB")
"RTN","ECXUTL2",64,0)
 .S ECXSEX=PAT("SEX"),ECXREL=PAT("RELIGION"),ECXRACE=PAT("RACE")
"RTN","ECXUTL2",65,0)
 .S ECXMAR=PAT("MARITAL")
"RTN","ECXUTL2",66,0)
 .S ECXETH=PAT("ETHNIC"),ECXRC1=PAT("RACE1")
"RTN","ECXUTL2",67,0)
 I PAR["2" D
"RTN","ECXUTL2",68,0)
 .S ECXCNTY=PAT("COUNTY"),ECXSTATE=PAT("STATE"),ECXZIP=PAT("ZIP")
"RTN","ECXUTL2",69,0)
 .S ECXCNTRY=PAT("COUNTRY")
"RTN","ECXUTL2",70,0)
 I PAR["3" D
"RTN","ECXUTL2",71,0)
 .S ECXPOS=PAT("POS"),ECSC=PAT("SC STAT"),ECXSVC=PAT("SC%")
"RTN","ECXUTL2",72,0)
 .S ECXVET=PAT("VET"),ECXMEAN=PAT("MEANS"),ECXELIG=PAT("ELIG")
"RTN","ECXUTL2",73,0)
 .S ECXENRL=PAT("ENROLL LOC")
"RTN","ECXUTL2",74,0)
 .S ECXERI=PAT("ERI")
"RTN","ECXUTL2",75,0)
 I PAR["4" S ECXEMP=PAT("EMPLOY")
"RTN","ECXUTL2",76,0)
 I PAR["5" D
"RTN","ECXUTL2",77,0)
 .S ECXVIET=PAT("VIETNAM"),ECXAST=PAT("AO STAT"),ECXRST=PAT("IR STAT")
"RTN","ECXUTL2",78,0)
 .S ECXEST=PAT("EC STAT"),ECXPST=PAT("POW STAT"),ECXPLOC=PAT("POW LOC")
"RTN","ECXUTL2",79,0)
 .S ECXPHI=PAT("PHI"),ECXMST=PAT("MST STAT"),ECXAOL=PAT("AOL")
"RTN","ECXUTL2",80,0)
 .S ECXOEF=PAT("ECXOEF"),ECXOEFDT=PAT("ECXOEFDT")
"RTN","ECXUTL2",81,0)
 .S ECXCLST=PAT("CL STAT") ;144 Camp Lejeune Status
"RTN","ECXUTL2",82,0)
 I PAR["6" D
"RTN","ECXUTL2",83,0)
 .S (ECXPAYOR,ECXSAI)="" D VISN19(DFN,.ECXPAYOR,.ECXSAI)
"RTN","ECXUTL2",84,0)
 I FLG'[3 D
"RTN","ECXUTL2",85,0)
 .S X=$$PRIMARY(DFN,DT2),ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3)
"RTN","ECXUTL2",86,0)
 .S ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6)
"RTN","ECXUTL2",87,0)
 .S ECASNPI=$P(X,U,7)
"RTN","ECXUTL2",88,0)
 I FLG'[2 D
"RTN","ECXUTL2",89,0)
 .S ECXINP=$$INP^ECXUTL2(DFN,DT1),ECXA=$P(ECXINP,U),ECXMN=$P(ECXINP,U,2)
"RTN","ECXUTL2",90,0)
 .S ECXTS=$P(ECXINP,U,3),ECXDOM=$P(ECXINP,U,10),ECXADMDT=$P(ECXINP,U,4)
"RTN","ECXUTL2",91,0)
 I FLG'[1 S X=$$ENROLLM(DFN)
"RTN","ECXUTL2",92,0)
 Q 1
"RTN","ECXUTL2",93,0)
 ;
"RTN","ECXUTL2",94,0)
KPATDEM ;
"RTN","ECXUTL2",95,0)
 K ECXADMDT,ECAO,ECASNPI,ECASPR,ECCLAS,ECCLAS2,ECENV,ECPTNPI,ECPTPR,ECPTTM
"RTN","ECXUTL2",96,0)
 K ECRE,ECSC,ECXA,ECXAST,ECXCAT,ECXCNTY,ECXEST,ECXENRL,ECXDOB
"RTN","ECXUTL2",97,0)
 K ECXDOM,ECXELIG,ECXINP,ECXMPI,ECXMN,ECXNM,ECXPHI,ECXPLOC,ECXMEAN,ECXMST
"RTN","ECXUTL2",98,0)
 K ECXPAYOR,ECXPNM,ECXPOS,ECXPRIOR,ECXPST,ECXRACE,ECXREL,ECXRST,ECXSAI
"RTN","ECXUTL2",99,0)
 K ECXSEX,ECXSSN,ECXSTAT,ECXSTATE,ECXSVC,ECXTS,ECXVIET,ECXZIP,VA,VAERR
"RTN","ECXUTL2",100,0)
 K ECXSBGRP
"RTN","ECXUTL2",101,0)
 Q
"RTN","ECXUTL2",102,0)
ENROLLM(DFN,RNDT) ;determines enrollment status, category, priority
"RTN","ECXUTL2",103,0)
 ;and user enrollee status
"RTN","ECXUTL2",104,0)
 ; input
"RTN","ECXUTL2",105,0)
 ;    DFN      = IEN from Patient file (Required)
"RTN","ECXUTL2",106,0)
 ;    RNDT     = Extract Run Date
"RTN","ECXUTL2",107,0)
 ; output
"RTN","ECXUTL2",108,0)
 ;    ECXSTAT  = Enrollment status
"RTN","ECXUTL2",109,0)
 ;    ECXPRIOR = Enrollment priority
"RTN","ECXUTL2",110,0)
 ;    ECXCAT   = Enrollment priority
"RTN","ECXUTL2",111,0)
 ;    ECXSBGRP = Enrollment subgroup
"RTN","ECXUTL2",112,0)
 ;    ECXUESTA = User enrollee
"RTN","ECXUTL2",113,0)
 ;    return value 0 if no data found, 1 if data found
"RTN","ECXUTL2",114,0)
 N CAT,PRIOR,STAT,X,X1,X2,X3,ENRIEN,ENR,FL,SBGRP
"RTN","ECXUTL2",115,0)
 S (ECXCAT,ECXPRIOR,ECXSTAT,ECXSBGRP,ECXEUSTA)=""
"RTN","ECXUTL2",116,0)
 I $G(DFN)="" Q 0
"RTN","ECXUTL2",117,0)
 ;User enrollee status, if current or future date set to 'U'
"RTN","ECXUTL2",118,0)
 ;DBIA #3989
"RTN","ECXUTL2",119,0)
 S ECXUESTA=$S($$UESTAT^EASUER(DFN):"U",1:"")
"RTN","ECXUTL2",120,0)
 ;Patient type
"RTN","ECXUTL2",121,0)
 S ECXPTYPE=$$TYPE^ECXUTL5(DFN)
"RTN","ECXUTL2",122,0)
 ;Combat Veteran Status DBIA #4156
"RTN","ECXUTL2",123,0)
 S X3=$$CVEDT^ECXUTL5(DFN,$S($G(ECD):ECD,$G(ECXDATE):ECXDATE,1:DT))
"RTN","ECXUTL2",124,0)
 ;enrollment priority DBIA
"RTN","ECXUTL2",125,0)
 S STAT=$$STATUS^DGENA(DFN),PRIOR=$$PRIORITY^DGENA(DFN)
"RTN","ECXUTL2",126,0)
 S CAT=$$CATEGORY^DGENA4(DFN,STAT),SBGRP=$$ENRSBGRP^DGENA4(DFN)
"RTN","ECXUTL2",127,0)
 ;find current enrollment when status=2 or 19
"RTN","ECXUTL2",128,0)
 I "^2^19^"[("^"_STAT_"^") S ECXSTAT=STAT,ECXPRIOR=PRIOR,ECXCAT=CAT,ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"") Q 1
"RTN","ECXUTL2",129,0)
 ;find previous enrollment
"RTN","ECXUTL2",130,0)
 S ENRIEN=$$FINDCUR^DGENA(DFN) I ENRIEN="" Q 0
"RTN","ECXUTL2",131,0)
 I $G(RNDT)="" D NOW^%DTC S RNDT=X
"RTN","ECXUTL2",132,0)
 S RNDT=($E(RNDT,1,3)-1)_$E(RNDT,4,7),FL=0
"RTN","ECXUTL2",133,0)
 F  S ENRIEN=$$FINDPRI^DGENA(ENRIEN) Q:'ENRIEN  D  Q:FL
"RTN","ECXUTL2",134,0)
 . S ENR=$$GET^DGENA(ENRIEN,.ENR)
"RTN","ECXUTL2",135,0)
 . I "^2^19^"[("^"_$G(ENR("STATUS"))_"^"),$G(ENR("EFFDATE"))>RNDT D
"RTN","ECXUTL2",136,0)
 . . S ECXSTAT=$G(ENR("STATUS")),ECXPRIOR=PRIOR,FL=1
"RTN","ECXUTL2",137,0)
 . . S ECXCAT=$$CATEGORY^DGENA4(DFN,ECXSTAT)
"RTN","ECXUTL2",138,0)
 . . S ECXSBGRP=$$ENRSBGRP^DGENA4(DFN)
"RTN","ECXUTL2",139,0)
 . . S ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"")
"RTN","ECXUTL2",140,0)
 I FL Q 1
"RTN","ECXUTL2",141,0)
 ;no enrollment status found =2 or 19
"RTN","ECXUTL2",142,0)
 S ECXSTAT=STAT,ECXPRIOR=PRIOR,ECXCAT=CAT,ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"")
"RTN","ECXUTL2",143,0)
 Q 1
"RTN","ECXUTL2",144,0)
PRIMARY(ECXDFN,ECXDATE,ECXPREFX) ;determine patient's pc team and pc provider
"RTN","ECXUTL2",145,0)
 ; input
"RTN","ECXUTL2",146,0)
 ; ECXDFN    = file #2 ien (required)
"RTN","ECXUTL2",147,0)
 ; ECXDATE   = date of interest (required)
"RTN","ECXUTL2",148,0)
 ; ECXPREFX  = prefix for provider data (optional)
"RTN","ECXUTL2",149,0)
 ;             defaults to "2" if not specified otherwise
"RTN","ECXUTL2",150,0)
 ; output
"RTN","ECXUTL2",151,0)
 ; ECXPRIME  = pc team ien^prefix_pc provider ien^pc provider person
"RTN","ECXUTL2",152,0)
 ;class^pc provider npi^prefix_assoc pc provider ien^assoc pc provider
"RTN","ECXUTL2",153,0)
 ;person class^assoc pc provider npi
"RTN","ECXUTL2",154,0)
 N ECPTTM,ECPTPR,ECCLAS,ECPRIME,ECASPR,ECCLAS2
"RTN","ECXUTL2",155,0)
 S:'$D(ECXPREFX) ECXPREFX=2 S:(+ECXPREFX=0) ECXPREFX=2
"RTN","ECXUTL2",156,0)
 ;get pc team data
"RTN","ECXUTL2",157,0)
 S ECPTTM=+$$OUTPTTM^SDUTL3(ECXDFN,ECXDATE) S:ECPTTM=0 ECPTTM=""
"RTN","ECXUTL2",158,0)
 ;get primary pc provider data
"RTN","ECXUTL2",159,0)
 S ECPTPR=+$$OUTPTPR^SDUTL3(ECXDFN,ECXDATE)
"RTN","ECXUTL2",160,0)
 S ECCLAS="" I ECPTPR>0 S ECCLAS=$$PRVCLASS^ECXUTL(ECPTPR,ECXDATE)
"RTN","ECXUTL2",161,0)
 N ECXUSRTN S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECPTPR,ECXDATE)
"RTN","ECXUTL2",162,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECPTNPI=$P(ECXUSRTN,U)
"RTN","ECXUTL2",163,0)
 S:ECPTPR=0 ECPTPR="" S:ECPTPR]"" ECPTPR=ECXPREFX_ECPTPR
"RTN","ECXUTL2",164,0)
 ;assoc pc provider call ok if routine scapmca from patch177 is present
"RTN","ECXUTL2",165,0)
 S ECASPR=""
"RTN","ECXUTL2",166,0)
 S X="SCAPMCA" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL2",167,0)
 .S ECASPR=+$$OUTPTAP^SDUTL3(ECXDFN,ECXDATE)
"RTN","ECXUTL2",168,0)
 S ECCLAS2="" I ECASPR>0 S ECCLAS2=$$PRVCLASS^ECXUTL(ECASPR,ECXDATE)
"RTN","ECXUTL2",169,0)
 N ECXUSRTN S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECASPR,ECXDATE)
"RTN","ECXUTL2",170,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECASNPI=$P(ECXUSRTN,U)
"RTN","ECXUTL2",171,0)
 S:ECASPR=0 ECASPR="" S:ECASPR]"" ECASPR=ECXPREFX_ECASPR
"RTN","ECXUTL2",172,0)
 ;assemble
"RTN","ECXUTL2",173,0)
 S ECXPRIME=ECPTTM_U_ECPTPR_U_ECCLAS_U_ECPTNPI_U_ECASPR_U_ECCLAS2_U_ECASNPI
"RTN","ECXUTL2",174,0)
 Q ECXPRIME
"RTN","ECXUTL2",175,0)
INP(ECXDFN,ECXDATE) ; check for inpatient status
"RTN","ECXUTL2",176,0)
 ; input
"RTN","ECXUTL2",177,0)
 ; ECXDFN  = file #2 ien (required)
"RTN","ECXUTL2",178,0)
 ; ECXDATE = date of interest (required)
"RTN","ECXUTL2",179,0)
 ; output
"RTN","ECXUTL2",180,0)
 ; ECXINP  = patient status^movment # (file #405 ien)
"RTN","ECXUTL2",181,0)
 ;       current treat. spec. (file #42.4 ien)^admission date/time^
"RTN","ECXUTL2",182,0)
 ;       current ward (file #42 ien)^discharge date/time^
"RTN","ECXUTL2",183,0)
 ;       ward provider^attending phys.^ward (file #44 ien);facility
"RTN","ECXUTL2",184,0)
 ;       (file #40.8 ien);dss dept^dom
"RTN","ECXUTL2",185,0)
 ;           where patient status = I for inpatient
"RTN","ECXUTL2",186,0)
 ;                                = O for outpatient
"RTN","ECXUTL2",187,0)
 N DFN,DSSDEPT,ECA,ECADM,ECMN,ECTS,ECWARD,ECDC,ECXINP,ECXPRO
"RTN","ECXUTL2",188,0)
 N ECXATP,ECXDD,ECXDOM,ECXPROF,ECXPWP,ECXWW,FAC,VAIP,WRD,ECXPWPPC
"RTN","ECXUTL2",189,0)
 N ECXATPPC
"RTN","ECXUTL2",190,0)
 D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXUTL2",191,0)
 S ECXPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXUTL2",192,0)
 ;- Inpat/outpat indicator (ECA) initially set to "O" (outpatient)
"RTN","ECXUTL2",193,0)
 S DFN=ECXDFN,ECA="O"
"RTN","ECXUTL2",194,0)
 S (DSSDEPT,ECMN,ECTS,ECADM,ECWARD,ECDC,ECXATP,ECXPWP,ECXWW,WRD,FAC,ECXPWPPC,ECXATPPC)=""
"RTN","ECXUTL2",195,0)
 S VAIP("D")=ECXDATE D IN5^VADPT
"RTN","ECXUTL2",196,0)
 S ECMN=$G(VAIP(1))
"RTN","ECXUTL2",197,0)
 I ECMN D
"RTN","ECXUTL2",198,0)
 .S ECTS=+$P($G(^DIC(45.7,+VAIP(8),0)),U,2) S:ECTS=0 ECTS=""
"RTN","ECXUTL2",199,0)
 .;- Get inpat/outpat indicator
"RTN","ECXUTL2",200,0)
 .S ECA=$$INOUTP^ECXUTL4(ECTS)
"RTN","ECXUTL2",201,0)
 .S ECADM=+$G(VAIP(13,1)) S:ECADM=0 ECADM=""
"RTN","ECXUTL2",202,0)
 .S ECWARD=+$G(VAIP(5)) S:ECWARD=0 ECWARD=""
"RTN","ECXUTL2",203,0)
 .I ECWARD D
"RTN","ECXUTL2",204,0)
 ..S WRD=+$P($G(^DIC(42,+ECWARD,44)),U)
"RTN","ECXUTL2",205,0)
 ..S FAC=$P($G(^DIC(42,+ECWARD,0)),U,11)
"RTN","ECXUTL2",206,0)
 ..S DSSDEPT=$P($G(^ECX(727.4,ECWARD,0)),U,2)
"RTN","ECXUTL2",207,0)
 .S ECXWW=WRD_";"_FAC_";"_DSSDEPT,ECDC=+$G(VAIP(17,1)) S:ECDC=0 ECDC=""
"RTN","ECXUTL2",208,0)
 .S ECXPWP=+VAIP(7) S:ECXPWP=0 ECXPWP=""
"RTN","ECXUTL2",209,0)
 .S ECXATP=+VAIP(18) S:ECXATP=0 ECXATP=""
"RTN","ECXUTL2",210,0)
 .S ECXPWPPC=$$PRVCLASS^ECXUTL(ECXPWP,ECADM)
"RTN","ECXUTL2",211,0)
 .S ECXATPPC=$$PRVCLASS^ECXUTL(ECXATP,ECADM)
"RTN","ECXUTL2",212,0)
 .;prefix file #200 iens
"RTN","ECXUTL2",213,0)
 .S:ECXPWP ECXPWP=ECXPROF_ECXPWP S:ECXATP ECXATP=ECXPROF_ECXATP
"RTN","ECXUTL2",214,0)
 S ECXDOM=$P($G(^ECX(727.831,+ECTS,0)),U,2)
"RTN","ECXUTL2",215,0)
 S ECXINP=ECA_U_ECMN_U_ECTS_U_ECADM_U_ECWARD_U_ECDC_U_ECXPWP_U_ECXATP_U_ECXWW_U_ECXDOM_U_ECXPWPPC_U_ECXATPPC
"RTN","ECXUTL2",216,0)
 Q ECXINP
"RTN","ECXUTL2",217,0)
VISN19(ECXDFN,ECXPAYOR,ECXSAI) ;visn 19 sharing agreement data
"RTN","ECXUTL2",218,0)
 ; input  ECXDFN = patient file ien
"RTN","ECXUTL2",219,0)
 ; output ECXPAYOR, ECXSAI (passed by reference)
"RTN","ECXUTL2",220,0)
 N JJ,ALIAS,INSUR,DIC,DIQ,DA,DR,ECXARY,ECXERR,ECXDA
"RTN","ECXUTL2",221,0)
 S (ECXPAYOR,ECXSAI)=""
"RTN","ECXUTL2",222,0)
 D GETS^DIQ(2,ECXDFN,"1*,","I","ECXARY","ECXERR")
"RTN","ECXUTL2",223,0)
 I $D(ECXERR) Q
"RTN","ECXUTL2",224,0)
 S JJ=0 F  S JJ=$O(ECXARY(2.01,JJ)) Q:JJ=""  D  I ECXPAYOR]"" Q
"RTN","ECXUTL2",225,0)
 . S ALIAS=$G(ECXARY(2.01,JJ,.01,"I"))
"RTN","ECXUTL2",226,0)
 . S ECXPAYOR=$S(ALIAS="SHARING AGREEMENT":"A",ALIAS="TRICARE":"B",ALIAS="CAT C":"C",ALIAS="CATEGORY C":"C",ALIAS="CHAMPVA":"D",ALIAS="CHAMPUS":"E",1:"")
"RTN","ECXUTL2",227,0)
 . W !,$G(CNT)+1
"RTN","ECXUTL2",228,0)
 . W !,"The value of ECXPAYOR is: ",ECXPAYOR
"RTN","ECXUTL2",229,0)
 ;K ECXARY,ECXERR
"RTN","ECXUTL2",230,0)
 I ECXPAYOR]"" D GETS^DIQ(2,ECXDFN,".3121*,","I","ECXARY","ECXERR") D
"RTN","ECXUTL2",231,0)
 . I $D(ECXERR) Q
"RTN","ECXUTL2",232,0)
 . S JJ=0,ECXDA=$O(ECXARY(2.312,JJ)) I ECXDA="" Q
"RTN","ECXUTL2",233,0)
 . S DA=$G(ECXARY(2.312,ECXDA,.01,"I")) I DA="" Q
"RTN","ECXUTL2",234,0)
 . S INSUR=$$GET1^DIQ(36,DA,".01","I","","ECXERR")
"RTN","ECXUTL2",235,0)
 . I '$D(ECXERR) S ECXSAI=$E(ECXARY(2.312,ECXDA,.01,"I"),1,11)
"RTN","ECXUTL2",236,0)
 Q
"RTN","ECXUTL3")
0^5^B94009566^B63750846
"RTN","ECXUTL3",1,0)
ECXUTL3 ;ALB/GTS - Utilities for DSS Extracts ;4/8/13  16:07
"RTN","ECXUTL3",2,0)
 ;;3.0;DSS EXTRACTS;**11,24,32,33,35,37,39,42,46,92,105,120,144**;Dec 22,1997;Build 9
"RTN","ECXUTL3",3,0)
 ;
"RTN","ECXUTL3",4,0)
OUTPTTM(ECXDFN,ECXDT) ;* Return PC Team from PCMM files or DPT
"RTN","ECXUTL3",5,0)
 ; Variables -
"RTN","ECXUTL3",6,0)
 ;            ECXDFN - IEN from Patient file (Required)
"RTN","ECXUTL3",7,0)
 ;            ECXDT  - Relevant Date for Primary Care Team
"RTN","ECXUTL3",8,0)
 ;                      (Defaults to DT)
"RTN","ECXUTL3",9,0)
 ;
"RTN","ECXUTL3",10,0)
 ; Returned: ECXTM -
"RTN","ECXUTL3",11,0)
 ;            Pointer to team file (#404.51)
"RTN","ECXUTL3",12,0)
 ;            or, if error or none defined, returns 0
"RTN","ECXUTL3",13,0)
 ;
"RTN","ECXUTL3",14,0)
 Q:'$G(ECXDFN) 0 ;** Quit if ECXDFN not defined
"RTN","ECXUTL3",15,0)
 N ECXTM
"RTN","ECXUTL3",16,0)
 S:'$D(ECXDT) ECXDT=DT
"RTN","ECXUTL3",17,0)
 I $T(OUTPTTM^SDUTL3)[",SCDATE" D
"RTN","ECXUTL3",18,0)
 .S ECXTM=+$$OUTPTTM^SDUTL3(ECXDFN,ECXDT)
"RTN","ECXUTL3",19,0)
 I $T(OUTPTTM^SDUTL3)'[",SCDATE" D
"RTN","ECXUTL3",20,0)
 .S ECXTM=+$$OUTPTTM^SDUTL3(ECXDFN)
"RTN","ECXUTL3",21,0)
 I ECXTM=0 D
"RTN","ECXUTL3",22,0)
 .S ECXTM=+$P($G(^DPT(+ECXDFN,"PC")),U,2)
"RTN","ECXUTL3",23,0)
 Q ECXTM
"RTN","ECXUTL3",24,0)
 ;
"RTN","ECXUTL3",25,0)
OUTPTPR(ECXDFN,ECXDT) ;* Return PC Provider from PCMM files or DPT
"RTN","ECXUTL3",26,0)
 ; Variables -
"RTN","ECXUTL3",27,0)
 ;            ECXDFN - IEN from Patient file (Required)
"RTN","ECXUTL3",28,0)
 ;            ECXDT  - Relevant Date for Primary Care Provider
"RTN","ECXUTL3",29,0)
 ;                      (Defaults to DT)
"RTN","ECXUTL3",30,0)
 ;
"RTN","ECXUTL3",31,0)
 ; Returned: ECXPR -
"RTN","ECXUTL3",32,0)
 ;            Pointer to file #200 
"RTN","ECXUTL3",33,0)
 ;            or, if error or none defined, returns a 0
"RTN","ECXUTL3",34,0)
 ;
"RTN","ECXUTL3",35,0)
 Q:'$G(ECXDFN) 0 ;** Quit if ECXDFN not defined
"RTN","ECXUTL3",36,0)
 N ECXPR
"RTN","ECXUTL3",37,0)
 S:'$D(ECXDT) ECXDT=DT
"RTN","ECXUTL3",38,0)
 I $T(OUTPTPR^SDUTL3)[",SCDATE" D
"RTN","ECXUTL3",39,0)
 .S ECXPR=+$$OUTPTPR^SDUTL3(ECXDFN,ECXDT)
"RTN","ECXUTL3",40,0)
 I $T(OUTPTPR^SDUTL3)'[",SCDATE" D
"RTN","ECXUTL3",41,0)
 .S ECXPR=+$$OUTPTPR^SDUTL3(ECXDFN)
"RTN","ECXUTL3",42,0)
 I ECXPR=0 D
"RTN","ECXUTL3",43,0)
 .S ECXPR=+$G(^DPT(+ECXDFN,"PC"))
"RTN","ECXUTL3",44,0)
 Q ECXPR
"RTN","ECXUTL3",45,0)
 ;
"RTN","ECXUTL3",46,0)
PAT(ECXDFN,ECXDATE,ECXDATA,ECXPAT) ;Return basic patient data for extract
"RTN","ECXUTL3",47,0)
 ; Will not return data associated with test patients (SSN begin w 00000)
"RTN","ECXUTL3",48,0)
 ; Variables -
"RTN","ECXUTL3",49,0)
 ;  Input  ECXDFN - Patient internal entry number, DFN file#2; required
"RTN","ECXUTL3",50,0)
 ;         ECXDATE- Date used to get specific data from GETSTAT^DGMSTAPI
"RTN","ECXUTL3",51,0)
 ;                  for MST. If no date, defaults to today's date,
"RTN","ECXUTL3",52,0)
 ;                  standard FM format, optional
"RTN","ECXUTL3",53,0)
 ;         ECXDATA- Code indicating which data to return, optional.
"RTN","ECXUTL3",54,0)
 ;                  If code not specified then returns all. Codes are:
"RTN","ECXUTL3",55,0)
 ;                  1 - DEM^VADPT (demographic data)
"RTN","ECXUTL3",56,0)
 ;                  2 - ADD^VADPT (current address)
"RTN","ECXUTL3",57,0)
 ;                  3 - ELIG^VADPT (eligibility & enrollment location)
"RTN","ECXUTL3",58,0)
 ;                  4 - OPD^VADPT (other patient data)
"RTN","ECXUTL3",59,0)
 ;                  5 - SVC^VADPT & GETSTAT^DGMSTAPI (service & MST inf)
"RTN","ECXUTL3",60,0)
 ;         ECXPAT(- Passed by reference; required
"RTN","ECXUTL3",61,0)
 ;
"RTN","ECXUTL3",62,0)
 ;  Output:
"RTN","ECXUTL3",63,0)
 ;         ECXPAT   0 error or test patient no data in ECXPAT array
"RTN","ECXUTL3",64,0)
 ;                  1 data returned in ECXPAT array
"RTN","ECXUTL3",65,0)
 ;         ECXPAT(  Local array with patient data.
"RTN","ECXUTL3",66,0)
 ;
"RTN","ECXUTL3",67,0)
 N SSN,I,ECXCOD,ECXDAT,DFN,VAPA,VADM,VAEL,VAPD,VASV,STR,ECXAR,DIC,DIQ,RCNUM,RCVAL,COLMETH
"RTN","ECXUTL3",68,0)
 N DA,DR,PELG,MELIG,ZIP,MPI
"RTN","ECXUTL3",69,0)
 I ECXDFN="" Q 0
"RTN","ECXUTL3",70,0)
 S SSN=$$GET1^DIQ(2,ECXDFN,.09,"I"),DFN=ECXDFN,ECXPAT=0
"RTN","ECXUTL3",71,0)
 I $E(SSN,1,3)="000"!(SSN="") K ECXPAT Q 0  ;test patient
"RTN","ECXUTL3",72,0)
 ;test patient extended checks; mtl extract excluded
"RTN","ECXUTL3",73,0)
 I $G(ECHEAD)'="MTL",'$$SSN^ECXUTL5(SSN) K ECXPAT Q 0
"RTN","ECXUTL3",74,0)
 S STR="NAME;SSN;DOB;SEX;RACE;RELIGION;STATE;COUNTY;ZIP;SC%;MEANS;ELIG;"
"RTN","ECXUTL3",75,0)
 S STR=STR_"EMPLOY;AO STAT;IR STAT;EC STAT;POW STAT;POW LOC;MST STAT;"
"RTN","ECXUTL3",76,0)
 S STR=STR_"ENROLL LOC;MPI;VIETNAM;POS;MARITAL;CL STAT" ;144 Camp Lejeune Status
"RTN","ECXUTL3",77,0)
 ;initialize return array values
"RTN","ECXUTL3",78,0)
 F I=1:1 S ECXDAT=$P(STR,";",I) Q:ECXDAT=""  S ECXPAT(ECXDAT)=""
"RTN","ECXUTL3",79,0)
 F I=1:1:$L(ECXDATA,";") S ECXDAT=$P(ECXDATA,";",I) I ECXDAT'="" D
"RTN","ECXUTL3",80,0)
 . S ECXCOD(ECXDAT)=""
"RTN","ECXUTL3",81,0)
 ;
"RTN","ECXUTL3",82,0)
 ;- Get ICN if MPI installed
"RTN","ECXUTL3",83,0)
 S X="MPIF001" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL3",84,0)
 .;
"RTN","ECXUTL3",85,0)
 .;- Get 1st piece (either ICN # or -1 if error)
"RTN","ECXUTL3",86,0)
 . S MPI=+$$GETICN^MPIF001(DFN)
"RTN","ECXUTL3",87,0)
 .;
"RTN","ECXUTL3",88,0)
 .;- If error, set to null
"RTN","ECXUTL3",89,0)
 . S ECXPAT("MPI")=$S(MPI>0:MPI,1:"")
"RTN","ECXUTL3",90,0)
 D  ;get demographic data
"RTN","ECXUTL3",91,0)
 . I ECXDATA'="",'$D(ECXCOD(1)) Q
"RTN","ECXUTL3",92,0)
 . D DEM^VADPT
"RTN","ECXUTL3",93,0)
 . S ECXPAT("NAME")=$E($P(VADM(1),",")_"    ",1,4)
"RTN","ECXUTL3",94,0)
 . S ECXPAT("SSN")=$P(VADM(2),U),ECXPAT("MARITAL")=$P(VADM(10),U)
"RTN","ECXUTL3",95,0)
 . S ECXPAT("DOB")=$$ECXDOB^ECXUTL($P(VADM(3),U))
"RTN","ECXUTL3",96,0)
 . S ECXPAT("SEX")=$P(VADM(5),U),ECXPAT("RELIGION")=$P(VADM(9),U)
"RTN","ECXUTL3",97,0)
 . S DIC=10,DR=2,DA=+VADM(8),DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",98,0)
 . S ECXPAT("RACE")=$G(ECXAR(10,DA,DR,"I")),ECXPAT=1
"RTN","ECXUTL3",99,0)
 . ;add new race and ethnicity fields for FY2003
"RTN","ECXUTL3",100,0)
 . S (ECXPAT("ETHNIC"),ECXPAT("RACE1"))=""
"RTN","ECXUTL3",101,0)
 . S X="DGUTL4" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL3",102,0)
 .. S COLMETH=$$PTR2CODE^DGUTL4($G(VADM(11,1,1)),3,4) I COLMETH="S" D
"RTN","ECXUTL3",103,0)
 ... S ECXPAT("ETHNIC")=$$PTR2CODE^DGUTL4(+$G(VADM(11,1)),2,4)
"RTN","ECXUTL3",104,0)
 .. S (RCVAL,RCNUM)=""
"RTN","ECXUTL3",105,0)
 .. F  S RCNUM=$O(VADM(12,RCNUM)) Q:RCNUM=""  Q:RCVAL="C"  S COLMETH=$$PTR2CODE^DGUTL4(+$G(VADM(12,RCNUM,1)),3,4) I COLMETH="S" D
"RTN","ECXUTL3",106,0)
 ... S RCVAL=$$PTR2CODE^DGUTL4(+$G(VADM(12,RCNUM)),1,4)
"RTN","ECXUTL3",107,0)
 ... I RCVAL="C" S ECXPAT("RACE1")=RCVAL Q
"RTN","ECXUTL3",108,0)
 ... S ECXPAT("RACE1")=ECXPAT("RACE1")_RCVAL
"RTN","ECXUTL3",109,0)
 .I ECXPAT("RACE1")="" S ECXPAT("RACE1")=$$CHECKRC(+VADM(8)) ;144 If RACE1 is null, check value in RACE field
"RTN","ECXUTL3",110,0)
 D  ;get address information
"RTN","ECXUTL3",111,0)
 . I ECXDATA'="",'$D(ECXCOD(2)) Q
"RTN","ECXUTL3",112,0)
 . D ADD^VADPT
"RTN","ECXUTL3",113,0)
 . S DIC=5,DR=2,DA=+VAPA(5),DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",114,0)
 . S ECXPAT("STATE")=$G(ECXAR(5,DA,DR,"I"))
"RTN","ECXUTL3",115,0)
 . S DIC=5,DA=+VAPA(5),DR=3,DR(5.01)=2,DA(5.01)=+VAPA(7),DIQ="ECXAR"
"RTN","ECXUTL3",116,0)
 . S DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",117,0)
 . S ECXPAT("COUNTY")=$G(ECXAR(5.01,DA(5.01),2,"I"))
"RTN","ECXUTL3",118,0)
 . S ECXPAT("ZIP")=$P(VAPA(11),U,2)
"RTN","ECXUTL3",119,0)
 . S ECXPAT("COUNTRY")=$$GET1^DIQ(779.004,+$P($G(VAPA(25)),U),.01)
"RTN","ECXUTL3",120,0)
 . S ECXPAT=1
"RTN","ECXUTL3",121,0)
 D  ;get eligibility information
"RTN","ECXUTL3",122,0)
 . I ECXDATA'="",'$D(ECXCOD(3)) Q
"RTN","ECXUTL3",123,0)
 . D ELIG^VADPT
"RTN","ECXUTL3",124,0)
 . S PELG=$P(VAEL(1),U),MELIG=$S(PELG="":"",1:$$GET1^DIQ(8,PELG,8,"I"))
"RTN","ECXUTL3",125,0)
 . S ECXPAT("POS")=$P($G(^DIC(21,+VAEL(2),0)),U,3)
"RTN","ECXUTL3",126,0)
 . S ECXPAT("SC STAT")=$S(+VAEL(3):"Y",+VAEL(3)=0:"N",1:"")
"RTN","ECXUTL3",127,0)
 . S ECXPAT("SC%")=$P(VAEL(3),U,2)
"RTN","ECXUTL3",128,0)
 . S ECXPAT("VET")=$S(VAEL(4):"Y",VAEL(4)=0:"N",1:"")
"RTN","ECXUTL3",129,0)
 . S ECXPAT("MEANS")=$P(VAEL(9),U),ECXPAT=1
"RTN","ECXUTL3",130,0)
 . S ECXPAT("ELIG")=$$ELIG(MELIG,ECXPAT("SC%"))
"RTN","ECXUTL3",131,0)
 . ;get enrollment location
"RTN","ECXUTL3",132,0)
 . S DIC=2,DR=27.02,DA=ECXDFN,DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",133,0)
 . S ECXDAT=$G(ECXAR(2,ECXDFN,DR,"I")) I ECXDAT K ECXAR D
"RTN","ECXUTL3",134,0)
 . . S DIC=4,DA=ECXDAT,DR=99,DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",135,0)
 . . S ECXPAT("ENROLL LOC")=ECXAR(4,ECXDAT,DR,"I")
"RTN","ECXUTL3",136,0)
 . ;get Emergency Response Indicator (FEMA)
"RTN","ECXUTL3",137,0)
 . S ECXPAT("ERI")=$$GET1^DIQ(2,ECXDFN,.181,"I")
"RTN","ECXUTL3",138,0)
 D  ;get other patient information
"RTN","ECXUTL3",139,0)
 . I ECXDATA'="",'$D(ECXCOD(4)) Q
"RTN","ECXUTL3",140,0)
 . D OPD^VADPT
"RTN","ECXUTL3",141,0)
 . S ECXPAT("EMPLOY")=$P(VAPD(7),U),ECXPAT=1
"RTN","ECXUTL3",142,0)
 D  ;get service information
"RTN","ECXUTL3",143,0)
 . I ECXDATA'="",'$D(ECXCOD(5)) Q
"RTN","ECXUTL3",144,0)
 . D SVC^VADPT
"RTN","ECXUTL3",145,0)
 . S ECXPAT("VIETNAM")=$S(VASV(1):"Y",VASV(2)=0:"N",1:"U")
"RTN","ECXUTL3",146,0)
 . S ECXPAT("AO STAT")=$S(VASV(2):"Y",VASV(2)=0:"N",1:"U")
"RTN","ECXUTL3",147,0)
 . S ECXPAT("IR STAT")=$S(VASV(3):"Y",VASV(3)=0:"N",1:"U")
"RTN","ECXUTL3",148,0)
 . S ECXPAT("EC STAT")=$$GET1^DIQ(2,ECXDFN,.322013,"I")
"RTN","ECXUTL3",149,0)
 . S ECXPAT("POW STAT")=$S(VASV(4):"Y",VASV(4)=0:"N",1:"U")
"RTN","ECXUTL3",150,0)
 . S ECXPAT("POW LOC")=$P(VASV(4,3),U),ECXPAT=1
"RTN","ECXUTL3",151,0)
 . S ECXPAT("PHI")=$S(VASV(9)=1:"Y",VASV(9)=0:"N",1:"")
"RTN","ECXUTL3",152,0)
 . S ECXPAT("CL STAT")="" ;144 Set to null until Camp Lejeune is added to SVC^VADPT call
"RTN","ECXUTL3",153,0)
 . ;- Agent Orange Location (K=Korean DMZ,V=Vietnam)
"RTN","ECXUTL3",154,0)
 . S ECXPAT("AOL")=$P($G(VASV(2,5)),U)
"RTN","ECXUTL3",155,0)
 . ;get patient OEF/OIF status and date of return
"RTN","ECXUTL3",156,0)
 . D OEFDATA^ECXUTL4
"RTN","ECXUTL3",157,0)
 . ;
"RTN","ECXUTL3",158,0)
 . ;get patient current MST status
"RTN","ECXUTL3",159,0)
 . I ECXDATE'="",ECXDATE'["." S ECXDATE=ECXDATE+.9
"RTN","ECXUTL3",160,0)
 . S X="DGMSTAPI" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL3",161,0)
 . . S ECXDAT=$$GETSTAT^DGMSTAPI(DFN,ECXDATE)
"RTN","ECXUTL3",162,0)
 . . S ECXPAT("MST STAT")=$S(+ECXDAT>0:$P(ECXDAT,U,2),1:"")
"RTN","ECXUTL3",163,0)
 I 'ECXPAT K ECXPAT Q 0
"RTN","ECXUTL3",164,0)
 Q 1
"RTN","ECXUTL3",165,0)
 ;
"RTN","ECXUTL3",166,0)
ELIG(ECXELIG,ECXSVCP) ;Converts veteran eligibility code to NPCD code
"RTN","ECXUTL3",167,0)
 ; Variables -
"RTN","ECXUTL3",168,0)
 ;  Input  ECXELIG - Pointer to MAS ELIGIBILITY CODE file #8.1
"RTN","ECXUTL3",169,0)
 ;         ECXSVCP - Number value rep. service connected percentage.
"RTN","ECXUTL3",170,0)
 ;
"RTN","ECXUTL3",171,0)
 ;  Output:
"RTN","ECXUTL3",172,0)
 ;         ECXNCPD  NPCD Eligibility Code
"RTN","ECXUTL3",173,0)
 ;
"RTN","ECXUTL3",174,0)
 N TEXT,IEN,SCPER,FND,NPCD,I,ECXBG,ECXEN,ECXNPCD
"RTN","ECXUTL3",175,0)
 I ECXELIG="" Q ""
"RTN","ECXUTL3",176,0)
 F I=1:1 S TEXT=$P($T(ELGTXT+I),";",3,999) Q:TEXT="END"  D  I $D(NPCD) Q
"RTN","ECXUTL3",177,0)
 . S IEN=$P(TEXT,";"),SCPER=$P(TEXT,";",2)
"RTN","ECXUTL3",178,0)
 . I ECXELIG=IEN D
"RTN","ECXUTL3",179,0)
 . . I SCPER="" S NPCD=$P(TEXT,";",3) Q
"RTN","ECXUTL3",180,0)
 . . S ECXBG=$S($E(SCPER)="<":0,$E(SCPER)=">":$P(SCPER,">",2)+1,SCPER["-":+SCPER,1:"")
"RTN","ECXUTL3",181,0)
 . . S ECXEN=$S($E(SCPER)="<":$P(SCPER,"<",2),$E(SCPER)=">":100,SCPER["-":$P(SCPER,"-",2),1:"")
"RTN","ECXUTL3",182,0)
 . . I ECXSVCP'<ECXBG,ECXSVCP'>ECXEN S NPCD=$P(TEXT,";",3)
"RTN","ECXUTL3",183,0)
 S ECXNPCD=$G(NPCD)
"RTN","ECXUTL3",184,0)
 Q ECXNPCD
"RTN","ECXUTL3",185,0)
ELGTXT ;Eligibility codes
"RTN","ECXUTL3",186,0)
 ;;1;>49;10;SC 50-100%
"RTN","ECXUTL3",187,0)
 ;;2;;20;Aid & Attendance
"RTN","ECXUTL3",188,0)
 ;;15;;21;Housebound
"RTN","ECXUTL3",189,0)
 ;;16;;22;Mexican Border War
"RTN","ECXUTL3",190,0)
 ;;17;;23;WWI
"RTN","ECXUTL3",191,0)
 ;;18;;24;POW
"RTN","ECXUTL3",192,0)
 ;;3;40-49;30;SC 40-49%
"RTN","ECXUTL3",193,0)
 ;;3;30-39;31;SC 30-39%
"RTN","ECXUTL3",194,0)
 ;;3;20-29;32;SC 20-29%
"RTN","ECXUTL3",195,0)
 ;;3;10-19;33;SC 10-19%
"RTN","ECXUTL3",196,0)
 ;;3;<10;34;SC less than 10%
"RTN","ECXUTL3",197,0)
 ;;4;;40;NSC - VA Pension
"RTN","ECXUTL3",198,0)
 ;;5;;50;NSC
"RTN","ECXUTL3",199,0)
 ;;21;;60;Catastrophic Disability
"RTN","ECXUTL3",200,0)
 ;;12;;101;CHAMPVA
"RTN","ECXUTL3",201,0)
 ;;13;;102;Collateral of Veteran
"RTN","ECXUTL3",202,0)
 ;;14;;103;Employee
"RTN","ECXUTL3",203,0)
 ;;6;;104;Other Federal Agency
"RTN","ECXUTL3",204,0)
 ;;7;;105;Allied Veteran
"RTN","ECXUTL3",205,0)
 ;;8;;106;Humanitarian Emergency
"RTN","ECXUTL3",206,0)
 ;;9;;107;Sharing Agreement
"RTN","ECXUTL3",207,0)
 ;;10;;108;Reimbursable Insurance
"RTN","ECXUTL3",208,0)
 ;;19;;109;TRICARE/CHAMPUS
"RTN","ECXUTL3",209,0)
 ;;22;;25;Purple Heart Recipient
"RTN","ECXUTL3",210,0)
 ;;END
"RTN","ECXUTL3",211,0)
 ;
"RTN","ECXUTL3",212,0)
CPT(ECXCPT,ECXMOD,ECXQUA) ;Returns a str with CPT code and modifier codes
"RTN","ECXUTL3",213,0)
 ;Return string is composed of a 5 character CPT code 2 character quantity
"RTN","ECXUTL3",214,0)
 ;plus up to 5 modifier codes, 2 characters each.
"RTN","ECXUTL3",215,0)
 ; Variables -
"RTN","ECXUTL3",216,0)
 ;  Input  ECXCPT  - Pointer value to the CPT file (#81)
"RTN","ECXUTL3",217,0)
 ;         ECXMOD - A string with pointer values to the CPT
"RTN","ECXUTL3",218,0)
 ;                   MODIFIER file (#81.3) separated by ";"
"RTN","ECXUTL3",219,0)
 ;         ECXQUA  - Number of time this procedure performed
"RTN","ECXUTL3",220,0)
 ;
"RTN","ECXUTL3",221,0)
 ;  Output:
"RTN","ECXUTL3",222,0)
 ;         CPTMOD  - String of up to 17 characters, 5 character CPT
"RTN","ECXUTL3",223,0)
 ;                   code 2 character qty plus up to 5 2-character
"RTN","ECXUTL3",224,0)
 ;                   code modifiers.
"RTN","ECXUTL3",225,0)
 ;
"RTN","ECXUTL3",226,0)
 N CPT,MOD,I,CPTMOD
"RTN","ECXUTL3",227,0)
 S ECXQUA=$G(ECXQUA,"01"),ECXMOD=$G(ECXMOD)
"RTN","ECXUTL3",228,0)
 S:$L(ECXQUA)'=2 ECXQUA="0"_ECXQUA
"RTN","ECXUTL3",229,0)
 S CPT=$$CPT^ICPTCOD(ECXCPT,"") I +CPT=-1 Q ""
"RTN","ECXUTL3",230,0)
 S CPT=$P(CPT,U,2)_ECXQUA
"RTN","ECXUTL3",231,0)
 F I=1:1:99 I $P(ECXMOD,";",I)'="" D
"RTN","ECXUTL3",232,0)
 . S MOD=$$MOD^ICPTMOD($P(ECXMOD,";",I),"I","")
"RTN","ECXUTL3",233,0)
 . I +MOD>0,$P(MOD,U,2)'="99" S CPT=CPT_$P(MOD,U,2)
"RTN","ECXUTL3",234,0)
 S CPTMOD=$TR($E(CPT,1,17)," ")
"RTN","ECXUTL3",235,0)
 Q CPTMOD
"RTN","ECXUTL3",236,0)
 ;
"RTN","ECXUTL3",237,0)
CPTOUT(ECXCPT) ;output transform for CPT code plus modifiers
"RTN","ECXUTL3",238,0)
 ;input  ECXCPT  - character string of CPT code plus modifiers (required)
"RTN","ECXUTL3",239,0)
 ;
"RTN","ECXUTL3",240,0)
 N J,CPTX,MOD,MODS,MODX,CPTMOD
"RTN","ECXUTL3",241,0)
 Q:$G(ECXCPT)="" ""
"RTN","ECXUTL3",242,0)
 S (CPTMOD,MODX)=""
"RTN","ECXUTL3",243,0)
 S CPTX="("_+$E(ECXCPT,6,7)_") "_$E(ECXCPT,1,5),MODS=$E(ECXCPT,8,17)
"RTN","ECXUTL3",244,0)
 F J=1:2:9 S MOD=$E(MODS,J,J+1) Q:MOD=""  D
"RTN","ECXUTL3",245,0)
 .I J>1 S MODX=MODX_", "_MOD Q
"RTN","ECXUTL3",246,0)
 .S MODX=MODX_"-"_MOD
"RTN","ECXUTL3",247,0)
 S:$L(CPTX)>3 CPTMOD=CPTMOD_CPTX_MODX
"RTN","ECXUTL3",248,0)
 Q CPTMOD
"RTN","ECXUTL3",249,0)
 ;
"RTN","ECXUTL3",250,0)
CHECKRC(RACEIEN) ;144 API added to check RACE for non-stardard values that can be converted.  If the value can be converted then it will be stored in RACE1 upon return
"RTN","ECXUTL3",251,0)
 N NAME,DIC,X,Y,PTFVAL
"RTN","ECXUTL3",252,0)
 S NAME=$$PTR2TEXT^DGUTL4(RACEIEN)
"RTN","ECXUTL3",253,0)
 S PTFVAL=""
"RTN","ECXUTL3",254,0)
 I NAME="AMER INDIAN OR ALASKAN NATIVE"!(NAME="AMERICAN INDIAN")!(NAME="AMERICAN INDIAN/ALASKAN NATIVE")!(NAME="AMERICAN INDIAN OR ALASKAN NATIVE") S X="AMERICAN INDIAN OR ALASKA NATIVE"
"RTN","ECXUTL3",255,0)
 I NAME="AMERICAN INDIAN/ALASKA NATIVE"!(NAME="AMERICAN INDIAN/ALASKAN")!(NAME="AMERICAN INDIANT OR ALASKA NATIVE") S X="AMERICAN INDIAN OR ALASKA NATIVE"
"RTN","ECXUTL3",256,0)
 I NAME="BLACK"!(NAME="BLACK NOT OF HISP ORIG")!(NAME="BLACK, NON HISPANIC")!(NAME="BLACK, NOT OF HISPANIC ORIGIN") S X="BLACK OR AFRICAN AMERICAN"
"RTN","ECXUTL3",257,0)
 I NAME="BLACK,NOT OF HISPANIC ORIGIN"!(NAME="HISPANIC BLACK")!(NAME="HISPANIC, BLACK")!(NAME="HISPANIC,BLACK") S X="BLACK OR AFRICAN AMERICAN"
"RTN","ECXUTL3",258,0)
 I NAME="WHITE NOT OF HISP ORIG"!(NAME="WHITE, NON HISPANIC")!(NAME="WHITE, NOT OF HISPANIC")!(NAME="WHITE, NOT OF HISPANIC ORIGIN")!(NAME="WHITE,NOT OF HISPANIC ORIGIN") S X="WHITE"
"RTN","ECXUTL3",259,0)
 I NAME="CAUCASIAN"!(NAME="CAUCASIAN, NOT OF HISPANIC ORIGIN")!(NAME="HISPANIC WHITE")!(NAME="HISPANIC, WHITE")!(NAME="HISPANIC,WHITE") S X="WHITE"
"RTN","ECXUTL3",260,0)
 I NAME="PACIFIC ISLANDER" S X="NATIVE HAWAIIAN OR OTHER PACIFIC ISLANDER"
"RTN","ECXUTL3",261,0)
 S DIC(0)="MQ",DIC=10 D ^DIC ;Find standard race in RACE file
"RTN","ECXUTL3",262,0)
 I Y S PTFVAL=$$PTR2CODE^DGUTL4(+Y,1,4) ;If found, get PTF value to return
"RTN","ECXUTL3",263,0)
 Q PTFVAL
"TEMP","ECX4CHAR",0)
3131201^3131101^National Clinic File Gold listing
"TEMP","ECX4CHAR","402A")
PROV A V01 402 TOGUS ME
"TEMP","ECX4CHAR","402B")
PROV B V01 402 TOGUS ME
"TEMP","ECX4CHAR","402C")
PROV C V01 402 TOGUS ME
"TEMP","ECX4CHAR","402D")
PROV D V01 402 TOGUS ME
"TEMP","ECX4CHAR","402E")
PROV E V01 402 TOGUS ME
"TEMP","ECX4CHAR","402F")
PROV F V01 402 TOGUS ME
"TEMP","ECX4CHAR","402G")
PROV G V01 402 TOGUS ME
"TEMP","ECX4CHAR","402H")
PROV H V01 402 TOGUS ME
"TEMP","ECX4CHAR","402I")
PROV I V01 402 TOGUS ME
"TEMP","ECX4CHAR","402J")
PROV J V01 402 TOGUS ME
"TEMP","ECX4CHAR","402K")
PROV K V01 402 TOGUS ME
"TEMP","ECX4CHAR","405A")
PROV A V01 405 WHITE RIVER JUNCTION VT
"TEMP","ECX4CHAR","405B")
PROV B V01 405 WHITE RIVER JUNCTION VT
"TEMP","ECX4CHAR","405C")
PROV C V01 405 WHITE RIVER JUNCTION VT
"TEMP","ECX4CHAR","405D")
PROV D V01 405 WHITE RIVER JUNCTION VT
"TEMP","ECX4CHAR","405E")
PROV E V01 405 WHITE RIVER JUNCTION VT
"TEMP","ECX4CHAR","405F")
PROV F V01 405 WHITE RIVER JUNCTION VT
"TEMP","ECX4CHAR","405G")
PROV G V01 405 WHITE RIVER JUNCTION VT
"TEMP","ECX4CHAR","405H")
PROV H V01 405 WHITE RIVER JUNCTION VT
"TEMP","ECX4CHAR","405I")
PROV I V01 405 WHITE RIVER JUNCTION VT
"TEMP","ECX4CHAR","405J")
PROV J V01 405 WHITE RIVER JUNCTION VT
"TEMP","ECX4CHAR","405K")
PROV K V01 405 WHITE RIVER JUNCTION VT
"TEMP","ECX4CHAR","436A")
PROV A V19 436 FORT HARRISON MT
"TEMP","ECX4CHAR","436B")
PROV B V19 436 FORT HARRISON MT
"TEMP","ECX4CHAR","436C")
PROV C V19 436 FORT HARRISON MT
"TEMP","ECX4CHAR","436D")
PROV D V19 436 FORT HARRISON MT
"TEMP","ECX4CHAR","436E")
PROV E V19 436 FORT HARRISON MT
"TEMP","ECX4CHAR","436F")
PROV F V19 436 FORT HARRISON MT
"TEMP","ECX4CHAR","436G")
PROV G V19 436 FORT HARRISON MT
"TEMP","ECX4CHAR","436H")
PROV H V19 436 FORT HARRISON MT
"TEMP","ECX4CHAR","436I")
PROV I V19 436 FORT HARRISON MT
"TEMP","ECX4CHAR","436J")
PROV J V19 436 FORT HARRISON MT
"TEMP","ECX4CHAR","436K")
PROV K V19 436 FORT HARRISON MT
"TEMP","ECX4CHAR","437A")
PROV A V23 437 FARGO ND
"TEMP","ECX4CHAR","437B")
PROV B V23 437 FARGO ND
"TEMP","ECX4CHAR","437C")
PROV C V23 437 FARGO ND
"TEMP","ECX4CHAR","437D")
PROV D V23 437 FARGO ND
"TEMP","ECX4CHAR","437E")
PROV E V23 437 FARGO ND
"TEMP","ECX4CHAR","437F")
PROV F V23 437 FARGO ND
"TEMP","ECX4CHAR","437G")
PROV G V23 437 FARGO ND
"TEMP","ECX4CHAR","437H")
PROV H V23 437 FARGO ND
"TEMP","ECX4CHAR","437I")
PROV I V23 437 FARGO ND
"TEMP","ECX4CHAR","437J")
PROV J V23 437 FARGO ND
"TEMP","ECX4CHAR","437K")
PROV K V23 437 FARGO ND
"TEMP","ECX4CHAR","438A")
PROV A V23 438 SIOUX FALLS SD
"TEMP","ECX4CHAR","438B")
PROV B V23 438 SIOUX FALLS SD
"TEMP","ECX4CHAR","438C")
PROV C V23 438 SIOUX FALLS SD
"TEMP","ECX4CHAR","438D")
PROV D V23 438 SIOUX FALLS SD
"TEMP","ECX4CHAR","438E")
PROV E V23 438 SIOUX FALLS SD
"TEMP","ECX4CHAR","438F")
PROV F V23 438 SIOUX FALLS SD
"TEMP","ECX4CHAR","438G")
PROV G V23 438 SIOUX FALLS SD
"TEMP","ECX4CHAR","438H")
PROV H V23 438 SIOUX FALLS SD
"TEMP","ECX4CHAR","438I")
PROV I V23 438 SIOUX FALLS SD
"TEMP","ECX4CHAR","438J")
PROV J V23 438 SIOUX FALLS SD
"TEMP","ECX4CHAR","438K")
PROV K V23 438 SIOUX FALLS SD
"TEMP","ECX4CHAR","442A")
PROV A V19 442 CHEYENNE WY
"TEMP","ECX4CHAR","442B")
PROV B V19 442 CHEYENNE WY
"TEMP","ECX4CHAR","442C")
PROV C V19 442 CHEYENNE WY
"TEMP","ECX4CHAR","442D")
PROV D V19 442 CHEYENNE WY
"TEMP","ECX4CHAR","442E")
PROV E V19 442 CHEYENNE WY
"TEMP","ECX4CHAR","442F")
PROV F V19 442 CHEYENNE WY
"TEMP","ECX4CHAR","442G")
PROV G V19 442 CHEYENNE WY
"TEMP","ECX4CHAR","442H")
PROV H V19 442 CHEYENNE WY
"TEMP","ECX4CHAR","442I")
PROV I V19 442 CHEYENNE WY
"TEMP","ECX4CHAR","442J")
PROV J V19 442 CHEYENNE WY
"TEMP","ECX4CHAR","442K")
PROV K V19 442 CHEYENNE WY
"TEMP","ECX4CHAR","459A")
PROV A V21 459 HONOLULU HI
"TEMP","ECX4CHAR","459B")
PROV B V21 459 HONOLULU HI
"TEMP","ECX4CHAR","459C")
PROV C V21 459 HONOLULU HI
"TEMP","ECX4CHAR","459D")
PROV D V21 459 HONOLULU HI
"TEMP","ECX4CHAR","459E")
PROV E V21 459 HONOLULU HI
"TEMP","ECX4CHAR","459F")
PROV F V21 459 HONOLULU HI
"TEMP","ECX4CHAR","459G")
PROV G V21 459 HONOLULU HI
"TEMP","ECX4CHAR","459H")
PROV H V21 459 HONOLULU HI
"TEMP","ECX4CHAR","459I")
PROV I V21 459 HONOLULU HI
"TEMP","ECX4CHAR","459J")
PROV J V21 459 HONOLULU HI
"TEMP","ECX4CHAR","459K")
PROV K V21 459 HONOLULU HI
"TEMP","ECX4CHAR","460A")
PROV A V04 460 WILMINGTON DE
"TEMP","ECX4CHAR","460B")
PROV B V04 460 WILMINGTON DE
"TEMP","ECX4CHAR","460C")
PROV C V04 460 WILMINGTON DE
"TEMP","ECX4CHAR","460D")
PROV D V04 460 WILMINGTON DE
"TEMP","ECX4CHAR","460E")
PROV E V04 460 WILMINGTON DE
"TEMP","ECX4CHAR","460F")
PROV F V04 460 WILMINGTON DE
"TEMP","ECX4CHAR","460G")
PROV G V04 460 WILMINGTON DE
"TEMP","ECX4CHAR","460H")
PROV H V04 460 WILMINGTON DE
"TEMP","ECX4CHAR","460I")
PROV I V04 460 WILMINGTON DE
"TEMP","ECX4CHAR","460J")
PROV J V04 460 WILMINGTON DE
"TEMP","ECX4CHAR","460K")
PROV K V04 460 WILMINGTON DE
"TEMP","ECX4CHAR","463A")
PROV A V20 463 ANCHORAGE AK
"TEMP","ECX4CHAR","463B")
PROV B V20 463 ANCHORAGE AK
"TEMP","ECX4CHAR","463C")
PROV C V20 463 ANCHORAGE AK
"TEMP","ECX4CHAR","463D")
PROV D V20 463 ANCHORAGE AK
"TEMP","ECX4CHAR","463E")
PROV E V20 463 ANCHORAGE AK
"TEMP","ECX4CHAR","463F")
PROV F V20 463 ANCHORAGE AK
"TEMP","ECX4CHAR","463G")
PROV G V20 463 ANCHORAGE AK
"TEMP","ECX4CHAR","463H")
PROV H V20 463 ANCHORAGE AK
"TEMP","ECX4CHAR","463I")
PROV I V20 463 ANCHORAGE AK
"TEMP","ECX4CHAR","463J")
PROV J V20 463 ANCHORAGE AK
"TEMP","ECX4CHAR","463K")
PROV K V20 463 ANCHORAGE AK
"TEMP","ECX4CHAR","502A")
PROV A V16 502 ALEXANDRIA LA
"TEMP","ECX4CHAR","502B")
PROV B V16 502 ALEXANDRIA LA
"TEMP","ECX4CHAR","502C")
PROV C V16 502 ALEXANDRIA LA
"TEMP","ECX4CHAR","502D")
PROV D V16 502 ALEXANDRIA LA
"TEMP","ECX4CHAR","502E")
PROV E V16 502 ALEXANDRIA LA
"TEMP","ECX4CHAR","502F")
PROV F V16 502 ALEXANDRIA LA
"TEMP","ECX4CHAR","502G")
PROV G V16 502 ALEXANDRIA LA
"TEMP","ECX4CHAR","502H")
PROV H V16 502 ALEXANDRIA LA
"TEMP","ECX4CHAR","502I")
PROV I V16 502 ALEXANDRIA LA
"TEMP","ECX4CHAR","502J")
PROV J V16 502 ALEXANDRIA LA
"TEMP","ECX4CHAR","502K")
PROV K V16 502 ALEXANDRIA LA
"TEMP","ECX4CHAR","503A")
PROV A V04 503 ALTOONA PA
"TEMP","ECX4CHAR","503B")
PROV B V04 503 ALTOONA PA
"TEMP","ECX4CHAR","503C")
PROV C V04 503 ALTOONA PA
"TEMP","ECX4CHAR","503D")
PROV D V04 503 ALTOONA PA
"TEMP","ECX4CHAR","503E")
PROV E V04 503 ALTOONA PA
"TEMP","ECX4CHAR","503F")
PROV F V04 503 ALTOONA PA
"TEMP","ECX4CHAR","503G")
PROV G V04 503 ALTOONA PA
"TEMP","ECX4CHAR","503H")
PROV H V04 503 ALTOONA PA
"TEMP","ECX4CHAR","503I")
PROV I V04 503 ALTOONA PA
"TEMP","ECX4CHAR","503J")
PROV J V04 503 ALTOONA PA
"TEMP","ECX4CHAR","503K")
PROV K V04 503 ALTOONA PA
"TEMP","ECX4CHAR","504A")
PROV A V18 504 AMARILLO TX
"TEMP","ECX4CHAR","504B")
PROV B V18 504 AMARILLO TX
"TEMP","ECX4CHAR","504C")
PROV C V18 504 AMARILLO TX
"TEMP","ECX4CHAR","504D")
PROV D V18 504 AMARILLO TX
"TEMP","ECX4CHAR","504E")
PROV E V18 504 AMARILLO TX
"TEMP","ECX4CHAR","504F")
PROV F V18 504 AMARILLO TX
"TEMP","ECX4CHAR","504G")
PROV G V18 504 AMARILLO TX
"TEMP","ECX4CHAR","504H")
PROV H V18 504 AMARILLO TX
"TEMP","ECX4CHAR","504I")
PROV I V18 504 AMARILLO TX
"TEMP","ECX4CHAR","504J")
PROV J V18 504 AMARILLO TX
"TEMP","ECX4CHAR","504K")
PROV K V18 504 AMARILLO TX
"TEMP","ECX4CHAR","506A")
PROV A V11 506 ANN ARBOR MI
"TEMP","ECX4CHAR","506B")
PROV B V11 506 ANN ARBOR MI
"TEMP","ECX4CHAR","506C")
PROV C V11 506 ANN ARBOR MI
"TEMP","ECX4CHAR","506D")
PROV D V11 506 ANN ARBOR MI
"TEMP","ECX4CHAR","506E")
PROV E V11 506 ANN ARBOR MI
"TEMP","ECX4CHAR","506F")
PROV F V11 506 ANN ARBOR MI
"TEMP","ECX4CHAR","506G")
PROV G V11 506 ANN ARBOR MI
"TEMP","ECX4CHAR","506H")
PROV H V11 506 ANN ARBOR MI
"TEMP","ECX4CHAR","506I")
PROV I V11 506 ANN ARBOR MI
"TEMP","ECX4CHAR","506J")
PROV J V11 506 ANN ARBOR MI
"TEMP","ECX4CHAR","506K")
PROV K V11 506 ANN ARBOR MI
"TEMP","ECX4CHAR","508A")
PROV A V07 508 ATLANTA GA
"TEMP","ECX4CHAR","508B")
PROV B V07 508 ATLANTA GA
"TEMP","ECX4CHAR","508C")
PROV C V07 508 ATLANTA GA
"TEMP","ECX4CHAR","508D")
PROV D V07 508 ATLANTA GA
"TEMP","ECX4CHAR","508E")
PROV E V07 508 ATLANTA GA
"TEMP","ECX4CHAR","508F")
PROV F V07 508 ATLANTA GA
"TEMP","ECX4CHAR","508G")
PROV G V07 508 ATLANTA GA
"TEMP","ECX4CHAR","508H")
PROV H V07 508 ATLANTA GA
"TEMP","ECX4CHAR","508I")
PROV I V07 508 ATLANTA GA
"TEMP","ECX4CHAR","508J")
PROV J V07 508 ATLANTA GA
"TEMP","ECX4CHAR","508K")
PROV K V07 508 ATLANTA GA
"TEMP","ECX4CHAR","509A")
PROV A V07 509 AUGUSTA GA
"TEMP","ECX4CHAR","509B")
PROV B V07 509 AUGUSTA GA
"TEMP","ECX4CHAR","509C")
PROV C V07 509 AUGUSTA GA
"TEMP","ECX4CHAR","509D")
PROV D V07 509 AUGUSTA GA
"TEMP","ECX4CHAR","509E")
PROV E V07 509 AUGUSTA GA
"TEMP","ECX4CHAR","509F")
PROV F V07 509 AUGUSTA GA
"TEMP","ECX4CHAR","509G")
PROV G V07 509 AUGUSTA GA
"TEMP","ECX4CHAR","509H")
PROV H V07 509 AUGUSTA GA
"TEMP","ECX4CHAR","509I")
PROV I V07 509 AUGUSTA GA
"TEMP","ECX4CHAR","509J")
PROV J V07 509 AUGUSTA GA
"TEMP","ECX4CHAR","509K")
PROV K V07 509 AUGUSTA GA
"TEMP","ECX4CHAR","512A")
PROV A V05 512 MARYLAND HCS
"TEMP","ECX4CHAR","512B")
PROV B V05 512 MARYLAND HCS
"TEMP","ECX4CHAR","512C")
PROV C V05 512 MARYLAND HCS
"TEMP","ECX4CHAR","512D")
PROV D V05 512 MARYLAND HCS
"TEMP","ECX4CHAR","512E")
PROV E V05 512 MARYLAND HCS
"TEMP","ECX4CHAR","512F")
PROV F V05 512 MARYLAND HCS
"TEMP","ECX4CHAR","512G")
PROV G V05 512 MARYLAND HCS
"TEMP","ECX4CHAR","512H")
PROV H V05 512 MARYLAND HCS
"TEMP","ECX4CHAR","512I")
PROV I V05 512 MARYLAND HCS
"TEMP","ECX4CHAR","512J")
PROV J V05 512 MARYLAND HCS
"TEMP","ECX4CHAR","512K")
PROV K V05 512 MARYLAND HCS
"TEMP","ECX4CHAR","515A")
PROV A V11 515 BATTLE CREEK MI
"TEMP","ECX4CHAR","515B")
PROV B V11 515 BATTLE CREEK MI
"TEMP","ECX4CHAR","515C")
PROV C V11 515 BATTLE CREEK MI
"TEMP","ECX4CHAR","515D")
PROV D V11 515 BATTLE CREEK MI
"TEMP","ECX4CHAR","515E")
PROV E V11 515 BATTLE CREEK MI
"TEMP","ECX4CHAR","515F")
PROV F V11 515 BATTLE CREEK MI
"TEMP","ECX4CHAR","515G")
PROV G V11 515 BATTLE CREEK MI
"TEMP","ECX4CHAR","515H")
PROV H V11 515 BATTLE CREEK MI
"TEMP","ECX4CHAR","515I")
PROV I V11 515 BATTLE CREEK MI
"TEMP","ECX4CHAR","515J")
PROV J V11 515 BATTLE CREEK MI
"TEMP","ECX4CHAR","515K")
PROV K V11 515 BATTLE CREEK MI
"TEMP","ECX4CHAR","516A")
PROV A V08 516 BAY PINES FL
"TEMP","ECX4CHAR","516B")
PROV B V08 516 BAY PINES FL
"TEMP","ECX4CHAR","516C")
PROV C V08 516 BAY PINES FL
"TEMP","ECX4CHAR","516D")
PROV D V08 516 BAY PINES FL
"TEMP","ECX4CHAR","516E")
PROV E V08 516 BAY PINES FL
"TEMP","ECX4CHAR","516F")
PROV F V08 516 BAY PINES FL
"TEMP","ECX4CHAR","516G")
PROV G V08 516 BAY PINES FL
"TEMP","ECX4CHAR","516H")
PROV H V08 516 BAY PINES FL
"TEMP","ECX4CHAR","516I")
PROV I V08 516 BAY PINES FL
"TEMP","ECX4CHAR","516J")
PROV J V08 516 BAY PINES FL
"TEMP","ECX4CHAR","516K")
PROV K V08 516 BAY PINES FL
"TEMP","ECX4CHAR","517A")
PROV A V06 517 BECKLEY WV
"TEMP","ECX4CHAR","517B")
PROV B V06 517 BECKLEY WV
"TEMP","ECX4CHAR","517C")
PROV C V06 517 BECKLEY WV
"TEMP","ECX4CHAR","517D")
PROV D V06 517 BECKLEY WV
"TEMP","ECX4CHAR","517E")
PROV E V06 517 BECKLEY WV
"TEMP","ECX4CHAR","517F")
PROV F V06 517 BECKLEY WV
"TEMP","ECX4CHAR","517G")
PROV G V06 517 BECKLEY WV
"TEMP","ECX4CHAR","517H")
PROV H V06 517 BECKLEY WV
"TEMP","ECX4CHAR","517I")
PROV I V06 517 BECKLEY WV
"TEMP","ECX4CHAR","517J")
PROV J V06 517 BECKLEY WV
"TEMP","ECX4CHAR","517K")
PROV K V06 517 BECKLEY WV
"TEMP","ECX4CHAR","518A")
PROV A V01 518 BEDFORD MA
"TEMP","ECX4CHAR","518B")
PROV B V01 518 BEDFORD MA
"TEMP","ECX4CHAR","518C")
PROV C V01 518 BEDFORD MA
"TEMP","ECX4CHAR","518D")
PROV D V01 518 BEDFORD MA
"TEMP","ECX4CHAR","518E")
PROV E V01 518 BEDFORD MA
"TEMP","ECX4CHAR","518F")
PROV F V01 518 BEDFORD MA
"TEMP","ECX4CHAR","518G")
PROV G V01 518 BEDFORD MA
"TEMP","ECX4CHAR","518H")
PROV H V01 518 BEDFORD MA
"TEMP","ECX4CHAR","518I")
PROV I V01 518 BEDFORD MA
"TEMP","ECX4CHAR","518J")
PROV J V01 518 BEDFORD MA
"TEMP","ECX4CHAR","518K")
PROV K V01 518 BEDFORD MA
"TEMP","ECX4CHAR","519A")
PROV A V18 519 BIG SPRINGS TX
"TEMP","ECX4CHAR","519B")
PROV B V18 519 BIG SPRINGS TX
"TEMP","ECX4CHAR","519C")
PROV C V18 519 BIG SPRINGS TX
"TEMP","ECX4CHAR","519D")
PROV D V18 519 BIG SPRINGS TX
"TEMP","ECX4CHAR","519E")
PROV E V18 519 BIG SPRINGS TX
"TEMP","ECX4CHAR","519F")
PROV F V18 519 BIG SPRINGS TX
"TEMP","ECX4CHAR","519G")
PROV G V18 519 BIG SPRINGS TX
"TEMP","ECX4CHAR","519H")
PROV H V18 519 BIG SPRINGS TX
"TEMP","ECX4CHAR","519I")
PROV I V18 519 BIG SPRINGS TX
"TEMP","ECX4CHAR","519J")
PROV J V18 519 BIG SPRINGS TX
"TEMP","ECX4CHAR","519K")
PROV K V18 519 BIG SPRINGS TX
"TEMP","ECX4CHAR","520A")
PROV A V16 520 BILOXI MS
"TEMP","ECX4CHAR","520B")
PROV B V16 520 BILOXI MS
"TEMP","ECX4CHAR","520C")
PROV C V16 520 BILOXI MS
"TEMP","ECX4CHAR","520D")
PROV D V16 520 BILOXI MS
"TEMP","ECX4CHAR","520E")
PROV E V16 520 BILOXI MS
"TEMP","ECX4CHAR","520F")
PROV F V16 520 BILOXI MS
"TEMP","ECX4CHAR","520G")
PROV G V16 520 BILOXI MS
"TEMP","ECX4CHAR","520H")
PROV H V16 520 BILOXI MS
"TEMP","ECX4CHAR","520I")
PROV I V16 520 BILOXI MS
"TEMP","ECX4CHAR","520J")
PROV J V16 520 BILOXI MS
"TEMP","ECX4CHAR","520K")
PROV K V16 520 BILOXI MS
"TEMP","ECX4CHAR","521A")
PROV A V07 521 BIRMINGHAM AL
"TEMP","ECX4CHAR","521B")
PROV B V07 521 BIRMINGHAM AL
"TEMP","ECX4CHAR","521C")
PROV C V07 521 BIRMINGHAM AL
"TEMP","ECX4CHAR","521D")
PROV D V07 521 BIRMINGHAM AL
"TEMP","ECX4CHAR","521E")
PROV E V07 521 BIRMINGHAM AL
"TEMP","ECX4CHAR","521F")
PROV F V07 521 BIRMINGHAM AL
"TEMP","ECX4CHAR","521G")
PROV G V07 521 BIRMINGHAM AL
"TEMP","ECX4CHAR","521H")
PROV H V07 521 BIRMINGHAM AL
"TEMP","ECX4CHAR","521I")
PROV I V07 521 BIRMINGHAM AL
"TEMP","ECX4CHAR","521J")
PROV J V07 521 BIRMINGHAM AL
"TEMP","ECX4CHAR","521K")
PROV K V07 521 BIRMINGHAM AL
"TEMP","ECX4CHAR","523A")
PROV A V01 523 VA BOSTON HCS
"TEMP","ECX4CHAR","523B")
PROV B V01 523 VA BOSTON HCS
"TEMP","ECX4CHAR","523C")
PROV C V01 523 VA BOSTON HCS
"TEMP","ECX4CHAR","523D")
PROV D V01 523 VA BOSTON HCS
"TEMP","ECX4CHAR","523E")
PROV E V01 523 VA BOSTON HCS
"TEMP","ECX4CHAR","523F")
PROV F V01 523 VA BOSTON HCS
"TEMP","ECX4CHAR","523G")
PROV G V01 523 VA BOSTON HCS
"TEMP","ECX4CHAR","523H")
PROV H V01 523 VA BOSTON HCS
"TEMP","ECX4CHAR","523I")
PROV I V01 523 VA BOSTON HCS
"TEMP","ECX4CHAR","523J")
PROV J V01 523 VA BOSTON HCS
"TEMP","ECX4CHAR","523K")
PROV K V01 523 VA BOSTON HCS
"TEMP","ECX4CHAR","526A")
PROV A V03 526 BRONX NY
"TEMP","ECX4CHAR","526B")
PROV B V03 526 BRONX NY
"TEMP","ECX4CHAR","526C")
PROV C V03 526 BRONX NY
"TEMP","ECX4CHAR","526D")
PROV D V03 526 BRONX NY
"TEMP","ECX4CHAR","526E")
PROV E V03 526 BRONX NY
"TEMP","ECX4CHAR","526F")
PROV F V03 526 BRONX NY
"TEMP","ECX4CHAR","526G")
PROV G V03 526 BRONX NY
"TEMP","ECX4CHAR","526H")
PROV H V03 526 BRONX NY
"TEMP","ECX4CHAR","526I")
PROV I V03 526 BRONX NY
"TEMP","ECX4CHAR","526J")
PROV J V03 526 BRONX NY
"TEMP","ECX4CHAR","526K")
PROV K V03 526 BRONX NY
"TEMP","ECX4CHAR","528A")
PROV A V02 528 WESTERN NEW YORK HCS
"TEMP","ECX4CHAR","528B")
PROV B V02 528 WESTERN NEW YORK HCS
"TEMP","ECX4CHAR","528C")
PROV C V02 528 WESTERN NEW YORK HCS
"TEMP","ECX4CHAR","528D")
PROV D V02 528 WESTERN NEW YORK HCS
"TEMP","ECX4CHAR","528E")
PROV E V02 528 WESTERN NEW YORK HCS
"TEMP","ECX4CHAR","528F")
PROV F V02 528 WESTERN NEW YORK HCS
"TEMP","ECX4CHAR","528G")
PROV G V02 528 WESTERN NEW YORK HCS
"TEMP","ECX4CHAR","528H")
PROV H V02 528 WESTERN NEW YORK HCS
"TEMP","ECX4CHAR","528I")
PROV I V02 528 WESTERN NEW YORK HCS
"TEMP","ECX4CHAR","528J")
PROV J V02 528 WESTERN NEW YORK HCS
"TEMP","ECX4CHAR","528K")
PROV K V02 528 WESTERN NEW YORK HCS
"TEMP","ECX4CHAR","529A")
PROV A V04 529 BUTLER PA
"TEMP","ECX4CHAR","529B")
PROV B V04 529 BUTLER PA
"TEMP","ECX4CHAR","529C")
PROV C V04 529 BUTLER PA
"TEMP","ECX4CHAR","529D")
PROV D V04 529 BUTLER PA
"TEMP","ECX4CHAR","529E")
PROV E V04 529 BUTLER PA
"TEMP","ECX4CHAR","529F")
PROV F V04 529 BUTLER PA
"TEMP","ECX4CHAR","529G")
PROV G V04 529 BUTLER PA
"TEMP","ECX4CHAR","529H")
PROV H V04 529 BUTLER PA
"TEMP","ECX4CHAR","529I")
PROV I V04 529 BUTLER PA
"TEMP","ECX4CHAR","529J")
PROV J V04 529 BUTLER PA
"TEMP","ECX4CHAR","529K")
PROV K V04 529 BUTLER PA
"TEMP","ECX4CHAR","531A")
PROV A V20 531 BOISE ID
"TEMP","ECX4CHAR","531B")
PROV B V20 531 BOISE ID
"TEMP","ECX4CHAR","531C")
PROV C V20 531 BOISE ID
"TEMP","ECX4CHAR","531D")
PROV D V20 531 BOISE ID
"TEMP","ECX4CHAR","531E")
PROV E V20 531 BOISE ID
"TEMP","ECX4CHAR","531F")
PROV F V20 531 BOISE ID
"TEMP","ECX4CHAR","531G")
PROV G V20 531 BOISE ID
"TEMP","ECX4CHAR","531H")
PROV H V20 531 BOISE ID
"TEMP","ECX4CHAR","531I")
PROV I V20 531 BOISE ID
"TEMP","ECX4CHAR","531J")
PROV J V20 531 BOISE ID
"TEMP","ECX4CHAR","531K")
PROV K V20 531 BOISE ID
"TEMP","ECX4CHAR","534A")
PROV A V07 534 CHARLESTON SC
"TEMP","ECX4CHAR","534B")
PROV B V07 534 CHARLESTON SC
"TEMP","ECX4CHAR","534C")
PROV C V07 534 CHARLESTON SC
"TEMP","ECX4CHAR","534D")
PROV D V07 534 CHARLESTON SC
"TEMP","ECX4CHAR","534E")
PROV E V07 534 CHARLESTON SC
"TEMP","ECX4CHAR","534F")
PROV F V07 534 CHARLESTON SC
"TEMP","ECX4CHAR","534G")
PROV G V07 534 CHARLESTON SC
"TEMP","ECX4CHAR","534H")
PROV H V07 534 CHARLESTON SC
"TEMP","ECX4CHAR","534I")
PROV I V07 534 CHARLESTON SC
"TEMP","ECX4CHAR","534J")
PROV J V07 534 CHARLESTON SC
"TEMP","ECX4CHAR","534K")
PROV K V07 534 CHARLESTON SC
"TEMP","ECX4CHAR","538A")
PROV A V10 538 CHILLICOTHE OH
"TEMP","ECX4CHAR","538B")
PROV B V10 538 CHILLICOTHE OH
"TEMP","ECX4CHAR","538C")
PROV C V10 538 CHILLICOTHE OH
"TEMP","ECX4CHAR","538D")
PROV D V10 538 CHILLICOTHE OH
"TEMP","ECX4CHAR","538E")
PROV E V10 538 CHILLICOTHE OH
"TEMP","ECX4CHAR","538F")
PROV F V10 538 CHILLICOTHE OH
"TEMP","ECX4CHAR","538G")
PROV G V10 538 CHILLICOTHE OH
"TEMP","ECX4CHAR","538H")
PROV H V10 538 CHILLICOTHE OH
"TEMP","ECX4CHAR","538I")
PROV I V10 538 CHILLICOTHE OH
"TEMP","ECX4CHAR","538J")
PROV J V10 538 CHILLICOTHE OH
"TEMP","ECX4CHAR","538K")
PROV K V10 538 CHILLICOTHE OH
"TEMP","ECX4CHAR","539A")
PROV A V10 539 CINCINNATI OH
"TEMP","ECX4CHAR","539B")
PROV B V10 539 CINCINNATI OH
"TEMP","ECX4CHAR","539C")
PROV C V10 539 CINCINNATI OH
"TEMP","ECX4CHAR","539D")
PROV D V10 539 CINCINNATI OH
"TEMP","ECX4CHAR","539E")
PROV E V10 539 CINCINNATI OH
"TEMP","ECX4CHAR","539F")
PROV F V10 539 CINCINNATI OH
"TEMP","ECX4CHAR","539G")
PROV G V10 539 CINCINNATI OH
"TEMP","ECX4CHAR","539H")
PROV H V10 539 CINCINNATI OH
"TEMP","ECX4CHAR","539I")
PROV I V10 539 CINCINNATI OH
"TEMP","ECX4CHAR","539J")
PROV J V10 539 CINCINNATI OH
"TEMP","ECX4CHAR","539K")
PROV K V10 539 CINCINNATI OH
"TEMP","ECX4CHAR","540A")
PROV A V04 540 CLARKBURG WV
"TEMP","ECX4CHAR","540B")
PROV B V04 540 CLARKBURG WV
"TEMP","ECX4CHAR","540C")
PROV C V04 540 CLARKBURG WV
"TEMP","ECX4CHAR","540D")
PROV D V04 540 CLARKBURG WV
"TEMP","ECX4CHAR","540E")
PROV E V04 540 CLARKBURG WV
"TEMP","ECX4CHAR","540F")
PROV F V04 540 CLARKBURG WV
"TEMP","ECX4CHAR","540G")
PROV G V04 540 CLARKBURG WV
"TEMP","ECX4CHAR","540H")
PROV H V04 540 CLARKBURG WV
"TEMP","ECX4CHAR","540I")
PROV I V04 540 CLARKBURG WV
"TEMP","ECX4CHAR","540J")
PROV J V04 540 CLARKBURG WV
"TEMP","ECX4CHAR","540K")
PROV K V04 540 CLARKBURG WV
"TEMP","ECX4CHAR","541A")
PROV A V10 541 CLEVELAND OH
"TEMP","ECX4CHAR","541B")
PROV B V10 541 CLEVELAND OH
"TEMP","ECX4CHAR","541C")
PROV C V10 541 CLEVELAND OH
"TEMP","ECX4CHAR","541D")
PROV D V10 541 CLEVELAND OH
"TEMP","ECX4CHAR","541E")
PROV E V10 541 CLEVELAND OH
"TEMP","ECX4CHAR","541F")
PROV F V10 541 CLEVELAND OH
"TEMP","ECX4CHAR","541G")
PROV G V10 541 CLEVELAND OH
"TEMP","ECX4CHAR","541H")
PROV H V10 541 CLEVELAND OH
"TEMP","ECX4CHAR","541I")
PROV I V10 541 CLEVELAND OH
"TEMP","ECX4CHAR","541J")
PROV J V10 541 CLEVELAND OH
"TEMP","ECX4CHAR","541K")
PROV K V10 541 CLEVELAND OH
"TEMP","ECX4CHAR","542A")
PROV A V04 542 COATESVILLE PA
"TEMP","ECX4CHAR","542B")
PROV B V04 542 COATESVILLE PA
"TEMP","ECX4CHAR","542C")
PROV C V04 542 COATESVILLE PA
"TEMP","ECX4CHAR","542D")
PROV D V04 542 COATESVILLE PA
"TEMP","ECX4CHAR","542E")
PROV E V04 542 COATESVILLE PA
"TEMP","ECX4CHAR","542F")
PROV F V04 542 COATESVILLE PA
"TEMP","ECX4CHAR","542G")
PROV G V04 542 COATESVILLE PA
"TEMP","ECX4CHAR","542H")
PROV H V04 542 COATESVILLE PA
"TEMP","ECX4CHAR","542I")
PROV I V04 542 COATESVILLE PA
"TEMP","ECX4CHAR","542J")
PROV J V04 542 COATESVILLE PA
"TEMP","ECX4CHAR","542K")
PROV K V04 542 COATESVILLE PA
"TEMP","ECX4CHAR","544A")
PROV A V07 544 COLUMBIA SC
"TEMP","ECX4CHAR","544B")
PROV B V07 544 COLUMBIA SC
"TEMP","ECX4CHAR","544C")
PROV C V07 544 COLUMBIA SC
"TEMP","ECX4CHAR","544D")
PROV D V07 544 COLUMBIA SC
"TEMP","ECX4CHAR","544E")
PROV E V07 544 COLUMBIA SC
"TEMP","ECX4CHAR","544F")
PROV F V07 544 COLUMBIA SC
"TEMP","ECX4CHAR","544G")
PROV G V07 544 COLUMBIA SC
"TEMP","ECX4CHAR","544H")
PROV H V07 544 COLUMBIA SC
"TEMP","ECX4CHAR","544I")
PROV I V07 544 COLUMBIA SC
"TEMP","ECX4CHAR","544J")
PROV J V07 544 COLUMBIA SC
"TEMP","ECX4CHAR","544K")
PROV K V07 544 COLUMBIA SC
"TEMP","ECX4CHAR","546A")
PROV A V08 546 MIAMI FL
"TEMP","ECX4CHAR","546B")
PROV B V08 546 MIAMI FL
"TEMP","ECX4CHAR","546C")
PROV C V08 546 MIAMI FL
"TEMP","ECX4CHAR","546D")
PROV D V08 546 MIAMI FL
"TEMP","ECX4CHAR","546E")
PROV E V08 546 MIAMI FL
"TEMP","ECX4CHAR","546F")
PROV F V08 546 MIAMI FL
"TEMP","ECX4CHAR","546G")
PROV G V08 546 MIAMI FL
"TEMP","ECX4CHAR","546H")
PROV H V08 546 MIAMI FL
"TEMP","ECX4CHAR","546I")
PROV I V08 546 MIAMI FL
"TEMP","ECX4CHAR","546J")
PROV J V08 546 MIAMI FL
"TEMP","ECX4CHAR","546K")
PROV K V08 546 MIAMI FL
"TEMP","ECX4CHAR","548A")
PROV A V08 548 WEST PALM BEACH FL
"TEMP","ECX4CHAR","548B")
PROV B V08 548 WEST PALM BEACH FL
"TEMP","ECX4CHAR","548C")
PROV C V08 548 WEST PALM BEACH FL
"TEMP","ECX4CHAR","548D")
PROV D V08 548 WEST PALM BEACH FL
"TEMP","ECX4CHAR","548E")
PROV E V08 548 WEST PALM BEACH FL
"TEMP","ECX4CHAR","548F")
PROV F V08 548 WEST PALM BEACH FL
"TEMP","ECX4CHAR","548G")
PROV G V08 548 WEST PALM BEACH FL
"TEMP","ECX4CHAR","548H")
PROV H V08 548 WEST PALM BEACH FL
"TEMP","ECX4CHAR","548I")
PROV I V08 548 WEST PALM BEACH FL
"TEMP","ECX4CHAR","548J")
PROV J V08 548 WEST PALM BEACH FL
"TEMP","ECX4CHAR","548K")
PROV K V08 548 WEST PALM BEACH FL
"TEMP","ECX4CHAR","549A")
PROV A V17 549 NORTH TEXAS HCS
"TEMP","ECX4CHAR","549B")
PROV B V17 549 NORTH TEXAS HCS
"TEMP","ECX4CHAR","549C")
PROV C V17 549 NORTH TEXAS HCS
"TEMP","ECX4CHAR","549D")
PROV D V17 549 NORTH TEXAS HCS
"TEMP","ECX4CHAR","549E")
PROV E V17 549 NORTH TEXAS HCS
"TEMP","ECX4CHAR","549F")
PROV F V17 549 NORTH TEXAS HCS
"TEMP","ECX4CHAR","549G")
PROV G V17 549 NORTH TEXAS HCS
"TEMP","ECX4CHAR","549H")
PROV H V17 549 NORTH TEXAS HCS
"TEMP","ECX4CHAR","549I")
PROV I V17 549 NORTH TEXAS HCS
"TEMP","ECX4CHAR","549J")
PROV J V17 549 NORTH TEXAS HCS
"TEMP","ECX4CHAR","549K")
PROV K V17 549 NORTH TEXAS HCS
"TEMP","ECX4CHAR","550A")
PROV A V11 550 DANVILLE IL
"TEMP","ECX4CHAR","550B")
PROV B V11 550 DANVILLE IL
"TEMP","ECX4CHAR","550C")
PROV C V11 550 DANVILLE IL
"TEMP","ECX4CHAR","550D")
PROV D V11 550 DANVILLE IL
"TEMP","ECX4CHAR","550E")
PROV E V11 550 DANVILLE IL
"TEMP","ECX4CHAR","550F")
PROV F V11 550 DANVILLE IL
"TEMP","ECX4CHAR","550G")
PROV G V11 550 DANVILLE IL
"TEMP","ECX4CHAR","550H")
PROV H V11 550 DANVILLE IL
"TEMP","ECX4CHAR","550I")
PROV I V11 550 DANVILLE IL
"TEMP","ECX4CHAR","550J")
PROV J V11 550 DANVILLE IL
"TEMP","ECX4CHAR","550K")
PROV K V11 550 DANVILLE IL
"TEMP","ECX4CHAR","552A")
PROV A V10 552 DAYTON OH
"TEMP","ECX4CHAR","552B")
PROV B V10 552 DAYTON OH
"TEMP","ECX4CHAR","552C")
PROV C V10 552 DAYTON OH
"TEMP","ECX4CHAR","552D")
PROV D V10 552 DAYTON OH
"TEMP","ECX4CHAR","552E")
PROV E V10 552 DAYTON OH
"TEMP","ECX4CHAR","552F")
PROV F V10 552 DAYTON OH
"TEMP","ECX4CHAR","552G")
PROV G V10 552 DAYTON OH
"TEMP","ECX4CHAR","552H")
PROV H V10 552 DAYTON OH
"TEMP","ECX4CHAR","552I")
PROV I V10 552 DAYTON OH
"TEMP","ECX4CHAR","552J")
PROV J V10 552 DAYTON OH
"TEMP","ECX4CHAR","552K")
PROV K V10 552 DAYTON OH
"TEMP","ECX4CHAR","553A")
PROV A V11 553 JOHN D. DINGELL VAMC
"TEMP","ECX4CHAR","553B")
PROV B V11 553 JOHN D. DINGELL VAMC
"TEMP","ECX4CHAR","553C")
PROV C V11 553 JOHN D. DINGELL VAMC
"TEMP","ECX4CHAR","553D")
PROV D V11 553 JOHN D. DINGELL VAMC
"TEMP","ECX4CHAR","553E")
PROV E V11 553 JOHN D. DINGELL VAMC
"TEMP","ECX4CHAR","553F")
PROV F V11 553 JOHN D. DINGELL VAMC
"TEMP","ECX4CHAR","553G")
PROV G V11 553 JOHN D. DINGELL VAMC
"TEMP","ECX4CHAR","553H")
PROV H V11 553 JOHN D. DINGELL VAMC
"TEMP","ECX4CHAR","553I")
PROV I V11 553 JOHN D. DINGELL VAMC
"TEMP","ECX4CHAR","553J")
PROV J V11 553 JOHN D. DINGELL VAMC
"TEMP","ECX4CHAR","553K")
PROV K V11 553 JOHN D. DINGELL VAMC
"TEMP","ECX4CHAR","554A")
PROV A V19 554 DENVER CO
"TEMP","ECX4CHAR","554B")
PROV B V19 554 DENVER CO
"TEMP","ECX4CHAR","554C")
PROV C V19 554 DENVER CO
"TEMP","ECX4CHAR","554D")
PROV D V19 554 DENVER CO
"TEMP","ECX4CHAR","554E")
PROV E V19 554 DENVER CO
"TEMP","ECX4CHAR","554F")
PROV F V19 554 DENVER CO
"TEMP","ECX4CHAR","554G")
PROV G V19 554 DENVER CO
"TEMP","ECX4CHAR","554H")
PROV H V19 554 DENVER CO
"TEMP","ECX4CHAR","554I")
PROV I V19 554 DENVER CO
"TEMP","ECX4CHAR","554J")
PROV J V19 554 DENVER CO
"TEMP","ECX4CHAR","554K")
PROV K V19 554 DENVER CO
"TEMP","ECX4CHAR","556A")
PROV A V12 556 NORTH CHICAGO
"TEMP","ECX4CHAR","556B")
PROV B V12 556 NORTH CHICAGO
"TEMP","ECX4CHAR","556C")
PROV C V12 556 NORTH CHICAGO
"TEMP","ECX4CHAR","556D")
PROV D V12 556 NORTH CHICAGO
"TEMP","ECX4CHAR","556E")
PROV E V12 556 NORTH CHICAGO
"TEMP","ECX4CHAR","556F")
PROV F V12 556 NORTH CHICAGO
"TEMP","ECX4CHAR","556G")
PROV G V12 556 NORTH CHICAGO
"TEMP","ECX4CHAR","556H")
PROV H V12 556 NORTH CHICAGO
"TEMP","ECX4CHAR","556I")
PROV I V12 556 NORTH CHICAGO
"TEMP","ECX4CHAR","556J")
PROV J V12 556 NORTH CHICAGO
"TEMP","ECX4CHAR","556K")
PROV K V12 556 NORTH CHICAGO
"TEMP","ECX4CHAR","557A")
PROV A V07 557 DUBLIN GA
"TEMP","ECX4CHAR","557B")
PROV B V07 557 DUBLIN GA
"TEMP","ECX4CHAR","557C")
PROV C V07 557 DUBLIN GA
"TEMP","ECX4CHAR","557D")
PROV D V07 557 DUBLIN GA
"TEMP","ECX4CHAR","557E")
PROV E V07 557 DUBLIN GA
"TEMP","ECX4CHAR","557F")
PROV F V07 557 DUBLIN GA
"TEMP","ECX4CHAR","557G")
PROV G V07 557 DUBLIN GA
"TEMP","ECX4CHAR","557H")
PROV H V07 557 DUBLIN GA
"TEMP","ECX4CHAR","557I")
PROV I V07 557 DUBLIN GA
"TEMP","ECX4CHAR","557J")
PROV J V07 557 DUBLIN GA
"TEMP","ECX4CHAR","557K")
PROV K V07 557 DUBLIN GA
"TEMP","ECX4CHAR","558A")
PROV A V06 558 DURHAM NC
"TEMP","ECX4CHAR","558B")
PROV B V06 558 DURHAM NC
"TEMP","ECX4CHAR","558C")
PROV C V06 558 DURHAM NC
"TEMP","ECX4CHAR","558D")
PROV D V06 558 DURHAM NC
"TEMP","ECX4CHAR","558E")
PROV E V06 558 DURHAM NC
"TEMP","ECX4CHAR","558F")
PROV F V06 558 DURHAM NC
"TEMP","ECX4CHAR","558G")
PROV G V06 558 DURHAM NC
"TEMP","ECX4CHAR","558H")
PROV H V06 558 DURHAM NC
"TEMP","ECX4CHAR","558I")
PROV I V06 558 DURHAM NC
"TEMP","ECX4CHAR","558J")
PROV J V06 558 DURHAM NC
"TEMP","ECX4CHAR","558K")
PROV K V06 558 DURHAM NC
"TEMP","ECX4CHAR","561A")
PROV A V03 561 NEW JERSEY HCS
"TEMP","ECX4CHAR","561B")
PROV B V03 561 NEW JERSEY HCS
"TEMP","ECX4CHAR","561C")
PROV C V03 561 NEW JERSEY HCS
"TEMP","ECX4CHAR","561D")
PROV D V03 561 NEW JERSEY HCS
"TEMP","ECX4CHAR","561E")
PROV E V03 561 NEW JERSEY HCS
"TEMP","ECX4CHAR","561F")
PROV F V03 561 NEW JERSEY HCS
"TEMP","ECX4CHAR","561G")
PROV G V03 561 NEW JERSEY HCS
"TEMP","ECX4CHAR","561H")
PROV H V03 561 NEW JERSEY HCS
"TEMP","ECX4CHAR","561I")
PROV I V03 561 NEW JERSEY HCS
"TEMP","ECX4CHAR","561J")
PROV J V03 561 NEW JERSEY HCS
"TEMP","ECX4CHAR","561K")
PROV K V03 561 NEW JERSEY HCS
"TEMP","ECX4CHAR","562A")
PROV A V04 562 ERIE PA
"TEMP","ECX4CHAR","562B")
PROV B V04 562 ERIE PA
"TEMP","ECX4CHAR","562C")
PROV C V04 562 ERIE PA
"TEMP","ECX4CHAR","562D")
PROV D V04 562 ERIE PA
"TEMP","ECX4CHAR","562E")
PROV E V04 562 ERIE PA
"TEMP","ECX4CHAR","562F")
PROV F V04 562 ERIE PA
"TEMP","ECX4CHAR","562G")
PROV G V04 562 ERIE PA
"TEMP","ECX4CHAR","562H")
PROV H V04 562 ERIE PA
"TEMP","ECX4CHAR","562I")
PROV I V04 562 ERIE PA
"TEMP","ECX4CHAR","562J")
PROV J V04 562 ERIE PA
"TEMP","ECX4CHAR","562K")
PROV K V04 562 ERIE PA
"TEMP","ECX4CHAR","564A")
PROV A V16 564 FAYETTEVILLE AR
"TEMP","ECX4CHAR","564B")
PROV B V16 564 FAYETTEVILLE AR
"TEMP","ECX4CHAR","564C")
PROV C V16 564 FAYETTEVILLE AR
"TEMP","ECX4CHAR","564D")
PROV D V16 564 FAYETTEVILLE AR
"TEMP","ECX4CHAR","564E")
PROV E V16 564 FAYETTEVILLE AR
"TEMP","ECX4CHAR","564F")
PROV F V16 564 FAYETTEVILLE AR
"TEMP","ECX4CHAR","564G")
PROV G V16 564 FAYETTEVILLE AR
"TEMP","ECX4CHAR","564H")
PROV H V16 564 FAYETTEVILLE AR
"TEMP","ECX4CHAR","564I")
PROV I V16 564 FAYETTEVILLE AR
"TEMP","ECX4CHAR","564J")
PROV J V16 564 FAYETTEVILLE AR
"TEMP","ECX4CHAR","564K")
PROV K V16 564 FAYETTEVILLE AR
"TEMP","ECX4CHAR","565A")
PROV A V06 565 FAYETTEVILL NC
"TEMP","ECX4CHAR","565B")
PROV B V06 565 FAYETTEVILL NC
"TEMP","ECX4CHAR","565C")
PROV C V06 565 FAYETTEVILL NC
"TEMP","ECX4CHAR","565D")
PROV D V06 565 FAYETTEVILL NC
"TEMP","ECX4CHAR","565E")
PROV E V06 565 FAYETTEVILL NC
"TEMP","ECX4CHAR","565F")
PROV F V06 565 FAYETTEVILL NC
"TEMP","ECX4CHAR","565G")
PROV G V06 565 FAYETTEVILL NC
"TEMP","ECX4CHAR","565H")
PROV H V06 565 FAYETTEVILL NC
"TEMP","ECX4CHAR","565I")
PROV I V06 565 FAYETTEVILL NC
"TEMP","ECX4CHAR","565J")
PROV J V06 565 FAYETTEVILL NC
"TEMP","ECX4CHAR","565K")
PROV K V06 565 FAYETTEVILL NC
"TEMP","ECX4CHAR","568A")
PROV A V23 568 BLACK HILLS HCS
"TEMP","ECX4CHAR","568B")
PROV B V23 568 BLACK HILLS HCS
"TEMP","ECX4CHAR","568C")
PROV C V23 568 BLACK HILLS HCS
"TEMP","ECX4CHAR","568D")
PROV D V23 568 BLACK HILLS HCS
"TEMP","ECX4CHAR","568E")
PROV E V23 568 BLACK HILLS HCS
"TEMP","ECX4CHAR","568F")
PROV F V23 568 BLACK HILLS HCS
"TEMP","ECX4CHAR","568G")
PROV G V23 568 BLACK HILLS HCS
"TEMP","ECX4CHAR","568H")
PROV H V23 568 BLACK HILLS HCS
"TEMP","ECX4CHAR","568I")
PROV I V23 568 BLACK HILLS HCS
"TEMP","ECX4CHAR","568J")
PROV J V23 568 BLACK HILLS HCS
"TEMP","ECX4CHAR","568K")
PROV K V23 568 BLACK HILLS HCS
"TEMP","ECX4CHAR","570A")
PROV A V21 570 FRESNO CA
"TEMP","ECX4CHAR","570B")
PROV B V21 570 FRESNO CA
"TEMP","ECX4CHAR","570C")
PROV C V21 570 FRESNO CA
"TEMP","ECX4CHAR","570D")
PROV D V21 570 FRESNO CA
"TEMP","ECX4CHAR","570E")
PROV E V21 570 FRESNO CA
"TEMP","ECX4CHAR","570F")
PROV F V21 570 FRESNO CA
"TEMP","ECX4CHAR","570G")
PROV G V21 570 FRESNO CA
"TEMP","ECX4CHAR","570H")
PROV H V21 570 FRESNO CA
"TEMP","ECX4CHAR","570I")
PROV I V21 570 FRESNO CA
"TEMP","ECX4CHAR","570J")
PROV J V21 570 FRESNO CA
"TEMP","ECX4CHAR","570K")
PROV K V21 570 FRESNO CA
"TEMP","ECX4CHAR","573A")
PROV A V08 573 N. FLA/S. GA HCS
"TEMP","ECX4CHAR","573B")
PROV B V08 573 N. FLA/S. GA HCS
"TEMP","ECX4CHAR","573C")
PROV C V08 573 N. FLA/S. GA HCS
"TEMP","ECX4CHAR","573D")
PROV D V08 573 N. FLA/S. GA HCS
"TEMP","ECX4CHAR","573E")
PROV E V08 573 N. FLA/S. GA HCS
"TEMP","ECX4CHAR","573F")
PROV F V08 573 N. FLA/S. GA HCS
"TEMP","ECX4CHAR","573G")
PROV G V08 573 N. FLA/S. GA HCS
"TEMP","ECX4CHAR","573H")
PROV H V08 573 N. FLA/S. GA HCS
"TEMP","ECX4CHAR","573I")
PROV I V08 573 N. FLA/S. GA HCS
"TEMP","ECX4CHAR","573J")
PROV J V08 573 N. FLA/S. GA HCS
"TEMP","ECX4CHAR","573K")
PROV K V08 573 N. FLA/S. GA HCS
"TEMP","ECX4CHAR","573L")
PROV L V08 573 N.FLA/S.GA HCS
"TEMP","ECX4CHAR","573M")
PROV M V08 573 N.FLA/S.GA HCS
"TEMP","ECX4CHAR","573N")
PROV N V08 573 N.FLA/S.GA HCS
"TEMP","ECX4CHAR","573O")
PROV O V08 573 N.FLA/S.GA HCS
"TEMP","ECX4CHAR","573P")
PROV P V08 573 N.FLA/S.GA HCS
"TEMP","ECX4CHAR","573Q")
PROV Q V08 573 N.FLA/S.GA HCS
"TEMP","ECX4CHAR","573R")
PROV R V08 573 N.FLA/S.GA HCS
"TEMP","ECX4CHAR","573S")
PROV S V08 573 N.FLA/S.GA HCS
"TEMP","ECX4CHAR","573T")
PROV T V08 573 N.FLA/S.GA HCS
"TEMP","ECX4CHAR","573U")
PROV U V08 573 N.FLA/S.GA HCS
"TEMP","ECX4CHAR","573V")
PROV V V08 573 N.FLA/S.GA HCS
"TEMP","ECX4CHAR","573W")
PROV W V08 573 N.FLA/S.GA HCS
"TEMP","ECX4CHAR","573X")
PROV X V08 573 N.FLA/S.GA HCS
"TEMP","ECX4CHAR","573Y")
PROV Y V08 573 N.FLA/S.GA HCS
"TEMP","ECX4CHAR","573Z")
PROV Z V08 573 N.FLA/S.GA HCS
"TEMP","ECX4CHAR","575A")
PROV A V19 575 GRAND JUNCTION CO
"TEMP","ECX4CHAR","575B")
PROV B V19 575 GRAND JUNCTION CO
"TEMP","ECX4CHAR","575C")
PROV C V19 575 GRAND JUNCTION CO
"TEMP","ECX4CHAR","575D")
PROV D V19 575 GRAND JUNCTION CO
"TEMP","ECX4CHAR","575E")
PROV E V19 575 GRAND JUNCTION CO
"TEMP","ECX4CHAR","575F")
PROV F V19 575 GRAND JUNCTION CO
"TEMP","ECX4CHAR","575G")
PROV G V19 575 GRAND JUNCTION CO
"TEMP","ECX4CHAR","575H")
PROV H V19 575 GRAND JUNCTION CO
"TEMP","ECX4CHAR","575I")
PROV I V19 575 GRAND JUNCTION CO
"TEMP","ECX4CHAR","575J")
PROV J V19 575 GRAND JUNCTION CO
"TEMP","ECX4CHAR","575K")
PROV K V19 575 GRAND JUNCTION CO
"TEMP","ECX4CHAR","578A")
PROV A V12 578 HINES IL
"TEMP","ECX4CHAR","578B")
PROV B V12 578 HINES IL
"TEMP","ECX4CHAR","578C")
PROV C V12 578 HINES IL
"TEMP","ECX4CHAR","578D")
PROV D V12 578 HINES IL
"TEMP","ECX4CHAR","578E")
PROV E V12 578 HINES IL
"TEMP","ECX4CHAR","578F")
PROV F V12 578 HINES IL
"TEMP","ECX4CHAR","578G")
PROV G V12 578 HINES IL
"TEMP","ECX4CHAR","578H")
PROV H V12 578 HINES IL
"TEMP","ECX4CHAR","578I")
PROV I V12 578 HINES IL
"TEMP","ECX4CHAR","578J")
PROV J V12 578 HINES IL
"TEMP","ECX4CHAR","578K")
PROV K V12 578 HINES IL
"TEMP","ECX4CHAR","580A")
PROV A V16 580 HOUSTON TX
"TEMP","ECX4CHAR","580B")
PROV B V16 580 HOUSTON TX
"TEMP","ECX4CHAR","580C")
PROV C V16 580 HOUSTON TX
"TEMP","ECX4CHAR","580D")
PROV D V16 580 HOUSTON TX
"TEMP","ECX4CHAR","580E")
PROV E V16 580 HOUSTON TX
"TEMP","ECX4CHAR","580F")
PROV F V16 580 HOUSTON TX
"TEMP","ECX4CHAR","580G")
PROV G V16 580 HOUSTON TX
"TEMP","ECX4CHAR","580H")
PROV H V16 580 HOUSTON TX
"TEMP","ECX4CHAR","580I")
PROV I V16 580 HOUSTON TX
"TEMP","ECX4CHAR","580J")
PROV J V16 580 HOUSTON TX
"TEMP","ECX4CHAR","580K")
PROV K V16 580 HOUSTON TX
"TEMP","ECX4CHAR","581A")
PROV A V09 581 HUNTINGTON WV
"TEMP","ECX4CHAR","581B")
PROV B V09 581 HUNTINGTON WV
"TEMP","ECX4CHAR","581C")
PROV C V09 581 HUNTINGTON WV
"TEMP","ECX4CHAR","581D")
PROV D V09 581 HUNTINGTON WV
"TEMP","ECX4CHAR","581E")
PROV E V09 581 HUNTINGTON WV
"TEMP","ECX4CHAR","581F")
PROV F V09 581 HUNTINGTON WV
"TEMP","ECX4CHAR","581G")
PROV G V09 581 HUNTINGTON WV
"TEMP","ECX4CHAR","581H")
PROV H V09 581 HUNTINGTON WV
"TEMP","ECX4CHAR","581I")
PROV I V09 581 HUNTINGTON WV
"TEMP","ECX4CHAR","581J")
PROV J V09 581 HUNTINGTON WV
"TEMP","ECX4CHAR","581K")
PROV K V09 581 HUNTINGTON WV
"TEMP","ECX4CHAR","583A")
PROV A V11 583 INDIANAPOLIS IN
"TEMP","ECX4CHAR","583B")
PROV B V11 583 INDIANAPOLIS IN
"TEMP","ECX4CHAR","583C")
PROV C V11 583 INDIANAPOLIS IN
"TEMP","ECX4CHAR","583D")
PROV D V11 583 INDIANAPOLIS IN
"TEMP","ECX4CHAR","583E")
PROV E V11 583 INDIANAPOLIS IN
"TEMP","ECX4CHAR","583F")
PROV F V11 583 INDIANAPOLIS IN
"TEMP","ECX4CHAR","583G")
PROV G V11 583 INDIANAPOLIS IN
"TEMP","ECX4CHAR","583H")
PROV H V11 583 INDIANAPOLIS IN
"TEMP","ECX4CHAR","583I")
PROV I V11 583 INDIANAPOLIS IN
"TEMP","ECX4CHAR","583J")
PROV J V11 583 INDIANAPOLIS IN
"TEMP","ECX4CHAR","583K")
PROV K V11 583 INDIANAPOLIS IN
"TEMP","ECX4CHAR","585A")
PROV A V12 585 IRON MOUNTAIN MI
"TEMP","ECX4CHAR","585B")
PROV B V12 585 IRON MOUNTAIN MI
"TEMP","ECX4CHAR","585C")
PROV C V12 585 IRON MOUNTAIN MI
"TEMP","ECX4CHAR","585D")
PROV D V12 585 IRON MOUNTAIN MI
"TEMP","ECX4CHAR","585E")
PROV E V12 585 IRON MOUNTAIN MI
"TEMP","ECX4CHAR","585F")
PROV F V12 585 IRON MOUNTAIN MI
"TEMP","ECX4CHAR","585G")
PROV G V12 585 IRON MOUNTAIN MI
"TEMP","ECX4CHAR","585H")
PROV H V12 585 IRON MOUNTAIN MI
"TEMP","ECX4CHAR","585I")
PROV I V12 585 IRON MOUNTAIN MI
"TEMP","ECX4CHAR","585J")
PROV J V12 585 IRON MOUNTAIN MI
"TEMP","ECX4CHAR","585K")
PROV K V12 585 IRON MOUNTAIN MI
"TEMP","ECX4CHAR","586A")
PROV A V16 586 JACKSON MS
"TEMP","ECX4CHAR","586B")
PROV B V16 586 JACKSON MS
"TEMP","ECX4CHAR","586C")
PROV C V16 586 JACKSON MS
"TEMP","ECX4CHAR","586D")
PROV D V16 586 JACKSON MS
"TEMP","ECX4CHAR","586E")
PROV E V16 586 JACKSON MS
"TEMP","ECX4CHAR","586F")
PROV F V16 586 JACKSON MS
"TEMP","ECX4CHAR","586G")
PROV G V16 586 JACKSON MS
"TEMP","ECX4CHAR","586H")
PROV H V16 586 JACKSON MS
"TEMP","ECX4CHAR","586I")
PROV I V16 586 JACKSON MS
"TEMP","ECX4CHAR","586J")
PROV J V16 586 JACKSON MS
"TEMP","ECX4CHAR","586K")
PROV K V16 586 JACKSON MS
"TEMP","ECX4CHAR","589A")
PROV A V15 589 KANSAS CITY MO
"TEMP","ECX4CHAR","589B")
PROV B V15 589 KANSAS CITY MO
"TEMP","ECX4CHAR","589C")
PROV C V15 589 KANSAS CITY MO
"TEMP","ECX4CHAR","589D")
PROV D V15 589 KANSAS CITY MO
"TEMP","ECX4CHAR","589E")
PROV E V15 589 KANSAS CITY MO
"TEMP","ECX4CHAR","589F")
PROV F V15 589 KANSAS CITY MO
"TEMP","ECX4CHAR","589G")
PROV G V15 589 KANSAS CITY MO
"TEMP","ECX4CHAR","589H")
PROV H V15 589 KANSAS CITY MO
"TEMP","ECX4CHAR","589I")
PROV I V15 589 KANSAS CITY MO
"TEMP","ECX4CHAR","589J")
PROV J V15 589 KANSAS CITY MO
"TEMP","ECX4CHAR","589K")
PROV K V15 589 KANSAS CITY MO
"TEMP","ECX4CHAR","590A")
PROV A V06 590 HAMPTON VA
"TEMP","ECX4CHAR","590B")
PROV B V06 590 HAMPTON VA
"TEMP","ECX4CHAR","590C")
PROV C V06 590 HAMPTON VA
"TEMP","ECX4CHAR","590D")
PROV D V06 590 HAMPTON VA
"TEMP","ECX4CHAR","590E")
PROV E V06 590 HAMPTON VA
"TEMP","ECX4CHAR","590F")
PROV F V06 590 HAMPTON VA
"TEMP","ECX4CHAR","590G")
PROV G V06 590 HAMPTON VA
"TEMP","ECX4CHAR","590H")
PROV H V06 590 HAMPTON VA
"TEMP","ECX4CHAR","590I")
PROV I V06 590 HAMPTON VA
"TEMP","ECX4CHAR","590J")
PROV J V06 590 HAMPTON VA
"TEMP","ECX4CHAR","590K")
PROV K V06 590 HAMPTON VA
"TEMP","ECX4CHAR","593A")
PROV A V22 593 LAS VEGAS NV
"TEMP","ECX4CHAR","593B")
PROV B V22 593 LAS VEGAS NV
"TEMP","ECX4CHAR","593C")
PROV C V22 593 LAS VEGAS NV
"TEMP","ECX4CHAR","593D")
PROV D V22 593 LAS VEGAS NV
"TEMP","ECX4CHAR","593E")
PROV E V22 593 LAS VEGAS NV
"TEMP","ECX4CHAR","593F")
PROV F V22 593 LAS VEGAS NV
"TEMP","ECX4CHAR","593G")
PROV G V22 593 LAS VEGAS NV
"TEMP","ECX4CHAR","593H")
PROV H V22 593 LAS VEGAS NV
"TEMP","ECX4CHAR","593I")
PROV I V22 593 LAS VEGAS NV
"TEMP","ECX4CHAR","593J")
PROV J V22 593 LAS VEGAS NV
"TEMP","ECX4CHAR","593K")
PROV K V22 593 LAS VEGAS NV
"TEMP","ECX4CHAR","595A")
PROV A V04 595 LEBANON PA
"TEMP","ECX4CHAR","595B")
PROV B V04 595 LEBANON PA
"TEMP","ECX4CHAR","595C")
PROV C V04 595 LEBANON PA
"TEMP","ECX4CHAR","595D")
PROV D V04 595 LEBANON PA
"TEMP","ECX4CHAR","595E")
PROV E V04 595 LEBANON PA
"TEMP","ECX4CHAR","595F")
PROV F V04 595 LEBANON PA
"TEMP","ECX4CHAR","595G")
PROV G V04 595 LEBANON PA
"TEMP","ECX4CHAR","595H")
PROV H V04 595 LEBANON PA
"TEMP","ECX4CHAR","595I")
PROV I V04 595 LEBANON PA
"TEMP","ECX4CHAR","595J")
PROV J V04 595 LEBANON PA
"TEMP","ECX4CHAR","595K")
PROV K V04 595 LEBANON PA
"TEMP","ECX4CHAR","596A")
PROV A V09 596 LEXINGTON KY
"TEMP","ECX4CHAR","596B")
PROV B V09 596 LEXINGTON KY
"TEMP","ECX4CHAR","596C")
PROV C V09 596 LEXINGTON KY
"TEMP","ECX4CHAR","596D")
PROV D V09 596 LEXINGTON KY
"TEMP","ECX4CHAR","596E")
PROV E V09 596 LEXINGTON KY
"TEMP","ECX4CHAR","596F")
PROV F V09 596 LEXINGTON KY
"TEMP","ECX4CHAR","596G")
PROV G V09 596 LEXINGTON KY
"TEMP","ECX4CHAR","596H")
PROV H V09 596 LEXINGTON KY
"TEMP","ECX4CHAR","596I")
PROV I V09 596 LEXINGTON KY
"TEMP","ECX4CHAR","596J")
PROV J V09 596 LEXINGTON KY
"TEMP","ECX4CHAR","596K")
PROV K V09 596 LEXINGTON KY
"TEMP","ECX4CHAR","598A")
PROV A V16 598 CENTRAL ARKANSAS VHS
"TEMP","ECX4CHAR","598B")
PROV B V16 598 CENTRAL ARKANSAS VHS
"TEMP","ECX4CHAR","598C")
PROV C V16 598 CENTRAL ARKANSAS VHS
"TEMP","ECX4CHAR","598D")
PROV D V16 598 CENTRAL ARKANSAS VHS
"TEMP","ECX4CHAR","598E")
PROV E V16 598 CENTRAL ARKANSAS VHS
"TEMP","ECX4CHAR","598F")
PROV F V16 598 CENTRAL ARKANSAS VHS
"TEMP","ECX4CHAR","598G")
PROV G V16 598 CENTRAL ARKANSAS VHS
"TEMP","ECX4CHAR","598H")
PROV H V16 598 CENTRAL ARKANSAS VHS
"TEMP","ECX4CHAR","598I")
PROV I V16 598 CENTRAL ARKANSAS VHS
"TEMP","ECX4CHAR","598J")
PROV J V16 598 CENTRAL ARKANSAS VHS
"TEMP","ECX4CHAR","598K")
PROV K V16 598 CENTRAL ARKANSAS VHS
"TEMP","ECX4CHAR","600A")
PROV A V22 600 LONG BEACH CA
"TEMP","ECX4CHAR","600B")
PROV B V22 600 LONG BEACH CA
"TEMP","ECX4CHAR","600C")
PROV C V22 600 LONG BEACH CA
"TEMP","ECX4CHAR","600D")
PROV D V22 600 LONG BEACH CA
"TEMP","ECX4CHAR","600E")
PROV E V22 600 LONG BEACH CA
"TEMP","ECX4CHAR","600F")
PROV F V22 600 LONG BEACH CA
"TEMP","ECX4CHAR","600G")
PROV G V22 600 LONG BEACH CA
"TEMP","ECX4CHAR","600H")
PROV H V22 600 LONG BEACH CA
"TEMP","ECX4CHAR","600I")
PROV I V22 600 LONG BEACH CA
"TEMP","ECX4CHAR","600J")
PROV J V22 600 LONG BEACH CA
"TEMP","ECX4CHAR","600K")
PROV K V22 600 LONG BEACH CA
"TEMP","ECX4CHAR","603A")
PROV A V09 603 LOUISVILLE KY
"TEMP","ECX4CHAR","603B")
PROV B V09 603 LOUISVILLE KY
"TEMP","ECX4CHAR","603C")
PROV C V09 603 LOUISVILLE KY
"TEMP","ECX4CHAR","603D")
PROV D V09 603 LOUISVILLE KY
"TEMP","ECX4CHAR","603E")
PROV E V09 603 LOUISVILLE KY
"TEMP","ECX4CHAR","603F")
PROV F V09 603 LOUISVILLE KY
"TEMP","ECX4CHAR","603G")
PROV G V09 603 LOUISVILLE KY
"TEMP","ECX4CHAR","603H")
PROV H V09 603 LOUISVILLE KY
"TEMP","ECX4CHAR","603I")
PROV I V09 603 LOUISVILLE KY
"TEMP","ECX4CHAR","603J")
PROV J V09 603 LOUISVILLE KY
"TEMP","ECX4CHAR","603K")
PROV K V09 603 LOUISVILLE KY
"TEMP","ECX4CHAR","605A")
PROV A V22 605 LOMA LINDA CA
"TEMP","ECX4CHAR","605B")
PROV B V22 605 LOMA LINDA CA
"TEMP","ECX4CHAR","605C")
PROV C V22 605 LOMA LINDA CA
"TEMP","ECX4CHAR","605D")
PROV D V22 605 LOMA LINDA CA
"TEMP","ECX4CHAR","605E")
PROV E V22 605 LOMA LINDA CA
"TEMP","ECX4CHAR","605F")
PROV F V22 605 LOMA LINDA CA
"TEMP","ECX4CHAR","605G")
PROV G V22 605 LOMA LINDA CA
"TEMP","ECX4CHAR","605H")
PROV H V22 605 LOMA LINDA CA
"TEMP","ECX4CHAR","605I")
PROV I V22 605 LOMA LINDA CA
"TEMP","ECX4CHAR","605J")
PROV J V22 605 LOMA LINDA CA
"TEMP","ECX4CHAR","605K")
PROV K V22 605 LOMA LINDA CA
"TEMP","ECX4CHAR","607A")
PROV A V12 607 MADISON WI
"TEMP","ECX4CHAR","607B")
PROV B V12 607 MADISON WI
"TEMP","ECX4CHAR","607C")
PROV C V12 607 MADISON WI
"TEMP","ECX4CHAR","607D")
PROV D V12 607 MADISON WI
"TEMP","ECX4CHAR","607E")
PROV E V12 607 MADISON WI
"TEMP","ECX4CHAR","607F")
PROV F V12 607 MADISON WI
"TEMP","ECX4CHAR","607G")
PROV G V12 607 MADISON WI
"TEMP","ECX4CHAR","607H")
PROV H V12 607 MADISON WI
"TEMP","ECX4CHAR","607I")
PROV I V12 607 MADISON WI
"TEMP","ECX4CHAR","607J")
PROV J V12 607 MADISON WI
"TEMP","ECX4CHAR","607K")
PROV K V12 607 MADISON WI
"TEMP","ECX4CHAR","608A")
PROV A V01 608 MANCHESTER NH
"TEMP","ECX4CHAR","608B")
PROV B V01 608 MANCHESTER NH
"TEMP","ECX4CHAR","608C")
PROV C V01 608 MANCHESTER NH
"TEMP","ECX4CHAR","608D")
PROV D V01 608 MANCHESTER NH
"TEMP","ECX4CHAR","608E")
PROV E V01 608 MANCHESTER NH
"TEMP","ECX4CHAR","608F")
PROV F V01 608 MANCHESTER NH
"TEMP","ECX4CHAR","608G")
PROV G V01 608 MANCHESTER NH
"TEMP","ECX4CHAR","608H")
PROV H V01 608 MANCHESTER NH
"TEMP","ECX4CHAR","608I")
PROV I V01 608 MANCHESTER NH
"TEMP","ECX4CHAR","608J")
PROV J V01 608 MANCHESTER NH
"TEMP","ECX4CHAR","608K")
PROV K V01 608 MANCHESTER NH
"TEMP","ECX4CHAR","610A")
PROV A V11 610 NORTHERN INDIANA HCS
"TEMP","ECX4CHAR","610B")
PROV B V11 610 NORTHERN INDIANA HCS
"TEMP","ECX4CHAR","610C")
PROV C V11 610 NORTHERN INDIANA HCS
"TEMP","ECX4CHAR","610D")
PROV D V11 610 NORTHERN INDIANA HCS
"TEMP","ECX4CHAR","610E")
PROV E V11 610 NORTHERN INDIANA HCS
"TEMP","ECX4CHAR","610F")
PROV F V11 610 NORTHERN INDIANA HCS
"TEMP","ECX4CHAR","610G")
PROV G V11 610 NORTHERN INDIANA HCS
"TEMP","ECX4CHAR","610H")
PROV H V11 610 NORTHERN INDIANA HCS
"TEMP","ECX4CHAR","610I")
PROV I V11 610 NORTHERN INDIANA HCS
"TEMP","ECX4CHAR","610J")
PROV J V11 610 NORTHERN INDIANA HCS
"TEMP","ECX4CHAR","610K")
PROV K V11 610 NORTHERN INDIANA HCS
"TEMP","ECX4CHAR","612A")
PROV A V21 612 MARTINEZ CA
"TEMP","ECX4CHAR","612B")
PROV B V21 612 MARTINEZ CA
"TEMP","ECX4CHAR","612C")
PROV C V21 612 MARTINEZ CA
"TEMP","ECX4CHAR","612D")
PROV D V21 612 MARTINEZ CA
"TEMP","ECX4CHAR","612E")
PROV E V21 612 MARTINEZ CA
"TEMP","ECX4CHAR","612F")
PROV F V21 612 MARTINEZ CA
"TEMP","ECX4CHAR","612G")
PROV G V21 612 MARTINEZ CA
"TEMP","ECX4CHAR","612H")
PROV H V21 612 MARTINEZ CA
"TEMP","ECX4CHAR","612I")
PROV I V21 612 MARTINEZ CA
"TEMP","ECX4CHAR","612J")
PROV J V21 612 MARTINEZ CA
"TEMP","ECX4CHAR","612K")
PROV K V21 612 MARTINEZ CA
"TEMP","ECX4CHAR","613A")
PROV A V05 613 MARTINSBURG WV
"TEMP","ECX4CHAR","613B")
PROV B V05 613 MARTINSBURG WV
"TEMP","ECX4CHAR","613C")
PROV C V05 613 MARTINSBURG WV
"TEMP","ECX4CHAR","613D")
PROV D V05 613 MARTINSBURG WV
"TEMP","ECX4CHAR","613E")
PROV E V05 613 MARTINSBURG WV
"TEMP","ECX4CHAR","613F")
PROV F V05 613 MARTINSBURG WV
"TEMP","ECX4CHAR","613G")
PROV G V05 613 MARTINSBURG WV
"TEMP","ECX4CHAR","613H")
PROV H V05 613 MARTINSBURG WV
"TEMP","ECX4CHAR","613I")
PROV I V05 613 MARTINSBURG WV
"TEMP","ECX4CHAR","613J")
PROV J V05 613 MARTINSBURG WV
"TEMP","ECX4CHAR","613K")
PROV K V05 613 MARTINSBURG WV
"TEMP","ECX4CHAR","614A")
PROV A V09 614 MEMPHIS TN
"TEMP","ECX4CHAR","614B")
PROV B V09 614 MEMPHIS TN
"TEMP","ECX4CHAR","614C")
PROV C V09 614 MEMPHIS TN
"TEMP","ECX4CHAR","614D")
PROV D V09 614 MEMPHIS TN
"TEMP","ECX4CHAR","614E")
PROV E V09 614 MEMPHIS TN
"TEMP","ECX4CHAR","614F")
PROV F V09 614 MEMPHIS TN
"TEMP","ECX4CHAR","614G")
PROV G V09 614 MEMPHIS TN
"TEMP","ECX4CHAR","614H")
PROV H V09 614 MEMPHIS TN
"TEMP","ECX4CHAR","614I")
PROV I V09 614 MEMPHIS TN
"TEMP","ECX4CHAR","614J")
PROV J V09 614 MEMPHIS TN
"TEMP","ECX4CHAR","614K")
PROV K V09 614 MEMPHIS TN
"TEMP","ECX4CHAR","614L")
PROV L V09 614 MEMPHIS TN
"TEMP","ECX4CHAR","614M")
PROV M V09 614 MEMPHIS TN
"TEMP","ECX4CHAR","614N")
PROV N V09 614 MEMPHIS TN
"TEMP","ECX4CHAR","614O")
PROV O V09 614 MEMPHIS TN
"TEMP","ECX4CHAR","614P")
PROV P V09 614 MEMPHIS TN
"TEMP","ECX4CHAR","614Q")
PROV Q V09 614 MEMPHIS TN
"TEMP","ECX4CHAR","614R")
PROV R V09 614 MEMPHIS TN
"TEMP","ECX4CHAR","614S")
PROV S V09 614 MEMPHIS TN
"TEMP","ECX4CHAR","614T")
PROV T V09 614 MEMPHIS TN
"TEMP","ECX4CHAR","618A")
PROV A V23 618 MINNEAPOLIS MN
"TEMP","ECX4CHAR","618B")
PROV B V23 618 MINNEAPOLIS MN
"TEMP","ECX4CHAR","618C")
PROV C V23 618 MINNEAPOLIS MN
"TEMP","ECX4CHAR","618D")
PROV D V23 618 MINNEAPOLIS MN
"TEMP","ECX4CHAR","618E")
PROV E V23 618 MINNEAPOLIS MN
"TEMP","ECX4CHAR","618F")
PROV F V23 618 MINNEAPOLIS MN
"TEMP","ECX4CHAR","618G")
PROV G V23 618 MINNEAPOLIS MN
"TEMP","ECX4CHAR","618H")
PROV H V23 618 MINNEAPOLIS MN
"TEMP","ECX4CHAR","618I")
PROV I V23 618 MINNEAPOLIS MN
"TEMP","ECX4CHAR","618J")
PROV J V23 618 MINNEAPOLIS MN
"TEMP","ECX4CHAR","618K")
PROV K V23 618 MINNEAPOLIS MN
"TEMP","ECX4CHAR","619A")
PROV A V07 619 CENTRAL ALABAMA VA HCS
"TEMP","ECX4CHAR","619B")
PROV B V07 619 CENTRAL ALABAMA VA HCS
"TEMP","ECX4CHAR","619C")
PROV C V07 619 CENTRAL ALABAMA VA HCS
"TEMP","ECX4CHAR","619D")
PROV D V07 619 CENTRAL ALABAMA VA HCS
"TEMP","ECX4CHAR","619E")
PROV E V07 619 CENTRAL ALABAMA VA HCS
"TEMP","ECX4CHAR","619F")
PROV F V07 619 CENTRAL ALABAMA VA HCS
"TEMP","ECX4CHAR","619G")
PROV G V07 619 CENTRAL ALABAMA VA HCS
"TEMP","ECX4CHAR","619H")
PROV H V07 619 CENTRAL ALABAMA VA HCS
"TEMP","ECX4CHAR","619I")
PROV I V07 619 CENTRAL ALABAMA VA HCS
"TEMP","ECX4CHAR","619J")
PROV J V07 619 CENTRAL ALABAMA VA HCS
"TEMP","ECX4CHAR","619K")
PROV K V07 619 CENTRAL ALABAMA VA HCS
"TEMP","ECX4CHAR","620A")
PROV A V03 620 MONTROSE NY
"TEMP","ECX4CHAR","620B")
PROV B V03 620 MONTROSE NY
"TEMP","ECX4CHAR","620C")
PROV C V03 620 MONTROSE NY
"TEMP","ECX4CHAR","620D")
PROV D V03 620 MONTROSE NY
"TEMP","ECX4CHAR","620E")
PROV E V03 620 MONTROSE NY
"TEMP","ECX4CHAR","620F")
PROV F V03 620 MONTROSE NY
"TEMP","ECX4CHAR","620G")
PROV G V03 620 MONTROSE NY
"TEMP","ECX4CHAR","620H")
PROV H V03 620 MONTROSE NY
"TEMP","ECX4CHAR","620I")
PROV I V03 620 MONTROSE NY
"TEMP","ECX4CHAR","620J")
PROV J V03 620 MONTROSE NY
"TEMP","ECX4CHAR","620K")
PROV K V03 620 MONTROSE NY
"TEMP","ECX4CHAR","621A")
PROV A V09 621 MOUNTAIN HOME TN
"TEMP","ECX4CHAR","621B")
PROV B V09 621 MOUNTAIN HOME TN
"TEMP","ECX4CHAR","621C")
PROV C V09 621 MOUNTAIN HOME TN
"TEMP","ECX4CHAR","621D")
PROV D V09 621 MOUNTAIN HOME TN
"TEMP","ECX4CHAR","621E")
PROV E V09 621 MOUNTAIN HOME TN
"TEMP","ECX4CHAR","621F")
PROV F V09 621 MOUNTAIN HOME TN
"TEMP","ECX4CHAR","621G")
PROV G V09 621 MOUNTAIN HOME TN
"TEMP","ECX4CHAR","621H")
PROV H V09 621 MOUNTAIN HOME TN
"TEMP","ECX4CHAR","621I")
PROV I V09 621 MOUNTAIN HOME TN
"TEMP","ECX4CHAR","621J")
PROV J V09 621 MOUNTAIN HOME TN
"TEMP","ECX4CHAR","621K")
PROV K V09 621 MOUNTAIN HOME TN
"TEMP","ECX4CHAR","623A")
PROV A V16 623 MUSKOGEE OK
"TEMP","ECX4CHAR","623B")
PROV B V16 623 MUSKOGEE OK
"TEMP","ECX4CHAR","623C")
PROV C V16 623 MUSKOGEE OK
"TEMP","ECX4CHAR","623D")
PROV D V16 623 MUSKOGEE OK
"TEMP","ECX4CHAR","623E")
PROV E V16 623 MUSKOGEE OK
"TEMP","ECX4CHAR","623F")
PROV F V16 623 MUSKOGEE OK
"TEMP","ECX4CHAR","623G")
PROV G V16 623 MUSKOGEE OK
"TEMP","ECX4CHAR","623H")
PROV H V16 623 MUSKOGEE OK
"TEMP","ECX4CHAR","623I")
PROV I V16 623 MUSKOGEE OK
"TEMP","ECX4CHAR","623J")
PROV J V16 623 MUSKOGEE OK
"TEMP","ECX4CHAR","623K")
PROV K V16 623 MUSKOGEE OK
"TEMP","ECX4CHAR","626A")
PROV A V09 626 NASHVILLE TN
"TEMP","ECX4CHAR","626B")
PROV B V09 626 NASHVILLE TN
"TEMP","ECX4CHAR","626C")
PROV C V09 626 NASHVILLE TN
"TEMP","ECX4CHAR","626D")
PROV D V09 626 NASHVILLE TN
"TEMP","ECX4CHAR","626E")
PROV E V09 626 NASHVILLE TN
"TEMP","ECX4CHAR","626F")
PROV F V09 626 NASHVILLE TN
"TEMP","ECX4CHAR","626G")
PROV G V09 626 NASHVILLE TN
"TEMP","ECX4CHAR","626H")
PROV H V09 626 NASHVILLE TN
"TEMP","ECX4CHAR","626I")
PROV I V09 626 NASHVILLE TN
"TEMP","ECX4CHAR","626J")
PROV J V09 626 NASHVILLE TN
"TEMP","ECX4CHAR","626K")
PROV K V09 626 NASHVILLE TN
"TEMP","ECX4CHAR","629A")
PROV A V16 629 NEW ORLEANS LA
"TEMP","ECX4CHAR","629B")
PROV B V16 629 NEW ORLEANS LA
"TEMP","ECX4CHAR","629C")
PROV C V16 629 NEW ORLEANS LA
"TEMP","ECX4CHAR","629D")
PROV D V16 629 NEW ORLEANS LA
"TEMP","ECX4CHAR","629E")
PROV E V16 629 NEW ORLEANS LA
"TEMP","ECX4CHAR","629F")
PROV F V16 629 NEW ORLEANS LA
"TEMP","ECX4CHAR","629G")
PROV G V16 629 NEW ORLEANS LA
"TEMP","ECX4CHAR","629H")
PROV H V16 629 NEW ORLEANS LA
"TEMP","ECX4CHAR","629I")
PROV I V16 629 NEW ORLEANS LA
"TEMP","ECX4CHAR","629J")
PROV J V16 629 NEW ORLEANS LA
"TEMP","ECX4CHAR","629K")
PROV K V16 629 NEW ORLEANS LA
"TEMP","ECX4CHAR","630A")
PROV A V03 630 NEW YORK HARBOR HCS
"TEMP","ECX4CHAR","630B")
PROV B V03 630 NEW YORK HARBOR HCS
"TEMP","ECX4CHAR","630C")
PROV C V03 630 NEW YORK HARBOR HCS
"TEMP","ECX4CHAR","630D")
PROV D V03 630 NEW YORK HARBOR HCS
"TEMP","ECX4CHAR","630E")
PROV E V03 630 NEW YORK HARBOR HCS
"TEMP","ECX4CHAR","630F")
PROV F V03 630 NEW YORK HARBOR HCS
"TEMP","ECX4CHAR","630G")
PROV G V03 630 NEW YORK HARBOR HCS
"TEMP","ECX4CHAR","630H")
PROV H V03 630 NEW YORK HARBOR HCS
"TEMP","ECX4CHAR","630I")
PROV I V03 630 NEW YORK HARBOR HCS
"TEMP","ECX4CHAR","630J")
PROV J V03 630 NEW YORK HARBOR HCS
"TEMP","ECX4CHAR","630K")
PROV K V03 630 NEW YORK HARBOR HCS
"TEMP","ECX4CHAR","631A")
PROV A V01 631 NORTHAMPTON MA
"TEMP","ECX4CHAR","631B")
PROV B V01 631 NORTHAMPTON MA
"TEMP","ECX4CHAR","631C")
PROV C V01 631 NORTHAMPTON MA
"TEMP","ECX4CHAR","631D")
PROV D V01 631 NORTHAMPTON MA
"TEMP","ECX4CHAR","631E")
PROV E V01 631 NORTHAMPTON MA
"TEMP","ECX4CHAR","631F")
PROV F V01 631 NORTHAMPTON MA
"TEMP","ECX4CHAR","631G")
PROV G V01 631 NORTHAMPTON MA
"TEMP","ECX4CHAR","631H")
PROV H V01 631 NORTHAMPTON MA
"TEMP","ECX4CHAR","631I")
PROV I V01 631 NORTHAMPTON MA
"TEMP","ECX4CHAR","631J")
PROV J V01 631 NORTHAMPTON MA
"TEMP","ECX4CHAR","631K")
PROV K V01 631 NORTHAMPTON MA
"TEMP","ECX4CHAR","632A")
PROV A V03 632 NORTHPORT NY
"TEMP","ECX4CHAR","632B")
PROV B V03 632 NORTHPORT NY
"TEMP","ECX4CHAR","632C")
PROV C V03 632 NORTHPORT NY
"TEMP","ECX4CHAR","632D")
PROV D V03 632 NORTHPORT NY
"TEMP","ECX4CHAR","632E")
PROV E V03 632 NORTHPORT NY
"TEMP","ECX4CHAR","632F")
PROV F V03 632 NORTHPORT NY
"TEMP","ECX4CHAR","632G")
PROV G V03 632 NORTHPORT NY
"TEMP","ECX4CHAR","632H")
PROV H V03 632 NORTHPORT NY
"TEMP","ECX4CHAR","632I")
PROV I V03 632 NORTHPORT NY
"TEMP","ECX4CHAR","632J")
PROV J V03 632 NORTHPORT NY
"TEMP","ECX4CHAR","632K")
PROV K V03 632 NORTHPORT NY
"TEMP","ECX4CHAR","635A")
PROV A V16 635 OKLAHOMA CITY OK
"TEMP","ECX4CHAR","635B")
PROV B V16 635 OKLAHOMA CITY OK
"TEMP","ECX4CHAR","635C")
PROV C V16 635 OKLAHOMA CITY OK
"TEMP","ECX4CHAR","635D")
PROV D V16 635 OKLAHOMA CITY OK
"TEMP","ECX4CHAR","635E")
PROV E V16 635 OKLAHOMA CITY OK
"TEMP","ECX4CHAR","635F")
PROV F V16 635 OKLAHOMA CITY OK
"TEMP","ECX4CHAR","635G")
PROV G V16 635 OKLAHOMA CITY OK
"TEMP","ECX4CHAR","635H")
PROV H V16 635 OKLAHOMA CITY OK
"TEMP","ECX4CHAR","635I")
PROV I V16 635 OKLAHOMA CITY OK
"TEMP","ECX4CHAR","635J")
PROV J V16 635 OKLAHOMA CITY OK
"TEMP","ECX4CHAR","635K")
PROV K V16 635 OKLAHOMA CITY OK
"TEMP","ECX4CHAR","636A")
PROV A V23 636 OMAHA  NE
"TEMP","ECX4CHAR","636B")
PROV B V23 636 OMAHA  NE
"TEMP","ECX4CHAR","636C")
PROV C V23 636 OMAHA  NE
"TEMP","ECX4CHAR","636D")
PROV D V23 636 OMAHA  NE
"TEMP","ECX4CHAR","636E")
PROV E V23 636 OMAHA  NE
"TEMP","ECX4CHAR","636F")
PROV F V23 636 OMAHA  NE
"TEMP","ECX4CHAR","636G")
PROV G V23 636 OMAHA  NE
"TEMP","ECX4CHAR","636H")
PROV H V23 636 OMAHA  NE
"TEMP","ECX4CHAR","636I")
PROV I V23 636 OMAHA  NE
"TEMP","ECX4CHAR","636J")
PROV J V23 636 OMAHA  NE
"TEMP","ECX4CHAR","636K")
PROV K V23 636 OMAHA  NE
"TEMP","ECX4CHAR","637A")
PROV A V06 637 ASHEVILLE NC
"TEMP","ECX4CHAR","637B")
PROV B V06 637 ASHEVILLE NC
"TEMP","ECX4CHAR","637C")
PROV C V06 637 ASHEVILLE NC
"TEMP","ECX4CHAR","637D")
PROV D V06 637 ASHEVILLE NC
"TEMP","ECX4CHAR","637E")
PROV E V06 637 ASHEVILLE NC
"TEMP","ECX4CHAR","637F")
PROV F V06 637 ASHEVILLE NC
"TEMP","ECX4CHAR","637G")
PROV G V06 637 ASHEVILLE NC
"TEMP","ECX4CHAR","637H")
PROV H V06 637 ASHEVILLE NC
"TEMP","ECX4CHAR","637I")
PROV I V06 637 ASHEVILLE NC
"TEMP","ECX4CHAR","637J")
PROV J V06 637 ASHEVILLE NC
"TEMP","ECX4CHAR","637K")
PROV K V06 637 ASHEVILLE NC
"TEMP","ECX4CHAR","640A")
PROV A V21 640 PALO ALTO HCS
"TEMP","ECX4CHAR","640B")
PROV B V21 640 PALO ALTO HCS
"TEMP","ECX4CHAR","640C")
PROV C V21 640 PALO ALTO HCS
"TEMP","ECX4CHAR","640D")
PROV D V21 640 PALO ALTO HCS
"TEMP","ECX4CHAR","640E")
PROV E V21 640 PALO ALTO HCS
"TEMP","ECX4CHAR","640F")
PROV F V21 640 PALO ALTO HCS
"TEMP","ECX4CHAR","640G")
PROV G V21 640 PALO ALTO HCS
"TEMP","ECX4CHAR","640H")
PROV H V21 640 PALO ALTO HCS
"TEMP","ECX4CHAR","640I")
PROV I V21 640 PALO ALTO HCS
"TEMP","ECX4CHAR","640J")
PROV J V21 640 PALO ALTO HCS
"TEMP","ECX4CHAR","640K")
PROV K V21 640 PALO ALTO HCS
"TEMP","ECX4CHAR","642A")
PROV A V04 642 PHILADELPHIA PA
"TEMP","ECX4CHAR","642B")
PROV B V04 642 PHILADELPHIA PA
"TEMP","ECX4CHAR","642C")
PROV C V04 642 PHILADELPHIA PA
"TEMP","ECX4CHAR","642D")
PROV D V04 642 PHILADELPHIA PA
"TEMP","ECX4CHAR","642E")
PROV E V04 642 PHILADELPHIA PA
"TEMP","ECX4CHAR","642F")
PROV F V04 642 PHILADELPHIA PA
"TEMP","ECX4CHAR","642G")
PROV G V04 642 PHILADELPHIA PA
"TEMP","ECX4CHAR","642H")
PROV H V04 642 PHILADELPHIA PA
"TEMP","ECX4CHAR","642I")
PROV I V04 642 PHILADELPHIA PA
"TEMP","ECX4CHAR","642J")
PROV J V04 642 PHILADELPHIA PA
"TEMP","ECX4CHAR","642K")
PROV K V04 642 PHILADELPHIA PA
"TEMP","ECX4CHAR","644A")
PROV A V18 644 PHOENIX AZ
"TEMP","ECX4CHAR","644B")
PROV B V18 644 PHOENIX AZ
"TEMP","ECX4CHAR","644C")
PROV C V18 644 PHOENIX AZ
"TEMP","ECX4CHAR","644D")
PROV D V18 644 PHOENIX AZ
"TEMP","ECX4CHAR","644E")
PROV E V18 644 PHOENIX AZ
"TEMP","ECX4CHAR","644F")
PROV F V18 644 PHOENIX AZ
"TEMP","ECX4CHAR","644G")
PROV G V18 644 PHOENIX AZ
"TEMP","ECX4CHAR","644H")
PROV H V18 644 PHOENIX AZ
"TEMP","ECX4CHAR","644I")
PROV I V18 644 PHOENIX AZ
"TEMP","ECX4CHAR","644J")
PROV J V18 644 PHOENIX AZ
"TEMP","ECX4CHAR","644K")
PROV K V18 644 PHOENIX AZ
"TEMP","ECX4CHAR","646A")
PROV A V04 646 PITTSBURGH HCS
"TEMP","ECX4CHAR","646B")
PROV B V04 646 PITTSBURGH HCS
"TEMP","ECX4CHAR","646C")
PROV C V04 646 PITTSBURGH HCS
"TEMP","ECX4CHAR","646D")
PROV D V04 646 PITTSBURGH HCS
"TEMP","ECX4CHAR","646E")
PROV E V04 646 PITTSBURGH HCS
"TEMP","ECX4CHAR","646F")
PROV F V04 646 PITTSBURGH HCS
"TEMP","ECX4CHAR","646G")
PROV G V04 646 PITTSBURGH HCS
"TEMP","ECX4CHAR","646H")
PROV H V04 646 PITTSBURGH HCS
"TEMP","ECX4CHAR","646I")
PROV I V04 646 PITTSBURGH HCS
"TEMP","ECX4CHAR","646J")
PROV J V04 646 PITTSBURGH HCS
"TEMP","ECX4CHAR","646K")
PROV K V04 646 PITTSBURGH HCS
"TEMP","ECX4CHAR","648A")
PROV A V20 648 PORTLAND OR
"TEMP","ECX4CHAR","648B")
PROV B V20 648 PORTLAND OR
"TEMP","ECX4CHAR","648C")
PROV C V20 648 PORTLAND OR
"TEMP","ECX4CHAR","648D")
PROV D V20 648 PORTLAND OR
"TEMP","ECX4CHAR","648E")
PROV E V20 648 PORTLAND OR
"TEMP","ECX4CHAR","648F")
PROV F V20 648 PORTLAND OR
"TEMP","ECX4CHAR","648G")
PROV G V20 648 PORTLAND OR
"TEMP","ECX4CHAR","648H")
PROV H V20 648 PORTLAND OR
"TEMP","ECX4CHAR","648I")
PROV I V20 648 PORTLAND OR
"TEMP","ECX4CHAR","648J")
PROV J V20 648 PORTLAND OR
"TEMP","ECX4CHAR","648K")
PROV K V20 648 PORTLAND OR
"TEMP","ECX4CHAR","649A")
PROV A V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","649B")
PROV B V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","649C")
PROV C V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","649D")
PROV D V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","649E")
PROV E V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","649F")
PROV F V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","649G")
PROV G V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","649H")
PROV H V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","649I")
PROV I V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","649J")
PROV J V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","649K")
PROV K V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","649L")
PROV L V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","649M")
PROV M V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","649N")
PROV N V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","649O")
PROV O V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","649P")
PROV P V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","649Q")
PROV Q V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","649R")
PROV R V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","649S")
PROV S V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","649T")
PROV T V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","649U")
PROV U V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","649V")
PROV V V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","649W")
PROV W V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","649X")
PROV X V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","649Y")
PROV Y V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","649Z")
PROV Z V18 649 PRESCOTT AZ
"TEMP","ECX4CHAR","650A")
PROV A V01 650 PROVIDENCE RI
"TEMP","ECX4CHAR","650B")
PROV B V01 650 PROVIDENCE RI
"TEMP","ECX4CHAR","650C")
PROV C V01 650 PROVIDENCE RI
"TEMP","ECX4CHAR","650D")
PROV D V01 650 PROVIDENCE RI
"TEMP","ECX4CHAR","650E")
PROV E V01 650 PROVIDENCE RI
"TEMP","ECX4CHAR","650F")
PROV F V01 650 PROVIDENCE RI
"TEMP","ECX4CHAR","650G")
PROV G V01 650 PROVIDENCE RI
"TEMP","ECX4CHAR","650H")
PROV H V01 650 PROVIDENCE RI
"TEMP","ECX4CHAR","650I")
PROV I V01 650 PROVIDENCE RI
"TEMP","ECX4CHAR","650J")
PROV J V01 650 PROVIDENCE RI
"TEMP","ECX4CHAR","650K")
PROV K V01 650 PROVIDENCE RI
"TEMP","ECX4CHAR","652A")
PROV A V06 652 RICHMOND VA
"TEMP","ECX4CHAR","652B")
PROV B V06 652 RICHMOND VA
"TEMP","ECX4CHAR","652C")
PROV C V06 652 RICHMOND VA
"TEMP","ECX4CHAR","652D")
PROV D V06 652 RICHMOND VA
"TEMP","ECX4CHAR","652E")
PROV E V06 652 RICHMOND VA
"TEMP","ECX4CHAR","652F")
PROV F V06 652 RICHMOND VA
"TEMP","ECX4CHAR","652G")
PROV G V06 652 RICHMOND VA
"TEMP","ECX4CHAR","652H")
PROV H V06 652 RICHMOND VA
"TEMP","ECX4CHAR","652I")
PROV I V06 652 RICHMOND VA
"TEMP","ECX4CHAR","652J")
PROV J V06 652 RICHMOND VA
"TEMP","ECX4CHAR","652K")
PROV K V06 652 RICHMOND VA
"TEMP","ECX4CHAR","653A")
PROV A V20 653 VA ROSEBURG HCS
"TEMP","ECX4CHAR","653B")
PROV B V20 653 VA ROSEBURG HCS
"TEMP","ECX4CHAR","653C")
PROV C V20 653 VA ROSEBURG HCS
"TEMP","ECX4CHAR","653D")
PROV D V20 653 VA ROSEBURG HCS
"TEMP","ECX4CHAR","653E")
PROV E V20 653 VA ROSEBURG HCS
"TEMP","ECX4CHAR","653F")
PROV F V20 653 VA ROSEBURG HCS
"TEMP","ECX4CHAR","653G")
PROV G V20 653 VA ROSEBURG HCS
"TEMP","ECX4CHAR","653H")
PROV H V20 653 VA ROSEBURG HCS
"TEMP","ECX4CHAR","653I")
PROV I V20 653 VA ROSEBURG HCS
"TEMP","ECX4CHAR","653J")
PROV J V20 653 VA ROSEBURG HCS
"TEMP","ECX4CHAR","653K")
PROV K V20 653 VA ROSEBURG HCS
"TEMP","ECX4CHAR","654A")
PROV A V21 654 RENO NV
"TEMP","ECX4CHAR","654B")
PROV B V21 654 RENO NV
"TEMP","ECX4CHAR","654C")
PROV C V21 654 RENO NV
"TEMP","ECX4CHAR","654D")
PROV D V21 654 RENO NV
"TEMP","ECX4CHAR","654E")
PROV E V21 654 RENO NV
"TEMP","ECX4CHAR","654F")
PROV F V21 654 RENO NV
"TEMP","ECX4CHAR","654G")
PROV G V21 654 RENO NV
"TEMP","ECX4CHAR","654H")
PROV H V21 654 RENO NV
"TEMP","ECX4CHAR","654I")
PROV I V21 654 RENO NV
"TEMP","ECX4CHAR","654J")
PROV J V21 654 RENO NV
"TEMP","ECX4CHAR","654K")
PROV K V21 654 RENO NV
"TEMP","ECX4CHAR","655A")
PROV A V11 655 SAGINAW MI
"TEMP","ECX4CHAR","655B")
PROV B V11 655 SAGINAW MI
"TEMP","ECX4CHAR","655C")
PROV C V11 655 SAGINAW MI
"TEMP","ECX4CHAR","655D")
PROV D V11 655 SAGINAW MI
"TEMP","ECX4CHAR","655E")
PROV E V11 655 SAGINAW MI
"TEMP","ECX4CHAR","655F")
PROV F V11 655 SAGINAW MI
"TEMP","ECX4CHAR","655G")
PROV G V11 655 SAGINAW MI
"TEMP","ECX4CHAR","655H")
PROV H V11 655 SAGINAW MI
"TEMP","ECX4CHAR","655I")
PROV I V11 655 SAGINAW MI
"TEMP","ECX4CHAR","655J")
PROV J V11 655 SAGINAW MI
"TEMP","ECX4CHAR","655K")
PROV K V11 655 SAGINAW MI
"TEMP","ECX4CHAR","656A")
PROV A V23 656 ST. CLOUD MN
"TEMP","ECX4CHAR","656B")
PROV B V23 656 ST. CLOUD MN
"TEMP","ECX4CHAR","656C")
PROV C V23 656 ST. CLOUD MN
"TEMP","ECX4CHAR","656D")
PROV D V23 656 ST. CLOUD MN
"TEMP","ECX4CHAR","656E")
PROV E V23 656 ST. CLOUD MN
"TEMP","ECX4CHAR","656F")
PROV F V23 656 ST. CLOUD MN
"TEMP","ECX4CHAR","656G")
PROV G V23 656 ST. CLOUD MN
"TEMP","ECX4CHAR","656H")
PROV H V23 656 ST. CLOUD MN
"TEMP","ECX4CHAR","656I")
PROV I V23 656 ST. CLOUD MN
"TEMP","ECX4CHAR","656J")
PROV J V23 656 ST. CLOUD MN
"TEMP","ECX4CHAR","656K")
PROV K V23 656 ST. CLOUD MN
"TEMP","ECX4CHAR","657A")
PROV A V15 657 ST. LOUIS MO
"TEMP","ECX4CHAR","657B")
PROV B V15 657 ST. LOUIS MO
"TEMP","ECX4CHAR","657C")
PROV C V15 657 ST. LOUIS MO
"TEMP","ECX4CHAR","657D")
PROV D V15 657 ST. LOUIS MO
"TEMP","ECX4CHAR","657E")
PROV E V15 657 ST. LOUIS MO
"TEMP","ECX4CHAR","657F")
PROV F V15 657 ST. LOUIS MO
"TEMP","ECX4CHAR","657G")
PROV G V15 657 ST. LOUIS MO
"TEMP","ECX4CHAR","657H")
PROV H V15 657 ST. LOUIS MO
"TEMP","ECX4CHAR","657I")
PROV I V15 657 ST. LOUIS MO
"TEMP","ECX4CHAR","657J")
PROV J V15 657 ST. LOUIS MO
"TEMP","ECX4CHAR","657K")
PROV K V15 657 ST. LOUIS MO
"TEMP","ECX4CHAR","658A")
PROV A V06 658 SALEM VA
"TEMP","ECX4CHAR","658B")
PROV B V06 658 SALEM VA
"TEMP","ECX4CHAR","658C")
PROV C V06 658 SALEM VA
"TEMP","ECX4CHAR","658D")
PROV D V06 658 SALEM VA
"TEMP","ECX4CHAR","658E")
PROV E V06 658 SALEM VA
"TEMP","ECX4CHAR","658F")
PROV F V06 658 SALEM VA
"TEMP","ECX4CHAR","658G")
PROV G V06 658 SALEM VA
"TEMP","ECX4CHAR","658H")
PROV H V06 658 SALEM VA
"TEMP","ECX4CHAR","658I")
PROV I V06 658 SALEM VA
"TEMP","ECX4CHAR","658J")
PROV J V06 658 SALEM VA
"TEMP","ECX4CHAR","658K")
PROV K V06 658 SALEM VA
"TEMP","ECX4CHAR","659A")
PROV A V06 659 SALISBURY NC
"TEMP","ECX4CHAR","659B")
PROV B V06 659 SALISBURY NC
"TEMP","ECX4CHAR","659C")
PROV C V06 659 SALISBURY NC
"TEMP","ECX4CHAR","659D")
PROV D V06 659 SALISBURY NC
"TEMP","ECX4CHAR","659E")
PROV E V06 659 SALISBURY NC
"TEMP","ECX4CHAR","659F")
PROV F V06 659 SALISBURY NC
"TEMP","ECX4CHAR","659G")
PROV G V06 659 SALISBURY NC
"TEMP","ECX4CHAR","659H")
PROV H V06 659 SALISBURY NC
"TEMP","ECX4CHAR","659I")
PROV I V06 659 SALISBURY NC
"TEMP","ECX4CHAR","659J")
PROV J V06 659 SALISBURY NC
"TEMP","ECX4CHAR","659K")
PROV K V06 659 SALISBURY NC
"TEMP","ECX4CHAR","660A")
PROV A V19 660 SALT LAKE CITY UT
"TEMP","ECX4CHAR","660B")
PROV B V19 660 SALT LAKE CITY UT
"TEMP","ECX4CHAR","660C")
PROV C V19 660 SALT LAKE CITY UT
"TEMP","ECX4CHAR","660D")
PROV D V19 660 SALT LAKE CITY UT
"TEMP","ECX4CHAR","660E")
PROV E V19 660 SALT LAKE CITY UT
"TEMP","ECX4CHAR","660F")
PROV F V19 660 SALT LAKE CITY UT
"TEMP","ECX4CHAR","660G")
PROV G V19 660 SALT LAKE CITY UT
"TEMP","ECX4CHAR","660H")
PROV H V19 660 SALT LAKE CITY UT
"TEMP","ECX4CHAR","660I")
PROV I V19 660 SALT LAKE CITY UT
"TEMP","ECX4CHAR","660J")
PROV J V19 660 SALT LAKE CITY UT
"TEMP","ECX4CHAR","660K")
PROV K V19 660 SALT LAKE CITY UT
"TEMP","ECX4CHAR","662A")
PROV A V21 662 SAN FRANCISCO CA
"TEMP","ECX4CHAR","662B")
PROV B V21 662 SAN FRANCISCO CA
"TEMP","ECX4CHAR","662C")
PROV C V21 662 SAN FRANCISCO CA
"TEMP","ECX4CHAR","662D")
PROV D V21 662 SAN FRANCISCO CA
"TEMP","ECX4CHAR","662E")
PROV E V21 662 SAN FRANCISCO CA
"TEMP","ECX4CHAR","662F")
PROV F V21 662 SAN FRANCISCO CA
"TEMP","ECX4CHAR","662G")
PROV G V21 662 SAN FRANCISCO CA
"TEMP","ECX4CHAR","662H")
PROV H V21 662 SAN FRANCISCO CA
"TEMP","ECX4CHAR","662I")
PROV I V21 662 SAN FRANCISCO CA
"TEMP","ECX4CHAR","662J")
PROV J V21 662 SAN FRANCISCO CA
"TEMP","ECX4CHAR","662K")
PROV K V21 662 SAN FRANCISCO CA
"TEMP","ECX4CHAR","663A")
PROV A V20 663 PUGET SOUND HCS
"TEMP","ECX4CHAR","663B")
PROV B V20 663 PUGET SOUND HCS
"TEMP","ECX4CHAR","663C")
PROV C V20 663 PUGET SOUND HCS
"TEMP","ECX4CHAR","663D")
PROV D V20 663 PUGET SOUND HCS
"TEMP","ECX4CHAR","663E")
PROV E V20 663 PUGET SOUND HCS
"TEMP","ECX4CHAR","663F")
PROV F V20 663 PUGET SOUND HCS
"TEMP","ECX4CHAR","663G")
PROV G V20 663 PUGET SOUND HCS
"TEMP","ECX4CHAR","663H")
PROV H V20 663 PUGET SOUND HCS
"TEMP","ECX4CHAR","663I")
PROV I V20 663 PUGET SOUND HCS
"TEMP","ECX4CHAR","663J")
PROV J V20 663 PUGET SOUND HCS
"TEMP","ECX4CHAR","663K")
PROV K V20 663 PUGET SOUND HCS
"TEMP","ECX4CHAR","664A")
PROV A V22 664 SAN DIEGO CA
"TEMP","ECX4CHAR","664B")
PROV B V22 664 SAN DIEGO CA
"TEMP","ECX4CHAR","664C")
PROV C V22 664 SAN DIEGO CA
"TEMP","ECX4CHAR","664D")
PROV D V22 664 SAN DIEGO CA
"TEMP","ECX4CHAR","664E")
PROV E V22 664 SAN DIEGO CA
"TEMP","ECX4CHAR","664F")
PROV F V22 664 SAN DIEGO CA
"TEMP","ECX4CHAR","664G")
PROV G V22 664 SAN DIEGO CA
"TEMP","ECX4CHAR","664H")
PROV H V22 664 SAN DIEGO CA
"TEMP","ECX4CHAR","664I")
PROV I V22 664 SAN DIEGO CA
"TEMP","ECX4CHAR","664J")
PROV J V22 664 SAN DIEGO CA
"TEMP","ECX4CHAR","664K")
PROV K V22 664 SAN DIEGO CA
"TEMP","ECX4CHAR","666A")
PROV A V19 666 SHERIDAN WY
"TEMP","ECX4CHAR","666B")
PROV B V19 666 SHERIDAN WY
"TEMP","ECX4CHAR","666C")
PROV C V19 666 SHERIDAN WY
"TEMP","ECX4CHAR","666D")
PROV D V19 666 SHERIDAN WY
"TEMP","ECX4CHAR","666E")
PROV E V19 666 SHERIDAN WY
"TEMP","ECX4CHAR","666F")
PROV F V19 666 SHERIDAN WY
"TEMP","ECX4CHAR","666G")
PROV G V19 666 SHERIDAN WY
"TEMP","ECX4CHAR","666H")
PROV H V19 666 SHERIDAN WY
"TEMP","ECX4CHAR","666I")
PROV I V19 666 SHERIDAN WY
"TEMP","ECX4CHAR","666J")
PROV J V19 666 SHERIDAN WY
"TEMP","ECX4CHAR","666K")
PROV K V19 666 SHERIDAN WY
"TEMP","ECX4CHAR","667A")
PROV A V16 667 SHREVEPORT LA
"TEMP","ECX4CHAR","667B")
PROV B V16 667 SHREVEPORT LA
"TEMP","ECX4CHAR","667C")
PROV C V16 667 SHREVEPORT LA
"TEMP","ECX4CHAR","667D")
PROV D V16 667 SHREVEPORT LA
"TEMP","ECX4CHAR","667E")
PROV E V16 667 SHREVEPORT LA
"TEMP","ECX4CHAR","667F")
PROV F V16 667 SHREVEPORT LA
"TEMP","ECX4CHAR","667G")
PROV G V16 667 SHREVEPORT LA
"TEMP","ECX4CHAR","667H")
PROV H V16 667 SHREVEPORT LA
"TEMP","ECX4CHAR","667I")
PROV I V16 667 SHREVEPORT LA
"TEMP","ECX4CHAR","667J")
PROV J V16 667 SHREVEPORT LA
"TEMP","ECX4CHAR","667K")
PROV K V16 667 SHREVEPORT LA
"TEMP","ECX4CHAR","668A")
PROV A V20 668 SPOKANE WA
"TEMP","ECX4CHAR","668B")
PROV B V20 668 SPOKANE WA
"TEMP","ECX4CHAR","668C")
PROV C V20 668 SPOKANE WA
"TEMP","ECX4CHAR","668D")
PROV D V20 668 SPOKANE WA
"TEMP","ECX4CHAR","668E")
PROV E V20 668 SPOKANE WA
"TEMP","ECX4CHAR","668F")
PROV F V20 668 SPOKANE WA
"TEMP","ECX4CHAR","668G")
PROV G V20 668 SPOKANE WA
"TEMP","ECX4CHAR","668H")
PROV H V20 668 SPOKANE WA
"TEMP","ECX4CHAR","668I")
PROV I V20 668 SPOKANE WA
"TEMP","ECX4CHAR","668J")
PROV J V20 668 SPOKANE WA
"TEMP","ECX4CHAR","668K")
PROV K V20 668 SPOKANE WA
"TEMP","ECX4CHAR","671A")
PROV A V17 671 SOUTH TEXAS VETERANS
"TEMP","ECX4CHAR","671B")
PROV B V17 671 SOUTH TEXAS VETERANS
"TEMP","ECX4CHAR","671C")
PROV C V17 671 SOUTH TEXAS VETERANS
"TEMP","ECX4CHAR","671D")
PROV D V17 671 SOUTH TEXAS VETERANS
"TEMP","ECX4CHAR","671E")
PROV E V17 671 SOUTH TEXAS VETERANS
"TEMP","ECX4CHAR","671F")
PROV F V17 671 SOUTH TEXAS VETERANS
"TEMP","ECX4CHAR","671G")
PROV G V17 671 SOUTH TEXAS VETERANS
"TEMP","ECX4CHAR","671H")
PROV H V17 671 SOUTH TEXAS VETERANS
"TEMP","ECX4CHAR","671I")
PROV I V17 671 SOUTH TEXAS VETERANS
"TEMP","ECX4CHAR","671J")
PROV J V17 671 SOUTH TEXAS VETERANS
"TEMP","ECX4CHAR","671K")
PROV K V17 671 SOUTH TEXAS VETERANS
"TEMP","ECX4CHAR","672A")
PROV A V08 672 SAN JUAN PR
"TEMP","ECX4CHAR","672B")
PROV B V08 672 SAN JUAN PR
"TEMP","ECX4CHAR","672C")
PROV C V08 672 SAN JUAN PR
"TEMP","ECX4CHAR","672D")
PROV D V08 672 SAN JUAN PR
"TEMP","ECX4CHAR","672E")
PROV E V08 672 SAN JUAN PR
"TEMP","ECX4CHAR","672F")
PROV F V08 672 SAN JUAN PR
"TEMP","ECX4CHAR","672G")
PROV G V08 672 SAN JUAN PR
"TEMP","ECX4CHAR","672H")
PROV H V08 672 SAN JUAN PR
"TEMP","ECX4CHAR","672I")
PROV I V08 672 SAN JUAN PR
"TEMP","ECX4CHAR","672J")
PROV J V08 672 SAN JUAN PR
"TEMP","ECX4CHAR","672K")
PROV K V08 672 SAN JUAN PR
"TEMP","ECX4CHAR","673A")
PROV A V08 673 TAMPA FL
"TEMP","ECX4CHAR","673B")
PROV B V08 673 TAMPA FL
"TEMP","ECX4CHAR","673C")
PROV C V08 673 TAMPA FL
"TEMP","ECX4CHAR","673D")
PROV D V08 673 TAMPA FL
"TEMP","ECX4CHAR","673E")
PROV E V08 673 TAMPA FL
"TEMP","ECX4CHAR","673F")
PROV F V08 673 TAMPA FL
"TEMP","ECX4CHAR","673G")
PROV G V08 673 TAMPA FL
"TEMP","ECX4CHAR","673H")
PROV H V08 673 TAMPA FL
"TEMP","ECX4CHAR","673I")
PROV I V08 673 TAMPA FL
"TEMP","ECX4CHAR","673J")
PROV J V08 673 TAMPA FL
"TEMP","ECX4CHAR","673K")
PROV K V08 673 TAMPA FL
"TEMP","ECX4CHAR","674A")
PROV A V17 674 CENTRAL TEXAS HCS
"TEMP","ECX4CHAR","674B")
PROV B V17 674 CENTRAL TEXAS HCS
"TEMP","ECX4CHAR","674C")
PROV C V17 674 CENTRAL TEXAS HCS
"TEMP","ECX4CHAR","674D")
PROV D V17 674 CENTRAL TEXAS HCS
"TEMP","ECX4CHAR","674E")
PROV E V17 674 CENTRAL TEXAS HCS
"TEMP","ECX4CHAR","674F")
PROV F V17 674 CENTRAL TEXAS HCS
"TEMP","ECX4CHAR","674G")
PROV G V17 674 CENTRAL TEXAS HCS
"TEMP","ECX4CHAR","674H")
PROV H V17 674 CENTRAL TEXAS HCS
"TEMP","ECX4CHAR","674I")
PROV I V17 674 CENTRAL TEXAS HCS
"TEMP","ECX4CHAR","674J")
PROV J V17 674 CENTRAL TEXAS HCS
"TEMP","ECX4CHAR","674K")
PROV K V17 674 CENTRAL TEXAS HCS
"TEMP","ECX4CHAR","676A")
PROV A V12 676 TOMAH WI
"TEMP","ECX4CHAR","676B")
PROV B V12 676 TOMAH WI
"TEMP","ECX4CHAR","676C")
PROV C V12 676 TOMAH WI
"TEMP","ECX4CHAR","676D")
PROV D V12 676 TOMAH WI
"TEMP","ECX4CHAR","676E")
PROV E V12 676 TOMAH WI
"TEMP","ECX4CHAR","676F")
PROV F V12 676 TOMAH WI
"TEMP","ECX4CHAR","676G")
PROV G V12 676 TOMAH WI
"TEMP","ECX4CHAR","676H")
PROV H V12 676 TOMAH WI
"TEMP","ECX4CHAR","676I")
PROV I V12 676 TOMAH WI
"TEMP","ECX4CHAR","676J")
PROV J V12 676 TOMAH WI
"TEMP","ECX4CHAR","676K")
PROV K V12 676 TOMAH WI
"TEMP","ECX4CHAR","678A")
PROV A V18 678 TUCSON AZ
"TEMP","ECX4CHAR","678B")
PROV B V18 678 TUCSON AZ
"TEMP","ECX4CHAR","678C")
PROV C V18 678 TUCSON AZ
"TEMP","ECX4CHAR","678D")
PROV D V18 678 TUCSON AZ
"TEMP","ECX4CHAR","678E")
PROV E V18 678 TUCSON AZ
"TEMP","ECX4CHAR","678F")
PROV F V18 678 TUCSON AZ
"TEMP","ECX4CHAR","678G")
PROV G V18 678 TUCSON AZ
"TEMP","ECX4CHAR","678H")
PROV H V18 678 TUCSON AZ
"TEMP","ECX4CHAR","678I")
PROV I V18 678 TUCSON AZ
"TEMP","ECX4CHAR","678J")
PROV J V18 678 TUCSON AZ
"TEMP","ECX4CHAR","678K")
PROV K V18 678 TUCSON AZ
"TEMP","ECX4CHAR","679A")
PROV A V07 679 TUSCALOOSA AL
"TEMP","ECX4CHAR","679B")
PROV B V07 679 TUSCALOOSA AL
"TEMP","ECX4CHAR","679C")
PROV C V07 679 TUSCALOOSA AL
"TEMP","ECX4CHAR","679D")
PROV D V07 679 TUSCALOOSA AL
"TEMP","ECX4CHAR","679E")
PROV E V07 679 TUSCALOOSA AL
"TEMP","ECX4CHAR","679F")
PROV F V07 679 TUSCALOOSA AL
"TEMP","ECX4CHAR","679G")
PROV G V07 679 TUSCALOOSA AL
"TEMP","ECX4CHAR","679H")
PROV H V07 679 TUSCALOOSA AL
"TEMP","ECX4CHAR","679I")
PROV I V07 679 TUSCALOOSA AL
"TEMP","ECX4CHAR","679J")
PROV J V07 679 TUSCALOOSA AL
"TEMP","ECX4CHAR","679K")
PROV K V07 679 TUSCALOOSA AL
"TEMP","ECX4CHAR","687A")
PROV A V20 687 WALLA WALLA WA
"TEMP","ECX4CHAR","687B")
PROV B V20 687 WALLA WALLA WA
"TEMP","ECX4CHAR","687C")
PROV C V20 687 WALLA WALLA WA
"TEMP","ECX4CHAR","687D")
PROV D V20 687 WALLA WALLA WA
"TEMP","ECX4CHAR","687E")
PROV E V20 687 WALLA WALLA WA
"TEMP","ECX4CHAR","687F")
PROV F V20 687 WALLA WALLA WA
"TEMP","ECX4CHAR","687G")
PROV G V20 687 WALLA WALLA WA
"TEMP","ECX4CHAR","687H")
PROV H V20 687 WALLA WALLA WA
"TEMP","ECX4CHAR","687I")
PROV I V20 687 WALLA WALLA WA
"TEMP","ECX4CHAR","687J")
PROV J V20 687 WALLA WALLA WA
"TEMP","ECX4CHAR","687K")
PROV K V20 687 WALLA WALLA WA
"TEMP","ECX4CHAR","688A")
PROV A V05 688 WASHINGTON DC
"TEMP","ECX4CHAR","688B")
PROV B V05 688 WASHINGTON DC
"TEMP","ECX4CHAR","688C")
PROV C V05 688 WASHINGTON DC
"TEMP","ECX4CHAR","688D")
PROV D V05 688 WASHINGTON DC
"TEMP","ECX4CHAR","688E")
PROV E V05 688 WASHINGTON DC
"TEMP","ECX4CHAR","688F")
PROV F V05 688 WASHINGTON DC
"TEMP","ECX4CHAR","688G")
PROV G V05 688 WASHINGTON DC
"TEMP","ECX4CHAR","688H")
PROV H V05 688 WASHINGTON DC
"TEMP","ECX4CHAR","688I")
PROV I V05 688 WASHINGTON DC
"TEMP","ECX4CHAR","688J")
PROV J V05 688 WASHINGTON DC
"TEMP","ECX4CHAR","688K")
PROV K V05 688 WASHINGTON DC
"TEMP","ECX4CHAR","689A")
PROV A V01 689 CONNECTICUT HCS
"TEMP","ECX4CHAR","689B")
PROV A V01 689 CONNECTICUT HCS
"TEMP","ECX4CHAR","689C")
PROV A V01 689 CONNECTICUT HCS
"TEMP","ECX4CHAR","689D")
PROV A V01 689 CONNECTICUT HCS
"TEMP","ECX4CHAR","689E")
PROV A V01 689 CONNECTICUT HCS
"TEMP","ECX4CHAR","689F")
PROV A V01 689 CONNECTICUT HCS
"TEMP","ECX4CHAR","689G")
PROV A V01 689 CONNECTICUT HCS
"TEMP","ECX4CHAR","689H")
PROV A V01 689 CONNECTICUT HCS
"TEMP","ECX4CHAR","689I")
PROV A V01 689 CONNECTICUT HCS
"TEMP","ECX4CHAR","689J")
PROV A V01 689 CONNECTICUT HCS
"TEMP","ECX4CHAR","689K")
PROV A V01 689 CONNECTICUT HCS
"TEMP","ECX4CHAR","691A")
PROV A V22 691 WEST LA
"TEMP","ECX4CHAR","691B")
PROV B V22 691 WEST LA
"TEMP","ECX4CHAR","691C")
PROV C V22 691 WEST LA
"TEMP","ECX4CHAR","691D")
PROV D V22 691 WEST LA
"TEMP","ECX4CHAR","691E")
PROV E V22 691 WEST LA
"TEMP","ECX4CHAR","691F")
PROV F V22 691 WEST LA
"TEMP","ECX4CHAR","691G")
PROV G V22 691 WEST LA
"TEMP","ECX4CHAR","691H")
PROV H V22 691 WEST LA
"TEMP","ECX4CHAR","691I")
PROV I V22 691 WEST LA
"TEMP","ECX4CHAR","691J")
PROV J V22 691 WEST LA
"TEMP","ECX4CHAR","691K")
PROV K V22 691 WEST LA
"TEMP","ECX4CHAR","692A")
PROV A V20 692 WHITE CITY
"TEMP","ECX4CHAR","692B")
PROV B V20 692 WHITE CITY
"TEMP","ECX4CHAR","692C")
PROV C V20 692 WHITE CITY
"TEMP","ECX4CHAR","692D")
PROV D V20 692 WHITE CITY
"TEMP","ECX4CHAR","692E")
PROV E V20 692 WHITE CITY
"TEMP","ECX4CHAR","692F")
PROV F V20 692 WHITE CITY
"TEMP","ECX4CHAR","692G")
PROV G V20 692 WHITE CITY
"TEMP","ECX4CHAR","692H")
PROV H V20 692 WHITE CITY
"TEMP","ECX4CHAR","692I")
PROV I V20 692 WHITE CITY
"TEMP","ECX4CHAR","692J")
PROV J V20 692 WHITE CITY
"TEMP","ECX4CHAR","692K")
PROV K V20 692 WHITE CITY
"TEMP","ECX4CHAR","693A")
PROV A V04 693 WILKES-BARRE PA
"TEMP","ECX4CHAR","693B")
PROV B V04 693 WILKES-BARRE PA
"TEMP","ECX4CHAR","693C")
PROV C V04 693 WILKES-BARRE PA
"TEMP","ECX4CHAR","693D")
PROV D V04 693 WILKES-BARRE PA
"TEMP","ECX4CHAR","693E")
PROV E V04 693 WILKES-BARRE PA
"TEMP","ECX4CHAR","693F")
PROV F V04 693 WILKES-BARRE PA
"TEMP","ECX4CHAR","693G")
PROV G V04 693 WILKES-BARRE PA
"TEMP","ECX4CHAR","693H")
PROV H V04 693 WILKES-BARRE PA
"TEMP","ECX4CHAR","693I")
PROV I V04 693 WILKES-BARRE PA
"TEMP","ECX4CHAR","693J")
PROV J V04 693 WILKES-BARRE PA
"TEMP","ECX4CHAR","693K")
PROV K V04 693 WILKES-BARRE PA
"TEMP","ECX4CHAR","695A")
PROV A V12 695 MILWAUKEE WI
"TEMP","ECX4CHAR","695B")
PROV B V12 695 MILWAUKEE WI
"TEMP","ECX4CHAR","695C")
PROV C V12 695 MILWAUKEE WI
"TEMP","ECX4CHAR","695D")
PROV D V12 695 MILWAUKEE WI
"TEMP","ECX4CHAR","695E")
PROV E V12 695 MILWAUKEE WI
"TEMP","ECX4CHAR","695F")
PROV F V12 695 MILWAUKEE WI
"TEMP","ECX4CHAR","695G")
PROV G V12 695 MILWAUKEE WI
"TEMP","ECX4CHAR","695H")
PROV H V12 695 MILWAUKEE WI
"TEMP","ECX4CHAR","695I")
PROV I V12 695 MILWAUKEE WI
"TEMP","ECX4CHAR","695J")
PROV J V12 695 MILWAUKEE WI
"TEMP","ECX4CHAR","695K")
PROV K V12 695 MILWAUKEE WI
"TEMP","ECX4CHAR","756A")
PROV A V18 756 EL PASO OPC
"TEMP","ECX4CHAR","756B")
PROV B V18 756 EL PASO OPC
"TEMP","ECX4CHAR","756C")
PROV C V18 756 EL PASO OPC
"TEMP","ECX4CHAR","756D")
PROV D V18 756 EL PASO OPC
"TEMP","ECX4CHAR","756E")
PROV E V18 756 EL PASO OPC
"TEMP","ECX4CHAR","756F")
PROV F V18 756 EL PASO OPC
"TEMP","ECX4CHAR","756G")
PROV G V18 756 EL PASO OPC
"TEMP","ECX4CHAR","756H")
PROV H V18 756 EL PASO OPC
"TEMP","ECX4CHAR","756I")
PROV I V18 756 EL PASO OPC
"TEMP","ECX4CHAR","756J")
PROV J V18 756 EL PASO OPC
"TEMP","ECX4CHAR","756K")
PROV K V18 756 EL PASO OPC
"TEMP","ECX4CHAR","757A")
PROV A V10 757 COLUMBUS,OH OPC
"TEMP","ECX4CHAR","757B")
PROV B V10 757 COLUMBUS,OH OPC
"TEMP","ECX4CHAR","757C")
PROV C V10 757 COLUMBUS,OH OPC
"TEMP","ECX4CHAR","757D")
PROV D V10 757 COLUMBUS,OH OPC
"TEMP","ECX4CHAR","757E")
PROV E V10 757 COLUMBUS,OH OPC
"TEMP","ECX4CHAR","757F")
PROV F V10 757 COLUMBUS,OH OPC
"TEMP","ECX4CHAR","757G")
PROV G V10 757 COLUMBUS,OH OPC
"TEMP","ECX4CHAR","757H")
PROV H V10 757 COLUMBUS,OH OPC
"TEMP","ECX4CHAR","757I")
PROV I V10 757 COLUMBUS,OH OPC
"TEMP","ECX4CHAR","757J")
PROV J V10 757 COLUMBUS,OH OPC
"TEMP","ECX4CHAR","757K")
PROV K V10 757 COLUMBUS,OH OPC
"TEMP","ECX4CHAR","AAAA")
General Purpose 1 - assign own use
"TEMP","ECX4CHAR","ABCD")
Locally Defined A
"TEMP","ECX4CHAR","ABLU")
Blue Team A
"TEMP","ECX4CHAR","ACBC")
CBC A
"TEMP","ECX4CHAR","ACPX")
C & P clinic profile A
"TEMP","ECX4CHAR","ACUP")
Acupuncture
"TEMP","ECX4CHAR","AETC")
Ambulatory Evaluation and Treatment Center
"TEMP","ECX4CHAR","AFCC")
AFC Clinic
"TEMP","ECX4CHAR","AGRP")
A GROUP
"TEMP","ECX4CHAR","AGTO")
Agent Orange
"TEMP","ECX4CHAR","AMSP")
Antimicrb Stwrdshp Pharmacist
"TEMP","ECX4CHAR","ANUR")
RN managed clinic A
"TEMP","ECX4CHAR","AOTH")
A Other
"TEMP","ECX4CHAR","APRI")
A Primary Care
"TEMP","ECX4CHAR","ARED")
Red Team A
"TEMP","ECX4CHAR","ASAT")
Satellite A
"TEMP","ECX4CHAR","ASOR")
Ambulatory Surgery Performed in an OR
"TEMP","ECX4CHAR","ASOT")
Ambulatory Surgery Performed in Area Other than OR
"TEMP","ECX4CHAR","ATEM")
A Team
"TEMP","ECX4CHAR","AYEL")
Yellow Team A
"TEMP","ECX4CHAR","BARA")
Bar 203-450 Audio
"TEMP","ECX4CHAR","BBBB")
General Purpose 2 - assign own use
"TEMP","ECX4CHAR","BBLU")
Blue Team B
"TEMP","ECX4CHAR","BCBC")
CBC B
"TEMP","ECX4CHAR","BCDE")
Locally Defined B
"TEMP","ECX4CHAR","BCPX")
C & P clinic profile B
"TEMP","ECX4CHAR","BGRP")
B GROUP
"TEMP","ECX4CHAR","BIOF")
Biofeedback
"TEMP","ECX4CHAR","BLUA")
PRIMARY CARE BLUE A
"TEMP","ECX4CHAR","BLUB")
PRIMARY CARE BLUE B
"TEMP","ECX4CHAR","BLUC")
PRIMARY CARE BLUE C
"TEMP","ECX4CHAR","BLUD")
PRIMARY CARE BLUE D
"TEMP","ECX4CHAR","BLUE")
PRIMARY CARE BLUE E
"TEMP","ECX4CHAR","BLUF")
PRIMARY CARE BLUE F
"TEMP","ECX4CHAR","BLUG")
PRIMARY CARE BLUE G
"TEMP","ECX4CHAR","BLUH")
PRIMARY CARE BLUE H
"TEMP","ECX4CHAR","BLUI")
PRIMARY CARE BLUE I
"TEMP","ECX4CHAR","BLUJ")
PRIMARY CARE BLUE J
"TEMP","ECX4CHAR","BLUK")
PRIMARY CARE BLUE K
"TEMP","ECX4CHAR","BLUL")
PRIMARY CARE BLUE L
"TEMP","ECX4CHAR","BLUM")
PRIMARY CARE BLUE M
"TEMP","ECX4CHAR","BLUN")
PRIMARY CARE BLUE N
"TEMP","ECX4CHAR","BLUO")
PRIMARY CARE BLUE O
"TEMP","ECX4CHAR","BLUP")
PRIMARY CARE BLUE P
"TEMP","ECX4CHAR","BLUQ")
PRIMARY CARE BLUE Q
"TEMP","ECX4CHAR","BLUR")
PRIMARY CARE BLUE R
"TEMP","ECX4CHAR","BLUS")
PRIMARY CARE BLUE S
"TEMP","ECX4CHAR","BLUT")
PRIMARY CARE BLUE T
"TEMP","ECX4CHAR","BLUU")
PRIMARY CARE BLUE U
"TEMP","ECX4CHAR","BLUV")
PRIMARY CARE BLUE V
"TEMP","ECX4CHAR","BLUW")
PRIMARY CARE BLUE W
"TEMP","ECX4CHAR","BLUX")
PRIMARY CARE BLUE X
"TEMP","ECX4CHAR","BLUY")
PRIMARY CARE BLUE Y
"TEMP","ECX4CHAR","BLUZ")
PRIMARY CARE BLUE Z
"TEMP","ECX4CHAR","BNUR")
RN managed clinic B
"TEMP","ECX4CHAR","BOTH")
B Other
"TEMP","ECX4CHAR","BPRI")
B Primary Care
"TEMP","ECX4CHAR","BRED")
Red Team B
"TEMP","ECX4CHAR","BSAT")
Satellite B
"TEMP","ECX4CHAR","BTEM")
B Team
"TEMP","ECX4CHAR","BYEL")
Yellow Team B
"TEMP","ECX4CHAR","CASE")
Case Management
"TEMP","ECX4CHAR","CBHT")
Cognitive Behavioral Therapy
"TEMP","ECX4CHAR","CBLU")
Blue Team C
"TEMP","ECX4CHAR","CBOA")
CBOC KEY A
"TEMP","ECX4CHAR","CBOB")
CBOC KEY B
"TEMP","ECX4CHAR","CBOC")
CBOC KEY C
"TEMP","ECX4CHAR","CBOD")
CBOC KEY D
"TEMP","ECX4CHAR","CBOE")
CBOC KEY E
"TEMP","ECX4CHAR","CBOF")
CBOC KEY F
"TEMP","ECX4CHAR","CBOG")
CBOC KEY G
"TEMP","ECX4CHAR","CBOH")
CBOC KEY H
"TEMP","ECX4CHAR","CBOI")
CBOC KEY I
"TEMP","ECX4CHAR","CBOJ")
CBOC KEY J
"TEMP","ECX4CHAR","CBOK")
CBOC KEY K
"TEMP","ECX4CHAR","CBOL")
CBOC KEY L
"TEMP","ECX4CHAR","CBOM")
CBOC KEY M
"TEMP","ECX4CHAR","CBON")
CBOC KEY N
"TEMP","ECX4CHAR","CBOO")
CBOC KEY O
"TEMP","ECX4CHAR","CBOP")
CBOC KEY P
"TEMP","ECX4CHAR","CBOQ")
CBOC KEY Q
"TEMP","ECX4CHAR","CBOR")
CBOC KEY R
"TEMP","ECX4CHAR","CBOS")
CBOC KEY S
"TEMP","ECX4CHAR","CBOT")
CBOC KEY T
"TEMP","ECX4CHAR","CBOU")
CBOC KEY U
"TEMP","ECX4CHAR","CBOV")
CBOC KEY V
"TEMP","ECX4CHAR","CBOW")
CBOC KEY W
"TEMP","ECX4CHAR","CBOX")
CBOC KEY X
"TEMP","ECX4CHAR","CBOY")
CBOC KEY Y
"TEMP","ECX4CHAR","CBOZ")
CBOC KEY Z
"TEMP","ECX4CHAR","CCBC")
CBC C
"TEMP","ECX4CHAR","CCPH")
Critical Care Pharmacist
"TEMP","ECX4CHAR","CCPX")
C & P clinic profile C
"TEMP","ECX4CHAR","CD00")
Cardiac Disease Non-Specified Provider
"TEMP","ECX4CHAR","CDAC")
Cardiac Disease V1 CCS
"TEMP","ECX4CHAR","CDBC")
Cardiac Disease V2 CCS
"TEMP","ECX4CHAR","CDCC")
CARDIAC DISEASE CC TEAM
"TEMP","ECX4CHAR","CDDC")
Cardiac Disease V4 CCS
"TEMP","ECX4CHAR","CDEC")
Cardiac Disease V5 CCS
"TEMP","ECX4CHAR","CDED")
Cardiac Disease Education (CHF, etc)
"TEMP","ECX4CHAR","CDEF")
Locally Defined C
"TEMP","ECX4CHAR","CDFC")
Cardiac Disease V6 CCS
"TEMP","ECX4CHAR","CDGC")
Cardiac Disease V7 CCS
"TEMP","ECX4CHAR","CDHC")
Cardiac Disease V8 CCS
"TEMP","ECX4CHAR","CDJC")
Cardiac Disease V9 CCS
"TEMP","ECX4CHAR","CDKC")
Cardiac Disease V10 CCS
"TEMP","ECX4CHAR","CDLC")
Cardiac Disease V11 CCS
"TEMP","ECX4CHAR","CDMC")
Cardiac Disease V12 CCS
"TEMP","ECX4CHAR","CDNC")
Cardiac Disease V23 CCS
"TEMP","ECX4CHAR","CDNP")
Cardiac Disease Nurse Practitioner
"TEMP","ECX4CHAR","CDPA")
Cardiac Disease Physician Assistant
"TEMP","ECX4CHAR","CDPC")
Cardiac Disease V15 CCS
"TEMP","ECX4CHAR","CDPH")
Cardiac Disease Pharmacist
"TEMP","ECX4CHAR","CDPT")
Cardiac Disease Physical Therapist
"TEMP","ECX4CHAR","CDQC")
Cardiac Disease V16 CCS
"TEMP","ECX4CHAR","CDRC")
Cardiac Disease V17 CCS
"TEMP","ECX4CHAR","CDRD")
Cardiac Disease Registered Dietician
"TEMP","ECX4CHAR","CDRN")
Cardiac Disease Registered Nurse
"TEMP","ECX4CHAR","CDSC")
Cardiac Disease V18 CCS
"TEMP","ECX4CHAR","CDSW")
Cardiac Disease Social Worker
"TEMP","ECX4CHAR","CDTC")
Cardiac Disease V19 CCS
"TEMP","ECX4CHAR","CDUC")
Cardiac Disease V20 CCS
"TEMP","ECX4CHAR","CDVC")
Cardiac Disease V21 CCS
"TEMP","ECX4CHAR","CDWC")
Cardiac Disease V22 CCS
"TEMP","ECX4CHAR","CG00")
Coag Management Non-Specified Provider
"TEMP","ECX4CHAR","CGAC")
Coagulation Management V1 CCS
"TEMP","ECX4CHAR","CGBC")
Coagulation Management V2 CCS
"TEMP","ECX4CHAR","CGCC")
COAG MANAGEMENT CC TEAM
"TEMP","ECX4CHAR","CGDC")
Coagulation Management V4 CCS
"TEMP","ECX4CHAR","CGEC")
Coagulation Management V5 CCS
"TEMP","ECX4CHAR","CGFC")
Coagulation Management V6 CCCS
"TEMP","ECX4CHAR","CGGC")
Coagulation Management V7 CCS
"TEMP","ECX4CHAR","CGHC")
Coagulation Management V8 CCS
"TEMP","ECX4CHAR","CGJC")
Coagulation Management V9 CCS
"TEMP","ECX4CHAR","CGKC")
Coagulation Management V10 CCS
"TEMP","ECX4CHAR","CGLC")
Coagulation Management V11 CCS
"TEMP","ECX4CHAR","CGMC")
Coagulation Management V12 CCS
"TEMP","ECX4CHAR","CGNC")
Coagulation Management V23 CCS
"TEMP","ECX4CHAR","CGNP")
Coag Management Nurse Practitioner
"TEMP","ECX4CHAR","CGPA")
Coag Management Physician Assistant
"TEMP","ECX4CHAR","CGPC")
Coagulation Management V15 CCS
"TEMP","ECX4CHAR","CGPH")
CntrlzAnticoagMgmt Pharmacist
"TEMP","ECX4CHAR","CGPT")
Coag Management Physical Therapist
"TEMP","ECX4CHAR","CGQC")
Coagulation Management V16 CCS
"TEMP","ECX4CHAR","CGRC")
Homeless CRRCs
"TEMP","ECX4CHAR","CGRD")
Coag Management Registered Dietician
"TEMP","ECX4CHAR","CGRN")
Coag Management Registered Nurse
"TEMP","ECX4CHAR","CGRP")
Caregiver Support Program
"TEMP","ECX4CHAR","CGSC")
Coagulation Management V18 CCS
"TEMP","ECX4CHAR","CGSW")
Coag Management Social Worker
"TEMP","ECX4CHAR","CGTC")
Coagulation Management V19 CCS
"TEMP","ECX4CHAR","CGUC")
Coagulation Management V20 CCS
"TEMP","ECX4CHAR","CGVC")
Coagulation Management V21 CCS
"TEMP","ECX4CHAR","CGWC")
Coagulation Management V22 CCS
"TEMP","ECX4CHAR","CHAP")
Chaplain
"TEMP","ECX4CHAR","CHOL")
Cholesterol Education - Double Provider
"TEMP","ECX4CHAR","CLNS")
Clinical Nurse Specialist
"TEMP","ECX4CHAR","CMIO")
CMI - Chronically Mentally Ill
"TEMP","ECX4CHAR","CNSA")
CLINICAL NURSE SPECIALIST A
"TEMP","ECX4CHAR","CNSB")
CLINICAL NURSE SPECIALIST B
"TEMP","ECX4CHAR","CNSC")
CLINICAL NURSE SPECIALIST C
"TEMP","ECX4CHAR","CNSD")
CLINICAL NURSE SPECIALIST D
"TEMP","ECX4CHAR","CNSE")
CLINICAL NURSE SPECIALIST E
"TEMP","ECX4CHAR","CNSF")
CLINICAL NURSE SPECIALIST F
"TEMP","ECX4CHAR","CNSG")
CLINICAL NURSE SPECIALIST G
"TEMP","ECX4CHAR","CNSH")
CLINICAL NURSE SPECIALIST H
"TEMP","ECX4CHAR","CNSI")
CLINICAL NURSE SPECIALIST I
"TEMP","ECX4CHAR","CNSJ")
CLINICAL NURSE SPECIALIST J
"TEMP","ECX4CHAR","CNSK")
CLINICAL NURSE SPECIALIST K
"TEMP","ECX4CHAR","CNSL")
CLINICAL NURSE SPECIALIST L
"TEMP","ECX4CHAR","CNSM")
CLINICAL NURSE SPECIALIST M
"TEMP","ECX4CHAR","CNSN")
CLINICAL NURSE SPECIALIST N
"TEMP","ECX4CHAR","CNSO")
CLINICAL NURSE SPECIALIST O
"TEMP","ECX4CHAR","CNSP")
CLINICAL NURSE SPECIALIST P
"TEMP","ECX4CHAR","CNSQ")
CLINICAL NURSE SPECIALIST Q
"TEMP","ECX4CHAR","CNSR")
CLINICAL NURSE SPECIALIST R
"TEMP","ECX4CHAR","CNSS")
CLINICAL NURSE SPECIALIST S
"TEMP","ECX4CHAR","CNST")
CLINICAL NURSE SPECIALIST T
"TEMP","ECX4CHAR","CNSU")
CLINICAL NURSE SPECIALIST U
"TEMP","ECX4CHAR","CNSV")
CLINICAL NURSE SPECIALIST V
"TEMP","ECX4CHAR","CNSW")
CLINICAL NURSE SPECIALIST W
"TEMP","ECX4CHAR","CNSX")
CLINICAL NURSE SPECIALIST X
"TEMP","ECX4CHAR","CNSY")
CLINICAL NURSE SPECIALIST Y
"TEMP","ECX4CHAR","CNSZ")
E-Consult
"TEMP","ECX4CHAR","CNUR")
RN managed clinic C
"TEMP","ECX4CHAR","COLL")
Collateral
"TEMP","ECX4CHAR","COMN")
Community Nursing Home
"TEMP","ECX4CHAR","CONS")
Consultation
"TEMP","ECX4CHAR","COOR")
Coordinator
"TEMP","ECX4CHAR","COTH")
C Other
"TEMP","ECX4CHAR","CPEX")
Compensation and Pension Examination
"TEMP","ECX4CHAR","CPRA")
PRIMARY CARE COPPER A
"TEMP","ECX4CHAR","CPRB")
PRIMARY CARE COPPER B
"TEMP","ECX4CHAR","CPRC")
PRIMARY CARE COPPER C
"TEMP","ECX4CHAR","CPRD")
PRIMARY CARE COPPER D
"TEMP","ECX4CHAR","CPRE")
PRIMARY CARE COPPER E
"TEMP","ECX4CHAR","CPRF")
PRIMARY CARE COPPER F
"TEMP","ECX4CHAR","CPRG")
PRIMARY CARE COPPER G
"TEMP","ECX4CHAR","CPRH")
PRIMARY CARE COPPER H
"TEMP","ECX4CHAR","CPRI")
C Primary Care
"TEMP","ECX4CHAR","CPRJ")
PRIMARY CARE COPPER J
"TEMP","ECX4CHAR","CPRK")
PRIMARY CARE COPPER K
"TEMP","ECX4CHAR","CPRL")
PRIMARY CARE COPPER L
"TEMP","ECX4CHAR","CPRM")
PRIMARY CARE COPPER M
"TEMP","ECX4CHAR","CPRN")
PRIMARY CARE COPPER N
"TEMP","ECX4CHAR","CPRO")
PRIMARY CARE COPPER O
"TEMP","ECX4CHAR","CPRP")
PRIMARY CARE COPPER P
"TEMP","ECX4CHAR","CPRQ")
PRIMARY CARE COPPER Q
"TEMP","ECX4CHAR","CPRR")
PRIMARY CARE COPPER R
"TEMP","ECX4CHAR","CPRS")
PRIMARY CARE COPPER S
"TEMP","ECX4CHAR","CPRT")
PRIMARY CARE COPPER T
"TEMP","ECX4CHAR","CPRU")
PRIMARY CARE COPPER U
"TEMP","ECX4CHAR","CPRV")
PRIMARY CARE COPPER V
"TEMP","ECX4CHAR","CPRW")
PRIMARY CARE COPPER W
"TEMP","ECX4CHAR","CPRX")
PRIMARY CARE COPPER X
"TEMP","ECX4CHAR","CPRY")
SCAN Mini-Spec Clinic
"TEMP","ECX4CHAR","CPRZ")
SCAN-ECHO
"TEMP","ECX4CHAR","CPXA")
COMP & PENS A
"TEMP","ECX4CHAR","CPXB")
COMP & PENS B
"TEMP","ECX4CHAR","CPXC")
COMP & PENS C
"TEMP","ECX4CHAR","CPXD")
COMP & PENS D
"TEMP","ECX4CHAR","CPXE")
COMP & PENS E
"TEMP","ECX4CHAR","CPXF")
COMP & PENS F
"TEMP","ECX4CHAR","CPXG")
COMP & PENS G
"TEMP","ECX4CHAR","CPXH")
COMP & PENS H
"TEMP","ECX4CHAR","CPXI")
COMP & PENS I
"TEMP","ECX4CHAR","CPXJ")
COMP & PENS J
"TEMP","ECX4CHAR","CPXK")
COMP & PENS K
"TEMP","ECX4CHAR","CPXL")
COMP & PENS L
"TEMP","ECX4CHAR","CPXM")
COMP & PENS M
"TEMP","ECX4CHAR","CPXN")
COMP & PENS N
"TEMP","ECX4CHAR","CPXO")
COMP & PENS O
"TEMP","ECX4CHAR","CPXP")
COMP & PENS P
"TEMP","ECX4CHAR","CPXQ")
COMP & PENS Q
"TEMP","ECX4CHAR","CPXR")
COMP & PENS R
"TEMP","ECX4CHAR","CPXS")
COMP & PENS S
"TEMP","ECX4CHAR","CPXT")
COMP & PENS T
"TEMP","ECX4CHAR","CPXU")
COMP & PENS U
"TEMP","ECX4CHAR","CPXV")
COMP & PENS V
"TEMP","ECX4CHAR","CPXW")
COMP & PENS W
"TEMP","ECX4CHAR","CPXX")
COMP & PENS X
"TEMP","ECX4CHAR","CPXY")
COMP & PENS Y
"TEMP","ECX4CHAR","CPXZ")
COMP & PENS Z
"TEMP","ECX4CHAR","CRED")
Red Team C
"TEMP","ECX4CHAR","CRRC")
Cardiovascular Risk Reduction Pharmacist
"TEMP","ECX4CHAR","CSAT")
Satellite C
"TEMP","ECX4CHAR","CSCC")
CnsltSprtClinc CreatvArtsFestvl
"TEMP","ECX4CHAR","CSCF")
CnsltSprtClinc GolfPgm
"TEMP","ECX4CHAR","CSCG")
CnsltSprtClinc GldnAgGms
"TEMP","ECX4CHAR","CSCL")
CnsltSprtClinc WellnessPgm
"TEMP","ECX4CHAR","CSCN")
CnsltSprtClinc WintrSprtClinc
"TEMP","ECX4CHAR","CSCS")
CnsltSprtClinc SummrClinc
"TEMP","ECX4CHAR","CSCT")
CnsltSprtClinc TEE Trnmt
"TEMP","ECX4CHAR","CSCW")
CnsltSprtClinc WhlchrGms
"TEMP","ECX4CHAR","CTEM")
C Team
"TEMP","ECX4CHAR","CYEL")
Yellow Team C
"TEMP","ECX4CHAR","DBLU")
Blue Team D
"TEMP","ECX4CHAR","DCBC")
CBC D
"TEMP","ECX4CHAR","DCPX")
C & P clinic profile D
"TEMP","ECX4CHAR","DE00")
Dementia Non-Specified Provider
"TEMP","ECX4CHAR","DEAC")
Dementia V1 CCS
"TEMP","ECX4CHAR","DEBC")
Dementia V2 CCS
"TEMP","ECX4CHAR","DECC")
DEMENTIA CC TEAM
"TEMP","ECX4CHAR","DEDC")
Dementia V4 CCS
"TEMP","ECX4CHAR","DEEC")
Dementia V5 CCS
"TEMP","ECX4CHAR","DEFC")
Dementia V6 CCS
"TEMP","ECX4CHAR","DEFG")
Locally Defined D
"TEMP","ECX4CHAR","DEGC")
Dementia V7 CCS
"TEMP","ECX4CHAR","DEHC")
Dementia V8 CCS
"TEMP","ECX4CHAR","DEJC")
Dementia V9 CCS
"TEMP","ECX4CHAR","DEKC")
Dementia V10 CCS
"TEMP","ECX4CHAR","DELC")
Dementia V11 CCS
"TEMP","ECX4CHAR","DEMC")
Dementia V12 CCS
"TEMP","ECX4CHAR","DEMT")
Dementia-MH Therapist
"TEMP","ECX4CHAR","DENC")
Dementia V23 CCS
"TEMP","ECX4CHAR","DENP")
Dementia Nurse Practitioner
"TEMP","ECX4CHAR","DEPA")
Dementia Physician Assistant
"TEMP","ECX4CHAR","DEPC")
Dementia V15 CCS
"TEMP","ECX4CHAR","DEPH")
Dementia Pharmacist
"TEMP","ECX4CHAR","DEPS")
Dementia-Psychologist
"TEMP","ECX4CHAR","DEPT")
Dementia Physical Therapist
"TEMP","ECX4CHAR","DEQC")
Dementia V16 CCS
"TEMP","ECX4CHAR","DERC")
Dementia V17 CCS
"TEMP","ECX4CHAR","DERD")
Dementia Registered Dietician
"TEMP","ECX4CHAR","DERN")
Dementia Registered Nurse
"TEMP","ECX4CHAR","DESC")
Dementia V18 CCS
"TEMP","ECX4CHAR","DESW")
Dementia Social Worker
"TEMP","ECX4CHAR","DETC")
Dementia V19 CCS
"TEMP","ECX4CHAR","DEUC")
Dementia V20 CCS
"TEMP","ECX4CHAR","DEVC")
Dementia V21 CCS
"TEMP","ECX4CHAR","DEWC")
Dementia V22 CCS
"TEMP","ECX4CHAR","DGRP")
D GROUP
"TEMP","ECX4CHAR","DIAB")
Diabetes Education
"TEMP","ECX4CHAR","DIAG")
Diagnostic Procedures
"TEMP","ECX4CHAR","DM00")
Diabetes Mellitus Non-Specified Provider
"TEMP","ECX4CHAR","DMAC")
Diabetes Mellitus V1 CCS
"TEMP","ECX4CHAR","DMBC")
Diabetes Mellitus V2 CCS
"TEMP","ECX4CHAR","DMCC")
DIABETES MELLITUS CC TEAM
"TEMP","ECX4CHAR","DMDC")
Diabetes Mellitus V4 CCS
"TEMP","ECX4CHAR","DMEC")
Diabetes Mellitus V5 CCS
"TEMP","ECX4CHAR","DMFC")
Diabetes Mellitus V6 CCS
"TEMP","ECX4CHAR","DMGC")
Diabetes Mellitus V7 CCS
"TEMP","ECX4CHAR","DMHC")
Diabetes Mellitus V8 CCS
"TEMP","ECX4CHAR","DMJC")
Diabetes Mellitus V9 CCS
"TEMP","ECX4CHAR","DMKC")
Diabetes Mellitus V10 CCS
"TEMP","ECX4CHAR","DMLC")
Diabetes Mellitus V11 CCS
"TEMP","ECX4CHAR","DMMC")
Diabetes Mellitus V12 CCS
"TEMP","ECX4CHAR","DMNC")
Diabetes Mellitus V23 CCS
"TEMP","ECX4CHAR","DMNP")
Diabetes Mellitus Nurse Practitioner
"TEMP","ECX4CHAR","DMPA")
Diabetes Mellitus Physician Assistant
"TEMP","ECX4CHAR","DMPC")
Diabetes Mellitus V15 CCS
"TEMP","ECX4CHAR","DMPH")
Diabetes Mellitus Pharmacist
"TEMP","ECX4CHAR","DMPT")
Diabetes Mellitus Physical Therapist
"TEMP","ECX4CHAR","DMQC")
Diabetes Mellitus V16 CCS
"TEMP","ECX4CHAR","DMRC")
Diabetes Mellitus V17 CCS
"TEMP","ECX4CHAR","DMRD")
Diabetes Mellitus Registered Dietician
"TEMP","ECX4CHAR","DMRN")
Diabetes Mellitus Registered Nurse
"TEMP","ECX4CHAR","DMSC")
Diabetes Mellitus V18 CCS
"TEMP","ECX4CHAR","DMSW")
Diabetes Mellitus Social Worker
"TEMP","ECX4CHAR","DMTC")
Diabetes Mellitus V19 CCS
"TEMP","ECX4CHAR","DMUC")
Diabetes Mellitus V20 CCS
"TEMP","ECX4CHAR","DMVC")
Diabetes Mellitus V21 CCS
"TEMP","ECX4CHAR","DMWC")
Diabetes Mellitus V22 CCS
"TEMP","ECX4CHAR","DNUR")
RN managed clinic D
"TEMP","ECX4CHAR","DOMI")
Domicilliary
"TEMP","ECX4CHAR","DOTH")
D Other
"TEMP","ECX4CHAR","DPGP")
Double Provider - Group of Patients
"TEMP","ECX4CHAR","DPIN")
Double Provider - Individual Patient
"TEMP","ECX4CHAR","DPRI")
D Primary Care
"TEMP","ECX4CHAR","DPRO")
Dental Procedure
"TEMP","ECX4CHAR","DRED")
Red Team D
"TEMP","ECX4CHAR","DRPH")
Dermatology Pharmacist
"TEMP","ECX4CHAR","DSAT")
Satellite D
"TEMP","ECX4CHAR","DTEM")
D Team
"TEMP","ECX4CHAR","DTMV")
Diet Tech-MOVE
"TEMP","ECX4CHAR","DYEL")
Yellow Team D
"TEMP","ECX4CHAR","EAPO")
Employee Assistance
"TEMP","ECX4CHAR","EBLU")
Blue Team E
"TEMP","ECX4CHAR","ECBC")
CBC E
"TEMP","ECX4CHAR","ECOE")
Epilepsy Center of Excellence
"TEMP","ECX4CHAR","ECOP")
E-Cnslt Pharmacist
"TEMP","ECX4CHAR","ECPX")
C & P clinic profile E
"TEMP","ECX4CHAR","EDPH")
Emergency Department Pharmacist
"TEMP","ECX4CHAR","EDUC")
Education - non-MD
"TEMP","ECX4CHAR","EFGH")
Locally Defined E
"TEMP","ECX4CHAR","ENUR")
RN managed clinic E
"TEMP","ECX4CHAR","EOTH")
E Other
"TEMP","ECX4CHAR","EPRI")
E Primary Care
"TEMP","ECX4CHAR","EQTH")
Equine Therapy
"TEMP","ECX4CHAR","ERED")
Red Team E
"TEMP","ECX4CHAR","ESAT")
Satellite E
"TEMP","ECX4CHAR","ESPH")
ESA Pharmacist
"TEMP","ECX4CHAR","ETEM")
E Team
"TEMP","ECX4CHAR","EXPX")
Exposure Radiation
"TEMP","ECX4CHAR","EYEL")
Yellow Team E
"TEMP","ECX4CHAR","FAMI")
Family
"TEMP","ECX4CHAR","FBLU")
Blue Team F
"TEMP","ECX4CHAR","FCAP")
FCA 205-460 Pool
"TEMP","ECX4CHAR","FCBC")
CBC F
"TEMP","ECX4CHAR","FCPX")
C & P clinic profile F
"TEMP","ECX4CHAR","FDLA")
VL CATEGORY 4 A
"TEMP","ECX4CHAR","FDLB")
VL CATEGORY 4 B
"TEMP","ECX4CHAR","FDLC")
VL CATEGORY 4 C
"TEMP","ECX4CHAR","FDLD")
VL CATEGORY 4 D
"TEMP","ECX4CHAR","FEEA")
FEE PROVIDER VL5 A
"TEMP","ECX4CHAR","FEEB")
FEE PROVIDER VL5 B
"TEMP","ECX4CHAR","FEEC")
FEE PROVIDER VL5 C
"TEMP","ECX4CHAR","FEED")
FEE PROVIDER VL5 D
"TEMP","ECX4CHAR","FEEE")
FEE PROVIDER VL5 E
"TEMP","ECX4CHAR","FEEF")
FEE PROVIDER VL5 F
"TEMP","ECX4CHAR","FEEG")
FEE PROVIDER VL5 G
"TEMP","ECX4CHAR","FEEH")
FEE PROVIDER VL5 H
"TEMP","ECX4CHAR","FEEI")
FEE PROVIDER VL5 I
"TEMP","ECX4CHAR","FEEJ")
FEE PROVIDER VL5 J
"TEMP","ECX4CHAR","FEEK")
FEE PROVIDER VL5 K
"TEMP","ECX4CHAR","FEEL")
FEE PROVIDER VL5 L
"TEMP","ECX4CHAR","FEEM")
FEE PROVIDER VL5 M
"TEMP","ECX4CHAR","FEEN")
FEE PROVIDER VL5 N
"TEMP","ECX4CHAR","FEEO")
FEE PROVIDER VL5 O
"TEMP","ECX4CHAR","FEEP")
FEE PROVIDER VL5 P
"TEMP","ECX4CHAR","FEEQ")
FEE PROVIDER VL5 Q
"TEMP","ECX4CHAR","FEER")
FEE PROVIDER VL5 R
"TEMP","ECX4CHAR","FEES")
FEE PROVIDER VL5 S
"TEMP","ECX4CHAR","FEET")
FEE PROVIDER VL5 T
"TEMP","ECX4CHAR","FEEU")
FEE PROVIDER VL5 U
"TEMP","ECX4CHAR","FEEV")
FEE PROVIDER VL5 V
"TEMP","ECX4CHAR","FEEW")
FEE PROVIDER VL5 W
"TEMP","ECX4CHAR","FEEX")
FEE PROVIDER VL5 X
"TEMP","ECX4CHAR","FEEY")
FEE PROVIDER VL5 Y
"TEMP","ECX4CHAR","FEEZ")
FEE PROVIDER VL5 Z
"TEMP","ECX4CHAR","FGHI")
Locally Defined F
"TEMP","ECX4CHAR","FLUI")
Flu Injection
"TEMP","ECX4CHAR","FNUR")
RN managed clinic F
"TEMP","ECX4CHAR","FOLU")
Follow-up
"TEMP","ECX4CHAR","FOST")
Foster Care Clinic
"TEMP","ECX4CHAR","FOTH")
F Other
"TEMP","ECX4CHAR","FPRI")
F Primary Care
"TEMP","ECX4CHAR","FRED")
Red Team F
"TEMP","ECX4CHAR","FSAT")
Satellite F
"TEMP","ECX4CHAR","FTEM")
F Team
"TEMP","ECX4CHAR","FYEL")
Yellow Team F
"TEMP","ECX4CHAR","GBLU")
Blue Team G
"TEMP","ECX4CHAR","GCBC")
CBC G
"TEMP","ECX4CHAR","GCPX")
C & P clinic profile G
"TEMP","ECX4CHAR","GERI")
GERIATRICS
"TEMP","ECX4CHAR","GERP")
Geriatric Pharmacist
"TEMP","ECX4CHAR","GHIJ")
Locally Defined G
"TEMP","ECX4CHAR","GIMA")
Guided Imagery
"TEMP","ECX4CHAR","GIPR")
GI Procedure
"TEMP","ECX4CHAR","GLCM")
Glucometer
"TEMP","ECX4CHAR","GLDA")
PRIMARY CARE GOLD A
"TEMP","ECX4CHAR","GLDB")
PRIMARY CARE GOLD B
"TEMP","ECX4CHAR","GLDC")
PRIMARY CARE GOLD C
"TEMP","ECX4CHAR","GLDD")
PRIMARY CARE GOLD D
"TEMP","ECX4CHAR","GLDE")
PRIMARY CARE GOLD E
"TEMP","ECX4CHAR","GLDF")
PRIMARY CARE GOLD F
"TEMP","ECX4CHAR","GLDG")
PRIMARY CARE GOLD G
"TEMP","ECX4CHAR","GLDH")
PRIMARY CARE GOLD H
"TEMP","ECX4CHAR","GLDI")
PRIMARY CARE GOLD I
"TEMP","ECX4CHAR","GLDJ")
PRIMARY CARE GOLD J
"TEMP","ECX4CHAR","GLDK")
PRIMARY CARE GOLD K
"TEMP","ECX4CHAR","GLDL")
PRIMARY CARE GOLD L
"TEMP","ECX4CHAR","GLDM")
PRIMARY CARE GOLD M
"TEMP","ECX4CHAR","GLDN")
PRIMARY CARE GOLD N
"TEMP","ECX4CHAR","GLDO")
PRIMARY CARE GOLD O
"TEMP","ECX4CHAR","GLDP")
PRIMARY CARE GOLD P
"TEMP","ECX4CHAR","GLDQ")
PRIMARY CARE GOLD Q
"TEMP","ECX4CHAR","GLDR")
PRIMARY CARE GOLD R
"TEMP","ECX4CHAR","GLDS")
PRIMARY CARE GOLD S
"TEMP","ECX4CHAR","GLDT")
PRIMARY CARE GOLD T
"TEMP","ECX4CHAR","GLDU")
PRIMARY CARE GOLD U
"TEMP","ECX4CHAR","GLDV")
PRIMARY CARE GOLD V
"TEMP","ECX4CHAR","GLDW")
PRIMARY CARE GOLD W
"TEMP","ECX4CHAR","GLDX")
PRIMARY CARE GOLD X
"TEMP","ECX4CHAR","GLDY")
PRIMARY CARE GOLD Y
"TEMP","ECX4CHAR","GLDZ")
PRIMARY CARE GOLD Z
"TEMP","ECX4CHAR","GMED")
Medic
"TEMP","ECX4CHAR","GNUR")
RN managed clinic G
"TEMP","ECX4CHAR","GOTH")
G Other
"TEMP","ECX4CHAR","GPRI")
G Primary Care
"TEMP","ECX4CHAR","GRED")
Red Team G
"TEMP","ECX4CHAR","GRNA")
PRIMARY CARE GREEN A
"TEMP","ECX4CHAR","GRNB")
PRIMARY CARE GREEN B
"TEMP","ECX4CHAR","GRNC")
PRIMARY CARE GREEN C
"TEMP","ECX4CHAR","GRND")
PRIMARY CARE GREEN D
"TEMP","ECX4CHAR","GRNE")
PRIMARY CARE GREEN E
"TEMP","ECX4CHAR","GRNF")
PRIMARY CARE GREEN F
"TEMP","ECX4CHAR","GRNG")
PRIMARY CARE GREEN G
"TEMP","ECX4CHAR","GRNH")
PRIMARY CARE GREEN H
"TEMP","ECX4CHAR","GRNI")
PRIMARY CARE GREEN I
"TEMP","ECX4CHAR","GRNJ")
PRIMARY CARE GREEN J
"TEMP","ECX4CHAR","GRNK")
PRIMARY CARE GREEN K
"TEMP","ECX4CHAR","GRNL")
PRIMARY CARE GREEN L
"TEMP","ECX4CHAR","GRNM")
PRIMARY CARE GREEN M
"TEMP","ECX4CHAR","GRNN")
PRIMARY CARE GREEN N
"TEMP","ECX4CHAR","GRNO")
PRIMARY CARE GREEN O
"TEMP","ECX4CHAR","GRNP")
PRIMARY CARE GREEN P
"TEMP","ECX4CHAR","GRNQ")
PRIMARY CARE GREEN Q
"TEMP","ECX4CHAR","GRNR")
PRIMARY CARE GREEN R
"TEMP","ECX4CHAR","GRNS")
PRIMARY CARE GREEN S
"TEMP","ECX4CHAR","GRNT")
PRIMARY CARE GREEN T
"TEMP","ECX4CHAR","GRNU")
PRIMARY CARE GREEN U
"TEMP","ECX4CHAR","GRNV")
PRIMARY CARE GREEN V
"TEMP","ECX4CHAR","GRNW")
PRIMARY CARE GREEN W
"TEMP","ECX4CHAR","GRNX")
PRIMARY CARE GREEN X
"TEMP","ECX4CHAR","GRNY")
PRIMARY CARE GREEN Y
"TEMP","ECX4CHAR","GRNZ")
PRIMARY CARE GREEN Z
"TEMP","ECX4CHAR","GRPA")
GROUP A
"TEMP","ECX4CHAR","GRPB")
GROUP B
"TEMP","ECX4CHAR","GRPC")
GROUP C
"TEMP","ECX4CHAR","GRPD")
GROUP D
"TEMP","ECX4CHAR","GSAT")
Satellite G
"TEMP","ECX4CHAR","GTEM")
G Team
"TEMP","ECX4CHAR","GULF")
Persian Gulf War
"TEMP","ECX4CHAR","GYEL")
Yellow Team G
"TEMP","ECX4CHAR","HBLU")
Blue Team H
"TEMP","ECX4CHAR","HBPC")
HOME BASED PRIMARY CARE
"TEMP","ECX4CHAR","HCBC")
CBC H
"TEMP","ECX4CHAR","HCHV")
HCHV in 501 Stop
"TEMP","ECX4CHAR","HCPX")
C & P clinic profile H
"TEMP","ECX4CHAR","HDDC")
Hypertension V4 CCS
"TEMP","ECX4CHAR","HDEC")
Hypertension V5 CCS
"TEMP","ECX4CHAR","HDGC")
Hypertension V7 CCS
"TEMP","ECX4CHAR","HDHC")
Hypertension V8 CCS
"TEMP","ECX4CHAR","HDJC")
Hypertension V9 CCS
"TEMP","ECX4CHAR","HDKC")
Hypertension V10 CCS
"TEMP","ECX4CHAR","HDLC")
Hypertension V11 CCS
"TEMP","ECX4CHAR","HDMC")
Hypertension V12 CCS
"TEMP","ECX4CHAR","HDNC")
Hypertension V23 CCS
"TEMP","ECX4CHAR","HDPC")
Hypertension V15 CCS
"TEMP","ECX4CHAR","HDQC")
Hypertension V16 CCS
"TEMP","ECX4CHAR","HDRC")
Hypertension V17 CCS
"TEMP","ECX4CHAR","HEMP")
Hematology Procedure
"TEMP","ECX4CHAR","HEPC")
Hepatitis C Pharmacist
"TEMP","ECX4CHAR","HIJK")
Locally Defined H
"TEMP","ECX4CHAR","HIVD")
HIV Pharmacist
"TEMP","ECX4CHAR","HNUR")
RN managed clinic H
"TEMP","ECX4CHAR","HOME")
Residential Screening
"TEMP","ECX4CHAR","HOTH")
H Other
"TEMP","ECX4CHAR","HPRI")
H Primary Care
"TEMP","ECX4CHAR","HRED")
Red Team H
"TEMP","ECX4CHAR","HSAT")
Satellite H
"TEMP","ECX4CHAR","HT00")
Hypertension Non-Specified Provider
"TEMP","ECX4CHAR","HTAC")
Hypertension V1 CCS
"TEMP","ECX4CHAR","HTBC")
Hypertension V2 CCS
"TEMP","ECX4CHAR","HTCC")
HYPERTENSION CC TEAM
"TEMP","ECX4CHAR","HTEM")
H Team
"TEMP","ECX4CHAR","HTFC")
Hypertension V6 CCS
"TEMP","ECX4CHAR","HTNP")
Hypertension Nurse Practitioner
"TEMP","ECX4CHAR","HTPA")
Hypertension Physician Assistant
"TEMP","ECX4CHAR","HTPH")
Hypertension Pharmacist
"TEMP","ECX4CHAR","HTPT")
Hypertension Physical Therapist
"TEMP","ECX4CHAR","HTRD")
Hypertension Registered Dietician
"TEMP","ECX4CHAR","HTRN")
Hypertension Registered Nurse
"TEMP","ECX4CHAR","HTSC")
Hypertension V18 CCS
"TEMP","ECX4CHAR","HTSW")
Hypertension Social Worker
"TEMP","ECX4CHAR","HTTC")
Hypertension V19 CCS
"TEMP","ECX4CHAR","HTUC")
Hypertension V20 CCS
"TEMP","ECX4CHAR","HTVC")
Hypertension V21 CCS
"TEMP","ECX4CHAR","HTWC")
Hypertension V22 CCS
"TEMP","ECX4CHAR","HYEL")
Yellow Team H
"TEMP","ECX4CHAR","HYPN")
Hypnotherapy
"TEMP","ECX4CHAR","IACT")
Feeder key inactive before start of current year
"TEMP","ECX4CHAR","IBLU")
BLUE TEAM I
"TEMP","ECX4CHAR","ICBC")
CBC I
"TEMP","ECX4CHAR","ICPX")
C&P CLINIC PROFILE I
"TEMP","ECX4CHAR","ID00")
Infectious Disease Non-Specified Provider
"TEMP","ECX4CHAR","IDAC")
Infectious Disease V1 CCS
"TEMP","ECX4CHAR","IDBC")
Infectious Disease V2 CCS
"TEMP","ECX4CHAR","IDCC")
INFECTIOUS DISEASE CC TEAM
"TEMP","ECX4CHAR","IDDC")
Infectious Disease V4 CCS
"TEMP","ECX4CHAR","IDEC")
Infectious Disease V5 CCS
"TEMP","ECX4CHAR","IDFC")
Infectious Disease V6 CCS
"TEMP","ECX4CHAR","IDGC")
Infectious Disease V7 CCS
"TEMP","ECX4CHAR","IDHC")
Infectious Disease V8 CCS
"TEMP","ECX4CHAR","IDJC")
Infectious Disease V9 CCS
"TEMP","ECX4CHAR","IDKC")
Infectious Disease V10 CCS
"TEMP","ECX4CHAR","IDLC")
Infectious Disease V11 CCS
"TEMP","ECX4CHAR","IDMC")
Infectious Disease V12 CCS
"TEMP","ECX4CHAR","IDNC")
Infectious Disease V23 CCS
"TEMP","ECX4CHAR","IDNP")
Infectious Disease Nurse Practitioner
"TEMP","ECX4CHAR","IDPA")
Infectious Disease Physician Assistant
"TEMP","ECX4CHAR","IDPC")
Infectious Disease V15 CCS
"TEMP","ECX4CHAR","IDPH")
Infectious Disease Pharmacist
"TEMP","ECX4CHAR","IDPT")
Infectious Disease Physical Therapist
"TEMP","ECX4CHAR","IDQC")
Infectious Disease V16 CCS
"TEMP","ECX4CHAR","IDRC")
Infectious Disease V17 CCS
"TEMP","ECX4CHAR","IDRD")
Infectious Disease Registered Dietician
"TEMP","ECX4CHAR","IDRN")
Infectious Disease Registered Nurse
"TEMP","ECX4CHAR","IDSC")
Infectious Disease V18 CCS
"TEMP","ECX4CHAR","IDSW")
Infectious Disease Social Worker
"TEMP","ECX4CHAR","IDTC")
Infectious Disease V19 CCS
"TEMP","ECX4CHAR","IDUC")
Infectious Disease V20 CCS
"TEMP","ECX4CHAR","IDVC")
Infectious Disease V21 CCS
"TEMP","ECX4CHAR","IDWC")
Infectious Disease V22 CCS
"TEMP","ECX4CHAR","IJKL")
Locally Defined I
"TEMP","ECX4CHAR","IMPH")
Internal Medicine Pharmacist
"TEMP","ECX4CHAR","INJX")
Injection
"TEMP","ECX4CHAR","INPT")
Inpatient
"TEMP","ECX4CHAR","INTE")
Intern
"TEMP","ECX4CHAR","INUR")
RN I
"TEMP","ECX4CHAR","INVA")
Invasive Procedure
"TEMP","ECX4CHAR","IOTH")
I Other
"TEMP","ECX4CHAR","IPRI")
I Primary Care
"TEMP","ECX4CHAR","IRED")
RED TEAM I
"TEMP","ECX4CHAR","ISAT")
Satellite I
"TEMP","ECX4CHAR","ITEM")
I Team
"TEMP","ECX4CHAR","IVRX")
IV Drugs/Meds
"TEMP","ECX4CHAR","IYEL")
YELLOW TEAM I
"TEMP","ECX4CHAR","JBLU")
BLUE TEAM J
"TEMP","ECX4CHAR","JCBC")
CBC J
"TEMP","ECX4CHAR","JCPX")
C&P CLINIC PROFILE J
"TEMP","ECX4CHAR","JKLM")
Locally Defined J
"TEMP","ECX4CHAR","JNUR")
RN J
"TEMP","ECX4CHAR","JOTH")
J Other
"TEMP","ECX4CHAR","JPRI")
J Primary Care
"TEMP","ECX4CHAR","JRED")
RED TEAM J
"TEMP","ECX4CHAR","JSAT")
Satellite J
"TEMP","ECX4CHAR","JTEM")
J Team
"TEMP","ECX4CHAR","JYEL")
YELLOW TEAM J
"TEMP","ECX4CHAR","KBLU")
BLUE TEAM K
"TEMP","ECX4CHAR","KCBC")
CBC K
"TEMP","ECX4CHAR","KCPX")
C&P CLINIC PROFILE K
"TEMP","ECX4CHAR","KLMN")
Locally Defined K
"TEMP","ECX4CHAR","KNUR")
RN K
"TEMP","ECX4CHAR","KORE")
Korean War
"TEMP","ECX4CHAR","KOTH")
K Other
"TEMP","ECX4CHAR","KPRI")
K Primary Care
"TEMP","ECX4CHAR","KRED")
RED TEAM K
"TEMP","ECX4CHAR","KSAT")
Satellite K
"TEMP","ECX4CHAR","KTEM")
K Team
"TEMP","ECX4CHAR","KTGR")
KT Group
"TEMP","ECX4CHAR","KTIN")
KT Individual
"TEMP","ECX4CHAR","KYEL")
YELLOW TEAM K
"TEMP","ECX4CHAR","LBLU")
BLUE TEAM L
"TEMP","ECX4CHAR","LCBC")
CBC L
"TEMP","ECX4CHAR","LCPX")
C&P CLINIC PROFILE L
"TEMP","ECX4CHAR","LIPD")
LIPID
"TEMP","ECX4CHAR","LMNO")
Locally Defined L
"TEMP","ECX4CHAR","LNUR")
RN L
"TEMP","ECX4CHAR","LOTH")
L Other
"TEMP","ECX4CHAR","LPNA")
LICENSED PRACTICAL NURSE A
"TEMP","ECX4CHAR","LPNB")
LICENSED PRACTICAL NURSE B
"TEMP","ECX4CHAR","LPNC")
LICENSED PRACTICAL NURSE C
"TEMP","ECX4CHAR","LPND")
LICENSED PRACTICAL NURSE D
"TEMP","ECX4CHAR","LPNE")
LICENSED PRACTICAL NURSE E
"TEMP","ECX4CHAR","LPNF")
LICENSED PRACTICAL NURSE F
"TEMP","ECX4CHAR","LPNG")
LICENSED PRACTICAL NURSE G
"TEMP","ECX4CHAR","LPNH")
LICENSED PRACTICAL NURSE H
"TEMP","ECX4CHAR","LPNI")
LICENSED PRACTICAL NURSE I
"TEMP","ECX4CHAR","LPNJ")
LICENSED PRACTICAL NURSE J
"TEMP","ECX4CHAR","LPNK")
LICENSED PRACTICAL NURSE K
"TEMP","ECX4CHAR","LPNL")
LICENSED PRACTICAL NURSE L
"TEMP","ECX4CHAR","LPNM")
LICENSED PRACTICAL NURSE M
"TEMP","ECX4CHAR","LPNN")
LICENSED PRACTICAL NURSE N
"TEMP","ECX4CHAR","LPNO")
LICENSED PRACTICAL NURSE O
"TEMP","ECX4CHAR","LPNP")
LICENSED PRACTICAL NURSE P
"TEMP","ECX4CHAR","LPNQ")
LICENSED PRACTICAL NURSE Q
"TEMP","ECX4CHAR","LPNR")
LICENSED PRACTICAL NURSE R
"TEMP","ECX4CHAR","LPNS")
LICENSED PRACTICAL NURSE S
"TEMP","ECX4CHAR","LPNT")
LICENSED PRACTICAL NURSE T
"TEMP","ECX4CHAR","LPNU")
LICENSED PRACTICAL NURSE U
"TEMP","ECX4CHAR","LPNV")
LICENSED PRACTICAL NURSE V
"TEMP","ECX4CHAR","LPNW")
LICENSED PRACTICAL NURSE W
"TEMP","ECX4CHAR","LPNX")
LICENSED PRACTICAL NURSE X
"TEMP","ECX4CHAR","LPNY")
LICENSED PRACTICAL NURSE Y
"TEMP","ECX4CHAR","LPNZ")
LICENSED PRACTICAL NURSE Z
"TEMP","ECX4CHAR","LPRI")
L Primary Care
"TEMP","ECX4CHAR","LRED")
RED TEAM L
"TEMP","ECX4CHAR","LSAT")
Satellite L
"TEMP","ECX4CHAR","LTEM")
L Team
"TEMP","ECX4CHAR","LVL1")
LEVEL 1
"TEMP","ECX4CHAR","LVL2")
LEVEL 2
"TEMP","ECX4CHAR","LVL3")
LEVEL 3
"TEMP","ECX4CHAR","LVL4")
LEVEL 4
"TEMP","ECX4CHAR","LVL5")
LEVEL 5
"TEMP","ECX4CHAR","LYEL")
YELLOW TEAM L
"TEMP","ECX4CHAR","MANT")
Mantram Repetition
"TEMP","ECX4CHAR","MATG")
MAT Group
"TEMP","ECX4CHAR","MATI")
MAT Individual
"TEMP","ECX4CHAR","MBLU")
BLUE TEAM M
"TEMP","ECX4CHAR","MBSR")
Mindfulness-Based Stress Reduction
"TEMP","ECX4CHAR","MCBC")
CBC M
"TEMP","ECX4CHAR","MCPX")
C&P CLINIC PROFILE M
"TEMP","ECX4CHAR","MDPA")
Physician Assistant
"TEMP","ECX4CHAR","MDTN")
Meditation
"TEMP","ECX4CHAR","MDXA")
PHYSICIAN EXTENDER A
"TEMP","ECX4CHAR","MDXB")
PHYSICIAN EXTENDER B
"TEMP","ECX4CHAR","MDXC")
PHYSICIAN EXTENDER C
"TEMP","ECX4CHAR","MDXD")
PHYSICIAN EXTENDER D
"TEMP","ECX4CHAR","MDXE")
PHYSICIAN EXTENDER E
"TEMP","ECX4CHAR","MDXF")
PHYSICIAN EXTENDER F
"TEMP","ECX4CHAR","MDXG")
PHYSICIAN EXTENDER G
"TEMP","ECX4CHAR","MDXH")
PHYSICIAN EXTENDER H
"TEMP","ECX4CHAR","MDXI")
PHYSICIAN EXTENDER I
"TEMP","ECX4CHAR","MDXJ")
PHYSICIAN EXTENDER J
"TEMP","ECX4CHAR","MDXK")
PHYSICIAN EXTENDER K
"TEMP","ECX4CHAR","MDXL")
PHYSICIAN EXTENDER L
"TEMP","ECX4CHAR","MDXM")
PHYSICIAN EXTENDER M
"TEMP","ECX4CHAR","MDXN")
PHYSICIAN EXTENDER N
"TEMP","ECX4CHAR","MDXO")
PHYSICIAN EXTENDER O
"TEMP","ECX4CHAR","MDXP")
PHYSICIAN EXTENDER P
"TEMP","ECX4CHAR","MDXQ")
PHYSICIAN EXTENDER Q
"TEMP","ECX4CHAR","MDXR")
PHYSICIAN EXTENDER R
"TEMP","ECX4CHAR","MDXS")
PHYSICIAN EXTENDER S
"TEMP","ECX4CHAR","MDXT")
PHYSICIAN EXTENDER T
"TEMP","ECX4CHAR","MDXU")
PHYSICIAN EXTENDER U
"TEMP","ECX4CHAR","MDXV")
PHYSICIAN EXTENDER V
"TEMP","ECX4CHAR","MDXW")
PHYSICIAN EXTENDER W
"TEMP","ECX4CHAR","MDXX")
PHYSICIAN EXTENDER X
"TEMP","ECX4CHAR","MDXY")
PHYSICIAN EXTENDER Y
"TEMP","ECX4CHAR","MDXZ")
PHYSICIAN EXTENDER Z
"TEMP","ECX4CHAR","MH00")
Mental Health Non-Specified Provider
"TEMP","ECX4CHAR","MHAC")
Mental Health V1 CCS
"TEMP","ECX4CHAR","MHBC")
Mental Health V2 CCS
"TEMP","ECX4CHAR","MHCC")
MENTAL HEALTH CC TEAM
"TEMP","ECX4CHAR","MHDC")
Mental Health V4 CCS
"TEMP","ECX4CHAR","MHEC")
Mental Health V5 CCS
"TEMP","ECX4CHAR","MHFC")
Mental Health V6 CCS
"TEMP","ECX4CHAR","MHGC")
Mental Health V7 CCS
"TEMP","ECX4CHAR","MHHC")
Mental Health V8 CCS
"TEMP","ECX4CHAR","MHJC")
Mental Health V9 CCS
"TEMP","ECX4CHAR","MHKC")
Mental Health V10 CCS
"TEMP","ECX4CHAR","MHLC")
Mental Health V11 CCS
"TEMP","ECX4CHAR","MHMC")
Mental Health V12 CCS
"TEMP","ECX4CHAR","MHMT")
Mental Health-MH Therapist
"TEMP","ECX4CHAR","MHNC")
Mental Health V23 CCS
"TEMP","ECX4CHAR","MHNP")
Mental Health Nurse Practitioner
"TEMP","ECX4CHAR","MHPA")
Mental Health Physician Assistant
"TEMP","ECX4CHAR","MHPC")
Mental Health V15 CCS
"TEMP","ECX4CHAR","MHPH")
Mental Health Pharmacist
"TEMP","ECX4CHAR","MHPS")
Mental Health-Psychologist
"TEMP","ECX4CHAR","MHPT")
Mental Health Physical Therapist
"TEMP","ECX4CHAR","MHQC")
Mental Health V16 CCS
"TEMP","ECX4CHAR","MHRC")
Mental Health V17 CCS
"TEMP","ECX4CHAR","MHRD")
Mental Health Registered Dietician
"TEMP","ECX4CHAR","MHRN")
Mental Health Registered Nurse
"TEMP","ECX4CHAR","MHSC")
Mental Health V18 CCS
"TEMP","ECX4CHAR","MHSW")
Mental Health Social Worker
"TEMP","ECX4CHAR","MHTC")
Mental Health V19 CCS
"TEMP","ECX4CHAR","MHUC")
Mental Health V20 CCS
"TEMP","ECX4CHAR","MHVC")
Mental Health V21 CCS
"TEMP","ECX4CHAR","MHWC")
Mental Health V22 CCS
"TEMP","ECX4CHAR","MICM")
MH INTENSIVE CASE MGMT
"TEMP","ECX4CHAR","MISC")
Miscellaneous Procedure
"TEMP","ECX4CHAR","MM00")
Multiple Co-Morbidities Non-Specified Provider
"TEMP","ECX4CHAR","MMCC")
Multiple Co-Morbidities CC Team
"TEMP","ECX4CHAR","MMMT")
Multiple CoMorbidities-MH Therapist
"TEMP","ECX4CHAR","MMNP")
Multiple Co-Morbidities Nurse Practitioner
"TEMP","ECX4CHAR","MMPA")
Multiple Co-Morbidities Physician Assistant
"TEMP","ECX4CHAR","MMPH")
Multiple Co-Morbidities Pharmacist
"TEMP","ECX4CHAR","MMPS")
Multiple CoMorbidities-Psychologist
"TEMP","ECX4CHAR","MMPT")
Multiple Co-Morbidities Physical Therapist
"TEMP","ECX4CHAR","MMRD")
Multiple Co-Morbidities Registered Dietician
"TEMP","ECX4CHAR","MMRN")
Multiple Co-Morbidities Registered Nurse
"TEMP","ECX4CHAR","MMSW")
Multiple Co-Morbidities Social Worker
"TEMP","ECX4CHAR","MNHM")
Main Health Maintenance
"TEMP","ECX4CHAR","MNOP")
Locally Defined M
"TEMP","ECX4CHAR","MNUR")
RN M
"TEMP","ECX4CHAR","MOTH")
M Other
"TEMP","ECX4CHAR","MPAA")
PHYSICIAN ASSISTANT A
"TEMP","ECX4CHAR","MPAB")
PHYSICIAN ASSISTANT B
"TEMP","ECX4CHAR","MPAC")
PHYSICIAN ASSISTANT C
"TEMP","ECX4CHAR","MPAD")
PHYSICIAN ASSISTANT D
"TEMP","ECX4CHAR","MPAE")
PHYSICIAN ASSISTANT E
"TEMP","ECX4CHAR","MPAF")
PHYSICIAN ASSISTANT F
"TEMP","ECX4CHAR","MPAG")
PHYSICIAN ASSISTANT G
"TEMP","ECX4CHAR","MPAH")
PHYSICIAN ASSISTANT H
"TEMP","ECX4CHAR","MPAI")
PHYSICIAN ASSISTANT I
"TEMP","ECX4CHAR","MPAJ")
PHYSICIAN ASSISTANT J
"TEMP","ECX4CHAR","MPAK")
PHYSICIAN ASSISTANT K
"TEMP","ECX4CHAR","MPAL")
PHYSICIAN ASSISTANT L
"TEMP","ECX4CHAR","MPAM")
PHYSICIAN ASSISTANT M
"TEMP","ECX4CHAR","MPAN")
PHYSICIAN ASSISTANT N
"TEMP","ECX4CHAR","MPAO")
PHYSICIAN ASSISTANT O
"TEMP","ECX4CHAR","MPAP")
PHYSICIAN ASSISTANT P
"TEMP","ECX4CHAR","MPAQ")
PHYSICIAN ASSISTANT Q
"TEMP","ECX4CHAR","MPAR")
PHYSICIAN ASSISTANT R
"TEMP","ECX4CHAR","MPAS")
PHYSICIAN ASSISTANT S
"TEMP","ECX4CHAR","MPAT")
PHYSICIAN ASSISTANT T
"TEMP","ECX4CHAR","MPAU")
PHYSICIAN ASSISTANT U
"TEMP","ECX4CHAR","MPAV")
PHYSICIAN ASSISTANT V
"TEMP","ECX4CHAR","MPAW")
PHYSICIAN ASSISTANT W
"TEMP","ECX4CHAR","MPAX")
PHYSICIAN ASSISTANT X
"TEMP","ECX4CHAR","MPAY")
PHYSICIAN ASSISTANT Y
"TEMP","ECX4CHAR","MPAZ")
PHYSICIAN ASSISTANT Z
"TEMP","ECX4CHAR","MPRI")
M Primary Care
"TEMP","ECX4CHAR","MREC")
Medication Reconciliation Pharmacist
"TEMP","ECX4CHAR","MRED")
RED TEAM M
"TEMP","ECX4CHAR","MSAT")
Satellite M
"TEMP","ECX4CHAR","MSCE")
MS Center of Excellence
"TEMP","ECX4CHAR","MSGT")
Massage therapy
"TEMP","ECX4CHAR","MTEM")
M Team
"TEMP","ECX4CHAR","MTFN")
MTF LIAISON BY NURSE
"TEMP","ECX4CHAR","MTFS")
MTF LIAISON BY SW
"TEMP","ECX4CHAR","MTMP")
Medication Therapy Management Pharmacist
"TEMP","ECX4CHAR","MVDT")
MOVE DIETARY TECHNICIAN
"TEMP","ECX4CHAR","MVKT")
MOVE KINESIOTHERAPIST
"TEMP","ECX4CHAR","MVLP")
MOVE LICENSED PRACTICAL NURSE
"TEMP","ECX4CHAR","MVMD")
MOVE PHYSICIAN
"TEMP","ECX4CHAR","MVNP")
MOVE NURSE PRACTITIONER
"TEMP","ECX4CHAR","MVOO")
MOVE NON-SPECIFIED PROVIDER
"TEMP","ECX4CHAR","MVOT")
MOVE OCCUPATIONAL THERAPIST
"TEMP","ECX4CHAR","MVPA")
MOVE PHYSICIAN ASSISTANT
"TEMP","ECX4CHAR","MVPH")
MOVE PHARMACIST
"TEMP","ECX4CHAR","MVPT")
MOVE PHYSICAL THERAPIST
"TEMP","ECX4CHAR","MVPY")
MOVE PSYCHOLOGIST
"TEMP","ECX4CHAR","MVRD")
MOVE REGISTERED DIETITIAN
"TEMP","ECX4CHAR","MVRN")
MOVE REGISTERED NURSE
"TEMP","ECX4CHAR","MVRT")
MOVE RECREATION THERAPIST
"TEMP","ECX4CHAR","MVSW")
MOVE SOCIAL WORKER
"TEMP","ECX4CHAR","MYEL")
YELLOW TEAM M
"TEMP","ECX4CHAR","NAHL")
Native American healing
"TEMP","ECX4CHAR","NASA")
NURSE ASSISTANT A
"TEMP","ECX4CHAR","NASB")
NURSE ASSISTANT B
"TEMP","ECX4CHAR","NASC")
NURSE ASSISTANT C
"TEMP","ECX4CHAR","NASD")
NURSE ASSISTANT D
"TEMP","ECX4CHAR","NASE")
NURSE ASSISTANT E
"TEMP","ECX4CHAR","NASF")
NURSE ASSISTANT F
"TEMP","ECX4CHAR","NASG")
NURSE ASSISTANT G
"TEMP","ECX4CHAR","NASH")
NURSE ASSISTANT H
"TEMP","ECX4CHAR","NASI")
NURSE ASSISTANT I
"TEMP","ECX4CHAR","NASJ")
NURSE ASSISTANT J
"TEMP","ECX4CHAR","NASK")
NURSE ASSISTANT K
"TEMP","ECX4CHAR","NASL")
NURSE ASSISTANT L
"TEMP","ECX4CHAR","NASM")
NURSE ASSISTANT M
"TEMP","ECX4CHAR","NASN")
NURSE ASSISTANT N
"TEMP","ECX4CHAR","NASO")
NURSE ASSISTANT O
"TEMP","ECX4CHAR","NASP")
NURSE ASSISTANT P
"TEMP","ECX4CHAR","NASQ")
NURSE ASSISTANT Q
"TEMP","ECX4CHAR","NASR")
NURSE ASSISTANT R
"TEMP","ECX4CHAR","NASS")
Nurse Assistant
"TEMP","ECX4CHAR","NAST")
NURSE ASSISTANT T
"TEMP","ECX4CHAR","NASU")
NURSE ASSISTANT U
"TEMP","ECX4CHAR","NASV")
NURSE ASSISTANT V
"TEMP","ECX4CHAR","NASW")
NURSE ASSISTANT W
"TEMP","ECX4CHAR","NASX")
NURSE ASSISTANT X
"TEMP","ECX4CHAR","NASY")
NURSE ASSISTANT Y
"TEMP","ECX4CHAR","NASZ")
NURSE ASSISTANT Z
"TEMP","ECX4CHAR","NBLU")
BLUE TEAM N
"TEMP","ECX4CHAR","NCBC")
CBC N
"TEMP","ECX4CHAR","NCCH")
Nat'lCallCtrforHomelessVets
"TEMP","ECX4CHAR","NCPX")
C&P CLINIC PROFILE N
"TEMP","ECX4CHAR","NDTR")
Nutrition Diet Tech Registered
"TEMP","ECX4CHAR","NEUR")
Neurology Pharmacist
"TEMP","ECX4CHAR","NFPA")
Non-Formulary/Prior Approval Pharmacist
"TEMP","ECX4CHAR","NILC")
NonInstitutional LTC
"TEMP","ECX4CHAR","NNUR")
RN N
"TEMP","ECX4CHAR","NONC")
Noncount for DSS (usually point to Stats;AC6)
"TEMP","ECX4CHAR","NOPQ")
Locally Defined N
"TEMP","ECX4CHAR","NOTH")
N Other
"TEMP","ECX4CHAR","NPRA")
NURSE PRACTITIONER A
"TEMP","ECX4CHAR","NPRB")
NURSE PRACTITIONER B
"TEMP","ECX4CHAR","NPRC")
NURSE PRACTITIONER C
"TEMP","ECX4CHAR","NPRD")
NURSE PRACTITIONER D
"TEMP","ECX4CHAR","NPRE")
NURSE PRACTITIONER E
"TEMP","ECX4CHAR","NPRF")
NURSE PRACTITIONER F
"TEMP","ECX4CHAR","NPRG")
NURSE PRACTITIONER G
"TEMP","ECX4CHAR","NPRH")
NURSE PRACTITIONER H
"TEMP","ECX4CHAR","NPRI")
N Primary Care
"TEMP","ECX4CHAR","NPRJ")
NURSE PRACTITIONER J
"TEMP","ECX4CHAR","NPRK")
NURSE PRACTITIONER K
"TEMP","ECX4CHAR","NPRL")
NURSE PRACTITIONER L
"TEMP","ECX4CHAR","NPRM")
NURSE PRACTITIONER M
"TEMP","ECX4CHAR","NPRN")
Nurse Practitioner
"TEMP","ECX4CHAR","NPRO")
NURSE PRACTITIONER O
"TEMP","ECX4CHAR","NPRP")
NURSE PRACTITIONER P
"TEMP","ECX4CHAR","NPRQ")
NURSE PRACTITIONER Q
"TEMP","ECX4CHAR","NPRR")
NURSE PRACTITIONER R
"TEMP","ECX4CHAR","NPRS")
NURSE PRACTITIONER S
"TEMP","ECX4CHAR","NPRT")
NURSE PRACTITIONER T
"TEMP","ECX4CHAR","NPRU")
NURSE PRACTITIONER U
"TEMP","ECX4CHAR","NPRV")
NURSE PRACTITIONER V
"TEMP","ECX4CHAR","NPRW")
NURSE PRACTITIONER W
"TEMP","ECX4CHAR","NPRX")
NURSE PRACTITIONER X
"TEMP","ECX4CHAR","NPRY")
NURSE PRACTITIONER Y
"TEMP","ECX4CHAR","NPRZ")
NURSE PRACTITIONER Z
"TEMP","ECX4CHAR","NRED")
RED TEAM N
"TEMP","ECX4CHAR","NSAT")
Satellite N
"TEMP","ECX4CHAR","NSPH")
Nutritional Support Pharmacist
"TEMP","ECX4CHAR","NTEM")
N Team
"TEMP","ECX4CHAR","NUCL")
Nuclear Medicine Pharmacist
"TEMP","ECX4CHAR","NUDT")
Nutrition Diet Tech
"TEMP","ECX4CHAR","NUMV")
Nutritionist-MOVE
"TEMP","ECX4CHAR","NURA")
NURSE A
"TEMP","ECX4CHAR","NURB")
NURSE B
"TEMP","ECX4CHAR","NURC")
NURSE C
"TEMP","ECX4CHAR","NURD")
NURSE D
"TEMP","ECX4CHAR","NURE")
NURSE E
"TEMP","ECX4CHAR","NURF")
NURSE F
"TEMP","ECX4CHAR","NURG")
NURSE G
"TEMP","ECX4CHAR","NURH")
NURSE H
"TEMP","ECX4CHAR","NURI")
NURSE I
"TEMP","ECX4CHAR","NURJ")
NURSE J
"TEMP","ECX4CHAR","NURK")
NURSE K
"TEMP","ECX4CHAR","NURL")
NURSE L
"TEMP","ECX4CHAR","NURM")
NURSE M
"TEMP","ECX4CHAR","NURN")
NURSE N
"TEMP","ECX4CHAR","NURO")
NURSE O
"TEMP","ECX4CHAR","NURP")
NURSE P
"TEMP","ECX4CHAR","NURQ")
NURSE Q
"TEMP","ECX4CHAR","NURR")
NURSE R
"TEMP","ECX4CHAR","NURS")
Nurse
"TEMP","ECX4CHAR","NURT")
NURSE T
"TEMP","ECX4CHAR","NURU")
NURSE U
"TEMP","ECX4CHAR","NURV")
NURSE V
"TEMP","ECX4CHAR","NURW")
NURSE W
"TEMP","ECX4CHAR","NURX")
NURSE X
"TEMP","ECX4CHAR","NURY")
NURSE Y
"TEMP","ECX4CHAR","NURZ")
NURSE Z
"TEMP","ECX4CHAR","NUTR")
Nutrition Staff
"TEMP","ECX4CHAR","NYEL")
YELLOW TEAM N
"TEMP","ECX4CHAR","OBLU")
BLUE TEAM O
"TEMP","ECX4CHAR","OCBC")
CBC O
"TEMP","ECX4CHAR","OCPX")
C&P CLINIC PROFILE O
"TEMP","ECX4CHAR","OEFN")
OEF/OIF CSMG BY NURSE
"TEMP","ECX4CHAR","OEFS")
OEF/OIF CSMG BY SOCIAL WORKER
"TEMP","ECX4CHAR","OFFF")
Off
"TEMP","ECX4CHAR","ONCO")
Oncology Pharmacist
"TEMP","ECX4CHAR","ONNN")
On 
"TEMP","ECX4CHAR","ONUR")
RN O
"TEMP","ECX4CHAR","OOTH")
O Other
"TEMP","ECX4CHAR","OPFT")
O&P FITTER
"TEMP","ECX4CHAR","OPOR")
O&P ORTHOTIST
"TEMP","ECX4CHAR","OPPE")
O&P PEDORTHIST
"TEMP","ECX4CHAR","OPPO")
O&P PROSTH/ORTH(DUAL)
"TEMP","ECX4CHAR","OPPR")
O&P PROSTHETIST
"TEMP","ECX4CHAR","OPQR")
Locally Defined O
"TEMP","ECX4CHAR","OPRI")
O Primary Care
"TEMP","ECX4CHAR","OPTC")
Ophthalmology Technician
"TEMP","ECX4CHAR","OPTH")
Ophthalmology Pharmacist
"TEMP","ECX4CHAR","ORED")
RED TEAM O
"TEMP","ECX4CHAR","OSAT")
Satellite O
"TEMP","ECX4CHAR","OTEM")
O Team
"TEMP","ECX4CHAR","OTGR")
OT Group
"TEMP","ECX4CHAR","OTHA")
Other 1
"TEMP","ECX4CHAR","OTHB")
Other 2
"TEMP","ECX4CHAR","OTHC")
Other 3
"TEMP","ECX4CHAR","OTHD")
Other 4
"TEMP","ECX4CHAR","OTHE")
Other 5
"TEMP","ECX4CHAR","OTHF")
Other 6
"TEMP","ECX4CHAR","OTHG")
Other 7
"TEMP","ECX4CHAR","OTHH")
OTHER 8
"TEMP","ECX4CHAR","OTHI")
OTHER 9
"TEMP","ECX4CHAR","OTHJ")
OTHER 10
"TEMP","ECX4CHAR","OTHK")
OTHER 11
"TEMP","ECX4CHAR","OTHL")
OTHER 12
"TEMP","ECX4CHAR","OTHM")
OTHER 13
"TEMP","ECX4CHAR","OTHN")
OTHER 14
"TEMP","ECX4CHAR","OTHO")
OTHER 15
"TEMP","ECX4CHAR","OTHP")
OTHER 16
"TEMP","ECX4CHAR","OTHQ")
OTHER 17
"TEMP","ECX4CHAR","OTHR")
OTHER 18
"TEMP","ECX4CHAR","OTHS")
OTHER 19
"TEMP","ECX4CHAR","OTHT")
OTHER 20
"TEMP","ECX4CHAR","OTHU")
OTHER 21
"TEMP","ECX4CHAR","OTHV")
OTHER 22
"TEMP","ECX4CHAR","OTHW")
OTHER 23
"TEMP","ECX4CHAR","OTHX")
OTHER 24
"TEMP","ECX4CHAR","OTHY")
OTHER 25
"TEMP","ECX4CHAR","OTHZ")
OTHER 26
"TEMP","ECX4CHAR","OTIN")
OT Individual
"TEMP","ECX4CHAR","OUTP")
Outpatient
"TEMP","ECX4CHAR","OYEL")
YELLOW TEAM O
"TEMP","ECX4CHAR","PACP")
PACT Anticoag Tm Pharmacist
"TEMP","ECX4CHAR","PACT")
Patient Aligned Care Team
"TEMP","ECX4CHAR","PADR")
PADRECC
"TEMP","ECX4CHAR","PBED")
Pre Bed Care
"TEMP","ECX4CHAR","PBLU")
BLUE TEAM P
"TEMP","ECX4CHAR","PCBC")
CBC P
"TEMP","ECX4CHAR","PCCP")
PHARMACY CALL CTR PHARMACIST
"TEMP","ECX4CHAR","PCPX")
C&P CLINIC PROFILE P
"TEMP","ECX4CHAR","PD00")
Pulmonary Disease Non-Specified Provider
"TEMP","ECX4CHAR","PDAC")
Pulmonary Disease V1 CCS
"TEMP","ECX4CHAR","PDBC")
Pulmonary Disease V2 CCS
"TEMP","ECX4CHAR","PDCC")
PULMONARY DISEASE CC TEAM
"TEMP","ECX4CHAR","PDDC")
Pulmonary Disease V4 CCS
"TEMP","ECX4CHAR","PDEC")
Pulmonary Disease V5 CCS
"TEMP","ECX4CHAR","PDFC")
Pulmonary Disease V6 CCS
"TEMP","ECX4CHAR","PDGC")
Pulmonary Disease V7 CCS
"TEMP","ECX4CHAR","PDHC")
Pulmonary Disease V8 CCS
"TEMP","ECX4CHAR","PDIA")
PILOT DIALYSIS
"TEMP","ECX4CHAR","PDJC")
Pulmonary Disease V9 CCS
"TEMP","ECX4CHAR","PDKC")
Pulmonary Disease V10 CCS
"TEMP","ECX4CHAR","PDLC")
Pulmonary Disease V11 CCS
"TEMP","ECX4CHAR","PDMC")
Pulmonary Disease V12 CCS
"TEMP","ECX4CHAR","PDNC")
Pulmonary Disease V23 CCS
"TEMP","ECX4CHAR","PDNP")
Pulmonary Disease Nurse Practitioner
"TEMP","ECX4CHAR","PDPA")
Pulmonary Disease Physician Assistant
"TEMP","ECX4CHAR","PDPC")
Pulmonary Disease V15 CCS
"TEMP","ECX4CHAR","PDPH")
Pulmonary Disease Pharmacist
"TEMP","ECX4CHAR","PDPT")
Pulmonary Disease Physical Therapist
"TEMP","ECX4CHAR","PDQC")
Pulmonary Disease V16 CCS
"TEMP","ECX4CHAR","PDRC")
Pulmonary Disease V17 CCS
"TEMP","ECX4CHAR","PDRD")
Pulmonary Disease Registered Dietician
"TEMP","ECX4CHAR","PDRN")
Pulmonary Disease Registered Nurse
"TEMP","ECX4CHAR","PDSC")
Pulmonary Disease V18 CCS
"TEMP","ECX4CHAR","PDSW")
Pulmonary Disease Social Worker
"TEMP","ECX4CHAR","PDTC")
Pulmonary Disease V19 CCS
"TEMP","ECX4CHAR","PDUC")
Pulmonary Disease V20 CCS
"TEMP","ECX4CHAR","PDVC")
Pulmonary Disease V21 CCS
"TEMP","ECX4CHAR","PDWC")
Pulmonary Disease V22 CCS
"TEMP","ECX4CHAR","PGEN")
Pharmacogenomics Pharmacist
"TEMP","ECX4CHAR","PHRM")
Clinical Pharmacy
"TEMP","ECX4CHAR","PILA")
Pilates
"TEMP","ECX4CHAR","PIMI")
Polytrauma Integ Med Init
"TEMP","ECX4CHAR","PKPH")
Pharmacokinetics Pharmacist
"TEMP","ECX4CHAR","PL00")
Palliative Non-Specified Provider
"TEMP","ECX4CHAR","PLCC")
Palliative CC Team
"TEMP","ECX4CHAR","PLCH")
PALLIATIVE CHAPLAIN
"TEMP","ECX4CHAR","PLMT")
Palliative Care-MH Therapist
"TEMP","ECX4CHAR","PLNP")
Palliative Nurse Practitioner
"TEMP","ECX4CHAR","PLPA")
Palliative Physician Assistant
"TEMP","ECX4CHAR","PLPH")
Palliative Pharmacist
"TEMP","ECX4CHAR","PLPS")
Palliative Care-Psychologist
"TEMP","ECX4CHAR","PLPT")
Palliative Physical Therapist
"TEMP","ECX4CHAR","PLRD")
Palliative Registered Dietician
"TEMP","ECX4CHAR","PLRN")
Palliative Registered Nurse
"TEMP","ECX4CHAR","PLSW")
Palliative Social Worker
"TEMP","ECX4CHAR","PLTA")
PRIMARY CARE PLATINUM A
"TEMP","ECX4CHAR","PLTB")
PRIMARY CARE PLATINUM B
"TEMP","ECX4CHAR","PLTC")
PRIMARY CARE PLATINUM C
"TEMP","ECX4CHAR","PLTD")
PRIMARY CARE PLATINUM D
"TEMP","ECX4CHAR","PLTE")
PRIMARY CARE PLATINUM E
"TEMP","ECX4CHAR","PLTF")
PRIMARY CARE PLATINUM F
"TEMP","ECX4CHAR","PLTG")
PRIMARY CARE PLATINUM G
"TEMP","ECX4CHAR","PLTH")
PRIMARY CARE PLATINUM H
"TEMP","ECX4CHAR","PLTI")
PRIMARY CARE PLATINUM I
"TEMP","ECX4CHAR","PLTJ")
PRIMARY CARE PLATINUM J
"TEMP","ECX4CHAR","PLTK")
PRIMARY CARE PLATINUM K
"TEMP","ECX4CHAR","PLTL")
PRIMARY CARE PLATINUM L
"TEMP","ECX4CHAR","PLTM")
PRIMARY CARE PLATINUM M
"TEMP","ECX4CHAR","PLTN")
PRIMARY CARE PLATINUM N
"TEMP","ECX4CHAR","PLTO")
PRIMARY CARE PLATINUM O
"TEMP","ECX4CHAR","PLTP")
PRIMARY CARE PLATINUM P
"TEMP","ECX4CHAR","PLTQ")
PRIMARY CARE PLATINUM Q
"TEMP","ECX4CHAR","PLTR")
Polytrauma PRC
"TEMP","ECX4CHAR","PLTS")
PRIMARY CARE PLATINUM S
"TEMP","ECX4CHAR","PLTT")
PRIMARY CARE PLATINUM T
"TEMP","ECX4CHAR","PLTU")
PRIMARY CARE PLATINUM U
"TEMP","ECX4CHAR","PLTV")
TBI CVT Telehealth Eval
"TEMP","ECX4CHAR","PLTW")
PRIMARY CARE PLATINUM W
"TEMP","ECX4CHAR","PLTX")
PRIMARY CARE PLATINUM X
"TEMP","ECX4CHAR","PLTY")
PRIMARY CARE PLATINUM Y
"TEMP","ECX4CHAR","PLTZ")
PRIMARY CARE PLATINUM Z
"TEMP","ECX4CHAR","PN00")
Pain Management Non-Specified Provider
"TEMP","ECX4CHAR","PNAC")
Pain Management V1 CCS
"TEMP","ECX4CHAR","PNBC")
Pain Management V2 CCS
"TEMP","ECX4CHAR","PNCC")
PAIN MANAGEMENT CC TEAM
"TEMP","ECX4CHAR","PNDC")
Pain Management V4 CCS
"TEMP","ECX4CHAR","PNEC")
Pain Management V5 CCS
"TEMP","ECX4CHAR","PNFC")
Pain Management V6 CCS
"TEMP","ECX4CHAR","PNGC")
Pain Management V7 CCS
"TEMP","ECX4CHAR","PNHC")
Pain Management V8 CCS
"TEMP","ECX4CHAR","PNJC")
Pain Management V9 CCS
"TEMP","ECX4CHAR","PNKC")
Pain Management V10 CCS
"TEMP","ECX4CHAR","PNLC")
Pain Management V11 CCS
"TEMP","ECX4CHAR","PNMC")
Pain Management V12 CCS
"TEMP","ECX4CHAR","PNNC")
Pain Management V23 CCS
"TEMP","ECX4CHAR","PNNP")
Pain Management Nurse Practitioner
"TEMP","ECX4CHAR","PNPA")
Pain Management Physician Assistant
"TEMP","ECX4CHAR","PNPC")
Pain Management V15 CCS
"TEMP","ECX4CHAR","PNPH")
Pain Management Pharmacist
"TEMP","ECX4CHAR","PNPT")
Pain Management Physical Therapist
"TEMP","ECX4CHAR","PNQC")
Pain Management V16 CCS
"TEMP","ECX4CHAR","PNRC")
Pain Management V17 CCS
"TEMP","ECX4CHAR","PNRD")
Pain Management Registered Dietician
"TEMP","ECX4CHAR","PNRN")
Pain Management Registered Nurse
"TEMP","ECX4CHAR","PNSC")
Pain Management V18 CCS
"TEMP","ECX4CHAR","PNSW")
Pain Management Social Worker
"TEMP","ECX4CHAR","PNTC")
Pain Management V19 CCS
"TEMP","ECX4CHAR","PNUC")
Pain Management V20 CCS
"TEMP","ECX4CHAR","PNUR")
RN P
"TEMP","ECX4CHAR","PNVC")
Pain Management V21 CCS
"TEMP","ECX4CHAR","PNWC")
Pain Management V22 CCS
"TEMP","ECX4CHAR","POLY")
POLYTRAUMA
"TEMP","ECX4CHAR","POTH")
P Other
"TEMP","ECX4CHAR","POWO")
Men POWs
"TEMP","ECX4CHAR","POWW")
Women POWs
"TEMP","ECX4CHAR","PPRI")
P Primary Care
"TEMP","ECX4CHAR","PQRS")
Locally Defined P
"TEMP","ECX4CHAR","PRED")
RED TEAM P
"TEMP","ECX4CHAR","PREV")
Prevention
"TEMP","ECX4CHAR","PRIA")
Primary Care Team 1
"TEMP","ECX4CHAR","PRIB")
Primary Care Team 2
"TEMP","ECX4CHAR","PRIC")
Primary Care Team 3
"TEMP","ECX4CHAR","PRID")
Primary Care Team 4
"TEMP","ECX4CHAR","PRIE")
Primary Care Team 5
"TEMP","ECX4CHAR","PRIF")
PRIMARY CARE TEAM 6
"TEMP","ECX4CHAR","PRIG")
PRIMARY CARE TEAM 7
"TEMP","ECX4CHAR","PRIH")
PRIMARY CARE TEAM 8
"TEMP","ECX4CHAR","PRII")
PRIMARY CARE TEAM 9
"TEMP","ECX4CHAR","PRIJ")
PRIMARY CARE TEAM 10
"TEMP","ECX4CHAR","PRIK")
PRIMARY CARE TEAM 11
"TEMP","ECX4CHAR","PRIL")
PRIMARY CARE TEAM 12
"TEMP","ECX4CHAR","PRIM")
PRIMARY CARE TEAM 13
"TEMP","ECX4CHAR","PRIN")
PRIMARY CARE TEAM 14
"TEMP","ECX4CHAR","PRIO")
PRIMARY CARE TEAM 15
"TEMP","ECX4CHAR","PRIP")
PRIMARY CARE TEAM 16
"TEMP","ECX4CHAR","PRIQ")
PRIMARY CARE TEAM 17
"TEMP","ECX4CHAR","PRIR")
PRIMARY CARE TEAM 18
"TEMP","ECX4CHAR","PRIS")
PRIMARY CARE TEAM 19
"TEMP","ECX4CHAR","PRIT")
PRIMARY CARE TEAM 20
"TEMP","ECX4CHAR","PRIU")
PRIMARY CARE TEAM 21
"TEMP","ECX4CHAR","PRIV")
PRIMARY CARE TEAM 22
"TEMP","ECX4CHAR","PRIW")
PRIMARY CARE TEAM 23
"TEMP","ECX4CHAR","PRIX")
PRIMARY CARE TEAM 24
"TEMP","ECX4CHAR","PRIY")
PRIMARY CARE TEAM 25
"TEMP","ECX4CHAR","PRIZ")
PRIMARY CARE TEAM 26
"TEMP","ECX4CHAR","PROC")
Procedure
"TEMP","ECX4CHAR","PROP")
Preoperative
"TEMP","ECX4CHAR","PSAT")
Satellite P
"TEMP","ECX4CHAR","PSOA")
PSYCHOLOGIST A
"TEMP","ECX4CHAR","PSOB")
PSYCHOLOGIST B
"TEMP","ECX4CHAR","PSOC")
PSYCHOLOGIST C
"TEMP","ECX4CHAR","PSOD")
PSYCHOLOGIST D
"TEMP","ECX4CHAR","PSOE")
PSYCHOLOGIST E
"TEMP","ECX4CHAR","PSYC")
Psychologist
"TEMP","ECX4CHAR","PTEM")
P Team
"TEMP","ECX4CHAR","PTGR")
PT Group
"TEMP","ECX4CHAR","PTIN")
PT Individual
"TEMP","ECX4CHAR","PTPH")
Polytrauma Pharmacist
"TEMP","ECX4CHAR","PYEL")
YELLOW TEAM P
"TEMP","ECX4CHAR","QBLU")
BLUE TEAM Q
"TEMP","ECX4CHAR","QCBC")
CBC Q
"TEMP","ECX4CHAR","QCPX")
C&P CLINIC PROFILE Q
"TEMP","ECX4CHAR","QNUR")
RN Q
"TEMP","ECX4CHAR","QOTH")
Q Other
"TEMP","ECX4CHAR","QPRI")
Q Primary Care
"TEMP","ECX4CHAR","QRED")
RED TEAM Q
"TEMP","ECX4CHAR","QRST")
Locally Defined Q
"TEMP","ECX4CHAR","QSAT")
Satellite Q
"TEMP","ECX4CHAR","QTEM")
Q Team
"TEMP","ECX4CHAR","QYEL")
YELLOW TEAM Q
"TEMP","ECX4CHAR","RBLU")
BLUE TEAM R
"TEMP","ECX4CHAR","RCBC")
CBC R
"TEMP","ECX4CHAR","RCPX")
C&P CLINIC PROFILE R
"TEMP","ECX4CHAR","RDMV")
Registered Dietitian-MOVE
"TEMP","ECX4CHAR","RDNU")
Nutrition Registered Dietitian
"TEMP","ECX4CHAR","RECR")
Recreation Therapy
"TEMP","ECX4CHAR","REDA")
PRIMARY CARE RED A
"TEMP","ECX4CHAR","REDB")
PRIMARY CARE RED B
"TEMP","ECX4CHAR","REDC")
PRIMARY CARE RED C
"TEMP","ECX4CHAR","REDD")
PRIMARY CARE RED D
"TEMP","ECX4CHAR","REDE")
PRIMARY CARE RED E
"TEMP","ECX4CHAR","REDF")
PRIMARY CARE RED F
"TEMP","ECX4CHAR","REDG")
PRIMARY CARE RED G
"TEMP","ECX4CHAR","REDH")
PRIMARY CARE RED H
"TEMP","ECX4CHAR","REDI")
PRIMARY CARE RED I
"TEMP","ECX4CHAR","REDJ")
PRIMARY CARE RED J
"TEMP","ECX4CHAR","REDK")
PRIMARY CARE RED K
"TEMP","ECX4CHAR","REDL")
PRIMARY CARE RED L
"TEMP","ECX4CHAR","REDM")
PRIMARY CARE RED M
"TEMP","ECX4CHAR","REDN")
PRIMARY CARE RED N
"TEMP","ECX4CHAR","REDO")
PRIMARY CARE RED O
"TEMP","ECX4CHAR","REDP")
PRIMARY CARE RED P
"TEMP","ECX4CHAR","REDQ")
PRIMARY CARE RED Q
"TEMP","ECX4CHAR","REDR")
PRIMARY CARE RED R
"TEMP","ECX4CHAR","REDS")
PRIMARY CARE RED S
"TEMP","ECX4CHAR","REDT")
PRIMARY CARE RED T
"TEMP","ECX4CHAR","REDU")
PRIMARY CARE RED U
"TEMP","ECX4CHAR","REDV")
PRIMARY CARE RED V
"TEMP","ECX4CHAR","REDW")
PRIMARY CARE RED W
"TEMP","ECX4CHAR","REDX")
PRIMARY CARE RED X
"TEMP","ECX4CHAR","REDY")
PRIMARY CARE RED Y
"TEMP","ECX4CHAR","REDZ")
PRIMARY CARE RED Z
"TEMP","ECX4CHAR","REHA")
Rehabilitation
"TEMP","ECX4CHAR","REIK")
REIKI ALTERNATIVE THERAPY
"TEMP","ECX4CHAR","RENL")
RENAL
"TEMP","ECX4CHAR","REPE")
Repeat
"TEMP","ECX4CHAR","RESI")
Residential Clinic
"TEMP","ECX4CHAR","RFLX")
Reflexology
"TEMP","ECX4CHAR","RH00")
Rehabilitation Non-Specified Provider
"TEMP","ECX4CHAR","RHAC")
Rehabilitation V1 CCS
"TEMP","ECX4CHAR","RHBC")
Rehabilitation V2 CCS
"TEMP","ECX4CHAR","RHCC")
REHABILITATION CC TEAM
"TEMP","ECX4CHAR","RHDC")
Rehabilitation V4 CCS
"TEMP","ECX4CHAR","RHEC")
Rehabilitation V5 CCS
"TEMP","ECX4CHAR","RHFC")
Rehabilitation V6 CCS
"TEMP","ECX4CHAR","RHGC")
Rehabilitation V7 CCS
"TEMP","ECX4CHAR","RHHC")
Rehabilitation V8 CCS
"TEMP","ECX4CHAR","RHJC")
Rehabilitation V9 CCS
"TEMP","ECX4CHAR","RHKC")
Rehabilitation V10 CCS
"TEMP","ECX4CHAR","RHLC")
Rehabilitation V11 CCS
"TEMP","ECX4CHAR","RHMC")
Rehabilitation V12 CCS
"TEMP","ECX4CHAR","RHNC")
Rehabilitation V23 CCS
"TEMP","ECX4CHAR","RHNP")
Rehabilitation Nurse Practitioner
"TEMP","ECX4CHAR","RHPA")
Rehabilitation Physician Assistant
"TEMP","ECX4CHAR","RHPC")
Rehabilitation V15 CCS
"TEMP","ECX4CHAR","RHPH")
Rehabilitation Pharmacist
"TEMP","ECX4CHAR","RHPT")
Rehabilitation Physical Therapist
"TEMP","ECX4CHAR","RHQC")
Rehabilitation V16 CCS
"TEMP","ECX4CHAR","RHRC")
Rehabilitation V17 CCS
"TEMP","ECX4CHAR","RHRD")
Rehabilitation Registered Dietician
"TEMP","ECX4CHAR","RHRN")
Rehabilitation Registered Nurse
"TEMP","ECX4CHAR","RHSC")
Rehabilitation V18 CCS
"TEMP","ECX4CHAR","RHSW")
Rehabilitation Social Worker
"TEMP","ECX4CHAR","RHTC")
Rehabilitation V19 CCS
"TEMP","ECX4CHAR","RHUC")
Rehabilitation V20 CCS
"TEMP","ECX4CHAR","RHUM")
Rheumatology Pharmacist
"TEMP","ECX4CHAR","RHVC")
Rehabilitation V21 CCS
"TEMP","ECX4CHAR","RHWC")
Rehabilitation V22 CCS
"TEMP","ECX4CHAR","RLXT")
Relaxation techniques
"TEMP","ECX4CHAR","RNNA")
REGISTERED NURSE A
"TEMP","ECX4CHAR","RNNB")
REGISTERED NURSE B
"TEMP","ECX4CHAR","RNNC")
REGISTERED NURSE C
"TEMP","ECX4CHAR","RNND")
REGISTERED NURSE D
"TEMP","ECX4CHAR","RNNE")
REGISTERED NURSE E
"TEMP","ECX4CHAR","RNNF")
REGISTERED NURSE F
"TEMP","ECX4CHAR","RNNG")
REGISTERED NURSE G
"TEMP","ECX4CHAR","RNNH")
REGISTERED NURSE H
"TEMP","ECX4CHAR","RNNI")
REGISTERED NURSE I
"TEMP","ECX4CHAR","RNNJ")
REGISTERED NURSE J
"TEMP","ECX4CHAR","RNNK")
REGISTERED NURSE K
"TEMP","ECX4CHAR","RNNL")
REGISTERED NURSE L
"TEMP","ECX4CHAR","RNNM")
REGISTERED NURSE M
"TEMP","ECX4CHAR","RNNN")
REGISTERED NURSE N
"TEMP","ECX4CHAR","RNNO")
REGISTERED NURSE O
"TEMP","ECX4CHAR","RNNP")
REGISTERED NURSE P
"TEMP","ECX4CHAR","RNNQ")
REGISTERED NURSE Q
"TEMP","ECX4CHAR","RNNR")
REGISTERED NURSE R
"TEMP","ECX4CHAR","RNNS")
REGISTERED NURSE S
"TEMP","ECX4CHAR","RNNT")
REGISTERED NURSE T
"TEMP","ECX4CHAR","RNNU")
REGISTERED NURSE U
"TEMP","ECX4CHAR","RNNV")
REGISTERED NURSE V
"TEMP","ECX4CHAR","RNNW")
REGISTERED NURSE W
"TEMP","ECX4CHAR","RNNX")
REGISTERED NURSE X
"TEMP","ECX4CHAR","RNNY")
REGISTERED NURSE Y
"TEMP","ECX4CHAR","RNNZ")
REGISTERED NURSE Z
"TEMP","ECX4CHAR","RNUR")
RN R
"TEMP","ECX4CHAR","ROTH")
R Other
"TEMP","ECX4CHAR","RPRI")
R Primary Care
"TEMP","ECX4CHAR","RRED")
RED TEAM R
"TEMP","ECX4CHAR","RSAT")
Satellite R
"TEMP","ECX4CHAR","RSCH")
Research Activities
"TEMP","ECX4CHAR","RSTU")
Locally Defined R
"TEMP","ECX4CHAR","RTEM")
R Team
"TEMP","ECX4CHAR","RV15")
RVU 15 MINUTES HIGHER THAN MATRIX
"TEMP","ECX4CHAR","RV20")
RVU 20 MINUTES HIGHER THAN MATRIX
"TEMP","ECX4CHAR","RV30")
RVU 30 MINUTES HIGHER THAN MATRIX
"TEMP","ECX4CHAR","RV45")
RVU 45 MINUTES HIGHER THAN MATRIX
"TEMP","ECX4CHAR","RV60")
RVU 60 MINUTES HIGHER THAN MATRIX
"TEMP","ECX4CHAR","RXMN")
Medication (such as Coumadin) Monitoring
"TEMP","ECX4CHAR","RYEL")
YELLOW TEAM R
"TEMP","ECX4CHAR","SATA")
Satellite Clinic A
"TEMP","ECX4CHAR","SATB")
Satellite Clinic B
"TEMP","ECX4CHAR","SATC")
SATELLITE CLINIC C
"TEMP","ECX4CHAR","SATD")
SATELLITE CLINIC D
"TEMP","ECX4CHAR","SATE")
SATELLITE CLINIC E
"TEMP","ECX4CHAR","SATF")
SATELLITE CLINIC F
"TEMP","ECX4CHAR","SATG")
SATELLITE CLINIC G
"TEMP","ECX4CHAR","SATH")
SATELLITE CLINIC H
"TEMP","ECX4CHAR","SATI")
SATELLITE CLINIC I
"TEMP","ECX4CHAR","SATJ")
SATELLITE CLINIC J
"TEMP","ECX4CHAR","SATK")
SATELLITE CLINIC K
"TEMP","ECX4CHAR","SATL")
SATELLITE CLINIC L
"TEMP","ECX4CHAR","SATM")
SATELLITE CLINIC M
"TEMP","ECX4CHAR","SATN")
SATELLITE CLINIC N
"TEMP","ECX4CHAR","SATO")
SATELLITE CLINIC O
"TEMP","ECX4CHAR","SATP")
Substance Abuse Treatment Program
"TEMP","ECX4CHAR","SATQ")
SATELLITE CLINIC Q
"TEMP","ECX4CHAR","SATR")
SATELLITE CLINIC R
"TEMP","ECX4CHAR","SATS")
SATELLITE CLINIC S
"TEMP","ECX4CHAR","SATT")
SATELLITE CLINIC T
"TEMP","ECX4CHAR","SATU")
SATELLITE CLINIC U
"TEMP","ECX4CHAR","SATV")
SATELLITE CLINIC V
"TEMP","ECX4CHAR","SATW")
SATELLITE CLINIC W
"TEMP","ECX4CHAR","SATX")
SATELLITE CLINIC X
"TEMP","ECX4CHAR","SATY")
SATELLITE CLINIC Y
"TEMP","ECX4CHAR","SATZ")
SATELLITE CLINIC Z
"TEMP","ECX4CHAR","SBLU")
BLUE TEAM S
"TEMP","ECX4CHAR","SC00")
SCI Non-Specified Provider
"TEMP","ECX4CHAR","SCAC")
Spinal Cord Injured V1 CCS
"TEMP","ECX4CHAR","SCBC")
CBC S
"TEMP","ECX4CHAR","SCCC")
SCI CC TEAM
"TEMP","ECX4CHAR","SCDC")
Spinal Cord Injured V4 CCS
"TEMP","ECX4CHAR","SCEC")
Spinal Cord Injured V5 CCS
"TEMP","ECX4CHAR","SCFC")
Spinal Cord Injured V6 CCS
"TEMP","ECX4CHAR","SCGC")
Spinal Cord Injured V7 CCS
"TEMP","ECX4CHAR","SCHC")
Spinal Cord Injured V8 CCS
"TEMP","ECX4CHAR","SCJC")
Spinal Cord Injured V9 CCS
"TEMP","ECX4CHAR","SCKC")
Spinal Cord Injured V10 CCS
"TEMP","ECX4CHAR","SCLC")
Spinal Cord Injured V11 CCS
"TEMP","ECX4CHAR","SCMC")
Spinal Cord Injured V12 CCS
"TEMP","ECX4CHAR","SCNC")
Spinal Cord Injured V23 CCS
"TEMP","ECX4CHAR","SCNP")
SCI Nurse Practitioner
"TEMP","ECX4CHAR","SCPA")
SCI Physician Assistant
"TEMP","ECX4CHAR","SCPC")
Spinal Cord Injured V15 CCS
"TEMP","ECX4CHAR","SCPH")
SCI Pharmacist
"TEMP","ECX4CHAR","SCPT")
SCI Physical Therapist
"TEMP","ECX4CHAR","SCPX")
C&P CLINIC PROFILE S
"TEMP","ECX4CHAR","SCQC")
Spinal Cord Injured V16 CCS
"TEMP","ECX4CHAR","SCRD")
SCI Registered Dietician
"TEMP","ECX4CHAR","SCRE")
Screening
"TEMP","ECX4CHAR","SCRN")
SCI Registered Nurse
"TEMP","ECX4CHAR","SCSC")
Spinal Cord Injured V18 CCS
"TEMP","ECX4CHAR","SCSW")
SCI Social Worker
"TEMP","ECX4CHAR","SCTC")
Spinal Cord Injured V19 CCS
"TEMP","ECX4CHAR","SCUC")
Spinal Cord Injured V20 CCS
"TEMP","ECX4CHAR","SCVT")
Service Connected
"TEMP","ECX4CHAR","SCWC")
Spinal Cord Injured V22 CCS
"TEMP","ECX4CHAR","SIGO")
Single
"TEMP","ECX4CHAR","SMOP")
Smk Cessation Pharmacist
"TEMP","ECX4CHAR","SNRC")
Spinal Cord Injured V17 CCS
"TEMP","ECX4CHAR","SNUR")
RN S
"TEMP","ECX4CHAR","SNVC")
Spinal Cord Injured V21 CCS
"TEMP","ECX4CHAR","SOCW")
Social Worker
"TEMP","ECX4CHAR","SOTH")
S Other
"TEMP","ECX4CHAR","SPAP")
SpcltyCare Anticoag Pharmacist
"TEMP","ECX4CHAR","SPCH")
Specialty Care Pharmacist
"TEMP","ECX4CHAR","SPEC")
Special
"TEMP","ECX4CHAR","SPGP")
Single Provider - Group of Patients
"TEMP","ECX4CHAR","SPIN")
Single Provider - Individual Patient
"TEMP","ECX4CHAR","SPRI")
S Primary Care
"TEMP","ECX4CHAR","SRED")
RED TEAM S
"TEMP","ECX4CHAR","SSAT")
Satellite S
"TEMP","ECX4CHAR","SSFU")
Stop Smoke Follow-up - Individual Patient
"TEMP","ECX4CHAR","SSGD")
Stop Smoking Group Double Provider
"TEMP","ECX4CHAR","STAT")
Point to Statistics in DSS
"TEMP","ECX4CHAR","STEM")
S Team
"TEMP","ECX4CHAR","STRU")
Structure Learning - Group of Patients
"TEMP","ECX4CHAR","STUD")
Student Provider - Individual Patient
"TEMP","ECX4CHAR","STUV")
Locally Defined S
"TEMP","ECX4CHAR","SUPH")
Surgery/Anesthesia/OR Pharmacist
"TEMP","ECX4CHAR","SVRA")
PRIMARY CARE SILVER A
"TEMP","ECX4CHAR","SVRB")
PRIMARY CARE SILVER B
"TEMP","ECX4CHAR","SVRC")
PRIMARY CARE SILVER C
"TEMP","ECX4CHAR","SVRD")
PRIMARY CARE SILVER D
"TEMP","ECX4CHAR","SVRE")
PRIMARY CARE SILVER E
"TEMP","ECX4CHAR","SVRF")
PRIMARY CARE SILVER F
"TEMP","ECX4CHAR","SVRG")
PRIMARY CARE SILVER G
"TEMP","ECX4CHAR","SVRH")
PRIMARY CARE SILVER H
"TEMP","ECX4CHAR","SVRI")
PRIMARY CARE SILVER I
"TEMP","ECX4CHAR","SVRJ")
PRIMARY CARE SILVER J
"TEMP","ECX4CHAR","SVRK")
PRIMARY CARE SILVER K
"TEMP","ECX4CHAR","SVRL")
PRIMARY CARE SILVER L
"TEMP","ECX4CHAR","SVRM")
PRIMARY CARE SILVER M
"TEMP","ECX4CHAR","SVRN")
PRIMARY CARE SILVER N
"TEMP","ECX4CHAR","SVRO")
PRIMARY CARE SILVER O
"TEMP","ECX4CHAR","SVRP")
PRIMARY CARE SILVER P
"TEMP","ECX4CHAR","SVRQ")
PRIMARY CARE SILVER Q
"TEMP","ECX4CHAR","SVRR")
PRIMARY CARE SILVER R
"TEMP","ECX4CHAR","SVRS")
PRIMARY CARE SILVER S
"TEMP","ECX4CHAR","SVRT")
PRIMARY CARE SILVER T
"TEMP","ECX4CHAR","SVRU")
PRIMARY CARE SILVER U
"TEMP","ECX4CHAR","SVRV")
PRIMARY CARE SILVER V
"TEMP","ECX4CHAR","SVRW")
PRIMARY CARE SILVER W
"TEMP","ECX4CHAR","SVRX")
PRIMARY CARE SILVER X
"TEMP","ECX4CHAR","SVRY")
PRIMARY CARE SILVER Y
"TEMP","ECX4CHAR","SVRZ")
PRIMARY CARE SILVER Z
"TEMP","ECX4CHAR","SYEL")
YELLOW TEAM S
"TEMP","ECX4CHAR","TAIC")
Tai chi
"TEMP","ECX4CHAR","TBLU")
BLUE TEAM T
"TEMP","ECX4CHAR","TCBC")
CBC T
"TEMP","ECX4CHAR","TCPX")
C&P CLINIC PROFILE T
"TEMP","ECX4CHAR","TDIS")
Thought Disorder - Group of Patients
"TEMP","ECX4CHAR","TECH")
Technician
"TEMP","ECX4CHAR","TENS")
TENS Clinic in PM&R
"TEMP","ECX4CHAR","TNUR")
RN T
"TEMP","ECX4CHAR","TOTH")
T Other
"TEMP","ECX4CHAR","TPGP")
Three or More Providers - Group of Patients
"TEMP","ECX4CHAR","TPHT")
Therapeutic or healing touch
"TEMP","ECX4CHAR","TPIN")
Three or More Providers - Individual Patient
"TEMP","ECX4CHAR","TPRI")
T Primary Care
"TEMP","ECX4CHAR","TRAN")
Pre- and Post-Transplant Clinical Activities
"TEMP","ECX4CHAR","TRED")
RED TEAM T
"TEMP","ECX4CHAR","TSAT")
Satellite T
"TEMP","ECX4CHAR","TTEM")
T Team
"TEMP","ECX4CHAR","TUVW")
Locally Defined T
"TEMP","ECX4CHAR","TYEL")
YELLOW TEAM T
"TEMP","ECX4CHAR","UBLU")
BLUE TEAM U
"TEMP","ECX4CHAR","UCBC")
CBC U
"TEMP","ECX4CHAR","UCPX")
C&P CLINIC PROFILE U
"TEMP","ECX4CHAR","UNSC")
Unscheduled Clinic
"TEMP","ECX4CHAR","UNUR")
RN U
"TEMP","ECX4CHAR","UOTH")
U Other
"TEMP","ECX4CHAR","UPRI")
U Primary Care
"TEMP","ECX4CHAR","URED")
RED TEAM U
"TEMP","ECX4CHAR","USAT")
Satellite U
"TEMP","ECX4CHAR","UTEM")
U Team
"TEMP","ECX4CHAR","UVWX")
Locally Defined U
"TEMP","ECX4CHAR","UYEL")
YELLOW TEAM U
"TEMP","ECX4CHAR","VBLU")
BLUE TEAM V
"TEMP","ECX4CHAR","VCBC")
CBC V
"TEMP","ECX4CHAR","VCPX")
C&P CLINIC PROFILE V
"TEMP","ECX4CHAR","VDHC")
VET DIRECTED HOME CARE
"TEMP","ECX4CHAR","VGCH")
CVT GRP CHAPLAIN
"TEMP","ECX4CHAR","VGCP")
CVT GRP CLINICAL PHARMACIST
"TEMP","ECX4CHAR","VGMD")
CVT GRP PHYSICIAN
"TEMP","ECX4CHAR","VGNP")
CVT GRP NURS PRACT
"TEMP","ECX4CHAR","VGOT")
CVT GRP OCCUP THER
"TEMP","ECX4CHAR","VGPO")
CVT GRP PSYCHOLOGIST
"TEMP","ECX4CHAR","VGPT")
CVT GRP PHYS THER
"TEMP","ECX4CHAR","VGRD")
CVT GRP REGISTERED DIETICIAN
"TEMP","ECX4CHAR","VGRN")
CVT GRP REG NURS
"TEMP","ECX4CHAR","VGRT")
CVT GRP REC THER
"TEMP","ECX4CHAR","VGSW")
CVT GRP SOC WRK
"TEMP","ECX4CHAR","VIET")
Vietnam War
"TEMP","ECX4CHAR","VITL")
VITAL Initiative
"TEMP","ECX4CHAR","VL1A")
VL CATEGORY 1 A
"TEMP","ECX4CHAR","VL1B")
VL CATEGORY 1 B
"TEMP","ECX4CHAR","VL1C")
VL CATEGORY 1 C
"TEMP","ECX4CHAR","VL1D")
VL CATEGORY 1 D
"TEMP","ECX4CHAR","VL2A")
VL CATEGORY 2 A
"TEMP","ECX4CHAR","VL2B")
VL CATEGORY 2 B
"TEMP","ECX4CHAR","VL2C")
VL CATEGORY 2 C
"TEMP","ECX4CHAR","VL2D")
VL CATEGORY 2 D
"TEMP","ECX4CHAR","VL4A")
VL CATEGORY 4 A
"TEMP","ECX4CHAR","VL4B")
VL CATEGORY 4 B
"TEMP","ECX4CHAR","VL4C")
VL CATEGORY 4 C
"TEMP","ECX4CHAR","VL4D")
VL CATEGORY 4 D
"TEMP","ECX4CHAR","VL5A")
VL CATEGORY 5 A
"TEMP","ECX4CHAR","VL5B")
VL CATEGORY 5 B
"TEMP","ECX4CHAR","VL5C")
VL CATEGORY 5 C
"TEMP","ECX4CHAR","VL5D")
VL CATEGORY 5 D
"TEMP","ECX4CHAR","VNUR")
RN V
"TEMP","ECX4CHAR","VOTH")
V Other
"TEMP","ECX4CHAR","VPRI")
V Primary Care
"TEMP","ECX4CHAR","VRED")
RED TEAM V
"TEMP","ECX4CHAR","VSAT")
Satellite V
"TEMP","ECX4CHAR","VTEM")
V Team
"TEMP","ECX4CHAR","VWXY")
Locally Defined V
"TEMP","ECX4CHAR","VYEL")
YELLOW TEAM V
"TEMP","ECX4CHAR","WBLU")
BLUE TEAM W
"TEMP","ECX4CHAR","WC00")
Wound Care Non-Specified Provider
"TEMP","ECX4CHAR","WCAC")
Wound Care V1 CCS
"TEMP","ECX4CHAR","WCBC")
CBC W
"TEMP","ECX4CHAR","WCCC")
WOUND CARE CC TEAM
"TEMP","ECX4CHAR","WCDC")
Wound Care V4 CCS
"TEMP","ECX4CHAR","WCEC")
Wound Care V5 CCS
"TEMP","ECX4CHAR","WCFC")
Wound Care V6 CCS
"TEMP","ECX4CHAR","WCGC")
Wound Care V7 CCS
"TEMP","ECX4CHAR","WCHC")
Wound Care V8 CCS
"TEMP","ECX4CHAR","WCHR")
Wheelchair
"TEMP","ECX4CHAR","WCJC")
Wound Care V9 CCS
"TEMP","ECX4CHAR","WCKC")
Wound Care V10 CCS
"TEMP","ECX4CHAR","WCLC")
Wound Care V11 CCS
"TEMP","ECX4CHAR","WCMC")
Wound Care V12 CCS
"TEMP","ECX4CHAR","WCNC")
VITAL Initiative (temp)
"TEMP","ECX4CHAR","WCNP")
Wound Care Nurse Practitioner
"TEMP","ECX4CHAR","WCPA")
Wound Care Physician Assistant
"TEMP","ECX4CHAR","WCPC")
Wound Care V15 CCS
"TEMP","ECX4CHAR","WCPH")
Wound Care Pharmacist
"TEMP","ECX4CHAR","WCPT")
Wound Care Physical Therapist
"TEMP","ECX4CHAR","WCPX")
C&P CLINIC PROFILE W
"TEMP","ECX4CHAR","WCQC")
Wound Care V16 CCS
"TEMP","ECX4CHAR","WCRC")
Wound Care V17 CCS
"TEMP","ECX4CHAR","WCRD")
Wound Care Registered Dietician
"TEMP","ECX4CHAR","WCRN")
Wound Care Registered Nurse
"TEMP","ECX4CHAR","WCSC")
Wound Care V18 CCS
"TEMP","ECX4CHAR","WCSW")
Wound Care Social Worker
"TEMP","ECX4CHAR","WCTC")
Wound Care V19 CCS
"TEMP","ECX4CHAR","WCUC")
Wound Care V20 CCS
"TEMP","ECX4CHAR","WCVC")
Wound Care V21 CCS
"TEMP","ECX4CHAR","WCWC")
Wound Care V22 CCS
"TEMP","ECX4CHAR","WMPH")
Women's Health Pharmacist
"TEMP","ECX4CHAR","WNUR")
RN W
"TEMP","ECX4CHAR","WOTH")
W Other
"TEMP","ECX4CHAR","WPRI")
W Primary Care
"TEMP","ECX4CHAR","WRED")
RED TEAM W
"TEMP","ECX4CHAR","WSAT")
Satellite W
"TEMP","ECX4CHAR","WTEM")
W Team
"TEMP","ECX4CHAR","WXYZ")
Locally Defined W
"TEMP","ECX4CHAR","WYEL")
YELLOW TEAM W
"TEMP","ECX4CHAR","XBLU")
BLUE TEAM X
"TEMP","ECX4CHAR","XCBC")
CBC X
"TEMP","ECX4CHAR","XCPX")
C&P CLINIC PROFILE X
"TEMP","ECX4CHAR","XNUR")
RN X
"TEMP","ECX4CHAR","XOTH")
X Other
"TEMP","ECX4CHAR","XPRI")
X Primary Care
"TEMP","ECX4CHAR","XREC")
Feeder key to create more complete encounter
"TEMP","ECX4CHAR","XRED")
RED TEAM X
"TEMP","ECX4CHAR","XSAT")
Satellite X
"TEMP","ECX4CHAR","XTEM")
X Team
"TEMP","ECX4CHAR","XXXX")
General Purpose 3 - assign own use
"TEMP","ECX4CHAR","XYEL")
YELLOW TEAM X
"TEMP","ECX4CHAR","XYZA")
Locally Defined X
"TEMP","ECX4CHAR","YBLU")
BLUE TEAM Y
"TEMP","ECX4CHAR","YCBC")
CBC Y
"TEMP","ECX4CHAR","YCPX")
C&P CLINIC PROFILE Y
"TEMP","ECX4CHAR","YELA")
PRIMARY CARE YELLOW A
"TEMP","ECX4CHAR","YELB")
PRIMARY CARE YELLOW B
"TEMP","ECX4CHAR","YELC")
PRIMARY CARE YELLOW C
"TEMP","ECX4CHAR","YELD")
PRIMARY CARE YELLOW D
"TEMP","ECX4CHAR","YELE")
PRIMARY CARE YELLOW E
"TEMP","ECX4CHAR","YELF")
PRIMARY CARE YELLOW F
"TEMP","ECX4CHAR","YELG")
PRIMARY CARE YELLOW G
"TEMP","ECX4CHAR","YELH")
PRIMARY CARE YELLOW H
"TEMP","ECX4CHAR","YELI")
PRIMARY CARE YELLOW I
"TEMP","ECX4CHAR","YELJ")
PRIMARY CARE YELLOW J
"TEMP","ECX4CHAR","YELK")
PRIMARY CARE YELLOW K
"TEMP","ECX4CHAR","YELL")
PRIMARY CARE YELLOW L
"TEMP","ECX4CHAR","YELM")
PRIMARY CARE YELLOW M
"TEMP","ECX4CHAR","YELN")
PRIMARY CARE YELLOW N
"TEMP","ECX4CHAR","YELO")
PRIMARY CARE YELLOW O
"TEMP","ECX4CHAR","YELP")
PRIMARY CARE YELLOW P
"TEMP","ECX4CHAR","YELQ")
PRIMARY CARE YELLOW Q
"TEMP","ECX4CHAR","YELR")
PRIMARY CARE YELLOW R
"TEMP","ECX4CHAR","YELS")
PRIMARY CARE YELLOW S
"TEMP","ECX4CHAR","YELT")
PRIMARY CARE YELLOW T
"TEMP","ECX4CHAR","YELU")
PRIMARY CARE YELLOW U
"TEMP","ECX4CHAR","YELV")
PRIMARY CARE YELLOW V
"TEMP","ECX4CHAR","YELW")
PRIMARY CARE YELLOW W
"TEMP","ECX4CHAR","YELX")
PRIMARY CARE YELLOW X
"TEMP","ECX4CHAR","YELY")
PRIMARY CARE YELLOW Y
"TEMP","ECX4CHAR","YELZ")
PRIMARY CARE YELLOW Z
"TEMP","ECX4CHAR","YNUR")
RN Y
"TEMP","ECX4CHAR","YOGA")
Yoga
"TEMP","ECX4CHAR","YOTH")
Y Other
"TEMP","ECX4CHAR","YPRI")
Y Primary Care
"TEMP","ECX4CHAR","YRED")
RED TEAM Y
"TEMP","ECX4CHAR","YSAT")
Satellite Y
"TEMP","ECX4CHAR","YTEM")
Y Team
"TEMP","ECX4CHAR","YYEL")
YELLOW TEAM Y
"TEMP","ECX4CHAR","YYYY")
General Purpose 4 - assign own use
"TEMP","ECX4CHAR","YZAB")
Locally Defined Y
"TEMP","ECX4CHAR","ZABC")
Locally Defined Z
"TEMP","ECX4CHAR","ZBLU")
BLUE TEAM Z
"TEMP","ECX4CHAR","ZCBC")
CBC Z
"TEMP","ECX4CHAR","ZCPX")
C&P CLINIC PROFILE Z
"TEMP","ECX4CHAR","ZNUR")
RN Z
"TEMP","ECX4CHAR","ZOTH")
Z Other
"TEMP","ECX4CHAR","ZPRI")
Z Primary Care
"TEMP","ECX4CHAR","ZRED")
RED TEAM Z
"TEMP","ECX4CHAR","ZSAT")
Satellite Z
"TEMP","ECX4CHAR","ZTEM")
Z Team
"TEMP","ECX4CHAR","ZYEL")
YELLOW TEAM Z
"TEMP","ECX4CHAR","ZZZZ")
No Longer Active
"UP",728.441,728.4412,-1)
728.441^1
"UP",728.441,728.4412,0)
728.4412
"VER")
8.0^22.0
"^DD",727.802,727.802,65,0)
RACE 1^F^^1;29^K:$L(X)>6!($L(X)<1) X
"^DD",727.802,727.802,65,.1)
Race 1
"^DD",727.802,727.802,65,3)
Answer must be 1-6 characters in length.
"^DD",727.802,727.802,65,21,0)
^.001^1^1^3130219^^^^
"^DD",727.802,727.802,65,21,1,0)
Self-reported by patient as recorded in VistA patient file.
"^DD",727.802,727.802,65,23,0)
^^17^17^3130219^
"^DD",727.802,727.802,65,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field 
"^DD",727.802,727.802,65,23,2,0)
(#4), RACE 1 is derived from the PTF VALUE field (#5) of the RACE file
"^DD",727.802,727.802,65,23,3,0)
(#10) pointed to by the RACE INFORMATION field (#.01) of the 
"^DD",727.802,727.802,65,23,4,0)
RACE INFORMATION subfile (#2.02) of the PATIENT file (#2).
"^DD",727.802,727.802,65,23,5,0)
 
"^DD",727.802,727.802,65,23,6,0)
Only those RACE INFORMATION values in the RACE INFORMATION subfile (#2.03)
"^DD",727.802,727.802,65,23,7,0)
where the METHOD OF COLLECTION field (#.02) is set to 1
"^DD",727.802,727.802,65,23,8,0)
(SELF-IDENTIFICATION), will be included in the RACE 1 field. Up to 6 race 
"^DD",727.802,727.802,65,23,9,0)
entries can be included. If any of the RACE INFORMATION values returned is
"^DD",727.802,727.802,65,23,10,0)
"C" (DECLINED TO ANSWER), that will be the only value included in the
"^DD",727.802,727.802,65,23,11,0)
RACE1 field.
"^DD",727.802,727.802,65,23,12,0)
 
"^DD",727.802,727.802,65,23,13,0)
If the RACE 1 field is null after checking the RACE INFORMATION values 
"^DD",727.802,727.802,65,23,14,0)
then the patient's historical RACE data will be checked to see if it 
"^DD",727.802,727.802,65,23,15,0)
contains one of the twenty six non-standard race values that are 
"^DD",727.802,727.802,65,23,16,0)
convertible to standard race values.  If so, the race value will be 
"^DD",727.802,727.802,65,23,17,0)
converted to the standard value and stored in the RACE 1 field.
"^DD",727.802,727.802,65,"DT")
3020828
"^DD",727.802,727.802,94,0)
CAMP LEJEUNE STATUS^S^Y:YES;N:NO;^2;13^Q
"^DD",727.802,727.802,94,3)
Indicate Camp Lejeune status for the patient.
"^DD",727.802,727.802,94,21,0)
^.001^2^2^3130503^^
"^DD",727.802,727.802,94,21,1,0)
Indicates if patient was exposed to contaminated water while stationed at 
"^DD",727.802,727.802,94,21,2,0)
Camp Lejeune, NC between January 1, 1957 and December 31, 1987.
"^DD",727.802,727.802,94,23,0)
^.001^3^3^3130503^^
"^DD",727.802,727.802,94,23,1,0)
Using the patient's DFN, a call is made to PAT^ECXUTL3, which in turn 
"^DD",727.802,727.802,94,23,2,0)
calls SVC^VADPT.  This call returns all service related information for a 
"^DD",727.802,727.802,94,23,3,0)
patient, including their Camp Lejeune status.
"^DD",727.802,727.802,94,"DT")
3130308
"^DD",727.802,727.802,95,0)
ENCOUNTER CAMP LEJEUNE^S^Y:YES;N:NO;^2;14^Q
"^DD",727.802,727.802,95,3)
Indicate if this encounter is related to exposure at Camp Lejeune.
"^DD",727.802,727.802,95,21,0)
^.001^3^3^3130503^^^^
"^DD",727.802,727.802,95,21,1,0)
Indicates if episode of care is related to exposure to contaminated water 
"^DD",727.802,727.802,95,21,2,0)
while stationed at Camp Lejeune, NC between January 1, 1957 and December 
"^DD",727.802,727.802,95,21,3,0)
31, 1987.
"^DD",727.802,727.802,95,23,0)
^^3^3^3130503^
"^DD",727.802,727.802,95,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.802,727.802,95,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. The ENCEVENT^PXAPI
"^DD",727.802,727.802,95,23,3,0)
returns the encounter Camp Lejeune data from the VISIT file (#9000010).
"^DD",727.802,727.802,95,"DT")
3130308
"^DD",727.802,727.802,96,0)
ENCOUNTER SC^S^Y:YES;N:NO;^2;15^Q
"^DD",727.802,727.802,96,3)
Is this Encounter Service Connected?
"^DD",727.802,727.802,96,21,0)
^.001^2^2^3130503^^^
"^DD",727.802,727.802,96,21,1,0)
Indicates if treatment provided during this patient encounter is Service 
"^DD",727.802,727.802,96,21,2,0)
Connected.
"^DD",727.802,727.802,96,23,0)
^^4^4^3130503^
"^DD",727.802,727.802,96,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.802,727.802,96,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. This call returns visit
"^DD",727.802,727.802,96,23,3,0)
data, including the SERVICE CONNECTED field (#80001) in the VISIT file
"^DD",727.802,727.802,96,23,4,0)
(#9000010).
"^DD",727.802,727.802,96,"DT")
3130310
"^DD",727.809,727.809,18,0)
DEA, SPECIAL HDLG^S^I:INVESTIGATIONAL;1:SCHEDULE 1 ITEM;2:SCHEDULE 2 ITEM;3:SCHEDULE 3 ITEM;4:SCHEDULE 4 ITEM;5:SCHEDULE 5 ITEM;^0;19^Q
"^DD",727.809,727.809,18,.1)

"^DD",727.809,727.809,18,3)
Enter I if the drug is investigational or 1-5 depending on the drug's schedule.
"^DD",727.809,727.809,18,21,0)
^.001^1^1^3130726^^^^
"^DD",727.809,727.809,18,21,1,0)
Indicates if the drug in this record is Investigational, or Schedule 1-5.
"^DD",727.809,727.809,18,23,0)
^^3^3^3130726^
"^DD",727.809,727.809,18,23,1,0)
Derived from the DEA, SPECIAL HDLG field (#3) in the DRUG file (#50). If
"^DD",727.809,727.809,18,23,2,0)
the field contains a "1","2","3","4" or "5" (DRUG SCHEDULE) it will be set
"^DD",727.809,727.809,18,23,3,0)
to that number. Otherwise, if it contains an I, it will be set to I.
"^DD",727.809,727.809,18,"DT")
3130531
"^DD",727.809,727.809,61,0)
RACE 1^F^^2;5^K:$L(X)>6!($L(X)<1) X
"^DD",727.809,727.809,61,.1)
Race 1
"^DD",727.809,727.809,61,3)
Answer must be 1-6 characters in length.
"^DD",727.809,727.809,61,21,0)
^.001^1^1^3130219^^^^
"^DD",727.809,727.809,61,21,1,0)
Self-reported by patient as recorded in VistA patient file.
"^DD",727.809,727.809,61,23,0)
^^17^17^3130219^
"^DD",727.809,727.809,61,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field 
"^DD",727.809,727.809,61,23,2,0)
(#4), RACE 1 is derived from the PTF VALUE field (#5) of the RACE file
"^DD",727.809,727.809,61,23,3,0)
(#10) pointed to by the RACE INFORMATION field (#.01) of the 
"^DD",727.809,727.809,61,23,4,0)
RACE INFORMATION subfile (#2.02) of the PATIENT file (#2).
"^DD",727.809,727.809,61,23,5,0)
 
"^DD",727.809,727.809,61,23,6,0)
Only those RACE INFORMATION values in the RACE INFORMATION subfile (#2.03)
"^DD",727.809,727.809,61,23,7,0)
where the METHOD OF COLLECTION field (#.02) is set to 1
"^DD",727.809,727.809,61,23,8,0)
(SELF-IDENTIFICATION), will be included in the RACE 1 field. Up to 6 race 
"^DD",727.809,727.809,61,23,9,0)
entries can be included. If any of the RACE INFORMATION values returned is
"^DD",727.809,727.809,61,23,10,0)
"C" (DECLINED TO ANSWER), that will be the only value included in the
"^DD",727.809,727.809,61,23,11,0)
RACE1 field.
"^DD",727.809,727.809,61,23,12,0)
 
"^DD",727.809,727.809,61,23,13,0)
If the RACE 1 field is null after checking the RACE INFORMATION values 
"^DD",727.809,727.809,61,23,14,0)
then the patient's historical RACE data will be checked to see if it 
"^DD",727.809,727.809,61,23,15,0)
contains one of the twenty six non-standard race values that are 
"^DD",727.809,727.809,61,23,16,0)
convertible to standard race values.  If so, the race value will be 
"^DD",727.809,727.809,61,23,17,0)
converted to the standard value and stored in the RACE 1 field.
"^DD",727.809,727.809,61,"DT")
3020829
"^DD",727.809,727.809,62,0)
PLACEHOLDER^P50'^PSDRUG(^2;6^Q
"^DD",727.809,727.809,62,.1)

"^DD",727.809,727.809,62,3)
Enter the drug dispensed via BCMA.
"^DD",727.809,727.809,62,21,0)
^^1^1^3130507^
"^DD",727.809,727.809,62,21,1,0)
Currently NULL.  This field is not currently used.
"^DD",727.809,727.809,62,23,0)
^.001^1^1^3130507^^
"^DD",727.809,727.809,62,23,1,0)
Currently NULL.
"^DD",727.809,727.809,62,"DT")
3130405
"^DD",727.809,727.809,63,0)
PLACEHOLDER^NJ5,2^^2;7^K:+X'=X!(X>50)!(X<0)!(X?.E1"."3N.N) X
"^DD",727.809,727.809,63,.1)

"^DD",727.809,727.809,63,3)
Type a Number between 0 and 50, 2 Decimal Digits.
"^DD",727.809,727.809,63,21,0)
^^1^1^3130507^
"^DD",727.809,727.809,63,21,1,0)
Currently NULL.  This field is not currently used.
"^DD",727.809,727.809,63,23,0)
^.001^1^1^3130507^^
"^DD",727.809,727.809,63,23,1,0)
Currently NULL.
"^DD",727.809,727.809,63,"DT")
3130405
"^DD",727.809,727.809,64,0)
PLACEHOLDER^F^^2;8^K:$L(X)>40!($L(X)<1) X
"^DD",727.809,727.809,64,.1)
 
"^DD",727.809,727.809,64,3)
Answer must be 1-40 characters in length.
"^DD",727.809,727.809,64,21,0)
^^1^1^3130507^
"^DD",727.809,727.809,64,21,1,0)
Currently NULL.  This field is not currently used.
"^DD",727.809,727.809,64,23,0)
^.001^1^1^3130507^^
"^DD",727.809,727.809,64,23,1,0)
Currently NULL.
"^DD",727.809,727.809,64,"DT")
3130405
"^DD",727.809,727.809,65,0)
PLACEHOLDER^F^^2;9^K:$L(X)>1!($L(X)<1) X
"^DD",727.809,727.809,65,.1)

"^DD",727.809,727.809,65,3)
Answer must be 1 character in length.
"^DD",727.809,727.809,65,21,0)
^^1^1^3130507^
"^DD",727.809,727.809,65,21,1,0)
Currently NULL.  This field is not currently used.
"^DD",727.809,727.809,65,23,0)
^.001^1^1^3130507^^
"^DD",727.809,727.809,65,23,1,0)
Currently NULL.
"^DD",727.809,727.809,65,"DT")
3130405
"^DD",727.809,727.809,84,0)
ENCOUNTER SC^S^Y:YES;N:NO;^2;28^Q
"^DD",727.809,727.809,84,3)
Is this Encounter Service Connected?
"^DD",727.809,727.809,84,21,0)
^.001^2^2^3130514^^^^
"^DD",727.809,727.809,84,21,1,0)
Indicates if treatment provided during this patient encounter is Service 
"^DD",727.809,727.809,84,21,2,0)
Connected.
"^DD",727.809,727.809,84,23,0)
^^4^4^3130514^
"^DD",727.809,727.809,84,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.809,727.809,84,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. This call returns visit
"^DD",727.809,727.809,84,23,3,0)
data, including the SERVICE CONNECTED field (#80001) in the VISIT file
"^DD",727.809,727.809,84,23,4,0)
(#9000010).
"^DD",727.809,727.809,84,"DT")
3130310
"^DD",727.809,727.809,85,0)
CAMP LEJEUNE STATUS^S^Y:YES;N:NO;^2;29^Q
"^DD",727.809,727.809,85,3)
Indicate Camp Lejeune status for the patient.
"^DD",727.809,727.809,85,21,0)
^^2^2^3130507^
"^DD",727.809,727.809,85,21,1,0)
Indicates if patient was exposed to contaminated water while stationed at
"^DD",727.809,727.809,85,21,2,0)
Camp Lejeune, NC between January 1, 1957 and December 31, 1987.
"^DD",727.809,727.809,85,23,0)
^^3^3^3130507^
"^DD",727.809,727.809,85,23,1,0)
Using the patient's DFN, a call is made to PAT^ECXUTL3, which in turn
"^DD",727.809,727.809,85,23,2,0)
calls SVC^VADPT. This call returns all service related information for a
"^DD",727.809,727.809,85,23,3,0)
patient, including their Camp Lejeune status.
"^DD",727.809,727.809,85,"DT")
3130310
"^DD",727.809,727.809,86,0)
ENCOUNTER CAMP LEJEUNE^S^Y:YES;N:NO;^2;30^Q
"^DD",727.809,727.809,86,3)
Indicate if this encounter is related to exposure at Camp Lejeune.
"^DD",727.809,727.809,86,21,0)
^^3^3^3130507^
"^DD",727.809,727.809,86,21,1,0)
Indicates if episode of care is related to exposure to contaminated water
"^DD",727.809,727.809,86,21,2,0)
while stationed at Camp Lejeune, NC between January 1, 1957 and December
"^DD",727.809,727.809,86,21,3,0)
31, 1987.
"^DD",727.809,727.809,86,23,0)
^^3^3^3130507^
"^DD",727.809,727.809,86,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.809,727.809,86,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. The ENCEVENT^PXAPI
"^DD",727.809,727.809,86,23,3,0)
returns the encounter Camp Lejeune data from the VISIT file (#9000010).
"^DD",727.809,727.809,86,"DT")
3130310
"^DD",727.81,727.81,28,0)
DEA, SPECIAL HDLG^S^I:INVESTIGATIONAL;1:SCHEDULE 1 ITEM;2:SCHEDULE 2 ITEM;3:SCHEDULE 3 ITEM;4:SCHEDULE 4 ITEM;5:SCHEDULE 5 ITEM;^0;29^Q
"^DD",727.81,727.81,28,.1)
DEA Special Handling
"^DD",727.81,727.81,28,3)
Enter I if the drug is investigational or 1-5 depending on the Drug's Schedule Item.
"^DD",727.81,727.81,28,21,0)
^.001^1^1^3130726^^^^
"^DD",727.81,727.81,28,21,1,0)
Indicates if the drug in this record is Investigational, or Schedule 1-5.
"^DD",727.81,727.81,28,23,0)
^^3^3^3130726^
"^DD",727.81,727.81,28,23,1,0)
Derived from the DEA, SPECIAL HDLG field (#3) in the DRUG file (#50). If
"^DD",727.81,727.81,28,23,2,0)
the field contains a "1","2","3","4" or "5" (DRUG SCHEDULE) it will be set
"^DD",727.81,727.81,28,23,3,0)
to that number. Otherwise, if it contains an I, it will be set to I.
"^DD",727.81,727.81,28,"DT")
3120304
"^DD",727.81,727.81,72,0)
RACE 1^F^^1;39^K:$L(X)>6!($L(X)<1) X
"^DD",727.81,727.81,72,.1)
Race 1
"^DD",727.81,727.81,72,3)
Answer must be 1-6 characters in length.
"^DD",727.81,727.81,72,21,0)
^^1^1^3130702^
"^DD",727.81,727.81,72,21,1,0)
Self-reported by patient as recorded in VistA patient file.
"^DD",727.81,727.81,72,23,0)
^.001^17^17^3130702^^
"^DD",727.81,727.81,72,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field 
"^DD",727.81,727.81,72,23,2,0)
(#4), RACE 1 is derived from the PTF VALUE field (#5) of the RACE file
"^DD",727.81,727.81,72,23,3,0)
(#10) pointed to by the RACE INFORMATION field (#.01) of the 
"^DD",727.81,727.81,72,23,4,0)
RACE INFORMATION subfile (#2.02) of the PATIENT file (#2).
"^DD",727.81,727.81,72,23,5,0)
 
"^DD",727.81,727.81,72,23,6,0)
Only those RACE INFORMATION values in the RACE INFORMATION subfile (#2.03)
"^DD",727.81,727.81,72,23,7,0)
where the METHOD OF COLLECTION field (#.02) is set to 1
"^DD",727.81,727.81,72,23,8,0)
(SELF-IDENTIFICATION), will be included in the RACE 1 field. Up to 6 race 
"^DD",727.81,727.81,72,23,9,0)
entries can be included. If any of the RACE INFORMATION values returned is
"^DD",727.81,727.81,72,23,10,0)
"C" (DECLINED TO ANSWER), that will be the only value included in the
"^DD",727.81,727.81,72,23,11,0)
RACE1 field.
"^DD",727.81,727.81,72,23,12,0)
 
"^DD",727.81,727.81,72,23,13,0)
If the RACE 1 field is null after checking the RACE INFORMATION values 
"^DD",727.81,727.81,72,23,14,0)
then the patient's historical RACE data will be checked to see if it 
"^DD",727.81,727.81,72,23,15,0)
contains one of the twenty six non-standard race values that are 
"^DD",727.81,727.81,72,23,16,0)
convertible to standard race values.  If so, the race value will be 
"^DD",727.81,727.81,72,23,17,0)
converted to the standard value and stored in the RACE 1 field.
"^DD",727.81,727.81,72,"DT")
3020828
"^DD",727.81,727.81,99,0)
ENCOUNTER SC^S^Y:YES;N:NO;^2;24^Q
"^DD",727.81,727.81,99,3)
Is this Encounter Service Connected?
"^DD",727.81,727.81,99,21,0)
^.001^2^2^3130514^^^
"^DD",727.81,727.81,99,21,1,0)
Indicates if treatment provided during this patient encounter is Service 
"^DD",727.81,727.81,99,21,2,0)
Connected.
"^DD",727.81,727.81,99,23,0)
^^4^4^3130514^
"^DD",727.81,727.81,99,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.81,727.81,99,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. This call returns visit
"^DD",727.81,727.81,99,23,3,0)
data, including the SERVICE CONNECTED field (#80001) in the VISIT file
"^DD",727.81,727.81,99,23,4,0)
(#9000010).
"^DD",727.81,727.81,99,"DT")
3130309
"^DD",727.81,727.81,100,0)
VIETNAM^S^Y:YES;N:NO;U:UNKNOWN;^2;25^Q
"^DD",727.81,727.81,100,3)
Select the appropriate Vietnam service status for this patient.
"^DD",727.81,727.81,100,21,0)
^.001^1^1^3130507^^^^
"^DD",727.81,727.81,100,21,1,0)
Indicates if patient is a Vietnam era veteran.
"^DD",727.81,727.81,100,23,0)
^^3^3^3130507^
"^DD",727.81,727.81,100,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4)
"^DD",727.81,727.81,100,23,2,0)
in the PRESCRIPTION EXTRACT file (#727.81), VIETNAM data is derived from
"^DD",727.81,727.81,100,23,3,0)
the VIETNAM SERVICE INDICATED? field (#.32101) in the PATIENT file (#2).
"^DD",727.81,727.81,100,"DT")
3130309
"^DD",727.81,727.81,101,0)
CAMP LEJEUNE STATUS^S^Y:YES;N:NO;^2;26^Q
"^DD",727.81,727.81,101,3)
Indicate Camp Lejeune status for the patient.
"^DD",727.81,727.81,101,21,0)
^^2^2^3130507^
"^DD",727.81,727.81,101,21,1,0)
Indicates if patient was exposed to contaminated water while stationed at
"^DD",727.81,727.81,101,21,2,0)
Camp Lejeune, NC between January 1, 1957 and December 31, 1987.
"^DD",727.81,727.81,101,23,0)
^^3^3^3130507^
"^DD",727.81,727.81,101,23,1,0)
Using the patient's DFN, a call is made to PAT^ECXUTL3, which in turn
"^DD",727.81,727.81,101,23,2,0)
calls SVC^VADPT. This call returns all service related information for a
"^DD",727.81,727.81,101,23,3,0)
patient, including their Camp Lejeune status.
"^DD",727.81,727.81,101,"DT")
3130309
"^DD",727.81,727.81,102,0)
ENCOUNTER CAMP LEJEUNE^S^Y:YES;N:NO;^2;27^Q
"^DD",727.81,727.81,102,3)
Indicate if this encounter is related to exposure at Camp Lejeune.
"^DD",727.81,727.81,102,21,0)
^^3^3^3130507^
"^DD",727.81,727.81,102,21,1,0)
Indicates if episode of care is related to exposure to contaminated water
"^DD",727.81,727.81,102,21,2,0)
while stationed at Camp Lejeune, NC between January 1, 1957 and December
"^DD",727.81,727.81,102,21,3,0)
31, 1987.
"^DD",727.81,727.81,102,23,0)
^^3^3^3130507^
"^DD",727.81,727.81,102,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.81,727.81,102,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. The ENCEVENT^PXAPI
"^DD",727.81,727.81,102,23,3,0)
returns the encounter Camp Lejeune data from the VISIT file (#9000010).
"^DD",727.81,727.81,102,"DT")
3130309
"^DD",727.811,727.811,60,0)
RACE 1^F^^1;24^K:$L(X)>6!($L(X)<1) X
"^DD",727.811,727.811,60,.1)
Race 1
"^DD",727.811,727.811,60,3)
Answer must be 1-6 characters in length.
"^DD",727.811,727.811,60,21,0)
^.001^1^1^3130513^^^^
"^DD",727.811,727.811,60,21,1,0)
Self-reported by patient as recorded in VistA patient file.
"^DD",727.811,727.811,60,23,0)
^.001^17^17^3130513^^
"^DD",727.811,727.811,60,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field 
"^DD",727.811,727.811,60,23,2,0)
(#4), RACE 1 is derived from the PTF VALUE field (#5) of the RACE file
"^DD",727.811,727.811,60,23,3,0)
(#10) pointed to by the RACE INFORMATION field (#.01) of the 
"^DD",727.811,727.811,60,23,4,0)
RACE INFORMATION subfile (#2.02) of the PATIENT file (#2).
"^DD",727.811,727.811,60,23,5,0)
 
"^DD",727.811,727.811,60,23,6,0)
Only those RACE INFORMATION values in the RACE INFORMATION subfile (#2.03)
"^DD",727.811,727.811,60,23,7,0)
where the METHOD OF COLLECTION field (#.02) is set to 1
"^DD",727.811,727.811,60,23,8,0)
(SELF-IDENTIFICATION), will be included in the RACE 1 field. Up to 6 race 
"^DD",727.811,727.811,60,23,9,0)
entries can be included. If any of the RACE INFORMATION values returned is
"^DD",727.811,727.811,60,23,10,0)
"C" (DECLINED TO ANSWER), that will be the only value included in the
"^DD",727.811,727.811,60,23,11,0)
RACE1 field.
"^DD",727.811,727.811,60,23,12,0)
 
"^DD",727.811,727.811,60,23,13,0)
If the RACE 1 field is null after checking the RACE INFORMATION values 
"^DD",727.811,727.811,60,23,14,0)
then the patient's historical RACE data will be checked to see if it 
"^DD",727.811,727.811,60,23,15,0)
contains one of the twenty six non-standard race values that are 
"^DD",727.811,727.811,60,23,16,0)
convertible to standard race values.  If so, the race value will be 
"^DD",727.811,727.811,60,23,17,0)
converted to the standard value and stored in the RACE 1 field.
"^DD",727.811,727.811,60,"DT")
3020829
"^DD",727.811,727.811,100,0)
ENCOUNTER SC^S^Y:YES;N:NO;^2;27^Q
"^DD",727.811,727.811,100,3)
Is this Encounter Service Connected?
"^DD",727.811,727.811,100,21,0)
^.001^2^2^3130513^^^^
"^DD",727.811,727.811,100,21,1,0)
Indicates if treatment provided during this patient encounter is Service 
"^DD",727.811,727.811,100,21,2,0)
Connected.
"^DD",727.811,727.811,100,23,0)
^^4^4^3130513^
"^DD",727.811,727.811,100,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.811,727.811,100,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. This call returns visit
"^DD",727.811,727.811,100,23,3,0)
data, including the SERVICE CONNECTED field (#80001) in the VISIT file
"^DD",727.811,727.811,100,23,4,0)
(#9000010).
"^DD",727.811,727.811,100,"DT")
3080512
"^DD",727.811,727.811,121,0)
DATE OF BIRTH^FO^^3;15^K:$L(X)>8!($L(X)<8) X
"^DD",727.811,727.811,121,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.811,727.811,121,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.811,727.811,121,3)
Answer must be 8 characters in length.
"^DD",727.811,727.811,121,21,0)
^.001^1^1^3130827^^^^
"^DD",727.811,727.811,121,21,1,0)
Patient's date of birth.
"^DD",727.811,727.811,121,23,0)
^^7^7^3130827^
"^DD",727.811,727.811,121,23,1,0)
Data source:
"^DD",727.811,727.811,121,23,2,0)
 
"^DD",727.811,727.811,121,23,3,0)
SURGERY file (#130); PATIENT field (#.01) then to PATIENT file (#2);
"^DD",727.811,727.811,121,23,4,0)
DATE OF BIRTH field (#.03)
"^DD",727.811,727.811,121,23,5,0)
 
"^DD",727.811,727.811,121,23,6,0)
Date of Birth is returned through the supported call DEM^VADPT. It is then
"^DD",727.811,727.811,121,23,7,0)
represented by an 8-character numeric string in the YYYYMMDD format.  
"^DD",727.811,727.811,121,"DT")
3130206
"^DD",727.811,727.811,122,0)
VIETNAM^S^Y:YES;N:NO;U:UNKNOWN;^3;16^Q
"^DD",727.811,727.811,122,3)
Select the appropriate Vietnam service status for this patient.
"^DD",727.811,727.811,122,21,0)
^.001^1^1^3130507^^^
"^DD",727.811,727.811,122,21,1,0)
Indicates if patient is a Vietnam era veteran.
"^DD",727.811,727.811,122,23,0)
^^3^3^3130507^
"^DD",727.811,727.811,122,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4)
"^DD",727.811,727.811,122,23,2,0)
in the SURGERY EXTRACT file (#727.811), VIETNAM data is derived from the
"^DD",727.811,727.811,122,23,3,0)
VIETNAM SERVICE INDICATED? field (#.32101) in the PATIENT file (#2).
"^DD",727.811,727.811,122,"DT")
3130309
"^DD",727.811,727.811,123,0)
CAMP LEJEUNE STATUS^S^Y:YES;N:NO;^3;17^Q
"^DD",727.811,727.811,123,3)
Indicate Camp Lejeune status for the patient.
"^DD",727.811,727.811,123,21,0)
^^2^2^3130507^
"^DD",727.811,727.811,123,21,1,0)
Indicates if patient was exposed to contaminated water while stationed at
"^DD",727.811,727.811,123,21,2,0)
Camp Lejeune, NC between January 1, 1957 and December 31, 1987.
"^DD",727.811,727.811,123,23,0)
^^3^3^3130507^
"^DD",727.811,727.811,123,23,1,0)
Using the patient's DFN, a call is made to PAT^ECXUTL3, which in turn
"^DD",727.811,727.811,123,23,2,0)
calls SVC^VADPT. This call returns all service related information for a
"^DD",727.811,727.811,123,23,3,0)
patient, including their Camp Lejeune status.
"^DD",727.811,727.811,123,"DT")
3130309
"^DD",727.811,727.811,124,0)
ENCOUNTER CAMP LEJEUNE^S^Y:YES;N:NO;^3;18^Q
"^DD",727.811,727.811,124,3)
Indicate if this encounter is related to exposure at Camp Lejeune.
"^DD",727.811,727.811,124,21,0)
^^3^3^3130507^
"^DD",727.811,727.811,124,21,1,0)
Indicates if episode of care is related to exposure to contaminated water
"^DD",727.811,727.811,124,21,2,0)
while stationed at Camp Lejeune, NC between January 1, 1957 and December
"^DD",727.811,727.811,124,21,3,0)
31, 1987.
"^DD",727.811,727.811,124,23,0)
^^3^3^3130507^
"^DD",727.811,727.811,124,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.811,727.811,124,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. The ENCEVENT^PXAPI
"^DD",727.811,727.811,124,23,3,0)
returns the encounter Camp Lejeune data from the VISIT file (#9000010).
"^DD",727.811,727.811,124,"DT")
3130309
"^DD",727.811,727.811,125,0)
CONCURRENT CASE^S^C:CONCURRENT CASE;^3;19^Q
"^DD",727.811,727.811,125,3)
Indicate if this record has a Concurrent Case.
"^DD",727.811,727.811,125,21,0)
^^5^5^3130513^
"^DD",727.811,727.811,125,21,1,0)
An additional operative procedure performed by a different surgical team 
"^DD",727.811,727.811,125,21,2,0)
(i.e., a different specialty/service) under the same anesthetic which has 
"^DD",727.811,727.811,125,21,3,0)
a CPT code different from that of the Principle Operative Procedure (e.g.,
"^DD",727.811,727.811,125,21,4,0)
fixation of a femur fracture in a patient undergoing a laparotomy for
"^DD",727.811,727.811,125,21,5,0)
trauma).
"^DD",727.811,727.811,125,23,0)
^.001^3^3^3130513^^^^
"^DD",727.811,727.811,125,23,1,0)
This field is determined by using the CONCURRENT CASE field (#35) of the 
"^DD",727.811,727.811,125,23,2,0)
SURGERY file (#130). If there is a value in that field, this field is set 
"^DD",727.811,727.811,125,23,3,0)
to "C" to indicate a concurrent case exists.
"^DD",727.811,727.811,125,"DT")
3130412
"^DD",727.811,727.811,126,0)
PRINCIPLE POSTOP ICD-10 CODE^F^^3;20^K:$L(X)>8!($L(X)<1) X
"^DD",727.811,727.811,126,3)
Answer must be 1-8 characters in length.
"^DD",727.811,727.811,126,21,0)
^.001^1^1^3130806^^
"^DD",727.811,727.811,126,21,1,0)
The post-op diagnosis for the Principle Procedure.
"^DD",727.811,727.811,126,23,0)
^.001^4^4^3130806^^
"^DD",727.811,727.811,126,23,1,0)
Once available, the ICD10 data will be retrieved from the supported API 
"^DD",727.811,727.811,126,23,2,0)
and stored in this field.  This field is added in anticipation of the 
"^DD",727.811,727.811,126,23,3,0)
release of ICD10 and the file will be updated at the time the software is 
"^DD",727.811,727.811,126,23,4,0)
updated to retrieve the ICD10 information.
"^DD",727.811,727.811,126,"DT")
3130309
"^DD",727.811,727.811,127,0)
OTHER POSTOP ICD-10 CODE #1^F^^3;21^K:$L(X)>8!($L(X)<1) X
"^DD",727.811,727.811,127,3)
Answer must be 1-8 characters in length.
"^DD",727.811,727.811,127,21,0)
^.001^1^1^3130806^^^
"^DD",727.811,727.811,127,21,1,0)
The first associated diagnosis for the Principle Procedure.
"^DD",727.811,727.811,127,23,0)
^.001^4^4^3130806^^
"^DD",727.811,727.811,127,23,1,0)
Once available, the ICD10 data will be retrieved from the supported API 
"^DD",727.811,727.811,127,23,2,0)
and stored in this field.  This field is added in anticipation of the 
"^DD",727.811,727.811,127,23,3,0)
release of ICD10 and the file will be updated at the time the software is 
"^DD",727.811,727.811,127,23,4,0)
updated to retrieve the ICD10 information.
"^DD",727.811,727.811,127,"DT")
3130309
"^DD",727.811,727.811,128,0)
OTHER POSTOP ICD-10 CODE #2^F^^3;22^K:$L(X)>8!($L(X)<1) X
"^DD",727.811,727.811,128,3)
Answer must be 1-8 characters in length.
"^DD",727.811,727.811,128,21,0)
^.001^1^1^3130513^^
"^DD",727.811,727.811,128,21,1,0)
The second associated diagnosis for the Principle Procedure.
"^DD",727.811,727.811,128,23,0)
^^4^4^3130513^
"^DD",727.811,727.811,128,23,1,0)
Once available, the ICD10 data will be retrieved from the supported API 
"^DD",727.811,727.811,128,23,2,0)
and stored in this field.  This field is added in anticipation of the 
"^DD",727.811,727.811,128,23,3,0)
release of ICD10 and the file will be updated at the time the software is 
"^DD",727.811,727.811,128,23,4,0)
updated to retrieve the ICD10 information.
"^DD",727.811,727.811,128,"DT")
3130309
"^DD",727.811,727.811,129,0)
OTHER POSTOP ICD-10 CODE #3^F^^3;23^K:$L(X)>8!($L(X)<1) X
"^DD",727.811,727.811,129,3)
Answer must be 1-8 characters in length.
"^DD",727.811,727.811,129,21,0)
^.001^1^1^3130513^^
"^DD",727.811,727.811,129,21,1,0)
The third associated diagnosis for the Principle Procedure.
"^DD",727.811,727.811,129,23,0)
^^4^4^3130513^
"^DD",727.811,727.811,129,23,1,0)
Once available, the ICD10 data will be retrieved from the supported API 
"^DD",727.811,727.811,129,23,2,0)
and stored in this field.  This field is added in anticipation of the 
"^DD",727.811,727.811,129,23,3,0)
release of ICD10 and the file will be updated at the time the software is 
"^DD",727.811,727.811,129,23,4,0)
updated to retrieve the ICD10 information.
"^DD",727.811,727.811,129,"DT")
3130310
"^DD",727.811,727.811,130,0)
OTHER POSTOP ICD-10 CODE #4^F^^3;24^K:$L(X)>8!($L(X)<1) X
"^DD",727.811,727.811,130,3)
Answer must be 1-8 characters in length.
"^DD",727.811,727.811,130,21,0)
^.001^1^1^3130513^^
"^DD",727.811,727.811,130,21,1,0)
The fourth associated diagnosis for the Principle Procedure.
"^DD",727.811,727.811,130,23,0)
^^4^4^3130513^
"^DD",727.811,727.811,130,23,1,0)
Once available, the ICD10 data will be retrieved from the supported API 
"^DD",727.811,727.811,130,23,2,0)
and stored in this field.  This field is added in anticipation of the 
"^DD",727.811,727.811,130,23,3,0)
release of ICD10 and the file will be updated at the time the software is 
"^DD",727.811,727.811,130,23,4,0)
updated to retrieve the ICD10 information.
"^DD",727.811,727.811,130,"DT")
3130310
"^DD",727.811,727.811,131,0)
OTHER POSTOP ICD-10 CODE #5^F^^3;25^K:$L(X)>8!($L(X)<1) X
"^DD",727.811,727.811,131,3)
Answer must be 1-8 characters in length.
"^DD",727.811,727.811,131,21,0)
^.001^1^1^3130513^^
"^DD",727.811,727.811,131,21,1,0)
The fifth associated diagnosis for the Principle Procedure.
"^DD",727.811,727.811,131,23,0)
^^4^4^3130513^
"^DD",727.811,727.811,131,23,1,0)
Once available, the ICD10 data will be retrieved from the supported API 
"^DD",727.811,727.811,131,23,2,0)
and stored in this field.  This field is added in anticipation of the 
"^DD",727.811,727.811,131,23,3,0)
release of ICD10 and the file will be updated at the time the software is 
"^DD",727.811,727.811,131,23,4,0)
updated to retrieve the ICD10 information.
"^DD",727.811,727.811,131,"DT")
3130310
"^DD",727.813,727.813,48,0)
ENCOUNTER SC^S^Y:YES;N:NO;^2;4^Q
"^DD",727.813,727.813,48,3)
Is this Encounter Service Connected?
"^DD",727.813,727.813,48,21,0)
^.001^2^2^3130514^^^^
"^DD",727.813,727.813,48,21,1,0)
Indicates if treatment provided during this patient encounter is Service 
"^DD",727.813,727.813,48,21,2,0)
Connected.
"^DD",727.813,727.813,48,23,0)
^^4^4^3130514^
"^DD",727.813,727.813,48,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.813,727.813,48,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. This call returns visit
"^DD",727.813,727.813,48,23,3,0)
data, including the SERVICE CONNECTED field (#80001) in the VISIT file
"^DD",727.813,727.813,48,23,4,0)
(#9000010).
"^DD",727.813,727.813,48,"DT")
3130309
"^DD",727.813,727.813,49,0)
CAMP LEJEUNE STATUS^S^Y:YES;N:NO;^2;5^Q
"^DD",727.813,727.813,49,3)
Indicate Camp Lejeune status for the patient.
"^DD",727.813,727.813,49,21,0)
^^2^2^3130507^
"^DD",727.813,727.813,49,21,1,0)
Indicates if patient was exposed to contaminated water while stationed at
"^DD",727.813,727.813,49,21,2,0)
Camp Lejeune, NC between January 1, 1957 and December 31, 1987.
"^DD",727.813,727.813,49,23,0)
^^3^3^3130507^
"^DD",727.813,727.813,49,23,1,0)
Using the patient's DFN, a call is made to PAT^ECXUTL3, which in turn
"^DD",727.813,727.813,49,23,2,0)
calls SVC^VADPT. This call returns all service related information for a
"^DD",727.813,727.813,49,23,3,0)
patient, including their Camp Lejeune status.
"^DD",727.813,727.813,49,"DT")
3130309
"^DD",727.814,727.814,50,0)
ENCOUNTER SC^S^Y:YES;N:NO;^2;1^Q
"^DD",727.814,727.814,50,3)
Is this Encounter Service Connected?
"^DD",727.814,727.814,50,21,0)
^.001^2^2^3130514^^^
"^DD",727.814,727.814,50,21,1,0)
Indicates if treatment provided during this patient encounter is Service 
"^DD",727.814,727.814,50,21,2,0)
Connected.
"^DD",727.814,727.814,50,23,0)
^^4^4^3130514^
"^DD",727.814,727.814,50,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.814,727.814,50,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. This call returns visit
"^DD",727.814,727.814,50,23,3,0)
data, including the SERVICE CONNECTED field (#80001) in the VISIT file
"^DD",727.814,727.814,50,23,4,0)
(#9000010).
"^DD",727.814,727.814,50,"DT")
3130309
"^DD",727.814,727.814,51,0)
CAMP LEJEUNE STATUS^S^Y:YES;N:NO;^2;2^Q
"^DD",727.814,727.814,51,3)
Indicate Camp Lejeune status for the patient.
"^DD",727.814,727.814,51,21,0)
^.001^2^2^3130507^^
"^DD",727.814,727.814,51,21,1,0)
Indicates if patient was exposed to contaminated water while stationed at
"^DD",727.814,727.814,51,21,2,0)
Camp Lejeune, NC between January 1, 1957 and December 31, 1987.
"^DD",727.814,727.814,51,23,0)
^^3^3^3130507^
"^DD",727.814,727.814,51,23,1,0)
Using the patient's DFN, a call is made to PAT^ECXUTL3, which in turn
"^DD",727.814,727.814,51,23,2,0)
calls SVC^VADPT. This call returns all service related information for a
"^DD",727.814,727.814,51,23,3,0)
patient, including their Camp Lejeune status.
"^DD",727.814,727.814,51,"DT")
3130309
"^DD",727.814,727.814,52,0)
ENCOUNTER CAMP LEJEUNE^S^Y:YES;N:NO;^2;3^Q
"^DD",727.814,727.814,52,3)
Indicate if this encounter is related to exposure at Camp Lejeune.
"^DD",727.814,727.814,52,21,0)
^^3^3^3130507^
"^DD",727.814,727.814,52,21,1,0)
Indicates if episode of care is related to exposure to contaminated water
"^DD",727.814,727.814,52,21,2,0)
while stationed at Camp Lejeune, NC between January 1, 1957 and December
"^DD",727.814,727.814,52,21,3,0)
31, 1987.
"^DD",727.814,727.814,52,23,0)
^^3^3^3130507^
"^DD",727.814,727.814,52,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.814,727.814,52,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. The ENCEVENT^PXAPI
"^DD",727.814,727.814,52,23,3,0)
returns the encounter Camp Lejeune data from the VISIT file (#9000010).
"^DD",727.814,727.814,52,"DT")
3130309
"^DD",727.815,727.815,73,0)
RACE 1^F^^1;32^K:$L(X)>6!($L(X)<1) X
"^DD",727.815,727.815,73,3)
Answer must be 1-6 characters in length.
"^DD",727.815,727.815,73,21,0)
^.001^1^1^3130219^^^^
"^DD",727.815,727.815,73,21,1,0)
Self-reported by patient as recorded in VistA patient file.
"^DD",727.815,727.815,73,23,0)
^^17^17^3130219^
"^DD",727.815,727.815,73,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field 
"^DD",727.815,727.815,73,23,2,0)
(#4), RACE 1 is derived from the PTF VALUE field (#5) of the RACE file
"^DD",727.815,727.815,73,23,3,0)
(#10) pointed to by the RACE INFORMATION field (#.01) of the 
"^DD",727.815,727.815,73,23,4,0)
RACE INFORMATION subfile (#2.02) of the PATIENT file (#2).
"^DD",727.815,727.815,73,23,5,0)
 
"^DD",727.815,727.815,73,23,6,0)
Only those RACE INFORMATION values in the RACE INFORMATION subfile (#2.03)
"^DD",727.815,727.815,73,23,7,0)
where the METHOD OF COLLECTION field (#.02) is set to 1
"^DD",727.815,727.815,73,23,8,0)
(SELF-IDENTIFICATION), will be included in the RACE 1 field. Up to 6 race 
"^DD",727.815,727.815,73,23,9,0)
entries can be included. If any of the RACE INFORMATION values returned is
"^DD",727.815,727.815,73,23,10,0)
"C" (DECLINED TO ANSWER), that will be the only value included in the
"^DD",727.815,727.815,73,23,11,0)
RACE1 field.
"^DD",727.815,727.815,73,23,12,0)
 
"^DD",727.815,727.815,73,23,13,0)
If the RACE 1 field is null after checking the RACE INFORMATION values 
"^DD",727.815,727.815,73,23,14,0)
then the patient's historical RACE data will be checked to see if it 
"^DD",727.815,727.815,73,23,15,0)
contains one of the twenty six non-standard race values that are 
"^DD",727.815,727.815,73,23,16,0)
convertible to standard race values.  If so, the race value will be 
"^DD",727.815,727.815,73,23,17,0)
converted to the standard value and stored in the RACE 1 field.
"^DD",727.815,727.815,73,"DT")
3021210
"^DD",727.815,727.815,111,0)
ENCOUNTER SC^S^Y:YES;N:NO;^3;1^Q
"^DD",727.815,727.815,111,3)
Is this Encounter Service Connected?
"^DD",727.815,727.815,111,21,0)
^^2^2^3130514^
"^DD",727.815,727.815,111,21,1,0)
Indicates if treatment provided during this patient encounter is Service 
"^DD",727.815,727.815,111,21,2,0)
Connected.
"^DD",727.815,727.815,111,23,0)
^.001^4^4^3130514^^
"^DD",727.815,727.815,111,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.815,727.815,111,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. This call returns visit
"^DD",727.815,727.815,111,23,3,0)
data, including the SERVICE CONNECTED field (#80001) in the VISIT file
"^DD",727.815,727.815,111,23,4,0)
(#9000010).
"^DD",727.815,727.815,111,"DT")
3130308
"^DD",727.815,727.815,112,0)
VIETNAM^S^Y:YES;N:NO;U:UNKNOWN;^3;2^Q
"^DD",727.815,727.815,112,3)
Select the appropriate Vietnam service status for this patient.
"^DD",727.815,727.815,112,21,0)
1^.001^1^1^3130507^^^
"^DD",727.815,727.815,112,21,1,0)
Indicates if patient is a Vietnam era veteran.
"^DD",727.815,727.815,112,23,0)
^.001^4^4^3130507^^
"^DD",727.815,727.815,112,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4)
"^DD",727.815,727.815,112,23,2,0)
in the EVENT CAPTURE LOCAL EXTRACT file (#727.815), VIETNAM data is
"^DD",727.815,727.815,112,23,3,0)
derived from the VIETNAM SERVICE INDICATED? field (#.32101) in the PATIENT
"^DD",727.815,727.815,112,23,4,0)
file (#2).
"^DD",727.815,727.815,112,"DT")
3130308
"^DD",727.815,727.815,113,0)
PROVIDER #6^F^^3;3^K:$L(X)>11!($L(X)<2) X
"^DD",727.815,727.815,113,3)
Answer must be 2-11 characters in length.
"^DD",727.815,727.815,113,21,0)
^^3^3^3130521^
"^DD",727.815,727.815,113,21,1,0)
The sixth provider associated with the patient encounter.  It represents
"^DD",727.815,727.815,113,21,2,0)
an assisting Provider who performed the procedure associated with the
"^DD",727.815,727.815,113,21,3,0)
Event Capture patient record.
"^DD",727.815,727.815,113,23,0)
^^7^7^3130521^
"^DD",727.815,727.815,113,23,1,0)
Data is derived by returning a local array (sixth node) of the
"^DD",727.815,727.815,113,23,2,0)
$$GETPRV^ECPRVMUT API (DBIA #4460) that returns the PROVIDER
"^DD",727.815,727.815,113,23,3,0)
multiple (#42) from the EVENT CAPTURE PATIENT File (#721).  
"^DD",727.815,727.815,113,23,4,0)
 
"^DD",727.815,727.815,113,23,5,0)
The PROVIDER #6 is the value of a "2" prefixed to the pointer value to
"^DD",727.815,727.815,113,23,6,0)
indicate that the source file is "200". For example, if the IEN of the
"^DD",727.815,727.815,113,23,7,0)
provider in file #200 is 98765, the value that will be stored is 298765.
"^DD",727.815,727.815,113,"DT")
3130312
"^DD",727.815,727.815,114,0)
PROVIDER #6 PERSON CLASS^F^^3;4^K:$L(X)>7!($L(X)<7) X
"^DD",727.815,727.815,114,3)
Answer must be 7 characters in length.
"^DD",727.815,727.815,114,21,0)
^.001^2^2^3130521^^^^
"^DD",727.815,727.815,114,21,1,0)
This is the VA code of the Person Class of the sixth assisting provider
"^DD",727.815,727.815,114,21,2,0)
as of the date of this record.
"^DD",727.815,727.815,114,23,0)
^^4^4^3130521^
"^DD",727.815,727.815,114,23,1,0)
Derived by calling $$PRVCLASS^ECXUTL(IEN,DATE), where IEN is the IEN of
"^DD",727.815,727.815,114,23,2,0)
the NEW PERSON (#200) File.  Copied from field VA CODE (#5) of the PERSON
"^DD",727.815,727.815,114,23,3,0)
CLASS (#8932.1) file, as pointed to by the Person Class (#.01) field of
"^DD",727.815,727.815,114,23,4,0)
the PERSON CLASS (#8932.1) multiple of the NEW PERSON (#200) file.
"^DD",727.815,727.815,114,"DT")
3130312
"^DD",727.815,727.815,115,0)
PROVIDER #6 NPI^F^^3;5^K:$L(X)>10!($L(X)<1) X
"^DD",727.815,727.815,115,3)
Answer must be 1-10 characters in length.
"^DD",727.815,727.815,115,21,0)
^^2^2^3130521^
"^DD",727.815,727.815,115,21,1,0)
A standard unique life-long identifier of the sixth assisting provider 
"^DD",727.815,727.815,115,21,2,0)
of health care services.
"^DD",727.815,727.815,115,23,0)
^^2^2^3130521^
"^DD",727.815,727.815,115,23,1,0)
The qualified identifier is retrieved via the supporting Kernel API: 
"^DD",727.815,727.815,115,23,2,0)
$$NPI^XUSNPI.
"^DD",727.815,727.815,115,"DT")
3130310
"^DD",727.815,727.815,116,0)
PROVIDER #7^F^^3;6^K:$L(X)>11!($L(X)<2) X
"^DD",727.815,727.815,116,3)
Answer must be 2-11 characters in length.
"^DD",727.815,727.815,116,21,0)
^^3^3^3130521^
"^DD",727.815,727.815,116,21,1,0)
The seventh provider associated with the patient encounter.  It represents
"^DD",727.815,727.815,116,21,2,0)
an assisting Provider who performed the procedure associated with the
"^DD",727.815,727.815,116,21,3,0)
Event Capture patient record.
"^DD",727.815,727.815,116,23,0)
^^7^7^3130521^
"^DD",727.815,727.815,116,23,1,0)
Data is derived by returning a local array (seventh node) of the
"^DD",727.815,727.815,116,23,2,0)
$$GETPRV^ECPRVMUT API (DBIA #4460) that returns the PROVIDER
"^DD",727.815,727.815,116,23,3,0)
multiple (#42) from the EVENT CAPTURE PATIENT File (#721).  
"^DD",727.815,727.815,116,23,4,0)
 
"^DD",727.815,727.815,116,23,5,0)
The PROVIDER #7 is the value of a "2" prefixed to the pointer value to
"^DD",727.815,727.815,116,23,6,0)
indicate that the source file is "200". For example, if the IEN of the
"^DD",727.815,727.815,116,23,7,0)
provider in file #200 is 98765, the value that will be stored is 298765.
"^DD",727.815,727.815,116,"DT")
3130312
"^DD",727.815,727.815,117,0)
PROVIDER #7 PERSON CLASS^F^^3;7^K:$L(X)>7!($L(X)<7) X
"^DD",727.815,727.815,117,3)
Answer must be 7 characters in length.
"^DD",727.815,727.815,117,21,0)
^.001^2^2^3130521^^^
"^DD",727.815,727.815,117,21,1,0)
This is the VA code of the Person Class of the seventh assisting provider 
"^DD",727.815,727.815,117,21,2,0)
as of the date of this record.
"^DD",727.815,727.815,117,23,0)
^^4^4^3130521^
"^DD",727.815,727.815,117,23,1,0)
Derived by calling $$PRVCLASS^ECXUTL(IEN,DATE), where IEN is the IEN of
"^DD",727.815,727.815,117,23,2,0)
the NEW PERSON (#200) File.  Copied from field VA CODE (#5) of the PERSON
"^DD",727.815,727.815,117,23,3,0)
CLASS (#8932.1) file, as pointed to by the Person Class (#.01) field of
"^DD",727.815,727.815,117,23,4,0)
the PERSON CLASS (#8932.1) multiple of the NEW PERSON (#200) file.
"^DD",727.815,727.815,117,"DT")
3130312
"^DD",727.815,727.815,118,0)
PROVIDER #7 NPI^F^^3;8^K:$L(X)>10!($L(X)<1) X
"^DD",727.815,727.815,118,3)
Answer must be 1-10 characters in length.
"^DD",727.815,727.815,118,21,0)
^^2^2^3130521^
"^DD",727.815,727.815,118,21,1,0)
A standard unique life-long identifier of the seventh assisting provider
"^DD",727.815,727.815,118,21,2,0)
of health care services.
"^DD",727.815,727.815,118,23,0)
^.001^2^2^3130521^^^
"^DD",727.815,727.815,118,23,1,0)
The qualified identifier is retrieved via the supporting Kernel API: 
"^DD",727.815,727.815,118,23,2,0)
$$NPI^XUSNPI.
"^DD",727.815,727.815,118,"DT")
3130310
"^DD",727.815,727.815,119,0)
4CHAR^F^^3;9^K:$L(X)>4!($L(X)<4) X
"^DD",727.815,727.815,119,3)
Answer must be 4 characters in length.
"^DD",727.815,727.815,119,21,0)
^.001^2^2^3130522^^^^
"^DD",727.815,727.815,119,21,1,0)
A 4-character code value of the associated clinic as specified from the
"^DD",727.815,727.815,119,21,2,0)
DSS Clinics and Stop Code Worksheet File.
"^DD",727.815,727.815,119,23,0)
^^5^5^3130522^
"^DD",727.815,727.815,119,23,1,0)
4CHAR is determined by using the CLINIC IEN field (#120) of this file to
"^DD",727.815,727.815,119,23,2,0)
retrieve the NATIONAL CODE field (#7) from the CLINICS AND STOP CODES file
"^DD",727.815,727.815,119,23,3,0)
(#728.44).  The NATIONAL CODE (#7) field points to the NATIONAL CLINIC 
"^DD",727.815,727.815,119,23,4,0)
(#728.441) file.  This field is a copy of the CODE (#.01) field of the
"^DD",727.815,727.815,119,23,5,0)
NATIONAL CLINIC file (#728.441).
"^DD",727.815,727.815,119,"DT")
3130521
"^DD",727.815,727.815,120,0)
CLINIC IEN^*P44'O^SC(^3;10^S DIC("S")="I $P(^(0),""^"",3)=""C""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",727.815,727.815,120,2)
S Y(0)=Y S X=Y(0),X=X S Y=X
"^DD",727.815,727.815,120,2.1)
INTERNAL(CLINIC IEN)
"^DD",727.815,727.815,120,3)
Enter the clinic associated with this Event Capture record.
"^DD",727.815,727.815,120,12)
Allows selection of Clinic entries only.
"^DD",727.815,727.815,120,12.1)
S DIC("S")="I $P(^(0),""^"",3)=""C"""
"^DD",727.815,727.815,120,21,0)
^.001^1^1^3130522^^^^
"^DD",727.815,727.815,120,21,1,0)
The Associated Clinic of the Event Capture (EC) Procedure. 
"^DD",727.815,727.815,120,23,0)
^^4^4^3130522^
"^DD",727.815,727.815,120,23,1,0)
CLINIC IEN is retrieved from the ASSOCIATED CLINIC field (#26) of the 
"^DD",727.815,727.815,120,23,2,0)
EVENT CAPTURE PATIENT file (#721). The value stored here is a copy of the 
"^DD",727.815,727.815,120,23,3,0)
value stored in the ASSOCIATED CLINIC field (#26) of the EVENT CAPTURE 
"^DD",727.815,727.815,120,23,4,0)
PATIENT file (#721).
"^DD",727.815,727.815,120,"DT")
3130522
"^DD",727.815,727.815,121,0)
CAMP LEJEUNE STATUS^S^Y:YES;N:NO;^3;11^Q
"^DD",727.815,727.815,121,3)
Indicate Camp Lejeune status for the patient.
"^DD",727.815,727.815,121,21,0)
^^2^2^3130507^
"^DD",727.815,727.815,121,21,1,0)
Indicates if patient was exposed to contaminated water while stationed at
"^DD",727.815,727.815,121,21,2,0)
Camp Lejeune, NC between January 1, 1957 and December 31, 1987.
"^DD",727.815,727.815,121,23,0)
^^3^3^3130507^
"^DD",727.815,727.815,121,23,1,0)
Using the patient's DFN, a call is made to PAT^ECXUTL3, which in turn
"^DD",727.815,727.815,121,23,2,0)
calls SVC^VADPT. This call returns all service related information for a
"^DD",727.815,727.815,121,23,3,0)
patient, including their Camp Lejeune status.
"^DD",727.815,727.815,121,"DT")
3130310
"^DD",727.815,727.815,122,0)
ENCOUNTER CAMP LEJEUNE^S^Y:YES;N:NO;^3;12^Q
"^DD",727.815,727.815,122,3)
Indicate if this encounter is related to exposure at Camp Lejeune.
"^DD",727.815,727.815,122,21,0)
^^3^3^3130507^
"^DD",727.815,727.815,122,21,1,0)
Indicates if episode of care is related to exposure to contaminated water
"^DD",727.815,727.815,122,21,2,0)
while stationed at Camp Lejeune, NC between January 1, 1957 and December
"^DD",727.815,727.815,122,21,3,0)
31, 1987.
"^DD",727.815,727.815,122,23,0)
^^3^3^3130507^
"^DD",727.815,727.815,122,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.815,727.815,122,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. The ENCEVENT^PXAPI
"^DD",727.815,727.815,122,23,3,0)
returns the encounter Camp Lejeune data from the VISIT file (#9000010).
"^DD",727.815,727.815,122,"DT")
3130310
"^DD",727.819,727.819,17,0)
DEA, SPECIAL HDLG^S^I:INVESTIGATIONAL;1:SCHEDULE 1 ITEM;2:SCHEDULE 2 ITEM;3:SCHEDULE 3 ITEM;4:SCHEDULE 4 ITEM;5:SCHEDULE 5 ITEM;^0;17^Q
"^DD",727.819,727.819,17,.1)
DEA Special Handling
"^DD",727.819,727.819,17,3)
Enter I if the drug is investigational or 1-5 depending on the Drug's Schedule Item.
"^DD",727.819,727.819,17,21,0)
^.001^1^1^3130821^^^^
"^DD",727.819,727.819,17,21,1,0)
Indicates if the drug in this record is Investigational, or Schedule 1-5.
"^DD",727.819,727.819,17,23,0)
^.001^3^3^3130821^^
"^DD",727.819,727.819,17,23,1,0)
Derived from the DEA, SPECIAL HDLG field (#3) in the DRUG file (#50). If
"^DD",727.819,727.819,17,23,2,0)
the field contains a "1","2","3","4" or "5" (DRUG SCHEDULE) it will be set
"^DD",727.819,727.819,17,23,3,0)
to that number. Otherwise, if it contains an I, it will be set to I.
"^DD",727.819,727.819,17,"DT")
3120304
"^DD",727.819,727.819,66,0)
RACE 1^F^^2;3^K:$L(X)>6!($L(X)<1) X
"^DD",727.819,727.819,66,.1)
Race 1
"^DD",727.819,727.819,66,3)
Answer must be 1-6 characters in length.
"^DD",727.819,727.819,66,21,0)
^.001^1^1^3130515^^^^
"^DD",727.819,727.819,66,21,1,0)
Self-reported by patient as recorded in VistA patient file.
"^DD",727.819,727.819,66,23,0)
^^17^17^3130515^
"^DD",727.819,727.819,66,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field 
"^DD",727.819,727.819,66,23,2,0)
(#4), RACE 1 is derived from the PTF VALUE field (#5) of the RACE file
"^DD",727.819,727.819,66,23,3,0)
(#10) pointed to by the RACE INFORMATION field (#.01) of the 
"^DD",727.819,727.819,66,23,4,0)
RACE INFORMATION subfile (#2.02) of the PATIENT file (#2).
"^DD",727.819,727.819,66,23,5,0)
 
"^DD",727.819,727.819,66,23,6,0)
Only those RACE INFORMATION values in the RACE INFORMATION subfile (#2.03)
"^DD",727.819,727.819,66,23,7,0)
where the METHOD OF COLLECTION field (#.02) is set to 1
"^DD",727.819,727.819,66,23,8,0)
(SELF-IDENTIFICATION), will be included in the RACE 1 field. Up to 6 race 
"^DD",727.819,727.819,66,23,9,0)
entries can be included. If any of the RACE INFORMATION values returned is
"^DD",727.819,727.819,66,23,10,0)
"C" (DECLINED TO ANSWER), that will be the only value included in the
"^DD",727.819,727.819,66,23,11,0)
RACE1 field.
"^DD",727.819,727.819,66,23,12,0)
 
"^DD",727.819,727.819,66,23,13,0)
If the RACE 1 field is null after checking the RACE INFORMATION values 
"^DD",727.819,727.819,66,23,14,0)
then the patient's historical RACE data will be checked to see if it 
"^DD",727.819,727.819,66,23,15,0)
contains one of the twenty six non-standard race values that are 
"^DD",727.819,727.819,66,23,16,0)
convertible to standard race values.  If so, the race value will be 
"^DD",727.819,727.819,66,23,17,0)
converted to the standard value and stored in the RACE 1 field.
"^DD",727.819,727.819,66,"DT")
3020828
"^DD",727.819,727.819,67,0)
PLACEHOLDER^P50'^PSDRUG(^2;4^Q
"^DD",727.819,727.819,67,.1)

"^DD",727.819,727.819,67,3)
Enter drug dispensed.
"^DD",727.819,727.819,67,21,0)
^.001^1^1^3130903^^^
"^DD",727.819,727.819,67,21,1,0)
Currently NULL.  This field is not currently used.
"^DD",727.819,727.819,67,23,0)
^^1^1^3130903^
"^DD",727.819,727.819,67,23,1,0)
Currently NULL.
"^DD",727.819,727.819,67,"DT")
3130405
"^DD",727.819,727.819,68,0)
PLACEHOLDER^NJ5,2^^2;5^K:+X'=X!(X>50)!(X<0)!(X?.E1"."3N.N) X
"^DD",727.819,727.819,68,.1)

"^DD",727.819,727.819,68,3)
Type a Number between 0 and 50, 2 Decimal Digits.
"^DD",727.819,727.819,68,21,0)
^^1^1^3130515^
"^DD",727.819,727.819,68,21,1,0)
Currently NULL.  This field is not currently used.
"^DD",727.819,727.819,68,23,0)
^^1^1^3130515^
"^DD",727.819,727.819,68,23,1,0)
Currently NULL.
"^DD",727.819,727.819,68,"DT")
3130405
"^DD",727.819,727.819,69,0)
PLACEHOLDER^F^^2;6^K:$L(X)>40!($L(X)<1) X
"^DD",727.819,727.819,69,.1)

"^DD",727.819,727.819,69,3)
Answer must be 1-40 characters in length.
"^DD",727.819,727.819,69,21,0)
^.001^1^1^3130515^^^
"^DD",727.819,727.819,69,21,1,0)
Currently NULL.  This field is not currently used.
"^DD",727.819,727.819,69,23,0)
^^1^1^3130515^
"^DD",727.819,727.819,69,23,1,0)
Currently NULL.
"^DD",727.819,727.819,69,"DT")
3130405
"^DD",727.819,727.819,70,0)
PLACEHOLDER^S^Y:YES;N:NO;^2;7^Q
"^DD",727.819,727.819,70,.1)

"^DD",727.819,727.819,70,3)
Indicate if patient is in the ICU.
"^DD",727.819,727.819,70,21,0)
^.001^1^1^3130515^^
"^DD",727.819,727.819,70,21,1,0)
Currently NULL. This field is not currently used.
"^DD",727.819,727.819,70,23,0)
^^1^1^3130515^
"^DD",727.819,727.819,70,23,1,0)
Currently NULL.
"^DD",727.819,727.819,70,"DT")
3130515
"^DD",727.819,727.819,89,0)
ENCOUNTER SC^S^Y:YES;N:NO;^2;26^Q
"^DD",727.819,727.819,89,3)
Is this Encounter Service Connected?
"^DD",727.819,727.819,89,21,0)
^.001^2^2^3130514^^^
"^DD",727.819,727.819,89,21,1,0)
Indicates if treatment provided during this patient encounter is Service 
"^DD",727.819,727.819,89,21,2,0)
Connected.
"^DD",727.819,727.819,89,23,0)
^^4^4^3130514^
"^DD",727.819,727.819,89,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.819,727.819,89,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. This call returns visit
"^DD",727.819,727.819,89,23,3,0)
data, including the SERVICE CONNECTED field (#80001) in the VISIT file
"^DD",727.819,727.819,89,23,4,0)
(#9000010).
"^DD",727.819,727.819,89,"DT")
3130311
"^DD",727.819,727.819,90,0)
CAMP LEJEUNE STATUS^S^Y:YES;N:NO;^2;27^Q
"^DD",727.819,727.819,90,3)
Indicate Camp Lejeune status for the patient.
"^DD",727.819,727.819,90,21,0)
^^2^2^3130507^
"^DD",727.819,727.819,90,21,1,0)
Indicates if patient was exposed to contaminated water while stationed at
"^DD",727.819,727.819,90,21,2,0)
Camp Lejeune, NC between January 1, 1957 and December 31, 1987.
"^DD",727.819,727.819,90,23,0)
^^3^3^3130507^
"^DD",727.819,727.819,90,23,1,0)
Using the patient's DFN, a call is made to PAT^ECXUTL3, which in turn
"^DD",727.819,727.819,90,23,2,0)
calls SVC^VADPT. This call returns all service related information for a
"^DD",727.819,727.819,90,23,3,0)
patient, including their Camp Lejeune status.
"^DD",727.819,727.819,90,"DT")
3130309
"^DD",727.819,727.819,91,0)
ENCOUNTER CAMP LEJEUNE^S^Y:YES;N:NO;^2;28^Q
"^DD",727.819,727.819,91,3)
Indicate if this encounter is related to exposure at Camp Lejeune.
"^DD",727.819,727.819,91,21,0)
^^3^3^3130507^
"^DD",727.819,727.819,91,21,1,0)
Indicates if episode of care is related to exposure to contaminated water
"^DD",727.819,727.819,91,21,2,0)
while stationed at Camp Lejeune, NC between January 1, 1957 and December
"^DD",727.819,727.819,91,21,3,0)
31, 1987.
"^DD",727.819,727.819,91,23,0)
^^3^3^3130507^
"^DD",727.819,727.819,91,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.819,727.819,91,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. The ENCEVENT^PXAPI
"^DD",727.819,727.819,91,23,3,0)
returns the encounter Camp Lejeune data from the VISIT file (#9000010).
"^DD",727.819,727.819,91,"DT")
3130309
"^DD",727.824,727.824,33,0)
ENCOUNTER SC^S^Y:YES;N:NO;^1;14^Q
"^DD",727.824,727.824,33,3)
Is this Encounter Service Connected?
"^DD",727.824,727.824,33,21,0)
^.001^2^2^3130514^^^
"^DD",727.824,727.824,33,21,1,0)
Indicates if treatment provided during this patient encounter is Service 
"^DD",727.824,727.824,33,21,2,0)
Connected.
"^DD",727.824,727.824,33,23,0)
^^4^4^3130514^
"^DD",727.824,727.824,33,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.824,727.824,33,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. This call returns visit
"^DD",727.824,727.824,33,23,3,0)
data, including the SERVICE CONNECTED field (#80001) in the VISIT file
"^DD",727.824,727.824,33,23,4,0)
(#9000010).
"^DD",727.824,727.824,33,"DT")
3130309
"^DD",727.824,727.824,34,0)
CAMP LEJEUNE STATUS^S^Y:YES;N:NO;^1;15^Q
"^DD",727.824,727.824,34,3)
Indicate Camp Lejeune status for the patient.
"^DD",727.824,727.824,34,21,0)
^^2^2^3130507^
"^DD",727.824,727.824,34,21,1,0)
Indicates if patient was exposed to contaminated water while stationed at
"^DD",727.824,727.824,34,21,2,0)
Camp Lejeune, NC between January 1, 1957 and December 31, 1987.
"^DD",727.824,727.824,34,23,0)
^^3^3^3130507^
"^DD",727.824,727.824,34,23,1,0)
Using the patient's DFN, a call is made to PAT^ECXUTL3, which in turn
"^DD",727.824,727.824,34,23,2,0)
calls SVC^VADPT. This call returns all service related information for a
"^DD",727.824,727.824,34,23,3,0)
patient, including their Camp Lejeune status.
"^DD",727.824,727.824,34,"DT")
3130309
"^DD",727.824,727.824,35,0)
ENCOUNTER CAMP LEJEUNE^S^Y:YES;N:NO;^1;16^Q
"^DD",727.824,727.824,35,3)
Indicate if this encounter is related to exposure at Camp Lejeune.
"^DD",727.824,727.824,35,21,0)
^^3^3^3130507^
"^DD",727.824,727.824,35,21,1,0)
Indicates if episode of care is related to exposure to contaminated water
"^DD",727.824,727.824,35,21,2,0)
while stationed at Camp Lejeune, NC between January 1, 1957 and December
"^DD",727.824,727.824,35,21,3,0)
31, 1987.
"^DD",727.824,727.824,35,23,0)
^^3^3^3130507^
"^DD",727.824,727.824,35,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.824,727.824,35,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. The ENCEVENT^PXAPI
"^DD",727.824,727.824,35,23,3,0)
returns the encounter Camp Lejeune data from the VISIT file (#9000010).
"^DD",727.824,727.824,35,"DT")
3130309
"^DD",727.825,727.825,73,0)
RACE 1^F^^1;32^K:$L(X)>6!($L(X)<1) X
"^DD",727.825,727.825,73,.1)
Race 1
"^DD",727.825,727.825,73,3)
Answer must be 1-6 characters in length.
"^DD",727.825,727.825,73,21,0)
^.001^1^1^3130219^^^^
"^DD",727.825,727.825,73,21,1,0)
Self-reported by patient as recorded in VistA patient file.
"^DD",727.825,727.825,73,23,0)
^^17^17^3130219^
"^DD",727.825,727.825,73,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field 
"^DD",727.825,727.825,73,23,2,0)
(#4), RACE 1 is derived from the PTF VALUE field (#5) of the RACE file
"^DD",727.825,727.825,73,23,3,0)
(#10) pointed to by the RACE INFORMATION field (#.01) of the 
"^DD",727.825,727.825,73,23,4,0)
RACE INFORMATION subfile (#2.02) of the PATIENT file (#2).
"^DD",727.825,727.825,73,23,5,0)
 
"^DD",727.825,727.825,73,23,6,0)
Only those RACE INFORMATION values in the RACE INFORMATION subfile (#2.03)
"^DD",727.825,727.825,73,23,7,0)
where the METHOD OF COLLECTION field (#.02) is set to 1
"^DD",727.825,727.825,73,23,8,0)
(SELF-IDENTIFICATION), will be included in the RACE 1 field. Up to 6 race 
"^DD",727.825,727.825,73,23,9,0)
entries can be included. If any of the RACE INFORMATION values returned is
"^DD",727.825,727.825,73,23,10,0)
"C" (DECLINED TO ANSWER), that will be the only value included in the
"^DD",727.825,727.825,73,23,11,0)
RACE1 field.
"^DD",727.825,727.825,73,23,12,0)
 
"^DD",727.825,727.825,73,23,13,0)
If the RACE 1 field is null after checking the RACE INFORMATION values 
"^DD",727.825,727.825,73,23,14,0)
then the patient's historical RACE data will be checked to see if it 
"^DD",727.825,727.825,73,23,15,0)
contains one of the twenty six non-standard race values that are 
"^DD",727.825,727.825,73,23,16,0)
convertible to standard race values.  If so, the race value will be 
"^DD",727.825,727.825,73,23,17,0)
converted to the standard value and stored in the RACE 1 field.
"^DD",727.825,727.825,73,"DT")
3020828
"^DD",727.825,727.825,111,0)
ENCOUNTER SC^S^Y:YES;N:NO;^3;2^Q
"^DD",727.825,727.825,111,3)
Is this Encounter Service Connected?
"^DD",727.825,727.825,111,21,0)
^.001^2^2^3130522^^^^
"^DD",727.825,727.825,111,21,1,0)
Indicates if treatment provided during this patient encounter is Service 
"^DD",727.825,727.825,111,21,2,0)
Connected.
"^DD",727.825,727.825,111,23,0)
^.001^4^4^3130522^^
"^DD",727.825,727.825,111,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.825,727.825,111,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. This call returns visit
"^DD",727.825,727.825,111,23,3,0)
data, including the SERVICE CONNECTED field (#80001) in the VISIT file
"^DD",727.825,727.825,111,23,4,0)
(#9000010).
"^DD",727.825,727.825,111,"DT")
3130308
"^DD",727.825,727.825,112,0)
VIETNAM^S^Y:YES;N:NO;U:UNKNOWN;^3;3^Q
"^DD",727.825,727.825,112,3)
Select the appropriate Vietnam service status for this patient.
"^DD",727.825,727.825,112,21,0)
^.001^1^1^3130522^^^^
"^DD",727.825,727.825,112,21,1,0)
Indicates if patient is a Vietnam era veteran.
"^DD",727.825,727.825,112,23,0)
^.001^3^3^3130522^^
"^DD",727.825,727.825,112,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4)
"^DD",727.825,727.825,112,23,2,0)
in the QUASAR EXTRACT file (#727.825), VIETNAM data is derived from the
"^DD",727.825,727.825,112,23,3,0)
VIETNAM SERVICE INDICATED? field (#.32101) in the PATIENT file (#2).
"^DD",727.825,727.825,112,"DT")
3130304
"^DD",727.825,727.825,113,0)
PROVIDER #6^F^^3;4^K:$L(X)>11!($L(X)<2) X
"^DD",727.825,727.825,113,3)
Answer must be 2-11 characters in length.
"^DD",727.825,727.825,113,21,0)
^.001^3^3^3130806^^^^
"^DD",727.825,727.825,113,21,1,0)
The sixth provider associated with the patient encounter. It represents
"^DD",727.825,727.825,113,21,2,0)
an assisting Provider who performed the procedure associated with the A&SP
"^DD",727.825,727.825,113,21,3,0)
Clinic Visit record.  
"^DD",727.825,727.825,113,23,0)
^.001^4^4^3130806^^^
"^DD",727.825,727.825,113,23,1,0)
A character string of format "2"_IEN, where IEN is the internal entry
"^DD",727.825,727.825,113,23,2,0)
number for the Provider in the NEW PERSON file (#200).  Data is pulled
"^DD",727.825,727.825,113,23,3,0)
from the fifth (#2.7) SECONDARY PROVIDER multiple in the A&SP CLINIC
"^DD",727.825,727.825,113,23,4,0)
VISIT file (#509850.6).
"^DD",727.825,727.825,113,"DT")
3130312
"^DD",727.825,727.825,114,0)
PROVIDER #6 PERSON CLASS^F^^3;5^K:$L(X)>7!($L(X)<7) X
"^DD",727.825,727.825,114,3)
Answer must be 7 characters in length.
"^DD",727.825,727.825,114,21,0)
^.001^2^2^3130806^^^^
"^DD",727.825,727.825,114,21,1,0)
This is the VA code of the Person Class of the sixth assisting Provider
"^DD",727.825,727.825,114,21,2,0)
as of the date of this record.
"^DD",727.825,727.825,114,23,0)
^.001^4^4^3130806^^
"^DD",727.825,727.825,114,23,1,0)
Derived by calling $$PRVCLASS^ECXUTL(IEN,DATE), where IEN is the IEN of
"^DD",727.825,727.825,114,23,2,0)
the NEW PERSON (#200) File.  Copied from field VA CODE (#5) of the PERSON
"^DD",727.825,727.825,114,23,3,0)
CLASS (#8932.1) file, as pointed to by the Person Class (#.01) field of
"^DD",727.825,727.825,114,23,4,0)
the PERSON CLASS (#8932.1) multiple of the NEW PERSON (#200) file.
"^DD",727.825,727.825,114,"DT")
3130312
"^DD",727.825,727.825,115,0)
PROVIDER #6 NPI^F^^3;6^K:$L(X)>10!($L(X)<10) X
"^DD",727.825,727.825,115,3)
Answer must be 10 characters in length.
"^DD",727.825,727.825,115,21,0)
^.001^2^2^3130806^^^
"^DD",727.825,727.825,115,21,1,0)
A standard unique life-long identifier of the sixth assisting provider 
"^DD",727.825,727.825,115,21,2,0)
of health care service.
"^DD",727.825,727.825,115,23,0)
^.001^1^1^3130806^^^^
"^DD",727.825,727.825,115,23,1,0)
The NPI is retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.825,727.825,115,"DT")
3130403
"^DD",727.825,727.825,116,0)
PROVIDER #7^F^^3;7^K:$L(X)>11!($L(X)<2) X
"^DD",727.825,727.825,116,3)
Answer must be 2-11 characters in length.
"^DD",727.825,727.825,116,21,0)
^.001^3^3^3130522^^^^
"^DD",727.825,727.825,116,21,1,0)
The seventh provider associated with the patient encounter. It represents
"^DD",727.825,727.825,116,21,2,0)
an assisting Provider who performed the procedure associated with the A&SP
"^DD",727.825,727.825,116,21,3,0)
Clinic Visit record.  
"^DD",727.825,727.825,116,23,0)
^.001^4^4^3130522^^
"^DD",727.825,727.825,116,23,1,0)
A character string of format "2"_IEN, where IEN is the internal entry
"^DD",727.825,727.825,116,23,2,0)
number for the Provider in the NEW PERSON file (#200).  Data is pulled
"^DD",727.825,727.825,116,23,3,0)
from the sixth (#2.7) SECONDARY PROVIDER multiple in the A&SP CLINIC
"^DD",727.825,727.825,116,23,4,0)
VISIT file (#509850.6).
"^DD",727.825,727.825,116,"DT")
3130312
"^DD",727.825,727.825,117,0)
PROVIDER #7 PERSON CLASS^F^^3;8^K:$L(X)>7!($L(X)<7) X
"^DD",727.825,727.825,117,3)
Answer must be 7 characters in length.
"^DD",727.825,727.825,117,21,0)
^.001^2^2^3130522^^^
"^DD",727.825,727.825,117,21,1,0)
This is the VA code of the Person Class of the seventh assisting Provider
"^DD",727.825,727.825,117,21,2,0)
as of the date of this record.
"^DD",727.825,727.825,117,23,0)
^^4^4^3130522^
"^DD",727.825,727.825,117,23,1,0)
Derived by calling $$PRVCLASS^ECXUTL(IEN,DATE), where IEN is the IEN of
"^DD",727.825,727.825,117,23,2,0)
the NEW PERSON (#200) File.  Copied from field VA CODE (#5) of the PERSON
"^DD",727.825,727.825,117,23,3,0)
CLASS (#8932.1) file, as pointed to by the Person Class (#.01) field of
"^DD",727.825,727.825,117,23,4,0)
the PERSON CLASS (#8932.1) multiple of the NEW PERSON (#200) file.
"^DD",727.825,727.825,117,"DT")
3130312
"^DD",727.825,727.825,118,0)
PROVIDER #7 NPI^F^^3;9^K:$L(X)>10!($L(X)<10) X
"^DD",727.825,727.825,118,3)
Answer must be 10 characters in length.
"^DD",727.825,727.825,118,21,0)
^^2^2^3130522^
"^DD",727.825,727.825,118,21,1,0)
A standard unique life-long identifier of the seventh assisting provider 
"^DD",727.825,727.825,118,21,2,0)
of health care service.
"^DD",727.825,727.825,118,23,0)
^.001^1^1^3130522^^^
"^DD",727.825,727.825,118,23,1,0)
The NPI is retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.825,727.825,118,"DT")
3130403
"^DD",727.825,727.825,119,0)
4CHAR^F^^3;10^K:$L(X)>4!($L(X)<1) X
"^DD",727.825,727.825,119,3)
Answer must be 1-4 characters in length.
"^DD",727.825,727.825,119,21,0)
^.001^2^2^3130522^^
"^DD",727.825,727.825,119,21,1,0)
A 4-character code value of the associated clinic as specified from the
"^DD",727.825,727.825,119,21,2,0)
DSS Clinics and Stop Code Worksheet File.
"^DD",727.825,727.825,119,23,0)
^^5^5^3130522^
"^DD",727.825,727.825,119,23,1,0)
4CHAR is determined by using the CLINIC IEN field (#120) of this file to
"^DD",727.825,727.825,119,23,2,0)
retrieve the NATIONAL CODE field (#7) from the CLINICS AND STOP CODES file
"^DD",727.825,727.825,119,23,3,0)
(#728.44).  The NATIONAL CODE (#7) field points to the NATIONAL CLINIC
"^DD",727.825,727.825,119,23,4,0)
(#728.441) file.  This field is a copy of the CODE (#.01) field of the
"^DD",727.825,727.825,119,23,5,0)
NATIONAL CLINIC file (#728.441).
"^DD",727.825,727.825,119,"DT")
3130310
"^DD",727.825,727.825,120,0)
CLINIC IEN^*P44'O^SC(^3;11^S DIC("S")="I $P(^(0),""^"",3)=""C""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",727.825,727.825,120,2)
S Y(0)=Y S X=Y(0),X=X S Y=X
"^DD",727.825,727.825,120,2.1)
INTERNAL(CLINIC IEN)
"^DD",727.825,727.825,120,3)
Enter the clinic associated with this A&SP clinic visit.
"^DD",727.825,727.825,120,12)
Allows selection of Clinic entries only.
"^DD",727.825,727.825,120,12.1)
S DIC("S")="I $P(^(0),""^"",3)=""C"""
"^DD",727.825,727.825,120,21,0)
^^1^1^3130522^
"^DD",727.825,727.825,120,21,1,0)
The Clinic Location of the A&SP clinic visit record.
"^DD",727.825,727.825,120,23,0)
^^4^4^3130522^
"^DD",727.825,727.825,120,23,1,0)
CLINIC IEN is retrieved from the CLINIC LOCATION field (#2.6) of the
"^DD",727.825,727.825,120,23,2,0)
A&SP CLINIC VISIT file (#509850.6). The value stored here is a copy of the
"^DD",727.825,727.825,120,23,3,0)
value stored in the CLINIC LOCATION field (#2.6) of the A&SP CLINIC VISIT 
"^DD",727.825,727.825,120,23,4,0)
file (#509850.6).
"^DD",727.825,727.825,120,"DT")
3130522
"^DD",727.825,727.825,121,0)
CAMP LEJEUNE STATUS^S^Y:YES;N:NO;^3;12^Q
"^DD",727.825,727.825,121,3)
Indicate Camp Lejeune status for the patient.
"^DD",727.825,727.825,121,21,0)
^^2^2^3130507^
"^DD",727.825,727.825,121,21,1,0)
Indicates if patient was exposed to contaminated water while stationed at
"^DD",727.825,727.825,121,21,2,0)
Camp Lejeune, NC between January 1, 1957 and December 31, 1987.
"^DD",727.825,727.825,121,23,0)
^^3^3^3130507^
"^DD",727.825,727.825,121,23,1,0)
Using the patient's DFN, a call is made to PAT^ECXUTL3, which in turn
"^DD",727.825,727.825,121,23,2,0)
calls SVC^VADPT. This call returns all service related information for a
"^DD",727.825,727.825,121,23,3,0)
patient, including their Camp Lejeune status.
"^DD",727.825,727.825,121,"DT")
3130310
"^DD",727.825,727.825,122,0)
ENCOUNTER CAMP LEJEUNE^S^Y:YES;N:NO;^3;13^Q
"^DD",727.825,727.825,122,3)
Indicate if this encounter is related to exposure at Camp Lejeune.
"^DD",727.825,727.825,122,21,0)
^^3^3^3130507^
"^DD",727.825,727.825,122,21,1,0)
Indicates if episode of care is related to exposure to contaminated water
"^DD",727.825,727.825,122,21,2,0)
while stationed at Camp Lejeune, NC between January 1, 1957 and December
"^DD",727.825,727.825,122,21,3,0)
31, 1987.
"^DD",727.825,727.825,122,23,0)
^^3^3^3130507^
"^DD",727.825,727.825,122,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.825,727.825,122,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. The ENCEVENT^PXAPI
"^DD",727.825,727.825,122,23,3,0)
returns the encounter Camp Lejeune data from the VISIT file (#9000010).
"^DD",727.825,727.825,122,"DT")
3130310
"^DD",727.826,727.826,66,0)
RACE 1^F^^1;34^K:$L(X)>6!($L(X)<1) X
"^DD",727.826,727.826,66,.1)
Race 1
"^DD",727.826,727.826,66,3)
Answer must be 1-6 characters in length.
"^DD",727.826,727.826,66,21,0)
^.001^1^1^3130219^^^
"^DD",727.826,727.826,66,21,1,0)
Self-reported by patient as recorded in VistA patient file.
"^DD",727.826,727.826,66,23,0)
^^17^17^3130219^
"^DD",727.826,727.826,66,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field 
"^DD",727.826,727.826,66,23,2,0)
(#4), RACE 1 is derived from the PTF VALUE field (#5) of the RACE file
"^DD",727.826,727.826,66,23,3,0)
(#10) pointed to by the RACE INFORMATION field (#.01) of the 
"^DD",727.826,727.826,66,23,4,0)
RACE INFORMATION subfile (#2.02) of the PATIENT file (#2).
"^DD",727.826,727.826,66,23,5,0)
 
"^DD",727.826,727.826,66,23,6,0)
Only those RACE INFORMATION values in the RACE INFORMATION subfile (#2.03)
"^DD",727.826,727.826,66,23,7,0)
where the METHOD OF COLLECTION field (#.02) is set to 1
"^DD",727.826,727.826,66,23,8,0)
(SELF-IDENTIFICATION), will be included in the RACE 1 field. Up to 6 race 
"^DD",727.826,727.826,66,23,9,0)
entries can be included. If any of the RACE INFORMATION values returned is
"^DD",727.826,727.826,66,23,10,0)
"C" (DECLINED TO ANSWER), that will be the only value included in the
"^DD",727.826,727.826,66,23,11,0)
RACE1 field.
"^DD",727.826,727.826,66,23,12,0)
 
"^DD",727.826,727.826,66,23,13,0)
If the RACE 1 field is null after checking the RACE INFORMATION values 
"^DD",727.826,727.826,66,23,14,0)
then the patient's historical RACE data will be checked to see if it 
"^DD",727.826,727.826,66,23,15,0)
contains one of the twenty six non-standard race values that are 
"^DD",727.826,727.826,66,23,16,0)
convertible to standard race values.  If so, the race value will be 
"^DD",727.826,727.826,66,23,17,0)
converted to the standard value and stored in the RACE 1 field.
"^DD",727.826,727.826,66,"DT")
3020829
"^DD",727.826,727.826,97,0)
ENCOUNTER SC^S^Y:YES;N:NO;^2;17^Q
"^DD",727.826,727.826,97,3)
Is this Encounter Service Connected?
"^DD",727.826,727.826,97,21,0)
^.001^2^2^3130514^^^
"^DD",727.826,727.826,97,21,1,0)
Indicates if treatment provided during this patient encounter is Service 
"^DD",727.826,727.826,97,21,2,0)
Connected.
"^DD",727.826,727.826,97,23,0)
^^4^4^3130514^
"^DD",727.826,727.826,97,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.826,727.826,97,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. This call returns visit
"^DD",727.826,727.826,97,23,3,0)
data, including the SERVICE CONNECTED field (#80001) in the VISIT file
"^DD",727.826,727.826,97,23,4,0)
(#9000010).
"^DD",727.826,727.826,97,"DT")
3130309
"^DD",727.826,727.826,98,0)
VIETNAM^S^Y:YES;N:NO;U:UNKNOWN;^2;18^Q
"^DD",727.826,727.826,98,3)
Select the appropriate Vietnam service status for this patient.
"^DD",727.826,727.826,98,21,0)
^.001^1^1^3130507^^^
"^DD",727.826,727.826,98,21,1,0)
Indicates if patient is a Vietnam era veteran.
"^DD",727.826,727.826,98,23,0)
^^3^3^3130507^
"^DD",727.826,727.826,98,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4)
"^DD",727.826,727.826,98,23,2,0)
in the PROSTHETICS EXTRACT file (#727.826), VIETNAM data is derived from
"^DD",727.826,727.826,98,23,3,0)
the VIETNAM SERVICE INDICATED? field (#.32101) in the PATIENT file (#2).
"^DD",727.826,727.826,98,"DT")
3130309
"^DD",727.826,727.826,99,0)
CAMP LEJEUNE STATUS^S^Y:YES;N:NO;^2;19^Q
"^DD",727.826,727.826,99,3)
Indicate Camp Lejeune status for the patient.
"^DD",727.826,727.826,99,21,0)
^^2^2^3130507^
"^DD",727.826,727.826,99,21,1,0)
Indicates if patient was exposed to contaminated water while stationed at
"^DD",727.826,727.826,99,21,2,0)
Camp Lejeune, NC between January 1, 1957 and December 31, 1987.
"^DD",727.826,727.826,99,23,0)
^^3^3^3130507^
"^DD",727.826,727.826,99,23,1,0)
Using the patient's DFN, a call is made to PAT^ECXUTL3, which in turn
"^DD",727.826,727.826,99,23,2,0)
calls SVC^VADPT. This call returns all service related information for a
"^DD",727.826,727.826,99,23,3,0)
patient, including their Camp Lejeune status.
"^DD",727.826,727.826,99,"DT")
3130309
"^DD",727.826,727.826,100,0)
ENCOUNTER CAMP LEJEUNE^S^Y:YES;N:NO;^2;20^Q
"^DD",727.826,727.826,100,3)
Indicate if this encounter is related to exposure at Camp Lejeune.
"^DD",727.826,727.826,100,21,0)
^^3^3^3130507^
"^DD",727.826,727.826,100,21,1,0)
Indicates if episode of care is related to exposure to contaminated water
"^DD",727.826,727.826,100,21,2,0)
while stationed at Camp Lejeune, NC between January 1, 1957 and December
"^DD",727.826,727.826,100,21,3,0)
31, 1987.
"^DD",727.826,727.826,100,23,0)
^^3^3^3130507^
"^DD",727.826,727.826,100,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.826,727.826,100,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. The ENCEVENT^PXAPI
"^DD",727.826,727.826,100,23,3,0)
returns the encounter Camp Lejeune data from the VISIT file (#9000010).
"^DD",727.826,727.826,100,"DT")
3130309
"^DD",727.827,727.827,74,0)
RACE 1^F^^2;14^K:$L(X)>6!($L(X)<1) X
"^DD",727.827,727.827,74,.1)
Race 1
"^DD",727.827,727.827,74,3)
Answer must be 1-6 characters in length.
"^DD",727.827,727.827,74,21,0)
^.001^1^1^3130219^^^
"^DD",727.827,727.827,74,21,1,0)
Self-reported by patient as recorded in VistA patient file.
"^DD",727.827,727.827,74,23,0)
^^17^17^3130219^
"^DD",727.827,727.827,74,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field 
"^DD",727.827,727.827,74,23,2,0)
(#4), RACE 1 is derived from the PTF VALUE field (#5) of the RACE file
"^DD",727.827,727.827,74,23,3,0)
(#10) pointed to by the RACE INFORMATION field (#.01) of the 
"^DD",727.827,727.827,74,23,4,0)
RACE INFORMATION subfile (#2.02) of the PATIENT file (#2).
"^DD",727.827,727.827,74,23,5,0)
 
"^DD",727.827,727.827,74,23,6,0)
Only those RACE INFORMATION values in the RACE INFORMATION subfile (#2.03)
"^DD",727.827,727.827,74,23,7,0)
where the METHOD OF COLLECTION field (#.02) is set to 1
"^DD",727.827,727.827,74,23,8,0)
(SELF-IDENTIFICATION), will be included in the RACE 1 field. Up to 6 race 
"^DD",727.827,727.827,74,23,9,0)
entries can be included. If any of the RACE INFORMATION values returned is
"^DD",727.827,727.827,74,23,10,0)
"C" (DECLINED TO ANSWER), that will be the only value included in the
"^DD",727.827,727.827,74,23,11,0)
RACE1 field.
"^DD",727.827,727.827,74,23,12,0)
 
"^DD",727.827,727.827,74,23,13,0)
If the RACE 1 field is null after checking the RACE INFORMATION values 
"^DD",727.827,727.827,74,23,14,0)
then the patient's historical RACE data will be checked to see if it 
"^DD",727.827,727.827,74,23,15,0)
contains one of the twenty six non-standard race values that are 
"^DD",727.827,727.827,74,23,16,0)
convertible to standard race values.  If so, the race value will be 
"^DD",727.827,727.827,74,23,17,0)
converted to the standard value and stored in the RACE 1 field.
"^DD",727.827,727.827,74,"DT")
3020828
"^DD",727.827,727.827,117,0)
ENCOUNTER SC^S^Y:YES;N:NO;^3;25^Q
"^DD",727.827,727.827,117,3)
Is this Encounter Service Connected?
"^DD",727.827,727.827,117,21,0)
^.001^2^2^3130514^^^^
"^DD",727.827,727.827,117,21,1,0)
Indicates if treatment provided during this patient encounter is Service 
"^DD",727.827,727.827,117,21,2,0)
Connected.
"^DD",727.827,727.827,117,23,0)
^^4^4^3130514^
"^DD",727.827,727.827,117,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.827,727.827,117,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. This call returns visit
"^DD",727.827,727.827,117,23,3,0)
data, including the SERVICE CONNECTED field (#80001) in the VISIT file
"^DD",727.827,727.827,117,23,4,0)
(#9000010).
"^DD",727.827,727.827,117,"DT")
3130308
"^DD",727.827,727.827,118,0)
VIETNAM^S^Y:YES;N:NO;U:UNKNOWN;^3;26^Q
"^DD",727.827,727.827,118,3)
Select the appropriate Vietnam service status for this patient.
"^DD",727.827,727.827,118,21,0)
^.001^1^1^3130507^^^
"^DD",727.827,727.827,118,21,1,0)
Indicates if patient is a Vietnam era veteran.
"^DD",727.827,727.827,118,23,0)
^^3^3^3130507^
"^DD",727.827,727.827,118,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4)
"^DD",727.827,727.827,118,23,2,0)
in this file, VIETNAM data is derived from the VIETNAM SERVICE INDICATED?
"^DD",727.827,727.827,118,23,3,0)
field (#.32101) in the PATIENT file (#2).
"^DD",727.827,727.827,118,"DT")
3130308
"^DD",727.827,727.827,119,0)
SECONDARY PROVIDER #6^F^^3;27^K:$L(X)>11!($L(X)<2) X
"^DD",727.827,727.827,119,3)
Answer must be 2-11 characters in length.
"^DD",727.827,727.827,119,21,0)
^.001^1^1^3130806^^^
"^DD",727.827,727.827,119,21,1,0)
This is the sixth assisting provider associated with this clinic visit. 
"^DD",727.827,727.827,119,23,0)
^.001^5^5^3130806^^^^
"^DD",727.827,727.827,119,23,1,0)
Data is derived by making a call to the ENCEVENT^PXAPI (DBIA1889-F) API
"^DD",727.827,727.827,119,23,2,0)
using the clinic encounter, returning the secondary provider IEN.
"^DD",727.827,727.827,119,23,3,0)
 
"^DD",727.827,727.827,119,23,4,0)
A character string of format "2"_IEN, where IEN is the internal entry
"^DD",727.827,727.827,119,23,5,0)
number for the secondary provider in the NEW PERSON file (#200).
"^DD",727.827,727.827,119,"DT")
3130312
"^DD",727.827,727.827,120,0)
SECONDARY PROVIDER #6 PC^F^^3;28^K:$L(X)>7!($L(X)<7) X
"^DD",727.827,727.827,120,3)
Answer must be 7 characters in length.
"^DD",727.827,727.827,120,21,0)
^.001^2^2^3130806^^^
"^DD",727.827,727.827,120,21,1,0)
The VA code of the Person Class of the sixth assisting provider as of the
"^DD",727.827,727.827,120,21,2,0)
date of this record.
"^DD",727.827,727.827,120,23,0)
^.001^4^4^3130806^^^
"^DD",727.827,727.827,120,23,1,0)
Derived by calling $$PRVCLASS^ECXUTL(IEN,DATE), where IEN is the IEN of 
"^DD",727.827,727.827,120,23,2,0)
the NEW PERSON (#200) File.  Copied from field VA CODE (#5) of the PERSON
"^DD",727.827,727.827,120,23,3,0)
CLASS (#8932.1) file, as pointed to by the Person Class (#.01) field of
"^DD",727.827,727.827,120,23,4,0)
the PERSON CLASS (#8932.1) multiple of the NEW PERSON (#200) file.
"^DD",727.827,727.827,120,"DT")
3130312
"^DD",727.827,727.827,121,0)
SECONDARY PROVIDER #6 NPI^F^^3;29^K:$L(X)>10!($L(X)<10) X
"^DD",727.827,727.827,121,3)
Answer must be 10 characters in length.
"^DD",727.827,727.827,121,21,0)
^.001^2^2^3130806^^^
"^DD",727.827,727.827,121,21,1,0)
A standard unique life-long identifier of the sixth assisting provider
"^DD",727.827,727.827,121,21,2,0)
associated with this clinic visit.
"^DD",727.827,727.827,121,23,0)
^.001^1^1^3130806^^^
"^DD",727.827,727.827,121,23,1,0)
The NPI is retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.827,727.827,121,"DT")
3130312
"^DD",727.827,727.827,122,0)
SECONDARY PROVIDER #7^F^^4;1^K:$L(X)>11!($L(X)<2) X
"^DD",727.827,727.827,122,3)
Answer must be 2-11 characters in length.
"^DD",727.827,727.827,122,21,0)
^^1^1^3130523^
"^DD",727.827,727.827,122,21,1,0)
This is the seventh assisting provider associated with this clinic visit. 
"^DD",727.827,727.827,122,23,0)
^.001^5^5^3130523^^^
"^DD",727.827,727.827,122,23,1,0)
Data is derived by making a call to the ENCEVENT^PXAPI (DBIA1889-F) API
"^DD",727.827,727.827,122,23,2,0)
using the clinic encounter, returning the secondary provider IEN.
"^DD",727.827,727.827,122,23,3,0)
 
"^DD",727.827,727.827,122,23,4,0)
A character string of format "2"_IEN, where IEN is the internal entry
"^DD",727.827,727.827,122,23,5,0)
number for the secondary provider in the NEW PERSON file (#200).
"^DD",727.827,727.827,122,"DT")
3130312
"^DD",727.827,727.827,123,0)
SECONDARY PROVIDER #7 PC^F^^4;2^K:$L(X)>7!($L(X)<7) X
"^DD",727.827,727.827,123,3)
Answer must be 7 characters in length.
"^DD",727.827,727.827,123,21,0)
^.001^2^2^3130403^^
"^DD",727.827,727.827,123,21,1,0)
The VA code of the Person Class of the seventh assisting provider as of 
"^DD",727.827,727.827,123,21,2,0)
the date of this record.
"^DD",727.827,727.827,123,23,0)
^.001^4^4^3130403^^
"^DD",727.827,727.827,123,23,1,0)
Derived by calling $$PRVCLASS^ECXUTL(IEN,DATE), where IEN is the IEN of 
"^DD",727.827,727.827,123,23,2,0)
the NEW PERSON (#200) File.  Copied from field VA CODE (#5) of the PERSON
"^DD",727.827,727.827,123,23,3,0)
CLASS (#8932.1) file, as pointed to by the Person Class (#.01) field of
"^DD",727.827,727.827,123,23,4,0)
the PERSON CLASS (#8932.1) multiple of the NEW PERSON (#200) file.
"^DD",727.827,727.827,123,"DT")
3130312
"^DD",727.827,727.827,124,0)
SECONDARY PROVIDER #7 NPI^F^^4;3^K:$L(X)>10!($L(X)<10) X
"^DD",727.827,727.827,124,3)
Answer must be 10 characters in length.
"^DD",727.827,727.827,124,21,0)
^.001^2^2^3130403^^
"^DD",727.827,727.827,124,21,1,0)
A standard unique life-long identifier of the seventh assisting provider
"^DD",727.827,727.827,124,21,2,0)
associated with this clinic visit.
"^DD",727.827,727.827,124,23,0)
^.001^1^1^3130403^^
"^DD",727.827,727.827,124,23,1,0)
The NPI is retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.827,727.827,124,"DT")
3130312
"^DD",727.827,727.827,125,0)
CAMP LEJEUNE STATUS^S^Y:YES;N:NO;^4;4^Q
"^DD",727.827,727.827,125,3)
Indicate Camp Lejeune status for the patient.
"^DD",727.827,727.827,125,21,0)
^^2^2^3130507^
"^DD",727.827,727.827,125,21,1,0)
Indicates if patient was exposed to contaminated water while stationed at
"^DD",727.827,727.827,125,21,2,0)
Camp Lejeune, NC between January 1, 1957 and December 31, 1987.
"^DD",727.827,727.827,125,23,0)
^^3^3^3130507^
"^DD",727.827,727.827,125,23,1,0)
Using the patient's DFN, a call is made to PAT^ECXUTL3, which in turn
"^DD",727.827,727.827,125,23,2,0)
calls SVC^VADPT. This call returns all service related information for a
"^DD",727.827,727.827,125,23,3,0)
patient, including their Camp Lejeune status.
"^DD",727.827,727.827,125,"DT")
3130322
"^DD",727.827,727.827,126,0)
ENCOUNTER CAMP LEJEUNE^S^Y:YES;N:NO;^4;5^Q
"^DD",727.827,727.827,126,3)
Indicate if this encounter is related to exposure at Camp Lejeune.
"^DD",727.827,727.827,126,21,0)
^^3^3^3130507^
"^DD",727.827,727.827,126,21,1,0)
Indicates if episode of care is related to exposure to contaminated water
"^DD",727.827,727.827,126,21,2,0)
while stationed at Camp Lejeune, NC between January 1, 1957 and December
"^DD",727.827,727.827,126,21,3,0)
31, 1987.
"^DD",727.827,727.827,126,23,0)
^^3^3^3130507^
"^DD",727.827,727.827,126,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.827,727.827,126,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. The ENCEVENT^PXAPI
"^DD",727.827,727.827,126,23,3,0)
returns the encounter Camp Lejeune data from the VISIT file (#9000010).
"^DD",727.827,727.827,126,"DT")
3130322
"^DD",727.829,727.829,31,0)
ENCOUNTER SC^S^Y:YES;N:NO;^1;3^Q
"^DD",727.829,727.829,31,3)
Is this Encounter Service Connected?
"^DD",727.829,727.829,31,21,0)
^.001^2^2^3130517^^^
"^DD",727.829,727.829,31,21,1,0)
Indicates if treatment provided during this patient encounter is Service
"^DD",727.829,727.829,31,21,2,0)
Connected.
"^DD",727.829,727.829,31,23,0)
^.001^4^4^3130517^^
"^DD",727.829,727.829,31,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.829,727.829,31,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. This call returns visit
"^DD",727.829,727.829,31,23,3,0)
data, including the SERVICE CONNECTED field (#80001) in the VISIT file
"^DD",727.829,727.829,31,23,4,0)
(#9000010).
"^DD",727.829,727.829,31,"DT")
3130309
"^DD",727.832,727.832,19,0)
RACE 1^F^^0;20^K:$L(X)>6!($L(X)<1) X
"^DD",727.832,727.832,19,3)
Answer must be 1-6 characters in length.
"^DD",727.832,727.832,19,21,0)
^.001^1^1^3130219^^^
"^DD",727.832,727.832,19,21,1,0)
Self-reported by patient as recorded in VistA patient file.
"^DD",727.832,727.832,19,23,0)
^^17^17^3130219^
"^DD",727.832,727.832,19,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field 
"^DD",727.832,727.832,19,23,2,0)
(#4), RACE 1 is derived from the PTF VALUE field (#5) of the RACE file
"^DD",727.832,727.832,19,23,3,0)
(#10) pointed to by the RACE INFORMATION field (#.01) of the 
"^DD",727.832,727.832,19,23,4,0)
RACE INFORMATION subfile (#2.02) of the PATIENT file (#2).
"^DD",727.832,727.832,19,23,5,0)
 
"^DD",727.832,727.832,19,23,6,0)
Only those RACE INFORMATION values in the RACE INFORMATION subfile (#2.03)
"^DD",727.832,727.832,19,23,7,0)
where the METHOD OF COLLECTION field (#.02) is set to 1
"^DD",727.832,727.832,19,23,8,0)
(SELF-IDENTIFICATION), will be included in the RACE 1 field. Up to 6 race 
"^DD",727.832,727.832,19,23,9,0)
entries can be included. If any of the RACE INFORMATION values returned is
"^DD",727.832,727.832,19,23,10,0)
"C" (DECLINED TO ANSWER), that will be the only value included in the
"^DD",727.832,727.832,19,23,11,0)
RACE1 field.
"^DD",727.832,727.832,19,23,12,0)
 
"^DD",727.832,727.832,19,23,13,0)
If the RACE 1 field is null after checking the RACE INFORMATION values 
"^DD",727.832,727.832,19,23,14,0)
then the patient's historical RACE data will be checked to see if it 
"^DD",727.832,727.832,19,23,15,0)
contains one of the twenty six non-standard race values that are 
"^DD",727.832,727.832,19,23,16,0)
convertible to standard race values.  If so, the race value will be 
"^DD",727.832,727.832,19,23,17,0)
converted to the standard value and stored in the RACE 1 field.
"^DD",727.832,727.832,19,"DT")
3060504
"^DD",727.833,727.833,30,0)
COMPONENT DOSE ORDERED^F^^1;6^K:$L(X)>30!($L(X)<1) X
"^DD",727.833,727.833,30,3)
Answer must be 1-30 characters in length.
"^DD",727.833,727.833,30,21,0)
^.001^3^3^3130502^^^
"^DD",727.833,727.833,30,21,1,0)
COMPONENT DOSE ORDERED contains either the dispensed drug, IV additive,
"^DD",727.833,727.833,30,21,2,0)
or IV solution dose ordered, to which, this medication was administered
"^DD",727.833,727.833,30,21,3,0)
for this patient.
"^DD",727.833,727.833,30,23,0)
^.001^2^2^3130502^^
"^DD",727.833,727.833,30,23,1,0)
Its value is free text derived from the DOSE ORDERED (#.02) field of the 
"^DD",727.833,727.833,30,23,2,0)
subfile #.5, #.6, #.7 multiples of the BCMA MEDICATION LOG (#53.79) file.
"^DD",727.833,727.833,30,"DT")
3130502
"^DD",727.833,727.833,31,0)
COMPONENT DOSE GIVEN^F^^1;7^K:$L(X)>30!($L(X)<1) X
"^DD",727.833,727.833,31,3)
Answer must be 1-30 characters in length.
"^DD",727.833,727.833,31,21,0)
^.001^3^3^3130502^^^
"^DD",727.833,727.833,31,21,1,0)
The COMPONENT DOSE GIVEN contains either the dispensed drug, IV additive,
"^DD",727.833,727.833,31,21,2,0)
or IV solutions dose given, to which, this medication was administered 
"^DD",727.833,727.833,31,21,3,0)
for this patient.
"^DD",727.833,727.833,31,23,0)
^.001^3^3^3130502^^
"^DD",727.833,727.833,31,23,1,0)
This field's value is free text derived from the DOSE GIVEN (#.03) field
"^DD",727.833,727.833,31,23,2,0)
of the subfile #.5, #.6, #.7 multiples of the BCMA MEDICATION LOG
"^DD",727.833,727.833,31,23,3,0)
(#53.79) file.
"^DD",727.833,727.833,31,"DT")
3130502
"^DD",727.833,727.833,44,0)
DEA, SPECIAL HDLG^S^I:Investigational;1:SCHEDULE 1 ITEM;2:SCHEDULE 2 ITEM;3:SCHEDULE 3 ITEM;4:SCHEDULE 4 ITEM;5:SCHEDULE 5 ITEM;^2;8^Q
"^DD",727.833,727.833,44,3)
Enter I if the drug is investigational or 1-5 depending on the drug's schedule item.
"^DD",727.833,727.833,44,21,0)
^.001^1^1^3130725^^^^
"^DD",727.833,727.833,44,21,1,0)
Indicates if the drug in this record is Investigational, or Schedule 1-5.
"^DD",727.833,727.833,44,23,0)
^^3^3^3130725^
"^DD",727.833,727.833,44,23,1,0)
Derived from the DEA, SPECIAL HDLG field (#3) in the DRUG file (#50). If
"^DD",727.833,727.833,44,23,2,0)
the field contains a "1","2","3","4" or "5" (DRUG SCHEDULE) it will be set
"^DD",727.833,727.833,44,23,3,0)
to that number. Otherwise, if it contains an I, it will be set to I.
"^DD",727.833,727.833,44,"DT")
3130531
"^DD",727.833,727.833,49,0)
ENCOUNTER NUMBER^F^^2;13^K:$L(X)>17!($L(X)<1) X
"^DD",727.833,727.833,49,3)
Answer must be 1-17 characters in length.
"^DD",727.833,727.833,49,21,0)
^.001^1^1^3130502^^^^
"^DD",727.833,727.833,49,21,1,0)
The unique number assigned for DSS.
"^DD",727.833,727.833,49,23,0)
^.001^4^4^3130502^^^^
"^DD",727.833,727.833,49,23,1,0)
This field is determined by a call to $$ENCNUM^ECXUTL4.  Within this call
"^DD",727.833,727.833,49,23,2,0)
the inpatient/outpatient status, SSN, admit/visit date, treating
"^DD",727.833,727.833,49,23,3,0)
specialty, observation patient indicator, and DSS Identifier or feeder key
"^DD",727.833,727.833,49,23,4,0)
values of the record are used to create a unique encounter number.
"^DD",727.833,727.833,49,"DT")
3130502
"^DD",727.833,727.833,58,0)
RACE 1^F^^2;22^K:$L(X)>6!($L(X)<1) X
"^DD",727.833,727.833,58,3)
Answer must be 1-6 characters in length.
"^DD",727.833,727.833,58,21,0)
^.001^1^1^3130806^^^^
"^DD",727.833,727.833,58,21,1,0)
Self-reported by patient as recorded in VistA patient file.
"^DD",727.833,727.833,58,23,0)
^^17^17^3130806^
"^DD",727.833,727.833,58,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field 
"^DD",727.833,727.833,58,23,2,0)
(#4), RACE 1 is derived from the PTF VALUE field (#5) of the RACE file
"^DD",727.833,727.833,58,23,3,0)
(#10) pointed to by the RACE INFORMATION field (#.01) of the 
"^DD",727.833,727.833,58,23,4,0)
RACE INFORMATION subfile (#2.02) of the PATIENT file (#2).
"^DD",727.833,727.833,58,23,5,0)
 
"^DD",727.833,727.833,58,23,6,0)
Only those RACE INFORMATION values in the RACE INFORMATION subfile (#2.03)
"^DD",727.833,727.833,58,23,7,0)
where the METHOD OF COLLECTION field (#.02) is set to 1
"^DD",727.833,727.833,58,23,8,0)
(SELF-IDENTIFICATION), will be included in the RACE 1 field. Up to 6 race 
"^DD",727.833,727.833,58,23,9,0)
entries can be included. If any of the RACE INFORMATION values returned is
"^DD",727.833,727.833,58,23,10,0)
"C" (DECLINED TO ANSWER), that will be the only value included in the
"^DD",727.833,727.833,58,23,11,0)
RACE1 field.
"^DD",727.833,727.833,58,23,12,0)
 
"^DD",727.833,727.833,58,23,13,0)
If the RACE 1 field is null after checking the RACE INFORMATION values 
"^DD",727.833,727.833,58,23,14,0)
then the patient's historical RACE data will be checked to see if it 
"^DD",727.833,727.833,58,23,15,0)
contains one of the twenty six non-standard race values that are 
"^DD",727.833,727.833,58,23,16,0)
convertible to standard race values.  If so, the race value will be 
"^DD",727.833,727.833,58,23,17,0)
converted to the standard value and stored in the RACE 1 field.
"^DD",727.833,727.833,58,"DT")
3120427
"^DD",727.833,727.833,81,0)
ENCOUNTER SC^S^Y:YES;N:NO;^3;11^Q
"^DD",727.833,727.833,81,3)
Is this Encounter Service Connected?
"^DD",727.833,727.833,81,21,0)
^.001^2^2^3130520^^^^
"^DD",727.833,727.833,81,21,1,0)
Indicates if treatment provided during this patient encounter is Service 
"^DD",727.833,727.833,81,21,2,0)
Connected.
"^DD",727.833,727.833,81,23,0)
^.001^4^4^3130520^^
"^DD",727.833,727.833,81,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.833,727.833,81,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. This call returns visit
"^DD",727.833,727.833,81,23,3,0)
data, including the SERVICE CONNECTED field (#80001) in the VISIT file
"^DD",727.833,727.833,81,23,4,0)
(#9000010).
"^DD",727.833,727.833,81,"DT")
3130308
"^DD",727.833,727.833,82,0)
IV ADDITIVE COST^NJ10,4^^3;12^K:+X'=X!(X>10000)!(X<0)!(X?.E1"."5N.N) X
"^DD",727.833,727.833,82,3)
Type a number between 0 and 10000, 4 decimal digits.
"^DD",727.833,727.833,82,21,0)
^^1^1^3130809^
"^DD",727.833,727.833,82,21,1,0)
VA pharmacy supply cost, in dollars, of the IV Additive dispensed.
"^DD",727.833,727.833,82,23,0)
^.001^3^3^3130809^^^^
"^DD",727.833,727.833,82,23,1,0)
This field is calculated by multiplying the DOSES GIVEN field (#.03) of 
"^DD",727.833,727.833,82,23,2,0)
the ADDITIVES subfield (#.6) from the BCMA MEDICATION LOG file (#53.79) by
"^DD",727.833,727.833,82,23,3,0)
AVERAGE DRUG COST PER UNIT field (#7) of the IV ADDITIVES file (#52.6).
"^DD",727.833,727.833,82,"DT")
3130308
"^DD",727.833,727.833,83,0)
IV SOLUTION COST^NJ10,4^^3;13^K:+X'=X!(X>10000)!(X<0)!(X?.E1"."5N.N) X
"^DD",727.833,727.833,83,3)
Type a number between 0 and 10000, 4 decimal digits.
"^DD",727.833,727.833,83,21,0)
^^1^1^3130809^
"^DD",727.833,727.833,83,21,1,0)
VA pharmacy supply cost, in dollars, of the IV Solution dispensed.
"^DD",727.833,727.833,83,23,0)
^.001^3^3^3130809^^^^
"^DD",727.833,727.833,83,23,1,0)
This field is calculated by multiplying the DOSES GIVEN field (#.03) of 
"^DD",727.833,727.833,83,23,2,0)
the SOLUTIONS subfield (#.7) from the BCMA MEDICATION LOG file (#53.79) by
"^DD",727.833,727.833,83,23,3,0)
AVERAGE DRUG COST PER UNIT field (#7) of the IV SOLUTIONS file (#52.7). 
"^DD",727.833,727.833,83,"DT")
3130807
"^DD",727.833,727.833,84,0)
DRUG COST^NJ10,4^^3;14^K:+X'=X!(X>10000)!(X<0)!(X?.E1"."5N.N) X
"^DD",727.833,727.833,84,3)
Type a number between 0 and 10000, 4 decimal digits.
"^DD",727.833,727.833,84,21,0)
^^1^1^3130809^
"^DD",727.833,727.833,84,21,1,0)
VA pharmacy supply cost, in dollars, of the Drug dispensed.
"^DD",727.833,727.833,84,23,0)
^.001^5^5^3130809^^^^
"^DD",727.833,727.833,84,23,1,0)
This field is calculated by multiplying the DOSES GIVEN field (#.03) of 
"^DD",727.833,727.833,84,23,2,0)
the DISPENSE DRUG subfield (#.5) from the BCMA MEDICATION LOG file
"^DD",727.833,727.833,84,23,3,0)
(#53.79) by UNIT OF ADMINISTRATION field (#.04) of the DISPENSE DRUG
"^DD",727.833,727.833,84,23,4,0)
subfield (#.5) from the BCMA MEDICATION LOG file (#53.79) by PRICE PER 
"^DD",727.833,727.833,84,23,5,0)
DISPENSE UNIT field (#16) of the DRUG file (#50).
"^DD",727.833,727.833,84,"DT")
3130308
"^DD",727.833,727.833,85,0)
CAMP LEJEUNE STATUS^S^Y:YES;N:NO;^3;15^Q
"^DD",727.833,727.833,85,3)
Indicate Camp Lejeune status for the patient.
"^DD",727.833,727.833,85,21,0)
^.001^2^2^3130806^^
"^DD",727.833,727.833,85,21,1,0)
Indicates if patient was exposed to contaminated water while stationed at
"^DD",727.833,727.833,85,21,2,0)
Camp Lejeune, NC between January 1, 1957 and December 31, 1987.
"^DD",727.833,727.833,85,23,0)
^.001^3^3^3130806^^
"^DD",727.833,727.833,85,23,1,0)
Using the patient's DFN, a call is made to PAT^ECXUTL3, which in turn
"^DD",727.833,727.833,85,23,2,0)
calls SVC^VADPT. This call returns all service related information for a
"^DD",727.833,727.833,85,23,3,0)
patient, including their Camp Lejeune status.
"^DD",727.833,727.833,85,"DT")
3130308
"^DD",727.833,727.833,86,0)
ENCOUNTER CAMP LEJEUNE^S^Y:YES;N:NO;^3;16^Q
"^DD",727.833,727.833,86,3)
Indicate if this encounter is related to exposure at Camp Lejeune.
"^DD",727.833,727.833,86,21,0)
^.001^3^3^3130806^^
"^DD",727.833,727.833,86,21,1,0)
Indicates if episode of care is related to exposure to contaminated water
"^DD",727.833,727.833,86,21,2,0)
while stationed at Camp Lejeune, NC between January 1, 1957 and December
"^DD",727.833,727.833,86,21,3,0)
31, 1987.
"^DD",727.833,727.833,86,23,0)
^.001^3^3^3130806^^
"^DD",727.833,727.833,86,23,1,0)
Using a pointer to the VISIT file (#9000010) a call is made to API
"^DD",727.833,727.833,86,23,2,0)
VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. The ENCEVENT^PXAPI
"^DD",727.833,727.833,86,23,3,0)
returns the encounter Camp Lejeune data from the VISIT file (#9000010).
"^DD",727.833,727.833,86,"DT")
3130308
"^DD",728.44,728.44,7,0)
NATIONAL CODE^R*P728.441'^ECX(728.441,^0;8^S DIC("S")="I $P($G(^(2)),U)=""""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",728.44,728.44,7,3)
Enter the appropriate national code.
"^DD",728.44,728.44,7,12)
Invalid code.  Only active codes can be entered.
"^DD",728.44,728.44,7,12.1)
S DIC("S")="I $P($G(^(2)),U)="""""
"^DD",728.44,728.44,7,21,0)
^^4^4^3130509^
"^DD",728.44,728.44,7,21,1,0)
The NATIONAL CODE is a four character code that is optionally used to
"^DD",728.44,728.44,7,21,2,0)
build part of the DSS Feeder Key field in the DSS Clinic (CLI) Extract.  
"^DD",728.44,728.44,7,21,3,0)
If used, the four character code helps describe/identify the clinic the
"^DD",728.44,728.44,7,21,4,0)
CLI Extract record is for.
"^DD",728.44,728.44,7,23,0)
^.001^4^4^3130509^^
"^DD",728.44,728.44,7,23,1,0)
When the ACTION TO SEND field (#5) is set to code 4 then the NATIONAL 
"^DD",728.44,728.44,7,23,2,0)
CODE (#7) field will be used to build the DSS feeder key for the Clinic 
"^DD",728.44,728.44,7,23,3,0)
(CLI) extract.  This four character code is a standardized code used to 
"^DD",728.44,728.44,7,23,4,0)
identify the clinic associated with the CLI extract record.
"^DD",728.44,728.44,7,"DT")
3130508
"^DD",728.44,728.44,12,0)
RECORD LAST SYNCHED^D^^0;13^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728.44,728.44,12,1,0)
^.1
"^DD",728.44,728.44,12,1,1,0)
728.44^C
"^DD",728.44,728.44,12,1,1,1)
S ^ECX(728.44,"C",$E(X,1,30),DA)=""
"^DD",728.44,728.44,12,1,1,2)
K ^ECX(728.44,"C",$E(X,1,30),DA)
"^DD",728.44,728.44,12,1,1,"%D",0)
^.101^1^1^3130502^^^
"^DD",728.44,728.44,12,1,1,"%D",1,0)
Identifies the date the record was last synched.
"^DD",728.44,728.44,12,1,1,"DT")
3130228
"^DD",728.44,728.44,12,3)
Enter the date this record was last synchronized.
"^DD",728.44,728.44,12,21,0)
^.001^1^1^3130806^^^^
"^DD",728.44,728.44,12,21,1,0)
This is the date the entry in this file was last synched.
"^DD",728.44,728.44,12,23,0)
^.001^8^8^3130806^^
"^DD",728.44,728.44,12,23,1,0)
The fields in this record are copied from the matching clinic entry in the
"^DD",728.44,728.44,12,23,2,0)
HOSPITAL LOCATION (#44) file.  When the site runs the Create DSS Clinic
"^DD",728.44,728.44,12,23,3,0)
Stop Code File option [ECXSCLIST] to synchronize entries in this file,
"^DD",728.44,728.44,12,23,4,0)
this field is set to today's date, indicating the last time this process
"^DD",728.44,728.44,12,23,5,0)
was completed.
"^DD",728.44,728.44,12,23,6,0)
 
"^DD",728.44,728.44,12,23,7,0)
This field will always store the date the synchronization was last 
"^DD",728.44,728.44,12,23,8,0)
completed.
"^DD",728.44,728.44,12,"DT")
3130502
"^DD",728.441,728.441,2,0)
LONG DESCRIPTION^728.4412^^1;0
"^DD",728.441,728.441,2,21,0)
^.001^3^3^3130502^^^^
"^DD",728.441,728.441,2,21,1,0)
The long description for the type of clinic represented by this code.
"^DD",728.441,728.441,2,21,2,0)
This description may be used to provide guidance in assigning
"^DD",728.441,728.441,2,21,3,0)
national codes to clinics.
"^DD",728.441,728.441,3,0)
INACTIVATION DATE^DI^^2;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728.441,728.441,3,3)
Enter the date that the national clinic code was inactivated.
"^DD",728.441,728.441,3,21,0)
^.001^1^1^3130204^^^^
"^DD",728.441,728.441,3,21,1,0)
This field contains the date when the NATIONAL CLINIC code was inactivated.
"^DD",728.441,728.441,3,"DT")
3130204
"^DD",728.441,728.4412,0)
LONG DESCRIPTION SUB-FIELD^^.01^1
"^DD",728.441,728.4412,0,"NM","LONG DESCRIPTION")

"^DD",728.441,728.4412,0,"UP")
728.441
"^DD",728.441,728.4412,.01,0)
LONG DESCRIPTION^W^^0;1^Q
"^DD",728.441,728.4412,.01,3)
Enter the full description for this national clinic code.
"^DD",728.441,728.4412,.01,21,0)
^.001^3^3^3130502^^^^
"^DD",728.441,728.4412,.01,21,1,0)
The long description for the type of clinic represented by this code.
"^DD",728.441,728.4412,.01,21,2,0)
This description may be used to provide guidance in assigning
"^DD",728.441,728.4412,.01,21,3,0)
national codes to clinics.
"^DD",728.441,728.4412,.01,"DT")
2940310
"BLD",8267,6)
^131
**END**
**END**
