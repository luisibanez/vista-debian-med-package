Released DVBA*2.7*149 SEQ #142
Extracted from mail message
**KIDS**:DVBA*2.7*149^

**INSTALL NAME**
DVBA*2.7*149
"BLD",7711,0)
DVBA*2.7*149^AUTOMATED MED INFO EXCHANGE^0^3110126^y
"BLD",7711,1,0)
^^1^1^3110112^
"BLD",7711,1,1,0)
Please see FORUM for a more complete description of DVBA*2.7*149
"BLD",7711,4,0)
^9.64PA^396.5^2
"BLD",7711,4,396.3,0)
396.3
"BLD",7711,4,396.3,2,0)
^9.641^396.3^1
"BLD",7711,4,396.3,2,396.3,0)
2507 REQUEST  (File-top level)
"BLD",7711,4,396.3,2,396.3,1,0)
^9.6411^9^1
"BLD",7711,4,396.3,2,396.3,1,9,0)
PRIORITY OF EXAM
"BLD",7711,4,396.3,222)
y^n^p^^^^n^^n
"BLD",7711,4,396.3,224)

"BLD",7711,4,396.5,0)
396.5
"BLD",7711,4,396.5,222)
n^n^f^^n^^y^o^n
"BLD",7711,4,"APDD",396.3,396.3)

"BLD",7711,4,"APDD",396.3,396.3,9)

"BLD",7711,4,"B",396.3,396.3)

"BLD",7711,4,"B",396.5,396.5)

"BLD",7711,6.3)
16
"BLD",7711,"INI")
PRE^DVBA149P
"BLD",7711,"KRN",0)
^9.67PA^779.2^20
"BLD",7711,"KRN",.4,0)
.4
"BLD",7711,"KRN",.401,0)
.401
"BLD",7711,"KRN",.402,0)
.402
"BLD",7711,"KRN",.402,"NM",0)
^9.68A^^0
"BLD",7711,"KRN",.403,0)
.403
"BLD",7711,"KRN",.5,0)
.5
"BLD",7711,"KRN",.84,0)
.84
"BLD",7711,"KRN",3.6,0)
3.6
"BLD",7711,"KRN",3.8,0)
3.8
"BLD",7711,"KRN",9.2,0)
9.2
"BLD",7711,"KRN",9.8,0)
9.8
"BLD",7711,"KRN",9.8,"NM",0)
^9.68A^31^31
"BLD",7711,"KRN",9.8,"NM",1,0)
DVBAB82^^0^B101314855
"BLD",7711,"KRN",9.8,"NM",2,0)
DVBABDDU^^0^B1488997
"BLD",7711,"KRN",9.8,"NM",3,0)
DVBASPD2^^0^B47508013
"BLD",7711,"KRN",9.8,"NM",4,0)
DVBAB56^^0^B24628055
"BLD",7711,"KRN",9.8,"NM",5,0)
DVBAB98^^0^B29136155
"BLD",7711,"KRN",9.8,"NM",6,0)
DVBAB54^^0^B30133216
"BLD",7711,"KRN",9.8,"NM",7,0)
DVBAB53^^0^B45878963
"BLD",7711,"KRN",9.8,"NM",8,0)
DVBAB51^^0^B44742648
"BLD",7711,"KRN",9.8,"NM",9,0)
DVBAADRP^^0^B43200914
"BLD",7711,"KRN",9.8,"NM",10,0)
DVBAB82D^^0^B37308259
"BLD",7711,"KRN",9.8,"NM",11,0)
DVBCIRPT^^0^B47028205
"BLD",7711,"KRN",9.8,"NM",12,0)
DVBCIRP1^^0^B46484005
"BLD",7711,"KRN",9.8,"NM",13,0)
DVBCIUTL^^0^B37860545
"BLD",7711,"KRN",9.8,"NM",14,0)
DVBCHS1^^0^B5480980
"BLD",7711,"KRN",9.8,"NM",15,0)
DVBCUTIL^^0^B46886926
"BLD",7711,"KRN",9.8,"NM",16,0)
DVBAB2^^0^B32023164
"BLD",7711,"KRN",9.8,"NM",17,0)
DVBAB3^^0^B10129611
"BLD",7711,"KRN",9.8,"NM",18,0)
DVBCAMI1^^0^B11579821
"BLD",7711,"KRN",9.8,"NM",19,0)
DVBCAMI2^^0^B37534460
"BLD",7711,"KRN",9.8,"NM",20,0)
DVBCAMI3^^0^B5656228
"BLD",7711,"KRN",9.8,"NM",21,0)
DVBCAMIS^^0^B15380003
"BLD",7711,"KRN",9.8,"NM",22,0)
DVBCAMR1^^0^B5153937
"BLD",7711,"KRN",9.8,"NM",23,0)
DVBCAMR2^^0^B35979419
"BLD",7711,"KRN",9.8,"NM",24,0)
DVBCAMRO^^0^B10861262
"BLD",7711,"KRN",9.8,"NM",25,0)
DVBCPATA^^0^B2615118
"BLD",7711,"KRN",9.8,"NM",26,0)
DVBCENQ1^^0^B27237652
"BLD",7711,"KRN",9.8,"NM",27,0)
DVBAB70^^0^B38834112
"BLD",7711,"KRN",9.8,"NM",28,0)
DVBCXFRB^^0^B16766311
"BLD",7711,"KRN",9.8,"NM",29,0)
DVBCXFRC^^0^B44128395
"BLD",7711,"KRN",9.8,"NM",30,0)
DVBABURL^^0^B2397510
"BLD",7711,"KRN",9.8,"NM",31,0)
DVBAB68^^0^B11010411
"BLD",7711,"KRN",9.8,"NM","B","DVBAADRP",9)

"BLD",7711,"KRN",9.8,"NM","B","DVBAB2",16)

"BLD",7711,"KRN",9.8,"NM","B","DVBAB3",17)

"BLD",7711,"KRN",9.8,"NM","B","DVBAB51",8)

"BLD",7711,"KRN",9.8,"NM","B","DVBAB53",7)

"BLD",7711,"KRN",9.8,"NM","B","DVBAB54",6)

"BLD",7711,"KRN",9.8,"NM","B","DVBAB56",4)

"BLD",7711,"KRN",9.8,"NM","B","DVBAB68",31)

"BLD",7711,"KRN",9.8,"NM","B","DVBAB70",27)

"BLD",7711,"KRN",9.8,"NM","B","DVBAB82",1)

"BLD",7711,"KRN",9.8,"NM","B","DVBAB82D",10)

"BLD",7711,"KRN",9.8,"NM","B","DVBAB98",5)

"BLD",7711,"KRN",9.8,"NM","B","DVBABDDU",2)

"BLD",7711,"KRN",9.8,"NM","B","DVBABURL",30)

"BLD",7711,"KRN",9.8,"NM","B","DVBASPD2",3)

"BLD",7711,"KRN",9.8,"NM","B","DVBCAMI1",18)

"BLD",7711,"KRN",9.8,"NM","B","DVBCAMI2",19)

"BLD",7711,"KRN",9.8,"NM","B","DVBCAMI3",20)

"BLD",7711,"KRN",9.8,"NM","B","DVBCAMIS",21)

"BLD",7711,"KRN",9.8,"NM","B","DVBCAMR1",22)

"BLD",7711,"KRN",9.8,"NM","B","DVBCAMR2",23)

"BLD",7711,"KRN",9.8,"NM","B","DVBCAMRO",24)

"BLD",7711,"KRN",9.8,"NM","B","DVBCENQ1",26)

"BLD",7711,"KRN",9.8,"NM","B","DVBCHS1",14)

"BLD",7711,"KRN",9.8,"NM","B","DVBCIRP1",12)

"BLD",7711,"KRN",9.8,"NM","B","DVBCIRPT",11)

"BLD",7711,"KRN",9.8,"NM","B","DVBCIUTL",13)

"BLD",7711,"KRN",9.8,"NM","B","DVBCPATA",25)

"BLD",7711,"KRN",9.8,"NM","B","DVBCUTIL",15)

"BLD",7711,"KRN",9.8,"NM","B","DVBCXFRB",28)

"BLD",7711,"KRN",9.8,"NM","B","DVBCXFRC",29)

"BLD",7711,"KRN",19,0)
19
"BLD",7711,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",7711,"KRN",19,"NM",1,0)
DVBA CAPRI GUI^^0
"BLD",7711,"KRN",19,"NM","B","DVBA CAPRI GUI",1)

"BLD",7711,"KRN",19.1,0)
19.1
"BLD",7711,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",7711,"KRN",101,0)
101
"BLD",7711,"KRN",101,"NM",0)
^9.68A^^
"BLD",7711,"KRN",409.61,0)
409.61
"BLD",7711,"KRN",771,0)
771
"BLD",7711,"KRN",779.2,0)
779.2
"BLD",7711,"KRN",870,0)
870
"BLD",7711,"KRN",8989.51,0)
8989.51
"BLD",7711,"KRN",8989.52,0)
8989.52
"BLD",7711,"KRN",8994,0)
8994
"BLD",7711,"KRN",8994,"NM",0)
^9.68A^8^8
"BLD",7711,"KRN",8994,"NM",1,0)
DVBAB GET SET^^0
"BLD",7711,"KRN",8994,"NM",2,0)
DVBAB REPORT ADMISSIONS^^0
"BLD",7711,"KRN",8994,"NM",3,0)
DVBAB REPORT ADMINQ^^0
"BLD",7711,"KRN",8994,"NM",4,0)
DVBAB REPORT SPECIAL^^0
"BLD",7711,"KRN",8994,"NM",5,0)
DVBAB REPORT READMIT^^0
"BLD",7711,"KRN",8994,"NM",6,0)
DVBAB REPORT DISCHARGE^^0
"BLD",7711,"KRN",8994,"NM",7,0)
DVBAB REPORT INCOMPVET^^0
"BLD",7711,"KRN",8994,"NM",8,0)
DVBAB AMIS REPORT^^0
"BLD",7711,"KRN",8994,"NM","B","DVBAB AMIS REPORT",8)

"BLD",7711,"KRN",8994,"NM","B","DVBAB GET SET",1)

"BLD",7711,"KRN",8994,"NM","B","DVBAB REPORT ADMINQ",3)

"BLD",7711,"KRN",8994,"NM","B","DVBAB REPORT ADMISSIONS",2)

"BLD",7711,"KRN",8994,"NM","B","DVBAB REPORT DISCHARGE",6)

"BLD",7711,"KRN",8994,"NM","B","DVBAB REPORT INCOMPVET",7)

"BLD",7711,"KRN",8994,"NM","B","DVBAB REPORT READMIT",5)

"BLD",7711,"KRN",8994,"NM","B","DVBAB REPORT SPECIAL",4)

"BLD",7711,"KRN","B",.4,.4)

"BLD",7711,"KRN","B",.401,.401)

"BLD",7711,"KRN","B",.402,.402)

"BLD",7711,"KRN","B",.403,.403)

"BLD",7711,"KRN","B",.5,.5)

"BLD",7711,"KRN","B",.84,.84)

"BLD",7711,"KRN","B",3.6,3.6)

"BLD",7711,"KRN","B",3.8,3.8)

"BLD",7711,"KRN","B",9.2,9.2)

"BLD",7711,"KRN","B",9.8,9.8)

"BLD",7711,"KRN","B",19,19)

"BLD",7711,"KRN","B",19.1,19.1)

"BLD",7711,"KRN","B",101,101)

"BLD",7711,"KRN","B",409.61,409.61)

"BLD",7711,"KRN","B",771,771)

"BLD",7711,"KRN","B",779.2,779.2)

"BLD",7711,"KRN","B",870,870)

"BLD",7711,"KRN","B",8989.51,8989.51)

"BLD",7711,"KRN","B",8989.52,8989.52)

"BLD",7711,"KRN","B",8994,8994)

"BLD",7711,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",7711,"QUES",0)
^9.62^^
"BLD",7711,"REQB",0)
^9.611^10^9
"BLD",7711,"REQB",1,0)
DVBA*2.7*19^2
"BLD",7711,"REQB",2,0)
DVBA*2.7*27^2
"BLD",7711,"REQB",3,0)
DVBA*2.7*108^2
"BLD",7711,"REQB",5,0)
DVBA*2.7*143^2
"BLD",7711,"REQB",6,0)
DVBA*2.7*35^2
"BLD",7711,"REQB",7,0)
DVBA*2.7*57^2
"BLD",7711,"REQB",8,0)
DVBA*2.7*77^2
"BLD",7711,"REQB",9,0)
DVBA*2.7*65^2
"BLD",7711,"REQB",10,0)
DVBA*2.7*156^2
"BLD",7711,"REQB","B","DVBA*2.7*108",3)

"BLD",7711,"REQB","B","DVBA*2.7*143",5)

"BLD",7711,"REQB","B","DVBA*2.7*156",10)

"BLD",7711,"REQB","B","DVBA*2.7*19",1)

"BLD",7711,"REQB","B","DVBA*2.7*27",2)

"BLD",7711,"REQB","B","DVBA*2.7*35",6)

"BLD",7711,"REQB","B","DVBA*2.7*57",7)

"BLD",7711,"REQB","B","DVBA*2.7*65",9)

"BLD",7711,"REQB","B","DVBA*2.7*77",8)

"DATA",396.5,1,0)
ADEQUATE MEDICAL EVIDENCE^1
"DATA",396.5,2,0)
VETERAN WITHDREW CLAIM^2
"DATA",396.5,3,0)
FAILED TO REPORT^3
"DATA",396.5,4,0)
INCORRECT TEST ORDERED^4
"DATA",396.5,5,0)
EXAM NAME DELETED FROM FILE^5
"DATA",396.5,6,0)
INCORRECT JURISDICTION^6
"DATA",396.5,7,0)
EMPLOYEE^7
"DATA",396.5,8,0)
DUPLICATE EXAM^8
"DATA",396.5,9,0)
NO EXAMS ORDERED
"DATA",396.5,10,0)
NOT ENOUGH INFORMATION
"DATA",396.5,11,0)
INCOMPLETE REQUEST
"DATA",396.5,12,0)
UNDELIVERED NOTIFICATION
"DATA",396.5,13,0)
VET REFUSED EXAM THIS LOCATION
"DATA",396.5,14,0)
VETERAN DIED
"DATA",396.5,15,0)
VETERAN CANCELLED EXAM FOR DBQ
"FIA",396.3)
2507 REQUEST
"FIA",396.3,0)
^DVB(396.3,
"FIA",396.3,0,0)
396.3IP
"FIA",396.3,0,1)
y^n^p^^^^n^^n
"FIA",396.3,0,10)

"FIA",396.3,0,11)

"FIA",396.3,0,"RLRO")

"FIA",396.3,0,"VR")
2.7^DVBA
"FIA",396.3,396.3)
1
"FIA",396.3,396.3,9)

"FIA",396.5)
2507 CANCELLATION REASON
"FIA",396.5,0)
^DVB(396.5,
"FIA",396.5,0,0)
396.5
"FIA",396.5,0,1)
n^n^f^^n^^y^o^n
"FIA",396.5,0,10)

"FIA",396.5,0,11)

"FIA",396.5,0,"RLRO")

"FIA",396.5,0,"VR")
2.7^DVBA
"FIA",396.5,396.5)
0
"INI")
PRE^DVBA149P
"KRN",19,9510,-1)
0^1
"KRN",19,9510,0)
DVBA CAPRI GUI^Capri GUI (Broker)^^B^^^^^^^^AUTOMATED MED INFO EXCHANGE^^1
"KRN",19,9510,1,0)
^19.06^2^2^3090521^^^^
"KRN",19,9510,1,1,0)
This is the 'B' type option used by CAPRI GUI client application. It
"KRN",19,9510,1,2,0)
contains all the RPCs used by the CAPRI GUI application.
"KRN",19,9510,20)
 
"KRN",19,9510,25)
 
"KRN",19,9510,99.1)
62109,40314
"KRN",19,9510,"RPC",0)
^19.05P^138^138
"KRN",19,9510,"RPC",1,0)
DVBAB REPORT LISTS
"KRN",19,9510,"RPC",2,0)
DVBAB APPOINTMENT LIST
"KRN",19,9510,"RPC",3,0)
DVBAB CHECK CREDENTIALS
"KRN",19,9510,"RPC",4,0)
DVBAB FIND EXAMS
"KRN",19,9510,"RPC",5,0)
DVBAB PTINQ
"KRN",19,9510,"RPC",6,0)
DVBAB INCREASE EXAM COUNT
"KRN",19,9510,"RPC",7,0)
DVBAB SEND MSG
"KRN",19,9510,"RPC",8,0)
DVBAB REPORT CHECKLIST
"KRN",19,9510,"RPC",9,0)
DDR FILER
"KRN",19,9510,"RPC",10,0)
DDR LISTER
"KRN",19,9510,"RPC",11,0)
DDR VALIDATOR
"KRN",19,9510,"RPC",12,0)
DDR GETS ENTRY DATA
"KRN",19,9510,"RPC",14,0)
XWB GET VARIABLE VALUE
"KRN",19,9510,"RPC",15,0)
DVBAB HEALTH SUMMARY TEXT
"KRN",19,9510,"RPC",16,0)
TIU DOCUMENTS BY CONTEXT
"KRN",19,9510,"RPC",17,0)
TIU GET RECORD TEXT
"KRN",19,9510,"RPC",18,0)
ORQQCN LIST
"KRN",19,9510,"RPC",19,0)
ORQQCN DETAIL
"KRN",19,9510,"RPC",20,0)
DVBAB INST LIST
"KRN",19,9510,"RPC",22,0)
ORWRP REPORT TEXT
"KRN",19,9510,"RPC",23,0)
ORWORR AGET
"KRN",19,9510,"RPC",24,0)
ORWRA IMAGING EXAMS
"KRN",19,9510,"RPC",25,0)
ORWRP1 LISTNUTR
"KRN",19,9510,"RPC",26,0)
ORWMC PATIENT PROCEDURES
"KRN",19,9510,"RPC",27,0)
ORQQPL PROBLEM LIST
"KRN",19,9510,"RPC",28,0)
ORWORR GET4LST
"KRN",19,9510,"RPC",29,0)
ORWLR CUMULATIVE REPORT
"KRN",19,9510,"RPC",32,0)
DVBAB DATETIME
"KRN",19,9510,"RPC",34,0)
ORWPT ADMITLST
"KRN",19,9510,"RPC",35,0)
DVBAB SC VETERAN REPORT
"KRN",19,9510,"RPC",36,0)
ORQQVS VISITS/APPTS
"KRN",19,9510,"RPC",37,0)
ORWU DT
"KRN",19,9510,"RPC",38,0)
ORWLRR CHART
"KRN",19,9510,"RPC",39,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,9510,"RPC",40,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,9510,"RPC",41,0)
DVBAB REPORT EXAM CHKLIST
"KRN",19,9510,"RPC",42,0)
DVBAB REPORT ADMINQ
"KRN",19,9510,"RPC",43,0)
DVBAB REPORT INCOMPVET
"KRN",19,9510,"RPC",44,0)
DVBAB REPORT DISCHARGE
"KRN",19,9510,"RPC",45,0)
DVBAB REPORT READMIT
"KRN",19,9510,"RPC",46,0)
DVBAB REPORT ADMISSIONS
"KRN",19,9510,"RPC",47,0)
DVBAB REPORT 7131INQ
"KRN",19,9510,"RPC",48,0)
DVBAB PENDING C&P REPORT
"KRN",19,9510,"RPC",49,0)
DVBAB REPORT CPDETAILS
"KRN",19,9510,"RPC",50,0)
DVBAB AMIS REPORT
"KRN",19,9510,"RPC",51,0)
DVBAB REPORT PENDING7131
"KRN",19,9510,"RPC",52,0)
DVBAB LABLIST
"KRN",19,9510,"RPC",53,0)
DVBAB VERSION
"KRN",19,9510,"RPC",54,0)
DDR DELETE ENTRY
"KRN",19,9510,"RPC",55,0)
ORWRP REPORT LISTS
"KRN",19,9510,"RPC",57,0)
DVBAB DIVISION
"KRN",19,9510,"RPC",58,0)
DVBAB TEAM PATIENTS
"KRN",19,9510,"RPC",59,0)
ORWCIRN FACLIST
"KRN",19,9510,"RPC",60,0)
XWB REMOTE STATUS CHECK
"KRN",19,9510,"RPC",61,0)
XWB REMOTE GETDATA
"KRN",19,9510,"RPC",63,0)
ORWPT DIEDON
"KRN",19,9510,"RPC",66,0)
XWB REMOTE RPC
"KRN",19,9510,"RPC",68,0)
DDR FIND1
"KRN",19,9510,"RPC",69,0)
DVBAB REPORTS
"KRN",19,9510,"RPC",70,0)
ORWRP2 COMPABV
"KRN",19,9510,"RPC",71,0)
DVBAB SURGERY CASE
"KRN",19,9510,"RPC",72,0)
ORWRP2 COMPDISP
"KRN",19,9510,"RPC",73,0)
ORWRP2 HS COMPONENTS
"KRN",19,9510,"RPC",74,0)
ORWRP2 HS COMPONENT SUBS
"KRN",19,9510,"RPC",75,0)
ORWRP2 HS COMP FILES
"KRN",19,9510,"RPC",76,0)
ORWRP2 SAVLKUP
"KRN",19,9510,"RPC",77,0)
ORWRP2 HS REPORT TEXT
"KRN",19,9510,"RPC",78,0)
ORWRP2 GETLKUP
"KRN",19,9510,"RPC",79,0)
ORWRP2 HS FILE LOOKUP
"KRN",19,9510,"RPC",80,0)
ORWRP2 HS SUBITEMS
"KRN",19,9510,"RPC",81,0)
DVBAB MAIL INIT
"KRN",19,9510,"RPC",82,0)
ORWLRR MICRO
"KRN",19,9510,"RPC",83,0)
TIU CREATE RECORD
"KRN",19,9510,"RPC",84,0)
DVBAB MPI ASSIGN ICN
"KRN",19,9510,"RPC",85,0)
TIU SIGN RECORD
"KRN",19,9510,"RPC",86,0)
TIU DELETE RECORD
"KRN",19,9510,"RPC",87,0)
TIU REQUIRES COSIGNATURE
"KRN",19,9510,"RPC",88,0)
DVBAB REPORT ADMISSION INQUIRY
"KRN",19,9510,"RPC",89,0)
DVBAB REPORT NEW NOTICES DC
"KRN",19,9510,"RPC",90,0)
DVBAB NOTE TITLES
"KRN",19,9510,"RPC",91,0)
DVBAB TEMPLATE DEFINITION
"KRN",19,9510,"RPC",92,0)
DDR FINDER
"KRN",19,9510,"RPC",93,0)
ORWCV VST
"KRN",19,9510,"RPC",94,0)
TIU LOAD BOILERPLATE TEXT
"KRN",19,9510,"RPC",95,0)
DVBAB GET VISIT INFO
"KRN",19,9510,"RPC",96,0)
DVBAB REPORT SPECIAL
"KRN",19,9510,"RPC",97,0)
DVBAB SAVE FORM
"KRN",19,9510,"RPC",98,0)
DVBAB EXAMS BY DATE
"KRN",19,9510,"RPC",99,0)
TIU GET SITE PARAMETERS
"KRN",19,9510,"RPC",100,0)
TIU GET ALERT INFO
"KRN",19,9510,"RPC",101,0)
ORWU VALIDSIG
"KRN",19,9510,"RPC",103,0)
ORWORB FASTUSER
"KRN",19,9510,"RPC",104,0)
DVBAB TEMPLATE LIST
"KRN",19,9510,"RPC",105,0)
DVBAB LOAD FORM
"KRN",19,9510,"RPC",106,0)
DVBAB TEMPLATE REPORT FULL
"KRN",19,9510,"RPC",107,0)
DVBAB FETCH 1U4N
"KRN",19,9510,"RPC",108,0)
DVBAB FORM DATA BACKUP DELETE
"KRN",19,9510,"RPC",109,0)
DVBAB FORM DATA BACKUP RESTORE
"KRN",19,9510,"RPC",110,0)
DDR LOCK/UNLOCK NODE
"KRN",19,9510,"RPC",111,0)
DVBAB FORM COPY
"KRN",19,9510,"RPC",112,0)
DVBAB FIND DUPS
"KRN",19,9510,"RPC",113,0)
DVBAB NEW PERSON FILE
"KRN",19,9510,"RPC",114,0)
DVBAB FORM DATA BACKUP
"KRN",19,9510,"RPC",116,0)
DVBAB SET DIVISION
"KRN",19,9510,"RPC",117,0)
DVBAB GET URL
"KRN",19,9510,"RPC",118,0)
ORPRF TRIGGER POPUP
"KRN",19,9510,"RPC",119,0)
ORPRF HASFLG
"KRN",19,9510,"RPC",120,0)
ORPRF HASCAT1
"KRN",19,9510,"RPC",121,0)
ORPRF GETFLG
"KRN",19,9510,"RPC",122,0)
ORPRF CLEAR
"KRN",19,9510,"RPC",123,0)
TIU SET DOCUMENT TEXT
"KRN",19,9510,"RPC",124,0)
DVBAB ORIGINAL PROCESSING DATE
"KRN",19,9510,"RPC",125,0)
TIU CREATE ADDENDUM RECORD
"KRN",19,9510,"RPC",126,0)
TIU UPDATE RECORD
"KRN",19,9510,"RPC",128,0)
XUS SET VISITOR
"KRN",19,9510,"RPC",129,0)
XUS GET VISITOR
"KRN",19,9510,"RPC",130,0)
DVBAB RESTRICTED LIST PATIENTS
"KRN",19,9510,"RPC",131,0)
DVBAB DOD INFO
"KRN",19,9510,"RPC",132,0)
DVBAB DOD REPORT
"KRN",19,9510,"RPC",133,0)
DVBAB DOD REPORT TYPES
"KRN",19,9510,"RPC",134,0)
DVBAB FIND DFN BY ICN
"KRN",19,9510,"RPC",135,0)
DVBAB CCOW
"KRN",19,9510,"RPC",136,0)
DVBAB ZIP2CITY
"KRN",19,9510,"RPC",137,0)
DVBA CHECK PATCH
"KRN",19,9510,"RPC",138,0)
DVBAB GET SET
"KRN",19,9510,"U")
CAPRI GUI (BROKER)
"KRN",8994,91,-1)
0^1
"KRN",8994,91,0)
DVBAB GET SET^GETSET^DVBABDDU^2^R^^^^1
"KRN",8994,91,1,0)
^8994.01^2^2^3100805^^^
"KRN",8994,91,1,1,0)
This remote procedure retrieves the SET OF CODES for a given file and 
"KRN",8994,91,1,2,0)
field for use in populating controls.
"KRN",8994,91,2,0)
^8994.02A^2^2
"KRN",8994,91,2,1,0)
DVBFIL^1^^1^1
"KRN",8994,91,2,1,1,0)
^^1^1^3100805^
"KRN",8994,91,2,1,1,1,0)
This paramater contains a valid file number.
"KRN",8994,91,2,2,0)
DVBFLD^1^^1^2
"KRN",8994,91,2,2,1,0)
^8994.021^1^1^3100805^^^
"KRN",8994,91,2,2,1,1,0)
This parameter contains a field in the file passed as DVBFIL.
"KRN",8994,91,2,"B","DVBFIL",1)

"KRN",8994,91,2,"B","DVBFLD",2)

"KRN",8994,91,2,"PARAMSEQ",1,1)

"KRN",8994,91,2,"PARAMSEQ",2,2)

"KRN",8994,91,3,0)
^^12^12^3100805^
"KRN",8994,91,3,1,0)
The results will be returned as an array of strings, each containing the 
"KRN",8994,91,3,2,0)
internal set of codes value and the external set of codes value delimited 
"KRN",8994,91,3,3,0)
by a caret ("^").
"KRN",8994,91,3,4,0)
 
"KRN",8994,91,3,5,0)
Example results:
"KRN",8994,91,3,6,0)
DVBRSLT(1)="T^TERMINAL"
"KRN",8994,91,3,7,0)
DVBRSLT(2)="P^POW"
"KRN",8994,91,3,8,0)
DVBRSLT(3)="OS^ORIGINAL SC"
"KRN",8994,91,3,9,0)
DVBRSLT(4)="ON^ORIGINAL NSC"
"KRN",8994,91,3,10,0)
DVBRSLT(5)="I^INCREASE"
"KRN",8994,91,3,11,0)
DVBRSLT(6)="R^REVIEW"
"KRN",8994,91,3,12,0)
DVBRSLT(7)="OTR^OTHER"
"KRN",8994,747,-1)
0^8
"KRN",8994,747,0)
DVBAB AMIS REPORT^STRT^DVBAB3^2^R^0^^0
"KRN",8994,747,1,0)
^8994.01^1^1^3101019^^^^
"KRN",8994,747,1,1,0)
Returns an AMIS report for specified search criteria.
"KRN",8994,747,2,0)
^8994.02A^6^6
"KRN",8994,747,2,1,0)
BDATE^1^^1^1
"KRN",8994,747,2,1,1,0)
^^2^2^3101019^
"KRN",8994,747,2,1,1,1,0)
Beginning date in a date range to use for retrieving results for the 
"KRN",8994,747,2,1,1,2,0)
report.
"KRN",8994,747,2,2,0)
EDATE^1^^1^2
"KRN",8994,747,2,2,1,0)
^^1^1^3101019^
"KRN",8994,747,2,2,1,1,0)
Ending date in a date range to use for retrieving results for the report.
"KRN",8994,747,2,3,0)
RONUM^1^^0^3
"KRN",8994,747,2,3,1,0)
^^12^12^3101019^
"KRN",8994,747,2,3,1,1,0)
This is an optional parameter that has 2 optional pieces: 
"KRN",8994,747,2,3,1,2,0)
     REGIONAL OFFICE^DIVISION
"KRN",8994,747,2,3,1,3,0)
If this parameter is defined, then the report logic will filter the 
"KRN",8994,747,2,3,1,4,0)
results by the Regional Office number passed and/or Division.
"KRN",8994,747,2,3,1,5,0)
 
"KRN",8994,747,2,3,1,6,0)
Regional Office should always be included in the 1st '^' delimited piece 
"KRN",8994,747,2,3,1,7,0)
and the Division should always be included in the 2nd '^' delimited piece 
"KRN",8994,747,2,3,1,8,0)
if values are to be passed.
"KRN",8994,747,2,3,1,9,0)
 
"KRN",8994,747,2,3,1,10,0)
If the 1st '^' delimited piece is undefined, null or 0 then results for 
"KRN",8994,747,2,3,1,11,0)
all Regional Offices (RO) will be returned. If Division is undefined, 
"KRN",8994,747,2,3,1,12,0)
null or 0, then results for all Divisions will be returned.
"KRN",8994,747,2,4,0)
SBULL^1^^1^4
"KRN",8994,747,2,4,1,0)
^^2^2^3101019^
"KRN",8994,747,2,4,1,1,0)
A Y/N value which indicates whether a bulletin should be generated when 
"KRN",8994,747,2,4,1,2,0)
the processing has completed.
"KRN",8994,747,2,5,0)
DUZ^1^^1^5
"KRN",8994,747,2,5,1,0)
^^2^2^3101019^
"KRN",8994,747,2,5,1,1,0)
Identifies the individual in the NEW PERSON File (#200) who should 
"KRN",8994,747,2,5,1,2,0)
recieve the bulletin generated.
"KRN",8994,747,2,6,0)
DVBAPRTY^1^3^1^6
"KRN",8994,747,2,6,1,0)
^^5^5^3101019^
"KRN",8994,747,2,6,1,1,0)
Priority of Exam code which inidicates which priorities to filter on.
"KRN",8994,747,2,6,1,2,0)
   AO  : Agent Orange
"KRN",8994,747,2,6,1,3,0)
   BDD : Benefits Delivery at Discharge and Quick Start
"KRN",8994,747,2,6,1,4,0)
   DES : DES Claimed Condition by Service Member and Fit For Duty
"KRN",8994,747,2,6,1,5,0)
   ALL : All Others (Original Report with all codes except those above)
"KRN",8994,747,2,"B","BDATE",1)

"KRN",8994,747,2,"B","DUZ",5)

"KRN",8994,747,2,"B","DVBAPRTY",6)

"KRN",8994,747,2,"B","EDATE",2)

"KRN",8994,747,2,"B","RONUM",3)

"KRN",8994,747,2,"B","SBULL",4)

"KRN",8994,747,2,"PARAMSEQ",1,1)

"KRN",8994,747,2,"PARAMSEQ",2,2)

"KRN",8994,747,2,"PARAMSEQ",3,3)

"KRN",8994,747,2,"PARAMSEQ",4,4)

"KRN",8994,747,2,"PARAMSEQ",5,5)

"KRN",8994,747,2,"PARAMSEQ",6,6)

"KRN",8994,751,-1)
0^3
"KRN",8994,751,0)
DVBAB REPORT ADMINQ^ENBROKE2^DVBAADRP^4^R^0
"KRN",8994,751,1,0)
^^2^2^3101006^
"KRN",8994,751,1,1,0)
Generates an admission inquiry report, in either standard or delimited 
"KRN",8994,751,1,2,0)
format, for the specified parameters.
"KRN",8994,751,2,0)
^8994.02A^5^5
"KRN",8994,751,2,1,0)
BDATE^1^^1^1
"KRN",8994,751,2,1,1,0)
^^2^2^3101006^
"KRN",8994,751,2,1,1,1,0)
Beginning date in a date range to use for retrieving results for the 
"KRN",8994,751,2,1,1,2,0)
report.
"KRN",8994,751,2,2,0)
EDATE^1^^1^2
"KRN",8994,751,2,2,1,0)
^^1^1^3101006^
"KRN",8994,751,2,2,1,1,0)
Ending date in a date range to use for retrieving results for the report.
"KRN",8994,751,2,3,0)
ROYESNO^1^^^3
"KRN",8994,751,2,3,1,0)
^^2^2^3101006^
"KRN",8994,751,2,3,1,1,0)
'Y' indicates to screen by RONUM.
"KRN",8994,751,2,3,1,2,0)
Note: In the M code, the variable is referenced as RO vs ROYESNO.
"KRN",8994,751,2,4,0)
RONUM^1^^^4
"KRN",8994,751,2,4,1,0)
^^2^2^3101006^
"KRN",8994,751,2,4,1,1,0)
Screens RO number on report. Regional Office Station # when ROYESNO is 
"KRN",8994,751,2,4,1,2,0)
'Y', otherwise 0.
"KRN",8994,751,2,5,0)
DVBADLMTR^1^^0^5
"KRN",8994,751,2,5,1,0)
^^3^3^3101006^
"KRN",8994,751,2,5,1,1,0)
This is an optional parameter, which when defined with the final end date 
"KRN",8994,751,2,5,1,2,0)
selected in the GUI, will produce a delimited report. If this parameter 
"KRN",8994,751,2,5,1,3,0)
is undefined, null or 0 then the standard report format will be generated.
"KRN",8994,751,2,"B","BDATE",1)

"KRN",8994,751,2,"B","DVBADLMTR",5)

"KRN",8994,751,2,"B","EDATE",2)

"KRN",8994,751,2,"B","RONUM",4)

"KRN",8994,751,2,"B","ROYESNO",3)

"KRN",8994,751,2,"PARAMSEQ",1,1)

"KRN",8994,751,2,"PARAMSEQ",2,2)

"KRN",8994,751,2,"PARAMSEQ",3,3)

"KRN",8994,751,2,"PARAMSEQ",4,4)

"KRN",8994,751,2,"PARAMSEQ",5,5)

"KRN",8994,752,-1)
0^7
"KRN",8994,752,0)
DVBAB REPORT INCOMPVET^STRT^DVBAB51^2^R^0
"KRN",8994,752,1,0)
^^2^2^3101006^
"KRN",8994,752,1,1,0)
Generates an incompetent veteran report, in either standard or delimited 
"KRN",8994,752,1,2,0)
format, for the specificed date range.
"KRN",8994,752,2,0)
^8994.02A^3^3
"KRN",8994,752,2,1,0)
BDATE^1^^1^1
"KRN",8994,752,2,1,1,0)
^^2^2^3101006^
"KRN",8994,752,2,1,1,1,0)
Beginning date in a date range to use for retrieving results for the 
"KRN",8994,752,2,1,1,2,0)
report.
"KRN",8994,752,2,2,0)
EDATE^1^^1^2
"KRN",8994,752,2,2,1,0)
^^1^1^3101006^
"KRN",8994,752,2,2,1,1,0)
Ending date in a date range to use for retrieving results for the report.
"KRN",8994,752,2,3,0)
DVBADLMTR^1^^0^3
"KRN",8994,752,2,3,1,0)
^^3^3^3101006^
"KRN",8994,752,2,3,1,1,0)
This is an optional parameter, which when defined with the final end date 
"KRN",8994,752,2,3,1,2,0)
selected in the GUI, will produce a delimited report. If this parameter 
"KRN",8994,752,2,3,1,3,0)
is undefined, null or 0 then the standard report format will be generated.
"KRN",8994,752,2,"B","BDATE",1)

"KRN",8994,752,2,"B","DVBADLMTR",3)

"KRN",8994,752,2,"B","EDATE",2)

"KRN",8994,752,2,"PARAMSEQ",1,1)

"KRN",8994,752,2,"PARAMSEQ",2,2)

"KRN",8994,752,2,"PARAMSEQ",3,3)

"KRN",8994,753,-1)
0^6
"KRN",8994,753,0)
DVBAB REPORT DISCHARGE^STRT^DVBAB53^2^R^0
"KRN",8994,753,1,0)
^^2^2^3101006^
"KRN",8994,753,1,1,0)
Generates a discharge report, in either standard or delimited format, for 
"KRN",8994,753,1,2,0)
the specified parameters.
"KRN",8994,753,2,0)
^8994.02A^4^4
"KRN",8994,753,2,1,0)
BDATE^1^^1^1
"KRN",8994,753,2,1,1,0)
^^2^2^3101006^
"KRN",8994,753,2,1,1,1,0)
Beginning date in a date range to use for retrieving results for the 
"KRN",8994,753,2,1,1,2,0)
report.
"KRN",8994,753,2,2,0)
EDATE^1^^1^2
"KRN",8994,753,2,2,1,0)
^^1^1^3101006^
"KRN",8994,753,2,2,1,1,0)
Ending date in a date range to use for retrieving results for the report.
"KRN",8994,753,2,3,0)
ADTYPE^1^^1^3
"KRN",8994,753,2,3,1,0)
^^5^5^3101006^
"KRN",8994,753,2,3,1,1,0)
Valid discharge code values:
"KRN",8994,753,2,3,1,2,0)
  'A' - Recieving A&A
"KRN",8994,753,2,3,1,3,0)
  'P' - Pension
"KRN",8994,753,2,3,1,4,0)
  'S' - Service Connected
"KRN",8994,753,2,3,1,5,0)
  'L' - All discharge types
"KRN",8994,753,2,4,0)
DVBADLMTR^1^^0^4
"KRN",8994,753,2,4,1,0)
^^3^3^3101006^
"KRN",8994,753,2,4,1,1,0)
This is an optional parameter, which when defined with the final end date 
"KRN",8994,753,2,4,1,2,0)
selected in the GUI, will produce a delimited report. If this parameter 
"KRN",8994,753,2,4,1,3,0)
is undefined, null or 0 then the standard report format will be generated.
"KRN",8994,753,2,"B","ADTYPE",3)

"KRN",8994,753,2,"B","BDATE",1)

"KRN",8994,753,2,"B","DVBADLMTR",4)

"KRN",8994,753,2,"B","EDATE",2)

"KRN",8994,753,2,"PARAMSEQ",1,1)

"KRN",8994,753,2,"PARAMSEQ",2,2)

"KRN",8994,753,2,"PARAMSEQ",3,3)

"KRN",8994,753,2,"PARAMSEQ",4,4)

"KRN",8994,754,-1)
0^5
"KRN",8994,754,0)
DVBAB REPORT READMIT^STRT^DVBAB56^2^R^0
"KRN",8994,754,1,0)
^^2^2^3101006^
"KRN",8994,754,1,1,0)
Generates a re-admission report, in either standard or delimited format, 
"KRN",8994,754,1,2,0)
for the specified date range.
"KRN",8994,754,2,0)
^8994.02A^4^4
"KRN",8994,754,2,1,0)
BDATE^1^^1^1
"KRN",8994,754,2,1,1,0)
^^2^2^3101006^
"KRN",8994,754,2,1,1,1,0)
Beginning date in a date range to use for retrieving results for the 
"KRN",8994,754,2,1,1,2,0)
report.
"KRN",8994,754,2,2,0)
EDATE^1^^1^2
"KRN",8994,754,2,2,1,0)
^^1^1^3101006^
"KRN",8994,754,2,2,1,1,0)
Ending date in a date range to use for retrieving results for the report.
"KRN",8994,754,2,3,0)
DVBAH^1^^1^3
"KRN",8994,754,2,3,1,0)
^^3^3^3101006^
"KRN",8994,754,2,3,1,1,0)
Defines the scope of the report:
"KRN",8994,754,2,3,1,2,0)
  'H' indicates HOSPITAL
"KRN",8994,754,2,3,1,3,0)
  'D' indicates DOM
"KRN",8994,754,2,4,0)
DVBADLMTR^1^^0^4
"KRN",8994,754,2,4,1,0)
^^3^3^3101006^
"KRN",8994,754,2,4,1,1,0)
This is an optional parameter, which when defined with the final end date 
"KRN",8994,754,2,4,1,2,0)
selected in the GUI, will produce a delimited report. If this parameter 
"KRN",8994,754,2,4,1,3,0)
is undefined, null or 0 then the standard report format will be generated.
"KRN",8994,754,2,"B","BDATE",1)

"KRN",8994,754,2,"B","DVBADLMTR",4)

"KRN",8994,754,2,"B","DVBAH",3)

"KRN",8994,754,2,"B","EDATE",2)

"KRN",8994,754,2,"PARAMSEQ",1,1)

"KRN",8994,754,2,"PARAMSEQ",2,2)

"KRN",8994,754,2,"PARAMSEQ",3,3)

"KRN",8994,754,2,"PARAMSEQ",4,4)

"KRN",8994,755,-1)
0^2
"KRN",8994,755,0)
DVBAB REPORT ADMISSIONS^STRT^DVBAB54^2^R^0
"KRN",8994,755,1,0)
^8994.01^2^2^3101006^^^
"KRN",8994,755,1,1,0)
Generates an admission report, in either standard or delimited format,
"KRN",8994,755,1,2,0)
for the specified date range.
"KRN",8994,755,2,0)
^8994.02A^3^3
"KRN",8994,755,2,1,0)
BDATE^1^^1^1
"KRN",8994,755,2,1,1,0)
^8994.021^2^2^3101006^^
"KRN",8994,755,2,1,1,1,0)
Beginning date in a date range to use for retrieving results for the 
"KRN",8994,755,2,1,1,2,0)
report.
"KRN",8994,755,2,2,0)
EDATE^1^^1^2
"KRN",8994,755,2,2,1,0)
^8994.021^1^1^3101006^^
"KRN",8994,755,2,2,1,1,0)
Ending date in a date range to use for retrieving results for the report.
"KRN",8994,755,2,3,0)
DVBADLMTR^1^^0^3
"KRN",8994,755,2,3,1,0)
^8994.021^3^3^3101006^^
"KRN",8994,755,2,3,1,1,0)
This is an optional parameter, which when defined with the final end date 
"KRN",8994,755,2,3,1,2,0)
selected in the GUI, will produce a delimited report. If this parameter 
"KRN",8994,755,2,3,1,3,0)
is undefined, null or 0 then the standard report format will be generated.
"KRN",8994,755,2,"B","BDATE",1)

"KRN",8994,755,2,"B","DVBADLMTR",3)

"KRN",8994,755,2,"B","EDATE",2)

"KRN",8994,755,2,"PARAMSEQ",1,1)

"KRN",8994,755,2,"PARAMSEQ",2,2)

"KRN",8994,755,2,"PARAMSEQ",3,3)

"KRN",8994,2221,-1)
0^4
"KRN",8994,2221,0)
DVBAB REPORT SPECIAL^SPECRPT^DVBASPD2^4^R^0^^1
"KRN",8994,2221,1,0)
^^2^2^3101006^
"KRN",8994,2221,1,1,0)
Generates a Special Report for Pension and A&A, in either standard or 
"KRN",8994,2221,1,2,0)
delimited format, for the specified parameters.
"KRN",8994,2221,2,0)
^8994.02A^7^6
"KRN",8994,2221,2,1,0)
DCTYPES^2^^1^1
"KRN",8994,2221,2,1,1,0)
^8994.021^2^2^3101006^^
"KRN",8994,2221,2,1,1,1,0)
List of IENs that are the "Discharge Types"
"KRN",8994,2221,2,1,1,2,0)
that if found, will be included in the report
"KRN",8994,2221,2,2,0)
BDATE^1^^1^2
"KRN",8994,2221,2,2,1,0)
^^2^2^3101006^
"KRN",8994,2221,2,2,1,1,0)
Beginning date in a date range to use for retrieving results for the 
"KRN",8994,2221,2,2,1,2,0)
report.
"KRN",8994,2221,2,3,0)
EDATE^1^^1^3
"KRN",8994,2221,2,3,1,0)
^^1^1^3101006^
"KRN",8994,2221,2,3,1,1,0)
Ending date in a date range to use for retrieving results for the report.
"KRN",8994,2221,2,4,0)
RONUM^1^^0^4
"KRN",8994,2221,2,4,1,0)
^^3^3^3101006^
"KRN",8994,2221,2,4,1,1,0)
Regional Office number should be passed if you
"KRN",8994,2221,2,4,1,2,0)
wish to consider only one specific Regional Office
"KRN",8994,2221,2,4,1,3,0)
in the report.
"KRN",8994,2221,2,6,0)
REP^1^1^1^5
"KRN",8994,2221,2,6,1,0)
^8994.021^2^2^3101006^^
"KRN",8994,2221,2,6,1,1,0)
Pass 'A' for an A&A Report
"KRN",8994,2221,2,6,1,2,0)
Pass 'P' for a Pension Report
"KRN",8994,2221,2,7,0)
DVBADLMTR^1^^0^6
"KRN",8994,2221,2,7,1,0)
^^3^3^3101006^
"KRN",8994,2221,2,7,1,1,0)
This is an optional parameter, which when defined with the final end date 
"KRN",8994,2221,2,7,1,2,0)
selected in the GUI, will produce a delimited report. If this parameter 
"KRN",8994,2221,2,7,1,3,0)
is undefined, null or 0 then the standard report format will be generated.
"KRN",8994,2221,2,"B","BDATE",2)

"KRN",8994,2221,2,"B","DCTYPES",1)

"KRN",8994,2221,2,"B","DVBADLMTR",7)

"KRN",8994,2221,2,"B","EDATE",3)

"KRN",8994,2221,2,"B","REP",6)

"KRN",8994,2221,2,"B","RONUM",4)

"KRN",8994,2221,2,"PARAMSEQ",1,1)

"KRN",8994,2221,2,"PARAMSEQ",2,2)

"KRN",8994,2221,2,"PARAMSEQ",3,3)

"KRN",8994,2221,2,"PARAMSEQ",4,4)

"KRN",8994,2221,2,"PARAMSEQ",5,6)

"KRN",8994,2221,2,"PARAMSEQ",6,7)

"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",223,-1)
1^1
"PKG",223,0)
AUTOMATED MED INFO EXCHANGE^DVBA^The entire AMIE package 7131/2507.
"PKG",223,20,0)
^9.402P^^
"PKG",223,22,0)
^9.49I^1^1
"PKG",223,22,1,0)
2.7^2950410^3010328
"PKG",223,22,1,"PAH",1,0)
149^3110126^11744
"PKG",223,22,1,"PAH",1,1,0)
^^1^1^3110126
"PKG",223,22,1,"PAH",1,1,1,0)
Please see FORUM for a more complete description of DVBA*2.7*149
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
32
"RTN","DVBA149P")
0^^B466083^n/a
"RTN","DVBA149P",1,0)
DVBA149P ;ALB/RPM - PATCH DVBA*2.7*149 PRE-INSTALL ; 1/26/11 3:46pm
"RTN","DVBA149P",2,0)
 ;;2.7;AMIE;**149**;Apr 10, 1995;Build 16
"RTN","DVBA149P",3,0)
 ;
"RTN","DVBA149P",4,0)
 Q  ;NO DIRECT ENTRY
"RTN","DVBA149P",5,0)
 ;
"RTN","DVBA149P",6,0)
PRE ;Main entry point for Pre-init items.
"RTN","DVBA149P",7,0)
 ;
"RTN","DVBA149P",8,0)
 N DVBERR,DVBIEN,DVBFDA
"RTN","DVBA149P",9,0)
 ;if the 2507 cancellation reason, 'VETERAN PLANS TO SUBMIT DBQ',
"RTN","DVBA149P",10,0)
 ;exists in File #396.5, then delete the entry prior to installing 
"RTN","DVBA149P",11,0)
 ;the build.
"RTN","DVBA149P",12,0)
 S DVBIEN=$$FIND1^DIC(396.5,"","BX","VETERAN PLANS TO SUBMIT DBQ","","","DVBERR")
"RTN","DVBA149P",13,0)
 I +DVBIEN D
"RTN","DVBA149P",14,0)
 .S DVBFDA(396.5,DVBIEN_",",.01)="@"
"RTN","DVBA149P",15,0)
 .D FILE^DIE("SK","DVBFDA","DVBERR")
"RTN","DVBA149P",16,0)
 Q
"RTN","DVBAADRP")
0^9^B43200914^B28538442
"RTN","DVBAADRP",1,0)
DVBAADRP ;ALB/GTS-557/THM-AMIE COMPLETE ADMISSION RPT ; 1/22/91  1:19 PM
"RTN","DVBAADRP",2,0)
 ;;2.7;AMIE;**17,42,53,108,149**;Apr 10, 1995;Build 16
"RTN","DVBAADRP",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBAADRP",4,0)
 ;
"RTN","DVBAADRP",5,0)
 N DVBGUI
"RTN","DVBAADRP",6,0)
 S DVBGUI=0
"RTN","DVBAADRP",7,0)
 K ^TMP($J) G TERM
"RTN","DVBAADRP",8,0)
 Q
"RTN","DVBAADRP",9,0)
 ;
"RTN","DVBAADRP",10,0)
ENBROKER(Y) ;
"RTN","DVBAADRP",11,0)
 ; Returns some info for the CAPRI GUI to display prior
"RTN","DVBAADRP",12,0)
 ; to the user running this report
"RTN","DVBAADRP",13,0)
 N DVBGUI
"RTN","DVBAADRP",14,0)
 S DVBGUI=1
"RTN","DVBAADRP",15,0)
 K ^TMP($J)
"RTN","DVBAADRP",16,0)
 D HOME^%ZIS K NOASK,QUIT1
"RTN","DVBAADRP",17,0)
 D NOPARM^DVBAUTL2 G:$D(DVBAQUIT) KILL^DVBAUTIL
"RTN","DVBAADRP",18,0)
 ;
"RTN","DVBAADRP",19,0)
 S Y(1)="VARO COMPLETE ADMISSION REPORT" S DTAR=^DVB(396.1,1,0),FDT(0)=$$FMTE^XLFDT(DT,"5DZ")
"RTN","DVBAADRP",20,0)
 S HEAD="TOTAL ADMISSION REPORT",HEAD1="FOR "_$P(DTAR,U,1)_" ON "_FDT(0)
"RTN","DVBAADRP",21,0)
 S Y(2)=HEAD1,Y(3)=""
"RTN","DVBAADRP",22,0)
 S Y(4)="Please enter dates for search, oldest date first, most recent date last."
"RTN","DVBAADRP",23,0)
 S Y=$P(DTAR,U,3) X ^DD("DD")
"RTN","DVBAADRP",24,0)
 S Y(5)=""
"RTN","DVBAADRP",25,0)
 S Y(6)="Last report was run on "_Y
"RTN","DVBAADRP",26,0)
 Q
"RTN","DVBAADRP",27,0)
 ;
"RTN","DVBAADRP",28,0)
 ;Input: DVBADLMTR - Indicates if report should be delimited (Optional)
"RTN","DVBAADRP",29,0)
ENBROKE2(MSG,BDATE,EDATE,RO,RONUM,DVBADLMTR) ;
"RTN","DVBAADRP",30,0)
 ; This is the entry point to run the actual report from
"RTN","DVBAADRP",31,0)
 ; the CAPRI GUI.
"RTN","DVBAADRP",32,0)
 N DVBHFS,DVBERR,DVBGUI,I,DVBADHDR
"RTN","DVBAADRP",33,0)
 K ^TMP("DVBA",$J)
"RTN","DVBAADRP",34,0)
 S DVBADLMTR=$S('+$G(DVBADLMTR):"",1:"^"),DVBADHDR=0
"RTN","DVBAADRP",35,0)
 S DVBGUI=1,DVBERR=0,DVBHFS=$$HFS^DVBAB82()
"RTN","DVBAADRP",36,0)
 S X=BDATE,Y=EDATE
"RTN","DVBAADRP",37,0)
 ; DVBA*2.7*108 - Correct next line.  CAPRI GUI already adds 1 to EDATE
"RTN","DVBAADRP",38,0)
 ; S BDATE=BDATE-.5,EDATE=EDATE+.5
"RTN","DVBAADRP",39,0)
 S BDATE=BDATE-.5,EDATE=EDATE-.5
"RTN","DVBAADRP",40,0)
 K ^TMP($J)
"RTN","DVBAADRP",41,0)
 D HOME^%ZIS K NOASK,QUIT1
"RTN","DVBAADRP",42,0)
 D NOPARM^DVBAUTL2 G:$D(DVBAQUIT) KILL^DVBAUTIL
"RTN","DVBAADRP",43,0)
 ;
"RTN","DVBAADRP",44,0)
 S HEAD="TOTAL ADMISSION REPORT",HEAD1="FOR "_$P(DTAR,U,1)_" ON "_FDT(0)
"RTN","DVBAADRP",45,0)
 I $D(X) D
"RTN","DVBAADRP",46,0)
 . G:X=""!(Y<0) KILL S %ZIS="AEQ" D ^%ZIS K %ZIS
"RTN","DVBAADRP",47,0)
 D HFSOPEN^DVBAB82("DVBRP",DVBHFS,"W") I DVBERR D END^DVBAB82 Q
"RTN","DVBAADRP",48,0)
 I POP K DVBAON2,DCHPTR,M,Y,J G KILL^DVBAUTIL
"RTN","DVBAADRP",49,0)
 U IO
"RTN","DVBAADRP",50,0)
 D DEQUE
"RTN","DVBAADRP",51,0)
 D END^DVBAB82
"RTN","DVBAADRP",52,0)
 Q
"RTN","DVBAADRP",53,0)
SET Q:'$D(^DPT(DA,0))  S DFN=DA D RCV^DVBAVDPT Q:CFLOC'=RONUM&(RO="Y")&(CFLOC'=0)&(CFLOC'=376)
"RTN","DVBAADRP",54,0)
 S ^TMP($J,XCN,CFLOC,MB,DA)=MA_U_RCVAA_U_RCVPEN_U_CNUM
"RTN","DVBAADRP",55,0)
 Q
"RTN","DVBAADRP",56,0)
 ;
"RTN","DVBAADRP",57,0)
PRINTB S MA=$P(DATA,U),RCVAA=$P(DATA,U,2),RCVPEN=$P(DATA,U,3),CNUM=$P(DATA,U,4),DFN=DA,QUIT1=1 D ADM^DVBAVDPT
"RTN","DVBAADRP",58,0)
 S:ADMDT]"" ADMDT=$$FMTE^XLFDT(ADMDT,"5DZ")
"RTN","DVBAADRP",59,0)
 S:DCHGDT]"" DCHGDT=$$FMTE^XLFDT(DCHGDT,"5DZ")
"RTN","DVBAADRP",60,0)
 D:($G(DVBADLMTR)'="") PRINTD
"RTN","DVBAADRP",61,0)
 D:($G(DVBADLMTR)="") PRINTND
"RTN","DVBAADRP",62,0)
 Q
"RTN","DVBAADRP",63,0)
 ;
"RTN","DVBAADRP",64,0)
PRINTND ;print non-delimited admission inq report
"RTN","DVBAADRP",65,0)
 W:(IOST?1"C-".E!($D(DVBAON2))) @IOF
"RTN","DVBAADRP",66,0)
 I DVBGUI=0 W !!!,?(80-$L(HEAD)\2),HEAD,!,?(80-$L(HEAD1)\2),HEAD1,!!
"RTN","DVBAADRP",67,0)
 I DVBGUI=1 W !!
"RTN","DVBAADRP",68,0)
 W ?10,"Patient Name:",?26,PNAM,!!,?14,"Claim No:",?26,CNUM,!,?6,"Claim Folder Loc:",?26,CFLOC,!,?9,"Social Sec No:",?26,SSN,!,?8,"Admission Date:",?26,ADMDT,!,?3,"Admitting Diagnosis:",?26,DIAG,!
"RTN","DVBAADRP",69,0)
 W ?8,"Discharge Date:",?26,DCHGDT,!,?11,"Bed Service:",?26,BEDSEC,!,?13,"Recv A&A?:",?26,$S(RCVAA=0:"NO",RCVAA=1:"YES",1:"Not specified"),!
"RTN","DVBAADRP",70,0)
 W ?14,"Pension?:",?26,$S(RCVPEN=0:"NO",RCVPEN=1:"YES",1:"Not specified"),! D ELIG^DVBAVDPT I IOST'?1"C-".E S DVBAON2=""
"RTN","DVBAADRP",71,0)
 I IOST?1"C-".E DO
"RTN","DVBAADRP",72,0)
 .I ($O(^TMP($J,XCN))'=""!($O(^TMP($J,XCN,CFLOC))'=""!($O(^TMP($J,XCN,CFLOC,ADM))'=""!($O(^TMP($J,XCN,CFLOC,ADM,DA))'="")))) DO
"RTN","DVBAADRP",73,0)
 ..I DVBGUI=0 D
"RTN","DVBAADRP",74,0)
 ...W *7,!,"Press RETURN to continue or ""^"" to stop    "
"RTN","DVBAADRP",75,0)
 ...R ANS:DTIME
"RTN","DVBAADRP",76,0)
 ...S:ANS=U!('$T) QUIT=1
"RTN","DVBAADRP",77,0)
 ...I '$T S DVBAQUIT=1
"RTN","DVBAADRP",78,0)
 .I ($O(^TMP($J,XCN))=""&($O(^TMP($J,XCN,CFLOC))=""&($O(^TMP($J,XCN,CFLOC,ADM))=""&($O(^TMP($J,XCN,CFLOC,ADM,DA))="")))) DO
"RTN","DVBAADRP",79,0)
 ..I DVBGUI=0 D
"RTN","DVBAADRP",80,0)
 ...W *7,!,"Press RETURN to continue  "
"RTN","DVBAADRP",81,0)
 ...R ANS:DTIME
"RTN","DVBAADRP",82,0)
 Q
"RTN","DVBAADRP",83,0)
 ;
"RTN","DVBAADRP",84,0)
PRINTD ;print delimited admission inq report
"RTN","DVBAADRP",85,0)
 ;eligibility logic copied from ELIG^DVBAVDPT
"RTN","DVBAADRP",86,0)
 N ELIG,INCMP
"RTN","DVBAADRP",87,0)
 S ELIG=DVBAELIG,INCMP=""
"RTN","DVBAADRP",88,0)
 I ELIG]"" S ELIG=ELIG_" ("_$S(DVBAELST="P":"Pend Ver",DVBAELST="R":"Pend Re-verif",DVBAELST="V":"Verified",1:"Not Verified")_")"
"RTN","DVBAADRP",89,0)
 I $D(^DPT(DA,.29)) S INCMP=$S($P(^(.29),U,12)=1:"Incompetent",1:"")
"RTN","DVBAADRP",90,0)
 I INCMP]"",ELIG]"" S ELIG=ELIG_", "_INCMP
"RTN","DVBAADRP",91,0)
 D:('DVBADHDR) COLHDR
"RTN","DVBAADRP",92,0)
 W !,PNAM_DVBADLMTR_CNUM_DVBADLMTR_CFLOC_DVBADLMTR_SSN_DVBADLMTR_ADMDT_DVBADLMTR_DIAG_DVBADLMTR
"RTN","DVBAADRP",93,0)
 W DCHGDT_DVBADLMTR_BEDSEC_DVBADLMTR_$S(RCVAA=0:"NO",RCVAA=1:"YES",1:"Not specified")_DVBADLMTR
"RTN","DVBAADRP",94,0)
 W $S(RCVPEN=0:"NO",RCVPEN=1:"YES",1:"Not specified")_DVBADLMTR_ELIG
"RTN","DVBAADRP",95,0)
 Q
"RTN","DVBAADRP",96,0)
 ;
"RTN","DVBAADRP",97,0)
PRINT U IO S QUIT="" K MA,MB
"RTN","DVBAADRP",98,0)
 S XCN="" F M=0:0 S XCN=$O(^TMP($J,XCN)) Q:XCN=""!(QUIT=1)  S CFLOC="" F J=0:0 S CFLOC=$O(^TMP($J,XCN,CFLOC)) Q:CFLOC=""!(QUIT=1)  D PRINT1
"RTN","DVBAADRP",99,0)
 Q
"RTN","DVBAADRP",100,0)
PRINT1 S ADM="" F K=0:0 S ADM=$O(^TMP($J,XCN,CFLOC,ADM)) Q:ADM=""!(QUIT=1)  S DA="" F L=0:0 S DA=$O(^TMP($J,XCN,CFLOC,ADM,DA)) Q:DA=""!(QUIT=1)  S DATA=^(DA) D PRINTB
"RTN","DVBAADRP",101,0)
 Q
"RTN","DVBAADRP",102,0)
 ;
"RTN","DVBAADRP",103,0)
TERM D HOME^%ZIS K NOASK,QUIT1
"RTN","DVBAADRP",104,0)
 D NOPARM^DVBAUTL2 G:$D(DVBAQUIT) KILL^DVBAUTIL
"RTN","DVBAADRP",105,0)
 ;
"RTN","DVBAADRP",106,0)
SETUP W @IOF,!,"VARO COMPLETE ADMISSION REPORT" S DTAR=^DVB(396.1,1,0),FDT(0)=$$FMTE^XLFDT(DT,"5DZ")
"RTN","DVBAADRP",107,0)
 S HEAD="TOTAL ADMISSION REPORT",HEAD1="FOR "_$P(DTAR,U,1)_" ON "_FDT(0)
"RTN","DVBAADRP",108,0)
 W !,HEAD1
"RTN","DVBAADRP",109,0)
EN1 W !!,"Please enter dates for search, oldest date first, most recent date last.",!!,"Last report was run on " S Y=$P(DTAR,U,3) X ^DD("DD") W Y,!!
"RTN","DVBAADRP",110,0)
 D DATE^DVBAUTIL
"RTN","DVBAADRP",111,0)
 G:X=""!(Y<0) KILL S %ZIS="AEQ" D ^%ZIS K %ZIS
"RTN","DVBAADRP",112,0)
 I POP K DVBAON2,DCHPTR,M,Y,J G KILL^DVBAUTIL
"RTN","DVBAADRP",113,0)
 ;
"RTN","DVBAADRP",114,0)
QUEUE I $D(IO("Q")) S ZTRTN="DEQUE^DVBAADRP",ZTIO=ION,NOASK=1,ZTDESC="AMIE ADMISSION REPORT" F I="BDATE","EDATE","HEAD","HEAD1","RO","RONUM","FDT(0)","NOASK" S ZTSAVE(I)=""
"RTN","DVBAADRP",115,0)
 I $D(IO("Q")) D ^%ZTLOAD W:$D(ZTSK) !!,"Request queued.",!! G KILL
"RTN","DVBAADRP",116,0)
 ;
"RTN","DVBAADRP",117,0)
GO S MA=BDATE F J=0:0 S MA=$O(^DGPM("AMV1",MA)) Q:$P(MA,".")>EDATE!(MA="")  W:(('$D(NOASK))&($G(DVBADLMTR)="")) "." F DA=0:0 S DA=$O(^DGPM("AMV1",MA,DA)) Q:DA=""  F MB=0:0 S MB=$O(^DGPM("AMV1",MA,DA,MB)) Q:MB=""  I MA'>EDATE D SET
"RTN","DVBAADRP",118,0)
 I '$D(^TMP($J)) D  H 2 G KILL
"RTN","DVBAADRP",119,0)
 .U IO
"RTN","DVBAADRP",120,0)
 .W:($G(DVBADLMTR)="") !!,*7
"RTN","DVBAADRP",121,0)
 .W "No data found for parameters entered.",!!
"RTN","DVBAADRP",122,0)
 W:(($G(DVBGUI)=1)&($G(DVBADLMTR)="")) !,HEAD,!,HEAD1,!
"RTN","DVBAADRP",123,0)
 I $D(^TMP($J)) D PRINT I $D(DVBAQUIT) K DVBAON2,DCHPTR,M,Y,J G KILL^DVBAUTIL
"RTN","DVBAADRP",124,0)
 ;
"RTN","DVBAADRP",125,0)
KILL ;
"RTN","DVBAADRP",126,0)
 D ^%ZISC S X=3 K DVBAON2,DCHPTR,M,Y,J D:$D(ZTQUEUED) KILL^%ZTLOAD G FINAL^DVBAUTIL
"RTN","DVBAADRP",127,0)
 ;
"RTN","DVBAADRP",128,0)
DEQUE K ^TMP($J) G GO
"RTN","DVBAADRP",129,0)
 ;
"RTN","DVBAADRP",130,0)
COLHDR ;Column header for delimited report
"RTN","DVBAADRP",131,0)
 W "Patient Name"_DVBADLMTR_"Claim No"_DVBADLMTR_"Claim Folder Loc"_DVBADLMTR
"RTN","DVBAADRP",132,0)
 W "Social Sec No"_DVBADLMTR_"Admission Date"_DVBADLMTR_"Admitting Diagnosis"_DVBADLMTR
"RTN","DVBAADRP",133,0)
 W "Discharge Date"_DVBADLMTR_"Bed Service"_DVBADLMTR_"Recv A&A?"_DVBADLMTR
"RTN","DVBAADRP",134,0)
 W "Pension?"_DVBADLMTR_"Eligibility Data"
"RTN","DVBAADRP",135,0)
 S DVBADHDR=1  ;set so header info only printed once
"RTN","DVBAADRP",136,0)
 Q
"RTN","DVBAB2")
0^16^B32023164^B16723785
"RTN","DVBAB2",1,0)
DVBAB2 ;ALB/KLB - CAPRI RO AMIS REPORT CONT. ;05/01/00
"RTN","DVBAB2",2,0)
 ;;2.7;AMIE;**35,42,149**;Apr 10, 1995;Build 16
"RTN","DVBAB2",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBAB2",4,0)
 ;
"RTN","DVBAB2",5,0)
DAY30 ;exam completion
"RTN","DVBAB2",6,0)
 N DVBADTS,DVBAPPTS,DVBACNT,DVBADTM,DVBANDE,X,X1,X2
"RTN","DVBAB2",7,0)
 K ^TMP("DVBC",$J),^TMP($J,"SDAMA301")
"RTN","DVBAB2",8,0)
 ;DES Type exams required to be completed in 45 days, all others 30
"RTN","DVBAB2",9,0)
 S DVBADTS=$S(((";DCS;DFD;")[(";"_DVBAPREXM_";")):45,1:30)
"RTN","DVBAB2",10,0)
 ;setup call to scheduling API
"RTN","DVBAB2",11,0)
 S DVBAPPTS(1)=DTRPT_";"_EDATE,DVBAPPTS(4)=PNAM,DVBAPPTS(3)="R;I;NT"
"RTN","DVBAB2",12,0)
 S DVBAPPTS("SORT")="P",DVBAPPTS("FLDS")="10"
"RTN","DVBAB2",13,0)
 S DVBACNT=$$SDAPI^SDAMA301(.DVBAPPTS)
"RTN","DVBAB2",14,0)
 I (DVBACNT'>0) K ^TMP($J,"SDAMA301") Q
"RTN","DVBAB2",15,0)
 S DVBADTM=""
"RTN","DVBAB2",16,0)
 F  S DVBADTM=$O(^TMP($J,"SDAMA301",PNAM,DVBADTM)) Q:('+DVBADTM)  D
"RTN","DVBAB2",17,0)
 .S ^TMP("DVBC",$J,9999999-DVBADTM,DVBADTM)=""
"RTN","DVBAB2",18,0)
 S DVBANDE=$O(^TMP("DVBC",$J,0)),DVBADTM=$O(^TMP("DVBC",$J,DVBANDE,0))
"RTN","DVBAB2",19,0)
 D:(DVBADTM]"")
"RTN","DVBAB2",20,0)
 .S X2=DVBADTM,X1=$S(DTSCHEDC]"":DTSCHEDC,1:DVBCNOW)
"RTN","DVBAB2",21,0)
 .D ^%DTC  ;calculate date diff
"RTN","DVBAB2",22,0)
 .S:(X>DVBADTS) TOT(DVBAPREXM,"30DAYEX")=TOT(DVBAPREXM,"30DAYEX")+1
"RTN","DVBAB2",23,0)
 K ^TMP($J,"SDAMA301")
"RTN","DVBAB2",24,0)
 Q
"RTN","DVBAB2",25,0)
 ;
"RTN","DVBAB2",26,0)
PENDCNT I X'<0&(X'>90) S TOT(DVBAPREXM,"P90")=TOT(DVBAPREXM,"P90")+1
"RTN","DVBAB2",27,0)
 I X>90&(X'>120) S TOT(DVBAPREXM,"P121")=TOT(DVBAPREXM,"P121")+1
"RTN","DVBAB2",28,0)
 I X>120&(X'>150) S TOT(DVBAPREXM,"P151")=TOT(DVBAPREXM,"P151")+1
"RTN","DVBAB2",29,0)
 I X>150&(X'>180) S TOT(DVBAPREXM,"P181")=TOT(DVBAPREXM,"P181")+1
"RTN","DVBAB2",30,0)
 I X>180&(X'>365) S TOT(DVBAPREXM,"P365")=TOT(DVBAPREXM,"P365")+1
"RTN","DVBAB2",31,0)
 I X>365 S TOT(DVBAPREXM,"P366")=TOT(DVBAPREXM,"P366")+1
"RTN","DVBAB2",32,0)
 Q
"RTN","DVBAB2",33,0)
 ;
"RTN","DVBAB2",34,0)
SET ;
"RTN","DVBAB2",35,0)
 N DVBAPREXM
"RTN","DVBAB2",36,0)
 S DTA=^DVB(396.3,REQDA,0),DTREQ=$P(DTA,U,2),XRONUM=$P(DTA,U,3),XRONUM=$S($D(^DIC(4,+XRONUM,99)):$P(^(99),U,1),1:0) Q:XRONUM'=RONUM&(RONUM'="ALL")
"RTN","DVBAB2",37,0)
 ; Next 2 lines check for specific division  SPH/ALB - 9/3/02
"RTN","DVBAB2",38,0)
 I DVBDIV'="" I '$D(^DVB(396.3,REQDA,1)) Q
"RTN","DVBAB2",39,0)
 I DVBDIV'="" I $P(^DVB(396.3,REQDA,1),"^",4)'=DVBDIV Q
"RTN","DVBAB2",40,0)
 K XRONUM S DTRPT=$P(DTA,U,5),DTSCHEDC=$P(DTA,U,6),DTRQCMP=$P(DTA,U,7),DTTRANS=$P(DTA,U,12),DTREL=$P(DTA,U,14),RQSTAT=$P(DTA,U,18),DTCAN=$P(DTA,U,19),PRIO=$P(DTA,U,10) K DTA
"RTN","DVBAB2",41,0)
 I DTRPT="",DTCAN]"" S DTRPT=DTCAN
"RTN","DVBAB2",42,0)
 Q:DTRPT=""  ;requests never printed
"RTN","DVBAB2",43,0)
 ;check for Parent Request (retrieve current/parent Priority of Exam)
"RTN","DVBAB2",44,0)
 S DVBAPREXM=$$CHKREQ^DVBCIRP1(REQDA)
"RTN","DVBAB2",45,0)
 ;original report run (Exclude new priorities)
"RTN","DVBAB2",46,0)
 Q:((DVBAEXMP']"")&((";BDD;QS;DCS;DFD;AO;")[(";"_DVBAPREXM_";")))
"RTN","DVBAB2",47,0)
 ;report for specific priority
"RTN","DVBAB2",48,0)
 Q:((DVBAEXMP]"")&(DVBAEXMP'[(";"_DVBAPREXM_";")))
"RTN","DVBAB2",49,0)
 S:(DVBAEXMP']"") DVBAPREXM="ALL"  ;identifier for totals
"RTN","DVBAB2",50,0)
 I DTREL'<BDATE,DTREL'>EDATE D DAY30
"RTN","DVBAB2",51,0)
 I DTRPT'<BDATE,DTRPT'>EDATE S TOT(DVBAPREXM,"SENT")=TOT(DVBAPREXM,"SENT")+1
"RTN","DVBAB2",52,0)
 I DTRPT'<BDATE,DTRPT'>EDATE,RQSTAT'["X" S X1=$S(DTSCHEDC]"":DTSCHEDC,1:DVBCNOW),X2=DTRPT D ^%DTC I X>3 S TOT(DVBAPREXM,"3DAYSCH")=TOT(DVBAPREXM,"3DAYSCH")+1
"RTN","DVBAB2",53,0)
 I DTREL'<BDATE&(DTREL'>EDATE),RQSTAT="C"!(RQSTAT="R") S:PRIO'="E" DVBCPCTM=$$PROCDAY^DVBCUTL2(REQDA) S:PRIO="E" DVBCPCTM=$$INSFTME^DVBCUTA1(REQDA) S TOT(DVBAPREXM,"DAYS")=TOT(DVBAPREXM,"DAYS")+DVBCPCTM K DVBCPCTM
"RTN","DVBAB2",54,0)
 I DTRPT'>EDATE,"^P^S^T"[RQSTAT S TOT(DVBAPREXM,"PENDADJ")=TOT(DVBAPREXM,"PENDADJ")+1,X1=EDATE,X2=DTRPT D ^%DTC,PENDCNT
"RTN","DVBAB2",55,0)
 I DTRPT'>EDATE,"^C^CT^R^RX^X^"[RQSTAT,(+DTREL>EDATE)!(+DTCAN>EDATE) S TOT(DVBAPREXM,"PENDADJ")=TOT(DVBAPREXM,"PENDADJ")+1,X1=EDATE,X2=DTRPT D ^%DTC,PENDCNT
"RTN","DVBAB2",56,0)
 I DTREL'<BDATE&(DTREL'>EDATE),RQSTAT["C"!(RQSTAT="R") S TOT(DVBAPREXM,"COMPLETED")=TOT(DVBAPREXM,"COMPLETED")+1
"RTN","DVBAB2",57,0)
 I DTRPT'<BDATE,DTRPT'>EDATE,PRIO="E" S TOT(DVBAPREXM,"INSUFF")=TOT(DVBAPREXM,"INSUFF")+1
"RTN","DVBAB2",58,0)
 I DTCAN'<BDATE&(DTCAN'>EDATE),RQSTAT="X"!(RQSTAT="RX") S TOT(DVBAPREXM,"INCOMPLETE")=TOT(DVBAPREXM,"INCOMPLETE")+1
"RTN","DVBAB2",59,0)
 K DTRPT Q
"RTN","DVBAB2",60,0)
 ;
"RTN","DVBAB2",61,0)
GO ;
"RTN","DVBAB2",62,0)
 N DVBAEXMP,DVBAP,DVBAPREXM,DVBATOT,DVBALNE
"RTN","DVBAB2",63,0)
 S DVBAEXMP=$S($G(DVBAPRTY)["BDD":";BDD;QS;",($G(DVBAPRTY)["DES"):";DCS;DFD;",($G(DVBAPRTY)["AO"):";AO;",1:"")
"RTN","DVBAB2",64,0)
 S DVBABCNT=0,DVBALNE="" K ^TMP($J)
"RTN","DVBAB2",65,0)
 S %DT="TS",X="NOW" D ^%DT S DVBCNOW=Y
"RTN","DVBAB2",66,0)
 S PNAM="" F JJ=0:0 S PNAM=$O(^DVB(396.3,"B",PNAM)) Q:PNAM=""  F REQDA=0:0 S REQDA=$O(^DVB(396.3,"B",PNAM,REQDA)) Q:REQDA=""  D SET
"RTN","DVBAB2",67,0)
 ;
"RTN","DVBAB2",68,0)
 S DVBAEXMP=$S($G(DVBAPRTY)["BDD":"BDD,QS",($G(DVBAPRTY)["DES"):"DCS,DFD",($G(DVBAPRTY)["AO"):"AO",1:"ALL")
"RTN","DVBAB2",69,0)
 M DVBATOT=TOT  ;save totals for all priorities into new array
"RTN","DVBAB2",70,0)
 F DVBAP=1:1:$L(DVBAEXMP,",") D
"RTN","DVBAB2",71,0)
 .S DVBAPREXM=$P(DVBAEXMP,",",DVBAP)
"RTN","DVBAB2",72,0)
 .;re-create TOT array for each priority of exam
"RTN","DVBAB2",73,0)
 .D CRTOT^DVBCAMR2(DVBAPREXM,.DVBATOT,.TOT)
"RTN","DVBAB2",74,0)
 .S TOT("AVGDAYS")=0
"RTN","DVBAB2",75,0)
 .I TOT("COMPLETED")>0 S TOT("AVGDAYS")=TOT("DAYS")/TOT("COMPLETED"),TOT("AVGDAYS")=$J(TOT("AVGDAYS"),5,1)
"RTN","DVBAB2",76,0)
 .D BULLTXT^DVBCAMR1(DVBAPREXM)
"RTN","DVBAB2",77,0)
 .F JI=0:0 S JI=$O(^TMP($J,JI)) Q:JI=""  S DVBABCNT=DVBABCNT+1,MSG(DVBABCNT)=^TMP($J,JI,0)
"RTN","DVBAB2",78,0)
 .S:'$D(XMY) SBULL="N" I SBULL="Y" D SEND
"RTN","DVBAB2",79,0)
 .D:(DVBAP'=$L(DVBAEXMP,","))  ;another report to run
"RTN","DVBAB2",80,0)
 ..;insert line breaks / horizontal line break
"RTN","DVBAB2",81,0)
 ..S DVBABCNT=DVBABCNT+1,MSG(DVBABCNT)=""
"RTN","DVBAB2",82,0)
 ..F JI=1:1:70 S $P(DVBALNE,"-",JI)="-"
"RTN","DVBAB2",83,0)
 ..S DVBABCNT=DVBABCNT+1,MSG(DVBABCNT)=DVBALNE
"RTN","DVBAB2",84,0)
 ..S DVBABCNT=DVBABCNT+1,MSG(DVBABCNT)=""
"RTN","DVBAB2",85,0)
 ;
"RTN","DVBAB2",86,0)
EXIT K BDATE,%DT,DVBABCNT,C,DTCAN,DTREL,DTREQ,DTRQCMP,DTSCHEDC,DTTRANS
"RTN","DVBAB2",87,0)
 K DVBCNOW,DVBCPCTM,EDATE,FA,FB,JI,JJ,L,PNAM,PRIO,REQDA,RONUM,RQSTAT
"RTN","DVBAB2",88,0)
 K SBULL,TOT,X,X1,X2,XMDUZ,XMMG,XMY,Y,YY
"RTN","DVBAB2",89,0)
 Q
"RTN","DVBAB2",90,0)
 ;
"RTN","DVBAB2",91,0)
BULL S XMDUZ=$P(^VA(200,DUZ,0),U),XMMG=$S($D(^VA(200,DUZ,0)):$P(^(0),U,1),1:""),XMY(DUZ)=""
"RTN","DVBAB2",92,0)
 Q
"RTN","DVBAB2",93,0)
 ;
"RTN","DVBAB2",94,0)
SEND ;send 2507 AMIS report in bulletin
"RTN","DVBAB2",95,0)
 N DVBAXMY M DVBAXMY=XMY
"RTN","DVBAB2",96,0)
 S XMSUB="RO AMIS 290 Report "_$S((($G(DVBAPREXM)]"")&($G(DVBAPREXM)'="ALL")):"("_$G(DVBAPREXM)_" Exam Priority) ",1:"")_"-  "
"RTN","DVBAB2",97,0)
 S Y=BDATE X ^DD("DD") S XMSUB=XMSUB_Y S Y=EDATE X ^DD("DD") S XMSUB=XMSUB_" to "_Y,XMTEXT="^TMP($J,"
"RTN","DVBAB2",98,0)
 D ^XMD K XMTEXT,XMSUB,^TMP($J)
"RTN","DVBAB2",99,0)
 S DVBABCNT=DVBABCNT+1,MSG(DVBABCNT)=""
"RTN","DVBAB2",100,0)
 S DVBABCNT=DVBABCNT+1,MSG(DVBABCNT)=">>> Mail message transmitted. <<<"
"RTN","DVBAB2",101,0)
 M XMY=DVBAXMY  ;restore address list for subsequent bulletins
"RTN","DVBAB2",102,0)
 Q
"RTN","DVBAB2",103,0)
 ;
"RTN","DVBAB3")
0^17^B10129611^B4966234
"RTN","DVBAB3",1,0)
DVBAB3 ;ALB/KLB - CAPRI Amis Report ;05/01/00
"RTN","DVBAB3",2,0)
 ;;2.7;AMIE;**35,42,149**;Apr 10, 1995;Build 16
"RTN","DVBAB3",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBAB3",4,0)
 ;
"RTN","DVBAB3",5,0)
 ;Input:  MSG    - Array with report contents/error message 
"RTN","DVBAB3",6,0)
 ;                 (By Ref)
"RTN","DVBAB3",7,0)
 ;        BDATE  - Beginning date in a date range to use
"RTN","DVBAB3",8,0)
 ;                 for retrieving results for the report.
"RTN","DVBAB3",9,0)
 ;        EDATE  - Ending date in a date range to use for
"RTN","DVBAB3",10,0)
 ;                 retrieving results for the report.
"RTN","DVBAB3",11,0)
 ;        RONUMB - Regional Office number '^' Division to 
"RTN","DVBAB3",12,0)
 ;                 filter result set on (Both Optional)
"RTN","DVBAB3",13,0)
 ;        SBULL  - A Y/N value indicating whether a bulletin
"RTN","DVBAB3",14,0)
 ;                 (Report Contents) will be generated when 
"RTN","DVBAB3",15,0)
 ;                 processing completes.
"RTN","DVBAB3",16,0)
 ;        DUZ    - IEN of the individual in File #200 to send
"RTN","DVBAB3",17,0)
 ;                 bulletin to.
"RTN","DVBAB3",18,0)
 ;      DVBAPRTY - Priority of Exam code that indicates which
"RTN","DVBAB3",19,0)
 ;                 priorities to filter on.
"RTN","DVBAB3",20,0)
 ;                    AO  - Agent Orange (A0)
"RTN","DVBAB3",21,0)
 ;                    BDD - Benefits Delivery at Discharge (BDD)
"RTN","DVBAB3",22,0)
 ;                          Quick Start (QS)
"RTN","DVBAB3",23,0)
 ;                    DES - DES Claimed Condition by Service Memeber (DCS)
"RTN","DVBAB3",24,0)
 ;                          DES Fit For Duty (DFD)
"RTN","DVBAB3",25,0)
 ;                    ALL - All others (Excludes AO,BDD,DCS,DFD,QS)
"RTN","DVBAB3",26,0)
STRT(MSG,BDATE,EDATE,RONUMB,SBULL,DUZ,DVBAPRTY) ;
"RTN","DVBAB3",27,0)
 S BDATE=BDATE+".0000"
"RTN","DVBAB3",28,0)
 S EDATE=EDATE+".2359"
"RTN","DVBAB3",29,0)
 S DVBDIV=$P($G(RONUMB),"^",2)
"RTN","DVBAB3",30,0)
 S RONUMB=$P($G(RONUMB),"^",1)
"RTN","DVBAB3",31,0)
 S CNT=0
"RTN","DVBAB3",32,0)
 K ^TMP($J)
"RTN","DVBAB3",33,0)
 S RONUM=0
"RTN","DVBAB3",34,0)
SETUP S UPDATE="N",PREVMO=$P(^DVB(396.1,1,0),U,11)
"RTN","DVBAB3",35,0)
 I '$D(DT) S DT=$$DT^XLFDT
"RTN","DVBAB3",36,0)
 S DVBCDT(0)=$$FMTE^XLFDT(DT,"5DZ")
"RTN","DVBAB3",37,0)
INITCNTR ;initialize counter arrays
"RTN","DVBAB3",38,0)
 N DVBAEXMP,DVBAP
"RTN","DVBAB3",39,0)
 S DVBAEXMP=$S($G(DVBAPRTY)["BDD":"BDD,QS",($G(DVBAPRTY)["DES"):"DCS,DFD",($G(DVBAPRTY)["AO"):"AO",1:"ALL")
"RTN","DVBAB3",40,0)
 F JI="3DAYSCH","30DAYEX","PENDADJ" D
"RTN","DVBAB3",41,0)
 .F DVBAP=1:1:$L(DVBAEXMP,",") S TOT($P(DVBAEXMP,",",DVBAP),JI)=0
"RTN","DVBAB3",42,0)
 F JI="INSUFF","SENT","INCOMPLETE","DAYS","COMPLETED" D
"RTN","DVBAB3",43,0)
 .F DVBAP=1:1:$L(DVBAEXMP,",") S TOT($P(DVBAEXMP,",",DVBAP),JI)=0
"RTN","DVBAB3",44,0)
 F JI="P90","P121","P151","P181","P365","P366" D
"RTN","DVBAB3",45,0)
 .F DVBAP=1:1:$L(DVBAEXMP,",") S TOT($P(DVBAEXMP,",",DVBAP),JI)=0
"RTN","DVBAB3",46,0)
 S ^TMP($J,CNT)="REGIONAL OFFICE 2507 AMIS REPORT",CNT=CNT+1
"RTN","DVBAB3",47,0)
 ;
"RTN","DVBAB3",48,0)
EN ;
"RTN","DVBAB3",49,0)
 N DVBAERR
"RTN","DVBAB3",50,0)
 S ^TMP($J,CNT)="",CNT=CNT+1,^TMP($J,CNT)="",CNT=CNT+1,^TMP($J,CNT)="",CNT=CNT+1
"RTN","DVBAB3",51,0)
 S:'$D(EDATE) MSG(1)="Please enter a ending date"
"RTN","DVBAB3",52,0)
 G:'$D(EDATE) EXIT
"RTN","DVBAB3",53,0)
 S:'$D(BDATE) MSG(1)="Please enter a starting date"
"RTN","DVBAB3",54,0)
 G:'$D(BDATE) EXIT
"RTN","DVBAB3",55,0)
 S BDATE1=BDATE-.1,EDATE1=EDATE+.5
"RTN","DVBAB3",56,0)
 S:EDATE<BDATE MSG(1)="Beginning date must be before ending date"
"RTN","DVBAB3",57,0)
 G:EDATE<BDATE EXIT
"RTN","DVBAB3",58,0)
 I (RONUMB]"") D  G:DVBAERR EXIT
"RTN","DVBAB3",59,0)
 .S DVBAERR=0
"RTN","DVBAB3",60,0)
 .S RONUM=$O(^DIC(4,"B",RONUMB,RONUM))
"RTN","DVBAB3",61,0)
 .I RONUM="" S MSG(1)="Invalid Regional Office number",DVBAERR=1 Q
"RTN","DVBAB3",62,0)
 .S:'$D(^DIC(4,RONUM,99)) MSG(1)="Invalid Regional Office number",DVBAERR=1
"RTN","DVBAB3",63,0)
 .Q:'$D(^DIC(4,RONUM,99))
"RTN","DVBAB3",64,0)
 .S RONUM=$S($D(^DIC(4,RONUM,99)):$P(^(99),U,1),1:"000")
"RTN","DVBAB3",65,0)
 .S RONAME=RONUMB
"RTN","DVBAB3",66,0)
 D:(RONUMB']"")
"RTN","DVBAB3",67,0)
 .S (RONUM,RONAME)="ALL"
"RTN","DVBAB3",68,0)
 ;validate Priority of Exam (Null Allowed and will default to ALL)
"RTN","DVBAB3",69,0)
 I ((";AO;BDD;DES;ALL;;")'[(";"_$G(DVBAPRTY)_";")) D  G EXIT
"RTN","DVBAB3",70,0)
 .S MSG(1)="Invalid Priority of Exam Code"
"RTN","DVBAB3",71,0)
 S:'$D(SBULL) MSG(1)="You need to say if you want a Bulletin or not"
"RTN","DVBAB3",72,0)
 G:'$D(SBULL) EXIT
"RTN","DVBAB3",73,0)
 I SBULL="Y" D BULL^DVBAB2
"RTN","DVBAB3",74,0)
 ;
"RTN","DVBAB3",75,0)
 D GO^DVBAB2
"RTN","DVBAB3",76,0)
EXIT K BDATE,BDATE1,DVBCDT,EDATE,CNT,EDATE1,JI,PREVMO,RONAME,RONUM,RONUMB,SBULL,TOT,UPDATE,X,Y,^TMP($J)
"RTN","DVBAB3",77,0)
 Q
"RTN","DVBAB3",78,0)
INIT(Y) ;
"RTN","DVBAB3",79,0)
 ; INITS MAILMAN VARIABLES
"RTN","DVBAB3",80,0)
 D INIT^XMVVITAE
"RTN","DVBAB3",81,0)
 S Y=XMV("NETNAME")_"^"
"RTN","DVBAB3",82,0)
 Q
"RTN","DVBAB51")
0^8^B44742648^B22434564
"RTN","DVBAB51",1,0)
DVBAB51 ;ALB/VM - CAPRI INCOMPETENT PATIENT REPORT ;09/01/00
"RTN","DVBAB51",2,0)
 ;;2.7;AMIE;**35,149**;Apr 10, 1995;Build 16
"RTN","DVBAB51",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBAB51",4,0)
 ;
"RTN","DVBAB51",5,0)
 ;Input: ZMSG      - Output Array for incompetent report (By Ref)
"RTN","DVBAB51",6,0)
 ;       BDATE     - Beginning date for report (FM Format)
"RTN","DVBAB51",7,0)
 ;       EDATE     - Ending date for report (FM Format)
"RTN","DVBAB51",8,0)
 ;       DVBADLMTR - Indicates if report should be delimitted (Optional)
"RTN","DVBAB51",9,0)
 ;                    CAPRI currently executes RPC by each day in 
"RTN","DVBAB51",10,0)
 ;                    date range, so DVBADLMTR should equal the
"RTN","DVBAB51",11,0)
 ;                    final EDATE in range so that XTMP global
"RTN","DVBAB51",12,0)
 ;                    can be killed. 
"RTN","DVBAB51",13,0)
 ;Output: ZMSG contains delimited/non-delimited incompetent report 
"RTN","DVBAB51",14,0)
STRT(ZMSG,BDATE,EDATE,DVBADLMTR) ;ENTER HERE
"RTN","DVBAB51",15,0)
 N DVBAFNLDTE
"RTN","DVBAB51",16,0)
 S DVBABCNT=0,RO="N",RONUM=0
"RTN","DVBAB51",17,0)
 S DVBAFNLDTE=$S(+$G(DVBADLMTR):+$P(DVBADLMTR,"."),1:0)
"RTN","DVBAB51",18,0)
 S DVBADLMTR=$S('+$G(DVBADLMTR):"",1:"^")
"RTN","DVBAB51",19,0)
 K ^TMP($J) G TERM
"RTN","DVBAB51",20,0)
SET Q:'$D(^DPT(DA,.29))  S ICDAT=^(.29) Q:$P(ICDAT,U,12)'=1&(ICDAT']"")  S INCMP="" S:$P(ICDAT,U)]""!($P(ICDAT,U,12)=1) INCMP=1 Q:INCMP'=1  S ICDAT2=$P(ICDAT,U,2),ICDAT=$P(ICDAT,U)
"RTN","DVBAB51",21,0)
 S:ICDAT]"" ICDAT=$$FMTE^XLFDT(ICDAT,"5DZ")
"RTN","DVBAB51",22,0)
 S:ICDAT2]"" ICDAT2=$$FMTE^XLFDT(ICDAT2,"5DZ")
"RTN","DVBAB51",23,0)
 Q:'$D(^DPT(DA,0))  S DFN=DA D RCV^DVBAVDPT Q:CFLOC'=RONUM&(RO="Y")&(CFLOC'=0)&(CFLOC'=376)
"RTN","DVBAB51",24,0)
 S ^TMP($J,XCN,CFLOC,MB,DA)=MA_U_RCVAA_U_RCVPEN_U_CNUM_U_ICDAT_U_ICDAT2_U_INCMP
"RTN","DVBAB51",25,0)
 Q
"RTN","DVBAB51",26,0)
 ;
"RTN","DVBAB51",27,0)
PRINTB S MA=$P(DATA,U),RCVAA=$P(DATA,U,2),RCVPEN=$P(DATA,U,3),CNUM=$P(DATA,U,4),ICDAT=$P(DATA,U,5),ICDAT2=$P(DATA,U,6),INCMP=$P(DATA,U,7),DFN=DA,QUIT1=1 D ADM^DVBAVDPT
"RTN","DVBAB51",28,0)
 S ADMDT=$$FMTE^XLFDT(ADMDT,"5DZ")
"RTN","DVBAB51",29,0)
 S DCHGDT=$$FMTE^XLFDT(DCHGDT,"5DZ")
"RTN","DVBAB51",30,0)
 S LADM=ADM,TDIS="UNKNOWN",TO="",DCHPTR=$P(^DGPM(LADM,0),U,17),TDIS=$S($D(^DGPM(+DCHPTR,0)):$P(^(0),U,18),1:"") I TDIS="" S TDIS="Unknown discharge type"
"RTN","DVBAB51",31,0)
 S:'$D(^DG(405.2,+TDIS,0)) TDIS="Unknown discharge type" I $D(^(0)) S TDIS=$S($P(^DG(405.2,+TDIS,0),U,1)]"":$P(^(0),U,1),1:"Unknown discharge type")
"RTN","DVBAB51",32,0)
 S:(IOST?1"C-".E)!($D(DVBAON2)) ZMSG(DVBABCNT)=" ",DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",33,0)
 ;***vm-out*W !!!,?(80-$L(HEAD)\2),HEAD,!,?(80-$L(HEAD1)\2),HEAD1,!!
"RTN","DVBAB51",34,0)
 ;create delimited/non-delimited report
"RTN","DVBAB51",35,0)
 D:($G(DVBADLMTR)'="") PRINTD
"RTN","DVBAB51",36,0)
 D:($G(DVBADLMTR)="") PRINTND
"RTN","DVBAB51",37,0)
 S DVBAON2=""
"RTN","DVBAB51",38,0)
 Q
"RTN","DVBAB51",39,0)
 ;
"RTN","DVBAB51",40,0)
PRINTND ;create non-delimited incompetent report
"RTN","DVBAB51",41,0)
 S ZMSG(DVBABCNT)="  Patient Name:    "_PNAM,DVBABCNT=DVBABCNT+1,ZMSG(DVBABCNT)=" ",DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",42,0)
 S ZMSG(DVBABCNT)="           Claim No:   "_CNUM,DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",43,0)
 S ZMSG(DVBABCNT)="   Claim Folder Loc:   "_CFLOC,DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",44,0)
 S ZMSG(DVBABCNT)="      Social Sec No:   "_SSN,DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",45,0)
 S ZMSG(DVBABCNT)="     Admission Date:   "_ADMDT,DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",46,0)
 S ZMSG(DVBABCNT)="Admitting Diagnosis:   "_DIAG,DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",47,0)
 S ZMSG(DVBABCNT)="     Discharge Date:   "_DCHGDT,DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",48,0)
 I DCHGDT]"" S ZMSG(DVBABCNT)="  Type of Discharge:   "_TDIS_$S(TO]"":" TO "_$S($D(^DIC(4,+TO,0)):$P(^(0),U,1),1:""),1:""),DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",49,0)
 S ZMSG(DVBABCNT)="        Bed Service:   "_BEDSEC,DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",50,0)
 S ZMSG(DVBABCNT)="          Recv A&A?:   "_$S(RCVAA=0:"NO",RCVAA=1:"YES",1:"Not specified"),DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",51,0)
 S ZMSG(DVBABCNT)="           Pension?:   "_$S(RCVPEN=0:"NO",RCVPEN=1:"YES",1:"Not specified"),DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",52,0)
 ;***vm-out*D ELIG^DVBAVDPT
"RTN","DVBAB51",53,0)
ELIG S ELIG=DVBAELIG,INCMP=""
"RTN","DVBAB51",54,0)
 S ZMSG(DVBABCNT)="   Eligibility data:   "
"RTN","DVBAB51",55,0)
 I ELIG]"" S ELIG=ELIG_" ("_$S(DVBAELST="P":"Pend Ver",DVBAELST="R":"Pend Re-verif",DVBAELST="V":"Verified",1:"Not Verified")_")"
"RTN","DVBAB51",56,0)
 I $D(^DPT(DA,.29)) S INCMP=$S($P(^(.29),U,12)=1:"Incompetent",1:"")
"RTN","DVBAB51",57,0)
 S ZMSG(DVBABCNT)=ZMSG(DVBABCNT)_ELIG_$S(((ELIG]"")&(INCMP]"")):", ",1:"")_INCMP,DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",58,0)
 S ZMSG(DVBABCNT)="  DATE RULED INCOMP:   "_$S($D(ICDAT)]"":ICDAT_" (VA)",1:"")_$S(ICDAT2]"":" - "_ICDAT2_" (CIVIL)",1:" "),DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",59,0)
 ;***vm-out*I IOST?1"C-".E W *7,!,"Press RETURN to continue or ""^"" to stop    " R ANS:DTIME S:ANS=U!('$T) QUIT=1 I '$T S DVBAQUIT=1
"RTN","DVBAB51",60,0)
 Q
"RTN","DVBAB51",61,0)
 ;
"RTN","DVBAB51",62,0)
PRINTD ;create delimited incompetent report
"RTN","DVBAB51",63,0)
 D:('$D(^XTMP("DVBA_INCOMPETENT_RPT"_$J,0))) COLHDR
"RTN","DVBAB51",64,0)
 S ZMSG(DVBABCNT)=PNAM_DVBADLMTR_CNUM_DVBADLMTR_CFLOC_DVBADLMTR_SSN_DVBADLMTR_ADMDT_DVBADLMTR_DIAG_DVBADLMTR_DCHGDT_DVBADLMTR
"RTN","DVBAB51",65,0)
 S ZMSG(DVBABCNT)=ZMSG(DVBABCNT)_$S((DCHGDT]""):TDIS_$S(TO]"":" TO "_$S($D(^DIC(4,+TO,0)):$P(^(0),U,1),1:""),1:""),1:"")_DVBADLMTR
"RTN","DVBAB51",66,0)
 S ZMSG(DVBABCNT)=ZMSG(DVBABCNT)_BEDSEC_DVBADLMTR_""_$S(RCVAA=0:"NO",RCVAA=1:"YES",1:"Not specified")_DVBADLMTR
"RTN","DVBAB51",67,0)
 S ZMSG(DVBABCNT)=ZMSG(DVBABCNT)_$S(RCVPEN=0:"NO",RCVPEN=1:"YES",1:"Not specified")_DVBADLMTR
"RTN","DVBAB51",68,0)
 ;
"RTN","DVBAB51",69,0)
 S ELIG=DVBAELIG,INCMP=""
"RTN","DVBAB51",70,0)
 I ELIG]"" S ELIG=ELIG_" ("_$S(DVBAELST="P":"Pend Ver",DVBAELST="R":"Pend Re-verif",DVBAELST="V":"Verified",1:"Not Verified")_")"
"RTN","DVBAB51",71,0)
 I $D(^DPT(DA,.29)) S INCMP=$S($P(^(.29),U,12)=1:"Incompetent",1:"")
"RTN","DVBAB51",72,0)
 ;
"RTN","DVBAB51",73,0)
 S ZMSG(DVBABCNT)=ZMSG(DVBABCNT)_ELIG_$S(ELIG]"":", ",1:"")_INCMP_DVBADLMTR_$S($D(ICDAT)]"":ICDAT_" (VA)",1:"")_$S(ICDAT2]"":" - "_ICDAT2_" (CIVIL)",1:"")
"RTN","DVBAB51",74,0)
 S DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",75,0)
 Q
"RTN","DVBAB51",76,0)
 ;
"RTN","DVBAB51",77,0)
PRINT U IO S QUIT=""
"RTN","DVBAB51",78,0)
 S XCN="" F M=0:0 S XCN=$O(^TMP($J,XCN)) Q:XCN=""!(QUIT=1)  S CFLOC="" F J=0:0 S CFLOC=$O(^TMP($J,XCN,CFLOC)) Q:CFLOC=""!(QUIT=1)  D PRINT1
"RTN","DVBAB51",79,0)
 Q
"RTN","DVBAB51",80,0)
PRINT1 S ADM="" F K=0:0 S ADM=$O(^TMP($J,XCN,CFLOC,ADM)) Q:ADM=""!(QUIT=1)  S DA="" F L=0:0 S DA=$O(^TMP($J,XCN,CFLOC,ADM,DA)) Q:DA=""!(QUIT=1)  S DATA=^(DA) D PRINTB
"RTN","DVBAB51",81,0)
 Q
"RTN","DVBAB51",82,0)
 ;
"RTN","DVBAB51",83,0)
TERM ;D HOME^%ZIS K NOASK
"RTN","DVBAB51",84,0)
 K NOASK
"RTN","DVBAB51",85,0)
 ;
"RTN","DVBAB51",86,0)
SETUP ;W @IOF,!,"VARO INCOMPETENCY REPORT" D NOPARM^DVBAUTL2 
"RTN","DVBAB51",87,0)
NOPARM  ;check for AMIE parameter setup
"RTN","DVBAB51",88,0)
 I '$D(^DVB(396.1,1,0)) S ZMSG(DVBABCNT)="No site parameters have been set up in file 396.1.",DVBABCNT=DVBABCNT+1,ZMSG(DVBABCNT)="You must do this before running any reports." S DVBAQUIT=1 H 3
"RTN","DVBAB51",89,0)
 G:$D(DVBAQUIT) KILL^DVBAUTIL S DTAR=^DVB(396.1,1,0),FDT(0)=$$FMTE^XLFDT(DT,"5DZ")
"RTN","DVBAB51",90,0)
 S HEAD="INCOMPETENCY REPORT",HEAD1="FOR "_$P(DTAR,U,1)_" ON "_FDT(0)
"RTN","DVBAB51",91,0)
 ;***vm-out*W !,HEAD1
"RTN","DVBAB51",92,0)
EN1 ;***vm-out*W !!,"Please enter dates for search, oldest date first, most recent date last.",!!,"Last report was run on " S Y=$P(DTAR,U,5) X ^DD("DD") W Y,!!
"RTN","DVBAB51",93,0)
 ;***vm-out*D DATE^DVBAUTIL G:X=""!(Y<0) KILL
"RTN","DVBAB51",94,0)
 S %ZIS="Q" D ^%ZIS K %ZIS G:POP KILL^DVBAUTIL
"RTN","DVBAB51",95,0)
 ;
"RTN","DVBAB51",96,0)
QUEUE ;***vm-out*I $D(IO("Q")) S ZTRTN="DEQUE^DVBACMRP",ZTIO=ION,NOASK=1,ZTDESC="AMIE INCOMPETENT VET REPORT" F I="FDT(0)","HEAD","HEAD1","BDATE","EDATE","TYPE","RO","RONUM","NOASK" S ZTSAVE(I)=""
"RTN","DVBAB51",97,0)
 ;***vm-out*I $D(IO("Q")) D ^%ZTLOAD W:$D(ZTSK) !!,"Request queued.",!! G KILL
"RTN","DVBAB51",98,0)
 ;
"RTN","DVBAB51",99,0)
GO S MA=BDATE F J=0:0 S MA=$O(^DGPM("AMV1",MA)) Q:$P(MA,".")>EDATE!(MA="")  F DA=0:0 S DA=$O(^DGPM("AMV1",MA,DA)) Q:DA=""  F MB=0:0 S MB=$O(^DGPM("AMV1",MA,DA,MB)) Q:MB=""  D SET I '$D(NOASK) W "."
"RTN","DVBAB51",100,0)
 I '$D(^TMP($J)) S ZMSG(DVBABCNT)="No data found for parameters entered." H 2 G KILL
"RTN","DVBAB51",101,0)
 I $D(^TMP($J)) D PRINT K:(DVBAFNLDTE=$P(EDATE,".")) ^XTMP("DVBA_INCOMPETENT_RPT"_$J,0) I $D(DVBAQUIT) K DVBAON2 G KILL^DVBAUTIL
"RTN","DVBAB51",102,0)
 ;
"RTN","DVBAB51",103,0)
KILL K:(DVBAFNLDTE=$P(EDATE,".")) ^XTMP("DVBA_INCOMPETENT_RPT"_$J,0)
"RTN","DVBAB51",104,0)
 D ^%ZISC S X=5 K DVBAON2 D:$D(ZTQUEUED) KILL^%ZTLOAD G FINAL^DVBAUTIL
"RTN","DVBAB51",105,0)
 ;
"RTN","DVBAB51",106,0)
DEQUE K ^TMP($J) G GO
"RTN","DVBAB51",107,0)
 ;
"RTN","DVBAB51",108,0)
COLHDR ;Column header for delimited report
"RTN","DVBAB51",109,0)
 S ZMSG(DVBABCNT)="Patient Name"_DVBADLMTR_"Claim No"_DVBADLMTR_"Claim Folder Loc"_DVBADLMTR
"RTN","DVBAB51",110,0)
 S ZMSG(DVBABCNT)=(ZMSG(DVBABCNT))_"Social Sec No"_DVBADLMTR_"Admission Date"_DVBADLMTR
"RTN","DVBAB51",111,0)
 S ZMSG(DVBABCNT)=(ZMSG(DVBABCNT))_"Admitting Diagnosis"_DVBADLMTR_"Discharge Date"_DVBADLMTR
"RTN","DVBAB51",112,0)
 S ZMSG(DVBABCNT)=(ZMSG(DVBABCNT))_"Type of Discharge"_DVBADLMTR_"Bed Service"_DVBADLMTR
"RTN","DVBAB51",113,0)
 S ZMSG(DVBABCNT)=(ZMSG(DVBABCNT))_"Recv A&A?"_DVBADLMTR_"Pension?"_DVBADLMTR
"RTN","DVBAB51",114,0)
 S ZMSG(DVBABCNT)=(ZMSG(DVBABCNT))_"Eligibility Data"_DVBADLMTR_"Date Ruled Incomp"
"RTN","DVBAB51",115,0)
 S DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",116,0)
 S ^XTMP("DVBA_INCOMPETENT_RPT"_$J,0)=DT_U_DT
"RTN","DVBAB51",117,0)
 Q
"RTN","DVBAB53")
0^7^B45878963^B21492687
"RTN","DVBAB53",1,0)
DVBAB53 ;ALB/SPH - CAPRI DISCHARGE REPORT ; 20 Jul 2005  3:39 PM
"RTN","DVBAB53",2,0)
 ;;2.7;AMIE;**35,99,100,149**;Apr 10, 1995;Build 16
"RTN","DVBAB53",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBAB53",4,0)
 ;
"RTN","DVBAB53",5,0)
 ;Input: ZMSG      - Output Array for discharge report (By Ref)
"RTN","DVBAB53",6,0)
 ;       BDATE     - Beginning date for eport (FM Format)
"RTN","DVBAB53",7,0)
 ;       EDATE     - Ending date for report (FM Format)
"RTN","DVBAB53",8,0)
 ;       ADTYPE    - Valid discharge code values include:
"RTN","DVBAB53",9,0)
 ;                       A : Recieving A&A
"RTN","DVBAB53",10,0)
 ;                       P : Pension
"RTN","DVBAB53",11,0)
 ;                       S : Service Connected
"RTN","DVBAB53",12,0)
 ;                       L : All discharge types
"RTN","DVBAB53",13,0)
 ;       DVBADLMTR - Indicates if report should be delimitted (Optional)
"RTN","DVBAB53",14,0)
 ;                    CAPRI currently executes RPC by each day in
"RTN","DVBAB53",15,0)
 ;                    date range, so DVBADLMTR should equal the
"RTN","DVBAB53",16,0)
 ;                    final EDATE in range so that XTMP global
"RTN","DVBAB53",17,0)
 ;                    can be killed.
"RTN","DVBAB53",18,0)
 ;Output: ZMSG contains delimited/non-delimited discharge report 
"RTN","DVBAB53",19,0)
STRT(ZMSG,BDATE,EDATE,ADTYPE,DVBADLMTR)    ;
"RTN","DVBAB53",20,0)
 N DVBAFNLDTE
"RTN","DVBAB53",21,0)
 I BDATE'["." S BDATE=BDATE-.0001   ; DVBA*2.7*99
"RTN","DVBAB53",22,0)
 S DVBABCNT=0
"RTN","DVBAB53",23,0)
 S RONUM=0
"RTN","DVBAB53",24,0)
 S RO="N"
"RTN","DVBAB53",25,0)
 S HEAD="",HEAD1=""
"RTN","DVBAB53",26,0)
 S DVBAFNLDTE=$S(+$G(DVBADLMTR):+$P(DVBADLMTR,"."),1:0)
"RTN","DVBAB53",27,0)
 S DVBADLMTR=$S('+$G(DVBADLMTR):"",1:"^")
"RTN","DVBAB53",28,0)
 K ^TMP($J) G TERM
"RTN","DVBAB53",29,0)
 ;
"RTN","DVBAB53",30,0)
SET Q:'$D(^DPT(DA,0))  S DFN=DA,DVBASC="" D RCV^DVBAVDPT Q:CFLOC'=RONUM&(RO="Y")&(CFLOC'=0)&(CFLOC'=376)  Q:ADTYPE="S"&(DVBASC'="Y")  Q:ADTYPE="A"&(RCVAA'=1)  Q:ADTYPE="P"&(RCVPEN'="1")
"RTN","DVBAB53",31,0)
 S TDIS=$S($D(^DGPM(+MB,0)):$P(^(0),U,18),1:"")
"RTN","DVBAB53",32,0)
 I $D(^DG(405.2,+TDIS,0)) DO
"RTN","DVBAB53",33,0)
 . ; I '$D(^TMP("DVBA",$J,"DUP",+TDIS)) Q   ; DVBA*2.7*99 commented out
"RTN","DVBAB53",34,0)
 .I '$D(DISTYPE(+TDIS)) Q
"RTN","DVBAB53",35,0)
 .S TDIS=$S($P(^DG(405.2,+TDIS,0),U,1)]"":$P(^(0),U,1),1:"Unknown discharge type")
"RTN","DVBAB53",36,0)
 .S ^TMP($J,XCN,CFLOC,MB,DA)=MA_U_RCVAA_U_RCVPEN_U_CNUM_U_TDIS
"RTN","DVBAB53",37,0)
 .Q
"RTN","DVBAB53",38,0)
 Q
"RTN","DVBAB53",39,0)
 ;
"RTN","DVBAB53",40,0)
PRINTB S MA=$P(DATA,U),RCVAA=$P(DATA,U,2),RCVPEN=$P(DATA,U,3),CNUM=$P(DATA,U,4),TDIS=$P(DATA,U,5),DFN=DA,QUIT1=1 D DCHGDT^DVBAVDPT
"RTN","DVBAB53",41,0)
 W:(IOST?1"C-".E)!($D(DVBAON2)) @IOF
"RTN","DVBAB53",42,0)
 W !!!,?(80-$L(HEAD)\2),HEAD,!,?(80-$L(HEAD1)\2),HEAD1,!!
"RTN","DVBAB53",43,0)
 ;create delimited/non-delimited report
"RTN","DVBAB53",44,0)
 D:($G(DVBADLMTR)'="") PRINTD
"RTN","DVBAB53",45,0)
 D:($G(DVBADLMTR)="") PRINTND
"RTN","DVBAB53",46,0)
 Q
"RTN","DVBAB53",47,0)
 ;
"RTN","DVBAB53",48,0)
PRINTND ;create non-delimited discharge report
"RTN","DVBAB53",49,0)
 S ZMSG(DVBABCNT)="",DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",50,0)
 ;
"RTN","DVBAB53",51,0)
 S ZMSG(DVBABCNT)="          Patient Name:    "_PNAM  S DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",52,0)
 S ZMSG(DVBABCNT)="              Claim No:    "_CNUM  S DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",53,0)
 S ZMSG(DVBABCNT)="      Claim Folder Loc:    "_CFLOC  S DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",54,0)
 S ZMSG(DVBABCNT)="         Social Sec No:    "_SSN  S DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",55,0)
 S ZMSG(DVBABCNT)="        Discharge Date:    "_$$FMTE^XLFDT(DCHGDT,"5DZ"),DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",56,0)
 S ZMSG(DVBABCNT)="     Type of Discharge:    "_TDIS,DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",57,0)
 D LOS^DVBAUTIL
"RTN","DVBAB53",58,0)
 S ZMSG(DVBABCNT)="        Length of Stay:    "_LOS_$S(LOS="":"Discharged same day",LOS=1:" day",1:" days"),DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",59,0)
 S ZMSG(DVBABCNT)="           Bed Service:    "_BEDSEC,DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",60,0)
 S ZMSG(DVBABCNT)="             Recv A&A?:    "_$S(RCVAA="0":"NO",RCVAA="1":"YES",1:"Not specified"),DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",61,0)
 S ZMSG(DVBABCNT)="              Pension?:    "_$S(RCVPEN="0":"NO",RCVPEN="1":"YES",1:"Not specified"),DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",62,0)
 ;
"RTN","DVBAB53",63,0)
 ;
"RTN","DVBAB53",64,0)
 ; ELIG INFO...
"RTN","DVBAB53",65,0)
 S ELIG=DVBAELIG,INCMP=""
"RTN","DVBAB53",66,0)
 ;S ZMSG(DVBABCNT)="      Eligibility data:    "
"RTN","DVBAB53",67,0)
 I ELIG]"" S ELIG=ELIG_" ("_$S(DVBAELST="P":"Pend Ver",DVBAELST="R":"Pend Re-verif",DVBAELST="V":"Verified",1:"Not Verified")_")"
"RTN","DVBAB53",68,0)
 I $D(^DPT(DA,.29)) S INCMP=$S($P(^(.29),U,12)=1:"Incompetent",1:"")
"RTN","DVBAB53",69,0)
 S ZMSG(DVBABCNT)="      Eligibility data:    "_ELIG_$S(((ELIG]"")&(INCMP]"")):", ",1:"")  S DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",70,0)
 W:$X>60 !?26 S ZMSG(DVBABCNT)=INCMP  S DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",71,0)
 Q
"RTN","DVBAB53",72,0)
 ;END OF ELIG INFO
"RTN","DVBAB53",73,0)
 ;
"RTN","DVBAB53",74,0)
 ;I IOST?1"C-".E W *7,!,"Press RETURN to continue or ""^"" to stop    " R ANS:DTIME S:ANS=U!('$T) QUIT=1 I ANS=U S DVBAQUIT=1
"RTN","DVBAB53",75,0)
 S DVBAON2=""
"RTN","DVBAB53",76,0)
 Q
"RTN","DVBAB53",77,0)
 ;
"RTN","DVBAB53",78,0)
PRINTD ;create delimited discharge report
"RTN","DVBAB53",79,0)
 N ELIG,INCMP
"RTN","DVBAB53",80,0)
 D:('$D(^XTMP("DVBA_DISCHARGE_RPT"_$J,0))) COLHDR
"RTN","DVBAB53",81,0)
 S ZMSG(DVBABCNT)=PNAM_DVBADLMTR_CNUM_DVBADLMTR_CFLOC_DVBADLMTR_SSN_DVBADLMTR
"RTN","DVBAB53",82,0)
 S ZMSG(DVBABCNT)=ZMSG(DVBABCNT)_$$FMTE^XLFDT(DCHGDT,"5DZ")_DVBADLMTR_TDIS_DVBADLMTR
"RTN","DVBAB53",83,0)
 D LOS^DVBAUTIL
"RTN","DVBAB53",84,0)
 S ZMSG(DVBABCNT)=ZMSG(DVBABCNT)_LOS_$S(LOS="":"Discharged same day",LOS=1:" day",1:" days")_DVBADLMTR
"RTN","DVBAB53",85,0)
 S ZMSG(DVBABCNT)=ZMSG(DVBABCNT)_BEDSEC_DVBADLMTR_$S(RCVAA="0":"NO",RCVAA="1":"YES",1:"Not specified")_DVBADLMTR
"RTN","DVBAB53",86,0)
 S ZMSG(DVBABCNT)=ZMSG(DVBABCNT)_$S(RCVPEN="0":"NO",RCVPEN="1":"YES",1:"Not specified")_DVBADLMTR
"RTN","DVBAB53",87,0)
 ;
"RTN","DVBAB53",88,0)
 S ELIG=DVBAELIG,INCMP=""
"RTN","DVBAB53",89,0)
 I ELIG]"" S ELIG=ELIG_" ("_$S(DVBAELST="P":"Pend Ver",DVBAELST="R":"Pend Re-verif",DVBAELST="V":"Verified",1:"Not Verified")_")"
"RTN","DVBAB53",90,0)
 I $D(^DPT(DA,.29)) S INCMP=$S($P(^(.29),U,12)=1:"Incompetent",1:"")
"RTN","DVBAB53",91,0)
 ;
"RTN","DVBAB53",92,0)
 S ZMSG(DVBABCNT)=ZMSG(DVBABCNT)_ELIG_$S(((ELIG]"")&(INCMP]"")):", ",1:"")_INCMP
"RTN","DVBAB53",93,0)
 S DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",94,0)
 Q
"RTN","DVBAB53",95,0)
 ;
"RTN","DVBAB53",96,0)
PRINT U IO S QUIT=""
"RTN","DVBAB53",97,0)
 S XCN="" F M=0:0 S XCN=$O(^TMP($J,XCN)) Q:XCN=""!(QUIT=1)  S CFLOC="" F J=0:0 S CFLOC=$O(^TMP($J,XCN,CFLOC)) Q:CFLOC=""!(QUIT=1)  D PRINT1
"RTN","DVBAB53",98,0)
 Q
"RTN","DVBAB53",99,0)
PRINT1 S ADM="" F K=0:0 S ADM=$O(^TMP($J,XCN,CFLOC,ADM)) Q:ADM=""!(QUIT=1)  S DA="" F L=0:0 S DA=$O(^TMP($J,XCN,CFLOC,ADM,DA)) Q:DA=""!(QUIT=1)  S DATA=^(DA) D PRINTB
"RTN","DVBAB53",100,0)
 Q
"RTN","DVBAB53",101,0)
 ;
"RTN","DVBAB53",102,0)
TERM ;D HOME^%ZIS K NOASK
"RTN","DVBAB53",103,0)
 ;
"RTN","DVBAB53",104,0)
SETUP ;W @IOF,!,"VARO DISCHARGE REPORT" D NOPARM^DVBAUTL2 G:$D(DVBAQUIT) KILL^DVBAUTIL S DTAR=^DVB(396.1,1,0),FDT(0)=$$FMTE^XLFDT(DT,"5DZ")
"RTN","DVBAB53",105,0)
 S DSRP=1
"RTN","DVBAB53",106,0)
 ;S HEAD1="FOR "_$P(DTAR,U,1)_" ON "_FDT(0) W !,HEAD1
"RTN","DVBAB53",107,0)
 ;
"RTN","DVBAB53",108,0)
EN1 ;W !!,"Please enter dates for search, oldest date first, most recent date last.",!!,"Last report was run on " S Y=$P(DTAR,U,4) X ^DD("DD") W Y,!!
"RTN","DVBAB53",109,0)
 ;D DATE^DVBAUTIL
"RTN","DVBAB53",110,0)
 ;G:X=""!(Y<0) KILL
"RTN","DVBAB53",111,0)
 ;
"RTN","DVBAB53",112,0)
ADTYPE ;D ADTYPE^DVBAUTL2 G:$D(DVBAQUIT) KILL^DVBAUTIL
"RTN","DVBAB53",113,0)
 ;W @IOF
"RTN","DVBAB53",114,0)
 ;K DVBACEPT
"RTN","DVBAB53",115,0)
 D EN^DVBAB99("DVBA DISCHARGE TYPES")
"RTN","DVBAB53",116,0)
 D ACCEPT^DVBALD
"RTN","DVBAB53",117,0)
 I '$D(DVBACEPT) D KILL^DVBAUTIL Q
"RTN","DVBAB53",118,0)
 I '$O(^TMP("DVBA",$J,"DUP",0)) D KILL^DVBAUTIL Q
"RTN","DVBAB53",119,0)
 M DISTYPE=^TMP("DVBA",$J,"DUP")
"RTN","DVBAB53",120,0)
 ;
"RTN","DVBAB53",121,0)
 ; DVBA*2.7*100 - commented out next line
"RTN","DVBAB53",122,0)
 ; W !!! S %ZIS="Q" D ^%ZIS K %ZIS G:POP KILL^DVBAUTIL
"RTN","DVBAB53",123,0)
 ;
"RTN","DVBAB53",124,0)
QUEUE I $D(IO("Q")) S ZTRTN="DEQUE^DVBADSRT",ZTIO=ION,NOASK=1,ZTDESC="AMIE DISCHARGE REPORT" F I="DISTYPE(","ADTYPE","DVBATYPS","BDATE","BDATE1","EDATE","FDT(0)","HEAD","HEAD1","HD","RO","RONUM","NOASK" S ZTSAVE(I)=""
"RTN","DVBAB53",125,0)
 I $D(IO("Q")) D ^%ZTLOAD W:$D(ZTSK) !!,"Request queued.",! G KILL
"RTN","DVBAB53",126,0)
 ;
"RTN","DVBAB53",127,0)
GO S MA=BDATE F J=0:0 S MA=$O(^DGPM("AMV3",MA)) Q:MA>EDATE!(MA="")  W:'$D(NOASK) "." F DA=0:0 S DA=$O(^DGPM("AMV3",MA,DA)) Q:DA=""  F MB=0:0 S MB=$O(^DGPM("AMV3",MA,DA,MB)) Q:MB=""  D SET
"RTN","DVBAB53",128,0)
 I '$D(^TMP($J)) D  H 2 G KILL
"RTN","DVBAB53",129,0)
 .N DVBAERTXT S DVBAERTXT="No data found for parameters entered."
"RTN","DVBAB53",130,0)
 .U IO W !!,*7,DVBAERTXT,!!
"RTN","DVBAB53",131,0)
 .S:($G(DVBADLMTR)'="") ZMSG(DVBABCNT)=DVBAERTXT
"RTN","DVBAB53",132,0)
 D PRINT K:(DVBAFNLDTE=$P(EDATE,".")) ^XTMP("DVBA_DISCHARGE_RPT"_$J,0)
"RTN","DVBAB53",133,0)
 I $D(DVBAQUIT) K DVBAON2,DISTYPE G KILL^DVBAUTIL
"RTN","DVBAB53",134,0)
 ;
"RTN","DVBAB53",135,0)
KILL K:(DVBAFNLDTE=$P(EDATE,".")) ^XTMP("DVBA_DISCHARGE_RPT"_$J,0)
"RTN","DVBAB53",136,0)
 D ^%ZISC D:$D(ZTQUEUED) KILL^%ZTLOAD S X=4 K DVBAON2,DISTYPE G FINAL^DVBAUTIL
"RTN","DVBAB53",137,0)
 ;
"RTN","DVBAB53",138,0)
DEQUE K ^TMP($J) G GO
"RTN","DVBAB53",139,0)
 ;
"RTN","DVBAB53",140,0)
COLHDR ;Column header for delimited report
"RTN","DVBAB53",141,0)
 S ZMSG(DVBABCNT)="Patient Name"_DVBADLMTR_"Claim No"_DVBADLMTR_"Claim Folder Loc"_DVBADLMTR
"RTN","DVBAB53",142,0)
 S ZMSG(DVBABCNT)=(ZMSG(DVBABCNT))_"Social Sec No"_DVBADLMTR_"Discharge Date"_DVBADLMTR
"RTN","DVBAB53",143,0)
 S ZMSG(DVBABCNT)=(ZMSG(DVBABCNT))_"Type of Discharge"_DVBADLMTR_"Length of Stay"_DVBADLMTR
"RTN","DVBAB53",144,0)
 S ZMSG(DVBABCNT)=(ZMSG(DVBABCNT))_"Bed Service"_DVBADLMTR_"Recv A&A?"_DVBADLMTR
"RTN","DVBAB53",145,0)
 S ZMSG(DVBABCNT)=(ZMSG(DVBABCNT))_"Pension?"_DVBADLMTR_"Eligibility Data"
"RTN","DVBAB53",146,0)
 S DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",147,0)
 ;set global entry so header is only created once for job ($J)
"RTN","DVBAB53",148,0)
 S ^XTMP("DVBA_DISCHARGE_RPT"_$J,0)=DT_U_DT_U_BDATE_U_EDATE
"RTN","DVBAB53",149,0)
 Q
"RTN","DVBAB54")
0^6^B30133216^B13667343
"RTN","DVBAB54",1,0)
DVBAB54 ;ALB/VM - CAPRI ADMISSION REPORT ;09/06/00
"RTN","DVBAB54",2,0)
 ;;2.7;AMIE;**35,149**;Apr 10, 1995;Build 16
"RTN","DVBAB54",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBAB54",4,0)
 ;
"RTN","DVBAB54",5,0)
 ;Input: ZMSG      - Output Array for SC Veteran Admssn report (By Ref)
"RTN","DVBAB54",6,0)
 ;       BDATE     - Beginning date for eport (FM Format)
"RTN","DVBAB54",7,0)
 ;       EDATE     - Ending date for report (FM Format)
"RTN","DVBAB54",8,0)
 ;       DVBADLMTR - Indicates if report should be delimitted (Optional)
"RTN","DVBAB54",9,0)
 ;                    CAPRI currently executes RPC by each day in 
"RTN","DVBAB54",10,0)
 ;                    date range, so DVBADLMTR should equal the
"RTN","DVBAB54",11,0)
 ;                    final EDATE in range so that XTMP global
"RTN","DVBAB54",12,0)
 ;                    can be killed.
"RTN","DVBAB54",13,0)
 ;Output: ZMSG contains delimited/non-delimited SC Veteran Admssn report 
"RTN","DVBAB54",14,0)
STRT(ZMSG,BDATE,EDATE,DVBADLMTR)  ;ENTER HERE
"RTN","DVBAB54",15,0)
 N DVBAFNLDTE
"RTN","DVBAB54",16,0)
 S DVBABCNT=0,RO="N",RONUM=0
"RTN","DVBAB54",17,0)
 S DVBAFNLDTE=$S(+$G(DVBADLMTR):+$P(DVBADLMTR,"."),1:0)
"RTN","DVBAB54",18,0)
 S DVBADLMTR=$S('+$G(DVBADLMTR):"",1:"^")
"RTN","DVBAB54",19,0)
 K ^TMP($J) G TERM
"RTN","DVBAB54",20,0)
SET Q:'$D(^DPT(DA,0))  S DFN=DA,DVBASC="" D SC^DVBAVDPT Q:DVBASC'="Y"  Q:CFLOC'=RONUM&(RO="Y")&(CFLOC'=0)&(CFLOC'=376)  S ^TMP($J,XCN,CFLOC,MB,DA)=MA
"RTN","DVBAB54",21,0)
 Q
"RTN","DVBAB54",22,0)
 ;
"RTN","DVBAB54",23,0)
PRINTB S ADMDT=$P(DATA,U),DFN=DA D ADM^DVBAVDPT
"RTN","DVBAB54",24,0)
 ;W:(IOST?1"C-".E)!($D(DVBAON2)) @IOF
"RTN","DVBAB54",25,0)
 ;W !!!,?(80-$L(HEAD)\2),HEAD,!,?(80-$L(HEAD1)\2),HEAD1,!!
"RTN","DVBAB54",26,0)
 S:ADMDT]"" ADMDT=$E(ADMDT,4,5)_"/"_$E(ADMDT,6,7)_"/"_$E(ADMDT,2,3) S:DCHGDT]"" DCHGDT=$E(DCHGDT,4,5)_"/"_$E(DCHGDT,6,7)_"/"_$E(DCHGDT,2,3)
"RTN","DVBAB54",27,0)
 ;create delimited/non-delimited report
"RTN","DVBAB54",28,0)
 D:($G(DVBADLMTR)'="") PRINTD
"RTN","DVBAB54",29,0)
 D:($G(DVBADLMTR)="") PRINTND
"RTN","DVBAB54",30,0)
 S DVBAON2=""
"RTN","DVBAB54",31,0)
 Q
"RTN","DVBAB54",32,0)
 ;
"RTN","DVBAB54",33,0)
PRINTND ;create non-delimited admission report
"RTN","DVBAB54",34,0)
 S ZMSG(DVBABCNT)="",DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",35,0)
 S ZMSG(DVBABCNT)="",DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",36,0)
 S ZMSG(DVBABCNT)="          Patient Name:   "_PNAM,DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",37,0)
 S ZMSG(DVBABCNT)="              Claim No:   "_CNUM,DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",38,0)
 S ZMSG(DVBABCNT)="      Claim Folder Loc:   "_CFLOC,DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",39,0)
 S ZMSG(DVBABCNT)="         Social Sec No:   "_SSN,DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",40,0)
 S ZMSG(DVBABCNT)="        Admission Date:   "_ADMDT,DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",41,0)
 S ZMSG(DVBABCNT)="   Admitting Diagnosis:   "_DIAG,DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",42,0)
 S ZMSG(DVBABCNT)="        Discharge Date:   "_DCHGDT,DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",43,0)
 S ZMSG(DVBABCNT)="           Bed Service:   "_BEDSEC,DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",44,0)
 S ZMSG(DVBABCNT)="             Recv A&A?:   "_$S(RCVAA=0:"NO",RCVAA=1:"YES",1:"Not specified"),DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",45,0)
 S ZMSG(DVBABCNT)="              Pension?:   "_$S(RCVPEN=0:"NO",RCVPEN=1:"YES",1:"Not specified"),DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",46,0)
 ;D ELIG^DVBAVDPT
"RTN","DVBAB54",47,0)
ELIG S ELIG=DVBAELIG,INCMP=""
"RTN","DVBAB54",48,0)
 I ELIG]"" S ELIG=ELIG_" ("_$S(DVBAELST="P":"Pend Ver",DVBAELST="R":"Pend Re-verif",DVBAELST="V":"Verified",1:"Not Verified")_")"
"RTN","DVBAB54",49,0)
 I $D(^DPT(DA,.29)) S INCMP=$S($P(^(.29),U,12)=1:"Incompetent",1:"")
"RTN","DVBAB54",50,0)
 S ZMSG(DVBABCNT)="      Eligibility data:   "_ELIG_$S(((ELIG]"")&(INCMP]"")):", ",1:""),DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",51,0)
 I $X>60 S ZMSG(DVBABCNT)=INCMP,DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",52,0)
 ;Q
"RTN","DVBAB54",53,0)
 ;***VM-OUT*I IOST?1"C-".E W *7,!,"Press RETURN to continue or ""^"" to stop    " R ANS:DTIME S:ANS=U!('$T) QUIT=1 I '$T S DVBAQUIT=1
"RTN","DVBAB54",54,0)
 Q
"RTN","DVBAB54",55,0)
 ;
"RTN","DVBAB54",56,0)
PRINTD ;create delimited admission report
"RTN","DVBAB54",57,0)
 N ELIG,INCMP
"RTN","DVBAB54",58,0)
 D:('$D(^XTMP("DVBA_SCADMSSN_RPT"_$J,0))) COLHDR
"RTN","DVBAB54",59,0)
 S ZMSG(DVBABCNT)=PNAM_DVBADLMTR_CNUM_DVBADLMTR_CFLOC_DVBADLMTR_SSN_DVBADLMTR_ADMDT_DVBADLMTR
"RTN","DVBAB54",60,0)
 S ZMSG(DVBABCNT)=ZMSG(DVBABCNT)_DIAG_DVBADLMTR_DCHGDT_DVBADLMTR_BEDSEC_DVBADLMTR
"RTN","DVBAB54",61,0)
 S ZMSG(DVBABCNT)=ZMSG(DVBABCNT)_$S(RCVAA=0:"NO",RCVAA=1:"YES",1:"Not specified")_DVBADLMTR
"RTN","DVBAB54",62,0)
 S ZMSG(DVBABCNT)=ZMSG(DVBABCNT)_$S(RCVPEN=0:"NO",RCVPEN=1:"YES",1:"Not specified")_DVBADLMTR
"RTN","DVBAB54",63,0)
 S ELIG=DVBAELIG,INCMP=""
"RTN","DVBAB54",64,0)
 I ELIG]"" S ELIG=ELIG_" ("_$S(DVBAELST="P":"Pend Ver",DVBAELST="R":"Pend Re-verif",DVBAELST="V":"Verified",1:"Not Verified")_")"
"RTN","DVBAB54",65,0)
 I $D(^DPT(DA,.29)) S INCMP=$S($P(^(.29),U,12)=1:"Incompetent",1:"")
"RTN","DVBAB54",66,0)
 S ZMSG(DVBABCNT)=ZMSG(DVBABCNT)_ELIG_$S(((ELIG]"")&(INCMP]"")):", ",1:"")_INCMP
"RTN","DVBAB54",67,0)
 S DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",68,0)
 Q
"RTN","DVBAB54",69,0)
 ;
"RTN","DVBAB54",70,0)
PRINT K MA S QUIT=""
"RTN","DVBAB54",71,0)
 S XCN="" F M=0:0 S XCN=$O(^TMP($J,XCN)) Q:XCN=""!(QUIT=1)  S CFLOC="" F J=0:0 S CFLOC=$O(^TMP($J,XCN,CFLOC)) Q:CFLOC=""!(QUIT=1)  D PRINT1
"RTN","DVBAB54",72,0)
 Q
"RTN","DVBAB54",73,0)
PRINT1 S ADM="" F K=0:0 S ADM=$O(^TMP($J,XCN,CFLOC,ADM)) Q:ADM=""!(QUIT=1)  S DA="" F L=0:0 S DA=$O(^TMP($J,XCN,CFLOC,ADM,DA)) Q:DA=""!(QUIT=1)  S DATA=^(DA) D PRINTB
"RTN","DVBAB54",74,0)
 Q
"RTN","DVBAB54",75,0)
 ;
"RTN","DVBAB54",76,0)
TERM ;D HOME^%ZIS K NOASK
"RTN","DVBAB54",77,0)
 ;
"RTN","DVBAB54",78,0)
 ;W @IOF,!,"VARO SERVICE-CONNECTED ADMISSION REPORT" D NOPARM^DVBAUTL2 G:$D(DVBAQUIT) KILL^DVBAUTIL
"RTN","DVBAB54",79,0)
 S DTAR=^DVB(396.1,1,0),FDT(0)=$E(DT,4,5)_"-"_$E(DT,6,7)_"-"_$E(DT,2,3)
"RTN","DVBAB54",80,0)
 S HEAD="SERVICE-CONNECTED ADMISSION REPORT",HEAD1="FOR "_$P(DTAR,U,1)_" ON "_FDT(0)
"RTN","DVBAB54",81,0)
 ;W !,HEAD1
"RTN","DVBAB54",82,0)
 ;W !!,"Please enter dates for search, oldest date first, most recent date last.",!!,"Last report was run on " S Y=$P(DTAR,U,8) X ^DD("DD") W Y,!!
"RTN","DVBAB54",83,0)
 ;D DATE^DVBAUTIL
"RTN","DVBAB54",84,0)
 ;G:X=""!(Y<0) KILL
"RTN","DVBAB54",85,0)
 ;S %ZIS="Q" D ^%ZIS K %ZIS G:POP KILL^DVBAUTIL
"RTN","DVBAB54",86,0)
 ;
"RTN","DVBAB54",87,0)
 ;I $D(IO("Q")) S ZTRTN="DEQUE^DVBASCRP",ZTIO=ION,NOASK=1,ZTDESC="AMIE SC ADMISSION REPORT" F I="FDT(0)","HEAD","HEAD1","BDATE","EDATE","TYPE","RO","RONUM","NOASK" S ZTSAVE(I)=""
"RTN","DVBAB54",88,0)
 ;I $D(IO("Q")) D ^%ZTLOAD W:$D(ZTSK) !!,"Request queued.",!! G KILL
"RTN","DVBAB54",89,0)
 ;
"RTN","DVBAB54",90,0)
GO S MA=BDATE F J=0:0 S MA=$O(^DGPM("AMV1",MA)) Q:$P(MA,".")>EDATE!(MA="")  F DA=0:0 S DA=$O(^DGPM("AMV1",MA,DA)) Q:DA=""  F MB=0:0 S MB=$O(^DGPM("AMV1",MA,DA,MB)) Q:MB=""  D SET W:'$D(NOASK) "."
"RTN","DVBAB54",91,0)
 I '$D(^TMP($J)) S ZMSG(DVBABCNT)="No data found for parameters entered." H 2 G KILL
"RTN","DVBAB54",92,0)
 D PRINT K:(DVBAFNLDTE=$P(EDATE,".")) ^XTMP("DVBA_SCADMSSN_RPT"_$J,0)
"RTN","DVBAB54",93,0)
 I $D(DVBAQUIT) K DVBAON2 D:$D(ZTQUEUED) KILL^%ZTLOAD G KILL^DVBAUTIL
"RTN","DVBAB54",94,0)
 ;
"RTN","DVBAB54",95,0)
KILL K:(DVBAFNLDTE=$P(EDATE,".")) ^XTMP("DVBA_SCADMSSN_RPT"_$J,0)
"RTN","DVBAB54",96,0)
 D:$D(ZTQUEUED) KILL^%ZTLOAD D ^%ZISC S X=8 K DVBAON2 G FINAL^DVBAUTIL
"RTN","DVBAB54",97,0)
 ;
"RTN","DVBAB54",98,0)
DEQUE K ^TMP($J) G GO
"RTN","DVBAB54",99,0)
 ;
"RTN","DVBAB54",100,0)
COLHDR ;Column header for delimited report
"RTN","DVBAB54",101,0)
 S ZMSG(DVBABCNT)="Patient Name"_DVBADLMTR_"Claim No"_DVBADLMTR_"Claim Folder Loc"_DVBADLMTR
"RTN","DVBAB54",102,0)
 S ZMSG(DVBABCNT)=(ZMSG(DVBABCNT))_"Social Sec No"_DVBADLMTR_"Admission Date"_DVBADLMTR
"RTN","DVBAB54",103,0)
 S ZMSG(DVBABCNT)=(ZMSG(DVBABCNT))_"Admitting Diagnosis"_DVBADLMTR_"Discharge Date"_DVBADLMTR
"RTN","DVBAB54",104,0)
 S ZMSG(DVBABCNT)=(ZMSG(DVBABCNT))_"Bed Service"_DVBADLMTR_"Recv A&A?"_DVBADLMTR
"RTN","DVBAB54",105,0)
 S ZMSG(DVBABCNT)=(ZMSG(DVBABCNT))_"Pension?"_DVBADLMTR_"Eligibility Data"
"RTN","DVBAB54",106,0)
 S DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",107,0)
 ;set global entry so header is only created once for job ($J)
"RTN","DVBAB54",108,0)
 S ^XTMP("DVBA_SCADMSSN_RPT"_$J,0)=DT_U_DT
"RTN","DVBAB54",109,0)
 Q
"RTN","DVBAB56")
0^4^B24628055^B20872408
"RTN","DVBAB56",1,0)
DVBAB56 ;ALB/SPH - CAPRI READMISSION REPORT ;09/05/00
"RTN","DVBAB56",2,0)
 ;;2.7;AMIE;**35,149**;Apr 10, 1995;Build 16
"RTN","DVBAB56",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBAB56",4,0)
 ;
"RTN","DVBAB56",5,0)
 ;Input: ZMSG      - Output Array for Re-Admission report (By Ref)
"RTN","DVBAB56",6,0)
 ;       BDATE     - Beginning date for eport (FM Format)
"RTN","DVBAB56",7,0)
 ;       EDATE     - Ending date for report (FM Format)
"RTN","DVBAB56",8,0)
 ;       DVBAH     - Specifies Hospital (H) or DOM (D)
"RTN","DVBAB56",9,0)
 ;       DVBADLMTR - Indicates if report should be delimitted (Optional)
"RTN","DVBAB56",10,0)
 ;                    CAPRI currently executes RPC by each day in
"RTN","DVBAB56",11,0)
 ;                    date range, so DVBADLMTR should equal the
"RTN","DVBAB56",12,0)
 ;                    final EDATE in range so that XTMP global
"RTN","DVBAB56",13,0)
 ;                    can be killed.
"RTN","DVBAB56",14,0)
 ;Output: ZMSG contains delimited/non-delimited re-admission report 
"RTN","DVBAB56",15,0)
STRT(ZMSG,BDATE,EDATE,DVBAH,DVBADLMTR)    ;
"RTN","DVBAB56",16,0)
 N DVBAFNLDTE
"RTN","DVBAB56",17,0)
 S DVBAFNLDTE=$S(+$G(DVBADLMTR):+$P(DVBADLMTR,"."),1:0)
"RTN","DVBAB56",18,0)
 S DVBADLMTR=$S('+$G(DVBADLMTR):"",1:"^")
"RTN","DVBAB56",19,0)
 S DVBABCNT=0
"RTN","DVBAB56",20,0)
 G TERM
"RTN","DVBAB56",21,0)
SORT D RCV^DVBAVDPT I $D(RONUM),$D(RO) Q:CFLOC'=RONUM&(RO="Y")
"RTN","DVBAB56",22,0)
 I RCVAA S ^TMP("DVBA",$J,"A&A",DFN)=""
"RTN","DVBAB56",23,0)
 I RCVPEN S ^TMP("DVBA",$J,"PEN",DFN)=""
"RTN","DVBAB56",24,0)
 Q
"RTN","DVBAB56",25,0)
 ;
"RTN","DVBAB56",26,0)
DCHGDT S (LADMDT,LDCHGDT)="",DCHPTR=$P(^DGPM(VY,0),U,17),LADMDT=$P(^(0),U,1) I DCHPTR]"",$D(^DGPM(+DCHPTR,0)) S LDCHGDT=$P(^DGPM(+DCHPTR,0),U,1)
"RTN","DVBAB56",27,0)
 Q
"RTN","DVBAB56",28,0)
 ;
"RTN","DVBAB56",29,0)
CAL S I="",ZI=1 F DVBAI=0:0 S I=$O(^DGPM("APID",DFN,I)) Q:I=""  F J=0:0 S J=$O(^DGPM("APID",DFN,I,J)) Q:J=""  S ZJ=$S($D(^DGPM(J,0)):^(0),1:"") I $P(ZJ,U,1)'>EDATE,$P(ZJ,U,2)=1 S ^TMP("DVBA",$J,"ADM",DFN,ZI,J)="",ZI=ZI+1
"RTN","DVBAB56",30,0)
 S VX=$O(^TMP("DVBA",$J,"ADM",DFN,1,0)) Q:VX=""  S CURADMDT=$P(^DGPM(VX,0),U,1) Q:CURADMDT=""
"RTN","DVBAB56",31,0)
 F VX=1:1 S VX=$O(^TMP("DVBA",$J,"ADM",DFN,VX)) Q:VX=""  F VY=0:0 S VY=$O(^TMP("DVBA",$J,"ADM",DFN,VX,VY)) Q:VY=""  D DCHGDT I CURADMDT["."&(LADMDT[".") D SET
"RTN","DVBAB56",32,0)
 Q
"RTN","DVBAB56",33,0)
TDIS S TDIS=$S($D(^DGPM(+DCHPTR,0)):$P(^(0),U,18),1:"") Q:TDIS=""
"RTN","DVBAB56",34,0)
 S:'$D(^DG(405.2,+TDIS,0)) TDIS="Unknown discharge type" I $D(^(0)) S TDIS=$S($P(^DG(405.2,+TDIS,0),U,1)]"":$P(^(0),U,1),1:"Unknown discharge type")
"RTN","DVBAB56",35,0)
 Q
"RTN","DVBAB56",36,0)
 ;
"RTN","DVBAB56",37,0)
SET S X1=CURADMDT,X2=LDCHGDT D ^%DTC Q:X>185
"RTN","DVBAB56",38,0)
 S X2=LADMDT,X1=LDCHGDT D ^%DTC S LOS=X Q:LOS'>HOSPDAYS
"RTN","DVBAB56",39,0)
 I DVBAT="A&A" DO  ;**Check last admission for A&A vet
"RTN","DVBAB56",40,0)
 .S ADMDT=LADMDT
"RTN","DVBAB56",41,0)
 .D ADM^DVBAVDPT,TDIS
"RTN","DVBAB56",42,0)
 .I TDIS["IRREGULAR" DO  ;**Irregular discharge, set last admis info
"RTN","DVBAB56",43,0)
 ..S ^TMP("DVBA",DVBAT,$J,XCN,CFLOC,VY,DFN,"LADM")=LADMDT_U_TDIS
"RTN","DVBAB56",44,0)
 I $D(TDIS),(TDIS'["IRREGULAR"&(DVBAT="A&A")) Q  ;**Quit
"RTN","DVBAB56",45,0)
 S ADMDT=CURADMDT
"RTN","DVBAB56",46,0)
 D ADM^DVBAVDPT,TDIS
"RTN","DVBAB56",47,0)
 ;**Set current admis info
"RTN","DVBAB56",48,0)
 S ^TMP("DVBA",DVBAT,$J,XCN,CFLOC,VY,DFN)=CURADMDT_U_RCVAA_U_RCVPEN_U_CNUM_U_TDIS
"RTN","DVBAB56",49,0)
 I DVBAT="PEN" DO  ;**Set last admis info for Pension vet 
"RTN","DVBAB56",50,0)
 .S ADMDT=LADMDT
"RTN","DVBAB56",51,0)
 .D ADM^DVBAVDPT,TDIS
"RTN","DVBAB56",52,0)
 .S ^TMP("DVBA",DVBAT,$J,XCN,CFLOC,VY,DFN,"LADM")=LADMDT_U_TDIS
"RTN","DVBAB56",53,0)
 K DVBARADQ
"RTN","DVBAB56",54,0)
 S (VX,VY)=9999999
"RTN","DVBAB56",55,0)
 Q
"RTN","DVBAB56",56,0)
 ;
"RTN","DVBAB56",57,0)
TERM ;D HOME^%ZIS 
"RTN","DVBAB56",58,0)
 K ^TMP("DVBA",$J),^TMP("DVBA","PEN",$J),^TMP("DVBA","A&A",$J),NOASK
"RTN","DVBAB56",59,0)
 ;D NOPARM^DVBAUTL2 G:$D(DVBAQUIT) KILL^DVBAUTIL
"RTN","DVBAB56",60,0)
 ;
"RTN","DVBAB56",61,0)
SETUP ;W @IOF,!,"VARO RE-ADMISSION REPORT" 
"RTN","DVBAB56",62,0)
 S DTAR=^DVB(396.1,1,0),FDT(0)=$$FMTE^XLFDT(DT,"5DZ")
"RTN","DVBAB56",63,0)
 S HEAD="RE-ADMISSION REPORT",HEAD1="FOR "_$P(DTAR,U,1)_" ON "_FDT(0)
"RTN","DVBAB56",64,0)
 ;W !,HEAD1
"RTN","DVBAB56",65,0)
EN1 ;W !!,"Please enter admission dates for search, oldest date first,",!,"most recent date last.",!!,"Last report was run on " S Y=$P(DTAR,U,7) X ^DD("DD") W Y,!!
"RTN","DVBAB56",66,0)
 ;D DATE^DVBAUTIL G:Y<0 KILL^DVBAUTIL
"RTN","DVBAB56",67,0)
 S BDATE1=BDATE+.5,HEADDT="Date range: "_$$FMTE^XLFDT(BDATE1,"5DZ")_" to "_$$FMTE^XLFDT(EDATE,"5DZ")
"RTN","DVBAB56",68,0)
 ;
"RTN","DVBAB56",69,0)
ASK ;W !!,"Do you want (H)ospital or Hospital-(D)om   H// " R DVBAH:DTIME G:'$T!(DVBAH=U) KILL^DVBAUTIL
"RTN","DVBAB56",70,0)
 I DVBAH="" S DVBAH="H" W DVBAH
"RTN","DVBAB56",71,0)
 S:DVBAH="d" DVBAH="D"
"RTN","DVBAB56",72,0)
 S:DVBAH="h" DVBAH="H"
"RTN","DVBAB56",73,0)
 I DVBAH'?1"H"&(DVBAH'?1"D") W *7,!!,"Must be H for HOSPITAL or D for HOSPITAL-DOM",!! H 3 G ASK
"RTN","DVBAB56",74,0)
 S HEAD=HEAD_" ("_$S(DVBAH="H":"Hospital",DVBAH="D":"Hospital-Dom",1:"Unknown selection")_")"
"RTN","DVBAB56",75,0)
 S Z=$S(DVBAH="D":1,DVBAH="H":2,1:0) W $P("om^ospital",U,Z),!!
"RTN","DVBAB56",76,0)
 ;S %ZIS("B")="0;P-OTHER",%ZIS("A")="Printing device: ",%ZIS="AEQ" D ^%ZIS G:POP KILL^DVBAUTIL
"RTN","DVBAB56",77,0)
 I $D(IO("Q")) F I="NOASK","HEAD*","FDT(0)","DTAR","BDATE*","EDATE*","DVBAH" S ZTSAVE(I)=""
"RTN","DVBAB56",78,0)
 I  S NOASK=1,ZTRTN="DQ^DVBARADM",ZTDESC="AMIE Re-admission Report",ZTIO=ION D ^%ZTLOAD W:$D(ZTSK) !,"Request queued.",!! G KILL^DVBAUTIL
"RTN","DVBAB56",79,0)
GO I '$D(NOASK) W !!,"Looking for Pension and A&A cases ...",!!
"RTN","DVBAB56",80,0)
 F DVBADT=BDATE:0 S DVBADT=$O(^DGPM("AMV1",DVBADT)) Q:DVBADT=""!(DVBADT>EDATE)  W:'$D(NOASK) "." F DFN=0:0 S DFN=$O(^DGPM("AMV1",DVBADT,DFN)) Q:DFN=""  F ADM=0:0 S ADM=$O(^DGPM("AMV1",DVBADT,DFN,ADM)) Q:ADM=""  D SORT
"RTN","DVBAB56",81,0)
 I '$D(NOASK) W !!,"Examining cases found for re-admissions within 185 days ...",!!
"RTN","DVBAB56",82,0)
 F DVBAT="PEN","A&A" S HOSPDAYS=$S(DVBAT="PEN"&(DVBAH="H"):89,DVBAT="PEN"&(DVBAH="D"):59,1:29) F DFN=0:0 S DFN=$O(^TMP("DVBA",$J,DVBAT,DFN)) Q:DFN=""  D CAL W:'$D(NOASK) "+"
"RTN","DVBAB56",83,0)
 K ^TMP("DVBA",$J,"PEN"),^TMP("DVBA",$J,"A&A")
"RTN","DVBAB56",84,0)
 I '$D(^TMP("DVBA","PEN",$J))&('$D(^TMP("DVBA","A&A",$J))) D  H 2 D:$D(ZTQUEUED) KILL^%ZTLOAD G KILL^DVBAUTIL
"RTN","DVBAB56",85,0)
 .N DVBAERTXT S DVBAERTXT="No data found for parameters entered."
"RTN","DVBAB56",86,0)
 .W DVBAERTXT S:($G(DVBADLMTR)'="") ZMSG(DVBABCNT)=DVBAERTXT
"RTN","DVBAB56",87,0)
 G ^DVBAB98
"RTN","DVBAB56",88,0)
 ;
"RTN","DVBAB56",89,0)
DQ K ^TMP("DVBA",$J),^TMP("DVBA","PEN",$J),^TMP("DVBA","A&A",$J)
"RTN","DVBAB56",90,0)
 G GO
"RTN","DVBAB68")
0^31^B11010411^B14913222
"RTN","DVBAB68",1,0)
DVBAB68 ;ALB/SPH - CAPRI C&P EXAM DETAIL REPORT ;09/11/00
"RTN","DVBAB68",2,0)
 ;;2.7;AMIE;**35,149**;Apr 10, 1995;Build 16
"RTN","DVBAB68",3,0)
 ;
"RTN","DVBAB68",4,0)
EN ;only need DFN to return data
"RTN","DVBAB68",5,0)
 I '$D(^DVB(396.4,"APE",DFN)) S ZMSG(DVBABCNT)="No Requests are currently on file.",DVBABCNT=DVBABCNT+1 Q
"RTN","DVBAB68",6,0)
 S ZMSG(DVBABCNT)="Requested exams currently on file:",DVBABCNT=DVBABCNT+1
"RTN","DVBAB68",7,0)
 D SORT
"RTN","DVBAB68",8,0)
 S ZMSG(DVBABCNT)="--------------------------------------------------------------------------------",DVBABCNT=DVBABCNT+1
"RTN","DVBAB68",9,0)
 K DVBAEXM,DVBAEXST,DVBADA,DVBADONE,DVBAPDT,DVBAST,DVBARO,JX,DVBCX
"RTN","DVBAB68",10,0)
 Q
"RTN","DVBAB68",11,0)
 ;
"RTN","DVBAB68",12,0)
STAT S DVBAST=$P(^DVB(396.4,DVBADA,0),U,4)
"RTN","DVBAB68",13,0)
 S:$D(^DVB(396.4,DVBADA,"TRAN")) DVBCX=$P(^("TRAN"),U,3)
"RTN","DVBAB68",14,0)
 S DVBAST=$S(DVBAST="C":"Completed",DVBAST="RX":"Cancelled by RO",DVBAST="X":"Cancelled by MAS",DVBAST="F":"Cancelled, failed to report",DVBAST="O":"Open",DVBAST="T":"Transferred",1:"Unknown status")
"RTN","DVBAB68",15,0)
 Q
"RTN","DVBAB68",16,0)
 ;
"RTN","DVBAB68",17,0)
SORT ;  ** Explore 396.4 file; display exams already requested **
"RTN","DVBAB68",18,0)
 N DVBAEXM,DVBADA,DVBADONE,DVBAPDT,DVBAST,DVBARO,DVBARQDT
"RTN","DVBAB68",19,0)
 S (DVBAEXM,DVBADA,DVBADONE,DVBAPDT,DVBAST,DVBARO,DVBARQDT)=""
"RTN","DVBAB68",20,0)
 F  S DVBAEXM=$O(^DVB(396.4,"APE",DFN,DVBAEXM)) Q:DVBAEXM=""!(DVBADONE=1)  F  S DVBARQDT=$O(^DVB(396.4,"APE",DFN,DVBAEXM,DVBARQDT)) Q:DVBARQDT=""  D FLOOP Q:DVBADONE=1
"RTN","DVBAB68",21,0)
 Q
"RTN","DVBAB68",22,0)
 ;
"RTN","DVBAB68",23,0)
FLOOP ;  **  Final loop of "APE" index **
"RTN","DVBAB68",24,0)
 F  S DVBADA=$O(^DVB(396.4,"APE",DFN,DVBAEXM,DVBARQDT,DVBADA)) Q:DVBADA=""  D BLD Q:DVBADONE=1  D PRINT
"RTN","DVBAB68",25,0)
 Q
"RTN","DVBAB68",26,0)
 ;
"RTN","DVBAB68",27,0)
BLD ;  ** Set variables to be printed to screen **
"RTN","DVBAB68",28,0)
 N DA,DIK,DATA,DVBAREQ,DVBASTAT,DVBATYPE
"RTN","DVBAB68",29,0)
 ;don't continue if record doesn't exist in file #396.4
"RTN","DVBAB68",30,0)
 I '$D(^DVB(396.4,DVBADA,0)) D  Q
"RTN","DVBAB68",31,0)
 .;kill xref if record doesn't exist
"RTN","DVBAB68",32,0)
 .K ^DVB(396.4,"APE",DFN,DVBAEXM,DVBARQDT,DVBADA)
"RTN","DVBAB68",33,0)
 ;don't continue if record doesn't exist in file #396.3
"RTN","DVBAB68",34,0)
 S DVBAREQ=$P(^DVB(396.4,DVBADA,0),U,2) D  Q:'DVBAREQ
"RTN","DVBAB68",35,0)
 .I '$D(^DVB(396.3,DVBAREQ)) D
"RTN","DVBAB68",36,0)
 ..;delete record in file #396.4 if its 'parent' in file #396.3 doesn't exist
"RTN","DVBAB68",37,0)
 ..;remove reference to file #396.3 so call to ^dik won't error out
"RTN","DVBAB68",38,0)
 ..S DATA=^DVB(396.4,DVBADA,0),$P(^(0),U,2)=""
"RTN","DVBAB68",39,0)
 ..;delete "c" xref and mumps xrefs manually because reference to file #396.3 was removed
"RTN","DVBAB68",40,0)
 ..S DVBATYPE=$P(DATA,U,3),DVBASTAT=$P(DATA,U,4)
"RTN","DVBAB68",41,0)
 ..K ^DVB(396.4,"C",DVBAREQ,DVBADA)
"RTN","DVBAB68",42,0)
 ..K ^DVB(396.4,"APE",DFN,DVBAEXM,DVBARQDT,DVBADA)
"RTN","DVBAB68",43,0)
 ..K ^DVB(396.4,"APS",DFN,DVBATYPE,DVBASTAT,DVBADA)
"RTN","DVBAB68",44,0)
 ..K ^DVB(396.4,"ARQ"_DVBAREQ,DVBATYPE,DVBADA)
"RTN","DVBAB68",45,0)
 ..;proceed with fm delete
"RTN","DVBAB68",46,0)
 ..S DIK="^DVB(396.4,",DA=DVBADA D ^DIK
"RTN","DVBAB68",47,0)
 ..S DVBAREQ=0
"RTN","DVBAB68",48,0)
 S Y=DVBARQDT X ^DD("DD") S DVBAPDT=Y
"RTN","DVBAB68",49,0)
 S DVBARO=$P(^DVB(396.3,DVBAREQ,0),U,3)
"RTN","DVBAB68",50,0)
 S DVBARO=$S($D(^DIC(4,+DVBARO,0)):$P(^(0),U,1),1:"Unknown RO")
"RTN","DVBAB68",51,0)
 D STAT
"RTN","DVBAB68",52,0)
 Q
"RTN","DVBAB68",53,0)
 ;
"RTN","DVBAB68",54,0)
PRINT ;  **  Print an entry from list of requested exams **
"RTN","DVBAB68",55,0)
 S ZMSG(DVBABCNT)=DVBAEXM,DVBABCNT=DVBABCNT+1
"RTN","DVBAB68",56,0)
 S ZMSG(DVBABCNT)="Requested on "_DVBAPDT_" by "_DVBARO_" - "_DVBAST,DVBABCNT=DVBABCNT+1
"RTN","DVBAB68",57,0)
 S ZMSG(DVBABCNT)="",DVBABCNT=DVBABCNT+1
"RTN","DVBAB68",58,0)
 Q
"RTN","DVBAB70")
0^27^B38834112^B43310973
"RTN","DVBAB70",1,0)
DVBAB70 ;ALB/SPH - CAPRI C&P EXAM INQUIRY ;09/28/2009
"RTN","DVBAB70",2,0)
 ;;2.7;AMIE;**35,42,57,136,143,149**;Apr 10, 1995;Build 16
"RTN","DVBAB70",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBAB70",4,0)
 ;
"RTN","DVBAB70",5,0)
STRT(ZMSG,DFN,ZREQDA) ;
"RTN","DVBAB70",6,0)
 N DVBABCNT,REQDA,DA,X,Y,PNAM,NAME,DOB,SSN,CNUM,ADR1,ADR2,ADR3,CITY,STATE
"RTN","DVBAB70",7,0)
 N HOMPHON,BUSPHON,OTHDIS,OTHDIS1,OTHDIS2,COUNTY,PROVINCE,POSTALCD,COUNTRY
"RTN","DVBAB70",8,0)
 N ZIP,CANDT,PRBY,RELBY,DX,DXCOD,DXNUM,JII,PCT,SC,EDTA,EOD,RAD,LINE
"RTN","DVBAB70",9,0)
 N REQN,REQDT,RONAME,STAT,XSTAT
"RTN","DVBAB70",10,0)
 S DVBABCNT=0
"RTN","DVBAB70",11,0)
 K ^TMP($J)
"RTN","DVBAB70",12,0)
 S (DA,DA(1),REQDA)=+ZREQDA
"RTN","DVBAB70",13,0)
 S (NAME,SSN,CNUM,ADR1,ADR2,ADR3,CITY,STATE,ZIP,HOMPHON,BUSPHON,OTHDIS)=""
"RTN","DVBAB70",14,0)
 S (COUNTY,PROVINCE,POSTALCD,COUNTRY)=""
"RTN","DVBAB70",15,0)
 D VARS^DVBCUTIL
"RTN","DVBAB70",16,0)
START ;
"RTN","DVBAB70",17,0)
 S ZMSG(DVBABCNT)="                     COMPENSATION AND PENSION EXAM INQUIRY",DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",18,0)
 S ZMSG(DVBABCNT)="                     -------------------------------------",DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",19,0)
 S ZMSG(DVBABCNT)="",DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",20,0)
 S ZMSG(DVBABCNT)="",DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",21,0)
 S ZMSG(DVBABCNT)="                     Name: "_PNAM,DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",22,0)
 S ZMSG(DVBABCNT)="                      SSN: "_SSN,DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",23,0)
 S ZMSG(DVBABCNT)="                 C-Number: "_CNUM,DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",24,0)
 S Y=DOB X ^DD("DD")
"RTN","DVBAB70",25,0)
 S ZMSG(DVBABCNT)="                      DOB: "_Y,DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",26,0)
 S ZMSG(DVBABCNT)="                  Address: "_ADR1,DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",27,0)
 I ADR2'="" S ZMSG(DVBABCNT)="                           "_ADR2,DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",28,0)
 I ADR3'="" S ZMSG(DVBABCNT)="                           "_ADR3,DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",29,0)
 I $$ISFORGN^DVBCUTIL(COUNTRY)>0 D
"RTN","DVBAB70",30,0)
 . S ZMSG(DVBABCNT)="City,Province,Postal Code: "_CITY_", "_PROVINCE_" "_POSTALCD
"RTN","DVBAB70",31,0)
 . S DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",32,0)
 E  D
"RTN","DVBAB70",33,0)
 . S ZMSG(DVBABCNT)="         City,State,Zip+4: "_CITY_", "_STATE_" "_ZIP
"RTN","DVBAB70",34,0)
 . S DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",35,0)
 I COUNTRY>0 D
"RTN","DVBAB70",36,0)
 . S ZMSG(DVBABCNT)="                  Country: "_$$GETCNTRY^DVBCUTIL(COUNTRY)
"RTN","DVBAB70",37,0)
 . S DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",38,0)
 S ZMSG(DVBABCNT)="                Res Phone: "_HOMPHON,DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",39,0)
 S ZMSG(DVBABCNT)="                Bus Phone: "_BUSPHON,DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",40,0)
 S Y=EOD X ^DD("DD") S:Y="" Y="Not specified"
"RTN","DVBAB70",41,0)
 S ZMSG(DVBABCNT)="   Entered active service: "_Y,DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",42,0)
 S Y=RAD X ^DD("DD") S:Y="" Y="Not specified"
"RTN","DVBAB70",43,0)
 S ZMSG(DVBABCNT)="  Released active service: "_Y,DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",44,0)
 S ZMSG(DVBABCNT)="================================================================================",DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",45,0)
 D ^DVBAB97,^DVBAB68
"RTN","DVBAB70",46,0)
 S REQDT=$P(^DVB(396.3,REQDA,0),U,2)
"RTN","DVBAB70",47,0)
 S Y=REQDT X ^DD("DD")
"RTN","DVBAB70",48,0)
 S ZMSG(DVBABCNT)="This request was initiated on "_$P(Y,"@",1)_" at "_$P(Y,"@",2),DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",49,0)
 S ZMSG(DVBABCNT)="Requester: "_REQN,DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",50,0)
 S ZMSG(DVBABCNT)="Requesting Regional Office: "_RONAME,DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",51,0)
 S ZMSG(DVBABCNT)="VHA Division Processing Request: "_$P($$SITE^VASITE(,$P(^DVB(396.3,REQDA,1),U,4)),U,2),DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",52,0)
 S ZMSG(DVBABCNT)="",DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",53,0)
 I $D(^DVB(396.4,"C",REQDA)) S ZMSG(DVBABCNT)="Exams on this request: ",DVBABCNT=DVBABCNT+1 D TST^DVBAB96
"RTN","DVBAB70",54,0)
 I '$D(^DVB(396.4,"C",REQDA)) S ZMSG(DVBABCNT)="(No exams have yet been entered)",DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",55,0)
 S ZMSG(DVBABCNT)="",DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",56,0)
 S ZMSG(DVBABCNT)="** Status of request: ",DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",57,0)
 S (XSTAT,STAT)=$P(^DVB(396.3,REQDA,0),U,18)
"RTN","DVBAB70",58,0)
 S STAT=$S(XSTAT="N":"New",XSTAT="P":"Pending, reported to MAS",XSTAT="T":"Transcribed",XSTAT="S":"Scheduled",XSTAT="R":"Released, not printed",XSTAT="C":"Completed",XSTAT="CT":"Completed, transferred out",XSTAT="NT":"New, transferred in",1:"")
"RTN","DVBAB70",59,0)
 I STAT]"" S ZMSG(DVBABCNT)=STAT,DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",60,0)
 I XSTAT="R"!(XSTAT="C") S Y=$P(^DVB(396.3,REQDA,0),U,14) X ^DD("DD") S RELBY=$P(^DVB(396.3,REQDA,0),U,15),RELBY=$S($D(^VA(200,+RELBY,0)):$P(^(0),U,1),1:"Unknown user") S ZMSG(DVBABCNT)="Released on "_Y_" by "_RELBY,DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",61,0)
 I XSTAT="C" S Y=$P(^DVB(396.3,REQDA,0),U,16) X ^DD("DD") S PRBY=$P(^DVB(396.3,REQDA,0),U,17),PRBY=$S($D(^VA(200,+PRBY,0)):$P(^(0),U,1),1:"Unknown user") S ZMSG(DVBABCNT)="Printed by the RO on "_Y_" by "_PRBY,DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",62,0)
 I STAT="" S STAT=$S(XSTAT="X":"Cancelled by MAS",XSTAT="RX":"Cancelled by RO",1:"Unknown") S ZMSG(DVBABCNT)=STAT,DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",63,0)
 I STAT["Cancelled" S CANDT=$P(^DVB(396.3,REQDA,0),U,19) S ZMSG(DVBABCNT)="  (Cancelled on "_$$FMTE^XLFDT(CANDT,"5DZ")_")",DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",64,0)
 I $D(^DVB(396.3,REQDA,1)),$P(^(1),U,3)="Y" S ZMSG(DVBABCNT)="This request was faxed to the regional office.",DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",65,0)
 S FEXAM=$P(^DVB(396.3,REQDA,0),U,9) I FEXAM="Y" S ZMSG(DVBABCNT)="*** Exams done on a FEE BASIS ***  ",DVBABCNT=DVBABCNT+1 K FEXAM
"RTN","DVBAB70",66,0)
 S ZMSG(DVBABCNT)="--------------------------------------------------------------------------------",DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",67,0)
 D DDIS
"RTN","DVBAB70",68,0)
 S ZMSG(DVBABCNT)="Other Disabilities: "_OTHDIS,DVBABCNT=DVBABCNT+1 I $D(^DVB(396.3,REQDA,1)) S ZMSG(DVBABCNT)="                    "_OTHDIS1,DVBABCNT=DVBABCNT+1 S ZMSG(DVBABCNT)="                    "_OTHDIS2,DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",69,0)
 S ZMSG(DVBABCNT)="General Remarks:",DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",70,0)
 F LINE=0:0 S LINE=$O(^DVB(396.3,REQDA,2,LINE)) Q:LINE=""  S ZMSG(DVBABCNT)=^(LINE,0),DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",71,0)
END K ^TMP($J),TSTA1,TSTAT,XCNP
"RTN","DVBAB70",72,0)
 Q
"RTN","DVBAB70",73,0)
DDIS1 S ZMSG(DVBABCNT)=DX_"  "_$J(PCT,3,0)_" %",DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",74,0)
 S ZMSG(DVBABCNT)="    Service-Connected? "_$S(SC=1:"Yes",1:"No")_"  DX Code: "_DXCOD,DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",75,0)
 Q
"RTN","DVBAB70",76,0)
DDIS ;
"RTN","DVBAB70",77,0)
 I '$D(^DPT(DFN,.372)) S ZMSG(DVBABCNT)="No rated disabilities on file",DVBABCNT=DVBABCNT+1 Q
"RTN","DVBAB70",78,0)
 S ZMSG(DVBABCNT)="",DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",79,0)
 S ZMSG(DVBABCNT)="RATED DISABILITIES:",DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",80,0)
 F JII=0:0 S JII=$O(^DPT(DFN,.372,JII)) Q:JII=""  S DXNUM=$P(^DPT(DFN,.372,JII,0),U,1),PCT=$P(^(0),U,2),SC=$P(^(0),U,3),DX=$S($D(^DIC(31,DXNUM)):$P(^(DXNUM,0),U,1),1:"Unknown"),DXCOD=$S($D(^DIC(31,DXNUM)):$P(^(DXNUM,0),U,3),1:"Unknown") D DDIS1
"RTN","DVBAB70",81,0)
 S ZMSG(DVBABCNT)="",DVBABCNT=DVBABCNT+1
"RTN","DVBAB70",82,0)
 Q
"RTN","DVBAB82")
0^1^B101314855^B78772719
"RTN","DVBAB82",1,0)
DVBAB82 ;ALB - CAPRI DVBA REPORTS;07/19/10
"RTN","DVBAB82",2,0)
 ;;2.7;AMIE;**42,90,100,119,156,149**;Apr 10, 1995;Build 16
"RTN","DVBAB82",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBAB82",4,0)
 Q
"RTN","DVBAB82",5,0)
 ;
"RTN","DVBAB82",6,0)
START(MSG,RPID,PARM) ; CALLED BY REMOTE PROCEDURE DVBAB REPORTS
"RTN","DVBAB82",7,0)
 ;Parameters
"RTN","DVBAB82",8,0)
 ;=============
"RTN","DVBAB82",9,0)
 ; MSG  : Output - ^TMP("DVBA",$J)
"RTN","DVBAB82",10,0)
 ; RPID : Report Identification Number
"RTN","DVBAB82",11,0)
 ; PARM : Input parameters separated by "^"
"RTN","DVBAB82",12,0)
 ;
"RTN","DVBAB82",13,0)
 N DVBHFS,DVBERR,DVBGUI,I,DVBADLMTD
"RTN","DVBAB82",14,0)
 K ^TMP("DVBA",$J)
"RTN","DVBAB82",15,0)
 S DVBGUI=1,(DVBERR,DVBADLMTD)=0,DVBHFS=$$HFS(),RPID=$G(RPID)
"RTN","DVBAB82",16,0)
 I RPID<1!(RPID>13) S DVBERR=1,^TMP("DVBA",$J,1)="0^Undefined Report ID" G END
"RTN","DVBAB82",17,0)
 D HFSOPEN("DVBRP",DVBHFS,"W") I DVBERR G END
"RTN","DVBAB82",18,0)
 I RPID=1 D CRMS G END
"RTN","DVBAB82",19,0)
 I RPID=3 D CPRNT G END
"RTN","DVBAB82",20,0)
 I RPID=11 D CNHRP G END  ;FNCNH Print Roster
"RTN","DVBAB82",21,0)
 D CHECK I DVBERR G END  ;reports below require parameters
"RTN","DVBAB82",22,0)
 I RPID=2 D CRRR G END
"RTN","DVBAB82",23,0)
 I RPID=4 D CRPON G END
"RTN","DVBAB82",24,0)
 I RPID=5 D CIRPT G END
"RTN","DVBAB82",25,0)
 I RPID=6 D DSRP G END
"RTN","DVBAB82",26,0)
 I RPID=7 D SDPP G END
"RTN","DVBAB82",27,0)
 I RPID=8 D SPRPT G END
"RTN","DVBAB82",28,0)
 I RPID=9 D VIEW G END
"RTN","DVBAB82",29,0)
 I RPID=10 D CNHDEOC G END  ;FBCNH Display Episode Of Care
"RTN","DVBAB82",30,0)
 I RPID=12 D CNHRAD G END  ;FNCNH Report of Admissions/Discharges
"RTN","DVBAB82",31,0)
 I RPID=13 D CNHSE90D G END  ;FNCNH Stays in Excess of 90 Days
"RTN","DVBAB82",32,0)
 ;
"RTN","DVBAB82",33,0)
END D HFSCLOSE("DVBRP",DVBHFS)
"RTN","DVBAB82",34,0)
 I ($G(DVBADLMTD)&('+DVBERR)) D  Q  ;Create delimited output if no errors
"RTN","DVBAB82",35,0)
 .D DLMTRPT^DVBAB82D(RPID)
"RTN","DVBAB82",36,0)
 .S MSG=$NA(^TMP("DVBADLMTD",$J))
"RTN","DVBAB82",37,0)
 ;Replace "##FFFF##" with Form Feeds - code needed for LINUX environments
"RTN","DVBAB82",38,0)
 S I=0 F  S I=$O(^TMP("DVBA",$J,1,I)) Q:'I  D
"RTN","DVBAB82",39,0)
 .S:^TMP("DVBA",$J,1,I)["##FFFF##" ^TMP("DVBA",$J,1,I)=$P(^TMP("DVBA",$J,1,I),"##FFFF##")_$C(13,12)_$P(^TMP("DVBA",$J,1,I),"##FFFF##",2)
"RTN","DVBAB82",40,0)
 .S ^TMP("DVBA",$J,1,I)=^TMP("DVBA",$J,1,I)_$C(13)
"RTN","DVBAB82",41,0)
 .S:^TMP("DVBA",$J,1,I)["$END" ^TMP("DVBA",$J,1,I)=""
"RTN","DVBAB82",42,0)
 S MSG=$NA(^TMP("DVBA",$J))
"RTN","DVBAB82",43,0)
 Q
"RTN","DVBAB82",44,0)
CHECK ; VALIDATE INPUT PARAMETERS
"RTN","DVBAB82",45,0)
 I $G(PARM)="" S DVBERR=1,^TMP("DVBA",$J,1)="0^Undefined Input Parameters"
"RTN","DVBAB82",46,0)
 Q
"RTN","DVBAB82",47,0)
 ;
"RTN","DVBAB82",48,0)
SDPP ; Report # 7 - Full (Patient Profile MAS) Report
"RTN","DVBAB82",49,0)
 ;Parameters
"RTN","DVBAB82",50,0)
 ;=============
"RTN","DVBAB82",51,0)
 ; DFN : Patient Identification Number
"RTN","DVBAB82",52,0)
 ; SDR : R/Range or A/All
"RTN","DVBAB82",53,0)
 ; SDBD : Begining date
"RTN","DVBAB82",54,0)
 ; SDED : Ending date
"RTN","DVBAB82",55,0)
 ; SDP : Print the profile? 1 OR 0
"RTN","DVBAB82",56,0)
 ; SDTYP(2) : Print appointments? 1 OR 0
"RTN","DVBAB82",57,0)
 ; SDTYP(1) : Print add/edits? 1 or 0
"RTN","DVBAB82",58,0)
 ; SDTYP(4) : Print enrollments? 1 or 0
"RTN","DVBAB82",59,0)
 ; SDTYP(3) : Print dispositions? 1 OR 0
"RTN","DVBAB82",60,0)
 ; SDTYP(7) : Print team information? 1 OR 0
"RTN","DVBAB82",61,0)
 ; SDTYP(5) : Print means test? 1 OR 0
"RTN","DVBAB82",62,0)
 ;
"RTN","DVBAB82",63,0)
 N SDTYP,SDBD,SDED,SDACT,SDPRINT,SDYES,SDRANGE,SDBEG,SDEN
"RTN","DVBAB82",64,0)
 S ^XTMP("JAP",$J,$$NOW^XLFDT(),"SDPP")=PARM
"RTN","DVBAB82",65,0)
 S DFN=$P(PARM,"^",1),SDR=$P(PARM,"^",2),SDBD=$P(PARM,"^",3),SDED=$P(PARM,"^",4)
"RTN","DVBAB82",66,0)
 S SDP=$P(PARM,"^",5),SDTYP(2)=$P(PARM,"^",6),SDTYP(1)=$P(PARM,"^",7)
"RTN","DVBAB82",67,0)
 S SDTYP(4)=$P(PARM,"^",8),SDTYP(3)=$P(PARM,"^",9),SDTYP(7)=$P(PARM,"^",10),SDTYP(5)=$P(PARM,"^",11)
"RTN","DVBAB82",68,0)
 D VAL Q:DVBERR
"RTN","DVBAB82",69,0)
 S SDACT="",(SDYES,SDRANGE,SDPRINT)=0
"RTN","DVBAB82",70,0)
 I SDR="R" S SDRANGE=1
"RTN","DVBAB82",71,0)
 I SDP=1 S SDYES=1,SDPRINT=1
"RTN","DVBAB82",72,0)
 I 'SDRANGE S (SDBD,SDBEG)=2800101,(SDED,SDEND)=$$ENDDT(),SDHDR=1
"RTN","DVBAB82",73,0)
 D ENS^%ZISS
"RTN","DVBAB82",74,0)
 S SDPRINT=1
"RTN","DVBAB82",75,0)
 S:(SDTYP(2)=1) SDTYP(2)=""  ;appointments
"RTN","DVBAB82",76,0)
 K:(SDTYP(2)=0) SDTYP(2)
"RTN","DVBAB82",77,0)
 S:(SDTYP(1)=1) SDTYP(1)=""  ;add/edits
"RTN","DVBAB82",78,0)
 K:(SDTYP(1)=0) SDTYP(1)
"RTN","DVBAB82",79,0)
 I (SDTYP(4)=1) S SDTYP(4)="",SDACT=0  ;enrollments
"RTN","DVBAB82",80,0)
 K:(SDTYP(4)=0) SDTYP(4)
"RTN","DVBAB82",81,0)
 S:(SDTYP(3)=1) SDTYP(3)=""  ;dispositions
"RTN","DVBAB82",82,0)
 K:(SDTYP(3)=0) SDTYP(3)
"RTN","DVBAB82",83,0)
 S:(SDTYP(5)=1) SDTYP(5)=""  ;means test
"RTN","DVBAB82",84,0)
 K:(SDTYP(5)=0) SDTYP(5)
"RTN","DVBAB82",85,0)
 I SDTYP(7)=1 D  ;team information
"RTN","DVBAB82",86,0)
 . S SDTYP(7)="",GBL="^TMP(""SDPP"","_$J_")"
"RTN","DVBAB82",87,0)
 K:(SDTYP(7)=0) SDTYP(7)
"RTN","DVBAB82",88,0)
 D PRINT^SDPPRT
"RTN","DVBAB82",89,0)
 S VALMBCK="R"
"RTN","DVBAB82",90,0)
 Q
"RTN","DVBAB82",91,0)
ENDDT() ;Calculate end date for "all" date
"RTN","DVBAB82",92,0)
 N DVBAPPTS,DVBX
"RTN","DVBAB82",93,0)
 S DVBAPPTS(1)=2800101,DVBAPPTS(4)=DFN,DVBAPPTS("SORT")="P"
"RTN","DVBAB82",94,0)
 S DVBAPPTS("FLDS")=1,DVBAPPTS("MAX")=-1
"RTN","DVBAB82",95,0)
 S DVBX=$S(($$SDAPI^SDAMA301(.DVBAPPTS)>0):$O(^TMP($J,"SDAMA301",DFN,0)),1:DT_.24)
"RTN","DVBAB82",96,0)
 K ^TMP($J,"SDAMA301")
"RTN","DVBAB82",97,0)
 Q DVBX
"RTN","DVBAB82",98,0)
 ;
"RTN","DVBAB82",99,0)
VIEW ; Report # 9 - View Registration Data Report
"RTN","DVBAB82",100,0)
 ; Parameters
"RTN","DVBAB82",101,0)
 ; ==========
"RTN","DVBAB82",102,0)
 ; DFN : Patient Identification Number
"RTN","DVBAB82",103,0)
 ;
"RTN","DVBAB82",104,0)
 U IO
"RTN","DVBAB82",105,0)
 S DFN=$P(PARM,"^",1)
"RTN","DVBAB82",106,0)
 D VAL Q:DVBERR
"RTN","DVBAB82",107,0)
 D EN1^DGRP
"RTN","DVBAB82",108,0)
 Q
"RTN","DVBAB82",109,0)
 ;
"RTN","DVBAB82",110,0)
DSRP ; Report # 6 - Reprint a Notice of Discharge Report
"RTN","DVBAB82",111,0)
 ; Parameters
"RTN","DVBAB82",112,0)
 ; % : 1=Report on all veterans for a given day (BDATE required)
"RTN","DVBAB82",113,0)
 ;   : 0=Report on a single Veteran (DFN required)
"RTN","DVBAB82",114,0)
 ; BDATE : Original Processing Date - $H/FileMan
"RTN","DVBAB82",115,0)
 ; DFN  : Patient Identification Number
"RTN","DVBAB82",116,0)
 ;
"RTN","DVBAB82",117,0)
 N %,BDATE,DFN,DFNIEN
"RTN","DVBAB82",118,0)
 S %=$P(PARM,"^",1),BDATE=$P(PARM,"^",2),DFN=$P(PARM,"^",3),DFNIEN=""
"RTN","DVBAB82",119,0)
 I BDATE="" S DVBERR=1,^TMP("DVBA",$J,1)="0^Incorrect Date"  Q
"RTN","DVBAB82",120,0)
 D DUZ2^DVBAUTIL
"RTN","DVBAB82",121,0)
 U IO
"RTN","DVBAB82",122,0)
 D VAL Q:DVBERR
"RTN","DVBAB82",123,0)
 I %=1 D  Q
"RTN","DVBAB82",124,0)
 . S HD="SINGLE NOTICE OF DISCHARGE REPRINTING"
"RTN","DVBAB82",125,0)
 . D NOPARM^DVBAUTL2 G:$D(DVBAQUIT) KILL^DVBAUTIL S DTAR=^DVB(396.1,1,0),FDT(0)=$$FMTE^XLFDT(DT,"5DZ")
"RTN","DVBAB82",126,0)
 . S HEAD="NOTICE OF DISCHARGE",HEAD1="FOR "_$P(DTAR,U,1)_" ON "_FDT(0)
"RTN","DVBAB82",127,0)
 . I $D(^DVB(396.2,"B",DFN)) D
"RTN","DVBAB82",128,0)
 . . S DFNIEN=$O(^DVB(396.2,"B",DFN,DFNIEN)),ADM=$P(^DVB(396.2,DFNIEN,0),U,3)
"RTN","DVBAB82",129,0)
 . . I $D(^DGPM(+ADM,0)),$P(^(0),U,17)]"" S DCHPTR=$P(^DGPM(+ADM,0),U,17),DISCH=$S($P(^DGPM(DCHPTR,0),U,1)]"":$P(^(0),U,1),1:"") W ?($X+5),"Discharge date: ",$$FMTE^XLFDT(DISCH,"5DZ")
"RTN","DVBAB82",130,0)
 . . I $P(^DVB(396.2,DFNIEN,0),U,7)'=DVBAD2 W *7,!!,"This does not belong to your RO.",!! H 3 Q
"RTN","DVBAB82",131,0)
 . . I DFNIEN>0 S XDA=DFNIEN,DA=$P(^DVB(396.2,DFNIEN,0),U,1),ADMDT=$P(^DVB(396.2,DFNIEN,0),U,2),MB=$P(^(0),U,3)
"RTN","DVBAB82",132,0)
 . . D REPRINT^DVBADSNT
"RTN","DVBAB82",133,0)
 D DEQUE^DVBADSRP
"RTN","DVBAB82",134,0)
 Q
"RTN","DVBAB82",135,0)
 ;
"RTN","DVBAB82",136,0)
SPRPT ; Report # 8 - OP(Operation Report)
"RTN","DVBAB82",137,0)
 ;Parameters
"RTN","DVBAB82",138,0)
 ;=============
"RTN","DVBAB82",139,0)
 ; DFN : Patient Identification Number
"RTN","DVBAB82",140,0)
 ; SRTN : Select Operation
"RTN","DVBAB82",141,0)
 ;
"RTN","DVBAB82",142,0)
 N DFN,SRTN,MAGTMPR2,SRSITE
"RTN","DVBAB82",143,0)
 I $O(^SRO(133,1))'="B" S SRSITE=1
"RTN","DVBAB82",144,0)
 S DFN=$P(PARM,"^",1),SRTN=$P(PARM,"^",2),MAGTMPR2=1
"RTN","DVBAB82",145,0)
 D VAL Q:DVBERR
"RTN","DVBAB82",146,0)
 D ^SROPRPT
"RTN","DVBAB82",147,0)
 Q
"RTN","DVBAB82",148,0)
 ;
"RTN","DVBAB82",149,0)
CRPON ; Report # - 4 Reprint C&P Final Report
"RTN","DVBAB82",150,0)
 ;Parameters
"RTN","DVBAB82",151,0)
 ;=============
"RTN","DVBAB82",152,0)
 ; RTYPE : Select Reprint Option (D)ate or (V)eteran
"RTN","DVBAB82",153,0)
 ; RUNDATE : ORIGINAL PROCESSING date
"RTN","DVBAB82",154,0)
 ; ANS : Reprinted by the RO or MAS
"RTN","DVBAB82",155,0)
 ; % : LAB 1 OR 0
"RTN","DVBAB82",156,0)
 ; DA(1) : Patient IEN for lab results
"RTN","DVBAB82",157,0)
 ; DFN  : Patient Identification Number
"RTN","DVBAB82",158,0)
 ;
"RTN","DVBAB82",159,0)
 U IO
"RTN","DVBAB82",160,0)
 N ONE
"RTN","DVBAB82",161,0)
 S RTYPE=$P(PARM,"^",1),RUNDATE=$P(PARM,"^",2),ANS=$P(PARM,"^",3),%=$P(PARM,"^",4),DA(1)=$P(PARM,"^",5),DFN=$P(PARM,"^",6),DA=DA(1)
"RTN","DVBAB82",162,0)
 I RTYPE="V" D VAL Q:DVBERR
"RTN","DVBAB82",163,0)
 S XDD=^DD("DD"),$P(ULINE,"_",70)="_",ONE="N",Y=DT
"RTN","DVBAB82",164,0)
 X XDD S HD="Reprint C & P Exams",SUPER=0
"RTN","DVBAB82",165,0)
 I $D(^XUSEC("DVBA C SUPERVISOR",DUZ)) S SUPER=1
"RTN","DVBAB82",166,0)
 S DVBCDT(0)=Y,PGHD="Compensation and Pension Exam Report",LOC=DUZ(2),PG=0,DVBCSITE=$S($D(^DVB(396.1,1,0)):$P(^(0),U,1),1:"Not specified")
"RTN","DVBAB82",167,0)
 I "^D^V^"'[RTYPE S DVBERR=1,^TMP("DVBA",$J,1)="0^Incorrect Data Type" Q
"RTN","DVBAB82",168,0)
 I ANS="R" K AUTO
"RTN","DVBAB82",169,0)
 I ANS="M" S AUTO=1
"RTN","DVBAB82",170,0)
 I "^M^R^"'[ANS S DVBERR=1,^TMP("DVBA",$J,1)="0^Incorrect Data Type" Q
"RTN","DVBAB82",171,0)
 I RTYPE="D" D GO^DVBCRPRT Q
"RTN","DVBAB82",172,0)
 I RTYPE="V" D
"RTN","DVBAB82",173,0)
 . S ONE="Y",RO=$P(^DVB(396.3,DA,0),U,3)
"RTN","DVBAB82",174,0)
 . I RO'=DUZ(2)&('$D(AUTO))&(SUPER=0) W !!,*7,"Those results do not belong to your office.",!! Q
"RTN","DVBAB82",175,0)
 . I RO=DUZ(2)&('$D(AUTO))&("RC"'[($P(^DVB(396.3,DA,0),U,18))) W *7,!!,"This request has not been released to the Regional Office yet.",!! Q
"RTN","DVBAB82",176,0)
 . S PRTDATE=$P(^DVB(396.3,DA,0),U,16) I PRTDATE="" W *7,!!,"This has never been printed.",!! I SUPER=0 S OUT=1 Q
"RTN","DVBAB82",177,0)
 . I %=1 D REN2^DVBCLABR Q
"RTN","DVBAB82",178,0)
 . ;D OV^DVBCRPON
"RTN","DVBAB82",179,0)
 . K DVBAON2 D SETLAB^DVBCPRNT,VARS^DVBCUTIL,STEP2^DVBCRPRT
"RTN","DVBAB82",180,0)
 Q
"RTN","DVBAB82",181,0)
 ;
"RTN","DVBAB82",182,0)
CIRPT ; Report # 5 - Insufficient Exam Report
"RTN","DVBAB82",183,0)
 ;Parameters
"RTN","DVBAB82",184,0)
 ;=============
"RTN","DVBAB82",185,0)
 ; RPTTYPE : D/Detailed or S/Summary
"RTN","DVBAB82",186,0)
 ; BEGDT : Beginning date $H/FileMan
"RTN","DVBAB82",187,0)
 ; ENDDT : Ending date $H/FileMan
"RTN","DVBAB82",188,0)
 ; RESANS : Insufficient Reason
"RTN","DVBAB82",189,0)
 ; DVBAPRTY : Priority of Exam Code
"RTN","DVBAB82",190,0)
 ;    AO  : Agent Orange
"RTN","DVBAB82",191,0)
 ;    BDD : Benefits Delivery at Discharge / Quick Start
"RTN","DVBAB82",192,0)
 ;    DES : DES Claimed Condition by Service Member / Fit for Duty
"RTN","DVBAB82",193,0)
 ;    ALL : All Others (Original Report w/ all codes except the above)
"RTN","DVBAB82",194,0)
 ;
"RTN","DVBAB82",195,0)
 N DVBAPRTY,RPTTYPE,BEGDT,ENDDT,RESANS
"RTN","DVBAB82",196,0)
 U IO
"RTN","DVBAB82",197,0)
 S RPTTYPE=$P(PARM,"^",1),BEGDT=$P(PARM,"^",2),ENDDT=$P(PARM,"^",3),RESANS=$P(PARM,"^",4)
"RTN","DVBAB82",198,0)
 S DVBAPRTY=$P(PARM,"^",5)
"RTN","DVBAB82",199,0)
 S ENDDT=ENDDT_".2359"
"RTN","DVBAB82",200,0)
 I RPTTYPE="S" D SUM^DVBCIRPT Q
"RTN","DVBAB82",201,0)
 I RPTTYPE="D" D
"RTN","DVBAB82",202,0)
 . D INREAS
"RTN","DVBAB82",203,0)
 . Q:($D(^TMP("DVBA",$J,1)))  ;invalid reason sent
"RTN","DVBAB82",204,0)
 . D EXMTPE,DETAIL^DVBCIRP1
"RTN","DVBAB82",205,0)
 Q
"RTN","DVBAB82",206,0)
 ;
"RTN","DVBAB82",207,0)
EXMTPE ;exam types (retrieve all for filter)
"RTN","DVBAB82",208,0)
 N DVBAXIFN
"RTN","DVBAB82",209,0)
 F DVBAXIFN=0:0 S DVBAXIFN=$O(^DVB(396.6,DVBAXIFN)) Q:+DVBAXIFN=0  DO
"RTN","DVBAB82",210,0)
 . S ^TMP($J,"XMTYPE",DVBAXIFN)=""
"RTN","DVBAB82",211,0)
 Q
"RTN","DVBAB82",212,0)
INREAS ;insufficient reason (validate specific or retrieve all)
"RTN","DVBAB82",213,0)
 N DVBAXIFN
"RTN","DVBAB82",214,0)
 D:(RESANS="")  ;use all insufficient reasons
"RTN","DVBAB82",215,0)
 .F DVBAXIFN=0:0 S DVBAXIFN=$O(^DVB(396.94,DVBAXIFN)) Q:+DVBAXIFN=0  DO
"RTN","DVBAB82",216,0)
 .. S DVBAARY("REASON",DVBAXIFN)=""
"RTN","DVBAB82",217,0)
 D:(RESANS'="")  ;use specific insufficient reason
"RTN","DVBAB82",218,0)
 .I ('$D(^DVB(396.94,+RESANS))) D  ;validate IEN
"RTN","DVBAB82",219,0)
 ..S DVBERR=1,^TMP("DVBA",$J,1)="0^Invalid Insufficient Reason IEN"
"RTN","DVBAB82",220,0)
 .E  S DVBAARY("REASON",+RESANS)=""
"RTN","DVBAB82",221,0)
 Q
"RTN","DVBAB82",222,0)
 ;
"RTN","DVBAB82",223,0)
CRMS ; Report # 1 - Regional Office 21- day Certificate Printing Report.
"RTN","DVBAB82",224,0)
 ; No Parameters
"RTN","DVBAB82",225,0)
 ;
"RTN","DVBAB82",226,0)
 U IO
"RTN","DVBAB82",227,0)
 D ^DVBACRMS
"RTN","DVBAB82",228,0)
 Q
"RTN","DVBAB82",229,0)
 ;
"RTN","DVBAB82",230,0)
CRRR ; Report # 2 - Reprint a 21 - day Certificate for the RO
"RTN","DVBAB82",231,0)
 ;Parameters
"RTN","DVBAB82",232,0)
 ;=============
"RTN","DVBAB82",233,0)
 ; DVBSEL : Select one of the following:
"RTN","DVBAB82",234,0)
 ;       N         Patient Name
"RTN","DVBAB82",235,0)
 ;       D         ORIGINAL PROCESSING DATE
"RTN","DVBAB82",236,0)
 ; SDATE : ORIGINAL PROCESSING date - $H/FileMan
"RTN","DVBAB82",237,0)
 ; XDA : Patient IEN
"RTN","DVBAB82",238,0)
 ;
"RTN","DVBAB82",239,0)
 U IO
"RTN","DVBAB82",240,0)
 S DVBSEL=$P(PARM,"^",1),SDATE=$P(PARM,"^",2),XDA=$P(PARM,"^",3)
"RTN","DVBAB82",241,0)
 I "^D^N^"'[DVBSEL S DVBERR=1,^TMP("DVBA",$J,1)="0^Incorrect Data Type" Q
"RTN","DVBAB82",242,0)
 I DVBSEL="D" D  I DVBERR Q
"RTN","DVBAB82",243,0)
 . I SDATE="" S DVBERR=1,^TMP("DVBA",$J,1)="0^Undefined Date" Q
"RTN","DVBAB82",244,0)
 . S %DT="X" S X=SDATE D ^%DT I Y<0 D  Q
"RTN","DVBAB82",245,0)
 . . S DVBERR=1,^TMP("DVBA",$J,1)="0^Incorrect Date Format"
"RTN","DVBAB82",246,0)
 I DVBSEL="N" D  I DVBERR Q
"RTN","DVBAB82",247,0)
 . I XDA="" S DVBERR=1,^TMP("DVBA",$J,1)="0^Undefined Patient IEN" Q
"RTN","DVBAB82",248,0)
 . S DIC=2,DIC(0)="NZX",X=XDA D ^DIC I Y<0 D  I DVBERR Q
"RTN","DVBAB82",249,0)
 . . S DVBERR=1,^TMP("DVBA",$J,1)="0^Invalid Patient Name."
"RTN","DVBAB82",250,0)
 . S DFN=XDA
"RTN","DVBAB82",251,0)
 D INIT^DVBACRRR I 'CONT Q
"RTN","DVBAB82",252,0)
 D HDR^DVBACRRR,DATA^DVBACRRR
"RTN","DVBAB82",253,0)
 Q
"RTN","DVBAB82",254,0)
 ;
"RTN","DVBAB82",255,0)
CPRNT ; Report # 3 - Print C&P Final Report (manual) Report
"RTN","DVBAB82",256,0)
 ; No Parameters
"RTN","DVBAB82",257,0)
 ;
"RTN","DVBAB82",258,0)
 S XDD=^DD("DD"),$P(ULINE,"_",70)="_",Y=DT
"RTN","DVBAB82",259,0)
 X XDD S DVBCDT(0)=Y,PGHD="Compensation and Pension Exam Report",DVBCSITE=$S($D(^DVB(396.1,1,0)):$P(^(0),U,1),1:"Not Specified")
"RTN","DVBAB82",260,0)
 D GO^DVBCPRNT
"RTN","DVBAB82",261,0)
 Q
"RTN","DVBAB82",262,0)
VAL ; VALIDATE PATIENT
"RTN","DVBAB82",263,0)
 I $G(DFN)="" S DVBERR=1,^TMP("DVBA",$J,1)="0^Undefined Patient IEN" G END
"RTN","DVBAB82",264,0)
 S DIC=2,DIC(0)="NZX",X=DFN D ^DIC
"RTN","DVBAB82",265,0)
 I Y<0 S DVBERR=1,^TMP("DVBA",$J,1)="0^Invalid Patient Name." G END
"RTN","DVBAB82",266,0)
 Q
"RTN","DVBAB82",267,0)
 ;
"RTN","DVBAB82",268,0)
VALDATE(DVBADTE) ;Validate Date
"RTN","DVBAB82",269,0)
 ;dates must be valid internal FileMan format
"RTN","DVBAB82",270,0)
 N X,Y,%DT
"RTN","DVBAB82",271,0)
 S %DT="X",X=DVBADTE D ^%DT
"RTN","DVBAB82",272,0)
 S:(Y=-1) DVBERR=1,^TMP("DVBA",$J,1)="0^Invalid FileMan formatted date."
"RTN","DVBAB82",273,0)
 Q
"RTN","DVBAB82",274,0)
 ;
"RTN","DVBAB82",275,0)
CNHDEOC ; Report #10 - FBCNH Display Episode of Care
"RTN","DVBAB82",276,0)
 ; Parameters
"RTN","DVBAB82",277,0)
 ; ==========
"RTN","DVBAB82",278,0)
 ;   DFN : IEN in PATIENT (#2) file
"RTN","DVBAB82",279,0)
 ;   IFN : IEN in FEE CNH ACTIVITY (#162.3) file
"RTN","DVBAB82",280,0)
 ;
"RTN","DVBAB82",281,0)
 U IO
"RTN","DVBAB82",282,0)
 N DFN,IFN
"RTN","DVBAB82",283,0)
 S DFN=$P(PARM,U,1),IFN=$P(PARM,U,2)
"RTN","DVBAB82",284,0)
 D ^FBNHDEC  ;DBIA#: 5566
"RTN","DVBAB82",285,0)
 Q
"RTN","DVBAB82",286,0)
 ;
"RTN","DVBAB82",287,0)
CNHRP ; Report #11 - FBCNH Roster Print
"RTN","DVBAB82",288,0)
 ; Parameters
"RTN","DVBAB82",289,0)
 ; ==========
"RTN","DVBAB82",290,0)
 ;   DVBADLMTD : 0 (Standard) or 1 (Delimited)
"RTN","DVBAB82",291,0)
 ; 
"RTN","DVBAB82",292,0)
 U IO
"RTN","DVBAB82",293,0)
 S DVBADLMTD=+$P($G(PARM),U)
"RTN","DVBAB82",294,0)
 D START^FBNHROS  ;DBIA#: 5566
"RTN","DVBAB82",295,0)
 Q
"RTN","DVBAB82",296,0)
 ;
"RTN","DVBAB82",297,0)
CNHRAD ; Report #12 - FBCNH Report of Admissions/Discharges
"RTN","DVBAB82",298,0)
 ; Parameters
"RTN","DVBAB82",299,0)
 ; ==========
"RTN","DVBAB82",300,0)
 ;   BEGDATE   : Start date in FM format
"RTN","DVBAB82",301,0)
 ;   ENDDATE   : End date in FM format
"RTN","DVBAB82",302,0)
 ;   DVBADLMTD : 0 (Standard) or 1 (Delimited)
"RTN","DVBAB82",303,0)
 ;
"RTN","DVBAB82",304,0)
 U IO
"RTN","DVBAB82",305,0)
 N BEGDATE,ENDDATE
"RTN","DVBAB82",306,0)
 S BEGDATE=$P(PARM,U,1),ENDDATE=$P(PARM,U,2)
"RTN","DVBAB82",307,0)
 S DVBADLMTD=+$P(PARM,U,3)
"RTN","DVBAB82",308,0)
 D VALDATE(BEGDATE),VALDATE(ENDDATE)
"RTN","DVBAB82",309,0)
 D:('+DVBERR) START^FBNHAMIE  ;DBIA#: 5566
"RTN","DVBAB82",310,0)
 Q
"RTN","DVBAB82",311,0)
 ;
"RTN","DVBAB82",312,0)
CNHSE90D ; Report #13 - FBCNH Stays in Excess of 90 Days
"RTN","DVBAB82",313,0)
 ; Parameters
"RTN","DVBAB82",314,0)
 ; ==========
"RTN","DVBAB82",315,0)
 ;   FBDT      : Effective date in FM format
"RTN","DVBAB82",316,0)
 ;   DVBADLMTD : 0 (Standard) or 1 (Delimited)
"RTN","DVBAB82",317,0)
 ;
"RTN","DVBAB82",318,0)
 U IO
"RTN","DVBAB82",319,0)
 N FBDT
"RTN","DVBAB82",320,0)
 S FBDT=$P(PARM,U,1),DVBADLMTD=+$P(PARM,U,2)
"RTN","DVBAB82",321,0)
 D VALDATE(FBDT)
"RTN","DVBAB82",322,0)
 D:('+DVBERR) START^FBNHAMI2  ;DBIA#: 5566
"RTN","DVBAB82",323,0)
 Q
"RTN","DVBAB82",324,0)
 ;
"RTN","DVBAB82",325,0)
HFS() ; -- get hfs file name
"RTN","DVBAB82",326,0)
 N H
"RTN","DVBAB82",327,0)
 S H=$H
"RTN","DVBAB82",328,0)
 Q "DVBA_"_$J_"_"_$P(H,",")_"_"_$P(H,",",2)_".DAT"
"RTN","DVBAB82",329,0)
 ;
"RTN","DVBAB82",330,0)
HFSOPEN(HANDLE,DVBHFS,DVBMODE) ; Open File
"RTN","DVBAB82",331,0)
 S DVBDIRY=$$GET^XPAR("DIV","DVB HFS SCRATCH")
"RTN","DVBAB82",332,0)
 ;I DVBDIRY="" S ECERR=1 D  Q
"RTN","DVBAB82",333,0)
 ;. S ^TMP("DVBA",$J,1)="0^A scratch directory for reports doesn't exist"
"RTN","DVBAB82",334,0)
 D OPEN^%ZISH(HANDLE,,DVBHFS,$G(DVBMODE,"W")) D:POP  Q:POP
"RTN","DVBAB82",335,0)
 .S DVBERR=1,^TMP("DVBA",$J,1)="0^Unable to open file "
"RTN","DVBAB82",336,0)
 S IOF="$$IOF^DVBAB82"   ;resets screen position and adds page break flag - added to deal with Linux environments.
"RTN","DVBAB82",337,0)
 Q
"RTN","DVBAB82",338,0)
 ;
"RTN","DVBAB82",339,0)
HFSCLOSE(HANDLE,DVBHFS) ;Close HFS and unload data
"RTN","DVBAB82",340,0)
 N DVBDEL,X,%ZIS
"RTN","DVBAB82",341,0)
 D CLOSE^%ZISH(HANDLE)
"RTN","DVBAB82",342,0)
 S ROOT=$NA(^TMP("DVBA",$J,1)),DVBDEL(DVBHFS)=""
"RTN","DVBAB82",343,0)
 K:('+DVBERR) @ROOT
"RTN","DVBAB82",344,0)
 S X=$$FTG^%ZISH(,DVBHFS,$NA(@ROOT@(1)),4)
"RTN","DVBAB82",345,0)
 S X=$$DEL^%ZISH(,$NA(DVBDEL))
"RTN","DVBAB82",346,0)
 Q
"RTN","DVBAB82",347,0)
 ;
"RTN","DVBAB82",348,0)
IOF() ;used to reset position and insert page break flag when @IOF is executed.
"RTN","DVBAB82",349,0)
 S $X=0,$Y=0
"RTN","DVBAB82",350,0)
 Q "##FFFF##"_$C(13,10)
"RTN","DVBAB82D")
0^10^B37308259^n/a
"RTN","DVBAB82D",1,0)
DVBAB82D ;BHAMOI/JFW - CAPRI CNH DELIMITED REPORTS ; 9/24/10 1:59pm
"RTN","DVBAB82D",2,0)
 ;;2.7;AMIE;**149**;Apr 10, 1995;Build 16
"RTN","DVBAB82D",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBAB82D",4,0)
 ;
"RTN","DVBAB82D",5,0)
 ;Input : DVBARPTID - Identifies report to delimit
"RTN","DVBAB82D",6,0)
 ;        ^TMP("DVBA",$J,1) contains report in standard output
"RTN","DVBAB82D",7,0)
 ;Output: ^TMP("DVBADLMTD",$J) contains delimited report
"RTN","DVBAB82D",8,0)
 ;
"RTN","DVBAB82D",9,0)
DLMTRPT(DVBARPTID) ;delimit CNH report
"RTN","DVBAB82D",10,0)
 N DVBADLMTR,DVBADRPT
"RTN","DVBAB82D",11,0)
 S DVBADLMTR="^",DVBADRPT=$NA(^TMP("DVBADLMTD",$J))
"RTN","DVBAB82D",12,0)
 K @DVBADRPT
"RTN","DVBAB82D",13,0)
 ;create specific delimited report
"RTN","DVBAB82D",14,0)
 D @(DVBARPTID_"(DVBADLMTR,DVBADRPT)")
"RTN","DVBAB82D",15,0)
 K ^TMP("DVBA",$J)
"RTN","DVBAB82D",16,0)
 Q
"RTN","DVBAB82D",17,0)
 ;
"RTN","DVBAB82D",18,0)
11(DVBADLMTR,DVBADRPT) ;Nursing Home Roster Report Output
"RTN","DVBAB82D",19,0)
 N DVBAI,DVBAX,DVBAQUIT,DVBASTR,DVBACNTR,DVBATMP,DVBAVEN,DVBAVENID
"RTN","DVBAB82D",20,0)
 ;check to see if any results found
"RTN","DVBAB82D",21,0)
 I ('$D(^TMP("DVBA",$J,1,9))) D  Q
"RTN","DVBAB82D",22,0)
 .S @DVBADRPT@(1)="No data found."_$C(13)
"RTN","DVBAB82D",23,0)
 D COLHDR52(DVBADLMTR,DVBADRPT)  ;delimited column header info
"RTN","DVBAB82D",24,0)
 S DVBACNTR=$O(@DVBADRPT@("A"),-1)+1
"RTN","DVBAB82D",25,0)
 S DVBAI=8 F  S DVBAI=$O(^TMP("DVBA",$J,1,DVBAI)) Q:'+DVBAI  D
"RTN","DVBAB82D",26,0)
 .S DVBASTR=$G(^TMP("DVBA",$J,1,DVBAI))
"RTN","DVBAB82D",27,0)
 .;ignore blank lines (Seperates Entries) OR report headers 
"RTN","DVBAB82D",28,0)
 .Q:((DVBASTR="")!($E(DVBASTR,1,11)="VENDOR NAME")!($E(DVBASTR,1)=" ")!(DVBASTR[$C(10)))
"RTN","DVBAB82D",29,0)
 .S DVBAVEN=$$TRUNC($E(DVBASTR,1,49)),DVBAVENID=$$TRUNC($E(DVBASTR,51,80))
"RTN","DVBAB82D",30,0)
 .S DVBAQUIT=0,DVBAX=DVBAI
"RTN","DVBAB82D",31,0)
 .;quit inner loop when no more veterans for specific vendor
"RTN","DVBAB82D",32,0)
 .;or end of global array reached
"RTN","DVBAB82D",33,0)
 .F  S DVBAX=$O(^TMP("DVBA",$J,1,DVBAX)) Q:((DVBAQUIT)!('+DVBAX))  D
"RTN","DVBAB82D",34,0)
 ..S DVBASTR=$G(^TMP("DVBA",$J,1,DVBAX)),DVBATMP=""
"RTN","DVBAB82D",35,0)
 ..I ($E(DVBASTR,1)'=" ") S DVBAQUIT=1,DVBAI=DVBAX  Q
"RTN","DVBAB82D",36,0)
 ..;Vendor Name^Vendor ID
"RTN","DVBAB82D",37,0)
 ..S DVBATMP=DVBAVEN_DVBADLMTR_DVBAVENID_DVBADLMTR
"RTN","DVBAB82D",38,0)
 ..;Veteran Name^Veteran ID^Admit DT^Auth. To Date
"RTN","DVBAB82D",39,0)
 ..S DVBATMP=DVBATMP_$$TRUNC($E(DVBASTR,5,36))_DVBADLMTR_$$TRUNC($E(DVBASTR,38,52))_DVBADLMTR
"RTN","DVBAB82D",40,0)
 ..S DVBATMP=DVBATMP_$$TRIM($$TRUNC($E(DVBASTR,54,64)))_DVBADLMTR_$$TRIM($$TRUNC($E(DVBASTR,66,80)))
"RTN","DVBAB82D",41,0)
 ..;Save off CNH info and increment counters
"RTN","DVBAB82D",42,0)
 ..S @DVBADRPT@(DVBACNTR)=DVBATMP_$C(13),DVBACNTR=DVBACNTR+1
"RTN","DVBAB82D",43,0)
 Q
"RTN","DVBAB82D",44,0)
 ;
"RTN","DVBAB82D",45,0)
12(DVBADLMTR,DVBADRPT) ;CNH Admission/Discharge Report Output
"RTN","DVBAB82D",46,0)
 N DVBAI,DVBASTR,DVBACNTR,DVBATMP
"RTN","DVBAB82D",47,0)
 ;check to see if any results found
"RTN","DVBAB82D",48,0)
 I ('$D(^TMP("DVBA",$J,1,7))) D  Q
"RTN","DVBAB82D",49,0)
 .S @DVBADRPT@(1)="No data found for parameters entered."_$C(13)
"RTN","DVBAB82D",50,0)
 D COLHDR53(DVBADLMTR,DVBADRPT)  ;delimited column header info
"RTN","DVBAB82D",51,0)
 S DVBACNTR=$O(@DVBADRPT@("A"),-1)+1
"RTN","DVBAB82D",52,0)
 S DVBAI=6 F  S DVBAI=$O(^TMP("DVBA",$J,1,DVBAI)) Q:'+DVBAI  D
"RTN","DVBAB82D",53,0)
 .S DVBASTR=$G(^TMP("DVBA",$J,1,DVBAI))
"RTN","DVBAB82D",54,0)
 .;ignore blank lines (Seperates Entries) OR report headers 
"RTN","DVBAB82D",55,0)
 .Q:((DVBASTR="")!($E(DVBASTR,1)=" ")!(DVBASTR[$C(10)))
"RTN","DVBAB82D",56,0)
 .S DVBATMP=""
"RTN","DVBAB82D",57,0)
 .;Patient Name^Patient ID^Eligibility
"RTN","DVBAB82D",58,0)
 .S DVBATMP=$$TRUNC($E(DVBASTR,1,31))_DVBADLMTR_$$TRUNC($E(DVBASTR,33,47))_DVBADLMTR_$$TRUNC($E(DVBASTR,49,80))_DVBADLMTR
"RTN","DVBAB82D",59,0)
 .S DVBAI=DVBAI+1,DVBASTR=$G(^TMP("DVBA",$J,1,DVBAI))
"RTN","DVBAB82D",60,0)
 .;Activity Type^Date^Date/Time^Sub Type
"RTN","DVBAB82D",61,0)
 .S DVBATMP=DVBATMP_$P($$TRIM(DVBASTR)," ")_DVBADLMTR_$$TRUNC($E(DVBASTR,20,35))_DVBADLMTR_$$TRUNC($E(DVBASTR,53,80))_DVBADLMTR
"RTN","DVBAB82D",62,0)
 .S DVBAI=DVBAI+1,DVBASTR=$G(^TMP("DVBA",$J,1,DVBAI))
"RTN","DVBAB82D",63,0)
 .;Nursing Home Information (ID^Name^Address^Phone) is optional
"RTN","DVBAB82D",64,0)
 .D:(DVBASTR="")
"RTN","DVBAB82D",65,0)
 ..S DVBATMP=DVBATMP_DVBADLMTR_DVBADLMTR_DVBADLMTR
"RTN","DVBAB82D",66,0)
 .D:(DVBASTR'="")
"RTN","DVBAB82D",67,0)
 ..S DVBATMP=DVBATMP_$$TRUNC($E(DVBASTR,43,80))_DVBADLMTR_$$TRUNC($E(DVBASTR,11,41))_DVBADLMTR
"RTN","DVBAB82D",68,0)
 ..S DVBASTR=$$TRIM($$TRUNC($G(^TMP("DVBA",$J,1,DVBAI+1))))
"RTN","DVBAB82D",69,0)
 ..S:(DVBASTR]"") DVBATMP=DVBATMP_DVBASTR_" "  ;Address 1
"RTN","DVBAB82D",70,0)
 ..S DVBATMP=DVBATMP_$$TRIM($$TRUNC($G(^TMP("DVBA",$J,1,DVBAI+2))))_DVBADLMTR  ;Address 2
"RTN","DVBAB82D",71,0)
 ..S DVBATMP=DVBATMP_$$TRIM($$TRUNC($P($G(^TMP("DVBA",$J,1,DVBAI+3)),":",2)))  ;Phone
"RTN","DVBAB82D",72,0)
 ..S DVBAI=DVBAI+3
"RTN","DVBAB82D",73,0)
 .;Save off CNH info and increment counters
"RTN","DVBAB82D",74,0)
 .S @DVBADRPT@(DVBACNTR)=DVBATMP_$C(13),DVBACNTR=DVBACNTR+1
"RTN","DVBAB82D",75,0)
 Q
"RTN","DVBAB82D",76,0)
 ;
"RTN","DVBAB82D",77,0)
 ;Input : DVBADLMTR - Delimiter to use between components
"RTN","DVBAB82D",78,0)
 ;        DVBADRPT  - Delimited Report container (Full Global Ref)
"RTN","DVBAB82D",79,0)
 ;Output: Delimited report info added to DVBADRPT
"RTN","DVBAB82D",80,0)
13(DVBADLMTR,DVBADRPT) ; CNH stays > 90 days Report Output
"RTN","DVBAB82D",81,0)
 N DVBAI,DVBASTR,DVBACNTR,DVBATMP
"RTN","DVBAB82D",82,0)
 ;check to see if any results found
"RTN","DVBAB82D",83,0)
 I ($G(^TMP("DVBA",$J,1,9))="") D  Q
"RTN","DVBAB82D",84,0)
 .S @DVBADRPT@(1)="No data found for parameter entered."_$C(13)
"RTN","DVBAB82D",85,0)
 D COLHDR50(DVBADLMTR,DVBADRPT)  ;delimited column header info
"RTN","DVBAB82D",86,0)
 S DVBACNTR=$O(@DVBADRPT@("A"),-1)+1
"RTN","DVBAB82D",87,0)
 S DVBAI=8 F  S DVBAI=$O(^TMP("DVBA",$J,1,DVBAI)) Q:'+DVBAI  D
"RTN","DVBAB82D",88,0)
 .S DVBASTR=$G(^TMP("DVBA",$J,1,DVBAI))
"RTN","DVBAB82D",89,0)
 .Q:(DVBASTR["***LOS =")  ;end of report info
"RTN","DVBAB82D",90,0)
 .;ignore blank lines OR report headers 
"RTN","DVBAB82D",91,0)
 .Q:((DVBASTR="")!($E(DVBASTR,1,7)="VETERAN")!($E(DVBASTR,1)=" ")!(DVBASTR[$C(10)))
"RTN","DVBAB82D",92,0)
 .S DVBATMP=""
"RTN","DVBAB82D",93,0)
 .;Veteran^Pt.ID^Marital St.^Adm. Date^LOS^Vendor
"RTN","DVBAB82D",94,0)
 .S DVBATMP=$$TRUNC($E(DVBASTR,1,17))_DVBADLMTR_$$TRUNC($E(DVBASTR,19,31))_DVBADLMTR
"RTN","DVBAB82D",95,0)
 .S DVBATMP=DVBATMP_$$TRUNC($E(DVBASTR,33,34))_DVBADLMTR_$$TRUNC($E(DVBASTR,36,44))_DVBADLMTR
"RTN","DVBAB82D",96,0)
 .S DVBATMP=DVBATMP_$$TRIM($$TRUNC($E(DVBASTR,46,52)))_DVBADLMTR_$$TRUNC($E(DVBASTR,54,80))
"RTN","DVBAB82D",97,0)
 .;Save off CNH info and increment counters
"RTN","DVBAB82D",98,0)
 .S @DVBADRPT@(DVBACNTR)=DVBATMP_$C(13),DVBACNTR=DVBACNTR+1
"RTN","DVBAB82D",99,0)
 Q
"RTN","DVBAB82D",100,0)
 ;
"RTN","DVBAB82D",101,0)
 ;Delimited Column header for CNH stays in excess of 90 days Report
"RTN","DVBAB82D",102,0)
COLHDR50(DVBADLMTR,DVBADRPT) ;
"RTN","DVBAB82D",103,0)
 N DVBAHDR
"RTN","DVBAB82D",104,0)
 S DVBAHDR="Veteran"_DVBADLMTR_"Pt. ID"_DVBADLMTR_"Marital St."_DVBADLMTR
"RTN","DVBAB82D",105,0)
 S DVBAHDR=DVBAHDR_"Adm. Date"_DVBADLMTR_"LOS"_DVBADLMTR_"Vendor"
"RTN","DVBAB82D",106,0)
 S @DVBADRPT@($O(@DVBADRPT@("A"),-1)+1)=DVBAHDR_$C(13)
"RTN","DVBAB82D",107,0)
 Q
"RTN","DVBAB82D",108,0)
 ;
"RTN","DVBAB82D",109,0)
 ;Delimited Column header for Nursing Home Roster Report
"RTN","DVBAB82D",110,0)
COLHDR52(DVBADLMTR,DVBADRPT) ;
"RTN","DVBAB82D",111,0)
 N DVBAHDR
"RTN","DVBAB82D",112,0)
 S DVBAHDR="Vendor Name"_DVBADLMTR_"Vendor ID"_DVBADLMTR_"Veteran Name"_DVBADLMTR
"RTN","DVBAB82D",113,0)
 S DVBAHDR=DVBAHDR_"Veteran ID"_DVBADLMTR_"Admit DT"_DVBADLMTR_"Auth. To Date"
"RTN","DVBAB82D",114,0)
 S @DVBADRPT@($O(@DVBADRPT@("A"),-1)+1)=DVBAHDR_$C(13)
"RTN","DVBAB82D",115,0)
 Q
"RTN","DVBAB82D",116,0)
 ;
"RTN","DVBAB82D",117,0)
 ;Delimited Column header for Admission/Discharge Report
"RTN","DVBAB82D",118,0)
COLHDR53(DVBADLMTR,DVBADRPT) ;
"RTN","DVBAB82D",119,0)
 N DVBAHDR
"RTN","DVBAB82D",120,0)
 S DVBAHDR="Patient Name"_DVBADLMTR_"Patient ID"_DVBADLMTR_"Eligibility"_DVBADLMTR
"RTN","DVBAB82D",121,0)
 S DVBAHDR=DVBAHDR_"Activity Type"_DVBADLMTR_"Actvity Date/Time"_DVBADLMTR
"RTN","DVBAB82D",122,0)
 S DVBAHDR=DVBAHDR_"Activity Sub Type"_DVBADLMTR_"CNH ID"_DVBADLMTR
"RTN","DVBAB82D",123,0)
 S DVBAHDR=DVBAHDR_"CNH Name"_DVBADLMTR_"CNH Address"_DVBADLMTR_"CNH Phone #"
"RTN","DVBAB82D",124,0)
 S @DVBADRPT@($O(@DVBADRPT@("A"),-1)+1)=DVBAHDR_$C(13)
"RTN","DVBAB82D",125,0)
 Q
"RTN","DVBAB82D",126,0)
 ;
"RTN","DVBAB82D",127,0)
 ;Input : DVBASTR - string to check for trailing spaces
"RTN","DVBAB82D",128,0)
 ;Output: String with trailing spaces, Line/Form feeds removed
"RTN","DVBAB82D",129,0)
TRUNC(DVBASTR) ;remove trailing spaces and line/form feeds in string
"RTN","DVBAB82D",130,0)
 N DVBAX
"RTN","DVBAB82D",131,0)
 Q:(DVBASTR="") ""
"RTN","DVBAB82D",132,0)
 F DVBAX=$L(DVBASTR):-1:0  Q:(($E(DVBASTR,DVBAX,DVBAX)'=" ")&(($E(DVBASTR,DVBAX,DVBAX))'[$C(13))&($E(DVBASTR,DVBAX,DVBAX)'[$C(12)))
"RTN","DVBAB82D",133,0)
 Q ($E(DVBASTR,1,DVBAX))
"RTN","DVBAB82D",134,0)
 ;
"RTN","DVBAB82D",135,0)
 ;Input : DVBASTR - string to check for leading spaces
"RTN","DVBAB82D",136,0)
 ;Output: String with leading spaces removed
"RTN","DVBAB82D",137,0)
TRIM(DVBASTR) ;remove leading spaces in string
"RTN","DVBAB82D",138,0)
 N DVBAX
"RTN","DVBAB82D",139,0)
 Q:(DVBASTR="") ""
"RTN","DVBAB82D",140,0)
 F DVBAX=1:1:$L(DVBASTR)  Q:($E(DVBASTR,DVBAX,DVBAX)?1AN)
"RTN","DVBAB82D",141,0)
 Q ($E(DVBASTR,DVBAX,$L(DVBASTR)))
"RTN","DVBAB98")
0^5^B29136155^B16060500
"RTN","DVBAB98",1,0)
DVBAB98 ;ALB/SPH - CAPRI CONVERSION OF DVBARAD1 FOR SUPPORT ;09/06/00
"RTN","DVBAB98",2,0)
 ;;2.7;AMIE;**35,149**;Apr 10, 1995;Build 16
"RTN","DVBAB98",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBAB98",4,0)
 ;
"RTN","DVBAB98",5,0)
 S ZX="PENSION   ",ZY="A & A     "
"RTN","DVBAB98",6,0)
 S MSG="" F ZZ=1:1:7 S MSG=MSG_ZX
"RTN","DVBAB98",7,0)
 S MSG1="" F ZZ=1:1:7 S MSG1=MSG1_ZY
"RTN","DVBAB98",8,0)
 U IO K DVBAQUIT
"RTN","DVBAB98",9,0)
 F DVBAT="PEN","A&A" W:((IOST?1"C-".E)!(IOST'?1"P-OTHER".E)) @IOF W !!!!!!!!!! D PRINT Q:$D(DVBAQUIT)
"RTN","DVBAB98",10,0)
 G KILL
"RTN","DVBAB98",11,0)
 ;
"RTN","DVBAB98",12,0)
PRINTB S DATA1=$S($D(^TMP("DVBA",DVBAT,$J,XCN,XCFLOC,K,DA,"LADM")):^("LADM"),1:"") S (LADMDT,ADMDT)=$P(DATA1,U),LTDIS=$P(DATA1,U,2),DFN=DA,QUIT1=1 K DATA1 D ADM^DVBAVDPT K QUIT1,DVBAQ
"RTN","DVBAB98",13,0)
 S LBEDSEC=BEDSEC,LDIAG=DIAG,LDCHGDT=DCHGDT,ADMDT=$P(DATA,U),RCVAA=$P(DATA,U,2),RCVPEN=$P(DATA,U,3),CNUM=$P(DATA,U,4),TDIS=$P(DATA,U,5) D ADM^DVBAVDPT
"RTN","DVBAB98",14,0)
 S RCVPEN=$S(RCVPEN=0:"NO",RCVPEN=1:"YES",1:"Not specified"),RCVAA=$S(RCVAA=0:"NO",RCVAA=1:"YES",1:"Not specified")
"RTN","DVBAB98",15,0)
 W @IOF,!!!,?(80-$L(HEAD)\2),HEAD,!,?(80-$L(HEAD1)\2),HEAD1,!,?(80-$L(HEADDT)\2),HEADDT,!!!
"RTN","DVBAB98",16,0)
 S:ADMDT]"" ADMDT=$$FMTE^XLFDT(ADMDT,"5DZ")
"RTN","DVBAB98",17,0)
 S:DCHGDT]"" DCHGDT=$$FMTE^XLFDT(DCHGDT,"5DZ")
"RTN","DVBAB98",18,0)
 S:LADMDT]"" LADMDT=$$FMTE^XLFDT(LADMDT,"5DZ")
"RTN","DVBAB98",19,0)
 S:LDCHGDT]"" LDCHGDT=$$FMTE^XLFDT(LDCHGDT,"5DZ")
"RTN","DVBAB98",20,0)
 ;create delimited/non-delimited report
"RTN","DVBAB98",21,0)
 D:($G(DVBADLMTR)'="") PRINTD
"RTN","DVBAB98",22,0)
 D:($G(DVBADLMTR)="") PRINTND
"RTN","DVBAB98",23,0)
 Q
"RTN","DVBAB98",24,0)
 ;
"RTN","DVBAB98",25,0)
PRINTND ;create non-delimited re-admission report
"RTN","DVBAB98",26,0)
 S ZMSG(DVBABCNT)="",DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",27,0)
 S ZMSG(DVBABCNT)="Patient: "_PNAM_"  SSN: "_SSN_"  Claim Folder Loc: "_CFLOC,DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",28,0)
 S ZMSG(DVBABCNT)="Claim #: "_CNUM_"  Pension: "_RCVPEN_"  A&A: "_RCVAA,DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",29,0)
 S ZMSG(DVBABCNT)="================================================================================",DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",30,0)
 D ELIG
"RTN","DVBAB98",31,0)
 S ZMSG(DVBABCNT)="Current Admission Data:",DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",32,0)
 S ZMSG(DVBABCNT)="-----------------------",DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",33,0)
 S ZMSG(DVBABCNT)="Admission Date:      "_ADMDT,DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",34,0)
 S ZMSG(DVBABCNT)="Admitting Diagnosis: "_DIAG,DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",35,0)
 S ZMSG(DVBABCNT)="Discharge Date:      "_DCHGDT,DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",36,0)
 S ZMSG(DVBABCNT)="Discharge Type:      "_TDIS,DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",37,0)
 S ZMSG(DVBABCNT)="Bed Service:         "_BEDSEC,DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",38,0)
 S ZMSG(DVBABCNT)="",DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",39,0)
 S ZMSG(DVBABCNT)="Prior Admission Data:",DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",40,0)
 S ZMSG(DVBABCNT)="---------------------",DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",41,0)
 S ZMSG(DVBABCNT)="Admission Date:      "_LADMDT,DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",42,0)
 S ZMSG(DVBABCNT)="Admitting Diagnosis: "_LDIAG,DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",43,0)
 S ZMSG(DVBABCNT)="Discharge Date:      "_LDCHGDT,DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",44,0)
 S ZMSG(DVBABCNT)="Discharge Type:      "_LTDIS,DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",45,0)
 S ZMSG(DVBABCNT)="Bed Service:         "_LBEDSEC,DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",46,0)
 S ZMSG(DVBABCNT)="",DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",47,0)
 ;I IOST?1"C-".E W *7,!,"Press RETURN to continue or ""^"" to stop    " R ANS:DTIME S:ANS=U!('$T) XCN="ZZZZ" I '$T S DVBAQUIT=1
"RTN","DVBAB98",48,0)
 Q
"RTN","DVBAB98",49,0)
 ;
"RTN","DVBAB98",50,0)
PRINTD ;create delimited re-admission report
"RTN","DVBAB98",51,0)
 D:('$D(^XTMP("DVBA_READMISSION_RPT"_$J,0))) COLHDR
"RTN","DVBAB98",52,0)
 S ZMSG(DVBABCNT)=PNAM_DVBADLMTR_SSN_DVBADLMTR_CFLOC_DVBADLMTR_CNUM_DVBADLMTR_RCVPEN_DVBADLMTR_RCVAA_DVBADLMTR
"RTN","DVBAB98",53,0)
 D ELIG
"RTN","DVBAB98",54,0)
 S ZMSG(DVBABCNT)=ZMSG(DVBABCNT)_ADMDT_DVBADLMTR_DIAG_DVBADLMTR_DCHGDT_DVBADLMTR_TDIS_DVBADLMTR_BEDSEC_DVBADLMTR
"RTN","DVBAB98",55,0)
 S ZMSG(DVBABCNT)=ZMSG(DVBABCNT)_LADMDT_DVBADLMTR_LDIAG_DVBADLMTR_LDCHGDT_DVBADLMTR_LTDIS_DVBADLMTR_LBEDSEC
"RTN","DVBAB98",56,0)
 S DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",57,0)
 Q
"RTN","DVBAB98",58,0)
 ;
"RTN","DVBAB98",59,0)
PRINT S NODTA=1 S (XCN,XCFLOC,ANS)=""
"RTN","DVBAB98",60,0)
 I $D(^TMP("DVBA",DVBAT,$J)) F XLINE=1:1:5 W ?5,$S(DVBAT="PEN":MSG,DVBAT="A&A":MSG1,1:""),!!
"RTN","DVBAB98",61,0)
 F DVBAM=0:0 S XCN=$O(^TMP("DVBA",DVBAT,$J,XCN)) Q:XCN=""  F J=0:0 S XCFLOC=$O(^TMP("DVBA",DVBAT,$J,XCN,XCFLOC)) Q:XCFLOC=""  F K=0:0 S K=$O(^TMP("DVBA",DVBAT,$J,XCN,XCFLOC,K)) Q:K=""  D PRINTC
"RTN","DVBAB98",62,0)
 Q
"RTN","DVBAB98",63,0)
 ;
"RTN","DVBAB98",64,0)
PRINTC F DA=0:0 S DA=$O(^TMP("DVBA",DVBAT,$J,XCN,XCFLOC,K,DA)) Q:DA=""  S DATA=^(DA) D PRINTB
"RTN","DVBAB98",65,0)
 Q
"RTN","DVBAB98",66,0)
 ;
"RTN","DVBAB98",67,0)
KILL K ^TMP("DVBA","A&A",$J),^TMP("DVBA","PEN",$J)
"RTN","DVBAB98",68,0)
 K:(DVBAFNLDTE=$P(EDATE,".")) ^XTMP("DVBA_READMISSION_RPT"_$J,0)
"RTN","DVBAB98",69,0)
 D ^%ZISC S X=7 D:$D(ZTQUEUED) KILL^%ZTLOAD G FINAL^DVBAUTIL
"RTN","DVBAB98",70,0)
 ;
"RTN","DVBAB98",71,0)
ELIG S ELIG=DVBAELIG,INCMP=0
"RTN","DVBAB98",72,0)
 W "Eligibility: "
"RTN","DVBAB98",73,0)
 I ELIG]"" S ELIG=ELIG_" ("_$S(DVBAELST="P":"Pend Ver",DVBAELST="R":"Pend Re-verif",DVBAELST="V":"Verified",1:"Not Verified")_")"
"RTN","DVBAB98",74,0)
 I $D(^DPT(DA,.29)),$P(^(.29),U,1)]"" S INCMP=1 ;date ruled incomp, VA
"RTN","DVBAB98",75,0)
 I $D(^DPT(DA,.29)),$P(^(.29),U,12)=1 S INCMP=1 ;ruled incomp field
"RTN","DVBAB98",76,0)
 W ELIG_$S(ELIG]"":", ",1:"") W:$X>60 !?14 W $S(INCMP=1:"Incompetent",1:""),!
"RTN","DVBAB98",77,0)
 Q
"RTN","DVBAB98",78,0)
 ;
"RTN","DVBAB98",79,0)
COLHDR ;Column header for delimited report
"RTN","DVBAB98",80,0)
 S ZMSG(DVBABCNT)="Patient"_DVBADLMTR_"SSN"_DVBADLMTR_"Claim Folder Loc"_DVBADLMTR
"RTN","DVBAB98",81,0)
 S ZMSG(DVBABCNT)=(ZMSG(DVBABCNT))_"Claim #"_DVBADLMTR_"Pension"_DVBADLMTR_"A&A"_DVBADLMTR
"RTN","DVBAB98",82,0)
 S ZMSG(DVBABCNT)=(ZMSG(DVBABCNT))_"Current Admission Date"_DVBADLMTR_"Current Admitting Diagnosis"_DVBADLMTR
"RTN","DVBAB98",83,0)
 S ZMSG(DVBABCNT)=(ZMSG(DVBABCNT))_"Current Discharge Date"_DVBADLMTR_"Current Discharge Type"_DVBADLMTR
"RTN","DVBAB98",84,0)
 S ZMSG(DVBABCNT)=(ZMSG(DVBABCNT))_"Current Bed Service"_DVBADLMTR_"Prior Admission Date"_DVBADLMTR
"RTN","DVBAB98",85,0)
 S ZMSG(DVBABCNT)=(ZMSG(DVBABCNT))_"Prior Admitting Diagnosis"_DVBADLMTR_"Prior Discharge Date"_DVBADLMTR
"RTN","DVBAB98",86,0)
 S ZMSG(DVBABCNT)=(ZMSG(DVBABCNT))_"Prior Discharge Type"_DVBADLMTR_"Prior Bed Service"
"RTN","DVBAB98",87,0)
 S DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",88,0)
 S ^XTMP("DVBA_READMISSION_RPT"_$J,0)=DT_U_DT
"RTN","DVBAB98",89,0)
 Q
"RTN","DVBABDDU")
0^2^B1488997^n/a
"RTN","DVBABDDU",1,0)
DVBABDDU ;ALB/RPM - CAPRI DATA DICTIONARY UTILITIES ; 08/05/10
"RTN","DVBABDDU",2,0)
 ;;2.7;AMIE;**149**;Apr 10, 1995;Build 16
"RTN","DVBABDDU",3,0)
 ;
"RTN","DVBABDDU",4,0)
GETSET(DVBRSLT,DVBFIL,DVBFLD) ;return Set of Codes
"RTN","DVBABDDU",5,0)
 ;This procedure returns the internal and external values
"RTN","DVBABDDU",6,0)
 ;for a given file and SET OF CODES field.
"RTN","DVBABDDU",7,0)
 ;
"RTN","DVBABDDU",8,0)
 ;Supports remote procedure:  DVBAB GET SET
"RTN","DVBABDDU",9,0)
 ;
"RTN","DVBABDDU",10,0)
 ;  Input:
"RTN","DVBABDDU",11,0)
 ;    DVBFIL - (required) file number  (ex. 396.3)
"RTN","DVBABDDU",12,0)
 ;    DVBFLD - (required) field number (ex. 9)
"RTN","DVBABDDU",13,0)
 ;
"RTN","DVBABDDU",14,0)
 ;  Output:
"RTN","DVBABDDU",15,0)
 ;    DVBRSLT - (pass by reference) returns an array of caret-delimited
"RTN","DVBABDDU",16,0)
 ;              internal and external set of codes values on success;
"RTN","DVBABDDU",17,0)
 ;              otherwise, returns nothing
"RTN","DVBABDDU",18,0)
 ;              Ex: DVBRSLT(n)=code internal value^code external value
"RTN","DVBABDDU",19,0)
 ;
"RTN","DVBABDDU",20,0)
 N DVBSET   ;results from FIELD^DID call
"RTN","DVBABDDU",21,0)
 N DVBCNT   ;returned codes count
"RTN","DVBABDDU",22,0)
 N DVBI     ;generic counter
"RTN","DVBABDDU",23,0)
 N DVBSETI  ;internal value
"RTN","DVBABDDU",24,0)
 N DVBSETE  ;external value
"RTN","DVBABDDU",25,0)
 ;
"RTN","DVBABDDU",26,0)
 D FIELD^DID(DVBFIL,DVBFLD,"","POINTER","DVBSET","DVBSET")
"RTN","DVBABDDU",27,0)
 I '$D(DVBSET("DIERR")) D
"RTN","DVBABDDU",28,0)
 . S DVBCNT=$L(DVBSET("POINTER"),";")-1
"RTN","DVBABDDU",29,0)
 . F DVBI=1:1:DVBCNT D
"RTN","DVBABDDU",30,0)
 . . S DVBSETI=$P($P(DVBSET("POINTER"),";",DVBI),":",1)
"RTN","DVBABDDU",31,0)
 . . S DVBSETE=$P($P(DVBSET("POINTER"),";",DVBI),":",2)
"RTN","DVBABDDU",32,0)
 . . S DVBRSLT(DVBI)=DVBSETI_"^"_DVBSETE
"RTN","DVBABDDU",33,0)
 Q
"RTN","DVBABURL")
0^30^B2397510^B2354419
"RTN","DVBABURL",1,0)
DVBABURL ;ALB/SPH - CAPRI URL ;10/08/2009
"RTN","DVBABURL",2,0)
 ;;2.7;AMIE;**104,136,143,149**;Apr 10, 1995;Build 16
"RTN","DVBABURL",3,0)
 ;
"RTN","DVBABURL",4,0)
URL(Y,WHICH) ; 
"RTN","DVBABURL",5,0)
 S Y=""
"RTN","DVBABURL",6,0)
 ; 1=VBA's AMIE Worksheet Website
"RTN","DVBABURL",7,0)
 ; 2=CAPRI training website
"RTN","DVBABURL",8,0)
 ; 3=VistAWeb website
"RTN","DVBABURL",9,0)
 ; 5=HIA download website
"RTN","DVBABURL",10,0)
 ; 999=Debug/Test Code
"RTN","DVBABURL",11,0)
 I WHICH=1 S Y="http://152.124.238.193/bl/21/rating/Medical/exams/index.htm"
"RTN","DVBABURL",12,0)
 I WHICH=2 S Y="http://vaww.demo.va.gov/capri/capri.aspx"
"RTN","DVBABURL",13,0)
 I WHICH=3 D
"RTN","DVBABURL",14,0)
 . I '$$PROD^XUPROD S Y="-1^VistAWeb disabled for non-production systems." Q
"RTN","DVBABURL",15,0)
 . S Y="https://vistaweb.med.va.gov/CapriPage.aspx"
"RTN","DVBABURL",16,0)
 I WHICH=4 S Y="M21-1, Part VI, Rating Board Procedures^http://152.124.238.193/bl/21/Publicat/Manuals/Part6/601.htm#Exam"
"RTN","DVBABURL",17,0)
 I WHICH=5 S Y=$$GET^XPAR("PKG","DVBAB CAPRI HIA UPDATE URL",1,"Q")
"RTN","DVBABURL",18,0)
 I WHICH=999 S Y="http://vhaannweb2.v11.med.va.gov/VwDesktop/CapriPage.aspx"
"RTN","DVBABURL",19,0)
 Q 
"RTN","DVBABURL",20,0)
 ;
"RTN","DVBASPD2")
0^3^B47508013^B28946150
"RTN","DVBASPD2",1,0)
DVBASPD2 ;ALB/GTS-557/THM-AMIE SPECIAL REPORT ; 9/15/91  8:22 PM
"RTN","DVBASPD2",2,0)
 ;;2.7;AMIE;**3,57,149**;Apr 10, 1995;Build 16
"RTN","DVBASPD2",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBASPD2",4,0)
 ;
"RTN","DVBASPD2",5,0)
 K ^TMP($J) G TERM
"RTN","DVBASPD2",6,0)
SET Q:'$D(^DPT(DA,0))  S DFN=DA D RCV^DVBAVDPT Q:RCVPEN'=1&(REP="P")  Q:RCVAA'=1&(REP="A")  Q:CFLOC'=RONUM&(RO="Y")&(CFLOC'=0)&(CFLOC'=376)
"RTN","DVBASPD2",7,0)
 S DCHPTR=$P(^DGPM(MB,0),U,17),TDIS=$S($D(^DGPM(+DCHPTR,0)):$P(^(0),U,18),1:"")
"RTN","DVBASPD2",8,0)
 I +TDIS,'$D(^TMP("DVBA",$J,"DUP",+TDIS)) Q
"RTN","DVBASPD2",9,0)
 S TDIS=$S($P($G(^DG(405.2,+TDIS,0)),U,1)]"":$P(^(0),U,1),1:"Unknown discharge type")
"RTN","DVBASPD2",10,0)
 S ^TMP($J,XCN,CFLOC,MB,DA)=MA_U_RCVAA_U_RCVPEN_U_CNUM_U_TDIS
"RTN","DVBASPD2",11,0)
 Q
"RTN","DVBASPD2",12,0)
 ;
"RTN","DVBASPD2",13,0)
PRINTB W:(IOST?1"C-".E)!($D(DVBAON2)) @IOF
"RTN","DVBASPD2",14,0)
 W !!!,?(80-$L(HEAD)\2),HEAD,!,?(80-$L(HEAD1)\2),HEAD1,!!
"RTN","DVBASPD2",15,0)
 W ?10,REP(0),?26,PNAM,!!,?14,REP(1),?26,CNUM,!,?6,REP(2),?26,XCFLOC,!,?9,REP(3),?26,SSN,!,?8,REP(4),?26,ADMDT,!,?3,REP(5),?26,DIAG,!
"RTN","DVBASPD2",16,0)
 W ?8,REP(6),?26,DCHGDT,! W:DCHGDT]"" ?5,REP(7),?26,$$DIS,!
"RTN","DVBASPD2",17,0)
 W ?11,REP(8),?26,BEDSEC,!,?13,REP(9),?26,$$RAA,!
"RTN","DVBASPD2",18,0)
 W ?14,REP(10),?26,$$PEN,! D ELIG^DVBAVDPT
"RTN","DVBASPD2",19,0)
 I IOST?1"C-".E W *7,!,"Press RETURN to continue or ""^"" to stop    " R ANS:DTIME S:ANS=U!('$T) QUIT=1 I '$T S DVBAQUIT=1 I '$T S DVBAQUIT=1
"RTN","DVBASPD2",20,0)
 S DVBAON2=""
"RTN","DVBASPD2",21,0)
 Q
"RTN","DVBASPD2",22,0)
RAA() Q $S(RCVAA=0:"NO",RCVAA=1:"YES",1:"Not specified")
"RTN","DVBASPD2",23,0)
PEN() Q $S(RCVPEN=0:"NO",RCVPEN=1:"YES",1:"Not specified")
"RTN","DVBASPD2",24,0)
DIS() Q TDIS_$S(TO]"":" TO "_$S($D(^DIC(4,+TO,0)):$P(^(0),U,1),1:""),1:"")
"RTN","DVBASPD2",25,0)
SP(N,M) S $P(M," ",N-1)=" " Q M  ;pass one arg, 2nd for local use
"RTN","DVBASPD2",26,0)
PRINTC F J=0:1:7 S ^TMP("DVBSPCRP",$J,DVBC+J)=DVBS(J) ;NakedRefs = ^TMP("DVBSPCRP",$J,DVBC+J)
"RTN","DVBASPD2",27,0)
 S DVBC=DVBC+6,^TMP("DVBSPCRP",$J,DVBC)=$$SP(10)_REP(0)_PNAM
"RTN","DVBASPD2",28,0)
 S ^(DVBC+2)=$$SP(14)_REP(1)_CNUM
"RTN","DVBASPD2",29,0)
 S ^(DVBC+3)=$$SP(6)_REP(2)_XCFLOC
"RTN","DVBASPD2",30,0)
 S ^(DVBC+4)=$$SP(9)_REP(3)_SSN
"RTN","DVBASPD2",31,0)
 S ^(DVBC+5)=$$SP(8)_REP(4)_ADMDT
"RTN","DVBASPD2",32,0)
 S ^(DVBC+6)=$$SP(3)_REP(5)_DIAG
"RTN","DVBASPD2",33,0)
 S DVBC=DVBC+7,^(DVBC)=$$SP(8)_REP(6)_DCHGDT
"RTN","DVBASPD2",34,0)
 I DCHGDT]"" D
"RTN","DVBASPD2",35,0)
 .S DVBC=DVBC+1,^(DVBC)=$$SP(5)_REP(7)_$$DIS
"RTN","DVBASPD2",36,0)
 S ^(DVBC+1)=$$SP(11)_REP(8)_BEDSEC
"RTN","DVBASPD2",37,0)
 S ^(DVBC+2)=$$SP(13)_REP(9)_$$RAA
"RTN","DVBASPD2",38,0)
 S DVBC=DVBC+3,^(DVBC)=$$SP(14)_REP(10)_$$PEN
"RTN","DVBASPD2",39,0)
 D ELIG^DVBAVDPT
"RTN","DVBASPD2",40,0)
 Q
"RTN","DVBASPD2",41,0)
 ;
"RTN","DVBASPD2",42,0)
PRINTD ;print delimited special report
"RTN","DVBASPD2",43,0)
 N ELIG,INCMP,DVBADATA,DVBABRKER
"RTN","DVBASPD2",44,0)
 S DVBABRKER=$$BROKER^XWBLIB
"RTN","DVBASPD2",45,0)
 S ELIG=DVBAELIG,INCMP=""
"RTN","DVBASPD2",46,0)
 I ELIG]"" S ELIG=ELIG_" ("_$S(DVBAELST="P":"Pend Ver",DVBAELST="R":"Pend Re-verif",DVBAELST="V":"Verified",1:"Not Verified")_")"
"RTN","DVBASPD2",47,0)
 I $D(^DPT(DA,.29)) S INCMP=$S($P(^(.29),U,12)=1:"Incompetent",1:"")
"RTN","DVBASPD2",48,0)
 I INCMP]"",ELIG]"" S ELIG=ELIG_", "_INCMP
"RTN","DVBASPD2",49,0)
 D:('DVBADHDR) COLHDR
"RTN","DVBASPD2",50,0)
 S DVBADATA=PNAM_DVBADLMTR_CNUM_DVBADLMTR_XCFLOC_DVBADLMTR
"RTN","DVBASPD2",51,0)
 S DVBADATA=DVBADATA_SSN_DVBADLMTR_ADMDT_DVBADLMTR_DIAG_DVBADLMTR_DCHGDT_DVBADLMTR
"RTN","DVBASPD2",52,0)
 S DVBADATA=DVBADATA_$S(DCHGDT]"":$$DIS,1:"")_DVBADLMTR_BEDSEC_DVBADLMTR
"RTN","DVBASPD2",53,0)
 S DVBADATA=DVBADATA_$$RAA_DVBADLMTR_$$PEN_DVBADLMTR_ELIG
"RTN","DVBASPD2",54,0)
 D:DVBABRKER
"RTN","DVBASPD2",55,0)
 .S ^TMP("DVBSPCRP",$J,DVBC)=DVBADATA,DVBC=DVBC+1
"RTN","DVBASPD2",56,0)
 D:('DVBABRKER)
"RTN","DVBASPD2",57,0)
 .W !,DVBADATA
"RTN","DVBASPD2",58,0)
 Q
"RTN","DVBASPD2",59,0)
 ;
"RTN","DVBASPD2",60,0)
PRINT S QUIT="",XCN=""
"RTN","DVBASPD2",61,0)
 F  S XCN=$O(^TMP($J,XCN)) Q:XCN=""!(QUIT=1)  S XCFLOC="" F  S XCFLOC=$O(^TMP($J,XCN,XCFLOC)) Q:XCFLOC=""!(QUIT=1)  D PRINT1
"RTN","DVBASPD2",62,0)
 Q
"RTN","DVBASPD2",63,0)
PRINT1 S ADM="" F  S ADM=$O(^TMP($J,XCN,XCFLOC,ADM)) Q:ADM=""!(QUIT=1)  D
"RTN","DVBASPD2",64,0)
 .S DA="" F  S DA=$O(^TMP($J,XCN,XCFLOC,ADM,DA)) Q:DA=""!(QUIT=1)  D
"RTN","DVBASPD2",65,0)
 ..S DATA=^(DA),MA=$P(DATA,U),RCVAA=$P(DATA,U,2),RCVPEN=$P(DATA,U,3)
"RTN","DVBASPD2",66,0)
 ..S CNUM=$P(DATA,U,4),TDIS=$P(DATA,U,5),DFN=DA,TO="",QUIT1=1
"RTN","DVBASPD2",67,0)
 ..D ADM^DVBAVDPT
"RTN","DVBASPD2",68,0)
 ..S:ADMDT]"" ADMDT=$E(ADMDT,4,5)_"/"_$E(ADMDT,6,7)_"/"_$E(ADMDT,2,3)
"RTN","DVBASPD2",69,0)
 ..S:DCHGDT]"" DCHGDT=$E(DCHGDT,4,5)_"/"_$E(DCHGDT,6,7)_"/"_$E(DCHGDT,2,3)
"RTN","DVBASPD2",70,0)
 ..I $$BROKER^XWBLIB D @$S(($G(DVBADLMTR)=""):"PRINTC",1:"PRINTD") Q
"RTN","DVBASPD2",71,0)
 ..D @$S(($G(DVBADLMTR)=""):"PRINTB",1:"PRINTD")
"RTN","DVBASPD2",72,0)
 Q
"RTN","DVBASPD2",73,0)
SETUP S RPT="VARO REPORT"_$S(REP="A":" FOR A & A",1:" FOR PENSION"),DTAR=^DVB(396.1,1,0),FDT(0)=$E(DT,4,5)_"-"_$E(DT,6,7)_"-"_$E(DT,2,3)
"RTN","DVBASPD2",74,0)
 S HEAD="SPECIAL "_$S(REP="A":"A & A",1:"PENSION")_" REPORT",HEAD1="FOR "_$P(DTAR,U,1)_" ON "_FDT(0)
"RTN","DVBASPD2",75,0)
 S Y=$P(DTAR,U,9) X ^DD("DD") S REP("LRUN")="Last report was run on "_Y
"RTN","DVBASPD2",76,0)
 S REP(0)="Patient Name:",REP(1)="Claim No:"
"RTN","DVBASPD2",77,0)
 S REP(2)="Claim Folder Loc:",REP(3)="Social Sec No:"
"RTN","DVBASPD2",78,0)
 S REP(4)="Admission Date:",REP(5)="Admitting Diagnosis:"
"RTN","DVBASPD2",79,0)
 S REP(6)="Discharge Date:",REP(7)="Type of Discharge:"
"RTN","DVBASPD2",80,0)
 S REP(8)="Bed Service:",REP(9)="Recv A&A?:",REP(10)="Pension?:"
"RTN","DVBASPD2",81,0)
 Q
"RTN","DVBASPD2",82,0)
TERM D HOME^%ZIS,SETUP K NOASK
"RTN","DVBASPD2",83,0)
 W @IOF,!,RPT,!,HEAD1
"RTN","DVBASPD2",84,0)
 ;
"RTN","DVBASPD2",85,0)
EN1 W !!,"Please enter dates for search, oldest date first, most recent date last.",!!,REP("LRUN"),!!
"RTN","DVBASPD2",86,0)
 D DATE^DVBAUTIL
"RTN","DVBASPD2",87,0)
 G:X=""!(Y<0) KILL
"RTN","DVBASPD2",88,0)
 S %ZIS="Q" D ^%ZIS K %ZIS G:POP KILL^DVBAUTIL
"RTN","DVBASPD2",89,0)
 ;
"RTN","DVBASPD2",90,0)
QUEUE I $D(IO("Q")) S ZTRTN="DEQUE^DVBASPD2",ZTIO=ION,NOASK=1,ZTDESC="AMIE PENSION/A&A REPORT" F I="^TMP(""DVBA"",$J,""DUP"",","DVBATYPS","REP","FDT(0)","HEAD","HEAD1","BDATE","EDATE","TYPE","RO","RONUM","NOASK" S ZTSAVE(I)=""
"RTN","DVBASPD2",91,0)
 I $D(IO("Q")) D ^%ZTLOAD W:$D(ZTSK) !!,"Request queued.",!! G KILL
"RTN","DVBASPD2",92,0)
 ;
"RTN","DVBASPD2",93,0)
GO S MA=BDATE F  S MA=$O(^DGPM("AMV1",MA)) Q:$P(MA,".")>EDATE!(MA="")  W:'$D(NOASK) "." F DA=0:0 S DA=$O(^DGPM("AMV1",MA,DA)) Q:DA=""  F MB=0:0 S MB=$O(^DGPM("AMV1",MA,DA,MB)) Q:MB=""  D SET
"RTN","DVBASPD2",94,0)
 S:'$D(^TMP($J)) ER="No data found for parameters entered."
"RTN","DVBASPD2",95,0)
 G:$$BROKER^XWBLIB BROKER
"RTN","DVBASPD2",96,0)
 U IO I $D(ER) W !!,*7,ER,!! G KILL
"RTN","DVBASPD2",97,0)
 D PRINT
"RTN","DVBASPD2",98,0)
 I $D(DVBAQUIT) D:$D(ZTQUEUED) KILL^%ZTLOAD K ER,DVBAON2 G KILL^DVBAUTIL
"RTN","DVBASPD2",99,0)
 ;
"RTN","DVBASPD2",100,0)
KILL D ^%ZISC D:$D(ZTQUEUED) KILL^%ZTLOAD S X=9 K ER,DVBAON2 G FINAL^DVBAUTIL
"RTN","DVBASPD2",101,0)
 ;
"RTN","DVBASPD2",102,0)
INIT ;add header info to report
"RTN","DVBASPD2",103,0)
 I ($G(DVBADLMTR)'="") D  Q  ;no header info for delimited report
"RTN","DVBASPD2",104,0)
 .S DVBC=1
"RTN","DVBASPD2",105,0)
 F J=0,2,5,6,7 S DVBS(J)=" "
"RTN","DVBASPD2",106,0)
 S $P(DVBS(1),"-",70)="-",DVBS(3)=$$SP(70-$L(HEAD)\2)_HEAD,DVBS(4)=$$SP(70-$L(HEAD1)\2)_HEAD1
"RTN","DVBASPD2",107,0)
 S ^TMP("DVBSPCRP",$J,1)=" ",^(2)=RPT,^(3)=HEAD1,^(4)=" ",^(5)=REP("LRUN"),DVBC=6
"RTN","DVBASPD2",108,0)
 F J=0:1:10 S REP(J)=REP(J)_"    "
"RTN","DVBASPD2",109,0)
 Q
"RTN","DVBASPD2",110,0)
BROKER I $D(ER) K ^TMP("DVBSPCRP",$J) S ^($J,1)=ER
"RTN","DVBASPD2",111,0)
 E  D INIT,PRINT
"RTN","DVBASPD2",112,0)
 S X=9 G FINAL^DVBAUTIL
"RTN","DVBASPD2",113,0)
 ;
"RTN","DVBASPD2",114,0)
 ;Input: DVBADLMTR - Indicates if report should be delimited (Optional)
"RTN","DVBASPD2",115,0)
SPECRPT(ZMSG,DCTYPES,BDATE,EDATE,RONUM,REP,DVBADLMTR)      ;
"RTN","DVBASPD2",116,0)
 N I,J,REQ,DVBC,DVBACEPT,DVBS,ER,DVBADHDR
"RTN","DVBASPD2",117,0)
 S DVBADLMTR=$S('+$G(DVBADLMTR):"",1:"^"),DVBADHDR=0
"RTN","DVBASPD2",118,0)
 S ZMSG=$NA(^TMP("DVBSPCRP",$J)),RONUM=+$G(RONUM),REQ=" IS REQUIRED"
"RTN","DVBASPD2",119,0)
 S MB=" MUST BE ",TYPE="REPORT TYPE",BDT="BEGINNING DATE",EDT="ENDING DATE"
"RTN","DVBASPD2",120,0)
 I $G(BDATE)="" S ER=BDT_REQ
"RTN","DVBASPD2",121,0)
 I $G(EDATE)="" S ER=EDT_REQ
"RTN","DVBASPD2",122,0)
 I EDATE<BDATE S ER=BDT_MB_"BEFORE THE "_EDT
"RTN","DVBASPD2",123,0)
 I $G(REP)="" S ER=TYPE_REQ
"RTN","DVBASPD2",124,0)
 I "^A^P"'[REP S ER=TYPE_MB_"'A' OR 'P'"
"RTN","DVBASPD2",125,0)
 I $D(RONUM)&(RONUM'?1.3N) S ER="REGIONAL OFFICE"_MB_"1-3 NUMBERS"
"RTN","DVBASPD2",126,0)
 K ^TMP("DVBSPCRP",$J) I $D(ER) S ^($J,1)=ER,X=9 G FINAL^DVBAUTIL
"RTN","DVBASPD2",127,0)
 S (NOASK,DVBACEPT)=1,RO=$S(RONUM=0:"N",1:"Y")
"RTN","DVBASPD2",128,0)
 F J=0:0 S J=$O(DCTYPES(J)) Q:'J  S ^TMP("DVBA",$J,"DUP",DCTYPES(J))=""
"RTN","DVBASPD2",129,0)
 D SETUP
"RTN","DVBASPD2",130,0)
DEQUE K ^TMP($J) G GO
"RTN","DVBASPD2",131,0)
 ;
"RTN","DVBASPD2",132,0)
COLHDR ;Column header for delimited report
"RTN","DVBASPD2",133,0)
 N DVBACHDR,DVBABRKER
"RTN","DVBASPD2",134,0)
 S DVBABRKER=$$BROKER^XWBLIB
"RTN","DVBASPD2",135,0)
 S DVBACHDR="Patient Name"_DVBADLMTR_"Claim No"_DVBADLMTR_"Claim Folder Loc"_DVBADLMTR
"RTN","DVBASPD2",136,0)
 S DVBACHDR=DVBACHDR_"Social Sec No"_DVBADLMTR_"Admission Date"_DVBADLMTR_"Admitting Diagnosis"_DVBADLMTR
"RTN","DVBASPD2",137,0)
 S DVBACHDR=DVBACHDR_"Discharge Date"_DVBADLMTR_"Type of Discharge"_DVBADLMTR_"Bed Service"_DVBADLMTR
"RTN","DVBASPD2",138,0)
 S DVBACHDR=DVBACHDR_"Recv A&A?"_DVBADLMTR_"Pension?"_DVBADLMTR_"Eligibility Data"
"RTN","DVBASPD2",139,0)
 S:DVBABRKER ^TMP("DVBSPCRP",$J,DVBC)=DVBACHDR,DVBC=DVBC+1
"RTN","DVBASPD2",140,0)
 D:('DVBABRKER)
"RTN","DVBASPD2",141,0)
 .W !,DVBACHDR
"RTN","DVBASPD2",142,0)
 S DVBADHDR=1  ;set so header info only printed once
"RTN","DVBASPD2",143,0)
 Q
"RTN","DVBCAMI1")
0^18^B11579821^B9931971
"RTN","DVBCAMI1",1,0)
DVBCAMI1 ;ALB/GTS-557/THM-AMIS REPORT/BULLETIN TEXT ; 10/4/91  8:48 AM
"RTN","DVBCAMI1",2,0)
 ;;2.7;AMIE;**17,149**;Apr 10, 1995;Build 16
"RTN","DVBCAMI1",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBCAMI1",4,0)
 ;
"RTN","DVBCAMI1",5,0)
 ;Input : DVBACDE - Priority of Exam code to get Totals for
"RTN","DVBCAMI1",6,0)
BULLTXT(DVBACDE) ;
"RTN","DVBCAMI1",7,0)
 N DVBATXT,DVBADTS
"RTN","DVBCAMI1",8,0)
 S TOTRECV=TOT("RECEIVED")+TOT("INSUFF"),TOTRVTN=TOTRECV+TOT("TRANSIN")
"RTN","DVBCAMI1",9,0)
 S DVBATXT=$$PRHD^DVBCIUTL(DVBACDE)
"RTN","DVBCAMI1",10,0)
 S DVBATXT=$S(DVBATXT["Excludes":"Report "_DVBATXT,1:"Report for "_DVBATXT)
"RTN","DVBCAMI1",11,0)
 ;DES Type exams required to be completed in 45 days, all others 30
"RTN","DVBCAMI1",12,0)
 S DVBADTS=$S(((";DCS;DFD;")[(";"_DVBACDE_";")):45,1:30)
"RTN","DVBCAMI1",13,0)
 ;.01,.02 printed only in bulletin (if generated)
"RTN","DVBCAMI1",14,0)
 S ^TMP($J,.01,0)=DVBATXT
"RTN","DVBCAMI1",15,0)
 S ^TMP($J,.02,0)=" "
"RTN","DVBCAMI1",16,0)
 S ^TMP($J,1,0)="Processing date: "_$$FMTE^XLFDT(DT,"5DZ")
"RTN","DVBCAMI1",17,0)
 S ^TMP($J,2,0)=" "
"RTN","DVBCAMI1",18,0)
 S ^TMP($J,3,0)="Total pending from previous month: "_PREVMO
"RTN","DVBCAMI1",19,0)
 S ^TMP($J,4,0)=" "
"RTN","DVBCAMI1",20,0)
 S ^TMP($J,5,0)="Requests received for date range: "_TOT("RECEIVED")
"RTN","DVBCAMI1",21,0)
 S ^TMP($J,5.1,0)=" "
"RTN","DVBCAMI1",22,0)
 S ^TMP($J,5.3,0)="Exams returned as insufficient: "_TOT("INSUFF")_"  ("_$S(TOTRECV>0:$J(TOT("INSUFF")/TOTRECV*100,0,0),1:0)_"%)"
"RTN","DVBCAMI1",23,0)
 S ^TMP($J,6,0)="Requests returned complete: "_TOT("COMPLETED")
"RTN","DVBCAMI1",24,0)
 S ^TMP($J,7,0)="Requests returned incomplete: "_TOT("INCOMPLETE")
"RTN","DVBCAMI1",25,0)
 S ^TMP($J,8,0)=" "
"RTN","DVBCAMI1",26,0)
 S ^TMP($J,8.1,0)="Total processing time: "_TOT("DAYS")_$S(TOT("DAYS")=1:" day",1:" days")
"RTN","DVBCAMI1",27,0)
 S ^TMP($J,8.2,0)=" "
"RTN","DVBCAMI1",28,0)
 S ^TMP($J,9,0)="Pending end of month: "_TOT("PENDADJ")
"RTN","DVBCAMI1",29,0)
 S ^TMP($J,10,0)="Average processing time: "_TOT("AVGDAYS")_$S(TOT("AVGDAYS")>1!(TOT("AVGDAYS")<1):" days",1:" day")
"RTN","DVBCAMI1",30,0)
 S ^TMP($J,11,0)=" "
"RTN","DVBCAMI1",31,0)
 S ^TMP($J,12,0)="Greater than 3 days to schedule: "_TOT("3DAYSCH")
"RTN","DVBCAMI1",32,0)
 S ^TMP($J,13,0)="Greater than "_DVBADTS_" days to examine: "_TOT("30DAYEX")
"RTN","DVBCAMI1",33,0)
 S ^TMP($J,14,0)=" "
"RTN","DVBCAMI1",34,0)
 S ^TMP($J,15,0)="Pending, 0-90 days: "_TOT("P90")
"RTN","DVBCAMI1",35,0)
 S ^TMP($J,16,0)="Pending, 91-120 days: "_TOT("P121")
"RTN","DVBCAMI1",36,0)
 S ^TMP($J,17,0)="Pending, 121-150 days: "_TOT("P151")
"RTN","DVBCAMI1",37,0)
 S ^TMP($J,18,0)="Pending, 151-180 days: "_TOT("P181")
"RTN","DVBCAMI1",38,0)
 S ^TMP($J,19,0)="Pending, 181-365 days: "_TOT("P365")
"RTN","DVBCAMI1",39,0)
 S ^TMP($J,20,0)="Pending, 366 or more days: "_TOT("P366")
"RTN","DVBCAMI1",40,0)
 S ^TMP($J,21,0)=" "
"RTN","DVBCAMI1",41,0)
 S ^TMP($J,22,0)="Transfers in from other sites: "_TOT("TRANSIN")_"  ("_$S(TOTRVTN>0:$J(TOT("TRANSIN")/TOTRVTN*100,0,0),1:0)_"%)"
"RTN","DVBCAMI1",42,0)
 S ^TMP($J,23,0)="Transfers returned to other sites: "_TOT("TRNRETTO")
"RTN","DVBCAMI1",43,0)
 S ^TMP($J,24,0)="Transfers pending return to other sites: "_TOT("TRNPNDTO")
"RTN","DVBCAMI1",44,0)
 S ^TMP($J,25,0)=" "
"RTN","DVBCAMI1",45,0)
 S ^TMP($J,26,0)="Transfers out to other sites: "_TOT("TRANSOUT")_"  ("_$S(TOTRVTN>0:$J(TOT("TRANSOUT")/TOTRVTN*100,0,0),1:0)_"%)"
"RTN","DVBCAMI1",46,0)
 S ^TMP($J,27,0)="Transfers returned from other sites: "_TOT("TRNRETFR")
"RTN","DVBCAMI1",47,0)
 S ^TMP($J,28,0)="Transfers pending return from other sites: "_TOT("TRNPNDFR")
"RTN","DVBCAMI1",48,0)
 S ^TMP($J,29,0)=" "
"RTN","DVBCAMI1",49,0)
 S ^TMP($J,32,0)=" ** Transfer figures are for information only **"
"RTN","DVBCAMI1",50,0)
 S ^TMP($J,33,0)="* and should not be used to balance this report *"
"RTN","DVBCAMI1",51,0)
 K DIC,DIE,DR,DA,TOTRECV,TOTRVTN
"RTN","DVBCAMI1",52,0)
 Q
"RTN","DVBCAMI2")
0^19^B37534460^B20502259
"RTN","DVBCAMI2",1,0)
DVBCAMI2 ;ALB/GTS-557/THM-HOSPITAL AMIS 290 ; 7/1/91  9:48 AM
"RTN","DVBCAMI2",2,0)
 ;;2.7;AMIE;**149**;Apr 10, 1995;Build 16
"RTN","DVBCAMI2",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBCAMI2",4,0)
 ;
"RTN","DVBCAMI2",5,0)
 ;** Version Changes
"RTN","DVBCAMI2",6,0)
 ;   2.7 - GTS/Coded to adjust 35 day clock calc  (Enhc 13)
"RTN","DVBCAMI2",7,0)
 ;
"RTN","DVBCAMI2",8,0)
DAY30 ;exam completion
"RTN","DVBCAMI2",9,0)
 N DVBADTS,DVBAPPTS,DVBACNT,DVBADTM,DVBAPT,DVBANDE,X,X1,X2
"RTN","DVBCAMI2",10,0)
 K ^TMP("DVBC",$J),^TMP($J,"SDAMA301")
"RTN","DVBCAMI2",11,0)
 ;DES Type exams required to be completed in 45 days, all others 30
"RTN","DVBCAMI2",12,0)
 S DVBADTS=$S(((";DCS;DFD;")[(";"_DVBAPREXM_";")):45,1:30)
"RTN","DVBCAMI2",13,0)
 ;setup call to scheduling API (date inclusive)
"RTN","DVBCAMI2",14,0)
 S DVBAPPTS(1)=DTRPT_";"_EDATE,DVBAPPTS(4)=PNAM,DVBAPPTS(3)="R;I"
"RTN","DVBCAMI2",15,0)
 S DVBAPPTS("SORT")="P",DVBAPPTS("FLDS")="10"
"RTN","DVBCAMI2",16,0)
 S DVBACNT=$$SDAPI^SDAMA301(.DVBAPPTS)
"RTN","DVBCAMI2",17,0)
 I (DVBACNT'>0) K ^TMP($J,"SDAMA301") Q
"RTN","DVBCAMI2",18,0)
 S DVBADTM=""
"RTN","DVBCAMI2",19,0)
 F  S DVBADTM=$O(^TMP($J,"SDAMA301",PNAM,DVBADTM)) Q:('+DVBADTM)  D
"RTN","DVBCAMI2",20,0)
 .S DVBAPT=$G(^TMP($J,"SDAMA301",PNAM,DVBADTM))
"RTN","DVBCAMI2",21,0)
 .Q:(+$P(DVBAPT,"^",10)'=1)  ;quit if not C&P Appointment
"RTN","DVBCAMI2",22,0)
 .S ^TMP("DVBC",$J,9999999-DVBADTM,DVBADTM)=""
"RTN","DVBCAMI2",23,0)
 I ('$D(^TMP("DVBC",$J))) K ^TMP($J,"SDAMA301") Q
"RTN","DVBCAMI2",24,0)
 S DVBANDE=$O(^TMP("DVBC",$J,0)),DVBADTM=$O(^TMP("DVBC",$J,DVBANDE,0))
"RTN","DVBCAMI2",25,0)
 D:(DVBADTM]"")
"RTN","DVBCAMI2",26,0)
 .S X1=DVBADTM,X2=$S(DTRPT]"":DTRPT,1:DVBCNOW)
"RTN","DVBCAMI2",27,0)
 .D ^%DTC  ;calculate date diff
"RTN","DVBCAMI2",28,0)
 .S:(X>DVBADTS) TOT(DVBAPREXM,"30DAYEX")=TOT(DVBAPREXM,"30DAYEX")+1
"RTN","DVBCAMI2",29,0)
 K ^TMP($J,"SDAMA301")
"RTN","DVBCAMI2",30,0)
 Q
"RTN","DVBCAMI2",31,0)
 ;
"RTN","DVBCAMI2",32,0)
GO1 ;  ** TFIND=1 If any exams have not been transferred. **
"RTN","DVBCAMI2",33,0)
 K TFIND F XI=0:0 S XI=$O(^DVB(396.4,"C",REQDA,XI)) Q:XI=""  I $P(^DVB(396.4,XI,0),U,4)'="T" S TFIND=1
"RTN","DVBCAMI2",34,0)
 Q
"RTN","DVBCAMI2",35,0)
 ;if $D(TFIND) at least one exam to be done locally
"RTN","DVBCAMI2",36,0)
 ;
"RTN","DVBCAMI2",37,0)
PENDCNT I X'<0&(X'>90) S TOT(DVBAPREXM,"P90")=TOT(DVBAPREXM,"P90")+1
"RTN","DVBCAMI2",38,0)
 I X>90&(X'>120) S TOT(DVBAPREXM,"P121")=TOT(DVBAPREXM,"P121")+1
"RTN","DVBCAMI2",39,0)
 I X>120&(X'>150) S TOT(DVBAPREXM,"P151")=TOT(DVBAPREXM,"P151")+1
"RTN","DVBCAMI2",40,0)
 I X>150&(X'>180) S TOT(DVBAPREXM,"P181")=TOT(DVBAPREXM,"P181")+1
"RTN","DVBCAMI2",41,0)
 I X>180&(X'>365) S TOT(DVBAPREXM,"P365")=TOT(DVBAPREXM,"P365")+1
"RTN","DVBCAMI2",42,0)
 I X>365 S TOT(DVBAPREXM,"P366")=TOT(DVBAPREXM,"P366")+1
"RTN","DVBCAMI2",43,0)
 Q
"RTN","DVBCAMI2",44,0)
 ;
"RTN","DVBCAMI2",45,0)
SET ;
"RTN","DVBCAMI2",46,0)
 N DVBAPREXM
"RTN","DVBCAMI2",47,0)
 S DTA=^DVB(396.3,REQDA,0),DFN=$P(DTA,U,1),DTREQ=$P(DTA,U,2),DTRPT=$P(DTA,U,5),DTSCHEDC=$P(DTA,U,6),DTRQCMP=$P(DTA,U,7),PRIO=$P(DTA,U,10),DTTRANS=$P(DTA,U,12),OWNDOM=$P(DTA,U,22)
"RTN","DVBCAMI2",48,0)
 S DTREL=$P(DTA,U,14),RQSTAT=$P(DTA,U,18),DTCAN=$P(DTA,U,19) K DTA
"RTN","DVBCAMI2",49,0)
 S DTA=$S($D(^DVB(396.3,REQDA,4)):^(4),1:""),TROUT=$P(DTA,U,1),DTTROUT=$P(DTA,U,3),DTTRIN=$P(DTA,U,4),DTTRET=$P(DTA,U,5)
"RTN","DVBCAMI2",50,0)
 I DTCAN]"",DTCAN<DTRPT,DTRPT]"" S DTRPT=DTCAN ;cancelled last day of month
"RTN","DVBCAMI2",51,0)
 Q:DTRPT=""  ;never reported to MAS
"RTN","DVBCAMI2",52,0)
 ;check for Parent Request (retrieve current/parent Priority of Exam)
"RTN","DVBCAMI2",53,0)
 S DVBAPREXM=$$CHKREQ^DVBCIRP1(REQDA)
"RTN","DVBCAMI2",54,0)
 ;original report run (Exclude new priorities)
"RTN","DVBCAMI2",55,0)
 Q:((DVBAEXMP']"")&((";BDD;QS;DCS;DFD;AO;")[(";"_DVBAPREXM_";")))
"RTN","DVBCAMI2",56,0)
 ;report for specific priority
"RTN","DVBCAMI2",57,0)
 Q:((DVBAEXMP]"")&(DVBAEXMP'[(";"_DVBAPREXM_";")))
"RTN","DVBCAMI2",58,0)
 S:(DVBAEXMP']"") DVBAPREXM="ALL"  ;identifier for totals
"RTN","DVBCAMI2",59,0)
 I DTTRIN'<BDATE,DTTRIN'>EDATE S TOT(DVBAPREXM,"TRANSIN")=TOT(DVBAPREXM,"TRANSIN")+1 ;transfers in
"RTN","DVBCAMI2",60,0)
 I RQSTAT="CT",DTREL'<BDATE,DTREL'>EDATE S TOT(DVBAPREXM,"TRNRETTO")=TOT(DVBAPREXM,"TRNRETTO")+1 ;transfers returned to owners
"RTN","DVBCAMI2",61,0)
 I "^N^NT^P^S^T^"[RQSTAT,OWNDOM]"" S TOT(DVBAPREXM,"TRNPNDTO")=TOT(DVBAPREXM,"TRNPNDTO")+1 ;transfers pending return to others
"RTN","DVBCAMI2",62,0)
 Q:DTTRIN]""  ;** A transfer in (not counted further)
"RTN","DVBCAMI2",63,0)
 I DTREL'<BDATE,DTREL'>EDATE D DAY30
"RTN","DVBCAMI2",64,0)
 I DTTROUT'<BDATE,DTTROUT'>EDATE,TROUT="y" S TOT(DVBAPREXM,"TRANSOUT")=TOT(DVBAPREXM,"TRANSOUT")+1 ;transfers to other sites, not returns
"RTN","DVBCAMI2",65,0)
 I TROUT="",DTTRET'<BDATE,DTTRET'>EDATE S TOT(DVBAPREXM,"TRNRETFR")=TOT(DVBAPREXM,"TRNRETFR")+1 ;transfers returned from other sites
"RTN","DVBCAMI2",66,0)
 I TROUT="y",RQSTAT="P" S TOT(DVBAPREXM,"TRNPNDFR")=TOT(DVBAPREXM,"TRNPNDFR")+1 ;transfers pending return from other sites
"RTN","DVBCAMI2",67,0)
 I DTRPT'<BDATE,DTRPT'>EDATE,PRIO'="E" S TOT(DVBAPREXM,"RECEIVED")=TOT(DVBAPREXM,"RECEIVED")+1
"RTN","DVBCAMI2",68,0)
 I DTRPT'<BDATE,DTRPT'>EDATE,PRIO="E" S TOT(DVBAPREXM,"INSUFF")=TOT(DVBAPREXM,"INSUFF")+1
"RTN","DVBCAMI2",69,0)
 I DTRPT'<BDATE,DTRPT'>EDATE,RQSTAT'["X" D GO1 I $D(TFIND) S X1=$S(DTSCHEDC]"":DTSCHEDC,1:DVBCNOW),X2=DTRPT D ^%DTC I X>3 S TOT(DVBAPREXM,"3DAYSCH")=TOT(DVBAPREXM,"3DAYSCH")+1
"RTN","DVBCAMI2",70,0)
 I DTREL'<BDATE&(DTREL'>EDATE),RQSTAT="C"!(RQSTAT="R") S:PRIO'="E" DVBCPCTM=$$PROCDAY^DVBCUTL2(REQDA) S:PRIO="E" DVBCPCTM=$$INSFTME^DVBCUTA1(REQDA) S TOT(DVBAPREXM,"DAYS")=TOT(DVBAPREXM,"DAYS")+DVBCPCTM K DVBCPCTM
"RTN","DVBCAMI2",71,0)
 I DTRPT'>EDATE,"^N^NT^P^S^T^"[RQSTAT S X1=EDATE,X2=DTRPT D ^%DTC,PENDCNT
"RTN","DVBCAMI2",72,0)
 I DTRPT'>EDATE,"^C^CT^R^RX^X^"[RQSTAT,(+DTREL>EDATE)!(+DTCAN>EDATE) S X1=EDATE,X2=DTRPT D ^%DTC,PENDCNT
"RTN","DVBCAMI2",73,0)
 I DTREL'<BDATE&(DTREL'>EDATE),RQSTAT="C"!(RQSTAT="R") S TOT(DVBAPREXM,"COMPLETED")=TOT(DVBAPREXM,"COMPLETED")+1
"RTN","DVBCAMI2",74,0)
 I DTCAN'<BDATE,DTCAN'>EDATE,RQSTAT["X" S TOT(DVBAPREXM,"INCOMPLETE")=TOT(DVBAPREXM,"INCOMPLETE")+1
"RTN","DVBCAMI2",75,0)
 K DTRPT Q
"RTN","DVBCAMI2",76,0)
 ;
"RTN","DVBCAMI2",77,0)
GO ;
"RTN","DVBCAMI2",78,0)
 N DVBAEXMP,DVBAP,DVBAPREXM,DVBATOT
"RTN","DVBCAMI2",79,0)
 S DVBAEXMP=$S($G(DVBAPRTY)["BDD":";BDD;QS;",($G(DVBAPRTY)["DES"):";DCS;DFD;",($G(DVBAPRTY)["AO"):";AO;",1:"")
"RTN","DVBCAMI2",80,0)
 U IO K ^TMP($J) S PG=0,%DT="TS",X="NOW" D ^%DT S DVBCNOW=Y
"RTN","DVBCAMI2",81,0)
 S PNAM="" F JJ=0:0 S PNAM=$O(^DVB(396.3,"B",PNAM)) Q:PNAM=""  F REQDA=0:0 S REQDA=$O(^DVB(396.3,"B",PNAM,REQDA)) Q:REQDA=""  D SET
"RTN","DVBCAMI2",82,0)
 ;
"RTN","DVBCAMI2",83,0)
 S DVBAEXMP=$S($G(DVBAPRTY)["BDD":"BDD,QS",($G(DVBAPRTY)["DES"):"DCS,DFD",($G(DVBAPRTY)["AO"):"AO",1:"ALL")
"RTN","DVBCAMI2",84,0)
 M DVBATOT=TOT  ;save totals for all priorities into new array
"RTN","DVBCAMI2",85,0)
 F DVBAP=1:1:$L(DVBAEXMP,",") D
"RTN","DVBCAMI2",86,0)
 .S DVBAPREXM=$P(DVBAEXMP,",",DVBAP)
"RTN","DVBCAMI2",87,0)
 .;re-create TOT array for each priority of exam
"RTN","DVBCAMI2",88,0)
 .D CRTOT(DVBAPREXM,.DVBATOT,.TOT)
"RTN","DVBCAMI2",89,0)
 .S:($L(DVBAEXMP,",")>1) PREVMO=PREVMO(DVBAPREXM)
"RTN","DVBCAMI2",90,0)
 .S TOT("AVGDAYS")=0
"RTN","DVBCAMI2",91,0)
 .I TOT("COMPLETED")>0 S TOT("AVGDAYS")=TOT("DAYS")/TOT("COMPLETED"),TOT("AVGDAYS")=$J(TOT("AVGDAYS"),5,1)
"RTN","DVBCAMI2",92,0)
 .S TOT("PENDADJ")=PREVMO+TOT("RECEIVED")+TOT("INSUFF")-TOT("COMPLETED")-TOT("INCOMPLETE")
"RTN","DVBCAMI2",93,0)
 .D BULLTXT^DVBCAMI1(DVBAPREXM) D EN^DVBCAMI3((DVBAP=$L(DVBAEXMP,",")),DVBAPREXM)
"RTN","DVBCAMI2",94,0)
 Q
"RTN","DVBCAMI2",95,0)
 ;
"RTN","DVBCAMI2",96,0)
 ;Input : DVBACDE - Priority of Exam code to get Totals for
"RTN","DVBCAMI2",97,0)
 ;      : DVBATOT - Array holding total values for each specific priority
"RTN","DVBCAMI2",98,0)
 ;                  (By Ref)
"RTN","DVBCAMI2",99,0)
 ;      : TOT     - array to hold totals for requested priority (By Ref)
"RTN","DVBCAMI2",100,0)
 ;Output: TOT array with totals for requested priority
"RTN","DVBCAMI2",101,0)
CRTOT(DVBACDE,DVBATOT,TOT) ;create total array for specific priority exam report
"RTN","DVBCAMI2",102,0)
 N JI K TOT
"RTN","DVBCAMI2",103,0)
 F JI="3DAYSCH","30DAYEX","PENDADJ","TRANSIN","TRNRETTO","TRNPNDTO","TRANSOUT","TRNRETFR","TRNPNDFR","INSUFF" D
"RTN","DVBCAMI2",104,0)
 .S TOT(JI)=$G(DVBATOT(DVBACDE,JI))
"RTN","DVBCAMI2",105,0)
 F JI="RECEIVED","INCOMPLETE","DAYS","COMPLETED" D
"RTN","DVBCAMI2",106,0)
 .S TOT(JI)=$G(DVBATOT(DVBACDE,JI))
"RTN","DVBCAMI2",107,0)
 F JI="P90","P121","P151","P181","P365","P366" D
"RTN","DVBCAMI2",108,0)
 .S TOT(JI)=$G(DVBATOT(DVBACDE,JI))
"RTN","DVBCAMI2",109,0)
 Q
"RTN","DVBCAMI3")
0^20^B5656228^B4526354
"RTN","DVBCAMI3",1,0)
DVBCAMI3 ;ALB/GTS-557/THM-HOSPITAL AMIS 290 PRINTING, BULLETIN SEND ; 7/16/91  8:55 AM
"RTN","DVBCAMI3",2,0)
 ;;2.7;AMIE;**149**;Apr 10, 1995;Build 16
"RTN","DVBCAMI3",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBCAMI3",4,0)
 ;
"RTN","DVBCAMI3",5,0)
 ;Input: DVBALRPT - boolean value indicating if this is the last report
"RTN","DVBCAMI3",6,0)
 ;       DVBACDE  - Priority of Exam code for report
"RTN","DVBCAMI3",7,0)
 ;                   [ALL (Original Report),AO,BDD,QS,DCS,DFD]
"RTN","DVBCAMI3",8,0)
EN(DVBALRPT,DVBACDE) ;
"RTN","DVBCAMI3",9,0)
 U IO D HDR F JI=0.9:0 S JI=$O(^TMP($J,JI)) Q:JI=""  W ^(JI,0),! I IOST?1"C-".E,$Y>19 D PAUSE G:$D(OUT) EXIT D HDR
"RTN","DVBCAMI3",10,0)
 D PAUSE I $D(OUT)!(ANS=U) W:SBULL="Y" !!,*7,"Bulletin will NOT be sent!!",*7,! H 2 G EXIT
"RTN","DVBCAMI3",11,0)
 S:'$D(XMY) SBULL="N" I SBULL="Y" D SEND
"RTN","DVBCAMI3",12,0)
 ;
"RTN","DVBCAMI3",13,0)
EXIT ;
"RTN","DVBCAMI3",14,0)
 Q:('DVBALRPT)
"RTN","DVBCAMI3",15,0)
 D ^%ZISC
"RTN","DVBCAMI3",16,0)
 K TFIND,PG,OUT,PREVMO,UPDATE,DTTRET,DTTRIN,DTTROUT,TROUT,XI,XMY
"RTN","DVBCAMI3",17,0)
 D:$D(ZTQUEUED) KILL^%ZTLOAD G KILL^DVBCUTIL
"RTN","DVBCAMI3",18,0)
 ;
"RTN","DVBCAMI3",19,0)
BULL W ! S XMDUZ=DUZ,XMMG=$S($D(^VA(200,DUZ,0)):$P(^(0),U,1),1:"") D DES^XMA21
"RTN","DVBCAMI3",20,0)
 Q
"RTN","DVBCAMI3",21,0)
 ;
"RTN","DVBCAMI3",22,0)
SEND ;send AMIS 290 report in bulletin
"RTN","DVBCAMI3",23,0)
 N DVBAXMY M DVBAXMY=XMY
"RTN","DVBCAMI3",24,0)
 I IOST'?1"P-",'$D(ZTQUEUED) W !!,"Loading AMIS 290 bulletin ..." H 1
"RTN","DVBCAMI3",25,0)
 S XMSUB="AMIS 290 report "_$S((($G(DVBACDE)]"")&($G(DVBACDE)'="ALL")):"("_$G(DVBACDE)_" Exam Priority) ",1:"")_"for "
"RTN","DVBCAMI3",26,0)
 S Y=BDATE1 X ^DD("DD") S XMSUB=XMSUB_Y S Y=EDATE1 X ^DD("DD") S XMSUB=XMSUB_" to "_Y,XMTEXT="^TMP($J,"
"RTN","DVBCAMI3",27,0)
 D ^XMD K XMTEXT,XMSUB K ^TMP($J),^TMP("DVBC",$J)
"RTN","DVBCAMI3",28,0)
 I '$D(ZTQUEUED) W !!,*7,">> Mail message transmitted <<",!! H 2
"RTN","DVBCAMI3",29,0)
 M XMY=DVBAXMY  ;restore address list for subsequent bulletins
"RTN","DVBCAMI3",30,0)
 Q
"RTN","DVBCAMI3",31,0)
 ;
"RTN","DVBCAMI3",32,0)
HDR S PG=PG+1 W:(IOST?1"C-".E) @IOF
"RTN","DVBCAMI3",33,0)
 W "AMIS 290 Report for "_$$SITE^DVBCUTL4,?(IOM-9),"Page: ",PG,!
"RTN","DVBCAMI3",34,0)
 W $$PRHD^DVBCIUTL(DVBACDE),!
"RTN","DVBCAMI3",35,0)
 W "For date range: " S Y=BDATE1 X ^DD("DD") W Y W " to " S Y=EDATE1 X ^DD("DD") W Y,!
"RTN","DVBCAMI3",36,0)
 F LINE=1:1:80 W "-"
"RTN","DVBCAMI3",37,0)
 W !!
"RTN","DVBCAMI3",38,0)
 Q
"RTN","DVBCAMI3",39,0)
 ;
"RTN","DVBCAMI3",40,0)
PAUSE K OUT S ANS="" I IOST?1"C-".E W *7,!!,"Press RETURN to continue or ""^"" to exit  " R ANS:DTIME I '$T!(ANS[U) S OUT=1
"RTN","DVBCAMI3",41,0)
 Q
"RTN","DVBCAMIS")
0^21^B15380003^B7969924
"RTN","DVBCAMIS",1,0)
DVBCAMIS ;ALB/GTS-557/THM-2507 AMIS REPORT ;21 MAY 89@0822 ; 5/23/91  1:30 PM
"RTN","DVBCAMIS",2,0)
 ;;2.7;AMIE;**17,149**;Apr 10, 1995;Build 16
"RTN","DVBCAMIS",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBCAMIS",4,0)
 ;
"RTN","DVBCAMIS",5,0)
SETUP ;
"RTN","DVBCAMIS",6,0)
 N DVBAPRTY,DVBAEXMP,DVBAP
"RTN","DVBCAMIS",7,0)
 S UPDATE="N",HD="AMIS 290 REPORT" I '$D(DT) S X="T" D ^%DT S DT=Y
"RTN","DVBCAMIS",8,0)
 S DVBCDT(0)=$$FMTE^XLFDT(DT,"5DZ")
"RTN","DVBCAMIS",9,0)
 D HOME^%ZIS S FF=IOF
"RTN","DVBCAMIS",10,0)
 ;prompt for priority of exam
"RTN","DVBCAMIS",11,0)
 S DVBAPRTY=$$EXMPRTY^DVBCIUTL("Select the Priority of Exam for the AMIS 290 Report")
"RTN","DVBCAMIS",12,0)
 G:('(DVBAPRTY?.A)!(DVBAPRTY']"")) EXIT  ;quit if no priority of exam selected 
"RTN","DVBCAMIS",13,0)
 ;
"RTN","DVBCAMIS",14,0)
INIT ;initialize counter arrays
"RTN","DVBCAMIS",15,0)
 S DVBAEXMP=$S($G(DVBAPRTY)["BDD":"BDD,QS",($G(DVBAPRTY)["DES"):"DCS,DFD",($G(DVBAPRTY)["AO"):"AO",1:"ALL")
"RTN","DVBCAMIS",16,0)
 F JI="3DAYSCH","30DAYEX","PENDADJ","TRANSIN","TRNRETTO","TRNPNDTO","TRANSOUT","TRNRETFR","TRNPNDFR","INSUFF" D
"RTN","DVBCAMIS",17,0)
 .F DVBAP=1:1:$L(DVBAEXMP,",") S TOT($P(DVBAEXMP,",",DVBAP),JI)=0
"RTN","DVBCAMIS",18,0)
 F JI="RECEIVED","INCOMPLETE","DAYS","COMPLETED" D
"RTN","DVBCAMIS",19,0)
 .F DVBAP=1:1:$L(DVBAEXMP,",") S TOT($P(DVBAEXMP,",",DVBAP),JI)=0
"RTN","DVBCAMIS",20,0)
 F JI="P90","P121","P151","P181","P365","P366" D
"RTN","DVBCAMIS",21,0)
 .F DVBAP=1:1:$L(DVBAEXMP,",") S TOT($P(DVBAEXMP,",",DVBAP),JI)=0
"RTN","DVBCAMIS",22,0)
 ;
"RTN","DVBCAMIS",23,0)
EN W @IOF,!?(IOM-$L(HD)\2),HD,!!!
"RTN","DVBCAMIS",24,0)
 S %DT(0)=-DT,%DT="AE",%DT("A")="Enter STARTING DATE: " D ^%DT G:Y<0 EXIT S BDATE1=Y,BDATE=Y-.1
"RTN","DVBCAMIS",25,0)
 S %DT="AE",%DT("A")="    and ENDING DATE: " D ^%DT G:Y<0 EN S EDATE1=Y,EDATE=Y+.5
"RTN","DVBCAMIS",26,0)
 I EDATE1<BDATE1 W *7,!!,"Invalid date sequence - ending date is before starting date.",!! H 3 G EN
"RTN","DVBCAMIS",27,0)
ASK0 ;prompt for previous month pending count
"RTN","DVBCAMIS",28,0)
 N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT,DVBATXT
"RTN","DVBCAMIS",29,0)
 S DIR(0)="N^0:9999:0"
"RTN","DVBCAMIS",30,0)
 S DIR("?",1)="Enter the totals for the month previous to the one you are processing."
"RTN","DVBCAMIS",31,0)
 S DIR("?")="Must be a number from 0 to 9999."
"RTN","DVBCAMIS",32,0)
 S DIR("T")=DTIME  ;time-out value specified by system
"RTN","DVBCAMIS",33,0)
 W !!
"RTN","DVBCAMIS",34,0)
 ;get previous month pending count for each priority of exam to run
"RTN","DVBCAMIS",35,0)
 F DVBAP=1:1:$L(DVBAEXMP,",") Q:($G(DIRUT)!($G(DIROUT)))  D
"RTN","DVBCAMIS",36,0)
 .S DVBATXT=$$GPTYPE($P(DVBAEXMP,",",DVBAP))
"RTN","DVBCAMIS",37,0)
 .S DIR("A",1)="Please enter the total pending, "_DVBATXT
"RTN","DVBCAMIS",38,0)
 .S DIR("A")=" exam priorities, from the previous month"
"RTN","DVBCAMIS",39,0)
 .D ^DIR
"RTN","DVBCAMIS",40,0)
 .S:$L(DVBAEXMP,",")=1 PREVMO=$G(Y)
"RTN","DVBCAMIS",41,0)
 .S:$L(DVBAEXMP,",")>1 PREVMO($P(DVBAEXMP,",",DVBAP))=$G(Y)
"RTN","DVBCAMIS",42,0)
 G:($G(DIRUT)!($G(DIROUT))) EXIT  ;user timed/exited out
"RTN","DVBCAMIS",43,0)
 ;
"RTN","DVBCAMIS",44,0)
ASK K %DT S SBULL="Y"
"RTN","DVBCAMIS",45,0)
 W !!!,"Do you want to send a bulletin when processing is done"
"RTN","DVBCAMIS",46,0)
 S %=1 D YN^DICN G:$D(DTOUT)!(%<0) EXIT
"RTN","DVBCAMIS",47,0)
 I %=0 W !!,"Enter Y to send a bulletin to selected recipients or N not to send it at all.",!! G ASK
"RTN","DVBCAMIS",48,0)
 I %'=1 S SBULL="N"
"RTN","DVBCAMIS",49,0)
 I SBULL="Y" D BULL^DVBCAMI3
"RTN","DVBCAMIS",50,0)
 W ! S %ZIS="AEQ",%ZIS("A")="Output device: " D ^%ZIS G:POP EXIT
"RTN","DVBCAMIS",51,0)
 I $D(IO("Q")) S ZTRTN="GO^DVBCAMI2",ZTDESC="2507 Amis Report",ZTIO=ION F I="PREVMO*","RO*","BDATE*","TOT*","EDATE*","SBULL","DUZ","DVBCDT(0)","XM*","DVBAPRTY" S ZTSAVE(I)=""
"RTN","DVBCAMIS",52,0)
 I $D(IO("Q")) D ^%ZTLOAD W:$D(ZTSK) !!,"Request queued",!! H 1 K ZTSK G EXIT
"RTN","DVBCAMIS",53,0)
 G GO^DVBCAMI2
"RTN","DVBCAMIS",54,0)
 ;
"RTN","DVBCAMIS",55,0)
EXIT K PREVMO,UPDATE G KILL^DVBCUTIL
"RTN","DVBCAMIS",56,0)
 ;
"RTN","DVBCAMIS",57,0)
 ;
"RTN","DVBCAMIS",58,0)
 ;Input : DVBACDE - Code to get description for
"RTN","DVBCAMIS",59,0)
 ;           [BDD,QS,DCS,DFD,AO]
"RTN","DVBCAMIS",60,0)
 ;Ouput : Corresponding description for code
"RTN","DVBCAMIS",61,0)
GPTYPE(DVBACDE) ;get exam priority desc
"RTN","DVBCAMIS",62,0)
 N DVBATXT
"RTN","DVBCAMIS",63,0)
 Q:($G(DVBACDE)']"") ""
"RTN","DVBCAMIS",64,0)
 S DVBATXT=$S(DVBACDE="BDD":"'Benefits Delivery at Discharge ("_DVBACDE_")'",1:"")
"RTN","DVBCAMIS",65,0)
 S:(DVBATXT']"") DVBATXT=$S(DVBACDE="QS":"'Quick Start ("_DVBACDE_")'",1:"")
"RTN","DVBCAMIS",66,0)
 S:(DVBATXT']"") DVBATXT=$S(DVBACDE="DCS":"'DES Claimed Condition by Service Member ("_DVBACDE_")'",1:"")
"RTN","DVBCAMIS",67,0)
 S:(DVBATXT']"") DVBATXT=$S(DVBACDE="DFD":"'DES Fit for Duty ("_DVBACDE_")'",1:"")
"RTN","DVBCAMIS",68,0)
 S:(DVBATXT']"") DVBATXT=$S(DVBACDE="AO":"'Agent Orange ("_DVBACDE_")'",1:"")
"RTN","DVBCAMIS",69,0)
 S:(DVBATXT']"") DVBATXT=$S(DVBACDE="ALL":"excluding BDD,QS,DCS,DFD and AO",1:"")
"RTN","DVBCAMIS",70,0)
 Q DVBATXT
"RTN","DVBCAMR1")
0^22^B5153937^B3723902
"RTN","DVBCAMR1",1,0)
DVBCAMR1 ;ALB/GTS-557/THM-REGIONAL OFFICE AMIS REPORT BULLETIN TEXT ; 9/28/91  6:39 AM
"RTN","DVBCAMR1",2,0)
 ;;2.7;AMIE;**149**;Apr 10, 1995;Build 16
"RTN","DVBCAMR1",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBCAMR1",4,0)
 ;
"RTN","DVBCAMR1",5,0)
 ;Input: DVBACDE - Priority of Exam code to get Totals for
"RTN","DVBCAMR1",6,0)
BULLTXT(DVBACDE) ;
"RTN","DVBCAMR1",7,0)
 N DVBATXT,DVBADTS
"RTN","DVBCAMR1",8,0)
 S DVBATXT=$$PRHD^DVBCIUTL(DVBACDE)
"RTN","DVBCAMR1",9,0)
 S DVBATXT=$S(DVBATXT["Excludes":"Report "_DVBATXT,1:"Report for "_DVBATXT)
"RTN","DVBCAMR1",10,0)
 ;DES Type exams required to be completed in 45 days, all others 30
"RTN","DVBCAMR1",11,0)
 S DVBADTS=$S(((";DCS;DFD;")[(";"_DVBACDE_";")):45,1:30)
"RTN","DVBCAMR1",12,0)
 ;.01,.02 printed only in bulletin (if generated)
"RTN","DVBCAMR1",13,0)
 S ^TMP($J,.01,0)=DVBATXT
"RTN","DVBCAMR1",14,0)
 S ^TMP($J,.02,0)=" "
"RTN","DVBCAMR1",15,0)
 S ^TMP($J,1,0)="For regional office: "_RONAME_" ("_RONUM_")"
"RTN","DVBCAMR1",16,0)
 S ^TMP($J,2,0)=" "
"RTN","DVBCAMR1",17,0)
 S ^TMP($J,3,0)="Requests sent for date range: "_TOT("SENT")
"RTN","DVBCAMR1",18,0)
 S ^TMP($J,4,0)="Exams received incomplete: "_TOT("INCOMPLETE")
"RTN","DVBCAMR1",19,0)
 S ^TMP($J,5,0)="Exams received complete: "_TOT("COMPLETED")
"RTN","DVBCAMR1",20,0)
 S ^TMP($J,5.3,0)="Exams returned as insufficient: "_TOT("INSUFF")_"  ("_$S(TOT("SENT")>0:$J(TOT("INSUFF")/TOT("SENT")*100,0,0),1:0)_"%)"
"RTN","DVBCAMR1",21,0)
 S ^TMP($J,6,0)="Pending for office "_RONUM_" at end of month: "_TOT("PENDADJ")
"RTN","DVBCAMR1",22,0)
 S ^TMP($J,7,0)="Average processing time: "_TOT("AVGDAYS")_$S(TOT("AVGDAYS")>1!(TOT("AVGDAYS")<1):" days",1:" day")
"RTN","DVBCAMR1",23,0)
 S ^TMP($J,8,0)=" "
"RTN","DVBCAMR1",24,0)
 S ^TMP($J,9,0)="Greater than 3 days to schedule: "_TOT("3DAYSCH")
"RTN","DVBCAMR1",25,0)
 S ^TMP($J,10,0)="Greater than "_DVBADTS_" days to examine: "_TOT("30DAYEX")
"RTN","DVBCAMR1",26,0)
 S ^TMP($J,11,0)=" "
"RTN","DVBCAMR1",27,0)
 S ^TMP($J,12,0)="Pending, 0-90 days: "_TOT("P90")
"RTN","DVBCAMR1",28,0)
 S ^TMP($J,13,0)="Pending, 91-120 days: "_TOT("P121")
"RTN","DVBCAMR1",29,0)
 S ^TMP($J,14,0)="Pending, 121-150 days: "_TOT("P151")
"RTN","DVBCAMR1",30,0)
 S ^TMP($J,15,0)="Pending, 151-180 days: "_TOT("P181")
"RTN","DVBCAMR1",31,0)
 S ^TMP($J,16,0)="Pending, 181-365 days: "_TOT("P365")
"RTN","DVBCAMR1",32,0)
 S ^TMP($J,17,0)="Pending, 366 or more days: "_TOT("P366")
"RTN","DVBCAMR1",33,0)
 Q
"RTN","DVBCAMR2")
0^23^B35979419^B17624882
"RTN","DVBCAMR2",1,0)
DVBCAMR2 ;ALB/GTS-557/THM-REGIONAL OFFICE AMIS 290 REPORT, CALCULATIONS ; 9/28/91  6:43 AM
"RTN","DVBCAMR2",2,0)
 ;;2.7;AMIE;**149**;Apr 10, 1995;Build 16
"RTN","DVBCAMR2",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBCAMR2",4,0)
 ;
"RTN","DVBCAMR2",5,0)
 ;** Version Changes
"RTN","DVBCAMR2",6,0)
 ;   2.7 - GTS/Coded to adjust 35 day clock calc  (Enhc 13)
"RTN","DVBCAMR2",7,0)
 ;
"RTN","DVBCAMR2",8,0)
DAY30 ;exam completion
"RTN","DVBCAMR2",9,0)
 N DVBADTS,DVBAPPTS,DVBACNT,DVBADTM,DVBANDE,X,X1,X2
"RTN","DVBCAMR2",10,0)
 K ^TMP("DVBC",$J),^TMP($J,"SDAMA301")
"RTN","DVBCAMR2",11,0)
 ;DES Type exams required to be completed in 45 days, all others 30
"RTN","DVBCAMR2",12,0)
 S DVBADTS=$S(((";DCS;DFD;")[(";"_DVBAPREXM_";")):45,1:30)
"RTN","DVBCAMR2",13,0)
 ;setup call to scheduling API
"RTN","DVBCAMR2",14,0)
 S DVBAPPTS(1)=DTRPT_";"_EDATE,DVBAPPTS(4)=PNAM,DVBAPPTS(3)="R;I;NT"
"RTN","DVBCAMR2",15,0)
 S DVBAPPTS("SORT")="P",DVBAPPTS("FLDS")="10"
"RTN","DVBCAMR2",16,0)
 S DVBACNT=$$SDAPI^SDAMA301(.DVBAPPTS)
"RTN","DVBCAMR2",17,0)
 I (DVBACNT'>0) K ^TMP($J,"SDAMA301") Q
"RTN","DVBCAMR2",18,0)
 S DVBADTM=""
"RTN","DVBCAMR2",19,0)
 F  S DVBADTM=$O(^TMP($J,"SDAMA301",PNAM,DVBADTM)) Q:('+DVBADTM)  D
"RTN","DVBCAMR2",20,0)
 .S ^TMP("DVBC",$J,9999999-DVBADTM,DVBADTM)=""
"RTN","DVBCAMR2",21,0)
 S DVBANDE=$O(^TMP("DVBC",$J,0)),DVBADTM=$O(^TMP("DVBC",$J,DVBANDE,0))
"RTN","DVBCAMR2",22,0)
 D:(DVBADTM]"")
"RTN","DVBCAMR2",23,0)
 .S X2=DVBADTM,X1=$S(DTSCHEDC]"":DTSCHEDC,1:DVBCNOW)
"RTN","DVBCAMR2",24,0)
 .D ^%DTC  ;calculate date diff
"RTN","DVBCAMR2",25,0)
 .S:(X>DVBADTS) TOT(DVBAPREXM,"30DAYEX")=TOT(DVBAPREXM,"30DAYEX")+1
"RTN","DVBCAMR2",26,0)
 K ^TMP($J,"SDAMA301")
"RTN","DVBCAMR2",27,0)
 Q
"RTN","DVBCAMR2",28,0)
 ;
"RTN","DVBCAMR2",29,0)
PENDCNT I X'<0&(X'>90) S TOT(DVBAPREXM,"P90")=TOT(DVBAPREXM,"P90")+1
"RTN","DVBCAMR2",30,0)
 I X>90&(X'>120) S TOT(DVBAPREXM,"P121")=TOT(DVBAPREXM,"P121")+1
"RTN","DVBCAMR2",31,0)
 I X>120&(X'>150) S TOT(DVBAPREXM,"P151")=TOT(DVBAPREXM,"P151")+1
"RTN","DVBCAMR2",32,0)
 I X>150&(X'>180) S TOT(DVBAPREXM,"P181")=TOT(DVBAPREXM,"P181")+1
"RTN","DVBCAMR2",33,0)
 I X>180&(X'>365) S TOT(DVBAPREXM,"P365")=TOT(DVBAPREXM,"P365")+1
"RTN","DVBCAMR2",34,0)
 I X>365 S TOT(DVBAPREXM,"P366")=TOT(DVBAPREXM,"P366")+1
"RTN","DVBCAMR2",35,0)
 Q
"RTN","DVBCAMR2",36,0)
 ;
"RTN","DVBCAMR2",37,0)
SET ;
"RTN","DVBCAMR2",38,0)
 N DVBAPREXM
"RTN","DVBCAMR2",39,0)
 S DTA=^DVB(396.3,REQDA,0),DTREQ=$P(DTA,U,2),XRONUM=$P(DTA,U,3),XRONUM=$S($D(^DIC(4,+XRONUM,99)):$P(^(99),U,1),1:0) Q:XRONUM'=RONUM&(RONUM'="ALL")
"RTN","DVBCAMR2",40,0)
 K XRONUM S DTRPT=$P(DTA,U,5),DTSCHEDC=$P(DTA,U,6),DTRQCMP=$P(DTA,U,7),DTTRANS=$P(DTA,U,12),DTREL=$P(DTA,U,14),RQSTAT=$P(DTA,U,18),DTCAN=$P(DTA,U,19),PRIO=$P(DTA,U,10) K DTA
"RTN","DVBCAMR2",41,0)
 I DTRPT="",DTCAN]"" S DTRPT=DTCAN
"RTN","DVBCAMR2",42,0)
 Q:DTRPT=""  ;requests never printed
"RTN","DVBCAMR2",43,0)
 ;check for Parent Request (retrieve current/parent Priority of Exam)
"RTN","DVBCAMR2",44,0)
 S DVBAPREXM=$$CHKREQ^DVBCIRP1(REQDA)
"RTN","DVBCAMR2",45,0)
 ;original report run (Exclude new priorities)
"RTN","DVBCAMR2",46,0)
 Q:((DVBAEXMP']"")&((";BDD;QS;DCS;DFD;AO;")[(";"_DVBAPREXM_";")))
"RTN","DVBCAMR2",47,0)
 ;report for specific priority
"RTN","DVBCAMR2",48,0)
 Q:((DVBAEXMP]"")&(DVBAEXMP'[(";"_DVBAPREXM_";")))
"RTN","DVBCAMR2",49,0)
 S:(DVBAEXMP']"") DVBAPREXM="ALL"  ;identifier for totals
"RTN","DVBCAMR2",50,0)
 I DTREL'<BDATE,DTREL'>EDATE D DAY30
"RTN","DVBCAMR2",51,0)
 I DTRPT'<BDATE,DTRPT'>EDATE S TOT(DVBAPREXM,"SENT")=TOT(DVBAPREXM,"SENT")+1
"RTN","DVBCAMR2",52,0)
 I DTRPT'<BDATE,DTRPT'>EDATE,RQSTAT'["X" S X1=$S(DTSCHEDC]"":DTSCHEDC,1:DVBCNOW),X2=DTRPT D ^%DTC I X>3 S TOT(DVBAPREXM,"3DAYSCH")=TOT(DVBAPREXM,"3DAYSCH")+1
"RTN","DVBCAMR2",53,0)
 I DTREL'<BDATE&(DTREL'>EDATE),RQSTAT="C"!(RQSTAT="R") S:PRIO'="E" DVBCPCTM=$$PROCDAY^DVBCUTL2(REQDA) S:PRIO="E" DVBCPCTM=$$INSFTME^DVBCUTA1(REQDA) S TOT(DVBAPREXM,"DAYS")=TOT(DVBAPREXM,"DAYS")+DVBCPCTM K DVBCPCTM
"RTN","DVBCAMR2",54,0)
 I DTRPT'>EDATE,"^P^S^T"[RQSTAT S TOT(DVBAPREXM,"PENDADJ")=TOT(DVBAPREXM,"PENDADJ")+1,X1=EDATE,X2=DTRPT D ^%DTC,PENDCNT
"RTN","DVBCAMR2",55,0)
 I DTRPT'>EDATE,"^C^CT^R^RX^X^"[RQSTAT,(+DTREL>EDATE)!(+DTCAN>EDATE) S TOT(DVBAPREXM,"PENDADJ")=TOT(DVBAPREXM,"PENDADJ")+1,X1=EDATE,X2=DTRPT D ^%DTC,PENDCNT
"RTN","DVBCAMR2",56,0)
 I DTREL'<BDATE&(DTREL'>EDATE),RQSTAT["C"!(RQSTAT="R") S TOT(DVBAPREXM,"COMPLETED")=TOT(DVBAPREXM,"COMPLETED")+1
"RTN","DVBCAMR2",57,0)
 I DTRPT'<BDATE,DTRPT'>EDATE,PRIO="E" S TOT(DVBAPREXM,"INSUFF")=TOT(DVBAPREXM,"INSUFF")+1
"RTN","DVBCAMR2",58,0)
 I DTCAN'<BDATE&(DTCAN'>EDATE),RQSTAT="X"!(RQSTAT="RX") S TOT(DVBAPREXM,"INCOMPLETE")=TOT(DVBAPREXM,"INCOMPLETE")+1
"RTN","DVBCAMR2",59,0)
 K DTRPT Q
"RTN","DVBCAMR2",60,0)
 ;
"RTN","DVBCAMR2",61,0)
GO ;
"RTN","DVBCAMR2",62,0)
 N DVBAEXMP,DVBAP,DVBAPREXM,DVBATOT,DVBAOUT,PG
"RTN","DVBCAMR2",63,0)
 S PG=0
"RTN","DVBCAMR2",64,0)
 S DVBAEXMP=$S($G(DVBAPRTY)["BDD":";BDD;QS;",($G(DVBAPRTY)["DES"):";DCS;DFD;",($G(DVBAPRTY)["AO"):";AO;",1:"")
"RTN","DVBCAMR2",65,0)
 S %DT="TS",X="NOW" D ^%DT S DVBCNOW=Y K ^TMP($J)
"RTN","DVBCAMR2",66,0)
 S PNAM="" F JJ=0:0 S PNAM=$O(^DVB(396.3,"B",PNAM)) Q:PNAM=""  F REQDA=0:0 S REQDA=$O(^DVB(396.3,"B",PNAM,REQDA)) Q:REQDA=""  D SET
"RTN","DVBCAMR2",67,0)
 ;
"RTN","DVBCAMR2",68,0)
 S DVBAEXMP=$S($G(DVBAPRTY)["BDD":"BDD,QS",($G(DVBAPRTY)["DES"):"DCS,DFD",($G(DVBAPRTY)["AO"):"AO",1:"ALL")
"RTN","DVBCAMR2",69,0)
 M DVBATOT=TOT  ;save totals for all priorities into new array
"RTN","DVBCAMR2",70,0)
 F DVBAP=1:1:$L(DVBAEXMP,",") D
"RTN","DVBCAMR2",71,0)
 .K DVBAOUT S DVBAPREXM=$P(DVBAEXMP,",",DVBAP)
"RTN","DVBCAMR2",72,0)
 .;re-create TOT array for each priority of exam
"RTN","DVBCAMR2",73,0)
 .D CRTOT(DVBAPREXM,.DVBATOT,.TOT)
"RTN","DVBCAMR2",74,0)
 .S TOT("AVGDAYS")=0
"RTN","DVBCAMR2",75,0)
 .I TOT("COMPLETED")>0 S TOT("AVGDAYS")=TOT("DAYS")/TOT("COMPLETED"),TOT("AVGDAYS")=$J(TOT("AVGDAYS"),5,1)
"RTN","DVBCAMR2",76,0)
 .D BULLTXT^DVBCAMR1(DVBAPREXM)
"RTN","DVBCAMR2",77,0)
 .U IO D HDR F JI=0.9:0 S JI=$O(^TMP($J,JI)) Q:JI=""  W ^(JI,0),! I IOST?1"C-".E,$Y>19 D PAUSE G:$D(DVBAOUT) EXIT D HDR
"RTN","DVBCAMR2",78,0)
 .D PAUSE I $D(DVBAOUT) W:SBULL="Y" !!,*7,"Bulletin will NOT be sent!!",*7,! H 2 G EXIT
"RTN","DVBCAMR2",79,0)
 .S:'$D(XMY) SBULL="N" I SBULL="Y" D SEND
"RTN","DVBCAMR2",80,0)
 D ^%ZISC
"RTN","DVBCAMR2",81,0)
 ;
"RTN","DVBCAMR2",82,0)
EXIT ;
"RTN","DVBCAMR2",83,0)
 Q:(DVBAP'=$L(DVBAEXMP,","))  ;another report to run
"RTN","DVBCAMR2",84,0)
 D:$D(ZTQUEUED) KILL^%ZTLOAD K PREVMO,UPDATE,XMY G KILL^DVBCUTIL
"RTN","DVBCAMR2",85,0)
 ;
"RTN","DVBCAMR2",86,0)
BULL W ! S XMDUZ=DUZ,XMMG=$S($D(^VA(200,DUZ,0)):$P(^(0),U,1),1:"") D DES^XMA21
"RTN","DVBCAMR2",87,0)
 Q
"RTN","DVBCAMR2",88,0)
 ;
"RTN","DVBCAMR2",89,0)
SEND ;send 2507 AMIS report in bulletin
"RTN","DVBCAMR2",90,0)
 N DVBAXMY M DVBAXMY=XMY
"RTN","DVBCAMR2",91,0)
 S XMSUB="RO AMIS 290 Report "_$S((($G(DVBAPREXM)]"")&($G(DVBAPREXM)'="ALL")):"("_$G(DVBAPREXM)_" Exam Priority) ",1:"")_"-  "
"RTN","DVBCAMR2",92,0)
 S Y=BDATE1 X ^DD("DD") S XMSUB=XMSUB_Y S Y=EDATE1 X ^DD("DD") S XMSUB=XMSUB_" to "_Y,XMTEXT="^TMP($J,"
"RTN","DVBCAMR2",93,0)
 D ^XMD K XMTEXT,XMSUB K ^TMP($J)
"RTN","DVBCAMR2",94,0)
 I '$D(ZTSK) W !!,*7,">>> Mail message transmitted. <<<",!! H 2
"RTN","DVBCAMR2",95,0)
 M XMY=DVBAXMY  ;restore address list for subsequent bulletins
"RTN","DVBCAMR2",96,0)
 Q
"RTN","DVBCAMR2",97,0)
 ;
"RTN","DVBCAMR2",98,0)
HDR S PG=PG+1 W:(IOST?1"C-".E) @IOF
"RTN","DVBCAMR2",99,0)
 W "Regional Office AMIS 290 Report for C&P Examinations",?(IOM-9),"Page: ",PG,!
"RTN","DVBCAMR2",100,0)
 W $$PRHD^DVBCIUTL(DVBAPREXM),!
"RTN","DVBCAMR2",101,0)
 W "For date range: " S Y=BDATE1 X ^DD("DD") W Y W " to " S Y=EDATE1 X ^DD("DD") W Y,!
"RTN","DVBCAMR2",102,0)
 F LINE=1:1:80 W "-"
"RTN","DVBCAMR2",103,0)
 W !!
"RTN","DVBCAMR2",104,0)
 Q
"RTN","DVBCAMR2",105,0)
 ;
"RTN","DVBCAMR2",106,0)
PAUSE N ANS K DVBAOUT S ANS="" I IOST?1"C-".E W *7,!!,"Press RETURN to continue or ""^"" to exit  " R ANS:DTIME I '$T!(ANS[U) S DVBAOUT=1
"RTN","DVBCAMR2",107,0)
 Q
"RTN","DVBCAMR2",108,0)
 ;
"RTN","DVBCAMR2",109,0)
 ;Input : DVBACDE - Priority of Exam code to get Totals for
"RTN","DVBCAMR2",110,0)
 ;      : DVBATOT - Array holding total values for each specific priority
"RTN","DVBCAMR2",111,0)
 ;                  (By Ref)
"RTN","DVBCAMR2",112,0)
 ;      : TOT     - array to hold totals for requested priority (By Ref)
"RTN","DVBCAMR2",113,0)
 ;Output: TOT array with totals for requested priority
"RTN","DVBCAMR2",114,0)
CRTOT(DVBACDE,DVBATOT,TOT) ;create total array for specific priority exam report
"RTN","DVBCAMR2",115,0)
 N JI K TOT
"RTN","DVBCAMR2",116,0)
 F JI="3DAYSCH","30DAYEX","PENDADJ" D
"RTN","DVBCAMR2",117,0)
 .S TOT(JI)=$G(DVBATOT(DVBACDE,JI))
"RTN","DVBCAMR2",118,0)
 F JI="INSUFF","SENT","INCOMPLETE","DAYS","COMPLETED" D
"RTN","DVBCAMR2",119,0)
 .S TOT(JI)=$G(DVBATOT(DVBACDE,JI))
"RTN","DVBCAMR2",120,0)
 F JI="P90","P121","P151","P181","P365","P366" D
"RTN","DVBCAMR2",121,0)
 .S TOT(JI)=$G(DVBATOT(DVBACDE,JI))
"RTN","DVBCAMR2",122,0)
 Q
"RTN","DVBCAMRO")
0^24^B10861262^B7327338
"RTN","DVBCAMRO",1,0)
DVBCAMRO ;ALB ISC/THM-REGIONAL OFFICE 2507 AMIS REPORT ; 9/28/91  6:39 AM
"RTN","DVBCAMRO",2,0)
 ;;2.7;AMIE;**17,149**;Apr 10, 1995;Build 16
"RTN","DVBCAMRO",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBCAMRO",4,0)
 ;
"RTN","DVBCAMRO",5,0)
SETUP ;
"RTN","DVBCAMRO",6,0)
 N DVBAPRTY,DVBAEXMP,DVBAP,DTOUT,DUOUT
"RTN","DVBCAMRO",7,0)
 S UPDATE="N",PREVMO=$P(^DVB(396.1,1,0),U,11),HD="REGIONAL OFFICE 2507 AMIS REPORT" I '$D(DT) S X="T" D ^%DT S DT=Y
"RTN","DVBCAMRO",8,0)
 S DVBCDT(0)=$$FMTE^XLFDT(DT,"5DZ")
"RTN","DVBCAMRO",9,0)
 D HOME^%ZIS S FF=IOF
"RTN","DVBCAMRO",10,0)
 ;prompt for priority of exam
"RTN","DVBCAMRO",11,0)
 S DVBAPRTY=$$EXMPRTY^DVBCIUTL("Select the Priority of Exam for the 2507 AMIS Report")
"RTN","DVBCAMRO",12,0)
 G:('(DVBAPRTY?.A)!(DVBAPRTY']"")) EXIT  ;quit if no priority of exam selected
"RTN","DVBCAMRO",13,0)
 ;
"RTN","DVBCAMRO",14,0)
INIT ;initialize counter arrys
"RTN","DVBCAMRO",15,0)
 S DVBAEXMP=$S($G(DVBAPRTY)["BDD":"BDD,QS",($G(DVBAPRTY)["DES"):"DCS,DFD",($G(DVBAPRTY)["AO"):"AO",1:"ALL")
"RTN","DVBCAMRO",16,0)
 F JI="3DAYSCH","30DAYEX","PENDADJ" D
"RTN","DVBCAMRO",17,0)
 .F DVBAP=1:1:$L(DVBAEXMP,",") S TOT($P(DVBAEXMP,",",DVBAP),JI)=0
"RTN","DVBCAMRO",18,0)
 F JI="INSUFF","SENT","INCOMPLETE","DAYS","COMPLETED" D
"RTN","DVBCAMRO",19,0)
 .F DVBAP=1:1:$L(DVBAEXMP,",") S TOT($P(DVBAEXMP,",",DVBAP),JI)=0
"RTN","DVBCAMRO",20,0)
 F JI="P90","P121","P151","P181","P365","P366" D
"RTN","DVBCAMRO",21,0)
 .F DVBAP=1:1:$L(DVBAEXMP,",") S TOT($P(DVBAEXMP,",",DVBAP),JI)=0
"RTN","DVBCAMRO",22,0)
 ;
"RTN","DVBCAMRO",23,0)
EN W @IOF,!?(IOM-$L(HD)\2),HD,!!!
"RTN","DVBCAMRO",24,0)
 S %DT(0)=-DT,%DT="AE",%DT("A")="Enter STARTING DATE: " D ^%DT G:Y<0 EXIT S BDATE1=Y,BDATE=Y-.1
"RTN","DVBCAMRO",25,0)
 S %DT="AE",%DT("A")="    and ENDING DATE: " D ^%DT G:Y<0 EN S EDATE1=Y,EDATE=Y+.5
"RTN","DVBCAMRO",26,0)
 I EDATE1<BDATE1 W *7,!!,"Invalid date sequence - ending date is before starting date.",!! H 3 G EN
"RTN","DVBCAMRO",27,0)
 W !!,"When selecting regional offices you may enter an individual station name,",!,"station number or nothing if all regional offices should be searched.",!!
"RTN","DVBCAMRO",28,0)
 S DIC("A")="Select REGIONAL OFFICE NUMBER: ",DIC(0)="AEQM",DIC="^DIC(4," D ^DIC G:($D(DTOUT)!($D(DUOUT))) EXIT
"RTN","DVBCAMRO",29,0)
 I +Y>0 S DA=+Y,RONUM=$S($D(^DIC(4,DA,99)):$P(^(99),U,1),1:"000"),RONAME=$P(Y,U,2)
"RTN","DVBCAMRO",30,0)
 I +Y<0 S (RONUM,RONAME)="ALL"
"RTN","DVBCAMRO",31,0)
 ;
"RTN","DVBCAMRO",32,0)
ASK K %DT S SBULL="Y" W !!!,"Want to send a bulletin when processing is done" S %=1 D YN^DICN G:$D(DTOUT)!(%<0) EXIT
"RTN","DVBCAMRO",33,0)
 I $D(%Y) I %Y["?" W !!,"Enter Y to send the bulletin to selected recipients or N not to send it at all.",!! G ASK
"RTN","DVBCAMRO",34,0)
 I %'=1 S SBULL="N"
"RTN","DVBCAMRO",35,0)
 I SBULL="Y" D BULL^DVBCAMR2
"RTN","DVBCAMRO",36,0)
 W ! S %ZIS="AEQ",%ZIS("B")="0;P-OTHER",%ZIS("A")="Output device: " D ^%ZIS G:POP EXIT
"RTN","DVBCAMRO",37,0)
 I $D(IO("Q")) S ZTRTN="GO^DVBCAMR2",ZTDESC="2507 Amis Report",ZTIO=ION F I="UPDATE","RO*","PREVMO","BDATE*","TOT*","EDATE*","SBULL","DUZ","DVBCDT(0)","XM*","DVBAPRTY" S ZTSAVE(I)=""
"RTN","DVBCAMRO",38,0)
 I $D(IO("Q")) D ^%ZTLOAD W:$D(ZTSK) !!,"Request queued",!! H 1 K ZTSK G EXIT
"RTN","DVBCAMRO",39,0)
 G GO^DVBCAMR2
"RTN","DVBCAMRO",40,0)
 ;
"RTN","DVBCAMRO",41,0)
EXIT K PREVMO,UPDATE G KILL^DVBCUTIL
"RTN","DVBCENQ1")
0^26^B27237652^B27476723
"RTN","DVBCENQ1",1,0)
DVBCENQ1 ;ALB/GTS,557/THM - 2507 INQUIRY DISPLAY ; 10/14/2009  1:00 PM
"RTN","DVBCENQ1",2,0)
 ;;2.7;AMIE;**17,57,143,149**;Apr 10, 1995;Build 16
"RTN","DVBCENQ1",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBCENQ1",4,0)
 ;
"RTN","DVBCENQ1",5,0)
 G START
"RTN","DVBCENQ1",6,0)
CON K OUT I IOST?1"C-".E W !,"Press [RETURN] to continue or ""^"" to stop   " R ANS:DTIME S:ANS=U!('$T) OUT=1 Q:$D(OUT)  D HDR
"RTN","DVBCENQ1",7,0)
 I IOST?1"P-".E,$Y>45 W @IOF D HDR
"RTN","DVBCENQ1",8,0)
 Q
"RTN","DVBCENQ1",9,0)
 ;
"RTN","DVBCENQ1",10,0)
START S PGHD="COMPENSATION AND PENSION EXAM INQUIRY",PG=0
"RTN","DVBCENQ1",11,0)
 D HDR
"RTN","DVBCENQ1",12,0)
 W !?2,"Name: ",PNAM,?56,"SSN: ",SSN
"RTN","DVBCENQ1",13,0)
 W !?51,"C-Number: ",CNUM
"RTN","DVBCENQ1",14,0)
 W !?56,"DOB: " S Y=DOB X ^DD("DD") W Y
"RTN","DVBCENQ1",15,0)
 W !?4,"Address: ",ADR1
"RTN","DVBCENQ1",16,0)
 W ! W:ADR2]"" ?13,ADR2
"RTN","DVBCENQ1",17,0)
 W ! W:ADR3]"" ?13,ADR3
"RTN","DVBCENQ1",18,0)
 W !!?7,"City: ",CITY
"RTN","DVBCENQ1",19,0)
 I $$ISFORGN^DVBCUTIL(COUNTRY) D
"RTN","DVBCENQ1",20,0)
 . W !?3,"Province: ",PROVINCE,?48,"Res Phone: ",HOMPHON
"RTN","DVBCENQ1",21,0)
 . W !,"Postal Code: ",POSTALCD,?48,"Bus Phone: ",BUSPHON
"RTN","DVBCENQ1",22,0)
 E  D
"RTN","DVBCENQ1",23,0)
 . W !?6,"State: ",STATE,?48,"Res Phone: ",HOMPHON
"RTN","DVBCENQ1",24,0)
 . W !?6,"Zip+4: ",ZIP,?48,"Bus Phone: ",BUSPHON
"RTN","DVBCENQ1",25,0)
 I COUNTRY>0 D
"RTN","DVBCENQ1",26,0)
 . W !?4,"Country: ",$$GETCNTRY^DVBCUTIL(COUNTRY),!
"RTN","DVBCENQ1",27,0)
 E  D
"RTN","DVBCENQ1",28,0)
 . W !
"RTN","DVBCENQ1",29,0)
 W !,"Entered active service: " S Y=EOD X ^DD("DD") S:Y="" Y="Not specified" W Y,! S Y=RAD X ^DD("DD") S:Y="" Y="Not specified" W "Released active service: " W Y,!
"RTN","DVBCENQ1",30,0)
 F LINE=1:1:80 W "="
"RTN","DVBCENQ1",31,0)
 W !! D CON Q:$D(OUT)  D ^DVBCENQ2,CON Q:$D(OUT)  D ^DVBCEEXM,CON Q:$D(OUT)  S REQDT=$P(^DVB(396.3,REQDA,0),U,2)
"RTN","DVBCENQ1",32,0)
 W !,"This request was initiated on " S Y=REQDT X ^DD("DD") W $P(Y,"@",1)," at ",$P(Y,"@",2),!!?17,"Requester: ",REQN,!,"Requesting Regional Office: ",RONAME,!
"RTN","DVBCENQ1",33,0)
 W "VHA Division Processing Request: "_$P($$SITE^VASITE(,$P(^DVB(396.3,REQDA,1),U,4)),U,2),!
"RTN","DVBCENQ1",34,0)
 I $D(^DVB(396.4,"C",REQDA)) W !?3,"Exams on this request: " D TST^DVBCUTL2 W !
"RTN","DVBCENQ1",35,0)
 I '$D(^DVB(396.4,"C",REQDA)) W !?3,"(No exams have yet been entered)",!
"RTN","DVBCENQ1",36,0)
 W !,"** Status of request: " S (XSTAT,STAT)=$P(^DVB(396.3,REQDA,0),U,18)
"RTN","DVBCENQ1",37,0)
 S STAT=$S(XSTAT="N":"New",XSTAT="P":"Pending, reported to MAS",XSTAT="T":"Transcribed",XSTAT="S":"Scheduled",XSTAT="R":"Released, not printed",XSTAT="C":"Completed",XSTAT="CT":"Completed, transferred out",XSTAT="NT":"New, transferred in",1:"")
"RTN","DVBCENQ1",38,0)
 I STAT]"" W STAT
"RTN","DVBCENQ1",39,0)
 I XSTAT="R"!(XSTAT="C") W !!?9,"Released on " S Y=$P(^DVB(396.3,REQDA,0),U,14) X ^DD("DD") W Y," by " S RELBY=$P(^DVB(396.3,REQDA,0),U,15),RELBY=$S($D(^VA(200,+RELBY,0)):$P(^(0),U,1),1:"Unknown user") W RELBY,!
"RTN","DVBCENQ1",40,0)
 I XSTAT="C" W "Printed by the RO on " S Y=$P(^DVB(396.3,REQDA,0),U,16) X ^DD("DD") W Y," by " S PRBY=$P(^DVB(396.3,REQDA,0),U,17),PRBY=$S($D(^VA(200,+PRBY,0)):$P(^(0),U,1),1:"Unknown user") W PRBY,!
"RTN","DVBCENQ1",41,0)
 I STAT="" S STAT=$S(XSTAT="X":"Cancelled by MAS",XSTAT="RX":"Cancelled by RO",1:"Unknown") W STAT I STAT["Cancelled" W "  (Cancelled on " S CANDT=$P(^DVB(396.3,REQDA,0),U,19) W $$FMTE^XLFDT(CANDT,"5DZ"),")"
"RTN","DVBCENQ1",42,0)
 ;S X=$S($D(^DVB(396.3,REQDA,4)):$P(^(4),U,1),1:"") I X="y" W !,"Exam(s) transferred to another site -- see pending report.",!
"RTN","DVBCENQ1",43,0)
 I $D(^DVB(396.3,REQDA,1)),$P(^(1),U,3)="Y" W !,"This request was faxed to the regional office.",!
"RTN","DVBCENQ1",44,0)
 S FEXAM=$P(^DVB(396.3,REQDA,0),U,9) I FEXAM="Y" W !!,"*** Exams done on a FEE BASIS ***  ",! K FEXAM
"RTN","DVBCENQ1",45,0)
 W ! F LINE=1:1:79 W "-"
"RTN","DVBCENQ1",46,0)
 W ! D DDIS Q:$D(OUT)  D CON Q:$D(OUT)
"RTN","DVBCENQ1",47,0)
 I IOST?1"P-".E,$Y>45 W @IOF D HDR
"RTN","DVBCENQ1",48,0)
 W !!,"Other Disabilities:",!!?2,OTHDIS,! I $D(^DVB(396.3,REQDA,1)) W ?2,OTHDIS1,!?2,OTHDIS2
"RTN","DVBCENQ1",49,0)
 W !!,"General Remarks:",!!
"RTN","DVBCENQ1",50,0)
 K ^UTILITY($J,"W")
"RTN","DVBCENQ1",51,0)
 F LINE=0:0 S LINE=$O(^DVB(396.3,REQDA,2,LINE)) Q:LINE=""  S X=^(LINE,0),DIWL=5,DIWR=75,DIWF="NW" D ^DIWP I IOST?1"C-".E,$Y>19 D CON W !!,"General Remarks, continued",!!!
"RTN","DVBCENQ1",52,0)
 D ^DIWW
"RTN","DVBCENQ1",53,0)
END K ANS I IOST?1"C-".E W !!,"Press [RETURN] to continue or ""^"" to stop   " R ANS:DTIME S:'$T!(ANS=U) OUT=1 I $D(OUT) Q:OUT=1
"RTN","DVBCENQ1",54,0)
 Q
"RTN","DVBCENQ1",55,0)
 ;
"RTN","DVBCENQ1",56,0)
DDIS1 W ?2,DX,?37,$J(PCT,3,0)," %",?50,$S(SC=1:"Yes",1:"No"),?58,DXCOD,!
"RTN","DVBCENQ1",57,0)
 I $Y>19 D CON
"RTN","DVBCENQ1",58,0)
 Q
"RTN","DVBCENQ1",59,0)
 ;
"RTN","DVBCENQ1",60,0)
DDIS I $Y>12 D CON Q:$D(OUT)
"RTN","DVBCENQ1",61,0)
 I '$D(^DPT(DFN,.372)) W !?25,"No rated disabilities on file",!! Q
"RTN","DVBCENQ1",62,0)
 W !?2,"Rated Disability",?37,"Percent",?50,"SC ?",?58,"Dx Code",! W ?2 F LINE=1:1:63 W "-"
"RTN","DVBCENQ1",63,0)
 W !!
"RTN","DVBCENQ1",64,0)
 F JII=0:0 S JII=$O(^DPT(DFN,.372,JII)) Q:JII=""  S DXNUM=$P(^DPT(DFN,.372,JII,0),U,1),PCT=$P(^(0),U,2),SC=$P(^(0),U,3),DX=$S($D(^DIC(31,DXNUM)):$P(^(DXNUM,0),U,1),1:"Unknown"),DXCOD=$S($D(^DIC(31,DXNUM)):$P(^(DXNUM,0),U,3),1:"Unknown") D DDIS1
"RTN","DVBCENQ1",65,0)
 W !!
"RTN","DVBCENQ1",66,0)
 Q
"RTN","DVBCENQ1",67,0)
 ;
"RTN","DVBCENQ1",68,0)
HDR S PG=PG+1 W:(IOST?1"C-".E) @IOF
"RTN","DVBCENQ1",69,0)
 W !,"Date: ",FDT(0),?(80-$L(PGHD)\2),PGHD,?71,"Page: ",PG W !,?(80-$L($$SITE^DVBCUTL4)\2),$$SITE^DVBCUTL4 I PG>1 W !!,"Name: ",PNAM,?44,"SSN: ",SSN,?63,"C-NUM: ",CNUM
"RTN","DVBCENQ1",70,0)
 W ! F XLINE=1:1:80 W "="
"RTN","DVBCENQ1",71,0)
 W ! Q
"RTN","DVBCHS1")
0^14^B5480980^B4480992
"RTN","DVBCHS1",1,0)
DVBCHS1 ;ALB/JRP - C & P EXTRACT FOR HEALTH SUMMARY (CONT);11-JAN-95
"RTN","DVBCHS1",2,0)
 ;;2.7;AMIE;**149**;Apr 10, 1995;Build 16
"RTN","DVBCHS1",3,0)
OUT0(PTR,ARR) ;SET NODE ZERO OF OUTPUT
"RTN","DVBCHS1",4,0)
 ;INPUT  : PTR - Pointer to 2507 EXAM file (#396.4)
"RTN","DVBCHS1",5,0)
 ;         ARR - Where to place output (full global reference)
"RTN","DVBCHS1",6,0)
 ;OUTPUT : None
"RTN","DVBCHS1",7,0)
 ;         See HSCP() for format of output array
"RTN","DVBCHS1",8,0)
 ;NOTES  : All input is assumed to exist (no error checking)
"RTN","DVBCHS1",9,0)
 ;
"RTN","DVBCHS1",10,0)
 N CODE,FMDATE,TYPE,DOCTOR,PRIORITY
"RTN","DVBCHS1",11,0)
 N INVDATE,NODE,REQPTR,TYPEPTR,TMP
"RTN","DVBCHS1",12,0)
 ;GET ZERO NODE OF 2507 EXAM
"RTN","DVBCHS1",13,0)
 S NODE=$G(^DVB(396.4,PTR,0))
"RTN","DVBCHS1",14,0)
 ;GET INFO OFF OF NODE
"RTN","DVBCHS1",15,0)
 S REQPTR=+$P(NODE,"^",2)
"RTN","DVBCHS1",16,0)
 S TYPEPTR=+$P(NODE,"^",3)
"RTN","DVBCHS1",17,0)
 S FMDATE=+$P(NODE,"^",6)
"RTN","DVBCHS1",18,0)
 S DOCTOR=$P(NODE,"^",7)
"RTN","DVBCHS1",19,0)
 S:(DOCTOR="") DOCTOR="UNKNOWN"
"RTN","DVBCHS1",20,0)
 ;GET PRIORITY FROM ZERO NODE OF 2507 REQUEST
"RTN","DVBCHS1",21,0)
 S NODE=$G(^DVB(396.3,REQPTR,0))
"RTN","DVBCHS1",22,0)
 S TMP=$P(NODE,"^",10)
"RTN","DVBCHS1",23,0)
 ;CONVERT PRIORITY TO EXTERNAL FORMAT
"RTN","DVBCHS1",24,0)
 S PRIORITY="UNKNOWN"
"RTN","DVBCHS1",25,0)
 S:(TMP="T") PRIORITY="TERMINAL"
"RTN","DVBCHS1",26,0)
 S:(TMP="P") PRIORITY="POW"
"RTN","DVBCHS1",27,0)
 S:(TMP="OS") PRIORITY="ORIGINAL SC"
"RTN","DVBCHS1",28,0)
 S:(TMP="ON") PRIORITY="ORIGINAL NSC"
"RTN","DVBCHS1",29,0)
 S:(TMP="I") PRIORITY="INCREASE"
"RTN","DVBCHS1",30,0)
 S:(TMP="R") PRIORITY="REVIEW"
"RTN","DVBCHS1",31,0)
 S:(TMP="OTR") PRIORITY="OTHER"
"RTN","DVBCHS1",32,0)
 S:(TMP="E") PRIORITY="INSUFFICIENT EXAM"
"RTN","DVBCHS1",33,0)
 S:(TMP="AO") PRIORITY="AGENT ORANGE"
"RTN","DVBCHS1",34,0)
 S:(TMP="BDD") PRIORITY="BEN DELIV AT DISCHG"
"RTN","DVBCHS1",35,0)
 S:(TMP="DCS") PRIORITY="DES CLAIMED COND BY SVCMBR"
"RTN","DVBCHS1",36,0)
 S:(TMP="DFD") PRIORITY="DES FIT-FOR-DUTY"
"RTN","DVBCHS1",37,0)
 S:(TMP="QS") PRIORITY="QUICK START"
"RTN","DVBCHS1",38,0)
 ;CONVERT EXAM TYPE TO EXTERNAL FORMAT
"RTN","DVBCHS1",39,0)
 S TYPE=$P($G(^DVB(396.6,TYPEPTR,0)),"^",1)
"RTN","DVBCHS1",40,0)
 S:('TYPEPTR) TYPE="UNKNOWN"
"RTN","DVBCHS1",41,0)
 ;DETERMINE CODE (BASED ON TRANSFER OUT/IN DATES)
"RTN","DVBCHS1",42,0)
 S NODE=$G(^DVB(396.4,PTR,"TRAN"))
"RTN","DVBCHS1",43,0)
 ;DONE AT LOCAL FACILITY
"RTN","DVBCHS1",44,0)
 S CODE=1
"RTN","DVBCHS1",45,0)
 ;DONE AT REMOTE FACILITY
"RTN","DVBCHS1",46,0)
 S:($P(NODE,"^",1)'="") CODE=2
"RTN","DVBCHS1",47,0)
 ;DONE AT LOCAL FACILITY FOR REMOTE FACILITY
"RTN","DVBCHS1",48,0)
 S:($P(NODE,"^",4)'="") CODE=3
"RTN","DVBCHS1",49,0)
 ;CALCULATE INVERSE EXAM DATE
"RTN","DVBCHS1",50,0)
 S INVDATE=9999999-FMDATE
"RTN","DVBCHS1",51,0)
 ;PUT INFO INTO GLOBAL
"RTN","DVBCHS1",52,0)
 S @ARR@(INVDATE,TYPEPTR,0)=CODE_"^"_FMDATE_"^"_TYPE_"^"_DOCTOR_"^"_PRIORITY
"RTN","DVBCHS1",53,0)
 Q
"RTN","DVBCHS1",54,0)
OUTRES(PTR,ARR) ;SET NODE 'RES' OF OUTPUT
"RTN","DVBCHS1",55,0)
 ;INPUT  : PTR - Pointer to 2507 EXAM file (#396.4)
"RTN","DVBCHS1",56,0)
 ;         ARR - Where to place output (full global reference)
"RTN","DVBCHS1",57,0)
 ;OUTPUT : None
"RTN","DVBCHS1",58,0)
 ;         See HSCP^DVBCHS0() for format of output array
"RTN","DVBCHS1",59,0)
 ;NOTES  : All input is assumed to exist (no error checking)
"RTN","DVBCHS1",60,0)
 ;
"RTN","DVBCHS1",61,0)
 N LINE,LINES,INVDATE,FMDATE,TYPEPTR,NODE
"RTN","DVBCHS1",62,0)
 ;GET EXAM DATE & TYPE
"RTN","DVBCHS1",63,0)
 S NODE=$G(^DVB(396.4,PTR,0))
"RTN","DVBCHS1",64,0)
 S TYPEPTR=+$P(NODE,"^",3)
"RTN","DVBCHS1",65,0)
 S FMDATE=+$P(NODE,"^",6)
"RTN","DVBCHS1",66,0)
 ;CALCULATE INVERSE EXAM DATE
"RTN","DVBCHS1",67,0)
 S INVDATE=9999999-FMDATE
"RTN","DVBCHS1",68,0)
 ;PUT RESULTS INTO GLOBAL
"RTN","DVBCHS1",69,0)
 S LINE=0,LINES=1
"RTN","DVBCHS1",70,0)
 F  S LINE=+$O(^DVB(396.4,PTR,"RES",LINE)) Q:('LINE)  D
"RTN","DVBCHS1",71,0)
 .S @ARR@(INVDATE,TYPEPTR,"RES",LINES)=$G(^DVB(396.4,PTR,"RES",LINE,0))
"RTN","DVBCHS1",72,0)
 .S LINES=LINES+1
"RTN","DVBCHS1",73,0)
 ;PUT NUMBER OF LINES INFO INTO GLOBAL
"RTN","DVBCHS1",74,0)
 S @ARR@(INVDATE,TYPEPTR,"RES",0)=LINES-1
"RTN","DVBCHS1",75,0)
 Q
"RTN","DVBCIRP1")
0^12^B46484005^B26898303
"RTN","DVBCIRP1",1,0)
DVBCIRP1 ;ALB/GTS-AMIE INSUFFICIENT 2507 RPT -CONT 1 ; 11/10/94  1:30 PM
"RTN","DVBCIRP1",2,0)
 ;;2.7;AMIE;**13,19,27,149**;Apr 10, 1995;Build 16
"RTN","DVBCIRP1",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBCIRP1",4,0)
 ;
"RTN","DVBCIRP1",5,0)
 ;** Version Changes
"RTN","DVBCIRP1",6,0)
 ;   2.7 - New routine (Enhc 15)
"RTN","DVBCIRP1",7,0)
 ;
"RTN","DVBCIRP1",8,0)
SUMRPT ;**Output the summary report
"RTN","DVBCIRP1",9,0)
 W:IOST?1"C-".E @IOF
"RTN","DVBCIRP1",10,0)
 D SUMHD
"RTN","DVBCIRP1",11,0)
 ;print request data
"RTN","DVBCIRP1",12,0)
 W !?3,"Total 2507 requests received for date range:",?71,$J(DVBARQCT,5)
"RTN","DVBCIRP1",13,0)
 W !?3,"Total insufficient 2507 requests received for date range:",?71,$J(DVBAINRQ,5)
"RTN","DVBCIRP1",14,0)
 W !?3,"Total insufficient 2507 requests cancelled by RO for date range:",?71,$J(DVBACAN("REQ"),5)
"RTN","DVBCIRP1",15,0)
 I DVBARQCT>0 D
"RTN","DVBCIRP1",16,0)
 .S PERCENT=(DVBAINRQ/DVBARQCT)*100
"RTN","DVBCIRP1",17,0)
 .W !?3,"% of insufficient requests per total requests received:",?71,$J(PERCENT,5,1)_"%"
"RTN","DVBCIRP1",18,0)
 .S PERCENT=((DVBAINRQ-DVBACAN("REQ"))/DVBARQCT)*100
"RTN","DVBCIRP1",19,0)
 .W !?3,"% of uncancelled insufficient requests per total requests received:",?71,$J(PERCENT,5,1)_"%"
"RTN","DVBCIRP1",20,0)
 I DVBARQCT'>0 D
"RTN","DVBCIRP1",21,0)
 .S PERCENT=0
"RTN","DVBCIRP1",22,0)
 .W !?3,"% of insufficient requests per total requests received:",?71,$J(PERCENT,5,1)_"%"
"RTN","DVBCIRP1",23,0)
 .W !?3,"% of uncancelled insufficient requests per total requests received:",?71,$J(PERCENT,5,1)_"%"
"RTN","DVBCIRP1",24,0)
 ;print exam data
"RTN","DVBCIRP1",25,0)
 W !!?3,"Total 2507 exams received for date range:",?71,$J(DVBAXMCT,5)
"RTN","DVBCIRP1",26,0)
 W !?3,"Total insufficient 2507 exams received for date range:",?71,$J(DVBAINXM,5)
"RTN","DVBCIRP1",27,0)
 W !?3,"Total insufficient 2507 exams cancelled by RO for date range:",?71,$J(DVBACAN("EXM"),5)
"RTN","DVBCIRP1",28,0)
 I DVBAXMCT>0 D
"RTN","DVBCIRP1",29,0)
 .S PERCENT=(DVBAINXM/DVBAXMCT)*100
"RTN","DVBCIRP1",30,0)
 .W !?3,"% of insufficient exams per total exams received:",?71,$J(PERCENT,5,1)_"%"
"RTN","DVBCIRP1",31,0)
 .S PERCENT=((DVBAINXM-DVBACAN("EXM"))/DVBAXMCT)*100
"RTN","DVBCIRP1",32,0)
 .W !?3,"% of uncancelled insufficient exams per total exams received:",?71,$J(PERCENT,5,1)_"%"
"RTN","DVBCIRP1",33,0)
 I DVBAXMCT'>0 D
"RTN","DVBCIRP1",34,0)
 .S PERCENT=0
"RTN","DVBCIRP1",35,0)
 .W !?3,"% of insufficient exams per total exams received:",?71,$J(PERCENT,5,1)_"%"
"RTN","DVBCIRP1",36,0)
 .W !?3,"% of uncancelled insufficient exams per total exams received:",?71,$J(PERCENT,5,1)_"%"
"RTN","DVBCIRP1",37,0)
 ;print insufficient reason data
"RTN","DVBCIRP1",38,0)
 I IOST?1"C-".E DO
"RTN","DVBCIRP1",39,0)
 .K DTOUT,DUOUT
"RTN","DVBCIRP1",40,0)
 .W !!
"RTN","DVBCIRP1",41,0)
 .D PAUSE^DVBCUTL4
"RTN","DVBCIRP1",42,0)
 .I '$D(DTOUT),('$D(DUOUT)) DO
"RTN","DVBCIRP1",43,0)
 ..W @IOF
"RTN","DVBCIRP1",44,0)
 ..D SUMHD
"RTN","DVBCIRP1",45,0)
 I '$D(DTOUT),('$D(DUOUT)) DO
"RTN","DVBCIRP1",46,0)
 .W:IOST'?1"C-".E !!
"RTN","DVBCIRP1",47,0)
 .W !?15,"Summary of insufficient exams per Reason",!
"RTN","DVBCIRP1",48,0)
 .W !?3,"Reason",?53,"Num",?59,"Percent"
"RTN","DVBCIRP1",49,0)
 .N DVBARSLP S DVBARSLP=""
"RTN","DVBCIRP1",50,0)
 .F  S DVBARSLP=$O(DVBAINXM(DVBARSLP)) Q:DVBARSLP=""  DO  ;**Reason tot's
"RTN","DVBCIRP1",51,0)
 ..W:+DVBARSLP>0 !?3,$P(^DVB(396.94,DVBARSLP,0),U,3),?53,DVBAINXM(DVBARSLP)
"RTN","DVBCIRP1",52,0)
 ..I +DVBARSLP'>0,(+DVBAINXM(DVBARSLP)>0) W !?3,"Exams without insufficient reason indicated",?53,DVBAINXM(DVBARSLP)
"RTN","DVBCIRP1",53,0)
 ..W:(+DVBAINXM(DVBARSLP)>0&(DVBAINXM>0)) ?59,($P(((DVBAINXM(DVBARSLP)/DVBAINXM)*100),".",1))_$S($E($P(((DVBAINXM(DVBARSLP)/DVBAINXM)*100),".",2),1,1)'="":"."_$E($P(((DVBAINXM(DVBARSLP)/DVBAINXM)*100),".",2),1,1),1:"")_" %"
"RTN","DVBCIRP1",54,0)
 .I IOST?1"C-".E DO
"RTN","DVBCIRP1",55,0)
 ..D CONTMES^DVBCUTL4
"RTN","DVBCIRP1",56,0)
 Q
"RTN","DVBCIRP1",57,0)
 ;
"RTN","DVBCIRP1",58,0)
SUMHD ;** Output Summary Report heading
"RTN","DVBCIRP1",59,0)
 N STRTDT,LSTDT,DVBATXT,DVBASL
"RTN","DVBCIRP1",60,0)
 W !?15,"Summary Insufficient Exam Report for ",$$SITE^DVBCUTL4(),!
"RTN","DVBCIRP1",61,0)
 S Y=$P(BEGDT,".",1) X ^DD("DD") S STRTDT=Y K Y
"RTN","DVBCIRP1",62,0)
 S Y=$P(ENDDT,".",1) X ^DD("DD") S LSTDT=Y K Y
"RTN","DVBCIRP1",63,0)
 S DVBASL=$L($$SITE^DVBCUTL4)
"RTN","DVBCIRP1",64,0)
 S DVBATXT=$$PRHD^DVBCIUTL(DVBAPRTY)
"RTN","DVBCIRP1",65,0)
 W ?(((67+DVBASL)-$L(DVBATXT))\2),DVBATXT,!
"RTN","DVBCIRP1",66,0)
 W !?16,"For Date Range: "_STRTDT_" to "_LSTDT,!
"RTN","DVBCIRP1",67,0)
 Q
"RTN","DVBCIRP1",68,0)
 ;
"RTN","DVBCIRP1",69,0)
DETAIL ;** Output reason, exam type and exam info
"RTN","DVBCIRP1",70,0)
 N STRTDT,LSTDT,DVBARQST,DVBAEXMP,DVBAP,DVBAPREXM
"RTN","DVBCIRP1",71,0)
 K ^TMP("DVBAEXAMS",$J)
"RTN","DVBCIRP1",72,0)
 S Y=$P(BEGDT,".",1) X ^DD("DD") S STRTDT=Y K Y
"RTN","DVBCIRP1",73,0)
 S Y=$P(ENDDT,".",1) X ^DD("DD") S LSTDT=Y K Y
"RTN","DVBCIRP1",74,0)
 U IO
"RTN","DVBCIRP1",75,0)
 S DVBADTLP=BEGDT
"RTN","DVBCIRP1",76,0)
 S DVBAENDL=ENDDT
"RTN","DVBCIRP1",77,0)
 S DVBAPRTY=$S(($G(DVBAPRTY)["BDD"):";BDD;QS;",($G(DVBAPRTY)["DES"):";DCS;DFD;",($G(DVBAPRTY)["AO"):";AO;",1:"")
"RTN","DVBCIRP1",78,0)
 D:((DVBAPRTY']"")!(DVBAPRTY["AO")) DETHD^DVBCIUTL
"RTN","DVBCIRP1",79,0)
 S RSDA=""
"RTN","DVBCIRP1",80,0)
 S DVBAPG1=""
"RTN","DVBCIRP1",81,0)
 F  S RSDA=$O(DVBAARY("REASON",RSDA)) Q:(RSDA=""!($D(GETOUT)))  DO
"RTN","DVBCIRP1",82,0)
 .K DVBARSPT
"RTN","DVBCIRP1",83,0)
 .S TPDA=""
"RTN","DVBCIRP1",84,0)
 .F  S TPDA=$O(^TMP($J,"XMTYPE",TPDA)) Q:(TPDA=""!($D(GETOUT)))  DO
"RTN","DVBCIRP1",85,0)
 ..K DVBAXMPT
"RTN","DVBCIRP1",86,0)
 ..S XMDA=""
"RTN","DVBCIRP1",87,0)
 ..F  S XMDA=$O(^DVB(396.4,"AIT",RSDA,TPDA,XMDA)) Q:(XMDA=""!($D(GETOUT)))  DO
"RTN","DVBCIRP1",88,0)
 ...S DVBARQST=$G(^DVB(396.3,$P(^DVB(396.4,XMDA,0),U,2),0))
"RTN","DVBCIRP1",89,0)
 ...;retrieve Priority of Exam from Current/Parent(if exists) 2507 Request
"RTN","DVBCIRP1",90,0)
 ...S DVBAPREXM=$$CHKREQ($P(^DVB(396.4,XMDA,0),U,2))
"RTN","DVBCIRP1",91,0)
 ...I $P(DVBARQST,U,5)>DVBADTLP,($P(DVBARQST,U,5)<DVBAENDL) D
"RTN","DVBCIRP1",92,0)
 ....;Current-As Is (All Others, except new priorities)
"RTN","DVBCIRP1",93,0)
 ....D:((DVBAPRTY']"")&((";BDD;QS;DCS;DFD;AO;")'[(";"_DVBAPREXM_";"))) EXMOUT^DVBCIUTL
"RTN","DVBCIRP1",94,0)
 ....;Report for Specific Priority of Exam(s)
"RTN","DVBCIRP1",95,0)
 ....D:((DVBAPRTY]"")&(DVBAPRTY[(";"_DVBAPREXM_";")))
"RTN","DVBCIRP1",96,0)
 .....D:(DVBAPREXM="AO") EXMOUT^DVBCIUTL  ;Agent Orange Single Report
"RTN","DVBCIRP1",97,0)
 .....;BDD,QS,DCS,DFD require report for each priority code
"RTN","DVBCIRP1",98,0)
 .....;for performance grab all data then print 2 reports
"RTN","DVBCIRP1",99,0)
 .....S:(DVBAPREXM'="AO") ^TMP("DVBAEXAMS",$J,DVBAPREXM,RSDA,TPDA,XMDA)=""
"RTN","DVBCIRP1",100,0)
 I '$D(GETOUT),(IOST?1"C-".E),((DVBAPRTY']"")!(DVBAPRTY["AO")) D CONTMES^DVBCUTL4
"RTN","DVBCIRP1",101,0)
 D:((DVBAPRTY]"")&(DVBAPRTY'["AO"))  ;print BDD/DES reports
"RTN","DVBCIRP1",102,0)
 .K DVBAPG1 S DVBAEXMP=DVBAPRTY,RSDA=""
"RTN","DVBCIRP1",103,0)
 .F DVBAP=$P(DVBAEXMP,";",2),$P(DVBAEXMP,";",3)  D
"RTN","DVBCIRP1",104,0)
 ..S DVBAPRTY=DVBAP
"RTN","DVBCIRP1",105,0)
 ..D DETHD^DVBCIUTL S DVBAPG1=""
"RTN","DVBCIRP1",106,0)
 ..F  S RSDA=$O(^TMP("DVBAEXAMS",$J,DVBAP,RSDA)) Q:(('+RSDA)!($D(GETOUT)))  D
"RTN","DVBCIRP1",107,0)
 ...K DVBARSPT S TPDA=""
"RTN","DVBCIRP1",108,0)
 ...F  S TPDA=$O(^TMP("DVBAEXAMS",$J,DVBAP,RSDA,TPDA)) Q:(('+TPDA)!($D(GETOUT)))  D
"RTN","DVBCIRP1",109,0)
 ....K DVBAXMPT S XMDA=""
"RTN","DVBCIRP1",110,0)
 ....F  S XMDA=$O(^TMP("DVBAEXAMS",$J,DVBAP,RSDA,TPDA,XMDA)) Q:(('+XMDA)!($D(GETOUT)))  D EXMOUT^DVBCIUTL
"RTN","DVBCIRP1",111,0)
 ..I '$D(GETOUT),(IOST?1"C-".E) D CONTMES^DVBCUTL4
"RTN","DVBCIRP1",112,0)
 ..K GETOUT W !
"RTN","DVBCIRP1",113,0)
 D ^%ZISC
"RTN","DVBCIRP1",114,0)
 D KVARS ;**KILL the variables used by DETAIL
"RTN","DVBCIRP1",115,0)
 Q
"RTN","DVBCIRP1",116,0)
 ;
"RTN","DVBCIRP1",117,0)
KVARS ;** Final Kill for Detail report
"RTN","DVBCIRP1",118,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","DVBCIRP1",119,0)
 K ^TMP($J),DVBAARY,DVBANAME,DVBASSN,DVBACNUM,RSDA,TPDA,XMDA,DVBADTLP
"RTN","DVBCIRP1",120,0)
 K DVBAENDL,DVBARSPT,DVBAXMPT,REQDA,DFN,DVBAORXM,DVBAXMTP,DVBACMND
"RTN","DVBCIRP1",121,0)
 K DVBAORPV,DVBAORP1,DVBADTWK,DVBADTE,DVBAORDT,DVBANAM1,GETOUT
"RTN","DVBCIRP1",122,0)
 K DVBAARY,DVBAPG1,DVBARQDT,DVBAXDT,DVBAXRS,^TMP("DVBAEXAMS",$J)
"RTN","DVBCIRP1",123,0)
 Q
"RTN","DVBCIRP1",124,0)
 ;
"RTN","DVBCIRP1",125,0)
DETSEL ;** Select the details to report
"RTN","DVBCIRP1",126,0)
 D RSEL^DVBCIUTL
"RTN","DVBCIRP1",127,0)
 I '$D(DVBAARY("REASON")) S DVBAQTSL=""
"RTN","DVBCIRP1",128,0)
 I $D(DVBAQTSL) DO
"RTN","DVBCIRP1",129,0)
 .S DIR("A",1)="You have not selected Insufficient reasons to report."
"RTN","DVBCIRP1",130,0)
 .S DIR("A",2)="This is required to print the Detailed report."
"RTN","DVBCIRP1",131,0)
 .S DIR("A",3)=" "
"RTN","DVBCIRP1",132,0)
 .S DIR(0)="FAO^1:1",DIR("A")="Hit Return to continue." D ^DIR K DIR,X,Y
"RTN","DVBCIRP1",133,0)
 I '$D(DVBAQTSL) DO
"RTN","DVBCIRP1",134,0)
 .D XMSEL^DVBCIUTL
"RTN","DVBCIRP1",135,0)
 .I '$D(^TMP($J,"XMTYPE")) S DVBAQTSL=""
"RTN","DVBCIRP1",136,0)
 .I $D(DVBAQTSL) DO
"RTN","DVBCIRP1",137,0)
 ..S DIR("A",1)="You have not selected Exams to report."
"RTN","DVBCIRP1",138,0)
 ..S DIR("A",2)="This is required to print the Detailed report."
"RTN","DVBCIRP1",139,0)
 ..S DIR("A",3)=" "
"RTN","DVBCIRP1",140,0)
 ..S DIR(0)="FAO^1:1",DIR("A")="Hit Return to continue." D ^DIR K DIR,X,Y
"RTN","DVBCIRP1",141,0)
 ..K DVBAARY("REASON")
"RTN","DVBCIRP1",142,0)
 Q
"RTN","DVBCIRP1",143,0)
 ;
"RTN","DVBCIRP1",144,0)
 ;Input:  IEN of 2507 Request in File #396.3
"RTN","DVBCIRP1",145,0)
 ;Output: Priority of Exam for the Current/Parent 2507 Request
"RTN","DVBCIRP1",146,0)
CHKREQ(DVBARIEN) ;check for parent requests
"RTN","DVBCIRP1",147,0)
 N DVBAPIEN,DVBAPEXM
"RTN","DVBCIRP1",148,0)
 Q:($G(DVBARIEN)']"") ""
"RTN","DVBCIRP1",149,0)
 S DVBAPEXM=$P($G(^DVB(396.3,DVBARIEN,0)),U,10)  ;Priority of Exam
"RTN","DVBCIRP1",150,0)
 S DVBAPIEN=$P($G(^DVB(396.3,DVBARIEN,5)),U)  ;parent IEN if it exists
"RTN","DVBCIRP1",151,0)
 I (DVBAPIEN]"") D  ;Parent 2507 Request
"RTN","DVBCIRP1",152,0)
 .S DVBAPEXM=$P($G(^DVB(396.3,DVBAPIEN,0)),U,10)  ;Priority of Exam
"RTN","DVBCIRP1",153,0)
 Q DVBAPEXM
"RTN","DVBCIRPT")
0^11^B47028205^B15932212
"RTN","DVBCIRPT",1,0)
DVBCIRPT ;ALB/GTS-AMIE C&P INSUFF EXAM TRACKING RPT ; 11/9/94  2:00 PM
"RTN","DVBCIRPT",2,0)
 ;;2.7;AMIE;**13,19,27,149**;Apr 10, 1995;Build 16
"RTN","DVBCIRPT",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBCIRPT",4,0)
 ;
"RTN","DVBCIRPT",5,0)
 ;** Version Changes
"RTN","DVBCIRPT",6,0)
 ;   2.7 - New routine (Enhc 15)
"RTN","DVBCIRPT",7,0)
 ;
"RTN","DVBCIRPT",8,0)
MAIN ;**Select Dte Rng & Rpt Type; call report routine
"RTN","DVBCIRPT",9,0)
 F  Q:$D(DVBAOUT)  DO
"RTN","DVBCIRPT",10,0)
 .D HOME^%ZIS
"RTN","DVBCIRPT",11,0)
 .S TVAR(1,0)="0,0,1,2:2,1^Insufficient 2507 Exam Report"
"RTN","DVBCIRPT",12,0)
 .D WR^DVBAUTL4("TVAR")
"RTN","DVBCIRPT",13,0)
 .K TVAR
"RTN","DVBCIRPT",14,0)
 .S DVBAPRTY=$$EXMPRTY^DVBCIUTL("Select Priority of Exam for the Insufficient Exam Report")  ;priority of exam selection
"RTN","DVBCIRPT",15,0)
 .S RPTTYPE=$S((DVBAPRTY?.A)&(DVBAPRTY]""):$$RPTTYPE^DVBCUTA1(),1:"")
"RTN","DVBCIRPT",16,0)
 .S:((RPTTYPE'="D")&(RPTTYPE'="S")) DVBAOUT=""
"RTN","DVBCIRPT",17,0)
 .W:'$D(DVBAOUT) !!
"RTN","DVBCIRPT",18,0)
 .D:'$D(DVBAOUT) DATE^DVBCUTL4(.BEGDT,.ENDDT)
"RTN","DVBCIRPT",19,0)
 .I $D(ENDDT),(+ENDDT>0) DO
"RTN","DVBCIRPT",20,0)
 ..S ENDDT=ENDDT_".2359"
"RTN","DVBCIRPT",21,0)
 ..I RPTTYPE="S" DO
"RTN","DVBCIRPT",22,0)
 ...D DEVSEL
"RTN","DVBCIRPT",23,0)
 ...I POP D SUMKILL
"RTN","DVBCIRPT",24,0)
 ...I 'POP DO
"RTN","DVBCIRPT",25,0)
 ....I $D(IO("Q")) DO
"RTN","DVBCIRPT",26,0)
 .....N DVBAI
"RTN","DVBCIRPT",27,0)
 .....S ZTRTN="SUM^DVBCIRPT",ZTIO=ION
"RTN","DVBCIRPT",28,0)
 .....S ZTDESC="Summary Insufficient Exam Report"
"RTN","DVBCIRPT",29,0)
 .....F DVBAI="BEGDT","ENDDT","DVBAPRTY" S ZTSAVE(DVBAI)=""
"RTN","DVBCIRPT",30,0)
 .....D ^%ZTLOAD
"RTN","DVBCIRPT",31,0)
 .....N TSK S TSK=$S($D(ZTSK)=0:"C",1:"Y")
"RTN","DVBCIRPT",32,0)
 .....I TSK="Y" W !!,"Summary Report Queued. Task number: ",ZTSK
"RTN","DVBCIRPT",33,0)
 .....K ZTSK D CONTMES^DVBCUTL4
"RTN","DVBCIRPT",34,0)
 .....D SUMKILL
"RTN","DVBCIRPT",35,0)
 ....I '$D(IO("Q")) D SUM
"RTN","DVBCIRPT",36,0)
 ...D ^%ZISC
"RTN","DVBCIRPT",37,0)
 ..I RPTTYPE="D" DO
"RTN","DVBCIRPT",38,0)
 ...D DETSEL^DVBCIRP1 ;**Select the Reasons and Exams to report
"RTN","DVBCIRPT",39,0)
 ...I '$D(DVBAQTSL) DO
"RTN","DVBCIRPT",40,0)
 ....D DEVSEL
"RTN","DVBCIRPT",41,0)
 ....I POP D KVARS^DVBCIRP1
"RTN","DVBCIRPT",42,0)
 ....I 'POP DO
"RTN","DVBCIRPT",43,0)
 .....I $D(IO("Q")) DO
"RTN","DVBCIRPT",44,0)
 ......N DVBAI
"RTN","DVBCIRPT",45,0)
 ......S ZTRTN="DETAIL^DVBCIRP1",ZTIO=ION
"RTN","DVBCIRPT",46,0)
 ......S ZTDESC="Detailed Insufficient Exam Report"
"RTN","DVBCIRPT",47,0)
 ......F DVBAI="BEGDT","ENDDT","DVBAPRTY","DVBAARY(""REASON"",","^TMP($J,""XMTYPE""," S ZTSAVE(DVBAI)=""
"RTN","DVBCIRPT",48,0)
 ......D ^%ZTLOAD
"RTN","DVBCIRPT",49,0)
 ......N TSK S TSK=$S($D(ZTSK)=0:"C",1:"Y")
"RTN","DVBCIRPT",50,0)
 ......I TSK="Y" W !!,"Detail Report Queued. Task number: ",ZTSK
"RTN","DVBCIRPT",51,0)
 ......K ZTSK D CONTMES^DVBCUTL4
"RTN","DVBCIRPT",52,0)
 ......D KVARS^DVBCIRP1
"RTN","DVBCIRPT",53,0)
 .....I '$D(IO("Q")) W:IOST?1"C-".E @IOF D DETAIL^DVBCIRP1
"RTN","DVBCIRPT",54,0)
 ....D ^%ZISC
"RTN","DVBCIRPT",55,0)
 ...K DVBAQTSL
"RTN","DVBCIRPT",56,0)
 ..D CLEANUP
"RTN","DVBCIRPT",57,0)
 D KVARS
"RTN","DVBCIRPT",58,0)
 Q
"RTN","DVBCIRPT",59,0)
 ;
"RTN","DVBCIRPT",60,0)
KVARS ;** Kill the variables used in report
"RTN","DVBCIRPT",61,0)
 K DVBAOUT,ENDDT,BEGDT,DTOUT,DUOUT,RPTTYPE,DVBACAN,DVBASTAT,DVBAPRTY
"RTN","DVBCIRPT",62,0)
 D CLEANUP
"RTN","DVBCIRPT",63,0)
 Q
"RTN","DVBCIRPT",64,0)
 ;
"RTN","DVBCIRPT",65,0)
CLEANUP ;** Kill the variables used by the device handler
"RTN","DVBCIRPT",66,0)
 K %ZIS,POP,%IS,IOP
"RTN","DVBCIRPT",67,0)
 K IOBS,IOHG,IOPAR,IOUPAR,IOXY,POP,%DT,%YY,%XX,ION,IOPAR
"RTN","DVBCIRPT",68,0)
 Q
"RTN","DVBCIRPT",69,0)
 ;
"RTN","DVBCIRPT",70,0)
DEVSEL ;** Select the device to report to
"RTN","DVBCIRPT",71,0)
 S %ZIS="AEQ"
"RTN","DVBCIRPT",72,0)
 S %ZIS("A")="Output device: "
"RTN","DVBCIRPT",73,0)
 D ^%ZIS
"RTN","DVBCIRPT",74,0)
 Q
"RTN","DVBCIRPT",75,0)
 ;
"RTN","DVBCIRPT",76,0)
SUM ;** Set up reason counter array, count all 2507's received
"RTN","DVBCIRPT",77,0)
 N DVBAEXMP,DVBAI,DVBAP,DVBATVAR,DVBAMCDES,DVBAPREXM
"RTN","DVBCIRPT",78,0)
 U IO
"RTN","DVBCIRPT",79,0)
 S (DVBARQCT,DVBAINRQ,DVBAXMCT,DVBAINXM)=0
"RTN","DVBCIRPT",80,0)
 S DVBACAN("REQ")=0,DVBACAN("EXM")=0
"RTN","DVBCIRPT",81,0)
 S DVBAENDL=ENDDT
"RTN","DVBCIRPT",82,0)
 S DVBAEXMP=$S(($G(DVBAPRTY)["BDD"):";BDD;QS;",($G(DVBAPRTY)["DES"):";DCS;DFD;",($G(DVBAPRTY)["AO"):";AO;",1:"")
"RTN","DVBCIRPT",83,0)
 S DVBAMCDES=((DVBAEXMP]"")&(DVBAPRTY'="AO"))
"RTN","DVBCIRPT",84,0)
 K ^TMP("DVBATOTALS",$J)  ;for multiple priority reporting
"RTN","DVBCIRPT",85,0)
 ;
"RTN","DVBCIRPT",86,0)
 ;** Initialize reason counter array(s)
"RTN","DVBCIRPT",87,0)
 F DVBARIFN=0:0 S DVBARIFN=$O(^DVB(396.94,DVBARIFN)) Q:+DVBARIFN'>0  DO
"RTN","DVBCIRPT",88,0)
 .D:(DVBAMCDES)
"RTN","DVBCIRPT",89,0)
 ..F DVBAP=$P(DVBAEXMP,";",2),$P(DVBAEXMP,";",3)  D
"RTN","DVBCIRPT",90,0)
 ...S ^TMP("DVBATOTALS",$J,DVBAP,"DVBAINXM",DVBARIFN)=0
"RTN","DVBCIRPT",91,0)
 .S DVBAINXM(DVBARIFN)=0
"RTN","DVBCIRPT",92,0)
 D:(DVBAMCDES)
"RTN","DVBCIRPT",93,0)
 .F DVBAP=$P(DVBAEXMP,";",2),$P(DVBAEXMP,";",3)  D
"RTN","DVBCIRPT",94,0)
 ..S ^TMP("DVBATOTALS",$J,DVBAP,"DVBAINXM","NO REASON")=0
"RTN","DVBCIRPT",95,0)
 S DVBAINXM("NO REASON")=0
"RTN","DVBCIRPT",96,0)
 ;
"RTN","DVBCIRPT",97,0)
 ;** Count the total and insufficient number of exams and 2507 requests
"RTN","DVBCIRPT",98,0)
 ;     For performance, if multiple reports, store totals in single pass of data
"RTN","DVBCIRPT",99,0)
 S DVBADTLP=BEGDT-.0001
"RTN","DVBCIRPT",100,0)
 F  S DVBADTLP=$O(^DVB(396.3,"ADP",DVBADTLP)) Q:(DVBADTLP=""!(DVBADTLP>ENDDT))  DO
"RTN","DVBCIRPT",101,0)
 .S DVBAPRIO=""
"RTN","DVBCIRPT",102,0)
 .F  S DVBAPRIO=$O(^DVB(396.3,"ADP",DVBADTLP,DVBAPRIO)) Q:DVBAPRIO=""  DO
"RTN","DVBCIRPT",103,0)
 ..S DVBADALP=""
"RTN","DVBCIRPT",104,0)
 ..F  S DVBADALP=$O(^DVB(396.3,"ADP",DVBADTLP,DVBAPRIO,DVBADALP)) Q:DVBADALP=""  DO
"RTN","DVBCIRPT",105,0)
 ...;check for Parent Request (retrieve current/parent Priority of Exam)
"RTN","DVBCIRPT",106,0)
 ...S DVBAPREXM=$$CHKREQ^DVBCIRP1(DVBADALP)
"RTN","DVBCIRPT",107,0)
 ...;original report run (Exclude new priorities)
"RTN","DVBCIRPT",108,0)
 ...Q:((DVBAEXMP']"")&((";BDD;QS;DCS;DFD;AO;")[(";"_DVBAPREXM_";")))
"RTN","DVBCIRPT",109,0)
 ...;report for specific Priority of Exam
"RTN","DVBCIRPT",110,0)
 ...Q:((DVBAEXMP]"")&(DVBAEXMP'[(";"_DVBAPREXM_";")))
"RTN","DVBCIRPT",111,0)
 ...S:(DVBAMCDES) ^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBARQCT")=$G(^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBARQCT"))+1
"RTN","DVBCIRPT",112,0)
 ...S DVBARQCT=DVBARQCT+1
"RTN","DVBCIRPT",113,0)
 ...K DVBAINSF
"RTN","DVBCIRPT",114,0)
 ...I DVBAPRIO="E" DO
"RTN","DVBCIRPT",115,0)
 ....S:(DVBAMCDES) ^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBAINRQ")=$G(^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBAINRQ"))+1
"RTN","DVBCIRPT",116,0)
 ....S DVBAINRQ=DVBAINRQ+1
"RTN","DVBCIRPT",117,0)
 ....I $P(^DVB(396.3,DVBADALP,0),U,18)="RX" D
"RTN","DVBCIRPT",118,0)
 .....S:(DVBAMCDES) ^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBACANREQ")=$G(^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBACANREQ"))+1
"RTN","DVBCIRPT",119,0)
 .....S DVBACAN("REQ")=DVBACAN("REQ")+1
"RTN","DVBCIRPT",120,0)
 ....S DVBAINSF=""
"RTN","DVBCIRPT",121,0)
 ...S DVBAXMDA=""
"RTN","DVBCIRPT",122,0)
 ...F  S DVBAXMDA=$O(^DVB(396.4,"C",DVBADALP,DVBAXMDA)) Q:DVBAXMDA=""  DO
"RTN","DVBCIRPT",123,0)
 ....S:(DVBAMCDES) ^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBAXMCT")=$G(^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBAXMCT"))+1
"RTN","DVBCIRPT",124,0)
 ....S DVBAXMCT=DVBAXMCT+1
"RTN","DVBCIRPT",125,0)
 ....I $D(DVBAINSF) DO
"RTN","DVBCIRPT",126,0)
 .....S:(DVBAMCDES) ^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBAINXM")=$G(^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBAINXM"))+1
"RTN","DVBCIRPT",127,0)
 .....S DVBAINXM=DVBAINXM+1
"RTN","DVBCIRPT",128,0)
 .....S DVBARIFN=$P(^DVB(396.4,DVBAXMDA,0),U,11),DVBASTAT=$P(^(0),U,4)
"RTN","DVBCIRPT",129,0)
 .....S:DVBARIFN="" DVBARIFN="NO REASON"
"RTN","DVBCIRPT",130,0)
 .....S:(DVBAMCDES) ^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBAINXM",DVBARIFN)=$G(^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBAINXM",DVBARIFN))+1
"RTN","DVBCIRPT",131,0)
 .....S DVBAINXM(DVBARIFN)=DVBAINXM(DVBARIFN)+1
"RTN","DVBCIRPT",132,0)
 .....I DVBASTAT="RX" D
"RTN","DVBCIRPT",133,0)
 ......S:(DVBAMCDES) ^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBACANEXM")=$G(^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBACANEXM"))+1
"RTN","DVBCIRPT",134,0)
 ......S DVBACAN("EXM")=DVBACAN("EXM")+1
"RTN","DVBCIRPT",135,0)
 ;
"RTN","DVBCIRPT",136,0)
 S DVBAEXMP=$S(($G(DVBAPRTY)["BDD"):"BDD,QS",($G(DVBAPRTY)["DES"):"DCS,DFD",($G(DVBAPRTY)["AO"):"AO",1:"")
"RTN","DVBCIRPT",137,0)
 F DVBAI=1:1:$L(DVBAEXMP,",")  D
"RTN","DVBCIRPT",138,0)
 .S DVBAPRTY=$P(DVBAEXMP,",",DVBAI)  ;priority to report on
"RTN","DVBCIRPT",139,0)
 .D:(DVBAI>1)  ;Form Feed between multiple Reports
"RTN","DVBCIRPT",140,0)
 ..S DVBATVAR(1,0)="0,0,0,0,1^"
"RTN","DVBCIRPT",141,0)
 ..D WR^DVBAUTL4("DVBATVAR")
"RTN","DVBCIRPT",142,0)
 .;
"RTN","DVBCIRPT",143,0)
 .D:(DVBAMCDES)  ;reset var cntrs for specific priority
"RTN","DVBCIRPT",144,0)
 ..S DVBARQCT=+$G(^TMP("DVBATOTALS",$J,DVBAPRTY,"DVBARQCT"))
"RTN","DVBCIRPT",145,0)
 ..S DVBAINRQ=+$G(^TMP("DVBATOTALS",$J,DVBAPRTY,"DVBAINRQ"))
"RTN","DVBCIRPT",146,0)
 ..S DVBACAN("REQ")=+$G(^TMP("DVBATOTALS",$J,DVBAPRTY,"DVBACANREQ"))
"RTN","DVBCIRPT",147,0)
 ..S DVBAXMCT=+$G(^TMP("DVBATOTALS",$J,DVBAPRTY,"DVBAXMCT"))
"RTN","DVBCIRPT",148,0)
 ..S DVBAINXM=+$G(^TMP("DVBATOTALS",$J,DVBAPRTY,"DVBAINXM"))
"RTN","DVBCIRPT",149,0)
 ..S DVBAP=0 F  S DVBAP=$O(^TMP("DVBATOTALS",$J,DVBAPRTY,"DVBAINXM",DVBAP)) Q:DVBAP=""  D
"RTN","DVBCIRPT",150,0)
 ...S DVBAINXM(DVBAP)=+$G(^TMP("DVBATOTALS",$J,DVBAPRTY,"DVBAINXM",DVBAP))
"RTN","DVBCIRPT",151,0)
 ..S DVBACAN("EXM")=+$G(^TMP("DVBATOTALS",$J,DVBAPRTY,"DVBACANEXM"))
"RTN","DVBCIRPT",152,0)
 .;
"RTN","DVBCIRPT",153,0)
 .D SUMRPT^DVBCIRP1  ;print SUMMARY report
"RTN","DVBCIRPT",154,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","DVBCIRPT",155,0)
 D SUMKILL
"RTN","DVBCIRPT",156,0)
 D ^%ZISC
"RTN","DVBCIRPT",157,0)
 Q
"RTN","DVBCIRPT",158,0)
 ;
"RTN","DVBCIRPT",159,0)
SUMKILL ;** Kill the variables used in the summary report
"RTN","DVBCIRPT",160,0)
 K DVBADTLP,DVBAENDL,DVBARQCT,DVBAINRQ,DVBAXMCT,DVBAINXM
"RTN","DVBCIRPT",161,0)
 K DVBAPRIO,DVBADALP,DVBAXMDA,DVBAINSF,DVBARIFN
"RTN","DVBCIRPT",162,0)
 K ^TMP("DVBATOTALS",$J)
"RTN","DVBCIRPT",163,0)
 Q
"RTN","DVBCIUTL")
0^13^B37860545^B22268963
"RTN","DVBCIUTL",1,0)
DVBCIUTL ;ALB/GTS-AMIE INSUFFICIENT RPT UTILITY RTN ; 11/14/94  9:15 AM
"RTN","DVBCIUTL",2,0)
 ;;2.7;AMIE;**13,17,19,149**;Apr 10, 1995;Build 16
"RTN","DVBCIUTL",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBCIUTL",4,0)
 ;
"RTN","DVBCIUTL",5,0)
 ;** Version Changes
"RTN","DVBCIUTL",6,0)
 ;   2.7 - New routine (Enhc 15)
"RTN","DVBCIUTL",7,0)
 ;
"RTN","DVBCIUTL",8,0)
DETHD ;** Detailed Report header
"RTN","DVBCIUTL",9,0)
 N DVBAI,DVBATXT S DVBAI=2
"RTN","DVBCIUTL",10,0)
 S:'$D(DVBAPG1) TVAR(1,0)="0,15,0,1,0^Detailed Insufficient Exam Report"
"RTN","DVBCIUTL",11,0)
 S:$D(DVBAPG1) TVAR(1,0)="0,15,0,1,1^Detailed Insufficient Exam Report"
"RTN","DVBCIUTL",12,0)
 S DVBATXT=$$PRHD(DVBAPRTY)
"RTN","DVBCIUTL",13,0)
 S TVAR(DVBAI,0)="0,"_((63-$L(DVBATXT))\2)_",0,1,0^"_DVBATXT
"RTN","DVBCIUTL",14,0)
 S DVBAI=DVBAI+1
"RTN","DVBCIUTL",15,0)
 S TVAR(DVBAI,0)="0,11,0,2,0^For Date Range: "_STRTDT_" to "_LSTDT
"RTN","DVBCIUTL",16,0)
 D WR^DVBAUTL4("TVAR")
"RTN","DVBCIUTL",17,0)
 K TVAR
"RTN","DVBCIUTL",18,0)
 Q
"RTN","DVBCIUTL",19,0)
 ;
"RTN","DVBCIUTL",20,0)
 ;Input : DVBAPRTY - Priority Exam Code (File #396.3 Fld #9)
"RTN","DVBCIUTL",21,0)
 ;Output: Description for Priority Exam Code
"RTN","DVBCIUTL",22,0)
PRHD(DVBAPRTY) ;priority exam type header info
"RTN","DVBCIUTL",23,0)
 N DVBATXT
"RTN","DVBCIUTL",24,0)
 S DVBATXT=$S((DVBAPRTY["BDD"):"Benefits Delivery at Discharge",1:"X")
"RTN","DVBCIUTL",25,0)
 S:(DVBATXT="X") DVBATXT=$S((DVBAPRTY["QS"):"Quick Start",1:"X")
"RTN","DVBCIUTL",26,0)
 S:(DVBATXT="X") DVBATXT=$S((DVBAPRTY["DCS"):"DES Claimed Condition by Service Member",1:"X")
"RTN","DVBCIUTL",27,0)
 S:(DVBATXT="X") DVBATXT=$S((DVBAPRTY["DFD"):"DES Fit for Duty",1:"X")
"RTN","DVBCIUTL",28,0)
 S:(DVBATXT="X") DVBATXT=$S((DVBAPRTY["AO"):"Agent Orange",1:"Excludes Exam Priorities: AO,BDD,DCS,DFD,QS")
"RTN","DVBCIUTL",29,0)
 S:(DVBATXT'["Excludes") DVBATXT="Priority of Exam: "_DVBATXT
"RTN","DVBCIUTL",30,0)
 Q $G(DVBATXT)
"RTN","DVBCIUTL",31,0)
 ;
"RTN","DVBCIUTL",32,0)
EXMOUT ;** Output exam information for reason/type
"RTN","DVBCIUTL",33,0)
 I $Y>(IOSL-9) DO
"RTN","DVBCIUTL",34,0)
 .I IOST?1"C-".E D TERM^DVBCUTL3
"RTN","DVBCIUTL",35,0)
 .I '$D(GETOUT) DO
"RTN","DVBCIUTL",36,0)
 ..D DETHD
"RTN","DVBCIUTL",37,0)
 ..D RESOUT
"RTN","DVBCIUTL",38,0)
 ..W !
"RTN","DVBCIUTL",39,0)
 ..D TYPEOUT
"RTN","DVBCIUTL",40,0)
 ..S (DVBARSPT,DVBAXMPT)=""
"RTN","DVBCIUTL",41,0)
 I '$D(GETOUT) DO
"RTN","DVBCIUTL",42,0)
 .I '$D(DVBARSPT) DO
"RTN","DVBCIUTL",43,0)
 ..D RESOUT
"RTN","DVBCIUTL",44,0)
 ..S DVBARSPT=""
"RTN","DVBCIUTL",45,0)
 .I '$D(DVBAXMPT) DO
"RTN","DVBCIUTL",46,0)
 ..W !
"RTN","DVBCIUTL",47,0)
 ..D TYPEOUT
"RTN","DVBCIUTL",48,0)
 ..S DVBAXMPT=""
"RTN","DVBCIUTL",49,0)
 .S (DVBARQDT,DVBAXDT,DVBAXRS)=""
"RTN","DVBCIUTL",50,0)
 .S REQDA=$P(^DVB(396.4,XMDA,0),U,2) ;*REQDA of PRIORITY Insuf 2507
"RTN","DVBCIUTL",51,0)
 .I $D(^DVB(396.4,XMDA,"CAN")) D
"RTN","DVBCIUTL",52,0)
 ..S DVBAXDT=$P(^DVB(396.4,XMDA,"CAN"),U,1),DVBAXRS=$P(^("CAN"),U,3)
"RTN","DVBCIUTL",53,0)
 ..I DVBAXDT S DVBAXDT=$$FMTE^XLFDT(DVBAXDT,"5DZ")
"RTN","DVBCIUTL",54,0)
 ..I DVBAXRS S DVBAXRS=$P(^DVB(396.5,DVBAXRS,0),U,1)
"RTN","DVBCIUTL",55,0)
 .I +REQDA>0 DO  ;*Get REQDA of Orig 2507
"RTN","DVBCIUTL",56,0)
 ..S DFN=$P(^DVB(396.3,REQDA,0),U,1),DVBARQDT=$P(^(0),U,2),DVBARQDT=$$FMTE^XLFDT(DVBARQDT,"5DZ")
"RTN","DVBCIUTL",57,0)
 ..I '$D(^DVB(396.3,REQDA,5)) S REQDA=""
"RTN","DVBCIUTL",58,0)
 ..I +REQDA>0,($D(^DVB(396.3,REQDA,5))) S REQDA=$P(^DVB(396.3,REQDA,5),U,1)
"RTN","DVBCIUTL",59,0)
 .S DVBAORXM=""
"RTN","DVBCIUTL",60,0)
 .I +REQDA>0 DO  ;*If link to orig 2507
"RTN","DVBCIUTL",61,0)
 ..S DVBAXMTP=$P(^DVB(396.4,XMDA,0),U,3)
"RTN","DVBCIUTL",62,0)
 ..S DVBACMND="F  S DVBAORXM=$O(^DVB(396.4,""ARQ"_REQDA_""","_DVBAXMTP_",DVBAORXM)) Q:DVBAORXM=""""  Q:$D(^DVB(396.4,""APS"","_DFN_","_DVBAXMTP_",""C"",DVBAORXM))"
"RTN","DVBCIUTL",63,0)
 ..X DVBACMND ;**Return DA of original, insuff exam
"RTN","DVBCIUTL",64,0)
 .S DVBANAME=$P(^DPT(DFN,0),U,1)
"RTN","DVBCIUTL",65,0)
 .S DVBASSN=$P(^DPT(DFN,0),U,9)
"RTN","DVBCIUTL",66,0)
 .S DVBACNUM="" S:$D(^DPT(DFN,.31)) DVBACNUM=$P(^DPT(DFN,.31),U,3)
"RTN","DVBCIUTL",67,0)
 .I DVBAORXM'="",($D(^DVB(396.4,DVBAORXM,0))) S DVBAORDT=$P(^DVB(396.4,DVBAORXM,0),U,6)
"RTN","DVBCIUTL",68,0)
 .I DVBAORXM'="",('$D(^DVB(396.4,DVBAORXM,0))) S (DVBAORDT,DVBADTE)=""
"RTN","DVBCIUTL",69,0)
 .S:DVBAORXM="" (DVBAORDT,DVBADTE)=""
"RTN","DVBCIUTL",70,0)
 .I DVBAORDT'="" DO
"RTN","DVBCIUTL",71,0)
 ..S DVBADTWK=$P(DVBAORDT,".",1)
"RTN","DVBCIUTL",72,0)
 ..S DVBADTE=$$FMTE^XLFDT(DVBADTWK,"5DZ")
"RTN","DVBCIUTL",73,0)
 .S DVBAORPV=$P(^DVB(396.4,XMDA,0),U,12)
"RTN","DVBCIUTL",74,0)
 .S DVBAORP1=$E(DVBAORPV,1,15)
"RTN","DVBCIUTL",75,0)
 .S DVBANAM1=$E(DVBANAME,1,15)
"RTN","DVBCIUTL",76,0)
 .W !,DVBAORP1
"RTN","DVBCIUTL",77,0)
 .W:$L(DVBAORPV)>$L(DVBAORP1) "**" ;**Indicate that Dr.'s Name truncated
"RTN","DVBCIUTL",78,0)
 .W ?20,DVBADTE,?32,DVBANAM1
"RTN","DVBCIUTL",79,0)
 .W:$L(DVBANAME)>$L(DVBANAM1) "**" ;**Indicate that Vet's Name truncated
"RTN","DVBCIUTL",80,0)
 .W ?52,DVBASSN,?66,DVBACNUM
"RTN","DVBCIUTL",81,0)
 .I DVBAXDT]"" D
"RTN","DVBCIUTL",82,0)
 ..W !,"Exam request of "_DVBARQDT_" to correct insufficiency was cancelled on "_DVBAXDT_"."
"RTN","DVBCIUTL",83,0)
 ..W !,"Reason: "_DVBAXRS_"."
"RTN","DVBCIUTL",84,0)
 Q
"RTN","DVBCIUTL",85,0)
 ;
"RTN","DVBCIUTL",86,0)
RESOUT ;** Output the Reason
"RTN","DVBCIUTL",87,0)
 W !!!!!,"Reason: ",$P(^DVB(396.94,$P(^DVB(396.4,XMDA,0),U,11),0),U,3)
"RTN","DVBCIUTL",88,0)
 Q
"RTN","DVBCIUTL",89,0)
 ;
"RTN","DVBCIUTL",90,0)
TYPEOUT ;** Output the Exam
"RTN","DVBCIUTL",91,0)
 W !,"Exam: ",$P(^DVB(396.6,$P(^DVB(396.4,XMDA,0),U,3),0),U,2)
"RTN","DVBCIUTL",92,0)
 W !,"Provider",?20,"Exam Dt",?32,"Patient Name",?52,"SSN",?66,"Claim #"
"RTN","DVBCIUTL",93,0)
 Q
"RTN","DVBCIUTL",94,0)
 ;
"RTN","DVBCIUTL",95,0)
RSEL ;** Select Reasons
"RTN","DVBCIUTL",96,0)
 ;** The selection prompt is defaulted to ALL.  If the user selects
"RTN","DVBCIUTL",97,0)
 ;**  'All', only reasons for exams entered on requests with a
"RTN","DVBCIUTL",98,0)
 ;**  priority of 'Insufficient' will be reported.  Not all reasons.
"RTN","DVBCIUTL",99,0)
 ;
"RTN","DVBCIUTL",100,0)
 W @IOF,!
"RTN","DVBCIUTL",101,0)
 W !,"Insufficient Reason Selection"
"RTN","DVBCIUTL",102,0)
 S DVBCYQ=""
"RTN","DVBCIUTL",103,0)
 N RESANS,DVBAOUT S DVBAOUT="" ;**Pre-read
"RTN","DVBCIUTL",104,0)
 K Y,DTOUT,DUOUT,DVBATSAV
"RTN","DVBCIUTL",105,0)
 F  Q:(DVBAOUT=1!(DVBCYQ=1))  DO
"RTN","DVBCIUTL",106,0)
 .W !!,"  Enter '^' to end Reason Selection"
"RTN","DVBCIUTL",107,0)
 .W !,"  'Return' to select all Insufficient Reasons",!
"RTN","DVBCIUTL",108,0)
 .K DIC,DTOUT,DUOUT,Y
"RTN","DVBCIUTL",109,0)
 .W !,"  Enter Insufficient Reason: ALL//"
"RTN","DVBCIUTL",110,0)
 .R RESANS:DTIME
"RTN","DVBCIUTL",111,0)
 .S:$T DVBATSAV=""
"RTN","DVBCIUTL",112,0)
 .I RESANS=""&($D(DVBATSAV)) S Y=-1 D INREAS^DVBCIUT1
"RTN","DVBCIUTL",113,0)
 .S:('$D(DVBATSAV)!(RESANS["^")) DVBAOUT="1"
"RTN","DVBCIUTL",114,0)
 .I DVBAOUT'=1,('$D(Y)) DO
"RTN","DVBCIUTL",115,0)
 ..I RESANS["?" DO
"RTN","DVBCIUTL",116,0)
 ...N LPDA S LPDA=0
"RTN","DVBCIUTL",117,0)
 ...W !,"CHOOSE FROM:"
"RTN","DVBCIUTL",118,0)
 ...F  S LPDA=$O(^DVB(396.94,LPDA)) Q:+LPDA'>0  DO
"RTN","DVBCIUTL",119,0)
 ....W !,?3,$P(^DVB(396.94,LPDA,0),U,1)
"RTN","DVBCIUTL",120,0)
 ...W !
"RTN","DVBCIUTL",121,0)
 ..I RESANS'["?" DO
"RTN","DVBCIUTL",122,0)
 ...S DIC="^DVB(396.94,"
"RTN","DVBCIUTL",123,0)
 ...S DIC(0)="EMQ"
"RTN","DVBCIUTL",124,0)
 ...S X=RESANS
"RTN","DVBCIUTL",125,0)
 ...D ^DIC
"RTN","DVBCIUTL",126,0)
 ...D:+Y>0 INREAS^DVBCIUT1
"RTN","DVBCIUTL",127,0)
 .I RESANS="",($D(Y)&(+Y=-1)) S DVBCYQ=1
"RTN","DVBCIUTL",128,0)
 K DTOUT,DUOUT,Y,DIC,DVBCYQ,DVBATSAV
"RTN","DVBCIUTL",129,0)
 Q
"RTN","DVBCIUTL",130,0)
 ;
"RTN","DVBCIUTL",131,0)
XMSEL ;** Select Exams
"RTN","DVBCIUTL",132,0)
 ;** The selection prompt is defaulted to ALL.  If the user selects
"RTN","DVBCIUTL",133,0)
 ;**  'All', only exams entered on requests with a priority of 
"RTN","DVBCIUTL",134,0)
 ;**  'Insufficient' will be reported.  Not all exams.
"RTN","DVBCIUTL",135,0)
 ;
"RTN","DVBCIUTL",136,0)
 W @IOF,!
"RTN","DVBCIUTL",137,0)
 W !,"AMIE Exam Selection"
"RTN","DVBCIUTL",138,0)
 S DVBCYQ=""
"RTN","DVBCIUTL",139,0)
 K Y,DTOUT,DUOUT
"RTN","DVBCIUTL",140,0)
 F  Q:($D(DTOUT)!($D(DUOUT)!(DVBCYQ=1)))  DO
"RTN","DVBCIUTL",141,0)
 .W !!,"  Enter '^' to end Exam Selection"
"RTN","DVBCIUTL",142,0)
 .W !,"  'Return' to select all AMIE Exams",!
"RTN","DVBCIUTL",143,0)
 .K DIC,DTOUT,DUOUT
"RTN","DVBCIUTL",144,0)
 .S DIC="^DVB(396.6,"
"RTN","DVBCIUTL",145,0)
 .S DIC(0)="AEMQ"
"RTN","DVBCIUTL",146,0)
 .S DIC("A")="  Enter Exam: ALL//"
"RTN","DVBCIUTL",147,0)
 .;removed screen for inactive exams
"RTN","DVBCIUTL",148,0)
 .D ^DIC
"RTN","DVBCIUTL",149,0)
 .I '$D(DTOUT),('$D(DUOUT)) D EXMTPE^DVBCIUT1
"RTN","DVBCIUTL",150,0)
 .I $D(Y),(+Y=-1) S DVBCYQ=1
"RTN","DVBCIUTL",151,0)
 K DTOUT,DUOUT,Y,DIC,DVBCYQ
"RTN","DVBCIUTL",152,0)
 Q
"RTN","DVBCIUTL",153,0)
 ;
"RTN","DVBCIUTL",154,0)
 ;Input: DVBADIRA - Prompt to display for DIR call
"RTN","DVBCIUTL",155,0)
 ;Ouput: Code selected from set or ^ if user exited selection
"RTN","DVBCIUTL",156,0)
EXMPRTY(DVBADIRA) ;** Select Priority of Exam
"RTN","DVBCIUTL",157,0)
 N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","DVBCIUTL",158,0)
 S DIR(0)="S^AO:Agent Orange;BDD:Benefits Delivery at Discharge / Quick Start;"
"RTN","DVBCIUTL",159,0)
 S DIR(0)=DIR(0)_"DES:DES Claimed Condition by Service Member / Fit for Duty;"
"RTN","DVBCIUTL",160,0)
 S DIR(0)=DIR(0)_"ALL:All Others"
"RTN","DVBCIUTL",161,0)
 S DIR("A")=$S($G(DVBADIRA)]"":DVBADIRA,1:"Select Priority of Exam for the Report")
"RTN","DVBCIUTL",162,0)
 S DIR("B")="All Others"
"RTN","DVBCIUTL",163,0)
 S DIR("T")=DTIME  ;time-out value specified by system
"RTN","DVBCIUTL",164,0)
 S DIR("?",1)="Select the priority of exam(s) to report on or ALL for the original report,"
"RTN","DVBCIUTL",165,0)
 S DIR("?")="which excludes the AO, BDD and DES exam priorities."
"RTN","DVBCIUTL",166,0)
 D ^DIR
"RTN","DVBCIUTL",167,0)
 Q Y
"RTN","DVBCPATA")
0^25^B2615118^B9979133
"RTN","DVBCPATA",1,0)
DVBCPATA ;ALB/JLU,557/THM-ADD NEW VET TO FILE #2 ; 10/4/91  9:22 AM
"RTN","DVBCPATA",2,0)
 ;;2.7;AMIE;**1,23,40,42,55,77,149**;Apr 10, 1995;Build 16
"RTN","DVBCPATA",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBCPATA",4,0)
 ;
"RTN","DVBCPATA",5,0)
EN ;retrieve patient for C&P request
"RTN","DVBCPATA",6,0)
 ;DVBA*2.7*149 removed ability for user to add patient to File #2
"RTN","DVBCPATA",7,0)
 S OLDHD1=HD1,HD1="Additional Veteran Information"
"RTN","DVBCPATA",8,0)
 K OUT
"RTN","DVBCPATA",9,0)
 S DIC="^DPT(",DIC(0)="AEMQ"
"RTN","DVBCPATA",10,0)
 D ^DIC
"RTN","DVBCPATA",11,0)
 I Y<0 S OUT=1 D EXIT Q
"RTN","DVBCPATA",12,0)
 S DA=+Y
"RTN","DVBCPATA",13,0)
 ;
"RTN","DVBCPATA",14,0)
ADDR S DTA=^DPT(DA,0),PNAM=$P(DTA,U,1),SSN=$P(DTA,U,9),DFN=DA,CNUM=$S($D(^DPT(DFN,.31)):$P(^(.31),U,3),1:"Unknown") S:CNUM="" CNUM="Unknown"
"RTN","DVBCPATA",15,0)
 ;
"RTN","DVBCPATA",16,0)
ASK K %Y D ADDR^DVBCUTIL W !,"Is this the correct Veteran" S %=2 D YN^DICN I $D(DTOUT)!(%<0) S OUT=1 G EXIT
"RTN","DVBCPATA",17,0)
 I $D(%Y) I %Y["?" W !!,"Enter Y if it is the correct Veteran, N to reselect",! G ASK
"RTN","DVBCPATA",18,0)
 K %Y I $D(%),%'=1 D CLR G EN
"RTN","DVBCPATA",19,0)
 W !!
"RTN","DVBCPATA",20,0)
 ;
"RTN","DVBCPATA",21,0)
EXIT S HD1=OLDHD1 K OLDHD1,DIC,%,%Y,DTA,X,Y,DTOUT,DUOUT Q
"RTN","DVBCPATA",22,0)
 ;
"RTN","DVBCPATA",23,0)
CLR W @IOF,!?(IOM-$L(HD1)\2),HD1,!!
"RTN","DVBCPATA",24,0)
 Q
"RTN","DVBCPATA",25,0)
 ;
"RTN","DVBCPATA",26,0)
MPI(DVBBKMSG,DFN) ;MPI call to set ICN
"RTN","DVBCPATA",27,0)
 ;check to see if CIRN PD/MPI is installed
"RTN","DVBCPATA",28,0)
 I $D(DG20NAME) K DG20NAME
"RTN","DVBCPATA",29,0)
 N X S X="MPIFAPI" X ^%ZOSF("TEST") Q:'$T
"RTN","DVBCPATA",30,0)
 K MPIFRTN
"RTN","DVBCPATA",31,0)
 S MPIFS=1
"RTN","DVBCPATA",32,0)
 D MPIQ^MPIFAPI(DFN)
"RTN","DVBCPATA",33,0)
 K MPIFRTN
"RTN","DVBCPATA",34,0)
 Q
"RTN","DVBCUTIL")
0^15^B46886926^B33092099
"RTN","DVBCUTIL",1,0)
DVBCUTIL ;ALB/GTS-557/THM;C&P UTILITY ROUTINE ; 11/3/2010
"RTN","DVBCUTIL",2,0)
 ;;2.7;AMIE;**17,126,143,149**;Apr 10, 1995;Build 16
"RTN","DVBCUTIL",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBCUTIL",4,0)
 ;
"RTN","DVBCUTIL",5,0)
KILL ;common exit
"RTN","DVBCUTIL",6,0)
 D ^%ZISC I $D(FF),'$D(ZTQUEUED) W @FF,!!
"RTN","DVBCUTIL",7,0)
 K %DT,ADR1,ADR2,ADR3,BDTRQ,BUSPHON,CITY,CNDCT,CNUM,DFN,DIW,DIWF,DIWL,DIWR,DIWT,DN,DOB,DTA,DTRQ,DX,DXCOD,DXNUM,EDTRQ,HOMPHON,I,LINE,MDTRM,NAME,OTHDIS,PCT,PG,PGHD,POP,PRINT,REQN,RO,ROHD,RONAME,RQ,SC,D,DIE,ONE,DVBCNEW,LN,FEXM,PRIO,DTB
"RTN","DVBCUTIL",8,0)
 K SEX,SSN,STATE,TST,X,Y,Z,JI,JII,ZIP,JJ,KJX,D0,D1,DA,DI,DIC,DIPGM,DLAYGO,DQ,DWLW,HD,HD1,HD2,J,ONFILE,CTIM,JJ,C,DIZ,DPTSZ,STAT,JDT,JY,TSTDT,DIYS,EXAM,DR,REQDT,ELIG,INCMP,PRDSV,WARD,ADD1,ADD2,CNTY,PG,OLDDA,DIRUT,DUOUT
"RTN","DVBCUTIL",9,0)
 K DVBCCNT,TNAM,DIR,TEMP,SWITCH,EDTA,RAD,EOD,%T,STATUS,XX,XDD,OLDA,OLDA1
"RTN","DVBCUTIL",10,0)
 K DTTRNSC,ZIP4,DVBAINSF,DTT,TAD1,TAD2,TAD3,TCITY,TST,TZIP,TPHONE
"RTN","DVBCUTIL",11,0)
 K COUNTY,PROVINCE,POSTALCD,COUNTRY
"RTN","DVBCUTIL",12,0)
 G KILL^DVBCUTL2
"RTN","DVBCUTIL",13,0)
 ;
"RTN","DVBCUTIL",14,0)
DICW ;used on ^DIC lookups only
"RTN","DVBCUTIL",15,0)
 W ! S TSTDT=$P(^(0),U,2),RO=$P(^(0),U,3),STAT=$P(^(0),U,18),RONAME=$S($D(^DIC(4,+RO,0)):$P(^(0),U,1),1:"Unknown RO") D DICW1
"RTN","DVBCUTIL",16,0)
 W ! Q
"RTN","DVBCUTIL",17,0)
 ;
"RTN","DVBCUTIL",18,0)
DICW1 F JY=0:0 S JY=$O(^DVB(396.4,"C",+Y,JY)) Q:JY=""  S EXAM=$P(^DVB(396.4,+JY,0),U,3),EXAM=$S($D(^DVB(396.6,EXAM,0)):$P(^(0),U,1),1:"Unknown exam") D DICW2
"RTN","DVBCUTIL",19,0)
 Q
"RTN","DVBCUTIL",20,0)
 ;
"RTN","DVBCUTIL",21,0)
DICW2 W ?3,EXAM," (",$$FMTE^XLFDT(TSTDT,"5DZ")," by ",RONAME,")",!
"RTN","DVBCUTIL",22,0)
 Q
"RTN","DVBCUTIL",23,0)
 ;
"RTN","DVBCUTIL",24,0)
VARS S DTA=^DVB(396.3,DA,0),DFN=$P(DTA,U,1),(NAME,PNAM)=$P(^DPT(DFN,0),U,1),DOB=$P(^(0),U,3),SEX=$P(^(0),U,2),SSN=$P(^(0),U,9),CNUM=$S($D(^DPT(DFN,.31)):$P(^(.31),U,3),1:"Unknown"),DTRQ=$P(DTA,U,2)
"RTN","DVBCUTIL",25,0)
 S RO=$P(DTA,U,3),FEXM=$P(DTA,U,9) S:RO="" RO=0 S RONAME=$S($D(^DIC(4,RO,0)):$P(^(0),U,1),1:"Unknown")
"RTN","DVBCUTIL",26,0)
 S REQN=$P(DTA,U,4),REQN=$S($D(^VA(200,+REQN,0)):$P(^(0),U,1),1:"Unknown"),OTHDIS=$P(DTA,U,11) I $D(^DVB(396.3,DA,1)) S OTHDIS1=$P(^(1),U,9),OTHDIS2=$P(^(1),U,10)
"RTN","DVBCUTIL",27,0)
 S ZPR=$P(DTA,U,10) S PRIO="" D  S:PRIO']"" PRIO="Unknown"
"RTN","DVBCUTIL",28,0)
 . I ZPR="T" S PRIO="Terminal" Q
"RTN","DVBCUTIL",29,0)
 . I ZPR="P" S PRIO="Prisoner of war" Q
"RTN","DVBCUTIL",30,0)
 . I ZPR="OS" S PRIO="Original SC" Q
"RTN","DVBCUTIL",31,0)
 . I ZPR="ON" S PRIO="Original NSC" Q
"RTN","DVBCUTIL",32,0)
 . I ZPR="I" S PRIO="Increase" Q
"RTN","DVBCUTIL",33,0)
 . I ZPR="R" S PRIO="Review" Q
"RTN","DVBCUTIL",34,0)
 . I ZPR="OTR" S PRIO="Other" Q
"RTN","DVBCUTIL",35,0)
 . I ZPR="E" S PRIO="Inadequate exam" Q
"RTN","DVBCUTIL",36,0)
 . I ZPR="AO" S PRIO="Agent Orange" Q
"RTN","DVBCUTIL",37,0)
 . I ZPR="BDD" S PRIO="Ben Deliv at Disch" Q
"RTN","DVBCUTIL",38,0)
 . I ZPR="DCS" S PRIO="DES Claimed Cond By Svcmbr" Q
"RTN","DVBCUTIL",39,0)
 . I ZPR="DFD" S PRIO="DES Fit-For-Duty" Q
"RTN","DVBCUTIL",40,0)
 . I ZPR="QS" S PRIO="Quick Start"
"RTN","DVBCUTIL",41,0)
 K DVBAINSF S:ZPR="E" DVBAINSF=""
"RTN","DVBCUTIL",42,0)
 S (ADR1,ADR2,ADR3,CITY,STATE,ZIP)=""
"RTN","DVBCUTIL",43,0)
 I $D(^DPT(DFN,.11)) D
"RTN","DVBCUTIL",44,0)
 .S DTA=^DPT(DFN,.11)
"RTN","DVBCUTIL",45,0)
 .S ADR1=$P(DTA,U,1),ADR2=$P(DTA,U,2),ADR3=$P(DTA,U,3),CITY=$P(DTA,U,4)
"RTN","DVBCUTIL",46,0)
 .S ZIP=$P(DTA,U,12) S:ZIP'="" ZIP=$S($L(ZIP)>5:$E(ZIP,1,5)_"-"_$E(ZIP,6,9),1:ZIP) I ZIP="" S ZIP="No Zip"
"RTN","DVBCUTIL",47,0)
 .S CITY=$S(CITY]"":CITY,1:"Unknown") S STATE=$P(DTA,U,5) I STATE]"" S STATE=$S($D(^DIC(5,STATE,0)):$P(^(0),U,1),1:"Unknown")
"RTN","DVBCUTIL",48,0)
 .S COUNTY=$P(DTA,U,7),PROVINCE=$P(DTA,U,8),POSTALCD=$P(DTA,U,9)
"RTN","DVBCUTIL",49,0)
 .S COUNTRY=$P(DTA,U,10)
"RTN","DVBCUTIL",50,0)
 S (HOMPHON,BUSPHON)="Unknown" I $D(^DPT(DFN,.13)) S HOMPHON=$P(^(.13),U,1),BUSPHON=$P(^(.13),U,2)
"RTN","DVBCUTIL",51,0)
 I $D(^DPT(DFN,.121)) D   ;DVBA/126 added
"RTN","DVBCUTIL",52,0)
 .S (DTT,TAD1,TAD2,TAD3,TCITY,TST,TZIP,TPHONE)=""
"RTN","DVBCUTIL",53,0)
 .S DTT=^DPT(DFN,.121)
"RTN","DVBCUTIL",54,0)
 .S TAD1=$P(DTT,U,1),TAD2=$P(DTT,U,2),TAD3=$P(DTT,U,3),TCITY=$P(DTT,U,4)
"RTN","DVBCUTIL",55,0)
 .S TZIP=$P(DTT,U,12) S:TZIP'="" TZIP=$S($L(TZIP)>5:$E(TZIP,1,5)_"-"_$E(TZIP,6,9),1:TZIP) I TZIP="" S TZIP="No Zip"
"RTN","DVBCUTIL",56,0)
 .S TCITY=$S(TCITY]"":TCITY,1:"Unknown") S TST=$P(DTT,U,5) I TST]"" S TST=$S($D(^DIC(5,TST,0)):$P(^(0),U,1),1:"Unknown")
"RTN","DVBCUTIL",57,0)
 .S TPHONE=$P(DTT,U,10) S:TPHONE="" TPHONE="Unknown"
"RTN","DVBCUTIL",58,0)
 S EDTA=$$SVC(DFN,"I"),EOD=$P(EDTA,U),RAD=$P(EDTA,U,2),Y=$S($D(^DVB(396.3,DA,1)):$P(^(1),U,7),1:"") X ^DD("DD") S LREXMDT=Y
"RTN","DVBCUTIL",59,0)
 Q
"RTN","DVBCUTIL",60,0)
 ;
"RTN","DVBCUTIL",61,0)
HDR W @FF,?(IOM-$L(HD2)\2),HD2,!!!?5,"Veteran name: ",PNAM,?45,"SSN: ",SSN,!?40,"C-NUMBER: ",CNUM,!!,"Exams on this request:",!!
"RTN","DVBCUTIL",62,0)
 S JII=""
"RTN","DVBCUTIL",63,0)
 F JIJ=0:0 S JII=$O(^TMP($J,JII)) Q:JII=""  S XST=$P(^TMP($J,JII),U,1) W JII,", ",$S(XST="C":"Completed",XST="RX":"Cancelled by RO",XST="X":"Cancelled by MAS",XST="T":"Transferred",1:"Open"),", " I $X>30 W !
"RTN","DVBCUTIL",64,0)
 Q
"RTN","DVBCUTIL",65,0)
 ;
"RTN","DVBCUTIL",66,0)
ADDR ;
"RTN","DVBCUTIL",67,0)
 N ADD1,ADD2,ADD3,CITY,CNTY,STATE,ZIP,COUNTRY,POSTCODE,PROVINCE
"RTN","DVBCUTIL",68,0)
 N PRDSV,ELIG,INCMP
"RTN","DVBCUTIL",69,0)
 S (ADD1,ADD2,ADD3,CITY,CNTY,STATE,ZIP,COUNTRY,POSTCODE,PROVINCE)=""
"RTN","DVBCUTIL",70,0)
 I $D(^DPT(DFN,.11)) S DTA=^(.11),ADD1=$P(DTA,U,1),ADD2=$P(DTA,U,2),ADD3=$P(DTA,U,3),CITY=$P(DTA,U,4),STATE=$P(DTA,U,5),ZIP=$P(DTA,U,12),CNTY=$P(DTA,U,7),PROVINCE=$P(DTA,U,8),POSTCODE=$P(DTA,U,9),COUNTRY=$P(DTA,U,10)
"RTN","DVBCUTIL",71,0)
 W !!?0,"Address: ",?14,ADD1,!
"RTN","DVBCUTIL",72,0)
 W:ADD2]"" ?14,ADD2,!
"RTN","DVBCUTIL",73,0)
 W:ADD3]"" ?14,ADD3,!
"RTN","DVBCUTIL",74,0)
 ;Functionality for USA Unique Address Output
"RTN","DVBCUTIL",75,0)
 D:$$ISFORGN(COUNTRY)'>0 
"RTN","DVBCUTIL",76,0)
 . S:ZIP'="" ZIP=$S($L(ZIP)>5:$E(ZIP,1,5)_"-"_$E(ZIP,6,9),1:ZIP)
"RTN","DVBCUTIL",77,0)
 . S CNTY=$S($D(^DIC(5,+STATE,1,+CNTY,0)):$P(^(0),U,1),1:"Unknown")
"RTN","DVBCUTIL",78,0)
 . S STATE=$S($D(^DIC(5,+STATE,0)):$P(^(0),U,1),1:"Unknown")
"RTN","DVBCUTIL",79,0)
 . W ?0,"City:",?14,CITY,"  ",STATE,"  ",ZIP,!?0,"County:",?14,CNTY,!
"RTN","DVBCUTIL",80,0)
 ;Functionality for Foreign Unique Address Output
"RTN","DVBCUTIL",81,0)
 D:$$ISFORGN(COUNTRY)>0
"RTN","DVBCUTIL",82,0)
 . I POSTCODE="" S POSTCODE="Unknown"
"RTN","DVBCUTIL",83,0)
 . I CITY="" S CITY="Unknown"
"RTN","DVBCUTIL",84,0)
 . I PROVINCE="" S PROVINCE="Unknown"
"RTN","DVBCUTIL",85,0)
 . W ?0,"Postal Code:",?14,POSTCODE,!?0,"City:",?14,CITY,!?0,"Province: ",?14,PROVINCE,!
"RTN","DVBCUTIL",86,0)
 W:COUNTRY>0 ?0,"Country:",?14,$$GETCNTRY(+COUNTRY),!
"RTN","DVBCUTIL",87,0)
 W !
"RTN","DVBCUTIL",88,0)
 S PRDSV=$S($D(^DPT(DFN,.32)):$P(^(.32),U,3),1:"") I PRDSV]"" S PRDSV=$P(^DIC(21,PRDSV,0),U,1)
"RTN","DVBCUTIL",89,0)
 W "Period of service: ",PRDSV,!
"RTN","DVBCUTIL",90,0)
 S ELIG="",INCMP=0
"RTN","DVBCUTIL",91,0)
 W ?0,"Eligibility data:" I $D(^DPT(DFN,.36)),$P(^(.36),U,1)]"" S ELIG=$S($D(^DIC(8,+^(.36),0)):$P(^(0),U,6),1:"")
"RTN","DVBCUTIL",92,0)
 I ELIG]"",$D(^DPT(DFN,.361)),^(.361)]"" S ELIG=ELIG_" ("_$S($P(^(.361),U,1)="P":"Pend ver",$P(^(.361),U,1)="R":"Pend re-verif",$P(^(.361),U,1)="V":"Verified",1:"Not verified")_")"
"RTN","DVBCUTIL",93,0)
 I $D(^DPT(DFN,.29)),$P(^(.29),U,1)]"" S INCMP=1
"RTN","DVBCUTIL",94,0)
 I $D(^DPT(DA,.293)),$P(^(.293),U,1)=1 S INCMP=1
"RTN","DVBCUTIL",95,0)
 W ?19,ELIG_$S(ELIG]"":", ",1:"")_$S(INCMP=1:"Incompetent",1:""),!
"RTN","DVBCUTIL",96,0)
 Q
"RTN","DVBCUTIL",97,0)
 ;
"RTN","DVBCUTIL",98,0)
SSNSHRT ;  ** Set SSN in the Format '***********' **
"RTN","DVBCUTIL",99,0)
 K DVBCSSNO
"RTN","DVBCUTIL",100,0)
 S DVBCSSNO=$E(SSN,1,3)_" "_$E(SSN,4,5)_" "_$E(SSN,6,9)
"RTN","DVBCUTIL",101,0)
 Q
"RTN","DVBCUTIL",102,0)
 ;
"RTN","DVBCUTIL",103,0)
SSNOUT ;  ** Set SSN in the Format '*********** (Z6789) **
"RTN","DVBCUTIL",104,0)
 D SSNSHRT
"RTN","DVBCUTIL",105,0)
 S DVBCSSNO=DVBCSSNO_" ("_$E(PNAM)_$E(SSN,6,9)_")"
"RTN","DVBCUTIL",106,0)
 Q
"RTN","DVBCUTIL",107,0)
 ;
"RTN","DVBCUTIL",108,0)
ISFORGN(DVBIEN)  ;  ** Is country entry foreign? **
"RTN","DVBCUTIL",109,0)
 ;  Input:  DVBIEN - IEN of COUNTRY CODE file
"RTN","DVBCUTIL",110,0)
 ;
"RTN","DVBCUTIL",111,0)
 ;  Output:  Return 1 when country is foreign
"RTN","DVBCUTIL",112,0)
 ;           Return 0 when country is not foreign
"RTN","DVBCUTIL",113,0)
 ;           Return -1 on error
"RTN","DVBCUTIL",114,0)
 ;
"RTN","DVBCUTIL",115,0)
 N DVBCNTRY
"RTN","DVBCUTIL",116,0)
 N DVBERR
"RTN","DVBCUTIL",117,0)
 Q:$G(DVBIEN)="" -1
"RTN","DVBCUTIL",118,0)
 S DVBCNTRY=$$GET1^DIQ(779.004,DVBIEN_",",".01","","","DVBERR")
"RTN","DVBCUTIL",119,0)
 Q $S($D(DVBERR):-1,DVBCNTRY="USA":0,1:1)
"RTN","DVBCUTIL",120,0)
 ;
"RTN","DVBCUTIL",121,0)
GETCNTRY(DVBIEN)  ;  ** Get POSTAL NAME for country code **
"RTN","DVBCUTIL",122,0)
 ;  Input:  DVBIEN - IEN of COUNTRY CODE file
"RTN","DVBCUTIL",123,0)
 ;
"RTN","DVBCUTIL",124,0)
 ;  Output:  Return POSTAL NAME field on success or
"RTN","DVBCUTIL",125,0)
 ;           DESCRIPTION field when POSTAL NAME = "<NULL>";
"RTN","DVBCUTIL",126,0)
 ;           Otherwise, return "" on failure.
"RTN","DVBCUTIL",127,0)
 ;
"RTN","DVBCUTIL",128,0)
 N DVBCNTRY
"RTN","DVBCUTIL",129,0)
 N DVBERR
"RTN","DVBCUTIL",130,0)
 N DVBIENS
"RTN","DVBCUTIL",131,0)
 N DVBNAME
"RTN","DVBCUTIL",132,0)
 S DVBNAME=""
"RTN","DVBCUTIL",133,0)
 I $G(DVBIEN)'="" D
"RTN","DVBCUTIL",134,0)
 . S DVBIENS=DVBIEN_","
"RTN","DVBCUTIL",135,0)
 . D GETS^DIQ(779.004,DVBIENS,"1.3;2","E","DVBCNTRY","DVBERR")
"RTN","DVBCUTIL",136,0)
 . I '$D(DVBERR) D
"RTN","DVBCUTIL",137,0)
 . . S DVBNAME=$G(DVBCNTRY(779.004,DVBIENS,1.3,"E"))
"RTN","DVBCUTIL",138,0)
 . . I DVBNAME="<NULL>" S DVBNAME=$$UP^XLFSTR($G(DVBCNTRY(779.004,DVBIENS,2,"E")))
"RTN","DVBCUTIL",139,0)
 Q DVBNAME
"RTN","DVBCUTIL",140,0)
 ;
"RTN","DVBCUTIL",141,0)
SVC(DFN,DVBCIE) ;Retrieve Last Military Service Data Info
"RTN","DVBCUTIL",142,0)
 ; Using supported API SVC^VAPDT, which encapsulates the
"RTN","DVBCUTIL",143,0)
 ; Military Service Episode (MSE) changes due to the
"RTN","DVBCUTIL",144,0)
 ; Enrollment Military Service Data Sharing (MSDS) project 
"RTN","DVBCUTIL",145,0)
 ; (Patch DG*5.3*797)
"RTN","DVBCUTIL",146,0)
 ; INPUT
"RTN","DVBCUTIL",147,0)
 ;    DFN     - Patient (#2) file internal entry  number (Required)
"RTN","DVBCUTIL",148,0)
 ;    DVBCIE  - "I" to return service dates in Fileman format (Default)
"RTN","DVBCUTIL",149,0)
 ;              "E" to return servce dates in external format
"RTN","DVBCUTIL",150,0)
 ; OUTPUT
"RTN","DVBCUTIL",151,0)
 ;    Returns '^' delimitted string
"RTN","DVBCUTIL",152,0)
 ;       1. Last Service Entry Date
"RTN","DVBCUTIL",153,0)
 ;       2. Last Service Seperation Date
"RTN","DVBCUTIL",154,0)
 ;       3. Last Service Branch
"RTN","DVBCUTIL",155,0)
 ;       4. Last Service Discharge Type
"RTN","DVBCUTIL",156,0)
 ; 
"RTN","DVBCUTIL",157,0)
 ;Quit if DFN not greater than zero
"RTN","DVBCUTIL",158,0)
 Q:($G(DFN)'>0) ""
"RTN","DVBCUTIL",159,0)
 ;If DVBCIE not "I" or "E" set to default of "I"
"RTN","DVBCUTIL",160,0)
 S:"^I^E^"'[(U_$G(DVBCIE)_U) DVBCIE="I"
"RTN","DVBCUTIL",161,0)
 N VASV,VAHOW,VAROOT,DVBMSE
"RTN","DVBCUTIL",162,0)
 D SVC^VADPT
"RTN","DVBCUTIL",163,0)
 D:DVBCIE="E"  ;external Last MSE data
"RTN","DVBCUTIL",164,0)
 . S DVBMSE=$P($G(VASV(6,4)),U,2)_"^"_$P($G(VASV(6,5)),U,2)_"^"
"RTN","DVBCUTIL",165,0)
 . S DVBMSE=DVBMSE_$P($G(VASV(6,1)),U,2)_"^"_$P($G(VASV(6,3)),U,2)
"RTN","DVBCUTIL",166,0)
 D:DVBCIE="I"  ;internal Last MSE data
"RTN","DVBCUTIL",167,0)
 . S DVBMSE=$P($G(VASV(6,4)),U)_"^"_$P($G(VASV(6,5)),U)_"^"
"RTN","DVBCUTIL",168,0)
 . S DVBMSE=DVBMSE_$P($G(VASV(6,1)),U)_"^"_$P($G(VASV(6,3)),U)
"RTN","DVBCUTIL",169,0)
 Q DVBMSE
"RTN","DVBCXFRB")
0^28^B16766311^B15626255
"RTN","DVBCXFRB",1,0)
DVBCXFRB ;ALB/GTS-557/THM-LOAD TRANSFER MAIL MESSAGE ; 4/29/91  8:09 AM
"RTN","DVBCXFRB",2,0)
 ;;2.7;AMIE;**149**;Apr 10, 1995;Build 16
"RTN","DVBCXFRB",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBCXFRB",4,0)
 ;
"RTN","DVBCXFRB",5,0)
EN ;file 2
"RTN","DVBCXFRB",6,0)
 N DVBSBRCH,DVBDTYPE
"RTN","DVBCXFRB",7,0)
 K ^TMP("DVBCXFR",$J),L S X=^DVB(396.3,REQDA,0),DFN=$P(X,U,1)
"RTN","DVBCXFRB",8,0)
 S X=^DPT(DFN,0),PNAM=$P(X,U,1),DOB=$P(X,U,3),SEX=$P(X,U,2),SSN=$P(X,U,9)
"RTN","DVBCXFRB",9,0)
 S X=$S($D(^DPT(DFN,.11)):^(.11),1:""),ADR1=$P(X,U,1),ADR2=$P(X,U,2),ADR3=$P(X,U,3),CITY=$P(X,U,4),STATE=$P(X,U,5),ZIP=$P(X,U,6),CNTY=$P(X,U,7),ZIP4=$P(X,U,12)
"RTN","DVBCXFRB",10,0)
 S CNTY=$S($D(^DIC(5,+STATE,1,+CNTY,0)):$P(^(0),U,1),1:""),STATE=$S($D(^DIC(5,+STATE,0)):$P(^(0),U,1),1:"")
"RTN","DVBCXFRB",11,0)
 S X=$S($D(^DPT(DFN,.13)):^(.13),1:"") S HOMPHON=$P(X,U,1),BUSPHON=$P(X,U,2)
"RTN","DVBCXFRB",12,0)
 S X=$S($D(^DPT(DFN,.3)):^(.3),1:""),SRVCON=$P(X,U,1),SRVPCT=$P(X,U,2)
"RTN","DVBCXFRB",13,0)
 S X=$S($D(^DPT(DFN,.31)):^(.31),1:""),CNUM=$P(X,U,3)
"RTN","DVBCXFRB",14,0)
 S CFLOC=$$STATION^DVBAUTL1(DFN)
"RTN","DVBCXFRB",15,0)
 S:CFLOC=-1 CFLOC=""
"RTN","DVBCXFRB",16,0)
 S X=$S($D(^DPT(DFN,.32)):^(.32),1:""),PDSRV=$P(X,U,3),PDSRV=$S($D(^DIC(21,+PDSRV,0)):$P(^(0),U,3),1:"")
"RTN","DVBCXFRB",17,0)
 S X=$$SVC^DVBCUTIL(DFN,"I"),SRVEDT=$P(X,U),SRVSDT=$P(X,U,2)
"RTN","DVBCXFRB",18,0)
 S X=$$SVC^DVBCUTIL(DFN,"E"),DVBSBRCH=$P(X,U,3),DVBDTYPE=$P(X,U,4)
"RTN","DVBCXFRB",19,0)
 S X=$S($D(^DPT(DFN,.36)):^(.36),1:""),ELIGCOD=$P(X,U,1),ELIGCOD=$S($D(^DIC(8,+ELIGCOD,0)):$P(^(0),U,9),1:"")
"RTN","DVBCXFRB",20,0)
 S X=$S($D(^DPT(DFN,.361)):^(.361),1:""),ELIGST=$P(X,U,1),ELIGSDT=$P(X,U,2)
"RTN","DVBCXFRB",21,0)
 S X=$S($D(^DPT(DFN,.52)):^(.52),1:""),POWSTAT=$P(X,U,5)
"RTN","DVBCXFRB",22,0)
 S X=$S($D(^DPT(DFN,"VET")):^("VET"),1:""),VETST=$P(X,U,1)
"RTN","DVBCXFRB",23,0)
 S X=$S($D(^DPT(DFN,"TYPE")):^("TYPE"),1:"") S TYPE=$S(X]"":$P(^DG(391,X,0),U,1),1:"")
"RTN","DVBCXFRB",24,0)
 S LINE(1)="$DEM0 "_PNAM_U_DOB_U_SEX_U_SSN
"RTN","DVBCXFRB",25,0)
 S LINE(2)="$DEM1 "_ADR1_U_ADR2_U_ADR3_U_CITY_U_STATE_U_CNTY_U_ZIP_U_HOMPHON_U_BUSPHON_U_ZIP4
"RTN","DVBCXFRB",26,0)
 S LINE(3)="$ELIG "_SRVCON_U_SRVPCT_U_CFLOC_U_CNUM_U_PDSRV_U_SRVEDT_U_SRVSDT_U_ELIGCOD_U_ELIGST_U_ELIGSDT_U_POWSTAT_U_VETST_U_TYPE_U_DVBSBRCH_U_DVBDTYPE
"RTN","DVBCXFRB",27,0)
 ;
"RTN","DVBCXFRB",28,0)
 ;file 396.3
"RTN","DVBCXFRB",29,0)
EN1 S X=^DVB(396.3,REQDA,0),RO=$P(X,U,3),RONAM=$P($G(^DIC(4,+RO,99)),U,1),REQDT=$P(X,U,2),FEXM=$P(X,U,9),PRIO=$P(X,U,10),OTHDIS=$P(X,U,11),LREXMDT=$P(X,U,20)
"RTN","DVBCXFRB",30,0)
 S X=$S($D(^DVB(396.3,REQDA,1)):^(1),1:""),CFREQ=$P(X,U,2),OTHDOC=$P(X,U,3),LREXMDT=$P(X,U,7),OTHDIS1=$P(X,U,9),OTHDIS2=$P(X,U,10)
"RTN","DVBCXFRB",31,0)
 S LINE(4)="$REQ0 "_REQDA_U_RO_U_PRIO_U_CFLOC_U_LREXMDT_U_CFREQ_U_LREXMDT_U_RONAM
"RTN","DVBCXFRB",32,0)
 S LINE(5)="$ODIS "_OTHDIS_U_OTHDIS1_U_OTHDIS2
"RTN","DVBCXFRB",33,0)
 S EXAMS="$EXAM "_EXAMS,LINE(6)=EXAMS
"RTN","DVBCXFRB",34,0)
 ;**NOTE: RONAM is now RO NUMBER
"RTN","DVBCXFRB",35,0)
LOAD S L=1,^TMP("DVBCXFR",$J,L,0)="$TRANSFER IN",L=L+1
"RTN","DVBCXFRB",36,0)
 F X=1:1 Q:'$D(LINE(X))  S ^TMP("DVBCXFR",$J,L,0)=LINE(X),L=L+1
"RTN","DVBCXFRB",37,0)
 F JI=0:0 S JI=$O(^DVB(396.3,REQDA,2,JI)) Q:JI=""  S ^TMP("DVBCXFR",$J,L,0)="$REMK "_^DVB(396.3,REQDA,2,JI,0),L=L+1
"RTN","DVBCXFRB",38,0)
 S SITE=$P(^XMB(1,1,0),U,1),SITE1=$P(^DIC(4.2,SITE,0),U,1)
"RTN","DVBCXFRB",39,0)
 S USERNM=$P(^VA(200,DUZ,0),U,1),^TMP("DVBCXFR",$J,L,0)="$USER "_USERNM_U_SITE_U_SITE1,L=L+1
"RTN","DVBCXFRB",40,0)
 S ^TMP("DVBCXFR",$J,L,0)="$END "
"RTN","DVBCXFRB",41,0)
 N XMNODE
"RTN","DVBCXFRB",42,0)
 S XMNODE=0
"RTN","DVBCXFRB",43,0)
 F X=(L+1):1:(L+XMCNT) DO
"RTN","DVBCXFRB",44,0)
 .S XMNODE=XMNODE+1
"RTN","DVBCXFRB",45,0)
 .S ^TMP("DVBCXFR",$J,X,0)=XMVAR(XMNODE)
"RTN","DVBCXFRB",46,0)
 S ^TMP("DVBCXFR",$J,X+1,0)="$END1 "
"RTN","DVBCXFRB",47,0)
 ;
"RTN","DVBCXFRB",48,0)
SEND K XMZ
"RTN","DVBCXFRB",49,0)
 ;S XMY("POSTMASTER@"_DOMNAM)=DOMNUM
"RTN","DVBCXFRB",50,0)
 S XMY(DUZ)="",XMY("S.DVBA C PROCESS MAIL MESSAGE@"_DOMNAM)=DOMNUM,XMSUB="Transfer of C&P Exams",XMTEXT="^TMP(""DVBCXFR"",$J,",XMDUZ=DUZ D ^XMD
"RTN","DVBCXFRB",51,0)
 I $D(XMZ) W !!,"Transmitted as message # "_XMZ_" from this site to "_DOMNAM,! H 3
"RTN","DVBCXFRB",52,0)
 I '$D(XMZ) W !!,*7,"Message transmission error!",!,"Request WILL NOT be transferred!",!!,"Press RETURN  " R ANS:DTIME S OUT=1 G KILL^DVBCUTIL
"RTN","DVBCXFRB",53,0)
 ;if all ok, update main, sub-file
"RTN","DVBCXFRB",54,0)
 F III=0:0 S III=$O(XEXAMS(III)) Q:III=""  S DIE="^DVB(396.4,",DA=III,DR=".04///T;62///"_DOMNAM_";60////"_DT_";61///"_USERNM D ^DIE
"RTN","DVBCXFRB",55,0)
 K DIE,DA,DR S DIE="^DVB(396.3,",DA=REQDA,DR="31///y;32///N"
"RTN","DVBCXFRB",56,0)
 D ^DIE ;set transfer items
"RTN","DVBCXFRB",57,0)
 K LINE,DOMNUM,DOMNUM1,^TMP("DVBCXFR",$J),XMDUZ,III,L,JI,JY,XMY,XMZ,XMSUB,XMTEXT,XMDUZ,DIE,DA,DR,TYPE
"RTN","DVBCXFRB",58,0)
 G KILL^DVBCUTIL
"RTN","DVBCXFRC")
0^29^B44128395^B40353772
"RTN","DVBCXFRC",1,0)
DVBCXFRC ;ALB/GTS-557/THM-PROCESS TRANSFER-IN MAIL MESSAGE ; 10/4/91  9:26 AM
"RTN","DVBCXFRC",2,0)
 ;;2.7;AMIE;**1,6,18,65,149**;Apr 10, 1995;Build 16
"RTN","DVBCXFRC",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBCXFRC",4,0)
 ;
"RTN","DVBCXFRC",5,0)
EN1 N XMB K OUT,CNT S (CNTA,OUT)=0 X XMREC I XMRG["TRANSFER OUT" G EN1^DVBCXFRS
"RTN","DVBCXFRC",6,0)
 F DVBCI=0:0 X XMREC Q:XMER<0!(XMRG["$END")  S XLN=XMRG,SUB=$E(XLN,2,5),XLN=$E(XLN,7,245) D @SUB
"RTN","DVBCXFRC",7,0)
 ;check for existence of primary division
"RTN","DVBCXFRC",8,0)
 S DVBCDIV=$$PRIM^VASITE I DVBCDIV=""!(DVBCDIV=-1) D BULL8^DVBCXFRD G EXIT
"RTN","DVBCXFRC",9,0)
 ;check for unique regional office station# using variable ronam
"RTN","DVBCXFRC",10,0)
 S RO=$$FIND1^DIC(4,,"X",RONAM,"D",,"DVBCERR") I RO=""!(RO=0) S OUT=1 D BULL11^DVBCXFRD G EXIT
"RTN","DVBCXFRC",11,0)
 ;if primary division and regional office station# ok, then proceed
"RTN","DVBCXFRC",12,0)
 K XLN,CNTA I XMRG["$END" S OUT=0 D PATEDIT G:OUT EXIT D REQEDIT
"RTN","DVBCXFRC",13,0)
 I $D(DVBCNEW) S XMB="DVBA C NEW C&P VETERAN",XMB(1)=PNAM,XMB(2)=SSN,XMB(3)=$S($D(^VA(200,+DUZ,0)):$P(^(0),U),1:"Unknown user"),Y=DT X ^DD("DD") S XMB(4)=Y D ^XMB
"RTN","DVBCXFRC",14,0)
 ;
"RTN","DVBCXFRC",15,0)
EXIT D DELSER^DVBCUTL4 ;deletes the server message
"RTN","DVBCXFRC",16,0)
 K DGMSGF,TYPE,REASONS,DVBADMNM,EXMRS,XMORPV,DVBSBRCH,DVBDTYPE
"RTN","DVBCXFRC",17,0)
 G KILL^DVBCUTIL
"RTN","DVBCXFRC",18,0)
 ;
"RTN","DVBCXFRC",19,0)
DEM0 S PNAM=$E($P(XLN,U,1),1,28),DOB=$P(XLN,U,2),SEX=$P(XLN,U,3),SSN=$P(XLN,U,4)
"RTN","DVBCXFRC",20,0)
 Q
"RTN","DVBCXFRC",21,0)
 ;
"RTN","DVBCXFRC",22,0)
USER S USER=$P(XLN,U,1),SITE=$P(XLN,U,2),SITE1=$P(XLN,U,3)
"RTN","DVBCXFRC",23,0)
 Q
"RTN","DVBCXFRC",24,0)
 ;
"RTN","DVBCXFRC",25,0)
DEM1 S ADR1=$P(XLN,U,1),ADR2=$P(XLN,U,2),ADR3=$P(XLN,U,3),CITY=$P(XLN,U,4),STATE=$P(XLN,U,5),CNTY=$P(XLN,U,6),ZIP=$P(XLN,U,7),HOMPHON=$P(XLN,U,8),BUSPHON=$P(XLN,U,9),ZIP4=$P(XLN,U,10)
"RTN","DVBCXFRC",26,0)
 I STATE?.E1A.E S STATE=$O(^DIC(5,"B",STATE,0)) DO
"RTN","DVBCXFRC",27,0)
 .I CNTY?.E1A.E S CNTY=$O(^DIC(5,+STATE,1,"B",CNTY,0)) Q
"RTN","DVBCXFRC",28,0)
 I 'STATE S STATE=""
"RTN","DVBCXFRC",29,0)
 I 'CNTY S CNTY=""
"RTN","DVBCXFRC",30,0)
 Q
"RTN","DVBCXFRC",31,0)
 ;
"RTN","DVBCXFRC",32,0)
ELIG S SRVCON=$P(XLN,U,1),SRVPCT=$P(XLN,U,2),CFLOC=$P(XLN,U,3),CNUM=$P(XLN,U,4),PDSRV=$P(XLN,U,5),SRVEDT=$P(XLN,U,6),SRVSDT=$P(XLN,U,7),ELIGCOD=$P(XLN,U,8),ELIGST=$P(XLN,U,9),ELIGSDT=$P(XLN,U,10),POWSTAT=$P(XLN,U,11),VETST=$P(XLN,U,12)
"RTN","DVBCXFRC",33,0)
 S TYPE=$P(XLN,U,13),DVBSBRCH=$P(XLN,U,14),DVBDTYPE=$P(XLN,U,15),TYPEPTR=""
"RTN","DVBCXFRC",34,0)
 S:TYPE]"" TYPEPTR=$O(^DG(391,"B",TYPE,TYPEPTR))
"RTN","DVBCXFRC",35,0)
 S ELIGCOD=$O(^DIC(8,"D",+ELIGCOD,0))
"RTN","DVBCXFRC",36,0)
 S ELIGCOD=$S(ELIGCOD="":"",$D(^DIC(8,"D",+ELIGCOD)):$O(^DIC(8,"D",+ELIGCOD,0)),1:"")
"RTN","DVBCXFRC",37,0)
 S PDSRV=$S(PDSRV="":"",$D(^DIC(21,"D",PDSRV)):$O(^DIC(21,"D",PDSRV,0)),1:"")
"RTN","DVBCXFRC",38,0)
 Q
"RTN","DVBCXFRC",39,0)
 ;
"RTN","DVBCXFRC",40,0)
REQ0 S OLREQDA=$P(XLN,U,1),RO=$P(XLN,U,2),RONAM=$P(XLN,U,8),PRIO=$P(XLN,U,3),CFLOC=+$P(XLN,U,4),LREXMDT=$P(XLN,U,5),CFREQ=$P(XLN,U,6),LREXMDT=$P(XLN,U,7)
"RTN","DVBCXFRC",41,0)
 S CFLOC=$O(^DIC(4,"D",CFLOC,""))
"RTN","DVBCXFRC",42,0)
 S:'$D(^DIC(4,+CFLOC,0)) CFLOC=""
"RTN","DVBCXFRC",43,0)
 Q
"RTN","DVBCXFRC",44,0)
 ;
"RTN","DVBCXFRC",45,0)
ODIS S OTHDIS=$P(XLN,U,1),OTHDIS1=$P(XLN,U,2),OTHDIS2=$P(XLN,U,3)
"RTN","DVBCXFRC",46,0)
 Q
"RTN","DVBCXFRC",47,0)
 ;
"RTN","DVBCXFRC",48,0)
EXAM S EXAMS=$P(XLN,"^^",1),REASONS=$P(XLN,"^^",2)
"RTN","DVBCXFRC",49,0)
 Q
"RTN","DVBCXFRC",50,0)
 ;
"RTN","DVBCXFRC",51,0)
REMK S:'$D(CNT) CNT=0 S CNT=CNT+1,REMK(CNT)=XLN
"RTN","DVBCXFRC",52,0)
 Q
"RTN","DVBCXFRC",53,0)
 ;
"RTN","DVBCXFRC",54,0)
REQEDIT ;  ** Add entry to file #396.3 (request)
"RTN","DVBCXFRC",55,0)
 K DD,DO,DA,DR,DIC,X,Y S DIC="^DVB(396.3,",DLAYGO=396.3,DIC(0)="L",X=DFN
"RTN","DVBCXFRC",56,0)
 S DIC("DR")="1///NOW;2////"_RO_";3////.5;9////"_PRIO_";28///"_SITE1_";30////"_OLREQDA_";33////"_DT
"RTN","DVBCXFRC",57,0)
 D FILE^DICN K DLAYGO
"RTN","DVBCXFRC",58,0)
 S (DA,REQDA)=+Y I DA<0 S OUT=1 D BULL1^DVBCXFRD Q
"RTN","DVBCXFRC",59,0)
 ;Give Med Center Primary Division as routing location (DVBCDIV)
"RTN","DVBCXFRC",60,0)
 S DIE="^DVB(396.3,"
"RTN","DVBCXFRC",61,0)
 S DR="10////"_OTHDIS_";10.1////"_OTHDIS1_";10.2////"_OTHDIS2_";17////NT" D ^DIE
"RTN","DVBCXFRC",62,0)
 S DR="21////"_CFREQ_";23.3////"_LREXMDT_";24////"_DVBCDIV
"RTN","DVBCXFRC",63,0)
 D ^DIE K DIC,DIE,DD,DO
"RTN","DVBCXFRC",64,0)
 S CNT=0 I '$D(^DVB(396.3,REQDA,2,0)) S ^(0)="^^0^0^"_DT_"^^^^"
"RTN","DVBCXFRC",65,0)
 F ZI=0:0 S ZI=$O(REMK(ZI)) Q:ZI=""  S X=REMK(ZI) S CNT=CNT+1,^DVB(396.3,REQDA,2,CNT,0)=X F Y=3,4 S $P(^DVB(396.3,REQDA,2,0),U,Y)=CNT
"RTN","DVBCXFRC",66,0)
 S X="",DVBADMNM=$P(SITE1,".",1)
"RTN","DVBCXFRC",67,0)
 F I=1:1 S EXM=$P(EXAMS,U,I) Q:EXM=""  D SETVARS Q:OUT
"RTN","DVBCXFRC",68,0)
 ;if adding exams failed, then delete request
"RTN","DVBCXFRC",69,0)
 I OUT S DA=REQDA,DIK="^DVB(396.3," D ^DIK K DA,DIK
"RTN","DVBCXFRC",70,0)
 Q
"RTN","DVBCXFRC",71,0)
 ;
"RTN","DVBCXFRC",72,0)
PATEDIT ;  ** Lookup and/or Add entry to file #2 (patient)
"RTN","DVBCXFRC",73,0)
 N DVBCPT,DVBCARAY,DVBCERR,DVBCIENS,DOB2,NAME1,NAME2,BYEAR,X,Y
"RTN","DVBCXFRC",74,0)
 K DVBCNEW S DVBCPT=$$FIND1^DIC(2,,"X",SSN,"SSN",,"DVBCERR")
"RTN","DVBCXFRC",75,0)
 ;if error returned, send error msg
"RTN","DVBCXFRC",76,0)
 I DVBCPT="" S OUT=1 D BULL9^DVBCXFRD Q
"RTN","DVBCXFRC",77,0)
 ;if found matching ssn, make sure the name and dob also match
"RTN","DVBCXFRC",78,0)
 I +DVBCPT>0 D  Q
"RTN","DVBCXFRC",79,0)
 .S DVBCIENS=DVBCPT_"," K DVBCERR
"RTN","DVBCXFRC",80,0)
 .D GETS^DIQ(2,DVBCIENS,".01;.03;.09","I","DVBCARAY","DVBCERR")
"RTN","DVBCXFRC",81,0)
 .;if fm returned an error msg and no data, send error msg
"RTN","DVBCXFRC",82,0)
 .I '$D(DVBCARAY(2,DVBCIENS)) S OUT=1 D BULL10^DVBCXFRD Q
"RTN","DVBCXFRC",83,0)
 .;make sure about that ssn
"RTN","DVBCXFRC",84,0)
 .I SSN'=DVBCARAY(2,DVBCIENS,.09,"I") S OUT=1,DVBCERR(1)="Possible 'SSN' index problem.",DVBCERR(2)=""
"RTN","DVBCXFRC",85,0)
 .;if name and/or dob don't match, send error msg
"RTN","DVBCXFRC",86,0)
 .I (PNAM'=DVBCARAY(2,DVBCIENS,.01,"I"))!(DOB'=DVBCARAY(2,DVBCIENS,.03,"I")) D  Q:OUT
"RTN","DVBCXFRC",87,0)
 ..S X=$P(PNAM,",",1),NAME1(1)=$P(X," ",1),X=$P(PNAM,",",2),NAME1(2)=$P(X," ",1)
"RTN","DVBCXFRC",88,0)
 ..S X=$P(DVBCARAY(2,DVBCIENS,.01,"I"),",",1),NAME2(1)=$P(X," ",1),X=$P(DVBCARAY(2,DVBCIENS,.01,"I"),",",2),NAME2(2)=$P(X," ",1)
"RTN","DVBCXFRC",89,0)
 ..I (NAME1(1)'=NAME2(1))!(NAME1(2)'=NAME2(2)) S OUT=1
"RTN","DVBCXFRC",90,0)
 ..S BYEAR(1)=$E(DOB,1,3),BYEAR(2)=$E(DVBCARAY(2,DVBCIENS,.03,"I"),1,3)
"RTN","DVBCXFRC",91,0)
 ..I BYEAR(1)'=BYEAR(2) S OUT=1
"RTN","DVBCXFRC",92,0)
 ..I OUT D
"RTN","DVBCXFRC",93,0)
 ...S DVBCERR(1)="Patient name and/or DOB at target site does not match transfer request."
"RTN","DVBCXFRC",94,0)
 ...S DOB2=DVBCARAY(2,DVBCIENS,.03,"I") S Y=DOB2 X ^DD("DD") S DOB2=Y
"RTN","DVBCXFRC",95,0)
 ...S DVBCERR(2)="Name: "_DVBCARAY(2,DVBCIENS,.01,"I")_"   DOB: "_DOB2
"RTN","DVBCXFRC",96,0)
 ...D BULL10^DVBCXFRD
"RTN","DVBCXFRC",97,0)
 .S DFN=+DVBCPT K X,Y,DIC
"RTN","DVBCXFRC",98,0)
 ;if no match, then add record
"RTN","DVBCXFRC",99,0)
 I +DVBCPT=0 D  Q
"RTN","DVBCXFRC",100,0)
 .K DA,DR,DIC,DO,DD,X,Y S DVBCNEW=1
"RTN","DVBCXFRC",101,0)
 .S DLAYGO=2,DIC="^DPT(",DIC(0)="L",X=PNAM,DIC("DR")=".02////"_SEX_";.03////"_DOB_";.09////"_SSN
"RTN","DVBCXFRC",102,0)
 .D FILE^DICN K DLAYGO S (DFN,DA)=+Y
"RTN","DVBCXFRC",103,0)
 .I DA<0 D BULL3^DVBCXFRD S OUT=1 Q
"RTN","DVBCXFRC",104,0)
 .S DGMSGF=1 ;why is this variable needed?
"RTN","DVBCXFRC",105,0)
 .D ADDEDIT
"RTN","DVBCXFRC",106,0)
 .S DIE="^DPT(",DA=DFN
"RTN","DVBCXFRC",107,0)
 .S DR(1,2,1)=".301////"_SRVCON_";.302////"_SRVPCT_";.314////"_CFLOC_";.313////"_CNUM_";.323////"_PDSRV_$S('+$$VFILE^DILFD(2.3216):";.326////"_SRVEDT_";.327////"_SRVSDT,1:"")_";.361////"_ELIGCOD
"RTN","DVBCXFRC",108,0)
 .S DR(1,2,2)=".3611////"_ELIGST_";.3612////"_ELIGSDT_";.525////"_POWSTAT_";1901////"_VETST
"RTN","DVBCXFRC",109,0)
 .S:TYPEPTR]"" DR(1,2,3)="391////"_TYPEPTR
"RTN","DVBCXFRC",110,0)
 .D ^DIE
"RTN","DVBCXFRC",111,0)
 .;MSE data now to be stored in .3216 subfile in the PATIENT File (2)
"RTN","DVBCXFRC",112,0)
 .;after Patch DG*5.3*797 has been installed. Editing of the fields
"RTN","DVBCXFRC",113,0)
 .;.326 and .327 above can be removed once DG*5.3*797 has been released.
"RTN","DVBCXFRC",114,0)
 .D:((+$$VFILE^DILFD(2.3216))&(SRVEDT]"")) CRTMSE
"RTN","DVBCXFRC",115,0)
 Q
"RTN","DVBCXFRC",116,0)
 ;
"RTN","DVBCXFRC",117,0)
SETVARS ;  ** Add entry to file #396.4 (exam) **
"RTN","DVBCXFRC",118,0)
 I REASONS'="" DO
"RTN","DVBCXFRC",119,0)
 .S EXMRS=$P(REASONS,U,I) ;**Stuff Insufficient Reason
"RTN","DVBCXFRC",120,0)
 .S XMORPV="Transferred from "_DVBADMNM ;**Stuff Original Provider
"RTN","DVBCXFRC",121,0)
 S DIC="^DVB(396.4,"
"RTN","DVBCXFRC",122,0)
 S DIC(0)="L",DLAYGO=396.4
"RTN","DVBCXFRC",123,0)
 S DIC("DR")=".02////"_REQDA_";.03////"_EXM_";.04////O;63////"_DT
"RTN","DVBCXFRC",124,0)
 S:REASONS'="" DIC("DR")=DIC("DR")_";.11///"_EXMRS_";.12///"_XMORPV
"RTN","DVBCXFRC",125,0)
 S X=$$EXAM^DVBCUTL4 I 'X S OUT=1 D BULL2^DVBCXFRD Q
"RTN","DVBCXFRC",126,0)
 K DD,DO D FILE^DICN
"RTN","DVBCXFRC",127,0)
 I +Y=-1 S OUT=1 D BULL2^DVBCXFRD
"RTN","DVBCXFRC",128,0)
 K DLAYGO,DIC,X,Y
"RTN","DVBCXFRC",129,0)
 Q
"RTN","DVBCXFRC",130,0)
 ;
"RTN","DVBCXFRC",131,0)
ADDEDIT ;  ** Add Patient address **
"RTN","DVBCXFRC",132,0)
 S DA=DFN,DIE="^DPT("
"RTN","DVBCXFRC",133,0)
 S DR=".111////"_ADR1_";.112////"_ADR2_";.113////"_ADR3_";.114////"_CITY_";.115////"_STATE
"RTN","DVBCXFRC",134,0)
 S DR=DR_$S(ZIP4]"":";.1112////"_ZIP4,1:";.116////"_ZIP)_";.117////"_CNTY_";.131////"_HOMPHON_";.132////"_BUSPHON
"RTN","DVBCXFRC",135,0)
 D ^DIE K DIE,DA
"RTN","DVBCXFRC",136,0)
 Q
"RTN","DVBCXFRC",137,0)
 ;
"RTN","DVBCXFRC",138,0)
CRTMSE ;create LAST MSE entry for patient in sub-file 2.3216
"RTN","DVBCXFRC",139,0)
 N DIC,X,Y,DA,DTOUT,DUOUT,DLAYGO
"RTN","DVBCXFRC",140,0)
 S DIC="^DPT("_DFN_",.3216,",DA(1)=DFN
"RTN","DVBCXFRC",141,0)
 S DIC(0)="FL",DLAYGO=2
"RTN","DVBCXFRC",142,0)
 S X=SRVEDT  ;.01 SERVICE ENTRY DATE
"RTN","DVBCXFRC",143,0)
 ;SERVICE SEPARATION DATE ; SERVICE BRANCH ; SERVICE DISCHARGE TYPE
"RTN","DVBCXFRC",144,0)
 S DIC("DR")=".02////"_SRVSDT_";.03///"_DVBSBRCH_";.06///"_DVBDTYPE
"RTN","DVBCXFRC",145,0)
 K DO D FILE^DICN K DLAYGO
"RTN","DVBCXFRC",146,0)
 Q
"VER")
8.0^22.0
"^DD",396.3,396.3,9,0)
PRIORITY OF EXAM^RS^T:TERMINAL;P:POW;OS:ORIGINAL SC;ON:ORIGINAL NSC;I:INCREASE;R:REVIEW;OTR:OTHER;E:INSUFFICIENT EXAM;AO:AGENT ORANGE;BDD:BEN DELIV AT DISCHG;DCS:DES CLAIMED COND BY SVCMBR;DFD:DES FIT-FOR-DUTY;QS:QUICK START;^0;10^Q
"^DD",396.3,396.3,9,1,0)
^.1
"^DD",396.3,396.3,9,1,1,0)
396.3^ADP2^MUMPS
"^DD",396.3,396.3,9,1,1,1)
S:$P(^DVB(396.3,DA,0),U,5)'="" ^DVB(396.3,"ADP",$P(^(0),U,5),$E(X,1,30),DA)=""
"^DD",396.3,396.3,9,1,1,2)
I $P(^DVB(396.3,DA,0),U,5)'="" K ^DVB(396.3,"ADP",$P(^(0),U,5),$E(X,1,30),DA)
"^DD",396.3,396.3,9,1,1,"%D",0)
^^2^2^2941116^^^^
"^DD",396.3,396.3,9,1,1,"%D",1,0)
The 'ADP' cross reference is used by the 'Summary Insufficient Exam Report'
"^DD",396.3,396.3,9,1,1,"%D",2,0)
as generated by the Insufficient Exam Report option.
"^DD",396.3,396.3,9,1,1,"DT")
2941116
"^DD",396.3,396.3,9,3)
Enter the priority of the exam to be conducted.
"^DD",396.3,396.3,9,21,0)
^.001^1^1^3101006^^^^
"^DD",396.3,396.3,9,21,1,0)
This field contains the status of the 2507 exam to be conducted.
"^DD",396.3,396.3,9,"DT")
3101006
"^DD",396.5,396.5,0)
FIELD^^1^2
"^DD",396.5,396.5,0,"DDA")
N
"^DD",396.5,396.5,0,"IX","B",396.5,.01)

"^DD",396.5,396.5,0,"IX","C",396.5,1)

"^DD",396.5,396.5,0,"NM","2507 CANCELLATION REASON")

"^DD",396.5,396.5,0,"PT",396.327,2)

"^DD",396.5,396.5,0,"PT",396.4,52)

"^DD",396.5,396.5,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",396.5,396.5,.01,1,0)
^.1
"^DD",396.5,396.5,.01,1,1,0)
396.5^B
"^DD",396.5,396.5,.01,1,1,1)
S ^DVB(396.5,"B",$E(X,1,30),DA)=""
"^DD",396.5,396.5,.01,1,1,2)
K ^DVB(396.5,"B",$E(X,1,30),DA)
"^DD",396.5,396.5,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",396.5,396.5,.01,21,0)
^^2^2^2930430^
"^DD",396.5,396.5,.01,21,1,0)
This field holds the values of possible reasons a user may select whenever
"^DD",396.5,396.5,.01,21,2,0)
cancelling a 2507 exam.
"^DD",396.5,396.5,.01,23,0)
^^2^2^2930430^
"^DD",396.5,396.5,.01,23,1,0)
A record in this file is pointed to by CANCELLATION REASON field in the
"^DD",396.5,396.5,.01,23,2,0)
file 396.4.
"^DD",396.5,396.5,1,0)
*SEQUENCE^NJ3,0^^0;2^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",396.5,396.5,1,1,0)
^.1
"^DD",396.5,396.5,1,1,1,0)
396.5^C
"^DD",396.5,396.5,1,1,1,1)
S ^DVB(396.5,"C",$E(X,1,30),DA)=""
"^DD",396.5,396.5,1,1,1,2)
K ^DVB(396.5,"C",$E(X,1,30),DA)
"^DD",396.5,396.5,1,3)
Type a Number between 1 and 999, 0 Decimal Digits
"^DD",396.5,396.5,1,21,0)
^^1^1^2930430^^
"^DD",396.5,396.5,1,21,1,0)
This field is the sequence number of the cancellation reason.
"^DIC",396.5,396.5,0)
2507 CANCELLATION REASON^396.5
"^DIC",396.5,396.5,0,"GL")
^DVB(396.5,
"^DIC",396.5,396.5,"%D",0)
^^5^5^2941216^^^^
"^DIC",396.5,396.5,"%D",1,0)
This file has all current reasons that a 2507 exam may be cancelled.
"^DIC",396.5,396.5,"%D",2,0)
 
"^DIC",396.5,396.5,"%D",3,0)
 NOTICE: This file is part of an implementation of a Nationally
"^DIC",396.5,396.5,"%D",4,0)
         Controlled Procedure.  Local modifications to this file
"^DIC",396.5,396.5,"%D",5,0)
         are prohibited per VHA Directive 10-93-142.
"^DIC",396.5,"B","2507 CANCELLATION REASON",396.5)

"BLD",7711,6)
^142
**END**
**END**
