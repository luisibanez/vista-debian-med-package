Released DVBA*2.7*185 SEQ #163
Extracted from mail message
**KIDS**:DVBA*2.7*185^

**INSTALL NAME**
DVBA*2.7*185
"BLD",8541,0)
DVBA*2.7*185^AUTOMATED MED INFO EXCHANGE^0^3130919^y
"BLD",8541,1,0)
^^1^1^3130313^
"BLD",8541,1,1,0)
See full patch description on Forum for more information.
"BLD",8541,4,0)
^9.64PA^396.45^2
"BLD",8541,4,396.4,0)
396.4
"BLD",8541,4,396.4,2,0)
^9.641^396.4^1
"BLD",8541,4,396.4,2,396.4,0)
2507 EXAM  (File-top level)
"BLD",8541,4,396.4,2,396.4,1,0)
^9.6411^102^3
"BLD",8541,4,396.4,2,396.4,1,100,0)
CONTRACTOR
"BLD",8541,4,396.4,2,396.4,1,101,0)
DATE TRANSFERRED TO CONTRACTOR
"BLD",8541,4,396.4,2,396.4,1,102,0)
DATE RECEIVED FROM CONTRACTOR
"BLD",8541,4,396.4,222)
y^n^p^^^^n^^n
"BLD",8541,4,396.4,224)

"BLD",8541,4,396.45,0)
396.45
"BLD",8541,4,396.45,222)
y^n^f^^^^n
"BLD",8541,4,"APDD",396.4,396.4)

"BLD",8541,4,"APDD",396.4,396.4,100)

"BLD",8541,4,"APDD",396.4,396.4,101)

"BLD",8541,4,"APDD",396.4,396.4,102)

"BLD",8541,4,"B",396.4,396.4)

"BLD",8541,4,"B",396.45,396.45)

"BLD",8541,6.3)
18
"BLD",8541,"ABPKG")
n
"BLD",8541,"INID")
^n
"BLD",8541,"INIT")
POST^DVBA185P
"BLD",8541,"KRN",0)
^9.67PA^779.2^20
"BLD",8541,"KRN",.4,0)
.4
"BLD",8541,"KRN",.4,"NM",0)
^9.68A^^
"BLD",8541,"KRN",.401,0)
.401
"BLD",8541,"KRN",.402,0)
.402
"BLD",8541,"KRN",.403,0)
.403
"BLD",8541,"KRN",.5,0)
.5
"BLD",8541,"KRN",.84,0)
.84
"BLD",8541,"KRN",3.6,0)
3.6
"BLD",8541,"KRN",3.8,0)
3.8
"BLD",8541,"KRN",3.8,"NM",0)
^9.68A^^0
"BLD",8541,"KRN",9.2,0)
9.2
"BLD",8541,"KRN",9.8,0)
9.8
"BLD",8541,"KRN",9.8,"NM",0)
^9.68A^23^22
"BLD",8541,"KRN",9.8,"NM",1,0)
DVBAB1A^^0^B28591193
"BLD",8541,"KRN",9.8,"NM",2,0)
DVBASPD2^^0^B55204102
"BLD",8541,"KRN",9.8,"NM",3,0)
DVBAB53^^0^B59288821
"BLD",8541,"KRN",9.8,"NM",4,0)
DVBAB98^^0^B40683671
"BLD",8541,"KRN",9.8,"NM",5,0)
DVBAB85^^0^B8107422
"BLD",8541,"KRN",9.8,"NM",6,0)
DVBAB54^^0^B41132704
"BLD",8541,"KRN",9.8,"NM",7,0)
DVBAB82^^0^B120585412
"BLD",8541,"KRN",9.8,"NM",8,0)
DVBAB82D^^0^B38767188
"BLD",8541,"KRN",9.8,"NM",9,0)
DVBCIRP1^^0^B48099791
"BLD",8541,"KRN",9.8,"NM",10,0)
DVBCIRPT^^0^B48439537
"BLD",8541,"KRN",9.8,"NM",11,0)
DVBCIUTL^^0^B63990855
"BLD",8541,"KRN",9.8,"NM",12,0)
DVBAB57^^0^B21548457
"BLD",8541,"KRN",9.8,"NM",13,0)
DVBAB67^^0^B24962244
"BLD",8541,"KRN",9.8,"NM",14,0)
DVBARSBD^^0^B58585815
"BLD",8541,"KRN",9.8,"NM",15,0)
DVBABEBD^^0^B8904032
"BLD",8541,"KRN",9.8,"NM",16,0)
DVBAB51^^0^B54385965
"BLD",8541,"KRN",9.8,"NM",17,0)
DVBAB5^^0^B2583661
"BLD",8541,"KRN",9.8,"NM",18,0)
DVBAB6^^0^B53380970
"BLD",8541,"KRN",9.8,"NM",19,0)
DVBAADRP^^0^B44212510
"BLD",8541,"KRN",9.8,"NM",21,0)
DVBACER1^^0^B97387784
"BLD",8541,"KRN",9.8,"NM",22,0)
DVBACEM1^^0^B3312829
"BLD",8541,"KRN",9.8,"NM",23,0)
DVBA185P^^0^B2446401
"BLD",8541,"KRN",9.8,"NM","B","DVBA185P",23)

"BLD",8541,"KRN",9.8,"NM","B","DVBAADRP",19)

"BLD",8541,"KRN",9.8,"NM","B","DVBAB1A",1)

"BLD",8541,"KRN",9.8,"NM","B","DVBAB5",17)

"BLD",8541,"KRN",9.8,"NM","B","DVBAB51",16)

"BLD",8541,"KRN",9.8,"NM","B","DVBAB53",3)

"BLD",8541,"KRN",9.8,"NM","B","DVBAB54",6)

"BLD",8541,"KRN",9.8,"NM","B","DVBAB57",12)

"BLD",8541,"KRN",9.8,"NM","B","DVBAB6",18)

"BLD",8541,"KRN",9.8,"NM","B","DVBAB67",13)

"BLD",8541,"KRN",9.8,"NM","B","DVBAB82",7)

"BLD",8541,"KRN",9.8,"NM","B","DVBAB82D",8)

"BLD",8541,"KRN",9.8,"NM","B","DVBAB85",5)

"BLD",8541,"KRN",9.8,"NM","B","DVBAB98",4)

"BLD",8541,"KRN",9.8,"NM","B","DVBABEBD",15)

"BLD",8541,"KRN",9.8,"NM","B","DVBACEM1",22)

"BLD",8541,"KRN",9.8,"NM","B","DVBACER1",21)

"BLD",8541,"KRN",9.8,"NM","B","DVBARSBD",14)

"BLD",8541,"KRN",9.8,"NM","B","DVBASPD2",2)

"BLD",8541,"KRN",9.8,"NM","B","DVBCIRP1",9)

"BLD",8541,"KRN",9.8,"NM","B","DVBCIRPT",10)

"BLD",8541,"KRN",9.8,"NM","B","DVBCIUTL",11)

"BLD",8541,"KRN",19,0)
19
"BLD",8541,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",8541,"KRN",19,"NM",1,0)
DVBA CAPRI GUI^^0
"BLD",8541,"KRN",19,"NM","B","DVBA CAPRI GUI",1)

"BLD",8541,"KRN",19.1,0)
19.1
"BLD",8541,"KRN",19.1,"NM",0)
^9.68A^3^3
"BLD",8541,"KRN",19.1,"NM",1,0)
DVBA CONTRACTED EXM SPRVSR^^0
"BLD",8541,"KRN",19.1,"NM",2,0)
DVBA CONTRACTED EXM CCRUSR^^0
"BLD",8541,"KRN",19.1,"NM",3,0)
DVBA CAPRI DENY_GETVBADOCS^^0
"BLD",8541,"KRN",19.1,"NM","B","DVBA CAPRI DENY_GETVBADOCS",3)

"BLD",8541,"KRN",19.1,"NM","B","DVBA CONTRACTED EXM CCRUSR",2)

"BLD",8541,"KRN",19.1,"NM","B","DVBA CONTRACTED EXM SPRVSR",1)

"BLD",8541,"KRN",101,0)
101
"BLD",8541,"KRN",101,"NM",0)
^9.68A^^
"BLD",8541,"KRN",409.61,0)
409.61
"BLD",8541,"KRN",771,0)
771
"BLD",8541,"KRN",779.2,0)
779.2
"BLD",8541,"KRN",779.2,"NM",0)
^9.68A^^
"BLD",8541,"KRN",870,0)
870
"BLD",8541,"KRN",870,"NM",0)
^9.68A^^
"BLD",8541,"KRN",8989.51,0)
8989.51
"BLD",8541,"KRN",8989.52,0)
8989.52
"BLD",8541,"KRN",8994,0)
8994
"BLD",8541,"KRN",8994,"NM",0)
^9.68A^17^12
"BLD",8541,"KRN",8994,"NM",1,0)
DVBAB SEND MSG TWO^^0
"BLD",8541,"KRN",8994,"NM",2,0)
DVBAB TEMPLATE REPORT FULL^^0
"BLD",8541,"KRN",8994,"NM",4,0)
DVBAB EXAMS BY DATE^^0
"BLD",8541,"KRN",8994,"NM",6,0)
DVBAB PENDING C&P REPORT^^0
"BLD",8541,"KRN",8994,"NM",9,0)
DVBAB REPORT ADMISSIONS^^0
"BLD",8541,"KRN",8994,"NM",10,0)
DVBAB REPORT PENDING7131^^0
"BLD",8541,"KRN",8994,"NM",11,0)
DVBAB REPORT DISCHARGE^^0
"BLD",8541,"KRN",8994,"NM",12,0)
DVBAB REPORT INCOMPVET^^0
"BLD",8541,"KRN",8994,"NM",13,0)
DVBAB REPORT READMIT^^0
"BLD",8541,"KRN",8994,"NM",15,0)
DVBAB REPORTS^^0
"BLD",8541,"KRN",8994,"NM",16,0)
DVBAD CONTRACTED EXAM CRYPTO^^0
"BLD",8541,"KRN",8994,"NM",17,0)
DVBAD CONTRACTED EXAM REPORTS^^0
"BLD",8541,"KRN",8994,"NM","B","DVBAB EXAMS BY DATE",4)

"BLD",8541,"KRN",8994,"NM","B","DVBAB PENDING C&P REPORT",6)

"BLD",8541,"KRN",8994,"NM","B","DVBAB REPORT ADMISSIONS",9)

"BLD",8541,"KRN",8994,"NM","B","DVBAB REPORT DISCHARGE",11)

"BLD",8541,"KRN",8994,"NM","B","DVBAB REPORT INCOMPVET",12)

"BLD",8541,"KRN",8994,"NM","B","DVBAB REPORT PENDING7131",10)

"BLD",8541,"KRN",8994,"NM","B","DVBAB REPORT READMIT",13)

"BLD",8541,"KRN",8994,"NM","B","DVBAB REPORTS",15)

"BLD",8541,"KRN",8994,"NM","B","DVBAB SEND MSG TWO",1)

"BLD",8541,"KRN",8994,"NM","B","DVBAB TEMPLATE REPORT FULL",2)

"BLD",8541,"KRN",8994,"NM","B","DVBAD CONTRACTED EXAM CRYPTO",16)

"BLD",8541,"KRN",8994,"NM","B","DVBAD CONTRACTED EXAM REPORTS",17)

"BLD",8541,"KRN","B",.4,.4)

"BLD",8541,"KRN","B",.401,.401)

"BLD",8541,"KRN","B",.402,.402)

"BLD",8541,"KRN","B",.403,.403)

"BLD",8541,"KRN","B",.5,.5)

"BLD",8541,"KRN","B",.84,.84)

"BLD",8541,"KRN","B",3.6,3.6)

"BLD",8541,"KRN","B",3.8,3.8)

"BLD",8541,"KRN","B",9.2,9.2)

"BLD",8541,"KRN","B",9.8,9.8)

"BLD",8541,"KRN","B",19,19)

"BLD",8541,"KRN","B",19.1,19.1)

"BLD",8541,"KRN","B",101,101)

"BLD",8541,"KRN","B",409.61,409.61)

"BLD",8541,"KRN","B",771,771)

"BLD",8541,"KRN","B",779.2,779.2)

"BLD",8541,"KRN","B",870,870)

"BLD",8541,"KRN","B",8989.51,8989.51)

"BLD",8541,"KRN","B",8989.52,8989.52)

"BLD",8541,"KRN","B",8994,8994)

"BLD",8541,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",8541,"QUES",0)
^9.62^^
"BLD",8541,"REQB",0)
^9.611^1^1
"BLD",8541,"REQB",1,0)
DVBA*2.7*184^2
"BLD",8541,"REQB","B","DVBA*2.7*184",1)

"FIA",396.4)
2507 EXAM
"FIA",396.4,0)
^DVB(396.4,
"FIA",396.4,0,0)
396.4I
"FIA",396.4,0,1)
y^n^p^^^^n^^n
"FIA",396.4,0,10)

"FIA",396.4,0,11)

"FIA",396.4,0,"RLRO")

"FIA",396.4,0,"VR")
2.7^DVBA
"FIA",396.4,396.4)
1
"FIA",396.4,396.4,100)

"FIA",396.4,396.4,101)

"FIA",396.4,396.4,102)

"FIA",396.45)
2507 EXAM CONTRACTORS
"FIA",396.45,0)
^DVB(396.45,
"FIA",396.45,0,0)
396.45
"FIA",396.45,0,1)
y^n^f^^^^n
"FIA",396.45,0,10)

"FIA",396.45,0,11)

"FIA",396.45,0,"RLRO")

"FIA",396.45,0,"VR")
2.7^DVBA
"FIA",396.45,396.45)
0
"INIT")
POST^DVBA185P
"KRN",19,9510,-1)
0^1
"KRN",19,9510,0)
DVBA CAPRI GUI^Capri GUI (Broker)^^B^^^^^^^^AUTOMATED MED INFO EXCHANGE^^1
"KRN",19,9510,1,0)
^19.06^2^2^3130829^^^^
"KRN",19,9510,1,1,0)
This is the 'B' type option used by CAPRI GUI client application. It
"KRN",19,9510,1,2,0)
contains all the RPCs used by the CAPRI GUI application.
"KRN",19,9510,20)
 
"KRN",19,9510,25)
 
"KRN",19,9510,99.1)
62972,33301
"KRN",19,9510,"RPC",0)
^19.05P^149^149
"KRN",19,9510,"RPC",1,0)
DVBAB REPORT LISTS
"KRN",19,9510,"RPC",2,0)
DVBAB APPOINTMENT LIST
"KRN",19,9510,"RPC",3,0)
DVBAB CHECK CREDENTIALS
"KRN",19,9510,"RPC",4,0)
DVBAB FIND EXAMS
"KRN",19,9510,"RPC",5,0)
DVBAB PTINQ
"KRN",19,9510,"RPC",6,0)
DVBAB INCREASE EXAM COUNT
"KRN",19,9510,"RPC",7,0)
DVBAB SEND MSG
"KRN",19,9510,"RPC",8,0)
DVBAB REPORT CHECKLIST
"KRN",19,9510,"RPC",9,0)
DDR FILER
"KRN",19,9510,"RPC",10,0)
DDR LISTER
"KRN",19,9510,"RPC",11,0)
DDR VALIDATOR
"KRN",19,9510,"RPC",12,0)
DDR GETS ENTRY DATA
"KRN",19,9510,"RPC",14,0)
XWB GET VARIABLE VALUE
"KRN",19,9510,"RPC",15,0)
DVBAB HEALTH SUMMARY TEXT
"KRN",19,9510,"RPC",16,0)
TIU DOCUMENTS BY CONTEXT
"KRN",19,9510,"RPC",17,0)
TIU GET RECORD TEXT
"KRN",19,9510,"RPC",18,0)
ORQQCN LIST
"KRN",19,9510,"RPC",19,0)
ORQQCN DETAIL
"KRN",19,9510,"RPC",20,0)
DVBAB INST LIST
"KRN",19,9510,"RPC",22,0)
ORWRP REPORT TEXT
"KRN",19,9510,"RPC",23,0)
ORWORR AGET
"KRN",19,9510,"RPC",24,0)
ORWRA IMAGING EXAMS
"KRN",19,9510,"RPC",25,0)
ORWRP1 LISTNUTR
"KRN",19,9510,"RPC",26,0)
ORWMC PATIENT PROCEDURES
"KRN",19,9510,"RPC",27,0)
ORQQPL PROBLEM LIST
"KRN",19,9510,"RPC",28,0)
ORWORR GET4LST
"KRN",19,9510,"RPC",29,0)
ORWLR CUMULATIVE REPORT
"KRN",19,9510,"RPC",32,0)
DVBAB DATETIME
"KRN",19,9510,"RPC",34,0)
ORWPT ADMITLST
"KRN",19,9510,"RPC",35,0)
DVBAB SC VETERAN REPORT
"KRN",19,9510,"RPC",36,0)
ORQQVS VISITS/APPTS
"KRN",19,9510,"RPC",37,0)
ORWU DT
"KRN",19,9510,"RPC",38,0)
ORWLRR CHART
"KRN",19,9510,"RPC",39,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,9510,"RPC",40,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,9510,"RPC",41,0)
DVBAB REPORT EXAM CHKLIST
"KRN",19,9510,"RPC",42,0)
DVBAB REPORT ADMINQ
"KRN",19,9510,"RPC",43,0)
DVBAB REPORT INCOMPVET
"KRN",19,9510,"RPC",44,0)
DVBAB REPORT DISCHARGE
"KRN",19,9510,"RPC",45,0)
DVBAB REPORT READMIT
"KRN",19,9510,"RPC",46,0)
DVBAB REPORT ADMISSIONS
"KRN",19,9510,"RPC",47,0)
DVBAB REPORT 7131INQ
"KRN",19,9510,"RPC",48,0)
DVBAB PENDING C&P REPORT
"KRN",19,9510,"RPC",49,0)
DVBAB REPORT CPDETAILS
"KRN",19,9510,"RPC",50,0)
DVBAB AMIS REPORT
"KRN",19,9510,"RPC",51,0)
DVBAB REPORT PENDING7131
"KRN",19,9510,"RPC",52,0)
DVBAB LABLIST
"KRN",19,9510,"RPC",53,0)
DVBAB VERSION
"KRN",19,9510,"RPC",54,0)
DDR DELETE ENTRY
"KRN",19,9510,"RPC",55,0)
ORWRP REPORT LISTS
"KRN",19,9510,"RPC",57,0)
DVBAB DIVISION
"KRN",19,9510,"RPC",58,0)
DVBAB TEAM PATIENTS
"KRN",19,9510,"RPC",59,0)
ORWCIRN FACLIST
"KRN",19,9510,"RPC",60,0)
XWB REMOTE STATUS CHECK
"KRN",19,9510,"RPC",61,0)
XWB REMOTE GETDATA
"KRN",19,9510,"RPC",63,0)
ORWPT DIEDON
"KRN",19,9510,"RPC",66,0)
XWB REMOTE RPC
"KRN",19,9510,"RPC",68,0)
DDR FIND1
"KRN",19,9510,"RPC",69,0)
DVBAB REPORTS
"KRN",19,9510,"RPC",70,0)
ORWRP2 COMPABV
"KRN",19,9510,"RPC",71,0)
DVBAB SURGERY CASE
"KRN",19,9510,"RPC",72,0)
ORWRP2 COMPDISP
"KRN",19,9510,"RPC",73,0)
ORWRP2 HS COMPONENTS
"KRN",19,9510,"RPC",74,0)
ORWRP2 HS COMPONENT SUBS
"KRN",19,9510,"RPC",75,0)
ORWRP2 HS COMP FILES
"KRN",19,9510,"RPC",76,0)
ORWRP2 SAVLKUP
"KRN",19,9510,"RPC",77,0)
ORWRP2 HS REPORT TEXT
"KRN",19,9510,"RPC",78,0)
ORWRP2 GETLKUP
"KRN",19,9510,"RPC",79,0)
ORWRP2 HS FILE LOOKUP
"KRN",19,9510,"RPC",80,0)
ORWRP2 HS SUBITEMS
"KRN",19,9510,"RPC",81,0)
DVBAB MAIL INIT
"KRN",19,9510,"RPC",82,0)
ORWLRR MICRO
"KRN",19,9510,"RPC",83,0)
TIU CREATE RECORD
"KRN",19,9510,"RPC",84,0)
DVBAB MPI ASSIGN ICN
"KRN",19,9510,"RPC",85,0)
TIU SIGN RECORD
"KRN",19,9510,"RPC",86,0)
TIU DELETE RECORD
"KRN",19,9510,"RPC",87,0)
TIU REQUIRES COSIGNATURE
"KRN",19,9510,"RPC",88,0)
DVBAB REPORT ADMISSION INQUIRY
"KRN",19,9510,"RPC",89,0)
DVBAB REPORT NEW NOTICES DC
"KRN",19,9510,"RPC",90,0)
DVBAB NOTE TITLES
"KRN",19,9510,"RPC",91,0)
DVBAB TEMPLATE DEFINITION
"KRN",19,9510,"RPC",92,0)
DDR FINDER
"KRN",19,9510,"RPC",93,0)
ORWCV VST
"KRN",19,9510,"RPC",94,0)
TIU LOAD BOILERPLATE TEXT
"KRN",19,9510,"RPC",95,0)
DVBAB GET VISIT INFO
"KRN",19,9510,"RPC",96,0)
DVBAB REPORT SPECIAL
"KRN",19,9510,"RPC",97,0)
DVBAB SAVE FORM
"KRN",19,9510,"RPC",98,0)
DVBAB EXAMS BY DATE
"KRN",19,9510,"RPC",99,0)
TIU GET SITE PARAMETERS
"KRN",19,9510,"RPC",100,0)
TIU GET ALERT INFO
"KRN",19,9510,"RPC",101,0)
ORWU VALIDSIG
"KRN",19,9510,"RPC",103,0)
ORWORB FASTUSER
"KRN",19,9510,"RPC",104,0)
DVBAB TEMPLATE LIST
"KRN",19,9510,"RPC",105,0)
DVBAB LOAD FORM
"KRN",19,9510,"RPC",106,0)
DVBAB TEMPLATE REPORT FULL
"KRN",19,9510,"RPC",107,0)
DVBAB FETCH 1U4N
"KRN",19,9510,"RPC",108,0)
DVBAB FORM DATA BACKUP DELETE
"KRN",19,9510,"RPC",109,0)
DVBAB FORM DATA BACKUP RESTORE
"KRN",19,9510,"RPC",110,0)
DDR LOCK/UNLOCK NODE
"KRN",19,9510,"RPC",111,0)
DVBAB FORM COPY
"KRN",19,9510,"RPC",112,0)
DVBAB FIND DUPS
"KRN",19,9510,"RPC",113,0)
DVBAB NEW PERSON FILE
"KRN",19,9510,"RPC",114,0)
DVBAB FORM DATA BACKUP
"KRN",19,9510,"RPC",116,0)
DVBAB SET DIVISION
"KRN",19,9510,"RPC",117,0)
DVBAB GET URL
"KRN",19,9510,"RPC",118,0)
ORPRF TRIGGER POPUP
"KRN",19,9510,"RPC",119,0)
ORPRF HASFLG
"KRN",19,9510,"RPC",120,0)
ORPRF HASCAT1
"KRN",19,9510,"RPC",121,0)
ORPRF GETFLG
"KRN",19,9510,"RPC",122,0)
ORPRF CLEAR
"KRN",19,9510,"RPC",123,0)
TIU SET DOCUMENT TEXT
"KRN",19,9510,"RPC",124,0)
DVBAB ORIGINAL PROCESSING DATE
"KRN",19,9510,"RPC",125,0)
TIU CREATE ADDENDUM RECORD
"KRN",19,9510,"RPC",126,0)
TIU UPDATE RECORD
"KRN",19,9510,"RPC",128,0)
XUS SET VISITOR
"KRN",19,9510,"RPC",129,0)
XUS GET VISITOR
"KRN",19,9510,"RPC",130,0)
DVBAB RESTRICTED LIST PATIENTS
"KRN",19,9510,"RPC",131,0)
DVBAB DOD INFO
"KRN",19,9510,"RPC",132,0)
DVBAB DOD REPORT
"KRN",19,9510,"RPC",133,0)
DVBAB DOD REPORT TYPES
"KRN",19,9510,"RPC",134,0)
DVBAB FIND DFN BY ICN
"KRN",19,9510,"RPC",135,0)
DVBAB CCOW
"KRN",19,9510,"RPC",136,0)
DVBAB ZIP2CITY
"KRN",19,9510,"RPC",137,0)
DVBA CHECK PATCH
"KRN",19,9510,"RPC",138,0)
DVBAB GET SET
"KRN",19,9510,"RPC",139,0)
DVBAB GET VVA TOKEN
"KRN",19,9510,"RPC",140,0)
VAFCTFU CONVERT ICN TO DFN
"KRN",19,9510,"RPC",141,0)
DVBAB 8861 NOTIFICATIONS
"KRN",19,9510,"RPC",142,0)
DVBA MVI GET CORRESPONDING IDS
"KRN",19,9510,"RPC",143,0)
DVBA MVI SEARCH PERSON
"KRN",19,9510,"RPC",144,0)
DVBAB SEND MSG TWO
"KRN",19,9510,"RPC",145,0)
DVBAD CONTRACTED EXAM REPORTS
"KRN",19,9510,"RPC",146,0)
DVBAD CONTRACTED EXAM CRYPTO
"KRN",19,9510,"RPC",147,0)
DVBA CAPRI GET EXAM IEN
"KRN",19,9510,"RPC",148,0)
DVBA CAPRI EXAM LINK TIU
"KRN",19,9510,"RPC",149,0)
DVBA CAPRI EXAM XML
"KRN",19,9510,"U")
CAPRI GUI (BROKER)
"KRN",19.1,557,-1)
0^1
"KRN",19.1,557,0)
DVBA CONTRACTED EXM SPRVSR^^^n^0
"KRN",19.1,557,1,0)
^19.11^4^4^3130613^^^^
"KRN",19.1,557,1,1,0)
This key gives the user access to the administrative functionality in the 
"KRN",19.1,557,1,2,0)
Contracted Exam Utility (eTRAN). Functionality includes: Adding/Editing 
"KRN",19.1,557,1,3,0)
Contractors in the 2507 EXAM CONTRACTORS File (#396.45) and Deleting 
"KRN",19.1,557,1,4,0)
Check-In and/or Check-Out of an external contracted 2507 exam.
"KRN",19.1,603,-1)
0^2
"KRN",19.1,603,0)
DVBA CONTRACTED EXM CCRUSR^^^n^0
"KRN",19.1,603,1,0)
^19.11^6^6^3130919^^
"KRN",19.1,603,1,1,0)
This security key will allow the CAPRI user access to the CCR
"KRN",19.1,603,1,2,0)
dialog. The CCR dialog options menu selection is located under
"KRN",19.1,603,1,3,0)
the CAPRI menu option Tools/CAPRI Contract Referral (CCR). 
"KRN",19.1,603,1,4,0)
Without this key, CAPRI users will not see the option.
"KRN",19.1,603,1,5,0)
Users with this key will have access to all options except
"KRN",19.1,603,1,6,0)
the CCR menu option "Admin Tools".
"KRN",19.1,605,-1)
0^3
"KRN",19.1,605,0)
DVBA CAPRI DENY_GETVBADOCS
"KRN",19.1,605,1,0)
^^2^2^3130702^
"KRN",19.1,605,1,1,0)
This key DENIES users who have this key access to the menu option "Get 
"KRN",19.1,605,1,2,0)
Docs from VVA".
"KRN",8994,749,-1)
0^6
"KRN",8994,749,0)
DVBAB PENDING C&P REPORT^STRT^DVBAB6^4^R^^^0
"KRN",8994,749,1,0)
^^1^1^3010621^
"KRN",8994,749,1,1,0)
Generates a report containing the pending C&P exam requests.
"KRN",8994,749,2,0)
^8994.02A^8^8
"KRN",8994,749,2,1,0)
DVBCSORT^1
"KRN",8994,749,2,2,0)
RSTAT^1
"KRN",8994,749,2,3,0)
ERDAYS^1
"KRN",8994,749,2,4,0)
OLDAYS^1
"KRN",8994,749,2,5,0)
ADIVNUM^1
"KRN",8994,749,2,6,0)
ELTYP^1
"KRN",8994,749,2,7,0)
DVBADLMTR^1^^0
"KRN",8994,749,2,7,1,0)
^^4^4^3130521^
"KRN",8994,749,2,7,1,1,0)
This parameter is used to indicate whether the report will create a plain 
"KRN",8994,749,2,7,1,2,0)
text format or a comma delimited output format. DVBADLMTR=0 means report 
"KRN",8994,749,2,7,1,3,0)
will be in plain text and DVBADLMTR=1 means create output in comma 
"KRN",8994,749,2,7,1,4,0)
delimited format.
"KRN",8994,749,2,8,0)
ROFILTER^1^^0
"KRN",8994,749,2,8,1,0)
^^3^3^3130521^
"KRN",8994,749,2,8,1,1,0)
The value of ROFILTER indicates which Regional Office the Pending C&P 
"KRN",8994,749,2,8,1,2,0)
Report is for. This parameter is only passed when the Pending C&P Report 
"KRN",8994,749,2,8,1,3,0)
is being run from the Consolidated Remote Reports menu.
"KRN",8994,749,2,"B","ADIVNUM",5)

"KRN",8994,749,2,"B","DVBADLMTR",7)

"KRN",8994,749,2,"B","DVBCSORT",1)

"KRN",8994,749,2,"B","ELTYP",6)

"KRN",8994,749,2,"B","ERDAYS",3)

"KRN",8994,749,2,"B","OLDAYS",4)

"KRN",8994,749,2,"B","ROFILTER",8)

"KRN",8994,749,2,"B","RSTAT",2)

"KRN",8994,752,-1)
0^12
"KRN",8994,752,0)
DVBAB REPORT INCOMPVET^STRT^DVBAB51^4^R^0^^1
"KRN",8994,752,1,0)
^8994.01^2^2^3120216^^
"KRN",8994,752,1,1,0)
Generates an incompetent veteran report, in either standard or delimited 
"KRN",8994,752,1,2,0)
format, for the specificed date range.
"KRN",8994,752,2,0)
^8994.02A^3^3
"KRN",8994,752,2,1,0)
BDATE^1^^1^1
"KRN",8994,752,2,1,1,0)
^^2^2^3101006^
"KRN",8994,752,2,1,1,1,0)
Beginning date in a date range to use for retrieving results for the 
"KRN",8994,752,2,1,1,2,0)
report.
"KRN",8994,752,2,2,0)
EDATE^1^^1^2
"KRN",8994,752,2,2,1,0)
^^1^1^3101006^
"KRN",8994,752,2,2,1,1,0)
Ending date in a date range to use for retrieving results for the report.
"KRN",8994,752,2,3,0)
DVBADLMTR^1^^0^3
"KRN",8994,752,2,3,1,0)
^8994.021^3^3^3120216^^
"KRN",8994,752,2,3,1,1,0)
This is an optional parameter, which when defined with the final end date 
"KRN",8994,752,2,3,1,2,0)
selected in the GUI, will produce a delimited report. If this parameter 
"KRN",8994,752,2,3,1,3,0)
is undefined, null or 0 then the standard report format will be generated.
"KRN",8994,752,2,"B","BDATE",1)

"KRN",8994,752,2,"B","DVBADLMTR",3)

"KRN",8994,752,2,"B","EDATE",2)

"KRN",8994,752,2,"PARAMSEQ",1,1)

"KRN",8994,752,2,"PARAMSEQ",2,2)

"KRN",8994,752,2,"PARAMSEQ",3,3)

"KRN",8994,753,-1)
0^11
"KRN",8994,753,0)
DVBAB REPORT DISCHARGE^STRT^DVBAB53^4^R^0^^1
"KRN",8994,753,1,0)
^8994.01^2^2^3120215^^
"KRN",8994,753,1,1,0)
Generates a discharge report, in either standard or delimited format, for 
"KRN",8994,753,1,2,0)
the specified parameters.
"KRN",8994,753,2,0)
^8994.02A^4^4
"KRN",8994,753,2,1,0)
BDATE^1^^1^1
"KRN",8994,753,2,1,1,0)
^^2^2^3101006^
"KRN",8994,753,2,1,1,1,0)
Beginning date in a date range to use for retrieving results for the 
"KRN",8994,753,2,1,1,2,0)
report.
"KRN",8994,753,2,2,0)
EDATE^1^^1^2
"KRN",8994,753,2,2,1,0)
^^1^1^3101006^
"KRN",8994,753,2,2,1,1,0)
Ending date in a date range to use for retrieving results for the report.
"KRN",8994,753,2,3,0)
ADTYPE^1^^1^3
"KRN",8994,753,2,3,1,0)
^^5^5^3101006^
"KRN",8994,753,2,3,1,1,0)
Valid discharge code values:
"KRN",8994,753,2,3,1,2,0)
  'A' - Recieving A&A
"KRN",8994,753,2,3,1,3,0)
  'P' - Pension
"KRN",8994,753,2,3,1,4,0)
  'S' - Service Connected
"KRN",8994,753,2,3,1,5,0)
  'L' - All discharge types
"KRN",8994,753,2,4,0)
DVBADLMTR^1^^0^4
"KRN",8994,753,2,4,1,0)
^8994.021^3^3^3120215^^
"KRN",8994,753,2,4,1,1,0)
This is an optional parameter, which when defined with the final end date 
"KRN",8994,753,2,4,1,2,0)
selected in the GUI, will produce a delimited report. If this parameter 
"KRN",8994,753,2,4,1,3,0)
is undefined, null or 0 then the standard report format will be generated.
"KRN",8994,753,2,"B","ADTYPE",3)

"KRN",8994,753,2,"B","BDATE",1)

"KRN",8994,753,2,"B","DVBADLMTR",4)

"KRN",8994,753,2,"B","EDATE",2)

"KRN",8994,753,2,"PARAMSEQ",1,1)

"KRN",8994,753,2,"PARAMSEQ",2,2)

"KRN",8994,753,2,"PARAMSEQ",3,3)

"KRN",8994,753,2,"PARAMSEQ",4,4)

"KRN",8994,754,-1)
0^13
"KRN",8994,754,0)
DVBAB REPORT READMIT^STRT^DVBAB56^4^R^0^^1
"KRN",8994,754,1,0)
^8994.01^2^2^3120307^^^^
"KRN",8994,754,1,1,0)
Generates a re-admission report, in either standard or delimited format, 
"KRN",8994,754,1,2,0)
for the specified date range.
"KRN",8994,754,2,0)
^8994.02A^4^4
"KRN",8994,754,2,1,0)
BDATE^1^^1^1
"KRN",8994,754,2,1,1,0)
^^2^2^3101006^
"KRN",8994,754,2,1,1,1,0)
Beginning date in a date range to use for retrieving results for the 
"KRN",8994,754,2,1,1,2,0)
report.
"KRN",8994,754,2,2,0)
EDATE^1^^1^2
"KRN",8994,754,2,2,1,0)
^^1^1^3101006^
"KRN",8994,754,2,2,1,1,0)
Ending date in a date range to use for retrieving results for the report.
"KRN",8994,754,2,3,0)
DVBAH^1^^1^3
"KRN",8994,754,2,3,1,0)
^^3^3^3101006^
"KRN",8994,754,2,3,1,1,0)
Defines the scope of the report:
"KRN",8994,754,2,3,1,2,0)
  'H' indicates HOSPITAL
"KRN",8994,754,2,3,1,3,0)
  'D' indicates DOM
"KRN",8994,754,2,4,0)
DVBADLMTR^1^^0^4
"KRN",8994,754,2,4,1,0)
^8994.021^3^3^3120307^^^^
"KRN",8994,754,2,4,1,1,0)
This is an optional parameter, which when defined with the final end date 
"KRN",8994,754,2,4,1,2,0)
selected in the GUI, will produce a delimited report. If this parameter 
"KRN",8994,754,2,4,1,3,0)
is undefined, null or 0 then the standard report format will be generated.
"KRN",8994,754,2,"B","BDATE",1)

"KRN",8994,754,2,"B","DVBADLMTR",4)

"KRN",8994,754,2,"B","DVBAH",3)

"KRN",8994,754,2,"B","EDATE",2)

"KRN",8994,754,2,"PARAMSEQ",1,1)

"KRN",8994,754,2,"PARAMSEQ",2,2)

"KRN",8994,754,2,"PARAMSEQ",3,3)

"KRN",8994,754,2,"PARAMSEQ",4,4)

"KRN",8994,755,-1)
0^9
"KRN",8994,755,0)
DVBAB REPORT ADMISSIONS^STRT^DVBAB54^4^R^0^^1
"KRN",8994,755,1,0)
^8994.01^2^2^3130604^^^^
"KRN",8994,755,1,1,0)
Generates an admission report, in either standard or delimited format,
"KRN",8994,755,1,2,0)
for the specified date range.
"KRN",8994,755,2,0)
^8994.02A^3^3
"KRN",8994,755,2,1,0)
BDATE^1^^1^1
"KRN",8994,755,2,1,1,0)
^8994.021^2^2^3101006^^
"KRN",8994,755,2,1,1,1,0)
Beginning date in a date range to use for retrieving results for the 
"KRN",8994,755,2,1,1,2,0)
report.
"KRN",8994,755,2,2,0)
EDATE^1^^1^2
"KRN",8994,755,2,2,1,0)
^8994.021^1^1^3101006^^
"KRN",8994,755,2,2,1,1,0)
Ending date in a date range to use for retrieving results for the report.
"KRN",8994,755,2,3,0)
DVBADLMTR^1^^0^3
"KRN",8994,755,2,3,1,0)
^8994.021^3^3^3101006^^
"KRN",8994,755,2,3,1,1,0)
This is an optional parameter, which when defined with the final end date 
"KRN",8994,755,2,3,1,2,0)
selected in the GUI, will produce a delimited report. If this parameter 
"KRN",8994,755,2,3,1,3,0)
is undefined, null or 0 then the standard report format will be generated.
"KRN",8994,755,2,"B","BDATE",1)

"KRN",8994,755,2,"B","DVBADLMTR",3)

"KRN",8994,755,2,"B","EDATE",2)

"KRN",8994,755,2,"PARAMSEQ",1,1)

"KRN",8994,755,2,"PARAMSEQ",2,2)

"KRN",8994,755,2,"PARAMSEQ",3,3)

"KRN",8994,756,-1)
0^10
"KRN",8994,756,0)
DVBAB REPORT PENDING7131^STRT^DVBAB57^4^R
"KRN",8994,756,1,0)
^^1^1^3010621^
"KRN",8994,756,1,1,0)
Generates a list of pending 7131 requests.
"KRN",8994,756,2,0)
^8994.02A^3^3
"KRN",8994,756,2,1,0)
SELDIV^1^^1
"KRN",8994,756,2,2,0)
DIV^1^^1
"KRN",8994,756,2,3,0)
DVBADLMTR^1^1^0
"KRN",8994,756,2,3,1,0)
^8994.021^4^4^3130521^^
"KRN",8994,756,2,3,1,1,0)
This parameter is used to indicate whether the report will create a plain 
"KRN",8994,756,2,3,1,2,0)
text format or a comma delimited output format. DVBADLMTR=0 means report 
"KRN",8994,756,2,3,1,3,0)
will be in plain text and DVBADLMTR=1 means create output in comma 
"KRN",8994,756,2,3,1,4,0)
delimited format.
"KRN",8994,756,2,"B","DIV",2)

"KRN",8994,756,2,"B","DVBADLMTR",3)

"KRN",8994,756,2,"B","SELDIV",1)

"KRN",8994,1070,-1)
0^17
"KRN",8994,1070,0)
DVBAD CONTRACTED EXAM REPORTS^CERPTS^DVBACER1^4^R^0^^1
"KRN",8994,1070,1,0)
^8994.01^2^2^3111017^^
"KRN",8994,1070,1,1,0)
Allows demTRAN (GUI) to execute the Detailed, Summary and Timeliness 
"KRN",8994,1070,1,2,0)
contracted exam reports.
"KRN",8994,1070,2,0)
^8994.02A^2^2
"KRN",8994,1070,2,1,0)
DVBARTYP^1^1^1^1
"KRN",8994,1070,2,1,1,0)
^^2^2^3111017^
"KRN",8994,1070,2,1,1,1,0)
The type of contracted exam report to execute: D: Detailed, S: Summary, 
"KRN",8994,1070,2,1,1,2,0)
or T: Timeliness.
"KRN",8994,1070,2,2,0)
DVBAFLTRS^2^^0^2
"KRN",8994,1070,2,2,1,0)
^^4^4^3111017^
"KRN",8994,1070,2,2,1,1,0)
Optional parameter that allows filtering the contracted exam results. The 
"KRN",8994,1070,2,2,1,2,0)
filters include DATE, a date range, CONTRACTOR, IEN of specific 
"KRN",8994,1070,2,2,1,3,0)
contractor, PENDING, referred exams only and SORT for grouping results by 
"KRN",8994,1070,2,2,1,4,0)
contractor or request date/time (Used for Detailed Reports Only).
"KRN",8994,1070,2,"B","DVBAFLTRS",2)

"KRN",8994,1070,2,"B","DVBARTYP",1)

"KRN",8994,1070,2,"PARAMSEQ",1,1)

"KRN",8994,1070,2,"PARAMSEQ",2,2)

"KRN",8994,1106,-1)
0^16
"KRN",8994,1106,0)
DVBAD CONTRACTED EXAM CRYPTO^EN^DVBACEM1^1^R^0
"KRN",8994,1106,1,0)
^^2^2^3120724^
"KRN",8994,1106,1,1,0)
Allows the demTRAN (GUI) application to Encrypt/Decrypt information for 
"KRN",8994,1106,1,2,0)
storage to or retrieval from the VistA environment.
"KRN",8994,1106,2,0)
^8994.02A^2^2
"KRN",8994,1106,2,1,0)
DVBAETYP^1^1^1^1
"KRN",8994,1106,2,1,1,0)
^8994.021^2^2^3120724^^
"KRN",8994,1106,2,1,1,1,0)
The type of cryptography action to execute: 1: Encryption or 2: 
"KRN",8994,1106,2,1,1,2,0)
Decryption.
"KRN",8994,1106,2,2,0)
DVBAIVAL^1^999^1^2
"KRN",8994,1106,2,2,1,0)
^^2^2^3120724^
"KRN",8994,1106,2,2,1,1,0)
The single or '^' delimited string value(s) to perform the cryptography 
"KRN",8994,1106,2,2,1,2,0)
action on.
"KRN",8994,1106,2,"B","DVBAETYP",1)

"KRN",8994,1106,2,"B","DVBAIVAL",2)

"KRN",8994,1106,2,"PARAMSEQ",1,1)

"KRN",8994,1106,2,"PARAMSEQ",2,2)

"KRN",8994,1106,3,0)
^^4^4^3120724^
"KRN",8994,1106,3,1,0)
Encrypted or Decrypted result(s) based on the cryptography action 
"KRN",8994,1106,3,2,0)
performed. If multiple values passed ('^' delimitted) then the results 
"KRN",8994,1106,3,3,0)
will be returned in the same position as the original value that was 
"KRN",8994,1106,3,4,0)
acted upon.
"KRN",8994,1496,-1)
0^15
"KRN",8994,1496,0)
DVBAB REPORTS^START^DVBAB82^4^R^0
"KRN",8994,1496,1,0)
^8994.01^1^1^3130514^^^^
"KRN",8994,1496,1,1,0)
CAPRI REGIONAL OFFICE 21 DAY CERTIFICATE PRINTING
"KRN",8994,1496,2,0)
^8994.02A^2^2
"KRN",8994,1496,2,1,0)
REPORT TYPE^1^^1
"KRN",8994,1496,2,2,0)
REPORT STRING^1
"KRN",8994,1496,2,"B","REPORT STRING",2)

"KRN",8994,1496,2,"B","REPORT TYPE",1)

"KRN",8994,1605,-1)
0^1
"KRN",8994,1605,0)
DVBAB SEND MSG TWO^MSG2^DVBAB1A^1^S
"KRN",8994,1605,1,0)
^8994.01^2^2^3130624^^^^
"KRN",8994,1605,1,1,0)
THIS RPC IS THE SECOND FOR THE CAPRI MSG 2507 EXAM
"KRN",8994,1605,1,2,0)
THIS ONE PRODUCES A MESSAGE FOR EACH EXAM THAT IS COMPLETED
"KRN",8994,1605,2,0)
^8994.02A^5^3
"KRN",8994,1605,2,3,0)
DUZ^1^^^1
"KRN",8994,1605,2,3,1,0)
^8994.021^1^1^3130521^^^^
"KRN",8994,1605,2,3,1,1,0)
PERSON FILE DFN
"KRN",8994,1605,2,4,0)
RIEN^1^^^2
"KRN",8994,1605,2,4,1,0)
^8994.021^1^1^3130521^^^
"KRN",8994,1605,2,4,1,1,0)
2507 REQUEST IEN #396.3
"KRN",8994,1605,2,5,0)
ELIST^2^^^3
"KRN",8994,1605,2,5,1,0)
^8994.021^1^1^3130624^^^^
"KRN",8994,1605,2,5,1,1,0)
2507 EXAM LIST #396.4
"KRN",8994,1605,2,"B","DUZ",3)

"KRN",8994,1605,2,"B","ELIST",5)

"KRN",8994,1605,2,"B","RIEN",4)

"KRN",8994,1605,2,"PARAMSEQ",1,3)

"KRN",8994,1605,2,"PARAMSEQ",2,4)

"KRN",8994,1605,2,"PARAMSEQ",3,5)

"KRN",8994,1605,3,0)
^8994.03^1^1^3130624^^^^
"KRN",8994,1605,3,1,0)
ERR   RETURNS THE ERROR MESSAGE OR THE 'MESSAGE SENT'
"KRN",8994,2261,-1)
0^4
"KRN",8994,2261,0)
DVBAB EXAMS BY DATE^EXAMBYDT^DVBABEBD^4^R
"KRN",8994,2261,1,0)
^8994.01^1^1^3130513^^^^
"KRN",8994,2261,1,1,0)
Provides a report by date range of all AMIE/CAPRI exam requests.
"KRN",8994,2261,2,0)
^8994.02A^3^3
"KRN",8994,2261,2,1,0)
BEGDT^1^^1
"KRN",8994,2261,2,2,0)
ENDDT^1^^1
"KRN",8994,2261,2,3,0)
DVBADLMTR^1^1^0
"KRN",8994,2261,2,3,1,0)
^^4^4^3130606^
"KRN",8994,2261,2,3,1,1,0)
The delimiter indicates whether the report should be produced in a comma 
"KRN",8994,2261,2,3,1,2,0)
delimited format (.csv file) or not. DVBADLMTR=0 means report displays in
"KRN",8994,2261,2,3,1,3,0)
plain text. DVBADLMTR=1 means report will be created as a .csv file
"KRN",8994,2261,2,3,1,4,0)
importable to Excel.
"KRN",8994,2261,2,"B","BEGDT",1)

"KRN",8994,2261,2,"B","DVBADLMTR",3)

"KRN",8994,2261,2,"B","ENDDT",2)

"KRN",8994,2328,-1)
0^2
"KRN",8994,2328,0)
DVBAB TEMPLATE REPORT FULL^RPTSTAT^DVBAB85^4^S^^^0
"KRN",8994,2328,1,0)
^8994.01^1^1^3130522^^^^
"KRN",8994,2328,1,1,0)
Returns report of exam templates, including current status
"KRN",8994,2328,2,0)
^8994.02A^3^3
"KRN",8994,2328,2,1,0)
STRTDT^1
"KRN",8994,2328,2,2,0)
ENDDT^1
"KRN",8994,2328,2,3,0)
DVBDLMT^1^^^
"KRN",8994,2328,2,"B","DVBDLMT",3)

"KRN",8994,2328,2,"B","ENDDT",2)

"KRN",8994,2328,2,"B","STRTDT",1)

"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",223,-1)
1^1
"PKG",223,0)
AUTOMATED MED INFO EXCHANGE^DVBA^The entire AMIE package 7131/2507.
"PKG",223,20,0)
^9.402P^^
"PKG",223,22,0)
^9.49I^1^1
"PKG",223,22,1,0)
2.7^2950410^3010328
"PKG",223,22,1,"PAH",1,0)
185^3130919
"PKG",223,22,1,"PAH",1,1,0)
^^1^1^3130919
"PKG",223,22,1,"PAH",1,1,1,0)
See full patch description on Forum for more information.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
22
"RTN","DVBA185P")
0^23^B2446401^n/a
"RTN","DVBA185P",1,0)
DVBA185P ;ALB/DJS - PATCH DVBA*2.7*185 POST-INSTALL ROUTINE;21-JUN-2013
"RTN","DVBA185P",2,0)
 ;;2.7;AMIE;**185**;Apr 10, 1995;Build 18
"RTN","DVBA185P",3,0)
 ; This routine adds an entry to the REMOTE APPLICATION file (#8994.5) for CCR-CAPRI
"RTN","DVBA185P",4,0)
 Q
"RTN","DVBA185P",5,0)
 ;
"RTN","DVBA185P",6,0)
POST ; Create record to add & update file
"RTN","DVBA185P",7,0)
 ;
"RTN","DVBA185P",8,0)
 S IEN="" F  S IEN=$O(^DIC(19,IEN)) Q:IEN=""  D
"RTN","DVBA185P",9,0)
 . S OPTNM=$P($G(^DIC(19,IEN,0)),U,1) Q:OPTNM'="DVBA CAPRI GUI"  S OPTIEN=IEN
"RTN","DVBA185P",10,0)
 S ARY(8994.5,"?+1,",.01)="CCR-CAPRI"  ;Remote application name
"RTN","DVBA185P",11,0)
 S ARY(8994.5,"?+1,",.02)=OPTIEN  ;Context option IEN FOR "DVBA CAPRI GUI"
"RTN","DVBA185P",12,0)
 S ARY(8994.5,"?+1,",.03)="J\f0LPa:]m#vpVZo2i[D"  ;Application code
"RTN","DVBA185P",13,0)
 S ARY(8994.51,"?+2,?+1,",.01)="S"  ;Callback type
"RTN","DVBA185P",14,0)
 S ARY(8994.51,"?+2,?+1,",.02)=-1  ;Callback port
"RTN","DVBA185P",15,0)
 S ARY(8994.51,"?+2,?+1,",.03)="XXX"  ;Callback server
"RTN","DVBA185P",16,0)
 D UPDATE^DIE("","ARY","","MSG")  ;Update Remote Application file with new CCR-CAPRI entry
"RTN","DVBA185P",17,0)
    I $G(MSG("DIERR"))'="" D
"RTN","DVBA185P",18,0)
 .N ERR,LN,LN2
"RTN","DVBA185P",19,0)
 .S (ERR,LN2)=0
"RTN","DVBA185P",20,0)
 .F  S ERR=+$O(MSG("DIERR",ERR)) Q:'ERR  D
"RTN","DVBA185P",21,0)
 ..S LN=0
"RTN","DVBA185P",22,0)
 ..F  S LN=+$O(MSG("DIERR",ERR,"TEXT",LN)) Q:'LN  D
"RTN","DVBA185P",23,0)
 ...S LN2=LN2+1
"RTN","DVBA185P",24,0)
 ...S X(LN2)=MSG("DIERR",ERR,"TEXT",LN)
"RTN","DVBA185P",25,0)
 ...D BMES^XPDUTL(X(LN2))
"RTN","DVBA185P",26,0)
 Q
"RTN","DVBAADRP")
0^19^B44212510^B43200914
"RTN","DVBAADRP",1,0)
DVBAADRP ;ALB/GTS-557/THM-AMIE COMPLETE ADMISSION RPT ; 1/22/91  1:19 PM
"RTN","DVBAADRP",2,0)
 ;;2.7;AMIE;**17,42,53,108,149,185**;Apr 10, 1995;Build 18
"RTN","DVBAADRP",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBAADRP",4,0)
 ;
"RTN","DVBAADRP",5,0)
 N DVBGUI
"RTN","DVBAADRP",6,0)
 S DVBGUI=0
"RTN","DVBAADRP",7,0)
 K ^TMP($J) G TERM
"RTN","DVBAADRP",8,0)
 Q
"RTN","DVBAADRP",9,0)
 ;
"RTN","DVBAADRP",10,0)
ENBROKER(Y) ;
"RTN","DVBAADRP",11,0)
 ; Returns some info for the CAPRI GUI to display prior
"RTN","DVBAADRP",12,0)
 ; to the user running this report
"RTN","DVBAADRP",13,0)
 N DVBGUI
"RTN","DVBAADRP",14,0)
 S DVBGUI=1
"RTN","DVBAADRP",15,0)
 K ^TMP($J)
"RTN","DVBAADRP",16,0)
 D HOME^%ZIS K NOASK,QUIT1
"RTN","DVBAADRP",17,0)
 D NOPARM^DVBAUTL2 G:$D(DVBAQUIT) KILL^DVBAUTIL
"RTN","DVBAADRP",18,0)
 ;
"RTN","DVBAADRP",19,0)
 S Y(1)="VARO COMPLETE ADMISSION REPORT" S DTAR=^DVB(396.1,1,0),FDT(0)=$$FMTE^XLFDT(DT,"5DZ")
"RTN","DVBAADRP",20,0)
 S HEAD="TOTAL ADMISSION REPORT",HEAD1="FOR "_$P(DTAR,U,1)_" ON "_FDT(0)
"RTN","DVBAADRP",21,0)
 S Y(2)=HEAD1,Y(3)=""
"RTN","DVBAADRP",22,0)
 S Y(4)="Please enter dates for search, oldest date first, most recent date last."
"RTN","DVBAADRP",23,0)
 S Y=$P(DTAR,U,3) X ^DD("DD")
"RTN","DVBAADRP",24,0)
 S Y(5)=""
"RTN","DVBAADRP",25,0)
 S Y(6)="Last report was run on "_Y
"RTN","DVBAADRP",26,0)
 Q
"RTN","DVBAADRP",27,0)
 ;
"RTN","DVBAADRP",28,0)
 ;Input: DVBADLMTR - Indicates if report should be delimited (Optional)
"RTN","DVBAADRP",29,0)
ENBROKE2(MSG,BDATE,EDATE,RO,RONUM,DVBADLMTR) ;
"RTN","DVBAADRP",30,0)
 ; This is the entry point to run the actual report from
"RTN","DVBAADRP",31,0)
 ; the CAPRI GUI.
"RTN","DVBAADRP",32,0)
 N DVBHFS,DVBERR,DVBGUI,I,DVBADHDR
"RTN","DVBAADRP",33,0)
 K ^TMP("DVBA",$J)
"RTN","DVBAADRP",34,0)
 S DVBADLMTR=$S('+$G(DVBADLMTR):"",1:","),DVBADHDR=0
"RTN","DVBAADRP",35,0)
 S DVBGUI=1,DVBERR=0,DVBHFS=$$HFS^DVBAB82()
"RTN","DVBAADRP",36,0)
 S X=BDATE,Y=EDATE
"RTN","DVBAADRP",37,0)
 ; DVBA*2.7*108 - Correct next line.  CAPRI GUI already adds 1 to EDATE
"RTN","DVBAADRP",38,0)
 ; S BDATE=BDATE-.5,EDATE=EDATE+.5
"RTN","DVBAADRP",39,0)
 S BDATE=BDATE-.5,EDATE=EDATE-.5
"RTN","DVBAADRP",40,0)
 K ^TMP($J)
"RTN","DVBAADRP",41,0)
 D HOME^%ZIS K NOASK,QUIT1
"RTN","DVBAADRP",42,0)
 D NOPARM^DVBAUTL2 G:$D(DVBAQUIT) KILL^DVBAUTIL
"RTN","DVBAADRP",43,0)
 ;
"RTN","DVBAADRP",44,0)
 S HEAD="TOTAL ADMISSION REPORT",HEAD1="FOR "_$P(DTAR,U,1)_" ON "_FDT(0)
"RTN","DVBAADRP",45,0)
 I $D(X) D
"RTN","DVBAADRP",46,0)
 . G:X=""!(Y<0) KILL S %ZIS="AEQ" D ^%ZIS K %ZIS
"RTN","DVBAADRP",47,0)
 D HFSOPEN^DVBAB82("DVBRP",DVBHFS,"W") I DVBERR D END^DVBAB82 Q
"RTN","DVBAADRP",48,0)
 I POP K DVBAON2,DCHPTR,M,Y,J G KILL^DVBAUTIL
"RTN","DVBAADRP",49,0)
 U IO
"RTN","DVBAADRP",50,0)
 D DEQUE
"RTN","DVBAADRP",51,0)
 D END^DVBAB82
"RTN","DVBAADRP",52,0)
 Q
"RTN","DVBAADRP",53,0)
SET Q:'$D(^DPT(DA,0))  S DFN=DA D RCV^DVBAVDPT Q:CFLOC'=RONUM&(RO="Y")&(CFLOC'=0)&(CFLOC'=376)
"RTN","DVBAADRP",54,0)
 S ^TMP($J,XCN,CFLOC,MB,DA)=MA_U_RCVAA_U_RCVPEN_U_CNUM
"RTN","DVBAADRP",55,0)
 Q
"RTN","DVBAADRP",56,0)
 ;
"RTN","DVBAADRP",57,0)
PRINTB S MA=$P(DATA,U),RCVAA=$P(DATA,U,2),RCVPEN=$P(DATA,U,3),CNUM=$P(DATA,U,4),DFN=DA,QUIT1=1 D ADM^DVBAVDPT
"RTN","DVBAADRP",58,0)
 S:ADMDT]"" ADMDT=$$FMTE^XLFDT(ADMDT,"5DZ")
"RTN","DVBAADRP",59,0)
 S:DCHGDT]"" DCHGDT=$$FMTE^XLFDT(DCHGDT,"5DZ")
"RTN","DVBAADRP",60,0)
 D:($G(DVBADLMTR)'="") PRINTD
"RTN","DVBAADRP",61,0)
 D:($G(DVBADLMTR)="") PRINTND
"RTN","DVBAADRP",62,0)
 Q
"RTN","DVBAADRP",63,0)
 ;
"RTN","DVBAADRP",64,0)
PRINTND ;print non-delimited admission inq report
"RTN","DVBAADRP",65,0)
 W:(IOST?1"C-".E!($D(DVBAON2))) @IOF
"RTN","DVBAADRP",66,0)
 I DVBGUI=0 W !!!,?(80-$L(HEAD)\2),HEAD,!,?(80-$L(HEAD1)\2),HEAD1,!!
"RTN","DVBAADRP",67,0)
 I DVBGUI=1 W !!
"RTN","DVBAADRP",68,0)
 W ?10,"Patient Name:",?26,PNAM,!!,?14,"Claim No:",?26,CNUM,!,?6,"Claim Folder Loc:",?26,CFLOC,!,?9,"Social Sec No:",?26,SSN,!,?8,"Admission Date:",?26,ADMDT,!,?3,"Admitting Diagnosis:",?26,DIAG,!
"RTN","DVBAADRP",69,0)
 W ?8,"Discharge Date:",?26,DCHGDT,!,?11,"Bed Service:",?26,BEDSEC,!,?13,"Recv A&A?:",?26,$S(RCVAA=0:"NO",RCVAA=1:"YES",1:"Not specified"),!
"RTN","DVBAADRP",70,0)
 W ?14,"Pension?:",?26,$S(RCVPEN=0:"NO",RCVPEN=1:"YES",1:"Not specified"),! D ELIG^DVBAVDPT I IOST'?1"C-".E S DVBAON2=""
"RTN","DVBAADRP",71,0)
 I IOST?1"C-".E DO
"RTN","DVBAADRP",72,0)
 .I ($O(^TMP($J,XCN))'=""!($O(^TMP($J,XCN,CFLOC))'=""!($O(^TMP($J,XCN,CFLOC,ADM))'=""!($O(^TMP($J,XCN,CFLOC,ADM,DA))'="")))) DO
"RTN","DVBAADRP",73,0)
 ..I DVBGUI=0 D
"RTN","DVBAADRP",74,0)
 ...W *7,!,"Press RETURN to continue or ""^"" to stop    "
"RTN","DVBAADRP",75,0)
 ...R ANS:DTIME
"RTN","DVBAADRP",76,0)
 ...S:ANS=U!('$T) QUIT=1
"RTN","DVBAADRP",77,0)
 ...I '$T S DVBAQUIT=1
"RTN","DVBAADRP",78,0)
 .I ($O(^TMP($J,XCN))=""&($O(^TMP($J,XCN,CFLOC))=""&($O(^TMP($J,XCN,CFLOC,ADM))=""&($O(^TMP($J,XCN,CFLOC,ADM,DA))="")))) DO
"RTN","DVBAADRP",79,0)
 ..I DVBGUI=0 D
"RTN","DVBAADRP",80,0)
 ...W *7,!,"Press RETURN to continue  "
"RTN","DVBAADRP",81,0)
 ...R ANS:DTIME
"RTN","DVBAADRP",82,0)
 Q
"RTN","DVBAADRP",83,0)
 ;
"RTN","DVBAADRP",84,0)
PRINTD ;print delimited admission inq report
"RTN","DVBAADRP",85,0)
 ;eligibility logic copied from ELIG^DVBAVDPT
"RTN","DVBAADRP",86,0)
 N ELIG,INCMP
"RTN","DVBAADRP",87,0)
 S ELIG=DVBAELIG,INCMP=""
"RTN","DVBAADRP",88,0)
 I ELIG]"" S ELIG=ELIG_" ("_$S(DVBAELST="P":"Pend Ver",DVBAELST="R":"Pend Re-verif",DVBAELST="V":"Verified",1:"Not Verified")_")"
"RTN","DVBAADRP",89,0)
 I $D(^DPT(DA,.29)) S INCMP=$S($P(^(.29),U,12)=1:"Incompetent",1:"")
"RTN","DVBAADRP",90,0)
 I INCMP]"",ELIG]"" S ELIG=ELIG_", "_INCMP
"RTN","DVBAADRP",91,0)
 D DEM^VADPT I $G(SSN)'="" S SSN=$P($G(VADM(2)),U,2)
"RTN","DVBAADRP",92,0)
 D:('DVBADHDR) COLHDR
"RTN","DVBAADRP",93,0)
 W !,""""_PNAM_""""_DVBADLMTR_$C(160)_CNUM_DVBADLMTR_CFLOC_DVBADLMTR_SSN_DVBADLMTR_ADMDT_DVBADLMTR_""""_DIAG_""""_DVBADLMTR
"RTN","DVBAADRP",94,0)
 W DCHGDT_DVBADLMTR_""""_BEDSEC_""""_DVBADLMTR_$S(RCVAA=0:"NO",RCVAA=1:"YES",1:"Not specified")_DVBADLMTR
"RTN","DVBAADRP",95,0)
 W $S(RCVPEN=0:"NO",RCVPEN=1:"YES",1:"Not specified")_DVBADLMTR_""""_ELIG_""""
"RTN","DVBAADRP",96,0)
 Q
"RTN","DVBAADRP",97,0)
 ;
"RTN","DVBAADRP",98,0)
PRINT U IO S QUIT="" K MA,MB
"RTN","DVBAADRP",99,0)
 S XCN="" F M=0:0 S XCN=$O(^TMP($J,XCN)) Q:XCN=""!(QUIT=1)  S CFLOC="" F J=0:0 S CFLOC=$O(^TMP($J,XCN,CFLOC)) Q:CFLOC=""!(QUIT=1)  D PRINT1
"RTN","DVBAADRP",100,0)
 Q
"RTN","DVBAADRP",101,0)
PRINT1 S ADM="" F K=0:0 S ADM=$O(^TMP($J,XCN,CFLOC,ADM)) Q:ADM=""!(QUIT=1)  S DA="" F L=0:0 S DA=$O(^TMP($J,XCN,CFLOC,ADM,DA)) Q:DA=""!(QUIT=1)  S DATA=^(DA) D PRINTB
"RTN","DVBAADRP",102,0)
 Q
"RTN","DVBAADRP",103,0)
 ;
"RTN","DVBAADRP",104,0)
TERM D HOME^%ZIS K NOASK,QUIT1
"RTN","DVBAADRP",105,0)
 D NOPARM^DVBAUTL2 G:$D(DVBAQUIT) KILL^DVBAUTIL
"RTN","DVBAADRP",106,0)
 ;
"RTN","DVBAADRP",107,0)
SETUP W @IOF,!,"VARO COMPLETE ADMISSION REPORT" S DTAR=^DVB(396.1,1,0),FDT(0)=$$FMTE^XLFDT(DT,"5DZ")
"RTN","DVBAADRP",108,0)
 S HEAD="TOTAL ADMISSION REPORT",HEAD1="FOR "_$P(DTAR,U,1)_" ON "_FDT(0)
"RTN","DVBAADRP",109,0)
 W !,HEAD1
"RTN","DVBAADRP",110,0)
EN1 W !!,"Please enter dates for search, oldest date first, most recent date last.",!!,"Last report was run on " S Y=$P(DTAR,U,3) X ^DD("DD") W Y,!!
"RTN","DVBAADRP",111,0)
 D DATE^DVBAUTIL
"RTN","DVBAADRP",112,0)
 G:X=""!(Y<0) KILL S %ZIS="AEQ" D ^%ZIS K %ZIS
"RTN","DVBAADRP",113,0)
 I POP K DVBAON2,DCHPTR,M,Y,J G KILL^DVBAUTIL
"RTN","DVBAADRP",114,0)
 ;
"RTN","DVBAADRP",115,0)
QUEUE I $D(IO("Q")) S ZTRTN="DEQUE^DVBAADRP",ZTIO=ION,NOASK=1,ZTDESC="AMIE ADMISSION REPORT" F I="BDATE","EDATE","HEAD","HEAD1","RO","RONUM","FDT(0)","NOASK" S ZTSAVE(I)=""
"RTN","DVBAADRP",116,0)
 I $D(IO("Q")) D ^%ZTLOAD W:$D(ZTSK) !!,"Request queued.",!! G KILL
"RTN","DVBAADRP",117,0)
 ;
"RTN","DVBAADRP",118,0)
GO S MA=BDATE F J=0:0 S MA=$O(^DGPM("AMV1",MA)) Q:$P(MA,".")>EDATE!(MA="")  W:(('$D(NOASK))&($G(DVBADLMTR)="")) "." F DA=0:0 S DA=$O(^DGPM("AMV1",MA,DA)) Q:DA=""  F MB=0:0 S MB=$O(^DGPM("AMV1",MA,DA,MB)) Q:MB=""  I MA'>EDATE D SET
"RTN","DVBAADRP",119,0)
 I '$D(^TMP($J)) D  H 2 G KILL
"RTN","DVBAADRP",120,0)
 .U IO
"RTN","DVBAADRP",121,0)
 .W:($G(DVBADLMTR)="") !!,*7
"RTN","DVBAADRP",122,0)
 .W "No data found for parameters entered.",!!
"RTN","DVBAADRP",123,0)
 W:(($G(DVBGUI)=1)&($G(DVBADLMTR)="")) !,HEAD,!,HEAD1,!
"RTN","DVBAADRP",124,0)
 I $D(^TMP($J)) D PRINT I $D(DVBAQUIT) K DVBAON2,DCHPTR,M,Y,J G KILL^DVBAUTIL
"RTN","DVBAADRP",125,0)
 ;
"RTN","DVBAADRP",126,0)
KILL ;
"RTN","DVBAADRP",127,0)
 D ^%ZISC S X=3 K DVBAON2,DCHPTR,M,Y,J D:$D(ZTQUEUED) KILL^%ZTLOAD G FINAL^DVBAUTIL
"RTN","DVBAADRP",128,0)
 ;
"RTN","DVBAADRP",129,0)
DEQUE K ^TMP($J) G GO
"RTN","DVBAADRP",130,0)
 ;
"RTN","DVBAADRP",131,0)
COLHDR ;Column header for delimited report
"RTN","DVBAADRP",132,0)
 W "Patient Name"_DVBADLMTR_"Claim No"_DVBADLMTR_"Claim Folder Loc"_DVBADLMTR
"RTN","DVBAADRP",133,0)
 W "Social Sec No"_DVBADLMTR_"Admission Date"_DVBADLMTR_"Admitting Diagnosis"_DVBADLMTR
"RTN","DVBAADRP",134,0)
 W "Discharge Date"_DVBADLMTR_"Bed Service"_DVBADLMTR_"Recv A&A?"_DVBADLMTR
"RTN","DVBAADRP",135,0)
 W "Pension?"_DVBADLMTR_"Eligibility Data"
"RTN","DVBAADRP",136,0)
 S DVBADHDR=1  ;set so header info only printed once
"RTN","DVBAADRP",137,0)
 Q
"RTN","DVBAB1A")
0^1^B28591193^n/a
"RTN","DVBAB1A",1,0)
DVBAB1A ;ALB/GAK - CAPRI Exam Complete Email Driver ; 03/13/2013 11:23 AM
"RTN","DVBAB1A",2,0)
 ;;2.7;AMIE;**185**;Apr 10, 1995;Build 18
"RTN","DVBAB1A",3,0)
 ;
"RTN","DVBAB1A",4,0)
 Q
"RTN","DVBAB1A",5,0)
 ; 
"RTN","DVBAB1A",6,0)
MSG2(ERR,DUZ,RIEN,ELIST) ;
"RTN","DVBAB1A",7,0)
 ;
"RTN","DVBAB1A",8,0)
 ;DUZ     PERSON FILE DFN
"RTN","DVBAB1A",9,0)
 ;RIEN    2507 REQUEST IEN #396.3
"RTN","DVBAB1A",10,0)
 ;ELIST   2507 EXAM LIST #396.4
"RTN","DVBAB1A",11,0)
 ;
"RTN","DVBAB1A",12,0)
 N DVBOPEN,DVBOPENS,DVBOPENC,J
"RTN","DVBAB1A",13,0)
 N PNAM,PSSN,CNUM,ERR3,ERR2,ERR4,RTN,RTN2,XX
"RTN","DVBAB1A",14,0)
 N POE
"RTN","DVBAB1A",15,0)
 N EIEN,EARY,EERR,ENAM,ESTA
"RTN","DVBAB1A",16,0)
 N XMTEXT,L,XMSUB,XMY
"RTN","DVBAB1A",17,0)
 ;
"RTN","DVBAB1A",18,0)
 S ERR=""
"RTN","DVBAB1A",19,0)
 I DUZ="" S ERR="NO DUZ PASSED" Q ERR
"RTN","DVBAB1A",20,0)
 I RIEN="" S ERR="NO REQUEST IEN PASSED" Q ERR
"RTN","DVBAB1A",21,0)
 I $D(ELIST)'>1 S ERR="NO EXAM LIST PASSED" Q ERR
"RTN","DVBAB1A",22,0)
 ;
"RTN","DVBAB1A",23,0)
 K ^TMP($J,"DVBAB1A")
"RTN","DVBAB1A",24,0)
 K ^TMP($J,"AMIE")
"RTN","DVBAB1A",25,0)
 K ^TMP($J,"AMIE1")
"RTN","DVBAB1A",26,0)
 ;
"RTN","DVBAB1A",27,0)
 S J=""
"RTN","DVBAB1A",28,0)
 F  S J=$O(ELIST(J)) Q:J=""  D
"RTN","DVBAB1A",29,0)
 . S ^TMP($J,"DVBAB1A","ELIST",J)=J
"RTN","DVBAB1A",30,0)
 ;
"RTN","DVBAB1A",31,0)
 ;Determine and count number of open exams on 2507 request
"RTN","DVBAB1A",32,0)
 S DVBOPEN=""
"RTN","DVBAB1A",33,0)
 S DVBOPENS=0,DVBOPENC=0
"RTN","DVBAB1A",34,0)
 D FINDEXAM^DVBAB1(.DVBOPEN,RIEN)
"RTN","DVBAB1A",35,0)
 S J="" F  S J=$O(DVBOPEN(J)) Q:J=""  D
"RTN","DVBAB1A",36,0)
 . I $E(DVBOPEN(J),($L(DVBOPEN(J))-5),$L(DVBOPEN(J)))="[OPEN]" S DVBOPENS=1,DVBOPENC=DVBOPENC+1
"RTN","DVBAB1A",37,0)
 ;
"RTN","DVBAB1A",38,0)
 ;Determine patient name, SSN and C-Number
"RTN","DVBAB1A",39,0)
 S (PNAM,PSSN,CNUM,ERR3,ERR2,RTN,RTN2,XX)=""
"RTN","DVBAB1A",40,0)
 K RTN,ERR3
"RTN","DVBAB1A",41,0)
 D GETS^DIQ(396.3,RIEN,".01","I","RTN","ERR3")
"RTN","DVBAB1A",42,0)
 I $D(RTN) D
"RTN","DVBAB1A",43,0)
 . S XX=""_".01;.09;.313"_""
"RTN","DVBAB1A",44,0)
 . K RTN2,ERR2
"RTN","DVBAB1A",45,0)
 . D GETS^DIQ(2,RTN(396.3,RIEN_",",.01,"I"),XX,"E","RTN2","ERR2")
"RTN","DVBAB1A",46,0)
 . S PNAM=$G(RTN2(2,RTN(396.3,RIEN_",",.01,"I")_",",.01,"E"))
"RTN","DVBAB1A",47,0)
 . S PSSN=$G(RTN2(2,RTN(396.3,RIEN_",",.01,"I")_",",.09,"E"))
"RTN","DVBAB1A",48,0)
 . S CNUM=$G(RTN2(2,RTN(396.3,RIEN_",",.01,"I")_",",.313,"E"))
"RTN","DVBAB1A",49,0)
 S:'$D(PNAM) PNAM=""
"RTN","DVBAB1A",50,0)
 S:'$D(PSSN) PSSN=""
"RTN","DVBAB1A",51,0)
 S:'$D(CNUM) CNUM=""
"RTN","DVBAB1A",52,0)
 ;
"RTN","DVBAB1A",53,0)
 ;Build Exam Array Info
"RTN","DVBAB1A",54,0)
 K ^TMP($J,"DVBAB1A","ELIST")
"RTN","DVBAB1A",55,0)
 S J=""
"RTN","DVBAB1A",56,0)
 F  S J=$O(ELIST(J)) Q:J=""  D
"RTN","DVBAB1A",57,0)
 . S EIEN=ELIST(J)
"RTN","DVBAB1A",58,0)
 . K EARY,EERR
"RTN","DVBAB1A",59,0)
 . D GETS^DIQ(396.4,EIEN,".03;.04","IE","EARY","EERR")
"RTN","DVBAB1A",60,0)
 . Q:'$D(EARY(396.4,EIEN_",",.03,"E"))
"RTN","DVBAB1A",61,0)
 . S ENAM=$G(EARY(396.4,EIEN_",",.03,"E"))
"RTN","DVBAB1A",62,0)
 . S ESTA=$G(EARY(396.4,EIEN_",",.04,"E"))
"RTN","DVBAB1A",63,0)
 . S ^TMP($J,"DVBAB1A","ELIST",J)=ENAM_$E("                                   ",1,35-$L(ENAM))_" "_ESTA
"RTN","DVBAB1A",64,0)
 ;
"RTN","DVBAB1A",65,0)
 ;Determine Priority of Exam
"RTN","DVBAB1A",66,0)
 K ERR4
"RTN","DVBAB1A",67,0)
 S POE=$$GET1^DIQ(396.3,RIEN_",",9,"E","","ERR4")
"RTN","DVBAB1A",68,0)
 I '$D(POE) S POE=""
"RTN","DVBAB1A",69,0)
 ;
"RTN","DVBAB1A",70,0)
 ;
"RTN","DVBAB1A",71,0)
 ;
"RTN","DVBAB1A",72,0)
 D ONEEMAIL
"RTN","DVBAB1A",73,0)
 K ^TMP($J,"DVBAB1A","ELIST")
"RTN","DVBAB1A",74,0)
 K ^TMP($J,"AMIE")
"RTN","DVBAB1A",75,0)
 K ^TMP($J,"AMIE1")
"RTN","DVBAB1A",76,0)
 I $D(ERR) Q ERR
"RTN","DVBAB1A",77,0)
 ;
"RTN","DVBAB1A",78,0)
 Q
"RTN","DVBAB1A",79,0)
 ;
"RTN","DVBAB1A",80,0)
 ;
"RTN","DVBAB1A",81,0)
 ;
"RTN","DVBAB1A",82,0)
ONEEMAIL ;
"RTN","DVBAB1A",83,0)
 K ERR
"RTN","DVBAB1A",84,0)
 N DVBA0,DVBADFN,DVBASITE,DVBADT,DVBAREQ
"RTN","DVBAB1A",85,0)
 S XMDUZ=DUZ
"RTN","DVBAB1A",86,0)
 ;following call supported by IA 3858
"RTN","DVBAB1A",87,0)
 N DUZ
"RTN","DVBAB1A",88,0)
 ;SINCE MAILMAN DOES NOT ALLOW MESSAGES TO BE SENT FROM USERS WITHOUT ACCESS CODES OR MAILBOXES
"RTN","DVBAB1A",89,0)
 ;WHICH CAPRI REMOTE USER DO NOT HAVE, WE HAVE TO NEW DUZ AND CHANGE XMDUZ TO THE NAME OF THE USER
"RTN","DVBAB1A",90,0)
 ;AS A STRING SO THE PROCESS IS STILL LINKED TO THE USER SENDING/TRIGGERING THE MESSAGE
"RTN","DVBAB1A",91,0)
 ;
"RTN","DVBAB1A",92,0)
 S XMDUZ=$P($G(^VA(200,XMDUZ,0)),"^",1)_" CAPRI"
"RTN","DVBAB1A",93,0)
 I $G(^DVB(396.3,RIEN,0))="" S ERR="INVALID REQUEST 396.3 TOP NODE" Q
"RTN","DVBAB1A",94,0)
 S DVBA0=$G(^DVB(396.3,RIEN,0))
"RTN","DVBAB1A",95,0)
 S DVBADFN=$P(DVBA0,"^",1),DVBAREQ=$P(DVBA0,"^",4),DVBADT=$$FMTE^XLFDT($P(DVBA0,"^",2))
"RTN","DVBAB1A",96,0)
 ;following call supported by IA 3858
"RTN","DVBAB1A",97,0)
 S XMY($P($G(^VA(200,DVBAREQ,.15)),"^",1))=""
"RTN","DVBAB1A",98,0)
 ;
"RTN","DVBAB1A",99,0)
 S DVBASITE=$$SITE^VASITE
"RTN","DVBAB1A",100,0)
 I '$D(DVBASITE) S DVBASITE="^"
"RTN","DVBAB1A",101,0)
 ;
"RTN","DVBAB1A",102,0)
 S XMSUB="CAPRI: Completion of 2507 Exams"
"RTN","DVBAB1A",103,0)
 ;
"RTN","DVBAB1A",104,0)
 S L=0
"RTN","DVBAB1A",105,0)
 S L=L+1
"RTN","DVBAB1A",106,0)
 S ^TMP($J,"AMIE",L)="The following veteran had one or more 2507 exams completed.",L=L+1
"RTN","DVBAB1A",107,0)
 I DVBOPENS=0 S ^TMP($J,"AMIE",L)="A 2507 request as described below has been completed and released to the regional office and is now available in CAPRI.",L=L+1
"RTN","DVBAB1A",108,0)
 S ^TMP($J,"AMIE",L)=" ",L=L+1
"RTN","DVBAB1A",109,0)
 S ^TMP($J,"AMIE",L)="DFN: `"_DVBADFN_"       SITE: "_$P($G(DVBASITE),"^",2)_"       Request Date: "_DVBADT
"RTN","DVBAB1A",110,0)
 S L=L+1
"RTN","DVBAB1A",111,0)
 S ^TMP($J,"AMIE",L)=" ",L=L+1
"RTN","DVBAB1A",112,0)
 ;
"RTN","DVBAB1A",113,0)
 S ^TMP($J,"AMIE",L)="  Priority of Exam: "_POE,L=L+1
"RTN","DVBAB1A",114,0)
 S ^TMP($J,"AMIE",L)=" ",L=L+1
"RTN","DVBAB1A",115,0)
 ;
"RTN","DVBAB1A",116,0)
 S ^TMP($J,"AMIE",L)="Exam(s)",L=L+1
"RTN","DVBAB1A",117,0)
 S ^TMP($J,"AMIE",L)="   EXAM TYPE                          STATUS",L=L+1
"RTN","DVBAB1A",118,0)
 ;
"RTN","DVBAB1A",119,0)
 S J=""
"RTN","DVBAB1A",120,0)
 F  S J=$O(^TMP($J,"DVBAB1A","ELIST",J)) Q:J=""  D
"RTN","DVBAB1A",121,0)
 . S ^TMP($J,"AMIE",L)="   "_^TMP($J,"DVBAB1A","ELIST",J),L=L+1
"RTN","DVBAB1A",122,0)
 ;
"RTN","DVBAB1A",123,0)
 S ^TMP($J,"AMIE",L)=" ",L=L+1
"RTN","DVBAB1A",124,0)
 S ^TMP($J,"AMIE",L)=" ",L=L+1
"RTN","DVBAB1A",125,0)
 ;
"RTN","DVBAB1A",126,0)
 I DVBOPENS=1 S ^TMP($J,"AMIE",L)="*** Number of exams still open on this request: "_DVBOPENC_" ***",L=L+1
"RTN","DVBAB1A",127,0)
 I DVBOPENS=0 S ^TMP($J,"AMIE",L)="*** This is the last exam to be completed on this 2507 request. ***",L=L+1
"RTN","DVBAB1A",128,0)
 ;
"RTN","DVBAB1A",129,0)
 S ^TMP($J,"AMIE",L)=" ",L=L+1
"RTN","DVBAB1A",130,0)
 S ^TMP($J,"AMIE",L)=" ",L=L+1
"RTN","DVBAB1A",131,0)
 S ^TMP($J,"AMIE",L)="** NOTE: To view the patient using the DFN, paste the DFN number into the CAPRI **",L=L+1
"RTN","DVBAB1A",132,0)
 S ^TMP($J,"AMIE",L)="** Patient Selector 'Patient ID' field to find the patient. Be sure to include  **",L=L+1
"RTN","DVBAB1A",133,0)
 S ^TMP($J,"AMIE",L)="** the ` (backward-apostrophe) character.                                       **",L=L+1
"RTN","DVBAB1A",134,0)
 S ^TMP($J,"AMIE",L)=" ",L=L+1
"RTN","DVBAB1A",135,0)
 S ^TMP($J,"AMIE",L)="*****This is an auto-generated email.  Do not respond to this email address.*****",L=L+1
"RTN","DVBAB1A",136,0)
 ;
"RTN","DVBAB1A",137,0)
 S XMTEXT="^TMP($J,""AMIE"","
"RTN","DVBAB1A",138,0)
 ;
"RTN","DVBAB1A",139,0)
 D ^XMD
"RTN","DVBAB1A",140,0)
 ;
"RTN","DVBAB1A",141,0)
 I $D(XMMG) S ERR=XMMG
"RTN","DVBAB1A",142,0)
 I $D(XMZ) S ERR="MESSAGE SENT"
"RTN","DVBAB1A",143,0)
 ;
"RTN","DVBAB1A",144,0)
 Q
"RTN","DVBAB5")
0^17^B2583661^B2038503
"RTN","DVBAB5",1,0)
DVBAB5 ;ALB/KLB - CAPRI PENDING REQUESTS CONT ;08/01/00
"RTN","DVBAB5",2,0)
 ;;2.7;AMIE;**35,185**;Apr 10, 1995;Build 18
"RTN","DVBAB5",3,0)
 ;
"RTN","DVBAB5",4,0)
SORT S STAT=$P(^DVB(396.3,REQDA,0),U,18) Q:"^R^X^RX^C^CT^"[(U_STAT_U)  I DVBCSORT="S" Q:STAT'=RSTAT&(RSTAT'="A")
"RTN","DVBAB5",5,0)
 S RONUM=$P(^DVB(396.3,REQDA,0),U,3),RONAME=$S(RONUM]"":$P(^DIC(4,+RONUM,0),U,1),1:"") I (ROFILTER'[RONAME)&(ROFILTER'=0) Q 
"RTN","DVBAB5",6,0)
 S PNAM=$S($D(^DPT(DFN,0)):$P(^(0),U,1),1:"Unknown"),ROUT=$S($D(^DVB(396.3,REQDA,1)):$P(^(1),U,4),1:0),RDATE=$P(^(0),U,5)
"RTN","DVBAB5",7,0)
 I DVBCSORT="V" S ^TMP($J,PNAM,DFN,REQDA)="" Q
"RTN","DVBAB5",8,0)
 I DVBCSORT="S" S ^TMP($J,STAT,PNAM,DFN,REQDA)="" Q
"RTN","DVBAB5",9,0)
 I DVBCSORT="R",$D(ADIVNUM),ROUT=ADIVNUM S ^TMP($J,ROUT,PNAM,DFN,REQDA)="" Q
"RTN","DVBAB5",10,0)
 I DVBCSORT="A" D ELAPSED I EDAYS'<ERDAYS,EDAYS'>OLDAYS S ^TMP($J,EDAYS,PNAM,DFN,REQDA)=""
"RTN","DVBAB5",11,0)
 Q
"RTN","DVBAB5",12,0)
 ;
"RTN","DVBAB5",13,0)
ELAPSED K EDAYS,X1,X2,X S X1=DT,(X2,X)=RDATE D:ELTYP="C" ^%DTC D:ELTYP="W" ^XUWORKDY S EDAYS=X
"RTN","DVBAB5",14,0)
 Q
"RTN","DVBAB51")
0^16^B54385965^B51087227
"RTN","DVBAB51",1,0)
DVBAB51 ;ALB/VM - CAPRI INCOMPETENT PATIENT REPORT ; 3/21/12 3:21pm
"RTN","DVBAB51",2,0)
 ;;2.7;AMIE;**35,149,179,185**;Apr 10, 1995;Build 18
"RTN","DVBAB51",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBAB51",4,0)
 ;
"RTN","DVBAB51",5,0)
 ;Input: ZMSG      - Output Array for incompetent report (By Ref)
"RTN","DVBAB51",6,0)
 ;       BDATE     - Beginning date for report (FM Format)
"RTN","DVBAB51",7,0)
 ;       EDATE     - Ending date for report (FM Format)
"RTN","DVBAB51",8,0)
 ;       DVBADLMTR - Indicates if report should be delimitted (Optional)
"RTN","DVBAB51",9,0)
 ;                    CAPRI currently executes RPC by each day in 
"RTN","DVBAB51",10,0)
 ;                    date range, so DVBADLMTR should equal the
"RTN","DVBAB51",11,0)
 ;                    final EDATE in range so that XTMP global
"RTN","DVBAB51",12,0)
 ;                    can be killed. 
"RTN","DVBAB51",13,0)
 ;Output: ^TMP("DVBAR",$J) contains delimited/non-delimited incompetent report
"RTN","DVBAB51",14,0)
STRT(ZMSG,BDATE,EDATE,DVBADLMTR) ;ENTER HERE
"RTN","DVBAB51",15,0)
 N DVBAFNLDTE,MA1
"RTN","DVBAB51",16,0)
 S DVBABCNT=0,RO="N",RONUM=0
"RTN","DVBAB51",17,0)
 S DVBAFNLDTE=$S(+$G(DVBADLMTR):+$P(DVBADLMTR,"."),1:0)
"RTN","DVBAB51",18,0)
 S DVBADLMTR=$S('+$G(DVBADLMTR):"",1:",")
"RTN","DVBAB51",19,0)
 K ^TMP($J),^TMP("DVBAR") G TERM
"RTN","DVBAB51",20,0)
SET Q:'$D(^DPT(DA,.29))  S ICDAT=^(.29) Q:$P(ICDAT,U,12)'=1&(ICDAT']"")  S INCMP="" S:$P(ICDAT,U)]""!($P(ICDAT,U,12)=1) INCMP=1 Q:INCMP'=1  S ICDAT2=$P(ICDAT,U,2),ICDAT=$P(ICDAT,U)
"RTN","DVBAB51",21,0)
 S:ICDAT]"" ICDAT=$$FMTE^XLFDT(ICDAT,"5DZ")
"RTN","DVBAB51",22,0)
 S:ICDAT2]"" ICDAT2=$$FMTE^XLFDT(ICDAT2,"5DZ")
"RTN","DVBAB51",23,0)
 Q:'$D(^DPT(DA,0))  S DFN=DA D RCV^DVBAVDPT Q:CFLOC'=RONUM&(RO="Y")&(CFLOC'=0)&(CFLOC'=376)
"RTN","DVBAB51",24,0)
 S MA1=$P(MA,".",1)
"RTN","DVBAB51",25,0)
 S ^TMP($J,MA1,XCN,CFLOC,MB,DA)=RCVAA_U_RCVPEN_U_CNUM_U_ICDAT_U_ICDAT2_U_INCMP
"RTN","DVBAB51",26,0)
 Q
"RTN","DVBAB51",27,0)
 ;
"RTN","DVBAB51",28,0)
PRINTB S RCVAA=$P(DATA,U),RCVPEN=$P(DATA,U,2),CNUM=$P(DATA,U,3),ICDAT=$P(DATA,U,4),ICDAT2=$P(DATA,U,5),INCMP=$P(DATA,U,6),DFN=DA,QUIT1=1 D ADM^DVBAVDPT
"RTN","DVBAB51",29,0)
 S ADMDT=$$FMTE^XLFDT(ADMDT,"5DZ")
"RTN","DVBAB51",30,0)
 S DCHGDT=$$FMTE^XLFDT(DCHGDT,"5DZ")
"RTN","DVBAB51",31,0)
 S LADM=ADM,TDIS="UNKNOWN",TO="",DCHPTR=$P(^DGPM(LADM,0),U,17),TDIS=$S($D(^DGPM(+DCHPTR,0)):$P(^(0),U,18),1:"") I TDIS="" S TDIS="Unknown discharge type"
"RTN","DVBAB51",32,0)
 S:'$D(^DG(405.2,+TDIS,0)) TDIS="Unknown discharge type" I $D(^(0)) S TDIS=$S($P(^DG(405.2,+TDIS,0),U,1)]"":$P(^(0),U,1),1:"Unknown discharge type")
"RTN","DVBAB51",33,0)
 I '$G(DVBADLMTR)="," S:(IOST?1"C-".E)!($D(DVBAON2)) ^TMP("DVBAR",$J,DVBABCNT)=" ",DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",34,0)
 ;***vm-out*W !!!,?(80-$L(HEAD)\2),HEAD,!,?(80-$L(HEAD1)\2),HEAD1,!!
"RTN","DVBAB51",35,0)
 ;create delimited/non-delimited report
"RTN","DVBAB51",36,0)
 D:($G(DVBADLMTR)=",") PRINTD
"RTN","DVBAB51",37,0)
 D:($G(DVBADLMTR)="") PRINTND
"RTN","DVBAB51",38,0)
 S DVBAON2=""
"RTN","DVBAB51",39,0)
 Q
"RTN","DVBAB51",40,0)
 ;
"RTN","DVBAB51",41,0)
PRINTND ;create non-delimited incompetent report
"RTN","DVBAB51",42,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="  Patient Name:    "_PNAM,DVBABCNT=DVBABCNT+1,^TMP("DVBAR",$J,DVBABCNT)=" ",DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",43,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="           Claim No:   "_CNUM,DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",44,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="  Claim Folder Loc:    "_CFLOC,DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",45,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="      Social Sec No:   "_SSN,DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",46,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="     Admission Date:   "_ADMDT,DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",47,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="Admitting Diagnosis:   "_DIAG,DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",48,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="     Discharge Date:   "_DCHGDT,DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",49,0)
 I DCHGDT]"" S ^TMP("DVBAR",$J,DVBABCNT)="  Type of Discharge:   "_TDIS_$S(TO]"":" TO "_$S($D(^DIC(4,+TO,0)):$P(^(0),U,1),1:""),1:""),DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",50,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="        Bed Service:   "_BEDSEC,DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",51,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="          Recv A&A?:   "_$S(RCVAA=0:"NO",RCVAA=1:"YES",1:"Not specified"),DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",52,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="           Pension?:   "_$S(RCVPEN=0:"NO",RCVPEN=1:"YES",1:"Not specified"),DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",53,0)
 ;***vm-out*D ELIG^DVBAVDPT
"RTN","DVBAB51",54,0)
ELIG S ELIG=DVBAELIG,INCMP=""
"RTN","DVBAB51",55,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="   Eligibility data:   "
"RTN","DVBAB51",56,0)
 I ELIG]"" S ELIG=ELIG_" ("_$S(DVBAELST="P":"Pend Ver",DVBAELST="R":"Pend Re-verif",DVBAELST="V":"Verified",1:"Not Verified")_")"
"RTN","DVBAB51",57,0)
 I $D(^DPT(DA,.29)) S INCMP=$S($P(^(.29),U,12)=1:"Incompetent",1:"")
"RTN","DVBAB51",58,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=^TMP("DVBAR",$J,DVBABCNT)_ELIG_$S(((ELIG]"")&(INCMP]"")):", ",1:"")_INCMP,DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",59,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="  DATE RULED INCOMP:   "_$S($D(ICDAT)]"":ICDAT_" (VA)",1:"")_$S(ICDAT2]"":" - "_ICDAT2_" (CIVIL)",1:" "),DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",60,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=" ",DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",61,0)
 ;***vm-out*I IOST?1"C-".E W *7,!,"Press RETURN to continue or ""^"" to stop    " R ANS:DTIME S:ANS=U!('$T) QUIT=1 I '$T S DVBAQUIT=1
"RTN","DVBAB51",62,0)
 Q
"RTN","DVBAB51",63,0)
 ;
"RTN","DVBAB51",64,0)
PRINTD ;create delimited incompetent report
"RTN","DVBAB51",65,0)
 D:('$D(^XTMP("DVBA_INCOMPETENT_RPT"_$J,0))) COLHDR
"RTN","DVBAB51",66,0)
 D DEM^VADPT I $G(VADM(1))'="" S SSN=$S(DVBADLMTR=",":$P($G(VADM(2)),U,2),1:$P($G(VADM(2)),U,1))
"RTN","DVBAB51",67,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=""""_PNAM_""""_DVBADLMTR_$C(160)_CNUM_DVBADLMTR_CFLOC_DVBADLMTR_SSN_DVBADLMTR_ADMDT_DVBADLMTR_""""_DIAG_""""_DVBADLMTR_DCHGDT_DVBADLMTR
"RTN","DVBAB51",68,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=^TMP("DVBAR",$J,DVBABCNT)_$S((DCHGDT]""):TDIS_$S(TO]"":" TO "_$S($D(^DIC(4,+TO,0)):$P(^(0),U,1),1:""),1:""),1:"")_DVBADLMTR
"RTN","DVBAB51",69,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=^TMP("DVBAR",$J,DVBABCNT)_""""_BEDSEC_""""_DVBADLMTR_""_$S(RCVAA=0:"NO",RCVAA=1:"YES",1:"Not specified")_DVBADLMTR
"RTN","DVBAB51",70,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=^TMP("DVBAR",$J,DVBABCNT)_$S(RCVPEN=0:"NO",RCVPEN=1:"YES",1:"Not specified")_DVBADLMTR
"RTN","DVBAB51",71,0)
 ;
"RTN","DVBAB51",72,0)
 S ELIG=DVBAELIG,INCMP=""
"RTN","DVBAB51",73,0)
 I ELIG]"" S ELIG=ELIG_" ("_$S(DVBAELST="P":"Pend Ver",DVBAELST="R":"Pend Re-verif",DVBAELST="V":"Verified",1:"Not Verified")_")"
"RTN","DVBAB51",74,0)
 I $D(^DPT(DA,.29)) S INCMP=$S($P(^(.29),U,12)=1:"Incompetent",1:"")
"RTN","DVBAB51",75,0)
 ;
"RTN","DVBAB51",76,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=^TMP("DVBAR",$J,DVBABCNT)_""""_ELIG_$S(ELIG]"":", ",1:"")_INCMP_""""_DVBADLMTR_$S($D(ICDAT)]"":ICDAT_" (VA)",1:"")_$S(ICDAT2]"":" - "_ICDAT2_" (CIVIL)",1:"")
"RTN","DVBAB51",77,0)
 S DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",78,0)
 Q
"RTN","DVBAB51",79,0)
 ;
"RTN","DVBAB51",80,0)
PRINT U IO S QUIT=""
"RTN","DVBAB51",81,0)
 S MA="" F H=0:0 S MA=$O(^TMP($J,MA)) Q:MA=""!(QUIT=1)  S XCN="" F M=0:0 S XCN=$O(^TMP($J,MA,XCN)) Q:XCN=""!(QUIT=1)  S CFLOC="" F J=0:0 S CFLOC=$O(^TMP($J,MA,XCN,CFLOC)) Q:CFLOC=""!(QUIT=1)  D PRINT1
"RTN","DVBAB51",82,0)
 Q
"RTN","DVBAB51",83,0)
PRINT1 S ADM="" F K=0:0 S ADM=$O(^TMP($J,MA,XCN,CFLOC,ADM)) Q:ADM=""!(QUIT=1)  S DA="" F L=0:0 S DA=$O(^TMP($J,MA,XCN,CFLOC,ADM,DA)) Q:DA=""!(QUIT=1)  S DATA=^(DA) D PRINTB
"RTN","DVBAB51",84,0)
 Q
"RTN","DVBAB51",85,0)
 ;
"RTN","DVBAB51",86,0)
TERM ;D HOME^%ZIS K NOASK
"RTN","DVBAB51",87,0)
 K NOASK
"RTN","DVBAB51",88,0)
 ;
"RTN","DVBAB51",89,0)
SETUP ;W @IOF,!,"VARO INCOMPETENCY REPORT" D NOPARM^DVBAUTL2 
"RTN","DVBAB51",90,0)
NOPARM ;check for AMIE parameter setup
"RTN","DVBAB51",91,0)
 I '$D(^DVB(396.1,1,0)) S ^TMP("DVBAR",$J,DVBABCNT)="No site parameters have been set up in file 396.1.",DVBABCNT=DVBABCNT+1,^TMP("DVBAR",$J,DVBABCNT)="You must do this before running any reports." S DVBAQUIT=1 H 3
"RTN","DVBAB51",92,0)
 G:$D(DVBAQUIT) KILL^DVBAUTIL S DTAR=^DVB(396.1,1,0),FDT(0)=$$FMTE^XLFDT(DT,"5DZ")
"RTN","DVBAB51",93,0)
 S HEAD="INCOMPETENCY REPORT",HEAD1="FOR "_$P(DTAR,U,1)_" ON "_FDT(0)
"RTN","DVBAB51",94,0)
 ;***vm-out*W !,HEAD1
"RTN","DVBAB51",95,0)
EN1 ;***vm-out*W !!,"Please enter dates for search, oldest date first, most recent date last.",!!,"Last report was run on " S Y=$P(DTAR,U,5) X ^DD("DD") W Y,!!
"RTN","DVBAB51",96,0)
 ;***vm-out*D DATE^DVBAUTIL G:X=""!(Y<0) KILL
"RTN","DVBAB51",97,0)
 S %ZIS="Q" D ^%ZIS K %ZIS G:POP KILL^DVBAUTIL
"RTN","DVBAB51",98,0)
 ;
"RTN","DVBAB51",99,0)
QUEUE ;***vm-out*I $D(IO("Q")) S ZTRTN="DEQUE^DVBACMRP",ZTIO=ION,NOASK=1,ZTDESC="AMIE INCOMPETENT VET REPORT" F I="FDT(0)","HEAD","HEAD1","BDATE","EDATE","TYPE","RO","RONUM","NOASK" S ZTSAVE(I)=""
"RTN","DVBAB51",100,0)
 ;***vm-out*I $D(IO("Q")) D ^%ZTLOAD W:$D(ZTSK) !!,"Request queued.",!! G KILL
"RTN","DVBAB51",101,0)
 ;
"RTN","DVBAB51",102,0)
GO S MA=BDATE F J=0:0 S MA=$O(^DGPM("AMV1",MA)) Q:$P(MA,".")>EDATE!(MA="")  F DA=0:0 S DA=$O(^DGPM("AMV1",MA,DA)) Q:DA=""  F MB=0:0 S MB=$O(^DGPM("AMV1",MA,DA,MB)) Q:MB=""  D SET I '$D(NOASK) W "."
"RTN","DVBAB51",103,0)
 I '$D(^TMP($J)) S ^TMP("DVBAR",$J,DVBABCNT)="No data found for parameters entered." H 2 G KILL
"RTN","DVBAB51",104,0)
 I $D(^TMP($J)) D PRINT K:(DVBAFNLDTE=$P(EDATE,".")) ^XTMP("DVBA_INCOMPETENT_RPT"_$J,0) I $D(DVBAQUIT) K DVBAON2 G KILL^DVBAUTIL
"RTN","DVBAB51",105,0)
 ;
"RTN","DVBAB51",106,0)
KILL K:(DVBAFNLDTE=$P(EDATE,".")) ^XTMP("DVBA_INCOMPETENT_RPT"_$J,0)
"RTN","DVBAB51",107,0)
 S ZMSG=$NA(^TMP("DVBAR",$J))
"RTN","DVBAB51",108,0)
 D ^%ZISC S X=5 K DVBAON2 D:$D(ZTQUEUED) KILL^%ZTLOAD G FINAL^DVBAUTIL
"RTN","DVBAB51",109,0)
 Q
"RTN","DVBAB51",110,0)
 ;
"RTN","DVBAB51",111,0)
DEQUE K ^TMP($J) G GO
"RTN","DVBAB51",112,0)
 ;
"RTN","DVBAB51",113,0)
COLHDR ;Column header for delimited report
"RTN","DVBAB51",114,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=HEAD,DVBABCNT=DVBABCNT+1,^TMP("DVBAR",$J,DVBABCNT)=HEAD1,DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",115,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="Patient Name"_DVBADLMTR_"Claim No"_DVBADLMTR_"Claim Folder Loc"_DVBADLMTR
"RTN","DVBAB51",116,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=^TMP("DVBAR",$J,DVBABCNT)_"Social Sec No"_DVBADLMTR_"Admission Date"_DVBADLMTR
"RTN","DVBAB51",117,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=^TMP("DVBAR",$J,DVBABCNT)_"Admitting Diagnosis"_DVBADLMTR_"Discharge Date"_DVBADLMTR
"RTN","DVBAB51",118,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=^TMP("DVBAR",$J,DVBABCNT)_"Type of Discharge"_DVBADLMTR_"Bed Service"_DVBADLMTR
"RTN","DVBAB51",119,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=^TMP("DVBAR",$J,DVBABCNT)_"Recv A&A?"_DVBADLMTR_"Pension?"_DVBADLMTR
"RTN","DVBAB51",120,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=^TMP("DVBAR",$J,DVBABCNT)_"Eligibility Data"_DVBADLMTR_"Date Ruled Incomp"_$C(13)
"RTN","DVBAB51",121,0)
 S DVBABCNT=DVBABCNT+1
"RTN","DVBAB51",122,0)
 S ^XTMP("DVBA_INCOMPETENT_RPT"_$J,0)=DT_U_DT
"RTN","DVBAB51",123,0)
 Q
"RTN","DVBAB53")
0^3^B59288821^B51879016
"RTN","DVBAB53",1,0)
DVBAB53 ;ALB/SPH - CAPRI DISCHARGE REPORT ; 3/5/12 11:30am
"RTN","DVBAB53",2,0)
 ;;2.7;AMIE;**35,99,100,149,179,185**;Apr 10, 1995;Build 18
"RTN","DVBAB53",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBAB53",4,0)
 ;
"RTN","DVBAB53",5,0)
 ;Input: ZMSG      - Output Array for discharge report (By Ref)
"RTN","DVBAB53",6,0)
 ;       BDATE     - Beginning date for eport (FM Format)
"RTN","DVBAB53",7,0)
 ;       EDATE     - Ending date for report (FM Format)
"RTN","DVBAB53",8,0)
 ;       ADTYPE    - Valid discharge code values include:
"RTN","DVBAB53",9,0)
 ;                       A : Recieving A&A
"RTN","DVBAB53",10,0)
 ;                       P : Pension
"RTN","DVBAB53",11,0)
 ;                       S : Service Connected
"RTN","DVBAB53",12,0)
 ;                       L : All discharge types
"RTN","DVBAB53",13,0)
 ;       DVBADLMTR - Indicates if report should be delimitted (Optional)
"RTN","DVBAB53",14,0)
 ;                    CAPRI currently executes RPC by each day in
"RTN","DVBAB53",15,0)
 ;                    date range, so DVBADLMTR should equal the
"RTN","DVBAB53",16,0)
 ;                    final EDATE in range so that XTMP global
"RTN","DVBAB53",17,0)
 ;                    can be killed.
"RTN","DVBAB53",18,0)
 ;Output: ^TMP("DVBAR",$J) contains delimited/non-delimited discharge report
"RTN","DVBAB53",19,0)
STRT(ZMSG,BDATE,EDATE,ADTYPE,DVBADLMTR)    ;
"RTN","DVBAB53",20,0)
 N DVBAFNLDTE,MA1
"RTN","DVBAB53",21,0)
 I BDATE'["." S BDATE=BDATE-.0001   ; DVBA*2.7*99
"RTN","DVBAB53",22,0)
 S DVBABCNT=0
"RTN","DVBAB53",23,0)
 S RONUM=0
"RTN","DVBAB53",24,0)
 S RO="N"
"RTN","DVBAB53",25,0)
 S HEAD="",HEAD1=""
"RTN","DVBAB53",26,0)
 S DVBAFNLDTE=$S(+$G(DVBADLMTR):+$P(DVBADLMTR,"."),1:0)
"RTN","DVBAB53",27,0)
 S DVBADLMTR=$S('+$G(DVBADLMTR):"",1:"^")
"RTN","DVBAB53",28,0)
 K ^TMP($J) G TERM
"RTN","DVBAB53",29,0)
 ;
"RTN","DVBAB53",30,0)
SET Q:'$D(^DPT(DA,0))  S DFN=DA,DVBASC="" D RCV^DVBAVDPT Q:CFLOC'=RONUM&(RO="Y")&(CFLOC'=0)&(CFLOC'=376)  Q:ADTYPE="S"&(DVBASC'="Y")  Q:ADTYPE="A"&(RCVAA'=1)  Q:ADTYPE="P"&(RCVPEN'="1")
"RTN","DVBAB53",31,0)
 S TDIS=$S($D(^DGPM(+MB,0)):$P(^(0),U,18),1:"")
"RTN","DVBAB53",32,0)
 I $D(^DG(405.2,+TDIS,0)) DO
"RTN","DVBAB53",33,0)
 . ; I '$D(^TMP("DVBA",$J,"DUP",+TDIS)) Q   ; DVBA*2.7*99 commented out
"RTN","DVBAB53",34,0)
 .I '$D(DISTYPE(+TDIS)) Q
"RTN","DVBAB53",35,0)
 .S TDIS=$S($P(^DG(405.2,+TDIS,0),U,1)]"":$P(^(0),U,1),1:"Unknown discharge type")
"RTN","DVBAB53",36,0)
 .S MA1=$P(MA,".",1)
"RTN","DVBAB53",37,0)
 .S ^TMP($J,MA1,XCN,CFLOC,MB,DA)=RCVAA_U_RCVPEN_U_CNUM_U_TDIS
"RTN","DVBAB53",38,0)
 .Q
"RTN","DVBAB53",39,0)
 Q
"RTN","DVBAB53",40,0)
 ;
"RTN","DVBAB53",41,0)
PRINTB S RCVAA=$P(DATA,U),RCVPEN=$P(DATA,U,2),CNUM=$P(DATA,U,3),TDIS=$P(DATA,U,4),DFN=DA,QUIT1=1 D DCHGDT^DVBAVDPT
"RTN","DVBAB53",42,0)
 W:(IOST?1"C-".E)!($D(DVBAON2)) @IOF
"RTN","DVBAB53",43,0)
 W !!!,?(80-$L(HEAD)\2),HEAD,!,?(80-$L(HEAD1)\2),HEAD1,!!
"RTN","DVBAB53",44,0)
 ;create delimited/non-delimited report
"RTN","DVBAB53",45,0)
 D:($G(DVBADLMTR)'="") PRINTD
"RTN","DVBAB53",46,0)
 D:($G(DVBADLMTR)="") PRINTND
"RTN","DVBAB53",47,0)
 Q
"RTN","DVBAB53",48,0)
 ;
"RTN","DVBAB53",49,0)
PRINTND ;create non-delimited discharge report
"RTN","DVBAB53",50,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="",DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",51,0)
 ;
"RTN","DVBAB53",52,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="          Patient Name:    "_PNAM  S DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",53,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="              Claim No:    "_CNUM  S DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",54,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="      Claim Folder Loc:    "_CFLOC  S DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",55,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="         Social Sec No:    "_SSN  S DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",56,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="        Discharge Date:    "_$$FMTE^XLFDT(DCHGDT,"5DZ"),DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",57,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="     Type of Discharge:    "_TDIS,DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",58,0)
 D LOS^DVBAUTIL
"RTN","DVBAB53",59,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="        Length of Stay:    "_LOS_$S(LOS="":"Discharged same day",LOS=1:" day",1:" days"),DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",60,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="           Bed Service:    "_BEDSEC,DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",61,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="             Recv A&A?:    "_$S(RCVAA="0":"NO",RCVAA="1":"YES",1:"Not specified"),DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",62,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="              Pension?:    "_$S(RCVPEN="0":"NO",RCVPEN="1":"YES",1:"Not specified"),DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",63,0)
 ;
"RTN","DVBAB53",64,0)
 ;
"RTN","DVBAB53",65,0)
 ; ELIG INFO...
"RTN","DVBAB53",66,0)
 S ELIG=DVBAELIG,INCMP=""
"RTN","DVBAB53",67,0)
 ;S ZMSG(DVBABCNT)="      Eligibility data:    "
"RTN","DVBAB53",68,0)
 I ELIG]"" S ELIG=ELIG_" ("_$S(DVBAELST="P":"Pend Ver",DVBAELST="R":"Pend Re-verif",DVBAELST="V":"Verified",1:"Not Verified")_")"
"RTN","DVBAB53",69,0)
 I $D(^DPT(DA,.29)) S INCMP=$S($P(^(.29),U,12)=1:"Incompetent",1:"")
"RTN","DVBAB53",70,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="      Eligibility data:    "_ELIG_$S(((ELIG]"")&(INCMP]"")):", ",1:"")  S DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",71,0)
 W:$X>60 !?26 S ^TMP("DVBAR",$J,DVBABCNT)=INCMP  S DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",72,0)
 Q
"RTN","DVBAB53",73,0)
 ;END OF ELIG INFO
"RTN","DVBAB53",74,0)
 ;
"RTN","DVBAB53",75,0)
 ;I IOST?1"C-".E W *7,!,"Press RETURN to continue or ""^"" to stop    " R ANS:DTIME S:ANS=U!('$T) QUIT=1 I ANS=U S DVBAQUIT=1
"RTN","DVBAB53",76,0)
 S DVBAON2=""
"RTN","DVBAB53",77,0)
 Q
"RTN","DVBAB53",78,0)
 ;
"RTN","DVBAB53",79,0)
PRINTD ;create delimited discharge report
"RTN","DVBAB53",80,0)
 N ELIG,INCMP,DVBATMP,X,X1,X2,X3
"RTN","DVBAB53",81,0)
 D:('$D(^XTMP("DVBA_DISCHARGE_RPT"_$J,0))) COLHDR
"RTN","DVBAB53",82,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=PNAM_DVBADLMTR_CNUM_DVBADLMTR_CFLOC_DVBADLMTR_SSN_DVBADLMTR
"RTN","DVBAB53",83,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=^TMP("DVBAR",$J,DVBABCNT)_$$FMTE^XLFDT(DCHGDT,"5DZ")_DVBADLMTR_TDIS_DVBADLMTR
"RTN","DVBAB53",84,0)
 D LOS^DVBAUTIL
"RTN","DVBAB53",85,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=^TMP("DVBAR",$J,DVBABCNT)_LOS_$S(LOS="":"Discharged same day",LOS=1:" day",1:" days")_DVBADLMTR
"RTN","DVBAB53",86,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=^TMP("DVBAR",$J,DVBABCNT)_BEDSEC_DVBADLMTR_$S(RCVAA="0":"NO",RCVAA="1":"YES",1:"Not specified")_DVBADLMTR
"RTN","DVBAB53",87,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=^TMP("DVBAR",$J,DVBABCNT)_$S(RCVPEN="0":"NO",RCVPEN="1":"YES",1:"Not specified")_DVBADLMTR
"RTN","DVBAB53",88,0)
 ;
"RTN","DVBAB53",89,0)
 S ELIG=DVBAELIG,INCMP=""
"RTN","DVBAB53",90,0)
 I ELIG]"" S ELIG=ELIG_" ("_$S(DVBAELST="P":"Pend Ver",DVBAELST="R":"Pend Re-verif",DVBAELST="V":"Verified",1:"Not Verified")_")"
"RTN","DVBAB53",91,0)
 I $D(^DPT(DA,.29)) S INCMP=$S($P(^(.29),U,12)=1:"Incompetent",1:"")
"RTN","DVBAB53",92,0)
 ;
"RTN","DVBAB53",93,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=^TMP("DVBAR",$J,DVBABCNT)_ELIG_$S(((ELIG]"")&(INCMP]"")):", ",1:"")_INCMP
"RTN","DVBAB53",94,0)
 ;
"RTN","DVBAB53",95,0)
 S DVBATMP=^TMP("DVBAR",$J,DVBABCNT)
"RTN","DVBAB53",96,0)
 S X=$P(DVBATMP,DVBADLMTR,4)
"RTN","DVBAB53",97,0)
 I $L(X)'>9 S X=""""_$E("000000000",1,9-$L(X))_X_"""",X1=$E(X,1,4),X2=$E(X,5,6),X3=$E(X,7,11),X=X1_"-"_X2_"-"_X3
"RTN","DVBAB53",98,0)
 I $E(X,10,10)'?.N S X=""""_$E("0000000000",1,10-$L(X))_X_"""",X1=$E(X,1,4),X2=$E(X,5,6),X3=$E(X,7,12),X=X1_"-"_X2_"-"_X3
"RTN","DVBAB53",99,0)
 S $P(DVBATMP,DVBADLMTR,4)=X
"RTN","DVBAB53",100,0)
 S X=$P(DVBATMP,DVBADLMTR,2)
"RTN","DVBAB53",101,0)
 S X=$C(160)_X
"RTN","DVBAB53",102,0)
 S $P(DVBATMP,DVBADLMTR,2)=X
"RTN","DVBAB53",103,0)
 F I=1:1:$L(DVBATMP,DVBADLMTR) I $P(DVBATMP,DVBADLMTR,I)["," S $P(DVBATMP,DVBADLMTR,I)=""""_$P(DVBATMP,DVBADLMTR,I)_""""
"RTN","DVBAB53",104,0)
 S DVBATMP=$TR(DVBATMP,DVBADLMTR,",")
"RTN","DVBAB53",105,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=DVBATMP
"RTN","DVBAB53",106,0)
 ;
"RTN","DVBAB53",107,0)
 S DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",108,0)
 Q
"RTN","DVBAB53",109,0)
 ;
"RTN","DVBAB53",110,0)
PRINT U IO S QUIT=""
"RTN","DVBAB53",111,0)
 S MA="" F G=0:0 S MA=$O(^TMP($J,MA)) Q:MA=""!(QUIT=1)  S XCN="" F M=0:0 S XCN=$O(^TMP($J,MA,XCN)) Q:XCN=""!(QUIT=1)  S CFLOC="" F J=0:0 S CFLOC=$O(^TMP($J,MA,XCN,CFLOC)) Q:CFLOC=""!(QUIT=1)  D PRINT1
"RTN","DVBAB53",112,0)
 Q
"RTN","DVBAB53",113,0)
PRINT1 S ADM="" F K=0:0 S ADM=$O(^TMP($J,MA,XCN,CFLOC,ADM)) Q:ADM=""!(QUIT=1)  S DA="" F L=0:0 S DA=$O(^TMP($J,MA,XCN,CFLOC,ADM,DA)) Q:DA=""!(QUIT=1)  S DATA=^(DA) D PRINTB
"RTN","DVBAB53",114,0)
 Q
"RTN","DVBAB53",115,0)
 ;
"RTN","DVBAB53",116,0)
TERM ;D HOME^%ZIS K NOASK
"RTN","DVBAB53",117,0)
 ;
"RTN","DVBAB53",118,0)
SETUP ;W @IOF,!,"VARO DISCHARGE REPORT" D NOPARM^DVBAUTL2 G:$D(DVBAQUIT) KILL^DVBAUTIL S DTAR=^DVB(396.1,1,0),FDT(0)=$$FMTE^XLFDT(DT,"5DZ")
"RTN","DVBAB53",119,0)
 S DSRP=1
"RTN","DVBAB53",120,0)
 ;S HEAD1="FOR "_$P(DTAR,U,1)_" ON "_FDT(0) W !,HEAD1
"RTN","DVBAB53",121,0)
 ;
"RTN","DVBAB53",122,0)
EN1 ;W !!,"Please enter dates for search, oldest date first, most recent date last.",!!,"Last report was run on " S Y=$P(DTAR,U,4) X ^DD("DD") W Y,!!
"RTN","DVBAB53",123,0)
 ;D DATE^DVBAUTIL
"RTN","DVBAB53",124,0)
 ;G:X=""!(Y<0) KILL
"RTN","DVBAB53",125,0)
 ;
"RTN","DVBAB53",126,0)
ADTYPE ;D ADTYPE^DVBAUTL2 G:$D(DVBAQUIT) KILL^DVBAUTIL
"RTN","DVBAB53",127,0)
 ;W @IOF
"RTN","DVBAB53",128,0)
 ;K DVBACEPT
"RTN","DVBAB53",129,0)
 D EN^DVBAB99("DVBA DISCHARGE TYPES")
"RTN","DVBAB53",130,0)
 D ACCEPT^DVBALD
"RTN","DVBAB53",131,0)
 I '$D(DVBACEPT) D KILL^DVBAUTIL Q
"RTN","DVBAB53",132,0)
 I '$O(^TMP("DVBA",$J,"DUP",0)) D KILL^DVBAUTIL Q
"RTN","DVBAB53",133,0)
 M DISTYPE=^TMP("DVBA",$J,"DUP")
"RTN","DVBAB53",134,0)
 ;
"RTN","DVBAB53",135,0)
 ; DVBA*2.7*100 - commented out next line
"RTN","DVBAB53",136,0)
 ; W !!! S %ZIS="Q" D ^%ZIS K %ZIS G:POP KILL^DVBAUTIL
"RTN","DVBAB53",137,0)
 ;
"RTN","DVBAB53",138,0)
QUEUE I $D(IO("Q")) S ZTRTN="DEQUE^DVBADSRT",ZTIO=ION,NOASK=1,ZTDESC="AMIE DISCHARGE REPORT" F I="DISTYPE(","ADTYPE","DVBATYPS","BDATE","BDATE1","EDATE","FDT(0)","HEAD","HEAD1","HD","RO","RONUM","NOASK" S ZTSAVE(I)=""
"RTN","DVBAB53",139,0)
 I $D(IO("Q")) D ^%ZTLOAD W:$D(ZTSK) !!,"Request queued.",! G KILL
"RTN","DVBAB53",140,0)
 ;
"RTN","DVBAB53",141,0)
GO S MA=BDATE F J=0:0 S MA=$O(^DGPM("AMV3",MA)) Q:MA>EDATE!(MA="")  W:'$D(NOASK) "." F DA=0:0 S DA=$O(^DGPM("AMV3",MA,DA)) Q:DA=""  F MB=0:0 S MB=$O(^DGPM("AMV3",MA,DA,MB)) Q:MB=""  D SET
"RTN","DVBAB53",142,0)
 I '$D(^TMP($J)) D  H 2 G KILL
"RTN","DVBAB53",143,0)
 .N DVBAERTXT S DVBAERTXT="No data found for parameters entered."
"RTN","DVBAB53",144,0)
 .U IO W !!,*7,DVBAERTXT,!!
"RTN","DVBAB53",145,0)
 .S:($G(DVBADLMTR)'="") ^TMP("DVBAR",$J,DVBABCNT)=DVBAERTXT
"RTN","DVBAB53",146,0)
 D PRINT K:(DVBAFNLDTE=$P(EDATE,".")) ^XTMP("DVBA_DISCHARGE_RPT"_$J,0)
"RTN","DVBAB53",147,0)
 I $D(DVBAQUIT) K DVBAON2,DISTYPE G KILL^DVBAUTIL
"RTN","DVBAB53",148,0)
 ;
"RTN","DVBAB53",149,0)
KILL K:(DVBAFNLDTE=$P(EDATE,".")) ^XTMP("DVBA_DISCHARGE_RPT"_$J,0)
"RTN","DVBAB53",150,0)
 S ZMSG=$NA(^TMP("DVBAR",$J))
"RTN","DVBAB53",151,0)
 D ^%ZISC D:$D(ZTQUEUED) KILL^%ZTLOAD S X=4 K DVBAON2,DISTYPE G FINAL^DVBAUTIL
"RTN","DVBAB53",152,0)
 ;
"RTN","DVBAB53",153,0)
DEQUE K ^TMP($J) G GO
"RTN","DVBAB53",154,0)
 ;
"RTN","DVBAB53",155,0)
COLHDR ;Column header for delimited report
"RTN","DVBAB53",156,0)
 N DVBADLMTR
"RTN","DVBAB53",157,0)
 S DVBADLMTR=","
"RTN","DVBAB53",158,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="Patient Name"_DVBADLMTR_"Claim No"_DVBADLMTR_"Claim Folder Loc"_DVBADLMTR
"RTN","DVBAB53",159,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=(^TMP("DVBAR",$J,DVBABCNT))_"Social Sec No"_DVBADLMTR_"Discharge Date"_DVBADLMTR
"RTN","DVBAB53",160,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=(^TMP("DVBAR",$J,DVBABCNT))_"Type of Discharge"_DVBADLMTR_"Length of Stay"_DVBADLMTR
"RTN","DVBAB53",161,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=(^TMP("DVBAR",$J,DVBABCNT))_"Bed Service"_DVBADLMTR_"Recv A&A?"_DVBADLMTR
"RTN","DVBAB53",162,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=(^TMP("DVBAR",$J,DVBABCNT))_"Pension?"_DVBADLMTR_"Eligibility Data"
"RTN","DVBAB53",163,0)
 S DVBABCNT=DVBABCNT+1
"RTN","DVBAB53",164,0)
 ;set global entry so header is only created once for job ($J)
"RTN","DVBAB53",165,0)
 S ^XTMP("DVBA_DISCHARGE_RPT"_$J,0)=DT_U_DT_U_BDATE_U_EDATE
"RTN","DVBAB53",166,0)
 Q
"RTN","DVBAB54")
0^6^B41132704^B35153355
"RTN","DVBAB54",1,0)
DVBAB54 ;ALB/VM - CAPRI ADMISSION REPORT ; 3/5/12 11:31am
"RTN","DVBAB54",2,0)
 ;;2.7;AMIE;**35,149,179,185**;Apr 10, 1995;Build 18
"RTN","DVBAB54",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBAB54",4,0)
 ;
"RTN","DVBAB54",5,0)
 ;Input: ZMSG  - Output Array for SC Veteran Admission report (By Ref)
"RTN","DVBAB54",6,0)
 ;       BDATE     - Beginning date for eport (FM Format)
"RTN","DVBAB54",7,0)
 ;       EDATE     - Ending date for report (FM Format)
"RTN","DVBAB54",8,0)
 ;       DVBADLMTR - Indicates if report should be delimited (Optional)
"RTN","DVBAB54",9,0)
 ;                    CAPRI currently executes RPC by each day in 
"RTN","DVBAB54",10,0)
 ;                    date range, so DVBADLMTR should equal the
"RTN","DVBAB54",11,0)
 ;                    final EDATE in range so that XTMP global
"RTN","DVBAB54",12,0)
 ;                    can be killed.
"RTN","DVBAB54",13,0)
 ;Output: ^TMP("DVBAR",$J) contains delimited/non-delimited SC Veteran Admission report 
"RTN","DVBAB54",14,0)
STRT(ZMSG,BDATE,EDATE,DVBADLMTR)  ;ENTER HERE
"RTN","DVBAB54",15,0)
 N DVBAFNLDTE,MA1,DVBATMP
"RTN","DVBAB54",16,0)
 S DVBABCNT=0,RO="N",RONUM=0
"RTN","DVBAB54",17,0)
 S DVBAFNLDTE=$S(+$G(DVBADLMTR):+$P(DVBADLMTR,"."),1:0)
"RTN","DVBAB54",18,0)
 S DVBADLMTR=$S('+$G(DVBADLMTR):"",1:"^")
"RTN","DVBAB54",19,0)
 K ^TMP($J) G TERM
"RTN","DVBAB54",20,0)
SET Q:'$D(^DPT(DA,0))  S DFN=DA,DVBASC="" D SC^DVBAVDPT Q:DVBASC'="Y"  Q:CFLOC'=RONUM&(RO="Y")&(CFLOC'=0)&(CFLOC'=376)  S MA1=$P(MA,".",1),^TMP($J,MA1,XCN,CFLOC,MB,DA)=MA
"RTN","DVBAB54",21,0)
 Q
"RTN","DVBAB54",22,0)
 ;
"RTN","DVBAB54",23,0)
PRINTB S ADMDT=$P(DATA,U),DFN=DA D ADM^DVBAVDPT
"RTN","DVBAB54",24,0)
 ;W:(IOST?1"C-".E)!($D(DVBAON2)) @IOF
"RTN","DVBAB54",25,0)
 ;W !!!,?(80-$L(HEAD)\2),HEAD,!,?(80-$L(HEAD1)\2),HEAD1,!!
"RTN","DVBAB54",26,0)
 S:ADMDT]"" ADMDT=$E(ADMDT,4,5)_"/"_$E(ADMDT,6,7)_"/"_$E(ADMDT,2,3) S:DCHGDT]"" DCHGDT=$E(DCHGDT,4,5)_"/"_$E(DCHGDT,6,7)_"/"_$E(DCHGDT,2,3)
"RTN","DVBAB54",27,0)
 ;create delimited/non-delimited report
"RTN","DVBAB54",28,0)
 D:($G(DVBADLMTR)'="") PRINTD
"RTN","DVBAB54",29,0)
 D:($G(DVBADLMTR)="") PRINTND
"RTN","DVBAB54",30,0)
 S DVBAON2=""
"RTN","DVBAB54",31,0)
 Q
"RTN","DVBAB54",32,0)
 ;
"RTN","DVBAB54",33,0)
PRINTND ;create non-delimited admission report
"RTN","DVBAB54",34,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="",DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",35,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="",DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",36,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="          Patient Name:   "_PNAM,DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",37,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="              Claim No:   "_CNUM,DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",38,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="      Claim Folder Loc:   "_CFLOC,DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",39,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="         Social Sec No:   "_SSN,DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",40,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="        Admission Date:   "_ADMDT,DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",41,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="   Admitting Diagnosis:   "_DIAG,DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",42,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="        Discharge Date:   "_DCHGDT,DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",43,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="           Bed Service:   "_BEDSEC,DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",44,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="             Recv A&A?:   "_$S(RCVAA=0:"NO",RCVAA=1:"YES",1:"Not specified"),DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",45,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="              Pension?:   "_$S(RCVPEN=0:"NO",RCVPEN=1:"YES",1:"Not specified"),DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",46,0)
 ;D ELIG^DVBAVDPT
"RTN","DVBAB54",47,0)
ELIG S ELIG=DVBAELIG,INCMP=""
"RTN","DVBAB54",48,0)
 I ELIG]"" S ELIG=ELIG_" ("_$S(DVBAELST="P":"Pend Ver",DVBAELST="R":"Pend Re-verif",DVBAELST="V":"Verified",1:"Not Verified")_")"
"RTN","DVBAB54",49,0)
 I $D(^DPT(DA,.29)) S INCMP=$S($P(^(.29),U,12)=1:"Incompetent",1:"")
"RTN","DVBAB54",50,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="      Eligibility data:   "_ELIG_$S(((ELIG]"")&(INCMP]"")):", ",1:""),DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",51,0)
 I $X>60 S ^TMP("DVBAR",$J,DVBABCNT)=INCMP,DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",52,0)
 ;Q
"RTN","DVBAB54",53,0)
 ;***VM-OUT*I IOST?1"C-".E W *7,!,"Press RETURN to continue or ""^"" to stop    " R ANS:DTIME S:ANS=U!('$T) QUIT=1 I '$T S DVBAQUIT=1
"RTN","DVBAB54",54,0)
 Q
"RTN","DVBAB54",55,0)
 ;
"RTN","DVBAB54",56,0)
PRINTD ;create delimited admission report
"RTN","DVBAB54",57,0)
 N ELIG,INCMP,X,X1,X2,X3
"RTN","DVBAB54",58,0)
 D:('$D(^XTMP("DVBA_SCADMSSN_RPT"_$J,0))) COLHDR
"RTN","DVBAB54",59,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=PNAM_DVBADLMTR_CNUM_DVBADLMTR_CFLOC_DVBADLMTR_SSN_DVBADLMTR_ADMDT_DVBADLMTR
"RTN","DVBAB54",60,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=^TMP("DVBAR",$J,DVBABCNT)_DIAG_DVBADLMTR_DCHGDT_DVBADLMTR_BEDSEC_DVBADLMTR
"RTN","DVBAB54",61,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=^TMP("DVBAR",$J,DVBABCNT)_$S(RCVAA=0:"NO",RCVAA=1:"YES",1:"Not specified")_DVBADLMTR
"RTN","DVBAB54",62,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=^TMP("DVBAR",$J,DVBABCNT)_$S(RCVPEN=0:"NO",RCVPEN=1:"YES",1:"Not specified")_DVBADLMTR
"RTN","DVBAB54",63,0)
 S ELIG=DVBAELIG,INCMP=""
"RTN","DVBAB54",64,0)
 I ELIG]"" S ELIG=ELIG_" ("_$S(DVBAELST="P":"Pend Ver",DVBAELST="R":"Pend Re-verif",DVBAELST="V":"Verified",1:"Not Verified")_")"
"RTN","DVBAB54",65,0)
 I $D(^DPT(DA,.29)) S INCMP=$S($P(^(.29),U,12)=1:"Incompetent",1:"")
"RTN","DVBAB54",66,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=^TMP("DVBAR",$J,DVBABCNT)_ELIG_$S(((ELIG]"")&(INCMP]"")):", ",1:"")_INCMP
"RTN","DVBAB54",67,0)
 ;
"RTN","DVBAB54",68,0)
 S DVBATMP=^TMP("DVBAR",$J,DVBABCNT)
"RTN","DVBAB54",69,0)
 S X=$P(DVBATMP,DVBADLMTR,4)
"RTN","DVBAB54",70,0)
 I $L(X)'>9 S X=""""_$E("000000000",1,9-$L(X))_X_"""",X1=$E(X,1,4),X2=$E(X,5,6),X3=$E(X,7,11),X=X1_"-"_X2_"-"_X3
"RTN","DVBAB54",71,0)
 I $E(X,10,10)'?.N S X=""""_$E("0000000000",1,10-$L(X))_X_"""",X1=$E(X,1,4),X2=$E(X,5,6),X3=$E(X,7,12),X=X1_"-"_X2_"-"_X3
"RTN","DVBAB54",72,0)
 S $P(DVBATMP,DVBADLMTR,4)=X
"RTN","DVBAB54",73,0)
 S X=$P(DVBATMP,DVBADLMTR,2)
"RTN","DVBAB54",74,0)
 S X=$C(160)_X
"RTN","DVBAB54",75,0)
 S $P(DVBATMP,DVBADLMTR,2)=X
"RTN","DVBAB54",76,0)
 F I=1:1:$L(DVBATMP,DVBADLMTR) I $P(DVBATMP,DVBADLMTR,I)["," S $P(DVBATMP,DVBADLMTR,I)=""""_$P(DVBATMP,DVBADLMTR,I)_""""
"RTN","DVBAB54",77,0)
 S DVBATMP=$TR(DVBATMP,DVBADLMTR,",")
"RTN","DVBAB54",78,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=DVBATMP
"RTN","DVBAB54",79,0)
 ;
"RTN","DVBAB54",80,0)
 S DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",81,0)
 Q
"RTN","DVBAB54",82,0)
 ;
"RTN","DVBAB54",83,0)
PRINT K MA S QUIT=""
"RTN","DVBAB54",84,0)
 S MA="" F G=0:0 S MA=$O(^TMP($J,MA)) Q:MA=""!(QUIT=1)  S XCN="" F M=0:0 S XCN=$O(^TMP($J,MA,XCN)) Q:XCN=""!(QUIT=1)  S CFLOC="" F J=0:0 S CFLOC=$O(^TMP($J,MA,XCN,CFLOC)) Q:CFLOC=""!(QUIT=1)  D PRINT1
"RTN","DVBAB54",85,0)
 Q
"RTN","DVBAB54",86,0)
PRINT1 S ADM="" F K=0:0 S ADM=$O(^TMP($J,MA,XCN,CFLOC,ADM)) Q:ADM=""!(QUIT=1)  S DA="" F L=0:0 S DA=$O(^TMP($J,MA,XCN,CFLOC,ADM,DA)) Q:DA=""!(QUIT=1)  S DATA=^(DA) D PRINTB
"RTN","DVBAB54",87,0)
 Q
"RTN","DVBAB54",88,0)
 ;
"RTN","DVBAB54",89,0)
TERM ;D HOME^%ZIS K NOASK
"RTN","DVBAB54",90,0)
 ;
"RTN","DVBAB54",91,0)
 ;W @IOF,!,"VARO SERVICE-CONNECTED ADMISSION REPORT" D NOPARM^DVBAUTL2 G:$D(DVBAQUIT) KILL^DVBAUTIL
"RTN","DVBAB54",92,0)
 S DTAR=^DVB(396.1,1,0),FDT(0)=$E(DT,4,5)_"-"_$E(DT,6,7)_"-"_$E(DT,2,3)
"RTN","DVBAB54",93,0)
 S HEAD="SERVICE-CONNECTED ADMISSION REPORT",HEAD1="FOR "_$P(DTAR,U,1)_" ON "_FDT(0)
"RTN","DVBAB54",94,0)
 ;W !,HEAD1
"RTN","DVBAB54",95,0)
 ;W !!,"Please enter dates for search, oldest date first, most recent date last.",!!,"Last report was run on " S Y=$P(DTAR,U,8) X ^DD("DD") W Y,!!
"RTN","DVBAB54",96,0)
 ;D DATE^DVBAUTIL
"RTN","DVBAB54",97,0)
 ;G:X=""!(Y<0) KILL
"RTN","DVBAB54",98,0)
 ;S %ZIS="Q" D ^%ZIS K %ZIS G:POP KILL^DVBAUTIL
"RTN","DVBAB54",99,0)
 ;
"RTN","DVBAB54",100,0)
 ;I $D(IO("Q")) S ZTRTN="DEQUE^DVBASCRP",ZTIO=ION,NOASK=1,ZTDESC="AMIE SC ADMISSION REPORT" F I="FDT(0)","HEAD","HEAD1","BDATE","EDATE","TYPE","RO","RONUM","NOASK" S ZTSAVE(I)=""
"RTN","DVBAB54",101,0)
 ;I $D(IO("Q")) D ^%ZTLOAD W:$D(ZTSK) !!,"Request queued.",!! G KILL
"RTN","DVBAB54",102,0)
 ;
"RTN","DVBAB54",103,0)
GO S MA=BDATE F J=0:0 S MA=$O(^DGPM("AMV1",MA)) Q:$P(MA,".")>EDATE!(MA="")  F DA=0:0 S DA=$O(^DGPM("AMV1",MA,DA)) Q:DA=""  F MB=0:0 S MB=$O(^DGPM("AMV1",MA,DA,MB)) Q:MB=""  D SET W:'$D(NOASK) "."
"RTN","DVBAB54",104,0)
 I '$D(^TMP($J)) S ^TMP("DVBAR",$J,DVBABCNT)="No data found for parameters entered." H 2 G KILL
"RTN","DVBAB54",105,0)
 D PRINT K:(DVBAFNLDTE=$P(EDATE,".")) ^XTMP("DVBA_SCADMSSN_RPT"_$J,0)
"RTN","DVBAB54",106,0)
 I $D(DVBAQUIT) K DVBAON2 D:$D(ZTQUEUED) KILL^%ZTLOAD G KILL^DVBAUTIL
"RTN","DVBAB54",107,0)
 ;
"RTN","DVBAB54",108,0)
KILL K:(DVBAFNLDTE=$P(EDATE,".")) ^XTMP("DVBA_SCADMSSN_RPT"_$J,0)
"RTN","DVBAB54",109,0)
 S ZMSG=$NA(^TMP("DVBAR",$J))
"RTN","DVBAB54",110,0)
 D:$D(ZTQUEUED) KILL^%ZTLOAD D ^%ZISC S X=8 K DVBAON2 G FINAL^DVBAUTIL
"RTN","DVBAB54",111,0)
 ;
"RTN","DVBAB54",112,0)
DEQUE K ^TMP($J) G GO
"RTN","DVBAB54",113,0)
 ;
"RTN","DVBAB54",114,0)
COLHDR ;Column header for delimited report
"RTN","DVBAB54",115,0)
 N DVBADLMTR
"RTN","DVBAB54",116,0)
 S DVBADLMTR=","
"RTN","DVBAB54",117,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="Patient Name"_DVBADLMTR_"Claim No"_DVBADLMTR_"Claim Folder Loc"_DVBADLMTR
"RTN","DVBAB54",118,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=(^TMP("DVBAR",$J,DVBABCNT))_"Social Sec No"_DVBADLMTR_"Admission Date"_DVBADLMTR
"RTN","DVBAB54",119,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=(^TMP("DVBAR",$J,DVBABCNT))_"Admitting Diagnosis"_DVBADLMTR_"Discharge Date"_DVBADLMTR
"RTN","DVBAB54",120,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=(^TMP("DVBAR",$J,DVBABCNT))_"Bed Service"_DVBADLMTR_"Recv A&A?"_DVBADLMTR
"RTN","DVBAB54",121,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=(^TMP("DVBAR",$J,DVBABCNT))_"Pension?"_DVBADLMTR_"Eligibility Data"
"RTN","DVBAB54",122,0)
 S DVBABCNT=DVBABCNT+1
"RTN","DVBAB54",123,0)
 ;set global entry so header is only created once for job ($J)
"RTN","DVBAB54",124,0)
 S ^XTMP("DVBA_SCADMSSN_RPT"_$J,0)=DT_U_DT
"RTN","DVBAB54",125,0)
 Q
"RTN","DVBAB57")
0^12^B21548457^B14003695
"RTN","DVBAB57",1,0)
DVBAB57 ;ALB/KLB - AMIE GUI PENDING 7131 REPORT ;09/7/00
"RTN","DVBAB57",2,0)
 ;;2.7;AMIE;**35,42,185**;Apr 10, 1995;Build 18
"RTN","DVBAB57",3,0)
 ;
"RTN","DVBAB57",4,0)
STRT(MSG,SELDIV,DIV,DVBADLMTR) ;
"RTN","DVBAB57",5,0)
 S DVBADLMTR=$S(DVBADLMTR=1:",",1:0)
"RTN","DVBAB57",6,0)
 S RO="N"
"RTN","DVBAB57",7,0)
 S RONUM=0
"RTN","DVBAB57",8,0)
 S DIVNUM="",MSGCNT=1
"RTN","DVBAB57",9,0)
 K ^TMP($J),^TMP("CAPRI")
"RTN","DVBAB57",10,0)
 I RO="Y",RONUM="" S MSG(1)="To sort by RO Number, please enter the RO Number."
"RTN","DVBAB57",11,0)
 I RO="Y",RONUM="" Q
"RTN","DVBAB57",12,0)
 I SELDIV="Y",DIV="" S MSG(1)="To sort by Division, please enter the Division."
"RTN","DVBAB57",13,0)
 I SELDIV="Y",DIV="" Q
"RTN","DVBAB57",14,0)
 I DIV'="" S DIVNUM=$O(^DG(40.8,"C",DIV,DIVNUM)),DIVNAM=$S($D(^DG(40.8,+DIVNUM,0)):$P(^(0),"^",1),1:"Unknown Division")
"RTN","DVBAB57",15,0)
SETUP D STM^DVBCUTL4
"RTN","DVBAB57",16,0)
 S FDT(0)=$$FMTE^XLFDT(DT,"5DZ"),(PG,DVBAQUIT)=0
"RTN","DVBAB57",17,0)
 S HEAD="PENDING REQUEST REPORT FOR "_$P(^DVB(396.1,1,0),U,1)
"RTN","DVBAB57",18,0)
 S HEAD2=$S(RO="Y":"FOR REGIONAL OFFICE "_RONUM,1:"ALL REGIONAL OFFICES")
"RTN","DVBAB57",19,0)
 S HEAD2=HEAD2_$S(SELDIV="Y":", FOR DIVISION "_DIVNAM,1:", ALL DIVISIONS")
"RTN","DVBAB57",20,0)
 S PROCDT="Processed on: "_FDT(0)
"RTN","DVBAB57",21,0)
 S QQ=1,NODTA=0
"RTN","DVBAB57",22,0)
 I $G(DVBADLMTR)="," D  G DATA
"RTN","DVBAB57",23,0)
 . S ^TMP("CAPRI",$J,MSGCNT)=HEAD_$C(13),MSGCNT=MSGCNT+1,^TMP("CAPRI",$J,MSGCNT)=""""_HEAD2_""""_$C(13),MSGCNT=MSGCNT+1,^TMP("CAPRI",$J,MSGCNT)=PROCDT_$C(13)_$C(13),MSGCNT=MSGCNT+1
"RTN","DVBAB57",24,0)
 . S ^TMP("CAPRI",$J,MSGCNT)=$S(SELDIV="Y":"Division",SELDIV="N":"Original Division",1:"")_DVBADLMTR_"Patient Name"_DVBADLMTR_"SSN"_DVBADLMTR_"Claim no."_DVBADLMTR_"Activity/Admission Date"_DVBADLMTR_"Request Date"_DVBADLMTR
"RTN","DVBAB57",25,0)
 . S ^TMP("CAPRI",$J,MSGCNT)=^TMP("CAPRI",$J,MSGCNT)_"** Discharged"_DVBADLMTR_"Elapsed Days"_DVBADLMTR_"Items Pending"_DVBADLMTR_"Requested by Name"_DVBADLMTR_"Requested by Division"_$C(13),MSGCNT=MSGCNT+1
"RTN","DVBAB57",26,0)
 I $G(DVBADLMTR)=0 D
"RTN","DVBAB57",27,0)
 . S ^TMP("CAPRI",MSGCNT)="Pending 7131 Report"_"^",MSGCNT=MSGCNT+1
"RTN","DVBAB57",28,0)
 . S ^TMP("CAPRI",MSGCNT)=""_"^",MSGCNT=MSGCNT+1
"RTN","DVBAB57",29,0)
 . S ^TMP("CAPRI",MSGCNT)=HEAD_"^",MSGCNT=MSGCNT+1
"RTN","DVBAB57",30,0)
 . S ^TMP("CAPRI",MSGCNT)=HEAD2_"^",MSGCNT=MSGCNT+1
"RTN","DVBAB57",31,0)
 . S ^TMP("CAPRI",MSGCNT)=PROCDT_"^",MSGCNT=MSGCNT+1
"RTN","DVBAB57",32,0)
 . S ^TMP("CAPRI",MSGCNT)=""_"^",MSGCNT=MSGCNT+1
"RTN","DVBAB57",33,0)
DATA N REQDTE S REQDTE="",CNT=0
"RTN","DVBAB57",34,0)
 S:SELDIV="Y" ADIV=DIVNAM
"RTN","DVBAB57",35,0)
 F J=0:0 S REQDTE=$O(^DVB(396,"E",REQDTE)) Q:REQDTE=""  F DA=0:0 S DA=$O(^DVB(396,"E",REQDTE,DA)) Q:DA=""  I $D(^DVB(396,DA,1)),($P(^DVB(396,DA,1),U,12)="")  D:SELDIV="N" ADIV  D MAKUTL
"RTN","DVBAB57",36,0)
 S (ADIV,REQDTE)=""
"RTN","DVBAB57",37,0)
 F L=0:0 S REQDTE=$O(^TMP($J,REQDTE)) Q:REQDTE=""  D LVL2LP
"RTN","DVBAB57",38,0)
 ;
"RTN","DVBAB57",39,0)
EXIT I NODTA=0 S MSG(1)="No pending requests found for parameters entered."
"RTN","DVBAB57",40,0)
 I NODTA>0,$G(DVBADLMTR)=0 S MSG=$NA(^TMP("CAPRI"))
"RTN","DVBAB57",41,0)
 I NODTA>0,$G(DVBADLMTR)="," S MSG=$NA(^TMP("CAPRI",$J))
"RTN","DVBAB57",42,0)
 ;
"RTN","DVBAB57",43,0)
KILL S XRTN=$T(+0)
"RTN","DVBAB57",44,0)
 D SPM^DVBCUTL4
"RTN","DVBAB57",45,0)
 K ^TMP("DVBA","ADMIT",$J),^TMP($J),DVBAQUIT,SELDIV,DIVNUM,REQDTE,PROCDT,QQ,RO,RONUM,XRTN,CNT,MSGCNT,NODTA
"RTN","DVBAB57",46,0)
 K LPCNT1,PATDA,DIVNAM,XJ,XI,GDIVPTR,GDIVNUM,GINSTPT,GDIVNAM,GDIV,ADIV,CFLOC,DA,DIV,FDT,HEAD,HEAD2,J,L,PG,DVBADLMTR
"RTN","DVBAB57",47,0)
 Q
"RTN","DVBAB57",48,0)
 ;
"RTN","DVBAB57",49,0)
LVL2LP  ;  ** 2nd level of the 2nd loop in the DATA tag - search ADIV **
"RTN","DVBAB57",50,0)
 F J=0:0 S ADIV=$O(^TMP($J,REQDTE,ADIV)) Q:ADIV=""  D LPLVL3
"RTN","DVBAB57",51,0)
 Q
"RTN","DVBAB57",52,0)
 ;
"RTN","DVBAB57",53,0)
LPLVL3 ;  **  2nd level of the loop in the LVL2LP tag - search DA **
"RTN","DVBAB57",54,0)
 F DA=0:0 S DA=$O(^TMP($J,REQDTE,ADIV,DA)) Q:DA=""  D PRINT^DVBAB67 S:DVBAQUIT=1 ADIV="ZZZZ",DA=999999999,REQDTE=9999999 S QQ=1
"RTN","DVBAB57",55,0)
 Q
"RTN","DVBAB57",56,0)
 ;
"RTN","DVBAB57",57,0)
MAKUTL ;  **  Sort on Request Date to set up a temporary utility global  **
"RTN","DVBAB57",58,0)
 S PATDA=$P(^DVB(396,DA,0),"^",1)
"RTN","DVBAB57",59,0)
 ;S REQDTE=$P(^DVB(396,DA,1),"^",1),PATDA=$P(^DVB(396,DA,0),"^",1)
"RTN","DVBAB57",60,0)
 S CFLOC=$$STATION^DVBAUTL1(PATDA)
"RTN","DVBAB57",61,0)
 S:CFLOC=-1 CFLOC=0
"RTN","DVBAB57",62,0)
 I SELDIV="Y"&(RO="Y") I CFLOC=RONUM D CHKDIV D:$D(DVBAFND) SETARY
"RTN","DVBAB57",63,0)
 I SELDIV="Y"&(RO="N") D CHKDIV D:$D(DVBAFND) SETARY
"RTN","DVBAB57",64,0)
 I SELDIV="N"&(RO="Y") I CFLOC=RONUM D SETARY
"RTN","DVBAB57",65,0)
 I SELDIV="N"&(RO="N") D SETARY
"RTN","DVBAB57",66,0)
 K DVBAFND
"RTN","DVBAB57",67,0)
 QUIT
"RTN","DVBAB57",68,0)
 ;
"RTN","DVBAB57",69,0)
SETARY ;  ** Set temporary utility global **
"RTN","DVBAB57",70,0)
 S ^TMP($J,REQDTE,ADIV,DA)=""
"RTN","DVBAB57",71,0)
 QUIT
"RTN","DVBAB57",72,0)
 ;
"RTN","DVBAB57",73,0)
ADIV S ADIV=$S($D(^DVB(396,DA,2)):$P(^(2),U,9),1:"") S ADIV=$S($D(^DG(40.8,+ADIV,0)):$P(^(0),U,1),1:"Unknown Division")
"RTN","DVBAB57",74,0)
 Q
"RTN","DVBAB57",75,0)
 ;
"RTN","DVBAB57",76,0)
CHKDIV ;**Check for selected Div
"RTN","DVBAB57",77,0)
 N FLDVAR
"RTN","DVBAB57",78,0)
 I $D(^DVB(396,DA,6)) DO
"RTN","DVBAB57",79,0)
 .F FLDVAR=7,9,11,13,15,17,19,21,23,26,28 Q:$D(DVBAFND)  DO
"RTN","DVBAB57",80,0)
 ..I ($P(^DVB(396,DA,6),U,FLDVAR)=DIVNUM) DO
"RTN","DVBAB57",81,0)
 ...I FLDVAR=7 S:$P(^DVB(396,DA,1),U,FLDVAR)="P" DVBAFND=""
"RTN","DVBAB57",82,0)
 ...I FLDVAR'=7 S:$P(^DVB(396,DA,0),U,FLDVAR)="P" DVBAFND=""
"RTN","DVBAB57",83,0)
 I $D(^DVB(396,DA,2)),('$D(DVBAFND)) DO  ;**Check Routing Loc Division
"RTN","DVBAB57",84,0)
 .I $D(^DVB(396,DA,1)) DO
"RTN","DVBAB57",85,0)
 ..I $P(^DVB(396,DA,2),U,9)=DIVNUM,($P(^DVB(396,DA,1),U,12)="") DO
"RTN","DVBAB57",86,0)
 ...S DVBAFND=""
"RTN","DVBAB57",87,0)
 Q
"RTN","DVBAB6")
0^18^B53380970^B30141617
"RTN","DVBAB6",1,0)
DVBAB6 ;ALB/DJS - CAPRI PENDING 2507 REQUEST REPORT ; 02-27-2013
"RTN","DVBAB6",2,0)
 ;;2.7;AMIE;**35,90,108,168,185**;Apr 10, 1995;Build 18
"RTN","DVBAB6",3,0)
 ;
"RTN","DVBAB6",4,0)
STRT(MSG,DVBCSORT,RSTAT,ERDAYS,OLDAYS,ADIVNUM,ELTYP,DVBADLMTR,ROFILTER) ;
"RTN","DVBAB6",5,0)
 I ADIVNUM'="" S X=$O(^DG(40.8,"C",ADIVNUM,"")) S:X]"" ADIVNUM=X
"RTN","DVBAB6",6,0)
 S DVBADLMTR=$S(DVBADLMTR=1:",",1:0),ROFILTER=$S($G(ROFILTER)'=0:ROFILTER,1:0)
"RTN","DVBAB6",7,0)
SETUP K ^TMP($J),^TMP("CAPRI")
"RTN","DVBAB6",8,0)
 S DVBCDT(0)=$$FMTE^XLFDT(DT,"5DZ"),PG=1,DVBCCNT=0,DONE="NO",MSGCNT=1,TRNSFIN=""
"RTN","DVBAB6",9,0)
 S DVBCHDR="Sorted by "_$S(DVBCSORT="V":"VETERAN NAME",DVBCSORT="R":"Routing location",DVBCSORT="S":"Status",DVBCSORT="A":"Age of request",1:"Unknown")
"RTN","DVBAB6",10,0)
HEAD S HEAD="Pending 2507 Requests for "_$S($D(^DVB(396.1,1,0)):$P(^(0),U,1),1:"Unknown site"),PROCDT="Processed on: "_DVBCDT(0),NODATA=0
"RTN","DVBAB6",11,0)
 I $G(DVBADLMTR)'="," D HEADRND G DATA
"RTN","DVBAB6",12,0)
 I $G(DVBADLMTR)="," D HEADRD G DATA
"RTN","DVBAB6",13,0)
 Q
"RTN","DVBAB6",14,0)
HEADRND ; Print non-delimited output header
"RTN","DVBAB6",15,0)
 ;
"RTN","DVBAB6",16,0)
 S ^TMP("CAPRI",MSGCNT)=HEAD_"^",MSGCNT=MSGCNT+1
"RTN","DVBAB6",17,0)
 S ^TMP("CAPRI",MSGCNT)=PROCDT_"^",MSGCNT=MSGCNT+1
"RTN","DVBAB6",18,0)
 S ^TMP("CAPRI",MSGCNT)="^",MSGCNT=MSGCNT+1
"RTN","DVBAB6",19,0)
 S $P(^TMP("CAPRI",MSGCNT),"=",75)="=^",MSGCNT=MSGCNT+1
"RTN","DVBAB6",20,0)
 S ^TMP("CAPRI",MSGCNT)="^",MSGCNT=MSGCNT+1
"RTN","DVBAB6",21,0)
 S ^TMP("CAPRI",MSGCNT)="",MSGCNT=MSGCNT+1
"RTN","DVBAB6",22,0)
 Q
"RTN","DVBAB6",23,0)
HEADRD ; Print delimited output header
"RTN","DVBAB6",24,0)
 ;
"RTN","DVBAB6",25,0)
 S ^TMP("CAPRI",MSGCNT)=HEAD_$C(13),MSGCNT=MSGCNT+1,^TMP("CAPRI",MSGCNT)=PROCDT_$C(13),MSGCNT=MSGCNT+1
"RTN","DVBAB6",26,0)
 S ^TMP("CAPRI",MSGCNT)=$S($G(ROFILTER)'=0:"RO #"_DVBADLMTR,1:"")_"Division"_DVBADLMTR_"Status"_DVBADLMTR_"Veteran Name"_DVBADLMTR_"SSN"_DVBADLMTR_"Claim No."_DVBADLMTR_"Request Date"_DVBADLMTR
"RTN","DVBAB6",27,0)
 S ^TMP("CAPRI",MSGCNT)=^TMP("CAPRI",MSGCNT)_"Elapsed Days"_DVBADLMTR_"Transferred in from"_DVBADLMTR_"Requested by Name"_DVBADLMTR_"Requested by Division"_DVBADLMTR_"Exams Requested"_DVBADLMTR_"Exam Status"_$C(13)
"RTN","DVBAB6",28,0)
 S MSGCNT=MSGCNT+1
"RTN","DVBAB6",29,0)
 Q
"RTN","DVBAB6",30,0)
 ;
"RTN","DVBAB6",31,0)
DATA ; Sort data records
"RTN","DVBAB6",32,0)
 ;
"RTN","DVBAB6",33,0)
 S DFN="" F  S DFN=$O(^DVB(396.3,"B",DFN)) Q:DFN=""  F REQDA=0:0 S REQDA=$O(^DVB(396.3,"B",DFN,REQDA)) Q:REQDA=""  D SORT^DVBAB5
"RTN","DVBAB6",34,0)
 N EXAMRECRD
"RTN","DVBAB6",35,0)
 I DVBCSORT="V" S PNAM="" F  S PNAM=$O(^TMP($J,PNAM)) Q:PNAM=""  F DFN=0:0 S DFN=$O(^TMP($J,PNAM,DFN)) Q:'DFN  F DA(1)=0:0 S DA(1)=$O(^TMP($J,PNAM,DFN,DA(1))) Q:'DA(1)  D PRINT I $D(OUT) S DA(1)=999999999,PNAM="ZZZ",DONE="YES" Q
"RTN","DVBAB6",36,0)
 I DVBCSORT="R"!(DVBCSORT="A")!(DVBCSORT="S") D
"RTN","DVBAB6",37,0)
 . S JX="" F  S JX=$O(^TMP($J,JX)) Q:JX=""  D
"RTN","DVBAB6",38,0)
 .. S PNAM="" F  S PNAM=$O(^TMP($J,JX,PNAM)) Q:PNAM=""  D
"RTN","DVBAB6",39,0)
 ... F DFN=0:0 S DFN=$O(^TMP($J,JX,PNAM,DFN)) Q:'DFN  D NXT
"RTN","DVBAB6",40,0)
 I DVBCCNT>0 S ^TMP("CAPRI",MSGCNT)="Total pending: "_DVBCCNT,DONE="YES"
"RTN","DVBAB6",41,0)
 ;
"RTN","DVBAB6",42,0)
EXIT I NODATA=0 S ^TMP("CAPRI",MSGCNT)="No pending request found for select parameters.",MSG=$NA(^TMP("CAPRI"))
"RTN","DVBAB6",43,0)
 I DONE="YES" S MSG=$NA(^TMP("CAPRI"))
"RTN","DVBAB6",44,0)
 K ^TMP($J),ADIV,CNUM,NODATA,STATUS,TST,TSTA1,STSAT,PG,PRTNM,RDATE,RDATE1,REQDA,SSN,RONAME,JX,TRNSFIN,PROCDT,REQSTR,MSGCNT,TSTAT
"RTN","DVBAB6",45,0)
 K DA,DFN,DONE,DVBCCNT,DVBCDT,DVBCHDR,X,XX,ZS,ZZZ,HEAD,HEAD2,OUT,OWNDOM,EDAYS,PNAM,DVBADLMTR,EXAMRECRD,ROFILTER,RONUM,VADM(1),VADM(2)
"RTN","DVBAB6",46,0)
 Q
"RTN","DVBAB6",47,0)
 ;
"RTN","DVBAB6",48,0)
PRINT ; print 2507 request data
"RTN","DVBAB6",49,0)
 ;
"RTN","DVBAB6",50,0)
 S ADIV=$S($D(^DVB(396.3,DA(1),1)):$P(^(1),U,4),1:"") Q:ADIV'=ADIVNUM&(DVBCSORT="R")  I ADIV]"" S ADIV=$S($D(^DG(40.8,+ADIV,0)):$P(^(0),U,1),1:"Unknown Division")
"RTN","DVBAB6",51,0)
 S RDATE1=$P(^DVB(396.3,DA(1),0),U,2),RDATE=$P(^(0),U,5)
"RTN","DVBAB6",52,0)
 S SSN=$P($G(^DPT(DFN,0)),U,9) S:SSN="" SSN="Unknown"
"RTN","DVBAB6",53,0)
 S CNUM=$P($G(^DPT(DFN,.31)),U,3) S:CNUM="" CNUM="Unknown"
"RTN","DVBAB6",54,0)
 S OWNDOM=$P(^DVB(396.3,DA(1),0),U,22) I OWNDOM]"" S TRNSFIN=$S($D(^DIC(4.2,+OWNDOM,0)):$P(^(0),U,1),1:"Unknown Site") I $G(DVBADLMTR)=0 S ^TMP("CAPRI",MSGCNT)="Transferred in from "_TRNSFIN_"^",MSGCNT=MSGCNT+1
"RTN","DVBAB6",55,0)
 D ELAPSED^DVBAB5
"RTN","DVBAB6",56,0)
 S STATUS="Unknown",XX=$P(^DVB(396.3,DA(1),0),U,18),STATUS=$S(XX="N":"New",XX="P":"Pending, reported",XX="S":"Pending, scheduled",XX="R":"Released to RO, not printed",1:"")
"RTN","DVBAB6",57,0)
 I STATUS="",$D(XX) S STATUS=$S(XX="C":"Completed, printed by RO",XX="X":"Cancelled by RO",XX="T":"Transcribed",XX="NT":"New,Transferred in",XX="CT":"Completed, Transferred out",1:"Unknown")
"RTN","DVBAB6",58,0)
 I $G(DVBADLMTR)="," D PRINTD,ITEMS Q
"RTN","DVBAB6",59,0)
 S ^TMP("CAPRI",MSGCNT)="Division: "_ADIV_"^",MSGCNT=MSGCNT+1
"RTN","DVBAB6",60,0)
 S ^TMP("CAPRI",MSGCNT)="Status: "_STATUS_"^",MSGCNT=MSGCNT+1
"RTN","DVBAB6",61,0)
 S ^TMP("CAPRI",MSGCNT)=PNAM_" ^",MSGCNT=MSGCNT+1,^TMP("CAPRI",MSGCNT)="SSN: "_SSN_"^",MSGCNT=MSGCNT+1,^TMP("CAPRI",MSGCNT)="Claim no: "_CNUM_"^",MSGCNT=MSGCNT+1
"RTN","DVBAB6",62,0)
 S ^TMP("CAPRI",MSGCNT)="Request Date: "_$$FMTE^XLFDT(RDATE1,"5DZ")_"^",MSGCNT=MSGCNT+1
"RTN","DVBAB6",63,0)
 S ^TMP("CAPRI",MSGCNT)="Elapsed days: "_EDAYS_"^",MSGCNT=MSGCNT+1
"RTN","DVBAB6",64,0)
 S X=$S($D(^DVB(396.3,DA(1),4)):^(4),1:"")
"RTN","DVBAB6",65,0)
 S ^TMP("CAPRI",MSGCNT)="^",MSGCNT=MSGCNT+1
"RTN","DVBAB6",66,0)
 S ^TMP("CAPRI",MSGCNT)="Exams requested:"_"^",MSGCNT=MSGCNT+1
"RTN","DVBAB6",67,0)
 ;
"RTN","DVBAB6",68,0)
ITEMS S NODATA=1,REQSTR=+$P(^DVB(396.3,DA(1),0),U,4)
"RTN","DVBAB6",69,0)
 S ZZZ="Requested by: "_$S($D(^VA(200,+REQSTR,0)):$P(^(0),U,1),1:" (Not specified) ")_" at "
"RTN","DVBAB6",70,0)
 S RONAME=$P(^DVB(396.3,DA(1),0),U,3),RONAME=$S(RONAME]"":$P(^DIC(4,+RONAME,0),U,1),1:"")
"RTN","DVBAB6",71,0)
 I $G(DVBADLMTR)'="," D ITEMSND Q
"RTN","DVBAB6",72,0)
 I $G(DVBADLMTR)="," D ITEMSD Q
"RTN","DVBAB6",73,0)
ITEMSND D TST S ^TMP("CAPRI",MSGCNT)="^"_ZZZ_$S(RONAME]"":RONAME,1:" (Not specified) ")_"^",MSGCNT=MSGCNT+1
"RTN","DVBAB6",74,0)
 S ^TMP("CAPRI",MSGCNT)="^",MSGCNT=MSGCNT+1
"RTN","DVBAB6",75,0)
 S $P(^TMP("CAPRI",MSGCNT),"-",75)="-^",MSGCNT=MSGCNT+1
"RTN","DVBAB6",76,0)
 S DVBCCNT=DVBCCNT+1
"RTN","DVBAB6",77,0)
 Q
"RTN","DVBAB6",78,0)
ITEMSD S ZZZ=$S($D(^VA(200,+REQSTR,0)):$P(^(0),U,1),1:" (Not specified) ")
"RTN","DVBAB6",79,0)
 S EXAMRECRD=EXAMRECRD_""""_ZZZ_""""_DVBADLMTR_""""_RONAME_""""_DVBADLMTR
"RTN","DVBAB6",80,0)
 D TST S DVBCCNT=DVBCCNT+1
"RTN","DVBAB6",81,0)
 Q
"RTN","DVBAB6",82,0)
 ;
"RTN","DVBAB6",83,0)
PRINTD ; Print delimited format output on report
"RTN","DVBAB6",84,0)
 ;
"RTN","DVBAB6",85,0)
 I OWNDOM']"" S TRNSFIN=""
"RTN","DVBAB6",86,0)
 S RONUM=$P(^DVB(396.3,DA(1),0),U,3)
"RTN","DVBAB6",87,0)
 D DEM^VADPT I $G(VADM(1))'="" S SSN=$S(DVBADLMTR=",":$P($G(VADM(2)),U,2),1:$P($G(VADM(2)),U,1))
"RTN","DVBAB6",88,0)
 S EXAMRECRD=$S($G(ROFILTER)'=0:RONUM_DVBADLMTR,1:"")_""""_ADIV_""""_DVBADLMTR_""""_STATUS_""""_DVBADLMTR_""""_PNAM_""""_DVBADLMTR
"RTN","DVBAB6",89,0)
 S EXAMRECRD=EXAMRECRD_SSN_DVBADLMTR_$C(160)_CNUM_DVBADLMTR_$$FMTE^XLFDT(RDATE1,"5DZ")_DVBADLMTR_EDAYS_DVBADLMTR_TRNSFIN_DVBADLMTR
"RTN","DVBAB6",90,0)
 Q
"RTN","DVBAB6",91,0)
 ;
"RTN","DVBAB6",92,0)
NXT F DA(1)=0:0 S DA(1)=$O(^TMP($J,JX,PNAM,DFN,DA(1))) Q:DA(1)=""  D PRINT I $D(OUT) S DA(1)="",PNAM="ZZZZ",JX=$S($A(JX)>57:PNAM,1:9999999),DONE="YES"
"RTN","DVBAB6",93,0)
 Q
"RTN","DVBAB6",94,0)
TST F DA=0:0 S DA=$O(^DVB(396.4,"C",DA(1),DA)) Q:DA=""  K PRINT S TSTAT=$P(^DVB(396.4,DA,0),U,4),TST=$P(^DVB(396.4,DA,0),U,3),PRTNM=$S($D(^DVB(396.6,TST,0)):$P(^(0),U,2),1:"") D TST1
"RTN","DVBAB6",95,0)
 Q
"RTN","DVBAB6",96,0)
TST1 S TSTA1=""
"RTN","DVBAB6",97,0)
 I $D(^DVB(396.4,DA,"CAN")) S TSTA1=$P(^DVB(396.4,DA,"CAN"),U,3)
"RTN","DVBAB6",98,0)
 I $D(^DVB(396.4,DA,"TRAN")) S X=$P(^DVB(396.4,DA,"TRAN"),U,3)
"RTN","DVBAB6",99,0)
 S:TSTA1]"" TSTA1=$P(^DVB(396.5,TSTA1,0),U,1)
"RTN","DVBAB6",100,0)
 I $G(DVBADLMTR)'="," D
"RTN","DVBAB6",101,0)
 . S ^TMP("CAPRI",MSGCNT)=$S(PRTNM]"":PRTNM,1:"Missing exam name")
"RTN","DVBAB6",102,0)
 . S ^TMP("CAPRI",MSGCNT)=^TMP("CAPRI",MSGCNT)_$S(TSTA1]"":" - cancelled ("_TSTA1_")",TSTAT="T":" - Transferred",TSTAT]"":" - "_$$EXTERNAL^DILFD(396.4,.04,,TSTAT),TSTAT="":" (Unknown status)",1:"")_"^"
"RTN","DVBAB6",103,0)
 . S MSGCNT=MSGCNT+1
"RTN","DVBAB6",104,0)
 . I TSTAT="T" S X=$S($D(^DIC(4.2,+X,0)):$P(^(0),U,1),1:"unknown site") S ^TMP("CAPRI",MSGCNT)=" to "_$P(X,".",1),MSGCNT=MSGCNT+1
"RTN","DVBAB6",105,0)
 . Q
"RTN","DVBAB6",106,0)
 I $G(DVBADLMTR)="," D
"RTN","DVBAB6",107,0)
 . S PRTNM=$S(PRTNM]"":PRTNM,1:"Missing exam name"),TSTAT=$S(TSTA1]"":"Cancelled ("_TSTA1_")",TSTAT="T":"Transferred",TSTAT]"":$$EXTERNAL^DILFD(396.4,.04,,TSTAT),TSTAT="":" (Unknown status)",1:"")
"RTN","DVBAB6",108,0)
 . S ^TMP("CAPRI",MSGCNT)=EXAMRECRD_""""_PRTNM_""""_DVBADLMTR_""""_TSTAT_""""
"RTN","DVBAB6",109,0)
 . I TSTAT="T" S X=$S($D(^DIC(4.2,+X,0)):$P(^(0),U,1),1:"unknown site") S ^TMP("CAPRI",MSGCNT)=^TMP("CAPRI",MSGCNT)_" to "_$P(X,".",1)
"RTN","DVBAB6",110,0)
 . S ^TMP("CAPRI",MSGCNT)=^TMP("CAPRI",MSGCNT)_$C(13)
"RTN","DVBAB6",111,0)
 S MSGCNT=MSGCNT+1
"RTN","DVBAB6",112,0)
 Q
"RTN","DVBAB67")
0^13^B24962244^B14925656
"RTN","DVBAB67",1,0)
DVBAB67 ;ALB/KLB - CAPRI PENDING REPORT - PART 2 (called by DVBAB57) ;09/09/00
"RTN","DVBAB67",2,0)
 ;;2.7;AMIE;**35,90,185**;Apr 10, 1995;Build 18
"RTN","DVBAB67",3,0)
 ;
"RTN","DVBAB67",4,0)
DCHGDT S DCHGDT="",DCHPTR=$P(^DGPM(XJ,0),U,17),XADMDT=$P(^(0),U,1) I DCHPTR]"",$D(^DGPM(+DCHPTR,0)) S DCHGDT=$P(^DGPM(+DCHPTR,0),U,1)
"RTN","DVBAB67",5,0)
 K DCHPTR
"RTN","DVBAB67",6,0)
 Q
"RTN","DVBAB67",7,0)
 ;
"RTN","DVBAB67",8,0)
PRINT S DOCTYPE=$S($D(^DVB(396,DA,2)):$P(^(2),U,10),1:""),DFN=$P(^DVB(396,DA,0),U,1),ADMDT=$P(^(0),U,4),RDATE=$P(^(1),U,1)
"RTN","DVBAB67",9,0)
 S XI=$G(^DPT(DFN,0)),PNAM=$P(XI,U,1),SSN=$P(XI,U,9) Q:PNAM=""!'SSN
"RTN","DVBAB67",10,0)
 S CNUM=$P($G(^DPT(DFN,.31)),U,3) S:CNUM="" CNUM="UNKNOWN"
"RTN","DVBAB67",11,0)
 I RO="Y" S CFLOC=$$STATION^DVBAUTL1(DFN),CFLOC=$S(CFLOC>0:CFLOC,1:9999) Q:CFLOC'=RONUM&(CFLOC'=0)&(CFLOC'=376)
"RTN","DVBAB67",12,0)
 K ^TMP("DVBA","ADMIT",$J)
"RTN","DVBAB67",13,0)
 F XI=0:0 S XI=$O(^DGPM("APTT1",DFN,XI)) Q:XI=""  F XJ=0:0 S XJ=$O(^DGPM("APTT1",DFN,XI,XJ)) Q:XJ=""  D DCHGDT S ^TMP("DVBA","ADMIT",$J,XADMDT,DFN)=XI_U_DCHGDT
"RTN","DVBAB67",14,0)
 I $G(DVBADLMTR)="," D PRINTDLM G CONT
"RTN","DVBAB67",15,0)
 S:SELDIV="Y" ^TMP("CAPRI",MSGCNT)="Division: "_ADIV_"^",MSGCNT=MSGCNT+1,^TMP("CAPRI",MSGCNT)="^",MSGCNT=MSGCNT+1
"RTN","DVBAB67",16,0)
 S:SELDIV="N" ^TMP("CAPRI",MSGCNT)="Original Division: "_ADIV_"^",MSGCNT=MSGCNT+1,^TMP("CAPRI",MSGCNT)="^",MSGCNT=MSGCNT+1
"RTN","DVBAB67",17,0)
 S ^TMP("CAPRI",MSGCNT)=PNAM_"^",MSGCNT=MSGCNT+1,^TMP("CAPRI",MSGCNT)="SSN: "_SSN_"^",MSGCNT=MSGCNT+1,^TMP("CAPRI",MSGCNT)="Claim no: "_CNUM_"^",MSGCNT=MSGCNT+1
"RTN","DVBAB67",18,0)
 S ^TMP("CAPRI",MSGCNT)=$S(DOCTYPE="L":" Activity date: ",1:"Admission date: ")_$$FMTE^XLFDT(ADMDT,"5DZ")_"^",MSGCNT=MSGCNT+1,^TMP("CAPRI",MSGCNT)="Request date: "_$$FMTE^XLFDT(RDATE,"5DZ")_"^"
"RTN","DVBAB67",19,0)
 ;
"RTN","DVBAB67",20,0)
CONT ; Continue print output creation
"RTN","DVBAB67",21,0)
 S DCHGDT=""
"RTN","DVBAB67",22,0)
 I $D(^TMP("DVBA","ADMIT",$J,+ADMDT,DFN)) S:DOCTYPE="A" DCHGDT=$P(^TMP("DVBA","ADMIT",$J,+ADMDT,DFN),U,2)
"RTN","DVBAB67",23,0)
 D ELAPSED
"RTN","DVBAB67",24,0)
 I $G(DVBADLMTR)="," D PRINTDL2 G ITEMS
"RTN","DVBAB67",25,0)
 I DCHGDT]""_"^" S Y=DCHGDT X ^DD("DD") S ^TMP("CAPRI",MSGCNT)="",MSGCNT=MSGCNT+1,^TMP("CAPRI",MSGCNT)="** Discharged: "_Y_"^",MSGCNT=MSGCNT+1
"RTN","DVBAB67",26,0)
 S ^TMP("CAPRI",MSGCNT)="Elapsed days: "_EDAYS_"^",MSGCNT=MSGCNT+1,^TMP("CAPRI",MSGCNT)="Items Pending:"_"^",MSGCNT=MSGCNT+1
"RTN","DVBAB67",27,0)
 ;
"RTN","DVBAB67",28,0)
ITEMS F Q=9,11,13,15,17,19,21,23,26,28 I $P(^DVB(396,DA,0),U,Q)="P" D PRINT1 Q:DVBAQUIT=1
"RTN","DVBAB67",29,0)
 S Q=7 I $P(^DVB(396,DA,1),U,Q)="P" D PRINT1 Q:DVBAQUIT=1
"RTN","DVBAB67",30,0)
 I $G(DVBADLMTR)=0 D
"RTN","DVBAB67",31,0)
 . S:$D(^DVB(396,DA,2)) ^TMP("CAPRI",MSGCNT)="Requested by: "_$S($P(^DVB(396,DA,2),U,8)]"":$P(^(2),U,8),1:" (Not specified) ")_" AT "_$S($P(^(2),U,7)]"":$P(^(2),U,7),1:" (Not specified) ")_"^",MSGCNT=MSGCNT+1
"RTN","DVBAB67",32,0)
 . S $P(^TMP("CAPRI",MSGCNT),"-")="-^",MSGCNT=MSGCNT+1
"RTN","DVBAB67",33,0)
 . S ^TMP("CAPRI",MSGCNT)="^",MSGCNT=MSGCNT+1
"RTN","DVBAB67",34,0)
 Q
"RTN","DVBAB67",35,0)
 ;
"RTN","DVBAB67",36,0)
PRINT1 S:$D(^DVB(396,DA,6)) GDIVPTR=$P(^DVB(396,DA,6),"^",Q)
"RTN","DVBAB67",37,0)
 S:'$D(^DVB(396,DA,6)) GDIVPTR=$P(^DVB(396,DA,2),"^",9)
"RTN","DVBAB67",38,0)
 S:+GDIVPTR>0 GDIVNAM=$P(^DG(40.8,GDIVPTR,0),"^",1)
"RTN","DVBAB67",39,0)
 S:+GDIVPTR'>0 GDIVNAM=""
"RTN","DVBAB67",40,0)
 S NODTA=1 I $G(DVBADLMTR)=0 D  Q
"RTN","DVBAB67",41,0)
 . I QQ S MC=$T(@Q),MD=$P(MC,";;",2) S GDIV=" ("_$E(GDIVNAM,1,(9+(23-$L(MC))))_")" S ^TMP("CAPRI",MSGCNT)="        "_MD_GDIV_"^",MSGCNT=MSGCNT+1 S QQ='QQ Q
"RTN","DVBAB67",42,0)
 . I 'QQ S MC=$T(@Q),MD=$P(MC,";;",2) S GDIV=" ("_$E(GDIVNAM,1,(9+(23-$L(MC))))_")" S ^TMP("CAPRI",MSGCNT)="                                    "_MD_GDIV_"^",MSGCNT=MSGCNT+1 S QQ='QQ I $Y>22 Q:DVBAQUIT=1
"RTN","DVBAB67",43,0)
 . Q
"RTN","DVBAB67",44,0)
 I (QQ&($G(DVBADLMTR)=",")) S MC=$T(@Q),MD=$P(MC,";;",2),GDIV=" ("_GDIVNAM_")",^TMP("CAPRI",$J,MSGCNT)=PRTREC_MD_GDIV_DVBADLMTR D PRINTDL3
"RTN","DVBAB67",45,0)
 Q
"RTN","DVBAB67",46,0)
 ;
"RTN","DVBAB67",47,0)
ELAPSED K EDAYS S X1=DT,X=RDATE D ^XUWORKDY
"RTN","DVBAB67",48,0)
 S EDAYS=X
"RTN","DVBAB67",49,0)
 Q
"RTN","DVBAB67",50,0)
 ;
"RTN","DVBAB67",51,0)
PRINTDLM ; Print delimited format output details
"RTN","DVBAB67",52,0)
 S PRFX=$S(DOCTYPE="L":"ActivDt  ",1:"AdmitDt  ")
"RTN","DVBAB67",53,0)
 D DEM^VADPT I $G(VADM(1))'="" S SSN=$S($G(DVBADLMTR)=",":$P($G(VADM(2)),U,2),1:$P($G(VADM(2)),U,1))
"RTN","DVBAB67",54,0)
 S PRTREC=""""_ADIV_""""_DVBADLMTR_""""_PNAM_""""_DVBADLMTR_SSN_DVBADLMTR_$C(160)_CNUM_DVBADLMTR_$S($G(ADMDT)]"":PRFX_$$FMTE^XLFDT(ADMDT,"5DZ"),1:"")_DVBADLMTR_$$FMTE^XLFDT(RDATE,"5DZ")_DVBADLMTR
"RTN","DVBAB67",55,0)
 Q
"RTN","DVBAB67",56,0)
 ;
"RTN","DVBAB67",57,0)
PRINTDL2 ; Continue creating delimited format output
"RTN","DVBAB67",58,0)
 I DCHGDT]""_"^" S Y=DCHGDT X ^DD("DD") S PRTREC=PRTREC_""""_Y_""""_DVBADLMTR
"RTN","DVBAB67",59,0)
 I DCHGDT']""_"^" S Y="",PRTREC=PRTREC_Y_DVBADLMTR
"RTN","DVBAB67",60,0)
 S PRTREC=PRTREC_EDAYS_DVBADLMTR
"RTN","DVBAB67",61,0)
 Q
"RTN","DVBAB67",62,0)
 ;
"RTN","DVBAB67",63,0)
PRINTDL3 ; Last print fields for delimited output 
"RTN","DVBAB67",64,0)
 S:$D(^DVB(396,DA,2)) ^TMP("CAPRI",$J,MSGCNT)=^TMP("CAPRI",$J,MSGCNT)_$S($P(^DVB(396,DA,2),U,8)]"":""""_$P(^(2),U,8)_"""",1:"(Not specified) ")_DVBADLMTR_$S($P(^(2),U,7)]"":""""_$P(^(2),U,7)_"""",1:"(Not specified) ")_$C(13),MSGCNT=MSGCNT+1
"RTN","DVBAB67",65,0)
 Q
"RTN","DVBAB67",66,0)
 ;
"RTN","DVBAB67",67,0)
FIELDS ;
"RTN","DVBAB67",68,0)
7 ;;ADMISSION RPT
"RTN","DVBAB67",69,0)
9 ;;NOTICE OF DISCHARGE
"RTN","DVBAB67",70,0)
11 ;;HOSPITAL SUMMARY
"RTN","DVBAB67",71,0)
13 ;;21-DAY CERTIFICATE
"RTN","DVBAB67",72,0)
15 ;;OTHER/EXAM REVIEW RMKS
"RTN","DVBAB67",73,0)
17 ;;SPECIAL REPORT
"RTN","DVBAB67",74,0)
19 ;;COMPETENCY REPORT
"RTN","DVBAB67",75,0)
21 ;;VA FORM 21-2680
"RTN","DVBAB67",76,0)
23 ;;ASSET INFORMATION
"RTN","DVBAB67",77,0)
26 ;;OPT TREATMENT REPORT
"RTN","DVBAB67",78,0)
28 ;;BEGINNING DATE/CARE
"RTN","DVBAB67",79,0)
 Q 
"RTN","DVBAB82")
0^7^B120585412^B116645006
"RTN","DVBAB82",1,0)
DVBAB82 ;ALB/DJS - CAPRI DVBA REPORTS ; 01/24/12
"RTN","DVBAB82",2,0)
 ;;2.7;AMIE;**42,90,100,119,156,149,179,181,184,185**;Apr 10, 1995;Build 18
"RTN","DVBAB82",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBAB82",4,0)
 Q
"RTN","DVBAB82",5,0)
 ;
"RTN","DVBAB82",6,0)
START(MSG,RPID,PARM) ; CALLED BY REMOTE PROCEDURE DVBAB REPORTS
"RTN","DVBAB82",7,0)
 ;Parameters
"RTN","DVBAB82",8,0)
 ;=============
"RTN","DVBAB82",9,0)
 ; MSG  : Output - ^TMP("DVBA",$J)
"RTN","DVBAB82",10,0)
 ; RPID : Report Identification Number
"RTN","DVBAB82",11,0)
 ; PARM : Input parameters separated by "^"
"RTN","DVBAB82",12,0)
 ;
"RTN","DVBAB82",13,0)
 N DVBHFS,DVBERR,DVBGUI,I,DVBADLMTD
"RTN","DVBAB82",14,0)
 K ^TMP("DVBA",$J)
"RTN","DVBAB82",15,0)
 S DVBGUI=1,(DVBERR,DVBADLMTD)=0,DVBHFS=$$HFS(),RPID=$G(RPID)
"RTN","DVBAB82",16,0)
 I RPID<1!(RPID>15) S DVBERR=1,^TMP("DVBA",$J,1)="0^Undefined Report ID" G END
"RTN","DVBAB82",17,0)
 D HFSOPEN("DVBRP",DVBHFS,"W") I DVBERR G END
"RTN","DVBAB82",18,0)
 I RPID=1 D CRMS G END
"RTN","DVBAB82",19,0)
 I RPID=3 D CPRNT G END
"RTN","DVBAB82",20,0)
 I RPID=11 D CNHRP G END  ;FNCNH Print Roster
"RTN","DVBAB82",21,0)
 D CHECK I DVBERR G END  ;reports below require parameters
"RTN","DVBAB82",22,0)
 I RPID=2 D CRRR G END
"RTN","DVBAB82",23,0)
 I RPID=4 D CRPON G END
"RTN","DVBAB82",24,0)
 I RPID=5 D CIRPT G END
"RTN","DVBAB82",25,0)
 I RPID=6 D DSRP G END
"RTN","DVBAB82",26,0)
 I RPID=7 D SDPP G END
"RTN","DVBAB82",27,0)
 I RPID=8 D SPRPT G END
"RTN","DVBAB82",28,0)
 I RPID=9 D VIEW G END
"RTN","DVBAB82",29,0)
 I RPID=10 D CNHDEOC G END  ;FBCNH Display Episode Of Care
"RTN","DVBAB82",30,0)
 I RPID=12 D CNHRAD G END  ;FNCNH Report of Admissions/Discharges
"RTN","DVBAB82",31,0)
 I RPID=13 D CNHSE90D G END  ;FNCNH Stays in Excess of 90 Days
"RTN","DVBAB82",32,0)
 I RPID=14 D REQSTAT G END  ;REQUEST STATUS BY DATE RANGE
"RTN","DVBAB82",33,0)
 I RPID=15 D DVBA8861 G END  ;FORM 28-8861 STATUS REPORT
"RTN","DVBAB82",34,0)
 ;
"RTN","DVBAB82",35,0)
END D HFSCLOSE("DVBRP",DVBHFS)
"RTN","DVBAB82",36,0)
 I ($G(DVBADLMTD)&('+DVBERR)) D  Q  ;Create delimited output if no errors
"RTN","DVBAB82",37,0)
 .D DLMTRPT^DVBAB82D(RPID)
"RTN","DVBAB82",38,0)
 .S I=0 F  S I=$O(^TMP("DVBADLMTD",$J,I)) Q:I=""  D
"RTN","DVBAB82",39,0)
 ..I $G(^TMP("DVBADLMTD",$J,I))["##FFFF##" S ^TMP("DVBADLMTD",$J,I)=$TR(^TMP("DVBADLMTD",$J,I),"##FFFF##","")
"RTN","DVBAB82",40,0)
 .S MSG=$NA(^TMP("DVBADLMTD",$J))
"RTN","DVBAB82",41,0)
 ;Replace "##FFFF##" with Form Feeds - code needed for LINUX environments
"RTN","DVBAB82",42,0)
 S I=0 F  S I=$O(^TMP("DVBA",$J,1,I)) Q:'I  D
"RTN","DVBAB82",43,0)
 .S:^TMP("DVBA",$J,1,I)["##FFFF##" ^TMP("DVBA",$J,1,I)=$P(^TMP("DVBA",$J,1,I),"##FFFF##")_$C(13,12)_$P(^TMP("DVBA",$J,1,I),"##FFFF##",2)
"RTN","DVBAB82",44,0)
 .S ^TMP("DVBA",$J,1,I)=^TMP("DVBA",$J,1,I)_$C(13)
"RTN","DVBAB82",45,0)
 .S:^TMP("DVBA",$J,1,I)["$END" ^TMP("DVBA",$J,1,I)=""
"RTN","DVBAB82",46,0)
 S MSG=$NA(^TMP("DVBA",$J))
"RTN","DVBAB82",47,0)
 I ($G(RPID)=5)&($G(DVBADLMTR)=",") S MSG=$NA(^TMP("INSUFF",$J))
"RTN","DVBAB82",48,0)
 Q
"RTN","DVBAB82",49,0)
CHECK ; VALIDATE INPUT PARAMETERS
"RTN","DVBAB82",50,0)
 I $G(PARM)="" S DVBERR=1,^TMP("DVBA",$J,1)="0^Undefined Input Parameters"
"RTN","DVBAB82",51,0)
 Q
"RTN","DVBAB82",52,0)
 ;
"RTN","DVBAB82",53,0)
SDPP ; Report # 7 - Full (Patient Profile MAS) Report
"RTN","DVBAB82",54,0)
 ;Parameters
"RTN","DVBAB82",55,0)
 ;=============
"RTN","DVBAB82",56,0)
 ; DFN : Patient Identification Number
"RTN","DVBAB82",57,0)
 ; SDR : R/Range or A/All
"RTN","DVBAB82",58,0)
 ; SDBD : Begining date
"RTN","DVBAB82",59,0)
 ; SDED : Ending date
"RTN","DVBAB82",60,0)
 ; SDP : Print the profile? 1 OR 0
"RTN","DVBAB82",61,0)
 ; SDTYP(2) : Print appointments? 1 OR 0
"RTN","DVBAB82",62,0)
 ; SDTYP(1) : Print add/edits? 1 or 0
"RTN","DVBAB82",63,0)
 ; SDTYP(4) : Print enrollments? 1 or 0
"RTN","DVBAB82",64,0)
 ; SDTYP(3) : Print dispositions? 1 OR 0
"RTN","DVBAB82",65,0)
 ; SDTYP(7) : Print team information? 1 OR 0
"RTN","DVBAB82",66,0)
 ; SDTYP(5) : Print means test? 1 OR 0
"RTN","DVBAB82",67,0)
 ;
"RTN","DVBAB82",68,0)
 N SDTYP,SDBD,SDED,SDACT,SDPRINT,SDYES,SDRANGE,SDBEG,SDEN
"RTN","DVBAB82",69,0)
 S ^XTMP("JAP",$J,$$NOW^XLFDT(),"SDPP")=PARM
"RTN","DVBAB82",70,0)
 S DFN=$P(PARM,"^",1),SDR=$P(PARM,"^",2),SDBD=$P(PARM,"^",3),SDED=$P(PARM,"^",4)
"RTN","DVBAB82",71,0)
 S SDP=$P(PARM,"^",5),SDTYP(2)=$P(PARM,"^",6),SDTYP(1)=$P(PARM,"^",7)
"RTN","DVBAB82",72,0)
 S SDTYP(4)=$P(PARM,"^",8),SDTYP(3)=$P(PARM,"^",9),SDTYP(7)=$P(PARM,"^",10),SDTYP(5)=$P(PARM,"^",11)
"RTN","DVBAB82",73,0)
 D VAL Q:DVBERR
"RTN","DVBAB82",74,0)
 S SDACT="",(SDYES,SDRANGE,SDPRINT)=0
"RTN","DVBAB82",75,0)
 I SDR="R" S SDRANGE=1
"RTN","DVBAB82",76,0)
 I SDP=1 S SDYES=1,SDPRINT=1
"RTN","DVBAB82",77,0)
 I 'SDRANGE S (SDBD,SDBEG)=2800101,(SDED,SDEND)=$$ENDDT(),SDHDR=1
"RTN","DVBAB82",78,0)
 D ENS^%ZISS
"RTN","DVBAB82",79,0)
 S SDPRINT=1
"RTN","DVBAB82",80,0)
 S:(SDTYP(2)=1) SDTYP(2)=""  ;appointments
"RTN","DVBAB82",81,0)
 K:(SDTYP(2)=0) SDTYP(2)
"RTN","DVBAB82",82,0)
 S:(SDTYP(1)=1) SDTYP(1)=""  ;add/edits
"RTN","DVBAB82",83,0)
 K:(SDTYP(1)=0) SDTYP(1)
"RTN","DVBAB82",84,0)
 I (SDTYP(4)=1) S SDTYP(4)="",SDACT=0  ;enrollments
"RTN","DVBAB82",85,0)
 K:(SDTYP(4)=0) SDTYP(4)
"RTN","DVBAB82",86,0)
 S:(SDTYP(3)=1) SDTYP(3)=""  ;dispositions
"RTN","DVBAB82",87,0)
 K:(SDTYP(3)=0) SDTYP(3)
"RTN","DVBAB82",88,0)
 S:(SDTYP(5)=1) SDTYP(5)=""  ;means test
"RTN","DVBAB82",89,0)
 K:(SDTYP(5)=0) SDTYP(5)
"RTN","DVBAB82",90,0)
 I SDTYP(7)=1 D  ;team information
"RTN","DVBAB82",91,0)
 . S SDTYP(7)="",GBL="^TMP(""SDPP"","_$J_")"
"RTN","DVBAB82",92,0)
 K:(SDTYP(7)=0) SDTYP(7)
"RTN","DVBAB82",93,0)
 D PRINT^SDPPRT
"RTN","DVBAB82",94,0)
 S VALMBCK="R"
"RTN","DVBAB82",95,0)
 Q
"RTN","DVBAB82",96,0)
ENDDT() ;Calculate end date for "all" date
"RTN","DVBAB82",97,0)
 N DVBAPPTS,DVBX
"RTN","DVBAB82",98,0)
 S DVBAPPTS(1)=2800101,DVBAPPTS(4)=DFN,DVBAPPTS("SORT")="P"
"RTN","DVBAB82",99,0)
 S DVBAPPTS("FLDS")=1,DVBAPPTS("MAX")=-1
"RTN","DVBAB82",100,0)
 S DVBX=$S(($$SDAPI^SDAMA301(.DVBAPPTS)>0):$O(^TMP($J,"SDAMA301",DFN,0)),1:DT_.24)
"RTN","DVBAB82",101,0)
 K ^TMP($J,"SDAMA301")
"RTN","DVBAB82",102,0)
 Q DVBX
"RTN","DVBAB82",103,0)
 ;
"RTN","DVBAB82",104,0)
VIEW ; Report # 9 - View Registration Data Report
"RTN","DVBAB82",105,0)
 ; Parameters
"RTN","DVBAB82",106,0)
 ; ==========
"RTN","DVBAB82",107,0)
 ; DFN : Patient Identification Number
"RTN","DVBAB82",108,0)
 ;
"RTN","DVBAB82",109,0)
 U IO
"RTN","DVBAB82",110,0)
 S DFN=$P(PARM,"^",1)
"RTN","DVBAB82",111,0)
 D VAL Q:DVBERR
"RTN","DVBAB82",112,0)
 D EN1^DGRP
"RTN","DVBAB82",113,0)
 Q
"RTN","DVBAB82",114,0)
 ;
"RTN","DVBAB82",115,0)
DSRP ; Report # 6 - Reprint a Notice of Discharge Report
"RTN","DVBAB82",116,0)
 ; Parameters
"RTN","DVBAB82",117,0)
 ; % : 1=Report on all veterans for a given day (BDATE required)
"RTN","DVBAB82",118,0)
 ;   : 0=Report on a single Veteran (DFN required)
"RTN","DVBAB82",119,0)
 ; BDATE : Original Processing Date - $H/FileMan
"RTN","DVBAB82",120,0)
 ; DFN  : Patient Identification Number
"RTN","DVBAB82",121,0)
 ;
"RTN","DVBAB82",122,0)
 N %,BDATE,DFN,DFNIEN
"RTN","DVBAB82",123,0)
 S %=$P(PARM,"^",1),BDATE=$P(PARM,"^",2),DFN=$P(PARM,"^",3),DFNIEN=""
"RTN","DVBAB82",124,0)
 I BDATE="" S DVBERR=1,^TMP("DVBA",$J,1)="0^Incorrect Date"  Q
"RTN","DVBAB82",125,0)
 D DUZ2^DVBAUTIL
"RTN","DVBAB82",126,0)
 U IO
"RTN","DVBAB82",127,0)
 D VAL Q:DVBERR
"RTN","DVBAB82",128,0)
 I %=1 D  Q
"RTN","DVBAB82",129,0)
 . S HD="SINGLE NOTICE OF DISCHARGE REPRINTING"
"RTN","DVBAB82",130,0)
 . D NOPARM^DVBAUTL2
"RTN","DVBAB82",131,0)
 . I $D(DVBAQUIT) D KILL^DVBAUTIL Q  ;CAUTION: Short-circuit
"RTN","DVBAB82",132,0)
 . S DTAR=^DVB(396.1,1,0),FDT(0)=$$FMTE^XLFDT(DT,"5DZ")
"RTN","DVBAB82",133,0)
 . S HEAD="NOTICE OF DISCHARGE",HEAD1="FOR "_$P(DTAR,U,1)_" ON "_FDT(0)
"RTN","DVBAB82",134,0)
 . I $D(^DVB(396.2,"B",DFN)) D
"RTN","DVBAB82",135,0)
 . . S DFNIEN=$O(^DVB(396.2,"B",DFN,DFNIEN)),ADM=$P(^DVB(396.2,DFNIEN,0),U,3)
"RTN","DVBAB82",136,0)
 . . I $D(^DGPM(+ADM,0)),$P(^(0),U,17)]"" S DCHPTR=$P(^DGPM(+ADM,0),U,17),DISCH=$S($P(^DGPM(DCHPTR,0),U,1)]"":$P(^(0),U,1),1:"") W ?($X+5),"Discharge date: ",$$FMTE^XLFDT(DISCH,"5DZ")
"RTN","DVBAB82",137,0)
 . . I $P(^DVB(396.2,DFNIEN,0),U,7)'=DVBAD2 W *7,!!,"This does not belong to your RO.",!! H 3 Q
"RTN","DVBAB82",138,0)
 . . I DFNIEN>0 S XDA=DFNIEN,DA=$P(^DVB(396.2,DFNIEN,0),U,1),ADMDT=$P(^DVB(396.2,DFNIEN,0),U,2),MB=$P(^(0),U,3)
"RTN","DVBAB82",139,0)
 . . D REPRINT^DVBADSNT
"RTN","DVBAB82",140,0)
 D DEQUE^DVBADSRP
"RTN","DVBAB82",141,0)
 Q
"RTN","DVBAB82",142,0)
 ;
"RTN","DVBAB82",143,0)
SPRPT ; Report # 8 - OP(Operation Report)
"RTN","DVBAB82",144,0)
 ;Parameters
"RTN","DVBAB82",145,0)
 ;=============
"RTN","DVBAB82",146,0)
 ; DFN : Patient Identification Number
"RTN","DVBAB82",147,0)
 ; SRTN : Select Operation
"RTN","DVBAB82",148,0)
 ;
"RTN","DVBAB82",149,0)
 N DFN,SRTN,MAGTMPR2,SRSITE
"RTN","DVBAB82",150,0)
 I $O(^SRO(133,1))'="B" S SRSITE=1
"RTN","DVBAB82",151,0)
 S DFN=$P(PARM,"^",1),SRTN=$P(PARM,"^",2),MAGTMPR2=1
"RTN","DVBAB82",152,0)
 D VAL Q:DVBERR
"RTN","DVBAB82",153,0)
 D ^SROPRPT
"RTN","DVBAB82",154,0)
 Q
"RTN","DVBAB82",155,0)
 ;
"RTN","DVBAB82",156,0)
CRPON ; Report # - 4 Reprint C&P Final Report
"RTN","DVBAB82",157,0)
 ;Parameters
"RTN","DVBAB82",158,0)
 ;=============
"RTN","DVBAB82",159,0)
 ; RTYPE : Select Reprint Option (D)ate or (V)eteran
"RTN","DVBAB82",160,0)
 ; RUNDATE : ORIGINAL PROCESSING date
"RTN","DVBAB82",161,0)
 ; ANS : Reprinted by the RO or MAS
"RTN","DVBAB82",162,0)
 ; % : LAB 1 OR 0
"RTN","DVBAB82",163,0)
 ; DA(1) : Patient IEN for lab results
"RTN","DVBAB82",164,0)
 ; DFN  : Patient Identification Number
"RTN","DVBAB82",165,0)
 ;
"RTN","DVBAB82",166,0)
 U IO
"RTN","DVBAB82",167,0)
 N ONE
"RTN","DVBAB82",168,0)
 S RTYPE=$P(PARM,"^",1),RUNDATE=$P(PARM,"^",2),ANS=$P(PARM,"^",3),%=$P(PARM,"^",4),DA(1)=$P(PARM,"^",5),DFN=$P(PARM,"^",6),DA=DA(1)
"RTN","DVBAB82",169,0)
 I RTYPE="V" D VAL Q:DVBERR
"RTN","DVBAB82",170,0)
 S XDD=^DD("DD"),$P(ULINE,"_",70)="_",ONE="N",Y=DT
"RTN","DVBAB82",171,0)
 X XDD S HD="Reprint C & P Exams",SUPER=0
"RTN","DVBAB82",172,0)
 I $D(^XUSEC("DVBA C SUPERVISOR",DUZ)) S SUPER=1
"RTN","DVBAB82",173,0)
 S DVBCDT(0)=Y,PGHD="Compensation and Pension Exam Report",LOC=DUZ(2),PG=0,DVBCSITE=$S($D(^DVB(396.1,1,0)):$P(^(0),U,1),1:"Not specified")
"RTN","DVBAB82",174,0)
 I "^D^V^"'[RTYPE S DVBERR=1,^TMP("DVBA",$J,1)="0^Incorrect Data Type" Q
"RTN","DVBAB82",175,0)
 I ANS="R" K AUTO
"RTN","DVBAB82",176,0)
 I ANS="M" S AUTO=1
"RTN","DVBAB82",177,0)
 I "^M^R^"'[ANS S DVBERR=1,^TMP("DVBA",$J,1)="0^Incorrect Data Type" Q
"RTN","DVBAB82",178,0)
 I RTYPE="D" D GO^DVBCRPRT Q
"RTN","DVBAB82",179,0)
 I RTYPE="V" D
"RTN","DVBAB82",180,0)
 . S ONE="Y",RO=$P(^DVB(396.3,DA,0),U,3)
"RTN","DVBAB82",181,0)
 . I RO'=DUZ(2)&('$D(AUTO))&(SUPER=0) W !!,*7,"Those results do not belong to your office.",!! Q
"RTN","DVBAB82",182,0)
 . I RO=DUZ(2)&('$D(AUTO))&("RC"'[($P(^DVB(396.3,DA,0),U,18))) W *7,!!,"This request has not been released to the Regional Office yet.",!! Q
"RTN","DVBAB82",183,0)
 . S PRTDATE=$P(^DVB(396.3,DA,0),U,16) I PRTDATE="" W *7,!!,"This has never been printed.",!! I SUPER=0 S OUT=1 Q
"RTN","DVBAB82",184,0)
 . I %=1 D REN2^DVBCLABR Q
"RTN","DVBAB82",185,0)
 . ;D OV^DVBCRPON
"RTN","DVBAB82",186,0)
 . K DVBAON2 D SETLAB^DVBCPRNT,VARS^DVBCUTIL,STEP2^DVBCRPRT
"RTN","DVBAB82",187,0)
 Q
"RTN","DVBAB82",188,0)
 ;
"RTN","DVBAB82",189,0)
CIRPT ; Report # 5 - Insufficient Exam Report
"RTN","DVBAB82",190,0)
 ;Parameters
"RTN","DVBAB82",191,0)
 ;=============
"RTN","DVBAB82",192,0)
 ; RPTTYPE : D/Detailed or S/Summary
"RTN","DVBAB82",193,0)
 ; BEGDT : Beginning date $H/FileMan
"RTN","DVBAB82",194,0)
 ; ENDDT : Ending date $H/FileMan
"RTN","DVBAB82",195,0)
 ; RESANS : Insufficient Reason
"RTN","DVBAB82",196,0)
 ; DVBAPRTY : Priority of Exam Code
"RTN","DVBAB82",197,0)
 ;    AO  : Agent Orange
"RTN","DVBAB82",198,0)
 ;    BDD : Benefits Delivery at Discharge / Quick Start
"RTN","DVBAB82",199,0)
 ;    IDES : Integrated Disability Evaluation System
"RTN","DVBAB82",200,0)
 ;    ALL : All Others (Original Report w/ all codes except the above)
"RTN","DVBAB82",201,0)
 ; DVBADLMTR: 0=non-delimted format, ","=delimiter for .csv file for EXCEL
"RTN","DVBAB82",202,0)
 ;
"RTN","DVBAB82",203,0)
 N DVBAPRTY,RPTTYPE,BEGDT,ENDDT,RESANS
"RTN","DVBAB82",204,0)
 U IO
"RTN","DVBAB82",205,0)
 S RPTTYPE=$P(PARM,"^",1),BEGDT=$P(PARM,"^",2),ENDDT=$P(PARM,"^",3),RESANS=$P(PARM,"^",4)
"RTN","DVBAB82",206,0)
 S DVBAPRTY=$P(PARM,"^",5)
"RTN","DVBAB82",207,0)
 S DVBADLMTR=$P(PARM,"^",6),DVBADLMTR=$S(DVBADLMTR=1:",",1:0)
"RTN","DVBAB82",208,0)
 S ENDDT=ENDDT_".2359"
"RTN","DVBAB82",209,0)
 I RPTTYPE="S" D SUM^DVBCIRPT Q
"RTN","DVBAB82",210,0)
 I RPTTYPE="D" D
"RTN","DVBAB82",211,0)
 . D INREAS
"RTN","DVBAB82",212,0)
 . Q:($D(^TMP("DVBA",$J,1)))  ;invalid reason sent
"RTN","DVBAB82",213,0)
 . D EXMTPE,DETAIL^DVBCIRP1
"RTN","DVBAB82",214,0)
 Q
"RTN","DVBAB82",215,0)
 ;
"RTN","DVBAB82",216,0)
EXMTPE ;exam types (retrieve all for filter)
"RTN","DVBAB82",217,0)
 N DVBAXIFN
"RTN","DVBAB82",218,0)
 F DVBAXIFN=0:0 S DVBAXIFN=$O(^DVB(396.6,DVBAXIFN)) Q:+DVBAXIFN=0  DO
"RTN","DVBAB82",219,0)
 . S ^TMP($J,"XMTYPE",DVBAXIFN)=""
"RTN","DVBAB82",220,0)
 Q
"RTN","DVBAB82",221,0)
INREAS ;insufficient reason (validate specific or retrieve all)
"RTN","DVBAB82",222,0)
 N DVBAXIFN
"RTN","DVBAB82",223,0)
 D:(RESANS="")  ;use all insufficient reasons
"RTN","DVBAB82",224,0)
 .F DVBAXIFN=0:0 S DVBAXIFN=$O(^DVB(396.94,DVBAXIFN)) Q:+DVBAXIFN=0  DO
"RTN","DVBAB82",225,0)
 .. S DVBAARY("REASON",DVBAXIFN)=""
"RTN","DVBAB82",226,0)
 D:(RESANS'="")  ;use specific insufficient reason
"RTN","DVBAB82",227,0)
 .I ('$D(^DVB(396.94,+RESANS))) D  ;validate IEN
"RTN","DVBAB82",228,0)
 ..S DVBERR=1,^TMP("DVBA",$J,1)="0^Invalid Insufficient Reason IEN"
"RTN","DVBAB82",229,0)
 .E  S DVBAARY("REASON",+RESANS)=""
"RTN","DVBAB82",230,0)
 Q
"RTN","DVBAB82",231,0)
 ;
"RTN","DVBAB82",232,0)
CRMS ; Report # 1 - Regional Office 21- day Certificate Printing Report.
"RTN","DVBAB82",233,0)
 ; No Parameters
"RTN","DVBAB82",234,0)
 ;
"RTN","DVBAB82",235,0)
 U IO
"RTN","DVBAB82",236,0)
 D ^DVBACRMS
"RTN","DVBAB82",237,0)
 Q
"RTN","DVBAB82",238,0)
 ;
"RTN","DVBAB82",239,0)
CRRR ; Report # 2 - Reprint a 21 - day Certificate for the RO
"RTN","DVBAB82",240,0)
 ;Parameters
"RTN","DVBAB82",241,0)
 ;=============
"RTN","DVBAB82",242,0)
 ; DVBSEL : Select one of the following:
"RTN","DVBAB82",243,0)
 ;       N         Patient Name
"RTN","DVBAB82",244,0)
 ;       D         ORIGINAL PROCESSING DATE
"RTN","DVBAB82",245,0)
 ; SDATE : ORIGINAL PROCESSING date - $H/FileMan
"RTN","DVBAB82",246,0)
 ; XDA : Patient IEN
"RTN","DVBAB82",247,0)
 ;
"RTN","DVBAB82",248,0)
 U IO
"RTN","DVBAB82",249,0)
 S DVBSEL=$P(PARM,"^",1),SDATE=$P(PARM,"^",2),XDA=$P(PARM,"^",3)
"RTN","DVBAB82",250,0)
 I "^D^N^"'[DVBSEL S DVBERR=1,^TMP("DVBA",$J,1)="0^Incorrect Data Type" Q
"RTN","DVBAB82",251,0)
 I DVBSEL="D" D  I DVBERR Q
"RTN","DVBAB82",252,0)
 . I SDATE="" S DVBERR=1,^TMP("DVBA",$J,1)="0^Undefined Date" Q
"RTN","DVBAB82",253,0)
 . S %DT="X" S X=SDATE D ^%DT I Y<0 D  Q
"RTN","DVBAB82",254,0)
 . . S DVBERR=1,^TMP("DVBA",$J,1)="0^Incorrect Date Format"
"RTN","DVBAB82",255,0)
 I DVBSEL="N" D  I DVBERR Q
"RTN","DVBAB82",256,0)
 . I XDA="" S DVBERR=1,^TMP("DVBA",$J,1)="0^Undefined Patient IEN" Q
"RTN","DVBAB82",257,0)
 . S DIC=2,DIC(0)="NZX",X=XDA D ^DIC I Y<0 D  I DVBERR Q
"RTN","DVBAB82",258,0)
 . . S DVBERR=1,^TMP("DVBA",$J,1)="0^Invalid Patient Name."
"RTN","DVBAB82",259,0)
 . S DFN=XDA
"RTN","DVBAB82",260,0)
 D INIT^DVBACRRR I 'CONT Q
"RTN","DVBAB82",261,0)
 D HDR^DVBACRRR,DATA^DVBACRRR
"RTN","DVBAB82",262,0)
 Q
"RTN","DVBAB82",263,0)
 ;
"RTN","DVBAB82",264,0)
CPRNT ; Report # 3 - Print C&P Final Report (manual) Report
"RTN","DVBAB82",265,0)
 ; No Parameters
"RTN","DVBAB82",266,0)
 ;
"RTN","DVBAB82",267,0)
 S XDD=^DD("DD"),$P(ULINE,"_",70)="_",Y=DT
"RTN","DVBAB82",268,0)
 X XDD S DVBCDT(0)=Y,PGHD="Compensation and Pension Exam Report",DVBCSITE=$S($D(^DVB(396.1,1,0)):$P(^(0),U,1),1:"Not Specified")
"RTN","DVBAB82",269,0)
 D GO^DVBCPRNT
"RTN","DVBAB82",270,0)
 Q
"RTN","DVBAB82",271,0)
VAL ; VALIDATE PATIENT
"RTN","DVBAB82",272,0)
 I $G(DFN)="" S DVBERR=1,^TMP("DVBA",$J,1)="0^Undefined Patient IEN" G END
"RTN","DVBAB82",273,0)
 S DIC=2,DIC(0)="NZX",X=DFN D ^DIC
"RTN","DVBAB82",274,0)
 I Y<0 S DVBERR=1,^TMP("DVBA",$J,1)="0^Invalid Patient Name." G END
"RTN","DVBAB82",275,0)
 Q
"RTN","DVBAB82",276,0)
 ;
"RTN","DVBAB82",277,0)
VALDATE(DVBADTE) ;Validate Date
"RTN","DVBAB82",278,0)
 ;dates must be valid internal FileMan format
"RTN","DVBAB82",279,0)
 N X,Y,%DT
"RTN","DVBAB82",280,0)
 S %DT="X",X=DVBADTE D ^%DT
"RTN","DVBAB82",281,0)
 S:(Y=-1) DVBERR=1,^TMP("DVBA",$J,1)="0^Invalid FileMan formatted date."
"RTN","DVBAB82",282,0)
 Q
"RTN","DVBAB82",283,0)
 ;
"RTN","DVBAB82",284,0)
CNHDEOC ; Report #10 - FBCNH Display Episode of Care
"RTN","DVBAB82",285,0)
 ; Parameters
"RTN","DVBAB82",286,0)
 ; ==========
"RTN","DVBAB82",287,0)
 ;   DFN : IEN in PATIENT (#2) file
"RTN","DVBAB82",288,0)
 ;   IFN : IEN in FEE CNH ACTIVITY (#162.3) file
"RTN","DVBAB82",289,0)
 ;
"RTN","DVBAB82",290,0)
 U IO
"RTN","DVBAB82",291,0)
 N DFN,IFN
"RTN","DVBAB82",292,0)
 S DFN=$P(PARM,U,1),IFN=$P(PARM,U,2)
"RTN","DVBAB82",293,0)
 D ^FBNHDEC  ;DBIA#: 5566
"RTN","DVBAB82",294,0)
 Q
"RTN","DVBAB82",295,0)
 ;
"RTN","DVBAB82",296,0)
CNHRP ; Report #11 - FBCNH Roster Print
"RTN","DVBAB82",297,0)
 ; Parameters
"RTN","DVBAB82",298,0)
 ; ==========
"RTN","DVBAB82",299,0)
 ;   DVBADLMTD : 0 (Standard) or 1 (Delimited)
"RTN","DVBAB82",300,0)
 ; 
"RTN","DVBAB82",301,0)
 U IO
"RTN","DVBAB82",302,0)
 S DVBADLMTD=+$P($G(PARM),U)
"RTN","DVBAB82",303,0)
 D START^FBNHROS  ;DBIA#: 5566
"RTN","DVBAB82",304,0)
 Q
"RTN","DVBAB82",305,0)
 ;
"RTN","DVBAB82",306,0)
CNHRAD ; Report #12 - FBCNH Report of Admissions/Discharges
"RTN","DVBAB82",307,0)
 ; Parameters
"RTN","DVBAB82",308,0)
 ; ==========
"RTN","DVBAB82",309,0)
 ;   BEGDATE   : Start date in FM format
"RTN","DVBAB82",310,0)
 ;   ENDDATE   : End date in FM format
"RTN","DVBAB82",311,0)
 ;   DVBADLMTD : 0 (Standard) or 1 (Delimited)
"RTN","DVBAB82",312,0)
 ;
"RTN","DVBAB82",313,0)
 U IO
"RTN","DVBAB82",314,0)
 N BEGDATE,ENDDATE
"RTN","DVBAB82",315,0)
 S BEGDATE=$P(PARM,U,1),ENDDATE=$P(PARM,U,2)
"RTN","DVBAB82",316,0)
 S DVBADLMTD=+$P(PARM,U,3)
"RTN","DVBAB82",317,0)
 D VALDATE(BEGDATE),VALDATE(ENDDATE)
"RTN","DVBAB82",318,0)
 D:('+DVBERR) START^FBNHAMIE  ;DBIA#: 5566
"RTN","DVBAB82",319,0)
 Q
"RTN","DVBAB82",320,0)
 ;
"RTN","DVBAB82",321,0)
CNHSE90D ; Report #13 - FBCNH Stays in Excess of 90 Days
"RTN","DVBAB82",322,0)
 ; Parameters
"RTN","DVBAB82",323,0)
 ; ==========
"RTN","DVBAB82",324,0)
 ;   FBDT      : Effective date in FM format
"RTN","DVBAB82",325,0)
 ;   DVBADLMTD : 0 (Standard) or 1 (Delimited)
"RTN","DVBAB82",326,0)
 ;
"RTN","DVBAB82",327,0)
 U IO
"RTN","DVBAB82",328,0)
 N FBDT
"RTN","DVBAB82",329,0)
 S FBDT=$P(PARM,U,1),DVBADLMTD=+$P(PARM,U,2)
"RTN","DVBAB82",330,0)
 D VALDATE(FBDT)
"RTN","DVBAB82",331,0)
 D:('+DVBERR) START^FBNHAMI2  ;DBIA#: 5566
"RTN","DVBAB82",332,0)
 Q
"RTN","DVBAB82",333,0)
 ;
"RTN","DVBAB82",334,0)
HFS() ; -- get hfs file name
"RTN","DVBAB82",335,0)
 N H
"RTN","DVBAB82",336,0)
 S H=$H
"RTN","DVBAB82",337,0)
 Q "DVBA_"_$J_"_"_$P(H,",")_"_"_$P(H,",",2)_".DAT"
"RTN","DVBAB82",338,0)
 ;
"RTN","DVBAB82",339,0)
HFSOPEN(HANDLE,DVBHFS,DVBMODE) ; Open File
"RTN","DVBAB82",340,0)
 S DVBDIRY=$$GET^XPAR("DIV","DVB HFS SCRATCH")
"RTN","DVBAB82",341,0)
 ;I DVBDIRY="" S ECERR=1 D  Q
"RTN","DVBAB82",342,0)
 ;. S ^TMP("DVBA",$J,1)="0^A scratch directory for reports doesn't exist"
"RTN","DVBAB82",343,0)
 D OPEN^%ZISH(HANDLE,,DVBHFS,$G(DVBMODE,"W")) D:POP  Q:POP
"RTN","DVBAB82",344,0)
 .S DVBERR=1,^TMP("DVBA",$J,1)="0^Unable to open file "
"RTN","DVBAB82",345,0)
 S IOF="$$IOF^DVBAB82"   ;resets screen position and adds page break flag - added to deal with Linux environments.
"RTN","DVBAB82",346,0)
 Q
"RTN","DVBAB82",347,0)
 ;
"RTN","DVBAB82",348,0)
HFSCLOSE(HANDLE,DVBHFS) ;Close HFS and unload data
"RTN","DVBAB82",349,0)
 N DVBDEL,X,%ZIS
"RTN","DVBAB82",350,0)
 D CLOSE^%ZISH(HANDLE)
"RTN","DVBAB82",351,0)
 S DVBDEL(DVBHFS)=""
"RTN","DVBAB82",352,0)
 S ROOT=$NA(^TMP("DVBA",$J,1))
"RTN","DVBAB82",353,0)
 K:('+DVBERR) @ROOT
"RTN","DVBAB82",354,0)
 S X=$$FTG^%ZISH(,DVBHFS,$NA(@ROOT@(1)),4)
"RTN","DVBAB82",355,0)
 S X=$$DEL^%ZISH(,$NA(DVBDEL))
"RTN","DVBAB82",356,0)
 Q
"RTN","DVBAB82",357,0)
 ;
"RTN","DVBAB82",358,0)
IOF() ;used to reset position and insert page break flag when @IOF is executed.
"RTN","DVBAB82",359,0)
 S $X=0,$Y=0
"RTN","DVBAB82",360,0)
 Q "##FFFF##"_$C(13,10)
"RTN","DVBAB82",361,0)
 ;
"RTN","DVBAB82",362,0)
REQSTAT ; Report #14 - Request Status by Date Range
"RTN","DVBAB82",363,0)
 ; Parameters
"RTN","DVBAB82",364,0)
 ; ==========
"RTN","DVBAB82",365,0)
 ; BEGDAT        : Start date in FM format
"RTN","DVBAB82",366,0)
 ; ENDDAT        : End date in FM format
"RTN","DVBAB82",367,0)
 ; REQSTAT       : Request Status filter
"RTN","DVBAB82",368,0)
 ; ISDELIM       : 0 (Standard format); 1 (Delimited format)
"RTN","DVBAB82",369,0)
 ; ISNODT        : 0 (Use date range); 1 (Ignore date range)
"RTN","DVBAB82",370,0)
 U IO
"RTN","DVBAB82",371,0)
 N BEGDAT,ENDDAT,REQSTAT
"RTN","DVBAB82",372,0)
 S BEGDAT=$P(PARM,U,1),ENDDAT=$P(PARM,U,2)
"RTN","DVBAB82",373,0)
 S REQSTAT=$P(PARM,U,3),ISDELIM=$P(PARM,U,4),ISNODT=$P(PARM,U,5)
"RTN","DVBAB82",374,0)
 D VALDATE(BEGDAT),VALDATE(ENDDAT)
"RTN","DVBAB82",375,0)
 D:('+DVBERR) REQSTAT^DVBARSBD(BEGDAT,ENDDAT,REQSTAT,ISDELIM,ISNODT)
"RTN","DVBAB82",376,0)
 Q
"RTN","DVBAB82",377,0)
 ;
"RTN","DVBAB82",378,0)
DVBA8861 ; Report #15 - Form 28-8861 Status Report
"RTN","DVBAB82",379,0)
 ; Parameters
"RTN","DVBAB82",380,0)
 ; ==========
"RTN","DVBAB82",381,0)
 ; BEGDAT  -  Start date in FM format
"RTN","DVBAB82",382,0)
 ; ENDDAT  -  End date in FM format
"RTN","DVBAB82",383,0)
 ; ROSTAT  -  Regional Office filter
"RTN","DVBAB82",384,0)
 ; REQSTAT -  Request Status filter
"RTN","DVBAB82",385,0)
 ; DELIMTER - 0 (Standard format); 1 (Delimited format)
"RTN","DVBAB82",386,0)
 ;
"RTN","DVBAB82",387,0)
 U IO
"RTN","DVBAB82",388,0)
 N BEGDAT,ENDDAT,REQSTAT
"RTN","DVBAB82",389,0)
 S BEGDAT=$P(PARM,U,1),ENDDAT=$P(PARM,U,2)
"RTN","DVBAB82",390,0)
 S ROSTAT=$P(PARM,U,3),REQSTAT=$P(PARM,U,4),DELIMTER=$P(PARM,U,5)
"RTN","DVBAB82",391,0)
 D VALDATE(BEGDAT),VALDATE(ENDDAT)
"RTN","DVBAB82",392,0)
 D:('+DVBERR) STATRPT^DVBA8861(BEGDAT,ENDDAT,ROSTAT,REQSTAT,DELIMTER)
"RTN","DVBAB82",393,0)
 Q
"RTN","DVBAB82D")
0^8^B38767188^B37308259
"RTN","DVBAB82D",1,0)
DVBAB82D ;BHAMOI/JFW - CAPRI CNH DELIMITED REPORTS ; 9/24/10 1:59pm
"RTN","DVBAB82D",2,0)
 ;;2.7;AMIE;**149,185**;Apr 10, 1995;Build 18
"RTN","DVBAB82D",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBAB82D",4,0)
 ;
"RTN","DVBAB82D",5,0)
 ;Input : DVBARPTID - Identifies report to delimit
"RTN","DVBAB82D",6,0)
 ;        ^TMP("DVBA",$J,1) contains report in standard output
"RTN","DVBAB82D",7,0)
 ;Output: ^TMP("DVBADLMTD",$J) contains delimited report
"RTN","DVBAB82D",8,0)
 ;
"RTN","DVBAB82D",9,0)
DLMTRPT(DVBARPTID) ;delimit CNH report
"RTN","DVBAB82D",10,0)
 N DVBADLMTR,DVBADRPT
"RTN","DVBAB82D",11,0)
 S DVBADLMTR=",",DVBADRPT=$NA(^TMP("DVBADLMTD",$J))
"RTN","DVBAB82D",12,0)
 K @DVBADRPT
"RTN","DVBAB82D",13,0)
 ;create specific delimited report
"RTN","DVBAB82D",14,0)
 D @(DVBARPTID_"(DVBADLMTR,DVBADRPT)")
"RTN","DVBAB82D",15,0)
 K ^TMP("DVBA",$J)
"RTN","DVBAB82D",16,0)
 Q
"RTN","DVBAB82D",17,0)
 ;
"RTN","DVBAB82D",18,0)
11(DVBADLMTR,DVBADRPT) ;Nursing Home Roster Report Output
"RTN","DVBAB82D",19,0)
 N DVBAI,DVBAX,DVBAQUIT,DVBASTR,DVBACNTR,DVBATMP,DVBAVEN,DVBAVENID
"RTN","DVBAB82D",20,0)
 ;check to see if any results found
"RTN","DVBAB82D",21,0)
 I ('$D(^TMP("DVBA",$J,1,9))) D  Q
"RTN","DVBAB82D",22,0)
 .S @DVBADRPT@(1)="No data found."_$C(13)
"RTN","DVBAB82D",23,0)
 D COLHDR52(DVBADLMTR,DVBADRPT)  ;delimited column header info
"RTN","DVBAB82D",24,0)
 S DVBACNTR=$O(@DVBADRPT@("A"),-1)+1
"RTN","DVBAB82D",25,0)
 S DVBAI=8 F  S DVBAI=$O(^TMP("DVBA",$J,1,DVBAI)) Q:'+DVBAI  D
"RTN","DVBAB82D",26,0)
 .S DVBASTR=$G(^TMP("DVBA",$J,1,DVBAI))
"RTN","DVBAB82D",27,0)
 .;ignore blank lines (Seperates Entries) OR report headers 
"RTN","DVBAB82D",28,0)
 .Q:((DVBASTR="")!($E(DVBASTR,1,11)="VENDOR NAME")!($E(DVBASTR,1)=" ")!(DVBASTR[$C(10)))
"RTN","DVBAB82D",29,0)
 .S DVBAVEN=$$TRUNC($E(DVBASTR,1,49)),DVBAVENID=$$TRUNC($E(DVBASTR,51,80))
"RTN","DVBAB82D",30,0)
 .S DVBAQUIT=0,DVBAX=DVBAI
"RTN","DVBAB82D",31,0)
 .;quit inner loop when no more veterans for specific vendor
"RTN","DVBAB82D",32,0)
 .;or end of global array reached
"RTN","DVBAB82D",33,0)
 .F  S DVBAX=$O(^TMP("DVBA",$J,1,DVBAX)) Q:((DVBAQUIT)!('+DVBAX))  D
"RTN","DVBAB82D",34,0)
 ..S DVBASTR=$G(^TMP("DVBA",$J,1,DVBAX)),DVBATMP=""
"RTN","DVBAB82D",35,0)
 ..I ($E(DVBASTR,1)'=" ") S DVBAQUIT=1,DVBAI=DVBAX  Q
"RTN","DVBAB82D",36,0)
 ..;Vendor Name^Vendor ID
"RTN","DVBAB82D",37,0)
 ..S DVBATMP=DVBAVEN_DVBADLMTR_DVBAVENID_DVBADLMTR
"RTN","DVBAB82D",38,0)
 ..;Veteran Name^Veteran ID^Admit DT^Auth. To Date 
"RTN","DVBAB82D",39,0)
 ..S DVBATMP=DVBATMP_""""_$$TRUNC($E(DVBASTR,5,36))_""""_DVBADLMTR_$$TRUNC($E(DVBASTR,38,52))_DVBADLMTR
"RTN","DVBAB82D",40,0)
 ..S DVBATMP=DVBATMP_$$TRIM($$TRUNC($E(DVBASTR,54,64)))_DVBADLMTR_$$TRIM($$TRUNC($E(DVBASTR,66,80)))
"RTN","DVBAB82D",41,0)
 ..;Save off CNH info and increment counters
"RTN","DVBAB82D",42,0)
 ..S @DVBADRPT@(DVBACNTR)=DVBATMP_$C(13),DVBACNTR=DVBACNTR+1
"RTN","DVBAB82D",43,0)
 Q
"RTN","DVBAB82D",44,0)
 ;
"RTN","DVBAB82D",45,0)
12(DVBADLMTR,DVBADRPT) ;CNH Admission/Discharge Report Output
"RTN","DVBAB82D",46,0)
 N DVBAI,DVBASTR,DVBACNTR,DVBATMP
"RTN","DVBAB82D",47,0)
 ;check to see if any results found
"RTN","DVBAB82D",48,0)
 I ('$D(^TMP("DVBA",$J,1,7))) D  Q
"RTN","DVBAB82D",49,0)
 .S @DVBADRPT@(1)="No data found for parameters entered."_$C(13)
"RTN","DVBAB82D",50,0)
 D COLHDR53(DVBADLMTR,DVBADRPT)  ;delimited column header info
"RTN","DVBAB82D",51,0)
 S DVBACNTR=$O(@DVBADRPT@("A"),-1)+1
"RTN","DVBAB82D",52,0)
 S DVBAI=6 F  S DVBAI=$O(^TMP("DVBA",$J,1,DVBAI)) Q:'+DVBAI  D
"RTN","DVBAB82D",53,0)
 .S DVBASTR=$G(^TMP("DVBA",$J,1,DVBAI))
"RTN","DVBAB82D",54,0)
 .;ignore blank lines (Seperates Entries) OR report headers 
"RTN","DVBAB82D",55,0)
 .Q:((DVBASTR="")!($E(DVBASTR,1)=" ")!(DVBASTR[$C(10)))
"RTN","DVBAB82D",56,0)
 .S DVBATMP=""
"RTN","DVBAB82D",57,0)
 .;Patient Name^Patient ID^Eligibility
"RTN","DVBAB82D",58,0)
 .;S DVBATMP=$$TRUNC($E(DVBASTR,1,31))_DVBADLMTR_$$TRUNC($E(DVBASTR,33,47))_DVBADLMTR_$$TRUNC($E(DVBASTR,49,80))_DVBADLMTR
"RTN","DVBAB82D",59,0)
 .S DVBATMP=""""_$$TRUNC($E(DVBASTR,1,31))_""""_DVBADLMTR_$$TRUNC($E(DVBASTR,33,47))_DVBADLMTR_$$TRUNC($E(DVBASTR,49,80))_DVBADLMTR
"RTN","DVBAB82D",60,0)
 .S DVBAI=DVBAI+1,DVBASTR=$G(^TMP("DVBA",$J,1,DVBAI))
"RTN","DVBAB82D",61,0)
 .;Activity Type^Date^Date/Time^Sub Type
"RTN","DVBAB82D",62,0)
 .S DVBATMP=DVBATMP_$P($$TRIM(DVBASTR)," ")_DVBADLMTR_$$TRUNC($E(DVBASTR,20,35))_DVBADLMTR_$$TRUNC($E(DVBASTR,53,80))_DVBADLMTR
"RTN","DVBAB82D",63,0)
 .S DVBAI=DVBAI+1,DVBASTR=$G(^TMP("DVBA",$J,1,DVBAI))
"RTN","DVBAB82D",64,0)
 .;Nursing Home Information (ID^Name^Address^Phone) is optional
"RTN","DVBAB82D",65,0)
 .D:(DVBASTR="")
"RTN","DVBAB82D",66,0)
 ..S DVBATMP=DVBATMP_DVBADLMTR_DVBADLMTR_DVBADLMTR
"RTN","DVBAB82D",67,0)
 .D:(DVBASTR'="")
"RTN","DVBAB82D",68,0)
 ..S DVBATMP=DVBATMP_$$TRUNC($E(DVBASTR,43,80))_DVBADLMTR_$$TRUNC($E(DVBASTR,11,41))_DVBADLMTR
"RTN","DVBAB82D",69,0)
 ..S DVBASTR=$$TRIM($$TRUNC($G(^TMP("DVBA",$J,1,DVBAI+1))))
"RTN","DVBAB82D",70,0)
 ..S:(DVBASTR]"") DVBATMP=DVBATMP_DVBASTR_" "  ;Address 1
"RTN","DVBAB82D",71,0)
 ..S DVBATMP=DVBATMP_$$TRIM($$TRUNC($G(^TMP("DVBA",$J,1,DVBAI+2))))_DVBADLMTR  ;Address 2
"RTN","DVBAB82D",72,0)
 ..S DVBATMP=DVBATMP_$$TRIM($$TRUNC($P($G(^TMP("DVBA",$J,1,DVBAI+3)),":",2)))  ;Phone
"RTN","DVBAB82D",73,0)
 ..S DVBAI=DVBAI+3
"RTN","DVBAB82D",74,0)
 .;Save off CNH info and increment counters
"RTN","DVBAB82D",75,0)
 .S @DVBADRPT@(DVBACNTR)=DVBATMP_$C(13),DVBACNTR=DVBACNTR+1
"RTN","DVBAB82D",76,0)
 Q
"RTN","DVBAB82D",77,0)
 ;
"RTN","DVBAB82D",78,0)
 ;Input : DVBADLMTR - Delimiter to use between components
"RTN","DVBAB82D",79,0)
 ;        DVBADRPT  - Delimited Report container (Full Global Ref)
"RTN","DVBAB82D",80,0)
 ;Output: Delimited report info added to DVBADRPT
"RTN","DVBAB82D",81,0)
13(DVBADLMTR,DVBADRPT) ; CNH stays > 90 days Report Output
"RTN","DVBAB82D",82,0)
 N DVBAI,DVBASTR,DVBACNTR,DVBATMP
"RTN","DVBAB82D",83,0)
 ;check to see if any results found
"RTN","DVBAB82D",84,0)
 I ($G(^TMP("DVBA",$J,1,9))="") D  Q
"RTN","DVBAB82D",85,0)
 .S @DVBADRPT@(1)="No data found for parameter entered."_$C(13)
"RTN","DVBAB82D",86,0)
 D COLHDR50(DVBADLMTR,DVBADRPT)  ;delimited column header info
"RTN","DVBAB82D",87,0)
 S DVBACNTR=$O(@DVBADRPT@("A"),-1)+1
"RTN","DVBAB82D",88,0)
 S DVBAI=8 F  S DVBAI=$O(^TMP("DVBA",$J,1,DVBAI)) Q:'+DVBAI  D
"RTN","DVBAB82D",89,0)
 .S DVBASTR=$G(^TMP("DVBA",$J,1,DVBAI))
"RTN","DVBAB82D",90,0)
 .Q:(DVBASTR["***LOS =")  ;end of report info
"RTN","DVBAB82D",91,0)
 .;ignore blank lines OR report headers 
"RTN","DVBAB82D",92,0)
 .Q:((DVBASTR="")!($E(DVBASTR,1,7)="VETERAN")!($E(DVBASTR,1)=" ")!(DVBASTR[$C(10)))
"RTN","DVBAB82D",93,0)
 .S DVBATMP=""
"RTN","DVBAB82D",94,0)
 .;Veteran^Pt.ID^Marital St.^Adm. Date^LOS^Vendor
"RTN","DVBAB82D",95,0)
 .S DVBATMP=""""_$$TRUNC($E(DVBASTR,1,17))_""""_DVBADLMTR_$$TRUNC($E(DVBASTR,19,31))_DVBADLMTR
"RTN","DVBAB82D",96,0)
 .S DVBATMP=DVBATMP_$$TRUNC($E(DVBASTR,33,34))_DVBADLMTR_$$TRUNC($E(DVBASTR,36,44))_DVBADLMTR
"RTN","DVBAB82D",97,0)
 .S DVBATMP=DVBATMP_$$TRIM($$TRUNC($E(DVBASTR,46,52)))_DVBADLMTR_$$TRUNC($E(DVBASTR,54,80))
"RTN","DVBAB82D",98,0)
 .;Save off CNH info and increment counters
"RTN","DVBAB82D",99,0)
 .S @DVBADRPT@(DVBACNTR)=DVBATMP_$C(13),DVBACNTR=DVBACNTR+1
"RTN","DVBAB82D",100,0)
 Q
"RTN","DVBAB82D",101,0)
 ;
"RTN","DVBAB82D",102,0)
 ;Delimited Column header for CNH stays in excess of 90 days Report
"RTN","DVBAB82D",103,0)
COLHDR50(DVBADLMTR,DVBADRPT) ;
"RTN","DVBAB82D",104,0)
 N DVBAHDR
"RTN","DVBAB82D",105,0)
 S DVBAHDR="Veteran"_DVBADLMTR_"Pt. ID"_DVBADLMTR_"Marital St."_DVBADLMTR
"RTN","DVBAB82D",106,0)
 S DVBAHDR=DVBAHDR_"Adm. Date"_DVBADLMTR_"LOS"_DVBADLMTR_"Vendor"
"RTN","DVBAB82D",107,0)
 S @DVBADRPT@($O(@DVBADRPT@("A"),-1)+1)=DVBAHDR_$C(13)
"RTN","DVBAB82D",108,0)
 Q
"RTN","DVBAB82D",109,0)
 ;
"RTN","DVBAB82D",110,0)
 ;Delimited Column header for Nursing Home Roster Report
"RTN","DVBAB82D",111,0)
COLHDR52(DVBADLMTR,DVBADRPT) ;
"RTN","DVBAB82D",112,0)
 N DVBAHDR
"RTN","DVBAB82D",113,0)
 S DVBAHDR="Vendor Name"_DVBADLMTR_"Vendor ID"_DVBADLMTR_"Veteran Name"_DVBADLMTR
"RTN","DVBAB82D",114,0)
 S DVBAHDR=DVBAHDR_"Veteran ID"_DVBADLMTR_"Admit DT"_DVBADLMTR_"Auth. To Date"
"RTN","DVBAB82D",115,0)
 S @DVBADRPT@($O(@DVBADRPT@("A"),-1)+1)=DVBAHDR_$C(13)
"RTN","DVBAB82D",116,0)
 Q
"RTN","DVBAB82D",117,0)
 ;
"RTN","DVBAB82D",118,0)
 ;Delimited Column header for Admission/Discharge Report
"RTN","DVBAB82D",119,0)
COLHDR53(DVBADLMTR,DVBADRPT) ;
"RTN","DVBAB82D",120,0)
 N DVBAHDR
"RTN","DVBAB82D",121,0)
 S DVBAHDR="Patient Name"_DVBADLMTR_"Patient ID"_DVBADLMTR_"Eligibility"_DVBADLMTR
"RTN","DVBAB82D",122,0)
 S DVBAHDR=DVBAHDR_"Activity Type"_DVBADLMTR_"Actvity Date/Time"_DVBADLMTR
"RTN","DVBAB82D",123,0)
 S DVBAHDR=DVBAHDR_"Activity Sub Type"_DVBADLMTR_"CNH ID"_DVBADLMTR
"RTN","DVBAB82D",124,0)
 S DVBAHDR=DVBAHDR_"CNH Name"_DVBADLMTR_"CNH Address"_DVBADLMTR_"CNH Phone #"
"RTN","DVBAB82D",125,0)
 S @DVBADRPT@($O(@DVBADRPT@("A"),-1)+1)=DVBAHDR_$C(13)
"RTN","DVBAB82D",126,0)
 Q
"RTN","DVBAB82D",127,0)
 ;
"RTN","DVBAB82D",128,0)
 ;Input : DVBASTR - string to check for trailing spaces
"RTN","DVBAB82D",129,0)
 ;Output: String with trailing spaces, Line/Form feeds removed
"RTN","DVBAB82D",130,0)
TRUNC(DVBASTR) ;remove trailing spaces and line/form feeds in string
"RTN","DVBAB82D",131,0)
 N DVBAX
"RTN","DVBAB82D",132,0)
 Q:(DVBASTR="") ""
"RTN","DVBAB82D",133,0)
 F DVBAX=$L(DVBASTR):-1:0  Q:(($E(DVBASTR,DVBAX,DVBAX)'=" ")&(($E(DVBASTR,DVBAX,DVBAX))'[$C(13))&($E(DVBASTR,DVBAX,DVBAX)'[$C(12)))
"RTN","DVBAB82D",134,0)
 Q ($E(DVBASTR,1,DVBAX))
"RTN","DVBAB82D",135,0)
 ;
"RTN","DVBAB82D",136,0)
 ;Input : DVBASTR - string to check for leading spaces
"RTN","DVBAB82D",137,0)
 ;Output: String with leading spaces removed
"RTN","DVBAB82D",138,0)
TRIM(DVBASTR) ;remove leading spaces in string
"RTN","DVBAB82D",139,0)
 N DVBAX
"RTN","DVBAB82D",140,0)
 Q:(DVBASTR="") ""
"RTN","DVBAB82D",141,0)
 F DVBAX=1:1:$L(DVBASTR)  Q:($E(DVBASTR,DVBAX,DVBAX)?1AN)
"RTN","DVBAB82D",142,0)
 Q ($E(DVBASTR,DVBAX,$L(DVBASTR)))
"RTN","DVBAB85")
0^5^B8107422^B3730560
"RTN","DVBAB85",1,0)
DVBAB85 ;SPH - CAPRI REPORTS ;03/01/05
"RTN","DVBAB85",2,0)
 ;;2.7;AMIE;**90,185**;Apr 10, 1995;Build 18
"RTN","DVBAB85",3,0)
 ;
"RTN","DVBAB85",4,0)
RPTSTAT(Y,DVBDSTRT,DVBDBEND,DVBDLMT) ;
"RTN","DVBAB85",5,0)
 ; REPORT FORMAT:
"RTN","DVBAB85",6,0)
 ; PT NAME + AUTHOR + DATE/TIME ENTERED + DATE/TIME LOCKED + STATUS
"RTN","DVBAB85",7,0)
 ; FORM 1, FORM 2, ETC.
"RTN","DVBAB85",8,0)
 N DVBABIEN,DVBABCNT,DVBABIE2,DVBTEMP,DVBNM,DVBAUT,DVBDTE,DVBDTL,DVBST,DVBEXAMS,ST
"RTN","DVBAB85",9,0)
 N DVBATMP,DVBADLMTR,X,XEXAMS
"RTN","DVBAB85",10,0)
 S DVBADLMTR="^"
"RTN","DVBAB85",11,0)
 I '$D(DVBDLMT) S DVBDLMT=0
"RTN","DVBAB85",12,0)
 I DVBDLMT'=1 S DVBDLMT=0
"RTN","DVBAB85",13,0)
 K ^TMP("DVBARPT",DUZ)
"RTN","DVBAB85",14,0)
 S DVBABIEN=0,DVBABCNT=0,ST("P")="REVIEW PENDING",ST("N")="NOT REQUIRED",ST("S")="SENT BACK"
"RTN","DVBAB85",15,0)
 S ST("C")="COMPLETE",ST("D")="DRAFT",ST("A")="AWAITING SIGNATURE",ST("U")="UNCOSIGNED"
"RTN","DVBAB85",16,0)
 I $G(DVBDLMT)=1 S ^TMP("DVBARPT",DUZ,DVBABCNT)="Patient Name,Author,Date/Time Created,Date/Time Signed,Status,Template"_$C(13),DVBABCNT=DVBABCNT+1
"RTN","DVBAB85",17,0)
 F  S DVBABIEN=$O(^DVB(396.17,DVBABIEN)) Q:'DVBABIEN  D
"RTN","DVBAB85",18,0)
 . S DVBTEMP=$G(^DVB(396.17,DVBABIEN,0)),DVBDTE=$P(DVBTEMP,"^",3)
"RTN","DVBAB85",19,0)
 . I DVBTEMP]"",DVBDTE>DVBDSTRT,DVBDTE-1<DVBDBEND D
"RTN","DVBAB85",20,0)
 .. S DVBNM=$P(^DPT(+DVBTEMP,0),"^",1),DVBAUT=$P(^VA(200,$P(DVBTEMP,"^",2),0),"^",1),Y=$P(DVBTEMP,"^",3)
"RTN","DVBAB85",21,0)
 .. X ^DD("DD") S DVBDTE=Y,Y=$P(DVBTEMP,"^",5) X ^DD("DD")
"RTN","DVBAB85",22,0)
 .. S DVBDTL=Y,DVBEXAMS="",DVBABIE2=0,DVBST=$P(^DVB(396.17,DVBABIEN,5),"^",2)
"RTN","DVBAB85",23,0)
 .. S:$D(ST(DVBST)) DVBST=ST(DVBST)
"RTN","DVBAB85",24,0)
 .. F  S DVBABIE2=$O(^DVB(396.17,DVBABIEN,1,DVBABIE2)) Q:'DVBABIE2  S DVBEXAMS=DVBEXAMS_"|"_$P(^DVB(396.17,DVBABIEN,1,DVBABIE2,0),"^",2)
"RTN","DVBAB85",25,0)
 .. ;
"RTN","DVBAB85",26,0)
 .. I DVBDLMT'=1 D
"RTN","DVBAB85",27,0)
 ... S DVBABCNT=DVBABCNT+1
"RTN","DVBAB85",28,0)
 ... S ^TMP("DVBARPT",DUZ,DVBABCNT)=DVBNM_"^"_DVBAUT_"^"_DVBDTE_"^"_DVBDTL_"^"_DVBST_"^"_DVBEXAMS_$C(13)
"RTN","DVBAB85",29,0)
 .. ;
"RTN","DVBAB85",30,0)
 .. I DVBDLMT=1 D
"RTN","DVBAB85",31,0)
 ... F X=1:1:$L(DVBEXAMS,"|") D
"RTN","DVBAB85",32,0)
 .... S XEXAMS=$P(DVBEXAMS,"|",X)
"RTN","DVBAB85",33,0)
 .... Q:XEXAMS=""
"RTN","DVBAB85",34,0)
 .... I DVBDTL="JAN 1,1980" S DVBDTL="UNSIGNED"
"RTN","DVBAB85",35,0)
 .... S ^TMP("DVBARPT",DUZ,DVBABCNT)=DVBNM_"^"_DVBAUT_"^"_DVBDTE_"^"_DVBDTL_"^"_DVBST_"^"_XEXAMS
"RTN","DVBAB85",36,0)
 .... S DVBATMP=^TMP("DVBARPT",DUZ,DVBABCNT)
"RTN","DVBAB85",37,0)
 .... F I=1:1:$L(DVBATMP,DVBADLMTR) I $P(DVBATMP,DVBADLMTR,I)["," S $P(DVBATMP,DVBADLMTR,I)=""""_$P(DVBATMP,DVBADLMTR,I)_""""
"RTN","DVBAB85",38,0)
 .... S DVBATMP=$TR(DVBATMP,DVBADLMTR,",")
"RTN","DVBAB85",39,0)
 .... S ^TMP("DVBARPT",DUZ,DVBABCNT)=DVBATMP
"RTN","DVBAB85",40,0)
 .... S ^TMP("DVBARPT",DUZ,DVBABCNT)=^TMP("DVBARPT",DUZ,DVBABCNT)_$C(13)
"RTN","DVBAB85",41,0)
 .... S DVBABCNT=DVBABCNT+1
"RTN","DVBAB85",42,0)
 ;
"RTN","DVBAB85",43,0)
 S Y=$NA(^TMP("DVBARPT",DUZ))
"RTN","DVBAB85",44,0)
 Q
"RTN","DVBAB98")
0^4^B40683671^B34547501
"RTN","DVBAB98",1,0)
DVBAB98 ;ALB/SPH - CAPRI CONVERSION OF DVBARAD1 FOR SUPPORT ; 3/22/12 8:33am
"RTN","DVBAB98",2,0)
 ;;2.7;AMIE;**35,149,179,185**;Apr 10, 1995;Build 18
"RTN","DVBAB98",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBAB98",4,0)
 ;
"RTN","DVBAB98",5,0)
 S ZX="PENSION   ",ZY="A & A     "
"RTN","DVBAB98",6,0)
 S MSG="" F ZZ=1:1:7 S MSG=MSG_ZX
"RTN","DVBAB98",7,0)
 S MSG1="" F ZZ=1:1:7 S MSG1=MSG1_ZY
"RTN","DVBAB98",8,0)
 U IO K DVBAQUIT
"RTN","DVBAB98",9,0)
 F DVBAT="PEN","A&A" W:((IOST?1"C-".E)!(IOST'?1"P-OTHER".E)) @IOF W !!!!!!!!!! D PRINT Q:$D(DVBAQUIT)
"RTN","DVBAB98",10,0)
 S ZMSG=$NA(^TMP("DVBAR",$J))
"RTN","DVBAB98",11,0)
 G KILL
"RTN","DVBAB98",12,0)
 ;
"RTN","DVBAB98",13,0)
PRINTB S DATA1=$S($D(^TMP("DVBA",DVBAT,$J,SORTDT,XCN,XCFLOC,K,DA,"LADM")):^("LADM"),1:"") S (LADMDT,ADMDT)=$P(DATA1,U),LTDIS=$P(DATA1,U,2),DFN=DA,QUIT1=1 K DATA1 D ADM^DVBAVDPT K QUIT1,DVBAQ
"RTN","DVBAB98",14,0)
 S LBEDSEC=BEDSEC,LDIAG=DIAG,LDCHGDT=DCHGDT,ADMDT=$P(DATA,U),RCVAA=$P(DATA,U,2),RCVPEN=$P(DATA,U,3),CNUM=$P(DATA,U,4),TDIS=$P(DATA,U,5) D ADM^DVBAVDPT
"RTN","DVBAB98",15,0)
 S RCVPEN=$S(RCVPEN=0:"NO",RCVPEN=1:"YES",1:"Not specified"),RCVAA=$S(RCVAA=0:"NO",RCVAA=1:"YES",1:"Not specified")
"RTN","DVBAB98",16,0)
 W @IOF,!!!,?(80-$L(HEAD)\2),HEAD,!,?(80-$L(HEAD1)\2),HEAD1,!,?(80-$L(HEADDT)\2),HEADDT,!!!
"RTN","DVBAB98",17,0)
 S:ADMDT]"" ADMDT=$$FMTE^XLFDT(ADMDT,"5DZ")
"RTN","DVBAB98",18,0)
 S:DCHGDT]"" DCHGDT=$$FMTE^XLFDT(DCHGDT,"5DZ")
"RTN","DVBAB98",19,0)
 S:LADMDT]"" LADMDT=$$FMTE^XLFDT(LADMDT,"5DZ")
"RTN","DVBAB98",20,0)
 S:LDCHGDT]"" LDCHGDT=$$FMTE^XLFDT(LDCHGDT,"5DZ")
"RTN","DVBAB98",21,0)
 ;create delimited/non-delimited report
"RTN","DVBAB98",22,0)
 D:($G(DVBADLMTR)'="") PRINTD
"RTN","DVBAB98",23,0)
 D:($G(DVBADLMTR)="") PRINTND
"RTN","DVBAB98",24,0)
 Q
"RTN","DVBAB98",25,0)
 ;
"RTN","DVBAB98",26,0)
PRINTND ;create non-delimited re-admission report
"RTN","DVBAB98",27,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="",DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",28,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="Patient: "_PNAM_"  SSN: "_SSN_"  Claim Folder Loc: "_CFLOC,DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",29,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="Claim #: "_CNUM_"  Pension: "_RCVPEN_"  A&A: "_RCVAA,DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",30,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="================================================================================",DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",31,0)
 D ELIG
"RTN","DVBAB98",32,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="Current Admission Data:",DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",33,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="-----------------------",DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",34,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="Admission Date:      "_ADMDT,DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",35,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="Admitting Diagnosis: "_DIAG,DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",36,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="Discharge Date:      "_DCHGDT,DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",37,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="Discharge Type:      "_TDIS,DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",38,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="Bed Service:         "_BEDSEC,DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",39,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="",DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",40,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="Prior Admission Data:",DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",41,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="---------------------",DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",42,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="Admission Date:      "_LADMDT,DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",43,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="Admitting Diagnosis: "_LDIAG,DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",44,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="Discharge Date:      "_LDCHGDT,DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",45,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="Discharge Type:      "_LTDIS,DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",46,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="Bed Service:         "_LBEDSEC,DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",47,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="",DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",48,0)
 ;I IOST?1"C-".E W *7,!,"Press RETURN to continue or ""^"" to stop    " R ANS:DTIME S:ANS=U!('$T) XCN="ZZZZ" I '$T S DVBAQUIT=1
"RTN","DVBAB98",49,0)
 Q
"RTN","DVBAB98",50,0)
 ;
"RTN","DVBAB98",51,0)
PRINTD ;create delimited re-admission report
"RTN","DVBAB98",52,0)
 N DVBATMP,X,X1,X2,X3
"RTN","DVBAB98",53,0)
 D:('$D(^XTMP("DVBA_READMISSION_RPT"_$J,0))) COLHDR
"RTN","DVBAB98",54,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=PNAM_DVBADLMTR_SSN_DVBADLMTR_CFLOC_DVBADLMTR_CNUM_DVBADLMTR_RCVPEN_DVBADLMTR_RCVAA_DVBADLMTR
"RTN","DVBAB98",55,0)
 D ELIG
"RTN","DVBAB98",56,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=^TMP("DVBAR",$J,DVBABCNT)_ADMDT_DVBADLMTR_DIAG_DVBADLMTR_DCHGDT_DVBADLMTR_TDIS_DVBADLMTR_BEDSEC_DVBADLMTR
"RTN","DVBAB98",57,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=^TMP("DVBAR",$J,DVBABCNT)_LADMDT_DVBADLMTR_LDIAG_DVBADLMTR_LDCHGDT_DVBADLMTR_LTDIS_DVBADLMTR_LBEDSEC
"RTN","DVBAB98",58,0)
 ;
"RTN","DVBAB98",59,0)
 S DVBATMP=^TMP("DVBAR",$J,DVBABCNT)
"RTN","DVBAB98",60,0)
 S X=$P(DVBATMP,DVBADLMTR,2)
"RTN","DVBAB98",61,0)
 I $L(X)'>9 S X=""""_$E("000000000",1,9-$L(X))_X_"""",X1=$E(X,1,4),X2=$E(X,5,6),X3=$E(X,7,11),X=X1_"-"_X2_"-"_X3
"RTN","DVBAB98",62,0)
 I $E(X,10,10)'?.N S X=""""_$E("0000000000",1,10-$L(X))_X_"""",X1=$E(X,1,4),X2=$E(X,5,6),X3=$E(X,7,12),X=X1_"-"_X2_"-"_X3
"RTN","DVBAB98",63,0)
 S $P(DVBATMP,DVBADLMTR,2)=X
"RTN","DVBAB98",64,0)
 S X=$P(DVBATMP,DVBADLMTR,4)
"RTN","DVBAB98",65,0)
 S X=$C(160)_X
"RTN","DVBAB98",66,0)
 S $P(DVBATMP,DVBADLMTR,4)=X
"RTN","DVBAB98",67,0)
 F I=1:1:$L(DVBATMP,DVBADLMTR) I $P(DVBATMP,DVBADLMTR,I)["," S $P(DVBATMP,DVBADLMTR,I)=""""_$P(DVBATMP,DVBADLMTR,I)_""""
"RTN","DVBAB98",68,0)
 S DVBATMP=$TR(DVBATMP,DVBADLMTR,",")
"RTN","DVBAB98",69,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=DVBATMP
"RTN","DVBAB98",70,0)
 ;
"RTN","DVBAB98",71,0)
 S DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",72,0)
 Q
"RTN","DVBAB98",73,0)
 ;
"RTN","DVBAB98",74,0)
PRINT S NODTA=1 S (SORTDT,XCN,XCFLOC,ANS)=""
"RTN","DVBAB98",75,0)
 I $D(^TMP("DVBA",DVBAT,$J)) F XLINE=1:1:5 W ?5,$S(DVBAT="PEN":MSG,DVBAT="A&A":MSG1,1:""),!!
"RTN","DVBAB98",76,0)
 F G=0:0 S SORTDT=$O(^TMP("DVBA",DVBAT,$J,SORTDT)) Q:SORTDT=""  F DVBAM=0:0 S XCN=$O(^TMP("DVBA",DVBAT,$J,SORTDT,XCN)) Q:XCN=""  D PRINT1
"RTN","DVBAB98",77,0)
 Q
"RTN","DVBAB98",78,0)
PRINT1 F J=0:0 S XCFLOC=$O(^TMP("DVBA",DVBAT,$J,SORTDT,XCN,XCFLOC)) Q:XCFLOC=""  F K=0:0 S K=$O(^TMP("DVBA",DVBAT,$J,SORTDT,XCN,XCFLOC,K)) Q:K=""  D PRINTC
"RTN","DVBAB98",79,0)
 Q
"RTN","DVBAB98",80,0)
PRINTC F DA=0:0 S DA=$O(^TMP("DVBA",DVBAT,$J,SORTDT,XCN,XCFLOC,K,DA)) Q:DA=""  S DATA=^(DA) D PRINTB
"RTN","DVBAB98",81,0)
 Q
"RTN","DVBAB98",82,0)
 ;
"RTN","DVBAB98",83,0)
KILL K ^TMP("DVBA","A&A",$J),^TMP("DVBA","PEN",$J)
"RTN","DVBAB98",84,0)
 K:(DVBAFNLDTE=$P(EDATE,".")) ^XTMP("DVBA_READMISSION_RPT"_$J,0)
"RTN","DVBAB98",85,0)
 D ^%ZISC S X=7 D:$D(ZTQUEUED) KILL^%ZTLOAD G FINAL^DVBAUTIL
"RTN","DVBAB98",86,0)
 ;
"RTN","DVBAB98",87,0)
ELIG S ELIG=DVBAELIG,INCMP=0
"RTN","DVBAB98",88,0)
 W "Eligibility: "
"RTN","DVBAB98",89,0)
 I ELIG]"" S ELIG=ELIG_" ("_$S(DVBAELST="P":"Pend Ver",DVBAELST="R":"Pend Re-verif",DVBAELST="V":"Verified",1:"Not Verified")_")"
"RTN","DVBAB98",90,0)
 I $D(^DPT(DA,.29)),$P(^(.29),U,1)]"" S INCMP=1 ;date ruled incomp, VA
"RTN","DVBAB98",91,0)
 I $D(^DPT(DA,.29)),$P(^(.29),U,12)=1 S INCMP=1 ;ruled incomp field
"RTN","DVBAB98",92,0)
 W ELIG_$S(ELIG]"":", ",1:"") W:$X>60 !?14 W $S(INCMP=1:"Incompetent",1:""),!
"RTN","DVBAB98",93,0)
 Q
"RTN","DVBAB98",94,0)
 ;
"RTN","DVBAB98",95,0)
COLHDR ;Column header for delimited report
"RTN","DVBAB98",96,0)
 N DVBADLMTR
"RTN","DVBAB98",97,0)
 S DVBADLMTR=","
"RTN","DVBAB98",98,0)
 S ^TMP("DVBAR",$J,DVBABCNT)="Patient"_DVBADLMTR_"SSN"_DVBADLMTR_"Claim Folder Loc"_DVBADLMTR
"RTN","DVBAB98",99,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=(^TMP("DVBAR",$J,DVBABCNT))_"Claim #"_DVBADLMTR_"Pension"_DVBADLMTR_"A&A"_DVBADLMTR
"RTN","DVBAB98",100,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=(^TMP("DVBAR",$J,DVBABCNT))_"Current Admission Date"_DVBADLMTR_"Current Admitting Diagnosis"_DVBADLMTR
"RTN","DVBAB98",101,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=(^TMP("DVBAR",$J,DVBABCNT))_"Current Discharge Date"_DVBADLMTR_"Current Discharge Type"_DVBADLMTR
"RTN","DVBAB98",102,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=(^TMP("DVBAR",$J,DVBABCNT))_"Current Bed Service"_DVBADLMTR_"Prior Admission Date"_DVBADLMTR
"RTN","DVBAB98",103,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=(^TMP("DVBAR",$J,DVBABCNT))_"Prior Admitting Diagnosis"_DVBADLMTR_"Prior Discharge Date"_DVBADLMTR
"RTN","DVBAB98",104,0)
 S ^TMP("DVBAR",$J,DVBABCNT)=(^TMP("DVBAR",$J,DVBABCNT))_"Prior Discharge Type"_DVBADLMTR_"Prior Bed Service"
"RTN","DVBAB98",105,0)
 S DVBABCNT=DVBABCNT+1
"RTN","DVBAB98",106,0)
 S ^XTMP("DVBA_READMISSION_RPT"_$J,0)=DT_U_DT
"RTN","DVBAB98",107,0)
 Q
"RTN","DVBABEBD")
0^15^B8904032^B3978273
"RTN","DVBABEBD",1,0)
DVBABEBD ;ALB - CAPRI EXAM BY DATE REPORT;09/13/04 ; 2/10/11 12:12pm
"RTN","DVBABEBD",2,0)
 ;;2.7;AMIE;**57,108,185**;Apr 10, 1995;Build 18
"RTN","DVBABEBD",3,0)
 Q
"RTN","DVBABEBD",4,0)
 ;
"RTN","DVBABEBD",5,0)
EXAMBYDT(MSG,BEGDT,ENDDT,DVBADLMTR) ; CALLED BY REMOTE PROCEDURE DVBAB EXAMS BY DATE
"RTN","DVBABEBD",6,0)
 N DVBABCNT,DVBABIEN,DVBABPAT,DVBABT,DVBAB0,DVBABT1,DVBABT2,DVBABT3,DVBABT4,DVBABT5,DVBABT6,DFN
"RTN","DVBABEBD",7,0)
 S DVBADLMTR=$S($G(DVBADLMTR)=1:",",1:0)
"RTN","DVBABEBD",8,0)
 K ^TMP("DVBABEBD",DUZ) D SETSTAT
"RTN","DVBABEBD",9,0)
 I $G(DVBADLMTR)="," D
"RTN","DVBABEBD",10,0)
 . S ^TMP("DVBABEBD",DUZ,1)="SSN"_DVBADLMTR_"PATIENT NAME"_DVBADLMTR_"REQUEST DATE"_DVBADLMTR_"DATE RELEASED"_DVBADLMTR_"DATE PRINTED BY RO"_DVBADLMTR_"REQUEST STATUS"_$C(13)
"RTN","DVBABEBD",11,0)
 S DVBABCNT=$S(DVBADLMTR'=",":1,1:2),DVBABIEN=0,MSG=$NA(^TMP("DVBABEBD",DUZ))
"RTN","DVBABEBD",12,0)
 F  S DVBABIEN=$O(^DVB(396.3,DVBABIEN)) Q:+DVBABIEN=0  D 
"RTN","DVBABEBD",13,0)
 . ;REQUEST DATE
"RTN","DVBABEBD",14,0)
 . S DVBAB0=$G(^DVB(396.3,DVBABIEN,0)) Q:DVBAB0=""
"RTN","DVBABEBD",15,0)
 . S DVBABPAT=$G(^DPT($P(DVBAB0,"^"),0)) Q:DVBABPAT=""
"RTN","DVBABEBD",16,0)
 . S DVBABT2=$P($P(DVBAB0,"^",2),".")
"RTN","DVBABEBD",17,0)
 . I (DVBABT2>(BEGDT-1))&(DVBABT2<(ENDDT+1)) D
"RTN","DVBABEBD",18,0)
 .. S DVBABT1=$P(DVBABPAT,"^",1) ;PATIENT NAME
"RTN","DVBABEBD",19,0)
 .. S DFN=$P(DVBAB0,"^") D DEM^VADPT I $G(VADM(1))'="" S DVBABT6=$S($G(DVBADLMTR)=",":$P($G(VADM(2)),U,2),1:$P($G(VADM(2)),U,1))  ;SSN
"RTN","DVBABEBD",20,0)
 .. S DVBABT3=$P($P(DVBAB0,"^",14),".") ;DATE RELEASED
"RTN","DVBABEBD",21,0)
 .. S DVBABT4=$P($P(DVBAB0,"^",16),".") ;DATE PRINTED BY RO
"RTN","DVBABEBD",22,0)
 .. S DVBABT5=$P(DVBAB0,"^",18) ;REQUEST STATUS
"RTN","DVBABEBD",23,0)
 .. S:$D(DVBABT(DVBABT5)) DVBABT5=DVBABT(DVBABT5)
"RTN","DVBABEBD",24,0)
 .. I $G(DVBADLMTR)'="," S ^TMP("DVBABEBD",DUZ,DVBABCNT)=DVBABT1_U_$$FMTE^XLFDT(DVBABT2,"5DZ")_U_$$FMTE^XLFDT(DVBABT3,"5DZ")_U_$$FMTE^XLFDT(DVBABT4,"5DZ")_U_DVBABT5_U_DVBABT6_$C(13)
"RTN","DVBABEBD",25,0)
 .. I $G(DVBADLMTR)="," S ^TMP("DVBABEBD",DUZ,DVBABCNT)=DVBABT6_DVBADLMTR_""""_DVBABT1_""""_DVBADLMTR_$$FMTE^XLFDT(DVBABT2,"5DZ")_DVBADLMTR_$$FMTE^XLFDT(DVBABT3,"5DZ")_DVBADLMTR_$$FMTE^XLFDT(DVBABT4,"5DZ")_DVBADLMTR_""""_DVBABT5_""""_$C(13)
"RTN","DVBABEBD",26,0)
 .. S DVBABCNT=DVBABCNT+1
"RTN","DVBABEBD",27,0)
 Q
"RTN","DVBABEBD",28,0)
 ;
"RTN","DVBABEBD",29,0)
SETSTAT S DVBABT("N")="NEW"
"RTN","DVBABEBD",30,0)
 S DVBABT("P")="PENDING, REPORTED"
"RTN","DVBABEBD",31,0)
 S DVBABT("S")="PENDING, SCHEDULED"
"RTN","DVBABEBD",32,0)
 S DVBABT("R")="RELEASED TO RO, NOT PRINTED"
"RTN","DVBABEBD",33,0)
 S DVBABT("C")="COMPLETED, PRINTED BY RO"
"RTN","DVBABEBD",34,0)
 S DVBABT("X")="CANCELLED BY MAS"
"RTN","DVBABEBD",35,0)
 S DVBABT("RX")="CANCELLED BY RO"
"RTN","DVBABEBD",36,0)
 S DVBABT("T")="TRANSCRIBED"
"RTN","DVBABEBD",37,0)
 S DVBABT("NT")="NEW, TRANSFERRED IN"
"RTN","DVBABEBD",38,0)
 S DVBABT("CT")="COMPLETE, TRANSFERRED OUT"
"RTN","DVBABEBD",39,0)
 Q
"RTN","DVBACEM1")
0^22^B3312829^n/a
"RTN","DVBACEM1",1,0)
DVBACEM1 ;BEST/JFW - DEMTRAN CONTRACTED EXAM UTILITIES ; 7/17/12 3:13pm
"RTN","DVBACEM1",2,0)
 ;;2.7;AMIE;**178,185**;Apr 10, 1995;Build 18
"RTN","DVBACEM1",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBACEM1",4,0)
 ;
"RTN","DVBACEM1",5,0)
 ;  - RPC: DVBAD CONTRACTED EXAM CRYPTO
"RTN","DVBACEM1",6,0)
 ;  
"RTN","DVBACEM1",7,0)
 ;  Encrypts/Decrypts strings, particulary USERNAME/PASSWORD in the
"RTN","DVBACEM1",8,0)
 ;  2507 EXAM CONTRACTORS File #396.45 for the Disability
"RTN","DVBACEM1",9,0)
 ;  Examination Management Tracking, Referral and Notification
"RTN","DVBACEM1",10,0)
 ;  application (demTRAN).
"RTN","DVBACEM1",11,0)
 ;
"RTN","DVBACEM1",12,0)
 ;Input:
"RTN","DVBACEM1",13,0)
 ;     DVBAOVAL:   Holds single value or '^' delimited encrypted / 
"RTN","DVBACEM1",14,0)
 ;                 decrypted results
"RTN","DVBACEM1",15,0)
 ;     DVBAETYP:   Type of Cryptography to perform (Required)
"RTN","DVBACEM1",16,0)
 ;                   1 : Encryption
"RTN","DVBACEM1",17,0)
 ;                   2 : Decryption
"RTN","DVBACEM1",18,0)
 ;     DVBAIVAL:   Single value or '^' delimited string values
"RTN","DVBACEM1",19,0)
 ;                 to perform Cryptography action on (Required)
"RTN","DVBACEM1",20,0)
 ;Ouput:
"RTN","DVBACEM1",21,0)
 ;     See DVBAOVAL above
"RTN","DVBACEM1",22,0)
 ;
"RTN","DVBACEM1",23,0)
EN(DVBAOVAL,DVBAETYP,DVBAIVAL) ;Cryptography Entry Point
"RTN","DVBACEM1",24,0)
 N DVBAIDNUM
"RTN","DVBACEM1",25,0)
 S DVBAIDNUM=290134528  ;Identification Number for Cryptography
"RTN","DVBACEM1",26,0)
 S:(DVBAETYP=1) DVBAOVAL=$$ENCRYP(DVBAIVAL,DVBAIDNUM)  ;Encryption
"RTN","DVBACEM1",27,0)
 S:(DVBAETYP=2) DVBAOVAL=$$DECRYP(DVBAIVAL,DVBAIDNUM)  ;Decryption
"RTN","DVBACEM1",28,0)
 Q
"RTN","DVBACEM1",29,0)
 ;
"RTN","DVBACEM1",30,0)
 ;Input:
"RTN","DVBACEM1",31,0)
 ;     DVBAIVAL:   Single value or '^' delimited string values
"RTN","DVBACEM1",32,0)
 ;                 to perform Cryptography action on (Required)
"RTN","DVBACEM1",33,0)
 ;     DVBAID:     Identification Number to use in Encryption
"RTN","DVBACEM1",34,0)
 ;Output:
"RTN","DVBACEM1",35,0)
 ;     Returns Single or '^' delimitted encrypted values.
"RTN","DVBACEM1",36,0)
ENCRYP(DVBAIVAL,DVBAID)  ;Encryption Entry Point
"RTN","DVBACEM1",37,0)
 N X,X1,X2,DVBAI,DVBARSLT
"RTN","DVBACEM1",38,0)
 Q:((DVBAIVAL="")!(DVBAID=""))
"RTN","DVBACEM1",39,0)
 ;Encrypt each value in string
"RTN","DVBACEM1",40,0)
 F DVBAI=1:1:$L(DVBAIVAL,"^")  D
"RTN","DVBACEM1",41,0)
 .S X=$P(DVBAIVAL,"^",DVBAI),X1=DVBAID,X2=1
"RTN","DVBACEM1",42,0)
 .D EN^XUSHSHP  ;DBIA 10045 - Supported
"RTN","DVBACEM1",43,0)
 .S $P(DVBARSLT,"^",DVBAI)=X
"RTN","DVBACEM1",44,0)
 Q DVBARSLT
"RTN","DVBACEM1",45,0)
 ;
"RTN","DVBACEM1",46,0)
 ;Input:
"RTN","DVBACEM1",47,0)
 ;     DVBAIVAL:   Single value or '^' delimited string values
"RTN","DVBACEM1",48,0)
 ;                 to perform Cryptography action on (Required)
"RTN","DVBACEM1",49,0)
 ;     DVBAID:     Identification Number to use in Decryption
"RTN","DVBACEM1",50,0)
 ;Output:
"RTN","DVBACEM1",51,0)
 ;     Returns Single or '^' delimitted decrypted values.
"RTN","DVBACEM1",52,0)
DECRYP(DVBAIVAL,DVBAID)  ;Decryption Entry Point
"RTN","DVBACEM1",53,0)
 N X,X1,X2,DVBAI,DVBARSLT
"RTN","DVBACEM1",54,0)
 Q:((DVBAIVAL="")!(DVBAID=""))
"RTN","DVBACEM1",55,0)
 ;Decrypt each value in string
"RTN","DVBACEM1",56,0)
 F DVBAI=1:1:$L(DVBAIVAL,"^")  D
"RTN","DVBACEM1",57,0)
 .S X=$P(DVBAIVAL,"^",DVBAI),X1=DVBAID,X2=1
"RTN","DVBACEM1",58,0)
 .D DE^XUSHSHP  ;DBIA 10045 - Supported
"RTN","DVBACEM1",59,0)
 .S $P(DVBARSLT,"^",DVBAI)=X
"RTN","DVBACEM1",60,0)
 Q DVBARSLT
"RTN","DVBACER1")
0^21^B97387784^n/a
"RTN","DVBACER1",1,0)
DVBACER1 ;BEST/JFW - DEMTRAN CONTRACTED EXAM REPORTS ; 6/27/12 3:56pm
"RTN","DVBACER1",2,0)
 ;;2.7;AMIE;**178,185**;Apr 10, 1995;Build 18
"RTN","DVBACER1",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBACER1",4,0)
 ;
"RTN","DVBACER1",5,0)
 ;  - RPC: DVBAD CONTRACTED EXAM REPORTS
"RTN","DVBACER1",6,0)
 ;  
"RTN","DVBACER1",7,0)
 ;  Creates Detailed, Summary, or Timeliness Contracted Exam Reports
"RTN","DVBACER1",8,0)
 ;  for the Disability Examination Management Tracking, Referral and
"RTN","DVBACER1",9,0)
 ;  Notification application (demTRAN).
"RTN","DVBACER1",10,0)
 ;
"RTN","DVBACER1",11,0)
 ;Input:
"RTN","DVBACER1",12,0)
 ;     DVBALST:   Global array to hold results to be returned
"RTN","DVBACER1",13,0)
 ;     DVBARTYP:  Report Type to Generate (Required)
"RTN","DVBACER1",14,0)
 ;                 D : Detailed
"RTN","DVBACER1",15,0)
 ;                 S : Summary
"RTN","DVBACER1",16,0)
 ;                 T : Timeliness
"RTN","DVBACER1",17,0)
 ;     DVBAFLTRS: Report Filters (Optional)
"RTN","DVBACER1",18,0)
 ;        ("DATE")       = FM From Date ^ FM To Date (Inclusive) 
"RTN","DVBACER1",19,0)
 ;        ("CONTRACTOR") = IEN of Contractor in 396.45
"RTN","DVBACER1",20,0)
 ;        ("PENDING")    = 1 indicating Pending Exams Only ^
"RTN","DVBACER1",21,0)
 ;                         # of Days Referral Exceeded (Optional)
"RTN","DVBACER1",22,0)
 ;        ("SORT")       = 1 indicating Contractor sorted else
"RTN","DVBACER1",23,0)
 ;                         Request DTM sorted (Detailed Reports Only)
"RTN","DVBACER1",24,0)
 ;        ("DELIMITTED") = 1 indicating Report returned Delimitted
"RTN","DVBACER1",25,0)
 ;                         (Detailed Reports Only)
"RTN","DVBACER1",26,0)
 ;
"RTN","DVBACER1",27,0)
CERPTS(DVBALST,DVBARTYP,DVBAFLTRS) ;Contracted Exam Reports
"RTN","DVBACER1",28,0)
 N DVBAQ,DVBASDTE,DVBAEDTE,DVBACIEN,DVBAPEXMS,DVBAPDAYS,DVBAHFS
"RTN","DVBACER1",29,0)
 N DVBARIEN,DVBAEIEN,DVBAENDE,DVBAGLBL,DVBARSLTS,DVBASCRH
"RTN","DVBACER1",30,0)
 N DVBACSRT,DVBADLMT,X1,X2,X,%H,%Y
"RTN","DVBACER1",31,0)
 S DVBAHFS=$$GETHFS()
"RTN","DVBACER1",32,0)
 S DVBASCRH=$NA(^TMP($J,"DVBASCRATCH"))
"RTN","DVBACER1",33,0)
 S DVBAGLBL=$NA(^TMP($J,"DVBA"_$G(DVBARTYP)_"RPTS"))
"RTN","DVBACER1",34,0)
 S DVBARSLTS=$NA(^TMP("DVBA"_$G(DVBARTYP)_"RSLTS",$J,1))
"RTN","DVBACER1",35,0)
 K @DVBAGLBL,@DVBARSLTS,@DVBASCRH
"RTN","DVBACER1",36,0)
 Q:($$OPENHFS("DVBRP",DVBAHFS,"W",DVBARSLTS))  ;Quit if error
"RTN","DVBACER1",37,0)
 U IO
"RTN","DVBACER1",38,0)
 ; Initial start values if filters undefined
"RTN","DVBACER1",39,0)
 S (DVBAEDTE,DVBACIEN)=""
"RTN","DVBACER1",40,0)
 S (DVBASDTE,DVBAPEXMS,DVBAPDAYS,DVBACSRT,DVBADLMT)=0
"RTN","DVBACER1",41,0)
 ;
"RTN","DVBACER1",42,0)
 ;Date filter defined, set loop conditions
"RTN","DVBACER1",43,0)
 D:($D(DVBAFLTRS("DATE")))
"RTN","DVBACER1",44,0)
 .S DVBASDTE=$P($G(DVBAFLTRS("DATE")),"^")_".2359"
"RTN","DVBACER1",45,0)
 .S X1=DVBASDTE,X2=-1 D C^%DTC S DVBASDTE=X
"RTN","DVBACER1",46,0)
 .S DVBAEDTE=$P($G(DVBAFLTRS("DATE")),"^",2)_".2359"
"RTN","DVBACER1",47,0)
 ;Contractor filter defined
"RTN","DVBACER1",48,0)
 S:($D(DVBAFLTRS("CONTRACTOR"))) DVBACIEN=$G(DVBAFLTRS("CONTRACTOR"))
"RTN","DVBACER1",49,0)
 ;Pending Exam filter defined
"RTN","DVBACER1",50,0)
 D:($D(DVBAFLTRS("PENDING")))
"RTN","DVBACER1",51,0)
 .S DVBAPEXMS=1,DVBAPDAYS=+$P($G(DVBAFLTRS("PENDING")),"^",2)
"RTN","DVBACER1",52,0)
 ;Sorting (Contractor or Request DTM - for Detailed Reports Only)
"RTN","DVBACER1",53,0)
 S:($D(DVBAFLTRS("SORT"))) DVBACSRT=1
"RTN","DVBACER1",54,0)
 ;Delimitted Output (for Detailed Reports Only)
"RTN","DVBACER1",55,0)
 S:($D(DVBAFLTRS("DELIMITTED"))) DVBADLMT=1
"RTN","DVBACER1",56,0)
 ;
"RTN","DVBACER1",57,0)
 ;Get Contractor(s) list for Timeliness and Summary Reports
"RTN","DVBACER1",58,0)
 ; if specific contractor NOT defined
"RTN","DVBACER1",59,0)
 D:(($G(DVBARTYP)'="D")&(DVBACIEN']"")) CONLST(DVBACIEN,DVBARSLTS)
"RTN","DVBACER1",60,0)
 ;
"RTN","DVBACER1",61,0)
 ;Use "C" X-REF so results are in Date/Time Order
"RTN","DVBACER1",62,0)
 F  S DVBASDTE=$O(^DVB(396.3,"C",DVBASDTE)) Q:('+DVBASDTE)!((DVBAEDTE]"")&(DVBASDTE>DVBAEDTE))  D
"RTN","DVBACER1",63,0)
 .S DVBARIEN=""  ;In case there is more than 1 request ien for dtm
"RTN","DVBACER1",64,0)
 .F  S DVBARIEN=$O(^DVB(396.3,"C",DVBASDTE,DVBARIEN)) Q:'+DVBARIEN  D
"RTN","DVBACER1",65,0)
 ..;Use "C" X-REF for retrieving exams for request IEN
"RTN","DVBACER1",66,0)
 ..S DVBAEIEN=""
"RTN","DVBACER1",67,0)
 ..F  S DVBAEIEN=$O(^DVB(396.4,"C",DVBARIEN,DVBAEIEN)) Q:'+DVBAEIEN  D
"RTN","DVBACER1",68,0)
 ...S DVBAENDE=$G(^DVB(396.4,DVBAEIEN,"CNTRCTR"))
"RTN","DVBACER1",69,0)
 ...;Ignore exams that have NOT been contracted out
"RTN","DVBACER1",70,0)
 ...Q:($P(DVBAENDE,"^",2)']"")
"RTN","DVBACER1",71,0)
 ...;Ignore exams NOT for specified contractor if defined
"RTN","DVBACER1",72,0)
 ...Q:((DVBACIEN]"")&(DVBACIEN'=(+DVBAENDE)))
"RTN","DVBACER1",73,0)
 ...;TIMELINESS REPORTING
"RTN","DVBACER1",74,0)
 ...D:($G(DVBARTYP)="T") TRPTS(DVBAENDE,DVBAGLBL,DVBARSLTS)
"RTN","DVBACER1",75,0)
 ...;DETAILED & SUMMARY REPORTING
"RTN","DVBACER1",76,0)
 ...D:($G(DVBARTYP)'="T")
"RTN","DVBACER1",77,0)
 ....S DVBAQ=0
"RTN","DVBACER1",78,0)
 ....I (DVBAPEXMS) D  Q:(DVBAQ)  ;Pending Exams
"RTN","DVBACER1",79,0)
 .....;Ignore Exams NOT received back from contractor
"RTN","DVBACER1",80,0)
 .....S:($P(DVBAENDE,"^",3)]"") DVBAQ=1
"RTN","DVBACER1",81,0)
 .....D:(('DVBAQ)&(DVBAPDAYS]""))
"RTN","DVBACER1",82,0)
 ......;Ignore Pending Exams less than requested days
"RTN","DVBACER1",83,0)
 ......S X1=DT,X2=$P(DVBAENDE,"^",2) D ^%DTC
"RTN","DVBACER1",84,0)
 ......S:(X<=DVBAPDAYS) DVBAQ=1
"RTN","DVBACER1",85,0)
 ....D:($G(DVBARTYP)="D") DRPTS(DVBACSRT,DVBARIEN,DVBAEIEN,DVBASCRH)
"RTN","DVBACER1",86,0)
 ....D:($G(DVBARTYP)="S") SRPTS(DVBARIEN,DVBAENDE,DVBAGLBL,DVBARSLTS)
"RTN","DVBACER1",87,0)
 D:($G(DVBARTYP)="D") DSPLYDTL(DVBACSRT,DVBACIEN,DVBAPEXMS,DVBASCRH,DVBADLMT)  ;Rpt Details
"RTN","DVBACER1",88,0)
 D CLOSEHFS("DVBRP",DVBAHFS,DVBARSLTS)
"RTN","DVBACER1",89,0)
 S DVBALST=$NA(@DVBARSLTS)
"RTN","DVBACER1",90,0)
 K @DVBAGLBL,@DVBASCRH
"RTN","DVBACER1",91,0)
 Q
"RTN","DVBACER1",92,0)
 ;
"RTN","DVBACER1",93,0)
 ;Input  DVBACIEN - Specific Contrator Data Requested
"RTN","DVBACER1",94,0)
 ;       DVBARSLTS - Global Refernece for results
"RTN","DVBACER1",95,0)
 ;Output Global Array Entries Added for Contractor(s)
"RTN","DVBACER1",96,0)
 ;       ^TMP("DVBATRSLTS",$J)
"RTN","DVBACER1",97,0)
CONLST(DVBACIEN,DVBARSLTS) ;Get Contractor List
"RTN","DVBACER1",98,0)
 ;Used in Timeliness and Summary Reports
"RTN","DVBACER1",99,0)
 N DVBACNDE
"RTN","DVBACER1",100,0)
 ;Specific Contractor Info Requested
"RTN","DVBACER1",101,0)
 I (DVBACIEN]"") D  Q
"RTN","DVBACER1",102,0)
 .S DVBACNDE=$G(^DVB(396.45,DVBACIEN,0))
"RTN","DVBACER1",103,0)
 .S @DVBARSLTS@(DVBACIEN)=$P(DVBACNDE,"^")_"^"_$P(DVBACNDE,"^",3)_"^"
"RTN","DVBACER1",104,0)
 ;All Contractor Info Requested
"RTN","DVBACER1",105,0)
 S DVBACIEN=0 F  S DVBACIEN=$O(^DVB(396.45,DVBACIEN)) Q:'+DVBACIEN  D
"RTN","DVBACER1",106,0)
 .S DVBACNDE=$G(^DVB(396.45,DVBACIEN,0))
"RTN","DVBACER1",107,0)
 .;Create list of contractor info and initialize counters
"RTN","DVBACER1",108,0)
 .; for the specific report to 0
"RTN","DVBACER1",109,0)
 .S @DVBARSLTS@($P(DVBACNDE,"^"),DVBACIEN)=$P(DVBACNDE,"^")_"^"_$P(DVBACNDE,"^",3)_"^0"
"RTN","DVBACER1",110,0)
 .S:($G(DVBARTYP)="S") @DVBARSLTS@($P(DVBACNDE,"^"),DVBACIEN)=@DVBARSLTS@($P(DVBACNDE,"^"),DVBACIEN)_"^0"
"RTN","DVBACER1",111,0)
 Q
"RTN","DVBACER1",112,0)
 ;
"RTN","DVBACER1",113,0)
 ;Input  DVBACSRT - 1/0 if report should be sorted by Contractor
"RTN","DVBACER1",114,0)
 ;                  Name (1) or by Request Date (0)
"RTN","DVBACER1",115,0)
 ;       DVBARIEN - IEN of Request (396.3) associated with Exam
"RTN","DVBACER1",116,0)
 ;       DVBAEIEN - IEN of Exam (396.4)
"RTN","DVBACER1",117,0)
 ;       DVBASCRH - Global Reference for results (Scratch Global)
"RTN","DVBACER1",118,0)
 ;Output Global Array Entry Added (Sorted) - ^TMP($J,"DVBASCRH")
"RTN","DVBACER1",119,0)
DRPTS(DVBACSRT,DVBARIEN,DVBAEIEN,DVBASCRH) ; Detailed Report Processing
"RTN","DVBACER1",120,0)
 N DVBACNME,DVBAENME,DVBARDTM,DVBAEXM
"RTN","DVBACER1",121,0)
 ;Retrieve Exam Info
"RTN","DVBACER1",122,0)
 D GETS^DIQ(396.4,DVBAEIEN_",",".03;100","E","DVBAEXM")
"RTN","DVBACER1",123,0)
 S DVBACNME=$G(DVBAEXM(396.4,DVBAEIEN_",",100,"E"))  ;Contractor
"RTN","DVBACER1",124,0)
 S:(DVBACNME']"") DVBACNME="UNKNOWN"
"RTN","DVBACER1",125,0)
 S DVBAENME=$G(DVBAEXM(396.4,DVBAEIEN_",",.03,"E"))  ;Exam Name
"RTN","DVBACER1",126,0)
 S:(DVBAENME']"") DVBAENME="UNKNOWN"
"RTN","DVBACER1",127,0)
 S DVBAENME=$TR(DVBAENME,","," ")  ;Remove Commas
"RTN","DVBACER1",128,0)
 S DVBARDTM=$P($G(^DVB(396.3,DVBARIEN,0)),"^",2)  ;Request DateTime
"RTN","DVBACER1",129,0)
 S:('DVBACSRT) @DVBASCRH@(DVBARDTM,DVBARIEN,DVBAENME,DVBAEIEN)=""
"RTN","DVBACER1",130,0)
 S:(DVBACSRT) @DVBASCRH@($TR(DVBACNME,","," "),DVBARDTM,DVBARIEN,DVBAENME,DVBAEIEN)=DVBACNME
"RTN","DVBACER1",131,0)
 Q
"RTN","DVBACER1",132,0)
 ;
"RTN","DVBACER1",133,0)
 ;Input  DVBACSRT - 1/0 if report should be sorted by Contractor
"RTN","DVBACER1",134,0)
 ;                  Name (1) or by Request Date (0)
"RTN","DVBACER1",135,0)
 ;       DVBAEIEN  - IEN of Exam (396.4)
"RTN","DVBACER1",136,0)
 ;       DVBAPEXMS - 1/0 Indicates if only pending exams report
"RTN","DVBACER1",137,0)
 ;       DVBASCRH  - Global Reference for results (Scratch Global)
"RTN","DVBACER1",138,0)
 ;       DVBADLMT  - 1/0 if report output should be delimitted
"RTN","DVBACER1",139,0)
 ;                   Delimitted Output (1) or Formatted Output (0)
"RTN","DVBACER1",140,0)
 ;Output Write Report Details
"RTN","DVBACER1",141,0)
DSPLYDTL(DVBACSRT,DVBACIEN,DVBAPEXMS,DVBASCRH,DVBADLMT) ;Display Sorted Detailed Report Info
"RTN","DVBACER1",142,0)
 N DVBAREF,DVBACNME,DVBARIEN,DVBAINFO,DVBAOFST
"RTN","DVBACER1",143,0)
 N DVBASPCG,DVBALNE,DFN,VADM,X
"RTN","DVBACER1",144,0)
 D DRPTSPCG(DVBACSRT,DVBADLMT,.DVBASPCG)
"RTN","DVBACER1",145,0)
 S DVBAREF=DVBASCRH,DVBAOFST=0,(DVBACNME,DVBARIEN)=""
"RTN","DVBACER1",146,0)
 S:('DVBACSRT) DVBAOFST=1
"RTN","DVBACER1",147,0)
 ;Quit if no results found
"RTN","DVBACER1",148,0)
 Q:('$D(@DVBASCRH))
"RTN","DVBACER1",149,0)
 ;Report Column Header Info
"RTN","DVBACER1",150,0)
 W:((DVBACIEN']"")&(DVBACSRT)) "Contractor",$S(DVBADLMT:"^",1:"")
"RTN","DVBACER1",151,0)
 W:((DVBACIEN']"")&(DVBACSRT)&('DVBADLMT)) !
"RTN","DVBACER1",152,0)
 W ?DVBASPCG(1),"Request Date",$S(DVBADLMT:"^",1:""),?DVBASPCG(2),"SSN",$S(DVBADLMT:"^",1:"")
"RTN","DVBACER1",153,0)
 W ?DVBASPCG(3),"Patient Name",$S(DVBADLMT:"^",1:""),?DVBASPCG(4),"Status",$S(DVBADLMT:"^",1:"")
"RTN","DVBACER1",154,0)
 W:('DVBADLMT) !
"RTN","DVBACER1",155,0)
 W ?DVBASPCG(5),"Examinations",$S(DVBADLMT:"^",1:"")
"RTN","DVBACER1",156,0)
 W:(('DVBACSRT)&(DVBACIEN']"")) ?DVBASPCG(6),"Contractor",$S(DVBADLMT:"^",1:"")
"RTN","DVBACER1",157,0)
 W ?DVBASPCG(7),"Referred"
"RTN","DVBACER1",158,0)
 S DVBALNE=(DVBASPCG(7)+18)
"RTN","DVBACER1",159,0)
 D:('DVBAPEXMS) 
"RTN","DVBACER1",160,0)
 .W ?DVBASPCG(8),$S(DVBADLMT:"^",1:""),"Received"
"RTN","DVBACER1",161,0)
 .S DVBALNE=(DVBASPCG(8)+12)
"RTN","DVBACER1",162,0)
 S X="" S $P(X,"-",DVBALNE)="-" W:('DVBADLMT) !,X  ;Header Line
"RTN","DVBACER1",163,0)
 F  S DVBAREF=$Q(@DVBAREF) Q:(DVBAREF'[$P(DVBASCRH,")"))  D
"RTN","DVBACER1",164,0)
 .;Display Contractor Name, if NOT specific contractor report
"RTN","DVBACER1",165,0)
 .D:((DVBACIEN']"")&(DVBACSRT)&(DVBADLMT))  ; Delimitted Output
"RTN","DVBACER1",166,0)
 ..W !,@DVBAREF_"^"
"RTN","DVBACER1",167,0)
 .D:((DVBACNME'=@DVBAREF)&(DVBACIEN']"")&(DVBACSRT)&('DVBADLMT))  ;Formatted Output
"RTN","DVBACER1",168,0)
 ..W:(DVBACNME]"") !  ;Extra Line Space between Contractors
"RTN","DVBACER1",169,0)
 ..S DVBACNME=@DVBAREF
"RTN","DVBACER1",170,0)
 ..W !,DVBACNME
"RTN","DVBACER1",171,0)
 .;Display Request Info (Multiple Exams)
"RTN","DVBACER1",172,0)
 .D:(DVBARIEN'=$P(DVBAREF,",",(5-DVBAOFST)))
"RTN","DVBACER1",173,0)
 ..S DVBARIEN=$P(DVBAREF,",",(5-DVBAOFST))
"RTN","DVBACER1",174,0)
 ..S DFN=+$G(^DVB(396.3,DVBARIEN,0))  ; Patient
"RTN","DVBACER1",175,0)
 ..D DEM^VADPT  ;DBIA: 10061
"RTN","DVBACER1",176,0)
 ..D GETS^DIQ(396.3,DVBARIEN_",","17","E","DVBAINFO")
"RTN","DVBACER1",177,0)
 ..D:('DVBADLMT)  ;Formatted Report
"RTN","DVBACER1",178,0)
 ...W !?DVBASPCG(1),$$FMTE^XLFDT($P(DVBAREF,",",(4-DVBAOFST)),"M")  ;No Seconds
"RTN","DVBACER1",179,0)
 ...W ?DVBASPCG(2),$P($G(VADM(2)),"^",2),?DVBASPCG(3),$G(VADM(1))
"RTN","DVBACER1",180,0)
 ...W ?DVBASPCG(4),$G(DVBAINFO(396.3,DVBARIEN_",",17,"E"))
"RTN","DVBACER1",181,0)
 .D:(DVBADLMT)  ;Detailed Report
"RTN","DVBACER1",182,0)
 ..W:'((DVBACIEN']"")&(DVBACSRT)) !
"RTN","DVBACER1",183,0)
 ..W $$FMTE^XLFDT($P(DVBAREF,",",(4-DVBAOFST)),"M")_"^"  ;No Seconds
"RTN","DVBACER1",184,0)
 ..W $P($G(VADM(2)),"^",2)_"^"_$G(VADM(1))_"^"
"RTN","DVBACER1",185,0)
 ..W $G(DVBAINFO(396.3,DVBARIEN_",",17,"E"))_"^"
"RTN","DVBACER1",186,0)
 .;Exam Info for Request
"RTN","DVBACER1",187,0)
 .D EXMINFO(DVBAPEXMS,+$P(DVBAREF,",",(7-DVBAOFST)),DVBACSRT,DVBADLMT,.DVBASPCG)
"RTN","DVBACER1",188,0)
 K DVBAINFO,VADM
"RTN","DVBACER1",189,0)
 Q
"RTN","DVBACER1",190,0)
 ;
"RTN","DVBACER1",191,0)
 ;Input  DVBAPEXMS - 1/0 Indicates if only pending exams report
"RTN","DVBACER1",192,0)
 ;       DVBAEIEN  - IEN of Exam (396.4)
"RTN","DVBACER1",193,0)
 ;       DVBACSRT  - 1/0 if report should be sorted by Contractor
"RTN","DVBACER1",194,0)
 ;                   Name (1) or by Request Date (0)
"RTN","DVBACER1",195,0)
 ;       DVBADLMT  - 1/0 if report output should be delimitted
"RTN","DVBACER1",196,0)
 ;                   Delimitted Output (1) or Formatted Output (0)
"RTN","DVBACER1",197,0)
 ;       DVBASPCG  - Array to store spacing (By Ref)
"RTN","DVBACER1",198,0)
 ;Output Write EXAM Info for request to report
"RTN","DVBACER1",199,0)
EXMINFO(DVBAPEXMS,DVBAEIEN,DVBACSRT,DVBADLMT,DVBASPCG) ;Display Exam Info
"RTN","DVBACER1",200,0)
 N DVBAEXM
"RTN","DVBACER1",201,0)
 ;Retrieve exam info for display on report
"RTN","DVBACER1",202,0)
 D GETS^DIQ(396.4,DVBAEIEN_",",".03;100;101;102","EI","DVBAEXM")
"RTN","DVBACER1",203,0)
 W:('DVBADLMT) !
"RTN","DVBACER1",204,0)
 W ?DVBASPCG(5),$G(DVBAEXM(396.4,DVBAEIEN_",",.03,"E")),$S(DVBADLMT:"^",1:"")
"RTN","DVBACER1",205,0)
 W:('DVBACSRT) ?DVBASPCG(6),$G(DVBAEXM(396.4,DVBAEIEN_",",100,"E")),$S(DVBADLMT:"^",1:"")
"RTN","DVBACER1",206,0)
 W ?DVBASPCG(7),$$FMTE^XLFDT($P($G(DVBAEXM(396.4,DVBAEIEN_",",101,"I")),"@"),"M"),$S(DVBADLMT:"^",1:"")
"RTN","DVBACER1",207,0)
 W:('DVBAPEXMS) ?DVBASPCG(8),$P($G(DVBAEXM(396.4,DVBAEIEN_",",102,"E")),"@")
"RTN","DVBACER1",208,0)
 Q
"RTN","DVBACER1",209,0)
 ;
"RTN","DVBACER1",210,0)
 ;Input  DVBACSRT - 1/0 if report should be sorted by Contractor
"RTN","DVBACER1",211,0)
 ;                  Name (1) or by Request Date (0)
"RTN","DVBACER1",212,0)
 ;       DVBADLMT - 1/0 if report output should be delimitted
"RTN","DVBACER1",213,0)
 ;                  Delimitted Output (1) or Formatted Output (0)
"RTN","DVBACER1",214,0)
 ;       DVBASPCG - Array to store spacing (By Ref)
"RTN","DVBACER1",215,0)
DRPTSPCG(DVBACSRT,DVBADLMT,DVBASPCG) ;Setup Detailed Report Spacing
"RTN","DVBACER1",216,0)
 N DVBAOFST,DVBAI
"RTN","DVBACER1",217,0)
 S DVBAOFST=0 S:('DVBACSRT&'DVBADLMT) DVBAOFST=3
"RTN","DVBACER1",218,0)
 K DVBASPCG
"RTN","DVBACER1",219,0)
 D:(DVBADLMT)
"RTN","DVBACER1",220,0)
 .F DVBAI=1:1:8  S DVBASPCG(DVBAI)=0
"RTN","DVBACER1",221,0)
 D:('DVBADLMT)
"RTN","DVBACER1",222,0)
 .S DVBASPCG(1)=3-DVBAOFST,DVBASPCG(2)=23-DVBAOFST
"RTN","DVBACER1",223,0)
 .S DVBASPCG(3)=36-DVBAOFST,DVBASPCG(4)=68-DVBAOFST
"RTN","DVBACER1",224,0)
 .S DVBASPCG(5)=5-DVBAOFST,DVBASPCG(6)=70-DVBAOFST
"RTN","DVBACER1",225,0)
 .S:(DVBACSRT) DVBASPCG(7)=70-DVBAOFST,DVBASPCG(8)=91-DVBAOFST
"RTN","DVBACER1",226,0)
 .S:('DVBACSRT) DVBASPCG(7)=101,DVBASPCG(8)=121
"RTN","DVBACER1",227,0)
 Q
"RTN","DVBACER1",228,0)
 ;
"RTN","DVBACER1",229,0)
 ;Input  DVBARIEN - IEN of Request (396.3) associated with Exam
"RTN","DVBACER1",230,0)
 ;       DVBACNDE - CNTRCTR Node for Exam IEN in 396.4
"RTN","DVBACER1",231,0)
 ;       DVBAGLBL - Global Reference for Requests Counted
"RTN","DVBACER1",232,0)
 ;       DVBARSLTS - Global Reference for results
"RTN","DVBACER1",233,0)
 ;Output Global Array Entries Updated for Contractor if applicable
"RTN","DVBACER1",234,0)
 ;       ^TMP($J,"DVBATRPTS") / ^TMP("DVBATRSLTS",$J)
"RTN","DVBACER1",235,0)
SRPTS(DVBARIEN,DVBACNDE,DVBAGLBL,DVBARSLTS) ;Summary Report Processing
"RTN","DVBACER1",236,0)
 N DVBACNTR,DVBACNME
"RTN","DVBACER1",237,0)
 S DVBACNME=$P($G(^DVB(396.45,+$P(DVBACNDE,"^"),0)),"^")
"RTN","DVBACER1",238,0)
 ;Retrieve current number of exams referred by contractor
"RTN","DVBACER1",239,0)
 S DVBACNTR=$P($G(@DVBARSLTS@(DVBACNME,+$P(DVBACNDE,"^"))),"^",3)
"RTN","DVBACER1",240,0)
 ;Increment Number of Exams referred for contractor
"RTN","DVBACER1",241,0)
 S $P(@DVBARSLTS@(DVBACNME,+$P(DVBACNDE,"^")),"^",3)=DVBACNTR+1
"RTN","DVBACER1",242,0)
 ;Increment 2507 Request Counter if IEN NOT already counted for Contractor
"RTN","DVBACER1",243,0)
 D:('$D(@DVBAGLBL@(+$P(DVBACNDE,"^"),DVBARIEN)))
"RTN","DVBACER1",244,0)
 .S @DVBAGLBL@(+$P(DVBACNDE,"^"),DVBARIEN)=""  ;Add request IEN to list
"RTN","DVBACER1",245,0)
 .S DVBACNTR=$P($G(@DVBARSLTS@(DVBACNME,+$P(DVBACNDE,"^"))),"^",4)
"RTN","DVBACER1",246,0)
 .;Increment # of 2507 Request referred to contractor
"RTN","DVBACER1",247,0)
 .S $P(@DVBARSLTS@(DVBACNME,+$P(DVBACNDE,"^")),"^",4)=DVBACNTR+1
"RTN","DVBACER1",248,0)
 Q
"RTN","DVBACER1",249,0)
 ;
"RTN","DVBACER1",250,0)
 ;Input  DVBACNDE - CNTRCTR Node for Exam IEN in 396.4
"RTN","DVBACER1",251,0)
 ;       DVBAGLBL - Global Reference for Timeliness counters
"RTN","DVBACER1",252,0)
 ;       DVBARSLTS - Global Reference for results
"RTN","DVBACER1",253,0)
 ;Output Global Array Entries Updated for Contractor if applicable
"RTN","DVBACER1",254,0)
 ;       ^TMP($J,"DVBATRPTS") / ^TMP("DVBATRSLTS",$J)
"RTN","DVBACER1",255,0)
TRPTS(DVBACNDE,DVBAGLBL,DVBARSLTS) ;Timeliness Report Processing
"RTN","DVBACER1",256,0)
 N DVBACNME,DVBATVAL,DVBANDAYS,DVBANEXMS,X1,X2,X,%Y
"RTN","DVBACER1",257,0)
 ;Ignore Exams NOT returned (Checked-In) by Contractor
"RTN","DVBACER1",258,0)
 Q:($P(DVBACNDE,"^",3)']"")
"RTN","DVBACER1",259,0)
 S X1=$P(DVBACNDE,"^",3),X2=$P(DVBACNDE,"^",2) D ^%DTC
"RTN","DVBACER1",260,0)
 S DVBATVAL=X  ;# Days between CheckIn and CheckOut
"RTN","DVBACER1",261,0)
 S DVBANDAYS=+$G(@DVBAGLBL@(+$P(DVBACNDE,"^"),"DAYS"))
"RTN","DVBACER1",262,0)
 S DVBANEXMS=+$G(@DVBAGLBL@(+$P(DVBACNDE,"^"),"EXMS"))
"RTN","DVBACER1",263,0)
 ;Increment Timeliness Counter (Total # of Days)
"RTN","DVBACER1",264,0)
 S @DVBAGLBL@(+$P(DVBACNDE,"^"),"DAYS")=DVBANDAYS+DVBATVAL
"RTN","DVBACER1",265,0)
 ;Increment Number of Exams Found
"RTN","DVBACER1",266,0)
 S @DVBAGLBL@(+$P(DVBACNDE,"^"),"EXMS")=DVBANEXMS+1
"RTN","DVBACER1",267,0)
 S DVBACNME=$P($G(^DVB(396.45,+$P(DVBACNDE,"^"),0)),"^")
"RTN","DVBACER1",268,0)
 ;Update Average Timeliness result for Contractor
"RTN","DVBACER1",269,0)
 S $P(@DVBARSLTS@(DVBACNME,+$P(DVBACNDE,"^")),"^",3)=$FN((DVBANDAYS+DVBATVAL)/(DVBANEXMS+1),"",0)
"RTN","DVBACER1",270,0)
 Q
"RTN","DVBACER1",271,0)
 ;
"RTN","DVBACER1",272,0)
GETHFS() ;Get HFS File Name
"RTN","DVBACER1",273,0)
 N DVBAH
"RTN","DVBACER1",274,0)
 S DVBAH=$H
"RTN","DVBACER1",275,0)
 Q "DVBA_"_$J_"_"_$P(DVBAH,",")_"_"_$P(DVBAH,",",2)_".DAT"
"RTN","DVBACER1",276,0)
 ;
"RTN","DVBACER1",277,0)
OPENHFS(DVBAHNDL,DVBAHFS,DVBAMODE,DVBARSLTS) ;Open HFS File
"RTN","DVBACER1",278,0)
 N DVBAERR,POP
"RTN","DVBACER1",279,0)
 S DVBAERR=0
"RTN","DVBACER1",280,0)
 D OPEN^%ZISH(DVBAHNDL,,DVBAHFS,$G(DVBAMODE,"W")) D:POP  Q:POP
"RTN","DVBACER1",281,0)
 .S DVBAERR=1,@DVBARSLTS@(1)="0^Unable to open HFS file."
"RTN","DVBACER1",282,0)
 Q DVBAERR
"RTN","DVBACER1",283,0)
 ;
"RTN","DVBACER1",284,0)
CLOSEHFS(DVBAHNDL,DVBAHFS,DVBARSLTS) ;Close HFS and unload data
"RTN","DVBACER1",285,0)
 N DVBADEL,X,%ZIS
"RTN","DVBACER1",286,0)
 D CLOSE^%ZISH(DVBAHNDL)
"RTN","DVBACER1",287,0)
 S DVBADEL(DVBAHFS)=""
"RTN","DVBACER1",288,0)
 S X=$$FTG^%ZISH(,DVBAHFS,$NA(@DVBARSLTS@(1)),4)
"RTN","DVBACER1",289,0)
 S X=$$DEL^%ZISH(,$NA(DVBADEL))
"RTN","DVBACER1",290,0)
 Q
"RTN","DVBARSBD")
0^14^B58585815^B41501602
"RTN","DVBARSBD",1,0)
DVBARSBD ;ALB/RPM - CAPRI 2507 REQUEST STATUS BY DT RANGE REPORT ; 01/24/12
"RTN","DVBARSBD",2,0)
 ;;2.7;AMIE;**179,185**;Apr 10, 1995;Build 18
"RTN","DVBARSBD",3,0)
 ;
"RTN","DVBARSBD",4,0)
 Q  ;NO DIRECT ENTRY
"RTN","DVBARSBD",5,0)
 ;
"RTN","DVBARSBD",6,0)
REQSTAT(DVBSDAT,DVBEDAT,DVBRSTAT,DVBDELIM,DVBNODT) ;entry for request status by dt range
"RTN","DVBARSBD",7,0)
 ;
"RTN","DVBARSBD",8,0)
 ;  Input:
"RTN","DVBARSBD",9,0)
 ;    DVBSDAT - start date (FM format)
"RTN","DVBARSBD",10,0)
 ;    DVBEDAT - end date (FM format)
"RTN","DVBARSBD",11,0)
 ;    DVBRSTAT - request status (internal format)
"RTN","DVBARSBD",12,0)
 ;    DVBDELIM - return delimited results (0=no;1=yes)
"RTN","DVBARSBD",13,0)
 ;    DVBNODT - ignore date range (0=no;1=yes)
"RTN","DVBARSBD",14,0)
 ;
"RTN","DVBARSBD",15,0)
 N EXSTAT  ;request status (external format)
"RTN","DVBARSBD",16,0)
 N EXSDAT  ;start date (external format: MM/DD/YYYY)
"RTN","DVBARSBD",17,0)
 N EXEDAT  ;end date (external format: MM/DD/YYYY)
"RTN","DVBARSBD",18,0)
 N DVBARS  ;request status conversion results
"RTN","DVBARSBD",19,0)
 N DVBERR  ;FM error msg
"RTN","DVBARSBD",20,0)
 N DVBCNT   ;returned record count
"RTN","DVBARSBD",21,0)
 ;
"RTN","DVBARSBD",22,0)
 K ^TMP("DVBREQ",$J),^TMP("DVBREQN",$J)
"RTN","DVBARSBD",23,0)
 S EXSDAT=$$FMTE^XLFDT(DVBSDAT,"5DZ")
"RTN","DVBARSBD",24,0)
 S EXEDAT=$$FMTE^XLFDT(DVBEDAT,"5DZ")
"RTN","DVBARSBD",25,0)
 I DVBRSTAT="A" S EXSTAT="ALL"
"RTN","DVBARSBD",26,0)
 E  D
"RTN","DVBARSBD",27,0)
 . D CHK^DIE(396.3,17,"E",DVBRSTAT,.DVBARS,"DVBERR")
"RTN","DVBARSBD",28,0)
 . S EXSTAT=$G(DVBARS(0))
"RTN","DVBARSBD",29,0)
 S DVBCNT=1
"RTN","DVBARSBD",30,0)
 S DVBADLMTR=$S(DVBDELIM=1:",",1:0)
"RTN","DVBARSBD",31,0)
 ;
"RTN","DVBARSBD",32,0)
 ;collect records matching search criteria
"RTN","DVBARSBD",33,0)
 I DVBNODT D
"RTN","DVBARSBD",34,0)
 . S EXSDAT="NO START DATE"
"RTN","DVBARSBD",35,0)
 . S EXEDAT="NO END DATE"
"RTN","DVBARSBD",36,0)
 . I DVBDELIM D DELIMHDR(EXSDAT,EXEDAT,EXSTAT)
"RTN","DVBARSBD",37,0)
 . D GETRECSN(DVBRSTAT,.DVBCNT)
"RTN","DVBARSBD",38,0)
 E  D
"RTN","DVBARSBD",39,0)
 . I DVBDELIM D DELIMHDR(EXSDAT,EXEDAT,EXSTAT)
"RTN","DVBARSBD",40,0)
 . D GETRECS(DVBSDAT,DVBEDAT,DVBRSTAT,.DVBCNT)
"RTN","DVBARSBD",41,0)
 ;
"RTN","DVBARSBD",42,0)
 ;output results
"RTN","DVBARSBD",43,0)
 I 'DVBCNT D
"RTN","DVBARSBD",44,0)
 . W "NO DATA FOUND"
"RTN","DVBARSBD",45,0)
 E  D
"RTN","DVBARSBD",46,0)
 . I 'DVBDELIM D PLAINHDR(EXSDAT,EXEDAT,EXSTAT),PLAIN  ;plain text format
"RTN","DVBARSBD",47,0)
 . I DVBDELIM D DELIM  ;comma delimited format
"RTN","DVBARSBD",48,0)
 Q
"RTN","DVBARSBD",49,0)
 ;
"RTN","DVBARSBD",50,0)
GETRECS(SDAT,EDAT,RSTAT,CNT) ;collect 2507 REQUEST record matches
"RTN","DVBARSBD",51,0)
 ;This procedure collects all 2507 REQUEST records that have a
"RTN","DVBARSBD",52,0)
 ;DATE STATUS LAST CHANGED within the start and end dates and have
"RTN","DVBARSBD",53,0)
 ;a REQUEST STATUS that matches the input request status parameter.
"RTN","DVBARSBD",54,0)
 ;
"RTN","DVBARSBD",55,0)
 ;  Input:
"RTN","DVBARSBD",56,0)
 ;    SDAT - start date (FM format)
"RTN","DVBARSBD",57,0)
 ;    EDAT - end date (FM format)
"RTN","DVBARSBD",58,0)
 ;    RSTAT - request status (internal format)
"RTN","DVBARSBD",59,0)
 ;    CNT - record count (passed by reference)
"RTN","DVBARSBD",60,0)
 ;
"RTN","DVBARSBD",61,0)
 N CHGDAT  ;change date
"RTN","DVBARSBD",62,0)
 N DVBIEN  ;2507 REQUEST IEN
"RTN","DVBARSBD",63,0)
 N DVBSTAT ;2507 REQUEST STATUS
"RTN","DVBARSBD",64,0)
 N FLD     ;field array in external format
"RTN","DVBARSBD",65,0)
 ;
"RTN","DVBARSBD",66,0)
 S CHGDAT=SDAT-1
"RTN","DVBARSBD",67,0)
 F  S CHGDAT=$O(^DVB(396.3,"AH",CHGDAT)) Q:'CHGDAT!(CHGDAT>EDAT)  D
"RTN","DVBARSBD",68,0)
 . S DVBIEN=0
"RTN","DVBARSBD",69,0)
 . F  S DVBIEN=$O(^DVB(396.3,"AH",CHGDAT,DVBIEN)) Q:'DVBIEN  D
"RTN","DVBARSBD",70,0)
 . . S DVBSTAT=$$GET1^DIQ(396.3,DVBIEN_",",17,"I","","")
"RTN","DVBARSBD",71,0)
 . . I RSTAT="A"!(DVBSTAT=RSTAT) D
"RTN","DVBARSBD",72,0)
 . . . K FLD
"RTN","DVBARSBD",73,0)
 . . . I $$SETFLDS(DVBIEN,.FLD) D
"RTN","DVBARSBD",74,0)
 . . . . S CNT=CNT+1
"RTN","DVBARSBD",75,0)
 . . . . I $G(DVBADLMTR)'="," S ^TMP("DVBREQ",$J,CNT)=FLD("SS")_U_FLD("NM")_U_FLD("REQDT")_U_FLD("RELDT")_U_FLD("PRTDT")_U_FLD("RS")_U_FLD("CANDT")_U_FLD("RO") Q
"RTN","DVBARSBD",76,0)
 . . . . I $G(DVBADLMTR)="," D
"RTN","DVBARSBD",77,0)
 . . . . . S ^TMP("DVBREQ",$J,CNT)=FLD("SS")_DVBADLMTR_""""_FLD("NM")_""""_DVBADLMTR_FLD("REQDT")_DVBADLMTR_FLD("RELDT")_DVBADLMTR_FLD("PRTDT")_DVBADLMTR
"RTN","DVBARSBD",78,0)
 . . . . . S ^TMP("DVBREQ",$J,CNT)=^TMP("DVBREQ",$J,CNT)_""""_FLD("RS")_""""_DVBADLMTR_FLD("CANDT")_DVBADLMTR_""""_FLD("RO")_""""
"RTN","DVBARSBD",79,0)
 Q
"RTN","DVBARSBD",80,0)
 ;
"RTN","DVBARSBD",81,0)
SETFLDS(DVBIEN,DVBFLDS) ;build field array in external format
"RTN","DVBARSBD",82,0)
 ;This function formats the collected record data in external format
"RTN","DVBARSBD",83,0)
 ;and returns the results TRUE and an array on success.  Otherwise,
"RTN","DVBARSBD",84,0)
 ;the function returns FALSE.
"RTN","DVBARSBD",85,0)
 ;
"RTN","DVBARSBD",86,0)
 ;  Integration Reference #10061 - DEM^VADPT
"RTN","DVBARSBD",87,0)
 ;
"RTN","DVBARSBD",88,0)
 ;  Input:
"RTN","DVBARSBD",89,0)
 ;    DVBIEN - 2507 REQUEST IEN
"RTN","DVBARSBD",90,0)
 ;    DVBFLDS - field array passed by reference
"RTN","DVBARSBD",91,0)
 ;
"RTN","DVBARSBD",92,0)
 ;  Output:
"RTN","DVBARSBD",93,0)
 ;    DVBFLDS("NM") - patient name
"RTN","DVBARSBD",94,0)
 ;    DVBFLDS("SS") - social security number
"RTN","DVBARSBD",95,0)
 ;    DVBFLDS("RS") - request status
"RTN","DVBARSBD",96,0)
 ;    DVBFLDS("REQDT") - request date
"RTN","DVBARSBD",97,0)
 ;    DVBFLDS("RELDT") - release date
"RTN","DVBARSBD",98,0)
 ;    DVBFLDS("PRTDT") - print date
"RTN","DVBARSBD",99,0)
 ;    DVBFLDS("CANDT") - canceled date
"RTN","DVBARSBD",100,0)
 ;    DVBFLDS("RO") - regional office
"RTN","DVBARSBD",101,0)
 ;    DVBFLDS("IREQDT") - request date in internal FM format
"RTN","DVBARSBD",102,0)
 ;    Function Result - return 1 on success; otherwise returns 0
"RTN","DVBARSBD",103,0)
 ;
"RTN","DVBARSBD",104,0)
 N DFN  ;PATIENT file IEN used in VADPT call
"RTN","DVBARSBD",105,0)
 N DVBDAT  ;2507 REQUEST data field array
"RTN","DVBARSBD",106,0)
 N DVBIENS  ;FM IENS value
"RTN","DVBARSBD",107,0)
 N DVBRSLT  ;function result
"RTN","DVBARSBD",108,0)
 N VADM  ;VADPT return array
"RTN","DVBARSBD",109,0)
 ;
"RTN","DVBARSBD",110,0)
 S DVBRSLT=0
"RTN","DVBARSBD",111,0)
 S DVBIENS=+$G(DVBIEN)_","
"RTN","DVBARSBD",112,0)
 D GETS^DIQ(396.3,DVBIENS,".01;1;2;13;15;17;19","IE","DVBDAT","")
"RTN","DVBARSBD",113,0)
 S DFN=$G(DVBDAT(396.3,DVBIENS,.01,"I"))
"RTN","DVBARSBD",114,0)
 D DEM^VADPT
"RTN","DVBARSBD",115,0)
 I $G(VADM(1))'="" D  ;only return record when name is resolved
"RTN","DVBARSBD",116,0)
 . S DVBFLDS("NM")=$G(VADM(1))
"RTN","DVBARSBD",117,0)
 . S DVBFLDS("SS")=$S(DVBDELIM:$P($G(VADM(2)),U,2),1:$P($G(VADM(2)),U,1))
"RTN","DVBARSBD",118,0)
 . S DVBFLDS("RS")=$G(DVBDAT(396.3,DVBIENS,17,"E"))
"RTN","DVBARSBD",119,0)
 . S DVBFLDS("REQDT")=$$FMTE^XLFDT($G(DVBDAT(396.3,DVBIENS,1,"I")),"5DZ")
"RTN","DVBARSBD",120,0)
 . S DVBFLDS("RELDT")=$$FMTE^XLFDT($G(DVBDAT(396.3,DVBIENS,13,"I")),"5DZ")
"RTN","DVBARSBD",121,0)
 . S DVBFLDS("PRTDT")=$$FMTE^XLFDT($G(DVBDAT(396.3,DVBIENS,15,"I")),"5DZ")
"RTN","DVBARSBD",122,0)
 . S DVBFLDS("CANDT")=$$FMTE^XLFDT($G(DVBDAT(396.3,DVBIENS,19,"I")),"5DZ")
"RTN","DVBARSBD",123,0)
 . S DVBFLDS("RO")=$G(DVBDAT(396.3,DVBIENS,2,"E"))
"RTN","DVBARSBD",124,0)
 . S DVBFLDS("IREQDT")=$G(DVBDAT(396.3,DVBIENS,1,"I"))
"RTN","DVBARSBD",125,0)
 . S DVBRSLT=1
"RTN","DVBARSBD",126,0)
 Q DVBRSLT
"RTN","DVBARSBD",127,0)
 ;
"RTN","DVBARSBD",128,0)
DELIMHDR(EXSDAT,EXEDAT,EXSTAT) ;output delimited format header
"RTN","DVBARSBD",129,0)
 ;
"RTN","DVBARSBD",130,0)
 ;  Input:
"RTN","DVBARSBD",131,0)
 ;    EXSDAT - start date (external format)
"RTN","DVBARSBD",132,0)
 ;    EXEDAT - end date (external format)
"RTN","DVBARSBD",133,0)
 ;    EXSTAT - request status (external format)
"RTN","DVBARSBD",134,0)
 ;
"RTN","DVBARSBD",135,0)
 S ^TMP("DVBREQ",$J,DVBCNT)="Request Status by Date Range Report",DVBCNT=DVBCNT+1
"RTN","DVBARSBD",136,0)
 S ^TMP("DVBREQ",$J,DVBCNT)="Date Range: "_EXSDAT_" - "_EXEDAT,DVBCNT=DVBCNT+1
"RTN","DVBARSBD",137,0)
 S ^TMP("DVBREQ",$J,DVBCNT)=""""_"Request Status: "_EXSTAT_""""_$C(13),DVBCNT=DVBCNT+1
"RTN","DVBARSBD",138,0)
 S ^TMP("DVBREQ",$J,DVBCNT)="SSN"_DVBADLMTR_"PatientName"_DVBADLMTR_"RequestDT"_DVBADLMTR_"DTReleased"_DVBADLMTR_"DTPrinted"_DVBADLMTR_"RequestStatus"_DVBADLMTR_"DtCanceled"_DVBADLMTR_"Station",DVBCNT=DVBCNT+1
"RTN","DVBARSBD",139,0)
 Q
"RTN","DVBARSBD",140,0)
 ;
"RTN","DVBARSBD",141,0)
DELIM ;output delimited format
"RTN","DVBARSBD",142,0)
 ;
"RTN","DVBARSBD",143,0)
 N DVBI     ;generic counter
"RTN","DVBARSBD",144,0)
 N DVBREQ   ;request record
"RTN","DVBARSBD",145,0)
 ;
"RTN","DVBARSBD",146,0)
 U IO
"RTN","DVBARSBD",147,0)
 S DVBI=0
"RTN","DVBARSBD",148,0)
 F  S DVBI=$O(^TMP("DVBREQ",$J,DVBI)) Q:'DVBI  D
"RTN","DVBARSBD",149,0)
 . S DVBREQ=^TMP("DVBREQ",$J,DVBI)
"RTN","DVBARSBD",150,0)
 . W !,DVBREQ
"RTN","DVBARSBD",151,0)
 Q
"RTN","DVBARSBD",152,0)
 ;
"RTN","DVBARSBD",153,0)
PLAINHDR(EXSDAT,EXEDAT,EXSTAT)  ;output plain text header
"RTN","DVBARSBD",154,0)
 ;Populate the header information.
"RTN","DVBARSBD",155,0)
 ;CAUTION:  The CAPRI GUI pulls this information to populate the header
"RTN","DVBARSBD",156,0)
 ;for each page when creating a printed report.  Do not modify the
"RTN","DVBARSBD",157,0)
 ;content or line count of the header information without validating
"RTN","DVBARSBD",158,0)
 ;against the CAPRI GUI interface.
"RTN","DVBARSBD",159,0)
 ;
"RTN","DVBARSBD",160,0)
 ;CAPRI GUI to populate 
"RTN","DVBARSBD",161,0)
 ;  Input:
"RTN","DVBARSBD",162,0)
 ;    EXSDAT - start date (external format)
"RTN","DVBARSBD",163,0)
 ;    EXEDAT - end date (external format)
"RTN","DVBARSBD",164,0)
 ;    EXSTAT - request status (external format)
"RTN","DVBARSBD",165,0)
 ;
"RTN","DVBARSBD",166,0)
 N DVBLINE  ;header separator
"RTN","DVBARSBD",167,0)
 ;
"RTN","DVBARSBD",168,0)
 U IO
"RTN","DVBARSBD",169,0)
 S $P(DVBLINE,"-",131)=""
"RTN","DVBARSBD",170,0)
 W "Date Range: "_EXSDAT_" - "_EXEDAT
"RTN","DVBARSBD",171,0)
 W !,"Request Status: ",EXSTAT
"RTN","DVBARSBD",172,0)
 W !
"RTN","DVBARSBD",173,0)
 W !,"SSN",?11,"PATIENT NAME",?33,"REQUEST DT",?45,"DT RELEASED"
"RTN","DVBARSBD",174,0)
 W ?57,"DT PRINTED",?69,"STATUS",?98,"DT CANCELED",?110,"STATION"
"RTN","DVBARSBD",175,0)
 W !,DVBLINE
"RTN","DVBARSBD",176,0)
 Q
"RTN","DVBARSBD",177,0)
 ;
"RTN","DVBARSBD",178,0)
PLAIN ;output plain text format
"RTN","DVBARSBD",179,0)
 ;Output formatted text format.  The patient name and station name
"RTN","DVBARSBD",180,0)
 ;are truncated at 20 characters to maintain 132 character report.
"RTN","DVBARSBD",181,0)
 ;
"RTN","DVBARSBD",182,0)
 N DVBI     ;generic counter
"RTN","DVBARSBD",183,0)
 N DVBREQ   ;request record
"RTN","DVBARSBD",184,0)
 ;
"RTN","DVBARSBD",185,0)
 U IO
"RTN","DVBARSBD",186,0)
 S DVBI=0
"RTN","DVBARSBD",187,0)
 F  S DVBI=$O(^TMP("DVBREQ",$J,DVBI)) Q:'DVBI  D
"RTN","DVBARSBD",188,0)
 . S DVBREQ=^TMP("DVBREQ",$J,DVBI)
"RTN","DVBARSBD",189,0)
 . W !,$P(DVBREQ,U,1),?11,$E($P(DVBREQ,U,2),1,20),?33,$P(DVBREQ,U,3)
"RTN","DVBARSBD",190,0)
 . W ?45,$P(DVBREQ,U,4),?57,$P(DVBREQ,U,5),?69,$P(DVBREQ,U,6)
"RTN","DVBARSBD",191,0)
 . W ?98,$P(DVBREQ,U,7),?110,$E($P(DVBREQ,U,8),1,20)
"RTN","DVBARSBD",192,0)
 Q
"RTN","DVBARSBD",193,0)
 ;
"RTN","DVBARSBD",194,0)
GETRECSN(RSTAT,CNT) ;collect 2507 REQUEST status matches and ignore date range
"RTN","DVBARSBD",195,0)
 ;This procedure collects all 2507 REQUEST records that have a REQUEST STATUS
"RTN","DVBARSBD",196,0)
 ;that matches the input request status parameter regardless of the LAST
"RTN","DVBARSBD",197,0)
 ;STATUS CHANGE DATE range.  The procedure uses the "AF" index which sorts
"RTN","DVBARSBD",198,0)
 ;by REQUEST STATUS and REGIONAL OFFICE.
"RTN","DVBARSBD",199,0)
 ;
"RTN","DVBARSBD",200,0)
 ;  Input:
"RTN","DVBARSBD",201,0)
 ;    RSTAT - request status (internal format)
"RTN","DVBARSBD",202,0)
 ;    CNT - record count (passed by reference)
"RTN","DVBARSBD",203,0)
 ;
"RTN","DVBARSBD",204,0)
 N CHGDAT  ;change date
"RTN","DVBARSBD",205,0)
 N SRTDAT  ;sort date
"RTN","DVBARSBD",206,0)
 N DVBIEN  ;2507 REQUEST IEN
"RTN","DVBARSBD",207,0)
 N FLD     ;field array in external format
"RTN","DVBARSBD",208,0)
 N DVBRO   ;regional office
"RTN","DVBARSBD",209,0)
 ;
"RTN","DVBARSBD",210,0)
 ;create list sorted by LAST STATUS CHANGE DATE
"RTN","DVBARSBD",211,0)
 S DVBRO=0
"RTN","DVBARSBD",212,0)
 F  S DVBRO=$O(^DVB(396.3,"AF",RSTAT,DVBRO)) Q:'DVBRO  D
"RTN","DVBARSBD",213,0)
 . S DVBIEN=0
"RTN","DVBARSBD",214,0)
 . F  S DVBIEN=$O(^DVB(396.3,"AF",RSTAT,DVBRO,DVBIEN)) Q:'DVBIEN  D
"RTN","DVBARSBD",215,0)
 . . K FLD
"RTN","DVBARSBD",216,0)
 . . I $$SETFLDS(DVBIEN,.FLD) D
"RTN","DVBARSBD",217,0)
 . . . ;use request date as sort for blank date
"RTN","DVBARSBD",218,0)
 . . . S SRTDAT=+$G(FLD("IREQDT"))
"RTN","DVBARSBD",219,0)
 . . . I $G(DVBADLMTR)'="," S ^TMP("DVBREQN",$J,SRTDAT,DVBIEN)=FLD("SS")_U_FLD("NM")_U_FLD("REQDT")_U_FLD("RELDT")_U_FLD("PRTDT")_U_FLD("RS")_U_FLD("CANDT")_U_FLD("RO")
"RTN","DVBARSBD",220,0)
 . . . I $G(DVBADLMTR)="," D
"RTN","DVBARSBD",221,0)
 . . . . S ^TMP("DVBREQN",$J,SRTDAT,DVBIEN)=FLD("SS")_DVBADLMTR_""""_FLD("NM")_""""_DVBADLMTR_FLD("REQDT")_DVBADLMTR_FLD("RELDT")_DVBADLMTR_FLD("PRTDT")_DVBADLMTR
"RTN","DVBARSBD",222,0)
 . . . . S ^TMP("DVBREQN",$J,SRTDAT,DVBIEN)=^TMP("DVBREQN",$J,SRTDAT,DVBIEN)_""""_FLD("RS")_""""_DVBADLMTR_FLD("CANDT")_DVBADLMTR_""""_FLD("RO")_""""
"RTN","DVBARSBD",223,0)
 ;
"RTN","DVBARSBD",224,0)
 ;load output global with sorted list
"RTN","DVBARSBD",225,0)
 S CHGDAT=""  ;use "" because value could be zero ("0")
"RTN","DVBARSBD",226,0)
 F  S CHGDAT=$O(^TMP("DVBREQN",$J,CHGDAT)) Q:(CHGDAT="")  D
"RTN","DVBARSBD",227,0)
 . S DVBIEN=0
"RTN","DVBARSBD",228,0)
 . F  S DVBIEN=$O(^TMP("DVBREQN",$J,CHGDAT,DVBIEN)) Q:'DVBIEN  D
"RTN","DVBARSBD",229,0)
 . . S CNT=CNT+1
"RTN","DVBARSBD",230,0)
 . . S ^TMP("DVBREQ",$J,CNT)=^TMP("DVBREQN",$J,CHGDAT,DVBIEN)
"RTN","DVBARSBD",231,0)
 Q
"RTN","DVBASPD2")
0^2^B55204102^B48576328
"RTN","DVBASPD2",1,0)
DVBASPD2 ;ALB/GTS-557/THM,SBW-AMIE SPECIAL REPORT ; 3/MAY/2011
"RTN","DVBASPD2",2,0)
 ;;2.7;AMIE;**3,57,149,168,185**;Apr 10, 1995;Build 18
"RTN","DVBASPD2",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBASPD2",4,0)
 ;
"RTN","DVBASPD2",5,0)
 K ^TMP($J) G TERM
"RTN","DVBASPD2",6,0)
SET Q:'$D(^DPT(DA,0))  S DFN=DA D RCV^DVBAVDPT Q:RCVPEN'=1&(REP="P")  Q:RCVAA'=1&(REP="A")  Q:CFLOC'=RONUM&(RO="Y")&(CFLOC'=0)&(CFLOC'=376)
"RTN","DVBASPD2",7,0)
 S DCHPTR=$P(^DGPM(MB,0),U,17),TDIS=$S($D(^DGPM(+DCHPTR,0)):$P(^(0),U,18),1:"")
"RTN","DVBASPD2",8,0)
 I +TDIS,'$D(^TMP("DVBA",$J,"DUP",+TDIS)) Q
"RTN","DVBASPD2",9,0)
 S TDIS=$S($P($G(^DG(405.2,+TDIS,0)),U,1)]"":$P(^(0),U,1),1:"Unknown discharge type")
"RTN","DVBASPD2",10,0)
 S ^TMP($J,XCN,CFLOC,MB,DA)=MA_U_RCVAA_U_RCVPEN_U_CNUM_U_TDIS
"RTN","DVBASPD2",11,0)
 Q
"RTN","DVBASPD2",12,0)
 ;
"RTN","DVBASPD2",13,0)
PRINTB W:(IOST?1"C-".E)!($D(DVBAON2)) @IOF
"RTN","DVBASPD2",14,0)
 W !!!,?(80-$L(HEAD)\2),HEAD,!,?(80-$L(HEAD1)\2),HEAD1,!!
"RTN","DVBASPD2",15,0)
 W ?10,REP(0),?26,PNAM,!!,?14,REP(1),?26,CNUM,!,?6,REP(2),?26,XCFLOC,!,?9,REP(3),?26,SSN,!,?8,REP(4),?26,ADMDT,!,?3,REP(5),?26,DIAG,!
"RTN","DVBASPD2",16,0)
 W ?8,REP(6),?26,DCHGDT,! W:DCHGDT]"" ?5,REP(7),?26,$$DIS,!
"RTN","DVBASPD2",17,0)
 W ?11,REP(8),?26,BEDSEC,!,?13,REP(9),?26,$$RAA,!
"RTN","DVBASPD2",18,0)
 W ?14,REP(10),?26,$$PEN,! D ELIG^DVBAVDPT
"RTN","DVBASPD2",19,0)
 I IOST?1"C-".E W *7,!,"Press RETURN to continue or ""^"" to stop    " R ANS:DTIME S:ANS=U!('$T) QUIT=1 I '$T S DVBAQUIT=1 I '$T S DVBAQUIT=1
"RTN","DVBASPD2",20,0)
 S DVBAON2=""
"RTN","DVBASPD2",21,0)
 Q
"RTN","DVBASPD2",22,0)
RAA() Q $S(RCVAA=0:"NO",RCVAA=1:"YES",1:"Not specified")
"RTN","DVBASPD2",23,0)
PEN() Q $S(RCVPEN=0:"NO",RCVPEN=1:"YES",1:"Not specified")
"RTN","DVBASPD2",24,0)
DIS() Q TDIS_$S(TO]"":" TO "_$S($D(^DIC(4,+TO,0)):$P(^(0),U,1),1:""),1:"")
"RTN","DVBASPD2",25,0)
SP(N,M) S $P(M," ",N-1)=" " Q M  ;pass one arg, 2nd for local use
"RTN","DVBASPD2",26,0)
PRINTC F J=0:1:7 S ^TMP("DVBSPCRP",$J,DVBC+J)=DVBS(J) ;NakedRefs = ^TMP("DVBSPCRP",$J,DVBC+J)
"RTN","DVBASPD2",27,0)
 S DVBC=DVBC+6,^TMP("DVBSPCRP",$J,DVBC)=$$SP(10)_REP(0)_PNAM
"RTN","DVBASPD2",28,0)
 S ^(DVBC+2)=$$SP(14)_REP(1)_CNUM
"RTN","DVBASPD2",29,0)
 S ^(DVBC+3)=$$SP(6)_REP(2)_XCFLOC
"RTN","DVBASPD2",30,0)
 S ^(DVBC+4)=$$SP(9)_REP(3)_SSN
"RTN","DVBASPD2",31,0)
 S ^(DVBC+5)=$$SP(8)_REP(4)_ADMDT
"RTN","DVBASPD2",32,0)
 S ^(DVBC+6)=$$SP(3)_REP(5)_DIAG
"RTN","DVBASPD2",33,0)
 S DVBC=DVBC+7,^(DVBC)=$$SP(8)_REP(6)_DCHGDT
"RTN","DVBASPD2",34,0)
 I DCHGDT]"" D
"RTN","DVBASPD2",35,0)
 .S DVBC=DVBC+1,^(DVBC)=$$SP(5)_REP(7)_$$DIS
"RTN","DVBASPD2",36,0)
 S ^(DVBC+1)=$$SP(11)_REP(8)_BEDSEC
"RTN","DVBASPD2",37,0)
 S ^(DVBC+2)=$$SP(13)_REP(9)_$$RAA
"RTN","DVBASPD2",38,0)
 S DVBC=DVBC+3,^(DVBC)=$$SP(14)_REP(10)_$$PEN
"RTN","DVBASPD2",39,0)
 D ELIG^DVBAVDPT
"RTN","DVBASPD2",40,0)
 Q
"RTN","DVBASPD2",41,0)
 ;
"RTN","DVBASPD2",42,0)
PRINTD ;print delimited special report
"RTN","DVBASPD2",43,0)
 N ELIG,INCMP,DVBADATA,DVBABRKER,X,X1,X2,X3
"RTN","DVBASPD2",44,0)
 S DVBABRKER=$$BROKER^XWBLIB
"RTN","DVBASPD2",45,0)
 S ELIG=DVBAELIG,INCMP=""
"RTN","DVBASPD2",46,0)
 I ELIG]"" S ELIG=ELIG_" ("_$S(DVBAELST="P":"Pend Ver",DVBAELST="R":"Pend Re-verif",DVBAELST="V":"Verified",1:"Not Verified")_")"
"RTN","DVBASPD2",47,0)
 I $D(^DPT(DA,.29)) S INCMP=$S($P(^(.29),U,12)=1:"Incompetent",1:"")
"RTN","DVBASPD2",48,0)
 I INCMP]"",ELIG]"" S ELIG=ELIG_", "_INCMP
"RTN","DVBASPD2",49,0)
 D:('DVBADHDR) COLHDR
"RTN","DVBASPD2",50,0)
 S DVBADATA=PNAM_DVBADLMTR_CNUM_DVBADLMTR_XCFLOC_DVBADLMTR
"RTN","DVBASPD2",51,0)
 S DVBADATA=DVBADATA_SSN_DVBADLMTR_ADMDT_DVBADLMTR_DIAG_DVBADLMTR_DCHGDT_DVBADLMTR
"RTN","DVBASPD2",52,0)
 S DVBADATA=DVBADATA_$S(DCHGDT]"":$$DIS,1:"")_DVBADLMTR_BEDSEC_DVBADLMTR
"RTN","DVBASPD2",53,0)
 S DVBADATA=DVBADATA_$$RAA_DVBADLMTR_$$PEN_DVBADLMTR_ELIG
"RTN","DVBASPD2",54,0)
 ;
"RTN","DVBASPD2",55,0)
 S X=$P(DVBADATA,DVBADLMTR,4)
"RTN","DVBASPD2",56,0)
 I $L(X)'>9 S X=""""_$E("000000000",1,9-$L(X))_X_"""",X1=$E(X,1,4),X2=$E(X,5,6),X3=$E(X,7,11),X=X1_"-"_X2_"-"_X3
"RTN","DVBASPD2",57,0)
 I $E(X,10,10)'?.N S X=""""_$E("0000000000",1,10-$L(X))_X_"""",X1=$E(X,1,4),X2=$E(X,5,6),X3=$E(X,7,12),X=X1_"-"_X2_"-"_X3
"RTN","DVBASPD2",58,0)
 S $P(DVBADATA,DVBADLMTR,4)=X
"RTN","DVBASPD2",59,0)
 S X=$P(DVBADATA,DVBADLMTR,2)
"RTN","DVBASPD2",60,0)
 S X=$C(160)_X
"RTN","DVBASPD2",61,0)
 S $P(DVBADATA,DVBADLMTR,2)=X
"RTN","DVBASPD2",62,0)
 F I=1:1:$L(DVBADATA,DVBADLMTR) I $P(DVBADATA,DVBADLMTR,I)["," S $P(DVBADATA,DVBADLMTR,I)=""""_$P(DVBADATA,DVBADLMTR,I)_""""
"RTN","DVBASPD2",63,0)
 S DVBADATA=$TR(DVBADATA,DVBADLMTR,",")
"RTN","DVBASPD2",64,0)
 ;
"RTN","DVBASPD2",65,0)
 D:DVBABRKER
"RTN","DVBASPD2",66,0)
 .S ^TMP("DVBSPCRP",$J,DVBC)=DVBADATA,DVBC=DVBC+1
"RTN","DVBASPD2",67,0)
 D:('DVBABRKER)
"RTN","DVBASPD2",68,0)
 .W !,DVBADATA
"RTN","DVBASPD2",69,0)
 Q
"RTN","DVBASPD2",70,0)
 ;
"RTN","DVBASPD2",71,0)
PRINT S QUIT="",XCN=""
"RTN","DVBASPD2",72,0)
 F  S XCN=$O(^TMP($J,XCN)) Q:XCN=""!(QUIT=1)  S XCFLOC="" F  S XCFLOC=$O(^TMP($J,XCN,XCFLOC)) Q:XCFLOC=""!(QUIT=1)  D PRINT1
"RTN","DVBASPD2",73,0)
 Q
"RTN","DVBASPD2",74,0)
PRINT1 S ADM="" F  S ADM=$O(^TMP($J,XCN,XCFLOC,ADM)) Q:ADM=""!(QUIT=1)  D
"RTN","DVBASPD2",75,0)
 .S DA="" F  S DA=$O(^TMP($J,XCN,XCFLOC,ADM,DA)) Q:DA=""!(QUIT=1)  D
"RTN","DVBASPD2",76,0)
 ..S DATA=^(DA),MA=$P(DATA,U),RCVAA=$P(DATA,U,2),RCVPEN=$P(DATA,U,3)
"RTN","DVBASPD2",77,0)
 ..S CNUM=$P(DATA,U,4),TDIS=$P(DATA,U,5),DFN=DA,TO="",QUIT1=1
"RTN","DVBASPD2",78,0)
 ..D ADM^DVBAVDPT
"RTN","DVBASPD2",79,0)
 ..S:ADMDT]"" ADMDT=$E(ADMDT,4,5)_"/"_$E(ADMDT,6,7)_"/"_$E(ADMDT,2,3)
"RTN","DVBASPD2",80,0)
 ..S:DCHGDT]"" DCHGDT=$E(DCHGDT,4,5)_"/"_$E(DCHGDT,6,7)_"/"_$E(DCHGDT,2,3)
"RTN","DVBASPD2",81,0)
 ..I $$BROKER^XWBLIB D @$S(($G(DVBADLMTR)=""):"PRINTC",1:"PRINTD") Q
"RTN","DVBASPD2",82,0)
 ..D @$S(($G(DVBADLMTR)=""):"PRINTB",1:"PRINTD")
"RTN","DVBASPD2",83,0)
 Q
"RTN","DVBASPD2",84,0)
SETUP S RPT="VARO REPORT"_$S(REP="A":" FOR A & A",1:" FOR PENSION"),DTAR=^DVB(396.1,1,0),FDT(0)=$E(DT,4,5)_"-"_$E(DT,6,7)_"-"_$E(DT,2,3)
"RTN","DVBASPD2",85,0)
 S HEAD="SPECIAL "_$S(REP="A":"A & A",1:"PENSION")_" REPORT",HEAD1="FOR "_$P(DTAR,U,1)_" ON "_FDT(0)
"RTN","DVBASPD2",86,0)
 S Y=$P(DTAR,U,9) X ^DD("DD") S REP("LRUN")="Last report was run on "_Y
"RTN","DVBASPD2",87,0)
 S REP(0)="Patient Name:",REP(1)="Claim No:"
"RTN","DVBASPD2",88,0)
 S REP(2)="Claim Folder Loc:",REP(3)="Social Sec No:"
"RTN","DVBASPD2",89,0)
 S REP(4)="Admission Date:",REP(5)="Admitting Diagnosis:"
"RTN","DVBASPD2",90,0)
 S REP(6)="Discharge Date:",REP(7)="Type of Discharge:"
"RTN","DVBASPD2",91,0)
 S REP(8)="Bed Service:",REP(9)="Recv A&A?:",REP(10)="Pension?:"
"RTN","DVBASPD2",92,0)
 Q
"RTN","DVBASPD2",93,0)
TERM D HOME^%ZIS,SETUP K NOASK
"RTN","DVBASPD2",94,0)
 W @IOF,!,RPT,!,HEAD1
"RTN","DVBASPD2",95,0)
 ;
"RTN","DVBASPD2",96,0)
EN1 W !!,"Please enter dates for search, oldest date first, most recent date last.",!!,REP("LRUN"),!!
"RTN","DVBASPD2",97,0)
 D DATE^DVBAUTIL
"RTN","DVBASPD2",98,0)
 G:X=""!(Y<0) KILL
"RTN","DVBASPD2",99,0)
 S %ZIS="Q" D ^%ZIS K %ZIS G:POP KILL^DVBAUTIL
"RTN","DVBASPD2",100,0)
 ;
"RTN","DVBASPD2",101,0)
QUEUE I $D(IO("Q")) S ZTRTN="DEQUE^DVBASPD2",ZTIO=ION,NOASK=1,ZTDESC="AMIE PENSION/A&A REPORT" F I="^TMP(""DVBA"",$J,""DUP"",","DVBATYPS","REP","FDT(0)","HEAD","HEAD1","BDATE","EDATE","TYPE","RO","RONUM","NOASK" S ZTSAVE(I)=""
"RTN","DVBASPD2",102,0)
 I $D(IO("Q")) D ^%ZTLOAD W:$D(ZTSK) !!,"Request queued.",!! G KILL
"RTN","DVBASPD2",103,0)
 ;
"RTN","DVBASPD2",104,0)
GO S MA=BDATE F  S MA=$O(^DGPM("AMV1",MA)) Q:$P(MA,".")>EDATE!(MA="")  W:'$D(NOASK) "." F DA=0:0 S DA=$O(^DGPM("AMV1",MA,DA)) Q:DA=""  F MB=0:0 S MB=$O(^DGPM("AMV1",MA,DA,MB)) Q:MB=""  D SET
"RTN","DVBASPD2",105,0)
 S:'$D(^TMP($J)) ER="No data found for parameters entered."
"RTN","DVBASPD2",106,0)
 G:$$BROKER^XWBLIB BROKER
"RTN","DVBASPD2",107,0)
 U IO I $D(ER) W !!,*7,ER,!! G KILL
"RTN","DVBASPD2",108,0)
 D PRINT
"RTN","DVBASPD2",109,0)
 I $D(DVBAQUIT) D:$D(ZTQUEUED) KILL^%ZTLOAD K ER,DVBAON2 G KILL^DVBAUTIL
"RTN","DVBASPD2",110,0)
 ;
"RTN","DVBASPD2",111,0)
KILL D ^%ZISC D:$D(ZTQUEUED) KILL^%ZTLOAD S X=9 K ER,DVBAON2 G FINAL^DVBAUTIL
"RTN","DVBASPD2",112,0)
 ;
"RTN","DVBASPD2",113,0)
INIT ;add header info to report
"RTN","DVBASPD2",114,0)
 I ($G(DVBADLMTR)'="") D  Q  ;no header info for delimited report
"RTN","DVBASPD2",115,0)
 .S DVBC=1
"RTN","DVBASPD2",116,0)
 F J=0,2,5,6,7 S DVBS(J)=" "
"RTN","DVBASPD2",117,0)
 S $P(DVBS(1),"-",70)="-",DVBS(3)=$$SP(70-$L(HEAD)\2)_HEAD,DVBS(4)=$$SP(70-$L(HEAD1)\2)_HEAD1
"RTN","DVBASPD2",118,0)
 S ^TMP("DVBSPCRP",$J,1)=" ",^(2)=RPT,^(3)=HEAD1,^(4)=" ",^(5)=REP("LRUN"),DVBC=6
"RTN","DVBASPD2",119,0)
 F J=0:1:10 S REP(J)=REP(J)_"    "
"RTN","DVBASPD2",120,0)
 Q
"RTN","DVBASPD2",121,0)
BROKER I $D(ER) K ^TMP("DVBSPCRP",$J) S ^($J,1)=ER
"RTN","DVBASPD2",122,0)
 E  D INIT,PRINT
"RTN","DVBASPD2",123,0)
 S X=9 G FINAL^DVBAUTIL
"RTN","DVBASPD2",124,0)
 ;
"RTN","DVBASPD2",125,0)
 ;Input: DVBADLMTR - Indicates if report should be delimited (Optional)
"RTN","DVBASPD2",126,0)
SPECRPT(ZMSG,DCTYPES,BDATE,EDATE,RONUM,REP,DVBADLMTR)      ;
"RTN","DVBASPD2",127,0)
 N I,J,REQ,DVBC,DVBACEPT,DVBS,ER,DVBADHDR
"RTN","DVBASPD2",128,0)
 S DVBADLMTR=$S('+$G(DVBADLMTR):"",1:"^"),DVBADHDR=0
"RTN","DVBASPD2",129,0)
 ; If RONUM not passed set value to "0" (zero) in order to include data
"RTN","DVBASPD2",130,0)
 ; for all regional offices
"RTN","DVBASPD2",131,0)
 I $G(RONUM)']"" S RONUM=0
"RTN","DVBASPD2",132,0)
 S ZMSG=$NA(^TMP("DVBSPCRP",$J)),REQ=" IS REQUIRED"
"RTN","DVBASPD2",133,0)
 S MB=" MUST BE ",TYPE="REPORT TYPE",BDT="BEGINNING DATE",EDT="ENDING DATE"
"RTN","DVBASPD2",134,0)
 I $G(BDATE)="" S ER=BDT_REQ
"RTN","DVBASPD2",135,0)
 I $G(EDATE)="" S ER=EDT_REQ
"RTN","DVBASPD2",136,0)
 I EDATE<BDATE S ER=BDT_MB_"BEFORE THE "_EDT
"RTN","DVBASPD2",137,0)
 I $G(REP)="" S ER=TYPE_REQ
"RTN","DVBASPD2",138,0)
 I "^A^P"'[REP S ER=TYPE_MB_"'A' OR 'P'"
"RTN","DVBASPD2",139,0)
 ;Only validate RONUM to be valid Station Number if it isn't zero
"RTN","DVBASPD2",140,0)
 I RONUM'="0"&(RONUM'?3N.4AN) S ER="REGIONAL OFFICE"_MB_"3 NUMBERS + OPTIONAL 1 TO 4 MODIFIER (MAX 7 CHARACTERS)"
"RTN","DVBASPD2",141,0)
 K ^TMP("DVBSPCRP",$J) I $D(ER) S ^($J,1)=ER,X=9 G FINAL^DVBAUTIL
"RTN","DVBASPD2",142,0)
 ;If RONUM = 0 then RO set to "N" to include data for all ROs
"RTN","DVBASPD2",143,0)
 ;If RONUM passed then RO set to "Y" to include data for only passed RO
"RTN","DVBASPD2",144,0)
 S (NOASK,DVBACEPT)=1,RO=$S(RONUM=0:"N",1:"Y")
"RTN","DVBASPD2",145,0)
 F J=0:0 S J=$O(DCTYPES(J)) Q:'J  S ^TMP("DVBA",$J,"DUP",DCTYPES(J))=""
"RTN","DVBASPD2",146,0)
 D SETUP
"RTN","DVBASPD2",147,0)
DEQUE K ^TMP($J) G GO
"RTN","DVBASPD2",148,0)
 ;
"RTN","DVBASPD2",149,0)
COLHDR ;Column header for delimited report
"RTN","DVBASPD2",150,0)
 N DVBACHDR,DVBABRKER,DVBADLMTR
"RTN","DVBASPD2",151,0)
 S DVBADLMTR=","
"RTN","DVBASPD2",152,0)
 S DVBABRKER=$$BROKER^XWBLIB
"RTN","DVBASPD2",153,0)
 S DVBACHDR="Patient Name"_DVBADLMTR_"Claim No"_DVBADLMTR_"Claim Folder Loc"_DVBADLMTR
"RTN","DVBASPD2",154,0)
 S DVBACHDR=DVBACHDR_"Social Sec No"_DVBADLMTR_"Admission Date"_DVBADLMTR_"Admitting Diagnosis"_DVBADLMTR
"RTN","DVBASPD2",155,0)
 S DVBACHDR=DVBACHDR_"Discharge Date"_DVBADLMTR_"Type of Discharge"_DVBADLMTR_"Bed Service"_DVBADLMTR
"RTN","DVBASPD2",156,0)
 S DVBACHDR=DVBACHDR_"Recv A&A?"_DVBADLMTR_"Pension?"_DVBADLMTR_"Eligibility Data"
"RTN","DVBASPD2",157,0)
 S:DVBABRKER ^TMP("DVBSPCRP",$J,DVBC)=DVBACHDR,DVBC=DVBC+1
"RTN","DVBASPD2",158,0)
 D:('DVBABRKER)
"RTN","DVBASPD2",159,0)
 .W !,DVBACHDR
"RTN","DVBASPD2",160,0)
 S DVBADHDR=1  ;set so header info only printed once
"RTN","DVBASPD2",161,0)
 Q
"RTN","DVBCIRP1")
0^9^B48099791^B47449535
"RTN","DVBCIRP1",1,0)
DVBCIRP1 ;ALB/GTS-AMIE INSUFFICIENT 2507 RPT -CONT 1 ; 11/10/94  1:30 PM
"RTN","DVBCIRP1",2,0)
 ;;2.7;AMIE;**13,19,27,149,184,185**;Apr 10, 1995;Build 18
"RTN","DVBCIRP1",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBCIRP1",4,0)
 ;
"RTN","DVBCIRP1",5,0)
 ;** Version Changes
"RTN","DVBCIRP1",6,0)
 ;   2.7 - New routine (Enhc 15)
"RTN","DVBCIRP1",7,0)
 ;
"RTN","DVBCIRP1",8,0)
SUMRPT ;**Output the summary report
"RTN","DVBCIRP1",9,0)
 W:IOST?1"C-".E @IOF
"RTN","DVBCIRP1",10,0)
 D SUMHD
"RTN","DVBCIRP1",11,0)
 ;print request data
"RTN","DVBCIRP1",12,0)
 W !?3,"Total 2507 requests received for date range:",?71,$J(DVBARQCT,5)
"RTN","DVBCIRP1",13,0)
 W !?3,"Total insufficient 2507 requests received for date range:",?71,$J(DVBAINRQ,5)
"RTN","DVBCIRP1",14,0)
 W !?3,"Total insufficient 2507 requests cancelled by RO for date range:",?71,$J(DVBACAN("REQ"),5)
"RTN","DVBCIRP1",15,0)
 I DVBARQCT>0 D
"RTN","DVBCIRP1",16,0)
 .S PERCENT=(DVBAINRQ/DVBARQCT)*100
"RTN","DVBCIRP1",17,0)
 .W !?3,"% of insufficient requests per total requests received:",?71,$J(PERCENT,5,1)_"%"
"RTN","DVBCIRP1",18,0)
 .S PERCENT=((DVBAINRQ-DVBACAN("REQ"))/DVBARQCT)*100
"RTN","DVBCIRP1",19,0)
 .W !?3,"% of uncancelled insufficient requests per total requests received:",?71,$J(PERCENT,5,1)_"%"
"RTN","DVBCIRP1",20,0)
 I DVBARQCT'>0 D
"RTN","DVBCIRP1",21,0)
 .S PERCENT=0
"RTN","DVBCIRP1",22,0)
 .W !?3,"% of insufficient requests per total requests received:",?71,$J(PERCENT,5,1)_"%"
"RTN","DVBCIRP1",23,0)
 .W !?3,"% of uncancelled insufficient requests per total requests received:",?71,$J(PERCENT,5,1)_"%"
"RTN","DVBCIRP1",24,0)
 ;print exam data
"RTN","DVBCIRP1",25,0)
 W !!?3,"Total 2507 exams received for date range:",?71,$J(DVBAXMCT,5)
"RTN","DVBCIRP1",26,0)
 W !?3,"Total insufficient 2507 exams received for date range:",?71,$J(DVBAINXM,5)
"RTN","DVBCIRP1",27,0)
 W !?3,"Total insufficient 2507 exams cancelled by RO for date range:",?71,$J(DVBACAN("EXM"),5)
"RTN","DVBCIRP1",28,0)
 I DVBAXMCT>0 D
"RTN","DVBCIRP1",29,0)
 .S PERCENT=(DVBAINXM/DVBAXMCT)*100
"RTN","DVBCIRP1",30,0)
 .W !?3,"% of insufficient exams per total exams received:",?71,$J(PERCENT,5,1)_"%"
"RTN","DVBCIRP1",31,0)
 .S PERCENT=((DVBAINXM-DVBACAN("EXM"))/DVBAXMCT)*100
"RTN","DVBCIRP1",32,0)
 .W !?3,"% of uncancelled insufficient exams per total exams received:",?71,$J(PERCENT,5,1)_"%"
"RTN","DVBCIRP1",33,0)
 I DVBAXMCT'>0 D
"RTN","DVBCIRP1",34,0)
 .S PERCENT=0
"RTN","DVBCIRP1",35,0)
 .W !?3,"% of insufficient exams per total exams received:",?71,$J(PERCENT,5,1)_"%"
"RTN","DVBCIRP1",36,0)
 .W !?3,"% of uncancelled insufficient exams per total exams received:",?71,$J(PERCENT,5,1)_"%"
"RTN","DVBCIRP1",37,0)
 ;print insufficient reason data
"RTN","DVBCIRP1",38,0)
 I IOST?1"C-".E DO
"RTN","DVBCIRP1",39,0)
 .K DTOUT,DUOUT
"RTN","DVBCIRP1",40,0)
 .W !!
"RTN","DVBCIRP1",41,0)
 .D PAUSE^DVBCUTL4
"RTN","DVBCIRP1",42,0)
 .I '$D(DTOUT),('$D(DUOUT)) DO
"RTN","DVBCIRP1",43,0)
 ..W @IOF
"RTN","DVBCIRP1",44,0)
 ..D SUMHD
"RTN","DVBCIRP1",45,0)
 I '$D(DTOUT),('$D(DUOUT)) DO
"RTN","DVBCIRP1",46,0)
 .W:IOST'?1"C-".E !!
"RTN","DVBCIRP1",47,0)
 .W !?15,"Summary of insufficient exams per Reason",!
"RTN","DVBCIRP1",48,0)
 .W !?3,"Reason",?53,"Num",?59,"Percent"
"RTN","DVBCIRP1",49,0)
 .N DVBARSLP S DVBARSLP=""
"RTN","DVBCIRP1",50,0)
 .F  S DVBARSLP=$O(DVBAINXM(DVBARSLP)) Q:DVBARSLP=""  DO  ;**Reason tot's
"RTN","DVBCIRP1",51,0)
 ..W:+DVBARSLP>0 !?3,$P(^DVB(396.94,DVBARSLP,0),U,3),?53,DVBAINXM(DVBARSLP)
"RTN","DVBCIRP1",52,0)
 ..I +DVBARSLP'>0,(+DVBAINXM(DVBARSLP)>0) W !?3,"Exams without insufficient reason indicated",?53,DVBAINXM(DVBARSLP)
"RTN","DVBCIRP1",53,0)
 ..W:(+DVBAINXM(DVBARSLP)>0&(DVBAINXM>0)) ?59,($P(((DVBAINXM(DVBARSLP)/DVBAINXM)*100),".",1))_$S($E($P(((DVBAINXM(DVBARSLP)/DVBAINXM)*100),".",2),1,1)'="":"."_$E($P(((DVBAINXM(DVBARSLP)/DVBAINXM)*100),".",2),1,1),1:"")_" %"
"RTN","DVBCIRP1",54,0)
 .I IOST?1"C-".E DO
"RTN","DVBCIRP1",55,0)
 ..D CONTMES^DVBCUTL4
"RTN","DVBCIRP1",56,0)
 Q
"RTN","DVBCIRP1",57,0)
 ;
"RTN","DVBCIRP1",58,0)
SUMHD ;** Output Summary Report heading
"RTN","DVBCIRP1",59,0)
 N STRTDT,LSTDT,DVBATXT,DVBASL
"RTN","DVBCIRP1",60,0)
 W !?15,"Summary Insufficient Exam Report for ",$$SITE^DVBCUTL4(),!
"RTN","DVBCIRP1",61,0)
 S Y=$P(BEGDT,".",1) X ^DD("DD") S STRTDT=Y K Y
"RTN","DVBCIRP1",62,0)
 S Y=$P(ENDDT,".",1) X ^DD("DD") S LSTDT=Y K Y
"RTN","DVBCIRP1",63,0)
 S DVBASL=$L($$SITE^DVBCUTL4)
"RTN","DVBCIRP1",64,0)
 S DVBATXT=$$PRHD^DVBCIUTL(DVBAPRTY)
"RTN","DVBCIRP1",65,0)
 W ?(((67+DVBASL)-$L(DVBATXT))\2),DVBATXT,!
"RTN","DVBCIRP1",66,0)
 W !?16,"For Date Range: "_STRTDT_" to "_LSTDT,!
"RTN","DVBCIRP1",67,0)
 Q
"RTN","DVBCIRP1",68,0)
 ;
"RTN","DVBCIRP1",69,0)
DETAIL ;** Output reason, exam type and exam info
"RTN","DVBCIRP1",70,0)
 N STRTDT,LSTDT,DVBARQST,DVBAEXMP,DVBAP,DVBAPREXM,MSGCNT
"RTN","DVBCIRP1",71,0)
 S MSGCNT=0
"RTN","DVBCIRP1",72,0)
 K ^TMP("DVBAEXAMS",$J),^TMP("INSUFF",$J)
"RTN","DVBCIRP1",73,0)
 S X=$P(BEGDT,".",1),STRTDT=$$FMTE^XLFDT(X,"5DZ")
"RTN","DVBCIRP1",74,0)
 S Y=$P(ENDDT,".",1),LSTDT=$$FMTE^XLFDT(Y,"5DZ")
"RTN","DVBCIRP1",75,0)
 U IO
"RTN","DVBCIRP1",76,0)
 S DVBADTLP=BEGDT
"RTN","DVBCIRP1",77,0)
 S DVBAENDL=ENDDT
"RTN","DVBCIRP1",78,0)
 S DVBAPRTY=$S(($G(DVBAPRTY)["BDD"):";BDD;QS;",($G(DVBAPRTY)["IDES"):";IDES;",($G(DVBAPRTY)["AO"):";AO;",1:"")
"RTN","DVBCIRP1",79,0)
 D:((DVBAPRTY']"")!(DVBAPRTY["AO")!(DVBAPRTY["IDES")) DETHD^DVBCIUTL
"RTN","DVBCIRP1",80,0)
 S RSDA=""
"RTN","DVBCIRP1",81,0)
 S DVBAPG1=""
"RTN","DVBCIRP1",82,0)
 F  S RSDA=$O(DVBAARY("REASON",RSDA)) Q:(RSDA=""!($D(GETOUT)))  DO
"RTN","DVBCIRP1",83,0)
 .K DVBARSPT
"RTN","DVBCIRP1",84,0)
 .S TPDA=""
"RTN","DVBCIRP1",85,0)
 .F  S TPDA=$O(^TMP($J,"XMTYPE",TPDA)) Q:(TPDA=""!($D(GETOUT)))  DO
"RTN","DVBCIRP1",86,0)
 ..K DVBAXMPT
"RTN","DVBCIRP1",87,0)
 ..S XMDA=""
"RTN","DVBCIRP1",88,0)
 ..F  S XMDA=$O(^DVB(396.4,"AIT",RSDA,TPDA,XMDA)) Q:(XMDA=""!($D(GETOUT)))  DO
"RTN","DVBCIRP1",89,0)
 ...S DVBARQST=$G(^DVB(396.3,$P(^DVB(396.4,XMDA,0),U,2),0))
"RTN","DVBCIRP1",90,0)
 ...;retrieve Priority of Exam from Current/Parent(if exists) 2507 Request
"RTN","DVBCIRP1",91,0)
 ...S DVBAPREXM=$$CHKREQ($P(^DVB(396.4,XMDA,0),U,2))
"RTN","DVBCIRP1",92,0)
 ...I $P(DVBARQST,U,5)>DVBADTLP,($P(DVBARQST,U,5)<DVBAENDL) D
"RTN","DVBCIRP1",93,0)
 ....;Current-As Is (All Others, except new priorities)
"RTN","DVBCIRP1",94,0)
 ....D:((DVBAPRTY']"")&((";BDD;QS;IDES;AO;")'[(";"_DVBAPREXM_";"))) EXMOUT^DVBCIUTL
"RTN","DVBCIRP1",95,0)
 ....;Report for Specific Priority of Exam(s)
"RTN","DVBCIRP1",96,0)
 ....D:((DVBAPRTY]"")&(DVBAPRTY[(";"_DVBAPREXM_";")))
"RTN","DVBCIRP1",97,0)
 .....D:(DVBAPREXM="AO")!(DVBAPREXM="IDES") EXMOUT^DVBCIUTL  ;Agent Orange or IDES Single Report
"RTN","DVBCIRP1",98,0)
 .....;BDD,QS require report for each priority code
"RTN","DVBCIRP1",99,0)
 .....;for performance grab all data then print 2 reports
"RTN","DVBCIRP1",100,0)
 .....S:(DVBAPREXM'="AO")&(DVBAPREXM'="IDES") ^TMP("DVBAEXAMS",$J,DVBAPREXM,RSDA,TPDA,XMDA)=""
"RTN","DVBCIRP1",101,0)
 I '$D(GETOUT),(IOST?1"C-".E),((DVBAPRTY']"")!(DVBAPRTY["AO")) D CONTMES^DVBCUTL4
"RTN","DVBCIRP1",102,0)
 D:((DVBAPRTY]"")&(DVBAPRTY'["AO")&(DVBAPRTY'["IDES"))  ;print BDD reports
"RTN","DVBCIRP1",103,0)
 .K DVBAPG1 S DVBAEXMP=DVBAPRTY,RSDA=""
"RTN","DVBCIRP1",104,0)
 .F DVBAP=$P(DVBAEXMP,";",2),$P(DVBAEXMP,";",3)  D
"RTN","DVBCIRP1",105,0)
 ..Q:DVBAP=""
"RTN","DVBCIRP1",106,0)
 ..S DVBAPRTY=DVBAP
"RTN","DVBCIRP1",107,0)
 ..D DETHD^DVBCIUTL S DVBAPG1=""
"RTN","DVBCIRP1",108,0)
 ..F  S RSDA=$O(^TMP("DVBAEXAMS",$J,DVBAP,RSDA)) Q:(('+RSDA)!($D(GETOUT)))  D
"RTN","DVBCIRP1",109,0)
 ...K DVBARSPT S TPDA=""
"RTN","DVBCIRP1",110,0)
 ...F  S TPDA=$O(^TMP("DVBAEXAMS",$J,DVBAP,RSDA,TPDA)) Q:(('+TPDA)!($D(GETOUT)))  D
"RTN","DVBCIRP1",111,0)
 ....K DVBAXMPT S XMDA=""
"RTN","DVBCIRP1",112,0)
 ....F  S XMDA=$O(^TMP("DVBAEXAMS",$J,DVBAP,RSDA,TPDA,XMDA)) Q:(('+XMDA)!($D(GETOUT)))  D EXMOUT^DVBCIUTL
"RTN","DVBCIRP1",113,0)
 ..I '$D(GETOUT),(IOST?1"C-".E) D CONTMES^DVBCUTL4
"RTN","DVBCIRP1",114,0)
 ..K GETOUT W !
"RTN","DVBCIRP1",115,0)
 D ^%ZISC
"RTN","DVBCIRP1",116,0)
 D KVARS ;**KILL the variables used by DETAIL
"RTN","DVBCIRP1",117,0)
 Q
"RTN","DVBCIRP1",118,0)
 ;
"RTN","DVBCIRP1",119,0)
KVARS ;** Final Kill for Detail report
"RTN","DVBCIRP1",120,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","DVBCIRP1",121,0)
 K ^TMP($J),DVBAARY,DVBANAME,DVBASSN,DVBACNUM,RSDA,TPDA,XMDA,DVBADTLP,DVBAENDL
"RTN","DVBCIRP1",122,0)
 K DVBARSPT,DVBAXMPT,REQDA,DFN,DVBAORXM,DVBAXMTP,DVBACMND,DVBAORPV,DVBAORP1
"RTN","DVBCIRP1",123,0)
 K DVBADTWK,DVBADTE,DVBAORDT,DVBANAM1,GETOUT,DVBAARY,DVBAPG1,DVBARQDT,DVBAXDT
"RTN","DVBCIRP1",124,0)
 K DVBAXRS,MSGCNT,^TMP("DVBAEXAMS",$J)
"RTN","DVBCIRP1",125,0)
 Q
"RTN","DVBCIRP1",126,0)
 ;
"RTN","DVBCIRP1",127,0)
DETSEL ;** Select the details to report
"RTN","DVBCIRP1",128,0)
 D RSEL^DVBCIUTL
"RTN","DVBCIRP1",129,0)
 I '$D(DVBAARY("REASON")) S DVBAQTSL=""
"RTN","DVBCIRP1",130,0)
 I $D(DVBAQTSL) DO
"RTN","DVBCIRP1",131,0)
 .S DIR("A",1)="You have not selected Insufficient reasons to report."
"RTN","DVBCIRP1",132,0)
 .S DIR("A",2)="This is required to print the Detailed report."
"RTN","DVBCIRP1",133,0)
 .S DIR("A",3)=" "
"RTN","DVBCIRP1",134,0)
 .S DIR(0)="FAO^1:1",DIR("A")="Hit Return to continue." D ^DIR K DIR,X,Y
"RTN","DVBCIRP1",135,0)
 I '$D(DVBAQTSL) DO
"RTN","DVBCIRP1",136,0)
 .D XMSEL^DVBCIUTL
"RTN","DVBCIRP1",137,0)
 .I '$D(^TMP($J,"XMTYPE")) S DVBAQTSL=""
"RTN","DVBCIRP1",138,0)
 .I $D(DVBAQTSL) DO
"RTN","DVBCIRP1",139,0)
 ..S DIR("A",1)="You have not selected Exams to report."
"RTN","DVBCIRP1",140,0)
 ..S DIR("A",2)="This is required to print the Detailed report."
"RTN","DVBCIRP1",141,0)
 ..S DIR("A",3)=" "
"RTN","DVBCIRP1",142,0)
 ..S DIR(0)="FAO^1:1",DIR("A")="Hit Return to continue." D ^DIR K DIR,X,Y
"RTN","DVBCIRP1",143,0)
 ..K DVBAARY("REASON")
"RTN","DVBCIRP1",144,0)
 Q
"RTN","DVBCIRP1",145,0)
 ;
"RTN","DVBCIRP1",146,0)
 ;Input:  IEN of 2507 Request in File #396.3
"RTN","DVBCIRP1",147,0)
 ;Output: Priority of Exam for the Current/Parent 2507 Request
"RTN","DVBCIRP1",148,0)
CHKREQ(DVBARIEN) ;check for parent requests
"RTN","DVBCIRP1",149,0)
 N DVBAPIEN,DVBAPEXM
"RTN","DVBCIRP1",150,0)
 Q:($G(DVBARIEN)']"") ""
"RTN","DVBCIRP1",151,0)
 S DVBAPEXM=$P($G(^DVB(396.3,DVBARIEN,0)),U,10)  ;Priority of Exam
"RTN","DVBCIRP1",152,0)
 S DVBAPIEN=$P($G(^DVB(396.3,DVBARIEN,5)),U)  ;parent IEN if it exists
"RTN","DVBCIRP1",153,0)
 I (DVBAPIEN]"") D  ;Parent 2507 Request
"RTN","DVBCIRP1",154,0)
 .S DVBAPEXM=$P($G(^DVB(396.3,DVBAPIEN,0)),U,10)  ;Priority of Exam
"RTN","DVBCIRP1",155,0)
 Q DVBAPEXM
"RTN","DVBCIRPT")
0^10^B48439537^B48144132
"RTN","DVBCIRPT",1,0)
DVBCIRPT ;ALB/GTS-AMIE C&P INSUFF EXAM TRACKING RPT ; 11/9/94  2:00 PM
"RTN","DVBCIRPT",2,0)
 ;;2.7;AMIE;**13,19,27,149,184,185**;Apr 10, 1995;Build 18
"RTN","DVBCIRPT",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBCIRPT",4,0)
 ;
"RTN","DVBCIRPT",5,0)
 ;** Version Changes
"RTN","DVBCIRPT",6,0)
 ;   2.7 - New routine (Enhc 15)
"RTN","DVBCIRPT",7,0)
 ;
"RTN","DVBCIRPT",8,0)
MAIN ;**Select Dte Rng & Rpt Type; call report routine
"RTN","DVBCIRPT",9,0)
 F  Q:$D(DVBAOUT)  DO
"RTN","DVBCIRPT",10,0)
 .D HOME^%ZIS
"RTN","DVBCIRPT",11,0)
 .S TVAR(1,0)="0,0,1,2:2,1^Insufficient 2507 Exam Report"
"RTN","DVBCIRPT",12,0)
 .D WR^DVBAUTL4("TVAR")
"RTN","DVBCIRPT",13,0)
 .K TVAR
"RTN","DVBCIRPT",14,0)
 .S DVBAPRTY=$$EXMPRTY^DVBCIUTL("Select Priority of Exam for the Insufficient Exam Report")  ;priority of exam selection
"RTN","DVBCIRPT",15,0)
 .S RPTTYPE=$S((DVBAPRTY?.A)&(DVBAPRTY]""):$$RPTTYPE^DVBCUTA1(),1:"")
"RTN","DVBCIRPT",16,0)
 .S:((RPTTYPE'="D")&(RPTTYPE'="S")) DVBAOUT=""
"RTN","DVBCIRPT",17,0)
 .W:'$D(DVBAOUT) !!
"RTN","DVBCIRPT",18,0)
 .D:'$D(DVBAOUT) DATE^DVBCUTL4(.BEGDT,.ENDDT)
"RTN","DVBCIRPT",19,0)
 .I $D(ENDDT),(+ENDDT>0) DO
"RTN","DVBCIRPT",20,0)
 ..S ENDDT=ENDDT_".2359"
"RTN","DVBCIRPT",21,0)
 ..I RPTTYPE="S" DO
"RTN","DVBCIRPT",22,0)
 ...D DEVSEL
"RTN","DVBCIRPT",23,0)
 ...I POP D SUMKILL
"RTN","DVBCIRPT",24,0)
 ...I 'POP DO
"RTN","DVBCIRPT",25,0)
 ....I $D(IO("Q")) DO
"RTN","DVBCIRPT",26,0)
 .....N DVBAI
"RTN","DVBCIRPT",27,0)
 .....S ZTRTN="SUM^DVBCIRPT",ZTIO=ION
"RTN","DVBCIRPT",28,0)
 .....S ZTDESC="Summary Insufficient Exam Report"
"RTN","DVBCIRPT",29,0)
 .....F DVBAI="BEGDT","ENDDT","DVBAPRTY" S ZTSAVE(DVBAI)=""
"RTN","DVBCIRPT",30,0)
 .....D ^%ZTLOAD
"RTN","DVBCIRPT",31,0)
 .....N TSK S TSK=$S($D(ZTSK)=0:"C",1:"Y")
"RTN","DVBCIRPT",32,0)
 .....I TSK="Y" W !!,"Summary Report Queued. Task number: ",ZTSK
"RTN","DVBCIRPT",33,0)
 .....K ZTSK D CONTMES^DVBCUTL4
"RTN","DVBCIRPT",34,0)
 .....D SUMKILL
"RTN","DVBCIRPT",35,0)
 ....I '$D(IO("Q")) D SUM
"RTN","DVBCIRPT",36,0)
 ...D ^%ZISC
"RTN","DVBCIRPT",37,0)
 ..I RPTTYPE="D" DO
"RTN","DVBCIRPT",38,0)
 ...D DETSEL^DVBCIRP1 ;**Select the Reasons and Exams to report
"RTN","DVBCIRPT",39,0)
 ...I '$D(DVBAQTSL) DO
"RTN","DVBCIRPT",40,0)
 ....D DEVSEL
"RTN","DVBCIRPT",41,0)
 ....I POP D KVARS^DVBCIRP1
"RTN","DVBCIRPT",42,0)
 ....I 'POP DO
"RTN","DVBCIRPT",43,0)
 .....I $D(IO("Q")) DO
"RTN","DVBCIRPT",44,0)
 ......N DVBAI
"RTN","DVBCIRPT",45,0)
 ......S ZTRTN="DETAIL^DVBCIRP1",ZTIO=ION
"RTN","DVBCIRPT",46,0)
 ......S ZTDESC="Detailed Insufficient Exam Report"
"RTN","DVBCIRPT",47,0)
 ......F DVBAI="BEGDT","ENDDT","DVBAPRTY","DVBAARY(""REASON"",","^TMP($J,""XMTYPE""," S ZTSAVE(DVBAI)=""
"RTN","DVBCIRPT",48,0)
 ......D ^%ZTLOAD
"RTN","DVBCIRPT",49,0)
 ......N TSK S TSK=$S($D(ZTSK)=0:"C",1:"Y")
"RTN","DVBCIRPT",50,0)
 ......I TSK="Y" W !!,"Detail Report Queued. Task number: ",ZTSK
"RTN","DVBCIRPT",51,0)
 ......K ZTSK D CONTMES^DVBCUTL4
"RTN","DVBCIRPT",52,0)
 ......D KVARS^DVBCIRP1
"RTN","DVBCIRPT",53,0)
 .....I '$D(IO("Q")) W:IOST?1"C-".E @IOF S DVBADLMTR=0 D DETAIL^DVBCIRP1
"RTN","DVBCIRPT",54,0)
 ....D ^%ZISC
"RTN","DVBCIRPT",55,0)
 ...K DVBAQTSL
"RTN","DVBCIRPT",56,0)
 ..D CLEANUP
"RTN","DVBCIRPT",57,0)
 D KVARS
"RTN","DVBCIRPT",58,0)
 Q
"RTN","DVBCIRPT",59,0)
 ;
"RTN","DVBCIRPT",60,0)
KVARS ;** Kill the variables used in report
"RTN","DVBCIRPT",61,0)
 K DVBAOUT,ENDDT,BEGDT,DTOUT,DUOUT,RPTTYPE,DVBACAN,DVBASTAT,DVBAPRTY,DVBADLMTR,NUMRPTS
"RTN","DVBCIRPT",62,0)
 D CLEANUP
"RTN","DVBCIRPT",63,0)
 Q
"RTN","DVBCIRPT",64,0)
 ;
"RTN","DVBCIRPT",65,0)
CLEANUP ;** Kill the variables used by the device handler
"RTN","DVBCIRPT",66,0)
 K %ZIS,POP,%IS,IOP
"RTN","DVBCIRPT",67,0)
 K IOBS,IOHG,IOPAR,IOUPAR,IOXY,POP,%DT,%YY,%XX,ION,IOPAR
"RTN","DVBCIRPT",68,0)
 Q
"RTN","DVBCIRPT",69,0)
 ;
"RTN","DVBCIRPT",70,0)
DEVSEL ;** Select the device to report to
"RTN","DVBCIRPT",71,0)
 S %ZIS="AEQ"
"RTN","DVBCIRPT",72,0)
 S %ZIS("A")="Output device: "
"RTN","DVBCIRPT",73,0)
 D ^%ZIS
"RTN","DVBCIRPT",74,0)
 Q
"RTN","DVBCIRPT",75,0)
 ;
"RTN","DVBCIRPT",76,0)
SUM ;** Set up reason counter array, count all 2507's received
"RTN","DVBCIRPT",77,0)
 N DVBAEXMP,DVBAI,DVBAP,DVBATVAR,DVBAMCDES,DVBAPREXM
"RTN","DVBCIRPT",78,0)
 U IO
"RTN","DVBCIRPT",79,0)
 S (DVBARQCT,DVBAINRQ,DVBAXMCT,DVBAINXM)=0
"RTN","DVBCIRPT",80,0)
 S DVBACAN("REQ")=0,DVBACAN("EXM")=0
"RTN","DVBCIRPT",81,0)
 S DVBAENDL=ENDDT
"RTN","DVBCIRPT",82,0)
 S DVBAEXMP=$S(($G(DVBAPRTY)["BDD"):";BDD;QS;",($G(DVBAPRTY)["IDES"):";IDES;",($G(DVBAPRTY)["AO"):";AO;",1:"")
"RTN","DVBCIRPT",83,0)
 ; S DVBAMCDES=((DVBAEXMP]"")&(DVBAPRTY'="AO"))
"RTN","DVBCIRPT",84,0)
 S NUMRPTS=$L(DVBAEXMP,";")
"RTN","DVBCIRPT",85,0)
 S DVBAMCDES=((DVBAEXMP]"")&(NUMRPTS>3))
"RTN","DVBCIRPT",86,0)
 K ^TMP("DVBATOTALS",$J)  ;for multiple priority reporting
"RTN","DVBCIRPT",87,0)
 ;
"RTN","DVBCIRPT",88,0)
 ;** Initialize reason counter array(s)
"RTN","DVBCIRPT",89,0)
 F DVBARIFN=0:0 S DVBARIFN=$O(^DVB(396.94,DVBARIFN)) Q:+DVBARIFN'>0  DO
"RTN","DVBCIRPT",90,0)
 .D:(DVBAMCDES)
"RTN","DVBCIRPT",91,0)
 ..F DVBAP=$P(DVBAEXMP,";",2),$P(DVBAEXMP,";",3)  D
"RTN","DVBCIRPT",92,0)
 ...Q:DVBAP=""
"RTN","DVBCIRPT",93,0)
 ...S ^TMP("DVBATOTALS",$J,DVBAP,"DVBAINXM",DVBARIFN)=0
"RTN","DVBCIRPT",94,0)
 .S DVBAINXM(DVBARIFN)=0
"RTN","DVBCIRPT",95,0)
 D:(DVBAMCDES)
"RTN","DVBCIRPT",96,0)
 .F DVBAP=$P(DVBAEXMP,";",2),$P(DVBAEXMP,";",3)  D
"RTN","DVBCIRPT",97,0)
 ..Q:DVBAP=""
"RTN","DVBCIRPT",98,0)
 ..S ^TMP("DVBATOTALS",$J,DVBAP,"DVBAINXM","NO REASON")=0
"RTN","DVBCIRPT",99,0)
 S DVBAINXM("NO REASON")=0
"RTN","DVBCIRPT",100,0)
 ;
"RTN","DVBCIRPT",101,0)
 ;** Count the total and insufficient number of exams and 2507 requests
"RTN","DVBCIRPT",102,0)
 ;     For performance, if multiple reports, store totals in single pass of data
"RTN","DVBCIRPT",103,0)
 S DVBADTLP=BEGDT-.0001
"RTN","DVBCIRPT",104,0)
 F  S DVBADTLP=$O(^DVB(396.3,"ADP",DVBADTLP)) Q:(DVBADTLP=""!(DVBADTLP>ENDDT))  DO
"RTN","DVBCIRPT",105,0)
 .S DVBAPRIO=""
"RTN","DVBCIRPT",106,0)
 .F  S DVBAPRIO=$O(^DVB(396.3,"ADP",DVBADTLP,DVBAPRIO)) Q:DVBAPRIO=""  DO
"RTN","DVBCIRPT",107,0)
 ..S DVBADALP=""
"RTN","DVBCIRPT",108,0)
 ..F  S DVBADALP=$O(^DVB(396.3,"ADP",DVBADTLP,DVBAPRIO,DVBADALP)) Q:DVBADALP=""  DO
"RTN","DVBCIRPT",109,0)
 ...;check for Parent Request (retrieve current/parent Priority of Exam)
"RTN","DVBCIRPT",110,0)
 ...S DVBAPREXM=$$CHKREQ^DVBCIRP1(DVBADALP)
"RTN","DVBCIRPT",111,0)
 ...;original report run (Exclude new priorities)
"RTN","DVBCIRPT",112,0)
 ...Q:((DVBAEXMP']"")&((";BDD;QS;IDES;AO;")[(";"_DVBAPREXM_";")))
"RTN","DVBCIRPT",113,0)
 ...;report for specific Priority of Exam
"RTN","DVBCIRPT",114,0)
 ...Q:((DVBAEXMP]"")&(DVBAEXMP'[(";"_DVBAPREXM_";")))
"RTN","DVBCIRPT",115,0)
 ...S:(DVBAMCDES) ^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBARQCT")=$G(^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBARQCT"))+1
"RTN","DVBCIRPT",116,0)
 ...S DVBARQCT=DVBARQCT+1
"RTN","DVBCIRPT",117,0)
 ...K DVBAINSF
"RTN","DVBCIRPT",118,0)
 ...I DVBAPRIO="E" DO
"RTN","DVBCIRPT",119,0)
 ....S:(DVBAMCDES) ^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBAINRQ")=$G(^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBAINRQ"))+1
"RTN","DVBCIRPT",120,0)
 ....S DVBAINRQ=DVBAINRQ+1
"RTN","DVBCIRPT",121,0)
 ....I $P(^DVB(396.3,DVBADALP,0),U,18)="RX" D
"RTN","DVBCIRPT",122,0)
 .....S:(DVBAMCDES) ^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBACANREQ")=$G(^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBACANREQ"))+1
"RTN","DVBCIRPT",123,0)
 .....S DVBACAN("REQ")=DVBACAN("REQ")+1
"RTN","DVBCIRPT",124,0)
 ....S DVBAINSF=""
"RTN","DVBCIRPT",125,0)
 ...S DVBAXMDA=""
"RTN","DVBCIRPT",126,0)
 ...F  S DVBAXMDA=$O(^DVB(396.4,"C",DVBADALP,DVBAXMDA)) Q:DVBAXMDA=""  DO
"RTN","DVBCIRPT",127,0)
 ....S:(DVBAMCDES) ^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBAXMCT")=$G(^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBAXMCT"))+1
"RTN","DVBCIRPT",128,0)
 ....S DVBAXMCT=DVBAXMCT+1
"RTN","DVBCIRPT",129,0)
 ....I $D(DVBAINSF) DO
"RTN","DVBCIRPT",130,0)
 .....S:(DVBAMCDES) ^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBAINXM")=$G(^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBAINXM"))+1
"RTN","DVBCIRPT",131,0)
 .....S DVBAINXM=DVBAINXM+1
"RTN","DVBCIRPT",132,0)
 .....S DVBARIFN=$P(^DVB(396.4,DVBAXMDA,0),U,11),DVBASTAT=$P(^(0),U,4)
"RTN","DVBCIRPT",133,0)
 .....S:DVBARIFN="" DVBARIFN="NO REASON"
"RTN","DVBCIRPT",134,0)
 .....S:(DVBAMCDES) ^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBAINXM",DVBARIFN)=$G(^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBAINXM",DVBARIFN))+1
"RTN","DVBCIRPT",135,0)
 .....S DVBAINXM(DVBARIFN)=DVBAINXM(DVBARIFN)+1
"RTN","DVBCIRPT",136,0)
 .....I DVBASTAT="RX" D
"RTN","DVBCIRPT",137,0)
 ......S:(DVBAMCDES) ^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBACANEXM")=$G(^TMP("DVBATOTALS",$J,DVBAPREXM,"DVBACANEXM"))+1
"RTN","DVBCIRPT",138,0)
 ......S DVBACAN("EXM")=DVBACAN("EXM")+1
"RTN","DVBCIRPT",139,0)
 ;
"RTN","DVBCIRPT",140,0)
 S DVBAEXMP=$S(($G(DVBAPRTY)["BDD"):"BDD,QS",($G(DVBAPRTY)["IDES"):"IDES",($G(DVBAPRTY)["AO"):"AO",1:"")
"RTN","DVBCIRPT",141,0)
 F DVBAI=1:1:$L(DVBAEXMP,",")  D
"RTN","DVBCIRPT",142,0)
 .S DVBAPRTY=$P(DVBAEXMP,",",DVBAI)  ;priority to report on
"RTN","DVBCIRPT",143,0)
 .D:(DVBAI>1)  ;Form Feed between multiple Reports
"RTN","DVBCIRPT",144,0)
 ..S DVBATVAR(1,0)="0,0,0,0,1^"
"RTN","DVBCIRPT",145,0)
 ..D WR^DVBAUTL4("DVBATVAR")
"RTN","DVBCIRPT",146,0)
 .;
"RTN","DVBCIRPT",147,0)
 .D:(DVBAMCDES)  ;reset var cntrs for specific priority
"RTN","DVBCIRPT",148,0)
 ..S DVBARQCT=+$G(^TMP("DVBATOTALS",$J,DVBAPRTY,"DVBARQCT"))
"RTN","DVBCIRPT",149,0)
 ..S DVBAINRQ=+$G(^TMP("DVBATOTALS",$J,DVBAPRTY,"DVBAINRQ"))
"RTN","DVBCIRPT",150,0)
 ..S DVBACAN("REQ")=+$G(^TMP("DVBATOTALS",$J,DVBAPRTY,"DVBACANREQ"))
"RTN","DVBCIRPT",151,0)
 ..S DVBAXMCT=+$G(^TMP("DVBATOTALS",$J,DVBAPRTY,"DVBAXMCT"))
"RTN","DVBCIRPT",152,0)
 ..S DVBAINXM=+$G(^TMP("DVBATOTALS",$J,DVBAPRTY,"DVBAINXM"))
"RTN","DVBCIRPT",153,0)
 ..S DVBAP=0 F  S DVBAP=$O(^TMP("DVBATOTALS",$J,DVBAPRTY,"DVBAINXM",DVBAP)) Q:DVBAP=""  D
"RTN","DVBCIRPT",154,0)
 ...S DVBAINXM(DVBAP)=+$G(^TMP("DVBATOTALS",$J,DVBAPRTY,"DVBAINXM",DVBAP))
"RTN","DVBCIRPT",155,0)
 ..S DVBACAN("EXM")=+$G(^TMP("DVBATOTALS",$J,DVBAPRTY,"DVBACANEXM"))
"RTN","DVBCIRPT",156,0)
 .;
"RTN","DVBCIRPT",157,0)
 .D SUMRPT^DVBCIRP1  ;print SUMMARY report
"RTN","DVBCIRPT",158,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","DVBCIRPT",159,0)
 D SUMKILL
"RTN","DVBCIRPT",160,0)
 D ^%ZISC
"RTN","DVBCIRPT",161,0)
 Q
"RTN","DVBCIRPT",162,0)
 ;
"RTN","DVBCIRPT",163,0)
SUMKILL ;** Kill the variables used in the summary report
"RTN","DVBCIRPT",164,0)
 K DVBADTLP,DVBAENDL,DVBARQCT,DVBAINRQ,DVBAXMCT,DVBAINXM
"RTN","DVBCIRPT",165,0)
 K DVBAPRIO,DVBADALP,DVBAXMDA,DVBAINSF,DVBARIFN
"RTN","DVBCIRPT",166,0)
 K ^TMP("DVBATOTALS",$J)
"RTN","DVBCIRPT",167,0)
 Q
"RTN","DVBCIUTL")
0^11^B63990855^B37112339
"RTN","DVBCIUTL",1,0)
DVBCIUTL ;ALB/GTS-AMIE INSUFFICIENT RPT UTILITY RTN ; 11/14/94  9:15 AM
"RTN","DVBCIUTL",2,0)
 ;;2.7;AMIE;**13,17,19,149,184,185**;Apr 10, 1995;Build 18
"RTN","DVBCIUTL",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DVBCIUTL",4,0)
 ;
"RTN","DVBCIUTL",5,0)
 ;** Version Changes
"RTN","DVBCIUTL",6,0)
 ;   2.7 - New routine (Enhc 15)
"RTN","DVBCIUTL",7,0)
 ;
"RTN","DVBCIUTL",8,0)
DETHD ;** Detailed Report header
"RTN","DVBCIUTL",9,0)
 N DVBAI,DVBATXT S DVBAI=2
"RTN","DVBCIUTL",10,0)
 ;I DVBADLMTR="," S:DVBAPRTY'["QS" MSGCNT=1 S:$G(DVBAP)="QS" ^TMP("INSUFF",$J,MSGCNT)=$C(13)_$C(13),MSGCNT=MSGCNT+1 D DETHDLIM Q 
"RTN","DVBCIUTL",11,0)
 I DVBADLMTR="," D  Q
"RTN","DVBCIUTL",12,0)
 . S MSGCNT=MSGCNT+1
"RTN","DVBCIUTL",13,0)
 . S:$G(DVBAP)="QS" ^TMP("INSUFF",$J,MSGCNT)=$C(13)_$C(13),MSGCNT=MSGCNT+1 D DETHDLIM Q
"RTN","DVBCIUTL",14,0)
 . I MSGCNT=1!(MSGCNT=2) D DETHDLIM Q
"RTN","DVBCIUTL",15,0)
 S:'$D(DVBAPG1) TVAR(1,0)="0,15,0,1,0^Detailed Insufficient Exam Report"
"RTN","DVBCIUTL",16,0)
 S:$D(DVBAPG1) TVAR(1,0)="0,15,0,1,1^Detailed Insufficient Exam Report"
"RTN","DVBCIUTL",17,0)
 S DVBATXT=$$PRHD(DVBAPRTY)
"RTN","DVBCIUTL",18,0)
 S TVAR(DVBAI,0)="0,"_((63-$L(DVBATXT))\2)_",0,1,0^"_DVBATXT
"RTN","DVBCIUTL",19,0)
 S DVBAI=DVBAI+1
"RTN","DVBCIUTL",20,0)
 S TVAR(DVBAI,0)="0,11,0,2,0^For Date Range: "_STRTDT_" to "_LSTDT
"RTN","DVBCIUTL",21,0)
 D WR^DVBAUTL4("TVAR")
"RTN","DVBCIUTL",22,0)
 K TVAR
"RTN","DVBCIUTL",23,0)
 Q
"RTN","DVBCIUTL",24,0)
 ;
"RTN","DVBCIUTL",25,0)
DETHDLIM ;Print Report Header in delimited format
"RTN","DVBCIUTL",26,0)
 S ^TMP("INSUFF",$J,MSGCNT)="Detailed Insufficient Exam Report"_$C(13),MSGCNT=MSGCNT+1
"RTN","DVBCIUTL",27,0)
 S DVBATXT=$$PRHD(DVBAPRTY),^TMP("INSUFF",$J,MSGCNT)=""""_DVBATXT_""""_$C(13),MSGCNT=MSGCNT+1
"RTN","DVBCIUTL",28,0)
 S ^TMP("INSUFF",$J,MSGCNT)="FOR DATE RANGE: "_STRTDT_" TO "_LSTDT_$C(13)_$C(13),MSGCNT=MSGCNT+1
"RTN","DVBCIUTL",29,0)
 S ^TMP("INSUFF",$J,MSGCNT)="Reason"_DVBADLMTR_"Exam"_DVBADLMTR_"Provider"_DVBADLMTR_"Exam Date"_DVBADLMTR_"Patient Name"_DVBADLMTR_"SSN"_DVBADLMTR
"RTN","DVBCIUTL",30,0)
 S ^TMP("INSUFF",$J,MSGCNT)=^TMP("INSUFF",$J,MSGCNT)_"Claim #"_DVBADLMTR_"Cancellation Information"_DVBADLMTR_"Cancellation Reason"_$C(13),MSGCNT=MSGCNT+1
"RTN","DVBCIUTL",31,0)
 Q
"RTN","DVBCIUTL",32,0)
 ;
"RTN","DVBCIUTL",33,0)
 ;Input : DVBAPRTY - Priority Exam Code (File #396.3 Fld #9)
"RTN","DVBCIUTL",34,0)
 ;Output: Description for Priority Exam Code
"RTN","DVBCIUTL",35,0)
PRHD(DVBAPRTY) ;priority exam type header info
"RTN","DVBCIUTL",36,0)
 N DVBATXT
"RTN","DVBCIUTL",37,0)
 S DVBATXT=$S((DVBAPRTY["BDD"):"Benefits Delivery at Discharge",1:"X")
"RTN","DVBCIUTL",38,0)
 S:(DVBATXT="X") DVBATXT=$S((DVBAPRTY["QS"):"Quick Start",1:"X")
"RTN","DVBCIUTL",39,0)
 S:(DVBATXT="X") DVBATXT=$S((DVBAPRTY["IDES"):"Integrated Disability Evaluation System",1:"X")
"RTN","DVBCIUTL",40,0)
 S:(DVBATXT="X") DVBATXT=$S((DVBAPRTY["AO"):"Agent Orange",1:"Excludes Exam Priorities: AO,BDD,IDES,QS")
"RTN","DVBCIUTL",41,0)
 S:(DVBATXT'["Excludes") DVBATXT="Priority of Exam: "_DVBATXT
"RTN","DVBCIUTL",42,0)
 Q $G(DVBATXT)
"RTN","DVBCIUTL",43,0)
 ;
"RTN","DVBCIUTL",44,0)
EXMOUT ;** Output exam information for reason/type
"RTN","DVBCIUTL",45,0)
 I $Y>(IOSL-9) DO
"RTN","DVBCIUTL",46,0)
 .I IOST?1"C-".E D TERM^DVBCUTL3
"RTN","DVBCIUTL",47,0)
 .I '$D(GETOUT) DO
"RTN","DVBCIUTL",48,0)
 ..;D DETHD
"RTN","DVBCIUTL",49,0)
 ..D RESOUT
"RTN","DVBCIUTL",50,0)
 ..W !
"RTN","DVBCIUTL",51,0)
 ..D TYPEOUT
"RTN","DVBCIUTL",52,0)
 ..S (DVBARSPT,DVBAXMPT)=""
"RTN","DVBCIUTL",53,0)
 I '$D(GETOUT) DO
"RTN","DVBCIUTL",54,0)
 .I '$D(DVBARSPT) DO
"RTN","DVBCIUTL",55,0)
 ..D RESOUT
"RTN","DVBCIUTL",56,0)
 ..S DVBARSPT=""
"RTN","DVBCIUTL",57,0)
 .I '$D(DVBAXMPT) DO
"RTN","DVBCIUTL",58,0)
 ..W !
"RTN","DVBCIUTL",59,0)
 ..D TYPEOUT
"RTN","DVBCIUTL",60,0)
 ..S DVBAXMPT=""
"RTN","DVBCIUTL",61,0)
 .S (DVBARQDT,DVBAXDT,DVBAXRS)=""
"RTN","DVBCIUTL",62,0)
 .S REQDA=$P(^DVB(396.4,XMDA,0),U,2) ;*REQDA of PRIORITY Insuf 2507
"RTN","DVBCIUTL",63,0)
 .I $D(^DVB(396.4,XMDA,"CAN")) D
"RTN","DVBCIUTL",64,0)
 ..S DVBAXDT=$P(^DVB(396.4,XMDA,"CAN"),U,1),DVBAXRS=$P(^("CAN"),U,3)
"RTN","DVBCIUTL",65,0)
 ..I DVBAXDT S DVBAXDT=$$FMTE^XLFDT(DVBAXDT,"5DZ")
"RTN","DVBCIUTL",66,0)
 ..I DVBAXRS S DVBAXRS=$P(^DVB(396.5,DVBAXRS,0),U,1)
"RTN","DVBCIUTL",67,0)
 .I +REQDA>0 DO  ;*Get REQDA of Orig 2507
"RTN","DVBCIUTL",68,0)
 ..S DFN=$P(^DVB(396.3,REQDA,0),U,1),DVBARQDT=$P(^(0),U,2),DVBARQDT=$$FMTE^XLFDT(DVBARQDT,"5DZ")
"RTN","DVBCIUTL",69,0)
 ..I '$D(^DVB(396.3,REQDA,5)) S REQDA=""
"RTN","DVBCIUTL",70,0)
 ..I +REQDA>0,($D(^DVB(396.3,REQDA,5))) S REQDA=$P(^DVB(396.3,REQDA,5),U,1)
"RTN","DVBCIUTL",71,0)
 .S DVBAORXM=""
"RTN","DVBCIUTL",72,0)
 .I +REQDA>0 DO  ;*If link to orig 2507
"RTN","DVBCIUTL",73,0)
 ..S DVBAXMTP=$P(^DVB(396.4,XMDA,0),U,3)
"RTN","DVBCIUTL",74,0)
 ..S DVBACMND="F  S DVBAORXM=$O(^DVB(396.4,""ARQ"_REQDA_""","_DVBAXMTP_",DVBAORXM)) Q:DVBAORXM=""""  Q:$D(^DVB(396.4,""APS"","_DFN_","_DVBAXMTP_",""C"",DVBAORXM))"
"RTN","DVBCIUTL",75,0)
 ..X DVBACMND ;**Return DA of original, insuff exam
"RTN","DVBCIUTL",76,0)
 .S DVBANAME=$P(^DPT(DFN,0),U,1)
"RTN","DVBCIUTL",77,0)
 .D DEM^VADPT I $G(VADM(1))'="" S DVBASSN=$S(DVBADLMTR=",":$P($G(VADM(2)),U,2),1:$P($G(VADM(2)),U,1))
"RTN","DVBCIUTL",78,0)
 .S DVBACNUM="" S:$D(^DPT(DFN,.31)) DVBACNUM=$P(^DPT(DFN,.31),U,3)
"RTN","DVBCIUTL",79,0)
 .I DVBAORXM'="",($D(^DVB(396.4,DVBAORXM,0))) S DVBAORDT=$P(^DVB(396.4,DVBAORXM,0),U,6)
"RTN","DVBCIUTL",80,0)
 .I DVBAORXM'="",('$D(^DVB(396.4,DVBAORXM,0))) S (DVBAORDT,DVBADTE)=""
"RTN","DVBCIUTL",81,0)
 .S:DVBAORXM="" (DVBAORDT,DVBADTE)=""
"RTN","DVBCIUTL",82,0)
 .I DVBAORDT'="" DO
"RTN","DVBCIUTL",83,0)
 ..S DVBADTWK=$P(DVBAORDT,".",1)
"RTN","DVBCIUTL",84,0)
 ..S DVBADTE=$$FMTE^XLFDT(DVBADTWK,"5DZ")
"RTN","DVBCIUTL",85,0)
 .S DVBAORPV=$P(^DVB(396.4,XMDA,0),U,12)
"RTN","DVBCIUTL",86,0)
 .I DVBADLMTR="," D DETDELIM D:DVBAXDT]"" DETITEMS S ^TMP("INSUFF",$J,MSGCNT)=^TMP("INSUFF",$J,MSGCNT)_$C(13),MSGCNT=MSGCNT+1 Q
"RTN","DVBCIUTL",87,0)
 .S DVBAORP1=$E(DVBAORPV,1,15)
"RTN","DVBCIUTL",88,0)
 .S DVBANAM1=$E(DVBANAME,1,15)
"RTN","DVBCIUTL",89,0)
 .W !,DVBAORP1
"RTN","DVBCIUTL",90,0)
 .W:$L(DVBAORPV)>$L(DVBAORP1) "**" ;**Indicate that Dr.'s Name truncated
"RTN","DVBCIUTL",91,0)
 .W ?20,DVBADTE,?32,DVBANAM1
"RTN","DVBCIUTL",92,0)
 .W:$L(DVBANAME)>$L(DVBANAM1) "**" ;**Indicate that Vet's Name truncated
"RTN","DVBCIUTL",93,0)
 .W ?52,DVBASSN,?66,DVBACNUM
"RTN","DVBCIUTL",94,0)
 .I DVBAXDT]"" D
"RTN","DVBCIUTL",95,0)
 ..W !,"Exam request of "_DVBARQDT_" to correct insufficiency was cancelled on "_DVBAXDT_"."
"RTN","DVBCIUTL",96,0)
 ..W !,"Reason: "_DVBAXRS_"."
"RTN","DVBCIUTL",97,0)
 Q
"RTN","DVBCIUTL",98,0)
 ;
"RTN","DVBCIUTL",99,0)
DETDELIM ; Print details of Insufficient Exams
"RTN","DVBCIUTL",100,0)
 ; Reason,Exam,Provider,Exam Date,Patient Name,SSN,Claim #
"RTN","DVBCIUTL",101,0)
 I $D(^TMP("INSUFF",$J,MSGCNT)) S ^TMP("INSUFF",$J,MSGCNT)=^TMP("INSUFF",$J,MSGCNT)_""""_DVBAORPV_""""_DVBADLMTR_DVBADTE_DVBADLMTR_""""_DVBANAME_""""_DVBADLMTR_DVBASSN_DVBADLMTR_$C(160)_DVBACNUM_"" Q
"RTN","DVBCIUTL",102,0)
 I '$D(^TMP("INSUFF",$J,MSGCNT)) S ^TMP("INSUFF",$J,MSGCNT)=DVBADLMTR_DVBADLMTR_""""_DVBAORPV_""""_DVBADLMTR_DVBADTE_DVBADLMTR_""""_DVBANAME_""""_DVBADLMTR_DVBASSN_DVBADLMTR_$C(160)_DVBACNUM_""
"RTN","DVBCIUTL",103,0)
 Q
"RTN","DVBCIUTL",104,0)
 ;
"RTN","DVBCIUTL",105,0)
DETITEMS ; Print final exam details
"RTN","DVBCIUTL",106,0)
 S ^TMP("INSUFF",$J,MSGCNT)=^TMP("INSUFF",$J,MSGCNT)_DVBADLMTR_"Exam request of "_DVBARQDT_" to correct insufficiency was cancelled on "_DVBAXDT_"."_DVBADLMTR
"RTN","DVBCIUTL",107,0)
 S ^TMP("INSUFF",$J,MSGCNT)=^TMP("INSUFF",$J,MSGCNT)_DVBAXRS_"."
"RTN","DVBCIUTL",108,0)
 Q
"RTN","DVBCIUTL",109,0)
 ;
"RTN","DVBCIUTL",110,0)
RESOUT ;** Output the Reason
"RTN","DVBCIUTL",111,0)
 I DVBADLMTR="," S ^TMP("INSUFF",$J,MSGCNT)=$P(^DVB(396.94,$P(^DVB(396.4,XMDA,0),U,11),0),U,3)_DVBADLMTR Q
"RTN","DVBCIUTL",112,0)
 W !!!!!,"Reason: ",$P(^DVB(396.94,$P(^DVB(396.4,XMDA,0),U,11),0),U,3)
"RTN","DVBCIUTL",113,0)
 Q
"RTN","DVBCIUTL",114,0)
 ;
"RTN","DVBCIUTL",115,0)
TYPEOUT ;** Output the Exam
"RTN","DVBCIUTL",116,0)
 I DVBADLMTR="," D TYPEDLIM Q 
"RTN","DVBCIUTL",117,0)
 W !,"Exam: ",$P(^DVB(396.6,$P(^DVB(396.4,XMDA,0),U,3),0),U,2)
"RTN","DVBCIUTL",118,0)
 W !,"Provider",?20,"Exam Dt",?32,"Patient Name",?52,"SSN",?66,"Claim #"
"RTN","DVBCIUTL",119,0)
 Q
"RTN","DVBCIUTL",120,0)
 ;
"RTN","DVBCIUTL",121,0)
TYPEDLIM ; ** Output the delimited Exam 
"RTN","DVBCIUTL",122,0)
 I $D(^TMP("INSUFF",$J,MSGCNT)) S ^TMP("INSUFF",$J,MSGCNT)=^TMP("INSUFF",$J,MSGCNT)_""""_$P(^DVB(396.6,$P(^DVB(396.4,XMDA,0),U,3),0),U,2)_""""_DVBADLMTR Q
"RTN","DVBCIUTL",123,0)
 I '$D(^TMP("INSUFF",$J,MSGCNT)) S ^TMP("INSUFF",$J,MSGCNT)=$P(^DVB(396.94,$P(^DVB(396.4,XMDA,0),U,11),0),U,3)_DVBADLMTR_""""_$P(^DVB(396.6,$P(^DVB(396.4,XMDA,0),U,3),0),U,2)_""""_DVBADLMTR Q
"RTN","DVBCIUTL",124,0)
 ;
"RTN","DVBCIUTL",125,0)
RSEL ;** Select Reasons
"RTN","DVBCIUTL",126,0)
 ;** The selection prompt is defaulted to ALL.  If the user selects
"RTN","DVBCIUTL",127,0)
 ;**  'All', only reasons for exams entered on requests with a
"RTN","DVBCIUTL",128,0)
 ;**  priority of 'Insufficient' will be reported.  Not all reasons.
"RTN","DVBCIUTL",129,0)
 ;
"RTN","DVBCIUTL",130,0)
 W @IOF,!
"RTN","DVBCIUTL",131,0)
 W !,"Insufficient Reason Selection"
"RTN","DVBCIUTL",132,0)
 S DVBCYQ=""
"RTN","DVBCIUTL",133,0)
 N RESANS,DVBAOUT S DVBAOUT="" ;**Pre-read
"RTN","DVBCIUTL",134,0)
 K Y,DTOUT,DUOUT,DVBATSAV
"RTN","DVBCIUTL",135,0)
 F  Q:(DVBAOUT=1!(DVBCYQ=1))  DO
"RTN","DVBCIUTL",136,0)
 .W !!,"  Enter '^' to end Reason Selection"
"RTN","DVBCIUTL",137,0)
 .W !,"  'Return' to select all Insufficient Reasons",!
"RTN","DVBCIUTL",138,0)
 .K DIC,DTOUT,DUOUT,Y
"RTN","DVBCIUTL",139,0)
 .W !,"  Enter Insufficient Reason: ALL//"
"RTN","DVBCIUTL",140,0)
 .R RESANS:DTIME
"RTN","DVBCIUTL",141,0)
 .S:$T DVBATSAV=""
"RTN","DVBCIUTL",142,0)
 .I RESANS=""&($D(DVBATSAV)) S Y=-1 D INREAS^DVBCIUT1
"RTN","DVBCIUTL",143,0)
 .S:('$D(DVBATSAV)!(RESANS["^")) DVBAOUT="1"
"RTN","DVBCIUTL",144,0)
 .I DVBAOUT'=1,('$D(Y)) DO
"RTN","DVBCIUTL",145,0)
 ..I RESANS["?" DO
"RTN","DVBCIUTL",146,0)
 ...N LPDA S LPDA=0
"RTN","DVBCIUTL",147,0)
 ...W !,"CHOOSE FROM:"
"RTN","DVBCIUTL",148,0)
 ...F  S LPDA=$O(^DVB(396.94,LPDA)) Q:+LPDA'>0  DO
"RTN","DVBCIUTL",149,0)
 ....W !,?3,$P(^DVB(396.94,LPDA,0),U,1)
"RTN","DVBCIUTL",150,0)
 ...W !
"RTN","DVBCIUTL",151,0)
 ..I RESANS'["?" DO
"RTN","DVBCIUTL",152,0)
 ...S DIC="^DVB(396.94,"
"RTN","DVBCIUTL",153,0)
 ...S DIC(0)="EMQ"
"RTN","DVBCIUTL",154,0)
 ...S X=RESANS
"RTN","DVBCIUTL",155,0)
 ...D ^DIC
"RTN","DVBCIUTL",156,0)
 ...D:+Y>0 INREAS^DVBCIUT1
"RTN","DVBCIUTL",157,0)
 .I RESANS="",($D(Y)&(+Y=-1)) S DVBCYQ=1
"RTN","DVBCIUTL",158,0)
 K DTOUT,DUOUT,Y,DIC,DVBCYQ,DVBATSAV
"RTN","DVBCIUTL",159,0)
 Q
"RTN","DVBCIUTL",160,0)
 ;
"RTN","DVBCIUTL",161,0)
XMSEL ;** Select Exams
"RTN","DVBCIUTL",162,0)
 ;** The selection prompt is defaulted to ALL.  If the user selects
"RTN","DVBCIUTL",163,0)
 ;**  'All', only exams entered on requests with a priority of 
"RTN","DVBCIUTL",164,0)
 ;**  'Insufficient' will be reported.  Not all exams.
"RTN","DVBCIUTL",165,0)
 ;
"RTN","DVBCIUTL",166,0)
 W @IOF,!
"RTN","DVBCIUTL",167,0)
 W !,"AMIE Exam Selection"
"RTN","DVBCIUTL",168,0)
 S DVBCYQ=""
"RTN","DVBCIUTL",169,0)
 K Y,DTOUT,DUOUT
"RTN","DVBCIUTL",170,0)
 F  Q:($D(DTOUT)!($D(DUOUT)!(DVBCYQ=1)))  DO
"RTN","DVBCIUTL",171,0)
 .W !!,"  Enter '^' to end Exam Selection"
"RTN","DVBCIUTL",172,0)
 .W !,"  'Return' to select all AMIE Exams",!
"RTN","DVBCIUTL",173,0)
 .K DIC,DTOUT,DUOUT
"RTN","DVBCIUTL",174,0)
 .S DIC="^DVB(396.6,"
"RTN","DVBCIUTL",175,0)
 .S DIC(0)="AEMQ"
"RTN","DVBCIUTL",176,0)
 .S DIC("A")="  Enter Exam: ALL//"
"RTN","DVBCIUTL",177,0)
 .;removed screen for inactive exams
"RTN","DVBCIUTL",178,0)
 .D ^DIC
"RTN","DVBCIUTL",179,0)
 .I '$D(DTOUT),('$D(DUOUT)) D EXMTPE^DVBCIUT1
"RTN","DVBCIUTL",180,0)
 .I $D(Y),(+Y=-1) S DVBCYQ=1
"RTN","DVBCIUTL",181,0)
 K DTOUT,DUOUT,Y,DIC,DVBCYQ
"RTN","DVBCIUTL",182,0)
 Q
"RTN","DVBCIUTL",183,0)
 ;
"RTN","DVBCIUTL",184,0)
 ;Input: DVBADIRA - Prompt to display for DIR call
"RTN","DVBCIUTL",185,0)
 ;Ouput: Code selected from set or ^ if user exited selection
"RTN","DVBCIUTL",186,0)
EXMPRTY(DVBADIRA) ;** Select Priority of Exam
"RTN","DVBCIUTL",187,0)
 N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","DVBCIUTL",188,0)
 S DIR(0)="S^AO:Agent Orange;BDD:Benefits Delivery at Discharge / Quick Start;"
"RTN","DVBCIUTL",189,0)
 S DIR(0)=DIR(0)_"IDES:Integrated Disability Evaluation System;"
"RTN","DVBCIUTL",190,0)
 S DIR(0)=DIR(0)_"ALL:All Others"
"RTN","DVBCIUTL",191,0)
 S DIR("A")=$S($G(DVBADIRA)]"":DVBADIRA,1:"Select Priority of Exam for the Report")
"RTN","DVBCIUTL",192,0)
 S DIR("B")="All Others"
"RTN","DVBCIUTL",193,0)
 S DIR("T")=DTIME  ;time-out value specified by system
"RTN","DVBCIUTL",194,0)
 S DIR("?",1)="Select the priority of exam(s) to report on or ALL for the original report,"
"RTN","DVBCIUTL",195,0)
 S DIR("?")="which excludes the AO, BDD and IDES exam priorities."
"RTN","DVBCIUTL",196,0)
 D ^DIR
"RTN","DVBCIUTL",197,0)
 Q Y
"VER")
8.0^22.0
"^DD",396.4,396.4,100,0)
CONTRACTOR^P396.45'^DVB(396.45,^CNTRCTR;1^Q
"^DD",396.4,396.4,100,3)
Select the external Contractor that will perform the patient's 2507 exam.
"^DD",396.4,396.4,100,21,0)
^^2^2^3111027^
"^DD",396.4,396.4,100,21,1,0)
This field stores the external Contractor (or Company) reference that has 
"^DD",396.4,396.4,100,21,2,0)
been assigned to perform this 2507 exam.
"^DD",396.4,396.4,100,"DT")
3110511
"^DD",396.4,396.4,101,0)
DATE TRANSFERRED TO CONTRACTOR^D^^CNTRCTR;2^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",396.4,396.4,101,3)
Enter the Date/Time the 2507 exam was sent to the contractor.
"^DD",396.4,396.4,101,21,0)
^^3^3^3110818^
"^DD",396.4,396.4,101,21,1,0)
This field stores the transaction date and time of when the patient's 
"^DD",396.4,396.4,101,21,2,0)
2507 exam(s) was sent to the external Contractor (or Company) for 
"^DD",396.4,396.4,101,21,3,0)
processing.
"^DD",396.4,396.4,101,"DT")
3110511
"^DD",396.4,396.4,102,0)
DATE RECEIVED FROM CONTRACTOR^D^^CNTRCTR;3^S %DT="ETR" D ^%DT S X=Y K:Y<1 X
"^DD",396.4,396.4,102,3)
Enter the Date/Time the 2507 exam was received from the contractor.
"^DD",396.4,396.4,102,21,0)
^^3^3^3110511^
"^DD",396.4,396.4,102,21,1,0)
This field stores the transaction date and time of when the patient's 
"^DD",396.4,396.4,102,21,2,0)
completed 2507 exam was received by the VA from the external Contractor 
"^DD",396.4,396.4,102,21,3,0)
(or Company).
"^DD",396.4,396.4,102,"DT")
3110511
"^DD",396.45,396.45,0)
FIELD^^104^9
"^DD",396.45,396.45,0,"DDA")
N
"^DD",396.45,396.45,0,"DT")
3120717
"^DD",396.45,396.45,0,"IX","B",396.45,.01)

"^DD",396.45,396.45,0,"NM","2507 EXAM CONTRACTORS")

"^DD",396.45,396.45,0,"PT",396.4,100)

"^DD",396.45,396.45,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",396.45,396.45,.01,1,0)
^.1
"^DD",396.45,396.45,.01,1,1,0)
396.45^B
"^DD",396.45,396.45,.01,1,1,1)
S ^DVB(396.45,"B",$E(X,1,30),DA)=""
"^DD",396.45,396.45,.01,1,1,2)
K ^DVB(396.45,"B",$E(X,1,30),DA)
"^DD",396.45,396.45,.01,3)
Enter the name (3-30 characters) of the Contractor (or Company) who can perform 2507 exams for patients.
"^DD",396.45,396.45,.01,21,0)
^.001^2^2^3111027^^^
"^DD",396.45,396.45,.01,21,1,0)
This is the name of the external Contractor (or Company) who can perform 
"^DD",396.45,396.45,.01,21,2,0)
2507 exams for patients outside of a VA clinic/hospital.
"^DD",396.45,396.45,.01,"DT")
3110511
"^DD",396.45,396.45,1,0)
STATUS^S^A:ACTIVE;I:INACTIVE;^0;2^Q
"^DD",396.45,396.45,1,3)
Enter the code which identifies the Contractor's (or Company's) current status.
"^DD",396.45,396.45,1,21,0)
^.001^2^2^3110818^^
"^DD",396.45,396.45,1,21,1,0)
This field indicates the current status of the Contractor (or Company) 
"^DD",396.45,396.45,1,21,2,0)
for performing 2507 exams for patients outside of a VA clinic/hospital.
"^DD",396.45,396.45,1,"DT")
3110511
"^DD",396.45,396.45,2,0)
EMAIL ADDRESS^F^^0;3^K:$L(X)>99!($L(X)<7)!'(X?1E.E1"@".E1".".E) X
"^DD",396.45,396.45,2,3)
Enter the Contractor's (or Company's) email address (7-99 characters) where the 2507 exams should be sent.
"^DD",396.45,396.45,2,21,0)
^.001^2^2^3111027^^
"^DD",396.45,396.45,2,21,1,0)
This field stores the email address for the Contractor (or Company), 
"^DD",396.45,396.45,2,21,2,0)
which identifies where the patient's 2507 exam(s) should be sent.
"^DD",396.45,396.45,2,"DT")
3110511
"^DD",396.45,396.45,3,0)
REMOTE CONTRACTOR^NJ9,0^^0;4^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",396.45,396.45,3,3)
Enter the numeric IEN value (1-9 digits) that uniquely identifies the Contractor entry (File #396.45) on the remote CLAIMS VistA server.
"^DD",396.45,396.45,3,21,0)
^.001^9^9^3120727^^^^
"^DD",396.45,396.45,3,21,1,0)
This field stores the IEN value for the Contractor entry (File #396.45) 
"^DD",396.45,396.45,3,21,2,0)
on the CLAIMS system. This IEN value will be used to query and retrieve 
"^DD",396.45,396.45,3,21,3,0)
the SFTP connection information for the Contractor.
"^DD",396.45,396.45,3,21,4,0)
 
"^DD",396.45,396.45,3,21,5,0)
The CLAIMS system is a mock VistA system utilized by CAPRI and other 
"^DD",396.45,396.45,3,21,6,0)
applications as the central user authentication system. The Broker 
"^DD",396.45,396.45,3,21,7,0)
Security Enhancements (BSE) will be used to call back into this account 
"^DD",396.45,396.45,3,21,8,0)
to retrieve the SFTP information for the contractor, so that the 
"^DD",396.45,396.45,3,21,9,0)
individual sites won't have to maintain these common connections.
"^DD",396.45,396.45,3,"DT")
3120717
"^DD",396.45,396.45,100,0)
USERNAME^FXO^^VNDRSFTP;1^K:$L(X)>40!($L(X)<1) X I $D(X) D EN^DVBACEM1(.X,1,X)
"^DD",396.45,396.45,100,2)
S Y(0)=Y S Y(0)=Y S Y="<Hidden>"
"^DD",396.45,396.45,100,2.1)
S Y(0)=Y S Y="<Hidden>"
"^DD",396.45,396.45,100,3)
Enter the User Name (1-40 characters) for connecting to the Contractor's SFTP Server.
"^DD",396.45,396.45,100,21,0)
^^6^6^3120724^
"^DD",396.45,396.45,100,21,1,0)
This field stores the User Name for connecting to the Contractor's SFTP 
"^DD",396.45,396.45,100,21,2,0)
server for retrieving completed and transmitting new 2507 exams.
"^DD",396.45,396.45,100,21,3,0)
 
"^DD",396.45,396.45,100,21,4,0)
NOTE: This field will be encrypted in the Input Transform, so that the 
"^DD",396.45,396.45,100,21,5,0)
contents cannot be easily seen. All Contractor SFTP information should be 
"^DD",396.45,396.45,100,21,6,0)
treated as confidential.
"^DD",396.45,396.45,100,"DT")
3120717
"^DD",396.45,396.45,101,0)
PASSWORD^FXO^^VNDRSFTP;2^K:$L(X)>40!($L(X)<1) X I $D(X) D EN^DVBACEM1(.X,1,X)
"^DD",396.45,396.45,101,2)
S Y(0)=Y S Y(0)=Y S Y="<Hidden>"
"^DD",396.45,396.45,101,2.1)
S Y(0)=Y S Y="<Hidden>"
"^DD",396.45,396.45,101,3)
Enter the Password (1-40 characters) for connecting to the Contractor's SFTP Server.
"^DD",396.45,396.45,101,21,0)
^^6^6^3120724^
"^DD",396.45,396.45,101,21,1,0)
This field stores the Password for connecting to the Contractor's SFTP 
"^DD",396.45,396.45,101,21,2,0)
Server for retrieving completed and transmitting new 2507 exams.
"^DD",396.45,396.45,101,21,3,0)
 
"^DD",396.45,396.45,101,21,4,0)
NOTE: This field will be encrypted in the Input Transform, so that the 
"^DD",396.45,396.45,101,21,5,0)
contents cannot be easily seen. All Contractor SFTP information should be 
"^DD",396.45,396.45,101,21,6,0)
treated as confidential.
"^DD",396.45,396.45,101,"DT")
3120724
"^DD",396.45,396.45,102,0)
ADDRESS^F^^VNDRSFTP;3^K:$L(X)>150!($L(X)<7) X
"^DD",396.45,396.45,102,3)
Enter the Address/URL (7-150 characters) for the location of the Contractor's SFTP Server.
"^DD",396.45,396.45,102,21,0)
^^3^3^3120717^
"^DD",396.45,396.45,102,21,1,0)
This fields stores the Domain Name/IP Address (URL) which identifies the 
"^DD",396.45,396.45,102,21,2,0)
location of the Contractor's SFTP Server. All Contractor SFTP information 
"^DD",396.45,396.45,102,21,3,0)
should be treated as confidential.
"^DD",396.45,396.45,102,"DT")
3120717
"^DD",396.45,396.45,103,0)
PORT^NJ2,0^^VNDRSFTP;4^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",396.45,396.45,103,3)
Enter the numeric Port value (1-2 digits) for connecting to the Contractor's SFTP Server (Default is 22).
"^DD",396.45,396.45,103,21,0)
^.001^3^3^3120724^^
"^DD",396.45,396.45,103,21,1,0)
This field stores the PORT value used to connect to the Contractor's SFTP 
"^DD",396.45,396.45,103,21,2,0)
Server for retrieving completed and transmitting new 2507 requests. All 
"^DD",396.45,396.45,103,21,3,0)
Contractor SFTP information should be treated as confidential.
"^DD",396.45,396.45,103,"DT")
3120717
"^DD",396.45,396.45,104,0)
DEFAULT PATH^F^^VNDRSFTP1;1^K:$L(X)>150!($L(X)<2) X
"^DD",396.45,396.45,104,3)
Enter the Default Path (2-150 characters) for accessing the root folders on the Contractor's SFTP Server.
"^DD",396.45,396.45,104,21,0)
^^5^5^3120724^
"^DD",396.45,396.45,104,21,1,0)
This field stores the DEFAULT PATH to the root folders 
"^DD",396.45,396.45,104,21,2,0)
(DOWNLOAD/ARCHIVED/UPLOAD) on the Contractor's SFTP Server. This path 
"^DD",396.45,396.45,104,21,3,0)
will be prefixed to one of the root folders when a connection is 
"^DD",396.45,396.45,104,21,4,0)
established. All Contractor SFTP information should be treated as 
"^DD",396.45,396.45,104,21,5,0)
confidential.
"^DD",396.45,396.45,104,"DT")
3120717
"^DIC",396.45,396.45,0)
2507 EXAM CONTRACTORS^396.45
"^DIC",396.45,396.45,0,"GL")
^DVB(396.45,
"^DIC",396.45,396.45,"%",0)
^1.005
"^DIC",396.45,396.45,"%D",0)
^^7^7^3120727^
"^DIC",396.45,396.45,"%D",1,0)
This file contains contacts for external Contractors (or Companies) who 
"^DIC",396.45,396.45,"%D",2,0)
are authorized to perform 2507 exams for VA patients at their respective 
"^DIC",396.45,396.45,"%D",3,0)
clinic/hospital.
"^DIC",396.45,396.45,"%D",4,0)
 
"^DIC",396.45,396.45,"%D",5,0)
Note: SFTP information will be maintained and referenced from the central 
"^DIC",396.45,396.45,"%D",6,0)
CLAIMS VistA system, denoted by the REMOTE CONTRACTOR Field #3. SFTP 
"^DIC",396.45,396.45,"%D",7,0)
information added locally will be ignored by the demTRAN application.
"^DIC",396.45,"B","2507 EXAM CONTRACTORS",396.45)

"BLD",8541,6)
^163
**END**
**END**
