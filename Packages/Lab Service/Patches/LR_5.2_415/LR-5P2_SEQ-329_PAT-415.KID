Released LR*5.2*415 SEQ #329
Extracted from mail message
**KIDS**:LR*5.2*415^

**INSTALL NAME**
LR*5.2*415
"BLD",8882,0)
LR*5.2*415^LAB SERVICE^0^3110929^y
"BLD",8882,1,0)
^^5^5^3110928^^
"BLD",8882,1,1,0)
This patch is a VM patch that addresses a problem in the Lab package
"BLD",8882,1,2,0)
related to accessioning with in-common accession areas. When an
"BLD",8882,1,3,0)
"in-common" accession area is added to an existing accession area, it
"BLD",8882,1,4,0)
is possible that data in file #68 (ACCESSION) will be overlaid and 2
"BLD",8882,1,5,0)
patients will have the same accession number.
"BLD",8882,4,0)
^9.64PA^^
"BLD",8882,6.3)
1
"BLD",8882,"ABPKG")
n
"BLD",8882,"KRN",0)
^9.67PA^779.2^20
"BLD",8882,"KRN",.4,0)
.4
"BLD",8882,"KRN",.401,0)
.401
"BLD",8882,"KRN",.402,0)
.402
"BLD",8882,"KRN",.403,0)
.403
"BLD",8882,"KRN",.5,0)
.5
"BLD",8882,"KRN",.84,0)
.84
"BLD",8882,"KRN",3.6,0)
3.6
"BLD",8882,"KRN",3.8,0)
3.8
"BLD",8882,"KRN",9.2,0)
9.2
"BLD",8882,"KRN",9.8,0)
9.8
"BLD",8882,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",8882,"KRN",9.8,"NM",1,0)
LRWLST1^^0^B94767270
"BLD",8882,"KRN",9.8,"NM","B","LRWLST1",1)

"BLD",8882,"KRN",19,0)
19
"BLD",8882,"KRN",19.1,0)
19.1
"BLD",8882,"KRN",101,0)
101
"BLD",8882,"KRN",409.61,0)
409.61
"BLD",8882,"KRN",771,0)
771
"BLD",8882,"KRN",779.2,0)
779.2
"BLD",8882,"KRN",870,0)
870
"BLD",8882,"KRN",8989.51,0)
8989.51
"BLD",8882,"KRN",8989.52,0)
8989.52
"BLD",8882,"KRN",8994,0)
8994
"BLD",8882,"KRN","B",.4,.4)

"BLD",8882,"KRN","B",.401,.401)

"BLD",8882,"KRN","B",.402,.402)

"BLD",8882,"KRN","B",.403,.403)

"BLD",8882,"KRN","B",.5,.5)

"BLD",8882,"KRN","B",.84,.84)

"BLD",8882,"KRN","B",3.6,3.6)

"BLD",8882,"KRN","B",3.8,3.8)

"BLD",8882,"KRN","B",9.2,9.2)

"BLD",8882,"KRN","B",9.8,9.8)

"BLD",8882,"KRN","B",19,19)

"BLD",8882,"KRN","B",19.1,19.1)

"BLD",8882,"KRN","B",101,101)

"BLD",8882,"KRN","B",409.61,409.61)

"BLD",8882,"KRN","B",771,771)

"BLD",8882,"KRN","B",779.2,779.2)

"BLD",8882,"KRN","B",870,870)

"BLD",8882,"KRN","B",8989.51,8989.51)

"BLD",8882,"KRN","B",8989.52,8989.52)

"BLD",8882,"KRN","B",8994,8994)

"BLD",8882,"QUES",0)
^9.62^^
"BLD",8882,"REQB",0)
^9.611^1^1
"BLD",8882,"REQB",1,0)
LR*5.2*379^2
"BLD",8882,"REQB","B","LR*5.2*379",1)

"MBREQ")
0
"PKG",26,-1)
1^1
"PKG",26,0)
LAB SERVICE^LR^CORE LAB SYSTEM
"PKG",26,20,0)
^9.402P^1^1
"PKG",26,20,1,0)
2^^LRXDRPT
"PKG",26,20,1,1)

"PKG",26,20,"B",2,1)

"PKG",26,22,0)
^9.49I^1^1
"PKG",26,22,1,0)
5.2^2940927^2950304
"PKG",26,22,1,"PAH",1,0)
415^3110929
"PKG",26,22,1,"PAH",1,1,0)
^^5^5^3110929
"PKG",26,22,1,"PAH",1,1,1,0)
This patch is a VM patch that addresses a problem in the Lab package
"PKG",26,22,1,"PAH",1,1,2,0)
related to accessioning with in-common accession areas. When an
"PKG",26,22,1,"PAH",1,1,3,0)
"in-common" accession area is added to an existing accession area, it
"PKG",26,22,1,"PAH",1,1,4,0)
is possible that data in file #68 (ACCESSION) will be overlaid and 2
"PKG",26,22,1,"PAH",1,1,5,0)
patients will have the same accession number.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","LRWLST1")
0^1^B94767270^B84896731
"RTN","LRWLST1",1,0)
LRWLST1 ;DALOI/CJS/RWF/FHS - ACCESSION SETUP ; July 19, 2006
"RTN","LRWLST1",2,0)
 ;;5.2;LAB SERVICE;**48,65,121,153,261,286,331,379,415**;Sep 27, 1994;Build 1
"RTN","LRWLST1",3,0)
 ;
"RTN","LRWLST1",4,0)
 ; Reference to ^DIC(42 supported by IA #10039
"RTN","LRWLST1",5,0)
 ; Reference to ^SC( supported by IA #10040
"RTN","LRWLST1",6,0)
 ;
"RTN","LRWLST1",7,0)
 S LRWLC=0
"RTN","LRWLST1",8,0)
 F  S LRWLC=$O(LRTSTS(LRWLC)) Q:LRWLC<1  S LRAD=DT D SPLIT
"RTN","LRWLST1",9,0)
 ;
"RTN","LRWLST1",10,0)
 ; If LEDI and comments came with order then copy to order in #69
"RTN","LRWLST1",11,0)
 I $G(LRORDRR)="R",$G(LR696),$D(^LRO(69.6,LR696,99)) D
"RTN","LRWLST1",12,0)
 . N LRDIE
"RTN","LRWLST1",13,0)
 . D WP^DIE(69.01,LRSN_","_LRODT_",",16,"A","^LRO(69.6,LR696,99)","LRDIE(16)")
"RTN","LRWLST1",14,0)
 ;
"RTN","LRWLST1",15,0)
 K DIC,DLAYGO,DR,DA,DIE,LRIXX
"RTN","LRWLST1",16,0)
 Q:$G(LRORDR)="P"
"RTN","LRWLST1",17,0)
 K LRNM,LRTSTS
"RTN","LRWLST1",18,0)
 K ^TMP("LR",$J,"TMP")
"RTN","LRWLST1",19,0)
 Q
"RTN","LRWLST1",20,0)
 ;
"RTN","LRWLST1",21,0)
SPLIT ;
"RTN","LRWLST1",22,0)
 N LRAA,LRX
"RTN","LRWLST1",23,0)
 ; Setup regular accessions (LRUNQ=0)
"RTN","LRWLST1",24,0)
 S LRUNQ=0,LREND=0
"RTN","LRWLST1",25,0)
 I $D(LRTSTS(LRWLC,0)) D
"RTN","LRWLST1",26,0)
 . D GTWLN
"RTN","LRWLST1",27,0)
 . I LREND Q
"RTN","LRWLST1",28,0)
 . S LRAA=0
"RTN","LRWLST1",29,0)
 . F  S LRAA=$O(LRTSTS(LRWLC,0,LRAA)) Q:LRAA<1  D
"RTN","LRWLST1",30,0)
 . . S LRSS=LRTSTS(LRWLC,0,LRAA)
"RTN","LRWLST1",31,0)
 . . D STWLN,ST2,^LRWLST11,EN^LA7ADL(LRUID)
"RTN","LRWLST1",32,0)
 . D SICA^LRWLST11
"RTN","LRWLST1",33,0)
 ;
"RTN","LRWLST1",34,0)
 ; Setup accessions requiring 'unique' accession numbers (LRUNQ=1)
"RTN","LRWLST1",35,0)
 S LRUNQ=1,LRAA=0
"RTN","LRWLST1",36,0)
 F  S LRAA=$O(LRTSTS(LRWLC,1,LRAA)) Q:LRAA<1  D
"RTN","LRWLST1",37,0)
 . S LRSS=LRTSTS(LRWLC,1,LRAA)
"RTN","LRWLST1",38,0)
 . F  D GTWLN Q:LREND  D   Q:$O(LRTSTS(LRWLC,1,LRAA,0))<1
"RTN","LRWLST1",39,0)
 . . D STWLN,ST2,^LRWLST11,EN^LA7ADL(LRUID),SICA^LRWLST11
"RTN","LRWLST1",40,0)
 Q
"RTN","LRWLST1",41,0)
 ;
"RTN","LRWLST1",42,0)
 ;
"RTN","LRWLST1",43,0)
STWLN ; Set accession number
"RTN","LRWLST1",44,0)
 ;
"RTN","LRWLST1",45,0)
 D GETLOCK(LRAA,LRAD)
"RTN","LRWLST1",46,0)
 D CHECK68(LRAA,LRAD)
"RTN","LRWLST1",47,0)
 ;
"RTN","LRWLST1",48,0)
 S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3)
"RTN","LRWLST1",49,0)
 ;
"RTN","LRWLST1",50,0)
 ; Handle 'in common' area that was not setup in GTWLN call.
"RTN","LRWLST1",51,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN)) D SETAN(LRAA,LRAD,LRAN)
"RTN","LRWLST1",52,0)
 ;
"RTN","LRWLST1",53,0)
 S LREND=0,LRLBLBP=1-$P(LRSS,U,2),LRSS=$P(LRSS,U)
"RTN","LRWLST1",54,0)
 S LRACC=$P(^LRO(68,LRAA,0),U,11)_" "_$S(LRAD["0000":$E(LRAD,2,3),1:$E(LRAD,4,7))_" "_LRAN
"RTN","LRWLST1",55,0)
 ;
"RTN","LRWLST1",56,0)
 S LRPRAC=""
"RTN","LRWLST1",57,0)
 I $D(^LRO(69,LRODT,1,LRSN,0)) S LRPRAC=$P(^(0),U,6) S:$D(LRNT) ^(3)=LRNT
"RTN","LRWLST1",58,0)
 ;
"RTN","LRWLST1",59,0)
 ; Location type
"RTN","LRWLST1",60,0)
 S LRCAPLOC=$P($G(^SC(+LROLLOC,0)),U,3)
"RTN","LRWLST1",61,0)
 I LRCAPLOC="" S LRCAPLOC="Z"
"RTN","LRWLST1",62,0)
 ;
"RTN","LRWLST1",63,0)
 ; File information in file #68 for this accession
"RTN","LRWLST1",64,0)
 N FDA,LR6802,LRDIE
"RTN","LRWLST1",65,0)
 S LR6802=LRAN_","_LRAD_","_LRAA_","
"RTN","LRWLST1",66,0)
 S FDA(1,68.02,LR6802,.01)=LRDFN
"RTN","LRWLST1",67,0)
 S FDA(1,68.02,LR6802,1)=LRDPF
"RTN","LRWLST1",68,0)
 S FDA(1,68.02,LR6802,2)=LRAD
"RTN","LRWLST1",69,0)
 S FDA(1,68.02,LR6802,3)=LRODT
"RTN","LRWLST1",70,0)
 S FDA(1,68.02,LR6802,4)=LRSN
"RTN","LRWLST1",71,0)
 S FDA(1,68.02,LR6802,6)=LRLLOC
"RTN","LRWLST1",72,0)
 S X=$G(^LRO(69,LRODT,1,LRSN,.1)) I X'="" S FDA(1,68.02,LR6802,14)=X
"RTN","LRWLST1",73,0)
 ;
"RTN","LRWLST1",74,0)
 ; No ordering provider/location on controls
"RTN","LRWLST1",75,0)
 I LRDPF'=62.3 D
"RTN","LRWLST1",76,0)
 . S FDA(1,68.02,LR6802,6.5)=LRPRAC
"RTN","LRWLST1",77,0)
 . S FDA(1,68.02,LR6802,94)=LROLLOC
"RTN","LRWLST1",78,0)
 ;
"RTN","LRWLST1",79,0)
 ; Only store treating specialty on file #2 patients
"RTN","LRWLST1",80,0)
 ; If no treating specialty then use specialty from file #44 location
"RTN","LRWLST1",81,0)
 I LRDPF=2 D
"RTN","LRWLST1",82,0)
 . S LRTREA=$P($G(^DPT(DFN,.103)),U)
"RTN","LRWLST1",83,0)
 . I 'LRTREA S LRTREA=$P($G(^SC(+LROLLOC,0)),U,20)
"RTN","LRWLST1",84,0)
 . I LRTREA S FDA(1,68.02,LR6802,6.6)=LRTREA
"RTN","LRWLST1",85,0)
 ;
"RTN","LRWLST1",86,0)
 S FDA(1,68.02,LR6802,6.7)=DUZ
"RTN","LRWLST1",87,0)
 S FDA(1,68.02,LR6802,15)=LRACC
"RTN","LRWLST1",88,0)
 S FDA(1,68.02,LR6802,26)=DUZ(2)
"RTN","LRWLST1",89,0)
 S FDA(1,68.02,LR6802,92)=LRCAPLOC
"RTN","LRWLST1",90,0)
 ;
"RTN","LRWLST1",91,0)
 D FILE^DIE("","FDA(1)","LRDIE(1)")
"RTN","LRWLST1",92,0)
 I $D(LRDIE(1)) D MAILALRT
"RTN","LRWLST1",93,0)
 ;
"RTN","LRWLST1",94,0)
 ; If specimen defined then set nodes, force to ien=1 since many lab
"RTN","LRWLST1",95,0)
 ; routines expect the specimen to be record number 1.
"RTN","LRWLST1",96,0)
 I $G(LRSPEC) D
"RTN","LRWLST1",97,0)
 . N FDAIEN
"RTN","LRWLST1",98,0)
 . S FDAIEN(1)=1
"RTN","LRWLST1",99,0)
 . S FDA(2,68.05,"+1,"_LR6802,.01)=LRSPEC
"RTN","LRWLST1",100,0)
 . S FDA(2,68.05,"+1,"_LR6802,1)=$P(LRSAMP,";",1)
"RTN","LRWLST1",101,0)
 . ;
"RTN","LRWLST1",102,0)
 . ; Modification to prevent lock failures - loop 10 times to give system a chance to get lock
"RTN","LRWLST1",103,0)
 . N LRLOCKOK,LRLOOPCT
"RTN","LRWLST1",104,0)
 . S LRLOCKOK=0
"RTN","LRWLST1",105,0)
 . F LRLOOPCT=1:1:10 Q:LRLOCKOK  D  I 'LRLOCKOK H 5
"RTN","LRWLST1",106,0)
 . . K LRDIE(2)
"RTN","LRWLST1",107,0)
 . . D UPDATE^DIE("","FDA(2)","FDAIEN","LRDIE(2)")
"RTN","LRWLST1",108,0)
 . . S:$D(LRDIE(2))=0 LRLOCKOK=1
"RTN","LRWLST1",109,0)
 . K LRLOCKOK,LRLOOPCT
"RTN","LRWLST1",110,0)
 . ;
"RTN","LRWLST1",111,0)
 . ;D UPDATE^DIE("","FDA(2)","FDAIEN","LRDIE(2)")
"RTN","LRWLST1",112,0)
 . I $D(LRDIE(2)) D MAILALRT
"RTN","LRWLST1",113,0)
 ;
"RTN","LRWLST1",114,0)
 ; If no specimen defined then use specimen values from file #69.
"RTN","LRWLST1",115,0)
 I $G(LRSPEC)="",$D(^LRO(69,LRODT,1,LRSN,4,0)) D
"RTN","LRWLST1",116,0)
 . N FDA,FDAIEN,LRI,LRX
"RTN","LRWLST1",117,0)
 . S LRI=0
"RTN","LRWLST1",118,0)
 . F  S LRI=$O(^LRO(69,LRODT,1,LRSN,4,LRI)) Q:'LRI  D
"RTN","LRWLST1",119,0)
 . . S FDAIEN(1)=LRI,LRX=$G(^LRO(69,LRODT,1,LRSN,4,LRI,0))
"RTN","LRWLST1",120,0)
 . . S FDA(LRI,68.05,"+1,"_LR6802,.01)=$P(LRX,"^")
"RTN","LRWLST1",121,0)
 . . D UPDATE^DIE("","FDA(LRI)","FDAIEN","LRDIE(LRI)")
"RTN","LRWLST1",122,0)
 . . I $D(LRDIE(LRI)) D MAILALRT
"RTN","LRWLST1",123,0)
 ;
"RTN","LRWLST1",124,0)
 ; Create UID.
"RTN","LRWLST1",125,0)
 S LRUID=$$LRUID^LRX(LRAA,LRAD,LRAN)
"RTN","LRWLST1",126,0)
 ;
"RTN","LRWLST1",127,0)
 I '$D(LRPHSET),('$G(LRQUIET)) W !!,"ACCESSION:  ",LRACC,"  <",LRUID,">"
"RTN","LRWLST1",128,0)
 ;
"RTN","LRWLST1",129,0)
 D UPD696
"RTN","LRWLST1",130,0)
 ;
"RTN","LRWLST1",131,0)
 L -^LRO(68,LRAA,1,LRAD,1,0)
"RTN","LRWLST1",132,0)
 Q
"RTN","LRWLST1",133,0)
 ;
"RTN","LRWLST1",134,0)
 ;
"RTN","LRWLST1",135,0)
UPD696 ; Update file #69.6 if LEDI referral patient and no existing entry
"RTN","LRWLST1",136,0)
 K LR696IEN
"RTN","LRWLST1",137,0)
 I $G(LRORDRR)="R" D
"RTN","LRWLST1",138,0)
 . S LR696IEN=0
"RTN","LRWLST1",139,0)
 . I $G(LRRSITE("SMID"))'="",$G(LRSD("RUID"))'="" S LR696IEN=+$O(^LRO(69.6,"AD",LRRSITE("SMID"),LRSD("RUID"),0))
"RTN","LRWLST1",140,0)
 . I LR696IEN Q
"RTN","LRWLST1",141,0)
 . I '$G(LRRSTAT(0)) S LRRSTAT(0)=$$FIND1^DIC(64.061,"","OMX","Specimen in process","","I $P(^LAB(64.061,Y,0),U,7)=""U""")
"RTN","LRWLST1",142,0)
 . D PSET^LRPEND(SSN(2),+LRRSITE("RSITE"),LRSD("RUID"),+LRSD("RPSITE"),LRSPEC,LRSAMP,LRRSTAT(0),LRODT,$P(LRCDT,U),LRRSITE("SDT"),LRNT,.LROT)
"RTN","LRWLST1",143,0)
 Q
"RTN","LRWLST1",144,0)
 ;
"RTN","LRWLST1",145,0)
 ;
"RTN","LRWLST1",146,0)
ST2 ; Find next available node in LR global
"RTN","LRWLST1",147,0)
 ;
"RTN","LRWLST1",148,0)
 N FDA,FDAIEN,LRDIE,LRX,LRXIDT
"RTN","LRWLST1",149,0)
 ;
"RTN","LRWLST1",150,0)
 ; Autopsy ("AU") is not a mulitple - do not attempt to set in ^LR global
"RTN","LRWLST1",151,0)
 I LRSS="AU" S LRIDT=0 Q
"RTN","LRWLST1",152,0)
 ;
"RTN","LRWLST1",153,0)
 S LRIDT=0
"RTN","LRWLST1",154,0)
 F  D  Q:LRIDT
"RTN","LRWLST1",155,0)
 . S LRXIDT=9999999-LRCDT
"RTN","LRWLST1",156,0)
 . L +^LR(LRDFN,LRSS,LRXIDT,0):5
"RTN","LRWLST1",157,0)
 . I '$T S LRCDT=$$FMADD^XLFDT(LRCDT,0,0,0,1) Q
"RTN","LRWLST1",158,0)
 . I '$D(^LR(LRDFN,LRSS,LRXIDT,0)) S LRIDT=LRXIDT Q
"RTN","LRWLST1",159,0)
 . L -^LR(LRDFN,LRSS,LRXIDT,0)
"RTN","LRWLST1",160,0)
 . S LRCDT=$$FMADD^XLFDT(LRCDT,0,0,0,1)
"RTN","LRWLST1",161,0)
 ;
"RTN","LRWLST1",162,0)
 ; Create entry in appropriate subscript in LAB DATA file (#63).
"RTN","LRWLST1",163,0)
 S LRX=$S(LRSS="CH":63.04,LRSS="MI":63.05,LRSS="BB":63.01,LRSS="SP":63.08,LRSS="CY":63.09,LRSS="EM":63.02,1:0)
"RTN","LRWLST1",164,0)
 S FDAIEN(1)=LRIDT
"RTN","LRWLST1",165,0)
 S FDA(63,LRX,"+1,"_LRDFN_",",.01)=LRCDT
"RTN","LRWLST1",166,0)
 S FDA(63,LRX,"+1,"_LRDFN_",",.06)=LRACC
"RTN","LRWLST1",167,0)
 I LRSS'="CH" S FDA(63,LRX,"+1,"_LRDFN_",",.1)=LRNT
"RTN","LRWLST1",168,0)
 I LRSS="CH" S FDA(63,LRX,"+1,"_LRDFN_",",.12)=3
"RTN","LRWLST1",169,0)
 I LRSS="MI" S FDA(63,LRX,"+1,"_LRDFN_",",38)=3
"RTN","LRWLST1",170,0)
 I LRX D UPDATE^DIE("","FDA(63)","FDAIEN","LRDIE(63)")
"RTN","LRWLST1",171,0)
 I $D(LRDIE(63)) D MAILALRT
"RTN","LRWLST1",172,0)
 ;
"RTN","LRWLST1",173,0)
 ; Uncomment following code when new field .9 in"MI" subscript is released
"RTN","LRWLST1",174,0)
 ;I LRSS="MI" D
"RTN","LRWLST1",175,0)
 ;. N LRN,ERR,IENS
"RTN","LRWLST1",176,0)
 ;. S IENS=LRIDT_","_LRDFN_",",LRN=0
"RTN","LRWLST1",177,0)
 ;. F  S LRN=$O(^LRO(69,LRODT,1,LRSN,2,LRN)) Q:LRN<1  D
"RTN","LRWLST1",178,0)
 ;. . I '$D(^LRO(69,LRODT,1,LRSN,2,LRN,1,0)) Q
"RTN","LRWLST1",179,0)
 ;. . D WP^DIE(63.05,IENS,.9,"A","^LRO(69,"_LRODT_",1,"_LRSN_",2,"_LRN_",1)","ERR")
"RTN","LRWLST1",180,0)
 ;
"RTN","LRWLST1",181,0)
 L -^LR(LRDFN,LRSS,LRIDT,0)
"RTN","LRWLST1",182,0)
 ;
"RTN","LRWLST1",183,0)
 Q
"RTN","LRWLST1",184,0)
 ;
"RTN","LRWLST1",185,0)
 ;
"RTN","LRWLST1",186,0)
GTWLN ;
"RTN","LRWLST1",187,0)
 N X,LRABV
"RTN","LRWLST1",188,0)
 ;
"RTN","LRWLST1",189,0)
 ; Execute accession transform for this area.
"RTN","LRWLST1",190,0)
 S LRAN=0
"RTN","LRWLST1",191,0)
 S X=$G(^LRO(68,LRWLC,.1)) X:X'="" X
"RTN","LRWLST1",192,0)
 ;
"RTN","LRWLST1",193,0)
 D GETLOCK(LRWLC,LRAD)
"RTN","LRWLST1",194,0)
 D CHECK68(LRWLC,LRAD)
"RTN","LRWLST1",195,0)
 ;
"RTN","LRWLST1",196,0)
 S:'LRAN LRAN=1+$P($G(^LRO(68,LRWLC,1,LRAD,1,0)),U,3)
"RTN","LRWLST1",197,0)
 ;
"RTN","LRWLST1",198,0)
 I "CYEMSP"'[LRSS F  Q:('$D(^LRO(68,LRWLC,1,LRAD,1,LRAN)))&($$ORIGAAOK)  S LRAN=LRAN+1
"RTN","LRWLST1",199,0)
 ;
"RTN","LRWLST1",200,0)
 ; check for AP Accessions
"RTN","LRWLST1",201,0)
 S LRABV=$P(^LRO(68,LRWLC,0),"^",11)
"RTN","LRWLST1",202,0)
 I "CYEMSP"[LRSS F  Q:'$D(^LRO(68,LRWLC,1,LRAD,1,LRAN))&('$D(^LR("A"_LRSS_"A",$E(LRAD,1,3),LRABV,LRAN)))&($$ORIGAAOK)  S LRAN=LRAN+1
"RTN","LRWLST1",203,0)
 ;
"RTN","LRWLST1",204,0)
 I '$D(LRPHSET),$D(LRNCWL)!$P(^LAB(69.9,1,0),U,8) D ASK Q:LREND
"RTN","LRWLST1",205,0)
 ;
"RTN","LRWLST1",206,0)
 D SETAN(LRWLC,LRAD,LRAN)
"RTN","LRWLST1",207,0)
 ;
"RTN","LRWLST1",208,0)
 L -^LRO(68,LRWLC,1,LRAD,1,0)
"RTN","LRWLST1",209,0)
 Q
"RTN","LRWLST1",210,0)
 ;
"RTN","LRWLST1",211,0)
 ;
"RTN","LRWLST1",212,0)
ORIGAAOK() ; function to determine if the accession number under consideration
"RTN","LRWLST1",213,0)
 ; is already in use in the originating accession area
"RTN","LRWLST1",214,0)
 ; 
"RTN","LRWLST1",215,0)
 ; returns 0 -- accession number under consideration already in use
"RTN","LRWLST1",216,0)
 ;         1 -- accession number under consideration is ok to use
"RTN","LRWLST1",217,0)
 ;         
"RTN","LRWLST1",218,0)
 N LRAAX,LRAAOK,LRABVX,LRAA0,LRSSX
"RTN","LRWLST1",219,0)
 S LRAAX=0,LRAAOK=1
"RTN","LRWLST1",220,0)
 ;
"RTN","LRWLST1",221,0)
 F  S LRAAX=$O(LRTSTS(LRWLC,LRUNQ,LRAAX)) Q:LRAAX<1  Q:'LRAAOK  D
"RTN","LRWLST1",222,0)
 . I $D(^LRO(68,LRAAX,1,LRAD,1,LRAN)) S LRAAOK=0 Q
"RTN","LRWLST1",223,0)
 . S LRAA0=^LRO(68,LRAAX,0),LRSSX=$P(LRAA0,"^",2)
"RTN","LRWLST1",224,0)
 . I "CYEMSP"[LRSSX D
"RTN","LRWLST1",225,0)
 . . S LRABVX=$P(LRAAX,"^",11)
"RTN","LRWLST1",226,0)
 . . I $D(^LR("A"_LRSSX_"A",$E(LRAD,1,3),LRABVX,LRAN)) S LRAAOK=0
"RTN","LRWLST1",227,0)
 ; 
"RTN","LRWLST1",228,0)
 Q LRAAOK
"RTN","LRWLST1",229,0)
 ;
"RTN","LRWLST1",230,0)
 ;
"RTN","LRWLST1",231,0)
ASK ;
"RTN","LRWLST1",232,0)
 ; Don't ask if tasked or a "silent" call
"RTN","LRWLST1",233,0)
 I $D(ZTQUEUED)!($G(LRQUIET)) Q
"RTN","LRWLST1",234,0)
 ;
"RTN","LRWLST1",235,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LROK,LRANX,X,Y
"RTN","LRWLST1",236,0)
 S LROK=0
"RTN","LRWLST1",237,0)
 F  D  Q:LREND!(LROK)
"RTN","LRWLST1",238,0)
 . K DIR
"RTN","LRWLST1",239,0)
 . S DIR(0)="NO^1:"_$S($P(LRLABKY,U,2):999999,1:LRAN)_":0"
"RTN","LRWLST1",240,0)
 . S DIR("A")="Force to",DIR("B")=LRAN
"RTN","LRWLST1",241,0)
 . D ^DIR
"RTN","LRWLST1",242,0)
 . I $D(DIRUT) S LREND=1 Q
"RTN","LRWLST1",243,0)
 . S LRANX=Y
"RTN","LRWLST1",244,0)
 . I LRANX<+$P($G(^LRO(68,LRWLC,1,LRAD,1,0)),U,3) D
"RTN","LRWLST1",245,0)
 . . W !,"This accession number may be already assigned either in this "
"RTN","LRWLST1",246,0)
 . . W !,"area or a common accession area."
"RTN","LRWLST1",247,0)
 . I $D(^LRO(68,LRWLC,1,LRAD,1,LRANX,0)) D  Q:'LROK
"RTN","LRWLST1",248,0)
 . . N LRDFNX S LRDFNX=LRDFN
"RTN","LRWLST1",249,0)
 . . N DFN,LRDFN,LRDPF,PNM,SSN
"RTN","LRWLST1",250,0)
 . . S LRDFN=+^LRO(68,LRWLC,1,LRAD,1,LRANX,0),LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^LR(LRDFN,0),U,3)
"RTN","LRWLST1",251,0)
 . . D PT^LRX
"RTN","LRWLST1",252,0)
 . . W !,"THIS NUMBER BELONGS TO ",!,PNM,"     SSN: ",SSN
"RTN","LRWLST1",253,0)
 . . D INF^LRX
"RTN","LRWLST1",254,0)
 . . I LRDFN=LRDFNX S LROK=1
"RTN","LRWLST1",255,0)
 . K DIR
"RTN","LRWLST1",256,0)
 . S DIR(0)="YO",DIR("A")="Are you sure",DIR("B")="NO"
"RTN","LRWLST1",257,0)
 . D ^DIR
"RTN","LRWLST1",258,0)
 . I $D(DIRUT) S LREND=1 Q
"RTN","LRWLST1",259,0)
 . I Y=1 S LRAN=LRANX,LROK=1
"RTN","LRWLST1",260,0)
 ;
"RTN","LRWLST1",261,0)
 ; Unlock if aborting.
"RTN","LRWLST1",262,0)
 I LREND L -^LRO(68,LRWLC,1,LRAD,1,0)
"RTN","LRWLST1",263,0)
 ;
"RTN","LRWLST1",264,0)
 Q
"RTN","LRWLST1",265,0)
 ;
"RTN","LRWLST1",266,0)
 ;
"RTN","LRWLST1",267,0)
CHECK68(LRAA,LRAD) ; Check for/set header node of ^LRO(68) 68.01 subfile.
"RTN","LRWLST1",268,0)
 ;
"RTN","LRWLST1",269,0)
 ; Call with LRAA = ien of entry in file #68
"RTN","LRWLST1",270,0)
 ;           LRAD = accession date in fileman format
"RTN","LRWLST1",271,0)
 ;
"RTN","LRWLST1",272,0)
 ; Set accession date in file #68 for this acession.
"RTN","LRWLST1",273,0)
 ; Check for existence of accession number multiple but not accession date multiple,
"RTN","LRWLST1",274,0)
 ; FileMan DBS call fails when accession number multiple exists but accession date multiple does not.
"RTN","LRWLST1",275,0)
 ; If this condition found then set missing node directly and quit.
"RTN","LRWLST1",276,0)
 ;
"RTN","LRWLST1",277,0)
 I '$D(^LRO(68,LRAA,1,LRAD,0)) D
"RTN","LRWLST1",278,0)
 . N FDA,FDAIEN,LRDIE,X
"RTN","LRWLST1",279,0)
 . S X=$Q(^LRO(68,LRAA,1,LRAD,0))
"RTN","LRWLST1",280,0)
 . I X'="",$QS(X,4)=LRAD S $P(^LRO(68,LRAA,1,LRAD,0),"^")=LRAD Q
"RTN","LRWLST1",281,0)
 . S (FDAIEN(1),FDA(1,68.01,"+1,"_LRAA_",",.01))=LRAD
"RTN","LRWLST1",282,0)
 . D UPDATE^DIE("","FDA(1)","FDAIEN","LRDIE(1)")
"RTN","LRWLST1",283,0)
 . I $D(LRDIE(1)) D MAILALRT
"RTN","LRWLST1",284,0)
 ;
"RTN","LRWLST1",285,0)
 Q
"RTN","LRWLST1",286,0)
 ;
"RTN","LRWLST1",287,0)
 ;
"RTN","LRWLST1",288,0)
GETLOCK(LRAA,LRAD) ; Obtain lock on zeroth node of this accession date
"RTN","LRWLST1",289,0)
 ; Call with LRAA = ien of entry in file #68
"RTN","LRWLST1",290,0)
 ;           LRAD = accession date in fileman format
"RTN","LRWLST1",291,0)
 ;
"RTN","LRWLST1",292,0)
 F  L +^LRO(68,LRAA,1,LRAD,1,0):10 Q:$T  D
"RTN","LRWLST1",293,0)
 . I $D(ZTQUEUED)!($G(LRQUIET)) Q
"RTN","LRWLST1",294,0)
 . W !!?5,"Accession area ",$P(^LRO(68,LRAA,0),"^")," is locked by another user.",!,$C(7)
"RTN","LRWLST1",295,0)
 Q
"RTN","LRWLST1",296,0)
 ;
"RTN","LRWLST1",297,0)
 ;
"RTN","LRWLST1",298,0)
SETAN(LRAA,LRAD,LRAN) ; Create stub entry in file #68 for this acession.
"RTN","LRWLST1",299,0)
 ;
"RTN","LRWLST1",300,0)
 ; Call with LRAA = ien of entry in file #68
"RTN","LRWLST1",301,0)
 ;           LRAD = accession date in fileman format
"RTN","LRWLST1",302,0)
 ;           LRAN = accession number
"RTN","LRWLST1",303,0)
 ;
"RTN","LRWLST1",304,0)
 N FDA,FDAIEN,LR6802,LRDIE
"RTN","LRWLST1",305,0)
 ;
"RTN","LRWLST1",306,0)
 S LR6802=LRAD_","_LRAA_","
"RTN","LRWLST1",307,0)
 S FDAIEN(1)=LRAN
"RTN","LRWLST1",308,0)
 S FDA(2,68.02,"+1,"_LR6802,.01)=LRDFN
"RTN","LRWLST1",309,0)
 ;
"RTN","LRWLST1",310,0)
 ; Modification to prevent lock failures - loop 10 times to give system a chance to get lock
"RTN","LRWLST1",311,0)
 N LRLOCKOK,LRLOOPCT
"RTN","LRWLST1",312,0)
 S LRLOCKOK=0
"RTN","LRWLST1",313,0)
 F LRLOOPCT=1:1:10 Q:LRLOCKOK  D  I 'LRLOCKOK H 5
"RTN","LRWLST1",314,0)
 . K LRDIE(2)
"RTN","LRWLST1",315,0)
 . D UPDATE^DIE("","FDA(2)","FDAIEN","LRDIE(2)")
"RTN","LRWLST1",316,0)
 . S:$D(LRDIE(2))=0 LRLOCKOK=1
"RTN","LRWLST1",317,0)
 K LRLOCKOK,LRLOOPCT
"RTN","LRWLST1",318,0)
 ;
"RTN","LRWLST1",319,0)
 ;D UPDATE^DIE("","FDA(2)","FDAIEN","LRDIE(2)")
"RTN","LRWLST1",320,0)
 I $D(LRDIE(2)) D MAILALRT
"RTN","LRWLST1",321,0)
 Q
"RTN","LRWLST1",322,0)
 ;
"RTN","LRWLST1",323,0)
 ;
"RTN","LRWLST1",324,0)
MAILALRT ; Send mail message alert when FileMan DBS errors returned
"RTN","LRWLST1",325,0)
 ;
"RTN","LRWLST1",326,0)
 N J,LR68,LRCNT,LRMTXT,X,XMINSTR,XMSUB,XMTO
"RTN","LRWLST1",327,0)
 ;
"RTN","LRWLST1",328,0)
 I $D(^LRO(68,LRAA,1,LRAD,1,LRAN)) M LR68=^LRO(68,LRAA,1,LRAD,1,LRAN)
"RTN","LRWLST1",329,0)
 ;
"RTN","LRWLST1",330,0)
 S LRMTXT(1)="The following debugging information is provided to assist"
"RTN","LRWLST1",331,0)
 S LRMTXT(2)="support staff in resolving error during accessioning."
"RTN","LRWLST1",332,0)
 S LRMTXT(3)=" "
"RTN","LRWLST1",333,0)
 S LRCNT=3
"RTN","LRWLST1",334,0)
 ;
"RTN","LRWLST1",335,0)
 F J="FDA","FDAIEN","LR68","LRAA","LRAD","LRAN","LRDFN","LRDIE","LRSS","LRTSTS","LRUNQ","LRWLC","XQY","XQY0" D
"RTN","LRWLST1",336,0)
 . S X=$G(@J)
"RTN","LRWLST1",337,0)
 . I X'="" S LRCNT=LRCNT+1,LRMTXT(LRCNT)=J_"="_X
"RTN","LRWLST1",338,0)
 . F  S J=$Q(@J) Q:J=""  S LRCNT=LRCNT+1,LRMTXT(LRCNT)=J_"="_@J
"RTN","LRWLST1",339,0)
 ;
"RTN","LRWLST1",340,0)
 S XMSUB="FileMan DBS call failed during accessioning in routine LRWLST1"
"RTN","LRWLST1",341,0)
 S XMTO("G.LMI")=""
"RTN","LRWLST1",342,0)
 S XMINSTR("FROM")=.5
"RTN","LRWLST1",343,0)
 S XMINSTR("ADDR FLAGS")="R"
"RTN","LRWLST1",344,0)
 D SENDMSG^XMXAPI(DUZ,XMSUB,"LRMTXT",.XMTO,.XMINSTR)
"RTN","LRWLST1",345,0)
 Q
"VER")
8.0^22.0
"BLD",8882,6)
^329
**END**
**END**
