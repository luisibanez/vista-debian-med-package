Released PRC*5.1*120 SEQ #147
Extracted from mail message
**KIDS**:PRC*5.1*120^

**INSTALL NAME**
PRC*5.1*120
"BLD",5783,0)
PRC*5.1*120^IFCAP^0^3130206^y
"BLD",5783,1,0)
^^7^7^3120227^
"BLD",5783,1,1,0)
1. EDI (Electronic Data Interchange) flagged orders via Fund Control Point
"BLD",5783,1,2,0)
   and Vendor do not appear on UNOBL Running Balance when not passed    
"BLD",5783,1,3,0)
   through fiscal.
"BLD",5783,1,4,0)
 
"BLD",5783,1,5,0)
2. When Fund Control Point flag 'FCP ALL/DELIVERY ORDER SWITCH' is set to
"BLD",5783,1,6,0)
   (A)ll Orders or (D)elivery orders, orders automatically get obligated
"BLD",5783,1,7,0)
   which affect the Running Balance Report.
"BLD",5783,4,0)
^9.64PA^^
"BLD",5783,6.3)
27
"BLD",5783,"ABPKG")
n
"BLD",5783,"KRN",0)
^9.67PA^8989.52^19
"BLD",5783,"KRN",.4,0)
.4
"BLD",5783,"KRN",.401,0)
.401
"BLD",5783,"KRN",.402,0)
.402
"BLD",5783,"KRN",.403,0)
.403
"BLD",5783,"KRN",.5,0)
.5
"BLD",5783,"KRN",.84,0)
.84
"BLD",5783,"KRN",3.6,0)
3.6
"BLD",5783,"KRN",3.8,0)
3.8
"BLD",5783,"KRN",9.2,0)
9.2
"BLD",5783,"KRN",9.8,0)
9.8
"BLD",5783,"KRN",9.8,"NM",0)
^9.68A^9^5
"BLD",5783,"KRN",9.8,"NM",3,0)
PRCSC1^^0^B23428273
"BLD",5783,"KRN",9.8,"NM",4,0)
PRCSC3^^0^B14708529
"BLD",5783,"KRN",9.8,"NM",7,0)
PRCFFM2M^^0^B10513103
"BLD",5783,"KRN",9.8,"NM",8,0)
PRCHSWCH^^0^B8466970
"BLD",5783,"KRN",9.8,"NM",9,0)
PRCHSF1^^0^B15185876
"BLD",5783,"KRN",9.8,"NM","B","PRCFFM2M",7)

"BLD",5783,"KRN",9.8,"NM","B","PRCHSF1",9)

"BLD",5783,"KRN",9.8,"NM","B","PRCHSWCH",8)

"BLD",5783,"KRN",9.8,"NM","B","PRCSC1",3)

"BLD",5783,"KRN",9.8,"NM","B","PRCSC3",4)

"BLD",5783,"KRN",19,0)
19
"BLD",5783,"KRN",19.1,0)
19.1
"BLD",5783,"KRN",101,0)
101
"BLD",5783,"KRN",409.61,0)
409.61
"BLD",5783,"KRN",771,0)
771
"BLD",5783,"KRN",870,0)
870
"BLD",5783,"KRN",8989.51,0)
8989.51
"BLD",5783,"KRN",8989.52,0)
8989.52
"BLD",5783,"KRN",8994,0)
8994
"BLD",5783,"KRN","B",.4,.4)

"BLD",5783,"KRN","B",.401,.401)

"BLD",5783,"KRN","B",.402,.402)

"BLD",5783,"KRN","B",.403,.403)

"BLD",5783,"KRN","B",.5,.5)

"BLD",5783,"KRN","B",.84,.84)

"BLD",5783,"KRN","B",3.6,3.6)

"BLD",5783,"KRN","B",3.8,3.8)

"BLD",5783,"KRN","B",9.2,9.2)

"BLD",5783,"KRN","B",9.8,9.8)

"BLD",5783,"KRN","B",19,19)

"BLD",5783,"KRN","B",19.1,19.1)

"BLD",5783,"KRN","B",101,101)

"BLD",5783,"KRN","B",409.61,409.61)

"BLD",5783,"KRN","B",771,771)

"BLD",5783,"KRN","B",870,870)

"BLD",5783,"KRN","B",8989.51,8989.51)

"BLD",5783,"KRN","B",8989.52,8989.52)

"BLD",5783,"KRN","B",8994,8994)

"BLD",5783,"QDEF")
^^^^NO^^^^^^YES
"BLD",5783,"QUES",0)
^9.62^^
"BLD",5783,"REQB",0)
^9.611^5^2
"BLD",5783,"REQB",4,0)
PRC*5.1*37^2
"BLD",5783,"REQB",5,0)
PRC*5.1*81^2
"BLD",5783,"REQB","B","PRC*5.1*37",4)

"BLD",5783,"REQB","B","PRC*5.1*81",5)

"MBREQ")
0
"PKG",455,-1)
1^1
"PKG",455,0)
IFCAP^PRC^IFCAP System Files
"PKG",455,20,0)
^9.402P^^
"PKG",455,22,0)
^9.49I^1^1
"PKG",455,22,1,0)
5.1^3001012^3001019^68
"PKG",455,22,1,"PAH",1,0)
120^3130206
"PKG",455,22,1,"PAH",1,1,0)
^^7^7^3130206
"PKG",455,22,1,"PAH",1,1,1,0)
1. EDI (Electronic Data Interchange) flagged orders via Fund Control Point
"PKG",455,22,1,"PAH",1,1,2,0)
   and Vendor do not appear on UNOBL Running Balance when not passed    
"PKG",455,22,1,"PAH",1,1,3,0)
   through fiscal.
"PKG",455,22,1,"PAH",1,1,4,0)
 
"PKG",455,22,1,"PAH",1,1,5,0)
2. When Fund Control Point flag 'FCP ALL/DELIVERY ORDER SWITCH' is set to
"PKG",455,22,1,"PAH",1,1,6,0)
   (A)ll Orders or (D)elivery orders, orders automatically get obligated
"PKG",455,22,1,"PAH",1,1,7,0)
   which affect the Running Balance Report.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","PRCFFM2M")
0^7^B10513103^B10213072
"RTN","PRCFFM2M",1,0)
PRCFFM2M ;WOIFO/SJG/AS-ROUTINE TO PROCESS OBLIGATIONS ;3/8/05
"RTN","PRCFFM2M",2,0)
V ;;5.1;IFCAP;**81,120**;Oct 20, 2000;Build 27
"RTN","PRCFFM2M",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRCFFM2M",4,0)
 ;
"RTN","PRCFFM2M",5,0)
SUPP ; Entry point for FMS Documents for Supply Fund Special Control Point
"RTN","PRCFFM2M",6,0)
 ; Amendments
"RTN","PRCFFM2M",7,0)
 ; Called from PRCHMA
"RTN","PRCFFM2M",8,0)
 S DIC("S")="I +^(0)=PRC(""SITE"")",DIC=442,DIC(0)="NZ",X=PRCHPO
"RTN","PRCFFM2M",9,0)
 D ^DIC K DIC G:+Y<0 EXIT
"RTN","PRCFFM2M",10,0)
 S (XRBLD,FLG)=0,PO(0)=Y(0),PO=Y,PRCFA("PODA")=+Y,PCP=+$P(PO(0),"^",3),$P(PCP,"^",2)=$S($D(^PRC(420,PRC("SITE"),1,+PCP,0)):$P(^(0),"^",12),1:"")
"RTN","PRCFFM2M",11,0)
 S MTOP=$P(^PRC(442,PRCFA("PODA"),0),"^",2)
"RTN","PRCFFM2M",12,0)
 I $P($G(^PRC(443.6,PRCHPO,6,PRCHAM,1)),U,2)="" W !!,"PURCHASE ORDER HAS NOT BEEN PROPERLY SIGNED BY THE PURCHASING AGENT" Q
"RTN","PRCFFM2M",13,0)
 D DT442^PRCFFUD1(PRCHPO,PO(0),443.6,PRCHAM)
"RTN","PRCFFM2M",14,0)
 ;S PRCFA("OBLDATE")=$$EN^PRCFFUD1() D ENSFM^PRCFFMO2
"RTN","PRCFFM2M",15,0)
 S PRCFA("OBLDATE")=$$DTOBL^PRCFFUD1(PRC("RBDT"),PRC("PODT"))
"RTN","PRCFFM2M",16,0)
 S PRCFA("BBFY")=$$BBFY^PRCFFU5(+PO) ;D BBFYCHK^PRCFFU19(+PO)
"RTN","PRCFFM2M",17,0)
 D GENDIQ^PRCFFU7(442,+PO,".1;.07;.03;17","IEN","")
"RTN","PRCFFM2M",18,0)
 S IDFLAG="I",PRCFA("AMEND#")=PRCHAM
"RTN","PRCFFM2M",19,0)
 N PARAM S PARAM=+PCP_"^"_PRC("FY")_"^"_PRCFA("BBFY")
"RTN","PRCFFM2M",20,0)
 S PRCFMO=$$ACC^PRC0C(PRC("SITE"),PARAM)
"RTN","PRCFFM2M",21,0)
 S PRCFA("MOD")="M^1^Modification Entry"
"RTN","PRCFFM2M",22,0)
 S PRCFA("DLVDATE")=+$P(^PRC(442,PRCFA("PODA"),0),"^",10)
"RTN","PRCFFM2M",23,0)
 S PRCFA("IDES")="Purchase Order Amendment Obligation"
"RTN","PRCFFM2M",24,0)
 S PRCFA("REF")=$P(PO(0),U),PRCFA("SYS")="FMS"
"RTN","PRCFFM2M",25,0)
 S PRCFA("SFC")=$P(PO(0),U,19),PRCFA("MP")=$P(PO(0),U,2)
"RTN","PRCFFM2M",26,0)
 S PRCFA("TT")=$S(PRCFA("MP")=2:"SO",PRCFA("MP")=1:"MO",PRCFA("MP")=8:"MO",1:"MO")
"RTN","PRCFFM2M",27,0)
TRANS ; Transfer amendment entry from work file to Purchase Order file
"RTN","PRCFFM2M",28,0)
 W !!,"...copying amendment information back to Purchase Order file...",! D WAIT^DICD
"RTN","PRCFFM2M",29,0)
 D DT442^PRCFFUD1(PRCFA("PODA"),PO(0),442,"")
"RTN","PRCFFM2M",30,0)
 S PRCOAMT=+^PRC(442,PRCFA("PODA"),0),$P(PRCOAMT,"^",2)=+$P(^(0),"^",3),$P(PRCOAMT,"^",3)=PRC("FYQDT"),$P(PRCOAMT,"^",5)=-$P(^(0),"^",$P(PRCFMO,"^",12)="N"+15)
"RTN","PRCFFM2M",31,0)
 S ERFLAG=""
"RTN","PRCFFM2M",32,0)
 D CHECK^PRCHAMYA(PRCFA("PODA"),PRCFA("AMEND#"),.ERFLAG)
"RTN","PRCFFM2M",33,0)
 I ERFLAG W !!,"...ERROR IN COPYING AMENDMENT INFORMATION BACK TO PURCHASE ORDER FILE..." D MSG G EXIT
"RTN","PRCFFM2M",34,0)
 D DT442^PRCFFUD1(PRCFA("PODA"),PO(0),442,PRCFA("AMEND#"))
"RTN","PRCFFM2M",35,0)
 ;  transmit amendment from IFCAP to DynaMed   **81**
"RTN","PRCFFM2M",36,0)
 D:$$GET^XPAR("SYS","PRCV COTS INVENTORY",1)=1 ENT^PRCVPOU(PRCFA("PODA"),PRCFA("AMEND#"))
"RTN","PRCFFM2M",37,0)
 S PRCFA("OLDPODA")=PRCFA("PODA"),PRCFA("OLDREF")=PRCFA("REF")
"RTN","PRCFFM2M",38,0)
 N PARAM S PARAM="^"_PRC("SITE")_"^"_+PCP_"^"_PRC("FY")_"^"_PRCFA("BBFY")
"RTN","PRCFFM2M",39,0)
 D DOCREQ^PRC0C(PARAM,"SPE","PRCFMO")
"RTN","PRCFFM2M",40,0)
 S (PRCFA("G/N"),PRCFMO("G/N"))=$P(PRCFMO,U,12)
"RTN","PRCFFM2M",41,0)
 D LIST^PRCFFU7(PRCFA("PODA"),PRCFA("AMEND#"))
"RTN","PRCFFM2M",42,0)
 ;PRC*5.1*120 => AUTOOBLG (set in PRCHSWCH) controls auto obligation of FCP UNOBL $$
"RTN","PRCFFM2M",43,0)
 I MTOP'=25,($P($G(^PRC(442,PRCFA("PODA"),0)),U,19)=2!($G(AUTOOBLG)=1)),$G(PRCFA("AUTHE"))=1 D AMEND^PRCFFUD,FCP^PRCFFU11 G EXIT
"RTN","PRCFFM2M",44,0)
 I MTOP'=25,'PRCFA("MOMREQ") D MSG^PRCFFU8 G EXIT
"RTN","PRCFFM2M",45,0)
 D AMEND^PRCFFUD
"RTN","PRCFFM2M",46,0)
 I MTOP'=25 D STACK^PRCFFM1M
"RTN","PRCFFM2M",47,0)
 D EXIT QUIT
"RTN","PRCFFM2M",48,0)
MSG W ! S X="No further processing is being taken on this obligation.*" D MSG^PRCFQ
"RTN","PRCFFM2M",49,0)
 Q
"RTN","PRCFFM2M",50,0)
EXIT K %,AMT,C1,C,D0,DA,DI,DIC,DEL,E,I,J,N1,N2,POP,PO,PODA,PRCFA,PRCFQ,MTOP,AUTOOBLG
"RTN","PRCFFM2M",51,0)
 K PTYPE,T,T1,TIME,TRDA,Y,Z,Z5,ZX
"RTN","PRCFFM2M",52,0)
 K PODATE,P,MO,GECSFMS
"RTN","PRCFFM2M",53,0)
 Q
"RTN","PRCHSF1")
0^9^B15185876^B14964931
"RTN","PRCHSF1",1,0)
PRCHSF1 ;WISC/DJM-UPDATES OR PLACES BOCS & AMOUNTS INTO PO FILE AFTER AMENDMENT ;2/16/95  3:42 PM
"RTN","PRCHSF1",2,0)
V ;;5.1;IFCAP;**120**;Oct 20, 2000;Build 27
"RTN","PRCHSF1",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRCHSF1",4,0)
 ;AMENDED PO
"RTN","PRCHSF1",5,0)
 ;UPDATES TOTAL $ AMOUNTS
"RTN","PRCHSF1",6,0)
 ;CALLED FROM 443.6 COPY ROUTINE 'PRCHAMYB'
"RTN","PRCHSF1",7,0)
 Q:$P(^PRC(442,DA,7),U,1)=45  L +^PRC(442,DA):1 I '$T W !," P.O. is being edited by another person !",$C(7) Q
"RTN","PRCHSF1",8,0)
 S U="^",X=^PRC(442,DA,0),PRCHS("EST")=+$P(X,U,13),PRCHS("CP")=+$P(X,U,3),PRCHS("SITE")=+X I $D(^PRC(420,PRCHS("SITE"),1,PRCHS("CP"),0)),$P(^(0),U,12) S PRCHS("SP")=$P(^(0),U,12)
"RTN","PRCHSF1",9,0)
 S I=0 F  S I=$O(^PRC(442,DA,2,I)) Q:I=""!(I'>0)  S PRCHS=I,PRCHS("N")=^(PRCHS,0),PRCHS("N2")=$G(^(2)),PRCHS("NS")=+$P(PRCHS("N"),U,4) D L
"RTN","PRCHSF1",10,0)
 S (CNT,J)=0 F  S J=$O(PRCHS("A",J)) Q:J=""!(J<0)  D LI2
"RTN","PRCHSF1",11,0)
 S (PRCHS("TOT"),PRCHS("NET"),M,PRCHS)=0
"RTN","PRCHSF1",12,0)
 S BOCSHP=$G(^PRC(442,DA,23)),PRCHS(991)=+BOCSHP_"^"_PRCHS("EST") K BOCSHP
"RTN","PRCHSF1",13,0)
 F  S M=$O(PRCHS(M)) Q:M=""!(M'>0)  I M'=991 S PRCHS("TOT")=PRCHS("TOT")+$P(PRCHS(M),U,2)
"RTN","PRCHSF1",14,0)
 S PO=PRCHPO,PRC("BBFY")=$$BBFY^PRCFFU5(PRCHPO)
"RTN","PRCHSF1",15,0)
 N PARAM K PRCHMO S PARAM=PRCHS("CP")_"^"_PRC("FY")_"^"_PRCFA("BBFY")
"RTN","PRCHSF1",16,0)
 S PRCHMO=$$ACC^PRC0C(PRC("SITE"),PARAM)
"RTN","PRCHSF1",17,0)
 S PRCHS("G/N")=$P(PRCHMO,U,12) K PRCHMO
"RTN","PRCHSF1",18,0)
 I $D(PRCHS("G/N")) D:PRCHS("G/N")="G" LABEL,NET,UPDTN D:PRCHS("G/N")="N" NET,UPDTN,LABEL
"RTN","PRCHSF1",19,0)
 G ^PRCHSF2
"RTN","PRCHSF1",20,0)
NET ;APPLY PROMPT PAY DISCNT ONLY TO NET FUNDS, & REFLECT NET AMT ON 0 NODE
"RTN","PRCHSF1",21,0)
 D TM S PTM=0 F  S PTM=$O(PRCHS(PTM)) Q:(PTM="")!(PTM'>0)  I $P(PRCHS(PTM),U,2) I PTM'=991 S X=$P(PRCHS(PTM),U,2),$P(PRCHS(PTM),U,2)=(X-$J(X*PRCHS("T"),0,2)),PRCHS("NET")=PRCHS("NET")+$P(PRCHS(PTM),U,2)
"RTN","PRCHSF1",22,0)
 Q
"RTN","PRCHSF1",23,0)
 ;
"RTN","PRCHSF1",24,0)
UPDTN ;UPDATE ZERO NODE, CHECK MESSAGE, ELECTRONIC SIGNATURE ETC.
"RTN","PRCHSF1",25,0)
 S PRCHS("NET")=PRCHS("NET")+PRCHS("EST"),PRCHS("TOT")=PRCHS("TOT")+PRCHS("EST"),$P(^PRC(442,DA,0),U,6,9)="^^^"
"RTN","PRCHSF1",26,0)
 S $P(^PRC(442,DA,0),U,15,16)=PRCHS("TOT")_"^"_PRCHS("NET")
"RTN","PRCHSF1",27,0)
 ;NOW UPDATE THE 'AMOUNT CHANGED' FIELD
"RTN","PRCHSF1",28,0)
 ;PRCHTOTQ = THE TOTAL AMOUNT OF THE PO BEFORE THIS UPDATE
"RTN","PRCHSF1",29,0)
 ;PRCHTOTQ IS SET IN ROUTINE 'PRCHAMYA'
"RTN","PRCHSF1",30,0)
 S PRCHS("TOTN")=PRCHS("TOT")-PRCHTOTQ,$P(^PRC(442,PRCHPO,6,PRCHAM,0),U,3)=PRCHS("TOTN"),MESSAGE=""
"RTN","PRCHSF1",31,0)
 D RECODE^PRCHES6(PRCHPO,PRCHAM,.MESSAGE)
"RTN","PRCHSF1",32,0)
 S MESS1=MESSAGE,MESSAGE=1
"RTN","PRCHSF1",33,0)
 ;PRC*5.1*120 added check (AUTOOBLG set in PRCHSWCH) to also skip record recode if EDI or All/DELIVERY ORDER auto obligated order
"RTN","PRCHSF1",34,0)
 I $G(PRCHS("SP"))'=2,$P(^PRC(442,DA,0),U,2)'=25,$G(AUTOOBLG)'=1 D RECODE^PRCHES7(PRCHPO,PRCHAM,.MESSAGE)
"RTN","PRCHSF1",35,0)
 I MESS1'=1!(MESSAGE'=1) W !,"An error has occurred while recoding an ESIG."
"RTN","PRCHSF1",36,0)
 Q
"RTN","PRCHSF1",37,0)
LABEL ;
"RTN","PRCHSF1",38,0)
 S (CTR,I)=0 F  S I=$O(PRCHS(I)) Q:I'>0  D IT
"RTN","PRCHSF1",39,0)
 Q
"RTN","PRCHSF1",40,0)
 ;
"RTN","PRCHSF1",41,0)
IT N DA S:$D(DA(1)) PRCHDA1=DA(1) S DA(1)=PRCHPO
"RTN","PRCHSF1",42,0)
 S BOC=$P(PRCHS(I),U),AMT=$P(PRCHS(I),U,2),DA=0
"RTN","PRCHSF1",43,0)
IT1 ;LOOK FOR BOC
"RTN","PRCHSF1",44,0)
 ;IF FOUND
"RTN","PRCHSF1",45,0)
 ; 1, SEE IF FMS LINE NUMBER=991 & I FROM PRCHS(I)=991
"RTN","PRCHSF1",46,0)
 ;    A, IF SO, ENTER AMT AND QUIT
"RTN","PRCHSF1",47,0)
 ; 2, SEE IF FMS LINE NUMBER'=991 & I '=991
"RTN","PRCHSF1",48,0)
 ;    A, IF SO, ENTER AMT AND QUIT
"RTN","PRCHSF1",49,0)
 S DA=$O(^PRC(442,DA(1),22,"B",+BOC,DA)),FLAGOK=""
"RTN","PRCHSF1",50,0)
 I DA>0 D  G:FLAGOK="" IT1 Q
"RTN","PRCHSF1",51,0)
 .S UPDT=$G(^PRC(442,DA(1),22,DA,0)),LINO=$P(UPDT,U,3)
"RTN","PRCHSF1",52,0)
 .I LINO=991,(I=991) S $P(UPDT,U,2)=AMT,^PRC(442,DA(1),22,DA,0)=UPDT,FLAGOK=1 Q
"RTN","PRCHSF1",53,0)
 .I LINO'=991,(I'=991) S $P(UPDT,U,2)=AMT,^PRC(442,DA(1),22,DA,0)=UPDT,FLAGOK=1 Q
"RTN","PRCHSF1",54,0)
 .Q
"RTN","PRCHSF1",55,0)
 ;IF YOU ARRIVED HERE & I=991 YOU NEED TO FIND THE IEN IN NODE 22
"RTN","PRCHSF1",56,0)
 ;THAT HAS AN FMS LINE NUMBER = 991.
"RTN","PRCHSF1",57,0)
 ;WHEN FOUND ENTER BOC & AMT FROM LINE IT+1 AND QUIT.
"RTN","PRCHSF1",58,0)
 I I=991 D  Q:FLAGOK=1
"RTN","PRCHSF1",59,0)
 .S DA=0 F  S DA=$O(^PRC(442,DA(1),22,DA)) Q:DA'>0  D  Q:FLAGOK=1
"RTN","PRCHSF1",60,0)
 ..S UPDT=$G(^PRC(442,DA(1),22,DA,0)),LINO=$P(UPDT,U,3)
"RTN","PRCHSF1",61,0)
 ..I LINO=991 S $P(UPDT,U)=BOC,$P(UPDT,U,2)=AMT,^PRC(442,DA(1),22,DA,0)=UPDT,FLAGOK=1 Q
"RTN","PRCHSF1",62,0)
 .Q
"RTN","PRCHSF1",63,0)
 S DIC="^PRC(442,"_DA(1)_",22,",DIC(0)="L",X=+BOC K DD,DO D FILE^DICN I Y'>0 W !," ERROR " Q
"RTN","PRCHSF1",64,0)
 N DA S DIE=DIC,DA=+Y
"RTN","PRCHSF1",65,0)
 S LAST=LAST+1
"RTN","PRCHSF1",66,0)
 S DR="1////^S X=AMT;2////^S X=LAST" D ^DIE K X,Y,DIE,DIC
"RTN","PRCHSF1",67,0)
 S:$D(PRCHDA1) DA(1)=PRCHDA1 K PRCHDA1
"RTN","PRCHSF1",68,0)
 Q
"RTN","PRCHSF1",69,0)
 ;
"RTN","PRCHSF1",70,0)
L S:'$D(PRCHS("A",PRCHS("NS"))) PRCHS("A",PRCHS("NS"))="" S LICOST=+$P(PRCHS("N2"),U,1),PRCHS("A",PRCHS("NS"))=+(PRCHS("A",PRCHS("NS")))+LICOST-$P(PRCHS("N2"),U,6)
"RTN","PRCHSF1",71,0)
 Q
"RTN","PRCHSF1",72,0)
 ;
"RTN","PRCHSF1",73,0)
LI2 S CNT=CNT+1 S PRCHS(CNT)=J_U_PRCHS("A",J) K PRCHS("A",J)
"RTN","PRCHSF1",74,0)
 Q
"RTN","PRCHSF1",75,0)
 ;
"RTN","PRCHSF1",76,0)
TM ;
"RTN","PRCHSF1",77,0)
 S PRCHS("T")=0,I=0 F  S I=$O(^PRC(442,DA,5,I)) Q:'I  S X=^(I,0) I +X>0 S I(100-X)=+X
"RTN","PRCHSF1",78,0)
 S:$O(I(0)) PRCHS("T")=I($O(I(0))),PRCHS("T")=PRCHS("T")/100 K I Q
"RTN","PRCHSF1",79,0)
 Q
"RTN","PRCHSWCH")
0^8^B8466970^B6532981
"RTN","PRCHSWCH",1,0)
PRCHSWCH ;WISC/AKS-Check switches ;7/13/2001  08:00
"RTN","PRCHSWCH",2,0)
 ;;5.1;IFCAP;**37,120**;Oct 20, 2000;Build 27
"RTN","PRCHSWCH",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRCHSWCH",4,0)
 Q
"RTN","PRCHSWCH",5,0)
CHECK ;check switches
"RTN","PRCHSWCH",6,0)
 ;
"RTN","PRCHSWCH",7,0)
 ; processing is controlled by PRCHOBL
"RTN","PRCHSWCH",8,0)
 ; PRCHOBL=0 do nothing  PRCHOBL=1 obligate immediately without Fiscal
"RTN","PRCHSWCH",9,0)
 ; PRCHOBL=2 call PRCOEDI to generate PHA transactions
"RTN","PRCHSWCH",10,0)
 I FILE'=442&(FILE'=443.6) W !,"Improper file." Q
"RTN","PRCHSWCH",11,0)
 ; PRC*5.1*120 => AUTOOBLG switch (1=ON, 0=OFF) will control EDO Delivery 
"RTN","PRCHSWCH",12,0)
 ;                and SITE/FCP All/Delivery switch auto obligating to 
"RTN","PRCHSWCH",13,0)
 ;                insure the FCP UNOBL dollars are updated. 
"RTN","PRCHSWCH",14,0)
 ;                EDIVEN switch (Y/N) will hold whether EDI vendor or not
"RTN","PRCHSWCH",15,0)
 N EDICHK,EDIVEN S EDICHK="N",EDIVEN=$P($G(^PRC(FILE,PRCHPO,1)),U) S:EDIVEN'="" EDICHK=$P($G(^PRC(440,EDIVEN,3)),U,2)
"RTN","PRCHSWCH",16,0)
 K PRCHOBL,AUTOOBLG
"RTN","PRCHSWCH",17,0)
 N PRCHFUND
"RTN","PRCHSWCH",18,0)
 S PRCHOBL=0,PRCHFUND=""
"RTN","PRCHSWCH",19,0)
 S PRCHFUND=$P(^PRC(FILE,PRCHPO,0),U,3) Q:PRCHFUND=""  S PRCHFUND=+$P(PRCHFUND," ")
"RTN","PRCHSWCH",20,0)
 I $P($G(^PRC(442,PRCHPO,23)),U,11)="D" S PRCHOBL=1 D
"RTN","PRCHSWCH",21,0)
 . I $P($G(^PRC(420,PRC("SITE"),3)),U,2)="",$P($G(^PRC(420,PRC("SITE"),1,PRCHFUND,6)),U,2)="" S PRCHOBL=0
"RTN","PRCHSWCH",22,0)
 . I $P(^PRC(FILE,PRCHPO,0),U,2)=26 S PRCHOBL=1
"RTN","PRCHSWCH",23,0)
 I '$G(PRCHOBL) D
"RTN","PRCHSWCH",24,0)
 . I $P($G(^PRC(420,PRC("SITE"),3)),U,2)="A",$P($G(^PRC(420,PRC("SITE"),1,PRCHFUND,6)),U,2)'="D" S PRCHOBL=1
"RTN","PRCHSWCH",25,0)
 . I $P($G(^PRC(420,PRC("SITE"),3)),U,2)="D",$P($G(^PRC(420,PRC("SITE"),1,PRCHFUND,6)),U,2)="A" S PRCHOBL=1
"RTN","PRCHSWCH",26,0)
 . I $P($G(^PRC(420,PRC("SITE"),3)),U,2)="",$P($G(^PRC(420,PRC("SITE"),1,PRCHFUND,6)),U,2)="A" S PRCHOBL=1
"RTN","PRCHSWCH",27,0)
 I '$G(PRCHOBL) D
"RTN","PRCHSWCH",28,0)
 . I $P($G(^PRC(420,PRC("SITE"),3)),U)="Y",EDICHK="Y" S PRCHOBL=1
"RTN","PRCHSWCH",29,0)
 . I $P($G(^PRC(420,PRC("SITE"),1,PRCHFUND,6)),U)="N" S PRCHOBL=0
"RTN","PRCHSWCH",30,0)
 ;  if a certified invoice, set flag to 0 so that Fiscal must process
"RTN","PRCHSWCH",31,0)
 I $P($G(^PRC(FILE,PRCHPO,0)),"^",2)=2 S PRCHOBL=0
"RTN","PRCHSWCH",32,0)
 ;PRC*5.1*37, Added a missing check for EDI vendor at FCP level - ** Updated check via PRC*5.1*120 for EDI Delivery Order cancel
"RTN","PRCHSWCH",33,0)
 I PRCHOBL=1 D 
"RTN","PRCHSWCH",34,0)
 . I $P($G(^PRC(442,PRCHPO,23)),U,11)="D" S AUTOOBLG=1
"RTN","PRCHSWCH",35,0)
 . I $P($G(^PRC(442,PRCHPO,0)),U,2)'=25 S AUTOOBLG=1
"RTN","PRCHSWCH",36,0)
 I $P($G(^PRC(442,PRCHPO,23)),U,11)="D"!($P($G(^PRC(442,PRCHPO,0)),U,2)'=25) I ($P($G(^PRC(420,PRC("SITE"),1,PRCHFUND,6)),U)="Y")!($P($G(^PRC(420,PRC("SITE"),3)),U)="Y"),EDICHK="Y" S PRCHOBL=1,AUTOOBLG=1
"RTN","PRCHSWCH",37,0)
 K FILE
"RTN","PRCHSWCH",38,0)
 QUIT
"RTN","PRCHSWCH",39,0)
POST ;post init for PRC*5*113
"RTN","PRCHSWCH",40,0)
 N ZP,ZIP,CNTR
"RTN","PRCHSWCH",41,0)
 S ZP="" F  S ZP=$O(^PRC(442,"F",25,ZP)) Q:ZP=""  D
"RTN","PRCHSWCH",42,0)
 .S ZIP=$P($G(^PRC(442,+ZP,23)),"^",13) Q:ZIP=""  Q:ZIP[";"
"RTN","PRCHSWCH",43,0)
 .S $P(^PRC(442,ZP,23),"^",13)=$P(^PRC(442,ZP,23),"^",13)_";PRCS(410.7,"
"RTN","PRCHSWCH",44,0)
 S ZP="" F  S ZP=$O(^PRC(442,"F",25,ZP)) Q:ZP=""  D CONV
"RTN","PRCHSWCH",45,0)
 S ZP="" F  S ZP=$O(^PRC(442,"F",26,ZP)) Q:ZP=""  D CONV
"RTN","PRCHSWCH",46,0)
 QUIT
"RTN","PRCHSWCH",47,0)
CONV ;
"RTN","PRCHSWCH",48,0)
 Q:+$P($G(^PRC(442,ZP,1)),"^")=0
"RTN","PRCHSWCH",49,0)
 S DA=ZP,DIK(1)="5^D",DIK="^PRC(442," D EN^DIK
"RTN","PRCHSWCH",50,0)
 S VALUE=$P($G(^PRC(442,ZP,23)),"^",14) Q:+VALUE=0
"RTN","PRCHSWCH",51,0)
 S VVAL=$P($G(^PRC(440,VALUE,0)),"^") Q:VVAL=""
"RTN","PRCHSWCH",52,0)
 S VVAL=$E(VVAL,1,30) K ^PRC(442,"D",VVAL,ZP)
"RTN","PRCHSWCH",53,0)
 K DA,DIK,VALUE,VVAL
"RTN","PRCHSWCH",54,0)
 QUIT
"RTN","PRCSC1")
0^3^B23428273^B19453305
"RTN","PRCSC1",1,0)
PRCSC1 ;WISC/LEM-ESIG MAINTENANCE ROUTINE ;4/23/97  8:55 AM
"RTN","PRCSC1",2,0)
V ;;5.1;IFCAP;**120**;Oct 20, 2000;Build 27
"RTN","PRCSC1",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRCSC1",4,0)
 ;ROUTINE FOR MAINTAINING FIELD 44.5 (ELECTRONIC SIGNATURE), FILE 410
"RTN","PRCSC1",5,0)
DECODE(LEVEL0) ;Extrinsic Function to return hashed electronic sig to readable form.
"RTN","PRCSC1",6,0)
 ;returns "" if unsuccessful
"RTN","PRCSC1",7,0)
 NEW RECORD7,RECORD71,VERSION,PERSON,SIG,CHECKSUM
"RTN","PRCSC1",8,0)
 ;get record and check version
"RTN","PRCSC1",9,0)
 S RECORD7=$G(^PRCS(410,LEVEL0,7)) I RECORD7="" QUIT ""
"RTN","PRCSC1",10,0)
 S RECORD71=$G(^PRCS(410,LEVEL0,7.1))
"RTN","PRCSC1",11,0)
 S VERSION=$P(RECORD71,"^",3)
"RTN","PRCSC1",12,0)
 S PERSON=+$P(RECORD7,"^",3)
"RTN","PRCSC1",13,0)
 I VERSION'="",VERSION'=1 Q ""
"RTN","PRCSC1",14,0)
 S SIG=$P(RECORD7,"^",6)
"RTN","PRCSC1",15,0)
 I VERSION=1 G D1
"RTN","PRCSC1",16,0)
D ;decode e signature less than version 1
"RTN","PRCSC1",17,0)
 S X=$$DECODE^PRCUESIG(SIG,LEVEL0,PERSON)
"RTN","PRCSC1",18,0)
 QUIT X
"RTN","PRCSC1",19,0)
D1 ;decode e signature for version 1
"RTN","PRCSC1",20,0)
 S RECORD=$G(^PRCS(410,LEVEL0,0))
"RTN","PRCSC1",21,0)
 S RECORD1=$G(^PRCS(410,LEVEL0,1))
"RTN","PRCSC1",22,0)
 S RECORD2=$G(^PRCS(410,LEVEL0,2))
"RTN","PRCSC1",23,0)
 S RECORD3=$G(^PRCS(410,LEVEL0,3))
"RTN","PRCSC1",24,0)
 S RECORD4=$G(^PRCS(410,LEVEL0,4))
"RTN","PRCSC1",25,0)
 S RECORD10=$G(^PRCS(410,LEVEL0,10))
"RTN","PRCSC1",26,0)
 S CHECKSUM=$$SUM^PRCUESIG(LEVEL0_"^"_$$STRING(RECORD,RECORD1,RECORD2,RECORD3,RECORD4,RECORD7,RECORD10))
"RTN","PRCSC1",27,0)
 QUIT $$DECODE^PRCUESIG(SIG,PERSON,CHECKSUM)
"RTN","PRCSC1",28,0)
ENCODE(LEVEL0,USERNUM,Y) ;Encode e signature for version 1 only
"RTN","PRCSC1",29,0)
 ;Parameter passing entry point
"RTN","PRCSC1",30,0)
 NEW RECORD,RECORD7,RECORD71,SIGBLOCK,CHECKSUM,OLDUSER
"RTN","PRCSC1",31,0)
 ;get record
"RTN","PRCSC1",32,0)
 S USERNUM=+USERNUM
"RTN","PRCSC1",33,0)
 I USERNUM=0 S Y=-3 QUIT  ;-3 no user num available
"RTN","PRCSC1",34,0)
 S SIGBLOCK=$P($G(^VA(200,USERNUM,20)),"^",2)
"RTN","PRCSC1",35,0)
 I SIGBLOCK="" S Y=-2 QUIT  ;-2 no sigblock in file 200
"RTN","PRCSC1",36,0)
 S RECORD=$G(^PRCS(410,LEVEL0,0))
"RTN","PRCSC1",37,0)
 S RECORD1=$G(^PRCS(410,LEVEL0,1))
"RTN","PRCSC1",38,0)
 S RECORD2=$G(^PRCS(410,LEVEL0,2))
"RTN","PRCSC1",39,0)
 S RECORD3=$G(^PRCS(410,LEVEL0,3))
"RTN","PRCSC1",40,0)
 S RECORD4=$G(^PRCS(410,LEVEL0,4))
"RTN","PRCSC1",41,0)
 S RECORD7=$G(^PRCS(410,LEVEL0,7))
"RTN","PRCSC1",42,0)
 S RECORD71=$G(^PRCS(410,LEVEL0,7.1))
"RTN","PRCSC1",43,0)
 S RECORD10=$G(^PRCS(410,LEVEL0,10))
"RTN","PRCSC1",44,0)
 I RECORD="" S Y=-1 QUIT  ;-1 no transaction record
"RTN","PRCSC1",45,0)
 I $P(RECORD7,"^",6)'="" S Y=-4 QUIT  ;-4 cannot re-sign record
"RTN","PRCSC1",46,0)
 S OLDUSER=+$P(RECORD7,"^",3)
"RTN","PRCSC1",47,0)
 I OLDUSER=0 S $P(RECORD7,"^",3)=USERNUM
"RTN","PRCSC1",48,0)
 I OLDUSER>0 S USERNUM=OLDUSER
"RTN","PRCSC1",49,0)
 ;PRC*5.1*120 will check FCP EDI switch and ALL/DELIVERY ORDER switch to recode record due to auto obligation
"RTN","PRCSC1",50,0)
 I $P($G(XQY0),"^")'="PRCSENRB",$P($G(XQY0),"^")'="PRCSANTN",$P($G(XQY0),"^")'="PRCSRI GENERATE",$P($G(XQY0),"^")'="PRCSEDTD",$P($G(XQY0),"^")'="PRCSAPP" D
"RTN","PRCSC1",51,0)
 . I $G(PRCHDELV),'$G(AUTOOBLG) Q
"RTN","PRCSC1",52,0)
 . I $P(RECORD4,"^",4)="" S $P(RECORD4,"^",4)=$P($$NOW^PRCUESIG,".",1),^PRCS(410,LEVEL0,4)=RECORD4
"RTN","PRCSC1",53,0)
 . I '$D(PRC("CP")),$D(PRCB("CP")) S CPSW=1,PRC("CP")=PRCB("CP")
"RTN","PRCSC1",54,0)
 . I $D(PRC("CP")) I ($P($G(^PRC(420,+PRC("SITE"),1,+PRC("CP"),6)),U)="Y")!($P($G(^PRC(420,+PRC("SITE"),3)),U)="Y")!($P($G(^PRC(420,+PRC("SITE"),3)),U,2)'="")!($P($G(^PRC(420,+PRC("SITE"),1,+PRC("CP"),6)),U,2)'="")  D
"RTN","PRCSC1",55,0)
 .. Q:$G(PRCHAMDA)=32
"RTN","PRCSC1",56,0)
 .. D ENCODE^PRCSC2(LEVEL0,USERNUM)
"RTN","PRCSC1",57,0)
 . I $G(CPSW)=1 K PRC("CP"),CPSW
"RTN","PRCSC1",58,0)
 S:$P(RECORD7,"^",7)="" $P(RECORD7,"^",7)=$$NOW^PRCUESIG
"RTN","PRCSC1",59,0)
 S:$P(RECORD7,"^",5)="" $P(RECORD7,"^",5)=$P($$NOW^PRCUESIG,".",1)
"RTN","PRCSC1",60,0)
 S CHECKSUM=$$SUM^PRCUESIG(LEVEL0_"^"_$$STRING(RECORD,RECORD1,RECORD2,RECORD3,RECORD4,RECORD7,RECORD10))
"RTN","PRCSC1",61,0)
 S $P(RECORD7,"^",6)=$$ENCODE^PRCUESIG(SIGBLOCK,USERNUM,CHECKSUM)
"RTN","PRCSC1",62,0)
 S $P(RECORD7,"^",4)=$P($G(^VA(200,USERNUM,20)),"^",3)
"RTN","PRCSC1",63,0)
 S $P(RECORD71,"^",3,4)="1^"_$$SUM^PRCUESIG(SIGBLOCK)
"RTN","PRCSC1",64,0)
 S ^PRCS(410,LEVEL0,7)=RECORD7
"RTN","PRCSC1",65,0)
 S ^PRCS(410,LEVEL0,7.1)=RECORD71
"RTN","PRCSC1",66,0)
 S Y=1 QUIT
"RTN","PRCSC1",67,0)
RECODE(LEVEL0,Y) ;Recode esig for version 1 only
"RTN","PRCSC1",68,0)
 NEW RECORD,RECORD7,RECORD71,SIGBLOCK,CHECKSUM
"RTN","PRCSC1",69,0)
 NEW DA,DIC,RECORD1,RECORD10,RECORD2,RECORD3,RECORD4,USERNUM
"RTN","PRCSC1",70,0)
 S RECORD=$G(^PRCS(410,LEVEL0,0))
"RTN","PRCSC1",71,0)
 S RECORD1=$G(^PRCS(410,LEVEL0,1))
"RTN","PRCSC1",72,0)
 S RECORD2=$G(^PRCS(410,LEVEL0,2))
"RTN","PRCSC1",73,0)
 S RECORD3=$G(^PRCS(410,LEVEL0,3))
"RTN","PRCSC1",74,0)
 S RECORD4=$G(^PRCS(410,LEVEL0,4))
"RTN","PRCSC1",75,0)
 S RECORD7=$G(^PRCS(410,LEVEL0,7))
"RTN","PRCSC1",76,0)
 S RECORD71=$G(^PRCS(410,LEVEL0,7.1))
"RTN","PRCSC1",77,0)
 S RECORD10=$G(^PRCS(410,LEVEL0,10))
"RTN","PRCSC1",78,0)
 I RECORD="" S Y=-1 QUIT  ;-1 no transaction record
"RTN","PRCSC1",79,0)
 S USERNUM=+$P(RECORD7,"^",3)
"RTN","PRCSC1",80,0)
 I $P(RECORD7,"^",6)=""!(USERNUM=0) S Y=-4 QUIT  ;-4 cannot re-sign record
"RTN","PRCSC1",81,0)
 S SIGBLOCK=$P($G(^VA(200,USERNUM,20)),"^",2)
"RTN","PRCSC1",82,0)
 S CHECKSUM=$$SUM^PRCUESIG(LEVEL0_"^"_$$STRING(RECORD,RECORD1,RECORD2,RECORD3,RECORD4,RECORD7,RECORD10))
"RTN","PRCSC1",83,0)
 S $P(RECORD7,"^",6)=$$ENCODE^PRCUESIG(SIGBLOCK,USERNUM,CHECKSUM)
"RTN","PRCSC1",84,0)
 S $P(RECORD7,"^",4)=$P($G(^VA(200,USERNUM,20)),"^",3)
"RTN","PRCSC1",85,0)
 S $P(RECORD71,"^",3,4)="1^"_$$SUM^PRCUESIG(SIGBLOCK)
"RTN","PRCSC1",86,0)
 S ^PRCS(410,LEVEL0,7)=RECORD7
"RTN","PRCSC1",87,0)
 S ^PRCS(410,LEVEL0,7.1)=RECORD71
"RTN","PRCSC1",88,0)
 S Y=1 QUIT
"RTN","PRCSC1",89,0)
REMOVE(LEVEL0) ;Entry point to remove e signature from record
"RTN","PRCSC1",90,0)
 ;NOT an extrinsic function
"RTN","PRCSC1",91,0)
 NEW RECORD7,RECORD71
"RTN","PRCSC1",92,0)
 S RECORD7=$G(^PRCS(410,LEVEL0,7))
"RTN","PRCSC1",93,0)
 S RECORD71=$G(^PRCS(410,LEVEL0,7.1))
"RTN","PRCSC1",94,0)
 S $P(RECORD7,"^",3,7)="^^^^"
"RTN","PRCSC1",95,0)
 S $P(RECORD71,"^",4)=""
"RTN","PRCSC1",96,0)
 S ^PRCS(410,LEVEL0,7)=RECORD7
"RTN","PRCSC1",97,0)
 S ^PRCS(410,LEVEL0,7.1)=RECORD71
"RTN","PRCSC1",98,0)
 QUIT
"RTN","PRCSC1",99,0)
VERIFY(LEVEL0) ;extrinsic function to verify version 1 signature.  Returns 1 if valid, 0 if not valid
"RTN","PRCSC1",100,0)
 NEW RECORD71,VERSION,SIGBLOCK
"RTN","PRCSC1",101,0)
 ;get record variables
"RTN","PRCSC1",102,0)
 S RECORD71=$G(^PRCS(410,LEVEL0,7.1))
"RTN","PRCSC1",103,0)
 S VERSION=$P(RECORD71,"^",3),SIGBLOCK=$P(RECORD71,"^",4)
"RTN","PRCSC1",104,0)
 I VERSION_SIGBLOCK="" QUIT 1
"RTN","PRCSC1",105,0)
 QUIT ($$SUM^PRCUESIG($$DECODE(LEVEL0))=SIGBLOCK)
"RTN","PRCSC1",106,0)
STRING(X,X1,X2,X3,X4,X7,X10) ;Build String of critical fields
"RTN","PRCSC1",107,0)
 Q $P(X,"^",1)_"^"_$P(X1,"^",1)_"^"_$P(X2,"^",1)_"^"_$P(X3,"^",1)_"^"_$P(X3,"^",3)_"^"_$P(X4,"^",1)_"^"_$P(X7,"^",7)_"^"_$P(X10,"^",1)
"RTN","PRCSC3")
0^4^B14708529^B10726630
"RTN","PRCSC3",1,0)
PRCSC3 ;WISC/LEM-ESIG MAINTENANCE ROUTINE ; 08/02/93  8:12 AM
"RTN","PRCSC3",2,0)
V ;;5.1;IFCAP;**120**;Oct 20, 2000;Build 27
"RTN","PRCSC3",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRCSC3",4,0)
 ;ROUTINE FOR MAINTAINING FIELD 44.8 (GPF ELECTRONIC SIGNATURE), FILE 410
"RTN","PRCSC3",5,0)
DECODE(LEVEL0) ;Extrinsic Function to return hashed electronic sig to readable form.
"RTN","PRCSC3",6,0)
 ;returns "" if unsuccessful
"RTN","PRCSC3",7,0)
 NEW RECORD7,RECORD71,VERSION,PERSON,SIG,CHECKSUM
"RTN","PRCSC3",8,0)
 ;get record and check version
"RTN","PRCSC3",9,0)
 S RECORD7=$G(^PRCS(410,LEVEL0,7)) I RECORD7="" QUIT ""
"RTN","PRCSC3",10,0)
 S RECORD71=$G(^PRCS(410,LEVEL0,7.1))
"RTN","PRCSC3",11,0)
 S VERSION=$P(RECORD71,"^",1)
"RTN","PRCSC3",12,0)
 S PERSON=+$P(RECORD7,"^",8)
"RTN","PRCSC3",13,0)
 I VERSION'="",VERSION'=1 Q ""
"RTN","PRCSC3",14,0)
 S SIG=$P(RECORD7,"^",9)
"RTN","PRCSC3",15,0)
D1 ;decode e signature for version 1
"RTN","PRCSC3",16,0)
 S RECORD=$G(^PRCS(410,LEVEL0,0))
"RTN","PRCSC3",17,0)
 S RECORD1=$G(^PRCS(410,LEVEL0,1))
"RTN","PRCSC3",18,0)
 S RECORD3=$G(^PRCS(410,LEVEL0,3))
"RTN","PRCSC3",19,0)
 S RECORD4=$G(^PRCS(410,LEVEL0,4))
"RTN","PRCSC3",20,0)
 S RECORD10=$G(^PRCS(410,LEVEL0,10))
"RTN","PRCSC3",21,0)
 S CHECKSUM=$$SUM^PRCUESIG(LEVEL0_"^"_$$STRING(RECORD,RECORD1,RECORD3,RECORD4,RECORD7,RECORD10))
"RTN","PRCSC3",22,0)
 QUIT $$DECODE^PRCUESIG(SIG,PERSON,CHECKSUM)
"RTN","PRCSC3",23,0)
ENCODE(LEVEL0,USERNUM,Y) ;Encode e signature for version 1 only
"RTN","PRCSC3",24,0)
 ;Parameter passing entry point
"RTN","PRCSC3",25,0)
 NEW SIGBLOCK,CHECKSUM,OLDUSER,HLDCP
"RTN","PRCSC3",26,0)
 NEW RECORD,RECORD1,RECORD3,RECORD4,RECORD7,RECORD71,RECORD10
"RTN","PRCSC3",27,0)
 ;get record
"RTN","PRCSC3",28,0)
 S USERNUM=+USERNUM
"RTN","PRCSC3",29,0)
 I USERNUM=0 S Y=-3 QUIT  ;-3 no user num available
"RTN","PRCSC3",30,0)
 S SIGBLOCK=$P($G(^VA(200,USERNUM,20)),"^",2)
"RTN","PRCSC3",31,0)
 I SIGBLOCK="" S Y=-2 QUIT  ;-2 no sigblock in file 200
"RTN","PRCSC3",32,0)
 S RECORD=$G(^PRCS(410,LEVEL0,0))
"RTN","PRCSC3",33,0)
 S RECORD1=$G(^PRCS(410,LEVEL0,1))
"RTN","PRCSC3",34,0)
 S RECORD3=$G(^PRCS(410,LEVEL0,3))
"RTN","PRCSC3",35,0)
 S RECORD4=$G(^PRCS(410,LEVEL0,4))
"RTN","PRCSC3",36,0)
 S RECORD7=$G(^PRCS(410,LEVEL0,7))
"RTN","PRCSC3",37,0)
 S RECORD71=$G(^PRCS(410,LEVEL0,7.1))
"RTN","PRCSC3",38,0)
 S RECORD10=$G(^PRCS(410,LEVEL0,10))
"RTN","PRCSC3",39,0)
 I RECORD="" S Y=-1 QUIT  ;-1 no transaction record
"RTN","PRCSC3",40,0)
 I $P(RECORD7,"^",9)'="" S Y=-4 QUIT  ;-4 cannot re-sign record
"RTN","PRCSC3",41,0)
 S OLDUSER=+$P(RECORD7,"^",8)
"RTN","PRCSC3",42,0)
 I OLDUSER=0 S $P(RECORD7,"^",8)=USERNUM
"RTN","PRCSC3",43,0)
 I OLDUSER>0 S USERNUM=OLDUSER
"RTN","PRCSC3",44,0)
 ;PRC*5.1*120 will check FCP EDI switch and ALL/DELIVERY ORDER switch to recode record due to auto obligation
"RTN","PRCSC3",45,0)
 I $P($G(XQY0),"^")'="PRCSENRB",$P($G(XQY0),"^")'="PRCSANTN",$P($G(XQY0),"^")'="PRCSRI GENERATE",$P($G(XQY0),"^")'="PRCSEDTD",$P($G(XQY0),"^")'="PRCSAPP" D
"RTN","PRCSC3",46,0)
 . I $G(PRCHDELV),'$G(AUTOOBLG) Q
"RTN","PRCSC3",47,0)
 . S HLDCP=""
"RTN","PRCSC3",48,0)
 . I $P(RECORD4,"^",4)="" S $P(RECORD4,"^",4)=$P($$NOW^PRCUESIG,".",1),^PRCS(410,LEVEL0,4)=RECORD4
"RTN","PRCSC3",49,0)
 . S:$D(PRCB("CP")) HLDCP=PRCB("CP")
"RTN","PRCSC3",50,0)
 . S:$D(PRC("CP")) HLDCP=PRC("CP")
"RTN","PRCSC3",51,0)
 . I $D(PRC("CP")) I ($P($G(^PRC(420,+PRC("SITE"),1,+PRC("CP"),6)),U)="Y")!($P($G(^PRC(420,+PRC("SITE"),3)),U)="Y")!($P($G(^PRC(420,+PRC("SITE"),3)),U,2)'="")!($P($G(^PRC(420,+PRC("SITE"),1,+PRC("CP"),6)),U,2)'="")  D
"RTN","PRCSC3",52,0)
 .. Q:$G(PRCHAMDA)=32
"RTN","PRCSC3",53,0)
 .. D ENCODE^PRCSC2(LEVEL0,USERNUM)
"RTN","PRCSC3",54,0)
 . K HLDCP
"RTN","PRCSC3",55,0)
 S:$P(RECORD7,"^",7)="" $P(RECORD7,"^",7)=$$NOW^PRCUESIG
"RTN","PRCSC3",56,0)
 S:$P(RECORD7,"^",10)="" $P(RECORD7,"^",10)=$$NOW^PRCUESIG
"RTN","PRCSC3",57,0)
 S CHECKSUM=$$SUM^PRCUESIG(LEVEL0_"^"_$$STRING(RECORD,RECORD1,RECORD3,RECORD4,RECORD7,RECORD10))
"RTN","PRCSC3",58,0)
 S $P(RECORD7,"^",9)=$$ENCODE^PRCUESIG(SIGBLOCK,USERNUM,CHECKSUM)
"RTN","PRCSC3",59,0)
 S $P(RECORD71,"^",1,2)="1^"_$$SUM^PRCUESIG(SIGBLOCK)
"RTN","PRCSC3",60,0)
 S ^PRCS(410,LEVEL0,7)=RECORD7
"RTN","PRCSC3",61,0)
 S ^PRCS(410,LEVEL0,7.1)=RECORD71
"RTN","PRCSC3",62,0)
 S Y=1 QUIT
"RTN","PRCSC3",63,0)
REMOVE(LEVEL0) ;Entry point to remove e signature from record
"RTN","PRCSC3",64,0)
 ;NOT an extrinsic function
"RTN","PRCSC3",65,0)
 NEW RECORD7,RECORD71
"RTN","PRCSC3",66,0)
 S RECORD7=$G(^PRCS(410,LEVEL0,7))
"RTN","PRCSC3",67,0)
 S RECORD71=$G(^PRCS(410,LEVEL0,7.1))
"RTN","PRCSC3",68,0)
 S $P(RECORD7,"^",8,10)="^^"
"RTN","PRCSC3",69,0)
 S $P(RECORD71,"^",2)=""
"RTN","PRCSC3",70,0)
 S ^PRCS(410,LEVEL0,7)=RECORD7
"RTN","PRCSC3",71,0)
 S ^PRCS(410,LEVEL0,7.1)=RECORD71
"RTN","PRCSC3",72,0)
 QUIT
"RTN","PRCSC3",73,0)
VERIFY(LEVEL0) ;extrinsic function to verify version 1 signature.  Returns 1 if valid, 0 if not valid
"RTN","PRCSC3",74,0)
 NEW RECORD71,VERSION,SIGBLOCK
"RTN","PRCSC3",75,0)
 ;get record variables
"RTN","PRCSC3",76,0)
 S RECORD71=$G(^PRCS(410,LEVEL0,7.1))
"RTN","PRCSC3",77,0)
 S VERSION=$P(RECORD71,"^",1),SIGBLOCK=$P(RECORD71,"^",2)
"RTN","PRCSC3",78,0)
 I VERSION_SIGBLOCK="" QUIT 1
"RTN","PRCSC3",79,0)
 QUIT ($$SUM^PRCUESIG($$DECODE(LEVEL0))=SIGBLOCK)
"RTN","PRCSC3",80,0)
STRING(X,X1,X3,X4,X7,X10) ;Build String of critical fields
"RTN","PRCSC3",81,0)
 NEW RECORD,RECORD7,RECORD71,SIGBLOCK,CHECKSUM,OLDUSER
"RTN","PRCSC3",82,0)
 Q $P(X,"^",1)_"^"_$P(X1,"^",1)_"^"_$P(X3,"^",1)_"^"_$P(X4,"^",1)_"^"_$P(X7,"^",10)_"^"_$P(X10,"^",1)
"VER")
8.0^22.0
"BLD",5783,6)
^147
**END**
**END**
