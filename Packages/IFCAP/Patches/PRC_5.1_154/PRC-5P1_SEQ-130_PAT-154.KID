Released PRC*5.1*154 SEQ #130
Extracted from mail message
**KIDS**:PRC*5.1*154^

**INSTALL NAME**
PRC*5.1*154
"BLD",6603,0)
PRC*5.1*154^IFCAP^0^3110318^y
"BLD",6603,1,0)
^^5^5^3110127^^
"BLD",6603,1,1,0)
This patch implements Segregation of Duties for 1358s in the
"BLD",6603,1,2,0)
Invoice Tracking module, such that a Requestor, Approver, or
"BLD",6603,1,3,0)
Obligator may not be the Certifier for Payment of an invoice
"BLD",6603,1,4,0)
against the same 1358.  It also enhances the CLRS (NLD) extract
"BLD",6603,1,5,0)
to include data from the Invoice Tracking file (#421.5).
"BLD",6603,4,0)
^9.64PA^410^2
"BLD",6603,4,410,0)
410
"BLD",6603,4,410,2,0)
^9.641^410^1
"BLD",6603,4,410,2,410,0)
CONTROL POINT ACTIVITY  (File-top level)
"BLD",6603,4,410,2,410,1,0)
^9.6411^6.5^1
"BLD",6603,4,410,2,410,1,6.5,0)
SERVICE END DATE
"BLD",6603,4,410,222)
y^n^p^^^^n^^n
"BLD",6603,4,410,224)

"BLD",6603,4,421.5,0)
421.5
"BLD",6603,4,421.5,2,0)
^9.641^421.5^1
"BLD",6603,4,421.5,2,421.5,0)
INVOICE TRACKING  (File-top level)
"BLD",6603,4,421.5,2,421.5,1,0)
^9.6411^61.9^1
"BLD",6603,4,421.5,2,421.5,1,61.9,0)
CERTIFIED BY SIG DATE/TIME
"BLD",6603,4,421.5,222)
y^n^p^^^^n^^n
"BLD",6603,4,421.5,224)

"BLD",6603,4,"APDD",410,410)

"BLD",6603,4,"APDD",410,410,6.5)

"BLD",6603,4,"APDD",421.5,421.5)

"BLD",6603,4,"APDD",421.5,421.5,61.9)

"BLD",6603,4,"B",410,410)

"BLD",6603,4,"B",421.5,421.5)

"BLD",6603,6.3)
5
"BLD",6603,"ABPKG")
n
"BLD",6603,"INID")
^y
"BLD",6603,"INIT")
POST^PRC51154
"BLD",6603,"KRN",0)
^9.67PA^779.2^20
"BLD",6603,"KRN",.4,0)
.4
"BLD",6603,"KRN",.4,"NM",0)
^9.68A^5^5
"BLD",6603,"KRN",.4,"NM",1,0)
PRCHLO421-5_CERTIFYING_SVC_VAL    FILE #421.5^421.5^0
"BLD",6603,"KRN",.4,"NM",2,0)
PRCHLO421-5_FMS_LINE_VALIDATE    FILE #421.5^421.5^0
"BLD",6603,"KRN",.4,"NM",3,0)
PRCHLO421-5_HDR_VALIDATE    FILE #421.5^421.5^0
"BLD",6603,"KRN",.4,"NM",4,0)
PRCHLO421-5_PROMPT_PAY_VAL    FILE #421.5^421.5^0
"BLD",6603,"KRN",.4,"NM",5,0)
PRCHLO410_HDR_VALIDATE    FILE #410^410^0
"BLD",6603,"KRN",.4,"NM","B","PRCHLO410_HDR_VALIDATE    FILE #410",5)

"BLD",6603,"KRN",.4,"NM","B","PRCHLO421-5_CERTIFYING_SVC_VAL    FILE #421.5",1)

"BLD",6603,"KRN",.4,"NM","B","PRCHLO421-5_FMS_LINE_VALIDATE    FILE #421.5",2)

"BLD",6603,"KRN",.4,"NM","B","PRCHLO421-5_HDR_VALIDATE    FILE #421.5",3)

"BLD",6603,"KRN",.4,"NM","B","PRCHLO421-5_PROMPT_PAY_VAL    FILE #421.5",4)

"BLD",6603,"KRN",.401,0)
.401
"BLD",6603,"KRN",.402,0)
.402
"BLD",6603,"KRN",.403,0)
.403
"BLD",6603,"KRN",.5,0)
.5
"BLD",6603,"KRN",.84,0)
.84
"BLD",6603,"KRN",3.6,0)
3.6
"BLD",6603,"KRN",3.8,0)
3.8
"BLD",6603,"KRN",9.2,0)
9.2
"BLD",6603,"KRN",9.8,0)
9.8
"BLD",6603,"KRN",9.8,"NM",0)
^9.68A^11^11
"BLD",6603,"KRN",9.8,"NM",1,0)
PRCFDCI1^^0^B5368338
"BLD",6603,"KRN",9.8,"NM",2,0)
PRCFDE1^^0^B18830215
"BLD",6603,"KRN",9.8,"NM",3,0)
PRCFDE3^^0^B17499299
"BLD",6603,"KRN",9.8,"NM",4,0)
PRCFDSOD^^0^B9304570
"BLD",6603,"KRN",9.8,"NM",5,0)
PRCFSDR^^0^B93033801
"BLD",6603,"KRN",9.8,"NM",6,0)
PRCHLO^^0^B12154193
"BLD",6603,"KRN",9.8,"NM",7,0)
PRCHLO4^^0^B122818206
"BLD",6603,"KRN",9.8,"NM",8,0)
PRCHLO4A^^0^B72354777
"BLD",6603,"KRN",9.8,"NM",9,0)
PRCHLO7^^0^B52404203
"BLD",6603,"KRN",9.8,"NM",10,0)
PRCFDES1^^0^B9924721
"BLD",6603,"KRN",9.8,"NM",11,0)
PRCHLO6^^0^B135328049
"BLD",6603,"KRN",9.8,"NM","B","PRCFDCI1",1)

"BLD",6603,"KRN",9.8,"NM","B","PRCFDE1",2)

"BLD",6603,"KRN",9.8,"NM","B","PRCFDE3",3)

"BLD",6603,"KRN",9.8,"NM","B","PRCFDES1",10)

"BLD",6603,"KRN",9.8,"NM","B","PRCFDSOD",4)

"BLD",6603,"KRN",9.8,"NM","B","PRCFSDR",5)

"BLD",6603,"KRN",9.8,"NM","B","PRCHLO",6)

"BLD",6603,"KRN",9.8,"NM","B","PRCHLO4",7)

"BLD",6603,"KRN",9.8,"NM","B","PRCHLO4A",8)

"BLD",6603,"KRN",9.8,"NM","B","PRCHLO6",11)

"BLD",6603,"KRN",9.8,"NM","B","PRCHLO7",9)

"BLD",6603,"KRN",19,0)
19
"BLD",6603,"KRN",19,"NM",0)
^9.68A^7^7
"BLD",6603,"KRN",19,"NM",1,0)
PRC 1358 COMPLIANCE REPORTS^^2
"BLD",6603,"KRN",19,"NM",2,0)
PRCFD INVOICE CERT SOD RPT^^0
"BLD",6603,"KRN",19,"NM",3,0)
PRCHLO CLRS VALIDATION^^2
"BLD",6603,"KRN",19,"NM",4,0)
PRCHLO INVOICE TRKG CERTIFYING^^0
"BLD",6603,"KRN",19,"NM",5,0)
PRCHLO INVOICE TRKG FMS LINES^^0
"BLD",6603,"KRN",19,"NM",6,0)
PRCHLO INVOICE TRKG HEADER^^0
"BLD",6603,"KRN",19,"NM",7,0)
PRCHLO INVOICE TRKG PROMPT PMT^^0
"BLD",6603,"KRN",19,"NM","B","PRC 1358 COMPLIANCE REPORTS",1)

"BLD",6603,"KRN",19,"NM","B","PRCFD INVOICE CERT SOD RPT",2)

"BLD",6603,"KRN",19,"NM","B","PRCHLO CLRS VALIDATION",3)

"BLD",6603,"KRN",19,"NM","B","PRCHLO INVOICE TRKG CERTIFYING",4)

"BLD",6603,"KRN",19,"NM","B","PRCHLO INVOICE TRKG FMS LINES",5)

"BLD",6603,"KRN",19,"NM","B","PRCHLO INVOICE TRKG HEADER",6)

"BLD",6603,"KRN",19,"NM","B","PRCHLO INVOICE TRKG PROMPT PMT",7)

"BLD",6603,"KRN",19.1,0)
19.1
"BLD",6603,"KRN",101,0)
101
"BLD",6603,"KRN",409.61,0)
409.61
"BLD",6603,"KRN",771,0)
771
"BLD",6603,"KRN",779.2,0)
779.2
"BLD",6603,"KRN",870,0)
870
"BLD",6603,"KRN",8989.51,0)
8989.51
"BLD",6603,"KRN",8989.52,0)
8989.52
"BLD",6603,"KRN",8994,0)
8994
"BLD",6603,"KRN","B",.4,.4)

"BLD",6603,"KRN","B",.401,.401)

"BLD",6603,"KRN","B",.402,.402)

"BLD",6603,"KRN","B",.403,.403)

"BLD",6603,"KRN","B",.5,.5)

"BLD",6603,"KRN","B",.84,.84)

"BLD",6603,"KRN","B",3.6,3.6)

"BLD",6603,"KRN","B",3.8,3.8)

"BLD",6603,"KRN","B",9.2,9.2)

"BLD",6603,"KRN","B",9.8,9.8)

"BLD",6603,"KRN","B",19,19)

"BLD",6603,"KRN","B",19.1,19.1)

"BLD",6603,"KRN","B",101,101)

"BLD",6603,"KRN","B",409.61,409.61)

"BLD",6603,"KRN","B",771,771)

"BLD",6603,"KRN","B",779.2,779.2)

"BLD",6603,"KRN","B",870,870)

"BLD",6603,"KRN","B",8989.51,8989.51)

"BLD",6603,"KRN","B",8989.52,8989.52)

"BLD",6603,"KRN","B",8994,8994)

"BLD",6603,"QDEF")
^^^^^^^^^^YES
"BLD",6603,"QUES",0)
^9.62^^
"BLD",6603,"REQB",0)
^9.611^3^3
"BLD",6603,"REQB",1,0)
PRC*5.1*151^1
"BLD",6603,"REQB",2,0)
PRC*5.1*152^1
"BLD",6603,"REQB",3,0)
PRC*5.1*148^1
"BLD",6603,"REQB","B","PRC*5.1*148",3)

"BLD",6603,"REQB","B","PRC*5.1*151",1)

"BLD",6603,"REQB","B","PRC*5.1*152",2)

"FIA",410)
CONTROL POINT ACTIVITY
"FIA",410,0)
^PRCS(410,
"FIA",410,0,0)
410I
"FIA",410,0,1)
y^n^p^^^^n^^n
"FIA",410,0,10)

"FIA",410,0,11)

"FIA",410,0,"RLRO")

"FIA",410,0,"VR")
5.1^PRC
"FIA",410,410)
1
"FIA",410,410,6.5)

"FIA",421.5)
INVOICE TRACKING
"FIA",421.5,0)
^PRCF(421.5,
"FIA",421.5,0,0)
421.5I
"FIA",421.5,0,1)
y^n^p^^^^n^^n
"FIA",421.5,0,10)

"FIA",421.5,0,11)

"FIA",421.5,0,"RLRO")

"FIA",421.5,0,"VR")
5.1^PRC
"FIA",421.5,421.5)
1
"FIA",421.5,421.5,61.9)

"INIT")
POST^PRC51154
"KRN",.4,2773,-1)
0^5
"KRN",.4,2773,0)
PRCHLO410_HDR_VALIDATE^3110126.2202^@^410^^@^3110314
"KRN",.4,2773,"DXS",1,9.2)
S I(0,0)=$G(D0),DIP(1)=$S($D(^PRCS(410,D0,11)):^(11),1:""),D0=$P(DIP(1),U,4) S:'D0!'$D(^PRCS(410.9,+D0,0)) D0=-1 S DIP(101)=$S($D(^PRCS(410.9,D0,0)):^(0),1:"")
"KRN",.4,2773,"DXS",2,9.2)
S I(0,0)=$G(D0),DIP(1)=$S($D(^PRCS(410,D0,11)):^(11),1:""),D0=$P(DIP(1),U,5) S:'D0!'$D(^PRCS(410.9,+D0,0)) D0=-1 S DIP(101)=$S($D(^PRCS(410.9,D0,0)):^(0),1:"")
"KRN",.4,2773,"F",1)
"TRANSACTION#: ";C1;""~.01;X;""~"TRANSACTION IEN: ";C40;""~0;X;""~"STATION#: ";C1;""~.5;X;""~"TRANSACTION TYPE: ";C40;""~1;X;""~"FORM TYPE: ";C1;""~
"KRN",.4,2773,"F",2)
3;X;""~"SUBSTATION IEN: ";C1;""~S DIP(1)=$S($D(^PRCS(410,D0,0)):^(0),1:"") S X=$P(DIP(1),U,10),X=X W X K DIP;X;"";Z;"INTERNAL(#448)"~
"KRN",.4,2773,"F",3)
"SUBSTATION: ";C40;""~448;X;""~"RUNNING BAL QUARTER DATE: ";C1;""~
"KRN",.4,2773,"F",4)
S DIP(1)=$S($D(^PRCS(410,D0,0)):^(0),1:"") S X=$P(DIP(1),U,11),X=$P(X,".",1) S Y=X D DT K DIP;X;"";d;L18;Z;"DATE(RUNNING BALANCE QUARTER DATE)"~
"KRN",.4,2773,"F",5)
"RUNNING BAL STATUS: ";C40;""~450;X;""~"DATE OF REQUEST: ";C1;""~
"KRN",.4,2773,"F",6)
S DIP(1)=$S($D(^PRCS(410,D0,1)):^(1),1:"") S X=$P(DIP(1),U,1),X=$P(X,".",1) S Y=X D DT K DIP;X;"";d;L18;Z;"DATE(DATE OF REQUEST)"~
"KRN",.4,2773,"F",7)
"CLASSIFICATION IEN: ";C1;""~S DIP(1)=$S($D(^PRCS(410,D0,1)):^(1),1:"") S X=$P(DIP(1),U,5),X=X W X K DIP;X;"";Z;"INTERNAL(#8)"~
"KRN",.4,2773,"F",8)
"CLASSIFICATION: ";C40;""~8;X;""~"VENDOR (FREETXT): ";C1;""~11;X;""~"VENDOR ADDR1: ";C40;""~11.1;X;""~"VENDOR ADDR2: ";C1;""~11.2;X;""~
"KRN",.4,2773,"F",9)
"VENDOR ADDR3: ";C40;""~11.3;X;""~"VENDOR ADDR4: ";C1;""~11.4;X;""~"VENDOR CITY: ";C40;""~11.5;X;""~
"KRN",.4,2773,"F",10)
-5,^DIC(5,^^S I(0,0)=D0 S DIP(1)=$S($D(^PRCS(410,D0,2)):^(2),1:"") S X=$P(DIP(1),U,7),X=X S D(0)=+X;Z;"11.6:"~-5,"VENDOR STATE: ";C1;""~-5,1;X;""~
"KRN",.4,2773,"F",11)
"VENDOR ZIPCODE: ";C40;""~S DIP(1)=$S($D(^PRCS(410,D0,2)):^(2),1:"") S X=$P(DIP(1),U,8),X=X W X K DIP;X;"";Z;"INTERNAL(VENDOR ZIP CODE)"~
"KRN",.4,2773,"F",12)
"VENDOR CONTACT: ";C1;""~11.8;X;""~"VENDOR PHONE: ";C40;""~11.9;X;""~"VENDOR IEN: ";C1;""~
"KRN",.4,2773,"F",13)
S DIP(1)=$S($D(^PRCS(410,D0,3)):^(3),1:"") S X=$P(DIP(1),U,4),X=X W X K DIP;X;"";Z;"INTERNAL(#12)"~"VENDOR(PTR): ";C40;""~12;X;""~
"KRN",.4,2773,"F",14)
-440,^PRC(440,^^S I(0,0)=D0 S DIP(1)=$S($D(^PRCS(410,D0,3)):^(3),1:"") S X=$P(DIP(1),U,4),X=X S D(0)=+X;Z;"12:"~-440,"FMS VENDOR CODE: ";C1;""~-440,34;X;""~
"KRN",.4,2773,"F",15)
-440,"ALT-ADDR-IND: ";C40;""~-440,35;X;""~-440,"DUN & BRADSTREET#: ";C1;""~-440,18.3;X;""~"CONTRACT#: ";C40;""~13;X;""~"FCP: ";C1;""~15;X;""~
"KRN",.4,2773,"F",16)
"COST CENTER: ";C40;""~15.5;X;""~"BOC1: ";C1;""~17;X;""~"BOC1 $ AMT: ";C40;""~17.5;X;""~"ACCOUNTING DATA: ";C1;""~28;X;""~"FCP/PRJ: ";C40;""~28.1;X;""~
"KRN",.4,2773,"F",17)
"BBFY: ";C1;""~28.5;X;""~"COMMITTED COST: ";C40;""~S DIP(1)=$S($D(^PRCS(410,D0,4)):^(4),1:"") S X=$P(DIP(1),U,1),X=X W X K DIP;X;"";Z;"INTERNAL(#20)"~
"KRN",.4,2773,"F",18)
"DATE COMMITTED: ";C1;""~
"KRN",.4,2773,"F",19)
S DIP(1)=$S($D(^PRCS(410,D0,4)):^(4),1:"") S X=$P(DIP(1),U,2),X=$P(X,".",1) S Y=X D DT K DIP;X;"";d;L18;Z;"DATE(DATE COMMITTED)"~
"KRN",.4,2773,"F",20)
"OBLIGATED COST: ";C40;""~22;X;""~"DATE OBLIGATED: ";C1;""~
"KRN",.4,2773,"F",21)
S DIP(1)=$S($D(^PRCS(410,D0,4)):^(4),1:"") S X=$P(DIP(1),U,4),X=$P(X,".",1) S Y=X D DT K DIP;X;"";d;L18;Z;"DATE(DATE OBLIGATED)"~"PO#: ";C40;""~
"KRN",.4,2773,"F",22)
24;X;""~"ADJUSTMENT $ AMT: ";C1;""~25;X;""~"DATE OBL ADJUSTED: ";C40;""~
"KRN",.4,2773,"F",23)
S DIP(1)=$S($D(^PRCS(410,D0,4)):^(4),1:"") S X=$P(DIP(1),U,7),X=$P(X,".",1) S Y=X D DT K DIP;X;"";d;L18;Z;"DATE(DATE OBL ADJUSTED)"~
"KRN",.4,2773,"F",24)
"TRANSACTION AMT: ";C1;""~S DIP(1)=$S($D(^PRCS(410,D0,4)):^(4),1:"") S X=$P(DIP(1),U,8),X=X W X K DIP;X;"";Z;"INTERNAL(#27)"~"OBIGATOR'S DUZ: ";C1;""~
"KRN",.4,2773,"F",25)
S DIP(1)=$S($D(^PRCS(410,D0,4)):^(4),1:"") S X=$P(DIP(1),U,9),X=X W X K DIP;X;"";Z;"INTERNAL(#29)"~"OBLIGATED BY: ";C40;""~29;X;""~
"KRN",.4,2773,"F",26)
-200,^VA(200,^^S I(0,0)=D0 S DIP(1)=$S($D(^PRCS(410,D0,4)):^(4),1:"") S X=$P(DIP(1),U,9),X=X S D(0)=+X;Z;"29:"~-200,"OBLIGATOR SVC IEN: ";C1;""~
"KRN",.4,2773,"F",27)
-200,S DIP(101)=$S($D(^VA(200,D0,5)):^(5),1:"") S X=$P(DIP(101),U,1),X=X W X K DIP;X;"";Z;"INTERNAL(#29)"~-200,"OBLIGATOR SVC: ";C40;""~-200,29;X;""~
"KRN",.4,2773,"F",28)
"OBLIGATION VAL DATE/TIME: ";C1;""~29.8;X;""~"REQUESTOR'S DUZ: ";C1;""~
"KRN",.4,2773,"F",29)
S DIP(1)=$S($D(^PRCS(410,D0,7)):^(7),1:"") S X=$P(DIP(1),U,1),X=X W X K DIP;X;"";Z;"INTERNAL(#40)"~"REQUESTOR: ";C40;""~40;X;""~
"KRN",.4,2773,"F",30)
-200,^VA(200,^^S I(0,0)=D0 S DIP(1)=$S($D(^PRCS(410,D0,7)):^(7),1:"") S X=$P(DIP(1),U,1),X=X S D(0)=+X;Z;"40:"~-200,"REQUESTOR'S SVC IEN: ";C1;""~
"KRN",.4,2773,"F",31)
-200,S DIP(101)=$S($D(^VA(200,D0,5)):^(5),1:"") S X=$P(DIP(101),U,1),X=X W X K DIP;X;"";Z;"INTERNAL(#29)"~-200,"REQUESTOR'S SVC: ";C40;""~-200,29;X;""~
"KRN",.4,2773,"F",32)
"REQUESTOR'S TITLE: ";C1;""~41;X;""~"APPROVING OFFICIAL'S DUZ: ";C1;""~
"KRN",.4,2773,"F",33)
S DIP(1)=$S($D(^PRCS(410,D0,7)):^(7),1:"") S X=$P(DIP(1),U,3),X=X W X K DIP;X;"";Z;"INTERNAL(#42)"~"APPROVING OFFICIAL: ";C40;""~42;X;""~
"KRN",.4,2773,"F",34)
-200,^VA(200,^^S I(0,0)=D0 S DIP(1)=$S($D(^PRCS(410,D0,7)):^(7),1:"") S X=$P(DIP(1),U,3),X=X S D(0)=+X;Z;"42:"~-200,"APPROVING OFFICIAL'S SVC IEN: ";C1;""~
"KRN",.4,2773,"F",35)
-200,S DIP(101)=$S($D(^VA(200,D0,5)):^(5),1:"") S X=$P(DIP(101),U,1),X=X W X K DIP;X;"";Z;"INTERNAL(#29)"~-200,"APPR OFFICIAL SVC: ";C40;""~-200,29;X;""~
"KRN",.4,2773,"F",36)
"APPR OFFICIAL TITLE: ";C1;""~43;X;""~"DATE SIGNED: ";C40;""~
"KRN",.4,2773,"F",37)
S DIP(1)=$S($D(^PRCS(410,D0,7)):^(7),1:"") S X=$P(DIP(1),U,5),X=$P(X,".",1) S Y=X D DT K DIP;X;"";d;L18;Z;"DATE(DATE SIGNED (APPROVED))"~
"KRN",.4,2773,"F",38)
"ES CODE DATE/TIME: ";C1;""~44.6;X;""~"JUSTIFICATION: ";C1;""~45,.01;X;""~"SORT GROUP: ";C1;""~49;X;""~"POIDNUM: ";C1;""~
"KRN",.4,2773,"F",39)
S DIP(1)=$S($D(^PRCS(410,D0,10)):^(10),1:"") S X=$P(DIP(1),U,3),X=X W X K DIP;X;"";Z;"INTERNAL(#52)"~"STATION# - PO#: ";C40;""~52;X;""~
"KRN",.4,2773,"F",40)
-442,^PRC(442,^^S I(0,0)=D0 S DIP(1)=$S($D(^PRCS(410,D0,10)):^(10),1:"") S X=$P(DIP(1),U,3),X=X S D(0)=+X;Z;"52:"~-442,"P.O. DATE: ";C1;""~
"KRN",.4,2773,"F",41)
-442,S DIP(101)=$S($D(^PRC(442,D0,1)):^(1),1:"") S X=$P(DIP(101),U,15),X=$P(X,".",1) S Y=X D DT K DIP;X;"";d;L18;Z;"DATE(#.1)"~"STATUS: ";C40;""~
"KRN",.4,2773,"F",42)
54;X;L30;""~"COMMENTS: ";C1;""~60,.01;X;""~"REASON FOR RETURN: ";C1;""~61,.01;X;""~"1358 AUTHORITY IEN: ";C1~
"KRN",.4,2773,"F",43)
S DIP(1)=$S($D(^PRCS(410,D0,11)):^(11),1:"") S X=$P(DIP(1),U,4),X=X W X K DIP;X;"";Z;"INTERNAL(#19)"~"1358 AUTHORITY CODE: ";C40;""~19;X;""~
"KRN",.4,2773,"F",44)
"1358 AUTHORITY DESCRIPTION: ";C1;""~X DXS(1,9.2) S X=$P(DIP(101),U,2) S D0=I(0,0) W X K DIP;C5;"";Z;"19:.02"~"1358 SUB AUTHORITY IEN: ";C1;""~
"KRN",.4,2773,"F",45)
S DIP(1)=$S($D(^PRCS(410,D0,11)):^(11),1:"") S X=$P(DIP(1),U,5),X=X W X K DIP;X;"";Z;"INTERNAL(#19.1)"~"1358 SUB AUTHORITY CODE: ";C40;""~19.1;X;""~
"KRN",.4,2773,"F",46)
"1358 SUB AUTHORITY DESCRIPTION: ";C1;""~X DXS(2,9.2) S X=$P(DIP(101),U,2) S D0=I(0,0) W X K DIP;C5;"";Z;"19.1:.02"~"1358 SVC START DATE: ";C1;""~
"KRN",.4,2773,"F",47)
S DIP(1)=$S($D(^PRCS(410,D0,1)):^(1),1:"") S X=$P(DIP(1),U,6),X=$P(X,".",1) S Y=X D DT K DIP;X;"";d;L18;Z;"DATE(#6)"~"1358 SVC END DATE: ";C40;""~
"KRN",.4,2773,"F",48)
S DIP(1)=$S($D(^PRCS(410,D0,1)):^(1),1:"") S X=$P(DIP(1),U,7),X=$P(X,".",1) S Y=X D DT K DIP;X;"";d;L18;Z;"DATE(#6.5)"~
"KRN",.4,2773,"H")
CONTROL POINT ACTIVITIES DATA
"KRN",.4,2813,-1)
0^3
"KRN",.4,2813,0)
PRCHLO421-5_HDR_VALIDATE^3101229.1727^@^421.5^^@^3110311
"KRN",.4,2813,"DXS",1,9.2)
S DIP(1)=$S($D(^PRCF(421.5,D0,0)):^(0),1:"") S X=$$EXTERNAL^DIDU(421.5,12,"",$P(DIP(1),U,14))'="",DIP(2)=$G(X) S X=$$EXTERNAL^DIDU(421.5,12,"",$P(DIP(1),U,14))
"KRN",.4,2813,"DXS",2,9.2)
S DIP(1)=$S($D(^PRCF(421.5,D0,0)):^(0),1:"") S X=$$EXTERNAL^DIDU(421.5,13,"",$P(DIP(1),U,15))'="",DIP(2)=$G(X) S X=$$EXTERNAL^DIDU(421.5,13,"",$P(DIP(1),U,15))
"KRN",.4,2813,"DXS",3,9.2)
S DIP(1)=$S($D(^PRCF(421.5,D0,1)):^(1),1:"") S X=$$EXTERNAL^DIDU(421.5,37,"",$P(DIP(1),U,8))'="",DIP(2)=$G(X) S X=$$EXTERNAL^DIDU(421.5,37,"",$P(DIP(1),U,8))
"KRN",.4,2813,"DXS",4,9.2)
S DIP(1)=$S($D(^PRCF(421.5,D0,1)):^(1),1:"") S X=$$EXTERNAL^DIDU(421.5,38,"",$P(DIP(1),U,9))'="",DIP(2)=$G(X) S X=$$EXTERNAL^DIDU(421.5,38,"",$P(DIP(1),U,9))
"KRN",.4,2813,"F",1)
"INV ID: ";C1;""~.01;L;X;""~"STATION#: ";C40;""~.4;X;""~"SUBSTATION: ";C1;""~
"KRN",.4,2813,"F",2)
-442,^PRC(442,^^S I(0,0)=D0 S DIP(1)=$S($D(^PRCF(421.5,D0,0)):^(0),1:"") S X=$P(DIP(1),U,7),X=X S D(0)=+X;Z;"5:"~-442,31;X;""~"INV/BILL#: ";C40;""~
"KRN",.4,2813,"F",3)
1;X;""~"INVOICE DATE: ";C1;""~2;X;""~"DATE RECD: ";C40;""~3;X;""~"PO PTR: ";C1;""~5;X;""~"POIDNUM: ";C40;""~
"KRN",.4,2813,"F",4)
S DIP(1)=$S($D(^PRCF(421.5,D0,0)):^(0),1:"") S X=$P(DIP(1),U,7),X=X W X K DIP;X;"";Z;"INTERNAL(#5)"~"MOP: ";C1;""~
"KRN",.4,2813,"F",5)
-442,^PRC(442,^^S I(0,0)=D0 S DIP(1)=$S($D(^PRCF(421.5,D0,0)):^(0),1:"") S X=$P(DIP(1),U,7),X=X S D(0)=+X;Z;"5:"~-442,.02;X;""~"PO NBR: ";C40;""~
"KRN",.4,2813,"F",6)
4.5;X;""~"CERT REQD: ";C1;""~.6;X;""~"PROMPT PAY TYPE: ";C40;""~4;X;""~"VENDOR: ";C1;""~6;X;""~"VENDOR#: ";C40;""~
"KRN",.4,2813,"F",7)
S DIP(1)=$S($D(^PRCF(421.5,D0,0)):^(0),1:"") S X=$P(DIP(1),U,8),X=X W X K DIP;X;"";Z;"INTERNAL(#6)"~"FMS VENDOR CODE: ";C1;""~
"KRN",.4,2813,"F",8)
-440,^PRC(440,^^S I(0,0)=D0 S DIP(1)=$S($D(^PRCF(421.5,D0,0)):^(0),1:"") S X=$P(DIP(1),U,8),X=X S D(0)=+X;Z;"6:"~-440,34;X;""~"ALT ADDR IND: ";C40;""~
"KRN",.4,2813,"F",9)
-440,^PRC(440,^^S I(0,0)=D0 S DIP(1)=$S($D(^PRCF(421.5,D0,0)):^(0),1:"") S X=$P(DIP(1),U,8),X=X S D(0)=+X;Z;"6:"~-440,35;X;""~"DUNS#: ";C1;""~
"KRN",.4,2813,"F",10)
-440,^PRC(440,^^S I(0,0)=D0 S DIP(1)=$S($D(^PRCF(421.5,D0,0)):^(0),1:"") S X=$P(DIP(1),U,8),X=X S D(0)=+X;Z;"6:"~-440,18.3;X;""~
"KRN",.4,2813,"F",11)
"DISCOUNT DAYS: ";C40;""~10;X;""~"DISCOUNT TERMS: ";C1;""~11;X;""~"DATE GOODS/SVC RECD: ";C40;""~11.5;X;""~"APPR SHIP AMT: ";C1;""~
"KRN",.4,2813,"F",12)
N DIERR X DXS(1,9.2) S DIP(3)=$G(X) S X=1,DIP(4)=$G(X) S X="",X=$S(DIP(2):DIP(3),DIP(4):X) W X K DIP;X;"";Z;"$S(#12'="":#12,1:"")"~
"KRN",.4,2813,"F",13)
"AMT CERT PAYMENT: ";C40;""~
"KRN",.4,2813,"F",14)
N DIERR X DXS(2,9.2) S DIP(3)=$G(X) S X=1,DIP(4)=$G(X) S X="",X=$S(DIP(2):DIP(3),DIP(4):X) W X K DIP;X;"";Z;"$S(#13'="":#13,1:"")"~
"KRN",.4,2813,"F",15)
"DATE SUSPENSE LTR: ";C1;""~24;X;""~"SUSPENSE LTR REQD: ";C40;""~25;X;""~"PARTIAL#: ";C1;""~26;X;""~"FMS PMT VOUCHER: ";C40;""~27;X;""~
"KRN",.4,2813,"F",16)
"GROSS INV AMT: ";C1;""~
"KRN",.4,2813,"F",17)
N DIERR X DXS(3,9.2) S DIP(3)=$G(X) S X=1,DIP(4)=$G(X) S X="",X=$S(DIP(2):DIP(3),DIP(4):X) W X K DIP;X;"";Z;"$S(#37'="":#37,1:"")"~
"KRN",.4,2813,"F",18)
"GROSS SHIPPING: ";C40;""~
"KRN",.4,2813,"F",19)
N DIERR X DXS(4,9.2) S DIP(3)=$G(X) S X=1,DIP(4)=$G(X) S X="",X=$S(DIP(2):DIP(3),DIP(4):X) W X K DIP;X;"";Z;"$S(#38'="":#38,1:"")"~"STATUS: ";C1;""~
"KRN",.4,2813,"F",20)
50;X;""~"PO SUFFIX: ";C40;""~51;X;""~"EXPANDED PO#: ";C1;""~52;X;""~"CURRENT INV LOC: ";C40;""~53;X;""~"D/T CURRENT LOC: ";C1;""~54;X;""~
"KRN",.4,2813,"F",21)
"CHARGED TO LOC BY: ";C40;""~54.5;X;""~"CHARGED TO LOC DUZ: ";C1;""~
"KRN",.4,2813,"F",22)
S DIP(1)=$S($D(^PRCF(421.5,D0,2)):^(2),1:"") S X=$P(DIP(1),U,17),X=X W X K DIP;X;"";Z;"INTERNAL(#54.5)"~"CHG LOC SVC: ";C40;""~
"KRN",.4,2813,"F",23)
-200,^VA(200,^^S I(0,0)=D0 S DIP(1)=$S($D(^PRCF(421.5,D0,2)):^(2),1:"") S X=$P(DIP(1),U,17),X=X S D(0)=+X;Z;"54.5:"~-200,29;X;""~
"KRN",.4,2813,"F",24)
"DISC PMT DATE: ";C1;""~55;X;""~"NET PMT DATE: ";C40;""~56;X;""~"DT DUE IN FISCAL: ";C1;""~57;X;""~"DT RETURNED FISCAL: ";C40;""~58;X;""~
"KRN",.4,2813,"F",25)
"CERT PMT BY: ";C1;""~59;X;""~"CERT PMT DUZ: ";C40;""~
"KRN",.4,2813,"F",26)
S DIP(1)=$S($D(^PRCF(421.5,D0,2)):^(2),1:"") S X=$P(DIP(1),U,10),X=X W X K DIP;X;"";Z;"INTERNAL(#59)"~"CERT PMT SVC: ";C1;""~
"KRN",.4,2813,"F",27)
-200,^VA(200,^^S I(0,0)=D0 S DIP(1)=$S($D(^PRCF(421.5,D0,2)):^(2),1:"") S X=$P(DIP(1),U,10),X=X S D(0)=+X;Z;"59:"~-200,29;X;""~"COMPLETED BY: ";C1;""~
"KRN",.4,2813,"F",28)
60;X;""~"COMPLETED BY DUZ: ";C40;""~S DIP(1)=$S($D(^PRCF(421.5,D0,2)):^(2),1:"") S X=$P(DIP(1),U,11),X=X W X K DIP;X;"";Z;"INTERNAL(#60)"~
"KRN",.4,2813,"F",29)
"COMPLETED SVC: ";C1;""~-200,^VA(200,^^S I(0,0)=D0 S DIP(1)=$S($D(^PRCF(421.5,D0,2)):^(2),1:"") S X=$P(DIP(1),U,11),X=X S D(0)=+X;Z;"60:"~-200,29;X;""~
"KRN",.4,2813,"F",30)
"CERT VAL CODE: ";C1;""~61;X;""~"CERTIFIED D/T: ";C40;""~61.9;X;""~"COMPL VAL CODE: ";C1;""~62;X;""~"COMPLETED D/T: ";C40;""~62.9;X;""~
"KRN",.4,2813,"F",31)
"BULLETIN SENT TO SVC: ";C1;""~63;X;""~"DT BULLETIN SENT: ";C40;""~64;X;""~"CP CERTIFIED BY: ";C1;""~66;X;""~"CP CERTIFIED DUZ: ";C40;""~
"KRN",.4,2813,"F",32)
S DIP(1)=$S($D(^PRCF(421.5,D0,2)):^(2),1:"") S X=$P(DIP(1),U,18),X=X W X K DIP;X;"";Z;"INTERNAL(#66)"~"CP CERTIFIED SVC: ";C1;""~
"KRN",.4,2813,"F",33)
-200,^VA(200,^^S I(0,0)=D0 S DIP(1)=$S($D(^PRCF(421.5,D0,2)):^(2),1:"") S X=$P(DIP(1),U,18),X=X S D(0)=+X;Z;"66:"~-200,29;X;""~"CP SIGN D/T: ";C40;""~
"KRN",.4,2813,"F",34)
67.9;X;""~"CERTIFYING CP: ";C1;""~68;X;""~"FMS TXN DT: ";C1;""~71;X;""~"ACCTG PERIOD MONTH/YR: ";C40;""~72;X;""~"REASON FOR SUSPENSION: ";C1;""~
"KRN",.4,2813,"F",35)
23,.01;C5;""~
"KRN",.4,2813,"H")
INVOICE TRACKING HEADER DATA
"KRN",.4,2814,-1)
0^4
"KRN",.4,2814,0)
PRCHLO421-5_PROMPT_PAY_VAL^3101228.12^@^421.5^^@^3110228
"KRN",.4,2814,"DXS",1,9.2)
S DIP(1)=$S($D(^PRCF(421.5,D0,0)):^(0),1:"") S X=$P($G(^PRC(442,+$P(DIP(1),U,7),0)),U),DIP(2)=$G(X) S X="PRCVAR4"
"KRN",.4,2814,"DXS",2,9)
S DIP(1)=$S($D(^PRCF(421.5,D0,0)):^(0),1:"") S X=$P(DIP(1),U,7),X=X S X=X,DIP(2)=$G(X) S X="PRCVAR5",X1=DIP(2) S:X]""&(X'[U)&(X'["$C(94)") @X=X1,X=X1
"KRN",.4,2814,"F",1)

"KRN",.4,2814,"F",2)
S DIP(1)=$S($D(^PRCF(421.5,D0,0)):^(0),1:"") S X=$P(DIP(1),U,1),DIP(2)=$G(X) S X="PRCVAR1",X1=DIP(2) S:X]""&(X'[U)&(X'["$C(94)") @X=X1,X=X1 W X K DIP;C1;L0;"";Z;"SET(#.01,"PRCVAR1")"~
"KRN",.4,2814,"F",3)
S DIP(1)=$S($D(^PRCF(421.5,D0,1)):^(1),1:"") S X=$P(DIP(1),U,2),DIP(2)=$G(X) S X="PRCVAR2",X1=DIP(2) S:X]""&(X'[U)&(X'["$C(94)") @X=X1,X=X1 W X K DIP;C1;L0;"";Z;"SET(#.4,"PRCVAR2")"~
"KRN",.4,2814,"F",4)
S DIP(1)=$S($D(^PRCF(421.5,D0,0)):^(0),1:"") S X=$P(DIP(1),U,3),DIP(2)=$G(X) S X="PRCVAR3",X1=DIP(2) S:X]""&(X'[U)&(X'["$C(94)") @X=X1,X=X1 W X K DIP;C1;L0;"";Z;"SET(#1,"PRCVAR3")"~
"KRN",.4,2814,"F",5)
X DXS(1,9.2) S X1=DIP(2) S:X]""&(X'[U)&(X'["$C(94)") @X=X1,X=X1 W X K DIP;C1;L0;"";Z;"SET(#5,"PRCVAR4")"~
"KRN",.4,2814,"F",6)
X DXS(2,9) W X K DIP;C1;L0;"";Z;"SET(INTERNAL(#5),"PRCVAR5")"~31,"INV ID: ";C1;""~
"KRN",.4,2814,"F",7)
31,S X="PRCVAR1" Q:X  Q:$NA(@X)[U  S X=$G(@X) W X K DIP;X;"";Z;"VAR("PRCVAR1")"~31,"STATION#: ";C40;""~
"KRN",.4,2814,"F",8)
31,S X="PRCVAR2" Q:X  Q:$NA(@X)[U  S X=$G(@X) W X K DIP;X;"";Z;"VAR("PRCVAR2")"~31,"PROMPT PMT TERM IEN: ";C1;""~31,0;L;X;""~31,"INV/BILL#: ";C40;""~
"KRN",.4,2814,"F",9)
31,S X="PRCVAR3" Q:X  Q:$NA(@X)[U  S X=$G(@X) W X K DIP;X;"";Z;"VAR("PRCVAR3")"~31,"PO PTR: ";C1;""~
"KRN",.4,2814,"F",10)
31,S X="PRCVAR4" Q:X  Q:$NA(@X)[U  S X=$G(@X) W X K DIP;X;"";Z;"VAR("PRCVAR4")"~31,"POIDNUM: ";C40;""~
"KRN",.4,2814,"F",11)
31,S X="PRCVAR5" Q:X  Q:$NA(@X)[U  S X=$G(@X) W X K DIP;X;"";Z;"VAR("PRCVAR5")"~31,"PROMPT PMT TERMS#: ";C1;""~31,.01;L;X;""~31,"TERMS TYPE: ";C40;""~
"KRN",.4,2814,"F",12)
31,1;X;""~31,"DISC %: ";C1;""~31,2;L;X;""~31,"DISC AMT: ";C40;""~31,3;L;X;""~31,"DISC DAYS: ";C1;""~31,4;L;X;""~31," ";C1;""~
"KRN",.4,2814,"F",13)
K PRCVAR1,PRCVAR2,PRCVAR3,PRCVAR4,PRCVAR5;"";Z;"K PRCVAR1,PRCVAR2,PRCVAR3,PRCVAR4,PRCVAR5"~
"KRN",.4,2814,"H")
INVOICE TRACKING PROMPT PAYMENT TERMS DATA
"KRN",.4,2815,-1)
0^2
"KRN",.4,2815,0)
PRCHLO421-5_FMS_LINE_VALIDATE^3101229.1759^@^421.5^^@^3110228
"KRN",.4,2815,"DXS",1,9.2)
S DIP(1)=$S($D(^PRCF(421.5,D0,0)):^(0),1:"") S X=$P($G(^PRC(442,+$P(DIP(1),U,7),0)),U),DIP(2)=$G(X) S X="PRCVAR4"
"KRN",.4,2815,"DXS",2,9)
S DIP(1)=$S($D(^PRCF(421.5,D0,0)):^(0),1:"") S X=$P(DIP(1),U,7),X=X S X=X,DIP(2)=$G(X) S X="PRCVAR5",X1=DIP(2) S:X]""&(X'[U)&(X'["$C(94)") @X=X1,X=X1
"KRN",.4,2815,"DXS",3,9.2)
S DIP(1)=$S($D(^PRCF(421.5,D0,5,D1,0)):^(0),1:"") S X=$$EXTERNAL^DIDU(421.541,1,"",$P(DIP(1),U,2)),DIP(2)=$G(X) S X="",DIP(3)=$G(X) S X=2
"KRN",.4,2815,"DXS",4,9.2)
S DIP(1)=$S($D(^PRCF(421.5,D0,5,D1,0)):^(0),1:"") S X=$$EXTERNAL^DIDU(421.541,2,"",$P(DIP(1),U,3)),DIP(2)=$G(X) S X="",DIP(3)=$G(X) S X=2
"KRN",.4,2815,"F",1)

"KRN",.4,2815,"F",2)
S DIP(1)=$S($D(^PRCF(421.5,D0,0)):^(0),1:"") S X=$P(DIP(1),U,1),DIP(2)=$G(X) S X="PRCVAR1",X1=DIP(2) S:X]""&(X'[U)&(X'["$C(94)") @X=X1,X=X1 W X K DIP;C1;L0;"";Z;"SET(#.01,"PRCVAR1")"~
"KRN",.4,2815,"F",3)
S DIP(1)=$S($D(^PRCF(421.5,D0,1)):^(1),1:"") S X=$P(DIP(1),U,2),DIP(2)=$G(X) S X="PRCVAR2",X1=DIP(2) S:X]""&(X'[U)&(X'["$C(94)") @X=X1,X=X1 W X K DIP;C1;L0;"";Z;"SET(#.4,"PRCVAR2")"~
"KRN",.4,2815,"F",4)
S DIP(1)=$S($D(^PRCF(421.5,D0,0)):^(0),1:"") S X=$P(DIP(1),U,3),DIP(2)=$G(X) S X="PRCVAR3",X1=DIP(2) S:X]""&(X'[U)&(X'["$C(94)") @X=X1,X=X1 W X K DIP;C1;L0;"";Z;"SET(#1,"PRCVAR3")"~
"KRN",.4,2815,"F",5)
X DXS(1,9.2) S X1=DIP(2) S:X]""&(X'[U)&(X'["$C(94)") @X=X1,X=X1 W X K DIP;C1;L0;"";Z;"SET(#5,"PRCVAR4")"~
"KRN",.4,2815,"F",6)
X DXS(2,9) W X K DIP;C1;L0;"";Z;"SET(INTERNAL(#5),"PRCVAR5")"~41,"INV ID: ";C1;""~
"KRN",.4,2815,"F",7)
41,S X="PRCVAR1" Q:X  Q:$NA(@X)[U  S X=$G(@X) W X K DIP;X;"";Z;"VAR("PRCVAR1")"~41,"STATION#: ";C40;""~
"KRN",.4,2815,"F",8)
41,S X="PRCVAR2" Q:X  Q:$NA(@X)[U  S X=$G(@X) W X K DIP;X;"";Z;"VAR("PRCVAR2")"~41,"FMS LINE IEN: ";C1;""~41,0;L;X;""~41,"INV/BILL#: ";C40;""~
"KRN",.4,2815,"F",9)
41,S X="PRCVAR3" Q:X  Q:$NA(@X)[U  S X=$G(@X) W X K DIP;X;"";Z;"VAR("PRCVAR3")"~41,"PO PTR: ";C1;""~
"KRN",.4,2815,"F",10)
41,S X="PRCVAR4" Q:X  Q:$NA(@X)[U  S X=$G(@X) W X K DIP;X;"";Z;"VAR("PRCVAR4")"~41,"POIDNUM: ";C40;""~
"KRN",.4,2815,"F",11)
41,S X="PRCVAR5" Q:X  Q:$NA(@X)[U  S X=$G(@X) W X K DIP;X;"";Z;"VAR("PRCVAR5")"~41,"BOC: ";C1;""~
"KRN",.4,2815,"F",12)
41,S DIP(1)=$S($D(^PRCF(421.5,D0,5,D1,0)):^(0),1:"") S X=$P($G(^PRCD(420.2,+$P(DIP(1),U,1),0)),U),DIP(2)=$G(X) S X=" ",DIP(3)=$G(X) S X=1,X=$P(DIP(2),DIP(3),X) W X K DIP;X;"";Z;"$P(#.01," ",1)"~
"KRN",.4,2815,"F",13)
41,"ACCOUNTING LINE AMT: ";C40;""~41,N DIERR X DXS(3,9.2) S X=$J(DIP(2),DIP(3),X) W X K DIP;L;X;"";Z;"$J(#1,"",2)"~41,"LIQUIDATION AMT: ";C1;""~
"KRN",.4,2815,"F",14)
41,N DIERR X DXS(4,9.2) S X=$J(DIP(2),DIP(3),X) W X K DIP;L;X;"";Z;"$J(#2,"",2)"~41,"LIQUIDATION CODE: ";C40;""~41,3;X;""~41,"FMS LINE#: ";C1;""~
"KRN",.4,2815,"F",15)
41,4;L;X;""~41," ";C1;""~K PRCVAR1,PRCVAR2,PRCVAR3,PRCVAR4,PRCVAR5;"";Z;"K PRCVAR1,PRCVAR2,PRCVAR3,PRCVAR4,PRCVAR5"~
"KRN",.4,2815,"H")
INVOICE TRACKING FMS LINE DATA
"KRN",.4,2816,-1)
0^1
"KRN",.4,2816,0)
PRCHLO421-5_CERTIFYING_SVC_VAL^3101228.1154^@^421.5^^@^3110311
"KRN",.4,2816,"DXS",1,9.2)
S DIP(1)=$S($D(^PRCF(421.5,D0,0)):^(0),1:"") S X=$P($G(^PRC(442,+$P(DIP(1),U,7),0)),U),DIP(2)=$G(X) S X="PRCVAR4"
"KRN",.4,2816,"DXS",2,9)
S DIP(1)=$S($D(^PRCF(421.5,D0,0)):^(0),1:"") S X=$P(DIP(1),U,7),X=X S X=X,DIP(2)=$G(X) S X="PRCVAR5",X1=DIP(2) S:X]""&(X'[U)&(X'["$C(94)") @X=X1,X=X1
"KRN",.4,2816,"F",1)

"KRN",.4,2816,"F",2)
S DIP(1)=$S($D(^PRCF(421.5,D0,0)):^(0),1:"") S X=$P(DIP(1),U,1),DIP(2)=$G(X) S X="PRCVAR1",X1=DIP(2) S:X]""&(X'[U)&(X'["$C(94)") @X=X1,X=X1 W X K DIP;C1;L0;"";Z;"SET(#.01,"PRCVAR1")"~
"KRN",.4,2816,"F",3)
S DIP(1)=$S($D(^PRCF(421.5,D0,1)):^(1),1:"") S X=$P(DIP(1),U,2),DIP(2)=$G(X) S X="PRCVAR2",X1=DIP(2) S:X]""&(X'[U)&(X'["$C(94)") @X=X1,X=X1 W X K DIP;C1;L0;"";Z;"SET(#.4,"PRCVAR2")"~
"KRN",.4,2816,"F",4)
S DIP(1)=$S($D(^PRCF(421.5,D0,0)):^(0),1:"") S X=$P(DIP(1),U,3),DIP(2)=$G(X) S X="PRCVAR3",X1=DIP(2) S:X]""&(X'[U)&(X'["$C(94)") @X=X1,X=X1 W X K DIP;C1;L0;"";Z;"SET(#1,"PRCVAR3")"~
"KRN",.4,2816,"F",5)
X DXS(1,9.2) S X1=DIP(2) S:X]""&(X'[U)&(X'["$C(94)") @X=X1,X=X1 W X K DIP;C1;L0;"";Z;"SET(#5,"PRCVAR4")"~
"KRN",.4,2816,"F",6)
X DXS(2,9) W X K DIP;C1;L0;"";Z;"SET(INTERNAL(#5),"PRCVAR5")"~70,"INV ID: ";C1;""~
"KRN",.4,2816,"F",7)
70,S X="PRCVAR1" Q:X  Q:$NA(@X)[U  S X=$G(@X) W X K DIP;X;"";Z;"VAR("PRCVAR1")"~70,"STATION#: ";C40;""~
"KRN",.4,2816,"F",8)
70,S X="PRCVAR2" Q:X  Q:$NA(@X)[U  S X=$G(@X) W X K DIP;X;"";Z;"VAR("PRCVAR2")"~70,"CERT SVC ENTRY IEN: ";C1;""~70,0;L;X;""~70,"INV/BILL#: ";C40~
"KRN",.4,2816,"F",9)
70,S X="PRCVAR3" Q:X  Q:$NA(@X)[U  S X=$G(@X) W X K DIP;X;"";Z;"VAR("PRCVAR3")"~70,"PO PTR: ";C1;""~
"KRN",.4,2816,"F",10)
70,S X="PRCVAR4" Q:X  Q:$NA(@X)[U  S X=$G(@X) W X K DIP;X;"";Z;"VAR("PRCVAR4")"~70,"POIDNUM: ";C40;""~
"KRN",.4,2816,"F",11)
70,S X="PRCVAR5" Q:X  Q:$NA(@X)[U  S X=$G(@X) W X K DIP;X;"";Z;"VAR("PRCVAR5")"~70,"CERTIFYING SVC: ";C1;""~70,.01;X;""~70,"D/T CHARGED OUT: ";C40;""~
"KRN",.4,2816,"F",12)
70,1;X;""~70,"CHARGED BY: ";C1;""~70,2;X;""~70,"CHARGE BY DUZ: ";C40;""~
"KRN",.4,2816,"F",13)
70,S DIP(1)=$S($D(^PRCF(421.5,D0,3,D1,0)):^(0),1:"") S X=$P(DIP(1),U,3),X=X W X K DIP;L;X;"";Z;"INTERNAL(#2)"~70,"CHARGED BY SVC: ";C1;""~
"KRN",.4,2816,"F",14)
70,-200,^VA(200,^^S I(1,0)=D1 S I(0,0)=D0 S DIP(1)=$S($D(^PRCF(421.5,D0,3,D1,0)):^(0),1:"") S X=$P(DIP(1),U,3),X=X S D(0)=+X;Z;"2:"~70,-200,29;X;""~
"KRN",.4,2816,"F",15)
70," ";C1;""~K PRCVAR1,PRCVAR2,PRCVAR3,PRCVAR4,PRCVAR5;"";Z;"K PRCVAR1,PRCVAR2,PRCVAR3,PRCVAR4,PRCVAR5"~
"KRN",.4,2816,"H")
INVOICE TRACKING CERTIFYING SERVICE DATA
"KRN",19,12740,-1)
2^1
"KRN",19,12740,0)
PRC 1358 COMPLIANCE REPORTS^Compliance Reports (1358)^^M^2425^^^^^^^455
"KRN",19,12740,10,0)
^19.01IP^3^2
"KRN",19,12740,10,3,0)
12965
"KRN",19,12740,10,3,"^")
PRCFD INVOICE CERT SOD RPT
"KRN",19,12740,"U")
COMPLIANCE REPORTS (1358)
"KRN",19,12741,-1)
2^3
"KRN",19,12741,0)
PRCHLO CLRS VALIDATION^CLRS Extract Validation Templates^^M^2425^^^^^^^455
"KRN",19,12741,10,0)
^19.01IP^27^27
"KRN",19,12741,10,24,0)
12967^^24
"KRN",19,12741,10,24,"^")
PRCHLO INVOICE TRKG HEADER
"KRN",19,12741,10,25,0)
12968^^25
"KRN",19,12741,10,25,"^")
PRCHLO INVOICE TRKG PROMPT PMT
"KRN",19,12741,10,26,0)
12969^^26
"KRN",19,12741,10,26,"^")
PRCHLO INVOICE TRKG FMS LINES
"KRN",19,12741,10,27,0)
12970^^27
"KRN",19,12741,10,27,"^")
PRCHLO INVOICE TRKG CERTIFYING
"KRN",19,12741,"U")
CLRS EXTRACT VALIDATION TEMPLA
"KRN",19,12965,-1)
0^2
"KRN",19,12965,0)
PRCFD INVOICE CERT SOD RPT^Invoice Certification Seg Duties Violation Rpt^^R^^^^^^^^IFCAP
"KRN",19,12965,1,0)
^^6^6^3101208^
"KRN",19,12965,1,1,0)
This report shows requestors, approvers, obligators, and certifiers in
"KRN",19,12965,1,2,0)
IFCAP's Invoice/Tracking module of 1358s and identifies violations of
"KRN",19,12965,1,3,0)
segregation of duties policy.  This report identifies 1358s based
"KRN",19,12965,1,4,0)
on certified invoices in the IFCAP invoice/tracking module and does
"KRN",19,12965,1,5,0)
not present 1358s which are certified in other VistA packages or other
"KRN",19,12965,1,6,0)
systems.
"KRN",19,12965,25)
PRCFSDR
"KRN",19,12965,"U")
INVOICE CERTIFICATION SEG DUTI
"KRN",19,12967,-1)
0^6
"KRN",19,12967,0)
PRCHLO INVOICE TRKG HEADER^IH Invoice Tracking Header - F24^^I^^^^^^^^IFCAP
"KRN",19,12967,1,0)
^^2^2^3101228^
"KRN",19,12967,1,1,0)
This option invokes an inquiry of the Invoice Tracking file (#421.5)
"KRN",19,12967,1,2,0)
to show the data of selected fields at the file header level.
"KRN",19,12967,30)
PRCF(421.5,
"KRN",19,12967,31)
AEMQ
"KRN",19,12967,63)
[PRCHLO421-5_HDR_VALIDATE]
"KRN",19,12967,80)
PRCF(421.5,
"KRN",19,12967,"U")
IH INVOICE TRACKING HEADER - F
"KRN",19,12968,-1)
0^7
"KRN",19,12968,0)
PRCHLO INVOICE TRKG PROMPT PMT^IP Invoice Tracking Prompt Pmt Terms - F25^^I^^^^^^^^IFCAP^^^1
"KRN",19,12968,1,0)
^^2^2^3101228^
"KRN",19,12968,1,1,0)
This option invokes an inquiry of the Invoice Tracking Prompt Payment
"KRN",19,12968,1,2,0)
Terms multiple (#421.531) to show selected fields.
"KRN",19,12968,15)
K PRCVAR1,PRCVAR2,PRCVAR3,PRCVAR4,PRCVAR5
"KRN",19,12968,30)
PRCF(421.5,
"KRN",19,12968,31)
AEMQ
"KRN",19,12968,63)
[PRCHLO421-5_PROMPT_PAY_VAL]
"KRN",19,12968,80)
PRCF(421.5,
"KRN",19,12968,"U")
IP INVOICE TRACKING PROMPT PMT
"KRN",19,12969,-1)
0^5
"KRN",19,12969,0)
PRCHLO INVOICE TRKG FMS LINES^IF Invoice Tracking FMS Lines - F26^^I^^^^^^^^IFCAP^^^1
"KRN",19,12969,1,0)
^^2^2^3101228^
"KRN",19,12969,1,1,0)
This option invokes an inquiry of the Invoice Tracking FMS Line multiple
"KRN",19,12969,1,2,0)
(#421.541) to show data of selected fields.
"KRN",19,12969,15)
K PRCVAR1,PRCVAR2,PRCVAR3,PRCVAR4,PRCVAR5
"KRN",19,12969,30)
PRCF(421.5,
"KRN",19,12969,31)
AEMQ
"KRN",19,12969,63)
[PRCHLO421-5_FMS_LINE_VALIDATE]
"KRN",19,12969,80)
PRCF(421.5,
"KRN",19,12969,"U")
IF INVOICE TRACKING FMS LINES 
"KRN",19,12970,-1)
0^4
"KRN",19,12970,0)
PRCHLO INVOICE TRKG CERTIFYING^IC Invoice Tracking Certifying Svc - F27^^I^^^^^^^^IFCAP^^^1
"KRN",19,12970,1,0)
^^2^2^3101228^
"KRN",19,12970,1,1,0)
This option invokes an inquiry of the Invoice Tracking Certifying Service
"KRN",19,12970,1,2,0)
multiple (#421.51) to show data of selected fields.
"KRN",19,12970,15)
K PRCVAR1,PRCVAR2,PRCVAR3,PRCVAR4,PRCVAR5
"KRN",19,12970,30)
PRCF(421.5,
"KRN",19,12970,31)
AEMQ
"KRN",19,12970,63)
[PRCHLO421-5_CERTIFYING_SVC_VAL]
"KRN",19,12970,80)
PRCF(421.5,
"KRN",19,12970,"U")
IC INVOICE TRACKING CERTIFYING
"MBREQ")
0
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",455,-1)
1^1
"PKG",455,0)
IFCAP^PRC^IFCAP System Files
"PKG",455,20,0)
^9.402P^^
"PKG",455,22,0)
^9.49I^1^1
"PKG",455,22,1,0)
5.1^3001012^3001019^68
"PKG",455,22,1,"PAH",1,0)
154^3110318
"PKG",455,22,1,"PAH",1,1,0)
^^5^5^3110318
"PKG",455,22,1,"PAH",1,1,1,0)
This patch implements Segregation of Duties for 1358s in the
"PKG",455,22,1,"PAH",1,1,2,0)
Invoice Tracking module, such that a Requestor, Approver, or
"PKG",455,22,1,"PAH",1,1,3,0)
Obligator may not be the Certifier for Payment of an invoice
"PKG",455,22,1,"PAH",1,1,4,0)
against the same 1358.  It also enhances the CLRS (NLD) extract
"PKG",455,22,1,"PAH",1,1,5,0)
to include data from the Invoice Tracking file (#421.5).
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
12
"RTN","PRC51154")
0^^B406680^n/a
"RTN","PRC51154",1,0)
PRC51154 ;SSOI&TFO/LKG - POST-INIT PRC*5.1*154 ;1/5/11  16:02
"RTN","PRC51154",2,0)
 ;;5.1;IFCAP;**154**;OCT 20, 2000;Build 5
"RTN","PRC51154",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRC51154",4,0)
 ;
"RTN","PRC51154",5,0)
 Q
"RTN","PRC51154",6,0)
POST ;Post-Init code to index new AF cross reference in INVOICE TRACKING file (#421.5)
"RTN","PRC51154",7,0)
 L +^PRCF(421.5):30
"RTN","PRC51154",8,0)
 K ^PRCF(421.5,"AF")
"RTN","PRC51154",9,0)
 N DIK S DIK="^PRCF(421.5,",DIK(1)="61.9^AF" D ENALL^DIK
"RTN","PRC51154",10,0)
 L -^PRCF(421.5)
"RTN","PRC51154",11,0)
 Q
"RTN","PRCFDCI1")
0^1^B5368338^B5189866
"RTN","PRCFDCI1",1,0)
PRCFDCI1 ;WISC@ALTOONA/CTB-APPROVE CHECKED IN INVOICE ;12/2/10  16:10
"RTN","PRCFDCI1",2,0)
V ;;5.1;IFCAP;**154**;Oct 20, 2000;Build 5
"RTN","PRCFDCI1",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRCFDCI1",4,0)
OUT K PRCFD("LOGIN"),PRCFDX("ED") D OUT^PRCFDE Q
"RTN","PRCFDCI1",5,0)
CERT ;CERTIFY ALREADY CHECKED IN DOCUMENT
"RTN","PRCFDCI1",6,0)
 S PRCFD("LOGIN")="",PRCFDX("ED")=""
"RTN","PRCFDCI1",7,0)
 S PRCF("X")="AS" D ^PRCFSITE Q:'%
"RTN","PRCFDCI1",8,0)
 S DIC("A")="Select/Barcode INVOICE TRACKING NUMBER: "
"RTN","PRCFDCI1",9,0)
C1 S DIC=421.5,DIC(0)="AEMNZ",DIC("S")="I $D(^(2)),+^(2)=10" D ^DIC K DIC G:Y<0 OUT
"RTN","PRCFDCI1",10,0)
 S (PRCF("CIDA"),DA)=+Y K PRCFD("RECERT")
"RTN","PRCFDCI1",11,0)
 I $$VIOLATE^PRCFDSOD(PRCF("CIDA"),DUZ) G OUT
"RTN","PRCFDCI1",12,0)
 W:$$CLSD1358^PRCFDE2($P(Y(0),U,7),1) !
"RTN","PRCFDCI1",13,0)
 S %A="Do you wish to edit any of the basic invoice information"
"RTN","PRCFDCI1",14,0)
 S %B="",%=2 D ^PRCFYN G OUT:%<0
"RTN","PRCFDCI1",15,0)
 I %=1 D PAT^PRCFDE W !! G:$D(PRCFD("^")) OUT
"RTN","PRCFDCI1",16,0)
 I $D(PRCF("CIDA")) D:'$D(PRCFD("RECERT")) DIE^PRCFDCI
"RTN","PRCFDCI1",17,0)
 S DIC("A")="Select/Barcode Next INVOICE TRACKING NUMBER: "
"RTN","PRCFDCI1",18,0)
 G OUT:$D(PRCFD("^")),C1
"RTN","PRCFDCI1",19,0)
VIEW ;VIEW INDIVIDUAL CERTIFIED INVOICE
"RTN","PRCFDCI1",20,0)
 S PRCF("X")="AS" D ^PRCFSITE G OUTV:'%
"RTN","PRCFDCI1",21,0)
 S DIC=421.5,DIC(0)="AEMNZ" D ^DIC G OUTV:Y<0
"RTN","PRCFDCI1",22,0)
 S DA=+Y,%H=$H D YX^%DTC S Y=$P(Y,"@")_"   "_$P($P(Y,"@",2),":",1,2) K %H
"RTN","PRCFDCI1",23,0)
 S X="" S:$D(IOM) $P(X,"-",IOM)=""
"RTN","PRCFDCI1",24,0)
 W @IOF,!,"INVOICE TRACKING LIST",?43,Y,"    ","PAGE 1",!,X
"RTN","PRCFDCI1",25,0)
 K X,DR S DIC="^PRCF(421.5,",DIQ(0)="C",PRCF("VIEW")="" D EN^DIQ K DIQ
"RTN","PRCFDCI1",26,0)
 D OUTV G VIEW
"RTN","PRCFDCI1",27,0)
OUTV K DIC,DA,DR,PRCF,X,Y Q
"RTN","PRCFDCI1",28,0)
CANC ;CANCEL CERTIFIED RECORD
"RTN","PRCFDCI1",29,0)
 ;CURRENT STATUS MUST BE LESS THAN TRANSACTION COMPLETE
"RTN","PRCFDCI1",30,0)
 S PRCF("X")="AS" D ^PRCFSITE Q:'%
"RTN","PRCFDCI1",31,0)
 S DIC=421.5,DIC(0)="AEMN",DIC("S")="I $S('$D(^(2)):1,$P(^(2),U)<20:1,1:0)"
"RTN","PRCFDCI1",32,0)
 D ^DIC K DIC I +Y<0 D OUTV Q
"RTN","PRCFDCI1",33,0)
 S %A="Are you SURE that you want to cancel this record",%B="",%=2
"RTN","PRCFDCI1",34,0)
 D ^PRCFYN I %<0 D OUTV Q
"RTN","PRCFDCI1",35,0)
 I %=2 D OUTV G CANC
"RTN","PRCFDCI1",36,0)
 S (DA,PRCF("CIDA"))=+Y D WAIT^PRCFYN S X=$S($D(^PRCF(421.5,DA,2))'["0":$P(^(2),"^",6,8),1:"") S:X]"" $P(^(2),"^",6,8)="^^" S $P(^(0),"^",14,15)="0^0"
"RTN","PRCFDCI1",37,0)
 I $P(X,"^",3)]"" K ^PRCF(421.5,"AC",$P(X,"^",3),DA)
"RTN","PRCFDCI1",38,0)
 S X=25 D STATUS^PRCFDE1
"RTN","PRCFDCI1",39,0)
 S %A="Do you wish to cancel another Certified Invoice record",%B="",%=1
"RTN","PRCFDCI1",40,0)
 W ! D ^PRCFYN I %'=1 D OUTV Q
"RTN","PRCFDCI1",41,0)
 D OUTV G CANC
"RTN","PRCFDE1")
0^2^B18830215^B17952536
"RTN","PRCFDE1",1,0)
PRCFDE1 ;WISC@ALTOONA/CTB-CONTINUATION OF PRCFDE ;12/2/10  16:13
"RTN","PRCFDE1",2,0)
V ;;5.1;IFCAP;**154**;Oct 20, 2000;Build 5
"RTN","PRCFDE1",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRCFDE1",4,0)
 K DIC S DIE="^PRCF(421.5,",DA=PRCF("CIDA")
"RTN","PRCFDE1",5,0)
 K %DT S X="T" D ^%DT S PRCFD("TODAY")=Y
"RTN","PRCFDE1",6,0)
 S DR="[PRCF CI VOUCHER AUDIT]" D ^DIE ;Q:$D(PRCFD("PAY"))
"RTN","PRCFDE1",7,0)
 D ENTER^PRCFDCIP
"RTN","PRCFDE1",8,0)
 K PRCF("VENDA"),PRCFD("DOI"),PRCFD("PODA"),PRCFD("DOP"),PRCFD("DIR")
"RTN","PRCFDE1",9,0)
 K PRCFD("INV TYPE"),PRCF("PTR"),PRCF("DAYS"),PRCF("NAME"),PRCF("X")
"RTN","PRCFDE1",10,0)
 K PRCF("PT"),PRCFD("DOD"),ZX
"RTN","PRCFDE1",11,0)
 I $D(Y) S X=$S($D(PRCFD("LOGIN")):10,1:0) D STATUS,NA G VEX
"RTN","PRCFDE1",12,0)
 D  I %<0 D NA S PRCFD("^")="" G VEX
"RTN","PRCFDE1",13,0)
 . S %A="Accept invoice for further processing",%B="",%=1 D ^PRCFYN
"RTN","PRCFDE1",14,0)
 . Q:%'=2  S %A="Return invoice to vendor",%B="",%=2 D ^PRCFYN
"RTN","PRCFDE1",15,0)
 . Q:%<0  S:%=1 %=3
"RTN","PRCFDE1",16,0)
 . Q
"RTN","PRCFDE1",17,0)
 I %=2 S X=$S($D(PRCFD("LOGIN")):10,1:0) D STATUS,NA G VEX
"RTN","PRCFDE1",18,0)
 I %=3 D  G VEX
"RTN","PRCFDE1",19,0)
 . S DR=25 D ^DIE I X D
"RTN","PRCFDE1",20,0)
 . . S DR="24//TODAY;23" D ^DIE,PRCFCHK^PRCFDCI,^PRCFDSUS
"RTN","PRCFDE1",21,0)
 . . Q
"RTN","PRCFDE1",22,0)
 . S X=3 D STATUS
"RTN","PRCFDE1",23,0)
 . Q
"RTN","PRCFDE1",24,0)
 G:$D(PRCFD("LOGIN"))&'$D(PRCFD("RECERT")) VEX
"RTN","PRCFDE1",25,0)
 I '$P(^PRCF(421.5,PRCF("CIDA"),0),"^",27) G PAYMENT
"RTN","PRCFDE1",26,0)
 S %A="Do you wish to forward this invoice for signature at this time",%B="",%=1 D ^PRCFYN
"RTN","PRCFDE1",27,0)
 I %'=1 S X=0,PRCF("%")=% D STATUS S X=" <No further action taken.>*" D MSG^PRCFQ S %=PRCF("%") K PRCF("%") S:%<0 PRCFD("^")="" G VEX
"RTN","PRCFDE1",28,0)
 S DIE="^PRCF(421.5,",DA=PRCF("CIDA"),DR="[PRCF CI BORROWER]" D ^DIE
"RTN","PRCFDE1",29,0)
 I $D(Y) S X=0 D STATUS,NA S PRCFD("^")="" G VEX
"RTN","PRCFDE1",30,0)
 S X="Please forward actual invoice to service for signature.*"
"RTN","PRCFDE1",31,0)
 D MSG^PRCFQ S X=5 D STATUS
"RTN","PRCFDE1",32,0)
VEX Q
"RTN","PRCFDE1",33,0)
 ;
"RTN","PRCFDE1",34,0)
PAYMENT S %A="Do you wish to process this item for payment now",%B="",%=1
"RTN","PRCFDE1",35,0)
 N PRCYESNO
"RTN","PRCFDE1",36,0)
 D ^PRCFYN S PRCYESNO=%
"RTN","PRCFDE1",37,0)
 I PRCYESNO=1,$$VIOLATE^PRCFDSOD(PRCF("CIDA"),DUZ) S X=10 D STATUS,NA G PAYX
"RTN","PRCFDE1",38,0)
 I PRCYESNO'=1 S X=10 S:%<0 PRCFD("^")="" D STATUS,NA G PAYX
"RTN","PRCFDE1",39,0)
 D DIE^PRCFDCI
"RTN","PRCFDE1",40,0)
PAYX Q
"RTN","PRCFDE1",41,0)
STATUS N X1,X2,DA,DIE,DR S X2=X
"RTN","PRCFDE1",42,0)
 S X1=$S($D(^PRCF(421.5,PRCF("CIDA"),2))#2:$P(^(2),"^"),1:"")
"RTN","PRCFDE1",43,0)
 I X1="" D ST S X="Status is set to '"_Y_"'.*" D MSG^PRCFQ G STATUSX
"RTN","PRCFDE1",44,0)
 I X=X1 D ST S X="Status of '"_Y_"' has not been changed.*" D MSG^PRCFQ Q
"RTN","PRCFDE1",45,0)
 S X=X1 D ST S $P(X1,"^",2)=Y,X=X2 D ST S $P(X2,"^",2)=Y
"RTN","PRCFDE1",46,0)
 S X="Status has been changed from '"_$P(X1,"^",2)_"'*" D MSG^PRCFQ
"RTN","PRCFDE1",47,0)
 S X="                          to '"_$P(X2,"^",2)_"'.*" D MSG^PRCFQ
"RTN","PRCFDE1",48,0)
 I $G(PRCNOPAT)=1 K PRCNOPAT W ?3,"This invoice needs a valid purchase order number.",!!
"RTN","PRCFDE1",49,0)
STATUSX S DA=PRCF("CIDA"),DR="50////^S X=+X2",DIE=421.5 D ^DIE
"RTN","PRCFDE1",50,0)
 Q
"RTN","PRCFDE1",51,0)
ST N DD,F S DD=421.5,F=50 D ^PRCFU1 Q
"RTN","PRCFDE1",52,0)
NA S X="  <No action taken.>*" D MSG^PRCFQ Q
"RTN","PRCFDE1",53,0)
OUT ;EXIT LINE
"RTN","PRCFDE1",54,0)
 D OUT^PRCFDE Q
"RTN","PRCFDE1",55,0)
EDIT ;EDIT EXISTING, INCOMPLETE INVOICE
"RTN","PRCFDE1",56,0)
 S PRCF("X")="AS" D ^PRCFSITE Q:'%
"RTN","PRCFDE1",57,0)
 S PRCFD("PAY")="",PRCFDX("ED")="",DIC=421.5,DIC(0)="AEMNZ"
"RTN","PRCFDE1",58,0)
 S DIC("S")="I $S('$D(^(2)):1,+^(2)>3:0,1:1),$D(^(1)),$P(^(1),""^"",2)=PRC(""SITE"")"
"RTN","PRCFDE1",59,0)
 D ^DIC K DIC I Y<0 K PRCFDX("ED") D OUT Q
"RTN","PRCFDE1",60,0)
 S PRCF("CIDA")=+Y D PAT^PRCFDE I $D(PRCFD("^")) D OUT Q
"RTN","PRCFDE1",61,0)
 S %A="Do you wish to edit another incomplete invoice",%B="",%=2
"RTN","PRCFDE1",62,0)
 D ^PRCFYN G EDIT:%=1 D OUT
"RTN","PRCFDE1",63,0)
 Q
"RTN","PRCFDE1",64,0)
 ;
"RTN","PRCFDE1",65,0)
 ;
"RTN","PRCFDE1",66,0)
PO ;INPUT TRANSFORM FOR FIELD 4.5 FILE 421.5
"RTN","PRCFDE1",67,0)
 ;I '$D(PRC("SITE")) S PRCFX=X,PRCF("X")="AS" D ^PRCFSITE S X=PRCFX K PRCFX Q:'%
"RTN","PRCFDE1",68,0)
 I X["." S X=$P(X,".")
"RTN","PRCFDE1",69,0)
 N DIC,%A,%B S DIC=442,DIC(0)="EM" D ^DIC K DIC
"RTN","PRCFDE1",70,0)
 I $D(DTOUT)!($D(DUOUT)) K DTOUT,DUOUT,X Q
"RTN","PRCFDE1",71,0)
 I Y>0 S ZY=Y,X=$P($G(^PRC(442,+Y,7)),U,2) I X<10!(X>43) G:X=45 CANC D QUES,^PRCFYN S Y=ZY K ZY I %'=1 K X Q
"RTN","PRCFDE1",72,0)
 I $G(PRCF("CIDA"))="" S PRCF("CIDA")=$G(DA)
"RTN","PRCFDE1",73,0)
 I Y>0 S X=$P(Y,"^",2),$P(^PRCF(421.5,PRCF("CIDA"),0),"^",7)=+Y,^PRCF(421.5,"E",+Y,PRCF("CIDA"))="" Q
"RTN","PRCFDE1",74,0)
 I Y<0,X="" K X Q
"RTN","PRCFDE1",75,0)
 S X=$S(X["-":PRC("SITE")_"-"_$P(X,"-",2),1:PRC("SITE")_"-"_X)
"RTN","PRCFDE1",76,0)
 S %A=$S(X]"":"PAT Reference Number "_X_" is not in Purchase Order File.",1:"No PAT number selected"),%A(0)="*!",%A(1)="OK to Continue",%B="",%=2 D ^PRCFYN I %'=1 K X Q
"RTN","PRCFDE1",77,0)
 I %=1 S PRCNOPAT=1
"RTN","PRCFDE1",78,0)
 N PZ
"RTN","PRCFDE1",79,0)
 S PZ=$P(^PRCF(421.5,PRCF("CIDA"),0),"^",7),$P(^(0),"^",7)=""
"RTN","PRCFDE1",80,0)
 I PZ]"" K ^PRCF(421.5,"E",PZ,PRCF("CIDA")) Q
"RTN","PRCFDE1",81,0)
 Q
"RTN","PRCFDE1",82,0)
QUES S X=+$G(^PRC(442,+Y,7))
"RTN","PRCFDE1",83,0)
 S X=$S(X="":"UNKNOWN",'$D(^PRCD(442.3,X,0)):"UNKNOWN",1:$P(^(0),"^"))
"RTN","PRCFDE1",84,0)
 S %A="Current Status on this PAT number is '"_X_"'.  OK to Continue"
"RTN","PRCFDE1",85,0)
 S %A(0)="*",%B="",%=2
"RTN","PRCFDE1",86,0)
 Q
"RTN","PRCFDE1",87,0)
CANC W !,$C(7),"Purchase Order status is: CANCELED ORDER.  Cannot proceed." S Y=ZY,%=-1 K ZY,X Q
"RTN","PRCFDE3")
0^3^B17499299^B17247666
"RTN","PRCFDE3",1,0)
PRCFDE3 ;(WASH ISC)/LKG -RECHARGE AN INVOICE ;12/2/10  16:12
"RTN","PRCFDE3",2,0)
V ;;5.1;IFCAP;**154**;Oct 20, 2000;Build 5
"RTN","PRCFDE3",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRCFDE3",4,0)
RECHARGE ;Send Invoice to Service for Certification
"RTN","PRCFDE3",5,0)
 S PRCF("X")="AS" D ^PRCFSITE G:'% RCHX
"RTN","PRCFDE3",6,0)
 S DIC=421.5,DIC(0)="AEMNZ"
"RTN","PRCFDE3",7,0)
 S DIC("S")="I $S("";5;10;""[("";""_$P(^(2),U)_"";""):1,1:0)"
"RTN","PRCFDE3",8,0)
 D ^DIC K DIC I Y<0 G RCHX
"RTN","PRCFDE3",9,0)
 S PRCF("CIDA")=+Y,PRCF("LOC")=$P(^PRCF(421.5,PRCF("CIDA"),2),U,4)
"RTN","PRCFDE3",10,0)
 L +^PRCF(421.5,PRCF("CIDA")):5 E  W *7,!,"Invoice is being edited by another user - Please try again later!" G RC2
"RTN","PRCFDE3",11,0)
 S DIR("A",1)="Invoice is currently in "_$S(PRCF("LOC")]"":PRCF("LOC"),1:"AN UNKNOWN LOCATION")_"."
"RTN","PRCFDE3",12,0)
 S DIR("A")="Do you want to recharge it to someone else"
"RTN","PRCFDE3",13,0)
 S DIR("B")="YES",DIR(0)="Y" D ^DIR K DIR
"RTN","PRCFDE3",14,0)
 I Y'=1 S X=" <No Action Taken>*" D MSG^PRCFQ G RCHX:$D(DIRUT),RC1
"RTN","PRCFDE3",15,0)
 S DIC=49,DIC(0)="AEMNZ",PRCF("LOC")=$P($G(^(+$P($G(^PRCF(421.5,PRCF("CIDA"),3,0)),U,3),0)),U),DIC("S")="I +Y'=PRCF(""LOC"")" D ^DIC K DIC
"RTN","PRCFDE3",16,0)
 I Y<0 S X=" <No Action Taken>*" D MSG^PRCFQ G RCHX:$D(DTOUT)!$D(DUOUT),RC1
"RTN","PRCFDE3",17,0)
 I $E($P(Y(0),"^",8),1,2)="04" S X="You may not RECHARGE a record to Fiscal.  You may only CHECK-IN invoices to Fiscal. <No Action Taken>*" D MSG^PRCFQ G RC1
"RTN","PRCFDE3",18,0)
 I '$$CHARGE(+Y,"",$P(Y(0),U,8)) S X=" <Recharge to Service Failed.>*" D MSG^PRCFQ G RC1
"RTN","PRCFDE3",19,0)
 S X="  Recharge Completed.*" D MSG^PRCFQ
"RTN","PRCFDE3",20,0)
 S X=5 D STATUS^PRCFDE1
"RTN","PRCFDE3",21,0)
RC1 L -^PRCF(421.5,PRCF("CIDA"))
"RTN","PRCFDE3",22,0)
RC2 K PRCF("CIDA"),PRCF("LOC")
"RTN","PRCFDE3",23,0)
 G:$D(DTOUT) RCHX
"RTN","PRCFDE3",24,0)
 S %A="Do you want to recharge another invoice",%B="",%=2 D ^PRCFYN
"RTN","PRCFDE3",25,0)
 G RECHARGE:%=1
"RTN","PRCFDE3",26,0)
RCHX L:$D(PRCF("CIDA")) -^PRCF(421.5,PRCF("CIDA")) K PRCF,DTOUT,DUOUT,DIRUT
"RTN","PRCFDE3",27,0)
 Q
"RTN","PRCFDE3",28,0)
LOGIN ;Check Certified Invoice into Fiscal
"RTN","PRCFDE3",29,0)
 W !!,"This option allows you to check in documents from the services.",!,"It sets the current location as Fiscal and shows the status as",!,"'Awaiting Voucher Audit Review'.",!!
"RTN","PRCFDE3",30,0)
 S %=1,%A="Do you wish to process each document as it is checked in",%B="If you answer 'YES', you will be prompted for the items necessary to"
"RTN","PRCFDE3",31,0)
 S %B(1)="complete the Voucher Audit information.",%B(2)="A 'NO' will merely check-in the document.",%B(3)="Use an '^' to Quit." D ^PRCFYN G:%<0 LOGINX
"RTN","PRCFDE3",32,0)
 S:%=1 PRCFD("ALL")=""
"RTN","PRCFDE3",33,0)
 S PRCF("X")="AS" D ^PRCFSITE G:'% LOGINX
"RTN","PRCFDE3",34,0)
 S DIC=49,DIC(0)="AEMNQZ",DIC("A")="Select Fiscal Section Accepting Receipt of Document: ",DIC("S")="I $E($P(^(0),""^"",8),1,2)=""04""" D ^DIC K DIC G:Y<0 LOGINX
"RTN","PRCFDE3",35,0)
 S PRCF("FISCAL")=+Y,PRCF("MC")=$P(Y(0),U,8)
"RTN","PRCFDE3",36,0)
 S DIC("A")="Select/Barcode INVOICE TRACKING NUMBER: "
"RTN","PRCFDE3",37,0)
NXT S DIC=421.5,DIC(0)="AEMNZ",DIC("S")="I $D(^(2)),+^(2)=5"
"RTN","PRCFDE3",38,0)
 D ^DIC K DIC G:Y<0 LOGINX S PRCF("CIDA")=+Y
"RTN","PRCFDE3",39,0)
 I $$VIOLATE^PRCFDSOD(PRCF("CIDA"),DUZ) G NXTX
"RTN","PRCFDE3",40,0)
 L +^PRCF(421.5,PRCF("CIDA")):5 E  W *7,!,"Invoice is being edited by another user. - Please again try later!" G NXTX
"RTN","PRCFDE3",41,0)
 W:$$CLSD1358^PRCFDE2($P(Y(0),U,7),1) !
"RTN","PRCFDE3",42,0)
 I '$$CHARGE(PRCF("FISCAL"),10,PRCF("MC")) S X=" <Login Failed.>*" D MSG^PRCFQ G NXT1
"RTN","PRCFDE3",43,0)
 I '$D(DTOUT),$D(PRCFD("ALL")) D DIE^PRCFDCI G NXT1
"RTN","PRCFDE3",44,0)
 S X="Login completed.*" D MSG^PRCFQ
"RTN","PRCFDE3",45,0)
NXT1 L -^PRCF(421.5,PRCF("CIDA")) G:$D(DTOUT) LOGINX
"RTN","PRCFDE3",46,0)
NXTX S DIC("A")="Select/Barcode Next INVOICE TRACKING NUMBER: "
"RTN","PRCFDE3",47,0)
 G NXT
"RTN","PRCFDE3",48,0)
LOGINX K DTOUT,DUOUT D OUT^PRCFDE
"RTN","PRCFDE3",49,0)
 Q
"RTN","PRCFDE3",50,0)
CHARGE(PRCA,PRCB,PRCC) ;Assign to Certifying Service or Fiscal
"RTN","PRCFDE3",51,0)
 ; PRCA Service's Internal Entry #, PRCB Invoice Status, PRCC Service's Mail Code
"RTN","PRCFDE3",52,0)
 K DD,DO S DIC("P")=$P(^DD(421.5,70,0),U,2),DIC(0)="XL",DLAYGO=421.51
"RTN","PRCFDE3",53,0)
 S DA(1)=PRCF("CIDA"),DIC="^PRCF(421.5,"_DA(1)_",3,"
"RTN","PRCFDE3",54,0)
 S X=PRCA D FILE^DICN K DLAYGO I +Y<1 K DIC,DA Q 0
"RTN","PRCFDE3",55,0)
 S DA=+Y,DA(1)=PRCF("CIDA"),DIE=DIC K DIC D NOW^PRCFQ K X,Y,%X
"RTN","PRCFDE3",56,0)
 S DR="1////^S X=%;2////^S X=DUZ" D ^DIE K DIE,DR,DA
"RTN","PRCFDE3",57,0)
 S DIE="^PRCF(421.5,",DA=PRCF("CIDA"),PRCC=$E(PRCC,1,2)
"RTN","PRCFDE3",58,0)
 S DR=$S(PRCB'="":"50////^S X=PRCB;",1:"")_$S(PRCC="04":"58////^S X=$P(DT,""."");57///@",1:"58///@;57///T+7;57R")
"RTN","PRCFDE3",59,0)
 D ^DIE K DIE,DR,DA I $E($G(IOST),1,2)="C-",PRCC'="04" W !
"RTN","PRCFDE3",60,0)
 Q 1
"RTN","PRCFDES1")
0^10^B9924721^B8692790
"RTN","PRCFDES1",1,0)
PRCFDES1 ;WISC/LEM-ESIG MAINTENANCE ROUTINE ;1/5/11  16:28
"RTN","PRCFDES1",2,0)
V ;;5.1;IFCAP;**154**;Oct 20, 2000;Build 5
"RTN","PRCFDES1",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRCFDES1",4,0)
 ;ROUTINE FOR MAINTAINING FIELD 61 (CERTIFIED BY ELEC SIG), FILE 421.5
"RTN","PRCFDES1",5,0)
DECODE(LEVEL0) ;Extrinsic Function to return hashed electronic sig to readable form.
"RTN","PRCFDES1",6,0)
 ;returns "" if unsuccessful
"RTN","PRCFDES1",7,0)
 NEW RECORD2,RECORD21,VERSION,PERSON,SIG,CHECKSUM
"RTN","PRCFDES1",8,0)
 ;get record and check version
"RTN","PRCFDES1",9,0)
 S RECORD2=$G(^PRCF(421.5,LEVEL0,2)) I RECORD2="" QUIT ""
"RTN","PRCFDES1",10,0)
 S RECORD21=$G(^PRCF(421.5,LEVEL0,2.1))
"RTN","PRCFDES1",11,0)
 S VERSION=$P(RECORD21,"^",1)
"RTN","PRCFDES1",12,0)
 S PERSON=+$P(RECORD2,"^",10)
"RTN","PRCFDES1",13,0)
 I VERSION'="",VERSION'=1 Q ""
"RTN","PRCFDES1",14,0)
 S SIG=$P(RECORD2,"^",12)
"RTN","PRCFDES1",15,0)
D1 ;decode e signature for version 1
"RTN","PRCFDES1",16,0)
 S RECORD=$G(^PRCF(421.5,LEVEL0,0))
"RTN","PRCFDES1",17,0)
 S RECORD1=$G(^PRCF(421.5,LEVEL0,1))
"RTN","PRCFDES1",18,0)
 S CHECKSUM=$$SUM^PRCUESIG(LEVEL0_"^"_$$STRING(RECORD,RECORD1))
"RTN","PRCFDES1",19,0)
 QUIT $$DECODE^PRCUESIG(SIG,PERSON,CHECKSUM)
"RTN","PRCFDES1",20,0)
ENCODE(LEVEL0,USERNUM,Y) ;Encode e signature for version 1 only
"RTN","PRCFDES1",21,0)
 ;Parameter passing entry point
"RTN","PRCFDES1",22,0)
 NEW SIGBLOCK,CHECKSUM,OLDUSER
"RTN","PRCFDES1",23,0)
 NEW RECORD,RECORD1,RECORD2,RECORD21
"RTN","PRCFDES1",24,0)
 ;get record
"RTN","PRCFDES1",25,0)
 S USERNUM=+USERNUM
"RTN","PRCFDES1",26,0)
 I USERNUM=0 S Y=-3 QUIT  ;-3 no user num available
"RTN","PRCFDES1",27,0)
 S SIGBLOCK=$P($G(^VA(200,USERNUM,20)),"^",2)
"RTN","PRCFDES1",28,0)
 I SIGBLOCK="" S Y=-2 QUIT  ;-2 no sigblock in file 200
"RTN","PRCFDES1",29,0)
 S RECORD=$G(^PRCF(421.5,LEVEL0,0))
"RTN","PRCFDES1",30,0)
 S RECORD1=$G(^PRCF(421.5,LEVEL0,1))
"RTN","PRCFDES1",31,0)
 S RECORD2=$G(^PRCF(421.5,LEVEL0,2))
"RTN","PRCFDES1",32,0)
 S RECORD21=$G(^PRCF(421.5,LEVEL0,2.1))
"RTN","PRCFDES1",33,0)
 I RECORD="" S Y=-1 QUIT  ;-1 no transaction record
"RTN","PRCFDES1",34,0)
 I $P(RECORD2,"^",12)'="" S Y=-4 QUIT  ;-4 cannot re-sign record
"RTN","PRCFDES1",35,0)
 S OLDUSER=+$P(RECORD2,"^",10)
"RTN","PRCFDES1",36,0)
 I OLDUSER=0 S $P(RECORD2,"^",10)=USERNUM
"RTN","PRCFDES1",37,0)
 I OLDUSER>0 S USERNUM=OLDUSER
"RTN","PRCFDES1",38,0)
 S:$P(RECORD21,"^",5)="" $P(RECORD21,"^",5)=$$NOW^PRCUESIG
"RTN","PRCFDES1",39,0)
 S CHECKSUM=$$SUM^PRCUESIG(LEVEL0_"^"_$$STRING(RECORD,RECORD1))
"RTN","PRCFDES1",40,0)
 S $P(RECORD2,"^",12)=$$ENCODE^PRCUESIG(SIGBLOCK,USERNUM,CHECKSUM)
"RTN","PRCFDES1",41,0)
 S $P(RECORD21,"^",1,2)="1^"_$$SUM^PRCUESIG(SIGBLOCK)
"RTN","PRCFDES1",42,0)
 S ^PRCF(421.5,LEVEL0,2)=RECORD2
"RTN","PRCFDES1",43,0)
 S ^PRCF(421.5,LEVEL0,2.1)=RECORD21
"RTN","PRCFDES1",44,0)
 N PRCDATE S PRCDATE=$P(RECORD21,U,5) I PRCDATE'="",LEVEL0>0 S ^PRCF(421.5,"AF",PRCDATE,LEVEL0)=""
"RTN","PRCFDES1",45,0)
 S Y=1 QUIT
"RTN","PRCFDES1",46,0)
REMOVE(LEVEL0) ;Entry point to remove e signature from record
"RTN","PRCFDES1",47,0)
 ;NOT an extrinsic function
"RTN","PRCFDES1",48,0)
 NEW RECORD2,RECORD21,I
"RTN","PRCFDES1",49,0)
 S RECORD2=$G(^PRCF(421.5,LEVEL0,2))
"RTN","PRCFDES1",50,0)
 S RECORD21=$G(^PRCF(421.5,LEVEL0,2.1))
"RTN","PRCFDES1",51,0)
 F I=10,12 S $P(RECORD2,"^",I)=""
"RTN","PRCFDES1",52,0)
 N PRCDATE S PRCDATE=$P(RECORD21,U,5) I PRCDATE'="",LEVEL0>0 K ^PRCF(421.5,"AF",PRCDATE,LEVEL0)
"RTN","PRCFDES1",53,0)
 F I=2,5 S $P(RECORD21,"^",I)=""
"RTN","PRCFDES1",54,0)
 S ^PRCF(421.5,LEVEL0,2)=RECORD2
"RTN","PRCFDES1",55,0)
 S ^PRCF(421.5,LEVEL0,2.1)=RECORD21
"RTN","PRCFDES1",56,0)
 QUIT
"RTN","PRCFDES1",57,0)
VERIFY(LEVEL0)      ;extrinsic function to verify version 1 signature.  Returns 1 if valid, 0 if not valid
"RTN","PRCFDES1",58,0)
 NEW RECORD21,VERSION,SIGBLOCK
"RTN","PRCFDES1",59,0)
 ;get record variables
"RTN","PRCFDES1",60,0)
 S RECORD21=$G(^PRCF(421.5,LEVEL0,2.1))
"RTN","PRCFDES1",61,0)
 S VERSION=$P(RECORD21,"^",1),SIGBLOCK=$P(RECORD21,"^",2)
"RTN","PRCFDES1",62,0)
 I VERSION_SIGBLOCK="" QUIT 1
"RTN","PRCFDES1",63,0)
 QUIT ($$SUM^PRCUESIG($$DECODE(LEVEL0))=SIGBLOCK)
"RTN","PRCFDES1",64,0)
STRING(X,X1)          ;Build String of critical fields
"RTN","PRCFDES1",65,0)
 NEW RECORD,RECORD1
"RTN","PRCFDES1",66,0)
 Q $P(X,"^",1)_"^"_$P(X,"^",3)_"^"_$P(X,"^",4)_"^"_$P(X,"^",8)_"^"_$P(X,"^",15)_"^"_$P(X1,"^",3)
"RTN","PRCFDSOD")
0^4^B9304570^n/a
"RTN","PRCFDSOD",1,0)
PRCFDSOD ;SSOI&TFO/LKG - Invoice Tracking Clerk Separation of Duties;11/26/10  13:25 ;12/2/10  16:00
"RTN","PRCFDSOD",2,0)
 ;;5.1;IFCAP;**154**;Oct 20, 2000;Build 5
"RTN","PRCFDSOD",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRCFDSOD",4,0)
 ;Extrinsic function testing if user may certify invoice against 1358
"RTN","PRCFDSOD",5,0)
 ;for payment
"RTN","PRCFDSOD",6,0)
 ;
"RTN","PRCFDSOD",7,0)
 ;Input variables:
"RTN","PRCFDSOD",8,0)
 ;PRCIEN - Internal Entry Number of file #421.5 entry
"RTN","PRCFDSOD",9,0)
 ;PRCDUZ - Internal Entry Number of current user in file #200
"RTN","PRCFDSOD",10,0)
 ;Returns '1' if user not permitted to certify or error in call to function
"RTN","PRCFDSOD",11,0)
 ;Returns '0' if user permitted to certify and no error in call
"RTN","PRCFDSOD",12,0)
VIOLATE(PRCIEN,PRCDUZ) ;Checks if user certifying invoice would be violation
"RTN","PRCFDSOD",13,0)
 N PRCARR,PRCPO,PRCRES,PRCVAL,PRCVIOL
"RTN","PRCFDSOD",14,0)
 I $G(PRCIEN)'>0!($G(PRCDUZ)'>0) S PRCVIOL=1,PRCARR(1)="Call to function checking for violation not set up correctly.",PRCARR(1,"F")="!!?5",PRCARR(2)="Report error to IFCAP customer support.",PRCARR(2,"F")="!?5" D EN^DDIOL(.PRCARR) G VIOLX
"RTN","PRCFDSOD",15,0)
 S PRCVIOL=0
"RTN","PRCFDSOD",16,0)
 S PRCPO=$P($G(^PRCF(421.5,PRCIEN,0)),U,7)_","
"RTN","PRCFDSOD",17,0)
 I PRCPO="," D  G VIOLX
"RTN","PRCFDSOD",18,0)
 . S PRCVIOL=1,PRCARR(1)="File #421.5 entry is missing pointer to file #442 and corrupt.",PRCARR(1,"F")="!!?5",PRCARR(2)="Invoice cannot be certified for payment without entry correction.",PRCARR(2,"F")="!?5"
"RTN","PRCFDSOD",19,0)
 . D EN^DDIOL(.PRCARR)
"RTN","PRCFDSOD",20,0)
 D GETS^DIQ(442,PRCPO,".01;.02","E","PRCVAL")
"RTN","PRCFDSOD",21,0)
 G VIOLX:$G(PRCVAL(442,PRCPO,.02,"E"))'["1358"
"RTN","PRCFDSOD",22,0)
 S PRCPO=$G(PRCVAL(442,PRCPO,.01,"E"))
"RTN","PRCFDSOD",23,0)
 D UOKCERT^PRCEMOA(.PRCRES,PRCPO,PRCDUZ)
"RTN","PRCFDSOD",24,0)
 S:'PRCRES PRCVIOL=1
"RTN","PRCFDSOD",25,0)
 I $P(PRCRES,U)="E" S PRCARR(1)="Error: "_$P(PRCRES,U,2),PRCARR(1,"F")="!!?2",PRCARR(2)="You cannot certify this invoice for payment without first addressing error.",PRCARR(2,"F")="!?2" D EN^DDIOL(.PRCARR)
"RTN","PRCFDSOD",26,0)
 I $P(PRCRES,U)=0 S PRCARR(1)=$P(PRCRES,U,2),PRCARR(1,"F")="!!?2",PRCARR(2)="Due to segregation of duties, you cannot also certify an invoice for payment.",PRCARR(2,"F")="!?2" D EN^DDIOL(.PRCARR)
"RTN","PRCFDSOD",27,0)
VIOLX Q PRCVIOL
"RTN","PRCFSDR")
0^5^B93033801^n/a
"RTN","PRCFSDR",1,0)
PRCFSDR ;WOIFO/SAB/LKG - IFCAP 1358 SEGREGATION OF DUTIES REPORT ;12/29/10  10:48
"RTN","PRCFSDR",2,0)
 ;;5.1;IFCAP;**154**;OCT 20, 2000;Build 5
"RTN","PRCFSDR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRCFSDR",4,0)
 ;
"RTN","PRCFSDR",5,0)
 ; IAs
"RTN","PRCFSDR",6,0)
 ;  #10003  DD^%DT
"RTN","PRCFSDR",7,0)
 ;  #10000  NOW^%DTC
"RTN","PRCFSDR",8,0)
 ;  #10086  %ZIS, HOME^%ZIS
"RTN","PRCFSDR",9,0)
 ;  #10089  %ZISC
"RTN","PRCFSDR",10,0)
 ;  #10063  %ZTLOAD, $$S^%ZTLOAD
"RTN","PRCFSDR",11,0)
 ;  #2056   $$GET1^DIQ
"RTN","PRCFSDR",12,0)
 ;  #10026  DIR
"RTN","PRCFSDR",13,0)
 ;  #5574   $$EV1358^PRCEMOA
"RTN","PRCFSDR",14,0)
 ;  #10103  $$FMADD^XLFDT, $$FMTE^XLFDT
"RTN","PRCFSDR",15,0)
 ;  #5582   ^PRC(411,
"RTN","PRCFSDR",16,0)
 ;
"RTN","PRCFSDR",17,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,PRCALL,PRCDT1,PRCDT2,%ZIS,POP,X,Y
"RTN","PRCFSDR",18,0)
 ;
"RTN","PRCFSDR",19,0)
 ; ask from date
"RTN","PRCFSDR",20,0)
 S DIR(0)="D^::EX",DIR("A")="From Date"
"RTN","PRCFSDR",21,0)
 ;   default from date is first day of previous month
"RTN","PRCFSDR",22,0)
 S DIR("B")=$$FMTE^XLFDT($E($$FMADD^XLFDT($E(DT,1,5)_"01",-1),1,5)_"01")
"RTN","PRCFSDR",23,0)
 D ^DIR K DIR G:$D(DIRUT) EXIT
"RTN","PRCFSDR",24,0)
 S PRCDT1=Y
"RTN","PRCFSDR",25,0)
 ;
"RTN","PRCFSDR",26,0)
 ; ask to date
"RTN","PRCFSDR",27,0)
 S DIR(0)="DA^"_PRCDT1_"::EX",DIR("A")="To Date: "
"RTN","PRCFSDR",28,0)
 ;   default to date is last day of specified month
"RTN","PRCFSDR",29,0)
 S X=PRCDT1 D DAYS
"RTN","PRCFSDR",30,0)
 S DIR("B")=$$FMTE^XLFDT($E(PRCDT1,1,5)_X)
"RTN","PRCFSDR",31,0)
 D ^DIR K DIR G:$D(DIRUT) EXIT
"RTN","PRCFSDR",32,0)
 S:$P(Y,".",2)="" $P(Y,".",2)="235959"
"RTN","PRCFSDR",33,0)
 S PRCDT2=Y
"RTN","PRCFSDR",34,0)
 ;
"RTN","PRCFSDR",35,0)
 ; ask if all stations
"RTN","PRCFSDR",36,0)
 S DIR(0)="Y",DIR("A")="For all stations",DIR("B")="YES"
"RTN","PRCFSDR",37,0)
 D ^DIR K DIR G:$G(DIRUT) EXIT
"RTN","PRCFSDR",38,0)
 S PRCSTALL=Y
"RTN","PRCFSDR",39,0)
 S PRCSTN=""
"RTN","PRCFSDR",40,0)
 ; if not all stations ask station
"RTN","PRCFSDR",41,0)
 I 'PRCSTALL D  G:PRCSTN="" EXIT
"RTN","PRCFSDR",42,0)
 . S PRCSTN=""
"RTN","PRCFSDR",43,0)
 . S DIC="^PRC(411,",DIC(0)="AQEM"
"RTN","PRCFSDR",44,0)
 . D ^DIC Q:Y<0
"RTN","PRCFSDR",45,0)
 . S PRCSTN=$P(Y,U,2)
"RTN","PRCFSDR",46,0)
 ;
"RTN","PRCFSDR",47,0)
 ; ask if violations only
"RTN","PRCFSDR",48,0)
 S DIR(0)="Y",DIR("A")="Only list 1358s with a violation (Y/N)"
"RTN","PRCFSDR",49,0)
 S DIR("B")="YES"
"RTN","PRCFSDR",50,0)
 D ^DIR K DIR G:$D(DIRUT) EXIT
"RTN","PRCFSDR",51,0)
 S PRCORV=Y
"RTN","PRCFSDR",52,0)
 ;
"RTN","PRCFSDR",53,0)
 ; ask device
"RTN","PRCFSDR",54,0)
 S %ZIS="Q" D ^%ZIS G:POP EXIT
"RTN","PRCFSDR",55,0)
 I $D(IO("Q")) D  G EXIT
"RTN","PRCFSDR",56,0)
 . N ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTUCI,ZTCPU,ZTPRI,ZTSAVE,ZTKIL,ZTSYNC,ZTSK
"RTN","PRCFSDR",57,0)
 . S ZTRTN="QEN^PRCFSDR",ZTDESC="IFCAP 1358 Segregation of Duties Report"
"RTN","PRCFSDR",58,0)
 . F PRCX="PRCDT*","PRCORV","PRCSTALL","PRCSTN" S ZTSAVE(PRCX)=""
"RTN","PRCFSDR",59,0)
 . D ^%ZTLOAD,HOME^%ZIS
"RTN","PRCFSDR",60,0)
 ;
"RTN","PRCFSDR",61,0)
QEN ; queued entry
"RTN","PRCFSDR",62,0)
 U IO
"RTN","PRCFSDR",63,0)
 ;
"RTN","PRCFSDR",64,0)
GATHER ; collect and sort data
"RTN","PRCFSDR",65,0)
 N %
"RTN","PRCFSDR",66,0)
 K ^TMP($J)
"RTN","PRCFSDR",67,0)
 ;
"RTN","PRCFSDR",68,0)
 S PRCC("CER")=0 ; initialize count of certifications
"RTN","PRCFSDR",69,0)
 S PRCC("OBL")=0 ; initialize count of obligations
"RTN","PRCFSDR",70,0)
 S PRCC("VIO")=0 ; initialize count of obligations with a violation
"RTN","PRCFSDR",71,0)
 ;
"RTN","PRCFSDR",72,0)
 ; find invoice certification events during specified period
"RTN","PRCFSDR",73,0)
 ; Loop through Invoice Tracking file #421.5 using "AF" index on CERTIFIED BY SIG DATE/TIME (#61.9)
"RTN","PRCFSDR",74,0)
 S PRCSDT=PRCDT1-.000001
"RTN","PRCFSDR",75,0)
 F  S PRCSDT=$O(^PRCF(421.5,"AF",PRCSDT)) Q:PRCSDT=""!(PRCSDT>PRCDT2)  D
"RTN","PRCFSDR",76,0)
 . S PRCDA=0
"RTN","PRCFSDR",77,0)
 . F  S PRCDA=$O(^PRCF(421.5,"AF",PRCSDT,PRCDA)) Q:'PRCDA  D
"RTN","PRCFSDR",78,0)
 . . N PRCNOD0,PRCNOD1,PRCNOD2,PRCNOD21,PRCPO,PRCDT,PRCSTB
"RTN","PRCFSDR",79,0)
 . . S PRCNOD0=$G(^PRCF(421.5,PRCDA,0)),PRCNOD1=$G(^(1)),PRCNOD2=$G(^(2)),PRCNOD21=$G(^(2.1))
"RTN","PRCFSDR",80,0)
 . . S PRCPO=$P(PRCNOD0,U,7) Q:PRCPO'>0  Q:$$GET1^DIQ(442,PRCPO_",",.02)'["1358"
"RTN","PRCFSDR",81,0)
 . . Q:$P(PRCNOD2,U,10)'>0  S PRCDT=$P(PRCNOD21,U,5) Q:PRCDT<PRCDT1  Q:PRCDT>PRCDT2
"RTN","PRCFSDR",82,0)
 . . S PRCOB=$P(PRCNOD1,U,3) ; full 1358 obligation number
"RTN","PRCFSDR",83,0)
 . . ;
"RTN","PRCFSDR",84,0)
 . . ; if report not for all stations, skip invoice certification from different station
"RTN","PRCFSDR",85,0)
 . . I 'PRCSTALL D  I PRCSTB'=PRCSTN Q
"RTN","PRCFSDR",86,0)
 . . . S PRCSTB=$$GET1^DIQ(442,PRCPO_",",31) S:PRCSTB="" PRCSTB=$P(PRCNOD1,U,2)
"RTN","PRCFSDR",87,0)
 . . . I PRCSTB="" S PRCSTB=+PRCOB
"RTN","PRCFSDR",88,0)
 . . ;
"RTN","PRCFSDR",89,0)
 . . ; add event to ^TMP($J,1358 #,date/time,invoice #)=certifier
"RTN","PRCFSDR",90,0)
 . . S ^TMP($J,PRCOB,PRCDT,$P(PRCNOD0,U))=$P(PRCNOD2,U,10)
"RTN","PRCFSDR",91,0)
 . . S PRCC("CER")=PRCC("CER")+1 ; incr count of certifications
"RTN","PRCFSDR",92,0)
 ;
"RTN","PRCFSDR",93,0)
 ; loop thru obligations and add IFCAP events and actors to ^TMP
"RTN","PRCFSDR",94,0)
 S PRCOB="" F  S PRCOB=$O(^TMP($J,PRCOB)) Q:PRCOB=""  D
"RTN","PRCFSDR",95,0)
 . S PRCC("OBL")=PRCC("OBL")+1 ; incr count of 1358s
"RTN","PRCFSDR",96,0)
 . N PRCARRAY,PRCX
"RTN","PRCFSDR",97,0)
 . S PRCX=$$EV1358^PRCEMOA(PRCOB,"PRCARRAY")
"RTN","PRCFSDR",98,0)
 . I PRCX'=1 S ^TMP($J,PRCOB)=PRCX Q  ; error reported by the API
"RTN","PRCFSDR",99,0)
 . S PRCDT=""
"RTN","PRCFSDR",100,0)
 . F  S PRCDT=$O(PRCARRAY(PRCDT)) Q:PRCDT=""!($P(PRCDT,".")>PRCDT2)  D
"RTN","PRCFSDR",101,0)
 . . S PRCEV="" F  S PRCEV=$O(PRCARRAY(PRCDT,PRCEV)) Q:PRCEV=""  D
"RTN","PRCFSDR",102,0)
 . . . S ^TMP($J,PRCOB,PRCDT,PRCEV)=PRCARRAY(PRCDT,PRCEV)
"RTN","PRCFSDR",103,0)
 ;
"RTN","PRCFSDR",104,0)
 ; loop thru obligations and add segregation of duty violations to ^TMP
"RTN","PRCFSDR",105,0)
 S PRCOB="" F  S PRCOB=$O(^TMP($J,PRCOB)) Q:PRCOB=""  D
"RTN","PRCFSDR",106,0)
 . Q:$P($G(^TMP($J,PRCOB)),U)="E"  ; skip because missing IFCAP events
"RTN","PRCFSDR",107,0)
 . ;
"RTN","PRCFSDR",108,0)
 . N PRCAPP,PRCOBL,PRCREQ,PRCVIO
"RTN","PRCFSDR",109,0)
 . S PRCVIO=0 ; init violation flag for the 1358
"RTN","PRCFSDR",110,0)
 . ; loop thru date/time stamps
"RTN","PRCFSDR",111,0)
 . S PRCDT="" F  S PRCDT=$O(^TMP($J,PRCOB,PRCDT)) Q:PRCDT=""  D
"RTN","PRCFSDR",112,0)
 . . ; loop thru events
"RTN","PRCFSDR",113,0)
 . . S PRCEV="" F  S PRCEV=$O(^TMP($J,PRCOB,PRCDT,PRCEV)) Q:PRCEV=""  D
"RTN","PRCFSDR",114,0)
 . . . N PRCX
"RTN","PRCFSDR",115,0)
 . . . S PRCX=$G(^TMP($J,PRCOB,PRCDT,PRCEV))
"RTN","PRCFSDR",116,0)
 . . . ; process IFCAP certification event
"RTN","PRCFSDR",117,0)
 . . . I PRCEV D
"RTN","PRCFSDR",118,0)
 . . . . ; check fo violation
"RTN","PRCFSDR",119,0)
 . . . . I PRCX,$D(PRCREQ(PRCX)) S PRCVIO=1,^TMP($J,PRCOB,PRCDT,PRCEV,"V1")="User previously acted as requestor on a prior 1358 event."
"RTN","PRCFSDR",120,0)
 . . . . I PRCX,$D(PRCAPP(PRCX)) S PRCVIO=1,^TMP($J,PRCOB,PRCDT,PRCEV,"V2")="User previously acted as approver on a prior 1358 event."
"RTN","PRCFSDR",121,0)
 . . . . I PRCX,$D(PRCOBL(PRCX)) S PRCVIO=1,^TMP($J,PRCOB,PRCDT,PRCEV,"V3")="User previously acted as obligator on a prior 1358 event."
"RTN","PRCFSDR",122,0)
 . . . ; process an IFCAP event
"RTN","PRCFSDR",123,0)
 . . . I "^O^A^"[(U_PRCEV_U) D
"RTN","PRCFSDR",124,0)
 . . . . ; save IFCAP actors in lists
"RTN","PRCFSDR",125,0)
 . . . . I $P(PRCX,U,1) S PRCREQ($P(PRCX,U,1))=""
"RTN","PRCFSDR",126,0)
 . . . . I $P(PRCX,U,2) S PRCAPP($P(PRCX,U,2))=""
"RTN","PRCFSDR",127,0)
 . . . . I $P(PRCX,U,3) S PRCOBL($P(PRCX,U,3))=""
"RTN","PRCFSDR",128,0)
 . . . . ; check for violation on IFCAP event
"RTN","PRCFSDR",129,0)
 . . . . I $P(PRCX,U,2)=$P(PRCX,U,1) S PRCVIO=1,^TMP($J,PRCOB,PRCDT,PRCEV,"V1")="Approver previously acted as requestor on this transaction."
"RTN","PRCFSDR",130,0)
 . . . . I $P(PRCX,U,3)=$P(PRCX,U,1) S PRCVIO=1,^TMP($J,PRCOB,PRCDT,PRCEV,"V2")="Obligator previously acted as requester on this transaction."
"RTN","PRCFSDR",131,0)
 . . . . I $P(PRCX,U,3)=$P(PRCX,U,2) S PRCVIO=1,^TMP($J,PRCOB,PRCDT,PRCEV,"V3")="Obligator previously acted as approver on this transaction."
"RTN","PRCFSDR",132,0)
 . ;
"RTN","PRCFSDR",133,0)
 . I PRCVIO D  ; violation was found
"RTN","PRCFSDR",134,0)
 . . S ^TMP($J,PRCOB)="V" ; flag 1358
"RTN","PRCFSDR",135,0)
 . . S PRCC("VIO")=PRCC("VIO")+1 ; incr count of 1358 with violation
"RTN","PRCFSDR",136,0)
 ;
"RTN","PRCFSDR",137,0)
PRINT ; report data
"RTN","PRCFSDR",138,0)
 S (PRCQUIT,PRCPG)=0 D NOW^%DTC S Y=% D DD^%DT S PRCDTR=Y
"RTN","PRCFSDR",139,0)
 K PRCDL
"RTN","PRCFSDR",140,0)
 S PRCDL="",$P(PRCDL,"-",80)=""
"RTN","PRCFSDR",141,0)
 S PRCDL("CH")=$E(PRCDL,1,10)_" "_$E(PRCDL,1,14)_" "_$E(PRCDL,1,11)_" "_$E(PRCDL,1,9)_"  "_$E(PRCDL,1,30)
"RTN","PRCFSDR",142,0)
 ;
"RTN","PRCFSDR",143,0)
 ; build page header text for selection criteria
"RTN","PRCFSDR",144,0)
 K PRCHDT
"RTN","PRCFSDR",145,0)
 S PRCHDT(1)="  Including Certifications from "
"RTN","PRCFSDR",146,0)
 S PRCHDT(1)=PRCHDT(1)_$$FMTE^XLFDT(PRCDT1)_" to "_$$FMTE^XLFDT(PRCDT2)
"RTN","PRCFSDR",147,0)
 S PRCHDT(1)=PRCHDT(1)_" for "
"RTN","PRCFSDR",148,0)
 S PRCHDT(1)=PRCHDT(1)_$S(PRCSTALL:"all stations",1:"Station "_PRCSTN)
"RTN","PRCFSDR",149,0)
 S:PRCORV PRCHDT(2)="  Only 1358s with a segregation of duty violation shown."
"RTN","PRCFSDR",150,0)
 ;
"RTN","PRCFSDR",151,0)
 D HD
"RTN","PRCFSDR",152,0)
 ;
"RTN","PRCFSDR",153,0)
 ; loop thru obligations
"RTN","PRCFSDR",154,0)
 S PRCOB="" F  S PRCOB=$O(^TMP($J,PRCOB)) Q:PRCOB=""  D  Q:PRCQUIT
"RTN","PRCFSDR",155,0)
 . N PRCERR,PRCEVFP,PRCOBX,PRCVIO
"RTN","PRCFSDR",156,0)
 . S PRCOBX=$G(^TMP($J,PRCOB))
"RTN","PRCFSDR",157,0)
 . S PRCERR=$S($P(PRCOBX,U)="E":1,1:0) ; set true if error from IFCAP
"RTN","PRCFSDR",158,0)
 . S PRCVIO=$S($P(PRCOBX,U)="V":1,1:0) ; set true if violation was found
"RTN","PRCFSDR",159,0)
 . ;
"RTN","PRCFSDR",160,0)
 . ; if only reporting violations then skip 1358 when no error/violation
"RTN","PRCFSDR",161,0)
 . I PRCORV,'PRCERR,'PRCVIO Q
"RTN","PRCFSDR",162,0)
 . ;
"RTN","PRCFSDR",163,0)
 . ; check for page break
"RTN","PRCFSDR",164,0)
 . I $Y+7>IOSL D HD Q:PRCQUIT
"RTN","PRCFSDR",165,0)
 . ; 
"RTN","PRCFSDR",166,0)
 . W !,PRCDL("CH")
"RTN","PRCFSDR",167,0)
 . W !,PRCOB
"RTN","PRCFSDR",168,0)
 . ;
"RTN","PRCFSDR",169,0)
 . I PRCERR D
"RTN","PRCFSDR",170,0)
 . . W !,"IFCAP events for this 1358 missing due to following error:"
"RTN","PRCFSDR",171,0)
 . . W !,$P(PRCOBX,U,2),!
"RTN","PRCFSDR",172,0)
 . ;
"RTN","PRCFSDR",173,0)
 . S PRCEVFP=1 ; init flag as true (Event - First Printed for 1358)
"RTN","PRCFSDR",174,0)
 . ; loop thru date/times
"RTN","PRCFSDR",175,0)
 . S PRCDT="" F  S PRCDT=$O(^TMP($J,PRCOB,PRCDT)) Q:PRCDT=""  D  Q:PRCQUIT
"RTN","PRCFSDR",176,0)
 . . ; loop thru events
"RTN","PRCFSDR",177,0)
 . . S PRCEV=""
"RTN","PRCFSDR",178,0)
 . . F  S PRCEV=$O(^TMP($J,PRCOB,PRCDT,PRCEV)) Q:PRCEV=""  D  Q:PRCQUIT
"RTN","PRCFSDR",179,0)
 . . . N PRCX,PRCV
"RTN","PRCFSDR",180,0)
 . . . ; if only reporting violations, don't print certify event without
"RTN","PRCFSDR",181,0)
 . . . I PRCORV,PRCEV,$O(^TMP($J,PRCOB,PRCDT,PRCEV,"V"))="" Q
"RTN","PRCFSDR",182,0)
 . . . I 'PRCEVFP,$Y+5>IOSL D HD Q:PRCQUIT  D HDEV
"RTN","PRCFSDR",183,0)
 . . . I 'PRCEVFP W !
"RTN","PRCFSDR",184,0)
 . . . I PRCEVFP S PRCEVFP=0
"RTN","PRCFSDR",185,0)
 . . . S PRCX=$G(^TMP($J,PRCOB,PRCDT,PRCEV))
"RTN","PRCFSDR",186,0)
 . . . W ?11,$$FMTE^XLFDT(PRCDT,"2MZ")
"RTN","PRCFSDR",187,0)
 . . . W ?26,$S(PRCEV="O":"OBLIGATE",PRCEV="A":"ADJUST",1:PRCEV)
"RTN","PRCFSDR",188,0)
 . . . I PRCEV W ?38,"CERTIFIER",?49,$$GET1^DIQ(200,PRCX,.01)
"RTN","PRCFSDR",189,0)
 . . . I PRCEV="O"!(PRCEV="A") D
"RTN","PRCFSDR",190,0)
 . . . . W ?38,"REQUESTOR" W:$P(PRCX,U) ?49,$$GET1^DIQ(200,$P(PRCX,U),.01)
"RTN","PRCFSDR",191,0)
 . . . . W !,?38,"APPROVER" W:$P(PRCX,U,2) ?49,$$GET1^DIQ(200,$P(PRCX,U,2),.01)
"RTN","PRCFSDR",192,0)
 . . . . W !,?38,"OBLIGATOR" W:$P(PRCX,U,3) ?49,$$GET1^DIQ(200,$P(PRCX,U,3),.01)
"RTN","PRCFSDR",193,0)
 . . . ; list any violations found for this event (max is 3)
"RTN","PRCFSDR",194,0)
 . . . S PRCV="" F  S PRCV=$O(^TMP($J,PRCOB,PRCDT,PRCEV,PRCV)) Q:PRCV=""  D
"RTN","PRCFSDR",195,0)
 . . . . N PRCXV
"RTN","PRCFSDR",196,0)
 . . . . S PRCXV=$G(^TMP($J,PRCOB,PRCDT,PRCEV,PRCV))
"RTN","PRCFSDR",197,0)
 . . . . I PRCXV]"" W !,?8,"***",PRCXV
"RTN","PRCFSDR",198,0)
 ;
"RTN","PRCFSDR",199,0)
 I PRCQUIT W !!,"REPORT STOPPED AT USER REQUEST"
"RTN","PRCFSDR",200,0)
 E  D  ; report footer
"RTN","PRCFSDR",201,0)
 . I $Y+5>IOSL D HD Q:PRCQUIT
"RTN","PRCFSDR",202,0)
 . W !,PRCDL("CH")
"RTN","PRCFSDR",203,0)
 . W !!,"  ",PRCC("CER")," invoice certification",$S(PRCC("CER")=1:" was",1:"s were")," found during the report period."
"RTN","PRCFSDR",204,0)
 . Q:PRCC("OBL")=0
"RTN","PRCFSDR",205,0)
 . W !,"  ",PRCC("OBL")," 1358 Obligation",$S(PRCC("OBL")=1:" is",1:"s are")," referenced."
"RTN","PRCFSDR",206,0)
 . W !,"  A violation of segregation of duties was detected on ",$S(PRCC("VIO")=0:"none",1:PRCC("VIO"))," of the 1358s."
"RTN","PRCFSDR",207,0)
 I 'PRCQUIT,$E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR
"RTN","PRCFSDR",208,0)
 D ^%ZISC
"RTN","PRCFSDR",209,0)
 ;
"RTN","PRCFSDR",210,0)
EXIT ;
"RTN","PRCFSDR",211,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","PRCFSDR",212,0)
 K ^TMP($J)
"RTN","PRCFSDR",213,0)
 K PRCC,PRCDA,PRCDL,PRCDT,PRCDT1,PRCDT2,PRCDTR,PRCEV,PRCHDT,PRCOB,PRCORV
"RTN","PRCFSDR",214,0)
 K PRCPG,PRCSDT,PRCSTALL,PRCSTN,PRCQUIT
"RTN","PRCFSDR",215,0)
 K DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","PRCFSDR",216,0)
 Q
"RTN","PRCFSDR",217,0)
 ;
"RTN","PRCFSDR",218,0)
HD ; page header
"RTN","PRCFSDR",219,0)
 N PRCI
"RTN","PRCFSDR",220,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,PRCQUIT=1 Q
"RTN","PRCFSDR",221,0)
 I $E(IOST,1,2)="C-",PRCPG S DIR(0)="E" D ^DIR K DIR I 'Y S PRCQUIT=1 Q
"RTN","PRCFSDR",222,0)
 I $E(IOST,1,2)="C-"!PRCPG W @IOF
"RTN","PRCFSDR",223,0)
 S PRCPG=PRCPG+1
"RTN","PRCFSDR",224,0)
 W !,"IFCAP 1358 Segregation of Duties",?49,PRCDTR,?72,"page ",PRCPG
"RTN","PRCFSDR",225,0)
 S PRCI=0 F  S PRCI=$O(PRCHDT(PRCI)) Q:'PRCI  W !,PRCHDT(PRCI)
"RTN","PRCFSDR",226,0)
 W !!,"1358",?11,"DATE/TIME",?26,"EVENT/INV#",?38,"ROLE",?49,"NAME"
"RTN","PRCFSDR",227,0)
 Q
"RTN","PRCFSDR",228,0)
 ;
"RTN","PRCFSDR",229,0)
HDEV ; page header for continued event
"RTN","PRCFSDR",230,0)
 W !,PRCOB," (continued from previous page)"
"RTN","PRCFSDR",231,0)
 Q
"RTN","PRCFSDR",232,0)
 ;
"RTN","PRCFSDR",233,0)
DAYS ;CALCULATES THE NUMBER OF DAYS IN MONTH - Copied from routine FBAAUTL1
"RTN","PRCFSDR",234,0)
 N X1
"RTN","PRCFSDR",235,0)
 S X1=X,X=+$E(X,4,5),X=$S("^1^3^5^7^8^10^12^"[("^"_X_"^"):31,X=2:28,1:30)
"RTN","PRCFSDR",236,0)
 I X=28 D
"RTN","PRCFSDR",237,0)
 . N YEAR
"RTN","PRCFSDR",238,0)
 . S YEAR=$E(X1,1,3)+1700
"RTN","PRCFSDR",239,0)
 . I $S(YEAR#400=0:1,YEAR#4=0&'(YEAR#100=0):1,1:0) S X=29
"RTN","PRCFSDR",240,0)
 Q
"RTN","PRCFSDR",241,0)
 ; 
"RTN","PRCFSDR",242,0)
 ;PRCFSDR
"RTN","PRCHLO")
0^6^B12154193^B11530843
"RTN","PRCHLO",1,0)
PRCHLO ;WOIFO/RLL-EXTRACT ROUTINE CLO REPORT SERVER ;12/30/10  14:34
"RTN","PRCHLO",2,0)
 ;;5.1;IFCAP;**83,104,130,154**;Oct 20, 2000;Build 5
"RTN","PRCHLO",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified
"RTN","PRCHLO",4,0)
 ; 
"RTN","PRCHLO",5,0)
 ; PRCHLO* routines are used to build the extract files from
"RTN","PRCHLO",6,0)
 ; file 410, 424, and 442 for the clinical logistics report server.
"RTN","PRCHLO",7,0)
 ; PRCHLO thru PRCHLO6 perform the following:
"RTN","PRCHLO",8,0)
 ; 1. Initialize environment
"RTN","PRCHLO",9,0)
 ; 2. Get parameters for the month being run
"RTN","PRCHLO",10,0)
 ; 3. Pull data from file 410, 424, and 442 for month being run
"RTN","PRCHLO",11,0)
 ; 4. Create multiple "^" delimited flat files for report server
"RTN","PRCHLO",12,0)
 ; 5. At the completion of extracts FTP files to report server
"RTN","PRCHLO",13,0)
 ; 6. Clean up / remove any temp files
"RTN","PRCHLO",14,0)
 ; 7. logout
"RTN","PRCHLO",15,0)
 ; CALC is the programmer entry point used to test the extract
"RTN","PRCHLO",16,0)
 ; options for the first iteration of coding
"RTN","PRCHLO",17,0)
 ;
"RTN","PRCHLO",18,0)
 Q
"RTN","PRCHLO",19,0)
INIT ; Initialize environment
"RTN","PRCHLO",20,0)
 ;
"RTN","PRCHLO",21,0)
 K ^TMP($J)
"RTN","PRCHLO",22,0)
 ; 
"RTN","PRCHLO",23,0)
 ; Get todays date
"RTN","PRCHLO",24,0)
 N %
"RTN","PRCHLO",25,0)
 S %=$P(($$NOW^XLFDT),".",1)
"RTN","PRCHLO",26,0)
 ; (old logic)
"RTN","PRCHLO",27,0)
 ; Always start from the 1st of the month to the end of month
"RTN","PRCHLO",28,0)
 ; and at least 45 days prior to todays date
"RTN","PRCHLO",29,0)
 ;
"RTN","PRCHLO",30,0)
 ; (new logic)
"RTN","PRCHLO",31,0)
 ; Always start from the beginning of the Fiscal Year and run
"RTN","PRCHLO",32,0)
 ; the extract up until the Date of the extract run (NOW)
"RTN","PRCHLO",33,0)
 ;
"RTN","PRCHLO",34,0)
 ; The CALC entry point is used for testing from programmer mode
"RTN","PRCHLO",35,0)
 ; and allows the programmer to pass a specific date
"RTN","PRCHLO",36,0)
 ; in the variable %=FM date format
"RTN","PRCHLO",37,0)
 ;
"RTN","PRCHLO",38,0)
CALC ;test entry point, set %I to FM date
"RTN","PRCHLO",39,0)
 ;
"RTN","PRCHLO",40,0)
 N CLO1,CLO2,CLO2B,CLO2E,CLO3,CLOBGN,CLOEND,CLO1A
"RTN","PRCHLO",41,0)
 N MTHRUN,YRRUN,PYRRUN
"RTN","PRCHLO",42,0)
 S CLO1=$E(%,1,3)
"RTN","PRCHLO",43,0)
 ;
"RTN","PRCHLO",44,0)
 S CLO2=$E(%,4,5)
"RTN","PRCHLO",45,0)
 S YRRUN=+(CLO1)
"RTN","PRCHLO",46,0)
 S PYRRUN=YRRUN-1  ; previous Year Run
"RTN","PRCHLO",47,0)
 S MTHRUN=+(CLO2)
"RTN","PRCHLO",48,0)
 I +CLO2>2  D
"RTN","PRCHLO",49,0)
 . S CLO2B=CLO2-2
"RTN","PRCHLO",50,0)
 . I $L(CLO2B)<2 S CLO2B=0_CLO2B
"RTN","PRCHLO",51,0)
 . S CLO2E=CLO2-1
"RTN","PRCHLO",52,0)
 . I $L(CLO2E)<2 S CLO2E=0_CLO2E
"RTN","PRCHLO",53,0)
 . S CLOBGN=+(CLO1_(CLO2B)_"00")
"RTN","PRCHLO",54,0)
 . S CLOEND=+(CLO1_(CLO2E)_"01")
"RTN","PRCHLO",55,0)
 . Q
"RTN","PRCHLO",56,0)
 ;
"RTN","PRCHLO",57,0)
 ; check for January run, and Feb run
"RTN","PRCHLO",58,0)
 I +CLO2=1  D
"RTN","PRCHLO",59,0)
 . S CLO1=CLO1-1
"RTN","PRCHLO",60,0)
 . S CLOBGN=+(CLO1_11_"00")  ; Start date is Nov 1st
"RTN","PRCHLO",61,0)
 . S CLOEND=+(CLO1_12_"01")  ; End date is   Dec 1st
"RTN","PRCHLO",62,0)
 . Q
"RTN","PRCHLO",63,0)
 I +CLO2=2  D
"RTN","PRCHLO",64,0)
 . S CLO1A=CLO1-1  ; Need to get Dec, previous year
"RTN","PRCHLO",65,0)
 . S CLOBGN=+(CLO1A_12_"00")  ; Start date is Dec 1st
"RTN","PRCHLO",66,0)
 . S CLOEND=+(CLO1_"01"_"01")  ; End date is  Jan 1st
"RTN","PRCHLO",67,0)
 . Q
"RTN","PRCHLO",68,0)
 ;
"RTN","PRCHLO",69,0)
 ; (Begin new logic)
"RTN","PRCHLO",70,0)
FYRNOW ; Changes added 07/31/06 RLL for new extract date range.
"RTN","PRCHLO",71,0)
 ; CLOBGN will always be the beginning of the Fiscal Year (Oct 1st)
"RTN","PRCHLO",72,0)
 ; This will be the start range for each extract.
"RTN","PRCHLO",73,0)
 ; This routine is called through the option :
"RTN","PRCHLO",74,0)
 ; [PRCHLO CLO PROCUREMENT] which is queued to run in TaskMan
"RTN","PRCHLO",75,0)
 ; This option should be queued to run 2 hours AFTER
"RTN","PRCHLO",76,0)
 ; [PRCHLO GIP OPTION] and should be run on the same day
"RTN","PRCHLO",77,0)
 ; (after midnight) as the [PRCHLO GIP OPTION]. As an example:
"RTN","PRCHLO",78,0)
 ; 1.  Que [PRCHLO GIP OPTION] to run 12:00am the 1st of the month
"RTN","PRCHLO",79,0)
 ; 2.  Que [PRCHLO CLO PROCUREMENT] to run 1:00am the 1st of the month
"RTN","PRCHLO",80,0)
 ;
"RTN","PRCHLO",81,0)
 ;
"RTN","PRCHLO",82,0)
 ; The following new Variables were added to the CALC entry point:
"RTN","PRCHLO",83,0)
 ; YRRUN  ; year option run
"RTN","PRCHLO",84,0)
 ; PYRRUN  ; previous year option run
"RTN","PRCHLO",85,0)
 ; MTHRUN  ; MONTHRUN
"RTN","PRCHLO",86,0)
 ; listed below are 3 examples:
"RTN","PRCHLO",87,0)
 ;
"RTN","PRCHLO",88,0)
 ; Month Option Run  |  Date Range for Run       | # of months of data
"RTN","PRCHLO",89,0)
 ; Dec 1st, 2005    | Oct 1, 2005 to Dec 1st 2005|       2
"RTN","PRCHLO",90,0)
 ; Apr 1st, 2006    | Oct 1, 2005 to Apr 1st 2006|       6
"RTN","PRCHLO",91,0)
 ; Oct 1st, 2006    | Oct 1, 2005 to Oct 1st 2006|      12
"RTN","PRCHLO",92,0)
 ;
"RTN","PRCHLO",93,0)
STCLOBGN ; Set CLOBGN to Beginning of Fiscal Year (Oct. 1)
"RTN","PRCHLO",94,0)
 ; 
"RTN","PRCHLO",95,0)
 I MTHRUN=12!(MTHRUN=11)  D
"RTN","PRCHLO",96,0)
 . ; For Nov or Dec, CLOBGN set to Begin of FY(Oct 1st) in same year
"RTN","PRCHLO",97,0)
 . S CLOBGN=+(YRRUN_"10"_"00")
"RTN","PRCHLO",98,0)
 . S CLOEND=%  ; CLOEND is Date Extract Run
"RTN","PRCHLO",99,0)
 . Q
"RTN","PRCHLO",100,0)
 I (MTHRUN<11)  D  ; (CLOBGN set to Prev FY for all other conditions)
"RTN","PRCHLO",101,0)
 . S CLOBGN=+(PYRRUN_"10"_"00")
"RTN","PRCHLO",102,0)
 . S CLOEND=%  ; CLOEND is Date Extract Run
"RTN","PRCHLO",103,0)
 . Q
"RTN","PRCHLO",104,0)
 ; (End new logic)
"RTN","PRCHLO",105,0)
 ;
"RTN","PRCHLO",106,0)
DEBUGFY ; Debug Fiscal Year logic by uncommenting code below 7/31/06 RLL
"RTN","PRCHLO",107,0)
 ;
"RTN","PRCHLO",108,0)
 D GPARM
"RTN","PRCHLO",109,0)
 ; Make sure ^TMP($J) is set with data, otherwise return error
"RTN","PRCHLO",110,0)
 N CKTP
"RTN","PRCHLO",111,0)
 S CKTP=$O(^TMP($J,0))
"RTN","PRCHLO",112,0)
 I CKTP=""  D
"RTN","PRCHLO",113,0)
 . S CLRSERR=1  ; error flag indicates no data in ^TMP($J)
"RTN","PRCHLO",114,0)
 . Q
"RTN","PRCHLO",115,0)
 Q
"RTN","PRCHLO",116,0)
 ;
"RTN","PRCHLO",117,0)
GPARM ; Get parameters for monthly extract
"RTN","PRCHLO",118,0)
 ;
"RTN","PRCHLO",119,0)
 ; need to set monthyear for data file
"RTN","PRCHLO",120,0)
 ;
"RTN","PRCHLO",121,0)
 N MNTHYR,FMDT1,MYRVAL
"RTN","PRCHLO",122,0)
 S FMDT1=$P(($$NOW^XLFDT),".",1)
"RTN","PRCHLO",123,0)
 S MYRVAL=$$FMTE^XLFDT(FMDT1)
"RTN","PRCHLO",124,0)
 S MNTHYR=$P(MYRVAL," ",1)_","_$P(MYRVAL," ",3)
"RTN","PRCHLO",125,0)
 ;
"RTN","PRCHLO",126,0)
 ; $O through the "AB" x-ref based on CLOBGN and CLOEND
"RTN","PRCHLO",127,0)
 ;
"RTN","PRCHLO",128,0)
 S CLO1=CLOBGN,CLO2="",CLO3=""
"RTN","PRCHLO",129,0)
 F  S CLO1=$O(^PRC(442,"AB",CLO1)) Q:CLO1=""  D
"RTN","PRCHLO",130,0)
 . F  S CLO2=$O(^PRC(442,"AB",CLO1,CLO2)) Q:CLO2=""  D
"RTN","PRCHLO",131,0)
 . . Q:CLO1>(CLOEND-1)
"RTN","PRCHLO",132,0)
 . . D GKEY
"RTN","PRCHLO",133,0)
 . . Q
"RTN","PRCHLO",134,0)
 . Q
"RTN","PRCHLO",135,0)
 ;     PRC*5.1*130 begin
"RTN","PRCHLO",136,0)
 D GET410^PRCHLO6
"RTN","PRCHLO",137,0)
 D GET424^PRCHLO6
"RTN","PRCHLO",138,0)
 ;     PRC*5.1*130 end
"RTN","PRCHLO",139,0)
 D INVCOMPL^PRCHLO7 ;Compile Invoice Tracking
"RTN","PRCHLO",140,0)
 Q
"RTN","PRCHLO",141,0)
EXTR ; Extract the data, create files
"RTN","PRCHLO",142,0)
 ;
"RTN","PRCHLO",143,0)
GKEY ; get key for all tables
"RTN","PRCHLO",144,0)
 N POID,POCRDAT
"RTN","PRCHLO",145,0)
 S POID=CLO2
"RTN","PRCHLO",146,0)
 S POCRDAT=CLO1  ; PO Date from x-ref value
"RTN","PRCHLO",147,0)
 D GPOMAST^PRCHLO1  ;
"RTN","PRCHLO",148,0)
 Q
"RTN","PRCHLO4")
0^7^B122818206^B120154139
"RTN","PRCHLO4",1,0)
PRCHLO4 ;WOIFO/RLL/DAP-EXTRACT ROUTINE CLO REPORT SERVER ;12/30/10  15:01
"RTN","PRCHLO4",2,0)
 ;;5.1;IFCAP;**83,98,130,154**;Oct 20, 2000;Build 5
"RTN","PRCHLO4",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRCHLO4",4,0)
 ; Continuation of PRCHLO3
"RTN","PRCHLO4",5,0)
 ;
"RTN","PRCHLO4",6,0)
 ; PRCHLO3 routines are used to Write out the Header and data
"RTN","PRCHLO4",7,0)
 ; associated with each of the 29 tables created for the Clinical
"RTN","PRCHLO4",8,0)
 ; logistics Report Server. The files are built from the extracts
"RTN","PRCHLO4",9,0)
 ; located in the ^TMP($J) global.
"RTN","PRCHLO4",10,0)
 ;
"RTN","PRCHLO4",11,0)
 Q
"RTN","PRCHLO4",12,0)
GETDIR ; Get directory from System parameter for CLRS
"RTN","PRCHLO4",13,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4",14,0)
 ;
"RTN","PRCHLO4",15,0)
 Q
"RTN","PRCHLO4",16,0)
CLRSFIL ; Create output files for CLRS
"RTN","PRCHLO4",17,0)
 N FILEDIR
"RTN","PRCHLO4",18,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4",19,0)
 ; GET station id
"RTN","PRCHLO4",20,0)
 N STID
"RTN","PRCHLO4",21,0)
 ; S STID=$G(^DD("SITE",1)) Old call
"RTN","PRCHLO4",22,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4",23,0)
TSTFIL ; Test entry point
"RTN","PRCHLO4",24,0)
 ;
"RTN","PRCHLO4",25,0)
 D POMASTF  ; Po Master Data
"RTN","PRCHLO4",26,0)
 D POOBF  ; Po Obligation Data
"RTN","PRCHLO4",27,0)
 D POMETHF  ; PO Method of Purchase Data
"RTN","PRCHLO4",28,0)
 D PODISCF  ; PO Discount Data
"RTN","PRCHLO4",29,0)
 D POITMF  ; Po Item Data
"RTN","PRCHLO4",30,0)
 D POITIVF  ; PO Item Inventory Point Data
"RTN","PRCHLO4",31,0)
 D POITDRF  ; PO Item Desc Data
"RTN","PRCHLO4",32,0)
 D PODSCF  ; PO Description
"RTN","PRCHLO4",33,0)
 D POPRTF  ; PO Partial Data
"RTN","PRCHLO4",34,0)
 D PO2237F  ; PO 2237 data
"RTN","PRCHLO4",35,0)
 D POBOCF  ; PO BOC Data
"RTN","PRCHLO4",36,0)
 D POCOMF  ; PO Comments data
"RTN","PRCHLO4",37,0)
 D POREMF  ; PO Remarks data
"RTN","PRCHLO4",38,0)
 D POPPTF  ; PO Prompt Payment Terms data
"RTN","PRCHLO4",39,0)
 D POAMTF  ; PO Amount data
"RTN","PRCHLO4",40,0)
 D POAMDF  ; PO Amendment Data
"RTN","PRCHLO4",41,0)
 D POAMDCF  ; PO Amendment Changes Data
"RTN","PRCHLO4",42,0)
 D POAMDDF  ; PO Amendment Description Data
"RTN","PRCHLO4",43,0)
 D POAMBKF  ; PO Amount Breakout Code Data
"RTN","PRCHLO4",44,0)
 D FIL410   ; FILE 410
"RTN","PRCHLO4",45,0)
 D FIL424   ; FILE 424
"RTN","PRCHLO4",46,0)
 D FIL4241  ; FILE 424.1
"RTN","PRCHLO4",47,0)
 D INVHDR^PRCHLO7 ;File 421.5 header
"RTN","PRCHLO4",48,0)
 D INVPAY^PRCHLO7 ;Subfile 421.531
"RTN","PRCHLO4",49,0)
 D INVFMS^PRCHLO7 ;Subfile 421.541
"RTN","PRCHLO4",50,0)
 D INVCERT^PRCHLO7 ;Subfile 421.51
"RTN","PRCHLO4",51,0)
GIPBL1 ; GIP REPORTS
"RTN","PRCHLO4",52,0)
 D BLDGP1^PRCPLO3
"RTN","PRCHLO4",53,0)
 D BLDGP2^PRCPLO3
"RTN","PRCHLO4",54,0)
 Q
"RTN","PRCHLO4",55,0)
POMASTF ; Save PO Master table data to a file to FTP to report Server
"RTN","PRCHLO4",56,0)
 ; build file name
"RTN","PRCHLO4",57,0)
 N OUTFIL1
"RTN","PRCHLO4",58,0)
 S OUTFIL1="IFCP"_STID_"F1.TXT"
"RTN","PRCHLO4",59,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL1,"W")  ; Open the file
"RTN","PRCHLO4",60,0)
 D USE^%ZISUTL("FILE1")  ; Use the file as the output device
"RTN","PRCHLO4",61,0)
 D POMASTH^PRCHLO3   ; Write the Header to the file
"RTN","PRCHLO4",62,0)
 D POMASTW^PRCHLO3   ; Write the data to the file
"RTN","PRCHLO4",63,0)
 D CLOSE^%ZISH("FILE1")  ; Close the file
"RTN","PRCHLO4",64,0)
 Q
"RTN","PRCHLO4",65,0)
POOBF ; Create flat file for PO OBLIGATION DATA
"RTN","PRCHLO4",66,0)
 N OUTFIL2
"RTN","PRCHLO4",67,0)
 S OUTFIL2="IFCP"_STID_"F2.TXT"
"RTN","PRCHLO4",68,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL2,"W")  ; Open the file
"RTN","PRCHLO4",69,0)
 D USE^%ZISUTL("FILE1")  ; Use the file as the output device
"RTN","PRCHLO4",70,0)
 D POOBHD^PRCHLO3
"RTN","PRCHLO4",71,0)
 D POOBW^PRCHLO3
"RTN","PRCHLO4",72,0)
 D CLOSE^%ZISH("FILE1")  ; Close the file
"RTN","PRCHLO4",73,0)
 Q
"RTN","PRCHLO4",74,0)
POMETHF ; Create flat for for Purchase Order Method
"RTN","PRCHLO4",75,0)
 N OUTFIL3
"RTN","PRCHLO4",76,0)
 S OUTFIL3="IFCP"_STID_"F3.TXT"
"RTN","PRCHLO4",77,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL3,"W")  ; Open the file
"RTN","PRCHLO4",78,0)
 D USE^%ZISUTL("FILE1")  ; Use the file as the output device
"RTN","PRCHLO4",79,0)
 D POPMEH^PRCHLO3
"RTN","PRCHLO4",80,0)
 D POPMEW^PRCHLO3
"RTN","PRCHLO4",81,0)
 D CLOSE^%ZISH("FILE1")  ; Close the file
"RTN","PRCHLO4",82,0)
 Q
"RTN","PRCHLO4",83,0)
PODISCF ; Create flat file for Purchase Order Discount
"RTN","PRCHLO4",84,0)
 N OUTFIL4
"RTN","PRCHLO4",85,0)
 S OUTFIL4="IFCP"_STID_"F4.TXT"
"RTN","PRCHLO4",86,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL4,"W")  ; Open the file
"RTN","PRCHLO4",87,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",88,0)
 D PODISCH^PRCHLO1
"RTN","PRCHLO4",89,0)
 D PODISCW^PRCHLO1
"RTN","PRCHLO4",90,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",91,0)
 Q
"RTN","PRCHLO4",92,0)
POITMF ; Create flat file for PO Item data
"RTN","PRCHLO4",93,0)
 N OUTFIL5
"RTN","PRCHLO4",94,0)
 S OUTFIL5="IFCP"_STID_"F5.TXT"
"RTN","PRCHLO4",95,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL5,"W")  ; Open the file
"RTN","PRCHLO4",96,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",97,0)
 D POITEMH^PRCHLO2
"RTN","PRCHLO4",98,0)
 D POITEMW^PRCHLO2
"RTN","PRCHLO4",99,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",100,0)
 Q
"RTN","PRCHLO4",101,0)
POITIVF ; Create flat file for PO Item inv. point data
"RTN","PRCHLO4",102,0)
 N OUTFIL6
"RTN","PRCHLO4",103,0)
 S OUTFIL6="IFCP"_STID_"F6.TXT"
"RTN","PRCHLO4",104,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL6,"W")  ; Open the file
"RTN","PRCHLO4",105,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",106,0)
 D POITLNH^PRCHLO2
"RTN","PRCHLO4",107,0)
 D POITLNW^PRCHLO2
"RTN","PRCHLO4",108,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",109,0)
 Q
"RTN","PRCHLO4",110,0)
POITDRF ; Create flat file for PO Item date received
"RTN","PRCHLO4",111,0)
 N OUTFIL7
"RTN","PRCHLO4",112,0)
 S OUTFIL7="IFCP"_STID_"F7.TXT"
"RTN","PRCHLO4",113,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL7,"W")  ; Open the file
"RTN","PRCHLO4",114,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",115,0)
 D POITDRCH^PRCHLO2
"RTN","PRCHLO4",116,0)
 D POITDRCW^PRCHLO2
"RTN","PRCHLO4",117,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",118,0)
 Q
"RTN","PRCHLO4",119,0)
PODSCF ; Create flat file for PO item description
"RTN","PRCHLO4",120,0)
 N OUTFIL8
"RTN","PRCHLO4",121,0)
 S OUTFIL8="IFCP"_STID_"F8.TXT"
"RTN","PRCHLO4",122,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL8,"W")  ; Open the file
"RTN","PRCHLO4",123,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",124,0)
 D POITDSH^PRCHLO2
"RTN","PRCHLO4",125,0)
 D POITDSW^PRCHLO2
"RTN","PRCHLO4",126,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",127,0)
 Q
"RTN","PRCHLO4",128,0)
POPRTF ; Create flat file for PO Partial data
"RTN","PRCHLO4",129,0)
 N OUTFIL9
"RTN","PRCHLO4",130,0)
 S OUTFIL9="IFCP"_STID_"F9.TXT"
"RTN","PRCHLO4",131,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL9,"W")  ; Open the file
"RTN","PRCHLO4",132,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",133,0)
 D POPART^PRCHLO3
"RTN","PRCHLO4",134,0)
 D POPARTW^PRCHLO3
"RTN","PRCHLO4",135,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",136,0)
 Q
"RTN","PRCHLO4",137,0)
PO2237F ; Create flat file for 2237 data
"RTN","PRCHLO4",138,0)
 N OUTFIL10
"RTN","PRCHLO4",139,0)
 S OUTFIL10="IFCP"_STID_"F10.TXT"
"RTN","PRCHLO4",140,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL10,"W")  ; Open the file
"RTN","PRCHLO4",141,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",142,0)
 D PO2237H^PRCHLO3
"RTN","PRCHLO4",143,0)
 D PO2237W^PRCHLO3
"RTN","PRCHLO4",144,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",145,0)
 Q
"RTN","PRCHLO4",146,0)
POBOCF ; Create flat file for PO BOC data
"RTN","PRCHLO4",147,0)
 N OUTFIL11
"RTN","PRCHLO4",148,0)
 S OUTFIL11="IFCP"_STID_"F11.TXT"
"RTN","PRCHLO4",149,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL11,"W")
"RTN","PRCHLO4",150,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",151,0)
 D POBOCH^PRCHLO3
"RTN","PRCHLO4",152,0)
 D POBOCW^PRCHLO3
"RTN","PRCHLO4",153,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",154,0)
 Q
"RTN","PRCHLO4",155,0)
POCOMF ; Create flat file for PO Comments
"RTN","PRCHLO4",156,0)
 N OUTFIL12
"RTN","PRCHLO4",157,0)
 S OUTFIL12="IFCP"_STID_"F12.TXT"
"RTN","PRCHLO4",158,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL12,"W")
"RTN","PRCHLO4",159,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",160,0)
 D POCMTSH^PRCHLO3
"RTN","PRCHLO4",161,0)
 D POCMTSW^PRCHLO3
"RTN","PRCHLO4",162,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",163,0)
 Q
"RTN","PRCHLO4",164,0)
POREMF ; Create flat file for PO Remarks
"RTN","PRCHLO4",165,0)
 N OUTFIL13
"RTN","PRCHLO4",166,0)
 S OUTFIL13="IFCP"_STID_"F13.TXT"
"RTN","PRCHLO4",167,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL13,"W")
"RTN","PRCHLO4",168,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",169,0)
 D PORMKH^PRCHLO3
"RTN","PRCHLO4",170,0)
 D PORMKW^PRCHLO3
"RTN","PRCHLO4",171,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",172,0)
 Q
"RTN","PRCHLO4",173,0)
POPPTF ; Create flat file for PO Prompt payment terms data
"RTN","PRCHLO4",174,0)
 N OUTFIL14
"RTN","PRCHLO4",175,0)
 S OUTFIL14="IFCP"_STID_"F14.TXT"
"RTN","PRCHLO4",176,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL14,"W")
"RTN","PRCHLO4",177,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",178,0)
 D POPPTH^PRCHLO3
"RTN","PRCHLO4",179,0)
 D POPPTW^PRCHLO3
"RTN","PRCHLO4",180,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",181,0)
 Q
"RTN","PRCHLO4",182,0)
POAMTF ; Create flat file for PO Amount data
"RTN","PRCHLO4",183,0)
 N OUTFIL15
"RTN","PRCHLO4",184,0)
 S OUTFIL15="IFCP"_STID_"F15.TXT"
"RTN","PRCHLO4",185,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL15,"W")
"RTN","PRCHLO4",186,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",187,0)
 D POAMTH^PRCHLO3
"RTN","PRCHLO4",188,0)
 D POAMTW^PRCHLO3
"RTN","PRCHLO4",189,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",190,0)
 Q
"RTN","PRCHLO4",191,0)
POAMDF ; Create flat file for PO Amendment data
"RTN","PRCHLO4",192,0)
 N OUTFIL16
"RTN","PRCHLO4",193,0)
 S OUTFIL16="IFCP"_STID_"F16.TXT"
"RTN","PRCHLO4",194,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL16,"W")
"RTN","PRCHLO4",195,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",196,0)
 D POAMDH^PRCHLO3
"RTN","PRCHLO4",197,0)
 D POAMDW^PRCHLO3
"RTN","PRCHLO4",198,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",199,0)
 Q
"RTN","PRCHLO4",200,0)
POAMDCF ; Create flat file for PO Amendment changes
"RTN","PRCHLO4",201,0)
 N OUTFIL17
"RTN","PRCHLO4",202,0)
 S OUTFIL17="IFCP"_STID_"F17.TXT"
"RTN","PRCHLO4",203,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL17,"W")
"RTN","PRCHLO4",204,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",205,0)
 D POAMDCH^PRCHLO3
"RTN","PRCHLO4",206,0)
 D POAMDCW^PRCHLO3
"RTN","PRCHLO4",207,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",208,0)
 Q
"RTN","PRCHLO4",209,0)
POAMDDF ; Create flat file for PO Amendment Desc data
"RTN","PRCHLO4",210,0)
 N OUTFIL18
"RTN","PRCHLO4",211,0)
 S OUTFIL18="IFCP"_STID_"F18.TXT"
"RTN","PRCHLO4",212,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL18,"W")
"RTN","PRCHLO4",213,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",214,0)
 D PAMDDH^PRCHLO3
"RTN","PRCHLO4",215,0)
 D PAMDDW^PRCHLO3
"RTN","PRCHLO4",216,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",217,0)
 Q
"RTN","PRCHLO4",218,0)
POAMBKF ; Create flat file for PO amount breakout code
"RTN","PRCHLO4",219,0)
 N OUTFIL19
"RTN","PRCHLO4",220,0)
 S OUTFIL19="IFCP"_STID_"F19.TXT"
"RTN","PRCHLO4",221,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL19,"W")
"RTN","PRCHLO4",222,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",223,0)
 D PAMTBKH^PRCHLO3
"RTN","PRCHLO4",224,0)
 D PAMTBKW^PRCHLO3
"RTN","PRCHLO4",225,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",226,0)
 Q
"RTN","PRCHLO4",227,0)
FIL410 ; Create flat file for file 410 (Control Point Activity)
"RTN","PRCHLO4",228,0)
 N OUTFIL20
"RTN","PRCHLO4",229,0)
 S OUTFIL20="IFCP"_STID_"F20.TXT"
"RTN","PRCHLO4",230,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL20,"W")
"RTN","PRCHLO4",231,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",232,0)
 D CONTRPH^PRCHLO3
"RTN","PRCHLO4",233,0)
 D CONTRPW^PRCHLO3
"RTN","PRCHLO4",234,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",235,0)
 N OUTFIL21
"RTN","PRCHLO4",236,0)
 S OUTFIL21="IFCP"_STID_"F21.TXT"
"RTN","PRCHLO4",237,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL21,"W")
"RTN","PRCHLO4",238,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",239,0)
 D SUBCPH^PRCHLO3
"RTN","PRCHLO4",240,0)
 D SUBCPW^PRCHLO3
"RTN","PRCHLO4",241,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",242,0)
 Q
"RTN","PRCHLO4",243,0)
FIL424 ; Create flat file for file 424 (1358 Daily Record)
"RTN","PRCHLO4",244,0)
 N OUTFIL22
"RTN","PRCHLO4",245,0)
 S OUTFIL22="IFCP"_STID_"F22.TXT"
"RTN","PRCHLO4",246,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL22,"W")
"RTN","PRCHLO4",247,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",248,0)
 D DR1358H^PRCHLO3
"RTN","PRCHLO4",249,0)
 D DR1358W^PRCHLO3
"RTN","PRCHLO4",250,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",251,0)
 Q
"RTN","PRCHLO4",252,0)
FIL4241 ;Create flat file for file 424.1 (1358 Authorization Detail)
"RTN","PRCHLO4",253,0)
 N OUTFIL23
"RTN","PRCHLO4",254,0)
 S OUTFIL23="IFCP"_STID_"F23.TXT"
"RTN","PRCHLO4",255,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL23,"W")
"RTN","PRCHLO4",256,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",257,0)
 D AD1358H^PRCHLO3
"RTN","PRCHLO4",258,0)
 D AD1358W^PRCHLO3
"RTN","PRCHLO4",259,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",260,0)
 Q
"RTN","PRCHLO4",261,0)
TSTF ; Test directory for file creation
"RTN","PRCHLO4",262,0)
 N FILEDIR,TFILE,OUTFILT,POP,STID
"RTN","PRCHLO4",263,0)
 ; POP is returned by OPEN^%ZISH if file cannot be created.
"RTN","PRCHLO4",264,0)
 S POP=""
"RTN","PRCHLO4",265,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4",266,0)
 S OUTFILT="CLRSREADME"_STID_".TXT"
"RTN","PRCHLO4",267,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4",268,0)
 D OPEN^%ZISH("TFILE",FILEDIR,OUTFILT,"W")
"RTN","PRCHLO4",269,0)
 I POP  D
"RTN","PRCHLO4",270,0)
 . S CLRSERR=2
"RTN","PRCHLO4",271,0)
 . Q
"RTN","PRCHLO4",272,0)
 I CLRSERR'=2  D
"RTN","PRCHLO4",273,0)
 . D USE^%ZISUTL("TFILE")
"RTN","PRCHLO4",274,0)
 . W !,"$ ! This directory is used to store PO activity"
"RTN","PRCHLO4",275,0)
 . W !,"$ ! extracts and GIP Extracts which are transmitted"
"RTN","PRCHLO4",276,0)
 . W !,"$ ! to the Clinical Logistics Report Server on a monthly"
"RTN","PRCHLO4",277,0)
 . W !,"$ ! basis. There are 29 extract files IFCPXXXF1 through"
"RTN","PRCHLO4",278,0)
 . W !,"$ ! IFCPXXXF27, IFCPXXXG1 and IFCPXXXG2. In addition, there"
"RTN","PRCHLO4",279,0)
 . W !,"$ ! are 2 working files used for the FTP Transfer:"
"RTN","PRCHLO4",280,0)
 . W !,"$ ! CLRSxxx.DAT and CLRS1xxx.COM. CLRSREADMExxx.TXT is also present"
"RTN","PRCHLO4",281,0)
 . W !,"$ EXIT"
"RTN","PRCHLO4",282,0)
 . D CLOSE^%ZISH("TFILE")
"RTN","PRCHLO4",283,0)
 . Q
"RTN","PRCHLO4",284,0)
 Q
"RTN","PRCHLO4",285,0)
 ;
"RTN","PRCHLO4",286,0)
CRTCOM ; Create .DAT file to transfer file(s)
"RTN","PRCHLO4",287,0)
 N FILEDIR,POP,STID,OUTFLL1
"RTN","PRCHLO4",288,0)
 ; PRC*5.1*130 begin
"RTN","PRCHLO4",289,0)
 N PRCHUSN,PRCHPSW
"RTN","PRCHLO4",290,0)
 S PRCHUSN=$$GET^XPAR("SYS","PRCPLO USER NAME",1,"Q")
"RTN","PRCHLO4",291,0)
 I PRCHUSN="" S PRCPMSG(1)="There is no user name identified in the CLRS USER NAME Parameter.",PRCPMSG(2)="Please correct and retry." D MAILFTP^PRCHLO4A S CLRSERR=3 Q
"RTN","PRCHLO4",292,0)
 S PRCHUSN=$$DECRYP^XUSRB1(PRCHUSN)
"RTN","PRCHLO4",293,0)
 S PRCHPSW=$$GET^XPAR("SYS","PRCPLO PASSWORD",1,"Q")
"RTN","PRCHLO4",294,0)
 I PRCHPSW="" S PRCPMSG(1)="There is no password identified in the CLRS PASSWORD Parameter.",PRCPMSG(2)="Please correct and retry." D MAILFTP^PRCHLO4A S CLRSERR=3 Q
"RTN","PRCHLO4",295,0)
 S PRCHPSW=$$DECRYP^XUSRB1(PRCHPSW)
"RTN","PRCHLO4",296,0)
 ; PRC*5.1*130 end
"RTN","PRCHLO4",297,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4",298,0)
 S POP=""  ; POP is returned by OPEN^%ZISH
"RTN","PRCHLO4",299,0)
 ; S FILEDIR="$1$DGA2:[ANONYMOUS.CLRS]"  ;set dir for outpt files.
"RTN","PRCHLO4",300,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4",301,0)
 S OUTFLL1="CLRS"_STID_"FTP.DAT"
"RTN","PRCHLO4",302,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFLL1,"W")
"RTN","PRCHLO4",303,0)
 I POP  D
"RTN","PRCHLO4",304,0)
 . S CLRSERR=3
"RTN","PRCHLO4",305,0)
 . Q
"RTN","PRCHLO4",306,0)
 I CLRSERR'=3  D
"RTN","PRCHLO4",307,0)
 . D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",308,0)
 . ; Enter user name and password for Report Server Login ; PRC*5.1*130
"RTN","PRCHLO4",309,0)
 . W PRCHUSN,!,PRCHPSW,!
"RTN","PRCHLO4",310,0)
 . W "SET DEFAULT /LOCAL "_FILEDIR,!
"RTN","PRCHLO4",311,0)
 . W "PUT IFCP"_STID_"*.*;*",!  ; new code to issue PUT command
"RTN","PRCHLO4",312,0)
 . W "EXIT",!  ; Exit FTP
"RTN","PRCHLO4",313,0)
 . D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",314,0)
 . Q
"RTN","PRCHLO4",315,0)
 Q
"RTN","PRCHLO4",316,0)
CRTCOM1 ; Run CLRSFTP1.COM as com file for exception handling
"RTN","PRCHLO4",317,0)
 ;
"RTN","PRCHLO4",318,0)
 ;*98 Modified code to work with PRC CLRS ADDRESS parameter
"RTN","PRCHLO4",319,0)
 ;
"RTN","PRCHLO4",320,0)
 N FILEDIR,STID,OUTFLL2,ADDR
"RTN","PRCHLO4",321,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4",322,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4",323,0)
 S ADDR=$$GET^XPAR("SYS","PRC CLRS ADDRESS",1,"Q")
"RTN","PRCHLO4",324,0)
 I ADDR="" S PRCPMSG(1)="There is no address identified in the CLRS Address Parameter.",PRCPMSG(2)="Please correct and retry." D MAILFTP^PRCHLO4A S CLRSERR=1 Q
"RTN","PRCHLO4",325,0)
 S OUTFLL2="CLRS"_STID_"FTP1.COM"
"RTN","PRCHLO4",326,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFLL2,"W")
"RTN","PRCHLO4",327,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",328,0)
 W "$ SET VERIFY=(PROCEDURE,IMAGE)",!
"RTN","PRCHLO4",329,0)
 W "$ SET DEFAULT "_FILEDIR,!
"RTN","PRCHLO4",330,0)
 W "$ FTP "_ADDR_" /INPUT="_FILEDIR_"CLRS"_STID_"FTP.DAT",!
"RTN","PRCHLO4",331,0)
 ;
"RTN","PRCHLO4",332,0)
 W "$ EXIT 3",!
"RTN","PRCHLO4",333,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",334,0)
 Q
"RTN","PRCHLO4",335,0)
FTPCOM ; Issue the FTP command after CLRS1.TXT file is built
"RTN","PRCHLO4",336,0)
 ; remain in CACHE during FTP Process using
"RTN","PRCHLO4",337,0)
 ; $ZF(-1) call
"RTN","PRCHLO4",338,0)
 ; ; SACC Exception received for usage of $ZF(-1) in PRC*5.1*83
"RTN","PRCHLO4",339,0)
 ; See IFCAP technical manual
"RTN","PRCHLO4",340,0)
 ;
"RTN","PRCHLO4",341,0)
 ; commented out for testing
"RTN","PRCHLO4",342,0)
 ; add hook to mailman messaging for ftp, check variable PV
"RTN","PRCHLO4",343,0)
 N PV,XPV1,FILEDIR,STID
"RTN","PRCHLO4",344,0)
 ;
"RTN","PRCHLO4",345,0)
 ;
"RTN","PRCHLO4",346,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4",347,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4",348,0)
 S XPV1="S PV=$ZF(-1,""@"_FILEDIR_"CLRS"_STID_"FTP1.COM/OUTPUT="_FILEDIR_"CLRS"_STID_"FTP1.LOG"")"
"RTN","PRCHLO4",349,0)
 X XPV1  ; Run the .COM file to transfer files
"RTN","PRCHLO4",350,0)
 ;
"RTN","PRCHLO4",351,0)
 ; Error flag logic
"RTN","PRCHLO4",352,0)
 I PV=-1  D  ; This error is generated if failure during xfer occurs
"RTN","PRCHLO4",353,0)
 . S CLRSERR=1
"RTN","PRCHLO4",354,0)
 . Q
"RTN","PRCHLO4",355,0)
 Q
"RTN","PRCHLO4A")
0^8^B72354777^B72350733
"RTN","PRCHLO4A",1,0)
PRCHLO4A ;WOIFO/RLL/DAP-EXTRACT ROUTINE CLO REPORT SERVER ;12/30/10  14:58
"RTN","PRCHLO4A",2,0)
 ;;5.1;IFCAP;**83,104,98,130,154**;Oct 20, 2000;Build 5
"RTN","PRCHLO4A",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRCHLO4A",4,0)
 ; Continuation of PRCHLO4
"RTN","PRCHLO4A",5,0)
 ;
"RTN","PRCHLO4A",6,0)
 ; PRCHLO4A routines are used to Write out the Header and data
"RTN","PRCHLO4A",7,0)
 ;
"RTN","PRCHLO4A",8,0)
 Q
"RTN","PRCHLO4A",9,0)
GETDIR ; Get directory from PRCPLO EXTRACT DIRECTORY system parameter for CLRS
"RTN","PRCHLO4A",10,0)
 N FILEDIR,STID
"RTN","PRCHLO4A",11,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",12,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",13,0)
 ;
"RTN","PRCHLO4A",14,0)
 Q
"RTN","PRCHLO4A",15,0)
 ;
"RTN","PRCHLO4A",16,0)
CRTWIN ; Create CLRSxxxWFTP.TXT  file to transfer file(s)
"RTN","PRCHLO4A",17,0)
 ;*98 Modified to work with PRC CLRS ADDRESS parameter
"RTN","PRCHLO4A",18,0)
 N FILEDIR,POP,STID,OUTFLL1,ADDR
"RTN","PRCHLO4A",19,0)
 ; PRC*5.1*130 begin
"RTN","PRCHLO4A",20,0)
 N PRCHUSN,PRCHPSW
"RTN","PRCHLO4A",21,0)
 ; PRC*5.1*130 end
"RTN","PRCHLO4A",22,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",23,0)
 S POP=""  ; POP is returned by OPEN^%ZISH
"RTN","PRCHLO4A",24,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",25,0)
 ; RLL/PRC*5.1*104 change logic to create separate FTP
"RTN","PRCHLO4A",26,0)
 ; transfer files (1 for each file for Windows/Cache)
"RTN","PRCHLO4A",27,0)
 S ADDR=$$GET^XPAR("SYS","PRC CLRS ADDRESS",1,"Q")
"RTN","PRCHLO4A",28,0)
 I ADDR="" S PRCPMSG(1)="There is no address identified in the CLRS Adress Parameter.",PRCPMSG(2)="Please correct and retry." D MAILFTP S CLRSERR=1 Q
"RTN","PRCHLO4A",29,0)
 ; PRC*5.1*130 begin
"RTN","PRCHLO4A",30,0)
 S PRCHUSN=$$GET^XPAR("SYS","PRCPLO USER NAME",1,"Q")
"RTN","PRCHLO4A",31,0)
 I PRCHUSN="" S PRCPMSG(1)="There is no user name identified in the CLRS USER NAME Parameter.",PRCPMSG(2)="Please correct and retry." D MAILFTP S CLRSERR=1 Q
"RTN","PRCHLO4A",32,0)
 S PRCHUSN=$$DECRYP^XUSRB1(PRCHUSN)
"RTN","PRCHLO4A",33,0)
 S PRCHPSW=$$GET^XPAR("SYS","PRCPLO PASSWORD",1,"Q")
"RTN","PRCHLO4A",34,0)
 I PRCHPSW="" S PRCPMSG(1)="There is no password identified in the CLRS PASSWORD Parameter.",PRCPMSG(2)="Please correct and retry." D MAILFTP S CLRSERR=1 Q
"RTN","PRCHLO4A",35,0)
 S PRCHPSW=$$DECRYP^XUSRB1(PRCHPSW)
"RTN","PRCHLO4A",36,0)
 ; PRC*5.1*130 end
"RTN","PRCHLO4A",37,0)
 ;
"RTN","PRCHLO4A",38,0)
 I CLRSERR'=3  D
"RTN","PRCHLO4A",39,0)
 . N PONN  ; File number for File type
"RTN","PRCHLO4A",40,0)
 . S PONN=1
"RTN","PRCHLO4A",41,0)
 . F PONN=1:1:27  D
"RTN","PRCHLO4A",42,0)
 . . N FTY  ; File type F=Po Activity , G=GIP
"RTN","PRCHLO4A",43,0)
 . . ;
"RTN","PRCHLO4A",44,0)
 . . S FTY="F"
"RTN","PRCHLO4A",45,0)
 . . S OUTFLL1="CLRS"_STID_FTY_PONN_"WFTP.TXT"
"RTN","PRCHLO4A",46,0)
 . . D OPEN^%ZISH("FILE1",FILEDIR,OUTFLL1,"W")
"RTN","PRCHLO4A",47,0)
 . . I POP  D
"RTN","PRCHLO4A",48,0)
 . . . S CLRSERR=3
"RTN","PRCHLO4A",49,0)
 . . . Q
"RTN","PRCHLO4A",50,0)
 . . D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4A",51,0)
 . . D BLDF1
"RTN","PRCHLO4A",52,0)
 . . D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4A",53,0)
 . . Q
"RTN","PRCHLO4A",54,0)
 . Q
"RTN","PRCHLO4A",55,0)
 ;
"RTN","PRCHLO4A",56,0)
 I CLRSERR'=3  D
"RTN","PRCHLO4A",57,0)
 . ; RLL/PRC*5.1*104 change logic to create separate FTP
"RTN","PRCHLO4A",58,0)
 . ; tranfer files (1 for each file for Windows/Cache)
"RTN","PRCHLO4A",59,0)
 . N PONN  ; File number for file type
"RTN","PRCHLO4A",60,0)
 . S PONN=1
"RTN","PRCHLO4A",61,0)
 . F PONN=1:1:2  D
"RTN","PRCHLO4A",62,0)
 . . N FTY  ; File type F=Po Activity , G=GIP
"RTN","PRCHLO4A",63,0)
 . . S FTY="G"
"RTN","PRCHLO4A",64,0)
 . . S OUTFLL1="CLRS"_STID_FTY_PONN_"WFTP.TXT"
"RTN","PRCHLO4A",65,0)
 . . D OPEN^%ZISH("FILE1",FILEDIR,OUTFLL1,"W")
"RTN","PRCHLO4A",66,0)
 . . I POP  D
"RTN","PRCHLO4A",67,0)
 . . . S CLRSERR=3
"RTN","PRCHLO4A",68,0)
 . . . Q
"RTN","PRCHLO4A",69,0)
 . . D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4A",70,0)
 . . D BLDF1
"RTN","PRCHLO4A",71,0)
 . . D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4A",72,0)
 . . Q
"RTN","PRCHLO4A",73,0)
 . Q
"RTN","PRCHLO4A",74,0)
 Q
"RTN","PRCHLO4A",75,0)
BLDF1 ; RLL/PRC*5.1*104 added logic to create separate FTP
"RTN","PRCHLO4A",76,0)
 ; transfers (1 for each file)
"RTN","PRCHLO4A",77,0)
 ;
"RTN","PRCHLO4A",78,0)
 W "open "_ADDR,!  ;Connect to the Report Server
"RTN","PRCHLO4A",79,0)
 ; PRC*5.1*130 begin
"RTN","PRCHLO4A",80,0)
 ; Enter user name for Report Server Login
"RTN","PRCHLO4A",81,0)
 W PRCHUSN,!
"RTN","PRCHLO4A",82,0)
 ; Enter P/W for Report Server Login
"RTN","PRCHLO4A",83,0)
 W PRCHPSW,!
"RTN","PRCHLO4A",84,0)
 ; PRC*5.1*130 end
"RTN","PRCHLO4A",85,0)
 W "PUT "_FILEDIR_"IFCP"_STID_FTY_PONN_".TXT",!
"RTN","PRCHLO4A",86,0)
 W "bye",!  ; Exit FTP
"RTN","PRCHLO4A",87,0)
 ;
"RTN","PRCHLO4A",88,0)
 Q
"RTN","PRCHLO4A",89,0)
CKRPTSV ; Check for availability of report server
"RTN","PRCHLO4A",90,0)
 ; Several steps need to be performed
"RTN","PRCHLO4A",91,0)
 ; 1. Set up script to perform PING
"RTN","PRCHLO4A",92,0)
 ; 2. Capture log file during PING
"RTN","PRCHLO4A",93,0)
 ; 3. Read logfile into working global
"RTN","PRCHLO4A",94,0)
 ; 4. Determine Success/Failure of PING to server
"RTN","PRCHLO4A",95,0)
 ; 5. If successful, continue processing (CLRSERR=0)
"RTN","PRCHLO4A",96,0)
 ; 6. If problem occurs, S CLRSERR=3 and generate message
"RTN","PRCHLO4A",97,0)
 ;
"RTN","PRCHLO4A",98,0)
 I CKOS["VMS" D VMSPING  ; CKOS set in PRCHLO5
"RTN","PRCHLO4A",99,0)
 I CKOS["NT" D WINPING  ; CKOS set in PRCHLO5
"RTN","PRCHLO4A",100,0)
 Q
"RTN","PRCHLO4A",101,0)
VMSPING ; need to PING report server to make sure it is available
"RTN","PRCHLO4A",102,0)
 ;
"RTN","PRCHLO4A",103,0)
 ; 1. Create .COM file to execute
"RTN","PRCHLO4A",104,0)
 ;*98 Modified to work with PRC CLRS ADDRESS parameter
"RTN","PRCHLO4A",105,0)
 N FILEDIR,STID,OUTFLL2,ADDR
"RTN","PRCHLO4A",106,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",107,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",108,0)
 S ADDR=$$GET^XPAR("SYS","PRC CLRS ADDRESS",1,"Q")
"RTN","PRCHLO4A",109,0)
 I ADDR="" S PRCPMSG(1)="There is no address identified in the CLRS Address Parameter.",PRCPMSG(2)="Please correct and retry." D MAILFTP S CLRSERR=1 Q
"RTN","PRCHLO4A",110,0)
 ;
"RTN","PRCHLO4A",111,0)
 S OUTFLL2="CLRS"_STID_"PING.COM"
"RTN","PRCHLO4A",112,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFLL2,"W")
"RTN","PRCHLO4A",113,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4A",114,0)
 W "$ SET VERIFY=(PROCEDURE,IMAGE)",!
"RTN","PRCHLO4A",115,0)
 W "$ SET DEFAULT "_FILEDIR,!
"RTN","PRCHLO4A",116,0)
 W "$ TCPIP",!
"RTN","PRCHLO4A",117,0)
 W "PING "_ADDR,!
"RTN","PRCHLO4A",118,0)
 W "EXIT",!
"RTN","PRCHLO4A",119,0)
 W "$ EXIT 3",!
"RTN","PRCHLO4A",120,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4A",121,0)
 ;
"RTN","PRCHLO4A",122,0)
 ; 2. Execute .COM file, create logfile
"RTN","PRCHLO4A",123,0)
 S XPV1="S PV=$ZF(-1,""@"_FILEDIR_"CLRS"_STID_"PING.COM/OUTPUT="_FILEDIR_"CLRS"_STID_"PING.LOG"")"
"RTN","PRCHLO4A",124,0)
 X XPV1  ; Run the .com file
"RTN","PRCHLO4A",125,0)
 ;
"RTN","PRCHLO4A",126,0)
 ; 3. Read Logfile into working global
"RTN","PRCHLO4A",127,0)
 N FNAME,XLOG
"RTN","PRCHLO4A",128,0)
 S FNAME="CLRS"_STID_"PING.LOG"
"RTN","PRCHLO4A",129,0)
 S XLOG=$$FTG^%ZISH(FILEDIR,FNAME,$NAME(^TMP("PRCLRSLOG",$J,1)),3)
"RTN","PRCHLO4A",130,0)
 ; Check global for %SYSTEM or 0 packets received
"RTN","PRCHLO4A",131,0)
 N PNG,PNG1,PNG2,PNG3
"RTN","PRCHLO4A",132,0)
 S PNG=0,PNG1=0,PNG2=0
"RTN","PRCHLO4A",133,0)
 F  S PNG=$O(^TMP("PRCLRSLOG",$J,PNG)) Q:PNG=""  D
"RTN","PRCHLO4A",134,0)
 . S PNG1=$G(^TMP("PRCLRSLOG",$J,PNG))
"RTN","PRCHLO4A",135,0)
 . I PNG1["0 packets received" S CLRSERR=3
"RTN","PRCHLO4A",136,0)
 . I PNG1["%SYSTEM" S CLRSERR=3
"RTN","PRCHLO4A",137,0)
 . Q
"RTN","PRCHLO4A",138,0)
 Q
"RTN","PRCHLO4A",139,0)
WINPING ; PING report server to make sure it is available
"RTN","PRCHLO4A",140,0)
 ;*98 Modified to work with PRC CLRS ADDRESS parameter 
"RTN","PRCHLO4A",141,0)
 N PV,XPV1,FILEDIR,STID,XLOG,ADDR
"RTN","PRCHLO4A",142,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",143,0)
 S ADDR=$$GET^XPAR("SYS","PRC CLRS ADDRESS",1,"Q")
"RTN","PRCHLO4A",144,0)
 I ADDR="" S PRCPMSG(1)="There is no address identified in the CLRS Adress Parameter.",PRCPMSG(2)="Please correct and retry." D MAILFTP S CLRSERR=1 Q
"RTN","PRCHLO4A",145,0)
 ;
"RTN","PRCHLO4A",146,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",147,0)
 S XPV1="S PV=$ZF(-1,""PING "_ADDR_">"_FILEDIR_"CLRS"_STID_"PING.LOG"")"
"RTN","PRCHLO4A",148,0)
 X XPV1
"RTN","PRCHLO4A",149,0)
 S FNAME="CLRS"_STID_"PING.LOG"
"RTN","PRCHLO4A",150,0)
 S XLOG=$$FTG^%ZISH(FILEDIR,FNAME,$NAME(^TMP("PRCLRSLOG",$J,1)),3)
"RTN","PRCHLO4A",151,0)
 N PNG,PNG1,PNG2,PNG3
"RTN","PRCHLO4A",152,0)
 S PNG=0,PNG1=0,PNG2=0
"RTN","PRCHLO4A",153,0)
 F  S PNG=$O(^TMP("PRCLRSLOG",$J,PNG)) Q:PNG=""  D
"RTN","PRCHLO4A",154,0)
 . S PNG1=$G(^TMP("PRCLRSLOG",$J,PNG))
"RTN","PRCHLO4A",155,0)
 . I PNG1["Received = 0" S CLRSERR=3
"RTN","PRCHLO4A",156,0)
 . Q
"RTN","PRCHLO4A",157,0)
 Q
"RTN","PRCHLO4A",158,0)
 ;
"RTN","PRCHLO4A",159,0)
LOG2FILE ; Set logfile to global, add to mail message
"RTN","PRCHLO4A",160,0)
 ;
"RTN","PRCHLO4A",161,0)
 ;
"RTN","PRCHLO4A",162,0)
 N FILEDIR,STID,FNAME,XLOG
"RTN","PRCHLO4A",163,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",164,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",165,0)
 I CKOS["VMS" S FNAME="CLRS"_STID_"FTP1.LOG"
"RTN","PRCHLO4A",166,0)
 I CKOS["NT" S FNAME="CLRS"_STID_"F1FTP1.LOG"
"RTN","PRCHLO4A",167,0)
 S XLOG=$$FTG^%ZISH(FILEDIR,FNAME,$NAME(^TMP("PRCHLOG",$J,1)),3)
"RTN","PRCHLO4A",168,0)
 ; Log file is in the global ^TMP("PRCHLOG", lets put it in
"RTN","PRCHLO4A",169,0)
 ; the message beginning at PRCPMSG(11)
"RTN","PRCHLO4A",170,0)
 ;
"RTN","PRCHLO4A",171,0)
 N LG1,LG2,LG3,LG4,LGCNT
"RTN","PRCHLO4A",172,0)
 S LG1=0,LG2=0,LG3=0,LG4=0,LGCNT=11
"RTN","PRCHLO4A",173,0)
 F  S LG1=$O(^TMP("PRCHLOG",$J,LG1)) Q:LG1=""  D
"RTN","PRCHLO4A",174,0)
 . S LG3=$G(^TMP("PRCHLOG",$J,LG1))
"RTN","PRCHLO4A",175,0)
 . S PRCPMSG(LGCNT)=LG3
"RTN","PRCHLO4A",176,0)
 . S LGCNT=LGCNT+1
"RTN","PRCHLO4A",177,0)
 . Q
"RTN","PRCHLO4A",178,0)
 D MAILFTP
"RTN","PRCHLO4A",179,0)
 Q
"RTN","PRCHLO4A",180,0)
FTPCOM ; Issue the FTP command after CLRSxxxWFTP.TXT file is built
"RTN","PRCHLO4A",181,0)
 ; remain in CACHE during FTP Process using
"RTN","PRCHLO4A",182,0)
 ; $ZF(-1) call
"RTN","PRCHLO4A",183,0)
 ;
"RTN","PRCHLO4A",184,0)
 ; rll/ 8/30/2006 Change logic to initiate transfer one file
"RTN","PRCHLO4A",185,0)
 ; at a time to the report server for Windows/Cache stations
"RTN","PRCHLO4A",186,0)
 ; This was done after a hang was observed between transfers.
"RTN","PRCHLO4A",187,0)
 ;
"RTN","PRCHLO4A",188,0)
 N LPP1,LPP2
"RTN","PRCHLO4A",189,0)
 S LPP1=0,LPP2="F"
"RTN","PRCHLO4A",190,0)
 F LPP1=1:1:27  D  ; run the FTP command for the 27 PO files
"RTN","PRCHLO4A",191,0)
 . D RUNFTPT
"RTN","PRCHLO4A",192,0)
 . Q
"RTN","PRCHLO4A",193,0)
 S LPP1=0,LPP2="G"
"RTN","PRCHLO4A",194,0)
 F LPP1=1:1:2  D  ; run the FTP command for the 2 GIP files
"RTN","PRCHLO4A",195,0)
 . D RUNFTPT
"RTN","PRCHLO4A",196,0)
 . Q
"RTN","PRCHLO4A",197,0)
 Q
"RTN","PRCHLO4A",198,0)
 ;
"RTN","PRCHLO4A",199,0)
RUNFTPT ; Run the FTP transfer for Windows
"RTN","PRCHLO4A",200,0)
 N PV,XPV1,FILEDIR,STID
"RTN","PRCHLO4A",201,0)
 ;
"RTN","PRCHLO4A",202,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",203,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",204,0)
 ; SACC Exception received for usage of $ZF(-1) in PRC*5.1*83
"RTN","PRCHLO4A",205,0)
 ; See IFCAP Technical Manual
"RTN","PRCHLO4A",206,0)
 S XPV1="S PV=$ZF(-1,""ftp -s:"_FILEDIR_"CLRS"_STID_LPP2_LPP1_"WFTP.TXT>"_FILEDIR_"CLRS"_STID_LPP2_LPP1_"FTP1.LOG"")"
"RTN","PRCHLO4A",207,0)
 X XPV1  ; FTP the files, Comment out for testing
"RTN","PRCHLO4A",208,0)
 ;
"RTN","PRCHLO4A",209,0)
 ; error flag logic
"RTN","PRCHLO4A",210,0)
 I PV=-1  D  ; Note, this error is logged on system error during xfer
"RTN","PRCHLO4A",211,0)
 . S CLRSERR=1
"RTN","PRCHLO4A",212,0)
 . Q
"RTN","PRCHLO4A",213,0)
 Q
"RTN","PRCHLO4A",214,0)
DELWIN ; Delete windows files
"RTN","PRCHLO4A",215,0)
 ;
"RTN","PRCHLO4A",216,0)
 ;
"RTN","PRCHLO4A",217,0)
 I CKOS["NT"  D
"RTN","PRCHLO4A",218,0)
 . N LPP1,LPP2
"RTN","PRCHLO4A",219,0)
 . S LPP1=0,LPP2="F"
"RTN","PRCHLO4A",220,0)
 . F LPP1=1:1:27  D  ; run the FTP command for the 27 PO files
"RTN","PRCHLO4A",221,0)
 . . D DELFTPF
"RTN","PRCHLO4A",222,0)
 . . Q
"RTN","PRCHLO4A",223,0)
 . Q
"RTN","PRCHLO4A",224,0)
 S LPP1=0,LPP2="G"
"RTN","PRCHLO4A",225,0)
 F LPP1=1:1:2  D
"RTN","PRCHLO4A",226,0)
 . D DELFTPF  ; Delete the GIP files
"RTN","PRCHLO4A",227,0)
 . Q
"RTN","PRCHLO4A",228,0)
 Q
"RTN","PRCHLO4A",229,0)
DELFTPF ; Delete the FTP files, logs , and .TXT files
"RTN","PRCHLO4A",230,0)
 ;
"RTN","PRCHLO4A",231,0)
 N FILEDIR,STID,XPV
"RTN","PRCHLO4A",232,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",233,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",234,0)
 ; delete previous extract
"RTN","PRCHLO4A",235,0)
 S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"IFCP"_STID_LPP2_LPP1_".TXT"")"
"RTN","PRCHLO4A",236,0)
 X XPV  ; comment out for testing
"RTN","PRCHLO4A",237,0)
 ; delete previous logfile
"RTN","PRCHLO4A",238,0)
 ;
"RTN","PRCHLO4A",239,0)
 S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"CLRS"_STID_LPP2_LPP1_"FTP1.LOG"")"
"RTN","PRCHLO4A",240,0)
 X XPV  ; comment out for testing
"RTN","PRCHLO4A",241,0)
 ; delete previous ftp file for transfer
"RTN","PRCHLO4A",242,0)
 ;
"RTN","PRCHLO4A",243,0)
 S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"CLRS"_STID_LPP2_LPP1_"WFTP.TXT"")"
"RTN","PRCHLO4A",244,0)
 X XPV
"RTN","PRCHLO4A",245,0)
 Q
"RTN","PRCHLO4A",246,0)
 ;
"RTN","PRCHLO4A",247,0)
MAIL ;Builds mail messages to a defined mail group to notify users of the
"RTN","PRCHLO4A",248,0)
 ;success or failure of the TaskMan scheduling for the CLO Procurement
"RTN","PRCHLO4A",249,0)
 ;Reports
"RTN","PRCHLO4A",250,0)
 ;
"RTN","PRCHLO4A",251,0)
 ;*98 Modified code to work with PRC CLRS OUTLOOK MAILGROUP parameter
"RTN","PRCHLO4A",252,0)
 N XMDUZ,XMMG,XMSUB,XMTEXT,XMY,XMZ,PRCPMG,PRCPMG2
"RTN","PRCHLO4A",253,0)
 S XMSUB="CLO Procurement Report Status for "_$$HTE^XLFDT($H)
"RTN","PRCHLO4A",254,0)
 S XMDUZ="Clinical Logistics Report Server"
"RTN","PRCHLO4A",255,0)
 S XMTEXT="PRCPMSG("
"RTN","PRCHLO4A",256,0)
 S XMY("G.PRCPLO CLRS NOTIFICATIONS")=""
"RTN","PRCHLO4A",257,0)
 S PRCPMG=$$GET^XPAR("SYS","PRC CLRS OUTLOOK MAILGROUP",1,"Q")
"RTN","PRCHLO4A",258,0)
 S:$G(PRCPMG)'="" PRCPMG2="S XMY("""_PRCPMG_""")=""""" X PRCPMG2
"RTN","PRCHLO4A",259,0)
 ;
"RTN","PRCHLO4A",260,0)
 D ^XMD
"RTN","PRCHLO4A",261,0)
 Q
"RTN","PRCHLO4A",262,0)
 ;
"RTN","PRCHLO4A",263,0)
MAILFTP ;Builds mail messages to a defined mail group to notify users of
"RTN","PRCHLO4A",264,0)
 ;the success or failure of issues pertaining to FTP Transfer and
"RTN","PRCHLO4A",265,0)
 ;file permissions/protections associated with VMS Directories
"RTN","PRCHLO4A",266,0)
 ;
"RTN","PRCHLO4A",267,0)
 ;*98 Modified code to work with PRC CLRS OUTLOOK MAILGROUP parameter
"RTN","PRCHLO4A",268,0)
 N XMDUZ,XMMG,XMSUB,XMTEXT,XMY,XMZ,PRCPMG,PRCPMG2
"RTN","PRCHLO4A",269,0)
 S XMSUB="CLO Environment Check & Data Transfer for OS / FTP , "_$$HTE^XLFDT($H)
"RTN","PRCHLO4A",270,0)
 S XMDUZ="Clinical Logistics Report Server"
"RTN","PRCHLO4A",271,0)
 S XMTEXT="PRCPMSG("
"RTN","PRCHLO4A",272,0)
 S XMY("G.PRCPLO CLRS NOTIFICATIONS")=""
"RTN","PRCHLO4A",273,0)
 S PRCPMG=$$GET^XPAR("SYS","PRC CLRS OUTLOOK MAILGROUP",1,"Q")
"RTN","PRCHLO4A",274,0)
 S:$G(PRCPMG)'="" PRCPMG2="S XMY("""_PRCPMG_""")=""""" X PRCPMG2
"RTN","PRCHLO4A",275,0)
 ;
"RTN","PRCHLO4A",276,0)
 D ^XMD
"RTN","PRCHLO4A",277,0)
 Q
"RTN","PRCHLO6")
0^11^B135328049^B136943569
"RTN","PRCHLO6",1,0)
PRCHLO6 ;WOIFO/AS-EXTRACT ROUTINE (cont.)CLO REPORT SERVER ; 10/8/10 1:11pm
"RTN","PRCHLO6",2,0)
 ;;5.1;IFCAP;**130,140,151,154**;Oct 20, 2000;Build 5
"RTN","PRCHLO6",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRCHLO6",4,0)
 ; DBIA 10093 - Read file 49 via FileMan.
"RTN","PRCHLO6",5,0)
 ; Continuation of PRCHLO1. This program builds the extracts for
"RTN","PRCHLO6",6,0)
 ; the Master PO Table and the associated multiples
"RTN","PRCHLO6",7,0)
GET410 ; get file 410 record
"RTN","PRCHLO6",8,0)
 S U="^"
"RTN","PRCHLO6",9,0)
 N PRCND,PRCIEN,PRCDT,PRCTMP,PRCTMB,PRCTR,PRCFR,PRCDAT,PRCDATO,PRCDATA,D0,X
"RTN","PRCHLO6",10,0)
 N PRCDUZ,PRCIX,PRCAUIEN,PRCARY
"RTN","PRCHLO6",11,0)
 ; loop through file 410
"RTN","PRCHLO6",12,0)
 S PRCIEN=0,PRCDT=""
"RTN","PRCHLO6",13,0)
 F  S PRCIEN=$O(^PRCS(410,PRCIEN)) Q:'PRCIEN  D
"RTN","PRCHLO6",14,0)
 . S PRCND=$G(^PRCS(410,PRCIEN,0))       ;NODE 0
"RTN","PRCHLO6",15,0)
 . S PRCTR=$P(PRCND,U,2)                       ;TRANSACTION TYPE
"RTN","PRCHLO6",16,0)
 . S PRCFR=$P(PRCND,U,4)                       ;FORM TYPE
"RTN","PRCHLO6",17,0)
 . S PRCDAT=$P($G(^PRCS(410,PRCIEN,1)),U,1)    ;DATE OF REQUEST
"RTN","PRCHLO6",18,0)
 . S PRCDATO=$P($G(^PRCS(410,PRCIEN,4)),U,4)   ;DATE OBLIGATED
"RTN","PRCHLO6",19,0)
 . S PRCDATA=$P($G(^PRCS(410,PRCIEN,4)),U,7)   ;DATE OBLIGATED ADJ
"RTN","PRCHLO6",20,0)
 . ;TRANS TYPE IS ADJUSTMENT, FORM TYPE IS NOT NULL NOT ISSUE BOOK
"RTN","PRCHLO6",21,0)
 . I PRCTR="A",PRCFR,PRCFR'=5,PRCDAT>CLOBGN,PRCDAT<CLOEND D DAT410 Q
"RTN","PRCHLO6",22,0)
 . ;TRANS TYPE IS ADJUSTMENT, FORM TYPE ISSUE BOOK
"RTN","PRCHLO6",23,0)
 . I PRCTR="A",PRCFR=5,PRCDATO>CLOBGN,PRCDATO<CLOEND D DAT410 Q
"RTN","PRCHLO6",24,0)
 . ;TRANS TYPE IS OBLIGATION, WITH ANY FORM TYPE
"RTN","PRCHLO6",25,0)
 . I PRCTR="O",PRCFR,PRCDAT>CLOBGN,PRCDAT<CLOEND D DAT410 Q
"RTN","PRCHLO6",26,0)
 . ;TRANS TYPE IS CEILING, WITHOUT FORM TYPE
"RTN","PRCHLO6",27,0)
 . I PRCTR="C",PRCDATO>CLOBGN,PRCDATO<CLOEND D DAT410 Q
"RTN","PRCHLO6",28,0)
 . ;TRANS TYPE IS ADJUSTMENT, WITHOUT FORM TYPE
"RTN","PRCHLO6",29,0)
 . I PRCTR="A",'PRCFR,PRCDATA>CLOBGN,PRCDATA<CLOEND D DAT410 Q
"RTN","PRCHLO6",30,0)
 . Q
"RTN","PRCHLO6",31,0)
 Q
"RTN","PRCHLO6",32,0)
DAT410 ;
"RTN","PRCHLO6",33,0)
 S PRCDT=$P(PRCND,U,1)_U               ;TRANSACTION NUMBER
"RTN","PRCHLO6",34,0)
 S PRCDT=PRCDT_PRCIEN_U       ;TRANSACTION IEN
"RTN","PRCHLO6",35,0)
 S PRCDT=PRCDT_$P(PRCND,U,5)_U               ;STATION NUMBER
"RTN","PRCHLO6",36,0)
 S PRCDT=PRCDT_MNTHYR_U               ;Month,Year of extract
"RTN","PRCHLO6",37,0)
 S PRCDT=PRCDT_$$GET1^DIQ(410,PRCIEN_",",1)_U      ;TRANSACTION TYPE
"RTN","PRCHLO6",38,0)
 S PRCDT=PRCDT_$S(PRCFR>0:$P($G(^PRCS(410.5,PRCFR,0)),U),1:"")_U   ;FORM TYPE
"RTN","PRCHLO6",39,0)
 S X=$P(PRCND,U,10),PRCDT=PRCDT_X_U_$S(X>0:$P($G(^PRC(411,X,0)),U),1:"")_U              ;SUBSTATION -internal and external
"RTN","PRCHLO6",40,0)
 S X=$P(PRCND,U,11),PRCDT=PRCDT_$S(X>0:$$FMTE^XLFDT($P(X,".")),1:"")_U   ;RUNNING BAL QTR DATE
"RTN","PRCHLO6",41,0)
 S PRCDT=PRCDT_$$GET1^DIQ(410,PRCIEN_",",450)_U     ;RUNNING BAL STATUS
"RTN","PRCHLO6",42,0)
 S PRCND=$G(^PRCS(410,PRCIEN,1))       ;NODE 1
"RTN","PRCHLO6",43,0)
 S X=$P(PRCND,U,1),PRCDT=PRCDT_$S(X>0:$$FMTE^XLFDT($P(X,".")),1:"")_U    ;DATE OF REQUEST
"RTN","PRCHLO6",44,0)
 S PRCDT=PRCDT_$P(PRCND,U,5)_U               ;CLASS OF REQUEST IEN
"RTN","PRCHLO6",45,0)
 S PRCTMP=$P($G(^PRCS(410.2,+$P(PRCND,U,5),0)),U)
"RTN","PRCHLO6",46,0)
 S PRCDT=PRCDT_PRCTMP_U                      ;CLASS OF REQUEST EXT
"RTN","PRCHLO6",47,0)
 S PRCND=$G(^PRCS(410,PRCIEN,2))       ;NODE 2
"RTN","PRCHLO6",48,0)
 S PRCDT=PRCDT_$P(PRCND,U,1)_U               ;VENDOR
"RTN","PRCHLO6",49,0)
 S PRCDT=PRCDT_$P(PRCND,U,2)_U               ;VENDOR ADDRESS1
"RTN","PRCHLO6",50,0)
 S PRCDT=PRCDT_$P(PRCND,U,3)_U               ;VENDOR ADDRESS2
"RTN","PRCHLO6",51,0)
 S PRCDT=PRCDT_$P(PRCND,U,4)_U               ;VENDOR ADDRESS3
"RTN","PRCHLO6",52,0)
 S PRCDT=PRCDT_$P(PRCND,U,5)_U               ;VENDOR ADDRESS4
"RTN","PRCHLO6",53,0)
 S PRCDT=PRCDT_$P(PRCND,U,6)_U               ;VENDOR CITY
"RTN","PRCHLO6",54,0)
 S X=$P(PRCND,U,7),PRCDT=PRCDT_$S(X>0:$$GET1^DIQ(5,X_",",1),1:"")_U   ;VENDOR STATE
"RTN","PRCHLO6",55,0)
 S PRCDT=PRCDT_$P(PRCND,U,8)_U               ;VENDOR ZIP CODE
"RTN","PRCHLO6",56,0)
 S PRCDT=PRCDT_$P(PRCND,U,9)_U               ;VENDOR CONTACT
"RTN","PRCHLO6",57,0)
 S PRCDT=PRCDT_$P(PRCND,U,10)_U              ;VENDOR PHONE NO.
"RTN","PRCHLO6",58,0)
 S PRCND=$G(^PRCS(410,PRCIEN,3))       ;NODE 3
"RTN","PRCHLO6",59,0)
 S PRCTMP=$P(PRCND,U,4)
"RTN","PRCHLO6",60,0)
 S PRCDT=PRCDT_PRCTMP_U,PRCTMP=+PRCTMP           ;VENDOR IEN
"RTN","PRCHLO6",61,0)
 S PRCTMB=$P($G(^PRC(440,PRCTMP,0)),U,1)     ;
"RTN","PRCHLO6",62,0)
 S PRCDT=PRCDT_PRCTMB_U                      ;VENDOR NAME
"RTN","PRCHLO6",63,0)
 S PRCTMB=$P($G(^PRC(440,PRCTMP,3)),U,4)     ;
"RTN","PRCHLO6",64,0)
 S PRCDT=PRCDT_PRCTMB_U                      ;VENDOR FMS CODE
"RTN","PRCHLO6",65,0)
 S PRCTMB=$P($G(^PRC(440,PRCTMP,3)),U,5)
"RTN","PRCHLO6",66,0)
 S PRCDT=PRCDT_PRCTMB_U                      ;VENDOR ALT-ADDR-IND
"RTN","PRCHLO6",67,0)
 S PRCTMB=$P($G(^PRC(440,PRCTMP,7)),U,12)
"RTN","PRCHLO6",68,0)
 S PRCDT=PRCDT_PRCTMB_U                      ;VENDOR D & B
"RTN","PRCHLO6",69,0)
 S PRCDT=PRCDT_$P(PRCND,U,10)_U              ;VENDOR CONTRACT NUMBER
"RTN","PRCHLO6",70,0)
 S PRCDT=PRCDT_$P(PRCND,U,1)_U               ;CONTROL POINT
"RTN","PRCHLO6",71,0)
 S PRCDT=PRCDT_$P(PRCND,U,3)_U               ;COST CENTER
"RTN","PRCHLO6",72,0)
 S PRCDT=PRCDT_$P(PRCND,U,6)_U               ;BOC1
"RTN","PRCHLO6",73,0)
 S PRCDT=PRCDT_$P(PRCND,U,7)_U               ;BOC1 $ AMOUNT
"RTN","PRCHLO6",74,0)
 S PRCDT=PRCDT_$P(PRCND,U,2)_U               ;ACCOUNTING DATA
"RTN","PRCHLO6",75,0)
 S PRCDT=PRCDT_$P(PRCND,U,12)_U              ;FCP/PRJ
"RTN","PRCHLO6",76,0)
 S X=$P(PRCND,U,11),PRCDT=PRCDT_$S(X>0:$E(X+17000000,1,4),1:"")_U    ;BBFY
"RTN","PRCHLO6",77,0)
 S PRCND=$G(^PRCS(410,PRCIEN,4))       ;NODE 4
"RTN","PRCHLO6",78,0)
 S PRCDT=PRCDT_$P(PRCND,U,1)_U               ;COMMITTED (EST.) COST
"RTN","PRCHLO6",79,0)
 S X=$P(PRCND,U,2),PRCDT=PRCDT_$S(X>0:$$FMTE^XLFDT($P(X,".")),1:"")_U  ;DATE COMMITTED
"RTN","PRCHLO6",80,0)
 S PRCDT=PRCDT_$P(PRCND,U,3)_U               ;OBLIGATED ACTUAL COST
"RTN","PRCHLO6",81,0)
 S X=$P(PRCND,U,4),PRCDT=PRCDT_$S(X>0:$$FMTE^XLFDT($P(X,".")),1:"")_U   ;DATE OBLIGATED
"RTN","PRCHLO6",82,0)
 S PRCDT=PRCDT_$P(PRCND,U,5)_U               ;PO / OBLIGATION NO
"RTN","PRCHLO6",83,0)
 S PRCDT=PRCDT_$P(PRCND,U,6)_U               ;ADJUSTMENT AMOUNT
"RTN","PRCHLO6",84,0)
 S X=$P(PRCND,U,7),PRCDT=PRCDT_$S(X>0:$$FMTE^XLFDT($P(X,".")),1:"")_U   ;DATE OBL ADJUSTED
"RTN","PRCHLO6",85,0)
 S PRCDT=PRCDT_$P(PRCND,U,8)_U               ;TRANSACTION AMOUNT
"RTN","PRCHLO6",86,0)
 S PRCDUZ=$P(PRCND,U,9),PRCTMP=$P($G(^VA(200,+PRCDUZ,0)),U)
"RTN","PRCHLO6",87,0)
 S PRCDT=PRCDT_PRCDUZ_U                      ;OBLIGATED BY DUZ
"RTN","PRCHLO6",88,0)
 S PRCDT=PRCDT_PRCTMP_U                      ;OBLIGATED BY NAME
"RTN","PRCHLO6",89,0)
 S PRCDUZ=$P($G(^VA(200,+PRCDUZ,5)),U)
"RTN","PRCHLO6",90,0)
 S PRCTMP=$S(PRCDUZ="":"",1:$$GET1^DIQ(49,+PRCDUZ_",",.01))
"RTN","PRCHLO6",91,0)
 S PRCDT=PRCDT_PRCDUZ_U_PRCTMP_U             ;OBLIGATED SERVICE INT/EXT
"RTN","PRCHLO6",92,0)
 S X=$P(PRCND,U,13),PRCDT=PRCDT_$S(X>0:$TR($$FMTE^XLFDT(X),"@"," "),1:"")_U ;OBL VAL CODE DATE/TIME
"RTN","PRCHLO6",93,0)
 S PRCND=$G(^PRCS(410,PRCIEN,7))       ;NODE 7
"RTN","PRCHLO6",94,0)
 S PRCDUZ=$P(PRCND,U,1),PRCTMP=$P($G(^VA(200,+PRCDUZ,0)),U)
"RTN","PRCHLO6",95,0)
 S PRCDT=PRCDT_PRCDUZ_U                      ;REQUESTOR DUZ
"RTN","PRCHLO6",96,0)
 S PRCDT=PRCDT_PRCTMP_U                      ;REQUESTOR NAME
"RTN","PRCHLO6",97,0)
 S PRCDUZ=$P($G(^VA(200,+PRCDUZ,5)),U)
"RTN","PRCHLO6",98,0)
 S PRCTMP=$S(PRCDUZ="":"",1:$$GET1^DIQ(49,+PRCDUZ_",",.01))
"RTN","PRCHLO6",99,0)
 S PRCDT=PRCDT_PRCDUZ_U_PRCTMP_U             ;REQUESTOR SERVICE INT/EXT
"RTN","PRCHLO6",100,0)
 S PRCDT=PRCDT_$P(PRCND,U,2)_U               ;REQUESTOR'S TITLE
"RTN","PRCHLO6",101,0)
 S PRCDUZ=$P(PRCND,U,3),PRCTMP=$P($G(^VA(200,+PRCDUZ,0)),U)
"RTN","PRCHLO6",102,0)
 S PRCDT=PRCDT_PRCDUZ_U                      ;APPROVING OFFICIAL DUZ
"RTN","PRCHLO6",103,0)
 S PRCDT=PRCDT_PRCTMP_U                      ;APPROVING OFFICIAL NAME
"RTN","PRCHLO6",104,0)
 S PRCDUZ=$P($G(^VA(200,+PRCDUZ,5)),U)
"RTN","PRCHLO6",105,0)
 S PRCTMP=$S(PRCDUZ="":"",1:$$GET1^DIQ(49,+PRCDUZ_",",.01))
"RTN","PRCHLO6",106,0)
 S PRCDT=PRCDT_PRCDUZ_U_PRCTMP_U             ;APPROVING OFFICIAL SERVICE INT/EXT
"RTN","PRCHLO6",107,0)
 S PRCDT=PRCDT_$P(PRCND,U,4)_U               ;APPROVING OFFICIAL TITLE
"RTN","PRCHLO6",108,0)
 S X=$P(PRCND,U,5),PRCDT=PRCDT_$S(X>0:$$FMTE^XLFDT($P(X,".")),1:"")_U  ;DATE SIGNED (APPROVED)
"RTN","PRCHLO6",109,0)
 S X=$P(PRCND,U,7),PRCDT=PRCDT_$S(X>0:$TR($$FMTE^XLFDT(X),"@"," "),1:"")_U   ;ES CODE DATE/TIME
"RTN","PRCHLO6",110,0)
 S ^TMP($J,"CONTRP",PRCIEN,1)=PRCDT,PRCDT=""
"RTN","PRCHLO6",111,0)
 S PRCTMB=8 D WORDFLD                  ;NODE 8
"RTN","PRCHLO6",112,0)
 S PRCDT=PRCDT_PRCTMP_U                      ;JUSTIFICATION
"RTN","PRCHLO6",113,0)
 S ^TMP($J,"CONTRP",PRCIEN,2)=PRCDT,PRCDT=""
"RTN","PRCHLO6",114,0)
 S PRCND=$G(^PRCS(410,PRCIEN,11))      ;NODE 11
"RTN","PRCHLO6",115,0)
 S PRCTMP=$$GET1^DIQ(410,PRCIEN_",",49)
"RTN","PRCHLO6",116,0)
 S PRCDT=PRCDT_PRCTMP_U                      ;SORT GROUP EXTERNAL
"RTN","PRCHLO6",117,0)
 S PRCND=$G(^PRCS(410,PRCIEN,10))      ;NODE 10
"RTN","PRCHLO6",118,0)
 S PRCTMP=$P(PRCND,U,3),PRCTMB=$P($G(^PRC(442,+PRCTMP,0)),U)
"RTN","PRCHLO6",119,0)
 S PRCDT=PRCDT_PRCTMP_U                      ;STATION NO - P.O.NO IEN
"RTN","PRCHLO6",120,0)
 S PRCDT=PRCDT_PRCTMB_U                      ;STATION NO - P.O.NO EXT
"RTN","PRCHLO6",121,0)
 S PRCDT=PRCDT_$$PODATE(PRCTMP)_U            ;PO DATE
"RTN","PRCHLO6",122,0)
 S D0=PRCIEN D STATUS^PRCSES
"RTN","PRCHLO6",123,0)
 S PRCDT=PRCDT_X_U                           ;STATUS
"RTN","PRCHLO6",124,0)
 S PRCTMB="CO" D WORDFLD               ;NODE CO
"RTN","PRCHLO6",125,0)
 S PRCDT=PRCDT_PRCTMP_U                      ;COMMENTS
"RTN","PRCHLO6",126,0)
 S ^TMP($J,"CONTRP",PRCIEN,3)=PRCDT,PRCDT=""
"RTN","PRCHLO6",127,0)
 S PRCTMB=13 D WORDFLD                 ;NODE 13
"RTN","PRCHLO6",128,0)
 S PRCDT=PRCDT_PRCTMP                        ;REASON FOR RETURN
"RTN","PRCHLO6",129,0)
 S ^TMP($J,"CONTRP",PRCIEN,4)=PRCDT_U
"RTN","PRCHLO6",130,0)
 ;;authority;sub-authority                   ;AUTHORITY/SUB-AUTHORITY
"RTN","PRCHLO6",131,0)
 S PRCDT=""
"RTN","PRCHLO6",132,0)
 S PRCND=$G(^PRCS(410,PRCIEN,11))      ;NODE 11
"RTN","PRCHLO6",133,0)
 F PRCIX=4,5 D
"RTN","PRCHLO6",134,0)
 . S PRCAUIEN=$P(PRCND,U,PRCIX)  ;auth ien
"RTN","PRCHLO6",135,0)
 . S PRCDT=$S(PRCIX=4:PRCAUIEN,1:PRCDT_U_PRCAUIEN)
"RTN","PRCHLO6",136,0)
 . D GETS^DIQ(410.9,+PRCAUIEN_",",".01;.02","","PRCARY")
"RTN","PRCHLO6",137,0)
 . S PRCDT=PRCDT_U_$G(PRCARY(410.9,+PRCAUIEN_",",.01))_U_$G(PRCARY(410.9,+PRCAUIEN_",",.02))
"RTN","PRCHLO6",138,0)
 ;;service dates                             ;SERVICE DATES
"RTN","PRCHLO6",139,0)
 S PRCND=$G(^PRCS(410,PRCIEN,1))      ;NODE 1
"RTN","PRCHLO6",140,0)
 F PRCIX=6,7 D
"RTN","PRCHLO6",141,0)
 . S PRCDT=PRCDT_U_$$FMTE^XLFDT($P(PRCND,U,PRCIX))
"RTN","PRCHLO6",142,0)
 S ^TMP($J,"CONTRP",PRCIEN,5)=PRCDT
"RTN","PRCHLO6",143,0)
 ;
"RTN","PRCHLO6",144,0)
 D GET4104
"RTN","PRCHLO6",145,0)
 Q
"RTN","PRCHLO6",146,0)
GET4104 ; GET DATA FROM SUBFILE 410.04
"RTN","PRCHLO6",147,0)
 N PRCX S PRCX=$P(^PRCS(410,PRCIEN,0),U)_U_PRCIEN_U_$P(^(0),U,5)_U
"RTN","PRCHLO6",148,0)
 S X=$P($G(^PRCS(410,PRCIEN,10)),U,3),PRCX=PRCX_$S(X>0:X_U_$P($G(^PRC(442,X,0)),U),1:U)_U_$$PODATE(X)_U_MNTHYR_U
"RTN","PRCHLO6",149,0)
 N PRCTMI
"RTN","PRCHLO6",150,0)
 S PRCTMI=0 F  S PRCTMI=$O(^PRCS(410,PRCIEN,12,PRCTMI)) Q:'PRCTMI  D
"RTN","PRCHLO6",151,0)
 . S PRCDT=PRCX
"RTN","PRCHLO6",152,0)
 . S PRCND=$G(^PRCS(410,PRCIEN,12,PRCTMI,0))
"RTN","PRCHLO6",153,0)
 . S PRCDT=PRCDT_$P($G(^PRCS(410.4,+$P(PRCND,U,1),0)),U)_U  ;SUB-CONTROL POINT
"RTN","PRCHLO6",154,0)
 . S PRCDT=PRCDT_$P(PRCND,U,2)_U              ;AMOUNT
"RTN","PRCHLO6",155,0)
 . S PRCTMB=$$GET1^DIQ(410.04,PRCTMI_","_PRCIEN_",",2)
"RTN","PRCHLO6",156,0)
 . S PRCDT=PRCDT_PRCTMB                       ;SCP AMOUNT
"RTN","PRCHLO6",157,0)
 . S ^TMP($J,"SUBCP",PRCIEN,PRCTMI)=PRCDT
"RTN","PRCHLO6",158,0)
 Q
"RTN","PRCHLO6",159,0)
WORDFLD ; PROCESS WORD FIELD
"RTN","PRCHLO6",160,0)
 N PRCTMI,PRCTMJ,PRCTMQ
"RTN","PRCHLO6",161,0)
 S PRCTMI=$P($G(^PRCS(410,PRCIEN,PRCTMB,0)),U,3),PRCTMP="",PRCTMQ=0
"RTN","PRCHLO6",162,0)
 I PRCTMI D
"RTN","PRCHLO6",163,0)
 . F PRCTMI=1:1:PRCTMI D  Q:PRCTMQ
"RTN","PRCHLO6",164,0)
 .. S PRCTMJ=$G(^PRCS(410,PRCIEN,PRCTMB,PRCTMI,0))_" "
"RTN","PRCHLO6",165,0)
 .. I $F(PRCTMJ,"^") S PRCTMJ=$TR(PRCTMJ,"^","*")    ;CONVERT ^ TO *
"RTN","PRCHLO6",166,0)
 .. I $L(PRCTMJ)+$L(PRCTMP)>200 S PRCTMP=$E(PRCTMP_PRCTMJ,1,200) S PRCTMQ=1 Q  ; CANNOT ALLOW STRING 'PRCDT' TO EXCEED 256 BYTES, SO LIMITING WORD PROC FIELD TO 200 CHARS
"RTN","PRCHLO6",167,0)
 .. S PRCTMP=PRCTMP_PRCTMJ
"RTN","PRCHLO6",168,0)
 Q
"RTN","PRCHLO6",169,0)
 ;
"RTN","PRCHLO6",170,0)
GET424 ;
"RTN","PRCHLO6",171,0)
 S U="^"
"RTN","PRCHLO6",172,0)
 N PRCND,PRCIEN,PRCDT,PRCTMP,PRCTMB,PRCC,X
"RTN","PRCHLO6",173,0)
 ; loop through file 424, "C" Cross Reference
"RTN","PRCHLO6",174,0)
 S PRCC=0
"RTN","PRCHLO6",175,0)
 F  S PRCC=$O(^PRC(424,"C",PRCC)) Q:'PRCC  D
"RTN","PRCHLO6",176,0)
 . I $D(^TMP($J,"POMAST",PRCC)) D DAT424
"RTN","PRCHLO6",177,0)
 D GET4241
"RTN","PRCHLO6",178,0)
 Q
"RTN","PRCHLO6",179,0)
DAT424 ;
"RTN","PRCHLO6",180,0)
 N PRCPOID
"RTN","PRCHLO6",181,0)
 S PRCIEN=0
"RTN","PRCHLO6",182,0)
 F  S PRCIEN=$O(^PRC(424,"C",PRCC,PRCIEN)) Q:'PRCIEN  D
"RTN","PRCHLO6",183,0)
 . S PRCDT=""
"RTN","PRCHLO6",184,0)
 . S PRCND=$G(^PRC(424,PRCIEN,0))          ;NODE 0
"RTN","PRCHLO6",185,0)
 . S (PRCPOID,X,Y)=$P(PRCND,U,2),PRCDT=PRCDT_X_U       ;OBLIGATION INT
"RTN","PRCHLO6",186,0)
 . S X=$S(X>0:$P($G(^PRC(442,X,0)),U),1:""),PRCDT=PRCDT_X_U  ; OBL EXT
"RTN","PRCHLO6",187,0)
 . S PRCDT=PRCDT_$$PODATE(PRCPOID)_U           ;PO DATE
"RTN","PRCHLO6",188,0)
 . S PRCDT=PRCDT_MNTHYR_U                      ;Month,Year of extract
"RTN","PRCHLO6",189,0)
 . S PRCDT=PRCDT_$P(X,"-")_U                   ;STATION #
"RTN","PRCHLO6",190,0)
 . S PRCDT=PRCDT_$P(PRCND,U,1)_U               ;AUTHORIZATION #
"RTN","PRCHLO6",191,0)
 . S PRCDT=PRCDT_$$GET1^DIQ(424,PRCIEN_",",.03)_U     ;TRANSACTION TYPE
"RTN","PRCHLO6",192,0)
 . S PRCDT=PRCDT_$P(PRCND,U,4)_U               ;LIQUIDATION AMOUNT
"RTN","PRCHLO6",193,0)
 . S PRCDT=PRCDT_$P(PRCND,U,5)_U               ;AUTHORIZATION BALANCE
"RTN","PRCHLO6",194,0)
 . S PRCDT=PRCDT_$P(PRCND,U,6)_U               ;OBLIGATION AMOUNT
"RTN","PRCHLO6",195,0)
 . S X=$P(PRCND,U,7),PRCDT=PRCDT_$S(X>0:$$FMTE^XLFDT($P(X,".")),1:"")_U  ;DATE/TIME
"RTN","PRCHLO6",196,0)
 . S PRCDUZ=$P(PRCND,U,8),PRCTMP=$P($G(^VA(200,+PRCDUZ,0)),U)
"RTN","PRCHLO6",197,0)
 . S PRCDT=PRCDT_PRCDUZ_U                      ;USER DUZ
"RTN","PRCHLO6",198,0)
 . S PRCDT=PRCDT_PRCTMP_U                      ;USER NAME
"RTN","PRCHLO6",199,0)
 . S PRCDUZ=$P($G(^VA(200,+PRCDUZ,5)),U)
"RTN","PRCHLO6",200,0)
 . S PRCTMP=$S(PRCDUZ="":"",1:$$GET1^DIQ(49,+PRCDUZ_",",.01))
"RTN","PRCHLO6",201,0)
 . S PRCDT=PRCDT_PRCDUZ_U_PRCTMP_U             ;USER SERVICE INT/EXT
"RTN","PRCHLO6",202,0)
 . S PRCDT=PRCDT_$$GET1^DIQ(424,PRCIEN_",",.09)_U    ;COMPLETED FLAG
"RTN","PRCHLO6",203,0)
 . S PRCDT=PRCDT_$P(PRCND,U,10)_U              ;REFERENCE
"RTN","PRCHLO6",204,0)
 . S PRCDT=PRCDT_$P(PRCND,U,11)_U              ;LAST SEQUENCE USED
"RTN","PRCHLO6",205,0)
 . S PRCDT=PRCDT_$P(PRCND,U,12)_U              ;AUTHORIZATION AMOUNT
"RTN","PRCHLO6",206,0)
 . S PRCDT=PRCDT_$P(PRCND,U,13)_U              ;ORIGINAL AUTH. AMOUNT
"RTN","PRCHLO6",207,0)
 . S PRCDUZ=$P(PRCND,U,14),PRCTMP=$P($G(^VA(200,+PRCDUZ,0)),U)
"RTN","PRCHLO6",208,0)
 . S PRCDT=PRCDT_PRCDUZ_U                      ;LAST EDITED BY DUZ
"RTN","PRCHLO6",209,0)
 . S PRCDT=PRCDT_PRCTMP_U                      ;LAST EDITED BY NAME
"RTN","PRCHLO6",210,0)
 . S PRCDUZ=$P($G(^VA(200,+PRCDUZ,5)),U)
"RTN","PRCHLO6",211,0)
 . S PRCTMP=$S(PRCDUZ="":"",1:$$GET1^DIQ(49,+PRCDUZ_",",.01))
"RTN","PRCHLO6",212,0)
 . S PRCDT=PRCDT_PRCDUZ_U_PRCTMP_U             ;LAST EDITED BY SERVICE INT/EXT
"RTN","PRCHLO6",213,0)
 . S PRCTMP=$P(PRCND,U,15),PRCTMP=$P($G(^PRCS(410,+PRCTMP,0)),U)
"RTN","PRCHLO6",214,0)
 . S PRCDT=PRCDT_$P(PRCND,U,15)_U              ;CPA POINTER IEN
"RTN","PRCHLO6",215,0)
 . S PRCDT=PRCDT_PRCTMP_U                      ;CPA POINTER EXT
"RTN","PRCHLO6",216,0)
 . S PRCND=$G(^PRC(424,PRCIEN,1))       ;NODE 1
"RTN","PRCHLO6",217,0)
 . S PRCDT=PRCDT_$P(PRCND,U,1)_U               ;COMMENTS
"RTN","PRCHLO6",218,0)
 . S PRCND=$G(^PRC(424,PRCIEN,2))       ;NODE 2
"RTN","PRCHLO6",219,0)
 . S PRCDT=PRCDT_$P(PRCND,U,2)                 ;INTERFACE ID
"RTN","PRCHLO6",220,0)
 . S ^TMP($J,"DR1358",PRCIEN,1)=PRCDT
"RTN","PRCHLO6",221,0)
 Q
"RTN","PRCHLO6",222,0)
GET4241 ;
"RTN","PRCHLO6",223,0)
 ; loop through file 424.1
"RTN","PRCHLO6",224,0)
 S PRCC=0
"RTN","PRCHLO6",225,0)
 F  S PRCC=$O(^PRC(424.1,"C",PRCC)) Q:'PRCC  D
"RTN","PRCHLO6",226,0)
 . I $D(^TMP($J,"DR1358",PRCC)) D DAT4241
"RTN","PRCHLO6",227,0)
 Q
"RTN","PRCHLO6",228,0)
DAT4241 ;
"RTN","PRCHLO6",229,0)
 N Y,PRCSTN
"RTN","PRCHLO6",230,0)
 S PRCIEN=0 F  S PRCIEN=$O(^PRC(424.1,"C",PRCC,PRCIEN)) Q:'PRCIEN  D
"RTN","PRCHLO6",231,0)
 . S PRCDT=""
"RTN","PRCHLO6",232,0)
 . S PRCND=$G(^PRC(424.1,PRCIEN,0))       ;NODE 0
"RTN","PRCHLO6",233,0)
 . S X=$P(PRCND,U,2)
"RTN","PRCHLO6",234,0)
 . S (X,PRCPOID)=$P($G(^PRC(424,+X,0)),U,2),PRCDT=PRCDT_X_U  ;PO# INT
"RTN","PRCHLO6",235,0)
 . S X=$S(X>0:$P($G(^PRC(442,X,0)),U),1:""),PRCDT=PRCDT_X_U  ;PO# EXT
"RTN","PRCHLO6",236,0)
 . S PRCSTN=$P(X,"-") S:PRCPOID="" PRCPOID=PRCIEN
"RTN","PRCHLO6",237,0)
 . S PRCDT=PRCDT_$$PODATE(PRCPOID)_U           ;PO DATE
"RTN","PRCHLO6",238,0)
 . S PRCDT=PRCDT_MNTHYR_U                      ;Month,Year of extract
"RTN","PRCHLO6",239,0)
 . S PRCDT=PRCDT_PRCSTN_U                      ;STATION
"RTN","PRCHLO6",240,0)
 . S PRCDT=PRCDT_$P(PRCND,U,1)_U               ;BILL NUMBER
"RTN","PRCHLO6",241,0)
 . S PRCDT=PRCDT_$$GET1^DIQ(424.1,PRCIEN_",",.011)_U    ;RECORD TYPE
"RTN","PRCHLO6",242,0)
 . S PRCTMP=$P(PRCND,U,2),PRCTMP=$P($G(^PRC(424,+PRCTMP,0)),U)
"RTN","PRCHLO6",243,0)
 . S PRCDT=PRCDT_$P(PRCND,U,2)_U               ;AUTH. POINTER IEN
"RTN","PRCHLO6",244,0)
 . S PRCDT=PRCDT_PRCTMP_U                      ;AUTH. POINTER EXT
"RTN","PRCHLO6",245,0)
 . S PRCDT=PRCDT_$P(PRCND,U,3)_U               ;AUTH. AMOUNT
"RTN","PRCHLO6",246,0)
 . S X=$P(PRCND,U,4),PRCDT=PRCDT_$S(X>0:$$FMTE^XLFDT($P(X,".")),1:"")_U  ;DATE/TIME
"RTN","PRCHLO6",247,0)
 . S PRCDUZ=$P(PRCND,U,5),PRCTMP=$P($G(^VA(200,+PRCDUZ,0)),U)
"RTN","PRCHLO6",248,0)
 . S PRCDT=PRCDT_PRCDUZ_U                      ;USER DUZ
"RTN","PRCHLO6",249,0)
 . S PRCDT=PRCDT_PRCTMP_U                      ;USER NAME
"RTN","PRCHLO6",250,0)
 . S PRCDUZ=$P($G(^VA(200,+PRCDUZ,5)),U)
"RTN","PRCHLO6",251,0)
 . S PRCTMP=$S(PRCDUZ="":"",1:$$GET1^DIQ(49,+PRCDUZ_",",.01))
"RTN","PRCHLO6",252,0)
 . S PRCDT=PRCDT_PRCDUZ_U_PRCTMP_U             ;USER SERVICE INT/EXT
"RTN","PRCHLO6",253,0)
 . S PRCDT=PRCDT_$P(PRCND,U,6)_U               ;VENDOR INVOICE NUMBER
"RTN","PRCHLO6",254,0)
 . S PRCDT=PRCDT_$$GET1^DIQ(424.1,PRCIEN_",",.07)_U        ;FINAL BILL
"RTN","PRCHLO6",255,0)
 . S PRCDT=PRCDT_$P(PRCND,U,8)_U               ;REFERENCE
"RTN","PRCHLO6",256,0)
 . S PRCDUZ=$P(PRCND,U,10),PRCTMP=$P($G(^VA(200,+PRCDUZ,0)),U)
"RTN","PRCHLO6",257,0)
 . S PRCDT=PRCDT_PRCDUZ_U                      ;LAST EDITED BY DUZ
"RTN","PRCHLO6",258,0)
 . S PRCDT=PRCDT_PRCTMP_U                      ;LAST EDITED BY NAME
"RTN","PRCHLO6",259,0)
 . S PRCDUZ=$P($G(^VA(200,+PRCDUZ,5)),U)
"RTN","PRCHLO6",260,0)
 . S PRCTMP=$S(PRCDUZ="":"",1:$$GET1^DIQ(49,+PRCDUZ_",",.01))
"RTN","PRCHLO6",261,0)
 . S PRCDT=PRCDT_PRCDUZ_U_PRCTMP_U             ;LAST EDITED BY SERVICE INT/EXT
"RTN","PRCHLO6",262,0)
 . S PRCND=$G(^PRC(424.1,PRCIEN,1))            ;NODE 1
"RTN","PRCHLO6",263,0)
 . S PRCDT=PRCDT_$P(PRCND,U,1)                 ;DESCRIPTION
"RTN","PRCHLO6",264,0)
 . S ^TMP($J,"AD1358",PRCIEN,1)=PRCDT
"RTN","PRCHLO6",265,0)
 Q
"RTN","PRCHLO6",266,0)
PODATE(PRCPOIEN) ;input PO's ien, output external form PO Date
"RTN","PRCHLO6",267,0)
 N X
"RTN","PRCHLO6",268,0)
 S X=$S(PRCPOIEN>0:$P($G(^PRC(442,PRCPOIEN,1)),U,15),1:"")
"RTN","PRCHLO6",269,0)
 S:X'="" X=$$FMTE^XLFDT(X,"D")
"RTN","PRCHLO6",270,0)
 Q X
"RTN","PRCHLO7")
0^9^B52404203^n/a
"RTN","PRCHLO7",1,0)
PRCHLO7 ;SSOI&TFO/LKG-EXTRACT ROUTINE (cont.) CLO REPORT SERVER ;2/17/11  16:39
"RTN","PRCHLO7",2,0)
 ;;5.1;IFCAP;**154**;Oct 20, 2000;Build 5
"RTN","PRCHLO7",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRCHLO7",4,0)
INVCOMPL ;Compile list of invoices within date range
"RTN","PRCHLO7",5,0)
 K ^TMP($J,"PRCINVHDR"),^TMP($J,"PRCINVPAYT"),^TMP($J,"PRCINVFMS"),^TMP($J,"PRCINVCERTSVC")
"RTN","PRCHLO7",6,0)
 N PRCI,PRCINV,PRCJ,PRCK,PRCNOD0,PRCNOD1,PRCNOD2,PRCNOD21,PRCPER,PRCPOIEN,PRCSTUB,PRCVIEN,PRCX
"RTN","PRCHLO7",7,0)
 S PRCINV=0
"RTN","PRCHLO7",8,0)
 F  S PRCINV=$O(^PRCF(421.5,PRCINV)) Q:+PRCINV'=PRCINV  D
"RTN","PRCHLO7",9,0)
 . S PRCNOD0=$G(^PRCF(421.5,PRCINV,0)) Q:$P(PRCNOD0,U)'>0
"RTN","PRCHLO7",10,0)
 . S PRCNOD2=$G(^PRCF(421.5,PRCINV,2)),PRCNOD21=$G(^(2.1))
"RTN","PRCHLO7",11,0)
 . Q:$P(PRCNOD0,U,4)>CLOEND  Q:$P(PRCNOD0,U,5)>CLOEND
"RTN","PRCHLO7",12,0)
 . Q:$P(PRCNOD21,U,5)&($P(PRCNOD21,U,5)<CLOBGN)  Q:$P($P(PRCNOD21,U,5),".")>CLOEND
"RTN","PRCHLO7",13,0)
 . S PRCNOD1=$G(^PRCF(421.5,PRCINV,1)),PRCPOIEN=$P(PRCNOD0,U,7),PRCVIEN=$P(PRCNOD0,U,8)
"RTN","PRCHLO7",14,0)
 . I $$GET1^DIQ(442,PRCPOIEN_",",.1,"I")<CLOBGN,$P(PRCNOD21,U,5)<CLOBGN,$P(PRCNOD0,U,5)<CLOBGN Q
"RTN","PRCHLO7",15,0)
 . S PRCX=$P(PRCNOD0,U)_U_$P(PRCNOD1,U,2)_U_$S(PRCPOIEN>0:$$GET1^DIQ(442,PRCPOIEN_",",31),1:"")_U_MNTHYR_U_$P(PRCNOD0,U,3)_U_$$FMTE^XLFDT($P(PRCNOD0,U,4))
"RTN","PRCHLO7",16,0)
 . S PRCX=PRCX_U_$$FMTE^XLFDT($P(PRCNOD0,U,5))_U_$$GET1^DIQ(442,PRCPOIEN_",",.01)_U_PRCPOIEN_U_$$GET1^DIQ(442,PRCPOIEN_",",.02)_U_$P(PRCNOD1,U,3)
"RTN","PRCHLO7",17,0)
 . S PRCX=PRCX_U_$$GET1^DIQ(421.5,PRCINV_",",.6)_U_$$GET1^DIQ(421.5,PRCINV_",",4)
"RTN","PRCHLO7",18,0)
 . S ^TMP($J,"PRCINVHDR",PRCINV,1)=PRCX_U
"RTN","PRCHLO7",19,0)
 . S PRCX=$$GET1^DIQ(440,PRCVIEN_",",.01)_U_PRCVIEN_U_$$GET1^DIQ(440,PRCVIEN_",",34)_U_$$GET1^DIQ(440,PRCVIEN_",",35)_U_$$GET1^DIQ(440,PRCVIEN_",",18.3)
"RTN","PRCHLO7",20,0)
 . S PRCX=PRCX_U_$P(PRCNOD0,U,12)_U_$$GET1^DIQ(421.5,PRCINV_",",11)_U_$$FMTE^XLFDT($P(PRCNOD0,U,21))_U_$S($P(PRCNOD0,U,14)'="":$FN($P(PRCNOD0,U,14)/100,"",2),1:"")
"RTN","PRCHLO7",21,0)
 . S PRCX=PRCX_U_$S($P(PRCNOD0,U,15)'="":$FN($P(PRCNOD0,U,15)/100,"",2),1:"")
"RTN","PRCHLO7",22,0)
 . S PRCX=PRCX_U_$$FMTE^XLFDT($P(PRCNOD1,U,4))_U_$$GET1^DIQ(421.5,PRCINV_",",25)_U_$P(PRCNOD1,U,6)_U_$P(PRCNOD1,U,7)
"RTN","PRCHLO7",23,0)
 . S PRCX=PRCX_U_$S($P(PRCNOD1,U,8)'="":$FN($P(PRCNOD1,U,8)/100,"",2),1:"")
"RTN","PRCHLO7",24,0)
 . S PRCX=PRCX_U_$S($P(PRCNOD1,U,9)'="":$FN($P(PRCNOD1,U,9)/100,"",2),1:"")
"RTN","PRCHLO7",25,0)
 . S PRCX=PRCX_U_$$GET1^DIQ(421.5,PRCINV_",",50)_U_$P(PRCNOD2,U,2)_U_$P(PRCNOD2,U,3)_U_$P(PRCNOD2,U,4)_U_$TR($$FMTE^XLFDT($P(PRCNOD2,U,5)),"@"," ")
"RTN","PRCHLO7",26,0)
 . S ^TMP($J,"PRCINVHDR",PRCINV,2)=PRCX_U
"RTN","PRCHLO7",27,0)
 . S PRCPER=$P(PRCNOD2,U,17),PRCX=$$GET1^DIQ(200,PRCPER_",",.01)_U_PRCPER_U_$$GET1^DIQ(200,PRCPER_",",29)
"RTN","PRCHLO7",28,0)
 . S PRCX=PRCX_U_$$FMTE^XLFDT($P(PRCNOD2,U,6))_U_$$FMTE^XLFDT($P(PRCNOD2,U,7))_U_$$FMTE^XLFDT($P(PRCNOD2,U,8))_U_$$FMTE^XLFDT($P(PRCNOD2,U,9))
"RTN","PRCHLO7",29,0)
 . S PRCPER=$P(PRCNOD2,U,10),PRCX=PRCX_U_$$GET1^DIQ(200,PRCPER_",",.01)_U_PRCPER_U_$$GET1^DIQ(200,PRCPER_",",29)
"RTN","PRCHLO7",30,0)
 . S PRCPER=$P(PRCNOD2,U,11) S PRCX=PRCX_U_$$GET1^DIQ(200,PRCPER_",",.01)_U_PRCPER_U_$$GET1^DIQ(200,PRCPER_",",29)
"RTN","PRCHLO7",31,0)
 . S PRCX=PRCX_U_$$GET1^DIQ(421.5,PRCINV_",",61)_U_$TR($$FMTE^XLFDT($P(PRCNOD21,U,5)),"@"," ")_U_$$GET1^DIQ(421.5,PRCINV_",",62)_U_$TR($$FMTE^XLFDT($P(PRCNOD21,U,6)),"@"," ")
"RTN","PRCHLO7",32,0)
 . S ^TMP($J,"PRCINVHDR",PRCINV,3)=PRCX_U
"RTN","PRCHLO7",33,0)
 . S PRCX=$$GET1^DIQ(421.5,PRCINV_",",63)_U_$TR($$FMTE^XLFDT($P(PRCNOD2,U,15)),"@"," ")
"RTN","PRCHLO7",34,0)
 . S PRCPER=$P(PRCNOD2,U,18) S PRCX=PRCX_U_$$GET1^DIQ(200,PRCPER_",",.01)_U_PRCPER_U_$$GET1^DIQ(200,PRCPER_",",29)_U_$TR($$FMTE^XLFDT($P(PRCNOD21,U,9)),"@"," ")_U_$P(PRCNOD1,U,11)
"RTN","PRCHLO7",35,0)
 . S PRCX=PRCX_U_$$FMTE^XLFDT($P(PRCNOD1,U,19))_U_$$FMTE^XLFDT($P(PRCNOD1,U,20))
"RTN","PRCHLO7",36,0)
 . S ^TMP($J,"PRCINVHDR",PRCINV,4)=PRCX_U
"RTN","PRCHLO7",37,0)
 . N PRCARRAY S PRCX=$$GET1^DIQ(421.5,PRCINV_",",23,"","PRCARRAY","PRCERR")
"RTN","PRCHLO7",38,0)
 . S PRCI=0,PRCJ=4,PRCK=0
"RTN","PRCHLO7",39,0)
 . F  S PRCI=$O(PRCARRAY(PRCI)) Q:PRCI=""  D
"RTN","PRCHLO7",40,0)
 . . S PRCJ=PRCJ+1,^TMP($J,"PRCINVHDR",PRCINV,PRCJ)=$S(PRCK:" ",1:"")_$TR(PRCARRAY(PRCI),"^"),PRCK=PRCK+1
"RTN","PRCHLO7",41,0)
 . K PRCARRAY
"RTN","PRCHLO7",42,0)
 . S PRCSTUB=$P(PRCNOD0,U)_U_$P(PRCNOD1,U,2)_U_MNTHYR_U_U_$P(PRCNOD0,U,3)_U_$$GET1^DIQ(442,PRCPOIEN_",",.01)_U_PRCPOIEN
"RTN","PRCHLO7",43,0)
 . D PAYTERMS(PRCINV,PRCSTUB)
"RTN","PRCHLO7",44,0)
 . D FMSLINE(PRCINV,PRCSTUB)
"RTN","PRCHLO7",45,0)
 . D CERTSVC(PRCINV,PRCSTUB)
"RTN","PRCHLO7",46,0)
 Q
"RTN","PRCHLO7",47,0)
 ;
"RTN","PRCHLO7",48,0)
PAYTERMS(PRCID,PRCY) ;Compile Prompt Payment Terms for Invoice
"RTN","PRCHLO7",49,0)
 N PRCJ,PRCPTNOD
"RTN","PRCHLO7",50,0)
 S PRCJ=0
"RTN","PRCHLO7",51,0)
 F  S PRCJ=$O(^PRCF(421.5,PRCID,6,PRCJ)) Q:+PRCJ'=PRCJ  D
"RTN","PRCHLO7",52,0)
 . S PRCPTNOD=$G(^PRCF(421.5,PRCID,6,PRCJ,0)) Q:PRCPTNOD=""
"RTN","PRCHLO7",53,0)
 . S PRCX=PRCY,$P(PRCX,U,4)=PRCJ
"RTN","PRCHLO7",54,0)
 . S PRCX=PRCX_U_$P(PRCPTNOD,U)_U_$$GET1^DIQ(421.531,PRCJ_","_PRCID_",",1)_U_$P(PRCPTNOD,U,3)_U_$P(PRCPTNOD,U,4)_U_$P(PRCPTNOD,U,5)
"RTN","PRCHLO7",55,0)
 . S ^TMP($J,"PRCINVPAYT",PRCID,PRCJ)=PRCX
"RTN","PRCHLO7",56,0)
 Q
"RTN","PRCHLO7",57,0)
 ;
"RTN","PRCHLO7",58,0)
FMSLINE(PRCID,PRCY) ;Compile FMS Line Data
"RTN","PRCHLO7",59,0)
 N PRCJ,PRCFMSND
"RTN","PRCHLO7",60,0)
 S PRCJ=0
"RTN","PRCHLO7",61,0)
 F  S PRCJ=$O(^PRCF(421.5,PRCID,5,PRCJ)) Q:+PRCJ'=PRCJ  D
"RTN","PRCHLO7",62,0)
 . S PRCFMSND=$G(^PRCF(421.5,PRCID,5,PRCJ,0)) Q:PRCFMSND=""
"RTN","PRCHLO7",63,0)
 . S PRCX=PRCY,$P(PRCX,U,4)=PRCJ
"RTN","PRCHLO7",64,0)
 . S PRCX=PRCX_U_$P($$GET1^DIQ(421.541,PRCJ_","_PRCID_",",.01)," ")_U_$S($P(PRCFMSND,U,2)'="":$FN($P(PRCFMSND,U,2),"",2),1:"")_U_$S($P(PRCFMSND,U,3)'="":$FN($P(PRCFMSND,U,3),"",2),1:"")
"RTN","PRCHLO7",65,0)
 . S PRCX=PRCX_U_$$GET1^DIQ(421.541,PRCJ_","_PRCID_",",3)_U_$P(PRCFMSND,U,5)
"RTN","PRCHLO7",66,0)
 . S ^TMP($J,"PRCINVFMS",PRCID,PRCJ)=PRCX
"RTN","PRCHLO7",67,0)
 Q
"RTN","PRCHLO7",68,0)
 ;
"RTN","PRCHLO7",69,0)
CERTSVC(PRCID,PRCY) ;Compile Certifying Service
"RTN","PRCHLO7",70,0)
 N PRCJ,PRCPER,PRCSVCND
"RTN","PRCHLO7",71,0)
 S PRCJ=0
"RTN","PRCHLO7",72,0)
 F  S PRCJ=$O(^PRCF(421.5,PRCID,3,PRCJ)) Q:+PRCJ'=PRCJ  D
"RTN","PRCHLO7",73,0)
 . S PRCSVCND=$G(^PRCF(421.5,PRCID,3,PRCJ,0)) Q:PRCSVCND=""
"RTN","PRCHLO7",74,0)
 . S PRCX=PRCY,$P(PRCX,U,4)=PRCJ
"RTN","PRCHLO7",75,0)
 . S PRCX=PRCX_U_$$GET1^DIQ(421.51,PRCJ_","_PRCID_",",.01)_U_$TR($$FMTE^XLFDT($P(PRCSVCND,U,2)),"@"," ")
"RTN","PRCHLO7",76,0)
 . S PRCPER=$P(PRCSVCND,U,3)
"RTN","PRCHLO7",77,0)
 . S PRCX=PRCX_U_$$GET1^DIQ(200,PRCPER_",",.01)_U_PRCPER_U_$$GET1^DIQ(200,PRCPER_",",29)
"RTN","PRCHLO7",78,0)
 . S ^TMP($J,"PRCINVCERTSVC",PRCID,PRCJ)=PRCX
"RTN","PRCHLO7",79,0)
 Q
"RTN","PRCHLO7",80,0)
 ;
"RTN","PRCHLO7",81,0)
INVOICEH ;Invoice Header
"RTN","PRCHLO7",82,0)
 W "InvID^Stn^SubStn^MonthYrRun^InvNbr^InvDt^DtRec^POPtr^POIdNum^MOP^PONbr^"
"RTN","PRCHLO7",83,0)
 W "CertReq^PPType^VendorNm^VendorIEN^VendFMSCode^VendAltI^DUNS^DiscDays^"
"RTN","PRCHLO7",84,0)
 W "DiscTerms^DtSvcRec^AppShipAmt^AmtCertPay^DtSuspLtr^SusLtrReq^PartialNbr^"
"RTN","PRCHLO7",85,0)
 W "FMSPayVoucher^GrossAmt^GrossShip^Status^POSuffix^ExpandedPO^CurrLoc^"
"RTN","PRCHLO7",86,0)
 W "DtCurrLoc^ChargeLocNm^ChargeLocDuz^ChargeLocSvc^DiscPayDt^NetPayDt^"
"RTN","PRCHLO7",87,0)
 W "DtDueFisc^DtRetFisc^CertPayNm^CertPayDuz^CertPaySvc^CompletedNm^"
"RTN","PRCHLO7",88,0)
 W "CompletedDuz^CompletedSvc^CertValCode^CertDtTime^CompValCode^"
"RTN","PRCHLO7",89,0)
 W "CompletedDtTime^BullSentYN^BullSentDt^CPCertNm^CPCertDuz^CPCertSvc^"
"RTN","PRCHLO7",90,0)
 W "CPSignDt^CertCP^FMSTxnDt^AcctMY^SusReason",!
"RTN","PRCHLO7",91,0)
 Q
"RTN","PRCHLO7",92,0)
INVOICEW ;Write Invoice Header Data
"RTN","PRCHLO7",93,0)
 N PRCI,PRCJ
"RTN","PRCHLO7",94,0)
 S PRCI="",PRCJ=""
"RTN","PRCHLO7",95,0)
 F  S PRCI=$O(^TMP($J,"PRCINVHDR",PRCI)) Q:+PRCI'=PRCI  D
"RTN","PRCHLO7",96,0)
 . F  S PRCJ=$O(^TMP($J,"PRCINVHDR",PRCI,PRCJ)) Q:PRCJ=""  W $G(^TMP($J,"PRCINVHDR",PRCI,PRCJ))
"RTN","PRCHLO7",97,0)
 . W !
"RTN","PRCHLO7",98,0)
 Q
"RTN","PRCHLO7",99,0)
 ;
"RTN","PRCHLO7",100,0)
INVPAYH ;Invoice Payment Terms Header
"RTN","PRCHLO7",101,0)
 W "InvID^Stn^MonthYrRun^PPTIEN^InvNbr^POPtr^POIdNum^PPTNbr^TermsType^DiscPcnt^DiscAmt^DiscDays",!
"RTN","PRCHLO7",102,0)
 Q
"RTN","PRCHLO7",103,0)
INVPAYW ;Write Payment Terms Data
"RTN","PRCHLO7",104,0)
 N PRCI,PRCJ
"RTN","PRCHLO7",105,0)
 S PRCI="",PRCJ=""
"RTN","PRCHLO7",106,0)
 F  S PRCI=$O(^TMP($J,"PRCINVPAYT",PRCI)) Q:+PRCI'=PRCI  D
"RTN","PRCHLO7",107,0)
 . F  S PRCJ=$O(^TMP($J,"PRCINVPAYT",PRCI,PRCJ)) Q:PRCJ=""  W $G(^TMP($J,"PRCINVPAYT",PRCI,PRCJ)),!
"RTN","PRCHLO7",108,0)
 Q
"RTN","PRCHLO7",109,0)
 ;
"RTN","PRCHLO7",110,0)
INVFMSH ;FMS Line Header
"RTN","PRCHLO7",111,0)
 W "InvID^Stn^MonthYrRun^FMSLIEN^InvNbr^PoPtr^POIdNum^BOC^AcctLnAmt^LiqAmt^LiqCode^FMSLNbr",!
"RTN","PRCHLO7",112,0)
 Q
"RTN","PRCHLO7",113,0)
INVFMSW ;Write FMS Line Data
"RTN","PRCHLO7",114,0)
 N PRCI,PRCJ
"RTN","PRCHLO7",115,0)
 S PRCI="",PRCJ=""
"RTN","PRCHLO7",116,0)
 F  S PRCI=$O(^TMP($J,"PRCINVFMS",PRCI)) Q:+PRCI'=PRCI  D
"RTN","PRCHLO7",117,0)
 . F  S PRCJ=$O(^TMP($J,"PRCINVFMS",PRCI,PRCJ)) Q:PRCJ=""  W $G(^TMP($J,"PRCINVFMS",PRCI,PRCJ)),!
"RTN","PRCHLO7",118,0)
 Q
"RTN","PRCHLO7",119,0)
 ;
"RTN","PRCHLO7",120,0)
CERTH ;Write Certifying Service Header
"RTN","PRCHLO7",121,0)
 W "InvID^Stn^MonthYrRun^CertIEN^InvNbr^POPtr^POIdNum^CertSvc^DTChargeOUT^ChargeByName^ChargeByDuz^ChargeBySvc",!
"RTN","PRCHLO7",122,0)
 Q
"RTN","PRCHLO7",123,0)
CERTW ;Write Certifying Service Data
"RTN","PRCHLO7",124,0)
 N PRCI,PRCJ
"RTN","PRCHLO7",125,0)
 S PRCI="",PRCJ=""
"RTN","PRCHLO7",126,0)
 F  S PRCI=$O(^TMP($J,"PRCINVCERTSVC",PRCI)) Q:+PRCI'=PRCI  D
"RTN","PRCHLO7",127,0)
 . F  S PRCJ=$O(^TMP($J,"PRCINVCERTSVC",PRCI,PRCJ)) Q:PRCJ=""  W $G(^TMP($J,"PRCINVCERTSVC",PRCI,PRCJ)),!
"RTN","PRCHLO7",128,0)
 Q
"RTN","PRCHLO7",129,0)
 ;
"RTN","PRCHLO7",130,0)
INVHDR ;Create flat file for Invoice header #421.5
"RTN","PRCHLO7",131,0)
 N OUTFL24
"RTN","PRCHLO7",132,0)
 S OUTFL24="IFCP"_STID_"F24.TXT"
"RTN","PRCHLO7",133,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFL24,"W") ;Open the file
"RTN","PRCHLO7",134,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO7",135,0)
 D INVOICEH
"RTN","PRCHLO7",136,0)
 D INVOICEW
"RTN","PRCHLO7",137,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO7",138,0)
 Q
"RTN","PRCHLO7",139,0)
INVPAY ;Create flat file for Invoice payment Terms subfile #421.531
"RTN","PRCHLO7",140,0)
 N OUTFL25
"RTN","PRCHLO7",141,0)
 S OUTFL25="IFCP"_STID_"F25.TXT"
"RTN","PRCHLO7",142,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFL25,"W")
"RTN","PRCHLO7",143,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO7",144,0)
 D INVPAYH
"RTN","PRCHLO7",145,0)
 D INVPAYW
"RTN","PRCHLO7",146,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO7",147,0)
 Q
"RTN","PRCHLO7",148,0)
INVFMS ;Create flat file for Invoice FMS lines subfile #421.541
"RTN","PRCHLO7",149,0)
 N OUTFL26
"RTN","PRCHLO7",150,0)
 S OUTFL26="IFCP"_STID_"F26.TXT"
"RTN","PRCHLO7",151,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFL26,"W")
"RTN","PRCHLO7",152,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO7",153,0)
 D INVFMSH
"RTN","PRCHLO7",154,0)
 D INVFMSW
"RTN","PRCHLO7",155,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO7",156,0)
 Q
"RTN","PRCHLO7",157,0)
INVCERT ;Create flat file for Invoice Certifying Services subfile #421.51
"RTN","PRCHLO7",158,0)
 N OUTFL27
"RTN","PRCHLO7",159,0)
 S OUTFL27="IFCP"_STID_"F27.TXT"
"RTN","PRCHLO7",160,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFL27,"W")
"RTN","PRCHLO7",161,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO7",162,0)
 D CERTH
"RTN","PRCHLO7",163,0)
 D CERTW
"RTN","PRCHLO7",164,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO7",165,0)
 Q
"VER")
8.0^22.0
"^DD",410,410,6.5,0)
SERVICE END DATE^DX^^1;7^S %DT="EX" S:$D(PRCSDT) %DT(0)=PRCSDT D ^%DT K %DT S X=Y K:X<1 X
"^DD",410,410,6.5,3)
Enter the ending date of the service(s). (Must be at least or after the start date)
"^DD",410,410,6.5,21,0)
^^1^1^3100916^
"^DD",410,410,6.5,21,1,0)
This is the ending date of the service(s) for this obligation.
"^DD",410,410,6.5,"DT")
3110314
"^DD",421.5,421.5,61.9,0)
CERTIFIED BY SIG DATE/TIME^D^^2.1;5^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",421.5,421.5,61.9,1,0)
^.1
"^DD",421.5,421.5,61.9,1,1,0)
421.5^AF
"^DD",421.5,421.5,61.9,1,1,1)
S ^PRCF(421.5,"AF",$E(X,1,30),DA)=""
"^DD",421.5,421.5,61.9,1,1,2)
K ^PRCF(421.5,"AF",$E(X,1,30),DA)
"^DD",421.5,421.5,61.9,1,1,"%D",0)
^.101^2^2^3110105^^
"^DD",421.5,421.5,61.9,1,1,"%D",1,0)
This cross reference on date/time invoice was certified for payment
"^DD",421.5,421.5,61.9,1,1,"%D",2,0)
is used in selecting entries for Segregation of Duties report.
"^DD",421.5,421.5,61.9,1,1,"DT")
3101228
"^DD",421.5,421.5,61.9,21,0)
^^2^2^2930127^
"^DD",421.5,421.5,61.9,21,1,0)
This is the date and time that a valid electronic signature was entered
"^DD",421.5,421.5,61.9,21,2,0)
certifying an invoice for payment.
"^DD",421.5,421.5,61.9,"DT")
3101228
"BLD",6603,6)
^130
**END**
**END**
