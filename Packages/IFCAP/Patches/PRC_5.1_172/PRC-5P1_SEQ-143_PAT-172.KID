Released PRC*5.1*172 SEQ #143
Extracted from mail message
**KIDS**:PRC*5.1*172^

**INSTALL NAME**
PRC*5.1*172
"BLD",7185,0)
PRC*5.1*172^IFCAP^0^3120913^y
"BLD",7185,1,0)
^^2^2^3120830^
"BLD",7185,1,1,0)
1. Clinical Logistics CLRS TRANSMISSION processing update for those sites
"BLD",7185,1,2,0)
   that have migrated to Full LINUX OS.
"BLD",7185,4,0)
^9.64PA^^
"BLD",7185,6.3)
2
"BLD",7185,"ABPKG")
n
"BLD",7185,"KRN",0)
^9.67PA^779.2^20
"BLD",7185,"KRN",.4,0)
.4
"BLD",7185,"KRN",.401,0)
.401
"BLD",7185,"KRN",.402,0)
.402
"BLD",7185,"KRN",.403,0)
.403
"BLD",7185,"KRN",.5,0)
.5
"BLD",7185,"KRN",.84,0)
.84
"BLD",7185,"KRN",3.6,0)
3.6
"BLD",7185,"KRN",3.8,0)
3.8
"BLD",7185,"KRN",9.2,0)
9.2
"BLD",7185,"KRN",9.8,0)
9.8
"BLD",7185,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",7185,"KRN",9.8,"NM",1,0)
PRCHLO4^^0^B178803139
"BLD",7185,"KRN",9.8,"NM",2,0)
PRCHLO4A^^0^B103101558
"BLD",7185,"KRN",9.8,"NM",3,0)
PRCHLO5^^0^B94100528
"BLD",7185,"KRN",9.8,"NM","B","PRCHLO4",1)

"BLD",7185,"KRN",9.8,"NM","B","PRCHLO4A",2)

"BLD",7185,"KRN",9.8,"NM","B","PRCHLO5",3)

"BLD",7185,"KRN",19,0)
19
"BLD",7185,"KRN",19.1,0)
19.1
"BLD",7185,"KRN",101,0)
101
"BLD",7185,"KRN",409.61,0)
409.61
"BLD",7185,"KRN",771,0)
771
"BLD",7185,"KRN",779.2,0)
779.2
"BLD",7185,"KRN",870,0)
870
"BLD",7185,"KRN",8989.51,0)
8989.51
"BLD",7185,"KRN",8989.52,0)
8989.52
"BLD",7185,"KRN",8994,0)
8994
"BLD",7185,"KRN","B",.4,.4)

"BLD",7185,"KRN","B",.401,.401)

"BLD",7185,"KRN","B",.402,.402)

"BLD",7185,"KRN","B",.403,.403)

"BLD",7185,"KRN","B",.5,.5)

"BLD",7185,"KRN","B",.84,.84)

"BLD",7185,"KRN","B",3.6,3.6)

"BLD",7185,"KRN","B",3.8,3.8)

"BLD",7185,"KRN","B",9.2,9.2)

"BLD",7185,"KRN","B",9.8,9.8)

"BLD",7185,"KRN","B",19,19)

"BLD",7185,"KRN","B",19.1,19.1)

"BLD",7185,"KRN","B",101,101)

"BLD",7185,"KRN","B",409.61,409.61)

"BLD",7185,"KRN","B",771,771)

"BLD",7185,"KRN","B",779.2,779.2)

"BLD",7185,"KRN","B",870,870)

"BLD",7185,"KRN","B",8989.51,8989.51)

"BLD",7185,"KRN","B",8989.52,8989.52)

"BLD",7185,"KRN","B",8994,8994)

"BLD",7185,"QDEF")
^^^^^^^^^^YES
"BLD",7185,"QUES",0)
^9.62^^
"BLD",7185,"REQB",0)
^9.611^2^2
"BLD",7185,"REQB",1,0)
PRC*5.1*139^2
"BLD",7185,"REQB",2,0)
PRC*5.1*154^2
"BLD",7185,"REQB","B","PRC*5.1*139",1)

"BLD",7185,"REQB","B","PRC*5.1*154",2)

"MBREQ")
0
"PKG",455,-1)
1^1
"PKG",455,0)
IFCAP^PRC^IFCAP System Files
"PKG",455,20,0)
^9.402P^^
"PKG",455,22,0)
^9.49I^1^1
"PKG",455,22,1,0)
5.1^3001012^3001019^68
"PKG",455,22,1,"PAH",1,0)
172^3120913
"PKG",455,22,1,"PAH",1,1,0)
^^2^2^3120913
"PKG",455,22,1,"PAH",1,1,1,0)
1. Clinical Logistics CLRS TRANSMISSION processing update for those sites
"PKG",455,22,1,"PAH",1,1,2,0)
   that have migrated to Full LINUX OS.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","PRCHLO4")
0^1^B178803139^B122818206
"RTN","PRCHLO4",1,0)
PRCHLO4 ;WOIFO/RLL/DAP-EXTRACT ROUTINE CLO REPORT SERVER ;12/30/10  15:01
"RTN","PRCHLO4",2,0)
 ;;5.1;IFCAP;**83,98,130,154,172**;Oct 20, 2000;Build 2
"RTN","PRCHLO4",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRCHLO4",4,0)
 ; Continuation of PRCHLO3
"RTN","PRCHLO4",5,0)
 ;
"RTN","PRCHLO4",6,0)
 ; PRCHLO3 routines are used to Write out the Header and data
"RTN","PRCHLO4",7,0)
 ; associated with each of the 29 tables created for the Clinical
"RTN","PRCHLO4",8,0)
 ; logistics Report Server. The files are built from the extracts
"RTN","PRCHLO4",9,0)
 ; located in the ^TMP($J) global.
"RTN","PRCHLO4",10,0)
 ;
"RTN","PRCHLO4",11,0)
 ;Patch PRC*5.1*172 are modifications to CLRS transmission processing 
"RTN","PRCHLO4",12,0)
 ;to support those sites that have migrated to Full LINUX OS
"RTN","PRCHLO4",13,0)
 ; 
"RTN","PRCHLO4",14,0)
 Q
"RTN","PRCHLO4",15,0)
GETDIR ; Get directory from System parameter for CLRS
"RTN","PRCHLO4",16,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4",17,0)
 ;
"RTN","PRCHLO4",18,0)
 Q
"RTN","PRCHLO4",19,0)
CLRSFIL ; Create output files for CLRS
"RTN","PRCHLO4",20,0)
 N FILEDIR
"RTN","PRCHLO4",21,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4",22,0)
 ; GET station id
"RTN","PRCHLO4",23,0)
 N STID
"RTN","PRCHLO4",24,0)
 ; S STID=$G(^DD("SITE",1)) Old call
"RTN","PRCHLO4",25,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4",26,0)
TSTFIL ; Test entry point
"RTN","PRCHLO4",27,0)
 ;
"RTN","PRCHLO4",28,0)
 D POMASTF  ; Po Master Data
"RTN","PRCHLO4",29,0)
 D POOBF  ; Po Obligation Data
"RTN","PRCHLO4",30,0)
 D POMETHF  ; PO Method of Purchase Data
"RTN","PRCHLO4",31,0)
 D PODISCF  ; PO Discount Data
"RTN","PRCHLO4",32,0)
 D POITMF  ; Po Item Data
"RTN","PRCHLO4",33,0)
 D POITIVF  ; PO Item Inventory Point Data
"RTN","PRCHLO4",34,0)
 D POITDRF  ; PO Item Desc Data
"RTN","PRCHLO4",35,0)
 D PODSCF  ; PO Description
"RTN","PRCHLO4",36,0)
 D POPRTF  ; PO Partial Data
"RTN","PRCHLO4",37,0)
 D PO2237F  ; PO 2237 data
"RTN","PRCHLO4",38,0)
 D POBOCF  ; PO BOC Data
"RTN","PRCHLO4",39,0)
 D POCOMF  ; PO Comments data
"RTN","PRCHLO4",40,0)
 D POREMF  ; PO Remarks data
"RTN","PRCHLO4",41,0)
 D POPPTF  ; PO Prompt Payment Terms data
"RTN","PRCHLO4",42,0)
 D POAMTF  ; PO Amount data
"RTN","PRCHLO4",43,0)
 D POAMDF  ; PO Amendment Data
"RTN","PRCHLO4",44,0)
 D POAMDCF  ; PO Amendment Changes Data
"RTN","PRCHLO4",45,0)
 D POAMDDF  ; PO Amendment Description Data
"RTN","PRCHLO4",46,0)
 D POAMBKF  ; PO Amount Breakout Code Data
"RTN","PRCHLO4",47,0)
 D FIL410   ; FILE 410
"RTN","PRCHLO4",48,0)
 D FIL424   ; FILE 424
"RTN","PRCHLO4",49,0)
 D FIL4241  ; FILE 424.1
"RTN","PRCHLO4",50,0)
 D INVHDR^PRCHLO7 ;File 421.5 header
"RTN","PRCHLO4",51,0)
 D INVPAY^PRCHLO7 ;Subfile 421.531
"RTN","PRCHLO4",52,0)
 D INVFMS^PRCHLO7 ;Subfile 421.541
"RTN","PRCHLO4",53,0)
 D INVCERT^PRCHLO7 ;Subfile 421.51
"RTN","PRCHLO4",54,0)
GIPBL1 ; GIP REPORTS
"RTN","PRCHLO4",55,0)
 D BLDGP1^PRCPLO3
"RTN","PRCHLO4",56,0)
 D BLDGP2^PRCPLO3
"RTN","PRCHLO4",57,0)
 Q
"RTN","PRCHLO4",58,0)
POMASTF ; Save PO Master table data to a file to FTP to report Server
"RTN","PRCHLO4",59,0)
 ; build file name
"RTN","PRCHLO4",60,0)
 N OUTFIL1
"RTN","PRCHLO4",61,0)
 S OUTFIL1="IFCP"_STID_"F1.TXT"
"RTN","PRCHLO4",62,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL1,"W")  ; Open the file
"RTN","PRCHLO4",63,0)
 D USE^%ZISUTL("FILE1")  ; Use the file as the output device
"RTN","PRCHLO4",64,0)
 D POMASTH^PRCHLO3   ; Write the Header to the file
"RTN","PRCHLO4",65,0)
 D POMASTW^PRCHLO3   ; Write the data to the file
"RTN","PRCHLO4",66,0)
 D CLOSE^%ZISH("FILE1")  ; Close the file
"RTN","PRCHLO4",67,0)
 Q
"RTN","PRCHLO4",68,0)
POOBF ; Create flat file for PO OBLIGATION DATA
"RTN","PRCHLO4",69,0)
 N OUTFIL2
"RTN","PRCHLO4",70,0)
 S OUTFIL2="IFCP"_STID_"F2.TXT"
"RTN","PRCHLO4",71,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL2,"W")  ; Open the file
"RTN","PRCHLO4",72,0)
 D USE^%ZISUTL("FILE1")  ; Use the file as the output device
"RTN","PRCHLO4",73,0)
 D POOBHD^PRCHLO3
"RTN","PRCHLO4",74,0)
 D POOBW^PRCHLO3
"RTN","PRCHLO4",75,0)
 D CLOSE^%ZISH("FILE1")  ; Close the file
"RTN","PRCHLO4",76,0)
 Q
"RTN","PRCHLO4",77,0)
POMETHF ; Create flat for for Purchase Order Method
"RTN","PRCHLO4",78,0)
 N OUTFIL3
"RTN","PRCHLO4",79,0)
 S OUTFIL3="IFCP"_STID_"F3.TXT"
"RTN","PRCHLO4",80,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL3,"W")  ; Open the file
"RTN","PRCHLO4",81,0)
 D USE^%ZISUTL("FILE1")  ; Use the file as the output device
"RTN","PRCHLO4",82,0)
 D POPMEH^PRCHLO3
"RTN","PRCHLO4",83,0)
 D POPMEW^PRCHLO3
"RTN","PRCHLO4",84,0)
 D CLOSE^%ZISH("FILE1")  ; Close the file
"RTN","PRCHLO4",85,0)
 Q
"RTN","PRCHLO4",86,0)
PODISCF ; Create flat file for Purchase Order Discount
"RTN","PRCHLO4",87,0)
 N OUTFIL4
"RTN","PRCHLO4",88,0)
 S OUTFIL4="IFCP"_STID_"F4.TXT"
"RTN","PRCHLO4",89,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL4,"W")  ; Open the file
"RTN","PRCHLO4",90,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",91,0)
 D PODISCH^PRCHLO1
"RTN","PRCHLO4",92,0)
 D PODISCW^PRCHLO1
"RTN","PRCHLO4",93,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",94,0)
 Q
"RTN","PRCHLO4",95,0)
POITMF ; Create flat file for PO Item data
"RTN","PRCHLO4",96,0)
 N OUTFIL5
"RTN","PRCHLO4",97,0)
 S OUTFIL5="IFCP"_STID_"F5.TXT"
"RTN","PRCHLO4",98,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL5,"W")  ; Open the file
"RTN","PRCHLO4",99,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",100,0)
 D POITEMH^PRCHLO2
"RTN","PRCHLO4",101,0)
 D POITEMW^PRCHLO2
"RTN","PRCHLO4",102,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",103,0)
 Q
"RTN","PRCHLO4",104,0)
POITIVF ; Create flat file for PO Item inv. point data
"RTN","PRCHLO4",105,0)
 N OUTFIL6
"RTN","PRCHLO4",106,0)
 S OUTFIL6="IFCP"_STID_"F6.TXT"
"RTN","PRCHLO4",107,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL6,"W")  ; Open the file
"RTN","PRCHLO4",108,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",109,0)
 D POITLNH^PRCHLO2
"RTN","PRCHLO4",110,0)
 D POITLNW^PRCHLO2
"RTN","PRCHLO4",111,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",112,0)
 Q
"RTN","PRCHLO4",113,0)
POITDRF ; Create flat file for PO Item date received
"RTN","PRCHLO4",114,0)
 N OUTFIL7
"RTN","PRCHLO4",115,0)
 S OUTFIL7="IFCP"_STID_"F7.TXT"
"RTN","PRCHLO4",116,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL7,"W")  ; Open the file
"RTN","PRCHLO4",117,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",118,0)
 D POITDRCH^PRCHLO2
"RTN","PRCHLO4",119,0)
 D POITDRCW^PRCHLO2
"RTN","PRCHLO4",120,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",121,0)
 Q
"RTN","PRCHLO4",122,0)
PODSCF ; Create flat file for PO item description
"RTN","PRCHLO4",123,0)
 N OUTFIL8
"RTN","PRCHLO4",124,0)
 S OUTFIL8="IFCP"_STID_"F8.TXT"
"RTN","PRCHLO4",125,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL8,"W")  ; Open the file
"RTN","PRCHLO4",126,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",127,0)
 D POITDSH^PRCHLO2
"RTN","PRCHLO4",128,0)
 D POITDSW^PRCHLO2
"RTN","PRCHLO4",129,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",130,0)
 Q
"RTN","PRCHLO4",131,0)
POPRTF ; Create flat file for PO Partial data
"RTN","PRCHLO4",132,0)
 N OUTFIL9
"RTN","PRCHLO4",133,0)
 S OUTFIL9="IFCP"_STID_"F9.TXT"
"RTN","PRCHLO4",134,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL9,"W")  ; Open the file
"RTN","PRCHLO4",135,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",136,0)
 D POPART^PRCHLO3
"RTN","PRCHLO4",137,0)
 D POPARTW^PRCHLO3
"RTN","PRCHLO4",138,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",139,0)
 Q
"RTN","PRCHLO4",140,0)
PO2237F ; Create flat file for 2237 data
"RTN","PRCHLO4",141,0)
 N OUTFIL10
"RTN","PRCHLO4",142,0)
 S OUTFIL10="IFCP"_STID_"F10.TXT"
"RTN","PRCHLO4",143,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL10,"W")  ; Open the file
"RTN","PRCHLO4",144,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",145,0)
 D PO2237H^PRCHLO3
"RTN","PRCHLO4",146,0)
 D PO2237W^PRCHLO3
"RTN","PRCHLO4",147,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",148,0)
 Q
"RTN","PRCHLO4",149,0)
POBOCF ; Create flat file for PO BOC data
"RTN","PRCHLO4",150,0)
 N OUTFIL11
"RTN","PRCHLO4",151,0)
 S OUTFIL11="IFCP"_STID_"F11.TXT"
"RTN","PRCHLO4",152,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL11,"W")
"RTN","PRCHLO4",153,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",154,0)
 D POBOCH^PRCHLO3
"RTN","PRCHLO4",155,0)
 D POBOCW^PRCHLO3
"RTN","PRCHLO4",156,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",157,0)
 Q
"RTN","PRCHLO4",158,0)
POCOMF ; Create flat file for PO Comments
"RTN","PRCHLO4",159,0)
 N OUTFIL12
"RTN","PRCHLO4",160,0)
 S OUTFIL12="IFCP"_STID_"F12.TXT"
"RTN","PRCHLO4",161,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL12,"W")
"RTN","PRCHLO4",162,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",163,0)
 D POCMTSH^PRCHLO3
"RTN","PRCHLO4",164,0)
 D POCMTSW^PRCHLO3
"RTN","PRCHLO4",165,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",166,0)
 Q
"RTN","PRCHLO4",167,0)
POREMF ; Create flat file for PO Remarks
"RTN","PRCHLO4",168,0)
 N OUTFIL13
"RTN","PRCHLO4",169,0)
 S OUTFIL13="IFCP"_STID_"F13.TXT"
"RTN","PRCHLO4",170,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL13,"W")
"RTN","PRCHLO4",171,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",172,0)
 D PORMKH^PRCHLO3
"RTN","PRCHLO4",173,0)
 D PORMKW^PRCHLO3
"RTN","PRCHLO4",174,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",175,0)
 Q
"RTN","PRCHLO4",176,0)
POPPTF ; Create flat file for PO Prompt payment terms data
"RTN","PRCHLO4",177,0)
 N OUTFIL14
"RTN","PRCHLO4",178,0)
 S OUTFIL14="IFCP"_STID_"F14.TXT"
"RTN","PRCHLO4",179,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL14,"W")
"RTN","PRCHLO4",180,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",181,0)
 D POPPTH^PRCHLO3
"RTN","PRCHLO4",182,0)
 D POPPTW^PRCHLO3
"RTN","PRCHLO4",183,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",184,0)
 Q
"RTN","PRCHLO4",185,0)
POAMTF ; Create flat file for PO Amount data
"RTN","PRCHLO4",186,0)
 N OUTFIL15
"RTN","PRCHLO4",187,0)
 S OUTFIL15="IFCP"_STID_"F15.TXT"
"RTN","PRCHLO4",188,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL15,"W")
"RTN","PRCHLO4",189,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",190,0)
 D POAMTH^PRCHLO3
"RTN","PRCHLO4",191,0)
 D POAMTW^PRCHLO3
"RTN","PRCHLO4",192,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",193,0)
 Q
"RTN","PRCHLO4",194,0)
POAMDF ; Create flat file for PO Amendment data
"RTN","PRCHLO4",195,0)
 N OUTFIL16
"RTN","PRCHLO4",196,0)
 S OUTFIL16="IFCP"_STID_"F16.TXT"
"RTN","PRCHLO4",197,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL16,"W")
"RTN","PRCHLO4",198,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",199,0)
 D POAMDH^PRCHLO3
"RTN","PRCHLO4",200,0)
 D POAMDW^PRCHLO3
"RTN","PRCHLO4",201,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",202,0)
 Q
"RTN","PRCHLO4",203,0)
POAMDCF ; Create flat file for PO Amendment changes
"RTN","PRCHLO4",204,0)
 N OUTFIL17
"RTN","PRCHLO4",205,0)
 S OUTFIL17="IFCP"_STID_"F17.TXT"
"RTN","PRCHLO4",206,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL17,"W")
"RTN","PRCHLO4",207,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",208,0)
 D POAMDCH^PRCHLO3
"RTN","PRCHLO4",209,0)
 D POAMDCW^PRCHLO3
"RTN","PRCHLO4",210,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",211,0)
 Q
"RTN","PRCHLO4",212,0)
POAMDDF ; Create flat file for PO Amendment Desc data
"RTN","PRCHLO4",213,0)
 N OUTFIL18
"RTN","PRCHLO4",214,0)
 S OUTFIL18="IFCP"_STID_"F18.TXT"
"RTN","PRCHLO4",215,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL18,"W")
"RTN","PRCHLO4",216,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",217,0)
 D PAMDDH^PRCHLO3
"RTN","PRCHLO4",218,0)
 D PAMDDW^PRCHLO3
"RTN","PRCHLO4",219,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",220,0)
 Q
"RTN","PRCHLO4",221,0)
POAMBKF ; Create flat file for PO amount breakout code
"RTN","PRCHLO4",222,0)
 N OUTFIL19
"RTN","PRCHLO4",223,0)
 S OUTFIL19="IFCP"_STID_"F19.TXT"
"RTN","PRCHLO4",224,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL19,"W")
"RTN","PRCHLO4",225,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",226,0)
 D PAMTBKH^PRCHLO3
"RTN","PRCHLO4",227,0)
 D PAMTBKW^PRCHLO3
"RTN","PRCHLO4",228,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",229,0)
 Q
"RTN","PRCHLO4",230,0)
FIL410 ; Create flat file for file 410 (Control Point Activity)
"RTN","PRCHLO4",231,0)
 N OUTFIL20
"RTN","PRCHLO4",232,0)
 S OUTFIL20="IFCP"_STID_"F20.TXT"
"RTN","PRCHLO4",233,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL20,"W")
"RTN","PRCHLO4",234,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",235,0)
 D CONTRPH^PRCHLO3
"RTN","PRCHLO4",236,0)
 D CONTRPW^PRCHLO3
"RTN","PRCHLO4",237,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",238,0)
 N OUTFIL21
"RTN","PRCHLO4",239,0)
 S OUTFIL21="IFCP"_STID_"F21.TXT"
"RTN","PRCHLO4",240,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL21,"W")
"RTN","PRCHLO4",241,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",242,0)
 D SUBCPH^PRCHLO3
"RTN","PRCHLO4",243,0)
 D SUBCPW^PRCHLO3
"RTN","PRCHLO4",244,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",245,0)
 Q
"RTN","PRCHLO4",246,0)
FIL424 ; Create flat file for file 424 (1358 Daily Record)
"RTN","PRCHLO4",247,0)
 N OUTFIL22
"RTN","PRCHLO4",248,0)
 S OUTFIL22="IFCP"_STID_"F22.TXT"
"RTN","PRCHLO4",249,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL22,"W")
"RTN","PRCHLO4",250,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",251,0)
 D DR1358H^PRCHLO3
"RTN","PRCHLO4",252,0)
 D DR1358W^PRCHLO3
"RTN","PRCHLO4",253,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",254,0)
 Q
"RTN","PRCHLO4",255,0)
FIL4241 ;Create flat file for file 424.1 (1358 Authorization Detail)
"RTN","PRCHLO4",256,0)
 N OUTFIL23
"RTN","PRCHLO4",257,0)
 S OUTFIL23="IFCP"_STID_"F23.TXT"
"RTN","PRCHLO4",258,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL23,"W")
"RTN","PRCHLO4",259,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",260,0)
 D AD1358H^PRCHLO3
"RTN","PRCHLO4",261,0)
 D AD1358W^PRCHLO3
"RTN","PRCHLO4",262,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",263,0)
 Q
"RTN","PRCHLO4",264,0)
TSTF ; Test directory for file creation
"RTN","PRCHLO4",265,0)
 N FILEDIR,TFILE,OUTFILT,POP,STID
"RTN","PRCHLO4",266,0)
 ; POP is returned by OPEN^%ZISH if file cannot be created.
"RTN","PRCHLO4",267,0)
 S POP=""
"RTN","PRCHLO4",268,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4",269,0)
 S OUTFILT="CLRSREADME"_STID_".TXT"
"RTN","PRCHLO4",270,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4",271,0)
 D OPEN^%ZISH("TFILE",FILEDIR,OUTFILT,"W")
"RTN","PRCHLO4",272,0)
 I POP  D
"RTN","PRCHLO4",273,0)
 . S CLRSERR=2
"RTN","PRCHLO4",274,0)
 . Q
"RTN","PRCHLO4",275,0)
 I CLRSERR'=2  D
"RTN","PRCHLO4",276,0)
 . D USE^%ZISUTL("TFILE")
"RTN","PRCHLO4",277,0)
 . W !,"$ ! This directory is used to store PO activity"
"RTN","PRCHLO4",278,0)
 . W !,"$ ! extracts and GIP Extracts which are transmitted"
"RTN","PRCHLO4",279,0)
 . W !,"$ ! to the Clinical Logistics Report Server on a monthly"
"RTN","PRCHLO4",280,0)
 . W !,"$ ! basis. There are 29 extract files IFCPXXXF1 through"
"RTN","PRCHLO4",281,0)
 . W !,"$ ! IFCPXXXF27, IFCPXXXG1 and IFCPXXXG2. In addition, there"
"RTN","PRCHLO4",282,0)
 . W !,"$ ! are 2 working files used for the FTP Transfer:"
"RTN","PRCHLO4",283,0)
 . W !,"$ ! CLRSxxx.DAT and CLRS1xxx.COM. CLRSREADMExxx.TXT is also present"
"RTN","PRCHLO4",284,0)
 . W !,"$ EXIT"
"RTN","PRCHLO4",285,0)
 . D CLOSE^%ZISH("TFILE")
"RTN","PRCHLO4",286,0)
 . Q
"RTN","PRCHLO4",287,0)
 Q
"RTN","PRCHLO4",288,0)
 ;
"RTN","PRCHLO4",289,0)
CRTCOM ; Create .DAT file to transfer file(s)
"RTN","PRCHLO4",290,0)
 N FILEDIR,POP,STID,OUTFLL1
"RTN","PRCHLO4",291,0)
 ; PRC*5.1*130 begin
"RTN","PRCHLO4",292,0)
 N PRCHUSN,PRCHPSW
"RTN","PRCHLO4",293,0)
 S PRCHUSN=$$GET^XPAR("SYS","PRCPLO USER NAME",1,"Q")
"RTN","PRCHLO4",294,0)
 I PRCHUSN="" S PRCPMSG(1)="There is no user name identified in the CLRS USER NAME Parameter.",PRCPMSG(2)="Please correct and retry." D MAILFTP^PRCHLO4A S CLRSERR=3 Q
"RTN","PRCHLO4",295,0)
 S PRCHUSN=$$DECRYP^XUSRB1(PRCHUSN)
"RTN","PRCHLO4",296,0)
 S PRCHPSW=$$GET^XPAR("SYS","PRCPLO PASSWORD",1,"Q")
"RTN","PRCHLO4",297,0)
 I PRCHPSW="" S PRCPMSG(1)="There is no password identified in the CLRS PASSWORD Parameter.",PRCPMSG(2)="Please correct and retry." D MAILFTP^PRCHLO4A S CLRSERR=3 Q
"RTN","PRCHLO4",298,0)
 S PRCHPSW=$$DECRYP^XUSRB1(PRCHPSW)
"RTN","PRCHLO4",299,0)
 ; PRC*5.1*130 end
"RTN","PRCHLO4",300,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4",301,0)
 S POP=""  ; POP is returned by OPEN^%ZISH
"RTN","PRCHLO4",302,0)
 ; S FILEDIR="$1$DGA2:[ANONYMOUS.CLRS]"  ;set dir for outpt files.
"RTN","PRCHLO4",303,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4",304,0)
 S OUTFLL1="CLRS"_STID_"FTP.DAT"
"RTN","PRCHLO4",305,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFLL1,"W")
"RTN","PRCHLO4",306,0)
 I POP  D
"RTN","PRCHLO4",307,0)
 . S CLRSERR=3
"RTN","PRCHLO4",308,0)
 . Q
"RTN","PRCHLO4",309,0)
 I CLRSERR'=3  D
"RTN","PRCHLO4",310,0)
 . D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",311,0)
 . ; Enter user name and password for Report Server Login ; PRC*5.1*130
"RTN","PRCHLO4",312,0)
 . W PRCHUSN,!,PRCHPSW,!
"RTN","PRCHLO4",313,0)
 . W "SET DEFAULT /LOCAL "_FILEDIR,!
"RTN","PRCHLO4",314,0)
 . W "PUT IFCP"_STID_"*.*;*",!  ; new code to issue PUT command
"RTN","PRCHLO4",315,0)
 . W "EXIT",!  ; Exit FTP
"RTN","PRCHLO4",316,0)
 . D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",317,0)
 . Q
"RTN","PRCHLO4",318,0)
 Q
"RTN","PRCHLO4",319,0)
CRTCOM1 ; Run CLRSFTP1.COM as com file for exception handling
"RTN","PRCHLO4",320,0)
 ;
"RTN","PRCHLO4",321,0)
 ;*98 Modified code to work with PRC CLRS ADDRESS parameter
"RTN","PRCHLO4",322,0)
 ;
"RTN","PRCHLO4",323,0)
 N FILEDIR,STID,OUTFLL2,ADDR
"RTN","PRCHLO4",324,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4",325,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4",326,0)
 S ADDR=$$GET^XPAR("SYS","PRC CLRS ADDRESS",1,"Q")
"RTN","PRCHLO4",327,0)
 I ADDR="" S PRCPMSG(1)="There is no address identified in the CLRS Address Parameter.",PRCPMSG(2)="Please correct and retry." D MAILFTP^PRCHLO4A S CLRSERR=1 Q
"RTN","PRCHLO4",328,0)
 S OUTFLL2="CLRS"_STID_"FTP1.COM"
"RTN","PRCHLO4",329,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFLL2,"W")
"RTN","PRCHLO4",330,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",331,0)
 W "$ SET VERIFY=(PROCEDURE,IMAGE)",!
"RTN","PRCHLO4",332,0)
 W "$ SET DEFAULT "_FILEDIR,!
"RTN","PRCHLO4",333,0)
 W "$ FTP "_ADDR_" /INPUT="_FILEDIR_"CLRS"_STID_"FTP.DAT",!
"RTN","PRCHLO4",334,0)
 ;
"RTN","PRCHLO4",335,0)
 W "$ EXIT 3",!
"RTN","PRCHLO4",336,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",337,0)
 Q
"RTN","PRCHLO4",338,0)
FTPCOM ; Issue the FTP command after CLRS1.TXT file is built
"RTN","PRCHLO4",339,0)
 ; remain in CACHE during FTP Process using
"RTN","PRCHLO4",340,0)
 ; $ZF(-1) call
"RTN","PRCHLO4",341,0)
 ; ; SACC Exception received for usage of $ZF(-1) in PRC*5.1*83
"RTN","PRCHLO4",342,0)
 ; See IFCAP technical manual
"RTN","PRCHLO4",343,0)
 ;
"RTN","PRCHLO4",344,0)
 ; commented out for testing
"RTN","PRCHLO4",345,0)
 ; add hook to mailman messaging for ftp, check variable PV
"RTN","PRCHLO4",346,0)
 N PV,XPV1,FILEDIR,STID
"RTN","PRCHLO4",347,0)
 ;
"RTN","PRCHLO4",348,0)
 ;
"RTN","PRCHLO4",349,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4",350,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4",351,0)
 S XPV1="S PV=$ZF(-1,""@"_FILEDIR_"CLRS"_STID_"FTP1.COM/OUTPUT="_FILEDIR_"CLRS"_STID_"FTP1.LOG"")"
"RTN","PRCHLO4",352,0)
 X XPV1  ; Run the .COM file to transfer files
"RTN","PRCHLO4",353,0)
 ;
"RTN","PRCHLO4",354,0)
 ; Error flag logic
"RTN","PRCHLO4",355,0)
 I PV=-1  D  ; This error is generated if failure during xfer occurs
"RTN","PRCHLO4",356,0)
 . S CLRSERR=1
"RTN","PRCHLO4",357,0)
 . Q
"RTN","PRCHLO4",358,0)
 Q
"RTN","PRCHLO4",359,0)
CRTUNX1 ;PRC*5.1*172 added logic for Full Linux
"RTN","PRCHLO4",360,0)
 ; Run CLRS_STID_UNX.sh as shell script file for exception handling
"RTN","PRCHLO4",361,0)
 ;
"RTN","PRCHLO4",362,0)
 ;*98 Modified code to work with PRC CLRS ADDRESS parameter
"RTN","PRCHLO4",363,0)
 ;
"RTN","PRCHLO4",364,0)
 N FILEDIR,STID,OUTFLL2,ADDR,CMD,FILES,HOST,PASSWD,USER
"RTN","PRCHLO4",365,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4",366,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4",367,0)
 S ADDR=$$GET^XPAR("SYS","PRC CLRS ADDRESS",1,"Q")
"RTN","PRCHLO4",368,0)
 I ADDR="" S PRCPMSG(1)="There is no address identified in the CLRS Address Parameter.",PRCPMSG(2)="Please correct and retry." D MAILFTP^PRCHLO4A S CLRSERR=1 Q
"RTN","PRCHLO4",369,0)
 S OUTFLL2="CLRS"_STID_"UNX.SH"
"RTN","PRCHLO4",370,0)
 ; add linux variables here
"RTN","PRCHLO4",371,0)
  ; 
"RTN","PRCHLO4",372,0)
 S HOST=ADDR
"RTN","PRCHLO4",373,0)
 ; 
"RTN","PRCHLO4",374,0)
 S PRCHUSN=$$GET^XPAR("SYS","PRCPLO USER NAME",1,"Q")
"RTN","PRCHLO4",375,0)
 I PRCHUSN="" S PRCPMSG(1)="There is no user name identified in the CLRS USER NAME Parameter.",PRCPMSG(2)="Please correct and retry." D MAILFTP^PRCHLO4A S CLRSERR=1 Q
"RTN","PRCHLO4",376,0)
 S PRCHUSN=$$DECRYP^XUSRB1(PRCHUSN)
"RTN","PRCHLO4",377,0)
 S PRCHPSW=$$GET^XPAR("SYS","PRCPLO PASSWORD",1,"Q")
"RTN","PRCHLO4",378,0)
 I PRCHPSW="" S PRCPMSG(1)="There is no password identified in the CLRS PASSWORD Parameter.",PRCPMSG(2)="Please correct and retry." D MAILFTP^PRCHLO4A S CLRSERR=1 Q
"RTN","PRCHLO4",379,0)
 S PRCHPSW=$$DECRYP^XUSRB1(PRCHPSW)
"RTN","PRCHLO4",380,0)
 S USER=PRCHUSN
"RTN","PRCHLO4",381,0)
 S PASSWD=PRCHPSW
"RTN","PRCHLO4",382,0)
 S FILES="IFCP*TXT"
"RTN","PRCHLO4",383,0)
 ; end adding LINUX variables
"RTN","PRCHLO4",384,0)
 ; PRC*5.1*130 end
"RTN","PRCHLO4",385,0)
 ;
"RTN","PRCHLO4",386,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFLL2,"W")
"RTN","PRCHLO4",387,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",388,0)
 ;
"RTN","PRCHLO4",389,0)
 ; add Linux code below
"RTN","PRCHLO4",390,0)
 W "#!/bin/bash",!
"RTN","PRCHLO4",391,0)
 W !
"RTN","PRCHLO4",392,0)
 W "HOST='"_HOST_"'",!
"RTN","PRCHLO4",393,0)
 W "USER='"_USER_"'",!
"RTN","PRCHLO4",394,0)
 W "PASSWD='"_PASSWD_"'",!
"RTN","PRCHLO4",395,0)
 W "FILES='"_FILES_"'",!
"RTN","PRCHLO4",396,0)
 W !
"RTN","PRCHLO4",397,0)
 W "cd ",FILEDIR,!
"RTN","PRCHLO4",398,0)
 W !
"RTN","PRCHLO4",399,0)
 W "ftp -n $HOST <<END_SCRIPT",!
"RTN","PRCHLO4",400,0)
 W "quote USER $USER",!
"RTN","PRCHLO4",401,0)
 W "quote PASS $PASSWD",!
"RTN","PRCHLO4",402,0)
 W "prompt",!
"RTN","PRCHLO4",403,0)
 W "mput $FILES",!
"RTN","PRCHLO4",404,0)
 W "quit",!
"RTN","PRCHLO4",405,0)
 W "END_SCRIPT",!
"RTN","PRCHLO4",406,0)
 W "exit 0",!
"RTN","PRCHLO4",407,0)
 ; W "$ EXIT 3",!
"RTN","PRCHLO4",408,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",409,0)
 ; delete the test file before LINUX FTP transmission
"RTN","PRCHLO4",410,0)
 S CMD="rm -f "
"RTN","PRCHLO4",411,0)
 S XPV1="S PV=$ZF(-1,"""_CMD_FILEDIR_"IFCP"_STID_"TST.TXT"")"
"RTN","PRCHLO4",412,0)
 X XPV1
"RTN","PRCHLO4",413,0)
 Q
"RTN","PRCHLO4",414,0)
UNXFTP ;PRC*5.1*172 added logic for Full Linux
"RTN","PRCHLO4",415,0)
 ; Issue the FTP command after CLRS1.TXT file is built
"RTN","PRCHLO4",416,0)
 ; remain in CACHE during FTP Process using
"RTN","PRCHLO4",417,0)
 ; $ZF(-1) call
"RTN","PRCHLO4",418,0)
 ; ; SACC Exception received for usage of $ZF(-1) in PRC*5.1*83
"RTN","PRCHLO4",419,0)
 ; See IFCAP technical manual
"RTN","PRCHLO4",420,0)
 ;
"RTN","PRCHLO4",421,0)
 ; commented out for testing
"RTN","PRCHLO4",422,0)
 ; add hook to mailman messaging for ftp, check variable PV
"RTN","PRCHLO4",423,0)
 N PV,XPV1,FILEDIR,STID
"RTN","PRCHLO4",424,0)
 ;
"RTN","PRCHLO4",425,0)
 ;
"RTN","PRCHLO4",426,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4",427,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4",428,0)
 S XPV1="S PV=$ZF(-1,"""_FILEDIR_"CLRS"_STID_"UNX.SH >"_FILEDIR_"UNIXFTP.LOG"")"
"RTN","PRCHLO4",429,0)
 X XPV1  ; Run the .SH file to transfer files
"RTN","PRCHLO4",430,0)
 ;
"RTN","PRCHLO4",431,0)
 ; Error flag logic
"RTN","PRCHLO4",432,0)
 I XPV1=-1  D  ; This error is generated if failure during xfer occurs
"RTN","PRCHLO4",433,0)
 . S CLRSERR=1
"RTN","PRCHLO4",434,0)
 . Q
"RTN","PRCHLO4",435,0)
 Q
"RTN","PRCHLO4A")
0^2^B103101558^B72354777
"RTN","PRCHLO4A",1,0)
PRCHLO4A ;WOIFO/RLL/DAP-EXTRACT ROUTINE CLO REPORT SERVER ;12/30/10  14:58
"RTN","PRCHLO4A",2,0)
 ;;5.1;IFCAP;**83,104,98,130,154,172**;Oct 20, 2000;Build 2
"RTN","PRCHLO4A",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRCHLO4A",4,0)
 ; Continuation of PRCHLO4
"RTN","PRCHLO4A",5,0)
 ;
"RTN","PRCHLO4A",6,0)
 ; PRCHLO4A routines are used to Write out the Header and data
"RTN","PRCHLO4A",7,0)
 ;
"RTN","PRCHLO4A",8,0)
 ;Patch PRC*5.1*172 are modifications to CLRS transmission processing 
"RTN","PRCHLO4A",9,0)
 ;to support those sites that have migrated to Full LINUX OS
"RTN","PRCHLO4A",10,0)
 ; 
"RTN","PRCHLO4A",11,0)
 Q
"RTN","PRCHLO4A",12,0)
GETDIR ; Get directory from PRCPLO EXTRACT DIRECTORY system parameter for CLRS
"RTN","PRCHLO4A",13,0)
 N FILEDIR,STID
"RTN","PRCHLO4A",14,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",15,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",16,0)
 ;
"RTN","PRCHLO4A",17,0)
 Q
"RTN","PRCHLO4A",18,0)
 ;
"RTN","PRCHLO4A",19,0)
CRTWIN ; Create CLRSxxxWFTP.TXT  file to transfer file(s)
"RTN","PRCHLO4A",20,0)
 ;*98 Modified to work with PRC CLRS ADDRESS parameter
"RTN","PRCHLO4A",21,0)
 N FILEDIR,POP,STID,OUTFLL1,ADDR
"RTN","PRCHLO4A",22,0)
 ; PRC*5.1*130 begin
"RTN","PRCHLO4A",23,0)
 N PRCHUSN,PRCHPSW
"RTN","PRCHLO4A",24,0)
 ; PRC*5.1*130 end
"RTN","PRCHLO4A",25,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",26,0)
 S POP=""  ; POP is returned by OPEN^%ZISH
"RTN","PRCHLO4A",27,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",28,0)
 ; RLL/PRC*5.1*104 change logic to create separate FTP
"RTN","PRCHLO4A",29,0)
 ; transfer files (1 for each file for Windows/Cache)
"RTN","PRCHLO4A",30,0)
 S ADDR=$$GET^XPAR("SYS","PRC CLRS ADDRESS",1,"Q")
"RTN","PRCHLO4A",31,0)
 I ADDR="" S PRCPMSG(1)="There is no address identified in the CLRS Adress Parameter.",PRCPMSG(2)="Please correct and retry." D MAILFTP S CLRSERR=1 Q
"RTN","PRCHLO4A",32,0)
 ; PRC*5.1*130 begin
"RTN","PRCHLO4A",33,0)
 S PRCHUSN=$$GET^XPAR("SYS","PRCPLO USER NAME",1,"Q")
"RTN","PRCHLO4A",34,0)
 I PRCHUSN="" S PRCPMSG(1)="There is no user name identified in the CLRS USER NAME Parameter.",PRCPMSG(2)="Please correct and retry." D MAILFTP S CLRSERR=1 Q
"RTN","PRCHLO4A",35,0)
 S PRCHUSN=$$DECRYP^XUSRB1(PRCHUSN)
"RTN","PRCHLO4A",36,0)
 S PRCHPSW=$$GET^XPAR("SYS","PRCPLO PASSWORD",1,"Q")
"RTN","PRCHLO4A",37,0)
 I PRCHPSW="" S PRCPMSG(1)="There is no password identified in the CLRS PASSWORD Parameter.",PRCPMSG(2)="Please correct and retry." D MAILFTP S CLRSERR=1 Q
"RTN","PRCHLO4A",38,0)
 S PRCHPSW=$$DECRYP^XUSRB1(PRCHPSW)
"RTN","PRCHLO4A",39,0)
 ; PRC*5.1*130 end
"RTN","PRCHLO4A",40,0)
 ;
"RTN","PRCHLO4A",41,0)
 I CLRSERR'=3  D
"RTN","PRCHLO4A",42,0)
 . N PONN  ; File number for File type
"RTN","PRCHLO4A",43,0)
 . S PONN=1
"RTN","PRCHLO4A",44,0)
 . F PONN=1:1:27  D
"RTN","PRCHLO4A",45,0)
 . . N FTY  ; File type F=Po Activity , G=GIP
"RTN","PRCHLO4A",46,0)
 . . ;
"RTN","PRCHLO4A",47,0)
 . . S FTY="F"
"RTN","PRCHLO4A",48,0)
 . . S OUTFLL1="CLRS"_STID_FTY_PONN_"WFTP.TXT"
"RTN","PRCHLO4A",49,0)
 . . D OPEN^%ZISH("FILE1",FILEDIR,OUTFLL1,"W")
"RTN","PRCHLO4A",50,0)
 . . I POP  D
"RTN","PRCHLO4A",51,0)
 . . . S CLRSERR=3
"RTN","PRCHLO4A",52,0)
 . . . Q
"RTN","PRCHLO4A",53,0)
 . . D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4A",54,0)
 . . D BLDF1
"RTN","PRCHLO4A",55,0)
 . . D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4A",56,0)
 . . Q
"RTN","PRCHLO4A",57,0)
 . Q
"RTN","PRCHLO4A",58,0)
 ;
"RTN","PRCHLO4A",59,0)
 I CLRSERR'=3  D
"RTN","PRCHLO4A",60,0)
 . ; RLL/PRC*5.1*104 change logic to create separate FTP
"RTN","PRCHLO4A",61,0)
 . ; tranfer files (1 for each file for Windows/Cache)
"RTN","PRCHLO4A",62,0)
 . N PONN  ; File number for file type
"RTN","PRCHLO4A",63,0)
 . S PONN=1
"RTN","PRCHLO4A",64,0)
 . F PONN=1:1:2  D
"RTN","PRCHLO4A",65,0)
 . . N FTY  ; File type F=Po Activity , G=GIP
"RTN","PRCHLO4A",66,0)
 . . S FTY="G"
"RTN","PRCHLO4A",67,0)
 . . S OUTFLL1="CLRS"_STID_FTY_PONN_"WFTP.TXT"
"RTN","PRCHLO4A",68,0)
 . . D OPEN^%ZISH("FILE1",FILEDIR,OUTFLL1,"W")
"RTN","PRCHLO4A",69,0)
 . . I POP  D
"RTN","PRCHLO4A",70,0)
 . . . S CLRSERR=3
"RTN","PRCHLO4A",71,0)
 . . . Q
"RTN","PRCHLO4A",72,0)
 . . D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4A",73,0)
 . . D BLDF1
"RTN","PRCHLO4A",74,0)
 . . D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4A",75,0)
 . . Q
"RTN","PRCHLO4A",76,0)
 . Q
"RTN","PRCHLO4A",77,0)
 Q
"RTN","PRCHLO4A",78,0)
BLDF1 ; RLL/PRC*5.1*104 added logic to create separate FTP
"RTN","PRCHLO4A",79,0)
 ; transfers (1 for each file)
"RTN","PRCHLO4A",80,0)
 ;
"RTN","PRCHLO4A",81,0)
 W "open "_ADDR,!  ;Connect to the Report Server
"RTN","PRCHLO4A",82,0)
 ; PRC*5.1*130 begin
"RTN","PRCHLO4A",83,0)
 ; Enter user name for Report Server Login
"RTN","PRCHLO4A",84,0)
 W PRCHUSN,!
"RTN","PRCHLO4A",85,0)
 ; Enter P/W for Report Server Login
"RTN","PRCHLO4A",86,0)
 W PRCHPSW,!
"RTN","PRCHLO4A",87,0)
 ; PRC*5.1*130 end
"RTN","PRCHLO4A",88,0)
 W "PUT "_FILEDIR_"IFCP"_STID_FTY_PONN_".TXT",!
"RTN","PRCHLO4A",89,0)
 W "bye",!  ; Exit FTP
"RTN","PRCHLO4A",90,0)
 ;
"RTN","PRCHLO4A",91,0)
 Q
"RTN","PRCHLO4A",92,0)
CKRPTSV ; Check for availability of report server
"RTN","PRCHLO4A",93,0)
 ; Several steps need to be performed
"RTN","PRCHLO4A",94,0)
 ; 1. Set up script to perform PING
"RTN","PRCHLO4A",95,0)
 ; 2. Capture log file during PING
"RTN","PRCHLO4A",96,0)
 ; 3. Read logfile into working global
"RTN","PRCHLO4A",97,0)
 ; 4. Determine Success/Failure of PING to server
"RTN","PRCHLO4A",98,0)
 ; 5. If successful, continue processing (CLRSERR=0)
"RTN","PRCHLO4A",99,0)
 ; 6. If problem occurs, S CLRSERR=3 and generate message
"RTN","PRCHLO4A",100,0)
 ;
"RTN","PRCHLO4A",101,0)
 I CKOS["VMS" D VMSPING  ; CKOS set in PRCHLO5
"RTN","PRCHLO4A",102,0)
 I CKOS["NT" D WINPING  ; CKOS set in PRCHLO5
"RTN","PRCHLO4A",103,0)
 I CKOS["UNIX" D UNXPING ; added for UNIX LINUX PING   ;PRC*5.1*172 added check for Full Linux
"RTN","PRCHLO4A",104,0)
 Q
"RTN","PRCHLO4A",105,0)
VMSPING ; need to PING report server to make sure it is available
"RTN","PRCHLO4A",106,0)
 ;
"RTN","PRCHLO4A",107,0)
 ; 1. Create .COM file to execute
"RTN","PRCHLO4A",108,0)
 ;*98 Modified to work with PRC CLRS ADDRESS parameter
"RTN","PRCHLO4A",109,0)
 N FILEDIR,STID,OUTFLL2,ADDR
"RTN","PRCHLO4A",110,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",111,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",112,0)
 S ADDR=$$GET^XPAR("SYS","PRC CLRS ADDRESS",1,"Q")
"RTN","PRCHLO4A",113,0)
 I ADDR="" S PRCPMSG(1)="There is no address identified in the CLRS Address Parameter.",PRCPMSG(2)="Please correct and retry." D MAILFTP S CLRSERR=1 Q
"RTN","PRCHLO4A",114,0)
 ;
"RTN","PRCHLO4A",115,0)
 S OUTFLL2="CLRS"_STID_"PING.COM"
"RTN","PRCHLO4A",116,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFLL2,"W")
"RTN","PRCHLO4A",117,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4A",118,0)
 W "$ SET VERIFY=(PROCEDURE,IMAGE)",!
"RTN","PRCHLO4A",119,0)
 W "$ SET DEFAULT "_FILEDIR,!
"RTN","PRCHLO4A",120,0)
 W "$ TCPIP",!
"RTN","PRCHLO4A",121,0)
 W "PING "_ADDR,!
"RTN","PRCHLO4A",122,0)
 W "EXIT",!
"RTN","PRCHLO4A",123,0)
 W "$ EXIT 3",!
"RTN","PRCHLO4A",124,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4A",125,0)
 ;
"RTN","PRCHLO4A",126,0)
 ; 2. Execute .COM file, create logfile
"RTN","PRCHLO4A",127,0)
 S XPV1="S PV=$ZF(-1,""@"_FILEDIR_"CLRS"_STID_"PING.COM/OUTPUT="_FILEDIR_"CLRS"_STID_"PING.LOG"")"
"RTN","PRCHLO4A",128,0)
 X XPV1  ; Run the .com file
"RTN","PRCHLO4A",129,0)
 ;
"RTN","PRCHLO4A",130,0)
 ; 3. Read Logfile into working global
"RTN","PRCHLO4A",131,0)
 N FNAME,XLOG
"RTN","PRCHLO4A",132,0)
 S FNAME="CLRS"_STID_"PING.LOG"
"RTN","PRCHLO4A",133,0)
 S XLOG=$$FTG^%ZISH(FILEDIR,FNAME,$NAME(^TMP("PRCLRSLOG",$J,1)),3)
"RTN","PRCHLO4A",134,0)
 ; Check global for %SYSTEM or 0 packets received
"RTN","PRCHLO4A",135,0)
 N PNG,PNG1,PNG2,PNG3
"RTN","PRCHLO4A",136,0)
 S PNG=0,PNG1=0,PNG2=0
"RTN","PRCHLO4A",137,0)
 F  S PNG=$O(^TMP("PRCLRSLOG",$J,PNG)) Q:PNG=""  D
"RTN","PRCHLO4A",138,0)
 . S PNG1=$G(^TMP("PRCLRSLOG",$J,PNG))
"RTN","PRCHLO4A",139,0)
 . I PNG1["0 packets received" S CLRSERR=3
"RTN","PRCHLO4A",140,0)
 . I PNG1["%SYSTEM" S CLRSERR=3
"RTN","PRCHLO4A",141,0)
 . Q
"RTN","PRCHLO4A",142,0)
 Q
"RTN","PRCHLO4A",143,0)
UNXPING ;PRC*5.1*172 added logic for Full Linux
"RTN","PRCHLO4A",144,0)
 ; UNIX/LINUX PING
"RTN","PRCHLO4A",145,0)
 ;
"RTN","PRCHLO4A",146,0)
 ; PING report server to make sure it is available
"RTN","PRCHLO4A",147,0)
 ;*98 Modified to work with PRC CLRS ADDRESS parameter 
"RTN","PRCHLO4A",148,0)
 N PV,XPV1,FILEDIR,STID,XLOG,ADDR
"RTN","PRCHLO4A",149,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",150,0)
 S ADDR=$$GET^XPAR("SYS","PRC CLRS ADDRESS",1,"Q")
"RTN","PRCHLO4A",151,0)
 I ADDR="" S PRCPMSG(1)="There is no address identified in the CLRS Adress Parameter.",PRCPMSG(2)="Please correct and retry." D MAILFTP S CLRSERR=1 Q
"RTN","PRCHLO4A",152,0)
 ;
"RTN","PRCHLO4A",153,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",154,0)
 S XPV1="S PV=$ZF(-1,""ping -c 3 "_ADDR_">"_FILEDIR_"CLRS"_STID_"PING.LOG"")"
"RTN","PRCHLO4A",155,0)
 X XPV1
"RTN","PRCHLO4A",156,0)
 S FNAME="CLRS"_STID_"PING.LOG"
"RTN","PRCHLO4A",157,0)
 S XLOG=$$FTG^%ZISH(FILEDIR,FNAME,$NAME(^TMP("PRCLRSLOG",$J,1)),3)
"RTN","PRCHLO4A",158,0)
 N PNG,PNG1,PNG2,PNG3
"RTN","PRCHLO4A",159,0)
 S PNG=0,PNG1=0,PNG2=0
"RTN","PRCHLO4A",160,0)
 F  S PNG=$O(^TMP("PRCLRSLOG",$J,PNG)) Q:PNG=""  D
"RTN","PRCHLO4A",161,0)
 . S PNG1=$G(^TMP("PRCLRSLOG",$J,PNG))
"RTN","PRCHLO4A",162,0)
 . I PNG1["0 received" S CLRSERR=3
"RTN","PRCHLO4A",163,0)
 . Q
"RTN","PRCHLO4A",164,0)
 Q
"RTN","PRCHLO4A",165,0)
 ;
"RTN","PRCHLO4A",166,0)
WINPING ; PING report server to make sure it is available
"RTN","PRCHLO4A",167,0)
 ;*98 Modified to work with PRC CLRS ADDRESS parameter 
"RTN","PRCHLO4A",168,0)
 N PV,XPV1,FILEDIR,STID,XLOG,ADDR
"RTN","PRCHLO4A",169,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",170,0)
 S ADDR=$$GET^XPAR("SYS","PRC CLRS ADDRESS",1,"Q")
"RTN","PRCHLO4A",171,0)
 I ADDR="" S PRCPMSG(1)="There is no address identified in the CLRS Adress Parameter.",PRCPMSG(2)="Please correct and retry." D MAILFTP S CLRSERR=1 Q
"RTN","PRCHLO4A",172,0)
 ;
"RTN","PRCHLO4A",173,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",174,0)
 S XPV1="S PV=$ZF(-1,""PING "_ADDR_">"_FILEDIR_"CLRS"_STID_"PING.LOG"")"
"RTN","PRCHLO4A",175,0)
 X XPV1
"RTN","PRCHLO4A",176,0)
 S FNAME="CLRS"_STID_"PING.LOG"
"RTN","PRCHLO4A",177,0)
 S XLOG=$$FTG^%ZISH(FILEDIR,FNAME,$NAME(^TMP("PRCLRSLOG",$J,1)),3)
"RTN","PRCHLO4A",178,0)
 N PNG,PNG1,PNG2,PNG3
"RTN","PRCHLO4A",179,0)
 S PNG=0,PNG1=0,PNG2=0
"RTN","PRCHLO4A",180,0)
 F  S PNG=$O(^TMP("PRCLRSLOG",$J,PNG)) Q:PNG=""  D
"RTN","PRCHLO4A",181,0)
 . S PNG1=$G(^TMP("PRCLRSLOG",$J,PNG))
"RTN","PRCHLO4A",182,0)
 . I PNG1["Received = 0" S CLRSERR=3
"RTN","PRCHLO4A",183,0)
 . Q
"RTN","PRCHLO4A",184,0)
 Q
"RTN","PRCHLO4A",185,0)
 ;
"RTN","PRCHLO4A",186,0)
LOG2FILE ; Set logfile to global, add to mail message
"RTN","PRCHLO4A",187,0)
 ;
"RTN","PRCHLO4A",188,0)
 ;
"RTN","PRCHLO4A",189,0)
 N FILEDIR,STID,FNAME,XLOG
"RTN","PRCHLO4A",190,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",191,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",192,0)
 I CKOS["VMS" S FNAME="CLRS"_STID_"FTP1.LOG"
"RTN","PRCHLO4A",193,0)
 I CKOS["NT" S FNAME="CLRS"_STID_"F1FTP1.LOG"
"RTN","PRCHLO4A",194,0)
 I CKOS["UNIX" S FNAME="UNIXFTP.LOG"     ;PRC*5.1*172 added check for Full Linux
"RTN","PRCHLO4A",195,0)
 S XLOG=$$FTG^%ZISH(FILEDIR,FNAME,$NAME(^TMP("PRCHLOG",$J,1)),3)
"RTN","PRCHLO4A",196,0)
 ; Log file is in the global ^TMP("PRCHLOG", lets put it in
"RTN","PRCHLO4A",197,0)
 ; the message beginning at PRCPMSG(11)
"RTN","PRCHLO4A",198,0)
 ;
"RTN","PRCHLO4A",199,0)
 N LG1,LG2,LG3,LG4,LGCNT
"RTN","PRCHLO4A",200,0)
 S LG1=0,LG2=0,LG3=0,LG4=0,LGCNT=11
"RTN","PRCHLO4A",201,0)
 F  S LG1=$O(^TMP("PRCHLOG",$J,LG1)) Q:LG1=""  D
"RTN","PRCHLO4A",202,0)
 . S LG3=$G(^TMP("PRCHLOG",$J,LG1))
"RTN","PRCHLO4A",203,0)
 . S PRCPMSG(LGCNT)=LG3
"RTN","PRCHLO4A",204,0)
 . S LGCNT=LGCNT+1
"RTN","PRCHLO4A",205,0)
 . Q
"RTN","PRCHLO4A",206,0)
 D MAILFTP
"RTN","PRCHLO4A",207,0)
 Q
"RTN","PRCHLO4A",208,0)
FTPCOM ; Issue the FTP command after CLRSxxxWFTP.TXT file is built
"RTN","PRCHLO4A",209,0)
 ; remain in CACHE during FTP Process using
"RTN","PRCHLO4A",210,0)
 ; $ZF(-1) call
"RTN","PRCHLO4A",211,0)
 ;
"RTN","PRCHLO4A",212,0)
 ; rll/ 8/30/2006 Change logic to initiate transfer one file
"RTN","PRCHLO4A",213,0)
 ; at a time to the report server for Windows/Cache stations
"RTN","PRCHLO4A",214,0)
 ; This was done after a hang was observed between transfers.
"RTN","PRCHLO4A",215,0)
 ;
"RTN","PRCHLO4A",216,0)
 N LPP1,LPP2
"RTN","PRCHLO4A",217,0)
 S LPP1=0,LPP2="F"
"RTN","PRCHLO4A",218,0)
 F LPP1=1:1:27  D  ; run the FTP command for the 27 PO files
"RTN","PRCHLO4A",219,0)
 . D RUNFTPT
"RTN","PRCHLO4A",220,0)
 . Q
"RTN","PRCHLO4A",221,0)
 S LPP1=0,LPP2="G"
"RTN","PRCHLO4A",222,0)
 F LPP1=1:1:2  D  ; run the FTP command for the 2 GIP files
"RTN","PRCHLO4A",223,0)
 . D RUNFTPT
"RTN","PRCHLO4A",224,0)
 . Q
"RTN","PRCHLO4A",225,0)
 Q
"RTN","PRCHLO4A",226,0)
 ;
"RTN","PRCHLO4A",227,0)
RUNFTPT ; Run the FTP transfer for Windows
"RTN","PRCHLO4A",228,0)
 N PV,XPV1,FILEDIR,STID
"RTN","PRCHLO4A",229,0)
 ;
"RTN","PRCHLO4A",230,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",231,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",232,0)
 ; SACC Exception received for usage of $ZF(-1) in PRC*5.1*83
"RTN","PRCHLO4A",233,0)
 ; See IFCAP Technical Manual
"RTN","PRCHLO4A",234,0)
 S XPV1="S PV=$ZF(-1,""ftp -s:"_FILEDIR_"CLRS"_STID_LPP2_LPP1_"WFTP.TXT>"_FILEDIR_"CLRS"_STID_LPP2_LPP1_"FTP1.LOG"")"
"RTN","PRCHLO4A",235,0)
 X XPV1  ; FTP the files, Comment out for testing
"RTN","PRCHLO4A",236,0)
 ;
"RTN","PRCHLO4A",237,0)
 ; error flag logic
"RTN","PRCHLO4A",238,0)
 I PV=-1  D  ; Note, this error is logged on system error during xfer
"RTN","PRCHLO4A",239,0)
 . S CLRSERR=1
"RTN","PRCHLO4A",240,0)
 . Q
"RTN","PRCHLO4A",241,0)
 Q
"RTN","PRCHLO4A",242,0)
DELWIN ; Delete windows files
"RTN","PRCHLO4A",243,0)
 ;
"RTN","PRCHLO4A",244,0)
 ;
"RTN","PRCHLO4A",245,0)
 I CKOS["NT"  D
"RTN","PRCHLO4A",246,0)
 . N LPP1,LPP2
"RTN","PRCHLO4A",247,0)
 . S LPP1=0,LPP2="F"
"RTN","PRCHLO4A",248,0)
 . F LPP1=1:1:27  D  ; run the FTP command for the 27 PO files
"RTN","PRCHLO4A",249,0)
 . . D DELFTPF
"RTN","PRCHLO4A",250,0)
 . . Q
"RTN","PRCHLO4A",251,0)
 . Q
"RTN","PRCHLO4A",252,0)
 S LPP1=0,LPP2="G"
"RTN","PRCHLO4A",253,0)
 F LPP1=1:1:2  D
"RTN","PRCHLO4A",254,0)
 . D DELFTPF  ; Delete the GIP files
"RTN","PRCHLO4A",255,0)
 . Q
"RTN","PRCHLO4A",256,0)
 Q
"RTN","PRCHLO4A",257,0)
DELUNX ;PRC*5.1*172 added logic for Full Linux
"RTN","PRCHLO4A",258,0)
 ; Delete the FTP files, logs , and .TXT files
"RTN","PRCHLO4A",259,0)
 ;
"RTN","PRCHLO4A",260,0)
 S OUTFLL2="CLRSCLNUP.SH"
"RTN","PRCHLO4A",261,0)
 N FILEDIR,STID,XPV
"RTN","PRCHLO4A",262,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",263,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",264,0)
 ; delete previous extract
"RTN","PRCHLO4A",265,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFLL2,"W")
"RTN","PRCHLO4A",266,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4A",267,0)
 ; add syntax here to create shell script
"RTN","PRCHLO4A",268,0)
 ;
"RTN","PRCHLO4A",269,0)
 ;
"RTN","PRCHLO4A",270,0)
 ;
"RTN","PRCHLO4A",271,0)
 ; add Linux code below
"RTN","PRCHLO4A",272,0)
 W "#!/bin/bash",!
"RTN","PRCHLO4A",273,0)
 W !
"RTN","PRCHLO4A",274,0)
 W "cd ",FILEDIR,!
"RTN","PRCHLO4A",275,0)
 ; W !
"RTN","PRCHLO4A",276,0)
 W "rm -f CLRS*.TXT",!
"RTN","PRCHLO4A",277,0)
 W "rm -f IFCP*.TXT",!
"RTN","PRCHLO4A",278,0)
 W "rm -f CLRS*UNX*",!
"RTN","PRCHLO4A",279,0)
 W "rm -f CLRSCLNUP*",!
"RTN","PRCHLO4A",280,0)
 W "exit 0",!
"RTN","PRCHLO4A",281,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4A",282,0)
 ; get ready to delete files
"RTN","PRCHLO4A",283,0)
 ;
"RTN","PRCHLO4A",284,0)
 ; NOTE: This is a test entry point if problems occur with directory permissions
"RTN","PRCHLO4A",285,0)
 ; if the directory is set up properly, the begin/end code in not needed
"RTN","PRCHLO4A",286,0)
 ; this code was left in for troubleshooting via M/Cache
"RTN","PRCHLO4A",287,0)
 ; begin troubleshooting code
"RTN","PRCHLO4A",288,0)
 ; peform CHMOD on SHELL SCRIPT to make it executable
"RTN","PRCHLO4A",289,0)
 ; S XPV1="S PV=$ZF(-1,""CHMOD 755 "_FILEDIR_"CLRS"_"CLNUP.SH"")"
"RTN","PRCHLO4A",290,0)
 ; S XPV1="S PV=$ZF(-1,"""_FILEDIR_"CLRS"_"CLNUP.SH"")"
"RTN","PRCHLO4A",291,0)
 ; X XPV1
"RTN","PRCHLO4A",292,0)
 ; end troubleshooting code
"RTN","PRCHLO4A",293,0)
 D DELUNX1
"RTN","PRCHLO4A",294,0)
 Q
"RTN","PRCHLO4A",295,0)
 ; 
"RTN","PRCHLO4A",296,0)
 ;
"RTN","PRCHLO4A",297,0)
 ;
"RTN","PRCHLO4A",298,0)
DELUNX1 ;PRC*5.1*172 added logic for Full Linux
"RTN","PRCHLO4A",299,0)
 ; Delete UNIX Files
"RTN","PRCHLO4A",300,0)
 ;
"RTN","PRCHLO4A",301,0)
 ; S XPV1="S PV=$ZF(-1,"""_FILEDIR_"CLRS"_STID_"UNX.SH"")"
"RTN","PRCHLO4A",302,0)
 S XPV1="S PV=$ZF(-1,"""_FILEDIR_"CLRS"_"CLNUP.SH"")"
"RTN","PRCHLO4A",303,0)
 X XPV1
"RTN","PRCHLO4A",304,0)
 Q
"RTN","PRCHLO4A",305,0)
DELFTPF ; Delete the FTP files, logs , and .TXT files
"RTN","PRCHLO4A",306,0)
 ;
"RTN","PRCHLO4A",307,0)
 N FILEDIR,STID,XPV
"RTN","PRCHLO4A",308,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",309,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",310,0)
 ; delete previous extract
"RTN","PRCHLO4A",311,0)
 S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"IFCP"_STID_LPP2_LPP1_".TXT"")"
"RTN","PRCHLO4A",312,0)
 X XPV  ; comment out for testing
"RTN","PRCHLO4A",313,0)
 ; delete previous logfile
"RTN","PRCHLO4A",314,0)
 ;
"RTN","PRCHLO4A",315,0)
 S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"CLRS"_STID_LPP2_LPP1_"FTP1.LOG"")"
"RTN","PRCHLO4A",316,0)
 X XPV  ; comment out for testing
"RTN","PRCHLO4A",317,0)
 ; delete previous ftp file for transfer
"RTN","PRCHLO4A",318,0)
 ;
"RTN","PRCHLO4A",319,0)
 S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"CLRS"_STID_LPP2_LPP1_"WFTP.TXT"")"
"RTN","PRCHLO4A",320,0)
 X XPV
"RTN","PRCHLO4A",321,0)
 Q
"RTN","PRCHLO4A",322,0)
 ;
"RTN","PRCHLO4A",323,0)
MAIL ;Builds mail messages to a defined mail group to notify users of the
"RTN","PRCHLO4A",324,0)
 ;success or failure of the TaskMan scheduling for the CLO Procurement
"RTN","PRCHLO4A",325,0)
 ;Reports
"RTN","PRCHLO4A",326,0)
 ;
"RTN","PRCHLO4A",327,0)
 ;*98 Modified code to work with PRC CLRS OUTLOOK MAILGROUP parameter
"RTN","PRCHLO4A",328,0)
 N XMDUZ,XMMG,XMSUB,XMTEXT,XMY,XMZ,PRCPMG,PRCPMG2
"RTN","PRCHLO4A",329,0)
 S XMSUB="CLO Procurement Report Status for "_$$HTE^XLFDT($H)
"RTN","PRCHLO4A",330,0)
 S XMDUZ="Clinical Logistics Report Server"
"RTN","PRCHLO4A",331,0)
 S XMTEXT="PRCPMSG("
"RTN","PRCHLO4A",332,0)
 S XMY("G.PRCPLO CLRS NOTIFICATIONS")=""
"RTN","PRCHLO4A",333,0)
 S PRCPMG=$$GET^XPAR("SYS","PRC CLRS OUTLOOK MAILGROUP",1,"Q")
"RTN","PRCHLO4A",334,0)
 S:$G(PRCPMG)'="" PRCPMG2="S XMY("""_PRCPMG_""")=""""" X PRCPMG2
"RTN","PRCHLO4A",335,0)
 ;
"RTN","PRCHLO4A",336,0)
 D ^XMD
"RTN","PRCHLO4A",337,0)
 Q
"RTN","PRCHLO4A",338,0)
 ;
"RTN","PRCHLO4A",339,0)
MAILFTP ;Builds mail messages to a defined mail group to notify users of
"RTN","PRCHLO4A",340,0)
 ;the success or failure of issues pertaining to FTP Transfer and
"RTN","PRCHLO4A",341,0)
 ;file permissions/protections associated with VMS Directories
"RTN","PRCHLO4A",342,0)
 ;
"RTN","PRCHLO4A",343,0)
 ;*98 Modified code to work with PRC CLRS OUTLOOK MAILGROUP parameter
"RTN","PRCHLO4A",344,0)
 N XMDUZ,XMMG,XMSUB,XMTEXT,XMY,XMZ,PRCPMG,PRCPMG2
"RTN","PRCHLO4A",345,0)
 S XMSUB="CLO Environment Check & Data Transfer for OS / FTP , "_$$HTE^XLFDT($H)
"RTN","PRCHLO4A",346,0)
 S XMDUZ="Clinical Logistics Report Server"
"RTN","PRCHLO4A",347,0)
 S XMTEXT="PRCPMSG("
"RTN","PRCHLO4A",348,0)
 S XMY("G.PRCPLO CLRS NOTIFICATIONS")=""
"RTN","PRCHLO4A",349,0)
 S PRCPMG=$$GET^XPAR("SYS","PRC CLRS OUTLOOK MAILGROUP",1,"Q")
"RTN","PRCHLO4A",350,0)
 S:$G(PRCPMG)'="" PRCPMG2="S XMY("""_PRCPMG_""")=""""" X PRCPMG2
"RTN","PRCHLO4A",351,0)
 ;
"RTN","PRCHLO4A",352,0)
 D ^XMD
"RTN","PRCHLO4A",353,0)
 Q
"RTN","PRCHLO5")
0^3^B94100528^B87538990
"RTN","PRCHLO5",1,0)
PRCHLO5 ;WOIFO/DAP/RLL-manual run for procurement reports  ; 10/16/06 2:12pm
"RTN","PRCHLO5",2,0)
V ;;5.1;IFCAP;**83,98,139,172**;Oct 20, 2000;Build 2
"RTN","PRCHLO5",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRCHLO5",4,0)
 ;
"RTN","PRCHLO5",5,0)
 ;Patch PRC*5.1*172 are modifications to CLRS transmission processing 
"RTN","PRCHLO5",6,0)
 ;to support those sites that have migrated to Full LINUX OS
"RTN","PRCHLO5",7,0)
 ; 
"RTN","PRCHLO5",8,0)
ENT ;This routine tasks out the execution of the procurement extract 
"RTN","PRCHLO5",9,0)
 ;reports associated with PRC*5.1*83 (CLRS).
"RTN","PRCHLO5",10,0)
 ;
"RTN","PRCHLO5",11,0)
 N ZTRTN,ZTDESC,ZTDTH,ZTIO,PRCHPRO,ZTSK,ZTREQ,PRCPMSG
"RTN","PRCHLO5",12,0)
 S ZTRTN="RUNEXT^PRCHLO5"
"RTN","PRCHLO5",13,0)
 S ZTDESC="PRCPLO CLO Procurement Reports CLRS"
"RTN","PRCHLO5",14,0)
 S ZTDTH=$H
"RTN","PRCHLO5",15,0)
 S ZTREQ="@"
"RTN","PRCHLO5",16,0)
 S ZTIO=""
"RTN","PRCHLO5",17,0)
 D ^%ZTLOAD
"RTN","PRCHLO5",18,0)
 S PRCHPRO=ZTSK
"RTN","PRCHLO5",19,0)
 ;Calls mail group message generation and screen display with success
"RTN","PRCHLO5",20,0)
 ;or exception notification
"RTN","PRCHLO5",21,0)
 I $D(PRCHPRO)[0 S PRCPMSG(1)="A task could not be created for the CLO Procurement Reports - please contact IRM." W ! D EN^DDIOL(PRCPMSG(1)) D MAIL^PRCHLO4A Q
"RTN","PRCHLO5",22,0)
 ; 
"RTN","PRCHLO5",23,0)
 S PRCPMSG(1)="Task # "_PRCHPRO_" entered for Procurement Reports."
"RTN","PRCHLO5",24,0)
 W !
"RTN","PRCHLO5",25,0)
 D EN^DDIOL(PRCPMSG(1))
"RTN","PRCHLO5",26,0)
 ;
"RTN","PRCHLO5",27,0)
 ;*98 Modified to move MAIL and MAILFTP tags to routine PRCHLO4A
"RTN","PRCHLO5",28,0)
 ;
"RTN","PRCHLO5",29,0)
 D MAIL^PRCHLO4A
"RTN","PRCHLO5",30,0)
 ;
"RTN","PRCHLO5",31,0)
 Q
"RTN","PRCHLO5",32,0)
PRCPCMP ; Notification of completion of building Procurement Report Data
"RTN","PRCHLO5",33,0)
 N PRCPMSG
"RTN","PRCHLO5",34,0)
 S PRCPMSG(1)="PO Procurement Data extract complete."
"RTN","PRCHLO5",35,0)
 D EN^DDIOL(PRCPMSG(1))
"RTN","PRCHLO5",36,0)
 D MAIL^PRCHLO4A
"RTN","PRCHLO5",37,0)
 Q
"RTN","PRCHLO5",38,0)
 ;
"RTN","PRCHLO5",39,0)
PRCPTST ; Notification of termination of building Procurement Report Data due to test system task origin (added in PRC*5.1*139)
"RTN","PRCHLO5",40,0)
 N PRCPMSG
"RTN","PRCHLO5",41,0)
 S PRCPMSG(1)="PO Procurement Data extract TERMINATED due to running on TEST system."
"RTN","PRCHLO5",42,0)
 D EN^DDIOL(PRCPMSG(1))
"RTN","PRCHLO5",43,0)
 D MAIL^PRCHLO4A
"RTN","PRCHLO5",44,0)
 K ^TMP($J),^TMP("PRCHLOG",$J)
"RTN","PRCHLO5",45,0)
 Q
"RTN","PRCHLO5",46,0)
 ;
"RTN","PRCHLO5",47,0)
RUNEXT ; Run extract reports for PO Activity
"RTN","PRCHLO5",48,0)
 I '$$PROD^XUPROD() G PRCPTST  ;Check added in patch PRC*139 to not execute on test systems
"RTN","PRCHLO5",49,0)
 N CLRSERR,CLRSTST1  ; error flag for exception handling,tst entry pt.
"RTN","PRCHLO5",50,0)
 ; CLRSERR will be set for the following conditions:
"RTN","PRCHLO5",51,0)
 ; 0 - Success, status message for completion is sent.
"RTN","PRCHLO5",52,0)
 ; 1 - Error creating ^TMP($J) data (i.e. disk full)
"RTN","PRCHLO5",53,0)
 ; 2 - Error creating Files(i.e. directory patch, VMS Space, etc.)
"RTN","PRCHLO5",54,0)
 ; 3 - Error creating .Com file for FTP transfer, permissions issue
"RTN","PRCHLO5",55,0)
 ; 4 - Error with FTP Transfer,ntwk/permissions, Report Server issue
"RTN","PRCHLO5",56,0)
 ; 5 - Error with file deletion/cleanup prior to processing
"RTN","PRCHLO5",57,0)
 ; 6 - Error, lock is present. Process already running
"RTN","PRCHLO5",58,0)
 S CLRSERR=0
"RTN","PRCHLO5",59,0)
TSTMSG ; This entry point is used to test the messaging framework
"RTN","PRCHLO5",60,0)
 ;  S SLRSTST1=1
"RTN","PRCHLO5",61,0)
 S CLRSERR=0
"RTN","PRCHLO5",62,0)
 ; Check for O/S version
"RTN","PRCHLO5",63,0)
 N CKOS
"RTN","PRCHLO5",64,0)
 S CKOS=$$OS^%ZOSV()
"RTN","PRCHLO5",65,0)
 ; use lock to prevent mult. runs
"RTN","PRCHLO5",66,0)
 L +^PRCP(446.7,"STATUS"):3 I $T=0 S CLRSERR=6
"RTN","PRCHLO5",67,0)
 I CLRSERR=0 D DELRUN^PRCHLO5
"RTN","PRCHLO5",68,0)
 I CLRSERR=5  D
"RTN","PRCHLO5",69,0)
 . N PRCPMSG
"RTN","PRCHLO5",70,0)
 . S PRCPMSG(1)="Error with file deletion/cleanup prior to processing. Please contact IRM."
"RTN","PRCHLO5",71,0)
 . S PRCPMSG(2)=" "
"RTN","PRCHLO5",72,0)
 . S PRCPMSG(3)="This error indicates the CLRS EXTRACT DIRECTORY has not"
"RTN","PRCHLO5",73,0)
 . S PRCPMSG(4)="been properly set up during the installation of this patch."
"RTN","PRCHLO5",74,0)
 . S PRCPMSG(5)=" "
"RTN","PRCHLO5",75,0)
 . S PRCPMSG(6)="(Please refer to the pre installation instructions for PRC*5.1*83)"
"RTN","PRCHLO5",76,0)
 . S PRCPMSG(7)=" "
"RTN","PRCHLO5",77,0)
 . S PRCPMSG(8)="A valid directory must be set up with the"
"RTN","PRCHLO5",78,0)
 . S PRCPMSG(9)="proper read/write/execute/delete privileges."
"RTN","PRCHLO5",79,0)
 . S PRCPMSG(10)=" "
"RTN","PRCHLO5",80,0)
 . S PRCPMSG(11)="In addition, the directory name which you create"
"RTN","PRCHLO5",81,0)
 . S PRCPMSG(12)="must be added as the CLRS EXTRACT DIRECTORY"
"RTN","PRCHLO5",82,0)
 . S PRCPMSG(13)="through the CLO System Parameters Option."
"RTN","PRCHLO5",83,0)
 . S PRCPMSG(14)="If the field is blank, you will generate this error."
"RTN","PRCHLO5",84,0)
 . S PRCPMSG(15)=" "
"RTN","PRCHLO5",85,0)
 . S PRCPMSG(16)="Please confirm all steps have been performed"
"RTN","PRCHLO5",86,0)
 . S PRCPMSG(17)="according to the pre installation instructions for patch PRC*5.1*83."
"RTN","PRCHLO5",87,0)
 . D MAILFTP^PRCHLO4A
"RTN","PRCHLO5",88,0)
 . Q
"RTN","PRCHLO5",89,0)
 ; Begin to build files
"RTN","PRCHLO5",90,0)
 I CLRSERR=0 D INIT^PRCHLO
"RTN","PRCHLO5",91,0)
 I CLRSERR=0 D PRCPCMP^PRCHLO5  ; PO activity Extract logic completed
"RTN","PRCHLO5",92,0)
 I $D(CLRSTST1)  D  ; test point to generate message 1
"RTN","PRCHLO5",93,0)
 . Q:CLRSTST1'=1
"RTN","PRCHLO5",94,0)
 . S CLRSERR=1
"RTN","PRCHLO5",95,0)
 . Q
"RTN","PRCHLO5",96,0)
 I CLRSERR=1  D
"RTN","PRCHLO5",97,0)
 . N PRCPMSG  ; error building ^TMP($J)
"RTN","PRCHLO5",98,0)
 . S PRCPMSG(1)="Error, No Data for PO Activity Files, contact IRM"
"RTN","PRCHLO5",99,0)
 . D MAILFTP^PRCHLO4A
"RTN","PRCHLO5",100,0)
 . Q
"RTN","PRCHLO5",101,0)
CRFILE ; Create .txt file to confirm write privileges to directory
"RTN","PRCHLO5",102,0)
 I CLRSERR=0 D TSTF^PRCHLO4  ; will return CLRSERR=2 on error
"RTN","PRCHLO5",103,0)
 I CLRSERR=0 D CLRSFIL^PRCHLO4
"RTN","PRCHLO5",104,0)
 I CLRSERR=2  D
"RTN","PRCHLO5",105,0)
 . N PRCPMSG
"RTN","PRCHLO5",106,0)
 . S PRCPMSG(1)="Error, Problem with FTP File Creation, contact IRM"
"RTN","PRCHLO5",107,0)
 . D MAILFTP^PRCHLO4A
"RTN","PRCHLO5",108,0)
 . Q
"RTN","PRCHLO5",109,0)
 I CLRSERR=0  D
"RTN","PRCHLO5",110,0)
 . N PRCPMSG
"RTN","PRCHLO5",111,0)
 . S PRCPMSG(1)="Built PO Activity Extracts and GIP Extracts for transfer"
"RTN","PRCHLO5",112,0)
 . D MAILFTP^PRCHLO4A
"RTN","PRCHLO5",113,0)
 . Q
"RTN","PRCHLO5",114,0)
 I CKOS["VMS"  D
"RTN","PRCHLO5",115,0)
 . I CLRSERR=0 D CRTCOM^PRCHLO4
"RTN","PRCHLO5",116,0)
 . Q
"RTN","PRCHLO5",117,0)
 I CKOS["NT"  D
"RTN","PRCHLO5",118,0)
 . I CLRSERR=0 D CRTWIN^PRCHLO4A
"RTN","PRCHLO5",119,0)
 . Q
"RTN","PRCHLO5",120,0)
 ;PRC*5.1*172 added check for Full Linux
"RTN","PRCHLO5",121,0)
 I CKOS["UNIX"  D
"RTN","PRCHLO5",122,0)
 . I CLRSERR=0  D
"RTN","PRCHLO5",123,0)
 . . D CRTUNX1^PRCHLO4
"RTN","PRCHLO5",124,0)
 . . Q
"RTN","PRCHLO5",125,0)
 . Q
"RTN","PRCHLO5",126,0)
 I CLRSERR=6  D
"RTN","PRCHLO5",127,0)
 . N PRCPMSG
"RTN","PRCHLO5",128,0)
 . S PRCPMSG(1)="Error encountered when attempting to run CLO PO"
"RTN","PRCHLO5",129,0)
 . S PRCPMSG(2)="activity reports due to other CLRS extracts in"
"RTN","PRCHLO5",130,0)
 . S PRCPMSG(3)="progress. Please try again later."
"RTN","PRCHLO5",131,0)
 . D MAILFTP^PRCHLO4A
"RTN","PRCHLO5",132,0)
 . Q
"RTN","PRCHLO5",133,0)
 I $D(CLRSTST1)  D  ; test point to generate message 3
"RTN","PRCHLO5",134,0)
 . Q:CLRSTST1'=3
"RTN","PRCHLO5",135,0)
 . S CLRSERR=3
"RTN","PRCHLO5",136,0)
 . Q
"RTN","PRCHLO5",137,0)
 I CLRSERR=0 D CKRPTSV^PRCHLO4A  ;ping report server for availability
"RTN","PRCHLO5",138,0)
 I CLRSERR=3  D
"RTN","PRCHLO5",139,0)
 . N PRCPMSG
"RTN","PRCHLO5",140,0)
 . S PRCPMSG(1)="Error, problem creating SETUP file for FTP Transfer, contact IRM."
"RTN","PRCHLO5",141,0)
 . S PRCPMSG(2)="The Report Server may be unavailable for processing."
"RTN","PRCHLO5",142,0)
 . D MAILFTP^PRCHLO4A
"RTN","PRCHLO5",143,0)
 . Q
"RTN","PRCHLO5",144,0)
 I CLRSERR=0  D
"RTN","PRCHLO5",145,0)
 . N PRCPMSG,FILEDIR
"RTN","PRCHLO5",146,0)
 . S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO5",147,0)
 . S PRCPMSG(1)="Final FTP Setup complete, beginning FTP Transfer"
"RTN","PRCHLO5",148,0)
 . S PRCPMSG(2)=" "
"RTN","PRCHLO5",149,0)
 . S PRCPMSG(3)="The file transfer to the report server has been initiated."
"RTN","PRCHLO5",150,0)
 . S PRCPMSG(4)="You will be receiving a notification that the FTP"
"RTN","PRCHLO5",151,0)
 . S PRCPMSG(5)="process has completed. The notification message"
"RTN","PRCHLO5",152,0)
 . S PRCPMSG(6)="should be received within the hour.  If you do not"
"RTN","PRCHLO5",153,0)
 . S PRCPMSG(7)="receive the FTP process has completed message,"
"RTN","PRCHLO5",154,0)
 . S PRCPMSG(8)="please contact IRM. IRM can confirm the process"
"RTN","PRCHLO5",155,0)
 . S PRCPMSG(9)="is still running by performing the following"
"RTN","PRCHLO5",156,0)
 . S PRCPMSG(10)="command:"
"RTN","PRCHLO5",157,0)
 . S PRCPMSG(11)=" "
"RTN","PRCHLO5",158,0)
 . S PRCPMSG(12)="At the MUMPS Programmer prompt, type D ^%SS"
"RTN","PRCHLO5",159,0)
 . S PRCPMSG(13)=" "
"RTN","PRCHLO5",160,0)
 . S PRCPMSG(14)="See if there are any PRCHLO* routines running."
"RTN","PRCHLO5",161,0)
 . S PRCPMSG(15)=" "
"RTN","PRCHLO5",162,0)
 . S PRCPMSG(16)="If these routines are present, the process is still"
"RTN","PRCHLO5",163,0)
 . S PRCPMSG(17)="running. If you waited one hour, and did not get the"
"RTN","PRCHLO5",164,0)
 . S PRCPMSG(18)="FTP process has completed message, a problem"
"RTN","PRCHLO5",165,0)
 . S PRCPMSG(19)="was encountered. Further troubleshooting can be"
"RTN","PRCHLO5",166,0)
 . S PRCPMSG(20)="performed by examining the LOGFILE CLRSxxxFTP1.LOG"
"RTN","PRCHLO5",167,0)
 . S PRCPMSG(21)="where xxx is your station ID#. The logfile is"
"RTN","PRCHLO5",168,0)
 . S PRCPMSG(22)="located in the following directory: "_FILEDIR
"RTN","PRCHLO5",169,0)
 . S PRCPMSG(23)=" "
"RTN","PRCHLO5",170,0)
 . D MAILFTP^PRCHLO4A
"RTN","PRCHLO5",171,0)
 . Q
"RTN","PRCHLO5",172,0)
 I CKOS["VMS"  D
"RTN","PRCHLO5",173,0)
 . I CLRSERR=0  D
"RTN","PRCHLO5",174,0)
 . . D CRTCOM1^PRCHLO4
"RTN","PRCHLO5",175,0)
 . . D FTPCOM^PRCHLO4
"RTN","PRCHLO5",176,0)
 . . Q
"RTN","PRCHLO5",177,0)
 . Q
"RTN","PRCHLO5",178,0)
 ;PRC*5.1*172 added check for Full Linux
"RTN","PRCHLO5",179,0)
 I CKOS["UNIX"  D
"RTN","PRCHLO5",180,0)
 . I CLRSERR=0  D
"RTN","PRCHLO5",181,0)
 . . D UNXFTP^PRCHLO4
"RTN","PRCHLO5",182,0)
 . . Q
"RTN","PRCHLO5",183,0)
 . Q
"RTN","PRCHLO5",184,0)
 I CKOS["NT"  D
"RTN","PRCHLO5",185,0)
 . I CLRSERR=0  D
"RTN","PRCHLO5",186,0)
 . . D CRTWIN^PRCHLO4A
"RTN","PRCHLO5",187,0)
 . . D FTPCOM^PRCHLO4A
"RTN","PRCHLO5",188,0)
 . . Q
"RTN","PRCHLO5",189,0)
 . Q
"RTN","PRCHLO5",190,0)
 ; release the lock
"RTN","PRCHLO5",191,0)
 L -^PRCP(446.7,"STATUS")
"RTN","PRCHLO5",192,0)
 I CLRSERR=4  D
"RTN","PRCHLO5",193,0)
 . N PRCPMSG,FILEDIR
"RTN","PRCHLO5",194,0)
 . S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO5",195,0)
 . S PRCPMSG(1)="An Error occurred during the FTP Transfer "_$$HTE^XLFDT($H)
"RTN","PRCHLO5",196,0)
 . S PRCPMSG(2)="Contact IRM to perform troubleshooting steps"
"RTN","PRCHLO5",197,0)
 . S PRCPMSG(3)="by examining the logfile CLRSxxxFTP1.LOG where"
"RTN","PRCHLO5",198,0)
 . S PRCPMSG(4)="xxx is your station number. The logfile is located"
"RTN","PRCHLO5",199,0)
 . S PRCPMSG(5)="the FTP directory "_FILEDIR
"RTN","PRCHLO5",200,0)
 . S PRCPMSG(6)=" "
"RTN","PRCHLO5",201,0)
 . D MAILFTP^PRCHLO4A
"RTN","PRCHLO5",202,0)
 . Q
"RTN","PRCHLO5",203,0)
 I CLRSERR=0  D
"RTN","PRCHLO5",204,0)
 . N PRCPMSG,FILEDIR
"RTN","PRCHLO5",205,0)
 . S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO5",206,0)
 . S PRCPMSG(1)="The FTP Transfer process completed, "_$$HTE^XLFDT($H)
"RTN","PRCHLO5",207,0)
 . S PRCPMSG(2)=" "
"RTN","PRCHLO5",208,0)
 . S PRCPMSG(3)="The Clinical Logistics 0ffice should examine the Report Server"
"RTN","PRCHLO5",209,0)
 . S PRCPMSG(4)="FTP directory for your files. If the files from your"
"RTN","PRCHLO5",210,0)
 . S PRCPMSG(5)="station are not found, IRM can provide additional"
"RTN","PRCHLO5",211,0)
 . S PRCPMSG(6)="troubleshooting steps by examining the LOGFILE"
"RTN","PRCHLO5",212,0)
 . S PRCPMSG(7)="CLRSxxxFTP1.LOG where xxx is your station number."
"RTN","PRCHLO5",213,0)
 . S PRCPMSG(8)="The logfile is located in the directory: "_FILEDIR
"RTN","PRCHLO5",214,0)
 . S PRCPMSG(9)=" "
"RTN","PRCHLO5",215,0)
 . S PRCPMSG(10)="The contents of the logfile are listed below:"
"RTN","PRCHLO5",216,0)
 . D LOG2FILE^PRCHLO4A
"RTN","PRCHLO5",217,0)
 . Q
"RTN","PRCHLO5",218,0)
 ; CLEAN UP
"RTN","PRCHLO5",219,0)
 K ^TMP($J)
"RTN","PRCHLO5",220,0)
 K ^TMP("PRCHLOG",$J)
"RTN","PRCHLO5",221,0)
 Q
"RTN","PRCHLO5",222,0)
DELRUN ; delete previous run at the beginning of the program
"RTN","PRCHLO5",223,0)
 ;
"RTN","PRCHLO5",224,0)
 N FILCK,FILDEL,TFILE1,TFILE2,OUTFL1,OUTFL2,POP,STID
"RTN","PRCHLO5",225,0)
 ; create, delete, then create files to clean up and confirm
"RTN","PRCHLO5",226,0)
 ; write / delete privileges to directory
"RTN","PRCHLO5",227,0)
 S POP=""
"RTN","PRCHLO5",228,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO5",229,0)
 S OUTFL1="CLRS"_STID_"TST.TXT"
"RTN","PRCHLO5",230,0)
 S OUTFL2="IFCP"_STID_"TST.TXT"
"RTN","PRCHLO5",231,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO5",232,0)
 I FILEDIR=""  D
"RTN","PRCHLO5",233,0)
 . S CLRSERR=5
"RTN","PRCHLO5",234,0)
 . Q
"RTN","PRCHLO5",235,0)
 I FILEDIR=" "  D
"RTN","PRCHLO5",236,0)
 . S CLRSERR=5
"RTN","PRCHLO5",237,0)
 . Q
"RTN","PRCHLO5",238,0)
 I CLRSERR=0 D OPEN^%ZISH("TFILE1",FILEDIR,OUTFL1,"W")
"RTN","PRCHLO5",239,0)
 I POP  D
"RTN","PRCHLO5",240,0)
 . S CLRSERR=5
"RTN","PRCHLO5",241,0)
 . Q
"RTN","PRCHLO5",242,0)
 I CLRSERR=0  D
"RTN","PRCHLO5",243,0)
 . D USE^%ZISUTL("TFILE1")
"RTN","PRCHLO5",244,0)
 . W !,"$ ! This is a test file to confirm write/delete access"
"RTN","PRCHLO5",245,0)
 . W !,"$ ! once file access is confirmed, file is deleted"
"RTN","PRCHLO5",246,0)
 . W !,"$ EXIT"
"RTN","PRCHLO5",247,0)
 . D CLOSE^%ZISH("TFILE1")
"RTN","PRCHLO5",248,0)
 . D OPEN^%ZISH("TFILE2",FILEDIR,OUTFL2,"W")
"RTN","PRCHLO5",249,0)
 . D USE^%ZISUTL("TFILE2")
"RTN","PRCHLO5",250,0)
 . W !,"$ ! This is a test file to confirm write/delete access"
"RTN","PRCHLO5",251,0)
 . W !,"$ ! once file access is confirmed, file is deleted"
"RTN","PRCHLO5",252,0)
 . W !,"$ EXIT"
"RTN","PRCHLO5",253,0)
 . D CLOSE^%ZISH("TFILE2")
"RTN","PRCHLO5",254,0)
 . Q
"RTN","PRCHLO5",255,0)
 ;
"RTN","PRCHLO5",256,0)
DELWIN ; DELETE windows files, need to handle 1 file at a time
"RTN","PRCHLO5",257,0)
 ; SACC Exception received for usage of $ZF(-1) in PRC*5.1*83
"RTN","PRCHLO5",258,0)
 ; See IFCAP technical manual.
"RTN","PRCHLO5",259,0)
 I CKOS["NT" D DELWIN^PRCHLO4A
"RTN","PRCHLO5",260,0)
DELFILS ; Delete the files / clean-up before processing
"RTN","PRCHLO5",261,0)
 ;
"RTN","PRCHLO5",262,0)
 ; SACC Exception received for usage of $ZF(-1) in PRC*5.1*83
"RTN","PRCHLO5",263,0)
 ; See IFCAP technical manual
"RTN","PRCHLO5",264,0)
 I CKOS["VMS"  D  ;O/S IS VMS
"RTN","PRCHLO5",265,0)
 . Q:CLRSERR'="0"
"RTN","PRCHLO5",266,0)
 . N PV,PV1,XPV,XPV1
"RTN","PRCHLO5",267,0)
 . S XPV="S PV=$ZF(-1,""DELETE "_FILEDIR_"*"_STID_"*.*;*"")"
"RTN","PRCHLO5",268,0)
 . X XPV
"RTN","PRCHLO5",269,0)
 . Q
"RTN","PRCHLO5",270,0)
 ;PRC*5.1*172 added check for Full Linux
"RTN","PRCHLO5",271,0)
 I CKOS["UNIX"  D
"RTN","PRCHLO5",272,0)
 . D DELUNX^PRCHLO4A
"RTN","PRCHLO5",273,0)
 . Q
"RTN","PRCHLO5",274,0)
 Q
"VER")
8.0^22.0
"BLD",7185,6)
^143
**END**
**END**
