EMERGENCY Released PRC*5.1*167 SEQ #142
Extracted from mail message
**KIDS**:PRC*5.1*167^

**INSTALL NAME**
PRC*5.1*167
"BLD",7176,0)
PRC*5.1*167^IFCAP^0^3121113^y
"BLD",7176,1,0)
^^7^7^3121112^^^
"BLD",7176,1,1,0)
This patch will establish bidirectional communication (HL7 
"BLD",7176,1,2,0)
Interface) between IFCAP and the commercial Electronic Contract
"BLD",7176,1,3,0)
Management System (eCMS) in Austin, in order to capitalize on the
"BLD",7176,1,4,0)
abilities of eCMS to consolidate  multiple requests, electronically
"BLD",7176,1,5,0)
prepare and issue solicitation documents, receive electronic offers,
"BLD",7176,1,6,0)
automate contract administration, and provide interfaces to the Integrated
"BLD",7176,1,7,0)
Acquisition Environment initiatives.
"BLD",7176,4,0)
^9.64PA^410^2
"BLD",7176,4,410,0)
410
"BLD",7176,4,410,2,0)
^9.641^410.02^2
"BLD",7176,4,410,2,410,0)
CONTROL POINT ACTIVITY  (File-top level)
"BLD",7176,4,410,2,410,1,0)
^9.6411^103^1
"BLD",7176,4,410,2,410,1,103,0)
ECMS ACTIONUID
"BLD",7176,4,410,2,410.02,0)
ITEM  (sub-file)
"BLD",7176,4,410,2,410.02,1,0)
^9.6411^100^1
"BLD",7176,4,410,2,410.02,1,100,0)
ECMS ITEMUID
"BLD",7176,4,410,222)
y^n^p^^^^n^^n
"BLD",7176,4,410,224)

"BLD",7176,4,414.06,0)
414.06
"BLD",7176,4,414.06,222)
y^n^f^^^^n
"BLD",7176,4,"APDD",410,410)

"BLD",7176,4,"APDD",410,410,103)

"BLD",7176,4,"APDD",410,410.02)

"BLD",7176,4,"APDD",410,410.02,100)

"BLD",7176,4,"B",410,410)

"BLD",7176,4,"B",414.06,414.06)

"BLD",7176,6)
^131
"BLD",7176,6.3)
17
"BLD",7176,"ABPKG")
n
"BLD",7176,"INID")
^y
"BLD",7176,"INIT")
POST^PRC5167P
"BLD",7176,"KRN",0)
^9.67PA^779.2^20
"BLD",7176,"KRN",.4,0)
.4
"BLD",7176,"KRN",.401,0)
.401
"BLD",7176,"KRN",.402,0)
.402
"BLD",7176,"KRN",.403,0)
.403
"BLD",7176,"KRN",.5,0)
.5
"BLD",7176,"KRN",.84,0)
.84
"BLD",7176,"KRN",3.6,0)
3.6
"BLD",7176,"KRN",3.8,0)
3.8
"BLD",7176,"KRN",3.8,"NM",0)
^9.68A^^0
"BLD",7176,"KRN",9.2,0)
9.2
"BLD",7176,"KRN",9.8,0)
9.8
"BLD",7176,"KRN",9.8,"NM",0)
^9.68A^20^20
"BLD",7176,"KRN",9.8,"NM",1,0)
PRCHG^^0^B45716254
"BLD",7176,"KRN",9.8,"NM",2,0)
PRCHJMSG^^0^B10009804
"BLD",7176,"KRN",9.8,"NM",3,0)
PRCHJR01^^0^B143518446
"BLD",7176,"KRN",9.8,"NM",4,0)
PRCHJR02^^0^B119665258
"BLD",7176,"KRN",9.8,"NM",5,0)
PRCHJS01^^0^B32931088
"BLD",7176,"KRN",9.8,"NM",6,0)
PRCHJS02^^0^B160738440
"BLD",7176,"KRN",9.8,"NM",7,0)
PRCHJS03^^0^B38615416
"BLD",7176,"KRN",9.8,"NM",8,0)
PRCHJS04^^0^B12824408
"BLD",7176,"KRN",9.8,"NM",9,0)
PRCHJS05^^0^B105876352
"BLD",7176,"KRN",9.8,"NM",10,0)
PRCHJS06^^0^B47333456
"BLD",7176,"KRN",9.8,"NM",11,0)
PRCHJS07^^0^B47804786
"BLD",7176,"KRN",9.8,"NM",12,0)
PRCHJTA^^0^B48621585
"BLD",7176,"KRN",9.8,"NM",13,0)
PRCHJRP1^^0^B201702299
"BLD",7176,"KRN",9.8,"NM",14,0)
PRCHJRP2^^0^B35489110
"BLD",7176,"KRN",9.8,"NM",15,0)
PRCSD12^^0^B5330398
"BLD",7176,"KRN",9.8,"NM",16,0)
PRCSD121^^0^B23682488
"BLD",7176,"KRN",9.8,"NM",17,0)
PRCSP12^^0^B8040343
"BLD",7176,"KRN",9.8,"NM",18,0)
PRCSP121^^0^B22416757
"BLD",7176,"KRN",9.8,"NM",19,0)
PRCHJUTL^^0^B5808246
"BLD",7176,"KRN",9.8,"NM",20,0)
PRCHJR03^^0^B7485505
"BLD",7176,"KRN",9.8,"NM","B","PRCHG",1)

"BLD",7176,"KRN",9.8,"NM","B","PRCHJMSG",2)

"BLD",7176,"KRN",9.8,"NM","B","PRCHJR01",3)

"BLD",7176,"KRN",9.8,"NM","B","PRCHJR02",4)

"BLD",7176,"KRN",9.8,"NM","B","PRCHJR03",20)

"BLD",7176,"KRN",9.8,"NM","B","PRCHJRP1",13)

"BLD",7176,"KRN",9.8,"NM","B","PRCHJRP2",14)

"BLD",7176,"KRN",9.8,"NM","B","PRCHJS01",5)

"BLD",7176,"KRN",9.8,"NM","B","PRCHJS02",6)

"BLD",7176,"KRN",9.8,"NM","B","PRCHJS03",7)

"BLD",7176,"KRN",9.8,"NM","B","PRCHJS04",8)

"BLD",7176,"KRN",9.8,"NM","B","PRCHJS05",9)

"BLD",7176,"KRN",9.8,"NM","B","PRCHJS06",10)

"BLD",7176,"KRN",9.8,"NM","B","PRCHJS07",11)

"BLD",7176,"KRN",9.8,"NM","B","PRCHJTA",12)

"BLD",7176,"KRN",9.8,"NM","B","PRCHJUTL",19)

"BLD",7176,"KRN",9.8,"NM","B","PRCSD12",15)

"BLD",7176,"KRN",9.8,"NM","B","PRCSD121",16)

"BLD",7176,"KRN",9.8,"NM","B","PRCSP12",17)

"BLD",7176,"KRN",9.8,"NM","B","PRCSP121",18)

"BLD",7176,"KRN",19,0)
19
"BLD",7176,"KRN",19,"NM",0)
^9.68A^5^5
"BLD",7176,"KRN",19,"NM",1,0)
PRCHJ RETRANS 2237^^0
"BLD",7176,"KRN",19,"NM",2,0)
PRCHJ TRANS REPORT^^0
"BLD",7176,"KRN",19,"NM",3,0)
PRCHUSER PPM^^2
"BLD",7176,"KRN",19,"NM",4,0)
PRCSER^^2
"BLD",7176,"KRN",19,"NM",5,0)
PRCHJ TRANS REPORT2^^0
"BLD",7176,"KRN",19,"NM","B","PRCHJ RETRANS 2237",1)

"BLD",7176,"KRN",19,"NM","B","PRCHJ TRANS REPORT",2)

"BLD",7176,"KRN",19,"NM","B","PRCHJ TRANS REPORT2",5)

"BLD",7176,"KRN",19,"NM","B","PRCHUSER PPM",3)

"BLD",7176,"KRN",19,"NM","B","PRCSER",4)

"BLD",7176,"KRN",19.1,0)
19.1
"BLD",7176,"KRN",101,0)
101
"BLD",7176,"KRN",409.61,0)
409.61
"BLD",7176,"KRN",771,0)
771
"BLD",7176,"KRN",779.2,0)
779.2
"BLD",7176,"KRN",779.2,"NM",0)
^9.68A^2^2
"BLD",7176,"KRN",779.2,"NM",1,0)
PRCHJ_IFCAP_2237_RETURN^^0
"BLD",7176,"KRN",779.2,"NM",2,0)
PRCHJ_IFCAP_2237_SEND^^0
"BLD",7176,"KRN",779.2,"NM","B","PRCHJ_IFCAP_2237_RETURN",1)

"BLD",7176,"KRN",779.2,"NM","B","PRCHJ_IFCAP_2237_SEND",2)

"BLD",7176,"KRN",870,0)
870
"BLD",7176,"KRN",870,"NM",0)
^9.68A^1^1
"BLD",7176,"KRN",870,"NM",1,0)
PRCHJ_ECMS^^0
"BLD",7176,"KRN",870,"NM","B","PRCHJ_ECMS",1)

"BLD",7176,"KRN",8989.51,0)
8989.51
"BLD",7176,"KRN",8989.51,"NM",0)
^9.68A^^0
"BLD",7176,"KRN",8989.52,0)
8989.52
"BLD",7176,"KRN",8994,0)
8994
"BLD",7176,"KRN","B",.4,.4)

"BLD",7176,"KRN","B",.401,.401)

"BLD",7176,"KRN","B",.402,.402)

"BLD",7176,"KRN","B",.403,.403)

"BLD",7176,"KRN","B",.5,.5)

"BLD",7176,"KRN","B",.84,.84)

"BLD",7176,"KRN","B",3.6,3.6)

"BLD",7176,"KRN","B",3.8,3.8)

"BLD",7176,"KRN","B",9.2,9.2)

"BLD",7176,"KRN","B",9.8,9.8)

"BLD",7176,"KRN","B",19,19)

"BLD",7176,"KRN","B",19.1,19.1)

"BLD",7176,"KRN","B",101,101)

"BLD",7176,"KRN","B",409.61,409.61)

"BLD",7176,"KRN","B",771,771)

"BLD",7176,"KRN","B",779.2,779.2)

"BLD",7176,"KRN","B",870,870)

"BLD",7176,"KRN","B",8989.51,8989.51)

"BLD",7176,"KRN","B",8989.52,8989.52)

"BLD",7176,"KRN","B",8994,8994)

"BLD",7176,"PRE")

"BLD",7176,"QUES",0)
^9.62^^
"BLD",7176,"REQB",0)
^9.611^1^1
"BLD",7176,"REQB",1,0)
PRC*5.1*81^2
"BLD",7176,"REQB","B","PRC*5.1*81",1)

"FIA",410)
CONTROL POINT ACTIVITY
"FIA",410,0)
^PRCS(410,
"FIA",410,0,0)
410I
"FIA",410,0,1)
y^n^p^^^^n^^n
"FIA",410,0,10)

"FIA",410,0,11)

"FIA",410,0,"RLRO")

"FIA",410,0,"VR")
5.1^PRC
"FIA",410,410)
1
"FIA",410,410,103)

"FIA",410,410.02)
1
"FIA",410,410.02,100)

"FIA",414.06)
IFCAP/ECMS TRANSACTION
"FIA",414.06,0)
^PRCV(414.06,
"FIA",414.06,0,0)
414.06
"FIA",414.06,0,1)
y^n^f^^^^n
"FIA",414.06,0,10)

"FIA",414.06,0,11)

"FIA",414.06,0,"RLRO")

"FIA",414.06,0,"VR")
5.1^PRC
"FIA",414.06,414.06)
0
"FIA",414.06,414.061)
0
"FIA",414.06,414.0613)
0
"INIT")
POST^PRC5167P
"IX",414.06,414.06,"ACONTACT",0)
414.06^ACONTACT^ECMS CONTACT^R^^F^IR^W^414.061^^^^^S
"IX",414.06,414.06,"ACONTACT",.1,0)
^^1^1^3120808^^
"IX",414.06,414.06,"ACONTACT",.1,1,0)
File wide to assist with the sorting of eCMS Contact information.
"IX",414.06,414.06,"ACONTACT",1)
S ^PRCV(414.06,"ACONTACT",$E(X,1,60),DA(1),DA)=""
"IX",414.06,414.06,"ACONTACT",2)
K ^PRCV(414.06,"ACONTACT",$E(X,1,60),DA(1),DA)
"IX",414.06,414.06,"ACONTACT",2.5)
K ^PRCV(414.06,"ACONTACT")
"IX",414.06,414.06,"ACONTACT",11.1,0)
^.114IA^1^1
"IX",414.06,414.06,"ACONTACT",11.1,1,0)
1^F^414.061^6^60^1^F
"IX",414.06,414.06,"ACONTACT",11.1,1,2)
S X=$$CONTACT^PRCHJTA(X)
"IX",414.06,414.06,"ACONTACT",11.1,1,3)

"IX",414.06,414.06,"ACP",0)
414.06^ACP^Fund control point^R^^F^IR^I^414.06^^^^^S
"IX",414.06,414.06,"ACP",.1,0)
^^1^1^3120726^
"IX",414.06,414.06,"ACP",.1,1,0)
Index uses only the fund control point portion of the reference number.
"IX",414.06,414.06,"ACP",1)
S ^PRCV(414.06,"ACP",$E(X,1,30),DA)=""
"IX",414.06,414.06,"ACP",2)
K ^PRCV(414.06,"ACP",$E(X,1,30),DA)
"IX",414.06,414.06,"ACP",2.5)
K ^PRCV(414.06,"ACP")
"IX",414.06,414.06,"ACP",11.1,0)
^.114IA^1^1
"IX",414.06,414.06,"ACP",11.1,1,0)
1^F^414.06^.01^30^1^F
"IX",414.06,414.06,"ACP",11.1,1,2)
S X=$P(X,"-",4)
"IX",414.06,414.06,"ACP",11.1,1,3)

"KRN",19,10309,-1)
2^3
"KRN",19,10309,0)
PRCHUSER PPM^Accountable Officer Menu^^M^123456797^^^^^^^455^^1
"KRN",19,10309,10,0)
^19.01IP^11^11
"KRN",19,10309,10,10,0)
13141^^50
"KRN",19,10309,10,10,"^")
PRCHJ RETRANS 2237
"KRN",19,10309,10,11,0)
13146
"KRN",19,10309,10,11,"^")
PRCHJ TRANS REPORT
"KRN",19,10309,"U")
ACCOUNTABLE OFFICER MENU
"KRN",19,10323,-1)
2^4
"KRN",19,10323,0)
PRCSER^Process a Request Menu^^M^123456797^^^^^^^^^1
"KRN",19,10323,10,0)
^19.01IP^14^13
"KRN",19,10323,10,14,0)
13147^^14
"KRN",19,10323,10,14,"^")
PRCHJ TRANS REPORT2
"KRN",19,10323,"U")
PROCESS A REQUEST MENU
"KRN",19,13141,-1)
0^1
"KRN",19,13141,0)
PRCHJ RETRANS 2237^Retransmit a 2237 to eCMS^^R^^^^^^^^IFCAP^^1
"KRN",19,13141,1,0)
^^9^9^3120806^
"KRN",19,13141,1,1,0)
This option allows an IFCAP user having the Accountable Officer role to 
"KRN",19,13141,1,2,0)
retransmit a 2237 transaction to the Electronic Contracting Management
"KRN",19,13141,1,3,0)
System (eCMS) via the IFCAP/eCMS HL7 interface.
"KRN",19,13141,1,4,0)
 
"KRN",19,13141,1,5,0)
A 2237 transaction will be selectable for retransmission to eCMS when:
"KRN",19,13141,1,6,0)
 
"KRN",19,13141,1,7,0)
[The Current Status (#1.5) field of the record in the REQUEST WORKSHEET 
"KRN",19,13141,1,8,0)
(#443) is 'Sent to eCMS (P&C)'] AND [The ECMS ACTIONUID (#103) field of
"KRN",19,13141,1,9,0)
the record in the CONTROL POINT ACTIVITY (#410) file is not populated.]
"KRN",19,13141,20)
S:'$$ENTACT^PRCHJS07(DUZ) XQUIT=1
"KRN",19,13141,25)
RETRANS^PRCHJS07
"KRN",19,13141,99)
62609,52495
"KRN",19,13141,99.1)
62619,34881
"KRN",19,13141,"U")
RETRANSMIT A 2237 TO ECMS
"KRN",19,13146,-1)
0^2
"KRN",19,13146,0)
PRCHJ TRANS REPORT^Transaction Report - eCMS/IFCAP^^R^^^^^^^^IFCAP
"KRN",19,13146,1,0)
^19.06^3^3^3121001^^
"KRN",19,13146,1,1,0)
This report displays information about HL7 transactions that take place 
"KRN",19,13146,1,2,0)
between eCMS and IFCAP. This option is accessed from the Accountable 
"KRN",19,13146,1,3,0)
Officer Menu.
"KRN",19,13146,25)
START^PRCHJRP1
"KRN",19,13146,"U")
TRANSACTION REPORT - ECMS/IFCA
"KRN",19,13147,-1)
0^5
"KRN",19,13147,0)
PRCHJ TRANS REPORT2^Transaction Report - eCMS/IFCAP^^R^^^^^^^^^^
"KRN",19,13147,1,0)
^19.06^3^3^3121001^^
"KRN",19,13147,1,1,0)
This option prints a report of the HL7 messages between eCMS and IFCAP. 
"KRN",19,13147,1,2,0)
This option is accessible from the Control Point Official and Control 
"KRN",19,13147,1,3,0)
Point Clerk Menus, by means of Process a Request.
"KRN",19,13147,20)

"KRN",19,13147,25)
START^PRCHJRP1
"KRN",19,13147,"U")
TRANSACTION REPORT - ECMS/IFCA
"KRN",779.2,6,-1)
0^1
"KRN",779.2,6,0)
PRCHJ_IFCAP_2237_RETURN^PRCHJ_ECMS
"KRN",779.2,6,1,0)
^779.21I^1^1
"KRN",779.2,6,1,1,0)
OMN^O07^^PARSE^PRCHJR01^2.5
"KRN",779.2,6,1,"B","OMN",1)

"KRN",779.2,6,1,"D","OMN","O07",2.5,1)

"KRN",779.2,6,2)
IFCAP
"KRN",779.2,7,-1)
0^2
"KRN",779.2,7,0)
PRCHJ_IFCAP_2237_SEND^^^^^^^^^^^^
"KRN",779.2,7,1,0)
^779.21I^1^1
"KRN",779.2,7,1,1,0)
ORN^O08^^APPACK^PRCHJR02^2.5
"KRN",779.2,7,1,"B","ORN",1)

"KRN",779.2,7,1,"D","ORN","O08",2.5,1)

"KRN",779.2,7,2)
IFCAP
"KRN",870,89,-1)
0^1
"KRN",870,89,0)
PRCHJ_ECMS^^TCP^^^^^vhaispviev9^^^^^^^^^^^^^10
"KRN",870,89,3,0)
^870.02^3^3^3121102^^^^
"KRN",870,89,3,1,0)
HL7 Logical Link used to identify the VistA Interface Engine for routing 
"KRN",870,89,3,2,0)
HL7 messages from IFCAP to the Electronic Contract Management System
"KRN",870,89,3,3,0)
(eCMS) in Austin.
"KRN",870,89,400)
10.4.232.89^^C^^^^^8090^
"MBREQ")
0
"ORD",13,870)
870;13;1;;HLLL^XPDTA1;;HLLLE^XPDIA1;;;HLLLDEL^XPDIA1(%)
"ORD",13,870,0)
HL LOGICAL LINK
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",22,779.2)
779.2;22;1;;HLOAP^XPDTA1;;HLOE^XPDIA1;;;
"ORD",22,779.2,0)
HLO APPLICATION REGISTRY
"PKG",455,-1)
1^1
"PKG",455,0)
IFCAP^PRC^IFCAP System Files
"PKG",455,20,0)
^9.402P^^
"PKG",455,22,0)
^9.49I^1^1
"PKG",455,22,1,0)
5.1^3001012^3001019^68
"PKG",455,22,1,"PAH",1,0)
167^3121113
"PKG",455,22,1,"PAH",1,1,0)
^^7^7^3121113
"PKG",455,22,1,"PAH",1,1,1,0)
This patch will establish bidirectional communication (HL7 
"PKG",455,22,1,"PAH",1,1,2,0)
Interface) between IFCAP and the commercial Electronic Contract
"PKG",455,22,1,"PAH",1,1,3,0)
Management System (eCMS) in Austin, in order to capitalize on the
"PKG",455,22,1,"PAH",1,1,4,0)
abilities of eCMS to consolidate  multiple requests, electronically
"PKG",455,22,1,"PAH",1,1,5,0)
prepare and issue solicitation documents, receive electronic offers,
"PKG",455,22,1,"PAH",1,1,6,0)
automate contract administration, and provide interfaces to the Integrated
"PKG",455,22,1,"PAH",1,1,7,0)
Acquisition Environment initiatives.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
21
"RTN","PRC5167P")
0^^B2880344^n/a
"RTN","PRC5167P",1,0)
PRC5167P ;OI&T/DDA - INSTALL UTILITY ROUTINE ;7/2/12  13:58
"RTN","PRC5167P",2,0)
 ;;5.1;IFCAP;**167**;Oct 20, 2000;Build 17
"RTN","PRC5167P",3,0)
 ;;Per VHA Directive 2004-38, this routine should not be modified.
"RTN","PRC5167P",4,0)
 ;
"RTN","PRC5167P",5,0)
 Q
"RTN","PRC5167P",6,0)
POST ; post install;
"RTN","PRC5167P",7,0)
 ; ADD the two new eCMS related status entries
"RTN","PRC5167P",8,0)
 N PRCERR,PRCD4423
"RTN","PRC5167P",9,0)
 S PRCERR=""
"RTN","PRC5167P",10,0)
 S PRCD4423=1
"RTN","PRC5167P",11,0)
 S PRCIEN(1)=69
"RTN","PRC5167P",12,0)
 S PRC4423(442.3,"+1,",.01)="Sent to eCMS (P&C)"
"RTN","PRC5167P",13,0)
 S PRC4423(442.3,"+1,",.02)=69
"RTN","PRC5167P",14,0)
 D UPDATE^DIE("","PRC4423","PRCIEN","PRCERR")
"RTN","PRC5167P",15,0)
 ;I $D(PRCERR)
"RTN","PRC5167P",16,0)
 K PRC4423,PRCIEN
"RTN","PRC5167P",17,0)
 S PRCIEN(1)=77
"RTN","PRC5167P",18,0)
 S PRC4423(442.3,"+1,",.01)="Returned to Service by eCMS (P&C)"
"RTN","PRC5167P",19,0)
 S PRC4423(442.3,"+1,",.02)=77
"RTN","PRC5167P",20,0)
 D UPDATE^DIE("","PRC4423","PRCIEN","PRCERR")
"RTN","PRC5167P",21,0)
 K PRC4423,PRCIEN
"RTN","PRC5167P",22,0)
UPDT ; Update status 70 to new text
"RTN","PRC5167P",23,0)
 S PRC4423(442.3,"70,",.01)="To IFCAP Ordering Officer"
"RTN","PRC5167P",24,0)
 D FILE^DIE("","PRC4423","PRCERR")
"RTN","PRC5167P",25,0)
 K PRC4423
"RTN","PRC5167P",26,0)
 ;
"RTN","PRC5167P",27,0)
ID ; covered by ICR #5819
"RTN","PRC5167P",28,0)
 D MES^XPDUTL("  - Setting ID nodes for file #410 and subfile #410.02")
"RTN","PRC5167P",29,0)
 S ^DD(410,0,"ID","Z3")="D:$P($G(^(1)),U,8)]"""" EN^DDIOL(""Sent to eCMS"",,""?0""),EN^DDIOL("" "",,""!?2"")"
"RTN","PRC5167P",30,0)
 S ^DD(410.02,0,"ID","Z2")="D:$P($G(@(DIC_+Y_"",4)"")),U,3)]"""" EN^DDIOL(""eCMS Item Line ID ""_$P(^(4),U,3),,""!?10"")"
"RTN","PRC5167P",31,0)
 D MES^XPDUTL("  - ID nodes set")
"RTN","PRC5167P",32,0)
 ;
"RTN","PRC5167P",33,0)
 Q 
"RTN","PRCHG")
0^1^B45716254^B23118352
"RTN","PRCHG",1,0)
PRCHG ;ID/RSD,SF-ISC/TKW/DAP-PROCESS 2237 ;6/18/12  13:07
"RTN","PRCHG",2,0)
V ;;5.1;IFCAP;**81,167**;Oct 20, 2000;Build 17
"RTN","PRCHG",3,0)
 ;Per VHA Directive 2004-38, this routine should not be modified.
"RTN","PRCHG",4,0)
 ;
"RTN","PRCHG",5,0)
ES ;SIGN 2237 IN PPM
"RTN","PRCHG",6,0)
 G Q:'$D(PRC("PER"))!('$D(PRC("SITE"))) I $S('$D(^VA(200,+PRC("PER"),400)):1,$P(^(400),U,1)=4:0,$P(^(400),U,1)=2:0,1:1) W !!,"You are not a Supply Accountable Officer !",$C(7) G Q
"RTN","PRCHG",7,0)
 S P=+PRC("PER"),DA=1,PRCSIG="" D ESIG^PRCUESIG(DUZ,.PRCSIG) S ROUTINE="PRCUESIG" G:PRCSIG'=1 QQ S PRCHNM=$P(^VA(200,P,20),U,2)
"RTN","PRCHG",8,0)
 Q
"RTN","PRCHG",9,0)
 ;
"RTN","PRCHG",10,0)
ES1 ;S PRCHG=$S($D(^PRCD(442.3,+$P(^PRC(443,DA,0),U,7),0)):$P(^(0),U,2),1:""),$P(^PRC(443,DA,0),"^",3)="",P=+PRC("PER")
"RTN","PRCHG",11,0)
 S PRCHG=$P($G(^PRCD(442.3,+$P(^PRC(443,DA,0),U,7),0)),U,2),$P(^PRC(443,DA,0),"^",3)="",P=+PRC("PER")
"RTN","PRCHG",12,0)
 I PRCHG=63 S PRCFA("WHO")=3 D RET
"RTN","PRCHG",13,0)
 N DA2237 S DA2237=DA
"RTN","PRCHG",14,0)
 ;
"RTN","PRCHG",15,0)
 ;if PO is not for PPM Clerk stop processing and exit
"RTN","PRCHG",16,0)
 I PRCHG<65 K PRCHG Q
"RTN","PRCHG",17,0)
 S PRCSIG="" D ENCODE^PRCHES11(DA,DUZ,.PRCSIG) S ROUTINE=$T(+0) G:PRCSIG<1 QQ
"RTN","PRCHG",18,0)
 ;set AO name, signature date on 2237 record
"RTN","PRCHG",19,0)
 I $D(DA2237) L +^PRCS(410,DA2237):15 Q:'$T  D NOW^%DTC S $P(^PRCS(410,DA2237,7),"^",11)=P,$P(^PRCS(410,DA2237,7),"^",12)=% L -^PRCS(410,DA2237)
"RTN","PRCHG",20,0)
 ;
"RTN","PRCHG",21,0)
 ;if 2237 status is 'Sent to eCMS(P&C)', transmit to eCMS via HL7 msg OMN^O07 (PRC*5.1*167)
"RTN","PRCHG",22,0)
 N PRCERFLG ;2237 transmission error flag
"RTN","PRCHG",23,0)
 N PRCER    ;transmission error msg
"RTN","PRCHG",24,0)
 N PRCEVNT  ;event array for LOG^PRCHJTA
"RTN","PRCHG",25,0)
 I PRCHG=69 D
"RTN","PRCHG",26,0)
 . N PRCLOGER ;error returned from LOG^PRCHJTA
"RTN","PRCHG",27,0)
 . N PRCMSGID ;ien of msg in HLO MESSAGES (#778)
"RTN","PRCHG",28,0)
 . W !!,"Transmitting 2237 transaction to eCMS..."
"RTN","PRCHG",29,0)
 . S PRCMSGID=$$SEND2237^PRCHJS01($G(DA2237),.PRCER)
"RTN","PRCHG",30,0)
 . ;
"RTN","PRCHG",31,0)
 . ;was the transmission successful, ELSE did it fail?
"RTN","PRCHG",32,0)
 . I $G(PRCMSGID)>0 D
"RTN","PRCHG",33,0)
 . . W !?3,">>> 2237 transaction has been successfully transmitted to eCMS."
"RTN","PRCHG",34,0)
 . . W !?3,"    Transaction Number: "_$G(PRCTRANS)
"RTN","PRCHG",35,0)
 . . W !?3,"        HLO Message ID: "_$G(PRCMSGID)
"RTN","PRCHG",36,0)
 . . W !!?3,">>> Updating transmission in IFCAP/ECMS Transaction file..."
"RTN","PRCHG",37,0)
 . . S PRCEVNT("MSGID")=$G(PRCMSGID)
"RTN","PRCHG",38,0)
 . . S PRCEVNT("IEN410")=$G(DA2237)
"RTN","PRCHG",39,0)
 . . S PRCEVNT("IFCAPU")=$G(DUZ)
"RTN","PRCHG",40,0)
 . . D LOG^PRCHJTA($G(PRCTRANS),,1,.PRCEVNT,.PRCLOGER)
"RTN","PRCHG",41,0)
 . . I +$G(PRCLOGER) W !?3,"    Error: "_$P($G(PRCLOGER),U,2)
"RTN","PRCHG",42,0)
 . E  D
"RTN","PRCHG",43,0)
 . . W !?3,">>> ERROR: 2237 was not transmitted to eCMS!"
"RTN","PRCHG",44,0)
 . . W !?3,"    Transaction Number: "_$G(PRCTRANS)
"RTN","PRCHG",45,0)
 . . W !?3,"    Error: "_$G(PRCER)
"RTN","PRCHG",46,0)
 . . S PRCERFLG=1 ;set flag for sending notification msg to Accountable Officer
"RTN","PRCHG",47,0)
 . . W !!?3,">>> Updating transmission error in IFCAP/ECMS Transaction file..."
"RTN","PRCHG",48,0)
 . . S PRCEVNT("MSGID")=""
"RTN","PRCHG",49,0)
 . . S PRCEVNT("IEN410")=$G(DA2237)
"RTN","PRCHG",50,0)
 . . S PRCEVNT("IFCAPU")=$G(DUZ)
"RTN","PRCHG",51,0)
 . . S PRCEVNT("ERROR",1)="An error occurred when transmitting the 2237 transaction to eCMS."
"RTN","PRCHG",52,0)
 . . S PRCEVNT("ERROR",2)="Error: "_$E($G(PRCER),1,60)
"RTN","PRCHG",53,0)
 . . I $D(XQY0) S PRCEVNT("ERROR",3)="Option: "_$P($G(XQY0),"^",2)
"RTN","PRCHG",54,0)
 . . D LOG^PRCHJTA($G(PRCTRANS),,1,.PRCEVNT,.PRCLOGER)
"RTN","PRCHG",55,0)
 . . I +$G(PRCLOGER) W !?3,"    Error: "_$P($G(PRCLOGER),U,2)
"RTN","PRCHG",56,0)
 ;
"RTN","PRCHG",57,0)
 ;if 2237 transmission error occurred, send notification msg to AO (PRC*5.1*167)
"RTN","PRCHG",58,0)
 I PRCHG=69,($G(PRCERFLG)) D
"RTN","PRCHG",59,0)
 . W !!?3,">>> Sending error notification mail message to Accountable Officer..."
"RTN","PRCHG",60,0)
 . N PRCMSG1,PRCMSG2 ;input arrays for PHMSG^PRCHJMSG, pass by ref
"RTN","PRCHG",61,0)
 . S PRCMSG1(1)=$G(PRCTRANS) ;2237 transaction #
"RTN","PRCHG",62,0)
 . S PRCMSG1(2)=5 ;return to AO since failed transmission to eCMS
"RTN","PRCHG",63,0)
 . S PRCMSG1(3)=$$NOW^XLFDT ;action date/time
"RTN","PRCHG",64,0)
 . I $G(PRCER)["REQUESTING SERVICE" D
"RTN","PRCHG",65,0)
 . . S PRCMSG1(7)="Return 2237 to Control Point for edit and re-approval!"
"RTN","PRCHG",66,0)
 . E  D
"RTN","PRCHG",67,0)
 . . S PRCMSG1(7)="Please forward this message to appropriate OIT staff!"
"RTN","PRCHG",68,0)
 . M PRCMSG2=PRCEVNT("ERROR") ;merge error array into PRCMSG2 array
"RTN","PRCHG",69,0)
 . D PHMSG^PRCHJMSG(.PRCMSG1,.PRCMSG2) ;send msg
"RTN","PRCHG",70,0)
 ;
"RTN","PRCHG",71,0)
 Q
"RTN","PRCHG",72,0)
 ;
"RTN","PRCHG",73,0)
QQ S:'$D(ROUTINE) ROUTINE=$T(+0) W !!,$$ERR^PRCHQQ(ROUTINE,PRCSIG) W:PRCSIG=0!(PRCSIG=-3) !,"Notify Application Coordinator!",$C(7) S DIR(0)="EAO",DIR("A")="Press <return> to continue" D ^DIR
"RTN","PRCHG",74,0)
 ;
"RTN","PRCHG",75,0)
Q K %,DA,DIC,DIE,DR,P,PRCHNM,PRCHTDA,PRCHG,PRCHPO,PRCHS,PRCHSIT,PRCHSX,PRCHSY,PRCHSZ,PRCHX,PRCTRANS,ROUTINE
"RTN","PRCHG",76,0)
 Q
"RTN","PRCHG",77,0)
 ;
"RTN","PRCHG",78,0)
RET ;RETURN TO SERVICE--UPDATE CP BALANCES, ERASE CP OFFICIAL SIGNATURE, SEND BULLETIN BACK TO SERVICE
"RTN","PRCHG",79,0)
 S PRCHDA=DA,X=$P(^PRCS(410,DA,4),"^",8) D TRANK^PRCSES S $P(^PRCS(410,DA,7),"^",5,7)="^^",$P(^PRCS(410,DA,10),U,4)=$P(^PRC(443,DA,0),U,7),DIE="^PRCS(410,",DR=61 D ^DIE K DIE
"RTN","PRCHG",80,0)
 S DA=PRCHDA D REMOVE^PRCSC1(DA),REMOVE^PRCSC3(DA)
"RTN","PRCHG",81,0)
 ;remove AO name, signature date from 2237 record
"RTN","PRCHG",82,0)
 N PPMNODE F PPMNODE=11,12 S $P(^PRCS(410,DA,7),"^",PPMNODE)=""
"RTN","PRCHG",83,0)
 S (DA,PRCFA("TRDA"))=PRCHDA D RETURN^PRCEFIS1 S DA=PRCHDA D EN3^PRCPWI
"RTN","PRCHG",84,0)
 Q
"RTN","PRCHG",85,0)
 ;
"RTN","PRCHG",86,0)
SIT S PRCF("X")="SP" D ^PRCFSITE K PRCHNM
"RTN","PRCHG",87,0)
 Q
"RTN","PRCHG",88,0)
 ;
"RTN","PRCHG",89,0)
TR S DIC("S")="I $P(^(0),U,3)="""",$D(^PRCS(410,Y,7)),$P(^(7),U,6)]"""",+^(0)=PRC(""SITE"")"
"RTN","PRCHG",90,0)
 S DIC("S")=$S('$D(PRCFDICS):DIC("S")_" S Z=$O(^PRCD(442.3,""C"",+$P(^PRC(443,Y,0),U,7),0)) I Z'=10&(Z'=85)",1:DIC("S")_PRCFDICS)
"RTN","PRCHG",91,0)
 ;
"RTN","PRCHG",92,0)
DIC W !! K DA S DIC="^PRC(443,",DIC(0)="QEAMZ",DIC("A")="2237 TRANSACTION NUMBER: " D ^DIC S DIE=DIC K DIC S:Y>0 DA=+Y,PRCTRANS=$G(Y(0,0))
"RTN","PRCHG",93,0)
 Q
"RTN","PRCHG",94,0)
 ;
"RTN","PRCHG",95,0)
ST S DIC("S")="I $P(^(0),U,3)]"""",$O(^PRCD(442.3,""C"",+$P(^(0),U,7),0))'=65,$D(^PRCS(410,+Y,0)),+^(0)=PRC(""SITE"")" D DIC
"RTN","PRCHG",96,0)
 Q
"RTN","PRCHG",97,0)
 ;
"RTN","PRCHG",98,0)
PPM S DR="[PRCHPPM]",DIE("NO^")="" D ^DIE K DIE,PRCHPPM D ES1
"RTN","PRCHG",99,0)
 Q
"RTN","PRCHG",100,0)
 ;
"RTN","PRCHG",101,0)
EN ;SIGN 2237 IN PPM
"RTN","PRCHG",102,0)
 D SIT Q:'$D(PRC("SITE"))  D:'$D(PRCHNM) ES G:'$D(PRCHNM) Q
"RTN","PRCHG",103,0)
 ;*81 Check site parameter to see if issue books should be allowed
"RTN","PRCHG",104,0)
 I $$GET^XPAR("SYS","PRCV COTS INVENTORY",1,"Q")'=1 D EN^PRCHG1
"RTN","PRCHG",105,0)
 ;
"RTN","PRCHG",106,0)
EN0 D:'$D(PRCHNM) ES G:'$D(PRCHNM) Q D TR G:'$D(DA) Q D PPM
"RTN","PRCHG",107,0)
 G EN0
"RTN","PRCHG",108,0)
 ;
"RTN","PRCHG",109,0)
EN1 ;SIGN 2237 IN PC
"RTN","PRCHG",110,0)
 D SIT Q:'$D(PRC("SITE"))
"RTN","PRCHG",111,0)
EN10 D ST G:'$D(DA) Q S DR="[PRCHPC]",DIE("NO^")="" D ^DIE K DIE
"RTN","PRCHG",112,0)
 G EN10
"RTN","PRCHG",113,0)
 ;
"RTN","PRCHG",114,0)
EN2 ;RETURN 2237 IN PC
"RTN","PRCHG",115,0)
 D SIT Q:'$D(PRC("SITE"))
"RTN","PRCHG",116,0)
EN20 ;D ST G:'$D(DA) Q S DR="[PRCHPCR]" D ^DIE K PRCHPCR S Z=$S($D(^PRCD(442.3,+$P(^PRC(443,DA,0),U,7),0)):$P(^(0),U,2),1:"") G:Z'=76 EN20
"RTN","PRCHG",117,0)
 D ST G:'$D(DA) Q S DR="[PRCHPCR]" D ^DIE K PRCHPCR S Z=$P($G(^PRCD(442.3,+$P(^PRC(443,DA,0),U,7),0)),U,2) G:Z'=76 EN20
"RTN","PRCHG",118,0)
 S $P(^PRC(443,DA,0),"^",2,4)="^^"
"RTN","PRCHG",119,0)
 S PRCFA("WHO")=2 D RET
"RTN","PRCHG",120,0)
 G EN20
"RTN","PRCHG",121,0)
 ;
"RTN","PRCHG",122,0)
EN3 ;SPLIT 2237 IN PPM
"RTN","PRCHG",123,0)
 D SIT Q:'$D(PRC("SITE"))
"RTN","PRCHG",124,0)
EN30 D TR G:'$D(DA) Q S PRCHSY(0)=Y(0),(PRCHPO,PRCHSY)=DA,(PRCHG,PRCHSZ)=1 D N^PRCHNPO3 G Q:'$D(PRCHSY)!('$O(^TMP($J,"PRCHS",0))),W1:+^TMP($J,"PRCHS",0)=+^PRCS(410,DA,10)
"RTN","PRCHG",125,0)
 S PRCHSIT=+^TMP($J,"PRCHS",0),PRCHS=PRCHSY D WAIT^DICD,^PRCHSP I PRCHSY=-1 D ERR^PRCHNPO3,Q G EN30
"RTN","PRCHG",126,0)
 W !!,"The new 2237, ",PRCHSX,", will now be printed with the old one." F DA=PRCHS,PRCHSY S PRCSF=1 D PRF1^PRCSP1
"RTN","PRCHG",127,0)
 K PRCSF D Q
"RTN","PRCHG",128,0)
 G EN30
"RTN","PRCHG",129,0)
 ;
"RTN","PRCHG",130,0)
EN4 ;EDIT A SIGNED 2237 IN PPM
"RTN","PRCHG",131,0)
 D SIT Q:'$D(PRC("SITE"))
"RTN","PRCHG",132,0)
EN40 D:'$D(PRCHNM) ES G:'$D(PRCHNM) Q S DIC("S")="I $P(^(0),U,3)]""""" D DIC G:'$D(DA) Q D PPM
"RTN","PRCHG",133,0)
 G EN40
"RTN","PRCHG",134,0)
 ;
"RTN","PRCHG",135,0)
EN5 ;DISPLAY NO.OF REQUESTS TO BE PROCESSED BY PPM
"RTN","PRCHG",136,0)
 S X=0 F I=0:0 S I=$O(^PRC(443,"AC",60,I)) Q:'I  S X=X+1
"RTN","PRCHG",137,0)
 W $C(7),!!!,?3,"There are "_X_" Requests ready to process." K X,I
"RTN","PRCHG",138,0)
 Q
"RTN","PRCHG",139,0)
 ;
"RTN","PRCHG",140,0)
W1 W !!,"You have selected all Line Items, NO action taken.",$C(7) D Q
"RTN","PRCHG",141,0)
 G EN3
"RTN","PRCHG",142,0)
 ;
"RTN","PRCHG",143,0)
STAT I $D(PRCFGPF) S DIC("S")="S Z=$P(^(0),U,2) I Z=10!(Z=60)!(Z=85)" Q
"RTN","PRCHG",144,0)
 I $D(PRCHPCR) D  Q
"RTN","PRCHG",145,0)
 . S DIC("S")="I $P(^(0),U,2)=75!($P(^(0),U,2)=76)"
"RTN","PRCHG",146,0)
 . I $$GET^XPAR("SYS","PRCV COTS INVENTORY",1,"Q")=1 D  Q
"RTN","PRCHG",147,0)
 . . N PRC2237
"RTN","PRCHG",148,0)
 . . S PRC2237=$P(^PRCS(410,DA,0),"^",1)
"RTN","PRCHG",149,0)
 . . I '$$CHKDM^PRCVLIC(PRC2237) Q
"RTN","PRCHG",150,0)
 . . I $O(^PRCS(410,"AG",PRC2237,""))]"" S DIC("S")="I $P(^(0),U,2)=75"
"RTN","PRCHG",151,0)
 I '$D(PRCHPPM) S DIC("S")="I $P(^(0),U,2)>69" Q
"RTN","PRCHG",152,0)
 K Z0 S (Z0(60),Z0(62),Z0(63),Z0(65),Z0(74))="" S:$P(^PRC(443,DA,0),U,10)=4 Z0(70)="",Z0(69)=""
"RTN","PRCHG",153,0)
 S DIC("S")="I $D(Z0(+$P(^(0),U,2)))"
"RTN","PRCHG",154,0)
 Q
"RTN","PRCHJMSG")
0^2^B10009804^n/a
"RTN","PRCHJMSG",1,0)
PRCHJMSG ;BP/VAC - SEND A MAILMAN MESSAGE ; 9/11/12 2:50pm
"RTN","PRCHJMSG",2,0)
 ;;5.1;IFCAP;**167**;Oct 20, 2000;Build 17
"RTN","PRCHJMSG",3,0)
 ;Per VHA Directive 2004-38, this routine should not be modified.
"RTN","PRCHJMSG",4,0)
 ;Send a MailMan message
"RTN","PRCHJMSG",5,0)
 ;XMDUZ=SENDER OF THE MESSAGE
"RTN","PRCHJMSG",6,0)
 ;XMSUB=SUBJECT LINE
"RTN","PRCHJMSG",7,0)
 ;XMTEXT="MSG(" - ARRAY OF MESSAGE LINES
"RTN","PRCHJMSG",8,0)
 ;XMY(DUZ)="" - Receivers of the message
"RTN","PRCHJMSG",9,0)
 ;TO BE PASSED IN
"RTN","PRCHJMSG",10,0)
 ;   2237 NUMBER
"RTN","PRCHJMSG",11,0)
 ;   TYPE OF MESSAGE
"RTN","PRCHJMSG",12,0)
 ;   ACTION DATE AND TIME AS FILEMAN DATE TIME
"RTN","PRCHJMSG",13,0)
 ;   COMMENTS - MULTIPLE ARRAY
"RTN","PRCHJMSG",14,0)
 ;   eCMS USER NAME
"RTN","PRCHJMSG",15,0)
 ;   eCMS USER EMAIL ADDRESS
"RTN","PRCHJMSG",16,0)
 ;   eCMS USER PHONE NUMBER
"RTN","PRCHJMSG",17,0)
 ;TO BE RETRIEVED FROM 2237 OR PASSED IN
"RTN","PRCHJMSG",18,0)
 ;   STATION NUMBER 410  .5
"RTN","PRCHJMSG",19,0)
 ;   SUB STATION NUMBER  410 448 POINTER TO 411
"RTN","PRCHJMSG",20,0)
 ;   ACCOUNTABLE OFFICER  410  39
"RTN","PRCHJMSG",21,0)
 ;   CONTROL POINT OFFICIAL(APPROVING OFFICIAL) 410 42 POINTER TO 200
"RTN","PRCHJMSG",22,0)
 ;   REQUESTOR 410 40 POINTER TO 200
"RTN","PRCHJMSG",23,0)
 ;
"RTN","PRCHJMSG",24,0)
PHMSG(MSG1,MSG2) ;START OF MESSAGE BUILDING
"RTN","PRCHJMSG",25,0)
 ;MSG1 array contains (1)-2237 number;(2)msg type;(3)date and time
"RTN","PRCHJMSG",26,0)
 ;    (4) eCMS User Name; (5) eCMS User email
"RTN","PRCHJMSG",27,0)
 ;    (6) eCMS User phone number (7) Special message to send to OIT
"RTN","PRCHJMSG",28,0)
 ;MSG2 array contains error comments from ACK or comments from Cancel/return
"RTN","PRCHJMSG",29,0)
 ;
"RTN","PRCHJMSG",30,0)
 N XMTEXT,XMSUB,XMY,XMDUZ,OUT,I,J,ZZ
"RTN","PRCHJMSG",31,0)
 N PRCHJ22,PRCHJTY,PRCHJDT,PRCHJRR,PRCHJUN,PRCHJEM,PRCHJPH,PRCHJSP
"RTN","PRCHJMSG",32,0)
 S PRCHJ22=$G(MSG1(1)) ; 2237 NUMBER
"RTN","PRCHJMSG",33,0)
 S PRCHJTY=$G(MSG1(2)) ; MESSAGE TYPE
"RTN","PRCHJMSG",34,0)
 S PRCHJDT=$$FMTE^XLFDT($G(MSG1(3))) ;  DATE AND TIME WHEN ACTION TOOK PLACE
"RTN","PRCHJMSG",35,0)
 K MSG1(3)
"RTN","PRCHJMSG",36,0)
 S PRCHJUN=$G(MSG1(4)) ; ECMS USER NAME
"RTN","PRCHJMSG",37,0)
 S PRCHJEM=$G(MSG1(5)) ; ECMS USER EMAIL
"RTN","PRCHJMSG",38,0)
 S PRCHJPH=$G(MSG1(6)) ; ECMS USER PHONE
"RTN","PRCHJMSG",39,0)
 S PRCHJSP=$G(MSG1(7)) ; Special OIT message
"RTN","PRCHJMSG",40,0)
 ;I PRCHJTY=1 MESAGE IS AN ACK REJECT
"RTN","PRCHJMSG",41,0)
 ;I PRCHJTY=2 MESSAGE IS A MESSAGE CANCEL
"RTN","PRCHJMSG",42,0)
 ;I PRCHJTY=3 MESAGE IS A RETURN TO ACCOUNTABLE OFFICER
"RTN","PRCHJMSG",43,0)
 ;I PRCHJTY=4 MESSAGE IS A RETURN TO CONTROL POINT
"RTN","PRCHJMSG",44,0)
 ;I PRCHJTY=5 MESSAGE IS RETURN TO AO BECAUSE IT DIDN'T GO TO ECMS
"RTN","PRCHJMSG",45,0)
 ;
"RTN","PRCHJMSG",46,0)
 ;Put errors/text into MSG1 from MSG2
"RTN","PRCHJMSG",47,0)
 S ZZ=0
"RTN","PRCHJMSG",48,0)
 F I=1:1 S ZZ=$O(MSG2(ZZ)) Q:ZZ=""  S MSG1(I+6)=MSG2(ZZ)
"RTN","PRCHJMSG",49,0)
 S XMTEXT="MSG1("
"RTN","PRCHJMSG",50,0)
 ;Get information from 2237
"RTN","PRCHJMSG",51,0)
 D FIND^DIC(410,"","@;.5;39I;40I;42I;448","B",PRCHJ22,,,,,"OUT","ERR")
"RTN","PRCHJMSG",52,0)
 ;Validate that a good 2237 number was sent in
"RTN","PRCHJMSG",53,0)
 ;OUT array contains data from 2237
"RTN","PRCHJMSG",54,0)
 ;OUT("DILIST","ID",1,.3))=SPECIAL OIT MESSAGE
"RTN","PRCHJMSG",55,0)
 ;OUT("DILIST","ID",1,.5))=STATION NUMBER
"RTN","PRCHJMSG",56,0)
 ;OUT('DILIST","ID",1,39)=ACCOUNTABLE OFFICER
"RTN","PRCHJMSG",57,0)
 ;OUT("DILIST","ID",1,40)=REQUESTOR
"RTN","PRCHJMSG",58,0)
 ;OUT("DILIST","ID",1,42))=CONTROL POINT OFFICIAL
"RTN","PRCHJMSG",59,0)
 ;OUT("DILIST","ID",1,448)=SUB STATION
"RTN","PRCHJMSG",60,0)
 ;
"RTN","PRCHJMSG",61,0)
BLD ;BUILD MESSAGE
"RTN","PRCHJMSG",62,0)
 ;
"RTN","PRCHJMSG",63,0)
 ;S MSG1(.6)="DATE AND TIME OF ACTION "_PRCHJDT
"RTN","PRCHJMSG",64,0)
 K MSG1(2)
"RTN","PRCHJMSG",65,0)
 S MSG1(.3)="        "_PRCHJSP
"RTN","PRCHJMSG",66,0)
 S MSG1(.4)=" "
"RTN","PRCHJMSG",67,0)
 S MSG1(.5)="STATION "_OUT("DILIST","ID",1,.5)
"RTN","PRCHJMSG",68,0)
 I $G(OUT("DILIST","ID",1,448))'="" S MSG1(.5)=MSG1(.5)_" SUBSTATION "_OUT("DILIST","ID",1,448)
"RTN","PRCHJMSG",69,0)
 I PRCHJTY=1 S XMY(OUT("DILIST","ID",1,39))="",XMSUB="MESSAGE REJECTION FOR 2237 "_PRCHJ22,MSG1(.6)="IFCAP Date/Time received eCMS Rejection of 2237 "_PRCHJDT K MSG1(4)
"RTN","PRCHJMSG",70,0)
 I PRCHJTY=2 D
"RTN","PRCHJMSG",71,0)
 .F J=39,40,42 S XMY(OUT("DILIST","ID",1,J))=""
"RTN","PRCHJMSG",72,0)
 .S XMSUB="2237 CANCEL FROM eCMS FOR 2237 "_PRCHJ22
"RTN","PRCHJMSG",73,0)
 .S MSG1(.6)="eCMS Date/Time Canceled "_PRCHJDT
"RTN","PRCHJMSG",74,0)
 I PRCHJTY=3 D
"RTN","PRCHJMSG",75,0)
 .F J=39,40 S XMY(OUT("DILIST","ID",1,J))=""
"RTN","PRCHJMSG",76,0)
 .S XMSUB="2237 RETURNED TO ACCOUNTABLE OFFICER "_PRCHJ22
"RTN","PRCHJMSG",77,0)
 .S MSG1(.6)="eCMS Date/Time Returned to AO "_PRCHJDT
"RTN","PRCHJMSG",78,0)
 I PRCHJTY=4 D
"RTN","PRCHJMSG",79,0)
 .F J=39,40,42 S XMY(OUT("DILIST","ID",1,J))=""
"RTN","PRCHJMSG",80,0)
 .S XMSUB="2237 RETURNED TO CONTROL POINT FOR "_PRCHJ22
"RTN","PRCHJMSG",81,0)
 .S MSG1(.6)="eCMS Date/Time Returned to CP "_PRCHJDT
"RTN","PRCHJMSG",82,0)
 I PRCHJTY=5 D
"RTN","PRCHJMSG",83,0)
 .F J=39 S XMY(OUT("DILIST","ID",1,J))=""
"RTN","PRCHJMSG",84,0)
 .S XMSUB="TRANSMISSION FAILURE FOR 2237 "_PRCHJ22
"RTN","PRCHJMSG",85,0)
 .S MSG1(.6)="2237 Transmission to eCMS failed "_PRCHJDT
"RTN","PRCHJMSG",86,0)
 S XMDUZ="IFCAP/eCMS INTERFACE"
"RTN","PRCHJMSG",87,0)
 D ^XMD
"RTN","PRCHJMSG",88,0)
 Q
"RTN","PRCHJR01")
0^3^B143518446^n/a
"RTN","PRCHJR01",1,0)
PRCHJR01 ;OI&T/LKG - PROCESS 2237 RETURN OR CANCEL FROM ECMS ;9/14/12  17:29
"RTN","PRCHJR01",2,0)
 ;;5.1;IFCAP;**167**;Oct 20, 2000;Build 17
"RTN","PRCHJR01",3,0)
 ;Per VHA Directive 2004-38, this routine should not be modified.
"RTN","PRCHJR01",4,0)
PARSE ;This module contains logic to parse the incoming OMN^O07 HL7 message
"RTN","PRCHJR01",5,0)
 N PRCHJMSG,PRCHJHDR,PRCHJSEG,PRCHJIND,PRCHJMID,PRCHJSTN,PRCHJTD,PRCHJVAL,PRCVALID,PRCHJMDT,PRCHJNOW,PRCHJCTR,PRCHJERR
"RTN","PRCHJR01",6,0)
 ; HLMSGIEN is an HLO variable that will be defined when PARSE^PRCHJR01 is invoked.
"RTN","PRCHJR01",7,0)
 I '$$STARTMSG^HLOPRS(.PRCHJMSG,HLMSGIEN,.PRCHJHDR) Q
"RTN","PRCHJR01",8,0)
 I PRCHJMSG("BATCH") Q
"RTN","PRCHJR01",9,0)
 I PRCHJHDR("MESSAGE TYPE")'="OMN"!(PRCHJHDR("EVENT")'="O07") Q
"RTN","PRCHJR01",10,0)
 S PRCHJSTN=$G(PRCHJHDR("RECEIVING FACILITY",1))
"RTN","PRCHJR01",11,0)
 S PRCHJMID=PRCHJHDR("MESSAGE CONTROL ID"),PRCHJMDT=PRCHJHDR("DT/TM OF MESSAGE")
"RTN","PRCHJR01",12,0)
 S PRCHJIND="PRCHJR01"_PRCHJMID K ^XTMP(PRCHJIND) S PRCHJTD=$$DT^XLFDT,^XTMP(PRCHJIND,0)=$$FMADD^XLFDT(PRCHJTD,7)_"^"_PRCHJTD_"^2237 RETURN/CANCEL"
"RTN","PRCHJR01",13,0)
 F  Q:'$$NEXTSEG^HLOPRS(.PRCHJMSG,.PRCHJSEG)  D
"RTN","PRCHJR01",14,0)
 . I PRCHJSEG("SEGMENT TYPE")="ORC" D ORC(.PRCHJSEG)
"RTN","PRCHJR01",15,0)
 . I PRCHJSEG("SEGMENT TYPE")="RQD" D RQD(.PRCHJSEG)
"RTN","PRCHJR01",16,0)
 . ;If not ORC or RQD ignore
"RTN","PRCHJR01",17,0)
 ;
"RTN","PRCHJR01",18,0)
 D LOGOMN^PRCHJR03
"RTN","PRCHJR01",19,0)
 ;
"RTN","PRCHJR01",20,0)
 S PRCVALID=$$VALIDATE()
"RTN","PRCHJR01",21,0)
 ;
"RTN","PRCHJR01",22,0)
 D:PRCVALID EMAIL
"RTN","PRCHJR01",23,0)
 I PRCVALID D
"RTN","PRCHJR01",24,0)
 . N PRCIEN,PRC2237 S PRC2237=^XTMP(PRCHJIND,"2237 TXN"),PRCIEN=$$FIND1^DIC(410,"","X",PRC2237,"B","","PRCERR")
"RTN","PRCHJR01",25,0)
 . I ^XTMP(PRCHJIND,"ORDER CONTROL")="UA",^XTMP(PRCHJIND,"ORDER STATUS")="IP" D  Q
"RTN","PRCHJR01",26,0)
 . . S PRCX=$$RET2AO(PRCIEN) S:'PRCX PRCHJCTR=PRCHJCTR+1,PRCHJERR(PRCHJCTR)="13^Return to Accountable Officer is incomplete."
"RTN","PRCHJR01",27,0)
 . I ^XTMP(PRCHJIND,"ORDER CONTROL")="UA",^XTMP(PRCHJIND,"ORDER STATUS")="HD" D  Q
"RTN","PRCHJR01",28,0)
 . . S PRCX=$$RET2AO(PRCIEN) S:'PRCX PRCHJCTR=PRCHJCTR+1,PRCHJERR(PRCHJCTR)="13^Return to Accountable Officer is incomplete."
"RTN","PRCHJR01",29,0)
 . . S PRCX=$$RET2CP(PRCIEN) S:'PRCX PRCHJCTR=PRCHJCTR+1,PRCHJERR(PRCHJCTR)="14^Return to Control Point is incomplete."
"RTN","PRCHJR01",30,0)
 . I ^XTMP(PRCHJIND,"ORDER CONTROL")="CA" D  Q
"RTN","PRCHJR01",31,0)
 . . S PRCX=$$RET2AO(PRCIEN) S:'PRCX PRCHJCTR=PRCHJCTR+1,PRCHJERR(PRCHJCTR)="13^Return to Accountable Officer is incomplete."
"RTN","PRCHJR01",32,0)
 . . S PRCX=$$RET2CP(PRCIEN) S:'PRCX PRCHJCTR=PRCHJCTR+1,PRCHJERR(PRCHJCTR)="14^Return to Control Point is incomplete."
"RTN","PRCHJR01",33,0)
 . . S PRCX=$$CANCEL(PRCIEN) S:'PRCX PRCHJCTR=PRCHJCTR+1,PRCHJERR(PRCHJCTR)="15^Cancelation of 2237 is incomplete."
"RTN","PRCHJR01",34,0)
 ;
"RTN","PRCHJR01",35,0)
 I PRCHJHDR("APP ACK TYPE")="AL" D BUILDACK
"RTN","PRCHJR01",36,0)
 Q
"RTN","PRCHJR01",37,0)
 ;
"RTN","PRCHJR01",38,0)
EMAIL ;Send message to users attached to 2237 being returned/canceled
"RTN","PRCHJR01",39,0)
 N PRCHJM1,PRCHJM2
"RTN","PRCHJR01",40,0)
 S PRCHJM1(1)=^XTMP(PRCHJIND,"2237 TXN")
"RTN","PRCHJR01",41,0)
 S PRCHJM1(2)=$S(^XTMP(PRCHJIND,"ORDER CONTROL")="CA":2,^XTMP(PRCHJIND,"ORDER STATUS")="IP":3,^XTMP(PRCHJIND,"ORDER STATUS")="HD":4,1:"")
"RTN","PRCHJR01",42,0)
 S PRCHJM1(3)=^XTMP(PRCHJIND,"ACTION CREATED DATE")
"RTN","PRCHJR01",43,0)
 S PRCHJM1(4)=^XTMP(PRCHJIND,"USER","FIRSTNAME")_$S(^XTMP(PRCHJIND,"USER","MIDDLENAME")'="":(" "_^("MIDDLENAME")),1:"")_" "_^XTMP(PRCHJIND,"USER","LASTNAME")
"RTN","PRCHJR01",44,0)
 S PRCHJM1(5)=^XTMP(PRCHJIND,"EMAIL"),PRCHJM1(6)=^XTMP(PRCHJIND,"PHONE")
"RTN","PRCHJR01",45,0)
 S PRCHJM2(1)=^XTMP(PRCHJIND,"RETURN REASON"),PRCHJM2(2)=^XTMP(PRCHJIND,"RETURN COMMENT")
"RTN","PRCHJR01",46,0)
 D PHMSG^PRCHJMSG(.PRCHJM1,.PRCHJM2)
"RTN","PRCHJR01",47,0)
 Q
"RTN","PRCHJR01",48,0)
ORC(PRCHJSEG) ;Parse ORC segment
"RTN","PRCHJR01",49,0)
 S ^XTMP(PRCHJIND,"ORDER CONTROL")=$$GET^HLOPRS(.PRCHJSEG,1)
"RTN","PRCHJR01",50,0)
 S ^XTMP(PRCHJIND,"2237 TXN")=$$GET^HLOPRS(.PRCHJSEG,2,1)
"RTN","PRCHJR01",51,0)
 S ^XTMP(PRCHJIND,"STATION")=$$GET^HLOPRS(.PRCHJSEG,2,2)
"RTN","PRCHJR01",52,0)
 S ^XTMP(PRCHJIND,"SUBSTATION")=$$GET^HLOPRS(.PRCHJSEG,2,3)
"RTN","PRCHJR01",53,0)
 S ^XTMP(PRCHJIND,"ECMS ACTIONUID")=$$GET^HLOPRS(.PRCHJSEG,3,1)
"RTN","PRCHJR01",54,0)
 S ^XTMP(PRCHJIND,"ORDER STATUS")=$$GET^HLOPRS(.PRCHJSEG,5)
"RTN","PRCHJR01",55,0)
 D GETTS^HLOPRS2(.PRCHJSEG,.PRCHJVAL,9,1) S ^XTMP(PRCHJIND,"ACTION CREATED DATE")=PRCHJVAL
"RTN","PRCHJR01",56,0)
 S ^XTMP(PRCHJIND,"USER","LASTNAME")=$$GET^HLOPRS(.PRCHJSEG,10,2,1)
"RTN","PRCHJR01",57,0)
 S ^XTMP(PRCHJIND,"USER","FIRSTNAME")=$$GET^HLOPRS(.PRCHJSEG,10,3)
"RTN","PRCHJR01",58,0)
 S ^XTMP(PRCHJIND,"USER","MIDDLENAME")=$$GET^HLOPRS(.PRCHJSEG,10,4)
"RTN","PRCHJR01",59,0)
 S ^XTMP(PRCHJIND,"USER","SUFFIX")=$$GET^HLOPRS(.PRCHJSEG,10,5)
"RTN","PRCHJR01",60,0)
 S ^XTMP(PRCHJIND,"PHONE")=$$GET^HLOPRS(.PRCHJSEG,14,1)
"RTN","PRCHJR01",61,0)
 S ^XTMP(PRCHJIND,"EMAIL")=$$GET^HLOPRS(.PRCHJSEG,14,4)
"RTN","PRCHJR01",62,0)
 S ^XTMP(PRCHJIND,"RETURN REASON")=$$GET^HLOPRS(.PRCHJSEG,16,2)
"RTN","PRCHJR01",63,0)
 S ^XTMP(PRCHJIND,"RETURN COMMENT")=$$GET^HLOPRS(.PRCHJSEG,16,5)
"RTN","PRCHJR01",64,0)
 Q
"RTN","PRCHJR01",65,0)
RQD(PRCHJSEG) ;Process RQD segment
"RTN","PRCHJR01",66,0)
 S ^XTMP(PRCHJIND,"REQUISITION LINE NBR")=$$GET^HLOPRS(.PRCHJSEG,1)
"RTN","PRCHJR01",67,0)
 Q
"RTN","PRCHJR01",68,0)
RET2AO(DA) ;This module contains logic to remove the AO signature and change status to Pending Accountable Officer Sig.
"RTN","PRCHJR01",69,0)
 N PRCDATA,PRCERR,PRCHPCR,PRCHJDA,PRCERROR S PRCHPCR=1,PRCHJDA=DA_",",PRCERROR=0
"RTN","PRCHJR01",70,0)
 S PRCDATA(443,PRCHJDA,1.5)=60 D FILE^DIE("K","PRCDATA","PRCERR") S:$D(PRCERR) PRCERROR=1 K PRCDATA,PRCERR
"RTN","PRCHJR01",71,0)
 S PRCDATA(443,PRCHJDA,2)="@",PRCDATA(443,PRCHJDA,3)="@",PRCDATA(443,PRCHJDA,4)="@"
"RTN","PRCHJR01",72,0)
 D FILE^DIE("K","PRCDATA","PRCERR") S:$D(PRCERR) PRCERROR=1 K PRCDATA,PRCERR
"RTN","PRCHJR01",73,0)
 S PRCDATA(410,PRCHJDA,39)="@",PRCDATA(410,PRCHJDA,69)="@"
"RTN","PRCHJR01",74,0)
 D FILE^DIE("EK","PRCDATA","PRCERR") S:$D(PRCERR) PRCERROR=1 K PRCDATA,PRCERR
"RTN","PRCHJR01",75,0)
 S PRCDATA(1)=^XTMP(PRCHJIND,"RETURN REASON"),PRCDATA(2)=^XTMP(PRCHJIND,"RETURN COMMENT")
"RTN","PRCHJR01",76,0)
 D WP^DIE(410,PRCHJDA,61,"K","PRCDATA","PRCERR")
"RTN","PRCHJR01",77,0)
 S:$D(PRCERR) PRCERROR=1 K PRCDATA,PRCERR
"RTN","PRCHJR01",78,0)
 I ^XTMP(PRCHJIND,"ORDER STATUS")="IP" S:$$XECMSIDS^PRCHJR03($P(PRCHJDA,",")) PRCERROR=1
"RTN","PRCHJR01",79,0)
 Q $S(PRCERROR:0,1:1)
"RTN","PRCHJR01",80,0)
RET2CP(DA) ;This module contains logic to remove the Control Point Official's signature, de-commit the funds and adjust due-ins as necessary. 
"RTN","PRCHJR01",81,0)
 N PRCHDA,PRCDATA,PRCERR,PRCHJDA,PRCERROR,PRCHJCPR,X S PRCHDA=DA,PRCERROR=0
"RTN","PRCHJR01",82,0)
 S X=$P(^PRCS(410,DA,4),"^",8) D TRANK^PRCSES
"RTN","PRCHJR01",83,0)
 S PRCHJDA=DA_",",PRCDATA(410,PRCHJDA,44)="@",PRCDATA(410,PRCHJDA,44.5)="@",PRCDATA(410,PRCHJDA,44.6)="@"
"RTN","PRCHJR01",84,0)
 D FILE^DIE("K","PRCDATA","PRCERR") S:$D(PRCERR) PRCERROR=1 K PRCDATA,PRCERR
"RTN","PRCHJR01",85,0)
 S PRCDATA(410,PRCHJDA,56)=77 D FILE^DIE("K","PRCDATA","PRCERR") S:$D(PRCERR) PRCERROR=1 K PRCDATA,PRCERR
"RTN","PRCHJR01",86,0)
 S PRCHJCPR=1,PRCDATA(443,PRCHJDA,1.5)=77 D FILE^DIE("K","PRCDATA","PRCERR") S:$D(PRCERR) PRCERROR=1 K PRCDATA,PRCERR
"RTN","PRCHJR01",87,0)
 S PRCDATA(1)=^XTMP(PRCHJIND,"RETURN REASON"),PRCDATA(2)=^XTMP(PRCHJIND,"RETURN COMMENT")
"RTN","PRCHJR01",88,0)
 D WP^DIE(410,PRCHJDA,61,"K","PRCDATA","PRCERR")
"RTN","PRCHJR01",89,0)
 S:$D(PRCERR) PRCERROR=1 K PRCDATA,PRCERR
"RTN","PRCHJR01",90,0)
 S DA=PRCHDA D REMOVE^PRCSC1(DA),REMOVE^PRCSC3(DA)
"RTN","PRCHJR01",91,0)
 S DA=PRCHDA D ADJDUEIN(DA) ;D EN3^PRCPWI
"RTN","PRCHJR01",92,0)
 Q $S(PRCERROR:0,1:1)
"RTN","PRCHJR01",93,0)
 ;
"RTN","PRCHJR01",94,0)
CANCEL(DA) ;This module contains logic to cancel the 2237
"RTN","PRCHJR01",95,0)
 N PRCDATA,PRCERR,PRCHJDA,PRCERROR,I,N,X,Y S PRCHJDA=DA_",",PRCERROR=0
"RTN","PRCHJR01",96,0)
 S PRCDATA(410,PRCHJDA,55)="@",PRCDATA(410,PRCHJDA,1)="CA"
"RTN","PRCHJR01",97,0)
 D FILE^DIE("EK","PRCDATA","PRCERR") S:$D(PRCERR) PRCERROR=1 K PRCDATA,PRCERR
"RTN","PRCHJR01",98,0)
 S:$$XECMSIDS^PRCHJR03(DA) PRCERROR=1
"RTN","PRCHJR01",99,0)
 S $P(^PRCS(410,DA,5),U)=0,$P(^(6),U)=0,$P(^(4),U)=0,$P(^(4),U,3)=0,$P(^(4),U,6)=0,$P(^(4),U,8)=0
"RTN","PRCHJR01",100,0)
 I $D(^PRCS(410,DA,12,0)) S N=0 F I=0:0 S N=$O(^PRCS(410,DA,12,N)) Q:N'>0  S X=$P(^(N,0),"^",2) I X S DA(1)=DA,DA=N D TRANK^PRCSEZZ S DA=DA(1)
"RTN","PRCHJR01",101,0)
 K DA(1)
"RTN","PRCHJR01",102,0)
 D ERS410^PRC0G(DA_"^C")
"RTN","PRCHJR01",103,0)
 S PRCDATA(1)=^XTMP(PRCHJIND,"RETURN REASON") D WP^DIE(410,PRCHJDA,61,"K","PRCDATA","PRCERR")
"RTN","PRCHJR01",104,0)
 S:$D(PRCERR) PRCERROR=1 K PRCDATA,PRCERR
"RTN","PRCHJR01",105,0)
 S PRCDATA(1)=^XTMP(PRCHJIND,"RETURN COMMENT")
"RTN","PRCHJR01",106,0)
 S PRCDATA(2)="eCMS User Who Canceled 2237: "
"RTN","PRCHJR01",107,0)
 S PRCDATA(3)=^XTMP(PRCHJIND,"USER","LASTNAME")_","_^XTMP(PRCHJIND,"USER","FIRSTNAME")
"RTN","PRCHJR01",108,0)
 S:^XTMP(PRCHJIND,"USER","MIDDLENAME")'="" PRCDATA(3)=PRCDATA(3)_" "_^("MIDDLENAME")
"RTN","PRCHJR01",109,0)
 S PRCDATA(3)=$$UP^XLFSTR(PRCDATA(3))
"RTN","PRCHJR01",110,0)
 D WP^DIE(410,PRCHJDA,60,"AK","PRCDATA","PRCERR") S:$D(PRCERR) PRCERROR=1 K PRCDATA,PRCERR
"RTN","PRCHJR01",111,0)
 ;If a DynaMed txn, update audit file and send message to DynaMed
"RTN","PRCHJR01",112,0)
 D EN^PRCVTCA(DA)
"RTN","PRCHJR01",113,0)
 I $D(^PRC(443,DA,0)) S DIK="^PRC(443," D ^DIK K DIK
"RTN","PRCHJR01",114,0)
 Q $S(PRCERROR:0,1:1)
"RTN","PRCHJR01",115,0)
BUILDACK ;This module contains logic to build the ORN^O08 application acknowledgment
"RTN","PRCHJR01",116,0)
 N PRCHJPAR,PRCHJACK,PRCERR
"RTN","PRCHJR01",117,0)
 S PRCHJPAR("ACK CODE")=$S('$D(PRCHJERR):"AA",1:"AR")
"RTN","PRCHJR01",118,0)
 S PRCHJPAR("ACCEPT ACK TYPE")="AL",PRCHJPAR("MESSAGE TYPE")="ORN",PRCHJPAR("EVENT")="O08"
"RTN","PRCHJR01",119,0)
 S PRCHJPAR("FIELD SEPARATOR")="|",PRCHJPAR("ENCODING CHARACTERS")="^~\&"
"RTN","PRCHJR01",120,0)
 S PRCHJPAR("MESSAGE STRUCTURE CODE")="ORN_O08",PRCHJPAR("VERSION")=2.5
"RTN","PRCHJR01",121,0)
 I '$$ACK^HLOAPI2(.PRCHJMSG,.PRCHJPAR,.PRCHJACK,.PRCERR) Q
"RTN","PRCHJR01",122,0)
 I '$D(PRCHJERR) D
"RTN","PRCHJR01",123,0)
 . D SET^HLOAPI(.PRCSEG,"ORC",0),SET^HLOAPI(.PRCSEG,"XR",1)
"RTN","PRCHJR01",124,0)
 . D SET^HLOAPI(.PRCSEG,^XTMP(PRCHJIND,"2237 TXN"),2,1)
"RTN","PRCHJR01",125,0)
 . D SET^HLOAPI(.PRCSEG,^XTMP(PRCHJIND,"STATION"),2,2)
"RTN","PRCHJR01",126,0)
 . D SET^HLOAPI(.PRCSEG,^XTMP(PRCHJIND,"SUBSTATION"),2,3)
"RTN","PRCHJR01",127,0)
 . D SET^HLOAPI(.PRCSEG,^XTMP(PRCHJIND,"ECMS ACTIONUID"),3,1)
"RTN","PRCHJR01",128,0)
 . S PRCX=$$ADDSEG^HLOAPI(.PRCHJACK,.PRCSEG,.PRCERR,.PRCARR)
"RTN","PRCHJR01",129,0)
 . K PRCSEG D SET^HLOAPI(.PRCSEG,"RQD",0),SET^HLOAPI(.PRCSEG,9999,1)
"RTN","PRCHJR01",130,0)
 . S PRCX=$$ADDSEG^HLOAPI(.PRCHJACK,.PRCSEG,.PRCERR,.PRCARR)
"RTN","PRCHJR01",131,0)
 I $D(PRCHJERR) D
"RTN","PRCHJR01",132,0)
 . N PRCI S PRCI=0
"RTN","PRCHJR01",133,0)
 . F  S PRCI=$O(PRCHJERR(PRCI)) Q:PRCI=""  D
"RTN","PRCHJR01",134,0)
 . . N PRCX,PRCY,PRCE,PRCSEG,PRCERR,PRCARR
"RTN","PRCHJR01",135,0)
 . . S PRCX=PRCHJERR(PRCI),PRCE=$P(PRCX,U) D SET^HLOAPI(.PRCSEG,"ERR",0)
"RTN","PRCHJR01",136,0)
 . . S PRCY=$P($T(ERRTABLE+PRCE),";;",2,99)
"RTN","PRCHJR01",137,0)
 . . D SET^HLOAPI(.PRCSEG,$P(PRCY,U,2),2,1),SET^HLOAPI(.PRCSEG,1,2,2),SET^HLOAPI(.PRCSEG,$P(PRCY,U,3),2,3)
"RTN","PRCHJR01",138,0)
 . . D:$P(PRCY,U,4) SET^HLOAPI(.PRCSEG,$P(PRCY,U,4),2,5)
"RTN","PRCHJR01",139,0)
 . . D:$P(PRCY,U,5) SET^HLOAPI(.PRCSEG,$P(PRCY,U,5),2,6)
"RTN","PRCHJR01",140,0)
 . . D SET^HLOAPI(.PRCSEG,$P(PRCY,U,6),3,1),SET^HLOAPI(.PRCSEG,$P(PRCY,U,7),3,2),SET^HLOAPI(.PRCSEG,"HL70357",3,3)
"RTN","PRCHJR01",141,0)
 . . D SET^HLOAPI(.PRCSEG,$P(PRCY,U,8),4),SET^HLOAPI(.PRCSEG,$P(PRCY,U),5,1),SET^HLOAPI(.PRCSEG,$P(PRCY,U,9),5,2)
"RTN","PRCHJR01",142,0)
 . . D SET^HLOAPI(.PRCSEG,$P(PRCX,U,2),8)
"RTN","PRCHJR01",143,0)
 . . S PRCX=$$ADDSEG^HLOAPI(.PRCHJACK,.PRCSEG,.PRCERR,.PRCARR)
"RTN","PRCHJR01",144,0)
 K PRCERR
"RTN","PRCHJR01",145,0)
 I '$$SENDACK^HLOAPI2(.PRCHJACK,.PRCERR) S PRCHJCTR=PRCHJCTR+1,PRCHJERR(PRCHJCTR)="The sending of Application Acknowledgment to eCMS failed."
"RTN","PRCHJR01",146,0)
 S PRCHJNOW=$$NOW^XLFDT D LOGORN^PRCHJR03
"RTN","PRCHJR01",147,0)
 Q
"RTN","PRCHJR01",148,0)
VALIDATE() ;Validate the data and existence of the 2237 and return
"RTN","PRCHJR01",149,0)
 ; 1 if valid and 0 if there are errors
"RTN","PRCHJR01",150,0)
 N PRC2237,PRCIEN,PRCSIEN,PRCSTAT,PRCSTN
"RTN","PRCHJR01",151,0)
 S PRCHJCTR=0 K PRCHJERR
"RTN","PRCHJR01",152,0)
 I '$D(^XTMP(PRCHJIND,"ORDER CONTROL")) S PRCHJCTR=PRCHJCTR+1,PRCHJERR(PRCHJCTR)="19^HL7 message is malformed as there is no ORC segment." Q 0
"RTN","PRCHJR01",153,0)
 I ^XTMP(PRCHJIND,"USER","LASTNAME")=""!(^XTMP(PRCHJIND,"USER","FIRSTNAME")="") D
"RTN","PRCHJR01",154,0)
 . S PRCHJCTR=PRCHJCTR+1,PRCHJERR(PRCHJCTR)="1^eCMS User Name lacks first or last name."
"RTN","PRCHJR01",155,0)
 I ^XTMP(PRCHJIND,"2237 TXN")="" D
"RTN","PRCHJR01",156,0)
 . S PRCHJCTR=PRCHJCTR+1,PRCHJERR(PRCHJCTR)="11^2237 transaction number is not populated."
"RTN","PRCHJR01",157,0)
 I ^XTMP(PRCHJIND,"RETURN REASON")="" D
"RTN","PRCHJR01",158,0)
 . S PRCHJCTR=PRCHJCTR+1,PRCHJERR(PRCHJCTR)="2^Reason for Return is not populated."
"RTN","PRCHJR01",159,0)
 I ^XTMP(PRCHJIND,"RETURN COMMENT")="" D
"RTN","PRCHJR01",160,0)
 . S PRCHJCTR=PRCHJCTR+1,PRCHJERR(PRCHJCTR)="3^Comments is not populated."
"RTN","PRCHJR01",161,0)
 I ";CA;UA;"'[(";"_^XTMP(PRCHJIND,"ORDER CONTROL")_";") D
"RTN","PRCHJR01",162,0)
 . S PRCHJCTR=PRCHJCTR+1,PRCHJERR(PRCHJCTR)="8^Order Control field contains '"_^XTMP(PRCHJIND,"ORDER CONTROL")_"' which is invalid."
"RTN","PRCHJR01",163,0)
 I ";CA;HD;IP;"'[(";"_^XTMP(PRCHJIND,"ORDER STATUS")_";") D
"RTN","PRCHJR01",164,0)
 . S PRCHJCTR=PRCHJCTR+1,PRCHJERR(PRCHJCTR)="9^Order Status field contains '"_^XTMP(PRCHJIND,"ORDER STATUS")_"' which is invalid."
"RTN","PRCHJR01",165,0)
 S PRC2237=$G(^XTMP(PRCHJIND,"2237 TXN")) S PRCIEN=$$FIND1^DIC(410,"","X",PRC2237,"B","","PRCERR")
"RTN","PRCHJR01",166,0)
 I PRCIEN'>0 S PRCHJCTR=PRCHJCTR+1,PRCHJERR(PRCHJCTR)="6^"_PRC2237_" does not exist."
"RTN","PRCHJR01",167,0)
 I PRCIEN D
"RTN","PRCHJR01",168,0)
 . K PRCERR
"RTN","PRCHJR01",169,0)
 . S PRCSTAT=$$GET1^DIQ(410,PRCIEN_",",54,"","","PRCERR") K PRCERR
"RTN","PRCHJR01",170,0)
 . I PRCSTAT="",$$GET1^DIQ(410,PRCIEN_",",1,"","","PRCERR")="CANCELLED" S PRCSTAT="Cancelled"
"RTN","PRCHJR01",171,0)
 . K PRCERR
"RTN","PRCHJR01",172,0)
 . I PRCSTAT'="Sent to eCMS (P&C)" S PRCHJCTR=PRCHJCTR+1,PRCHJERR(PRCHJCTR)="7^2237 status is "_PRCSTAT_" not Sent to eCMS (P&C)."
"RTN","PRCHJR01",173,0)
 . K PRCERR N PRCACTID S PRCACTID=$$GET1^DIQ(410,PRCIEN_",",103,"","","PRCERR") K PRCERR
"RTN","PRCHJR01",174,0)
 . I PRCACTID'=^XTMP(PRCHJIND,"ECMS ACTIONUID") D
"RTN","PRCHJR01",175,0)
 . . S PRCHJCTR=PRCHJCTR+1,PRCHJERR(PRCHJCTR)="18^eCMS ActionUID on 2237 is "_$S(PRCACTID'="":PRCACTID,1:"null")_" but "_$S(^XTMP(PRCHJIND,"ECMS ACTIONUID")'="":^XTMP(PRCHJIND,"ECMS ACTIONUID"),1:"null")_" in HL7 message."
"RTN","PRCHJR01",176,0)
 S PRCSTN=$G(^XTMP(PRCHJIND,"STATION")) S PRCSIEN=$$FIND1^DIC(411,"","X",PRCSTN,"B","","PRCERR") K PRCERR
"RTN","PRCHJR01",177,0)
 I PRCSIEN'>0 S PRCHJCTR=PRCHJCTR+1,PRCHJERR(PRCHJCTR)="10^Station "_PRCSTN_" is not on this VistA instance."
"RTN","PRCHJR01",178,0)
 I ^XTMP(PRCHJIND,"ACTION CREATED DATE")="" D
"RTN","PRCHJR01",179,0)
 . S PRCHJCTR=PRCHJCTR+1,PRCHJERR(PRCHJCTR)="16^Date/Time of action is not populated."
"RTN","PRCHJR01",180,0)
 I ^XTMP(PRCHJIND,"ECMS ACTIONUID")="" D
"RTN","PRCHJR01",181,0)
 . S PRCHJCTR=PRCHJCTR+1,PRCHJERR(PRCHJCTR)="17^eCMS internal PR identifier ActionUID is missing."
"RTN","PRCHJR01",182,0)
 I $G(^XTMP(PRCHJIND,"REQUISITION LINE NBR"))'=9999 S PRCHJCTR=PRCHJCTR+1,PRCHJERR(PRCHJCTR)="12^RQD segment is not correctly populated."
"RTN","PRCHJR01",183,0)
 I ^XTMP(PRCHJIND,"ORDER CONTROL")="UA",";HD;IP;"'[(";"_^XTMP(PRCHJIND,"ORDER STATUS")_";") D
"RTN","PRCHJR01",184,0)
 . S PRCHJCTR=PRCHJCTR+1,PRCHJERR(PRCHJCTR)="20^Order Status "_^XTMP(PRCHJIND,"ORDER STATUS")_" is inappropriate for Order Control UA."
"RTN","PRCHJR01",185,0)
 Q $S(PRCHJCTR:0,1:1)
"RTN","PRCHJR01",186,0)
 ;
"RTN","PRCHJR01",187,0)
 ;
"RTN","PRCHJR01",188,0)
ADJDUEIN(PRCDA) ;Decrement due-ins
"RTN","PRCHJR01",189,0)
 N PRCHJINV,PRCHJITM,PRCHJIMF,PRCHJQTY
"RTN","PRCHJR01",190,0)
 S PRCHJINV=$P($G(^PRCS(410,PRCDA,0)),U,6)
"RTN","PRCHJR01",191,0)
 Q:PRCHJINV'>0  Q:'$D(^PRCP(445,PRCHJINV,0))
"RTN","PRCHJR01",192,0)
 S PRCHJITM=0
"RTN","PRCHJR01",193,0)
 F  S PRCHJITM=$O(^PRCS(410,PRCDA,"IT",PRCHJITM)) Q:+PRCHJITM'=PRCHJITM  D
"RTN","PRCHJR01",194,0)
 . S PRCHJIMF=$P($G(^PRCS(410,PRCDA,"IT",PRCHJITM,0)),U,5),PRCHJQTY=$P($G(^(0)),U,2)
"RTN","PRCHJR01",195,0)
 . Q:PRCHJIMF'>0  Q:PRCHJQTY'>0
"RTN","PRCHJR01",196,0)
 . D KILLTRAN^PRCPUTRA(PRCHJINV,PRCHJIMF,PRCDA)
"RTN","PRCHJR01",197,0)
 Q
"RTN","PRCHJR01",198,0)
 ;
"RTN","PRCHJR01",199,0)
ERRTABLE ;Table of Error data
"RTN","PRCHJR01",200,0)
 ;;1^ORC^10^^^101^Required field missing^E^eCMS user name not populated
"RTN","PRCHJR01",201,0)
 ;;2^ORC^16^2^^101^Required field missing^E^Reason for Return not populated
"RTN","PRCHJR01",202,0)
 ;;3^ORC^16^5^^101^Required field missing^E^Comments not populated
"RTN","PRCHJR01",203,0)
 ;;4^ORC^14^4^^101^Required field missing^W^User's e-mail not populated
"RTN","PRCHJR01",204,0)
 ;;5^ORC^14^1^^101^Required field missing^W^User's telephone# not populated
"RTN","PRCHJR01",205,0)
 ;;6^ORC^2^1^^204^Unknown key identifier^E^2237 transaction not found
"RTN","PRCHJR01",206,0)
 ;;7^ORC^2^1^^207^Application internal error^E^Status not Sent to eCMS (P&C)
"RTN","PRCHJR01",207,0)
 ;;8^ORC^1^^^103^Table value not found^E^Order Control value is wrong
"RTN","PRCHJR01",208,0)
 ;;9^ORC^5^^^103^Table value not found^E^Order Status value is wrong
"RTN","PRCHJR01",209,0)
 ;;10^ORC^2^2^^103^Table value not found^E^Site not on VistA instance
"RTN","PRCHJR01",210,0)
 ;;11^ORC^2^1^^101^Required field missing^E^2237 txn# not populated
"RTN","PRCHJR01",211,0)
 ;;12^RQD^1^^^207^Application internal error^E^Requisition line# wrong
"RTN","PRCHJR01",212,0)
 ;;13^ORC^1^^^207^Application internal error^E^Return to AO incomplete
"RTN","PRCHJR01",213,0)
 ;;14^ORC^1^^^207^Application internal error^E^Return to CP incomplete
"RTN","PRCHJR01",214,0)
 ;;15^ORC^1^^^207^Application internal error^E^2237 cancelation incomplete
"RTN","PRCHJR01",215,0)
 ;;16^ORC^9^1^^101^Required field missing^E^Action Date/Time missing
"RTN","PRCHJR01",216,0)
 ;;17^ORC^3^1^^101^Required field missing^E^eCMS ActionUID missing
"RTN","PRCHJR01",217,0)
 ;;18^ORC^3^1^^207^Application internal error^E^eCMS ActionUID mismatch
"RTN","PRCHJR01",218,0)
 ;;19^ORC^1^^^100^Segment sequence error^E^ORC segment missing
"RTN","PRCHJR01",219,0)
 ;;20^ORC^5^^^207^Application internal error^E^Mismatch Order Control/Status
"RTN","PRCHJR02")
0^4^B119665258^n/a
"RTN","PRCHJR02",1,0)
PRCHJR02 ;OI&T/KCL - IFCAP/ECMS INTERFACE PROCESS ACK FOR 2237 SEND;6/12/12
"RTN","PRCHJR02",2,0)
 ;;5.1;IFCAP;**167**;Oct 20, 2000;Build 17
"RTN","PRCHJR02",3,0)
 ;Per VHA Directive 2004-38, this routine should not be modified.
"RTN","PRCHJR02",4,0)
 ;
"RTN","PRCHJR02",5,0)
APPACK ;Process ACK (ORN^O08) msg
"RTN","PRCHJR02",6,0)
 ;This tag^routine is called from an entry in the HLO Application
"RTN","PRCHJR02",7,0)
 ;Registry (#779.2) file. It's responsible for receiving and
"RTN","PRCHJR02",8,0)
 ;processing application acknowledgment (ORN^O08) messages
"RTN","PRCHJR02",9,0)
 ;returned from eCMS. The application acknowledgment is being
"RTN","PRCHJR02",10,0)
 ;returned in response to a OMN^O07 message that was sent from
"RTN","PRCHJR02",11,0)
 ;IFCAP to eCMS containing a 2237 transaction.
"RTN","PRCHJR02",12,0)
 ;
"RTN","PRCHJR02",13,0)
 ; Input: At the point this tag is called, the HLO variable
"RTN","PRCHJR02",14,0)
 ;        HLMSGIEN is set to the IEN of the message in HLO
"RTN","PRCHJR02",15,0)
 ;        MESSAGES (#778) file.
"RTN","PRCHJR02",16,0)
 ;
"RTN","PRCHJR02",17,0)
 N PRCDUPE  ;duplicate msg error flag
"RTN","PRCHJR02",18,0)
 N PRCER    ;error returned by $$LOG^PRCHJTA
"RTN","PRCHJR02",19,0)
 N PRCERR   ;error returned by FIND1^DIC
"RTN","PRCHJR02",20,0)
 N PRCEVNT  ;input event array for $$LOG^PRCHJTA
"RTN","PRCHJR02",21,0)
 N PRCHDR   ;fields from the MSH segment, pass by ref
"RTN","PRCHJR02",22,0)
 N PRCI     ;subscript for looping thru work global
"RTN","PRCHJR02",23,0)
 N PRCJ     ;subscript for PRCEVNT("ERROR") array
"RTN","PRCHJR02",24,0)
 N PRCIDX1  ;index for potential multiple ERR segs
"RTN","PRCHJR02",25,0)
 N PRCIDX2  ;index for potential multiple ORC segs
"RTN","PRCHJR02",26,0)
 N PRCIDX3  ;index for potential multiple RQD segs
"RTN","PRCHJR02",27,0)
 N PRCMSG   ;administrative information about the msg
"RTN","PRCHJR02",28,0)
 N PRCMSGID ;msg control id (MSH-10)
"RTN","PRCHJR02",29,0)
 N PRCTRAN  ;2237 transaction #
"RTN","PRCHJR02",30,0)
 N PRCTXT   ;subscript for lines of text returned by ^DIWP
"RTN","PRCHJR02",31,0)
 N PRCWORK  ;work global ^XTMP that will contain parsed data fields
"RTN","PRCHJR02",32,0)
 N PRC410R  ;ien of record in (#410) file
"RTN","PRCHJR02",33,0)
 ;
"RTN","PRCHJR02",34,0)
 ;start parsing the ack msg
"RTN","PRCHJR02",35,0)
 I '$$STARTMSG^HLOPRS(.PRCMSG,HLMSGIEN,.PRCHDR) Q
"RTN","PRCHJR02",36,0)
 ;
"RTN","PRCHJR02",37,0)
 ;quit if not the expected msg
"RTN","PRCHJR02",38,0)
 I PRCMSG("BATCH") Q
"RTN","PRCHJR02",39,0)
 I PRCMSG("MESSAGE TYPE")'="ORN" Q
"RTN","PRCHJR02",40,0)
 I PRCMSG("EVENT")'="O08" Q
"RTN","PRCHJR02",41,0)
 ;
"RTN","PRCHJR02",42,0)
 ;get any MSH segment fields that are needed
"RTN","PRCHJR02",43,0)
 S PRCMSGID=$G(PRCHDR("MESSAGE CONTROL ID")) ;MSH-10
"RTN","PRCHJR02",44,0)
 ;
"RTN","PRCHJR02",45,0)
 ;initialize ^XTMP work global
"RTN","PRCHJR02",46,0)
 S PRCWORK="PRCHJRACK"_PRCMSGID
"RTN","PRCHJR02",47,0)
 K ^XTMP(PRCWORK)
"RTN","PRCHJR02",48,0)
 S ^XTMP(PRCWORK,0)=$$FMADD^XLFDT(DT,3)_U_DT_U_"IFCAP - Process eCMS ACK (ORN^O08) message for 2237 Send"
"RTN","PRCHJR02",49,0)
 ;
"RTN","PRCHJR02",50,0)
 ;step thru the msg segments and parse them
"RTN","PRCHJR02",51,0)
 S (PRCIDX1,PRCIDX2,PRCIDX3)=0
"RTN","PRCHJR02",52,0)
 F  Q:'$$NEXTSEG^HLOPRS(.PRCMSG,.PRCSEG)  D
"RTN","PRCHJR02",53,0)
 . I PRCSEG("SEGMENT TYPE")="MSA" D MSA(.PRCSEG,PRCWORK)
"RTN","PRCHJR02",54,0)
 . I PRCSEG("SEGMENT TYPE")="ERR" D ERR(.PRCSEG,PRCWORK,.PRCIDX1)
"RTN","PRCHJR02",55,0)
 . I PRCSEG("SEGMENT TYPE")="ORC" D ORC(.PRCSEG,PRCWORK,.PRCIDX2)
"RTN","PRCHJR02",56,0)
 . I PRCSEG("SEGMENT TYPE")="RQD" D RQD(.PRCSEG,PRCWORK,.PRCIDX3)
"RTN","PRCHJR02",57,0)
 ;
"RTN","PRCHJR02",58,0)
 ;now process the parsed data, quit if nothing in work global to process
"RTN","PRCHJR02",59,0)
 I '$D(^XTMP(PRCWORK,"MSA")) Q
"RTN","PRCHJR02",60,0)
 ;
"RTN","PRCHJR02",61,0)
 S PRCTRAN=$G(^XTMP(PRCWORK,"MSA","2237 TXN"))
"RTN","PRCHJR02",62,0)
 ;
"RTN","PRCHJR02",63,0)
 ;lookup record in (#410) file using 2237 transaction #
"RTN","PRCHJR02",64,0)
 S PRC410R=$$FIND1^DIC(410,"","X",$G(PRCTRAN),"","","PRCERR")
"RTN","PRCHJR02",65,0)
 Q:('PRC410R)!($D(PRCERR))
"RTN","PRCHJR02",66,0)
 ;
"RTN","PRCHJR02",67,0)
 ;if Application Accept DO block
"RTN","PRCHJR02",68,0)
 I $G(^XTMP(PRCWORK,"MSA","ACK CODE"))="AA" D
"RTN","PRCHJR02",69,0)
 . ;
"RTN","PRCHJR02",70,0)
 . ;store ECMS ACTIONUID in (#410) file
"RTN","PRCHJR02",71,0)
 . I '$$STOAUID(PRC410R,$G(^XTMP(PRCWORK,"MSA","ECMS ACTIONUID"))) Q
"RTN","PRCHJR02",72,0)
 . ;
"RTN","PRCHJR02",73,0)
 . ;store ECMS ITEMUID for each item on the 2237
"RTN","PRCHJR02",74,0)
 . S PRCI=0
"RTN","PRCHJR02",75,0)
 . F  S PRCI=$O(^XTMP(PRCWORK,"RQD",PRCI)) Q:PRCI=""  D
"RTN","PRCHJR02",76,0)
 . . I $G(^XTMP(PRCWORK,"ORC",PRCI,"ORDER CONTROL"))="UA" Q
"RTN","PRCHJR02",77,0)
 . . I '$$STOITID(PRC410R,$G(^XTMP(PRCWORK,"RQD",PRCI,"LINE ITEM")),$G(^XTMP(PRCWORK,"RQD",PRCI,"ECMS ITEMUID"))) Q
"RTN","PRCHJR02",78,0)
 . ;
"RTN","PRCHJR02",79,0)
 . ;log AA ack in IFCAP/ECMS TRANSACTION (#414.06) file
"RTN","PRCHJR02",80,0)
 . S PRCEVNT("MSGID")=$G(PRCMSGID)
"RTN","PRCHJR02",81,0)
 . S PRCEVNT("IEN410")=PRC410R
"RTN","PRCHJR02",82,0)
 . D LOG^PRCHJTA($G(PRCTRAN),$G(^XTMP(PRCWORK,"MSA","ECMS ACTIONUID")),2,.PRCEVNT,.PRCER)
"RTN","PRCHJR02",83,0)
 ;
"RTN","PRCHJR02",84,0)
 ;
"RTN","PRCHJR02",85,0)
 ;if Application Reject or Error DO block
"RTN","PRCHJR02",86,0)
 I ($G(^XTMP(PRCWORK,"MSA","ACK CODE"))="AR")!($G(^XTMP(PRCWORK,"MSA","ACK CODE"))="AE") D
"RTN","PRCHJR02",87,0)
 . ;
"RTN","PRCHJR02",88,0)
 . ;setup PRCEVNT array for call to LOG^PRCHJTA
"RTN","PRCHJR02",89,0)
 . S PRCEVNT("MSGID")=$G(PRCMSGID)
"RTN","PRCHJR02",90,0)
 . S PRCEVNT("IEN410")=PRC410R
"RTN","PRCHJR02",91,0)
 . S (PRCI,PRCJ)=0
"RTN","PRCHJR02",92,0)
 . ;for each error returned in ack, set parsed fields into error event array
"RTN","PRCHJR02",93,0)
 . F  S PRCI=$O(^XTMP(PRCWORK,"ERR",PRCI)) Q:PRCI=""  D
"RTN","PRCHJR02",94,0)
 . . ;check if this a duplicate msg error, set flag if it is
"RTN","PRCHJR02",95,0)
 . . I $G(^XTMP(PRCWORK,"ERR",PRCI,"APPERR ID"))=2 S PRCDUPE=1
"RTN","PRCHJR02",96,0)
 . . ;place error into error array
"RTN","PRCHJR02",97,0)
 . . S PRCJ=PRCJ+3 ;leave the 1 & 2 node open for additional text for call to PHMSG^PRCHJMSG
"RTN","PRCHJR02",98,0)
 . . S PRCEVNT("ERROR",PRCJ)="Error #: "_PRCI S PRCJ=PRCJ+1
"RTN","PRCHJR02",99,0)
 . . S PRCEVNT("ERROR",PRCJ)="Severity: "_$G(^XTMP(PRCWORK,"ERR",PRCI,"SEVERITY")) S PRCJ=PRCJ+1
"RTN","PRCHJR02",100,0)
 . . ;
"RTN","PRCHJR02",101,0)
 . . ;user error msg can be a string up to 250 chars so
"RTN","PRCHJR02",102,0)
 . . ;format into lines of 70 chars max using ^DIWP
"RTN","PRCHJR02",103,0)
 . . N DIWF,DIWL,DIWR,X
"RTN","PRCHJR02",104,0)
 . . S DIWL=1,DIWR=70,(DIWF,X)="" K ^UTILITY($J,"W")
"RTN","PRCHJR02",105,0)
 . . S X="Error Message: "_$G(^XTMP(PRCWORK,"ERR",PRCI,"USER MSG"))
"RTN","PRCHJR02",106,0)
 . . D ^DIWP
"RTN","PRCHJR02",107,0)
 . . S PRCTXT=0
"RTN","PRCHJR02",108,0)
 . . F  S PRCTXT=$O(^UTILITY($J,"W",1,PRCTXT)) Q:PRCTXT=""  D
"RTN","PRCHJR02",109,0)
 . . . S PRCEVNT("ERROR",PRCJ)=$G(^UTILITY($J,"W",1,PRCTXT,0)) S PRCJ=PRCJ+1
"RTN","PRCHJR02",110,0)
 . . ;
"RTN","PRCHJR02",111,0)
 . . S PRCEVNT("ERROR",PRCJ)="Original Message Control ID: "_$G(^XTMP(PRCWORK,"MSA","CONTROL ID")) S PRCJ=PRCJ+1
"RTN","PRCHJR02",112,0)
 . . S PRCEVNT("ERROR",PRCJ)="Segment ID: "_$G(^XTMP(PRCWORK,"ERR",PRCI,"SEG ID")) S PRCJ=PRCJ+1
"RTN","PRCHJR02",113,0)
 . . S PRCEVNT("ERROR",PRCJ)="Segment Sequence: "_$G(^XTMP(PRCWORK,"ERR",PRCI,"SEG SEQ")) S PRCJ=PRCJ+1
"RTN","PRCHJR02",114,0)
 . . S PRCEVNT("ERROR",PRCJ)="Field Position: "_$G(^XTMP(PRCWORK,"ERR",PRCI,"FIELD POS")) S PRCJ=PRCJ+1
"RTN","PRCHJR02",115,0)
 . . S PRCEVNT("ERROR",PRCJ)="Field Component: "_$G(^XTMP(PRCWORK,"ERR",PRCI,"COMP")) S PRCJ=PRCJ+1
"RTN","PRCHJR02",116,0)
 . . S PRCEVNT("ERROR",PRCJ)="Field Sub-Component: "_$G(^XTMP(PRCWORK,"ERR",PRCI,"SUBCOMP")) S PRCJ=PRCJ+1
"RTN","PRCHJR02",117,0)
 . . S PRCEVNT("ERROR",PRCJ)="Field Repetition: "_$G(^XTMP(PRCWORK,"ERR",PRCI,"FIELD REP")) S PRCJ=PRCJ+1
"RTN","PRCHJR02",118,0)
 . . S PRCEVNT("ERROR",PRCJ)="HL7 Error Code: "_$G(^XTMP(PRCWORK,"ERR",PRCI,"ERRCODE ID")) S PRCJ=PRCJ+1
"RTN","PRCHJR02",119,0)
 . . S PRCEVNT("ERROR",PRCJ)="HL7 Error Text: "_$G(^XTMP(PRCWORK,"ERR",PRCI,"ERRCODE TXT")) S PRCJ=PRCJ+1
"RTN","PRCHJR02",120,0)
 . . S PRCEVNT("ERROR",PRCJ)="Coding System: "_$G(^XTMP(PRCWORK,"ERR",PRCI,"ERRCODE SYS")) S PRCJ=PRCJ+1
"RTN","PRCHJR02",121,0)
 . . S PRCEVNT("ERROR",PRCJ)="Application Error Code: "_$G(^XTMP(PRCWORK,"ERR",PRCI,"APPERR ID")) S PRCJ=PRCJ+1
"RTN","PRCHJR02",122,0)
 . . S PRCEVNT("ERROR",PRCJ)="Application Error Text: "_$G(^XTMP(PRCWORK,"ERR",PRCI,"APPERR TXT"))
"RTN","PRCHJR02",123,0)
 . ;
"RTN","PRCHJR02",124,0)
 . ;log error(s) contained in PRCEVNT array into IFCAP/ECMS TRANSACTION (#414.06) file
"RTN","PRCHJR02",125,0)
 . D LOG^PRCHJTA($G(PRCTRAN),,2,.PRCEVNT,.PRCER)
"RTN","PRCHJR02",126,0)
 . ;
"RTN","PRCHJR02",127,0)
 . ;send mailman error notification msg to Accountable Officer
"RTN","PRCHJR02",128,0)
 . N PRCMSG1,PRCMSG2 ;input array 1 & 2 for PHMSG^PRCHJMSG, pass by ref
"RTN","PRCHJR02",129,0)
 . S PRCMSG1(1)=$G(PRCTRAN)
"RTN","PRCHJR02",130,0)
 . S PRCMSG1(2)=1 ;ack reject
"RTN","PRCHJR02",131,0)
 . S PRCMSG1(3)=$G(PRCHDR("DT/TM OF MESSAGE")) ;MSH-7
"RTN","PRCHJR02",132,0)
 . S PRCMSG1(7)="Please forward this message to appropriate OIT staff!"
"RTN","PRCHJR02",133,0)
 . ;if not a duplicate msg error, set 1 node of error PRCEVNT array, if dupe status won't be reset 
"RTN","PRCHJR02",134,0)
 . I '$G(PRCDUPE) S PRCEVNT("ERROR",1)="Status of request is being reset to 'Pending Accountable Officer Sig.'"
"RTN","PRCHJR02",135,0)
 . S PRCEVNT("ERROR",2)=""
"RTN","PRCHJR02",136,0)
 . M PRCMSG2=PRCEVNT("ERROR") ;merge error array into PRCMSG2 array
"RTN","PRCHJR02",137,0)
 . D PHMSG^PRCHJMSG(.PRCMSG1,.PRCMSG2) ;send msg
"RTN","PRCHJR02",138,0)
 . ;
"RTN","PRCHJR02",139,0)
 . ;if not a duplicate msg error, return 2237 to Accountable Officer and remove signatures
"RTN","PRCHJR02",140,0)
 . I '$G(PRCDUPE) D
"RTN","PRCHJR02",141,0)
 . . I '$$UPD443^PRCHJUTL(PRC410R,.PRCER) Q
"RTN","PRCHJR02",142,0)
 . . I '$$UPD410^PRCHJUTL(PRC410R,.PRCER) Q
"RTN","PRCHJR02",143,0)
 . ;
"RTN","PRCHJR02",144,0)
 . ;reset original msg purge date/time to 1 month in future for trouble-shooting
"RTN","PRCHJR02",145,0)
 . I '$$SETPURGE^HLOAPI3($G(PRCMSG("ACK TO IEN")),$$FMADD^XLFDT($$NOW^XLFDT,30)) Q
"RTN","PRCHJR02",146,0)
 ;
"RTN","PRCHJR02",147,0)
 Q
"RTN","PRCHJR02",148,0)
 ;
"RTN","PRCHJR02",149,0)
 ;
"RTN","PRCHJR02",150,0)
MSA(PRCSEG,PRCWRK) ;Parse MSA segment
"RTN","PRCHJR02",151,0)
 ;This procedure is used to retrieve the data elements from the
"RTN","PRCHJR02",152,0)
 ;MSA segment and place them into the ^XTMP work global.
"RTN","PRCHJR02",153,0)
 ;
"RTN","PRCHJR02",154,0)
 ;  Input:
"RTN","PRCHJR02",155,0)
 ;    PRCSEG - (required) Contains all the individual values parsed from the segment
"RTN","PRCHJR02",156,0)
 ;    PRCWRK - (required) Namespace of ^XTMP work global
"RTN","PRCHJR02",157,0)
 ;
"RTN","PRCHJR02",158,0)
 ; Output: None
"RTN","PRCHJR02",159,0)
 ;
"RTN","PRCHJR02",160,0)
 N PRCTMP ;temp var
"RTN","PRCHJR02",161,0)
 ;
"RTN","PRCHJR02",162,0)
 S ^XTMP(PRCWRK,"MSA","ACK CODE")=$$GET^HLOPRS(.PRCSEG,1) ;AA, AE, OR AR
"RTN","PRCHJR02",163,0)
 S ^XTMP(PRCWRK,"MSA","CONTROL ID")=$$GET^HLOPRS(.PRCSEG,2) ;control ID of original msg
"RTN","PRCHJR02",164,0)
 S PRCTMP=$$GET^HLOPRS(.PRCSEG,3) ;2237 number and eCMS ActionUID number separated by *
"RTN","PRCHJR02",165,0)
 S ^XTMP(PRCWRK,"MSA","2237 TXN")=$P($G(PRCTMP),"*")
"RTN","PRCHJR02",166,0)
 S ^XTMP(PRCWRK,"MSA","ECMS ACTIONUID")=$P($G(PRCTMP),"*",2)
"RTN","PRCHJR02",167,0)
 Q
"RTN","PRCHJR02",168,0)
 ;
"RTN","PRCHJR02",169,0)
 ;
"RTN","PRCHJR02",170,0)
ERR(PRCSEG,PRCWRK,PRCIDX) ;Parse ERR segment
"RTN","PRCHJR02",171,0)
 ;This procedure is used to retrieve the data elementsc from the
"RTN","PRCHJR02",172,0)
 ;ERR segment and place them into the ^XTMP work global.
"RTN","PRCHJR02",173,0)
 ;
"RTN","PRCHJR02",174,0)
 ;  Input:
"RTN","PRCHJR02",175,0)
 ;    PRCSEG - (required) Contains all the individual values parsed from the segment
"RTN","PRCHJR02",176,0)
 ;    PRCWRK - (required) Namespace of ^XTMP work global
"RTN","PRCHJR02",177,0)
 ;    PRCIDX - (required) Index for multiple ERR segments, passed by ref
"RTN","PRCHJR02",178,0)
 ;
"RTN","PRCHJR02",179,0)
 ; Output: None
"RTN","PRCHJR02",180,0)
 ;
"RTN","PRCHJR02",181,0)
 N PRCTMP ;temp var for any data conversion
"RTN","PRCHJR02",182,0)
 ;
"RTN","PRCHJR02",183,0)
 S PRCIDX=$G(PRCIDX)+1 ;increment index
"RTN","PRCHJR02",184,0)
 S PRCTMP=$$GET^HLOPRS(.PRCSEG,2,1)
"RTN","PRCHJR02",185,0)
 S ^XTMP(PRCWRK,"ERR",PRCIDX,"SEG ID")=$S(PRCTMP'="":PRCTMP,1:"n/a") ;field is not required
"RTN","PRCHJR02",186,0)
 S PRCTMP=$$GET^HLOPRS(.PRCSEG,2,2)
"RTN","PRCHJR02",187,0)
 S ^XTMP(PRCWRK,"ERR",PRCIDX,"SEG SEQ")=$S(PRCTMP'="":PRCTMP,1:"n/a") ;field is not required
"RTN","PRCHJR02",188,0)
 S PRCTMP=$$GET^HLOPRS(.PRCSEG,2,3)
"RTN","PRCHJR02",189,0)
 S ^XTMP(PRCWRK,"ERR",PRCIDX,"FIELD POS")=$S(PRCTMP'="":PRCTMP,1:"n/a") ;field is not required
"RTN","PRCHJR02",190,0)
 S PRCTMP=$$GET^HLOPRS(.PRCSEG,2,4)
"RTN","PRCHJR02",191,0)
 S ^XTMP(PRCWRK,"ERR",PRCIDX,"FIELD REP")=$S(PRCTMP'="":PRCTMP,1:"n/a") ;field is not required
"RTN","PRCHJR02",192,0)
 S PRCTMP=$$GET^HLOPRS(.PRCSEG,2,5)
"RTN","PRCHJR02",193,0)
 S ^XTMP(PRCWRK,"ERR",PRCIDX,"COMP")=$S(PRCTMP'="":PRCTMP,1:"n/a") ;field is not required
"RTN","PRCHJR02",194,0)
 S PRCTMP=$$GET^HLOPRS(.PRCSEG,2,6)
"RTN","PRCHJR02",195,0)
 S ^XTMP(PRCWRK,"ERR",PRCIDX,"SUBCOMP")=$S(PRCTMP'="":PRCTMP,1:"n/a") ;field is not required
"RTN","PRCHJR02",196,0)
 S ^XTMP(PRCWRK,"ERR",PRCIDX,"ERRCODE ID")=$$GET^HLOPRS(.PRCSEG,3,1)
"RTN","PRCHJR02",197,0)
 S ^XTMP(PRCWRK,"ERR",PRCIDX,"ERRCODE TXT")=$$GET^HLOPRS(.PRCSEG,3,2)
"RTN","PRCHJR02",198,0)
 S ^XTMP(PRCWRK,"ERR",PRCIDX,"ERRCODE SYS")=$$GET^HLOPRS(.PRCSEG,3,3)
"RTN","PRCHJR02",199,0)
 S PRCTMP=$$GET^HLOPRS(.PRCSEG,4) ;convert severity code to text
"RTN","PRCHJR02",200,0)
 S ^XTMP(PRCWRK,"ERR",PRCIDX,"SEVERITY")=$S(PRCTMP="E":"Error",PRCTMP="I":"Information",PRCTMP="W":"Warning",1:"Unknown")
"RTN","PRCHJR02",201,0)
 S ^XTMP(PRCWRK,"ERR",PRCIDX,"APPERR ID")=$$GET^HLOPRS(.PRCSEG,5,1)
"RTN","PRCHJR02",202,0)
 S ^XTMP(PRCWRK,"ERR",PRCIDX,"APPERR TXT")=$$GET^HLOPRS(.PRCSEG,5,2)
"RTN","PRCHJR02",203,0)
 S ^XTMP(PRCWRK,"ERR",PRCIDX,"USER MSG")=$$GET^HLOPRS(.PRCSEG,8)
"RTN","PRCHJR02",204,0)
 Q
"RTN","PRCHJR02",205,0)
 ;
"RTN","PRCHJR02",206,0)
 ;
"RTN","PRCHJR02",207,0)
ORC(PRCSEG,PRCWRK,PRCIDX) ;Parse ORC segment
"RTN","PRCHJR02",208,0)
 ;This procedure is used to retrieve the data elements from the
"RTN","PRCHJR02",209,0)
 ;ORC segment and place them into the ^XTMP work global.
"RTN","PRCHJR02",210,0)
 ;
"RTN","PRCHJR02",211,0)
 ;  Input:
"RTN","PRCHJR02",212,0)
 ;    PRCSEG - (required) Contains all the individual values parsed from the segment
"RTN","PRCHJR02",213,0)
 ;    PRCWRK - (required) Namespace of ^XTMP work global
"RTN","PRCHJR02",214,0)
 ;    PRCIDX - (required) Index for multiple ERR segments, passed by ref
"RTN","PRCHJR02",215,0)
 ;
"RTN","PRCHJR02",216,0)
 ; Output: None
"RTN","PRCHJR02",217,0)
 ;
"RTN","PRCHJR02",218,0)
 S PRCIDX=$G(PRCIDX)+1 ;increment index
"RTN","PRCHJR02",219,0)
 S ^XTMP(PRCWRK,"ORC",PRCIDX,"ORDER CONTROL")=$$GET^HLOPRS(.PRCSEG,1) ;OK if 2237 is accepted, UA if not
"RTN","PRCHJR02",220,0)
 S ^XTMP(PRCWRK,"ORC",PRCIDX,"2237 TXN")=$$GET^HLOPRS(.PRCSEG,2,1)
"RTN","PRCHJR02",221,0)
 S ^XTMP(PRCWRK,"ORC",PRCIDX,"ECMS ACTIONUID")=$$GET^HLOPRS(.PRCSEG,3,1)
"RTN","PRCHJR02",222,0)
 Q
"RTN","PRCHJR02",223,0)
 ;
"RTN","PRCHJR02",224,0)
 ;
"RTN","PRCHJR02",225,0)
RQD(PRCSEG,PRCWRK,PRCIDX) ;Parse RQD segment
"RTN","PRCHJR02",226,0)
 ;This procedure is used to retrieve the data elements from the
"RTN","PRCHJR02",227,0)
 ;RQD segment and place them into the ^XTMP work global.
"RTN","PRCHJR02",228,0)
 ;
"RTN","PRCHJR02",229,0)
 ;  Input:
"RTN","PRCHJR02",230,0)
 ;    PRCSEG - (required) Contains all the individual values parsed from the segment
"RTN","PRCHJR02",231,0)
 ;    PRCWRK - (required) Namespace of ^XTMP work global
"RTN","PRCHJR02",232,0)
 ;    PRCIDX - (required) Index for multiple ERR segments, passed by ref
"RTN","PRCHJR02",233,0)
 ;
"RTN","PRCHJR02",234,0)
 ; Output: None
"RTN","PRCHJR02",235,0)
 ;
"RTN","PRCHJR02",236,0)
 S PRCIDX=$G(PRCIDX)+1 ;increment index
"RTN","PRCHJR02",237,0)
 S ^XTMP(PRCWRK,"RQD",PRCIDX,"LINE ITEM")=$$GET^HLOPRS(.PRCSEG,1)
"RTN","PRCHJR02",238,0)
 S ^XTMP(PRCWRK,"RQD",PRCIDX,"ECMS ITEMUID")=$$GET^HLOPRS(.PRCSEG,2,1)
"RTN","PRCHJR02",239,0)
 Q
"RTN","PRCHJR02",240,0)
 ;
"RTN","PRCHJR02",241,0)
 ;
"RTN","PRCHJR02",242,0)
STOAUID(PRC410R,PRCAUID,PRCERR) ;Store eCMS ActionUID
"RTN","PRCHJR02",243,0)
 ;This function is used to store the following field into
"RTN","PRCHJR02",244,0)
 ;a record in the CONTROL POINT ACTIVITY (#410) file:
"RTN","PRCHJR02",245,0)
 ;
"RTN","PRCHJR02",246,0)
 ; Field Name      Field #
"RTN","PRCHJR02",247,0)
 ; --------------  -------
"RTN","PRCHJR02",248,0)
 ; ECMS ACTIONUID  103
"RTN","PRCHJR02",249,0)
 ;
"RTN","PRCHJR02",250,0)
 ;  Input:
"RTN","PRCHJR02",251,0)
 ;  PRC410R - (required) IEN of record in CONTROL POINT ACTIVITY (#410) file
"RTN","PRCHJR02",252,0)
 ;  PRCAUID - (required) ECMS ACTIONUID field value to be filed  
"RTN","PRCHJR02",253,0)
 ;
"RTN","PRCHJR02",254,0)
 ; Output:
"RTN","PRCHJR02",255,0)
 ;   Function Value - returns 1 on success, 0 on failure
"RTN","PRCHJR02",256,0)
 ;           PRCERR - (optional) on failure, an error message is returned,
"RTN","PRCHJR02",257,0)
 ;                    pass by ref
"RTN","PRCHJR02",258,0)
 ;
"RTN","PRCHJR02",259,0)
 N PRCRSLT ;function result
"RTN","PRCHJR02",260,0)
 N PRCIENS ;iens string for FM data array
"RTN","PRCHJR02",261,0)
 N PRCFDA  ;FM data array
"RTN","PRCHJR02",262,0)
 ;
"RTN","PRCHJR02",263,0)
 S PRC410R=+$G(PRC410R)
"RTN","PRCHJR02",264,0)
 S PRCAUID=$G(PRCAUID)
"RTN","PRCHJR02",265,0)
 S PRCRSLT=0
"RTN","PRCHJR02",266,0)
 S PRCERR="ECMS ACTIONUID not filed: Invalid input parameters"
"RTN","PRCHJR02",267,0)
 ;
"RTN","PRCHJR02",268,0)
 I PRC410R>0,($D(^PRCS(410,PRC410R))),(PRCAUID]"") D
"RTN","PRCHJR02",269,0)
 . K PRCERR
"RTN","PRCHJR02",270,0)
 . S PRCIENS=PRC410R_","
"RTN","PRCHJR02",271,0)
 . S PRCFDA(410,PRCIENS,103)=PRCAUID
"RTN","PRCHJR02",272,0)
 . D FILE^DIE("K","PRCFDA","PRCERR")
"RTN","PRCHJR02",273,0)
 . ;
"RTN","PRCHJR02",274,0)
 . ;quit on filer error
"RTN","PRCHJR02",275,0)
 . I $D(PRCERR) S PRCERR="ECMS ACTIONUID not filed: "_$G(PRCERR("DIERR","1","TEXT",1)) Q
"RTN","PRCHJR02",276,0)
 . ;
"RTN","PRCHJR02",277,0)
 . ;success
"RTN","PRCHJR02",278,0)
 . S PRCRSLT=1
"RTN","PRCHJR02",279,0)
 ;
"RTN","PRCHJR02",280,0)
 Q PRCRSLT
"RTN","PRCHJR02",281,0)
 ;
"RTN","PRCHJR02",282,0)
 ;
"RTN","PRCHJR02",283,0)
STOITID(PRC410R,PRCIT,PRCITID,PRCERR) ;Store eCMS ItemUID
"RTN","PRCHJR02",284,0)
 ;This function is used to store the following field into
"RTN","PRCHJR02",285,0)
 ;a record in the ITEM (#410.02) multiple of the CONTROL
"RTN","PRCHJR02",286,0)
 ;POINT ACTIVITY (#410) file:
"RTN","PRCHJR02",287,0)
 ;
"RTN","PRCHJR02",288,0)
 ; Field Name      Field #
"RTN","PRCHJR02",289,0)
 ; --------------  -------
"RTN","PRCHJR02",290,0)
 ; ECMS ITEMUID    100
"RTN","PRCHJR02",291,0)
 ;
"RTN","PRCHJR02",292,0)
 ;  Input:
"RTN","PRCHJR02",293,0)
 ;  PRC410R - (required) IEN of record in CONTROL POINT ACTIVITY (#410) file
"RTN","PRCHJR02",294,0)
 ;    PRCIT - (required) Line Item Number
"RTN","PRCHJR02",295,0)
 ;   PRCTID - (required) ECMS ITEMUID field value to be filed 
"RTN","PRCHJR02",296,0)
 ;
"RTN","PRCHJR02",297,0)
 ; Output:
"RTN","PRCHJR02",298,0)
 ;   Function Value - returns 1 on success, 0 on failure
"RTN","PRCHJR02",299,0)
 ;           PRCERR - (optional) on failure, an error message is returned,
"RTN","PRCHJR02",300,0)
 ;                    pass by ref
"RTN","PRCHJR02",301,0)
 ;
"RTN","PRCHJR02",302,0)
 N PRCRSLT ;function result
"RTN","PRCHJR02",303,0)
 N PRCIENS ;iens string for FM data array
"RTN","PRCHJR02",304,0)
 N PRCFDA  ;FM data array
"RTN","PRCHJR02",305,0)
 ;
"RTN","PRCHJR02",306,0)
 S PRC410R=+$G(PRC410R)
"RTN","PRCHJR02",307,0)
 S PRCIT=+$G(PRCIT)
"RTN","PRCHJR02",308,0)
 S PRCITID=$G(PRCITID)
"RTN","PRCHJR02",309,0)
 S PRCRSLT=0
"RTN","PRCHJR02",310,0)
 S PRCERR="ECMS ITEMUID not filed: Invalid input parameters"
"RTN","PRCHJR02",311,0)
 ;
"RTN","PRCHJR02",312,0)
 I PRC410R>0,$D(^PRCS(410,PRC410R)),PRCIT>0,PRCITID]"" D
"RTN","PRCHJR02",313,0)
 . ;resolve Line Item Number to Item entry's ien and setup iens string for FM data array
"RTN","PRCHJR02",314,0)
 . S PRCIENS=$O(^PRCS(410,PRC410R,"IT","B",PRCIT,0))_","_PRC410R_","
"RTN","PRCHJR02",315,0)
 . S PRCFDA(410.02,PRCIENS,100)=PRCITID
"RTN","PRCHJR02",316,0)
 . K PRCERR
"RTN","PRCHJR02",317,0)
 . D FILE^DIE("K","PRCFDA","PRCERR")
"RTN","PRCHJR02",318,0)
 . ;
"RTN","PRCHJR02",319,0)
 . ;quit on filer error
"RTN","PRCHJR02",320,0)
 . I $D(PRCERR) S PRCERR="ECMS ITEMUID not filed: "_$G(PRCERR("DIERR","1","TEXT",1)) Q
"RTN","PRCHJR02",321,0)
 . ;
"RTN","PRCHJR02",322,0)
 . ;success
"RTN","PRCHJR02",323,0)
 . S PRCRSLT=1
"RTN","PRCHJR02",324,0)
 ;
"RTN","PRCHJR02",325,0)
 Q PRCRSLT
"RTN","PRCHJR03")
0^20^B7485505^n/a
"RTN","PRCHJR03",1,0)
PRCHJR03 ;OI&T/LKG - PROCESS 2237 RETURN OR CANCEL FROM ECMS CONT. ;9/14/12  17:35
"RTN","PRCHJR03",2,0)
 ;;5.1;IFCAP;**167**;Oct 20, 2000;Build 17
"RTN","PRCHJR03",3,0)
 ;Per VHA Directive 2004-38, this routine should not be modified.
"RTN","PRCHJR03",4,0)
LOGOMN ;Log incoming OMN^O07 message
"RTN","PRCHJR03",5,0)
 N PRCVAR1,PRCVAR2,PRCVAR3,PRCVAR4,PRCVAR5,X,Y
"RTN","PRCHJR03",6,0)
 S PRCVAR1=$G(^XTMP(PRCHJIND,"2237 TXN")),PRCVAR2=$G(^XTMP(PRCHJIND,"ECMS ACTIONUID"))
"RTN","PRCHJR03",7,0)
 S PRCVAR3=$S($G(^XTMP(PRCHJIND,"ORDER CONTROL"))="CA":10,$G(^XTMP(PRCHJIND,"ORDER STATUS"))="IP":6,1:8)
"RTN","PRCHJR03",8,0)
 S PRCVAR4("MSGDT")=PRCHJMDT,PRCVAR4("MSGID")=PRCHJMID
"RTN","PRCHJR03",9,0)
 S PRCVAR4("STN")=$G(^XTMP(PRCHJIND,"STATION")),PRCVAR4("SUBSTN")=$G(^XTMP(PRCHJIND,"SUBSTATION"))
"RTN","PRCHJR03",10,0)
 S PRCVAR4("ECMSU")=$G(^XTMP(PRCHJIND,"USER","LASTNAME"))_", "_$G(^XTMP(PRCHJIND,"USER","FIRSTNAME"))_$S($G(^XTMP(PRCHJIND,"USER","MIDDLENAME"))'="":(" "_^("MIDDLENAME")),1:"")
"RTN","PRCHJR03",11,0)
 S PRCVAR4("ECMSU")=$$UP^XLFSTR(PRCVAR4("ECMSU"))
"RTN","PRCHJR03",12,0)
 S PRCVAR4("ECMSPH")=$G(^XTMP(PRCHJIND,"PHONE")),PRCVAR4("ECMSEM")=$G(^XTMP(PRCHJIND,"EMAIL"))
"RTN","PRCHJR03",13,0)
 S PRCVAR4("ECMSDT")=$G(^XTMP(PRCHJIND,"ACTION CREATED DATE"))
"RTN","PRCHJR03",14,0)
 S PRCVAR4("ECMSRN")=$G(^XTMP(PRCHJIND,"RETURN REASON"))
"RTN","PRCHJR03",15,0)
 S PRCVAR4("ECMSCM")=$G(^XTMP(PRCHJIND,"RETURN COMMENT"))
"RTN","PRCHJR03",16,0)
 D LOG^PRCHJTA(PRCVAR1,PRCVAR2,PRCVAR3,.PRCVAR4,.PRCVAR5)
"RTN","PRCHJR03",17,0)
 Q
"RTN","PRCHJR03",18,0)
 ;
"RTN","PRCHJR03",19,0)
LOGORN ;Log Ack ORN^O08
"RTN","PRCHJR03",20,0)
 N PRCVAR1,PRCVAR2,PRCVAR3,PRCVAR4,PRCVAR5
"RTN","PRCHJR03",21,0)
 S PRCVAR1=$G(^XTMP(PRCHJIND,"2237 TXN")),PRCVAR2=$G(^XTMP(PRCHJIND,"ECMS ACTIONUID"))
"RTN","PRCHJR03",22,0)
 S PRCVAR3=$S($G(^XTMP(PRCHJIND,"ORDER CONTROL"))="CA":11,$G(^XTMP(PRCHJIND,"ORDER STATUS"))="IP":7,1:9)
"RTN","PRCHJR03",23,0)
 S PRCVAR4("MSGDT")=PRCHJNOW,PRCVAR4("STN")=$G(^XTMP(PRCHJIND,"STATION"))
"RTN","PRCHJR03",24,0)
 S PRCVAR4("SUBSTN")=$G(^XTMP(PRCHJIND,"SUBSTATION"))
"RTN","PRCHJR03",25,0)
 I $D(PRCHJERR) D
"RTN","PRCHJR03",26,0)
 . N PRCI,PRCCNT S PRCI=0,PRCCNT=0
"RTN","PRCHJR03",27,0)
 . F  S PRCI=$O(PRCHJERR(PRCI)) Q:PRCI=""  D
"RTN","PRCHJR03",28,0)
 . . S PRCCNT=PRCCNT+1,PRCVAR4("ERROR",PRCCNT)=$TR(PRCHJERR(PRCI),"^",":")
"RTN","PRCHJR03",29,0)
 D LOG^PRCHJTA(PRCVAR1,PRCVAR2,PRCVAR3,.PRCVAR4,.PRCVAR5)
"RTN","PRCHJR03",30,0)
 Q
"RTN","PRCHJR03",31,0)
 ;
"RTN","PRCHJR03",32,0)
XECMSIDS(PRCIEN) ;Removes eCMS identifiers
"RTN","PRCHJR03",33,0)
 ;Removes eCMS ActionUID at header and ItemUIDs at item line of 2237
"RTN","PRCHJR03",34,0)
 ;Input PRCIEN should be IEN of the 2237 in file #410
"RTN","PRCHJR03",35,0)
 ; Returns '0' if successful and '1' if unsuccessful
"RTN","PRCHJR03",36,0)
 Q:PRCIEN'>0 1
"RTN","PRCHJR03",37,0)
 N DA,PRCDATA,PRCERR,PRCHJDA,PRCI,PRCERROR
"RTN","PRCHJR03",38,0)
 S PRCERROR=0,PRCHJDA=PRCIEN_",",PRCDATA(410,PRCHJDA,103)="@"
"RTN","PRCHJR03",39,0)
 D FILE^DIE("K","PRCDATA","PRCERR") S:$D(PRCERR) PRCERROR=1 K PRCDATA,PRCERR
"RTN","PRCHJR03",40,0)
 S PRCI=0
"RTN","PRCHJR03",41,0)
 F  S PRCI=$O(^PRCS(410,PRCIEN,"IT",PRCI)) Q:+PRCI'=PRCI  D
"RTN","PRCHJR03",42,0)
 . S PRCDATA(410.02,PRCI_","_PRCHJDA,100)="@"
"RTN","PRCHJR03",43,0)
 . D FILE^DIE("K","PRCDATA","PRCERR") S:$D(PRCERR) PRCERROR=1
"RTN","PRCHJR03",44,0)
 . K PRCDATA,PRCERR
"RTN","PRCHJR03",45,0)
 Q PRCERROR
"RTN","PRCHJRP1")
0^13^B201702299^n/a
"RTN","PRCHJRP1",1,0)
PRCHJRP1 ;BP/VAC - REPORT ON RETURNED/CANCELED eCMS TRANSACTIONS ;11/13/12  18:56
"RTN","PRCHJRP1",2,0)
 ;;5.1;IFCAP;**167**;Oct 20, 2000;Build 17
"RTN","PRCHJRP1",3,0)
 ;Per VHA Directive 2004-038, This routine should not be modified.
"RTN","PRCHJRP1",4,0)
 ;This routine is called from PRCHUSER PPM and PRCSER
"RTN","PRCHJRP1",5,0)
 ;This report prompts for selection criteria:
"RTN","PRCHJRP1",6,0)
 ;    Date Range; Station; Sub-Station, Control Point; Transaction    ;      Type; Specific eCMS user; Specific 2237
"RTN","PRCHJRP1",7,0)
 ;NOTE: Specific eCMS user removed because of DBA insistance.
"RTN","PRCHJRP1",8,0)
 ;Parameters
"RTN","PRCHJRP1",9,0)
 ;    Date Range from any day to today
"RTN","PRCHJRP1",10,0)
 ;    Single station or all stations in UCI
"RTN","PRCHJRP1",11,0)
 ;       Substations within a single station, including NONE
"RTN","PRCHJRP1",12,0)
 ;    Single Control Point or All control points
"RTN","PRCHJRP1",13,0)
 ;    Transaction type: Returned to Accountable officer; Returned to
"RTN","PRCHJRP1",14,0)
 ;        Control Point; Cancelled;
"RTN","PRCHJRP1",15,0)
 ;    Specific eCMS user or all
"RTN","PRCHJRP1",16,0)
 ;    Single 2237
"RTN","PRCHJRP1",17,0)
 ;Output values
"RTN","PRCHJRP1",18,0)
 ;  Date Received, Date sent, 2237 #, Type,
"RTN","PRCHJRP1",19,0)
 ;     sub-station, eCMS user name, phone number and email, Reason 
"RTN","PRCHJRP1",20,0)
 ;     Description
"RTN","PRCHJRP1",21,0)
 Q
"RTN","PRCHJRP1",22,0)
START ;Entry point for generating report.
"RTN","PRCHJRP1",23,0)
 N HDATE,P,IDATE,SDATE,STAT,CONT,TYPE,CT,D,EM,I,K,L,M,NM,NT,NTL,OKAY
"RTN","PRCHJRP1",24,0)
 N OUT,PH,PRCHJCT,PRCHJDAT,PRCHJEM,PRCHJNM,PRCHJPH,PRCHJRS,PRCHJSS
"RTN","PRCHJRP1",25,0)
 N PRCHJTR,PRCHJTY,PRCHJST,SS,ST,STOP,LL,N,TY,W,X,X1,X2,XXZ,J,Y,Y2,Z
"RTN","PRCHJRP1",26,0)
 N NT2,FCP,STAT,TYPE,NOK,SUB,STAT,SSTAT,DISP,NOSUB,ANAME,NUM,YY,ZZ
"RTN","PRCHJRP1",27,0)
 N IJDATE,SJDATE,N2237,UNAME,ACC,DSENT,ERR,TREF,VAL,XREF,XTYPE,ACC
"RTN","PRCHJRP1",28,0)
 N ACC2,COUNT,QD,Y2,PRCFIRST,POP
"RTN","PRCHJRP1",29,0)
 ;This section NEWs variables for PRCHJRP2
"RTN","PRCHJRP1",30,0)
 N A,B,C,D,DAT,ODAT,OK,TDATE,Q,LL1,MNAME,TMP1,TMP2,ANS2
"RTN","PRCHJRP1",31,0)
 K XQORNOD D OP^XQCHK
"RTN","PRCHJRP1",32,0)
 D NOW^%DTC S Y=$P(%,".") D DD^%DT S HDATE=Y
"RTN","PRCHJRP1",33,0)
 S P=0,LL1=$J
"RTN","PRCHJRP1",34,0)
 K ^XTMP("PRCHJRP1",$J)
"RTN","PRCHJRP1",35,0)
 I $D(^PRCV(414.06))<1 W !,!,!,"There is no data for this program to report on." HANG 3 Q
"RTN","PRCHJRP1",36,0)
ACCES ;DETERMINE IF USER IS ACCOUNTABLE OFFICER OR WHAT CONTROL POINTS
"RTN","PRCHJRP1",37,0)
 ;THIS USER CAN ACCESS.
"RTN","PRCHJRP1",38,0)
 K ACC
"RTN","PRCHJRP1",39,0)
 S ACC(0)=0,X=$$GET1^DIQ(200,DUZ_",",400,"I")
"RTN","PRCHJRP1",40,0)
 I $P(XQOPT,"^",1)="PRCHJ TRANS REPORT" S ACC(0)=1 ;AO
"RTN","PRCHJRP1",41,0)
 I $P(XQOPT,"^",1)="PRCHJ TRANS REPORT2" S ACC(0)=2
"RTN","PRCHJRP1",42,0)
 I (X'=2)&(ACC(0)=1) W !,"Access to this report is restricted to the Accountable Officer" HANG 3 G QT
"RTN","PRCHJRP1",43,0)
 I (X=2)&(ACC(0)=1) D
"RTN","PRCHJRP1",44,0)
 .S X=0,ACC(0)=1
"RTN","PRCHJRP1",45,0)
 .F I=1:1 S X=$O(^PRC(420,X)) Q:+X=0  D
"RTN","PRCHJRP1",46,0)
 ..S Y=0
"RTN","PRCHJRP1",47,0)
 ..F J=1:1 S Y=$O(^PRC(420,X,1,Y)) Q:+Y=0  D
"RTN","PRCHJRP1",48,0)
 ...S Y2=Y
"RTN","PRCHJRP1",49,0)
 ...I $L(Y)=1 S Y2="00"_Y
"RTN","PRCHJRP1",50,0)
 ...I $L(Y)=2 S Y2="0"_Y
"RTN","PRCHJRP1",51,0)
 ...S ACC(X,Y2)=1,X2(X)=1
"RTN","PRCHJRP1",52,0)
 I ACC(0)=2 D
"RTN","PRCHJRP1",53,0)
 .S X=0
"RTN","PRCHJRP1",54,0)
 .F I=1:1 S X=$O(^PRC(420,X)) Q:+X=0  D
"RTN","PRCHJRP1",55,0)
 ..S Y=0
"RTN","PRCHJRP1",56,0)
 ..F J=1:1 S Y=$O(^PRC(420,X,1,Y)) Q:+Y=0  D
"RTN","PRCHJRP1",57,0)
 ...Q:$P($G(^PRC(420,X,1,Y,0)),"^",11)'="Y"
"RTN","PRCHJRP1",58,0)
 ...S Z=$G(^PRC(420,X,1,Y,1,DUZ,0))
"RTN","PRCHJRP1",59,0)
 ...Q:Z=""
"RTN","PRCHJRP1",60,0)
 ...Q:$P(Z,U,2)'=1&($P(Z,U,2)'=2)
"RTN","PRCHJRP1",61,0)
 ...S Y2=Y
"RTN","PRCHJRP1",62,0)
 ...I $L(Y)=1 S Y2="00"_Y
"RTN","PRCHJRP1",63,0)
 ...I $L(Y)=2 S Y2="0"_Y
"RTN","PRCHJRP1",64,0)
 ...S ACC(X,0)=1,ACC(X,Y2)=1,X2(X)=1
"RTN","PRCHJRP1",65,0)
DATE ;PROMPT FOR INPUT DATA
"RTN","PRCHJRP1",66,0)
 W @IOF
"RTN","PRCHJRP1",67,0)
 W !,?10,"REPORT ON TRANSACTION ACTIVITY BETWEEN eCMS AND IFCAP",!,!
"RTN","PRCHJRP1",68,0)
 S %DT="E",PRCFIRST=$P($O(^PRCV(414.06,"AED","")),".")
"RTN","PRCHJRP1",69,0)
 I PRCFIRST="" W !,!,"There are no records in the Transaction File to report on." HANG 3 Q
"RTN","PRCHJRP1",70,0)
DATEA W !,"Enter the starting date. ALL DATES// " R IDATE:DTIME G:'$T QT
"RTN","PRCHJRP1",71,0)
 I IDATE["?" D HELP^PRCHJRP2(1)  G DATEA
"RTN","PRCHJRP1",72,0)
 I IDATE="^" G QT
"RTN","PRCHJRP1",73,0)
 I IDATE="" S IDATE="ALL" W IDATE G STAT
"RTN","PRCHJRP1",74,0)
 S X=IDATE X ^%ZOSF("UPPERCASE") S IDATE=Y
"RTN","PRCHJRP1",75,0)
 I IDATE="A"!(IDATE="AL") D WRT(IDATE) S IDATE="ALL" G STAT
"RTN","PRCHJRP1",76,0)
 S X=IDATE
"RTN","PRCHJRP1",77,0)
 D ^%DT
"RTN","PRCHJRP1",78,0)
 I Y=-1 W !,"Invalid date" G DATEA
"RTN","PRCHJRP1",79,0)
 S IJDATE=Y ;CONVERT TO FILEMAN DATE
"RTN","PRCHJRP1",80,0)
 K %DT S X="T" D ^%DT
"RTN","PRCHJRP1",81,0)
 I IJDATE>Y W !,"Cannot have future date" HANG 3 G DATE
"RTN","PRCHJRP1",82,0)
 I IJDATE<PRCFIRST W !,"Cannot have a beginning date prior to ",$P($$FMTE^XLFDT(PRCFIRST,2),"@",1),! G DATEA
"RTN","PRCHJRP1",83,0)
DATE2 K %DT(0) S %DT="E" W !,"Enter the ending date. Today// " R SDATE:DTIME G:'$T QT
"RTN","PRCHJRP1",84,0)
 I SDATE["?" D HELP^PRCHJRP2(2) G DATE2
"RTN","PRCHJRP1",85,0)
 I SDATE="^" G QT
"RTN","PRCHJRP1",86,0)
 I (SDATE="") S SDATE="T"
"RTN","PRCHJRP1",87,0)
 S %DT="E"
"RTN","PRCHJRP1",88,0)
 S X=SDATE D ^%DT
"RTN","PRCHJRP1",89,0)
 I Y=-1 W !,"Invalid date" G DATE2
"RTN","PRCHJRP1",90,0)
 S SJDATE=Y ; CONVERT TO FILEMAN DATE
"RTN","PRCHJRP1",91,0)
 K %DT S X="T" D ^%DT
"RTN","PRCHJRP1",92,0)
 I SJDATE>Y W !,"Cannot have future date" HANG 3 G DATE2
"RTN","PRCHJRP1",93,0)
 ;Check for valid dates
"RTN","PRCHJRP1",94,0)
 I IJDATE>SJDATE W !,"Date range is incorrect." HANG 2 G START
"RTN","PRCHJRP1",95,0)
 K %DT
"RTN","PRCHJRP1",96,0)
 ;
"RTN","PRCHJRP1",97,0)
STAT ;Enter station number
"RTN","PRCHJRP1",98,0)
STAT2 W !,"Enter the Station number. ALL// " R STAT:DTIME G:'$T QT
"RTN","PRCHJRP1",99,0)
 I STAT["?" D HELP^PRCHJRP2(3) G STAT2
"RTN","PRCHJRP1",100,0)
 I STAT="^" G QT
"RTN","PRCHJRP1",101,0)
 S X=STAT X ^%ZOSF("UPPERCASE") S STAT=Y
"RTN","PRCHJRP1",102,0)
 I STAT="A"!(STAT="AL") D WRT(STAT) S STAT="ALL"
"RTN","PRCHJRP1",103,0)
 I STAT="" S STAT="ALL" W "ALL"
"RTN","PRCHJRP1",104,0)
 S NOK="Y"
"RTN","PRCHJRP1",105,0)
 I STAT'="ALL" D
"RTN","PRCHJRP1",106,0)
 .I STAT'?3N W !,"Station should be 3 digits" S NOK="N" Q
"RTN","PRCHJRP1",107,0)
 .I (ACC(0)'=1)&($G(X2(STAT))'=1) W !,"You are not a CP Official or Clerk at this Station." S NOK="N" Q
"RTN","PRCHJRP1",108,0)
 .I $G(^PRC(420,STAT,0))="" W !,"Station ",STAT," is not a valid station number" S NOK="N" Q
"RTN","PRCHJRP1",109,0)
 .I (ACC(0)=2)&($G(ACC(STAT,0))'=1) W !,"Station ",STAT," is not valid for this user." S NOK="N"
"RTN","PRCHJRP1",110,0)
 I NOK="N" G STAT2
"RTN","PRCHJRP1",111,0)
 ;
"RTN","PRCHJRP1",112,0)
SUB ;Enter the Sub-station if there is one
"RTN","PRCHJRP1",113,0)
 I STAT="ALL" S SSTAT="ALL",CONT="ALL" G CONT
"RTN","PRCHJRP1",114,0)
 S X=0,NOSUB="Y",DISP="N",NOK="Y"
"RTN","PRCHJRP1",115,0)
 F I=1:1 S X=$O(^PRC(411,X)) Q:+X=0  D
"RTN","PRCHJRP1",116,0)
 .S SUB=$P($G(^PRC(411,X,0)),"^",1)
"RTN","PRCHJRP1",117,0)
 .Q:SUB=STAT
"RTN","PRCHJRP1",118,0)
 .I $E(SUB,1,3)=STAT S Y=$E(SUB,4,5)
"RTN","PRCHJRP1",119,0)
 .I $E(SUB,1,3)'=STAT S Y=""
"RTN","PRCHJRP1",120,0)
 .I Y'="" S SUB(Y)=1,DISP="Y",NOSUB="N"
"RTN","PRCHJRP1",121,0)
SUB1 I DISP="Y" D
"RTN","PRCHJRP1",122,0)
 .W !,"Enter a Sub-station,'NONE', or '^' ALL// " R SSTAT:DTIME I '$T S NOK="Q" Q
"RTN","PRCHJRP1",123,0)
 .I SSTAT["?" D HELP^PRCHJRP2(4)  S NOSUB="Q" Q
"RTN","PRCHJRP1",124,0)
 .I SSTAT="^" S NOK="Q" Q
"RTN","PRCHJRP1",125,0)
 .S X=SSTAT X ^%ZOSF("UPPERCASE") S SSTAT=Y
"RTN","PRCHJRP1",126,0)
 .I SSTAT="A"!(SSTAT="AL") D WRT(SSTAT) S SSTAT="ALL",NOK="Y" Q
"RTN","PRCHJRP1",127,0)
 .I SSTAT="N" D WRT(SSTAT) S SSTAT="NONE",NOK="Y" Q
"RTN","PRCHJRP1",128,0)
 .I SSTAT="NONE" S NOK="Y" Q
"RTN","PRCHJRP1",129,0)
 .I SSTAT="ALL" S NOK="Y" Q
"RTN","PRCHJRP1",130,0)
 .I SSTAT="" W "ALL" S SSTAT="ALL",NOK="Y" Q
"RTN","PRCHJRP1",131,0)
 .I $G(SUB(SSTAT))="" W !,"Sub-station ",SSTAT," is not valid." S NOK="N"
"RTN","PRCHJRP1",132,0)
 I NOSUB="Y" S SSTAT="ALL"
"RTN","PRCHJRP1",133,0)
 I NOSUB="Q" S NOSUB="Y" G SUB1
"RTN","PRCHJRP1",134,0)
 I NOK="N" G SUB
"RTN","PRCHJRP1",135,0)
 I NOK="Q" G QT
"RTN","PRCHJRP1",136,0)
CONT ;Enter control point number
"RTN","PRCHJRP1",137,0)
 W !,"Enter the Control Point or '^' to quit. ALL FCPs// " R CONT:DTIME G:'$T QT
"RTN","PRCHJRP1",138,0)
 I CONT["?" D HELP^PRCHJRP2(5)  G CONT
"RTN","PRCHJRP1",139,0)
 I CONT="^" G QT
"RTN","PRCHJRP1",140,0)
 S X=CONT X ^%ZOSF("UPPERCASE") S CONT=Y
"RTN","PRCHJRP1",141,0)
 I CONT="A"!(CONT="AL") D WRT(CONT) S CONT="ALL"
"RTN","PRCHJRP1",142,0)
 I CONT="" S CONT="ALL" W "ALL"
"RTN","PRCHJRP1",143,0)
 S NOK="Y"
"RTN","PRCHJRP1",144,0)
 I CONT'="ALL" D
"RTN","PRCHJRP1",145,0)
 .I CONT'?3.4N S NOK="N" W !,"Control Point must be ALL or 3-4 digits" Q
"RTN","PRCHJRP1",146,0)
 .I ACC(0)=1 D
"RTN","PRCHJRP1",147,0)
 ..I STAT="ALL" D
"RTN","PRCHJRP1",148,0)
 ...S X=0
"RTN","PRCHJRP1",149,0)
 ...F I=1:1 S X=$O(ACC(X)) Q:X=""  D
"RTN","PRCHJRP1",150,0)
 ....I $G(ACC(X,CONT))'="" S ACC2(X,CONT)=1
"RTN","PRCHJRP1",151,0)
 ..I STAT'="ALL" D
"RTN","PRCHJRP1",152,0)
 ...I $G(ACC(STAT,CONT))="" S NOK="N" W !,"FCP ",CONT," is not in Station ",STAT
"RTN","PRCHJRP1",153,0)
 ...I $G(ACC(STAT,CONT))'="" S ACC2(STAT,CONT)=1
"RTN","PRCHJRP1",154,0)
 .I ACC(0)=2 D
"RTN","PRCHJRP1",155,0)
 ..I STAT="ALL" D
"RTN","PRCHJRP1",156,0)
 ...S X=0,NOK="N"
"RTN","PRCHJRP1",157,0)
 ...F I=1:1 S X=$O(ACC(X)) Q:X=""  D
"RTN","PRCHJRP1",158,0)
 ....I $G(ACC(X,CONT))=1 S ACC2(X,CONT)=1,NOK="Y"
"RTN","PRCHJRP1",159,0)
 ..I STAT'="ALL" D
"RTN","PRCHJRP1",160,0)
 ...I $G(ACC(STAT,CONT))="" S NOK="N" W !,"FCP does not exist. "
"RTN","PRCHJRP1",161,0)
 ...I $G(ACC(STAT,CONT))'="" S ACC2(STAT,CONT)=1
"RTN","PRCHJRP1",162,0)
 I CONT="ALL" D
"RTN","PRCHJRP1",163,0)
 .I ACC(0)=1 D
"RTN","PRCHJRP1",164,0)
 ..I STAT="ALL" D
"RTN","PRCHJRP1",165,0)
 ...S X=0
"RTN","PRCHJRP1",166,0)
 ...F I=1:1 S X=$O(ACC(X)) Q:X=""  D
"RTN","PRCHJRP1",167,0)
 ....S Y=0
"RTN","PRCHJRP1",168,0)
 ....F J=1:1 S Y=$O(ACC(X,Y)) Q:Y=""  S ACC2(X,Y)=1
"RTN","PRCHJRP1",169,0)
 ..I STAT'="ALL" D
"RTN","PRCHJRP1",170,0)
 ...S Y=0
"RTN","PRCHJRP1",171,0)
 ...F J=1:1 S Y=$O(ACC(STAT,Y)) Q:Y=""  D
"RTN","PRCHJRP1",172,0)
 ....I $G(ACC(STAT,Y))'="" S ACC2(STAT,Y)=1 Q
"RTN","PRCHJRP1",173,0)
 .I ACC(0)=2 D
"RTN","PRCHJRP1",174,0)
 ..I STAT="ALL" D
"RTN","PRCHJRP1",175,0)
 ...S X=0,NOK="N"
"RTN","PRCHJRP1",176,0)
 ...F I=1:1 S X=$O(ACC(X)) Q:X=""  D
"RTN","PRCHJRP1",177,0)
 ....S Y=0
"RTN","PRCHJRP1",178,0)
 ....F J=1:1 S Y=$O(ACC(X,Y)) Q:Y=""  D
"RTN","PRCHJRP1",179,0)
 .....S ACC2(X,Y)=1
"RTN","PRCHJRP1",180,0)
 .....I $G(ACC(X,CONT))=1 S NOK="Y"
"RTN","PRCHJRP1",181,0)
 ...I CONT="ALL" S NOK="Y"
"RTN","PRCHJRP1",182,0)
 ..I STAT'="ALL" D
"RTN","PRCHJRP1",183,0)
 ...S W=0
"RTN","PRCHJRP1",184,0)
 ...F K=1:1 S W=$O(ACC(STAT,W)) Q:W=""  D
"RTN","PRCHJRP1",185,0)
 ....I W=CONT S ACC2(STAT,CONT)=1,NOK="Y"
"RTN","PRCHJRP1",186,0)
 I NOK="N" W !,"Invalid Fund Control Point" K CONT G CONT
"RTN","PRCHJRP1",187,0)
TYPE ;Enter the Type of record
"RTN","PRCHJRP1",188,0)
 S N2237="",UNAME=""
"RTN","PRCHJRP1",189,0)
 W !,"Enter the Record Type:",! W ?25,"1=Returned to Accountable Officer",!
"RTN","PRCHJRP1",190,0)
 W ?25,"2=Returned to Control Point",!
"RTN","PRCHJRP1",191,0)
 W ?25,"3=Canceled",!
"RTN","PRCHJRP1",192,0)
 W ?25,"4=Select a single eCMS User email contact",!
"RTN","PRCHJRP1",193,0)
 W ?25,"5=Select a single 2237",!
"RTN","PRCHJRP1",194,0)
 W "Enter a number from 1-5, or '^' to quit. ALL [1-3]// " R TYPE:DTIME G:'$T QT
"RTN","PRCHJRP1",195,0)
 I TYPE["?" D HELP^PRCHJRP2(6)  G TYPE
"RTN","PRCHJRP1",196,0)
 I TYPE="" S TYPE="ALL" W "ALL" G PROC
"RTN","PRCHJRP1",197,0)
 S X=TYPE X ^%ZOSF("UPPERCASE") S TYPE=Y
"RTN","PRCHJRP1",198,0)
 I TYPE="A"!(TYPE="AL") D WRT(TYPE) S TYPE="ALL" G PROC
"RTN","PRCHJRP1",199,0)
 I TYPE="^" G QT
"RTN","PRCHJRP1",200,0)
 I ";1;2;3;4;5;ALL;"'[(";"_TYPE_";")!(TYPE[";") W !,"Enter ALL or a number between 1 and 5 or ""^"" to stop" G TYPE
"RTN","PRCHJRP1",201,0)
 S NOK="Y"
"RTN","PRCHJRP1",202,0)
TYPE2 I TYPE=5 D
"RTN","PRCHJRP1",203,0)
 .N PRCZ,DIR,PRCZ S DIR("A")="Enter partial (ex.688-12-4-1555) or complete 2237 number: ",DIR("?")="Enter Station-FY-QTR-FCP or entire transaction #"
"RTN","PRCHJRP1",204,0)
 .S DIR(0)="FA^12:18^K:X'?3N1""-""2N1""-""1N1""-""3.4N.1(1""-""4N) X"
"RTN","PRCHJRP1",205,0)
 .D ^DIR I $D(DIROUT)!$D(DIRUT) K DIROUT,DIRUT S NOK="R" Q
"RTN","PRCHJRP1",206,0)
 .S X=Y N DIC
"RTN","PRCHJRP1",207,0)
 .S DIC("S")="S PRCZ=$P(^(0),U) I ($D(^PRCV(414.06,""ATY"",6,Y)))!($D(^PRCV(414.06,""ATY"",8,Y)))!($D(^PRCV(414.06,""ATY"",10,Y)))"
"RTN","PRCHJRP1",208,0)
 .S:$G(ACC(0))=2 DIC("S")=DIC("S")_"&($D(^PRC(420,""A"",DUZ,$P(PRCZ,""-""),+$P(PRCZ,""-"",4),1))!$D(^PRC(420,""A"",DUZ,$P(PRCZ,""-""),+$P(PRCZ,""-"",4),2)))"
"RTN","PRCHJRP1",209,0)
 .S DIC="^PRCV(414.06,",DIC(0)="BQE" D ^DIC
"RTN","PRCHJRP1",210,0)
 .I Y<1 W !,"Entry not found." S NOK="R" Q
"RTN","PRCHJRP1",211,0)
 .S N2237=$P(Y,"^",2),STAT=$P(N2237,"-"),CONT=$P(N2237,"-",4),SSTAT="ALL",IDATE="ALL"
"RTN","PRCHJRP1",212,0)
 I NOK="R" G TYPE
"RTN","PRCHJRP1",213,0)
TYPE3 I TYPE=4 D
"RTN","PRCHJRP1",214,0)
 .I $D(^PRCV(414.06,"ACONTACT"))<1 S NOK="N" W !,"There are no eCMS users on file",! Q
"RTN","PRCHJRP1",215,0)
 .W !,"Enter the last name of the eCMS User contact: " R UNAME:DTIME I '$T S NOK="N" Q
"RTN","PRCHJRP1",216,0)
 .S X=UNAME X ^%ZOSF("UPPERCASE") S UNAME=Y
"RTN","PRCHJRP1",217,0)
 .I UNAME="" S NOK="N" Q
"RTN","PRCHJRP1",218,0)
 .I UNAME="?" D HELP3^PRCHJRP2 S NOK="R" Q
"RTN","PRCHJRP1",219,0)
 .I UNAME="??" D  Q
"RTN","PRCHJRP1",220,0)
 ..D HELP4^PRCHJRP2
"RTN","PRCHJRP1",221,0)
 ..I UNAME="" S NOK="N" Q
"RTN","PRCHJRP1",222,0)
 ..I UNAME["?" S NOK="N" Q
"RTN","PRCHJRP1",223,0)
 ..I UNAME'="" S NOK="Y" Q
"RTN","PRCHJRP1",224,0)
 .I NOK="N" Q
"RTN","PRCHJRP1",225,0)
 .I UNAME="^" S NOK="N" Q
"RTN","PRCHJRP1",226,0)
 .S Y=UNAME,NOK="N"
"RTN","PRCHJRP1",227,0)
 .;I $D(^PRCV(414.06,"ACONTACT"))<1 S NOK="N" W !,"No eCMS user contacts found",! Q
"RTN","PRCHJRP1",228,0)
 .S Y=$E(UNAME,1,$L(UNAME)-1)_$C($A($E(UNAME,$L(UNAME)))-1)_"~"
"RTN","PRCHJRP1",229,0)
 .F I=1:1 S Y=$O(^PRCV(414.06,"ACONTACT",Y)) Q:$E(Y,1,$L(UNAME))'=UNAME  D
"RTN","PRCHJRP1",230,0)
 ..S ANAME(I)=Y W !,I,"  ",Y S NOK="Y"
"RTN","PRCHJRP1",231,0)
 .I NOK="N" W !,"No  Users Found",! Q
"RTN","PRCHJRP1",232,0)
 .W !,"Select the Email Contact by number: " R NUM:DTIME I '$T S NOK="N" Q
"RTN","PRCHJRP1",233,0)
 .I NUM="^" S NOK="N" Q
"RTN","PRCHJRP1",234,0)
 .I NUM="" S NOK="N" Q
"RTN","PRCHJRP1",235,0)
 .I $G(ANAME(NUM))="" D  Q:NOK="N"
"RTN","PRCHJRP1",236,0)
 ..W !,"Invalid selection.  Enter a valid number or '^' to quit: " R NUM:DTIME I '$T S NOK="N" Q
"RTN","PRCHJRP1",237,0)
 ..I NUM="^" S NOK="N" Q
"RTN","PRCHJRP1",238,0)
 ..I NUM="" S NOK="R" Q
"RTN","PRCHJRP1",239,0)
 ..I $G(ANAME(NUM))="" W !,"Invalid selection." S NOK="R" Q
"RTN","PRCHJRP1",240,0)
 .I NOK="R" Q
"RTN","PRCHJRP1",241,0)
 .S MNAME=ANAME(NUM)
"RTN","PRCHJRP1",242,0)
 .S X=0
"RTN","PRCHJRP1",243,0)
 .S X=$O(^PRCV(414.06,"ACONTACT",MNAME,X))
"RTN","PRCHJRP1",244,0)
 .S Y=0
"RTN","PRCHJRP1",245,0)
 .S Y=$O(^PRCV(414.06,"ACONTACT",MNAME,X,Y))
"RTN","PRCHJRP1",246,0)
 .S UNAME=$P($G(^PRCV(414.06,X,1,Y,1)),"^",6)
"RTN","PRCHJRP1",247,0)
 .;S UNAME=ANAME(NUM)
"RTN","PRCHJRP1",248,0)
 I NOK="R" G TYPE3
"RTN","PRCHJRP1",249,0)
 I NOK="N" G TYPE
"RTN","PRCHJRP1",250,0)
 ;
"RTN","PRCHJRP1",251,0)
PROC ;BEGIN PROCESSING
"RTN","PRCHJRP1",252,0)
 W !,"Please wait - report processing"
"RTN","PRCHJRP1",253,0)
 S STOP="G"
"RTN","PRCHJRP1",254,0)
 D GETIT
"RTN","PRCHJRP1",255,0)
 S COUNT=0,X=0
"RTN","PRCHJRP1",256,0)
 D
"RTN","PRCHJRP1",257,0)
 .F I=1:1 S X=$O(^XTMP("PRCHJRP1",$J,X)) Q:X=""  D
"RTN","PRCHJRP1",258,0)
 ..S Y=""
"RTN","PRCHJRP1",259,0)
 ..F J=1:1 S Y=$O(^XTMP("PRCHJRP1",$J,X,Y)) Q:Y=""  S COUNT=COUNT+1
"RTN","PRCHJRP1",260,0)
 I COUNT=0 W !,!,"There are no records to print.",! HANG 3 W @IOF Q
"RTN","PRCHJRP1",261,0)
 W !,!,"There are ",COUNT," records to print.",!
"RTN","PRCHJRP1",262,0)
 S %ZIS="Q",ZTSAVE("LL1")=$J,ZTSAVE("COUNT")=COUNT
"RTN","PRCHJRP1",263,0)
 D ^%ZIS I POP K ^XTMP("PRCHJRP1",$J) Q
"RTN","PRCHJRP1",264,0)
 I $D(IO("Q")) S ZTRTN="PRNT^PRCHJRP1",ZTDESC="Transaction Report - eCMS/IFCAP" D ^%ZTLOAD,HOME^%ZIS K ZTSK,IO("Q") Q
"RTN","PRCHJRP1",265,0)
 D PRNT
"RTN","PRCHJRP1",266,0)
 I STOP="S" W @IOF Q
"RTN","PRCHJRP1",267,0)
 W !,"End of Report.  Press RETURN to continue " R XXZ:DTIME
"RTN","PRCHJRP1",268,0)
 W @IOF
"RTN","PRCHJRP1",269,0)
 G QT
"RTN","PRCHJRP1",270,0)
GETIT ;Compile data
"RTN","PRCHJRP1",271,0)
 ;Data in ^XTMP("PRCHJRP1",$J,0)=DATE+1^DATE^Transaction Report - eCMS/IFCAP
"RTN","PRCHJRP1",272,0)
 ;Data in ^XTMP("PRCHJRP1",$J,2237,Date recd,Station, Type
"RTN","PRCHJRP1",273,0)
 ;DATE2, IDATE, IJDATE, SDATE, SJDATE,  STAT, CONT, TYPE
"RTN","PRCHJRP1",274,0)
 ;DATE2 added as date/time sent per Mavis McGaugh
"RTN","PRCHJRP1",275,0)
 ;Note: Control point was removed from the report per M. McGaugh 6/13/2012
"RTN","PRCHJRP1",276,0)
 ;START EXTRACTING DATA USING API
"RTN","PRCHJRP1",277,0)
INDEX ;Determine index into ^PRCV(414.06,
"RTN","PRCHJRP1",278,0)
 S ^XTMP("PRCHJRP1",$J,0)=$$HTFM^XLFDT($H+1,1)_"^"_$$HTFM^XLFDT($H,1)_"^"_"Transaction Report - eCMS/IFCAP"
"RTN","PRCHJRP1",279,0)
 I (IDATE="ALL")&(STAT="ALL")&(CONT="ALL")&(TYPE="ALL")&(SSTAT="ALL") S XREF="B",TREF=1 G INDEX2
"RTN","PRCHJRP1",280,0)
 I TYPE=5 S XREF="B",TREF=2 G INDEX2
"RTN","PRCHJRP1",281,0)
 I TYPE=4 S XREF="ACONTACT",TREF=3 G INDEX2
"RTN","PRCHJRP1",282,0)
 I TYPE=3 S XREF="ATY",TREF=4,XTYPE=10 G INDEX2
"RTN","PRCHJRP1",283,0)
 I TYPE=2 S XREF="ATY",TREF=4,XTYPE=8 G INDEX2
"RTN","PRCHJRP1",284,0)
 I TYPE=1 S XREF="ATY",TREF=4,XTYPE=6 G INDEX2
"RTN","PRCHJRP1",285,0)
 I CONT'="ALL" S XREF="ACP",TREF=5 G INDEX2
"RTN","PRCHJRP1",286,0)
 I STAT'="ALL" D  G INDEX2
"RTN","PRCHJRP1",287,0)
 .I SSTAT="NONE" S XREF="ASN",TREF=6 Q
"RTN","PRCHJRP1",288,0)
 .I SSTAT="ALL" S XREF="ASN",TREF=6
"RTN","PRCHJRP1",289,0)
 .I SSTAT'="ALL" S XREF="ASB",TREF=7
"RTN","PRCHJRP1",290,0)
 I IDATE'="ALL" S XREF="AED",TREF=8
"RTN","PRCHJRP1",291,0)
INDEX2 ;Retrieve IEN base on cross reference.
"RTN","PRCHJRP1",292,0)
 I TREF=1 D
"RTN","PRCHJRP1",293,0)
 .S X=""
"RTN","PRCHJRP1",294,0)
 .I $D(^PRCV(414.06,XREF))<1 Q
"RTN","PRCHJRP1",295,0)
 .F I=1:1 S X=$O(^PRCV(414.06,XREF,X)) Q:X=""  D
"RTN","PRCHJRP1",296,0)
 ..S Y=0
"RTN","PRCHJRP1",297,0)
 ..F J=1:1 S Y=$O(^PRCV(414.06,XREF,X,Y)) Q:Y=""  D
"RTN","PRCHJRP1",298,0)
 ...K VAL
"RTN","PRCHJRP1",299,0)
 ...D DATA^PRCHJTA(Y,.VAL,.ERR)
"RTN","PRCHJRP1",300,0)
 ...;WRITE DATA TO TMP FILE
"RTN","PRCHJRP1",301,0)
 ...D BLD^PRCHJRP2
"RTN","PRCHJRP1",302,0)
 I TREF=2 D
"RTN","PRCHJRP1",303,0)
 .S Y=N2237,X=0
"RTN","PRCHJRP1",304,0)
 .Q:Y=""
"RTN","PRCHJRP1",305,0)
 .I $D(^PRCV(414.06,XREF,Y))<1 Q
"RTN","PRCHJRP1",306,0)
 .S X=$O(^PRCV(414.06,XREF,Y,X))
"RTN","PRCHJRP1",307,0)
 .Q:X=""
"RTN","PRCHJRP1",308,0)
 .K VAL
"RTN","PRCHJRP1",309,0)
 .D DATA^PRCHJTA(X,.VAL,.ERR)
"RTN","PRCHJRP1",310,0)
 .;WRITE DATA TO TMP FILE
"RTN","PRCHJRP1",311,0)
 .D BLD^PRCHJRP2
"RTN","PRCHJRP1",312,0)
 I TREF=3 D
"RTN","PRCHJRP1",313,0)
 .S Y=MNAME,X=0
"RTN","PRCHJRP1",314,0)
 .I $D(^PRCV(414.06,XREF,Y))<1 Q
"RTN","PRCHJRP1",315,0)
 .F I=1:1 S X=$O(^PRCV(414.06,XREF,Y,X)) Q:X=""  D
"RTN","PRCHJRP1",316,0)
 ..K VAL
"RTN","PRCHJRP1",317,0)
 ..D DATA^PRCHJTA(X,.VAL,.ERR)
"RTN","PRCHJRP1",318,0)
 ..;WRITE DATA TO TMP FILE
"RTN","PRCHJRP1",319,0)
 ..D BLD^PRCHJRP2
"RTN","PRCHJRP1",320,0)
 I TREF=4 D
"RTN","PRCHJRP1",321,0)
 .S X=0
"RTN","PRCHJRP1",322,0)
 .I $D(^PRCV(414.06,XREF,XTYPE))<1 Q
"RTN","PRCHJRP1",323,0)
 .F I=1:1 S X=$O(^PRCV(414.06,XREF,XTYPE,X)) Q:X=""  D
"RTN","PRCHJRP1",324,0)
 ..K VAL
"RTN","PRCHJRP1",325,0)
 ..D DATA^PRCHJTA(X,.VAL,.ERR)
"RTN","PRCHJRP1",326,0)
 ..;WRITE DATA TO TMP FILE
"RTN","PRCHJRP1",327,0)
 ..D BLD^PRCHJRP2
"RTN","PRCHJRP1",328,0)
 I TREF=5 D
"RTN","PRCHJRP1",329,0)
 .S X=0
"RTN","PRCHJRP1",330,0)
 .I $D(^PRCV(414.06,XREF,CONT))<1 Q
"RTN","PRCHJRP1",331,0)
 .F I=1:1 S X=$O(^PRCV(414.06,XREF,CONT,X)) Q:X=""  D
"RTN","PRCHJRP1",332,0)
 ..K VAL
"RTN","PRCHJRP1",333,0)
 ..D DATA^PRCHJTA(X,.VAL,.ERR)
"RTN","PRCHJRP1",334,0)
 ..;WRITE DATA TO TMP FILE
"RTN","PRCHJRP1",335,0)
 ..D BLD^PRCHJRP2
"RTN","PRCHJRP1",336,0)
 I TREF=6 D
"RTN","PRCHJRP1",337,0)
 .S X=0
"RTN","PRCHJRP1",338,0)
 .I $D(^PRCV(414.06,XREF,STAT))<1 Q
"RTN","PRCHJRP1",339,0)
 .F I=1:1 S X=$O(^PRCV(414.06,XREF,STAT,X)) Q:X=""  D
"RTN","PRCHJRP1",340,0)
 ..K VAL
"RTN","PRCHJRP1",341,0)
 ..D DATA^PRCHJTA(X,.VAL,.ERR)
"RTN","PRCHJRP1",342,0)
 ..;WRITE DATA TO TMP FILE
"RTN","PRCHJRP1",343,0)
 ..D BLD^PRCHJRP2
"RTN","PRCHJRP1",344,0)
 I TREF=7 D
"RTN","PRCHJRP1",345,0)
 .S X=0,Z=STAT_SSTAT
"RTN","PRCHJRP1",346,0)
 .I $D(^PRCV(414.06,XREF,Z))<1 Q
"RTN","PRCHJRP1",347,0)
 .F I=1:1 S X=$O(^PRCV(414.06,XREF,Z,X)) Q:X=""  D
"RTN","PRCHJRP1",348,0)
 ..K VAL
"RTN","PRCHJRP1",349,0)
 ..D DATA^PRCHJTA(X,.VAL,.ERR)
"RTN","PRCHJRP1",350,0)
 ..;WRITE DATA TO TMP FILE
"RTN","PRCHJRP1",351,0)
 ..D BLD^PRCHJRP2
"RTN","PRCHJRP1",352,0)
 I TREF=8 D
"RTN","PRCHJRP1",353,0)
 .S X1=$$FMADD^XLFDT(IJDATE,-1)
"RTN","PRCHJRP1",354,0)
 .S X2=$$FMADD^XLFDT(SJDATE,1)
"RTN","PRCHJRP1",355,0)
 .S W=X1
"RTN","PRCHJRP1",356,0)
 .I $D(^PRCV(414.06,XREF))<1 Q
"RTN","PRCHJRP1",357,0)
 .F I=1:1 S W=$O(^PRCV(414.06,XREF,W)) Q:W>X2  Q:W=""  D
"RTN","PRCHJRP1",358,0)
 ..S X=0
"RTN","PRCHJRP1",359,0)
 ..F J=1:1 S X=$O(^PRCV(414.06,XREF,W,X)) Q:X=""  D
"RTN","PRCHJRP1",360,0)
 ...K VAL
"RTN","PRCHJRP1",361,0)
 ...D DATA^PRCHJTA(X,.VAL,.ERR)
"RTN","PRCHJRP1",362,0)
 ...;WRITE DATA TO TMP FILE
"RTN","PRCHJRP1",363,0)
 ...D BLD^PRCHJRP2
"RTN","PRCHJRP1",364,0)
 K VAL
"RTN","PRCHJRP1",365,0)
 Q
"RTN","PRCHJRP1",366,0)
 ;
"RTN","PRCHJRP1",367,0)
PRNT ;Print output
"RTN","PRCHJRP1",368,0)
 ;Date Print
"RTN","PRCHJRP1",369,0)
 ;date sent, date received,2237 #,type, stat, sub stat,eCMS user
"RTN","PRCHJRP1",370,0)
 ;   phone, email, Desc. on new line
"RTN","PRCHJRP1",371,0)
 U IO D NOW^%DTC S Y=$P(%,".") D DD^%DT S HDATE=Y
"RTN","PRCHJRP1",372,0)
 S P=0
"RTN","PRCHJRP1",373,0)
 D HD
"RTN","PRCHJRP1",374,0)
 S X=0,STOP="G"
"RTN","PRCHJRP1",375,0)
 F L=1:1 S X=$O(^XTMP("PRCHJRP1",LL1,X)) Q:X=""  D
"RTN","PRCHJRP1",376,0)
 .Q:STOP="S"
"RTN","PRCHJRP1",377,0)
 .S D=""
"RTN","PRCHJRP1",378,0)
 .F Y=1:1 S D=$O(^XTMP("PRCHJRP1",LL1,X,D)) Q:D=""  D
"RTN","PRCHJRP1",379,0)
 ..Q:STOP="S"
"RTN","PRCHJRP1",380,0)
 ..S TY=0
"RTN","PRCHJRP1",381,0)
 ..F M=1:1 S TY=$O(^XTMP("PRCHJRP1",LL1,X,D,TY)) Q:TY=""  D
"RTN","PRCHJRP1",382,0)
 ...S ST=""
"RTN","PRCHJRP1",383,0)
 ...F Z=1:1 S ST=$O(^XTMP("PRCHJRP1",LL1,X,D,TY,ST)) Q:ST=""  D
"RTN","PRCHJRP1",384,0)
 ....Q:STOP="S"
"RTN","PRCHJRP1",385,0)
 ....S FCP=0
"RTN","PRCHJRP1",386,0)
 ....F N=1:1 S FCP=$O(^XTMP("PRCHJRP1",LL1,X,D,TY,ST,FCP)) Q:FCP=""  D
"RTN","PRCHJRP1",387,0)
 .....S OUT=$G(^XTMP("PRCHJRP1",LL1,X,D,TY,ST,FCP,0)) Q:OUT=""
"RTN","PRCHJRP1",388,0)
 .....;Write out record
"RTN","PRCHJRP1",389,0)
 .....S DSENT=$P(OUT,"^",1),SS=$P(OUT,"^",2),NM=$P(OUT,"^",3),PH=$P(OUT,"^",4),EM=$P(OUT,"^",5),NT=$P(OUT,"^",6)
"RTN","PRCHJRP1",390,0)
 .....W ?1,$$FMTE^XLFDT(D,2),?21,$$FMTE^XLFDT(DSENT,2),?40,X,?60,TY,?65,SS,!
"RTN","PRCHJRP1",391,0)
 .....W ?10,PH,?48,EM,!
"RTN","PRCHJRP1",392,0)
 .....D CK Q:STOP="S"
"RTN","PRCHJRP1",393,0)
 .....S LL=0
"RTN","PRCHJRP1",394,0)
 .....F L=1:1 S LL=$O(^XTMP("PRCHJRP1",LL1,X,D,TY,ST,FCP,LL)) Q:LL=""  D
"RTN","PRCHJRP1",395,0)
 ......S NT2=$G(^XTMP("PRCHJRP1",LL1,X,D,TY,ST,FCP,LL)) Q:NT=""
"RTN","PRCHJRP1",396,0)
 ......S NT=NT_" "_NT2
"RTN","PRCHJRP1",397,0)
 .....S NTL=$L(NT)\75
"RTN","PRCHJRP1",398,0)
 .....I NTL=0 W ?1,NT,!,! D CK Q
"RTN","PRCHJRP1",399,0)
 .....F M=1:1:(NTL+1) W ?1,$E(NT,1+((M-1)*75),M*75),! D CK  Q:STOP="S"
"RTN","PRCHJRP1",400,0)
 .....W !
"RTN","PRCHJRP1",401,0)
 I STOP'="S" W !,COUNT," records printed."
"RTN","PRCHJRP1",402,0)
 D ^%ZISC
"RTN","PRCHJRP1",403,0)
 K ^XTMP("PRCHJRP1",LL1)
"RTN","PRCHJRP1",404,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","PRCHJRP1",405,0)
 G QT
"RTN","PRCHJRP1",406,0)
 Q
"RTN","PRCHJRP1",407,0)
CK ;CHECK PAGE LENGTH AND PRINT HEADER IF APPROPRIATE
"RTN","PRCHJRP1",408,0)
 ;
"RTN","PRCHJRP1",409,0)
 I (IOSL-$Y)<4 D
"RTN","PRCHJRP1",410,0)
 .I $E(IOST)="P"!(IO'=IO(0)) D HD  Q
"RTN","PRCHJRP1",411,0)
 .W !,"Press RETURN to continue, ^ to exit: " R XXZ:DTIME I '$T S STOP="S" Q
"RTN","PRCHJRP1",412,0)
 .I XXZ="^" S STOP="S" Q
"RTN","PRCHJRP1",413,0)
 .D HD
"RTN","PRCHJRP1",414,0)
 Q
"RTN","PRCHJRP1",415,0)
HD ;Print header
"RTN","PRCHJRP1",416,0)
 W:$E(IOST,1,2)="C-"!P @IOF
"RTN","PRCHJRP1",417,0)
 S P=P+1
"RTN","PRCHJRP1",418,0)
 W !,?22,"REPORT OF eCMS/IFCAP TRANSACTION LOG",!,?26,"Date of Report: ",HDATE,!
"RTN","PRCHJRP1",419,0)
 W !,"# below 'Type' header:  6-Return to AO; 8-Return to CP; 10-Canceled",?74,"p. ",P,!,!
"RTN","PRCHJRP1",420,0)
 W ?1,"Date Rec'd",?21,"Date Sent",?40,"2237 Number",?59,"Type",?65,"Sub-Station",!
"RTN","PRCHJRP1",421,0)
 W ?10,"eCMS Contact Phone",?48,"Email Address",!
"RTN","PRCHJRP1",422,0)
 W ?1,"Reason Description",!
"RTN","PRCHJRP1",423,0)
 W ?1,"---------------------------------------------------------------------------",!,!
"RTN","PRCHJRP1",424,0)
 Q
"RTN","PRCHJRP1",425,0)
QT ;QUIT ROUTINE
"RTN","PRCHJRP1",426,0)
 ;
"RTN","PRCHJRP1",427,0)
 Q
"RTN","PRCHJRP1",428,0)
WRT(TRM) ;This will display full words for ALL or NONE on prompt entry
"RTN","PRCHJRP1",429,0)
 I TRM["A" D
"RTN","PRCHJRP1",430,0)
 .I $L(TRM)=1 W "LL"
"RTN","PRCHJRP1",431,0)
 .I $L(TRM)=2 W "L"
"RTN","PRCHJRP1",432,0)
 I TRM["N" D
"RTN","PRCHJRP1",433,0)
 .I $L(TRM)=1 W "ONE"
"RTN","PRCHJRP1",434,0)
 .I $L(TRM)=2 W "NE"
"RTN","PRCHJRP1",435,0)
 .I $L(TRM)=3 W "E"
"RTN","PRCHJRP1",436,0)
 Q
"RTN","PRCHJRP2")
0^14^B35489110^n/a
"RTN","PRCHJRP2",1,0)
PRCHJRP2 ;BP/VAC - Continuation of PRCHJRP1 ; 11/13/12 1:23pm
"RTN","PRCHJRP2",2,0)
 ;;5.1;IFCAP;**167**;Oct 20, 2000;Build 17
"RTN","PRCHJRP2",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRCHJRP2",4,0)
 ;This routine is a continuation of PRCHJRP1
"RTN","PRCHJRP2",5,0)
 ;Its intent is to receive the VAL arrary from the call to the
"RTN","PRCHJRP2",6,0)
 ;   Transaction File, separate out the fields, evaluate if the data
"RTN","PRCHJRP2",7,0)
 ;   should be reported, and then store it in a ^TMP array to be
"RTN","PRCHJRP2",8,0)
 ;   used to print the Transaction Report.
"RTN","PRCHJRP2",9,0)
 ; ^XTMP("PRCHJRP1",0)=purge date^create date^"Transaction Report - eCMS/IFCAP"
"RTN","PRCHJRP2",10,0)
 ; ^XTMP("PRCHJRP1",LL1,2237 number,transaction date,station,type,0)=
"RTN","PRCHJRP2",11,0)
 ;    eCMS date,substation,eCMS User Name,Phone,email,reason
"RTN","PRCHJRP2",12,0)
 ; ^XTMP("PRCHJRP1",LL1,2237 number,transaction date,station,type,1..n
"RTN","PRCHJRP2",13,0)
 ;    = comments
"RTN","PRCHJRP2",14,0)
 ;NOTE:LL1 is passed in on ZTSAVE and is equal to $J from PRCHJRP1
"RTN","PRCHJRP2",15,0)
 ;
"RTN","PRCHJRP2",16,0)
 ;VAL(2237 number,event date,event type,0)=
"RTN","PRCHJRP2",17,0)
 ;   External Reference Number,Transaction Status text,HL7 message ID,
"RTN","PRCHJRP2",18,0)
 ;   Station,sub-station,ecms User name, phone,email,returned/canceled date, returned/canceled reason,Comments
"RTN","PRCHJRP2",19,0)
 ;VAL(2237 number,event date,event type,1..n)=
"RTN","PRCHJRP2",20,0)
 ;  comments
"RTN","PRCHJRP2",21,0)
 ;
"RTN","PRCHJRP2",22,0)
 ;All variables are NEW'd in PRCHJRP1.
"RTN","PRCHJRP2",23,0)
 Q
"RTN","PRCHJRP2",24,0)
 ;
"RTN","PRCHJRP2",25,0)
BLD ;This begins to build the ^TMP array
"RTN","PRCHJRP2",26,0)
 S A=""
"RTN","PRCHJRP2",27,0)
 S A=$O(VAL(A))
"RTN","PRCHJRP2",28,0)
 S B=0
"RTN","PRCHJRP2",29,0)
 F I=1:1 S B=$O(VAL(A,B)) Q:+B=0  D
"RTN","PRCHJRP2",30,0)
 .S C=0
"RTN","PRCHJRP2",31,0)
 .F J=1:1 S C=$O(VAL(A,B,C)) Q:+C=0  D
"RTN","PRCHJRP2",32,0)
 ..;Type must be either 6,8, or 10
"RTN","PRCHJRP2",33,0)
 ..Q:C<6
"RTN","PRCHJRP2",34,0)
 ..Q:C>10
"RTN","PRCHJRP2",35,0)
 ..Q:"79"[C
"RTN","PRCHJRP2",36,0)
 ..S DAT=$G(VAL(A,B,C,0)) Q:DAT=""
"RTN","PRCHJRP2",37,0)
 ..F K=1:1:11 S QD(K)=$P(DAT,"^",K)
"RTN","PRCHJRP2",38,0)
 ..;Evaluate if the record should be reported on
"RTN","PRCHJRP2",39,0)
 ..S OK="Y" D
"RTN","PRCHJRP2",40,0)
 ...I IDATE="ALL" Q
"RTN","PRCHJRP2",41,0)
 ...S TDATE=$P(B,".",1)
"RTN","PRCHJRP2",42,0)
 ...I TDATE<IJDATE S OK="N"
"RTN","PRCHJRP2",43,0)
 ...I TDATE>SJDATE S OK="N"
"RTN","PRCHJRP2",44,0)
 ..Q:OK="N"
"RTN","PRCHJRP2",45,0)
 ..D
"RTN","PRCHJRP2",46,0)
 ...I STAT="ALL" Q
"RTN","PRCHJRP2",47,0)
 ...I STAT'=QD(4) S OK="N"
"RTN","PRCHJRP2",48,0)
 ..Q:OK="N"
"RTN","PRCHJRP2",49,0)
 ..D
"RTN","PRCHJRP2",50,0)
 ...I SSTAT="ALL" Q
"RTN","PRCHJRP2",51,0)
 ...I (SSTAT="NONE")&($E($G(QD(5)),4,5)="") S OK="Y" Q
"RTN","PRCHJRP2",52,0)
 ...I STAT_SSTAT'=QD(5) S OK="N"
"RTN","PRCHJRP2",53,0)
 ..Q:OK="N"
"RTN","PRCHJRP2",54,0)
 ..D
"RTN","PRCHJRP2",55,0)
 ...I CONT="ALL" Q
"RTN","PRCHJRP2",56,0)
 ...S QD(12)=$P(A,"-",4)
"RTN","PRCHJRP2",57,0)
 ...I CONT'=QD(12) S OK="N"
"RTN","PRCHJRP2",58,0)
 ..Q:OK="N"
"RTN","PRCHJRP2",59,0)
 ..D
"RTN","PRCHJRP2",60,0)
 ..;CHECK IF CP IS VALID FOR STATION AND FCP
"RTN","PRCHJRP2",61,0)
 ..I ACC(0)=2 D
"RTN","PRCHJRP2",62,0)
 ...S QD(12)=$P(A,"-",1),QD(13)=$P(A,"-",4)
"RTN","PRCHJRP2",63,0)
 ...I $G(ACC(QD(12),QD(13)))'=1 S OK="N"
"RTN","PRCHJRP2",64,0)
 ..D
"RTN","PRCHJRP2",65,0)
 ...I TYPE="ALL" Q
"RTN","PRCHJRP2",66,0)
 ...I (TYPE=3)&(C'=10) S OK="N" Q
"RTN","PRCHJRP2",67,0)
 ...I (TYPE=2)&(C'=8) S OK="N" Q
"RTN","PRCHJRP2",68,0)
 ...I (TYPE=1)&(C'=6) S OK="N" Q
"RTN","PRCHJRP2",69,0)
 ...I (TYPE=4)&(UNAME'=QD(8)) S OK="N" Q
"RTN","PRCHJRP2",70,0)
 ...I (TYPE=5)&(N2237'=A) S OK="N" Q
"RTN","PRCHJRP2",71,0)
 ..Q:OK="N"
"RTN","PRCHJRP2",72,0)
 ..S ODAT=QD(9)_"^"_QD(5)_"^"_QD(6)_"^"_QD(7)_"^"_QD(8)_"^"_QD(10)_"  "_QD(11)
"RTN","PRCHJRP2",73,0)
 ..S ST=QD(4),FCP=$P(A,"-",4)
"RTN","PRCHJRP2",74,0)
 ..S ^XTMP("PRCHJRP1",LL1,A,B,C,ST,FCP,0)=ODAT
"RTN","PRCHJRP2",75,0)
 ..;NOW ADD WP FIELDS
"RTN","PRCHJRP2",76,0)
 ..S M=0
"RTN","PRCHJRP2",77,0)
 ..F L=1:1 S M=$O(VAL(A,B,C,M)) Q:M=""  D
"RTN","PRCHJRP2",78,0)
 ...S ODAT=$G(VAL(A,B,C,M)) Q:ODAT=""
"RTN","PRCHJRP2",79,0)
 ...S ^XTMP("PRCHJRP1",LL1,A,B,C,ST,FCP,M)=ODAT
"RTN","PRCHJRP2",80,0)
 Q
"RTN","PRCHJRP2",81,0)
HELP(NUM) ;This section will disply HELP messages for the input prompts.
"RTN","PRCHJRP2",82,0)
 ;NUM is the indicator value identifying the prompt
"RTN","PRCHJRP2",83,0)
 I NUM=1 D
"RTN","PRCHJRP2",84,0)
 .W !,"Enter the date to select the earliest date for the report or",!," 'ALL' for all dates.",!
"RTN","PRCHJRP2",85,0)
 .D HELP2
"RTN","PRCHJRP2",86,0)
 I NUM=2 D
"RTN","PRCHJRP2",87,0)
 .W !,"Enter a date to select the most recent date for the report",!
"RTN","PRCHJRP2",88,0)
 .D HELP2
"RTN","PRCHJRP2",89,0)
 I NUM=3 D
"RTN","PRCHJRP2",90,0)
 .W !,"Enter a single 3 digit station number, 'ALL' for all stations, or '^' to quit.",!
"RTN","PRCHJRP2",91,0)
 I NUM=4 D
"RTN","PRCHJRP2",92,0)
 .W !,"Enter 2 characters for sub-station, 'ALL' for all sub-stations, 'NONE'"
"RTN","PRCHJRP2",93,0)
 .W !,"to exclude all sub-stations, or '^' to quit",!
"RTN","PRCHJRP2",94,0)
 I NUM=5 D
"RTN","PRCHJRP2",95,0)
 .W !,"Enter the 3 or 4 digit Fund Control Point, 'ALL' for all FCPs, or '^' to quit.",!
"RTN","PRCHJRP2",96,0)
 I NUM=6 D
"RTN","PRCHJRP2",97,0)
 .W !,"Type=1: This selection will display only those message events that are Returns ",!,"to Accountable Officers."
"RTN","PRCHJRP2",98,0)
 .W !,"Type=2: This selection will display only those message events that are Returns ",!,"to the Control Point level."
"RTN","PRCHJRP2",99,0)
 .W !,"Type=3: This selection will display only those message events that are Canceled"
"RTN","PRCHJRP2",100,0)
 .W !,"Type=4: Entering at least 2 characters of the eCMS User's Contact",!,"last name, will display a list of users for you to choose from."
"RTN","PRCHJRP2",101,0)
 .W !,"Type=5: Enter the complete 2237 number you want to see, or a partial number",!,"for a list of possible matches i.e., 688-12-4-123",!
"RTN","PRCHJRP2",102,0)
 Q
"RTN","PRCHJRP2",103,0)
HELP2 ; Additional help message for dates
"RTN","PRCHJRP2",104,0)
 W !,"Examples of Valid Dates"
"RTN","PRCHJRP2",105,0)
 W !,"  JAN 20 1957 OR 20 JAN 57 OR 1/20/57 OR 012057"
"RTN","PRCHJRP2",106,0)
 W !,"  T   (FOR TODAY), T+1 (FOR TOMORROW), T+2, T+7 etc"
"RTN","PRCHJRP2",107,0)
 W !,"  T-1 (FOR YESTERDAY, T-3W  (FOR 3 WEEKS AGO), etc"
"RTN","PRCHJRP2",108,0)
 W !,"If the year is omitted, the computer uses CURRENT YEAR.  Two digit year"
"RTN","PRCHJRP2",109,0)
 W !,"assumes no more than 20 years in the future, or 80 years in the past."
"RTN","PRCHJRP2",110,0)
 W !
"RTN","PRCHJRP2",111,0)
 Q
"RTN","PRCHJRP2",112,0)
HELP3 ;Displays help for user names
"RTN","PRCHJRP2",113,0)
 W !,"Enter first 2 or more characters of Contact Name or enter ?? to obtain"
"RTN","PRCHJRP2",114,0)
 W !,"a listing of possible choices."
"RTN","PRCHJRP2",115,0)
 q
"RTN","PRCHJRP2",116,0)
HELP4 ;Displays eCMS user names
"RTN","PRCHJRP2",117,0)
 ;N STOP,TMP1,TMP2,K,ANS2
"RTN","PRCHJRP2",118,0)
 S X="",STOP="G",UNAME=""
"RTN","PRCHJRP2",119,0)
 ;used to be AEU
"RTN","PRCHJRP2",120,0)
 I $D(^PRCV(414.06,"ACONTACT"))<1 W !,"No records are available" HANG 3 S UNAME="" Q
"RTN","PRCHJRP2",121,0)
 F K=1:1 S X=$O(^PRCV(414.06,"ACONTACT",X)) Q:(X="")!(STOP="S")  D
"RTN","PRCHJRP2",122,0)
 .W !,?5,K,?10,X
"RTN","PRCHJRP2",123,0)
 .S Y=0
"RTN","PRCHJRP2",124,0)
 .F L=1:1 S Y=$O(^PRCV(414.06,"ACONTACT",X,Y)) Q:(Y="")!(STOP="S")  D
"RTN","PRCHJRP2",125,0)
 ..S Z=0
"RTN","PRCHJRP2",126,0)
 ..F M=1:1 S Z=$O(^PRCV(414.06,"ACONTACT",X,Y,Z)) Q:(Z="")!(STOP="S")  D
"RTN","PRCHJRP2",127,0)
 ...S MNAME=$P($G(^PRCV(414.06,Y,1,Z,1)),"^",6)
"RTN","PRCHJRP2",128,0)
 ...S TMP1(K)=MNAME
"RTN","PRCHJRP2",129,0)
 ...S TMP2(K)=X
"RTN","PRCHJRP2",130,0)
 .W ?35,TMP1(K)
"RTN","PRCHJRP2",131,0)
 .I K#5=0 D
"RTN","PRCHJRP2",132,0)
 ..W !,"Select a name by the number or press <ENTER> to continue " R ANS2:DTIME I '$T S STOP="S" Q
"RTN","PRCHJRP2",133,0)
 ..I ANS2="^" S STOP="S" Q
"RTN","PRCHJRP2",134,0)
 ..I ANS2'?.N W !,"Enter numbers or '^' only.",! Q
"RTN","PRCHJRP2",135,0)
 ..I ANS2>0&(ANS2'>K) S STOP="S",UNAME=TMP2(ANS2),MNAME=TMP1(ANS2)
"RTN","PRCHJRP2",136,0)
HELP4D I UNAME="" W !,"Select a name by the number or <ENTER> to exit " R ANS2:DTIME I '$T G HELP4E
"RTN","PRCHJRP2",137,0)
 I UNAME["?" W !,"Select a name by the number or <ENTER> to exit " R ANS2:DTIME I '$T G HELP4E
"RTN","PRCHJRP2",138,0)
 I ANS2=""!(ANS2="^") Q
"RTN","PRCHJRP2",139,0)
 I ANS2'?.N G HELP4D
"RTN","PRCHJRP2",140,0)
 I ANS2>K G HELP4D
"RTN","PRCHJRP2",141,0)
 I $D(TMP2(ANS2)) S UNAME=TMP1(ANS2),MNAME=TMP2(ANS2)
"RTN","PRCHJRP2",142,0)
HELP4E K TMP1,TMP2
"RTN","PRCHJRP2",143,0)
 Q
"RTN","PRCHJS01")
0^5^B32931088^n/a
"RTN","PRCHJS01",1,0)
PRCHJS01 ;OI&T/KCL - IFCAP/ECMS INTERFACE TRANSMIT 2237 TO ECMS;6/12/12
"RTN","PRCHJS01",2,0)
 ;;5.1;IFCAP;**167**;Oct 20, 2000;Build 17
"RTN","PRCHJS01",3,0)
 ;Per VHA Directive 2004-38, this routine should not be modified.
"RTN","PRCHJS01",4,0)
 ;
"RTN","PRCHJS01",5,0)
SEND2237(PRC410R,PRCERR) ;Send 2237 to eCMS via HL7 messaging
"RTN","PRCHJS01",6,0)
 ;This function is the primary driver for retrieving and sending
"RTN","PRCHJS01",7,0)
 ;a 2237 transaction to eCMS in single HL7 message (OMN^O07). 
"RTN","PRCHJS01",8,0)
 ;
"RTN","PRCHJS01",9,0)
 ;This function will:
"RTN","PRCHJS01",10,0)
 ; - Retrieve 2237 data elements and place them into a work global
"RTN","PRCHJS01",11,0)
 ; - Perform 2237 pre-validation checks on 2237 data elements
"RTN","PRCHJS01",12,0)
 ; - Build and transmit 2237 data via OMN^O07 message
"RTN","PRCHJS01",13,0)
 ;
"RTN","PRCHJS01",14,0)
 ;  Input:
"RTN","PRCHJS01",15,0)
 ;    PRC410R - (required) IEN of record in CONTROL POINT ACTIVITY (#410) file
"RTN","PRCHJS01",16,0)
 ;
"RTN","PRCHJS01",17,0)
 ;  Output:
"RTN","PRCHJS01",18,0)
 ;   Function value - ien of msg in HLO MESSAGES (#778) file on success, 0 on failure
"RTN","PRCHJS01",19,0)
 ;           PRCERR - (optional) on failure, an error message is returned,
"RTN","PRCHJS01",20,0)
 ;                    pass by ref
"RTN","PRCHJS01",21,0)
 ;
"RTN","PRCHJS01",22,0)
 N PRCWORK ;name of work global containing the 2237 data elements
"RTN","PRCHJS01",23,0)
 N PRCRSLT ;function result
"RTN","PRCHJS01",24,0)
 ;
"RTN","PRCHJS01",25,0)
 ;init temp work global
"RTN","PRCHJS01",26,0)
 S PRCWORK=$NA(^TMP("PRCHJ2237",$J))
"RTN","PRCHJS01",27,0)
 K @PRCWORK
"RTN","PRCHJS01",28,0)
 ;
"RTN","PRCHJS01",29,0)
 S PRCRSLT=0
"RTN","PRCHJS01",30,0)
 ;
"RTN","PRCHJS01",31,0)
 D  ;drops out of DO block on failure
"RTN","PRCHJS01",32,0)
 . ;
"RTN","PRCHJS01",33,0)
 . ;get 2237 data elements and place into work global
"RTN","PRCHJS01",34,0)
 . I '$$GET2237(PRC410R,PRCWORK,.PRCERR) Q
"RTN","PRCHJS01",35,0)
 . ;
"RTN","PRCHJS01",36,0)
 . ;perform 2237 pre-validation checks on 2237 data elements
"RTN","PRCHJS01",37,0)
 . I '$$PRE2237(PRCWORK,.PRCERR) Q
"RTN","PRCHJS01",38,0)
 . ;
"RTN","PRCHJS01",39,0)
 . ;build and transmit 2237 data via OMN^O07 message
"RTN","PRCHJS01",40,0)
 . S PRCRSLT=$$OMNO07^PRCHJS04(PRCWORK,.PRCERR)
"RTN","PRCHJS01",41,0)
 ;
"RTN","PRCHJS01",42,0)
 ;cleanup work global
"RTN","PRCHJS01",43,0)
 K @PRCWORK
"RTN","PRCHJS01",44,0)
 ;
"RTN","PRCHJS01",45,0)
 Q PRCRSLT
"RTN","PRCHJS01",46,0)
 ;
"RTN","PRCHJS01",47,0)
 ;
"RTN","PRCHJS01",48,0)
GET2237(PRC410R,PRCWRK,PRCERR) ;Retrieve 2237 data elements
"RTN","PRCHJS01",49,0)
 ;This function is responsible for retrieving the 2237 data
"RTN","PRCHJS01",50,0)
 ;elements from the IFCAP database that will be transmitted
"RTN","PRCHJS01",51,0)
 ;to eCMS. The 2237 data elements will be placed into a temp
"RTN","PRCHJS01",52,0)
 ;work global.
"RTN","PRCHJS01",53,0)
 ;
"RTN","PRCHJS01",54,0)
 ;  Input:
"RTN","PRCHJS01",55,0)
 ;    PRC410R - (required) IEN of record in CONTROL POINT ACTIVITY (#410) file
"RTN","PRCHJS01",56,0)
 ;     PRCWRK - (required) name of work global used to hold 2237 data elements
"RTN","PRCHJS01",57,0)
 ;                         Ex) S PRCWORK=$NA(^TMP("PRCHJ2237",$J))
"RTN","PRCHJS01",58,0)
 ;
"RTN","PRCHJS01",59,0)
 ;  Output:
"RTN","PRCHJS01",60,0)
 ;   Function value - 1 on success, 0 on failure
"RTN","PRCHJS01",61,0)
 ;           PRCERR - (optional) on failure, an error message is returned,
"RTN","PRCHJS01",62,0)
 ;                    pass by ref
"RTN","PRCHJS01",63,0)
 ;
"RTN","PRCHJS01",64,0)
 N PRCRSLT ;function result
"RTN","PRCHJS01",65,0)
 ;
"RTN","PRCHJS01",66,0)
 S PRCRSLT=0
"RTN","PRCHJS01",67,0)
 ;
"RTN","PRCHJS01",68,0)
 D  ;drops out of DO block on failure
"RTN","PRCHJS01",69,0)
 . ;
"RTN","PRCHJS01",70,0)
 . ;get CONTROL POINT ACTIVITY (#410) data
"RTN","PRCHJS01",71,0)
 . I '$$GET410^PRCHJS02(PRC410R,PRCWRK,.PRCERR) Q
"RTN","PRCHJS01",72,0)
 . ;
"RTN","PRCHJS01",73,0)
 . ;get 2237 line item data
"RTN","PRCHJS01",74,0)
 . I '$$GETITEMS^PRCHJS02(PRC410R,PRCWRK,.PRCERR) Q
"RTN","PRCHJS01",75,0)
 . ;
"RTN","PRCHJS01",76,0)
 . ;get REQUEST WORKSHEET (#443) data
"RTN","PRCHJS01",77,0)
 . I '$$GET443^PRCHJS03($P($G(@PRCWRK@("TRANUM")),U),PRCWRK,.PRCERR) Q
"RTN","PRCHJS01",78,0)
 . ;
"RTN","PRCHJS01",79,0)
 . ;if INVENTORY DISTRIBUTION POINT, then get GENERIC INVENTORY (#445) data
"RTN","PRCHJS01",80,0)
 . I +$G(@PRCWRK@("INVDIS"))>0 D  Q:$G(PRCERR)
"RTN","PRCHJS01",81,0)
 . . I '$$GET445^PRCHJS03(+$G(@PRCWRK@("INVDIS")),PRCWRK,.PRCERR) Q
"RTN","PRCHJS01",82,0)
 . ;
"RTN","PRCHJS01",83,0)
 . ;if VENDOR POINTER, then get VENDOR (#440) data 
"RTN","PRCHJS01",84,0)
 . I +$G(@PRCWRK@("VENDPT"))>0 D  Q:$G(PRCERR)
"RTN","PRCHJS01",85,0)
 . . I '$$GET440^PRCHJS03(+$G(@PRCWRK@("VENDPT")),PRCWRK,.PRCERR) Q
"RTN","PRCHJS01",86,0)
 . ;
"RTN","PRCHJS01",87,0)
 . ;success
"RTN","PRCHJS01",88,0)
 . S PRCRSLT=1
"RTN","PRCHJS01",89,0)
 ;
"RTN","PRCHJS01",90,0)
 Q PRCRSLT
"RTN","PRCHJS01",91,0)
 ;
"RTN","PRCHJS01",92,0)
 ;
"RTN","PRCHJS01",93,0)
PRE2237(PRCWRK,PRCER) ;Pre-validate 2237 data elements
"RTN","PRCHJS01",94,0)
 ;This function performs pre-validation checks on specified
"RTN","PRCHJS01",95,0)
 ;2237 data elements being transmitted to eCMS.
"RTN","PRCHJS01",96,0)
 ;
"RTN","PRCHJS01",97,0)
 ;  Input:
"RTN","PRCHJS01",98,0)
 ;    PRCWRK - (required) name of work global containing 2237 data elements
"RTN","PRCHJS01",99,0)
 ;
"RTN","PRCHJS01",100,0)
 ; Output:
"RTN","PRCHJS01",101,0)
 ;   Function value - returns 1 if all validation checks passed, 0 otherwise
"RTN","PRCHJS01",102,0)
 ;            PRCER - (optional) on failure, an error message is returned,
"RTN","PRCHJS01",103,0)
 ;                    pass by ref
"RTN","PRCHJS01",104,0)
 ;
"RTN","PRCHJS01",105,0)
 N PRCSUB   ;array subscript
"RTN","PRCHJS01",106,0)
 N PRCLINE  ;array subscript for items
"RTN","PRCHJS01",107,0)
 N PRCITEML ;Line Item #
"RTN","PRCHJS01",108,0)
 N PRCNUM   ;array subscript for item description
"RTN","PRCHJS01",109,0)
 N PRCRSLT  ;function result
"RTN","PRCHJS01",110,0)
 ;
"RTN","PRCHJS01",111,0)
 S PRCRSLT=0
"RTN","PRCHJS01",112,0)
 S PRCER=""
"RTN","PRCHJS01",113,0)
 ;
"RTN","PRCHJS01",114,0)
 D  ;drops out of block if invalid condition found
"RTN","PRCHJS01",115,0)
 . ;
"RTN","PRCHJS01",116,0)
 . ;make sure this is a 2237
"RTN","PRCHJS01",117,0)
 . I ($P($G(@PRCWRK@("FRMTYP")),U)<2)!($P($G(@PRCWRK@("FRMTYP")),U)>4) D
"RTN","PRCHJS01",118,0)
 . . S PRCER="This is not a 2237 transaction"
"RTN","PRCHJS01",119,0)
 . Q:$G(PRCER)'=""
"RTN","PRCHJS01",120,0)
 . ;
"RTN","PRCHJS01",121,0)
 . ;check for null field values (eCMS required fields)
"RTN","PRCHJS01",122,0)
 . F PRCSUB="TRANUM","STANUM","RQSTDT","REQ","DTREQ","APOF","RQSRV","CTRLPT","COMMIT","ACTDATA" D  Q:PRCER'=""
"RTN","PRCHJS01",123,0)
 . . I $P($G(@PRCWRK@(PRCSUB)),U)="" S PRCER="Field "_$$GET1^DID(410,$$FIELD(PRCSUB),"","LABEL")_" is missing"
"RTN","PRCHJS01",124,0)
 . Q:$G(PRCER)'=""
"RTN","PRCHJS01",125,0)
 . ;
"RTN","PRCHJS01",126,0)
 . ;loop thru Line Items and check for null field values (eCMS required fields)
"RTN","PRCHJS01",127,0)
 . S PRCLINE=0
"RTN","PRCHJS01",128,0)
 . F  S PRCLINE=$O(@PRCWRK@(PRCLINE)) Q:'PRCLINE  D  Q:PRCER'=""
"RTN","PRCHJS01",129,0)
 . . ;
"RTN","PRCHJS01",130,0)
 . . S PRCITEML=+$G(@PRCWRK@(PRCLINE,"ITLINE")) ;line item #
"RTN","PRCHJS01",131,0)
 . . ;
"RTN","PRCHJS01",132,0)
 . . F PRCSUB="ITLINE","ITQTY","ITUOP","ITBOC","ITCOST" D  Q:PRCER'=""
"RTN","PRCHJS01",133,0)
 . . . I $P($G(@PRCWRK@(PRCLINE,PRCSUB)),U)="" S PRCER="Line Item #"_PRCITEML_" field "_$$GET1^DID(410.02,$$FIELD(PRCSUB),"","LABEL")_" is missing"
"RTN","PRCHJS01",134,0)
 . . Q:$G(PRCER)'=""
"RTN","PRCHJS01",135,0)
 . . ;
"RTN","PRCHJS01",136,0)
 . . S PRCNUM=$O(@PRCWRK@(PRCLINE,"ITDESC",0))
"RTN","PRCHJS01",137,0)
 . . I $G(@PRCWRK@(PRCLINE,"ITDESC",PRCNUM,0))="" S PRCER="Line Item #"_PRCITEML_" field "_$$GET1^DID(410.02,$$FIELD("ITDESC"),"","LABEL")_" is missing"
"RTN","PRCHJS01",138,0)
 . Q:$G(PRCER)'=""
"RTN","PRCHJS01",139,0)
 . ;
"RTN","PRCHJS01",140,0)
 . ;success
"RTN","PRCHJS01",141,0)
 . S PRCRSLT=1
"RTN","PRCHJS01",142,0)
 ;
"RTN","PRCHJS01",143,0)
 Q PRCRSLT
"RTN","PRCHJS01",144,0)
 ;
"RTN","PRCHJS01",145,0)
 ;
"RTN","PRCHJS01",146,0)
FIELD(PRCSUB) ;Return field number for subscript
"RTN","PRCHJS01",147,0)
 ;This function takes a given subscript in the 2237 work
"RTN","PRCHJS01",148,0)
 ;global and returns the corresponding field number.
"RTN","PRCHJS01",149,0)
 ;
"RTN","PRCHJS01",150,0)
 ;  Input:
"RTN","PRCHJS01",151,0)
 ;   PRCSUB - (required) subscript of 2237 work global
"RTN","PRCHJS01",152,0)
 ;
"RTN","PRCHJS01",153,0)
 ; Output:
"RTN","PRCHJS01",154,0)
 ;   Function value - returns corresponding field number for subscript,
"RTN","PRCHJS01",155,0)
 ;                    null otherwise
"RTN","PRCHJS01",156,0)
 ;
"RTN","PRCHJS01",157,0)
 N PRCFLD ;function result
"RTN","PRCHJS01",158,0)
 S PRCFLD=""
"RTN","PRCHJS01",159,0)
 ;
"RTN","PRCHJS01",160,0)
 D  ;drops out of DO block once field # is determined
"RTN","PRCHJS01",161,0)
 . ;
"RTN","PRCHJS01",162,0)
 . ;CONTROL POINT ACTIVITY (#410) fields
"RTN","PRCHJS01",163,0)
 . I PRCSUB="TRANUM" S PRCFLD=.01 Q
"RTN","PRCHJS01",164,0)
 . I PRCSUB="STANUM" S PRCFLD=.5 Q
"RTN","PRCHJS01",165,0)
 . I PRCSUB="RQSTDT" S PRCFLD=5 Q
"RTN","PRCHJS01",166,0)
 . I PRCSUB="REQ" S PRCFLD=40 Q
"RTN","PRCHJS01",167,0)
 . I PRCSUB="DTREQ" S PRCFLD=7 Q
"RTN","PRCHJS01",168,0)
 . I PRCSUB="APOF" S PRCFLD=42 Q
"RTN","PRCHJS01",169,0)
 . I PRCSUB="RQSRV" S PRCFLD=6.3 Q
"RTN","PRCHJS01",170,0)
 . I PRCSUB="CTRLPT" S PRCFLD=15 Q
"RTN","PRCHJS01",171,0)
 . I PRCSUB="COMMIT" S PRCFLD=20 Q
"RTN","PRCHJS01",172,0)
 . I PRCSUB="ACTDATA" S PRCFLD=28 Q
"RTN","PRCHJS01",173,0)
 . ;
"RTN","PRCHJS01",174,0)
 . ;ITEM (#410.02) multiple fields
"RTN","PRCHJS01",175,0)
 . I PRCSUB="ITLINE" S PRCFLD=.01 Q
"RTN","PRCHJS01",176,0)
 . I PRCSUB="ITDESC" S PRCFLD=1 Q
"RTN","PRCHJS01",177,0)
 . I PRCSUB="ITQTY" S PRCFLD=2 Q
"RTN","PRCHJS01",178,0)
 . I PRCSUB="ITUOP" S PRCFLD=3 Q
"RTN","PRCHJS01",179,0)
 . I PRCSUB="ITBOC" S PRCFLD=4 Q
"RTN","PRCHJS01",180,0)
 . I PRCSUB="ITCOST" S PRCFLD=7 Q
"RTN","PRCHJS01",181,0)
 ;
"RTN","PRCHJS01",182,0)
 Q PRCFLD
"RTN","PRCHJS02")
0^6^B160738440^n/a
"RTN","PRCHJS02",1,0)
PRCHJS02 ;OI&T/KCL - IFCAP/ECMS INTERFACE RETRIEVE 2237 DATA;6/12/12
"RTN","PRCHJS02",2,0)
 ;;5.1;IFCAP;**167**;Oct 20, 2000;Build 17
"RTN","PRCHJS02",3,0)
 ;Per VHA Directive 2004-38, this routine should not be modified.
"RTN","PRCHJS02",4,0)
 ;
"RTN","PRCHJS02",5,0)
GET410(PRC410R,PRCWRK,PRCER) ;Get CONTROL POINT ACTIVITY (#410) data
"RTN","PRCHJS02",6,0)
 ;This function retrieves 2237 data elements from the CONTROL POINT
"RTN","PRCHJS02",7,0)
 ;ACTIVITY (#410) file and places them into a ^TMP work global. Data
"RTN","PRCHJS02",8,0)
 ;is placed into the work global in both internal and external format.
"RTN","PRCHJS02",9,0)
 ;
"RTN","PRCHJS02",10,0)
 ;   Input:
"RTN","PRCHJS02",11,0)
 ;    PRC410R - (required) IEN of record in CONTROL POINT ACTIVITY (#410) file
"RTN","PRCHJS02",12,0)
 ;     PRCWRK - (required) name of work global containing data elements
"RTN","PRCHJS02",13,0)
 ;
"RTN","PRCHJS02",14,0)
 ;  Output:
"RTN","PRCHJS02",15,0)
 ;   Function value - 1 on success, 0 on failure
"RTN","PRCHJS02",16,0)
 ;            PRCER - (optional) on failure, an error message is returned,
"RTN","PRCHJS02",17,0)
 ;                    pass by reference
"RTN","PRCHJS02",18,0)
 ;           PRCWRK - work global containing the #410 data elements:
"RTN","PRCHJS02",19,0)
 ;
"RTN","PRCHJS02",20,0)
 ;         Subscript    Field#  Data Element
"RTN","PRCHJS02",21,0)
 ;         ---------    ------  -------------------
"RTN","PRCHJS02",22,0)
 ;          TRANUM      .01     TRANSACTION NUMBER
"RTN","PRCHJS02",23,0)
 ;          STANUM      .5      STATION NUMBER
"RTN","PRCHJS02",24,0)
 ;          FRMTYP      3       FORM TYPE
"RTN","PRCHJS02",25,0)
 ;          INVDIS      4       INVENTORY DISTRIBUTION POINT
"RTN","PRCHJS02",26,0)
 ;          RQSTDT      5       DATE OF REQUEST
"RTN","PRCHJS02",27,0)
 ;          RQSRV       6.3     REQUESTING SERVICE
"RTN","PRCHJS02",28,0)
 ;          DTREQ       7       DATE REQUIRED
"RTN","PRCHJS02",29,0)
 ;          PRI         7.5     PRIORITY OF REQUEST
"RTN","PRCHJS02",30,0)
 ;          REMARKS     9       SPECIAL REMARKS
"RTN","PRCHJS02",31,0)
 ;          VENDNM      11      VENDOR
"RTN","PRCHJS02",32,0)
 ;          VENDAD1     11.1    VENDOR ADDRESS1
"RTN","PRCHJS02",33,0)
 ;          VENDAD2     11.2    VENDOR ADDRESS2
"RTN","PRCHJS02",34,0)
 ;          VENDAD3     11.3    VENDOR ADDRESS3
"RTN","PRCHJS02",35,0)
 ;          VENDAD4     11.4    VENDOR ADDRESS4
"RTN","PRCHJS02",36,0)
 ;          VENDCTY     11.5    VENDOR CITY
"RTN","PRCHJS02",37,0)
 ;          VENDST      11.6    VENDOR STATE
"RTN","PRCHJS02",38,0)
 ;          VENDZIP     11.7    VENDOR ZIP
"RTN","PRCHJS02",39,0)
 ;          VENDCON     11.8    VENDOR CONTACT
"RTN","PRCHJS02",40,0)
 ;          VENDPH      11.9    VENDOR PHONE NUMBER
"RTN","PRCHJS02",41,0)
 ;          VENDPT      12      VENDOR POINTER
"RTN","PRCHJS02",42,0)
 ;          CTRLPT      15      CONTROL POINT
"RTN","PRCHJS02",43,0)
 ;          COSTCTR     15.5    COST CENTER
"RTN","PRCHJS02",44,0)
 ;          COMMIT      20      COMMITTED (ESTIMATED) COST
"RTN","PRCHJS02",45,0)
 ;          COMMITDT    21      DATE COMMITTED
"RTN","PRCHJS02",46,0)
 ;          TRANSAMT    27      TRANSACTION $ AMOUNT
"RTN","PRCHJS02",47,0)
 ;          ACTDATA     28      ACCOUNTING DATA
"RTN","PRCHJS02",48,0)
 ;          FCPPRJ      28.1    FCP/PRJ
"RTN","PRCHJS02",49,0)
 ;          BBFY        28.5    BBFY
"RTN","PRCHJS02",50,0)
 ;          REQ         40      REQUESTOR
"RTN","PRCHJS02",51,0)
 ;          REQTITLE    41      REQUESTOR TITLE
"RTN","PRCHJS02",52,0)
 ;          APOF        42      APPROVING OFFICIAL
"RTN","PRCHJS02",53,0)
 ;          APOFTIT     43      APPROVING OFFICIAL TITLE
"RTN","PRCHJS02",54,0)
 ;          ESIGDT      44.6    ES CODE DATE/TIME
"RTN","PRCHJS02",55,0)
 ;          JUSTIF      45      JUSTIFICATION
"RTN","PRCHJS02",56,0)
 ;          DELIVTO     46      DELIVER TO/LOCATION
"RTN","PRCHJS02",57,0)
 ;          ESTSHIP     48.1    EST. SHIPPING
"RTN","PRCHJS02",58,0)
 ;          COMMENT     60      COMMENTS
"RTN","PRCHJS02",59,0)
 ;          SUBSTA      448     SUBSTATION
"RTN","PRCHJS02",60,0)
 ;
"RTN","PRCHJS02",61,0)
 N PRCIENS ;iens string for GETS^DIQ
"RTN","PRCHJS02",62,0)
 N PRCFLDS ;results array for GETS^DIQ
"RTN","PRCHJS02",63,0)
 N PRCERR  ;error array for GETS^DIQ
"RTN","PRCHJS02",64,0)
 N PRCRSLT ;function result
"RTN","PRCHJS02",65,0)
 ;
"RTN","PRCHJS02",66,0)
 S PRCRSLT=0
"RTN","PRCHJS02",67,0)
 S PRCER="Control Point Activity record not found"
"RTN","PRCHJS02",68,0)
 ;
"RTN","PRCHJS02",69,0)
 I $G(PRC410R)>0,$D(^PRCS(410,PRC410R)) D
"RTN","PRCHJS02",70,0)
 . ;retrieve data from #410 top level fields
"RTN","PRCHJS02",71,0)
 . S PRCIENS=PRC410R_","
"RTN","PRCHJS02",72,0)
 . D GETS^DIQ(410,PRCIENS,"*","IE","PRCFLDS","PRCERR")
"RTN","PRCHJS02",73,0)
 . I $D(PRCERR) S PRCER="Unable to retrieve Control Point Activity record" Q
"RTN","PRCHJS02",74,0)
 . ;
"RTN","PRCHJS02",75,0)
 . ;place top level (#410) fields into work global
"RTN","PRCHJS02",76,0)
 . S @PRCWRK@("TRANUM")=$G(PRCFLDS(410,PRCIENS,.01,"I"))_U_$G(PRCFLDS(410,PRCIENS,.01,"E"))
"RTN","PRCHJS02",77,0)
 . S @PRCWRK@("STANUM")=$G(PRCFLDS(410,PRCIENS,.5,"I"))_U_$G(PRCFLDS(410,PRCIENS,.5,"E"))
"RTN","PRCHJS02",78,0)
 . S @PRCWRK@("FRMTYP")=$G(PRCFLDS(410,PRCIENS,3,"I"))_U_$G(PRCFLDS(410,PRCIENS,3,"E"))
"RTN","PRCHJS02",79,0)
 . S @PRCWRK@("INVDIS")=$G(PRCFLDS(410,PRCIENS,4,"I"))_U_$G(PRCFLDS(410,PRCIENS,4,"E"))
"RTN","PRCHJS02",80,0)
 . S @PRCWRK@("RQSTDT")=$G(PRCFLDS(410,PRCIENS,5,"I"))_U_$G(PRCFLDS(410,PRCIENS,5,"E"))
"RTN","PRCHJS02",81,0)
 . S @PRCWRK@("RQSRV")=$G(PRCFLDS(410,PRCIENS,6.3,"I"))_U_$G(PRCFLDS(410,PRCIENS,6.3,"E"))
"RTN","PRCHJS02",82,0)
 . S @PRCWRK@("DTREQ")=$G(PRCFLDS(410,PRCIENS,7,"I"))_U_$G(PRCFLDS(410,PRCIENS,7,"E"))
"RTN","PRCHJS02",83,0)
 . S @PRCWRK@("PRI")=$G(PRCFLDS(410,PRCIENS,7.5,"I"))_U_$G(PRCFLDS(410,PRCIENS,7.5,"E"))
"RTN","PRCHJS02",84,0)
 . S @PRCWRK@("VENDNM")=$G(PRCFLDS(410,PRCIENS,11,"I"))_U_$G(PRCFLDS(410,PRCIENS,11,"E"))
"RTN","PRCHJS02",85,0)
 . S @PRCWRK@("VENDAD1")=$G(PRCFLDS(410,PRCIENS,11.1,"I"))_U_$G(PRCFLDS(410,PRCIENS,11.1,"E"))
"RTN","PRCHJS02",86,0)
 . S @PRCWRK@("VENDAD2")=$G(PRCFLDS(410,PRCIENS,11.2,"I"))_U_$G(PRCFLDS(410,PRCIENS,11.2,"E"))
"RTN","PRCHJS02",87,0)
 . S @PRCWRK@("VENDAD3")=$G(PRCFLDS(410,PRCIENS,11.3,"I"))_U_$G(PRCFLDS(410,PRCIENS,11.3,"E"))
"RTN","PRCHJS02",88,0)
 . S @PRCWRK@("VENDAD4")=$G(PRCFLDS(410,PRCIENS,11.4,"I"))_U_$G(PRCFLDS(410,PRCIENS,11.4,"E"))
"RTN","PRCHJS02",89,0)
 . S @PRCWRK@("VENDCTY")=$G(PRCFLDS(410,PRCIENS,11.5,"I"))_U_$G(PRCFLDS(410,PRCIENS,11.5,"E"))
"RTN","PRCHJS02",90,0)
 . S @PRCWRK@("VENDST")=$G(PRCFLDS(410,PRCIENS,11.6,"I"))_U_$G(PRCFLDS(410,PRCIENS,11.6,"E"))
"RTN","PRCHJS02",91,0)
 . S @PRCWRK@("VENDZIP")=$G(PRCFLDS(410,PRCIENS,11.7,"I"))_U_$G(PRCFLDS(410,PRCIENS,11.7,"E"))
"RTN","PRCHJS02",92,0)
 . S @PRCWRK@("VENDCON")=$G(PRCFLDS(410,PRCIENS,11.8,"I"))_U_$G(PRCFLDS(410,PRCIENS,11.8,"E"))
"RTN","PRCHJS02",93,0)
 . S @PRCWRK@("VENDPH")=$G(PRCFLDS(410,PRCIENS,11.9,"I"))_U_$G(PRCFLDS(410,PRCIENS,11.9,"E"))
"RTN","PRCHJS02",94,0)
 . S @PRCWRK@("VENDPT")=$G(PRCFLDS(410,PRCIENS,12,"I"))_U_$G(PRCFLDS(410,PRCIENS,12,"E"))
"RTN","PRCHJS02",95,0)
 . S @PRCWRK@("CTRLPT")=$G(PRCFLDS(410,PRCIENS,15,"I"))_U_$G(PRCFLDS(410,PRCIENS,15,"E"))
"RTN","PRCHJS02",96,0)
 . S @PRCWRK@("COSTCTR")=$G(PRCFLDS(410,PRCIENS,15.5,"I"))_U_$G(PRCFLDS(410,PRCIENS,15.5,"E"))
"RTN","PRCHJS02",97,0)
 . S @PRCWRK@("COMMIT")=$G(PRCFLDS(410,PRCIENS,20,"I"))_U_$G(PRCFLDS(410,PRCIENS,20,"E"))
"RTN","PRCHJS02",98,0)
 . S @PRCWRK@("COMMITDT")=$G(PRCFLDS(410,PRCIENS,21,"I"))_U_$G(PRCFLDS(410,PRCIENS,21,"E"))
"RTN","PRCHJS02",99,0)
 . S @PRCWRK@("TRANSAMT")=$G(PRCFLDS(410,PRCIENS,27,"I"))_U_$G(PRCFLDS(410,PRCIENS,27,"E"))
"RTN","PRCHJS02",100,0)
 . S @PRCWRK@("ACTDATA")=$G(PRCFLDS(410,PRCIENS,28,"I"))_U_$G(PRCFLDS(410,PRCIENS,28,"E"))
"RTN","PRCHJS02",101,0)
 . S @PRCWRK@("FCPPRJ")=$G(PRCFLDS(410,PRCIENS,28.1,"I"))_U_$G(PRCFLDS(410,PRCIENS,28.1,"E"))
"RTN","PRCHJS02",102,0)
 . S @PRCWRK@("BBFY")=$G(PRCFLDS(410,PRCIENS,28.5,"I"))_U_$G(PRCFLDS(410,PRCIENS,28.5,"E"))
"RTN","PRCHJS02",103,0)
 . S @PRCWRK@("REQ")=$G(PRCFLDS(410,PRCIENS,40,"I"))_U_$G(PRCFLDS(410,PRCIENS,40,"E"))
"RTN","PRCHJS02",104,0)
 . S @PRCWRK@("REQTITLE")=$G(PRCFLDS(410,PRCIENS,41,"I"))_U_$G(PRCFLDS(410,PRCIENS,41,"E"))
"RTN","PRCHJS02",105,0)
 . S @PRCWRK@("APOF")=$G(PRCFLDS(410,PRCIENS,42,"I"))_U_$G(PRCFLDS(410,PRCIENS,42,"E"))
"RTN","PRCHJS02",106,0)
 . S @PRCWRK@("APOFTIT")=$G(PRCFLDS(410,PRCIENS,43,"I"))_U_$G(PRCFLDS(410,PRCIENS,43,"E"))
"RTN","PRCHJS02",107,0)
 . S @PRCWRK@("ESIGDT")=$G(PRCFLDS(410,PRCIENS,44.6,"I"))_U_$G(PRCFLDS(410,PRCIENS,44.6,"E"))
"RTN","PRCHJS02",108,0)
 . S @PRCWRK@("DELIVTO")=$G(PRCFLDS(410,PRCIENS,46,"I"))_U_$G(PRCFLDS(410,PRCIENS,46,"E"))
"RTN","PRCHJS02",109,0)
 . S @PRCWRK@("ESTSHIP")=$G(PRCFLDS(410,PRCIENS,48.1,"I"))_U_$G(PRCFLDS(410,PRCIENS,48.1,"E"))
"RTN","PRCHJS02",110,0)
 . S @PRCWRK@("SUBSTA")=$G(PRCFLDS(410,PRCIENS,448,"I"))_U_$G(PRCFLDS(410,PRCIENS,448,"E"))
"RTN","PRCHJS02",111,0)
 . ;
"RTN","PRCHJS02",112,0)
 . ;retrieve Special Remarks WP field and place into work global
"RTN","PRCHJS02",113,0)
 . D FORMTXT($G(PRC410R),PRCWRK,"REMARKS","RM")
"RTN","PRCHJS02",114,0)
 . ;
"RTN","PRCHJS02",115,0)
 . ;retrieve Justification WP field and place into work global
"RTN","PRCHJS02",116,0)
 . D FORMTXT($G(PRC410R),PRCWRK,"JUSTIF",8)
"RTN","PRCHJS02",117,0)
 . ;
"RTN","PRCHJS02",118,0)
 . ;retrieve Comments WP field and place into work global
"RTN","PRCHJS02",119,0)
 . D FORMTXT($G(PRC410R),PRCWRK,"COMMENT","CO")
"RTN","PRCHJS02",120,0)
 . ;
"RTN","PRCHJS02",121,0)
 . ;success
"RTN","PRCHJS02",122,0)
 . S PRCRSLT=1 K PRCER
"RTN","PRCHJS02",123,0)
 ;
"RTN","PRCHJS02",124,0)
 Q PRCRSLT
"RTN","PRCHJS02",125,0)
 ;
"RTN","PRCHJS02",126,0)
 ;
"RTN","PRCHJS02",127,0)
FORMTXT(PRC410R,PRCWRK,PRCSUB,PRCNODE,PRCWL,PRCWR) ;Format WP Text Utility
"RTN","PRCHJS02",128,0)
 ;This procedure is used to format Word Processing fields
"RTN","PRCHJS02",129,0)
 ;retrieved from the CONTROL POINT ACTIVITY (#410) file and
"RTN","PRCHJS02",130,0)
 ;place them into the ^TMP work global containing 2237 data elements.
"RTN","PRCHJS02",131,0)
 ;
"RTN","PRCHJS02",132,0)
 ;  Input:
"RTN","PRCHJS02",133,0)
 ;    PRC410R - (required) IEN of record in CONTROL POINT ACTIVITY (#410) file
"RTN","PRCHJS02",134,0)
 ;     PRCWRK - (required) name of work global containing 2237 data elements
"RTN","PRCHJS02",135,0)
 ;     PRCSUB - (required) work global subscript where text will be placed
"RTN","PRCHJS02",136,0)
 ;    PRCNODE - (required) node where WP fields reside in (#410) file
"RTN","PRCHJS02",137,0)
 ;      PRCWL - (optional) left margin for WP text, default=1
"RTN","PRCHJS02",138,0)
 ;      PRCWR - (optional) right margin for WP text, default=200
"RTN","PRCHJS02",139,0)
 ;
"RTN","PRCHJS02",140,0)
 ; Output: None
"RTN","PRCHJS02",141,0)
 ;
"RTN","PRCHJS02",142,0)
 N X    ;string of text to be added as input to the formatter
"RTN","PRCHJS02",143,0)
 N DIWL ;left margin for text
"RTN","PRCHJS02",144,0)
 N DIWR ;right margin for text
"RTN","PRCHJS02",145,0)
 N DIWF ;string of format control parameters
"RTN","PRCHJS02",146,0)
 N PRCI ;WP nodes subscript
"RTN","PRCHJS02",147,0)
 ;
"RTN","PRCHJS02",148,0)
 ;input params for ^DIWP
"RTN","PRCHJS02",149,0)
 S DIWL=$S($G(PRCWL)>0:PRCWL,1:1)
"RTN","PRCHJS02",150,0)
 S DIWR=$S($G(PRCWR)>0:PRCWR,1:200)
"RTN","PRCHJS02",151,0)
 S (DIWF,X)=""
"RTN","PRCHJS02",152,0)
 K ^UTILITY($J,"W") ;must kill before calling ^DIWP
"RTN","PRCHJS02",153,0)
 ;
"RTN","PRCHJS02",154,0)
 ;retrieve WP text and place formatted text into ^UTILITY($J,"W")
"RTN","PRCHJS02",155,0)
 S PRCI=0
"RTN","PRCHJS02",156,0)
 F  S PRCI=$O(^PRCS(410,$G(PRC410R),PRCNODE,PRCI)) Q:PRCI=""  D
"RTN","PRCHJS02",157,0)
 . S X=$G(^PRCS(410,$G(PRC410R),PRCNODE,PRCI,0))
"RTN","PRCHJS02",158,0)
 . D ^DIWP
"RTN","PRCHJS02",159,0)
 ;
"RTN","PRCHJS02",160,0)
 ;merge formatted text into work global
"RTN","PRCHJS02",161,0)
 I $D(^UTILITY($J,"W")) M @PRCWRK@(PRCSUB)=^UTILITY($J,"W",1)
"RTN","PRCHJS02",162,0)
 ;
"RTN","PRCHJS02",163,0)
 ;cleanup
"RTN","PRCHJS02",164,0)
 K ^UTILITY($J,"W")
"RTN","PRCHJS02",165,0)
 Q
"RTN","PRCHJS02",166,0)
 ;
"RTN","PRCHJS02",167,0)
 ;
"RTN","PRCHJS02",168,0)
GETITEMS(PRC410R,PRCWRK,PRCER) ;Get 2237 line items
"RTN","PRCHJS02",169,0)
 ;This function retrieves 2237 line item data elements
"RTN","PRCHJS02",170,0)
 ;and places them into a ^TMP work global. Data is placed
"RTN","PRCHJS02",171,0)
 ;into the work global in both internal and external format.
"RTN","PRCHJS02",172,0)
 ;
"RTN","PRCHJS02",173,0)
 ;  Input:
"RTN","PRCHJS02",174,0)
 ;   PRC410R - (required) IEN of record in CONTROL POINT ACTIVITY (#410) file
"RTN","PRCHJS02",175,0)
 ;    PRCWRK - (required) name of work global containing data elements
"RTN","PRCHJS02",176,0)
 ;
"RTN","PRCHJS02",177,0)
 ; Output:
"RTN","PRCHJS02",178,0)
 ;  Function value - 1 on success, 0 on failure
"RTN","PRCHJS02",179,0)
 ;           PRCER - (optional) on failure, an error message is returned,
"RTN","PRCHJS02",180,0)
 ;                    pass by reference
"RTN","PRCHJS02",181,0)
 ;          PRCWRK - work global containing the line item data elements:
"RTN","PRCHJS02",182,0)
 ;
"RTN","PRCHJS02",183,0)
 ;         Subscript                     Field#   Data Element
"RTN","PRCHJS02",184,0)
 ;         ---------                     ------   -------------------
"RTN","PRCHJS02",185,0)
 ;        ITEM (#410.02) multiple:
"RTN","PRCHJS02",186,0)
 ;          line_item#,ITLINE             .01    LINE ITEM NUMBER
"RTN","PRCHJS02",187,0)
 ;          line_item#,ITDESC             1      DESCRIPTION
"RTN","PRCHJS02",188,0)
 ;          line_item#,ITQTY              2      QUANTITY
"RTN","PRCHJS02",189,0)
 ;          line_item#,ITUOP              3      UNIT OF PURCHASE
"RTN","PRCHJS02",190,0)
 ;          line_item#,ITBOC              4      BOC
"RTN","PRCHJS02",191,0)
 ;          line_item#,ITMFN              5      ITEM MASTER FILE NO.
"RTN","PRCHJS02",192,0)
 ;          line_item#,ITSTOCK            6      STOCK NUMBER
"RTN","PRCHJS02",193,0)
 ;          line_item#,ITCOST             7      EST. ITEM (UNIT) COST
"RTN","PRCHJS02",194,0)
 ;          line_item#,ITDMID             17     DM DOC ID
"RTN","PRCHJS02",195,0)
 ;
"RTN","PRCHJS02",196,0)
 ;       DELIVERY SCHEDULE (#410.6) file: 
"RTN","PRCHJS02",197,0)
 ;        (Note: An item may have multiple delivery schedules)
"RTN","PRCHJS02",198,0)
 ;          line_item#,delivery_schedule#,DELREF  .01  REFERENCE 
"RTN","PRCHJS02",199,0)
 ;          line_item#,delivery_schedule#,DELDT   1    DELIVERY DATE
"RTN","PRCHJS02",200,0)
 ;          line_item#,delivery_schedule#,DELLOC  2    LOCATION
"RTN","PRCHJS02",201,0)
 ;          line_item#,delivery_schedule#,DELQTY  3    QTY TO BE DELIVERED
"RTN","PRCHJS02",202,0)
 ;
"RTN","PRCHJS02",203,0)
 ;       UNIT OF ISSUE (#420.5):
"RTN","PRCHJS02",204,0)
 ;          line_item#,UNITNM            .01   NAME
"RTN","PRCHJS02",205,0)
 ;          line_item#,UNITFNM           1     FULL NAME
"RTN","PRCHJS02",206,0)
 ;
"RTN","PRCHJS02",207,0)
 ;       ITEM MASTER (#441) file:
"RTN","PRCHJS02",208,0)
 ;          line_item#,IMNSN             5     NSN
"RTN","PRCHJS02",209,0)
 ;          line_item#,IMFSC             2     FSC
"RTN","PRCHJS02",210,0)
 ;          line_item#,IMMFG             19    MFG PART NO.
"RTN","PRCHJS02",211,0)
 ;          line_item#,IMFOOD            20    FOOD GROUP
"RTN","PRCHJS02",212,0)
 ;          line_item#,IMNIF             51    NIF ITEM NUMBER
"RTN","PRCHJS02",213,0)
 ;
"RTN","PRCHJS02",214,0)
 ;       VENDOR (#441.01) multiple:
"RTN","PRCHJS02",215,0)
 ;          line_item#,IMPKGM            1.6   PACKAGING MULTIPLE
"RTN","PRCHJS02",216,0)
 ;          line_item#,IMCTRCT           2     CONTRACT
"RTN","PRCHJS02",217,0)
 ;          line_item#,IMEXPDT           2.2   CONTRACT EXP. DATE
"RTN","PRCHJS02",218,0)
 ;          line_item#,IMNDC             4     NDC
"RTN","PRCHJS02",219,0)
 ;          line_item#,IMMIN             8     MINIMUM ORDER QTY
"RTN","PRCHJS02",220,0)
 ;          line_item#,IMMAX             8.5   MAXIMUM ORDER QTY  
"RTN","PRCHJS02",221,0)
 ;          line_item#,IMREQ             9     REQUIRED ORDER MULTIPLE
"RTN","PRCHJS02",222,0)
 ;          line_item#,IMUCF             10    UNIT CONVERSION FACTOR
"RTN","PRCHJS02",223,0)
 ;
"RTN","PRCHJS02",224,0)
 N PRCIENS,PRC4106,PRC4205,PRC441 ;iens string for GETS^DIQ
"RTN","PRCHJS02",225,0)
 N PRCFLDS,PRCDS,PRCUNIT,PRCIMF   ;results array for GETS^DIQ
"RTN","PRCHJS02",226,0)
 N PRCERR   ;error array for GETS^DIQ
"RTN","PRCHJS02",227,0)
 N PRCLINE  ;line item #
"RTN","PRCHJS02",228,0)
 N PRCITIEN ;ien of record in Item subfile
"RTN","PRCHJS02",229,0)
 N PRCI     ;item Description node subscript
"RTN","PRCHJS02",230,0)
 N PRCITM   ;item multiple subscript
"RTN","PRCHJS02",231,0)
 N PRCSUB1,PRCSUB2 ;file #410 global subscripts
"RTN","PRCHJS02",232,0)
 N PRCRSLT  ;function result
"RTN","PRCHJS02",233,0)
 ;
"RTN","PRCHJS02",234,0)
 S PRCRSLT=0
"RTN","PRCHJS02",235,0)
 S PRCER="Control Point Activity record not found"
"RTN","PRCHJS02",236,0)
 ;
"RTN","PRCHJS02",237,0)
 I $G(PRC410R)'>0 Q PRCRSLT
"RTN","PRCHJS02",238,0)
 I '$D(^PRCS(410,PRC410R)) Q PRCRSLT
"RTN","PRCHJS02",239,0)
 ;
"RTN","PRCHJS02",240,0)
 ;retrieve all fields and records in #410.02,10 multiple and place in ^TMP global
"RTN","PRCHJS02",241,0)
 S PRCIENS=PRC410R_","
"RTN","PRCHJS02",242,0)
 S PRCFLDS=$NA(^TMP("PRCHJITEM",$J)) K @PRCFLDS
"RTN","PRCHJS02",243,0)
 D GETS^DIQ(410,PRCIENS,"10*","IE",PRCFLDS,"PRCERR")
"RTN","PRCHJS02",244,0)
 I $D(PRCERR) S PRCER="Unable to retrieve line item data" Q PRCRSLT
"RTN","PRCHJS02",245,0)
 ;
"RTN","PRCHJS02",246,0)
 ;place line item fields into work global
"RTN","PRCHJS02",247,0)
 S PRCITM=""
"RTN","PRCHJS02",248,0)
 F  S PRCITM=$O(@PRCFLDS@(410.02,PRCITM)) Q:PRCITM=""  D
"RTN","PRCHJS02",249,0)
 . S PRCLINE=+$G(@PRCFLDS@(410.02,PRCITM,.01,"I"))
"RTN","PRCHJS02",250,0)
 . S @PRCWRK@(PRCLINE,"ITLINE")=$G(@PRCFLDS@(410.02,PRCITM,.01,"I"))_U_$G(@PRCFLDS@(410.02,PRCITM,.01,"E"))
"RTN","PRCHJS02",251,0)
 . S @PRCWRK@(PRCLINE,"ITQTY")=$G(@PRCFLDS@(410.02,PRCITM,2,"I"))_U_$G(@PRCFLDS@(410.02,PRCITM,2,"E"))
"RTN","PRCHJS02",252,0)
 . S @PRCWRK@(PRCLINE,"ITUOP")=$G(@PRCFLDS@(410.02,PRCITM,3,"I"))_U_$G(@PRCFLDS@(410.02,PRCITM,3,"E"))
"RTN","PRCHJS02",253,0)
 . S @PRCWRK@(PRCLINE,"ITBOC")=$G(@PRCFLDS@(410.02,PRCITM,4,"I"))_U_$G(@PRCFLDS@(410.02,PRCITM,4,"E"))
"RTN","PRCHJS02",254,0)
 . S @PRCWRK@(PRCLINE,"ITMFN")=$G(@PRCFLDS@(410.02,PRCITM,5,"I"))_U_$G(@PRCFLDS@(410.02,PRCITM,5,"E"))
"RTN","PRCHJS02",255,0)
 . S @PRCWRK@(PRCLINE,"ITSTOCK")=$G(@PRCFLDS@(410.02,PRCITM,6,"I"))_U_$G(@PRCFLDS@(410.02,PRCITM,6,"E"))
"RTN","PRCHJS02",256,0)
 . S @PRCWRK@(PRCLINE,"ITCOST")=$G(@PRCFLDS@(410.02,PRCITM,7,"I"))_U_$G(@PRCFLDS@(410.02,PRCITM,7,"E"))
"RTN","PRCHJS02",257,0)
 . S @PRCWRK@(PRCLINE,"ITDMID")=$G(@PRCFLDS@(410.02,PRCITM,17,"I"))_U_$G(@PRCFLDS@(410.02,PRCITM,17,"E"))
"RTN","PRCHJS02",258,0)
 . ;
"RTN","PRCHJS02",259,0)
 . ;resolve Line Item Number to Item entry's ien
"RTN","PRCHJS02",260,0)
 . S PRCITIEN=+$O(^PRCS(410,PRC410R,"IT","B",PRCLINE,0))
"RTN","PRCHJS02",261,0)
 . ;
"RTN","PRCHJS02",262,0)
 . ;place Item Description WP field into work global
"RTN","PRCHJS02",263,0)
 . N DIWL,DIWR,DIWF,X ;^DIWP input params
"RTN","PRCHJS02",264,0)
 . S DIWL=1,DIWR=200,DIWF="",PRCI=0
"RTN","PRCHJS02",265,0)
 . K ^UTILITY($J,"W") ;must kill before calling ^DIWP
"RTN","PRCHJS02",266,0)
 . ;loop thru Item Description nodes and place formatted text into ^UTILITY($J,"W")
"RTN","PRCHJS02",267,0)
 . F  S PRCI=$O(^PRCS(410,$G(PRC410R),"IT",PRCITIEN,1,PRCI)) Q:PRCI=""  D
"RTN","PRCHJS02",268,0)
 . . S X=$G(^PRCS(410,$G(PRC410R),"IT",PRCITIEN,1,PRCI,0)) D ^DIWP
"RTN","PRCHJS02",269,0)
 . ;merge formatted text into work global
"RTN","PRCHJS02",270,0)
 . I $D(^UTILITY($J,"W")) M @PRCWRK@(PRCLINE,"ITDESC")=^UTILITY($J,"W",1)
"RTN","PRCHJS02",271,0)
 . ;
"RTN","PRCHJS02",272,0)
 . ;for each item, place DELIVERY SCHEDULE (#410.6) fields into work global
"RTN","PRCHJS02",273,0)
 . S (PRCSUB1,PRCSUB2)=""
"RTN","PRCHJS02",274,0)
 . F  S PRCSUB1=$O(^PRCS(410,PRC410R,"IT",+PRCITM,2,"B",PRCSUB1)) Q:PRCSUB1=""  D
"RTN","PRCHJS02",275,0)
 . . S PRCSUB2=$O(^PRCS(410,PRC410R,"IT",+PRCITM,2,"B",PRCSUB1,PRCSUB2))
"RTN","PRCHJS02",276,0)
 . . Q:$G(PRCSUB2)'>0
"RTN","PRCHJS02",277,0)
 . . S PRC4106=$P($G(^PRCS(410,+$G(PRC410R),"IT",+PRCITM,2,PRCSUB2,0)),U,2)_"," ;ptr to #410.6
"RTN","PRCHJS02",278,0)
 . . K PRCDS
"RTN","PRCHJS02",279,0)
 . . I +PRC4106>0 D GETS^DIQ(410.6,PRC4106,"*","IE","PRCDS","PRCERR")
"RTN","PRCHJS02",280,0)
 . . Q:$D(PRCERR)
"RTN","PRCHJS02",281,0)
 . . S @PRCWRK@(PRCLINE,PRCSUB1,"DELREF")=$G(PRCDS(410.6,PRC4106,.01,"I"))_U_$G(PRCDS(410.6,PRC4106,.01,"E"))
"RTN","PRCHJS02",282,0)
 . . S @PRCWRK@(PRCLINE,PRCSUB1,"DELDT")=$G(PRCDS(410.6,PRC4106,1,"I"))_U_$G(PRCDS(410.6,PRC4106,1,"E"))
"RTN","PRCHJS02",283,0)
 . . S @PRCWRK@(PRCLINE,PRCSUB1,"DELLOC")=$G(PRCDS(410.6,PRC4106,2,"I"))_U_$G(PRCDS(410.6,PRC4106,2,"E"))
"RTN","PRCHJS02",284,0)
 . . S @PRCWRK@(PRCLINE,PRCSUB1,"DELQTY")=$G(PRCDS(410.6,PRC4106,3,"I"))_U_$G(PRCDS(410.6,PRC4106,3,"E"))
"RTN","PRCHJS02",285,0)
 . ;
"RTN","PRCHJS02",286,0)
 . ;quit if error encountered
"RTN","PRCHJS02",287,0)
 . Q:$D(PRCERR)
"RTN","PRCHJS02",288,0)
 . ;
"RTN","PRCHJS02",289,0)
 . ;for each item, place UNIT OF ISSUE (#420.5) fields into work global
"RTN","PRCHJS02",290,0)
 . S PRC4205=+$G(@PRCWRK@(PRCLINE,"ITUOP"))_","
"RTN","PRCHJS02",291,0)
 . K PRCUNIT
"RTN","PRCHJS02",292,0)
 . I +PRC4205>0 D GETS^DIQ(420.5,PRC4205,"*","IE","PRCUNIT","PRCERR")
"RTN","PRCHJS02",293,0)
 . I $D(PRCERR) S PRCER="Unable to retrieve Unit Of Issue record" Q
"RTN","PRCHJS02",294,0)
 . S @PRCWRK@(PRCLINE,"UNITNM")=$G(PRCUNIT(420.5,PRC4205,.01,"I"))_U_$G(PRCUNIT(420.5,PRC4205,.01,"E"))
"RTN","PRCHJS02",295,0)
 . S @PRCWRK@(PRCLINE,"UNITFNM")=$G(PRCUNIT(420.5,PRC4205,1,"I"))_U_$G(PRCUNIT(420.5,PRC4205,1,"E"))
"RTN","PRCHJS02",296,0)
 . ;
"RTN","PRCHJS02",297,0)
 . ;for each item, place ITEM MASTER (#441) fields into work global
"RTN","PRCHJS02",298,0)
 . S PRC441=+$G(@PRCWRK@(PRCLINE,"ITMFN"))_","
"RTN","PRCHJS02",299,0)
 . K PRCIMF
"RTN","PRCHJS02",300,0)
 . I +PRC441>0 D GETS^DIQ(441,PRC441,"**","IE","PRCIMF","PRCERR")
"RTN","PRCHJS02",301,0)
 . I $D(PRCERR) S PRCER="Unable to retrieve Item Master record" Q
"RTN","PRCHJS02",302,0)
 . S @PRCWRK@(PRCLINE,"IMFSC")=$G(PRCIMF(441,PRC441,2,"I"))_U_$G(PRCIMF(441,PRC441,2,"E"))
"RTN","PRCHJS02",303,0)
 . S @PRCWRK@(PRCLINE,"IMNSN")=$G(PRCIMF(441,PRC441,5,"I"))_U_$G(PRCIMF(441,PRC441,5,"E"))
"RTN","PRCHJS02",304,0)
 . S @PRCWRK@(PRCLINE,"IMMFG")=$G(PRCIMF(441,PRC441,19,"I"))_U_$G(PRCIMF(441,PRC441,19,"E"))
"RTN","PRCHJS02",305,0)
 . S @PRCWRK@(PRCLINE,"IMFOOD")=$G(PRCIMF(441,PRC441,20,"I"))_U_$G(PRCIMF(441,PRC441,20,"E"))
"RTN","PRCHJS02",306,0)
 . S @PRCWRK@(PRCLINE,"IMNIF")=$G(PRCIMF(441,PRC441,51,"I"))_U_$G(PRCIMF(441,PRC441,51,"E"))
"RTN","PRCHJS02",307,0)
 . ;
"RTN","PRCHJS02",308,0)
 . ;use Vendor ptr (#12) field of (#410) file to obtain the associated
"RTN","PRCHJS02",309,0)
 . ;VENDOR (#441.01) sub-file record and place field into work global
"RTN","PRCHJS02",310,0)
 . S PRC441=$$GET1^DIQ(410,PRC410R_",",12,"I")_","_PRC441
"RTN","PRCHJS02",311,0)
 . S @PRCWRK@(PRCLINE,"IMPKGM")=$G(PRCIMF(441.01,PRC441,1.6,"I"))_U_$G(PRCIMF(441.01,PRC441,1.6,"E"))
"RTN","PRCHJS02",312,0)
 . S @PRCWRK@(PRCLINE,"IMCTRCT")=$G(PRCIMF(441.01,PRC441,2,"I"))_U_$G(PRCIMF(441.01,PRC441,2,"E"))
"RTN","PRCHJS02",313,0)
 . S @PRCWRK@(PRCLINE,"IMEXPDT")=$G(PRCIMF(441.01,PRC441,2.2,"I"))_U_$G(PRCIMF(441.01,PRC441,2.2,"E"))
"RTN","PRCHJS02",314,0)
 . ;need to convert computed field CONTRACT EXP. DATE to internal FM date format
"RTN","PRCHJS02",315,0)
 . I $P(@PRCWRK@(PRCLINE,"IMEXPDT"),U)]"" D
"RTN","PRCHJS02",316,0)
 . . N X,Y ;input/output vars for ^%DT
"RTN","PRCHJS02",317,0)
 . . S X=$P(@PRCWRK@(PRCLINE,"IMEXPDT"),U)
"RTN","PRCHJS02",318,0)
 . . D ^%DT
"RTN","PRCHJS02",319,0)
 . . S $P(@PRCWRK@(PRCLINE,"IMEXPDT"),U)=$S(Y>0:Y,1:"")
"RTN","PRCHJS02",320,0)
 . S @PRCWRK@(PRCLINE,"IMNDC")=$G(PRCIMF(441.01,PRC441,4,"I"))_U_$G(PRCIMF(441.01,PRC441,4,"E"))
"RTN","PRCHJS02",321,0)
 . S @PRCWRK@(PRCLINE,"IMMIN")=$G(PRCIMF(441.01,PRC441,8,"I"))_U_$G(PRCIMF(441.01,PRC441,8,"E"))
"RTN","PRCHJS02",322,0)
 . S @PRCWRK@(PRCLINE,"IMMAX")=$G(PRCIMF(441.01,PRC441,8.5,"I"))_U_$G(PRCIMF(441.01,PRC441,8.5,"E"))
"RTN","PRCHJS02",323,0)
 . S @PRCWRK@(PRCLINE,"IMREQ")=$G(PRCIMF(441.01,PRC441,9,"I"))_U_$G(PRCIMF(441.01,PRC441,9,"E"))
"RTN","PRCHJS02",324,0)
 . S @PRCWRK@(PRCLINE,"IMUCF")=$G(PRCIMF(441.01,PRC441,10,"I"))_U_$G(PRCIMF(441.01,PRC441,10,"E"))
"RTN","PRCHJS02",325,0)
 ;
"RTN","PRCHJS02",326,0)
 ;cleanup ^TMP global
"RTN","PRCHJS02",327,0)
 K @PRCFLDS
"RTN","PRCHJS02",328,0)
 ;
"RTN","PRCHJS02",329,0)
 ;success
"RTN","PRCHJS02",330,0)
 S PRCRSLT=1 K PRCER
"RTN","PRCHJS02",331,0)
 ;
"RTN","PRCHJS02",332,0)
 Q PRCRSLT
"RTN","PRCHJS03")
0^7^B38615416^n/a
"RTN","PRCHJS03",1,0)
PRCHJS03 ;OI&T/KCL - IFCAP/ECMS INTERFACE RETRIEVE 2237 DATA CONT.;6/12/12
"RTN","PRCHJS03",2,0)
 ;;5.1;IFCAP;**167**;Oct 20, 2000;Build 17
"RTN","PRCHJS03",3,0)
 ;Per VHA Directive 2004-38, this routine should not be modified.
"RTN","PRCHJS03",4,0)
 ;
"RTN","PRCHJS03",5,0)
GET440(PRC440R,PRCWRK,PRCER) ;Get #440 data
"RTN","PRCHJS03",6,0)
 ;This function is used to retrieve specified data
"RTN","PRCHJS03",7,0)
 ;elements from from the VENDOR (#440) file and places
"RTN","PRCHJS03",8,0)
 ;them into ^TMP work global. Data is placed into the
"RTN","PRCHJS03",9,0)
 ;work global in both internal and external format.
"RTN","PRCHJS03",10,0)
 ;
"RTN","PRCHJS03",11,0)
 ;  Input:
"RTN","PRCHJS03",12,0)
 ;    PRC440R - (required) IEN of record in VENDOR (#440) file
"RTN","PRCHJS03",13,0)
 ;     PRCWRK - (required) name of work global containing data elements
"RTN","PRCHJS03",14,0)
 ;
"RTN","PRCHJS03",15,0)
 ; Output:
"RTN","PRCHJS03",16,0)
 ;   Function value - 1 on success, 0 on failure
"RTN","PRCHJS03",17,0)
 ;            PRCER - (optional) on failure, an error message is returned,
"RTN","PRCHJS03",18,0)
 ;                    pass by reference
"RTN","PRCHJS03",19,0)
 ;           PRCWRK - work global containing the #440 data elements:
"RTN","PRCHJS03",20,0)
 ;
"RTN","PRCHJS03",21,0)
 ;          Subscript  Field#  Data Element
"RTN","PRCHJS03",22,0)
 ;          ---------  ------  -------------------
"RTN","PRCHJS03",23,0)
 ;          VEDI       .2      EDI VENDOR?
"RTN","PRCHJS03",24,0)
 ;          VID        .4      VENDOR ID NUMBER
"RTN","PRCHJS03",25,0)
 ;          VACT       5.1     ACCOUNT NO.
"RTN","PRCHJS03",26,0)
 ;          VGDV       5.2     GUARANTEED DELIVERY VENDOR
"RTN","PRCHJS03",27,0)
 ;          VPAYCON    17      PAYMENT CONTACT PERSON
"RTN","PRCHJS03",28,0)
 ;          VPAYPH     17.2    PAYMENT PHONE NO.
"RTN","PRCHJS03",29,0)
 ;          VPAYAD1    17.3    PAYMENT ADDRESS1
"RTN","PRCHJS03",30,0)
 ;          VPAYAD2    17.4    PAYMENT ADDRESS2
"RTN","PRCHJS03",31,0)
 ;          VPAYAD3    17.5    PAYMENT ADDRESS3
"RTN","PRCHJS03",32,0)
 ;          VPAYAD4    17.6    PAYMENT ADDRESS4
"RTN","PRCHJS03",33,0)
 ;          VPAYCTY    17.7    PAYMENT CITY
"RTN","PRCHJS03",34,0)
 ;          VPAYST     17.8    PAYMENT STATE
"RTN","PRCHJS03",35,0)
 ;          VPAYZIP    17.9    PAYMENT ZIP CODE
"RTN","PRCHJS03",36,0)
 ;          VDUNS      18.3    DUN & BRADSTREET #
"RTN","PRCHJS03",37,0)
 ;          VFMSCD     34      FMS VENDOR CODE       
"RTN","PRCHJS03",38,0)
 ;          VFMSNM     34.5    FMS VENDOR NAME
"RTN","PRCHJS03",39,0)
 ;          VALTADD    35      ALT-ADDR-IND
"RTN","PRCHJS03",40,0)
 ;          VFAX       46      FAX #
"RTN","PRCHJS03",41,0)
 ;
"RTN","PRCHJS03",42,0)
 N PRCIENS ;iens string for GETS^DIQ
"RTN","PRCHJS03",43,0)
 N PRCFLDS ;results array for GETS^DIQ
"RTN","PRCHJS03",44,0)
 N PRCERR  ;error msg for GETS^DIQ
"RTN","PRCHJS03",45,0)
 N PRCRSLT ;function result
"RTN","PRCHJS03",46,0)
 ;
"RTN","PRCHJS03",47,0)
 S PRCRSLT=0
"RTN","PRCHJS03",48,0)
 S PRCER="Vendor record not found"
"RTN","PRCHJS03",49,0)
 ;
"RTN","PRCHJS03",50,0)
 I $G(PRC440R)>0,$D(^PRC(440,PRC440R)) D
"RTN","PRCHJS03",51,0)
 . ;
"RTN","PRCHJS03",52,0)
 . ;retrieve fields
"RTN","PRCHJS03",53,0)
 . S PRCIENS=PRC440R_","
"RTN","PRCHJS03",54,0)
 . D GETS^DIQ(440,PRCIENS,"*","IE","PRCFLDS","PRCERR")
"RTN","PRCHJS03",55,0)
 . I $D(PRCERR) S PRCER="Unable to retrieve Vendor record" Q
"RTN","PRCHJS03",56,0)
 . ;
"RTN","PRCHJS03",57,0)
 . ;place top level #440 fields into work global
"RTN","PRCHJS03",58,0)
 . S @PRCWRK@("VEDI")=$G(PRCFLDS(440,PRCIENS,.2,"I"))_U_$G(PRCFLDS(440,PRCIENS,.2,"E"))
"RTN","PRCHJS03",59,0)
 . S @PRCWRK@("VID")=$G(PRCFLDS(440,PRCIENS,.4,"I"))_U_$G(PRCFLDS(440,PRCIENS,.4,"E"))
"RTN","PRCHJS03",60,0)
 . S @PRCWRK@("VACT")=$G(PRCFLDS(440,PRCIENS,5.1,"I"))_U_$G(PRCFLDS(440,PRCIENS,5.1,"E"))
"RTN","PRCHJS03",61,0)
 . S @PRCWRK@("VGDV")=$G(PRCFLDS(440,PRCIENS,5.2,"I"))_U_$G(PRCFLDS(440,PRCIENS,5.2,"E"))
"RTN","PRCHJS03",62,0)
 . S @PRCWRK@("VPAYCON")=$G(PRCFLDS(440,PRCIENS,17,"I"))_U_$G(PRCFLDS(440,PRCIENS,17,"E"))
"RTN","PRCHJS03",63,0)
 . S @PRCWRK@("VPAYPH")=$G(PRCFLDS(440,PRCIENS,17.2,"I"))_U_$G(PRCFLDS(440,PRCIENS,17.2,"E"))
"RTN","PRCHJS03",64,0)
 . S @PRCWRK@("VPAYAD1")=$G(PRCFLDS(440,PRCIENS,17.3,"I"))_U_$G(PRCFLDS(440,PRCIENS,17.3,"E"))
"RTN","PRCHJS03",65,0)
 . S @PRCWRK@("VPAYAD2")=$G(PRCFLDS(440,PRCIENS,17.4,"I"))_U_$G(PRCFLDS(440,PRCIENS,17.4,"E"))
"RTN","PRCHJS03",66,0)
 . S @PRCWRK@("VPAYAD3")=$G(PRCFLDS(440,PRCIENS,17.5,"I"))_U_$G(PRCFLDS(440,PRCIENS,17.5,"E"))
"RTN","PRCHJS03",67,0)
 . S @PRCWRK@("VPAYAD4")=$G(PRCFLDS(440,PRCIENS,17.6,"I"))_U_$G(PRCFLDS(440,PRCIENS,17.6,"E"))
"RTN","PRCHJS03",68,0)
 . S @PRCWRK@("VPAYCTY")=$G(PRCFLDS(440,PRCIENS,17.7,"I"))_U_$G(PRCFLDS(440,PRCIENS,17.7,"E"))
"RTN","PRCHJS03",69,0)
 . S @PRCWRK@("VPAYST")=$G(PRCFLDS(440,PRCIENS,17.8,"I"))_U_$G(PRCFLDS(440,PRCIENS,17.8,"E"))
"RTN","PRCHJS03",70,0)
 . S @PRCWRK@("VPAYZIP")=$G(PRCFLDS(440,PRCIENS,17.9,"I"))_U_$G(PRCFLDS(440,PRCIENS,17.9,"E"))
"RTN","PRCHJS03",71,0)
 . S @PRCWRK@("VDUNS")=$G(PRCFLDS(440,PRCIENS,18.3,"I"))_U_$G(PRCFLDS(440,PRCIENS,18.3,"E"))
"RTN","PRCHJS03",72,0)
 . S @PRCWRK@("VFMSCD")=$G(PRCFLDS(440,PRCIENS,34,"I"))_U_$G(PRCFLDS(440,PRCIENS,34,"E"))
"RTN","PRCHJS03",73,0)
 . S @PRCWRK@("VFMSNM")=$G(PRCFLDS(440,PRCIENS,34.5,"I"))_U_$G(PRCFLDS(440,PRCIENS,34.5,"E"))
"RTN","PRCHJS03",74,0)
 . S @PRCWRK@("VALTADD")=$G(PRCFLDS(440,PRCIENS,35,"I"))_U_$G(PRCFLDS(440,PRCIENS,35,"E"))
"RTN","PRCHJS03",75,0)
 . S @PRCWRK@("VFAX")=$G(PRCFLDS(440,PRCIENS,46,"I"))_U_$G(PRCFLDS(440,PRCIENS,46,"E"))
"RTN","PRCHJS03",76,0)
 . ;
"RTN","PRCHJS03",77,0)
 . ;success
"RTN","PRCHJS03",78,0)
 . S PRCRSLT=1 K PRCER
"RTN","PRCHJS03",79,0)
 ;
"RTN","PRCHJS03",80,0)
 Q PRCRSLT
"RTN","PRCHJS03",81,0)
 ;
"RTN","PRCHJS03",82,0)
 ;
"RTN","PRCHJS03",83,0)
GET443(PRCTRAN,PRCWRK,PRCER) ;Get #443 data
"RTN","PRCHJS03",84,0)
 ;This function is used to retrieve specified data
"RTN","PRCHJS03",85,0)
 ;elements from the REQUEST WORKSHEET (#443) file for
"RTN","PRCHJS03",86,0)
 ;a 2237 Transaction Number and places them into a
"RTN","PRCHJS03",87,0)
 ;^TMP work global. It also obtains the Title of the
"RTN","PRCHJS03",88,0)
 ;Accountable Officer from the NEW PERSON (#200) file.
"RTN","PRCHJS03",89,0)
 ;Data is placed into the work global in both internal
"RTN","PRCHJS03",90,0)
 ;and external format.
"RTN","PRCHJS03",91,0)
 ;
"RTN","PRCHJS03",92,0)
 ; Supported ICR:
"RTN","PRCHJS03",93,0)
 ;   #4329: Allows retrieval of TITLE (#8) field from NEW PERSON (#200)
"RTN","PRCHJS03",94,0)
 ;          file using FM read.
"RTN","PRCHJS03",95,0)
 ;
"RTN","PRCHJS03",96,0)
 ;  Input:
"RTN","PRCHJS03",97,0)
 ;    PRCTRAN - (required) 2237 Transaction Number
"RTN","PRCHJS03",98,0)
 ;     PRCWRK - (required) name of work global containing data elements
"RTN","PRCHJS03",99,0)
 ;
"RTN","PRCHJS03",100,0)
 ;  Output:
"RTN","PRCHJS03",101,0)
 ;   Function value - 1 on success, 0 on failure
"RTN","PRCHJS03",102,0)
 ;            PRCER - (optional) on failure, an error message is returned,
"RTN","PRCHJS03",103,0)
 ;                    pass by ref
"RTN","PRCHJS03",104,0)
 ;           PRCWRK - work global containing the #443 & #200 data elements:
"RTN","PRCHJS03",105,0)
 ;
"RTN","PRCHJS03",106,0)
 ;           Subscript  File,Field#   Data Element
"RTN","PRCHJS03",107,0)
 ;           ---------  -----------   -------------------
"RTN","PRCHJS03",108,0)
 ;           AO         443,2         ACCOUNTABLE OFFICER
"RTN","PRCHJS03",109,0)
 ;           AOESIG     443,4         ESIG DATE/TIME
"RTN","PRCHJS03",110,0)
 ;           EXPEND     443,13        EXPENDABLE/NONEXPENDABLE
"RTN","PRCHJS03",111,0)
 ;           AOTITLE    200,8         TITLE
"RTN","PRCHJS03",112,0)
 ;
"RTN","PRCHJS03",113,0)
 N PRCIENS ;iens string for GETS^DIQ
"RTN","PRCHJS03",114,0)
 N PRCFLDS ;results array for GETS^DIQ
"RTN","PRCHJS03",115,0)
 N PRCERR  ;FM error array
"RTN","PRCHJS03",116,0)
 N PRCREC  ;ien of record in #443 file
"RTN","PRCHJS03",117,0)
 N PRCRSLT ;function result
"RTN","PRCHJS03",118,0)
 ;
"RTN","PRCHJS03",119,0)
 S PRCRSLT=0
"RTN","PRCHJS03",120,0)
 S PRCER="Request Worksheet record not found"
"RTN","PRCHJS03",121,0)
 ;
"RTN","PRCHJS03",122,0)
 ; drops out of DO block on failure
"RTN","PRCHJS03",123,0)
 I $G(PRCTRAN)]"" D
"RTN","PRCHJS03",124,0)
 . ;
"RTN","PRCHJS03",125,0)
 . ;lookup 2237 Transaction Number
"RTN","PRCHJS03",126,0)
 . S PRCREC=$$FIND1^DIC(443,"","X",$G(PRCTRAN),"","","PRCERR")
"RTN","PRCHJS03",127,0)
 . Q:('PRCREC)!($D(PRCERR))
"RTN","PRCHJS03",128,0)
 . ;
"RTN","PRCHJS03",129,0)
 . ;retrieve #443 fields
"RTN","PRCHJS03",130,0)
 . S PRCIENS=+$G(PRCREC)_","
"RTN","PRCHJS03",131,0)
 . D GETS^DIQ(443,PRCIENS,"2;4;13","IE","PRCFLDS","PRCERR")
"RTN","PRCHJS03",132,0)
 . I $D(PRCERR) S PRCER="Unable to retrieve Request Worksheet record" Q
"RTN","PRCHJS03",133,0)
 . ;
"RTN","PRCHJS03",134,0)
 . ;place #443 fields into work global
"RTN","PRCHJS03",135,0)
 . S @PRCWRK@("AO")=$G(PRCFLDS(443,PRCIENS,2,"I"))_U_$G(PRCFLDS(443,PRCIENS,2,"E"))
"RTN","PRCHJS03",136,0)
 . S @PRCWRK@("AOESIG")=$G(PRCFLDS(443,PRCIENS,4,"I"))_U_$G(PRCFLDS(443,PRCIENS,4,"E"))
"RTN","PRCHJS03",137,0)
 . S @PRCWRK@("EXPEND")=$G(PRCFLDS(443,PRCIENS,13,"I"))_U_$G(PRCFLDS(443,PRCIENS,13,"E"))
"RTN","PRCHJS03",138,0)
 . ;
"RTN","PRCHJS03",139,0)
 . ;retrieve Accountable Officer (Title)
"RTN","PRCHJS03",140,0)
 . S PRCIENS=+$G(@PRCWRK@("AO"))_"," ;ptr to #200 file
"RTN","PRCHJS03",141,0)
 . I +$G(PRCIENS) D GETS^DIQ(200,PRCIENS,"8","IE","PRCFLDS","PRCERR")
"RTN","PRCHJS03",142,0)
 . I $D(PRCERR) S PRCER="Unable to retrieve Accountable Officer (Title)" Q
"RTN","PRCHJS03",143,0)
 . S @PRCWRK@("AOTITLE")=$G(PRCFLDS(200,PRCIENS,8,"I"))_U_$G(PRCFLDS(200,PRCIENS,8,"E"))
"RTN","PRCHJS03",144,0)
 . ;
"RTN","PRCHJS03",145,0)
 . ;success
"RTN","PRCHJS03",146,0)
 . S PRCRSLT=1 K PRCER
"RTN","PRCHJS03",147,0)
 ;
"RTN","PRCHJS03",148,0)
 Q PRCRSLT
"RTN","PRCHJS03",149,0)
 ;
"RTN","PRCHJS03",150,0)
 ;
"RTN","PRCHJS03",151,0)
GET445(PRC445R,PRCWRK,PRCER) ;Get GENERIC INVENTORY (#445) data
"RTN","PRCHJS03",152,0)
 ;This function retrieves 2237 data elements from
"RTN","PRCHJS03",153,0)
 ;the GENERIC INVENTORY (#445) file and places them
"RTN","PRCHJS03",154,0)
 ;into a ^TMP work global. Data is placed into the work
"RTN","PRCHJS03",155,0)
 ;global in both internal and external format.
"RTN","PRCHJS03",156,0)
 ;
"RTN","PRCHJS03",157,0)
 ;   Input:
"RTN","PRCHJS03",158,0)
 ;    PRC445R - (required) IEN of record in GENERIC INVENTORY (#445) file
"RTN","PRCHJS03",159,0)
 ;     PRCWRK - (required) name of work global containing data elements
"RTN","PRCHJS03",160,0)
 ;
"RTN","PRCHJS03",161,0)
 ;  Output:
"RTN","PRCHJS03",162,0)
 ;   Function value - 1 on success, 0 on failure
"RTN","PRCHJS03",163,0)
 ;            PRCER - (optional) on failure, an error message is returned,
"RTN","PRCHJS03",164,0)
 ;                    pass by reference
"RTN","PRCHJS03",165,0)
 ;           PRCWRK - work global containing the #445 data elements:
"RTN","PRCHJS03",166,0)
 ;
"RTN","PRCHJS03",167,0)
 ;         Subscript   Field#  Data Element
"RTN","PRCHJS03",168,0)
 ;         ---------   ------  -------------------
"RTN","PRCHJS03",169,0)
 ;          INVPT      .01     INVENTORY POINT
"RTN","PRCHJS03",170,0)
 ;          INVABREV   .8      ABBREVIATED NAME
"RTN","PRCHJS03",171,0)
 ;
"RTN","PRCHJS03",172,0)
 N PRCIENS ;iens string for GETS^DIQ
"RTN","PRCHJS03",173,0)
 N PRCFLDS ;results array for GETS^DIQ
"RTN","PRCHJS03",174,0)
 N PRCERR  ;error array for GETS^DIQ
"RTN","PRCHJS03",175,0)
 N PRCRSLT ;function result
"RTN","PRCHJS03",176,0)
 ;
"RTN","PRCHJS03",177,0)
 S PRCRSLT=0
"RTN","PRCHJS03",178,0)
 S PRCER="Generic Inventory record not found"
"RTN","PRCHJS03",179,0)
 ;
"RTN","PRCHJS03",180,0)
 I $G(PRC445R)>0,$D(^PRCP(445,PRC445R)) D
"RTN","PRCHJS03",181,0)
 . ;
"RTN","PRCHJS03",182,0)
 . ;retrieve data from (#445) file
"RTN","PRCHJS03",183,0)
 . S PRCIENS=PRC445R_","
"RTN","PRCHJS03",184,0)
 . D GETS^DIQ(445,PRCIENS,"*","IE","PRCFLDS","PRCERR")
"RTN","PRCHJS03",185,0)
 . I $D(PRCERR) S PRCER="Unable to retrieve Generic Inventory record" Q
"RTN","PRCHJS03",186,0)
 . ;
"RTN","PRCHJS03",187,0)
 . ;place (#445) fields into work global
"RTN","PRCHJS03",188,0)
 . S @PRCWRK@("INVPT")=$G(PRCFLDS(445,PRCIENS,.01,"I"))_U_$G(PRCFLDS(445,PRCIENS,.01,"E"))
"RTN","PRCHJS03",189,0)
 . S @PRCWRK@("INVABREV")=$G(PRCFLDS(445,PRCIENS,.8,"I"))_U_$G(PRCFLDS(445,PRCIENS,.8,"E"))
"RTN","PRCHJS03",190,0)
 . ;
"RTN","PRCHJS03",191,0)
 . ;success
"RTN","PRCHJS03",192,0)
 . S PRCRSLT=1 K PRCER
"RTN","PRCHJS03",193,0)
 ;
"RTN","PRCHJS03",194,0)
 Q PRCRSLT
"RTN","PRCHJS04")
0^8^B12824408^n/a
"RTN","PRCHJS04",1,0)
PRCHJS04 ;OI&T/KCL - IFCAP/ECMS INTERFACE 2237 MSG BUILD SEND;7/2/12
"RTN","PRCHJS04",2,0)
 ;;5.1;IFCAP;**167**;Oct 20, 2000;Build 17
"RTN","PRCHJS04",3,0)
 ;Per VHA Directive 2004-38, this routine should not be modified.
"RTN","PRCHJS04",4,0)
 ;
"RTN","PRCHJS04",5,0)
OMNO07(PRCWRK,PRCER) ;Build/Send HL7 OMN^O07 message
"RTN","PRCHJS04",6,0)
 ;This function builds a single HL7 OMN^O07 message containing a
"RTN","PRCHJS04",7,0)
 ;2237 transaction and queues it for transmission to eCMS using HLO APIs.
"RTN","PRCHJS04",8,0)
 ;
"RTN","PRCHJS04",9,0)
 ; Supported ICR:
"RTN","PRCHJS04",10,0)
 ;  #5818 - Obtain the TCP/IP PORT (OPTIMIZED) field for a record
"RTN","PRCHJS04",11,0)
 ;          in the HL LOGICAL LINK (#870) file using $$PORT2^HLOTLNK.
"RTN","PRCHJS04",12,0)
 ;
"RTN","PRCHJS04",13,0)
 ;  Input:
"RTN","PRCHJS04",14,0)
 ;   PRCWRK - (required) name of work global containing 2237 data elements
"RTN","PRCHJS04",15,0)
 ;
"RTN","PRCHJS04",16,0)
 ; Output:
"RTN","PRCHJS04",17,0)
 ;   Function value - on success, returns IEN of the message in the HLO
"RTN","PRCHJS04",18,0)
 ;                    MESSAGES (#778) file. Returns 0 on failure.
"RTN","PRCHJS04",19,0)
 ;            PRCER - (optional) on failure, an error message is returned,
"RTN","PRCHJS04",20,0)
 ;                    pass by ref
"RTN","PRCHJS04",21,0)
 ;
"RTN","PRCHJS04",22,0)
 N PRCPARMS ;HLO input parameters
"RTN","PRCHJS04",23,0)
 N PRCWHOTO ;HLO send to parameters
"RTN","PRCHJS04",24,0)
 N PRCMSG   ;HLO workspace used to build message
"RTN","PRCHJS04",25,0)
 N PRCIDX   ;line items subscript
"RTN","PRCHJS04",26,0)
 N PRCRSLT  ;function result
"RTN","PRCHJS04",27,0)
 ;
"RTN","PRCHJS04",28,0)
 S PRCRSLT=0
"RTN","PRCHJS04",29,0)
 ;
"RTN","PRCHJS04",30,0)
 ;start building a single HL7 msg
"RTN","PRCHJS04",31,0)
 S PRCPARMS("MESSAGE TYPE")="OMN"
"RTN","PRCHJS04",32,0)
 S PRCPARMS("EVENT")="O07"
"RTN","PRCHJS04",33,0)
 S PRCPARMS("FIELD SEPARATOR")="|"
"RTN","PRCHJS04",34,0)
 S PRCPARMS("ENCODING CHARACTERS")="^~\&"
"RTN","PRCHJS04",35,0)
 S PRCPARMS("MESSAGE STRUCTURE")="OMN_O07"
"RTN","PRCHJS04",36,0)
 S PRCPARMS("VERSION")=2.5
"RTN","PRCHJS04",37,0)
 S PRCPARMS("ACCEPT ACK TYPE")="AL" ;commit ACKs are required to be returned
"RTN","PRCHJS04",38,0)
 S PRCPARMS("APP ACK TYPE")="AL"    ;application ACKs are required to be returned    
"RTN","PRCHJS04",39,0)
 S PRCPARMS("SENDING APPLICATION")="PRCHJ_IFCAP_2237_SEND"
"RTN","PRCHJS04",40,0)
 I '$$NEWMSG^HLOAPI(.PRCPARMS,.PRCMSG,.PRCER) Q PRCRSLT
"RTN","PRCHJS04",41,0)
 ;
"RTN","PRCHJS04",42,0)
 ;build NTE segs for 2237 Special Remarks, Justification, and Comments
"RTN","PRCHJS04",43,0)
 I '$$NTE^PRCHJS06(PRCWRK,.PRCMSG,.PRCER) Q PRCRSLT
"RTN","PRCHJS04",44,0)
 ;
"RTN","PRCHJS04",45,0)
 ;loop thru 2237 line items and build the optional Order Group segs:
"RTN","PRCHJS04",46,0)
 ;  {(ORDER)ORC,{[TQ1]}RQD,RQ1,[ZA1],{NTE}}
"RTN","PRCHJS04",47,0)
 S PRCIDX=0
"RTN","PRCHJS04",48,0)
 F  S PRCIDX=$O(@PRCWRK@(PRCIDX)) Q:'(+$G(PRCIDX))!($G(PRCER)]"")  D
"RTN","PRCHJS04",49,0)
 . ;
"RTN","PRCHJS04",50,0)
 . ;build ORC seg
"RTN","PRCHJS04",51,0)
 . I '$$ORC^PRCHJS05(PRCWRK,.PRCMSG,.PRCER) Q
"RTN","PRCHJS04",52,0)
 . ;
"RTN","PRCHJS04",53,0)
 . ;if delivery schedule(s) for item, build TQ1 seg(s)
"RTN","PRCHJS04",54,0)
 . I $O(@PRCWRK@(PRCIDX,0)) D
"RTN","PRCHJS04",55,0)
 . . I '$$TQ1^PRCHJS05(PRCWRK,.PRCMSG,PRCIDX,.PRCER) Q
"RTN","PRCHJS04",56,0)
 . Q:$G(PRCER)]""
"RTN","PRCHJS04",57,0)
 . ;
"RTN","PRCHJS04",58,0)
 . ;build RQD seg
"RTN","PRCHJS04",59,0)
 . I '$$RQD^PRCHJS05(PRCWRK,.PRCMSG,PRCIDX,.PRCER) Q
"RTN","PRCHJS04",60,0)
 . ;
"RTN","PRCHJS04",61,0)
 . ;build RQ1 seg
"RTN","PRCHJS04",62,0)
 . I '$$RQ1^PRCHJS05(PRCWRK,.PRCMSG,PRCIDX,.PRCER) Q
"RTN","PRCHJS04",63,0)
 . ;
"RTN","PRCHJS04",64,0)
 . ;build ZA1 seg
"RTN","PRCHJS04",65,0)
 . I '$$ZA1^PRCHJS05(PRCWRK,.PRCMSG,PRCIDX,.PRCER) Q
"RTN","PRCHJS04",66,0)
 . ;
"RTN","PRCHJS04",67,0)
 . ;build NTE seg(s)
"RTN","PRCHJS04",68,0)
 . I '$$NTEITEM^PRCHJS05(PRCWRK,.PRCMSG,PRCIDX,.PRCER) Q
"RTN","PRCHJS04",69,0)
 ;
"RTN","PRCHJS04",70,0)
 ;quit if error encountered building Order Group segs
"RTN","PRCHJS04",71,0)
 Q:$G(PRCER)]"" PRCRSLT
"RTN","PRCHJS04",72,0)
 ;
"RTN","PRCHJS04",73,0)
 ;build ZZ1 seg
"RTN","PRCHJS04",74,0)
 I '$$ZZ1^PRCHJS06(PRCWRK,.PRCMSG,.PRCER) Q PRCRSLT
"RTN","PRCHJS04",75,0)
 ;
"RTN","PRCHJS04",76,0)
 ;build ZZ2 seg
"RTN","PRCHJS04",77,0)
 I '$$ZZ2^PRCHJS06(PRCWRK,.PRCMSG,.PRCER) Q PRCRSLT
"RTN","PRCHJS04",78,0)
 ;
"RTN","PRCHJS04",79,0)
 ;build ZZ3 seg
"RTN","PRCHJS04",80,0)
 I '$$ZZ3^PRCHJS06(PRCWRK,.PRCMSG,.PRCER) Q PRCRSLT
"RTN","PRCHJS04",81,0)
 ;
"RTN","PRCHJS04",82,0)
 ;send a single HL7 msg
"RTN","PRCHJS04",83,0)
 S PRCWHOTO("RECEIVING APPLICATION")="PRCHJ_ECMS_2237_SEND"
"RTN","PRCHJS04",84,0)
 S PRCWHOTO("STATION NUMBER")=200 ;allow VIE box to route msg to Austin (eCMS)
"RTN","PRCHJS04",85,0)
 ;set these 2 params to allow HLO to send msg to VIE box
"RTN","PRCHJS04",86,0)
 S PRCWHOTO("MIDDLEWARE LINK NAME")="PRCHJ_ECMS"  ;name of logical link for the interface engine
"RTN","PRCHJS04",87,0)
 S PRCWHOTO("PORT")=$$PORT2^HLOTLNK("PRCHJ_ECMS") ;get port from logical link record
"RTN","PRCHJS04",88,0)
 I PRCWHOTO("PORT")']"" S PRCER="Unable to obtain HLO port from logical link record" Q PRCRSLT
"RTN","PRCHJS04",89,0)
 S PRCRSLT=$$SENDONE^HLOAPI1(.PRCMSG,.PRCPARMS,.PRCWHOTO,.PRCER) ;returns msg ien, 0 on failure
"RTN","PRCHJS04",90,0)
 ;
"RTN","PRCHJS04",91,0)
 Q PRCRSLT
"RTN","PRCHJS05")
0^9^B105876352^n/a
"RTN","PRCHJS05",1,0)
PRCHJS05 ;OI&T/KCL - IFCAP/ECMS INTERFACE 2237 SEND SEG BUILDERS;6/12/12
"RTN","PRCHJS05",2,0)
 ;;5.1;IFCAP;**167**;Oct 20, 2000;Build 17
"RTN","PRCHJS05",3,0)
 ;Per VHA Directive 2004-38, this routine should not be modified.
"RTN","PRCHJS05",4,0)
 ;
"RTN","PRCHJS05",5,0)
ORC(PRCWRK,PRCHLO,PRCER,PRCTOARY) ;Build ORC segment
"RTN","PRCHJS05",6,0)
 ;This function builds the ORC segment and adds it
"RTN","PRCHJS05",7,0)
 ;to the msg being built using HLO APIs. Any data
"RTN","PRCHJS05",8,0)
 ;manipulation or conversions are performed as needed.
"RTN","PRCHJS05",9,0)
 ;
"RTN","PRCHJS05",10,0)
 ; Supported ICR:
"RTN","PRCHJS05",11,0)
 ;   #10060: Allows retrieval of NAME (#.01) field from
"RTN","PRCHJS05",12,0)
 ;           NEW PERSON (#200) file using FM read.
"RTN","PRCHJS05",13,0)
 ;
"RTN","PRCHJS05",14,0)
 ;  Input:
"RTN","PRCHJS05",15,0)
 ;    PRCWRK - (required) name of work global containing 2237 data elements
"RTN","PRCHJS05",16,0)
 ;    PRCHLO - (required) HLO workspace used to build message, pass by ref
"RTN","PRCHJS05",17,0)
 ;
"RTN","PRCHJS05",18,0)
 ; Output:
"RTN","PRCHJS05",19,0)
 ;   Function value - returns 1 on success, 0 on failure
"RTN","PRCHJS05",20,0)
 ;            PRCER - (optional) on failure, an error message is returned, pass by ref
"RTN","PRCHJS05",21,0)
 ;         PRCTOARY - (optional, pass by ref) returns the built segment in this format:
"RTN","PRCHJS05",22,0)
 ;                       PRCTOARY(1)
"RTN","PRCHJS05",23,0)
 ;
"RTN","PRCHJS05",24,0)
 N PRCSEG   ;contains the segment's data
"RTN","PRCHJS05",25,0)
 N PRCNAME  ;input array for $$HLNAME^XLFNAME
"RTN","PRCHJS05",26,0)
 N PRCNCOMP ;name components in HL7 format
"RTN","PRCHJS05",27,0)
 N PRCRSLT  ;function result
"RTN","PRCHJS05",28,0)
 ;
"RTN","PRCHJS05",29,0)
 ;init vars
"RTN","PRCHJS05",30,0)
 K PRCSEG S PRCSEG="" ;the segment should start off blank
"RTN","PRCHJS05",31,0)
 S PRCNAME("FIELD")=.01
"RTN","PRCHJS05",32,0)
 S PRCNAME("FILE")=200
"RTN","PRCHJS05",33,0)
 S PRCRSLT=1
"RTN","PRCHJS05",34,0)
 ;
"RTN","PRCHJS05",35,0)
 D SET^HLOAPI(.PRCSEG,"ORC",0)
"RTN","PRCHJS05",36,0)
 D SET^HLOAPI(.PRCSEG,"NW",1) ;new order/service
"RTN","PRCHJS05",37,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("TRANUM")),U,2),2,1)
"RTN","PRCHJS05",38,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("PRI")),U,1),5)
"RTN","PRCHJS05",39,0)
 D SET^HLOAPI(.PRCSEG,$$FMTHL7^XLFDT($P($G(@PRCWRK@("RQSTDT")),U,1)),9,1)
"RTN","PRCHJS05",40,0)
 ;
"RTN","PRCHJS05",41,0)
 ;get Accountable Officer name components
"RTN","PRCHJS05",42,0)
 S PRCNAME("IENS")=$P($G(@PRCWRK@("AO")),U,1)_","
"RTN","PRCHJS05",43,0)
 S PRCNCOMP=$$HLNAME^XLFNAME(.PRCNAME)
"RTN","PRCHJS05",44,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("AO")),U,1),11,1) ;duz
"RTN","PRCHJS05",45,0)
 D SET^HLOAPI(.PRCSEG,$P($G(PRCNCOMP),U,1),11,2,1) ;last
"RTN","PRCHJS05",46,0)
 D SET^HLOAPI(.PRCSEG,$P($G(PRCNCOMP),U,2),11,3) ;first
"RTN","PRCHJS05",47,0)
 D SET^HLOAPI(.PRCSEG,$P($G(PRCNCOMP),U,3),11,4) ;middle
"RTN","PRCHJS05",48,0)
 D SET^HLOAPI(.PRCSEG,$P($G(PRCNCOMP),U,4),11,5) ;suffix
"RTN","PRCHJS05",49,0)
 ;
"RTN","PRCHJS05",50,0)
 S ^TMP("KCLTST","AOESIG",$J)=$G(@PRCWRK@("AOESIG"))
"RTN","PRCHJS05",51,0)
 D SET^HLOAPI(.PRCSEG,$$FMTHL7^XLFDT($P($G(@PRCWRK@("AOESIG")),U,1)),11,19,1)
"RTN","PRCHJS05",52,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("AOTITLE")),U,2),11,21)
"RTN","PRCHJS05",53,0)
 ;
"RTN","PRCHJS05",54,0)
 ;get Requestor name components
"RTN","PRCHJS05",55,0)
 S PRCNAME("IENS")=$P($G(@PRCWRK@("REQ")),U,1)_","
"RTN","PRCHJS05",56,0)
 S PRCNCOMP=$$HLNAME^XLFNAME(.PRCNAME)
"RTN","PRCHJS05",57,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("REQ")),U,1),12,1) ;duz
"RTN","PRCHJS05",58,0)
 D SET^HLOAPI(.PRCSEG,$P($G(PRCNCOMP),U,1),12,2,1) ;last
"RTN","PRCHJS05",59,0)
 D SET^HLOAPI(.PRCSEG,$P($G(PRCNCOMP),U,2),12,3) ;first
"RTN","PRCHJS05",60,0)
 D SET^HLOAPI(.PRCSEG,$P($G(PRCNCOMP),U,3),12,4) ;middle
"RTN","PRCHJS05",61,0)
 D SET^HLOAPI(.PRCSEG,$P($G(PRCNCOMP),U,4),12,5) ;suffix 
"RTN","PRCHJS05",62,0)
 ;
"RTN","PRCHJS05",63,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("REQTITLE")),U,2),12,21)
"RTN","PRCHJS05",64,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("INVPT")),U,2),17,1)
"RTN","PRCHJS05",65,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("INVABREV")),U,2),17,2)
"RTN","PRCHJS05",66,0)
 ;
"RTN","PRCHJS05",67,0)
 ;get Approving Official name components
"RTN","PRCHJS05",68,0)
 S PRCNAME("IENS")=$P($G(@PRCWRK@("APOF")),U,1)_","
"RTN","PRCHJS05",69,0)
 S PRCNCOMP=$$HLNAME^XLFNAME(.PRCNAME)
"RTN","PRCHJS05",70,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("APOF")),U,1),19,1) ;duz
"RTN","PRCHJS05",71,0)
 D SET^HLOAPI(.PRCSEG,$P($G(PRCNCOMP),U,1),19,2,1) ;last
"RTN","PRCHJS05",72,0)
 D SET^HLOAPI(.PRCSEG,$P($G(PRCNCOMP),U,2),19,3) ;first
"RTN","PRCHJS05",73,0)
 D SET^HLOAPI(.PRCSEG,$P($G(PRCNCOMP),U,3),19,4) ;middle
"RTN","PRCHJS05",74,0)
 D SET^HLOAPI(.PRCSEG,$P($G(PRCNCOMP),U,4),19,5) ;suffix
"RTN","PRCHJS05",75,0)
 ;
"RTN","PRCHJS05",76,0)
 D SET^HLOAPI(.PRCSEG,$$FMTHL7^XLFDT($P($G(@PRCWRK@("ESIGDT")),U,1)),19,19,1)
"RTN","PRCHJS05",77,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("APOFTIT")),U,2),19,21)
"RTN","PRCHJS05",78,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("RQSRV")),U,2),21,1)
"RTN","PRCHJS05",79,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("STANUM")),U,2),21,3)
"RTN","PRCHJS05",80,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("SUBSTA")),U,2),21,8,2)
"RTN","PRCHJS05",81,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("DELIVTO")),U,2),22,1,1)
"RTN","PRCHJS05",82,0)
 D SET^HLOAPI(.PRCSEG,$$FMTHL7^XLFDT($P($G(@PRCWRK@("DTREQ")),U,1)),27,1)
"RTN","PRCHJS05",83,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("FRMTYP")),U,1),29,1)
"RTN","PRCHJS05",84,0)
 ;
"RTN","PRCHJS05",85,0)
 ;add segment to message being built
"RTN","PRCHJS05",86,0)
 I '$$ADDSEG^HLOAPI(.PRCHLO,.PRCSEG,.PRCER,.PRCTOARY) D
"RTN","PRCHJS05",87,0)
 . S PRCRSLT=0
"RTN","PRCHJS05",88,0)
 . S PRCER="ORC segment not built"
"RTN","PRCHJS05",89,0)
 ;
"RTN","PRCHJS05",90,0)
 Q PRCRSLT
"RTN","PRCHJS05",91,0)
 ;
"RTN","PRCHJS05",92,0)
 ;
"RTN","PRCHJS05",93,0)
TQ1(PRCWRK,PRCHLO,PRCLINE,PRCER) ;Build TQ1 segment
"RTN","PRCHJS05",94,0)
 ;This function builds a TQ1 segment for each delivery
"RTN","PRCHJS05",95,0)
 ;schedule associated with a line item and adds it to
"RTN","PRCHJS05",96,0)
 ;the msg being built using HLO APIs. Any data manipulation
"RTN","PRCHJS05",97,0)
 ;or conversions are performed as needed.
"RTN","PRCHJS05",98,0)
 ;
"RTN","PRCHJS05",99,0)
 ;  Input:
"RTN","PRCHJS05",100,0)
 ;    PRCWRK - (required) name of work global containing 2237 data elements
"RTN","PRCHJS05",101,0)
 ;    PRCHLO - (required) HLO workspace used to build message, pass by ref
"RTN","PRCHJS05",102,0)
 ;   PRCLINE - (required) line item number
"RTN","PRCHJS05",103,0)
 ;
"RTN","PRCHJS05",104,0)
 ; Output:
"RTN","PRCHJS05",105,0)
 ;   Function value - returns 1 on success, 0 on failure
"RTN","PRCHJS05",106,0)
 ;            PRCER - (optional) on failure, an error message is returned, pass by ref
"RTN","PRCHJS05",107,0)
 ;
"RTN","PRCHJS05",108,0)
 N PRCSEG  ;contains the segment's data
"RTN","PRCHJS05",109,0)
 N PRCSUB  ;array subscript
"RTN","PRCHJS05",110,0)
 N PRCRSLT ;function result
"RTN","PRCHJS05",111,0)
 ;
"RTN","PRCHJS05",112,0)
 ;init vars
"RTN","PRCHJS05",113,0)
 K PRCSEG S PRCSEG="" ;the segment should start off blank
"RTN","PRCHJS05",114,0)
 S PRCLINE=+$G(PRCLINE)
"RTN","PRCHJS05",115,0)
 S PRCSUB=0
"RTN","PRCHJS05",116,0)
 S PRCRSLT=0
"RTN","PRCHJS05",117,0)
 ;
"RTN","PRCHJS05",118,0)
 I PRCLINE'>0 S PRCER="TQ1 segment not built - no line item passed" Q PRCRSLT
"RTN","PRCHJS05",119,0)
 I '$O(@PRCWRK@(PRCLINE,PRCSUB)) S PRCER="TQ1 segment not built - no delivery schedule for item" Q PRCRSLT
"RTN","PRCHJS05",120,0)
 ;
"RTN","PRCHJS05",121,0)
 S PRCRSLT=1
"RTN","PRCHJS05",122,0)
 ;
"RTN","PRCHJS05",123,0)
 ;loop thru delivery schedules for the line item
"RTN","PRCHJS05",124,0)
 F  S PRCSUB=$O(@PRCWRK@(PRCLINE,PRCSUB)) Q:('$G(PRCSUB)!('PRCRSLT))  D
"RTN","PRCHJS05",125,0)
 . D SET^HLOAPI(.PRCSEG,"TQ1",0)
"RTN","PRCHJS05",126,0)
 . D SET^HLOAPI(.PRCSEG,PRCSUB,1) ;Delivery Schedule #
"RTN","PRCHJS05",127,0)
 . D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,PRCSUB,"DELQTY")),U,2),2,1)
"RTN","PRCHJS05",128,0)
 . D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,"UNITNM")),U,2),2,2,1)
"RTN","PRCHJS05",129,0)
 . D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,"UNITFNM")),U,2),2,2,2)
"RTN","PRCHJS05",130,0)
 . D SET^HLOAPI(.PRCSEG,$$FMTHL7^XLFDT($P($G(@PRCWRK@(PRCLINE,PRCSUB,"DELDT")),U)),7,1)
"RTN","PRCHJS05",131,0)
 . D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,PRCSUB,"DELLOC")),U,2),10)
"RTN","PRCHJS05",132,0)
 . D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,PRCSUB,"DELREF")),U,2),11)
"RTN","PRCHJS05",133,0)
 . ;
"RTN","PRCHJS05",134,0)
 . ;add segment to message being built
"RTN","PRCHJS05",135,0)
 . I '$$ADDSEG^HLOAPI(.PRCHLO,.PRCSEG,.PRCER) D
"RTN","PRCHJS05",136,0)
 . . S PRCRSLT=0
"RTN","PRCHJS05",137,0)
 . . S PRCER="TQ1 segment not built"
"RTN","PRCHJS05",138,0)
 ;
"RTN","PRCHJS05",139,0)
 Q PRCRSLT
"RTN","PRCHJS05",140,0)
 ;
"RTN","PRCHJS05",141,0)
 ;
"RTN","PRCHJS05",142,0)
RQD(PRCWRK,PRCHLO,PRCLINE,PRCER,PRCTOARY) ;Build RQD segment
"RTN","PRCHJS05",143,0)
 ;This function builds the RQD segment and adds it to the
"RTN","PRCHJS05",144,0)
 ;msg being built using HLO APIs. Any data manipulation
"RTN","PRCHJS05",145,0)
 ;or conversions are performed as needed.
"RTN","PRCHJS05",146,0)
 ;
"RTN","PRCHJS05",147,0)
 ;  Input:
"RTN","PRCHJS05",148,0)
 ;    PRCWRK - (required) name of work global containing 2237 data elements
"RTN","PRCHJS05",149,0)
 ;    PRCHLO - (required) HLO workspace used to build message, pass by ref
"RTN","PRCHJS05",150,0)
 ;   PRCLINE - (required) line item number
"RTN","PRCHJS05",151,0)
 ;
"RTN","PRCHJS05",152,0)
 ; Output:
"RTN","PRCHJS05",153,0)
 ;   Function value - returns 1 on success, 0 on failure
"RTN","PRCHJS05",154,0)
 ;            PRCER - (optional) on failure, an error message is returned, pass by ref
"RTN","PRCHJS05",155,0)
 ;         PRCTOARY - (optional, pass by ref) returns the built segment in this format:
"RTN","PRCHJS05",156,0)
 ;                       PRCTOARY(1)
"RTN","PRCHJS05",157,0)
 ;
"RTN","PRCHJS05",158,0)
 N PRCSEG  ;contains the segment's data
"RTN","PRCHJS05",159,0)
 N PRCRSLT ;function result
"RTN","PRCHJS05",160,0)
 ;
"RTN","PRCHJS05",161,0)
 ;init vars
"RTN","PRCHJS05",162,0)
 K PRCSEG S PRCSEG="" ;the segment should start off blank
"RTN","PRCHJS05",163,0)
 S PRCLINE=+$G(PRCLINE)
"RTN","PRCHJS05",164,0)
 S PRCRSLT=0
"RTN","PRCHJS05",165,0)
 ;
"RTN","PRCHJS05",166,0)
 I PRCLINE'>0 S PRCER="RQD segment not built - no line item passed" Q PRCRSLT
"RTN","PRCHJS05",167,0)
 I +$G(@PRCWRK@(PRCLINE,"ITLINE"))'>0 S PRCER="RQD segment not built - line item not found" Q PRCRSLT
"RTN","PRCHJS05",168,0)
 ;
"RTN","PRCHJS05",169,0)
 S PRCRSLT=1
"RTN","PRCHJS05",170,0)
 ;
"RTN","PRCHJS05",171,0)
 D SET^HLOAPI(.PRCSEG,"RQD",0)
"RTN","PRCHJS05",172,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,"ITLINE")),U,2),1)
"RTN","PRCHJS05",173,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,"ITMFN")),U,2),2,1)
"RTN","PRCHJS05",174,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,"IMNSN")),U,2),2,4)
"RTN","PRCHJS05",175,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,"IMFSC")),U,2),2,5)
"RTN","PRCHJS05",176,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,"ITSTOCK")),U,2),3,1)
"RTN","PRCHJS05",177,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,"ITQTY")),U,2),5)
"RTN","PRCHJS05",178,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,"UNITNM")),U,2),6,1)
"RTN","PRCHJS05",179,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,"UNITFNM")),U,2),6,2)
"RTN","PRCHJS05",180,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,"IMPKGM")),U,2),6,4)
"RTN","PRCHJS05",181,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("COSTCTR")),U,2),7)
"RTN","PRCHJS05",182,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,"ITBOC")),U,2),8)
"RTN","PRCHJS05",183,0)
 ;
"RTN","PRCHJS05",184,0)
 ;add segment to message being built
"RTN","PRCHJS05",185,0)
 I '$$ADDSEG^HLOAPI(.PRCHLO,.PRCSEG,.PRCER,.PRCTOARY) D
"RTN","PRCHJS05",186,0)
 . S PRCRSLT=0
"RTN","PRCHJS05",187,0)
 . S PRCER="RQD segment not built"
"RTN","PRCHJS05",188,0)
 ;
"RTN","PRCHJS05",189,0)
 Q PRCRSLT
"RTN","PRCHJS05",190,0)
 ;
"RTN","PRCHJS05",191,0)
 ;
"RTN","PRCHJS05",192,0)
RQ1(PRCWRK,PRCHLO,PRCLINE,PRCER,PRCTOARY) ;Build RQ1 segment
"RTN","PRCHJS05",193,0)
 ;This function builds the RQ1 segment and adds it to the
"RTN","PRCHJS05",194,0)
 ;msg being built using HLO APIs. Any data manipulation
"RTN","PRCHJS05",195,0)
 ;or conversions are performed as needed.
"RTN","PRCHJS05",196,0)
 ;
"RTN","PRCHJS05",197,0)
 ;  Input:
"RTN","PRCHJS05",198,0)
 ;    PRCWRK - (required) name of work global containing 2237 data elements
"RTN","PRCHJS05",199,0)
 ;    PRCHLO - (required) HLO workspace used to build message, pass by ref
"RTN","PRCHJS05",200,0)
 ;   PRCLINE - (required) line item number
"RTN","PRCHJS05",201,0)
 ;
"RTN","PRCHJS05",202,0)
 ; Output:
"RTN","PRCHJS05",203,0)
 ;   Function value - returns 1 on success, 0 on failure
"RTN","PRCHJS05",204,0)
 ;            PRCER - (optional) on failure, an error message is returned, pass by ref
"RTN","PRCHJS05",205,0)
 ;         PRCTOARY - (optional, pass by ref) returns the built segment in this format:
"RTN","PRCHJS05",206,0)
 ;                       PRCTOARY(1)
"RTN","PRCHJS05",207,0)
 ;
"RTN","PRCHJS05",208,0)
 N PRCSEG  ;contains the segment's data
"RTN","PRCHJS05",209,0)
 N PRCRSLT ;function result
"RTN","PRCHJS05",210,0)
 ;
"RTN","PRCHJS05",211,0)
 ;init vars
"RTN","PRCHJS05",212,0)
 K PRCSEG S PRCSEG="" ;the segment should start off blank
"RTN","PRCHJS05",213,0)
 S PRCLINE=+$G(PRCLINE)
"RTN","PRCHJS05",214,0)
 S PRCRSLT=0
"RTN","PRCHJS05",215,0)
 ;
"RTN","PRCHJS05",216,0)
 I PRCLINE'>0 S PRCER="RQ1 segment not built - no line item passed" Q PRCRSLT
"RTN","PRCHJS05",217,0)
 I +$G(@PRCWRK@(PRCLINE,"ITLINE"))'>0 S PRCER="RQ1 segment not built - line item not found" Q PRCRSLT
"RTN","PRCHJS05",218,0)
 ;
"RTN","PRCHJS05",219,0)
 S PRCRSLT=1
"RTN","PRCHJS05",220,0)
 ;
"RTN","PRCHJS05",221,0)
 D SET^HLOAPI(.PRCSEG,"RQ1",0)
"RTN","PRCHJS05",222,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,"ITCOST")),U,2),1)
"RTN","PRCHJS05",223,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,"IMMFG")),U,2),2,1)
"RTN","PRCHJS05",224,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("VENDPT")),U),4,1)
"RTN","PRCHJS05",225,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("VENDNM")),U,2),4,2)
"RTN","PRCHJS05",226,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,"IMCTRCT")),U,2),4,4)
"RTN","PRCHJS05",227,0)
 D SET^HLOAPI(.PRCSEG,$$FMTHL7^XLFDT($P($G(@PRCWRK@(PRCLINE,"IMEXPDT")),U,1)),4,5)
"RTN","PRCHJS05",228,0)
 ;
"RTN","PRCHJS05",229,0)
 ;add segment to message being built
"RTN","PRCHJS05",230,0)
 I '$$ADDSEG^HLOAPI(.PRCHLO,.PRCSEG,.PRCER,.PRCTOARY) D
"RTN","PRCHJS05",231,0)
 . S PRCRSLT=0
"RTN","PRCHJS05",232,0)
 . S PRCER="RQ1 segment not built"
"RTN","PRCHJS05",233,0)
 ;
"RTN","PRCHJS05",234,0)
 Q PRCRSLT
"RTN","PRCHJS05",235,0)
 ;
"RTN","PRCHJS05",236,0)
 ;
"RTN","PRCHJS05",237,0)
ZA1(PRCWRK,PRCHLO,PRCLINE,PRCER,PRCTOARY) ;Build ZA1 segment
"RTN","PRCHJS05",238,0)
 ;This function builds the ZA1 segment and adds it to the
"RTN","PRCHJS05",239,0)
 ;msg being built using HLO APIs. Any data manipulation
"RTN","PRCHJS05",240,0)
 ;or conversions are performed as needed.
"RTN","PRCHJS05",241,0)
 ;
"RTN","PRCHJS05",242,0)
 ;  Input:
"RTN","PRCHJS05",243,0)
 ;    PRCWRK - (required) name of work global containing 2237 data elements
"RTN","PRCHJS05",244,0)
 ;    PRCHLO - (required) HLO workspace used to build message, pass by ref
"RTN","PRCHJS05",245,0)
 ;   PRCLINE - (required) line item number
"RTN","PRCHJS05",246,0)
 ;
"RTN","PRCHJS05",247,0)
 ; Output:
"RTN","PRCHJS05",248,0)
 ;   Function value - returns 1 on success, 0 on failure
"RTN","PRCHJS05",249,0)
 ;            PRCER - (optional) on failure, an error message is returned, pass by ref
"RTN","PRCHJS05",250,0)
 ;         PRCTOARY - (optional, pass by ref) returns the built segment in this format:
"RTN","PRCHJS05",251,0)
 ;                       PRCTOARY(1)
"RTN","PRCHJS05",252,0)
 ;
"RTN","PRCHJS05",253,0)
 N PRCSEG  ;contains the segment's data
"RTN","PRCHJS05",254,0)
 N PRCRSLT ;function result
"RTN","PRCHJS05",255,0)
 ;
"RTN","PRCHJS05",256,0)
 K PRCSEG S PRCSEG="" ;the segment should start off blank
"RTN","PRCHJS05",257,0)
 S PRCLINE=+$G(PRCLINE)
"RTN","PRCHJS05",258,0)
 S PRCRSLT=0
"RTN","PRCHJS05",259,0)
 ;
"RTN","PRCHJS05",260,0)
 I PRCLINE'>0 S PRCER="ZA1 segment not built - no line item passed" Q PRCRSLT
"RTN","PRCHJS05",261,0)
 I +$G(@PRCWRK@(PRCLINE,"ITLINE"))'>0 S PRCER="ZA1 segment not built - line item not found" Q PRCRSLT
"RTN","PRCHJS05",262,0)
 ;
"RTN","PRCHJS05",263,0)
 S PRCRSLT=1
"RTN","PRCHJS05",264,0)
 ;
"RTN","PRCHJS05",265,0)
 D SET^HLOAPI(.PRCSEG,"ZA1",0)
"RTN","PRCHJS05",266,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,"IMNDC")),U,2),1)
"RTN","PRCHJS05",267,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,"IMFOOD")),U,1),2)
"RTN","PRCHJS05",268,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,"IMNIF")),U,2),3)
"RTN","PRCHJS05",269,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,"IMMIN")),U,2),4)
"RTN","PRCHJS05",270,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,"IMMAX")),U,2),5)
"RTN","PRCHJS05",271,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,"IMREQ")),U,2),6)
"RTN","PRCHJS05",272,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,"IMUCF")),U,2),7)
"RTN","PRCHJS05",273,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@(PRCLINE,"ITDMID")),U,2),8)
"RTN","PRCHJS05",274,0)
 ;
"RTN","PRCHJS05",275,0)
 ;add segment to message being built
"RTN","PRCHJS05",276,0)
 I '$$ADDSEG^HLOAPI(.PRCHLO,.PRCSEG,.PRCER,.PRCTOARY) D
"RTN","PRCHJS05",277,0)
 . S PRCRSLT=0
"RTN","PRCHJS05",278,0)
 . S PRCER="ZA1 segment not built"
"RTN","PRCHJS05",279,0)
 ;
"RTN","PRCHJS05",280,0)
 Q PRCRSLT
"RTN","PRCHJS05",281,0)
 ;
"RTN","PRCHJS05",282,0)
 ;
"RTN","PRCHJS05",283,0)
NTEITEM(PRCWRK,PRCHLO,PRCLINE,PRCER) ;Build NTE segments for item description
"RTN","PRCHJS05",284,0)
 ;This function builds repeating NTE segments for the
"RTN","PRCHJS05",285,0)
 ;description of the item being ordered and adds it
"RTN","PRCHJS05",286,0)
 ;to the msg being built using HLO APIs.
"RTN","PRCHJS05",287,0)
 ;
"RTN","PRCHJS05",288,0)
 ;  Input:
"RTN","PRCHJS05",289,0)
 ;    PRCWRK - (required) name of work global containing 2237 data elements
"RTN","PRCHJS05",290,0)
 ;    PRCHLO - (required) HLO workspace used to build message, pass by ref
"RTN","PRCHJS05",291,0)
 ;   PRCLINE - (required) line item number
"RTN","PRCHJS05",292,0)
 ;
"RTN","PRCHJS05",293,0)
 ; Output:
"RTN","PRCHJS05",294,0)
 ;   Function value - returns 1 on success, 0 on failure
"RTN","PRCHJS05",295,0)
 ;            PRCER - (optional) on failure, an error message is returned, pass by ref
"RTN","PRCHJS05",296,0)
 ;
"RTN","PRCHJS05",297,0)
 N PRCSETID ;segment set id
"RTN","PRCHJS05",298,0)
 N PRCSUB   ;array subscript
"RTN","PRCHJS05",299,0)
 N PRCSEG   ;contains the segment's data
"RTN","PRCHJS05",300,0)
 N PRCRSLT  ;function result
"RTN","PRCHJS05",301,0)
 ;
"RTN","PRCHJS05",302,0)
 ;init vars
"RTN","PRCHJS05",303,0)
 K PRCSEG S PRCSEG="" ;the segment should start off blank
"RTN","PRCHJS05",304,0)
 S PRCLINE=+$G(PRCLINE)
"RTN","PRCHJS05",305,0)
 S PRCRSLT=0
"RTN","PRCHJS05",306,0)
 ;
"RTN","PRCHJS05",307,0)
 I PRCLINE'>0 S PRCER="NTE item segment not built - no line item passed" Q PRCRSLT
"RTN","PRCHJS05",308,0)
 I +$G(@PRCWRK@(PRCLINE,"ITLINE"))'>0 S PRCER="NTE item segment not built - line item not found" Q PRCRSLT
"RTN","PRCHJS05",309,0)
 ;
"RTN","PRCHJS05",310,0)
 S PRCRSLT=1
"RTN","PRCHJS05",311,0)
 ;
"RTN","PRCHJS05",312,0)
 ;loop thru Description nodes for the Line Item
"RTN","PRCHJS05",313,0)
 S (PRCSUB,PRCSETID)=0
"RTN","PRCHJS05",314,0)
 F  S PRCSUB=$O(@PRCWRK@(PRCLINE,"ITDESC",PRCSUB)) Q:'$G(PRCSUB)!('PRCRSLT)  D
"RTN","PRCHJS05",315,0)
 . S PRCSETID=PRCSETID+1
"RTN","PRCHJS05",316,0)
 . D SET^HLOAPI(.PRCSEG,"NTE",0)
"RTN","PRCHJS05",317,0)
 . D SET^HLOAPI(.PRCSEG,PRCSETID,1)
"RTN","PRCHJS05",318,0)
 . D SET^HLOAPI(.PRCSEG,"P",2) ;P for Placer (Orderer) 
"RTN","PRCHJS05",319,0)
 . D SET^HLOAPI(.PRCSEG,$G(@PRCWRK@(PRCLINE,"ITDESC",PRCSUB,0)),3)
"RTN","PRCHJS05",320,0)
 . D SET^HLOAPI(.PRCSEG,"LD",4,1) ;LD for Line Item Description
"RTN","PRCHJS05",321,0)
 . ;
"RTN","PRCHJS05",322,0)
 . ;add segment to message being built
"RTN","PRCHJS05",323,0)
 . I '$$ADDSEG^HLOAPI(.PRCHLO,.PRCSEG,.PRCER) D
"RTN","PRCHJS05",324,0)
 . . S PRCRSLT=0
"RTN","PRCHJS05",325,0)
 . . S PRCER="NTE segment not built"
"RTN","PRCHJS05",326,0)
 ;
"RTN","PRCHJS05",327,0)
 Q PRCRSLT
"RTN","PRCHJS06")
0^10^B47333456^n/a
"RTN","PRCHJS06",1,0)
PRCHJS06 ;OI&T/KCL - IFCAP/ECMS INTERFACE 2237 SEND SEG BUILDERS CONT.;6/12/12
"RTN","PRCHJS06",2,0)
 ;;5.1;IFCAP;**167**;Oct 20, 2000;Build 17
"RTN","PRCHJS06",3,0)
 ;Per VHA Directive 2004-38, this routine should not be modified.
"RTN","PRCHJS06",4,0)
 ;
"RTN","PRCHJS06",5,0)
NTE(PRCWRK,PRCHLO,PRCER) ;Build NTE segments
"RTN","PRCHJS06",6,0)
 ;This function builds repeating NTE segments for the 2237
"RTN","PRCHJS06",7,0)
 ;word processing fields Special Remarks, Justification,
"RTN","PRCHJS06",8,0)
 ;and Comments. Segments are built and added to the msg
"RTN","PRCHJS06",9,0)
 ;being built using HLO APIs.
"RTN","PRCHJS06",10,0)
 ;
"RTN","PRCHJS06",11,0)
 ;  Input:
"RTN","PRCHJS06",12,0)
 ;   PRCWRK - (required) name of work global containing 2237 data elements
"RTN","PRCHJS06",13,0)
 ;   PRCHLO - (required) HLO workspace used to build message, pass by ref
"RTN","PRCHJS06",14,0)
 ;
"RTN","PRCHJS06",15,0)
 ; Output:
"RTN","PRCHJS06",16,0)
 ;   Function value - returns 1 on success, 0 on failure
"RTN","PRCHJS06",17,0)
 ;            PRCER - (optional) on failure, an error message is returned, pass by ref
"RTN","PRCHJS06",18,0)
 ;
"RTN","PRCHJS06",19,0)
 N PRCSETID ;segment set id
"RTN","PRCHJS06",20,0)
 N PRCSUB   ;array subscript
"RTN","PRCHJS06",21,0)
 N PRCSEG   ;contains the segment data
"RTN","PRCHJS06",22,0)
 N PRCRSLT  ;function result
"RTN","PRCHJS06",23,0)
 ;
"RTN","PRCHJS06",24,0)
 ;init vars
"RTN","PRCHJS06",25,0)
 K PRCSEG S PRCSEG="" ;the segment should start off blank
"RTN","PRCHJS06",26,0)
 S PRCSETID=0
"RTN","PRCHJS06",27,0)
 S PRCRSLT=1
"RTN","PRCHJS06",28,0)
 ;
"RTN","PRCHJS06",29,0)
 D  ;drops out of DO block on failure
"RTN","PRCHJS06",30,0)
 . ;
"RTN","PRCHJS06",31,0)
 . ;loop thru Special Remarks nodes and put into NTE seg
"RTN","PRCHJS06",32,0)
 . S PRCSUB=0
"RTN","PRCHJS06",33,0)
 . F  S PRCSUB=$O(@PRCWRK@("REMARKS",PRCSUB)) Q:'$G(PRCSUB)  D
"RTN","PRCHJS06",34,0)
 . . S PRCSETID=PRCSETID+1
"RTN","PRCHJS06",35,0)
 . . D SET^HLOAPI(.PRCSEG,"NTE",0)
"RTN","PRCHJS06",36,0)
 . . D SET^HLOAPI(.PRCSEG,PRCSETID,1)
"RTN","PRCHJS06",37,0)
 . . D SET^HLOAPI(.PRCSEG,"P",2) ;P for Placer Order
"RTN","PRCHJS06",38,0)
 . . D SET^HLOAPI(.PRCSEG,$G(@PRCWRK@("REMARKS",PRCSUB,0)),3)
"RTN","PRCHJS06",39,0)
 . . D SET^HLOAPI(.PRCSEG,"RR",4,1) ;RR for Request Remarks
"RTN","PRCHJS06",40,0)
 . . ;
"RTN","PRCHJS06",41,0)
 . . ;add segment to message being built
"RTN","PRCHJS06",42,0)
 . . I '$$ADDSEG^HLOAPI(.PRCHLO,.PRCSEG,.PRCER) S PRCRSLT=0,PRCER="NTE remarks segment not built"
"RTN","PRCHJS06",43,0)
 . ;
"RTN","PRCHJS06",44,0)
 . Q:'PRCRSLT
"RTN","PRCHJS06",45,0)
 . ;
"RTN","PRCHJS06",46,0)
 . ;loop thru Justification nodes and put into NTE seg
"RTN","PRCHJS06",47,0)
 . S PRCSUB=0
"RTN","PRCHJS06",48,0)
 . F  S PRCSUB=$O(@PRCWRK@("JUSTIF",PRCSUB)) Q:'$G(PRCSUB)  D
"RTN","PRCHJS06",49,0)
 . . S PRCSETID=PRCSETID+1
"RTN","PRCHJS06",50,0)
 . . D SET^HLOAPI(.PRCSEG,"NTE",0)
"RTN","PRCHJS06",51,0)
 . . D SET^HLOAPI(.PRCSEG,PRCSETID,1)
"RTN","PRCHJS06",52,0)
 . . D SET^HLOAPI(.PRCSEG,"P",2) ;P for Placer Order
"RTN","PRCHJS06",53,0)
 . . D SET^HLOAPI(.PRCSEG,$G(@PRCWRK@("JUSTIF",PRCSUB,0)),3)
"RTN","PRCHJS06",54,0)
 . . D SET^HLOAPI(.PRCSEG,"RJ",4,1) ;RJ for Request Justification
"RTN","PRCHJS06",55,0)
 . . ;
"RTN","PRCHJS06",56,0)
 . . ;add segment to message being built
"RTN","PRCHJS06",57,0)
 . . I '$$ADDSEG^HLOAPI(.PRCHLO,.PRCSEG,.PRCER) S PRCRSLT=0,PRCER="NTE justification segment not built"
"RTN","PRCHJS06",58,0)
 . ;
"RTN","PRCHJS06",59,0)
 . Q:'PRCRSLT
"RTN","PRCHJS06",60,0)
 . ;
"RTN","PRCHJS06",61,0)
 . ;loop thru Comments nodes and put into NTE seg
"RTN","PRCHJS06",62,0)
 . S PRCSUB=0
"RTN","PRCHJS06",63,0)
 . F  S PRCSUB=$O(@PRCWRK@("COMMENT",PRCSUB)) Q:'$G(PRCSUB)  D
"RTN","PRCHJS06",64,0)
 . . S PRCSETID=PRCSETID+1
"RTN","PRCHJS06",65,0)
 . . D SET^HLOAPI(.PRCSEG,"NTE",0)
"RTN","PRCHJS06",66,0)
 . . D SET^HLOAPI(.PRCSEG,PRCSETID,1)
"RTN","PRCHJS06",67,0)
 . . D SET^HLOAPI(.PRCSEG,"P",2) ;P for Placer Order
"RTN","PRCHJS06",68,0)
 . . D SET^HLOAPI(.PRCSEG,$G(@PRCWRK@("COMMENT",PRCSUB,0)),3)
"RTN","PRCHJS06",69,0)
 . . D SET^HLOAPI(.PRCSEG,"RC",4,1) ;RC for Request Comments
"RTN","PRCHJS06",70,0)
 . . ;
"RTN","PRCHJS06",71,0)
 . . ;add segment to message being built
"RTN","PRCHJS06",72,0)
 . . I '$$ADDSEG^HLOAPI(.PRCHLO,.PRCSEG,.PRCER) S PRCRSLT=0,PRCER="NTE comments segment not built"
"RTN","PRCHJS06",73,0)
 ;
"RTN","PRCHJS06",74,0)
 Q PRCRSLT
"RTN","PRCHJS06",75,0)
 ;
"RTN","PRCHJS06",76,0)
 ;
"RTN","PRCHJS06",77,0)
ZZ1(PRCWRK,PRCHLO,PRCER,PRCTOARY) ;Build ZZ1 segment
"RTN","PRCHJS06",78,0)
 ;This function builds the ZZ1 segment and adds it to the
"RTN","PRCHJS06",79,0)
 ;msg being built using HLO APIs. Any data manipulation
"RTN","PRCHJS06",80,0)
 ;or conversions are performed as needed.
"RTN","PRCHJS06",81,0)
 ;
"RTN","PRCHJS06",82,0)
 ; Supported ICR:
"RTN","PRCHJS06",83,0)
 ;   #10056: Allows retrieval of ABBREVIATION (#1) field from STATE (#5)
"RTN","PRCHJS06",84,0)
 ;           file using FM read.
"RTN","PRCHJS06",85,0)
 ;
"RTN","PRCHJS06",86,0)
 ;  Input:
"RTN","PRCHJS06",87,0)
 ;   PRCWRK - (required) name of work global containing 2237 data elements
"RTN","PRCHJS06",88,0)
 ;   PRCHLO - (required) HLO workspace used to build message, pass by ref
"RTN","PRCHJS06",89,0)
 ;
"RTN","PRCHJS06",90,0)
 ; Output:
"RTN","PRCHJS06",91,0)
 ;   Function value - returns 1 on success, 0 on failure
"RTN","PRCHJS06",92,0)
 ;            PRCER - (optional) on failure, an error message is returned, pass by ref
"RTN","PRCHJS06",93,0)
 ;         PRCTOARY - (optional, pass by ref) returns the built segment in this format:
"RTN","PRCHJS06",94,0)
 ;                       PRCTOARY(1)
"RTN","PRCHJS06",95,0)
 ;
"RTN","PRCHJS06",96,0)
 N PRCSEG   ;contains the segment's data
"RTN","PRCHJS06",97,0)
 N PRCSTATE ;state abbreviation
"RTN","PRCHJS06",98,0)
 N PRCRSLT  ;function result
"RTN","PRCHJS06",99,0)
 ;
"RTN","PRCHJS06",100,0)
 ;init vars
"RTN","PRCHJS06",101,0)
 K PRCSEG S PRCSEG="" ;the segment should start off blank
"RTN","PRCHJS06",102,0)
 S PRCRSLT=1
"RTN","PRCHJS06",103,0)
 ;
"RTN","PRCHJS06",104,0)
 D SET^HLOAPI(.PRCSEG,"ZZ1",0)
"RTN","PRCHJS06",105,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("VENDAD1")),U,2),1)
"RTN","PRCHJS06",106,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("VENDAD2")),U,2),2)
"RTN","PRCHJS06",107,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("VENDAD3")),U,2),3)
"RTN","PRCHJS06",108,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("VENDAD4")),U,2),4)
"RTN","PRCHJS06",109,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("VENDCTY")),U,2),5)
"RTN","PRCHJS06",110,0)
 ;
"RTN","PRCHJS06",111,0)
 ;retrieve State Abbreviation from (#5) file and set into seg
"RTN","PRCHJS06",112,0)
 S PRCSTATE=$$GET1^DIQ(5,+$G(@PRCWRK@("VENDST"))_",",1)
"RTN","PRCHJS06",113,0)
 D SET^HLOAPI(.PRCSEG,$G(PRCSTATE),6)
"RTN","PRCHJS06",114,0)
 ;
"RTN","PRCHJS06",115,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("VENDZIP")),U,2),7)
"RTN","PRCHJS06",116,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("VENDCON")),U,2),8)
"RTN","PRCHJS06",117,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("VENDPH")),U,2),9)
"RTN","PRCHJS06",118,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("VACT")),U,2),10)
"RTN","PRCHJS06",119,0)
 ;
"RTN","PRCHJS06",120,0)
 ;add segment to message being built
"RTN","PRCHJS06",121,0)
 I '$$ADDSEG^HLOAPI(.PRCHLO,.PRCSEG,.PRCER,.PRCTOARY) D
"RTN","PRCHJS06",122,0)
 . S PRCRSLT=0
"RTN","PRCHJS06",123,0)
 . S PRCER="ZZ1 segment not built"
"RTN","PRCHJS06",124,0)
 ;
"RTN","PRCHJS06",125,0)
 Q PRCRSLT
"RTN","PRCHJS06",126,0)
 ;
"RTN","PRCHJS06",127,0)
 ;
"RTN","PRCHJS06",128,0)
ZZ2(PRCWRK,PRCHLO,PRCER,PRCTOARY) ;Build ZZ2 segment
"RTN","PRCHJS06",129,0)
 ;This function builds the ZZ2 segment and adds it to the
"RTN","PRCHJS06",130,0)
 ;msg being built using HLO APIs. Any data manipulation
"RTN","PRCHJS06",131,0)
 ;or conversions are performed as needed.
"RTN","PRCHJS06",132,0)
 ;
"RTN","PRCHJS06",133,0)
 ; Supported ICR:
"RTN","PRCHJS06",134,0)
 ;   #10056: Allows retrieval of ABBREVIATION (#1) field from STATE (#5)
"RTN","PRCHJS06",135,0)
 ;           file using FM read.
"RTN","PRCHJS06",136,0)
 ;
"RTN","PRCHJS06",137,0)
 ;  Input:
"RTN","PRCHJS06",138,0)
 ;   PRCWRK - (required) name of work global containing 2237 data elements
"RTN","PRCHJS06",139,0)
 ;   PRCHLO - (required) HLO workspace used to build message, pass by ref
"RTN","PRCHJS06",140,0)
 ;
"RTN","PRCHJS06",141,0)
 ; Output:
"RTN","PRCHJS06",142,0)
 ;   Function value - returns 1 on success, 0 on failure
"RTN","PRCHJS06",143,0)
 ;            PRCER - (optional) on failure, an error message is returned, pass by ref
"RTN","PRCHJS06",144,0)
 ;         PRCTOARY - (optional, pass by ref) returns the built segment in this format:
"RTN","PRCHJS06",145,0)
 ;                       PRCTOARY(1)
"RTN","PRCHJS06",146,0)
 ;
"RTN","PRCHJS06",147,0)
 N PRCSEG   ;contains the segment's data
"RTN","PRCHJS06",148,0)
 N PRCSTATE ;state abbreviation
"RTN","PRCHJS06",149,0)
 N PRCRSLT  ;function result
"RTN","PRCHJS06",150,0)
 ;
"RTN","PRCHJS06",151,0)
 ;init vars
"RTN","PRCHJS06",152,0)
 K PRCSEG S PRCSEG="" ;the segment should start off blank
"RTN","PRCHJS06",153,0)
 S PRCRSLT=1
"RTN","PRCHJS06",154,0)
 ;
"RTN","PRCHJS06",155,0)
 D SET^HLOAPI(.PRCSEG,"ZZ2",0)
"RTN","PRCHJS06",156,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("VPAYCON")),U,2),1)
"RTN","PRCHJS06",157,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("VPAYPH")),U,2),2)
"RTN","PRCHJS06",158,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("VPAYAD1")),U,2),3)
"RTN","PRCHJS06",159,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("VPAYAD2")),U,2),4)
"RTN","PRCHJS06",160,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("VPAYAD3")),U,2),5)
"RTN","PRCHJS06",161,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("VPAYAD4")),U,2),6)
"RTN","PRCHJS06",162,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("VPAYCTY")),U,2),7)
"RTN","PRCHJS06",163,0)
 ;
"RTN","PRCHJS06",164,0)
 ;retrieve State Abbreviation from (#5) file and set into seg
"RTN","PRCHJS06",165,0)
 S PRCSTATE=$$GET1^DIQ(5,+$G(@PRCWRK@("VPAYST"))_",",1)
"RTN","PRCHJS06",166,0)
 D SET^HLOAPI(.PRCSEG,$G(PRCSTATE),8)
"RTN","PRCHJS06",167,0)
 ;
"RTN","PRCHJS06",168,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("VPAYZIP")),U,2),9)
"RTN","PRCHJS06",169,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("VEDI")),U,1),10)
"RTN","PRCHJS06",170,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("VGDV")),U,1),11)
"RTN","PRCHJS06",171,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("VDUNS")),U,2),12)
"RTN","PRCHJS06",172,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("VFMSNM")),U,2),13)
"RTN","PRCHJS06",173,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("VFAX")),U,2),14)
"RTN","PRCHJS06",174,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("VID")),U,2),15)
"RTN","PRCHJS06",175,0)
 ;
"RTN","PRCHJS06",176,0)
 ;add segment to message being built
"RTN","PRCHJS06",177,0)
 I '$$ADDSEG^HLOAPI(.PRCHLO,.PRCSEG,.PRCER,.PRCTOARY) D
"RTN","PRCHJS06",178,0)
 . S PRCRSLT=0
"RTN","PRCHJS06",179,0)
 . S PRCER="ZZ2 segment not built"
"RTN","PRCHJS06",180,0)
 ;
"RTN","PRCHJS06",181,0)
 Q PRCRSLT
"RTN","PRCHJS06",182,0)
 ;
"RTN","PRCHJS06",183,0)
 ;
"RTN","PRCHJS06",184,0)
ZZ3(PRCWRK,PRCHLO,PRCER,PRCTOARY) ;Build ZZ3 segment
"RTN","PRCHJS06",185,0)
 ;This function builds the ZZ3 segment and adds it to the
"RTN","PRCHJS06",186,0)
 ;msg being built using HLO APIs. Any data manipulation
"RTN","PRCHJS06",187,0)
 ;or conversions are performed as needed.
"RTN","PRCHJS06",188,0)
 ;
"RTN","PRCHJS06",189,0)
 ;  Input:
"RTN","PRCHJS06",190,0)
 ;   PRCWRK - (required) name of work global containing 2237 data elements
"RTN","PRCHJS06",191,0)
 ;   PRCHLO - (required) HLO workspace used to build message, pass by ref
"RTN","PRCHJS06",192,0)
 ;
"RTN","PRCHJS06",193,0)
 ; Output:
"RTN","PRCHJS06",194,0)
 ;   Function value - returns 1 on success, 0 on failure
"RTN","PRCHJS06",195,0)
 ;            PRCER - (optional) on failure, an error message is returned, pass by ref
"RTN","PRCHJS06",196,0)
 ;         PRCTOARY - (optional, pass by ref) returns the built segment in this format:
"RTN","PRCHJS06",197,0)
 ;                       PRCTOARY(1)
"RTN","PRCHJS06",198,0)
 ;
"RTN","PRCHJS06",199,0)
 N PRCSEG  ;contains the segment's data
"RTN","PRCHJS06",200,0)
 N PRCRSLT ;function result
"RTN","PRCHJS06",201,0)
 ;
"RTN","PRCHJS06",202,0)
 ;init vars
"RTN","PRCHJS06",203,0)
 K PRCSEG S PRCSEG="" ;the segment should start off blank
"RTN","PRCHJS06",204,0)
 S PRCRSLT=1
"RTN","PRCHJS06",205,0)
 ;
"RTN","PRCHJS06",206,0)
 D SET^HLOAPI(.PRCSEG,"ZZ3",0)
"RTN","PRCHJS06",207,0)
 D SET^HLOAPI(.PRCSEG,$$FMTHL7^XLFDT($P($G(@PRCWRK@("COMMITDT")),U,1)),1)
"RTN","PRCHJS06",208,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("COMMIT")),U,2),2)
"RTN","PRCHJS06",209,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("TRANSAMT")),U,2),3)
"RTN","PRCHJS06",210,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("ACTDATA")),U,2),4)
"RTN","PRCHJS06",211,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("FCPPRJ")),U,2),5)
"RTN","PRCHJS06",212,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("ESTSHIP")),U,2),6)
"RTN","PRCHJS06",213,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("CTRLPT")),U,2),7)
"RTN","PRCHJS06",214,0)
 D SET^HLOAPI(.PRCSEG,$P($G(@PRCWRK@("EXPEND")),U,1),8)
"RTN","PRCHJS06",215,0)
 D SET^HLOAPI(.PRCSEG,$E($P($G(@PRCWRK@("BBFY")),U,2),1,4),9)
"RTN","PRCHJS06",216,0)
 ;
"RTN","PRCHJS06",217,0)
 ;add segment to message being built
"RTN","PRCHJS06",218,0)
 I '$$ADDSEG^HLOAPI(.PRCHLO,.PRCSEG,.PRCER,.PRCTOARY) D
"RTN","PRCHJS06",219,0)
 . S PRCRSLT=0
"RTN","PRCHJS06",220,0)
 . S PRCER="ZZ3 segment not built"
"RTN","PRCHJS06",221,0)
 ;
"RTN","PRCHJS06",222,0)
 Q PRCRSLT
"RTN","PRCHJS07")
0^11^B47804786^n/a
"RTN","PRCHJS07",1,0)
PRCHJS07 ;OI&T/KCL - IFCAP/ECMS INTERFACE RETRANSMIT 2237;6/6/12
"RTN","PRCHJS07",2,0)
 ;;5.1;IFCAP;**167**;Oct 20, 2000;Build 17
"RTN","PRCHJS07",3,0)
 ;Per VHA Directive 2004-38, this routine should not be modified.
"RTN","PRCHJS07",4,0)
 ;
"RTN","PRCHJS07",5,0)
ENTACT(PRCDUZ) ;Option [PRCHJ RETRANS 2237] entry action 
"RTN","PRCHJS07",6,0)
 ;This function is called from the entry action of the
"RTN","PRCHJS07",7,0)
 ;[PRCHJ RETRANS 2237] option. If the user is not assigned
"RTN","PRCHJS07",8,0)
 ;as the PPM ACCOUNTABLE OFFICER, access will be denied.
"RTN","PRCHJS07",9,0)
 ;
"RTN","PRCHJS07",10,0)
 ;  Input:
"RTN","PRCHJS07",11,0)
 ;   PRCDUZ - (required) IEN of user in the NEW PERSON (#200) file
"RTN","PRCHJS07",12,0)
 ;
"RTN","PRCHJS07",13,0)
 ; Output:
"RTN","PRCHJS07",14,0)
 ;   Function value - 1 on success, 0 on failure (access denied)
"RTN","PRCHJS07",15,0)
 ;
"RTN","PRCHJS07",16,0)
 N PRCIENS ;iens string for GETS^DIQ
"RTN","PRCHJS07",17,0)
 N PRCFLDS ;results array for GETS^DIQ
"RTN","PRCHJS07",18,0)
 N PRCERR  ;error array for GETS^DIQ
"RTN","PRCHJS07",19,0)
 N PRCRSLT ;function result
"RTN","PRCHJS07",20,0)
 ;
"RTN","PRCHJS07",21,0)
 S PRCRSLT=0
"RTN","PRCHJS07",22,0)
 ;
"RTN","PRCHJS07",23,0)
 I +$G(DUZ)>0 D
"RTN","PRCHJS07",24,0)
 . ;is user assigned as PPM ACCOUNTABLE OFFICER?
"RTN","PRCHJS07",25,0)
 . S PRCIENS=+$G(DUZ)_","
"RTN","PRCHJS07",26,0)
 . D GETS^DIQ(200,PRCIENS,"400","I","PRCFLDS","PRCERR")
"RTN","PRCHJS07",27,0)
 . Q:$D(PRCERR)
"RTN","PRCHJS07",28,0)
 . I $G(PRCFLDS(200,PRCIENS,400,"I"))=2 S PRCRSLT=1
"RTN","PRCHJS07",29,0)
 ;
"RTN","PRCHJS07",30,0)
 I 'PRCRSLT W !!,">>> You are not authorized to use this option!",!
"RTN","PRCHJS07",31,0)
 ;
"RTN","PRCHJS07",32,0)
 Q PRCRSLT
"RTN","PRCHJS07",33,0)
 ;
"RTN","PRCHJS07",34,0)
 ;
"RTN","PRCHJS07",35,0)
RETRANS ;Option [PRCHJ RETRANS 2237] run routine 
"RTN","PRCHJS07",36,0)
 ;This procedure is the run routine for the [PRCHJ RETRANS 2237]
"RTN","PRCHJS07",37,0)
 ;option. The option allows an IFCAP user having the Accountable
"RTN","PRCHJS07",38,0)
 ;Officer role to retransmit a 2237 to the Electronic Contracting
"RTN","PRCHJS07",39,0)
 ;Management System (eCMS) via HL7 messaging.
"RTN","PRCHJS07",40,0)
 ;
"RTN","PRCHJS07",41,0)
 ;  Input: None
"RTN","PRCHJS07",42,0)
 ; Output: None
"RTN","PRCHJS07",43,0)
 ;
"RTN","PRCHJS07",44,0)
 N PRCESIG  ;output from call to ESIG^PRCUESIG
"RTN","PRCHJS07",45,0)
 N PRCABORT ;flag to abort user prompting
"RTN","PRCHJS07",46,0)
 ;
"RTN","PRCHJS07",47,0)
 ;prompt - electronic signature to validate user
"RTN","PRCHJS07",48,0)
 W !
"RTN","PRCHJS07",49,0)
 S PRCESIG=""
"RTN","PRCHJS07",50,0)
 D ESIG^PRCUESIG($G(DUZ),.PRCESIG)
"RTN","PRCHJS07",51,0)
 Q:$G(PRCESIG)'=1
"RTN","PRCHJS07",52,0)
 ;
"RTN","PRCHJS07",53,0)
 ;prompt user to retransmit 2237 transactions until PRCABORT=1
"RTN","PRCHJS07",54,0)
 S PRCABORT=0
"RTN","PRCHJS07",55,0)
 F  D  Q:PRCABORT
"RTN","PRCHJS07",56,0)
 . N PRCER    ;transmission error text
"RTN","PRCHJS07",57,0)
 . N PRCLOGER ;error returned from LOG^PRCHJTA
"RTN","PRCHJS07",58,0)
 . ;prompt - select 2237 transaction in REQUEST WORKSHEET (#443) file
"RTN","PRCHJS07",59,0)
 . N DIC,DTOUT,DUOUT,X,Y ;^DIC variables
"RTN","PRCHJS07",60,0)
 . N PRCSELCT ;selected entry: ien^transaction #
"RTN","PRCHJS07",61,0)
 . W !
"RTN","PRCHJS07",62,0)
 . S DIC="^PRC(443,"
"RTN","PRCHJS07",63,0)
 . S DIC(0)="AEMQZ"
"RTN","PRCHJS07",64,0)
 . S DIC("A")="Select 2237 TRANSACTION NUMBER: "
"RTN","PRCHJS07",65,0)
 . ;(screen) only allow selection of 2237s with status of 'Sent to eCMS (P&C)' and
"RTN","PRCHJS07",66,0)
 . ;have not been processed by eCMS (no ECMS ACTIONUID)
"RTN","PRCHJS07",67,0)
 . S DIC("S")="I $P(^PRC(443,+$G(Y),0),U,7)=69,'$$ECMS2237^PRCHJUTL(Y)"
"RTN","PRCHJS07",68,0)
 . D ^DIC K DIC
"RTN","PRCHJS07",69,0)
 . S:$G(Y)>0 PRCSELCT=+$G(Y)_U_$G(Y(0,0))
"RTN","PRCHJS07",70,0)
 . ;abort if no 2237 transaction selected, or user enters up-arrow, or timed out
"RTN","PRCHJS07",71,0)
 . I (Y=-1)!($D(DTOUT))!($D(DUOUT)) S PRCABORT=1 Q
"RTN","PRCHJS07",72,0)
 . ;
"RTN","PRCHJS07",73,0)
 . ;prompt - review 2237 prior to retransmission?
"RTN","PRCHJS07",74,0)
 . N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y ;^DIR variables
"RTN","PRCHJS07",75,0)
 . W !
"RTN","PRCHJS07",76,0)
 . S DIR(0)="YA"
"RTN","PRCHJS07",77,0)
 . S DIR("B")="NO"
"RTN","PRCHJS07",78,0)
 . S DIR("A")="Would you like to review this 2237 transaction? "
"RTN","PRCHJS07",79,0)
 . S DIR("?")="'Yes' to review the 2237 prior to retransmitting, 'No' to not review."
"RTN","PRCHJS07",80,0)
 . D ^DIR K DIR
"RTN","PRCHJS07",81,0)
 . ;abort if user enters up-arrow, pressed Enter key, or timed out
"RTN","PRCHJS07",82,0)
 . I $D(DIRUT) S PRCABORT=1 Q
"RTN","PRCHJS07",83,0)
 . ;if Yes, display 2237 for review
"RTN","PRCHJS07",84,0)
 . I Y=1 D DISP2237(+$G(PRCSELCT))
"RTN","PRCHJS07",85,0)
 . ;
"RTN","PRCHJS07",86,0)
 . ;prompt - 2237 retransmit?
"RTN","PRCHJS07",87,0)
 . N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y ;^DIR variables
"RTN","PRCHJS07",88,0)
 . W !
"RTN","PRCHJS07",89,0)
 . S DIR(0)="YA"
"RTN","PRCHJS07",90,0)
 . S DIR("B")="NO"
"RTN","PRCHJS07",91,0)
 . S DIR("A")="Do you want to retransmit this 2237 transaction to eCMS? "
"RTN","PRCHJS07",92,0)
 . S DIR("?")="'Yes' to retransmit the 2237 to eCMS, 'No' to not retransmit."
"RTN","PRCHJS07",93,0)
 . D ^DIR K DIR
"RTN","PRCHJS07",94,0)
 . ;abort if user enters up-arrow, pressed Enter key, or timed out
"RTN","PRCHJS07",95,0)
 . I $D(DIRUT) S PRCABORT=1 Q
"RTN","PRCHJS07",96,0)
 . ;if No selected, quit and ask user for another 2237 transaction
"RTN","PRCHJS07",97,0)
 . I (Y=0) Q
"RTN","PRCHJS07",98,0)
 . ;
"RTN","PRCHJS07",99,0)
 . ;if Yes selected, retransmit 2237 to eCMS
"RTN","PRCHJS07",100,0)
 . W !!,"Retransmitting 2237 transaction to eCMS..."
"RTN","PRCHJS07",101,0)
 . N PRCMSGID ;ien of msg in HLO MESSAGES (#778) file
"RTN","PRCHJS07",102,0)
 . S PRCMSGID=$$SEND2237^PRCHJS01(+$G(PRCSELCT),.PRCER)
"RTN","PRCHJS07",103,0)
 . ;
"RTN","PRCHJS07",104,0)
 . I $G(PRCMSGID)>0 D
"RTN","PRCHJS07",105,0)
 . . W !?3,">>> 2237 transaction has been successfully retransmitted to eCMS."
"RTN","PRCHJS07",106,0)
 . . W !?3,"    Transaction Number: "_$P($G(PRCSELCT),U,2)
"RTN","PRCHJS07",107,0)
 . . W !?3,"        HLO Message ID: "_$G(PRCMSGID)
"RTN","PRCHJS07",108,0)
 . . ;
"RTN","PRCHJS07",109,0)
 . . ;log transmission in IFCAP/ECMS TRANSACTION (#414.06) file
"RTN","PRCHJS07",110,0)
 . . W !!?3,">>> Updating retransmission in IFCAP/ECMS Transaction file..."
"RTN","PRCHJS07",111,0)
 . . N PRCEVNT ;event array for LOG^PRCHJTA
"RTN","PRCHJS07",112,0)
 . . S PRCEVNT("MSGID")=$G(PRCMSGID)
"RTN","PRCHJS07",113,0)
 . . S PRCEVNT("IEN410")=+$G(PRCSELCT)
"RTN","PRCHJS07",114,0)
 . . S PRCEVNT("IFCAPU")=$G(DUZ)
"RTN","PRCHJS07",115,0)
 . . D LOG^PRCHJTA($P($G(PRCSELCT),U,2),,4,.PRCEVNT,.PRCLOGER)
"RTN","PRCHJS07",116,0)
 . . I +$G(PRCLOGER) W !?3,"    Error: "_$P($G(PRCLOGER),U,2)
"RTN","PRCHJS07",117,0)
 . E  D
"RTN","PRCHJS07",118,0)
 . . W !?3,">>> ERROR: 2237 was not retransmitted to eCMS!"
"RTN","PRCHJS07",119,0)
 . . W !?3,"    Transaction Number: "_$P($G(PRCSELCT),U,2)
"RTN","PRCHJS07",120,0)
 . . W !?3,"    Error: "_$G(PRCER)
"RTN","PRCHJS07",121,0)
 . . ;log transmission in IFCAP/ECMS TRANSACTION (#414.06) file
"RTN","PRCHJS07",122,0)
 . . W !!?3,">>> Updating transmission error in IFCAP/ECMS Transaction file..."
"RTN","PRCHJS07",123,0)
 . . N PRCEVNT ;event array for LOG^PRCHJTA
"RTN","PRCHJS07",124,0)
 . . S PRCEVNT("MSGID")=""
"RTN","PRCHJS07",125,0)
 . . S PRCEVNT("IEN410")=+$G(PRCSELCT)
"RTN","PRCHJS07",126,0)
 . . S PRCEVNT("IFCAPU")=$G(DUZ)
"RTN","PRCHJS07",127,0)
 . . S PRCEVNT("ERROR",1)="An error occurred when retransmitting the 2237 transaction to eCMS."
"RTN","PRCHJS07",128,0)
 . . S PRCEVNT("ERROR",2)="Error: "_$E($G(PRCER),1,60)
"RTN","PRCHJS07",129,0)
 . . I $D(XQY0) S PRCEVNT("ERROR",3)="Option: "_$P($G(XQY0),"^",2)
"RTN","PRCHJS07",130,0)
 . . D LOG^PRCHJTA($P($G(PRCSELCT),U,2),,4,.PRCEVNT,.PRCLOGER)
"RTN","PRCHJS07",131,0)
 . . I +$G(PRCLOGER) W !?3,"    Error: "_$P($G(PRCLOGER),U,2)
"RTN","PRCHJS07",132,0)
 . . ;
"RTN","PRCHJS07",133,0)
 . . ;send notification message with error to AO
"RTN","PRCHJS07",134,0)
 . . W !!?3,">>> Sending error notification mail message to Accountable Officer..."
"RTN","PRCHJS07",135,0)
 . . N PRCMSG1,PRCMSG2 ;input arrays for PHMSG^PRCHJMSG, pass by ref
"RTN","PRCHJS07",136,0)
 . . S PRCMSG1(1)=$P($G(PRCSELCT),U,2)
"RTN","PRCHJS07",137,0)
 . . S PRCMSG1(2)=5
"RTN","PRCHJS07",138,0)
 . . S PRCMSG1(3)=$$NOW^XLFDT
"RTN","PRCHJS07",139,0)
 . . I $G(PRCER)["REQUESTING SERVICE" D
"RTN","PRCHJS07",140,0)
 . . . S PRCMSG1(7)="Return 2237 to Control Point for edit and re-approval!"
"RTN","PRCHJS07",141,0)
 . . E  D
"RTN","PRCHJS07",142,0)
 . . . S PRCMSG1(7)="Please forward this message to appropriate OIT staff!"
"RTN","PRCHJS07",143,0)
 . . M PRCMSG2=PRCEVNT("ERROR") ;merge error array into PRCMSG2 array
"RTN","PRCHJS07",144,0)
 . . D PHMSG^PRCHJMSG(.PRCMSG1,.PRCMSG2) ;send msg
"RTN","PRCHJS07",145,0)
 . ;
"RTN","PRCHJS07",146,0)
 . ;prompt - retransmit another 2237 transaction?
"RTN","PRCHJS07",147,0)
 . N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y ;^DIR variables
"RTN","PRCHJS07",148,0)
 . S DIR(0)="YA"
"RTN","PRCHJS07",149,0)
 . S DIR("B")="NO"
"RTN","PRCHJS07",150,0)
 . S DIR("A")="Do you want to retransmit another 2237 transaction to eCMS? "
"RTN","PRCHJS07",151,0)
 . S DIR("?")="'Yes' to retransmit another 2237 to eCMS, 'No' to exit."
"RTN","PRCHJS07",152,0)
 . W !
"RTN","PRCHJS07",153,0)
 . D ^DIR K DIR
"RTN","PRCHJS07",154,0)
 . ;abort if user enters No, up-arrow, pressed Enter key, or timed out
"RTN","PRCHJS07",155,0)
 . I $D(DIRUT)!(Y=0) S PRCABORT=1 Q
"RTN","PRCHJS07",156,0)
 ;
"RTN","PRCHJS07",157,0)
 Q
"RTN","PRCHJS07",158,0)
 ;
"RTN","PRCHJS07",159,0)
 ;
"RTN","PRCHJS07",160,0)
DISP2237(DA) ;Display 2237 Utility
"RTN","PRCHJS07",161,0)
 ;This procedure calls ^PRCSD12 to disply a 2237 to the screen.
"RTN","PRCHJS07",162,0)
 ;
"RTN","PRCHJS07",163,0)
 ;  Input:
"RTN","PRCHJS07",164,0)
 ;   DA - (required var for ^PRCSD12) IEN of record in CONTROL POINT ACTIVITY (#410) file
"RTN","PRCHJS07",165,0)
 ;
"RTN","PRCHJS07",166,0)
 ; Output: None 
"RTN","PRCHJS07",167,0)
 ; 
"RTN","PRCHJS07",168,0)
 N PRCS,PRCPRIB,TRNODE
"RTN","PRCHJS07",169,0)
 S (PRCS,PRCPRIB)=$G(DA)
"RTN","PRCHJS07",170,0)
 S TRNODE(0)=0
"RTN","PRCHJS07",171,0)
 D ^PRCSD12
"RTN","PRCHJS07",172,0)
 Q
"RTN","PRCHJS07",173,0)
 ;
"RTN","PRCHJS07",174,0)
 ;
"RTN","PRCHJS07",175,0)
CONTINUE() ;Pause display utility
"RTN","PRCHJS07",176,0)
 ;This function is used to pause the display and prompt the 
"RTN","PRCHJS07",177,0)
 ;user to --> Enter RETURN to continue or '^' to exit
"RTN","PRCHJS07",178,0)
 ;
"RTN","PRCHJS07",179,0)
 ;  Input: None
"RTN","PRCHJS07",180,0)
 ;
"RTN","PRCHJS07",181,0)
 ; Output: 1 - continue
"RTN","PRCHJS07",182,0)
 ;         0 - quit/exit
"RTN","PRCHJS07",183,0)
 ;
"RTN","PRCHJS07",184,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y ;^DIR variables
"RTN","PRCHJS07",185,0)
 S DIR(0)="E"
"RTN","PRCHJS07",186,0)
 D ^DIR K DIR
"RTN","PRCHJS07",187,0)
 Q $S(Y'=1:0,1:1)
"RTN","PRCHJTA")
0^12^B48621585^n/a
"RTN","PRCHJTA",1,0)
PRCHJTA ;OI&T/DDA - MANAGES DATA FROM MESSAGING EVENTS INTO 414.06 ;5/25/12 8:53am
"RTN","PRCHJTA",2,0)
 ;;5.1;IFCAP;**167**;Oct 20,2000;Build 17
"RTN","PRCHJTA",3,0)
 ;Per VHA Directive 2004-38, this routine should not be modified.
"RTN","PRCHJTA",4,0)
 ;
"RTN","PRCHJTA",5,0)
 Q
"RTN","PRCHJTA",6,0)
 ;FOR ENTRY POINT "LOG":
"RTN","PRCHJTA",7,0)
 ;API CALLED AS: LOG^PRCHJTA(var1,var2,var3,.array,.return)
"RTN","PRCHJTA",8,0)
 ; Globals are locked within the API
"RTN","PRCHJTA",9,0)
 ;INPUT
"RTN","PRCHJTA",10,0)
 ; var1 PRCHJID - FREE TEXT - EXTERNAL OF '410;.01' AS SHARED WITH ECMS (required for all)
"RTN","PRCHJTA",11,0)
 ; var2 ECMSID - FREE TEXT - AS SENT FROM ECMS [ActionID] (for inbound types if available)
"RTN","PRCHJTA",12,0)
 ; var3 TYPE - FREE TEXT or CODE of MESSAGE TYPE as defined in 'EVENT TYPE' '414.06;10;.02' (required for all)
"RTN","PRCHJTA",13,0)
 ; array EVENT - ARRAY THAT HOLDS THE EVENT SPECIFIC DATA TO BE STORED IN THE FILE (required, elements vary)
"RTN","PRCHJTA",14,0)
 ;       EVENT("MSGID")= FREE TEXT STRING OF HLO MESSAGE ID (if available)
"RTN","PRCHJTA",15,0)
 ;       EVENT("IEN410")= FM INTERNAL OF THE 410 RECORD (required for outbound, non-acknowledgement, types only)
"RTN","PRCHJTA",16,0)
 ;       EVENT("IFCAPU")= FM INTERNAL/DUZ OF IFCAP USER(required for outbound, non-acknowledgement, types only)
"RTN","PRCHJTA",17,0)
 ;       EVENT("STN")= FREE TEXT STRING OF THE STATION AS PASSED FROM ECMS (always store if available)
"RTN","PRCHJTA",18,0)
 ;       EVENT("SUBSTN")= FREE TEXT STRING OF THE SUB-STATION AS PASSED FROM ECMS (always store if available)
"RTN","PRCHJTA",19,0)
 ;       EVENT("ECMSU")= FREE TEXT OF ECMS USER AS PASSED FROM ECMS (always store if available)
"RTN","PRCHJTA",20,0)
 ;       EVENT("ECMSPH")= FREE TEXT OF THE ECMS CONTACT PHONE (always store if available)
"RTN","PRCHJTA",21,0)
 ;       EVENT("ECMSEM")= FREE TEXT OF THE ECMS CONTACT EMAIL (always store if available)
"RTN","PRCHJTA",22,0)
 ;       EVENT("ECMSDT")= DATE OF THE USER ACTION, RETURN/CANCEL, ON ECMS (always store if available)
"RTN","PRCHJTA",23,0)
 ;       EVENT("ECMSRN")= FREE TEXT OF THE RETURN/CANCEL REASON FROM ECMS (always store if available)
"RTN","PRCHJTA",24,0)
 ;       EVENT("ECMSCM")= FREE TEXT OF COMMENTS FROM ECMS (always store if available)
"RTN","PRCHJTA",25,0)
 ;       EVENT("ERROR",n)= FREE TEXT, INDIVIDUAL ERROR LINE TO BE STORED. n= non-zero, non-repeating integer
"RTN","PRCHJTA",26,0)
 ;OUTPUT
"RTN","PRCHJTA",27,0)
 ; .return ERR - 1^"error text"= ERROR STORING DATA, 0= NO ERROR
"RTN","PRCHJTA",28,0)
 ;
"RTN","PRCHJTA",29,0)
LOG(PRCHJID,ECMSID,TYPE,EVENT,ERR) ; params defined above
"RTN","PRCHJTA",30,0)
 N LINE,PRCERR,PRCIEN,PRCTIEN,PRCVIEN,TYPETXT
"RTN","PRCHJTA",31,0)
 S ERR=0
"RTN","PRCHJTA",32,0)
 D TYPE
"RTN","PRCHJTA",33,0)
 S:(+TYPE<1)!(+TYPE>11)!(+TYPE=5) ERR="1^Unknown TYPE "_TYPE
"RTN","PRCHJTA",34,0)
 I +$G(PRCHJID)=0 S ERR="2^Missing Transaction Number" Q
"RTN","PRCHJTA",35,0)
 I '((TYPE=1)!(TYPE=4)) G OTHER
"RTN","PRCHJTA",36,0)
 ; TYPE 1 or TYPE 4 CREATE A NEW ENTRY IN 414.06 unless a record already exists for this Transaction ID
"RTN","PRCHJTA",37,0)
 S PRCTIEN=0
"RTN","PRCHJTA",38,0)
 S PRCTIEN=$O(^PRCV(414.06,"B",PRCHJID,PRCTIEN))
"RTN","PRCHJTA",39,0)
 G:+PRCTIEN>0 OTHER
"RTN","PRCHJTA",40,0)
 ;lock the file to get IEN for new TRANSACTION record
"RTN","PRCHJTA",41,0)
 S PRCVIEN=0
"RTN","PRCHJTA",42,0)
 L +^PRCV(414.06,PRCVIEN):DILOCKTM E  S ERR="3^Unable to lock record" K PRCVIEN Q
"RTN","PRCHJTA",43,0)
 ; Create parent record
"RTN","PRCHJTA",44,0)
 I +$G(EVENT("IEN410"))=0 S ERR="4^Missing CONTROL POINT ACTIVITY, IEN" S PRCTIEN=0 G XLOG
"RTN","PRCHJTA",45,0)
 S PRC41406(414.06,"+1,",.01)=PRCHJID
"RTN","PRCHJTA",46,0)
 S PRC41406(414.06,"+1,",.03)=TYPETXT
"RTN","PRCHJTA",47,0)
 S PRC41406(414.06,"+1,",1)=EVENT("IEN410")
"RTN","PRCHJTA",48,0)
 S PRCIEN=""
"RTN","PRCHJTA",49,0)
 D UPDATE^DIE("","PRC41406","PRCIEN","PRCERR")
"RTN","PRCHJTA",50,0)
 I $D(PRCERR) D
"RTN","PRCHJTA",51,0)
 .S ERR="5^Error creating TRANSACTION record: "_$G(PRCERR("DIERR","1","TEXT",1))
"RTN","PRCHJTA",52,0)
 G:+ERR XLOG
"RTN","PRCHJTA",53,0)
 S PRCTIEN=PRCIEN(1)
"RTN","PRCHJTA",54,0)
 K PRC41406,PRCIEN,PRCERR
"RTN","PRCHJTA",55,0)
 ; Create EVENT sub-record
"RTN","PRCHJTA",56,0)
 S PRC41406(414.061,"+2,"_PRCTIEN_",",.01)=$$NOW^XLFDT
"RTN","PRCHJTA",57,0)
 S PRC41406(414.061,"+2,"_PRCTIEN_",",.02)=TYPE
"RTN","PRCHJTA",58,0)
 S:$G(EVENT("MSGID"))'="" PRC41406(414.061,"+2,"_PRCTIEN_",",.03)=EVENT("MSGID")
"RTN","PRCHJTA",59,0)
 S PRC41406(414.061,"+2,"_PRCTIEN_",",3)=EVENT("IFCAPU")
"RTN","PRCHJTA",60,0)
 D UPDATE^DIE("","PRC41406","PRCIEN","PRCERR")
"RTN","PRCHJTA",61,0)
 I $D(PRCERR) D
"RTN","PRCHJTA",62,0)
 .S ERR="6^Error creating TRANSACTION  record: "_$G(PRCERR("DIERR","1","TEXT",1))
"RTN","PRCHJTA",63,0)
  ; Store Transaction ERROR text if any
"RTN","PRCHJTA",64,0)
 K PRCERR
"RTN","PRCHJTA",65,0)
 S PRCIEN(1)=PRCTIEN
"RTN","PRCHJTA",66,0)
 S PRCVIEN=""
"RTN","PRCHJTA",67,0)
 S LINE=0
"RTN","PRCHJTA",68,0)
 I $D(EVENT("ERROR")) F  S LINE=$O(EVENT("ERROR",LINE)) Q:LINE=""  D  Q:+ERR
"RTN","PRCHJTA",69,0)
 .K PRC41406
"RTN","PRCHJTA",70,0)
 .S PRCVIEN(3)=LINE
"RTN","PRCHJTA",71,0)
 .S:$G(EVENT("ERROR",LINE))'="" PRC41406(414.0613,"+3,"_PRCIEN(2)_","_PRCIEN(1)_",",.01)=EVENT("ERROR",LINE)
"RTN","PRCHJTA",72,0)
 .D UPDATE^DIE("","PRC41406","PRCVIEN","PRCERR")
"RTN","PRCHJTA",73,0)
 .I $D(PRCERR) D
"RTN","PRCHJTA",74,0)
 ..S ERR="10.1^Error updating TRANSACTION word-processing field ERROR: "_$G(PRCERR("DIERR","1","TEXT",1))
"RTN","PRCHJTA",75,0)
 ..Q
"RTN","PRCHJTA",76,0)
 .Q
"RTN","PRCHJTA",77,0)
 S PRCTIEN=0
"RTN","PRCHJTA",78,0)
 G XLOG
"RTN","PRCHJTA",79,0)
OTHER ; LOG ALL OTHER TYPES
"RTN","PRCHJTA",80,0)
 ; Find the TRANSACTION record
"RTN","PRCHJTA",81,0)
 S PRCTIEN=0
"RTN","PRCHJTA",82,0)
 S PRCTIEN=$O(^PRCV(414.06,"B",PRCHJID,PRCTIEN))
"RTN","PRCHJTA",83,0)
 I PRCTIEN="" S ERR="7^"_PRCHJID_" does not exist in the Transaction file." K PRCTIEN Q
"RTN","PRCHJTA",84,0)
 L +^PRCV(414.06,PRCTIEN):DILOCKTM E  S ERR="8^Unable to lock record" K PRCTIEN Q
"RTN","PRCHJTA",85,0)
 ; Store header data
"RTN","PRCHJTA",86,0)
 S:$G(ECMSID)'="" PRC41406(414.06,PRCTIEN_",",.02)=ECMSID
"RTN","PRCHJTA",87,0)
 S PRC41406(414.06,PRCTIEN_",",.03)=TYPETXT
"RTN","PRCHJTA",88,0)
 S:+$G(EVENT("IEN410")) PRC41406(414.06,PRCTIEN_",",1)=EVENT("IEN410")
"RTN","PRCHJTA",89,0)
 D FILE^DIE("","PRC41406","PRCERR")
"RTN","PRCHJTA",90,0)
 ; Store Transaction data
"RTN","PRCHJTA",91,0)
 K PRC41406
"RTN","PRCHJTA",92,0)
 S PRC41406(414.061,"+2,"_PRCTIEN_",",.01)=$$NOW^XLFDT
"RTN","PRCHJTA",93,0)
 S PRC41406(414.061,"+2,"_PRCTIEN_",",.02)=TYPE
"RTN","PRCHJTA",94,0)
 S:$G(EVENT("MSGID"))'="" PRC41406(414.061,"+2,"_PRCTIEN_",",.03)=EVENT("MSGID")
"RTN","PRCHJTA",95,0)
 S:$G(EVENT("STN"))'="" PRC41406(414.061,"+2,"_PRCTIEN_",",1)=EVENT("STN")
"RTN","PRCHJTA",96,0)
 S:$G(EVENT("SUBSTN"))'="" PRC41406(414.061,"+2,"_PRCTIEN_",",2)=EVENT("SUBSTN")
"RTN","PRCHJTA",97,0)
 S:$G(EVENT("IFCAPU"))'="" PRC41406(414.061,"+2,"_PRCTIEN_",",3)=EVENT("IFCAPU")
"RTN","PRCHJTA",98,0)
 ;S:$G(EVENT("ECMSU"))'="" PRC41406(414.061,"+2,"_PRCTIEN_",",4)=EVENT("ECMSU")
"RTN","PRCHJTA",99,0)
 S:$G(EVENT("ECMSPH"))'="" PRC41406(414.061,"+2,"_PRCTIEN_",",5)=EVENT("ECMSPH")
"RTN","PRCHJTA",100,0)
 S:$G(EVENT("ECMSEM"))'="" PRC41406(414.061,"+2,"_PRCTIEN_",",6)=EVENT("ECMSEM")
"RTN","PRCHJTA",101,0)
 S:$G(EVENT("ECMSDT"))'="" PRC41406(414.061,"+2,"_PRCTIEN_",",7)=EVENT("ECMSDT")
"RTN","PRCHJTA",102,0)
 S:$G(EVENT("ECMSRN"))'="" PRC41406(414.061,"+2,"_PRCTIEN_",",10)=EVENT("ECMSRN")
"RTN","PRCHJTA",103,0)
 S PRC41406(414.061,"+2,"_PRCTIEN_",",11)=$S($G(EVENT("ECMSCM"))'="":EVENT("ECMSCM")_" ",1:"")_$S($G(EVENT("ECMSU"))'="":"{"_EVENT("ECMSU")_"}",1:"")
"RTN","PRCHJTA",104,0)
 S PRC41406(414.061,"+2,"_PRCTIEN_",",11)=$E(PRC41406(414.061,"+2,"_PRCTIEN_",",11),1,100)
"RTN","PRCHJTA",105,0)
 D UPDATE^DIE("","PRC41406","PRCVIEN","PRCERR")
"RTN","PRCHJTA",106,0)
 I $D(PRCERR) D
"RTN","PRCHJTA",107,0)
 .S ERR="9^Error updating TRANSACTION record: "_$G(PRCERR("DIERR","1","TEXT",1))
"RTN","PRCHJTA",108,0)
 G:+ERR XLOG
"RTN","PRCHJTA",109,0)
 ; Store Transaction ERROR text if any
"RTN","PRCHJTA",110,0)
 K PRCERR
"RTN","PRCHJTA",111,0)
 S PRCVIEN(1)=PRCTIEN
"RTN","PRCHJTA",112,0)
 S PRCVIEN=""
"RTN","PRCHJTA",113,0)
 S LINE=0
"RTN","PRCHJTA",114,0)
 I $D(EVENT("ERROR")) F  S LINE=$O(EVENT("ERROR",LINE)) Q:LINE=""  D  Q:+ERR
"RTN","PRCHJTA",115,0)
 .K PRC41406
"RTN","PRCHJTA",116,0)
 .S PRCVIEN(3)=LINE
"RTN","PRCHJTA",117,0)
 .S:$G(EVENT("ERROR",LINE))'="" PRC41406(414.0613,"+3,"_PRCVIEN(2)_","_PRCVIEN(1)_",",.01)=EVENT("ERROR",LINE)
"RTN","PRCHJTA",118,0)
 .D UPDATE^DIE("","PRC41406","PRCVIEN","PRCERR")
"RTN","PRCHJTA",119,0)
 .I $D(PRCERR) D
"RTN","PRCHJTA",120,0)
 ..S ERR="10^Error updating TRANSACTION word-processing field ERROR: "_$G(PRCERR("DIERR","1","TEXT",1))
"RTN","PRCHJTA",121,0)
 ..Q
"RTN","PRCHJTA",122,0)
 .Q
"RTN","PRCHJTA",123,0)
XLOG ;EXIT
"RTN","PRCHJTA",124,0)
 L -^PRCV(414.06,PRCTIEN)
"RTN","PRCHJTA",125,0)
 ; A Hang command is needed because multiple calls to this API in succession may lead to an attempt to overwrite.
"RTN","PRCHJTA",126,0)
 H 1
"RTN","PRCHJTA",127,0)
 ; No kills needed, variables were Newed.
"RTN","PRCHJTA",128,0)
 Q
"RTN","PRCHJTA",129,0)
 ; API TO RETURN A SINGLE RECORD'S MULTIPLE EVENTS.
"RTN","PRCHJTA",130,0)
 ;Called as DATA^PRCHJTA(IEN,.OUTPUT,.ERR)
"RTN","PRCHJTA",131,0)
 ;Input:
"RTN","PRCHJTA",132,0)
 ;      IEN- Internal entry number of a record in 414.06
"RTN","PRCHJTA",133,0)
 ;Output:
"RTN","PRCHJTA",134,0)
 ;      OUTPUT- Array holding the data from all events of a transaction record.
"RTN","PRCHJTA",135,0)
 ;      OUTPUT(IFCAP REFERENCE NUMBER, EVENT DATE, EVENT TYPE,0)= External Reference Number^Transaction Status^HL7 Message ID^Station^Sub-station^eCMS User^eCMS Phone^eCMS eMail^Returned/Canceled Date^Returned/Canceled Reason^Comments
"RTN","PRCHJTA",136,0)
 ;      OUTPUT(IFCAP REFERENCE NUMBER, EVENT DATE, EVENT TYPE,n)= Error line n (repeating: n=1 thru number of lines)
"RTN","PRCHJTA",137,0)
 ;      ERR- First "^" piece equals "1" if no record exists for the IEN passed in.
"RTN","PRCHJTA",138,0)
DATA(IEN,OUTPUT,ERR) ;
"RTN","PRCHJTA",139,0)
 N IEN0,EVENT,E0,E1,E2,LINE,TYPE,TYPETXT
"RTN","PRCHJTA",140,0)
 I '$D(^PRCV(414.06,IEN,0)) S ERR="1^RECORD DOES NOT EXIST" G XDATA
"RTN","PRCHJTA",141,0)
 S IEN0=^PRCV(414.06,IEN,0)
"RTN","PRCHJTA",142,0)
 S EVENT=0
"RTN","PRCHJTA",143,0)
 F  S EVENT=$O(^PRCV(414.06,IEN,1,EVENT)) Q:+EVENT=0  D
"RTN","PRCHJTA",144,0)
 .S E0=$G(^PRCV(414.06,IEN,1,EVENT,0))
"RTN","PRCHJTA",145,0)
 .S E1=$G(^PRCV(414.06,IEN,1,EVENT,1))
"RTN","PRCHJTA",146,0)
 .S E2=$G(^PRCV(414.06,IEN,1,EVENT,2))
"RTN","PRCHJTA",147,0)
 .S TYPE=$P(E0,"^",2) Q:TYPE=""  D TYPE
"RTN","PRCHJTA",148,0)
 .S OUTPUT($P(IEN0,"^"),$P(E0,"^"),TYPE,0)=$P(IEN0,"^",2)_"^"_TYPETXT_"^"_$P(E0,"^",3)_"^"_$P(E1,"^")_"^"_$P(E1,"^",2)_"^^"_$P(E1,"^",5)_"^"_$P(E1,"^",6)_"^"_$P(E1,"^",7)_"^"_$P(E2,"^")_"^"_$P(E2,"^",2)
"RTN","PRCHJTA",149,0)
 .S LINE=0
"RTN","PRCHJTA",150,0)
 .F  S LINE=$O(^PRCV(414.06,IEN,1,EVENT,3,LINE)) Q:+LINE=0  D
"RTN","PRCHJTA",151,0)
 ..S OUTPUT($P(IEN0,"^"),$P(E0,"^"),TYPE,LINE)=^PRCV(414.06,IEN,1,EVENT,3,LINE,0)
"RTN","PRCHJTA",152,0)
 ..Q
"RTN","PRCHJTA",153,0)
 .Q
"RTN","PRCHJTA",154,0)
 Q
"RTN","PRCHJTA",155,0)
XDATA ;EXIT
"RTN","PRCHJTA",156,0)
 Q
"RTN","PRCHJTA",157,0)
TYPE  ; set TYPE and TYPETXT
"RTN","PRCHJTA",158,0)
 I $G(TYPE)'="" D
"RTN","PRCHJTA",159,0)
 . S:(TYPE="2237 SENT")!(TYPE=1) TYPE=1,TYPETXT="2237 SENT"
"RTN","PRCHJTA",160,0)
 . S:(TYPE="2237 ACKNOWLEDGED")!(TYPE=2) TYPE=2,TYPETXT="2237 ACKNOWLEDGED"
"RTN","PRCHJTA",161,0)
 . S:(TYPE="2237 APPLICATION ERROR")!(TYPE=3) TYPE=1,TYPETXT="2237 APPLICATION ERROR"
"RTN","PRCHJTA",162,0)
 . S:(TYPE="2237 RESENT")!(TYPE=4) TYPE=4,TYPETXT="2237 RESENT"
"RTN","PRCHJTA",163,0)
 . S:(TYPE="RETURN TO ACCOUNTABLE OFFICER")!(TYPE=6) TYPE=6,TYPETXT="RETURN TO ACCOUNTABLE OFFICER"
"RTN","PRCHJTA",164,0)
 . S:(TYPE="RETURN TO AO ACK")!(TYPE=7) TYPE=7,TYPETXT="RETURN TO AO ACK"
"RTN","PRCHJTA",165,0)
 . S:(TYPE="RETURN TO CONTROL POINT")!(TYPE=8) TYPE=8,TYPETXT="RETURN TO CONTROL POINT"
"RTN","PRCHJTA",166,0)
 . S:(TYPE="RETURN TO CP ACK")!(TYPE=9) TYPE=9,TYPETXT="RETURN TO CP ACK"
"RTN","PRCHJTA",167,0)
 . S:(TYPE="2237 CANCELED")!(TYPE=10) TYPE=10,TYPETXT="2237 CANCELED"
"RTN","PRCHJTA",168,0)
 . S:(TYPE="2237 CANCEL ACK")!(TYPE=11) TYPE=11,TYPETXT="2237 CANCEL ACK"
"RTN","PRCHJTA",169,0)
 . Q
"RTN","PRCHJTA",170,0)
 Q
"RTN","PRCHJTA",171,0)
CONTACT(NAME) ; Call to transform the data for use within the "ACONTACT" xref for 414.06;10;6 ECMS EMAIL field
"RTN","PRCHJTA",172,0)
 N PRCC,PRCL,PRCF,PRCR,PRCN
"RTN","PRCHJTA",173,0)
 S PRCC=$P(NAME,"@",1),PRCL=$L(PRCC,".")
"RTN","PRCHJTA",174,0)
 S PRCF=$P(PRCC,".",PRCL)
"RTN","PRCHJTA",175,0)
 S PRCR=""
"RTN","PRCHJTA",176,0)
 F PRCN=1:1:(PRCL-1) S PRCR=PRCR_" "_$P(PRCC,".",PRCN)
"RTN","PRCHJTA",177,0)
 S PRCC=PRCF_PRCR
"RTN","PRCHJTA",178,0)
 S PRCC=$$UP^XLFSTR(PRCC)
"RTN","PRCHJTA",179,0)
 Q PRCC
"RTN","PRCHJUTL")
0^19^B5808246^n/a
"RTN","PRCHJUTL",1,0)
PRCHJUTL ;OI&T/LKG,KCL-UTILITY FUNCTIONS IFCAP/ECMS INTERFACE ;6/22/12  15:52
"RTN","PRCHJUTL",2,0)
 ;;5.1;IFCAP;**167**;Oct 20, 2000;Build 17
"RTN","PRCHJUTL",3,0)
 ;Per VHA Directive 2004-38, this routine should not be modified.
"RTN","PRCHJUTL",4,0)
 ;
"RTN","PRCHJUTL",5,0)
 ;
"RTN","PRCHJUTL",6,0)
ECMS2237(PRCHJDA) ;Checks 2237 to see if processed in eCMS - Returns 1 if
"RTN","PRCHJUTL",7,0)
 ;processed in eCMS and 0 if not. Check on basis of whether the ECMS
"RTN","PRCHJUTL",8,0)
 ;ACTIONUID field is populated.
"RTN","PRCHJUTL",9,0)
 N X S X=($P($G(^PRCS(410,PRCHJDA,1)),U,8)'="")
"RTN","PRCHJUTL",10,0)
 Q X
"RTN","PRCHJUTL",11,0)
 ;
"RTN","PRCHJUTL",12,0)
 ;
"RTN","PRCHJUTL",13,0)
UPD443(PRC443R,PRCERR) ;Update file #443 record
"RTN","PRCHJUTL",14,0)
 ;This function is used to update the following fields in
"RTN","PRCHJUTL",15,0)
 ;a REQUEST WORKSHEET (#443) record:
"RTN","PRCHJUTL",16,0)
 ;
"RTN","PRCHJUTL",17,0)
 ; Field Name           Field #
"RTN","PRCHJUTL",18,0)
 ; -------------------  -------
"RTN","PRCHJUTL",19,0)
 ; CURRENT STATUS       1.5
"RTN","PRCHJUTL",20,0)
 ; ACCOUNTABLE OFFICER  2
"RTN","PRCHJUTL",21,0)
 ; VALIDATION CODE      3
"RTN","PRCHJUTL",22,0)
 ; ESIG DATE/TIME       4
"RTN","PRCHJUTL",23,0)
 ;
"RTN","PRCHJUTL",24,0)
 ;  Input:
"RTN","PRCHJUTL",25,0)
 ;  PRC443R - (required) IEN of record in REQUEST WORKSHEET (#443) file
"RTN","PRCHJUTL",26,0)
 ;
"RTN","PRCHJUTL",27,0)
 ; Output:
"RTN","PRCHJUTL",28,0)
 ;   Function Value - returns 1 on success, 0 on failure
"RTN","PRCHJUTL",29,0)
 ;           PRCERR - (optional) on failure, an error message is returned,
"RTN","PRCHJUTL",30,0)
 ;                    pass by ref
"RTN","PRCHJUTL",31,0)
 ;
"RTN","PRCHJUTL",32,0)
 N PRCRSLT ;function result
"RTN","PRCHJUTL",33,0)
 N PRCIENS ;iens string for FM data array
"RTN","PRCHJUTL",34,0)
 N PRCFDA  ;FM data array
"RTN","PRCHJUTL",35,0)
 ;
"RTN","PRCHJUTL",36,0)
 S PRC443R=+$G(PRC443R)
"RTN","PRCHJUTL",37,0)
 S PRCRSLT=0
"RTN","PRCHJUTL",38,0)
 S PRCERR="Invalid input parameter"
"RTN","PRCHJUTL",39,0)
 ;
"RTN","PRCHJUTL",40,0)
 I PRC443R>0 D
"RTN","PRCHJUTL",41,0)
 . K PRCERR
"RTN","PRCHJUTL",42,0)
 . S PRCIENS=PRC443R_","
"RTN","PRCHJUTL",43,0)
 . S PRCFDA(443,PRCIENS,1.5)=60 ;Pending Accountable Officer Sig.
"RTN","PRCHJUTL",44,0)
 . S PRCFDA(443,PRCIENS,2)="@"  ;delete
"RTN","PRCHJUTL",45,0)
 . S PRCFDA(443,PRCIENS,3)="@"  ;delete
"RTN","PRCHJUTL",46,0)
 . S PRCFDA(443,PRCIENS,4)="@"  ;delete
"RTN","PRCHJUTL",47,0)
 . D FILE^DIE("K","PRCFDA","PRCERR")
"RTN","PRCHJUTL",48,0)
 . ;quit if filing error
"RTN","PRCHJUTL",49,0)
 . I $D(PRCERR) S PRCERR=$G(PRCERR("DIERR","1","TEXT",1)) Q
"RTN","PRCHJUTL",50,0)
 . ;
"RTN","PRCHJUTL",51,0)
 . ;success
"RTN","PRCHJUTL",52,0)
 . S PRCRSLT=1
"RTN","PRCHJUTL",53,0)
 ;
"RTN","PRCHJUTL",54,0)
 Q PRCRSLT
"RTN","PRCHJUTL",55,0)
 ;
"RTN","PRCHJUTL",56,0)
 ;
"RTN","PRCHJUTL",57,0)
UPD410(PRC410R,PRCERR) ;Update file #410 record
"RTN","PRCHJUTL",58,0)
 ;This function is used to update the following fields in
"RTN","PRCHJUTL",59,0)
 ;a CONTROL POINT ACTIVITY (#410) record:
"RTN","PRCHJUTL",60,0)
 ;
"RTN","PRCHJUTL",61,0)
 ; Field Name           Field #
"RTN","PRCHJUTL",62,0)
 ; -------------------  -------
"RTN","PRCHJUTL",63,0)
 ; ACCOUNTABLE OFFICER  39
"RTN","PRCHJUTL",64,0)
 ; AO SIGNATURE DATE    69
"RTN","PRCHJUTL",65,0)
 ;
"RTN","PRCHJUTL",66,0)
 ;  Input:
"RTN","PRCHJUTL",67,0)
 ;  PRC410R - (required) IEN of record in CONTROL POINT ACTIVITY (#410) file
"RTN","PRCHJUTL",68,0)
 ;
"RTN","PRCHJUTL",69,0)
 ; Output:
"RTN","PRCHJUTL",70,0)
 ;   Function Value - returns 1 on success, 0 on failure
"RTN","PRCHJUTL",71,0)
 ;           PRCERR - (optional) on failure, an error message is returned,
"RTN","PRCHJUTL",72,0)
 ;                    pass by ref
"RTN","PRCHJUTL",73,0)
 ;
"RTN","PRCHJUTL",74,0)
 N PRCRSLT ;function result
"RTN","PRCHJUTL",75,0)
 N PRCIENS ;iens string for FM data array
"RTN","PRCHJUTL",76,0)
 N PRCFDA  ;FM data array
"RTN","PRCHJUTL",77,0)
 ;
"RTN","PRCHJUTL",78,0)
 S PRC410R=+$G(PRC410R)
"RTN","PRCHJUTL",79,0)
 S PRCRSLT=0
"RTN","PRCHJUTL",80,0)
 S PRCERR="Invalid input parameter"
"RTN","PRCHJUTL",81,0)
 ;
"RTN","PRCHJUTL",82,0)
 I PRC410R>0 D
"RTN","PRCHJUTL",83,0)
 . K PRCERR
"RTN","PRCHJUTL",84,0)
 . S PRCIENS=PRC410R_","
"RTN","PRCHJUTL",85,0)
 . S PRCFDA(410,PRCIENS,39)="@" ;delete
"RTN","PRCHJUTL",86,0)
 . S PRCFDA(410,PRCIENS,69)="@" ;delete
"RTN","PRCHJUTL",87,0)
 . D FILE^DIE("K","PRCFDA","PRCERR")
"RTN","PRCHJUTL",88,0)
 . ;quit if filing error
"RTN","PRCHJUTL",89,0)
 . I $D(PRCERR) S PRCERR=$G(PRCERR("DIERR","1","TEXT",1)) Q
"RTN","PRCHJUTL",90,0)
 . ;
"RTN","PRCHJUTL",91,0)
 . ;success
"RTN","PRCHJUTL",92,0)
 . S PRCRSLT=1
"RTN","PRCHJUTL",93,0)
 ;
"RTN","PRCHJUTL",94,0)
 Q PRCRSLT
"RTN","PRCSD12")
0^15^B5330398^B5174849
"RTN","PRCSD12",1,0)
PRCSD12 ;WISC/SAW-CONTROL POINT ACT. 2237 TERMINAL DISPLAY ;6/22/12  16:26
"RTN","PRCSD12",2,0)
V ;;5.1;IFCAP;**167**;Oct 20, 2000;Build 17
"RTN","PRCSD12",3,0)
 ;Per VHA Directive 2004-38, this routine should not be modified.
"RTN","PRCSD12",4,0)
 S U="^",P(1)=0,Z1="" D NOW^%DTC S Y=% D DD^%DT W @IOF S L="",$P(L,"-",IOM)="-"
"RTN","PRCSD12",5,0)
 S P=$S($D(^PRCS(410,DA,1)):$P(^(1),U,3),1:""),P=$S(P="EM":"***EMERGENCY***",P="SP":"*SPECIAL*",1:"STANDARD") W ?26,"PRIORITY: ",P
"RTN","PRCSD12",6,0)
 W:$$ECMS2237^PRCHJUTL(DA) ?55,"Sent to eCMS"
"RTN","PRCSD12",7,0)
 W !,Y,?31,$P(^PRCS(410,DA,0),U) W !,L
"RTN","PRCSD12",8,0)
 W !,?16,"REQUEST, TURN-IN, AND RECEIPT FOR PROPERTY OR SERVICES" W !,L
"RTN","PRCSD12",9,0)
 W !,"TO: A&MM Officer",?24,"Requesting Office"
"RTN","PRCSD12",10,0)
 W !,?24 S P=$P(^PRCS(410,DA,0),U,5),P1=$S($D(^(3)):+$P(^(3),U),1:"") I P,P1 S P=$S($D(^PRC(420,P,1,P1,0)):$P(^(0),U,10),1:"") I P,$D(^DIC(49,P,0)) W $P(^(0),U) W:$P(^(0),U,8)]"" " ("_$P(^(0),U,8)_")"
"RTN","PRCSD12",11,0)
 W !,$E(L,1,23)
"RTN","PRCSD12",12,0)
 W " ",$E(L,25,IOM)
"RTN","PRCSD12",13,0)
 W !,"Action Requested",?24,"Date Prepared",?46,"Date Required"
"RTN","PRCSD12",14,0)
 W !,?4,"Delivery",?24 I $D(^PRCS(410,DA,1)),$P(^(1),U)'="" S Y=$P(^(1),U) D DD^%DT W Y
"RTN","PRCSD12",15,0)
 W ?46 I $D(^PRCS(410,DA,1)),$P(^(1),U,4)'="" S Y=$P(^(1),U,4) D DD^%DT W Y
"RTN","PRCSD12",16,0)
 W !,$E(L,1,23)
"RTN","PRCSD12",17,0)
 W " ",$E(L,25,45)
"RTN","PRCSD12",18,0)
 W " ",$E(L,47,IOM)
"RTN","PRCSD12",19,0)
 W !,?2,"ITEM NO.   ",?23,"DESCRIPTION",?52," QUANTITY  UNIT ESTIMATED"
"RTN","PRCSD12",20,0)
 W !,"OR STOCK NO. ",?68,"UNIT COST",!,L
"RTN","PRCSD12",21,0)
 D ^PRCSD121 G EXIT:Z1=U D ^PRCSD122 G EXIT:Z1=U D ^PRCSD123 G EXIT:Z1=U W !,"Press return to continue: " R Z1:DTIME
"RTN","PRCSD12",22,0)
EXIT K FPROJ,%DT,P,P1,PRCS("SUB"),X,X1,Y,Z,Z1,DIWL,DIWR,DIWF,I,J,K,^UTILITY($J,"W"),PRCSIN,PRCSQTY,PRCSDES,PRCSDS,PRCSDSD,PRCSILP,PRCSLNT,PRCSLN,N,PRCSPG Q
"RTN","PRCSD12",23,0)
 Q
"RTN","PRCSD121")
0^16^B23682488^B22790968
"RTN","PRCSD121",1,0)
PRCSD121 ;WISC/SAW/BMM-CONTROL POINT ACTIVITY 2237 DISPLAY CON'T ;6/25/12  12:59
"RTN","PRCSD121",2,0)
 ;;5.1;IFCAP;**70,81,167**;Oct 20, 2000;Build 17
"RTN","PRCSD121",3,0)
 ;Per VHA Directive 2004-38, this routine should not be modified.
"RTN","PRCSD121",4,0)
 ;PRINT ITEMS
"RTN","PRCSD121",5,0)
 ;
"RTN","PRCSD121",6,0)
 ;BMM PRC*5.1*81 edit PRCARD to also display new fields DM Doc ID 
"RTN","PRCSD121",7,0)
 ;(410.02, 17) and Date Needed By (410.02, 18) for 2237s originating
"RTN","PRCSD121",8,0)
 ;from DynaMed requisitions
"RTN","PRCSD121",9,0)
 ;
"RTN","PRCSD121",10,0)
 I $D(^PRCS(410,DA,1)),$P(^(1),U,5)'="" S P=$P(^(1),U,5),P=$P($G(^PRCS(410.2,P,0)),U) W !,?13,P,":"
"RTN","PRCSD121",11,0)
 S DIWL=13,DIWR=51,DIWF="",P(1)=0
"RTN","PRCSD121",12,0)
 F I=1:1 K ^UTILITY($J,"W") S P(1)=$O(^PRCS(410,DA,"IT",P(1))) G VENDOR:P(1)'?1N.E D ITEM1
"RTN","PRCSD121",13,0)
ITEM1 Q:'$D(^PRCS(410,DA,"IT",P(1),0))  S Z=^(0)
"RTN","PRCSD121",14,0)
 D:IOSL-$Y<3 NEWP Q:Z1=U
"RTN","PRCSD121",15,0)
 S P(4)=$P(Z,U,6) I $L(P(4))>12 W !,$E(P(4),1,13),!,$E(P(4),13,24)
"RTN","PRCSD121",16,0)
 I $L(P(4))<13 W !,P(4)
"RTN","PRCSD121",17,0)
 ;The variable Z is equal to ^PRCS(410,DA,"IT",P(1),0)
"RTN","PRCSD121",18,0)
 S PRCS("SUB")=+$P(Z,U,4),P(3)=$P(Z,U,3) S P(3)=$S($D(^PRCD(420.5,+P(3),0)):$P(^(0),U,1),1:"")
"RTN","PRCSD121",19,0)
 S P(0)=$S($P(Z,U,2)[".":$J($P(Z,U,2),9,2),1:$J($P(Z,U,2),9))_" "_$J(P(3),4)_" "_$S($P(Z,U,7)="N/C":$J("N/C",9),1:$J($P(Z,U,7),9,4))
"RTN","PRCSD121",20,0)
 G PRCARD:$P(Z,U,5)
"RTN","PRCSD121",21,0)
 S P(2)=0 F I=1:1 S P(2)=$O(^PRCS(410,DA,"IT",P(1),1,P(2))) Q:P(2)=""  S X=^(P(2),0) S:I=1 X=$P(^PRCS(410,DA,"IT",P(1),0),U,1)_" "_X D DIWP^PRCUTL($G(DA))
"RTN","PRCSD121",22,0)
ITEM2 I '$D(^UTILITY($J,"W",DIWL)) S ^(DIWL)=1,^(DIWL,1,0)="***NO DESCRIPTION***"
"RTN","PRCSD121",23,0)
 S Z=^UTILITY($J,"W",DIWL)
"RTN","PRCSD121",24,0)
 I Z>1 F J=1:1:(Z-1) W ?13,^UTILITY($J,"W",DIWL,J,0) D:IOSL-$Y<2 NEWP Q:Z1=U  W !
"RTN","PRCSD121",25,0)
 I Z>1 W ?13,^UTILITY($J,"W",DIWL,Z,0),?52,P(0) D:IOSL-$Y<2 NEWP Q:Z1=U  W !
"RTN","PRCSD121",26,0)
 I Z<2 W ?13,^UTILITY($J,"W",DIWL,1,0),?52,P(0) D:IOSL-$Y<2 NEWP Q:Z1=U  W !
"RTN","PRCSD121",27,0)
 I $P($G(^PRCS(410,DA,"IT",P(1),4)),U,3)]"" D:IOSL-$Y<2 NEWP Q:Z1=U  W ?13,"eCMS Item Line ID ",$P(^PRCS(410,DA,"IT",P(1),4),U,3),!
"RTN","PRCSD121",28,0)
 Q
"RTN","PRCSD121",29,0)
PRCARD S P("PR")=$P(^PRCS(410,DA,"IT",P(1),0),U,5) G ITEM2:'$D(^PRC(441,P("PR"),1,0))
"RTN","PRCSD121",30,0)
 S P("PR1")=0,X=$P(^PRCS(410,DA,"IT",P(1),0),U)_" ITEM ID NO. "_P("PR") D DIWP^PRCUTL($G(DA)) F I=1:1 S P("PR1")=$O(^PRC(441,P("PR"),1,P("PR1"))) Q:P("PR1")=""  S X=^(P("PR1"),0) D DIWP^PRCUTL($G(DA))
"RTN","PRCSD121",31,0)
 S Z="" S:$P(^PRC(441,P("PR"),0),U,5)'="" Z=Z_" (NSN: "_$P(^(0),U,5)_")" S Z1=$P(^PRCS(410,DA,3),U,4) I Z1,$D(^PRC(441,P("PR"),2,Z1,0)) S:$P(^(0),U,5)'="" Z=Z_" (NDC: "_$P(^(0),U,5)_")" S:$P(^(0),U,3) Z2=$P(^(0),U,3)
"RTN","PRCSD121",32,0)
 S:$P($G(^PRC(441,P("PR"),3)),U,7)'="" Z=Z_" FOOD GROUP: "_$P(^(3),U,7)
"RTN","PRCSD121",33,0)
 I Z1,$D(^PRC(441,P("PR"),2,Z1,0)) S Z=Z_" PKG: "_$P(^(0),U,8)_" per "_$S($D(^PRCD(420.5,+$P(^(0),U,7),0)):$P(^(0),U),1:"")
"RTN","PRCSD121",34,0)
 I Z1,$D(Z2),$D(^PRC(440,Z1,4,Z2,0)),$P(^(0),U,1)'="" S Y=$S($P(^(0),U,2):$P(^(0),U,2),1:"") X:Y ^DD("DD") S Z=Z_" (CONTRACT # "_$P(^PRC(440,Z1,4,Z2,0),U,1)_$S(Y'="":", EXPIRATION DATE: "_Y_")",1:")") K Z2
"RTN","PRCSD121",35,0)
 S X=Z D:$L(X) DIWP^PRCUTL($G(DA))
"RTN","PRCSD121",36,0)
 ;PRC*5.1*81 check DynaMed switch, if DM Doc ID exists, if so then 
"RTN","PRCSD121",37,0)
 ;add to display
"RTN","PRCSD121",38,0)
 I $$GET^XPAR("SYS","PRCV COTS INVENTORY",1,"Q")=1,$P($G(^PRCS(410,DA,"IT",P(1),4)),U)]"" D
"RTN","PRCSD121",39,0)
 . S X="DM Doc ID: "_$P(^PRCS(410,DA,"IT",P(1),4),U)_"    Date Needed By: "_$$FMTE^XLFDT($P(^(4),U,2)) D DIWP^PRCUTL($G(DA))
"RTN","PRCSD121",40,0)
 G ITEM2
"RTN","PRCSD121",41,0)
VENDOR ;PRINT VENDOR AND REQ MESSAGES
"RTN","PRCSD121",42,0)
 N Z0
"RTN","PRCSD121",43,0)
 Q:Z1=U  I IOSL-$Y<3 D NEWP Q:Z1=U
"RTN","PRCSD121",44,0)
 I $D(^PRCS(410,DA,4)),$P(^(4),U,1)'="" W !,?13,"TOTAL COST: ","$"_$J($P(^(4),U,1),0,2)
"RTN","PRCSD121",45,0)
 W !,L I IOSL-$Y<2 D NEWP Q:Z1=U
"RTN","PRCSD121",46,0)
 G RM:'$D(^PRCS(410,DA,2))
"RTN","PRCSD121",47,0)
 I $D(^PRCS(410,DA,2)),$P(^(2),U,1)="" G RM
"RTN","PRCSD121",48,0)
 I IOSL-$Y<7 D NEWP Q:Z1=U
"RTN","PRCSD121",49,0)
 S (X,Z0)=$P(^PRCS(410,DA,3),"^",4),X=$S(X:"VENDOR INFORMATION:    NO: "_X,1:"NEW VENDOR INFORMATION: ") W !,X
"RTN","PRCSD121",50,0)
 I Z0,$D(^PRC(440,Z0,3)),$P(^(3),U,2)="Y" W ?38,"EDI"
"RTN","PRCSD121",51,0)
 I Z0,$D(^PRC(440,Z0,10)),$P(^(10),U,6)'="" W ?46,"FAX: "_$P(^(10),U,6)
"RTN","PRCSD121",52,0)
 W !,"VENDOR: ",$P(^PRCS(410,DA,2),U,1) W:$P(^(2),U,9)'="" ?42,"CONTACT: ",$P(^(2),U,9)
"RTN","PRCSD121",53,0)
 W:$P(^PRCS(410,DA,2),U,2)'="" !,?8,$P(^(2),U,2) W:$P(^(2),U,10)'="" ?44,"PHONE: ",$P(^(2),U,10)
"RTN","PRCSD121",54,0)
 S Z(1)=$Y W:$P(^PRCS(410,DA,2),U,3)'="" !,?8,$P(^(2),U,3) S Z1=$P(^(3),U,4) I Z1,$D(^PRC(440,Z1,2)),$P(^(2),U,1)'="" W:Z(1)=$Y ! W ?42,"ACCT. #: ",$P(^(2),U,1)
"RTN","PRCSD121",55,0)
 W:$P(^PRCS(410,DA,2),U,4)'="" !,?8,$P(^(2),U,4) W:$P(^(2),U,5)'="" !,?8,$P(^(2),U,5)
"RTN","PRCSD121",56,0)
 I $P(^PRCS(410,DA,2),U,6)'="" W !,?8,$P(^(2),U,6) W:+$P(^(2),U,7)'=0 ",",$P($G(^DIC(5,$P(^(2),U,7),0)),U,2) W:$P(^PRCS(410,DA,2),U,8)'="" " ",$P(^(2),U,8)
"RTN","PRCSD121",57,0)
 W !,L W !,"Ref. Voucher Number: ",! I $P($G(^PRCS(410,DA,445)),"^")'="" W $P(^(445),"^"),!
"RTN","PRCSD121",58,0)
RM I IOSL-$Y<4 D NEWP Q:Z1=U
"RTN","PRCSD121",59,0)
 I '$D(^PRCS(410,DA,"RM",0)) G DEL
"RTN","PRCSD121",60,0)
 I $D(^PRCS(410,DA,"RM",0)) W ! S P(1)=0,DIWL=1,DIWR=80,DIWF="" K ^UTILITY($J,"W") S X="SPECIAL REMARKS:" D DIWP^PRCUTL($G(DA)) F J=1:1 S P(1)=$O(^PRCS(410,DA,"RM",P(1))) Q:P(1)=""  S X=^(P(1),0) D DIWP^PRCUTL($G(DA))
"RTN","PRCSD121",61,0)
 S Z=^UTILITY($J,"W",DIWL) F K=1:1:Z D:$Y>62 NEWP^PRCSD121 W !,^UTILITY($J,"W",DIWL,K,0)
"RTN","PRCSD121",62,0)
DEL I $D(^PRCS(410,DA,9)),$P(^(9),U,1)'="" W !,?6,"DELIVER TO: ",$P(^(9),U,1)
"RTN","PRCSD121",63,0)
 W !,L Q
"RTN","PRCSD121",64,0)
NEWP ;PRINT HEADER FOR NEW PAGE
"RTN","PRCSD121",65,0)
 S Z1="" W !,"Press return to continue, uparrow (^) to exit: " R Z1:DTIME S:'$T Z1=U W @IOF Q:Z1=U
"RTN","PRCSD121",66,0)
 W !,?31,$P(^PRCS(410,DA,0),U,1) W !,L
"RTN","PRCSD121",67,0)
 W !,?16,"REQUEST, TURN-IN, AND RECEIPT FOR PROPERTY OR SERVICES" W !,L
"RTN","PRCSD121",68,0)
 Q
"RTN","PRCSP12")
0^17^B8040343^B7847680
"RTN","PRCSP12",1,0)
PRCSP12 ;WISC/SAW-CONTROL POINT ACTIVITY 2237 PRINTOUT (FREE FORM) ;6/22/12  17:04
"RTN","PRCSP12",2,0)
V ;;5.1;IFCAP;**167**;Oct 20, 2000;Build 17
"RTN","PRCSP12",3,0)
 ;Per VHA Directive 2004-38, this routine should not be modified.
"RTN","PRCSP12",4,0)
 H 2 G P
"RTN","PRCSP12",5,0)
QUE I $D(ZTQUEUED) S DA=D0
"RTN","PRCSP12",6,0)
 S DA=D0
"RTN","PRCSP12",7,0)
P U IO W:$Y>0 @IOF S U="^",P(1)=0,PRCS("P")=1,L="",$P(L,"_",90)="_" D NOW^%DTC S Y=% D DD^%DT
"RTN","PRCSP12",8,0)
 S P=$S($D(^PRCS(410,DA,1)):$P(^(1),U,3),1:""),P=$S(P="EM":"***EMERGENCY***",P="SP":"*SPECIAL*",1:"STANDARD") W ?36,"PRIORITY: ",P
"RTN","PRCSP12",9,0)
 W:$$ECMS2237^PRCHJUTL(DA) ?64,"Sent to eCMS"
"RTN","PRCSP12",10,0)
 W !,Y,?36,$P(^PRCS(410,DA,0),U),?83,"PAGE ",PRCS("P"),!,L
"RTN","PRCSP12",11,0)
 W !,?16,"REQUEST, TURN-IN, AND RECEIPT FOR PROPERTY OR SERVICES",! I $D(ZTSAVE("NOPRINT")) W ?37,"**REPRINT**",!
"RTN","PRCSP12",12,0)
 W !,L
"RTN","PRCSP12",13,0)
 W !,"TO: A&MM Officer",?23,"|Requesting Office",?63,"|TO BE COMPLETED BY"
"RTN","PRCSP12",14,0)
 W !,?23,"|" S P=$P(^PRCS(410,DA,0),U,5),P1=$S($D(^(3)):+$P(^(3),U),1:"") I P,P1 S P=$S($D(^PRC(420,P,1,P1,0)):$P(^(0),U,10),1:"") I P,$D(^DIC(49,P,0)) W $P(^(0),U) W:$P(^(0),U,8)]"" " ("_$P(^(0),U,8)_")"
"RTN","PRCSP12",15,0)
 W ?63,"|SUPPLY PERSONNEL",!,$E(L,1,23)
"RTN","PRCSP12",16,0)
 W "|",$E(L,1,39)
"RTN","PRCSP12",17,0)
 W "|(NOTE - Alterations in"
"RTN","PRCSP12",18,0)
 W !,"Action Requested",?23,"|Date Prepared",?45,"|Date Required",?63,"|""Action"" column will be"
"RTN","PRCSP12",19,0)
 W !,?4,"Delivery",?23,"|" I $D(^PRCS(410,DA,1)),$P(^(1),U)'="" S Y=$P(^(1),U) D DD^%DT W Y
"RTN","PRCSP12",20,0)
 W ?45,"|" I $D(^PRCS(410,DA,1)),$P(^(1),U,4)'="" S Y=$P(^(1),U,4) D DD^%DT W Y
"RTN","PRCSP12",21,0)
 W ?63,"|initialed and dated)",!,$E(L,1,23)
"RTN","PRCSP12",22,0)
 W "|",$E(L,1,21)
"RTN","PRCSP12",23,0)
 W "|",$E(L,1,17)
"RTN","PRCSP12",24,0)
 W "|",$E(L,1,26)
"RTN","PRCSP12",25,0)
 W !,?2,"ITEM NO.  |",?23,"DESCRIPTION",?38,"|QUANTITY |UNIT|ESTIMATED|UNIT COST|TOTAL COST|ACT."
"RTN","PRCSP12",26,0)
 W !,"OR STOCK NO.|",?38,"|",?48,"|",?53,"|UNIT COST|",?73,"|",?84,"|NOTE1",!,$E(L,1,12),"|",$E(L,1,25),"|",$E(L,1,9),"|",$E(L,1,4),"|",$E(L,1,9),"|",$E(L,1,9),"|",$E(L,1,10),"|",$E(L,1,5)
"RTN","PRCSP12",27,0)
 S:'$D(PRNTALL) PRNTALL=1
"RTN","PRCSP12",28,0)
 D ^PRCSP121,^PRCSP122 W:PRNTALL=0 !,"VA FORM 90-2237-ADP MAR 1985",! D:PRNTALL=1 ^PRCSP123 I '$D(PRCHQ("DEST")) D ^PRCSP124 G EXIT
"RTN","PRCSP12",29,0)
 I $D(PRCHQ("DEST")),PRCHQ("DEST")'="F" D ^PRCSP124
"RTN","PRCSP12",30,0)
EXIT K FPROJ,%DT,P,PRNTALL,X,X1,Y,Z,Z1,DA,DIWL,DIWR,DIWF,I,J,K,L,PRCS,^UTILITY($J,"W") D:$D(ZTSK) KILL^%ZTLOAD Q
"RTN","PRCSP121")
0^18^B22416757^B21901481
"RTN","PRCSP121",1,0)
PRCSP121 ;WISC/SAW/BMM-CONTROL POINT ACTIVITY 2237 PRINTOUT CON'T ;6/25/12  14:00
"RTN","PRCSP121",2,0)
 ;;5.1;IFCAP;**81,167**;Oct 20, 2000;Build 17
"RTN","PRCSP121",3,0)
 ;Per VHA Directive 2004-38, this routine should not be modified.
"RTN","PRCSP121",4,0)
 ;
"RTN","PRCSP121",5,0)
 ;PRINT ITEMS  ;  REW fixed next line for Archiving "just in case"
"RTN","PRCSP121",6,0)
 ;
"RTN","PRCSP121",7,0)
 ;PRC*5.1*81 BMM edit PRCARD to add DM Doc ID (410.02, 17) and Date 
"RTN","PRCSP121",8,0)
 ;Needed By (410.02, 18) fields to printout
"RTN","PRCSP121",9,0)
 ;
"RTN","PRCSP121",10,0)
 I $D(^PRCS(410,DA,1)),$P(^(1),U,5)'="" S P=$P(^(1),U,5),P=$P($G(^PRCS(410.2,P,0),">>>  PRCS(410.2,"_P_",0) is not defined but referenced in PRCSP121 for record: "_DA_" <<<"),U) W !,?12,"|",P,":",?38,"|",?48,"|",?53,"|",?63,"|",?73,"|",?84,"|"
"RTN","PRCSP121",11,0)
 S DIWL=19,DIWR=35,DIWF="",P(1)=0
"RTN","PRCSP121",12,0)
 F I=1:1 K ^UTILITY($J,"W") S P(1)=$O(^PRCS(410,DA,"IT",P(1))) G VENDOR:P(1)'>0 D ITEM1
"RTN","PRCSP121",13,0)
ITEM1 Q:'$D(^PRCS(410,DA,"IT",P(1),0))  S Z=^(0),P(4)=$P(Z,U,6)
"RTN","PRCSP121",14,0)
 S PRCS("SUB")=+$P(Z,U,4),P(3)=$P(Z,U,3) S P(3)=$S($D(^PRCD(420.5,+P(3),0)):$P(^(0),U),1:"")
"RTN","PRCSP121",15,0)
 S P(0)="|"_$S($P(Z,U,2)[".":$J($P(Z,U,2),9,2),1:$J($P(Z,U,2),9))_"|"_$J(P(3),4)_"|"_$S($P(Z,U,7)="N/C":$J("N/C",9),1:$J($P(Z,U,7),9,4))_"|"
"RTN","PRCSP121",16,0)
 G PRCARD:$P(Z,U,5)
"RTN","PRCSP121",17,0)
 S P(2)=0 F I=1:1 S P(2)=$O(^PRCS(410,DA,"IT",P(1),1,P(2))) Q:P(2)=""  S X=^(P(2),0) S:I=1 X=$P(^PRCS(410,DA,"IT",P(1),0),U)_" "_X D DIWP^PRCUTL($G(DA))
"RTN","PRCSP121",18,0)
ITEM2 I '$D(^UTILITY($J,"W",DIWL)) S ^(DIWL)=1,^(DIWL,1,0)="***NO DESCRIPTION***"
"RTN","PRCSP121",19,0)
 S Z=^UTILITY($J,"W",DIWL)
"RTN","PRCSP121",20,0)
 I $L(P(4))>12 W !,$E(P(4),1,12),"|",?38,"|",?48,"|",?53,"|",?63,"|",?73,"|",?84,"|",!,$E(P(4),13,24)
"RTN","PRCSP121",21,0)
 I $L(P(4))<13 W !,P(4)
"RTN","PRCSP121",22,0)
 I Z>1 F J=1:1:(Z-1) W ?12,"|",^UTILITY($J,"W",DIWL,J,0),?38,"|",?48,"|",?53,"|",?63,"|",?73,"|",?84,"|" D:$Y>61 NEWP W !
"RTN","PRCSP121",23,0)
 I Z>1 W ?12,"|",^UTILITY($J,"W",DIWL,Z,0),?38,P(0),?73,"|",?84,"|"
"RTN","PRCSP121",24,0)
 I Z<2 W ?12,"|",^UTILITY($J,"W",DIWL,1,0),?38,P(0),?73,"|",?84,"|"
"RTN","PRCSP121",25,0)
 I $P($G(^PRCS(410,DA,"IT",P(1),4)),U,3)]"" D:$Y>61 NEWP W !?12,"|","eCMS Line ID ",$P(^PRCS(410,DA,"IT",P(1),4),U,3),?38,"|",?48,"|",?53,"|",?63,"|",?73,"|",?84,"|"
"RTN","PRCSP121",26,0)
 D:$Y>61 NEWP W !,?12,"|",?38,"|",?48,"|",?53,"|",?63,"|",?73,"|",?84,"|"
"RTN","PRCSP121",27,0)
 Q
"RTN","PRCSP121",28,0)
PRCARD S P("PR")=$P(^PRCS(410,DA,"IT",P(1),0),U,5) G ITEM2:'$D(^PRC(441,P("PR"),1,0))
"RTN","PRCSP121",29,0)
 S P("PR1")=0,X=$P(^PRCS(410,DA,"IT",P(1),0),U)_" ITEM ID NO. "_P("PR") D DIWP^PRCUTL($G(DA)) F I=1:1 S P("PR1")=$O(^PRC(441,P("PR"),1,P("PR1"))) Q:P("PR1")=""  S X=^(P("PR1"),0) D DIWP^PRCUTL($G(DA))
"RTN","PRCSP121",30,0)
 S Z="" S:$P(^PRC(441,P("PR"),0),U,5)'="" Z=Z_" (NSN: "_$P(^(0),U,5)_")" S Z1=$P(^PRCS(410,DA,3),U,4) I Z1,$D(^PRC(441,P("PR"),2,Z1,0)) S:$P(^(0),U,5)'="" Z=Z_" (NDC: "_$P(^(0),U,5)_")" S:$P(^(0),U,3) Z2=$P(^(0),U,3)
"RTN","PRCSP121",31,0)
 S:$P($G(^PRC(441,P("PR"),3)),U,7)'="" Z=Z_" FOOD GROUP: "_$P(^(3),U,7)
"RTN","PRCSP121",32,0)
 I Z1,$D(^PRC(441,P("PR"),2,Z1,0)) S Z=Z_" PKG: "_$P(^(0),U,8)_" per "_$S($D(^PRCD(420.5,+$P(^(0),U,7),0)):$P(^(0),U),1:"")
"RTN","PRCSP121",33,0)
 I $D(Z2),$D(^PRC(440,+Z1,4,+Z2,0)),$P(^(0),U)'="" S Y=$S($P(^(0),U,2):$P(^(0),U,2),1:"") X:Y ^DD("DD") S Z=Z_" (CONTRACT # "_$P(^PRC(440,Z1,4,Z2,0),U)_$S(Y'="":", EXPIRATION DATE: "_Y_")",1:")") K Z2
"RTN","PRCSP121",34,0)
 S X=Z D:$L(X) DIWP^PRCUTL($G(DA))
"RTN","PRCSP121",35,0)
 ;PRC*5.1*81 add DM Doc ID and Date Needed By fields to ^UTILITY
"RTN","PRCSP121",36,0)
 I $$GET^XPAR("SYS","PRCV COTS INVENTORY",1,"Q")=1,$P($G(^PRCS(410,DA,"IT",P(1),4)),U)]"" D
"RTN","PRCSP121",37,0)
 . S X="DM Doc ID: "_$P(^PRCS(410,DA,"IT",P(1),4),U)_"    Date Needed By: "_$$FMTE^XLFDT($P(^(4),U,2)) D DIWP^PRCUTL($G(DA))
"RTN","PRCSP121",38,0)
 G ITEM2
"RTN","PRCSP121",39,0)
VENDOR ;PRINT VENDOR AND REQ MESSAGES
"RTN","PRCSP121",40,0)
 N Z0
"RTN","PRCSP121",41,0)
 I $Y>60 D NEWP
"RTN","PRCSP121",42,0)
 I $D(^PRCS(410,DA,4)),$P(^(4),U)'="" W !,?12,"|TOTAL COST: ","$"_$J($P(^(4),U),0,2),?38,"|",?48,"|",?53,"|",?63,"|",?73,"|",?84,"|"
"RTN","PRCSP121",43,0)
 W !,$E(L,1,12),"|",$E(L,1,25),"|",$E(L,1,9),"|",$E(L,1,4),"|",$E(L,1,9),"|",$E(L,1,9),"|",$E(L,1,10),"|",$E(L,1,5) I $Y>60 D NEWP
"RTN","PRCSP121",44,0)
 G RM:'$D(^PRCS(410,DA,2))
"RTN","PRCSP121",45,0)
 I $D(^PRCS(410,DA,2)),$P(^(2),U)="" G RM
"RTN","PRCSP121",46,0)
 I $Y>56 D NEWP
"RTN","PRCSP121",47,0)
 S (X,Z0)=$P(^PRCS(410,DA,3),U,4),X=$S(X:"VENDOR INFORMATION:    NO. "_X,1:"NEW VENDOR INFORMATION:") W !,X
"RTN","PRCSP121",48,0)
 I Z0,$D(^PRC(440,Z0,3)),$P(^(3),U,2)="Y" W ?38,"EDI"
"RTN","PRCSP121",49,0)
 I Z0,$D(^PRC(440,Z0,10)),$P(^(10),U,6)'="" W ?46,"FAX: "_$P(^(10),U,6)
"RTN","PRCSP121",50,0)
 S X=^PRCS(410,DA,2) W !,"VENDOR: ",$P(X,U) W:$P(X,U,9)'="" ?42,"CONTACT: ",$P(X,U,9)
"RTN","PRCSP121",51,0)
 W:$P(X,U,2)'="" !,?8,$P(X,U,2) W:$P(X,U,10)'="" ?44,"PHONE: ",$P(X,U,10)
"RTN","PRCSP121",52,0)
 W:$P(X,U,3)'="" !,?8,$P(X,U,3) S Z1=$P(^PRCS(410,DA,3),U,4) I Z1,$D(^PRC(440,Z1,2)),$P(^(2),U)'="" W ?42,"ACCT. #: ",$P(^(2),U)
"RTN","PRCSP121",53,0)
 W:$P(X,U,4)'="" !,?8,$P(X,U,4) W:$P(X,U,5)'="" !,?8,$P(X,U,5)
"RTN","PRCSP121",54,0)
 I $P(X,U,6)'="" W !,?8,$P(X,U,6) W:+$P(X,U,7)'=0 ",",$P($G(^DIC(5,$P(X,U,7),0)),U,2) W:$P(X,U,8)'="" " ",$P(X,U,8)
"RTN","PRCSP121",55,0)
 W !,L W !,"Ref. Voucher Number: ",! W:$P($G(^PRCS(410,DA,445)),"^")'="" $P(^(445),"^"),!
"RTN","PRCSP121",56,0)
RM I $Y>68 D NEWP
"RTN","PRCSP121",57,0)
 Q
"RTN","PRCSP121",58,0)
NEWP ;PRINT HEADER FOR NEW PAGE
"RTN","PRCSP121",59,0)
 W !,"VA FORM 90-2237-ADP MAR 1985" W:$Y>0 @IOF
"RTN","PRCSP121",60,0)
 S PRCS("P")=PRCS("P")+1 W !,?36,$P(^PRCS(410,DA,0),U),?83,"PAGE ",PRCS("P"),!,L
"RTN","PRCSP121",61,0)
 W !,?16,"REQUEST, TURN-IN, AND RECEIPT FOR PROPERTY OR SERVICES",! I $D(ZTDESC("NOPRINT")) W ?37,"**REPRINT**",!
"RTN","PRCSP121",62,0)
 W !,L
"RTN","PRCSP121",63,0)
 Q
"UP",410,410.02,-1)
410^IT
"UP",410,410.02,0)
410.02
"VER")
8.0^22.0
"^DD",410,410,103,0)
ECMS ACTIONUID^FI^^1;8^K:$L(X)>10!($L(X)<1)!'(X?1.10N) X
"^DD",410,410,103,3)
Enter the 1-10 digit eCMS ActionUID value.
"^DD",410,410,103,21,0)
^^3^3^3120510^
"^DD",410,410,103,21,1,0)
This field stores the eCMS internal, unique identifier for the Purchase
"^DD",410,410,103,21,2,0)
Request created from this IFCAP 2237.  This field is populated by the
"^DD",410,410,103,21,3,0)
eCMS/IFCAP interface.
"^DD",410,410,103,"DT")
3120510
"^DD",410,410.02,100,0)
ECMS ITEMUID^FI^^4;3^K:$L(X)>10!($L(X)<1)!'(X?1.10N) X
"^DD",410,410.02,100,3)
Enter the 1-10 digit eCMS ItemUID value.
"^DD",410,410.02,100,21,0)
^^2^2^3120510^
"^DD",410,410.02,100,21,1,0)
This field stores the eCMS internal, unique identifier for this 2237 item
"^DD",410,410.02,100,21,2,0)
line. This field is populated by the eCMS/IFCAP interface.
"^DD",410,410.02,100,"DT")
3120510
"^DD",414.06,414.06,0)
FIELD^^10^5
"^DD",414.06,414.06,0,"DDA")
N
"^DD",414.06,414.06,0,"DT")
3120726
"^DD",414.06,414.06,0,"IX","AED",414.061,.01)

"^DD",414.06,414.06,0,"IX","ASB",414.061,2)

"^DD",414.06,414.06,0,"IX","ASN",414.061,1)

"^DD",414.06,414.06,0,"IX","ATY",414.061,.02)

"^DD",414.06,414.06,0,"IX","B",414.06,.01)

"^DD",414.06,414.06,0,"NM","IFCAP/ECMS TRANSACTION")

"^DD",414.06,414.06,.01,0)
IFCAP REFERENCE NUMBER^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",414.06,414.06,.01,1,0)
^.1^^-1
"^DD",414.06,414.06,.01,1,1,0)
414.06^B
"^DD",414.06,414.06,.01,1,1,1)
S ^PRCV(414.06,"B",$E(X,1,30),DA)=""
"^DD",414.06,414.06,.01,1,1,2)
K ^PRCV(414.06,"B",$E(X,1,30),DA)
"^DD",414.06,414.06,.01,3)
Answer must be 3-30 characters in length.
"^DD",414.06,414.06,.01,21,0)
^.001^4^4^3120726^^^
"^DD",414.06,414.06,.01,21,1,0)
The unique IFCAP reference number for this transaction.
"^DD",414.06,414.06,.01,21,2,0)
For transactions involving purchase requests (2237) this will be the
"^DD",414.06,414.06,.01,21,3,0)
text value of the Control Point Activity Transaction Number needed
"^DD",414.06,414.06,.01,21,4,0)
by the Electronic Contract Management System (eCMS).
"^DD",414.06,414.06,.01,"DT")
3120726
"^DD",414.06,414.06,.02,0)
EXTERNAL REFERENCE NUMBER^F^^0;2^K:$L(X)>10!($L(X)<1) X
"^DD",414.06,414.06,.02,3)
Answer must be 1-10 characters in length.
"^DD",414.06,414.06,.02,21,0)
^.001^3^3^3120727^^^^
"^DD",414.06,414.06,.02,21,1,0)
The unique Electronic Contract Management System (eCMS) identifier 
"^DD",414.06,414.06,.02,21,2,0)
ActionUID, which is generated by eCMS and returned to IFCAP when the
"^DD",414.06,414.06,.02,21,3,0)
2237 is imported into eCMS.
"^DD",414.06,414.06,.02,"DT")
3120511
"^DD",414.06,414.06,.03,0)
TRANSACTION STATUS^F^^0;4^K:$L(X)>40!($L(X)<2) X
"^DD",414.06,414.06,.03,3)
Answer must be 2-40 characters in length.
"^DD",414.06,414.06,.03,21,0)
^^1^1^3120702^
"^DD",414.06,414.06,.03,21,1,0)
The text of the most recently filed transaction event type.
"^DD",414.06,414.06,.03,"DT")
3120521
"^DD",414.06,414.06,1,0)
REQUEST RECORD^RP410'^PRCS(410,^0;3^Q
"^DD",414.06,414.06,1,3)
If this transaction originated from IFCAP user actions, enter the 2237 transaction number associated with that action.
"^DD",414.06,414.06,1,21,0)
^.001^1^1^3120727^^^
"^DD",414.06,414.06,1,21,1,0)
The 2237 document associated with this transaction.
"^DD",414.06,414.06,1,"DT")
3120511
"^DD",414.06,414.06,10,0)
EVENT^414.061DA^^1;0
"^DD",414.06,414.06,10,21,0)
^.001^1^1^3120807^^^
"^DD",414.06,414.06,10,21,1,0)
This multiple contains the data specific to individual transaction events.
"^DD",414.06,414.061,0)
EVENT SUB-FIELD^^15^12
"^DD",414.06,414.061,0,"DT")
3120726
"^DD",414.06,414.061,0,"IX","B",414.061,.01)

"^DD",414.06,414.061,0,"NM","EVENT")

"^DD",414.06,414.061,0,"UP")
414.06
"^DD",414.06,414.061,.01,0)
EVENT DATE^RD^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",414.06,414.061,.01,1,0)
^.1
"^DD",414.06,414.061,.01,1,1,0)
414.061^B
"^DD",414.06,414.061,.01,1,1,1)
S ^PRCV(414.06,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",414.06,414.061,.01,1,1,2)
K ^PRCV(414.06,DA(1),1,"B",$E(X,1,30),DA)
"^DD",414.06,414.061,.01,1,2,0)
414.06^AED
"^DD",414.06,414.061,.01,1,2,1)
S ^PRCV(414.06,"AED",$E(X,1,30),DA(1),DA)=""
"^DD",414.06,414.061,.01,1,2,2)
K ^PRCV(414.06,"AED",$E(X,1,30),DA(1),DA)
"^DD",414.06,414.061,.01,1,2,"%D",0)
^^1^1^3120620^
"^DD",414.06,414.061,.01,1,2,"%D",1,0)
File wide Event Date for reporting.
"^DD",414.06,414.061,.01,1,2,"DT")
3120620
"^DD",414.06,414.061,.01,3)
This is the date/time the event occurred.
"^DD",414.06,414.061,.01,21,0)
^.001^1^1^3120726^^^^
"^DD",414.06,414.061,.01,21,1,0)
Date of messaging event.
"^DD",414.06,414.061,.01,"DT")
3120726
"^DD",414.06,414.061,.02,0)
EVENT TYPE^RS^1:2237 SENT;2:2237 ACKNOWLEDGED;3:2237 APPLICATION ERROR;4:2237 RESENT;6:RETURN TO ACCOUNTABLE OFFICER;7:RETURN TO AO ACK;8:RETURN TO CONTROL POINT;9:RETURN TO CP ACK;10:2237 CANCELED;11:2237 CANCEL ACK;^0;2^Q
"^DD",414.06,414.061,.02,1,0)
^.1
"^DD",414.06,414.061,.02,1,1,0)
414.06^ATY
"^DD",414.06,414.061,.02,1,1,1)
S ^PRCV(414.06,"ATY",$E(X,1,30),DA(1),DA)=""
"^DD",414.06,414.061,.02,1,1,2)
K ^PRCV(414.06,"ATY",$E(X,1,30),DA(1),DA)
"^DD",414.06,414.061,.02,1,1,"%D",0)
^^1^1^3120615^
"^DD",414.06,414.061,.02,1,1,"%D",1,0)
File wide to assist with sorting event types.
"^DD",414.06,414.061,.02,1,1,"DT")
3120615
"^DD",414.06,414.061,.02,3)
Enter the event type.
"^DD",414.06,414.061,.02,21,0)
^.001^1^1^3120726^^^^
"^DD",414.06,414.061,.02,21,1,0)
The type of message associated with this transaction event.
"^DD",414.06,414.061,.02,"DT")
3120615
"^DD",414.06,414.061,.03,0)
HL7 MESSAGE ID^F^^0;3^K:$L(X)>30!($L(X)<2) X
"^DD",414.06,414.061,.03,3)
Answer must be 2-30 characters in length.
"^DD",414.06,414.061,.03,21,0)
^.001^1^1^3120726^^
"^DD",414.06,414.061,.03,21,1,0)
The unique ID of the HL7 Application message.
"^DD",414.06,414.061,.03,"DT")
3120613
"^DD",414.06,414.061,1,0)
STATION^F^^1;1^K:$L(X)>6!($L(X)<2) X
"^DD",414.06,414.061,1,1,0)
^.1
"^DD",414.06,414.061,1,1,1,0)
414.06^ASN
"^DD",414.06,414.061,1,1,1,1)
S ^PRCV(414.06,"ASN",$E(X,1,30),DA(1),DA)=""
"^DD",414.06,414.061,1,1,1,2)
K ^PRCV(414.06,"ASN",$E(X,1,30),DA(1),DA)
"^DD",414.06,414.061,1,1,1,"%D",0)
^^1^1^3120620^
"^DD",414.06,414.061,1,1,1,"%D",1,0)
File wide on Station for reporting.
"^DD",414.06,414.061,1,1,1,"DT")
3120620
"^DD",414.06,414.061,1,3)
Answer must be 2-6 characters in length.
"^DD",414.06,414.061,1,21,0)
^^1^1^3120613^
"^DD",414.06,414.061,1,21,1,0)
The number of the primary station associated with this transaction event.
"^DD",414.06,414.061,1,"DT")
3120620
"^DD",414.06,414.061,2,0)
SUB-STATION^F^^1;2^K:$L(X)>6!($L(X)<2) X
"^DD",414.06,414.061,2,1,0)
^.1
"^DD",414.06,414.061,2,1,1,0)
414.06^ASB
"^DD",414.06,414.061,2,1,1,1)
S ^PRCV(414.06,"ASB",$E(X,1,30),DA(1),DA)=""
"^DD",414.06,414.061,2,1,1,2)
K ^PRCV(414.06,"ASB",$E(X,1,30),DA(1),DA)
"^DD",414.06,414.061,2,1,1,"%D",0)
^^1^1^3120706^
"^DD",414.06,414.061,2,1,1,"%D",1,0)
File wide to facilitate use of Substation data
"^DD",414.06,414.061,2,1,1,"DT")
3120706
"^DD",414.06,414.061,2,3)
Answer must be 2-6 characters in length.
"^DD",414.06,414.061,2,21,0)
^^1^1^3120613^
"^DD",414.06,414.061,2,21,1,0)
The number of the substation facility associated with this transaction event.
"^DD",414.06,414.061,2,"DT")
3120706
"^DD",414.06,414.061,3,0)
IFCAP USER^P200'^VA(200,^1;3^Q
"^DD",414.06,414.061,3,3)
Select the IFCAP user.
"^DD",414.06,414.061,3,21,0)
^.001^1^1^3120814^^^^
"^DD",414.06,414.061,3,21,1,0)
The IFCAP user associated with the generation of this outbound transaction event.
"^DD",414.06,414.061,3,"DT")
3120613
"^DD",414.06,414.061,5,0)
ECMS PHONE^F^^1;5^K:$L(X)>30!($L(X)<2) X
"^DD",414.06,414.061,5,3)
Answer must be 2-30 characters in length.
"^DD",414.06,414.061,5,21,0)
^^1^1^3120613^
"^DD",414.06,414.061,5,21,1,0)
The phone number of the eCMS user associated with this transaction event.
"^DD",414.06,414.061,5,"DT")
3120613
"^DD",414.06,414.061,6,0)
ECMS EMAIL^F^^1;6^K:$L(X)>60!($L(X)<2) X
"^DD",414.06,414.061,6,3)
Answer must be 2-60 characters in length.
"^DD",414.06,414.061,6,21,0)
^^1^1^3120613^
"^DD",414.06,414.061,6,21,1,0)
The email address for the eCMS user associated with this transaction event.
"^DD",414.06,414.061,6,"DT")
3120808
"^DD",414.06,414.061,7,0)
RETURN/CANCEL DATE/TIME^D^^1;7^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",414.06,414.061,7,3)
Enter the date and time the 2237 was returned or canceled from within eCMS.
"^DD",414.06,414.061,7,21,0)
^.001^1^1^3120726^^
"^DD",414.06,414.061,7,21,1,0)
The date and time the 2237 was returned or canceled from within eCMS.
"^DD",414.06,414.061,7,"DT")
3120613
"^DD",414.06,414.061,10,0)
RETURN/CANCEL REASON^F^^2;1^K:$L(X)>45!($L(X)<2) X
"^DD",414.06,414.061,10,3)
Answer must be 2-45 characters in length.
"^DD",414.06,414.061,10,21,0)
^^1^1^3120613^
"^DD",414.06,414.061,10,21,1,0)
The reason that the 2237 was returned or canceled.
"^DD",414.06,414.061,10,"DT")
3120613
"^DD",414.06,414.061,11,0)
TRANSACTION COMMENTS^F^^2;2^K:$L(X)>100!($L(X)<2) X
"^DD",414.06,414.061,11,3)
Answer must be 2-100 characters in length.
"^DD",414.06,414.061,11,21,0)
^^1^1^3120613^
"^DD",414.06,414.061,11,21,1,0)
Other comments associated with this transaction event.
"^DD",414.06,414.061,11,"DT")
3120613
"^DD",414.06,414.061,15,0)
ERROR LOG^414.0613A^^3;0
"^DD",414.06,414.061,15,21,0)
^^1^1^3120726^
"^DD",414.06,414.061,15,21,1,0)
These are various business level errors that are associated with this event.
"^DD",414.06,414.0613,0)
ERROR LOG SUB-FIELD^^.01^1
"^DD",414.06,414.0613,0,"DT")
3120613
"^DD",414.06,414.0613,0,"IX","B",414.0613,.01)

"^DD",414.06,414.0613,0,"NM","ERROR LOG")

"^DD",414.06,414.0613,0,"UP")
414.061
"^DD",414.06,414.0613,.01,0)
ERROR LOG^F^^0;1^K:$L(X)>120!($L(X)<2) X
"^DD",414.06,414.0613,.01,1,0)
^.1
"^DD",414.06,414.0613,.01,1,1,0)
414.0613^B
"^DD",414.06,414.0613,.01,1,1,1)
S ^PRCV(414.06,DA(2),1,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",414.06,414.0613,.01,1,1,2)
K ^PRCV(414.06,DA(2),1,DA(1),3,"B",$E(X,1,30),DA)
"^DD",414.06,414.0613,.01,3)
Answer must be 2-120 characters in length.
"^DD",414.06,414.0613,.01,21,0)
^^1^1^3120613^
"^DD",414.06,414.0613,.01,21,1,0)
Errors and associated text.
"^DD",414.06,414.0613,.01,"DT")
3120613
"^DIC",414.06,414.06,0)
IFCAP/ECMS TRANSACTION^414.06
"^DIC",414.06,414.06,0,"GL")
^PRCV(414.06,
"^DIC",414.06,414.06,"%D",0)
^^6^6^3120726^
"^DIC",414.06,414.06,"%D",1,0)
This file is designed to hold the various types of transactions that support
"^DIC",414.06,414.06,"%D",2,0)
communication for the IFCAP and the Electronic Contract Management
"^DIC",414.06,414.06,"%D",3,0)
System (eCMS) interface.
"^DIC",414.06,414.06,"%D",4,0)
Reports from this file will be used by the IFCAP users to follow the
"^DIC",414.06,414.06,"%D",5,0)
interface activity to assure that communication with the eCMS vendor portal
"^DIC",414.06,414.06,"%D",6,0)
is timely and effective, and to provide contact information if needed.
"^DIC",414.06,"B","IFCAP/ECMS TRANSACTION",414.06)

"BLD",7176,6)
^142
**END**
**END**
