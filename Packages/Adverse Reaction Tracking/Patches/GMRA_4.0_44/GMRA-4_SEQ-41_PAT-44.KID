Released GMRA*4*44 SEQ #41
Extracted from mail message
**KIDS**:GMRA*4.0*44^

**INSTALL NAME**
GMRA*4.0*44
"BLD",7447,0)
GMRA*4.0*44^ADVERSE REACTION TRACKING^0^3091026^y
"BLD",7447,4,0)
^9.64PA^^
"BLD",7447,6.3)
1
"BLD",7447,"ABPKG")
n
"BLD",7447,"KRN",0)
^9.67PA^779.2^20
"BLD",7447,"KRN",.4,0)
.4
"BLD",7447,"KRN",.401,0)
.401
"BLD",7447,"KRN",.402,0)
.402
"BLD",7447,"KRN",.403,0)
.403
"BLD",7447,"KRN",.5,0)
.5
"BLD",7447,"KRN",.84,0)
.84
"BLD",7447,"KRN",3.6,0)
3.6
"BLD",7447,"KRN",3.8,0)
3.8
"BLD",7447,"KRN",9.2,0)
9.2
"BLD",7447,"KRN",9.8,0)
9.8
"BLD",7447,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",7447,"KRN",9.8,"NM",1,0)
GMRAOR^^0^B60802991
"BLD",7447,"KRN",9.8,"NM","B","GMRAOR",1)

"BLD",7447,"KRN",19,0)
19
"BLD",7447,"KRN",19.1,0)
19.1
"BLD",7447,"KRN",101,0)
101
"BLD",7447,"KRN",409.61,0)
409.61
"BLD",7447,"KRN",771,0)
771
"BLD",7447,"KRN",779.2,0)
779.2
"BLD",7447,"KRN",870,0)
870
"BLD",7447,"KRN",8989.51,0)
8989.51
"BLD",7447,"KRN",8989.52,0)
8989.52
"BLD",7447,"KRN",8994,0)
8994
"BLD",7447,"KRN","B",.4,.4)

"BLD",7447,"KRN","B",.401,.401)

"BLD",7447,"KRN","B",.402,.402)

"BLD",7447,"KRN","B",.403,.403)

"BLD",7447,"KRN","B",.5,.5)

"BLD",7447,"KRN","B",.84,.84)

"BLD",7447,"KRN","B",3.6,3.6)

"BLD",7447,"KRN","B",3.8,3.8)

"BLD",7447,"KRN","B",9.2,9.2)

"BLD",7447,"KRN","B",9.8,9.8)

"BLD",7447,"KRN","B",19,19)

"BLD",7447,"KRN","B",19.1,19.1)

"BLD",7447,"KRN","B",101,101)

"BLD",7447,"KRN","B",409.61,409.61)

"BLD",7447,"KRN","B",771,771)

"BLD",7447,"KRN","B",779.2,779.2)

"BLD",7447,"KRN","B",870,870)

"BLD",7447,"KRN","B",8989.51,8989.51)

"BLD",7447,"KRN","B",8989.52,8989.52)

"BLD",7447,"KRN","B",8994,8994)

"BLD",7447,"QUES",0)
^9.62^^
"BLD",7447,"REQB",0)
^9.611^2^2
"BLD",7447,"REQB",1,0)
GMRA*4.0*42^2
"BLD",7447,"REQB",2,0)
OR*3.0*294^2
"BLD",7447,"REQB","B","GMRA*4.0*42",1)

"BLD",7447,"REQB","B","OR*3.0*294",2)

"MBREQ")
0
"PKG",140,-1)
1^1
"PKG",140,0)
ADVERSE REACTION TRACKING^GMRA^Allergy Tracking System
"PKG",140,20,0)
^9.402P^^
"PKG",140,22,0)
^9.49I^1^1
"PKG",140,22,1,0)
4.0^2960328^2960506^10
"PKG",140,22,1,"PAH",1,0)
44^3091026
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","GMRAOR")
0^1^B60802991^B67130954
"RTN","GMRAOR",1,0)
GMRAOR ;HIRMFO/WAA,RM-OERR UTILITIES ;4/1/09  13:55
"RTN","GMRAOR",2,0)
 ;;4.0;Adverse Reaction Tracking;**2,13,26,37,41,42,44**;Mar 29, 1996;Build 1
"RTN","GMRAOR",3,0)
ORCHK(DFN,TYP,PTR,LOC) ; Given a patient IEN (DFN), this function will
"RTN","GMRAOR",4,0)
 ; return 1 (true) if the patient has an allergy to an agent defined
"RTN","GMRAOR",5,0)
 ; by TYP and PTR, else it returns 0 (false). See table below.
"RTN","GMRAOR",6,0)
 ; The Contrast Media Reaction check will return a null if the patient
"RTN","GMRAOR",7,0)
 ; is not in the ART database.  Contrast Media checks will also
"RTN","GMRAOR",8,0)
 ; return whether the check is from local or remote data as the second
"RTN","GMRAOR",9,0)
 ; piece of the flag if LOC is defined as a positive integer
"RTN","GMRAOR",10,0)
 ; 
"RTN","GMRAOR",11,0)
 ;    Contrast Media Reaction:  TYP="CM", PTR (undefined)
"RTN","GMRAOR",12,0)
 ;              Drug Reaction:  TYP="DR", PTR=IEN in ^PSNDF(.
"RTN","GMRAOR",13,0)
 ;           Drug Ingredients:  TYP="IN", PTR=IEN in ^PS(50.416,
"RTN","GMRAOR",14,0)
 ;                 Drug Class:  TYP="CL", PTR=IEN in ^PS(50.605,
"RTN","GMRAOR",15,0)
 ;
"RTN","GMRAOR",16,0)
 N GMRAFLG,GMRACM,DA ;37
"RTN","GMRAOR",17,0)
 S GMRAFLG=0
"RTN","GMRAOR",18,0)
 I $G(DFN)<1!("^CM^DR^IN^CL^"'[("^"_$G(TYP)_"^"))!($G(TYP)'="CM"&($G(PTR)<1)) S GMRAFLG=""
"RTN","GMRAOR",19,0)
 E  D
"RTN","GMRAOR",20,0)
 .D GETDATA(DFN) ;26 Retreive local/remote allergy data for order checking
"RTN","GMRAOR",21,0)
 .I TYP="CM" S GMRAFLG=$$RAD(DFN)_$S($G(LOC)&($G(GMRACM)'=""):("^"_$G(GMRACM)),1:"") ;37 check for Contrast Media Reaction, return location if requested
"RTN","GMRAOR",22,0)
 .I TYP="DR" S GMRAFLG=$$DRUG(DFN,PTR) ; check for Drug Reaction
"RTN","GMRAOR",23,0)
 .I TYP="IN" S GMRAFLG=$$ING(DFN,PTR) ; Check for Drug Ingredients
"RTN","GMRAOR",24,0)
 .I TYP="CL" S GMRAFLG=$$CLASS(DFN,PTR) ; Check for Drug Class
"RTN","GMRAOR",25,0)
 .Q
"RTN","GMRAOR",26,0)
 Q GMRAFLG
"RTN","GMRAOR",27,0)
RAD(DFN) ; Subroutine checks for Contrast Media Reaction, returns 1 or 0.
"RTN","GMRAOR",28,0)
 N FLG,DC,LOCAL,REMOTE ;37 entire section added
"RTN","GMRAOR",29,0)
 S FLG=$P($G(^GMR(120.86,DFN,0)),U,2) S:FLG=1 FLG=0 S DC="DX10" F  S DC=$O(^TMP("GMRAOC",$J,"APC",DC)) Q:DC'["DX10"  D
"RTN","GMRAOR",30,0)
 .S FLG=1
"RTN","GMRAOR",31,0)
 .I $G(^TMP("GMRAOC",$J,"APC",DC))["LOCAL" S LOCAL=1
"RTN","GMRAOR",32,0)
 .I $G(^TMP("GMRAOC",$J,"APC",DC))["REMOTE" S REMOTE=1
"RTN","GMRAOR",33,0)
 S GMRACM=$S($G(LOCAL)&($G(REMOTE)):"LOCAL AND REMOTE SITE(S)",$G(LOCAL):"LOCAL",$G(REMOTE):"REMOTE SITE(S)",1:"")
"RTN","GMRAOR",34,0)
 ;D EN1^GMRADPT S FLG=GMRAL
"RTN","GMRAOR",35,0)
 ;I GMRAL S GMRAPA=0 F  S GMRAPA=$O(GMRAL(GMRAPA)) Q:GMRAPA<1  D  Q:FLG
"RTN","GMRAOR",36,0)
 ;.S FLG=$$RALLG^GMRARAD(GMRAPA)
"RTN","GMRAOR",37,0)
 ;.Q
"RTN","GMRAOR",38,0)
 Q FLG
"RTN","GMRAOR",39,0)
DRUG(DFN,PTR) ; Subroutine checks for Drug Reaction, returns 1 or 0.
"RTN","GMRAOR",40,0)
 N %,FLG,GMRAC,GMRADR,GMRAI,PSNVPN,PSNDA S FLG=0
"RTN","GMRAOR",41,0)
 K GMRAING,GMRADRCL
"RTN","GMRAOR",42,0)
 S PSNDA=$P(PTR,"."),PSNVPN=$P(PTR,".",2)
"RTN","GMRAOR",43,0)
 I $G(@($$NDFREF_PSNDA_",0)"))'="" D
"RTN","GMRAOR",44,0)
 .; Check for rxn to ingredients.
"RTN","GMRAOR",45,0)
 .; If use the new entry point if there.
"RTN","GMRAOR",46,0)
 .I $T(DISPDRG^PSNNGR)]"",PSNVPN]"" D
"RTN","GMRAOR",47,0)
 ..K ^TMP("PSNDD",$J) D DISPDRG^PSNNGR ; get ingredients
"RTN","GMRAOR",48,0)
 ..S GMRAI=0,%=1 F  S GMRAI=$O(^TMP("PSNDD",$J,GMRAI)) Q:GMRAI<1  I $D(^TMP("GMRAOC",$J,"API",GMRAI)) S FLG=1,GMRAING(%)=^TMP("PSNDD",$J,GMRAI)_$$FAC(^TMP("GMRAOC",$J,"API",GMRAI)),%=%+1 ;26
"RTN","GMRAOR",49,0)
 ..K ^TMP("PSNDD",$J)
"RTN","GMRAOR",50,0)
 ..Q
"RTN","GMRAOR",51,0)
 .E  D  ; get ingredients
"RTN","GMRAOR",52,0)
 ..K ^TMP("PSN",$J) D ^PSNNGR
"RTN","GMRAOR",53,0)
 ..S GMRAI=0,%=1 F  S GMRAI=$O(^TMP("PSN",$J,GMRAI)) Q:GMRAI<1  I $D(^TMP("GMRAOC",$J,"API",GMRAI)) S FLG=1,GMRAING(%)=^TMP("PSN",$J,GMRAI)_$$FAC(^TMP("GMRAOC",$J,"API",GMRAI)),%=%+1 ;26
"RTN","GMRAOR",54,0)
 ..K ^TMP("PSN",$J)
"RTN","GMRAOR",55,0)
 ..Q
"RTN","GMRAOR",56,0)
 .Q:FLG  ; Rxn to ingredient, quit now.
"RTN","GMRAOR",57,0)
 .; Check for rxn to VA Drug Class
"RTN","GMRAOR",58,0)
 .S PSNDA=$P(PTR,"."),PSNVPN=$P(PTR,".",2)
"RTN","GMRAOR",59,0)
 .N CLASS
"RTN","GMRAOR",60,0)
 .I PSNVPN S CLASS=$$DCLCODE^PSNAPIS(PSNDA,PSNVPN) D DRCL(CLASS) Q
"RTN","GMRAOR",61,0)
 .N CLASS,GMRALIST
"RTN","GMRAOR",62,0)
 .S GMRALIST=$$CLIST^PSNAPIS(PSNDA,.GMRALIST) Q:'$G(GMRALIST)
"RTN","GMRAOR",63,0)
 .S GMRALIST=0 F  S GMRALIST=$O(GMRALIST(GMRALIST)) Q:'GMRALIST  D DRCL($P(GMRALIST(GMRALIST),U,2))
"RTN","GMRAOR",64,0)
 .Q
"RTN","GMRAOR",65,0)
 Q FLG
"RTN","GMRAOR",66,0)
FAC(NODE) ;
"RTN","GMRAOR",67,0)
 N FAC
"RTN","GMRAOR",68,0)
 S FAC=$S($L(NODE):" ("_NODE_")",1:"")
"RTN","GMRAOR",69,0)
 Q FAC
"RTN","GMRAOR",70,0)
DRCL(CODE) ;return any rxn's in GMRADRCL(
"RTN","GMRAOR",71,0)
 I '$D(^TMP("GMRAOC",$J,"APC",CODE)) Q
"RTN","GMRAOR",72,0)
 N J S J=$S('$D(GMRADRCL):1,1:$O(GMRADRCL(999),-1)+1)
"RTN","GMRAOR",73,0)
 ;S GMRADRCL(J)=$$CLASS2^PSNAPIS(CODE)
"RTN","GMRAOR",74,0)
 N CLSFN
"RTN","GMRAOR",75,0)
 ;S CLSFN=$P(^PS(50.605,+$O(^PS(50.605,"B",CODE,0)),0),U,2)
"RTN","GMRAOR",76,0)
 S CLSFN=$$CODE2CL^GMRAPENC(CODE)
"RTN","GMRAOR",77,0)
 S GMRADRCL(J)=CODE_"^"_CLSFN_$$FAC(^TMP("GMRAOC",$J,"APC",CODE))
"RTN","GMRAOR",78,0)
 S FLG=2
"RTN","GMRAOR",79,0)
 Q 
"RTN","GMRAOR",80,0)
ING(DFN,PTR) ; Subroutine checks for Drug Ingredients, returns:
"RTN","GMRAOR",81,0)
 ;                  If found FLG= 1 with GMRAIEN Array Drug Ingredients
"RTN","GMRAOR",82,0)
 ;                 Not found FLG= 0
"RTN","GMRAOR",83,0)
 N GMRAX K GMRAIEN
"RTN","GMRAOR",84,0)
 S FLG=0
"RTN","GMRAOR",85,0)
 S GMRAX=0
"RTN","GMRAOR",86,0)
 F  S GMRAX=$O(^GMR(120.8,"API",DFN,PTR,GMRAX)) Q:GMRAX<1  S FLG=1,GMRAIEN(GMRAX)=""
"RTN","GMRAOR",87,0)
 Q FLG
"RTN","GMRAOR",88,0)
CLASS(DFN,PTR) ; Subroutine checks for Drug Class, returns:
"RTN","GMRAOR",89,0)
 ;                  If found FLG= 1 with GMRAIEN Array Drug Class
"RTN","GMRAOR",90,0)
 ;                 Not found FLG= 0
"RTN","GMRAOR",91,0)
 N GMRAC,GMRAX K GMRAIEN
"RTN","GMRAOR",92,0)
 ;S GMRAX=0,FLG=0,GMRAC=$P($G(^PS(50.605,PTR,0)),U)
"RTN","GMRAOR",93,0)
 S GMRAX=0,FLG=0,GMRAC=$$CLP2CODE^GMRAPENC(PTR)
"RTN","GMRAOR",94,0)
 I GMRAC'="" F  S GMRAX=$O(^GMR(120.8,"APC",DFN,GMRAC,GMRAX)) Q:GMRAX<1  S FLG=1,GMRAIEN(GMRAX)=""
"RTN","GMRAOR",95,0)
 Q FLG
"RTN","GMRAOR",96,0)
NDFREF() ;get version dependent NDF reference
"RTN","GMRAOR",97,0)
 I $$VERSION^XPDUTL("PSN")<4 Q "^PSNDF("
"RTN","GMRAOR",98,0)
 Q "^PSNDF(50.6," ; new reference for ver 4.0
"RTN","GMRAOR",99,0)
 ;
"RTN","GMRAOR",100,0)
GETDATA(DFN) ;Obtain local and HDR related allergy data for use in order checking.  Section added in patch 26
"RTN","GMRAOR",101,0)
 ;Output from call will be stored in ^TMP as follows:
"RTN","GMRAOR",102,0)
 ;^TMP("GMRAOC",$J,"API",J)="" where J is the ingredient IEN
"RTN","GMRAOR",103,0)
 ;^TMP("GMRAOC",$J,"APC",K)="" where K is the drug class classification (e.g. MS105)
"RTN","GMRAOR",104,0)
 ;
"RTN","GMRAOR",105,0)
 F  L +^XTMP("GMRAOC",DFN):1 Q:$T
"RTN","GMRAOR",106,0)
 K ^XTMP("GMRAOC",DFN) 
"RTN","GMRAOR",107,0)
 D REMOTE(DFN),LOCAL(DFN)
"RTN","GMRAOR",108,0)
 K ^TMP("GMRAOC",$J)
"RTN","GMRAOR",109,0)
 M ^TMP("GMRAOC",$J)=^XTMP("GMRAOC",DFN)
"RTN","GMRAOR",110,0)
 S ^XTMP("GMRAOC",DFN,0)=$$FMADD^XLFDT($$NOW^XLFDT,2)_U_$$NOW^XLFDT ;42
"RTN","GMRAOR",111,0)
 L -^XTMP("GMRAOC",DFN)
"RTN","GMRAOR",112,0)
 Q
"RTN","GMRAOR",113,0)
 ;
"RTN","GMRAOR",114,0)
LOCAL(DFN) ;
"RTN","GMRAOR",115,0)
 N J
"RTN","GMRAOR",116,0)
 S J=0 F  S J=$O(^GMR(120.8,"API",DFN,J)) Q:'+J  S ^XTMP("GMRAOC",DFN,"API",J)=$$SETNODE^GMRAOR1($G(^XTMP("GMRAOC",DFN,"API",J)),"LOCAL")
"RTN","GMRAOR",117,0)
 S J="" F  S J=$O(^GMR(120.8,"APC",DFN,J)) Q:J=""  S ^XTMP("GMRAOC",DFN,"APC",J)=$$SETNODE^GMRAOR1($G(^XTMP("GMRAOC",DFN,"APC",J)),"LOCAL")
"RTN","GMRAOR",118,0)
 Q
"RTN","GMRAOR",119,0)
 ;
"RTN","GMRAOR",120,0)
REMOTE(DFN) ;
"RTN","GMRAOR",121,0)
 N J,FLG,REACT,IN,VUID,FILE,GMRARAY,DC,DCLASS,GMRAING,GMRADC,K,INGLST,I,PRIM,IEN
"RTN","GMRAOR",122,0)
 ;Check for HDR data
"RTN","GMRAOR",123,0)
 Q:'$L($T(HAVEHDR^ORRDI1))  Q:'$$HAVEHDR^ORRDI1  ;Quit if call doesn't exist or if the HDR isn't available
"RTN","GMRAOR",124,0)
 Q:'$$GET^ORRDI1(DFN,"ART")  ;Quit if no HDR data for selected patient
"RTN","GMRAOR",125,0)
 S J=0 F  S J=$O(^XTMP("ORRDI","ART",DFN,J)) Q:'+J  D
"RTN","GMRAOR",126,0)
 .S FLG=0
"RTN","GMRAOR",127,0)
 .S REACT=$G(^XTMP("ORRDI","ART",DFN,J,"REACTANT",0)) ;Reaction VUID
"RTN","GMRAOR",128,0)
 .I $D(^XTMP("ORRDI","ART",DFN,J,"DRUG INGREDIENTS")) D  ;Ingredient data exists
"RTN","GMRAOR",129,0)
 ..S FLG=1 ;Have ingredient data so REACT is ok
"RTN","GMRAOR",130,0)
 ..S IN=0 F  S IN=$O(^XTMP("ORRDI","ART",DFN,J,"DRUG INGREDIENTS",IN)) Q:'+IN  D
"RTN","GMRAOR",131,0)
 ...S VUID=$P(^(IN),U),FILE=$P(^(IN),U,3) ;Naked from above line
"RTN","GMRAOR",132,0)
 ...S FILE=$P(FILE,"99VA",2)
"RTN","GMRAOR",133,0)
 ...D GETIREF^XTID(FILE,,VUID,"GMRARAY") ;Get IENs related to VUID
"RTN","GMRAOR",134,0)
 ...S IEN=0 F  S IEN=$O(GMRARAY(FILE,.01,IEN)) Q:'+IEN  S ^XTMP("GMRAOC",DFN,"API",+IEN)=$$SETNODE^GMRAOR1($G(^XTMP("GMRAOC",DFN,"API",+IEN)),"REMOTE SITE(S)")
"RTN","GMRAOR",135,0)
 ...K GMRARAY
"RTN","GMRAOR",136,0)
 .I $D(^XTMP("ORRDI","ART",DFN,J,"DRUG CLASSES")) D  ;Drug class data exists
"RTN","GMRAOR",137,0)
 ..S FLG=1
"RTN","GMRAOR",138,0)
 ..S DC=0 F  S DC=$O(^XTMP("ORRDI","ART",DFN,J,"DRUG CLASSES",DC)) Q:'+DC  D
"RTN","GMRAOR",139,0)
 ...S DCLASS=$P(^(DC),U,2) ;Naked from above, gets drug class (e.g.MS105)
"RTN","GMRAOR",140,0)
 ...S ^XTMP("GMRAOC",DFN,"APC",DCLASS)=$$SETNODE^GMRAOR1($G(^XTMP("GMRAOC",DFN,"APC",DCLASS)),"REMOTE SITE(S)")
"RTN","GMRAOR",141,0)
 .D FIND(REACT,.GMRAING,.GMRADC) I $D(GMRAING)!($D(GMRADC)) D
"RTN","GMRAOR",142,0)
 ..S K=0 F  S K=$O(GMRAING(K)) Q:'+K  S ^XTMP("GMRAOC",DFN,"API",K)=$$SETNODE^GMRAOR1($G(^XTMP("GMRAOC",DFN,"API",K)),"REMOTE SITE(S)")
"RTN","GMRAOR",143,0)
 ..S K="" F  S K=$O(GMRADC(K)) Q:K=""  S ^XTMP("GMRAOC",DFN,"APC",K)=$$SETNODE^GMRAOR1($G(^XTMP("GMRAOC",DFN,"APC",K)),"REMOTE SITE(S)")
"RTN","GMRAOR",144,0)
 I $D(^XTMP("GMRAOC",DFN,"API")) D
"RTN","GMRAOR",145,0)
 .N I,INGLST
"RTN","GMRAOR",146,0)
 .S I=0 F  S I=$O(^XTMP("GMRAOC",DFN,"API",I)) Q:'I  D
"RTN","GMRAOR",147,0)
 ..N PRIM
"RTN","GMRAOR",148,0)
 ..S PRIM=$$PRIMARY(I)
"RTN","GMRAOR",149,0)
 ..I PRIM S INGLST(PRIM)=^XTMP("GMRAOC",DFN,"API",I) K ^XTMP("GMRAOC",DFN,"API",I)
"RTN","GMRAOR",150,0)
 .S I=0 F  S I=$O(INGLST(I)) Q:'I  S ^XTMP("GMRAOC",DFN,"API",I)=INGLST(I)
"RTN","GMRAOR",151,0)
 Q
"RTN","GMRAOR",152,0)
 ;
"RTN","GMRAOR",153,0)
FIND(REACT,ING,DC) ;If reactant didn't include drug classes and/or ingredients, try and find them locally.  Section added in patch 26
"RTN","GMRAOR",154,0)
 N VUID,FILE,PSNDA,GMRAIEN,LIST,GMRAI,GMRALIST,GMRARAY,J,SUB,FLAG
"RTN","GMRAOR",155,0)
 S FLAG=0
"RTN","GMRAOR",156,0)
 S VUID=$P(REACT,U)
"RTN","GMRAOR",157,0)
 S FILE=$P(REACT,U,3)
"RTN","GMRAOR",158,0)
 S FILE=$P(FILE,"99VA",2)
"RTN","GMRAOR",159,0)
 D GETIREF^XTID(,,VUID,"GMRARAY")
"RTN","GMRAOR",160,0)
 S FILE="" F  S FILE=$O(GMRARAY(FILE)) Q:FILE=""  D
"RTN","GMRAOR",161,0)
 .S GMRAIEN=0 F  S GMRAIEN=$O(GMRARAY(FILE,.01,GMRAIEN)) Q:'+GMRAIEN  D
"RTN","GMRAOR",162,0)
 ..I FILE=50.6 D
"RTN","GMRAOR",163,0)
 ...K ^TMP("PSN",$J) S PSNDA=+GMRAIEN D ^PSNNGR
"RTN","GMRAOR",164,0)
 ...S GMRAI=0 F  S GMRAI=$O(^TMP("PSN",$J,GMRAI)) Q:GMRAI<1  S ING(GMRAI)=""
"RTN","GMRAOR",165,0)
 ...K ^TMP("PSN",$J),GMRARAY
"RTN","GMRAOR",166,0)
 ...S PSNDA=+GMRAIEN,GMRALIST=$$CLIST^PSNAPIS(PSNDA,.GMRALIST) Q:'$G(GMRALIST)
"RTN","GMRAOR",167,0)
 ...S GMRALIST=0 F  S GMRALIST=$O(GMRALIST(GMRALIST)) Q:'GMRALIST  S DC($P(GMRALIST(GMRALIST),U,2))=""
"RTN","GMRAOR",168,0)
 ..I FILE=120.82 D
"RTN","GMRAOR",169,0)
 ...S SUB=0 F  S SUB=$O(^GMRD(120.82,+GMRAIEN,"ING",SUB)) Q:'+SUB  S ING(+$P($G(^GMRD(120.82,+GMRAIEN,"ING",SUB,0)),U))="" ;record ingredients
"RTN","GMRAOR",170,0)
 ...S SUB=0 F  S SUB=$O(^GMRD(120.82,+GMRAIEN,"CLASS",SUB)) Q:'+SUB  S DC($P($$CLASS2^PSNAPIS(+$P($G(^GMRD(120.82,+GMRAIEN,"CLASS",SUB,0)),U)),U))="" ;Get drug classes
"RTN","GMRAOR",171,0)
 ..I FILE=50.605 D
"RTN","GMRAOR",172,0)
 ...S DC($P($$CLASS2^PSNAPIS(+GMRAIEN),U))=""
"RTN","GMRAOR",173,0)
 ..I FILE=50.416 D
"RTN","GMRAOR",174,0)
 ...S ING(+GMRAIEN)=""
"RTN","GMRAOR",175,0)
 Q
"RTN","GMRAOR",176,0)
PRIMARY(INGIEN) ;check if INGIEN is a primary ingredient
"RTN","GMRAOR",177,0)
 ;returns 0 if INGIEN is primary
"RTN","GMRAOR",178,0)
 ;returns the IEN of INGIEN's primary ingredient if INGIEN is not primary
"RTN","GMRAOR",179,0)
 N RETURN
"RTN","GMRAOR",180,0)
 K ^TMP($J,"GMRALIST")
"RTN","GMRAOR",181,0)
 D ZERO^PSN50P41(INGIEN,,,"GMRALIST")
"RTN","GMRAOR",182,0)
 S RETURN=+$G(^TMP($J,"GMRALIST",INGIEN,2))
"RTN","GMRAOR",183,0)
 Q RETURN
"VER")
8.0^22.0
"BLD",7447,6)
^41
**END**
**END**
