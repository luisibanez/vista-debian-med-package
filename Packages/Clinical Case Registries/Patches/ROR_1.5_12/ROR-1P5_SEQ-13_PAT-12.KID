Released ROR*1.5*12 SEQ #13
Extracted from mail message
**KIDS**:ROR*1.5*12^

**INSTALL NAME**
ROR*1.5*12
"BLD",7789,0)
ROR*1.5*12^CLINICAL CASE REGISTRIES^0^3110104^y
"BLD",7789,1,0)
^^1^1^3101129^
"BLD",7789,1,1,0)
ADD SUBSCRIPT TO VARIABLE FOR LAB API CALL
"BLD",7789,4,0)
^9.64PA^^
"BLD",7789,6.3)
1
"BLD",7789,"KRN",0)
^9.67PA^779.2^20
"BLD",7789,"KRN",.4,0)
.4
"BLD",7789,"KRN",.401,0)
.401
"BLD",7789,"KRN",.402,0)
.402
"BLD",7789,"KRN",.403,0)
.403
"BLD",7789,"KRN",.5,0)
.5
"BLD",7789,"KRN",.84,0)
.84
"BLD",7789,"KRN",3.6,0)
3.6
"BLD",7789,"KRN",3.8,0)
3.8
"BLD",7789,"KRN",9.2,0)
9.2
"BLD",7789,"KRN",9.8,0)
9.8
"BLD",7789,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",7789,"KRN",9.8,"NM",1,0)
RORUPR1^^0^B71424454
"BLD",7789,"KRN",9.8,"NM","B","RORUPR1",1)

"BLD",7789,"KRN",19,0)
19
"BLD",7789,"KRN",19.1,0)
19.1
"BLD",7789,"KRN",101,0)
101
"BLD",7789,"KRN",409.61,0)
409.61
"BLD",7789,"KRN",771,0)
771
"BLD",7789,"KRN",779.2,0)
779.2
"BLD",7789,"KRN",870,0)
870
"BLD",7789,"KRN",8989.51,0)
8989.51
"BLD",7789,"KRN",8989.52,0)
8989.52
"BLD",7789,"KRN",8994,0)
8994
"BLD",7789,"KRN","B",.4,.4)

"BLD",7789,"KRN","B",.401,.401)

"BLD",7789,"KRN","B",.402,.402)

"BLD",7789,"KRN","B",.403,.403)

"BLD",7789,"KRN","B",.5,.5)

"BLD",7789,"KRN","B",.84,.84)

"BLD",7789,"KRN","B",3.6,3.6)

"BLD",7789,"KRN","B",3.8,3.8)

"BLD",7789,"KRN","B",9.2,9.2)

"BLD",7789,"KRN","B",9.8,9.8)

"BLD",7789,"KRN","B",19,19)

"BLD",7789,"KRN","B",19.1,19.1)

"BLD",7789,"KRN","B",101,101)

"BLD",7789,"KRN","B",409.61,409.61)

"BLD",7789,"KRN","B",771,771)

"BLD",7789,"KRN","B",779.2,779.2)

"BLD",7789,"KRN","B",870,870)

"BLD",7789,"KRN","B",8989.51,8989.51)

"BLD",7789,"KRN","B",8989.52,8989.52)

"BLD",7789,"KRN","B",8994,8994)

"BLD",7789,"QUES",0)
^9.62^^
"BLD",7789,"REQB",0)
^9.611^^
"MBREQ")
0
"PKG",389,-1)
1^1
"PKG",389,0)
CLINICAL CASE REGISTRIES^ROR^CLINICAL CASE REGISTRIES
"PKG",389,20,0)
^9.402P^^
"PKG",389,22,0)
^9.49I^1^1
"PKG",389,22,1,0)
1.5^3060208^3060221^222222227
"PKG",389,22,1,"PAH",1,0)
12^3110104
"PKG",389,22,1,"PAH",1,1,0)
^^1^1^3110104
"PKG",389,22,1,"PAH",1,1,1,0)
ADD SUBSCRIPT TO VARIABLE FOR LAB API CALL
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","RORUPR1")
0^1^B71424454^B69715396
"RTN","RORUPR1",1,0)
RORUPR1 ;HCIOFO/SG - SELECTION RULES PREPARATION  ; 11/20/05 4:56pm
"RTN","RORUPR1",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**12**;Feb 17, 2006;Build 1
"RTN","RORUPR1",3,0)
 ;
"RTN","RORUPR1",4,0)
 ;01/04/2011 BAY/KAM ROR*1.5*12 Remedy Call 421530 Populate a variable
"RTN","RORUPR1",5,0)
 ;                              to assist with Lab Test Result Code
"RTN","RORUPR1",6,0)
 ;                              identification in GCPR^LA7QRY
"RTN","RORUPR1",7,0)
 Q
"RTN","RORUPR1",8,0)
 ;
"RTN","RORUPR1",9,0)
 ;***** MARKS PARENT FILES TO PROCESS
"RTN","RORUPR1",10,0)
 ;
"RTN","RORUPR1",11,0)
 ; This function analyzes file dependencies defined by the 'ROR
"RTN","RORUPR1",12,0)
 ; METADATA' file and guaranties that all necessary files will be
"RTN","RORUPR1",13,0)
 ; processed during the registry update.
"RTN","RORUPR1",14,0)
 ;
"RTN","RORUPR1",15,0)
FILETREE() ;
"RTN","RORUPR1",16,0)
 N FILE,PF,RC
"RTN","RORUPR1",17,0)
 S FILE="",RC=0
"RTN","RORUPR1",18,0)
 F  S FILE=$O(RORUPD("SR",FILE))  Q:FILE=""  D  Q:RC<0
"RTN","RORUPR1",19,0)
 . S PF=+FILE,RC=0
"RTN","RORUPR1",20,0)
 . ;--- Follow a path that leads from this file to
"RTN","RORUPR1",21,0)
 . ;    the root of the "file-processing tree".
"RTN","RORUPR1",22,0)
 . F  D  Q:RC
"RTN","RORUPR1",23,0)
 . . ;--- Check if metadata for the file is defined
"RTN","RORUPR1",24,0)
 . . I '$D(^ROR(799.2,PF))  D  Q
"RTN","RORUPR1",25,0)
 . . . S RC=$$ERROR^RORERR(-63,,,,PF)
"RTN","RORUPR1",26,0)
 . . ;--- Get the number of the parent file
"RTN","RORUPR1",27,0)
 . . S PF=+$$GET1^DIQ(799.2,PF_",",1,"I",,"RORMSG")
"RTN","RORUPR1",28,0)
 . . I $G(DIERR)  D  Q
"RTN","RORUPR1",29,0)
 . . . S RC=$$DBS^RORERR("RORMSG",-9)
"RTN","RORUPR1",30,0)
 . . ;--- Stop if the root of the "file-processing tree" has been
"RTN","RORUPR1",31,0)
 . . ;    reached or the file is already marked for processing.
"RTN","RORUPR1",32,0)
 . . ;    Otherwise, mark the file and continue moving up.
"RTN","RORUPR1",33,0)
 . . I 'PF!$D(RORUPD("SR",PF))  S RC=1  Q
"RTN","RORUPR1",34,0)
 . . S RORUPD("SR",PF)=""
"RTN","RORUPR1",35,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORUPR1",36,0)
 ;
"RTN","RORUPR1",37,0)
 ;***** RETURNS LEVEL OF THE FILE IN 'THE FILE PROCESSING' TREE
"RTN","RORUPR1",38,0)
 ;
"RTN","RORUPR1",39,0)
 ; FILE          File number
"RTN","RORUPR1",40,0)
 ;
"RTN","RORUPR1",41,0)
FLEVEL(FILE) ;
"RTN","RORUPR1",42,0)
 N LEVEL
"RTN","RORUPR1",43,0)
 S LEVEL=1
"RTN","RORUPR1",44,0)
 F  S FILE=+$P($G(^ROR(799.2,FILE,0)),U,2)  Q:'FILE  S LEVEL=LEVEL+1
"RTN","RORUPR1",45,0)
 Q LEVEL
"RTN","RORUPR1",46,0)
 ;
"RTN","RORUPR1",47,0)
 ;***** LOADS AND PREPARES LAB SEARCH INDICATORS
"RTN","RORUPR1",48,0)
 ;
"RTN","RORUPR1",49,0)
 ; Return Values:
"RTN","RORUPR1",50,0)
 ;        0  Ok
"RTN","RORUPR1",51,0)
 ;       <0  Error code
"RTN","RORUPR1",52,0)
 ;
"RTN","RORUPR1",53,0)
LABSRCH() ;
"RTN","RORUPR1",54,0)
 N I,IND,IR,LRCODE,LSICNT,LSIEN,RC,RORBUF,RORMSG,TMP,VAL
"RTN","RORUPR1",55,0)
 K RORLRC
"RTN","RORUPR1",56,0)
 ;--- Browse through the list of Lab searches
"RTN","RORUPR1",57,0)
 S LSIEN="",RC=0
"RTN","RORUPR1",58,0)
 F  S LSIEN=$O(@RORUPDPI@(4,LSIEN))  Q:LSIEN=""  D  Q:RC<0
"RTN","RORUPR1",59,0)
 . K RORBUF  S TMP=","_LSIEN_","
"RTN","RORUPR1",60,0)
 . D LIST^DIC(798.92,TMP,"@;.01;.02;1I;2",,,,,"B",,,"RORBUF","RORMSG")
"RTN","RORUPR1",61,0)
 . S RC=$$DBS^RORERR("RORMSG",-9)  Q:RC<0
"RTN","RORUPR1",62,0)
 . ;--- Browse through the list of search indicators
"RTN","RORUPR1",63,0)
 . S IR="",LSICNT=0
"RTN","RORUPR1",64,0)
 . F  S IR=$O(RORBUF("DILIST","ID",IR))  Q:IR=""  D  Q:RC<0
"RTN","RORUPR1",65,0)
 . . K LRCODE
"RTN","RORUPR1",66,0)
 . . ;--- Check if the indicator should be ignored
"RTN","RORUPR1",67,0)
 . . S IND=$G(RORBUF("DILIST","ID",IR,1))  Q:IND'>0
"RTN","RORUPR1",68,0)
 . . ;--- Get the result code (LOINC and/or NLT)
"RTN","RORUPR1",69,0)
 . . S LRCODE=$G(RORBUF("DILIST","ID",IR,.01))
"RTN","RORUPR1",70,0)
 . . I LRCODE>0  D  Q:LRCODE<0  S LRCODE(LRCODE_"^LN")=""
"RTN","RORUPR1",71,0)
 . . . S LRCODE=$$LNCODE^RORUTL02(LRCODE)
"RTN","RORUPR1",72,0)
 . . S LRCODE=$G(RORBUF("DILIST","ID",IR,.02))
"RTN","RORUPR1",73,0)
 . . S:LRCODE>0 LRCODE(LRCODE_"^NLT")=""
"RTN","RORUPR1",74,0)
 . . ;--- Either LOINC or NLT must be defined
"RTN","RORUPR1",75,0)
 . . Q:$D(LRCODE)<10
"RTN","RORUPR1",76,0)
 . . M RORLRC("B")=LRCODE
"RTN","RORUPR1",77,0)
 . . ;--- Prepare and store the search indicator
"RTN","RORUPR1",78,0)
 . . S VAL=$G(RORBUF("DILIST","ID",IR,2))
"RTN","RORUPR1",79,0)
 . . I VAL="",IND'=1,IND'=6  Q
"RTN","RORUPR1",80,0)
 . . S LSICNT=LSICNT+1
"RTN","RORUPR1",81,0)
 . . S LRCODE=""
"RTN","RORUPR1",82,0)
 . . F  S LRCODE=$O(LRCODE(LRCODE))  Q:LRCODE=""  D
"RTN","RORUPR1",83,0)
 . . . S I=$O(@RORUPDPI@("LS",LRCODE,LSIEN,""),-1)+1
"RTN","RORUPR1",84,0)
 . . . S @RORUPDPI@("LS",LRCODE,LSIEN,I)=IND_U_VAL
"RTN","RORUPR1",85,0)
 . Q:(RC<0)!(LSICNT>0)
"RTN","RORUPR1",86,0)
 . ;--- Record a warning if no indicators are defined
"RTN","RORUPR1",87,0)
 . S TMP=$$GET1^DIQ(798.9,LSIEN_",",.01,,,"RORMSG")
"RTN","RORUPR1",88,0)
 . S TMP=$$ERROR^RORERR(-55,,,,TMP)
"RTN","RORUPR1",89,0)
 Q:RC<0 RC
"RTN","RORUPR1",90,0)
 ;--- Prepare a list of Lab result codes for GCPR^LA7QRY
"RTN","RORUPR1",91,0)
 ;01/04/2011 BAY/KAM ROR*1.5*12 added RORLRC variable set to next line
"RTN","RORUPR1",92,0)
 S LRCODE="",RORLRC="CH"
"RTN","RORUPR1",93,0)
 F IR=1:1  S LRCODE=$O(RORLRC("B",LRCODE))  Q:LRCODE=""  D
"RTN","RORUPR1",94,0)
 . S RORLRC(IR)=LRCODE
"RTN","RORUPR1",95,0)
 K RORLRC("B")
"RTN","RORUPR1",96,0)
 Q 0
"RTN","RORUPR1",97,0)
 ;
"RTN","RORUPR1",98,0)
 ;***** LOADS SELECTION RULES DATA
"RTN","RORUPR1",99,0)
 ;
"RTN","RORUPR1",100,0)
 ; .REGLST       Reference to a local array containing registry names
"RTN","RORUPR1",101,0)
 ;               as subscripts and optional registry IENs as values
"RTN","RORUPR1",102,0)
 ;
"RTN","RORUPR1",103,0)
 ; Return Values:
"RTN","RORUPR1",104,0)
 ;        0  Ok
"RTN","RORUPR1",105,0)
 ;       <0  Error code
"RTN","RORUPR1",106,0)
 ;
"RTN","RORUPR1",107,0)
LOAD(REGLST) ;
"RTN","RORUPR1",108,0)
 N I,IENS,RC,REGIEN,REGNAME,RORBUF,RORMSG,RULENAME
"RTN","RORUPR1",109,0)
 K RORUPD("LM1")
"RTN","RORUPR1",110,0)
 S REGNAME="",RC=0
"RTN","RORUPR1",111,0)
 F  S REGNAME=$O(REGLST(REGNAME))  Q:REGNAME=""  D  Q:RC<0
"RTN","RORUPR1",112,0)
 . S REGIEN=+$G(REGLST(REGNAME))
"RTN","RORUPR1",113,0)
 . I REGIEN'>0  D  I REGIEN'>0  S RC=REGIEN  Q
"RTN","RORUPR1",114,0)
 . . S REGIEN=$$REGIEN^RORUTL02(REGNAME)
"RTN","RORUPR1",115,0)
 . S @RORUPDPI@(2,REGIEN)=REGNAME
"RTN","RORUPR1",116,0)
 . ;--- Load selection rules
"RTN","RORUPR1",117,0)
 . K RORBUF  S IENS=","_REGIEN_","
"RTN","RORUPR1",118,0)
 . D LIST^DIC(798.13,IENS,"@;.01E","U",,,,"B",,,"RORBUF","RORMSG")
"RTN","RORUPR1",119,0)
 . S RC=$$DBS^RORERR("RORMSG",-9)  Q:RC<0
"RTN","RORUPR1",120,0)
 . S I=""
"RTN","RORUPR1",121,0)
 . F  S I=$O(RORBUF("DILIST","ID",I))  Q:I=""  D  Q:RC<0
"RTN","RORUPR1",122,0)
 . . S RULENAME=RORBUF("DILIST","ID",I,.01)
"RTN","RORUPR1",123,0)
 . . S RC=$$LOADRULE(RULENAME,REGIEN)
"RTN","RORUPR1",124,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORUPR1",125,0)
 ;
"RTN","RORUPR1",126,0)
 ;***** LOADS THE SELECTION RULE
"RTN","RORUPR1",127,0)
 ;
"RTN","RORUPR1",128,0)
 ; RULENAME      Name of the rule
"RTN","RORUPR1",129,0)
 ; REGIEN        Registry IEN
"RTN","RORUPR1",130,0)
 ; [LEVEL]       Level of the rule (O for top level rules)
"RTN","RORUPR1",131,0)
 ;
"RTN","RORUPR1",132,0)
 ; Return Values:
"RTN","RORUPR1",133,0)
 ;        0  Ok
"RTN","RORUPR1",134,0)
 ;       <0  Error code
"RTN","RORUPR1",135,0)
 ;
"RTN","RORUPR1",136,0)
LOADRULE(RULENAME,REGIEN,LEVEL) ;
"RTN","RORUPR1",137,0)
 ;--- Quit if the rule has already been loaded
"RTN","RORUPR1",138,0)
 I $D(@RORUPDPI@(3,RULENAME))  D  Q 0
"RTN","RORUPR1",139,0)
 . S @RORUPDPI@(3,RULENAME,2,REGIEN)=""
"RTN","RORUPR1",140,0)
 ;---
"RTN","RORUPR1",141,0)
 N DATELMT,DEPRLC,EXPR,FILE,I,IENS,RORBUF,RORMSG,RULIEN,TMP
"RTN","RORUPR1",142,0)
 ;--- Load the rule data
"RTN","RORUPR1",143,0)
 D FIND^DIC(798.2,,"@;1;2I","X",RULENAME,2,"B",,,"RORBUF","RORMSG")
"RTN","RORUPR1",144,0)
 S RC=$$DBS^RORERR("RORMSG",-9)  Q:RC<0 RC
"RTN","RORUPR1",145,0)
 Q:$G(RORBUF("DILIST",0))<1 $$ERROR^RORERR(-3,,RULENAME)
"RTN","RORUPR1",146,0)
 Q:$G(RORBUF("DILIST",0))>1 $$ERROR^RORERR(-4,,RULENAME)
"RTN","RORUPR1",147,0)
 S RULIEN=+RORBUF("DILIST",2,1),IENS=","_RULIEN_","
"RTN","RORUPR1",148,0)
 S FILE=+RORBUF("DILIST","ID",1,2)
"RTN","RORUPR1",149,0)
 ;--- Put the rule data into the temporary global
"RTN","RORUPR1",150,0)
 S @RORUPDPI@(1,FILE,"S",RULENAME)=""
"RTN","RORUPR1",151,0)
 S @RORUPDPI@(3,RULENAME)=RULIEN_U_FILE_"^^"_'$G(LEVEL)
"RTN","RORUPR1",152,0)
 S RC=$$PARSER^RORUPEX(FILE,RORBUF("DILIST","ID",1,1),.EXPR)
"RTN","RORUPR1",153,0)
 Q:RC<0 RC
"RTN","RORUPR1",154,0)
 S @RORUPDPI@(3,RULENAME,1)=EXPR
"RTN","RORUPR1",155,0)
 S @RORUPDPI@(3,RULENAME,2,REGIEN)=""
"RTN","RORUPR1",156,0)
 M @RORUPDPI@(1,FILE,"F")=EXPR("F")
"RTN","RORUPR1",157,0)
 S:'$G(LEVEL) RORUPD("LM1",RULENAME)=""
"RTN","RORUPR1",158,0)
 M @RORUPDPI@(4)=EXPR("L")
"RTN","RORUPR1",159,0)
 ;--- Load the rules that this rule depends on
"RTN","RORUPR1",160,0)
 S DEPRLC=""
"RTN","RORUPR1",161,0)
 F  S DEPRLC=$O(EXPR("R",DEPRLC))  Q:DEPRLC=""  D  Q:RC<0
"RTN","RORUPR1",162,0)
 . S RC=$$LOADRULE(DEPRLC,REGIEN,$G(LEVEL)+1)
"RTN","RORUPR1",163,0)
 . S:RC'<0 @RORUPDPI@(3,RULENAME,3,DEPRLC)=""
"RTN","RORUPR1",164,0)
 Q:RC<0 RC
"RTN","RORUPR1",165,0)
 ;--- Load a list of additional data elements
"RTN","RORUPR1",166,0)
 K EXPR,RORBUF,RORMSG
"RTN","RORUPR1",167,0)
 D LIST^DIC(798.26,IENS,"@;.01I;1I",,,,,"B",,,"RORBUF","RORMSG")
"RTN","RORUPR1",168,0)
 S RC=$$DBS^RORERR("RORMSG",-9)  Q:RC<0 RC
"RTN","RORUPR1",169,0)
 S I=""
"RTN","RORUPR1",170,0)
 F  S I=$O(RORBUF("DILIST","ID",I))  Q:I=""  D
"RTN","RORUPR1",171,0)
 . S DATELMT=RORBUF("DILIST","ID",I,.01)
"RTN","RORUPR1",172,0)
 . S TMP=$G(RORBUF("DILIST","ID",I,1))  S:TMP="" TMP="EI"
"RTN","RORUPR1",173,0)
 . S:TMP["E" @RORUPDPI@(1,FILE,"F",DATELMT,"E")=""
"RTN","RORUPR1",174,0)
 . S:TMP["I" @RORUPDPI@(1,FILE,"F",DATELMT,"I")=""
"RTN","RORUPR1",175,0)
 Q 0
"RTN","RORUPR1",176,0)
 ;
"RTN","RORUPR1",177,0)
 ;***** LOADS AND PREPARES THE METADATA
"RTN","RORUPR1",178,0)
METADATA() ;
"RTN","RORUPR1",179,0)
 N API,DATELMT,DEFL,FILE,I,IENS,IS,PIF,RC,ROOT,RORBUF,RORMSG,TMP,VT
"RTN","RORUPR1",180,0)
 S RC=$$FILETREE()  Q:RC<0 RC
"RTN","RORUPR1",181,0)
 S DEFL="@;.02I;1I;4I;4.1;4.2;6I"
"RTN","RORUPR1",182,0)
 ;--- Load and process the metadata
"RTN","RORUPR1",183,0)
 S FILE="",RC=0
"RTN","RORUPR1",184,0)
 F  S FILE=$O(RORUPD("SR",FILE))  Q:FILE=""  D  Q:RC<0
"RTN","RORUPR1",185,0)
 . S IENS=","_FILE_",",PIF=$NA(@RORUPDPI@(1,FILE))
"RTN","RORUPR1",186,0)
 . ;--- Global root of the file
"RTN","RORUPR1",187,0)
 . S RORUPD("ROOT",FILE)=$$ROOT^DILFD(FILE,,1)
"RTN","RORUPR1",188,0)
 . ;--- Associate data elements with APIs
"RTN","RORUPR1",189,0)
 . S DATELMT=""
"RTN","RORUPR1",190,0)
 . F  S DATELMT=$O(@PIF@("F",DATELMT))  Q:DATELMT=""  D  Q:RC<0
"RTN","RORUPR1",191,0)
 . . ;--- Find and load defintion of the data element
"RTN","RORUPR1",192,0)
 . . K RORBUF,RORMSG
"RTN","RORUPR1",193,0)
 . . D FIND^DIC(799.22,IENS,DEFL,"X",DATELMT,,"C",,,"RORBUF","RORMSG")
"RTN","RORUPR1",194,0)
 . . I $G(DIERR)  D  Q
"RTN","RORUPR1",195,0)
 . . . S RC=$$DBS^RORERR("RORMSG",-9,,,799.22,IENS)
"RTN","RORUPR1",196,0)
 . . ;--- Check if search on this element is supported
"RTN","RORUPR1",197,0)
 . . S API=+$G(RORBUF("DILIST","ID",1,1))
"RTN","RORUPR1",198,0)
 . . I 'API  D  Q
"RTN","RORUPR1",199,0)
 . . . S RC=$$ERROR^RORERR(-64,,,,FILE,DATELMT)
"RTN","RORUPR1",200,0)
 . . ;--- Store the field number (if necessary)
"RTN","RORUPR1",201,0)
 . . I API=1  D  S RORUPD("SR",FILE,"F",API,DATELMT)=TMP
"RTN","RORUPR1",202,0)
 . . . S TMP=$G(RORBUF("DILIST","ID",1,6))
"RTN","RORUPR1",203,0)
 . . ;--- Associate the data element with the API
"RTN","RORUPR1",204,0)
 . . S VT=$G(RORBUF("DILIST","ID",1,4)),RC=0
"RTN","RORUPR1",205,0)
 . . F I="E","I"  I $D(@PIF@("F",DATELMT,I))  D  Q:RC<0
"RTN","RORUPR1",206,0)
 . . . ;--- Check if type of the requested value is supported
"RTN","RORUPR1",207,0)
 . . . I VT'[I  D  Q
"RTN","RORUPR1",208,0)
 . . . . S TMP=$$EXTERNAL^DILFD(799.22,4,,I,"RORMSG")
"RTN","RORUPR1",209,0)
 . . . . S RC=$$ERROR^RORERR(-65,,,,FILE,DATELMT,TMP)
"RTN","RORUPR1",210,0)
 . . . ;--- Add the API-Element pair to the list
"RTN","RORUPR1",211,0)
 . . . S TMP=$G(RORBUF("DILIST","ID",1,$$VTFN(I)))
"RTN","RORUPR1",212,0)
 . . . S RORUPD("SR",FILE,"F",API,DATELMT,I)=TMP
"RTN","RORUPR1",213,0)
 . Q:RC<0
"RTN","RORUPR1",214,0)
 . ;--- Add required elements (if any) to the list
"RTN","RORUPR1",215,0)
 . K RORBUF,RORMSG
"RTN","RORUPR1",216,0)
 . D FIND^DIC(799.22,IENS,DEFL,"X",1,,"AR",,,"RORBUF","RORMSG")
"RTN","RORUPR1",217,0)
 . I $G(DIERR)  D  Q
"RTN","RORUPR1",218,0)
 . . S RC=$$DBS^RORERR("RORMSG",-9,,,799.22,IENS)
"RTN","RORUPR1",219,0)
 . S IS=""
"RTN","RORUPR1",220,0)
 . F  S IS=$O(RORBUF("DILIST","ID",IS))  Q:IS=""  D
"RTN","RORUPR1",221,0)
 . . S DATELMT=+$G(RORBUF("DILIST","ID",IS,.02))  Q:'DATELMT
"RTN","RORUPR1",222,0)
 . . S API=+$G(RORBUF("DILIST","ID",IS,1))        Q:'API
"RTN","RORUPR1",223,0)
 . . S VT=$G(RORBUF("DILIST","ID",IS,4))
"RTN","RORUPR1",224,0)
 . . F I="E","I"  D:VT[I
"RTN","RORUPR1",225,0)
 . . . S TMP=$G(RORBUF("DILIST","ID",IS,$$VTFN(I)))
"RTN","RORUPR1",226,0)
 . . . S RORUPD("SR",FILE,"F",API,DATELMT,I)=TMP
"RTN","RORUPR1",227,0)
 . . ;--- Store the field number (if necessary)
"RTN","RORUPR1",228,0)
 . . I API=1  D  S RORUPD("SR",FILE,"F",API,DATELMT)=TMP
"RTN","RORUPR1",229,0)
 . . . S TMP=$G(RORBUF("DILIST","ID",IS,6))
"RTN","RORUPR1",230,0)
 . ;--- Compile a list of fields (separated by ';') for the GETS^DIQ
"RTN","RORUPR1",231,0)
 . Q:$D(RORUPD("SR",FILE,"F",1))<10
"RTN","RORUPR1",232,0)
 . S (DATELMT,RORBUF)=""
"RTN","RORUPR1",233,0)
 . F  S DATELMT=$O(RORUPD("SR",FILE,"F",1,DATELMT))  Q:DATELMT=""  D
"RTN","RORUPR1",234,0)
 . . S TMP=+$G(RORUPD("SR",FILE,"F",1,DATELMT))
"RTN","RORUPR1",235,0)
 . . S:TMP>0 RORBUF=RORBUF_";"_TMP
"RTN","RORUPR1",236,0)
 . S RORUPD("SR",FILE,"F",1)=$S(RORBUF'="":$P(RORBUF,";",2,999),1:"")
"RTN","RORUPR1",237,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORUPR1",238,0)
 ;
"RTN","RORUPR1",239,0)
 ;***** RETURNS FIELD NUMBER OF ADDITIONAL DATA
"RTN","RORUPR1",240,0)
VTFN(VT) ;
"RTN","RORUPR1",241,0)
 Q $S(VT="E":4.1,1:4.2)
"VER")
8.0^22.0
"BLD",7789,6)
^13
**END**
**END**
