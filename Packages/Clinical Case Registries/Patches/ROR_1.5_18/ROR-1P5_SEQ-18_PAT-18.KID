Released ROR*1.5*18 SEQ #18
Extracted from mail message
**KIDS**:ROR*1.5*18^

**INSTALL NAME**
ROR*1.5*18
"BLD",8728,0)
ROR*1.5*18^CLINICAL CASE REGISTRIES^0^3120802^y
"BLD",8728,4,0)
^9.64PA^799.34^4
"BLD",8728,4,798.1,0)
798.1
"BLD",8728,4,798.1,222)
y^y^f^^n^^y^m^n
"BLD",8728,4,798.1,224)
I ($P(^(0),U)'="VA HEPC"),($P(^(0),U)'="VA HIV")
"BLD",8728,4,798.2,0)
798.2
"BLD",8728,4,798.2,222)
n^y^f^^n^^y^r^n
"BLD",8728,4,798.2,224)
I ($P(^(0),U)'["CONVERSION"),($P(^(0),U)'["VISIT"),($P(^(0),U)'["HIST"),($P(^(0),U)'["LAB")
"BLD",8728,4,798.5,0)
798.5
"BLD",8728,4,798.5,222)
y^y^f^^n^ZROR18^y^m^n
"BLD",8728,4,799.34,0)
799.34
"BLD",8728,4,799.34,222)
n^y^f^^n^^y^o^n
"BLD",8728,4,799.34,224)
I $P(^(0),U,4)=22
"BLD",8728,4,"B",798.1,798.1)
 
"BLD",8728,4,"B",798.2,798.2)
 
"BLD",8728,4,"B",798.5,798.5)
 
"BLD",8728,4,"B",799.34,799.34)
 
"BLD",8728,6.3)
25
"BLD",8728,"ABPKG")
n
"BLD",8728,"INID")
^n
"BLD",8728,"INIT")
RORP018
"BLD",8728,"KRN",0)
^9.67PA^779.2^20
"BLD",8728,"KRN",.4,0)
.4
"BLD",8728,"KRN",.401,0)
.401
"BLD",8728,"KRN",.402,0)
.402
"BLD",8728,"KRN",.403,0)
.403
"BLD",8728,"KRN",.5,0)
.5
"BLD",8728,"KRN",.84,0)
.84
"BLD",8728,"KRN",.84,"NM",0)
^9.68A^^0
"BLD",8728,"KRN",3.6,0)
3.6
"BLD",8728,"KRN",3.8,0)
3.8
"BLD",8728,"KRN",9.2,0)
9.2
"BLD",8728,"KRN",9.8,0)
9.8
"BLD",8728,"KRN",9.8,"NM",0)
^9.68A^17^13
"BLD",8728,"KRN",9.8,"NM",1,0)
RORUPDUT^^0^B53163080
"BLD",8728,"KRN",9.8,"NM",2,0)
RORRP013^^0^B33977201
"BLD",8728,"KRN",9.8,"NM",6,0)
RORUPD50^^0^B24129908
"BLD",8728,"KRN",9.8,"NM",7,0)
RORUPD09^^0^B11144111
"BLD",8728,"KRN",9.8,"NM",8,0)
ROREXT^^0^B26631704
"BLD",8728,"KRN",9.8,"NM",9,0)
RORSET02^^0^B21485315
"BLD",8728,"KRN",9.8,"NM",11,0)
ROR10^^0^B33146780
"BLD",8728,"KRN",9.8,"NM",12,0)
RORRP030^^0^B4623293
"BLD",8728,"KRN",9.8,"NM",13,0)
RORUTL11^^0^B3652168
"BLD",8728,"KRN",9.8,"NM",14,0)
RORUTL01^^0^B43789340
"BLD",8728,"KRN",9.8,"NM",15,0)
RORERR20^^0^B71322464
"BLD",8728,"KRN",9.8,"NM",16,0)
RORX022A^^0^B129621152
"BLD",8728,"KRN",9.8,"NM",17,0)
RORUTL05^^0^B62674116
"BLD",8728,"KRN",9.8,"NM","B","ROR10",11)
 
"BLD",8728,"KRN",9.8,"NM","B","RORERR20",15)
 
"BLD",8728,"KRN",9.8,"NM","B","ROREXT",8)
 
"BLD",8728,"KRN",9.8,"NM","B","RORRP013",2)
 
"BLD",8728,"KRN",9.8,"NM","B","RORRP030",12)
 
"BLD",8728,"KRN",9.8,"NM","B","RORSET02",9)
 
"BLD",8728,"KRN",9.8,"NM","B","RORUPD09",7)
 
"BLD",8728,"KRN",9.8,"NM","B","RORUPD50",6)
 
"BLD",8728,"KRN",9.8,"NM","B","RORUPDUT",1)
 
"BLD",8728,"KRN",9.8,"NM","B","RORUTL01",14)
 
"BLD",8728,"KRN",9.8,"NM","B","RORUTL05",17)
 
"BLD",8728,"KRN",9.8,"NM","B","RORUTL11",13)
 
"BLD",8728,"KRN",9.8,"NM","B","RORX022A",16)
 
"BLD",8728,"KRN",19,0)
19
"BLD",8728,"KRN",19,"NM",0)
^9.68A^2^2
"BLD",8728,"KRN",19,"NM",1,0)
ROR TASK^^0
"BLD",8728,"KRN",19,"NM",2,0)
ROR INITIALIZE^^0
"BLD",8728,"KRN",19,"NM","B","ROR INITIALIZE",2)
 
"BLD",8728,"KRN",19,"NM","B","ROR TASK",1)
 
"BLD",8728,"KRN",19.1,0)
19.1
"BLD",8728,"KRN",19.1,"NM",0)
^9.68A^2^2
"BLD",8728,"KRN",19.1,"NM",1,0)
ROR VA GENERIC ADMIN^^0
"BLD",8728,"KRN",19.1,"NM",2,0)
ROR VA GENERIC USER^^0
"BLD",8728,"KRN",19.1,"NM","B","ROR VA GENERIC ADMIN",1)
 
"BLD",8728,"KRN",19.1,"NM","B","ROR VA GENERIC USER",2)
 
"BLD",8728,"KRN",101,0)
101
"BLD",8728,"KRN",409.61,0)
409.61
"BLD",8728,"KRN",771,0)
771
"BLD",8728,"KRN",779.2,0)
779.2
"BLD",8728,"KRN",870,0)
870
"BLD",8728,"KRN",8989.51,0)
8989.51
"BLD",8728,"KRN",8989.52,0)
8989.52
"BLD",8728,"KRN",8994,0)
8994
"BLD",8728,"KRN","B",.4,.4)
 
"BLD",8728,"KRN","B",.401,.401)
 
"BLD",8728,"KRN","B",.402,.402)
 
"BLD",8728,"KRN","B",.403,.403)
 
"BLD",8728,"KRN","B",.5,.5)
 
"BLD",8728,"KRN","B",.84,.84)
 
"BLD",8728,"KRN","B",3.6,3.6)
 
"BLD",8728,"KRN","B",3.8,3.8)
 
"BLD",8728,"KRN","B",9.2,9.2)
 
"BLD",8728,"KRN","B",9.8,9.8)
 
"BLD",8728,"KRN","B",19,19)
 
"BLD",8728,"KRN","B",19.1,19.1)
 
"BLD",8728,"KRN","B",101,101)
 
"BLD",8728,"KRN","B",409.61,409.61)
 
"BLD",8728,"KRN","B",771,771)
 
"BLD",8728,"KRN","B",779.2,779.2)
 
"BLD",8728,"KRN","B",870,870)
 
"BLD",8728,"KRN","B",8989.51,8989.51)
 
"BLD",8728,"KRN","B",8989.52,8989.52)
 
"BLD",8728,"KRN","B",8994,8994)
 
"BLD",8728,"QUES",0)
^9.62^^
"BLD",8728,"REQB",0)
^9.611^1^1
"BLD",8728,"REQB",1,0)
ROR*1.5*17^2
"BLD",8728,"REQB","B","ROR*1.5*17",1)
 
"DATA",798.1,3,0)
VA DIABETES^2850101^^Diabetes Registry^^1^^^^0^0^^^1
"DATA",798.1,3,1,0)
^798.13^3^3
"DATA",798.1,3,1,1,0)
VA DIABETES PROBLEM
"DATA",798.1,3,1,2,0)
VA DIABETES PTF
"DATA",798.1,3,1,3,0)
VA DIABETES VPOV
"DATA",798.1,3,4)
 
"DATA",798.1,3,5)
 
"DATA",798.1,3,6)
1
"DATA",798.1,3,7)
 
"DATA",798.1,3,9)
^^2^CCRAutoNotification@med.va.gov
"DATA",798.1,3,11)
7
"DATA",798.1,3,18,0)
^798.118^2^2
"DATA",798.1,3,18,1,0)
ROR VA GENERIC ADMIN
"DATA",798.1,3,18,2,0)
ROR VA GENERIC USER
"DATA",798.1,3,19)
^^
"DATA",798.1,3,21)
^^^
"DATA",798.1,3,27)
1,2,3,4,5,6,7,9,11,12,13,15,16,18,19,20
"DATA",798.1,3,30,0)
^798.12P^^0
"DATA",798.1,4,0)
VA MENTAL HEALTH^2850101^^Mental Health Registry^^1^^^^^0^^^1
"DATA",798.1,4,1,0)
^798.13^3^3
"DATA",798.1,4,1,1,0)
VA MENTAL HEALTH PROBLEM
"DATA",798.1,4,1,2,0)
VA MENTAL HEALTH VPOV
"DATA",798.1,4,1,3,0)
VA MENTAL HEALTH PTF
"DATA",798.1,4,4)
 
"DATA",798.1,4,5)
 
"DATA",798.1,4,6)
1
"DATA",798.1,4,7)
 
"DATA",798.1,4,9)
^^2^CCRAutoNotification@med.va.gov
"DATA",798.1,4,11)
7
"DATA",798.1,4,18,0)
^798.118^2^2
"DATA",798.1,4,18,1,0)
ROR VA GENERIC ADMIN
"DATA",798.1,4,18,2,0)
ROR VA GENERIC USER
"DATA",798.1,4,19)
^^
"DATA",798.1,4,21)
^^^
"DATA",798.1,4,27)
1,2,3,4,5,6,7,9,11,12,13,15,16,18,19,20
"DATA",798.1,5,0)
VA CHF^2850101^^Congestive Heart Failure (CHF) Registry^^1^^^^^0^^^1
"DATA",798.1,5,1,0)
^798.13^3^3
"DATA",798.1,5,1,1,0)
VA CHF PROBLEM
"DATA",798.1,5,1,2,0)
VA CHF VPOV
"DATA",798.1,5,1,3,0)
VA CHF PTF
"DATA",798.1,5,4)
 
"DATA",798.1,5,5)
 
"DATA",798.1,5,6)
1
"DATA",798.1,5,7)
 
"DATA",798.1,5,9)
^^2^CCRAutoNotification@med.va.gov
"DATA",798.1,5,11)
7
"DATA",798.1,5,18,0)
^798.118^2^2
"DATA",798.1,5,18,1,0)
ROR VA GENERIC ADMIN
"DATA",798.1,5,18,2,0)
ROR VA GENERIC USER
"DATA",798.1,5,19)
^^
"DATA",798.1,5,21)
^^^
"DATA",798.1,5,27)
1,2,3,4,5,6,7,9,11,12,13,15,16,18,19,20
"DATA",798.1,5,28,0)
^798.128PI^^0
"DATA",798.1,5,30,0)
^798.12P^^0
"DATA",798.1,6,0)
VA IHD^2850101^^Ischemic Heart Disease (IHD) Registry^^1^^^^^0^^^1
"DATA",798.1,6,1,0)
^798.13^3^3
"DATA",798.1,6,1,1,0)
VA IHD PROBLEM
"DATA",798.1,6,1,2,0)
VA IHD VPOV
"DATA",798.1,6,1,3,0)
VA IHD PTF
"DATA",798.1,6,4)
 
"DATA",798.1,6,5)
 
"DATA",798.1,6,6)
1
"DATA",798.1,6,7)
 
"DATA",798.1,6,9)
^^2^CCRAutoNotification@med.va.gov
"DATA",798.1,6,11)
7
"DATA",798.1,6,18,0)
^798.118^2^2
"DATA",798.1,6,18,1,0)
ROR VA GENERIC ADMIN
"DATA",798.1,6,18,2,0)
ROR VA GENERIC USER
"DATA",798.1,6,19)
^^
"DATA",798.1,6,21)
^^^
"DATA",798.1,6,27)
1,2,3,4,5,6,7,9,11,12,13,15,16,18,19,20
"DATA",798.1,7,0)
VA BREAST CA^2850101^^Breast Cancer Registry^^1^^^^^0^^^1
"DATA",798.1,7,1,0)
^798.13^3^3
"DATA",798.1,7,1,1,0)
VA BREAST CA PROBLEM
"DATA",798.1,7,1,2,0)
VA BREAST CA VPOV
"DATA",798.1,7,1,3,0)
VA BREAST CA PTF
"DATA",798.1,7,4)
 
"DATA",798.1,7,5)
 
"DATA",798.1,7,6)
1
"DATA",798.1,7,7)
 
"DATA",798.1,7,9)
^^2^CCRAutoNotification@med.va.gov
"DATA",798.1,7,11)
7
"DATA",798.1,7,18,0)
^798.118^2^2
"DATA",798.1,7,18,1,0)
ROR VA GENERIC ADMIN
"DATA",798.1,7,18,2,0)
ROR VA GENERIC USER
"DATA",798.1,7,19)
^^
"DATA",798.1,7,21)
^^^
"DATA",798.1,7,27)
1,2,3,4,5,6,7,9,11,12,13,15,16,18,19,20
"DATA",798.1,7,30,0)
^798.12P^^0
"DATA",798.1,8,0)
VA HTN^2850101^^Hypertension Registry^^1^^^^^0^^^1
"DATA",798.1,8,1,0)
^798.13^3^3
"DATA",798.1,8,1,1,0)
VA HTN PROBLEM
"DATA",798.1,8,1,2,0)
VA HTN VPOV
"DATA",798.1,8,1,3,0)
VA HTN PTF
"DATA",798.1,8,4)
 
"DATA",798.1,8,5)
 
"DATA",798.1,8,6)
1
"DATA",798.1,8,7)
 
"DATA",798.1,8,9)
^^2^CCRAutoNotification@med.va.gov
"DATA",798.1,8,10,0)
^798.114P^^0
"DATA",798.1,8,11)
7
"DATA",798.1,8,18,0)
^798.118^2^2
"DATA",798.1,8,18,1,0)
ROR VA GENERIC ADMIN
"DATA",798.1,8,18,2,0)
ROR VA GENERIC USER
"DATA",798.1,8,19)
^^
"DATA",798.1,8,21)
^^^
"DATA",798.1,8,27)
1,2,3,4,5,6,7,9,11,12,13,15,16,18,19,20
"DATA",798.1,9,0)
VA CVD^2850101^^Cerebrovascular Disease (CVD) Registry^^1^^^^^0^^^1
"DATA",798.1,9,1,0)
^798.13^3^3
"DATA",798.1,9,1,1,0)
VA CVD PROBLEM
"DATA",798.1,9,1,2,0)
VA CVD PTF
"DATA",798.1,9,1,3,0)
VA CVD VPOV
"DATA",798.1,9,4)
 
"DATA",798.1,9,5)
 
"DATA",798.1,9,6)
1
"DATA",798.1,9,7)
 
"DATA",798.1,9,9)
^^2^CCRAutoNotification@med.va.gov
"DATA",798.1,9,11)
7
"DATA",798.1,9,18,0)
^798.118^2^2
"DATA",798.1,9,18,1,0)
ROR VA GENERIC ADMIN
"DATA",798.1,9,18,2,0)
ROR VA GENERIC USER
"DATA",798.1,9,19)
^^
"DATA",798.1,9,21)
^^^
"DATA",798.1,9,27)
1,2,3,4,5,6,7,9,11,12,13,15,16,18,19,20
"DATA",798.1,9,30,0)
^798.12P^^0
"DATA",798.1,10,0)
VA OSTEOARTHRITIS^2850101^^Osteoarthritis Registry^^1^^^^^0^^^1
"DATA",798.1,10,1,0)
^798.13^3^3
"DATA",798.1,10,1,1,0)
VA OSTEOARTHRITIS PROBLEM
"DATA",798.1,10,1,2,0)
VA OSTEOARTHRITIS VPOV
"DATA",798.1,10,1,3,0)
VA OSTEOARTHRITIS PTF
"DATA",798.1,10,4)
 
"DATA",798.1,10,5)
 
"DATA",798.1,10,6)
1
"DATA",798.1,10,7)
 
"DATA",798.1,10,9)
^^2^CCRAutoNotification@med.va.gov
"DATA",798.1,10,11)
7
"DATA",798.1,10,18,0)
^798.118^2^2
"DATA",798.1,10,18,1,0)
ROR VA GENERIC ADMIN
"DATA",798.1,10,18,2,0)
ROR VA GENERIC USER
"DATA",798.1,10,19)
^^
"DATA",798.1,10,21)
^^^
"DATA",798.1,10,27)
1,2,3,4,5,6,7,9,11,12,13,15,16,18,19,20
"DATA",798.1,11,0)
VA COPD^2850101^^Chronic Obstructive Pulmonary Disease Registry^^1^^^^^0^^^1
"DATA",798.1,11,1,0)
^798.13^3^3
"DATA",798.1,11,1,1,0)
VA COPD PROBLEM
"DATA",798.1,11,1,2,0)
VA COPD VPOV
"DATA",798.1,11,1,3,0)
VA COPD PTF
"DATA",798.1,11,4)
 
"DATA",798.1,11,5)
 
"DATA",798.1,11,6)
1
"DATA",798.1,11,7)
 
"DATA",798.1,11,9)
^^2^CCRAutoNotification@med.va.gov
"DATA",798.1,11,11)
7
"DATA",798.1,11,18,0)
^798.118^2^2
"DATA",798.1,11,18,1,0)
ROR VA GENERIC ADMIN
"DATA",798.1,11,18,2,0)
ROR VA GENERIC USER
"DATA",798.1,11,19)
^^
"DATA",798.1,11,21)
^^^
"DATA",798.1,11,27)
1,2,3,4,5,6,7,9,11,12,13,15,16,18,19,20
"DATA",798.1,11,30,0)
^798.12P^^0
"DATA",798.1,12,0)
VA DYSLIPIDEMIA^2850101^^Dyslipidemia Registry^^1^^^^^0^^^1
"DATA",798.1,12,1,0)
^798.13^3^3
"DATA",798.1,12,1,1,0)
VA DYSLIPIDEMIA PROBLEM
"DATA",798.1,12,1,2,0)
VA DYSLIPIDEMIA VPOV
"DATA",798.1,12,1,3,0)
VA DYSLIPIDEMIA PTF
"DATA",798.1,12,4)
 
"DATA",798.1,12,5)
 
"DATA",798.1,12,6)
1
"DATA",798.1,12,7)
 
"DATA",798.1,12,9)
^^2^CCRAutoNotification@med.va.gov
"DATA",798.1,12,11)
7
"DATA",798.1,12,18,0)
^798.118^2^2
"DATA",798.1,12,18,1,0)
ROR VA GENERIC ADMIN
"DATA",798.1,12,18,2,0)
ROR VA GENERIC USER
"DATA",798.1,12,19)
^^
"DATA",798.1,12,21)
^^^
"DATA",798.1,12,27)
1,2,3,4,5,6,7,9,11,12,13,15,16,18,19,20
"DATA",798.1,13,0)
VA CRD^2850101^^Chronic Renal Disease Registry^^1^^^^^0^^^1
"DATA",798.1,13,1,0)
^798.13^3^3
"DATA",798.1,13,1,1,0)
VA CRD PROBLEM
"DATA",798.1,13,1,2,0)
VA CRD VPOV
"DATA",798.1,13,1,3,0)
VA CRD PTF
"DATA",798.1,13,4)
 
"DATA",798.1,13,5)
 
"DATA",798.1,13,6)
1
"DATA",798.1,13,7)
 
"DATA",798.1,13,9)
^^2^CCRAutoNotification@med.va.gov
"DATA",798.1,13,11)
7
"DATA",798.1,13,18,0)
^798.118^2^2
"DATA",798.1,13,18,1,0)
ROR VA GENERIC ADMIN
"DATA",798.1,13,18,2,0)
ROR VA GENERIC USER
"DATA",798.1,13,19)
^^
"DATA",798.1,13,21)
^^^
"DATA",798.1,13,27)
1,2,3,4,5,6,7,9,11,12,13,15,16,18,19,20
"DATA",798.1,13,30,0)
^798.12P^^0
"DATA",798.1,14,0)
VA ALZHEIMERS^2850101^^Alzheimer's Disease Registry^^1^^^^^0^^^1
"DATA",798.1,14,1,0)
^798.13^3^3
"DATA",798.1,14,1,1,0)
VA ALZHEIMERS PROBLEM
"DATA",798.1,14,1,2,0)
VA ALZHEIMERS VPOV
"DATA",798.1,14,1,3,0)
VA ALZHEIMERS PTF
"DATA",798.1,14,4)
 
"DATA",798.1,14,5)
 
"DATA",798.1,14,6)
1
"DATA",798.1,14,7)
 
"DATA",798.1,14,9)
^^2^CCRAutoNotification@med.va.gov
"DATA",798.1,14,11)
7
"DATA",798.1,14,18,0)
^798.118^2^2
"DATA",798.1,14,18,1,0)
ROR VA GENERIC ADMIN
"DATA",798.1,14,18,2,0)
ROR VA GENERIC USER
"DATA",798.1,14,19)
^^
"DATA",798.1,14,21)
^^^
"DATA",798.1,14,27)
1,2,3,4,5,6,7,9,11,12,13,15,16,18,19,20
"DATA",798.1,14,30,0)
^798.12P^^0
"DATA",798.1,15,0)
VA RHEUM^2850101^^Rheumatoid Arthritis Registry^^1^^^^0^0^^^1
"DATA",798.1,15,1,0)
^798.13^3^3
"DATA",798.1,15,1,1,0)
VA RHEUM PROBLEM
"DATA",798.1,15,1,2,0)
VA RHEUM VPOV
"DATA",798.1,15,1,3,0)
VA RHEUM PTF
"DATA",798.1,15,4)
 
"DATA",798.1,15,5)
 
"DATA",798.1,15,6)
1
"DATA",798.1,15,7)
 
"DATA",798.1,15,9)
^^2^CCRAutoNotification@med.va.gov
"DATA",798.1,15,11)
7
"DATA",798.1,15,18,0)
^798.118^2^2
"DATA",798.1,15,18,1,0)
ROR VA GENERIC ADMIN
"DATA",798.1,15,18,2,0)
ROR VA GENERIC USER
"DATA",798.1,15,19)
^^
"DATA",798.1,15,21)
^^^
"DATA",798.1,15,27)
1,2,3,4,5,6,7,9,11,12,13,15,16,18,19,20
"DATA",798.1,15,30,0)
^798.12P^^0
"DATA",798.1,16,0)
VA AMPUTATION^2850101^^Amputation Registry^^1^^^^^0^^^1
"DATA",798.1,16,1,0)
^798.13^3^3
"DATA",798.1,16,1,1,0)
VA AMPUTATION PROBLEM
"DATA",798.1,16,1,2,0)
VA AMPUTATION VPOV
"DATA",798.1,16,1,3,0)
VA AMPUTATION PTF
"DATA",798.1,16,4)
 
"DATA",798.1,16,5)
 
"DATA",798.1,16,6)
1
"DATA",798.1,16,7)
 
"DATA",798.1,16,9)
^^2^CCRAutoNotification@med.va.gov
"DATA",798.1,16,11)
7
"DATA",798.1,16,18,0)
^798.118^2^2
"DATA",798.1,16,18,1,0)
ROR VA GENERIC ADMIN
"DATA",798.1,16,18,2,0)
ROR VA GENERIC USER
"DATA",798.1,16,19)
^^
"DATA",798.1,16,21)
^^^
"DATA",798.1,16,27)
1,2,3,4,5,6,7,9,11,12,13,15,16,18,19,20
"DATA",798.1,16,28,0)
^798.128PI^^0
"DATA",798.1,16,30,0)
^798.12P^^0
"DATA",798.1,17,0)
VA BLIND^2850101^^Low Vision / Blind Registry^^1^^^^^0^^^1
"DATA",798.1,17,1,0)
^798.13^3^3
"DATA",798.1,17,1,1,0)
VA BLIND PROBLEM
"DATA",798.1,17,1,2,0)
VA BLIND PTF
"DATA",798.1,17,1,3,0)
VA BLIND VPOV
"DATA",798.1,17,4)
 
"DATA",798.1,17,5)
 
"DATA",798.1,17,6)
1
"DATA",798.1,17,7)
 
"DATA",798.1,17,9)
^^2^CCRAutoNotification@med.va.gov
"DATA",798.1,17,11)
7
"DATA",798.1,17,18,0)
^798.118^2^2
"DATA",798.1,17,18,1,0)
ROR VA GENERIC ADMIN
"DATA",798.1,17,18,2,0)
ROR VA GENERIC USER
"DATA",798.1,17,19)
^^
"DATA",798.1,17,21)
^^^
"DATA",798.1,17,27)
1,2,3,4,5,6,7,9,11,12,13,15,16,18,19,20
"DATA",798.1,18,0)
VA MULTIPLE SCLEROSIS^2850101^^Multiple Sclerosis Registry^^1^^^^^0^^^1
"DATA",798.1,18,1,0)
^798.13^3^3
"DATA",798.1,18,1,1,0)
VA MULTIPLE SCLEROSIS VPOV
"DATA",798.1,18,1,2,0)
VA MULTIPLE SCLEROSIS PTF
"DATA",798.1,18,1,3,0)
VA MULTIPLE SCLEROSIS PROBLEM
"DATA",798.1,18,4)
 
"DATA",798.1,18,5)
 
"DATA",798.1,18,6)
1
"DATA",798.1,18,7)
 
"DATA",798.1,18,9)
^^2^CCRAutoNotification@med.va.gov
"DATA",798.1,18,10,0)
^798.114P^^0
"DATA",798.1,18,11)
7
"DATA",798.1,18,18,0)
^798.118^2^2
"DATA",798.1,18,18,1,0)
ROR VA GENERIC ADMIN
"DATA",798.1,18,18,2,0)
ROR VA GENERIC USER
"DATA",798.1,18,19)
^^
"DATA",798.1,18,21)
^^^
"DATA",798.1,18,22,0)
^798.122^^0
"DATA",798.1,18,27)
1,2,3,4,5,6,7,9,11,12,13,15,16,18,19,20
"DATA",798.1,18,28,0)
^798.128PI^^0
"DATA",798.1,18,30,0)
^798.12P^^0
"DATA",798.2,4,0)
VA HEPC VPOV^9000010.07^ICD-9 code in outpatient file^1
"DATA",798.2,4,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,4,3,0)
^798.25^1^1^3070801^^^^
"DATA",798.2,4,3,1,0)
 
"DATA",798.2,6,0)
VA HEPC PTF^45^ICD-9 code in inpatient file^1
"DATA",798.2,6,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.2,6,4,0)
^798.26^^0
"DATA",798.2,7,0)
VA HEPC PROBLEM^9000011^ICD-9 code in problem list^1
"DATA",798.2,7,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,14,0)
VA HIV PTF^45^ICD-9 code in inpatient file^1
"DATA",798.2,14,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.2,14,4,0)
^798.26^^0
"DATA",798.2,15,0)
VA HIV PROBLEM^9000011^ICD-9 code in problem list^1
"DATA",798.2,15,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,16,0)
VA HIV VPOV^9000010.07^ICD-9 code in outpatient file^1
"DATA",798.2,16,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,16,3,0)
^798.25^1^1^3050419^^^^
"DATA",798.2,16,3,1,0)
 
"DATA",798.2,20,0)
VA DIABETES PROBLEM^9000011^ICD-9 code in problem list^1
"DATA",798.2,20,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,21,0)
VA DIABETES PTF^45^ICD-9 code in inpatient file^1
"DATA",798.2,21,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.2,22,0)
VA DIABETES VPOV^9000010.07^ICD-9 code in outpatient file^1
"DATA",798.2,22,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,22,3,0)
^798.25^1^1^3070801^^^^
"DATA",798.2,22,3,1,0)
 
"DATA",798.2,23,0)
VA CHF PROBLEM^9000011^ICD-9 code in problem list^1
"DATA",798.2,23,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,24,0)
VA CHF PTF^45^ICD-9 code in inpatient file^1
"DATA",798.2,24,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.2,25,0)
VA CHF VPOV^9000010.07^ICD-9 code in outpatient file^1
"DATA",798.2,25,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,25,3,0)
^798.25^1^1^3070801^^^^
"DATA",798.2,25,3,1,0)
 
"DATA",798.2,26,0)
VA AMPUTATION PROBLEM^9000011^ICD-9 code in problem list^1
"DATA",798.2,26,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,27,0)
VA AMPUTATION VPOV^9000010.07^ICD-9 code in outpatient file^1
"DATA",798.2,27,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,27,3,0)
^798.25^1^1^3070801^^^^
"DATA",798.2,27,3,1,0)
 
"DATA",798.2,28,0)
VA AMPUTATION PTF^45^ICD-9 code in inpatient file^1
"DATA",798.2,28,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.2,29,0)
VA ALZHEIMERS PROBLEM^9000011^ICD-9 code in problem list^1
"DATA",798.2,29,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,30,0)
VA ALZHEIMERS VPOV^9000010.07^ICD-9 code in outpatient file^1
"DATA",798.2,30,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,30,3,0)
^798.25^1^1^3070801^^^^
"DATA",798.2,30,3,1,0)
 
"DATA",798.2,31,0)
VA ALZHEIMERS PTF^45^ICD-9 code in inpatient file^1
"DATA",798.2,31,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.2,32,0)
VA MENTAL HEALTH PROBLEM^9000011^ICD-9 code in problem list^1
"DATA",798.2,32,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,33,0)
VA MENTAL HEALTH VPOV^9000010.07^ICD-9 code in outpatient file^1
"DATA",798.2,33,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,33,3,0)
^798.25^1^1^3070801^^^^
"DATA",798.2,33,3,1,0)
 
"DATA",798.2,34,0)
VA MENTAL HEALTH PTF^45^ICD-9 code in inpatient file^1
"DATA",798.2,34,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.2,35,0)
VA BLIND PROBLEM^9000011^ICD-9 code in problem list^1
"DATA",798.2,35,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,36,0)
VA BLIND VPOV^9000010.07^ICD-9 code in outpatient file^1
"DATA",798.2,36,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,36,3,0)
^798.25^1^1^3070801^^^^
"DATA",798.2,36,3,1,0)
 
"DATA",798.2,37,0)
VA BLIND PTF^45^ICD-9 code in inpatient file^1
"DATA",798.2,37,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.2,38,0)
VA BREAST CA PROBLEM^9000011^ICD-9 code in problem list^1
"DATA",798.2,38,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,39,0)
VA BREAST CA VPOV^9000010.07^ICD-9 code in outpatient file^1
"DATA",798.2,39,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,39,3,0)
^798.25^1^1^3070801^^^^
"DATA",798.2,39,3,1,0)
 
"DATA",798.2,40,0)
VA BREAST CA PTF^45^ICD-9 code in inpatient file^1
"DATA",798.2,40,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.2,41,0)
VA COPD PROBLEM^9000011^ICD-9 code in problem list^1
"DATA",798.2,41,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,42,0)
VA COPD VPOV^9000010.07^ICD-9 code in outpatient file^1
"DATA",798.2,42,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,42,3,0)
^798.25^1^1^3070801^^^^
"DATA",798.2,42,3,1,0)
 
"DATA",798.2,43,0)
VA COPD PTF^45^ICD-9 code in inpatient file^1
"DATA",798.2,43,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.2,44,0)
VA CRD PROBLEM^9000011^ICD-9 code in problem list^1
"DATA",798.2,44,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,45,0)
VA CRD VPOV^9000010.07^ICD-9 code in outpatient file^1
"DATA",798.2,45,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,45,3,0)
^798.25^1^1^3070801^^^^
"DATA",798.2,45,3,1,0)
 
"DATA",798.2,46,0)
VA CRD PTF^45^ICD-9 code in inpatient file^1
"DATA",798.2,46,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.2,47,0)
VA CVD PROBLEM^9000011^ICD-9 code in problem list^1
"DATA",798.2,47,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,48,0)
VA CVD VPOV^9000010.07^ICD-9 code in outpatient file^1
"DATA",798.2,48,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,48,3,0)
^798.25^1^1^3070801^^^^
"DATA",798.2,48,3,1,0)
 
"DATA",798.2,49,0)
VA CVD PTF^45^ICD-9 code in inpatient file^1
"DATA",798.2,49,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.2,50,0)
VA DYSLIPIDEMIA PROBLEM^9000011^ICD-9 code in problem list^1
"DATA",798.2,50,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,51,0)
VA DYSLIPIDEMIA VPOV^9000010.07^ICD-9 code in outpatient file^1
"DATA",798.2,51,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,51,3,0)
^798.25^1^1^3070801^^^^
"DATA",798.2,51,3,1,0)
 
"DATA",798.2,52,0)
VA DYSLIPIDEMIA PTF^45^ICD-9 code in inpatient file^1
"DATA",798.2,52,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.2,53,0)
VA HTN PROBLEM^9000011^ICD-9 code in problem list^1
"DATA",798.2,53,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,54,0)
VA HTN VPOV^9000010.07^ICD-9 code in outpatient file^1
"DATA",798.2,54,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,54,3,0)
^798.25^1^1^3070801^^^^
"DATA",798.2,54,3,1,0)
 
"DATA",798.2,55,0)
VA HTN PTF^45^ICD-9 code in inpatient file^1
"DATA",798.2,55,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.2,56,0)
VA IHD PROBLEM^9000011^ICD-9 code in problem list^1
"DATA",798.2,56,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,57,0)
VA IHD VPOV^9000010.07^ICD-9 code in outpatient file^1
"DATA",798.2,57,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,57,3,0)
^798.25^1^1^3070801^^^^
"DATA",798.2,57,3,1,0)
 
"DATA",798.2,58,0)
VA IHD PTF^45^ICD-9 code in inpatient file^1
"DATA",798.2,58,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.2,59,0)
VA RHEUM PROBLEM^9000011^ICD-9 code in problem list^1
"DATA",798.2,59,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,60,0)
VA RHEUM VPOV^9000010.07^ICD-9 code in outpatient file^1
"DATA",798.2,60,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,60,3,0)
^798.25^1^1^3070801^^^^
"DATA",798.2,60,3,1,0)
 
"DATA",798.2,61,0)
VA RHEUM PTF^45^ICD-9 code in inpatient file^1
"DATA",798.2,61,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.2,62,0)
VA MULTIPLE SCLEROSIS PROBLEM^9000011^ICD-9 code in problem list^1
"DATA",798.2,62,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,63,0)
VA MULTIPLE SCLEROSIS VPOV^9000010.07^ICD-9 code in outpatient file^1
"DATA",798.2,63,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,63,3,0)
^798.25^1^1^3120426^^^^
"DATA",798.2,63,3,1,0)
 
"DATA",798.2,64,0)
VA MULTIPLE SCLEROSIS PTF^45^ICD-9 code in inpatient file^1
"DATA",798.2,64,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.2,65,0)
VA OSTEOARTHRITIS PROBLEM^9000011^ICD-9 code in problem list^1
"DATA",798.2,65,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,66,0)
VA OSTEOARTHRITIS VPOV^9000010.07^ICD-9 code in outpatient file^1
"DATA",798.2,66,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,66,3,0)
^798.25^1^1^3070801^^^^
"DATA",798.2,66,3,1,0)
 
"DATA",798.2,67,0)
VA OSTEOARTHRITIS PTF^45^ICD-9 code in inpatient file^1
"DATA",798.2,67,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.5,1,0)
1^^
"DATA",798.5,1,1,0)
^798.51P^7^7
"DATA",798.5,1,1,1,0)
13353
"DATA",798.5,1,1,2,0)
12560
"DATA",798.5,1,1,3,0)
12958
"DATA",798.5,1,1,4,0)
12564
"DATA",798.5,1,1,5,0)
12959
"DATA",798.5,1,1,6,0)
14022
"DATA",798.5,1,1,7,0)
14023
"DATA",798.5,2,0)
2^^
"DATA",798.5,2,1,0)
^798.51P^15^15
"DATA",798.5,2,1,1,0)
13077
"DATA",798.5,2,1,2,0)
12316
"DATA",798.5,2,1,3,0)
12317
"DATA",798.5,2,1,4,0)
12318
"DATA",798.5,2,1,5,0)
12319
"DATA",798.5,2,1,6,0)
12320
"DATA",798.5,2,1,7,0)
12322
"DATA",798.5,2,1,8,0)
12323
"DATA",798.5,2,1,9,0)
12324
"DATA",798.5,2,1,10,0)
12325
"DATA",798.5,2,1,11,0)
12326
"DATA",798.5,2,1,12,0)
12818
"DATA",798.5,2,1,13,0)
13063
"DATA",798.5,2,1,14,0)
12327
"DATA",798.5,2,1,15,0)
12953
"DATA",798.5,3,0)
3^^
"DATA",798.5,3,1,0)
^798.51P^68^68
"DATA",798.5,3,1,1,0)
14861
"DATA",798.5,3,1,2,0)
14658
"DATA",798.5,3,1,3,0)
14862
"DATA",798.5,3,1,4,0)
14659
"DATA",798.5,3,1,5,0)
14863
"DATA",798.5,3,1,6,0)
14660
"DATA",798.5,3,1,7,0)
14864
"DATA",798.5,3,1,8,0)
14661
"DATA",798.5,3,1,9,0)
14865
"DATA",798.5,3,1,10,0)
14662
"DATA",798.5,3,1,11,0)
14866
"DATA",798.5,3,1,12,0)
14663
"DATA",798.5,3,1,13,0)
14867
"DATA",798.5,3,1,14,0)
14664
"DATA",798.5,3,1,15,0)
14868
"DATA",798.5,3,1,16,0)
14665
"DATA",798.5,3,1,17,0)
14869
"DATA",798.5,3,1,18,0)
14666
"DATA",798.5,3,1,19,0)
14870
"DATA",798.5,3,1,20,0)
14667
"DATA",798.5,3,1,21,0)
8718
"DATA",798.5,3,1,22,0)
851
"DATA",798.5,3,1,23,0)
12827
"DATA",798.5,3,1,24,0)
12828
"DATA",798.5,3,1,25,0)
8719
"DATA",798.5,3,1,26,0)
852
"DATA",798.5,3,1,27,0)
12829
"DATA",798.5,3,1,28,0)
12830
"DATA",798.5,3,1,29,0)
8720
"DATA",798.5,3,1,30,0)
853
"DATA",798.5,3,1,31,0)
12831
"DATA",798.5,3,1,32,0)
12832
"DATA",798.5,3,1,33,0)
8721
"DATA",798.5,3,1,34,0)
854
"DATA",798.5,3,1,35,0)
12833
"DATA",798.5,3,1,36,0)
12834
"DATA",798.5,3,1,37,0)
8722
"DATA",798.5,3,1,38,0)
855
"DATA",798.5,3,1,39,0)
12835
"DATA",798.5,3,1,40,0)
12836
"DATA",798.5,3,1,41,0)
8723
"DATA",798.5,3,1,42,0)
856
"DATA",798.5,3,1,43,0)
12837
"DATA",798.5,3,1,44,0)
12838
"DATA",798.5,3,1,45,0)
8724
"DATA",798.5,3,1,46,0)
857
"DATA",798.5,3,1,47,0)
12839
"DATA",798.5,3,1,48,0)
12840
"DATA",798.5,3,1,49,0)
8725
"DATA",798.5,3,1,50,0)
858
"DATA",798.5,3,1,51,0)
12841
"DATA",798.5,3,1,52,0)
12842
"DATA",798.5,3,1,53,0)
8726
"DATA",798.5,3,1,54,0)
859
"DATA",798.5,3,1,55,0)
12843
"DATA",798.5,3,1,56,0)
12844
"DATA",798.5,3,1,57,0)
8727
"DATA",798.5,3,1,58,0)
860
"DATA",798.5,3,1,59,0)
12845
"DATA",798.5,3,1,60,0)
12846
"DATA",798.5,3,1,61,0)
1618
"DATA",798.5,3,1,62,0)
1693
"DATA",798.5,3,1,63,0)
1694
"DATA",798.5,3,1,64,0)
14108
"DATA",798.5,3,1,65,0)
14109
"DATA",798.5,3,1,66,0)
14110
"DATA",798.5,3,1,67,0)
14111
"DATA",798.5,3,1,68,0)
1864
"DATA",798.5,4,0)
4^^
"DATA",798.5,4,1,0)
^798.51P^124^124
"DATA",798.5,4,1,1,0)
8791
"DATA",798.5,4,1,2,0)
1172
"DATA",798.5,4,1,3,0)
1173
"DATA",798.5,4,1,4,0)
1174
"DATA",798.5,4,1,5,0)
1175
"DATA",798.5,4,1,6,0)
1176
"DATA",798.5,4,1,7,0)
1177
"DATA",798.5,4,1,8,0)
8792
"DATA",798.5,4,1,9,0)
1178
"DATA",798.5,4,1,10,0)
1179
"DATA",798.5,4,1,11,0)
1180
"DATA",798.5,4,1,12,0)
1181
"DATA",798.5,4,1,13,0)
1182
"DATA",798.5,4,1,14,0)
1183
"DATA",798.5,4,1,15,0)
1399
"DATA",798.5,4,1,16,0)
8779
"DATA",798.5,4,1,17,0)
1110
"DATA",798.5,4,1,18,0)
1111
"DATA",798.5,4,1,19,0)
1112
"DATA",798.5,4,1,20,0)
1113
"DATA",798.5,4,1,21,0)
1114
"DATA",798.5,4,1,22,0)
8780
"DATA",798.5,4,1,23,0)
1115
"DATA",798.5,4,1,24,0)
1116
"DATA",798.5,4,1,25,0)
1117
"DATA",798.5,4,1,26,0)
1118
"DATA",798.5,4,1,27,0)
1119
"DATA",798.5,4,1,28,0)
8781
"DATA",798.5,4,1,29,0)
1120
"DATA",798.5,4,1,30,0)
1121
"DATA",798.5,4,1,31,0)
1122
"DATA",798.5,4,1,32,0)
1123
"DATA",798.5,4,1,33,0)
1124
"DATA",798.5,4,1,34,0)
8782
"DATA",798.5,4,1,35,0)
1125
"DATA",798.5,4,1,36,0)
1126
"DATA",798.5,4,1,37,0)
1127
"DATA",798.5,4,1,38,0)
1128
"DATA",798.5,4,1,39,0)
1129
"DATA",798.5,4,1,40,0)
8783
"DATA",798.5,4,1,41,0)
1130
"DATA",798.5,4,1,42,0)
1131
"DATA",798.5,4,1,43,0)
1132
"DATA",798.5,4,1,44,0)
1133
"DATA",798.5,4,1,45,0)
1134
"DATA",798.5,4,1,46,0)
8784
"DATA",798.5,4,1,47,0)
1135
"DATA",798.5,4,1,48,0)
1136
"DATA",798.5,4,1,49,0)
1137
"DATA",798.5,4,1,50,0)
1138
"DATA",798.5,4,1,51,0)
1139
"DATA",798.5,4,1,52,0)
8785
"DATA",798.5,4,1,53,0)
1140
"DATA",798.5,4,1,54,0)
1141
"DATA",798.5,4,1,55,0)
1142
"DATA",798.5,4,1,56,0)
1143
"DATA",798.5,4,1,57,0)
1144
"DATA",798.5,4,1,58,0)
8786
"DATA",798.5,4,1,59,0)
1145
"DATA",798.5,4,1,60,0)
1146
"DATA",798.5,4,1,61,0)
1147
"DATA",798.5,4,1,62,0)
1148
"DATA",798.5,4,1,63,0)
1149
"DATA",798.5,4,1,64,0)
8787
"DATA",798.5,4,1,65,0)
1150
"DATA",798.5,4,1,66,0)
1151
"DATA",798.5,4,1,67,0)
1152
"DATA",798.5,4,1,68,0)
1153
"DATA",798.5,4,1,69,0)
1154
"DATA",798.5,4,1,70,0)
8788
"DATA",798.5,4,1,71,0)
1155
"DATA",798.5,4,1,72,0)
1156
"DATA",798.5,4,1,73,0)
1157
"DATA",798.5,4,1,74,0)
1158
"DATA",798.5,4,1,75,0)
1159
"DATA",798.5,4,1,76,0)
8789
"DATA",798.5,4,1,77,0)
1160
"DATA",798.5,4,1,78,0)
1161
"DATA",798.5,4,1,79,0)
1162
"DATA",798.5,4,1,80,0)
1163
"DATA",798.5,4,1,81,0)
1164
"DATA",798.5,4,1,82,0)
1165
"DATA",798.5,4,1,83,0)
8790
"DATA",798.5,4,1,84,0)
1166
"DATA",798.5,4,1,85,0)
1167
"DATA",798.5,4,1,86,0)
1168
"DATA",798.5,4,1,87,0)
1169
"DATA",798.5,4,1,88,0)
1170
"DATA",798.5,4,1,89,0)
1171
"DATA",798.5,4,1,90,0)
8793
"DATA",798.5,4,1,91,0)
1184
"DATA",798.5,4,1,92,0)
1185
"DATA",798.5,4,1,93,0)
1186
"DATA",798.5,4,1,94,0)
1187
"DATA",798.5,4,1,95,0)
1188
"DATA",798.5,4,1,96,0)
1189
"DATA",798.5,4,1,97,0)
8794
"DATA",798.5,4,1,98,0)
1190
"DATA",798.5,4,1,99,0)
1191
"DATA",798.5,4,1,100,0)
1192
"DATA",798.5,4,1,101,0)
1193
"DATA",798.5,4,1,102,0)
1194
"DATA",798.5,4,1,103,0)
1195
"DATA",798.5,4,1,104,0)
8795
"DATA",798.5,4,1,105,0)
1196
"DATA",798.5,4,1,106,0)
1197
"DATA",798.5,4,1,107,0)
1198
"DATA",798.5,4,1,108,0)
1199
"DATA",798.5,4,1,109,0)
1200
"DATA",798.5,4,1,110,0)
1201
"DATA",798.5,4,1,111,0)
1202
"DATA",798.5,4,1,112,0)
8796
"DATA",798.5,4,1,113,0)
1203
"DATA",798.5,4,1,114,0)
1204
"DATA",798.5,4,1,115,0)
1205
"DATA",798.5,4,1,116,0)
1104
"DATA",798.5,4,1,117,0)
8797
"DATA",798.5,4,1,118,0)
1206
"DATA",798.5,4,1,119,0)
8799
"DATA",798.5,4,1,120,0)
1237
"DATA",798.5,4,1,121,0)
1245
"DATA",798.5,4,1,122,0)
8844
"DATA",798.5,4,1,123,0)
1390
"DATA",798.5,4,1,124,0)
8846
"DATA",798.5,5,0)
5^^
"DATA",798.5,5,1,0)
^798.51P^25^25
"DATA",798.5,5,1,1,0)
2474
"DATA",798.5,5,1,2,0)
2478
"DATA",798.5,5,1,3,0)
2479
"DATA",798.5,5,1,4,0)
2480
"DATA",798.5,5,1,5,0)
12436
"DATA",798.5,5,1,6,0)
12440
"DATA",798.5,5,1,7,0)
12444
"DATA",798.5,5,1,8,0)
12438
"DATA",798.5,5,1,9,0)
12442
"DATA",798.5,5,1,10,0)
12446
"DATA",798.5,5,1,11,0)
9061
"DATA",798.5,5,1,12,0)
2567
"DATA",798.5,5,1,13,0)
13636
"DATA",798.5,5,1,14,0)
13637
"DATA",798.5,5,1,15,0)
13638
"DATA",798.5,5,1,16,0)
13639
"DATA",798.5,5,1,17,0)
13640
"DATA",798.5,5,1,18,0)
13641
"DATA",798.5,5,1,19,0)
13642
"DATA",798.5,5,1,20,0)
13643
"DATA",798.5,5,1,21,0)
13644
"DATA",798.5,5,1,22,0)
13645
"DATA",798.5,5,1,23,0)
13646
"DATA",798.5,5,1,24,0)
13647
"DATA",798.5,5,1,25,0)
2568
"DATA",798.5,6,0)
6^^
"DATA",798.5,6,1,0)
^798.51P^51^51
"DATA",798.5,6,1,1,0)
12447
"DATA",798.5,6,1,2,0)
12448
"DATA",798.5,6,1,3,0)
12449
"DATA",798.5,6,1,4,0)
12450
"DATA",798.5,6,1,5,0)
12451
"DATA",798.5,6,1,6,0)
12452
"DATA",798.5,6,1,7,0)
12453
"DATA",798.5,6,1,8,0)
12454
"DATA",798.5,6,1,9,0)
12455
"DATA",798.5,6,1,10,0)
12456
"DATA",798.5,6,1,11,0)
12457
"DATA",798.5,6,1,12,0)
12458
"DATA",798.5,6,1,13,0)
12459
"DATA",798.5,6,1,14,0)
12460
"DATA",798.5,6,1,15,0)
12461
"DATA",798.5,6,1,16,0)
12462
"DATA",798.5,6,1,17,0)
12463
"DATA",798.5,6,1,18,0)
12464
"DATA",798.5,6,1,19,0)
12465
"DATA",798.5,6,1,20,0)
12466
"DATA",798.5,6,1,21,0)
12467
"DATA",798.5,6,1,22,0)
12468
"DATA",798.5,6,1,23,0)
12469
"DATA",798.5,6,1,24,0)
12470
"DATA",798.5,6,1,25,0)
12471
"DATA",798.5,6,1,26,0)
12472
"DATA",798.5,6,1,27,0)
12473
"DATA",798.5,6,1,28,0)
12474
"DATA",798.5,6,1,29,0)
12475
"DATA",798.5,6,1,30,0)
12476
"DATA",798.5,6,1,31,0)
9039
"DATA",798.5,6,1,32,0)
2500
"DATA",798.5,6,1,33,0)
12477
"DATA",798.5,6,1,34,0)
12478
"DATA",798.5,6,1,35,0)
9040
"DATA",798.5,6,1,36,0)
9041
"DATA",798.5,6,1,37,0)
2502
"DATA",798.5,6,1,38,0)
2503
"DATA",798.5,6,1,39,0)
12989
"DATA",798.5,6,1,40,0)
12990
"DATA",798.5,6,1,41,0)
12991
"DATA",798.5,6,1,42,0)
12992
"DATA",798.5,6,1,43,0)
13230
"DATA",798.5,6,1,44,0)
13231
"DATA",798.5,6,1,45,0)
13634
"DATA",798.5,6,1,46,0)
13807
"DATA",798.5,6,1,47,0)
13635
"DATA",798.5,6,1,48,0)
14520
"DATA",798.5,6,1,49,0)
14733
"DATA",798.5,6,1,50,0)
2506
"DATA",798.5,6,1,51,0)
2507
"DATA",798.5,7,0)
7^^
"DATA",798.5,7,1,0)
^798.51P^12^12
"DATA",798.5,7,1,1,0)
8697
"DATA",798.5,7,1,2,0)
8625
"DATA",798.5,7,1,3,0)
335
"DATA",798.5,7,1,4,0)
336
"DATA",798.5,7,1,5,0)
337
"DATA",798.5,7,1,6,0)
338
"DATA",798.5,7,1,7,0)
339
"DATA",798.5,7,1,8,0)
340
"DATA",798.5,7,1,9,0)
341
"DATA",798.5,7,1,10,0)
342
"DATA",798.5,7,1,11,0)
8626
"DATA",798.5,7,1,12,0)
343
"DATA",798.5,8,0)
8^^
"DATA",798.5,8,1,0)
^798.51P^35^35
"DATA",798.5,8,1,1,0)
1695
"DATA",798.5,8,1,2,0)
9032
"DATA",798.5,8,1,3,0)
2476
"DATA",798.5,8,1,4,0)
2477
"DATA",798.5,8,1,5,0)
9033
"DATA",798.5,8,1,6,0)
2478
"DATA",798.5,8,1,7,0)
9034
"DATA",798.5,8,1,8,0)
2479
"DATA",798.5,8,1,9,0)
9035
"DATA",798.5,8,1,10,0)
2480
"DATA",798.5,8,1,11,0)
12429
"DATA",798.5,8,1,12,0)
12430
"DATA",798.5,8,1,13,0)
12431
"DATA",798.5,8,1,14,0)
12432
"DATA",798.5,8,1,15,0)
12433
"DATA",798.5,8,1,16,0)
12434
"DATA",798.5,8,1,17,0)
12435
"DATA",798.5,8,1,18,0)
12436
"DATA",798.5,8,1,19,0)
12437
"DATA",798.5,8,1,20,0)
12438
"DATA",798.5,8,1,21,0)
12439
"DATA",798.5,8,1,22,0)
12440
"DATA",798.5,8,1,23,0)
12441
"DATA",798.5,8,1,24,0)
12442
"DATA",798.5,8,1,25,0)
12443
"DATA",798.5,8,1,26,0)
12444
"DATA",798.5,8,1,27,0)
12445
"DATA",798.5,8,1,28,0)
12446
"DATA",798.5,8,1,29,0)
2485
"DATA",798.5,8,1,30,0)
2486
"DATA",798.5,8,1,31,0)
2487
"DATA",798.5,8,1,32,0)
2488
"DATA",798.5,8,1,33,0)
2489
"DATA",798.5,8,1,34,0)
2490
"DATA",798.5,8,1,35,0)
2593
"DATA",798.5,9,0)
9^^
"DATA",798.5,9,1,0)
^798.51P^21^21
"DATA",798.5,9,1,1,0)
9063
"DATA",798.5,9,1,2,0)
9064
"DATA",798.5,9,1,3,0)
12856
"DATA",798.5,9,1,4,0)
12858
"DATA",798.5,9,1,5,0)
12860
"DATA",798.5,9,1,6,0)
12862
"DATA",798.5,9,1,7,0)
12864
"DATA",798.5,9,1,8,0)
12866
"DATA",798.5,9,1,9,0)
12867
"DATA",798.5,9,1,10,0)
12868
"DATA",798.5,9,1,11,0)
12869
"DATA",798.5,9,1,12,0)
12870
"DATA",798.5,9,1,13,0)
12871
"DATA",798.5,9,1,14,0)
12872
"DATA",798.5,9,1,15,0)
9068
"DATA",798.5,9,1,16,0)
2588
"DATA",798.5,9,1,17,0)
13158
"DATA",798.5,9,1,18,0)
2590
"DATA",798.5,9,1,19,0)
2591
"DATA",798.5,9,1,20,0)
9069
"DATA",798.5,9,1,21,0)
13178
"DATA",798.5,10,0)
10^^
"DATA",798.5,10,1,0)
^798.51P^48^48
"DATA",798.5,10,1,1,0)
9616
"DATA",798.5,10,1,2,0)
4346
"DATA",798.5,10,1,3,0)
4347
"DATA",798.5,10,1,4,0)
9617
"DATA",798.5,10,1,5,0)
4348
"DATA",798.5,10,1,6,0)
4349
"DATA",798.5,10,1,7,0)
4350
"DATA",798.5,10,1,8,0)
4351
"DATA",798.5,10,1,9,0)
4352
"DATA",798.5,10,1,10,0)
4353
"DATA",798.5,10,1,11,0)
4354
"DATA",798.5,10,1,12,0)
4355
"DATA",798.5,10,1,13,0)
9618
"DATA",798.5,10,1,14,0)
4356
"DATA",798.5,10,1,15,0)
4357
"DATA",798.5,10,1,16,0)
4358
"DATA",798.5,10,1,17,0)
4359
"DATA",798.5,10,1,18,0)
4360
"DATA",798.5,10,1,19,0)
4361
"DATA",798.5,10,1,20,0)
4362
"DATA",798.5,10,1,21,0)
4363
"DATA",798.5,10,1,22,0)
9619
"DATA",798.5,10,1,23,0)
4364
"DATA",798.5,10,1,24,0)
4365
"DATA",798.5,10,1,25,0)
4366
"DATA",798.5,10,1,26,0)
4367
"DATA",798.5,10,1,27,0)
4368
"DATA",798.5,10,1,28,0)
4369
"DATA",798.5,10,1,29,0)
4370
"DATA",798.5,10,1,30,0)
4371
"DATA",798.5,10,1,31,0)
9620
"DATA",798.5,10,1,32,0)
4372
"DATA",798.5,10,1,33,0)
9621
"DATA",798.5,10,1,34,0)
4373
"DATA",798.5,10,1,35,0)
4374
"DATA",798.5,10,1,36,0)
4375
"DATA",798.5,10,1,37,0)
4376
"DATA",798.5,10,1,38,0)
4377
"DATA",798.5,10,1,39,0)
4378
"DATA",798.5,10,1,40,0)
4379
"DATA",798.5,10,1,41,0)
4380
"DATA",798.5,10,1,42,0)
9652
"DATA",798.5,10,1,43,0)
9653
"DATA",798.5,10,1,44,0)
4640
"DATA",798.5,10,1,45,0)
4641
"DATA",798.5,10,1,46,0)
4642
"DATA",798.5,10,1,47,0)
9654
"DATA",798.5,10,1,48,0)
4649
"DATA",798.5,11,0)
11^^
"DATA",798.5,11,1,0)
^798.51P^15^14
"DATA",798.5,11,1,1,0)
9128
"DATA",798.5,11,1,2,0)
13460
"DATA",798.5,11,1,3,0)
12482
"DATA",798.5,11,1,4,0)
12481
"DATA",798.5,11,1,5,0)
2759
"DATA",798.5,11,1,6,0)
9122
"DATA",798.5,11,1,7,0)
2758
"DATA",798.5,11,1,8,0)
2757
"DATA",798.5,11,1,9,0)
13905
"DATA",798.5,11,1,10,0)
12634
"DATA",798.5,11,1,11,0)
12633
"DATA",798.5,11,1,12,0)
2755
"DATA",798.5,11,1,13,0)
9121
"DATA",798.5,11,1,15,0)
2756
"DATA",798.5,12,0)
12^^
"DATA",798.5,12,1,0)
^798.51P^3^3
"DATA",798.5,12,1,1,0)
8749
"DATA",798.5,12,1,2,0)
952
"DATA",798.5,12,1,3,0)
954
"DATA",798.5,13,0)
13^^
"DATA",798.5,13,1,0)
^798.51P^95^95
"DATA",798.5,13,1,1,0)
7948
"DATA",798.5,13,1,2,0)
7949
"DATA",798.5,13,1,3,0)
7950
"DATA",798.5,13,1,4,0)
7951
"DATA",798.5,13,1,5,0)
7952
"DATA",798.5,13,1,6,0)
7953
"DATA",798.5,13,1,7,0)
7954
"DATA",798.5,13,1,8,0)
8504
"DATA",798.5,13,1,9,0)
8636
"DATA",798.5,13,1,10,0)
385
"DATA",798.5,13,1,11,0)
8687
"DATA",798.5,13,1,12,0)
797
"DATA",798.5,13,1,13,0)
14865
"DATA",798.5,13,1,14,0)
14662
"DATA",798.5,13,1,15,0)
8722
"DATA",798.5,13,1,16,0)
855
"DATA",798.5,13,1,17,0)
12835
"DATA",798.5,13,1,18,0)
12836
"DATA",798.5,13,1,19,0)
948
"DATA",798.5,13,1,20,0)
8752
"DATA",798.5,13,1,21,0)
11918
"DATA",798.5,13,1,22,0)
12430
"DATA",798.5,13,1,23,0)
12432
"DATA",798.5,13,1,24,0)
12434
"DATA",798.5,13,1,25,0)
12437
"DATA",798.5,13,1,26,0)
12438
"DATA",798.5,13,1,27,0)
12441
"DATA",798.5,13,1,28,0)
12442
"DATA",798.5,13,1,29,0)
12445
"DATA",798.5,13,1,30,0)
12446
"DATA",798.5,13,1,31,0)
2600
"DATA",798.5,13,1,32,0)
2610
"DATA",798.5,13,1,33,0)
3053
"DATA",798.5,13,1,34,0)
9239
"DATA",798.5,13,1,35,0)
3094
"DATA",798.5,13,1,36,0)
3095
"DATA",798.5,13,1,37,0)
3096
"DATA",798.5,13,1,38,0)
3097
"DATA",798.5,13,1,39,0)
9240
"DATA",798.5,13,1,40,0)
3098
"DATA",798.5,13,1,41,0)
3099
"DATA",798.5,13,1,42,0)
3100
"DATA",798.5,13,1,43,0)
3101
"DATA",798.5,13,1,44,0)
3102
"DATA",798.5,13,1,45,0)
3103
"DATA",798.5,13,1,46,0)
9241
"DATA",798.5,13,1,47,0)
3104
"DATA",798.5,13,1,48,0)
3105
"DATA",798.5,13,1,49,0)
3106
"DATA",798.5,13,1,50,0)
3107
"DATA",798.5,13,1,51,0)
3108
"DATA",798.5,13,1,52,0)
3109
"DATA",798.5,13,1,53,0)
9242
"DATA",798.5,13,1,54,0)
3110
"DATA",798.5,13,1,55,0)
3111
"DATA",798.5,13,1,56,0)
3112
"DATA",798.5,13,1,57,0)
3113
"DATA",798.5,13,1,58,0)
3114
"DATA",798.5,13,1,59,0)
3115
"DATA",798.5,13,1,60,0)
3116
"DATA",798.5,13,1,61,0)
3117
"DATA",798.5,13,1,62,0)
3118
"DATA",798.5,13,1,63,0)
3119
"DATA",798.5,13,1,64,0)
3120
"DATA",798.5,13,1,65,0)
3121
"DATA",798.5,13,1,66,0)
3122
"DATA",798.5,13,1,67,0)
14133
"DATA",798.5,13,1,68,0)
14134
"DATA",798.5,13,1,69,0)
14135
"DATA",798.5,13,1,70,0)
14136
"DATA",798.5,13,1,71,0)
14137
"DATA",798.5,13,1,72,0)
14138
"DATA",798.5,13,1,73,0)
14139
"DATA",798.5,13,1,74,0)
9244
"DATA",798.5,13,1,75,0)
9245
"DATA",798.5,13,1,76,0)
13975
"DATA",798.5,13,1,77,0)
13976
"DATA",798.5,13,1,78,0)
3125
"DATA",798.5,13,1,79,0)
9251
"DATA",798.5,13,1,80,0)
12547
"DATA",798.5,13,1,81,0)
12548
"DATA",798.5,13,1,82,0)
12549
"DATA",798.5,13,1,83,0)
12550
"DATA",798.5,13,1,84,0)
12555
"DATA",798.5,13,1,85,0)
12552
"DATA",798.5,13,1,86,0)
12553
"DATA",798.5,13,1,87,0)
13251
"DATA",798.5,13,1,88,0)
13295
"DATA",798.5,13,1,89,0)
13252
"DATA",798.5,13,1,90,0)
13253
"DATA",798.5,13,1,91,0)
13254
"DATA",798.5,13,1,92,0)
5544
"DATA",798.5,13,1,93,0)
9246
"DATA",798.5,13,1,94,0)
3123
"DATA",798.5,13,1,95,0)
9243
"DATA",798.5,14,0)
14^^
"DATA",798.5,14,1,0)
^798.51P^1^1
"DATA",798.5,14,1,1,0)
8866
"DATA",798.5,15,0)
15^^
"DATA",798.5,15,1,0)
^798.51P^7^7
"DATA",798.5,15,1,1,0)
9614
"DATA",798.5,15,1,2,0)
4337
"DATA",798.5,15,1,3,0)
4338
"DATA",798.5,15,1,4,0)
9615
"DATA",798.5,15,1,5,0)
4339
"DATA",798.5,15,1,6,0)
4340
"DATA",798.5,15,1,7,0)
4341
"DATA",798.5,16,0)
16^^
"DATA",798.5,16,1,0)
^798.51P^47^47
"DATA",798.5,16,1,1,0)
10174
"DATA",798.5,16,1,2,0)
7600
"DATA",798.5,16,1,3,0)
7601
"DATA",798.5,16,1,4,0)
7602
"DATA",798.5,16,1,5,0)
13108
"DATA",798.5,16,1,6,0)
13109
"DATA",798.5,16,1,7,0)
13110
"DATA",798.5,16,1,8,0)
13111
"DATA",798.5,16,1,9,0)
13112
"DATA",798.5,16,1,10,0)
13113
"DATA",798.5,16,1,11,0)
13114
"DATA",798.5,16,1,12,0)
13115
"DATA",798.5,16,1,13,0)
13116
"DATA",798.5,16,1,14,0)
13117
"DATA",798.5,16,1,15,0)
13118
"DATA",798.5,16,1,16,0)
13119
"DATA",798.5,16,1,17,0)
13120
"DATA",798.5,16,1,18,0)
13121
"DATA",798.5,16,1,19,0)
13122
"DATA",798.5,16,1,20,0)
13123
"DATA",798.5,16,1,21,0)
10012
"DATA",798.5,16,1,22,0)
6675
"DATA",798.5,16,1,23,0)
10013
"DATA",798.5,16,1,24,0)
6676
"DATA",798.5,16,1,25,0)
10014
"DATA",798.5,16,1,26,0)
6677
"DATA",798.5,16,1,27,0)
6678
"DATA",798.5,16,1,28,0)
6679
"DATA",798.5,16,1,29,0)
6680
"DATA",798.5,16,1,30,0)
6681
"DATA",798.5,16,1,31,0)
6682
"DATA",798.5,16,1,32,0)
6683
"DATA",798.5,16,1,33,0)
10020
"DATA",798.5,16,1,34,0)
6694
"DATA",798.5,16,1,35,0)
10021
"DATA",798.5,16,1,36,0)
6695
"DATA",798.5,16,1,37,0)
6696
"DATA",798.5,16,1,38,0)
6697
"DATA",798.5,16,1,39,0)
10022
"DATA",798.5,16,1,40,0)
6698
"DATA",798.5,16,1,41,0)
6699
"DATA",798.5,16,1,42,0)
6700
"DATA",798.5,16,1,43,0)
6701
"DATA",798.5,16,1,44,0)
6702
"DATA",798.5,16,1,45,0)
6703
"DATA",798.5,16,1,46,0)
6704
"DATA",798.5,16,1,47,0)
6783
"DATA",798.5,17,0)
17^^
"DATA",798.5,17,1,0)
^798.51P^45^45
"DATA",798.5,17,1,1,0)
8938
"DATA",798.5,17,1,2,0)
1920
"DATA",798.5,17,1,3,0)
1921
"DATA",798.5,17,1,4,0)
1922
"DATA",798.5,17,1,5,0)
1923
"DATA",798.5,17,1,6,0)
1924
"DATA",798.5,17,1,7,0)
1925
"DATA",798.5,17,1,8,0)
1926
"DATA",798.5,17,1,9,0)
1927
"DATA",798.5,17,1,10,0)
8939
"DATA",798.5,17,1,11,0)
1928
"DATA",798.5,17,1,12,0)
1929
"DATA",798.5,17,1,13,0)
1930
"DATA",798.5,17,1,14,0)
1931
"DATA",798.5,17,1,15,0)
1932
"DATA",798.5,17,1,16,0)
1933
"DATA",798.5,17,1,17,0)
1934
"DATA",798.5,17,1,18,0)
1935
"DATA",798.5,17,1,19,0)
8940
"DATA",798.5,17,1,20,0)
1936
"DATA",798.5,17,1,21,0)
1937
"DATA",798.5,17,1,22,0)
1938
"DATA",798.5,17,1,23,0)
1939
"DATA",798.5,17,1,24,0)
1940
"DATA",798.5,17,1,25,0)
1941
"DATA",798.5,17,1,26,0)
1942
"DATA",798.5,17,1,27,0)
8941
"DATA",798.5,17,1,28,0)
1943
"DATA",798.5,17,1,29,0)
1944
"DATA",798.5,17,1,30,0)
1945
"DATA",798.5,17,1,31,0)
1946
"DATA",798.5,17,1,32,0)
1947
"DATA",798.5,17,1,33,0)
1948
"DATA",798.5,17,1,34,0)
1949
"DATA",798.5,17,1,35,0)
1950
"DATA",798.5,17,1,36,0)
1951
"DATA",798.5,17,1,37,0)
8942
"DATA",798.5,17,1,38,0)
1952
"DATA",798.5,17,1,39,0)
1953
"DATA",798.5,17,1,40,0)
1954
"DATA",798.5,17,1,41,0)
1955
"DATA",798.5,17,1,42,0)
1956
"DATA",798.5,17,1,43,0)
1957
"DATA",798.5,17,1,44,0)
1958
"DATA",798.5,17,1,45,0)
1959
"DATA",798.5,18,0)
18^^
"DATA",798.5,18,1,0)
^798.51P^1^1
"DATA",798.5,18,1,1,0)
8876
"DATA",799.34,22,0)
DAA Lab Monitoring^1^1^22^^^^^1
"DATA",799.34,22,1)
14,22,13,91,53,34,50,140,180,70,100
"DATA",799.34,22,10.01)
$$DAAMON^RORX022
"DATA",799.34,22,11,0)
^799.3411^3^3^3120516^^^^
"DATA",799.34,22,11,1,0)
<DATE_RANGE_4 TYPE="YEAR"/>
"DATA",799.34,22,11,2,0)
<DRUGS AGGR_GENERIC="1" ALL="1"/>
"DATA",799.34,22,11,3,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1"/>
"DATA",799.34,22,12,0)
^799.3412^2^2^3120516^^
"DATA",799.34,22,12,1,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,22,12,2,0)
<SM TABLE="LABTESTS" FIELD="NAME"/>
"FIA",798.1)
ROR REGISTRY PARAMETERS
"FIA",798.1,0)
^ROR(798.1,
"FIA",798.1,0,0)
798.1Is
"FIA",798.1,0,1)
y^y^f^^n^^y^m^n
"FIA",798.1,0,10)
 
"FIA",798.1,0,11)
I ($P(^(0),U)'="VA HEPC"),($P(^(0),U)'="VA HIV")
"FIA",798.1,0,"RLRO")
 
"FIA",798.1,0,"VR")
1.5^ROR
"FIA",798.1,798.1)
0
"FIA",798.1,798.11)
0
"FIA",798.1,798.112)
0
"FIA",798.1,798.114)
0
"FIA",798.1,798.118)
0
"FIA",798.1,798.12)
0
"FIA",798.1,798.122)
0
"FIA",798.1,798.128)
0
"FIA",798.1,798.129)
0
"FIA",798.1,798.13)
0
"FIA",798.1,798.15)
0
"FIA",798.2)
ROR SELECTION RULE
"FIA",798.2,0)
^ROR(798.2,
"FIA",798.2,0,0)
798.2I
"FIA",798.2,0,1)
n^y^f^^n^^y^r^n
"FIA",798.2,0,10)
 
"FIA",798.2,0,11)
I ($P(^(0),U)'["CONVERSION"),($P(^(0),U)'["VISIT"),($P(^(0),U)'["HIST"),($P(^(0),U)'["LAB")
"FIA",798.2,0,"RLRO")
 
"FIA",798.2,0,"VR")
1.5^ROR
"FIA",798.2,798.2)
0
"FIA",798.2,798.25)
0
"FIA",798.2,798.26)
0
"FIA",798.5)
ROR ICD SEARCH
"FIA",798.5,0)
^ROR(798.5,
"FIA",798.5,0,0)
798.5P
"FIA",798.5,0,1)
y^y^f^^n^ZROR18^y^m^n
"FIA",798.5,0,10)
 
"FIA",798.5,0,11)
 
"FIA",798.5,0,"RLRO")
^DIBT(449990,1)
"FIA",798.5,0,"VR")
1.5^ROR
"FIA",798.5,798.5)
0
"FIA",798.5,798.51)
0
"FIA",799.34)
ROR REPORT PARAMETERS
"FIA",799.34,0)
^ROR(799.34,
"FIA",799.34,0,0)
799.34I
"FIA",799.34,0,1)
n^y^f^^n^^y^o^n
"FIA",799.34,0,10)
 
"FIA",799.34,0,11)
I $P(^(0),U,4)=22
"FIA",799.34,0,"RLRO")
 
"FIA",799.34,0,"VR")
1.5^ROR
"FIA",799.34,799.34)
0
"FIA",799.34,799.3411)
0
"FIA",799.34,799.3412)
0
"INIT")
RORP018
"IX",798.1,798.1,"B",0)
798.1^B^Uniqueness Index for Key 'A' of File #798.1^R^^F^IR^I^798.1^^^^^LS
"IX",798.1,798.1,"B",1)
S ^ROR(798.1,"B",X,DA)=""
"IX",798.1,798.1,"B",2)
K ^ROR(798.1,"B",X,DA)
"IX",798.1,798.1,"B",2.5)
K ^ROR(798.1,"B")
"IX",798.1,798.1,"B",11.1,0)
^.114IA^1^1
"IX",798.1,798.1,"B",11.1,1,0)
1^F^798.1^.01^^1
"IX",798.1,798.11,"B",0)
798.11^B^Uniqueness Index for Key 'A' of Subfile #798.11^R^^F^IR^I^798.11^^^^^LS
"IX",798.1,798.11,"B",1)
S ^ROR(798.1,DA(1),3,"B",X,DA)=""
"IX",798.1,798.11,"B",2)
K ^ROR(798.1,DA(1),3,"B",X,DA)
"IX",798.1,798.11,"B",2.5)
K ^ROR(798.1,DA(1),3,"B")
"IX",798.1,798.11,"B",11.1,0)
^.114IA^1^1
"IX",798.1,798.11,"B",11.1,1,0)
1^F^798.11^.01^^1
"IX",798.1,798.118,"B",0)
798.118^B^Uniqueness Index for Key 'A' of Subfile #798.118^R^^F^IR^I^798.118^^^^^LS
"IX",798.1,798.118,"B",1)
S ^ROR(798.1,DA(1),18,"B",X,DA)=""
"IX",798.1,798.118,"B",2)
K ^ROR(798.1,DA(1),18,"B",X,DA)
"IX",798.1,798.118,"B",2.5)
K ^ROR(798.1,DA(1),18,"B")
"IX",798.1,798.118,"B",11.1,0)
^.114IA^1^1
"IX",798.1,798.118,"B",11.1,1,0)
1^F^798.118^.01^^1
"IX",798.1,798.122,"B",0)
798.122^B^Uniqueness Index for Key 'A' of Subfile #798.122^R^^F^IR^I^798.122^^^^^LS
"IX",798.1,798.122,"B",1)
S ^ROR(798.1,DA(1),22,"B",X,DA)=""
"IX",798.1,798.122,"B",2)
K ^ROR(798.1,DA(1),22,"B",X,DA)
"IX",798.1,798.122,"B",2.5)
K ^ROR(798.1,DA(1),22,"B")
"IX",798.1,798.122,"B",11.1,0)
^.114IA^1^1
"IX",798.1,798.122,"B",11.1,1,0)
1^F^798.122^.01^^1
"IX",798.1,798.128,"G",0)
798.128^G^Lab Group and Local Test Name^R^^R^IR^I^798.128^^^^^LS
"IX",798.1,798.128,"G",1)
S ^ROR(798.1,DA(1),28,"G",X(1),X(2),DA)=""
"IX",798.1,798.128,"G",2)
K ^ROR(798.1,DA(1),28,"G",X(1),X(2),DA)
"IX",798.1,798.128,"G",2.5)
K ^ROR(798.1,DA(1),28,"G")
"IX",798.1,798.128,"G",11.1,0)
^.114IA^3^2
"IX",798.1,798.128,"G",11.1,1,0)
1^F^798.128^.02^^1^F
"IX",798.1,798.128,"G",11.1,1,2)
 
"IX",798.1,798.128,"G",11.1,1,3)
 
"IX",798.1,798.128,"G",11.1,3,0)
2^F^798.128^.01^^2^F
"IX",798.1,798.128,"G",11.1,3,3)
 
"IX",798.1,798.129,"G",0)
798.129^G^Drug Group and Local Drug Name^R^^R^IR^I^798.129^^^^^LS
"IX",798.1,798.129,"G",1)
S ^ROR(798.1,DA(1),29,"G",X(1),X(2),DA)=""
"IX",798.1,798.129,"G",2)
K ^ROR(798.1,DA(1),29,"G",X(1),X(2),DA)
"IX",798.1,798.129,"G",2.5)
K ^ROR(798.1,DA(1),29,"G")
"IX",798.1,798.129,"G",11.1,0)
^.114IA^3^2
"IX",798.1,798.129,"G",11.1,1,0)
1^F^798.129^.02^^1^F
"IX",798.1,798.129,"G",11.1,1,3)
 
"IX",798.1,798.129,"G",11.1,3,0)
2^F^798.129^.01^^2^F
"IX",798.1,798.129,"G",11.1,3,3)
 
"IX",798.1,798.13,"B",0)
798.13^B^Uniqueness Index for Key 'A' of Subfile #798.13^R^^F^IR^I^798.13^^^^^LS
"IX",798.1,798.13,"B",1)
S ^ROR(798.1,DA(1),1,"B",X,DA)=""
"IX",798.1,798.13,"B",2)
K ^ROR(798.1,DA(1),1,"B",X,DA)
"IX",798.1,798.13,"B",2.5)
K ^ROR(798.1,DA(1),1,"B")
"IX",798.1,798.13,"B",11.1,0)
^.114IA^1^1
"IX",798.1,798.13,"B",11.1,1,0)
1^F^798.13^.01^^1
"IX",798.2,798.2,"B",0)
798.2^B^Uniqueness Index for the "A" Key of File #798.2^R^^F^IR^I^798.2^^^^^LS
"IX",798.2,798.2,"B",1)
S ^ROR(798.2,"B",X,DA)=""
"IX",798.2,798.2,"B",2)
K ^ROR(798.2,"B",X,DA)
"IX",798.2,798.2,"B",2.5)
K ^ROR(798.2,"B")
"IX",798.2,798.2,"B",11.1,0)
^.114IA^1^1
"IX",798.2,798.2,"B",11.1,1,0)
1^F^798.2^.01^^1
"IX",798.2,798.26,"B",0)
798.26^B^Uniqueness Index for the "A" Key of Subfile #798.26^R^^F^IR^I^798.26^^^^^LS
"IX",798.2,798.26,"B",1)
S ^ROR(798.2,DA(1),4,"B",X,DA)=""
"IX",798.2,798.26,"B",2)
K ^ROR(798.2,DA(1),4,"B",X,DA)
"IX",798.2,798.26,"B",2.5)
K ^ROR(798.2,DA(1),4,"B")
"IX",798.2,798.26,"B",11.1,0)
^.114IA^1^1
"IX",798.2,798.26,"B",11.1,1,0)
1^F^798.26^.01^^1
"IX",799.34,799.34,"KEY",0)
799.34^KEY^Uniqueness Index for Key 'A' of File #799.34^R^^F^IR^I^799.34^^^^^LS
"IX",799.34,799.34,"KEY",1)
S ^ROR(799.34,"KEY",X,DA)=""
"IX",799.34,799.34,"KEY",2)
K ^ROR(799.34,"KEY",X,DA)
"IX",799.34,799.34,"KEY",2.5)
K ^ROR(799.34,"KEY")
"IX",799.34,799.34,"KEY",11.1,0)
^.114IA^1^1
"IX",799.34,799.34,"KEY",11.1,1,0)
1^F^799.34^.04^^1
"KEY",798.1,798.1,"A",0)
798.1^A^S^29
"KEY",798.1,798.1,"A",2,0)
^.312IA^1^1
"KEY",798.1,798.1,"A",2,1,0)
.01^798.1^1
"KEY",798.1,798.11,"A",0)
798.11^A^S^31
"KEY",798.1,798.11,"A",2,0)
^.312IA^1^1
"KEY",798.1,798.11,"A",2,1,0)
.01^798.11^1
"KEY",798.1,798.118,"A",0)
798.118^A^S^32
"KEY",798.1,798.118,"A",2,0)
^.312IA^1^1
"KEY",798.1,798.118,"A",2,1,0)
.01^798.118^1
"KEY",798.1,798.122,"A",0)
798.122^A^S^33
"KEY",798.1,798.122,"A",2,0)
^.312IA^1^1
"KEY",798.1,798.122,"A",2,1,0)
.01^798.122^1
"KEY",798.1,798.128,"G",0)
798.128^G^P^85
"KEY",798.1,798.128,"G",2,0)
^.312IA^2^2
"KEY",798.1,798.128,"G",2,1,0)
.02^798.128^1
"KEY",798.1,798.128,"G",2,2,0)
.01^798.128^2
"KEY",798.1,798.129,"G",0)
798.129^G^P^86
"KEY",798.1,798.129,"G",2,0)
^.312IA^2^2
"KEY",798.1,798.129,"G",2,1,0)
.02^798.129^1
"KEY",798.1,798.129,"G",2,2,0)
.01^798.129^2
"KEY",798.1,798.13,"A",0)
798.13^A^S^139
"KEY",798.1,798.13,"A",2,0)
^.312IA^1^1
"KEY",798.1,798.13,"A",2,1,0)
.01^798.13^1
"KEY",798.2,798.2,"A",0)
798.2^A^S^141
"KEY",798.2,798.2,"A",2,0)
^.312IA^1^1
"KEY",798.2,798.2,"A",2,1,0)
.01^798.2^1
"KEY",798.2,798.26,"A",0)
798.26^A^S^142
"KEY",798.2,798.26,"A",2,0)
^.312IA^1^1
"KEY",798.2,798.26,"A",2,1,0)
.01^798.26^1
"KEY",799.34,799.34,"A",0)
799.34^A^P^385
"KEY",799.34,799.34,"A",2,0)
^.312IA^1^1
"KEY",799.34,799.34,"A",2,1,0)
.04^799.34^1
"KEYPTR",798.1,798.1,"A")
798.1^B
"KEYPTR",798.1,798.11,"A")
798.11^B
"KEYPTR",798.1,798.118,"A")
798.118^B
"KEYPTR",798.1,798.122,"A")
798.122^B
"KEYPTR",798.1,798.128,"G")
798.128^G
"KEYPTR",798.1,798.129,"G")
798.129^G
"KEYPTR",798.1,798.13,"A")
798.13^B
"KEYPTR",798.2,798.2,"A")
798.2^B
"KEYPTR",798.2,798.26,"A")
798.26^B
"KEYPTR",799.34,799.34,"A")
799.34^KEY
"KRN",19,2919040,-1)
0^1
"KRN",19,2919040,0)
ROR TASK^Registry Update & Data Extraction^^R^^^^^^^^CLINICAL CASE REGISTRIES
"KRN",19,2919040,1,0)
^^34^34^3120518^
"KRN",19,2919040,1,1,0)
 
"KRN",19,2919040,1,2,0)
This option starts the registry update and data extraction task that
"KRN",19,2919040,1,3,0)
processes ALL active initialized registries.
"KRN",19,2919040,1,4,0)
 
"KRN",19,2919040,1,5,0)
The following task parameters are optional. They can be defined on the
"KRN",19,2919040,1,6,0)
second page of the option scheduling form (as the pairs of the variable 
"KRN",19,2919040,1,7,0)
names and values).
"KRN",19,2919040,1,8,0)
 
"KRN",19,2919040,1,9,0)
RORFLCLR, RORFLSET (Default: "")
"KRN",19,2919040,1,10,0)
 
"KRN",19,2919040,1,11,0)
These two parameters override the values of the flags that control the 
"KRN",19,2919040,1,12,0)
processing. Add the flags to the RORFLCLR variable to clear them and to
"KRN",19,2919040,1,13,0)
the RORFLSET variable to set them. Below are the possible values of the 
"KRN",19,2919040,1,14,0)
parameters (can be combined):
"KRN",19,2919040,1,15,0)
 
"KRN",19,2919040,1,16,0)
  "E" - Use the event references (file #798.3)
"KRN",19,2919040,1,17,0)
 
"KRN",19,2919040,1,18,0)
RORMNTSK (Default: "2-3-AUTO")
"KRN",19,2919040,1,19,0)
 
"KRN",19,2919040,1,20,0)
Maximum number of the registry update subtasks. If this parameter is less
"KRN",19,2919040,1,21,0)
than 2, all patients will be processed by the single main task. Otherwise,
"KRN",19,2919040,1,22,0)
all patients can be distributed among several subtasks.
"KRN",19,2919040,1,23,0)
 
"KRN",19,2919040,1,24,0)
If "N-M-AUTO" is passed as the value of this parameter and difference
"KRN",19,2919040,1,25,0)
between the end and start dates of the registry update is more than M days
"KRN",19,2919040,1,26,0)
then N subtasks will be started. Otherwise, the single task will run.
"KRN",19,2919040,1,27,0)
 
"KRN",19,2919040,1,28,0)
RORSUSP (Default: "")
"KRN",19,2919040,1,29,0)
 
"KRN",19,2919040,1,30,0)
Suspension parameters of the registry update subtasks. The subtasks are
"KRN",19,2919040,1,31,0)
not suspended by default. Parameter should contain start and end times of
"KRN",19,2919040,1,32,0)
the suspension (in external format) separated by the "-". For example, the
"KRN",19,2919040,1,33,0)
"7:00-18:00" value will suspend the subtasks from 7am until 6pm each day
"KRN",19,2919040,1,34,0)
except weekends and holidays.
"KRN",19,2919040,2)
n
"KRN",19,2919040,25)
TASK^ROR
"KRN",19,2919040,99.1)
60985,30687
"KRN",19,2919040,200.9)
y^y
"KRN",19,2919040,"U")
REGISTRY UPDATE & DATA EXTRACT
"KRN",19,2921437,-1)
0^2
"KRN",19,2921437,0)
ROR INITIALIZE^Initialize new registries (one time)^^R^^ROR VA IRM^^^^^^CLINICAL CASE REGISTRIES
"KRN",19,2921437,1,0)
^^2^2^3120416^
"KRN",19,2921437,1,1,0)
This option allows the user to schedule the task that will populate the
"KRN",19,2921437,1,2,0)
sixteen new registries added in ROR*1.5*18.
"KRN",19,2921437,25)
RORSET02
"KRN",19,2921437,200.9)
n
"KRN",19,2921437,"U")
INITIALIZE NEW REGISTRIES (ONE
"KRN",19.1,835,-1)
0^1
"KRN",19.1,835,0)
ROR VA GENERIC ADMIN^Admin for local registries^l
"KRN",19.1,835,1,0)
^^2^2^3120502^
"KRN",19.1,835,1,1,0)
This key allows user to manage local registries excluding VA HEPC and VA
"KRN",19.1,835,1,2,0)
HIV.
"KRN",19.1,836,-1)
0^2
"KRN",19.1,836,0)
ROR VA GENERIC USER^Runs local registries reports^l
"KRN",19.1,836,1,0)
^^2^2^3120502^
"KRN",19.1,836,1,1,0)
This key allows users to run reports for local registries excluding VA HIV
"KRN",19.1,836,1,2,0)
and VA HEPC.
"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",618,-1)
1^1
"PKG",618,0)
CLINICAL CASE REGISTRIES^ROR^CLINICAL REGISTRIES
"PKG",618,20,0)
^9.402P^^
"PKG",618,22,0)
^9.49I^1^1
"PKG",618,22,1,0)
1.5^3060208^3060419^568
"PKG",618,22,1,"PAH",1,0)
18^3120802
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")
 
"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
14
"RTN","ROR10")
0^11^B33146780^B33339833
"RTN","ROR10",1,0)
ROR10 ;HCIOFO/SG - NIGHTLY TASK UTILITIES ; 11/29/05 4:21pm
"RTN","ROR10",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**18**;Feb 17, 2006;Build 25
"RTN","ROR10",3,0)
 ;
"RTN","ROR10",4,0)
 ;******************************************************************************
"RTN","ROR10",5,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","ROR10",6,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","ROR10",7,0)
 ;ROR*1.5*18   APR  2012   C RAY        Replaces list in TASK PARAMETERS with
"RTN","ROR10",8,0)
 ;                                      list of all initialized registries
"RTN","ROR10",9,0)
 ;******************************************************************************
"RTN","ROR10",10,0)
 Q
"RTN","ROR10",11,0)
 ;
"RTN","ROR10",12,0)
 ;***** DISPLAYS THE ALERT ABOUT PROBLEMATIC HL7 MESSAGES
"RTN","ROR10",13,0)
ALERT ;
"RTN","ROR10",14,0)
 Q:$G(XQADATA)=""
"RTN","ROR10",15,0)
 N I,PARAMS,RORINFO,TMP
"RTN","ROR10",16,0)
 ;--- Get and prepare the parameters
"RTN","ROR10",17,0)
 S PARAMS("REGISTRY")=$P(XQADATA,"^")
"RTN","ROR10",18,0)
 S PARAMS("NOR")=$P(XQADATA,"^",2)
"RTN","ROR10",19,0)
 ;--- Load and format the text
"RTN","ROR10",20,0)
 D BLD^DIALOG(7980000.027,.PARAMS,,"RORINFO","S")
"RTN","ROR10",21,0)
 ;--- Display the text
"RTN","ROR10",22,0)
 S I=""  W !!
"RTN","ROR10",23,0)
 F  S I=$O(RORINFO(I))  Q:I=""  W RORINFO(I),!
"RTN","ROR10",24,0)
 Q
"RTN","ROR10",25,0)
 ;
"RTN","ROR10",26,0)
 ;***** CHECKS THE STATUS OF LAST HL7 MESSAGE(S)
"RTN","ROR10",27,0)
 ;
"RTN","ROR10",28,0)
 ; .REGLST       Reference to a local array containing registry
"RTN","ROR10",29,0)
 ;               names as subscripts and (optionally) registry
"RTN","ROR10",30,0)
 ;               IENs as values.
"RTN","ROR10",31,0)
 ;
"RTN","ROR10",32,0)
 ; Return values:
"RTN","ROR10",33,0)
 ;       <0  Error code
"RTN","ROR10",34,0)
 ;        0  Ok
"RTN","ROR10",35,0)
 ;
"RTN","ROR10",36,0)
CHECKMSG(REGLST) ;
"RTN","ROR10",37,0)
 N RORLBLST      ; List of latest batch HL7 messages (see ^ROR11)
"RTN","ROR10",38,0)
 ;
"RTN","ROR10",39,0)
 N HDTIEN,IENS,IM,LBCID,MSGDT,MSGSTC,RC,REGIEN,REGNAME,RORBUF,RORFDA,RORMSG,TMP
"RTN","ROR10",40,0)
 S RC=0
"RTN","ROR10",41,0)
 ;
"RTN","ROR10",42,0)
 ;=== Compile the list of latest batch HL7 messages
"RTN","ROR10",43,0)
 S REGNAME=""
"RTN","ROR10",44,0)
 F  S REGNAME=$O(REGLST(REGNAME))  Q:REGNAME=""  D  Q:RC<0
"RTN","ROR10",45,0)
 . ;--- Get the registry IEN
"RTN","ROR10",46,0)
 . S REGIEN=+$G(REGLST(REGNAME))
"RTN","ROR10",47,0)
 . I REGIEN'>0  D  I REGIEN'>0  S RC=+REGIEN  Q
"RTN","ROR10",48,0)
 . . S REGIEN=$$REGIEN^RORUTL02(REGNAME)
"RTN","ROR10",49,0)
 . S $P(REGLST(REGNAME),U)=REGIEN
"RTN","ROR10",50,0)
 . ;--- Get the list of batch HL7 message IDs
"RTN","ROR10",51,0)
 . K RORBUF,RORMSG
"RTN","ROR10",52,0)
 . S IENS=","_REGIEN_","
"RTN","ROR10",53,0)
 . D LIST^DIC(798.122,IENS,"@;.01;.02;.03I",,,,,"B",,,"RORBUF","RORMSG")
"RTN","ROR10",54,0)
 . I $G(DIERR)  S RC=$$DBS^RORERR("RORMSG",-9,,,798.122,IENS)  Q
"RTN","ROR10",55,0)
 . ;--- Update the list of latest HL7 batch messages
"RTN","ROR10",56,0)
 . S IM=""
"RTN","ROR10",57,0)
 . F  S IM=$O(RORBUF("DILIST","ID",IM))  Q:IM=""  D
"RTN","ROR10",58,0)
 . . S LBCID=RORBUF("DILIST","ID",IM,.01)
"RTN","ROR10",59,0)
 . . S IENS=RORBUF("DILIST",2,IM)_","_REGIEN_","
"RTN","ROR10",60,0)
 . . S MSGDT=$G(RORBUF("DILIST","ID",IM,.03))
"RTN","ROR10",61,0)
 . . D ADDMSG^ROR11(LBCID,IENS,$G(RORBUF("DILIST","ID",IM,.02)),MSGDT)
"RTN","ROR10",62,0)
 Q:RC<0 RC
"RTN","ROR10",63,0)
 ;
"RTN","ROR10",64,0)
 ;=== Analyze the list of messages
"RTN","ROR10",65,0)
 S LBCID=0
"RTN","ROR10",66,0)
 F  S LBCID=$O(RORLBLST(LBCID))  Q:LBCID'>0  D  Q:RC<0
"RTN","ROR10",67,0)
 . S MSGSTC=+RORLBLST(LBCID,"MS")
"RTN","ROR10",68,0)
 . S MSGDT=RORLBLST(LBCID,"DT")
"RTN","ROR10",69,0)
 . ;--- If the message does not exist (usually, it should), remove
"RTN","ROR10",70,0)
 . ;    the reference(s) but do not update the patients' extraction
"RTN","ROR10",71,0)
 . ;--- dates. Data will be re-extracted and resent (just in case).
"RTN","ROR10",72,0)
 . I 'MSGSTC  D  Q
"RTN","ROR10",73,0)
 . . D DELMSG^ROR11(LBCID,.RORFDA)
"RTN","ROR10",74,0)
 . . D ERROR^RORERR(-49,,,,LBCID)
"RTN","ROR10",75,0)
 . ;--- Unfortunately, the 'successfully completed' status (3) is
"RTN","ROR10",76,0)
 . ;    returned for cancelled messages as well (and possibly in
"RTN","ROR10",77,0)
 . ;    some other situations). Update the patients' extraction
"RTN","ROR10",78,0)
 . ;    dates only if there is no error message in the status
"RTN","ROR10",79,0)
 . ;--- string. Then remove the message reference(s).
"RTN","ROR10",80,0)
 . I MSGSTC=3  D  Q
"RTN","ROR10",81,0)
 . . S TMP=$P(RORLBLST(LBCID,"MS"),U,3)
"RTN","ROR10",82,0)
 . . S:TMP="" TMP=$$UPDTRR^ROR11($P(RORLBLST(LBCID),U),MSGDT)
"RTN","ROR10",83,0)
 . . D DELMSG^ROR11(LBCID,.RORFDA)
"RTN","ROR10",84,0)
 . ;--- If the message is being processed/transmitted,
"RTN","ROR10",85,0)
 . ;--- then keep the reference(s) in the list.
"RTN","ROR10",86,0)
 . I (MSGSTC=1.5)!(MSGSTC=1.7)  D  Q
"RTN","ROR10",87,0)
 . . D ERROR^RORERR(-73,,,,LBCID)
"RTN","ROR10",88,0)
 . ;--- Otherwise (the message has not been sent), keep the
"RTN","ROR10",89,0)
 . ;--- reference(s) and requeue the message (just in case).
"RTN","ROR10",90,0)
 . S TMP=+$$MSGACT^HLUTIL(LBCID,2)
"RTN","ROR10",91,0)
 . D ERROR^RORERR($S(TMP:-93,1:-92),,,,LBCID)
"RTN","ROR10",92,0)
 Q:RC<0 RC
"RTN","ROR10",93,0)
 ;
"RTN","ROR10",94,0)
 S REGNAME=""
"RTN","ROR10",95,0)
 F  S REGNAME=$O(REGLST(REGNAME))  Q:REGNAME=""  D
"RTN","ROR10",96,0)
 . ;--- Get the registry IEN
"RTN","ROR10",97,0)
 . S REGIEN=+$G(REGLST(REGNAME))  Q:REGIEN'>0
"RTN","ROR10",98,0)
 . S IENS=REGIEN_","
"RTN","ROR10",99,0)
 . ;--- Check if all registry messages have been sent
"RTN","ROR10",100,0)
 . I $D(RORLBLST("RM",REGIEN))<10  D:$D(RORLBLST("RM",REGIEN))  Q
"RTN","ROR10",101,0)
 . . K RORLBLST("RM",REGIEN)
"RTN","ROR10",102,0)
 . . ;--- Clear the HL7 ATTEMPT COUNTER field
"RTN","ROR10",103,0)
 . . S RORFDA(798.1,IENS,19.3)="@"
"RTN","ROR10",104,0)
 . . ;--- Check for an automatic backpull definition
"RTN","ROR10",105,0)
 . . S HDTIEN=$$GET1^DIQ(798.1,IENS,21.01,"I",,"RORMSG")
"RTN","ROR10",106,0)
 . . I $G(DIERR)  D DBS^RORERR("RORMSG",-9,,,798.1,IENS)  Q
"RTN","ROR10",107,0)
 . . D:HDTIEN>0
"RTN","ROR10",108,0)
 . . . ;--- Reset the automatic backpull mode
"RTN","ROR10",109,0)
 . . . S RORFDA(798.1,IENS,21.01)="@"
"RTN","ROR10",110,0)
 . . . ;--- Complete the automatic backpull
"RTN","ROR10",111,0)
 . . . S TMP=$$COMPLETE^RORHDT06(HDTIEN,REGNAME)
"RTN","ROR10",112,0)
 . ;--- Increment the HL7 ATTEMPT COUNTER for registries with unsent
"RTN","ROR10",113,0)
 . ;--- message(s) and exclude those registries from data extraction.
"RTN","ROR10",114,0)
 . S TMP=$$GET1^DIQ(798.1,IENS,19.3,,,"RORMSG")
"RTN","ROR10",115,0)
 . D:$G(DIERR) DBS^RORERR("RORMSG",-9,,,798.1,IENS)
"RTN","ROR10",116,0)
 . S RORFDA(798.1,IENS,19.3)=TMP+1
"RTN","ROR10",117,0)
 . K REGLST(REGNAME)
"RTN","ROR10",118,0)
 ;
"RTN","ROR10",119,0)
 ;=== Update the registry parameters if necessary
"RTN","ROR10",120,0)
 D:$D(RORFDA)>1
"RTN","ROR10",121,0)
 . D FILE^DIE(,"RORFDA","RORMSG")
"RTN","ROR10",122,0)
 . D:$G(DIERR) DBS^RORERR("RORMSG",-9,,,798.1)
"RTN","ROR10",123,0)
 ;
"RTN","ROR10",124,0)
 ;=== Notify the AAC and local coordinators if necessary
"RTN","ROR10",125,0)
 D:$D(RORLBLST("RM"))>1 NOTIFY^ROR11()
"RTN","ROR10",126,0)
 ;
"RTN","ROR10",127,0)
 ;=== Success
"RTN","ROR10",128,0)
 Q 0
"RTN","ROR10",129,0)
 ;
"RTN","ROR10",130,0)
 ;***** PROCESSES THE TASK PARAMETERS
"RTN","ROR10",131,0)
 ;
"RTN","ROR10",132,0)
 ; .REGLST       Reference to a local variable where the list of
"RTN","ROR10",133,0)
 ;               registry names is returned to
"RTN","ROR10",134,0)
 ;
"RTN","ROR10",135,0)
 ; Return values:
"RTN","ROR10",136,0)
 ;       <0  Error code
"RTN","ROR10",137,0)
 ;        0  Ok
"RTN","ROR10",138,0)
 ;
"RTN","ROR10",139,0)
TASKPRMS(REGLST) ;
"RTN","ROR10",140,0)
 N %DT,DTOUT,INFO,REGNAME,TMP,X,Y
"RTN","ROR10",141,0)
 ;--- Log the task parameters
"RTN","ROR10",142,0)
 D TP(.INFO,"RORFLSET")
"RTN","ROR10",143,0)
 D TP(.INFO,"RORFLCLR")
"RTN","ROR10",144,0)
 D TP(.INFO,"RORMNTSK")
"RTN","ROR10",145,0)
 D TP(.INFO,"RORSUSP")
"RTN","ROR10",146,0)
 D LOG^RORLOG(,"Task Parameters",,.INFO)
"RTN","ROR10",147,0)
 ;--- Maximum number of subtasks
"RTN","ROR10",148,0)
 S RORMNTSK=$S(RORMNTSK'="":$TR(RORMNTSK,"-","^"),1:"2^3^AUTO")
"RTN","ROR10",149,0)
 ;--- Suspension parameters
"RTN","ROR10",150,0)
 D:RORSUSP'=""
"RTN","ROR10",151,0)
 . S TMP=RORSUSP,RORSUSP=""
"RTN","ROR10",152,0)
 . F I=1,2  D  S:$G(Y)>0 $P(RORSUSP,"^",I)=Y#1
"RTN","ROR10",153,0)
 . . S X=$P(TMP,"-",I),%DT="R"  D ^%DT
"RTN","ROR10",154,0)
 S RC=$$REGSEL^RORUTL01("I")  ;only initialized registries
"RTN","ROR10",155,0)
 Q:RC<0 RC
"RTN","ROR10",156,0)
 ;--- Flags
"RTN","ROR10",157,0)
 S RORFLCLR=$$UP^XLFSTR(RORFLCLR)
"RTN","ROR10",158,0)
 S RORFLSET=$$UP^XLFSTR(RORFLSET)
"RTN","ROR10",159,0)
 Q 0
"RTN","ROR10",160,0)
 ;
"RTN","ROR10",161,0)
TP(INFO,NAME) ;
"RTN","ROR10",162,0)
 S @NAME=$$TRIM^XLFSTR($G(@NAME))  Q:@NAME=""
"RTN","ROR10",163,0)
 S INFO($O(INFO(""),-1)+1)=$$LJ^XLFSTR(NAME,8)_" = """_@NAME_""""
"RTN","ROR10",164,0)
 Q
"RTN","RORERR20")
0^15^B71322464^B65392976
"RTN","RORERR20",1,0)
RORERR20 ;HCIOFO/SG - LIST OF ERROR MESSAGES  ; 1/22/06 7:00pm
"RTN","RORERR20",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**18**;Feb 17, 2006;Build 25
"RTN","RORERR20",3,0)
 ;
"RTN","RORERR20",4,0)
 ;***************************************************************************
"RTN","RORERR20",5,0)
 ;***************************************************************************
"RTN","RORERR20",6,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORERR20",7,0)
 ;        
"RTN","RORERR20",8,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORERR20",9,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORERR20",10,0)
 ;ROR*1.5*18   APR  2012   C RAY        Added error code -112
"RTN","RORERR20",11,0)
 ;                                      
"RTN","RORERR20",12,0)
 ;***************************************************************************
"RTN","RORERR20",13,0)
 ;***************************************************************************
"RTN","RORERR20",14,0)
 Q
"RTN","RORERR20",15,0)
 ;
"RTN","RORERR20",16,0)
 ;***** RETURNS THE TEXT OF THE MESSAGE
"RTN","RORERR20",17,0)
 ;
"RTN","RORERR20",18,0)
 ; ERRCODE       Error code
"RTN","RORERR20",19,0)
 ; [.TYPE]       Type of the error
"RTN","RORERR20",20,0)
 ; [ARG1-ARG5]   Optional parameters that substitute the |n| "windows"
"RTN","RORERR20",21,0)
 ;               in the text of the message (for example, the |2| will
"RTN","RORERR20",22,0)
 ;               be substituted by the value of the ARG2).
"RTN","RORERR20",23,0)
 ;
"RTN","RORERR20",24,0)
MSG(ERRCODE,TYPE,ARG1,ARG2,ARG3,ARG4,ARG5) ;
"RTN","RORERR20",25,0)
 S TYPE=6  Q:ERRCODE'<0 ""
"RTN","RORERR20",26,0)
 N ARG,I1,I2,MSG
"RTN","RORERR20",27,0)
 ;--- Get a descriptor of the message
"RTN","RORERR20",28,0)
 S I1=-ERRCODE,MSG=$P($T(MSGLIST+I1),";;",2)
"RTN","RORERR20",29,0)
 S I1=+$TR($P(MSG,U,2)," "),MSG=$P(MSG,U,3,999)
"RTN","RORERR20",30,0)
 S:I1>0 TYPE=I1
"RTN","RORERR20",31,0)
 Q:MSG?." " "Unknown error ("_ERRCODE_")"
"RTN","RORERR20",32,0)
 ;--- Substitute parameters
"RTN","RORERR20",33,0)
 S I1=2
"RTN","RORERR20",34,0)
 F  S I1=$F(MSG,"|",I1-1)  Q:'I1  D
"RTN","RORERR20",35,0)
 . S I2=$F(MSG,"|",I1)  Q:'I2
"RTN","RORERR20",36,0)
 . X "S ARG=$G(ARG"_+$TR($E(MSG,I1,I2-2)," ")_")"
"RTN","RORERR20",37,0)
 . S $E(MSG,I1-1,I2-1)=ARG
"RTN","RORERR20",38,0)
 Q $$TRIM^XLFSTR(MSG)
"RTN","RORERR20",39,0)
 ;
"RTN","RORERR20",40,0)
 ;***** RETURNS TYPE OF THE MESSAGE
"RTN","RORERR20",41,0)
 ;
"RTN","RORERR20",42,0)
 ; ERRCODE       Error code
"RTN","RORERR20",43,0)
 ;
"RTN","RORERR20",44,0)
TYPE(ERRCODE) ;
"RTN","RORERR20",45,0)
 Q:ERRCODE'<0 0
"RTN","RORERR20",46,0)
 N I,TYPE  S I=-ERRCODE
"RTN","RORERR20",47,0)
 S I=$P($T(MSGLIST+I),";;",2),TYPE=+$TR($P(I,U,2)," ")
"RTN","RORERR20",48,0)
 Q $S(TYPE>0:TYPE,1:6)
"RTN","RORERR20",49,0)
 ;
"RTN","RORERR20",50,0)
 ;***** LIST OF THE MESSAGES (THERE SHOULD BE NOTHING AFTER THE LIST!)
"RTN","RORERR20",51,0)
 ;
"RTN","RORERR20",52,0)
 ; The error codes are provided in the table only for clarity.
"RTN","RORERR20",53,0)
 ; Text of the messages are extracted using the $TEXT function and
"RTN","RORERR20",54,0)
 ; absolute values of the ERRCODE parameter.
"RTN","RORERR20",55,0)
 ;
"RTN","RORERR20",56,0)
 ; Message Type:
"RTN","RORERR20",57,0)
 ;               1  Debug          4  Warning
"RTN","RORERR20",58,0)
 ;               2  Information    5  Database Error
"RTN","RORERR20",59,0)
 ;               3  Data Quality   6  Error
"RTN","RORERR20",60,0)
 ;
"RTN","RORERR20",61,0)
MSGLIST ; Code Type  Message Text
"RTN","RORERR20",62,0)
 ;;  -1 ^ 6 ^ Cannot find a descriptor of the registry
"RTN","RORERR20",63,0)
 ;;  -2 ^ 6 ^ Duplicate registry names
"RTN","RORERR20",64,0)
 ;;  -3 ^ 6 ^ Cannot find a descriptor of the selection rule
"RTN","RORERR20",65,0)
 ;;  -4 ^ 6 ^ Duplicate rule names
"RTN","RORERR20",66,0)
 ;;  -5 ^ 6 ^ Circle rule references
"RTN","RORERR20",67,0)
 ;;  -6 ^ 6 ^ Invalid update entry point: |2|
"RTN","RORERR20",68,0)
 ;;  -7 ^ 6 ^ Field '|2|' not found
"RTN","RORERR20",69,0)
 ;;  -8 ^ 6 ^ Duplicate patients in the registry
"RTN","RORERR20",70,0)
 ;;  -9 ^ 5 ^ FileMan DBS call error(s)|2|
"RTN","RORERR20",71,0)
 ;; -10 ^ 6 ^ Bad registry name: '|2|'
"RTN","RORERR20",72,0)
 ;; -11 ^ 6 ^ Cannot lock the record(s) of |2|
"RTN","RORERR20",73,0)
 ;; -12 ^ 6 ^ Cannot load and prepare lab search data
"RTN","RORERR20",74,0)
 ;; -13 ^ 6 ^ Cannot lock the registries
"RTN","RORERR20",75,0)
 ;; -14 ^ 6 ^ Cannot prepare selection rules
"RTN","RORERR20",76,0)
 ;; -15 ^ 6 ^ Error(s) during processing of the patient data
"RTN","RORERR20",77,0)
 ;; -16 ^ 6 ^ Cannot update demographic data
"RTN","RORERR20",78,0)
 ;; -17 ^ 6 ^ Invalid entry point: '|2|'
"RTN","RORERR20",79,0)
 ;; -18 ^ 6 ^ Routine '|2|' does not exist
"RTN","RORERR20",80,0)
 ;; -19 ^ 6 ^ Cannot load the selection rules
"RTN","RORERR20",81,0)
 ;; -20 ^ 6 ^ Cannot sort the selection rules
"RTN","RORERR20",82,0)
 ;; -21 ^ 6 ^ Syntax error in the expression
"RTN","RORERR20",83,0)
 ;; -22 ^ 6 ^ Cannot prepare data extraction definitions
"RTN","RORERR20",84,0)
 ;; -23 ^ 6 ^ Cannot set up HL7 environment variables
"RTN","RORERR20",85,0)
 ;; -24 ^ 6 ^ Cannot send the batch HL7 message
"RTN","RORERR20",86,0)
 ;; -25 ^ 6 ^ No HL7 event driver protocol
"RTN","RORERR20",87,0)
 ;; -26 ^ 3 ^ Neither ICN nor SSN is available
"RTN","RORERR20",88,0)
 ;; -27 ^ 5 ^ Cannot obtain results of the Lab tests
"RTN","RORERR20",89,0)
 ;; -28 ^ 4 ^ No active registries to |2|!
"RTN","RORERR20",90,0)
 ;; -29 ^ 1 ^ Non-existent LOINC code |2| in the registry parameters
"RTN","RORERR20",91,0)
 ;; -30 ^ 5 ^ Duplicate records in the file #95.3 for LOINC code |2|
"RTN","RORERR20",92,0)
 ;; -31 ^ 4 ^ Cannot remove the patient #|1| from the pending list
"RTN","RORERR20",93,0)
 ;; -32 ^ 6 ^ Incorrect data extraction period: '|2|-|3|'
"RTN","RORERR20",94,0)
 ;; -33 ^ 6 ^ Cannot de-queue data extraction task
"RTN","RORERR20",95,0)
 ;; -34 ^ 6 ^ Cannot open an output file
"RTN","RORERR20",96,0)
 ;; -35 ^ 6 ^ Device Handler error
"RTN","RORERR20",97,0)
 ;; -36 ^ 6 ^ Cannot retrieve Patient details (DFN:|1|) from File #|2|
"RTN","RORERR20",98,0)
 ;; -37 ^ 6 ^ Cannot retrieve details of medication
"RTN","RORERR20",99,0)
 ;; -38 ^ 6 ^ Cannot retrieve CPT code
"RTN","RORERR20",100,0)
 ;; -39 ^ 6 ^ Duplicate HL7 message ID in the file #798: '|2|'
"RTN","RORERR20",101,0)
 ;; -40 ^ 6 ^ Undefined variable: '|2|'
"RTN","RORERR20",102,0)
 ;; -41 ^ 2 ^ Registry setup has been completed
"RTN","RORERR20",103,0)
 ;; -42 ^ 4 ^ Task has been interrupted by user or by parent task
"RTN","RORERR20",104,0)
 ;; -43 ^ 6 ^ Error during the |2|. See log files.
"RTN","RORERR20",105,0)
 ;; -44 ^ 6 ^ Invalid extraction entry point: '|2|'
"RTN","RORERR20",106,0)
 ;; -45 ^ 6 ^ Invalid or missing IEN of selection rule
"RTN","RORERR20",107,0)
 ;; -46 ^ 5 ^ Cannot load registry parameters
"RTN","RORERR20",108,0)
 ;; -47 ^ 5 ^ Cannot find the '|2|' drug class
"RTN","RORERR20",109,0)
 ;; -48 ^ 2 ^ Registry '|2|' is inactive
"RTN","RORERR20",110,0)
 ;; -49 ^ 4 ^ Cannot find HL7 message #|2| to check its status
"RTN","RORERR20",111,0)
 ;; -50 ^ 6 ^ Cannot create the '|2|' checkpoint!
"RTN","RORERR20",112,0)
 ;; -51 ^ 6 ^ Cannot complete the '|2|' checkpoint!
"RTN","RORERR20",113,0)
 ;; -52 ^ 6 ^ Cannot find HL7 message ID in the file #798: '|2|'
"RTN","RORERR20",114,0)
 ;; -53 ^ 6 ^ Cannot enable the '|2|' protocol
"RTN","RORERR20",115,0)
 ;; -54 ^ 6 ^ The '|2|' Lab Search is not defined
"RTN","RORERR20",116,0)
 ;; -55 ^ 4 ^ No indicators are defined for the '|2|' Lab Search
"RTN","RORERR20",117,0)
 ;; -56 ^ 6 ^ Error code '|2|' is returned by the '|3|'
"RTN","RORERR20",118,0)
 ;; -57 ^ 4 ^ Error code '|2|' is returned by the '|3|'
"RTN","RORERR20",119,0)
 ;; -58 ^ 6 ^ File '|2|' not found
"RTN","RORERR20",120,0)
 ;; -59 ^ 3 ^ ICN checksum is shorter than 6 digits
"RTN","RORERR20",121,0)
 ;; -60 ^ 6 ^ Subtask #|2| crashed (see TaskMan logs)
"RTN","RORERR20",122,0)
 ;; -61 ^ 6 ^ Cannot start the registry update in multitask mode
"RTN","RORERR20",123,0)
 ;; -62 ^ 2 ^ Registry Update subtask #|2| has been scheduled
"RTN","RORERR20",124,0)
 ;; -63 ^ 6 ^ Data search in file #|2| is not supported
"RTN","RORERR20",125,0)
 ;; -64 ^ 6 ^ Data element #|3| (file #|2|) is not supported
"RTN","RORERR20",126,0)
 ;; -65 ^ 6 ^ |4| value of element #|3| (file #|2|) is not supported
"RTN","RORERR20",127,0)
 ;; -66 ^ 1 ^ Patient was skipped due to counter in the file #798.3
"RTN","RORERR20",128,0)
 ;; -67 ^ 6 ^ CCR HL7 messages created |2| day(s) ago have not been sent yet.
"RTN","RORERR20",129,0)
 ;; -68 ^ 6 ^ Invalid header of the HL7 message (or no header at all)
"RTN","RORERR20",130,0)
 ;; -69 ^ 6 ^ Cannot find the data element
"RTN","RORERR20",131,0)
 ;; -70 ^ 6 ^ Duplicate names of the data element
"RTN","RORERR20",132,0)
 ;; -71 ^ 1 ^ User entered the "^"
"RTN","RORERR20",133,0)
 ;; -72 ^ 6 ^ Timeout
"RTN","RORERR20",134,0)
 ;; -73 ^ 4 ^ HL7 message #|2| is being processed/transmitted
"RTN","RORERR20",135,0)
 ;; -74 ^ 6 ^ Number of messages in the batch does not match the BTS
"RTN","RORERR20",136,0)
 ;; -75 ^ 6 ^ Not all four HL7 encoding characters are defined
"RTN","RORERR20",137,0)
 ;; -76 ^ 6 ^ The [|2|] option must not be running during installation
"RTN","RORERR20",138,0)
 ;; -77 ^ 6 ^ Cannot create MailMan message stub
"RTN","RORERR20",139,0)
 ;; -78 ^ 6 ^ Scheduled subtasks have not been started by TaskMan
"RTN","RORERR20",140,0)
 ;; -79 ^ 6 ^ Missing or dangling pointer
"RTN","RORERR20",141,0)
 ;; -80 ^ 6 ^ Cannot find a list item (file #799.1)
"RTN","RORERR20",142,0)
 ;; -81 ^ 6 ^ Duplicate item codes (file #799.1)
"RTN","RORERR20",143,0)
 ;; -82 ^ 6 ^ The task '|2|' cannot be scheduled at '|3|'
"RTN","RORERR20",144,0)
 ;; -83 ^ 6 ^ Cannot find the task #|2| in the ROR TASK file
"RTN","RORERR20",145,0)
 ;; -84 ^ 6 ^ The task #|2| has not responded on the stop request yet
"RTN","RORERR20",146,0)
 ;; -85 ^ 6 ^ Invalid task number: '|2|'
"RTN","RORERR20",147,0)
 ;; -86 ^ 6 ^ Cannot find report parameters (file #799.34)
"RTN","RORERR20",148,0)
 ;; -87 ^ 6 ^ Duplicate report parameters (file #799.34)
"RTN","RORERR20",149,0)
 ;; -88 ^ 6 ^ Parameter |2| has an invalid value: '|3|'
"RTN","RORERR20",150,0)
 ;; -89 ^ 2 ^ No output file has been created
"RTN","RORERR20",151,0)
 ;; -90 ^ 2 ^ The patient has been deleted from the |2| registry
"RTN","RORERR20",152,0)
 ;; -91 ^ 6 ^ Illegal attempt to access the registries from the GUI
"RTN","RORERR20",153,0)
 ;; -92 ^ 6 ^ Cannot re-queue unsent batch HL7 message #|2|
"RTN","RORERR20",154,0)
 ;; -93 ^ 4 ^ Batch HL7 message #|2| has been re-queued
"RTN","RORERR20",155,0)
 ;; -94 ^ 2 ^ Data Extraction task #|2| has been scheduled
"RTN","RORERR20",156,0)
 ;; -95 ^ 3 ^ Invalid value. File: #|2|; IENS: "|3|"; Field(s): |4|
"RTN","RORERR20",157,0)
 ;; -96 ^ 6 ^ Cannot rename the '|2|' security key to '|3|'
"RTN","RORERR20",158,0)
 ;; -97 ^ 6 ^ The patient is not in the |2|
"RTN","RORERR20",159,0)
 ;; -98 ^ 6 ^ Cannot get closed root name of file #|2| (IENS: |3|)
"RTN","RORERR20",160,0)
 ;; -99 ^ 1 ^ FileMan DBS call error(s)|2|
"RTN","RORERR20",161,0)
 ;;-100 ^ 3 ^ |2| was returned by the |3|
"RTN","RORERR20",162,0)
 ;;-101 ^ 2 ^ Your CCR task #|2| has finished (|3|)
"RTN","RORERR20",163,0)
 ;;-102 ^ 5 ^ Invalid or missing record in the |2| file (IEN: |3|)
"RTN","RORERR20",164,0)
 ;;-103 ^ 6 ^ The registry |2| has not been populated yet.
"RTN","RORERR20",165,0)
 ;;-104 ^ 4 ^ XML parsing warning
"RTN","RORERR20",166,0)
 ;;-105 ^ 6 ^ XML parsing error
"RTN","RORERR20",167,0)
 ;;-106 ^ 6 ^ Error(s) during parsing the report parameters
"RTN","RORERR20",168,0)
 ;;-107 ^ 6 ^ Incompatible version of the GUI
"RTN","RORERR20",169,0)
 ;;-108 ^ 2 ^ Backpull parameters have been loaded.
"RTN","RORERR20",170,0)
 ;;-109 ^ 2 ^ Automatic backpull has been completed.
"RTN","RORERR20",171,0)
 ;;-110 ^ 5 ^ Pointer(s) in the restored data cannot be resolved.
"RTN","RORERR20",172,0)
 ;;-111 ^ 2 ^ Patient "merge" from DFN #|2| to DFN #|3|.
"RTN","RORERR20",173,0)
 ;;-112 ^ 5 ^ Intialization of |2| could not be completed.
"RTN","ROREXT")
0^8^B26631704^B24189218
"RTN","ROREXT",1,0)
ROREXT ;HCIOFO/SG - DATA EXTRACTION & TRANSMISSION ; 11/1/05 3:08pm
"RTN","ROREXT",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**18**;Feb 17, 2006;Build 25
"RTN","ROREXT",3,0)
 ;*************************************************************************
"RTN","ROREXT",4,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","ROREXT",5,0)
 ;        
"RTN","ROREXT",6,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","ROREXT",7,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","ROREXT",8,0)
 ;ROR*1.5*18   APR  2012   C RAY        Added logic to prevent data
"RTN","ROREXT",9,0)
 ;                                      transmission if registry is local         
"RTN","ROREXT",10,0)
 ;***********************************************************************
"RTN","ROREXT",11,0)
 ;
"RTN","ROREXT",12,0)
 ; ROREXT -------------- DATA EXTRACTION DESCRIPTOR
"RTN","ROREXT",13,0)
 ;
"RTN","ROREXT",14,0)
 ; ROREXT("DTAR",        Data is extracted only in those areas that
"RTN","ROREXT",15,0)
 ;                       are listed here. If a data area time frame
"RTN","ROREXT",16,0)
 ;                       is provided, then it is merged with the
"RTN","ROREXT",17,0)
 ;                       regular time frame(s) for that area.
"RTN","ROREXT",18,0)
 ;   DataArea)           "" or Data Area Time Frame
"RTN","ROREXT",19,0)
 ;                         ^01: Start Date (FileMan)
"RTN","ROREXT",20,0)
 ;                         ^02: End Date   (FileMan)
"RTN","ROREXT",21,0)
 ;
"RTN","ROREXT",22,0)
 ; ROREXT("DXBEG")       Start date of the data extraction (opt'l)
"RTN","ROREXT",23,0)
 ;                       If this node is defined and greater than
"RTN","ROREXT",24,0)
 ;                       zero, data extraction starts from this date
"RTN","ROREXT",25,0)
 ;                       (instead of individual start date for each
"RTN","ROREXT",26,0)
 ;                       patient in the registry).
"RTN","ROREXT",27,0)
 ;
"RTN","ROREXT",28,0)
 ; ROREXT("DXEND")       End date of the data extraction
"RTN","ROREXT",29,0)
 ;                       (these nodes are set by $$PREPARE^ROREXPR).
"RTN","ROREXT",30,0)
 ;
"RTN","ROREXT",31,0)
 ; ROREXT("EXTRDAYS")    Extraction period for a new patient
"RTN","ROREXT",32,0)
 ;
"RTN","ROREXT",33,0)
 ; ROREXT("FLAGS")       Flags to control processing (see the
"RTN","ROREXT",34,0)
 ;                       TASK^ROR for possible values).
"RTN","ROREXT",35,0)
 ;
"RTN","ROREXT",36,0)
 ; ROREXT("HDTIEN")      When a historical data extraction is
"RTN","ROREXT",37,0)
 ;                       performed, this node stores IEN of
"RTN","ROREXT",38,0)
 ;                       the record of the ROR HISTORICAL DATA
"RTN","ROREXT",39,0)
 ;                       EXTRACTION file (#799.6).
"RTN","ROREXT",40,0)
 ;
"RTN","ROREXT",41,0)
 ; ROREXT("HL7BUF")      Closed root of the buffer where the HL7
"RTN","ROREXT",42,0)
 ;                       message is constructed. By default, the
"RTN","ROREXT",43,0)
 ;                       ^TMP("HLS",$J) is used.
"RTN","ROREXT",44,0)
 ;
"RTN","ROREXT",45,0)
 ; ROREXT("HL7CNT")      Counter of the messages in the batch
"RTN","ROREXT",46,0)
 ; ROREXT("HL7DT")       Date of the batch message creation (FileMan)
"RTN","ROREXT",47,0)
 ; ROREXT("HL7MID")      Message ID of the "stub" message
"RTN","ROREXT",48,0)
 ; ROREXT("HL7MTIEN")    IEN in the File #772 for the "stub" message
"RTN","ROREXT",49,0)
 ; ROREXT("HL7PROT")     Name of the event driver protocol
"RTN","ROREXT",50,0)
 ;
"RTN","ROREXT",51,0)
 ; ROREXT("HL7PTR")      Subscript of the last occupied sub-node of
"RTN","ROREXT",52,0)
 ;                       the message buffer (see the "HL7BUF").
"RTN","ROREXT",53,0)
 ;                       Value of the variable is incremented before
"RTN","ROREXT",54,0)
 ;                       storing the segment.
"RTN","ROREXT",55,0)
 ;
"RTN","ROREXT",56,0)
 ; ROREXT("HL7SID",
"RTN","ROREXT",57,0)
 ;   SegName)            The next value of the Set ID for this kind
"RTN","ROREXT",58,0)
 ;                       of segments. The $$CREATE^RORHL7 function
"RTN","ROREXT",59,0)
 ;                       resets the Set ID's to 1 for all supported
"RTN","ROREXT",60,0)
 ;                       segments.
"RTN","ROREXT",61,0)
 ;
"RTN","ROREXT",62,0)
 ; ROREXT("HL7SIZE")     Current size of the HL7 batch
"RTN","ROREXT",63,0)
 ;                         ^1: Current size (in bytes)
"RTN","ROREXT",64,0)
 ;                         ^2: 1 if maximum size has been reached
"RTN","ROREXT",65,0)
 ;
"RTN","ROREXT",66,0)
 ; ROREXT("LD",
"RTN","ROREXT",67,0)
 ;   1)                  Number of lag days for the data extraction
"RTN","ROREXT",68,0)
 ;
"RTN","ROREXT",69,0)
 ; ROREXT("MAXHL7SIZE")  Maximum size (in bytes) of an HL7 message
"RTN","ROREXT",70,0)
 ;
"RTN","ROREXT",71,0)
 ; ROREXT("MSGBLD",
"RTN","ROREXT",72,0)
 ;   RegIEN)             Message builder call-back entry point (opt'l)
"RTN","ROREXT",73,0)
 ;
"RTN","ROREXT",74,0)
 ; ROREXT("NBM")         Number of batch messages generated for
"RTN","ROREXT",75,0)
 ;                       the current protocol
"RTN","ROREXT",76,0)
 ;
"RTN","ROREXT",77,0)
 ; ROREXT("PATCH",
"RTN","ROREXT",78,0)
 ;   PatchName)          Defined if the patch is installed
"RTN","ROREXT",79,0)
 ;
"RTN","ROREXT",80,0)
 ; ROREXT("SUSPEND")     DATA EXTRACTION SUSPENSION PARAMETERS
"RTN","ROREXT",81,0)
 ;                         ^1: Suspension start time (FileMan)
"RTN","ROREXT",82,0)
 ;                         ^2: Suspension end time (FileMan)
"RTN","ROREXT",83,0)
 ;
"RTN","ROREXT",84,0)
 ;                       For example, to suspend the data extraction
"RTN","ROREXT",85,0)
 ;                       from 7:00 until 18:00 this node should have
"RTN","ROREXT",86,0)
 ;                       the following value: ".07^.18".
"RTN","ROREXT",87,0)
 ;
"RTN","ROREXT",88,0)
 ; ROREXT("VERSION")     ROR version/patch installed at the site
"RTN","ROREXT",89,0)
 ;                         ^1: Version number (e.g. 1.0)
"RTN","ROREXT",90,0)
 ;                         ^2: Latest patch number (e.g. 5)
"RTN","ROREXT",91,0)
 ;                         ^3: Patch installation date (FileMan)
"RTN","ROREXT",92,0)
 ;
"RTN","ROREXT",93,0)
 ; RORHL --------------- HL7 ENVIRONMENT VARIABLES
"RTN","ROREXT",94,0)
 ;
"RTN","ROREXT",95,0)
 ; RORHL                 This local array contains HL7 environment
"RTN","ROREXT",96,0)
 ;                       variables initialized by INIT^HLFNC2 ("FS",
"RTN","ROREXT",97,0)
 ;                       "ECH" and others).
"RTN","ROREXT",98,0)
 ;
"RTN","ROREXT",99,0)
 ; RORLRC -------------- LIST OF EXTRACTED LAB RESULTS
"RTN","ROREXT",100,0)
 ;
"RTN","ROREXT",101,0)
 ; RORLRC(               Either a list of codes of a Lab results to
"RTN","ROREXT",102,0)
 ;                       extract or "*" for all results (see the LA7SC
"RTN","ROREXT",103,0)
 ;                       parameter of the GCPR^LA7QRY entry point)
"RTN","ROREXT",104,0)
 ;   Seq#)               Lab result code
"RTN","ROREXT",105,0)
 ;                         ^1: Result code
"RTN","ROREXT",106,0)
 ;                         ^2: Coding system ("LN" or "NLT")
"RTN","ROREXT",107,0)
 ;
"RTN","ROREXT",108,0)
 Q
"RTN","ROREXT",109,0)
 ;
"RTN","ROREXT",110,0)
 ;***** PERFORMS THE DATA EXTRACTION
"RTN","ROREXT",111,0)
 ;
"RTN","ROREXT",112,0)
 ; .REGLST       Reference to a local array containing registry
"RTN","ROREXT",113,0)
 ;               names as subscripts and registry IENs as values
"RTN","ROREXT",114,0)
 ;
"RTN","ROREXT",115,0)
 ; [DXBEG]       Data extraction start date (individual start
"RTN","ROREXT",116,0)
 ;               date for each patient by default).
"RTN","ROREXT",117,0)
 ;               Time part of the parameter value is ignored.
"RTN","ROREXT",118,0)
 ;
"RTN","ROREXT",119,0)
 ; [SUSPEND]     Subtask suspension parameters:
"RTN","ROREXT",120,0)
 ;               See description of the ROREXT("SUSPEND") node
"RTN","ROREXT",121,0)
 ;               for details.
"RTN","ROREXT",122,0)
 ;
"RTN","ROREXT",123,0)
 ; [FLAGS]       Flags to control processing.
"RTN","ROREXT",124,0)
 ;               See description of the TASK^ROR for
"RTN","ROREXT",125,0)
 ;               possible values of the flags.
"RTN","ROREXT",126,0)
 ;
"RTN","ROREXT",127,0)
 ; Return Values:
"RTN","ROREXT",128,0)
 ;       <0  Error code (see MSGLIST^RORERR20)
"RTN","ROREXT",129,0)
 ;        0  Ok
"RTN","ROREXT",130,0)
 ;
"RTN","ROREXT",131,0)
EXTRACT(REGLST,DXBEG,SUSPEND,FLAGS) ;
"RTN","ROREXT",132,0)
 N ROREXT        ; Data extraction descriptor
"RTN","ROREXT",133,0)
 N ROREXTSV      ; Backup copy of the descriptor
"RTN","ROREXT",134,0)
 ;
"RTN","ROREXT",135,0)
 N CNT,ERRCNT,PGRLST,RC,REGIEN,REGNAME,RORGLST,RORMSG,RORPROT,TMP,ZTDESC,ZTDTH,ZTRTN,ZTSAVE
"RTN","ROREXT",136,0)
 D CLEAR^RORERR("EXTRACT^ROREXT")
"RTN","ROREXT",137,0)
 S (ERRCNT,RC)=0
"RTN","ROREXT",138,0)
 ;
"RTN","ROREXT",139,0)
 ;=== Prepare the common parameters
"RTN","ROREXT",140,0)
 S:$G(DXBEG)>0 ROREXT("DXBEG")=DXBEG
"RTN","ROREXT",141,0)
 S ROREXT("FLAGS")=$$UP^XLFSTR($G(FLAGS))
"RTN","ROREXT",142,0)
 ;--- Enable task suspension if requested
"RTN","ROREXT",143,0)
 I $G(SUSPEND)>0  S:ROREXT("FLAGS")["X" ROREXT("SUSPEND")=SUSPEND
"RTN","ROREXT",144,0)
 ;
"RTN","ROREXT",145,0)
 ;=== Group the registries by the HL7 protocol name
"RTN","ROREXT",146,0)
 S REGNAME=""
"RTN","ROREXT",147,0)
 F  S REGNAME=$O(REGLST(REGNAME))  Q:REGNAME=""  D
"RTN","ROREXT",148,0)
 . ;--- Get the registry IEN
"RTN","ROREXT",149,0)
 . S REGIEN=+REGLST(REGNAME)
"RTN","ROREXT",150,0)
 . I REGIEN'>0  D  Q:REGIEN'>0
"RTN","ROREXT",151,0)
 . . S REGIEN=$$REGIEN^RORUTL02(REGNAME)
"RTN","ROREXT",152,0)
 . ;--- Do not transmit data for local registries
"RTN","ROREXT",153,0)
 . Q:'+($P($G(^ROR(798.1,REGIEN,0)),U,11))
"RTN","ROREXT",154,0)
 . ;--- Get the HL7 protocol name
"RTN","ROREXT",155,0)
 . S RORPROT=$$GET1^DIQ(798.1,REGIEN_",",13,"E",,"RORMSG")
"RTN","ROREXT",156,0)
 . D:$G(DIERR) DBS^RORERR("RORMSG",-9,,,798.1,REGIEN_",")
"RTN","ROREXT",157,0)
 . I RORPROT=""  D  S ERRCNT=ERRCNT+1  Q
"RTN","ROREXT",158,0)
 . . D ERROR^RORERR(-25,,REGNAME)
"RTN","ROREXT",159,0)
 . ;--- Create the reference
"RTN","ROREXT",160,0)
 . S PGRLST(RORPROT,REGNAME)=REGIEN
"RTN","ROREXT",161,0)
 ;
"RTN","ROREXT",162,0)
 ;=== Data extraction
"RTN","ROREXT",163,0)
 M ROREXTSV=ROREXT
"RTN","ROREXT",164,0)
 S RORPROT="",RC=0
"RTN","ROREXT",165,0)
 F CNT=1:1  S RORPROT=$O(PGRLST(RORPROT))  Q:RORPROT=""  D  Q:RC<0
"RTN","ROREXT",166,0)
 . ;--- Prepare the task-specific parameters
"RTN","ROREXT",167,0)
 . K RORGLST  M RORGLST=PGRLST(RORPROT)
"RTN","ROREXT",168,0)
 . S ROREXT("HL7PROT")=RORPROT
"RTN","ROREXT",169,0)
 . ;--- Single-task data extraction (if requested)
"RTN","ROREXT",170,0)
 . I ROREXT("FLAGS")["S"  D  Q
"RTN","ROREXT",171,0)
 . . S TMP=$$INTEXT^ROREXT01(.RORGLST)
"RTN","ROREXT",172,0)
 . . I TMP<0  S:TMP=-42 RC=TMP  S ERRCNT=ERRCNT+1
"RTN","ROREXT",173,0)
 . . K ROREXT  M ROREXT=ROREXTSV
"RTN","ROREXT",174,0)
 . ;--- Otherwise, start a separate task
"RTN","ROREXT",175,0)
 . S ZTRTN="TASK^ROREXT",ZTIO=""
"RTN","ROREXT",176,0)
 . S ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,,,,(CNT-1)*30)
"RTN","ROREXT",177,0)
 . S ZTDESC="CCR Data Extraction ("_RORPROT_")"
"RTN","ROREXT",178,0)
 . F TMP="ROREXT(","RORGLST(","RORPARM("  S ZTSAVE(TMP)=""
"RTN","ROREXT",179,0)
 . D ^%ZTLOAD
"RTN","ROREXT",180,0)
 . ;--- Log the action
"RTN","ROREXT",181,0)
 . D LOG^RORERR(-94,,,ZTSK)
"RTN","ROREXT",182,0)
 ;
"RTN","ROREXT",183,0)
 ;=== Error processing
"RTN","ROREXT",184,0)
 Q $S(RC<0:RC,ERRCNT>0:-43,1:0)
"RTN","ROREXT",185,0)
 ;
"RTN","ROREXT",186,0)
 ;***** ENTRY POINT FOR DATA EXTRACTION TASK
"RTN","ROREXT",187,0)
 ;
"RTN","ROREXT",188,0)
 ; ROREXT        Data extraction descriptor
"RTN","ROREXT",189,0)
 ; RORGLST       List of registry names and IENs
"RTN","ROREXT",190,0)
 ; RORPARM       Task-wide constants and variables
"RTN","ROREXT",191,0)
 ;
"RTN","ROREXT",192,0)
TASK ;
"RTN","ROREXT",193,0)
 N RORERRDL      ; Default error location
"RTN","ROREXT",194,0)
 N RORERROR      ; Error processing data
"RTN","ROREXT",195,0)
 ;
"RTN","ROREXT",196,0)
 N RC,TMP  K ZTREQ
"RTN","ROREXT",197,0)
 ;--- Initialize the variables
"RTN","ROREXT",198,0)
 D CLEAR^RORERR("TASK^ROREXT",1)
"RTN","ROREXT",199,0)
 ;--- Disable debug output (task has no output device)
"RTN","ROREXT",200,0)
 S:$G(RORPARM("DEBUG"))>1 RORPARM("DEBUG")=1
"RTN","ROREXT",201,0)
 ;--- Data extraction
"RTN","ROREXT",202,0)
 S RC=$$INTEXT^ROREXT01(.RORGLST,ZTSK)
"RTN","ROREXT",203,0)
 ;--- Error processing and notifications
"RTN","ROREXT",204,0)
 S:RC<0 ZTSTOP=1
"RTN","ROREXT",205,0)
 I RC=-42  D ALERT^RORUTL01(.RORGLST,-42)  Q
"RTN","ROREXT",206,0)
 D:RC<0 ALERT^RORUTL01(.RORGLST,-43,,,,"data extraction")
"RTN","ROREXT",207,0)
 S ZTREQ="@"
"RTN","ROREXT",208,0)
 Q
"RTN","RORP018")
0^^B38673890^n/a
"RTN","RORP018",1,0)
RORP018 ;BPOIFO/CLR  POST INSTALL PATCH 18 ;7/25/2012
"RTN","RORP018",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**18**;;Build 25
"RTN","RORP018",3,0)
 ; This routine uses the following IAs:
"RTN","RORP018",4,0)
 ;
"RTN","RORP018",5,0)
 ; #2263    XPAR (supported)
"RTN","RORP018",6,0)
 ; #10141   XPDUTL (supported)
"RTN","RORP018",7,0)
 ;*****************************************************************************
"RTN","RORP018",8,0)
 ;ICD9   Add Other depression
"RTN","RORP018",9,0)
 ;*****************************************************************************
"RTN","RORP018",10,0)
 N RORVALUE,RORERR,RORENTITY,RORPARAMETER,RORINSTANCE
"RTN","RORP018",11,0)
 S RORENTITY="PKG.CLINICAL CASE REGISTRIES"
"RTN","RORP018",12,0)
 S RORPARAMETER="ROR REPORT PARAMS TEMPLATE"
"RTN","RORP018",13,0)
 S RORINSTANCE="13::Other Depression"
"RTN","RORP018",14,0)
 ;delete it first (in case it already exists)
"RTN","RORP018",15,0)
 D DEL^XPAR(RORENTITY,RORPARAMETER,RORINSTANCE,.RORERR)
"RTN","RORP018",16,0)
 S RORVALUE="CCR Predefined Report Template"
"RTN","RORP018",17,0)
 S RORVALUE(1,0)="<?xml version="_"""1.0"""_" encoding="_"""UTF-8"""_"?>"
"RTN","RORP018",18,0)
 S RORVALUE(2,0)="<PARAMS>"
"RTN","RORP018",19,0)
 S RORVALUE(3,0)="<ICD9LST>"
"RTN","RORP018",20,0)
 S RORVALUE(4,0)="<GROUP ID="_"""OtherDepression"""_">"
"RTN","RORP018",21,0)
 S RORVALUE(5,0)="<ICD9 ID="_"""293.83"""_">MOOD DISORDER IN COND CLASS ELSEWHERE</ICD9>"
"RTN","RORP018",22,0)
 S RORVALUE(6,0)="<ICD9 ID="_"""296.90"""_">UNSPEC EPISODIC MOOD DISORDER</ICD9>"
"RTN","RORP018",23,0)
 S RORVALUE(7,0)="<ICD9 ID="_"""296.99"""_">OTHER SPEC EPISODIC MOOD DISORDER</ICD9>"
"RTN","RORP018",24,0)
 S RORVALUE(8,0)="<ICD9 ID="_"""298.0"""_">DEPRESS TYPE PSYCHOSIS</ICD9>"
"RTN","RORP018",25,0)
 S RORVALUE(9,0)="<ICD9 ID="_"""300.4"""_">DYSTHYMIC DISORDER</ICD9>"
"RTN","RORP018",26,0)
 S RORVALUE(10,0)="<ICD9 ID="_"""301.12"""_">CHR DEPRESs PERSONALITY DISORDER</ICD9>"
"RTN","RORP018",27,0)
 S RORVALUE(11,0)="<ICD9 ID="_"""309.0"""_">ADJ DISORDER W DEPRESS MOOD</ICD9>"
"RTN","RORP018",28,0)
 S RORVALUE(12,0)="<ICD9 ID="_"""309.1"""_">ADJ REACTION W PROLONG DEPRESs REACTION</ICD9>"
"RTN","RORP018",29,0)
 S RORVALUE(13,0)="<ICD9 ID="_"""311."""_">DEPRESS DISORDER, NOT ELSEWHERE CLASS</ICD9>"
"RTN","RORP018",30,0)
 S RORVALUE(14,0)="</GROUP>"
"RTN","RORP018",31,0)
 S RORVALUE(15,0)="</ICD9LST>"
"RTN","RORP018",32,0)
 S RORVALUE(16,0)="<PANELS>"
"RTN","RORP018",33,0)
 S RORVALUE(17,0)="<PANEL ID="_"""160"""_"/>"
"RTN","RORP018",34,0)
 S RORVALUE(18,0)="</PANELS>"
"RTN","RORP018",35,0)
 S RORVALUE(19,0)="</PARAMS>"
"RTN","RORP018",36,0)
 ;add it
"RTN","RORP018",37,0)
 D ADD^XPAR(RORENTITY,RORPARAMETER,RORINSTANCE,.RORVALUE,.RORERR)
"RTN","RORP018",38,0)
 D BMES^XPDUTL("Adding Other Depression common template...")
"RTN","RORP018",39,0)
 ;*****************************************************************************
"RTN","RORP018",40,0)
 ;ICD9  Add Major depression ;
"RTN","RORP018",41,0)
 ;*****************************************************************************
"RTN","RORP018",42,0)
 N RORVALUE,RORERR,RORENTITY,RORPARAMETER,RORINSTANCE
"RTN","RORP018",43,0)
 S RORENTITY="PKG.CLINICAL CASE REGISTRIES"
"RTN","RORP018",44,0)
 S RORPARAMETER="ROR REPORT PARAMS TEMPLATE"
"RTN","RORP018",45,0)
 S RORINSTANCE="13::Major Depression"
"RTN","RORP018",46,0)
 ;delete it first (in case it already exists)
"RTN","RORP018",47,0)
 D DEL^XPAR(RORENTITY,RORPARAMETER,RORINSTANCE,.RORERR)
"RTN","RORP018",48,0)
 S RORVALUE="CCR Predefined Report Template"
"RTN","RORP018",49,0)
 S RORVALUE(1,0)="<?xml version="_"""1.0"""_" encoding="_"""UTF-8"""_"?>"
"RTN","RORP018",50,0)
 S RORVALUE(2,0)="<PARAMS>"
"RTN","RORP018",51,0)
 S RORVALUE(3,0)="<ICD9LST>"
"RTN","RORP018",52,0)
 S RORVALUE(4,0)="<GROUP ID="_"""MajorDepression"""_">"
"RTN","RORP018",53,0)
 S RORVALUE(5,0)="<ICD9 ID="_"""296.20"""_">MAJ DEPRESS AFF DIS, SING EPISODE, UNSPEc DEG</ICD9>"
"RTN","RORP018",54,0)
 S RORVALUE(6,0)="<ICD9 ID="_"""296.21"""_">MAJ DEPRESs AFF DIS, SING EPISODE, MILD DEG</ICD9>"
"RTN","RORP018",55,0)
 S RORVALUE(7,0)="<ICD9 ID="_"""296.22"""_">MAJ DEPRESS AFF DIS, SING EPISODE, MODERATE DEGR</ICD9>"
"RTN","RORP018",56,0)
 S RORVALUE(8,0)="<ICD9 ID="_"""296.23"""_">MAJ DEPRESS AFF DIS, SING EPISODE, SEVERE DEGR, WO MENTION OF PSYCHOTIC BEHAVIOR</ICD9>"
"RTN","RORP018",57,0)
 S RORVALUE(9,0)="<ICD9 ID="_"""296.24"""_">MAJ DEPRESS AFF DIS, SING EPISODE, SEVERE DEGR, SPEC AS W PSYCHOTIC BEHAVIOR</ICD9>"
"RTN","RORP018",58,0)
 S RORVALUE(10,0)="<ICD9 ID="_"""296.25"""_">MAJ DEPRESS AFF DIS, SING EPISODE, IN PART OR UNSPEC REMISS</ICD9>"
"RTN","RORP018",59,0)
 S RORVALUE(11,0)="<ICD9 ID="_"""296.26"""_">MAJ DEPRESS AFF DIS, SING EPISODE, IN FULL REMISS</ICD9>"
"RTN","RORP018",60,0)
 S RORVALUE(12,0)="<ICD9 ID="_"""296.30"""_">MAJ DEPRESS AFF DIS, RECUR EPISODE, UNSPEC DEGREE</ICD9>"
"RTN","RORP018",61,0)
 S RORVALUE(13,0)="<ICD9 ID="_"""296.31"""_">MAJ DEPRESS AFF DIS, RECUR EPISODE, MILD DEG</ICD9>"
"RTN","RORP018",62,0)
 S RORVALUE(14,0)="<ICD9 ID="_"""296.32"""_">MAJ DEPRESS AFF DIS, RECUR EPISODE, MODERATE DEG</ICD9>"
"RTN","RORP018",63,0)
 S RORVALUE(15,0)="</GROUP>"
"RTN","RORP018",64,0)
 S RORVALUE(16,0)="</ICD9LST>"
"RTN","RORP018",65,0)
 S RORVALUE(17,0)="<PANELS>"
"RTN","RORP018",66,0)
 S RORVALUE(18,0)="<PANEL ID="_"""160"""_"/>"
"RTN","RORP018",67,0)
 S RORVALUE(19,0)="</PANELS>"
"RTN","RORP018",68,0)
 S RORVALUE(20,0)="</PARAMS>"
"RTN","RORP018",69,0)
 ;add it
"RTN","RORP018",70,0)
 D ADD^XPAR(RORENTITY,RORPARAMETER,RORINSTANCE,.RORVALUE,.RORERR)
"RTN","RORP018",71,0)
 D BMES^XPDUTL("Adding Major Depression common template...")
"RTN","RORP018",72,0)
 ;*****************************************************************************
"RTN","RORP018",73,0)
 ;ICD9 Delete Depression
"RTN","RORP018",74,0)
 ;*****************************************************************************
"RTN","RORP018",75,0)
 N RORVALUE,RORERR,RORENTITY,RORPARAMETER,RORINSTANCE
"RTN","RORP018",76,0)
 S RORENTITY="PKG.CLINICAL CASE REGISTRIES"
"RTN","RORP018",77,0)
 S RORPARAMETER="ROR REPORT PARAMS TEMPLATE"
"RTN","RORP018",78,0)
 S RORINSTANCE="13::Depression"
"RTN","RORP018",79,0)
 ;delete it 
"RTN","RORP018",80,0)
 D DEL^XPAR(RORENTITY,RORPARAMETER,RORINSTANCE,.RORERR)
"RTN","RORP018",81,0)
 D BMES^XPDUTL("Deleting Depression common template...")
"RTN","RORP018",82,0)
 ;*****************************************************************************
"RTN","RORP018",83,0)
 ;Update to ROR METADATA
"RTN","RORP018",84,0)
 ;*****************************************************************************
"RTN","RORP018",85,0)
 N FILE,IX,ERRCNT,NODE,IENS
"RTN","RORP018",86,0)
 N DA,DIK,RORFDA,RORDATA,RORIEN,RORIENS,DIERR
"RTN","RORP018",87,0)
 S DA=45,DIK="^ROR(799.2," I $D(^ROR(799.2,45))>0 D ^DIK  ;delete if exists
"RTN","RORP018",88,0)
 S ERRCNT=0
"RTN","RORP018",89,0)
 S RORIEN(1)=45
"RTN","RORP018",90,0)
 S RORFDA(799.2,"+1,",.01)=45
"RTN","RORP018",91,0)
 S RORFDA(799.2,"+1,",1)=2
"RTN","RORP018",92,0)
 F I=1:1:13 S RORDATA=$P($T(META45+I),";",2) Q:RORDATA=""  D
"RTN","RORP018",93,0)
 . S RORIENS="+"_(I+1)_",+1,"
"RTN","RORP018",94,0)
 . S RORFDA(799.22,RORIENS,.01)=$P(RORDATA,U)
"RTN","RORP018",95,0)
 . S RORFDA(799.22,RORIENS,.02)=$P(RORDATA,U,2)
"RTN","RORP018",96,0)
 . S RORFDA(799.22,RORIENS,2)=$P(RORDATA,U,3)
"RTN","RORP018",97,0)
 . S RORFDA(799.22,RORIENS,4)=$P(RORDATA,U,4)
"RTN","RORP018",98,0)
 . S RORFDA(799.22,RORIENS,1)=$P(RORDATA,U,5)
"RTN","RORP018",99,0)
 . S RORFDA(799.22,RORIENS,6)=$P(RORDATA,U,6)
"RTN","RORP018",100,0)
 D UPDATE^DIE(,"RORFDA","RORIEN","RORMSG")
"RTN","RORP018",101,0)
 I $D(DIERR) S ERRCNT=ERRCNT+1
"RTN","RORP018",102,0)
 I ERRCNT>0 D BMES^XPDUTL("Update to ROR METADATA <<FAILED>>") Q
"RTN","RORP018",103,0)
 S FILE=9000010.07
"RTN","RORP018",104,0)
 S IX=0 F  S IX=$O(^ROR(799.2,FILE,2,IX)) Q:IX'>0  D
"RTN","RORP018",105,0)
 . S NODE=$G(^ROR(799.2,FILE,2,IX,0))
"RTN","RORP018",106,0)
 . I $P(NODE,U)="POV" D
"RTN","RORP018",107,0)
 . . S IENS=IX_","_FILE_","
"RTN","RORP018",108,0)
 . . S RORFDA(799.22,IENS,4)="Internal"
"RTN","RORP018",109,0)
 . . S RORFDA(799.22,IENS,4.2)="01"
"RTN","RORP018",110,0)
 . . D FILE^DIE(,"RORFDA","RORMSG")
"RTN","RORP018",111,0)
 . . I $D(DIERR) S ERRCNT=ERRCNT+1
"RTN","RORP018",112,0)
 S FILE=9000011
"RTN","RORP018",113,0)
 S IX=0 F  S IX=$O(^ROR(799.2,FILE,2,IX)) Q:IX'>0  D
"RTN","RORP018",114,0)
 . S NODE=$G(^ROR(799.2,FILE,2,IX,0))
"RTN","RORP018",115,0)
 . I $P(NODE,U)="DIAGNOSIS" D
"RTN","RORP018",116,0)
 . . S IENS=IX_","_FILE_","
"RTN","RORP018",117,0)
 . . S RORFDA(799.22,IENS,4)="EI"
"RTN","RORP018",118,0)
 . . S RORFDA(799.22,IENS,4.2)="1^.01"
"RTN","RORP018",119,0)
 . . D FILE^DIE(,"RORFDA","RORMSG")
"RTN","RORP018",120,0)
 . . I $D(DIERR) S ERRCNT=ERRCNT+1
"RTN","RORP018",121,0)
 I ERRCNT>0 D BMES^XPDUTL("Update to ROR METADATA <<FAILED>>") Q
"RTN","RORP018",122,0)
 E  D BMES^XPDUTL("Updating ROR METADATA...")
"RTN","RORP018",123,0)
 ;******************************************************************************
"RTN","RORP018",124,0)
 ;Add new entries to the ROR LIST ITEM file (#799.1)
"RTN","RORP018",125,0)
 ; TEXT^TYPE^REGIEN^CODE 
"RTN","RORP018",126,0)
 ;******************************************************************************
"RTN","RORP018",127,0)
 N RORDATA,RORTAG,RORFDA,I,TEXT,TYPE,REGISTRY,CODE,RORERR,ERRCNT
"RTN","RORP018",128,0)
 S ERRCNT=0
"RTN","RORP018",129,0)
 ; add items for auto confirm registries
"RTN","RORP018",130,0)
 S REGISTRY=0 F  S REGISTRY=$O(^ROR(798.1,"C",1,REGISTRY)) Q:REGISTRY'>0  D
"RTN","RORP018",131,0)
 . F I=1:1 S RORDATA=$P($T(LIST+I),";",2) Q:RORDATA=""  D
"RTN","RORP018",132,0)
 . . S TEXT=$P(RORDATA,"^",1) ;TEXT to add
"RTN","RORP018",133,0)
 . . S TYPE=$P(RORDATA,"^",2) ;TYPE to add
"RTN","RORP018",134,0)
 . . S CODE=$P(RORDATA,"^",4) ;CODE to add
"RTN","RORP018",135,0)
 . . ;don't add if it's already in the global
"RTN","RORP018",136,0)
 . . Q:$D(^ROR(799.1,"KEY",TYPE,REGISTRY,CODE))
"RTN","RORP018",137,0)
 . . S RORFDA(799.1,"+1,",.01)=TEXT
"RTN","RORP018",138,0)
 . . S RORFDA(799.1,"+1,",.02)=TYPE
"RTN","RORP018",139,0)
 . . S RORFDA(799.1,"+1,",.03)=REGISTRY
"RTN","RORP018",140,0)
 . . S RORFDA(799.1,"+1,",.04)=CODE
"RTN","RORP018",141,0)
 . . D UPDATE^DIE(,"RORFDA",,"RORERR")
"RTN","RORP018",142,0)
 . . I $D(DIERR) S ERRCNT=ERRCNT+1
"RTN","RORP018",143,0)
 I ERRCNT>0 D BMES^XPDUTL("Update to ROR LIST ITEM <<FAILED>>") Q 
"RTN","RORP018",144,0)
 E  D BMES^XPDUTL("Updating ROR LIST ITEM...")
"RTN","RORP018",145,0)
 Q
"RTN","RORP018",146,0)
 ;
"RTN","RORP018",147,0)
 ;******************************************************************************
"RTN","RORP018",148,0)
 ; Data to be added to ROR METADATA file (#799.2)
"RTN","RORP018",149,0)
 ; DATA NAME^CODE^REQUIRED^VALUE TYPE^LOADER API^FIELD NUMBER
"RTN","RORP018",150,0)
 ;******************************************************************************
"RTN","RORP018",151,0)
META45 ;
"RTN","RORP018",152,0)
 ;PRINCIPAL DIAGNOSIS^101^1^Internal^1^79
"RTN","RORP018",153,0)
 ;SECONDARY DIAGNOSIS 1^102^1^Internal^1^79.16
"RTN","RORP018",154,0)
 ;SECONDARY DIAGNOSIS 2^103^1^Internal^1^79.17
"RTN","RORP018",155,0)
 ;SECONDARY DIAGNOSIS 3^104^1^Internal^1^79.18
"RTN","RORP018",156,0)
 ;SECONDARY DIAGNOSIS 4^105^1^Internal^1^79.19
"RTN","RORP018",157,0)
 ;SECONDARY DIAGNOSIS 5^106^1^Internal^1^79.201
"RTN","RORP018",158,0)
 ;SECONDARY DIAGNOSIS 6^107^1^Internal^1^79.21
"RTN","RORP018",159,0)
 ;SECONDARY DIAGNOSIS 7^108^1^Internal^1^79.22
"RTN","RORP018",160,0)
 ;SECONDARY DIAGNOSIS 8^109^1^Internal^1^79.23
"RTN","RORP018",161,0)
 ;SECONDARY DIAGNOSIS 9^110^1^Internal^1^79.24
"RTN","RORP018",162,0)
 ;PRINCIPAL DIAGNOSIS pre 1986^111^1^Internal^1^80
"RTN","RORP018",163,0)
 ;FACILITY^131^1^Internal^1^3
"RTN","RORP018",164,0)
 ;SUFFIX^132^1^Internal^1^5
"RTN","RORP018",165,0)
 ;
"RTN","RORP018",166,0)
 ;******************************************************************************
"RTN","RORP018",167,0)
 ; Data to be added to ROR LIST ITEM file (#799.1)
"RTN","RORP018",168,0)
 ; TEXT^TYPE^REGIEN^CODE
"RTN","RORP018",169,0)
 ;
"RTN","RORP018",170,0)
 ;******************************************************************************
"RTN","RORP018",171,0)
LIST ;
"RTN","RORP018",172,0)
 ;Registry Lab^3^^1
"RTN","RORP018",173,0)
 ;BMI^5^^1
"RTN","RORP018",174,0)
 ;MELD^6^^1
"RTN","RORP018",175,0)
 ;MELD-Na^6^^2
"RTN","RORP018",176,0)
 ;APRI^6^^3
"RTN","RORP018",177,0)
 ;FIB-4^6^^4
"RTN","RORP018",178,0)
 ;Creatinine clearance by Cockcroft-Gault^7^^1
"RTN","RORP018",179,0)
 ;eGFR by MDRD^7^^2
"RTN","RORP018",180,0)
 ;eGFR by CKD-EPI^7^^3
"RTN","RORRP013")
0^2^B33977201^B24923269
"RTN","RORRP013",1,0)
RORRP013 ;HCIOFO/SG - RPC: ACCESS & SECURITY ; 11/9/05 8:56am
"RTN","RORRP013",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**18**;Feb 17, 2006;Build 25
"RTN","RORRP013",3,0)
 ;;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORRP013",4,0)
 ;        
"RTN","RORRP013",5,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORRP013",6,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORRP013",7,0)
 ;ROR*1.5*18   APR  2012   C RAY        Dynamically rebuilds ACL index
"RTN","RORRP013",8,0)
 ;                                      Returns value of AUTO-CONFIRM
"RTN","RORRP013",9,0)
 ;                                     
"RTN","RORRP013",10,0)
 ;***********************************************************************
"RTN","RORRP013",11,0)
 ; This routine uses the following IAs:
"RTN","RORRP013",12,0)
 ;
"RTN","RORRP013",13,0)
 ; #10103 $$FMADD^XLFDT (supported)
"RTN","RORRP013",14,0)
 ; #10076 Direct read of XUSEC global
"RTN","RORRP013",15,0)
 ;        BLD^DIALOG
"RTN","RORRP013",16,0)
 ;        $$ROOT^DILFD
"RTN","RORRP013",17,0)
 ;        $$GET1^DIQ
"RTN","RORRP013",18,0)
 ;        GETS^DIQ
"RTN","RORRP013",19,0)
 ;
"RTN","RORRP013",20,0)
 Q
"RTN","RORRP013",21,0)
 ;
"RTN","RORRP013",22,0)
 ;***** RETURNS A LIST OF REGISTRIES ACCESSIBLE TO THE GUI USER
"RTN","RORRP013",23,0)
 ; RPC: [ROR GUI ACCESS]
"RTN","RORRP013",24,0)
 ;
"RTN","RORRP013",25,0)
 ; .RESULTS      Reference to a local variable where the results
"RTN","RORRP013",26,0)
 ;               are returned to.
"RTN","RORRP013",27,0)
 ;
"RTN","RORRP013",28,0)
 ; [USER]        User IEN in the NEW PERSON file. By default
"RTN","RORRP013",29,0)
 ;               (if $G(USER)'>0), the DUZ is used).
"RTN","RORRP013",30,0)
 ;
"RTN","RORRP013",31,0)
 ; Return Values:
"RTN","RORRP013",32,0)
 ;
"RTN","RORRP013",33,0)
 ; A negative value of the first "^"-piece of the RESULTS(0) indicates
"RTN","RORRP013",34,0)
 ; an error (see the RPCSTK^RORERR procedure for more details).
"RTN","RORRP013",35,0)
 ; 
"RTN","RORRP013",36,0)
 ; RESULTS(0)            Number of accessible registries
"RTN","RORRP013",37,0)
 ;
"RTN","RORRP013",38,0)
 ; RESULTS(i)            Registry descriptor
"RTN","RORRP013",39,0)
 ;                         ^01: Registry IEN
"RTN","RORRP013",40,0)
 ;                         ^02: Registry name
"RTN","RORRP013",41,0)
 ;                         ^03: Administrator? (0 or 1)
"RTN","RORRP013",42,0)
 ;                         ^04: Short description
"RTN","RORRP013",43,0)
 ;                         ^05: Auto Confirm (0 or 1)
"RTN","RORRP013",44,0)
 ;
"RTN","RORRP013",45,0)
ACREGLST(RESULTS,USER) ;
"RTN","RORRP013",46,0)
 N ADMIN,CNT,IENS,KEY,RC,REGIEN,RORBUF,RORERRDL,RORMSG,TMP
"RTN","RORRP013",47,0)
 N REGNAME,DA
"RTN","RORRP013",48,0)
 K RESULTS  S RESULTS(0)=0
"RTN","RORRP013",49,0)
 D CLEAR^RORERR("ACREGLST^RORRP013",1)
"RTN","RORRP013",50,0)
 ;--- Check the version of the GUI
"RTN","RORRP013",51,0)
 I $G(XWBAPVER)<1.5  D  D RPCSTK^RORERR(.RESULTS,RC)  Q
"RTN","RORRP013",52,0)
 . N DIERR,DIHELP,DIMSG
"RTN","RORRP013",53,0)
 . S TMP("CV")=$S($G(XWBAPVER)>0:XWBAPVER,1:"1.0")
"RTN","RORRP013",54,0)
 . S TMP("RV")="1.5"
"RTN","RORRP013",55,0)
 . D BLD^DIALOG(7980000.006,.TMP,,"RORBUF")
"RTN","RORRP013",56,0)
 . S RC=$$ERROR^RORERR(-107,,.RORBUF)
"RTN","RORRP013",57,0)
 . K RORBUF,TMP
"RTN","RORRP013",58,0)
 ;--- User must be defined
"RTN","RORRP013",59,0)
 I $G(USER)'>0  S USER=+$G(DUZ)  Q:USER'>0
"RTN","RORRP013",60,0)
 ;
"RTN","RORRP013",61,0)
 ;-- Rebuild user ACL index of registry keys
"RTN","RORRP013",62,0)
 S REGIEN=0
"RTN","RORRP013",63,0)
 K ^ROR(798.1,"ACL",DUZ)
"RTN","RORRP013",64,0)
 F  S REGIEN=$O(^ROR(798.1,REGIEN)) Q:REGIEN=""  D
"RTN","RORRP013",65,0)
 . S KEY="",REGNAME=$$REGNAME^RORUTL01(REGIEN) Q:REGNAME=""!'+($P($G(^ROR(798.1,REGIEN,21)),U,4)) 
"RTN","RORRP013",66,0)
 . F  S KEY=$O(^ROR(798.1,REGIEN,18,"B",KEY)) Q:KEY=""  D:$D(^XUSEC(KEY,DUZ))
"RTN","RORRP013",67,0)
 . . S DA=$O(^ROR(798.1,REGIEN,18,"B",KEY,""))
"RTN","RORRP013",68,0)
 . . S ^ROR(798.1,"ACL",DUZ,REGIEN,KEY,DA)=""
"RTN","RORRP013",69,0)
 . . S ^ROR(798.1,"ACL",DUZ,$P(REGNAME,U),KEY,DA)=""
"RTN","RORRP013",70,0)
 ;--- end of re-build
"RTN","RORRP013",71,0)
 ;--- Returns registry descriptors
"RTN","RORRP013",72,0)
 S (CNT,RC,REGIEN)=0
"RTN","RORRP013",73,0)
 F  S REGIEN=$O(^ROR(798.1,"ACL",USER,REGIEN))  Q:REGIEN=""  D  Q:RC<0
"RTN","RORRP013",74,0)
 . Q:REGIEN'>0  S IENS=REGIEN_","  K RORBUF
"RTN","RORRP013",75,0)
 . D GETS^DIQ(798.1,IENS,".01;4;31",,"RORBUF","RORMSG")
"RTN","RORRP013",76,0)
 . I $G(DIERR)  S RC=$$DBS^RORERR("RORMSG",-9,,,798.1,IENS)  Q
"RTN","RORRP013",77,0)
 . ;--- Add the registry descriptor to the list
"RTN","RORRP013",78,0)
 . S CNT=CNT+1,RESULTS(CNT)=REGIEN_"^"_$G(RORBUF(798.1,IENS,.01))
"RTN","RORRP013",79,0)
 . S TMP=$G(RORBUF(798.1,IENS,31))
"RTN","RORRP013",80,0)
 . S $P(RESULTS(CNT),"^",5)=$S(TMP="YES":1,1:0)  ;Auto confirm?
"RTN","RORRP013",81,0)
 . S $P(RESULTS(CNT),"^",4)=$G(RORBUF(798.1,IENS,4))
"RTN","RORRP013",82,0)
 . ;--- Check if the user has the administrator security key
"RTN","RORRP013",83,0)
 . S KEY="",ADMIN=0
"RTN","RORRP013",84,0)
 . F  S KEY=$O(^ROR(798.1,"ACL",USER,REGIEN,KEY))  Q:KEY=""  D  Q:RC<0
"RTN","RORRP013",85,0)
 . . I KEY?1"ROR"1.E  S:KEY["ADMIN" ADMIN=1
"RTN","RORRP013",86,0)
 . S $P(RESULTS(CNT),"^",3)=ADMIN
"RTN","RORRP013",87,0)
 ;
"RTN","RORRP013",88,0)
 I RC'<0  D:CNT'>0  S RESULTS(0)=CNT
"RTN","RORRP013",89,0)
 . D ACVIOLTN^RORLOG(-91)  ; Record the access violation
"RTN","RORRP013",90,0)
 E  D RPCSTK^RORERR(.RESULTS,RC)
"RTN","RORRP013",91,0)
 Q
"RTN","RORRP013",92,0)
 ;
"RTN","RORRP013",93,0)
 ;***** RETURNS THE LIST OF ACCESS VIOLATIONS
"RTN","RORRP013",94,0)
 ; RPC: [ROR LOG GET ACCESS VIOLATIONS]
"RTN","RORRP013",95,0)
 ;
"RTN","RORRP013",96,0)
 ; .RESULTS      Reference to a local variable where the results
"RTN","RORRP013",97,0)
 ;               are returned to.
"RTN","RORRP013",98,0)
 ;
"RTN","RORRP013",99,0)
 ; [STDT]        Start date (by default, from the earliest violation)
"RTN","RORRP013",100,0)
 ; [ENDT]        End date (by default, to the latest violation)
"RTN","RORRP013",101,0)
 ;
"RTN","RORRP013",102,0)
 ; Return Values:
"RTN","RORRP013",103,0)
 ;
"RTN","RORRP013",104,0)
 ; A negative value of the first "^"-piece of the RESULTS(0) indicates
"RTN","RORRP013",105,0)
 ; an error (see the RPCSTK^RORERR procedure for more details).
"RTN","RORRP013",106,0)
 ;
"RTN","RORRP013",107,0)
 ; Otherwise, number of logs is returned in the RESULTS(0) and the
"RTN","RORRP013",108,0)
 ; subsequent nodes of the RESULTS array contain the violations.
"RTN","RORRP013",109,0)
 ; 
"RTN","RORRP013",110,0)
 ; @RESULTS@(0)          Number of access violations
"RTN","RORRP013",111,0)
 ;
"RTN","RORRP013",112,0)
 ; @RESULTS@(i)          Access violation descriptor
"RTN","RORRP013",113,0)
 ;                         ^01: Date/Time (int)
"RTN","RORRP013",114,0)
 ;                         ^02: User Name
"RTN","RORRP013",115,0)
 ;                         ^03: User IEN
"RTN","RORRP013",116,0)
 ;                         ^04: Message
"RTN","RORRP013",117,0)
 ;
"RTN","RORRP013",118,0)
AVLIST(RESULTS,STDT,ENDT) ;
"RTN","RORRP013",119,0)
 N BUF,CNT,DATE,IEN,IENS,RC,ROOT,RORBUF,RORERRDL,RORMSG
"RTN","RORRP013",120,0)
 D CLEAR^RORERR("AVLIST^RORRP013",1)
"RTN","RORRP013",121,0)
 ;--- Check the parameters
"RTN","RORRP013",122,0)
 S STDT=$G(STDT)\1,ENDT=$G(ENDT)\1
"RTN","RORRP013",123,0)
 S ENDT=$S(ENDT>0:$$FMADD^XLFDT(ENDT,1),1:9999999)
"RTN","RORRP013",124,0)
 ;--- Initialize the variables
"RTN","RORRP013",125,0)
 S ROOT=$$ROOT^DILFD(798.7,,1),CNT=0
"RTN","RORRP013",126,0)
 K RESULTS  S RESULTS=$$ALLOC^RORTMP()
"RTN","RORRP013",127,0)
 ;--- Browse through the logs
"RTN","RORRP013",128,0)
 S DATE=STDT
"RTN","RORRP013",129,0)
 F  S DATE=$O(@ROOT@("B",DATE))  Q:DATE=""  Q:DATE'<ENDT  D
"RTN","RORRP013",130,0)
 . S IEN=0
"RTN","RORRP013",131,0)
 . F  S IEN=$O(@ROOT@("B",DATE,IEN))  Q:IEN'>0  D
"RTN","RORRP013",132,0)
 . . S IENS=IEN_","  K RORBUF
"RTN","RORRP013",133,0)
 . . D GETS^DIQ(798.7,IENS,".01;1;7","EI","RORBUF","RORMSG")
"RTN","RORRP013",134,0)
 . . Q:$G(DIERR)
"RTN","RORRP013",135,0)
 . . ;--- Check for the 'Access Violation' Activity
"RTN","RORRP013",136,0)
 . . Q:$G(RORBUF(798.7,IENS,1,"I"))'=6
"RTN","RORRP013",137,0)
 . . ;--- Date/Time of the event
"RTN","RORRP013",138,0)
 . . S BUF=$G(RORBUF(798.7,IENS,.01,"I"))
"RTN","RORRP013",139,0)
 . . ;--- User Name (ext)
"RTN","RORRP013",140,0)
 . . S $P(BUF,"^",2)=$G(RORBUF(798.7,IENS,7,"E"))
"RTN","RORRP013",141,0)
 . . ;--- User IEN (int)
"RTN","RORRP013",142,0)
 . . S $P(BUF,"^",3)=$G(RORBUF(798.7,IENS,7,"I"))
"RTN","RORRP013",143,0)
 . . ;--- Message
"RTN","RORRP013",144,0)
 . . S $P(BUF,"^",4)=$$GET1^DIQ(798.74,"1,"_IENS,2,,,"RORMSG")
"RTN","RORRP013",145,0)
 . . ;--- Add the record to the output
"RTN","RORRP013",146,0)
 . . S CNT=CNT+1,@RESULTS@(CNT)=BUF
"RTN","RORRP013",147,0)
 ;--- Number of violations
"RTN","RORRP013",148,0)
 S @RESULTS@(0)=CNT
"RTN","RORRP013",149,0)
 Q
"RTN","RORRP013",150,0)
 ;
"RTN","RORRP013",151,0)
 ;***** ADDS THE USERS WHO HAVE THE SECURITY KEY TO THE LIST
"RTN","RORRP013",152,0)
 ;
"RTN","RORRP013",153,0)
 ; KEYNAME       Name of the security key
"RTN","RORRP013",154,0)
 ; ACCESS        Level of the user access to the registry
"RTN","RORRP013",155,0)
 ;               (1-User, 2-Administrator, 3-IRM)
"RTN","RORRP013",156,0)
 ;
"RTN","RORRP013",157,0)
 ; Return Values:
"RTN","RORRP013",158,0)
 ;
"RTN","RORRP013",159,0)
KLIST(KEYNAME,ACCESS) ;
"RTN","RORRP013",160,0)
 N IEN  S IEN=0
"RTN","RORRP013",161,0)
 F  S IEN=$O(^XUSEC(KEYNAME,IEN))  Q:IEN'>0  D
"RTN","RORRP013",162,0)
 . S $P(@RORULST@(IEN,0),"^",ACCESS)=1
"RTN","RORRP013",163,0)
 Q
"RTN","RORRP013",164,0)
 ;
"RTN","RORRP013",165,0)
 ;***** RETURNS THE LIST OF REGISTRY USERS
"RTN","RORRP013",166,0)
 ; RPC: [ROR GET REGISTRY USERS]
"RTN","RORRP013",167,0)
 ;
"RTN","RORRP013",168,0)
 ; .RESULTS      Reference to a local variable where the results
"RTN","RORRP013",169,0)
 ;               are returned to.
"RTN","RORRP013",170,0)
 ;
"RTN","RORRP013",171,0)
 ; REGIEN        Registry IEN
"RTN","RORRP013",172,0)
 ;
"RTN","RORRP013",173,0)
 ; Return Values:
"RTN","RORRP013",174,0)
 ;
"RTN","RORRP013",175,0)
 ; A negative value of the first "^"-piece of the RESULTS(0) indicates
"RTN","RORRP013",176,0)
 ; an error (see the RPCSTK^RORERR procedure for more details).
"RTN","RORRP013",177,0)
 ;
"RTN","RORRP013",178,0)
 ; Otherwise, number of users is returned in the RESULTS(0) and the
"RTN","RORRP013",179,0)
 ; subsequent nodes of the RESULTS array contain the users.
"RTN","RORRP013",180,0)
 ; 
"RTN","RORRP013",181,0)
 ; @RESULTS@(0)          Number of users
"RTN","RORRP013",182,0)
 ;
"RTN","RORRP013",183,0)
 ; @RESULTS@(i)          User descriptor
"RTN","RORRP013",184,0)
 ;                         ^01: User IEN (DUZ)
"RTN","RORRP013",185,0)
 ;                         ^02: User Name
"RTN","RORRP013",186,0)
 ;                         ^03: User          (0/1)
"RTN","RORRP013",187,0)
 ;                         ^04: Administrator (0/1)
"RTN","RORRP013",188,0)
 ;                         ^05: IRM           (0/1)
"RTN","RORRP013",189,0)
 ;
"RTN","RORRP013",190,0)
USERLIST(RESULTS,REGIEN) ;
"RTN","RORRP013",191,0)
 N ACCESS,ADMIN,CNT,IEN,NAME,RORERRDL,RORMSG,RORULST
"RTN","RORRP013",192,0)
 D CLEAR^RORERR("USERLIST^RORRP013",1)
"RTN","RORRP013",193,0)
 ;--- Check the parameters
"RTN","RORRP013",194,0)
 I $G(REGIEN)'>0  D  D RPCSTK^RORERR(.RESULTS,RC)  Q
"RTN","RORRP013",195,0)
 . S RC=$$ERROR^RORERR(-88,,,,"REGIEN",$G(REGIEN))
"RTN","RORRP013",196,0)
 S REGIEN=+REGIEN
"RTN","RORRP013",197,0)
 ;--- Initialize the variables
"RTN","RORRP013",198,0)
 K RESULTS  S RESULTS=$$ALLOC^RORTMP()
"RTN","RORRP013",199,0)
 S RORULST=$$ALLOC^RORTMP()
"RTN","RORRP013",200,0)
 ;--- Browse the security keys
"RTN","RORRP013",201,0)
 S NAME=""
"RTN","RORRP013",202,0)
 F  S NAME=$O(^ROR(798.1,REGIEN,18,"B",NAME))  Q:NAME=""  D
"RTN","RORRP013",203,0)
 . S ADMIN=(NAME?1"ROR"1.E)&(NAME["ADMIN")
"RTN","RORRP013",204,0)
 . D KLIST(NAME,$S(ADMIN:2,1:1))
"RTN","RORRP013",205,0)
 ;--- Add the authorized IRM personnel
"RTN","RORRP013",206,0)
 D KLIST("ROR VA IRM",3)
"RTN","RORRP013",207,0)
 ;--- Sort the users by their names
"RTN","RORRP013",208,0)
 S IEN=0
"RTN","RORRP013",209,0)
 F  S IEN=$O(@RORULST@(IEN))  Q:IEN'>0  D
"RTN","RORRP013",210,0)
 . S NAME=$$GET1^DIQ(200,IEN_",",.01,,,"RORMSG")
"RTN","RORRP013",211,0)
 . S:NAME'="" @RORULST@("B",NAME,IEN)=""
"RTN","RORRP013",212,0)
 ;--- Generate the output
"RTN","RORRP013",213,0)
 S NAME="",CNT=0
"RTN","RORRP013",214,0)
 F  S NAME=$O(@RORULST@("B",NAME)) Q:NAME=""  D
"RTN","RORRP013",215,0)
 . S IEN=0
"RTN","RORRP013",216,0)
 . F  S IEN=$O(@RORULST@("B",NAME,IEN)) Q:IEN'>0  D
"RTN","RORRP013",217,0)
 . . S ACCESS=$G(@RORULST@(IEN,0))
"RTN","RORRP013",218,0)
 . . S CNT=CNT+1,@RESULTS@(CNT)=IEN_"^"_NAME_"^"_ACCESS
"RTN","RORRP013",219,0)
 S @RESULTS@(0)=CNT
"RTN","RORRP013",220,0)
 ;--- Cleanup
"RTN","RORRP013",221,0)
 D FREE^RORTMP(RORULST)
"RTN","RORRP013",222,0)
 Q
"RTN","RORRP030")
0^12^B4623293^B2779702
"RTN","RORRP030",1,0)
RORRP030 ;HCIOFO/SG - RPC: PATIENT DELETE ;11/29/05 3:04pm
"RTN","RORRP030",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**10,18**;Feb 17, 2006;Build 25
"RTN","RORRP030",3,0)
 ;*************************************************************************
"RTN","RORRP030",4,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORRP030",5,0)
 ;        
"RTN","RORRP030",6,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORRP030",7,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORRP030",8,0)
 ;ROR*1.5*18   APR  2012   C RAY        Added logic to immediately delete
"RTN","RORRP030",9,0)
 ;                                      patients in auto confirm registries
"RTN","RORRP030",10,0)
 ;                                      Deletion is logged
"RTN","RORRP030",11,0)
 ;***********************************************************************
"RTN","RORRP030",12,0)
 ; This routine uses the following IAs:
"RTN","RORRP030",13,0)
 ;
"RTN","RORRP030",14,0)
 ; #2053    FILE^DIE (supported)
"RTN","RORRP030",15,0)
 Q
"RTN","RORRP030",16,0)
 ;
"RTN","RORRP030",17,0)
 ;***** MARKS THE PATIENT'S RECORD AS DELETED FROM THE REGISTRY
"RTN","RORRP030",18,0)
 ; RPC: [ROR PATIENT DELETE]
"RTN","RORRP030",19,0)
 ;
"RTN","RORRP030",20,0)
 ; .RESULTS      Reference to a local variable where the results
"RTN","RORRP030",21,0)
 ;               are returned to.
"RTN","RORRP030",22,0)
 ;
"RTN","RORRP030",23,0)
 ; REGIEN        Registry IEN
"RTN","RORRP030",24,0)
 ;
"RTN","RORRP030",25,0)
 ; RORDFN        IEN of the patient
"RTN","RORRP030",26,0)
 ;
"RTN","RORRP030",27,0)
 ; [FORCE]       Deprecated
"RTN","RORRP030",28,0)
 ;
"RTN","RORRP030",29,0)
 ; Return Values:
"RTN","RORRP030",30,0)
 ;
"RTN","RORRP030",31,0)
 ; A negative value of the first "^"-piece of the RESULTS(0)
"RTN","RORRP030",32,0)
 ; indicates an error (see the RPCSTK^RORERR procedure for more
"RTN","RORRP030",33,0)
 ; details).
"RTN","RORRP030",34,0)
 ;
"RTN","RORRP030",35,0)
 ; Otherwise, the following codes can be returned in the RESULTS(0):
"RTN","RORRP030",36,0)
 ;
"RTN","RORRP030",37,0)
 ;         0  The record cannot be deleted
"RTN","RORRP030",38,0)
 ;         9  The record has been marked as deleted
"RTN","RORRP030",39,0)
 ;
"RTN","RORRP030",40,0)
DELETE(RESULTS,REGIEN,RORDFN,FORCE) ;
"RTN","RORRP030",41,0)
 N IENS,RC,REGNAME,RORFDA,RORMSG,TMP,DIERR,RORPARM,REGLST
"RTN","RORRP030",42,0)
 D CLEAR^RORERR("DELETE^RORRP030",1)
"RTN","RORRP030",43,0)
 K RESULTS  S RESULTS(0)=0
"RTN","RORRP030",44,0)
 ;
"RTN","RORRP030",45,0)
 ;--- Get the registry description/name
"RTN","RORRP030",46,0)
 S TMP=$$REGNAME^RORUTL01(REGIEN)
"RTN","RORRP030",47,0)
 I TMP=""  D  D RPCSTK^RORERR(.RESULTS,RC)  Q
"RTN","RORRP030",48,0)
 . S RC=$$ERROR^RORERR(-1,,,RORDFN)
"RTN","RORRP030",49,0)
 S REGNAME=$S($P(TMP,U,2)'="":$P(TMP,U,2),1:$P(TMP,U))
"RTN","RORRP030",50,0)
 ;
"RTN","RORRP030",51,0)
 ;--- Get IENS of the registry record
"RTN","RORRP030",52,0)
 S IENS=$$PRRIEN^RORUTL01(RORDFN,REGIEN)_","
"RTN","RORRP030",53,0)
 I IENS'>0  D  D RPCSTK^RORERR(.RESULTS,RC)  Q
"RTN","RORRP030",54,0)
 . S RC=$$ERROR^RORERR(-97,,,RORDFN,REGNAME)
"RTN","RORRP030",55,0)
 ;--- non-CCR registries delete immediately and log -- Patch 18
"RTN","RORRP030",56,0)
 I $D(^ROR(798.1,"C",1,REGIEN)) D  S RESULTS(0)=9 Q
"RTN","RORRP030",57,0)
 . S RORPARM("LOG")=1
"RTN","RORRP030",58,0)
 . S REGLST(REGNAME)=REGIEN
"RTN","RORRP030",59,0)
 . S RC=$$OPEN^RORLOG(.REGLST,,"PATIENT DELETION")
"RTN","RORRP030",60,0)
 . D LOG^RORERR(-90,,RORDFN,$G(REGNAME))
"RTN","RORRP030",61,0)
 . N DA,DIK  S DIK=$$ROOT^DILFD(798),DA=+IENS  D ^DIK
"RTN","RORRP030",62,0)
 . D CLOSE^RORLOG()
"RTN","RORRP030",63,0)
 ;
"RTN","RORRP030",64,0)
 ;-- CCR registries mark as deleted
"RTN","RORRP030",65,0)
 ;Patch 10: mark any deleted record as deleted (don't delete pending record immediately)
"RTN","RORRP030",66,0)
 D
"RTN","RORRP030",67,0)
 . ;--- Mark the record as deleted
"RTN","RORRP030",68,0)
 . S RORFDA(798,IENS,3)=5
"RTN","RORRP030",69,0)
 . D FILE^DIE(,"RORFDA","RORMSG")
"RTN","RORRP030",70,0)
 . I $G(DIERR)  D  D RPCSTK^RORERR(.RESULTS,RC)
"RTN","RORRP030",71,0)
 . . S RC=$$DBS^RORERR("RORMSG",-9,,RORDFN,798,IENS)
"RTN","RORRP030",72,0)
 ;---
"RTN","RORRP030",73,0)
 S RESULTS(0)=9
"RTN","RORRP030",74,0)
 Q
"RTN","RORSET02")
0^9^B21485315^n/a
"RTN","RORSET02",1,0)
RORSET02 ;BPIOFO/CLR - NEW REGISTRY SETUP  ;6/06/2012
"RTN","RORSET02",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**18**;Feb 17, 2006;Build 25
"RTN","RORSET02",3,0)
 ; This routine uses the following IAs:
"RTN","RORSET02",4,0)
 ;
"RTN","RORSET02",5,0)
 ; #10063 ^%ZTLOAD            
"RTN","RORSET02",6,0)
 ; #2053  FILE^DIE
"RTN","RORSET02",7,0)
 ; #10013 ^DIK
"RTN","RORSET02",8,0)
 ; #2055  $$ROOT^DILFD
"RTN","RORSET02",9,0)
 ; #10026 ^DIR
"RTN","RORSET02",10,0)
 ;
"RTN","RORSET02",11,0)
 N RORPARM,RORBUF,RORI,RORDIFF,ROROUT,RORMSG
"RTN","RORSET02",12,0)
 N RC,REGNAME,RORMNTSK,RORSUSP,TMP,REGLST
"RTN","RORSET02",13,0)
 N ZTCPU,ZTDESC,ZTIO,ZTKIL,ZTPRI,ZTRTN,ZTSAVE,ZTSK,ZTSYNC,ZTUCI,ZTREQ
"RTN","RORSET02",14,0)
 N DIR,DIRUT,Y,DIERR,FLD,NODE
"RTN","RORSET02",15,0)
 ;
"RTN","RORSET02",16,0)
 S RORPARM("ERR")=1         ; Enable error processing
"RTN","RORSET02",17,0)
 S RORPARM("LOG")=1         ; Enable event recording
"RTN","RORSET02",18,0)
 ;--- display all ACTIVE auto confirm registries that have not been initialized
"RTN","RORSET02",19,0)
 S RC=$$REGSEL^RORUTL01("UA")
"RTN","RORSET02",20,0)
 I RC<0 W !,$$MSG^RORERR20(RC,,," file #798.1"),! Q
"RTN","RORSET02",21,0)
 I '$D(REGLST) W !!?5,"All registries have been successfully initialized.",!! Q
"RTN","RORSET02",22,0)
 W !!?4,"The following registries will be populated with new patients: "
"RTN","RORSET02",23,0)
 S REGNAME="" F  S REGNAME=$O(REGLST(REGNAME)) Q:REGNAME=""  D
"RTN","RORSET02",24,0)
 . W !?10,REGNAME
"RTN","RORSET02",25,0)
 W !
"RTN","RORSET02",26,0)
 ;--- Check if ROR INITIALIZE is running
"RTN","RORSET02",27,0)
 S RC=0
"RTN","RORSET02",28,0)
 D RTN^%ZTLOAD("RORSET02","RORBUF")
"RTN","RORSET02",29,0)
 S ZTSK="" F  S ZTSK=$O(RORBUF(ZTSK)) Q:ZTSK=""  D  I $G(ZTSK(1))=2 S RC=-1 Q
"RTN","RORSET02",30,0)
 . D STAT^%ZTLOAD
"RTN","RORSET02",31,0)
 ;--- Display error message if option is running
"RTN","RORSET02",32,0)
 I RC<0  D  Q
"RTN","RORSET02",33,0)
 . W !?4,"ROR INITIALIZE is already running.",!
"RTN","RORSET02",34,0)
 ;--- Display last run of ROR TASK
"RTN","RORSET02",35,0)
 D LIST^DIC(798.7,,"@;.01IE;1;5IE","B",1,,,"B","I $P(^(0),U,3)=7",,"RORBUF","RORMSG")
"RTN","RORSET02",36,0)
 I '$D(DIERR) D
"RTN","RORSET02",37,0)
 . S NODE=$NA(RORBUF("DILIST","ID",1))
"RTN","RORSET02",38,0)
 . I @NODE@(5,"I")="" W !?4,"ROR TASK last started on "_@NODE@(.01,"E")_" and has not completed.",! Q
"RTN","RORSET02",39,0)
 . S RORDIFF=$$FMDIFF^XLFDT(@NODE@(5,"I"),@NODE@(.01,"I"),3)
"RTN","RORSET02",40,0)
 . I +RORDIFF=RORDIFF S ROROUT=+RORDIFF_"d 0h 0m 0s"
"RTN","RORSET02",41,0)
 . E  S ROROUT=(+$P(RORDIFF," ")_"d ")_(+$P(RORDIFF," ",2)_"h ")_(+$P(RORDIFF,":",2)_"m ")_(+$P(RORDIFF,":",3)_"s")
"RTN","RORSET02",42,0)
 . W !?4,"ROR TASK last ran on "_@NODE@(.01,"E")_" and took "_ROROUT,!
"RTN","RORSET02",43,0)
 ;--- Display schedule of ROR TASK
"RTN","RORSET02",44,0)
 S RC=$$CHKOPT^RORKIDS("ROR TASK")
"RTN","RORSET02",45,0)
 Q:RC<0
"RTN","RORSET02",46,0)
 ;--- prompt do you wish to continue
"RTN","RORSET02",47,0)
 S DIR("B")="NO",DIR(0)="Y",DIR("A")="Do you wish to continue"
"RTN","RORSET02",48,0)
 D ^DIR I $D(DIRUT) S Y=0
"RTN","RORSET02",49,0)
 Q:'+Y
"RTN","RORSET02",50,0)
 ;--- Request setup parameters
"RTN","RORSET02",51,0)
 S RC=$$ASKPARMS^RORSETU1(.RORMNTSK,.RORSUSP)
"RTN","RORSET02",52,0)
 I RC<0  Q:(RC=-71)!(RC=-72)  G ERROR
"RTN","RORSET02",53,0)
 ;--- Schedule the setup task
"RTN","RORSET02",54,0)
 S ZTRTN="TASK^RORSET02",ZTIO=""
"RTN","RORSET02",55,0)
 S ZTDESC="Local Registries Initialization"
"RTN","RORSET02",56,0)
 F TMP="RORMNTSK","RORSUSP"  S ZTSAVE(TMP)=""
"RTN","RORSET02",57,0)
 S ZTSAVE("REGLST(")=""
"RTN","RORSET02",58,0)
 D ^%ZTLOAD
"RTN","RORSET02",59,0)
 I $G(ZTSK) W !,"The scheduled task number is ",ZTSK
"RTN","RORSET02",60,0)
 Q
"RTN","RORSET02",61,0)
ERROR ;--- Display stack errors
"RTN","RORSET02",62,0)
 D DSPSTK^RORERR()
"RTN","RORSET02",63,0)
 Q
"RTN","RORSET02",64,0)
 ;
"RTN","RORSET02",65,0)
 ;***** ENTRY POINT OF THE REGISTRY SETUP TASK
"RTN","RORSET02",66,0)
 ;
"RTN","RORSET02",67,0)
 ; RORMNTSK      Maximum number of the registry update subtasks
"RTN","RORSET02",68,0)
 ; RORREG        RegistryIEN^RegistryName
"RTN","RORSET02",69,0)
 ; RORSUSP       Task suspension time frame (StartTime^EndTime)
"RTN","RORSET02",70,0)
 ;
"RTN","RORSET02",71,0)
TASK ;
"RTN","RORSET02",72,0)
 N RORERROR      ; Error processing data
"RTN","RORSET02",73,0)
 N RORLOG        ; Log subsystem constants & variables
"RTN","RORSET02",74,0)
 N RORPARM       ; Application parameters
"RTN","RORSET02",75,0)
 ;
"RTN","RORSET02",76,0)
 N RC,REGNAME,TMP,REGIEN
"RTN","RORSET02",77,0)
 S RORPARM("DEVELOPER")=1   ; Enable modifications
"RTN","RORSET02",78,0)
 S RORPARM("ERR")=1         ; Enable error processing
"RTN","RORSET02",79,0)
 S RORPARM("LOG")=1         ; Enable event recording
"RTN","RORSET02",80,0)
 S RORPARM("SETUP")=1       ; Registry setup indicator
"RTN","RORSET02",81,0)
 ;
"RTN","RORSET02",82,0)
 ;--- Check list of registries
"RTN","RORSET02",83,0)
 I $D(REGLST)<10  D  Q
"RTN","RORSET02",84,0)
 . S RC=$$ERROR^RORERR(-28,,,," initialize")
"RTN","RORSET02",85,0)
 ;--- Populate the registry
"RTN","RORSET02",86,0)
 S RC=$$UPDATE^RORUPD(.REGLST,$G(RORMNTSK),$G(RORSUSP)) Q:RC<0
"RTN","RORSET02",87,0)
 ;--- Setup the registry
"RTN","RORSET02",88,0)
 S REGNAME="" F  S REGNAME=$O(REGLST(REGNAME)) Q:REGNAME=""  D
"RTN","RORSET02",89,0)
 . S REGIEN=$$REGIEN^RORUTL02(REGNAME)
"RTN","RORSET02",90,0)
 . I REGIEN<0 S RC=$$ERROR^RORERR(-112,,,,REGNAME) Q
"RTN","RORSET02",91,0)
 . S RC=$$PREPARE^RORSETU2(REGIEN)
"RTN","RORSET02",92,0)
 . I RC<0 S RC=$$ERROR^RORERR(-112,,,,REGNAME) Q
"RTN","RORSET02",93,0)
 . ;--- Send the notification e-mail
"RTN","RORSET02",94,0)
 . S:RC'<0 TMP=$$SENDINFO^RORUTL17(+REGIEN,,"E")
"RTN","RORSET02",95,0)
 . ;--- Send an alert to the originator of the task
"RTN","RORSET02",96,0)
 . D ALERT^RORKIDS(DUZ,"Initialization of registry "_$G(REGNAME)_" succeeded")
"RTN","RORSET02",97,0)
 . ;--- Cleanup
"RTN","RORSET02",98,0)
 . I RC'<0 D  S ZTREQ="@"
"RTN","RORSET02",99,0)
 . . K ^XTMP("RORUPDR"_+REGIEN)
"RTN","RORSET02",100,0)
 Q
"RTN","RORSET02",101,0)
 ;DEFINE ENTRY POINT TO CLEAR AND RESTART REGISTRY UPDATE
"RTN","RORSET02",102,0)
DEL(REGLST) ;
"RTN","RORSET02",103,0)
 ;Select new registry to delete
"RTN","RORSET02",104,0)
 ;delete any records in 798 for that registry
"RTN","RORSET02",105,0)
 ;delete enable protocols,hdt,registry updated until
"RTN","RORSET02",106,0)
 N REGNAME,REGIEN,IEN,DA,DIK,RORFDA,IENS,RORMSG,DIERR
"RTN","RORSET02",107,0)
 N FILE,ROOT,IX,RORPARM,FLD
"RTN","RORSET02",108,0)
 S (REGNAME,IEN)=""
"RTN","RORSET02",109,0)
 S RORPARM("DEVELOPER")=1
"RTN","RORSET02",110,0)
 F  S REGNAME=$O(REGLST(REGNAME)) Q:REGNAME=""  D
"RTN","RORSET02",111,0)
 . S REGIEN=$$REGIEN^RORUTL02(REGNAME) Q:REGIEN=""
"RTN","RORSET02",112,0)
 . S IENS=REGIEN_","
"RTN","RORSET02",113,0)
 . F FLD=6.1,6.2,7,10,13,13.1,19.1,19.2,19.3,21.01,21.04,21.05 D
"RTN","RORSET02",114,0)
 . . S RORFDA(798.1,IENS,FLD)="@"
"RTN","RORSET02",115,0)
 . S RORFDA(798.1,IENS,1)=2850101
"RTN","RORSET02",116,0)
 . D FILE^DIE(,"RORFDA","RORMSG")
"RTN","RORSET02",117,0)
 . I $G(DIERR) W !!,"<<ERROR - restoring "_REGNAME_" registry parameters>>" Q
"RTN","RORSET02",118,0)
 . F  S IEN=$O(^RORDATA(798,"AC",REGIEN,IEN)) Q:IEN=""  D
"RTN","RORSET02",119,0)
 . . N DA,DIK
"RTN","RORSET02",120,0)
 . . S DIK=$$ROOT^DILFD(798),DA=IEN  D ^DIK
"RTN","RORSET02",121,0)
 . . W !,"<< "_IEN_" >> Deleted"
"RTN","RORSET02",122,0)
 Q
"RTN","RORSET02",123,0)
 ;
"RTN","RORUPD09")
0^7^B11144111^B9474836
"RTN","RORUPD09",1,0)
RORUPD09 ;HCIOFO/SG - PROCESSING OF THE 'PTF' FILE  ; 8/3/05 9:50am
"RTN","RORUPD09",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**18**;Feb 17, 2006;Build 25
"RTN","RORUPD09",3,0)
 ;
"RTN","RORUPD09",4,0)
 ;*****************************************************************************
"RTN","RORUPD09",5,0)
 ;*****************************************************************************
"RTN","RORUPD09",6,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORUPD09",7,0)
 ;        
"RTN","RORUPD09",8,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORUPD09",9,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORUPD09",10,0)
 ;ROR*1.5*18   APR 2012    C RAY        Modified PTF RULE to use B xref #798.5
"RTN","RORUPD09",11,0)
 ;                                      
"RTN","RORUPD09",12,0)
 ;*****************************************************************************
"RTN","RORUPD09",13,0)
 ;*****************************************************************************
"RTN","RORUPD09",14,0)
 ; This routine uses the following IAs:
"RTN","RORUPD09",15,0)
 ;
"RTN","RORUPD09",16,0)
 ; #3157         RPC^DGPTFAPI
"RTN","RORUPD09",17,0)
 ; #3545         Access to the "AAD" cross-reference and the field 80
"RTN","RORUPD09",18,0)
 ; #10103        $$FMADD^XLFDT (supported)
"RTN","RORUPD09",19,0)
 ; #2171         $$IEN^XUAF4 (supported)
"RTN","RORUPD09",20,0)
 ;
"RTN","RORUPD09",21,0)
 ;
"RTN","RORUPD09",22,0)
 Q
"RTN","RORUPD09",23,0)
 ;
"RTN","RORUPD09",24,0)
 ;***** LOADS DATA ELEMENT VALUES
"RTN","RORUPD09",25,0)
 ;
"RTN","RORUPD09",26,0)
 ; IENS          IENS of the current record
"RTN","RORUPD09",27,0)
 ;
"RTN","RORUPD09",28,0)
 ; Return values:
"RTN","RORUPD09",29,0)
 ;       <0  Error code
"RTN","RORUPD09",30,0)
 ;        0  Ok
"RTN","RORUPD09",31,0)
 ;
"RTN","RORUPD09",32,0)
LOAD(IENS) ;
"RTN","RORUPD09",33,0)
 N RC  S RC=0
"RTN","RORUPD09",34,0)
 ;--- API #1
"RTN","RORUPD09",35,0)
 I $D(RORUPD("SR",RORFILE,"F",1))  D  Q:RC<0 RC
"RTN","RORUPD09",36,0)
 . S RC=$$LOADFLDS^RORUPDUT(RORFILE,IENS)
"RTN","RORUPD09",37,0)
 ;--- API #2
"RTN","RORUPD09",38,0)
 I $D(RORUPD("SR",RORFILE,"F",2))  D  Q:RC<0 RC
"RTN","RORUPD09",39,0)
 . N API,DE,IN,IP,RORBUF,VT
"RTN","RORUPD09",40,0)
 . D RPC^DGPTFAPI(.RORBUF,+IENS)
"RTN","RORUPD09",41,0)
 . I $G(RORBUF(0))<0  S API="RPC^DGPTFAPI"  D  Q
"RTN","RORUPD09",42,0)
 . . S RC=$$ERROR^RORERR(-57,,,,RORBUF(0),API)
"RTN","RORUPD09",43,0)
 . ;---
"RTN","RORUPD09",44,0)
 . S DE=""
"RTN","RORUPD09",45,0)
 . F  S DE=$O(RORUPD("SR",RORFILE,"F",2,DE))  Q:DE=""  D
"RTN","RORUPD09",46,0)
 . . S VT=""
"RTN","RORUPD09",47,0)
 . . F  S VT=$O(RORUPD("SR",RORFILE,"F",2,DE,VT))  Q:VT=""  D
"RTN","RORUPD09",48,0)
 . . . S IP=+$P(RORUPD("SR",RORFILE,"F",2,DE,VT),U,1)  Q:IP'>0
"RTN","RORUPD09",49,0)
 . . . S IN=+$P(RORUPD("SR",RORFILE,"F",2,DE,VT),U,2)
"RTN","RORUPD09",50,0)
 . . . S RORVALS("DV",RORFILE,DE,VT)=$P($G(RORBUF(IN)),U,IP)
"RTN","RORUPD09",51,0)
 Q 0
"RTN","RORUPD09",52,0)
 ;
"RTN","RORUPD09",53,0)
 ;***** PROCESSING OF THE 'PTF' FILE
"RTN","RORUPD09",54,0)
 ;
"RTN","RORUPD09",55,0)
 ; UPDSTART      Date of the earliest update
"RTN","RORUPD09",56,0)
 ; PATIEN        Patient IEN
"RTN","RORUPD09",57,0)
 ;
"RTN","RORUPD09",58,0)
 ; Return values:
"RTN","RORUPD09",59,0)
 ;       <0  Error code
"RTN","RORUPD09",60,0)
 ;        0  Continue processing of the current patient
"RTN","RORUPD09",61,0)
 ;        1  Stop processing
"RTN","RORUPD09",62,0)
 ;
"RTN","RORUPD09",63,0)
PTF(UPDSTART,PATIEN) ;
"RTN","RORUPD09",64,0)
 N RORFILE       ; File number
"RTN","RORUPD09",65,0)
 ;
"RTN","RORUPD09",66,0)
 N ADMDT,ADMIENS,EDT,IEN,LOCATION,NODE,RC,TMP
"RTN","RORUPD09",67,0)
 S RORFILE=45,EDT=RORUPD("DSEND")
"RTN","RORUPD09",68,0)
 ;--- Check the event references if the events are enabled
"RTN","RORUPD09",69,0)
 I $G(RORUPD("FLAGS"))["E"  D  Q:RC'>0 RC
"RTN","RORUPD09",70,0)
 . S RC=$$GET^RORUPP02(PATIEN,3,.UPDSTART,.EDT)
"RTN","RORUPD09",71,0)
 . S:RC>1 UPDSTART=UPDSTART\1,EDT=$$FMADD^XLFDT(EDT\1,1)
"RTN","RORUPD09",72,0)
 ;--- Subtract 1 second from the start date to include
"RTN","RORUPD09",73,0)
 ;    it into the interval
"RTN","RORUPD09",74,0)
 S ADMDT=$$FMADD^XLFDT(UPDSTART,,,,-1)
"RTN","RORUPD09",75,0)
 ;
"RTN","RORUPD09",76,0)
 ;--- Browse through the admissions
"RTN","RORUPD09",77,0)
 S NODE=RORUPD("ROOT",RORFILE),NODE=$NA(@NODE@("AAD",PATIEN))
"RTN","RORUPD09",78,0)
 S RC=0
"RTN","RORUPD09",79,0)
 F  S ADMDT=$O(@NODE@(ADMDT))  Q:(ADMDT="")!(ADMDT'<EDT)  D  Q:RC
"RTN","RORUPD09",80,0)
 . S IEN=""
"RTN","RORUPD09",81,0)
 . F  S IEN=$O(@NODE@(ADMDT,IEN))  Q:IEN=""  D  Q:RC
"RTN","RORUPD09",82,0)
 . . S ADMIENS=IEN_","
"RTN","RORUPD09",83,0)
 . . ;--- Load necessary data elements
"RTN","RORUPD09",84,0)
 . . I $D(RORUPD("SR",RORFILE,"F"))>1  D  I TMP<0 D INCEC^RORUPDUT() Q
"RTN","RORUPD09",85,0)
 . . . S TMP=$$LOAD(ADMIENS)
"RTN","RORUPD09",86,0)
 . . . S TMP=$$GETDE^RORUPDUT(45,131)_$$GETDE^RORUPDUT(45,132)
"RTN","RORUPD09",87,0)
 . . . S LOCATION=$S(TMP'="":$$IEN^XUAF4(TMP),1:"")
"RTN","RORUPD09",88,0)
 . . ;--- Apply "before" rules
"RTN","RORUPD09",89,0)
 . . S RC=$$APLRULES^RORUPDUT(RORFILE,ADMIENS,"B",ADMDT,$G(LOCATION))
"RTN","RORUPD09",90,0)
 . . I RC  D INCEC^RORUPDUT(.RC)  Q
"RTN","RORUPD09",91,0)
 . . ;--- Apply "after" rules
"RTN","RORUPD09",92,0)
 . . S RC=$$APLRULES^RORUPDUT(RORFILE,ADMIENS,"A",ADMDT,$G(LOCATION))
"RTN","RORUPD09",93,0)
 . . I RC  D INCEC^RORUPDUT(.RC)  Q
"RTN","RORUPD09",94,0)
 ;
"RTN","RORUPD09",95,0)
 D CLRDES^RORUPDUT(RORFILE)
"RTN","RORUPD09",96,0)
 Q RC
"RTN","RORUPD09",97,0)
 ;
"RTN","RORUPD09",98,0)
 ;***** IMPLEMENTATION OF THE 'PTF' RULE
"RTN","RORUPD09",99,0)
PTFRULE(ICD) ;
"RTN","RORUPD09",100,0)
 N DATELMT,RC
"RTN","RORUPD09",101,0)
 S RC=0
"RTN","RORUPD09",102,0)
 F DATELMT=111,101,102,103,104,105,106,107,108,109,110  D  Q:RC
"RTN","RORUPD09",103,0)
 . S RC=+$D(^ROR(798.5,REGIEN,1,"B",+$G(RORVALS("DV",45,DATELMT,"I"))))
"RTN","RORUPD09",104,0)
 Q RC
"RTN","RORUPD50")
0^6^B24129908^B18841385
"RTN","RORUPD50",1,0)
RORUPD50 ;HCIOFO/SG - UPDATE THE PATIENT IN THE REGISTRIES ;8/2/05 9:14am
"RTN","RORUPD50",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**10,14,18**;Feb 17, 2006;Build 25
"RTN","RORUPD50",3,0)
 ;
"RTN","RORUPD50",4,0)
 ; This routine uses the following IAs:
"RTN","RORUPD50",5,0)
 ;
"RTN","RORUPD50",6,0)
 ; #2051  FIND^DIC (supported)
"RTN","RORUPD50",7,0)
 ; #10013 ^DIK (supported)
"RTN","RORUPD50",8,0)
 ; #2056  $$GET1^DIQ (supported)
"RTN","RORUPD50",9,0)
 ; #2055  $$ROOT^DILFD (supported)
"RTN","RORUPD50",10,0)
 ; #2053  UPDATE^DIE (supported)
"RTN","RORUPD50",11,0)
 ; #2053  FILE^DIE (supported)
"RTN","RORUPD50",12,0)
 Q
"RTN","RORUPD50",13,0)
 ;******************************************************************************
"RTN","RORUPD50",14,0)
 ;******************************************************************************
"RTN","RORUPD50",15,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORUPD50",16,0)
 ;        
"RTN","RORUPD50",17,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORUPD50",18,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORUPD50",19,0)
 ;ROR*1.5*14   APR  2011   A SAUNDERS   ADD: add patient as confirmed if they 
"RTN","RORUPD50",20,0)
 ;                                      are in the "ROR HCV CONFIRM" array, 
"RTN","RORUPD50",21,0)
 ;                                      created in HCV^RORUPD04.
"RTN","RORUPD50",22,0)
 ;ROR*1.5*18   APR  2012   C RAY        Added logic to set confirm date to
"RTN","RORUPD50",23,0)
 ;                                      date of oldest selection rule
"RTN","RORUPD50",24,0)
 ;******************************************************************************
"RTN","RORUPD50",25,0)
 ;******************************************************************************
"RTN","RORUPD50",26,0)
 ;
"RTN","RORUPD50",27,0)
 ;***** ADDS THE PATIENT TO THE REGISTRY
"RTN","RORUPD50",28,0)
 ;
"RTN","RORUPD50",29,0)
 ; PATIEN        Patient IEN
"RTN","RORUPD50",30,0)
 ; REGIEN        Registry IEN
"RTN","RORUPD50",31,0)
 ;
"RTN","RORUPD50",32,0)
 ; [ROR8RULS]    Closed root of a local array containing list of
"RTN","RORUPD50",33,0)
 ;               triggered selection rules:
"RTN","RORUPD50",34,0)
 ;                 @ROR8RULS@(RuleIEN)=Date
"RTN","RORUPD50",35,0)
 ;               If this parameter is not defined or equals to
"RTN","RORUPD50",36,0)
 ;               an empty string, selection rules are loaded from
"RTN","RORUPD50",37,0)
 ;               corresponding sub-node of the ^TMP("RORUPD",$J,"U").
"RTN","RORUPD50",38,0)
 ;
"RTN","RORUPD50",39,0)
 ; [[.]DOD]      Date of death. If this parameter is undefined,
"RTN","RORUPD50",40,0)
 ;               its value will be taken from the ROR PATIENT file.
"RTN","RORUPD50",41,0)
 ;               If you are going to call this function several times
"RTN","RORUPD50",42,0)
 ;               for the same patient (for different registries),
"RTN","RORUPD50",43,0)
 ;               pass a reference to undefined local variable (the
"RTN","RORUPD50",44,0)
 ;               DOD will be read from the file only once).
"RTN","RORUPD50",45,0)
 ;
"RTN","RORUPD50",46,0)
 ; Return values:
"RTN","RORUPD50",47,0)
 ;       <0  Error code
"RTN","RORUPD50",48,0)
 ;        0  Ok
"RTN","RORUPD50",49,0)
 ;        1  Patient has already existed in the registry
"RTN","RORUPD50",50,0)
 ;
"RTN","RORUPD50",51,0)
 ;NOTE: Patch 14 includes functionality to automatically confirm a HEPC patient
"RTN","RORUPD50",52,0)
 ;into the registry if the patient had a positive test result for any 1 of
"RTN","RORUPD50",53,0)
 ;the 9 new HCV LOINCS added with the patch.
"RTN","RORUPD50",54,0)
 ;
"RTN","RORUPD50",55,0)
ADD(PATIEN,REGIEN,ROR8RULS,DOD) ;
"RTN","RORUPD50",56,0)
 N I,IENS,IENS01,RC,RORFDA,RORIEN,RORMSG,RULEIEN,TMP,ROREDT
"RTN","RORUPD50",57,0)
 ;--- Quit if the patient is already in the registry
"RTN","RORUPD50",58,0)
 Q:$$PRRIEN^RORUTL01(PATIEN,REGIEN)>0 1
"RTN","RORUPD50",59,0)
 ;
"RTN","RORUPD50",60,0)
 ;--- Prepare registry data
"RTN","RORUPD50",61,0)
 K RORFDA  S IENS="+1,"
"RTN","RORUPD50",62,0)
 S RORFDA(798,IENS,.01)=PATIEN           ; Patient Name
"RTN","RORUPD50",63,0)
 S RORFDA(798,IENS,.02)=REGIEN           ; Registry
"RTN","RORUPD50",64,0)
 ;set status confirmed if registry is auto-confirm 
"RTN","RORUPD50",65,0)
 S RORFDA(798,IENS,3)=$S($D(^ROR(798.1,"C",1,+REGIEN)):0,1:4)  ;patch 18  cdate set to now                  ; Pending
"RTN","RORUPD50",66,0)
 ;add patient as "confirmed" if patient had + HCV test (HEPC registry only)
"RTN","RORUPD50",67,0)
 I REGIEN=1,$D(^TMP("ROR HCV CONFIRM",$J,PATIEN)) S RORFDA(798,IENS,3)=0 ;Confirmed
"RTN","RORUPD50",68,0)
 S RORFDA(798,IENS,4)=1                  ; Update Demographics
"RTN","RORUPD50",69,0)
 S RORFDA(798,IENS,5)=1                  ; Update Local Data
"RTN","RORUPD50",70,0)
 I $$TESTPAT^RORUTL01(PATIEN) S RORFDA(798,IENS,11)=1 ; Don't Send = 1 if test patient
"RTN","RORUPD50",71,0)
 ;--- Get the date of death
"RTN","RORUPD50",72,0)
 S:'($D(DOD)#10) DOD=$$GET1^DIQ(798.4,PATIEN_",",.351,"I",,"RORMSG")
"RTN","RORUPD50",73,0)
 ;--- Load list of triggered rules
"RTN","RORUPD50",74,0)
 S:$G(ROR8RULS)="" ROR8RULS=$NA(@RORUPDPI@("U",PATIEN,2,REGIEN))
"RTN","RORUPD50",75,0)
 S RULEIEN="",ROREDT=DT  ;new variable for earliest rule date
"RTN","RORUPD50",76,0)
 F I=1:1  S RULEIEN=$O(@ROR8RULS@(RULEIEN))  Q:RULEIEN=""  D
"RTN","RORUPD50",77,0)
 . S IENS01="+"_(1000+I)_","_IENS
"RTN","RORUPD50",78,0)
 . S RORFDA(798.01,IENS01,.01)=RULEIEN  ; SELECTION RULE
"RTN","RORUPD50",79,0)
 . S TMP=$P(@ROR8RULS@(RULEIEN),U)\1
"RTN","RORUPD50",80,0)
 . ;--- Get date if earliest rule
"RTN","RORUPD50",81,0)
 . I TMP>0 D
"RTN","RORUPD50",82,0)
 . . S RORFDA(798.01,IENS01,1)=TMP
"RTN","RORUPD50",83,0)
 . . S ROREDT=$S(TMP<ROREDT:TMP,1:ROREDT)
"RTN","RORUPD50",84,0)
 . S TMP=+$P(@ROR8RULS@(RULEIEN),U,2)
"RTN","RORUPD50",85,0)
 . S:TMP>0 RORFDA(798.01,IENS01,2)=TMP  ; LOCATION
"RTN","RORUPD50",86,0)
 ;
"RTN","RORUPD50",87,0)
 ;--- Registry update transaction
"RTN","RORUPD50",88,0)
 S RC=0  D
"RTN","RORUPD50",89,0)
 . ;--- Call "before update" entry point
"RTN","RORUPD50",90,0)
 . S ENTRY=$G(RORUPD("UPD",REGIEN,1))
"RTN","RORUPD50",91,0)
 . I ENTRY'=""  X "S RC="_ENTRY_"(.RORFDA,PATIEN,REGIEN)"  Q:RC<0
"RTN","RORUPD50",92,0)
 . ;--- Make sure that the DON'T SEND flag is set for 'test' patient
"RTN","RORUPD50",93,0)
 . S:$$TESTPAT^RORUTL01(PATIEN) RORFDA(798,IENS,11)=1
"RTN","RORUPD50",94,0)
 . ;--- Update the registry
"RTN","RORUPD50",95,0)
 . D UPDATE^DIE(,"RORFDA","RORIEN","RORMSG")
"RTN","RORUPD50",96,0)
 . I $G(RORMSG("DIERR"))  S RC=$$DBS^RORERR("RORMSG",-9)  Q
"RTN","RORUPD50",97,0)
 . ;--- Overwrite triggered Confirmation date for Auto confirm registries
"RTN","RORUPD50",98,0)
 . I $D(^ROR(798.1,"C",1,REGIEN)) D
"RTN","RORUPD50",99,0)
 . . K RORFDA,RORMSG S RORFDA(798,RORIEN(1)_",",2)=ROREDT
"RTN","RORUPD50",100,0)
 . . D FILE^DIE(,"RORFDA","RORMSG")
"RTN","RORUPD50",101,0)
 . . I $G(RORMSG("DIERR"))  S RC=$$DBS^RORERR("RORMSG",-9)  Q
"RTN","RORUPD50",102,0)
 . ;--- Call "after update" entry point
"RTN","RORUPD50",103,0)
 . S ENTRY=$G(RORUPD("UPD",REGIEN,2))
"RTN","RORUPD50",104,0)
 . I ENTRY'=""  X "S RC="_ENTRY_"(RORIEN(1),PATIEN,REGIEN)"  Q:RC<0
"RTN","RORUPD50",105,0)
 Q:RC'<0 0
"RTN","RORUPD50",106,0)
 ;
"RTN","RORUPD50",107,0)
 ;--- Rollback the update in case of error(s)
"RTN","RORUPD50",108,0)
 N DA,DIK
"RTN","RORUPD50",109,0)
 S DIK=$$ROOT^DILFD(798),DA=$G(RORIEN(1))
"RTN","RORUPD50",110,0)
 D:DA>0 ^DIK
"RTN","RORUPD50",111,0)
 Q RC
"RTN","RORUPD50",112,0)
 ;
"RTN","RORUPD50",113,0)
 ;***** ADDS PATIENT DATA TO THE 'ROR PATIENT' FILE
"RTN","RORUPD50",114,0)
 ;
"RTN","RORUPD50",115,0)
 ; PATIEN        Patient IEN
"RTN","RORUPD50",116,0)
 ;
"RTN","RORUPD50",117,0)
 ; Return values:
"RTN","RORUPD50",118,0)
 ;       <0  Error code
"RTN","RORUPD50",119,0)
 ;        0  Ok
"RTN","RORUPD50",120,0)
 ;        1  Patient data have already existed
"RTN","RORUPD50",121,0)
 ;
"RTN","RORUPD50",122,0)
ADDPDATA(PATIEN) ;
"RTN","RORUPD50",123,0)
 N IENS,RC,RORBUF,RORPAT,RORIEN,RORMSG
"RTN","RORUPD50",124,0)
 ;--- Try to find patient data
"RTN","RORUPD50",125,0)
 D FIND^DIC(798.4,,"@","QUX",PATIEN,1,"B",,,"RORBUF","RORMSG")
"RTN","RORUPD50",126,0)
 Q:$G(RORMSG("DIERR")) $$DBS^RORERR("RORMSG",-9,,,798.4)
"RTN","RORUPD50",127,0)
 ;--- Patient data already exists in the file
"RTN","RORUPD50",128,0)
 Q:$G(RORBUF("DILIST",0)) 1
"RTN","RORUPD50",129,0)
 ;--- Check if the patient record in the file #2 is valid
"RTN","RORUPD50",130,0)
 S RC=$$CHKPTR^RORUTL05(PATIEN)  Q:RC<0 RC
"RTN","RORUPD50",131,0)
 ;--- Prepare patient data
"RTN","RORUPD50",132,0)
 S IENS="+1,"
"RTN","RORUPD50",133,0)
 S RC=$$PATDATA^RORUPD52(PATIEN_",",.RORPAT,IENS)  Q:RC<0 RC
"RTN","RORUPD50",134,0)
 S RORIEN(1)=PATIEN                      ; IEN of the new record
"RTN","RORUPD50",135,0)
 S RORPAT(798.4,IENS,.01)=PATIEN         ; Patient Name
"RTN","RORUPD50",136,0)
 ;--- Add the patient record to the file
"RTN","RORUPD50",137,0)
 D UPDATE^DIE(,"RORPAT","RORIEN","RORMSG")
"RTN","RORUPD50",138,0)
 I $G(RORMSG("DIERR"))  D  Q:RC
"RTN","RORUPD50",139,0)
 . S RC=$$DBS^RORERR("RORMSG",-9,,PATIEN,798.4)
"RTN","RORUPD50",140,0)
 Q 0
"RTN","RORUPD50",141,0)
 ;
"RTN","RORUPD50",142,0)
 ;***** ADDS THE PATIENT TO MARKED REGISTRIES
"RTN","RORUPD50",143,0)
 ;
"RTN","RORUPD50",144,0)
 ; PATIEN        Patient IEN
"RTN","RORUPD50",145,0)
 ;
"RTN","RORUPD50",146,0)
 ; Return values:
"RTN","RORUPD50",147,0)
 ;       <0  Error code
"RTN","RORUPD50",148,0)
 ;        0  Patient should not be added to the registry
"RTN","RORUPD50",149,0)
 ;       >0  Patient has been added to the registry
"RTN","RORUPD50",150,0)
 ;
"RTN","RORUPD50",151,0)
UPDREG(PATIEN) ;
"RTN","RORUPD50",152,0)
 N DOD,ENTRY,INCTVDT,RC,REGIEN
"RTN","RORUPD50",153,0)
 ;--- Check if patient should be added to any registry
"RTN","RORUPD50",154,0)
 Q:$D(@RORUPDPI@("U",PATIEN,2))<10 0
"RTN","RORUPD50",155,0)
 ;--- Add patient data
"RTN","RORUPD50",156,0)
 S RC=$$ADDPDATA(PATIEN)  Q:RC<0 RC
"RTN","RORUPD50",157,0)
 ;--- Update all marked registries
"RTN","RORUPD50",158,0)
 S REGIEN="",RC=0
"RTN","RORUPD50",159,0)
 F  D  Q:REGIEN=""  S RC=$$ADD(PATIEN,REGIEN,,.DOD)  Q:RC<0
"RTN","RORUPD50",160,0)
 . S REGIEN=$O(@RORUPDPI@("U",PATIEN,2,REGIEN))
"RTN","RORUPD50",161,0)
 Q $S(RC<0:RC,1:1)
"RTN","RORUPDUT")
0^1^B53163080^B47401581
"RTN","RORUPDUT",1,0)
RORUPDUT ;HCIOFO/SG - REGISTRY UPDATE UTILITIES  ; 8/2/05 9:17am
"RTN","RORUPDUT",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**18**;Feb 17, 2006;Build 25
"RTN","RORUPDUT",3,0)
 ;
"RTN","RORUPDUT",4,0)
 ;*****************************************************************************
"RTN","RORUPDUT",5,0)
 ;*****************************************************************************
"RTN","RORUPDUT",6,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORUPDUT",7,0)
 ;        
"RTN","RORUPDUT",8,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORUPDUT",9,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORUPDUT",10,0)
 ;ROR*1.5*18   APR 2012    C RAY        Add logic to define REGIEN for
"RTN","RORUPDUT",11,0)
 ;                                      ROR SELECTION RULE EXPRESSION
"RTN","RORUPDUT",12,0)
 ;*****************************************************************************
"RTN","RORUPDUT",13,0)
 ;****************************************************************************
"RTN","RORUPDUT",14,0)
 ; This routine uses the following IAs:
"RTN","RORUPDUT",15,0)
 ;
"RTN","RORUPDUT",16,0)
 ; #2051  FIND^DIC  (supported)
"RTN","RORUPDUT",17,0)
 ; #2056  GETS^DIQ (supported)
"RTN","RORUPDUT",18,0)
 ;****************************************************************************          
"RTN","RORUPDUT",19,0)
 ;
"RTN","RORUPDUT",20,0)
 ; RORVALS ------------- CALCULATED VALUES
"RTN","RORUPDUT",21,0)
 ;
"RTN","RORUPDUT",22,0)
 ; RORVALS("DV",         VALUES OF THE DATA ELEMENTS
"RTN","RORUPDUT",23,0)
 ;   File#,DataCode,"E") External value
"RTN","RORUPDUT",24,0)
 ;   File#,DataCode,"I") Internal value
"RTN","RORUPDUT",25,0)
 ;
"RTN","RORUPDUT",26,0)
 ; RORVALS("LS",         LIST OF TRIGGERED LAB SEARCHES
"RTN","RORUPDUT",27,0)
 ;   LabSearch#)         Observation descriptor
"RTN","RORUPDUT",28,0)
 ;                         ^01: Date/time of the observation
"RTN","RORUPDUT",29,0)
 ;                         ^02: Institution IEN
"RTN","RORUPDUT",30,0)
 ;
"RTN","RORUPDUT",31,0)
 ; RORVALS("SV",         VALUES OF THE SELECTION RULES
"RTN","RORUPDUT",32,0)
 ;   Rule Name,          Current value
"RTN","RORUPDUT",33,0)
 ;     "AVG")            Average value
"RTN","RORUPDUT",34,0)
 ;     "CNT")            Counter
"RTN","RORUPDUT",35,0)
 ;     "DTF")            Used by the {SDF} and {SDL} macros to store
"RTN","RORUPDUT",36,0)
 ;     "DTL")            the earliest and the latest trigger dates
"RTN","RORUPDUT",37,0)
 ;     "MAX")            Maximum value
"RTN","RORUPDUT",38,0)
 ;     "MIN")            Minimum value
"RTN","RORUPDUT",39,0)
 ;     "SUM")            Total value
"RTN","RORUPDUT",40,0)
 ;
"RTN","RORUPDUT",41,0)
 ; PREDEFINED NAME ----- VALUE AND DESCRIPTION
"RTN","RORUPDUT",42,0)
 ;
"RTN","RORUPDUT",43,0)
 ; "ROR DFN"             IEN of the patient being processed
"RTN","RORUPDUT",44,0)
 ; "ROR SRDT"            Date when the current selection rule was
"RTN","RORUPDUT",45,0)
 ;                       triggered (it is set by APLRULES^RORUPDUT
"RTN","RORUPDUT",46,0)
 ;                       but could be changed by selection rules).
"RTN","RORUPDUT",47,0)
 ;                       The {GDF} and {GDL} macros modify this
"RTN","RORUPDUT",48,0)
 ;                       value as well.
"RTN","RORUPDUT",49,0)
 ; "ROR SRLOC"           Institution IEN where the selection rule
"RTN","RORUPDUT",50,0)
 ;                       was triggered
"RTN","RORUPDUT",51,0)
 ;
"RTN","RORUPDUT",52,0)
 Q
"RTN","RORUPDUT",53,0)
 ;
"RTN","RORUPDUT",54,0)
 ;***** APPLIES SELECTION RULES TO THE RECORD
"RTN","RORUPDUT",55,0)
 ;
"RTN","RORUPDUT",56,0)
 ; FILE          File/Subfile number
"RTN","RORUPDUT",57,0)
 ; IENS          IENS of the current record
"RTN","RORUPDUT",58,0)
 ; MODE          "B" (process before subfiles) or
"RTN","RORUPDUT",59,0)
 ;               "A" (process after subfiles)
"RTN","RORUPDUT",60,0)
 ; [DATE]        Trigger date (TODAY by default)
"RTN","RORUPDUT",61,0)
 ; [LOCATION]    Institution IEN (empty by default)
"RTN","RORUPDUT",62,0)
 ;
"RTN","RORUPDUT",63,0)
 ; Return values:
"RTN","RORUPDUT",64,0)
 ;       <0  Error code
"RTN","RORUPDUT",65,0)
 ;        0  Continue processing of the current patient
"RTN","RORUPDUT",66,0)
 ;        1  Stop looping
"RTN","RORUPDUT",67,0)
 ;
"RTN","RORUPDUT",68,0)
APLRULES(FILE,IENS,MODE,DATE,LOCATION) ;
"RTN","RORUPDUT",69,0)
 N EXPR,HDR,LM,PATIEN,RC,REGIEN,RI,RULENAME,RULENODE,TMP
"RTN","RORUPDUT",70,0)
 S:'$G(DATE) DATE=$$DT^XLFDT
"RTN","RORUPDUT",71,0)
 ;--- Loop through the selection rules
"RTN","RORUPDUT",72,0)
 S RI="",RC=0
"RTN","RORUPDUT",73,0)
 F  S RI=$O(RORUPD("SR",FILE,MODE,RI))  Q:RI=""  D  Q:RC<0
"RTN","RORUPDUT",74,0)
 . S RULENODE=$NA(RORUPD("SR",FILE,MODE,RI))
"RTN","RORUPDUT",75,0)
 . S RORVALS("SV","ROR SRDT")=$P(DATE,".")
"RTN","RORUPDUT",76,0)
 . S RORVALS("SV","ROR SRLOC")=$G(LOCATION)
"RTN","RORUPDUT",77,0)
 . S HDR=$G(@RULENODE),RULENAME=$P(HDR,U)
"RTN","RORUPDUT",78,0)
 . ;--- If a top level rule does not exist in the control list, this
"RTN","RORUPDUT",79,0)
 . ;    rule has been already triggered for the patient. So, there is
"RTN","RORUPDUT",80,0)
 . ;    no need to check it again.
"RTN","RORUPDUT",81,0)
 . I $P(HDR,U,3)  Q:'$D(RORUPD("LM",1,RULENAME))
"RTN","RORUPDUT",82,0)
 . ;--- Get value of registry for selection rule
"RTN","RORUPDUT",83,0)
 . S REGIEN=$O(@RULENODE@(2,""))
"RTN","RORUPDUT",84,0)
 . Q:REGIEN=""
"RTN","RORUPDUT",85,0)
 . ;--- Compute the expression of the selection rule
"RTN","RORUPDUT",86,0)
 . X "S RC="_@RULENODE@(1)
"RTN","RORUPDUT",87,0)
 . I $P(HDR,U,3)  Q:'RC  D               ; TOP LEVEL RULE
"RTN","RORUPDUT",88,0)
 . . S PATIEN=$$GETVAL("ROR DFN"),REGIEN=""
"RTN","RORUPDUT",89,0)
 . . F  S REGIEN=$O(@RULENODE@(2,REGIEN))  Q:REGIEN=""  D
"RTN","RORUPDUT",90,0)
 . . . ;--- Check if the patient is already in the registry
"RTN","RORUPDUT",91,0)
 . . . Q:'$G(RORUPD("LM2",REGIEN))
"RTN","RORUPDUT",92,0)
 . . . ;--- Save the rule reference for the registry and new patient
"RTN","RORUPDUT",93,0)
 . . . S TMP=$$GETVAL("ROR SRDT")_U_$$GETVAL("ROR SRLOC")
"RTN","RORUPDUT",94,0)
 . . . S @RORUPDPI@("U",PATIEN,2,REGIEN,+$P(HDR,U,2))=TMP
"RTN","RORUPDUT",95,0)
 . . . ;--- Remove the registry from the control list
"RTN","RORUPDUT",96,0)
 . . . K RORUPD("LM",2,REGIEN)
"RTN","RORUPDUT",97,0)
 . . ;--- Remove the rule from the control list
"RTN","RORUPDUT",98,0)
 . . K RORUPD("LM",1,RULENAME)
"RTN","RORUPDUT",99,0)
 . E  D SETVAL(RULENAME,RC)              ; LOWER LEVEL RULE
"RTN","RORUPDUT",100,0)
 . S RC=0
"RTN","RORUPDUT",101,0)
 S LM=+$G(RORUPD("LM")) ; Loop mode
"RTN","RORUPDUT",102,0)
 ;--- If the loop mode equals 0, continue processing of the patient
"RTN","RORUPDUT",103,0)
 ;    in any case. Otherwise, stop processing if the corresponding
"RTN","RORUPDUT",104,0)
 ;    control list is empty.
"RTN","RORUPDUT",105,0)
 Q $S(RC<0:RC,LM:$D(RORUPD("LM",LM))<10,1:0)
"RTN","RORUPDUT",106,0)
 ;
"RTN","RORUPDUT",107,0)
 ;***** CLEARS DATA ELEMENT VALUES
"RTN","RORUPDUT",108,0)
 ;
"RTN","RORUPDUT",109,0)
 ; FILE          File/Subfile number
"RTN","RORUPDUT",110,0)
 ;
"RTN","RORUPDUT",111,0)
CLRDES(FILE) ;
"RTN","RORUPDUT",112,0)
 K RORVALS("DV",FILE)
"RTN","RORUPDUT",113,0)
 Q
"RTN","RORUPDUT",114,0)
 ;
"RTN","RORUPDUT",115,0)
 ;***** CLEARS VALUE OF THE ERROR COUNTER
"RTN","RORUPDUT",116,0)
CLREC ;
"RTN","RORUPDUT",117,0)
 K RORUPD("ERRCNT")
"RTN","RORUPDUT",118,0)
 Q
"RTN","RORUPDUT",119,0)
 ;
"RTN","RORUPDUT",120,0)
 ;***** CLEARS VALUES OF THE SELECTION RULES ASSOCIATED WITH THE FILE
"RTN","RORUPDUT",121,0)
 ;
"RTN","RORUPDUT",122,0)
 ; FILE          File/Subfile number
"RTN","RORUPDUT",123,0)
 ;
"RTN","RORUPDUT",124,0)
CLRVALS(FILE) ;
"RTN","RORUPDUT",125,0)
 N MODE,RI,RULENAME
"RTN","RORUPDUT",126,0)
 F MODE="B","A"  D
"RTN","RORUPDUT",127,0)
 . S RI=""
"RTN","RORUPDUT",128,0)
 . F  S RI=$O(RORUPD("SR",FILE,MODE,RI))  Q:RI=""  D
"RTN","RORUPDUT",129,0)
 . . S RULENAME=$P($G(RORUPD("SR",FILE,MODE,RI)),U)
"RTN","RORUPDUT",130,0)
 . . K:RULENAME'="" RORVALS("SV",RULENAME)
"RTN","RORUPDUT",131,0)
 Q
"RTN","RORUPDUT",132,0)
 ;
"RTN","RORUPDUT",133,0)
 ;***** RETURNS A CODE OF THE DATA ELEMENT
"RTN","RORUPDUT",134,0)
 ;
"RTN","RORUPDUT",135,0)
 ; FILE          File number
"RTN","RORUPDUT",136,0)
 ; NAME          Name of the data element
"RTN","RORUPDUT",137,0)
 ;
"RTN","RORUPDUT",138,0)
 ; Return values:
"RTN","RORUPDUT",139,0)
 ;       <0  Error code
"RTN","RORUPDUT",140,0)
 ;       >0  Code of the data element
"RTN","RORUPDUT",141,0)
 ;
"RTN","RORUPDUT",142,0)
DATACODE(FILE,NAME) ;
"RTN","RORUPDUT",143,0)
 N IENS,RC,RORBUF,RORMSG
"RTN","RORUPDUT",144,0)
 S IENS=","_FILE_","
"RTN","RORUPDUT",145,0)
 D FIND^DIC(799.22,IENS,"@;.02I","X",NAME,,"B",,,"RORBUF","RORMSG")
"RTN","RORUPDUT",146,0)
 I $G(DIERR)  D  Q RC
"RTN","RORUPDUT",147,0)
 . S RC=$$DBS^RORERR("RORMSG",-9,,,799.22,IENS)
"RTN","RORUPDUT",148,0)
 S RC=+$G(RORBUF("DILIST",0))
"RTN","RORUPDUT",149,0)
 Q:RC<1 $$ERROR^RORERR(-69,,NAME)
"RTN","RORUPDUT",150,0)
 Q:RC>1 $$ERROR^RORERR(-70,,NAME)
"RTN","RORUPDUT",151,0)
 Q +$G(RORBUF("DILIST","ID",1,.02))
"RTN","RORUPDUT",152,0)
 ;
"RTN","RORUPDUT",153,0)
 ;***** PRINTS SOME DEBUG INFORMATION
"RTN","RORUPDUT",154,0)
DEBUG ;
"RTN","RORUPDUT",155,0)
 N I
"RTN","RORUPDUT",156,0)
 D ZW^RORUTL01($NA(RORUPD("FLAGS")),"Control Flags")
"RTN","RORUPDUT",157,0)
 D ZW^RORUTL01($NA(RORUPD("SR")),"Selection Rules")
"RTN","RORUPDUT",158,0)
 D ZW^RORUTL01($NA(RORUPD("UPD")),"Call-back Entry Points")
"RTN","RORUPDUT",159,0)
 W !,"Control Lists",!!
"RTN","RORUPDUT",160,0)
 F I="LM1","LM2"  D ZW^RORUTL01($NA(RORUPD(I)))
"RTN","RORUPDUT",161,0)
 D ZW^RORUTL01("RORLRC","Lab Results to check")
"RTN","RORUPDUT",162,0)
 W !,"Job number: ",$J,!
"RTN","RORUPDUT",163,0)
 Q
"RTN","RORUPDUT",164,0)
 ;
"RTN","RORUPDUT",165,0)
 ;***** GETS A VALUE OF THE DATA ELEMENT
"RTN","RORUPDUT",166,0)
 ;
"RTN","RORUPDUT",167,0)
 ; FILE          File number
"RTN","RORUPDUT",168,0)
 ; DATELMT       Code of the data element
"RTN","RORUPDUT",169,0)
 ; [TYPE]        Type of the value
"RTN","RORUPDUT",170,0)
 ;                 "E"  External
"RTN","RORUPDUT",171,0)
 ;                 "I"  Internal (default)
"RTN","RORUPDUT",172,0)
 ;
"RTN","RORUPDUT",173,0)
GETDE(FILE,DATELMT,TYPE) ;
"RTN","RORUPDUT",174,0)
 Q $G(RORVALS("DV",FILE,DATELMT,$G(TYPE,"I")))
"RTN","RORUPDUT",175,0)
 ;
"RTN","RORUPDUT",176,0)
 ;***** RETURNS VALUE OF THE ERROR COUNTER
"RTN","RORUPDUT",177,0)
GETEC() ;
"RTN","RORUPDUT",178,0)
 Q +$G(RORUPD("ERRCNT"))
"RTN","RORUPDUT",179,0)
 ;
"RTN","RORUPDUT",180,0)
 ;***** GETS VALUE OF THE SELECTION RULE
"RTN","RORUPDUT",181,0)
 ;
"RTN","RORUPDUT",182,0)
 ; RULENAME      Name of the rule
"RTN","RORUPDUT",183,0)
 ; [PFX]         Prefix of the value
"RTN","RORUPDUT",184,0)
 ;                 ""     Value itself (default)
"RTN","RORUPDUT",185,0)
 ;                 "AVG"  Average value
"RTN","RORUPDUT",186,0)
 ;                 "CNT"  Counter
"RTN","RORUPDUT",187,0)
 ;                 "MAX"  Maximum value
"RTN","RORUPDUT",188,0)
 ;                 "MIN"  Minimum value
"RTN","RORUPDUT",189,0)
 ;                 "SUM"  Total sum
"RTN","RORUPDUT",190,0)
 ;
"RTN","RORUPDUT",191,0)
GETVAL(RULENAME,PFX) ;
"RTN","RORUPDUT",192,0)
 Q $S($G(PFX)="":$G(RORVALS("SV",RULENAME)),1:$G(RORVALS("SV",RULENAME,PFX)))
"RTN","RORUPDUT",193,0)
 ;
"RTN","RORUPDUT",194,0)
 ;***** INCREMENTS VALUE OF THE ERROR COUNTER
"RTN","RORUPDUT",195,0)
 ;
"RTN","RORUPDUT",196,0)
 ; [RC]          Reference to a variable containing the error code
"RTN","RORUPDUT",197,0)
 ;
"RTN","RORUPDUT",198,0)
INCEC(RC) ;
"RTN","RORUPDUT",199,0)
 S:$G(RC,-1)<0 RORUPD("ERRCNT")=$G(RORUPD("ERRCNT"))+1,RC=0
"RTN","RORUPDUT",200,0)
 Q
"RTN","RORUPDUT",201,0)
 ;
"RTN","RORUPDUT",202,0)
 ;***** LOADS DATA ELEMENT VALUES FROM CORRESPONDING FIELDS
"RTN","RORUPDUT",203,0)
 ;
"RTN","RORUPDUT",204,0)
 ; FILE          File/Subfile number
"RTN","RORUPDUT",205,0)
 ; IENS          IENS of the current record
"RTN","RORUPDUT",206,0)
 ;
"RTN","RORUPDUT",207,0)
 ; Return values:
"RTN","RORUPDUT",208,0)
 ;       <0  Error code
"RTN","RORUPDUT",209,0)
 ;        0  Ok
"RTN","RORUPDUT",210,0)
 ;
"RTN","RORUPDUT",211,0)
LOADFLDS(FILE,IENS) ;
"RTN","RORUPDUT",212,0)
 N DE,FLD,RC,RORFDA,RORMSG,VT  K RORVALS("DV",FILE)
"RTN","RORUPDUT",213,0)
 S FLD=$G(RORUPD("SR",FILE,"F",1))  Q:FLD="" 0
"RTN","RORUPDUT",214,0)
 ;--- Load the field values
"RTN","RORUPDUT",215,0)
 D GETS^DIQ(FILE,IENS,FLD,"EIN","RORFDA","RORMSG")
"RTN","RORUPDUT",216,0)
 I $G(DIERR)  D  Q RC
"RTN","RORUPDUT",217,0)
 . S RC=$$DBS^RORERR("RORMSG",-9,,,FILE,IENS)
"RTN","RORUPDUT",218,0)
 ;--- Copy the field values from the FDA
"RTN","RORUPDUT",219,0)
 S DE=""
"RTN","RORUPDUT",220,0)
 F  S DE=$O(RORUPD("SR",FILE,"F",1,DE))  Q:DE=""  D
"RTN","RORUPDUT",221,0)
 . S FLD=+$G(RORUPD("SR",FILE,"F",1,DE))  Q:'FLD
"RTN","RORUPDUT",222,0)
 . S VT=""
"RTN","RORUPDUT",223,0)
 . F  S VT=$O(RORUPD("SR",FILE,"F",1,DE,VT))  Q:VT=""  D
"RTN","RORUPDUT",224,0)
 . . S RORVALS("DV",FILE,DE,VT)=$G(RORFDA(FILE,IENS,FLD,VT))
"RTN","RORUPDUT",225,0)
 Q 0
"RTN","RORUPDUT",226,0)
 ;
"RTN","RORUPDUT",227,0)
 ;***** SETS THE EARLIEST DATE FOR THE RULE
"RTN","RORUPDUT",228,0)
 ;
"RTN","RORUPDUT",229,0)
 ; NAME          Name of the selection rule
"RTN","RORUPDUT",230,0)
 ; COND          Result value of the logical condition
"RTN","RORUPDUT",231,0)
 ;
"RTN","RORUPDUT",232,0)
 ; Return values:
"RTN","RORUPDUT",233,0)
 ;        0  COND equals to zero
"RTN","RORUPDUT",234,0)
 ;        1  COND is not zero
"RTN","RORUPDUT",235,0)
 ;
"RTN","RORUPDUT",236,0)
SDF(NAME,COND) ;
"RTN","RORUPDUT",237,0)
 Q:'$G(COND) 0
"RTN","RORUPDUT",238,0)
 N DATE
"RTN","RORUPDUT",239,0)
 S DATE=$G(RORVALS("SV","ROR SRDT"))
"RTN","RORUPDUT",240,0)
 D:DATE>0
"RTN","RORUPDUT",241,0)
 . I $G(RORVALS("SV",NAME,"DTF"))'>0  D  Q
"RTN","RORUPDUT",242,0)
 . . S RORVALS("SV",NAME,"DTF")=DATE
"RTN","RORUPDUT",243,0)
 . S:DATE<RORVALS("SV",NAME,"DTF") RORVALS("SV",NAME,"DTF")=DATE
"RTN","RORUPDUT",244,0)
 Q 1
"RTN","RORUPDUT",245,0)
 ;
"RTN","RORUPDUT",246,0)
 ;***** SETS THE LATEST DATE FOR THE RULE
"RTN","RORUPDUT",247,0)
 ;
"RTN","RORUPDUT",248,0)
 ; NAME          Name of the selection rule
"RTN","RORUPDUT",249,0)
 ; COND          Result value of the logical condition
"RTN","RORUPDUT",250,0)
 ;
"RTN","RORUPDUT",251,0)
 ; Return values:
"RTN","RORUPDUT",252,0)
 ;        0  COND equals to zero
"RTN","RORUPDUT",253,0)
 ;        1  COND is not zero
"RTN","RORUPDUT",254,0)
 ;
"RTN","RORUPDUT",255,0)
SDL(NAME,COND) ;
"RTN","RORUPDUT",256,0)
 Q:'$G(COND) 0
"RTN","RORUPDUT",257,0)
 N DATE
"RTN","RORUPDUT",258,0)
 S DATE=$G(RORVALS("SV","ROR SRDT"))
"RTN","RORUPDUT",259,0)
 D:DATE>0
"RTN","RORUPDUT",260,0)
 . S:DATE>$G(RORVALS("SV",NAME,"DTL")) RORVALS("SV",NAME,"DTL")=DATE
"RTN","RORUPDUT",261,0)
 Q 1
"RTN","RORUPDUT",262,0)
 ;
"RTN","RORUPDUT",263,0)
 ;***** SETS VALUE OF THE SELECTION RULE
"RTN","RORUPDUT",264,0)
 ;
"RTN","RORUPDUT",265,0)
 ; RULENAME      Name of the rule
"RTN","RORUPDUT",266,0)
 ; VALUE         New value
"RTN","RORUPDUT",267,0)
 ;
"RTN","RORUPDUT",268,0)
SETVAL(RULENAME,VALUE) ;
"RTN","RORUPDUT",269,0)
 S RORVALS("SV",RULENAME)=VALUE
"RTN","RORUPDUT",270,0)
 S RORVALS("SV",RULENAME,"CNT")=$G(RORVALS("SV",RULENAME,"CNT"))+1
"RTN","RORUPDUT",271,0)
 S RORVALS("SV",RULENAME,"SUM")=$G(RORVALS("SV",RULENAME,"SUM"))+VALUE
"RTN","RORUPDUT",272,0)
 S RORVALS("SV",RULENAME,"AVG")=RORVALS("SV",RULENAME,"SUM")/RORVALS("SV",RULENAME,"CNT")
"RTN","RORUPDUT",273,0)
 ;
"RTN","RORUPDUT",274,0)
 I $G(RORVALS("SV",RULENAME,"MIN"))=""  S RORVALS("SV",RULENAME,"MIN")=VALUE
"RTN","RORUPDUT",275,0)
 E   S:VALUE<RORVALS("SV",RULENAME,"MIN") RORVALS("SV",RULENAME,"MIN")=VALUE
"RTN","RORUPDUT",276,0)
 ;
"RTN","RORUPDUT",277,0)
 I $G(RORVALS("SV",RULENAME,"MAX"))=""  S RORVALS("SV",RULENAME,"MAX")=VALUE
"RTN","RORUPDUT",278,0)
 E   S:VALUE>RORVALS("SV",RULENAME,"MAX") RORVALS("SV",RULENAME,"MAX")=VALUE
"RTN","RORUPDUT",279,0)
 Q
"RTN","RORUPDUT",280,0)
 ;
"RTN","RORUPDUT",281,0)
 ;***** GETS THE TRIGGER DATE OF THE RULE
"RTN","RORUPDUT",282,0)
 ;
"RTN","RORUPDUT",283,0)
 ; NAME          Name of the selection rule
"RTN","RORUPDUT",284,0)
 ; PFX           Prefix of the value ("GDF" or "GDL")
"RTN","RORUPDUT",285,0)
 ; COND          Result value of the logical condition
"RTN","RORUPDUT",286,0)
 ;
"RTN","RORUPDUT",287,0)
 ; Return values:
"RTN","RORUPDUT",288,0)
 ;        0  COND equals to zero
"RTN","RORUPDUT",289,0)
 ;        1  COND is not zero
"RTN","RORUPDUT",290,0)
 ;
"RTN","RORUPDUT",291,0)
SRDT(NAME,PFX,COND) ;
"RTN","RORUPDUT",292,0)
 Q:'$G(COND) 0
"RTN","RORUPDUT",293,0)
 N DATE
"RTN","RORUPDUT",294,0)
 S DATE=$G(RORVALS("SV",NAME,$S(PFX="GDL":"DTL",1:"DTF")))
"RTN","RORUPDUT",295,0)
 I DATE  S:DATE<$G(RORVALS("SV","ROR SRDT")) RORVALS("SV","ROR SRDT")=DATE
"RTN","RORUPDUT",296,0)
 Q 1
"RTN","RORUTL01")
0^14^B43789340^B29781636
"RTN","RORUTL01",1,0)
RORUTL01 ;HCIOFO/SG - UTILITIES  ; 5/12/05 3:29pm
"RTN","RORUTL01",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**18**;Feb 17, 2006;Build 25
"RTN","RORUTL01",3,0)
 ;
"RTN","RORUTL01",4,0)
 ; This routine uses the following IAs:
"RTN","RORUTL01",5,0)
 ;
"RTN","RORUTL01",6,0)
 ; #3301         Access to the .6 field of the file #2
"RTN","RORUTL01",7,0)
 ; #3744         $$TESTPAT^VADPT
"RTN","RORUTL01",8,0)
 ; #10035        Access to the .01 and .09 fields of the file #2
"RTN","RORUTL01",9,0)
 ; #10038        Access to the HOLIDAY file (supported)
"RTN","RORUTL01",10,0)
 ; #2051         $$FIND1^DIC         
"RTN","RORUTL01",11,0)
 ;               LIST^DIC            
"RTN","RORUTL01",12,0)
 ; #10016       ^DIM
"RTN","RORUTL01",13,0)
 ; #2056         GETS^DIQ                
"RTN","RORUTL01",14,0)
 ;*****************************************************************************
"RTN","RORUTL01",15,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORUTL01",16,0)
 ;        
"RTN","RORUTL01",17,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORUTL01",18,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORUTL01",19,0)
 ;ROR*1.5*18   APR  2012   C RAY        Added API $$REGSEL
"RTN","RORUTL01",20,0)
 ;                                               
"RTN","RORUTL01",21,0)
 ;******************************************************************************
"RTN","RORUTL01",22,0)
 Q
"RTN","RORUTL01",23,0)
 ;
"RTN","RORUTL01",24,0)
 ;***** SENDS ALERT TO REGISTRY COORDINATORS
"RTN","RORUTL01",25,0)
 ;
"RTN","RORUTL01",26,0)
 ; [.]REGLST     Either name of the registry or reference to a local
"RTN","RORUTL01",27,0)
 ;               array containing registry names as subscripts and
"RTN","RORUTL01",28,0)
 ;               optional registry IENs as values
"RTN","RORUTL01",29,0)
 ;
"RTN","RORUTL01",30,0)
 ; MSG           Text of the message or negative error code. The '^'
"RTN","RORUTL01",31,0)
 ;               characters are replaced with spaces in the text.
"RTN","RORUTL01",32,0)
 ;
"RTN","RORUTL01",33,0)
 ; [XQAROU]      Indicates a ROUTINE or TAG^ROUTINE to run when
"RTN","RORUTL01",34,0)
 ;               the alert is processed
"RTN","RORUTL01",35,0)
 ;
"RTN","RORUTL01",36,0)
 ; [XQADATA]     Use this to store a package-specific data string,
"RTN","RORUTL01",37,0)
 ;               in any format
"RTN","RORUTL01",38,0)
 ;
"RTN","RORUTL01",39,0)
 ; [PATIEN]      Patient IEN
"RTN","RORUTL01",40,0)
 ;
"RTN","RORUTL01",41,0)
 ; [ARG2-ARG5]   Optional parameters as for the $$ERROR^RORERR
"RTN","RORUTL01",42,0)
 ;
"RTN","RORUTL01",43,0)
ALERT(REGLST,MSG,XQAROU,XQADATA,PATIEN,ARG2,ARG3,ARG4,ARG5) ;
"RTN","RORUTL01",44,0)
 N IR,RC,REGIEN,REGNAME,RORBUF,RORMSG,TMP,XQA,XQAFLG,XQAMSG
"RTN","RORUTL01",45,0)
 ;--- Prepare the notification list
"RTN","RORUTL01",46,0)
 I $D(REGLST)=1  Q:REGLST=""  S REGLST(REGLST)=""
"RTN","RORUTL01",47,0)
 S REGNAME="",RC=0
"RTN","RORUTL01",48,0)
 F  S REGNAME=$O(REGLST(REGNAME))  Q:REGNAME=""  D
"RTN","RORUTL01",49,0)
 . S REGIEN=+$G(REGLST(REGNAME))
"RTN","RORUTL01",50,0)
 . I REGIEN'>0  D  Q:REGIEN'>0
"RTN","RORUTL01",51,0)
 . . S REGIEN=$$REGIEN^RORUTL02(REGNAME)
"RTN","RORUTL01",52,0)
 . ;--- Load the notification list from the registry parameters
"RTN","RORUTL01",53,0)
 . K RORBUF  S TMP=","_REGIEN_","
"RTN","RORUTL01",54,0)
 . D LIST^DIC(798.114,TMP,"@;.01I","U",,,,"B",,,"RORBUF","RORMSG")
"RTN","RORUTL01",55,0)
 . S RC=$$DBS^RORERR("RORMSG",-9)  Q:RC<0
"RTN","RORUTL01",56,0)
 . S IR=""
"RTN","RORUTL01",57,0)
 . F  S IR=$O(RORBUF("DILIST","ID",IR))  Q:IR=""  D
"RTN","RORUTL01",58,0)
 . . S TMP=+$G(RORBUF("DILIST","ID",IR,.01))  S:TMP>0 XQA(TMP)=""
"RTN","RORUTL01",59,0)
 Q:$D(XQA)<10
"RTN","RORUTL01",60,0)
 ;--- Get text of the error message (if necessary)
"RTN","RORUTL01",61,0)
 I +MSG=MSG  Q:MSG'<0  D
"RTN","RORUTL01",62,0)
 . S MSG=$$MSG^RORERR20(+MSG,,.PATIEN,.ARG2,.ARG3,.ARG4,.ARG5)
"RTN","RORUTL01",63,0)
 S MSG=$TR(MSG,"^"," "),XQAMSG="ROR: ",TMP=70-$L(XQAMSG)-3
"RTN","RORUTL01",64,0)
 S XQAMSG=XQAMSG_$S($L(MSG)>TMP:$E(MSG,1,TMP)_"...",1:MSG)
"RTN","RORUTL01",65,0)
 ;--- Setup default alert processing routine
"RTN","RORUTL01",66,0)
 I $G(XQAROU)="",$G(XQADATA)=""  D
"RTN","RORUTL01",67,0)
 . S XQADATA=$E(MSG,1,78)_U_$G(PATIEN)
"RTN","RORUTL01",68,0)
 . S REGNAME=""
"RTN","RORUTL01",69,0)
 . F  S REGNAME=$O(REGLST(REGNAME))  Q:REGNAME=""  D
"RTN","RORUTL01",70,0)
 . . S XQADATA=XQADATA_U_REGNAME
"RTN","RORUTL01",71,0)
 . S XQAROU="ALERTRTN^RORUTL01"
"RTN","RORUTL01",72,0)
 ;--- Send the alert
"RTN","RORUTL01",73,0)
 S XQAFLG="D"  D SETUP^XQALERT
"RTN","RORUTL01",74,0)
 Q
"RTN","RORUTL01",75,0)
 ;
"RTN","RORUTL01",76,0)
 ;***** DEFAULT ALERT PROCESSING ROUTINE
"RTN","RORUTL01",77,0)
 ;
"RTN","RORUTL01",78,0)
 ; XQADATA       Alert data
"RTN","RORUTL01",79,0)
 ;                 ^1: Message
"RTN","RORUTL01",80,0)
 ;                 ^2: Patient DFN
"RTN","RORUTL01",81,0)
 ;                 ^3: Registry name
"RTN","RORUTL01",82,0)
 ;                     ...
"RTN","RORUTL01",83,0)
 ;                 ^N: Registry name
"RTN","RORUTL01",84,0)
 ;
"RTN","RORUTL01",85,0)
ALERTRTN ;
"RTN","RORUTL01",86,0)
 Q:$G(XQADATA)=""
"RTN","RORUTL01",87,0)
 N I,REGNAME
"RTN","RORUTL01",88,0)
 W !!,$P(XQADATA,"^"),!
"RTN","RORUTL01",89,0)
 W:$P(XQADATA,"^",2) "Patient DFN: ",$P(XQADATA,"^",2),!
"RTN","RORUTL01",90,0)
 W "Processed Registries",!
"RTN","RORUTL01",91,0)
 F I=3:1  S REGNAME=$P(XQADATA,"^",I)  Q:REGNAME=""  W ?3,REGNAME,!
"RTN","RORUTL01",92,0)
 Q
"RTN","RORUTL01",93,0)
 ;
"RTN","RORUTL01",94,0)
 ;***** INITIALIZES THE VARIABLES
"RTN","RORUTL01",95,0)
 ;
"RTN","RORUTL01",96,0)
 ; NAMESP        Namespace to kill in the ^TMP global
"RTN","RORUTL01",97,0)
 ;               (must start with "ROR")
"RTN","RORUTL01",98,0)
 ; [XPURGE]      Purge namespaced nodes in the ^XTMP global.
"RTN","RORUTL01",99,0)
 ;               The ^XTMP(NAMESP_$J) node is always killed.
"RTN","RORUTL01",100,0)
 ;
"RTN","RORUTL01",101,0)
INIT(NAMESP,XPURGE) ;
"RTN","RORUTL01",102,0)
 N I,L,NOW  K ^TMP($J)
"RTN","RORUTL01",103,0)
 S:$G(U)="" U="^"  S:'$G(DT) DT=$$DT^XLFDT
"RTN","RORUTL01",104,0)
 Q:$E($G(NAMESP),1,3)'="ROR"
"RTN","RORUTL01",105,0)
 ;--- Kill namespaced nodes in the ^TMP global
"RTN","RORUTL01",106,0)
 S I=NAMESP,L=$L(NAMESP)
"RTN","RORUTL01",107,0)
 F  K ^TMP(I,$J)  S I=$O(^TMP(I))  Q:$E(I,1,L)'=NAMESP
"RTN","RORUTL01",108,0)
 ;--- Purge old namespaced nodes in the ^XTMP global
"RTN","RORUTL01",109,0)
 K ^XTMP(NAMESP_$J)
"RTN","RORUTL01",110,0)
 D:$G(XPURGE)
"RTN","RORUTL01",111,0)
 . S NOW=$$NOW^XLFDT,I=NAMESP,L=$L(NAMESP)
"RTN","RORUTL01",112,0)
 . F  D  S I=$O(^XTMP(I))  Q:$E(I,1,L)'=NAMESP
"RTN","RORUTL01",113,0)
 . . K:$G(^XTMP(I,0))<NOW ^XTMP(I)
"RTN","RORUTL01",114,0)
 Q
"RTN","RORUTL01",115,0)
 ;
"RTN","RORUTL01",116,0)
 ;***** INVERTS THE DATE
"RTN","RORUTL01",117,0)
 ;
"RTN","RORUTL01",118,0)
 ; DATE          Date in FileMan format
"RTN","RORUTL01",119,0)
 ; [MODE]        Mode of inversion
"RTN","RORUTL01",120,0)
 ;                 1  Strip the time BEFORE inversion
"RTN","RORUTL01",121,0)
 ;                 2  Strip the time AFTER inversion
"RTN","RORUTL01",122,0)
 ;                 3  Do not invert the time
"RTN","RORUTL01",123,0)
 ;
"RTN","RORUTL01",124,0)
INVDATE(DATE,MODE) ;
"RTN","RORUTL01",125,0)
 Q:$G(MODE)=1 9999999-$P(DATE,".")
"RTN","RORUTL01",126,0)
 Q:$G(MODE)=2 $P(9999999-DATE,".")
"RTN","RORUTL01",127,0)
 I $G(MODE)=3  Q:$P(DATE,".",2) (9999999-$P(DATE,"."))_"."_+$P(DATE,".",2)
"RTN","RORUTL01",128,0)
 Q 9999999-DATE
"RTN","RORUTL01",129,0)
 ;
"RTN","RORUTL01",130,0)
 ;***** RETURNS THE PATIENT IEN (DFN) FROM THE REGISTRY RECORD
"RTN","RORUTL01",131,0)
 ;
"RTN","RORUTL01",132,0)
 ; IEN           IEN of the registry record
"RTN","RORUTL01",133,0)
 ;
"RTN","RORUTL01",134,0)
PTIEN(IEN) ;
"RTN","RORUTL01",135,0)
 Q +$P($G(^RORDATA(798,+IEN,0)),U)
"RTN","RORUTL01",136,0)
 ;
"RTN","RORUTL01",137,0)
 ;***** RETURNS IEN OF THE PATIENT'S RECORD IN THE REGISTRY
"RTN","RORUTL01",138,0)
 ;
"RTN","RORUTL01",139,0)
 ; PATIEN        Patient IEN
"RTN","RORUTL01",140,0)
 ; REGIEN        Registry IEN
"RTN","RORUTL01",141,0)
 ;
"RTN","RORUTL01",142,0)
 ; Return Values:
"RTN","RORUTL01",143,0)
 ;       ""  The registry record has not been found
"RTN","RORUTL01",144,0)
 ;       >0  IEN of the patient's registry record
"RTN","RORUTL01",145,0)
 ;
"RTN","RORUTL01",146,0)
PRRIEN(PATIEN,REGIEN) ;
"RTN","RORUTL01",147,0)
 Q:(PATIEN'>0)!(REGIEN'>0) 0
"RTN","RORUTL01",148,0)
 Q $O(^RORDATA(798,"KEY",+PATIEN,+REGIEN,0))
"RTN","RORUTL01",149,0)
 ;
"RTN","RORUTL01",150,0)
 ;***** RETURNS NAME AND SHORT DESCRIPTION OF THE REGISTRY
"RTN","RORUTL01",151,0)
 ;
"RTN","RORUTL01",152,0)
 ; REGIEN        Registry IEN
"RTN","RORUTL01",153,0)
 ;
"RTN","RORUTL01",154,0)
 ; Return Values:
"RTN","RORUTL01",155,0)
 ;
"RTN","RORUTL01",156,0)
 ; An empty string is returned in case of an error or if there
"RTN","RORUTL01",157,0)
 ; is no registry with such IEN. Otherwise, the name and short
"RTN","RORUTL01",158,0)
 ; description of the registry separated by "^" are returned.
"RTN","RORUTL01",159,0)
 ;
"RTN","RORUTL01",160,0)
REGNAME(REGIEN) ;
"RTN","RORUTL01",161,0)
 N IENS,NAME,RORBUF,RORMSG
"RTN","RORUTL01",162,0)
 Q:'$D(^ROR(798.1,+REGIEN)) ""
"RTN","RORUTL01",163,0)
 S IENS=+REGIEN_","
"RTN","RORUTL01",164,0)
 D GETS^DIQ(798.1,IENS,".01;4",,"RORBUF","RORMSG")
"RTN","RORUTL01",165,0)
 I $G(DIERR)  D  Q ""
"RTN","RORUTL01",166,0)
 . D DBS^RORERR("RORMSG",-9,,,798.1,IENS)
"RTN","RORUTL01",167,0)
 Q RORBUF(798.1,IENS,.01)_U_$G(RORBUF(798.1,IENS,4))
"RTN","RORUTL01",168,0)
 ;
"RTN","RORUTL01",169,0)
 ;***** RETURNS LIST OF REGISTRIES
"RTN","RORUTL01",170,0)
 ;
"RTN","RORUTL01",171,0)
 ; FLAGS         "I": Registry is initialized
"RTN","RORUTL01",172,0)
 ;               "U": Registry is uninitialized
"RTN","RORUTL01",173,0)
 ;               "A": Registry records are auto confirm
"RTN","RORUTL01",174,0)
 ;               "M": Registry records are manually confirmed
"RTN","RORUTL01",175,0)
 ; 
"RTN","RORUTL01",176,0)
 ; Return Values:
"RTN","RORUTL01",177,0)
 ; REGLST       Reference to a local array containing registry
"RTN","RORUTL01",178,0)
 ;               names as subscripts 
"RTN","RORUTL01",179,0)
 ;      0        No errors
"RTN","RORUTL01",180,0)
 ;     -9        DBS FM error
"RTN","RORUTL01",181,0)
 ;
"RTN","RORUTL01",182,0)
REGSEL(FLAGS) ;
"RTN","RORUTL01",183,0)
 N RORSCR,RORMSG,INDX,REGIEN,REGNAME,RORBUF,DIERR,RC
"RTN","RORUTL01",184,0)
 ;--- filter by auto-confirm and HDT date/time 
"RTN","RORUTL01",185,0)
 S RORSCR="I $P(^(0),U,7)'=1" ;exclude inactive
"RTN","RORUTL01",186,0)
 D LIST^DIC(798.1,,"@;.01E;21.05;31I",,,,,"B",.RORSCR,,"RORBUF","RORMSG")
"RTN","RORUTL01",187,0)
 I $G(DIERR) S RC=$$DBS^RORERR("RORMSG",-9,,,798.1) Q RC
"RTN","RORUTL01",188,0)
 I $G(FLAGS)="" S FLAGS=""
"RTN","RORUTL01",189,0)
 S INDX="" F  S INDX=$O(RORBUF("DILIST","ID",INDX)) Q:INDX=""  D
"RTN","RORUTL01",190,0)
 . I FLAGS["I",($G(RORBUF("DILIST","ID",INDX,21.05))="") Q
"RTN","RORUTL01",191,0)
 . I FLAGS["U",($G(RORBUF("DILIST","ID",INDX,21.05))'="") Q
"RTN","RORUTL01",192,0)
 . I FLAGS["M",($G(RORBUF("DILIST","ID",INDX,31))=1) Q  ;skip auto confirm
"RTN","RORUTL01",193,0)
 . I FLAGS["A",($G(RORBUF("DILIST","ID",INDX,31))'=1) Q  ;skip non auto-confirm
"RTN","RORUTL01",194,0)
 . S REGNAME=$G(RORBUF("DILIST","ID",INDX,.01)) Q:REGNAME=""
"RTN","RORUTL01",195,0)
 . S REGLST(REGNAME)=""
"RTN","RORUTL01",196,0)
 Q 0
"RTN","RORUTL01",197,0)
 ;
"RTN","RORUTL01",198,0)
 ;***** CHECKS IF THE PATIENT IS A TEST ONE
"RTN","RORUTL01",199,0)
 ;
"RTN","RORUTL01",200,0)
 ; PATIEN        Patient IEN
"RTN","RORUTL01",201,0)
 ;
"RTN","RORUTL01",202,0)
 ; Return Values:
"RTN","RORUTL01",203,0)
 ;        0  The patient is NOT a test patient
"RTN","RORUTL01",204,0)
 ;        1  The patient IS a test patient
"RTN","RORUTL01",205,0)
 ;
"RTN","RORUTL01",206,0)
TESTPAT(PATIEN) ;
"RTN","RORUTL01",207,0)
 Q:$$TESTPAT^VADPT(PATIEN) 1
"RTN","RORUTL01",208,0)
 Q:$E($G(^DPT(PATIEN,0)),1,2)="ZZ" 1  ; NAME starts with "ZZ"
"RTN","RORUTL01",209,0)
 Q 0
"RTN","RORUTL01",210,0)
 ;
"RTN","RORUTL01",211,0)
 ;***** VERIFY THE ENTRY POINT
"RTN","RORUTL01",212,0)
 ;
"RTN","RORUTL01",213,0)
 ; ENTRY         Entry point of the external MUMPS function
"RTN","RORUTL01",214,0)
 ; [RECERR]      Record the errors (do not record by default)
"RTN","RORUTL01",215,0)
 ;
"RTN","RORUTL01",216,0)
 ; Return Values:
"RTN","RORUTL01",217,0)
 ;       -18  Routine does not exist
"RTN","RORUTL01",218,0)
 ;       -17  Invalid entry point
"RTN","RORUTL01",219,0)
 ;         0  Ok
"RTN","RORUTL01",220,0)
 ;
"RTN","RORUTL01",221,0)
VERIFYEP(ENTRY,RECERR) ;
"RTN","RORUTL01",222,0)
 N X
"RTN","RORUTL01",223,0)
 S X="S Y="_ENTRY  D ^DIM
"RTN","RORUTL01",224,0)
 Q:'$D(X) $S($G(RECERR):$$ERROR^RORERR(-17,,,,ENTRY),1:-17)
"RTN","RORUTL01",225,0)
 S X=$P(ENTRY,U,2)
"RTN","RORUTL01",226,0)
 X ^%ZOSF("TEST")  E  Q $S($G(RECERR):$$ERROR^RORERR(-18,,,,X),1:-18)
"RTN","RORUTL01",227,0)
 Q 0
"RTN","RORUTL01",228,0)
 ;
"RTN","RORUTL01",229,0)
 ;***** CHECKS IF THE DATE IS A WORKING DAY
"RTN","RORUTL01",230,0)
 ;
"RTN","RORUTL01",231,0)
 ; DATE          The date to be checked
"RTN","RORUTL01",232,0)
 ;
"RTN","RORUTL01",233,0)
 ; Return Values:
"RTN","RORUTL01",234,0)
 ;        0  Weekend or Holiday
"RTN","RORUTL01",235,0)
 ;        1  Working day
"RTN","RORUTL01",236,0)
 ;
"RTN","RORUTL01",237,0)
WDCHK(DATE) ;
"RTN","RORUTL01",238,0)
 N DOW,RORMSG
"RTN","RORUTL01",239,0)
 ;--- Return zero if Saturday (6) or Sunday (0)
"RTN","RORUTL01",240,0)
 S DOW=$$DOW^XLFDT(DATE,1)  Q:'DOW!(DOW>5) 0
"RTN","RORUTL01",241,0)
 ;--- Return 1 if cannot be found in the HOLIDAY file
"RTN","RORUTL01",242,0)
 Q $$FIND1^DIC(40.5,,"QX",DATE\1,"B",,"RORMSG")'>0
"RTN","RORUTL01",243,0)
 ;
"RTN","RORUTL01",244,0)
 ;***** RETURNS THE NEXT WORKING DAY DATE
"RTN","RORUTL01",245,0)
 ;
"RTN","RORUTL01",246,0)
 ; DATE          The source date
"RTN","RORUTL01",247,0)
 ;
"RTN","RORUTL01",248,0)
 ; The function returns a date of the next working day.
"RTN","RORUTL01",249,0)
 ;
"RTN","RORUTL01",250,0)
WDNEXT(DATE) ;
"RTN","RORUTL01",251,0)
 N DOW,RORMSG
"RTN","RORUTL01",252,0)
 F  D  Q:$$FIND1^DIC(40.5,,"QX",DATE,"B",,"RORMSG")'>0
"RTN","RORUTL01",253,0)
 . S DOW=$$DOW^XLFDT(DATE,1)  S:'DOW DOW=7
"RTN","RORUTL01",254,0)
 . ;--- Get the next day and skip a weekend if necessary
"RTN","RORUTL01",255,0)
 . S DATE=$$FMADD^XLFDT(DATE,$S(DOW<5:1,1:8-DOW))
"RTN","RORUTL01",256,0)
 Q DATE
"RTN","RORUTL01",257,0)
 ;
"RTN","RORUTL01",258,0)
 ;***** CREATES A HEADER OF THE NODE IN THE ^XTMP GLOBAL
"RTN","RORUTL01",259,0)
 ;
"RTN","RORUTL01",260,0)
 ; SUBSCR        Subscript of the node in the ^XTMP global
"RTN","RORUTL01",261,0)
 ; [DKEEP]       Number of days to keep the node (1 by default)
"RTN","RORUTL01",262,0)
 ; [DESCR]       Description of the node
"RTN","RORUTL01",263,0)
 ;
"RTN","RORUTL01",264,0)
XTMPHDR(SUBSCR,DKEEP,DESCR) ;
"RTN","RORUTL01",265,0)
 N DATE  S DATE=$$DT^XLFDT  S:$G(DKEEP)'>0 DKEEP=1
"RTN","RORUTL01",266,0)
 S ^XTMP(SUBSCR,0)=$$FMADD^XLFDT(DATE,DKEEP)_U_DATE_U_$G(DESCR)
"RTN","RORUTL01",267,0)
 Q
"RTN","RORUTL01",268,0)
 ;
"RTN","RORUTL01",269,0)
 ;***** EMULATES AND EXTENDS THE ZWRITE COMMAND :-)
"RTN","RORUTL01",270,0)
 ;
"RTN","RORUTL01",271,0)
 ; ROR8NODE      Closed root of the sub-tree to display
"RTN","RORUTL01",272,0)
 ;               (either local array or global variable)
"RTN","RORUTL01",273,0)
 ; [TITLE]       Title of the output
"RTN","RORUTL01",274,0)
 ;
"RTN","RORUTL01",275,0)
ZW(ROR8NODE,TITLE) ;
"RTN","RORUTL01",276,0)
 Q:ROR8NODE=""  Q:'$D(@ROR8NODE)
"RTN","RORUTL01",277,0)
 N FLT,L,PI  W !
"RTN","RORUTL01",278,0)
 W:$G(TITLE)'="" TITLE,!!
"RTN","RORUTL01",279,0)
 W:$D(@ROR8NODE)#10 ROR8NODE_"="_@ROR8NODE,!
"RTN","RORUTL01",280,0)
 S L=$L(ROR8NODE)  S:$E(ROR8NODE,L)=")" L=L-1
"RTN","RORUTL01",281,0)
 S FLT=$E(ROR8NODE,1,L),PI=ROR8NODE
"RTN","RORUTL01",282,0)
 F  S PI=$Q(@PI)  Q:$E(PI,1,L)'=FLT  W PI_"="_@PI,!
"RTN","RORUTL01",283,0)
 Q
"RTN","RORUTL05")
0^17^B62674116^B58374925
"RTN","RORUTL05",1,0)
RORUTL05 ;HCIOFO/SG - MISCELLANEOUS UTILITIES ; 1/26/07 4:24pm
"RTN","RORUTL05",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,2,18**;Feb 17, 2006;Build 25
"RTN","RORUTL05",3,0)
 ;
"RTN","RORUTL05",4,0)
 ; This routine uses the following IAs:
"RTN","RORUTL05",5,0)
 ;
"RTN","RORUTL05",6,0)
 ; #4493         Read the .01 field of the file #771.7 (private)
"RTN","RORUTL05",7,0)
 ; #10040        Access to the HOSPITAL LOCATION file (supported)
"RTN","RORUTL05",8,0)
 ; #10061        DEM^VADPT (supported)
"RTN","RORUTL05",9,0)
 ;
"RTN","RORUTL05",10,0)
 ;*************************************************************************
"RTN","RORUTL05",11,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORUTL05",12,0)
 ;        
"RTN","RORUTL05",13,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORUTL05",14,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORUTL05",15,0)
 ;ROR*1.5*18   AUG  2012   C RAY        Added logic to quit if registry is
"RTN","RORUTL05",16,0)
 ;                                      local
"RTN","RORUTL05",17,0)
 ;*************************************************************************
"RTN","RORUTL05",18,0)
 ;                                     
"RTN","RORUTL05",19,0)
 Q
"RTN","RORUTL05",20,0)
 ;
"RTN","RORUTL05",21,0)
 ;***** CHECKS IF THE E-MAIL NOTIFICATION IS ENABLED
"RTN","RORUTL05",22,0)
 ;
"RTN","RORUTL05",23,0)
 ; REGIEN        Registry IEN
"RTN","RORUTL05",24,0)
 ;
"RTN","RORUTL05",25,0)
 ; Return Values:
"RTN","RORUTL05",26,0)
 ;        0  Do not send e-mail notifications
"RTN","RORUTL05",27,0)
 ;        1  E-mail notifications are enabled
"RTN","RORUTL05",28,0)
 ;
"RTN","RORUTL05",29,0)
CCRNTFY(REGIEN) ;
"RTN","RORUTL05",30,0)
 N DOMAIN,RC
"RTN","RORUTL05",31,0)
 ;--- Check if not a production account
"RTN","RORUTL05",32,0)
 I $T(PROD^XUPROD)'=""  Q:'$$PROD^XUPROD() 0
"RTN","RORUTL05",33,0)
 ;--- Check the domain name
"RTN","RORUTL05",34,0)
 S DOMAIN=$G(^XMB("NETNAME"))
"RTN","RORUTL05",35,0)
 Q:DOMAIN'?1.E1".VA.GOV" 0
"RTN","RORUTL05",36,0)
 Q:(DOMAIN?1"TEST.".E)!(DOMAIN?1"TST.".E) 0
"RTN","RORUTL05",37,0)
 ;--- Registry-specific checks
"RTN","RORUTL05",38,0)
 I $G(REGIEN)>0  S RC=1  D  Q:'RC 0
"RTN","RORUTL05",39,0)
 . N HL,HLECH,HLFS,HLQ,NAME,RORMSG
"RTN","RORUTL05",40,0)
 . ;--- Get the HL7 protocol name
"RTN","RORUTL05",41,0)
 . S NAME=$$GET1^DIQ(798.1,+REGIEN,13,,,"RORMSG")  Q:NAME=""
"RTN","RORUTL05",42,0)
 . ;--- Check the HL7 processing ID
"RTN","RORUTL05",43,0)
 . D INIT^HLFNC2(NAME,.HL)
"RTN","RORUTL05",44,0)
 . I $G(HL("PID"))'="",HL("PID")'="P"  S RC=0  Q
"RTN","RORUTL05",45,0)
 ;--- Notification is enabled (production account)
"RTN","RORUTL05",46,0)
 Q 1
"RTN","RORUTL05",47,0)
 ;
"RTN","RORUTL05",48,0)
 ;***** CHECK IF THE PATIENT'S RECORD IN FILE #2 IS VALID
"RTN","RORUTL05",49,0)
 ;
"RTN","RORUTL05",50,0)
 ; DFN           Patient IEN (in file #2)
"RTN","RORUTL05",51,0)
 ;
"RTN","RORUTL05",52,0)
 ; Return Values:
"RTN","RORUTL05",53,0)
 ;       <0  Error code
"RTN","RORUTL05",54,0)
 ;        0  Ok
"RTN","RORUTL05",55,0)
 ;
"RTN","RORUTL05",56,0)
CHKPTR(DFN,SILENT) ;
"RTN","RORUTL05",57,0)
 N RC,VA,VADM,VAERR
"RTN","RORUTL05",58,0)
 D VADEM(DFN)
"RTN","RORUTL05",59,0)
 I $G(VADM(1))=""  S RC=-102  D:'$G(SILENT)  Q RC
"RTN","RORUTL05",60,0)
 . D ERROR^RORERR(RC,,,,"PATIENT",DFN)
"RTN","RORUTL05",61,0)
 Q 0
"RTN","RORUTL05",62,0)
 ;
"RTN","RORUTL05",63,0)
 ;***** DELETES ALL RECORDS FROM THE (SUB)FILE
"RTN","RORUTL05",64,0)
 ;
"RTN","RORUTL05",65,0)
 ; FILE          File/Subfile number
"RTN","RORUTL05",66,0)
 ; [IENS]        IENS of the subfile
"RTN","RORUTL05",67,0)
 ;
"RTN","RORUTL05",68,0)
 ; Return Values:
"RTN","RORUTL05",69,0)
 ;       <0  Error code
"RTN","RORUTL05",70,0)
 ;        0  Ok
"RTN","RORUTL05",71,0)
 ;
"RTN","RORUTL05",72,0)
CLEAR(FILE,IENS) ;
"RTN","RORUTL05",73,0)
 Q:'$$VFILE^DILFD(FILE) 0
"RTN","RORUTL05",74,0)
 N DA,DIK,RC,ROOT,TMP
"RTN","RORUTL05",75,0)
 S IENS=$G(IENS)
"RTN","RORUTL05",76,0)
 ;--- Lock the (sub)file
"RTN","RORUTL05",77,0)
 S RC=$$LOCK^RORLOCK(FILE,IENS)
"RTN","RORUTL05",78,0)
 I RC  D  Q RC
"RTN","RORUTL05",79,0)
 . S TMP=$$GET1^DID(FILE,,,"NAME",,"RORMSG")
"RTN","RORUTL05",80,0)
 . S TMP=$S(TMP'="":"file",1:"subfile")_" #"_FILE
"RTN","RORUTL05",81,0)
 . S:IENS'="" TMP=TMP_"; IENS: '"_IENS_"'"
"RTN","RORUTL05",82,0)
 . S RC=$$ERROR^RORERR(-11,,"By "_$$TEXT^RORLOCK(RC),,TMP)
"RTN","RORUTL05",83,0)
 ;
"RTN","RORUTL05",84,0)
 ;--- Delete the records
"RTN","RORUTL05",85,0)
 S DIK=$$ROOT^DILFD(FILE,IENS)
"RTN","RORUTL05",86,0)
 S ROOT=$$CREF^DILF(DIK)
"RTN","RORUTL05",87,0)
 D DA^DILF(IENS,.DA)  S DA=0
"RTN","RORUTL05",88,0)
 F  S DA=$O(@ROOT@(DA))  Q:DA'>0  D ^DIK
"RTN","RORUTL05",89,0)
 ;
"RTN","RORUTL05",90,0)
 ;--- Unlock the (sub)file
"RTN","RORUTL05",91,0)
 D UNLOCK^RORLOCK(FILE,IENS)
"RTN","RORUTL05",92,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORUTL05",93,0)
 ;
"RTN","RORUTL05",94,0)
 ;***** CLEARS THE FIELDS OF THE RECORDS FOUND BY NAME
"RTN","RORUTL05",95,0)
 ;
"RTN","RORUTL05",96,0)
 ; FILE          File number
"RTN","RORUTL05",97,0)
 ; [IENS]        IENS of the subfile
"RTN","RORUTL05",98,0)
 ; NAME          Name of the record (value of the .01 field)
"RTN","RORUTL05",99,0)
 ; FIELDS        List of field numbers separated by semicolons
"RTN","RORUTL05",100,0)
 ;
"RTN","RORUTL05",101,0)
 ; Return Values:
"RTN","RORUTL05",102,0)
 ;       <0  Error code
"RTN","RORUTL05",103,0)
 ;        0  Ok
"RTN","RORUTL05",104,0)
 ;
"RTN","RORUTL05",105,0)
CLRFLDS(FILE,IENS,NAME,FIELDS) ;
"RTN","RORUTL05",106,0)
 N FLD,I,IEN,IENS1,IS,RC,RORBUF,RORFDA,RORMSG
"RTN","RORUTL05",107,0)
 ;--- Find the record(s)
"RTN","RORUTL05",108,0)
 D FIND^DIC(FILE,$G(IENS),"@","X",NAME,,"B",,,"RORBUF","RORMSG")
"RTN","RORUTL05",109,0)
 S RC=$$DBS^RORERR("RORMSG",-9,,,FILE)  Q:RC<0 RC
"RTN","RORUTL05",110,0)
 S:$G(IENS)="" IENS=","  S FIELDS=$TR(FIELDS," ")
"RTN","RORUTL05",111,0)
 ;--- Update the record(s)
"RTN","RORUTL05",112,0)
 S IS="",RC=0
"RTN","RORUTL05",113,0)
 F  S IS=$O(RORBUF("DILIST",2,IS))  Q:IS=""  D  Q:RC<0
"RTN","RORUTL05",114,0)
 . S IEN=RORBUF("DILIST",2,IS)  Q:IEN'>0
"RTN","RORUTL05",115,0)
 . S IENS1=IEN_IENS
"RTN","RORUTL05",116,0)
 . F I=1:1  S FLD=$P(FIELDS,";",I)  Q:FLD'>0  D
"RTN","RORUTL05",117,0)
 . . S RORFDA(FILE,IENS1,+FLD)="@"
"RTN","RORUTL05",118,0)
 . D FILE^DIE(,"RORFDA","RORMSG")
"RTN","RORUTL05",119,0)
 . S RC=$$DBS^RORERR("RORMSG",-9,,,FILE,IENS1)
"RTN","RORUTL05",120,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORUTL05",121,0)
 ;
"RTN","RORUTL05",122,0)
 ;***** RETURNS THE END DATE FOR THE EVENT PURGE
"RTN","RORUTL05",123,0)
EPDATE() ;
"RTN","RORUTL05",124,0)
 N DATE,IR,RC,RORBUF,RORMSG,TMP
"RTN","RORUTL05",125,0)
 D LIST^DIC(798.1,,"@;1I;2I","U",,,,"B",,,"RORBUF","RORMSG")
"RTN","RORUTL05",126,0)
 Q:$G(DIERR) $$DBS^RORERR("RORMSG",-9,,,798.1)
"RTN","RORUTL05",127,0)
 ;--- Get the oldest date of registry updates
"RTN","RORUTL05",128,0)
 S IR="",DATE=$$DT^XLFDT
"RTN","RORUTL05",129,0)
 F  S IR=$O(RORBUF("DILIST","ID",IR))  Q:IR=""  D
"RTN","RORUTL05",130,0)
 . S TMP=$G(RORBUF("DILIST","ID",IR,1)) ; REGISTRY UPDATED UNTIL
"RTN","RORUTL05",131,0)
 . I TMP>0  S:TMP<DATE DATE=TMP
"RTN","RORUTL05",132,0)
 . ;S TMP=$G(RORBUF("DILIST","ID",IR,2)) ; DATA EXTRACTED UNTIL
"RTN","RORUTL05",133,0)
 . ;I TMP>0  S:TMP<DATE DATE=TMP
"RTN","RORUTL05",134,0)
 ;--- Subtract additional 14 days (just in case)
"RTN","RORUTL05",135,0)
 S DATE=$$FMADD^XLFDT(DATE\1,-14)
"RTN","RORUTL05",136,0)
 ;--- No more than 60 days in the past
"RTN","RORUTL05",137,0)
 S TMP=$$FMADD^XLFDT($$DT^XLFDT,-60)
"RTN","RORUTL05",138,0)
 Q $S(DATE>TMP:DATE,1:TMP)
"RTN","RORUTL05",139,0)
 ;
"RTN","RORUTL05",140,0)
 ;***** RETURNS NAME OF THE HOSPITAL LOCATION
"RTN","RORUTL05",141,0)
 ;
"RTN","RORUTL05",142,0)
 ; HLIEN         IEN of the hospital location
"RTN","RORUTL05",143,0)
 ;
"RTN","RORUTL05",144,0)
HLNAME(HLIEN) ;
"RTN","RORUTL05",145,0)
 N NAME
"RTN","RORUTL05",146,0)
 S NAME=$$GET1^DIQ(44,(+HLIEN)_",",.01,,,"RORMSG")
"RTN","RORUTL05",147,0)
 D:$G(DIERR) DBS^RORERR("RORMSG",-9,,,44,(+HLIEN)_",")
"RTN","RORUTL05",148,0)
 Q NAME
"RTN","RORUTL05",149,0)
 ;
"RTN","RORUTL05",150,0)
 ;***** FORMATS THE TEXT THAT DESCRIBES STATUS OF THE HL7 MESSAGE
"RTN","RORUTL05",151,0)
 ;
"RTN","RORUTL05",152,0)
 ; MSGID         A valid ID of the HL7 message
"RTN","RORUTL05",153,0)
 ;
"RTN","RORUTL05",154,0)
 ; .RORDST       Reference to a local array that the text
"RTN","RORUTL05",155,0)
 ;               is appended to
"RTN","RORUTL05",156,0)
 ;
"RTN","RORUTL05",157,0)
 ; [TITLE]       Title of the output
"RTN","RORUTL05",158,0)
 ;
"RTN","RORUTL05",159,0)
 ; [DLGNUM]      Number of an entry in the DIALOG file that
"RTN","RORUTL05",160,0)
 ;               contains the text template (by default,
"RTN","RORUTL05",161,0)
 ;               the 7980000.004 is used)
"RTN","RORUTL05",162,0)
 ;
"RTN","RORUTL05",163,0)
 ; [.PARAMS]     Reference to a local variable containing
"RTN","RORUTL05",164,0)
 ;               additional parameters that substitute the
"RTN","RORUTL05",165,0)
 ;               placeholders in the text template
"RTN","RORUTL05",166,0)
 ; PARAMS(
"RTN","RORUTL05",167,0)
 ;  "NOR")       Number of retries to resend the message
"RTN","RORUTL05",168,0)
 ;  "REGISTRY")  Name of the registry
"RTN","RORUTL05",169,0)
 ;
"RTN","RORUTL05",170,0)
 ; [MSGSTAT]     Status of the message (result value of the
"RTN","RORUTL05",171,0)
 ;               $$MSGSTAT^HLUTIL function). If this parameter
"RTN","RORUTL05",172,0)
 ;               is undefined or equal to an empty string, the
"RTN","RORUTL05",173,0)
 ;               current status of the message is retrieved.
"RTN","RORUTL05",174,0)
 ;
"RTN","RORUTL05",175,0)
MSG7STS(MSGID,RORDST,TITLE,DLGNUM,PARAMS,MSGSTAT) ;
"RTN","RORUTL05",176,0)
 N RORMSG,TMP
"RTN","RORUTL05",177,0)
 Q:$G(MSGID)?." "
"RTN","RORUTL05",178,0)
 S:$G(MSGSTAT)="" MSGSTAT=$$MSGSTAT^HLUTIL(MSGID)
"RTN","RORUTL05",179,0)
 ;--- Prepare the parameters
"RTN","RORUTL05",180,0)
 S PARAMS("ID")=MSGID
"RTN","RORUTL05",181,0)
 S PARAMS("STATUS")=$$MSGSTXT^RORHL7A(MSGSTAT)
"RTN","RORUTL05",182,0)
 S TMP=+$P(MSGSTAT,U,2)
"RTN","RORUTL05",183,0)
 S:TMP>0 PARAMS("UPDATED")=$$FMTE^XLFDT(TMP)
"RTN","RORUTL05",184,0)
 S PARAMS("ERRMSG")=$P(MSGSTAT,U,3)
"RTN","RORUTL05",185,0)
 S TMP=+$P(MSGSTAT,U,4)
"RTN","RORUTL05",186,0)
 S:TMP>0 PARAMS("ERRTYPE")=$$GET1^DIQ(771.7,TMP_",",.01,,,"RORMSG")
"RTN","RORUTL05",187,0)
 S PARAMS($S(+MSGSTAT=1:"QPOS",1:"RETRIES"))=$P(MSGSTAT,U,5)
"RTN","RORUTL05",188,0)
 S PARAMS("OPENFAIL")=$P(MSGSTAT,U,6)
"RTN","RORUTL05",189,0)
 S PARAMS("ACK")=$P(MSGSTAT,U,7)
"RTN","RORUTL05",190,0)
 ;--- Additional parameters
"RTN","RORUTL05",191,0)
 I $G(DLGNUM)>0  D
"RTN","RORUTL05",192,0)
 . S PARAMS("STATCODE")=+MSGSTAT
"RTN","RORUTL05",193,0)
 . S TMP=+$P(MSGSTAT,U,2)
"RTN","RORUTL05",194,0)
 . S:TMP>0 PARAMS("STATUPD")=$$FMTHL7^XLFDT(TMP)
"RTN","RORUTL05",195,0)
 . S TMP=$$SITE^RORUTL03()
"RTN","RORUTL05",196,0)
 . S PARAMS("STNAME")=$P(TMP,U,2)
"RTN","RORUTL05",197,0)
 . S PARAMS("STNUM")=$P(TMP,U)
"RTN","RORUTL05",198,0)
 . S:$G(PARAMS("NOR"))'>0 PARAMS("NOR")="several"
"RTN","RORUTL05",199,0)
 . S:$G(PARAMS("REGISTRY"))="" PARAMS("REGISTRY")="<unknown>"
"RTN","RORUTL05",200,0)
 E  S DLGNUM=7980000.004
"RTN","RORUTL05",201,0)
 ;--- Build the text
"RTN","RORUTL05",202,0)
 S:$G(TITLE)'="" RORDST(1)=TITLE,RORDST(2)=" "
"RTN","RORUTL05",203,0)
 D BLD^DIALOG(DLGNUM,.PARAMS,,"RORDST","S")
"RTN","RORUTL05",204,0)
 Q
"RTN","RORUTL05",205,0)
 ;
"RTN","RORUTL05",206,0)
 ;***** CHECK IF THE ARGUMENT IS A NUMBER
"RTN","RORUTL05",207,0)
 ;
"RTN","RORUTL05",208,0)
 ; Return Values:
"RTN","RORUTL05",209,0)
 ;        1  Value starts from a number
"RTN","RORUTL05",210,0)
 ;        0  Otherwise
"RTN","RORUTL05",211,0)
 ;
"RTN","RORUTL05",212,0)
NUMERIC(VAL,NUMVAL) ;
"RTN","RORUTL05",213,0)
 S NUMVAL=$$TRIM^XLFSTR(VAL)
"RTN","RORUTL05",214,0)
 I NUMVAL?.1(1"+",1"-")1(1.N.1".".N,.N.1"."1.N).1(1"E".1(1"+",1"-")1.N)  S NUMVAL=+NUMVAL  Q 1
"RTN","RORUTL05",215,0)
 S NUMVAL=""
"RTN","RORUTL05",216,0)
 Q 0
"RTN","RORUTL05",217,0)
 ;
"RTN","RORUTL05",218,0)
 ;***** MARKS THE REGISTRY RECORDS FOR RESENDING THE LOCAL DATA
"RTN","RORUTL05",219,0)
 ;
"RTN","RORUTL05",220,0)
 ; .REGLST       Reference to a local array containing registry names 
"RTN","RORUTL05",221,0)
 ;               as subscripts and optional registry IENs as values
"RTN","RORUTL05",222,0)
 ;
"RTN","RORUTL05",223,0)
 ; WD            Number of days to wait before marking the records
"RTN","RORUTL05",224,0)
 ;               for resending the local registry data
"RTN","RORUTL05",225,0)
 ;
"RTN","RORUTL05",226,0)
 ; Return Values:
"RTN","RORUTL05",227,0)
 ;       <0  Error code
"RTN","RORUTL05",228,0)
 ;        0  Ok
"RTN","RORUTL05",229,0)
 ;
"RTN","RORUTL05",230,0)
REMARK(REGLST,WD) ;
"RTN","RORUTL05",231,0)
 N DATE,IEN,IENS,REGIEN,REGNAME,ROOT,RORFDA,RORMSG,TMP
"RTN","RORUTL05",232,0)
 S ROOT=$$ROOT^DILFD(798,,1),RC=0
"RTN","RORUTL05",233,0)
 S DATE=$$FMADD^XLFDT($$DT^XLFDT,-WD)
"RTN","RORUTL05",234,0)
 ;--- Process the registries from the list
"RTN","RORUTL05",235,0)
 S REGNAME=""
"RTN","RORUTL05",236,0)
 F  S REGNAME=$O(REGLST(REGNAME))  Q:REGNAME=""  D
"RTN","RORUTL05",237,0)
 . S REGIEN=+REGLST(REGNAME)
"RTN","RORUTL05",238,0)
 . I REGIEN'>0  S REGIEN=$$REGIEN^RORUTL02(REGNAME)  Q:REGIEN'>0
"RTN","RORUTL05",239,0)
 . ;--- quit if local registry
"RTN","RORUTL05",240,0)
 . Q:'+($P($G(^ROR(798.1,REGIEN,0)),U,11))
"RTN","RORUTL05",241,0)
 . S IENS=REGIEN_","
"RTN","RORUTL05",242,0)
 . ;--- Get the registry parameters
"RTN","RORUTL05",243,0)
 . D GETS^DIQ(798.1,IENS,"21.04;21.05","I","RORFDA","RORMSG")
"RTN","RORUTL05",244,0)
 . I $G(DIERR)  S TMP=$$DBS^RORERR("RORMSG",-9,,,798.1,IENS)  Q
"RTN","RORUTL05",245,0)
 . ;--- Local data has been resent already
"RTN","RORUTL05",246,0)
 . Q:$G(RORFDA(798.1,IENS,21.04,"I"))
"RTN","RORUTL05",247,0)
 . ;--- The registry has not been populated yet
"RTN","RORUTL05",248,0)
 . Q:'$G(RORFDA(798.1,IENS,21.05,"I"))
"RTN","RORUTL05",249,0)
 . ;--- It is too early for resending the local data
"RTN","RORUTL05",250,0)
 . Q:RORFDA(798.1,IENS,21.05,"I")>DATE
"RTN","RORUTL05",251,0)
 . K RORFDA,RORMSG
"RTN","RORUTL05",252,0)
 . ;--- Mark registry records as modified
"RTN","RORUTL05",253,0)
 . S IEN=0
"RTN","RORUTL05",254,0)
 . F  S IEN=$O(@ROOT@("AC",REGIEN,IEN))  Q:'IEN  D
"RTN","RORUTL05",255,0)
 . . S IENS=IEN_","
"RTN","RORUTL05",256,0)
 . . S RORFDA(798,IENS,4)=1  ; UPDATE DEMOGRAPHICS
"RTN","RORUTL05",257,0)
 . . S RORFDA(798,IENS,5)=1  ; UPDATE LOCAL REGISTRY DATA
"RTN","RORUTL05",258,0)
 . . D FILE^DIE(,"RORFDA","RORMSG")
"RTN","RORUTL05",259,0)
 . . D:$G(DIERR) DBS^RORERR("RORMSG",-9,,,798,IENS)
"RTN","RORUTL05",260,0)
 . ;--- Update registry parameters
"RTN","RORUTL05",261,0)
 . S IENS=REGIEN_","
"RTN","RORUTL05",262,0)
 . S RORFDA(798.1,IENS,21.04)=$$NOW^XLFDT
"RTN","RORUTL05",263,0)
 . D FILE^DIE("K","RORFDA","RORMSG")
"RTN","RORUTL05",264,0)
 . I $G(DIERR)  S TMP=$$DBS^RORERR("RORMSG",-9,,,798.1,IENS)  Q
"RTN","RORUTL05",265,0)
 . ;--- Record the message
"RTN","RORUTL05",266,0)
 . S TMP="Local registry and demographic data will be resent to AAC"
"RTN","RORUTL05",267,0)
 . D LOG^RORLOG(2,TMP,,"Registry Name: "_REGNAME)
"RTN","RORUTL05",268,0)
 Q 0
"RTN","RORUTL05",269,0)
 ;
"RTN","RORUTL05",270,0)
 ;***** CALLS THE DEM^VADPT
"RTN","RORUTL05",271,0)
 ;
"RTN","RORUTL05",272,0)
 ; DFN           Patient IEN (in file #2)
"RTN","RORUTL05",273,0)
 ; VALIDATE      Make sure that required fields are not empty
"RTN","RORUTL05",274,0)
 ; VAPTYP
"RTN","RORUTL05",275,0)
 ; VAHOW
"RTN","RORUTL05",276,0)
 ;
"RTN","RORUTL05",277,0)
VADEM(DFN,VALIDATE,VAPTYP,VAHOW) ;
"RTN","RORUTL05",278,0)
 N I,J,X,A,K,K1,NC,NF,NQ,T,VAROOT
"RTN","RORUTL05",279,0)
 D DEM^VADPT
"RTN","RORUTL05",280,0)
 S VA("BID")=$E($P($G(VADM(2)),U),6,10)  ; Always 'Last4'
"RTN","RORUTL05",281,0)
 Q:'$G(VALIDATE)
"RTN","RORUTL05",282,0)
 ;--- Make sure that required fields are not empty
"RTN","RORUTL05",283,0)
 S:$G(VADM(1))="" VADM(1)="Unknown ("_DFN_")"
"RTN","RORUTL05",284,0)
 S:$G(VA("BID"))="" VA("BID")="UNKN"
"RTN","RORUTL05",285,0)
 Q
"RTN","RORUTL11")
0^13^B3652168^B3560733
"RTN","RORUTL11",1,0)
RORUTL11 ;HCIOFO/SG - ACCESS AND SECURITY UTILITIES ; 6/2/11 4:12pm
"RTN","RORUTL11",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**13,14,15,17,18**;Feb 17, 2006;Build 25
"RTN","RORUTL11",3,0)
 ;
"RTN","RORUTL11",4,0)
 ;******************************************************************************
"RTN","RORUTL11",5,0)
 ;******************************************************************************
"RTN","RORUTL11",6,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORUTL11",7,0)
 ;        
"RTN","RORUTL11",8,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORUTL11",9,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORUTL11",10,0)
 ;ROR*1.5*13   DEC  2010   A SAUNDERS   Added tag VERSRV to return an associated
"RTN","RORUTL11",11,0)
 ;                                      version to the GUI during RPC call ROR
"RTN","RORUTL11",12,0)
 ;                                      GET M VERSION
"RTN","RORUTL11",13,0)
 ;ROR*1.5*14   APR  2011   A SAUNDERS   Updated version in tag VERSRV
"RTN","RORUTL11",14,0)
 ;
"RTN","RORUTL11",15,0)
 ;ROR*1.5*15   JUN 2011    C RAY        Updated version
"RTN","RORUTL11",16,0)
 ;
"RTN","RORUTL11",17,0)
 ;ROR*1.5*17   DEC 2011    C RAY        Updated version 
"RTN","RORUTL11",18,0)
 ;
"RTN","RORUTL11",19,0)
 ;ROR*1.5*18   MAY 2012    C RAY        Updated version                                       
"RTN","RORUTL11",20,0)
 ;******************************************************************************
"RTN","RORUTL11",21,0)
 ; This routine uses the following IAs:
"RTN","RORUTL11",22,0)
 ;
"RTN","RORUTL11",23,0)
 ; #2055   $$ROOT^DILFD (supported)
"RTN","RORUTL11",24,0)
 ; #10013  ENALL^DIK (supported)
"RTN","RORUTL11",25,0)
 ;         
"RTN","RORUTL11",26,0)
 ;******************************************************************************
"RTN","RORUTL11",27,0)
 Q
"RTN","RORUTL11",28,0)
 ;
"RTN","RORUTL11",29,0)
 ;***** REBUILDS THE "ACL" CROSS-REFERENCE (USER ACCESS)
"RTN","RORUTL11",30,0)
 ;
"RTN","RORUTL11",31,0)
 ; Return Values:
"RTN","RORUTL11",32,0)
 ;       <0  Error code
"RTN","RORUTL11",33,0)
 ;        0  Ok
"RTN","RORUTL11",34,0)
 ;
"RTN","RORUTL11",35,0)
RNDXACL() ;
"RTN","RORUTL11",36,0)
 N DA,DIK,REGIEN,ROOT
"RTN","RORUTL11",37,0)
 S ROOT=$$ROOT^DILFD(798.1,,1)  K @ROOT@("ACL")
"RTN","RORUTL11",38,0)
 S REGIEN=0
"RTN","RORUTL11",39,0)
 F  S REGIEN=$O(@ROOT@(REGIEN))  Q:'REGIEN  D
"RTN","RORUTL11",40,0)
 . S DIK=$$ROOT^DILFD(798.118,","_REGIEN_","),DIK(1)=".01^ACL"
"RTN","RORUTL11",41,0)
 . S DA(1)=REGIEN  D ENALL^DIK
"RTN","RORUTL11",42,0)
 Q 0
"RTN","RORUTL11",43,0)
 ;
"RTN","RORUTL11",44,0)
 ;***** CHECKS IF THE RPC CAN BE CALLED BY THE CURRENT USER
"RTN","RORUTL11",45,0)
 ;
"RTN","RORUTL11",46,0)
 ; RPCNAME       Name of the RPC
"RTN","RORUTL11",47,0)
 ;
"RTN","RORUTL11",48,0)
 ; [REGIEN]      Registry IEN
"RTN","RORUTL11",49,0)
 ;
"RTN","RORUTL11",50,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","RORUTL11",51,0)
 ;                 A  Administrator Only
"RTN","RORUTL11",52,0)
 ;                 I  IRM Only
"RTN","RORUTL11",53,0)
 ;
"RTN","RORUTL11",54,0)
 ; Return Values:
"RTN","RORUTL11",55,0)
 ;       <0  Error code
"RTN","RORUTL11",56,0)
 ;        0  Ok
"RTN","RORUTL11",57,0)
 ;       >0  Access denied
"RTN","RORUTL11",58,0)
 ;
"RTN","RORUTL11",59,0)
RPCHECK(RPCNAME,REGIEN,FLAGS) ;
"RTN","RORUTL11",60,0)
 N ACCESS,KEY,RC
"RTN","RORUTL11",61,0)
 Q:$G(DUZ)'>0 $$ERROR^RORERR(-40,,,,"DUZ")
"RTN","RORUTL11",62,0)
 S FLAGS=$G(FLAGS),REGIEN=+$G(REGIEN)
"RTN","RORUTL11",63,0)
 ;---
"RTN","RORUTL11",64,0)
 S (ACCESS,RC)=0
"RTN","RORUTL11",65,0)
 D  Q:ACCESS 0
"RTN","RORUTL11",66,0)
 . I REGIEN  Q:$D(^ROR(798.1,"ACL",DUZ,REGIEN))<10
"RTN","RORUTL11",67,0)
 . E  Q:$D(^ROR(798.1,"ACL",DUZ))<10
"RTN","RORUTL11",68,0)
 . I FLAGS["I"  Q:'$D(^XUSEC("ROR VA IRM",DUZ))
"RTN","RORUTL11",69,0)
 . I FLAGS["A"  S RC=1,KEY=""  D  Q:RC
"RTN","RORUTL11",70,0)
 . . F  S KEY=$O(^ROR(798.1,"ACL",DUZ,REGIEN,KEY))  Q:KEY=""  D  Q:'RC
"RTN","RORUTL11",71,0)
 . . . I KEY?1"ROR"1.E  S:KEY["ADMIN" RC=0
"RTN","RORUTL11",72,0)
 . S ACCESS=1
"RTN","RORUTL11",73,0)
 ;---
"RTN","RORUTL11",74,0)
 D ACVIOLTN^RORLOG(X,$G(REGIEN),RPCNAME)
"RTN","RORUTL11",75,0)
 Q 1
"RTN","RORUTL11",76,0)
 ;
"RTN","RORUTL11",77,0)
 ;***** RETURNS SERVER VERSION
"RTN","RORUTL11",78,0)
 ;REMOTE PROCEDURE: ROR GET M VERSION
"RTN","RORUTL11",79,0)
 ;
"RTN","RORUTL11",80,0)
 ;The purpose of this RPC is to catch when the GUI executable has been
"RTN","RORUTL11",81,0)
 ;upgraded AND REQUIRES an associated M patch, but the M patch has not
"RTN","RORUTL11",82,0)
 ;been installed yet.
"RTN","RORUTL11",83,0)
 ;
"RTN","RORUTL11",84,0)
 ; VAL n.n.n represents the CCR package version and the m patch number that
"RTN","RORUTL11",85,0)
 ; contains the associated M changes that the GUI is expecting.
"RTN","RORUTL11",86,0)
 ;
"RTN","RORUTL11",87,0)
 ;NOTE TO CCR MAINTENANCE TEAM: For M changes made by the maintenance team,
"RTN","RORUTL11",88,0)
 ;the server version below should not be modified.  The only time the server
"RTN","RORUTL11",89,0)
 ;version should be modified is if the GUI was changed AND there were
"RTN","RORUTL11",90,0)
 ;associated M changes needed for it.
"RTN","RORUTL11",91,0)
 ;
"RTN","RORUTL11",92,0)
VERSRV(VAL) ;
"RTN","RORUTL11",93,0)
 S VAL="1.5.18"
"RTN","RORUTL11",94,0)
 Q
"RTN","RORX022A")
0^16^B129621152^B125489130
"RTN","RORX022A",1,0)
RORX022A ;BPOIFO/CLR LAB DAA MONITOR (CONT.) ; 8/2/11 3:08pm
"RTN","RORX022A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8,13,17,18**;Feb 17, 2006;Build 25
"RTN","RORX022A",3,0)
 ;
"RTN","RORX022A",4,0)
 ; This routine uses the following IAs:
"RTN","RORX022A",5,0)
 ;
"RTN","RORX022A",6,0)
 ; #10103 FMADD^XLFDT (supported)
"RTN","RORX022A",7,0)
 ; #10103 FMDIFF^XLFDT (supported)
"RTN","RORX022A",8,0)
 ; #10035 Direct read of the DOD field of the file #2
"RTN","RORX022A",9,0)
 ; #10000 C^%DTC (supported)
"RTN","RORX022A",10,0)
 ;   
"RTN","RORX022A",11,0)
 ;******************************************************************************
"RTN","RORX022A",12,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX022A",13,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX022A",14,0)
 ;ROR*1.5*18   APR  2012   C RAY        Adds select patient panel
"RTN","RORX022A",15,0)
 ;******************************************************************************
"RTN","RORX022A",16,0)
 Q
"RTN","RORX022A",17,0)
 ;
"RTN","RORX022A",18,0)
 ;***** LAB SEARCH CALLBACK
"RTN","RORX022A",19,0)
 ;
"RTN","RORX022A",20,0)
 ; .ROR8DST      Reference to the ROR8DST parameter.
"RTN","RORX022A",21,0)
 ;
"RTN","RORX022A",22,0)
 ; INVDT         IEN of the Lab test (inverted date)
"RTN","RORX022A",23,0)
 ;
"RTN","RORX022A",24,0)
 ; .RESULT       Reference to a local variable, which contains
"RTN","RORX022A",25,0)
 ;               the result (see the $$LTSEARCH^RORUTL10).
"RTN","RORX022A",26,0)
 ;
"RTN","RORX022A",27,0)
 ; Return Values:
"RTN","RORX022A",28,0)
 ;       <0  Error code (the search will be aborted)
"RTN","RORX022A",29,0)
 ;        0  Ok
"RTN","RORX022A",30,0)
 ;        1  Skip this result
"RTN","RORX022A",31,0)
 ;        2  Skip this and all remaining results
"RTN","RORX022A",32,0)
 ;
"RTN","RORX022A",33,0)
LTSCB(ROR8DST,INVDT,RESULT) ;
"RTN","RORX022A",34,0)
 ;all lab tests
"RTN","RORX022A",35,0)
 N DATE,IEN,NAME,RC,TMP,VAL,WEEKS,DAYS,RAWDAYS
"RTN","RORX022A",36,0)
 S IEN=+RESULT(2)           Q:IEN'>0 1   ; IEN of the Lab test
"RTN","RORX022A",37,0)
 S NAME=$P(RESULT(2),U,2)   Q:NAME="" 1  ; Name of the test
"RTN","RORX022A",38,0)
 S VAL=$P(RESULT(1),U,3)    Q:VAL="" 1   ; Result of the test
"RTN","RORX022A",39,0)
 S DATE=+$P(RESULT(1),U,1)  Q:DATE'>0 1  ; Date of the test
"RTN","RORX022A",40,0)
 S RAWDAYS=$$FMDIFF^XLFDT(((9999999-DATE)\1),ROR8DST("DAA"))
"RTN","RORX022A",41,0)
 S WEEKS=RAWDAYS\7  ;Number of weeks
"RTN","RORX022A",42,0)
 S DAYS=RAWDAYS#7  ;Remainder in days
"RTN","RORX022A",43,0)
 S VAL=$$UP^XLFSTR(VAL)
"RTN","RORX022A",44,0)
 ;--- Skip value if test not performed
"RTN","RORX022A",45,0)
 I VAL["CANC"!(VAL["DNR")!(VAL["TNP") Q 1
"RTN","RORX022A",46,0)
 ;--- Skip value out of the result range
"RTN","RORX022A",47,0)
 I $D(RORLTRV(IEN))>1  S RC=1  D  Q:RC RC
"RTN","RORX022A",48,0)
 . S VAL=$$CLRNMVAL^RORUTL18($P(RESULT(1),U,3))
"RTN","RORX022A",49,0)
 . ;--- Skip a non-numeric result
"RTN","RORX022A",50,0)
 . Q:'$$NUMERIC^RORUTL05(VAL)
"RTN","RORX022A",51,0)
 . ;--- Check the range
"RTN","RORX022A",52,0)
 . I $G(RORLTRV(IEN,"L"))'=""  Q:VAL<RORLTRV(IEN,"L")
"RTN","RORX022A",53,0)
 . I $G(RORLTRV(IEN,"H"))'=""  Q:VAL>RORLTRV(IEN,"H")
"RTN","RORX022A",54,0)
 . S RC=0
"RTN","RORX022A",55,0)
 ;--- Store the result
"RTN","RORX022A",56,0)
 S @ROR8DST@(NAME,IEN,DATE)=($P(RESULT(1),U,3))_U_(+WEEKS_" weeks "_+DAYS_" days")
"RTN","RORX022A",57,0)
 Q 0
"RTN","RORX022A",58,0)
 ;
"RTN","RORX022A",59,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX022A",60,0)
 ;
"RTN","RORX022A",61,0)
 ; FLAGS         Flags for the $$SKIP^RORXU005
"RTN","RORX022A",62,0)
 ; RORTSK        Parameters passed by client
"RTN","RORX022A",63,0)
 ; .NSPT         Number of selected patients is returned here
"RTN","RORX022A",64,0)
 ;
"RTN","RORX022A",65,0)
 ; Return Values:
"RTN","RORX022A",66,0)
 ;       <0  Error code
"RTN","RORX022A",67,0)
 ;        0  Ok
"RTN","RORX022A",68,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX022A",69,0)
 ;
"RTN","RORX022A",70,0)
QUERY(FLAGS,RORTSK,NSPT) ;
"RTN","RORX022A",71,0)
 N RORLDST       ; Descriptor for Lab search API
"RTN","RORX022A",72,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX022A",73,0)
 N RORXDST       ; Descriptor for pharmacy search API
"RTN","RORX022A",74,0)
 N RORCDLIST     ; Flag to indicate whether a clinic or division list exists
"RTN","RORX022A",75,0)
 N RORCDSTDT     ; Start date for clinic/division utilization search
"RTN","RORX022A",76,0)
 N RORCDENDT     ; End date for clinic/division utilization search
"RTN","RORX022A",77,0)
 N RORDAA        ; Date of patient's 1st DAA fill
"RTN","RORX022A",78,0)
 N RORXL         ; Location of drug list
"RTN","RORX022A",79,0)
 N RXSDT         ; RX start date
"RTN","RORX022A",80,0)
 N RXEDT         ; RX end date
"RTN","RORX022A",81,0)
 ;
"RTN","RORX022A",82,0)
 N CNT,ECNT,IEN,IENS,PATIEN,RC,SKIP,TMP,VA,VADM,XREFNODE
"RTN","RORX022A",83,0)
 N RCC,FLAG,DAASDT,DAAEDT,RORXSDT
"RTN","RORX022A",84,0)
 N LTEDT,LTSDT,LTWKDYS,LTWKS
"RTN","RORX022A",85,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX022A",86,0)
 S (CNT,ECNT,NSPT,RC,RORCDLIST)=0
"RTN","RORX022A",87,0)
 ;--- Number of patients in the registry
"RTN","RORX022A",88,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX022A",89,0)
 ;--- Date range to search for DAA meds
"RTN","RORX022A",90,0)
 S DAASDT=$$PARAM^RORTSK01("DATE_RANGE_4","START")\1
"RTN","RORX022A",91,0)
 S DAAEDT=$$PARAM^RORTSK01("DATE_RANGE_4","END")\1
"RTN","RORX022A",92,0)
 ;--- set up LAB descriptors
"RTN","RORX022A",93,0)
 S LTWKS=$$PARAM^RORTSK01("WEEKS_AFTER")
"RTN","RORX022A",94,0)
 S LTWKDYS=LTWKS*7
"RTN","RORX022A",95,0)
 S LTMREC=$$PARAM^RORTSK01("WEEKS_AFTER","MOST_RECENT")
"RTN","RORX022A",96,0)
 S RORLDST("RORCB")="$$LTSCB^RORX022A"
"RTN","RORX022A",97,0)
 ;--- set up RX descriptors
"RTN","RORX022A",98,0)
 S RORXDST("RORCB")="$$RXOCB^RORX022A"
"RTN","RORX022A",99,0)
 S RORXDST("GENERIC")=1
"RTN","RORX022A",100,0)
 S RORXL=$$ALLOC^RORTMP()
"RTN","RORX022A",101,0)
 S RC=$$DRUGLIST^RORUTL16(RORXL,+RORREG,"G")
"RTN","RORX022A",102,0)
 S RXSDT=3100101  ;based on compliance date PSN*4*293
"RTN","RORX022A",103,0)
 S RXEDT=$$FMADD^XLFDT(DAAEDT,1)
"RTN","RORX022A",104,0)
 ;--- Set up Clinic/Division list parameters
"RTN","RORX022A",105,0)
 I $D(RORTSK("PARAMS","CLINICS","C")) S RORCDLIST=1
"RTN","RORX022A",106,0)
 I $D(RORTSK("PARAMS","DIVISIONS","C")) S RORCDLIST=1
"RTN","RORX022A",107,0)
 ;--- Set up ICD9 parameters
"RTN","RORX022A",108,0)
 S FLAG=$G(RORTSK("PARAMS","ICD9FILT","A","FILTER"))
"RTN","RORX022A",109,0)
 ;
"RTN","RORX022A",110,0)
 ;--- Browse through the registry records
"RTN","RORX022A",111,0)
 S IEN=0
"RTN","RORX022A",112,0)
 F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX022A",113,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX022A",114,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX022A",115,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX022A",116,0)
 . ;--- Get patient DFN
"RTN","RORX022A",117,0)
 . S PATIEN=$$PTIEN^RORUTL01(IEN)  Q:PATIEN'>0
"RTN","RORX022A",118,0)
 . I +$P($G(^DPT(PATIEN,.35)),U)>0 Q  ;patient has died
"RTN","RORX022A",119,0)
 . ;check for patient list and quit if not on list  ;+18
"RTN","RORX022A",120,0)
 . I $D(RORTSK("PARAMS","PATIENTS","C")),'$D(RORTSK("PARAMS","PATIENTS","C",PATIEN)) Q
"RTN","RORX022A",121,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX022A",122,0)
 . Q:$$SKIP^RORXU005(IEN,FLAGS)
"RTN","RORX022A",123,0)
 . ;--- Check if patient should be skipped because of ICD9 codes
"RTN","RORX022A",124,0)
 . S RCC=0
"RTN","RORX022A",125,0)
 . I FLAG'="ALL" D
"RTN","RORX022A",126,0)
 . . S RCC=$$ICD^RORXU010(PATIEN,RORREG)
"RTN","RORX022A",127,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX022A",128,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX022A",129,0)
 . ;--- Check if patient should be skipped because not on Clinic or Division list
"RTN","RORX022A",130,0)
 . I RORCDLIST,'$$CDUTIL^RORXU001(.RORTSK,PATIEN,DAASDT,DAAEDT) Q
"RTN","RORX022A",131,0)
 . ;--- Report specific filters
"RTN","RORX022A",132,0)
 . S SKIP=1
"RTN","RORX022A",133,0)
 . ;--- Check if patient should be skipped because no DAA fill
"RTN","RORX022A",134,0)
 . D  I RC<0  S ECNT=ECNT+1,RC=0  Q
"RTN","RORX022A",135,0)
 . . ;--- Search for 1st DAA fill date skip patient if not taking DAA
"RTN","RORX022A",136,0)
 . . S RORXDST("1STDAA")=1  ;set DAA flag
"RTN","RORX022A",137,0)
 . . D  I RC'>0 Q
"RTN","RORX022A",138,0)
 . . . S RORXDST=$$ALLOC^RORTMP()
"RTN","RORX022A",139,0)
 . . . S RC=$$RXSEARCH^RORUTL14(PATIEN,RORXL,.RORXDST,"EIOV",RXSDT,RXEDT)
"RTN","RORX022A",140,0)
 . . S SKIP=0
"RTN","RORX022A",141,0)
 . S RORDAA=$O(@RORXDST@(""))
"RTN","RORX022A",142,0)
 . I +RORDAA<DAASDT S SKIP=1  ;1st fill before daa start date
"RTN","RORX022A",143,0)
 . ;--- Skip the patient if not all search criteria have been met
"RTN","RORX022A",144,0)
 . I SKIP D FREE^RORTMP(RORXDST) Q
"RTN","RORX022A",145,0)
 . ;=== Store the patient's data
"RTN","RORX022A",146,0)
 . D VADEM^RORUTL05(PATIEN,1)
"RTN","RORX022A",147,0)
 . D FREE^RORTMP(RORXDST)
"RTN","RORX022A",148,0)
 . S ^TMP("RORX022",$J,"PAT",PATIEN)=VA("BID")_U_VADM(1)_U_RORDAA
"RTN","RORX022A",149,0)
 . ;--- Get lab tests N weeks after 1st DAA fill
"RTN","RORX022A",150,0)
 . N X,X1,X2
"RTN","RORX022A",151,0)
 . S X1=RORDAA,X2=LTWKDYS D C^%DTC S LTEDT=X
"RTN","RORX022A",152,0)
 . S LTEDT=$$FMADD^XLFDT(LTEDT\1,1)
"RTN","RORX022A",153,0)
 . ;--- If baseline requested get all lab results
"RTN","RORX022A",154,0)
 . S LTSDT=$S(LTMREC=1:"",1:RORDAA)
"RTN","RORX022A",155,0)
 . S RORLDST("DAA")=RORDAA
"RTN","RORX022A",156,0)
 . D  Q:RC<0 
"RTN","RORX022A",157,0)
 . . S RORLDST=$NA(^TMP("RORX022",$J,"PAT",PATIEN,"LR"))
"RTN","RORX022A",158,0)
 . . S RC=$$LTSEARCH^RORUTL10(PATIEN,RORLTST,.RORLDST,,LTSDT,LTEDT)
"RTN","RORX022A",159,0)
 . ;--- Get all registry med fills 60 days before 1st DAA fill
"RTN","RORX022A",160,0)
 . K RORXDST("1STDAA")  ;clear DAA flag
"RTN","RORX022A",161,0)
 . D  Q:RC<0
"RTN","RORX022A",162,0)
 . . S RORXDST=$NA(^TMP("RORX022",$J,"PAT",PATIEN,"RX"))
"RTN","RORX022A",163,0)
 . . S X1=RORDAA,X2=-60 D C^%DTC S RORXSDT=X
"RTN","RORX022A",164,0)
 . . S RORXEDT=$$FMADD^XLFDT(DT,1)
"RTN","RORX022A",165,0)
 . . S RC=$$RXSEARCH^RORUTL14(PATIEN,RORXL,.RORXDST,"EIOV",RORXSDT,RORXEDT)
"RTN","RORX022A",166,0)
 . S NSPT=NSPT+1
"RTN","RORX022A",167,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX022A",168,0)
 ;
"RTN","RORX022A",169,0)
 ;
"RTN","RORX022A",170,0)
 ;***** CALLBACK FUNCTION FOR THE PHARMACY SEARCH API
"RTN","RORX022A",171,0)
 ;
"RTN","RORX022A",172,0)
 ;                .ROR8DST      Reference to the ROR8DST parameter.
"RTN","RORX022A",173,0)
 ;
"RTN","RORX022A",174,0)
 ;
"RTN","RORX022A",175,0)
 ;                 ORDER         Order number (from condensed list)
"RTN","RORX022A",176,0)
 ;
"RTN","RORX022A",177,0)
 ;                 FLAGS         Flags describing the order to be
"RTN","RORX022A",178,0)
 ;                               processed.
"RTN","RORX022A",179,0)
 ;
"RTN","RORX022A",180,0)
 ;                 DRUG          Dispensed drug
"RTN","RORX022A",181,0)
 ;                                 ^01: Drug IEN in file #50
"RTN","RORX022A",182,0)
 ;                                 ^02: Drug name
"RTN","RORX022A",183,0)
 ;
"RTN","RORX022A",184,0)
 ;                 DATE          Order date (issue date for outpatient
"RTN","RORX022A",185,0)
 ;                               drugs or start date for inpatient)
"RTN","RORX022A",186,0)
 ;
"RTN","RORX022A",187,0)
 ;Return Values:
"RTN","RORX022A",188,0)
 ;       <0  Error code (the search will be aborted)
"RTN","RORX022A",189,0)
 ;        0  Ok
"RTN","RORX022A",190,0)
 ;        1  Skip this result
"RTN","RORX022A",191,0)
 ;        2  Skip this and all remaining results
"RTN","RORX022A",192,0)
 ;
"RTN","RORX022A",193,0)
RXOCB(ROR8DST,ORDER,ORDFLG,DRUG,DATE) ;
"RTN","RORX022A",194,0)
 N DRUGIEN,DRUGNAME,IEN,IRP,OFD,RPSUB,RXBUF,RXCNT,RXNUM,TMP
"RTN","RORX022A",195,0)
 I ROR8DST("GENERIC")  D
"RTN","RORX022A",196,0)
 . S DRUGIEN=+ROR8DST("RORXGEN"),DRUGNAME=$P(ROR8DST("RORXGEN"),U,2)
"RTN","RORX022A",197,0)
 E  Q 1
"RTN","RORX022A",198,0)
 Q:(DRUGIEN'>0)!(DRUGNAME="") 1
"RTN","RORX022A",199,0)
 ;--- if DAA flag set, skip med if not a DAA
"RTN","RORX022A",200,0)
 I +$G(ROR8DST("1STDAA")),(DRUGNAME'="BOCEPREVIR"),(DRUGNAME'="TELAPREVIR") Q 1
"RTN","RORX022A",201,0)
 S $P(RXBUF,U,5)=$P($G(^TMP("PS",$J,0)),U,7)  ; Days Supply
"RTN","RORX022A",202,0)
 S TMP=$G(^TMP("PS",$J,"RXN",0))
"RTN","RORX022A",203,0)
 S RXNUM=$P(TMP,U)  S:RXNUM="" RXNUM=" "
"RTN","RORX022A",204,0)
 S RXCNT=0
"RTN","RORX022A",205,0)
 ;--- Original prescription
"RTN","RORX022A",206,0)
 I ORDFLG["I"  D  ;--- Inpatient
"RTN","RORX022A",207,0)
 . S OFD=$P($G(^TMP("PS",$J,0)),U,5)\1         ; Start Date
"RTN","RORX022A",208,0)
 . S RXCNT=RXCNT+1
"RTN","RORX022A",209,0)
 . S @ROR8DST@(OFD,DRUGNAME,DRUGIEN,RXNUM,RXCNT)=RXBUF
"RTN","RORX022A",210,0)
 E  D             ;--- Outpatient
"RTN","RORX022A",211,0)
 . S OFD=+$P($G(^TMP("PS",$J,"RXN",0)),U,6)  ; Original Fill Date
"RTN","RORX022A",212,0)
 . Q:(OFD<ROR8DST("RORSDT"))!(OFD'<ROR8DST("ROREDT"))
"RTN","RORX022A",213,0)
 . S RXCNT=RXCNT+1
"RTN","RORX022A",214,0)
 . S @ROR8DST@(OFD,DRUGNAME,DRUGIEN,RXNUM,RXCNT)=RXBUF
"RTN","RORX022A",215,0)
 ;--- Refills and partials
"RTN","RORX022A",216,0)
 F RPSUB="REF","PAR"  D
"RTN","RORX022A",217,0)
 . S IRP=0
"RTN","RORX022A",218,0)
 . F  S IRP=$O(^TMP("PS",$J,RPSUB,IRP))  Q:IRP'>0  D
"RTN","RORX022A",219,0)
 . . S TMP=$G(^TMP("PS",$J,RPSUB,IRP,0))
"RTN","RORX022A",220,0)
 . . S $P(RXBUF,U,5)=$P(TMP,U,2)  ; Days Supply
"RTN","RORX022A",221,0)
 . . I TMP>0  S RXCNT=RXCNT+1  D
"RTN","RORX022A",222,0)
 . . . S @ROR8DST@(+TMP,DRUGNAME,DRUGIEN,RXNUM,RXCNT)=RXBUF
"RTN","RORX022A",223,0)
 Q 0
"RTN","RORX022A",224,0)
 ;
"RTN","RORX022A",225,0)
 ;***** STORES THE REPORT DATA
"RTN","RORX022A",226,0)
 ;
"RTN","RORX022A",227,0)
 ; REPORT        IEN of the REPORT element
"RTN","RORX022A",228,0)
 ; RORTSK        Parameters passed by GUI
"RTN","RORX022A",229,0)
 ; NSPT          Number of selected patients
"RTN","RORX022A",230,0)
 ;
"RTN","RORX022A",231,0)
 ; Return Values:
"RTN","RORX022A",232,0)
 ;       <0  Error code
"RTN","RORX022A",233,0)
 ;        0  Ok
"RTN","RORX022A",234,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX022A",235,0)
 ;
"RTN","RORX022A",236,0)
STORE(REPORT,RORTSK,NSPT) ;
"RTN","RORX022A",237,0)
 N CNT,DATE,DFN,DAA,ECNT,IEN,ITEM,LAST4,LTLST,NAME,NODE,PTCNT,PTLST,PTNAME,RC,RXLST,TMP,VAL
"RTN","RORX022A",238,0)
 N DAAINV,LRMREC
"RTN","RORX022A",239,0)
 S (ECNT,RC)=0,(LTLST,PTLST,RXLST)=-1
"RTN","RORX022A",240,0)
 ;--- Force the "patient data" note in the output
"RTN","RORX022A",241,0)
 D ADDVAL^RORTSK11(RORTSK,"PATIENT",,REPORT)
"RTN","RORX022A",242,0)
 S LRMREC=$$PARAM^RORTSK01("LABTESTS","MOST_RECENT")
"RTN","RORX022A",243,0)
 ;--- Create lab test list
"RTN","RORX022A",244,0)
 D  Q:LTLST<0 LTLST
"RTN","RORX022A",245,0)
 . S LTLST=$$ADDVAL^RORTSK11(RORTSK,"LABTESTS",,REPORT)
"RTN","RORX022A",246,0)
 . D ADDATTR^RORTSK11(RORTSK,LTLST,"TABLE","LABTESTS")
"RTN","RORX022A",247,0)
 ;--- Create pharmacy list
"RTN","RORX022A",248,0)
 D  Q:RXLST<0 RXLST
"RTN","RORX022A",249,0)
 . S RXLST=$$ADDVAL^RORTSK11(RORTSK,"DRUGS",,REPORT)
"RTN","RORX022A",250,0)
 . D ADDATTR^RORTSK11(RORTSK,RXLST,"TABLE","DRUGS")
"RTN","RORX022A",251,0)
 ;--- Loop through selected patients and store as XML
"RTN","RORX022A",252,0)
 S (CNT,DFN,PTCNT)=0
"RTN","RORX022A",253,0)
 F  S DFN=$O(^TMP("RORX022",$J,"PAT",DFN))  Q:DFN'>0  D  Q:RC<0
"RTN","RORX022A",254,0)
 . S TMP=$S(NSPT>0:CNT/NSPT,1:"")
"RTN","RORX022A",255,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX022A",256,0)
 . S CNT=CNT+1,NODE=$NA(^TMP("RORX022",$J,"PAT",DFN))
"RTN","RORX022A",257,0)
 . ;--- Patient's data
"RTN","RORX022A",258,0)
 . S TMP=$G(@NODE)
"RTN","RORX022A",259,0)
 . S LAST4=$P(TMP,U),PTNAME=$P(TMP,U,2),DAA=$P(TMP,U,3)
"RTN","RORX022A",260,0)
 . S PTCNT=PTCNT+1
"RTN","RORX022A",261,0)
 . ;--- List of Lab tests
"RTN","RORX022A",262,0)
 . S NAME="" K LTCNT
"RTN","RORX022A",263,0)
 . F  S NAME=$O(@NODE@("LR",NAME)) Q:NAME=""  D
"RTN","RORX022A",264,0)
 . . S IEN=""
"RTN","RORX022A",265,0)
 . . F  S IEN=$O(@NODE@("LR",NAME,IEN)) Q:IEN=""  D
"RTN","RORX022A",266,0)
 . . . S DATE="",DAAINV=9999999-DAA
"RTN","RORX022A",267,0)
 . . . F  S DATE=$O(@NODE@("LR",NAME,IEN,DATE)) Q:DATE=""!($G(LTCNT(NAME,IEN))=2)!((DATE>DAAINV)&'LTMREC)  D
"RTN","RORX022A",268,0)
 . . . . ;store results after or on DAA fill date
"RTN","RORX022A",269,0)
 . . . . I DATE'>DAAINV D  Q
"RTN","RORX022A",270,0)
 . . . . . I LRMREC,$G(LTCNT(NAME,IEN))=0 Q  ;quit if most recent
"RTN","RORX022A",271,0)
 . . . . . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"LT",,LTLST,,DFN)
"RTN","RORX022A",272,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"NAME",PTNAME,ITEM,1)
"RTN","RORX022A",273,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"LAST4",LAST4,ITEM,2)
"RTN","RORX022A",274,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"DAA_FILL",DAA,ITEM,1)
"RTN","RORX022A",275,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"DATE",((9999999-DATE)\1),ITEM,1)
"RTN","RORX022A",276,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"LTNAME",NAME,ITEM,1)
"RTN","RORX022A",277,0)
 . . . . . S VAL=$G(@NODE@("LR",NAME,IEN,DATE))
"RTN","RORX022A",278,0)
 . . . . . S TMP=$S($$NUMERIC^RORUTL05($P(VAL,U)):3,1:1)
"RTN","RORX022A",279,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"RESULT",$P(VAL,U),ITEM,TMP)
"RTN","RORX022A",280,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"WKS_LAB",$P(VAL,U,2),ITEM,1)
"RTN","RORX022A",281,0)
 . . . . . S LTCNT(NAME,IEN)=0
"RTN","RORX022A",282,0)
 . . . . ;store 2 baseline results if flag is set
"RTN","RORX022A",283,0)
 . . . . I LTMREC D
"RTN","RORX022A",284,0)
 . . . . . S LTCNT(NAME,IEN)=$S('$D(LTCNT(NAME,IEN)):1,1:LTCNT(NAME,IEN)+1)  ;count for each test
"RTN","RORX022A",285,0)
 . . . . . Q:LTCNT(NAME,IEN)>2  ;stop after 2 baseline results
"RTN","RORX022A",286,0)
 . . . . . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"LT",,LTLST,,DFN)
"RTN","RORX022A",287,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"NAME",PTNAME,ITEM,1)
"RTN","RORX022A",288,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"LAST4",LAST4,ITEM,2)
"RTN","RORX022A",289,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"DAA_FILL",DAA,ITEM,1)
"RTN","RORX022A",290,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"DATE",((9999999-DATE)\1),ITEM,1)
"RTN","RORX022A",291,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"LTNAME",NAME,ITEM,1)
"RTN","RORX022A",292,0)
 . . . . . S VAL=$G(@NODE@("LR",NAME,IEN,DATE))
"RTN","RORX022A",293,0)
 . . . . . S TMP=$S($$NUMERIC^RORUTL05($P(VAL,U)):3,1:1)
"RTN","RORX022A",294,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"RESULT",$P(VAL,U),ITEM,TMP)
"RTN","RORX022A",295,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"WKS_LAB","Baseline",ITEM,1)
"RTN","RORX022A",296,0)
 . ;--- List of drugs
"RTN","RORX022A",297,0)
 . S DATE=""
"RTN","RORX022A",298,0)
 . F  S DATE=$O(@NODE@("RX",DATE))  Q:DATE=""  D
"RTN","RORX022A",299,0)
 . . S NAME=""
"RTN","RORX022A",300,0)
 . . F  S NAME=$O(@NODE@("RX",DATE,NAME))  Q:NAME=""  D
"RTN","RORX022A",301,0)
 . . . S IEN=""
"RTN","RORX022A",302,0)
 . . . F  S IEN=$O(@NODE@("RX",DATE,NAME,IEN))  Q:IEN=""  D
"RTN","RORX022A",303,0)
 . . . . S RXNUM=""
"RTN","RORX022A",304,0)
 . . . . F  S RXNUM=$O(@NODE@("RX",DATE,NAME,IEN,RXNUM)) Q:RXNUM=""  D
"RTN","RORX022A",305,0)
 . . . . . S RXCNT=""
"RTN","RORX022A",306,0)
 . . . . . F  S RXCNT=$O(@NODE@("RX",DATE,NAME,IEN,RXNUM,RXCNT)) Q:RXCNT=""  S RXBUF=@NODE@("RX",DATE,NAME,IEN,RXNUM,RXCNT) D
"RTN","RORX022A",307,0)
 . . . . . . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"DRUG",,RXLST,,DFN)
"RTN","RORX022A",308,0)
 . . . . . . D ADDVAL^RORTSK11(RORTSK,"NAME",PTNAME,ITEM,1)
"RTN","RORX022A",309,0)
 . . . . . . D ADDVAL^RORTSK11(RORTSK,"LAST4",LAST4,ITEM,2)
"RTN","RORX022A",310,0)
 . . . . . . D ADDVAL^RORTSK11(RORTSK,"DAA_FILL",DAA,ITEM,1)
"RTN","RORX022A",311,0)
 . . . . . . D ADDVAL^RORTSK11(RORTSK,"FILL_DATE",DATE\1,ITEM,1)
"RTN","RORX022A",312,0)
 . . . . . . D ADDVAL^RORTSK11(RORTSK,"RXNAME",NAME,ITEM,1)
"RTN","RORX022A",313,0)
 . . . . . . D ADDVAL^RORTSK11(RORTSK,"DAYSPLY",$P(RXBUF,U,5),ITEM,1)
"RTN","RORX022A",314,0)
 ;--- Inactivate the patient list tag if the list is empty
"RTN","RORX022A",315,0)
 D:PTCNT'>0 UPDVAL^RORTSK11(RORTSK,PTLST,,,1)
"RTN","RORX022A",316,0)
 Q ECNT
"SEC","^DD",798.1,798.1,21.04,8)
 
"SEC","^DD",798.5,798.5,1,9)
 
"SEC","^DD",798.5,798.51,.01,8.5)
 
"SEC","^DD",798.5,798.51,.01,9)
 
"SEC","^DIC",798.1,798.1,0,"AUDIT")
 
"SEC","^DIC",798.1,798.1,0,"DD")
@
"SEC","^DIC",798.1,798.1,0,"DEL")
@
"SEC","^DIC",798.1,798.1,0,"LAYGO")
@
"SEC","^DIC",798.1,798.1,0,"RD")
 
"SEC","^DIC",798.1,798.1,0,"WR")
@
"SEC","^DIC",798.2,798.2,0,"AUDIT")
 
"SEC","^DIC",798.2,798.2,0,"DD")
@
"SEC","^DIC",798.2,798.2,0,"DEL")
@
"SEC","^DIC",798.2,798.2,0,"LAYGO")
@
"SEC","^DIC",798.2,798.2,0,"RD")
 
"SEC","^DIC",798.2,798.2,0,"WR")
@
"SEC","^DIC",798.5,798.5,0,"AUDIT")
@
"SEC","^DIC",798.5,798.5,0,"DD")
@
"SEC","^DIC",798.5,798.5,0,"DEL")
@
"SEC","^DIC",798.5,798.5,0,"LAYGO")
@
"SEC","^DIC",798.5,798.5,0,"RD")
 
"SEC","^DIC",798.5,798.5,0,"WR")
@
"SEC","^DIC",799.34,799.34,0,"AUDIT")
@
"SEC","^DIC",799.34,799.34,0,"DD")
@
"SEC","^DIC",799.34,799.34,0,"DEL")
@
"SEC","^DIC",799.34,799.34,0,"LAYGO")
@
"SEC","^DIC",799.34,799.34,0,"RD")
@
"SEC","^DIC",799.34,799.34,0,"WR")
@
"VER")
8.0^22.0
"^DD",798.1,798.1,0)
FIELD^^31^36
"^DD",798.1,798.1,0,"DDA")
N
"^DD",798.1,798.1,0,"DT")
3120301
"^DD",798.1,798.1,0,"ID","WRITE")
D EN^DDIOL("  "_$P($G(^(0)),U,4),,"?30")
"^DD",798.1,798.1,0,"IX","ACL",798.118,.01)
 
"^DD",798.1,798.1,0,"IX","AEP",798.1,25)
 
"^DD",798.1,798.1,0,"IX","ARULES",798.13,.01)
 
"^DD",798.1,798.1,0,"IX","C",798.1,31)
 
"^DD",798.1,798.1,0,"NM","ROR REGISTRY PARAMETERS")
 
"^DD",798.1,798.1,0,"PT",798,.02)
 
"^DD",798.1,798.1,0,"PT",798.31,.01)
 
"^DD",798.1,798.1,0,"PT",798.5,.01)
 
"^DD",798.1,798.1,0,"PT",798.6,.02)
 
"^DD",798.1,798.1,0,"PT",798.73,.01)
 
"^DD",798.1,798.1,0,"PT",798.8,.03)
 
"^DD",798.1,798.1,0,"PT",799.1,.03)
 
"^DD",798.1,798.1,0,"PT",799.51,.02)
 
"^DD",798.1,798.1,0,"PT",799.53,.03)
 
"^DD",798.1,798.1,0,"SCR")
I $$ACCESS^RORDD(798.1,Y)
"^DD",798.1,798.1,0,"VRPK")
ROR
"^DD",798.1,798.1,0,"VRRV")
1.5^ROR 1.5
"^DD",798.1,798.1,.01,0)
REGISTRY NAME^RFX^^0;1^Q:$$VAEDT^RORDD(798.1,$G(DA))  K:$L(X)>30!($L(X)<3)!'(X?1.UNP) X
"^DD",798.1,798.1,.01,1,0)
^.1^^0
"^DD",798.1,798.1,.01,3)
Enter the unique registry name (3-30 characters).
"^DD",798.1,798.1,.01,8.5)
@
"^DD",798.1,798.1,.01,9)
@
"^DD",798.1,798.1,.01,20,0)
^.3LA^1^1
"^DD",798.1,798.1,.01,20,1,0)
DEFINITION
"^DD",798.1,798.1,.01,21,0)
^.001^9^9^3060203^^
"^DD",798.1,798.1,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.1,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,.01,21,3,0)
 
"^DD",798.1,798.1,.01,21,4,0)
You can either select an existing registry or add 
"^DD",798.1,798.1,.01,21,5,0)
a new one. Registry names must be unique. Names of
"^DD",798.1,798.1,.01,21,6,0)
the National registries must start with "VA".
"^DD",798.1,798.1,.01,21,7,0)
 
"^DD",798.1,798.1,.01,21,8,0)
You can only select records of those registries
"^DD",798.1,798.1,.01,21,9,0)
that you have appropriate security key(s) for.
"^DD",798.1,798.1,.01,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,.01,"DT")
3060203
"^DD",798.1,798.1,.09,0)
NATIONAL^SX^0:NO;1:YES;^0;11^Q:$$VAEDT^RORDD(798.1,,-1)
"^DD",798.1,798.1,.09,8.5)
@
"^DD",798.1,798.1,.09,9)
@
"^DD",798.1,798.1,.09,20,0)
^.3LA^1^1
"^DD",798.1,798.1,.09,20,1,0)
DEFINITION
"^DD",798.1,798.1,.09,21,0)
^^6^6^3060203^
"^DD",798.1,798.1,.09,21,1,0)
ONLY AUTHORIZED NATIONAL REGISTRY DEVELOPERS CAN
"^DD",798.1,798.1,.09,21,2,0)
EDIT THIS FIELD!
"^DD",798.1,798.1,.09,21,3,0)
 
"^DD",798.1,798.1,.09,21,4,0)
The national registries must have this field set
"^DD",798.1,798.1,.09,21,5,0)
to "YES". This prevents local editing of other 
"^DD",798.1,798.1,.09,21,6,0)
fields of national registry definitions.
"^DD",798.1,798.1,.09,"DEL",1,0)
I $$VADEL^RORDD(798.1,,-1)
"^DD",798.1,798.1,.09,"DT")
3011120
"^DD",798.1,798.1,1,0)
REGISTRY UPDATED UNTIL^D^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",798.1,798.1,1,20,0)
^.3LA^1^1
"^DD",798.1,798.1,1,20,1,0)
STATE
"^DD",798.1,798.1,1,21,0)
^^9^9^3060203^
"^DD",798.1,798.1,1,21,1,0)
This field indicates the date of the last 
"^DD",798.1,798.1,1,21,2,0)
successful run of the regular registry update
"^DD",798.1,798.1,1,21,3,0)
process. The search engine looks for new patients
"^DD",798.1,798.1,1,21,4,0)
starting from this date.
"^DD",798.1,798.1,1,21,5,0)
 
"^DD",798.1,798.1,1,21,6,0)
Usually, this field should not be manually edited;
"^DD",798.1,798.1,1,21,7,0)
it is updated automatically. Before initial
"^DD",798.1,798.1,1,21,8,0)
population of the registry, enter the date that the
"^DD",798.1,798.1,1,21,9,0)
data search should start from.
"^DD",798.1,798.1,1,23,0)
^.001^3^3^3060203^^^
"^DD",798.1,798.1,1,23,1,0)
This field is updated automatically by the registry 
"^DD",798.1,798.1,1,23,2,0)
update process after successful completion (see the 
"^DD",798.1,798.1,1,23,3,0)
$$TMSTMP^RORUPD01 function for details).
"^DD",798.1,798.1,1,"DT")
3010928
"^DD",798.1,798.1,2,0)
DATA EXTRACTED UNTIL^D^^0;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",798.1,798.1,2,20,0)
^.3LA^1^1
"^DD",798.1,798.1,2,20,1,0)
STATE
"^DD",798.1,798.1,2,21,0)
^.001^3^3^3020816^^
"^DD",798.1,798.1,2,21,1,0)
This field indicates the date of the last 
"^DD",798.1,798.1,2,21,2,0)
successful run of the regular data extraction
"^DD",798.1,798.1,2,21,3,0)
process. Do not edit this field.
"^DD",798.1,798.1,2,23,0)
^.001^3^3^3020816^^
"^DD",798.1,798.1,2,23,1,0)
This field is updated automatically by the regular data
"^DD",798.1,798.1,2,23,2,0)
extraction process after its successful completion (see
"^DD",798.1,798.1,2,23,3,0)
the $$TMSTMP^ROREXTUT function for details).
"^DD",798.1,798.1,2,"DT")
3010928
"^DD",798.1,798.1,3,0)
SELECTION RULE^798.13^^1;0
"^DD",798.1,798.1,3,9)
@
"^DD",798.1,798.1,3,20,0)
^.3LA^1^1
"^DD",798.1,798.1,3,20,1,0)
DEFINITION
"^DD",798.1,798.1,3,21,0)
^.001^8^8^3051031^^^^
"^DD",798.1,798.1,3,21,1,0)
The SELECTION RULE field contains a list of the 
"^DD",798.1,798.1,3,21,2,0)
top-level selection rules that are used to screen
"^DD",798.1,798.1,3,21,3,0)
the patients to be added to the registry.
"^DD",798.1,798.1,3,21,4,0)
 
"^DD",798.1,798.1,3,21,5,0)
The records of the multiple are uniquely 
"^DD",798.1,798.1,3,21,6,0)
identified by the selection rule names. The "A"
"^DD",798.1,798.1,3,21,7,0)
primary key and the uniqueness index "B" are used
"^DD",798.1,798.1,3,21,8,0)
for this purpose.
"^DD",798.1,798.1,4,0)
SHORT DESCRIPTION^RFX^^0;4^Q:$$VAEDT^RORDD(798.1,$G(DA))  K:$L(X)>40!($L(X)<3) X
"^DD",798.1,798.1,4,3)
Enter a short description of the registry (3-40 characters).
"^DD",798.1,798.1,4,8.5)
@
"^DD",798.1,798.1,4,9)
@
"^DD",798.1,798.1,4,21,0)
^.001^2^2^3020403^^
"^DD",798.1,798.1,4,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.1,4,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,4,"DT")
3011109
"^DD",798.1,798.1,5,0)
DESCRIPTION^798.15^^2;0
"^DD",798.1,798.1,5,21,0)
^.001^2^2^3011009^^^
"^DD",798.1,798.1,5,21,1,0)
Any additional reference information related to
"^DD",798.1,798.1,5,21,2,0)
the registry may be stored in this field.
"^DD",798.1,798.1,5,23,0)
^.001^1^1^3011009^^
"^DD",798.1,798.1,5,23,1,0)
Content of this field is not used by the application.
"^DD",798.1,798.1,6.1,0)
BEFORE UPDATE^FX^^4;E1,245^Q:$$VAEDT^RORDD(798.1,$G(DA))  Q:$$EP^RORDD(3)
"^DD",798.1,798.1,6.1,3)
Answer must be $$TAG^ROUTINE (5-19 characters in length).
"^DD",798.1,798.1,6.1,8.5)
@
"^DD",798.1,798.1,6.1,9)
@
"^DD",798.1,798.1,6.1,20,0)
^.3LA^1^1
"^DD",798.1,798.1,6.1,20,1,0)
DEFINITION
"^DD",798.1,798.1,6.1,21,0)
^.001^7^7^3050427^^^^
"^DD",798.1,798.1,6.1,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.1,6.1,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,6.1,21,3,0)
 
"^DD",798.1,798.1,6.1,21,4,0)
Enter a full name ($$TAG^ROUTINE) of the external
"^DD",798.1,798.1,6.1,21,5,0)
MUMPS function that will be called before adding a
"^DD",798.1,798.1,6.1,21,6,0)
new record to the registry. This entry point can
"^DD",798.1,798.1,6.1,21,7,0)
be used to prepare any additional data.
"^DD",798.1,798.1,6.1,23,0)
^^20^20^3050427^
"^DD",798.1,798.1,6.1,23,1,0)
The call-back entry point must accept three parameters:
"^DD",798.1,798.1,6.1,23,2,0)
 
"^DD",798.1,798.1,6.1,23,3,0)
FDA - A reference to a local array that contains 
"^DD",798.1,798.1,6.1,23,4,0)
prepared data (for the UPDATE^DIE FileMan DSB call)
"^DD",798.1,798.1,6.1,23,5,0)
that should be stored as a new record in the ROR
"^DD",798.1,798.1,6.1,23,6,0)
REGISTRY RECORD (#798) file.
"^DD",798.1,798.1,6.1,23,7,0)
 
"^DD",798.1,798.1,6.1,23,8,0)
The main record uses "+1," placeholder and records of
"^DD",798.1,798.1,6.1,23,9,0)
the SELECTION RULE multiple use placeholders with
"^DD",798.1,798.1,6.1,23,10,0)
numbers starting from 1001.
"^DD",798.1,798.1,6.1,23,11,0)
 
"^DD",798.1,798.1,6.1,23,12,0)
See the source code of the $$ADD^RORUPD50 function and
"^DD",798.1,798.1,6.1,23,13,0)
the FileMan Programmer Manual for further details.
"^DD",798.1,798.1,6.1,23,14,0)
 
"^DD",798.1,798.1,6.1,23,15,0)
PATIEN - Patient IEN (in the file #2)
"^DD",798.1,798.1,6.1,23,16,0)
 
"^DD",798.1,798.1,6.1,23,17,0)
REGIEN - Registry IEN (in the file #798.1)
"^DD",798.1,798.1,6.1,23,18,0)
 
"^DD",798.1,798.1,6.1,23,19,0)
The function should return a negative number in case of
"^DD",798.1,798.1,6.1,23,20,0)
errors. Otherwise, zero should be returned.
"^DD",798.1,798.1,6.1,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,6.1,"DT")
3011120
"^DD",798.1,798.1,6.2,0)
AFTER UPDATE^FX^^5;E1,245^Q:$$VAEDT^RORDD(798.1,$G(DA))  Q:$$EP^RORDD(3)
"^DD",798.1,798.1,6.2,3)
Answer must be $$TAG^ROUTINE (5-19 characters in length).
"^DD",798.1,798.1,6.2,8.5)
@
"^DD",798.1,798.1,6.2,9)
@
"^DD",798.1,798.1,6.2,20,0)
^.3LA^1^1
"^DD",798.1,798.1,6.2,20,1,0)
DEFINITION
"^DD",798.1,798.1,6.2,21,0)
^.001^8^8^3020816^^
"^DD",798.1,798.1,6.2,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.1,6.2,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,6.2,21,3,0)
 
"^DD",798.1,798.1,6.2,21,4,0)
Enter a full name ($$TAG^ROUTINE) of the external
"^DD",798.1,798.1,6.2,21,5,0)
MUMPS function that will be called after adding a
"^DD",798.1,798.1,6.2,21,6,0)
new record to the registry. This entry point can
"^DD",798.1,798.1,6.2,21,7,0)
be used to create record(s) in additional linked
"^DD",798.1,798.1,6.2,21,8,0)
file(s) of the local registry.
"^DD",798.1,798.1,6.2,23,0)
^^11^11^3050427^
"^DD",798.1,798.1,6.2,23,1,0)
The call-back function must accept three parameters:
"^DD",798.1,798.1,6.2,23,2,0)
 
"^DD",798.1,798.1,6.2,23,3,0)
IEN - An IEN of the newly added record of the ROR
"^DD",798.1,798.1,6.2,23,4,0)
REGISTRY RECORD file
"^DD",798.1,798.1,6.2,23,5,0)
 
"^DD",798.1,798.1,6.2,23,6,0)
PATIEN - Patient IEN (in file #2)
"^DD",798.1,798.1,6.2,23,7,0)
 
"^DD",798.1,798.1,6.2,23,8,0)
REGIEN - Registry IEN (in file #798.1)
"^DD",798.1,798.1,6.2,23,9,0)
 
"^DD",798.1,798.1,6.2,23,10,0)
The function should return a negative number in case of
"^DD",798.1,798.1,6.2,23,11,0)
errors. Otherwise, zero should be returned.
"^DD",798.1,798.1,6.2,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,6.2,"DT")
3011120
"^DD",798.1,798.1,7,0)
EXTRACT PERIOD FOR NEW PATIENT^NJ5,0X^^0;5^Q:$$VAEDT^RORDD(798.1,$G(DA))  K:+X'=X!(X>15000)!(X<1)!(X?.E1"."1N.N) X
"^DD",798.1,798.1,7,3)
Enter number of days between 1 and 15000.
"^DD",798.1,798.1,7,8.5)
@
"^DD",798.1,798.1,7,9)
@
"^DD",798.1,798.1,7,20,0)
^.3LA^1^1
"^DD",798.1,798.1,7,20,1,0)
DEFINITION
"^DD",798.1,798.1,7,21,0)
^.001^11^11^3030717^^^
"^DD",798.1,798.1,7,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.1,7,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,7,21,3,0)
 
"^DD",798.1,798.1,7,21,4,0)
Enter the number of days that should be subtracted
"^DD",798.1,798.1,7,21,5,0)
from the earliest date when the patient passed one
"^DD",798.1,798.1,7,21,6,0)
of the selection rules. The result will be used as
"^DD",798.1,798.1,7,21,7,0)
the start date of the data extraction for this new
"^DD",798.1,798.1,7,21,8,0)
patient.
"^DD",798.1,798.1,7,21,9,0)
 
"^DD",798.1,798.1,7,21,10,0)
If this field is empty, the default value of 3650
"^DD",798.1,798.1,7,21,11,0)
is used.
"^DD",798.1,798.1,7,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,7,"DT")
3011109
"^DD",798.1,798.1,7,"V",0)
^.12P
"^DD",798.1,798.1,8,0)
ENABLE LOG^S^0:NO;1:YES;^0;6^Q
"^DD",798.1,798.1,8,20,0)
^.3LA^1^1
"^DD",798.1,798.1,8,20,1,0)
PARAMETERS
"^DD",798.1,798.1,8,21,0)
^^3^3^3060203^
"^DD",798.1,798.1,8,21,1,0)
Select "YES" to enable recording of different 
"^DD",798.1,798.1,8,21,2,0)
kinds of events (debug messages, errors, etc.)
"^DD",798.1,798.1,8,21,3,0)
generated by registry processes.
"^DD",798.1,798.1,8,23,0)
^.001^10^10^3060203^^
"^DD",798.1,798.1,8,23,1,0)
The ENABLE LOG field controls recording of the errors
"^DD",798.1,798.1,8,23,2,0)
and other events in the log file.
"^DD",798.1,798.1,8,23,3,0)
 
"^DD",798.1,798.1,8,23,4,0)
If internal value of the field is 0 or the field is 
"^DD",798.1,798.1,8,23,5,0)
empty, the recording of all events associated with the
"^DD",798.1,798.1,8,23,6,0)
registry is disabled.
"^DD",798.1,798.1,8,23,7,0)
 
"^DD",798.1,798.1,8,23,8,0)
If internal value of the field is 1, content of the
"^DD",798.1,798.1,8,23,9,0)
LOG EVENT multiple is analyzed to determine which
"^DD",798.1,798.1,8,23,10,0)
events (errors, warnings, etc.) should be recorded.
"^DD",798.1,798.1,8,"DT")
3000503
"^DD",798.1,798.1,8.1,0)
LOG EVENT^798.11S^^3;0
"^DD",798.1,798.1,8.1,20,0)
^.3LA^^0
"^DD",798.1,798.1,8.1,21,0)
^.001^8^8^3060203^^
"^DD",798.1,798.1,8.1,21,1,0)
The LOG EVENT multiple contain a list of event 
"^DD",798.1,798.1,8.1,21,2,0)
types that are enabled to record. 
"^DD",798.1,798.1,8.1,21,3,0)
 
"^DD",798.1,798.1,8.1,21,4,0)
If the list is empty and recording is enabled, 
"^DD",798.1,798.1,8.1,21,5,0)
all events except debug messages will be recorded.
"^DD",798.1,798.1,8.1,21,6,0)
 
"^DD",798.1,798.1,8.1,21,7,0)
Otherwise, only recording of the events from the
"^DD",798.1,798.1,8.1,21,8,0)
list and error messages will be enabled.
"^DD",798.1,798.1,8.1,"DT")
3050722
"^DD",798.1,798.1,10,0)
MESSAGE BUILDER^FX^^7;E1,245^Q:$$VAEDT^RORDD(798.1,$G(DA))  Q:$$EP^RORDD(4)
"^DD",798.1,798.1,10,3)
Answer must be $$TAG^ROUTINE (5-19 characters in length).
"^DD",798.1,798.1,10,8.5)
@
"^DD",798.1,798.1,10,9)
@
"^DD",798.1,798.1,10,20,0)
^.3LA^1^1
"^DD",798.1,798.1,10,20,1,0)
DEFINITION
"^DD",798.1,798.1,10,21,0)
^^10^10^3060106^
"^DD",798.1,798.1,10,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.1,10,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,10,21,3,0)
 
"^DD",798.1,798.1,10,21,4,0)
Enter a full name ($$TAG^ROUTINE) of the external 
"^DD",798.1,798.1,10,21,5,0)
MUMPS function that will be called to generate the
"^DD",798.1,798.1,10,21,6,0)
registry-specific section of the HL7 message for
"^DD",798.1,798.1,10,21,7,0)
each record of the registry.
"^DD",798.1,798.1,10,21,8,0)
 
"^DD",798.1,798.1,10,21,9,0)
If this field has no value, the default entry 
"^DD",798.1,798.1,10,21,10,0)
point ($$REGDATA^ROREXT02) will be used.
"^DD",798.1,798.1,10,23,0)
^^28^28^3060106^
"^DD",798.1,798.1,10,23,1,0)
The call-back function must accept four parameters:
"^DD",798.1,798.1,10,23,2,0)
 
"^DD",798.1,798.1,10,23,3,0)
IEN - IEN of the registry record
"^DD",798.1,798.1,10,23,4,0)
 
"^DD",798.1,798.1,10,23,5,0)
PATIEN - Patient IEN (in the file #2)
"^DD",798.1,798.1,10,23,6,0)
 
"^DD",798.1,798.1,10,23,7,0)
[.]DXDTS - Either a single time frame in 
"^DD",798.1,798.1,10,23,8,0)
StartDate^EndDate format or a reference to a local 
"^DD",798.1,798.1,10,23,9,0)
variable containing the list of data extraction time 
"^DD",798.1,798.1,10,23,10,0)
frames. The main time frame should be stored in the
"^DD",798.1,798.1,10,23,11,0)
root node (see the $$DXPERIOD^ROREXTUT function for 
"^DD",798.1,798.1,10,23,12,0)
details):
"^DD",798.1,798.1,10,23,13,0)
 
"^DD",798.1,798.1,10,23,14,0)
  DXDTS(         StartDate^EndDate  (FileMan)
"^DD",798.1,798.1,10,23,15,0)
    DataArea,
"^DD",798.1,798.1,10,23,16,0)
      i)         StartDate^EndDate  (FileMan)
"^DD",798.1,798.1,10,23,17,0)
 
"^DD",798.1,798.1,10,23,18,0)
The function should add the text of the HL7 message 
"^DD",798.1,798.1,10,23,19,0)
after already existing nodes in the standard location:
"^DD",798.1,798.1,10,23,20,0)
^TMP("HLS",$J). DO NOT KILL THIS NODE! It contains the
"^DD",798.1,798.1,10,23,21,0)
previous messages of the batch.
"^DD",798.1,798.1,10,23,22,0)
 
"^DD",798.1,798.1,10,23,23,0)
If the message was generated successfully, the function
"^DD",798.1,798.1,10,23,24,0)
should return zero. A negative value corresponds to the
"^DD",798.1,798.1,10,23,25,0)
error code.
"^DD",798.1,798.1,10,23,26,0)
                                                                    
"^DD",798.1,798.1,10,23,27,0)
See the source code of the $$REGDATA^ROREXT02 function 
"^DD",798.1,798.1,10,23,28,0)
for further details.
"^DD",798.1,798.1,10,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,10,"DT")
3011120
"^DD",798.1,798.1,11,0)
REGISTRY STATUS^S^0:ACTIVE;1:INACTIVE;^0;7^Q
"^DD",798.1,798.1,11,1,0)
^.1^^0
"^DD",798.1,798.1,11,20,0)
^.3LA^1^1
"^DD",798.1,798.1,11,20,1,0)
PARAMETERS
"^DD",798.1,798.1,11,21,0)
^.001^3^3^3020816^^
"^DD",798.1,798.1,11,21,1,0)
Select the "INACTIVE" code if you want to exclude
"^DD",798.1,798.1,11,21,2,0)
the registry from the regular registry updates and
"^DD",798.1,798.1,11,21,3,0)
data transmissions.
"^DD",798.1,798.1,11,"DT")
3020424
"^DD",798.1,798.1,12,0)
EXTRACTED RESULT^798.112I^^8;0
"^DD",798.1,798.1,12,9)
@
"^DD",798.1,798.1,12,20,0)
^.3LA^1^1
"^DD",798.1,798.1,12,20,1,0)
DEFINITION
"^DD",798.1,798.1,12,21,0)
^.001^3^3^3020816^^
"^DD",798.1,798.1,12,21,1,0)
This multiple contains a list of Lab result codes.
"^DD",798.1,798.1,12,21,2,0)
These results will be extracted and transmitted to
"^DD",798.1,798.1,12,21,3,0)
AAC.
"^DD",798.1,798.1,12,"DT")
3010629
"^DD",798.1,798.1,13,0)
PROTOCOL^*P101'X^ORD(101,^9;1^Q:$$VAEDT^RORDD(798.1,$G(DA))  S DIC("S")="S D=$G(^(0)) I $E($P(D,U),1,3)=""ROR"",$P(D,U,4)=""E""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",798.1,798.1,13,3)
 
"^DD",798.1,798.1,13,8.5)
@
"^DD",798.1,798.1,13,9)
@
"^DD",798.1,798.1,13,12)
Only Event Drivers from the "ROR" namespace can be selected!
"^DD",798.1,798.1,13,12.1)
S DIC("S")="S D=$G(^(0)) I $E($P(D,U),1,3)=""ROR"",$P(D,U,4)=""E"""
"^DD",798.1,798.1,13,20,0)
^.3LA^2^2
"^DD",798.1,798.1,13,20,1,0)
HL7
"^DD",798.1,798.1,13,20,2,0)
DEFINITION
"^DD",798.1,798.1,13,21,0)
^.001^6^6^3120501^^^^
"^DD",798.1,798.1,13,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF
"^DD",798.1,798.1,13,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,13,21,3,0)
 
"^DD",798.1,798.1,13,21,4,0)
This field contains a pointer to the protocol in 
"^DD",798.1,798.1,13,21,5,0)
the PROTOCOL file that is used as the event driver
"^DD",798.1,798.1,13,21,6,0)
for sending HL7 messages.
"^DD",798.1,798.1,13,23,0)
^^5^5^3120501^
"^DD",798.1,798.1,13,23,1,0)
If several registries are processed by the same nightly
"^DD",798.1,798.1,13,23,2,0)
task and they have different values of the PROTOCOL
"^DD",798.1,798.1,13,23,3,0)
field, then the registries are grouped by the value of
"^DD",798.1,798.1,13,23,4,0)
this field and data extraction is performed separately
"^DD",798.1,798.1,13,23,5,0)
for each of those groups.
"^DD",798.1,798.1,13,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,13,"DT")
3011112
"^DD",798.1,798.1,13.1,0)
MAXIMUM MESSAGE SIZE^NJ4,1^^9;2^K:+X'=X!(X>99)!(X<0)!(X?.E1"."2N.N) X
"^DD",798.1,798.1,13.1,3)
Enter maximum size (in megabytes) between 0 and 99, 1 decimal digit.
"^DD",798.1,798.1,13.1,8.5)
@
"^DD",798.1,798.1,13.1,9)
@
"^DD",798.1,798.1,13.1,20,0)
^.3LA^2^2
"^DD",798.1,798.1,13.1,20,1,0)
HL7
"^DD",798.1,798.1,13.1,20,2,0)
PARAMETERS
"^DD",798.1,798.1,13.1,21,0)
^.001^8^8^3060203^^
"^DD",798.1,798.1,13.1,21,1,0)
This field stores the maximum size (in megabytes)
"^DD",798.1,798.1,13.1,21,2,0)
of a batch HL7 message that can be sent to Austin
"^DD",798.1,798.1,13.1,21,3,0)
Automation Center (AAC). If this field is empty or
"^DD",798.1,798.1,13.1,21,4,0)
contains 0, the size is not limited.
"^DD",798.1,798.1,13.1,21,5,0)
 
"^DD",798.1,798.1,13.1,21,6,0)
You must coordinate your intentions with AAC
"^DD",798.1,798.1,13.1,21,7,0)
support personnel if you are going to edit this
"^DD",798.1,798.1,13.1,21,8,0)
field.
"^DD",798.1,798.1,13.1,23,0)
^^8^8^3060203^
"^DD",798.1,798.1,13.1,23,1,0)
Actual size of an HL7 batch can be greater than the
"^DD",798.1,798.1,13.1,23,2,0)
value of this field because the software does not break
"^DD",798.1,798.1,13.1,23,3,0)
in the middle of an individual HL7 message.
"^DD",798.1,798.1,13.1,23,4,0)
 
"^DD",798.1,798.1,13.1,23,5,0)
For example, if the maximum size is 10Mb, the current
"^DD",798.1,798.1,13.1,23,6,0)
size is 9Mb and 3Mb should be sent for the patient
"^DD",798.1,798.1,13.1,23,7,0)
being processed, then the actual size of the batch will
"^DD",798.1,798.1,13.1,23,8,0)
be 12Mb.
"^DD",798.1,798.1,13.1,"DT")
3020730
"^DD",798.1,798.1,13.2,0)
ALERT FREQUENCY^NJ2,0^^9;3^K:+X'=X!(X>10)!(X<1)!(X?.E1"."1N.N) X
"^DD",798.1,798.1,13.2,3)
Type a Number between 1 and 10, 0 Decimal Digits
"^DD",798.1,798.1,13.2,8.5)
@
"^DD",798.1,798.1,13.2,9)
@
"^DD",798.1,798.1,13.2,11,0)
^.2LAP^^0
"^DD",798.1,798.1,13.2,20,0)
^.3LA^2^2
"^DD",798.1,798.1,13.2,20,1,0)
HL7
"^DD",798.1,798.1,13.2,20,2,0)
PARAMETERS
"^DD",798.1,798.1,13.2,21,0)
^.001^20^20^3060203^^
"^DD",798.1,798.1,13.2,21,1,0)
Value of the ALERT FREQUENCY field determines how
"^DD",798.1,798.1,13.2,21,2,0)
often e-mail notifications and VistA alerts are 
"^DD",798.1,798.1,13.2,21,3,0)
sent to the AAC and local staff in case of
"^DD",798.1,798.1,13.2,21,4,0)
problems with the site's CCR software (data
"^DD",798.1,798.1,13.2,21,5,0)
extraction problems, unsent HL7 messages, etc.).
"^DD",798.1,798.1,13.2,21,6,0)
 
"^DD",798.1,798.1,13.2,21,7,0)
If this field is empty or 0, notifications are
"^DD",798.1,798.1,13.2,21,8,0)
not sent.
"^DD",798.1,798.1,13.2,21,9,0)
 
"^DD",798.1,798.1,13.2,21,10,0)
Otherwise, the nightly task increments the error
"^DD",798.1,798.1,13.2,21,11,0)
counters and checks the remainders from division
"^DD",798.1,798.1,13.2,21,12,0)
of the counters by the value of this field. When a
"^DD",798.1,798.1,13.2,21,13,0)
reminder becomes 0, the software sends the
"^DD",798.1,798.1,13.2,21,14,0)
corresponding e-mail notification to the AAC and
"^DD",798.1,798.1,13.2,21,15,0)
generates the VistA alert to the local staff
"^DD",798.1,798.1,13.2,21,16,0)
listed in the NOTIFICATION multiple (14).
"^DD",798.1,798.1,13.2,21,17,0)
 
"^DD",798.1,798.1,13.2,21,18,0)
For example, if the nightly task runs every night 
"^DD",798.1,798.1,13.2,21,19,0)
and the ALERT FREQUENCY is 2, then alerts and 
"^DD",798.1,798.1,13.2,21,20,0)
notifications will be sent every other night.
"^DD",798.1,798.1,13.2,23,0)
^.001^3^3^3060203^^^
"^DD",798.1,798.1,13.2,23,1,0)
See description of the HL7 PROBLEM COUNTER field (19.3)
"^DD",798.1,798.1,13.2,23,2,0)
and source code of the $$CHECKMSG^ROR10 function for
"^DD",798.1,798.1,13.2,23,3,0)
more details.
"^DD",798.1,798.1,13.2,"DT")
3050503
"^DD",798.1,798.1,13.3,0)
NATIONAL NOTIFICATION E-MAIL^FX^^9;4^Q:$$VAEDT^RORDD(798.1,$G(DA))  K:$L(X)>50!($L(X)<3)!(X'?1.ANP1"@"1.ANP) X
"^DD",798.1,798.1,13.3,3)
Answer must be a valid e-mail address (3-50 characters in length).
"^DD",798.1,798.1,13.3,8.5)
@
"^DD",798.1,798.1,13.3,9)
@
"^DD",798.1,798.1,13.3,20,0)
^.3LA^1^1
"^DD",798.1,798.1,13.3,20,1,0)
DEFINITION
"^DD",798.1,798.1,13.3,21,0)
^.001^10^10^3060203^^
"^DD",798.1,798.1,13.3,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF
"^DD",798.1,798.1,13.3,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,13.3,21,3,0)
 
"^DD",798.1,798.1,13.3,21,4,0)
The NATIONAL NOTIFICATION E-MAIL field holds an 
"^DD",798.1,798.1,13.3,21,5,0)
e-mail address where notifications about registry
"^DD",798.1,798.1,13.3,21,6,0)
problems (mostly, data transmission problems) are
"^DD",798.1,798.1,13.3,21,7,0)
sent to.
"^DD",798.1,798.1,13.3,21,8,0)
 
"^DD",798.1,798.1,13.3,21,9,0)
If the field is empty, e-mail notifications will
"^DD",798.1,798.1,13.3,21,10,0)
not be sent.
"^DD",798.1,798.1,13.3,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,13.3,"DT")
3030429
"^DD",798.1,798.1,14,0)
NOTIFICATION^798.114P^^10;0
"^DD",798.1,798.1,14,21,0)
^.001^3^3^3050525^^^
"^DD",798.1,798.1,14,21,1,0)
This multiple contains a list of VistA users that
"^DD",798.1,798.1,14,21,2,0)
should be notified about problems with the local
"^DD",798.1,798.1,14,21,3,0)
registry.
"^DD",798.1,798.1,14,"DT")
3050427
"^DD",798.1,798.1,15.1,0)
LAG DAYS^NJ1,0^^11;1^K:+X'=X!(X>7)!(X<1)!(X?.E1"."1N.N) X
"^DD",798.1,798.1,15.1,3)
Enter number of days between 1 and 7.
"^DD",798.1,798.1,15.1,20,0)
^.3LA^1^1
"^DD",798.1,798.1,15.1,20,1,0)
PARAMETERS
"^DD",798.1,798.1,15.1,21,0)
^.001^12^12^3120501^^^^
"^DD",798.1,798.1,15.1,21,1,0)
Number of days that defines an overlap of the data
"^DD",798.1,798.1,15.1,21,2,0)
searches during the registry updates and a data
"^DD",798.1,798.1,15.1,21,3,0)
extraction delay during the regular data
"^DD",798.1,798.1,15.1,21,4,0)
extractions.
"^DD",798.1,798.1,15.1,21,5,0)
 
"^DD",798.1,798.1,15.1,21,6,0)
If this field is empty, the default value of 1 is 
"^DD",798.1,798.1,15.1,21,7,0)
used by the registry update and data extraction
"^DD",798.1,798.1,15.1,21,8,0)
processes.
"^DD",798.1,798.1,15.1,21,9,0)
 
"^DD",798.1,798.1,15.1,21,10,0)
See the package documentation or Technical
"^DD",798.1,798.1,15.1,21,11,0)
Description of the field in the data dictionary
"^DD",798.1,798.1,15.1,21,12,0)
for more information.
"^DD",798.1,798.1,15.1,23,0)
^^37^37^3120501^
"^DD",798.1,798.1,15.1,23,1,0)
Clinical data may be entered into the VistA system 
"^DD",798.1,798.1,15.1,23,2,0)
later than they are available. For example, an
"^DD",798.1,798.1,15.1,23,3,0)
encounter that occurred today may not get entered into
"^DD",798.1,798.1,15.1,23,4,0)
the system until tomorrow.
"^DD",798.1,798.1,15.1,23,5,0)
 
"^DD",798.1,798.1,15.1,23,6,0)
Because of this delay, data may be missed by the
"^DD",798.1,798.1,15.1,23,7,0)
registry update and data extraction processes if they
"^DD",798.1,798.1,15.1,23,8,0)
look for the data until the current date and then
"^DD",798.1,798.1,15.1,23,9,0)
continue from that point next time.
"^DD",798.1,798.1,15.1,23,10,0)
 
"^DD",798.1,798.1,15.1,23,11,0)
To avoid this problem, data search intervals are 
"^DD",798.1,798.1,15.1,23,12,0)
overlapped by the number of days indicated by this 
"^DD",798.1,798.1,15.1,23,13,0)
field. The registry update process looks for new data 
"^DD",798.1,798.1,15.1,23,14,0)
not from the end date of its previous run but from the 
"^DD",798.1,798.1,15.1,23,15,0)
date that is earlier by the number of days from this 
"^DD",798.1,798.1,15.1,23,16,0)
field. This overlap increases the chances of data
"^DD",798.1,798.1,15.1,23,17,0)
entered retrospectively to be found by the next run of
"^DD",798.1,798.1,15.1,23,18,0)
the registry update process.
"^DD",798.1,798.1,15.1,23,19,0)
 
"^DD",798.1,798.1,15.1,23,20,0)
Moreover, the regular data extraction process extracts
"^DD",798.1,798.1,15.1,23,21,0)
data not until the date when the process is run but
"^DD",798.1,798.1,15.1,23,22,0)
until the date that is earlier by the number of days
"^DD",798.1,798.1,15.1,23,23,0)
from this field. So, this is a delay that allows the
"^DD",798.1,798.1,15.1,23,24,0)
data to be entered retrospectively before the next data
"^DD",798.1,798.1,15.1,23,25,0)
extraction.
"^DD",798.1,798.1,15.1,23,26,0)
 
"^DD",798.1,798.1,15.1,23,27,0)
If the value of this field is too small, you may miss 
"^DD",798.1,798.1,15.1,23,28,0)
some data entered retrospectively. If it is too big,
"^DD",798.1,798.1,15.1,23,29,0)
the national registry will not contain up to date
"^DD",798.1,798.1,15.1,23,30,0)
information (data will be delayed by the number of days
"^DD",798.1,798.1,15.1,23,31,0)
indicated by this field) and the registry update
"^DD",798.1,798.1,15.1,23,32,0)
process will take more time to complete, because 
"^DD",798.1,798.1,15.1,23,33,0)
additional time will be spent processing the data from
"^DD",798.1,798.1,15.1,23,34,0)
the overlap interval).
"^DD",798.1,798.1,15.1,23,35,0)
 
"^DD",798.1,798.1,15.1,23,36,0)
When several registries are processed at the same time,
"^DD",798.1,798.1,15.1,23,37,0)
the maximum value of the LAG DAYS field is used.
"^DD",798.1,798.1,15.1,"DT")
3020426
"^DD",798.1,798.1,18,0)
SECURITY KEY^798.118^^18;0
"^DD",798.1,798.1,18,9)
@
"^DD",798.1,798.1,18,20,0)
^.3LA^1^1
"^DD",798.1,798.1,18,20,1,0)
DEFINITION
"^DD",798.1,798.1,18,21,0)
^.001^2^2^3050722^^^^
"^DD",798.1,798.1,18,21,1,0)
This multiple stores a list of security keys 
"^DD",798.1,798.1,18,21,2,0)
associated with the registry.
"^DD",798.1,798.1,19.1,0)
NUMBER OF PATIENTS^NJ9,0^^19;1^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",798.1,798.1,19.1,3)
Type a Number between 0 and 999999999, 0 Decimal Digits
"^DD",798.1,798.1,19.1,8.5)
@
"^DD",798.1,798.1,19.1,9)
@
"^DD",798.1,798.1,19.1,20,0)
^.3LA^1^1
"^DD",798.1,798.1,19.1,20,1,0)
STATE
"^DD",798.1,798.1,19.1,21,0)
^.001^3^3^3060106^^^
"^DD",798.1,798.1,19.1,21,1,0)
The NUMBER OF PATIENTS field contains total number
"^DD",798.1,798.1,19.1,21,2,0)
of confirmed patients in the registry right after
"^DD",798.1,798.1,19.1,21,3,0)
the last registry update.
"^DD",798.1,798.1,19.1,23,0)
^.001^3^3^3060203^^
"^DD",798.1,798.1,19.1,23,1,0)
This field should not be edited. It is updated
"^DD",798.1,798.1,19.1,23,2,0)
automatically by the $$UPDDEM^RORUPD51 function during
"^DD",798.1,798.1,19.1,23,3,0)
the registry update.
"^DD",798.1,798.1,19.1,"DT")
3031027
"^DD",798.1,798.1,19.2,0)
NUMBER OF PENDING PATIENTS^NJ9,0^^19;2^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",798.1,798.1,19.2,3)
Type a Number between 0 and 999999999, 0 Decimal Digits
"^DD",798.1,798.1,19.2,8.5)
@
"^DD",798.1,798.1,19.2,9)
@
"^DD",798.1,798.1,19.2,20,0)
^.3LA^1^1
"^DD",798.1,798.1,19.2,20,1,0)
STATE
"^DD",798.1,798.1,19.2,21,0)
^.001^3^3^3060106^^
"^DD",798.1,798.1,19.2,21,1,0)
The NUMBER OF PENDING PATIENTS field stores number
"^DD",798.1,798.1,19.2,21,2,0)
of pending patients in the registry right after
"^DD",798.1,798.1,19.2,21,3,0)
the last registry update.
"^DD",798.1,798.1,19.2,23,0)
^.001^3^3^3060203^^
"^DD",798.1,798.1,19.2,23,1,0)
This field should not be edited. It is updated 
"^DD",798.1,798.1,19.2,23,2,0)
automatically by the $$UPDDEM^RORUPD51 function during
"^DD",798.1,798.1,19.2,23,3,0)
the registry update.
"^DD",798.1,798.1,19.2,"DT")
3050627
"^DD",798.1,798.1,19.3,0)
HL7 ATTEMPT COUNTER^NJ3,0^^19;3^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",798.1,798.1,19.3,3)
Type a Number between 0 and 999, 0 Decimal Digits
"^DD",798.1,798.1,19.3,8.5)
@
"^DD",798.1,798.1,19.3,9)
@
"^DD",798.1,798.1,19.3,20,0)
^.3LA^1^1
"^DD",798.1,798.1,19.3,20,1,0)
HL7
"^DD",798.1,798.1,19.3,21,0)
^^10^10^3060203^
"^DD",798.1,798.1,19.3,21,1,0)
The HL7 ATTEMPT COUNTER field is incremented each
"^DD",798.1,798.1,19.3,21,2,0)
time the nightly task (the Registry Update & Data 
"^DD",798.1,798.1,19.3,21,3,0)
Extraction [ROR TASK] option) encounters at least
"^DD",798.1,798.1,19.3,21,4,0)
one unsent HL7 message.
"^DD",798.1,798.1,19.3,21,5,0)
 
"^DD",798.1,798.1,19.3,21,6,0)
The nightly task assigns 1 to the field when new
"^DD",798.1,798.1,19.3,21,7,0)
HL7 messages are generated (only if all previous
"^DD",798.1,798.1,19.3,21,8,0)
messages have been successfully transmitted).
"^DD",798.1,798.1,19.3,21,9,0)
 
"^DD",798.1,798.1,19.3,21,10,0)
Usually, you should not edit this field.
"^DD",798.1,798.1,19.3,23,0)
^.001^3^3^3060203^^^^
"^DD",798.1,798.1,19.3,23,1,0)
See description of the ALERT FREQUENCY field (13.2) and
"^DD",798.1,798.1,19.3,23,2,0)
source code of the $$CHECKMSG^ROR10 function for more
"^DD",798.1,798.1,19.3,23,3,0)
details.
"^DD",798.1,798.1,19.3,"DT")
3050701
"^DD",798.1,798.1,21.01,0)
AUTOMATIC BACKPULL^*P799.6'^RORDATA(799.6,^21;1^S DIC("S")="I $P($G(^(0)),U,2)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",798.1,798.1,21.01,8.5)
@
"^DD",798.1,798.1,21.01,9)
@
"^DD",798.1,798.1,21.01,12)
Only "Auto" definitions can be selected.
"^DD",798.1,798.1,21.01,12.1)
S DIC("S")="I $P($G(^(0)),U,2)=1"
"^DD",798.1,798.1,21.01,20,0)
^.3LA^1^1
"^DD",798.1,798.1,21.01,20,1,0)
STATE
"^DD",798.1,798.1,21.01,21,0)
^^3^3^3051110^
"^DD",798.1,798.1,21.01,21,1,0)
This field stores the pointer to the historical 
"^DD",798.1,798.1,21.01,21,2,0)
data extraction definition that was used during
"^DD",798.1,798.1,21.01,21,3,0)
the previous run of the nightly task.
"^DD",798.1,798.1,21.01,"DT")
3051110
"^DD",798.1,798.1,21.04,0)
LOCAL DATA RESENT^D^^21;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",798.1,798.1,21.04,8.5)
@
"^DD",798.1,798.1,21.04,9)
@
"^DD",798.1,798.1,21.04,20,0)
^.3LA^1^1
"^DD",798.1,798.1,21.04,20,1,0)
STATE
"^DD",798.1,798.1,21.04,21,0)
^.001^10^10^3060203^^
"^DD",798.1,798.1,21.04,21,1,0)
This field holds the date when all local registry 
"^DD",798.1,798.1,21.04,21,2,0)
data was resent to AAC after the installation (to 
"^DD",798.1,798.1,21.04,21,3,0)
fix the data incorrectly overwritten with the 
"^DD",798.1,798.1,21.04,21,4,0)
historical data).
"^DD",798.1,798.1,21.04,21,5,0)
 
"^DD",798.1,798.1,21.04,21,6,0)
Usually, you should not modify this field. If you
"^DD",798.1,798.1,21.04,21,7,0)
need to resend all local registry and demographic
"^DD",798.1,798.1,21.04,21,8,0)
data to AAC, you should clear this field. The data
"^DD",798.1,798.1,21.04,21,9,0)
will be resent automatically during the next
"^DD",798.1,798.1,21.04,21,10,0)
nightly transmission.
"^DD",798.1,798.1,21.04,23,0)
^.001^4^4^3060203^^^^
"^DD",798.1,798.1,21.04,23,1,0)
The value of this field is analyzed and modified by the
"^DD",798.1,798.1,21.04,23,2,0)
$$REMARK^RORUTL05 function. The function is called by
"^DD",798.1,798.1,21.04,23,3,0)
the nightly registry update and data transmission task
"^DD",798.1,798.1,21.04,23,4,0)
(TASK^ROR).
"^DD",798.1,798.1,21.04,"DT")
3020508
"^DD",798.1,798.1,21.05,0)
HDT DATE/TIME^D^^21;4^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",798.1,798.1,21.05,8.5)
@
"^DD",798.1,798.1,21.05,9)
@
"^DD",798.1,798.1,21.05,21,0)
^.001^4^4^3060123^^
"^DD",798.1,798.1,21.05,21,1,0)
This field is initialized with the current 
"^DD",798.1,798.1,21.05,21,2,0)
date/time by the registry setup task upon
"^DD",798.1,798.1,21.05,21,3,0)
successful completion of the initial registry
"^DD",798.1,798.1,21.05,21,4,0)
population.
"^DD",798.1,798.1,21.05,23,0)
^^4^4^3060123^
"^DD",798.1,798.1,21.05,23,1,0)
The field is populated by the $$UPDHDTRP^RORSETU2 
"^DD",798.1,798.1,21.05,23,2,0)
function during the registry setup.
"^DD",798.1,798.1,21.05,23,3,0)
 
"^DD",798.1,798.1,21.05,23,4,0)
Do not delete value of this field!
"^DD",798.1,798.1,21.05,"DT")
3031027
"^DD",798.1,798.1,22,0)
LAST BATCH CONTROL ID^798.122^^22;0
"^DD",798.1,798.1,22,9)
@
"^DD",798.1,798.1,22,20,0)
^.3LA^1^1
"^DD",798.1,798.1,22,20,1,0)
HL7
"^DD",798.1,798.1,22,21,0)
^.001^3^3^3060203^^^^
"^DD",798.1,798.1,22,21,1,0)
This multiple contains a list of identifiers of
"^DD",798.1,798.1,22,21,2,0)
the HL7 batch messages generated during the
"^DD",798.1,798.1,22,21,3,0)
previous run of the nightly task.
"^DD",798.1,798.1,22,23,0)
^^3^3^3060203^
"^DD",798.1,798.1,22,23,1,0)
The nightly task checks status of each message from 
"^DD",798.1,798.1,22,23,2,0)
this multiple before the registry update and data
"^DD",798.1,798.1,22,23,3,0)
extraction.
"^DD",798.1,798.1,22,"DT")
3050504
"^DD",798.1,798.1,25,0)
ENABLE PROTOCOLS^S^0:NO;1:YES;^0;14^Q
"^DD",798.1,798.1,25,1,0)
^.1
"^DD",798.1,798.1,25,1,1,0)
798.1^AEP^MUMPS
"^DD",798.1,798.1,25,1,1,1)
S:X ^ROR(798.1,"AEP",DA)=""
"^DD",798.1,798.1,25,1,1,2)
K ^ROR(798.1,"AEP",DA)
"^DD",798.1,798.1,25,1,1,3)
Do not delete!
"^DD",798.1,798.1,25,1,1,"%D",0)
^^10^10^3060203^
"^DD",798.1,798.1,25,1,1,"%D",1,0)
This cross-reference controls the package event 
"^DD",798.1,798.1,25,1,1,"%D",2,0)
protocols.
"^DD",798.1,798.1,25,1,1,"%D",3,0)
 
"^DD",798.1,798.1,25,1,1,"%D",4,0)
If at least one registry has the ENABLE PROTOCOLS
"^DD",798.1,798.1,25,1,1,"%D",5,0)
field set to "YES", the ^ROR(798.1,"AEP") node
"^DD",798.1,798.1,25,1,1,"%D",6,0)
will be defined and the protocols will call the
"^DD",798.1,798.1,25,1,1,"%D",7,0)
processing routines.
"^DD",798.1,798.1,25,1,1,"%D",8,0)
 
"^DD",798.1,798.1,25,1,1,"%D",9,0)
Otherwise, they will run idle unless they are 
"^DD",798.1,798.1,25,1,1,"%D",10,0)
disabled or unsubscribed manually.
"^DD",798.1,798.1,25,1,1,"DT")
3020418
"^DD",798.1,798.1,25,20,0)
^.3LA^1^1
"^DD",798.1,798.1,25,20,1,0)
PARAMETERS
"^DD",798.1,798.1,25,21,0)
^^13^13^3060203^
"^DD",798.1,798.1,25,21,1,0)
If this field is set to "YES", event protocols
"^DD",798.1,798.1,25,21,2,0)
will be used by the package to speed up the 
"^DD",798.1,798.1,25,21,3,0)
registry processing.
"^DD",798.1,798.1,25,21,4,0)
 
"^DD",798.1,798.1,25,21,5,0)
The protocols create references to patient events
"^DD",798.1,798.1,25,21,6,0)
in the ROR PATIENT EVENTS file. Only those 
"^DD",798.1,798.1,25,21,7,0)
patients that have new references will be 
"^DD",798.1,798.1,25,21,8,0)
processed by the next registry update.
"^DD",798.1,798.1,25,21,9,0)
 
"^DD",798.1,798.1,25,21,10,0)
If several registries are updated at the same 
"^DD",798.1,798.1,25,21,11,0)
time and at least one of them has this field set 
"^DD",798.1,798.1,25,21,12,0)
to "YES", all these registries will be processed 
"^DD",798.1,798.1,25,21,13,0)
using event references.
"^DD",798.1,798.1,25,23,0)
^.001^11^11^3060203^^
"^DD",798.1,798.1,25,23,1,0)
This field controls both the registry update engine 
"^DD",798.1,798.1,25,23,2,0)
and the event protocols.
"^DD",798.1,798.1,25,23,3,0)
 
"^DD",798.1,798.1,25,23,4,0)
If at least one of the defined registries enables the
"^DD",798.1,798.1,25,23,5,0)
protocols, they will process the events and create
"^DD",798.1,798.1,25,23,6,0)
references in the ROR PATIENT EVENTS file (#798.3).
"^DD",798.1,798.1,25,23,7,0)
 
"^DD",798.1,798.1,25,23,8,0)
Otherwise, the protocols will be executed (if they are
"^DD",798.1,798.1,25,23,9,0)
not disabled or unsubscribed manually) but will not
"^DD",798.1,798.1,25,23,10,0)
call processing routines and will not create references
"^DD",798.1,798.1,25,23,11,0)
in file #798.3.
"^DD",798.1,798.1,25,"DT")
3020418
"^DD",798.1,798.1,26,0)
EXCLUDE EMPLOYEES^SX^0:NO;1:YES;^0;10^Q:$$VAEDT^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,26,8.5)
@
"^DD",798.1,798.1,26,9)
@
"^DD",798.1,798.1,26,20,0)
^.3LA^1^1
"^DD",798.1,798.1,26,20,1,0)
DEFINITION
"^DD",798.1,798.1,26,21,0)
^^6^6^3060203^
"^DD",798.1,798.1,26,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.1,26,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,26,21,3,0)
 
"^DD",798.1,798.1,26,21,4,0)
If this field is set to "YES", patients who are
"^DD",798.1,798.1,26,21,5,0)
employees will not be processed by the registry
"^DD",798.1,798.1,26,21,6,0)
update or data extraction functions.
"^DD",798.1,798.1,26,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,26,"DT")
3020802
"^DD",798.1,798.1,27,0)
AVAILABLE REPORTS^FX^^27;E1,250^Q:$$VAEDT^RORDD(798.1,$G(DA))  K:$L(X)>250!($L(X)<1) X
"^DD",798.1,798.1,27,3)
Answer must be 1-250 characters in length.
"^DD",798.1,798.1,27,8.5)
@
"^DD",798.1,798.1,27,9)
@
"^DD",798.1,798.1,27,20,0)
^.3LA^1^1
"^DD",798.1,798.1,27,20,1,0)
DEFINITION
"^DD",798.1,798.1,27,21,0)
^^7^7^3060203^
"^DD",798.1,798.1,27,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF
"^DD",798.1,798.1,27,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,27,21,3,0)
 
"^DD",798.1,798.1,27,21,4,0)
The AVAILABLE REPORTS field stores a list of 
"^DD",798.1,798.1,27,21,5,0)
report codes (not the IENs!) separated by commas.
"^DD",798.1,798.1,27,21,6,0)
These reports will be available for this registry
"^DD",798.1,798.1,27,21,7,0)
in the GUI.
"^DD",798.1,798.1,27,23,0)
^.001^5^5^3060203^^^^
"^DD",798.1,798.1,27,23,1,0)
The GUI loads the value of this field using the ROR 
"^DD",798.1,798.1,27,23,2,0)
REPORTS AVAILABLE remote procedure.
"^DD",798.1,798.1,27,23,3,0)
 
"^DD",798.1,798.1,27,23,4,0)
See the data dictionary of the ROR REPORT PARAMETERS 
"^DD",798.1,798.1,27,23,5,0)
file (#799.12) for more details.
"^DD",798.1,798.1,27,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,27,"DT")
3030417
"^DD",798.1,798.1,28,0)
LOCAL TEST NAME^798.128PI^^28;0
"^DD",798.1,798.1,28,20,0)
^.3LA^1^1
"^DD",798.1,798.1,28,20,1,0)
PARAMETERS
"^DD",798.1,798.1,28,21,0)
^.001^3^3^3060106^^
"^DD",798.1,798.1,28,21,1,0)
This multiple maps local lab tests to the 
"^DD",798.1,798.1,28,21,2,0)
predefined lab test groups that are used in the 
"^DD",798.1,798.1,28,21,3,0)
reports.
"^DD",798.1,798.1,28,"DT")
3030402
"^DD",798.1,798.1,29,0)
LOCAL DRUG NAME^798.129P^^29;0
"^DD",798.1,798.1,29,20,0)
^.3LA^1^1
"^DD",798.1,798.1,29,20,1,0)
PARAMETERS
"^DD",798.1,798.1,29,21,0)
^^3^3^3060106^
"^DD",798.1,798.1,29,21,1,0)
This multiple maps local medication names to the
"^DD",798.1,798.1,29,21,2,0)
predefined medication groups that are used in the
"^DD",798.1,798.1,29,21,3,0)
reports.
"^DD",798.1,798.1,30,0)
REPORT STATS^798.12P^^30;0
"^DD",798.1,798.1,30,9)
@
"^DD",798.1,798.1,30,20,0)
^.3LA^1^1
"^DD",798.1,798.1,30,20,1,0)
STATE
"^DD",798.1,798.1,30,21,0)
^.001^4^4^3120228^^^
"^DD",798.1,798.1,30,21,1,0)
Records of this multiple store the statistic data 
"^DD",798.1,798.1,30,21,2,0)
related to running reports. Usually, the stats are
"^DD",798.1,798.1,30,21,3,0)
reset after successful data transmission to the
"^DD",798.1,798.1,30,21,4,0)
AAC.
"^DD",798.1,798.1,30,23,0)
^.001^7^7^3120228^^
"^DD",798.1,798.1,30,23,1,0)
Please do not edit the records of this multiple
"^DD",798.1,798.1,30,23,2,0)
directly. Use the entry points of the RORTSK12 routine
"^DD",798.1,798.1,30,23,3,0)
instead.
"^DD",798.1,798.1,30,23,4,0)
 
"^DD",798.1,798.1,30,23,5,0)
The input transform associated with the .01 field of 
"^DD",798.1,798.1,30,23,6,0)
this multiple guarantees that each report has only one
"^DD",798.1,798.1,30,23,7,0)
corresponding record in the multiple.
"^DD",798.1,798.1,31,0)
AUTO-CONFIRM^S^0:NO;1:YES;^6;1^Q
"^DD",798.1,798.1,31,1,0)
^.1
"^DD",798.1,798.1,31,1,1,0)
798.1^C
"^DD",798.1,798.1,31,1,1,1)
S ^ROR(798.1,"C",$E(X,1,30),DA)=""
"^DD",798.1,798.1,31,1,1,2)
K ^ROR(798.1,"C",$E(X,1,30),DA)
"^DD",798.1,798.1,31,1,1,"DT")
3120301
"^DD",798.1,798.1,31,3)
Enter 'Yes' if the status of patients added to this registry should be automatically confirmed.
"^DD",798.1,798.1,31,21,0)
^^4^4^3120503^
"^DD",798.1,798.1,31,21,1,0)
This field is used during the registry update to set the status of new 
"^DD",798.1,798.1,31,21,2,0)
patients.  If the registry is set to auto-confirm, the patient status is
"^DD",798.1,798.1,31,21,3,0)
set to 'Confirmed'.  If auto-confirm is no, the patient status is set to
"^DD",798.1,798.1,31,21,4,0)
'Pending'.
"^DD",798.1,798.1,31,"DT")
3120301
"^DD",798.1,798.11,0)
LOG EVENT SUB-FIELD^^.01^1
"^DD",798.1,798.11,0,"DT")
3010712
"^DD",798.1,798.11,0,"NM","LOG EVENT")
 
"^DD",798.1,798.11,0,"UP")
798.1
"^DD",798.1,798.11,.01,0)
LOG EVENT^MSX^1:Debug;2:Information;3:Data Quality;4:Warning;5:Database Error;6:Error;^0;1^Q
"^DD",798.1,798.11,.01,1,0)
^.1^^0
"^DD",798.1,798.11,.01,21,0)
^.001^10^10^3060203^^
"^DD",798.1,798.11,.01,21,1,0)
Select the type of the event if you want to enable
"^DD",798.1,798.11,.01,21,2,0)
recording of these events. If the list is empty,
"^DD",798.1,798.11,.01,21,3,0)
recording of all events is enabled. Otherwise,
"^DD",798.1,798.11,.01,21,4,0)
only events from the list and error messages will 
"^DD",798.1,798.11,.01,21,5,0)
be recorded.
"^DD",798.1,798.11,.01,21,6,0)
 
"^DD",798.1,798.11,.01,21,7,0)
Debug messages are exclusions from this rule (they
"^DD",798.1,798.11,.01,21,8,0)
are not logged if the ENABLE LOG field is set to
"^DD",798.1,798.11,.01,21,9,0)
"YES" and this multiple is empty). Their recording
"^DD",798.1,798.11,.01,21,10,0)
can only be enabled explicitly.
"^DD",798.1,798.11,.01,23,0)
^.001^9^9^3060203^^^^
"^DD",798.1,798.11,.01,23,1,0)
If several registries are processed at the same time,
"^DD",798.1,798.11,.01,23,2,0)
the recording parameters are combined.
"^DD",798.1,798.11,.01,23,3,0)
 
"^DD",798.1,798.11,.01,23,4,0)
If one of the registries requests recording of all 
"^DD",798.1,798.11,.01,23,5,0)
events, all events except the debug messages (type 1)
"^DD",798.1,798.11,.01,23,6,0)
will be recorded for all registries.
"^DD",798.1,798.11,.01,23,7,0)
 
"^DD",798.1,798.11,.01,23,8,0)
Otherwise, merged content of the LOG EVENT multiples
"^DD",798.1,798.11,.01,23,9,0)
will determine the events to be recorded.
"^DD",798.1,798.11,.01,"DT")
3050722
"^DD",798.1,798.112,0)
EXTRACTED RESULT SUB-FIELD^^.03^3
"^DD",798.1,798.112,0,"DT")
3030318
"^DD",798.1,798.112,0,"ID","WRITE")
D EN^DDIOL($P(^(0),U,2),"","?20")
"^DD",798.1,798.112,0,"IX","B",798.112,.01)
 
"^DD",798.1,798.112,0,"IX","C",798.112,.02)
 
"^DD",798.1,798.112,0,"NM","EXTRACTED RESULT")
 
"^DD",798.1,798.112,0,"UP")
798.1
"^DD",798.1,798.112,.01,0)
LOINC CODE^MFX^^0;1^Q:$$VAEDT^RORDD(798.1,$G(DA(1)))  K:X'?1(1.7N,1"*") X
"^DD",798.1,798.112,.01,1,0)
^.1
"^DD",798.1,798.112,.01,1,1,0)
798.112^B
"^DD",798.1,798.112,.01,1,1,1)
S ^ROR(798.1,DA(1),8,"B",$E(X,1,30),DA)=""
"^DD",798.1,798.112,.01,1,1,2)
K ^ROR(798.1,DA(1),8,"B",$E(X,1,30),DA)
"^DD",798.1,798.112,.01,1,1,3)
Do not delete!
"^DD",798.1,798.112,.01,1,1,"DT")
3010716
"^DD",798.1,798.112,.01,3)
Answer must be 1-7 characters in length.
"^DD",798.1,798.112,.01,8.5)
@
"^DD",798.1,798.112,.01,9)
@
"^DD",798.1,798.112,.01,21,0)
^^11^11^3011015^
"^DD",798.1,798.112,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.112,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.112,.01,21,3,0)
 
"^DD",798.1,798.112,.01,21,4,0)
Enter the unique numeric LOINC code (without the
"^DD",798.1,798.112,.01,21,5,0)
check digit) of the Lab result to be extracted. If
"^DD",798.1,798.112,.01,21,6,0)
you want to use only NLT code, enter zero as the
"^DD",798.1,798.112,.01,21,7,0)
value of this field.
"^DD",798.1,798.112,.01,21,8,0)
 
"^DD",798.1,798.112,.01,21,9,0)
If you want to extract all results, create a
"^DD",798.1,798.112,.01,21,10,0)
record in this multiple containing the "*" 
"^DD",798.1,798.112,.01,21,11,0)
character in this field.
"^DD",798.1,798.112,.01,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA(1)))
"^DD",798.1,798.112,.01,"DT")
3010716
"^DD",798.1,798.112,.02,0)
NLT CODE^FX^^0;2^Q:$$VAEDT^RORDD(798.1,$G(DA(1)))  K:'(X?5N1"."4.5N) X
"^DD",798.1,798.112,.02,1,0)
^.1
"^DD",798.1,798.112,.02,1,1,0)
798.112^C
"^DD",798.1,798.112,.02,1,1,1)
S ^ROR(798.1,DA(1),8,"C",$E(X,1,30),DA)=""
"^DD",798.1,798.112,.02,1,1,2)
K ^ROR(798.1,DA(1),8,"C",$E(X,1,30),DA)
"^DD",798.1,798.112,.02,1,1,3)
Do not delete!
"^DD",798.1,798.112,.02,1,1,"DT")
3010716
"^DD",798.1,798.112,.02,3)
Answer must be 10-11 characters in length.
"^DD",798.1,798.112,.02,8.5)
@
"^DD",798.1,798.112,.02,9)
@
"^DD",798.1,798.112,.02,21,0)
^^8^8^3011015^
"^DD",798.1,798.112,.02,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.112,.02,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.112,.02,21,3,0)
 
"^DD",798.1,798.112,.02,21,4,0)
Enter the unique NLT code of the Lab result to be
"^DD",798.1,798.112,.02,21,5,0)
extracted. Both LOINC and NLT codes (if available)
"^DD",798.1,798.112,.02,21,6,0)
are used for searching the Lab results. If you 
"^DD",798.1,798.112,.02,21,7,0)
want to use only the LOINC code, leave this field 
"^DD",798.1,798.112,.02,21,8,0)
empty.
"^DD",798.1,798.112,.02,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA(1)))
"^DD",798.1,798.112,.02,"DT")
3010716
"^DD",798.1,798.112,.03,0)
SUBSCRIPTS^FX^^0;3^Q:$$VAEDT^RORDD(798.1,$G(DA(1)))  K:$L(X)>30!($L(X)<2) X
"^DD",798.1,798.112,.03,3)
Answer must be 2-30 characters in length.
"^DD",798.1,798.112,.03,8.5)
@
"^DD",798.1,798.112,.03,9)
@
"^DD",798.1,798.112,.03,21,0)
^^14^14^3030318^
"^DD",798.1,798.112,.03,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.112,.03,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.112,.03,21,3,0)
 
"^DD",798.1,798.112,.03,21,4,0)
Enter a list of the subscripts separated by commas
"^DD",798.1,798.112,.03,21,5,0)
(CH, MI, etc.) from where the results should be
"^DD",798.1,798.112,.03,21,6,0)
loaded by the $$GCPR^LA7QRY function. Only these
"^DD",798.1,798.112,.03,21,7,0)
subscripts will be searched for new data.
"^DD",798.1,798.112,.03,21,8,0)
 
"^DD",798.1,798.112,.03,21,9,0)
NOTE: The value of the field affects the data
"^DD",798.1,798.112,.03,21,10,0)
extraction only if the LOINC CODE field is equal
"^DD",798.1,798.112,.03,21,11,0)
to "*".
"^DD",798.1,798.112,.03,21,12,0)
 
"^DD",798.1,798.112,.03,21,13,0)
If this field is empty (by default), the API 
"^DD",798.1,798.112,.03,21,14,0)
searches through all supported subscripts.
"^DD",798.1,798.112,.03,"DT")
3030318
"^DD",798.1,798.114,0)
NOTIFICATION SUB-FIELD^^.01^1
"^DD",798.1,798.114,0,"DT")
3010907
"^DD",798.1,798.114,0,"IX","B",798.114,.01)
 
"^DD",798.1,798.114,0,"NM","NOTIFICATION")
 
"^DD",798.1,798.114,0,"UP")
798.1
"^DD",798.1,798.114,.01,0)
NOTIFICATION^MP200'X^VA(200,^0;1^S:$D(X) DINUM=X
"^DD",798.1,798.114,.01,1,0)
^.1
"^DD",798.1,798.114,.01,1,1,0)
798.114^B
"^DD",798.1,798.114,.01,1,1,1)
S ^ROR(798.1,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",798.1,798.114,.01,1,1,2)
K ^ROR(798.1,DA(1),10,"B",$E(X,1,30),DA)
"^DD",798.1,798.114,.01,1,1,3)
Do not delete!
"^DD",798.1,798.114,.01,21,0)
^^4^4^3060203^
"^DD",798.1,798.114,.01,21,1,0)
Select a user who already receives alerts or add a
"^DD",798.1,798.114,.01,21,2,0)
new one from the NEW PERSON file. VistA users
"^DD",798.1,798.114,.01,21,3,0)
referenced by this field will be notified about
"^DD",798.1,798.114,.01,21,4,0)
problems with the registry processes.
"^DD",798.1,798.114,.01,"DT")
3050427
"^DD",798.1,798.118,0)
SECURITY KEY SUB-FIELD^^.01^1
"^DD",798.1,798.118,0,"DT")
3020801
"^DD",798.1,798.118,0,"NM","SECURITY KEY")
 
"^DD",798.1,798.118,0,"UP")
798.1
"^DD",798.1,798.118,.01,0)
SECURITY KEY^MFX^^0;1^Q:$$VAEDT^RORDD(798.1,$G(DA(1)))  K:$L(X)>27!($L(X)<3) X
"^DD",798.1,798.118,.01,1,0)
^.1^^-1
"^DD",798.1,798.118,.01,1,2,0)
798.1^ACL^MUMPS
"^DD",798.1,798.118,.01,1,2,1)
D ACLSET^RORDD
"^DD",798.1,798.118,.01,1,2,2)
D ACLKILL^RORDD
"^DD",798.1,798.118,.01,1,2,3)
Do not delete!
"^DD",798.1,798.118,.01,1,2,"%D",0)
^^25^25^3060203^
"^DD",798.1,798.118,.01,1,2,"%D",1,0)
This cross-reference is used by the screening 
"^DD",798.1,798.118,.01,1,2,"%D",2,0)
logic (the "SCR" node) of some Clinical Case 
"^DD",798.1,798.118,.01,1,2,"%D",3,0)
Registries files to check whether a user is
"^DD",798.1,798.118,.01,1,2,"%D",4,0)
allowed to access the records or not.
"^DD",798.1,798.118,.01,1,2,"%D",5,0)
 
"^DD",798.1,798.118,.01,1,2,"%D",6,0)
The cross-reference contains two kinds of items:
"^DD",798.1,798.118,.01,1,2,"%D",7,0)
 
"^DD",798.1,798.118,.01,1,2,"%D",8,0)
  ^ROR(798.1,"ACL",RORDUZ,RegIEN,KEY,IEN) = ""
"^DD",798.1,798.118,.01,1,2,"%D",9,0)
  ^ROR(798.1,"ACL",RORDUZ,RegName,KEY,IEN) = ""
"^DD",798.1,798.118,.01,1,2,"%D",10,0)
 
"^DD",798.1,798.118,.01,1,2,"%D",11,0)
where RORDUZ is the value of the DUZ variable for
"^DD",798.1,798.118,.01,1,2,"%D",12,0)
the user who has access to one or more registries
"^DD",798.1,798.118,.01,1,2,"%D",13,0)
(according to the allocated security keys). RegIEN
"^DD",798.1,798.118,.01,1,2,"%D",14,0)
and RegName are the registry IEN and name. KEY is
"^DD",798.1,798.118,.01,1,2,"%D",15,0)
the name of security key and IEN is the internal
"^DD",798.1,798.118,.01,1,2,"%D",16,0)
entry number of the corresponding record of the
"^DD",798.1,798.118,.01,1,2,"%D",17,0)
SECURITY KEY multiple.
"^DD",798.1,798.118,.01,1,2,"%D",18,0)
 
"^DD",798.1,798.118,.01,1,2,"%D",19,0)
The cross-reference should be rebuilt after
"^DD",798.1,798.118,.01,1,2,"%D",20,0)
changes in the allocation of the security keys
"^DD",798.1,798.118,.01,1,2,"%D",21,0)
associated with any registry. Usually, this is
"^DD",798.1,798.118,.01,1,2,"%D",22,0)
done by the nightly task (the [ROR TASK] option).
"^DD",798.1,798.118,.01,1,2,"%D",23,0)
However, if you want the changes to be in effect
"^DD",798.1,798.118,.01,1,2,"%D",24,0)
immediately, you should rebuild this
"^DD",798.1,798.118,.01,1,2,"%D",25,0)
cross-reference manually.
"^DD",798.1,798.118,.01,1,2,"DT")
3020805
"^DD",798.1,798.118,.01,3)
Enter a name of security key (3-27 characters in length).
"^DD",798.1,798.118,.01,8.5)
@
"^DD",798.1,798.118,.01,9)
@
"^DD",798.1,798.118,.01,20,0)
^.3LA^^0
"^DD",798.1,798.118,.01,21,0)
^.001^5^5^3020816^^^
"^DD",798.1,798.118,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.118,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.118,.01,21,3,0)
 
"^DD",798.1,798.118,.01,21,4,0)
The SECURITY KEY field contains the name of the 
"^DD",798.1,798.118,.01,21,5,0)
security key associated with the registry.
"^DD",798.1,798.118,.01,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA(1)))
"^DD",798.1,798.118,.01,"DT")
3050722
"^DD",798.1,798.12,0)
REPORT STATS SUB-FIELD^^.02^2
"^DD",798.1,798.12,0,"DT")
3050715
"^DD",798.1,798.12,0,"IX","B",798.12,.01)
 
"^DD",798.1,798.12,0,"NM","REPORT STATS")
 
"^DD",798.1,798.12,0,"UP")
798.1
"^DD",798.1,798.12,.01,0)
REPORT STATS^MP799.34'X^ROR(799.34,^0;1^S:$D(X) DINUM=X
"^DD",798.1,798.12,.01,1,0)
^.1
"^DD",798.1,798.12,.01,1,1,0)
798.12^B
"^DD",798.1,798.12,.01,1,1,1)
S ^ROR(798.1,DA(1),30,"B",$E(X,1,30),DA)=""
"^DD",798.1,798.12,.01,1,1,2)
K ^ROR(798.1,DA(1),30,"B",$E(X,1,30),DA)
"^DD",798.1,798.12,.01,1,1,3)
Do not delete!
"^DD",798.1,798.12,.01,1,1,"DT")
3050722
"^DD",798.1,798.12,.01,3)
 
"^DD",798.1,798.12,.01,8.5)
@
"^DD",798.1,798.12,.01,9)
@
"^DD",798.1,798.12,.01,20,0)
^.3LA^1^1
"^DD",798.1,798.12,.01,20,1,0)
STATE
"^DD",798.1,798.12,.01,21,0)
^.001^2^2^3120228^^
"^DD",798.1,798.12,.01,21,1,0)
A pointer stored in this field links the stats to 
"^DD",798.1,798.12,.01,21,2,0)
the report definition.
"^DD",798.1,798.12,.01,"DT")
3050722
"^DD",798.1,798.12,.02,0)
NUMBER OF RUNS^NJ9,0^^0;2^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",798.1,798.12,.02,3)
Type a Number between 0 and 999999999, 0 Decimal Digits.
"^DD",798.1,798.12,.02,8.5)
@
"^DD",798.1,798.12,.02,9)
@
"^DD",798.1,798.12,.02,20,0)
^.3LA^1^1
"^DD",798.1,798.12,.02,20,1,0)
STATE
"^DD",798.1,798.12,.02,21,0)
^.001^2^2^3060203^^
"^DD",798.1,798.12,.02,21,1,0)
This field serves as a counter of report runs 
"^DD",798.1,798.12,.02,21,2,0)
since the last successful data transmission.
"^DD",798.1,798.12,.02,23,0)
^.001^2^2^3060203^^
"^DD",798.1,798.12,.02,23,1,0)
Please do not edit the field directly. Use the entry
"^DD",798.1,798.12,.02,23,2,0)
points of the RORTSK12 routine instead.
"^DD",798.1,798.12,.02,"DT")
3050715
"^DD",798.1,798.122,0)
LAST BATCH CONTROL ID SUB-FIELD^^.03^3
"^DD",798.1,798.122,0,"DT")
3051129
"^DD",798.1,798.122,0,"NM","LAST BATCH CONTROL ID")
 
"^DD",798.1,798.122,0,"UP")
798.1
"^DD",798.1,798.122,.01,0)
LAST BATCH CONTROL ID^MFX^^0;1^K:$L(X)>20!($L(X)<1) X
"^DD",798.1,798.122,.01,1,0)
^.1^^0
"^DD",798.1,798.122,.01,3)
Answer must be 1-20 characters in length.
"^DD",798.1,798.122,.01,8.5)
@
"^DD",798.1,798.122,.01,9)
@
"^DD",798.1,798.122,.01,20,0)
^.3LA^1^1
"^DD",798.1,798.122,.01,20,1,0)
HL7
"^DD",798.1,798.122,.01,21,0)
^.001^3^3^3050503^^^
"^DD",798.1,798.122,.01,21,1,0)
The LAST BATCH CONTROL ID field contains the
"^DD",798.1,798.122,.01,21,2,0)
message control ID (BHS-11) of the latest batch
"^DD",798.1,798.122,.01,21,3,0)
HL7 message submitted to the VistA HL7 engine.
"^DD",798.1,798.122,.01,23,0)
^^3^3^3060203^
"^DD",798.1,798.122,.01,23,1,0)
This field is populated with the value returned by the 
"^DD",798.1,798.122,.01,23,2,0)
GENERATE^HLMA procedure. This value is usually
"^DD",798.1,798.122,.01,23,3,0)
different from that of the INTERNAL BATCH ID field.
"^DD",798.1,798.122,.01,"DT")
3051129
"^DD",798.1,798.122,.02,0)
INTERNAL BATCH ID^RF^^0;2^K:$L(X)>20!($L(X)<1) X
"^DD",798.1,798.122,.02,3)
Answer must be 1-20 characters in length.
"^DD",798.1,798.122,.02,8.5)
@
"^DD",798.1,798.122,.02,9)
@
"^DD",798.1,798.122,.02,20,0)
^.3LA^1^1
"^DD",798.1,798.122,.02,20,1,0)
HL7
"^DD",798.1,798.122,.02,21,0)
^^8^8^3060203^
"^DD",798.1,798.122,.02,21,1,0)
This field contains the internal batch identifier
"^DD",798.1,798.122,.02,21,2,0)
that was used during the generation of the batch 
"^DD",798.1,798.122,.02,21,3,0)
message.
"^DD",798.1,798.122,.02,21,4,0)
 
"^DD",798.1,798.122,.02,21,5,0)
The Control ID of each individual message included
"^DD",798.1,798.122,.02,21,6,0)
in the batch is constructed from the value of this
"^DD",798.1,798.122,.02,21,7,0)
field and a sequential number separated by the '-'
"^DD",798.1,798.122,.02,21,8,0)
character.
"^DD",798.1,798.122,.02,23,0)
^.001^7^7^3060203^^
"^DD",798.1,798.122,.02,23,1,0)
The INTERNAL BATCH ID field is automatically populated 
"^DD",798.1,798.122,.02,23,2,0)
with the identifier of the batch placeholder created by
"^DD",798.1,798.122,.02,23,3,0)
the CREATE^HLTF procedure. See the $$CREATE^RORHL7 and
"^DD",798.1,798.122,.02,23,4,0)
$$TMSTMP^ROREXTUT functions for details.
"^DD",798.1,798.122,.02,23,5,0)
 
"^DD",798.1,798.122,.02,23,6,0)
The actual batch control ID (BHS-11) is usually
"^DD",798.1,798.122,.02,23,7,0)
different from the value stored in this field.
"^DD",798.1,798.122,.02,"DT")
3050503
"^DD",798.1,798.122,.03,0)
DATE^D^^0;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",798.1,798.122,.03,8.5)
@
"^DD",798.1,798.122,.03,9)
@
"^DD",798.1,798.122,.03,21,0)
^^2^2^3060106^
"^DD",798.1,798.122,.03,21,1,0)
This field stores the date/time of the batch HL7 
"^DD",798.1,798.122,.03,21,2,0)
message.
"^DD",798.1,798.122,.03,"DT")
3051129
"^DD",798.1,798.128,0)
LOCAL TEST NAME SUB-FIELD^^.02^2
"^DD",798.1,798.128,0,"DT")
3030402
"^DD",798.1,798.128,0,"ID","WRITE")
S %I=Y,Y=+$P($G(^(0)),U,2),Y=$S(Y>0:$P($G(^ROR(799.1,Y,0)),U),1:"") D EN^DDIOL("   "_Y,,"?40") S Y=%I K %I
"^DD",798.1,798.128,0,"IX","B",798.128,.01)
 
"^DD",798.1,798.128,0,"NM","LOCAL TEST NAME")
 
"^DD",798.1,798.128,0,"UP")
798.1
"^DD",798.1,798.128,.01,0)
LOCAL TEST NAME^MP60'^LAB(60,^0;1^Q
"^DD",798.1,798.128,.01,1,0)
^.1
"^DD",798.1,798.128,.01,1,1,0)
798.128^B
"^DD",798.1,798.128,.01,1,1,1)
S ^ROR(798.1,DA(1),28,"B",$E(X,1,30),DA)=""
"^DD",798.1,798.128,.01,1,1,2)
K ^ROR(798.1,DA(1),28,"B",$E(X,1,30),DA)
"^DD",798.1,798.128,.01,20,0)
^.3LA^^0
"^DD",798.1,798.128,.01,"DT")
3030706
"^DD",798.1,798.128,.02,0)
LAB GROUP^R*P799.1'X^ROR(799.1,^0;2^S DIC("S")="S D=$G(^(0)) I $P(D,U,2)=3,$P(D,U,3)="_DA(1) D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",798.1,798.128,.02,1,0)
^.1^^0
"^DD",798.1,798.128,.02,12)
Only Lab Groups can be selected.
"^DD",798.1,798.128,.02,12.1)
S DIC("S")="I $P(^(0),U,2)=3"
"^DD",798.1,798.128,.02,"DT")
3030706
"^DD",798.1,798.129,0)
LOCAL DRUG NAME SUB-FIELD^^.02^2
"^DD",798.1,798.129,0,"DT")
3030625
"^DD",798.1,798.129,0,"IX","B",798.129,.01)
 
"^DD",798.1,798.129,0,"NM","LOCAL DRUG NAME")
 
"^DD",798.1,798.129,0,"UP")
798.1
"^DD",798.1,798.129,.01,0)
LOCAL DRUG NAME^MP50'^PSDRUG(^0;1^Q
"^DD",798.1,798.129,.01,1,0)
^.1
"^DD",798.1,798.129,.01,1,1,0)
798.129^B
"^DD",798.1,798.129,.01,1,1,1)
S ^ROR(798.1,DA(1),29,"B",$E(X,1,30),DA)=""
"^DD",798.1,798.129,.01,1,1,2)
K ^ROR(798.1,DA(1),29,"B",$E(X,1,30),DA)
"^DD",798.1,798.129,.01,20,0)
^.3LA^^0
"^DD",798.1,798.129,.01,"DT")
3030706
"^DD",798.1,798.129,.02,0)
DRUG GROUP^R*P799.1'X^ROR(799.1,^0;2^S DIC("S")="S D=$G(^(0)) I $P(D,U,2)=4,$P(D,U,3)="_DA(1) D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",798.1,798.129,.02,12)
Only Drug Groups can be selected.
"^DD",798.1,798.129,.02,12.1)
S DIC("S")="I $P(^(0),U,2)=4"
"^DD",798.1,798.129,.02,20,0)
^.3LA^^0
"^DD",798.1,798.129,.02,"DT")
3030706
"^DD",798.1,798.13,0)
SELECTION RULE SUB-FIELD^^.01^1
"^DD",798.1,798.13,0,"DT")
3000410
"^DD",798.1,798.13,0,"NM","SELECTION RULE")
 
"^DD",798.1,798.13,0,"UP")
798.1
"^DD",798.1,798.13,.01,0)
SELECTION RULE^MFX^^0;1^Q:$$VAEDT^RORDD(798.1,$G(DA(1)))  K:$L(X)>30!($L(X)<3)!'(X?3.UNP) X I $D(X) K:'$D(^ROR(798.2,"B",$E(X,1,30))) X
"^DD",798.1,798.13,.01,1,0)
^.1^^-1
"^DD",798.1,798.13,.01,1,2,0)
798.1^ARULES
"^DD",798.1,798.13,.01,1,2,1)
S ^ROR(798.1,"ARULES",$E(X,1,30),DA(1),DA)=""
"^DD",798.1,798.13,.01,1,2,2)
K ^ROR(798.1,"ARULES",$E(X,1,30),DA(1),DA)
"^DD",798.1,798.13,.01,1,2,3)
Do not delete!
"^DD",798.1,798.13,.01,1,2,"%D",0)
^^2^2^3011015^
"^DD",798.1,798.13,.01,1,2,"%D",1,0)
This cross-reference can be used to find all 
"^DD",798.1,798.13,.01,1,2,"%D",2,0)
registries that use the selection rule.
"^DD",798.1,798.13,.01,1,2,"DT")
3000406
"^DD",798.1,798.13,.01,3)
Enter a name of the selection rule (3-30 characters).
"^DD",798.1,798.13,.01,4)
I $G(X)="??" N D,DIC,DZ S DIC="^ROR(798.2,",DIC(0)="",D="B",DZ="??" D DQ^DICQ,EN^DDIOL("",,"!")
"^DD",798.1,798.13,.01,8.5)
@
"^DD",798.1,798.13,.01,9)
@
"^DD",798.1,798.13,.01,21,0)
^.001^8^8^3051031^^^^
"^DD",798.1,798.13,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.13,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.13,.01,21,3,0)
 
"^DD",798.1,798.13,.01,21,4,0)
Enter a name of the selection rule that will be 
"^DD",798.1,798.13,.01,21,5,0)
used to select patients for addition to the
"^DD",798.1,798.13,.01,21,6,0)
registry. The name should be entered exactly as it
"^DD",798.1,798.13,.01,21,7,0)
appears in the list of selection rules (file 
"^DD",798.1,798.13,.01,21,8,0)
#798.2).
"^DD",798.1,798.13,.01,23,0)
^.001^3^3^3051031^^^^
"^DD",798.1,798.13,.01,23,1,0)
Names of the selection rules are used here instead of 
"^DD",798.1,798.13,.01,23,2,0)
pointers because the KIDS pointer resolving feature 
"^DD",798.1,798.13,.01,23,3,0)
does not work for .01 fields.
"^DD",798.1,798.13,.01,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA(1)))
"^DD",798.1,798.13,.01,"DT")
3050722
"^DD",798.1,798.15,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",798.1,798.15,0,"NM","DESCRIPTION")
 
"^DD",798.1,798.15,0,"UP")
798.1
"^DD",798.1,798.15,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",798.1,798.15,.01,"DT")
3000313
"^DD",798.2,798.2,0)
FIELD^^6^7
"^DD",798.2,798.2,0,"DDA")
N
"^DD",798.2,798.2,0,"DT")
3020326
"^DD",798.2,798.2,0,"ID","WRITE")
D EN^DDIOL("  "_$P($G(^(0)),U,3),,"?30")
"^DD",798.2,798.2,0,"NM","ROR SELECTION RULE")
 
"^DD",798.2,798.2,0,"PT",798.01,.01)
 
"^DD",798.2,798.2,0,"VRPK")
ROR
"^DD",798.2,798.2,.01,0)
RULE NAME^FX^^0;1^Q:$$VAEDT^RORDD(798.2,$G(DA))  K:$L(X)>30!($L(X)<3)!'(X?1.UNP) X
"^DD",798.2,798.2,.01,1,0)
^.1^^0
"^DD",798.2,798.2,.01,3)
Enter a unique namespaced rule name (3-30 characters).
"^DD",798.2,798.2,.01,8.5)
@
"^DD",798.2,798.2,.01,9)
@
"^DD",798.2,798.2,.01,21,0)
^.001^6^6^3011010^^
"^DD",798.2,798.2,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF
"^DD",798.2,798.2,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.2,798.2,.01,21,3,0)
 
"^DD",798.2,798.2,.01,21,4,0)
Selection rule name must be unique and name 
"^DD",798.2,798.2,.01,21,5,0)
spaced. Names of the rules that are used for
"^DD",798.2,798.2,.01,21,6,0)
National Registries must start with "VA".
"^DD",798.2,798.2,.01,"DEL",1,0)
I $$VADEL^RORDD(798.2,$G(DA))
"^DD",798.2,798.2,.01,"DT")
3020314
"^DD",798.2,798.2,.09,0)
NATIONAL^SX^0:NO;1:YES;^0;4^Q:$$VAEDT^RORDD(798.2,,-1)
"^DD",798.2,798.2,.09,1,0)
^.1^^0
"^DD",798.2,798.2,.09,8.5)
@
"^DD",798.2,798.2,.09,9)
@
"^DD",798.2,798.2,.09,21,0)
^^6^6^3060203^
"^DD",798.2,798.2,.09,21,1,0)
ONLY AUTHORIZED NATIONAL REGISTRY DEVELOPERS CAN
"^DD",798.2,798.2,.09,21,2,0)
EDIT THIS FIELD!
"^DD",798.2,798.2,.09,21,3,0)
 
"^DD",798.2,798.2,.09,21,4,0)
Selection rules of the national registries must
"^DD",798.2,798.2,.09,21,5,0)
have this field set to "YES". This prevents local
"^DD",798.2,798.2,.09,21,6,0)
editing of other fields of rule definitions.
"^DD",798.2,798.2,.09,"DEL",1,0)
I $$VADEL^RORDD(798.2,,-1)
"^DD",798.2,798.2,.09,"DT")
3011121
"^DD",798.2,798.2,1,0)
EXPRESSION^RFX^^1;E1,245^Q:$$VAEDT^RORDD(798.2,$G(DA))  K:$L(X)>250!($L(X)<1) X I $D(X) Q:$$EXPR^RORDD($P($G(^ROR(798.2,DA,0)),U,2))
"^DD",798.2,798.2,1,3)
Enter M expression that implements the selection rule (1-250 characters).
"^DD",798.2,798.2,1,8.5)
@
"^DD",798.2,798.2,1,9)
@
"^DD",798.2,798.2,1,21,0)
^^5^5^3011010^
"^DD",798.2,798.2,1,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF
"^DD",798.2,798.2,1,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.2,798.2,1,21,3,0)
 
"^DD",798.2,798.2,1,21,4,0)
Enter a MUMPS expression (it may contain special
"^DD",798.2,798.2,1,21,5,0)
macros) that implements the selection rule.
"^DD",798.2,798.2,1,23,0)
^^62^62^3060203^
"^DD",798.2,798.2,1,23,1,0)
MUMPS expression that implements the selection rule can
"^DD",798.2,798.2,1,23,2,0)
contain special macros:
"^DD",798.2,798.2,1,23,3,0)
 
"^DD",798.2,798.2,1,23,4,0)
 {E: Field Name} - External value of the field
"^DD",798.2,798.2,1,23,5,0)
 {E: Field Number}
"^DD",798.2,798.2,1,23,6,0)
 
"^DD",798.2,798.2,1,23,7,0)
 {I: Field Name} - Internal value of the field
"^DD",798.2,798.2,1,23,8,0)
 {I: Field Number}
"^DD",798.2,798.2,1,23,9,0)
 
"^DD",798.2,798.2,1,23,10,0)
 {Rule Name} - Result value of the lower level
"^DD",798.2,798.2,1,23,11,0)
selection rule
"^DD",798.2,798.2,1,23,12,0)
 
"^DD",798.2,798.2,1,23,13,0)
 {AVG: Rule Name} - Average value of the rule
"^DD",798.2,798.2,1,23,14,0)
 
"^DD",798.2,798.2,1,23,15,0)
 {CNT: Rule Name} - Number of calculations of the rule
"^DD",798.2,798.2,1,23,16,0)
 
"^DD",798.2,798.2,1,23,17,0)
 {MAX: Rule Name} - Maximum value of the rule
"^DD",798.2,798.2,1,23,18,0)
 
"^DD",798.2,798.2,1,23,19,0)
 {MIN: Rule Name} - Minimum value of the rule
"^DD",798.2,798.2,1,23,20,0)
 
"^DD",798.2,798.2,1,23,21,0)
 {SUM: Rule Name} - Total of the selection rule values
"^DD",798.2,798.2,1,23,22,0)
 
"^DD",798.2,798.2,1,23,23,0)
 {LS: Lab Search Name} - This macro can be used only in
"^DD",798.2,798.2,1,23,24,0)
the selection rules associated with the LAB DATA file
"^DD",798.2,798.2,1,23,25,0)
(#63). It is evaluated as 1 if some of the patient
"^DD",798.2,798.2,1,23,26,0)
lab results pass the Lab search criteria (from the file
"^DD",798.2,798.2,1,23,27,0)
#798.9). Otherwise, it is evaluated as zero.
"^DD",798.2,798.2,1,23,28,0)
 
"^DD",798.2,798.2,1,23,29,0)
Return values of the top-level rules:
"^DD",798.2,798.2,1,23,30,0)
 
"^DD",798.2,798.2,1,23,31,0)
 0        - Skip the patient
"^DD",798.2,798.2,1,23,32,0)
 Non-zero - Add the patient to the registry
"^DD",798.2,798.2,1,23,33,0)
 
"^DD",798.2,798.2,1,23,34,0)
Return values of the lower level rules:
"^DD",798.2,798.2,1,23,35,0)
 
"^DD",798.2,798.2,1,23,36,0)
Return values can be used in the expressions of the
"^DD",798.2,798.2,1,23,37,0)
other rules. Some additional values are calculated
"^DD",798.2,798.2,1,23,38,0)
automatically (minimum, maximum, average, etc.) for
"^DD",798.2,798.2,1,23,39,0)
each rule.
"^DD",798.2,798.2,1,23,40,0)
 
"^DD",798.2,798.2,1,23,41,0)
Avoid circular references in the expressions. If a 
"^DD",798.2,798.2,1,23,42,0)
rule directly or indirectly depends on itself, it
"^DD",798.2,798.2,1,23,43,0)
cannot be evaluated. An example of the circular
"^DD",798.2,798.2,1,23,44,0)
reference:
"^DD",798.2,798.2,1,23,45,0)
 
"^DD",798.2,798.2,1,23,46,0)
 Rule A: {MAX:B}<10
"^DD",798.2,798.2,1,23,47,0)
 Rule B: {I:23}+{C}
"^DD",798.2,798.2,1,23,48,0)
 Rule C: {CNT:A}
"^DD",798.2,798.2,1,23,49,0)
 
"^DD",798.2,798.2,1,23,50,0)
The rule A cannot be evaluated because it depends on 
"^DD",798.2,798.2,1,23,51,0)
the rule B, which depends on rule C, and C depends on
"^DD",798.2,798.2,1,23,52,0)
A.
"^DD",798.2,798.2,1,23,53,0)
 
"^DD",798.2,798.2,1,23,54,0)
Complex selection rules could be implemented by 
"^DD",798.2,798.2,1,23,55,0)
external MUMPS functions. In that case the expression
"^DD",798.2,798.2,1,23,56,0)
should contains a full reference to the function
"^DD",798.2,798.2,1,23,57,0)
($$TAG^ROUTINE). Values of the necessary data elements
"^DD",798.2,798.2,1,23,58,0)
can be loaded automatically (see description of the
"^DD",798.2,798.2,1,23,59,0)
DATA ELEMENT multiple).
"^DD",798.2,798.2,1,23,60,0)
 
"^DD",798.2,798.2,1,23,61,0)
See the Programmer's reference manual for more details 
"^DD",798.2,798.2,1,23,62,0)
regarding the selection rule expressions.
"^DD",798.2,798.2,1,"DEL",1,0)
I $$VADEL^RORDD(798.2,$G(DA))
"^DD",798.2,798.2,1,"DT")
3011109
"^DD",798.2,798.2,2,0)
FILE^RNJ22,9X^^0;2^Q:$$VAEDT^RORDD(798.2,$G(DA))  K:+X'=X!(X>999999999999)!(X<1)!(X?.E1"."10N.N) X I $D(X) K:'$$VFILE^DILFD(X) X
"^DD",798.2,798.2,2,3)
Enter (sub)file number between 1 and 999999999999, 9 Decimal Digits.
"^DD",798.2,798.2,2,8.5)
@
"^DD",798.2,798.2,2,9)
@
"^DD",798.2,798.2,2,21,0)
^.001^6^6^3020403^^
"^DD",798.2,798.2,2,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF
"^DD",798.2,798.2,2,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.2,798.2,2,21,3,0)
 
"^DD",798.2,798.2,2,21,4,0)
Enter a file/sub-file number that the selection 
"^DD",798.2,798.2,2,21,5,0)
rule is associated with. Each selection rule can
"^DD",798.2,798.2,2,21,6,0)
be associated with only one file.
"^DD",798.2,798.2,2,"DEL",1,0)
I $$VADEL^RORDD(798.2,$G(DA))
"^DD",798.2,798.2,2,"DT")
3011109
"^DD",798.2,798.2,4,0)
SHORT DESCRIPTION^FX^^0;3^Q:$$VAEDT^RORDD(798.2,$G(DA))  K:$L(X)>30!($L(X)<3) X
"^DD",798.2,798.2,4,3)
Enter a short description of the selection rule (3-30 characters).
"^DD",798.2,798.2,4,8.5)
@
"^DD",798.2,798.2,4,9)
@
"^DD",798.2,798.2,4,21,0)
^^5^5^3020403^
"^DD",798.2,798.2,4,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF
"^DD",798.2,798.2,4,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.2,798.2,4,21,3,0)
 
"^DD",798.2,798.2,4,21,4,0)
The short description of the selection rule is 
"^DD",798.2,798.2,4,21,5,0)
used in the reports and GUI dialogs.
"^DD",798.2,798.2,4,"DEL",1,0)
I $$VADEL^RORDD(798.2,$G(DA))
"^DD",798.2,798.2,4,"DT")
3011109
"^DD",798.2,798.2,5,0)
DESCRIPTION^798.25^^3;0
"^DD",798.2,798.2,5,21,0)
^^3^3^3020403^
"^DD",798.2,798.2,5,21,1,0)
You can enter any additional reference information
"^DD",798.2,798.2,5,21,2,0)
related to the selection rule. The content of this
"^DD",798.2,798.2,5,21,3,0)
field is not used by the application.
"^DD",798.2,798.2,6,0)
DATA ELEMENT^798.26^^4;0
"^DD",798.2,798.2,6,9)
@
"^DD",798.2,798.2,6,21,0)
^.001^12^12^3060203^^
"^DD",798.2,798.2,6,21,1,0)
The DATA ELEMENT multiple contains a list of 
"^DD",798.2,798.2,6,21,2,0)
additional data elements to load. 
"^DD",798.2,798.2,6,21,3,0)
 
"^DD",798.2,798.2,6,21,4,0)
Values of all the data elements referenced in the
"^DD",798.2,798.2,6,21,5,0)
selection rule expression are loaded
"^DD",798.2,798.2,6,21,6,0)
automatically.
"^DD",798.2,798.2,6,21,7,0)
 
"^DD",798.2,798.2,6,21,8,0)
However, if the rule is implemented by an external
"^DD",798.2,798.2,6,21,9,0)
function, you can enter the codes of all necessary
"^DD",798.2,798.2,6,21,10,0)
data elements into this multiple. Their values
"^DD",798.2,798.2,6,21,11,0)
will be loaded automatically and will be
"^DD",798.2,798.2,6,21,12,0)
accessible in the function.
"^DD",798.2,798.2,6,"DT")
3020326
"^DD",798.2,798.25,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",798.2,798.25,0,"NM","DESCRIPTION")
 
"^DD",798.2,798.25,0,"UP")
798.2
"^DD",798.2,798.25,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",798.2,798.25,.01,"DT")
3000313
"^DD",798.2,798.26,0)
DATA ELEMENT SUB-FIELD^^1^2
"^DD",798.2,798.26,0,"DT")
3020326
"^DD",798.2,798.26,0,"NM","DATA ELEMENT")
 
"^DD",798.2,798.26,0,"UP")
798.2
"^DD",798.2,798.26,.01,0)
ELEMENT CODE^MNJ9,0X^^0;1^Q:$$VAEDT^RORDD(798.2,$G(DA(1)))  K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",798.2,798.26,.01,1,0)
^.1^^0
"^DD",798.2,798.26,.01,3)
Type a Number between 1 and 999999999, 0 Decimal Digits.
"^DD",798.2,798.26,.01,8.5)
@
"^DD",798.2,798.26,.01,9)
@
"^DD",798.2,798.26,.01,21,0)
^^8^8^3020328^
"^DD",798.2,798.26,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF
"^DD",798.2,798.26,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.2,798.26,.01,21,3,0)
 
"^DD",798.2,798.26,.01,21,4,0)
Enter the code of the data element that should be 
"^DD",798.2,798.26,.01,21,5,0)
loaded before evaluation of the expression. Values
"^DD",798.2,798.26,.01,21,6,0)
of all data elements referenced in the selection
"^DD",798.2,798.26,.01,21,7,0)
rule expression are loaded automatically (you do
"^DD",798.2,798.26,.01,21,8,0)
not need to enter them here).
"^DD",798.2,798.26,.01,"DEL",1,0)
I $$VADEL^RORDD(798.2,$G(DA(1)))
"^DD",798.2,798.26,.01,"DT")
3020326
"^DD",798.2,798.26,1,0)
VALUE TYPE^RSX^E:External;I:Internal;EI:Both;^0;2^Q:$$VAEDT^RORDD(798.2,$G(DA(1)))
"^DD",798.2,798.26,1,8.5)
@
"^DD",798.2,798.26,1,9)
@
"^DD",798.2,798.26,1,21,0)
^^3^3^3020328^
"^DD",798.2,798.26,1,21,1,0)
This field holds required value type(s) of the
"^DD",798.2,798.26,1,21,2,0)
data element. The type(s) must be supported by the
"^DD",798.2,798.26,1,21,3,0)
search engine.
"^DD",798.2,798.26,1,"DT")
3020311
"^DD",798.5,798.5,0)
FIELD^^1^2
"^DD",798.5,798.5,0,"DDA")
N
"^DD",798.5,798.5,0,"DT")
3120323
"^DD",798.5,798.5,0,"IX","B",798.5,.01)
 
"^DD",798.5,798.5,0,"NM","ROR ICD SEARCH")
 
"^DD",798.5,798.5,.01,0)
REGISTRY^RP798.1'^ROR(798.1,^0;1^Q
"^DD",798.5,798.5,.01,1,0)
^.1
"^DD",798.5,798.5,.01,1,1,0)
798.5^B
"^DD",798.5,798.5,.01,1,1,1)
S ^ROR(798.5,"B",$E(X,1,30),DA)=""
"^DD",798.5,798.5,.01,1,1,2)
K ^ROR(798.5,"B",$E(X,1,30),DA)
"^DD",798.5,798.5,.01,3)
Enter a registry from the ROR REGISTRY PARAMETERS file.
"^DD",798.5,798.5,.01,21,0)
^^5^5^3120323^
"^DD",798.5,798.5,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A NATIONAL REGISTRY 
"^DD",798.5,798.5,.01,21,2,0)
DEFINITION.
"^DD",798.5,798.5,.01,21,3,0)
 
"^DD",798.5,798.5,.01,21,4,0)
The ICD codes defined for this registry will be used to select qualified 
"^DD",798.5,798.5,.01,21,5,0)
patients.
"^DD",798.5,798.5,.01,"DEL",1,0)
I $$VADEL^RORDD(798.5,$G(DA),.01)
"^DD",798.5,798.5,.01,"DT")
3120323
"^DD",798.5,798.5,1,0)
ICD CODE^798.51P^^1;0
"^DD",798.5,798.5,1,21,0)
^.001^4^4^3120416^^^^
"^DD",798.5,798.5,1,21,1,0)
This multiple contains a list of ICD codes in the ICD DIAGNOSIS
"^DD",798.5,798.5,1,21,2,0)
file (#80).  Selection rules for a registry use these codes to find
"^DD",798.5,798.5,1,21,3,0)
new registry patients during the registry update process.
"^DD",798.5,798.5,1,21,4,0)
  
"^DD",798.5,798.51,0)
ICD CODE SUB-FIELD^^.01^1
"^DD",798.5,798.51,0,"DT")
3120223
"^DD",798.5,798.51,0,"IX","B",798.51,.01)
 
"^DD",798.5,798.51,0,"NM","ICD CODE")
 
"^DD",798.5,798.51,0,"UP")
798.5
"^DD",798.5,798.51,.01,0)
ICD CODE^MP80'^ICD9(^0;1^Q
"^DD",798.5,798.51,.01,1,0)
^.1
"^DD",798.5,798.51,.01,1,1,0)
798.51^B
"^DD",798.5,798.51,.01,1,1,1)
S ^ROR(798.5,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",798.5,798.51,.01,1,1,2)
K ^ROR(798.5,DA(1),1,"B",$E(X,1,30),DA)
"^DD",798.5,798.51,.01,3)
Enter an ICD code.
"^DD",798.5,798.51,.01,21,0)
^.001^1^1^3120416^^^^
"^DD",798.5,798.51,.01,21,1,0)
The ICD diagnosis code is used to qualify a patient for the registry.
"^DD",798.5,798.51,.01,"DT")
3120328
"^DD",799.34,799.34,0)
FIELD^^12^10
"^DD",799.34,799.34,0,"DDA")
N
"^DD",799.34,799.34,0,"DT")
3051121
"^DD",799.34,799.34,0,"IX","B",799.34,.01)
 
"^DD",799.34,799.34,0,"NM","ROR REPORT PARAMETERS")
 
"^DD",799.34,799.34,0,"PT",798.12,.01)
 
"^DD",799.34,799.34,0,"PT",798.8,.04)
 
"^DD",799.34,799.34,0,"VRPK")
ROR
"^DD",799.34,799.34,.01,0)
NAME^RFX^^0;1^Q:$$VAEDT^RORDD(799.34,$G(DA))  K:$L(X)>60!($L(X)<3)!'(X'?1P.E) X
"^DD",799.34,799.34,.01,1,0)
^.1
"^DD",799.34,799.34,.01,1,1,0)
799.34^B
"^DD",799.34,799.34,.01,1,1,1)
S ^ROR(799.34,"B",$E(X,1,30),DA)=""
"^DD",799.34,799.34,.01,1,1,2)
K ^ROR(799.34,"B",$E(X,1,30),DA)
"^DD",799.34,799.34,.01,1,1,3)
Do not delete!
"^DD",799.34,799.34,.01,3)
Enter the report name (3-60 characters).
"^DD",799.34,799.34,.01,8.5)
@
"^DD",799.34,799.34,.01,9)
@
"^DD",799.34,799.34,.01,21,0)
^^5^5^3030505^
"^DD",799.34,799.34,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",799.34,799.34,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.34,799.34,.01,21,3,0)
 
"^DD",799.34,799.34,.01,21,4,0)
The name of the report stored in the NAME field is
"^DD",799.34,799.34,.01,21,5,0)
displayed in the Reports sub-menu of the GUI.
"^DD",799.34,799.34,.01,"DEL",1,0)
I $$VADEL^RORDD(799.34,$G(DA))
"^DD",799.34,799.34,.01,"DT")
3021126
"^DD",799.34,799.34,.02,0)
BACKGROUND PROCESSING?^SX^0:NO;1:YES;^0;2^Q:$$VAEDT^RORDD(799.34,$G(DA))
"^DD",799.34,799.34,.02,8.5)
@
"^DD",799.34,799.34,.02,9)
@
"^DD",799.34,799.34,.02,21,0)
^^6^6^3030506^
"^DD",799.34,799.34,.02,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",799.34,799.34,.02,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.34,799.34,.02,21,3,0)
 
"^DD",799.34,799.34,.02,21,4,0)
If the BACKGROUND PROCESSING? field is set to
"^DD",799.34,799.34,.02,21,5,0)
'YES' then the report will be scheduled to run as
"^DD",799.34,799.34,.02,21,6,0)
a background task.
"^DD",799.34,799.34,.02,23,0)
^^1^1^3030506^
"^DD",799.34,799.34,.02,23,1,0)
Only background processing is currently implemented.
"^DD",799.34,799.34,.02,"DEL",1,0)
I $$VADEL^RORDD(799.34,$G(DA))
"^DD",799.34,799.34,.02,"DT")
3021127
"^DD",799.34,799.34,.03,0)
SHARED TEMPLATES^SX^0:NO;1:YES;^0;3^Q:$$VAEDT^RORDD(799.34,$G(DA))
"^DD",799.34,799.34,.03,8.5)
@
"^DD",799.34,799.34,.03,9)
@
"^DD",799.34,799.34,.03,21,0)
^^7^7^3051121^
"^DD",799.34,799.34,.03,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",799.34,799.34,.03,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.34,799.34,.03,21,3,0)
 
"^DD",799.34,799.34,.03,21,4,0)
If this field is set to 'YES', then report 
"^DD",799.34,799.34,.03,21,5,0)
parameter templates are shared between all 
"^DD",799.34,799.34,.03,21,6,0)
registries. Otherwise, the templates are 
"^DD",799.34,799.34,.03,21,7,0)
registry-specific.
"^DD",799.34,799.34,.03,"DEL",1,0)
I $$VADEL^RORDD(799.34,$G(DA))
"^DD",799.34,799.34,.03,"DT")
3051121
"^DD",799.34,799.34,.04,0)
CODE^RNJ3,0X^^0;4^Q:$$VAEDT^RORDD(799.34,$G(DA))  K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",799.34,799.34,.04,3)
Enter the unique report code (between 1 and 999, 0 Decimal Digits).
"^DD",799.34,799.34,.04,8.5)
@
"^DD",799.34,799.34,.04,9)
@
"^DD",799.34,799.34,.04,21,0)
^^5^5^3030505^
"^DD",799.34,799.34,.04,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",799.34,799.34,.04,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.34,799.34,.04,21,3,0)
 
"^DD",799.34,799.34,.04,21,4,0)
The CODE field stores the unique code of the
"^DD",799.34,799.34,.04,21,5,0)
report.
"^DD",799.34,799.34,.04,23,0)
^^19^19^3030507^
"^DD",799.34,799.34,.04,23,1,0)
The corresponding XSL templates for the report are 
"^DD",799.34,799.34,.04,23,2,0)
stored in the DIALOG file (#.84). The dialog number 
"^DD",799.34,799.34,.04,23,3,0)
of the template has the following structure:
"^DD",799.34,799.34,.04,23,4,0)
 
"^DD",799.34,799.34,.04,23,5,0)
 7981CCC.TTT
"^DD",799.34,799.34,.04,23,6,0)
 
"^DD",799.34,799.34,.04,23,7,0)
 'CCC' is the code of the report.
"^DD",799.34,799.34,.04,23,8,0)
 
"^DD",799.34,799.34,.04,23,9,0)
 'TTT' is the type of the template:
"^DD",799.34,799.34,.04,23,10,0)
        001 - HTML Preview,
"^DD",799.34,799.34,.04,23,11,0)
        002 - Delimited Format (CSV),
"^DD",799.34,799.34,.04,23,12,0)
        003 - Printer Output.
"^DD",799.34,799.34,.04,23,13,0)
 
"^DD",799.34,799.34,.04,23,14,0)
For example, the dialog 7981001.001 contains the HTML
"^DD",799.34,799.34,.04,23,15,0)
preview template for the List of Registry Patients
"^DD",799.34,799.34,.04,23,16,0)
(report code: 1).
"^DD",799.34,799.34,.04,23,17,0)
 
"^DD",799.34,799.34,.04,23,18,0)
If no template is defined for the report then the
"^DD",799.34,799.34,.04,23,19,0)
default template from dialog 7981000 is used.
"^DD",799.34,799.34,.04,"DT")
3030401
"^DD",799.34,799.34,.05,0)
DATE OF INACTIVATION^D^^0;5^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",799.34,799.34,.05,21,0)
^^5^5^3030505^
"^DD",799.34,799.34,.05,21,1,0)
If this field has a value, the report will be
"^DD",799.34,799.34,.05,21,2,0)
considered inactive after this date. Use this
"^DD",799.34,799.34,.05,21,3,0)
field to disable unnecessary reports (and hide
"^DD",799.34,799.34,.05,21,4,0)
them from the Report sub-menu of the GUI) instead
"^DD",799.34,799.34,.05,21,5,0)
of deleting them.
"^DD",799.34,799.34,.05,23,0)
^^3^3^3030505^
"^DD",799.34,799.34,.05,23,1,0)
The ROR REPORTS AVAILABLE remote procedure analyzes
"^DD",799.34,799.34,.05,23,2,0)
this field when it loads the list of available reports
"^DD",799.34,799.34,.05,23,3,0)
and skips the inactive ones.
"^DD",799.34,799.34,.05,"DT")
3021126
"^DD",799.34,799.34,.09,0)
NATIONAL^SX^0:NO;1:YES;^0;9^Q:$$VAEDT^RORDD(799.34,,-1)
"^DD",799.34,799.34,.09,8.5)
@
"^DD",799.34,799.34,.09,9)
@
"^DD",799.34,799.34,.09,21,0)
^^7^7^3030506^
"^DD",799.34,799.34,.09,21,1,0)
ONLY AUTHORIZED NATIONAL REGISTRY DEVELOPERS CAN
"^DD",799.34,799.34,.09,21,2,0)
EDIT THIS FIELD!
"^DD",799.34,799.34,.09,21,3,0)
 
"^DD",799.34,799.34,.09,21,4,0)
Reports distributed with the national registries
"^DD",799.34,799.34,.09,21,5,0)
must have this field set to "YES". This prevents
"^DD",799.34,799.34,.09,21,6,0)
local editing of other fields of report
"^DD",799.34,799.34,.09,21,7,0)
definitions.
"^DD",799.34,799.34,.09,"DEL",1,0)
I $$VADEL^RORDD(799.34,,,-1)
"^DD",799.34,799.34,.09,"DT")
3021126
"^DD",799.34,799.34,1,0)
PARAMETER PANELS^FX^^1;E1,250^Q:$$VAEDT^RORDD(799.34,$G(DA))  K:$L(X)>250!($L(X)<1) X
"^DD",799.34,799.34,1,3)
Enter codes of dialog panels separated by commas (1-250 characters).
"^DD",799.34,799.34,1,8.5)
@
"^DD",799.34,799.34,1,9)
@
"^DD",799.34,799.34,1,21,0)
^^7^7^3030507^
"^DD",799.34,799.34,1,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",799.34,799.34,1,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.34,799.34,1,21,3,0)
 
"^DD",799.34,799.34,1,21,4,0)
The PARAMETER PANELS field stores the list of 
"^DD",799.34,799.34,1,21,5,0)
panel codes separated by commas. The panels are 
"^DD",799.34,799.34,1,21,6,0)
combined by the GUI into the dialog form that is
"^DD",799.34,799.34,1,21,7,0)
used to request values of the report parameters.
"^DD",799.34,799.34,1,"DEL",1,0)
I $$VADEL^RORDD(799.34,$G(DA))
"^DD",799.34,799.34,1,"DT")
3030304
"^DD",799.34,799.34,10.01,0)
REPORT BUILDER^RFX^^10.01;E1,245^Q:$$VAEDT^RORDD(799.34,$G(DA))  Q:$$EP^RORDD(1)
"^DD",799.34,799.34,10.01,3)
Answer must be $$TAG^ROUTINE (5-19 characters in length).
"^DD",799.34,799.34,10.01,8.5)
@
"^DD",799.34,799.34,10.01,9)
@
"^DD",799.34,799.34,10.01,21,0)
^.001^6^6^3060106^^
"^DD",799.34,799.34,10.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",799.34,799.34,10.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.34,799.34,10.01,21,3,0)
 
"^DD",799.34,799.34,10.01,21,4,0)
The REPORT BUILDER field stores a reference to the
"^DD",799.34,799.34,10.01,21,5,0)
function that is used to build the report (the
"^DD",799.34,799.34,10.01,21,6,0)
report builder).
"^DD",799.34,799.34,10.01,23,0)
^^24^24^3060106^
"^DD",799.34,799.34,10.01,23,1,0)
The call-back entry point is called with a single
"^DD",799.34,799.34,10.01,23,2,0)
parameter. The parameter is a reference to a local
"^DD",799.34,799.34,10.01,23,3,0)
variable that contains values of the report parameters.
"^DD",799.34,799.34,10.01,23,4,0)
 
"^DD",799.34,799.34,10.01,23,5,0)
 RORTSK(            Task Number
"^DD",799.34,799.34,10.01,23,6,0)
 
"^DD",799.34,799.34,10.01,23,7,0)
   "EP")            Entry Point ($$TAG^ROUTINE)
"^DD",799.34,799.34,10.01,23,8,0)
 
"^DD",799.34,799.34,10.01,23,9,0)
   "PARAMS",...)    See the CCR Programmer's Reference 
"^DD",799.34,799.34,10.01,23,10,0)
                    Manual for details
"^DD",799.34,799.34,10.01,23,11,0)
 
"^DD",799.34,799.34,10.01,23,12,0)
   "REGIEN")        Registry IEN
"^DD",799.34,799.34,10.01,23,13,0)
 
"^DD",799.34,799.34,10.01,23,14,0)
   "TYPE")          Type of the Task
"^DD",799.34,799.34,10.01,23,15,0)
   "REPORT")        Code of the Report
"^DD",799.34,799.34,10.01,23,16,0)
   "SCHCODE")       Rescheduling Code
"^DD",799.34,799.34,10.01,23,17,0)
 
"^DD",799.34,799.34,10.01,23,18,0)
The function must return 0 in the case of successful
"^DD",799.34,799.34,10.01,23,19,0)
completion. Otherwise, a negative error code must be 
"^DD",799.34,799.34,10.01,23,20,0)
returned.
"^DD",799.34,799.34,10.01,23,21,0)
 
"^DD",799.34,799.34,10.01,23,22,0)
See description of the ROR REPORT SCHEDULE remote
"^DD",799.34,799.34,10.01,23,23,0)
procedure and source code of the RORTSK01 routine for
"^DD",799.34,799.34,10.01,23,24,0)
more details.
"^DD",799.34,799.34,10.01,"DT")
3021126
"^DD",799.34,799.34,11,0)
DEFAULT PARAMETERS^799.3411^^11;0
"^DD",799.34,799.34,11,9)
@
"^DD",799.34,799.34,11,21,0)
^.001^2^2^3040124^^
"^DD",799.34,799.34,11,21,1,0)
This field stores the default values for the 
"^DD",799.34,799.34,11,21,2,0)
report parameters (in the NAME=VALUE format).
"^DD",799.34,799.34,12,0)
DEFAULT SORTING^799.3412^^12;0
"^DD",799.34,799.34,12,9)
@
"^DD",799.34,799.34,12,21,0)
^^2^2^3040121^
"^DD",799.34,799.34,12,21,1,0)
This field stores the default sorting modes for
"^DD",799.34,799.34,12,21,2,0)
the report (in the TABLE=FIELD format).
"^DD",799.34,799.3411,0)
DEFAULT PARAMETERS SUB-FIELD^^.01^1
"^DD",799.34,799.3411,0,"DT")
3030918
"^DD",799.34,799.3411,0,"NM","DEFAULT PARAMETERS")
 
"^DD",799.34,799.3411,0,"UP")
799.34
"^DD",799.34,799.3411,.01,0)
DEFAULT PARAMETERS^WL^^0;1^Q
"^DD",799.34,799.3411,.01,8.5)
@
"^DD",799.34,799.3411,.01,9)
@
"^DD",799.34,799.3411,.01,"DT")
3030918
"^DD",799.34,799.3412,0)
DEFAULT SORTING SUB-FIELD^^.01^1
"^DD",799.34,799.3412,0,"DT")
3031103
"^DD",799.34,799.3412,0,"NM","DEFAULT SORTING")
 
"^DD",799.34,799.3412,0,"UP")
799.34
"^DD",799.34,799.3412,.01,0)
DEFAULT SORTING^WL^^0;1^Q
"^DD",799.34,799.3412,.01,8.5)
@
"^DD",799.34,799.3412,.01,9)
@
"^DD",799.34,799.3412,.01,"DT")
3031103
"^DIC",798.1,798.1,0)
ROR REGISTRY PARAMETERS^798.1
"^DIC",798.1,798.1,0,"GL")
^ROR(798.1,
"^DIC",798.1,798.1,"%",0)
^1.005^^0
"^DIC",798.1,798.1,"%D",0)
^^22^22^3060203^
"^DIC",798.1,798.1,"%D",1,0)
Records of the ROR REGISTRY PARAMETERS file 
"^DIC",798.1,798.1,"%D",2,0)
contain various registry parameters and the data
"^DIC",798.1,798.1,"%D",3,0)
that indicates current registry state. Every 
"^DIC",798.1,798.1,"%D",4,0)
registry must have a record in this file.
"^DIC",798.1,798.1,"%D",5,0)
 
"^DIC",798.1,798.1,"%D",6,0)
Records of the file are uniquely identified by the
"^DIC",798.1,798.1,"%D",7,0)
registry name (the "A" primary key and the
"^DIC",798.1,798.1,"%D",8,0)
uniqueness index "B" are used for that purpose).
"^DIC",798.1,798.1,"%D",9,0)
 
"^DIC",798.1,798.1,"%D",10,0)
A permanent screen (the ^DD(798.1,0,"SCR") node) 
"^DIC",798.1,798.1,"%D",11,0)
restricts access to records of this file. Users
"^DIC",798.1,798.1,"%D",12,0)
can only access records of those registries that
"^DIC",798.1,798.1,"%D",13,0)
they have the security key(s) for. Users with the
"^DIC",798.1,798.1,"%D",14,0)
ROR VA IRM security key can access all records of
"^DIC",798.1,798.1,"%D",15,0)
the file.
"^DIC",798.1,798.1,"%D",16,0)
 
"^DIC",798.1,798.1,"%D",17,0)
If you want the changes in the security keys 
"^DIC",798.1,798.1,"%D",18,0)
allocation to have an effect immediately, you
"^DIC",798.1,798.1,"%D",19,0)
should rebuild the "ACL" cross-reference of the
"^DIC",798.1,798.1,"%D",20,0)
.01 field of the SECURITY KEY multiple of this
"^DIC",798.1,798.1,"%D",21,0)
file. See the description of the cross-reference
"^DIC",798.1,798.1,"%D",22,0)
for more details.
"^DIC",798.1,"B","ROR REGISTRY PARAMETERS",798.1)
 
"^DIC",798.2,798.2,0)
ROR SELECTION RULE^798.2
"^DIC",798.2,798.2,0,"GL")
^ROR(798.2,
"^DIC",798.2,798.2,"%",0)
^1.005^^0
"^DIC",798.2,798.2,"%D",0)
^^30^30^3020403^
"^DIC",798.2,798.2,"%D",1,0)
The ROR SELECTION RULES file contains definitions
"^DIC",798.2,798.2,"%D",2,0)
of the selection rules that are used to screen
"^DIC",798.2,798.2,"%D",3,0)
patients for addition to the registries. There are
"^DIC",798.2,798.2,"%D",4,0)
two kinds of rules: top-level and lower level.
"^DIC",798.2,798.2,"%D",5,0)
 
"^DIC",798.2,798.2,"%D",6,0)
If a rule is referenced by the ROR REGISTRY 
"^DIC",798.2,798.2,"%D",7,0)
PARAMETERS file, it is the top-level rule.
"^DIC",798.2,798.2,"%D",8,0)
Non-zero value of any top-level rule expression 
"^DIC",798.2,798.2,"%D",9,0)
directly determines that the patient should be
"^DIC",798.2,798.2,"%D",10,0)
added to the corresponding registry.
"^DIC",798.2,798.2,"%D",11,0)
 
"^DIC",798.2,798.2,"%D",12,0)
Lower level rules are referenced only by other 
"^DIC",798.2,798.2,"%D",13,0)
rules (by rule macros in the expressions). Their
"^DIC",798.2,798.2,"%D",14,0)
expressions are evaluated in the proper order, and
"^DIC",798.2,798.2,"%D",15,0)
the result values are used in the expressions of 
"^DIC",798.2,798.2,"%D",16,0)
other rules. Lower level rules have an indirect
"^DIC",798.2,798.2,"%D",17,0)
impact on the final result and can be used for
"^DIC",798.2,798.2,"%D",18,0)
complex processing of linked files and multiples.
"^DIC",798.2,798.2,"%D",19,0)
 
"^DIC",798.2,798.2,"%D",20,0)
For example, a lower level rule can calculate 
"^DIC",798.2,798.2,"%D",21,0)
maximum and minimum values of a parameter in the
"^DIC",798.2,798.2,"%D",22,0)
sub-file, and a top-level rule will analyze these
"^DIC",798.2,798.2,"%D",23,0)
values and decide if the patient should be added 
"^DIC",798.2,798.2,"%D",24,0)
to the registry. Moreover, they could be used to
"^DIC",798.2,798.2,"%D",25,0)
split a very complex rule into several simpler
"^DIC",798.2,798.2,"%D",26,0)
rules.
"^DIC",798.2,798.2,"%D",27,0)
 
"^DIC",798.2,798.2,"%D",28,0)
Records of the file are uniquely identified by the
"^DIC",798.2,798.2,"%D",29,0)
rule name (the "A" primary key and the uniqueness
"^DIC",798.2,798.2,"%D",30,0)
index "B" are used for this purpose).
"^DIC",798.2,"B","ROR SELECTION RULE",798.2)
 
"^DIC",798.5,798.5,0)
ROR ICD SEARCH^798.5
"^DIC",798.5,798.5,0,"GL")
^ROR(798.5,
"^DIC",798.5,798.5,"%",0)
^1.005^^
"^DIC",798.5,798.5,"%D",0)
^^5^5^3120328^
"^DIC",798.5,798.5,"%D",1,0)
This file stores all the ICD diagnostic codes used to identify patients
"^DIC",798.5,798.5,"%D",2,0)
for a given registry during the Registry Update process. The B cross
"^DIC",798.5,798.5,"%D",3,0)
reference for the ICD code is used in the EXPRESSION field of the ROR
"^DIC",798.5,798.5,"%D",4,0)
SELECTION RULES file (#798.2).  The file design allows CCR to support an
"^DIC",798.5,798.5,"%D",5,0)
unlimited number of codes selected from the ICD DIAGNOSIS file (#80).
"^DIC",798.5,"B","ROR ICD SEARCH",798.5)
 
"^DIC",799.34,799.34,0)
ROR REPORT PARAMETERS^799.34
"^DIC",799.34,799.34,0,"GL")
^ROR(799.34,
"^DIC",799.34,799.34,"%",0)
^1.005^^0
"^DIC",799.34,799.34,"%D",0)
^^7^7^3030814^^
"^DIC",799.34,799.34,"%D",1,0)
The ROR REPORT PARAMETERS file stores the report
"^DIC",799.34,799.34,"%D",2,0)
definitions that are used by the ROR REPORT 
"^DIC",799.34,799.34,"%D",3,0)
SCHEDULE remote procedure to schedule the reports.
"^DIC",799.34,799.34,"%D",4,0)
 
"^DIC",799.34,799.34,"%D",5,0)
Records of the file are uniquely identified by the
"^DIC",799.34,799.34,"%D",6,0)
report code (the "A" primary key and the
"^DIC",799.34,799.34,"%D",7,0)
uniqueness index "KEY" are used for that purpose).
"^DIC",799.34,"B","ROR REPORT PARAMETERS",799.34)
 
"BLD",8728,6)
^18
**END**
**END**
