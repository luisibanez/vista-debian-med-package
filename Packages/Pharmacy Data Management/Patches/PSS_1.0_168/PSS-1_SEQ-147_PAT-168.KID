EMERGENCY Released PSS*1*168 SEQ #147
Extracted from mail message
**KIDS**:PSS*1.0*168^

**INSTALL NAME**
PSS*1.0*168
"BLD",8042,0)
PSS*1.0*168^PHARMACY DATA MANAGEMENT^0^3111216^y
"BLD",8042,1,0)
^^22^22^3111201^
"BLD",8042,1,1,0)
When calls are made to the Medication Order Check Healthcare Application 
"BLD",8042,1,2,0)
(MOCHA), a "Ping" type of call is made first to test the communication, 
"BLD",8042,1,3,0)
and if that is successful, the subsequent order check call is made. If 
"BLD",8042,1,4,0)
either call fails, the process is aborted, and a message is displayed 
"BLD",8042,1,5,0)
indicating that order checks cannot be performed.
"BLD",8042,1,6,0)
 
"BLD",8042,1,7,0)
What this patch introduces is a "re-try" if either of these calls fail. 
"BLD",8042,1,8,0)
After a three second hang, the call (Ping or order check) will be
"BLD",8042,1,9,0)
attempted again, then if the same call fails a second time, the process
"BLD",8042,1,10,0)
will be aborted with the message indicating that order checks cannot be
"BLD",8042,1,11,0)
performed.
"BLD",8042,1,12,0)
 
"BLD",8042,1,13,0)
This patch also addresses an issue (in conjunction with patch PSO*7.0*379)
"BLD",8042,1,14,0)
concerning Orderable Items that are flaggeed as Supplies. If an order 
"BLD",8042,1,15,0)
check is to be performed on an order that only has an Orderable Item with 
"BLD",8042,1,16,0)
no Dispense Drug, an attempt is made to find the best drug available that 
"BLD",8042,1,17,0)
is matched to the Orderable Item for the order check. Currently, if the 
"BLD",8042,1,18,0)
Orderable Item is marked as a supply, no order checks are performed. But 
"BLD",8042,1,19,0)
if the Orderable Item has both Supply and non-Supply Items matched to it, 
"BLD",8042,1,20,0)
order checks can possibly be performed on one of the non-supply items. 
"BLD",8042,1,21,0)
This patch makes the change to look for non-Supply Items matched to the 
"BLD",8042,1,22,0)
supply Orderable Item to perform the order checks on.
"BLD",8042,4,0)
^9.64PA^^
"BLD",8042,6)
1^
"BLD",8042,6.3)
4
"BLD",8042,"ABPKG")
n
"BLD",8042,"INID")
y
"BLD",8042,"KRN",0)
^9.67PA^779.2^20
"BLD",8042,"KRN",.4,0)
.4
"BLD",8042,"KRN",.401,0)
.401
"BLD",8042,"KRN",.402,0)
.402
"BLD",8042,"KRN",.403,0)
.403
"BLD",8042,"KRN",.5,0)
.5
"BLD",8042,"KRN",.84,0)
.84
"BLD",8042,"KRN",3.6,0)
3.6
"BLD",8042,"KRN",3.8,0)
3.8
"BLD",8042,"KRN",9.2,0)
9.2
"BLD",8042,"KRN",9.8,0)
9.8
"BLD",8042,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",8042,"KRN",9.8,"NM",1,0)
PSSDSAPK^^0^B181797737
"BLD",8042,"KRN",9.8,"NM",2,0)
PSSDSAPM^^0^B209948615
"BLD",8042,"KRN",9.8,"NM",3,0)
PSSHRQ2^^0^B6796536
"BLD",8042,"KRN",9.8,"NM",4,0)
PSSHRIT^^0^B157119688
"BLD",8042,"KRN",9.8,"NM","B","PSSDSAPK",1)

"BLD",8042,"KRN",9.8,"NM","B","PSSDSAPM",2)

"BLD",8042,"KRN",9.8,"NM","B","PSSHRIT",4)

"BLD",8042,"KRN",9.8,"NM","B","PSSHRQ2",3)

"BLD",8042,"KRN",19,0)
19
"BLD",8042,"KRN",19.1,0)
19.1
"BLD",8042,"KRN",101,0)
101
"BLD",8042,"KRN",409.61,0)
409.61
"BLD",8042,"KRN",771,0)
771
"BLD",8042,"KRN",779.2,0)
779.2
"BLD",8042,"KRN",870,0)
870
"BLD",8042,"KRN",8989.51,0)
8989.51
"BLD",8042,"KRN",8989.52,0)
8989.52
"BLD",8042,"KRN",8994,0)
8994
"BLD",8042,"KRN","B",.4,.4)

"BLD",8042,"KRN","B",.401,.401)

"BLD",8042,"KRN","B",.402,.402)

"BLD",8042,"KRN","B",.403,.403)

"BLD",8042,"KRN","B",.5,.5)

"BLD",8042,"KRN","B",.84,.84)

"BLD",8042,"KRN","B",3.6,3.6)

"BLD",8042,"KRN","B",3.8,3.8)

"BLD",8042,"KRN","B",9.2,9.2)

"BLD",8042,"KRN","B",9.8,9.8)

"BLD",8042,"KRN","B",19,19)

"BLD",8042,"KRN","B",19.1,19.1)

"BLD",8042,"KRN","B",101,101)

"BLD",8042,"KRN","B",409.61,409.61)

"BLD",8042,"KRN","B",771,771)

"BLD",8042,"KRN","B",779.2,779.2)

"BLD",8042,"KRN","B",870,870)

"BLD",8042,"KRN","B",8989.51,8989.51)

"BLD",8042,"KRN","B",8989.52,8989.52)

"BLD",8042,"KRN","B",8994,8994)

"BLD",8042,"PRE")
PSSEN168
"BLD",8042,"QUES",0)
^9.62^^
"BLD",8042,"REQB",0)
^9.611^2^2
"BLD",8042,"REQB",1,0)
PSS*1.0*117^2
"BLD",8042,"REQB",2,0)
PSS*1.0*163^2
"BLD",8042,"REQB","B","PSS*1.0*117",1)

"BLD",8042,"REQB","B","PSS*1.0*163",2)

"MBREQ")
0
"PKG",517,-1)
1^1
"PKG",517,0)
PHARMACY DATA MANAGEMENT^PSS^Maintenance of Pharmacy files.
"PKG",517,20,0)
^9.402P^^
"PKG",517,22,0)
^9.49I^1^1
"PKG",517,22,1,0)
1.0^2970930^2971014^11595
"PKG",517,22,1,"PAH",1,0)
168^3111216^11859
"PKG",517,22,1,"PAH",1,1,0)
^^22^22^3111216
"PKG",517,22,1,"PAH",1,1,1,0)
When calls are made to the Medication Order Check Healthcare Application 
"PKG",517,22,1,"PAH",1,1,2,0)
(MOCHA), a "Ping" type of call is made first to test the communication, 
"PKG",517,22,1,"PAH",1,1,3,0)
and if that is successful, the subsequent order check call is made. If 
"PKG",517,22,1,"PAH",1,1,4,0)
either call fails, the process is aborted, and a message is displayed 
"PKG",517,22,1,"PAH",1,1,5,0)
indicating that order checks cannot be performed.
"PKG",517,22,1,"PAH",1,1,6,0)
 
"PKG",517,22,1,"PAH",1,1,7,0)
What this patch introduces is a "re-try" if either of these calls fail. 
"PKG",517,22,1,"PAH",1,1,8,0)
After a three second hang, the call (Ping or order check) will be
"PKG",517,22,1,"PAH",1,1,9,0)
attempted again, then if the same call fails a second time, the process
"PKG",517,22,1,"PAH",1,1,10,0)
will be aborted with the message indicating that order checks cannot be
"PKG",517,22,1,"PAH",1,1,11,0)
performed.
"PKG",517,22,1,"PAH",1,1,12,0)
 
"PKG",517,22,1,"PAH",1,1,13,0)
This patch also addresses an issue (in conjunction with patch PSO*7.0*379)
"PKG",517,22,1,"PAH",1,1,14,0)
concerning Orderable Items that are flaggeed as Supplies. If an order 
"PKG",517,22,1,"PAH",1,1,15,0)
check is to be performed on an order that only has an Orderable Item with 
"PKG",517,22,1,"PAH",1,1,16,0)
no Dispense Drug, an attempt is made to find the best drug available that 
"PKG",517,22,1,"PAH",1,1,17,0)
is matched to the Orderable Item for the order check. Currently, if the 
"PKG",517,22,1,"PAH",1,1,18,0)
Orderable Item is marked as a supply, no order checks are performed. But 
"PKG",517,22,1,"PAH",1,1,19,0)
if the Orderable Item has both Supply and non-Supply Items matched to it, 
"PKG",517,22,1,"PAH",1,1,20,0)
order checks can possibly be performed on one of the non-supply items. 
"PKG",517,22,1,"PAH",1,1,21,0)
This patch makes the change to look for non-Supply Items matched to the 
"PKG",517,22,1,"PAH",1,1,22,0)
supply Orderable Item to perform the order checks on.
"PRE")
PSSEN168
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","PSSDSAPK")
0^1^B181797737^B182688846
"RTN","PSSDSAPK",1,0)
PSSDSAPK ;BIR/RTR-Miscellaneous APIs for Dose Call ;09/02/09
"RTN","PSSDSAPK",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,168**;9/30/97;Build 4
"RTN","PSSDSAPK",3,0)
 ;
"RTN","PSSDSAPK",4,0)
 ;USE PSSGT
"RTN","PSSDSAPK",5,0)
 ;
"RTN","PSSDSAPK",6,0)
 ;Disregard Package Use and Inactive Date in File 50, so you can still get General DOsing
"RTN","PSSDSAPK",7,0)
 ;Guidelines, they are a priority dhen finding a Drug
"RTN","PSSDSAPK",8,0)
 ;
"RTN","PSSDSAPK",9,0)
 ;Return Dispense Drug for Orderable Item
"RTN","PSSDSAPK",10,0)
 ;PSSGTOI = Orderable Item
"RTN","PSSDSAPK",11,0)
 ;PSSGTPK = Package O for Outpatient, N for Non-VA Med, I for Inpatient
"RTN","PSSDSAPK",12,0)
 ;PSSGTRTE = Med Route Internal Entry Number
"RTN","PSSDSAPK",13,0)
 ;PSSGTAB = String containg A for Additive, B for Solution
"RTN","PSSDSAPK",14,0)
 ;PSSGTRES = result - 0 for No Drug found, or File 50 Internal Entry Number
"RTN","PSSDSAPK",15,0)
DRG(PSSGTOI,PSSGTPK,PSSGTRTE,PSSGTAB) ;
"RTN","PSSDSAPK",16,0)
 I '$G(PSSGTOI) Q 0
"RTN","PSSDSAPK",17,0)
 I $G(PSSGTPK)'="O",$G(PSSGTPK)'="X",$G(PSSGTPK)'="I" Q 0
"RTN","PSSDSAPK",18,0)
 N PSSGTRES,PSSGTPM,PSSGT1,PSSGT2,PSSGT3,PSSGT4,PSSGT5,PSSGTHL1,PSSGTHL2
"RTN","PSSDSAPK",19,0)
 S PSSGTPM=$S(PSSGTPK="I":"U",1:PSSGTPK)
"RTN","PSSDSAPK",20,0)
 S (PSSGTRES,PSSGTHL1,PSSGTHL2)=0
"RTN","PSSDSAPK",21,0)
 ;Next line, check with Lina, where you only go to DRGIMP if it's an Additive or Base
"RTN","PSSDSAPK",22,0)
 I PSSGTPK="I",$G(PSSGTRTE),$P($G(^PS(51.2,PSSGTRTE,0)),"^",6)=1 I $G(PSSGTAB)["A"!($G(PSSGTAB)["B") G DRGINP
"RTN","PSSDSAPK",23,0)
 F PSSGT1=0:0 S PSSGT1=$O(^PSDRUG("ASP",PSSGTOI,PSSGT1)) Q:'PSSGT1!(PSSGTHL2)  D
"RTN","PSSDSAPK",24,0)
 .S PSSGT3=$P($G(^PSDRUG(PSSGT1,"ND")),"^"),PSSGT4=$P($G(^PSDRUG(PSSGT1,"ND")),"^",3)
"RTN","PSSDSAPK",25,0)
 .I 'PSSGT3!('PSSGT4) Q
"RTN","PSSDSAPK",26,0)
 .S PSSGT5=$P($$PROD0^PSNAPIS(PSSGT3,PSSGT4),"^",7) I +$G(PSSGT5)'>0 Q
"RTN","PSSDSAPK",27,0)
 .I $$EXMT^PSSDSAPI(PSSGT1) Q
"RTN","PSSDSAPK",28,0)
 .S:'PSSGTHL1 PSSGTHL1=PSSGT1
"RTN","PSSDSAPK",29,0)
 .I $P($G(^PSDRUG(PSSGT1,2)),"^",3)'[PSSGTPM Q
"RTN","PSSDSAPK",30,0)
 .S PSSGT2=$P($G(^PSDRUG(PSSGT1,"I")),"^") I PSSGT2,PSSGT2<DT Q
"RTN","PSSDSAPK",31,0)
 .S PSSGTHL2=PSSGT1
"RTN","PSSDSAPK",32,0)
 S PSSGTRES=$S(PSSGTHL2:PSSGTHL2,PSSGTHL1:PSSGTHL1,1:0)
"RTN","PSSDSAPK",33,0)
 Q PSSGTRES
"RTN","PSSDSAPK",34,0)
 ;
"RTN","PSSDSAPK",35,0)
 ;
"RTN","PSSDSAPK",36,0)
DRGINP ;Inpatient Order with IV Route
"RTN","PSSDSAPK",37,0)
 N PSSGT6,PSSGT7,PSSGT8,PSSGTN1,PSSGTN3,PSSGTN4
"RTN","PSSDSAPK",38,0)
 I PSSGTAB["A" D
"RTN","PSSDSAPK",39,0)
 .F PSSGT6=0:0 S PSSGT6=$O(^PS(52.6,"AOI",PSSGTOI,PSSGT6)) Q:'PSSGT6!(PSSGTRES)  D
"RTN","PSSDSAPK",40,0)
 ..S PSSGT7=$P($G(^PS(52.6,PSSGT6,"I")),"^") I PSSGT7,PSSGT7'>DT Q
"RTN","PSSDSAPK",41,0)
 ..S PSSGT8=$P($G(^PS(52.6,PSSGT6,0)),"^",2) I 'PSSGT8 Q
"RTN","PSSDSAPK",42,0)
 ..;Dispense Drug can be inactive, and no need to check package use
"RTN","PSSDSAPK",43,0)
 ..S PSSGTN1=$P($G(^PSDRUG(PSSGT8,"ND")),"^"),PSSGTN3=$P($G(^PSDRUG(PSSGT8,"ND")),"^",3)
"RTN","PSSDSAPK",44,0)
 ..I 'PSSGTN1!('PSSGTN3) Q
"RTN","PSSDSAPK",45,0)
 ..S PSSGTN4=$P($$PROD0^PSNAPIS(PSSGTN1,PSSGTN3),"^",7) I +$G(PSSGTN4)'>0 Q
"RTN","PSSDSAPK",46,0)
 ..I $$EXMT^PSSDSAPI(PSSGT8) Q
"RTN","PSSDSAPK",47,0)
 ..S PSSGTRES=PSSGT8
"RTN","PSSDSAPK",48,0)
 I PSSGTRES Q PSSGTRES
"RTN","PSSDSAPK",49,0)
 I PSSGTAB["B" D
"RTN","PSSDSAPK",50,0)
 .F PSSGT6=0:0 S PSSGT6=$O(^PS(52.7,"AOI",PSSGTOI,PSSGT6)) Q:'PSSGT6!(PSSGTRES)  D
"RTN","PSSDSAPK",51,0)
 ..I $P($G(^PS(52.7,PSSGT6,0)),"^",14)'=1 Q
"RTN","PSSDSAPK",52,0)
 ..S PSSGT7=$P($G(^PS(52.7,PSSGT6,"I")),"^") I PSSGT7,PSSGT7'>DT Q
"RTN","PSSDSAPK",53,0)
 ..S PSSGT8=$P($G(^PS(52.7,PSSGT6,0)),"^",2) I 'PSSGT8 Q
"RTN","PSSDSAPK",54,0)
 ..;Dispense Drug can be inactive, and no need to check package use
"RTN","PSSDSAPK",55,0)
 ..S PSSGTN1=$P($G(^PSDRUG(PSSGT8,"ND")),"^"),PSSGTN3=$P($G(^PSDRUG(PSSGT8,"ND")),"^",3)
"RTN","PSSDSAPK",56,0)
 ..I 'PSSGTN1!('PSSGTN3) Q
"RTN","PSSDSAPK",57,0)
 ..S PSSGTN4=$P($$PROD0^PSNAPIS(PSSGTN1,PSSGTN3),"^",7) I +$G(PSSGTN4)'>0 Q
"RTN","PSSDSAPK",58,0)
 ..I $$EXMT^PSSDSAPI(PSSGT8) Q
"RTN","PSSDSAPK",59,0)
 ..S PSSGTRES=PSSGT8
"RTN","PSSDSAPK",60,0)
 Q PSSGTRES
"RTN","PSSDSAPK",61,0)
 ;
"RTN","PSSDSAPK",62,0)
 ;
"RTN","PSSDSAPK",63,0)
PRE(PSSLGTOI) ;Determine PreMix indication for CPRS for Orderable Item, 1 = PreMix, 0 = Not PreMix
"RTN","PSSDSAPK",64,0)
 ;PSSLGTOI = File 50.7 Internal Entry Number
"RTN","PSSDSAPK",65,0)
 N PSSLGT1,PSSLGT2,PSSLGT3
"RTN","PSSDSAPK",66,0)
 I 'PSSLGTOI Q 0
"RTN","PSSDSAPK",67,0)
 S PSSLGT2=0
"RTN","PSSDSAPK",68,0)
 F PSSLGT1=0:0 S PSSLGT1=$O(^PS(52.7,"AOI",PSSLGTOI,PSSLGT1)) Q:'PSSLGT1!(PSSLGT2)  D
"RTN","PSSDSAPK",69,0)
 .S PSSLGT3=$P($G(^PS(52.7,PSSLGT1,"I")),"^") I PSSLGT3,PSSLGT3'>DT Q
"RTN","PSSDSAPK",70,0)
 .I $P($G(^PS(52.7,PSSLGT1,0)),"^",14)=1 S PSSLGT2=1
"RTN","PSSDSAPK",71,0)
 Q PSSLGT2
"RTN","PSSDSAPK",72,0)
 ;
"RTN","PSSDSAPK",73,0)
 ;
"RTN","PSSDSAPK",74,0)
CONV(PSSCVTVL) ;Convert hours into format for Dose API for Inpatient Medications
"RTN","PSSDSAPK",75,0)
 N PSSCVTRS,PSSCVT1,PSSCVT2,PSSCVT3
"RTN","PSSDSAPK",76,0)
 S PSSCVTRS=""
"RTN","PSSDSAPK",77,0)
 I '$G(PSSCVTVL) Q PSSCVTRS
"RTN","PSSDSAPK",78,0)
 S PSSCVT1=+PSSCVTVL
"RTN","PSSDSAPK",79,0)
 I PSSCVT1<1 S PSSCVT2=PSSCVT1*60 S PSSCVT3=1440/PSSCVT2 S PSSCVTRS=$J(PSSCVT3,0,0) S:PSSCVTRS=24 PSSCVTRS="Q1H" Q PSSCVTRS
"RTN","PSSDSAPK",80,0)
 S PSSCVT2=$J(PSSCVT1,0,0) S PSSCVTRS="Q"_PSSCVT2_"H"
"RTN","PSSDSAPK",81,0)
 Q PSSCVTRS
"RTN","PSSDSAPK",82,0)
 ;
"RTN","PSSDSAPK",83,0)
 ;
"RTN","PSSDSAPK",84,0)
ITEM ;Only Orderable Item passed in, no Dispense Drug
"RTN","PSSDSAPK",85,0)
 ;Test Unit containing "/", because that is dropped off in UNIT PSSDSAPI
"RTN","PSSDSAPK",86,0)
 N PSSDBI1,PSSDBI2,PSSDBI3,PSSDBI4,PSSDBI5,PSSDBI6,PSSDBI7,PSSDBI8,PSSDBI9,PSSDBI91,PSSDBI92,PSSDBI93,PSSDBI94
"RTN","PSSDSAPK",87,0)
 S PSSDBI1=$G(PSSDSLCL)
"RTN","PSSDSAPK",88,0)
 I $L(PSSDBI1)'>0 Q
"RTN","PSSDSAPK",89,0)
 S PSSDBI1=$$UP^XLFSTR(PSSDBI1)
"RTN","PSSDSAPK",90,0)
 ;Strip out commas up until first character that's not a number, or a decimal
"RTN","PSSDSAPK",91,0)
 S PSSDBI6=0 F PSSDBI7=1:1:$L(PSSDBI1) Q:PSSDBI6  S PSSDBI8=$E(PSSDBI1,PSSDBI7) I PSSDBI8'?1N,PSSDBI8'?1".",PSSDBI8'?1"," S PSSDBI6=PSSDBI7
"RTN","PSSDSAPK",92,0)
 I PSSDBI6=1 Q
"RTN","PSSDSAPK",93,0)
 S PSSDBI9=$S('PSSDBI6:$L(PSSDBI1),1:(PSSDBI6-1))
"RTN","PSSDSAPK",94,0)
 S PSSDBI91=$E(PSSDBI1,1,PSSDBI9),PSSDBI92=$E(PSSDBI1,(PSSDBI9+1),$L(PSSDBI1))
"RTN","PSSDSAPK",95,0)
 S PSSDBI93=$TR(PSSDBI91,",","")
"RTN","PSSDSAPK",96,0)
 S PSSDBI1=PSSDBI93_PSSDBI92
"RTN","PSSDSAPK",97,0)
 I $E(PSSDBI1)=0 S PSSDBI1=$E(PSSDBI1,2,$L(PSSDBI1))
"RTN","PSSDSAPK",98,0)
 I $L(PSSDBI1)'>0 Q
"RTN","PSSDSAPK",99,0)
 S PSSDBI2=+PSSDBI1
"RTN","PSSDSAPK",100,0)
 I 'PSSDBI2!($L(PSSDBI2)=$L(PSSDBI1)) Q
"RTN","PSSDSAPK",101,0)
 S PSSDBI3=$E(PSSDBI1,($L(PSSDBI2)+1),$L(PSSDBI1))
"RTN","PSSDSAPK",102,0)
 S PSSDBI4=$S($E(PSSDBI3)=" ":$E(PSSDBI3,2,$L(PSSDBI3)),1:PSSDBI3)
"RTN","PSSDSAPK",103,0)
 I PSSDBI4="" Q
"RTN","PSSDSAPK",104,0)
 I PSSDBIFL S PSSDBI5=$$UNITD^PSSDSAPI(PSSDBI4)
"RTN","PSSDSAPK",105,0)
 I 'PSSDBIFL S PSSDBI5=$$UNIT^PSSDSAPI(PSSDBI4)
"RTN","PSSDSAPK",106,0)
 ;Clone UNit to UNITD in PSSDSAPI and only return if Dose Form indicator is set to No
"RTN","PSSDSAPK",107,0)
 I PSSDBI5="" Q
"RTN","PSSDSAPK",108,0)
 S PSSDBAR("AMN")=PSSDBI2,PSSDBAR("UNIT")=PSSDBI5,PSSDBFAL=1
"RTN","PSSDSAPK",109,0)
 Q
"RTN","PSSDSAPK",110,0)
 ;
"RTN","PSSDSAPK",111,0)
 ;
"RTN","PSSDSAPK",112,0)
FRCON(PSSCFQ1) ;Convert frequency into a number for compleX Dose additions
"RTN","PSSDSAPK",113,0)
 ;cODE FRO q#h, JUST IN CASE
"RTN","PSSDSAPK",114,0)
 ;In PSSSDAPI, IF A SCHEDULE IS PASSED IN AN AS SAY Q3D, WE SAID WE CAN'T ASSUME THE SITE MEANS EVERY 3 DAYS, WE
"RTN","PSSDSAPK",115,0)
 ; ONLY SET frq TO Q3D in this rouitne if we find a ftrequence in PSSDSAPI of 4320
"RTN","PSSDSAPK",116,0)
 ;CHECK ROUNDING
"RTN","PSSDSAPK",117,0)
 ;
"RTN","PSSDSAPK",118,0)
 ;gIVE wARFARING 1MG Q12H, SHOW LINA FDB MESSAGE
"RTN","PSSDSAPK",119,0)
 ;GIVE WARF 100MG Q12H AND 900NG ARON TEST (4320) SHOW HER ROUNDING
"RTN","PSSDSAPK",120,0)
 N PSSCFQRS,PSSCFQ2,PSSCFQ3,PSSCFQ4
"RTN","PSSDSAPK",121,0)
 S PSSCFQRS=0
"RTN","PSSDSAPK",122,0)
 I PSSCFQ1?1N.N!(PSSCFQ1?1N.N1"."1N.N) S PSSCFQRS=PSSCFQ1 Q PSSCFQRS
"RTN","PSSDSAPK",123,0)
 I PSSCFQ1?1"Q"1N.N1"H" D  Q PSSCFQRS
"RTN","PSSDSAPK",124,0)
 .S PSSCFQ2=$E(PSSCFQ1,2,($L(PSSCFQ1)-1))
"RTN","PSSDSAPK",125,0)
 .S PSSCFQ3=60*PSSCFQ2
"RTN","PSSDSAPK",126,0)
 .S PSSCFQRS=1440/PSSCFQ3
"RTN","PSSDSAPK",127,0)
 I PSSCFQ1?1"Q"1N.N1"D" D  Q PSSCFQRS
"RTN","PSSDSAPK",128,0)
 .S PSSCFQ2=$E(PSSCFQ1,2,($L(PSSCFQ1)-1))
"RTN","PSSDSAPK",129,0)
 .S PSSCFQRS=1/PSSCFQ2 I PSSCFQRS["." S PSSCFQRS=$J(PSSCFQRS,0,4)
"RTN","PSSDSAPK",130,0)
 I PSSCFQ1?1"Q"1N.N1"W" D  Q PSSCFQRS
"RTN","PSSDSAPK",131,0)
 .S PSSCFQ2=$E(PSSCFQ1,2,($L(PSSCFQ1)-1))
"RTN","PSSDSAPK",132,0)
 .S PSSCFQ3=7*PSSCFQ2
"RTN","PSSDSAPK",133,0)
 .S PSSCFQ4=PSSCFQ3*1440
"RTN","PSSDSAPK",134,0)
 .S PSSCFQRS=1440/PSSCFQ4 I PSSCFQRS["." S PSSCFQRS=$J(PSSCFQRS,0,4)
"RTN","PSSDSAPK",135,0)
 I PSSCFQ1?1"Q"1N.N1"L" D  Q PSSCFQRS
"RTN","PSSDSAPK",136,0)
 .S PSSCFQ2=$E(PSSCFQ1,2,($L(PSSCFQ1)-1))
"RTN","PSSDSAPK",137,0)
 .S PSSCFQ3=30*PSSCFQ2
"RTN","PSSDSAPK",138,0)
 .S PSSCFQ4=PSSCFQ3*1440
"RTN","PSSDSAPK",139,0)
 .S PSSCFQRS=1440/PSSCFQ4 I PSSCFQRS["." S PSSCFQRS=$J(PSSCFQRS,0,4)
"RTN","PSSDSAPK",140,0)
 I PSSCFQ1?1"X"1N.N1"D" D  Q PSSCFQRS
"RTN","PSSDSAPK",141,0)
 .S PSSCFQ2=$E(PSSCFQ1,2,($L(PSSCFQ1)-1))
"RTN","PSSDSAPK",142,0)
 .S PSSCFQRS=PSSCFQ2 I PSSCFQRS["." S PSSCFQRS=$J(PSSCFQRS,0,4)
"RTN","PSSDSAPK",143,0)
 I PSSCFQ1?1"X"1N.N1"W" D  Q PSSCFQRS
"RTN","PSSDSAPK",144,0)
 .S PSSCFQ2=$E(PSSCFQ1,2,($L(PSSCFQ1)-1))
"RTN","PSSDSAPK",145,0)
 .S PSSCFQRS=PSSCFQ2/7
"RTN","PSSDSAPK",146,0)
 .I PSSCFQRS["." S PSSCFQRS=$J(PSSCFQRS,0,4)
"RTN","PSSDSAPK",147,0)
 I PSSCFQ1?1"X"1N.N1"L" D  Q PSSCFQRS
"RTN","PSSDSAPK",148,0)
 .S PSSCFQ2=$E(PSSCFQ1,2,($L(PSSCFQ1)-1))
"RTN","PSSDSAPK",149,0)
 .S PSSCFQ2=$E(PSSCFQ1,2,($L(PSSCFQ1)-1))
"RTN","PSSDSAPK",150,0)
 .S PSSCFQRS=PSSCFQ2/30
"RTN","PSSDSAPK",151,0)
 .I PSSCFQRS["." S PSSCFQRS=$J(PSSCFQRS,0,4)
"RTN","PSSDSAPK",152,0)
 I PSSCFQ1="QOD" S PSSCFQRS=.5 Q PSSCFQRS
"RTN","PSSDSAPK",153,0)
 Q 0
"RTN","PSSDSAPK",154,0)
 ;
"RTN","PSSDSAPK",155,0)
 ;
"RTN","PSSDSAPK",156,0)
SING ;4B AND 5
"RTN","PSSDSAPK",157,0)
 S $P(PSSDBCAR(PSSDBEB1),"^")="S"
"RTN","PSSDSAPK",158,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",8)=1
"RTN","PSSDSAPK",159,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",9)=1
"RTN","PSSDSAPK",160,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",10)=$P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",7)
"RTN","PSSDSAPK",161,0)
 S $P(PSSDBCAR(PSSDBEB1),"^",7)=1
"RTN","PSSDSAPK",162,0)
 Q
"RTN","PSSDSAPK",163,0)
 ;
"RTN","PSSDSAPK",164,0)
 ;
"RTN","PSSDSAPK",165,0)
DOWN ;
"RTN","PSSDSAPK",166,0)
 S:PSSDBASA ^TMP($J,PSSDBASF,"OUT",0)=^TMP($J,PSSDBASE,"OUT",0) S:PSSDBASB ^TMP($J,PSSDBASG,"OUT",0)=^TMP($J,PSSDBASE,"OUT",0)
"RTN","PSSDSAPK",167,0)
 Q
"RTN","PSSDSAPK",168,0)
 ;
"RTN","PSSDSAPK",169,0)
 ;
"RTN","PSSDSAPK",170,0)
BDOSE ;Missing Numeric Dose or Dose Unit, Will do 3A and 3D
"RTN","PSSDSAPK",171,0)
 I 'PSSDBEB3!($P(PSSDBEB2,"^",11)="") D EXCPS^PSSDSAPD(1) D:$D(PSSDBCAZ(PSSDBEB1,"FRQ_ERROR")) EXCPS^PSSDSAPD(2) S PSSDBDGO=1 Q
"RTN","PSSDSAPK",172,0)
 I '$P(PSSDBCAR(PSSDBEB1),"^",5) D EXCPS^PSSDSAPD(1) D:$D(PSSDBCAZ(PSSDBEB1,"FRQ_ERROR")) EXCPS^PSSDSAPD(2) S PSSDBFTX(PSSDBEB1,"FTX_ERROR")="" Q
"RTN","PSSDSAPK",173,0)
 S PSSDBDGO=1
"RTN","PSSDSAPK",174,0)
 D EXCPS^PSSDSAPD(1)
"RTN","PSSDSAPK",175,0)
 I $D(PSSDBCAZ(PSSDBEB1,"FRQ_ERROR")) D EXCPS^PSSDSAPD(2)
"RTN","PSSDSAPK",176,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",5)=1
"RTN","PSSDSAPK",177,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",8)=1
"RTN","PSSDSAPK",178,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",9)=1
"RTN","PSSDSAPK",179,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",7)="DAY"
"RTN","PSSDSAPK",180,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",10)="DAY"
"RTN","PSSDSAPK",181,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",6)=$$DUNIT^PSSDSEXC S PSSDBAR("UNIT")=$P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",6) S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",14)=$$DFM^PSSDSEXC
"RTN","PSSDSAPK",182,0)
 S $P(PSSDBCAR(PSSDBEB1),"^",6)=1 S $P(PSSDBCAR(PSSDBEB1),"^",10)=1
"RTN","PSSDSAPK",183,0)
 Q
"RTN","PSSDSAPK",184,0)
 ;
"RTN","PSSDSAPK",185,0)
 ;
"RTN","PSSDSAPK",186,0)
FTX ;Pull Dosing sequences out of Input for complex orders where Free Text Dosage could not be evaluated
"RTN","PSSDSAPK",187,0)
 N PSSDTX1
"RTN","PSSDSAPK",188,0)
 S PSSDTX1="" F  S PSSDTX1=$O(PSSDBFTX(PSSDTX1)) Q:PSSDTX1=""  D
"RTN","PSSDSAPK",189,0)
 .S PSSDBFTX(PSSDTX1,"NODE1")=$G(^TMP($J,PSSDBASE,"IN","DOSE",PSSDTX1))
"RTN","PSSDSAPK",190,0)
 .S PSSDBFTX(PSSDTX1,"NODE2")=$G(^TMP($J,PSSDBASE,"IN","PROSPECTIVE",PSSDTX1))
"RTN","PSSDSAPK",191,0)
 .K ^TMP($J,PSSDBASE,"IN","DOSE",PSSDTX1)
"RTN","PSSDSAPK",192,0)
 .K ^TMP($J,PSSDBASE,"IN","PROSPECTIVE",PSSDTX1)
"RTN","PSSDSAPK",193,0)
 Q
"RTN","PSSDSAPK",194,0)
 ;
"RTN","PSSDSAPK",195,0)
 ;
"RTN","PSSDSAPK",196,0)
FTXRS ;Reset input globals that were pulled because of invalid dosage
"RTN","PSSDSAPK",197,0)
 N PSSDTX2
"RTN","PSSDSAPK",198,0)
 S PSSDTX2="" F  S PSSDTX2=$O(PSSDBFTX(PSSDTX2)) Q:PSSDTX2=""  D
"RTN","PSSDSAPK",199,0)
 .S ^TMP($J,PSSDBASE,"IN","DOSE",PSSDTX2)=PSSDBFTX(PSSDTX2,"NODE1")
"RTN","PSSDSAPK",200,0)
 .S ^TMP($J,PSSDBASE,"IN","PROSPECTIVE",PSSDTX2)=PSSDBFTX(PSSDTX2,"NODE2")
"RTN","PSSDSAPK",201,0)
 Q
"RTN","PSSDSAPK",202,0)
 ;
"RTN","PSSDSAPK",203,0)
 ;
"RTN","PSSDSAPK",204,0)
ERR1() ;Screen out Daily Dose errors for Single Dose Sequences, unless New Daily Dose created based on previous Dosing sequences
"RTN","PSSDSAPK",205,0)
 ;Called from PSSDSEXC
"RTN","PSSDSAPK",206,0)
 N PSSERS,PSSERSU
"RTN","PSSDSAPK",207,0)
 I $P($G(PSSDBCAR(PSSDWLP)),"^")'="S"!($P($G(PSSDBCAR(PSSDWLP)),"^",11)) Q 0
"RTN","PSSDSAPK",208,0)
 S PSSERS=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG"))
"RTN","PSSDSAPK",209,0)
 S PSSERSU=$$UP^XLFSTR(PSSERS)
"RTN","PSSDSAPK",210,0)
 I PSSERSU'["DAILY DOSE" Q 0
"RTN","PSSDSAPK",211,0)
 Q 1
"RTN","PSSDSAPK",212,0)
 ;
"RTN","PSSDSAPK",213,0)
 ;
"RTN","PSSDSAPK",214,0)
ERR2() ;Screen out Frequency errors if Dosing Sequence flagged for Single Dose only 
"RTN","PSSDSAPK",215,0)
 ;Called from PSSDSEXC
"RTN","PSSDSAPK",216,0)
 N PSSERH,PSSERHU,PSSERHRS
"RTN","PSSDSAPK",217,0)
 S PSSERHRS=0
"RTN","PSSDSAPK",218,0)
 I $P($G(PSSDBCAR(PSSDWE1)),"^",12)!($P($G(PSSDBCAR(PSSDWE1)),"^",5)=0) D
"RTN","PSSDSAPK",219,0)
 .S PSSERH=PSSDWEGC
"RTN","PSSDSAPK",220,0)
 .S PSSERHU=$$UP^XLFSTR(PSSERH)
"RTN","PSSDSAPK",221,0)
 .I PSSERHU["UNDEFINED FREQUENCY"!(PSSERHU["FREQUENCY GREATER") S PSSERHRS=1
"RTN","PSSDSAPK",222,0)
 Q PSSERHRS
"RTN","PSSDSAPK",223,0)
 ;
"RTN","PSSDSAPK",224,0)
 ;
"RTN","PSSDSAPK",225,0)
INFERR ;Infusion Rate Height and Weight Errors
"RTN","PSSDSAPK",226,0)
 I $D(PSSDBFDB(PSSDBLP,"HT_ERROR")) S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"HT_ERROR")=""
"RTN","PSSDSAPK",227,0)
 I $D(PSSDBFDB(PSSDBLP,"WT_ERROR")) S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"WT_ERROR")=""
"RTN","PSSDSAPK",228,0)
 Q
"RTN","PSSDSAPK",229,0)
 ;
"RTN","PSSDSAPK",230,0)
 ;
"RTN","PSSDSAPK",231,0)
INFERRS ;
"RTN","PSSDSAPK",232,0)
 I '$D(PSSDBCAZ(PSSDBEB1,"HT_ERROR")),'$D(PSSDBCAZ(PSSDBEB1,"WT_ERROR")) Q
"RTN","PSSDSAPK",233,0)
 I $D(PSSDBCAZ(PSSDBEB1,"WT_ERROR")),$D(PSSDBCAZ(PSSDBEB1,"HT_ERROR")) D EXCPS^PSSDSAPD(14) Q
"RTN","PSSDSAPK",234,0)
 I '$D(PSSDBCAZ(PSSDBEB1,"HT_ERROR")) D EXCPS^PSSDSAPD(13) Q
"RTN","PSSDSAPK",235,0)
 D EXCPS^PSSDSAPD(12)
"RTN","PSSDSAPK",236,0)
 Q
"RTN","PSSDSAPK",237,0)
 ;
"RTN","PSSDSAPK",238,0)
 ;
"RTN","PSSDSAPK",239,0)
GENERRX ;Set General Dosing Guidelines exception
"RTN","PSSDSAPK",240,0)
 ;This code, not being used, was moved from PSSDSEXC to have a record of old functionality, in case we need it again
"RTN","PSSDSAPK",241,0)
 Q
"RTN","PSSDSAPK",242,0)
 ;Since this is the last one, if no Exceptions exist for the RX_NUM, just set TMPs 1 and 2, like in third Exception
"RTN","PSSDSAPK",243,0)
 ;paragraph above. If Exeptions do exist, just set the one entry after incrementing, because you are just
"RTN","PSSDSAPK",244,0)
 ;adding to the REASON list
"RTN","PSSDSAPK",245,0)
 N PSSDWF1,PSSDWF2,PSSDWF3,PSSDWF4
"RTN","PSSDSAPK",246,0)
 S PSSDWF2=0 F PSSDWF1=0:0 S PSSDWF1=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE5,PSSDWF1)) Q:'PSSDWF1  S PSSDWF2=PSSDWF1
"RTN","PSSDSAPK",247,0)
 I 'PSSDWF2 D  Q
"RTN","PSSDSAPK",248,0)
 .I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE5,1)="Dosing Checks could not be performed for Drug: "_$P(PSSDBCAR(PSSDWE5),"^",2)
"RTN","PSSDSAPK",249,0)
 .I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"EXCEPTIONS",1)="Dosing Checks could not be performed for Drug: "_$P(PSSDBCAR(PSSDWE5),"^",2)
"RTN","PSSDSAPK",250,0)
 .I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE5,2)="  General Dosing guidelines are not available"
"RTN","PSSDSAPK",251,0)
 .I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"EXCEPTIONS",2)="  General Dosing guidelines are not available"
"RTN","PSSDSAPK",252,0)
 .;Need to set exception documented in ICD-OTHER PIECES STILL NEED SET, WHAT IF A DOSE YOU CREATED)
"RTN","PSSDSAPK",253,0)
 .S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE5,1)="^^^^^^Dosing Checks could not be performed for Drug: "_$P(PSSDBCAR(PSSDWE5),"^",2)_"^^^"_"General Dosing guidelines are not available"
"RTN","PSSDSAPK",254,0)
 S PSSDWF2=PSSDWF2+1
"RTN","PSSDSAPK",255,0)
 S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE5,PSSDWF2)="^^^^^^Dosing Checks could not be performed for Drug: "_$P(PSSDBCAR(PSSDWE5),"^",2)_"^^^"_"General Dosing guidelines are not available"
"RTN","PSSDSAPK",256,0)
 I PSSDBASA D
"RTN","PSSDSAPK",257,0)
 .S PSSDWF3=0
"RTN","PSSDSAPK",258,0)
 .F PSSDWF4=0:0 S PSSDWF4=$O(^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE5,PSSDWF4)) Q:'PSSDWF4  S PSSDWF3=PSSDWF4
"RTN","PSSDSAPK",259,0)
 .S PSSDWF3=PSSDWF3+1
"RTN","PSSDSAPK",260,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE5,PSSDWF3)="  General Dosing guidelines are not available"
"RTN","PSSDSAPK",261,0)
 I PSSDBASB D
"RTN","PSSDSAPK",262,0)
 .S PSSDWF3=0
"RTN","PSSDSAPK",263,0)
 .F PSSDWF4=0:0 S PSSDWF4=$O(^TMP($J,PSSDBASG,"OUT",PSSDWE5,"EXCEPTIONS",PSSDWF4)) Q:'PSSDWF4  S PSSDWF3=PSSDWF4
"RTN","PSSDSAPK",264,0)
 .S PSSDWF3=PSSDWF3+1
"RTN","PSSDSAPK",265,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"EXCEPTIONS",PSSDWF3)="  General DOsing guidelines are not available"
"RTN","PSSDSAPK",266,0)
 Q
"RTN","PSSDSAPK",267,0)
 ;
"RTN","PSSDSAPK",268,0)
 ;
"RTN","PSSDSAPK",269,0)
MTCH() ;Called from PSSDSAPD, looking for Local Possible Dosages Match
"RTN","PSSDSAPK",270,0)
 N PSSDSLTM
"RTN","PSSDSAPK",271,0)
 I $P(PSSDBNOD,"^")=PSSDSLCL Q 1
"RTN","PSSDSAPK",272,0)
 I $E(PSSDSLCL)=0 S PSSDSLTM=$E(PSSDSLCL,2,$L(PSSDSLCL)) I $L(PSSDSLTM)>0,PSSDSLTM=$P(PSSDBNOD,"^") Q 1
"RTN","PSSDSAPK",273,0)
 I $E(PSSDSLCL)'=0 S PSSDSLTM=0_PSSDSLCL I PSSDSLTM=$P(PSSDBNOD,"^") Q 1
"RTN","PSSDSAPK",274,0)
 Q 0
"RTN","PSSDSAPK",275,0)
 ;
"RTN","PSSDSAPK",276,0)
 ;
"RTN","PSSDSAPK",277,0)
DPOP ;Use Pre release logic to find Dose unit and Numeric Dose
"RTN","PSSDSAPK",278,0)
 N PSSDDPOP,PSSDSLPO
"RTN","PSSDSAPK",279,0)
 S PSSDDPOP=$$EN^PSSDSBBP(PSSDBFDB(PSSDBLP,"DRUG_IEN"),PSSDSLCL)
"RTN","PSSDSAPK",280,0)
 I PSSDDPOP S PSSDBAR("AMN")=$P(PSSDDPOP,"^",2),PSSDBAR("UNIT")=$P($G(^PS(51.24,+$P(PSSDDPOP,"^"),0)),"^",2) S PSSDBFAL=1 Q
"RTN","PSSDSAPK",281,0)
 I $E(PSSDSLCL)=0 S PSSDSLPO=$E(PSSDSLCL,2,$L(PSSDSLCL)) I $L(PSSDSLPO)>0 D  I PSSDDPOP S PSSDBAR("AMN")=$P(PSSDDPOP,"^",2),PSSDBAR("UNIT")=$P($G(^PS(51.24,+$P(PSSDDPOP,"^"),0)),"^",2) S PSSDBFAL=1 Q
"RTN","PSSDSAPK",282,0)
 .S PSSDDPOP=$$EN^PSSDSBBP(PSSDBFDB(PSSDBLP,"DRUG_IEN"),PSSDSLPO)
"RTN","PSSDSAPK",283,0)
 I $E(PSSDSLCL)'=0 S PSSDSLPO=0_PSSDSLCL D  I PSSDDPOP S PSSDBAR("AMN")=$P(PSSDDPOP,"^",2),PSSDBAR("UNIT")=$P($G(^PS(51.24,+$P(PSSDDPOP,"^"),0)),"^",2) S PSSDBFAL=1 Q
"RTN","PSSDSAPK",284,0)
 .S PSSDDPOP=$$EN^PSSDSBBP(PSSDBFDB(PSSDBLP,"DRUG_IEN"),PSSDSLPO)
"RTN","PSSDSAPK",285,0)
 Q
"RTN","PSSDSAPK",286,0)
 ;
"RTN","PSSDSAPK",287,0)
 ;
"RTN","PSSDSAPK",288,0)
FRDR ;Check if Duration exists, and is less than Duration of Schedule
"RTN","PSSDSAPK",289,0)
 I $G(PSSDBAR("TYPE"))="SINGLE DOSE" Q
"RTN","PSSDSAPK",290,0)
 N PSSDRSC1,PSSDRSC2,PSSDRSC3,PSSDRSC4,PSSDRSC5
"RTN","PSSDSAPK",291,0)
 S PSSDRSC1=PSSDBFRB(PSSDBFDB(PSSDBLP,"RX_NUM"),"DRATE") I PSSDRSC1="" Q
"RTN","PSSDSAPK",292,0)
 S PSSDRSC3=$$DRT^PSSDSAPD(PSSDRSC1) I PSSDRSC3'>0 Q
"RTN","PSSDSAPK",293,0)
 S PSSDRSC4=1440/PSSDRSC3
"RTN","PSSDSAPK",294,0)
 S PSSDRSC5=$S($P($G(PSSDBAR("FREQZZ")),"^",2)'="":$P(PSSDBAR("FREQZZ"),"^",2),1:PSSDBAR("FREQ"))
"RTN","PSSDSAPK",295,0)
 I PSSDRSC5="" Q
"RTN","PSSDSAPK",296,0)
 S PSSDRSC2=$$FRCON(PSSDRSC5)
"RTN","PSSDSAPK",297,0)
 I PSSDRSC2,PSSDRSC4,PSSDRSC4>PSSDRSC2 D
"RTN","PSSDSAPK",298,0)
 .S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"FRQD_ERROR")=""
"RTN","PSSDSAPK",299,0)
 .S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"FRQ_ERROR")=""
"RTN","PSSDSAPK",300,0)
 Q
"RTN","PSSDSAPK",301,0)
 ;
"RTN","PSSDSAPK",302,0)
 ;
"RTN","PSSDSAPK",303,0)
NOEXP ;Don't show any exceptions for a drug level error
"RTN","PSSDSAPK",304,0)
 N PSSNOE1,PSSNOE2
"RTN","PSSDSAPK",305,0)
 F PSSNOE1=0:0 S PSSNOE1=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSNOE1)) Q:'PSSNOE1!($D(PSSNOE9(PSSDWE1)))  D
"RTN","PSSDSAPK",306,0)
 .S PSSNOE2=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSNOE1)),"^",10) I PSSNOE2="" S PSSNOE9(PSSDWE1)="" D NOEXPG Q
"RTN","PSSDSAPK",307,0)
 .I PSSNOE2["GCNSEQNO"!(PSSNOE2["Drug not matched to NDF")!(PSSNOE2["No active IV Additive/Solution marked for IV fluid order entry") S PSSNOE9(PSSDWE1)="" D NOEXPS
"RTN","PSSDSAPK",308,0)
 Q
"RTN","PSSDSAPK",309,0)
 ;
"RTN","PSSDSAPK",310,0)
 ;
"RTN","PSSDSAPK",311,0)
NOEXPS ;Set Drug level error
"RTN","PSSDSAPK",312,0)
 I PSSDBASA D
"RTN","PSSDSAPK",313,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,1)=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSNOE1)),"^",7)
"RTN","PSSDSAPK",314,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,2)="  Reason(s): "_$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSNOE1)),"^",10)
"RTN","PSSDSAPK",315,0)
 I PSSDBASB D
"RTN","PSSDSAPK",316,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",1)=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSNOE1)),"^",7)
"RTN","PSSDSAPK",317,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",2)="  Reason(s): "_$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSNOE1)),"^",10)
"RTN","PSSDSAPK",318,0)
 Q
"RTN","PSSDSAPK",319,0)
 ;
"RTN","PSSDSAPK",320,0)
 ;
"RTN","PSSDSAPK",321,0)
NOEXPG ;Set GCNSEQNO exception
"RTN","PSSDSAPK",322,0)
 I PSSDBASA D
"RTN","PSSDSAPK",323,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,1)=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSNOE1)),"^",7)
"RTN","PSSDSAPK",324,0)
 I PSSDBASB D
"RTN","PSSDSAPK",325,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",1)=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSNOE1)),"^",7)
"RTN","PSSDSAPK",326,0)
 Q
"RTN","PSSDSAPM")
0^2^B209948615^B211863558
"RTN","PSSDSAPM",1,0)
PSSDSAPM ;BIR/RTR-Dose Check utilities routine ;09/13/10
"RTN","PSSDSAPM",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,168**;9/30/97;Build 4
"RTN","PSSDSAPM",3,0)
 ;
"RTN","PSSDSAPM",4,0)
 ;
"RTN","PSSDSAPM",5,0)
 ;DRG - returns best Dispense Drug to use for Order Checks when only the Orderable Item is available
"RTN","PSSDSAPM",6,0)
 ;Input:
"RTN","PSSDSAPM",7,0)
 ;   PSSNBOI - Pharmacy orderable Item from #50.7
"RTN","PSSDSAPM",8,0)
 ;   PSSNBPK - package Use,  I for Inpatient, O for Outpatient, X for Non-VA Meds
"RTN","PSSDSAPM",9,0)
 ;Output:
"RTN","PSSDSAPM",10,0)
 ;   nnn;nnn;nnnn - First piece is File 50 Internal Number, Second piece is VA Generic Internal number, Third piece
"RTN","PSSDSAPM",11,0)
 ;   will be the GCNSEQNO number                              
"RTN","PSSDSAPM",12,0)
 ;   Peice 2 will be null if drug not matched to National Drug File
"RTN","PSSDSAPM",13,0)
 ;   Peice 3 will be the GCNSEQNO number, if the NDF match has a GCNSEQNO number
"RTN","PSSDSAPM",14,0)
 ;   0 will be returned if no drug found
"RTN","PSSDSAPM",15,0)
 ;
"RTN","PSSDSAPM",16,0)
 ;heirarcy: (Drug must be active)
"RTN","PSSDSAPM",17,0)
 ;1 - Exact Package Match, matched to NDF with GCNSEQNO
"RTN","PSSDSAPM",18,0)
 ;2 - No package match, but second choice package exists, matched to NDF with GCNSEQNO
"RTN","PSSDSAPM",19,0)
 ;3 - No package match, but third choice package exists, matched to NDF with GCNSEQNO
"RTN","PSSDSAPM",20,0)
 ;4 - No package match, matched to NDF with GCNSEQNO
"RTN","PSSDSAPM",21,0)
 ;5 - Exact Package Match, matched to NDF with no GCNSEQNO
"RTN","PSSDSAPM",22,0)
 ;6 - No package match, but second choice package exists, matched to NDF with no GCNSEQNO
"RTN","PSSDSAPM",23,0)
 ;7 - No package match, but third choice package exists, matched to NDF with no GCNSEQNO
"RTN","PSSDSAPM",24,0)
 ;8 - No package match, matched to NDF with no GCNSEQNO
"RTN","PSSDSAPM",25,0)
 ;9 - Exact Package Match, not matched to NDF
"RTN","PSSDSAPM",26,0)
 ;10 - No package match, but second choice package exists, not matched to NDF
"RTN","PSSDSAPM",27,0)
 ;11 - No package match, but third choice package exists, not matched to NDF
"RTN","PSSDSAPM",28,0)
 ;12 - No package match, not matched to NDF
"RTN","PSSDSAPM",29,0)
 ;
"RTN","PSSDSAPM",30,0)
 ;Second/Third Choice packages:
"RTN","PSSDSAPM",31,0)
 ;Outpatient - U or I, the X
"RTN","PSSDSAPM",32,0)
 ;Inpatient - O, then X
"RTN","PSSDSAPM",33,0)
 ;Non-VA Meds - O, then U or I
"RTN","PSSDSAPM",34,0)
 ;
"RTN","PSSDSAPM",35,0)
 ;PSNBLOW holds current number in array, only reset arrar entry if lower number is found
"RTN","PSSDSAPM",36,0)
 ;PSSNBSTP stops the loop because you found the best possible drug, no need to set PSSNBLOW in this case
"RTN","PSSDSAPM",37,0)
 ;
"RTN","PSSDSAPM",38,0)
DRG(PSSNBOI,PSSNBPK) ;
"RTN","PSSDSAPM",39,0)
 I '$G(PSSNBOI) Q "0;;"
"RTN","PSSDSAPM",40,0)
 I $G(PSSNBPK)'="O",$G(PSSNBPK)'="I",$G(PSSNBPK)'="X" Q "0;;"
"RTN","PSSDSAPM",41,0)
 N PSSNB1,PSSNBRS,PSSNBSTP,PSSNBIN,PSSNBAPP,PSSNBLOW,PSSNBARR,PSSNBAP1,PSSNBARX
"RTN","PSSDSAPM",42,0)
 S PSSNBSTP=0,PSSNBLOW=13
"RTN","PSSDSAPM",43,0)
 S PSSNBRS="0;;"
"RTN","PSSDSAPM",44,0)
 F PSSNB1=0:0 S PSSNB1=$O(^PSDRUG("ASP",PSSNBOI,PSSNB1)) Q:'PSSNB1!(PSSNBSTP)  D:'$$DREX
"RTN","PSSDSAPM",45,0)
 .S PSSNBIN=$P($G(^PSDRUG(PSSNB1,"I")),"^") I PSSNBIN,PSSNBIN<DT Q
"RTN","PSSDSAPM",46,0)
 .S PSSNBAPP=$P($G(^PSDRUG(PSSNB1,2)),"^",3)
"RTN","PSSDSAPM",47,0)
 .S PSSNBAP1=$$GCN
"RTN","PSSDSAPM",48,0)
 .I PSSNBPK="O" D APPO Q
"RTN","PSSDSAPM",49,0)
 .I PSSNBPK="I" D APPI Q
"RTN","PSSDSAPM",50,0)
 .I PSSNBPK="X" D APPX
"RTN","PSSDSAPM",51,0)
 S PSSNBARX=$O(PSSNBARR(0))
"RTN","PSSDSAPM",52,0)
 I PSSNBARX S PSSNBRS=$G(PSSNBARR(PSSNBARX))
"RTN","PSSDSAPM",53,0)
 Q PSSNBRS
"RTN","PSSDSAPM",54,0)
 ;
"RTN","PSSDSAPM",55,0)
 ;
"RTN","PSSDSAPM",56,0)
DREX() ;Quit if drug is exempt from order check
"RTN","PSSDSAPM",57,0)
 I $G(PSSINCFO) Q $$EXMT^PSSDSAPI(PSSNB1)
"RTN","PSSDSAPM",58,0)
 Q $$SUP^PSSDSAPI(PSSNB1)
"RTN","PSSDSAPM",59,0)
 ;
"RTN","PSSDSAPM",60,0)
 ;
"RTN","PSSDSAPM",61,0)
APPO ;Outpatient order
"RTN","PSSDSAPM",62,0)
 I PSSNBAPP["O",$P(PSSNBAP1,"^",3) S PSSNBARR(1)=PSSNBAP1,PSSNBSTP=1 Q
"RTN","PSSDSAPM",63,0)
 Q:PSSNBLOW<3
"RTN","PSSDSAPM",64,0)
 I PSSNBAPP["I"!(PSSNBAPP["U") I $P(PSSNBAP1,"^",3) S PSSNBARR(2)=PSSNBAP1,PSSNBLOW=2 Q
"RTN","PSSDSAPM",65,0)
 Q:PSSNBLOW<4
"RTN","PSSDSAPM",66,0)
 I PSSNBAPP["X",$P(PSSNBAP1,"^",3) S PSSNBARR(3)=PSSNBAP1,PSSNBLOW=3 Q
"RTN","PSSDSAPM",67,0)
 Q:PSSNBLOW<5
"RTN","PSSDSAPM",68,0)
 I $P(PSSNBAP1,"^",3) S PSSNBARR(4)=PSSNBAP1,PSSNBLOW=4 Q
"RTN","PSSDSAPM",69,0)
 Q:PSSNBLOW<6
"RTN","PSSDSAPM",70,0)
 I PSSNBAPP["O",PSSNBAP1 S PSSNBARR(5)=PSSNBAP1,PSSNBLOW=5 Q
"RTN","PSSDSAPM",71,0)
 Q:PSSNBLOW<7
"RTN","PSSDSAPM",72,0)
 I PSSNBAPP["I"!(PSSNBAPP["U") I PSSNBAP1 S PSSNBARR(6)=PSSNBAP1,PSSNBLOW=6 Q
"RTN","PSSDSAPM",73,0)
 Q:PSSNBLOW<8
"RTN","PSSDSAPM",74,0)
 I PSSNBAPP["X",PSSNBAP1 S PSSNBARR(7)=PSSNBAP1,PSSNBLOW=7 Q
"RTN","PSSDSAPM",75,0)
 Q:PSSNBLOW<9
"RTN","PSSDSAPM",76,0)
 I PSSNBAP1 S PSSNBARR(8)=PSSNBAP1,PSSNBLOW=8 Q
"RTN","PSSDSAPM",77,0)
 Q:PSSNBLOW<10
"RTN","PSSDSAPM",78,0)
 I PSSNBAPP["O" S PSSNBARR(9)=PSSNB1_";;",PSSNBLOW=9 Q
"RTN","PSSDSAPM",79,0)
 Q:PSSNBLOW<11
"RTN","PSSDSAPM",80,0)
 I PSSNBAPP["I"!(PSSNBAPP["U") S PSSNBARR(10)=PSSNB1_";;",PSSNBLOW=10 Q
"RTN","PSSDSAPM",81,0)
 Q:PSSNBLOW<12
"RTN","PSSDSAPM",82,0)
 I PSSNBAPP["X" S PSSNBARR(11)=PSSNB1_";;",PSSNBLOW=11 Q
"RTN","PSSDSAPM",83,0)
 Q:PSSNBLOW<13
"RTN","PSSDSAPM",84,0)
 S PSSNBARR(12)=PSSNB1_";;",PSSNBLOW=12
"RTN","PSSDSAPM",85,0)
 Q
"RTN","PSSDSAPM",86,0)
 ;
"RTN","PSSDSAPM",87,0)
APPI ;Inpatient Order
"RTN","PSSDSAPM",88,0)
 I PSSNBAPP["I"!(PSSNBAPP["U") I $P(PSSNBAP1,"^",3) S PSSNBARR(1)=PSSNBAP1,PSSNBSTP=1 Q
"RTN","PSSDSAPM",89,0)
 Q:PSSNBLOW<3
"RTN","PSSDSAPM",90,0)
 I PSSNBAPP["O" I $P(PSSNBAP1,"^",3) S PSSNBARR(2)=PSSNBAP1,PSSNBLOW=2 Q
"RTN","PSSDSAPM",91,0)
 Q:PSSNBLOW<4
"RTN","PSSDSAPM",92,0)
 I PSSNBAPP["X" I $P(PSSNBAP1,"^",3) S PSSNBARR(3)=PSSNBAP1,PSSNBLOW=3 Q
"RTN","PSSDSAPM",93,0)
 Q:PSSNBLOW<5
"RTN","PSSDSAPM",94,0)
 I $P(PSSNBAP1,"^",3) S PSSNBARR(4)=PSSNBAP1,PSSNBLOW=4 Q
"RTN","PSSDSAPM",95,0)
 Q:PSSNBLOW<6
"RTN","PSSDSAPM",96,0)
 I PSSNBAPP["I"!(PSSNBAPP["U") I PSSNBAP1 S PSSNBARR(5)=PSSNBAP1,PSSNBLOW=5 Q
"RTN","PSSDSAPM",97,0)
 Q:PSSNBLOW<7
"RTN","PSSDSAPM",98,0)
 I PSSNBAPP["O" I PSSNBAP1 S PSSNBARR(6)=PSSNBAP1,PSSNBLOW=6 Q
"RTN","PSSDSAPM",99,0)
 Q:PSSNBLOW<8
"RTN","PSSDSAPM",100,0)
 I PSSNBAPP["X" I PSSNBAP1 S PSSNBARR(7)=PSSNBAP1,PSSNBLOW=7 Q
"RTN","PSSDSAPM",101,0)
 Q:PSSNBLOW<9
"RTN","PSSDSAPM",102,0)
 I PSSNBAP1 S PSSNBARR(8)=PSSNBAP1,PSSNBLOW=8 Q
"RTN","PSSDSAPM",103,0)
 Q:PSSNBLOW<10
"RTN","PSSDSAPM",104,0)
 I PSSNBAPP["I"!(PSSNBAPP["U") S PSSNBARR(9)=PSSNB1_";;",PSSNBLOW=9 Q
"RTN","PSSDSAPM",105,0)
 Q:PSSNBLOW<11
"RTN","PSSDSAPM",106,0)
 I PSSNBAPP["O" S PSSNBARR(10)=PSSNB1_";;",PSSNBLOW=10 Q
"RTN","PSSDSAPM",107,0)
 Q:PSSNBLOW<12
"RTN","PSSDSAPM",108,0)
 I PSSNBAPP["X" S PSSNBARR(11)=PSSNB1_";;",PSSNBLOW=11 Q
"RTN","PSSDSAPM",109,0)
 Q:PSSNBLOW<13
"RTN","PSSDSAPM",110,0)
 S PSSNBARR(12)=PSSNB1_";;",PSSNBLOW=12
"RTN","PSSDSAPM",111,0)
 Q
"RTN","PSSDSAPM",112,0)
 ;
"RTN","PSSDSAPM",113,0)
APPX ;Non-VA Meds Order
"RTN","PSSDSAPM",114,0)
 I PSSNBAPP["X",$P(PSSNBAP1,"^",3) S PSSNBARR(1)=PSSNBAP1,PSSNBSTP=1 Q
"RTN","PSSDSAPM",115,0)
 Q:PSSNBLOW<3
"RTN","PSSDSAPM",116,0)
 I PSSNBAPP["O" I $P(PSSNBAP1,"^",3) S PSSNBARR(2)=PSSNBAP1,PSSNBLOW=2 Q
"RTN","PSSDSAPM",117,0)
 Q:PSSNBLOW<4
"RTN","PSSDSAPM",118,0)
 I PSSNBAPP["I"!PSSNBAPP["U" I $P(PSSNBAP1,"^",3) S PSSNBARR(3)=PSSNBAP1,PSSNBLOW=3 Q
"RTN","PSSDSAPM",119,0)
 Q:PSSNBLOW<5
"RTN","PSSDSAPM",120,0)
 I $P(PSSNBAP1,"^",3) S PSSNBARR(4)=PSSNBAP1,PSSNBLOW=4 Q
"RTN","PSSDSAPM",121,0)
 Q:PSSNBLOW<6
"RTN","PSSDSAPM",122,0)
 I PSSNBAPP["X",PSSNBAP1 S PSSNBARR(5)=PSSNBAP1,PSSNBLOW=5 Q
"RTN","PSSDSAPM",123,0)
 Q:PSSNBLOW<7
"RTN","PSSDSAPM",124,0)
 I PSSNBAPP["O" I PSSNBAP1 S PSSNBARR(6)=PSSNBAP1,PSSNBLOW=6 Q
"RTN","PSSDSAPM",125,0)
 Q:PSSNBLOW<8
"RTN","PSSDSAPM",126,0)
 I PSSNBAPP["I"!(PSSNBAPP["U") I PSSNBAP1 S PSSNBARR(7)=PSSNBAP1,PSSNBLOW=7 Q
"RTN","PSSDSAPM",127,0)
 Q:PSSNBLOW<9
"RTN","PSSDSAPM",128,0)
 I PSSNBAP1 S PSSNBARR(8)=PSSNBAP1,PSSNBLOW=8 Q
"RTN","PSSDSAPM",129,0)
 Q:PSSNBLOW<10
"RTN","PSSDSAPM",130,0)
 I PSSNBAPP["X" S PSSNBARR(9)=PSSNB1_";;",PSSNBLOW=9 Q
"RTN","PSSDSAPM",131,0)
 Q:PSSNBLOW<11
"RTN","PSSDSAPM",132,0)
 I PSSNBAPP["O" S PSSNBARR(10)=PSSNB1_";;",PSSNBLOW=10 Q
"RTN","PSSDSAPM",133,0)
 Q:PSSNBLOW<12
"RTN","PSSDSAPM",134,0)
 I PSSNBAPP["I"!(PSSNBAPP["U") S PSSNBARR(11)=PSSNB1_";;",PSSNBLOW=11 Q
"RTN","PSSDSAPM",135,0)
 Q:PSSNBLOW<13
"RTN","PSSDSAPM",136,0)
 S PSSNBARR(12)=PSSNB1_";;",PSSNBLOW=12
"RTN","PSSDSAPM",137,0)
 Q
"RTN","PSSDSAPM",138,0)
 ;
"RTN","PSSDSAPM",139,0)
GCN() ;Return 0 for not matched, 1 for matched with no GCNSEQNO, 1^1 for matched with a GCNSEQNO
"RTN","PSSDSAPM",140,0)
 N PSSNBGC1,PSSNBGC3,PSSNBGRS
"RTN","PSSDSAPM",141,0)
 S PSSNBGC1=$P($G(^PSDRUG(PSSNB1,"ND")),"^"),PSSNBGC3=$P($G(^PSDRUG(PSSNB1,"ND")),"^",3)
"RTN","PSSDSAPM",142,0)
 I 'PSSNBGC1!('PSSNBGC3) Q 0
"RTN","PSSDSAPM",143,0)
 S PSSNBGRS=$$PROD0^PSNAPIS(PSSNBGC1,PSSNBGC3)
"RTN","PSSDSAPM",144,0)
 I $P(PSSNBGRS,"^",7) Q PSSNB1_";"_PSSNBGC1_";"_$P(PSSNBGRS,"^",7)
"RTN","PSSDSAPM",145,0)
 Q PSSNB1_";"_PSSNBGC1
"RTN","PSSDSAPM",146,0)
 ;
"RTN","PSSDSAPM",147,0)
 ;
"RTN","PSSDSAPM",148,0)
MLT ;Multi Ingredient check called from PSSDSAPD
"RTN","PSSDSAPM",149,0)
 D ITEM^PSSDSAPK D:'PSSDBFAL NUM^PSSDSAPL
"RTN","PSSDSAPM",150,0)
 I '$G(PSSDBIFG) Q
"RTN","PSSDSAPM",151,0)
 N PSSMLT1,PSSMLT2,PSSMLT3,PSSMLG4,DA
"RTN","PSSDSAPM",152,0)
 S PSSMLT1=$P($G(^PSDRUG(PSSDBIFG,"ND")),"^"),PSSMLT3=$P($G(^PSDRUG(PSSDBIFG,"ND")),"^",3)
"RTN","PSSDSAPM",153,0)
 I 'PSSMLT1!('PSSMLT3) D MLTS Q
"RTN","PSSDSAPM",154,0)
 S PSSMLT2=$$PSJING^PSNAPIS(PSSMLT1,PSSMLT3,.PSSMLG4) I +PSSMLT2>1 D MLTS Q
"RTN","PSSDSAPM",155,0)
 I $$MLTSU D MLTS
"RTN","PSSDSAPM",156,0)
 Q
"RTN","PSSDSAPM",157,0)
 ;
"RTN","PSSDSAPM",158,0)
 ;
"RTN","PSSDSAPM",159,0)
MLTS ;
"RTN","PSSDSAPM",160,0)
 K PSSDBAR("AMN"),PSSDBAR("UNIT")
"RTN","PSSDSAPM",161,0)
 S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"MUING")=""
"RTN","PSSDSAPM",162,0)
 Q
"RTN","PSSDSAPM",163,0)
 ;
"RTN","PSSDSAPM",164,0)
 ;
"RTN","PSSDSAPM",165,0)
MLTSU() ;
"RTN","PSSDSAPM",166,0)
 N X,Y,PSSMKT2,PSSMKT5,PSSMKT6,PSSMKT7
"RTN","PSSDSAPM",167,0)
 S PSSMKT2=$$DFSU^PSNAPIS(PSSMLT1,PSSMLT3)
"RTN","PSSDSAPM",168,0)
 S PSSMKT5=$P(PSSMKT2,"^",6) I PSSMKT5="" Q 1
"RTN","PSSDSAPM",169,0)
 S PSSMKT6=$$UNITM(PSSMKT5) I PSSMKT6'="" Q 1
"RTN","PSSDSAPM",170,0)
 S PSSMKT7=$$UNIT^PSSDSAPI(PSSMKT5) I PSSMKT7="" Q 1
"RTN","PSSDSAPM",171,0)
 Q 0
"RTN","PSSDSAPM",172,0)
 ;
"RTN","PSSDSAPM",173,0)
 ;
"RTN","PSSDSAPM",174,0)
UNITM(PSSXUTUN) ;Find First DataBank Unit, can't do DIC Lookup because of exact match check
"RTN","PSSDSAPM",175,0)
 ;Returns Null or First DataBank Unit for text passed in
"RTN","PSSDSAPM",176,0)
 ;Not a true conversion, because if Unit contains "/", we convert only piece 1
"RTN","PSSDSAPM",177,0)
 ;Only returns data if Dose Form Indicator is Set to Yes
"RTN","PSSDSAPM",178,0)
 N PSSXUTX,PSSXUTZ,PSSXUTAA,PSSXUTFL
"RTN","PSSDSAPM",179,0)
 S PSSXUTFL=0 I $G(PSSXUTUN)="" S PSSXUTZ="" G UNITDX
"RTN","PSSDSAPM",180,0)
 S PSSXUTAA=$$UP^XLFSTR(PSSXUTUN)
"RTN","PSSDSAPM",181,0)
UNITDP ;
"RTN","PSSDSAPM",182,0)
 K PSSXUTZ S PSSXUTX=$O(^PS(51.24,"B",PSSXUTAA,0)) I PSSXUTX,'$$SCREEN^XTID(51.24,.01,PSSXUTX_",") S PSSXUTZ=$P($G(^PS(51.24,PSSXUTX,0)),"^") I PSSXUTZ'="",$P($G(^PS(51.24,PSSXUTX,0)),"^",3) G UNITDX
"RTN","PSSDSAPM",183,0)
 K PSSXUTZ S PSSXUTX=$O(^PS(51.24,"C",PSSXUTAA,0)) I PSSXUTX,'$$SCREEN^XTID(51.24,.01,PSSXUTX_",") S PSSXUTZ=$P($G(^PS(51.24,PSSXUTX,0)),"^") I PSSXUTZ'="",$P($G(^PS(51.24,PSSXUTX,0)),"^",3) G UNITDX
"RTN","PSSDSAPM",184,0)
 K PSSXUTZ S PSSXUTX=$O(^PS(51.24,"D",PSSXUTAA,0)) I PSSXUTX,'$$SCREEN^XTID(51.24,.01,PSSXUTX_",") S PSSXUTZ=$P($G(^PS(51.24,PSSXUTX,0)),"^") I PSSXUTZ'="",$P($G(^PS(51.24,PSSXUTX,0)),"^",3) G UNITDX
"RTN","PSSDSAPM",185,0)
 K PSSXUTZ I 'PSSXUTFL,$G(PSSXUTUN)["/" S PSSXUTFL=1,PSSXUTAA=$P(PSSXUTUN,"/"),PSSXUTAA=$$UP^XLFSTR(PSSXUTAA) G:PSSXUTAA'="" UNITDP
"RTN","PSSDSAPM",186,0)
UNITDX ;
"RTN","PSSDSAPM",187,0)
 Q $G(PSSXUTZ)
"RTN","PSSDSAPM",188,0)
 ;
"RTN","PSSDSAPM",189,0)
 ;
"RTN","PSSDSAPM",190,0)
MLTNO ;
"RTN","PSSDSAPM",191,0)
 I $D(PSSDBCAZ(PSSDBKLP,"MUING")) S $P(PSSDBCAR(PSSDBKLP),"^",7)=1
"RTN","PSSDSAPM",192,0)
 Q
"RTN","PSSDSAPM",193,0)
 ;
"RTN","PSSDSAPM",194,0)
 ;
"RTN","PSSDSAPM",195,0)
MLTNP ;
"RTN","PSSDSAPM",196,0)
 I $D(PSSDBCAZ(PSSDBRLS,"MUING")) S $P(PSSDBCAR(PSSDBRLS),"^",7)=1
"RTN","PSSDSAPM",197,0)
 Q
"RTN","PSSDSAPM",198,0)
 ;
"RTN","PSSDSAPM",199,0)
 ;
"RTN","PSSDSAPM",200,0)
FDRUG ; Find drug, called from PSSDSAPD
"RTN","PSSDSAPM",201,0)
 N PSSINCFO S PSSINCFO=1
"RTN","PSSDSAPM",202,0)
 S PSSDBIFL=1,PSSDBIFG=$$DRG^PSSDSAPK(PSSDBFDB("OI"),$G(PSSDBFDB("PACKAGE")),$G(PSSDBDS(PSSDBLP,"MR_IEN")),$G(PSSDBFDB("OI_USAGE")))
"RTN","PSSDSAPM",203,0)
 I 'PSSDBIFG S PSSDBIFG=$$DRG(PSSDBFDB("OI"),$G(PSSDBFDB("PACKAGE"))) S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"NO_DRUG")="" S PSSDBIFG=$P(PSSDBIFG,";")
"RTN","PSSDSAPM",204,0)
 Q
"RTN","PSSDSAPM",205,0)
 ;
"RTN","PSSDSAPM",206,0)
 ;
"RTN","PSSDSAPM",207,0)
INERR ;Set OI error
"RTN","PSSDSAPM",208,0)
 N PSSNOOIX
"RTN","PSSDSAPM",209,0)
 S PSSNOOIX=$G(PSSDBFDB(PSSDBLP,"OI_ERROR",PSSDBFDB(PSSDBLP,"DRUG_NM")))
"RTN","PSSDSAPM",210,0)
 I PSSNOOIX'="" S ^TMP($J,PSSDBASE,"IN","EXCEPTIONS","OI",PSSDBFDB(PSSDBLP,"RX_NUM"))=$P(PSSNOOIX,"^")_"^"_$P(PSSNOOIX,"^",2)
"RTN","PSSDSAPM",211,0)
 Q
"RTN","PSSDSAPM",212,0)
 ;
"RTN","PSSDSAPM",213,0)
 ;
"RTN","PSSDSAPM",214,0)
FRQE ;Set Frequency error called from PSSDSAPD
"RTN","PSSDSAPM",215,0)
 D INFERR^PSSDSAPK,FRDR^PSSDSAPK I $D(PSSDBFDB(PSSDBLP,"FRQ_ERROR")) S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"FRQ_ERROR")=""
"RTN","PSSDSAPM",216,0)
 Q
"RTN","PSSDSAPM",217,0)
 ;
"RTN","PSSDSAPM",218,0)
 ;
"RTN","PSSDSAPM",219,0)
INFUE ;Set Infusion rate error from PSSDSAPD
"RTN","PSSDSAPM",220,0)
 I $D(PSSDBFDB(PSSDBLP,"INF_ERROR")) S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"INF_ERROR")=""
"RTN","PSSDSAPM",221,0)
 Q
"RTN","PSSDSAPM",222,0)
 ;
"RTN","PSSDSAPM",223,0)
 ;
"RTN","PSSDSAPM",224,0)
ERST ;Set Dosing Sequences into error summary list
"RTN","PSSDSAPM",225,0)
 N PSSWSB1,PSSWSB2
"RTN","PSSDSAPM",226,0)
 F PSSDBEQ3=0:0 S PSSDBEQ3=$O(PSSDBEQ2(PSSDBEQ3)) Q:'PSSDBEQ3  S PSSDBCAX(PSSDBRLS,PSSDBEQ3)="" I $O(PSSDBXAX(PSSDBEQ3,""))'="",$E(PSSDBASE,1,3)'="PSJ" D
"RTN","PSSDSAPM",227,0)
 .S PSSWSB1="",PSSWSB2=0 F  S PSSWSB1=$O(PSSDBXAX(PSSDBEQ3,PSSWSB1)) Q:PSSWSB1=""!($G(PSSDBCAX(PSSDBRLS,PSSDBEQ3))["All")  S PSSWSB2=PSSWSB2+1 D
"RTN","PSSDSAPM",228,0)
 ..I PSSDBEQ3=5!(PSSDBEQ3=6)!(PSSDBEQ3=8) S PSSDBCAX(PSSDBRLS,PSSDBEQ3)=" (All" Q
"RTN","PSSDSAPM",229,0)
 ..I PSSWSB2=1 S PSSDBCAX(PSSDBRLS,PSSDBEQ3)=" (DOSE SEQ "_$P(PSSWSB1,";",4) Q
"RTN","PSSDSAPM",230,0)
 ..S PSSDBCAX(PSSDBRLS,PSSDBEQ3)=PSSDBCAX(PSSDBRLS,PSSDBEQ3)_", "_$P(PSSWSB1,";",4)
"RTN","PSSDSAPM",231,0)
 .S PSSDBCAX(PSSDBRLS,PSSDBEQ3)=PSSDBCAX(PSSDBRLS,PSSDBEQ3)_")"
"RTN","PSSDSAPM",232,0)
 Q
"RTN","PSSDSAPM",233,0)
 ;
"RTN","PSSDSAPM",234,0)
 ;
"RTN","PSSDSAPM",235,0)
PAT ;
"RTN","PSSDSAPM",236,0)
 N DFN,VADM,VAPTYP,VAHOW,VAROOT,VAERR,VA,X1,X2,X,%Y,PSSDBWT,PSSDBWTX,PSSDBHT,PSSDBHTX,GMRVSTR,PSSDBBSA,PSSDBATX
"RTN","PSSDSAPM",237,0)
 S DFN=PSSDBDFN,PSSDBATX=0
"RTN","PSSDSAPM",238,0)
 D DEM^VADPT
"RTN","PSSDSAPM",239,0)
 K X S X2=$P(VADM(3),"^"),X1=DT I X1,X2 D ^%DTC S PSSDBATX=X
"RTN","PSSDSAPM",240,0)
 S ^TMP($J,PSSDBASE,"IN","DOSE","AGE")=PSSDBATX
"RTN","PSSDSAPM",241,0)
 S DFN=PSSDBDFN
"RTN","PSSDSAPM",242,0)
 S (PSSDBWTX,PSSDBHTX,PSSDBBSA)=0
"RTN","PSSDSAPM",243,0)
 S GMRVSTR="WT" K X D EN6^GMRVUTL
"RTN","PSSDSAPM",244,0)
 S PSSDBWT=$P(X,"^",8) I PSSDBWT S PSSDBWTX=PSSDBWT/2.2
"RTN","PSSDSAPM",245,0)
 S ^TMP($J,PSSDBASE,"IN","DOSE","WT")=$G(PSSDBWTX)
"RTN","PSSDSAPM",246,0)
 S DFN=PSSDBDFN
"RTN","PSSDSAPM",247,0)
 S GMRVSTR="HT" K X D EN6^GMRVUTL
"RTN","PSSDSAPM",248,0)
 S PSSDBHT=$P(X,"^",8) I PSSDBHT S PSSDBHTX=.0254*PSSDBHT
"RTN","PSSDSAPM",249,0)
 ;Using DuBios formula for BSA calculation, and sending in 2 decimal places
"RTN","PSSDSAPM",250,0)
 I $G(PSSDBWTX),$G(PSSDBHTX) S PSSDBBSA=.20247*(PSSDBHTX**.725)*(PSSDBWTX**.425)
"RTN","PSSDSAPM",251,0)
 ;I $G(PSSDBWTX),$G(PSSDBHTX) S PSSDBBSA=$J((((PSSDBWTX*PSSDBHTX)/3600)**.5),0,2)    Mosteller BSA Formula
"RTN","PSSDSAPM",252,0)
 S ^TMP($J,PSSDBASE,"IN","DOSE","BSA")=$G(PSSDBBSA)
"RTN","PSSDSAPM",253,0)
 Q
"RTN","PSSDSAPM",254,0)
 ;
"RTN","PSSDSAPM",255,0)
 ;
"RTN","PSSDSAPM",256,0)
ADDCT ;Add counter to output globals so data appears in correct order for more than 9 Dosing Sequences
"RTN","PSSDSAPM",257,0)
 ;I PSSDBASA D ADDCTA  ;Remove comment when CPRS is ready to convert to new output, to show messages in Sequence order
"RTN","PSSDSAPM",258,0)
 I PSSDBASB D ADDCTB
"RTN","PSSDSAPM",259,0)
 Q
"RTN","PSSDSAPM",260,0)
 ;
"RTN","PSSDSAPM",261,0)
 ;
"RTN","PSSDSAPM",262,0)
ADDCTA ;Add counter to CPRS global
"RTN","PSSDSAPM",263,0)
 I '$D(^TMP($J,PSSDBASF)) Q 
"RTN","PSSDSAPM",264,0)
 N PSSJW1,PSSJW2,PSSJW3,PSSJW4,PSSJW5,PSSJW6
"RTN","PSSDSAPM",265,0)
 K ^TMP($J,"PSSJWTM1") M ^TMP($J,"PSSJWTM1")=^TMP($J,PSSDBASF) K ^TMP($J,PSSDBASF)
"RTN","PSSDSAPM",266,0)
 ;
"RTN","PSSDSAPM",267,0)
 S PSSJW1="" F  S PSSJW1=$O(^TMP($J,"PSSJWTM1","OUT","DOSE","ERROR",PSSJW1)) Q:PSSJW1=""  D
"RTN","PSSDSAPM",268,0)
 .S PSSJW2="" F  S PSSJW2=$O(^TMP($J,"PSSJWTM1","OUT","DOSE","ERROR",PSSJW1,PSSJW2)) Q:PSSJW2=""  D
"RTN","PSSDSAPM",269,0)
 ..S PSSJW3=$P(PSSJW1,";",4)
"RTN","PSSDSAPM",270,0)
 ..S PSSJW4=$G(^TMP($J,"PSSJWTM1","OUT","DOSE","ERROR",PSSJW1,PSSJW2,"MSG"))
"RTN","PSSDSAPM",271,0)
 ..S PSSJW5=$G(^TMP($J,"PSSJWTM1","OUT","DOSE","ERROR",PSSJW1,PSSJW2,"TEXT"))
"RTN","PSSDSAPM",272,0)
 ..I $D(^TMP($J,"PSSJWTM1","OUT","DOSE","ERROR",PSSJW1,PSSJW2,"MSG")) S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSJW3,PSSJW1,PSSJW2,"MSG")=PSSJW4
"RTN","PSSDSAPM",273,0)
 ..I $D(^TMP($J,"PSSJWTM1","OUT","DOSE","ERROR",PSSJW1,PSSJW2,"TEXT")) S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSJW3,PSSJW1,PSSJW2,"TEXT")=PSSJW5
"RTN","PSSDSAPM",274,0)
 ;
"RTN","PSSDSAPM",275,0)
 S PSSJW1="" F  S PSSJW1=$O(^TMP($J,"PSSJWTM1","OUT","EXCEPTIONS","DOSE",PSSJW1)) Q:PSSJW1=""  D
"RTN","PSSDSAPM",276,0)
 .S PSSJW2="" F  S PSSJW2=$O(^TMP($J,"PSSJWTM1","OUT","EXCEPTIONS","DOSE",PSSJW1,PSSJW2)) Q:PSSJW2=""  D
"RTN","PSSDSAPM",277,0)
 ..S PSSJW3=$P(PSSJW1,";",4)
"RTN","PSSDSAPM",278,0)
 ..S PSSJW4=$G(^TMP($J,"PSSJWTM1","OUT","EXCEPTIONS","DOSE",PSSJW1,PSSJW2))
"RTN","PSSDSAPM",279,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSJW3,PSSJW1,PSSJW2)=PSSJW4
"RTN","PSSDSAPM",280,0)
 ;
"RTN","PSSDSAPM",281,0)
 S PSSJW1="" F  S PSSJW1=$O(^TMP($J,"PSSJWTM1","OUT","DOSE",PSSJW1)) Q:PSSJW1=""  I PSSJW1'="ERROR" D
"RTN","PSSDSAPM",282,0)
 .S PSSJW2="" F  S PSSJW2=$O(^TMP($J,"PSSJWTM1","OUT","DOSE",PSSJW1,PSSJW2)) Q:PSSJW2=""  D
"RTN","PSSDSAPM",283,0)
 ..S PSSJW3="" F  S PSSJW3=$O(^TMP($J,"PSSJWTM1","OUT","DOSE",PSSJW1,PSSJW2,PSSJW3)) Q:PSSJW3=""  D
"RTN","PSSDSAPM",284,0)
 ...S PSSJW4="" F  S PSSJW4=$O(^TMP($J,"PSSJWTM1","OUT","DOSE",PSSJW1,PSSJW2,PSSJW3,"MESSAGE",PSSJW4)) Q:PSSJW4=""  D
"RTN","PSSDSAPM",285,0)
 ....S PSSJW5=$P(PSSJW1,";",4)
"RTN","PSSDSAPM",286,0)
 ....S PSSJW6=$G(^TMP($J,"PSSJWTM1","OUT","DOSE",PSSJW1,PSSJW2,PSSJW3,"MESSAGE",PSSJW4))
"RTN","PSSDSAPM",287,0)
 ....S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSJW5,PSSJW1,PSSJW2,PSSJW3,"MESSAGE",PSSJW4)=PSSJW6
"RTN","PSSDSAPM",288,0)
 ;
"RTN","PSSDSAPM",289,0)
 K ^TMP($J,"PSSJWTM1")
"RTN","PSSDSAPM",290,0)
 Q
"RTN","PSSDSAPM",291,0)
 ;
"RTN","PSSDSAPM",292,0)
 ;
"RTN","PSSDSAPM",293,0)
ADDCTB ;Add counter to Pharmacy global
"RTN","PSSDSAPM",294,0)
 I '$D(^TMP($J,PSSDBASG)) Q 
"RTN","PSSDSAPM",295,0)
 N PSSJW7,PSSJW8,PSSJW9,PSSJWNUM,PSSJWVAL
"RTN","PSSDSAPM",296,0)
 K ^TMP($J,"PSSJWTM2") M ^TMP($J,"PSSJWTM2")=^TMP($J,PSSDBASG) K ^TMP($J,PSSDBASG)
"RTN","PSSDSAPM",297,0)
 ;
"RTN","PSSDSAPM",298,0)
 S PSSJW7="" F  S PSSJW7=$O(^TMP($J,"PSSJWTM2","OUT",PSSJW7)) Q:PSSJW7=""  D
"RTN","PSSDSAPM",299,0)
 .S PSSJWNUM=$P(PSSJW7,";",4)
"RTN","PSSDSAPM",300,0)
 .S PSSJW8="" F  S PSSJW8=$O(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"ERROR",PSSJW8)) Q:PSSJW8=""  D
"RTN","PSSDSAPM",301,0)
 ..I $D(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"ERROR",PSSJW8,"MSG")) S ^TMP($J,PSSDBASG,"OUT",PSSJWNUM,PSSJW7,"ERROR",PSSJW8,"MSG")=$G(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"ERROR",PSSJW8,"MSG"))
"RTN","PSSDSAPM",302,0)
 ..I $D(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"ERROR",PSSJW8,"TEXT")) S ^TMP($J,PSSDBASG,"OUT",PSSJWNUM,PSSJW7,"ERROR",PSSJW8,"TEXT")=$G(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"ERROR",PSSJW8,"TEXT"))
"RTN","PSSDSAPM",303,0)
 .;
"RTN","PSSDSAPM",304,0)
 .S PSSJW8="" F  S PSSJW8=$O(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"EXCEPTIONS",PSSJW8)) Q:PSSJW8=""  D
"RTN","PSSDSAPM",305,0)
 ..S PSSJW9=$G(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"EXCEPTIONS",PSSJW8))
"RTN","PSSDSAPM",306,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSJWNUM,PSSJW7,"EXCEPTIONS",PSSJW8)=PSSJW9
"RTN","PSSDSAPM",307,0)
 .;
"RTN","PSSDSAPM",308,0)
 .S PSSJW8="" F  S PSSJW8=$O(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"MESSAGE",PSSJW8)) Q:PSSJW8=""  D
"RTN","PSSDSAPM",309,0)
 ..S PSSJW9="" F  S PSSJW9=$O(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"MESSAGE",PSSJW8,PSSJW9)) Q:PSSJW9=""  D
"RTN","PSSDSAPM",310,0)
 ...S PSSJWVAL=$G(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"MESSAGE",PSSJW8,PSSJW9))
"RTN","PSSDSAPM",311,0)
 ...S ^TMP($J,PSSDBASG,"OUT",PSSJWNUM,PSSJW7,"MESSAGE",PSSJW8,PSSJW9)=PSSJWVAL
"RTN","PSSDSAPM",312,0)
 ; 
"RTN","PSSDSAPM",313,0)
 K ^TMP($J,"PSSJWTM2")
"RTN","PSSDSAPM",314,0)
 Q
"RTN","PSSDSAPM",315,0)
 ;
"RTN","PSSDSAPM",316,0)
 ;
"RTN","PSSDSAPM",317,0)
DSP(PSSDBDS,PSSDBFDB) ;Return Dose and Dose Unit to Inpatient for complex order display
"RTN","PSSDSAPM",318,0)
 ;Return value set into the parameter 1 as "DRG_DISP" 
"RTN","PSSDSAPM",319,0)
 N PSSDBAR,PSSINDSP,PSSIND1,PSSIND2,PSSIND3,PSSDSLCL,PSSDBNOD,PSSDBXP,PSSDBLPD,PSSDSXTD,PSSDBNT,PSSDBFAL,PSSDBLP,PSSDBIFL
"RTN","PSSDSAPM",320,0)
 S PSSDBLP="" F  S PSSDBLP=$O(PSSDBDS(PSSDBLP)) Q:PSSDBLP=""  D
"RTN","PSSDSAPM",321,0)
 .S PSSINDSP="",(PSSDBLPD,PSSDBFAL,PSSDBIFL)=0 K PSSDBAR
"RTN","PSSDSAPM",322,0)
 .I $D(PSSDBFDB(PSSDBLP,"DOSE_AMT")),$D(PSSDBFDB(PSSDBLP,"DOSE_UNIT")) S PSSINDSP=PSSDBFDB(PSSDBLP,"DOSE_AMT")_"^"_PSSDBFDB(PSSDBLP,"DOSE_UNIT") D DSPL Q
"RTN","PSSDSAPM",323,0)
 .I $G(PSSDBDS(PSSDBLP,"DRG_AMT")),$G(PSSDBDS(PSSDBLP,"DRG_UNIT"))'="" D
"RTN","PSSDSAPM",324,0)
 ..S PSSIND1=$S(PSSDBDS(PSSDBLP,"DRG_UNIT")["/":$P(PSSDBDS(PSSDBLP,"DRG_UNIT"),"/"),1:PSSDBDS(PSSDBLP,"DRG_UNIT"))
"RTN","PSSDSAPM",325,0)
 ..S PSSIND1=$$UP^XLFSTR(PSSIND1)
"RTN","PSSDSAPM",326,0)
 ..S PSSIND2=$$UNIT^PSSDSAPI(PSSIND1)
"RTN","PSSDSAPM",327,0)
 ..I PSSIND2'="" S PSSINDSP=PSSDBDS(PSSDBLP,"DRG_AMT")_"^"_PSSIND2 D DSPL S PSSDBFAL=1
"RTN","PSSDSAPM",328,0)
 .I PSSDBFAL Q
"RTN","PSSDSAPM",329,0)
 .I '$G(PSSDBFDB(PSSDBLP,"DRUG_IEN")) S PSSDBDS(PSSDBLP,"DRG_DISP")="" Q
"RTN","PSSDSAPM",330,0)
 .;"DOSE" Node should only come from CPRS, for selected Local Possible Dosage
"RTN","PSSDSAPM",331,0)
 .S PSSDSLCL=$S($G(PSSDBDS(PSSDBLP,"DOSE"))'="":$P($G(PSSDBDS(PSSDBLP,"DOSE")),"&",5),1:$G(PSSDBDS(PSSDBLP,"DO")))
"RTN","PSSDSAPM",332,0)
 .I PSSDSLCL'="" S PSSIND3=0 D
"RTN","PSSDSAPM",333,0)
 ..F PSSDBXP=0:0 S PSSDBXP=$O(^PSDRUG(PSSDBFDB(PSSDBLP,"DRUG_IEN"),"DOS2",PSSDBXP)) Q:'PSSDBXP!(PSSIND3)  D
"RTN","PSSDSAPM",334,0)
 ...S PSSDBNOD=$G(^PSDRUG(PSSDBFDB(PSSDBLP,"DRUG_IEN"),"DOS2",PSSDBXP,0))
"RTN","PSSDSAPM",335,0)
 ...I $$MTCH^PSSDSAPK S PSSDBLPD=1 I $P(PSSDBNOD,"^",5),$P(PSSDBNOD,"^",6)'="" D
"RTN","PSSDSAPM",336,0)
 ....S PSSDSXTD=+$P(PSSDBNOD,"^",5) I PSSDSXTD,$$SCREEN^XTID(51.24,.01,PSSDSXTD_",") Q
"RTN","PSSDSAPM",337,0)
 ....S PSSDBNT=$P($G(^PS(51.24,+$P(PSSDBNOD,"^",5),0)),"^",2)
"RTN","PSSDSAPM",338,0)
 ....I PSSDBNT'="" S PSSINDSP=$P(PSSDBNOD,"^",6)_"^"_PSSDBNT,(PSSIND3,PSSDBFAL)=1
"RTN","PSSDSAPM",339,0)
 .I PSSDBFAL D DSPL Q
"RTN","PSSDSAPM",340,0)
 .I PSSDBLPD D DPOP^PSSDSAPK I PSSDBFAL S PSSINDSP=PSSDBAR("AMN")_"^"_PSSDBAR("UNIT") D DSPL Q
"RTN","PSSDSAPM",341,0)
 .D ITEM^PSSDSAPK I PSSDBFAL S PSSINDSP=PSSDBAR("AMN")_"^"_PSSDBAR("UNIT") D DSPL Q
"RTN","PSSDSAPM",342,0)
 .D NUM^PSSDSAPL I $G(PSSDBAR("AMN"))'="",$G(PSSDBAR("UNIT"))'="" S PSSINDSP=PSSDBAR("AMN")_"^"_PSSDBAR("UNIT") D DSPL Q
"RTN","PSSDSAPM",343,0)
 .S PSSDBDS(PSSDBLP,"DRG_DISP")=""
"RTN","PSSDSAPM",344,0)
 Q
"RTN","PSSDSAPM",345,0)
 ;
"RTN","PSSDSAPM",346,0)
 ;
"RTN","PSSDSAPM",347,0)
DSPL ;Add leading zero
"RTN","PSSDSAPM",348,0)
 I $E(PSSINDSP)="." S PSSINDSP="0"_PSSINDSP
"RTN","PSSDSAPM",349,0)
 S PSSDBDS(PSSDBLP,"DRG_DISP")=PSSINDSP
"RTN","PSSDSAPM",350,0)
 Q
"RTN","PSSEN168")
0^^B297175^n/a
"RTN","PSSEN168",1,0)
PSSEN168 ;BIR/RTR-Environment check routine for patch PSS*1*168 ;9/18/11
"RTN","PSSEN168",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**168**;9/30/07;Build 4
"RTN","PSSEN168",3,0)
 ;
"RTN","PSSEN168",4,0)
 I $$PATCH^XPDUTL("PSO*7.0*379") Q
"RTN","PSSEN168",5,0)
 I $E($G(^XMB("NETNAME")),1,8)="CMOP-NAT" Q
"RTN","PSSEN168",6,0)
 W !!,"Patch PSO*7.0*379 is required, aborting install.",!
"RTN","PSSEN168",7,0)
 S XPDABORT=1
"RTN","PSSEN168",8,0)
 Q
"RTN","PSSHRIT")
0^4^B157119688^B156393255
"RTN","PSSHRIT",1,0)
PSSHRIT ;WOIFO/SG,PO - Transmits a "ping" to determine if FDB server is down and record the down time ;7/30/2008
"RTN","PSSHRIT",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**136,168**;9/30/97;Build 4
"RTN","PSSHRIT",3,0)
 ;
"RTN","PSSHRIT",4,0)
 ;External reference to IN^PSSHRQ2 supported by DBIA 5369
"RTN","PSSHRIT",5,0)
 ;
"RTN","PSSHRIT",6,0)
 Q
"RTN","PSSHRIT",7,0)
PINGCHK ; do ping test, if not passed record it and send a message.
"RTN","PSSHRIT",8,0)
 ; Called from PSS INTERFACE SCHEDULER option
"RTN","PSSHRIT",9,0)
 N STATUS
"RTN","PSSHRIT",10,0)
 F  L +^PS(59.74,"PINGCHK^PSSHRIT"):1 Q:$T
"RTN","PSSHRIT",11,0)
 S STATUS=$$PINGTST()
"RTN","PSSHRIT",12,0)
 S STATUS=$$PINGFILE(STATUS)
"RTN","PSSHRIT",13,0)
 I STATUS=-1 D SMSGDWN   ; if failed for the first time (a new entry created) send a message that interface is down.
"RTN","PSSHRIT",14,0)
 L -^PS(59.74,"PINGCHK^PSSHRIT")
"RTN","PSSHRIT",15,0)
 Q
"RTN","PSSHRIT",16,0)
 ;
"RTN","PSSHRIT",17,0)
PINGTST() ; test the ping by sending a ping request.
"RTN","PSSHRIT",18,0)
 ;return 0 - ping successful,  -1^reason  ping failed
"RTN","PSSHRIT",19,0)
 N BASE,STATUS
"RTN","PSSHRIT",20,0)
 S BASE="PINGTST^"_$T(+0)
"RTN","PSSHRIT",21,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",22,0)
 S ^TMP($J,BASE,"IN","PING")=""
"RTN","PSSHRIT",23,0)
 D IN^PSSHRQ2(BASE)
"RTN","PSSHRIT",24,0)
 S STATUS=$G(^TMP($J,BASE,"OUT",0))
"RTN","PSSHRIT",25,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",26,0)
 Q STATUS
"RTN","PSSHRIT",27,0)
 ;
"RTN","PSSHRIT",28,0)
PINGFILE(STATUS) ;  file the ping results
"RTN","PSSHRIT",29,0)
 ; Input
"RTN","PSSHRIT",30,0)
 ;   Status - Ping results
"RTN","PSSHRIT",31,0)
 ; Return 
"RTN","PSSHRIT",32,0)
 ;     -1 - if creates an entry - means the first it noticed PEPS is unavailable
"RTN","PSSHRIT",33,0)
 ;      0 - if does not create/update a record, 
"RTN","PSSHRIT",34,0)
 ;      1 - if updates the last entry
"RTN","PSSHRIT",35,0)
 N LIEN,LASTAVL
"RTN","PSSHRIT",36,0)
 S STATUS=+$G(STATUS)
"RTN","PSSHRIT",37,0)
 S LIEN=+$O(^PS(59.74,":"),-1)           ; get last entry
"RTN","PSSHRIT",38,0)
 S LASTAVL=$P($G(^PS(59.74,LIEN,0)),U,2) ; get last available date/time
"RTN","PSSHRIT",39,0)
 I STATUS=0,'LIEN Q 0                          ; do nothing
"RTN","PSSHRIT",40,0)
 I STATUS=0,LIEN,LASTAVL Q 0                   ; do nothing
"RTN","PSSHRIT",41,0)
 I STATUS=0,LIEN,'LASTAVL D UPDATENT(LIEN) Q 1 ; update file
"RTN","PSSHRIT",42,0)
 I STATUS=-1,LIEN,LASTAVL D NEWENT Q -1        ; create new entry
"RTN","PSSHRIT",43,0)
 I STATUS=-1,'LIEN D NEWENT Q -1               ; create new entry
"RTN","PSSHRIT",44,0)
 Q 0
"RTN","PSSHRIT",45,0)
NEWENT ; create a new entry in FDB INTERFACE DATA (#59.74) file.
"RTN","PSSHRIT",46,0)
 N DIC,DO
"RTN","PSSHRIT",47,0)
 S X=$$NOW^XLFDT(),DIC="^PS(59.74,",DIC(0)="Z" D FILE^DICN
"RTN","PSSHRIT",48,0)
 K X,Y
"RTN","PSSHRIT",49,0)
 Q
"RTN","PSSHRIT",50,0)
 ;
"RTN","PSSHRIT",51,0)
UPDATENT(LAST) ; update the last entry in FDB INTERFACE DATA (#59.74) file.
"RTN","PSSHRIT",52,0)
 ;edit flag once it is created.
"RTN","PSSHRIT",53,0)
 N DIE,NEWVAL,DWNTIME,DA,DR,DIFF
"RTN","PSSHRIT",54,0)
 S DA=LAST
"RTN","PSSHRIT",55,0)
 S NEWVAL=$$NOW^XLFDT()   ;$$NOW()
"RTN","PSSHRIT",56,0)
 S DWNTIME=+$G(^PS(59.74,DA,0))
"RTN","PSSHRIT",57,0)
 Q:'DWNTIME
"RTN","PSSHRIT",58,0)
 S DIFF=$$FMDIFF^XLFDT(NEWVAL,DWNTIME,2)
"RTN","PSSHRIT",59,0)
 S DIFF=DIFF\60  ;IN MINUTES
"RTN","PSSHRIT",60,0)
 S DIE="^PS(59.74,",DR="1///^S X=NEWVAL;2///^S X=DIFF"
"RTN","PSSHRIT",61,0)
 D ^DIE
"RTN","PSSHRIT",62,0)
 D SMSGRST  ; send a message that interface connection is restored
"RTN","PSSHRIT",63,0)
 Q
"RTN","PSSHRIT",64,0)
 ;
"RTN","PSSHRIT",65,0)
SMSGDWN ; send a bulletin that Interface connection is down.
"RTN","PSSHRIT",66,0)
 N XMB,XMTEXT,XMY,PSFDB,XMV,XMDUN,XMDUZ
"RTN","PSSHRIT",67,0)
 S XMDUZ="PSS INTERFACE SCHEDULER"
"RTN","PSSHRIT",68,0)
 S XMB="PSS FDB INTERFACE"
"RTN","PSSHRIT",69,0)
 S XMTEXT="PSFDB"
"RTN","PSSHRIT",70,0)
 ; check to if dosing check is on.
"RTN","PSSHRIT",71,0)
 I $T(DS^PSSDSAPI)]"",$$DS^PSSDSAPI() D
"RTN","PSSHRIT",72,0)
 .S PSFDB(1)="Connection to Vendor Database is down!  No Drug-Drug Interaction, Duplicate"
"RTN","PSSHRIT",73,0)
 .S PSFDB(2)="Therapy or Dosing Order Checks will be performed until the connection is"
"RTN","PSSHRIT",74,0)
 .S PSFDB(3)="reestablished!!!"
"RTN","PSSHRIT",75,0)
 E  D
"RTN","PSSHRIT",76,0)
 .S PSFDB(1)="Connection to Vendor Database is down!  No Drug-Drug Interaction or Duplicate"
"RTN","PSSHRIT",77,0)
 .S PSFDB(2)="Therapy Order Checks will be performed until the connection is reestablished!!!"
"RTN","PSSHRIT",78,0)
 S XMY("G.PSS ORDER CHECKS")=""
"RTN","PSSHRIT",79,0)
 D ^XMB
"RTN","PSSHRIT",80,0)
 Q
"RTN","PSSHRIT",81,0)
 ;
"RTN","PSSHRIT",82,0)
SMSGRST ; send a bulletin that Interface connection is restored
"RTN","PSSHRIT",83,0)
 N XMB,XMTEXT,XMY,PSFDB,XMV,XMDUN,XMDUZ
"RTN","PSSHRIT",84,0)
 S XMDUZ="PSS INTERFACE SCHEDULER"
"RTN","PSSHRIT",85,0)
 S XMB="PSS FDB INTERFACE RESTORED"
"RTN","PSSHRIT",86,0)
 S XMTEXT="PSFDB"
"RTN","PSSHRIT",87,0)
 ; check to if dosing check is on.
"RTN","PSSHRIT",88,0)
 I $T(DS^PSSDSAPI)]"",$$DS^PSSDSAPI() D
"RTN","PSSHRIT",89,0)
 .S PSFDB(1)="Connection to Vendor Database has been restored! Drug-Drug Interactions,"
"RTN","PSSHRIT",90,0)
 .S PSFDB(2)="Duplicate Therapy and Dosing Order Checks can now be performed."
"RTN","PSSHRIT",91,0)
 E  D
"RTN","PSSHRIT",92,0)
 .S PSFDB(1)="Connection to Vendor Database has been restored! Drug-Drug Interactions or"
"RTN","PSSHRIT",93,0)
 .S PSFDB(2)="Duplicate Therapy Order Checks can now be performed."
"RTN","PSSHRIT",94,0)
 S XMY("G.PSS ORDER CHECKS")=""
"RTN","PSSHRIT",95,0)
 D ^XMB
"RTN","PSSHRIT",96,0)
 Q
"RTN","PSSHRIT",97,0)
 ;
"RTN","PSSHRIT",98,0)
TASKIT(FREQ,START) ; create/update scheduling option start time and frequency
"RTN","PSSHRIT",99,0)
 ; Input:
"RTN","PSSHRIT",100,0)
 ;   FREQ  - Optional - rescheduling frequency in minutes (default 15 minutes)
"RTN","PSSHRIT",101,0)
 ;  START  - Optional - start time (default is current time + 4 minutes)
"RTN","PSSHRIT",102,0)
 ; Note: if START is less than 4 minutes in future,  it will be defaulted to 
"RTN","PSSHRIT",103,0)
 ;       current time + 4 minutes.
"RTN","PSSHRIT",104,0)
 ;
"RTN","PSSHRIT",105,0)
 K PSERROR
"RTN","PSSHRIT",106,0)
 S FREQ=$G(FREQ,15)
"RTN","PSSHRIT",107,0)
 S FREQ=FREQ*60_"S"
"RTN","PSSHRIT",108,0)
 S START=$G(START,$$NOW^XLFDT())
"RTN","PSSHRIT",109,0)
 ;
"RTN","PSSHRIT",110,0)
 ; if start date/time is less than 4 minutes in future make it 4 minutes from now
"RTN","PSSHRIT",111,0)
 S:$$FMDIFF^XLFDT(START,$$NOW^XLFDT(),2)<240 START=$$FMADD^XLFDT($$NOW^XLFDT(),0,0,4)
"RTN","PSSHRIT",112,0)
 ;
"RTN","PSSHRIT",113,0)
 ; create the option schedule if it does not exist. return PSERROR=-1 if fails.
"RTN","PSSHRIT",114,0)
 ; in some situation when it fails, does not create the PSERROR variable
"RTN","PSSHRIT",115,0)
 D RESCH^XUTMOPT("PSS INTERFACE SCHEDULER",START,"",FREQ,"L",.PSERROR)
"RTN","PSSHRIT",116,0)
 Q
"RTN","PSSHRIT",117,0)
 ;
"RTN","PSSHRIT",118,0)
SCHDOPT ; edit option scheduling
"RTN","PSSHRIT",119,0)
 ; Called from "PSS SCHEDULE PEPS INTERFACE CK" option to create and/or edit the scheduling
"RTN","PSSHRIT",120,0)
 ; parameters for "PSS INTERFACE SCHEDULER" option in OPTION SCHEDULING file. 
"RTN","PSSHRIT",121,0)
 ; The "PSS SCHEDULE PEPS INTERFACE CK" option is installed by PAS*1.0*117 package.
"RTN","PSSHRIT",122,0)
 N PSSROOT
"RTN","PSSHRIT",123,0)
 ; check to see if the option is defined in option scheduler file and it is tasked.
"RTN","PSSHRIT",124,0)
 ; if not create and task the option.
"RTN","PSSHRIT",125,0)
 D OPTSTAT^XUTMOPT("PSS INTERFACE SCHEDULER",.PSSROOT)
"RTN","PSSHRIT",126,0)
 I '+$G(PSSROOT(1)) D TASKIT(15)
"RTN","PSSHRIT",127,0)
 ;
"RTN","PSSHRIT",128,0)
 D EDIT^XUTMOPT("PSS INTERFACE SCHEDULER")
"RTN","PSSHRIT",129,0)
 Q
"RTN","PSSHRIT",130,0)
 ;
"RTN","PSSHRIT",131,0)
SLASTRUN(LASTRUN) ; set last run time
"RTN","PSSHRIT",132,0)
 N SUB,PURGE,NOW,DESC
"RTN","PSSHRIT",133,0)
 S DESC="This stores the latest data on FDB interface"
"RTN","PSSHRIT",134,0)
 S NOW=$$NOW^XLFDT()\1
"RTN","PSSHRIT",135,0)
 S PURGE=$$FMADD^XLFDT(NOW,30)
"RTN","PSSHRIT",136,0)
 S ^XTMP("PSSRUN",0)=PURGE_U_NOW_U_DESC
"RTN","PSSHRIT",137,0)
 S ^XTMP("PSSRUN","LASTRUN")=LASTRUN
"RTN","PSSHRIT",138,0)
 Q
"RTN","PSSHRIT",139,0)
 ;
"RTN","PSSHRIT",140,0)
GLASTRUN() ; get last run time
"RTN","PSSHRIT",141,0)
 Q $G(^XTMP("PSSRUN","LASTRUN"))
"RTN","PSSHRIT",142,0)
 ;
"RTN","PSSHRIT",143,0)
RUNTEST ; run interaction test to PEPS server
"RTN","PSSHRIT",144,0)
 ; called from PSS CHECK PEPS SERVICES SETUP option
"RTN","PSSHRIT",145,0)
 D KILL^XUSCLEAN
"RTN","PSSHRIT",146,0)
 N STATUS,X,PSSMCHK
"RTN","PSSHRIT",147,0)
 S PSSMCHK="CHECK"
"RTN","PSSHRIT",148,0)
 S STATUS=$$CONCHK()
"RTN","PSSHRIT",149,0)
 D PRSRTN Q:(STATUS=0)!(X="^") 
"RTN","PSSHRIT",150,0)
 ;
"RTN","PSSHRIT",151,0)
 S STATUS=$$INTERACT()
"RTN","PSSHRIT",152,0)
 D PRSRTN Q:X="^" 
"RTN","PSSHRIT",153,0)
 ;
"RTN","PSSHRIT",154,0)
 S STATUS=$$DUPTHRPY()
"RTN","PSSHRIT",155,0)
 D PRSRTN Q:X="^" 
"RTN","PSSHRIT",156,0)
 ;
"RTN","PSSHRIT",157,0)
 S STATUS=$$DOSECHK() ;
"RTN","PSSHRIT",158,0)
 D PRSRTN Q:X="^" 
"RTN","PSSHRIT",159,0)
 ;
"RTN","PSSHRIT",160,0)
 S STATUS=$$CUSTOM()
"RTN","PSSHRIT",161,0)
 D PRSRTN Q:X="^" 
"RTN","PSSHRIT",162,0)
 Q
"RTN","PSSHRIT",163,0)
 ;
"RTN","PSSHRIT",164,0)
CONCHK() ; check connection
"RTN","PSSHRIT",165,0)
 ; Return 1 if OK, 0 if not OK.
"RTN","PSSHRIT",166,0)
 ; 
"RTN","PSSHRIT",167,0)
 N MESSAGE,Y,STATUS,RESULT
"RTN","PSSHRIT",168,0)
 W !,"Checking Vendor Database Connection"
"RTN","PSSHRIT",169,0)
 S RESULT=$$PINGTST()
"RTN","PSSHRIT",170,0)
 I RESULT=0 D
"RTN","PSSHRIT",171,0)
 .W "...OK"
"RTN","PSSHRIT",172,0)
 E  D
"RTN","PSSHRIT",173,0)
 .W "...",!!,"    Connection could not be made to Vendor database."
"RTN","PSSHRIT",174,0)
 .S Y=$$GLASTRUN()
"RTN","PSSHRIT",175,0)
 .I Y D
"RTN","PSSHRIT",176,0)
 ..D DD^%DT                      ; convert last reached time in Y to external format
"RTN","PSSHRIT",177,0)
 ..W !,"       Last reached @"_$E(Y,1,18)
"RTN","PSSHRIT",178,0)
 W !
"RTN","PSSHRIT",179,0)
 Q $S(RESULT=0:1,1:0)
"RTN","PSSHRIT",180,0)
 ; 
"RTN","PSSHRIT",181,0)
INTERACT() ; check drug-drug interaction.
"RTN","PSSHRIT",182,0)
 ; Return 1 if OK, 0 if not OK.
"RTN","PSSHRIT",183,0)
 ;
"RTN","PSSHRIT",184,0)
 N PSORDER,PSDRUG1,PSDRUG2,BASE,INFO,INTRO,PSSPEC
"RTN","PSSHRIT",185,0)
 N PSSLEFT S PSSLEFT=4     ; left margin for results
"RTN","PSSHRIT",186,0)
 S BASE=$T(+0)_" INTERACT"
"RTN","PSSHRIT",187,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",188,0)
 S ^TMP($J,BASE,"IN","DRUGDRUG")=""
"RTN","PSSHRIT",189,0)
 S PSORDER="I;1464P;PROSPECTIVE;2",PSDRUG1="WARFARIN 10MG TAB",PSDRUG2="ASPIRIN 325MG TAB"
"RTN","PSSHRIT",190,0)
 SET ^TMP($JOB,BASE,"IN","PROSPECTIVE","I;1464P;PROSPECTIVE;2")="6559^4005201^^WARFARIN 10MG TAB"
"RTN","PSSHRIT",191,0)
 SET ^TMP($JOB,BASE,"IN","PROSPECTIVE","I;91464P;PROSPECTIVE;2")="4376^4005735^^ASPIRIN 325MG TAB"
"RTN","PSSHRIT",192,0)
 D IN^PSSHRQ2(BASE)
"RTN","PSSHRIT",193,0)
 ;
"RTN","PSSHRIT",194,0)
 S INTRO="Performing Drug-Drug Interaction Order Check for "_PSDRUG2_" and "_PSDRUG1
"RTN","PSSHRIT",195,0)
 S INFO=$G(^TMP($J,BASE,"OUT","DRUGDRUG","S",PSDRUG1,PSORDER,1,"PMON",9,0))
"RTN","PSSHRIT",196,0)
 S INTRO=INTRO_$S($L(INFO):"...OK",1:"...Not OK")
"RTN","PSSHRIT",197,0)
 W !
"RTN","PSSHRIT",198,0)
 I '$L(INFO) D
"RTN","PSSHRIT",199,0)
 .D OUTPUT(INTRO)
"RTN","PSSHRIT",200,0)
 .W ! D OUTPUT("Drug-Drug Interaction Order Check could not be performed.",PSSLEFT)
"RTN","PSSHRIT",201,0)
 E  D
"RTN","PSSHRIT",202,0)
 . D OUTPUT(INTRO)
"RTN","PSSHRIT",203,0)
 . W !
"RTN","PSSHRIT",204,0)
 . S PSSPEC("CLINICAL EFFECTS:  ")=""
"RTN","PSSHRIT",205,0)
 . S INFO=$$REPLACE^XLFSTR(INFO,.PSSPEC)
"RTN","PSSHRIT",206,0)
 . S INFO="Significant Drug Interaction: "_INFO
"RTN","PSSHRIT",207,0)
 . D OUTPUT(INFO,PSSLEFT)
"RTN","PSSHRIT",208,0)
 ;
"RTN","PSSHRIT",209,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",210,0)
 Q $S($L(INFO)=0:0,1:1)
"RTN","PSSHRIT",211,0)
 ;
"RTN","PSSHRIT",212,0)
DUPTHRPY() ; check duplicate therapy
"RTN","PSSHRIT",213,0)
 ; Return 1 if OK, 0 if not OK.
"RTN","PSSHRIT",214,0)
 ; 
"RTN","PSSHRIT",215,0)
 N PSORDER,PSDRUG1,PSDRUG2,BASE,CLAS1,CLAS2,LINE1,LINE2,INTRO
"RTN","PSSHRIT",216,0)
 N PSSLEFT S PSSLEFT=4     ; left margin for results
"RTN","PSSHRIT",217,0)
 S BASE=$T(+0)_" DUPTHRPY"
"RTN","PSSHRIT",218,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",219,0)
 S ^TMP($J,BASE,"IN","THERAPY")=""
"RTN","PSSHRIT",220,0)
 S PSORDER="O;403931;PROFILE;3"
"RTN","PSSHRIT",221,0)
 S PSDRUG1="CIMETIDINE 300MG TAB"
"RTN","PSSHRIT",222,0)
 S PSDRUG2="RANITIDINE 150MG TAB"
"RTN","PSSHRIT",223,0)
 S ^TMP($J,BASE,"IN","PROFILE","O;403931;PROFILE;3")="11666^4006826^^CIMETIDINE 300MG TAB^O"
"RTN","PSSHRIT",224,0)
 S ^TMP($J,BASE,"IN","PROSPECTIVE","Z;1;PROSPECTIVE;1")="11673^4007038^^RANITIDINE 150MG TAB"
"RTN","PSSHRIT",225,0)
 D IN^PSSHRQ2(BASE)
"RTN","PSSHRIT",226,0)
 ; 
"RTN","PSSHRIT",227,0)
 S CLAS1=$G(^TMP($J,BASE,"OUT","THERAPY",1,1,"CLASS"))
"RTN","PSSHRIT",228,0)
 S CLAS2=$G(^TMP($J,BASE,"OUT","THERAPY",1,2,"CLASS"))
"RTN","PSSHRIT",229,0)
 S INTRO="Performing Duplicate Therapy Order Check for "_PSDRUG1_" and "_PSDRUG2
"RTN","PSSHRIT",230,0)
 S INTRO=INTRO_$S($L(CLAS1):"...OK",1:"...Not OK")
"RTN","PSSHRIT",231,0)
 W !
"RTN","PSSHRIT",232,0)
 D OUTPUT(INTRO)
"RTN","PSSHRIT",233,0)
 I '$L(CLAS1) D
"RTN","PSSHRIT",234,0)
 .W !
"RTN","PSSHRIT",235,0)
 .D OUTPUT("Duplicate Therapy Order Check could not be performed.",PSSLEFT)
"RTN","PSSHRIT",236,0)
 E  D
"RTN","PSSHRIT",237,0)
 .S LINE1="Therapeutic Duplication with "_PSDRUG1_" and "_PSDRUG2
"RTN","PSSHRIT",238,0)
 .S LINE2="Duplicate Therapy Class(es): "_CLAS1_","_CLAS2
"RTN","PSSHRIT",239,0)
 .W !
"RTN","PSSHRIT",240,0)
 .D OUTPUT(LINE1,PSSLEFT)
"RTN","PSSHRIT",241,0)
 .D OUTPUT(LINE2,PSSLEFT)
"RTN","PSSHRIT",242,0)
 ;
"RTN","PSSHRIT",243,0)
 Q $S($L(CLAS1)=0:0,1:1)
"RTN","PSSHRIT",244,0)
 ;
"RTN","PSSHRIT",245,0)
DOSECHK() ; check dosing
"RTN","PSSHRIT",246,0)
 ; Return 1 if OK, 0 if not OK.
"RTN","PSSHRIT",247,0)
 N TOTAL,SINGLE,INTRO,ORDER,PSDRUG1,PSDRUG2,BASE
"RTN","PSSHRIT",248,0)
 N PSSLEFT S PSSLEFT=4     ; left margin for results
"RTN","PSSHRIT",249,0)
 S BASE=$T(+0)_" DOSECHK"
"RTN","PSSHRIT",250,0)
 S ORDER="O;1464P;PROSPECTIVE;2"
"RTN","PSSHRIT",251,0)
 S PSDRUG1="ACETAMINOPHEN 500MG TAB"
"RTN","PSSHRIT",252,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",253,0)
 S ^TMP($J,BASE,"IN","DOSE")=""
"RTN","PSSHRIT",254,0)
 SET ^TMP($J,BASE,"IN","DOSE","AGE")=5000
"RTN","PSSHRIT",255,0)
 SET ^TMP($J,BASE,"IN","DOSE","WT")=83.01
"RTN","PSSHRIT",256,0)
 SET ^TMP($J,BASE,"IN","DOSE","BSA")=1.532
"RTN","PSSHRIT",257,0)
 ;VALUES: GCN^VUID^IEN^NAME^DOSE AMOUNT^DOSE UNIT^DOSE RATE^FREQ^DURATION^DURATION RATE^ROUTE^DOSE TYPE^SPECIFIC
"RTN","PSSHRIT",258,0)
 S ^TMP($J,BASE,"IN","DOSE","O;1464P;PROSPECTIVE;2")="4490^4007154^^ACETAMINOPHEN 500MG TAB^3000^MILLIGRAMS^DAY^Q4H^10^DAY^ORAL^MAINTENANCE^1"
"RTN","PSSHRIT",259,0)
 S ^TMP($J,BASE,"IN","PROSPECTIVE","O;1464P;PROSPECTIVE;2")="4490^4007154^^ACETAMINOPHEN 500MG TAB^O"
"RTN","PSSHRIT",260,0)
 D IN^PSSHRQ2(BASE)
"RTN","PSSHRIT",261,0)
 ;
"RTN","PSSHRIT",262,0)
 S TOTAL=$G(^TMP($J,BASE,"OUT","DOSE",ORDER,PSDRUG1,"RANGE","MESSAGE",0))
"RTN","PSSHRIT",263,0)
 S SINGLE=$G(^TMP($J,BASE,"OUT","DOSE",ORDER,PSDRUG1,"SINGLE","MESSAGE",0))
"RTN","PSSHRIT",264,0)
 S INTRO="Performing Dosing Order Check for "_PSDRUG1_" - 3000MG Q4H"_$S($L(TOTAL):"...OK",1:"...Not OK")
"RTN","PSSHRIT",265,0)
 I '$L(TOTAL) D
"RTN","PSSHRIT",266,0)
 .D OUTPUT(INTRO)
"RTN","PSSHRIT",267,0)
 .W !
"RTN","PSSHRIT",268,0)
 .D OUTPUT("Dosing Order Check could not be performed.",PSSLEFT)
"RTN","PSSHRIT",269,0)
 E  D
"RTN","PSSHRIT",270,0)
 .W !
"RTN","PSSHRIT",271,0)
 .D OUTPUT(INTRO)
"RTN","PSSHRIT",272,0)
 .W !
"RTN","PSSHRIT",273,0)
 .D OUTPUT(SINGLE,PSSLEFT)
"RTN","PSSHRIT",274,0)
 .W !
"RTN","PSSHRIT",275,0)
 .D OUTPUT(TOTAL,PSSLEFT)
"RTN","PSSHRIT",276,0)
 Q $S($L(TOTAL)=0:0,1:1)
"RTN","PSSHRIT",277,0)
 ;
"RTN","PSSHRIT",278,0)
CUSTOM() ; check custom drug-drug interaction
"RTN","PSSHRIT",279,0)
 ; Return 1 if OK, 0 if not OK.
"RTN","PSSHRIT",280,0)
 ;
"RTN","PSSHRIT",281,0)
 N INFO,INTRO,ORDER,DRUG1,DRUG2,BASE,STATUS,PSSPEC
"RTN","PSSHRIT",282,0)
 N PSSLEFT S PSSLEFT=4     ; left margin for results
"RTN","PSSHRIT",283,0)
 S BASE=$T(+0)_" CUSTOM"
"RTN","PSSHRIT",284,0)
 S ORDER="Z;1;PROSPECTIVE;1"
"RTN","PSSHRIT",285,0)
 S DRUG1="CLARITHROMYCIN 250MG TAB",DRUG2="DIAZEPAM 5MG TAB"
"RTN","PSSHRIT",286,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",287,0)
 S ^TMP($J,BASE,"IN","DRUGDRUG")=""
"RTN","PSSHRIT",288,0)
 S ^TMP($J,BASE,"IN","PROSPECTIVE","Z;1;PROSPECTIVE;1")="16373^4010075F^^CLARITHROMYCIN 250MG TAB"
"RTN","PSSHRIT",289,0)
 S ^TMP($J,BASE,"IN","PROFILE","I;10U;PROFILE;10")="3768^40002216^^DIAZEPAM 5MG TAB"
"RTN","PSSHRIT",290,0)
 D IN^PSSHRQ2(BASE)
"RTN","PSSHRIT",291,0)
 ;
"RTN","PSSHRIT",292,0)
 S STATUS=$G(^TMP($J,BASE,"OUT",0))
"RTN","PSSHRIT",293,0)
 S INTRO="Performing Custom Drug-Drug Interaction Order Check for "_DRUG1_" and "_DRUG2
"RTN","PSSHRIT",294,0)
 D SCUST
"RTN","PSSHRIT",295,0)
 S INTRO=INTRO_$S($L(INFO):"...OK",STATUS=0:"...OK",1:"...Not OK")
"RTN","PSSHRIT",296,0)
 I '$L(INFO) D
"RTN","PSSHRIT",297,0)
 .D OUTPUT(INTRO)
"RTN","PSSHRIT",298,0)
 .I STATUS'=0 W ! D OUTPUT("Custom Drug-Drug Interaction Order Check could not be performed.",PSSLEFT)
"RTN","PSSHRIT",299,0)
 E   D
"RTN","PSSHRIT",300,0)
 . W !
"RTN","PSSHRIT",301,0)
 . D OUTPUT(INTRO)
"RTN","PSSHRIT",302,0)
 . W !
"RTN","PSSHRIT",303,0)
 . S PSSPEC("CLINICAL EFFECTS:  ")=""
"RTN","PSSHRIT",304,0)
 . S INFO=$$REPLACE^XLFSTR(INFO,.PSSPEC)
"RTN","PSSHRIT",305,0)
 .S INFO="Significant Drug Interaction: "_INFO
"RTN","PSSHRIT",306,0)
 .D OUTPUT(INFO,PSSLEFT)
"RTN","PSSHRIT",307,0)
 W !
"RTN","PSSHRIT",308,0)
 Q $S(STATUS=0:1,$L(INFO)=0:0,1:1)
"RTN","PSSHRIT",309,0)
 ;
"RTN","PSSHRIT",310,0)
 ;
"RTN","PSSHRIT",311,0)
INTACT ; check vendor data base link
"RTN","PSSHRIT",312,0)
 ; Called from CHECK VENDOR DATABASE LINK  option
"RTN","PSSHRIT",313,0)
 N STATUS,PSFIN,BASE,STATUS,Y
"RTN","PSSHRIT",314,0)
 S BASE="PSPRE"
"RTN","PSSHRIT",315,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",316,0)
 S ^TMP($J,BASE,"IN","PING")=""
"RTN","PSSHRIT",317,0)
 D IN^PSSHRQ2(BASE)
"RTN","PSSHRIT",318,0)
 S STATUS=+$G(^TMP($J,BASE,"OUT",0))
"RTN","PSSHRIT",319,0)
 I STATUS=0 D
"RTN","PSSHRIT",320,0)
 .W !
"RTN","PSSHRIT",321,0)
 .W !,"  Database Version: ",$G(^TMP($J,BASE,"OUT","difBuildVersion"))
"RTN","PSSHRIT",322,0)
 .W !,"     Build Version: ",$G(^TMP($J,BASE,"OUT","difDbVersion"))
"RTN","PSSHRIT",323,0)
 .S Y=$G(^TMP($J,BASE,"OUT","difIssueDate"))
"RTN","PSSHRIT",324,0)
 .S:Y?8N Y=$E(Y,5,6)_"/"_$E(Y,7,8)_"/"_$E(Y,1,4)
"RTN","PSSHRIT",325,0)
 .W !,"        Issue Date: ",Y,!
"RTN","PSSHRIT",326,0)
 .;
"RTN","PSSHRIT",327,0)
 .W !,"  Custom Database Version: ",$G(^TMP($J,BASE,"OUT","customBuildVersion"))
"RTN","PSSHRIT",328,0)
 .W !,"     Custom Build Version: ",$G(^TMP($J,BASE,"OUT","customDbVersion"))
"RTN","PSSHRIT",329,0)
 .S Y=$G(^TMP($J,BASE,"OUT","customIssueDate"))
"RTN","PSSHRIT",330,0)
 .S:Y?8N Y=$E(Y,5,6)_"/"_$E(Y,7,8)_"/"_$E(Y,1,4)
"RTN","PSSHRIT",331,0)
 .W !,"        Custom Issue Date: ",Y,!
"RTN","PSSHRIT",332,0)
 .;
"RTN","PSSHRIT",333,0)
 .S Y=$$NOW^XLFDT()
"RTN","PSSHRIT",334,0)
 .D DD^%DT                       ; convert current time in Y to external format.
"RTN","PSSHRIT",335,0)
 .W !,"Connected to Vendor database successfully @",$E(Y,1,18)
"RTN","PSSHRIT",336,0)
 E  D
"RTN","PSSHRIT",337,0)
 .W !,"Connection could not be made to Vendor database."
"RTN","PSSHRIT",338,0)
 .S Y=$$GLASTRUN()
"RTN","PSSHRIT",339,0)
 .IF Y D
"RTN","PSSHRIT",340,0)
 ..D DD^%DT                      ; convert last reached time in Y to external format.
"RTN","PSSHRIT",341,0)
 ..W !,"  Last reached @"_$E(Y,1,18)
"RTN","PSSHRIT",342,0)
 ;
"RTN","PSSHRIT",343,0)
 D PRSRTN
"RTN","PSSHRIT",344,0)
 Q
"RTN","PSSHRIT",345,0)
 ;
"RTN","PSSHRIT",346,0)
 ;----------------------------------------------------
"RTN","PSSHRIT",347,0)
 ;
"RTN","PSSHRIT",348,0)
PRSRTN ;
"RTN","PSSHRIT",349,0)
 ;calls std routine to ask user to hit return 
"RTN","PSSHRIT",350,0)
 N DIR S DIR(0)="E" D ^DIR
"RTN","PSSHRIT",351,0)
 Q
"RTN","PSSHRIT",352,0)
 ;
"RTN","PSSHRIT",353,0)
PING(BASE) ;
"RTN","PSSHRIT",354,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",355,0)
 S ^TMP($J,BASE,"IN","PING")=""
"RTN","PSSHRIT",356,0)
 D IN^PSSHRQ2(BASE)
"RTN","PSSHRIT",357,0)
 Q
"RTN","PSSHRIT",358,0)
 ;
"RTN","PSSHRIT",359,0)
HRSMIN(MIN) ;
"RTN","PSSHRIT",360,0)
 ; Called from output transform of VENDOR INTERFACE DATA FILE (#59.54) field TOTAL TIME NOT AVAILABLE (field# 2)
"RTN","PSSHRIT",361,0)
 ;INPUTS: MIN-TIME IN MINUTES
"RTN","PSSHRIT",362,0)
 ;RETURNS HRS AND MINUTES
"RTN","PSSHRIT",363,0)
 N HRS,MINHR,HRSMIN
"RTN","PSSHRIT",364,0)
 S HRSMIN=""
"RTN","PSSHRIT",365,0)
 S MINHR=60     ;TOTAL # OF MIN IN AN HR
"RTN","PSSHRIT",366,0)
 S HRS=MIN\MINHR,MIN=MIN#MINHR
"RTN","PSSHRIT",367,0)
 I HRS S HRSMIN=HRS_" HR"_$S(HRS>1:"S",1:"")
"RTN","PSSHRIT",368,0)
 I MIN S HRSMIN=HRSMIN_$S(HRSMIN:", ",1:"")_MIN_" MINUTE"_$S(MIN>1:"S",1:"")
"RTN","PSSHRIT",369,0)
 Q HRSMIN
"RTN","PSSHRIT",370,0)
 ;
"RTN","PSSHRIT",371,0)
OUTPUT(INFO,DIWL) ;
"RTN","PSSHRIT",372,0)
 K ^UTILITY($J,"W")
"RTN","PSSHRIT",373,0)
 N DIWR,DIWF,DIW,DIWT,X
"RTN","PSSHRIT",374,0)
 S DIWL=$G(DIWL,1)
"RTN","PSSHRIT",375,0)
 S X=INFO,DIWR=$S($G(IOM):IOM,1:60),DIWF="W" D ^DIWP
"RTN","PSSHRIT",376,0)
 D ^DIWW
"RTN","PSSHRIT",377,0)
 Q
"RTN","PSSHRIT",378,0)
 ;
"RTN","PSSHRIT",379,0)
 ;
"RTN","PSSHRIT",380,0)
SCUST ;Set Custom info
"RTN","PSSHRIT",381,0)
 I $D(^TMP($J,BASE,"OUT","DRUGDRUG","S",DRUG1,ORDER,1)) S INFO=$G(^TMP($J,BASE,"OUT","DRUGDRUG","S",DRUG1,ORDER,1,"PMON",9,0)) Q
"RTN","PSSHRIT",382,0)
 I $D(^TMP($J,BASE,"OUT","DRUGDRUG","S",DRUG2,"I;10U;PROFILE;10",1)) S INFO=$G(^TMP($J,BASE,"OUT","DRUGDRUG","S",DRUG2,"I;10U;PROFILE;10",1,"PMON",9,0)) Q
"RTN","PSSHRIT",383,0)
 S INFO=""
"RTN","PSSHRIT",384,0)
 Q
"RTN","PSSHRQ2")
0^3^B6796536^B5074500
"RTN","PSSHRQ2",1,0)
PSSHRQ2 ;WOIFO/AV,TS - Makes a request to PEPS and returns as Global ;09/20/07
"RTN","PSSHRQ2",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**136,163,168**;9/30/97;Build 4
"RTN","PSSHRQ2",3,0)
 ;
"RTN","PSSHRQ2",4,0)
 ; @authors - Alex Vazquez, Tim Sabat
"RTN","PSSHRQ2",5,0)
 ; @date    - September 19, 2007
"RTN","PSSHRQ2",6,0)
 ; @version - 1.0
"RTN","PSSHRQ2",7,0)
 ;
"RTN","PSSHRQ2",8,0)
 QUIT
"RTN","PSSHRQ2",9,0)
 ;;
"RTN","PSSHRQ2",10,0)
IN(PSSBASE) ;
"RTN","PSSHRQ2",11,0)
 ; @DESC Handles request/response to PEPS
"RTN","PSSHRQ2",12,0)
 ;
"RTN","PSSHRQ2",13,0)
 ; @RETURNS Nothing. Value stored in output global.
"RTN","PSSHRQ2",14,0)
 ;
"RTN","PSSHRQ2",15,0)
 NEW PSS,PSSRESLT,PSSDOC,PSSXML,FDBFLG,PSSRBASE,PSSRBASX,PSSHRTMX,PSSHRTRT
"RTN","PSSHRQ2",16,0)
 ; Cleanup output global
"RTN","PSSHRQ2",17,0)
 ; KILL ^TMP($JOB,PSSBASE,"OUT")  ; PO: commented as requested by Stan Brown on 6/4/09
"RTN","PSSHRQ2",18,0)
 ;
"RTN","PSSHRQ2",19,0)
 ; save "IN" nodes
"RTN","PSSHRQ2",20,0)
 S PSSHRTMX=0
"RTN","PSSHRQ2",21,0)
 K ^TMP($J,"SAVE","IN")
"RTN","PSSHRQ2",22,0)
 M ^TMP($J,"SAVE","IN")=^TMP($J,PSSBASE,"IN") S PSSRBASE=PSSBASE
"RTN","PSSHRQ2",23,0)
 ;
"RTN","PSSHRQ2",24,0)
 ;Check FDB status if an update is occurring
"RTN","PSSHRQ2",25,0)
 S FDBFLG=$$CHKSTAT^PSSDSFDB()
"RTN","PSSHRQ2",26,0)
 ;If FDB update set global and quit
"RTN","PSSHRQ2",27,0)
 I FDBFLG S ^TMP($J,PSSBASE,"OUT",0)=FDBFLG GOTO END   ;QUIT
"RTN","PSSHRQ2",28,0)
 ;
"RTN","PSSHRQ2",29,0)
 ; Validate input global
"RTN","PSSHRQ2",30,0)
 SET PSS("validationResult")=$$DRIVER^PSSHRVAL(PSSBASE)
"RTN","PSSHRQ2",31,0)
 IF PSS("validationResult")=0  DO
"RTN","PSSHRQ2",32,0)
 . ; Check if data written to global, set to 1 if data exist
"RTN","PSSHRQ2",33,0)
 . IF $DATA(^TMP($JOB,PSSBASE,"OUT")) SET ^TMP($JOB,PSSBASE,"OUT",0)=1
"RTN","PSSHRQ2",34,0)
 . ; If no data in output global , set to 0
"RTN","PSSHRQ2",35,0)
 . IF '$DATA(^TMP($JOB,PSSBASE,"OUT")) SET ^TMP($JOB,PSSBASE,"OUT",0)=0
"RTN","PSSHRQ2",36,0)
 . QUIT
"RTN","PSSHRQ2",37,0)
 ; End call if no call to make
"RTN","PSSHRQ2",38,0)
 IF PSS("validationResult")=0 GOTO END   ;QUIT
"RTN","PSSHRQ2",39,0)
 ;
"RTN","PSSHRQ2",40,0)
 ; Create XML request
"RTN","PSSHRQ2",41,0)
 SET PSSXML=$$BLDPREQ^PSSHREQ(PSSBASE)
"RTN","PSSHRQ2",42,0)
 ; Send XML request to PEPS, receive handle to XML in return
"RTN","PSSHRQ2",43,0)
 ;
"RTN","PSSHRQ2",44,0)
RETRY ;Retry entry point if first connection attempt fails
"RTN","PSSHRQ2",45,0)
 SET PSSRESLT=$$PEPSPOST^PSSHTTP(.PSSDOC,PSSXML)
"RTN","PSSHRQ2",46,0)
 ;
"RTN","PSSHRQ2",47,0)
 ; If request unsuccessful go straight to error handling
"RTN","PSSHRQ2",48,0)
 IF +PSSRESLT=0 DO ALTERROR^PSSHRQ2O(PSSBASE)
"RTN","PSSHRQ2",49,0)
 ;
"RTN","PSSHRQ2",50,0)
 ; If request is successful parse response
"RTN","PSSHRQ2",51,0)
 ; and put in results global object.  Also set the last successful run time.
"RTN","PSSHRQ2",52,0)
 IF +PSSRESLT>0 DO OUT^PSSHRQ2O(PSSDOC,PSSBASE),SLASTRUN^PSSHRIT($$NOW^XLFDT())
"RTN","PSSHRQ2",53,0)
 ; 
"RTN","PSSHRQ2",54,0)
 I 'PSSHRTMX S PSSHRTRT=$P($G(^TMP($J,PSSRBASE,"OUT",0)),"^") I PSSHRTRT'=0,PSSHRTRT'=1 K ^TMP($J,PSSRBASE,"OUT",0) D SHG G RETRY
"RTN","PSSHRQ2",55,0)
 ;
"RTN","PSSHRQ2",56,0)
END ; re-store "IN" nodes
"RTN","PSSHRQ2",57,0)
 M ^TMP($J,PSSBASE,"IN")=^TMP($J,"SAVE","IN")
"RTN","PSSHRQ2",58,0)
 K ^TMP($J,"SAVE","IN")
"RTN","PSSHRQ2",59,0)
 S PSSRBASX=$P($G(^TMP($J,PSSRBASE,"OUT",0)),"^") I PSSRBASX'=-1,PSSRBASX'=0,PSSRBASX'=1 D
"RTN","PSSHRQ2",60,0)
 .K ^TMP($J,PSSRBASE,"OUT")
"RTN","PSSHRQ2",61,0)
 .S ^TMP($J,PSSRBASE,"OUT",0)="-1^Unexpected error has occurred."
"RTN","PSSHRQ2",62,0)
 QUIT
"RTN","PSSHRQ2",63,0)
 ;;
"RTN","PSSHRQ2",64,0)
 ;
"RTN","PSSHRQ2",65,0)
SHG ;Hang before retry
"RTN","PSSHRQ2",66,0)
 S PSSHRTMX=1
"RTN","PSSHRQ2",67,0)
 I $E(PSSRBASE,1,4)'="PING"!($G(PSSMCHK)="CHECK") H 3 Q
"RTN","PSSHRQ2",68,0)
 H 30
"RTN","PSSHRQ2",69,0)
 Q
"VER")
8.0^22.0
"BLD",8042,6)
^147
**END**
**END**
