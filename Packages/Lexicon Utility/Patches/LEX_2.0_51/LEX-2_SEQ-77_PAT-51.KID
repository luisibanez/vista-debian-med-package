Released LEX*2*51 SEQ #77
Extracted from mail message
**KIDS**:LEX*2.0*51^

**INSTALL NAME**
LEX*2.0*51
"BLD",8458,0)
LEX*2.0*51^LEXICON UTILITY^0^3120726^y
"BLD",8458,4,0)
^9.64PA^757.33^3
"BLD",8458,4,757.01,0)
757.01
"BLD",8458,4,757.01,222)
y^y^f^^^^n
"BLD",8458,4,757.32,0)
757.32
"BLD",8458,4,757.32,222)
y^y^f^^^^n
"BLD",8458,4,757.33,0)
757.33
"BLD",8458,4,757.33,222)
y^y^f^^^^n
"BLD",8458,4,"B",757.01,757.01)

"BLD",8458,4,"B",757.32,757.32)

"BLD",8458,4,"B",757.33,757.33)

"BLD",8458,6)
7^
"BLD",8458,6.3)
77
"BLD",8458,"ABPKG")
n
"BLD",8458,"INI")
PRE^LEX2051P
"BLD",8458,"INIT")
POST^LEX2051P
"BLD",8458,"KRN",0)
^9.67PA^8989.52^19
"BLD",8458,"KRN",.4,0)
.4
"BLD",8458,"KRN",.401,0)
.401
"BLD",8458,"KRN",.402,0)
.402
"BLD",8458,"KRN",.403,0)
.403
"BLD",8458,"KRN",.5,0)
.5
"BLD",8458,"KRN",.84,0)
.84
"BLD",8458,"KRN",3.6,0)
3.6
"BLD",8458,"KRN",3.8,0)
3.8
"BLD",8458,"KRN",9.2,0)
9.2
"BLD",8458,"KRN",9.8,0)
9.8
"BLD",8458,"KRN",9.8,"NM",0)
^9.68A^18^7
"BLD",8458,"KRN",9.8,"NM",2,0)
LEXTRAN1^^0^B91365999
"BLD",8458,"KRN",9.8,"NM",12,0)
LEXALK^^0^B22806965
"BLD",8458,"KRN",9.8,"NM",14,0)
LEXU^^0^B21563695
"BLD",8458,"KRN",9.8,"NM",15,0)
LEXNDX2^^0^B21432451
"BLD",8458,"KRN",9.8,"NM",16,0)
LEXABC^^0^B46217187
"BLD",8458,"KRN",9.8,"NM",17,0)
LEXTOLKN^^0^B38854621
"BLD",8458,"KRN",9.8,"NM",18,0)
LEXXGI4^^0^B22057583
"BLD",8458,"KRN",9.8,"NM","B","LEXABC",16)

"BLD",8458,"KRN",9.8,"NM","B","LEXALK",12)

"BLD",8458,"KRN",9.8,"NM","B","LEXNDX2",15)

"BLD",8458,"KRN",9.8,"NM","B","LEXTOLKN",17)

"BLD",8458,"KRN",9.8,"NM","B","LEXTRAN1",2)

"BLD",8458,"KRN",9.8,"NM","B","LEXU",14)

"BLD",8458,"KRN",9.8,"NM","B","LEXXGI4",18)

"BLD",8458,"KRN",19,0)
19
"BLD",8458,"KRN",19,"NM",0)
^9.68A^^
"BLD",8458,"KRN",19.1,0)
19.1
"BLD",8458,"KRN",101,0)
101
"BLD",8458,"KRN",409.61,0)
409.61
"BLD",8458,"KRN",771,0)
771
"BLD",8458,"KRN",870,0)
870
"BLD",8458,"KRN",8989.51,0)
8989.51
"BLD",8458,"KRN",8989.52,0)
8989.52
"BLD",8458,"KRN",8994,0)
8994
"BLD",8458,"KRN","B",.4,.4)

"BLD",8458,"KRN","B",.401,.401)

"BLD",8458,"KRN","B",.402,.402)

"BLD",8458,"KRN","B",.403,.403)

"BLD",8458,"KRN","B",.5,.5)

"BLD",8458,"KRN","B",.84,.84)

"BLD",8458,"KRN","B",3.6,3.6)

"BLD",8458,"KRN","B",3.8,3.8)

"BLD",8458,"KRN","B",9.2,9.2)

"BLD",8458,"KRN","B",9.8,9.8)

"BLD",8458,"KRN","B",19,19)

"BLD",8458,"KRN","B",19.1,19.1)

"BLD",8458,"KRN","B",101,101)

"BLD",8458,"KRN","B",409.61,409.61)

"BLD",8458,"KRN","B",771,771)

"BLD",8458,"KRN","B",870,870)

"BLD",8458,"KRN","B",8989.51,8989.51)

"BLD",8458,"KRN","B",8989.52,8989.52)

"BLD",8458,"KRN","B",8994,8994)

"BLD",8458,"PRE")
LEX2051
"BLD",8458,"QUES",0)
^9.62^^
"BLD",8458,"REQB",0)
^9.611^3^3
"BLD",8458,"REQB",1,0)
LEX*2.0*41^1
"BLD",8458,"REQB",2,0)
LEX*2.0*73^1
"BLD",8458,"REQB",3,0)
XU*8.0*502^1
"BLD",8458,"REQB","B","LEX*2.0*41",1)

"BLD",8458,"REQB","B","LEX*2.0*73",2)

"BLD",8458,"REQB","B","XU*8.0*502",3)

"FIA",757.01)
EXPRESSIONS
"FIA",757.01,0)
^LEX(757.01,
"FIA",757.01,0,0)
757.01
"FIA",757.01,0,1)
y^y^f^^^^n
"FIA",757.01,0,10)

"FIA",757.01,0,11)

"FIA",757.01,0,"RLRO")

"FIA",757.01,0,"VR")
2.0^LEX
"FIA",757.01,757.01)
0
"FIA",757.01,757.016)
0
"FIA",757.01,757.118)
0
"FIA",757.01,757.17)
0
"FIA",757.01,757.18)
0
"FIA",757.32)
MAPPING DEFINITIONS
"FIA",757.32,0)
^LEX(757.32,
"FIA",757.32,0,0)
757.32
"FIA",757.32,0,1)
y^y^f^^^^n
"FIA",757.32,0,10)

"FIA",757.32,0,11)

"FIA",757.32,0,"RLRO")

"FIA",757.32,0,"VR")
2.0^LEX
"FIA",757.32,757.32)
0
"FIA",757.32,757.322)
0
"FIA",757.33)
MAPPINGS
"FIA",757.33,0)
^LEX(757.33,
"FIA",757.33,0,0)
757.33
"FIA",757.33,0,1)
y^y^f^^^^n
"FIA",757.33,0,10)

"FIA",757.33,0,11)

"FIA",757.33,0,"RLRO")

"FIA",757.33,0,"VR")
2.0^LEX
"FIA",757.33,757.33)
0
"FIA",757.33,757.333)
0
"INI")
PRE^LEX2051P
"INIT")
POST^LEX2051P
"IX",757.01,757.118,"C",0)
757.118^C^Index of designation code by coding system^R^^R^IR^I^757.118^^^^^LS
"IX",757.01,757.118,"C",1)
S ^LEX(757.01,DA(1),7,"C",X(1),$E(X(2),1,30),DA)=""
"IX",757.01,757.118,"C",2)
K ^LEX(757.01,DA(1),7,"C",X(1),$E(X(2),1,30),DA)
"IX",757.01,757.118,"C",2.5)
K ^LEX(757.01,DA(1),7,"C")
"IX",757.01,757.118,"C",11.1,0)
^.114IA^2^2
"IX",757.01,757.118,"C",11.1,1,0)
1^F^757.118^1^^1^F
"IX",757.01,757.118,"C",11.1,2,0)
2^F^757.118^.01^30^2^F
"IX",757.32,757.32,"C",0)
757.32^C^Mapping VUID^R^^F^IR^I^757.32^^^^^LS
"IX",757.32,757.32,"C",1)
S ^LEX(757.32,"C",X,DA)=""
"IX",757.32,757.32,"C",2)
K ^LEX(757.32,"C",X,DA)
"IX",757.32,757.32,"C",2.5)
K ^LEX(757.32,"C")
"IX",757.32,757.32,"C",11.1,0)
^.114IA^1^1
"IX",757.32,757.32,"C",11.1,1,0)
1^F^757.32^5^^1^F
"IX",757.32,757.32,"C",11.1,1,3)

"IX",757.33,757.33,"ACT",0)
757.33^ACT^Activation History^R^^R^IR^W^757.333^^^^^S
"IX",757.33,757.33,"ACT",.1,0)
^^10^10^3080814^
"IX",757.33,757.33,"ACT",.1,1,0)
^LEX(757.33,"ACT",SRC,TGT,EFF,STA,IEN,HIS) - Where SRC is the 
"IX",757.33,757.33,"ACT",.1,2,0)
Source Code appended with a trailing space character, TGT is
"IX",757.33,757.33,"ACT",.1,3,0)
the Target Code appended with a trailing space character, EFF
"IX",757.33,757.33,"ACT",.1,4,0)
is the effective date of the mapping status, STA is the status 
"IX",757.33,757.33,"ACT",.1,5,0)
of the mapping (1=Active 0=Inactive), IEN is the Internal Entry
"IX",757.33,757.33,"ACT",.1,6,0)
Number in the MAPPINGS file where this mapping Status History 
"IX",757.33,757.33,"ACT",.1,7,0)
is stored, and HIS is the Internal Entry Number of the Status 
"IX",757.33,757.33,"ACT",.1,8,0)
History multiple where this effective date is stored.  This 
"IX",757.33,757.33,"ACT",.1,9,0)
cross-reference is used to determine if a mapping is active 
"IX",757.33,757.33,"ACT",.1,10,0)
on the date of service.
"IX",757.33,757.33,"ACT",1)
S ^LEX(757.33,"ACT",$E(X(1),1,15),$E(X(2),1,10),$E(X(3),1,7),$E(X(4),1,10),DA(1),DA)=""
"IX",757.33,757.33,"ACT",2)
K ^LEX(757.33,"ACT",$E(X(1),1,15),$E(X(2),1,10),$E(X(3),1,7),$E(X(4),1,10),DA(1),DA)
"IX",757.33,757.33,"ACT",2.5)
K ^LEX(757.33,"ACT")
"IX",757.33,757.33,"ACT",11.1,0)
^.114IA^4^4
"IX",757.33,757.33,"ACT",11.1,1,0)
1^C^^^15^1^F^Source
"IX",757.33,757.33,"ACT",11.1,1,1.5)
S X=$P($G(^LEX(757.33,DA(1),0)),U,2)_" "
"IX",757.33,757.33,"ACT",11.1,2,0)
2^C^^^10^2^^Target
"IX",757.33,757.33,"ACT",11.1,2,1.5)
S X=$P($G(^LEX(757.33,DA(1),0)),U,3)_" "
"IX",757.33,757.33,"ACT",11.1,3,0)
3^F^757.333^.01^7^3^F^Effective Date:  
"IX",757.33,757.33,"ACT",11.1,4,0)
4^F^757.333^1^10^4^F^Status:  
"IX",757.33,757.33,"AMAP",0)
757.33^AMAP^Source to Target^R^^R^IR^I^757.33^^^^^S
"IX",757.33,757.33,"AMAP",1)
S ^LEX(757.33,"AMAP",$E(X(1),1,30),$E(X(2),1,15),$E(X(3),1,10),DA)=""
"IX",757.33,757.33,"AMAP",2)
K ^LEX(757.33,"AMAP",$E(X(1),1,30),$E(X(2),1,15),$E(X(3),1,10),DA)
"IX",757.33,757.33,"AMAP",2.5)
K ^LEX(757.33,"AMAP")
"IX",757.33,757.33,"AMAP",11.1,0)
^.114IA^3^3
"IX",757.33,757.33,"AMAP",11.1,1,0)
1^F^757.33^.02^30^1^F^Mapping Definition:  
"IX",757.33,757.33,"AMAP",11.1,1,2)
S X=$S($L($P($G(^LEX(757.32,+($G(X)),0)),U,1)):$P($G(^LEX(757.32,+($G(X)),0)),U,1),1:+($G(X)))
"IX",757.33,757.33,"AMAP",11.1,2,0)
2^F^757.33^1^15^2^F^Source Code:  
"IX",757.33,757.33,"AMAP",11.1,2,2)
S X=$G(X)_" "
"IX",757.33,757.33,"AMAP",11.1,3,0)
3^F^757.33^2^10^3^F^Target Code:  
"IX",757.33,757.33,"AMAP",11.1,3,2)
S X=$G(X)_" "
"IX",757.33,757.33,"AMAPS",0)
757.33^AMAPS^status and date fields^MU^^R^I^W^757.333^^^^^A
"IX",757.33,757.33,"AMAPS",1)
D OPKG^XUHUI("","LEX MAPPING CHANGE EVENT","","AMAPS") Q
"IX",757.33,757.33,"AMAPS",1.4)

"IX",757.33,757.33,"AMAPS",2)
Q
"IX",757.33,757.33,"AMAPS",2.5)
Q
"IX",757.33,757.33,"AMAPS",11.1,0)
^.114IA^2^2
"IX",757.33,757.33,"AMAPS",11.1,1,0)
1^F^757.333^.01^^1^F
"IX",757.33,757.33,"AMAPS",11.1,2,0)
2^F^757.333^1^^2^F
"IX",757.33,757.33,"AREV",0)
757.33^AREV^Target to Source (Reverse)^R^^R^IR^I^757.33^^^^^S
"IX",757.33,757.33,"AREV",1)
S ^LEX(757.33,"AREV",$E(X(1),1,30),$E(X(2),1,30),$E(X(3),1,30),DA)=""
"IX",757.33,757.33,"AREV",2)
K ^LEX(757.33,"AREV",$E(X(1),1,30),$E(X(2),1,30),$E(X(3),1,30),DA)
"IX",757.33,757.33,"AREV",2.5)
K ^LEX(757.33,"AREV")
"IX",757.33,757.33,"AREV",11.1,0)
^.114IA^3^3
"IX",757.33,757.33,"AREV",11.1,1,0)
1^F^757.33^.02^30^1^F
"IX",757.33,757.33,"AREV",11.1,1,2)
S X=$S($L($P($G(^LEX(757.32,+($G(X)),0)),U,1)):$P($G(^LEX(757.32,+($G(X)),0)),U,1),1:+($G(X)))
"IX",757.33,757.33,"AREV",11.1,1,3)

"IX",757.33,757.33,"AREV",11.1,2,0)
2^F^757.33^2^30^2^F
"IX",757.33,757.33,"AREV",11.1,2,2)
S X=(X_" ")
"IX",757.33,757.33,"AREV",11.1,2,3)

"IX",757.33,757.33,"AREV",11.1,3,0)
3^F^757.33^1^30^3^F
"IX",757.33,757.33,"AREV",11.1,3,2)
S X=(X_" ")
"IX",757.33,757.33,"AREV",11.1,3,3)

"IX",757.33,757.33,"ASRC",0)
757.33^ASRC^Source to Target^R^^R^IR^I^757.33^^^^^S
"IX",757.33,757.33,"ASRC",.1,0)
^^7^7^3080820^
"IX",757.33,757.33,"ASRC",.1,1,0)
^LEX(757.33,"ASRC",DEF,SRC,TAR,IEN) - Where DEF is the Mapping
"IX",757.33,757.33,"ASRC",.1,2,0)
Definition from file 757.32, SRC is the Source Code appended 
"IX",757.33,757.33,"ASRC",.1,3,0)
with a trailing space character, TAR is the Target Code appended
"IX",757.33,757.33,"ASRC",.1,4,0)
with a trailing space character, IEN is the Internal Entry
"IX",757.33,757.33,"ASRC",.1,5,0)
Number in the MAPPINGS file where this Source to Target mapping
"IX",757.33,757.33,"ASRC",.1,6,0)
is stored.  This is used to find all the mapped target codes 
"IX",757.33,757.33,"ASRC",.1,7,0)
for a given source code in a specified definition.
"IX",757.33,757.33,"ASRC",1)
S ^LEX(757.33,"ASRC",$E(X(1),1,30),$E(X(2),1,15),$E(X(3),1,10),DA)=""
"IX",757.33,757.33,"ASRC",2)
K ^LEX(757.33,"ASRC",$E(X(1),1,30),$E(X(2),1,15),$E(X(3),1,10),DA)
"IX",757.33,757.33,"ASRC",2.5)
K ^LEX(757.33,"ASRC")
"IX",757.33,757.33,"ASRC",11.1,0)
^.114IA^3^3
"IX",757.33,757.33,"ASRC",11.1,1,0)
1^F^757.33^.02^30^1^F^Mapping Definition:  
"IX",757.33,757.33,"ASRC",11.1,1,2)
S X=$S($L($P($G(^LEX(757.32,+($G(X)),0)),U,1)):$P($G(^LEX(757.32,+($G(X)),0)),U,1),1:+($G(X)))
"IX",757.33,757.33,"ASRC",11.1,2,0)
2^F^757.33^1^15^2^F^Source Code:  
"IX",757.33,757.33,"ASRC",11.1,2,2)
S X=$G(X)_" "
"IX",757.33,757.33,"ASRC",11.1,3,0)
3^F^757.33^2^10^3^F^Target Code:  
"IX",757.33,757.33,"ASRC",11.1,3,2)
S X=$G(X)_" "
"IX",757.33,757.33,"ATAR",0)
757.33^ATAR^Target to Source^R^^R^IR^I^757.33^^^^^S
"IX",757.33,757.33,"ATAR",.1,0)
^^8^8^3080821^
"IX",757.33,757.33,"ATAR",.1,1,0)
^LEX(757.33,"ATAR",DEF,TAR,SRC,IEN) - Where DEF is the Mapping
"IX",757.33,757.33,"ATAR",.1,2,0)
Definition from file 757.32, TAR is the Target Code appended 
"IX",757.33,757.33,"ATAR",.1,3,0)
with a trailing space character, SRC is the Source Code appended
"IX",757.33,757.33,"ATAR",.1,4,0)
with a trailing space character, IEN is the Internal Entry
"IX",757.33,757.33,"ATAR",.1,5,0)
Number in the MAPPINGS file where this Target to Source mapping
"IX",757.33,757.33,"ATAR",.1,6,0)
is stored.  This is the opposite of the ASRC index and used to
"IX",757.33,757.33,"ATAR",.1,7,0)
find all the mapped source codes for a given target code in a
"IX",757.33,757.33,"ATAR",.1,8,0)
specified definition.
"IX",757.33,757.33,"ATAR",1)
S ^LEX(757.33,"ATAR",$E(X(1),1,30),$E(X(2),1,30),$E(X(3),1,30),DA)=""
"IX",757.33,757.33,"ATAR",2)
K ^LEX(757.33,"ATAR",$E(X(1),1,30),$E(X(2),1,30),$E(X(3),1,30),DA)
"IX",757.33,757.33,"ATAR",2.5)
K ^LEX(757.33,"ATAR")
"IX",757.33,757.33,"ATAR",11.1,0)
^.114IA^3^3
"IX",757.33,757.33,"ATAR",11.1,1,0)
1^F^757.33^.02^30^1^F
"IX",757.33,757.33,"ATAR",11.1,1,2)
S X=$S($L($P($G(^LEX(757.32,+($G(X)),0)),U,1)):$P($G(^LEX(757.32,+($G(X)),0)),U,1),1:+($G(X)))
"IX",757.33,757.33,"ATAR",11.1,2,0)
2^F^757.33^2^30^2^F
"IX",757.33,757.33,"ATAR",11.1,2,2)
S X=(X_" ")
"IX",757.33,757.33,"ATAR",11.1,3,0)
3^F^757.33^1^30^3^F
"IX",757.33,757.33,"ATAR",11.1,3,2)
S X=(X_" ")
"IX",757.33,757.33,"C",0)
757.33^C^Source Code to Target Code^R^^R^IR^I^757.33^^^^^LS
"IX",757.33,757.33,"C",.1,0)
^^5^5^3080820^
"IX",757.33,757.33,"C",.1,1,0)
^LEX(757.33,"C",DEF,SRC,ORD,TAR,IEN) - Where DEF is a pointer to
"IX",757.33,757.33,"C",.1,2,0)
the Mapping Definition file 757.32, SRC is the Source Code, ORD
"IX",757.33,757.33,"C",.1,3,0)
is the Mapping Order of the Target Code, TAR is the Target code 
"IX",757.33,757.33,"C",.1,4,0)
and IEN is the location in file 757.33 where this source to 
"IX",757.33,757.33,"C",.1,5,0)
target mapping is stored.
"IX",757.33,757.33,"C",1)
S ^LEX(757.33,"C",$E(X(1),1,10),$E(X(2),1,30),$E(X(3),1,15),$E(X(4),1,30),DA)=""
"IX",757.33,757.33,"C",2)
K ^LEX(757.33,"C",$E(X(1),1,10),$E(X(2),1,30),$E(X(3),1,15),$E(X(4),1,30),DA)
"IX",757.33,757.33,"C",2.5)
K ^LEX(757.33,"C")
"IX",757.33,757.33,"C",11.1,0)
^.114IA^4^4
"IX",757.33,757.33,"C",11.1,1,0)
1^F^757.33^.02^10^1^F^Select Mapping Definition
"IX",757.33,757.33,"C",11.1,2,0)
2^F^757.33^1^30^2^F^Enter Source Code
"IX",757.33,757.33,"C",11.1,3,0)
3^F^757.33^4^15^3^F^Enter Mapping Order
"IX",757.33,757.33,"C",11.1,4,0)
4^F^757.33^2^30^4^F^Enter Target Code
"IX",757.33,757.33,"G",0)
757.33^G^Mapping Status^R^^R^IR^W^757.333^^^^^LS
"IX",757.33,757.33,"G",.1,0)
^^4^4^3080820^
"IX",757.33,757.33,"G",.1,1,0)
^LEX(757.33,"G",MAP,EFF,STA,IEN) - Where MAP is the Mapping ID,
"IX",757.33,757.33,"G",.1,2,0)
EFF is the effective date of the Mapping ID's Status, STA is the
"IX",757.33,757.33,"G",.1,3,0)
Status (1=Active 0=Inactive), IEN is the location in file 757.33
"IX",757.33,757.33,"G",.1,4,0)
where the Mapping ID is stored.
"IX",757.33,757.33,"G",1)
S ^LEX(757.33,"G",$E(X(1),1,15),$E(X(2),1,16),$E(X(3),1,8),DA(1),DA)=""
"IX",757.33,757.33,"G",2)
K ^LEX(757.33,"G",$E(X(1),1,15),$E(X(2),1,16),$E(X(3),1,8),DA(1),DA)
"IX",757.33,757.33,"G",2.5)
K ^LEX(757.33,"G")
"IX",757.33,757.33,"G",11.1,0)
^.114IA^3^3
"IX",757.33,757.33,"G",11.1,1,0)
1^C^^^15^1^^Enter Mapping ID
"IX",757.33,757.33,"G",11.1,1,1.5)
S X=$P($G(^LEX(757.33,DA(1),0)),U)
"IX",757.33,757.33,"G",11.1,2,0)
2^F^757.333^.01^16^2^F^Enter Effective Date
"IX",757.33,757.33,"G",11.1,2,3)

"IX",757.33,757.33,"G",11.1,3,0)
3^F^757.333^1^8^3^F^Enter Activation Status
"IX",757.33,757.33,"G",11.1,3,3)

"IX",757.33,757.333,"ACHGD",0)
757.333^ACHGD^Change Date^MU^^F^IR^I^757.333^^^^^A
"IX",757.33,757.333,"ACHGD",.1,0)
^^4^4^3080815^
"IX",757.33,757.333,"ACHGD",.1,1,0)
The purpose of this action is to populate the CHANGE DATE
"IX",757.33,757.333,"ACHGD",.1,2,0)
field #2 of the STATUS HISTORY sub-file #757.333 with the
"IX",757.33,757.333,"ACHGD",.1,3,0)
current date and time whenever a status (active or inactive)
"IX",757.33,757.333,"ACHGD",.1,4,0)
is added or edited.
"IX",757.33,757.333,"ACHGD",1)
S $P(^LEX(757.33,+($G(DA(1))),2,+($G(DA)),0),U,3)=$$NOW^XLFDT
"IX",757.33,757.333,"ACHGD",1.4)
S X=X1(1)'=X2(1)
"IX",757.33,757.333,"ACHGD",2)
Q
"IX",757.33,757.333,"ACHGD",11.1,0)
^.114IA^1^1
"IX",757.33,757.333,"ACHGD",11.1,1,0)
1^F^757.333^1^8^^F^Enter Status
"MBREQ")
0
"PKG",574,-1)
1^1
"PKG",574,0)
LEXICON UTILITY^LEX^Medical and Biomedical Terminology System.
"PKG",574,20,0)
^9.402P^^
"PKG",574,22,0)
^9.49I^1^1
"PKG",574,22,1,0)
2.0^2960915^2970127^1
"PKG",574,22,1,"PAH",1,0)
51^3120726^520736413
"PRE")
LEX2051
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
9
"RTN","LEX2051")
0^^B75576733^n/a
"RTN","LEX2051",1,0)
LEX2051 ;ISL/FJF - Environment Check/Pre/Post Install ; 30 Aug 2011  11:24 PM
"RTN","LEX2051",2,0)
 ;;2.0;LEXICON UTILITY;**51**;Sep 23, 1996;Build 77
"RTN","LEX2051",3,0)
 ;                     
"RTN","LEX2051",4,0)
 ; External References
"RTN","LEX2051",5,0)
 ;   DBIA 10015  EN^DIQ1
"RTN","LEX2051",6,0)
 ;   DBIA 10141  $$PATCH^XPDUTL
"RTN","LEX2051",7,0)
 ;   DBIA 10141  $$VERSION^XPDUTL
"RTN","LEX2051",8,0)
 ;   DBIA 10141  BMES^XPDUTL
"RTN","LEX2051",9,0)
 ;   DBIA 10141  MES^XPDUTL
"RTN","LEX2051",10,0)
 ;                            
"RTN","LEX2051",11,0)
ENV ; LEX*2.0*51 Environment Check
"RTN","LEX2051",12,0)
 ;                    
"RTN","LEX2051",13,0)
 ;   General
"RTN","LEX2051",14,0)
 W !," Problem List Standardization SNOMED CT subset release",!
"RTN","LEX2051",15,0)
 ;
"RTN","LEX2051",16,0)
 N LEXBUILD,LEXIGHF,LEXREQP,LEXLREV,LEXG,LEXE
"RTN","LEX2051",17,0)
 D IMP
"RTN","LEX2051",18,0)
 S U="^"
"RTN","LEX2051",19,0)
 ;     No user
"RTN","LEX2051",20,0)
 D:+$$UR'>0 ET("User not defined (DUZ)")
"RTN","LEX2051",21,0)
 ;     No IO
"RTN","LEX2051",22,0)
 D:+$$SY'>0 ET("Undefined IO variable(s)")
"RTN","LEX2051",23,0)
 I $D(LEXE) D ABRT Q
"RTN","LEX2051",24,0)
 ;                    
"RTN","LEX2051",25,0)
 ;   Load Distribution
"RTN","LEX2051",26,0)
 ;
"RTN","LEX2051",27,0)
 ;     XPDENV = 0 Environment Check during Load
"RTN","LEX2051",28,0)
 ;
"RTN","LEX2051",29,0)
 ;       Check Version (2.0)
"RTN","LEX2051",30,0)
 I $$VERSION^XPDUTL("LEX")'="2.0" D  D ABRT Q
"RTN","LEX2051",31,0)
 . D ET("Version 2.0 not found.  Please install Lexicon Utility v 2.0")
"RTN","LEX2051",32,0)
 ;
"RTN","LEX2051",33,0)
 ;       Check Required Patches
"RTN","LEX2051",34,0)
 D:'$L($G(LEXREQP)) IMP I $L(LEXREQP) D
"RTN","LEX2051",35,0)
 .N LEXPAT,LEXI,LEXPN
"RTN","LEX2051",36,0)
 .F LEXI=1:1 Q:'$L($P(LEXREQP,";",LEXI))  S LEXPAT=$P(LEXREQP,";",LEXI) D
"RTN","LEX2051",37,0)
 ..S LEXPN=$$PATCH^XPDUTL(LEXPAT)
"RTN","LEX2051",38,0)
 ..W !,"   Checking for ",LEXPAT I +LEXPN>0 H 1 W " - installed"
"RTN","LEX2051",39,0)
 ..I +LEXPN'>0 D ET((LEXPAT_" not found, please install "_LEXPAT_" before continuing"))
"RTN","LEX2051",40,0)
 I $D(LEXE) D ABRT Q
"RTN","LEX2051",41,0)
 S LEXG=$$RGBL
"RTN","LEX2051",42,0)
 I $D(LEXE)&(+LEXG=0) D ABRT Q
"RTN","LEX2051",43,0)
 I $D(LEXE)&(+LEXG<0) D ABRT Q
"RTN","LEX2051",44,0)
 I '$D(LEXFULL)&(+($G(XPDENV))'=1) D QUIT Q
"RTN","LEX2051",45,0)
 ;                    
"RTN","LEX2051",46,0)
 ;   Install Package(s)
"RTN","LEX2051",47,0)
 ;
"RTN","LEX2051",48,0)
 ;     XPDENV = 1 Environment Check during Install
"RTN","LEX2051",49,0)
 ;
"RTN","LEX2051",50,0)
 ;       Check Data "is installed" or "is translated"
"RTN","LEX2051",51,0)
 N LEXIT S LEXIT=+$$CPD
"RTN","LEX2051",52,0)
 I '$D(LEXFULL)&(LEXIT)
"RTN","LEX2051",53,0)
 D QUIT
"RTN","LEX2051",54,0)
 Q
"RTN","LEX2051",55,0)
 ;       Checking Global "Write" Protection 
"RTN","LEX2051",56,0)
 D:+($G(XPDENV))=1 GBLS I $D(LEXE) D ABRT Q
"RTN","LEX2051",57,0)
 ;       Check Import Global Checksum 
"RTN","LEX2051",58,0)
 D:+($G(XPDENV))=1 CS I $D(LEXE) D ABRT Q
"RTN","LEX2051",59,0)
 ;                    
"RTN","LEX2051",60,0)
 ;   Quit, Exit or Abort
"RTN","LEX2051",61,0)
 ;
"RTN","LEX2051",62,0)
QUIT ;     Quit   Passed Environment Check
"RTN","LEX2051",63,0)
 K LEXFULL D OK
"RTN","LEX2051",64,0)
 Q
"RTN","LEX2051",65,0)
EXIT ;     Exit   Failed Environment Check
"RTN","LEX2051",66,0)
 D:$D(LEXE) ED
"RTN","LEX2051",67,0)
 S XPDQUIT=2
"RTN","LEX2051",68,0)
 K LEXE,LEXFULL
"RTN","LEX2051",69,0)
 Q
"RTN","LEX2051",70,0)
ABRT ;     Abort  Failed Environment Check, KILL the distribution
"RTN","LEX2051",71,0)
 D:$D(LEXE) ED
"RTN","LEX2051",72,0)
 S XPDABORT=1,XPDQUIT=1,XPDQUIT("LEX*2.0*51")=1
"RTN","LEX2051",73,0)
 K LEXE,LEXFULL
"RTN","LEX2051",74,0)
 Q
"RTN","LEX2051",75,0)
 ;               
"RTN","LEX2051",76,0)
 ; Checks
"RTN","LEX2051",77,0)
 ;
"RTN","LEX2051",78,0)
GBLS ;   Check Write access on globals
"RTN","LEX2051",79,0)
 N LEXE,LEXGBL,LEXRT,LEXT,LEXF,LEXI,LEXX,LEXOK,LEXCPD,LEXS,X S LEXOK=1
"RTN","LEX2051",80,0)
 D BM("   I will now check the protection on ^LEX, ^ICPT, ^ICD and ^DIC Globals.")
"RTN","LEX2051",81,0)
 D M("   If you get an ERROR, you will need to change the protection on these")
"RTN","LEX2051",82,0)
 D M("   globals to allow read/write as indicated:")
"RTN","LEX2051",83,0)
 D BM("                        Owner     Group    World   Network")
"RTN","LEX2051",84,0)
 D M("      Cache systems      RWD       RW       RW      RWD")
"RTN","LEX2051",85,0)
 D BM("   Checking:"),M(" ")
"RTN","LEX2051",86,0)
 S LEXCPD=$$CPD,LEXS="",X=1 F LEXI=1:1 D  Q:'$L(LEXX)
"RTN","LEX2051",87,0)
 .S LEXX=""
"RTN","LEX2051",88,0)
 .S LEXE="S LEXX=$T(GD+"_LEXI_")"
"RTN","LEX2051",89,0)
 .X LEXE
"RTN","LEX2051",90,0)
 .S LEXX=$$TRIM(LEXX)
"RTN","LEX2051",91,0)
 .Q:'$L(LEXX)
"RTN","LEX2051",92,0)
 .Q:'$L($TR(LEXX,";",""))
"RTN","LEX2051",93,0)
 .S LEXGBL=$P(LEXX,";",3)
"RTN","LEX2051",94,0)
 .Q:+LEXCPD>0&(LEXGBL="^LEXM(0)")
"RTN","LEX2051",95,0)
 .S LEXRT=$P(LEXX,";",4),LEXT=$P(LEXX,";",5),LEXF=$P(LEXX,";",6)
"RTN","LEX2051",96,0)
 .S (LEXB1,LEXB2)=""
"RTN","LEX2051",97,0)
 .S $P(LEXB1," ",(19-$L(LEXRT)))="",$P(LEXB2," ",(28-$L(LEXT)))=""
"RTN","LEX2051",98,0)
 .I '$D(@LEXGBL) D RGNF S LEXOK=0 D M(("      <"_LEXRT_" not found>")) Q
"RTN","LEX2051",99,0)
 .D M(("      "_LEXRT_LEXB1_LEXT_LEXB2_LEXF))
"RTN","LEX2051",100,0)
 .S @LEXGBL=$G(@LEXGBL) H 1
"RTN","LEX2051",101,0)
 D:LEXOK M("    --> ok") D:'LEXOK M("    ??") D M(" ")
"RTN","LEX2051",102,0)
 Q
"RTN","LEX2051",103,0)
RGBL(X) ;   Check Write access on globals
"RTN","LEX2051",104,0)
 N LEXCPD,LEXS,LEXI,LEXX,LEXEC,LEXGBL,LEXRT,LEXT,LEXF,LEXB1,LEXB2
"RTN","LEX2051",105,0)
 S LEXCPD=$$CPD,LEXS="",X=1
"RTN","LEX2051",106,0)
 F LEXI=1:1 D  Q:'$L(LEXX)
"RTN","LEX2051",107,0)
 .S LEXX=""
"RTN","LEX2051",108,0)
 .S LEXEC="S LEXX=$T(GD+"_LEXI_")"
"RTN","LEX2051",109,0)
 .X LEXEC
"RTN","LEX2051",110,0)
 .S LEXX=$$TRIM(LEXX)
"RTN","LEX2051",111,0)
 .Q:'$L(LEXX)
"RTN","LEX2051",112,0)
 .Q:'$L($TR(LEXX,";",""))
"RTN","LEX2051",113,0)
 .S LEXGBL=$P(LEXX,";",3)
"RTN","LEX2051",114,0)
 .I +LEXCPD>0,LEXGBL="^LEXM(0)" Q
"RTN","LEX2051",115,0)
 .S LEXRT=$P(LEXX,";",4),LEXT=$P(LEXX,";",5),LEXF=$P(LEXX,";",6)
"RTN","LEX2051",116,0)
 .S (LEXB1,LEXB2)="",$P(LEXB1," ",(15-$L(LEXRT)))="",$P(LEXB2," ",(28-$L(LEXT)))=""
"RTN","LEX2051",117,0)
 .I '$D(@LEXGBL) S:LEXS'[LEXRT LEXS=LEXS_", "_LEXRT S X=-1 S:LEXGBL["LEXM("&(X=1) X=0
"RTN","LEX2051",118,0)
 I $L(LEXS),X'>0 D
"RTN","LEX2051",119,0)
 .S:LEXS[", " LEXS=$P(LEXS,", ",1,($L(LEXS,", ")-1))_" and "_$P(LEXS,", ",$L(LEXS,", "))
"RTN","LEX2051",120,0)
 .S:$E(LEXS,1,2)=", " LEXS=$E(LEXS,3,$L(LEXS)) S:$E(LEXS,1,7)[" and " LEXS=$P(LEXS," and ",2)
"RTN","LEX2051",121,0)
 .D:X=-1 ET(("Global"_$S(LEXS[", "!(LEXS[" and "):"s",1:"")_" "_LEXS_" either not found or incomplete."))
"RTN","LEX2051",122,0)
 .D:X=0 CM
"RTN","LEX2051",123,0)
 Q X
"RTN","LEX2051",124,0)
RGNF ;   Required global not found
"RTN","LEX2051",125,0)
 N LEXLREV,LEXREQP,LEXBUILD,LEXIGHF
"RTN","LEX2051",126,0)
 D IMP
"RTN","LEX2051",127,0)
 I $G(LEXGBL)["^LEX",$G(LEXGBL)'["^LEXM" D
"RTN","LEX2051",128,0)
 .D ET("")
"RTN","LEX2051",129,0)
 .D ET("Required global "_$P($G(LEXGBL),"(",1)_" not found.")
"RTN","LEX2051",130,0)
 I $G(LEXGBL)["^LEX",$G(LEXGBL)["^LEXM" D CM
"RTN","LEX2051",131,0)
 Q
"RTN","LEX2051",132,0)
CHK ;   Check the Checksum
"RTN","LEX2051",133,0)
 D CS I $D(LEXE) D ED Q
"RTN","LEX2051",134,0)
 D BM("  OK"),M(" ")
"RTN","LEX2051",135,0)
 Q
"RTN","LEX2051",136,0)
CS ;   Checksum for import global
"RTN","LEX2051",137,0)
 K LEXE
"RTN","LEX2051",138,0)
 D BM("   Running checksum routine on the ^LEXM import global, please wait")
"RTN","LEX2051",139,0)
 N LEXCHK,LEXNDS,LEXVER
"RTN","LEX2051",140,0)
 S LEXCHK=+$G(^LEXM(0,"CHECKSUM"))
"RTN","LEX2051",141,0)
 S LEXNDS=+$G(^LEXM(0,"NODES"))
"RTN","LEX2051",142,0)
 S LEXVER=+$$VC(LEXCHK,LEXNDS)
"RTN","LEX2051",143,0)
 D M(" ") D:LEXVER>0 M("     Checksum is ok"),M(" ")
"RTN","LEX2051",144,0)
 S LEXVER=1 ; <======
"RTN","LEX2051",145,0)
 D:LEXVER=0 CM
"RTN","LEX2051",146,0)
 D:LEXVER=-1 CW
"RTN","LEX2051",147,0)
 D:LEXVER=-2 CU
"RTN","LEX2051",148,0)
 D:LEXVER=-3 CF
"RTN","LEX2051",149,0)
 Q
"RTN","LEX2051",150,0)
VC(X,Y) ;   Verify Checksum for import global
"RTN","LEX2051",151,0)
 N LEXLREV,LEXREQP,LEXBUILD,LEXIGHF Q:'$D(^LEXM) 0
"RTN","LEX2051",152,0)
 D IMP
"RTN","LEX2051",153,0)
 I $G(^LEXM(0,"BUILD"))'=$G(LEXBUILD) Q -1
"RTN","LEX2051",154,0)
 N LEXCHK,LEXNDS,LEXCNT,LEXLC,LEXL,LEXS,LEXNC,LEXD,LEXN,LEXC,LEXGCS,LEXP,LEXT
"RTN","LEX2051",155,0)
 S LEXCHK=+$G(X),LEXNDS=+$G(Y)
"RTN","LEX2051",156,0)
 Q:LEXCHK'>0!(LEXNDS'>0) -2
"RTN","LEX2051",157,0)
 S LEXL=64,(LEXCNT,LEXLC)=0,LEXS=+(LEXNDS\LEXL)
"RTN","LEX2051",158,0)
 S:LEXS=0 LEXS=1
"RTN","LEX2051",159,0)
 D:+$O(^LEXM(0))>0 M("")
"RTN","LEX2051",160,0)
 S (LEXC,LEXN)="^LEXM",(LEXNC,LEXGCS)=0
"RTN","LEX2051",161,0)
 W "   "
"RTN","LEX2051",162,0)
 F  S LEXN=$Q(@LEXN) Q:LEXN=""!(LEXN'[LEXC)  D
"RTN","LEX2051",163,0)
 .Q:LEXN="^LEXM(0,""CHECKSUM"")"
"RTN","LEX2051",164,0)
 .Q:LEXN="^LEXM(0,""NODES"")"
"RTN","LEX2051",165,0)
 .S LEXCNT=LEXCNT+1
"RTN","LEX2051",166,0)
 .I LEXCNT'<LEXS S LEXLC=LEXLC+1 W:LEXLC'>LEXL "." S LEXCNT=0
"RTN","LEX2051",167,0)
 .S LEXNC=LEXNC+1,LEXD=@LEXN,LEXT=LEXN_"="_LEXD
"RTN","LEX2051",168,0)
 .F LEXP=1:1:$L(LEXT) S LEXGCS=$A(LEXT,LEXP)*LEXP+LEXGCS
"RTN","LEX2051",169,0)
 Q:LEXNC'=LEXNDS -3
"RTN","LEX2051",170,0)
 Q:LEXGCS'=LEXCHK -3
"RTN","LEX2051",171,0)
 Q 1
"RTN","LEX2051",172,0)
SY(X) ;   Check System variables
"RTN","LEX2051",173,0)
 Q:'$D(IO)!('$D(IOF))!('$D(IOM))!('$D(ION))!('$D(IOSL))!('$D(IOST)) 0
"RTN","LEX2051",174,0)
 Q 1
"RTN","LEX2051",175,0)
UR(X) ;   Check User variables
"RTN","LEX2051",176,0)
 Q:'$L($G(DUZ(0))) 0
"RTN","LEX2051",177,0)
 Q:+($G(DUZ))=0!($$NOTDEF(+$G(DUZ))) 0
"RTN","LEX2051",178,0)
 Q 1
"RTN","LEX2051",179,0)
CPD(X) ;   Check Current Patched Data is installed
"RTN","LEX2051",180,0)
 N INS S INS=1
"RTN","LEX2051",181,0)
 Q 0
"RTN","LEX2051",182,0)
 ;               
"RTN","LEX2051",183,0)
 ; Error messages
"RTN","LEX2051",184,0)
 ;
"RTN","LEX2051",185,0)
CM ;   Missing ^LEXM
"RTN","LEX2051",186,0)
 N LEXLREV,LEXREQP,LEXBUILD,LEXIGHF D IMP D ET(""),ET("Missing import global ^LEXM.") D CO
"RTN","LEX2051",187,0)
 Q
"RTN","LEX2051",188,0)
CW ;   Wrong ^LEXM
"RTN","LEX2051",189,0)
 N LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXB
"RTN","LEX2051",190,0)
 D IMP
"RTN","LEX2051",191,0)
 S LEXB=$G(^LEXM(0,"BUILD")) D ET("")
"RTN","LEX2051",192,0)
 I $L(LEXBUILD),$L(LEXB),LEXBUILD'=LEXB D  Q
"RTN","LEX2051",193,0)
 .D ET(("Incorrect import global ^LEXM found ("_LEXB_" global)."))
"RTN","LEX2051",194,0)
 .D CKO
"RTN","LEX2051",195,0)
 D ET("Incorrect import global ^LEXM found.") D CKO
"RTN","LEX2051",196,0)
 Q
"RTN","LEX2051",197,0)
CU ;   Unable to verify
"RTN","LEX2051",198,0)
 N LEXLREV,LEXREQP,LEXBUILD,LEXIGHF
"RTN","LEX2051",199,0)
 D IMP
"RTN","LEX2051",200,0)
 D ET("")
"RTN","LEX2051",201,0)
 D ET("Unable to verify checksum for import global ^LEXM (possibly corrupt).")
"RTN","LEX2051",202,0)
 D CKO
"RTN","LEX2051",203,0)
 Q
"RTN","LEX2051",204,0)
CF ;   Failed checksum
"RTN","LEX2051",205,0)
 N LEXLREV,LEXREQP,LEXBUILD,LEXIGHF
"RTN","LEX2051",206,0)
 D IMP
"RTN","LEX2051",207,0)
 D ET("")
"RTN","LEX2051",208,0)
 D ET("Import global ^LEXM failed checksum.")
"RTN","LEX2051",209,0)
 D CKO
"RTN","LEX2051",210,0)
 Q
"RTN","LEX2051",211,0)
CO ;   Obtain new global
"RTN","LEX2051",212,0)
 N LEXLREV,LEXREQP,LEXBUILD,LEXIGHF
"RTN","LEX2051",213,0)
 D IMP
"RTN","LEX2051",214,0)
 D ET("")
"RTN","LEX2051",215,0)
 D ET("    Please obtain a copy of the import global ^LEXM contained in the ")
"RTN","LEX2051",216,0)
 D ET(("    global host file "_LEXIGHF_" before continuing with the "_LEXBUILD))
"RTN","LEX2051",217,0)
 D ET(("    installation."))
"RTN","LEX2051",218,0)
 Q
"RTN","LEX2051",219,0)
CKO ;   Kill and Obtain new global
"RTN","LEX2051",220,0)
 N LEXLREV,LEXREQP,LEXBUILD,LEXIGHF
"RTN","LEX2051",221,0)
 D IMP
"RTN","LEX2051",222,0)
 D ET(""),ET("    Please KILL the existing import global ^LEXM from your system")
"RTN","LEX2051",223,0)
 D ET(("    and obtain a new copy of ^LEXM contained in the global host file"))
"RTN","LEX2051",224,0)
 D ET(("    "_LEXIGHF_" before continuing with the "_LEXBUILD_" installation."))
"RTN","LEX2051",225,0)
 Q
"RTN","LEX2051",226,0)
ET(X) ;   Error Text
"RTN","LEX2051",227,0)
 N LEXI
"RTN","LEX2051",228,0)
 S LEXI=+$G(LEXE(0)),LEXI=LEXI+1,LEXE(LEXI)="    "_$G(X),LEXE(0)=LEXI
"RTN","LEX2051",229,0)
 Q
"RTN","LEX2051",230,0)
ED ;   Error Display
"RTN","LEX2051",231,0)
 N LEXI S LEXI=0 F  S LEXI=$O(LEXE(LEXI)) Q:+LEXI=0  D M(LEXE(LEXI))
"RTN","LEX2051",232,0)
 D M(" ") K LEXE Q
"RTN","LEX2051",233,0)
 ;                   
"RTN","LEX2051",234,0)
 ; Miscellaneous
"RTN","LEX2051",235,0)
 ;
"RTN","LEX2051",236,0)
IMP ;   Import names
"RTN","LEX2051",237,0)
 S LEXLREV=51,LEXREQP="LEX*2.0*41",LEXBUILD="LEX*2.0*51"
"RTN","LEX2051",238,0)
 S LEXIGHF="LEX_2_51.GBL"
"RTN","LEX2051",239,0)
 Q
"RTN","LEX2051",240,0)
NOTDEF(IEN) ;   Check to see if user is defined
"RTN","LEX2051",241,0)
 N DA,DR,DIQ,LEX,DIC
"RTN","LEX2051",242,0)
 S DA=IEN,DR=.01,DIC=200,DIQ="LEX"
"RTN","LEX2051",243,0)
 D EN^DIQ1
"RTN","LEX2051",244,0)
 Q '$D(LEX)
"RTN","LEX2051",245,0)
OK ;   Environment is OK
"RTN","LEX2051",246,0)
 N LEXBUILD,LEXIGHF,LEXREQP,LEXLREV,LEXT
"RTN","LEX2051",247,0)
 D IMP S LEXT="  Environment "_$S($L(LEXBUILD):("for patch/build "_LEXBUILD_" "),1:"")_"is ok"
"RTN","LEX2051",248,0)
 D BM(LEXT),M(" ")
"RTN","LEX2051",249,0)
 Q
"RTN","LEX2051",250,0)
BM(X) ;   Blank Line with Message
"RTN","LEX2051",251,0)
 D BMES^XPDUTL($G(X)) Q
"RTN","LEX2051",252,0)
M(X) ;   Message
"RTN","LEX2051",253,0)
 D MES^XPDUTL($G(X)) Q
"RTN","LEX2051",254,0)
TRIM(X) ;   Trim Spaces
"RTN","LEX2051",255,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEX2051",256,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","LEX2051",257,0)
 Q X
"RTN","LEX2051",258,0)
EF ;   Exported Files
"RTN","LEX2051",259,0)
 ;;^LEX(757.01);^LEX(*;Lexicon;757-757.41
"RTN","LEX2051",260,0)
 ;;^LEX(757.01);^LEX(*;Lexicon;757-757.41
"RTN","LEX2051",261,0)
 ;;^LEXT(757.2);^LEXT(757.2);Lexicon Subsets/Defaults;757.2
"RTN","LEX2051",262,0)
 ;;^LEXM(0);^LEXM(*;Lexicon Export/Import;No File #
"RTN","LEX2051",263,0)
GD ;   Global Data
"RTN","LEX2051",264,0)
 ;;^LEX(757.01);^LEX(*;Lexicon;757-757.41
"RTN","LEX2051",265,0)
 ;;^LEX(757.01);^LEX(*;Lexicon;757-757.41
"RTN","LEX2051",266,0)
 ;;^LEXT(757.2);^LEXT(757.2);Lexicon Subsets/Defaults;757.2
"RTN","LEX2051",267,0)
 ;;^LEXM(0);^LEXM(*;Lexicon Export/Import;No File #
"RTN","LEX2051P")
0^^B6259698^n/a
"RTN","LEX2051P",1,0)
LEX2051P ;ISL/FJF - Pre/Post Install ; 30 Aug 2011  11:25 PM
"RTN","LEX2051P",2,0)
 ;;2.0;LEXICON UTILITY;**51**;Sep 23, 1996;Build 77
"RTN","LEX2051P",3,0)
 ;
"RTN","LEX2051P",4,0)
 ; External References
"RTN","LEX2051P",5,0)
 ;   DBIA 10086  HOME^%ZIS
"RTN","LEX2051P",6,0)
 ;   DBIA  2052  $$GET1^DID
"RTN","LEX2051P",7,0)
 ;   DBIA  2055  PRD^DILFD
"RTN","LEX2051P",8,0)
 ;   DBIA 10014  EN^DIU2
"RTN","LEX2051P",9,0)
 ;   DBIA 10141  BMES^XPDUTL
"RTN","LEX2051P",10,0)
 ;   DBIA 10141  MES^XPDUTL
"RTN","LEX2051P",11,0)
 ;   DBIA 10013  ^DIK
"RTN","LEX2051P",12,0)
 ;                      
"RTN","LEX2051P",13,0)
 Q
"RTN","LEX2051P",14,0)
 ;
"RTN","LEX2051P",15,0)
POST ; LEX*2.0*51 Post-Install
"RTN","LEX2051P",16,0)
 N LEXEDT,LEXMUMPS
"RTN","LEX2051P",17,0)
 S LEXEDT=$G(^LEXM(0,"CREATED"))
"RTN","LEX2051P",18,0)
 ;
"RTN","LEX2051P",19,0)
 ;-----------------------------
"RTN","LEX2051P",20,0)
 ;   Save Changes
"RTN","LEX2051P",21,0)
 D SCHG
"RTN","LEX2051P",22,0)
 ;
"RTN","LEX2051P",23,0)
 ;-----------------------------
"RTN","LEX2051P",24,0)
 ;   Load Data into Files
"RTN","LEX2051P",25,0)
 D LOAD
"RTN","LEX2051P",26,0)
 ;
"RTN","LEX2051P",27,0)
 ;-----------------------------
"RTN","LEX2051P",28,0)
 ;   Data Conversion
"RTN","LEX2051P",29,0)
 D CON
"RTN","LEX2051P",30,0)
 ;
"RTN","LEX2051P",31,0)
 ;-----------------------------
"RTN","LEX2051P",32,0)
 ;   Re-Index Files
"RTN","LEX2051P",33,0)
 D IND
"RTN","LEX2051P",34,0)
 ;
"RTN","LEX2051P",35,0)
 ;-----------------------------
"RTN","LEX2051P",36,0)
 ;   Send a Install Message
"RTN","LEX2051P",37,0)
 D MSG
"RTN","LEX2051P",38,0)
 ;
"RTN","LEX2051P",39,0)
 Q
"RTN","LEX2051P",40,0)
 ;-----------------------------
"RTN","LEX2051P",41,0)
 ;
"RTN","LEX2051P",42,0)
LOAD ; Load Data
"RTN","LEX2051P",43,0)
 ;             
"RTN","LEX2051P",44,0)
 ;      LEXSHORT   Send Short Message
"RTN","LEX2051P",45,0)
 ;      LEXMSG     Flag to send Message
"RTN","LEX2051P",46,0)
 ;            
"RTN","LEX2051P",47,0)
 N LEXSHORT,LEXMSG,LEXB,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF
"RTN","LEX2051P",48,0)
 S LEXSHORT="",LEXMSG=""
"RTN","LEX2051P",49,0)
 D IMP^LEX2051
"RTN","LEX2051P",50,0)
 S U="^",LEXB=$G(^LEXM(0,"BUILD")) Q:LEXB=""  Q:$G(LEXBUILD)=""
"RTN","LEX2051P",51,0)
 D:LEXB=LEXBUILD EN^LEXXGI
"RTN","LEX2051P",52,0)
LQ ; Load Quit
"RTN","LEX2051P",53,0)
 D KLEXM
"RTN","LEX2051P",54,0)
 Q
"RTN","LEX2051P",55,0)
 ;
"RTN","LEX2051P",56,0)
MSG ; Send Installation Message to G.LEXICON
"RTN","LEX2051P",57,0)
 Q:+($G(DUZ))=0!($$NOTDEF^LEX2051($G(DUZ)))
"RTN","LEX2051P",58,0)
 D HOME^%ZIS
"RTN","LEX2051P",59,0)
 N DIFROM,LEXLREV,LEXLAST,LEXBUILD,LEXIGHF,LEXSHORT
"RTN","LEX2051P",60,0)
 S LEXSHORT=1
"RTN","LEX2051P",61,0)
 D IMP^LEX2051 ;,POST^LEXXFI
"RTN","LEX2051P",62,0)
 Q
"RTN","LEX2051P",63,0)
 ;
"RTN","LEX2051P",64,0)
SCHG ; Save Change File Changes
"RTN","LEX2051P",65,0)
 N LEXI,LEXFI,LEXFIL,LEXRT
"RTN","LEX2051P",66,0)
 S LEXFI=0 F  S LEXFI=$O(^LEXM(LEXFI)) Q:+LEXFI=0  D
"RTN","LEX2051P",67,0)
 .S LEXI=0 F  S LEXI=$O(^LEXM(LEXFI,LEXI)) Q:+LEXI=0  D
"RTN","LEX2051P",68,0)
 ..N LEXCF,LEXIEN,LEXMUMPS
"RTN","LEX2051P",69,0)
 ..S LEXMUMPS=$G(^LEXM(LEXFI,LEXI)),LEXRT=$P(LEXMUMPS,"^",2)
"RTN","LEX2051P",70,0)
 ..S:LEXMUMPS["^LEX("!(LEXMUMPS["^LEXT(") LEXFIL=+($P(LEXRT,"(",2))
"RTN","LEX2051P",71,0)
 Q
"RTN","LEX2051P",72,0)
 ;
"RTN","LEX2051P",73,0)
KLEXM ; Subscripted Kill of ^LEXM
"RTN","LEX2051P",74,0)
 N DA S DA=0 F  S DA=$O(^LEXM(DA)) Q:+DA=0  K ^LEXM(DA)
"RTN","LEX2051P",75,0)
 K ^LEXM(0)
"RTN","LEX2051P",76,0)
 Q
"RTN","LEX2051P",77,0)
PRE ; LEX*2.0*51 Pre-Install
"RTN","LEX2051P",78,0)
 ; Kill all indexes
"RTN","LEX2051P",79,0)
 N DIK S DIK="^LEX(757.33," D IXALL2^DIK
"RTN","LEX2051P",80,0)
 ; Delete the old DD
"RTN","LEX2051P",81,0)
 N DIU S DIU="^LEX(757.33,",DIU(0)="T" D EN^DIU2
"RTN","LEX2051P",82,0)
 Q
"RTN","LEX2051P",83,0)
 ;
"RTN","LEX2051P",84,0)
CON ; Conversion of data
"RTN","LEX2051P",85,0)
 N LEXLOUD S LEXLOUD="" D:$L($T(AWRD^LEXXGI4)) AWRD^LEXXGI4
"RTN","LEX2051P",86,0)
 Q
"RTN","LEX2051P",87,0)
IND ; Rebuild indices
"RTN","LEX2051P",88,0)
 ; Rebuild indices for 757.33
"RTN","LEX2051P",89,0)
 N DIK
"RTN","LEX2051P",90,0)
 D BMES^XPDUTL("Rebuilding indices")
"RTN","LEX2051P",91,0)
 D BMES^XPDUTL("")
"RTN","LEX2051P",92,0)
 S DIK="^LEX(757.33," D IXALL^DIK
"RTN","LEX2051P",93,0)
 D BMES^XPDUTL("Index rebuild complete")
"RTN","LEX2051P",94,0)
 Q
"RTN","LEXABC")
0^16^B46217187^B40816510
"RTN","LEXABC",1,0)
LEXABC ;ISL/KER - Look-up by Code ;01/26/2012
"RTN","LEXABC",2,0)
 ;;2.0;LEXICON UTILITY;**4,25,26,29,38,73,51**;Sep 23, 1996;Build 77
"RTN","LEXABC",3,0)
 ;
"RTN","LEXABC",4,0)
 ; S X=$$EN^LEXABC(CODE,LEXVDT)
"RTN","LEXABC",5,0)
 ;
"RTN","LEXABC",6,0)
 ; INPUT
"RTN","LEXABC",7,0)
 ;   LEXSO   Code     Preferred terms only
"RTN","LEXABC",8,0)
 ;           Code+    All terms
"RTN","LEXABC",9,0)
 ;   LEXVDT  Version  Date to screen against (default = today)
"RTN","LEXABC",10,0)
 ;                  
"RTN","LEXABC",11,0)
EN(LEXSO,LEXVDT) ; Entry from LEXA
"RTN","LEXABC",12,0)
 S LEXSO=$G(LEXSO) Q:'$L(LEXSO) 0  Q:$L(LEXSO)>40 0  S:$D(LEXISCD) LEXISCD=$$IS(LEXSO)
"RTN","LEXABC",13,0)
 D BLD S:$L($G(^TMP("LEXSCH",$J,"NAR",0))) LEX("NAR")=$G(^TMP("LEXSCH",$J,"NAR",0)) Q:$D(^TMP("LEXHIT",$J)) 1 Q 0
"RTN","LEXABC",14,0)
BLD ; Build List
"RTN","LEXABC",15,0)
 N LEXSO2 D CLR K ^TMP("LEXSCH",$J,"LST",0),^TMP("LEXSCH",$J,"TOL",0),LEX S ^TMP("LEXSCH",$J,"NUM",0)=0,LEXSO=$G(LEXSO)
"RTN","LEXABC",16,0)
 I $E(LEXSO,$L(LEXSO))'="+"&($L(LEXSO)'>2)!($E(LEXSO,$L(LEXSO))="+"&($L(LEXSO)'>3)) D CLR Q
"RTN","LEXABC",17,0)
 S LEXSO2="" S:$E(LEXSO,$L(LEXSO))="+" LEXSO2=$E(LEXSO,$L(LEXSO)),LEXSO=$E(LEXSO,1,($L(LEXSO)-1)) I '(+($$IN(LEXSO))) D CLR Q
"RTN","LEXABC",18,0)
 Q:$E(LEXSO,1,3)="U00"  D FND D:$D(^TMP("LEXFND",$J)) BEG^LEXAL Q:$D(^TMP("LEXFND",$J))  D:'$D(^TMP("LEXFND",$J)) CLR
"RTN","LEXABC",19,0)
 Q
"RTN","LEXABC",20,0)
FND ; Find expressions
"RTN","LEXABC",21,0)
 K ^TMP("LEXL",$J),^TMP("LEXLE",$J)
"RTN","LEXABC",22,0)
 N LEXSIEN,LEXMIEN,LEXEIEN,LEXDESF,LEXDSPL,LEXDSPLA,LEXFORM,LEXFMTY,LEXS,LEXSAB,LEXSRC,LEXSDATA
"RTN","LEXABC",23,0)
 N LEXP,LEXTP,LEXTYPE,LEXFILR,LEXFORM,LEXC,LEXCSTAT,LEXDSAB,LEXSSAB
"RTN","LEXABC",24,0)
 S LEXSSAB=$G(^TMP("LEXSCH",$J,"DIS",0)),U="^",LEXS=$$SCH(LEXSO)_" "
"RTN","LEXABC",25,0)
 S:'$L($G(LEXFIL))&($L($G(DIC("S")))) LEXFIL=DIC("S")
"RTN","LEXABC",26,0)
 S:'$L($G(LEXFIL))&($L($G(^TMP("LEXSCH",$J,"LEXFIL",0)))) LEXFIL=$G(^TMP("LEXSCH",$J,"LEXFIL",0))
"RTN","LEXABC",27,0)
 F  S LEXS=$O(^LEX(757.02,"AVA",LEXS)) Q:$E(LEXS,1,$L(LEXSO))'=LEXSO  D
"RTN","LEXABC",28,0)
 . S LEXEIEN=0 F  S LEXEIEN=$O(^LEX(757.02,"AVA",LEXS,LEXEIEN)) Q:+LEXEIEN=0  D
"RTN","LEXABC",29,0)
 . .; Q:$$INSUB(LEXEIEN)=0 
"RTN","LEXABC",30,0)
 . .I $L($G(LEXFIL)) S LEXFILR=$$EN^LEXAFIL($G(LEXFIL),+($G(^LEX(757,+($G(^LEX(757.01,LEXEIEN,1))),0)))) Q:LEXFILR=0
"RTN","LEXABC",31,0)
 . . S LEXSAB="" F  S LEXSAB=$O(^LEX(757.02,"AVA",LEXS,LEXEIEN,LEXSAB)) Q:LEXSAB=""  D
"RTN","LEXABC",32,0)
 . . . S LEXSIEN=0 F  S LEXSIEN=$O(^LEX(757.02,"AVA",LEXS,LEXEIEN,LEXSAB,LEXSIEN)) Q:+LEXSIEN=0  D
"RTN","LEXABC",33,0)
 . . . . S LEXSDATA=$G(^LEX(757.02,LEXSIEN,0))
"RTN","LEXABC",34,0)
 . . . . S LEXC=$P(LEXSDATA,"^",2),LEXSRC=$P(LEXSDATA,"^",3)
"RTN","LEXABC",35,0)
 . . . . Q:$$INSUB(+LEXSDATA)=0
"RTN","LEXABC",36,0)
 . . . . Q:+$$STATCHK^LEXSRC2(LEXC,$G(LEXVDT),,LEXSRC)'=1
"RTN","LEXABC",37,0)
 . . . . S LEXTYPE=+$P(LEXSDATA,"^",3)
"RTN","LEXABC",38,0)
 . . . . S LEXDSAB=$E($G(^LEX(757.03,+LEXTYPE,0)),1,3)
"RTN","LEXABC",39,0)
 . . . . S LEXMIEN=+$P(LEXSDATA,"^",4),(LEXP,LEXTP)=+$P(LEXSDATA,"^",5)
"RTN","LEXABC",40,0)
 . . . . Q:$$STATIEN(LEXSIEN)=0
"RTN","LEXABC",41,0)
 . . . . S LEXDESF=$$DC(LEXEIEN,LEXTP)
"RTN","LEXABC",42,0)
 . . . . S LEXDSPL=$$DP(LEXS,LEXTYPE)
"RTN","LEXABC",43,0)
 . . . . S LEXDSPLA=$$DSO(+LEXEIEN,$G(LEXVDT),$G(LEXSSAB),$G(LEXDSAB))
"RTN","LEXABC",44,0)
 . . . . S LEXDSPL=$$MDS(LEXDSPL,LEXDSPLA)
"RTN","LEXABC",45,0)
 . . . . S LEXFORM=$$F(LEXEIEN),LEXFMTY=$P(LEXFORM,"^",1),LEXFORM=$P(LEXFORM,"^",2)
"RTN","LEXABC",46,0)
 . . . . I LEXTYPE>3,LEXTYPE'=17 D NP Q
"RTN","LEXABC",47,0)
 . . . . D PF
"RTN","LEXABC",48,0)
 D:$D(^TMP("LEXL",$J)) REO^LEXABC2,ADD^LEXABC2
"RTN","LEXABC",49,0)
 Q
"RTN","LEXABC",50,0)
PF ; Preferred
"RTN","LEXABC",51,0)
 S:LEXP=0 LEXTP=2 Q:LEXTP=2&($G(LEXSO2)'["+")
"RTN","LEXABC",52,0)
 S ^TMP("LEXL",$J,LEXS,LEXTYPE,LEXTP,LEXSIEN)=LEXMIEN_"^"_LEXEIEN_"^"_LEXDESF_"^"_LEXDSPL_"^"_LEXFMTY_"^"_LEXFORM
"RTN","LEXABC",53,0)
 S ^TMP("LEXLE",$J,LEXEIEN)=LEXS_"^"_LEXTYPE_"^"_LEXTP_"^"_LEXSIEN
"RTN","LEXABC",54,0)
 Q
"RTN","LEXABC",55,0)
NP ; Not Preferred
"RTN","LEXABC",56,0)
 N LEXICD S:LEXP=0 LEXTP=1
"RTN","LEXABC",57,0)
 I $D(^TMP("LEXLE",$J,LEXEIEN)) D  Q
"RTN","LEXABC",58,0)
 . N LEX1,LEX2,LEX3,LEX4,LEXD,LEXDP
"RTN","LEXABC",59,0)
 . S LEXD=^TMP("LEXLE",$J,LEXEIEN),LEX1=$P(LEXD,"^",1) Q:'$L(LEX1)  S LEX2=$P(LEXD,"^",2) Q:'$L(LEX2)  S LEX3=$P(LEXD,"^",3) Q:'$L(LEX3)  S LEX4=$P(LEXD,"^",4) Q:'$L(LEX4)
"RTN","LEXABC",60,0)
 . S LEXD=$G(^TMP("LEXL",$J,LEX1,LEX2,LEX3,LEX4)) Q:'$L(LEXD)
"RTN","LEXABC",61,0)
 . S LEXDP=$P(LEXD,"^",4) S:$L(LEXDP) LEXDP=LEXDP_"/"_LEXDSPL S:'$L(LEXDP) LEXDP=LEXDSPL
"RTN","LEXABC",62,0)
 . S $P(LEXD,"^",4)=LEXDP,^TMP("LEXL",$J,LEX1,LEX2,LEX3,LEX4)=LEXD
"RTN","LEXABC",63,0)
 S LEXICD=$$ICDONE^LEXU(LEXEIEN)
"RTN","LEXABC",64,0)
 I '$L(LEXICD) S ^TMP("LEXL",$J,LEXS,LEXTYPE,LEXTP,LEXSIEN)=LEXMIEN_"^"_LEXEIEN_"^"_LEXDESF_"^"_LEXDSPL_"^"_LEXFMTY_"^"_LEXFORM,^TMP("LEXLE",$J,LEXEIEN)=LEXS_"^"_LEXTYPE_"^"_LEXTP_"^"_LEXSIEN Q
"RTN","LEXABC",65,0)
 I $L(LEXICD) D  Q
"RTN","LEXABC",66,0)
 . S:$L(LEXDSPL)&(LEXSO2["+") LEXDSPL=LEXDSPL_"/ICD-9-CM "_LEXICD
"RTN","LEXABC",67,0)
 . I LEXSO2["+",$D(^TMP("LEXL",$J,LEXS,1)) S ^TMP("LEXL",$J,LEXS,1,4,LEXSIEN)=LEXMIEN_"^"_LEXEIEN_"^"_LEXDESF_"^"_LEXDSPL_"^"_LEXFMTY_"^"_LEXFORM,^TMP("LEXLE",$J,LEXEIEN)=LEXS_"^1^3^"_LEXSIEN Q
"RTN","LEXABC",68,0)
 . S LEXTP=1,^TMP("LEXL",$J,LEXS,LEXTYPE,LEXTP,LEXSIEN)=LEXMIEN_"^"_LEXEIEN_"^"_LEXDESF_"^"_LEXDSPL_"^"_LEXFMTY_"^"_LEXFORM,^TMP("LEXLE",$J,LEXEIEN)=LEXS_"^"_LEXTYPE_"^"_LEXTP_"^"_LEXSIEN
"RTN","LEXABC",69,0)
 Q
"RTN","LEXABC",70,0)
F(LEX) ; Form
"RTN","LEXABC",71,0)
 S LEX=+($G(LEX)),LEX=+($P($G(^LEX(757.01,LEX,1)),"^",2))
"RTN","LEXABC",72,0)
 S LEX=$S(LEX=1:"A^Concept:  ",LEX=2:"B^Synonym:  ",LEX=3:"C^Variant:  ",LEX=4:"D^Related:  ",LEX=5:"E^Modified: ",1:"F^Other:    ")
"RTN","LEXABC",73,0)
 Q LEX
"RTN","LEXABC",74,0)
DE(LEX) ; Deactivated 757.01
"RTN","LEXABC",75,0)
 S LEX=+($G(LEX)) Q:'$D(^LEX(757.01,LEX,0)) 1 Q:+($P($G(^LEX(757.01,LEX,1)),"^",5))=1 1
"RTN","LEXABC",76,0)
 S LEX=+($G(^LEX(757.01,LEX,1)))
"RTN","LEXABC",77,0)
 Q:'$D(^LEX(757,LEX,0)) 1 S LEX=+($G(^LEX(757,LEX,0)))
"RTN","LEXABC",78,0)
 Q:'$D(^LEX(757.01,LEX,1)) 1
"RTN","LEXABC",79,0)
 Q:+($P($G(^LEX(757.01,LEX,1)),"^",5))=1 1
"RTN","LEXABC",80,0)
 Q 0
"RTN","LEXABC",81,0)
DC(LEX,LEXT) ; Description
"RTN","LEXABC",82,0)
 N LEXD,LEXM S LEXD="",LEX=+($G(LEX)),LEXM=$P($G(^LEX(757.01,+($G(LEX)),1)),"^",1),LEXM=+($G(^LEX(757,+($G(LEXM)),0))) S:$D(^LEX(757.01,LEXM,3))&(+($G(LEXT))'=2) LEXD="*" S LEX=$G(LEXD) Q LEX
"RTN","LEXABC",83,0)
DP(LEXS,LEXT) ; Display
"RTN","LEXABC",84,0)
 S LEXT=+($G(LEXT)),LEXT=$P($G(^LEX(757.03,LEXT,0)),"^",2)
"RTN","LEXABC",85,0)
 S LEXS=$G(LEXS) S:$E(LEXS,$L(LEXS))=" " LEXS=$E(LEXS,1,($L(LEXS)-1))
"RTN","LEXABC",86,0)
 S:$L(LEXS)&($L(LEXT)) LEXS=LEXT_" "_LEXS Q:$L(LEXS)&($L(LEXT)) LEXS Q ""
"RTN","LEXABC",87,0)
DSO(X,LEXVDT,LEXS,LEXD) ; Display Sources String
"RTN","LEXABC",88,0)
 N LEXT,LEXIEN,LEXSAB S LEXIEN=+($G(X)) Q:+LEXIEN'>0 ""
"RTN","LEXABC",89,0)
 S LEXT=$G(LEXS),LEXSAB=$G(LEXD) S:$L(LEXSAB)=3&(LEXT'[LEXSAB) LEXT=LEXT_"/"_LEXSAB
"RTN","LEXABC",90,0)
 F  Q:$E(LEXT,1)'="/"  S LEXT=$E(LEXT,2,$L(LEXT))
"RTN","LEXABC",91,0)
 S X=$$SO^LEXASO(LEXIEN,LEXT,1,$G(LEXVDT))
"RTN","LEXABC",92,0)
 Q X
"RTN","LEXABC",93,0)
MDS(LEXD,LEXA) ; Merge Display Strings
"RTN","LEXABC",94,0)
 S LEXA=$G(LEXA) F  Q:LEXA'[") ("  S LEXA=$P(LEXA,") (",1)_"/"_$P(LEXA,") (",2,299)
"RTN","LEXABC",95,0)
 S LEXA=$TR(LEXA,"(",""),LEXA=$TR(LEXA,")","")
"RTN","LEXABC",96,0)
 Q:'$L(LEXD) LEXA
"RTN","LEXABC",97,0)
 S:LEXA'[LEXD LEXA=LEXD_"/"_LEXA
"RTN","LEXABC",98,0)
 Q LEXA
"RTN","LEXABC",99,0)
CLR ; Clear
"RTN","LEXABC",100,0)
 K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J),^TMP("LEXL",$J),LEX S LEX=0 Q
"RTN","LEXABC",101,0)
IN(LEX) ; Flag in/not in file 757.02
"RTN","LEXABC",102,0)
 Q:$O(^LEX(757.02,"AVA",(($$SCH($E(LEX,1,61)))_" ")))[LEX 1 Q 0
"RTN","LEXABC",103,0)
SCH(LEX) ; Search
"RTN","LEXABC",104,0)
 S LEX=$E(LEX,1,($L(LEX)-1))_$C($A($E(LEX,$L(LEX)))-1)_"~" Q LEX
"RTN","LEXABC",105,0)
STATIEN(LEXCIEN)        ; Determine status of code-expression pairing based
"RTN","LEXABC",106,0)
 ;                 on code IEN
"RTN","LEXABC",107,0)
 N STATDAT,STATIEN
"RTN","LEXABC",108,0)
 S STATDAT=$O(^LEX(757.02,LEXCIEN,4,"B",$S($G(LEXVDT)'="":LEXVDT+1,1:"")),-1)
"RTN","LEXABC",109,0)
 Q:STATDAT="" 0
"RTN","LEXABC",110,0)
 S STATIEN=$O(^LEX(757.02,LEXCIEN,4,"B",STATDAT,""),-1)
"RTN","LEXABC",111,0)
 Q +$P(^LEX(757.02,LEXCIEN,4,STATIEN,0),"^",2)
"RTN","LEXABC",112,0)
NONPLUS(STRING) ; Remove trialing plus from a string
"RTN","LEXABC",113,0)
 S STRING=$G(STRING)
"RTN","LEXABC",114,0)
 I $E($RE(STRING))="+" Q $RE($E($RE(STRING),2,$L(STRING)))
"RTN","LEXABC",115,0)
 Q STRING
"RTN","LEXABC",116,0)
INSUB(EXIEN) ; Check if selected code in vocab
"RTN","LEXABC",117,0)
 N LEXFLN,LEXVOC,SUBIEN
"RTN","LEXABC",118,0)
 S LEXFLN=$G(^TMP("LEXSCH",$J,"FLN",0)) Q:LEXFLN=""!(LEXFLN="757.01") 1
"RTN","LEXABC",119,0)
 S LEXVOC=$G(^TMP("LEXSCH",$J,"VOC",0)) Q:LEXVOC=""!(LEXVOC="WRD") 1
"RTN","LEXABC",120,0)
 Q:$D(^LEXT(757.2,"AA",LEXVOC))'=10 1
"RTN","LEXABC",121,0)
 S SUBIEN=$O(^LEXT(757.2,"AA",LEXVOC,"")) Q:+SUBIEN'>0 1
"RTN","LEXABC",122,0)
 Q:$$INPSUB(EXIEN,SUBIEN) 1
"RTN","LEXABC",123,0)
 Q 0
"RTN","LEXABC",124,0)
INPSUB(PRF,SUB) ; Check if concept PRF is member of subset SUB
"RTN","LEXABC",125,0)
 S PRF=$G(PRF) Q:'$L(PRF) 0  N IN,SIEN S SIEN="",IN=0
"RTN","LEXABC",126,0)
 F  S SIEN=$O(^LEX(757.21,"B",PRF,SIEN)) Q:SIEN=""  D  Q:IN=1
"RTN","LEXABC",127,0)
 . I $P(^LEX(757.21,SIEN,0),U,2)=$G(SUB) S IN=1
"RTN","LEXABC",128,0)
 Q IN
"RTN","LEXABC",129,0)
 ;
"RTN","LEXABC",130,0)
IS(X) ; Is a Code
"RTN","LEXABC",131,0)
 N CODE,ISACODE S CODE=$G(X),ISACODE=0
"RTN","LEXABC",132,0)
 ; If the user input is a valid code (active or inactive) ISACODE=1
"RTN","LEXABC",133,0)
 S:$D(^ICPT("BA",(CODE_" ")))!$D(^ICD9("BA",(CODE_" ")))!$D(^ICD0("BA",(CODE_" "))) ISACODE=1 I ISACODE>0 S X="1" Q X
"RTN","LEXABC",134,0)
 ; If the user intended to search for a code (pattern match) with a typo, then ISACODE =1
"RTN","LEXABC",135,0)
 S:(CODE?5N)!(CODE?1A4N)!(CODE?4N1"T")!(CODE?4N1"F") ISACODE=1
"RTN","LEXABC",136,0)
 S:(CODE?3N1"."2N)!(CODE?3N1"."1N)!(CODE?3N1".") ISACODE=1
"RTN","LEXABC",137,0)
 S:(CODE?1"E"3N1"."2N)!(CODE?1"E"3N1"."1N)!(CODE?1"E"3N1".") ISACODE=1
"RTN","LEXABC",138,0)
 S:(CODE?1"V"2N1"."2N)!(CODE?1"V"2N1"."1N)!(CODE?1"V"2N1".") ISACODE=1
"RTN","LEXABC",139,0)
 S:(CODE?2N1"."2N)!(CODE?2N1"."1N)!(CODE?2N1".") ISACODE=1
"RTN","LEXABC",140,0)
 S X=+ISACODE Q X
"RTN","LEXALK")
0^12^B22806965^B22765108
"RTN","LEXALK",1,0)
LEXALK ;ISL/KER/FJF Look-up by Words ; 30 Aug 2011  11:26 PM
"RTN","LEXALK",2,0)
 ;;2.0;LEXICON UTILITY;**2,3,6,25,51**;Sep 23, 1996;Build 77
"RTN","LEXALK",3,0)
 ;
"RTN","LEXALK",4,0)
 ; External References
"RTN","LEXALK",5,0)
 ;   DBIA 10103  $$DT^XLFDT
"RTN","LEXALK",6,0)
 ;   DBIA  1571  ^LEX(
"RTN","LEXALK",7,0)
 ;                    
"RTN","LEXALK",8,0)
 ; Special Lookup variables
"RTN","LEXALK",9,0)
 ;                    
"RTN","LEXALK",10,0)
 ;   LEXSUB      Vocabulary
"RTN","LEXALK",11,0)
 ;   LEXSHCT     Shortcuts
"RTN","LEXALK",12,0)
 ;   LEXDICS     Screen - DIC("S") Format
"RTN","LEXALK",13,0)
 ;   LEXSHOW     Displayable codes
"RTN","LEXALK",14,0)
 ;   LEXLKFL     File Number
"RTN","LEXALK",15,0)
 ;   LEXLKGL     Global Root
"RTN","LEXALK",16,0)
 ;   LEXLKMD     Use Modifiers
"RTN","LEXALK",17,0)
 ;   LEXLKIX     Index to use during lookup
"RTN","LEXALK",18,0)
 ;   LEXLKSH     User Input (Search String)
"RTN","LEXALK",19,0)
 ;   LEXTKN(     Tolkens in order of frequency of use
"RTN","LEXALK",20,0)
 ;   LEXTKNS(    Tolkens in order of entry
"RTN","LEXALK",21,0)
 ;                    
"RTN","LEXALK",22,0)
EN ; Look-up user input
"RTN","LEXALK",23,0)
 N LEXSUB,LEXSHCT,LEXDICS,LEXSHOW,LEXLKFL,LEXLKGL,LEXLKMD
"RTN","LEXALK",24,0)
 N LEXLKIX,LEXLKSH,LEXVDT
"RTN","LEXALK",25,0)
 S LEXVDT=$$DT^XLFDT
"RTN","LEXALK",26,0)
 S LEXLKSH=$G(^TMP("LEXSCH",$J,"SCH",0)) I $L(LEXLKSH)<2 D  Q
"RTN","LEXALK",27,0)
 . S LEX("ERR",0)=+($G(LEX("ERR",0)))+1,LEX("ERR",LEX("ERR",0))="User input missing or invalid"
"RTN","LEXALK",28,0)
 S LEXSUB=$G(^TMP("LEXSCH",$J,"VOC",0)) S:LEXSUB="" LEXSUB="WRD"
"RTN","LEXALK",29,0)
 S LEXLKMD=+($G(^TMP("LEXSCH",$J,"MOD",0)))
"RTN","LEXALK",30,0)
 S LEXLKIX=$G(^TMP("LEXSCH",$J,"IDX",0)) S:LEXLKIX="" LEXLKIX="AWRD"
"RTN","LEXALK",31,0)
 S LEXLKFL=$G(^TMP("LEXSCH",$J,"FLN",0)) I LEXLKFL'["757." D  Q
"RTN","LEXALK",32,0)
 . S LEX("ERR",0)=+($G(LEX("ERR",0)))+1,LEX("ERR",LEX("ERR",0))="File number missing or invalid"
"RTN","LEXALK",33,0)
 S LEXLKGL=$G(^TMP("LEXSCH",$J,"GBL",0)) I LEXLKGL'["LEX(757." D  Q
"RTN","LEXALK",34,0)
 . S LEX("ERR",0)=+($G(LEX("ERR",0)))+1,LEX("ERR",LEX("ERR",0))="Global location missing or invalid"
"RTN","LEXALK",35,0)
 S LEXSHOW=$G(^TMP("LEXSCH",$J,"DIS",0))
"RTN","LEXALK",36,0)
 D TOLKEN^LEXAM(LEXLKSH)
"RTN","LEXALK",37,0)
 N LEXOK,LEXDES,LEXDSP,LEXT,LEXO,LEXI,LEXE,LEXM,LEXME
"RTN","LEXALK",38,0)
 N LEXSS Q:$G(LEXLKFL)'["757."
"RTN","LEXALK",39,0)
 S LEXSS="" I $D(LEXTKNS(0)) D
"RTN","LEXALK",40,0)
 . N LEXI F LEXI=1:1:LEXTKNS(0) S LEXSS=LEXSS_" "_LEXTKNS(LEXI)
"RTN","LEXALK",41,0)
 . S LEXSS=$E(LEXSS,2,$L(LEXSS))
"RTN","LEXALK",42,0)
 S ^TMP("LEXSCH",$J,"SCH",0)=$G(LEXSS)
"RTN","LEXALK",43,0)
 S LEXT=$G(LEXTKN(1)),LEXO=$$SCH(LEXT)
"RTN","LEXALK",44,0)
 I $G(LEXSHCT)="",$G(LEXTKN(0))=1,$D(^LEX(LEXLKFL,LEXLKIX,LEXT)) D  G END
"RTN","LEXALK",45,0)
 . D EXACT
"RTN","LEXALK",46,0)
 . I +($O(^LEX(757.01,"ASL",LEXT,0)))>6000 Q
"RTN","LEXALK",47,0)
 . D TOLKEN
"RTN","LEXALK",48,0)
 D TOLKEN
"RTN","LEXALK",49,0)
END ; End look-up by word
"RTN","LEXALK",50,0)
 I $D(^TMP("LEXFND",$J)) D BEG^LEXAL
"RTN","LEXALK",51,0)
 I '$D(^TMP("LEXFND",$J)) D
"RTN","LEXALK",52,0)
 . K LEX,^TMP("LEXFND",$J),^TMP("LEXHIT",$J) S LEX=0
"RTN","LEXALK",53,0)
 S:+($G(^TMP("LEXSCH",$J,"UNR",0)))>0&($L($G(^TMP("LEXSCH",$J,"NAR",0)))) LEX("NAR")=$G(^TMP("LEXSCH",$J,"NAR",0))
"RTN","LEXALK",54,0)
 Q
"RTN","LEXALK",55,0)
EXACT ; Main loop throuth TOLKENS that equal LEXT
"RTN","LEXALK",56,0)
 F  S LEXO=$O(^LEX(LEXLKFL,LEXLKIX,LEXO)) Q:LEXO'=LEXT  D IEN
"RTN","LEXALK",57,0)
 Q
"RTN","LEXALK",58,0)
TOLKEN ; Main loop though TOLKENS containing LEXT
"RTN","LEXALK",59,0)
 F  S LEXO=$O(^LEX(LEXLKFL,LEXLKIX,LEXO)) Q:LEXO'[LEXT!(LEXO="")  D IEN
"RTN","LEXALK",60,0)
 Q
"RTN","LEXALK",61,0)
IEN ; Loop throuth Internal Entry Numbers
"RTN","LEXALK",62,0)
 S LEXI=0
"RTN","LEXALK",63,0)
 F  S LEXI=$O(^LEX(LEXLKFL,LEXLKIX,LEXO,LEXI)) Q:+LEXI=0  D CHK
"RTN","LEXALK",64,0)
 Q
"RTN","LEXALK",65,0)
CHK ; Check each tolken
"RTN","LEXALK",66,0)
 N LEXOK,LEXO S LEXE=LEXI,LEXOK=1
"RTN","LEXALK",67,0)
 S:LEXLKGL'["757.01" LEXE=+$G(^LEX(LEXLKFL,LEXI,0)) Q:LEXE=0
"RTN","LEXALK",68,0)
 ; Filter
"RTN","LEXALK",69,0)
 S LEXFILR=$$EN^LEXAFIL($G(LEXFIL),LEXE) Q:LEXFILR=0
"RTN","LEXALK",70,0)
 ; Deactivated
"RTN","LEXALK",71,0)
 Q:+($P($G(^LEX(757.01,LEXE,1)),"^",5))=1
"RTN","LEXALK",72,0)
 ; Expression has Modifiers
"RTN","LEXALK",73,0)
 N LEXEMOD S LEXEMOD=+($P($G(^LEX(757.01,LEXE,1)),"^",6))
"RTN","LEXALK",74,0)
 S LEXM=+($G(^LEX(757.01,LEXE,1)))
"RTN","LEXALK",75,0)
 S LEXME=+($G(^LEX(757,LEXM,0)))
"RTN","LEXALK",76,0)
 ; Check not exact match
"RTN","LEXALK",77,0)
 I $L($G(^TMP("LEXSCH",$J,"EXM",0))),+(^TMP("LEXSCH",$J,"EXM",0))=LEXE Q
"RTN","LEXALK",78,0)
 I $L($G(^TMP("LEXSCH",$J,"EXC",0))),+(^TMP("LEXSCH",$J,"EXC",0))=LEXE Q
"RTN","LEXALK",79,0)
 ; Check tolkens
"RTN","LEXALK",80,0)
 S LEXOK=1 D CHKTKNS(LEXE)
"RTN","LEXALK",81,0)
 ; If the expression failed the search, and the expression has 
"RTN","LEXALK",82,0)
 ; modifiers then check the modifiers
"RTN","LEXALK",83,0)
 D:+LEXOK=0&(+($G(LEXEMOD))>0)&(+($G(LEXTKN(0)))>1) CHKMOD^LEXAMD2
"RTN","LEXALK",84,0)
 Q:'LEXOK
"RTN","LEXALK",85,0)
 ; Description (*)
"RTN","LEXALK",86,0)
 S LEXDES=$$DES^LEXASC(LEXE)
"RTN","LEXALK",87,0)
 ; Display of codes
"RTN","LEXALK",88,0)
 S LEXDSP=$$SO^LEXASO(LEXE,$G(LEXSHOW),1,$G(LEXVDT))
"RTN","LEXALK",89,0)
 D ADDL^LEXAL(LEXE,LEXDES,LEXDSP)
"RTN","LEXALK",90,0)
 Q
"RTN","LEXALK",91,0)
CHKTKNS(LEXE) ; Check tolkens
"RTN","LEXALK",92,0)
 N LEXM S LEXM=+($G(^LEX(757.01,LEXE,1))) Q:LEXM=0
"RTN","LEXALK",93,0)
 N LEXI,LEXOE,LEXC S LEXOE=LEXE,LEXI=1
"RTN","LEXALK",94,0)
 F  S LEXI=$O(LEXTKN(LEXI)) Q:+LEXI=0!('LEXOK)  D  Q:'LEXOK
"RTN","LEXALK",95,0)
 .N LEXT,LEXE S LEXT=LEXTKN(LEXI),LEXE=0,LEXOK=0
"RTN","LEXALK",96,0)
 .S LEXC=$$UP(^LEX(757.01,LEXOE,0))
"RTN","LEXALK",97,0)
 .I LEXC[(" "_LEXT) S LEXOK=1 Q
"RTN","LEXALK",98,0)
 .I LEXC[("-"_LEXT) S LEXOK=1 Q
"RTN","LEXALK",99,0)
 .I LEXC[("("_LEXT) S LEXOK=1 Q
"RTN","LEXALK",100,0)
 .I LEXC[("/"_LEXT) S LEXOK=1 Q
"RTN","LEXALK",101,0)
 .I $E(LEXC,1,$L(LEXT))=LEXT S LEXOK=1 Q
"RTN","LEXALK",102,0)
 .I $L(LEXT),$D(^LEX(757.01,LEXOE,5,"B",LEXT)) S LEXOK=1 Q
"RTN","LEXALK",103,0)
 .I $L(LEXT),$E($O(^LEX(757.01,LEXOE,5,"B",($E(LEXT,1,($L(LEXT)-1))_$C($A($E(LEXT,$L(LEXT)))-1)_"~"))),1,$L(LEXT))=LEXT S LEXOK=1 Q
"RTN","LEXALK",104,0)
 .F  S LEXE=$O(^LEX(757.01,"AMC",LEXM,LEXE)) Q:+LEXE=0!(LEXOK)  D  Q:LEXOK
"RTN","LEXALK",105,0)
 ..Q:+($P($G(^LEX(757.01,LEXE,1)),"^",2))>3
"RTN","LEXALK",106,0)
 ..S LEXC=$$UP(^LEX(757.01,LEXE,0))
"RTN","LEXALK",107,0)
 ..I LEXC[(" "_LEXT) S LEXOK=1 Q
"RTN","LEXALK",108,0)
 ..I LEXC[("-"_LEXT) S LEXOK=1 Q
"RTN","LEXALK",109,0)
 ..I LEXC[("("_LEXT) S LEXOK=1 Q
"RTN","LEXALK",110,0)
 ..I LEXC[("/"_LEXT) S LEXOK=1 Q
"RTN","LEXALK",111,0)
 ..I $E(LEXC,1,$L(LEXT))=LEXT S LEXOK=1 Q
"RTN","LEXALK",112,0)
 Q
"RTN","LEXALK",113,0)
DES(LEXX) ; Get description flag
"RTN","LEXALK",114,0)
 N LEXDES,LEXE,LEXM S LEXDES="",LEXE=+LEXX
"RTN","LEXALK",115,0)
 S LEXM=$P($G(^LEX(757.01,+($G(LEXX)),1)),"^",1)
"RTN","LEXALK",116,0)
 S LEXM=+($G(^LEX(757,+($G(LEXM)),0)))
"RTN","LEXALK",117,0)
 S:$D(^LEX(757.01,LEXM,3)) LEXDES="*"
"RTN","LEXALK",118,0)
 S LEXX=$G(LEXDES) Q LEXX
"RTN","LEXALK",119,0)
SCH(LEXX) ; Search for LEXX a $Orderable variable
"RTN","LEXALK",120,0)
 S LEXX=$E(LEXX,1,($L(LEXX)-1))_$C($A($E(LEXX,$L(LEXX)))-1)_"~" Q LEXX
"RTN","LEXALK",121,0)
 Q
"RTN","LEXALK",122,0)
UP(X) ; Uppercase
"RTN","LEXALK",123,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXNDX2")
0^15^B21432451^B17369617
"RTN","LEXNDX2",1,0)
LEXNDX2 ;ISL Set/kill indexes (Part 2)            ; 26 Jan 2012  9:14 PM
"RTN","LEXNDX2",2,0)
 ;;2.0;LEXICON UTILITY;**51**;Sep 23, 1996;Build 77
"RTN","LEXNDX2",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","LEXNDX2",4,0)
 ;
"RTN","LEXNDX2",5,0)
SS ; Get (unique) text for an expression in the Subset file
"RTN","LEXNDX2",6,0)
 Q:'$D(X)!('$D(DA))
"RTN","LEXNDX2",7,0)
 N LEXEXP,LEXMC,LEXTEXP,LEXOLDX S LEXOLDX=X
"RTN","LEXNDX2",8,0)
 S LEXEXP=+(^LEX(757.21,DA,0)),LEXMC=$P(^LEX(757.01,LEXEXP,1),U,1)
"RTN","LEXNDX2",9,0)
 S LEXTEXP=0 F  S LEXTEXP=$O(^LEX(757.01,"AMC",LEXMC,LEXTEXP)) Q:+LEXTEXP=0  D
"RTN","LEXNDX2",10,0)
 . S X=^LEX(757.01,LEXTEXP,0) D SS2
"RTN","LEXNDX2",11,0)
 S X=LEXOLDX K LEXOLDX,LEXEXP,LEXMC,LEXTEXP Q
"RTN","LEXNDX2",12,0)
SS2 ; Parse text and set node for each word
"RTN","LEXNDX2",13,0)
 N LEXYPE,LEXT,LEXSIDX,LEXIDX,LEXD,LEXJ,LEXI S LEXIDX=""
"RTN","LEXNDX2",14,0)
 S LEXYPE=+($P($G(^LEX(757.01,LEXTEXP,1)),U,2)) Q:LEXYPE'>0
"RTN","LEXNDX2",15,0)
 S LEXT=+($P($G(^LEX(757.011,LEXYPE,0)),"^",2)) Q:LEXT=0
"RTN","LEXNDX2",16,0)
 S LEXSIDX="A"_$P(^LEXT(757.2,LEXOLDX,0),U,2)
"RTN","LEXNDX2",17,0)
 D PTX^LEXTOLKN
"RTN","LEXNDX2",18,0)
 D KNR
"RTN","LEXNDX2",19,0)
 I $D(^TMP("LEXTKN",$J,0)),^TMP("LEXTKN",$J,0)>0 S LEXI="" F LEXJ=1:1:^TMP("LEXTKN",$J,0) D
"RTN","LEXNDX2",20,0)
 . S LEXI=$O(^TMP("LEXTKN",$J,LEXJ,""))
"RTN","LEXNDX2",21,0)
 . S:'$D(^LEX(757.21,LEXSIDX,LEXI,DA)) ^LEX(757.21,LEXSIDX,LEXI,DA)=""
"RTN","LEXNDX2",22,0)
 K LEXSIDX,LEXIDX,LEXD,LEXI,LEXJ,^TMP("LEXTKN",$J,0),^TMP("LEXTKN",$J) Q
"RTN","LEXNDX2",23,0)
SK ; Get (all) text for an expression in the Subset file
"RTN","LEXNDX2",24,0)
 Q:'$D(X)!('$D(DA))
"RTN","LEXNDX2",25,0)
 N LEXEXP,LEXMC,LEXTEXP,LEXOLDX S LEXOLDX=X
"RTN","LEXNDX2",26,0)
 S LEXEXP=+(^LEX(757.21,DA,0)),LEXMC=$P(^LEX(757.01,LEXEXP,1),U,1)
"RTN","LEXNDX2",27,0)
 S LEXTEXP=0 F  S LEXTEXP=$O(^LEX(757.01,"AMC",LEXMC,LEXTEXP)) Q:+LEXTEXP=0  D
"RTN","LEXNDX2",28,0)
 . S X=^LEX(757.01,LEXTEXP,0) D SK2
"RTN","LEXNDX2",29,0)
 S X=LEXOLDX K LEXOLDX,LEXEXP,LEXMC,LEXTEXP Q
"RTN","LEXNDX2",30,0)
SK2 ; Parse text and kill node for each word
"RTN","LEXNDX2",31,0)
 N LEXSIDX,LEXIDX,LEXD,LEXJ,LEXI S LEXIDX=""
"RTN","LEXNDX2",32,0)
 S LEXSIDX="A"_$P(^LEXT(757.2,LEXOLDX,0),U,2)
"RTN","LEXNDX2",33,0)
 D PTX^LEXTOLKN
"RTN","LEXNDX2",34,0)
 D KNR
"RTN","LEXNDX2",35,0)
 I $D(^TMP("LEXTKN",$J,0)),^TMP("LEXTKN",$J,0)>0 S LEXI="" F LEXJ=1:1:^TMP("LEXTKN",$J,0) D
"RTN","LEXNDX2",36,0)
 . S LEXI=$O(^TMP("LEXTKN",$J,LEXJ,""))
"RTN","LEXNDX2",37,0)
 . K ^LEX(757.21,LEXSIDX,LEXI,DA)
"RTN","LEXNDX2",38,0)
 K LEXSIDX,LEXIDX,LEXD,LEXI,LEXJ,^TMP("LEXTKN",$J,0),^TMP("LEXTKN",$J) Q
"RTN","LEXNDX2",39,0)
SET ; Given DIC and DA set indexes
"RTN","LEXNDX2",40,0)
 Q:$D(DIC)#2=0!('$D(DA))  Q:DIC'["LEX("&(DIC'["LEX(")
"RTN","LEXNDX2",41,0)
 N LEXRT,LEXFN,LEXFL,LEXRIDX,LEXN,LEXP,X
"RTN","LEXNDX2",42,0)
 S LEXFN=+($P(DIC,"(",2)),LEXRT=$TR($P(DIC,"(",1),"^","")
"RTN","LEXNDX2",43,0)
 S LEXFL=0 F  S LEXFL=$O(^DD(LEXFN,LEXFL)) Q:+LEXFL=0  D
"RTN","LEXNDX2",44,0)
 . S LEXN=$P($P(^DD(LEXFN,LEXFL,0),U,4),";",1)
"RTN","LEXNDX2",45,0)
 . S LEXP=$P($P(^DD(LEXFN,LEXFL,0),U,4),";",2),LEXRIDX=0
"RTN","LEXNDX2",46,0)
 . F  S LEXRIDX=$O(^DD(LEXFN,LEXFL,1,LEXRIDX)) Q:+LEXRIDX=0  D
"RTN","LEXNDX2",47,0)
 . . I $L($P($G(@("^"_LEXRT_"("_LEXFN_","_DA_","_LEXN_")")),U,LEXP)) D
"RTN","LEXNDX2",48,0)
 . . . S X=$P($G(@("^"_LEXRT_"("_LEXFN_","_DA_","_LEXN_")")),U,LEXP)
"RTN","LEXNDX2",49,0)
 . . . X:X'="" ^DD(LEXFN,LEXFL,1,LEXRIDX,1)
"RTN","LEXNDX2",50,0)
 . . I DA>$P($G(@("^"_LEXRT_"("_LEXFN_",0)")),"^",3) S $P(@("^"_LEXRT_"("_LEXFN_",0)"),"^",3)=DA
"RTN","LEXNDX2",51,0)
 K LEXFN,LEXFL,LEXRIDX,LEXN,LEXP,X
"RTN","LEXNDX2",52,0)
 Q
"RTN","LEXNDX2",53,0)
KILL ; Given DIC and DA kill indexes
"RTN","LEXNDX2",54,0)
 Q:$D(DIC)#2=0!('$D(DA))  Q:DIC'["LEX("&(DIC'["LEX(")
"RTN","LEXNDX2",55,0)
 N LEXRT,LEXFN,LEXFL,LEXRIDX,LEXN,LEXP,X
"RTN","LEXNDX2",56,0)
 S LEXFN=+($P(DIC,"(",2)),LEXRT=$TR($P(DIC,"(",1),"^","")
"RTN","LEXNDX2",57,0)
 S LEXFL=0 F  S LEXFL=$O(^DD(LEXFN,LEXFL)) Q:+LEXFL=0  D
"RTN","LEXNDX2",58,0)
 . S LEXN=$P($P(^DD(LEXFN,LEXFL,0),U,4),";",1)
"RTN","LEXNDX2",59,0)
 . S LEXP=$P($P(^DD(LEXFN,LEXFL,0),U,4),";",2),LEXRIDX=0
"RTN","LEXNDX2",60,0)
 . F  S LEXRIDX=$O(^DD(LEXFN,LEXFL,1,LEXRIDX)) Q:+LEXRIDX=0  D
"RTN","LEXNDX2",61,0)
 . . I $L($P($G(@("^"_LEXRT_"("_LEXFN_","_DA_","_LEXN_")")),U,LEXP)) D
"RTN","LEXNDX2",62,0)
 . . . S X=$P($G(@("^"_LEXRT_"("_LEXFN_","_DA_","_LEXN_")")),U,LEXP)
"RTN","LEXNDX2",63,0)
 . . . X:X'="" ^DD(LEXFN,LEXFL,1,LEXRIDX,2)
"RTN","LEXNDX2",64,0)
 K LEXFN,LEXFL,LEXRIDX,LEXN,LEXP,X
"RTN","LEXNDX2",65,0)
 Q
"RTN","LEXNDX2",66,0)
SAPP ; Set application subset definition index
"RTN","LEXNDX2",67,0)
 I X'="" D
"RTN","LEXNDX2",68,0)
 . N LEXIDX S LEXIDX=$P(^LEXT(757.2,DA,0),U,2) I LEXIDX'="" D
"RTN","LEXNDX2",69,0)
 . . K ^LEXT(757.2,"AA",LEXIDX) S $P(^LEXT(757.2,DA,0),U,2)="" K LEXIDX
"RTN","LEXNDX2",70,0)
 . S ^LEXT(757.2,"AB",X,DA)=""
"RTN","LEXNDX2",71,0)
 Q
"RTN","LEXNDX2",72,0)
KAPP ; Kill application subset definition index
"RTN","LEXNDX2",73,0)
 K ^LEXT(757.2,"AB",X,DA) Q
"RTN","LEXNDX2",74,0)
SSM ; Set index for Subset Mnemonic
"RTN","LEXNDX2",75,0)
 S ^LEXT(757.2,"AA",X,DA)="" N LEXX,LEXLOW
"RTN","LEXNDX2",76,0)
 S LEXX=$P($G(^LEXT(757.2,DA,0)),U,1)
"RTN","LEXNDX2",77,0)
 S:$L(LEXX) ^LEXT(757.2,"AA",LEXX,DA)="",^LEXT(757.2,"AA",$$UP^XLFSTR(LEXX),DA)=""
"RTN","LEXNDX2",78,0)
 I $L(LEXX) D
"RTN","LEXNDX2",79,0)
 . N X,LEXI S X=LEXX,LEXLOW="" D PTX^LEXTOLKN
"RTN","LEXNDX2",80,0)
 . I +($G(^TMP("LEXTKN",$J,0)))>0 F LEXI=1:1:+($G(^TMP("LEXTKN",$J,0))) D
"RTN","LEXNDX2",81,0)
 . . S ^LEXT(757.2,"AA",$O(^TMP("LEXTKN",$J,LEXI,"")),DA)=""
"RTN","LEXNDX2",82,0)
 . . S ^LEXT(757.2,"AA",$$UP^XLFSTR($O(^TMP("LEXTKN",$J,LEXI,""))),DA)=""
"RTN","LEXNDX2",83,0)
 Q
"RTN","LEXNDX2",84,0)
KSM ; Kill index for Subset Mnemonic
"RTN","LEXNDX2",85,0)
 K ^LEXT(757.2,"AA",X,DA) N LEXX,LEXLOW
"RTN","LEXNDX2",86,0)
 S LEXX=$P($G(^LEXT(757.2,DA,0)),U,1)
"RTN","LEXNDX2",87,0)
 K:$L(LEXX) ^LEXT(757.2,"AA",LEXX,DA),^LEXT(757.2,"AA",$$UP^XLFSTR(LEXX),DA)
"RTN","LEXNDX2",88,0)
 I $L(LEXX) D
"RTN","LEXNDX2",89,0)
 . N X,LEXI S X=LEXX,LEXLOW="" D PTX^LEXTOLKN
"RTN","LEXNDX2",90,0)
 . I +($G(^TMP("LEXTKN",$J,0)))>0 F LEXI=1:1:+($G(^TMP("LEXTKN",$J,0))) D
"RTN","LEXNDX2",91,0)
 . . K ^LEXT(757.2,"AA",$O(^TMP("LEXTKN",$J,LEXI,"")),DA)
"RTN","LEXNDX2",92,0)
 . . K ^LEXT(757.2,"AA",$$UP^XLFSTR($O(^TMP("LEXTKN",$J,LEXI,""))),DA)
"RTN","LEXNDX2",93,0)
 Q
"RTN","LEXNDX2",94,0)
KNR ; keywords and replacement words
"RTN","LEXNDX2",95,0)
 N LEXV,LEXN
"RTN","LEXNDX2",96,0)
 I $D(^TMP("LEXTKN",$J,0)),^TMP("LEXTKN",$J,0)>0 D
"RTN","LEXNDX2",97,0)
 .I $D(^LEX(757.01,LEXTEXP,5)) D
"RTN","LEXNDX2",98,0)
 ..S LEXV=""
"RTN","LEXNDX2",99,0)
 ..F  S LEXV=$O(^LEX(757.01,LEXTEXP,5,"B",LEXV)) Q:LEXV=""  D
"RTN","LEXNDX2",100,0)
 ...D ADDTKN(LEXV)
"RTN","LEXNDX2",101,0)
 .I $D(^LEX(757.05,"AEXP",LEXTEXP)) D
"RTN","LEXNDX2",102,0)
 ..S LEXN=""
"RTN","LEXNDX2",103,0)
 ..F  S LEXN=$O(^LEX(757.05,"AEXP",LEXTEXP,LEXN)) Q:LEXN=""  D
"RTN","LEXNDX2",104,0)
 ...S LEXV=$P(^LEX(757.05,LEXN,0),U)
"RTN","LEXNDX2",105,0)
 ...D ADDTKN(LEXV)
"RTN","LEXNDX2",106,0)
 Q
"RTN","LEXNDX2",107,0)
ADDTKN(LEXV) ; add to LEXTKN
"RTN","LEXNDX2",108,0)
 N LEXC
"RTN","LEXNDX2",109,0)
 S LEXC=^TMP("LEXTKN",$J,0)+1
"RTN","LEXNDX2",110,0)
 S ^TMP("LEXTKN",$J,LEXC,LEXV)=""
"RTN","LEXNDX2",111,0)
 S ^TMP("LEXTKN",$J,0)=LEXC
"RTN","LEXNDX2",112,0)
 Q
"RTN","LEXTOLKN")
0^17^B38854621^B19919745
"RTN","LEXTOLKN",1,0)
LEXTOLKN ;ISL/KER - Parse term into words ;07/17/2012
"RTN","LEXTOLKN",2,0)
 ;;2.0;LEXICON UTILITY;**4,55,73,51**;Sep 23, 1996;Build 77
"RTN","LEXTOLKN",3,0)
 ;               
"RTN","LEXTOLKN",4,0)
 ; Global Variables
"RTN","LEXTOLKN",5,0)
 ;    ^TMP("LEXTKN",$J    SACC 2.3.2.5.1
"RTN","LEXTOLKN",6,0)
 ;               
"RTN","LEXTOLKN",7,0)
 ; External References
"RTN","LEXTOLKN",8,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXTOLKN",9,0)
 ;               
"RTN","LEXTOLKN",10,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXTOLKN",11,0)
 ;     DA       Set and Killed by Fileman
"RTN","LEXTOLKN",12,0)
 ;     LEXIDX   Set if parsing for indexing logic (LEXNDX*)
"RTN","LEXTOLKN",13,0)
 ;     LEXLOOK  Set if parsing for Lookup logic (LEXA)
"RTN","LEXTOLKN",14,0)
 ;     LEXLOW   Set of lower case is needed (LEXNDX2)
"RTN","LEXTOLKN",15,0)
 ;               
"RTN","LEXTOLKN",16,0)
 ; Returns ^TMP("LEXTKN",$J,#,WORD) containing words
"RTN","LEXTOLKN",17,0)
 ;
"RTN","LEXTOLKN",18,0)
 ; If LEXIDX is set, then the Excluded Words file is used 
"RTN","LEXTOLKN",19,0)
 ; to selectively exclude words from the indexing process.
"RTN","LEXTOLKN",20,0)
 ; 
"RTN","LEXTOLKN",21,0)
 ; If LEXLOOK is set, then the Excluded Words file is used
"RTN","LEXTOLKN",22,0)
 ; to selectively exclude words from the look-up process.
"RTN","LEXTOLKN",23,0)
 ; 
"RTN","LEXTOLKN",24,0)
 ; If LEXIDX and LEXLOOK do not exist then all words are 
"RTN","LEXTOLKN",25,0)
 ; parsed and returned in the global array.
"RTN","LEXTOLKN",26,0)
 ;
"RTN","LEXTOLKN",27,0)
 ; This routine includes all of the functionality 
"RTN","LEXTOLKN",28,0)
 ; introduced by patch LEX*2.0*51
"RTN","LEXTOLKN",29,0)
 ; 
"RTN","LEXTOLKN",30,0)
PT ; Entry point where DA is defined and X is unknown
"RTN","LEXTOLKN",31,0)
 Q:'$D(DA)  S X=^LEX(757.01,DA,0)
"RTN","LEXTOLKN",32,0)
PTX ; Entry point to parse string (X must exist)
"RTN","LEXTOLKN",33,0)
 N LEXOK,LEXTOKS,LEXTOKS2,LEXTOKI,LEXTOKW,LEXTOLKN
"RTN","LEXTOLKN",34,0)
 N LEXOKC,LEXOKN,LEXOKP,LEXTOKAA,LEXTOKAB,LEXTOKAC
"RTN","LEXTOLKN",35,0)
 K ^TMP("LEXTKN",$J)
"RTN","LEXTOLKN",36,0)
 Q:'$L($G(X))  S LEXTOKS=$TR(X,"-"," "),LEXTOKS=$TR(LEXTOKS,$C(9)," ")
"RTN","LEXTOLKN",37,0)
 ; Remove leading blanks from string
"RTN","LEXTOLKN",38,0)
 F LEXOKP=1:1:$L(LEXTOKS) Q:$E(LEXTOKS,LEXOKP)'[" "
"RTN","LEXTOLKN",39,0)
 S LEXTOKS=$E(LEXTOKS,LEXOKP,$L(LEXTOKS))
"RTN","LEXTOLKN",40,0)
 ; Remove trailing blanks from string
"RTN","LEXTOLKN",41,0)
 F LEXOKP=$L(LEXTOKS):-1:1 Q:$E(LEXTOKS,LEXOKP)'[" "
"RTN","LEXTOLKN",42,0)
 S LEXTOKS=$E(LEXTOKS,1,LEXOKP)
"RTN","LEXTOLKN",43,0)
 ; Remove Punctuation (less slashes)
"RTN","LEXTOLKN",44,0)
 S LEXTOKS=$TR(LEXTOKS,"?`~!@#$%^&*()_-+={}[]\:;,<>","                            ")
"RTN","LEXTOLKN",45,0)
 ; Conditionally remove slashes
"RTN","LEXTOLKN",46,0)
 S:$D(LEXIDX) LEXTOKS=$TR(LEXTOKS,"/"," ")
"RTN","LEXTOLKN",47,0)
 S LEXTOKS=$TR(LEXTOKS,".","")
"RTN","LEXTOLKN",48,0)
 S LEXTOKS=$TR(LEXTOKS,"""","")
"RTN","LEXTOLKN",49,0)
 ; Swtich to UPPERCASE (lower case is not specified by LEXLOW)
"RTN","LEXTOLKN",50,0)
 S:'$D(LEXLOW) LEXTOKS=$$UP^XLFSTR(LEXTOKS)
"RTN","LEXTOLKN",51,0)
 ; Store in temporary array (based on space character)
"RTN","LEXTOLKN",52,0)
 S LEXOKC=0 F LEXTOKI=1:1:$L(LEXTOKS," ") D
"RTN","LEXTOLKN",53,0)
 . N LEXTOKW S LEXTOKW=$P(LEXTOKS," ",LEXTOKI) Q:LEXTOKW=""
"RTN","LEXTOLKN",54,0)
 . I LEXTOKW'["/" D
"RTN","LEXTOLKN",55,0)
 . . S LEXOKC=LEXOKC+1,LEXTOLKN(LEXOKC)=LEXTOKW
"RTN","LEXTOLKN",56,0)
 . . S LEXTOLKN(0)=LEXOKC
"RTN","LEXTOLKN",57,0)
 . I LEXTOKW["/"&('$D(^LEX(757.05,"B",LEXTOKW))) D  Q  ; PCH 4
"RTN","LEXTOLKN",58,0)
 . . N LEXP S LEXP=0 F  S LEXP=LEXP+1 Q:$P(LEXTOKW,"/",LEXP)=""  D
"RTN","LEXTOLKN",59,0)
 . . . S LEXOKC=LEXOKC+1,LEXTOLKN(LEXOKC)=$P(LEXTOKW,"/",LEXP)
"RTN","LEXTOLKN",60,0)
 . . . S LEXTOLKN(0)=LEXOKC
"RTN","LEXTOLKN",61,0)
 . I LEXTOKW["/"&($D(^LEX(757.05,"B",LEXTOKW))) D
"RTN","LEXTOLKN",62,0)
 . . N LEXOKR S LEXOKR=$O(^LEX(757.05,"B",LEXTOKW,0))
"RTN","LEXTOLKN",63,0)
 . . I $P($G(^LEX(757.05,LEXOKR,0)),U,3)="R" D
"RTN","LEXTOLKN",64,0)
 . . . S LEXOKC=LEXOKC+1,LEXTOLKN(LEXOKC)=LEXTOKW
"RTN","LEXTOLKN",65,0)
 . . . S LEXTOLKN(0)=LEXOKC
"RTN","LEXTOLKN",66,0)
 K LEXOKC,LEXOKR
"RTN","LEXTOLKN",67,0)
 I +($G(LEXTOLKN(0)))=0 K LEXTOLKN S ^TMP("LEXTKN",$J,0)=0 G EXIT
"RTN","LEXTOLKN",68,0)
 S LEXTOKW="",LEXOKN=0 F LEXTOKI=1:1:LEXTOLKN(0) D
"RTN","LEXTOLKN",69,0)
 . S LEXTOKW=$G(LEXTOLKN(LEXTOKI))
"RTN","LEXTOLKN",70,0)
 . ; Remove leading blanks
"RTN","LEXTOLKN",71,0)
 . F LEXOKP=1:1:$L(LEXTOKW) Q:$E(LEXTOKW,LEXOKP)'[" "
"RTN","LEXTOLKN",72,0)
 . S LEXTOKW=$E(LEXTOKW,LEXOKP,$L(LEXTOKW))
"RTN","LEXTOLKN",73,0)
 . ; Remove trailing blanks
"RTN","LEXTOLKN",74,0)
 . F LEXOKP=$L(LEXTOKW):-1:1 Q:$E(LEXTOKW,LEXOKP)'[" "
"RTN","LEXTOLKN",75,0)
 . S LEXTOKW=$E(LEXTOKW,1,LEXOKP)
"RTN","LEXTOLKN",76,0)
 . ; Apostrophy "S"
"RTN","LEXTOLKN",77,0)
 . S (LEXTOKAA,LEXTOKAB,LEXTOKAC)=""
"RTN","LEXTOLKN",78,0)
 . I LEXTOKW["'" D
"RTN","LEXTOLKN",79,0)
 . . ; Standard Apostrophy "S"
"RTN","LEXTOLKN",80,0)
 . . I $E(LEXTOKW,($L(LEXTOKW)-1),$L(LEXTOKW))["'S" D
"RTN","LEXTOLKN",81,0)
 . . . S LEXTOKAA=$TR(LEXTOKW,"'",""),LEXTOKAB=$P(LEXTOKW,"'",1),LEXTOKAC=$P(LEXTOKW,"'",1)_$P(LEXTOKW,"'",2)
"RTN","LEXTOLKN",82,0)
 . ; Pluralized/Apostrophy "S"
"RTN","LEXTOLKN",83,0)
 . I '$L((LEXTOKAA_LEXTOKAB_LEXTOKAC)) I $E(LEXTOKW,$L(LEXTOKW))["S",$E(LEXTOKW,($L(LEXTOKW)-1))'["'" D
"RTN","LEXTOLKN",84,0)
 . . N LEXTMP S LEXTMP=$E(LEXTOKW,1,($L(LEXTOKW)-1)) Q:'$L(LEXTMP)  S:$D(^LEX(757.01,"AWRD",LEXTMP)) LEXTOKAA=LEXTMP
"RTN","LEXTOLKN",85,0)
 . I $L((LEXTOKAA_LEXTOKAB_LEXTOKAC)) D
"RTN","LEXTOLKN",86,0)
 . . N LEXTMP S LEXTMP=$G(LEXTOKAA) S:'$L(LEXTMP) LEXTMP=$G(LEXTOKAB) S:$L($G(LEXTOKAB))>0&($L($G(LEXTOKAB))<$L(LEXTMP)) LEXTMP=LEXTOKAB
"RTN","LEXTOLKN",87,0)
 . . S:'$L(LEXTMP) LEXTMP=$G(LEXTOKAC) I $L(LEXTMP),(LEXTOKAA_LEXTOKAB_LEXTOKAC)[LEXTMP S LEXTOKW=LEXTMP,(LEXTOKAA,LEXTOKAB,LEXTOKAC)=""
"RTN","LEXTOLKN",88,0)
 . ; Apostrophies and spaces
"RTN","LEXTOLKN",89,0)
 . S LEXTOKW=$TR(LEXTOKW,"'",""),LEXTOKW=$TR(LEXTOKW," ","")
"RTN","LEXTOLKN",90,0)
 . ; Numeric only
"RTN","LEXTOLKN",91,0)
 . I $D(LEXIDX) D
"RTN","LEXTOLKN",92,0)
 . . I LEXTOKW'="" S:$D(^LEX(757.04,"ACTION",LEXTOKW,"I")) LEXTOKW=""
"RTN","LEXTOLKN",93,0)
 . . I LEXTOKW'="" S:$D(^LEX(757.04,"ACTION",LEXTOKW,"B")) LEXTOKW=""
"RTN","LEXTOLKN",94,0)
 . I $D(LEXLOOK) D
"RTN","LEXTOLKN",95,0)
 . . I LEXTOKW'="" S:$D(^LEX(757.04,"ACTION",LEXTOKW,"L")) LEXTOKW=""
"RTN","LEXTOLKN",96,0)
 . . I LEXTOKW'="" S:$D(^LEX(757.04,"ACTION",LEXTOKW,"B")) LEXTOKW=""
"RTN","LEXTOLKN",97,0)
 . I $D(LEXIDX),($L($G(LEXTOKAA))!($L($G(LEXTOKAB)))!($L($G(LEXTOKAC)))) D
"RTN","LEXTOLKN",98,0)
 . . I $L(LEXTOKAA) S LEXOKN=+($G(LEXOKN))+1,^TMP("LEXTKN",$J,LEXOKN,LEXTOKAA)=""
"RTN","LEXTOLKN",99,0)
 . . I $L(LEXTOKAB) S LEXOKN=+($G(LEXOKN))+1,^TMP("LEXTKN",$J,LEXOKN,LEXTOKAB)=""
"RTN","LEXTOLKN",100,0)
 . . I $L(LEXTOKAC) S LEXOKN=+($G(LEXOKN))+1,^TMP("LEXTKN",$J,LEXOKN,LEXTOKAC)=""
"RTN","LEXTOLKN",101,0)
 . I $D(LEXOKN),$D(LEXTOKW),LEXTOKW'="" D
"RTN","LEXTOLKN",102,0)
 . . I $P($G(^LEX(757.05,+($O(^LEX(757.05,"B",LEXTOKW,0))),0)),"^",3)="R" D REP(LEXTOKW) Q
"RTN","LEXTOLKN",103,0)
 . . S LEXOKN=+(LEXOKN)+1,^TMP("LEXTKN",$J,LEXOKN,LEXTOKW)=""
"RTN","LEXTOLKN",104,0)
 . S LEXTOKW=""
"RTN","LEXTOLKN",105,0)
 S ^TMP("LEXTKN",$J,0)=LEXOKN
"RTN","LEXTOLKN",106,0)
EXIT ; Clean up and quit
"RTN","LEXTOLKN",107,0)
 K LEXOK,LEXTOKI,LEXOKN,LEXOKP,LEXOKR,LEXTOKS,LEXTOKS2,LEXTOKW,LEXTOLKN
"RTN","LEXTOLKN",108,0)
 Q
"RTN","LEXTOLKN",109,0)
REP(X) ; Replace
"RTN","LEXTOLKN",110,0)
 N LEXREP,LEXTXT,LEXREF,LEXFLG,LEXARY,LEXIN,LEXWITH,LEXI,LEXO
"RTN","LEXTOLKN",111,0)
 S (LEXO,LEXFLG)=0,LEXIN=$G(X) Q:'$L(LEXIN)
"RTN","LEXTOLKN",112,0)
 S:$D(LEXIDX)&'$D(LEXLOOK) LEXFLG=1
"RTN","LEXTOLKN",113,0)
 S:'$D(LEXIDX)&$D(LEXLOOK) LEXFLG=2
"RTN","LEXTOLKN",114,0)
 S:$D(LEXIDX)&$D(LEXLOOK) LEXFLG=3
"RTN","LEXTOLKN",115,0)
 S LEXTXT=$P($G(^LEX(757.05,+($O(^LEX(757.05,"B",LEXIN,0))),0)),"^",2)
"RTN","LEXTOLKN",116,0)
 S LEXWITH=$$WITH(LEXTXT,.LEXARY,LEXFLG)
"RTN","LEXTOLKN",117,0)
 I LEXFLG=1 D
"RTN","LEXTOLKN",118,0)
 . Q:$D(LEXLOOK)
"RTN","LEXTOLKN",119,0)
 . S LEXOKN=+($G(LEXOKN))+1
"RTN","LEXTOLKN",120,0)
 . S ^TMP("LEXTKN",$J,LEXOKN,LEXIN)="",LEXO=1
"RTN","LEXTOLKN",121,0)
 I LEXWITH>0 D
"RTN","LEXTOLKN",122,0)
 . N LEXI,LEXW S LEXI=0 F  S LEXI=$O(LEXARY(LEXI)) Q:+LEXI'>0  D
"RTN","LEXTOLKN",123,0)
 . . S LEXW=$G(LEXARY(LEXI)) Q:'$L(LEXW)
"RTN","LEXTOLKN",124,0)
 . . S LEXOKN=+($G(LEXOKN))+1
"RTN","LEXTOLKN",125,0)
 . . S ^TMP("LEXTKN",$J,LEXOKN,LEXW)="",LEXO=1
"RTN","LEXTOLKN",126,0)
 Q LEXO
"RTN","LEXTOLKN",127,0)
WITH(X,LEXARY,Y) ; Parse Replacement Words (replace with)
"RTN","LEXTOLKN",128,0)
 N LEXBEG,LEXEND,LEXCHR,LEXI,LEXNUM,LEXTXT,LEXWRD,LEXFLG
"RTN","LEXTOLKN",129,0)
 S LEXTXT=$$UP^XLFSTR(X) S LEXFLG=+($G(Y))
"RTN","LEXTOLKN",130,0)
 K LEXARY S LEXBEG=1 F LEXEND=1:1:$L(LEXTXT)+1 D
"RTN","LEXTOLKN",131,0)
 . S LEXCHR=$E(LEXTXT,LEXEND)
"RTN","LEXTOLKN",132,0)
 . I "~!@#$%&*()_+`-=[]{};'\:|,./?<> """[LEXCHR D
"RTN","LEXTOLKN",133,0)
 . . S LEXWRD=$E(LEXTXT,LEXBEG,LEXEND-1),LEXBEG=LEXEND+1
"RTN","LEXTOLKN",134,0)
 . . I $L(LEXWRD)>1,$L(LEXWRD)<31,'$$EWD(LEXWRD,LEXFLG) D
"RTN","LEXTOLKN",135,0)
 . . . N LEXI S LEXI=$O(LEXARY(" "),-1)+1
"RTN","LEXTOLKN",136,0)
 . . . S LEXARY(LEXI)=LEXWRD,LEXARY(0)=LEXI
"RTN","LEXTOLKN",137,0)
 Q $G(LEXARY(0))
"RTN","LEXTOLKN",138,0)
EWD(X,Y) ; Exclude from Replacement Words
"RTN","LEXTOLKN",139,0)
 N LEXW,LEXF,LEXO S LEXW=$G(X),LEXF=+($G(Y)),LEXO=0
"RTN","LEXTOLKN",140,0)
 I LEXF=1 S:$D(^LEX(757.04,"ACTION",LEXW,"I")) LEXO=1
"RTN","LEXTOLKN",141,0)
 I LEXF=2 S:$D(^LEX(757.04,"ACTION",LEXW,"L")) LEXO=1
"RTN","LEXTOLKN",142,0)
 I LEXF=3 D
"RTN","LEXTOLKN",143,0)
 . S:$D(^LEX(757.04,"ACTION",LEXW,"I")) LEXO=1
"RTN","LEXTOLKN",144,0)
 . S:$D(^LEX(757.04,"ACTION",LEXW,"L")) LEXO=1
"RTN","LEXTOLKN",145,0)
 I LEXF>0 S:$D(^LEX(757.04,"ACTION",LEXW,"B")) LEXO=1
"RTN","LEXTOLKN",146,0)
 Q LEXO
"RTN","LEXTOLKN",147,0)
SH ; Show ^TMP global array
"RTN","LEXTOLKN",148,0)
 N NN,NC S NN="^TMP(""LEXTKN"","_$J_")",NC="^TMP(""LEXTKN"","_$J_","
"RTN","LEXTOLKN",149,0)
 F  S NN=$Q(@NN) Q:'$L(NN)!(NN'[NC)  W !,NN,"=",@NN
"RTN","LEXTOLKN",150,0)
 Q
"RTN","LEXTRAN1")
0^2^B91365999^B78844478
"RTN","LEXTRAN1",1,0)
LEXTRAN1 ;ISL/FJF/KER - Lexicon code and text wrapper API's ;01/03/2011
"RTN","LEXTRAN1",2,0)
 ;;2.0;LEXICON UTILITY;**59,73,51**;Sep 23, 1996;Build 77
"RTN","LEXTRAN1",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","LEXTRAN1",4,0)
GETSYN(LEXSRC,LEXCODE,LEXVDT,LEXRAY,LEXIENS) ; obtain synonyms
"RTN","LEXTRAN1",5,0)
 ;
"RTN","LEXTRAN1",6,0)
 ; Input
"RTN","LEXTRAN1",7,0)
 ;
"RTN","LEXTRAN1",8,0)
 ;   LEXSRC   code system source abbreviation e.g. SCT (SNOMED CT)
"RTN","LEXTRAN1",9,0)
 ;            - mandatory
"RTN","LEXTRAN1",10,0)
 ;   LEXCODE  code - mandatory
"RTN","LEXTRAN1",11,0)
 ;   LEXVDT   effective date (defaults to current date) - optional
"RTN","LEXTRAN1",12,0)
 ;   LEXRAY   output array (defaults to 'LEX') optional
"RTN","LEXTRAN1",13,0)
 ;   LEXIENS  include expression IENs in output array
"RTN","LEXTRAN1",14,0)
 ;            - optional
"RTN","LEXTRAN1",15,0)
 ;              1 include IENS
"RTN","LEXTRAN1",16,0)
 ;              0 exclude IENS (default)
"RTN","LEXTRAN1",17,0)
 ;
"RTN","LEXTRAN1",18,0)
 ; Output
"RTN","LEXTRAN1",19,0)
 ;
"RTN","LEXTRAN1",20,0)
 ;   if call finds an active code for the source
"RTN","LEXTRAN1",21,0)
 ;     "1^LEXCODE"
"RTN","LEXTRAN1",22,0)
 ;     LEX     -   an array containing information about the code
"RTN","LEXTRAN1",23,0)
 ;     LEX("F")    fully specified name^IEN
"RTN","LEXTRAN1",24,0)
 ;     LEX("P")    preferred term^IEN
"RTN","LEXTRAN1",25,0)
 ;     LEX("S",n)  synonyms^IEN (n is the nth synonym)
"RTN","LEXTRAN1",26,0)
 ;
"RTN","LEXTRAN1",27,0)
 ;   if call cannot find specified code on file
"RTN","LEXTRAN1",28,0)
 ;     "-2^"_LEXSCNM_" code "_LEXCODE_" not on file"
"RTN","LEXTRAN1",29,0)
 ;     where LEXSCNM is the source name
"RTN","LEXTRAN1",30,0)
 ;
"RTN","LEXTRAN1",31,0)
 I $G(LEXCODE)="" Q -1_U_"no code specified"
"RTN","LEXTRAN1",32,0)
 I $G(LEXSRC)="" Q -1_U_"no source specified"
"RTN","LEXTRAN1",33,0)
 I '$D(^LEX(757.03,"B",LEXSRC)) Q -1_U_"source not recognized"
"RTN","LEXTRAN1",34,0)
 I $D(^TMP("LEXSCH",$J,"VDT",0)) S LEXVDT=^(0)
"RTN","LEXTRAN1",35,0)
 I $G(LEXVDT)'="" S LEXVDT=$$INTDAT(LEXVDT)
"RTN","LEXTRAN1",36,0)
 I $G(LEXVDT)=-1 Q -1_U_"invalid date format"
"RTN","LEXTRAN1",37,0)
 I $G(LEXVDT)="" S LEXVDT=$$DT^XLFDT
"RTN","LEXTRAN1",38,0)
 I $G(LEXRAY)="" K LEXRAY
"RTN","LEXTRAN1",39,0)
 S LEXIENS=+$G(LEXIENS)
"RTN","LEXTRAN1",40,0)
 I LEXIENS'=0,LEXIENS'=1 Q -1_U_"if specified, IENS indicator must be 0 or 1"
"RTN","LEXTRAN1",41,0)
 ;
"RTN","LEXTRAN1",42,0)
 ; obtain source mnemonic and ASAB
"RTN","LEXTRAN1",43,0)
 ;
"RTN","LEXTRAN1",44,0)
 N LEXSIEN,LEXCIEN,VALCODE,LEXSTAT,LEXPIEN,T
"RTN","LEXTRAN1",45,0)
 ;
"RTN","LEXTRAN1",46,0)
 ;
"RTN","LEXTRAN1",47,0)
 ; check for code existence for source
"RTN","LEXTRAN1",48,0)
 ; 
"RTN","LEXTRAN1",49,0)
 S LEXCIEN="",VALCODE=0
"RTN","LEXTRAN1",50,0)
 F  Q:VALCODE=1  D  Q:LEXCIEN=""
"RTN","LEXTRAN1",51,0)
 .S LEXCIEN=$O(^LEX(757.02,"CODE",LEXCODE_" ",LEXCIEN)) Q:LEXCIEN=""  D
"RTN","LEXTRAN1",52,0)
 .I $D(^LEX(757.02,"ASRC",$$LEXASAB(LEXSRC),LEXCIEN)) S VALCODE=1 Q
"RTN","LEXTRAN1",53,0)
 I 'VALCODE Q -2_U_$$LEXSCNM(LEXSRC)_" code "_LEXCODE_" not on file"
"RTN","LEXTRAN1",54,0)
 ;
"RTN","LEXTRAN1",55,0)
 ; now we know that the code belongs to the source and that it is known
"RTN","LEXTRAN1",56,0)
 ; in our files
"RTN","LEXTRAN1",57,0)
 ; check that code is valid for date
"RTN","LEXTRAN1",58,0)
 ;
"RTN","LEXTRAN1",59,0)
 K LEXSTAT
"RTN","LEXTRAN1",60,0)
 K ^TMP("LEXSCH",$J)
"RTN","LEXTRAN1",61,0)
 S LEXSTAT=$$STATCHK^LEXSRC2(LEXCODE,LEXVDT,.LEXSTAT,$E($G(LEXSRC),1,3)) ; Pch 73 adds parameter LEXSRC
"RTN","LEXTRAN1",62,0)
 N RESP
"RTN","LEXTRAN1",63,0)
 S RESP=0
"RTN","LEXTRAN1",64,0)
 I +LEXSTAT=0 S RESP=-4_U_$$LEXSCNM(LEXSRC)_" code "_LEXCODE_" not active for "_$S(LEXVDT?7N:$$FMTE^XLFDT(LEXVDT,"5Z"),1:"") ; Pch 73 use external date
"RTN","LEXTRAN1",65,0)
 I +LEXSTAT=-1 S RESP=-8_U_$S(LEXVDT?7N:$$FMTE^XLFDT(LEXVDT,"5Z"),1:"")_" precedes earliest activation date for code" ; Pch 73 use external date
"RTN","LEXTRAN1",66,0)
 ;
"RTN","LEXTRAN1",67,0)
 ; code is good for source for date
"RTN","LEXTRAN1",68,0)
 ; 
"RTN","LEXTRAN1",69,0)
 K LEX
"RTN","LEXTRAN1",70,0)
 N CNIEN,EXIEN,ARR,FINDS,FOUND
"RTN","LEXTRAN1",71,0)
 S LEXCIEN=$$GETCIEN(LEXCODE)
"RTN","LEXTRAN1",72,0)
 Q:'$D(^LEX(757.02,+LEXCIEN,0)) -1_U_"code "_LEXCODE_" not yet active for "_$S(LEXVDT?7N:$$FMTE^XLFDT(LEXVDT,"5Z"),1:"") ; Pch 73 quit if date precedes activation or LEXCIEN=-1
"RTN","LEXTRAN1",73,0)
 S CNIEN=$P(^LEX(757.02,+LEXCIEN,0),U,4) ; Pch 73 + plused LEXCIEN
"RTN","LEXTRAN1",74,0)
 S EXIEN="",FINDS=0
"RTN","LEXTRAN1",75,0)
 F  S EXIEN=$O(^LEX(757.01,"AMC",CNIEN,EXIEN)) Q:EXIEN=""  D
"RTN","LEXTRAN1",76,0)
 .S FINDS=FINDS+1
"RTN","LEXTRAN1",77,0)
 .S ARR(EXIEN)=""
"RTN","LEXTRAN1",78,0)
 N CT,EXP,EXTYP,LEXW
"RTN","LEXTRAN1",79,0)
 S EXIEN="",CT=0
"RTN","LEXTRAN1",80,0)
 F  S EXIEN=$O(ARR(EXIEN)) Q:EXIEN=""  D
"RTN","LEXTRAN1",81,0)
 .S EXP=^LEX(757.01,EXIEN,0)
"RTN","LEXTRAN1",82,0)
 .S EXTYP=$P(^LEX(757.01,EXIEN,1),U,2)
"RTN","LEXTRAN1",83,0)
 .I EXTYP=1 S LEXW("P")=EXP_$S(LEXIENS:U_EXIEN,1:"") Q
"RTN","LEXTRAN1",84,0)
 .I EXTYP=8 S LEXW("F")=EXP_$S(LEXIENS:U_EXIEN,1:"") Q
"RTN","LEXTRAN1",85,0)
 .S CT=CT+1
"RTN","LEXTRAN1",86,0)
 .S LEXW("S",CT)=EXP_$S(LEXIENS:U_EXIEN,1:"")
"RTN","LEXTRAN1",87,0)
 M LEX=LEXW
"RTN","LEXTRAN1",88,0)
 S FINDS=''$D(LEX("F"))+''$D(LEX("P"))+$O(LEX("S"," "),-1) ; Pch 73 adds calculation of FINDS
"RTN","LEXTRAN1",89,0)
 I $D(LEXRAY),LEXRAY'="LEX" M @LEXRAY=LEX K LEX
"RTN","LEXTRAN1",90,0)
 I RESP=0 S RESP=''FINDS_U_FINDS
"RTN","LEXTRAN1",91,0)
 Q RESP
"RTN","LEXTRAN1",92,0)
 ;
"RTN","LEXTRAN1",93,0)
GETFSN(LEXSRC,LEXCODE,LEXVDT) ; obtain fully specified name
"RTN","LEXTRAN1",94,0)
 ;
"RTN","LEXTRAN1",95,0)
 ; Input
"RTN","LEXTRAN1",96,0)
 ;
"RTN","LEXTRAN1",97,0)
 ;   LEXSRC   code system source abbreviation e.g. SCT (SNOMED CT)
"RTN","LEXTRAN1",98,0)
 ;            - mandatory
"RTN","LEXTRAN1",99,0)
 ;   LEXCODE  code - mandatory
"RTN","LEXTRAN1",100,0)
 ;   LEXVDT   effective date (defaults to current date) - optional
"RTN","LEXTRAN1",101,0)
 ;
"RTN","LEXTRAN1",102,0)
 ; Output
"RTN","LEXTRAN1",103,0)
 ;
"RTN","LEXTRAN1",104,0)
 ;   if call finds an active code for the source
"RTN","LEXTRAN1",105,0)
 ;     "1^LEXFSN"
"RTN","LEXTRAN1",106,0)
 ;     where LEXFSN is the fully specified name
"RTN","LEXTRAN1",107,0)
 ;   if call cannot find specified code on file
"RTN","LEXTRAN1",108,0)
 ;     "-8^"_LEXSCNM_" code "_LEXCODE_" has no FSN"
"RTN","LEXTRAN1",109,0)
 ;     where LEXSCNM is the source name
"RTN","LEXTRAN1",110,0)
 ;       
"RTN","LEXTRAN1",111,0)
 N SYNS,LEX
"RTN","LEXTRAN1",112,0)
 I $G(LEXCODE)="" Q -1_U_"no code specified"
"RTN","LEXTRAN1",113,0)
 I $G(LEXSRC)="" Q -1_U_"no source specified"
"RTN","LEXTRAN1",114,0)
 I '$D(^LEX(757.03,"B",LEXSRC)) Q -1_U_"source not recognized"
"RTN","LEXTRAN1",115,0)
 I $D(^TMP("LEXSCH",$J,"VDT",0)) S LEXVDT=^(0)
"RTN","LEXTRAN1",116,0)
 I $G(LEXVDT)'="" S LEXVDT=$$INTDAT(LEXVDT)
"RTN","LEXTRAN1",117,0)
 I $G(LEXVDT)=-1 Q -1_U_"invalid date format"
"RTN","LEXTRAN1",118,0)
 I $G(LEXVDT)="" S LEXVDT=$$DT^XLFDT
"RTN","LEXTRAN1",119,0)
 S SYNS=$$GETSYN(LEXSRC,LEXCODE,$G(LEXVDT))
"RTN","LEXTRAN1",120,0)
 I +SYNS'>0 Q SYNS
"RTN","LEXTRAN1",121,0)
 I $D(LEX("F")) Q 1_U_LEX("F")
"RTN","LEXTRAN1",122,0)
 Q -8_U_$$LEXSCNM(LEXSRC)_" code "_LEXCODE_" has no FSN"
"RTN","LEXTRAN1",123,0)
 ;
"RTN","LEXTRAN1",124,0)
GETPREF(LEXSRC,LEXCODE,LEXVDT) ; obtain preferred term
"RTN","LEXTRAN1",125,0)
 ;
"RTN","LEXTRAN1",126,0)
 ; Input
"RTN","LEXTRAN1",127,0)
 ;
"RTN","LEXTRAN1",128,0)
 ;   LEXSRC   code system source abbreviation e.g. SCT (SNOMED CT)
"RTN","LEXTRAN1",129,0)
 ;            - mandatory
"RTN","LEXTRAN1",130,0)
 ;   LEXCODE  code - mandatory
"RTN","LEXTRAN1",131,0)
 ;   LEXVDT   effective date (defaults to current date) - optional
"RTN","LEXTRAN1",132,0)
 ;
"RTN","LEXTRAN1",133,0)
 ; Output
"RTN","LEXTRAN1",134,0)
 ;
"RTN","LEXTRAN1",135,0)
 ;   if call finds an active code for the source
"RTN","LEXTRAN1",136,0)
 ;     "1^LEXPREF"
"RTN","LEXTRAN1",137,0)
 ;     where LEXPREF is the preferred name
"RTN","LEXTRAN1",138,0)
 ;   if call cannot find specified code on file
"RTN","LEXTRAN1",139,0)
 ;     "-2^"_LEXSCNM_" code "_LEXCODE_" not on file"
"RTN","LEXTRAN1",140,0)
 ;     where LEXSCNM is the source name
"RTN","LEXTRAN1",141,0)
 ;
"RTN","LEXTRAN1",142,0)
 N SYNS,LEX
"RTN","LEXTRAN1",143,0)
 I $G(LEXCODE)="" Q -1_U_"no code specified"
"RTN","LEXTRAN1",144,0)
 I $G(LEXSRC)="" Q -1_U_"no source specified"
"RTN","LEXTRAN1",145,0)
 I '$D(^LEX(757.03,"B",LEXSRC)) Q -1_U_"source not recognized"
"RTN","LEXTRAN1",146,0)
 I $D(^TMP("LEXSCH",$J,"VDT",0)) S LEXVDT=^(0)
"RTN","LEXTRAN1",147,0)
 I $G(LEXVDT)'="" S LEXVDT=$$INTDAT(LEXVDT)
"RTN","LEXTRAN1",148,0)
 I $G(LEXVDT)=-1 Q -1_U_"invalid date format"
"RTN","LEXTRAN1",149,0)
 I $G(LEXVDT)="" S LEXVDT=$$DT^XLFDT
"RTN","LEXTRAN1",150,0)
 S SYNS=$$GETSYN(LEXSRC,LEXCODE,$G(LEXVDT))
"RTN","LEXTRAN1",151,0)
 I +SYNS'>0 Q SYNS
"RTN","LEXTRAN1",152,0)
 Q 1_U_LEX("P")
"RTN","LEXTRAN1",153,0)
 ;
"RTN","LEXTRAN1",154,0)
GETDES(LEXSRC,LEXTEXT,LEXVDT) ; obtain designation code
"RTN","LEXTRAN1",155,0)
 ;
"RTN","LEXTRAN1",156,0)
 ; Input
"RTN","LEXTRAN1",157,0)
 ;
"RTN","LEXTRAN1",158,0)
 ;   LEXSRC   code system source abbreviation e.g. SCT (SNOMED CT)
"RTN","LEXTRAN1",159,0)
 ;            - mandatory
"RTN","LEXTRAN1",160,0)
 ;   LEXTEXT  displayable text of expression for which designation code is required
"RTN","LEXTRAN1",161,0)
 ;            - mandatory
"RTN","LEXTRAN1",162,0)
 ;   LEXVDT   effective date (defaults to current date) - optional
"RTN","LEXTRAN1",163,0)
 ;
"RTN","LEXTRAN1",164,0)
 ; Output
"RTN","LEXTRAN1",165,0)
 ;
"RTN","LEXTRAN1",166,0)
 ;   if call finds an active code for the source
"RTN","LEXTRAN1",167,0)
 ;     "1^LEXDSG"
"RTN","LEXTRAN1",168,0)
 ;     where LEXDSG is the designation code
"RTN","LEXTRAN1",169,0)
 ;   if call cannot find specified code on file
"RTN","LEXTRAN1",170,0)
 ;     "-2^"_LEXSCNM_" code "_LEXCODE_" not on file"
"RTN","LEXTRAN1",171,0)
 ;     where LEXSCNM is the source name
"RTN","LEXTRAN1",172,0)
 ;
"RTN","LEXTRAN1",173,0)
 I $G(LEXSRC)="" Q -1_U_"no source specified"
"RTN","LEXTRAN1",174,0)
 I '$D(^LEX(757.03,"B",LEXSRC)) Q -1_U_"source not recognized"
"RTN","LEXTRAN1",175,0)
 I $G(LEXTEXT)="" Q -1_U_"no text specified"
"RTN","LEXTRAN1",176,0)
 I $D(^TMP("LEXSCH",$J,"VDT",0)) S LEXVDT=^(0)
"RTN","LEXTRAN1",177,0)
 I $G(LEXVDT)'="" S LEXVDT=$$INTDAT(LEXVDT)
"RTN","LEXTRAN1",178,0)
 I $G(LEXVDT)=-1 Q -1_U_"invalid date format"
"RTN","LEXTRAN1",179,0)
 I $G(LEXVDT)="" S LEXVDT=$$DT^XLFDT
"RTN","LEXTRAN1",180,0)
 ;
"RTN","LEXTRAN1",181,0)
 ; find candidate designations
"RTN","LEXTRAN1",182,0)
 ;
"RTN","LEXTRAN1",183,0)
 N CIEN,CODE,SRC,TARR,XIEN,LEXDSG,INDSUB,SCIEN,CONC
"RTN","LEXTRAN1",184,0)
 S INDSUB=$E($$UP^XLFSTR(LEXTEXT),1,63)
"RTN","LEXTRAN1",185,0)
 S XIEN=""
"RTN","LEXTRAN1",186,0)
 F  S XIEN=$O(^LEX(757.01,"B",INDSUB,XIEN)) Q:XIEN=""  D
"RTN","LEXTRAN1",187,0)
 .I $$UP^XLFSTR(^LEX(757.01,XIEN,0))=$$UP^XLFSTR(LEXTEXT) S TARR(XIEN)=$P(^LEX(757.01,XIEN,1),U)
"RTN","LEXTRAN1",188,0)
 S XIEN=""
"RTN","LEXTRAN1",189,0)
 F  S XIEN=$O(TARR(XIEN)) Q:XIEN=""  D
"RTN","LEXTRAN1",190,0)
 .S CONC=TARR(XIEN)
"RTN","LEXTRAN1",191,0)
 .S (CIEN,SCIEN)=""
"RTN","LEXTRAN1",192,0)
 .F  S SCIEN=$O(^LEX(757.02,"AMC",CONC,SCIEN)) Q:SCIEN=""  D
"RTN","LEXTRAN1",193,0)
 ..S SRC=$P(^LEX(757.02,SCIEN,0),U,3)
"RTN","LEXTRAN1",194,0)
 ..I $O(^LEX(757.03,"B",LEXSRC,""))'=SRC Q
"RTN","LEXTRAN1",195,0)
 ..I $P(^LEX(757.02,SCIEN,0),U,5)'=1 Q
"RTN","LEXTRAN1",196,0)
 ..S CIEN=SCIEN
"RTN","LEXTRAN1",197,0)
 .I CIEN="" K TARR(XIEN) Q
"RTN","LEXTRAN1",198,0)
 .; eliminate if wrong source
"RTN","LEXTRAN1",199,0)
 .S CODE=$P(^LEX(757.02,CIEN,0),U,2)
"RTN","LEXTRAN1",200,0)
 .S SRC=$P(^LEX(757.02,CIEN,0),U,3)
"RTN","LEXTRAN1",201,0)
 .I $O(^LEX(757.03,"B",LEXSRC,""))'=SRC K TARR(XIEN) Q
"RTN","LEXTRAN1",202,0)
 .; eliminate if inactive for LEXVDT
"RTN","LEXTRAN1",203,0)
 .I '+$$STATCHK^LEXSRC2(CODE,LEXVDT,,$E(LEXSRC,1,3)) K TARR(XIEN) Q   ; Pch 73 adds parameter LEXSRC
"RTN","LEXTRAN1",204,0)
 ; get the designation code
"RTN","LEXTRAN1",205,0)
 S XIEN=$O(TARR(""))
"RTN","LEXTRAN1",206,0)
 I XIEN="" Q -1_U_"text not recognized for source"
"RTN","LEXTRAN1",207,0)
 S LEXDSG=$O(^LEX(757.01,XIEN,7,"C",SRC,""))
"RTN","LEXTRAN1",208,0)
 I LEXDSG="" Q -1_U_"no designation code for text and source"
"RTN","LEXTRAN1",209,0)
 Q 1_U_LEXDSG
"RTN","LEXTRAN1",210,0)
 ;
"RTN","LEXTRAN1",211,0)
GETASSN(LEXCODE,LEXMAP,LEXVDT,LEXRAY) ;
"RTN","LEXTRAN1",212,0)
 ; Input
"RTN","LEXTRAN1",213,0)
 ;
"RTN","LEXTRAN1",214,0)
 ;   LEXCODE  code - mandatory
"RTN","LEXTRAN1",215,0)
 ;   LEXMAP   mapping identifier (VUID) or mnemonic - mandatory
"RTN","LEXTRAN1",216,0)
 ;   LEXVDT   effective date (defaults to current date) - optional
"RTN","LEXTRAN1",217,0)
 ;   LEXRAY   output array (defaults to 'LEX') optional
"RTN","LEXTRAN1",218,0)
 ;
"RTN","LEXTRAN1",219,0)
 ; Output
"RTN","LEXTRAN1",220,0)
 ;
"RTN","LEXTRAN1",221,0)
 ;   if call finds active mappings for passed arguments
"RTN","LEXTRAN1",222,0)
 ;     "1^"_number_of_mappings
"RTN","LEXTRAN1",223,0)
 ;     LEX     -        an array containing the mapping target codes
"RTN","LEXTRAN1",224,0)
 ;     LEX = number of mappings
"RTN","LEXTRAN1",225,0)
 ;     LEX(order,code)  mapped codes (order is the order of the mapping)
"RTN","LEXTRAN1",226,0)
 ;                                   (code is the mapping target code)
"RTN","LEXTRAN1",227,0)
 ;
"RTN","LEXTRAN1",228,0)
 ;   if call finds no active mappings for passed arguments
"RTN","LEXTRAN1",229,0)
 ;     "0^0"
"RTN","LEXTRAN1",230,0)
 ;
"RTN","LEXTRAN1",231,0)
 ;   if a bad argument is passed for a parameter then the call returns
"RTN","LEXTRAN1",232,0)
 ;     "-1^"_error_message
"RTN","LEXTRAN1",233,0)
 ;
"RTN","LEXTRAN1",234,0)
 ;   if call cannot find specified code on file
"RTN","LEXTRAN1",235,0)
 ;     "-2^"_LEXSCNM_" code "_LEXCODE_" not on file"
"RTN","LEXTRAN1",236,0)
 ;     where LEXSCNM is the source name
"RTN","LEXTRAN1",237,0)
 ;   
"RTN","LEXTRAN1",238,0)
 ;   Caution
"RTN","LEXTRAN1",239,0)
 ;   -------
"RTN","LEXTRAN1",240,0)
 ;   When the API is invoked in the following way
"RTN","LEXTRAN1",241,0)
 ;   S VAR=$$GETASSN^LEXTRAN1(CODE,MAP,[DATE],[ARR])
"RTN","LEXTRAN1",242,0)
 ;   make sure that ARR'="VAR"
"RTN","LEXTRAN1",243,0)
 ;   e.g. S ORY=$$GETASSN^LEXTRAN1(44452003,"SCT2ICD",,"VAR") is OK
"RTN","LEXTRAN1",244,0)
 ;   but  S VAR=$$GETASSN^LEXTRAN1(44452003,"SCT2ICD",,"VAR") is not OK
"RTN","LEXTRAN1",245,0)
 ;        this would be akin to using the same variable for two purposes. 
"RTN","LEXTRAN1",246,0)
 ;
"RTN","LEXTRAN1",247,0)
 I $G(LEXCODE)="" Q -1_U_"no code specified"
"RTN","LEXTRAN1",248,0)
 I $G(LEXMAP)="" Q -1_U_"no mapping specified"
"RTN","LEXTRAN1",249,0)
 I $G(LEXVDT)'="" S LEXVDT=$$INTDAT(LEXVDT)
"RTN","LEXTRAN1",250,0)
 I $G(LEXVDT)=-1 Q -1_U_"invalid date format"
"RTN","LEXTRAN1",251,0)
 I $G(LEXVDT)="" S LEXVDT=$$DT^XLFDT
"RTN","LEXTRAN1",252,0)
 S LEXRAY=$G(LEXRAY,"LEX")
"RTN","LEXTRAN1",253,0)
 ;
"RTN","LEXTRAN1",254,0)
 N MIDIEN,CSYS,CIEN,VALCD,MORD,MTAR,MIEN,EFDT,STAT,CT,VUID
"RTN","LEXTRAN1",255,0)
 ;
"RTN","LEXTRAN1",256,0)
 I '$D(^LEX(757.32,"B",LEXMAP)),'$D(^LEX(757.32,"C",LEXMAP)) Q -1_U_"unrecognized mapping identifier"
"RTN","LEXTRAN1",257,0)
 I $D(^LEX(757.32,"C",LEXMAP)) D
"RTN","LEXTRAN1",258,0)
 .S MIDIEN=$O(^LEX(757.32,"C",LEXMAP,""))
"RTN","LEXTRAN1",259,0)
 I $D(^LEX(757.32,"B",LEXMAP)) D
"RTN","LEXTRAN1",260,0)
 .S MIDIEN=$O(^LEX(757.32,"B",LEXMAP,""))
"RTN","LEXTRAN1",261,0)
 I '$D(MIDIEN) Q -1_U_"not a recognized mapping identifier"
"RTN","LEXTRAN1",262,0)
 S CSYS=$$GET1^DIQ(757.32,MIDIEN_",",3)
"RTN","LEXTRAN1",263,0)
 ;
"RTN","LEXTRAN1",264,0)
 ; check that code exists for coding system
"RTN","LEXTRAN1",265,0)
 ;
"RTN","LEXTRAN1",266,0)
 S CIEN="",VALCD=0
"RTN","LEXTRAN1",267,0)
 F  Q:VALCD=1  D  Q:CIEN=""
"RTN","LEXTRAN1",268,0)
 .S CIEN=$O(^LEX(757.02,"CODE",LEXCODE_" ",CIEN)) Q:CIEN=""  D
"RTN","LEXTRAN1",269,0)
 .S VALCD=''$D(^LEX(757.02,"ASRC",$$LEXASAB(CSYS),CIEN))
"RTN","LEXTRAN1",270,0)
 I 'VALCD Q -2_U_$$LEXSCNM(CSYS)_" code "_LEXCODE_" not on file"
"RTN","LEXTRAN1",271,0)
 ;
"RTN","LEXTRAN1",272,0)
 ; obtain mappings that are valid for date passed
"RTN","LEXTRAN1",273,0)
 ;
"RTN","LEXTRAN1",274,0)
 S (MORD,MTAR,MIEN)=""
"RTN","LEXTRAN1",275,0)
 K LEX
"RTN","LEXTRAN1",276,0)
 S LEX=0
"RTN","LEXTRAN1",277,0)
 F  S MORD=$O(^LEX(757.33,"C",MIDIEN,LEXCODE,MORD)) Q:MORD=""  D
"RTN","LEXTRAN1",278,0)
 .F  S MTAR=$O(^LEX(757.33,"C",MIDIEN,LEXCODE,MORD,MTAR)) Q:MTAR=""  D
"RTN","LEXTRAN1",279,0)
 ..F  S MIEN=$O(^LEX(757.33,"C",MIDIEN,LEXCODE,MORD,MTAR,MIEN)) Q:MIEN=""  D
"RTN","LEXTRAN1",280,0)
 ...N MAT S MAT=$P($G(^LEX(757.33,+MIEN,0)),U,5) ; Pch 73 adds variable MAT for match
"RTN","LEXTRAN1",281,0)
 ...S VUID=$P(^LEX(757.33,MIEN,0),U)
"RTN","LEXTRAN1",282,0)
 ...S EFDT=+$O(^LEX(757.33,"G",VUID,LEXVDT+.0001),-1)
"RTN","LEXTRAN1",283,0)
 ...Q:EFDT=0
"RTN","LEXTRAN1",284,0)
 ...S STAT=+$O(^LEX(757.33,"G",VUID,EFDT,""))
"RTN","LEXTRAN1",285,0)
 ...Q:STAT=0
"RTN","LEXTRAN1",286,0)
 ...S LEX=LEX+1
"RTN","LEXTRAN1",287,0)
 ...S LEX(MORD,MTAR)=MAT ; Pch 73 adds variable MAT for match
"RTN","LEXTRAN1",288,0)
 I LEXRAY'="LEX" M @LEXRAY=LEX K LEX
"RTN","LEXTRAN1",289,0)
 Q ''@LEXRAY_U_@LEXRAY
"RTN","LEXTRAN1",290,0)
 ;
"RTN","LEXTRAN1",291,0)
LEXSCNM(LEXSRC) ; get source name
"RTN","LEXTRAN1",292,0)
 Q $P(^LEX(757.03,$O(^LEX(757.03,"B",LEXSRC,"")),0),U,2)
"RTN","LEXTRAN1",293,0)
 ;
"RTN","LEXTRAN1",294,0)
LEXASAB(LEXSRC) ; get source abbreviation
"RTN","LEXTRAN1",295,0)
 Q $E($P(^LEX(757.03,$O(^LEX(757.03,"B",LEXSRC,"")),0),U),1,3)
"RTN","LEXTRAN1",296,0)
 ;
"RTN","LEXTRAN1",297,0)
INTDAT(X) ; convert date from external format to VA internal format
"RTN","LEXTRAN1",298,0)
 N Y
"RTN","LEXTRAN1",299,0)
 D ^%DT
"RTN","LEXTRAN1",300,0)
 Q Y
"RTN","LEXTRAN1",301,0)
 ;
"RTN","LEXTRAN1",302,0)
GETCIEN(CODE) ; get correct code ien for code and date
"RTN","LEXTRAN1",303,0)
 ; CODE must be defined
"RTN","LEXTRAN1",304,0)
 ; LEXVDT must be defined
"RTN","LEXTRAN1",305,0)
 N STA,DAT,CIEN,ARR,CDT S CDT=$G(LEXVDT)
"RTN","LEXTRAN1",306,0)
 S (STA,DAT,CIEN)=""
"RTN","LEXTRAN1",307,0)
 F  S STA=$O(^LEX(757.02,"ACT",CODE_" ",STA)) Q:STA=""  D
"RTN","LEXTRAN1",308,0)
 .Q:(STA+1)>2
"RTN","LEXTRAN1",309,0)
 .F  S DAT=$O(^LEX(757.02,"ACT",CODE_" ",STA,DAT)) Q:DAT=""  D
"RTN","LEXTRAN1",310,0)
 ..F  S CIEN=$O(^LEX(757.02,"ACT",CODE_" ",STA,DAT,CIEN)) Q:CIEN=""  D
"RTN","LEXTRAN1",311,0)
 ...S ARR(DAT,CIEN)=""
"RTN","LEXTRAN1",312,0)
 Q:'$D(ARR) ("-1^No Code entry found for date "_$S(CDT?7N:$$FMTE^XLFDT(CDT,"5Z"),1:""))
"RTN","LEXTRAN1",313,0)
 S CIEN=$O(ARR(CDT+.001),-1)
"RTN","LEXTRAN1",314,0)
 Q:'$L(CIEN) ("-1^No Code entry found for date "_$S(CDT?7N:$$FMTE^XLFDT(CDT,"5Z"),1:""))
"RTN","LEXTRAN1",315,0)
 S CIEN=$O(ARR(CIEN,""),-1)
"RTN","LEXTRAN1",316,0)
 Q:'$D(^LEX(757.02,+CIEN,0)) ("-1^No Code entry found for date "_$S(CDT?7N:$$FMTE^XLFDT(CDT,"5Z"),1:""))
"RTN","LEXTRAN1",317,0)
 Q CIEN
"RTN","LEXU")
0^14^B21563695^B21347694
"RTN","LEXU",1,0)
LEXU ;ISL/KER - Miscellaneous Lexicon Utilities ; 25 Aug 2011  10:41 AM
"RTN","LEXU",2,0)
 ;;2.0;LEXICON UTILITY;**2,6,9,15,25,36,73,51**;Sep 23, 1996;Build 77
"RTN","LEXU",3,0)
 ;
"RTN","LEXU",4,0)
 ; External References
"RTN","LEXU",5,0)
 ;   DBIA 10103  $$DT^XLFDT
"RTN","LEXU",6,0)
 ;   DBIA  3990  $$ICDDX^ICDCODE
"RTN","LEXU",7,0)
 ;   DBIA  1995  $$CPT^ICPTCOD
"RTN","LEXU",8,0)
 ;                         
"RTN","LEXU",9,0)
SC(LEX,LEXS,LEXVDT) ; Filter by Semantic Class
"RTN","LEXU",10,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",11,0)
 ;    LEXS     Filter
"RTN","LEXU",12,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",13,0)
 N LEXINC,LEXEXC,LEXIC,LEXEC,LEXRREC
"RTN","LEXU",14,0)
 S LEXRREC=LEX Q:'$D(^LEX(757.01,LEXRREC,0)) 0
"RTN","LEXU",15,0)
 I $L(LEXS,";")=3,$P(LEXS,";",3)'="" D  I LEXINC K LEXIC,LEXEXC,LEXS,LEXEC Q LEXINC
"RTN","LEXU",16,0)
 . S LEXINC=0 S LEXINC=$$SO(LEXRREC,$P(LEXS,";",3),$G(LEXVDT))
"RTN","LEXU",17,0)
 S LEXRREC=$P(^LEX(757.01,LEXRREC,1),U,1)
"RTN","LEXU",18,0)
 S LEXINC=0 F LEXIC=1:1:$L($P(LEXS,";",1),"/") D
"RTN","LEXU",19,0)
 . I $D(^LEX(757.1,"AMCC",LEXRREC,$P($P(LEXS,";",1),"/",LEXIC)))!($D(^LEX(757.1,"AMCT",LEXRREC,$P($P(LEXS,";",1),"/",LEXIC)))) S LEXINC=1,LEXIC=$L($P(LEXS,";",1),"/")+1
"RTN","LEXU",20,0)
 I LEXINC=0!($P(LEXS,";",2)="") K LEXIC,LEXS,LEXEC Q LEXINC
"RTN","LEXU",21,0)
 S LEXEXC=0 F LEXEC=1:1:$L($P(LEXS,";",2),"/") D
"RTN","LEXU",22,0)
 . I $D(^LEX(757.1,"AMCC",LEXRREC,$P($P(LEXS,";",2),"/",LEXEC)))!($D(^LEX(757.1,"AMCT",LEXRREC,$P($P(LEXS,";",2),"/",LEXEC)))) S LEXEXC=1,LEXEC=$L($P(LEXS,";",2),"/")+1
"RTN","LEXU",23,0)
 I LEXINC,'LEXEXC K LEXIC,LEXS,LEXEC Q 1
"RTN","LEXU",24,0)
 K LEXIC,LEXS,LEXEC Q 0
"RTN","LEXU",25,0)
SO(LEX,LEXS,LEXVDT) ; Filter by Source
"RTN","LEXU",26,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",27,0)
 ;    LEXS     Filter
"RTN","LEXU",28,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",29,0)
 N LEXTREC S LEXTREC=+LEX Q:'$D(^LEX(757.01,LEXTREC,0)) 0
"RTN","LEXU",30,0)
 N LEXFND S LEXFND=0,LEXTREC=+LEXTREC Q:'$D(^LEX(757.01,LEXTREC)) LEXFND
"RTN","LEXU",31,0)
 N LEXCODE,LEXSOID,LEXCREC,LEXSAB,LEXMC,LEXN0,LEXSO,LEXSTA
"RTN","LEXU",32,0)
 S LEXMC=$P(^LEX(757.01,LEXTREC,1),U,1)
"RTN","LEXU",33,0)
 S LEXMCE=+(^LEX(757,+($P(^LEX(757.01,LEXTREC,1),U,1)),0))
"RTN","LEXU",34,0)
 I LEXTREC=LEXMCE D  G SOQ
"RTN","LEXU",35,0)
 . S LEXFND=0 F LEXSOID=1:1:$L(LEXS,"/") Q:LEXFND  D
"RTN","LEXU",36,0)
 . . S LEXCODE=$P(LEXS,"/",LEXSOID),LEXCREC=0
"RTN","LEXU",37,0)
 . . F  S LEXCREC=$O(^LEX(757.02,"AMC",LEXMC,LEXCREC)) Q:+LEXCREC=0!(LEXFND)  D
"RTN","LEXU",38,0)
 . . . S LEXN0=$G(^LEX(757.02,LEXCREC,0))
"RTN","LEXU",39,0)
 . . . S LEXSAB=+($P(LEXN0,U,3)),LEXSO=$P(LEXN0,U,2)
"RTN","LEXU",40,0)
 . . . S LEXSTA=$$STATCHK^LEXSRC2(LEXSO,$G(LEXVDT),,LEXSAB) Q:+LEXSTA'>0  Q:$P(LEXSTA,U,2)'=LEXCREC
"RTN","LEXU",41,0)
 . . . Q:'$D(^LEX(757.03,LEXSAB,0))
"RTN","LEXU",42,0)
 . . . S LEXSAB=$E(^LEX(757.03,LEXSAB,0),1,3)
"RTN","LEXU",43,0)
 . . . I LEXSAB=LEXCODE S LEXFND=1
"RTN","LEXU",44,0)
SOQ ; Quit Source Filter
"RTN","LEXU",45,0)
 K LEX,LEXTREC,LEXMC,LEXS,LEXCODE,LEXMCE,LEXSOID Q LEXFND
"RTN","LEXU",46,0)
SRC(LEX,LEXS) ; Filter by Expression Source
"RTN","LEXU",47,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",48,0)
 ;    LEXS     Filter
"RTN","LEXU",49,0)
 S LEX=+($G(LEX)),LEXS=+($G(LEXS))
"RTN","LEXU",50,0)
 Q:LEX=0 0 Q:LEXS=0 0 Q:'$D(^LEX(757.01,LEX,0)) 0 Q:'$D(^LEX(757.14,LEXS,0)) 0
"RTN","LEXU",51,0)
 S LEXSR=$P($G(^LEX(757.01,LEX,1)),U,12) Q:LEXSR=LEXS 1
"RTN","LEXU",52,0)
 N LEXSR,LEXMC,LEXMCE S LEXMC=+($G(^LEX(757.01,LEX,1))),LEXMCE=+($G(^LEX(757,+LEXMC,0)))
"RTN","LEXU",53,0)
 S LEXSR=$P($G(^LEX(757.01,LEXMCE,1)),U,12) Q:LEXSR=LEXS 1
"RTN","LEXU",54,0)
 Q 0
"RTN","LEXU",55,0)
DEF(LEX) ; Display expression definition
"RTN","LEXU",56,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",57,0)
 I $D(^LEX(757.01,LEX,3,0)) D
"RTN","LEXU",58,0)
 . N LEXLN F LEXLN=1:1:$P(^LEX(757.01,LEX,3,0),U,4) D
"RTN","LEXU",59,0)
 . . I $D(^LEX(757.01,LEX,3,LEXLN,0)) W !,?2,^LEX(757.01,LEX,3,LEXLN,0)
"RTN","LEXU",60,0)
 . K LEX,LEXLN W !
"RTN","LEXU",61,0)
 Q
"RTN","LEXU",62,0)
ID(LEX) ; ICD Diagnosis retained - ICD procedures ignored
"RTN","LEXU",63,0)
 ;    LEX      Code
"RTN","LEXU",64,0)
 Q:'$L($G(LEX)) "" Q:$L($P(LEX,".",1))<3 "" Q:'$D(^LEX(757.02,"AVA",(LEX_" "))) ""
"RTN","LEXU",65,0)
 N LEXO,LEXR S (LEXO,LEXR)=0 F  S LEXR=$O(^LEX(757.02,"AVA",(LEX_" "),LEXR)) Q:+LEXR=0  D  Q:LEXO=1
"RTN","LEXU",66,0)
 . I $D(^LEX(757.02,"AVA",(LEX_" "),LEXR,"ICD")) S LEXO=1
"RTN","LEXU",67,0)
 Q:'LEXO "" Q LEX
"RTN","LEXU",68,0)
ICDONE(LEX,LEXVDT) ; Return one ICD code for an expression
"RTN","LEXU",69,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",70,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",71,0)
 N LEXICD
"RTN","LEXU",72,0)
 S LEXVDT=$S(+$G(LEXVDT)>0:LEXVDT,1:$$DT^XLFDT)
"RTN","LEXU",73,0)
 S LEX=$$ONE^LEXSRC(LEX,"ICD",LEXVDT) Q:LEX="" ""
"RTN","LEXU",74,0)
 S LEXICD=$$ICDDX^ICDCODE(LEX,LEXVDT)
"RTN","LEXU",75,0)
 Q:$P(LEXICD,"^",2)="INVALID CODE" ""
"RTN","LEXU",76,0)
 Q LEX
"RTN","LEXU",77,0)
ICD(LEX,LEXVDT) ; Return all ICD codes for an expression
"RTN","LEXU",78,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",79,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",80,0)
 S LEXVDT=$S(+$G(LEXVDT)>0:LEXVDT,1:$$DT^XLFDT)
"RTN","LEXU",81,0)
 N LEXSRC,LEXICD
"RTN","LEXU",82,0)
 D ALL^LEXSRC(LEX,"ICD",LEXVDT) Q:+$G(LEXSRC(0))'>0 ""
"RTN","LEXU",83,0)
 N LEXI,LEXT,LEXS S LEXI=0,LEXT=""
"RTN","LEXU",84,0)
 F  S LEXI=$O(LEXSRC(LEXI)) Q:+LEXI=0  D
"RTN","LEXU",85,0)
 . S LEXS=LEXSRC(LEXI)
"RTN","LEXU",86,0)
 . S LEXICD=$$ICDDX^ICDCODE(LEXS,LEXVDT)
"RTN","LEXU",87,0)
 . Q:$P(LEXICD,"^",2)="INVALID CODE"
"RTN","LEXU",88,0)
 . Q:(LEXT_";")[(";"_LEXS_";")  S LEXT=LEXT_";"_LEXS
"RTN","LEXU",89,0)
 S:$E(LEXT,1)=";" LEXT=$E(LEXT,2,$L(LEXT)) S LEX=LEXT Q LEX
"RTN","LEXU",90,0)
CPTONE(LEX,LEXVDT) ; Return one CPT code for an expression
"RTN","LEXU",91,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",92,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",93,0)
 S LEXVDT=$S(+$G(LEXVDT)>0:LEXVDT,1:$$DT^XLFDT)
"RTN","LEXU",94,0)
 N LEXCPT
"RTN","LEXU",95,0)
 S LEX=$$ONE^LEXSRC(LEX,"CPT",LEXVDT)
"RTN","LEXU",96,0)
 Q:LEX="" ""
"RTN","LEXU",97,0)
 S LEXCPT=$$CPT^ICPTCOD(LEX,LEXVDT)
"RTN","LEXU",98,0)
 Q:$P(LEXCPT,"^",2)="NO SUCH ENTRY" ""
"RTN","LEXU",99,0)
 I +$P(LEXCPT,"^",7)=0 S LEX=""
"RTN","LEXU",100,0)
 Q LEX
"RTN","LEXU",101,0)
CPCONE(LEX,LEXVDT) ; Return one HCPCS code for an expression
"RTN","LEXU",102,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",103,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",104,0)
 S LEXVDT=$S(+$G(LEXVDT)>0:LEXVDT,1:$$DT^XLFDT)
"RTN","LEXU",105,0)
 N LEXCPT
"RTN","LEXU",106,0)
 S LEX=$$ONE^LEXSRC(LEX,"CPC",LEXVDT)
"RTN","LEXU",107,0)
 Q:LEX="" ""
"RTN","LEXU",108,0)
 S LEXCPT=$$CPT^ICPTCOD(LEX,LEXVDT)
"RTN","LEXU",109,0)
 Q:$P(LEXCPT,"^",2)="NO SUCH ENTRY" ""
"RTN","LEXU",110,0)
 I +$P(LEXCPT,"^",7)=0 S LEX=""
"RTN","LEXU",111,0)
 I LEX'?1U.4N S LEX=""
"RTN","LEXU",112,0)
 Q LEX
"RTN","LEXU",113,0)
DSMONE(LEX) ; Return one DSM code for an expression
"RTN","LEXU",114,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",115,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",116,0)
 ; Check for DSM-IV first
"RTN","LEXU",117,0)
 S LEX=$$ONE^LEXSRC(LEX,"DS4") I LEX'="" Q LEX
"RTN","LEXU",118,0)
 ; If not DSM-IV, then check for DSM-III
"RTN","LEXU",119,0)
 S LEX=$$ONE^LEXSRC(LEX,"DS3") Q LEX
"RTN","LEXU",120,0)
ADR(LEX) ; Mailing Address
"RTN","LEXU",121,0)
 N DIC,DTOUT,DUOUT,X,Y S DIC="^DIC(4.2,",DIC(0)="M",(LEX,X)="FO-SLC.MED.VA.GOV" D ^DIC Q:+Y>0 LEX
"RTN","LEXU",122,0)
 S DIC="^DIC(4.2,",DIC(0)="M",(LEX,X)="ISC-SLC.MED.VA.GOV" D ^DIC Q:+Y>0 LEX
"RTN","LEXU",123,0)
 Q "ISC-SLC.VA.GOV"
"RTN","LEXXGI4")
0^18^B22057583^n/a
"RTN","LEXXGI4",1,0)
LEXXGI4 ;ISL/KER - Global Import (Repair at Site) ;07/08/2012
"RTN","LEXXGI4",2,0)
 ;;2.0;LEXICON UTILITY;**51**;Sep 23, 1996;Build 77
"RTN","LEXXGI4",3,0)
 ;              
"RTN","LEXXGI4",4,0)
 ; Global Variables
"RTN","LEXXGI4",5,0)
 ;    ^TMP("LEXXGI4"      SACC 2.3.2.5.1
"RTN","LEXXGI4",6,0)
 ;               
"RTN","LEXXGI4",7,0)
 ; External References
"RTN","LEXXGI4",8,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","LEXXGI4",9,0)
 ;    ^%ZTLOAD            ICR  10063
"RTN","LEXXGI4",10,0)
 ;    ^DIK                ICR  10013
"RTN","LEXXGI4",11,0)
 ;    IX1^DIK             ICR  10013
"RTN","LEXXGI4",12,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXXGI4",13,0)
 ;    BMES^XPDUTL         ICR  10141
"RTN","LEXXGI4",14,0)
 ;    MES^XPDUTL          ICR  10141
"RTN","LEXXGI4",15,0)
 ;               
"RTN","LEXXGI4",16,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXXGI4",17,0)
 ;    LEXLOUD   NEWed, SET and KILLed in the Post-Install
"RTN","LEXXGI4",18,0)
 ;              routine LEX20nnP.  If set, the entry 
"RTN","LEXXGI4",19,0)
 ;              points ASL, AWRD, SSWRD and SUB will write
"RTN","LEXXGI4",20,0)
 ;              to the screen using MES^XPDUTL.
"RTN","LEXXGI4",21,0)
 ;     
"RTN","LEXXGI4",22,0)
AWRD ; Repair Word Index AWRD in Expression file #757.01
"RTN","LEXXGI4",23,0)
 N Y,ZTRTN,ZTDESC,ZTIO,ZTDTH,ZTSAVE,ZTQUEUED,ZTREQ S ZTRTN="AWRDT^LEXXGI4"
"RTN","LEXXGI4",24,0)
 S ZTDESC="Repair AWRD index in Expression file #757.01"
"RTN","LEXXGI4",25,0)
 S ZTIO="",ZTDTH=$H D ^%ZTLOAD,HOME^%ZIS I $D(LEXLOUD) D
"RTN","LEXXGI4",26,0)
 . S LEXT="  Re-Index the AWRD index of file #757.01 tasked"
"RTN","LEXXGI4",27,0)
 . S:+($G(ZTSK))>0 LEXT=LEXT_" (#"_+($G(ZTSK))_")" D MES^XPDUTL(LEXT)
"RTN","LEXXGI4",28,0)
 K ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","LEXXGI4",29,0)
 Q
"RTN","LEXXGI4",30,0)
AWRDT ;   Repair Word Index AWRD in Expression file #757.01 (task)
"RTN","LEXXGI4",31,0)
 ;     Subset Indexes Axxx
"RTN","LEXXGI4",32,0)
 N DA,DIK D SSWRD^LEXXGI4
"RTN","LEXXGI4",33,0)
 ;     Main Word AWRD Index
"RTN","LEXXGI4",34,0)
 S DIK="^LEX(757.01,",DIK(1)="2^AWRD" D ENALL^DIK
"RTN","LEXXGI4",35,0)
 ;     Replacement Words
"RTN","LEXXGI4",36,0)
 K DA S DIK="^LEX(757.05," D IXALL^DIK
"RTN","LEXXGI4",37,0)
 ;     Update String Lengths
"RTN","LEXXGI4",38,0)
 D ASL^LEXXGI4
"RTN","LEXXGI4",39,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXXGI4",40,0)
 Q
"RTN","LEXXGI4",41,0)
 ;
"RTN","LEXXGI4",42,0)
ASL ; Recalculate ASL cross-reference
"RTN","LEXXGI4",43,0)
 N Y,ZTRTN,ZTDESC,ZTIO,ZTDTH,ZTSAVE,ZTQUEUED,ZTREQ S ZTRTN="ASLT^LEXXGI4"
"RTN","LEXXGI4",44,0)
 S ZTDESC="Recalculate ASL index in Expression file #757.01"
"RTN","LEXXGI4",45,0)
 S ZTIO="",ZTDTH=$H D ^%ZTLOAD,HOME^%ZIS I $D(LEXLOUD) D
"RTN","LEXXGI4",46,0)
 . S LEXT="  Re-index the ASL index of file #757.01 tasked"
"RTN","LEXXGI4",47,0)
 . S:+($G(ZTSK))>0 LEXT=LEXT_" (#"_+($G(ZTSK))_")" D MES^XPDUTL(LEXT)
"RTN","LEXXGI4",48,0)
 K ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","LEXXGI4",49,0)
 Q
"RTN","LEXXGI4",50,0)
ASLT ;   Recalculate ASL cross-reference (task)
"RTN","LEXXGI4",51,0)
 K ^TMP("LEXXGI4",$J,"ASL")
"RTN","LEXXGI4",52,0)
 N LEXTK,LEXFIR,LEXFC S (LEXFIR,LEXFC,LEXTK)=""
"RTN","LEXXGI4",53,0)
 F  S LEXTK=$O(^LEX(757.01,"AWRD",LEXTK)) Q:'$L(LEXTK)  D
"RTN","LEXXGI4",54,0)
 . N LEXP,LEXS,LEXC,LEXF,LEXTKN S LEXTKN=LEXTK
"RTN","LEXXGI4",55,0)
 . F  Q:$E(LEXTKN,1)'=" "  S LEXTKN=$E(LEXTKN,2,$L(LEXTKN))
"RTN","LEXXGI4",56,0)
 . F  Q:$E(LEXTKN,$L(LEXTKN))'=" "  S LEXTKN=$E(LEXTKN,1,($L(LEXTKN)-1))
"RTN","LEXXGI4",57,0)
 . S LEXF=$E(LEXTKN,1)
"RTN","LEXXGI4",58,0)
 . W:'$D(ZTQUEUED)&(LEXFIR'=LEXF)&(LEXFC'[LEXF) LEXF
"RTN","LEXXGI4",59,0)
 . S LEXFIR=LEXF S:LEXFC'[LEXF LEXFC=LEXFC_LEXF
"RTN","LEXXGI4",60,0)
 . F LEXP=1:1:$L(LEXTKN)  S LEXS=$E(LEXTKN,1,LEXP) D
"RTN","LEXXGI4",61,0)
 . . Q:'$L($G(LEXS))  Q:$D(^TMP("LEXXGI4",$J,"ASL",LEXS))
"RTN","LEXXGI4",62,0)
 . . S LEXC=$$SCT(LEXS)
"RTN","LEXXGI4",63,0)
 . . I LEXC>0 K ^LEX(757.01,"ASL",LEXS) D
"RTN","LEXXGI4",64,0)
 . . . K ^LEX(757.01,"ASL",LEXS)
"RTN","LEXXGI4",65,0)
 . . . S ^LEX(757.01,"ASL",LEXS,LEXC)=""
"RTN","LEXXGI4",66,0)
 . . S ^TMP("LEXXGI4",$J,"ASL",LEXS)=""
"RTN","LEXXGI4",67,0)
 K ^TMP("LEXXGI4",$J,"ASL")
"RTN","LEXXGI4",68,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXXGI4",69,0)
 Q
"RTN","LEXXGI4",70,0)
SCT(X) ;   Recalculate ASL cross-reference (String Counter)
"RTN","LEXXGI4",71,0)
 N LEXC,LEXTK,LEXTKN,LEXO,LEXT,LEXS,LEXP
"RTN","LEXXGI4",72,0)
 S (LEXC,LEXTK)=$$UP^XLFSTR($G(X)),LEXT=0  Q:'$L(LEXTK) 0
"RTN","LEXXGI4",73,0)
 S:$L(LEXTK)>1 LEXO=$E(LEXTK,1,($L(LEXTK)-1))_$C(($A($E(LEXTK,$L(LEXTK)))-1))_"~"
"RTN","LEXXGI4",74,0)
 S:$L(LEXTK)=1 LEXO=$C(($A(LEXTK)-1))_"~"
"RTN","LEXXGI4",75,0)
 F  S LEXO=$O(^LEX(757.01,"AWRD",LEXO)) Q:'$L(LEXO)  Q:$E(LEXO,1,$L(LEXC))'=LEXC  D
"RTN","LEXXGI4",76,0)
 . N LEXM S LEXM=0 F  S LEXM=$O(^LEX(757.01,"AWRD",LEXO,LEXM)) Q:+LEXM'>0  D
"RTN","LEXXGI4",77,0)
 . . N LEXE S LEXE=0 F  S LEXE=$O(^LEX(757.01,"AWRD",LEXO,LEXM,LEXE)) Q:+LEXE'>0  D
"RTN","LEXXGI4",78,0)
 . . . S LEXT=LEXT+1
"RTN","LEXXGI4",79,0)
 S X=LEXT
"RTN","LEXXGI4",80,0)
 Q X
"RTN","LEXXGI4",81,0)
 ;
"RTN","LEXXGI4",82,0)
SSWRD ;   Repair Word Index Axxx in Sub-Set file #757.21
"RTN","LEXXGI4",83,0)
 N Y,ZTRTN,ZTDESC,ZTIO,ZTDTH,ZTSAVE,ZTQUEUED,ZTREQ S ZTRTN="SSWRDT^LEXXGI4"
"RTN","LEXXGI4",84,0)
 S ZTDESC="Repair Word Index Axxx in Sub-Set file #757.21"
"RTN","LEXXGI4",85,0)
 S ZTIO="",ZTDTH=$H D ^%ZTLOAD,HOME^%ZIS I $D(LEXLOUD) D
"RTN","LEXXGI4",86,0)
 . S LEXT="  Re-Index the AWRD index of file #757.01 tasked"
"RTN","LEXXGI4",87,0)
 . S:+($G(ZTSK))>0 LEXT=LEXT_" (#"_+($G(ZTSK))_")" D MES^XPDUTL(LEXT)
"RTN","LEXXGI4",88,0)
 K ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","LEXXGI4",89,0)
 Q
"RTN","LEXXGI4",90,0)
SSWRDT ;   Repair Word Index Axxx in Sub-Set file #757.21 (task)
"RTN","LEXXGI4",91,0)
 N DA,DIK K DA S DIK="^LEX(757.21," D IXALL^DIK
"RTN","LEXXGI4",92,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXXGI4",93,0)
 Q
"RTN","LEXXGI4",94,0)
 ;
"RTN","LEXXGI4",95,0)
SUB ; Repair Subset Cross-References
"RTN","LEXXGI4",96,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,LEXT S ZTRTN="SUBT^LEXXGI4"
"RTN","LEXXGI4",97,0)
 S ZTDESC="Re-Index the Subsets file #757.21 (set logic only)"
"RTN","LEXXGI4",98,0)
 S ZTIO="",ZTDTH=$H D ^%ZTLOAD I $D(LEXLOUD) D
"RTN","LEXXGI4",99,0)
 . S LEXT="  Re-index file #757.21 tasked"
"RTN","LEXXGI4",100,0)
 . S:+($G(ZTSK))>0 LEXT=LEXT_" (#"_+($G(ZTSK))_")" D MES^XPDUTL(LEXT)
"RTN","LEXXGI4",101,0)
 K ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","LEXXGI4",102,0)
 Q
"RTN","LEXXGI4",103,0)
SUBT ;   Repair Subset Cross-References (task)
"RTN","LEXXGI4",104,0)
 N LEXP3,LEXP4,LEXIEN S (LEXP3,LEXP4,LEXIEN)=0
"RTN","LEXXGI4",105,0)
 F  S LEXIEN=$O(^LEX(757.21,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXXGI4",106,0)
 . N DA,DIK S DA=+($G(LEXIEN))  D SUBFIX(DA) Q:'$D(^LEX(757.21,+LEXIEN,0))
"RTN","LEXXGI4",107,0)
 . S LEXP3=LEXIEN,LEXP4=LEXP4+1
"RTN","LEXXGI4",108,0)
 . S DA=LEXIEN,DIK="^LEX(757.21," D IX1^DIK
"RTN","LEXXGI4",109,0)
 S:LEXP3>0 $P(^LEX(757.21,0),"^",3)=LEXP3
"RTN","LEXXGI4",110,0)
 S:LEXP4>0 $P(^LEX(757.21,0),"^",4)=LEXP4
"RTN","LEXXGI4",111,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXXGI4",112,0)
 Q
"RTN","LEXXGI4",113,0)
SUBFIX(X) ;   Repair Subset Cross-References (Fix 757.21)
"RTN","LEXXGI4",114,0)
 N DA,DIK,LEXEXP,LEXDFL S DA=+($G(X))
"RTN","LEXXGI4",115,0)
 Q:+DA'>0  Q:'$D(^LEX(757.21,+DA,0))
"RTN","LEXXGI4",116,0)
 S LEXEXP=+$G(^LEX(757.21,+DA,0))
"RTN","LEXXGI4",117,0)
 S LEXDFL=$P($G(^LEX(757.01,+LEXEXP,1)),"^",5)
"RTN","LEXXGI4",118,0)
 Q:+LEXDFL'>0  S DIK="^LEX(757.21," D ^DIK
"RTN","LEXXGI4",119,0)
 Q
"SEC","^DIC",757.01,757.01,0,"AUDIT")
@
"SEC","^DIC",757.01,757.01,0,"DD")
@
"SEC","^DIC",757.01,757.01,0,"DEL")
@
"SEC","^DIC",757.01,757.01,0,"LAYGO")
@
"SEC","^DIC",757.01,757.01,0,"RD")
@
"SEC","^DIC",757.01,757.01,0,"WR")
@
"SEC","^DIC",757.32,757.32,0,"AUDIT")
@
"SEC","^DIC",757.32,757.32,0,"DD")
@
"SEC","^DIC",757.32,757.32,0,"DEL")
@
"SEC","^DIC",757.32,757.32,0,"LAYGO")
@
"SEC","^DIC",757.32,757.32,0,"RD")
@
"SEC","^DIC",757.32,757.32,0,"WR")
@
"SEC","^DIC",757.33,757.33,0,"AUDIT")
@
"SEC","^DIC",757.33,757.33,0,"DD")
@
"SEC","^DIC",757.33,757.33,0,"DEL")
@
"SEC","^DIC",757.33,757.33,0,"LAYGO")
@
"SEC","^DIC",757.33,757.33,0,"RD")
@
"SEC","^DIC",757.33,757.33,0,"WR")
@
"VER")
8.0^22.0
"^DD",757.01,757.01,0)
FIELD^^18^18
"^DD",757.01,757.01,0,"ACT")
S:DIC(0)["L" DIC(0)=$P(DIC(0),"L",1)_$P(DIC(0),"L",2)
"^DD",757.01,757.01,0,"DDA")
N
"^DD",757.01,757.01,0,"DIC")
LEXA1
"^DD",757.01,757.01,0,"DT")
3070531
"^DD",757.01,757.01,0,"IX","ADC",757.01,9)

"^DD",757.01,757.01,0,"IX","ADTERM",757.01,9)

"^DD",757.01,757.01,0,"IX","AMC",757.01,1)

"^DD",757.01,757.01,0,"IX","APAR",757.01,13)

"^DD",757.01,757.01,0,"IX","ASL",757.01,.01)

"^DD",757.01,757.01,0,"IX","AWORD",757.18,.01)

"^DD",757.01,757.01,0,"IX","AWRD",757.01,2)

"^DD",757.01,757.01,0,"IX","B",757.01,.01)

"^DD",757.01,757.01,0,"NM","EXPRESSIONS")

"^DD",757.01,757.01,0,"PK")
LEX
"^DD",757.01,757.01,0,"PT",78.3,6)

"^DD",757.01,757.01,0,"PT",100.051,1)

"^DD",757.01,757.01,0,"PT",125.12,2)

"^DD",757.01,757.01,0,"PT",200.0351,1)

"^DD",757.01,757.01,0,"PT",357.3,2.02)

"^DD",757.01,757.01,0,"PT",357.951,2.02)

"^DD",757.01,757.01,0,"PT",358.3,2.02)

"^DD",757.01,757.01,0,"PT",757,.01)

"^DD",757.01,757.01,0,"PT",757,1)

"^DD",757.01,757.01,0,"PT",757.01,13)

"^DD",757.01,757.01,0,"PT",757.02,.01)

"^DD",757.01,757.01,0,"PT",757.21,.01)

"^DD",757.01,757.01,0,"PT",757.4,.01)

"^DD",757.01,757.01,0,"PT",757.53,.01)

"^DD",757.01,757.01,0,"PT",8925.9,.04)

"^DD",757.01,757.01,0,"PT",9000010.07,.15)

"^DD",757.01,757.01,0,"PT",9000011,1.01)

"^DD",757.01,757.01,0,"PT",9999999.27,75701)

"^DD",757.01,757.01,0,"VRPK")
LEX
"^DD",757.01,757.01,0,"VRRV")
78^3111001
"^DD",757.01,757.01,.01,0)
DISPLAYABLE TEXT^RFX^^0;1^I $D(X) K:$L(X)>240!($L(X)<1) X
"^DD",757.01,757.01,.01,1,0)
^.1
"^DD",757.01,757.01,.01,1,1,0)
757.01^B
"^DD",757.01,757.01,.01,1,1,1)
S ^LEX(757.01,"B",$E($$UP^XLFSTR(X),1,63),DA)=""
"^DD",757.01,757.01,.01,1,1,2)
K ^LEX(757.01,"B",$E($$UP^XLFSTR(X),1,63),DA)
"^DD",757.01,757.01,.01,1,1,"%D",0)
^^4^4^2940902^
"^DD",757.01,757.01,.01,1,1,"%D",1,0)
^LEX(757.01,"B",EXP,IEN) - where EXP is the expression (either a Major Concept,
"^DD",757.01,757.01,.01,1,1,"%D",2,0)
Synonym or a Lexical Variant) in the Expression file #757.01 and IEN is the
"^DD",757.01,757.01,.01,1,1,"%D",3,0)
Internal Entry Number in the Expression file #757.01 where this expression is
"^DD",757.01,757.01,.01,1,1,"%D",4,0)
located.
"^DD",757.01,757.01,.01,1,2,0)
757.01^ASL^MUMPS
"^DD",757.01,757.01,.01,1,2,1)
D SSF^LEXNDX6
"^DD",757.01,757.01,.01,1,2,2)
D KSF^LEXNDX6
"^DD",757.01,757.01,.01,1,2,"%D",0)
^^3^3^2950212^
"^DD",757.01,757.01,.01,1,2,"%D",1,0)
^LEX(757.01,"ASL",STR,FREQ) - Where STR is a string found in the Clinical
"^DD",757.01,757.01,.01,1,2,"%D",2,0)
Lexicon and FREQ is the number of times (frequency) it occurrs.  This is not
"^DD",757.01,757.01,.01,1,2,"%D",3,0)
an index.
"^DD",757.01,757.01,.01,1,2,"DT")
2950212
"^DD",757.01,757.01,.01,3)
Displayable Text must be 1-240 characters in length.
"^DD",757.01,757.01,.01,21,0)
^.001^2^2^3061011^^^^
"^DD",757.01,757.01,.01,21,1,0)
This is the text which will be used to represent the expression (Major Concept,
"^DD",757.01,757.01,.01,21,2,0)
Synonym or Lexical Variant).
"^DD",757.01,757.01,.01,"DT")
3061011
"^DD",757.01,757.01,.01,"LAYGO",1,0)
I 0
"^DD",757.01,757.01,1,0)
MAJOR CONCEPT^RP757'I^LEX(757,^1;1^Q
"^DD",757.01,757.01,1,1,0)
^.1
"^DD",757.01,757.01,1,1,1,0)
757.01^AMC
"^DD",757.01,757.01,1,1,1,1)
S ^LEX(757.01,"AMC",$E(X,1,30),DA)=""
"^DD",757.01,757.01,1,1,1,2)
K ^LEX(757.01,"AMC",$E(X,1,30),DA)
"^DD",757.01,757.01,1,1,1,"%D",0)
^^3^3^2940902^^
"^DD",757.01,757.01,1,1,1,"%D",1,0)
^LEX(757.01,"AMC",MC,IEN) - where MC is the pointer to the Major Concept entry
"^DD",757.01,757.01,1,1,1,"%D",2,0)
in the Major Concept Map file #757 and IEN is the Internal Entry Number in the
"^DD",757.01,757.01,1,1,1,"%D",3,0)
Expression file #757.01 where this Major Concept pointer is Located.  
"^DD",757.01,757.01,1,1,1,"DT")
2930325
"^DD",757.01,757.01,1,21,0)
^^5^5^2950726^^^^
"^DD",757.01,757.01,1,21,1,0)
Pointer to the Major Concept (file #757).  If the expression is a major
"^DD",757.01,757.01,1,21,2,0)
concept, this pointer will be the same as the Expression pointer in the
"^DD",757.01,757.01,1,21,3,0)
Major Concept Map file (#757).  If it is a synonym or a lexical variant it
"^DD",757.01,757.01,1,21,4,0)
will point to it's parent major concept.  If it is a lexical variant of a
"^DD",757.01,757.01,1,21,5,0)
synonym, it will point to the parent major concept of the synonym.
"^DD",757.01,757.01,1,"DT")
2940902
"^DD",757.01,757.01,2,0)
TYPE^RP757.011'I^LEX(757.011,^1;2^Q
"^DD",757.01,757.01,2,1,0)
^.1^^-1
"^DD",757.01,757.01,2,1,2,0)
757.01^AWRD^MUMPS
"^DD",757.01,757.01,2,1,2,1)
D S^LEXNDX1
"^DD",757.01,757.01,2,1,2,2)
D K^LEXNDX1
"^DD",757.01,757.01,2,1,2,"%D",0)
^^8^8^2950626^^^
"^DD",757.01,757.01,2,1,2,"%D",1,0)
^LEX(757.01,"AWRD",WORD,MC,EXP) - where WORD is a clinical word parsed from the
"^DD",757.01,757.01,2,1,2,"%D",2,0)
expression (Major Concepts, Synonym or Lexical Variant), MC is the Internal
"^DD",757.01,757.01,2,1,2,"%D",3,0)
Entry Number in the Expression file #757.01 where the Major Concept of the
"^DD",757.01,757.01,2,1,2,"%D",4,0)
expression is located, and EXP is the Internal Entry Number in the Expression
"^DD",757.01,757.01,2,1,2,"%D",5,0)
file #757.01 where the expression containing the WORD is located.  Only Major
"^DD",757.01,757.01,2,1,2,"%D",6,0)
Concepts (M), Synonyms (S) and Lexical Variants (L) are indexed in the word 
"^DD",757.01,757.01,2,1,2,"%D",7,0)
index (AWRD).  Deleted Major Concepts (DM), Deleted Synonyms (DS) and Deleted 
"^DD",757.01,757.01,2,1,2,"%D",8,0)
Lexical Variants (DL) are ignored.
"^DD",757.01,757.01,2,1,2,"DT")
2950626
"^DD",757.01,757.01,2,3)

"^DD",757.01,757.01,2,21,0)
^^2^2^2950511^^^^
"^DD",757.01,757.01,2,21,1,0)
This is a pointer to the Expression Type file (#757.011).  Examples of
"^DD",757.01,757.01,2,21,2,0)
expression types include Major Concepts, Synonyms, Lexical Variants, etc.  
"^DD",757.01,757.01,2,"DT")
2950626
"^DD",757.01,757.01,3,0)
SCOPE^RSI^D:DIRECTLY LINKED;I:INDIRECTLY LINKED;B:BROADER VIEW;N:NARROWER VIEW;O:OTHER;R:RELATED VIEW;C:CONTROLLED VIEW;^1;3^Q
"^DD",757.01,757.01,3,9)
@
"^DD",757.01,757.01,3,21,0)
^^6^6^2940506^^
"^DD",757.01,757.01,3,21,1,0)
Scope - Demonstrates the relationship of the term to the Major Concept.
"^DD",757.01,757.01,3,21,2,0)
Major Concepts, Synonyms to Major Concepts and Lexical Variants to a Major
"^DD",757.01,757.01,3,21,3,0)
Concept are (D)irectly linked.  Lexical Variants to a Synonym of a Major
"^DD",757.01,757.01,3,21,4,0)
Concept are (I)ndirectly linked.  Related concepts are either (B)roader in
"^DD",757.01,757.01,3,21,5,0)
scope, (N)arrower in scope, or an (O)ther/undefined view of the Major
"^DD",757.01,757.01,3,21,6,0)
Concept.
"^DD",757.01,757.01,3,"DT")
2940506
"^DD",757.01,757.01,4,0)
FORM^RP757.014'I^LEX(757.014,^1;4^Q
"^DD",757.01,757.01,4,3)

"^DD",757.01,757.01,4,21,0)
^^4^4^2940902^^^
"^DD",757.01,757.01,4,21,1,0)
Pointer to the Expression Form (file 757.014) which describes the lexical 
"^DD",757.01,757.01,4,21,2,0)
style of an expression.  Major Concepts adopt the general form of "MAJ" while
"^DD",757.01,757.01,4,21,3,0)
all other expressions describe their forms as they relate to the Major 
"^DD",757.01,757.01,4,21,4,0)
Concept (i.e., plural, singular, acronym, etc.)
"^DD",757.01,757.01,4,"DT")
2931121
"^DD",757.01,757.01,5,0)
DISTINGUISHING TEXT^FX^^2;1^K:$A(X)=45 X I $D(X) K:$L(X)>240!($L(X)<2) X
"^DD",757.01,757.01,5,1,0)
^.1^^0
"^DD",757.01,757.01,5,3)
Original Text must be 2-240 characters in length.
"^DD",757.01,757.01,5,21,0)
^^2^2^2950313^^^^
"^DD",757.01,757.01,5,21,1,0)
This is the text or portion of text that distinguishes this expression from
"^DD",757.01,757.01,5,21,2,0)
the Major Concept.  (null if the expression is the Major Concept)
"^DD",757.01,757.01,5,"DT")
2970704
"^DD",757.01,757.01,6,0)
DEFINITION^757.016^^3;0
"^DD",757.01,757.01,6,21,0)
^^1^1^2960812^^
"^DD",757.01,757.01,6,21,1,0)
Definition of an expression when available.
"^DD",757.01,757.01,7,0)
NEGATION^757.17^^4;0
"^DD",757.01,757.01,7,21,0)
^^4^4^2940904^^^
"^DD",757.01,757.01,7,21,1,0)
This field contains words which are negated within the expression, i.e, 
"^DD",757.01,757.01,7,21,2,0)
without mention of "complication", except "thumb", and other than an 
"^DD",757.01,757.01,7,21,3,0)
"open wound".  These type of negations will not be indexed in the word 
"^DD",757.01,757.01,7,21,4,0)
index, preventing erroneous search results.
"^DD",757.01,757.01,8,0)
SUPPLEMENTAL^757.18^^5;0
"^DD",757.01,757.01,8,21,0)
^^2^2^2940904^^
"^DD",757.01,757.01,8,21,1,0)
Supplemental words (not found in the expression) which should be indexed
"^DD",757.01,757.01,8,21,2,0)
to assist in look-up operations.
"^DD",757.01,757.01,9,0)
DEACTIVATION FLAG^S^1:DEACTIVATED;0:ACTIVE;^1;5^Q
"^DD",757.01,757.01,9,1,0)
^.1
"^DD",757.01,757.01,9,1,1,0)
757.01^ADC^MUMPS
"^DD",757.01,757.01,9,1,1,1)
S:X=1 ^LEX(757.01,"ADC",X,DA)=""
"^DD",757.01,757.01,9,1,1,2)
K ^LEX(757.01,"ADC",X,DA)
"^DD",757.01,757.01,9,1,1,"%D",0)
^^3^3^2950410^
"^DD",757.01,757.01,9,1,1,"%D",1,0)
^LEX(757.01,"ADC",1,IEN) - This is an index of all deactivated terms in the
"^DD",757.01,757.01,9,1,1,"%D",2,0)
Expression file where IEN is the Internal Entry Number in the Expression file
"^DD",757.01,757.01,9,1,1,"%D",3,0)
(757.01) where the deactivated term is located.
"^DD",757.01,757.01,9,1,1,"DT")
2950410
"^DD",757.01,757.01,9,1,2,0)
757.01^ADTERM^MUMPS
"^DD",757.01,757.01,9,1,2,1)
S:X=1 ^LEX(757.01,"ADTERM",($E($P($G(^LEX(757.01,DA,0)),U,1),1,63)),DA)=""
"^DD",757.01,757.01,9,1,2,2)
K ^LEX(757.01,"ADTERM",($E($P($G(^LEX(757.01,DA,0)),U,1),1,63)),DA)
"^DD",757.01,757.01,9,1,2,"%D",0)
^^3^3^2970702^
"^DD",757.01,757.01,9,1,2,"%D",1,0)
^LEX(757.01,"ADTERM",DT,IEN) - Where DT is a deactivated term and IEN is the
"^DD",757.01,757.01,9,1,2,"%D",2,0)
internal entry number in the Expressions file #757.01 where the deactivated
"^DD",757.01,757.01,9,1,2,"%D",3,0)
term is located.
"^DD",757.01,757.01,9,1,2,"DT")
2970702
"^DD",757.01,757.01,9,21,0)
^^2^2^2970704^^^
"^DD",757.01,757.01,9,21,1,0)
This field indicates that a term formerly in use by the Lexicon has
"^DD",757.01,757.01,9,21,2,0)
been deactivated and should not be used in lookups or displays.
"^DD",757.01,757.01,9,"DT")
2970704
"^DD",757.01,757.01,10,0)
MODIFIER FLAG^NJ10,0^^1;6^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",757.01,757.01,10,3)
Type a Number between 0 and 9999999999, 0 Decimal Digits
"^DD",757.01,757.01,10,21,0)
^^3^3^2970701^
"^DD",757.01,757.01,10,21,1,0)
Number of terms that are further specified by appending a modifier (at the
"^DD",757.01,757.01,10,21,2,0)
begining of the display text) or specifier (at the end of the display text) of
"^DD",757.01,757.01,10,21,3,0)
the major concept.  Only major concepts have modifiers/specifiers.
"^DD",757.01,757.01,10,"DT")
2970701
"^DD",757.01,757.01,11,0)
MODIFIER TYPE^S^0:UNMODIFIED;1:MODIFIER (BEGINING OF TEXT);2:SPECIFIER (ENDING OF TEXT);^1;7^Q
"^DD",757.01,757.01,11,21,0)
^^2^2^2970701^
"^DD",757.01,757.01,11,21,1,0)
Flag indicated where the modifier is to be placed 1) at the begining of the
"^DD",757.01,757.01,11,21,2,0)
display text and 2) at the end of the display text.
"^DD",757.01,757.01,11,"DT")
2970701
"^DD",757.01,757.01,12,0)
DESCENDANT FLAG^NJ10,0^^1;8^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",757.01,757.01,12,3)
Type a Number between 0 and 9999999999, 0 Decimal Digits
"^DD",757.01,757.01,12,21,0)
^^2^2^2970701^^
"^DD",757.01,757.01,12,21,1,0)
Number of terms that are considered descendant form the major concept.  Only
"^DD",757.01,757.01,12,21,2,0)
major concepts have descendants.
"^DD",757.01,757.01,12,"DT")
2970701
"^DD",757.01,757.01,13,0)
PARENT^P757.01'^LEX(757.01,^1;9^Q
"^DD",757.01,757.01,13,1,0)
^.1
"^DD",757.01,757.01,13,1,1,0)
757.01^APAR
"^DD",757.01,757.01,13,1,1,1)
S ^LEX(757.01,"APAR",$E(X,1,30),DA)=""
"^DD",757.01,757.01,13,1,1,2)
K ^LEX(757.01,"APAR",$E(X,1,30),DA)
"^DD",757.01,757.01,13,1,1,"%D",0)
^^4^4^2970703^
"^DD",757.01,757.01,13,1,1,"%D",1,0)
^LEX(757.01,"APAR",PAR,IEN) - Where PAR is the internal entry number in the
"^DD",757.01,757.01,13,1,1,"%D",2,0)
Expression file #757.01 where the parent term is located and IEN is the
"^DD",757.01,757.01,13,1,1,"%D",3,0)
internal entry number in the Expression file #757.01 where the child/modifier
"^DD",757.01,757.01,13,1,1,"%D",4,0)
is located.
"^DD",757.01,757.01,13,1,1,"DT")
2970703
"^DD",757.01,757.01,13,3)

"^DD",757.01,757.01,13,21,0)
^^2^2^2970710^^
"^DD",757.01,757.01,13,21,1,0)
This is the internal entry number in the Expression file #757.01 where the
"^DD",757.01,757.01,13,21,2,0)
parent of a descendant term is located.  Only descendant terms have parents.
"^DD",757.01,757.01,13,"DT")
2970710
"^DD",757.01,757.01,14,0)
ORDER^NJ10,0^^1;10^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",757.01,757.01,14,3)
Type a Number between 0 and 9999999999, 0 Decimal Digits
"^DD",757.01,757.01,14,21,0)
^^3^3^2970702^^^
"^DD",757.01,757.01,14,21,1,0)
From time to time it is necessary to provide a specific order (sequence) for
"^DD",757.01,757.01,14,21,2,0)
modifiers and descendant terms (i.e., a list of modifiers/descendants in a 
"^DD",757.01,757.01,14,21,3,0)
GUI list box).  This field is used to provide the list sequence number.
"^DD",757.01,757.01,14,"DT")
2970701
"^DD",757.01,757.01,15,0)
SOURCE CATEGORY^P757.13'^LEX(757.13,^1;11^Q
"^DD",757.01,757.01,15,21,0)
^^3^3^2971010^
"^DD",757.01,757.01,15,21,1,0)
This field indicates the "source" provided category for a term.  It
"^DD",757.01,757.01,15,21,2,0)
can be used to group terms or to locate descendant or ancestral term
"^DD",757.01,757.01,15,21,3,0)
within the source vocabulary.
"^DD",757.01,757.01,15,"DT")
2971010
"^DD",757.01,757.01,16,0)
SOURCE^P757.14'^LEX(757.14,^1;12^Q
"^DD",757.01,757.01,16,21,0)
^^3^3^2971010^^
"^DD",757.01,757.01,16,21,1,0)
This indicates the source volcabulary (and source file) for the volcabulary.
"^DD",757.01,757.01,16,21,2,0)
This field is used primarily in filtering (screen) the search and for
"^DD",757.01,757.01,16,21,3,0)
Lexicon Maintenance.
"^DD",757.01,757.01,16,"DT")
2971010
"^DD",757.01,757.01,18,0)
DESIGNATION CODE^757.118^^7;0
"^DD",757.01,757.01,18,21,0)
^.001^6^6^3120306^^^^
"^DD",757.01,757.01,18,21,1,0)
The purpose of this multiple is to store designation IDs in the Lexicon. 
"^DD",757.01,757.01,18,21,2,0)
Designation is a word that terminologists use to encompass concept name, 
"^DD",757.01,757.01,18,21,3,0)
preferred term, expression, code text, synonyms, etc. In some systems 
"^DD",757.01,757.01,18,21,4,0)
such as SNOMED CT as well as the concept having a code (the SNOMED CT 
"^DD",757.01,757.01,18,21,5,0)
code), the individual designations (terms) belong to the concept each 
"^DD",757.01,757.01,18,21,6,0)
have their own codes (designation identifiers).
"^DD",757.01,757.016,0)
DEFINITION SUB-FIELD^^.01^1
"^DD",757.01,757.016,0,"DT")
2930324
"^DD",757.01,757.016,0,"NM","DEFINITION")

"^DD",757.01,757.016,0,"UP")
757.01
"^DD",757.01,757.016,.01,0)
DEFINITION^W^^0;1^Q
"^DD",757.01,757.016,.01,"DT")
2930324
"^DD",757.01,757.118,0)
DESIGNATION CODE SUB-FIELD^^1^2
"^DD",757.01,757.118,0,"DT")
3070531
"^DD",757.01,757.118,0,"IX","B",757.118,.01)

"^DD",757.01,757.118,0,"NM","DESIGNATION CODE")

"^DD",757.01,757.118,0,"UP")
757.01
"^DD",757.01,757.118,.01,0)
DESIGNATION CODE^F^^0;1^K:$L(X)>30!($L(X)<1) X
"^DD",757.01,757.118,.01,1,0)
^.1
"^DD",757.01,757.118,.01,1,1,0)
757.118^B
"^DD",757.01,757.118,.01,1,1,1)
S ^LEX(757.01,DA(1),7,"B",$E(X,1,30),DA)=""
"^DD",757.01,757.118,.01,1,1,2)
K ^LEX(757.01,DA(1),7,"B",$E(X,1,30),DA)
"^DD",757.01,757.118,.01,3)
Answer must be 1-30 characters in length.
"^DD",757.01,757.118,.01,21,0)
^^6^6^3120306^
"^DD",757.01,757.118,.01,21,1,0)
The purpose of this field is to store a designation ID in the Lexicon. 
"^DD",757.01,757.118,.01,21,2,0)
Designation is a word that terminologists use to encompass concept name, 
"^DD",757.01,757.118,.01,21,3,0)
preferred term, expression, code text, synonyms, etc. In some systems 
"^DD",757.01,757.118,.01,21,4,0)
such as SNOMED CT as well as the concept having a code (the SNOMED CT 
"^DD",757.01,757.118,.01,21,5,0)
code), the individual designations (terms) belong to the concept each 
"^DD",757.01,757.118,.01,21,6,0)
have their own codes (designation identifiers).
"^DD",757.01,757.118,.01,"DT")
3070601
"^DD",757.01,757.118,1,0)
CODING SYSTEM^P757.03'^LEX(757.03,^0;2^Q
"^DD",757.01,757.118,1,1,0)
^.1^^0
"^DD",757.01,757.118,1,3)
Enter the Coding System of the Designation Code.
"^DD",757.01,757.118,1,21,0)
^^2^2^3120306^
"^DD",757.01,757.118,1,21,1,0)
This is the classification system (ICD/CPT/DSM etc) from which the 
"^DD",757.01,757.118,1,21,2,0)
Designation Code (field #.01) is derived.
"^DD",757.01,757.118,1,"DT")
3120306
"^DD",757.01,757.17,0)
NEGATION SUB-FIELD^^.01^1
"^DD",757.01,757.17,0,"DT")
2940328
"^DD",757.01,757.17,0,"IX","B",757.17,.01)

"^DD",757.01,757.17,0,"NM","NEGATION")

"^DD",757.01,757.17,0,"UP")
757.01
"^DD",757.01,757.17,.01,0)
NEGATION^MFI^^0;1^K:$L(X)>63!($L(X)<1) X
"^DD",757.01,757.17,.01,1,0)
^.1
"^DD",757.01,757.17,.01,1,1,0)
757.17^B
"^DD",757.01,757.17,.01,1,1,1)
S ^LEX(757.01,DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",757.01,757.17,.01,1,1,2)
K ^LEX(757.01,DA(1),4,"B",$E(X,1,30),DA)
"^DD",757.01,757.17,.01,1,1,"%D",0)
^^5^5^2940928^^^^
"^DD",757.01,757.17,.01,1,1,"%D",1,0)
^LEX(757.01,EXP,4,"B",NEG,IEN) - where EXP is the Internal Entry Number of the
"^DD",757.01,757.17,.01,1,1,"%D",2,0)
expression in the Expression file #757.01 which contains negated words (words
"^DD",757.01,757.17,.01,1,1,"%D",3,0)
not to use during lookup), NEG is the negated word to exclude from lookup, 
"^DD",757.01,757.17,.01,1,1,"%D",4,0)
and IEN is the Internal Entry Number in the Negation Sub-file #757.17 where 
"^DD",757.01,757.17,.01,1,1,"%D",5,0)
the negated word is located.
"^DD",757.01,757.17,.01,3)
Answer must be 1-63 characters in length.
"^DD",757.01,757.17,.01,21,0)
^^2^2^2940904^
"^DD",757.01,757.17,.01,21,1,0)
This field contains a single word which is negated with in an expression and is
"^DD",757.01,757.17,.01,21,2,0)
excluded from indexing for this expression only.
"^DD",757.01,757.17,.01,"DT")
2940328
"^DD",757.01,757.18,0)
SUPPLEMENTAL SUB-FIELD^^.01^1
"^DD",757.01,757.18,0,"DT")
2940204
"^DD",757.01,757.18,0,"IX","B",757.18,.01)

"^DD",757.01,757.18,0,"NM","SUPPLEMENTAL")

"^DD",757.01,757.18,0,"UP")
757.01
"^DD",757.01,757.18,.01,0)
WORD^MF^^0;1^K:$L(X)>63!($L(X)<1) X
"^DD",757.01,757.18,.01,1,0)
^.1
"^DD",757.01,757.18,.01,1,1,0)
757.18^B
"^DD",757.01,757.18,.01,1,1,1)
S ^LEX(757.01,DA(1),5,"B",$E(X,1,30),DA)=""
"^DD",757.01,757.18,.01,1,1,2)
K ^LEX(757.01,DA(1),5,"B",$E(X,1,30),DA)
"^DD",757.01,757.18,.01,1,1,"%D",0)
^^5^5^2940928^^
"^DD",757.01,757.18,.01,1,1,"%D",1,0)
^LEX(757.01,EXP,5,"B",WORD,IEN) - where EXP is the Internal Entry Number of the
"^DD",757.01,757.18,.01,1,1,"%D",2,0)
expression in the Expression file #757.01 which has supplemental keywords 
"^DD",757.01,757.18,.01,1,1,"%D",3,0)
used to assist in lookups, WORD is the supplemental keyword (not contained in
"^DD",757.01,757.18,.01,1,1,"%D",4,0)
the expression), and IEN is the Internal Entry Number of the Supplemental Word
"^DD",757.01,757.18,.01,1,1,"%D",5,0)
Sub-file #757.18 where the word is located.
"^DD",757.01,757.18,.01,1,2,0)
757.01^AWORD^MUMPS
"^DD",757.01,757.18,.01,1,2,1)
D SSUP^LEXNDX6
"^DD",757.01,757.18,.01,1,2,2)
D KSUP^LEXNDX6
"^DD",757.01,757.18,.01,1,2,"%D",0)
^^5^5^2960402^
"^DD",757.01,757.18,.01,1,2,"%D",1,0)
^LEX(757.01,"AWRD",WORD,MC,EXP,IEN) - where WORD is a Supplemental Keyword used
"^DD",757.01,757.18,.01,1,2,"%D",2,0)
during lookup, MC is the Internal Entry Number in file 757.01 where the Major
"^DD",757.01,757.18,.01,1,2,"%D",3,0)
Concept is located, EXP is the Internal Entry Number in file 757.01 where the
"^DD",757.01,757.18,.01,1,2,"%D",4,0)
Expression is located, and IEN is the Internal Entry Number in the Supplemental
"^DD",757.01,757.18,.01,1,2,"%D",5,0)
Word Sub-file 757.18 where the WORD is located.
"^DD",757.01,757.18,.01,1,2,"DT")
2960402
"^DD",757.01,757.18,.01,3)
Answer must be 1-63 characters in length.
"^DD",757.01,757.18,.01,21,0)
^^2^2^2940904^
"^DD",757.01,757.18,.01,21,1,0)
This field contains a single word not found within an expression which should
"^DD",757.01,757.18,.01,21,2,0)
be indexed for this expression only.
"^DD",757.01,757.18,.01,"DT")
2961205
"^DD",757.32,757.32,0)
FIELD^^5^6
"^DD",757.32,757.32,0,"DDA")
N
"^DD",757.32,757.32,0,"DT")
3080125
"^DD",757.32,757.32,0,"IX","B",757.32,.01)

"^DD",757.32,757.32,0,"NM","MAPPING DEFINITIONS")

"^DD",757.32,757.32,0,"PT",757.33,.02)

"^DD",757.32,757.32,0,"VRPK")
LEX
"^DD",757.32,757.32,0,"VRRV")
57^3080806
"^DD",757.32,757.32,.01,0)
MAPPING MNEMONIC^RF^^0;1^K:$L(X)>30!($L(X)<3) X
"^DD",757.32,757.32,.01,1,0)
^.1
"^DD",757.32,757.32,.01,1,1,0)
757.32^B
"^DD",757.32,757.32,.01,1,1,1)
S ^LEX(757.32,"B",$E(X,1,30),DA)=""
"^DD",757.32,757.32,.01,1,1,2)
K ^LEX(757.32,"B",$E(X,1,30),DA)
"^DD",757.32,757.32,.01,1,1,"%D",0)
^^5^5^3080820^
"^DD",757.32,757.32,.01,1,1,"%D",1,0)
^LEX(757.32,"B",MMN,IEN) - Where MMN is the Mapping
"^DD",757.32,757.32,.01,1,1,"%D",2,0)
Mnemonic representing the Mapping Definition and
"^DD",757.32,757.32,.01,1,1,"%D",3,0)
IEN is the Internal Entry Number in the Mapping
"^DD",757.32,757.32,.01,1,1,"%D",4,0)
Definition file #757.32 where the Mapping Mnemonic
"^DD",757.32,757.32,.01,1,1,"%D",5,0)
is stored.
"^DD",757.32,757.32,.01,3)
Answer must be 3-30 characters in length
"^DD",757.32,757.32,.01,21,0)
^^2^2^3080813^
"^DD",757.32,757.32,.01,21,1,0)
This field identifies a mnemonic by which the mapping may be
"^DD",757.32,757.32,.01,21,2,0)
identified.
"^DD",757.32,757.32,.01,"DT")
3080813
"^DD",757.32,757.32,1,0)
MAPPING NAME^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",757.32,757.32,1,3)
Answer must be 1-40 characters in length
"^DD",757.32,757.32,1,21,0)
^^1^1^3080813^
"^DD",757.32,757.32,1,21,1,0)
Descriptive name of the Mapping Definition.
"^DD",757.32,757.32,1,"DT")
3080813
"^DD",757.32,757.32,2,0)
MAPPING PURPOSE^757.322^^1;0
"^DD",757.32,757.32,2,21,0)
^^2^2^3091102^
"^DD",757.32,757.32,2,21,1,0)
This field describes the purpose of the mapping. Mappings that look
"^DD",757.32,757.32,2,21,2,0)
the same might have very different purposes.
"^DD",757.32,757.32,3,0)
SOURCE CODING SYSTEM^P757.03'^LEX(757.03,^2;1^Q
"^DD",757.32,757.32,3,3)
Select a Coding System (from file 757.03) to map from
"^DD",757.32,757.32,3,21,0)
^^1^1^3080813^
"^DD",757.32,757.32,3,21,1,0)
This is the coding system containing a code to be mapped from.
"^DD",757.32,757.32,3,"DT")
3080813
"^DD",757.32,757.32,4,0)
TARGET CODING SYSTEM^P757.03'^LEX(757.03,^2;2^Q
"^DD",757.32,757.32,4,3)
Select a Coding System (from file 757.03) to map to
"^DD",757.32,757.32,4,21,0)
^^1^1^3080813^
"^DD",757.32,757.32,4,21,1,0)
This is the coding system containing a code to be mapped to.
"^DD",757.32,757.32,4,"DT")
3080813
"^DD",757.32,757.32,5,0)
MAPPING VUID^NJ14,0^^2;3^K:+X'=X!(X>99999999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",757.32,757.32,5,3)
Type a number between 1 and 99999999999999, 0 Decimal Digits
"^DD",757.32,757.32,5,21,0)
^^5^5^3080125^
"^DD",757.32,757.32,5,21,1,0)
This field stores the VUID for a specific mapping. The VUID for a given
"^DD",757.32,757.32,5,21,2,0)
mapping will be assigned by terminologists using the Standards & 
"^DD",757.32,757.32,5,21,3,0)
Terminology Services team's technologies. One use for this field will be 
"^DD",757.32,757.32,5,21,4,0)
to identify which mapping is being deployed by the terminology server's
"^DD",757.32,757.32,5,21,5,0)
deployment processes.
"^DD",757.32,757.32,5,"DT")
3080125
"^DD",757.32,757.322,0)
MAPPING PURPOSE SUB-FIELD^^^1
"^DD",757.32,757.322,0,"DT")
3080813
"^DD",757.32,757.322,0,"NM","MAPPING PURPOSE")

"^DD",757.32,757.322,0,"UP")
757.32
"^DD",757.32,757.322,.01,0)
DEFINITION^W^^0;1^Q
"^DD",757.32,757.322,.01,3)
Enter the purpose of the Mapping Definition
"^DD",757.32,757.322,.01,21,0)
^^3^3^3091102^
"^DD",757.32,757.322,.01,21,1,0)
This is a brief description of the purpose of the mapping.
"^DD",757.32,757.322,.01,21,2,0)
Mapping that may look similar may have very different
"^DD",757.32,757.322,.01,21,3,0)
purposes.
"^DD",757.32,757.322,.01,"DT")
3091102
"^DD",757.33,757.33,0)
FIELD^^5^7
"^DD",757.33,757.33,0,"DDA")
N
"^DD",757.33,757.33,0,"DT")
3110809
"^DD",757.33,757.33,0,"IX","AMAPDEF",757.33,.02)

"^DD",757.33,757.33,0,"IX","B",757.33,.01)

"^DD",757.33,757.33,0,"NM","MAPPINGS")

"^DD",757.33,757.33,0,"VRPK")
LEX
"^DD",757.33,757.33,0,"VRRV")
78^3111001
"^DD",757.33,757.33,.01,0)
MAPPING ID^RNJ12,0^^0;1^K:+X'=X!(X>999999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",757.33,757.33,.01,1,0)
^.1
"^DD",757.33,757.33,.01,1,1,0)
757.33^B
"^DD",757.33,757.33,.01,1,1,1)
S ^LEX(757.33,"B",$E(X,1,30),DA)=""
"^DD",757.33,757.33,.01,1,1,2)
K ^LEX(757.33,"B",$E(X,1,30),DA)
"^DD",757.33,757.33,.01,1,1,"%D",0)
^^5^5^3080814^
"^DD",757.33,757.33,.01,1,1,"%D",1,0)
^LEX(757.33,"B",MID,IEN) - Where MID is the Mapping
"^DD",757.33,757.33,.01,1,1,"%D",2,0)
Identifier unique within a Mapping Definition and
"^DD",757.33,757.33,.01,1,1,"%D",3,0)
IEN is the Internal Entry Number in the Mappings
"^DD",757.33,757.33,.01,1,1,"%D",4,0)
file #757.33 where the Mapping Identifier is
"^DD",757.33,757.33,.01,1,1,"%D",5,0)
located. 
"^DD",757.33,757.33,.01,3)
Type a number between 1 and 999999999999, 0 decimal digits.
"^DD",757.33,757.33,.01,21,0)
^^4^4^3110809^^^
"^DD",757.33,757.33,.01,21,1,0)
The purpose of this field is to hold the mapping ID. The mapping ID 
"^DD",757.33,757.33,.01,21,2,0)
may be a VUID or a Lexicon ID. If it is a VUID it is assigned for each 
"^DD",757.33,757.33,.01,21,3,0)
individual map by the VETS system. Each mapping ID must indentify 
"^DD",757.33,757.33,.01,21,4,0)
uniquely the mapping of one source code to one, and only one, target code.
"^DD",757.33,757.33,.01,"DT")
3110809
"^DD",757.33,757.33,.02,0)
MAPPING DEFINITION^P757.32'^LEX(757.32,^0;4^Q
"^DD",757.33,757.33,.02,1,0)
^.1
"^DD",757.33,757.33,.02,1,1,0)
757.33^AMAPDEF
"^DD",757.33,757.33,.02,1,1,1)
S ^LEX(757.33,"AMAPDEF",$E(X,1,30),DA)=""
"^DD",757.33,757.33,.02,1,1,2)
K ^LEX(757.33,"AMAPDEF",$E(X,1,30),DA)
"^DD",757.33,757.33,.02,1,1,"DT")
3081110
"^DD",757.33,757.33,.02,3)
Select a Mapping Definition (from file 757.32)
"^DD",757.33,757.33,.02,21,0)
^^4^4^3080813^
"^DD",757.33,757.33,.02,21,1,0)
This is the Mapping Definition for a specific mapping record
"^DD",757.33,757.33,.02,21,2,0)
which defines source coding system is being mapped to which 
"^DD",757.33,757.33,.02,21,3,0)
target coding system.  This Mapping Definition is stored in
"^DD",757.33,757.33,.02,21,4,0)
the Mapping Definition file #757.32.
"^DD",757.33,757.33,.02,"DT")
3080820
"^DD",757.33,757.33,1,0)
SOURCE CODE^F^^0;2^K:$L(X)>15!($L(X)<2) X
"^DD",757.33,757.33,1,3)
Answer must be 2-15 characters in length
"^DD",757.33,757.33,1,21,0)
^^4^4^3080813^
"^DD",757.33,757.33,1,21,1,0)
This is a code from the Source Coding System of the Mapping
"^DD",757.33,757.33,1,21,2,0)
Definition (file 757.32).  It is the basis of the mapping 
"^DD",757.33,757.33,1,21,3,0)
(source) and will be mapped to a code from another coding 
"^DD",757.33,757.33,1,21,4,0)
system.
"^DD",757.33,757.33,1,"DT")
3080820
"^DD",757.33,757.33,2,0)
TARGET CODE^F^^0;3^K:$L(X)>10!($L(X)<2) X
"^DD",757.33,757.33,2,3)
Answer must be 2-10 characters in length
"^DD",757.33,757.33,2,21,0)
^^4^4^3080813^
"^DD",757.33,757.33,2,21,1,0)
This is a code from the Target Coding System of the Mapping
"^DD",757.33,757.33,2,21,2,0)
Definition (file 757.32).  It is the result of the mapping 
"^DD",757.33,757.33,2,21,3,0)
(target) based on the source code from another coding
"^DD",757.33,757.33,2,21,4,0)
system.
"^DD",757.33,757.33,2,"DT")
3080820
"^DD",757.33,757.33,3,0)
STATUS HISTORY^757.333D^^2;0
"^DD",757.33,757.33,3,21,0)
^^2^2^3080813^
"^DD",757.33,757.33,3,21,1,0)
This multiple field contains a series of records indicating
"^DD",757.33,757.33,3,21,2,0)
the mapping status (active or inactive) over time.
"^DD",757.33,757.33,4,0)
MAPPING ORDER^RNJ5,0^^3;1^K:+X'=X!(X>30000)!(X<1)!(X?.E1"."1.N) X
"^DD",757.33,757.33,4,3)
Type a number between 1 and 30000, 0 Decimal Digits
"^DD",757.33,757.33,4,21,0)
^^5^5^3080814^
"^DD",757.33,757.33,4,21,1,0)
This field contains an integer that determines the order of preference
"^DD",757.33,757.33,4,21,2,0)
for when a single source code maps to multiple target codes. The order
"^DD",757.33,757.33,4,21,3,0)
will be determined by domain stewards responsible for the maintenance
"^DD",757.33,757.33,4,21,4,0)
of the mapping in question. If there is only one target for the source
"^DD",757.33,757.33,4,21,5,0)
code the value of this field will default to 1.
"^DD",757.33,757.33,4,"DT")
3080820
"^DD",757.33,757.33,5,0)
MATCH^S^1:FULL;0:PARTIAL;^0;5^Q
"^DD",757.33,757.33,5,1,0)
^.1^^0
"^DD",757.33,757.33,5,3)
1 = Fully Matched Mapping 0 = Partially Matched Mapping
"^DD",757.33,757.33,5,21,0)
^^6^6^3080814^
"^DD",757.33,757.33,5,21,1,0)
If the target code is a true match for the source code
"^DD",757.33,757.33,5,21,2,0)
then the value will be set to 1 indicating a fully 
"^DD",757.33,757.33,5,21,3,0)
compatible match.  If the target code is a partial match
"^DD",757.33,757.33,5,21,4,0)
for the source code then the value will be set to 0 
"^DD",757.33,757.33,5,21,5,0)
indicating a partial match and that human review is 
"^DD",757.33,757.33,5,21,6,0)
necessary to evaluate the mapping.
"^DD",757.33,757.33,5,"DT")
3080814
"^DD",757.33,757.333,0)
STATUS HISTORY SUB-FIELD^^2^3
"^DD",757.33,757.333,0,"DT")
3080813
"^DD",757.33,757.333,0,"IX","B",757.333,.01)

"^DD",757.33,757.333,0,"NM","STATUS HISTORY")

"^DD",757.33,757.333,0,"UP")
757.33
"^DD",757.33,757.333,.01,0)
EFFECTIVE DATE^D^^0;1^S %DT="E" D ^%DT S X=Y K:X<1 X
"^DD",757.33,757.333,.01,1,0)
^.1^^-1
"^DD",757.33,757.333,.01,1,1,0)
757.333^B
"^DD",757.33,757.333,.01,1,1,1)
S ^LEX(757.33,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",757.33,757.333,.01,1,1,2)
K ^LEX(757.33,DA(1),2,"B",$E(X,1,30),DA)
"^DD",757.33,757.333,.01,1,1,"%D",0)
^^5^5^3080820^
"^DD",757.33,757.333,.01,1,1,"%D",1,0)
^LEX(757.33,IEN,2,"B",EFF,HIS) - Where IEN is the
"^DD",757.33,757.333,.01,1,1,"%D",2,0)
Internal Entry Number for the Mapping, EFF is the
"^DD",757.33,757.333,.01,1,1,"%D",3,0)
Effective Date of the Mapping and HIS is the 
"^DD",757.33,757.333,.01,1,1,"%D",4,0)
Internal Entry Number where the Effective Date is
"^DD",757.33,757.333,.01,1,1,"%D",5,0)
stored in the Status Histroy sub-file 757.333.
"^DD",757.33,757.333,.01,3)
(No range limit on date)
"^DD",757.33,757.333,.01,21,0)
^^1^1^3080813^
"^DD",757.33,757.333,.01,21,1,0)
This is the date that the status was effective.
"^DD",757.33,757.333,.01,"DT")
3120726
"^DD",757.33,757.333,1,0)
STATUS^S^0:INACTIVE;1:ACTIVE;^0;2^Q
"^DD",757.33,757.333,1,1,0)
^.1^^-1
"^DD",757.33,757.333,1,1,2,0)
^^TRIGGER^757.333^2
"^DD",757.33,757.333,1,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^LEX(757.33,D0,2,D1,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC S X=% X ^DD(757.333,1,1,2,1.4)
"^DD",757.33,757.333,1,1,2,1.4)
S DIH=$G(^LEX(757.33,DIV(0),2,DIV(1),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=757.333,DIG=2 D ^DICR
"^DD",757.33,757.333,1,1,2,2)
Q
"^DD",757.33,757.333,1,1,2,"%D",0)
^^3^3^3080430^
"^DD",757.33,757.333,1,1,2,"%D",1,0)
The CHANGE DATE filed will be triggered whenever the STATUS field
"^DD",757.33,757.333,1,1,2,"%D",2,0)
is entered or updated. The triggered value will be NOW.
"^DD",757.33,757.333,1,1,2,"%D",3,0)
This field cannot be edited.
"^DD",757.33,757.333,1,1,2,"CREATE VALUE")
NOW
"^DD",757.33,757.333,1,1,2,"DELETE VALUE")
NO EFFECT
"^DD",757.33,757.333,1,1,2,"DT")
3080430
"^DD",757.33,757.333,1,1,2,"FIELD")
CHANGE DATE
"^DD",757.33,757.333,1,3)
Select Status (Active or Inactive)
"^DD",757.33,757.333,1,21,0)
^^1^1^3080814^
"^DD",757.33,757.333,1,21,1,0)
This is the status (active or inactive) of the mapping. 
"^DD",757.33,757.333,1,"DT")
3120726
"^DD",757.33,757.333,2,0)
CHANGE DATE^D^^0;3^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",757.33,757.333,2,3)
(No range limit on date)
"^DD",757.33,757.333,2,5,1,0)
757.333^1^2
"^DD",757.33,757.333,2,9)
^
"^DD",757.33,757.333,2,21,0)
^^4^4^3080818^
"^DD",757.33,757.333,2,21,1,0)
This field contains the timestamp for when the status 
"^DD",757.33,757.333,2,21,2,0)
is changed.  It is populated by the ACHGD Cross-Reference
"^DD",757.33,757.333,2,21,3,0)
(Action) of the STATUS field #1 of the STATUS HISTORY 
"^DD",757.33,757.333,2,21,4,0)
sub-file 757.333.
"^DD",757.33,757.333,2,"DT")
3080818
"^DIC",757.01,757.01,0)
EXPRESSIONS^757.01
"^DIC",757.01,757.01,0,"GL")
^LEX(757.01,
"^DIC",757.01,757.01,"%D",0)
^^6^6^2970704^^^^
"^DIC",757.01,757.01,"%D",1,0)
This file contains all text pertaining to the Major Concepts, Concept
"^DIC",757.01,757.01,"%D",2,0)
Synonyms,  Concept Lexical Variants, Synonymous Lexical Variants, and
"^DIC",757.01,757.01,"%D",3,0)
Modified Concepts.  It includes displayable text, distinguishing text (that
"^DIC",757.01,757.01,"%D",4,0)
portion of text that makes a modified concept different from the parent
"^DIC",757.01,757.01,"%D",5,0)
concept) and the term definitions (when available).  Searches are
"^DIC",757.01,757.01,"%D",6,0)
conducted using the special look-up routine LEXA1.
"^DIC",757.01,"B","EXPRESSIONS",757.01)

"^DIC",757.32,757.32,0)
MAPPING DEFINITIONS^757.32I
"^DIC",757.32,757.32,0,"GL")
^LEX(757.32,
"^DIC",757.32,757.32,"%",0)
^1.005^^0
"^DIC",757.32,757.32,"%D",0)
^^3^3^3080813^
"^DIC",757.32,757.32,"%D",1,0)
This file is used to define a mapping between one coding system (source
"^DIC",757.32,757.32,"%D",2,0)
code) to another coding system (target code).  The coding systems are 
"^DIC",757.32,757.32,"%D",3,0)
listed in the Coding Systems file 757.03.
"^DIC",757.32,"B","MAPPING DEFINITIONS",757.32)

"^DIC",757.33,757.33,0)
MAPPINGS^757.33I
"^DIC",757.33,757.33,0,"GL")
^LEX(757.33,
"^DIC",757.33,757.33,"%",0)
^1.005^^0
"^DIC",757.33,757.33,"%D",0)
^^3^3^3080813^
"^DIC",757.33,757.33,"%D",1,0)
This file contains the mappings from one coding system to 
"^DIC",757.33,757.33,"%D",2,0)
another coding system.  Selection of a term or a code  from
"^DIC",757.33,757.33,"%D",3,0)
one coding system can be translated to another coding system.
"^DIC",757.33,"B","MAPPINGS",757.33)

"BLD",8458,6)
^77
**END**
**END**
