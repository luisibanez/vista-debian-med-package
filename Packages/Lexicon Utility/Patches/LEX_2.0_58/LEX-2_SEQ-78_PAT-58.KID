Released LEX*2*58 SEQ #78
Extracted from mail message
**KIDS**:LEX*2.0*58^

**INSTALL NAME**
LEX*2.0*58
"BLD",8459,0)
LEX*2.0*58^LEXICON UTILITY^0^3120726^y
"BLD",8459,4,0)
^9.64PA^757.33^1
"BLD",8459,4,757.33,0)
757.33
"BLD",8459,4,757.33,222)
y^y^f^^^^n
"BLD",8459,4,"B",757.33,757.33)

"BLD",8459,6)
7^
"BLD",8459,6.3)
53
"BLD",8459,"ABNS",0)
^9.66A^^
"BLD",8459,"ABPKG")
n^n
"BLD",8459,"INIT")
POST^LEX2058P
"BLD",8459,"KRN",0)
^9.67PA^8989.52^19
"BLD",8459,"KRN",.4,0)
.4
"BLD",8459,"KRN",.401,0)
.401
"BLD",8459,"KRN",.402,0)
.402
"BLD",8459,"KRN",.403,0)
.403
"BLD",8459,"KRN",.5,0)
.5
"BLD",8459,"KRN",.84,0)
.84
"BLD",8459,"KRN",3.6,0)
3.6
"BLD",8459,"KRN",3.8,0)
3.8
"BLD",8459,"KRN",9.2,0)
9.2
"BLD",8459,"KRN",9.8,0)
9.8
"BLD",8459,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",8459,"KRN",9.8,"NM",1,0)
LEXTRAN3^^0^B14502365
"BLD",8459,"KRN",9.8,"NM","B","LEXTRAN3",1)

"BLD",8459,"KRN",19,0)
19
"BLD",8459,"KRN",19,"NM",0)
^9.68A^^
"BLD",8459,"KRN",19.1,0)
19.1
"BLD",8459,"KRN",101,0)
101
"BLD",8459,"KRN",101,"NM",0)
^9.68A^1^1
"BLD",8459,"KRN",101,"NM",1,0)
LEX MAPPING CHANGE EVENT^^0
"BLD",8459,"KRN",101,"NM","B","LEX MAPPING CHANGE EVENT",1)

"BLD",8459,"KRN",409.61,0)
409.61
"BLD",8459,"KRN",771,0)
771
"BLD",8459,"KRN",870,0)
870
"BLD",8459,"KRN",8989.51,0)
8989.51
"BLD",8459,"KRN",8989.52,0)
8989.52
"BLD",8459,"KRN",8994,0)
8994
"BLD",8459,"KRN","B",.4,.4)

"BLD",8459,"KRN","B",.401,.401)

"BLD",8459,"KRN","B",.402,.402)

"BLD",8459,"KRN","B",.403,.403)

"BLD",8459,"KRN","B",.5,.5)

"BLD",8459,"KRN","B",.84,.84)

"BLD",8459,"KRN","B",3.6,3.6)

"BLD",8459,"KRN","B",3.8,3.8)

"BLD",8459,"KRN","B",9.2,9.2)

"BLD",8459,"KRN","B",9.8,9.8)

"BLD",8459,"KRN","B",19,19)

"BLD",8459,"KRN","B",19.1,19.1)

"BLD",8459,"KRN","B",101,101)

"BLD",8459,"KRN","B",409.61,409.61)

"BLD",8459,"KRN","B",771,771)

"BLD",8459,"KRN","B",870,870)

"BLD",8459,"KRN","B",8989.51,8989.51)

"BLD",8459,"KRN","B",8989.52,8989.52)

"BLD",8459,"KRN","B",8994,8994)

"BLD",8459,"PRE")
LEX2058
"BLD",8459,"QUES",0)
^9.62^^
"BLD",8459,"REQB",0)
^9.611^1^1
"BLD",8459,"REQB",1,0)
LEX*2.0*51^1
"BLD",8459,"REQB","B","LEX*2.0*51",1)

"FIA",757.33)
MAPPINGS
"FIA",757.33,0)
^LEX(757.33,
"FIA",757.33,0,0)
757.33
"FIA",757.33,0,1)
y^y^f^^^^n
"FIA",757.33,0,10)

"FIA",757.33,0,11)

"FIA",757.33,0,"RLRO")

"FIA",757.33,0,"VR")
2.0^LEX
"FIA",757.33,757.33)
0
"FIA",757.33,757.333)
0
"INIT")
POST^LEX2058P
"IX",757.33,757.33,"ACT",0)
757.33^ACT^Activation History^R^^R^IR^W^757.333^^^^^S
"IX",757.33,757.33,"ACT",.1,0)
^^10^10^3080814^
"IX",757.33,757.33,"ACT",.1,1,0)
^LEX(757.33,"ACT",SRC,TGT,EFF,STA,IEN,HIS) - Where SRC is the 
"IX",757.33,757.33,"ACT",.1,2,0)
Source Code appended with a trailing space character, TGT is
"IX",757.33,757.33,"ACT",.1,3,0)
the Target Code appended with a trailing space character, EFF
"IX",757.33,757.33,"ACT",.1,4,0)
is the effective date of the mapping status, STA is the status 
"IX",757.33,757.33,"ACT",.1,5,0)
of the mapping (1=Active 0=Inactive), IEN is the Internal Entry
"IX",757.33,757.33,"ACT",.1,6,0)
Number in the MAPPINGS file where this mapping Status History 
"IX",757.33,757.33,"ACT",.1,7,0)
is stored, and HIS is the Internal Entry Number of the Status 
"IX",757.33,757.33,"ACT",.1,8,0)
History multiple where this effective date is stored.  This 
"IX",757.33,757.33,"ACT",.1,9,0)
cross-reference is used to determine if a mapping is active 
"IX",757.33,757.33,"ACT",.1,10,0)
on the date of service.
"IX",757.33,757.33,"ACT",1)
S ^LEX(757.33,"ACT",$E(X(1),1,15),$E(X(2),1,10),$E(X(3),1,7),$E(X(4),1,10),DA(1),DA)=""
"IX",757.33,757.33,"ACT",2)
K ^LEX(757.33,"ACT",$E(X(1),1,15),$E(X(2),1,10),$E(X(3),1,7),$E(X(4),1,10),DA(1),DA)
"IX",757.33,757.33,"ACT",2.5)
K ^LEX(757.33,"ACT")
"IX",757.33,757.33,"ACT",11.1,0)
^.114IA^4^4
"IX",757.33,757.33,"ACT",11.1,1,0)
1^C^^^15^1^F^Source
"IX",757.33,757.33,"ACT",11.1,1,1.5)
S X=$P($G(^LEX(757.33,DA(1),0)),U,2)_" "
"IX",757.33,757.33,"ACT",11.1,2,0)
2^C^^^10^2^^Target
"IX",757.33,757.33,"ACT",11.1,2,1.5)
S X=$P($G(^LEX(757.33,DA(1),0)),U,3)_" "
"IX",757.33,757.33,"ACT",11.1,3,0)
3^F^757.333^.01^7^3^F^Effective Date:  
"IX",757.33,757.33,"ACT",11.1,4,0)
4^F^757.333^1^10^4^F^Status:  
"IX",757.33,757.33,"AMAP",0)
757.33^AMAP^Source to Target^R^^R^IR^I^757.33^^^^^S
"IX",757.33,757.33,"AMAP",1)
S ^LEX(757.33,"AMAP",$E(X(1),1,30),$E(X(2),1,15),$E(X(3),1,10),DA)=""
"IX",757.33,757.33,"AMAP",2)
K ^LEX(757.33,"AMAP",$E(X(1),1,30),$E(X(2),1,15),$E(X(3),1,10),DA)
"IX",757.33,757.33,"AMAP",2.5)
K ^LEX(757.33,"AMAP")
"IX",757.33,757.33,"AMAP",11.1,0)
^.114IA^3^3
"IX",757.33,757.33,"AMAP",11.1,1,0)
1^F^757.33^.02^30^1^F^Mapping Definition:  
"IX",757.33,757.33,"AMAP",11.1,1,2)
S X=$S($L($P($G(^LEX(757.32,+($G(X)),0)),U,1)):$P($G(^LEX(757.32,+($G(X)),0)),U,1),1:+($G(X)))
"IX",757.33,757.33,"AMAP",11.1,2,0)
2^F^757.33^1^15^2^F^Source Code:  
"IX",757.33,757.33,"AMAP",11.1,2,2)
S X=$G(X)_" "
"IX",757.33,757.33,"AMAP",11.1,3,0)
3^F^757.33^2^10^3^F^Target Code:  
"IX",757.33,757.33,"AMAP",11.1,3,2)
S X=$G(X)_" "
"IX",757.33,757.33,"AMAPS",0)
757.33^AMAPS^status and date fields^MU^^R^I^W^757.333^^^^^A
"IX",757.33,757.33,"AMAPS",1)
D OPKG^XUHUI("","LEX MAPPING CHANGE EVENT","","AMAPS") Q
"IX",757.33,757.33,"AMAPS",1.4)

"IX",757.33,757.33,"AMAPS",2)
Q
"IX",757.33,757.33,"AMAPS",2.5)
Q
"IX",757.33,757.33,"AMAPS",11.1,0)
^.114IA^2^2
"IX",757.33,757.33,"AMAPS",11.1,1,0)
1^F^757.333^.01^^1^F
"IX",757.33,757.33,"AMAPS",11.1,2,0)
2^F^757.333^1^^2^F
"IX",757.33,757.33,"AREV",0)
757.33^AREV^Target to Source (Reverse)^R^^R^IR^I^757.33^^^^^S
"IX",757.33,757.33,"AREV",1)
S ^LEX(757.33,"AREV",$E(X(1),1,30),$E(X(2),1,30),$E(X(3),1,30),DA)=""
"IX",757.33,757.33,"AREV",2)
K ^LEX(757.33,"AREV",$E(X(1),1,30),$E(X(2),1,30),$E(X(3),1,30),DA)
"IX",757.33,757.33,"AREV",2.5)
K ^LEX(757.33,"AREV")
"IX",757.33,757.33,"AREV",11.1,0)
^.114IA^3^3
"IX",757.33,757.33,"AREV",11.1,1,0)
1^F^757.33^.02^30^1^F
"IX",757.33,757.33,"AREV",11.1,1,2)
S X=$S($L($P($G(^LEX(757.32,+($G(X)),0)),U,1)):$P($G(^LEX(757.32,+($G(X)),0)),U,1),1:+($G(X)))
"IX",757.33,757.33,"AREV",11.1,1,3)

"IX",757.33,757.33,"AREV",11.1,2,0)
2^F^757.33^2^30^2^F
"IX",757.33,757.33,"AREV",11.1,2,2)
S X=(X_" ")
"IX",757.33,757.33,"AREV",11.1,2,3)

"IX",757.33,757.33,"AREV",11.1,3,0)
3^F^757.33^1^30^3^F
"IX",757.33,757.33,"AREV",11.1,3,2)
S X=(X_" ")
"IX",757.33,757.33,"AREV",11.1,3,3)

"IX",757.33,757.33,"ASRC",0)
757.33^ASRC^Source to Target^R^^R^IR^I^757.33^^^^^S
"IX",757.33,757.33,"ASRC",.1,0)
^^7^7^3080820^
"IX",757.33,757.33,"ASRC",.1,1,0)
^LEX(757.33,"ASRC",DEF,SRC,TAR,IEN) - Where DEF is the Mapping
"IX",757.33,757.33,"ASRC",.1,2,0)
Definition from file 757.32, SRC is the Source Code appended 
"IX",757.33,757.33,"ASRC",.1,3,0)
with a trailing space character, TAR is the Target Code appended
"IX",757.33,757.33,"ASRC",.1,4,0)
with a trailing space character, IEN is the Internal Entry
"IX",757.33,757.33,"ASRC",.1,5,0)
Number in the MAPPINGS file where this Source to Target mapping
"IX",757.33,757.33,"ASRC",.1,6,0)
is stored.  This is used to find all the mapped target codes 
"IX",757.33,757.33,"ASRC",.1,7,0)
for a given source code in a specified definition.
"IX",757.33,757.33,"ASRC",1)
S ^LEX(757.33,"ASRC",$E(X(1),1,30),$E(X(2),1,15),$E(X(3),1,10),DA)=""
"IX",757.33,757.33,"ASRC",2)
K ^LEX(757.33,"ASRC",$E(X(1),1,30),$E(X(2),1,15),$E(X(3),1,10),DA)
"IX",757.33,757.33,"ASRC",2.5)
K ^LEX(757.33,"ASRC")
"IX",757.33,757.33,"ASRC",11.1,0)
^.114IA^3^3
"IX",757.33,757.33,"ASRC",11.1,1,0)
1^F^757.33^.02^30^1^F^Mapping Definition:  
"IX",757.33,757.33,"ASRC",11.1,1,2)
S X=$S($L($P($G(^LEX(757.32,+($G(X)),0)),U,1)):$P($G(^LEX(757.32,+($G(X)),0)),U,1),1:+($G(X)))
"IX",757.33,757.33,"ASRC",11.1,2,0)
2^F^757.33^1^15^2^F^Source Code:  
"IX",757.33,757.33,"ASRC",11.1,2,2)
S X=$G(X)_" "
"IX",757.33,757.33,"ASRC",11.1,3,0)
3^F^757.33^2^10^3^F^Target Code:  
"IX",757.33,757.33,"ASRC",11.1,3,2)
S X=$G(X)_" "
"IX",757.33,757.33,"ATAR",0)
757.33^ATAR^Target to Source^R^^R^IR^I^757.33^^^^^S
"IX",757.33,757.33,"ATAR",.1,0)
^^8^8^3080821^
"IX",757.33,757.33,"ATAR",.1,1,0)
^LEX(757.33,"ATAR",DEF,TAR,SRC,IEN) - Where DEF is the Mapping
"IX",757.33,757.33,"ATAR",.1,2,0)
Definition from file 757.32, TAR is the Target Code appended 
"IX",757.33,757.33,"ATAR",.1,3,0)
with a trailing space character, SRC is the Source Code appended
"IX",757.33,757.33,"ATAR",.1,4,0)
with a trailing space character, IEN is the Internal Entry
"IX",757.33,757.33,"ATAR",.1,5,0)
Number in the MAPPINGS file where this Target to Source mapping
"IX",757.33,757.33,"ATAR",.1,6,0)
is stored.  This is the opposite of the ASRC index and used to
"IX",757.33,757.33,"ATAR",.1,7,0)
find all the mapped source codes for a given target code in a
"IX",757.33,757.33,"ATAR",.1,8,0)
specified definition.
"IX",757.33,757.33,"ATAR",1)
S ^LEX(757.33,"ATAR",$E(X(1),1,30),$E(X(2),1,30),$E(X(3),1,30),DA)=""
"IX",757.33,757.33,"ATAR",2)
K ^LEX(757.33,"ATAR",$E(X(1),1,30),$E(X(2),1,30),$E(X(3),1,30),DA)
"IX",757.33,757.33,"ATAR",2.5)
K ^LEX(757.33,"ATAR")
"IX",757.33,757.33,"ATAR",11.1,0)
^.114IA^3^3
"IX",757.33,757.33,"ATAR",11.1,1,0)
1^F^757.33^.02^30^1^F
"IX",757.33,757.33,"ATAR",11.1,1,2)
S X=$S($L($P($G(^LEX(757.32,+($G(X)),0)),U,1)):$P($G(^LEX(757.32,+($G(X)),0)),U,1),1:+($G(X)))
"IX",757.33,757.33,"ATAR",11.1,2,0)
2^F^757.33^2^30^2^F
"IX",757.33,757.33,"ATAR",11.1,2,2)
S X=(X_" ")
"IX",757.33,757.33,"ATAR",11.1,3,0)
3^F^757.33^1^30^3^F
"IX",757.33,757.33,"ATAR",11.1,3,2)
S X=(X_" ")
"IX",757.33,757.33,"C",0)
757.33^C^Source Code to Target Code^R^^R^IR^I^757.33^^^^^LS
"IX",757.33,757.33,"C",.1,0)
^^5^5^3080820^
"IX",757.33,757.33,"C",.1,1,0)
^LEX(757.33,"C",DEF,SRC,ORD,TAR,IEN) - Where DEF is a pointer to
"IX",757.33,757.33,"C",.1,2,0)
the Mapping Definition file 757.32, SRC is the Source Code, ORD
"IX",757.33,757.33,"C",.1,3,0)
is the Mapping Order of the Target Code, TAR is the Target code 
"IX",757.33,757.33,"C",.1,4,0)
and IEN is the location in file 757.33 where this source to 
"IX",757.33,757.33,"C",.1,5,0)
target mapping is stored.
"IX",757.33,757.33,"C",1)
S ^LEX(757.33,"C",$E(X(1),1,10),$E(X(2),1,30),$E(X(3),1,15),$E(X(4),1,30),DA)=""
"IX",757.33,757.33,"C",2)
K ^LEX(757.33,"C",$E(X(1),1,10),$E(X(2),1,30),$E(X(3),1,15),$E(X(4),1,30),DA)
"IX",757.33,757.33,"C",2.5)
K ^LEX(757.33,"C")
"IX",757.33,757.33,"C",11.1,0)
^.114IA^4^4
"IX",757.33,757.33,"C",11.1,1,0)
1^F^757.33^.02^10^1^F^Select Mapping Definition
"IX",757.33,757.33,"C",11.1,2,0)
2^F^757.33^1^30^2^F^Enter Source Code
"IX",757.33,757.33,"C",11.1,3,0)
3^F^757.33^4^15^3^F^Enter Mapping Order
"IX",757.33,757.33,"C",11.1,4,0)
4^F^757.33^2^30^4^F^Enter Target Code
"IX",757.33,757.33,"G",0)
757.33^G^Mapping Status^R^^R^IR^W^757.333^^^^^LS
"IX",757.33,757.33,"G",.1,0)
^^4^4^3080820^
"IX",757.33,757.33,"G",.1,1,0)
^LEX(757.33,"G",MAP,EFF,STA,IEN) - Where MAP is the Mapping ID,
"IX",757.33,757.33,"G",.1,2,0)
EFF is the effective date of the Mapping ID's Status, STA is the
"IX",757.33,757.33,"G",.1,3,0)
Status (1=Active 0=Inactive), IEN is the location in file 757.33
"IX",757.33,757.33,"G",.1,4,0)
where the Mapping ID is stored.
"IX",757.33,757.33,"G",1)
S ^LEX(757.33,"G",$E(X(1),1,15),$E(X(2),1,16),$E(X(3),1,8),DA(1),DA)=""
"IX",757.33,757.33,"G",2)
K ^LEX(757.33,"G",$E(X(1),1,15),$E(X(2),1,16),$E(X(3),1,8),DA(1),DA)
"IX",757.33,757.33,"G",2.5)
K ^LEX(757.33,"G")
"IX",757.33,757.33,"G",11.1,0)
^.114IA^3^3
"IX",757.33,757.33,"G",11.1,1,0)
1^C^^^15^1^^Enter Mapping ID
"IX",757.33,757.33,"G",11.1,1,1.5)
S X=$P($G(^LEX(757.33,DA(1),0)),U)
"IX",757.33,757.33,"G",11.1,2,0)
2^F^757.333^.01^16^2^F^Enter Effective Date
"IX",757.33,757.33,"G",11.1,2,3)

"IX",757.33,757.33,"G",11.1,3,0)
3^F^757.333^1^8^3^F^Enter Activation Status
"IX",757.33,757.33,"G",11.1,3,3)

"IX",757.33,757.333,"ACHGD",0)
757.333^ACHGD^Change Date^MU^^F^IR^I^757.333^^^^^A
"IX",757.33,757.333,"ACHGD",.1,0)
^^4^4^3080815^
"IX",757.33,757.333,"ACHGD",.1,1,0)
The purpose of this action is to populate the CHANGE DATE
"IX",757.33,757.333,"ACHGD",.1,2,0)
field #2 of the STATUS HISTORY sub-file #757.333 with the
"IX",757.33,757.333,"ACHGD",.1,3,0)
current date and time whenever a status (active or inactive)
"IX",757.33,757.333,"ACHGD",.1,4,0)
is added or edited.
"IX",757.33,757.333,"ACHGD",1)
S $P(^LEX(757.33,+($G(DA(1))),2,+($G(DA)),0),U,3)=$$NOW^XLFDT
"IX",757.33,757.333,"ACHGD",1.4)
S X=X1(1)'=X2(1)
"IX",757.33,757.333,"ACHGD",2)
Q
"IX",757.33,757.333,"ACHGD",11.1,0)
^.114IA^1^1
"IX",757.33,757.333,"ACHGD",11.1,1,0)
1^F^757.333^1^8^^F^Enter Status
"KRN",101,7557,-1)
0^1
"KRN",101,7557,0)
LEX MAPPING CHANGE EVENT^LEX MAP CHANGE^^A^^^^^^^^
"KRN",101,7557,20)
D CTRL^LEXTRAN3
"KRN",101,7557,21,0)
^101.021A
"KRN",101,7557,24)

"KRN",101,7557,99)
62418,53511
"MBREQ")
0
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"PKG",574,-1)
1^1
"PKG",574,0)
LEXICON UTILITY^LEX^Medical and Biomedical Terminology System.
"PKG",574,20,0)
^9.402P^^
"PKG",574,22,0)
^9.49I^1^1
"PKG",574,22,1,0)
2.0^2960915^2970127^1
"PKG",574,22,1,"PAH",1,0)
58^3120726^520736413
"PRE")
LEX2058
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","LEX2058")
0^^B9292726^n/a
"RTN","LEX2058",1,0)
LEX2058 ;ISL/FJF - Environment Check/Pre/Post Install ; 16 Sep 2011  11:44 AM
"RTN","LEX2058",2,0)
 ;;2.0;LEXICON UTILITY;**58**;Sep 23, 1996;Build 53
"RTN","LEX2058",3,0)
 ;                     
"RTN","LEX2058",4,0)
 ; External References
"RTN","LEX2058",5,0)
 ;   DBIA 10015  EN^DIQ1
"RTN","LEX2058",6,0)
 ;   DBIA 10141  $$PATCH^XPDUTL
"RTN","LEX2058",7,0)
 ;   DBIA 10141  $$VERSION^XPDUTL
"RTN","LEX2058",8,0)
 ;   DBIA 10141  BMES^XPDUTL
"RTN","LEX2058",9,0)
 ;   DBIA 10141  MES^XPDUTL
"RTN","LEX2058",10,0)
 ;                            
"RTN","LEX2058",11,0)
ENV ; LEX*2.0*58 Environment Check
"RTN","LEX2058",12,0)
 ;                    
"RTN","LEX2058",13,0)
 ;   General
"RTN","LEX2058",14,0)
 W !," Problem List Mapping Subset Update",!
"RTN","LEX2058",15,0)
 ;
"RTN","LEX2058",16,0)
 N LEXBUILD,LEXIGHF,LEXREQP,LEXLREV,LEXG,LEXE
"RTN","LEX2058",17,0)
 D IMP
"RTN","LEX2058",18,0)
 ;
"RTN","LEX2058",19,0)
 ;     No user
"RTN","LEX2058",20,0)
 D:+$$UR'>0 ET("User not defined (DUZ)")
"RTN","LEX2058",21,0)
 ;
"RTN","LEX2058",22,0)
 ;     No IO
"RTN","LEX2058",23,0)
 D:+$$SY'>0 ET("Undefined IO variable(s)")
"RTN","LEX2058",24,0)
 I $D(LEXE) D ABRT Q
"RTN","LEX2058",25,0)
 ;                    
"RTN","LEX2058",26,0)
 ;   Load Distribution
"RTN","LEX2058",27,0)
 ;
"RTN","LEX2058",28,0)
 ;     XPDENV = 0 Environment Check during Load
"RTN","LEX2058",29,0)
 ;
"RTN","LEX2058",30,0)
 ;       Check Version (2.0)
"RTN","LEX2058",31,0)
 I $$VERSION^XPDUTL("LEX")'="2.0" D  D ABRT Q
"RTN","LEX2058",32,0)
 .D ET("Version 2.0 not found.  Please install Lexicon Utility v 2.0")
"RTN","LEX2058",33,0)
 ;
"RTN","LEX2058",34,0)
 ;       Check Required Patches
"RTN","LEX2058",35,0)
 D:'$L($G(LEXREQP)) IMP
"RTN","LEX2058",36,0)
 I $L(LEXREQP) D
"RTN","LEX2058",37,0)
 .N LEXPAT,LEXI,LEXPN
"RTN","LEX2058",38,0)
 .F LEXI=1:1 Q:'$L($P(LEXREQP,";",LEXI))  D
"RTN","LEX2058",39,0)
 ..S LEXPAT=$P(LEXREQP,";",LEXI)
"RTN","LEX2058",40,0)
 ..S LEXPN=$$PATCH^XPDUTL(LEXPAT)
"RTN","LEX2058",41,0)
 ..W !,"   Checking for ",LEXPAT I +LEXPN>0 H 1 W " - installed"
"RTN","LEX2058",42,0)
 ..I +LEXPN'>0 D ET((LEXPAT_" not found, please install "_LEXPAT_" before continuing"))
"RTN","LEX2058",43,0)
 I $D(LEXE) D ABRT Q
"RTN","LEX2058",44,0)
 I '$D(LEXFULL)&(+($G(XPDENV))'=1) D QUIT Q
"RTN","LEX2058",45,0)
 ;                    
"RTN","LEX2058",46,0)
 ;   Install Package(s)
"RTN","LEX2058",47,0)
 ;
"RTN","LEX2058",48,0)
 ;     XPDENV = 1 Environment Check during Install
"RTN","LEX2058",49,0)
 ;
"RTN","LEX2058",50,0)
 ;       Check Data "is installed" or "is translated"
"RTN","LEX2058",51,0)
 D QUIT
"RTN","LEX2058",52,0)
 Q
"RTN","LEX2058",53,0)
 ;
"RTN","LEX2058",54,0)
QUIT ;     Quit -  Passed Environment Check
"RTN","LEX2058",55,0)
 K LEXFULL D OK
"RTN","LEX2058",56,0)
 Q
"RTN","LEX2058",57,0)
 ;
"RTN","LEX2058",58,0)
EXIT ;     Exit -  Failed Environment Check
"RTN","LEX2058",59,0)
 D:$D(LEXE) ED
"RTN","LEX2058",60,0)
 S XPDQUIT=2
"RTN","LEX2058",61,0)
 K LEXE,LEXFULL
"RTN","LEX2058",62,0)
 Q
"RTN","LEX2058",63,0)
 ;
"RTN","LEX2058",64,0)
ABRT ;     Abort - Failed Environment Check, KILL the distribution
"RTN","LEX2058",65,0)
 D:$D(LEXE) ED
"RTN","LEX2058",66,0)
 S XPDABORT=1,XPDQUIT=1,XPDQUIT("LEX*2.0*58")=1
"RTN","LEX2058",67,0)
 K LEXE,LEXFULL
"RTN","LEX2058",68,0)
 Q
"RTN","LEX2058",69,0)
 ;               
"RTN","LEX2058",70,0)
 ; Checks
"RTN","LEX2058",71,0)
 ;
"RTN","LEX2058",72,0)
SY() ;   Check System variables
"RTN","LEX2058",73,0)
 Q:'$D(IO)!('$D(IOF))!('$D(IOM))!('$D(ION))!('$D(IOSL))!('$D(IOST)) 0
"RTN","LEX2058",74,0)
 Q 1
"RTN","LEX2058",75,0)
 ;
"RTN","LEX2058",76,0)
UR() ;   Check User variables
"RTN","LEX2058",77,0)
 Q:'$L($G(DUZ(0))) 0
"RTN","LEX2058",78,0)
 Q:+$G(DUZ)=0!($$NOTDEF(+$G(DUZ))) 0
"RTN","LEX2058",79,0)
 Q 1
"RTN","LEX2058",80,0)
 ;            
"RTN","LEX2058",81,0)
 ; Error messages
"RTN","LEX2058",82,0)
 ; 
"RTN","LEX2058",83,0)
ET(X) ;   Error Text
"RTN","LEX2058",84,0)
 N LEXI
"RTN","LEX2058",85,0)
 S LEXI=+$G(LEXE(0)),LEXI=LEXI+1,LEXE(LEXI)="    "_$G(X),LEXE(0)=LEXI
"RTN","LEX2058",86,0)
 Q
"RTN","LEX2058",87,0)
ED ;   Error Display
"RTN","LEX2058",88,0)
 N LEXI S LEXI=0 F  S LEXI=$O(LEXE(LEXI)) Q:+LEXI=0  D M(LEXE(LEXI))
"RTN","LEX2058",89,0)
 D M(" ") K LEXE Q
"RTN","LEX2058",90,0)
 ;                   
"RTN","LEX2058",91,0)
 ; Miscellaneous
"RTN","LEX2058",92,0)
 ;
"RTN","LEX2058",93,0)
IMP ;   Import names
"RTN","LEX2058",94,0)
 S LEXLREV=58,LEXREQP="LEX*2.0*51",LEXBUILD="LEX*2.0*58"
"RTN","LEX2058",95,0)
 Q
"RTN","LEX2058",96,0)
 ;
"RTN","LEX2058",97,0)
NOTDEF(IEN) ;   Check to see if user is defined
"RTN","LEX2058",98,0)
 N DA,DR,DIQ,LEX,DIC
"RTN","LEX2058",99,0)
 S DA=IEN,DR=.01,DIC=200,DIQ="LEX"
"RTN","LEX2058",100,0)
 D EN^DIQ1
"RTN","LEX2058",101,0)
 Q '$D(LEX)
"RTN","LEX2058",102,0)
 ;
"RTN","LEX2058",103,0)
OK ;   Environment is OK
"RTN","LEX2058",104,0)
 N LEXBUILD,LEXIGHF,LEXREQP,LEXLREV,LEXT
"RTN","LEX2058",105,0)
 D IMP S LEXT="  Environment "_$S($L(LEXBUILD):("for patch/build "_LEXBUILD_" "),1:"")_"is ok"
"RTN","LEX2058",106,0)
 D BM(LEXT),M(" ")
"RTN","LEX2058",107,0)
 Q
"RTN","LEX2058",108,0)
 ;
"RTN","LEX2058",109,0)
BM(X) ;   Blank Line with Message
"RTN","LEX2058",110,0)
 D BMES^XPDUTL($G(X))
"RTN","LEX2058",111,0)
 Q
"RTN","LEX2058",112,0)
 ;
"RTN","LEX2058",113,0)
M(X) ;   Message
"RTN","LEX2058",114,0)
 D MES^XPDUTL($G(X))
"RTN","LEX2058",115,0)
 Q
"RTN","LEX2058",116,0)
 ;
"RTN","LEX2058",117,0)
TRIM(X) ;   Trim Spaces
"RTN","LEX2058",118,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEX2058",119,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","LEX2058",120,0)
 Q X
"RTN","LEX2058P")
0^^B1175799^n/a
"RTN","LEX2058P",1,0)
LEX2058P ;ISL/FJF - Pre/Post Install ; 16 Sep 2011  11:45 AM
"RTN","LEX2058P",2,0)
 ;;2.0;LEXICON UTILITY;**58**;Sep 23, 1996;Build 53
"RTN","LEX2058P",3,0)
 ;
"RTN","LEX2058P",4,0)
 ; External References
"RTN","LEX2058P",5,0)
 ;   DBIA 10086  HOME^%ZIS
"RTN","LEX2058P",6,0)
 ;   DBIA  2052  $$GET1^DID
"RTN","LEX2058P",7,0)
 ;   DBIA  2055  PRD^DILFD
"RTN","LEX2058P",8,0)
 ;   DBIA 10014  EN^DIU2
"RTN","LEX2058P",9,0)
 ;   DBIA 10141  BMES^XPDUTL
"RTN","LEX2058P",10,0)
 ;   DBIA 10141  MES^XPDUTL
"RTN","LEX2058P",11,0)
 ;                      
"RTN","LEX2058P",12,0)
 Q
"RTN","LEX2058P",13,0)
 ;
"RTN","LEX2058P",14,0)
POST ; LEX*2.0*58 Post-Install
"RTN","LEX2058P",15,0)
 ;
"RTN","LEX2058P",16,0)
 ;-----------------------------
"RTN","LEX2058P",17,0)
 ;   Rebuild indices
"RTN","LEX2058P",18,0)
 D IND
"RTN","LEX2058P",19,0)
 ;
"RTN","LEX2058P",20,0)
 ;-----------------------------
"RTN","LEX2058P",21,0)
 ;   Send a Install Message
"RTN","LEX2058P",22,0)
 D MSG
"RTN","LEX2058P",23,0)
 ;
"RTN","LEX2058P",24,0)
 Q
"RTN","LEX2058P",25,0)
 ;-----------------------------
"RTN","LEX2058P",26,0)
 ;
"RTN","LEX2058P",27,0)
 ;
"RTN","LEX2058P",28,0)
IND ; Rebuild indices
"RTN","LEX2058P",29,0)
 ; Rebuild indices for 757.33
"RTN","LEX2058P",30,0)
 N DIK
"RTN","LEX2058P",31,0)
 D BMES^XPDUTL("Rebuilding indices")
"RTN","LEX2058P",32,0)
 D BMES^XPDUTL("")
"RTN","LEX2058P",33,0)
 S DIK="^LEX(757.33," D IXALL2^DIK,IXALL^DIK
"RTN","LEX2058P",34,0)
 D BMES^XPDUTL("Index rebuild complete")
"RTN","LEX2058P",35,0)
 Q
"RTN","LEX2058P",36,0)
MSG ; Send Installation Message to G.LEXICON
"RTN","LEX2058P",37,0)
 Q:+($G(DUZ))=0!($$NOTDEF^LEX2058($G(DUZ)))
"RTN","LEX2058P",38,0)
 D HOME^%ZIS
"RTN","LEX2058P",39,0)
 N DIFROM,LEXLREV,LEXLAST,LEXBUILD,LEXIGHF,LEXSHORT
"RTN","LEX2058P",40,0)
 S LEXSHORT=1
"RTN","LEX2058P",41,0)
 D IMP^LEX2058,POST^LEXXFI
"RTN","LEX2058P",42,0)
 Q
"RTN","LEXTRAN3")
0^1^B14502365^n/a
"RTN","LEXTRAN3",1,0)
LEXTRAN3 ;ISL/FJF - Lexicon Process MFS Mapping Update Change ; 30 Aug 2011  12:27 AM
"RTN","LEXTRAN3",2,0)
 ;;2.0;LEXICON UTILITY;**58**;Sep 23, 1996;Build 53
"RTN","LEXTRAN3",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified
"RTN","LEXTRAN3",4,0)
 ; 
"RTN","LEXTRAN3",5,0)
 ; This routine is invoked by the entry action logic of the
"RTN","LEXTRAN3",6,0)
 ; 'LEX MAPPING CHANGE EVENT' protocol which in turn is triggered
"RTN","LEXTRAN3",7,0)
 ; by a new style cross-reference field monitor for the either of
"RTN","LEXTRAN3",8,0)
 ; the two record indices 'AMAP' or 'AMAPS' on file 757.33.
"RTN","LEXTRAN3",9,0)
 ; 
"RTN","LEXTRAN3",10,0)
 ; External References
"RTN","LEXTRAN3",11,0)
 ; DBIA 5782  SCTMAP^GMPLX1
"RTN","LEXTRAN3",12,0)
 ;   
"RTN","LEXTRAN3",13,0)
CTRL ; control
"RTN","LEXTRAN3",14,0)
 ;
"RTN","LEXTRAN3",15,0)
 ; check XUHUIX* arrays to see if before and after are different
"RTN","LEXTRAN3",16,0)
 ; if they are the same then take no action
"RTN","LEXTRAN3",17,0)
 ; XUHUIX* arrays are inherited from x-reference field monitor and 
"RTN","LEXTRAN3",18,0)
 ; thus exist before control passes to this routine (LEXTRAN3)
"RTN","LEXTRAN3",19,0)
 ; 
"RTN","LEXTRAN3",20,0)
 I '$$CHANGE() Q
"RTN","LEXTRAN3",21,0)
 ;
"RTN","LEXTRAN3",22,0)
 ; change processing
"RTN","LEXTRAN3",23,0)
 N PLSUB,STATUS,RECORD,SCTCDE,ICDCDE,PRFIEN,MAPID,SCTMAPID,MAPORD
"RTN","LEXTRAN3",24,0)
 ;initiate variables
"RTN","LEXTRAN3",25,0)
 D INIT
"RTN","LEXTRAN3",26,0)
 ;
"RTN","LEXTRAN3",27,0)
 ; check to ensure SNOMED CT to ICD mapping (no 1 in 757.33)
"RTN","LEXTRAN3",28,0)
 I MAPID'=SCTMAPID Q
"RTN","LEXTRAN3",29,0)
 ;
"RTN","LEXTRAN3",30,0)
 ;obtain preferred term IEN
"RTN","LEXTRAN3",31,0)
 S PRFIEN=$$PRFIEN(SCTCDE)
"RTN","LEXTRAN3",32,0)
 ;
"RTN","LEXTRAN3",33,0)
 ; If the status was set to 1 (active) then move concept into 
"RTN","LEXTRAN3",34,0)
 ;   the problem list subset 
"RTN","LEXTRAN3",35,0)
 I STATUS=1 D  Q
"RTN","LEXTRAN3",36,0)
 .;   add concept to PLS subset, provided that it is not already
"RTN","LEXTRAN3",37,0)
 .;   in the subset
"RTN","LEXTRAN3",38,0)
 .I '$$INPSUB(PRFIEN,PLSUB) D ADDPLS(PRFIEN,PLSUB)
"RTN","LEXTRAN3",39,0)
 .;
"RTN","LEXTRAN3",40,0)
 .;   and then update file 9000011
"RTN","LEXTRAN3",41,0)
 .D UPDPLP(SCTCDE,ICDCDE,MAPORD)
"RTN","LEXTRAN3",42,0)
 ;
"RTN","LEXTRAN3",43,0)
 ; Otherwise status was set to 0; thus remove concept from problem
"RTN","LEXTRAN3",44,0)
 ;   list subset
"RTN","LEXTRAN3",45,0)
 ;
"RTN","LEXTRAN3",46,0)
 ;   but first check to see if concept is involved in any other mappings
"RTN","LEXTRAN3",47,0)
 ;   if it is then do not remove from problem list subset
"RTN","LEXTRAN3",48,0)
 I $$ACTVMAP(SCTCDE,MAPID) Q
"RTN","LEXTRAN3",49,0)
 ;
"RTN","LEXTRAN3",50,0)
 D DELPLS
"RTN","LEXTRAN3",51,0)
 ;
"RTN","LEXTRAN3",52,0)
 Q
"RTN","LEXTRAN3",53,0)
INIT ; initiate variables
"RTN","LEXTRAN3",54,0)
 ; 
"RTN","LEXTRAN3",55,0)
 ; record data
"RTN","LEXTRAN3",56,0)
 N IMIEN
"RTN","LEXTRAN3",57,0)
 S STATUS=XUHUIX(2)
"RTN","LEXTRAN3",58,0)
 S IMIEN=$S($D(XUHUIDA(1)):XUHUIDA(1),1:XUHUIDA)
"RTN","LEXTRAN3",59,0)
 S RECORD=^LEX(757.33,IMIEN,0)
"RTN","LEXTRAN3",60,0)
 S SCTCDE=$P(RECORD,U,2)
"RTN","LEXTRAN3",61,0)
 S ICDCDE=$P(RECORD,U,3)
"RTN","LEXTRAN3",62,0)
 S MAPID=$P(RECORD,U,4)
"RTN","LEXTRAN3",63,0)
 S MAPORD=$P(^LEX(757.33,IMIEN,3),U)
"RTN","LEXTRAN3",64,0)
 ;
"RTN","LEXTRAN3",65,0)
 ; update data
"RTN","LEXTRAN3",66,0)
 ; 
"RTN","LEXTRAN3",67,0)
 S PLSUB=7000038 ; problem list subset
"RTN","LEXTRAN3",68,0)
 S SCTMAPID=1 ; SNOMED to ICD9 mapping
"RTN","LEXTRAN3",69,0)
 Q
"RTN","LEXTRAN3",70,0)
PRFIEN(SCTCDE) ; get preferred term IEN in 757.01 for subset update 
"RTN","LEXTRAN3",71,0)
 N NOSYNS,LEX,PRFIEN
"RTN","LEXTRAN3",72,0)
 S NOSYNS=$$GETSYN^LEXTRAN1("SCT",SCTCDE,,,1)
"RTN","LEXTRAN3",73,0)
 S PRFIEN=$P(LEX("P"),U,2)
"RTN","LEXTRAN3",74,0)
 Q PRFIEN
"RTN","LEXTRAN3",75,0)
 ;
"RTN","LEXTRAN3",76,0)
INPSUB(PRF,SUB) ; check if concept PRF is member of subset SUB
"RTN","LEXTRAN3",77,0)
 ;
"RTN","LEXTRAN3",78,0)
 N IN,SIEN
"RTN","LEXTRAN3",79,0)
 S SIEN="",IN=0
"RTN","LEXTRAN3",80,0)
 F  S SIEN=$O(^LEX(757.21,"B",PRF,SIEN)) Q:SIEN=""  D  Q:IN=1
"RTN","LEXTRAN3",81,0)
 .I $P(^LEX(757.21,SIEN,0),U,2)=SUB S IN=1
"RTN","LEXTRAN3",82,0)
 Q IN
"RTN","LEXTRAN3",83,0)
 ;
"RTN","LEXTRAN3",84,0)
CHANGE() ; check if the after data is different from the before data
"RTN","LEXTRAN3",85,0)
 ; i.e. detect if any change
"RTN","LEXTRAN3",86,0)
 N XSUB,CHANGE
"RTN","LEXTRAN3",87,0)
 S (XSUB,CHANGE)=0
"RTN","LEXTRAN3",88,0)
 F  S XSUB=$O(XUHUIX1(XSUB)) Q:+XSUB=0  D  Q:CHANGE=1
"RTN","LEXTRAN3",89,0)
 .I XUHUIX1(XSUB)'=XUHUIX2(XSUB) S CHANGE=1 Q
"RTN","LEXTRAN3",90,0)
 Q CHANGE
"RTN","LEXTRAN3",91,0)
 ;
"RTN","LEXTRAN3",92,0)
ADDPLS(PRF,SUB) ; Add the concept to the problem list subset
"RTN","LEXTRAN3",93,0)
 ;
"RTN","LEXTRAN3",94,0)
 ; determine IEN for preferred term
"RTN","LEXTRAN3",95,0)
 N FDA,ORIEN,SUBERR
"RTN","LEXTRAN3",96,0)
 S FDA(757.21,"+1,",.01)=PRF
"RTN","LEXTRAN3",97,0)
 S FDA(757.21,"+1,",1)=SUB
"RTN","LEXTRAN3",98,0)
 S ORIEN(1)=$$SUBIEN()
"RTN","LEXTRAN3",99,0)
 D UPDATE^DIE(,"FDA","ORIEN","SUBERR")
"RTN","LEXTRAN3",100,0)
 Q
"RTN","LEXTRAN3",101,0)
 ;
"RTN","LEXTRAN3",102,0)
UPDPLP(SCT,ICD,ORD) ; update patient problem list file
"RTN","LEXTRAN3",103,0)
 ; SCTMAP^GMPLX1 is a CPRS problem list function which scans the patient
"RTN","LEXTRAN3",104,0)
 ; data file and updates the SNOMED CT code field on the basis of the
"RTN","LEXTRAN3",105,0)
 ; mapping change
"RTN","LEXTRAN3",106,0)
 ; 
"RTN","LEXTRAN3",107,0)
 ; check for existence of function; if not found do not attempt to call
"RTN","LEXTRAN3",108,0)
 I $T(SCTMAP^GMPLX1)="" Q
"RTN","LEXTRAN3",109,0)
 D SCTMAP^GMPLX1(SCT,ICD,ORD)
"RTN","LEXTRAN3",110,0)
 Q
"RTN","LEXTRAN3",111,0)
 ;
"RTN","LEXTRAN3",112,0)
DELPLS ; remove a concept from subset
"RTN","LEXTRAN3",113,0)
 ;
"RTN","LEXTRAN3",114,0)
 N FDA,SUBERR
"RTN","LEXTRAN3",115,0)
 S FDA(757.21,$$DELIEN()_",",.01)="@"
"RTN","LEXTRAN3",116,0)
 D FILE^DIE(,"FDA","SUBERR")
"RTN","LEXTRAN3",117,0)
 Q
"RTN","LEXTRAN3",118,0)
 ;
"RTN","LEXTRAN3",119,0)
ACTVMAP(SRC,MAP) ; return whether active map exists for given code and
"RTN","LEXTRAN3",120,0)
 ; mapping identifier
"RTN","LEXTRAN3",121,0)
 ;
"RTN","LEXTRAN3",122,0)
 N ORD,TAR,IEN,ACT,LDAT,SIEN,STAT
"RTN","LEXTRAN3",123,0)
 S (ORD,TAR,IEN)=""
"RTN","LEXTRAN3",124,0)
 S ACT=0
"RTN","LEXTRAN3",125,0)
 F  S ORD=$O(^LEX(757.33,"C",MAP,SRC,ORD)) Q:ORD=""  D  Q:ACT=1
"RTN","LEXTRAN3",126,0)
 .F  S TAR=$O(^LEX(757.33,"C",MAP,SRC,ORD,TAR)) Q:TAR=""  D  Q:ACT=1
"RTN","LEXTRAN3",127,0)
 ..F  S IEN=$O(^LEX(757.33,"C",MAP,SRC,ORD,TAR,IEN)) Q:IEN=""  D  Q:ACT=1
"RTN","LEXTRAN3",128,0)
 ...S LDAT=$O(^LEX(757.33,IEN,2,"B",""),-1)
"RTN","LEXTRAN3",129,0)
 ...S SIEN=$O(^LEX(757.33,IEN,2,"B",LDAT,""))
"RTN","LEXTRAN3",130,0)
 ...S STAT=$P(^LEX(757.33,IEN,2,SIEN,0),U,2)
"RTN","LEXTRAN3",131,0)
 ...I STAT=1 S ACT=1
"RTN","LEXTRAN3",132,0)
 Q ACT
"RTN","LEXTRAN3",133,0)
 ;
"RTN","LEXTRAN3",134,0)
SUBIEN() ; get next IEN for addition to 757.21
"RTN","LEXTRAN3",135,0)
 ;
"RTN","LEXTRAN3",136,0)
 N BASE,C
"RTN","LEXTRAN3",137,0)
 S BASE=70000000,C=":"
"RTN","LEXTRAN3",138,0)
 Q $S($O(^LEX(757.21,C),-1)<BASE:BASE,1:$O(^LEX(757.21,C),-1)+1)
"RTN","LEXTRAN3",139,0)
 ;
"RTN","LEXTRAN3",140,0)
DELIEN() ; determine IEN of record to be erased from 757.21
"RTN","LEXTRAN3",141,0)
 ;
"RTN","LEXTRAN3",142,0)
 N SSIEN,DIEN
"RTN","LEXTRAN3",143,0)
 S (SSIEN,DIEN)=""
"RTN","LEXTRAN3",144,0)
 F  Q:DIEN'=""  S SSIEN=$O(^LEX(757.21,"B",PRFIEN,SSIEN)) Q:SSIEN=""  D
"RTN","LEXTRAN3",145,0)
 .I $P(^LEX(757.21,SSIEN,0),U,2)=PLSUB S DIEN=SSIEN
"RTN","LEXTRAN3",146,0)
 Q DIEN
"SEC","^DIC",757.33,757.33,0,"AUDIT")
@
"SEC","^DIC",757.33,757.33,0,"DD")
@
"SEC","^DIC",757.33,757.33,0,"DEL")
@
"SEC","^DIC",757.33,757.33,0,"LAYGO")
@
"SEC","^DIC",757.33,757.33,0,"RD")
@
"SEC","^DIC",757.33,757.33,0,"WR")
@
"VER")
8.0^22.0
"^DD",757.33,757.33,0)
FIELD^^5^7
"^DD",757.33,757.33,0,"DDA")
N
"^DD",757.33,757.33,0,"DT")
3110809
"^DD",757.33,757.33,0,"IX","AMAPDEF",757.33,.02)

"^DD",757.33,757.33,0,"IX","B",757.33,.01)

"^DD",757.33,757.33,0,"NM","MAPPINGS")

"^DD",757.33,757.33,0,"VRPK")
LEX
"^DD",757.33,757.33,0,"VRRV")
78^3111001
"^DD",757.33,757.33,.01,0)
MAPPING ID^RNJ12,0^^0;1^K:+X'=X!(X>999999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",757.33,757.33,.01,1,0)
^.1
"^DD",757.33,757.33,.01,1,1,0)
757.33^B
"^DD",757.33,757.33,.01,1,1,1)
S ^LEX(757.33,"B",$E(X,1,30),DA)=""
"^DD",757.33,757.33,.01,1,1,2)
K ^LEX(757.33,"B",$E(X,1,30),DA)
"^DD",757.33,757.33,.01,1,1,"%D",0)
^^5^5^3080814^
"^DD",757.33,757.33,.01,1,1,"%D",1,0)
^LEX(757.33,"B",MID,IEN) - Where MID is the Mapping
"^DD",757.33,757.33,.01,1,1,"%D",2,0)
Identifier unique within a Mapping Definition and
"^DD",757.33,757.33,.01,1,1,"%D",3,0)
IEN is the Internal Entry Number in the Mappings
"^DD",757.33,757.33,.01,1,1,"%D",4,0)
file #757.33 where the Mapping Identifier is
"^DD",757.33,757.33,.01,1,1,"%D",5,0)
located. 
"^DD",757.33,757.33,.01,3)
Type a number between 1 and 999999999999, 0 decimal digits.
"^DD",757.33,757.33,.01,21,0)
^^4^4^3110809^^^
"^DD",757.33,757.33,.01,21,1,0)
The purpose of this field is to hold the mapping ID. The mapping ID 
"^DD",757.33,757.33,.01,21,2,0)
may be a VUID or a Lexicon ID. If it is a VUID it is assigned for each 
"^DD",757.33,757.33,.01,21,3,0)
individual map by the VETS system. Each mapping ID must indentify 
"^DD",757.33,757.33,.01,21,4,0)
uniquely the mapping of one source code to one, and only one, target code.
"^DD",757.33,757.33,.01,"DT")
3110809
"^DD",757.33,757.33,.02,0)
MAPPING DEFINITION^P757.32'^LEX(757.32,^0;4^Q
"^DD",757.33,757.33,.02,1,0)
^.1
"^DD",757.33,757.33,.02,1,1,0)
757.33^AMAPDEF
"^DD",757.33,757.33,.02,1,1,1)
S ^LEX(757.33,"AMAPDEF",$E(X,1,30),DA)=""
"^DD",757.33,757.33,.02,1,1,2)
K ^LEX(757.33,"AMAPDEF",$E(X,1,30),DA)
"^DD",757.33,757.33,.02,1,1,"DT")
3081110
"^DD",757.33,757.33,.02,3)
Select a Mapping Definition (from file 757.32)
"^DD",757.33,757.33,.02,21,0)
^^4^4^3080813^
"^DD",757.33,757.33,.02,21,1,0)
This is the Mapping Definition for a specific mapping record
"^DD",757.33,757.33,.02,21,2,0)
which defines source coding system is being mapped to which 
"^DD",757.33,757.33,.02,21,3,0)
target coding system.  This Mapping Definition is stored in
"^DD",757.33,757.33,.02,21,4,0)
the Mapping Definition file #757.32.
"^DD",757.33,757.33,.02,"DT")
3080820
"^DD",757.33,757.33,1,0)
SOURCE CODE^F^^0;2^K:$L(X)>15!($L(X)<2) X
"^DD",757.33,757.33,1,3)
Answer must be 2-15 characters in length
"^DD",757.33,757.33,1,21,0)
^^4^4^3080813^
"^DD",757.33,757.33,1,21,1,0)
This is a code from the Source Coding System of the Mapping
"^DD",757.33,757.33,1,21,2,0)
Definition (file 757.32).  It is the basis of the mapping 
"^DD",757.33,757.33,1,21,3,0)
(source) and will be mapped to a code from another coding 
"^DD",757.33,757.33,1,21,4,0)
system.
"^DD",757.33,757.33,1,"DT")
3080820
"^DD",757.33,757.33,2,0)
TARGET CODE^F^^0;3^K:$L(X)>10!($L(X)<2) X
"^DD",757.33,757.33,2,3)
Answer must be 2-10 characters in length
"^DD",757.33,757.33,2,21,0)
^^4^4^3080813^
"^DD",757.33,757.33,2,21,1,0)
This is a code from the Target Coding System of the Mapping
"^DD",757.33,757.33,2,21,2,0)
Definition (file 757.32).  It is the result of the mapping 
"^DD",757.33,757.33,2,21,3,0)
(target) based on the source code from another coding
"^DD",757.33,757.33,2,21,4,0)
system.
"^DD",757.33,757.33,2,"DT")
3080820
"^DD",757.33,757.33,3,0)
STATUS HISTORY^757.333D^^2;0
"^DD",757.33,757.33,3,21,0)
^^2^2^3080813^
"^DD",757.33,757.33,3,21,1,0)
This multiple field contains a series of records indicating
"^DD",757.33,757.33,3,21,2,0)
the mapping status (active or inactive) over time.
"^DD",757.33,757.33,4,0)
MAPPING ORDER^RNJ5,0^^3;1^K:+X'=X!(X>30000)!(X<1)!(X?.E1"."1.N) X
"^DD",757.33,757.33,4,3)
Type a number between 1 and 30000, 0 Decimal Digits
"^DD",757.33,757.33,4,21,0)
^^5^5^3080814^
"^DD",757.33,757.33,4,21,1,0)
This field contains an integer that determines the order of preference
"^DD",757.33,757.33,4,21,2,0)
for when a single source code maps to multiple target codes. The order
"^DD",757.33,757.33,4,21,3,0)
will be determined by domain stewards responsible for the maintenance
"^DD",757.33,757.33,4,21,4,0)
of the mapping in question. If there is only one target for the source
"^DD",757.33,757.33,4,21,5,0)
code the value of this field will default to 1.
"^DD",757.33,757.33,4,"DT")
3080820
"^DD",757.33,757.33,5,0)
MATCH^S^1:FULL;0:PARTIAL;^0;5^Q
"^DD",757.33,757.33,5,1,0)
^.1^^0
"^DD",757.33,757.33,5,3)
1 = Fully Matched Mapping 0 = Partially Matched Mapping
"^DD",757.33,757.33,5,21,0)
^^6^6^3080814^
"^DD",757.33,757.33,5,21,1,0)
If the target code is a true match for the source code
"^DD",757.33,757.33,5,21,2,0)
then the value will be set to 1 indicating a fully 
"^DD",757.33,757.33,5,21,3,0)
compatible match.  If the target code is a partial match
"^DD",757.33,757.33,5,21,4,0)
for the source code then the value will be set to 0 
"^DD",757.33,757.33,5,21,5,0)
indicating a partial match and that human review is 
"^DD",757.33,757.33,5,21,6,0)
necessary to evaluate the mapping.
"^DD",757.33,757.33,5,"DT")
3080814
"^DD",757.33,757.333,0)
STATUS HISTORY SUB-FIELD^^2^3
"^DD",757.33,757.333,0,"DT")
3080813
"^DD",757.33,757.333,0,"IX","B",757.333,.01)

"^DD",757.33,757.333,0,"NM","STATUS HISTORY")

"^DD",757.33,757.333,0,"UP")
757.33
"^DD",757.33,757.333,.01,0)
EFFECTIVE DATE^D^^0;1^S %DT="E" D ^%DT S X=Y K:X<1 X
"^DD",757.33,757.333,.01,1,0)
^.1^^-1
"^DD",757.33,757.333,.01,1,1,0)
757.333^B
"^DD",757.33,757.333,.01,1,1,1)
S ^LEX(757.33,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",757.33,757.333,.01,1,1,2)
K ^LEX(757.33,DA(1),2,"B",$E(X,1,30),DA)
"^DD",757.33,757.333,.01,1,1,"%D",0)
^^5^5^3080820^
"^DD",757.33,757.333,.01,1,1,"%D",1,0)
^LEX(757.33,IEN,2,"B",EFF,HIS) - Where IEN is the
"^DD",757.33,757.333,.01,1,1,"%D",2,0)
Internal Entry Number for the Mapping, EFF is the
"^DD",757.33,757.333,.01,1,1,"%D",3,0)
Effective Date of the Mapping and HIS is the 
"^DD",757.33,757.333,.01,1,1,"%D",4,0)
Internal Entry Number where the Effective Date is
"^DD",757.33,757.333,.01,1,1,"%D",5,0)
stored in the Status Histroy sub-file 757.333.
"^DD",757.33,757.333,.01,3)
(No range limit on date)
"^DD",757.33,757.333,.01,21,0)
^^1^1^3080813^
"^DD",757.33,757.333,.01,21,1,0)
This is the date that the status was effective.
"^DD",757.33,757.333,.01,"DT")
3120726
"^DD",757.33,757.333,1,0)
STATUS^S^0:INACTIVE;1:ACTIVE;^0;2^Q
"^DD",757.33,757.333,1,1,0)
^.1^^-1
"^DD",757.33,757.333,1,1,2,0)
^^TRIGGER^757.333^2
"^DD",757.33,757.333,1,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^LEX(757.33,D0,2,D1,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC S X=% X ^DD(757.333,1,1,2,1.4)
"^DD",757.33,757.333,1,1,2,1.4)
S DIH=$G(^LEX(757.33,DIV(0),2,DIV(1),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=757.333,DIG=2 D ^DICR
"^DD",757.33,757.333,1,1,2,2)
Q
"^DD",757.33,757.333,1,1,2,"%D",0)
^^3^3^3080430^
"^DD",757.33,757.333,1,1,2,"%D",1,0)
The CHANGE DATE filed will be triggered whenever the STATUS field
"^DD",757.33,757.333,1,1,2,"%D",2,0)
is entered or updated. The triggered value will be NOW.
"^DD",757.33,757.333,1,1,2,"%D",3,0)
This field cannot be edited.
"^DD",757.33,757.333,1,1,2,"CREATE VALUE")
NOW
"^DD",757.33,757.333,1,1,2,"DELETE VALUE")
NO EFFECT
"^DD",757.33,757.333,1,1,2,"DT")
3080430
"^DD",757.33,757.333,1,1,2,"FIELD")
CHANGE DATE
"^DD",757.33,757.333,1,3)
Select Status (Active or Inactive)
"^DD",757.33,757.333,1,21,0)
^^1^1^3080814^
"^DD",757.33,757.333,1,21,1,0)
This is the status (active or inactive) of the mapping. 
"^DD",757.33,757.333,1,"DT")
3120726
"^DD",757.33,757.333,2,0)
CHANGE DATE^D^^0;3^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",757.33,757.333,2,3)
(No range limit on date)
"^DD",757.33,757.333,2,5,1,0)
757.333^1^2
"^DD",757.33,757.333,2,9)
^
"^DD",757.33,757.333,2,21,0)
^^4^4^3080818^
"^DD",757.33,757.333,2,21,1,0)
This field contains the timestamp for when the status 
"^DD",757.33,757.333,2,21,2,0)
is changed.  It is populated by the ACHGD Cross-Reference
"^DD",757.33,757.333,2,21,3,0)
(Action) of the STATUS field #1 of the STATUS HISTORY 
"^DD",757.33,757.333,2,21,4,0)
sub-file 757.333.
"^DD",757.33,757.333,2,"DT")
3080818
"^DIC",757.33,757.33,0)
MAPPINGS^757.33I
"^DIC",757.33,757.33,0,"GL")
^LEX(757.33,
"^DIC",757.33,757.33,"%",0)
^1.005^^0
"^DIC",757.33,757.33,"%D",0)
^^3^3^3080813^
"^DIC",757.33,757.33,"%D",1,0)
This file contains the mappings from one coding system to 
"^DIC",757.33,757.33,"%D",2,0)
another coding system.  Selection of a term or a code  from
"^DIC",757.33,757.33,"%D",3,0)
one coding system can be translated to another coding system.
"^DIC",757.33,"B","MAPPINGS",757.33)

"BLD",8459,6)
^78
**END**
**END**
